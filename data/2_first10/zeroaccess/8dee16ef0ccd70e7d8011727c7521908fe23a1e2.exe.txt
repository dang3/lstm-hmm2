push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
data16
pshufw
jo
jo
rcl
aad
ror
rol
pop
push
add
mov
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
xor
mov
adc
aam
and
dec
cmp
outsl
gs
loope
xchg
xchg
lds
push
sti
movsl
sub
cmp
adc
sysexit
jne
push
mov
sbb
inc
cwtl
sub
mov
mov
out
mov
and
cmpsb
pusha
jae
lods
jle
imul
jl
push
jne
push
adcb
ret
add
loope
dec
and
sub
cli
push
pop
mov
fstpl
mov
les
popa
cmp
xor
imul
push
jmp
lods
jno
xor
dec
hlt
jge
and
jns
sbb
das
aaa
cwtl
rorl
xchg
loop
orb
xchg
addl
insb
pop
sbb
and
imul
pop
and
xor
addr16
cmp
xchg
jmp
xor
mov
in
in
ret
sbb
and
pop
adc
mov
sbb
jle
or
xchg
lods
fsts
aad
icebp
xor
dec
or
inc
lahf
cmp
jno
lahf
mov
test
dec
xchg
lock
pop
ret
push
sub
mov
jmp
clc
icebp
mov
icebp
ficompl
mov
jo
jo
jo
jo
out
lahf
out
dec
pop
lcall
xor
mov
divb
fcmovnu
das
test
cmc
popa
enter
mov
inc
fadd
lret
jmp
mov
addr16
test
dec
ss
xor
cmc
in
mov
push
and
jae
pop
lahf
and
aam
addr16
pusha
sub
in
aas
stos
into
into
fwait
cmp
insl
lods
adc
sbb
or
addr16
rcrb
in
jmp
repnz
push
js
icebp
adc
ss
push
adc
bound
dec
xor
stos
jp
cmp
fsubrp
cmc
dec
pushf
xor
mov
push
cli
inc
adc
mov
cmpsb
outsl
or
aas
or
xlat
and
cmpsl
in
clc
adc
outsb
jno
insb
mov
jmp
stc
cmp
scas
and
js
adc
or
icebp
or
imul
lcall
fs
adc
mov
in
mov
push
loope
xor
les
xchg
loop
fiadds
pop
xchg
dec
push
jnp
xchg
test
ret
mov
movsb
pushf
jo
cli
jge
and
or
push
cmpsl
out
push
cmpsb
cld
paddsw
lret
push
ja
mov
jle
insb
scas
jmp
call
push
fmull
jnp
xchg
inc
nop
popa
or
push
fsubl
sub
stos
add
cmp
push
cmp
fildll
or
pop
leave
fistpl
push
mov
into
rcl
ret
add
lods
pushf
sbb
xchg
pusha
jecxz
xor
xchg
jno
push
test
popa
enter
sbb
fld
test
sbb
ret
jecxz
pop
loope
pop
das
push
dec
gs
ja
xchg
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
call
jl
jo
jle
jo
lock
xor
pop
or
scas
pop
cld
push
inc
push
stos
and
cwtl
xchg
out
adc
test
enter
sub
dec
adc
fcoml
or
push
jp
xchg
pop
test
add
pop
xor
inc
xchg
inc
or
cmp
outsl
lret
iret
xorl
stos
jo
ja
in
scas
jg
sub
in
ret
jge
jmp
shlb
push
mov
adc
dec
cld
cmpsl
pop
or
mov
xor
sub
jle
test
loopne
frstor
incl
mov
mov
adc
xchg
mov
pop
das
cmp
mov
jae
pop
xor
jno
xor
cwtl
adc
test
jnp
std
or
adc
jecxz
int3
imul
dec
sub
push
ljmp
std
inc
and
movsl
jne
ss
jnp
inc
lret
inc
test
les
test
outsl
jmp
pop
mov
cs
push
xchg
stos
js
cs
dec
insb
jo
sub
dec
pop
divl
xor
cs
in
rolb
add
sahf
insl
add
lea
idivb
pop
subl
dec
jecxz
cwtl
ljmp
mov
dec
xchg
add
sub
xchg
jp
gs
pop
aad
pushf
cmc
and
inc
leave
ss
fmull
push
dec
mov
xchg
and
fmuls
ss
inc
sti
or
add
push
out
adc
mov
movsb
pop
bswap
aas
push
inc
in
push
jae
outsl
xchg
je
add
xchg
sarb
dec
test
repz
xor
xor
dec
xchg
sbb
ds
ljmp
jno
daa
rol
cld
je
dec
cmp
push
repz
push
or
cmp
test
or
inc
lcall
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
sub
jp
jo
jle
jo
push
add
inc
pop
je
inc
lret
or
mov
xor
push
dec
cmp
xlat
cmp
push
lcall
leave
fldenv
in
sub
fdivrl
sub
lds
enter
xchg
xor
imul
std
mov
lods
pushf
out
iret
add
dec
lods
es
scas
aam
inc
jno
xlat
dec
pop
jbe
mov
popa
in
out
push
loopne
cs
push
daa
das
ret
out
les
cwtl
aas
insl
mov
mov
mov
jmp
stc
dec
adc
mov
pop
xorb
mov
adc
cltd
push
xor
pop
in
sbb
jbe
and
into
xor
je
shll
aad
es
into
repz
sbb
push
add
test
nop
lret
pusha
push
pop
hlt
add
add
scas
dec
outsb
push
pushf
jo
int
inc
jmp
cld
popa
repnz
push
jnp
popa
call
stos
or
aam
cld
xchg
sbb
jne
aaa
lcall
xchg
jmp
xor
rsm
and
orl
out
add
xchg
lods
fcoml
inc
cmp
sub
dec
pusha
add
ds
inc
mov
mov
sub
xorb
ds
int
jl
daa
loope
outsb
lret
inc
xchg
push
sbb
mov
sti
sti
ja
sub
cmpb
dec
cmp
sbb
inc
pop
fbld
or
mov
jg
dec
mov
mov
dec
and
xor
pop
mov
leave
cmp
pop
inc
insl
and
fcoms
xor
lahf
pop
iret
ds
pop
adc
xor
mull
test
fidivrl
sub
ja
inc
in
sub
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
into
xchg
jo
jo
jo
jo
add
dec
jle
das
push
cwtl
movsb
pop
mov
les
ds
adc
push
fisubrl
lock
adc
xchg
scas
pop
in
lods
repz
mov
jnp
push
sub
es
sub
sbb
loope
jnp
imul
push
xor
pop
mov
jle
pusha
inc
je
ficompl
xor
cs
sahf
xchg
dec
aad
shlb
and
jne
stos
popa
cmp
sbb
inc
push
imul
jl
rcrl
and
lods
cmp
xchg
mov
bound
cld
adc
mov
repnz
mov
cmpsl
mov
pop
mov
out
imul
cmp
lahf
sub
leave
mov
pop
lret
dec
push
xchg
scas
int3
pop
test
pop
cs
movsb
dec
dec
loopne
add
imul
out
js
repnz
adc
leave
and
jecxz
cmpb
adc
mov
sub
popf
mov
xor
mov
nop
jb
mov
xchg
insl
sbb
mov
loopne
adc
sbb
add
sarl
sbb
test
xor
data16
push
pop
sub
test
push
push
mov
xchg
dec
clc
inc
sbb
das
hlt
pop
push
xor
cmc
fs
imul
sbb
xchg
push
adc
xchg
xchg
pop
shl
rorb
jnp
call
inc
mov
jmp
and
cmp
adc
loopne
inc
shll
and
xchg
aad
xchg
orb
iret
add
imul
lahf
in
lds
mov
in
cmp
jmp
stc
push
negb
aas
xchg
mov
mov
fimuls
xor
lahf
dec
fnsave
getsec
pop
push
cli
subl
pop
mov
jae
xor
pushf
cmp
call
jge
lret
test
add
add
cltd
sbb
add
sub
add
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
or
jo
jo
jo
jo
xchg
cmp
rol
sbb
lret
fcompl
movsb
pop
jmp
xlat
and
loope
idivl
sub
push
scas
mov
shrb
pushf
int3
lcall
xchg
pop
or
test
pop
fdivr
jl
call
mov
sbb
test
push
test
cwtl
rcll
movsl
xor
adc
out
mov
pop
jmp
repnz
dec
xor
mov
imul
adc
in
or
stos
enter
inc
jnp
or
pop
iret
ja
add
or
call
inc
fs
pop
dec
or
loope
movl
xor
enter
dec
out
popa
insb
in
pop
mov
and
pushf
jmp
push
cmc
sbb
or
inc
adc
pop
pop
scas
sti
and
or
int
rcrb
subl
popf
es
sub
pop
movsb
lea
mov
arpl
add
dec
lods
cmp
lock
cs
xor
mov
sbb
push
mov
xchg
decl
or
adcb
dec
inc
xchg
jg
mov
mov
fidivl
incl
mov
in
lock
imul
add
sbbl
inc
adc
lods
or
or
sub
ss
dec
stos
jns
lods
out
inc
sub
fsubr
out
pop
mov
insb
dec
iret
lret
clc
adcb
mov
jb
std
mov
negl
pusha
stos
jmp
xchg
pop
xor
cld
aad
xchg
aad
imul
pusha
pop
lahf
mov
sub
cld
bound
frstor
aaa
xchg
mov
add
jo
mov
sbb
adc
mov
push
mov
inc
push
push
aas
jge
add
ljmp
inc
jbe
insb
xor
xchg
popa
leave
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
addb
jmp
jo
jo
fdivrs
add
in
inc
test
jae
or
mov
gs
or
jmp
in
sub
mov
add
inc
xor
push
mov
jl
lcall
xchg
cmp
sub
mov
rcll
sub
loop
mov
lock
and
jg
push
in
adc
fcoml
daa
mov
push
in
xchg
inc
pop
and
adc
shl
dec
jbe
daa
arpl
les
aas
int3
or
cwtl
pop
dec
push
jmp
repnz
aas
loopne
pop
sub
popf
mov
fisttps
mov
test
cmp
xchg
cmp
in
add
xchg
adc
xchg
cmp
ret
or
xlat
imulb
das
or
das
dec
sarb
fdivs
push
xchg
lods
mov
ss
pop
addb
xchg
adc
cmp
dec
jg
pop
mov
test
nop
int
sub
mov
or
jbe
js
sub
pop
daa
call
adc
loope
push
movsl
pop
and
dec
adc
lcall
enter
dec
or
aad
insl
inc
pop
jae
or
jno
in
add
pop
jge
stos
mov
movsl
iret
push
cmp
pop
mov
sub
fwait
cmpb
and
dec
inc
das
outsl
fidivrl
add
shll
subb
inc
incl
sahf
mov
lds
mov
add
or
rcl
out
sti
mov
jne
xor
mov
cwtl
in
inc
pop
cmp
test
cmpsl
sub
or
push
lret
cwtl
es
pop
sbb
lock
ja
jmpw
cmp
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
lcall
sbb
mov
xlat
repnz
push
mov
outsl
data16
xor
inc
aas
mov
jg
pop
in
xchg
jae
es
lahf
mov
sahf
je
xchg
popa
fwait
sti
in
call
inc
add
aam
fcompp
inc
gs
rcrb
sub
movsb
jns
xor
xor
js
push
add
pop
aas
mov
int
mov
xchg
insb
jns
subl
stos
lcall
pop
fs
add
popa
lock
or
jecxz
jl
jmp
jmp
sub
clc
or
adc
jae
mov
sbb
inc
mov
jmp
sbb
shl
mov
jecxz
mov
adc
insb
imul
push
or
add
pop
jge
jle
arpl
shll
mov
adc
stos
xor
adc
or
gs
fwait
pushf
bound
mov
popf
or
enter
lods
leave
fidivl
adc
xlat
cltd
jge
insb
sarb
cli
mov
pop
mov
loopne
fcoms
out
mov
sbb
stos
fisttpll
icebp
push
sti
je
lock
xor
jle
jbe
adc
push
xchg
rorb
push
rcrl
fwait
cld
adc
and
lds
out
aaa
iret
mov
sarb
insb
cmp
xor
pop
and
into
cli
imul
add
jmp
xor
sub
mov
fstl
add
jl
mov
loop
lahf
sub
lahf
jo
cmpsl
pusha
jmp
cmp
imul
icebp
testl
cld
mov
insl
adc
stc
jge
test
hlt
fimuls
mov
mov
popf
mov
outsb
rcll
subl
pop
fdivrl
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
shll
jo
jle
jo
dec
daa
sub
mov
mov
ds
clc
cld
mov
adc
xchg
or
aaa
insb
jns
add
mov
push
adc
popl
inc
inc
pop
hlt
xchg
cmpsb
jae
jne
scas
jne
mov
in
cmc
fistl
into
aaa
push
loop
je
sub
nop
mov
add
pop
cmp
loope
fisubrs
cmp
mov
jg
imul
insl
sub
stos
ljmp
fimull
lahf
cmp
mov
in
and
cld
xor
insb
adc
aas
mov
fisttpl
ss
scas
jae
dec
cwtl
rcrb
inc
mov
pop
lcall
or
sub
mov
add
je
bound
or
inc
mov
imul
xor
je
nop
mov
push
aaa
enter
cmp
es
test
fcompl
cmc
mov
cld
pop
push
insl
add
psrlw
jmp
clc
js
in
jg
push
push
int
imul
in
and
loop,pt
xchg
sti
out
fcmovu
sub
pop
cmp
es
loopne
mov
andl
mov
aas
mov
addr16
fcomip
pop
inc
out
imul
pusha
mov
xlat
inc
into
addr16
mov
stos
add
iret
jge
cmpsb
fistpl
ds
cmpsb
or
mov
nop
sub
mov
into
jno
mov
push
and
sahf
cwtl
jecxz
pop
xchg
cmc
ret
fcos
mov
and
in
push
lock
adc
imull
push
push
fcmove
cli
inc
xchg
jmp
hlt
cmp
inc
mov
add
ret
pop
inc
push
rcl
jle
or
out
mov
aam
dec
xchg
cmpsl
pop
shr
mov
pushf
aad
popf
iret
mov
or
push
sub
shll
imul
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
popf
push
mov
add
test
mov
rcl
xchg
jne
lds
rcll
fnsave
outsb
repz
or
cmp
call
fmulp
push
push
jno
xorl
push
sub
mov
shrl
stos
cli
jle
test
sbb
pop
pop
and
andl
xchg
push
sahf
mov
fldcw
insl
and
push
insl
push
dec
outsl
xlat
push
out
stc
loop
fdivl
xor
adc
cmp
mov
mov
das
hlt
sub
jmp
fidivl
jb
xchg
push
repz
xchg
mov
jbe
and
jge
xor
fcomip
and
incl
fwait
push
scas
jno
push
mov
mov
adc
pop
sub
mov
inc
mov
add
mov
out
imul
push
pop
ds
xor
mov
or
and
cmp
popf
push
xor
or
int3
mov
xlat
dec
mov
dec
icebp
out
push
mov
or
out
gs
fisttps
hlt
adc
ret
imul
xchg
dec
pop
xor
dec
add
xchg
aas
xor
clc
push
fiaddl
sbb
fidivs
xor
xchg
shr
ss
ret
mov
adc
and
bound
div
jns
fwait
mov
iret
jb
jns
or
pop
cwtl
cmp
inc
into
or
inc
divl
call
or
daa
lods
fwait
popa
in
lahf
cmp
push
sarl
pop
rcrb
outsl
movdqa
aas
pop
in
and
or
jo
inc
inc
gs
out
fisubs
xchg
jge
lods
test
fwait
xor
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
mov
xchg
test
shll
mov
cs
pop
add
jge
aam
and
jmp
int
js
and
add
xchg
mov
or
push
adc
mov
jbe
mov
sbb
ljmp
cmp
out
loopne
inc
aas
ss
inc
popa
and
inc
pop
push
adc
pop
push
cmp
outsl
add
add
cmp
sub
adc
test
adc
adc
adc
aad
xor
pop
push
push
sbb
adc
sbb
fwait
push
xchg
mov
in
cmpsb
nop
fistpl
pop
int3
cmp
xchg
add
dec
push
inc
cmc
inc
add
in
mov
filds
xor
ror
into
pop
xchg
loopne
int
fwait
mov
jge
out
push
dec
and
jmp
loope
jmp
inc
pop
add
xchg
jl
xchg
ss
loope
sbb
sbb
push
adc
mov
cmp
sbb
inc
scas
dec
mov
pop
lods
add
add
dec
sub
sbb
mov
lcall
aad
insb
jg
fdivrl
repz
xchg
imul
test
orb
cwtl
test
dec
and
cwtl
push
outsl
rcrb
or
repz
ret
adc
push
loop
jnp
iret
js
mov
mov
add
inc
pop
and
test
xchg
xor
mov
lds
arpl
test
mov
lea
and
fimuls
ret
cmp
jecxz
lea
add
xor
jp
mov
cmp
mov
sbbb
or
scas
fwait
add
repnz
xor
movsb
mov
jle
inc
in
gs
arpl
outsb
cltd
pop
xlat
jne
repnz
movsl
loop
xor
outsb
or
mov
fdivrs
mov
dec
mov
lret
xor
xchg
mov
add
shr
dec
divl
pop
jmp
adc
adcl
fidivrl
sahf
in
lret
cmp
cli
jl
ss
pusha
repnz
outsb
rol
loope
sub
aad
das
push
loop
cmp
pushl
adcb
sub
mov
loopne
nop
clc
mov
fwait
lods
lds
lahf
pop
inc
mov
cmp
pop
push
sub
cmc
jge
lods
rol
dec
pop
dec
cs
icebp
mov
dec
pop
addl
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
or
mov
xor
je
addr16
jg
pop
push
adc
jl
cmp
icebp
test
push
xchg
sbb
and
sbb
mov
xor
pop
mov
cmp
loop
sarb
sahf
sub
iret
mov
push
mov
int
sub
ret
aaa
decb
adc
outsl
mov
jb
adc
mov
fsubrp
aad
or
pop
cmc
in
push
repnz
jns
stc
aad
out
mov
jg
test
aas
sbb
lock
or
fdivrl
dec
mov
xchg
jo
gs
push
mov
jle
test
loopne
fsubrp
cltd
dec
push
xlat
sbb
sub
add
lret
jbe
cmp
cltd
movsb
adcl
xor
lds
mov
dec
push
jno
iret
add
or
xchg
adc
mov
jmp
mov
cmc
lahf
orb
and
mov
into
mov
xlat
addr16
cmpsl
inc
xor
sbbb
popa
xor
mov
dec
sub
mov
jle
cmp
push
aam
push
push
jg
loopne
cli
sub
insl
pop
mov
push
mov
out
mov
pop
cmpsb
or
push
jo
push
push
mov
shll
push
xchg
inc
push
hlt
inc
xor
xchg
jge
nop
dec
fisubs
jae
jle
stos
and
or
cld
xchg
sub
cmc
sahf
repz
xchg
data16
cmp
popa
fs
jg
fdivrp
scas
or
pop
inc
pop
push
push
ret
pop
push
setg
mov
ja
push
in
mov
aam
je
mov
icebp
ds
adc
lods
xlat
xchg
shll
jns
sbb
inc
push
js
mov
inc
push
xor
or
adc
daa
mov
push
sbb
xchg
out
insb
mov
pop
out
movsb
inc
clc
lea
outsl
cmp
pop
adc
cs
mov
cld
fsubr
xor
shll
dec
pop
in
adc
sub
push
and
loopne
imul
inc
sbb
jmp
adc
push
enter
adc
bound
loope
pop
mov
cltd
mov
mov
ficoml
stos
inc
pop
imul
xor
stc
idivl
sub
xorl
movsl
or
repnz
aad
aas
loope
mov
loope
xchg
loope
icebp
jbe
ljmp
mov
pop
xchg
sysenter
add
inc
cmp
cmpsl
mov
sarl
inc
clc
mov
xor
add
jmp
fistl
loope
lds
add
dec
int3
or
pop
jo
mov
aaa
jg
out
pop
cli
mov
call
jge
jae
fbstp
xchg
sub
aaa
xchg
call
mov
xor
mov
stc
nop
mov
test
xchg
jg
es
scas
bound
mov
mov
or
push
lret
cmp
lock
pushf
repnz
mov
ss
in
ljmp
mov
pop
loop
jge
leave
push
dec
fisubrs
sahf
inc
or
test
xor
xchg
mov
movsl
cmpb
lods
adcl
dec
into
cmp
lds
ret
or
popf
iret
lret
lods
iret
xchg
inc
cmp
jb
into
jae
xor
insl
push
cmp
mov
aad
sahf
push
fnsave
cmp
inc
sbb
xchg
add
inc
add
mov
xchg
lcall
cs
lahf
test
inc
test
ret
aaa
cli
enter
mov
inc
mov
out
adc
or
mov
push
sbb
imul
cltd
sbb
jmp
std
push
mov
cmpsl
xchg
sti
cmp
jb
mov
lods
in
push
rorl
bound
inc
jne
stc
cli
sbb
dec
subl
push
xor
push
outsl
movsl
insb
and
mov
imul
in
repnz
sahf
xchg
dec
iret
lds
das
dec
maskmovq
add
mov
ret
pushf
iret
jb
inc
icebp
mov
aas
jne
jbe
push
adc
loope
repnz
in
push
popa
lret
cmp
pop
stos
in
cli
pop
jns
lock
add
xchg
xchg
leave
setne
lahf
and
cmp
sbb
stos
pop
pop
fadd
dec
test
mov
inc
ficoms
aad
inc
mov
push
inc
inc
fnsave
push
sbb
xor
jae
mov
sbb
test
jae
inc
fdivs
sub
mov
mov
cmpsl
int
mov
dec
sbb
or
mov
fisubrl
js
or
push
and
daa
push
xor
into
idiv
scas
gs
test
insl
adc
jl
test
dec
mov
je
ret
nop
mov
adc
scas
sar
out
or
movsl
dec
dec
cmp
jne
popa
icebp
cmpb
mov
lcall
jb
outsb
test
test
push
add
pushf
sbb
cmp
and
and
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
shlb
cmp
jo
jle
jo
xlat
jge
loop
int
in
xchg
data16
pushf
adc
mov
leave
mov
mov
jbe
mov
cmp
fwait
mov
lock
sbb
mov
sub
shlb
cwtl
popf
iret
arpl
add
iret
enter
js
xchg
lcall
lods
mov
xchg
sub
leave
cli
cmpsb
test
dec
jp
adc
inc
popa
add
dec
mov
fwait
xchg
jo
popa
dec
addr16
mov
mov
jne
ret
pop
sbb
testb
jbe
stos
cmp
push
fs
ljmp
lahf
cld
push
imul
dec
mov
pop
movsb
jge
jno
adcl
in
add
hlt
scas
lahf
inc
pandn
jecxz
ja
mov
gs
gs
paddsb
cwtl
js
mov
nop
mov
ret
adcl
inc
ret
add
dec
rol
pop
dec
aad
push
or
ss
push
add
jne
outsb
or
push
ja
ss
mov
push
mov
dec
fstpt
test
mov
pop
jle
and
fs
jae
add
cmp
add
jbe
lea
push
push
insb
lret
pop
insb
xchg
jae
rcrb
in
mov
mov
outsb
jae
ror
ffree
mov
push
pop
xchg
pop
repz
adc
cmp
daa
into
into
sub
xchg
pop
dec
out
cmp
and
cmp
xor
cmp
dec
pop
dec
out
cwtl
pop
cmp
mov
dec
adcb
andl
aad
push
fstps
mov
mov
test
push
mov
inc
nop
ficompl
lods
fidivrl
dec
inc
xor
jb
mov
loope
mov
lds
adc
adc
cmpsl
or
dec
lcall
add
inc
loop
jg
xchg
cli
dec
xchg
pop
cmpl
sbb
mov
adc
and
inc
adc
stos
ret
in
hlt
sbb
mov
xor
stos
ds
movsl
sarl
pop
daa
dec
add
popa
in
ja
pop
adc
mov
mov
mov
int
xchg
or
test
mov
popa
subl
call
and
mov
adc
cwtl
mov
pop
mov
aam
lret
add
pop
sti
shrl
fsubrl
xchg
mov
jle
addr16
dec
es
cmp
cmp
dec
aas
sbb
stc
test
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
mov
js
jo
cmp
mov
mov
jecxz
push
xchg
sub
fcomip
mov
aad
add
xor
dec
enter
pushf
outsb
lods
es
lock
xchg
fbld
dec
fldl
mov
add
lcall
bound
popf
xchg
fsubrs
mov
pop
cltd
cmp
out
rcl
inc
add
loopne
in
lret
inc
dec
fs
test
sbb
test
arpl
add
xchg
and
sahf
in
lock
ret
scas
aad
aas
out
sti
add
sub
mov
dec
andb
aas
push
and
lds
lahf
jno
jmp
gs
cmpsl
lcall
loopne
and
out
xor
inc
sbb
xchg
je
mov
inc
xchg
sub
add
ret
pop
out
cmp
xor
adc
cwtl
aam
lock
jno
sar
out
imul
jae
aam
push
jecxz
sbb
xchg
mov
fsubs
jb
mov
cld
mov
addr16
hlt
jp
rcrl
out
insb
push
subl
or
jl
shll
xlat
inc
and
jle
adc
sub
popa
mov
pop
push
aad
mov
cltd
xchg
ss
sub
mov
inc
int3
jnp
inc
stos
xor
sbb
jb
out
adc
cli
insl
mov
repnz
xor
rcrb
sbb
mov
cmp
pop
add
test
and
push
clc
jne
inc
mov
ljmp
dec
add
repz
mov
shll
sbb
or
ret
adc
cld
mov
pop
mov
in
aas
or
or
adc
inc
test
lret
adc
repnz
pop
lahf
out
mov
stos
test
pop
xor
das
adc
sbb
ret
push
pop
add
lock
inc
addr16
ljmp
pop
and
mov
shl
jmp
cmp
adc
or
mov
loopne
in
sub
push
lock
or
rcl
in
xchg
dec
xor
cmc
test
sub
lret
mov
incl
pop
mov
cld
stc
mov
sbb
add
cmpsl
es
xchg
mov
xchg
jne
pop
scas
jbe
push
lcall
cmp
rcrb
sbb
or
jl
sub
dec
inc
jb
push
push
orl
into
adc
sub
in
or
dec
and
outsb
in
mov
out
xchg
sbb
adc
ja
xchg
cld
add
mov
xor
cmpb
lret
cmc
inc
xchg
jns
mov
ds
nop
stos
xor
inc
push
rcrb
jecxz
inc
sub
mov
push
int
aad
adc
add
ret
xlat
inc
pop
mov
mov
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
or
push
jo
cmp
cmc
sbb
inc
stos
and
fidivrl
stos
rclb
inc
addr16
mov
mov
cmp
fs
xchg
mov
cmc
roll
sbb
sahf
fdivl
jae
mov
push
outsb
insl
iret
loop
int3
push
cwtl
mov
pop
xchg
inc
jno
mov
sbb
cmpsl
daa
sbb
jns
xchg
ret
scas
pop
jno
arpl
inc
inc
test
out
sahf
xor
push
cli
sbb
and
aaa
cwtl
subl
stos
scas
sbb
std
dec
and
je
data16
push
adcb
xor
mov
and
lret
cmc
cmp
ljmp
std
std
cwtl
adc
xor
mov
adc
xchg
orl
loope
outsl
inc
pop
xlat
jecxz
jmp
mov
sbb
mov
pop
shr
cltd
in
or
cmp
push
mov
test
cmpsl
xchg
xchg
inc
mov
pop
inc
outsb
cmp
xchg
push
into
orb
das
subl
mov
jle
mov
call
xor
push
jecxz
ja
data16
popa
leave
cli
cld
adc
and
bound
lret
gs
pop
cwtl
in
sbb
push
pushf
aaa
mov
xchg
mov
cmp
jge
out
insl
icebp
dec
and
ja
mov
xchg
mov
add
add
out
xor
rorl
lock
loop
mov
sbb
rcrl
dec
pop
mov
sbb
jle
dec
repz
jge
arpl
mov
xor
pop
in
pop
sahf
lret
rol
xchg
repz
mov
lahf
jmp
lock
pop
lret
pop
lock
inc
in
pop
bound
in
and
and
aas
aaa
std
popfw
jg
sub
inc
divl
pop
or
push
inc
test
gs
ret
out
aam
jns
movsl
adc
dec
lods
sub
mov
ret
test
fdivs
stos
and
andl
dec
in
or
mov
xor
mov
push
divb
sti
movsl
mov
ljmp
or
xchg
repnz
repz
mov
sbb
aaa
add
xor
or
sub
mov
aas
xchg
clc
and
add
push
inc
dec
in
inc
bound
mov
adc
or
fstps
adc
pop
dec
or
test
jbe
dec
mov
push
xor
test
outsl
pop
push
xchg
mov
movd
insl
xchg
jge
cwtl
mov
insb
scas
mov
mov
mov
int
sbb
les
data16
cmp
sub
pop
cltd
jbe
sar
scas
jnp
pop
lea
rolb
imul
and
ret
iret
test
es
rcrb
lea
lret
out
sbb
stos
rep
jg
imul
pop
aas
mov
in
lock
gs
dec
mov
test
imul
ja
add
pop
xorl
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
sbb
jge
jo
xor
mov
and
push
lds
repz
bound
jmp
cmp
out
xchg
adc
rcl
xchg
rol
jecxz
push
mov
out
jmp
mov
jmp
int
stos
pop
popa
cmpsl
fs
repz
ljmp
sub
xchg
push
fwait
mov
cmp
mov
out
test
in
popa
jae
push
lods
clc
or
ja
push
pop
fcmove
loop
adc
lods
mov
adc
out
adc
pusha
imul
add
mov
push
jle
push
testb
push
mov
mov
movsl
jle
cs
jno
and
lret
mov
orb
insb
fstl
cmp
movsl
push
xor
pop
outsb
jge
or
arpl
or
ljmp
xor
mov
shll
inc
jmp
imul
dec
fldt
into
mov
and
sbb
cs
pop
test
test
incl
inc
decl
inc
in
jb
int3
fsubrl
aam
stos
sbb
inc
adc
rcrb
imul
repnz
cmp
push
gs
sbb
rclb
inc
sub
xor
xchg
mov
movsl
dec
mov
mov
xor
out
push
sar
pop
ficoms
sahf
in
jp
lcall
add
pusha
test
or
sbb
aas
lcall
push
out
jle
xchg
pop
mov
mov
es
mov
sub
push
or
test
jp
sbb
aam
rorl
xchg
jae
addr16
mov
mov
add
mov
es
fdivs
xchg
xlat
cmpsl
cmp
sub
xor
inc
and
mov
pusha
push
lock
bound
xor
sub
jne
sbb
inc
inc
mov
xchg
or
jbe
rcl
hlt
loop
int3
jne
icebp
cli
dec
gs
adc
push
test
in
mov
ja
ljmp
mov
add
xchg
mov
mov
xor
push
les
addb
push
lahf
inc
test
fwait
arpl
fsub
sbb
fldenv
dec
out
ja
pop
std
dec
or
testb
or
push
push
dec
mov
stos
out
pop
ret
mul
movl
rclb
mov
mov
mov
aas
imul
sub
inc
push
jecxz
cmpb
ret
shll
adc
and
int3
or
enter
jecxz
test
jno
mov
jg
ret
push
pop
sbb
andnps
insb
std
dec
orl
lock
testl
sub
icebp
inc
jnp
xchg
push
mov
pusha
add
push
cli
sbb
pop
jle
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
movd
fists
jge
jo
xchg
inc
push
mov
inc
pop
stos
and
dec
incl
or
add
ja
cwtl
and
or
hlt
nop
jne
aam
stc
outsb
mov
popf
clc
addr16
pushf
pop
not
ror
push
or
pop
outsb
mov
rol
or
xlat
lods
mov
mov
mov
push
adc
cmp
mov
mov
out
xor
aaa
jns
mov
mov
insb
add
sbb
or
sub
cmp
pop
mov
mov
mov
push
rol
cwtl
inc
inc
clc
cli
add
lcall
add
jecxz
xchg
test
push
test
inc
mov
sahf
pop
arpl
xor
in
jecxz
xchg
shl
xchg
bound
sub
in
test
add
in
add
jnp
repnz
sub
xchg
leave
addr16
or
fbstp
xchg
mov
addr16
jnp
or
movd
xor
mov
dec
gs
sbb
fcompl
adc
push
inc
out
cmp
adc
xchg
jp
jo
adc
or
xor
inc
or
fidivl
inc
mov
xchg
data16
push
sbb
out
inc
xchg
sub
ds
mov
jns
mov
jnp
and
jbe
arpl
inc
xor
mov
js
xchg
inc
repnz
xchg
movsb
in
jbe
ret
and
lahf
pop
cmp
aaa
xor
mov
xchg
cmp
adc
cmp
loop
xchg
and
push
push
adc
dec
lds
pop
shll
sar
xchg
repnz
lods
loopne
out
push
jmp
xchg
mov
pop
or
cmpsb
pushf
pop
jge
rclb
lods
rorb
add
or
mov
clc
fdiv
mov
xchg
addl
adc
push
dec
xchg
icebp
mov
rorb
arpl
mov
addr16
scas
mov
icebp
push
lock
ja
rol
and
push
dec
mov
fs
loopne
lahf
adc
call
jno
dec
imul
aad
inc
pop
adc
xchg
adcl
mov
xchg
orb
cltd
rcrl
mov
sub
cwtl
and
cmp
mov
jl
jp
cld
rorb
aam
stc
imul
jnp
xor
mov
pop
fildl
adc
pusha
push
jmp
nop
mov
mov
insb
ficoml
pushf
sub
das
cmpsl
bound
push
cmpsl
mov
mov
pop
mov
jecxz
or
mov
or
pop
mov
fsubs
ret
jb
and
sub
paddd
test
addr16
out
aas
into
je
sbb
in
jb
clc
or
insb
fidivl
out
scas
ret
jae
daa
shll
jo
pop
int3
jge
out
cmc
lret
xor
cs
enter
or
arpl
shlb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
pop
push
cli
or
jo
cmp
xor
lret
pop
movsb
mov
cmovnp
das
pop
xchg
pushf
pop
sub
xchg
xlat
int3
call
mov
jnp
shlb
add
notl
ret
pop
push
imul
jmp
pop
jbe
or
and
or
sub
mov
or
add
out
stc
inc
pop
imul
push
jns
inc
or
stos
fisubrs
and
outsb
or
push
xor
sbb
cmp
shll
mov
movsb
int
jg
mov
arpl
pusha
scas
push
cmpsl
in
inc
pop
cmp
xchg
mov
mov
xchg
jne
xchg
xchg
pop
rorl
xor
push
test
cmp
cld
repz
ljmp
push
incb
pop
andl
outsl
jns
cli
mov
dec
inc
mov
jmp
sbb
sbb
cmc
mov
pop
xchg
in
pop
or
xchg
scas
fmuls
and
cmp
aad
and
sbb
clc
lahf
inc
rcr
jb
or
sub
jnp
pop
pop
jp
xchg
mov
test
call
in
sbb
test
pop
stos
adc
rclb
dec
xor
or
aad
jno
jbe
xlat
aas
pop
lret
xchg
inc
in
jp
jns
cmpb
mov
std
aad
push
lcall
sti
cmpsb
cmpsl
loopne
mov
or
popa
adc
push
jnp
jnp
mov
sti
add
inc
or
mov
into
mov
sub
fimull
xor
push
pop
add
jno
movsbl
test
inc
lods
in
xor
cmp
sub
imul
mov
push
mov
test
push
xor
shl
dec
inc
arpl
fldcw
cmp
in
lds
mov
or
xor
fdivs
push
shll
jmp
decb
cmp
jp
sbb
adc
pop
sub
xchg
les
mov
cli
jecxz
aas
aam
push
ret
cli
scas
call
xchg
sbb
mov
test
fnstenv
xchg
mov
loop
jmp
or
or
ret
inc
and
jno
nop
outsb
inc
push
mov
test
xor
push
pop
test
pop
mov
mov
and
mov
ret
repz
aas
loope
frstor
mov
pop
pop
lods
pushf
shrl
mov
outsl
test
push
pusha
sub
into
push
jg
loope
stos
cmpsb
adc
sbbl
aas
aaa
xor
fsubl
push
out
cltd
sbb
sub
rclb
aam
mov
mov
mov
lret
jle
mov
notb
loopne
lahf
fdivs
aas
mov
movsb
daa
cmp
mov
xchg
mov
ficomps
icebp
decl
pop
cwtl
out
pop
jg
aad
pusha
ds
add
fsub
dec
lret
mov
jno
pop
adc
mov
xchg
jg
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
bound
jo
cmp
jl
add
cmp
ds
pusha
in
xchg
lods
mov
fdivrs
or
push
dec
mov
in
enter
add
ss
shll
push
xlat
mov
jge
fistl
aad
ds
xchg
aas
dec
movsl
cmp
lcall
js
jbe
xor
push
outsl
xchg
hlt
push
aad
dec
outsb
push
je
rep
xor
sub
repnz
cs
pop
neg
les
fsubrl
shrb
icebp
dec
or
mov
punpcklwd
add
popf
jl
push
mov
sti
inc
cld
xor
and
jbe
sbb
sub
and
dec
lds
cmpl
std
xlat
sbbl
jbe
rcr
fnstenv
hlt
enter
push
mul
sarb
int3
mov
ret
cs
pop
cmp
pop
xchg
daa
hlt
mov
ret
rorb
xchg
or
adc
or
sti
shrl
xchg
jmp
push
sbb
int
push
push
sub
mov
and
xchg
sbb
ficoml
in
stc
push
cmc
mov
insl
test
test
mov
jo
xor
xchg
neg
call
jo
push
sub
sub
leave
inc
cmp
mov
sub
jno
inc
cld
faddp
and
pop
dec
fcompl
lods
sbbb
and
jns
jmp
rol
fsts
adc
sub
dec
rolb
xlat
movsb
jmp
sbb
xor
cmc
lods
lcall
inc
adc
das
mov
xor
fbld
std
pop
popa
or
xchg
popf
rcrb
popa
loop
or
mov
mov
pop
sahf
push
adc
push
lea
aaa
movsl
je
in
addr16
scas
mov
sub
push
push
add
mov
mov
xchg
adc
dec
xor
fistl
mov
mull
jno
nop
cmp
cmp
adc
dec
insl
cmp
or
lea
mov
sub
lods
movsl
jge
sahf
cltd
push
jp
sar
pop
inc
test
fcmovb
pop
es
test
pop
arpl
rcrl
cmp
pushf
icebp
test
push
outsl
adc
lods
pop
stos
mov
pushf
cli
sarb
test
je
out
xchg
fcoms
mov
sbb
lea
jg
sbb
push
cmp
push
cwtl
sub
push
or
das
insl
stos
jbe
jb
pop
ret
xlat
stos
and
push
lods
test
cmp
cmpsb
aad
cld
cld
xor
mov
cld
mov
pop
xchg
aad
jnp
mov
ret
mov
cmp
ss
pop
pop
jle
jo
push
push
jne
movsb
cs
mull
cmp
cmp
xchg
mov
push
push
pop
std
dec
xchg
ljmp
add
movsl
testl
insl
cwtl
push
pop
xchg
mov
enter
pinsrw
add
pop
push
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
cmpsb
cli
fcoms
jge
jo
push
jle
jp
addr16
out
fcmovb
adc
add
add
daa
xchg
cli
lea
ret
mov
bound
push
out
sbb
mov
inc
or
sbb
xor
jmp
rclb
movsb
xor
mov
jmp
add
mov
jge
lds
or
shl
insl
decb
add
and
leave
dec
cmp
jecxz
jmp
inc
pop
jb
rclb
or
pusha
inc
in
pop
in
inc
or
imul
adc
pop
mov
loop
mov
rcrb
fildll
testb
insl
jl
ss
popa
loope
add
scas
iret
sbb
lret
pop
aas
rcr
in
cmp
lods
jg
lods
add
in
mov
dec
je
jp
stos
jns
stos
cmp
or
adc
jge
pop
out
inc
push
mov
adc
int3
xor
lcall
push
xlat
movl
pop
or
xchg
dec
sahf
add
cld
mov
out
call
js
lret
stos
xchg
popf
pop
jp
mov
fwait
in
sub
mov
or
inc
add
cld
fwait
lret
xchg
ret
add
pop
cmp
fwait
rorb
mov
xor
imul
inc
clc
sub
js
jp
call
jo
lcall
dec
stos
or
out
testl
sbb
inc
inc
out
fcoml
std
sub
enter
divb
je
inc
xchg
std
inc
ret
out
lahf
mov
mov
mov
pop
xor
pop
out
xchg
xor
add
outsb
push
loope
sub
pop
ret
sbb
imul
adc
pop
stc
xchg
jne
lods
popa
mov
aam
add
dec
sbb
lods
cmpsb
adc
push
popf
into
fsubrl
mov
cmp
sti
std
push
push
sub
mov
mov
test
or
push
jnp
and
js
xchg
divb
icebp
push
aaa
lcall
mov
jb
enter
nop
xor
aas
data16
and
cmp
shll
int
pushf
sahf
jno
ja
lods
sub
sub
es
lods
jge
icebp
pop
inc
test
xchg
xchg
shl
arpl
push
pop
add
std
in
in
xchg
je
pop
add
dec
imul
jl
cmp
xchg
pop
push
push
pop
fisubs
call
jb
lahf
dec
xchg
aam
push
jne
mov
jle
adc
inc
add
push
jae
mov
xchg
outsb
push
inc
mov
push
icebp
cmpsb
dec
mov
push
into
sbb
add
cmp
mov
and
sbb
ja
mov
adc
cld
aam
repz
adc
fbld
bound
mov
push
sahf
dec
or
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shr
mov
jo
jge
jo
iret
and
fldt
adc
arpl
lret
xchg
mov
adc
in
subl
rcll
pop
xor
fcmovnu
cmp
cmpsb
testb
fistpll
stc
shrb
xchg
addl
ds
sbb
cmp
mov
pop
adc
mov
cmp
shr
cld
aam
xor
pop
and
xlat
nop
lahf
push
movsl
or
mov
dec
jno
dec
in
cwtl
dec
jg
pop
int3
jecxz
enter
pop
inc
js
gs
jb,pt
movb
xor
cld
adc
lods
test
testb
jecxz
and
mov
mov
mov
sbb
iret
sub
fwait
pop
cmc
and
ret
mov
push
push
cmp
lds
cld
lahf
leave
imul
lods
or
pop
psubsw
lret
data16
jne
inc
dec
xor
xlat
or
push
mov
out
int3
add
xchg
dec
jge
cmp
jo
loop
mov
push
mov
addr16
andl
std
js
inc
jmp
sub
xchg
and
push
add
xchg
jle
mov
jbe
sahf
daa
arpl
mov
in
scas
inc
pop
adc
popf
clc
pop
mov
mov
das
sbb
pop
pop
jge
lds
insb
mov
arpl
cmc
iret
jo
insl
jg
loope
xor
test
cmp
nop
repnz
lock
xor
xor
bound
add
lds
pop
xchg
gs
out
or
adc
pop
ficomps
xorb
xlat
int
and
test
and
xor
lods
xchg
stos
sarb
and
test
xchg
imul
jecxz
ja
push
dec
mov
jmp
xchg
iret
cld
imul
push
iret
jle
push
pop
lahf
jge
sub
push
cwtl
ja
dec
jge
fildl
xor
jg
dec
outsl
pushf
inc
and
out
xor
pop
int
xchg
movsl
ds
cli
pop
xor
sbb
fstl
out
adc
nop
jbe
arpl
add
sahf
lret
pop
jge
mov
cmp
ret
daa
fs
add
out
aas
int3
daa
xchg
mov
outsb
outsl
lock
imul
and
or
mov
jge
cwtl
ret
lret
rcrl
js
cmp
xor
mov
jg
lcall
mov
xor
fstpl
push
dec
sub
push
ret
popf
inc
mov
orl
push
and
inc
movsb
jmp
jnp
adc
or
cmp
cld
push
inc
cmp
jbe
push
push
hlt
loope
lods
push
cmp
sbb
inc
ret
push
xor
sub
insb
adc
or
lods
mov
mov
mov
push
pop
les
les
pop
mov
sub
cld
aas
ljmp
mov
adc
ret
xchg
mov
sub
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
pop
mov
jo
stos
jle
jo
adc
pushf
ds
pop
outsb
std
std
jp
xor
dec
xor
scas
cli
gs
call
pop
fdivl
mov
sub
inc
mov
pusha
iret
mov
push
fists
push
mov
mov
mov
xchg
mov
mov
imul
mov
pop
loope
adc
pop
stc
push
add
nop
add
pop
mov
int
jae
call
pop
lret
push
outsb
ret
push
subb
jmp
mov
lods
xchg
imul
lahf
data16
mov
push
repnz
adc
inc
nop
loope
jge
push
ss
je
movsl
mov
pop
mov
jae
es
push
mov
push
sti
mov
push
xchg
xchg
icebp
jo
adc
dec
fcompl
and
xorl
dec
dec
pop
mov
arpl
outsl
xchg
sarb
mov
aas
sahf
xor
hlt
jg
in
pop
jnp
mov
orl
xor
jno
cs
inc
dec
test
adc
xchg
pop
jns
xor
pushf
pusha
out
push
call
mov
xor
jl
nop
imul
out
std
push
shr
popa
add
loopne
dec
aas
xorl
mov
mov
lods
aam
movsl
cmpsl
daa
lret
jge
test
fistl
dec
xor
inc
sbb
jbe
subb
mov
inc
or
jo
push
loop
pop
pop
or
xchg
push
push
mov
jne
sar
popf
adc
divl
fdivrp
out
push
mov
clc
sbb
rcl
int
in
lock
jle
push
or
jns
pusha
mov
imulb
inc
stos
and
jnp
fcomp
mov
sub
cli
jg
push
dec
sub
jne
mov
mov
and
sbb
repnz
jmp
mov
inc
adc
mov
fildll
into
in
in
add
xor
lods
rolb
lret
repnz
dec
fistps
dec
dec
outsl
mov
or
sbbb
dec
mov
or
addl
pop
mov
fstpl
jne
jg
inc
enter
push
mov
test
pop
pop
in
mov
loope
dec
fwait
out
add
movsb
push
dec
orb
inc
jno
dec
pusha
sub
sub
lds
jb
jecxz
movsl
inc
popa
sbb
ja
lahf
insb
pusha
loop
sub
stos
cmpl
mov
les
or
push
movzwl
and
mov
jmp
ja
and
dec
xchg
xor
stos
jle
jo
sbb
pop
jno
dec
jecxz
mov
xchg
imul
popf
inc
pop
pop
data16
mov
mov
xchg
test
mov
fldln2
int
std
fstpl
outsl
jae
gs
mov
jne
in
mov
mov
jns
dec
xor
mov
or
add
lods
add
mov
cmp
xchg
xor
push
jb
lret
icebp
dec
pop
sbb
mov
sub
adc
inc
repnz
lea
outsl
and
lcall
pop
xchg
or
push
popf
leave
rorb
cmc
or
fwait
imulb
jmp
jle
js
mov
sbb
cmp
call
loopnew
sahf
dec
adc
xor
sub
lret
stos
lock
adc
dec
rorl
aas
out
xor
out
mov
push
xlat
int
sub
mov
ret
and
js
dec
and
dec
out
out
and
dec
addl
xchg
stc
int3
dec
idivl
xchg
scas
push
pusha
dec
fbld
xor
shlb
mov
adc
aam
cwtl
or
sbb
inc
cmp
mov
sbb
jle
jmp
jbe
out
repz
call
cltd
xchg
stc
negb
sar
xor
xorl
inc
pop
push
roll
sub
xor
xchg
or
aam
inc
fwait
mov
outsl
js
mov
mov
jns
push
xor
mov
jecxz
mov
movsb
push
dec
sub
xor
out
jo
popa
mov
mov
jb
int
inc
pushf
xchg
xor
popf
out
pusha
arpl
push
daa
aaa
xor
repz
popf
jae
mov
test
lret
xor
sub
popf
pop
jmp
nop
scas
mov
je
fistpll
fisttpll
in
nop
sub
mov
sub
testb
lret
ss
pop
sbb
lcall
sbb
mov
imulb
std
xchg
and
jmp
inc
inc
mov
lret
mov
sahf
cmc
mov
xor
movsl
fwait
mov
pop
sahf
mov
mov
inc
clc
xchg
iret
inc
dec
repz
sub
dec
jecxz
push
or
mov
je
icebp
lea
aas
mov
in
insl
dec
mov
hlt
pop
popa
sbb
notb
rdtsc
fidivrl
loop
mov
lret
loope
add
pop
popa
aad
testb
xchg
or
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
push
jo
jle
jo
xchg
nop
mov
cmp
jbe
mov
xchg
sub
insl
xchg
popl
popf
js
or
movsb
jp
test
push
xchg
cmp
test
xchg
push
dec
mov
sub
cli
mov
dec
cmpb
sbbl
insl
mov
or
lods
xchg
les
push
mov
fldt
rclb
push
push
cli
dec
test
les
ds
mov
in
enter
add
mov
scas
ret
es
mov
rcll
lods
xlat
lods
cs
inc
sub
push
jno
push
mov
xchg
or
xlat
sub
int
and
sbb
and
fdivrp
mov
loop
inc
xchg
popa
or
lea
aam
inc
adc
cmp
sub
dec
pop
sub
repz
ja
and
notb
mov
xor
dec
arpl
mov
in
mov
lods
sub
jno
ss
add
and
nop
inc
mov
jl
das
mov
sub
dec
inc
adc
es
int
mov
gs
add
inc
xchg
movsl
rcrb
jecxz
daa
cmp
mov
pushf
jo
pop
push
inc
pushf
dec
and
mov
ficoml
sti
ret
dec
test
fcmovb
jecxz
data16
gs
mov
mov
or
in
dec
cvtps2pd
jb
pop
inc
repnz
adcl
clc
lret
jne
dec
jne
lods
and
out
inc
scas
dec
outsb
popa
stos
xor
cmp
mov
in
out
mov
cmp
xchg
outsl
mov
lock
mov
mov
fsubrl
ret
inc
jbe
shll
jp
loope
nop
inc
testl
mov
mov
movsb
jns
bound
jns
std
pop
lods
mov
jle
sbb
and
mov
aam
pop
sbb
mov
add
push
rorb
out
or
fimuls
adc
daa
cmp
andb
add
jge
inc
scas
int
movsl
xchg
push
xchg
mov
frstor
ficompl
ja
sub
or
mov
inc
sahf
and
and
fldcw
ja
cmp
dec
jo
xchg
dec
test
xor
mov
dec
lea
nop
loope
and
xchg
repz
pusha
pop
in
call
nop
jg
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
sahf
adc
ds
jo
cmpsl
jg
jo
adc
in
pusha
add
lret
mov
sti
sbb
mov
sub
sbb
pop
or
mov
es
cvttps2pi
inc
sysexit
sub
pop
or
mov
and
mov
inc
in
mov
into
je
mov
fldt
cmpsl
lea
xlat
xor
lods
sahf
jge
mov
sbb
or
adc
pop
enter
mov
lods
cmp
inc
push
test
pop
pop
dec
adc
xor
pop
jmp
daa
add
dec
mov
rcll
pop
jl
inc
pop
aas
dec
and
cltd
iret
shrl
cmpsb
dec
adc
imul
xor
inc
xor
adc
insl
out
lret
jne
push
iret
add
stos
xchg
mov
lods
shr
mov
xchg
popf
aad
sbb
pop
sub
les
and
add
lods
mov
adc
jmp
cmp
mov
fdivl
into
xor
outsb
sbb
pop
leave
add
jle
push
aas
push
push
minps
sub
pop
cmp
push
test
sbb
add
lods
adcb
insl
dec
inc
ss
adc
test
cmpb
or
scas
xchg
sbb
cli
outsb
adc
inc
sub
xchg
inc
mov
push
mov
mov
adc
xchg
les
cmc
pop
sarl
insl
pop
test
jnp
sbb
or
mov
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
push
gs
cmpsl
jg
jo
fldcw
inc
int3
lock
fwait
in
xchg
cmpl
sti
addr16
cmpsl
push
js
mov
fmuls
out
inc
ja
pop
push
not
push
es
xchg
push
dec
std
jno
fistpll
hlt
add
cli
push
sub
adc
jae
leave
xchg
int
jne
dec
mov
rcll
rorb
or
sbbl
jge
mov
mov
mov
iret
test
push
or
dec
mov
push
or
scas
lock
mov
xor
cmpsb
xchg
daa
mov
insl
cmp
leave
mov
adcb
pushf
and
mov
xchg
imul
and
dec
test
in
mov
jne
fisttpll
dec
sbb
adc
mov
cmp
or
ds
or
dec
pop
add
inc
xor
push
iret
out
sub
and
push
cmp
movsl
xor
jne
scas
and
xchg
ljmp
xor
mov
push
fisubs
jp
mov
call
push
mov
in
fs
nop
mov
loop
clc
ret
imul
mov
jmp
mov
jbe
fs
test
jmp
icebp
scas
push
lret
lcall
jle
popa
sbb
test
mov
mov
push
cmp
into
popa
dec
rorl
mov
push
insl
cmp
push
sbb
dec
sbb
in
mov
add
dec
popf
cmp
jg
int3
or
nop
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
mov
mov
jo
jg
jo
and
arpl
ret
lods
jle
dec
stos
xor
imul
fbld
into
arpl
sub
pushl
xor
pop
hlt
fistpl
jo
push
jns
fidivs
or
dec
inc
sbb
jb
xor
lods
out
aam
jb
inc
icebp
and
clc
xlat
jle
bound
pushf
mov
or
in
jbe
jb
and
adc
mov
popa
mov
fwait
lods
pop
push
js
xchg
call
loop
stos
cmpsl
movsl
ss
cltd
pushf
push
js
mov
sbb
outsl
je
incb
addr16
mov
adc
mov
arpl
cld
and
pop
stos
cwtl
ljmp
and
int
sbb
orps
mov
jge
sarl
cs
into
pop
adc
push
and
and
ljmp
bound
cmpsb
mov
icebp
cmp
sbb
or
out
inc
mov
mov
cwtl
fs
fwait
rcl
fildl
lret
pushf
inc
adc
push
xor
mov
pop
xchg
jnp
push
fwait
outsb
xchg
mov
sahf
add
leave
js
jp
jns
xchg
and
and
mov
sbb
push
and
xor
mov
mov
or
jecxz
mov
sbb
pop
les
addr16
gs
in
pop
int
mov
inc
lds
adc
mov
into
aad
cmp
repnz
lds
pop
ja
cmp
cmp
loop
jmp
into
aad
jmp
add
in
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
mov
xor
jo
loop
jo
sub
fisttpll
insl
enter
pusha
add
add
sbb
fdiv
in
iret
sub
ss
push
dec
inc
rcl
insl
data16
and
pop
adc
adc
push
push
push
nop
les
mov
jae
pop
push
mov
and
rcl
imul
mov
out
mov
sub
mov
cmpsb
push
jge
sub
decl
add
jg
loop
jb
adc
lret
sbb
ss
lods
sub
aaa
out
adc
loope
adc
xor
adc
push
jmp
xor
pusha
test
xor
rorb
icebp
call
jbe
loopne,pt
cs
cld
mov
cmp
xchg
orb
push
push
xor
enter
outsb
xchg
xor
mov
mov
cmp
xor
cmp
insb
dec
sub
stos
jae
sub
and
mov
std
xor
movsb
mov
jge
aas
mov
repz
push
negl
cmp
sbb
mov
jne
cmpsl
jnp
add
sar
into
shr
cs
testl
aaa
xchg
loop
ret
adc
cmp
mov
mov
or
dec
inc
jmp
out
out
mov
xor
in
pop
cmp
pop
cmc
push
fildl
and
jnp
add
mov
outsl
lea
xlat
or
pop
stos
xchg
das
outsb
push
pusha
jp
inc
sbb
ss
movsb
notl
dec
cld
cltd
mov
pop
ss
sbb
jae
pop
stc
daa
arpl
mov
nop
cmpb
arpl
out
arpl
push
pop
xchg
lret
mov
fiadds
pop
adc
inc
adc
mov
ret
test
jns
cmpsl
xor
lahf
push
push
cmp
adc
loope
out
movsb
js
inc
daa
lods
sbb
sahf
dec
and
pusha
test
negb
mov
cwtl
lret
fsubp
add
mov
lds
loopne
push
sbb
push
loop
les
pop
mov
out
dec
or
sarb
cs
mov
call
movsl
stos
xchg
cmp
pop
dec
stos
mov
addl
pop
addr16
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
cmp
pop
push
movsl
cmp
loop
jo
pop
cmp
test
push
faddl
and
je
scas
and
out
pop
shlb
leave
add
push
sbb
movsl
dec
pop
daa
arpl
xchg
ficomps
lcall
popa
jmp
pop
imul
ljmp
push
adc
sub
repz
push
mov
sarl
inc
xchg
mov
pop
and
lcall
pop
jg
sbb
out
sbb
mov
xchg
xchg
cmp
cmp
add
and
test
cmc
in
pop
jnp
cmp
add
jae
jle
insb
jl
jo
jg
mov
lret
push
daa
sbb
addr16
ret
cld
arpl
sub
jnp
sti
out
xchg
inc
and
in
lret
enter
ljmp
xlat
xchg
add
cmp
je
imul
sbb
repz
dec
ss
std
sub
inc
dec
fimull
mov
pop
add
dec
mov
mov
leave
insl
loop
sarb
cmpl
insl
cwtl
outsb
pop
movsb
adc
loopne
into
sbb
xor
sbb
bnd
push
rcrl
push
sbb
fstpt
lret
mov
push
jle
leave
xchg
lea
out
mov
fcomps
add
xlat
int
jne
mov
pushf
mov
ret
outsl
fsub
lods
add
sbb
and
xchg
mov
mov
mov
adc
fs
cli
inc
es
out
adc
push
cli
cmp
test
xchg
mov
jg
scas
jns
jp
in
mov
jp
pop
loop
mov
stc
xor
jo
rep
jp
movb
inc
cmp
nop
sub
sub
cmp
test
repnz
inc
lcall
mov
inc
cmp
pop
adc
jne
rcr
jo
push
repnz
aaa
sbb
call
adc
push
ljmp
mov
fsubl
jmp
sub
pushf
and
or
or
loopne
int3
scas
ret
push
xchg
xlat
add
xor
adc
push
lods
push
jmp
mov
jg
outsb
ret
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
mov
and
jo
or
pushl
call
cmc
int3
je
cmc
cmp
push
xchg
dec
div
push
xor
sbb
sub
cs
mov
shrb
jne
xor
mov
jae
dec
mov
xor
loope
inc
test
sbb
sbb
and
push
pop
jmp
out
in
adc
jns
ret
inc
nop
jle
xchg
fs
adc
mov
push
dec
mov
mov
mov
pop
frstor
and
loope
jns
daa
inc
sbb
jle
cmp
popf
pop
sbb
xchg
or
pop
cld
push
mov
stc
push
push
imul
and
mov
cmp
fnstsw
sahf
fidivrs
add
pop
cmp
aam
add
data16
es
xor
pop
imul
inc
jecxz
sarb
mov
xchg
adc
out
push
imul
xor
lock
mov
testl
cmpsl
mov
jle
add
sub
movsb
or
sub
push
push
into
aad
add
pop
mov
sub
jnp
fmulp
mov
icebp
xchg
and
roll
les
daa
and
scas
stos
push
sbb
inc
das
inc
inc
add
pop
into
movsl
jb
and
mov
cmp
fsts
inc
add
mov
push
fisubrs
xor
or
inc
sti
ljmp
test
dec
fildll
scas
xor
and
mov
lcall
xchg
pop
orl
enter
fwait
push
lock
mov
test
roll
push
lret
xor
arpl
adc
ret
icebp
cli
dec
cmp
push
or
lock
pop
popa
scas
dec
cmp
jae
jae
pop
push
jno
out
lods
loopne
xor
sbb
dec
inc
xchg
push
popa
into
push
jge
sbb
popa
lahf
xor
es
jbe
insb
add
pop
sbbl
lods
mov
clc
xchg
iret
adc
fcmove
mov
sub
xor
sub
sbb
imul
in
cmc
add
pop
push
cltd
fistl
mov
inc
jbe
pop
push
loope
fwait
and
and
dec
mov
sbbl
mov
arpl
push
push
testb
mov
or
inc
pop
cwtl
hlt
push
sbb
jbe
addb
ret
int
aam
sbb
ret
and
jo
push
rcrl
push
mov
sahf
or
cmpsl
mov
popa
mov
mov
aaa
movsb
xchg
into
add
sbb
ljmp
shrb
dec
outsl
ret
mov
sbb
in
mov
jae
popa
push
adc
loope
sub
scas
pop
mov
push
popf
or
mov
mov
add
jb
inc
add
out
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
ret
and
jo
jle
pop
ficompl
fsubp
loopne
add
and
add
sbb
bound
push
popf
cmp
pop
jns
push
out
in
enter
jmp
jbe
add
xlat
aaa
mov
xor
mov
cli
jb
xchg
aaa
lret
mov
xor
rolb
mov
push
int
and
cs
rorb
pusha
daa
and
push
mov
clc
inc
adc
dec
dec
aam
lods
xchg
loop
rcrb
xchg
jne
ret
inc
inc
jge
stc
std
daa
popf
psadbw
cmpsl
cli
ret
popf
mov
jecxz
imul
mov
fstpl
sub
shrl
dec
rorl
mov
sti
mov
test
add
dec
outsl
mov
sub
pop
jae
xor
dec
xlat
movsb
pop
sldt
js
orl
xchg
jmp
test
dec
mov
leave
int3
or
and
and
pop
xor
inc
sbb
jle
pop
inc
cltd
sarl
sub
jg
adc
push
out
leave
and
push
mov
repnz
cwtl
imul
push
jnp
lret
mov
mov
mov
mov
outsb
cmp
fisubrs
push
mov
and
jne
or
dec
jbe
std
jbe
fs
xor
mov
ror
fnclex
popa
add
mov
mov
ja
popa
insl
shlb
out
aam
xchg
pop
out
pop
jmp
or
sbb
inc
dec
dec
inc
adc
imul
xchg
cwtl
pop
or
mov
and
in
pop
sub
inc
mov
cmpsb
aas
movsb
jle
pop
stos
or
fsubs
fcmove
rolb
outsb
and
jns
data16
lods
sbb
test
insl
jg
sub
inc
fdivrs
dec
and
cmp
mov
adc
mov
sbbl
add
push
into
cmp
push
jg
lods
pop
std
adc
ds
insl
ss
enter
pop
mov
inc
mov
out
mov
pop
inc
icebp
cld
pushf
pop
pop
cs
jmp
pop
xlat
xor
inc
lock
jecxz
ror
test
imul
or
pop
cli
lods
fs
call
imul
in
xchg
add
int
pusha
pop
ja
jmp
popa
movsl
mov
adc
das
jnp
add
pop
add
test
imul
adc
test
xor
aad
push
or
lret
sbbb
fildll
aas
dec
stos
and
mov
jg
int
cmp
or
lea
xchg
test
sbb
xor
and
mov
scas
sbbb
or
dec
out
xor
fdivs
int
sti
nop
push
mov
fcomi
lcall
pop
mov
and
shl
xlat
mov
pop
shl
inc
dec
xchg
pop
ljmp
or
xlat
dec
jb
es
out
inc
ja
jge
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
aas
fwait
out
test
jo
add
std
mov
mov
adc
sbb
nop
lret
xor
insb
xchg
es
out
cmp
test
inc
ja
das
enter
lods
sub
loope
insb
pop
xor
pusha
dec
and
xchg
cmp
mov
add
push
push
push
pop
mov
in
sbb
popf
shlb
jge
inc
testl
jge
pop
loop
mov
dec
push
fnstsw
js
mov
push
call
xor
or
cli
cs
push
adc
adc
mov
sub
jmp
cmp
xor
or
scas
mov
pop
es
jae
adc
lret
filds
add
jno
rclb
and
shlb
arpl
inc
ret
popa
adc
push
mov
ficoms
js
push
nop
movsl
sub
es
call
sarl
jo
mov
mov
lds
fadds
out
je
loopne
cli
adc
out
sbbl
cs
aam
cmc
stc
mov
bound
adc
outsl
jmp
pop
fnsave
inc
mov
pop
imul
scas
sub
stos
mov
xchg
sarb
sahf
jb
push
sbb
mov
pop
xor
fwait
andl
mov
push
subl
and
cmp
pushf
aaa
adc
add
push
loop
jl
pop
loopne
imul
mov
adc
cmp
ret
pop
sbb
pop
push
sub
jno
mov
pop
cwtl
xor
cmp
push
sub
sbb
fists
mov
mov
lds
lds
subl
and
adc
out
mov
in
mov
or
push
pusha
pop
jb
in
add
loopne
std
sub
sub
lahf
mov
add
inc
insl
sbb
sbb
lcall
sub
addr16
mov
or
xchg
xor
iret
xor
test
das
push
cmpsb
shl
int
or
push
dec
sbb
xor
push
sub
dec
int3
fldl
int
mov
lret
fidivl
loope
mov
ja
imul
lret
inc
in
es
pcmpgtw
sub
dec
add
aas
shll
push
push
xor
push
xor
mov
mov
mov
nop
mov
jmp
rolb
bound
int
cmp
jmp
cmp
aaa
cmp
mov
subb
cmpl
pop
add
xchg
fcomi
in
mov
iret
jbe
mov
inc
adc
mov
xchg
cmp
xor
in
mov
sbb
mov
in
and
movsl
shl
lcall
rorb
push
sub
clc
mov
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
xor
int3
jo
and
jo
fdivp
mov
xchg
cs
cmpsb
icebp
inc
adc
push
fbld
cmp
inc
sarb
cld
adc
sahf
je
jmp
push
pusha
gs
push
cltd
inc
xor
roll
in
scas
xchg
cmpsl
jnp
test
xchg
das
and
ficoms
dec
mov
push
hlt
dec
and
cwtl
push
loop
adcl
idivb
repnz
cmp
mov
lret
ret
inc
xchg
dec
loop
inc
jne
scas
and
loopne
add
gs
and
cmp
mov
jbe
xor
push
sahf
sarl
cltd
out
shlb
mov
pop
movsl
add
xchg
scas
ret
cld
jo
push
sbb
popa
movsb
jmp
or
adc
xchg
jle
stos
movsb
xchg
scas
std
xchg
dec
push
xchg
mov
xor
cmp
and
inc
scas
js
sub
sbb
test
adc
inc
icebp
fdivr
xor
shll
test
xchg
xchg
mov
adc
and
fwait
out
jae
and
mov
lret
pop
jp
fiadds
mov
imul
cltd
cmp
xor
repz
rcll
xor
cmpsl
cmp
mov
mov
mov
dec
xor
dec
fiadds
loop
lods
outsb
mov
adc
cmp
arpl
add
mov
jb
scas
add
adc
inc
pop
fidivrl
les
inc
pop
push
fisttps
out
sbb
in
inc
and
mov
mov
sub
in
fdivrp
mov
jo
xchg
cmp
dec
jecxz
cmp
test
or
sub
ljmp
jae
je
xchg
inc
int3
sbb
add
mov
jp
int3
outsl
mov
add
enter
cltd
xor
mov
sub
daa
pusha
pop
mov
dec
push
adc
mov
adc
and
popf
adc
aaa
cltd
das
inc
add
fsts
dec
popf
or
push
in
std
shll
mov
out
cmp
mov
test
adc
insl
adc
and
pop
sub
andb
aas
or
mov
aas
mov
mov
and
pop
aam
push
cld
fldl2t
lock
jnp
xor
psrld
xchg
daa
gs
es
add
negb
fistl
sahf
into
hlt
daa
xchg
xchg
loop
ss
std
cli
add
mov
incl
mov
je
add
xchg
incb
outsb
adc
cmp
movsb
call
inc
or
lret
cs
xor
loope
repnz
jp
xchg
push
popa
adc
dec
adc
test
nop
jb
and
test
ffreep
add
and
xchg
jle
inc
lds
push
ljmp
mov
pusha
lahf
cmp
cmp
and
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
test
xorl
jo
and
jo
ret
lcall
stos
push
inc
dec
outsl
out
push
lret
cli
int
jo
pop
mov
cld
jae
add
loop
repz
jecxz
bt
out
dec
div
mov
jg
lea
jno
inc
or
mov
cmp
out
or
sbb
adc
jecxz
insb
mov
inc
leave
gs
mov
cmpsb
inc
mov
lcall
cmp
or
or
jo
lock
inc
cld
cmp
shl
divl
imul
lahf
fwait
pop
jl
psubd
mov
loope
stc
mov
inc
popf
test
cwtl
add
cmpsb
push
jae
jl
add
push
fiaddl
and
int3
jle
push
aad
pop
clc
std
insl
pusha
pop
inc
fistpll
xchg
add
dec
icebp
mov
jle
cmp
pcmpgtw
ds
adcl
cltd
call
cwtl
pop
xchg
jb
maxps
sbb
bound
aad
insl
je
push
js
mov
cmp
sub
jno
ja
xorl
add
sbb
xchg
and
je
pop
sub
mov
jp
cmp
enter
or
mov
dec
out
insl
mov
xchg
call
inc
sub
jo,pt
pop
punpcklwd
sbb
adc
mov
test
add
ljmp
lcall
clc
mov
shrl
in
ja
rcll
insb
xor
or
mov
lea
out
stc
cmp
xchg
daa
lods
cmp
jmp
jg
lods
adc
bound
push
stos
mov
mov
js
mov
dec
mov
lahf
rcrb
and
daa
mov
add
jg
mov
mov
fnstenv
ds
frndint
xchg
cmp
enter
mov
pop
lcall
roll
sub
mov
test
lea
xchg
icebp
cmpsb
push
jl
popf
xchg
sub
pop
rclb
or
lock
mov
out
inc
dec
jmp
pop
push
push
pop
jo
mov
mov
out
int3
leave
mov
xchg
test
lahf
mov
ss
or
push
xlat
jl
dec
fisubrs
div
insb
xchg
pushf
loopne
movsl
or
inc
js
je
push
aam
lcall
testl
andl
push
aas
jge
dec
lret
sbb
push
xlat
in
cld
dec
mov
mov
lods
add
int3
dec
out
movsl
gs
xchg
les
cs
inc
std
xchg
cmp
imul
test
jle
shll
or
outsl
ret
jg
inc
in
shrb
cli
and
sub
mov
sahf
jl
push
xchg
lock
mov
loope
cmp
push
lret
push
sub
addr16
mov
ja
loope
mov
nop
push
scas
cmp
sub
aad
mov
jge
or
insl
or
pushf
jecxz
pop
pop
sub
fcomip
bound
jl
mov
cmp
shl
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
hlt
rorl
and
jo
add
push
js
push
jne
int3
fcomps
daa
and
es
leave
dec
and
rorb
and
xlat
mov
aaa
and
sahf
push
pop
add
das
inc
mov
gs
fsubs
rorb
sub
clc
lods
xchg
lret
popf
aam
jb
sub
das
call
push
mov
lock
xor
adc
ret
mov
mov
cmpsb
daa
mov
push
call
out
hlt
cli
mov
jno
and
and
in
push
push
arpl
lds
xchg
insl
sub
pop
repz
cld
push
push
pop
inc
adc
dec
js
js
pusha
es
and
es
dec
loope
nop
bound
mov
js
je
cmp
lods
nop
add
ret
lret
pop
test
mov
xchg
inc
xor
jecxz
add
ljmp
popa
cmp
pop
cwtl
xchg
mov
rorb
cmp
sar
jg
adc
dec
fnsave
cmpsl
inc
int
cmpsb
adc
push
jle
lahf
int
fisttpll
cli
dec
nop
out
lock
notl
sti
pushf
aaa
testl
fisttpll
adc
and
iret
sub
iret
movsb
add
push
fnstsw
ljmp
sub
mov
sti
sbb
pop
dec
mov
imul
xor
sbb
shrb
pop
hlt
ljmp
pop
out
mov
rolb
mov
leave
mov
sbb
pop
icebp
aam
je
fbld
or
or
fidivrl
les
or
out
fidivrs
adc
pop
pop
pop
dec
jecxz
mov
call
lcall
nop
shll
orl
sbb
mov
aaa
xchg
es
scas
mov
cltd
xor
rorl
aaa
lret
lock
nop
loope
movl
add
push
test
test
bound
xchg
jbe
add
xchg
in
mov
fildl
cmp
cltd
and
sbb
loope
push
push
mov
cmpsb
mov
andb
or
inc
lods
mov
push
test
mov
fcmovb
add
lahf
mov
and
sbb
cmc
add
dec
pop
mov
test
test
stc
sbb
aam
cmp
rcll
cltd
arpl
and
shll
push
lods
mov
sbb
clc
cli
sbb
jb
pushf
pop
mov
jp
lods
in
test
mov
sub
and
xchg
xchg
pop
mov
jbe
xor
sbb
jp
pop
push
iret
fcom
mov
scas
push
pop
ljmp
mov
shll
cmpb
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
adc
xor
jo
jge
jo
sbb
aad
mov
jns
rclb
jns
jo
shlb
push
lock
in
out
inc
dec
ficoms
addr16
icebp
es
rcr
aam
pushf
out
clc
cmpsb
lahf
sbb
xchg
movsb
popf
mov
aas
lods
ret
fimuls
dec
xorb
iret
jmp
shrb
addb
or
out
hlt
push
xchg
add
jo
lahf
fld
mov
xor
push
adc
mov
inc
popf
imul
int3
aad
inc
fisttpll
decl
sub
dec
jnp
jno
lahf
test
add
fsubrl
addr16
aas
sti
jbe
int3
ret
xor
dec
ret
sbb
cltd
sub
mov
sarl
mov
xchg
sub
and
iret
scas
cmp
call
mov
mov
fistpl
dec
inc
cmp
pop
scas
ficomps
cmp
mov
sbb
ja
aas
cwtl
mov
enter
xchg
ljmp
cmp
inc
xchg
in
mov
bound
jb
xor
call
add
cmc
mov
in
scas
adcl
cmp
rcrl
inc
inc
xchg
stos
push
push
xor
lret
pushf
jnp
jp
ficompl
sub
pop
inc
mov
jmp
and
cmp
idivl
xchg
push
jb
inc
mov
mov
ret
and
or
in
ds
jns
push
push
dec
mov
out
pop
mov
sbb
jne
or
pop
adc
pop
lahf
lret
or
or
adc
das
stos
addr16
xor
pop
cli
jp
adc
pop
cmc
loopne
insb
mov
mov
iret
mov
cli
fstl
and
incl
stos
arpl
mov
loope
or
sbb
int
push
lret
cmc
push
lcall
push
mov
stc
insl
fsubp
out
cmp
pop
out
fnstsw
popf
ss
jl
xchg
push
cltd
mov
repz
cmp
in
sbb
and
mov
adc
fprem1
mov
shl
mov
loopne
xchg
cmp
cmp
xchg
insl
push
dec
mulb
push
iret
mov
sub
mov
pop
sbb
sbb
push
ltr
testl
call
dec
inc
loopne
aad
inc
and
clc
stc
fdiv
cmp
xchg
ret
push
sarl
addl
mov
mov
ss
mov
shll
push
outsb
push
mov
add
fsubrl
in
xlat
loope
cmp
add
fs
ja
push
lock
and
push
out
mov
mov
repnz
cltd
arpl
sbb
lahf
arpl
stc
jae
jp
jmp
jle
jg
dec
jnp
and
jl
push
lret
aaa
sbb
inc
xor
daa
push
xchg
and
push
nop
mov
ja
fisttps
mov
push
xchg
add
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
adc
ds
dec
fs
ss
xchg
cld
sbb
or
js
push
xchg
fs
cmp
sub
cs
addr16
or
loop
fcompl
xor
mov
test
test
addl
std
and
mov
and
fs
xor
and
add
imul
cmpb
ljmp
rorl
dec
add
and
mov
mov
int3
dec
push
loop
int3
arpl
xchg
xor
xor
bound
icebp
and
jg
das
sbb
cmp
push
sbb
sub
into
mov
jp
pop
insl
nop
xchg
sub
shll
mov
rcrb
cmpsl
inc
scas
inc
testl
add
cmp
cmpsb
jns
dec
jnp
xchg
push
stc
loope
pop
sub
sti
and
scas
inc
adc
movsb
pop
pop
push
mov
dec
mov
in
insb
dec
inc
or
int
cs
xchg
jne
in
xor
bnd
xchg
add
arpl
ret
dec
dec
mov
mov
mov
dec
push
ss
es
pop
pop
popa
add
testl
addr16
mov
lret
dec
xchg
sbb
insl
jl
inc
jmp
adc
popa
out
xchg
xor
jb
inc
js
cmovo
inc
repnz
adc
add
add
popa
sbb
rorb
xor
jle
push
mov
jle
xor
pusha
test
lods
mov
adc
test
in
fisubrs
xchg
push
mov
lahf
dec
inc
add
xchg
sub
sub
int3
push
pop
and
pop
dec
pop
lret
mov
xor
sbb
das
imul
push
push
shll
aaa
xor
jns
sub
std
stos
rsm
sahf
data16
and
mov
pop
inc
cmp
xor
xor
cli
fisubs
mov
cli
scas
lock
sahf
add
push
push
sbb
xchg
jmp
repnz
mov
push
cmp
push
sub
xchg
ja
leave
xor
test
scas
int3
in
pop
push
test
jbe
fnsave
sbb
enter
inc
inc
inc
call
out
pop
cmp
dec
mov
shll
sbb
xchg
rcrl
and
xchg
sub
pop
xor
cltd
mov
dec
addr16
mov
mov
js
jge
dec
inc
inc
sbb
icebp
imul
xor
nop
push
dec
add
std
inc
mov
xor
movsb
mov
sbb
arpl
sbb
mov
push
xor
das
pusha
es
mov
add
dec
sbb
mov
shll
pop
pop
xchg
inc
lret
adc
pop
inc
or
rcrb
sbb
iret
outsb
or
jae
lods
adc
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
or
icebp
xchg
fdivl
and
jo
mov
mov
push
aas
mov
insb
int3
mov
cmc
adc
stos
in
vpsubusw
sahf
cmp
jp
mov
and
mov
or
dec
sub
xor
enter
fnsave
in
dec
sub
les
dec
add
cli
test
mov
ret
jp
lcall
es
repnz
xchg
add
cltd
shlb
mov
imul
ds
xor
xchg
mov
ljmp
mov
inc
lods
inc
lret
mov
xchg
fadds
insb
xchg
cwtl
in
cmp
scas
fisubl
sbb
xor
mov
inc
sbb
lret
es
cwtl
shll
and
jno
jbe
fs
hlt
decl
or
xchg
sbb
and
mov
stc
xchg
call
movsb
addl
add
xchg
into
xchg
aas
nop
pop
mov
sub
xlat
addr16
out
adc
int
cmp
add
fdivrl
mov
and
aad
mov
inc
daa
jbe
mov
sub
inc
les
jmp
jnp
shll
fiaddl
mov
sbb
jno
mov
lea
or
jmp
nop
bound
mov
jge
jns
mov
add
mov
arpl
aaa
jb
add
imul
popa
out
arpl
fsub
sbb
xor
stos
mov
aad
xchg
dec
jecxz
cmp
mov
dec
mov
dec
lret
sub
insl
cli
and
and
arpl
xor
addl
ja
lods
movl
movsl
dec
pop
xabort
dec
call
movsb
push
push
jns
mov
jecxz
insl
cmp
inc
xchg
cmp
cs
scas
iret
push
sbb
mov
ss
inc
add
xor
mov
pop
sar
mov
dec
inc
inc
mov
adc
cmpsb
es
out
out
test
loopne
push
enter
cs
xchg
add
jae
aaa
adc
ljmp
pop
cli
mov
aam
je
rorl
enter
jns
inc
in
sub
fdivs
xor
cs
jbe
cltd
inc
mov
add
jg
cmp
cmp
daa
stos
mov
loopne
lret
lods
mov
push
push
sbb
adc
lods
in
dec
fmulp
idivb
add
fmull
xchg
setb
jno
cmp
cmp
pop
cmp
push
lods
xor
movsb
les
les
adc
jns
jo
lock
sub
ret
push
ret
lcall
lahf
stos
cltd
fstpl
xchg
shl
lcall
or
jne
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
cmp
push
test
movb
cli
inc
fwait
ja
insl
jge
movlps
adc
push
jae
pop
mov
insb
pop
jns
pop
pop
in
dec
jae
lea
das
inc
jb
add
daa
mov
icebp
lods
cmp
bound
or
adc
push
cmc
fs
sub
jg
out
and
add
aam
or
cs
fdivl
cmpl
lret
inc
mov
and
popa
ret
mov
cmc
push
mov
int
mov
sub
cmc
int
testb
cli
mov
fs
shlb
popa
pop
bound
fidivl
cs
jb
dec
sub
das
adc
loop
or
lret
cmp
jo
jnp
jno
aad
fadds
rdpmc
arpl
cmpsb
cmp
add
mov
sub
movsl
int
push
lea
clc
imul
iret
push
js
popa
xor
clc
into
mov
shl
mov
fcom
in
les
insl
sti
pop
and
xor
jg
or
pop
ret
sbb
xor
iret
inc
cmpsb
push
sub
hlt
and
cmpsl
xor
or
sub
dec
pop
ss
pop
mul
in
dec
pop
push
fwait
push
mov
push
lods
hlt
xchg
inc
out
push
inc
int
cwtl
dec
push
arpl
xchg
or
scas
sbb
daa
inc
lods
mov
not
jge
jae
mov
or
mov
add
mov
add
push
into
and
in
aaa
cwtl
sti
sbb
sti
sahf
icebp
fbstp
inc
dec
dec
sbb
push
arpl
inc
lret
adc
jg
fwait
stc
mov
dec
jo
jmp
mov
scas
sbb
outsb
stos
jno
mov
dec
cmc
cmpsl
and
and
shrl
les
fists
inc
or
dec
and
adc
pop
mov
movsl
aad
lahf
xchg
out
sahf
mov
ja
inc
xor
hlt
fiadds
adc
mov
std
xor
push
xor
push
std
push
jmp
test
inc
mov
das
je
dec
mov
lods
xchg
mov
push
call
sbb
xor
aas
das
xor
jnp
or
push
bound
dec
cs
stos
push
les
cmpsb
cli
mov
int3
jecxz
cs
dec
xor
cld
adc
mov
cltd
in
mov
pop
xor
data16
xor
jbe
fs
in
loope
inc
adc
lea
lahf
les
cmpl
cwtl
push
shrl
sahf
ret
xchg
xchg
add
sbb
test
leave
sbb
scas
rcl
outsl
addb
lahf
mov
nop
lcall
test
sbbl
popa
outsb
ss
je
xchg
jno
sbb
jne
or
push
cmp
rclb
inc
hlt
inc
imul
test
sbb
ret
movsl
mov
icebp
test
jg
or
add
jmp
add
out
out
xor
call
pop
pop
adc
jo
and
jo
dec
mov
test
cmp
xchg
push
cs
add
xor
pop
outsl
cmp
ja
ljmp
dec
mov
push
mov
sar
aas
fucomi
into
mov
lahf
das
xor
cmc
fs
int3
xchg
mov
aam
mov
add
gs
adc
push
inc
adc
inc
mov
lea
lds
clc
cmp
mov
sub
adc
mov
frstor
into
dec
and
pop
add
push
fisubrl
and
jne
mov
cmp
sbb
dec
sub
sub
cmp
pop
add
push
xchg
xor
sub
xchg
cwtl
dec
cs
xor
jb
push
js
faddl
mov
hlt
push
add
in
daa
jge
outsb
adc
imul
mov
lcall
enter
adc
pop
xlat
mov
pop
ss
cmovo
sbb
lahf
dec
dec
cmp
pop
and
stos
jmp
call
pop
push
mov
cmp
cmpsl
mov
cli
fistpl
pop
push
mov
aad
mov
sarb
aad
jo
dec
cmpsb
adc
je
out
dec
fwait
andl
jo
enter
ja
dec
and
xchg
addr16
push
jmp
insb
mov
pusha
aad
fcoms
insl
fiaddl
fnstsw
arpl
call
gs
lods
jmp
xchg
or
inc
mov
orb
cli
cmp
mov
push
movsl
adc
loope
adc
sbb
out
sbb
jle
push
pop
mov
xchg
sti
and
inc
test
cli
shlb
xchg
or
gs
movsb
jle
sub
jbe
lds
xchg
fldl
mov
out
clc
inc
std
add
and
fidivs
ficoms
pop
subl
out
and
ret
xor
mov
or
mov
mov
cwtl
fst
xor
aaa
lret
rcpps
dec
push
or
mov
push
xchg
mov
add
movsb
aaa
cwtl
shrl
mov
mov
pushf
dec
pop
inc
clc
sub
imul
push
mov
fiaddl
cli
lods
jle
popf
aas
push
inc
and
outsl
out
sbb
push
mov
add
dec
mov
sarl
mov
fwait
testb
cltd
sbb
dec
sbb
adc
add
mov
in
push
mov
popf
lods
inc
or
je
insl
ret
sbb
mov
std
fisttpl
sbb
mov
repz
jns
loope
mov
pop
in
xchg
mov
xchg
into
lods
mov
lds
xchg
sub
adc
jbe
fistps
outsb
lds
cmp
sbb
outsb
lahf
add
xor
cmp
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
bound
loop
jo
jge
jo
cmp
add
xchg
add
stos
adc
inc
cltd
push
mov
mov
int
cltd
mov
ss
jbe
in
xchg
push
xchg
repnz
cmc
adc
add
call
push
push
inc
cmpsb
cld
xchg
mov
push
mov
ret
iret
jne
jns
jg
pop
lahf
lahf
mov
outsb
pop
and
addr16
and
rorl
jo
icebp
mov
clc
mov
fdivs
jl
xor
pop
pop
cmp
sbb
mov
sbb
mov
sbb
or
add
out
adc
add
dec
jb
seto
addr16
fisubrl
or
push
int3
and
adc
inc
jp
pusha
push
xchg
sub
jae
push
rorb
cltd
pop
xorb
insl
out
out
pop
cmp
lea
push
mov
jp
cmpsl
xchg
pusha
adc
rcrb
aam
lahf
pop
imul
xchg
jle
les
into
jge
je
cwtl
xchg
mov
hlt
adc
jb
add
mov
push
xor
or
mov
and
mov
jmp
call
mov
xchg
pop
scas
mov
fwait
rorb
out
fnstsw
das
sbb
push
jle
pop
iret
int3
adc
movsb
lret
adc
lods
and
pop
jno
lea
cmp
es
sub
xchg
sti
mov
and
and
cmpsb
jns
inc
dec
pop
inc
js
xor
out
movsl
pop
and
into
loope
xor
lods
jbe
call
xchg
gs
jmp
pop
jmp
cs
outsl
fwait
jge
test
sbb
mov
xor
stos
int3
and
jne
int
clc
or
lret
lcall
adc
stos
das
clc
jecxz
adc
xchg
sbb
addr16
fwait
les
cmp
pop
xchg
into
lods
imul
das
xchg
pushf
and
add
sub
rsm
pop
cmp
in
adc
or
arpl
or
mov
add
inc
push
insl
imul
adc
adc
scas
xchg
fstpl
rcrb
movsl
dec
iret
pop
fstl
or
lret
loop
jp
mov
int3
add
adc
jg
push
mov
insl
or
mov
fnsave
adcl
dec
cmp
adc
rorb
imul
push
data16
sbb
addb
xchg
xchg
test
lahf
mov
xchg
mov
dec
outsl
sbb
loope
scas
xor
inc
pop
lods
mov
push
sbb
add
add
cmp
es
xchg
and
push
shlb
mov
sti
push
sbb
inc
aaa
sar
add
and
inc
add
dec
add
add
mov
ja
add
xchg
jl
outsb
xlat
out
jo
and
jo
imul
int3
out
pop
sahf
jbe
xchg
xor
enter
cltd
jbe
call
roll
mov
push
adc
mov
es
imul
fidivs
adc
cmovle
sbb
jle
testl
sub
je
add
mov
cli
outsl
imul
insl
jb
fnstsw
int3
and
xchg
fcompl
fldenv
inc
jl
sbb
nop
pop
movsb
xor
fsubs
jne
inc
cmp
std
adc
add
adc
imul
mov
push
dec
cmp
dec
pop
pop
call
lock
fisttpll
mov
bound
fiaddl
inc
jns
jb
mov
cmc
sub
dec
je
jno
cmp
stos
adc
popf
pop
mov
hlt
ss
lret
cmpb
xchg
orb
iret
xchg
shll
cmp
mov
aad
add
in
cld
or
sbb
sub
dec
in
fwait
push
sub
mov
popa
sahf
rol
jmp
sub
das
mov
xchg
loopne
sbb
sbb
stc
add
mov
lahf
pop
inc
mov
data16
inc
adcl
out
push
push
loopne
hlt
sub
jmp
rorl
pop
icebp
lahf
dec
add
sbb
adc
mov
push
jbe
sub
insl
fstps
mov
add
push
pop
jbe
aaa
out
adc
inc
scas
shlb
scas
dec
es
enter
cmpsl
addl
ficompl
divl
out
cltd
cli
mov
jl
pop
testl
sub
xchg
loopne
sbb
jnp
cli
pop
or
sub
iret
sahf
loopne
test
lock
xlat
push
nop
in
cli
xchg
pop
mov
loop
je
sub
adc
push
pop
sti
movsl
xchg
test
popf
push
xorb
pop
mov
imul
testb
push
push
ss
sarl
mov
mov
xor
scas
sub
sub
test
scas
lods
sub
push
cld
aas
jl
dec
mov
mov
mov
mov
pop
push
mov
sbb
pop
lods
stos
push
cltd
lret
mov
pop
push
mov
sbb
dec
mov
add
out
push
cmp
xchg
pop
lods
inc
mov
fst
mov
ds
and
or
gs
mov
xchg
lds
out
mov
rcl
ret
test
or
js
fists
sarb
mov
imul
test
cmp
bound
test
imull
int
iret
inc
popa
iret
hlt
pop
dec
and
mov
xchg
data16
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
jns
in
jo
lahf
jge
jo
std
jbe
scas
jmp
lahf
push
mov
mov
mov
inc
inc
push
pop
cld
stos
fisubrs
fwait
push
jnp
or
fsubs
cs
xchg
lret
adc
adc
xorb
jl
fdivrl
mov
mov
icebp
lods
jle
cmp
inc
jge
cwtl
mov
jmp
xchg
aad
ss
lahf
sub
pop
scas
push
incl
and
push
fwait
lock
dec
mov
push
jp
stos
cmp
push
dec
loopne
inc
lock
sub
mov
push
mov
push
out
mov
ret
mov
pusha
adc
shlb
mov
lret
popa
inc
es
repz
ljmp
add
and
rdtsc
push
out
in
sbb
inc
sub
in
movsl
jo
pop
jae
add
jne
imul
sbbb
adc
dec
popl
cmp
lods
aad
test
cwtl
pop
push
adc
imul
imul
or
add
inc
mov
push
subb
or
fistps
fistps
add
adc
ficompl
adc
adc
cltd
fwait
cltd
pmullw
sub
inc
scas
mov
add
stc
mov
inc
jno
pop
dec
outsl
imul
xchg
scas
inc
popa
repz
popf
imul
shlb
fldl
mov
cmp
add
adc
inc
bound
dec
pusha
imul
test
sti
jbe
and
sub
cmp
inc
push
mov
aaa
movsl
daa
mov
xchg
ja
mov
sti
jmp
cmp
and
xor
cli
leave
add
scas
imul
rolb
pop
sub
movsb
hlt
aam
pop
fimull
fdiv
sahf
mov
pop
ret
add
push
ffreep
lock
dec
lods
sbb
cmp
in
fidivrs
les
sbbb
or
pop
and
test
pop
sub
pop
xchg
mov
in
test
pop
pop
jnp
call
sahf
data16
into
or
sti
outsl
repnz
lcall
xor
sbb
mov
call
mov
and
mov
or
adc
sbb
iret
or
mov
mov
loopne
or
mov
arpl
out
hlt
sbb
scas
cltd
or
dec
ret
cmp
push
or
xor
push
mov
push
mov
int3
sbbb
repz
in
in
inc
cmp
mov
div
dec
add
or
cli
pop
std
mov
notl
cmp
subb
test
dec
je
sbb
sbb
in
int3
push
dec
pop
insb
mov
popf
sub
icebp
xor
sbb
xor
add
inc
sbb
out
imul
mov
vpor
mov
es
mov
jg
ja
inc
mov
test
mov
idivl
lods
xor
sub
jbe
and
adc
add
or
jnp
sbb
inc
ss
sbb
in
sbbl
dec
mov
sub
mov
xchg
lods
test
inc
jb
mov
push
fistpll
pop
adc
push
xchg
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
das
add
add
call
jo
movsb
lock
cmc
je
mov
fcmovu
mov
fmull
push
mov
xchg
adc
sbb
aas
in
inc
stos
repz
pextrw
jae
sub
gs
cmp
loope
lds
xchg
inc
xlat
pop
jb
fs
cmovle
hlt
iret
fdivs
int3
xor
add
bnd
shlb
sbb
cmc
xor
test
jle
push
cli
cmp
mov
inc
mov
inc
and
movsl
mov
loopne
sbb
stc
popa
test
push
pop
push
mov
or
addb
inc
out
test
loop
xlat
stc
pop
fs
lock
scas
mov
and
jge
sub
inc
nop
insl
mov
aas
inc
sub
arpl
icebp
aad
call
clc
mov
mov
popf
fcompl
mov
push
inc
lret
push
aaa
daa
fs
push
xchg
pusha
mov
loopne
repnz
aam
inc
cmp
inc
int3
aas
sahf
or
mov
xlat
adc
or
out
mov
pop
rcl
jnp
clc
push
pop
hlt
fmuls
lods
push
jge
hlt
and
fwait
aas
out
insl
add
mov
lret
std
jns
in
popa
or
rdpmc
stos
adc
imul
adc
out
push
pusha
xchg
lahf
repz
pusha
adc
push
inc
mov
adc
pop
push
fs
or
xchg
idivb
push
clc
loope
sub
push
std
jns
mov
mov
mov
in
add
ffree
cld
andl
stos
sub
movsl
dec
xchg
insl
xchg
movsl
lods
mov
hlt
into
xchg
mov
pushf
add
mov
lds
aam
fxam
sub
rolb
and
jns
lcall
lock
and
push
fcmovnbe
xchg
repnz
and
lds
ret
cmp
inc
mov
sbb
jge
clc
shlb
add
fldenv
mov
imul
xor
mov
shrl
jnp
and
jnp
inc
xor
and
negl
adc
test
movsl
sub
lea
dec
push
xchg
xchg
test
cmpsl
add
sbb
sbbb
mov
loope
icebp
xor
inc
aam
cmp
add
push
xchg
insb
xchg
sbb
movsl
cmpsl
fs
mov
bound
inc
push
push
sbb
movsb
pop
sub
fbstp
outsb
or
inc
mov
and
fcmovnb
outsb
jnp
and
push
ror
mov
and
daa
inc
dec
sbb
or
mov
test
xchg
dec
xchg
jg
cwtl
sub
ljmp
lret
mov
xor
mov
and
mov
orl
call
and
out
inc
cmc
popf
inc
es
lds
and
jae
lcall
push
inc
cmpsl
jge
xor
cmpsb
stos
jne
loopne
in
push
mov
aaa
iret
popa
insl
jp
jae
mov
lds
aam
push
mov
ret
sub
rcll
mov
or
std
sub
dec
sbb
out
adc
notb
cmpsb
mov
call
fldenv
xchg
fsubp
pop
cwtl
xor
pop
push
popa
adc
mov
mov
sub
mov
mov
hlt
adc
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
mov
cmc
jo
lahf
jge
jo
add
push
daa
mov
cmp
mov
xor
or
push
aad
lock
mov
xor
sub
adc
popa
cmp
fsts
push
gs
sahf
imul
and
cmp
sub
leave
mov
add
pop
icebp
popf
mov
pop
adc
dec
jo
xchg
xchg
xlat
fs
movsl
fs
adc
inc
jg
shrl
push
fdivs
mov
adc
popf
add
jne
imul
lock
or
pop
fisttps
xor
fwait
cmp
sbb
xor
pop
jmp
rcr
add
push
rorb
lahf
mov
sbb
and
lahf
mov
fwait
adc
mov
pop
nop
pop
cmc
sbb
jmp
in
mov
dec
repnz
push
dec
lret
jo
or
imul
jg
outsb
pusha
xchg
jo
shr
loopne
adc
mov
fnstsw
dec
insb
mov
pop
push
dec
test
xchg
cltd
daa
mov
xchg
adc
test
dec
lods
jg
stc
mov
dec
lahf
push
push
mov
lock
add
int
imul
push
jo
xchg
cld
mov
pop
jge
jne
int3
arpl
adc
aas
mov
addb
adc
push
mov
inc
test
adc
dec
leave
bound
sti
push
adc
push
subl
push
jecxz
lds
pushf
pop
xor
push
sub
inc
push
jns
xchg
xchg
dec
push
popa
mov
pop
imull
add
repnz
or
shll
adc
fisubrl
mov
scas
repnz
stc
xlat
push
sarb
pop
vmovdqu
sub
and
or
cmp
stos
shl
or
das
mov
and
xchg
jns
mov
lods
incb
test
stos
hlt
mov
cmp
dec
pop
std
outsb
or
mov
nop
stos
mov
mov
pop
add
insl
mov
cmp
mov
mov
test
inc
push
dec
into
adc
mov
mov
fldt
pushf
leave
push
add
ja
sub
mov
cld
shl
cmc
gs
push
cwtl
ret
inc
inc
mov
loopne
inc
sub
sbb
push
jns
cmp
jle
std
fisubrl
insl
dec
mov
xchg
lcall
push
inc
lds
mov
mov
je
xor
out
roll
pusha
dec
sub
push
mov
lcall
or
inc
adc
imul
mov
or
add
adc
xchg
cmpsl
das
decl
and
xabort
and
ret
fstps
fisubrs
cwtl
jbe
pop
pushf
cmp
or
mov
pop
jecxz
pop
popf
imul
dec
jmp
dec
das
sarl
outsb
pusha
or
pop
push
mov
cmpl
cmp
insb
in
and
and
jmp
in
pop
aad
push
out
ja
leave
lea
push
mov
sub
pop
rorb
das
sarb
inc
mov
jnp
inc
inc
sbb
imul
or
xlat
adc
jp
js
add
or
sahf
and
xchg
in
addb
dec
in
into
jnp
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
jmp
icebp
jo
lahf
jge
jo
in
mov
mov
xor
rcrl
clc
popa
adcl
icebp
xchg
insb
pop
jmp
es
push
adc
pop
xchg
ret
mov
add
das
cmovle
cmp
mov
ljmp
int
sbb
add
ret
dec
pop
dec
push
ficoml
xor
ljmp
ljmp
mulb
xor
lcall
test
sbb
push
jle
negl
jb
xor
jmp
sbbl
out
jp
mov
icebp
jp
inc
pop
pusha
adc
out
xchg
aad
or
mov
push
sub
cli
xchg
aam
and
lock
and
ret
sbb
push
pusha
out
or
fldcw
mov
sub
insl
imul
pushf
mov
inc
mov
in
ss
shl
leave
pop
mov
rdtsc
cmp
pop
adc
and
sub
gs
inc
jg
int
xchg
sbb
pop
lea
lret
fs
aam
adc
movsb
icebp
lcall
or
arpl
xor
mov
ret
and
and
orl
xchg
test
aam
loopne
dec
jmp
lods
in
xchg
incl
xlat
sub
fsts
test
sub
adc
xchg
xchg
mov
inc
push
in
and
shlb
nop
dec
inc
lds
push
adc
das
push
pop
shlb
inc
cli
xchg
sub
inc
test
out
das
push
dec
sbb
add
loopne
mov
pop
andl
cmp
and
cmpsb
push
inc
adcb
repnz
mov
arpl
cmpsb
mov
and
and
pop
ret
imul
int3
dec
sbb
test
cmpsl
dec
adcl
xchg
loop
cli
shll
sub
sub
and
or
pop
inc
test
popa
mov
xlat
or
das
push
daa
lcall
cmc
push
inc
xor
or
adc
inc
sbb
push
cs
outsl
lods
sub
int
loopne
mov
xchg
cmp
pop
add
imul
cmpsb
cmp
jbe
cmp
js
sbb
nop
movzbl
lea
loope
or
fs
xchg
mov
sbb
mov
push
pop
sub
ret
and
mov
push
cld
inc
jnp
scas
xchg
xchg
filds
pusha
andl
xorb
sub
test
dec
sbb
mov
sub
loope
sub
push
add
mov
cmp
out
push
scas
sbb
lods
data16
sbb
dec
insb
les
aam
cli
into
sti
into
jno
and
in
add
testb
outsl
inc
gs
into
jnp
pop
jno
or
inc
mov
sbb
jnp
xchg
add
xchg
mov
ljmp
popa
mov
push
xchg
pop
and
sbb
mov
xor
pop
cwtl
fldl
insl
sahf
std
arpl
jnp
and
mov
add
jb
pop
testb
push
daa
mov
pop
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
jmp
mov
lahf
jge
jo
jp
xchg
add
iret
shl
xor
bound
mov
imul
push
stos
add
and
sbb
xchg
jae
sub
jle
pop
sti
out
out
mov
fs
push
addr16
psrad
sti
shlb
mov
mov
repz
cltd
hlt
fimuls
sbb
fsubrl
popf
out
imul
cmp
or
cmp
mov
aad
jle
jne
mov
cld
jnp
ds
std
inc
cmpsl
pop
stc
pop
imul
repz
mov
xor
push
lock
fistl
insl
push
pop
lret
lods
jbe
gs
mov
adc
sar
cmp
aam
shrb
mov
or
cs
jo
pop
adcb
push
cmp
adcb
jne
in
push
rcrb
cmp
or
inc
xor
mov
mov
sub
or
pop
xchg
mov
sbb
push
sbb
or
int3
and
mov
aaa
and
push
pop
aad
dec
pop
inc
addb
sbb
adc
add
inc
outsl
aaa
lahf
and
gs
and
add
outsl
dec
inc
mov
mov
adc
sbb
loopne
inc
inc
xor
sub
jb
push
xchg
in
movsl
xchg
xchg
and
in
inc
in
mov
mov
shlb
sti
jmp
mov
push
les
add
inc
push
adc
adcb
ja
jns
enter
leave
cmp
sbb
out
mov
int
mov
inc
add
loop
loope
inc
lea
fildl
subl
std
in
or
outsl
lret
sub
nop
scas
divb
dec
lock
adc
addr16
jo
into
out
in
aam
in
xchg
push
sbb
jae
test
movsl
xor
repz
sbb
mov
jns
lds
push
pop
push
in
jmp
movsb
mov
and
inc
mov
clc
imul
fs
mov
cld
jecxz
xor
jns
cmpl
or
xlat
stos
adc
lock
and
in
stos
das
outsl
std
out
xchg
or
xlat
inc
cmp
pop
jecxz
popa
lods
xor
and
mov
mov
adc
or
dec
in
sbb
cltd
mov
xchg
in
add
jl
ds
push
push
and
repz
jmp
push
leave
inc
dec
lret
out
loopne
mov
xchg
xor
fistpl
or
cli
sbb
test
nop
mov
push
xchg
insl
ja
xor
jb
jno
xor
ror
test
mov
cli
das
loop
push
mov
push
dec
ss
xor
test
adc
pop
mov
cli
sbb
lods
add
xor
jmp
push
mov
imul
pop
jmp
pop
cmp
and
in
push
xchg
cmpsl
andl
repz
sub
adc
mov
sbb
lret
jnp
fsubp
lock
adc
cmp
iret
and
xchg
jne
jge
jmp
mov
movsl
xchg
dec
cltd
repnz
push
roll
jmp
shlb
sub
lret
shlb
jo
jge
jo
xlat
mov
and
xchg
dec
daa
push
inc
rolb
aaa
jmp
sub
lods
cmp
outsb
lock
sub
xchg
rorl
dec
sti
imul
pop
cmc
je
rorb
stc
mov
push
cmpsb
sub
sbb
in
cmc
outsl
mov
push
ss
xor
mov
add
sub
call
xor
jno
fiaddl
insl
icebp
push
xlat
aad
into
jns
xchg
cmpsl
hlt
not
bound
mov
fwait
neg
enter
adc
xchg
mov
sbb
jl
mov
outsl
cld
mov
movl
and
iret
rcl
enter
bswap
xorb
add
push
jns
fs
mov
fldl
ja
es
clc
jae
or
push
inc
cli
mov
sub
cmp
std
inc
and
loope
hlt
dec
and
repnz
test
fcompl
rolb
jp
stc
jmp
add
xchg
ffree
pop
push
push
ja
idivb
mov
jo
shrl
sub
add
cmc
insb
sbb
jnp
stos
ficoml
fadds
xchg
and
js
mov
icebp
movl
jecxz
fdivr
into
sbb
xor
movsl
xor
fstpt
pusha
pop
daa
jb
jmp
enter
mov
repnz
ss
mov
ja
les
push
jge
movb
cmp
xor
dec
mov
jecxz
sub
and
adc
mov
jg
mov
sbb
push
mov
fcompl
inc
pop
ficomps
add
loope
stos
mov
xlat
cmp
sub
out
cs
ret
out
xchg
scas
pusha
mov
push
and
adc
call
fnstsw
int
jbe
push
aaa
pop
inc
jg
pop
lcall
fs
test
fcoml
dec
outsb
xor
inc
mov
leave
mov
pop
sahf
push
leave
adc
push
sahf
mov
mov
out
mov
je
call
and
jne
mov
int
jmp
sti
cld
pop
xor
pop
out
dec
js
popa
mov
jmp
cmc
mov
mov
cwtl
cmp
andb
add
orb
stos
push
fildll
sub
aad
js
rorb
pop
mov
mov
push
mov
add
in
outsl
jnp
cs
into
jle
loop
inc
mov
repnz
imul
push
jp
inc
xchg
push
insl
into
and
push
dec
dec
out
push
fists
clc
in
or
push
jae
pop
dec
add
adc
push
sub
dec
and
rcrl
fisubl
sbb
cmp
nop
enter
xchg
mov
cmp
fistpl
jo
pop
aam
loopne
dec
int
test
aas
les
xchg
mov
push
pop
jb
mov
push
imul
gs
push
es
sub
out
xchg
sub
pop
lret
mov
pop
pop
std
loopne
dec
xor
mov
cmp
pushf
inc
icebp
add
mov
xchg
aaa
adc
lcall
mov
je
mov
pop
sub
insl
in
popa
fnstenv
push
cmp
outsl
mov
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
add
mov
roll
jo
popf
pop
out
add
sbb
fidivs
pop
test
or
xchg
jg
pop
mov
lods
stc
push
cmp
das
and
imulb
adc
jle
lcall
stc
faddl
push
xlat
test
lret
leave
mov
or
insl
xchg
repnz
je
outsl
mov
push
mov
inc
xchg
stc
decb
rcrb
test
adc
lahf
into
mov
std
fisttpll
xor
pop
aam
push
cld
nop
dec
testl
addr16
add
out
ja
adc
push
ds
jne
inc
mov
movb
outsb
mov
stc
frstor
mov
and
push
scas
jno
push
mov
cmp
lods
loopne
push
xchg
adc
dec
pop
hlt
lcall
adc
lcall
jge
pop
outsl
lcall
lods
cmp
pop
jge
aam
mov
out
push
lock
jge,pn
mov
adc
dec
and
inc
jg
inc
mov
pop
adc
cmp
lods
jb
sar
test
negb
sti
lods
xor
sub
push
cmp
mov
sbb
test
pop
mov
and
jl
dec
pop
xchg
mov
and
dec
mov
cmpsb
inc
int
ds
adc
push
inc
or
adc
jno
imul
mov
mov
xchg
lret
xchg
cmpsl
fcoms
ret
inc
mov
rorl
jne
push
shl
pop
out
jbe
mov
adc
adc
mov
xrelease
dec
int3
shrb
cmp
sub
lods
mov
add
xchg
xor
stos
daa
xchg
dec
sbb
mov
xchg
lea
mov
mov
adc
orl
dec
inc
stos
adc
pop
push
cmp
and
jb
arpl
dec
int
test
lods
adc
repz
mov
jmp
adc
xor
xor
cltd
or
jo
shlb
pop
rorl
cmp
addb
cmp
fwait
lock
pop
mov
pop
sbb
scas
std
lock
pop
xorb
lcall
sbb
or
mov
jge
inc
rorb
mov
xor
jbe
outsb
sub
rorl
or
cmpsb
movsl
xchg
imul
sbbl
jmp
dec
mov
ljmp
mov
sbb
push
test
jl
cmp
icebp
in
mov
shlb
inc
inc
add
and
aaa
adc
pusha
push
cltd
dec
add
int3
or
lock
mov
outsl
sub
pop
inc
xlat
or
mov
sarl
sub
sub
dec
ds
xchg
mov
loope
or
adc
xor
and
shlb
mov
mov
inc
ret
and
addr16
and
es
adc
mov
repnz
mov
lcall
test
data16
dec
push
hlt
sub
sub
les
idivl
stc
sbb
out
dec
mov
clc
loopne
push
xchg
mov
cmpl
cmp
cmc
or
add
test
xchg
jns
shll
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
inc
aad
xorl
jge
jo
lock
enter
mov
xor
shlb
cmc
jne
call
jnp
mov
xor
ss
out
adc
xor
stos
mov
fldl
add
sahf
xor
and
or
lret
imul
das
inc
and
pop
fsubp
push
sbb
test
xchg
dec
dec
dec
mov
or
pop
and
jl
cmc
les
out
push
mov
lcall
xlat
cs
ds
ret
push
mov
mull
jo
aad
popf
cmp
shlb
clc
push
pop
xchg
stos
into
data16
cwtl
cmpsl
mov
fs
das
push
pushf
les
mov
pop
and
mov
mov
cmc
ret
mov
xchg
popa
ja
pop
cmc
mov
mov
cmp
aas
es
pop
xor
xor
gs
imul
out
dec
call
sub
cwtl
movl
inc
or
rol
push
leave
mov
lahf
aaa
clc
xchg
inc
in
dec
sbb
mov
xchg
dec
xor
in
in
ljmp
mov
adc
fwait
stos
ja
ficompl
dec
add
cmpl
mov
test
pop
les
rcrl
mov
and
lcall
je
pop
cmp
ds
je
dec
pop
push
dec
sbb
bound
insl
or
outsb
jl
andl
out
mov
jne
mov
mov
sub
add
out
dec
cmc
inc
in
leave
out
jecxz
add
call
test
arpl
data16
out
add
rorl
or
les
sti
sbb
push
xor
adc
mov
pop
cs
xchg
cmp
push
or
xor
in
lock
xchg
add
insb
shrl
push
xchg
and
rcl
push
sub
inc
lods
aaa
out
xchg
lret
jmp
sbb
cltd
jecxz
dec
jno
adcl
xlat
shrl
pop
lret
adcb
xchg
pop
add
mov
mov
mov
push
add
je
mov
nop
or
xchg
sbb
psrad
xor
xchg
xor
inc
add
cmp
repnz
ret
stos
push
dec
jne
ficompl
repz
adc
je
dec
xchg
fwait
pop
aaa
fdivr
adc
daa
mov
ss
rcrb
les
mov
pmaxsw
sub
in
jmp
lcall
sub
fwait
nop
mov
jecxz
jecxz
leave
pop
pushf
xchg
jne
dec
xchg
jmp
pop
mov
dec
sbb
aas
jnp
mov
pop
incb
int
pushf
fisubs
adc
jg
clc
sbb
fcoms
cmp
ss
pop
push
sub
sub
sub
pop
mov
or
dec
sub
pop
out
bound
cltd
sub
xor
cmp
dec
xchg
push
andb
mov
rcrb
cmp
inc
faddl
es
idivb
inc
or
xchg
testl
out
stos
callw
mov
insb
mov
int
jmp
rorl
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
aaa
pop
jo
lahf
jge
jo
jmp
jne
mov
cmp
or
repnz
xor
stos
cmp
notb
mov
mull
pushf
push
xor
xchg
fdivl
jg
movsl
nop
xchg
jecxz
ret
dec
mov
neg
popa
cltd
int3
mov
mov
ficoms
and
lret
ljmp
bound
push
or
das
ds
das
mov
xor
mov
mov
add
bndldx
inc
and
jecxz
sbb
sub
inc
popa
push
mov
pop
pop
mov
inc
jecxz
in
or
jns
out
outsl
mov
xchg
and
call
and
dec
sbbl
push
subb
jbe
outsl
pop
outsl
nop
in
das
or
arpl
xchg
dec
leave
dec
mov
stos
cltd
mov
scas
fcomp
pop
dec
inc
inc
fmuls
addr16
popa
push
mov
shrl
fildll
stos
cmpsl
xor
loopne
add
lds
dec
rcrl
imul
sub
scas
adc
fisubrl
sbb
push
xchg
xchg
cwtl
hlt
fwait
aam
popf
pop
mov
rcr
adc
mov
fsubrl
test
insb
test
jmp
clc
jmp
xor
je
xor
push
xchg
andb
xchg
cld
iret
dec
mov
jnp
mov
nop
out
dec
sbb
and
mov
xchg
add
pop
add
xchg
dec
inc
cmpsb
push
insl
jle
or
inc
or
pusha
mov
pop
movsl
add
xor
xchg
lahf
sbb
loope
and
xorb
subb
sbb
stos
and
pop
dec
or
and
pop
mov
jle
mov
pop
pop
fsin
push
pop
pushf
stos
shrl
je
sub
imul
std
push
mov
andb
jl
jmp
ss
lahf
pop
in
hlt
push
in
sub
fdivrl
fnstcw
pop
sti
cmp
jecxz
nop
sbb
aaa
leave
incb
xor
xor
cmp
stc
mov
pop
mov
push
xor
in
movsl
mov
roll
fstps
xchg
or
loope
pop
and
xor
sarb
dec
xchg
rclb
dec
mov
mov
push
jle
sub
out
test
xorb
sub
ret
das
xor
push
sbb
mov
xchg
insb
lret
pop
jmp
xor
dec
out
fldenv
cmp
adc
push
ljmp
fwait
mov
mov
mov
cmc
mov
fsubs
test
inc
xor
rclb
in
jnp
sbb
jg
fisttpll
js
mov
adc
scas
out
pop
cs
stos
subl
mov
push
mov
mov
mov
xor
push
insl
push
lods
sbb
cs
imul
cmpsb
outsb
cmc
aad
shrl
xor
daa
in
push
cmp
ficoml
adc
xchg
pop
add
adc
les
mov
subl
insl
push
test
pop
flds
iret
lahf
mov
sbb
test
add
lods
mov
les
pop
push
jnp
dec
dec
dec
shlb
push
rol
pushl
xor
stos
or
scas
add
pop
add
adc
xchg
mov
jmp
inc
aam
and
xchg
add
sbb
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
sub
jo
jge
jo
fdivr
cld
shrl
mov
add
xlat
push
mov
xchg
push
push
insb
adc
in
ret
fdiv
xorb
jp
mov
and
jbe
iret
addr16
mov
jge
fwait
int3
int3
and
xchg
push
in
pop
repz
pop
sub
mov
pop
fstl
jecxz
jnp
shlb
dec
rep
roll
ret
xchg
push
dec
out
adc
inc
sub
mov
aad
mov
ficoml
and
aaa
mov
les
xchg
xor
bound
fnstenv
mov
mov
cmpsl
popa
and
and
xor
ljmp
mov
mov
or
sub
mov
loop
popf
fiadds
test
rorb
loope
fsts
andl
push
jge
fdivl
mov
jb
xor
cmc
sub
adc
adc
sti
fwait
mov
rol
add
fwait
ds
push
inc
hlt
faddl
int
push
sub
jns
mov
push
sbb
and
in
je
push
add
xor
leave
scas
xchg
hlt
inc
rorb
arpl
incb
add
fwait
daa
sub
mov
add
pop
int
jge
lds
pop
xor
dec
mov
mov
pusha
pop
ret
clc
aaa
jnp
push
les
dec
shll
mov
cmp
inc
mov
inc
jnp
fstpl
cs
lret
scas
or
and
add
test
mov
loope
add
xor
xchg
addr16
sbb
cwtl
mov
test
sub
lock
pop
nop
xor
movsl
cs
mov
in
xchg
decb
into
das
ret
dec
out
or
lahf
and
bound
or
les
adc
aam
mov
gs
pop
shrl
push
xchg
ret
dec
inc
rcrb
mov
pop
lahf
and
cs
cmp
sbb
cmp
inc
popa
cmp
pop
add
xor
addl
fisttpl
inc
psllq
gs
les
insl
ljmp
or
xlat
ror
stc
xchg
or
and
jno
inc
stc
mov
mov
arpl
sbb
clc
jl
loopne
enter
icebp
inc
jae
loop
test
gs
mov
icebp
notb
jo
sub
rcll
push
mov
js
pop
sub
daa
iret
cmp
jns
push
lods
jnp
or
and
mov
mov
sbb
inc
repz
outsb
add
testl
aas
cmp
push
divl
push
loop
in
xchg
fwait
dec
mov
inc
data16
push
out
test
hlt
mov
jo
cmp
popf
imul
loope
dec
xchg
ljmp
mov
add
scas
into
xchg
outsl
mov
sbbb
negl
aad
dec
test
add
xorb
cltd
push
jg
cli
ja
push
cli
adc
loope
pop
pusha
pop
lods
leave
pop
xchg
test
dec
fs
lcall
sub
lcall
cmp
sbb
inc
movsb
cmp
push
arpl
fistpl
cltd
inc
inc
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
out
inc
aaa
dec
mov
lahf
jge
jo
push
mov
imul
ljmp
pop
add
stos
xor
dec
cmp
mov
inc
aad
outsb
ds
repz
cld
out
jnp
mov
mov
push
orl
jge
das
xchg
inc
xlat
shlb
xchg
addr16
mov
dec
mov
lcall
movsl
mov
push
pop
cmpsb
and
in
jbe
adc
and
mov
sub
pop
scas
dec
ret
mov
bnd
popa
push
test
outsl
out
negb
add
hlt
hlt
mov
mov
cmpl
ficomps
out
cmp
push
sbb
mov
ficomps
adc
mov
es
dec
pop
inc
lock
lret
cmpsl
inc
mov
sub
mov
fiadds
push
mov
or
int3
loop
pop
adc
mov
gs
fldenv
outsl
inc
mov
adc
jge
xor
or
neg
clc
dec
mov
ds
dec
notl
loopne
cmp
jns
repnz
adc
fstpl
les
test
dec
rcl
xchg
xchg
mov
sbb
aas
mov
test
inc
push
mov
fs
ret
jae
mov
mov
or
jns
mov
add
movsl
add
hlt
fs
std
jge
and
inc
iret
cltd
inc
or
inc
mov
je
jl,pn
in
sbb
inc
idiv
xchg
cmp
mov
aad
mov
scas
enter
testl
push
adc
mov
jecxz
sti
outsl
push
sub
lcall
push
cmp
push
outsb
in
idiv
push
negl
push
lcall
cs
xchg
stc
mov
out
add
xor
stos
or
out
push
mov
xchg
mov
xor
or
add
pusha
inc
mov
push
loopne
mov
push
std
in
jnp
ss
mov
es
mov
pop
pop
loop
jmp
shrb
shlb
mov
pushf
mov
nop
fnop
lock
idivl
outsl
bound
jae
jnp
ret
mov
mov
jle
or
out
orl
push
jno
push
mov
add
js
pop
mov
sub
jb
sbb
scas
lret
mov
or
inc
mov
add
mov
adc
dec
inc
das
sub
push
mov
xchg
in
dec
sub
fs
mov
fldcw
jmp
sahf
push
out
les
scas
or
dec
add
ficoml
xchg
int3
movsb
sbb
dec
pop
bound
dec
js
scas
loopne
in
fdivs
shll
sbb
sub
loop
shl
cs
sub
push
add
mov
xlat
sahf
loop
inc
inc
mov
divl
lret
jb
mov
dec
inc
jbe
xor
out
ljmp
test
xlat
cld
add
dec
xchg
gs
mov
add
inc
adc
out
xchg
xchg
cmp
cmp
pop
add
cmp
cmpb
dec
inc
loope
dec
push
add
fcoms
adc
mov
cmp
jnp
ror
jb
add
xchg
push
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
repnz
pop
popa
in
xchg
jo
lahf
jge
jo
mov
bound
xor
mov
mov
mov
clc
pop
repnz
sub
outsl
adcb
mov
mov
cmp
add
sar
cmpsl
xor
inc
ret
pop
int3
jne
ja
jnp
fcmove
mov
cmpsl
ffreep
in
and
and
push
mov
sti
sbb
leave
sarl
mov
xchg
mov
xchg
xchg
mov
mov
and
lds
sbb
lret
push
sbb
sub
into
jp
std
faddl
out
mov
jae
push
mov
lea
push
push
mov
mov
jne
mov
mov
lret
clc
mov
and
loop
cmpsl
adc
xchg
push
jecxz
jge
aas
or
sarl
shll
insb
mov
dec
data16
add
fcoml
xchg
into
inc
jecxz
add
add
cmpsl
out
fwait
push
jae
jle
push
mov
les
sub
das
test
rorb
pushf
add
jo
incb
lahf
mov
jecxz
pop
mov
adc
ss
push
inc
push
movsb
shlb
loopne
dec
or
pop
lds
mov
push
idivl
inc
mov
leave
fwait
or
pop
ljmp
xchg
std
sbb
add
mov
xchg
lahf
xor
push
je
mov
hlt
insb
xchg
imul
pop
cmp
movsb
xchg
jno
loop
and
or
sub
ljmp
lods
pusha
mov
je
cmpsl
add
xor
filds
jne
aad
popa
inc
pop
xchg
jo
mov
mov
add
mov
movsl
loopne
and
jecxz
into
dec
xchg
adc
inc
sbb
mov
bound
fucomp
shlb
xchg
push
push
pop
ds
insb
jb
int
loopne
fmull
je
add
or
xchg
test
mov
mov
rcl
test
push
and
jb
sbb
lcall
stc
lods
xchg
shlb
xorl
dec
xchg
out
es
mov
push
and
rolb
sub
cmpsl
pop
xor
sub
sbb
mov
mov
and
fcoms
inc
pop
mov
dec
out
adcl
mov
jecxz
jae
mov
jg
cltd
into
js
movd
sbb
push
lods
mov
outsb
pop
dec
sbb
mov
and
pop
adc
xchg
daa
sub
sub
lock
cmp
lods
sbb
repnz
adc
pop
mov
adc
mov
push
out
aam
mov
xor
mov
frstor
int
sbb
inc
imul
dec
fs
repnz
fstp
cs
xchg
jl
imul
loopne
movsl
rolb
mov
hlt
incl
in
imul
and
pop
lahf
ss
test
repnz
aas
xchg
adc
or
ss
loopne
repnz
inc
out
and
enter
cmp
cs
push
movsb
sbb
out
je
xor
in
or
cli
cmp
addl
cmpsl
add
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
cmp
lds
nop
jo
lahf
jge
jo
add
mov
and
out
rcrb
xchg
xchg
mov
int
jno
fwait
or
cmc
cld
fiaddl
jp
idiv
jns
movsl
lods
mov
and
mov
mov
movsb
and
xchg
pop
jno
lret
pop
mov
xor
push
jmp
or
mov
push
or
test
movsl
subb
mov
mov
xchg
aam
push
push
fs
sub
rdpmc
mov
lret
xor
cmp
std
or
mov
in
addr16
loop
out
xchg
stos
jae
mov
call
xchg
cmp
push
mov
das
push
xchg
adc
into
scas
jmp
pop
dec
cmp
jnp
pop
cmp
push
cmp
push
repz
stos
adc
mov
adc
cmp
xor
mov
pop
push
and
cmp
rol
dec
pop
xchg
sbb
dec
lds
sbb
bound
push
pop
mov
popa
mov
test
jl
push
cmp
sbb
pop
push
pop
fildll
insb
push
insb
bound
das
les
push
insb
cld
inc
mov
fidivrs
stos
cli
adc
jmp
jae
xlat
fcos
jge
ljmp
push
test
jbe
and
lret
mov
out
aas
in
jecxz
pop
les
sub
dec
dec
inc
adc
and
push
cmpsl
add
jg
lret
adc
add
fidivs
out
in
cld
aaa
outsl
sub
jecxz
fiadds
iret
fcomip
mov
lret
gs
add
stc
push
inc
mov
sbb
push
fnstenv
add
adc
imul
sbb
mov
dec
xchg
das
mov
std
cmp
ljmp
cmpsl
fsubrl
cmp
inc
mov
ret
ret
mov
lds
sbb
xor
add
mov
data16
pusha
sub
mov
xor
mov
js
cwtl
ljmp
push
aaa
xor
aaa
push
xchg
lods
shll
sbb
out
je
out
sahf
inc
jg
sub
or
add
sbb
sbb
add
clc
jns
adcb
push
lea
ret
mov
movsb
test
loope
mov
xchg
push
sti
movsb
pop
jo
jae
out
cmp
mov
movsb
lret
mov
stos
hlt
outsb
fsts
or
xor
cmc
fnstenv
ucomiss
sbb
xor
aad
sbb
setg
dec
push
or
neg
shll
movsb
xchg
and
das
push
cmp
dec
dec
mov
loopne
shlb
cs
push
les
jge
mov
mov
dec
mov
cmp
xor
and
popa
pushf
inc
std
aaa
shrb
mov
lahf
add
aad
icebp
insl
jns
push
and
mov
and
scas
inc
push
fstpl
jle
mov
mov
dec
jnp
sbb
cld
decl
mov
sbb
insl
lds
out
leave
or
xchg
xchg
push
mov
loopne
xorl
les
or
sbb
mov
lock
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
icebp
cwtd
stos
stos
popf
jo
lahf
jge
jo
xchg
mov
mov
es
xchg
into
out
xorb
mov
cmp
sbb
jp
xchg
dec
scas
std
daa
dec
cmp
xchg
aam
call
xchg
fistpll
mov
and
iret
insb
loope
scas
xor
push
jp
mov
inc
repz
mov
cmp
jns
pop
adc
xchg
or
cwtl
adc
scas
and
xchg
jge
jno
jnp
mov
mov
dec
imul
or
dec
idivl
test
inc
pop
lret
inc
adc
xchg
dec
ljmp
into
jae
adc
cmp
push
cmp
arpl
pop
add
stc
push
inc
xor
jae
sub
addr16
aas
in
inc
lods
jl
mov
test
jp
ss
jecxz
add
iret
xor
mov
gs
jnp
popf
roll
cmp
testl
push
cmp
cmp
icebp
in
bnd
ltr
sbb
dec
outsl
or
mov
mov
mov
push
lea
xchg
or
jle
orl
stc
jbe
or
test
pusha
xchg
shrb
jnp
orl
jne
jne
mov
out
rorl
ja
mov
ss
jnp
inc
xchg
fiaddl
or
aam
sbb
addr16
sub
jge
and
mov
dec
lret
repnz
mov
and
adcl
pop
cmpsl
jle
lods
add
test
ficompl
ror
push
cmpl
in
fisubrs
xchg
fcomip
idivl
jnp
inc
xor
lods
mov
mov
movsl
sbb
shr
leave
push
ror
movsb
cwtl
cltd
dec
and
in
stc
scas
jno
je
lods
addr16
and
xchg
xchg
adc
adc
mov
cmc
or
rorb
lahf
lods
jno
int
mov
les
mov
cmp
mov
das
add
fmull
clc
push
cmp
std
pop
mov
pushl
mov
mov
adc
stos
sbb
push
test
js
aad
inc
stc
fwait
into
aad
fcmove
sub
jae
sub
gs
jbe
lock
outsb
lcall
fnstenv
mov
or
std
and
jne
xchg
jg
stos
mov
fisubl
stos
push
test
or
test
rcrb
fisubrl
cmp
rclb
scas
test
inc
dec
addl
mov
add
popf
dec
jecxz
aaa
test
orps
jl
mov
inc
sub
dec
or
and
inc
lret
sbb
pop
lds
mov
ficomps
inc
add
push
pop
stc
sbb
ret
sub
mov
add
aas
outsb
sub
xor
dec
push
jns
jno
jecxz
push
push
or
jl
mov
je
jo
imul
lea
out
out
adc
repz
push
in
xor
adc
jmp
pop
jns
aaa
insb
push
std
lods
sbb
push
and
pushf
lods
or
arpl
shrl
mov
push
lahf
sub
int3
les
add
and
adc
data16
gs
inc
fcomps
repz
test
call
jmp
mov
mov
mov
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
cld
inc
mov
lahf
jge
jo
aaa
lret
aam
dec
imul
jne
cmp
cltd
mov
and
test
inc
bound
xor
mov
sahf
push
pop
in
test
or
sbb
xor
imull
inc
sub
mov
imul
mov
addb
pop
mov
or
test
cmp
in
mov
sub
sub
cmp
inc
add
js
add
arpl
add
insl
cli
inc
adc
outsl
cmp
dec
mov
fisubs
sbb
mov
and
mov
push
push
push
add
aaa
cmp
mov
sbb
add
scas
xor
mov
movsl
mov
std
fnstcw
call
push
sti
add
mov
inc
stos
stc
aad
es
dec
mov
js
ret
cltd
popf
inc
imul
fidivrs
stc
inc
cmpsl
int3
mov
lret
inc
shlb
and
lods
xor
shrd
arpl
cmp
adc
shl
les
xlat
int
js
ds
out
mov
dec
aad
cmpsb
jecxz
jb
leave
dec
jmp
dec
mov
fstps
mov
outsl
outsl
inc
fimull
test
sub
lods
sub
inc
push
loope
adc
push
into
adc
loope
cmp
xor
imul
push
mov
pop
pop
pop
outsl
mov
fcmovu
xchg
inc
repnz
or
popa
pop
cld
fcompl
icebp
out
pop
cli
adc
fsub
lret
mulb
pop
pop
fcmovnu
inc
addr16
int3
movsl
pop
fidivrs
sbb
mov
fiadds
aaa
pop
lods
rclb
fdiv
bound
adc
in
in
mov
int3
and
mov
cld
scas
mov
mov
notl
xlat
sti
and
jle
movsl
clc
test
cld
mov
ljmp
adc
sbb
xchg
jnp
cli
mov
cmp
out
sbb
pop
or
iret
xor
test
sbb
in
and
adcl
mov
mov
add
mov
jge
mov
cmp
push
notb
cmp
outsl
dec
aas
lds
mov
testb
data16
xchg
sub
xor
xorl
sbb
mov
and
add
sbbb
cmp
arpl
cmp
adc
sarb
cld
lock
ret
or
out
sbb
mov
out
jecxz
nop
popf
pop
lock
jbe
sahf
dec
test
xchg
xor
add
out
aas
pop
cmp
scas
pop
push
bnd
cmp
rcll
imul
popa
or
pop
mov
enter
push
cmpsl
xor
dec
daa
or
pop
add
or
xchg
inc
cmp
jp
inc
fiaddl
or
adc
mov
fxch
push
push
enter
or
jp
ljmp
ja
adc
cwtl
outsb
adc
cmp
add
je
int
sti
sbb
push
fbstp
pushf
lods
es
fs
mov
movsl
rcrb
or
ss
call
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
daa
pushf
push
jg
jo
mov
inc
and
sbb
stos
shrb
and
adc
push
jg
adc
loope
lcall
push
es
int3
jb
cmpb
mov
mov
dec
js
movsb
inc
push
fnstenv
inc
push
sbb
and
neg
cltd
nop
lret
pushf
pop
iret
es
iret
and
sti
repz
out
or
mov
mov
scas
repz
jbe
fidivrl
loop
push
pop
fimuls
mov
sbb
or
hlt
or
xchg
stos
out
mov
xchg
add
cltd
mov
jmp
and
inc
xchg
int
mov
mov
cwtl
jecxz
test
idivl
mov
loopne
lcall
sti
jne
sti
sarl
movsl
jmp
sub
mov
xor
push
mov
aaa
sbb
sbbb
stc
pop
cmpsl
sbb
adc
ret
adc
daa
mov
push
sti
mov
repnz
xorb
sbb
mov
mov
xchg
and
clc
cmp
outsb
xchg
notb
cmp
cli
das
xor
or
sbb
cmp
and
jle
and
fisttps
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
mov
or
cmp
jo
and
and
lods
fistps
xchg
dec
mov
push
sbb
mov
idivb
sub
mov
push
push
push
aaa
scas
lods
mov
loope
imul
and
loop
jl
sbb
sub
push
push
xorb
add
std
inc
sbb
xchg
sbb
mov
mov
push
stos
pop
sbb
jp
leave
divl
test
push
push
mov
push
mov
xchg
push
fnstcw
jge
aas
push
push
out
sti
fsubs
pop
je
cli
repnz
js
ljmp
cmpsb
add
ss
xchg
lods
xchg
mov
and
in
jle
xor
adc
pusha
scas
fidivs
inc
stos
xchg
int3
push
adc
pop
xchg
das
lock
push
xor
add
ret
sbb
add
pusha
jg
jmp
and
cmp
lea
arpl
es
mov
test
cmpsb
cmc
cmp
jne
and
xor
mov
jnp
add
loope
mov
ss
push
jle
gs
rcrl
and
pop
inc
mov
mov
lcall
inc
call
and
lea
mov
jmp
rorl
sbb
ret
mov
jo
sub
dec
xchg
inc
mov
dec
movsl
push
and
stos
xchg
or
inc
mov
scas
int3
leave
pop
xchg
jg
jp
sub
xor
inc
repnz
inc
jb
out
jge
cmp
into
ss
mov
sub
pop
pop
inc
mov
mov
jnp
mov
adc
fdivs
mov
mov
andl
std
inc
popl
push
into
stos
call
std
sub
pop
popa
push
cmpsb
adcb
jb
adc
and
push
sub
cmc
arpl
rcl
mov
sbb
ss
mov
adc
stc
lcall
mov
icebp
insb
pusha
pop
ss
pop
cltd
repnz
or
aaa
fistl
adc
hlt
loop
stos
iret
cs
sub
and
rolb
ja
xorl
insb
cs
pusha
stc
icebp
inc
xchg
push
mov
or
jnp
shr
cltd
fldt
mov
fwait
push
add
cmp
icebp
fnstsw
adc
mov
lods
jbe
lcall
popf
push
cld
ljmp
and
cmp
mov
xchg
lahf
mov
enter
inc
fs
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
rol
imul
mov
jo
push
pop
test
mov
out
rorl
lods
inc
scas
addr16
out
and
add
je
mov
pop
mov
iret
jae
daa
mov
push
mov
rolb
bound
or
jne
mov
mov
mov
pushl
and
and
jmp
into
or
xchg
das
and
inc
sub
mov
mov
mulps
lret
xchg
xchg
or
popf
mov
lcall
jmp
mov
inc
movb
and
dec
into
int3
in
cld
add
ss
and
mov
std
cmpsb
pop
insb
or
das
bound
sbb
pop
mov
adc
out
cmpb
mov
or
and
int3
inc
gs
scas
jae
test
rcrl
cmp
scas
lods
fsubrs
xchg
movsl
mov
mov
xor
jae
fs
mov
ljmp
jbe
adc
dec
add
in
pop
sarl
enter
xor
pop
es
inc
mov
dec
pop
or
fxch
push
jge
aaa
cltd
mov
addr16
inc
dec
mov
icebp
inc
les
lcall
sar
jmp
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
addr16
mov
and
jo
ret
jg
jo
fsubrs
sbb
addr16
rcl
jo
out
popl
adc
add
repz
sub
ret
jp
pop
fisttpll
pushf
sbb
ret
mov
cs
roll
inc
rcrb
call
adc
push
movsl
lahf
xchg
lahf
adc
clc
pushf
divb
movsl
sub
ja
aam
jp
popa
adc
pop
ficompl
push
cmp
push
sahf
push
cmp
roll
inc
int3
add
or
jecxz
sub
fwait
inc
aam
arpl
clc
test
jns
cmp
in
imul
outsl
imul
fsubrs
mov
and
aam
pusha
enter
mov
insb
movsl
inc
into
data16
test
mov
cltd
or
mov
es
rcrb
and
das
rol
xchg
jl
int3
mov
lcall
dec
or
out
lcall
mov
jb
jbe
or
push
pushf
sbb
lahf
cmc
shl
iret
fcmovu
dec
cli
dec
push
mov
fwait
out
ret
lret
push
sbb
cmp
cmp
xlat
adc
cltd
cmp
fwait
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
ds
jmp
scas
jo
ret
jg
jo
xchg
in
xlat
decl
lods
arpl
and
sub
cmc
sub
sbb
gs
inc
out
xchg
xlat
inc
mull
cmp
jne
push
xchg
das
cmp
xchg
xlat
adcl
outsb
sub
xor
inc
fidivrl
jecxz
sbb
std
jae
xor
push
lahf
shl
pop
dec
pop
push
shlb
ds
lret
inc
lret
sub
or
ds
mov
pop
cltd
xor
pop
xor
sbb
pop
mov
repz
or
xchg
push
test
add
mov
lret
xchg
fs
mov
dec
inc
and
das
and
movsb
mov
push
iret
in
mov
push
or
in
rcll
mov
dec
lds
ds
orl
cld
out
inc
mov
cld
jnp
icebp
mov
mov
movsl
ss
loope
pushf
call
mov
mov
enter
fwait
jns
adc
push
lcall
rcll
lret
or
cmp
sarl
nop
sbbb
daa
mov
arpl
inc
in
movzwl
jmp
movntps
push
rep
mov
push
jle
mov
inc
mov
jg
jo
lds
pop
into
sub
jnp
dec
adc
stos
push
movsb
scas
dec
dec
ja
or
mov
leave
fwait
dec
out
hlt
push
inc
shrb
inc
ret
jmp
jno
or
cmp
into
int3
pop
popa
daa
idivb
inc
push
es
faddl
lret
rcrl
js
loope
adc
outsb
adc
xchg
outsb
pop
mov
xor
les
add
sahf
repnz
insb
rolb
adc
out
cmp
jo
or
dec
in
ret
dec
scas
cmp
sbb
mov
xchg
inc
enter
xchg
push
xor
ljmp
push
cmp
adc
inc
aam
add
mov
mov
stc
mov
in
adc
notl
popa
push
aad
cmp
lods
and
cmp
adc
sub
pop
in
adc
sbb
fildl
das
ljmp
int
jbe
sarb
pop
mov
mov
jp
pop
cmpsb
add
xorl
ret
pop
mov
pop
jae
dec
daa
imulb
jbe
add
je
cltd
insl
jns
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
es
fs
jg
jo
push
inc
sbb
and
stos
dec
xchg
imul
push
inc
cmp
cmp
pop
jo
jno
imul
cld
imul
pop
fcoml
ds
push
loop
sub
add
in
sti
mov
cmp
int
in
dec
pop
int
in
lods
imul
mov
jl
mov
movsl
mov
mov
lods
shlb
js
mov
repnz
adc
mov
sbb
or
aad
leave
mov
inc
scas
add
jb
add
jo
or
scas
sub
scas
dec
mov
and
icebp
and
and
mov
add
stc
shl
mov
add
icebp
xor
jne
adc
out
lahf
sahf
cs
cmp
xor
addr16
jne
loopne
in
dec
orl
or
or
pop
mov
push
xor
daa
push
pop
cmp
cmp
jp
out
movsl
push
adc
dec
add
shll
add
pop
mov
xchg
mov
adc
lods
pop
in
repnz
sbb
gs
imul
cmp
push
das
dec
push
nop
push
xchg
addr16
mov
hlt
leave
jl
subl
test
int
and
cmp
cmp
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
sahf
add
lock
jo
xchg
sub
pop
mov
test
adc
and
mull
call
jns
adc
jbe
out
inc
dec
idivb
scas
in
enter
cli
jae
push
rcrb
xorl
test
insl
jle
shll
pcmpeqb
imul
inc
mov
std
push
mov
enter
in
mov
mull
jnp
dec
cmp
and
call
or
mov
mov
inc
imul
mov
adc
sub
test
add
xor
adc
sti
jl
sbb
call
xor
repz
xchg
mov
lret
inc
dec
cmp
pop
xlat
jmp
xor
pop
scas
outsb
sub
faddl
mov
sbb
push
mov
test
ret
cmp
cltd
inc
daa
dec
lea
mov
loope
mov
mov
mov
mov
adc
cltd
es
hlt
outsl
mov
repz
in
out
pop
shrl
mov
jns
sub
cmp
mov
bound
imul
fadds
xchg
out
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
hlt
xor
ret
jg
jo
repnz
stos
jbe
dec
pop
mov
cmp
lds
fsubp
cmp
jl
add
test
push
imul
addr16
xchg
andl
hlt
sub
and
sbb
pop
push
repz
xor
push
inc
fsubrs
inc
xor
jg
sub
add
ja
hlt
ficompl
das
adc
cmp
imul
dec
and
mov
out
arpl
adc
jg
mov
je
cmp
call
fsubs
fisttpll
frstpm(287
ds
hlt
pop
ja
enter
ja
pusha
adc
push
fbstp
ljmp
movsb
vpshufhw
fs
mov
ljmp
addr16
jl
add
inc
push
seta
in
loopne
add
jne
push
cmc
fimull
movsl
gs
in
mov
aam
inc
andl
adc
enter
xchg
pop
mov
call
pop
mov
jge
and
dec
in
add
mov
mov
fmull
pop
lods
cmp
inc
fisubrs
sti
push
movsl
cmp
jno
and
or
loopne
fdivs
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rorb
insb
aaa
shll
jo
jg
jo
in
mov
shrl
xor
jno
dec
fs
scas
and
dec
sbb
in
cli
aas
adc
fisttpl
fwait
es
lret
cmp
mov
add
int3
cmp
cltd
mov
andl
mov
pop
pop
stos
mov
mov
sub
cltd
aaa
xchg
lea
push
xor
out
push
dec
gs
mov
in
inc
mov
lret
jle
mov
sti
xor
sti
push
fwait
imul
mov
jg
jecxz
dec
cmpsb
push
cmp
cmp
negb
ja
pop
leave
mov
sub
pop
lret
or
fbld
les
adc
data16
xor
in
in
les
sub
and
mov
outsl
dec
push
popf
xchg
or
adc
xor
call
jle
push
fadd
push
clc
adc
xchg
pop
inc
mov
movsl
into
xor
addr16
in
pushf
mov
or
pushf
shll
cmp
insb
test
or
daa
out
data16
js
iret
adc
fldcw
mov
mov
inc
clc
jmp
inc
gs
icebp
imul
in
inc
into
cmp
jo
int3
loope
andl
pop
inc
cmp
in
mov
pop
inc
add
out
clc
rclb
cmp
insb
mov
mov
clc
or
ss
movsl
lcall
jae
aas
pop
adc
add
inc
push
jae
mov
pop
cmp
ja
pushf
cld
pushf
and
dec
and
repnz
int3
pop
fsubr
mov
or
cmp
mov
call
jle
sbb
cmp
outsb
and
fwait
and
jl
mov
leave
subb
cmpsb
mov
push
test
stos
mov
xchg
mov
pop
fsubl
out
data16
addr16
cmp
cmovae
imul
dec
mov
mov
xor
or
repz
dec
add
and
xchg
shl
mov
mov
pop
adc
insb
mov
fstp
mov
push
or
inc
and
push
fld
push
jmp
dec
das
pop
mov
jmp
jge
cmp
insl
cmpsb
shrb
lea
fimuls
inc
adc
sub
push
adc
hlt
cmpsl
fisubs
daa
sub
xlat
imul
jp
push
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
add
mov
mov
jo
jg
jo
mov
mov
pop
lods
or
or
loope
cmp
popa
mov
loopne
jp
push
stos
loopne
loop
or
adc
scas
popa
cmpsb
mov
mov
lret
popf
es
add
cs
mov
in
fildll
and
in
fcom
aas
pop
jnp
xorb
and
jne
and
adc
and
fisttpll
imul
add
mov
loop
pop
push
aaa
repnz
mov
sub
mov
sahf
data16
mov
addl
xor
cmpl
insb
jae
popa
lahf
inc
pusha
adc
out
insl
enter
add
ret
jmp
int3
data16
addr16
aas
add
dec
scas
out
dec
jne
jge
mov
push
mov
fcoml
jae
cltd
pop
dec
adc
pushf
xor
ret
xor
pop
mov
imul
mov
inc
jg
push
sahf
and
cmc
aas
jecxz
add
loope
test
add
jle
mov
repz
sbb
mov
inc
ljmp
add
xchg
fldenv
mov
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
inc
in
pop
mov
jo
jge
jo
js
pop
xor
incl
ds
fisubrs
add
xchg
fcomi
pop
sbb
push
dec
sub
dec
xlat
jnp
xor
jg
mov
xchg
subb
mov
mov
jns
sbb
jnp
call
ss
jmp
xor
cmpsl
rep
repz
jmp
testb
adc
adc
pop
shrb
jb
lahf
add
xchg
pop
jl
dec
pop
push
push
cmp
xchg
adcb
mov
xchg
jbe
push
psubsb
cmpsl
cmp
mov
mov
push
and
xor
xchg
das
or
out
dec
or
cmp
stos
andb
data16
mov
lret
inc
jo
jne
data16
inc
or
mov
mov
popf
decb
out
jnp
lods
add
jae
or
sub
lods
mov
xchg
xchg
inc
jle
push
loop
jp
nop
and
int
xor
push
jns
addr16
dec
nop
add
sbb
cwtl
aaa
xor
mov
mov
repnz
es
int
pop
mov
pop
mov
mov
push
insl
mov
daa
sbb
or
out
stos
and
xor
xor
es
sbbb
fnstsw
inc
sbb
js
jb
mov
inc
or
arpl
mov
and
xor
ss
jecxz
xchg
sbb
cmp
sbb
sub
mov
xchg
repnz
and
enter
xlat
dec
pop
mov
xchg
mov
mov
or
xor
or
xchg
adc
jne
nop
pop
mov
push
cmp
lds
in
fwait
repz
jb
xor
movsl
xchg
rolb
push
insb
in
ljmp
daa
mov
sti
push
and
cmp
mov
xchg
cmc
bound
xchg
fwait
xor
adc
xor
add
inc
pusha
dec
add
int3
les
dec
repnz
into
enter
dec
test
sti
bound
pop
cs
inc
dec
aas
insb
xchg
loop
test
add
fstpt
mov
ds
std
lods
or
fldt
sbb
sbb
lods
mov
loope
rorl
push
xor
stc
shr
fcomps
mov
pop
imul
jecxz
loope
jecxz
jnp
roll
push
dec
out
xor
sub
lcall
or
mov
fnstcw
aad
mov
mov
xorl
movsl
mov
sub
mov
popf
cmpsl
lret
jecxz
mov
lret
jo
push
add
out
nop
xchg
dec
js
leave
pop
popf
movsl
pop
or
lcall
xor
push
loopne
popf
fs
insb
testl
pop
enterw
cmpb
pop
mov
sub
fistps
mov
jae
mov
pop
jbe
hlt
lods
xor
outsb
aad
test
hlt
lods
les
mov
mov
pop
push
xor
and
es
xchg
push
int3
lret
add
add
lods
jo
std
jae
nop
subb
or
pop
into
fadd
dec
dec
ss
mov
into
scas
fsincos
inc
test
xor
adc
lods
addr16
cwtl
xor
or
mov
subb
loopne
mov
or
and
mov
push
negl
jmp
mov
cli
xor
testb
lcall
mov
test
into
inc
test
cmp
je
test
push
icebp
or
inc
imul
sbb
sbb
les
out
ret
or
fcoms
xchg
ds
repnz
inc
mov
lods
popa
cmp
pop
or
xchg
sbb
call
loop
dec
inc
aad
cmp
rcr
movsb
ljmp
fs
sbb
sub
movsb
jecxz
pop
hlt
push
adc
les
mov
jle
fwait
test
push
repnz
cmpsl
and
jbe
sub
sbb
add
push
fiadds
sbbb
jmp
mov
mov
cld
and
dec
ret
inc
mov
stc
mov
imul
pop
hlt
lock
insl
add
xchg
je
xor
iret
and
and
loope
scas
pop
pusha
flds
inc
sbb
pop
sbb
xor
mov
dec
cld
test
mov
sub
popa
lea
rclb
ljmp
rcrl
mov
je
sarb
imul
out
fisubs
int
cmp
sbb
inc
in
lcall
sbb
fs
and
add
or
out
addb
or
fistpll
mov
push
mov
xchg
sbb
test
jge
pop
jns
divb
pusha
dec
sub
sbb
or
xchg
inc
mov
jnp
rorb
lds
out
aas
cmp
test
add
pop
sub
jge
test
movsl
adc
jo
cmp
xchg
xor
in
inc
test
scas
push
adc
sbbb
scas
incl
cmpl
push
xchg
icebp
ljmp
mov
mov
aam
adc
pop
mov
mov
sub
sbb
inc
lods
cmpsb
aam
lret
stos
mov
pop
jne
shll
push
jne
dec
ficoms
cli
pop
inc
shrl
or
mov
jl
sub
hlt
sbb
cmp
mov
mov
push
mov
in
push
mov
inc
iret
xchg
or
cld
mov
cmc
jl
jne
adc
mull
sbb
xchg
std
adc
mov
outsl
mov
xor
gs
int
icebp
dec
aad
xlat
lret
adc
movsl
mov
cmpsb
sbb
dec
out
adc
mov
movsb
jb
add
jo
add
push
mov
jae
inc
mov
mov
sbb
cwtl
fidivrl
cmpsb
push
lods
aam
mov
sub
imul
and
mov
fsts
dec
test
jp
cmpsl
cwtl
pop
addr16
jl
clc
in
mov
mov
aaa
lods
daa
aam
ss
fs
add
mov
repnz
xor
or
int
aad
mov
sbb
ret
repz
jns
and
clc
pop
pop
loope
pushf
les
xor
lahf
je
and
sub
es
lds
cs
cmpsb
xlat
out
aad
adc
insb
movsl
mov
mov
test
dec
mov
pop
sub
jge
addr16
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
adc
fdivs
jge
jo
das
stc
pop
popa
pop
jmp
jge
pop
divb
out
das
xchg
lret
and
jo
sahf
lods
dec
pop
push
loop
xor
andb
addl
mov
sahf
shll
or
loope
dec
in
pusha
dec
pushf
sbb
iret
popa
mov
sti
push
adc
mov
add
sub
pop
xor
and
dec
and
pusha
sbb
inc
jns
and
or
xor
cwtl
push
mov
pop
and
enter
or
jns
test
les
and
enter
loop
sbb
xchg
push
outsb
les
ja
pop
fucomi
inc
adc
dec
fnsave
das
inc
jbe
jo
mov
jmp
test
test
xor
or
fcompl
jnp
jge
push
mov
stos
je
test
adc
jge
xchg
rcll
cmp
aaa
xchg
addr16
mov
int
scas
sub
je
mov
nop
lret
xor
arpl
sub
mov
int
pusha
in
in
mov
mov
cmc
in
xchg
loopne
dec
lea
stc
out
or
and
outsl
jp
clc
int
adc
mov
fidivl
xchg
inc
and
pushf
sub
push
popf
in
les
mov
stc
lods
xchg
out
cmp
pop
fisubl
js
cmp
and
lahf
jge
jbe
popa
push
loopne
xor
xlat
imull
mov
ficoml
add
mov
mov
mov
scas
push
cmpsl
mov
jecxz
aad
enter
rcll
push
cmpsl
sbb
rclb
xor
das
dec
gs
dec
mov
leave
lock
hlt
test
into
repnz
imul
jmp
leave
lret
vpsrld
or
adcb
testl
mulb
aaa
pop
cmc
adc
xor
loopne
cmp
adc
mov
loop
aam
jl
lods
pop
pop
cmpsb
rcll
shlb
push
mov
dec
test
xor
loop
out
mov
xchg
outsl
gs
sub
adc
push
movsb
stos
data16
shr
jno
lock
mov
inc
roll
andl
jl
fistpl
add
push
sahf
mov
cltd
lods
xchg
cmpsb
xlat
inc
inc
test
sub
or
cmp
fildl
idivb
mov
scas
mov
jns
and
jle
cmp
dec
rcl
adc
ja
mov
xchg
mov
pop
stc
sti
push
jecxz
xor
insb
xor
sbb
pusha
ljmp
shrb
imul
daa
push
or
mov
sub
add
int3
inc
mov
push
adc
fcoml
or
fmulp
dec
cmp
sub
mov
popa
mov
cmp
sub
rcrl
jecxz
je
ret
mov
or
inc
icebp
xor
sarb
test
dec
mov
daa
jns
ljmp
loope
ljmp
push
cwtl
dec
xchg
jp
pop
mov
cmpsb
cmpsl
pop
mov
scas
iret
mov
sub
int
arpl
add
lds
popa
into
es
dec
arpl
mov
mov
aaa
cwtl
out
es
dec
stos
sbb
pushf
movsb
add
xchg
xor
mov
push
cltd
sbb
and
add
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
idivl
js
std
daa
addr16
ljmp
sbb
rorb
or
clc
xor
sub
movsb
push
mov
fcomp
shrl
iret
add
icebp
sbb
std
jp
stos
lahf
and
xlat
lcall
pop
lea
outsb
add
xchg
clc
mov
call
add
fnsave
fcompl
xchg
stos
push
cltd
push
int
mov
or
xor
or
xchg
sub
arpl
ret
loopne
in
or
adc
inc
pop
out
xchg
xor
inc
pop
cltd
out
daa
scas
jecxz
push
xchg
fnsave
xor
push
xchg
add
mov
gs
addr16
sbb
inc
addl
xorl
or
cmp
lret
out
jmp
adc
dec
stos
xor
mov
push
and
push
dec
insl
cmp
sub
outsb
mov
and
fisubrl
adc
pop
lds
xchg
jmp
aas
xchg
cli
stos
adc
sbb
mov
ss
push
mov
loop
xchg
push
cmpsl
fisubs
sti
jnp
nop
jbe
fnstcw
xchg
jge
pop
enter
orb
or
hlt
fnstenv
addr16
xchg
push
jl
je
jbe
push
push
jns
out
inc
out
sarl
adc
or
cmp
mov
jne
lock
and
jge
jp
das
pushf
stos
mov
outsl
imul
js
or
pop
gs
jbe
pop
scas
bswap
repnz
cmpsl
fimull
inc
or
rorb
es
add
pop
js
jl
aas
xor
jp
mov
pop
sarb
push
test
jbe
scas
inc
loopne
fdivrs
fs
arpl
xchg
hlt
jecxz
inc
or
out
pop
movsl
lea
mov
mov
dec
sbb
sbbb
mov
mov
mov
andb
mov
dec
std
fdivs
scas
sti
bound
jno
fidivl
pop
stos
adc
add
mov
jle
mov
pop
shrb
aaa
jno
into
mov
inc
lahf
mov
add
call
sarl
pop
fdivl
ss
xchg
or
cmp
enter
jmp
addr16
jnp
dec
sub
add
rorb
stos
lcall
dec
decb
push
inc
and
cwtl
mov
jno
pop
or
repz
pop
xchg
and
mov
add
cmp
mov
pusha
xchg
or
into
inc
fld
mov
aad
fadd
and
mov
pop
cwtl
mov
jo
std
jle
push
or
xor
mov
ja
pop
aaa
fbld
push
xchg
push
popa
fs
add
repnz
sbb
jecxz
cmp
jns
adc
aas
stos
test
lcall
addb
xor
test
sub
int3
std
in
xlat
push
test
fwait
jmp
and
call
loopne
pop
or
nop
repnz
cpuid
jge
mov
xlat
stos
mov
aad
out
subl
or
xor
jl
out
xchg
lahf
lds
popa
pop
mov
cmp
out
cmp
aad
aam
jge
pop
push
sbb
push
jb
ss
xchg
adc
subl
add
mov
add
jmp
outsl
mov
or
imul
dec
or
sub
inc
jo
mov
mov
mov
iret
mov
mov
jge
jmp
je
mov
xor
mov
adc
inc
xchg
adc
pop
and
outsb
lds
mov
out
sbb
inc
test
jo
loope
cmp
std
hlt
cmpl
std
jo
sub
mov
in
in
stos
aas
fldenv
data16
ljmp
lcall
push
fwait
sbb
and
and
fstpt
scas
dec
adc
cmp
shlb
mov
adc
pop
imul
mov
mov
pop
imul
sub
fsubr
int
push
shll
jns
xchg
cmpsb
clc
cmp
mov
rcr
xor
mov
sarb
mov
fwait
movsb
mov
mov
dec
dec
mov
call
dec
gs
push
inc
dec
xchg
scas
ss
inc
cs
int3
int3
and
je
push
xor
jbe
push
cld
test
and
and
or
mov
mov
jae
pop
mov
out
add
pop
andl
sub
cmpsb
jge
push
addr16
jmp
es
movsl
fstpt
pop
jecxz
stc
sub
sub
xorl
insb
jle
test
loope
popa
push
daa
push
js
in
and
ljmp
imul
lea
stos
enter
jle
pop
inc
icebp
sti
jno
out
xor
and
out
adc
jno
sbb
rorl
in
movsl
sub
nop
push
je
stos
addr16
pop
dec
jmp
sub
je
add
inc
fsubrl
jle
mov
call
xorb
add
mov
out
scas
jo
xor
movl
inc
in
rcll
fstpl
popa
mov
dec
fildl
rep
bndstx
sub
popf
int
out
add
pop
aam
pop
dec
pop
sarl
daa
jge
insb
in
dec
dec
and
inc
ljmp
mov
push
xchg
mov
or
into
inc
mov
repnz
push
cmp
out
pop
aas
divl
sahf
mov
mov
popa
mov
cmp
adc
jg
add
pop
jmp
rcll
xchg
mov
fstl
out
dec
scas
outsb
cltd
sarb
xchg
gs
xor
rcrl
int3
in
cmp
fs
lcall
es
sbb
jno
popa
cmpsl
iret
sarl
add
adc
enter
mov
lret
sbb
sbb
lods
out
notb
aad
push
adc
gs
aad
and
mov
lods
add
jg
adc
jp
xor
dec
negb
insb
movsl
stc
notl
js
mov
inc
jmp
jne
test
mov
or
out
rorl
movsl
xchg
test
add
mov
cmpsb
add
xchg
inc
jl
adc
es
mov
mov
aas
arpl
ja
js
jge
pop
enter
rcrb
loopne
xchg
idivb
fistps
sub
add
arpl
sbb
xor
mov
lahf
or
xor
fcompl
ljmp
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
inc
pop
mov
inc
jo
pop
jge
jo
push
dec
add
or
sahf
and
pop
mov
addr16
inc
jbe
pusha
mov
lret
push
inc
call
xchg
insl
and
stos
lret
add
pop
or
out
xchg
push
dec
xor
sti
cmp
mov
sub
cs
pusha
fisubrl
xchg
sbb
jns
or
jge
mov
adc
clc
fisttps
rorl
inc
es
fs
mov
into
sbb
lds
mov
push
nop
xchg
clc
mov
inc
or
lahf
insl
adc
call
add
mov
js
dec
testb
adc
xorb
xchg
js
inc
mov
mov
dec
je
lret
pop
cmp
loope
bound
cld
insb
and
leave
andl
mov
jle
stc
mov
cmp
pop
mov
es
and
mov
dec
cwtl
lcall
movsl
fwait
cmp
mov
iret
cmc
inc
incl
sub
div
xlat
aaa
mov
cmp
mov
jo
loopne
push
mov
mov
push
daa
test
lret
mov
inc
mov
jle
lret
inc
pop
scas
and
insl
into
pop
ja
dec
xor
push
shrb
pop
loop
cmp
jmp
mov
testb
scas
test
jge
or
lods
sahf
les
sahf
xchg
cs
xchg
mov
push
mov
pop
lret
push
lods
cltd
sub
movb
sub
hlt
jns
cs
out
adc
subb
mov
lret
inc
cmp
push
adc
push
xchg
test
xchg
inc
dec
pop
push
cmp
dec
sbb
push
adc
in
lea
xor
repz
pop
iret
add
shrb
inc
and
cmp
xchg
stc
cmp
repnz
fwait
cmp
inc
notb
xchg
cmp
jl
jecxz
cmp
arpl
js
shl
inc
out
push
es
icebp
fs
shll
cli
fimuls
add
xor
and
test
cmp
cmpsb
test
cwtl
aam
aaa
cmp
lret
pop
idivb
add
test
xlat
inc
mov
dec
bnd
pop
xchg
outsl
xor
xlat
test
icebp
adc
fnstsw
mov
pushf
outsb
adc
jmp
imul
rsqrtps
scas
sub
dec
popf
push
xor
out
dec
xchg
aad
imul
inc
in
addb
jmp
mov
pop
ja
ret
inc
dec
sub
pop
sbb
xor
pop
stos
mov
fistpll
adc
int3
mov
cmp
repnz
cmp
mov
daa
sbb
inc
jbe
mov
xor
mov
jbe
mov
adc
mov
xchg
lcall
pop
cwtl
stc
xor
or
stos
push
pop
dec
xchg
lea
pop
clc
push
repnz
clc
and
aaa
inc
lds
call
mov
xchg
fstl
imul
insb
stos
inc
fcomp
je
rol
sub
out
pusha
sarl
icebp
mov
and
inc
stos
int3
jp
nop
xchg
out
jns
sub
fidivl
add
aas
loope
and
jle
mov
cwtl
add
xlat
sahf
mov
jb
icebp
mov
push
mov
mov
pop
out
popa
or
xchg
mov
jmp
sahf
ss
cwtl
jg
les
fstl
add
jp
push
mov
in
data16
push
jg
add
lea
daa
jno
shlb
mov
andl
push
iret
dec
and
jmp
sub
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
inc
rol
add
push
xor
pop
cmpsb
js
ljmp
sbb
or
mov
mov
in
out
out
inc
mov
cld
pop
ljmp
mov
xor
mov
clc
insb
dec
jbe
leave
dec
sub
pop
pop
dec
jnp
test
mov
inc
pushf
adc
aad
or
sbb
das
pop
pushf
outsl
jg
fcoml
scas
jb
scas
cs
scas
shr
dec
mov
add
fdivrl
daa
pop
insl
pusha
sbb
adc
stos
jg
bound
aad
fld
out
sub
and
mov
xchg
push
cmpsb
movsl
adc
lds
xor
adcb
mov
scas
fists
imul
std
or
mov
popa
sahf
insl
mov
jb
insl
cltd
arpl
leave
addr16
aam
stos
mov
push
in
mov
or
and
movlps
push
faddp
inc
arpl
rcrb
dec
test
cmpsb
push
popf
pop
cmp
lds
xchg
repnz
repnz
add
push
sbb
repz
cmp
sub
scas
cmp
repnz
push
cmp
dec
jg
and
repz
pusha
pop
adc
mov
pop
leave
decl
aad
cmpsl
addr16
inc
inc
sub
jp
dec
test
mov
push
cmpsl
loop
cmp
dec
loope
outsl
cmp
mov
push
enter
movsb
testb
xor
mov
mov
imul
add
mov
xchg
imul
cli
mov
mov
pop
mov
xor
aad
mov
andl
sbb
mov
adc
ds
fistpl
std
in
mov
push
out
in
cmpsb
je
xchg
mov
out
pusha
ret
in
cmp
repz
xlat
sub
mov
sub
dec
mov
sub
push
xor
push
and
insl
incl
add
and
add
cs
movsb
xor
cld
pop
xor
fisttpll
jns
inc
pop
jmp
inc
cmpsl
ret
movsl
sarl
xchg
inc
xchg
repnz
loopne
dec
fs
pop
adc
mov
sub
sub
or
mov
sbb
push
jne
mov
sub
xchg
adcl
popa
aad
imul
shrb
fidivl
fldl
loop
adc
xor
jbe
nop
push
and
test
jae
cmp
add
jg
testb
popa
pop
adc
in
shll
mov
sbb
aas
je
notb
jb
push
arpl
or
iret
stos
pushf
adc
mov
fwait
hlt
cmpsl
cmp
je
rclb
sub
call
xor
pop
out
inc
cwtl
jg
fistps
pop
pop
frstor
cmp
lods
xor
pop
cmc
movsb
movsb
sub
pop
push
inc
out
ljmp
arpl
dec
repnz
xchg
mov
jg
pop
leave
das
mov
mov
repz
push
mov
les
fcomi
sub
rcrl
cmpsl
sbb
cmpsl
rcl
xlat
in
pop
insl
loop
inc
add
int
in
dec
test
dec
add
in
push
jmp
pop
movsl
into
icebp
pusha
fs
insl
mov
push
shl
sbb
xor
push
jge
or
movsl
inc
pop
lret
mov
orb
jecxz
jnp,pt
daa
insb
pop
outsl
mov
outsl
jnp
inc
adc
adc
test
js
loope
lock
jns
adc
push
cmp
mov
pop
adc
fistps
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
int3
lea
jo
jge
jo
lahf
mov
dec
xor
mov
daa
xchg
jge
inc
adcb
sarl
pusha
mov
inc
push
loopne
push
sbb
jnp
dec
sahf
and
sbb
out
ja
dec
pushf
xlat
out
inc
ret
rorl
stc
sbb
dec
test
popf
and
xchg
push
movsb
andl
cmp
rcr
and
xchg
xchg
insb
mov
fwait
inc
dec
or
out
jecxz
cwtl
sub
in
scas
adc
mov
pusha
lahf
outsb
ja
mov
pop
into
aad
and
add
jl
pop
loop
sub
mov
mov
cmp
adc
inc
inc
xchg
jecxz
lds
mov
js
lods
sub
movq
shlb
xchg
jmp
xchg
and
adc
mov
push
xchg
shl
inc
lock
push
inc
inc
cmp
push
sbb
xorl
sub
push
rcr
pop
xchg
bnd
push
fnsave
ret
repnz
xchg
iret
add
daa
mov
cwtl
pop
and
xlat
and
pop
dec
sarl
out
iret
stc
cmp
adc
les
inc
arpl
pop
pop
add
mov
leave
mov
mov
stos
adc
jo
mov
iret
cmp
test
mov
in
ljmp
fiaddl
loopne
div
leave
pushf
cmp
insl
mov
cmp
scas
cmc
mov
fcmovnb
and
cld
int3
inc
push
data16
aam
sbb
adc
cs
stos
shrl
das
xchg
aas
and
jmp
fisubrl
ret
jecxz
andb
lcall
repz
inc
rcrl
mov
add
cs
and
insl
xor
ss
ljmp
int3
add
mov
sti
or
mov
lds
cli
fbld
test
test
pop
sarb
mov
pop
xor
fstpt
xchg
insl
or
mov
or
add
push
popf
das
jnp
push
and
sbb
mov
call
ss
push
fimuls
std
xchg
stos
and
lea
xor
in
jne
stos
cmp
stc
push
sbb
dec
ljmp
dec
movsb
hlt
jp
pop
mov
lcall
mov
repz
adc
sbbl
sbb
xchg
xor
push
hlt
fsubr
mov
aas
repz
pop
cltd
ja
int
adc
jo
sbb
in
sub
sti
push
add
sub
and
mov
push
insl
sub
rcrl
cmp
or
insl
push
pop
pusha
in
out
cmpl
mov
sub
pushf
pushf
icebp
add
cmp
pop
es
and
cwtl
xlat
pop
aas
push
dec
clc
je
push
fisubrl
jge
sets
hlt
inc
sub
pusha
je
xchg
jle
sbb
icebp
and
out
shll
in
fcos
or
dec
aam
mov
add
arpl
inc
jmp
inc
mov
shll
pop
push
fwait
mov
pop
xlat
adc
sbb
stos
scas
xchg
pop
mov
pop
out
sahf
mov
inc
dec
insl
dec
out
clc
ljmp
pop
inc
clc
dec
jg
jecxz
rolb
in
jmp
das
rolb
mov
inc
mov
push
push
cmpb
lock
mov
aam
cltd
dec
in
aas
fwait
dec
in
inc
xorl
push
push
clc
and
xchg
xor
adcb
jnp
out
xlat
jle
pop
xchg
push
fs
cmp
cmp
ret
cmc
cld
inc
add
jg
add
rol
jp
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
push
jbe
jo
pop
jge
jo
les
push
dec
and
fistl
cmp
aas
cltd
aad
mov
inc
fdivrs
sub
mov
dec
push
sub
or
cmp
pop
outsb
repz
sbb
and
or
shll
out
nop
jmp
out
out
xor
inc
dec
addr16
xchg
into
pushf
inc
gs
adc
roll
cld
mov
cmc
loopne
jp
loopne
mov
imul
push
jmp
out
add
adc
add
mov
xchg
test
std
shrb
xchg
add
push
and
jmp
dec
cmpsl
shll
out
inc
stos
jmp
and
or
mov
ds
jle
idiv
add
push
int
mov
xchg
xor
push
mov
das
adc
es
mov
fildll
and
cs
insb
xor
inc
xlat
andl
aad
pop
ds
push
in
xchg
mov
lods
lahf
pop
mov
push
nop
xor
cmc
xchg
out
inc
inc
xchg
cld
lods
in
scas
push
dec
les
xor
rol
jg
fcomp
popf
cmp
fwait
ret
ficoms
fdivrl
adc
clc
andb
mov
push
sub
xor
loope
sti
sub
xchg
jno
mov
es
mov
cli
das
into
je
pop
mov
dec
add
cmpsb
mov
add
xrelease
jp
sahf
jg
push
movsl
jbe
les
inc
xchg
jns
cld
sti
shlb
xor
dec
pop
inc
icebp
sub
push
std
or
lcall
pop
fstpl
out
fcompl
sbb
and
test
lret
sbb
mov
aad
mov
jl
mov
filds
fnstenv
mov
cmp
shlb
nop
icebp
pop
or
pop
scas
fdivl
adc
popf
lods
sbb
sbb
sbb
inc
jne
pushf
inc
mov
push
mov
mov
fists
push
cmp
ret
gs
xchg
mov
in
fnstsw
mov
cwtl
pop
adc
shrb
mov
lea
push
xchg
repz
loop
fxam
xor
ret
popa
or
adc
sub
jmp
and
ficoms
pop
int
neg
dec
pushf
cmp
inc
out
shll
jb
int3
sub
dec
sub
rolb
pop
mov
cwtl
xor
mov
or
mov
das
push
lret
mov
jo
mov
insl
stos
dec
insl
jb
pusha
ret
push
pop
in
mov
int
dec
roll
sbb
mov
push
mov
jmp
rcrb
leave
add
jl
jle
pop
push
or
or
and
mov
out
adc
pushf
testl
or
je
out
adc
movsb
mov
inc
rolb
and
sub
jnp
sbbl
arpl
pop
xchg
outsb
fimull
push
or
cmp
sbb
imul
jae
hlt
call
rorb
pop
ss
arpl
mov
repnz
add
push
push
mov
and
ret
mov
iret
fnstenv
dec
sub
mov
or
xor
js
sbb
pop
loope
inc
and
rolb
das
pushl
mov
lahf
nop/reserved
push
scas
rcrl
lret
mov
imul
jmp
shll
xlat
dec
test
mov
mov
or
loop
push
and
aaa
jp
sub
popa
fnsave
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
mov
pop
jge
jo
add
mov
lret
mov
lods
or
mov
push
mov
xchg
mov
mov
xlat
aas
pop
jb
mov
lock
cmpsl
test
popf
pop
mov
pop
or
dec
mov
mov
sbb
lcall
ret
dec
and
add
xor
push
pop
mov
sbb
sub
std
add
stc
or
loopne
loop
je
pop
dec
call
or
loop
imul
mov
xchg
inc
mov
add
push
push
and
out
cmc
mov
jmp
inc
inc
xchg
push
mov
repnz
mov
xchg
insl
inc
push
sub
cmp
mov
pusha
pop
cmp
xor
pusha
mov
push
movaps
dec
das
js
mov
mov
loopne
sbb
aaa
and
xchg
or
pusha
pop
lea
loope
add
aam
test
push
in
xchg
fs
and
rclb
stos
or
pop
out
adcl
push
push
add
jg
or
pop
cs
mov
mov
or
mov
pop
and
push
pop
ficomps
in
mov
mov
hlt
mul
lret
inc
mov
sub
mov
js
adc
int3
roll
mov
ss
stc
pop
call
or
sbb
sub
push
icebp
mov
inc
in
dec
push
leave
jbe
push
mov
dec
jnp
js
sbb
je
dec
dec
xchg
in
test
or
jle
add
movsl
pusha
test
adc
sub
push
dec
xor
xor
inc
cli
pop
push
insl
pop
leave
sub
mov
sbb
in
inc
fldcw
push
rcll
jecxz
rcrl
js
or
cld
mov
lock
xor
sbbl
ss
in
repnz
stc
outsb
xor
push
xchg
movsl
aas
das
add
add
mulb
outsb
pop
scas
sahf
es
shrb
insl
fbstp
inc
and
dec
mov
xor
pop
mov
cmp
xchg
mov
fwait
cmp
fsubl
push
or
inc
mov
retw
pop
pop
cmp
fmul
sub
out
ss
pusha
dec
xor
jns
insl
std
mov
mov
leave
push
imul
out
mov
push
je
bound
inc
shrb
pop
sub
xchg
les
xor
push
or
lcall
shl
mov
jo
fildl
push
repz
stc
into
and
add
sub
lcall
adc
fsts
outsl
sbb
fbld
lret
bnd
or
mov
btr
xchg
test
repnz
pop
mov
mov
mov
pop
repnz
leave
cmpsb
fidivs
lret
adc
adc
pop
push
in
rorl
add
lahf
mov
xor
mov
or
outsl
out
subb
movb
xor
and
add
add
dec
rol
jb
push
mov
and
loop
mov
bound
xchg
jne
add
dec
xchg
popa
rcrl
mov
das
xor
add
jns
pop
or
cmp
cs
push
push
xchg
jno
js
sbbl
pop
sahf
mov
cmp
jg
je
cltd
js
lcall
in
cmpsl
ja
and
inc
push
mov
adc
dec
shlb
test
push
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
lret
adc
jo
mov
mov
and
push
xchg
imul
pusha
pusha
es
mov
jns
push
push
cmp
fsubs
cmp
mov
sub
popf
mov
adc
aas
addr16
jb
mov
mov
mov
dec
xchg
add
xchg
xchg
dec
or
jl
pop
mov
inc
mov
out
cmp
sub
sbb
ret
into
mov
aad
sti
nop
jo
sbb
aad
cld
out
call
movsl
jo
xchg
dec
sub
cmpsl
popa
xor
cmpl
mov
inc
add
fidivrs
add
and
push
adc
sub
xor
sub
leave
repz
imul
sub
and
push
inc
mov
data16
jo
sbb
fnsave
out
xor
shll
flds
es
cmp
push
sbb
cmc
add
pop
xchg
and
sbb
cmp
adc
fstpt
mov
sub
jg
loop
cmp
dec
test
push
mov
stos
fldt
cmp
pop
les
sti
fisubrl
rclb
movsl
dec
cmpb
testl
push
cwtl
adc
pop
pop
insb
imul
daa
std
push
inc
or
mov
push
add
mov
sbb
faddl
dec
lret
cli
or
leave
dec
add
mov
test
cmp
or
movsb
or
mov
dec
fistpl
or
test
out
adc
sub
mov
xor
mov
jmp
jl
out
cmp
push
rolb
mov
push
push
sbb
push
jg
scas
jno
shlb
popa
adc
ds
dec
mov
dec
or
mov
cltd
out
std
sub
or
inc
jb
cld
fmull
loop
mov
std
xor
cltd
sbb
repz
dec
pusha
push
hlt
inc
pop
icebp
and
inc
add
sub
mov
sbb
xchg
ret
pop
sbb
xchg
in
call
dec
ljmp
jno
push
adc
mov
push
sbb
cmp
sbb
clc
mov
add
jmp
stc
mov
movsl
je
push
mov
sbb
cmp
push
inc
and
sub
sbb
adc
or
outsl
test
xor
push
xlat
in
popa
ret
popa
dec
sub
fs
aam
popa
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
lods
call
pop
jo
mov
jg
and
cmp
mov
fnstsw
xchg
icebp
adc
sbb
cmp
sub
mov
sbb
fisttpl
sbb
fisubs
mull
jmp
cmp
push
stos
lods
test
jle
mov
iret
lret
and
sbb
shlb
or
popa
fcomp
sahf
xchg
mov
insb
jae
cmp
push
lret
stos
int3
dec
iret
sarb
lods
int3
imul
sahf
inc
cwtl
adc
sahf
popf
dec
dec
ret
dec
push
push
notl
and
movsb
or
in
xor
mov
int3
xchg
ja
dec
push
test
inc
das
cmc
sarl
cmpsl
leave
xchg
in
leave
ja
ffreep
add
cmp
clc
xchg
pop
cmp
mov
out
into
ret
hlt
fcmovbe
dec
fstps
jb
std
add
or
mov
test
xor
mov
ret
pop
lods
and
mov
lods
pop
dec
dec
imul
lods
fisubrl
xchg
shll
test
out
loope
or
cmp
and
add
push
shr
js
cwtl
enter
jnp
leave
add
add
aad
lods
in
adc
and
push
mov
xchg
gs
mov
popa
xor
fcmovu
imul
scas
das
nop
sub
rorl
popl
mov
push
imul
int
rolb
push
push
sahf
in
cmp
popa
mov
fiadds
test
test
mov
push
push
or
dec
dec
pop
mov
cltd
xlat
pop
sub
cmp
pop
jl
xchg
je
das
cwtl
movsb
jnp
mov
cltd
pop
push
dec
jae
cmc
lea
jns
aaa
dec
sbb
inc
pop
jl
xlat
push
lods
das
fists
leave
push
push
add
mov
imul
xchg
cs
mov
jge
outsb
or
dec
orl
rol
jnp
mov
mov
pushf
sub
in
ror
lds
outsl
mov
cmp
inc
cs
xchg
call
or
popf
mov
jbe
jbe
dec
movsb
jle
cmpsb
jmp
jmp
sub
cmp
pushf
faddl
and
mov
and
addr16
mov
and
cli
loop
push
add
out
mov
fnsave
andb
push
push
and
leave
pop
enter
cmp
or
adc
jbe
inc
add
add
add
sldt
add
leave
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
sub
mov
or
sahf
inc
dec
xchg
ret
ds
das
jne
ret
fbld
iret
mov
inc
es
rcrb
test
pop
sub
enter
mov
mov
lret
adc
test
shrl
mov
rcll
push
insl
push
jge
cmp
xchg
dec
stos
loopne
test
sbb
test
jb
jae
and
mov
popa
stc
stc
mov
inc
ret
pop
adc
test
pop
psubd
add
push
mov
aas
mov
into
jmp
lcall
pop
pop
mov
and
bound
insb
fwait
jle
xchg
mov
inc
sub
dec
adc
push
andb
pusha
das
jmp
push
and
xchg
in
inc
je
gs
stc
lock
das
sbb
adc
lea
mov
mov
pop
sbb
pop
cmp
popf
nop
push
sub
jnp
in
jbe
ret
or
int3
mov
push
mov
push
cmp
jmp
fistl
xchg
loopne
das
test
fldt
inc
stos
out
mov
imul
dec
orl
repz
dec
dec
call
lret
scas
cld
fscale
pop
mov
aad
rcll
adc
mov
insl
je
lahf
jne
repnz
pop
mov
mov
jne
test
cmp
scas
sbb
jmp
decb
js
pop
cmp
sbb
in
xchg
push
cltd
inc
xor
pushf
loopne
push
sbb
inc
dec
cmp
push
push
stc
sub
in
jg
pop
leave
lods
insb
cli
jl
mov
in
adc
push
lock
scas
sub
fs
bound
xchg
mov
test
cltd
pop
lret
aas
sbb
and
push
sahf
add
mov
dec
cmpsb
test
dec
add
cmovl
pop
push
mov
test
ficoms
out
mov
or
adc
pop
xchg
sub
jmp
ljmp
inc
jne
fisttpl
dec
ljmp
pop
dec
inc
fildl
xor
push
push
cmp
push
imul
jb
fildll
lret
loop
push
nop
das
sbb
jl
jl
push
inc
sahf
sub
inc
inc
mov
dec
fs
add
out
jb
push
pop
mov
push
sub
imul
jb
cmc
push
int3
add
lret
imul
es
aas
jne
sti
aas
jns
xchg
imul
mov
cmp
int
cmp
hlt
lret
push
por
fisttpl
call
aas
fsubs
mov
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
aam
jb
data16
mov
inc
ds
cmp
imul
xchg
mov
jl
dec
jecxz
and
and
xor
out
push
mov
test
xchg
pop
mov
out
inc
lahf
mov
jg
jo
xor
cs
adc
pop
and
xchg
mov
nop
mov
inc
loop
or
push
dec
pushf
cmc
push
mov
js
mov
cmp
mov
sub
push
cli
aad
sti
inc
inc
adc
mov
testb
sar
in
xor
int3
cmpsb
cmp
aaa
dec
mov
addb
adc
fwait
rolb
inc
flds
pop
mov
mov
dec
out
loope
sbb
xchg
inc
mov
mov
jnp
push
mov
lea
cmp
adc
xlat
push
mov
pop
xor
scas
in
jno
sub
mov
test
pop
sub
xor
cmpsb
popa
hlt
ss
ret
mov
add
lret
outsb
es
and
cmp
pop
jp
int3
dec
adc
mov
jp
push
stos
inc
adc
mov
in
push
push
cmp
mov
and
dec
add
lods
xchg
cmp
js
ret
mov
xor
pop
mov
nop
test
daa
int
sahf
cmp
pop
mov
in
pop
mov
push
pop
xor
mov
rclb
push
jp
or
out
repz
mov
in
xchg
arpl
xchg
pop
imul
aad
out
jmp
imul
adc
jb
scas
in
arpl
repnz
fcomp
jb
and
leave
lock
js
andb
inc
lods
dec
and
fwait
clc
cmp
xlat
push
add
pop
mov
inc
stos
push
dec
push
xor
push
cs
or
out
cmp
add
ss
inc
fsts
dec
movsl
mov
mov
xchg
mov
in
loope
push
mov
int3
jns
xor
in
repnz
data16
test
in
inc
xor
push
je
sbb
or
mov
stos
xor
xchg
sub
mov
jo
sbb
js
repnz
xlat
mov
dec
fstps
mov
lea
aad
incl
add
ljmp
iret
mov
dec
inc
xchg
push
pop
jp
icebp
fs
mov
inc
sbb
rcrb
filds
loope
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
gs
or
test
rcrl
push
out
mov
clc
sahf
cmp
mov
dec
mull
nop
sbb
jnp
dec
sub
in
sub
xor
mov
cmpsb
cwtl
push
xchg
loop
imul
mov
icebp
popf
pop
adc
cmp
inc
xor
lret
and
xchg
sub
ja
jl
lds
jmp
fbld
add
mov
sbb
rcr
xor
xor
cs
sbb
daa
dec
fwait
cmp
arpl
or
sbb
scas
sbb
pop
push
dec
fcoml
mov
cmp
dec
xor
subb
and
xchg
pop
xlat
fisttpl
pop
push
ljmp
xor
repz
xchg
cmp
aas
mov
ret
push
inc
mov
adc
out
inc
cltd
lock
sub
repnz
push
adc
xor
jmp
adc
and
mov
dec
fdivrp
pop
and
leave
out
repz
call
xchg
aad
xchg
xchg
iret
ss
xor
daa
dec
add
ss
push
inc
das
xchg
add
dec
dec
cmp
add
ljmp
mov
add
mov
fidivs
push
mov
mov
push
jne
loopne
cmp
cmp
into
ss
sahf
push
dec
mov
testl
sub
sub
xor
pop
in
out
mov
and
aaa
mov
mov
scas
lret
pushf
jg
push
shlb
dec
lods
mov
fs
nop
or
js
lret
jge
fidivrl
cmp
xor
clc
dec
inc
pop
loop
jno
test
in
xor
mov
sub
or
or
cmp
xor
add
pusha
jb
cmp
sahf
test
and
repz
cmp
adc
stc
inc
idivb
and
aam
stos
sbb
verw
loopne
jge
mov
and
rol
jmp
or
mov
btc
rcll
lea
push
test
pushf
xchg
xchg
fcomip
movsl
inc
ret
loop
aad
fnsave
mov
inc
repz
daa
and
jmp
test
inc
dec
aam
jl
inc
movsb
xorb
xchg
adc
aaa
or
cmp
subb
pusha
mov
inc
add
pusha
xlat
push
xchg
pop
aaa
add
push
cmp
ljmpw
loope
and
hlt
aad
nop
lea
add
addr16
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
cmpsl
xor
jo
mov
loopne
pop
push
in
cmp
jg
sub
sub
daa
daa
insl
add
jecxz
xorb
fstl
sub
pop
out
loop
mov
repz
mov
mov
out
dec
repz
test
mov
or
pop
jno
ljmp
into
mov
dec
push
loopne,pn
sbb
xchg
lret
sti
xor
andl
xor
jnp
dec
or
ret
ljmp
jg
leave
push
aad
adc
add
push
dec
test
push
xchg
lds
pop
fs
inc
popa
enter
mov
nop
inc
adc
outsl
clc
cmp
and
mov
jecxz
cmpsb
addr16
mov
xlat
test
jge
add
and
lcall
scas
add
sahf
inc
stc
mov
stos
pop
add
shlb
imul
mov
mov
lds
insb
fcmovbe
cmpsb
insl
jae
add
mov
addr16
sub
jmp
cmovno
arpl
cwtl
mov
scas
lds
ficompl
cltd
mov
aaa
jmp
test
pop
mov
dec
inc
sbb
inc
jno
into
mov
pusha
outsb
or
or
enter
push
pop
sbb
lea
scas
dec
xlat
mov
xchg
mov
push
mov
push
push
inc
loope
fistpll
dec
inc
adc
and
inc
jge
lcall
mov
xchg
or
push
nop
sbb
cwtl
push
cmp
orl
push
push
cmp
addl
je
dec
js
out
dec
mov
push
mov
and
fs
movsb
pop
arpl
orl
push
pmullw
adc
jbe
adc
or
or
pop
sub
xchg
cs
xchg
xchg
not
and
sub
xchg
push
nop
jmp
mov
mov
ja
bound
jl
mov
or
ret
sahf
test
mov
data16
lea
cli
das
icebp
int
iret
and
xchg
adc
test
loopne
sub
lds
and
add
jle
sub
xchg
cld
test
cmp
iret
jne
aad
sub
xor
fs
cmp
sub
fsubrp
mov
out
test
rolb
xchg
or
ss
dec
jle
mov
mov
mov
cmp
rclb
in
ss
and
xor
mov
mov
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
shr
outsb
jo
mov
test
mov
lret
xor
push
std
or
pop
push
addb
or
ljmp
adc
push
adc
outsb
mov
nop
cmp
das
mov
cltd
std
xchg
loopne
jae
dec
ljmp
roll
inc
pop
aam
data16
push
mov
cmp
int3
add
inc
adc
scas
push
lods
cmp
outsl
xchg
push
scas
push
pop
add
mov
jg
xchg
push
inc
daa
cltd
sub
pusha
push
push
test
pop
sahf
sub
add
std
mov
popa
jae
mov
add
scas
sub
inc
xor
std
test
aaa
test
shll
mov
inc
js
push
addr16
or
mov
js
fnstsw
out
clc
mov
je
and
mov
out
sub
and
pop
dec
mov
out
push
nop
push
mov
sbb
shrl
rcrb
les
jp
xor
or
js
and
dec
push
in
out
sbb
jecxz
jae
add
cmp
dec
mov
mov
sbb
mov
jb
insb
xor
or
sahf
jnp
cmpsl
sbb
gs
jnp
shlb
pop
je
and
sbb
addr16
and
das
test
outsb
cmpsl
cmc
cmc
or
adc
repnz
test
aad
jo
cmpsl
add
and
rolb
leave
loop
js
pop
out
stos
jecxz
cmp
inc
xchg
sahf
cmc
sub
jle
fldl2t
sub
mov
or
fwait
or
aas
jg
inc
cmc
add
cmpsl
dec
pushf
out
cld
adc
push
sbb
adc
mov
mov
inc
push
inc
sub
dec
cmp
out
lret
xor
repz
xchg
or
mull
out
and
jmp
pop
inc
in
fs
pop
sbb
mov
cltd
cmp
aas
std
adc
shl
sub
fisttps
mov
mov
mov
rol
cmp
mov
rorl
adc
movsb
call
adc
pushf
fdiv
mov
psubd
push
xorb
cmpsb
and
push
sub
loopne
sub
xchg
dec
mov
sub
dec
in
mov
pop
pusha
jno
dec
popf
lahf
fildll
fnstenv
adc
lods
jle
cmp
ret
cmp
icebp
adc
out
imul
sahf
loop
push
test
mov
shll
or
mov
sbb
rcrl
push
pop
inc
lea
clc
jne
pushl
jmp
and
lods
shrb
in
xor
test
xor
jle
jo
pop
jmp
insl
cmp
add
pop
jo
insl
rcrb
jbe
push
adc
jecxz
add
add
sbbl
ds
mov
xchg
mov
cmpsl
mov
mov
dec
mov
adc
inc
jno
lds
push
aad
stc
nop
arpl
daa
decb
mov
das
push
or
insl
in
push
testb
sbb
mov
cwtl
sub
pop
adcl
call
sub
ja
cld
rol
pop
and
mov
subb
jae
dec
mov
loop
cwtl
and
in
or
dec
jecxz
pop
and
pop
vmovups
dec
add
dec
inc
frstor
xchg
loope
jae
fimull
push
jb
push
sbbl
xor
dec
xor
mov
xchg
loop
cmpsb
repnz
or
mov
dec
sbb
inc
pop
arpl
cmp
xchg
sbb
rclb
cmp
push
cmpsl
repnz
mov
fisttpl
jmp
push
mov
loope
pop
pop
sub
dec
repz
insl
adc
cmpl
push
lods
les
jmp
mov
mov
scas
jmp
out
loope
movsb
mov
fisubrs
push
mov
ljmp
roll
stos
roll
xchg
es
jns
add
je
call
xor
dec
mov
out
in
fdivrs
pop
jnp
jne
cs
ss
into
iret
push
pushf
les
mov
mov
repnz
scas
push
int3
mov
sub
jmp
inc
push
aaa
data16
pusha
fsts
mov
add
sbb
mov
mov
in
data16
loope
cmp
and
mov
lret
pop
push
pushf
cwtl
xor
cs
sbb
gs
sarb
lret
push
out
xor
cs
jo
int
loope
push
or
and
fwait
mov
pop
xchg
ret
insl
add
in
jp
pusha
into
pop
cs
and
iret
mov
xchg
mulb
scas
or
dec
stos
mov
inc
or
push
neg
sub
mov
adc
cmp
icebp
pop
xor
test
and
pop
push
or
std
pop
push
bound
mov
test
aas
cmpsl
pop
lods
aaa
dec
aad
call
cmpsl
inc
xchg
fstps
cmpsl
push
xchg
sub
ljmp
sbb
divl
jno
clc
inc
int
mov
push
les
jg
inc
push
out
lret
outsl
xor
jmp
pop
insl
and
xor
insl
jp
or
add
push
jo
imul
outsl
adc
jbe
in
dec
xchg
divb
mov
push
cmp
sbb
fcoml
test
push
cmpsl
jb
test
cmpsl
dec
jns
sub
mov
popa
out
lods
loop
pop
and
out
test
inc
dec
mov
xor
inc
pop
mov
cmc
frstor
pop
test
out
push
pop
xchg
stc
stos
test
imul
leave
les
pop
lods
push
pop
sbb
mov
and
aam
xor
push
jo
into
mov
cld
icebp
imul
les
test
out
mov
jmp
add
adc
andl
add
les
dec
adc
xchg
jg
push
aaa
subb
jp
mov
jle
das
push
inc
pop
cmp
push
ret
lret
mov
sbb
dec
popa
adc
lock
pop
sub
xor
jg
loopne
xchg
pop
frstor
or
sub
ja
cmpsl
daa
cmp
cmp
rorb
les
push
jbe
js
or
fdivrs
xchg
roll
or
push
and
sbb
cmp
add
mov
jbe
sbb
mov
inc
rcrb
push
xlat
xchg
mov
enter
cmp
loop
push
push
outsl
xor
xchg
adc
xchg
notl
or
mov
fs
sub
dec
fldz
movsl
lods
mov
arpl
out
icebp
mov
into
cli
inc
iret
push
pop
out
ret
push
lret
pop
push
xor
push
cmp
ljmp
cmp
push
sbbb
pop
mov
int3
mov
rolb
idivl
in
rclb
xorl
pop
lea
sbb
pop
dec
cmp
jno
pop
cmpsb
mov
loope
or
or
gs
push
jle
dec
nop
out
xchg
lock
hlt
inc
push
nop
daa
sbb
icebp
rorl
xlat
adc
xchg
push
fwait
pop
sbb
fucomi
popf
jp
pop
xorl
les
add
testb
sbb
cmp
push
adc
sbb
or
or
pop
dec
lret
in
push
dec
addb
lahf
cmp
lods
das
aad
repz
mov
lock
into
sbb
std
into
sub
iret
sub
sbb
sub
xchg
jmp
pop
insl
mov
ljmp
or
push
adc
loop
lret
fmuls
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
lahf
ds
inc
jbe
jo
jle
jo
orl
sbb
lret
mov
sub
jp
pop
popf
test
mov
push
insl
pushf
sub
enter
stos
repnz
sbb
pop
pop
pop
dec
adc
fcoms
or
iret
sbb
jecxz
pop
jecxz
cmp
outsb
and
xor
std
or
xor
cmp
jb
sbb
cmp
inc
inc
stos
and
daa
sbb
fiadds
jne
lods
jp
lock
and
adc
adc
jbe
enter
test
movsl
es
into
mov
pop
aaa
push
arpl
mov
and
test
aaa
ja
push
sub
xchg
fisubs
das
add
imul
cmp
add
xor
cmpsb
inc
mov
push
dec
or
adc
jne
jg
pop
jns
mov
mov
mov
sbb
pop
mov
lret
add
cmp
out
test
dec
add
pop
insb
dec
inc
add
inc
dec
sbb
int3
call
stc
imul
push
cmc
push
jno
xlat
dec
imul
sbb
inc
gs
idivl
stos
lret
xchg
pop
jecxz
sbb
popf
or
out
dec
and
aam
cltd
pop
imul
mov
xor
test
pushf
fistpl
push
jae
iret
xchg
loope
or
xor
and
xchg
sbb
jae
adc
dec
bound
mov
or
repz
pop
cmc
xchg
gs
or
repz
inc
fsubr
nop
xor
shrb
int3
mov
push
cvttpd2pi
push
sub
or
loope
add
dec
roll
cmpsb
mov
jle
inc
push
fistpl
add
pop
cmc
fsts
daa
ret
xchg
in
ds
fcomi
popf
stos
jbe
int
and
xor
in
shrl
int3
ja
adc
dec
cltd
or
iret
sub
inc
pop
fnstsw
push
fst
sbb
inc
negb
xor
mov
les
or
repz
mov
hlt
idivl
or
sbb
cmpsb
mov
rcrl
pop
add
mov
ret
mov
push
rolb
adc
dec
outsl
int
mov
roll
mov
ds
cmp
rclb
sub
shr
and
ja
subl
jno
adc
pop
push
jae
lret
mov
dec
pop
xchg
mov
mov
mov
jbe
clc
inc
hlt
adc
mov
mov
lea
xorl
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
stos
dec
adc
mov
adc
and
cltd
hlt
xchg
mov
xlat
fsubrp
jo
das
sar
or
iret
popa
jae
push
mov
aas
cmp
push
xchg
out
stos
test
in
movsl
jnp
loop
cmp
ja
in
or
jle
aad
repz
jecxz
xchg
or
fcompl
sub
sub
dec
or
xchg
das
sahf
out
xlat
filds
mov
mov
loopne
mov
push
mov
inc
repnz
or
imul
je
jmp
xor
push
ret
push
in
call
sbb
xchg
daa
jecxz
sbb
cli
add
mov
mov
popf
les
repnz
fwait
or
inc
jmp
dec
mov
popf
xor
pop
test
push
pushf
pop
sub
icebp
push
mov
mov
xor
out
xor
push
xchg
ljmp
lret
ret
adc
sti
es
jmp
add
mov
mov
pop
fisttps
or
ret
addr16
stos
mov
test
jecxz
jg
out
cmp
mov
movsb
mov
cmp
popa
dec
cltd
mov
and
xchg
xchg
push
stos
mov
push
inc
pop
fstpt
fwait
add
iret
out
enter
sbb
test
fisttpl
cwtl
sub
pop
test
loopne
push
push
xchg
push
je
mov
arpl
lds
jb
sbb
sti
ret
mov
jnp
pop
push
and
sub
addr16
test
jp
popf
sub
mov
or
outsl
outsb
mov
divb
push
lods
push
or
repz
push
dec
into
jg
hlt
dec
andb
and
xchg
or
lret
cwtl
sub
dec
sbb
std
fsubrp
fwait
js
loope
cmp
in
fsincos
xchg
imul
sbb
stos
or
mov
ret
inc
cli
out
jle
repnz
pop
dec
sub
aas
int
xor
sub
push
cmp
xor
lods
cmp
std
push
popf
ds
cmp
mov
hlt
xor
mov
lods
lods
sbb
sarb
or
and
outsl
xor
xor
jb
fisubl
jnp
jecxz
pop
int
and
shr
or
js
punpckhbw
adc
jp
pushf
xor
sahf
jp
faddl
lods
inc
imul
mov
xor
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
dec
leave
jo
jo
jle
jo
and
inc
mov
pushf
xor
sbb
test
add
push
mov
or
cwtl
pop
and
test
xchg
cmpsl
jl
arpl
cmp
fistl
cmp
pop
push
scas
add
pop
test
cmp
mov
addr16
cmpsb
inc
xor
sarb
xchg
je
fwait
mov
pop
enter
rorb
mov
dec
xchg
lds
imul
bound
leave
mov
sbb
hlt
cmc
xor
pop
jge
jmp
das
dec
les
in
or
filds
fldln2
psadbw
data16
xchg
or
push
fnstenv
inc
es
push
cltd
out
popl
in
pop
sbb
xchg
adc
int
and
ret
mov
push
mov
pop
loop
push
xchg
sub
data16
sbb
mov
seto
pop
pop
insb
imul
clc
neg
dec
dec
ja
les
scas
xchg
jge
insl
out
and
mov
mov
shrb
in
mov
stos
lods
in
out
lret
daa
mov
pushf
ficompl
push
push
popa
add
and
jo
int
push
filds
dec
jns
fmuls
mov
pop
mov
popf
outsb
je
push
rorl
leave
test
pop
xchg
jp
lods
js
xchg
dec
loop
jns
cmp
emms
arpl
jge
cwtl
movsb
jne
adc
fisubrs
test
out
lcall
pop
dec
es
jbe
cmp
mov
inc
into
out
mov
mov
mov
enter
push
lea
mov
mov
fs
jle
jl
pop
mov
mov
fcomi
xchg
jp
int
xor
lcall
pop
mov
xor
pop
mov
addr16
xchg
lods
andb
in
js
mov
pop
mull
ret
test
adc
lods
aaa
lret
daa
test
stc
nop
dec
xchg
inc
cld
cltd
daa
popa
jp
lds
in
int
or
xor
andnps
pop
std
jne
nop
or
cld
pusha
divb
mov
add
dec
cmp
dec
into
cmpsl
jo
sub
and
dec
sub
out
xrelease
fcoml
imull
push
sti
call
out
mov
jbe
or
adc
mov
mov
stos
push
imul
inc
lods
xchg
cmp
mov
mov
sbb
ror
sbb
mov
and
adc
push
mov
xor
jmp
add
mov
jb
jge
jge
add
jge
jo
jle
jo
push
loope
sbb
fs
loopne
int
pop
mov
xchg
cmp
into
xchg
out
movsb
sub
jl
or
pusha
stos
push
lds
test
das
xor
popa
lea
dec
cmp
push
shll
and
mov
ja
in
pop
testb
mov
or
sti
push
pop
adc
iret
test
cmp
push
and
mov
jno
or
xor
fadds
pop
rorl
sub
xor
gs
ficoml
lea
mov
mov
pop
bound
cmpsb
cwtl
adc
push
mov
sahf
andl
xchg
cmc
adc
sbb
clc
stos
call
adc
xchg
cwtl
pop
negl
insl
sub
ljmp
xlat
mov
pop
cmp
adc
mov
dec
repz
add
mov
or
aaa
cmp
sti
jp
cmpsb
xor
ljmp
movsl
pop
ret
push
test
cmp
push
lods
adc
mov
jle
mov
out
jo
inc
ljmp
mov
shrb
pop
loop
imul
dec
lods
fprem
pop
dec
adc
fstl
inc
xor
std
ret
jns
sub
jmp
ds
dec
push
sbb
call
cs
out
adc
inc
bound
movsl
fisubrs
ss
or
lea
jbe
mov
and
pop
sub
fbld
insb
inc
pop
jg
negl
add
push
testb
jl
mov
mov
sarl
jno
jbe
xchg
inc
stos
mov
call
movsb
xchg
pop
xor
xor
and
fbld
push
mov
pop
gs
and
mov
mov
lahf
sbb
or
ret
xchg
ficomps
fistpl
sbb
inc
hlt
insb
clc
jp
dec
adc
inc
or
je
pop
call
test
xor
xor
mov
cmp
sbb
data16
sub
jns
js
movb
pop
mov
mov
lcall
dec
test
pop
mov
test
sbb
lods
mov
inc
mov
lods
loop
jg
pop
aaa
inc
bound
mov
frstor
xchg
insl
lods
in
out
rcrl
xchg
mov
dec
cmp
pop
push
imul
push
pop
fdivs
out
aaa
cltd
inc
shrb
shll
arpl
sbbb
cli
mov
sub
fdivr
test
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
test
jnp
jo
jle
jo
jg
ficoml
mov
mov
arpl
rclb
call
pop
sub
xchg
lds
popf
movsb
aam
int3
xor
fidivl
xlat
sub
inc
adc
sbb
and
pushf
je
jmp
inc
je
insl
lds
xchg
dec
fs
xor
adc
arpl
xor
dec
gs
pop
shr
jg
cli
mov
cld
mov
ja
ffree
sub
xchg
xor
xchg
cwtl
xor
lods
fcmovnu
lret
iret
fnstsw
loop
call
mov
inc
cmovnp
movsl
roll
mov
push
loopne
xor
aas
clc
xchg
out
push
mov
ret
cmp
and
pop
cmpsl
push
cltd
ja
jp
clc
xchg
jmp
mov
test
cs
dec
aas
push
dec
pop
int
sbb
pop
mov
pop
sbb
cmp
xor
and
xor
out
push
je
dec
lcall
hlt
rcr
jns
jmp
into
data16
dec
sub
push
ljmp
sti
pop
icebp
adc
lahf
mov
ljmpw
or
cmpb
adc
jne
lcall
mov
xor
sub
out
stos
push
shrb
xchg
arpl
cmc
gs
cmp
xor
mov
out
popa
mov
sbb
inc
fwait
cmp
clc
and
stos
mov
sub
pop
iret
jecxz
popl
mov
cmpsl
xor
cmp
jmp
adc
xor
das
repz
sbb
jne
ret
inc
xchg
lds
movsl
lahf
in
sahf
push
rolb
mov
lea
aaa
xchg
sub
push
enter
test
push
es
dec
int
and
loop
nop
roll
or
outsb
and
lds
in
adc
xor
int
ss
insl
xchg
pushf
fimull
les
std
std
dec
push
lahf
pusha
fcmove
dec
adc
xchg
dec
imul
outsb
or
mov
das
mov
mov
sbb
fldt
cmpsb
sti
mov
addr16
sbb
pop
popa
icebp
xchg
jne
push
sub
popl
push
xchg
push
stos
xor
sahf
movsl
in
jg
addl
ds
hlt
test
pusha
mov
mov
cmpsb
inc
jb
inc
insl
ret
cltd
scas
cltd
adc
sbb
sub
jge
fcomp
jg
xor
cmpsb
mov
cmp
shlb
insb
sub
add
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
fbld
jg
mov
aam
daa
jp
xchg
out
fnstenv
pop
cld
fsubrs
lret
push
mov
ret
enter
es
rcl
mov
xor
pop
repz
mov
add
outsl
mov
push
sub
xor
sub
pop
mov
xor
sbb
loope
mov
add
in
sti
clc
loop
test
add
clc
bound
and
fwait
push
pop
stos
cmp
jno
lds
dec
inc
pop
mov
mov
fmul
mov
rolb
loope
ficomps
jl
xchg
jae
mov
cmp
negb
fstpl
lcall
xchg
fcmovnbe
jl
loope
inc
leave
insb
mov
xchg
inc
pop
mov
push
in
loope
repz
sbb
hlt
cmpsl
jno
jbe
xchg
or
xchg
pushf
scas
mov
xor
and
fsubp
cltd
ja
insl
pop
je
jns
pop
repnz
icebp
mov
jns
mov
mov
mov
imull
gs
jnp
mov
add
add
jbe
stc
mov
adc
mov
add
pop
daa
push
xchg
xchg
adc
repnz
out
sti
insl
sbb
adc
into
imul
into
std
ss
cwtl
adc
data16
test
in
adc
rolb
psubsw
rcrb
lods
adc
fs
cltd
cmp
push
xor
aaa
outsl
xor
mov
dec
and
dec
sbb
jns
inc
cmp
iret
sbb
jnp
jae
or
cmpsl
sbb
loopne
or
inc
test
xchg
fsubr
push
sarl
or
adc
popf
push
jo
push
lods
xor
mov
cmp
icebp
xor
pop
dec
mov
ds
lea
in
cli
mov
inc
in
push
aam
loopne
and
leave
sbb
mov
test
mov
aaa
cs
push
sub
test
mov
dec
mov
std
sub
xor
cli
es
and
xor
sti
mov
out
jle
or
pop
push
pop
push
rclb
dec
lock
repz
fidivrl
mov
aas
cwtl
movsl
pop
push
xlat
daa
push
jae
andb
adc
aad
cmp
cmc
mov
pop
add
sub
cmpsb
cmpsb
mov
mov
fs
out
jecxz
pop
movsb
sub
leave
jecxz
inc
cmp
aad
push
popa
sub
sbb
pushf
pop
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fldenv
pop
ljmp
jle
jo
xor
mov
loope
pop
in
pop
lahf
mov
enter
sbb
xchg
adc
push
in
or
dec
negb
cmp
out
fwait
cmp
push
aas
pop
pop
mov
add
jmp
aad
stos
sahf
repnz
mov
lea
popa
mov
add
push
jbe
push
idivl
pushf
mov
adc
dec
scas
outsl
sub
aaa
lar
cmp
lret
mov
fcmovbe
add
pop
add
inc
xchg
iret
sbbb
jbe
inc
lods
sbb
push
icebp
and
lret
in
rorl
fisttps
icebp
iret
cmp
mov
pop
jmp
sub
xchg
ficoml
lret
bnd
sbb
push
or
mov
mov
jnp
popa
mov
stos
push
in
pop
xlat
cld
daa
xor
repnz
mov
aad
iret
loope
stos
mov
clc
jmp
std
mov
and
add
cmc
xchg
out
push
mov
out
aas
mov
outsb
adc
sarb
dec
pop
inc
sbb
and
jmp
jae
out
mov
dec
ret
ror
rorb
imul
iret
dec
jae
imul
loop
mov
call
and
scas
jg
or
loop
xor
inc
sbb
pop
rcrl
inc
mov
pop
mov
out
shrb
add
xchg
ljmp
rcrb
divl
test
xchg
pop
pusha
pushf
int
or
outsb
add
and
xor
mov
pusha
scas
loopne
lods
dec
pop
push
mov
std
mov
adc
lret
int3
bound
pop
inc
push
fcmovnbe
jo
dec
rcrb
push
push
hlt
xor
dec
stos
sti
and
mov
jl
fidivrs
stc
xchg
sub
dec
ficoms
mov
sbb
popf
in
xchg
rorl
cld
shr
movsl
fmull
pop
push
mov
in
movsl
mov
leave
mov
and
cltd
and
aaa
sub
aas
stos
call
mov
mov
cmp
iret
test
jno
cmc
add
pop
add
pop
jmp
mov
push
dec
ljmp
insb
cmpsl
xor
and
and
mov
and
inc
mov
in
lock
out
add
test
jmp
and
rorb
dec
pop
sbb
sbb
stc
xchg
shrl
dec
mov
xor
mov
lcall
fsts
xchg
cs
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
div
sti
add
mov
dec
lea
lret
xchg
in
add
dec
inc
vmovups
cmp
loope
sub
int3
inc
test
xchg
gs
jl
mov
xchg
push
inc
sbb
cmpl
imul
sub
jno
cmpsb
aam
mov
cmp
cmp
sbb
bound
xchg
sbb
stos
push
sbb
lods
fstpl
xor
pop
sub
andl
mov
jb
mov
and
lea
push
push
aas
ss
jnp
subl
push
jp
inc
mov
mov
inc
cmpsb
popa
jp
mov
push
jg
xor
lea
xorb
movsb
cmpsl
loop
andb
xchg
pop
sarb
mov
mov
sub
sbb
jbe
add
push
movsl
mov
bound
mov
cmc
bound
sub
dec
out
add
fistps
mov
lea
or
lret
xor
out
dec
push
arpl
push
push
and
paddsb
fdivr
jmp
sbb
inc
xorb
imul
jae
pop
xchg
and
fwait
repnz
sub
rorb
jbe
negl
cmp
add
cltd
dec
insl
into
ss
stos
mov
lahf
mov
xor
adc
jmp
aaa
cltd
mov
shl
push
jbe
inc
out
dec
lods
jle
fs
or
icebp
sbb
push
cmp
mov
mov
pop
stc
jge
mov
arpl
fucomip
cld
out
mov
jo
add
jmp
add
cmp
das
lods
adc
lods
call
pop
xchg
inc
cmp
xchg
adc
aam
xor
xor
xchg
lods
sub
mov
movsb
jecxz
pop
pusha
fnstenv
jae
repz
xchg
sahf
sbb
sahf
int
cltd
adc
pop
add
daa
out
push
arpl
xchg
mov
mov
in
sbb
xchg
pop
or
decl
sub
roll
adc
sahf
js
mov
es
sbb
cld
add
add
js
xchg
add
rolb
ret
orb
adc
sbb
adc
jge
mov
pop
stos
add
push
in
push
movsb
add
or
loop
mov
mov
inc
inc
es
cli
add
loop
imul
in
pop
rorl
jo
mov
shr
sbb
ret
adc
pop
test
and
xchg
rorb
push
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
lahf
inc
scas
jg
jg
mov
add
xchg
sub
add
movsl
jns
nop
cmp
inc
inc
addr16
lahf
xor
les
pop
pop
sbb
sti
gs
adc
add
xor
icebp
mov
xchg
add
fisubrl
jle
sub
sub
ficoml
ret
pop
push
cmp
xchg
lods
in
idiv
mov
addl
jp
lahf
lods
out
jmp
rcl
daa
dec
jbe
add
add
lock
addb
xchg
loop
cmp
je
jb
xchg
stos
lret
inc
mov
jb
int
push
test
mov
pusha
cmpb
outsl
xor
adc
pop
and
cwtl
push
jg
aam
xchg
pop
add
fisubrs
jnp
xchg
loope
push
lods
inc
pop
shlb
add
cmp
add
mov
adc
jo
lahf
push
cmp
add
loope
test
add
sub
outsb
scas
sbb
daa
sbb
popf
push
mov
add
out
pop
gs
cmpsb
xor
inc
mov
add
lcall
js
ficomps
lods
arpl
cmpsl
pop
mov
stos
in
adc
pop
pushf
clc
jns
cmpsl
jge
enter
xchg
jecxz
fnstenv
inc
pop
in
mov
outsb
inc
mov
adc
mov
in
loope
dec
or
ljmp
jle
ja
pop
lcall
mov
pop
aam
data16
mov
mov
mov
out
or
mov
push
xchg
push
and
cmp
fisubrs
pop
out
cmc
dec
mov
jmp
ja
xchg
out
int3
lea
mov
aad
fwait
ss
mov
mov
mov
int
pop
push
fisttpll
outsl
mov
ljmp
imul
cmpsb
mov
mov
add
test
outsl
popa
into
jnp
adc
pop
js
pushf
fimuls
or
inc
push
jo
ret
pop
movsb
bound
ret
insl
xchg
adc
and
mov
movsl
push
or
pushf
fs
cmp
fcoml
or
jae
loopne
clc
push
in
or
and
mov
mov
repnz
insl
ljmp
addr16
mov
cli
push
es
add
dec
jb
adc
dec
push
imul
imul
lahf
in
inc
lret
add
push
cmp
fistpll
push
in
sub
mov
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
inc
pop
andb
jle
jo
gs
pop
es
bound
mov
inc
in
mov
xchg
push
push
dec
xor
ret
les
in
pusha
pop
out
rorl
adc
test
xor
pop
and
out
in
dec
add
xchg
xor
jp
mov
out
mov
out
cmpsb
or
sbb
sbb
out
lods
push
pop
sbb
mov
pop
xchg
sbb
xor
aas
adc
in
ds
cs
test
scas
mov
inc
sub
xchg
and
fisttps
pusha
out
addr16
mov
sahf
or
bound
nop
orl
ds
and
mov
add
lds
xchg
filds
push
or
push
sub
push
dec
inc
xlat
sub
rorb
add
sub
add
sub
dec
add
pop
inc
push
inc
xchg
fdivrs
jno
dec
jbe
ljmp
push
dec
or
dec
ficoml
sarb
mov
xor
xor
jbe
xchg
mov
lahf
pop
aad
movsl
inc
rcl
notb
add
mov
sub
sbb
adc
cltd
decb
xchg
fidivl
roll
dec
scas
imul
mov
mov
data16
mov
lret
jg
loope
inc
add
adc
pop
inc
call
incl
xchg
inc
aad
push
push
inc
xor
dec
mov
lods
cltd
aam
inc
dec
pop
inc
xchg
push
jl
outsb
sbb
loop
jae
mov
faddl
cld
add
movsb
mov
iret
imul
or
mov
loopne
xor
int3
inc
mov
mov
pushf
sbb
mov
sarl
icebp
imul
popl
dec
adc
mov
arpl
aaa
sbb
and
mov
out
arpl
dec
lret
pop
fsubs
out
jge
cmp
mov
jne
add
xchg
fmull
mov
sarl
inc
in
pop
mov
sub
and
lret
add
ss
push
adc
mov
xchg
adc
fadd
and
add
cmpsl
xchg
mov
loop
je
pop
add
insl
test
insb
test
daa
mov
mov
mov
repnz
add
mov
ffreep
cmp
mov
nop
rcll
mov
ret
shll
push
mov
insl
push
ljmp
jmp
mov
sti
fisttpll
and
cltd
pop
loopnew
cmp
fmull
call
add
mov
arpl
pop
jp
inc
aam
xchg
orl
jo
lcall
xor
jae
ljmp
or
cmc
sbb
cmp
adc
lea
sub
out
lea
imul
mov
sub
xor
movsl
repnz
xchg
inc
pushf
test
add
inc
test
and
sbb
or
sbb
jae
int3
div
mov
pusha
and
fcmovnbe
int
mov
jg
rorl
mov
mov
cli
push
add
ret
rorl
mov
inc
inc
sub
scas
mov
jge
leave
push
pop
jo
inc
popf
shlb
add
xchg
das
mov
add
dec
jne
inc
pop
dec
xor
outsl
mul
add
mov
cwtl
bound
mov
in
int3
adc
loope
jae
mov
stos
movsl
or
test
sti
mov
fiadds
ffree
add
xor
sub
xor
aam
add
lods
in
push
aas
push
adc
push
pop
ds
or
lret
fwait
cmp
jmp
lahf
popa
pop
adc
mov
xor
loop
mov
pop
lret
es
stc
mov
cmpb
test
xor
sarl
cld
mov
or
loope
sbb
inc
ljmp
cmp
nop
add
inc
mov
mov
lea
pop
loop
push
jmp
dec
add
iret
es
aaa
in
and
push
pop
lret
cmc
in
jno
maxps
pop
and
pop
jmp
push
daa
cmpsl
mov
les
jbe
in
mov
xor
or
and
into
sti
mov
in
insl
mov
decb
clc
rcr
push
and
iret
cmc
or
insl
leave
cmpb
mov
mov
sub
or
ljmp
in
add
pop
mov
cld
mov
mov
roll
inc
jns
vpunpcklbw
insl
imul
not
les
jb
imul
mov
mov
in
imul
dec
and
adc
jb
adc
ret
cld
xor
idivb
mov
fmull
ret
fistl
cmpsb
imul
push
jmp
popf
inc
xchg
jbe
sbbl
sub
adc
jl
mov
lret
ljmp
xor
sbb
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
ja
dec
lret
jo
jle
jo
adc
xorl
dec
icebp
mov
enter
or
mov
ds
rolb
lahf
stos
dec
ja
jmp
enter
loopne
icebp
cmpsl
in
sub
and
negb
aad
mov
insb
mov
mov
adc
mov
jns
sarl
push
sub
pop
popf
loop
pop
test
aaa
inc
scas
cmp
jecxz
cmc
mov
xor
push
jl
and
adc
fstpt
dec
lods
jo
add
pushf
aaa
sbb
xchg
cmp
sub
add
mov
repnz
xchg
jp
lcall
int3
lds
sbb
loopne
insl
pushf
repnz
inc
imul
mov
pop
and
xorl
loope
cmp
lcall
popa
inc
adc
sbb
jae
and
xor
dec
add
inc
add
mov
dec
and
push
sub
bound
mov
cmp
mov
arpl
push
rclb
push
sbb
aaa
add
sbb
rcll
pop
and
bound
fsubrl
xor
addb
adc
cltd
mov
fsubl
ret
sbb
jecxz
icebp
pop
daa
shll
scas
loope
pusha
adc
jg
sub
inc
fcomps
and
mov
dec
adc
and
jge
mov
enter
or
mov
push
cmp
loopne
xchg
cltd
xchg
and
pop
sbb
cltd
mov
push
pop
es
jno
jle
mov
mov
push
movsb
or
sub
cmp
and
cmp
mov
cmc
or
xchg
push
add
fiaddl
pop
nop
fcoml
divl
xchg
mov
sbb
xor
cmpsb
js
sbb
insb
xchg
int3
mov
or
data16
jmp
jae
ds
sub
lods
push
clc
ret
xor
icebp
and
jl
pop
ss
and
iret
and
out
cmc
repnz
mov
or
dec
push
jg
and
ror
inc
fs
xchg
aaa
xor
mov
lea
inc
cwtl
into
lret
mov
imul
jns
xor
jb
and
js
cmpxchg
mov
sbb
bound
add
add
jg
xor
fcomps
bound
cmpsl
repz
inc
mov
pop
cmp
rolb
jge
nop
cmp
mov
pop
ljmp
xchg
push
pop
inc
adc
fdiv
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
jns
adc
jo
jle
jo
je
test
inc
jg
repz
repz
adc
repz
cmp
lds
mov
in
movsl
dec
pushf
out
push
mov
pop
sub
or
mov
and
sub
fwait
pushf
mov
pop
add
jnp
stos
push
dec
lods
imul
cmp
inc
insl
cmp
ret
call
pop
dec
mov
mov
jecxz
and
fs
cld
adc
push
sub
xchg
add
in
stos
outsb
cmp
mov
fsubs
fwait
jp
pop
sub
jbe
jns
fisubl
std
gs
mov
imul
lock
or
pop
cwtl
jo
fsub
imul
sahf
jno
xlat
dec
mov
sub
inc
add
ja
lcall
xchg
and
mov
stos
and
fists
inc
push
jge
xor
notl
inc
pop
xor
aas
int3
adc
cltd
inc
add
mov
push
jno
lret
sbb
cwtl
push
fwait
mov
or
repnz
gs
sub
orl
cmpsb
fs
sub
mov
mov
divb
insl
dec
pop
js
aaa
int
xchg
test
xorb
subl
rolb
clc
call
xchg
cld
add
or
jbe
sti
aam
sub
mov
movsl
rolb
jae
sub
lock
mov
and
call
arpl
sbb
xchg
out
xor
cmp
cli
or
out
jmp
std
pop
mov
popf
jecxz
rol
pop
mov
enter
xchg
sbb
test
jno
lret
xorb
jbe
aad
push
inc
pusha
sbb
cmp
fistl
sub
daa
inc
repz
mov
dec
sahf
out
push
mov
xchg
ja
mov
ret
mov
les
incl
inc
xchg
clc
movsb
adc
out
into
rcrl
sarl
mov
out
mov
mov
insb
jnp
and
jecxz
out
ja
loop
xor
mov
and
sti
stos
mov
adc
pop
mov
jns
adcb
add
lret
add
mov
inc
pop
popf
and
adc
imul
jno
pop
mov
icebp
lret
lret
js
mov
and
xlat
mov
fildl
pushf
fdivrs
lcall
cmp
call
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
int3
icebp
sbbl
mov
mov
out
call
mov
xlat
xor
sti
int3
inc
fcoml
adc
cli
std
inc
cld
inc
pop
cmp
fistl
in
pop
test
cmc
xchg
in
scas
mov
in
jbe
mov
orb
out
adc
decl
cli
test
xchg
xchg
fstp
nop
mov
inc
sbb
nop
add
pop
and
cmp
push
and
jno
ret
jecxz
in
mul
outsl
xchg
jo
inc
and
mov
ret
insb
jmp
xchg
rclb
and
mov
and
xchg
mov
pop
mov
push
xchg
push
test
inc
mov
out
xor
out
add
pop
pusha
sub
lret
mov
dec
fucomip
and
outsb
ja
pop
add
and
cmp
cmp
shll
fwait
dec
out
mov
pop
mov
popa
daa
cld
orb
popa
in
or
pop
mov
push
je
insl
add
adc
shl
popa
lea
test
in
mov
mov
out
xlat
mov
ds
popf
scas
jns
add
or
test
xor
insl
jnp
aam
sarl
push
dec
scas
bound
and
inc
ds
mov
or
hlt
aaa
and
add
push
mov
xchg
mov
mov
push
dec
mov
sbb
or
lods
fildll
mov
xchg
into
into
ljmp
fxch
jle
sahf
ljmp
mov
mov
inc
mov
test
xor
incb
fmul
int3
test
push
icebp
or
inc
fcmovbe
aaa
rolb
icebp
mov
push
rcrl
sub
cli
push
aas
lret
shl
cmp
out
cs
sbb
out
push
iret
sub
jno
mov
enter
inc
jge
jbe
push
ficoms
lret
jmp
cli
mov
lea
xchg
ret
insl
push
dec
aaa
sti
cmove
ja
or
sbb
mov
imul
adc
xor
mov
mov
test
xchg
sbb
jnp
sahf
js
pop
sbb
pop
mov
add
mov
or
loopne
push
fsubr
test
push
sub
outsl
xchg
mov
fidivrs
outsl
jp
stos
je
iret
mov
add
pop
js
mov
cld
jns
insl
popf
cmp
stos
xor
xchg
jmp
cmc
std
fs
jno
mov
ret
data16
pop
jg
mov
call
mov
es
ret
lods
ljmp
fwait
addr16
add
pop
inc
aaa
or
movsl
orl
fwait
or
dec
push
add
stc
aaa
pop
in
insl
lret
mov
ret
cld
hlt
sub
int
dec
jmp
xor
and
dec
inc
repnz
jbe
insb
xlat
push
push
jcxz
sbb
mov
ret
inc
movsl
or
adc
jmp
mov
mov
pop
jmp
std
jg
pop
ret
or
in
test
adc
lret
adc
ss
mov
or
pop
push
in
es
xor
xor
std
dec
fwait
pop
dec
scas
mov
outsb
mov
fnstenv
enter
push
ret
cmpsl
leave
test
xchg
xchg
xchg
mov
pop
fld
loop
mov
hlt
pop
mov
sbb
rcrl
push
and
movnti
sbb
mov
sbb
iret
push
mov
xchg
stos
mov
adc
xchg
fbld
shlb
fwait
push
fsubrs
push
testl
test
loope
or
dec
fcompl
jp
inc
in
out
xlat
mov
mov
outsl
mov
das
mov
js
pop
push
jbe
in
inc
das
pop
xor
push
popa
mov
insb
xor
ja
lret
sti
dec
sbb
mov
adc
xchg
iret
shl
test
sbb
shlb
dec
push
lret
pusha
adc
fmuls
scas
rorl
enter
xchg
xor
das
xchg
cmpsb
xchg
xor
push
out
daa
push
mov
or
adc
mov
and
mov
outsl
js
scas
dec
and
mov
sbb
inc
lds
mov
sbb
scas
pop
test
lahf
dec
test
push
imul
xlat
mov
imul
insb
push
negl
inc
mov
adc
test
push
cmpsl
scas
push
stos
fbstp
jp
pop
mov
aam
sti
push
filds
xchg
cltd
mov
shlb
test
dec
aaa
fidivs
adc
jge
mov
rcll
ss
sbb
push
addr16
cmpsb
pusha
or
sbb
push
inc
es
push
add
les
int
inc
negb
lret
cmp
rorb
sub
dec
arpl
shrl
xchg
cmp
jb
inc
cld
rolb
in
inc
sti
push
jl
cmp
pop
sbb
push
stc
adc
test
and
dec
nop
je
dec
andb
jno
dec
cmpsl
push
lcall
add
add
push
loopne
outsb
outsb
mov
or
push
adc
mov
mov
sbb
mov
jns
push
dec
mov
pop
jb
iret
cmp
sub
cli
cmp
cmp
popf
xor
push
mov
into
ds
jecxz
lods
movsl
cltd
cli
xor
push
repnz
cwtl
xlat
cmp
fstl
inc
mov
in
nop
stc
mov
testl
push
daa
inc
or
jle
xchg
cmp
ja
stc
sub
cld
jo
loope
or
ljmp
cld
push
cmpsb
dec
popf
lret
es
mov
jbe
fisubrs
out
push
pop
dec
xor
loopne
imul
add
push
clc
out
add
adc
je
test
jge
js
sub
pop
jg
sahf
push
cmpsl
jle
iret
push
push
dec
mov
das
mov
jns
into
and
adc
push
xor
lcall
dec
cmp
inc
daa
daa
scas
mov
cmpsl
loope
fidivrl
dec
daa
js
leave
xlat
cld
push
bound
and
loop
imul
lret
aas
pop
pop
mov
mov
enter
xor
jns
imul
rcrb
adc
mov
mov
daa
out
mov
mov
fidivrs
xchg
lods
rcrb
or
rcll
xor
je
hlt
xchg
mov
pop
insb
test
and
xorb
jns
cmp
gs
jb
and
enter
mov
and
sub
loopne
lahf
cmp
sub
pop
sbb
pop
loopne
add
pusha
push
and
jge
mov
add
push
shlb
push
mov
outsl
jo
outsl
sbb
inc
mov
sbb
mov
inc
sbb
inc
aam
jne
mov
cli
adc
outsb
not
cmpsb
loop
adcb
and
xor
jno
es
cmpsb
jne
ljmp
lcall
test
out
or
and
bound
mov
cltd
mov
dec
icebp
bound
daa
jb
out
jmp
xchg
mov
dec
mov
adc
mov
sbb
out
xlat
pop
data16
mov
mov
pop
rclb
fmulp
jb
cmc
xchg
aam
or
rcrb
xchg
fsubs
push
popa
mov
adc
jbe
lods
jmp
ret
mov
in
push
enter
in
rolb
or
xchg
das
push
or
clc
pop
inc
mov
js
stos
orb
fidivl
and
lret
adcb
sti
jl
adc
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
pusha
push
sub
aaa
sbb
mov
lds
fidivrs
repnz
fidivl
stos
in
bound
xchg
push
pop
scas
mov
sbb
inc
ljmp
dec
cmp
stc
addl
rcr
mov
mov
wrmsr
xchg
int3
or
mov
inc
mov
fisubs
dec
je
fists
hlt
loopne
jmp
ficompl
jae
daa
movsl
pop
icebp
shrb
shl
shll
and
mov
addr16
cmc
dec
pusha
sub
mov
rorb
rorb
ljmp
xchg
js
adc
jge
repnz
jle
xor
loopne
xchg
fmull
xor
pop
mov
sti
stos
lods
cmp
sub
sahf
add
push
ljmp
movsl
mov
scas
xor
mov
sarl
adcb
mov
out
push
test
test
andl
repz
mov
adc
loopne
pop
subl
dec
jecxz
adc
fistpl
out
cs
cmp
xor
mov
lea
add
xor
mov
inc
adc
adcb
sbb
mov
or
sub
xchg
out
nop
int3
imul
mov
xor
inc
cmpsb
mov
cli
cmp
aas
cmp
mov
pop
mov
fimuls
cmpsl
and
icebp
mov
inc
sti
jmp
iret
js
cmp
int3
cmp
dec
xor
mov
aaa
push
fcmovne
fadds
lcall
and
adc
xor
jle
loope
daa
movsl
inc
leave
push
mov
sub
push
cmpsl
inc
cmp
pop
adc
pop
pop
and
lea
add
fcoms
mov
hlt
jmp
xchg
pop
shrb
rcrb
jae
dec
test
xor
xor
push
int3
dec
mov
dec
movsl
cmpb
mov
push
fsubr
inc
jg
fimuls
jp
test
test
mov
or
push
add
aaa
cmc
rorb
inc
pop
aaa
push
mov
daa
adc
ljmp
in
mov
sbb
iret
sarb
and
out
fdivs
lock
hlt
or
sub
cs
or
fldcw
sbb
xchg
mov
int3
ja
push
addr16
pop
aad
popa
lods
sbb
roll
clc
and
cli
adc
jge
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
and
cmp
jg
mov
aad
out
fdivs
test
lret
jns
hlt
movb
mov
jg
jo
cmp
cs
and
cmp
push
lcall
and
inc
mov
sarb
aas
shlb
xchg
ljmp
sub
or
xchg
xchg
sub
push
pop
rol
and
mov
ljmp
xchg
fstpl
popf
pop
and
pop
cmp
lods
in
into
subb
hlt
or
ss
pushf
fs
subb
mov
stos
add
mov
adc
call
out
addl
xor
into
cmc
jecxz
and
pop
icebp
stos
jmp
and
pop
add
sbb
ret
push
inc
int
ljmpw
rclb
push
inc
int
and
adc
inc
scas
test
cmpb
imul
lods
and
mov
xchg
dec
xchg
add
lods
mov
xchg
movb
jmp
imul
int
push
int
push
mov
add
jle
div
shrb
jle
mov
fisubl
dec
pop
push
int3
iret
incl
sub
push
jne
or
cmp
test
pop
sub
dec
lea
imul
fdivp
and
out
in
pop
aaa
pushf
adc
inc
andb
mov
shlb
in
jnp
and
inc
scas
add
dec
xor
cmp
mov
lods
insl
subps
out
mov
scas
lods
int3
mov
mov
ss
cmp
ljmp
in
clc
aad
xor
sbb
and
or
lahf
mov
fsubrl
fdivs
popf
data16
jmp
addl
loopne
outsl
fidivrl
jns
ss
imul
cmp
arpl
dec
cmp
popa
pop
sub
lahf
call
push
push
cmp
jae
mov
inc
xchg
pusha
mov
mov
dec
aad
fisubs
adc
negb
test
es
stos
in
in
jne
add
xor
call
sbb
mov
je
into
in
push
or
xchg
inc
jmp
and
mov
add
inc
lods
stos
std
shll
mov
cmp
fnstsw
xchg
mov
lods
pushf
xor
cs
call
xor
popa
jmp
pop
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
pop
cli
mov
jle
jo
and
sub
jb
cmpsb
sub
jae
xorl
outsl
or
in
mov
mov
addb
fwait
xor
pop
push
cmp
cmp
test
xchg
xorl
testl
xor
test
dec
push
or
cmpsl
cmpsb
gs
dec
xlat
adc
mov
sarl
cmp
lret
js
add
out
jne
mov
jae
lcall
js
push
cld
adc
mov
mov
into
cmp
out
xchg
pop
and
lock
or
push
movsb
pop
pop
movsl
stc
pusha
xchg
inc
xchg
inc
hlt
in
mov
test
jae
or
xchg
cmpsl
adc
ficomps
xchg
mov
fiaddl
es
pop
inc
scas
mov
sar
pop
xchg
sub
cmp
arpl
mov
es
popf
sahf
xor
sub
mov
xchg
andl
mov
mov
adc
idivb
jo
icebp
scas
add
out
loope
and
test
sbb
or
jecxz
cltd
sbb
and
test
mov
aaa
cld
or
fwait
divb
dec
pusha
in
bound
lds
and
sbbl
lods
cmp
sub
js
jne
fwait
pop
ds
cmp
mov
sbb
scas
and
aam
scas
in
push
mov
aam
cmc
das
inc
insl
jl
sbb
sbb
sub
pop
pop
movsl
xor
add
xchg
mov
jne
pop
mov
call
out
push
imul
pop
sub
dec
xlat
or
add
sub
popf
push
es
outsb
cld
jmp
mov
lret
inc
adc
push
ret
pop
add
cld
cmp
ret
inc
sbb
pop
sbb
mov
adc
gs
movsb
fdivrs
stos
mov
xor
push
adc
insl
fnstenv
mov
pusha
push
fwait
outsl
fldcw
mov
cmc
cwtl
xchg
adc
mov
jle
pop
js
add
or
daa
xor
xchg
pop
out
push
pop
out
cmpsb
hlt
fists
adc
movsb
sbb
outsb
pop
imul
in
jg
dec
xor
cmp
push
ljmp
sbb
bnd
sub
out
fdivrs
stos
rcll
mov
nop
call
dec
sub
mov
xchg
push
cmpl
cmp
test
imul
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
