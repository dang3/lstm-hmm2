push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
imul
jle
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
xor
sar
aam
out
std
rcr
clc
test
ljmp
shl
int
int3
fnstcw
ds
std
cmp
int3
cmp
fcmovne
fninit
and
out
test
fstp
in
cli
shl
idivb
in
icebp
in
xlat
cld
ret
fidivrl
repnz
push
in
xchg
lock
out
call
enter
std
test
test
cld
mov
orl
lret
call
hlt
cmp
into
cmp
loope
xchg
adcl
sarl
mul
iret
xlat
aam
aad
cld
ljmp
int
xchg
out
les
idivl
cmp
cld
call
sti
fiadds
fucomp
jmp
loop
out
xor
fdivrs
in
repnz
aam
iret
cli
xlat
xchg
clc
call
fxch
repz
mov
ljmp
in
out
loop
fsubrp
clc
add
cli
lret
lock
mov
in
clc
cmp
div
rcr
ror
shl
rcl
fnstcw
loope
icebp
leave
lock
lret
ljmp
std
fmul
xlat
sti
ljmp
mov
sti
xlat
xor
loope
loope
int
cmp
cmp
int3
stc
in
lret
ret
test
les
xchg
test
clc
xor
shl
stc
ds
sarl
ror
fcomip
aad
cmp
fcoms
mov
cmc
clc
aaa
jmp
loope
in
shl
into
fsubp
out
out
jmp
cli
mov
leave
int
cld
jmp
ret
hlt
into
fcomp
stc
dec
incl
mov
jmp
addl
rcl
cmp
stc
std
fidivrs
std
cmp
jecxz
fcmovu
mov
int
xchg
aad
in
xor
xor
jmp
leave
cmp
stc
jecxz
xchg
xlat
xlat
mov
icebp
xchg
jecxz
jecxz
call
cmc
shr
sbb
icebp
clc
fsqrt
std
test
mov
loop
mov
test
nop
test
sub
rol
call
incl
ljmp
into
in
sti
fisttpll
ret
aam
out
fcomi
iret
stc
repz
cmp
mov
orl
ret
out
aaa
xor
cmpb
rcr
mov
cld
icebp
ffree
fmulp
xor
ror
cli
fmul
shr
jmp
shl
clc
fdiv
xor
cmc
mov
cld
int
iret
loop
aam
out
ret
xor
cli
aad
leave
into
iret
fstpt
cmp
test
mov
out
adc
in
fcmovb
leave
lock
aaa
fucomi
test
xor
cmc
into
vpminsw
mov
xchg
mov
in
into
cmp
lret
test
into
frndint
add
aam
neg
fiadds
xor
aad
jecxz
fidivl
enter
cld
ret
aad
icebp
jmp
mov
int
jmp
xchg
cmc
in
in
out
lret
lret
rcl
hlt
fcom
xlat
rorl
int
orb
jmp
lret
cmc
out
loope
clc
stc
aad
in
mov
jecxz
mov
aam
xchg
lret
fsubr
repz
fdivrs
aam
idiv
fnstcw
xchg
addb
out
repnz
mov
lret
fdivl
into
out
loopne
aam
lret
cli
jecxz
repz
cli
loope
out
xchg
loopne
ret
cmc
out
rorb
shlb
add
clc
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
add
movsl
add
cmp
cmp
in
hlt
loop
rcl
sar
fmul
in
mov
mov
mov
nop
loopne
loopne
in
cmc
cmp
out
fst
iret
cmp
sarb
xor
jmp
loopne
xchg
xchg
in
loop
jmp
int3
int
xor
loope
repz
cld
mov
adcl
out
lret
ror
fdivl
stc
sti
shll
shl
out
rcl
lock
movl
rclb
ljmp
div
cmp
rcr
std
leave
ret
mov
icebp
lret
ljmp
rcr
xor
cmp
cmp
shl
test
enter
test
jmp
nop
shl
out
ss
cli
enter
loopne
fistpll
aas
loop
add
and
mov
rcl
aam
std
cmc
ror
fcomp
lret
test
rol
enter
movl
out
test
cmp
shl
cmpl
cli
neg
xchg
sti
sbb
mov
xor
ljmp
std
jmp
test
lret
mov
test
sti
out
xchg
out
les
jecxz
in
xor
aam
cmp
icebp
repnz
out
jecxz
stc
in
cli
cld
nop
lret
xchg
clc
xor
icebp
cmp
cli
iret
cmp
rolb
test
mov
fsubrp
out
ljmp
cmp
not
in
clc
ret
ret
enter
int
cmp
ljmp
xor
int
lret
stc
ret
shl
fdivrs
cmc
mov
std
loope
xchg
int
ret
in
ss
jmp
jmp
cli
jecxz
cmp
ljmp
jmp
sti
xor
std
leave
sarb
repnz
cld
int
aas
jmp
ret
xchg
test
in
xor
jmp
iret
loopne
div
xlat
cmc
lret
jecxz
out
mov
xchg
cld
shl
shl
fcmovbe
aam
xlat
out
int3
sarl
repz
out
jmp
cld
lock
sti
addb
neg
xor
out
in
test
cmp
lret
xchg
out
loop
loope
jmp
xchg
ss
xlat
sti
repnz
into
repz
idiv
test
orl
xlat
xor
xor
sar
fsubrp
cmp
test
not
ret
stc
repnz
mov
xchg
call
fsubr
shl
in
int
sub
shl
shl
aam
jecxz
ret
clc
mov
loope
xchg
out
shr
cmp
out
in
repz
cmp
cmp
jecxz
clc
xchg
xchg
ljmp
repnz
ret
stc
fcmovnu
loope
xlat
xchg
out
incb
leave
xor
hlt
repz
in
lret
sar
out
out
iret
sti
cmp
mov
call
int3
aam
out
ljmp
idiv
leave
iret
loopne
cmp
ret
fadd
xor
in
sti
xchg
loopne
rcll
aaa
fstpt
cmp
jecxz
cmp
jecxz
jmp
and
xchg
lds
loope
hlt
cmp
lret
shl
fiaddl
mov
xchg
int
xor
ljmp
fdivrp
iret
xlat
idivl
test
fsub
cld
aas
xchg
std
cld
out
xchg
lea
call
in
idivb
std
std
fucomi
rcr
in
testl
aaa
in
into
out
out
jmp
sbb
int3
test
in
out
lret
iret
jecxz
lock
cs
stc
into
cmp
cmp
xlat
icebp
jmp
clc
loope
nop
xchg
lret
loope
in
clc
cli
ljmp
cmp
into
xlat
cmp
lock
ret
cld
testl
hlt
lret
repz
aam
cli
aas
cmp
in
icebp
std
cmc
ret
mov
enter
lock
cmc
out
sub
ret
xor
into
fcomp
loop
aam
cld
lret
out
mov
lret
repnz
in
iret
neg
in
cmp
lret
icebp
shl
jmp
cli
test
mov
sbb
jecxz
mov
xor
aad
in
rcr
into
into
sarb
cld
cmp
in
in
out
iret
and
aad
cmc
xor
cli
out
cmp
fcmove
aad
add
mov
fadd
leave
int
bound
inc
aad
pop
jmp
int3
pop
jle
movsl
add
out
xchg
aam
jecxz
std
out
out
xchg
xchg
mul
in
jmp
dec
enter
cmc
loop
cmc
fildl
mov
out
xchg
call
shlb
repnz
icebp
aaa
cmp
rcl
fldl
lret
icebp
in
repz
xchg
loop
lds
rcl
int3
xlat
pushl
repnz
out
cmc
fiadds
cld
loop
test
xchg
xorl
int3
stc
shr
into
cmp
fiaddl
ret
test
in
ret
into
out
decl
sub
icebp
sti
jmp
cmc
loop
rcr
ret
jecxz
test
test
in
shl
ljmp
sub
lock
lret
cli
fsub
out
jmp
jmp
jmp
shl
icebp
roll
cmp
stc
xchg
rolb
das
int
shr
fadd
repnz
out
shl
out
loope
lret
or
jecxz
mov
jmp
sti
fmulp
div
rcr
fucomi
shl
call
xor
out
out
incl
fsub
fcmove
out
divb
lret
ror
shl
cmp
cld
sti
cli
movb
in
int3
loopne
repz
out
hlt
cmp
leave
hlt
cld
into
ret
hlt
icebp
xlat
mov
int
into
call
int3
in
aad
in
int3
iret
ret
xchg
test
fcmovnbe
xlat
decb
lea
xor
into
fistpll
loope
xor
xlat
loop
rcr
out
fcmovu
xchg
jecxz
repnz
repnz
out
mul
out
icebp
ljmp
fcmovbe
aad
ljmp
fmuls
xchg
xor
cmp
clc
repz
repz
in
stc
repz
repz
ds
fsub
jmp
mov
iret
in
out
lret
sti
div
fcompp
xlat
out
aam
aad
jecxz
repnz
loopne
out
fcmovnb
orl
lds
int
cmp
loopne
sbb
loopne
loop
out
mov
push
int
lds
cld
enter
out
iret
std
loop
fucom
jecxz
xchg
lret
addb
shll
icebp
cmc
ljmp
les
int3
neg
jmp
adcb
repz
aam
hlt
int
fidivrs
clc
into
xchg
in
cli
test
lock
mov
xor
out
stc
fnstsw
iret
ds
xlat
repnz
icebp
sarl
enter
xchg
jecxz
jmp
adcl
fidivl
std
loopne
cmp
fcomi
sti
loope
ljmp
out
in
mov
xlat
enter
shr
out
fmul
repz
cmc
cmpl
mov
sti
xchg
clc
icebp
out
sti
jecxz
jmp
out
in
cmp
int3
ret
fucom
std
add
imul
test
mov
into
lret
inc
loope
repz
test
cmp
stc
fcmovu
lret
decl
in
ss
xor
cmc
stc
fldz
aas
in
xor
jecxz
ljmp
incl
repnz
out
xor
fld1
lock
cmp
out
out
jecxz
out
test
lret
fsubrp
shl
into
cmc
ffree
dec
into
neg
ret
ret
mov
xchg
fstp
dec
out
int3
rclb
xor
clc
hlt
enter
test
rcr
xlat
loop
clc
lret
in
in
into
icebp
popl
int
iret
fmul
out
call
repz
sar
std
mov
lds
ljmp
in
sti
testb
loop
shl
ljmp
fmull
aad
fsub
call
loope
roll
xchg
std
in
out
mov
repz
aad
in
leave
sbb
fstp
sar
cld
ror
cmc
out
stc
loope
cmp
test
std
sar
imul
in
sti
std
loopne
cmp
ret
xchg
sti
cld
loop
shl
mov
jmp
aaa
leave
into
aam
cmc
test
rcr
vpaddsb
in
jmp
in
div
xor
fdiv
sti
out
int3
ds
xlat
aam
addb
int
clc
enter
call
cmp
cli
hlt
sti
aam
sar
addl
cld
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
and
movsl
add
in
fprem
test
nop
fsubr
out
xor
repnz
cli
fmul
test
sar
std
call
jmp
out
lret
imulb
xor
jmp
cmp
in
repz
stc
cmp
out
addb
rclb
jmp
lret
fucom
fcmove
clc
fcmovbe
call
enter
rorl
cli
neg
xor
iret
fucomi
cmp
sbb
in
ljmp
sub
aaa
int3
shl
cmp
std
int
cmp
in
enter
ret
fimull
hlt
rclb
loop
fcmovbe
out
in
add
faddl
cli
xlat
mov
incl
out
idiv
rcl
int
jmp
ljmp
std
aad
not
mov
test
loopne
mov
in
xor
xor
fucom
sbb
rcl
out
ret
fsts
hlt
ror
loope
sub
in
divl
neg
idivb
fcmovne
ret
in
repz
test
iret
mov
fidivrl
cmc
lock
sti
in
xorl
ret
fsubr
icebp
lea
in
lret
aaa
cmc
aam
xor
rcl
sbb
ret
sub
ljmp
popl
enter
iret
ds
cld
adc
ret
test
mov
ffree
out
jecxz
jecxz
in
out
hlt
xor
repnz
in
sti
cli
repz
addl
cli
mov
std
loope
hlt
jecxz
lret
hlt
shl
into
aaa
fcmove
and
repnz
loopne
sub
fcos
lock
call
out
or
test
lret
fsubr
cmp
stc
fsubrp
out
cmc
or
cmc
xchg
enter
lea
in
lret
rcl
fcomi
sarb
aad
xchg
les
filds
in
ret
enter
xlat
cmc
aas
aas
cmp
jecxz
cmp
fcomp
into
xchg
addb
idiv
out
xor
in
idivl
std
jecxz
sti
fidivrs
in
enter
xchg
mov
repz
lock
out
out
cld
rcl
iret
cmp
out
xchg
jmp
hlt
shr
cs
std
out
cmc
div
not
or
fildl
into
add
mov
iret
in
fsub
in
aas
into
ljmp
xor
inc
mov
cld
loopne
test
in
hlt
int
rol
aad
xor
aas
loopne
jmp
aam
icebp
in
in
out
jmp
cld
cld
int
xor
lret
aaa
lock
aas
into
aad
loope
fcmovu
sti
mov
out
std
out
into
int3
xor
cmp
int
dec
sarb
std
xlat
mov
mul
in
iret
mov
jmp
out
enter
mul
cmp
stc
cld
cli
adc
ds
push
loope
aad
ljmp
loope
loopne
cmp
clc
aad
dec
cli
fadd
inc
in
call
leave
loop
in
out
out
jmp
sub
ljmp
int
test
jmp
sti
loopne
mov
mov
shr
xor
sar
fdivl
aad
rol
in
loope
icebp
xchg
loope
adcl
ljmp
fdivp
loop
sbb
sti
rcl
lret
les
cmc
orb
cmc
stc
cmp
jmp
cmp
in
rol
mov
aas
filds
repnz
test
cli
lret
xlat
xor
sti
rcl
rol
cmc
jecxz
in
not
in
jmp
fcoml
out
out
cli
fnstcw
cld
repz
icebp
out
aam
enter
faddp
in
nop
sti
in
fsubr
mov
mov
hlt
stc
xor
loopne
lret
shl
in
fildl
cld
fucomp
test
rolb
cmc
ret
loop
repz
fsubrp
out
xlat
call
ret
testl
rol
icebp
std
test
out
out
out
rcl
cld
call
shl
hlt
into
shl
test
mov
icebp
test
in
xchg
test
ret
jmp
or
int3
rcr
repz
ret
loope
test
sti
call
sub
int
into
enter
ds
xor
add
lret
fxch
leave
out
lret
mov
jmp
int3
rcl
aad
int3
call
xchg
lcall
jle
mov
div
out
out
cmp
clc
into
cmp
ret
fisttps
icebp
jmp
iret
int
cs
shl
xor
cld
leave
rcr
iret
shl
testb
aas
sub
xchg
jecxz
cmp
sar
repnz
aad
loopne
icebp
fadd
fcmovbe
jecxz
loope
in
iret
fmul
fstl
enter
fcmovb
cmp
fnclex
repz
repz
sub
lret
fcmove
cmp
cmp
repz
ds
cmp
loopne
fisttps
iret
loope
sar
out
call
loope
divl
test
roll
fmull
mov
notb
int
in
ljmp
clc
xlat
incl
mov
iret
ljmp
clc
jmp
aam
into
ret
iret
aam
incl
lea
xchg
das
fxch
xlat
cmp
out
aaa
jmp
rol
in
leave
cmc
fsubr
lea
cs
ret
fcmovnbe
sarl
std
iret
fdivr
std
enter
add
cld
loopne
ljmp
in
test
sarb
rcr
fdiv
xchg
fsubrp
fsubrp
mov
in
lret
lock
fnstsw
iret
cmc
aad
ret
fcmove
enter
out
addl
cmc
clc
in
enter
int
sbb
adc
aad
jmp
stc
loope
cld
addl
xor
cmp
not
cld
cmc
ret
xchg
cmp
stc
test
mov
jmp
in
sub
rcl
stc
xor
lret
aas
rol
ss
fucom
in
ljmp
mov
in
call
fdivp
cmp
in
inc
jmp
neg
loopne
lret
iret
mov
loope
cmp
cmp
xor
cmp
ret
xor
mov
clc
fxch
fmull
mov
out
leave
out
repnz
cmc
ds
sti
loopne
in
adcb
xor
int
out
addb
hlt
testb
fucomip
addl
aad
jmp
cmpb
xlat
stc
out
mov
clc
loopne
mov
shlb
aaa
shl
in
iret
out
lock
fidivrl
fsub
testb
jmp
cli
in
call
out
incb
out
test
orb
loopne
test
out
in
xor
bnd
icebp
shl
leave
test
mov
fiaddl
lret
lock
icebp
loopne
testb
fsubr
mov
xchg
xlat
shr
xor
call
test
aam
jecxz
out
mov
mov
or
ret
imull
neg
fadds
shl
in
fsubp
fsincos
test
xorl
out
ss
iret
cmp
stc
repz
fistpll
aas
enter
loope
int
or
fucomp
shr
aam
cmc
jmp
cli
rcl
fdivrs
ret
clc
out
repz
mov
cld
ljmp
lock
fcomi
xlat
jmp
fcmovnbe
in
ret
rol
loopne
mov
repz
int3
into
fld1
leave
fdivrs
repnz
lock
fcmovnb
idiv
jmp
in
lret
xchg
cmc
xor
fsub
ljmp
out
add
testb
xchg
xorb
hlt
in
cmp
ds
int
aaa
fcomp
xlat
ror
mov
std
leave
ljmp
jmp
into
xor
clc
in
sar
ds
test
mov
out
xchg
loope
into
in
rcl
cld
int3
repz
cmp
fildl
idiv
in
nop
mov
out
loopne
in
jmp
xlat
in
fnstsw
aam
loop
mov
jecxz
out
lret
xchg
in
call
test
iret
fadds
test
cli
mov
mov
loopne
sub
test
aaa
into
into
loopne
loope
lock
adc
xchg
xchg
repnz
shr
movl
jmp
int3
rcl
fstp
fldt
addr16
rcll
jle
icebp
sar
out
hlt
aaa
in
out
shlb
aam
std
in
mov
xchg
mov
mov
lret
repz
stc
int3
loopne
int3
cli
repnz
loope
test
loope
in
test
into
int3
loop
iret
in
fsubr
stc
cmp
roll
clc
repz
testb
repnz
lock
iret
hlt
in
clc
sarb
cmp
repz
aas
stc
jmp
cld
fsub
fistl
hlt
cmc
sar
jmp
loopne
ds
std
cmp
loope
enter
fcmovne
in
sar
jmp
out
fcmove
sar
cmp
into
int
testb
loop
sti
mov
out
lret
iret
mov
cmc
cld
out
iret
into
jmp
aas
jecxz
lock
rcl
in
testb
shl
loopne
mov
xor
cli
out
jmp
sar
ss
out
fmull
mov
iret
hlt
mov
ss
aam
lret
cmp
into
shr
sbb
ret
xlat
stc
ret
fcmovu
jmp
out
adcb
fidivrl
jmp
lret
aad
div
cmp
loope
jecxz
in
test
mov
loope
ror
ss
out
enter
rcr
in
aam
jmp
in
mov
loopne
cmp
cld
hlt
lret
fmulp
xor
and
ret
jmp
xchg
into
sti
cs
cmp
icebp
fcmovnb
out
ds
cld
call
xchg
fisttpl
aaa
out
das
not
in
aad
cli
cmp
test
fsubrp
std
jmp
iret
xchg
test
ret
call
shl
cmp
cld
fdivr
loopne
jmp
clc
in
xchg
out
in
rcr
rcl
cli
xor
cmp
ror
cmp
aad
int
in
add
neg
rolb
int
xlat
xlat
out
leave
sti
repnz
rol
repz
jmp
cmc
fxch
test
leave
lds
xlat
loop
stc
aaa
hlt
lock
cmp
in
ss
les
imul
leave
in
in
ljmp
out
call
div
sti
fdiv
shl
cld
enter
call
jmp
cmp
lret
call
aas
aad
sti
xor
in
shr
in
out
int3
fsub
mov
rclb
idiv
cmp
cli
loop
frndint
fsubp
mov
and
into
in
std
test
xor
ror
cld
sbb
ret
aam
rol
cli
cli
fsubr
out
mov
shl
loope
nop
fdiv
cmp
xor
cmp
aaa
lret
or
repnz
enter
loop
loope
sar
loop
sub
fldz
stc
cli
das
fldlg2
lret
repnz
aad
shr
mov
jmp
jecxz
jecxz
repnz
in
repnz
cmc
in
in
fcmovu
call
out
test
mov
test
test
stc
fmul
xchg
popl
out
iret
into
in
aas
fcompp
aas
into
testl
nop
mov
test
clc
jmp
out
in
aas
cmp
shl
add
cld
ret
aad
ret
int3
ljmp
mov
rol
jmp
std
in
aad
xchg
adc
ljmp
repz
out
ror
fsub
xor
fdivp
rcl
fdivrs
jecxz
fildl
int3
xchg
int3
shr
fldl2e
lock
repnz
fmul
loop
xlat
std
jecxz
cld
stc
and
and
and
xchg
test
int
loop
div
lret
shr
fsubr
and
addl
nop
xchg
jmp
out
ljmp
ror
loopne
repz
dec
div
ljmp
lret
loope
mov
jmp
lret
cmp
cmp
clc
in
shl
fdiv
xchg
clc
out
std
int
int
aam
xor
ror
in
shr
ror
lret
into
sti
rcl
cli
frstpm(287
sbb
decb
sar
ss
repnz
shl
mul
xlat
jmp
loope
lret
out
push
fidivs
fcom
mul
icebp
cmp
in
cld
cld
rol
xrelease
mov
std
fcmove
test
cmc
ret
mul
cmp
int
clc
repnz
cmp
repnz
idiv
fdivr
jecxz
mov
aaa
stc
ret
iret
lock
cmp
loopne
inc
in
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
cmp
and
jle
movsl
add
fucomi
fdiv
out
and
xor
fdivrp
in
ljmp
int
int3
cmp
out
in
addb
or
in
shr
lret
ljmp
bnd
out
int3
stc
in
rol
clc
aad
xchg
lock
xchg
jmp
lock
cmp
aad
cmp
into
ret
not
fucom
test
sbb
fucom
out
loop
out
ret
aam
aam
idiv
xor
xlat
fcmovb
sar
cld
clc
call
fmul
sub
xchg
jmp
lret
loop
clc
sti
in
lock
aaa
shl
test
xchg
enter
fucom
mov
int
nop
in
aam
icebp
aaa
fcmove
fsincos
loope
ds
fiadds
enter
movb
out
in
loop
xlat
out
icebp
aaa
cmp
jmp
cmc
iret
stc
jmp
mov
call
xor
ror
loopne
fucom
loopne
loope
test
leave
fmul
jmp
into
xchg
lret
lds
hlt
stc
clc
lock
jecxz
aas
loopne
fcom
aam
lret
clc
in
test
fucomi
mov
shl
xor
cmp
xor
leave
jecxz
cmp
ret
rcl
cmc
test
xchg
lea
fsubrs
cmp
iret
idivb
ss
in
test
test
in
call
out
fcmove
lock
xchg
cmc
xor
lret
sar
loopne
loope
sar
ret
rcl
sub
out
lret
mov
out
out
cs
vpmuludq
in
fcmovbe
repnz
idiv
and
out
loope
xchg
out
call
hlt
fdivp
repz
cli
int
rolb
xchg
in
idiv
mov
leave
iret
icebp
shl
stc
aaa
fidivl
out
fcom
aas
sub
ljmp
in
call
cmc
call
cmp
fdivr
addl
add
test
sti
fdiv
fdivrs
aas
int
mul
loop
ljmp
icebp
mov
fisttpll
repz
stc
fst
cld
sbb
shr
xlat
ret
enter
cli
or
int
mul
jmp
in
fsub
call
rolb
aas
mov
call
out
out
divl
call
lret
xlat
sti
fprem
icebp
imul
std
rol
out
mov
xchg
xchg
in
ror
enter
faddp
cmp
cli
idiv
std
cli
aas
jecxz
fcoms
xchg
into
hlt
out
xor
into
lret
cli
clc
cmc
rolb
cmc
lret
cld
lret
test
fdivr
call
leave
in
call
call
stc
cmp
test
fcmovb
mov
in
fisttpll
fsubp
repnz
shl
aam
in
ror
hlt
icebp
cmc
aad
and
movl
test
orl
cmp
sti
stc
sub
sar
adc
testl
ss
in
sub
std
cmp
fdivr
sar
enter
leave
clc
ljmp
xchg
jmp
ds
fnstsw
in
cmp
adc
jmp
jmp
shl
aam
in
in
out
out
iret
fcmovu
in
cmp
test
jmp
out
sti
enter
cld
xchg
int3
xor
icebp
iret
fcmovnu
xlat
leave
aam
sub
cmp
shr
cmpb
rorl
rcl
shr
out
shl
rol
fdivr
sar
incb
clc
nop
call
repnz
cli
shl
into
cmp
xor
icebp
xlat
lds
idiv
call
fdivr
aam
rol
enter
ljmp
sar
std
xchg
fdivrs
mov
fcmovne
fucomp
mov
out
xor
cmp
in
mov
ret
sti
loopne
loope
in
out
shl
int3
clc
int3
cld
lret
cld
lock
repz
aas
ret
test
ret
out
clc
in
jmp
jmp
fdivrp
std
out
push
in
loop
cli
ffreep
out
test
out
iret
hlt
call
out
lret
stc
fcomp
shl
fadd
mov
repnz
fdivrp
out
mov
out
or
aad
enter
sti
into
aad
in
sbb
cmp
jmp
ret
aas
ret
aad
aad
mov
push
push
jle
movsl
add
cmp
ljmp
in
xchg
cli
enter
out
repnz
lock
orl
mov
jmp
mov
shr
cmc
in
in
ret
int
into
fsubrp
cmp
cmp
ror
sti
shl
sub
fsubrp
addb
jecxz
idiv
test
std
fdiv
ret
aad
test
cli
call
test
repz
fdiv
fcmovnbe
ss
hlt
int3
ret
fstp
fldl
mov
iret
shl
int3
cld
iret
cld
idivb
ret
lock
loope
hlt
xchg
test
fisttpll
rcl
shl
int3
aaa
das
enter
divl
ds
testb
mov
lret
hlt
mov
loopne
into
jmp
fnstsw
std
rcr
shl
in
fnstsw
cld
mov
int3
in
decb
clc
ss
rcl
stc
ret
out
fcomip
xchg
mov
in
loopne
out
cld
leave
out
fsubr
repnz
ret
aam
xor
jmp
out
loop
sbb
int3
fcomp
stc
int
fucomip
iret
fcmovu
sti
shl
test
fucomp
lock
loop
into
rcll
in
cmp
std
in
cmp
cld
jmp
enter
mov
xor
out
sarb
test
out
aam
icebp
faddp
ret
xchg
in
fcoml
cmc
repz
jmp
cld
fcom
int
cli
ffree
cli
call
into
icebp
nop
hlt
mov
xchg
int3
stc
repz
aaa
in
std
fsub
in
xchg
aam
sbb
sti
ljmp
lock
aad
fdiv
sti
in
enter
sbb
ds
aam
ret
in
fisttpl
cmc
ljmp
ljmp
jecxz
and
shr
fstp
mul
cli
jmp
test
in
int
cmp
cmp
xor
sbb
ret
std
loop
std
out
jecxz
in
aad
xor
into
xor
orl
dec
in
cmc
xor
in
sub
xor
lret
idivb
fcmovu
out
vpmullw
xchg
into
fcomip
enter
int3
lock
clc
fdiv
mul
mov
cmp
loopne
into
call
out
jmp
in
lock
faddl
les
out
ljmp
jmp
cmc
lret
lret
call
addl
xchg
call
mov
repz
mov
lock
into
out
neg
ljmp
loopne
sti
xchg
repz
jmp
adc
lret
mov
in
in
test
loop
int3
sti
idivl
ds
ljmp
std
xchg
aam
ret
xor
leave
das
iret
repz
in
out
int
cmp
mov
cld
cli
cli
fists
aam
xor
lock
xor
lock
xchg
aad
or
loop
jmp
jmp
in
divb
aaa
dec
leave
fcomp
lret
in
cli
enter
jecxz
incl
xchg
test
fdivrl
lret
inc
xlat
in
adc
fsubp
jmp
cld
in
jmp
orb
cmp
ds
leave
jmp
shl
xlat
mov
loope
jmp
shr
jmp
in
out
xlat
xor
ror
cmp
shl
sti
filds
in
test
jecxz
mov
mov
repz
mul
into
enter
lock
iret
aaa
cmpl
clc
sar
ret
lret
cli
fcmovu
lock
fdecstp
xor
cmp
loop
fcmovne
clc
repz
ljmp
loope
xchg
hlt
out
cli
into
repnz
call
call
out
in
mul
test
jmp
call
sti
jmp
loope
repz
icebp
aam
ss
loopne
fdivr
into
lock
test
hlt
ljmp
test
adcb
sub
out
rcr
int3
lock
fbstp
fdivp
rol
fadds
rcl
mov
xor
clc
cmp
lret
cmp
rol
out
loope
shl
out
mov
out
sar
out
faddl
loop
xor
cmp
cld
lock
fcomi
test
lret
int3
test
add
jmp
rol
ror
rcr
fcmovnu
mov
adc
int
and
movsl
add
jmp
in
cmp
out
aaa
int3
sarl
int
repnz
lret
jecxz
fmulp
test
out
jmp
clc
sti
jmp
in
jmp
aaa
fdivs
lret
fcmovu
fcomp
loope
loope
fucomp
loop
leave
rcr
mov
shll
les
repz
fmul
xchg
mov
out
loopne
jmp
shl
aam
bnd
sti
test
call
mov
out
xchg
xchg
ss
fdivr
cmp
icebp
xor
cmp
test
adc
xchg
mul
jmp
aad
into
jmp
cmp
rol
cmp
add
xlat
out
fneni(8087
out
rclb
lret
cmp
cmp
lret
rcl
rolb
mov
sub
test
shl
call
cmp
fcmovbe
repz
int3
iret
aam
testl
leave
shr
hlt
orb
fdivl
repz
sbb
fsin
movb
cld
in
xchg
leave
ss
out
xor
ljmp
icebp
clc
in
idiv
in
int3
fsubrp
into
roll
xor
in
cmp
sar
sti
test
in
leave
fucom
loop
loopne
xor
cmc
aam
xor
sar
out
iret
icebp
sar
mov
fdivr
std
fists
xlat
lds
divl
aam
cmp
aaa
shl
xchg
sub
in
iret
jmp
clc
fmulp
cld
cmp
cli
xacquire
stc
rolb
xchg
into
rorb
out
ret
out
iret
fcomip
fstpt
jecxz
aad
flds
jecxz
mov
out
call
xor
out
sbb
stc
ret
mov
sub
lret
out
in
sar
xchg
jmp
xor
shr
sti
ljmp
sti
xchg
lret
leave
fxch
iret
test
repz
ror
hlt
out
xor
call
repnz
sub
ret
in
jmp
fucom
iret
test
icebp
mov
shlb
fdiv
int
repz
aas
cmp
shr
shl
out
ret
loopne
mov
int3
loopne
loop
iret
in
int3
shl
aam
fxtract
aam
hlt
jmp
loop
ds
jmp
mov
fstl
xchg
xorl
xor
lock
iret
cmp
in
cmp
xlat
rcr
fadds
sti
mov
xchg
jecxz
aam
icebp
xor
fcos
aas
fldl
cld
ds
enter
stc
incl
test
in
icebp
out
in
lock
aam
jecxz
std
mov
adc
test
idiv
repz
lock
ror
fiadds
test
enter
mov
int
xor
xor
in
in
jmp
cmp
cmc
imul
and
xlat
loop
jmp
shlb
xor
cmp
lock
adc
ret
rorl
fcmovnu
call
xor
xor
cli
sarl
cli
flds
test
imul
icebp
out
incl
call
sti
aam
roll
call
int3
clc
xchg
out
stc
call
jmp
fcmovnbe
fucomi
icebp
xchg
testb
fimuls
xchg
jmp
cmp
sti
out
cmp
loop
aad
ret
ljmp
xchg
xchg
xchg
shlb
xor
xor
faddp
shl
cmp
fmul
shl
hlt
ljmp
nop
icebp
in
in
cmp
lret
sar
cmp
repnz
int3
shl
sar
ds
ret
out
xchg
stc
out
call
xchg
repz
fcmovbe
lock
or
fiaddl
ret
mov
mov
shr
repz
das
int
idiv
fidivrl
lret
test
cli
xchg
aad
flds
orl
test
shl
out
adc
fidivrl
test
xchg
xchg
and
mov
loopne
loopne
hlt
repz
aaa
enter
add
rcl
roll
fsubrp
in
std
out
sti
xchg
xchg
out
ror
int
call
std
loop
out
repz
test
out
mov
mov
jmp
ret
leave
aad
fcmovnu
sub
stos
leave
or
jle
movsl
add
cmc
lock
icebp
sub
in
repnz
mov
ret
leave
stc
std
jmp
fcmovbe
mov
jmp
into
cmp
into
leave
lret
clc
int
inc
xlat
loope
cmp
loopne
fildl
xchg
in
bnd
xor
call
out
lret
test
in
out
fcmove
leave
enter
rol
xor
jecxz
into
call
sar
test
rolb
test
in
mov
mov
les
lret
xlat
xor
int
lock
fsubr
cli
jmp
leave
leave
mov
into
shl
nop
lea
cmc
cmp
in
jmp
shr
div
loopne
xlat
bnd
int3
fcom
xchg
loopne
clc
iret
int3
cmp
aam
ror
xlat
hlt
adc
fsubr
in
out
std
loope
std
in
xchg
lock
icebp
xor
shlb
hlt
loope
ror
idiv
in
mov
jecxz
jmp
loop
ret
int
in
hlt
into
jecxz
cmp
int3
sti
xor
aas
fiaddl
jecxz
icebp
hlt
xchg
out
rorl
jmp
xor
lret
lock
sti
fcmovnb
jmp
xlat
icebp
std
aam
cmp
lret
in
call
mul
test
repz
sbb
fsub
jmp
leave
test
ljmp
sti
ror
fcomip
jmp
fdivr
lock
mov
leave
enter
out
in
jecxz
test
xlat
hlt
in
out
cld
idiv
roll
call
test
lret
enter
rolb
in
int3
test
sti
cmp
sarl
int
repnz
xchg
xchg
in
leave
filds
out
sar
ljmp
rol
repz
nop
ret
loop
jecxz
in
repnz
jmp
sar
aam
aam
xchg
les
faddl
mov
ret
stc
clc
enter
std
neg
rcr
fadd
in
addb
iret
xchg
repz
lret
sub
stc
cmp
out
aam
shl
in
cmp
test
filds
fcoms
lret
shlb
cs
mul
aad
shr
neg
loope
std
ret
into
mov
mov
out
cli
shr
xor
incb
fnsetpm(287
add
fmul
mov
lret
lock
loopne
aad
mov
into
shl
into
shr
and
and
loope
fcmovnu
mov
repnz
xor
ror
fucomip
div
icebp
jecxz
xchg
icebp
decb
rol
lock
lret
aaa
int3
out
repnz
in
mov
cmc
cmc
add
vphaddubw
into
in
enter
or
hlt
sbb
mov
fmul
jmp
xchg
out
xchg
cmp
int3
xlat
aam
loope
dec
int
in
out
lret
int3
fsub
ljmp
in
jmp
shl
cmp
cmp
shl
sbb
lret
out
fst
out
iret
fcom
cmp
cmp
clc
xor
hlt
addl
mov
xchg
call
jmp
jecxz
loope
hlt
cmp
aaa
loop
add
repnz
int3
int3
mov
mov
into
divb
sub
aaa
xor
das
in
in
idivb
out
fdivrp
rcl
aad
enter
in
lret
std
addb
lret
stc
repnz
ljmp
iret
sbb
flds
fiadds
repnz
xor
fldl2t
iret
cmp
leave
jmp
div
xchg
shl
cli
out
fsubp
out
icebp
fdiv
jmp
test
out
aaa
lret
jmp
lret
aam
clc
in
sarl
out
shr
mov
test
xchg
repnz
call
ret
shl
enter
fcom
call
cmc
hlt
mov
lret
loop
in
iret
aaa
shr
rcl
cld
repz
call
clc
in
sti
lea
int3
std
call
int
cmp
cmp
in
cmpb
test
in
repz
loop
xchg
lds
sar
repnz
out
hlt
shl
std
xchg
cmc
clc
idiv
fildl
out
ror
aaa
cmp
fdivrl
enter
rcr
repnz
xchg
call
mov
out
in
fmul
cmp
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
dec
mov
test
jle
add
sti
cld
fmul
out
ljmp
in
lret
lock
xchg
into
nop
out
stc
iret
ss
aad
xor
stc
fstp
cmc
iret
hlt
cmp
stc
fldl
sti
xchg
out
in
ss
ljmp
fadd
in
and
mov
mov
lret
in
test
hlt
mov
lock
iret
cmp
ror
fcmovu
call
ljmp
jmp
mul
mov
jmp
int3
fidivrs
lret
mov
int
orl
loope
loopne
in
shl
jecxz
sbb
or
std
mov
in
sub
ror
shl
out
hlt
call
std
and
loope
cmp
lret
sti
lret
in
orb
hlt
enter
xlat
out
cmp
cmp
repnz
stc
repnz
fmuls
fdivr
in
out
call
in
rcl
aaa
int3
cmc
in
shl
cmc
sarb
ljmp
fdivr
int
aad
idivl
iret
lock
lock
rcl
test
ret
out
fsub
xchg
cld
jmp
lock
les
lock
iret
xlat
cmp
fildl
hlt
sbb
cld
ljmp
not
cmc
stc
in
hlt
rcr
cli
repz
aam
out
repnz
enter
int3
iret
aam
in
in
not
in
out
cmp
fdiv
xlat
xor
cmc
mov
neg
sub
mov
int
leave
sarb
rcl
shl
ds
sti
aam
aad
sar
in
in
aam
lret
aad
int3
aaa
cmc
lret
in
rcr
idivl
std
test
ret
loope
cli
in
out
popl
test
loop
in
fcmovb
int3
cmp
clc
out
and
ror
ret
lret
test
icebp
fchs
xchg
sub
ror
cmc
xor
cmp
lret
or
ret
leave
stc
ret
cli
fimull
xchg
xor
cli
shl
cli
fmulp
icebp
fxch
stc
fcmovbe
enter
mov
xchg
jmp
rcl
stc
aad
enter
cmp
int3
in
inc
std
fsub
jecxz
out
fdiv
repz
out
and
ret
cmp
fidivl
xlat
xchg
out
in
fdivrp
loopne
fucomp
aad
jmp
repz
lret
cmp
rcl
shl
cmp
cld
stc
out
test
ficoms
fcomi
imul
lret
cli
fmul
or
fdivrl
movb
xlat
icebp
loop
mov
in
loopne
fxtract
xor
jmp
in
fstpt
loop
out
ret
shl
cli
cld
fcmovb
f2xm1
lock
icebp
lret
aam
ret
out
jmp
out
lret
ljmp
in
fcmovne
icebp
enter
mov
out
xor
ss
sarb
cmp
mov
sti
cld
mov
in
xchg
mov
out
lock
in
sar
in
repnz
int3
fdivp
hlt
fdivp
fdivr
fnstsw
lret
xchg
out
and
int
fadd
fcom
das
fdivr
enter
in
fstp
ret
cmp
leave
mov
jecxz
mov
xchg
fdiv
aad
ljmp
add
call
mov
sti
in
fstp
rorb
xor
aam
fbstp
cld
xchg
rcl
ljmp
lret
enter
xchg
cs
call
hlt
enter
aam
in
sti
testb
out
fucomp
fst
mov
cmc
fisubrl
in
shr
rcr
fucomip
in
out
fcmovnb
mov
leave
fcmovnu
cmp
in
repz
shr
aad
into
idiv
out
stc
cld
out
cmp
aas
ret
repnz
loop
loop
out
sti
xchg
jmp
iret
jmp
jmp
std
sti
into
fsincos
fcomip
ret
aad
mov
mov
out
lock
xrelease
in
int
out
cli
aas
aad
fnclex
cld
fst
repnz
mov
mov
shll
repz
shr
enter
into
cmp
xchg
mov
fldl
xchg
ljmp
jmp
clc
lock
xlat
fstp
div
cmc
fcmovnu
ljmp
loop
shr
in
lock
in
out
clc
enter
shl
fcmovb
std
loope
mov
xor
cmp
lret
lret
ret
loopne
add
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
loop
inc
std
sub
jle
movsl
add
in
loope
in
mov
mov
jmp
mov
repz
fcmovne
int3
clc
aaa
test
aad
cmp
xchg
int3
jecxz
out
enter
out
cmp
iret
ds
stc
idiv
lds
in
test
int3
mov
divl
fdivrl
fnclex
out
repz
stc
flds
cli
lret
shll
lret
in
into
jmp
shl
xor
mov
call
loope
faddp
in
xor
loop
fprem1
faddl
fcmovnu
testb
shl
xor
xor
icebp
leave
in
enter
hlt
ret
fiadds
lret
in
fsub
test
mov
in
ss
ror
call
rcr
rol
ret
inc
incl
int3
lret
test
xor
lret
int
jecxz
loopne
in
fidivrs
mov
std
iret
icebp
out
xor
ret
ret
in
shl
fidivrs
jmp
iret
cld
cmp
call
incl
xor
lret
shr
clc
cli
test
int
loope
xor
loope
xlat
out
loope
repz
lock
out
aam
call
sti
lret
xlat
icebp
fidivrs
hlt
loope
xlat
fnstsw
enter
fstp
jecxz
orb
xlat
hlt
hlt
fcomip
fiaddl
xlat
sbb
aam
loop
or
aam
sarb
out
call
cmp
ret
fiaddl
xlat
fdivr
cmp
std
xchg
aam
int
ljmp
not
repz
ffree
test
fldl
jmp
fmull
cli
shr
cmp
hlt
fmulp
rcr
int
aam
inc
in
loop
mov
loopne
cmc
int
sti
lret
fdivs
icebp
ror
fcomip
cmp
lret
fabs
cld
icebp
mov
loop
rcr
lret
cli
fcom
cmc
ds
fyl2x
cld
loopne
or
stc
fucom
in
xchg
xchg
out
jecxz
lock
fsubr
out
loopne
aam
test
loop
std
xbegin
jmp
ror
lret
lds
cmp
idiv
ffreep
cmpl
into
clc
rolb
sti
fiaddl
std
icebp
int
loopne
repz
cmp
out
cmp
clc
fstp
cld
aam
loopne
mov
loop
lret
loopne
repz
ret
int
jmp
sti
divl
icebp
cmp
std
in
testb
jmp
cli
fildl
mov
shl
sti
aaa
repz
lret
sbb
aam
mov
sti
dec
out
fucom
icebp
xlat
fidivl
enter
shl
fst
in
cld
fsub
cld
loop
mov
in
jecxz
nop
iret
int3
in
xchg
jmp
xlat
repnz
aaa
fsubp
sub
sar
in
lret
call
call
hlt
cli
in
std
shr
leave
hlt
xlat
cmp
fmul
jmp
ffree
loopne
xchg
mov
xchg
fsubrp
call
std
xabort
flds
std
xchg
fcomi
xchg
jecxz
loope
call
into
aam
sarl
clc
icebp
cmc
fcmovnu
cmp
out
cmp
loop
lret
fcmovnu
lret
int
mov
lret
aam
std
int3
ljmp
repz
sub
test
jecxz
xchg
test
ret
in
repz
hlt
cmp
ds
into
aam
aas
cli
cli
inc
out
xchg
xchg
repz
cmp
cmp
cmp
enter
ret
icebp
repz
mov
fcoml
mov
test
leave
xor
iret
fxch
fld
fsub
ret
fiaddl
repnz
aad
mul
in
shll
not
lret
iret
cli
sar
hlt
mov
faddl
cmp
cmp
cmc
shl
cmc
aad
sbb
xchg
into
lret
enter
call
enter
loop
shl
div
frndint
jmp
sti
lret
enter
loopne
rol
vpaddb
xor
loop
jecxz
cli
fst
out
stc
les
roll
ret
int3
xlat
out
fadd
idivl
lret
int
loope
enter
in
xor
loope
addb
cmp
cmp
lret
cmp
repz
repz
fst
out
dec
call
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
stc
fadds
jle
movsl
add
lret
fucom
stc
loop
incb
ljmp
cmp
roll
xchg
int
mov
mov
cld
fdivp
ret
xor
hlt
cmp
sti
hlt
hlt
cmc
into
mov
or
mov
loope
test
into
cmc
ror
aam
cmc
ds
xor
sti
testb
lret
xchg
cmp
loop
xor
std
hlt
loope
rcl
sbb
aad
fisttpll
leave
out
shl
les
call
out
std
aas
lret
int
testl
fisttpll
mov
in
out
repnz
cmp
loope
xor
loopne
aad
jmp
xchg
push
cld
adcl
out
lret
iret
shl
cmp
loope
aas
mov
xchg
repz
in
out
ret
leave
mov
xchg
xor
xor
sarb
call
cmp
test
fcomip
shl
ljmp
mov
jmp
ljmp
jecxz
into
les
les
xchg
in
call
mov
int
roll
loopne
loop
cmc
clc
in
fucom
xchg
shl
icebp
xor
in
cmp
out
repz
and
loopne
mov
mov
aaa
shl
in
rol
lret
cmpl
clc
fdivr
not
shl
xlat
int
test
mov
stc
jmp
shl
out
fcos
lret
jecxz
cld
out
push
jmp
leave
std
xchg
xchg
xchg
xor
hlt
xor
divl
sarl
testb
aas
hlt
cld
fyl2xp1
not
int
fistl
int3
ljmp
cmp
sti
xlat
xlat
jecxz
mov
ffree
xchg
jecxz
out
xor
cmp
div
fidivs
sub
jecxz
loop
out
xor
fildl
ljmp
shl
in
xor
xor
into
aam
jecxz
ffreep
addl
sub
das
lret
in
xor
xor
sar
test
lret
fcmovnu
repnz
cs
xor
sti
cmp
not
fsub
cmp
test
sbb
loopne
nop
xor
loope
cld
out
in
lret
cmp
test
fdecstp
fadd
call
in
int3
out
ljmp
std
aaa
out
or
rcr
in
repnz
hlt
ljmp
out
int3
in
hlt
stc
fucom
adc
stc
and
fxch
fdivr
int3
cli
int
loope
cmp
int
rcr
int3
int
std
xor
decb
int3
int3
ret
mov
out
aad
rcl
stc
fcomp
rcr
cmp
stc
std
icebp
cmp
ret
out
aam
fsubr
clc
out
mov
test
in
cmp
xor
sub
hlt
sbb
iret
fcmovnbe
sbb
fidivrs
idiv
into
out
iret
out
shl
call
call
cmp
rolb
addb
lock
fcmovu
in
in
into
aas
std
rcr
ret
hlt
xlat
ljmp
out
loopne
hlt
cmc
xlat
enter
out
rcl
divb
xor
loopne
mov
fucomp
rorl
cs
ror
rcl
idivb
loopne
and
out
clc
rcr
and
cld
and
iret
shl
shrl
cli
fcmovne
neg
jmp
cli
fcmovnbe
cmp
mov
mov
lret
iret
nop
ret
into
out
xlat
not
cmp
icebp
sti
in
aad
ds
fdivrp
addb
xchg
in
xor
ljmp
fucomip
loopne
hlt
incb
ret
loope
icebp
mov
rol
aam
fcom
xor
clc
cmpl
loop
int
rclb
das
aaa
sub
xlat
out
shl
testl
jmp
enter
mov
loope
icebp
loop
shr
xlat
cmp
aaa
cmp
sar
lds
into
leave
sti
ljmp
out
icebp
cs
rcl
idiv
fnstcw
movl
xchg
test
test
xor
loope
sti
icebp
ror
ljmp
aam
inc
fcompp
xabort
out
fst
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
add
jle
movsl
add
call
iret
cmp
cmp
into
aas
out
cmpl
in
cli
fucompp
mov
mov
lret
loope
xlat
out
in
enter
loopne
int3
in
cli
ret
fsub
rcl
cmc
mov
rorb
xor
lret
fcomi
jmp
into
rcl
in
stc
clc
fidivrl
sbb
sar
mov
jmp
aad
xor
fst
sar
iret
rolb
mov
loop
xor
xor
cli
in
in
lret
fucom
aam
vpaddd
lret
ror
cld
mov
icebp
rol
sti
int3
xor
cmp
fidivrl
stc
fidivrs
cli
xchg
ret
loop
mov
in
aaa
lret
out
std
xlat
jmp
aad
and
jmp
out
in
jmp
out
nop
int3
ss
sti
cli
jmp
sbb
aas
loopne
std
xchg
mov
cld
lock
lret
cmc
std
out
sar
inc
jecxz
jmp
mov
xchg
cs
sub
incb
out
xor
fdivr
ret
fildl
aam
out
clc
leave
rcl
cmp
fucomip
loop
out
cld
loopne
lds
in
call
in
xor
sti
idiv
rcr
fucom
ffree
call
fildl
mov
test
fcom
jecxz
stc
call
xor
repz
fmulp
int3
xlat
fucom
fmul
out
sbb
ss
in
repnz
int3
lret
mul
rolb
aam
xchg
stc
cld
xchg
test
xor
in
shr
aaa
loop
aas
aam
out
in
jmp
or
orb
call
icebp
cld
loopne
rcr
cld
rcr
shl
jmp
rcr
leave
mov
inc
ret
in
aaa
out
lret
lret
fidivrl
ret
fcmovbe
ret
mov
inc
cli
jmp
mov
lock
int
lock
xlat
fsub
shr
clc
ffreep
out
inc
enter
xlat
xchg
mov
loop
in
fdecstp
ljmp
rcl
shl
aas
mov
sti
in
ljmp
hlt
mov
xor
in
repz
std
ss
cmp
enter
in
in
fnsetpm(287
loop
jmp
ret
xlat
shrb
cld
xlat
rcr
aam
leave
call
vcvtdq2pd
lea
lock
ljmp
sti
into
out
fiadds
mov
sar
cli
in
frstpm(287
xor
rcr
fsin
cmp
xchg
cmp
hlt
ret
in
vpavgb
jmp
xor
aaa
out
sti
shll
aad
fucom
fsub
repz
in
in
xchg
lret
jmp
out
aaa
out
fldz
fidivrl
sbb
fmull
mov
jmp
cmp
cld
leave
loopne
jmp
fstp
ret
shr
mov
cld
repnz
call
jmp
cmp
cmp
clc
out
repz
enter
lret
out
out
fstl
shr
clc
out
aam
cmp
cmc
cmp
clc
out
cmc
int3
jmp
lret
jmp
into
cld
cmp
sti
int3
aad
cmp
leave
loopne
mov
mov
aad
xor
ss
in
out
aam
aas
out
div
out
clc
shl
mov
jecxz
jmp
mov
rorb
fnsave
repz
and
ljmp
icebp
test
int3
rorl
int
fxch
jmp
aad
fidivrl
out
enter
or
mov
loop
lret
ret
cmp
xor
shl
rcl
rcr
hlt
clc
orl
add
xchg
in
ret
in
lret
fucom
rcr
aad
rol
test
in
into
repnz
loope
mov
lock
aam
xor
loopne
imul
adc
sbb
lret
enter
xchg
mov
repnz
in
ljmp
rcl
sti
call
ss
iret
aad
rcr
fiaddl
repz
iret
xchg
ror
loope
fsubr
stc
xor
stc
ret
sti
sti
stc
cmp
mov
xchg
iret
hlt
add
jmp
fstp
je
xchg
or
and
jle
movsl
add
aaa
xor
fcmovne
jmp
shl
cmp
cmp
loop
faddl
frstpm(287
nop
out
nop
mov
aad
cmp
cld
sti
jmp
cmc
hlt
lock
cmp
sti
aad
in
inc
test
into
and
loop
repz
cmp
int3
aas
xor
rcl
loope
fcmovb
hlt
fisttps
out
jmp
xchg
call
xor
shl
aaa
icebp
lret
test
cmc
adc
std
leave
jmp
int3
addb
mov
cs
into
call
into
fcomp
out
loopne
fildl
std
out
jecxz
sti
fdiv
xchg
iret
xlat
iret
iret
enter
cmp
cmp
loop
addb
jmp
test
out
jmp
lock
aam
clc
sti
repnz
test
cli
xchg
out
in
test
out
jmp
lret
into
out
test
out
aas
mov
clc
in
fsub
lret
iret
int
xor
mul
shll
enter
cmp
out
loopne
out
ret
xlat
mov
iret
leave
and
hlt
nop
xor
fidivl
sub
fabs
in
add
in
ds
fld1
mul
mov
xchg
loopne
repz
out
fcmovu
rcr
loop
sub
repz
std
mov
cld
rcl
in
cmc
ror
xor
into
aad
int
pushl
out
in
xor
icebp
std
test
repz
xchg
ss
ret
icebp
div
ss
cmc
fmul
aas
xlat
fildl
cld
decb
test
shl
ljmp
cld
clc
aam
sar
fnstsw
shr
xor
loope
mov
mov
icebp
rorl
into
iret
ss
cmp
loop
rcr
clc
shl
fcomi
test
call
std
loope
test
hlt
ror
leave
roll
xchg
loope
fmul
imul
lock
xor
lock
out
aas
cmp
fsub
fcomip
xchg
std
testb
jecxz
lret
enter
fdivrl
ljmp
loopne
xchg
idiv
jecxz
test
into
call
int
in
xor
fdivrl
cmp
stc
out
shl
xlat
rol
jmp
cli
rcl
lea
cmp
cmp
cmp
cmp
aas
aam
filds
mov
into
iret
mov
xchg
mov
stc
int
cmp
cmp
hlt
faddp
les
mov
in
test
xlat
repnz
ror
addb
rcr
std
mov
loop
lret
or
cmc
mov
divb
jmp
cmp
aam
out
fldl
out
xchg
leave
into
ror
lret
cmp
in
fucomip
hlt
cmp
loope
icebp
in
sbb
mov
enter
xchg
mov
hlt
jmp
cmp
xor
sub
adcl
cmc
in
clc
lret
cmp
std
in
xlat
test
loop
shl
in
mov
xchg
xchg
shl
shl
in
into
repz
enter
cmpl
aam
not
aad
call
in
call
shl
aam
div
std
ljmp
test
cmp
addl
shl
lock
aaa
cmp
cli
sti
aas
loopne
cld
cmp
cmp
ror
xchg
cld
and
iret
xor
loop
aaa
shl
cld
fcmovb
ret
fsubr
aas
shl
enter
fimuls
cld
rorb
clc
xor
loop
xchg
aad
in
in
mov
dec
ror
out
lret
aad
shr
jmp
cmp
rcr
shr
ljmp
repnz
out
xor
sarb
xlat
sti
sbb
test
shl
xchg
jmp
in
int
nop
call
aam
cmp
repnz
loopne
stc
aam
icebp
icebp
aas
fiaddl
loop
test
leave
aam
ljmp
fcmovne
sti
clc
ljmp
xchg
idiv
orl
out
call
out
xor
lock
clc
not
aam
stc
rcr
jecxz
cmpl
out
repz
sar
rol
out
fcmovne
lret
cli
cmp
ret
cmc
clc
clc
mov
cmp
mov
loope
shr
out
cmc
sti
xor
shlb
into
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
scas
inc
ret
jle
movsl
add
sbb
cmp
shl
clc
test
out
mov
and
in
shr
ror
enter
aam
lock
sti
out
ret
fmul
testl
shl
repz
in
lret
repnz
fld
decb
out
cmp
aam
ret
in
int3
stc
cmp
jmp
rcl
call
fmull
fmull
imul
sti
cmp
stc
in
lock
ret
in
addb
movl
enter
iret
cmp
inc
out
into
out
hlt
cld
rol
test
out
mov
sub
xchg
xorb
leave
in
enter
xor
aad
loop
loopne
rorb
fcmove
addb
lret
enter
clc
std
cmp
cmp
xlat
repnz
idiv
fdiv
cli
test
int3
fstl
fadd
enter
cmp
cmp
ret
shl
mov
mov
fdivrp
cli
leave
in
fcomip
lock
into
cld
shl
aad
icebp
lret
test
cmp
fsqrt
aad
in
fdivr
mov
loopne
cld
int
shr
int3
xor
cs
xor
loop
xchg
out
mov
lret
xchg
lock
loop
aad
cmc
out
std
fcmovbe
aaa
leave
fadds
cli
idiv
cld
dec
ljmp
mov
iret
shl
out
into
enter
lret
cmp
hlt
test
mov
call
leave
stc
in
jmp
jecxz
mov
lret
aad
lret
cmp
shl
in
ret
les
or
sti
cld
mov
iret
mul
in
aaa
cmp
cmp
into
loopne
xchg
std
lret
fsubr
in
cmp
into
repz
cmp
fcomp
in
cmp
cmp
loopne
cli
mul
mov
filds
ret
cmp
cmp
stc
out
rorl
sbb
rolb
int
stc
in
cli
lock
aaa
aam
out
aas
filds
in
jmp
int3
leave
int3
enter
hlt
in
lock
aam
hlt
in
aad
in
cmp
xor
cmp
mov
faddp
xchg
mov
xchg
mov
leave
in
int
clc
shl
lret
testl
sbb
xchg
in
xchg
iret
nop
out
ss
cmp
aad
xlat
loopne
sbb
mov
fcmove
fucomip
std
call
leave
adcb
xor
enter
in
into
cld
sbb
iret
mov
fiaddl
xchg
jmp
xchg
in
ljmp
call
cmp
aad
stc
in
ljmp
and
aad
iret
xor
aas
icebp
cmp
cmp
test
cli
in
ficoms
xchg
xchg
in
test
leave
xor
fcmovne
sti
loope
and
loopne
ret
fisttps
add
out
fdiv
fstp
out
lret
iret
rcr
cli
jmp
ds
in
lock
mov
rol
vpminub
cmp
clc
repnz
mul
shl
out
decb
loop
fiaddl
loopne
call
fidivrs
cmp
in
sar
jmp
rol
cld
stc
mov
iret
aam
out
xor
sti
out
jmp
test
fst
call
addl
sar
loop
cmc
xlat
jmp
aas
in
xchg
hlt
repnz
xchg
movl
fdivr
into
std
cmp
leave
fstp
clc
lock
fadd
call
lret
out
jmp
xchg
in
xor
ss
cmp
lret
icebp
fdivrl
mov
mov
mov
jmp
das
lret
cld
int
fdivs
std
cmp
in
std
out
into
loop
aam
fdivrp
leave
into
cli
int3
hlt
repz
lock
xor
in
stc
loop
loop
faddl
stc
int3
xchg
xchg
out
int
in
leave
lret
ljmp
idivl
fcmovnu
or
ljmp
ss
jecxz
jmp
aam
fldl
leave
jmp
in
xchg
mov
xor
out
repnz
aam
stc
iret
adc
xlat
sar
mov
fadd
lret
mov
xor
into
divb
stc
loopne
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
sub
shr
enter
add
repz
sti
jmp
mov
ljmp
ret
leave
out
xor
shl
rcl
fcmovu
clc
mov
out
aad
fsubr
ret
in
shr
icebp
lock
shl
cmp
cld
sti
mov
lret
sub
in
cmc
mov
aaa
aam
ljmp
clc
loopne
hlt
fldl
fiaddl
in
shl
ss
leave
stc
cli
imul
int3
loope
repnz
sti
ljmp
out
fisttps
xlat
rol
int3
dec
leave
cmp
aas
ds
div
enter
in
stc
enter
in
hlt
fists
into
repz
clc
lock
cmc
cmp
jecxz
rol
xlat
xlat
adc
incb
rcl
cli
lret
shl
repnz
ss
std
rol
jecxz
cmp
ljmp
enter
xor
int3
fdivrs
shl
std
int
shl
xor
xlat
stc
fcmovnu
cld
addl
in
lret
int
std
aaa
cmp
loop
icebp
fiadds
div
shl
in
sbb
hlt
int3
icebp
stc
ret
out
xor
clc
fucomi
icebp
stc
rcr
test
hlt
aad
rcl
test
hlt
xchg
loopne
call
cmp
aas
fnstcw
fnstsw
stc
xor
aam
std
in
movb
adcb
ss
cmc
std
iret
fld
lds
leave
fildl
test
lret
repz
int
repz
and
clc
mov
xchg
in
ror
icebp
xor
sub
idiv
leave
fsin
iret
into
ret
aas
loopne
orb
icebp
adcl
xor
cmp
out
out
icebp
rcr
ror
rcl
fcmovbe
stc
sub
cli
xor
xor
xor
fnstsw
aad
cmp
test
enter
test
incl
int
fdiv
in
ds
jecxz
ss
clc
addb
loopne
mov
xorl
icebp
cli
not
hlt
shl
loop
aas
iret
hlt
std
addl
out
fsubr
out
jmp
aas
ds
icebp
and
mov
in
into
ljmp
jmp
repnz
cmp
int3
clc
in
xlat
sti
cmp
in
ljmp
lret
out
aam
repnz
jmp
cmp
lret
rol
xchg
testl
loopne
xchg
out
sar
fcmove
fstp
icebp
in
aad
into
out
ds
jecxz
ror
mov
xchg
addb
in
jecxz
repz
jmp
jecxz
int3
stc
sbb
loopne
rorb
out
shl
clc
int
fcmovu
cmp
jmp
cmc
cmp
in
aad
and
icebp
test
xor
cmc
divl
in
hlt
loopne
lret
fdivp
aad
loope
and
leave
fsub
cld
out
xchg
lret
in
xor
cmp
in
loop
xor
call
cli
mov
lock
cmp
int3
ss
cmp
fistpll
aad
sarl
in
ds
enter
mov
lret
out
xchg
repnz
icebp
in
repz
lret
in
into
jmp
loop
shl
fmuls
mov
xchg
decl
xor
fmul
cmp
xlat
jmp
shl
clc
out
add
loop
push
loopne
aad
cmp
hlt
into
stc
fst
ljmp
iret
call
orl
in
out
subl
aad
lret
xlat
enter
lock
mov
fcmovnu
faddl
int3
aad
loop
call
cmp
jmp
in
test
orl
shl
das
cmp
sti
std
sti
loopne
movb
in
addl
enter
cmp
addb
out
in
mov
enter
mov
ret
loop
cmp
fstpt
aad
repnz
fistpll
fldl2t
test
cld
out
lret
jmp
fmulp
div
into
leave
cli
lret
lds
not
cmp
in
icebp
clc
aad
idiv
cmp
xchg
dec
xchg
int
aad
out
clc
cmp
test
stc
lock
fcmovnu
call
fucomi
idiv
xchg
jmp
aam
mov
lahf
ds
adc
add
test
adcl
icebp
rcl
das
idivl
ss
hlt
icebp
rolb
in
adcl
ss
xor
not
cld
iret
iret
rol
rolb
out
icebp
jmp
xchg
xchg
out
xor
out
repnz
stc
aas
cmp
fcmovnbe
cmp
ds
cmp
stc
int
rolb
ror
lret
cmp
fsubrp
out
int3
int
icebp
aad
in
aam
in
in
lret
rclb
out
cmc
cmp
aas
xlat
cmp
sti
neg
icebp
ret
test
mov
fsubrp
loop
out
jecxz
das
in
cmp
hlt
ds
sbb
xlat
cmp
testb
in
mov
int3
call
enter
fucomp
sar
cmp
loop
std
and
ret
test
loope
cmp
int
in
call
fidivrs
fchs
fdivr
fcom
fsub
fdivr
movl
clc
out
fnsave
rcr
aad
fxch
xchg
shl
neg
test
in
mov
shr
call
clc
sub
cld
ss
cmp
rolb
xchg
lock
fdiv
mov
repnz
xor
loopne
rol
mov
in
std
leave
icebp
mov
stc
leave
shr
cmp
stc
loope
cld
addb
clc
into
int3
sti
out
xchg
hlt
nop
icebp
int3
in
sub
std
out
push
imul
out
in
roll
clc
cld
lret
loop
int3
xchg
repz
in
cmp
cli
out
jmp
in
iret
cmp
fdivrs
inc
fcmovu
addl
fsubp
xchg
jmp
xor
cli
xor
in
lock
rcl
xlat
loope
cli
out
fld
xchg
mov
repnz
in
cmp
repz
lock
sti
std
cli
aad
in
xchg
xchg
loope
ljmp
xor
cmc
aaa
cmp
shr
sar
out
fucomi
cli
stc
ror
lret
test
faddl
aam
cmp
xor
repnz
test
fdivr
xchg
aas
stc
in
in
jmp
into
xor
hlt
aaa
ror
stc
aas
repz
sti
std
xlat
neg
cmp
jecxz
fstp
fmull
lock
ss
enter
fldl
ret
in
loope
fdivr
in
int3
cli
out
call
out
enter
out
enter
aas
rol
ds
loope
jmp
mov
mov
addl
jmp
lock
out
rolb
in
ljmp
rcr
hlt
fdiv
cmc
das
sarb
xor
cmp
aam
ret
fcmovnbe
sti
test
out
jmp
enter
aad
xor
fldl2t
stc
clc
iret
neg
in
out
ret
fldl
cld
enter
nop
into
loope
jecxz
xlat
shr
enter
shl
lock
and
jecxz
enter
sub
lret
fcomi
fptan
shll
fpatan
cmp
out
ffree
call
jmp
in
jecxz
in
mov
call
aam
xlat
fdivp
fdivr
rcl
sar
incl
mov
rol
xor
in
cmp
call
rol
loop
mul
loopne
enter
nop
in
mov
ret
lock
aam
fcom
cmp
int3
loopne
cmc
iret
test
enter
mov
out
rcl
xchg
mov
hlt
hlt
xor
out
xor
fdivp
xor
xlat
loopne
mov
fidivrs
and
cld
loopne
out
xchg
xor
xor
cmp
fsubr
int3
into
aam
cld
xchg
testl
mov
sar
fsubr
leave
ljmp
loop
jecxz
clc
out
mov
orl
aaa
stc
hlt
int3
aaa
rcr
fdivrp
jecxz
into
div
test
dec
loop
sti
enter
ror
rcl
imul
ss
shr
aad
aad
cmp
cmp
lock
cmp
mov
out
fucom
std
xchg
xor
repnz
cmc
cmp
repnz
sbb
add
loopne
in
in
rcr
xchg
in
fmul
out
out
int
jmp
repz
lret
jmp
lret
out
cmc
mov
ss
lock
fdiv
ror
sar
roll
fisttpll
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
cmp
push
arpl
jle
loop
in
icebp
int
aam
clc
fdivrl
out
cld
sub
fildl
nop
cli
ljmp
aam
fcmove
sti
leave
cld
out
cli
neg
fdivp
fldl
fiadds
ljmp
fucomi
out
lock
fdivrl
loopne
not
sub
mov
ljmp
sub
cmp
cmp
in
fcomip
cmp
in
std
fdiv
lret
ffree
stc
leave
in
test
mov
int
cmp
out
lret
out
lret
test
mov
leave
mov
add
call
out
cmp
dec
fdivrl
int
fcomp
shr
shl
ret
loop
ljmp
icebp
fptan
aam
rcl
hlt
rcl
cmp
clc
testl
call
int3
int3
loope
test
sti
cmp
out
into
aaa
faddl
not
fndisi(8087
addl
in
out
iret
cmp
fsubr
rcl
repz
jecxz
hlt
xor
xlat
ret
fcmove
mov
lock
icebp
loope
cld
out
out
std
clc
int3
stc
xor
out
loopne
ljmp
test
in
test
int3
xor
rol
icebp
xlat
cli
std
aaa
rol
jecxz
clc
adc
std
in
sti
test
incl
ret
fcmovbe
out
ss
ret
cmc
faddp
repnz
mov
lret
leave
jecxz
xchg
lds
repnz
out
aas
cld
rcr
aam
fprem1
fildl
xlat
loop
out
xchg
and
hlt
lret
int
iret
flds
hlt
ffreep
mov
jmp
cmp
loop
orl
stc
int
xlat
xor
rcr
repnz
out
jmp
incl
xchg
xchg
cs
in
test
aas
adc
mov
leave
and
call
cmp
fcmovnbe
sar
jmp
lret
test
test
rol
ret
dec
xchg
enter
in
in
loopne
xlat
int3
shl
in
xor
aam
std
rorb
cld
loop
sti
rcll
rol
repnz
idivb
xchg
cmc
rcr
jmp
mov
icebp
mov
fidivrs
sti
jmp
in
in
cli
vpaddusw
rol
in
in
lea
ror
xor
hlt
out
out
into
hlt
loopne
lret
in
sti
out
mov
loop
mov
fnstsw
fiadds
call
out
out
rcl
rcr
ror
fmulp
mov
loop
hlt
out
ret
out
cmp
xor
cmp
and
mov
fcmove
loop
lock
xchg
int3
loope
lret
xor
cmp
cmp
cmp
xor
in
into
fabs
cmc
test
loopne
fldl
int3
sbb
xlat
xor
hlt
leave
aaa
int
in
loopne
in
cmp
cli
decl
fndisi(8087
loope
shl
xor
in
repnz
fst
lret
in
loopne
xchg
jmp
incl
mov
sarb
bnd
fcmovb
iret
test
loope
aas
test
shl
fdiv
in
repnz
enter
xor
out
hlt
fidivrl
idivl
ss
in
out
fcmovu
movb
out
out
loopne
aad
cmp
in
cmp
test
stc
enter
mov
xchg
lret
ljmp
iret
in
div
rol
shl
stc
sbb
xchg
fiaddl
sar
mov
hlt
enter
cmp
aas
repnz
incb
test
ret
fldl
mov
jmp
jecxz
xor
iret
sti
divl
clc
aam
ror
vcmpsd
fldpi
out
jecxz
mov
cld
test
xor
fsubrp
div
rcl
aas
cli
hlt
fdivr
hlt
cmp
jmp
mov
repz
aad
ss
loop
repnz
cmc
filds
lock
mov
mov
leave
xor
clc
in
ss
div
ds
movb
loop
lret
repnz
ss
call
out
cmp
test
test
mov
leave
cli
enter
or
neg
loopne
mul
iret
std
mul
leave
xchg
mov
out
aam
shrb
fmul
xlat
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
aam
aad
fcomi
ret
cld
loopne
xchg
fdiv
in
jecxz
sti
out
hlt
xchg
in
sarb
sarb
lret
in
sbb
xchg
rolb
test
in
rcr
cmc
in
das
lock
sar
repz
in
out
hlt
xchg
cmp
cli
addl
jmp
repnz
call
cli
xor
loope
faddp
in
stc
ds
stc
out
ljmp
mov
fadd
cmp
ljmp
loope
lock
roll
fcmovu
out
ljmp
cmp
out
out
stc
ljmp
ret
repz
call
cmp
faddl
jecxz
fprem1
mov
cmc
repz
loope
stc
xchg
in
call
mov
fst
ror
xor
shlb
das
aad
hlt
iret
jmp
into
repz
xor
lret
cli
enter
in
cld
jmp
lds
stc
hlt
aas
cmc
hlt
out
adc
iret
fdiv
cld
sti
mov
lret
jmp
mov
shl
xor
icebp
cmp
lret
cmp
rolb
ret
testb
in
std
in
cmc
fxch
test
icebp
not
hlt
cmp
fdivrl
ret
cmc
ljmp
shr
ror
shl
lock
cmp
stc
xor
xlat
out
fsub
out
call
mov
out
icebp
jmp
cmc
ret
out
cmp
repnz
jecxz
repnz
fucomi
out
out
loop
repz
into
icebp
jmp
out
cmp
lock
in
in
clc
jecxz
cmc
fadds
lret
xchg
in
lret
ljmp
xor
adc
loope
fabs
in
loop
shl
cmc
nop
leave
in
lret
fdivrs
cmc
ljmp
rcl
dec
orb
mov
mov
xor
ljmp
stc
aas
in
cld
cmp
aad
in
mov
jmp
icebp
call
out
lret
loopne,pt
fsubr
test
fcmovu
mov
in
mov
in
ss
rcl
leave
lret
clc
call
enter
lock
mul
jecxz
aad
rcl
incb
in
lret
movb
out
or
das
cmp
std
sti
stc
aad
stc
fdivp
jecxz
testb
test
std
cmc
lock
xlat
shll
stc
ror
fsubr
shr
cli
xlat
out
hlt
clc
addb
std
xchg
rcl
call
in
aam
ss
aas
in
sarb
cmc
in
std
mov
fcmovnb
in
xchg
test
out
fsubr
aad
cmp
loop
xor
adc
loop
lret
out
std
repnz
cmp
fdivrl
fcomip
idivb
loopne
inc
std
idiv
xlat
addl
out
ror
in
into
sti
leave
cmp
int3
cld
shl
test
in
leave
out
cmpb
test
loop
out
loop
rol
cmp
sti
in
cmc
call
int
incl
mov
int3
fisttps
fmul
xor
cmp
cmc
fdiv
fstpt
cmp
or
nop
out
test
nop
clc
lret
xor
out
in
cmp
cmp
lret
shl
shl
jecxz
std
aad
nop
faddl
and
in
lret
rcl
vpmaxub
fcmovne
rcr
out
loopne
mov
sbb
out
enter
shr
hlt
xor
cmp
lret
jmp
xor
iret
out
rol
in
lret
fmulp
repz
loope
jmp
ss
in
fcmovbe
stc
fdivrl
fst
out
fsub
call
int
lret
fisttps
out
ss
in
cmp
cmc
xlat
xchg
decb
cs
xor
shl
int
lds
cli
sub
jmp
xchg
aad
sub
repz
rcr
fnstsw
sti
jecxz
icebp
sbb
fucomip
fcomi
loop
fcomp
fsubp
mov
das
jmp
fucomi
out
int
cmc
adc
loop
aam
test
in
ljmp
sti
iret
in
xorb
jmp
test
std
repz
stc
mov
fcmovnbe
lret
xor
hlt
jmp
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
inc
testl
add
ds
ret
hlt
ror
jmp
in
and
rol
xor
shl
shl
stc
clc
aas
stc
not
shl
or
fcmovu
test
xchg
hlt
xchg
xor
cmp
aaa
jmp
neg
std
shr
sti
sar
addl
mov
rcl
hlt
jmp
jmp
shll
leave
into
cmc
ret
hlt
out
and
test
cld
jmp
loope
repz
mov
clc
aam
sti
leave
cmp
fldln2
shl
out
not
neg
lret
xlat
cld
sti
int3
out
out
loop
rol
xor
bnd
adc
aas
jmp
cmc
mov
jmp
ror
out
jmp
cmp
leave
rcl
cmp
aas
fldln2
ds
shl
loop
call
out
mov
iret
xchg
iret
in
aam
bnd
ror
int
fadd
clc
cmc
stc
rorb
int3
incb
jecxz
out
hlt
rol
not
shr
xlat
shl
out
in
flds
cmc
dec
fdivr
enter
out
in
hlt
lret
ss
sarl
cmp
fst
cmp
in
sub
int3
jmp
shl
out
and
in
fcmovnbe
loop
sar
aas
fdivrp
fsub
aad
pop
orl
divb
cli
iret
iret
fsubr
sti
loopne
fldl
aam
test
and
mov
xchg
cs
fnstenv
aad
cmp
adc
rcr
loopne
out
rcr
xor
xchg
int
not
cld
ss
aas
dec
clc
ds
jecxz
fdivr
movb
fmul
test
out
call
xor
rcl
xchg
shl
sti
out
xlat
fsub
in
jecxz
std
ljmp
out
stc
cmp
fucomi
loope
call
shr
test
cli
loope
out
in
jmp
int
xor
rcr
imul
cmp
lock
shl
test
in
out
loopne
xchg
fmulp
iret
xchg
enter
cmp
idiv
ret
cmp
clc
test
mov
lret
xchg
out
cld
decl
out
xor
repz
stc
loop
out
stc
stc
cli
out
mov
xor
clc
aam
cmp
cmp
loopne
int
loop
hlt
xchg
faddl
out
jecxz
ljmp
into
iret
fsqrt
rol
stc
not
cld
repz
into
in
shr
mov
xor
out
fnstcw
hlt
ds
cli
iret
stc
in
cmp
int3
in
xchg
out
repz
clc
aad
fcomp
not
clc
xchg
out
leave
std
into
xor
jecxz
mov
cs
call
cmp
fcom
ds
clc
mov
fcmovnu
loopne
jecxz
out
call
stc
out
cmp
hlt
cmp
clc
adc
ret
sti
ret
idiv
call
rorl
lock
aaa
xor
shr
cli
loop
sbb
aad
sti
mov
and
sub
in
test
cmp
cmp
in
idivb
fcmovne
repnz
add
xlat
mov
leave
and
leave
out
ret
hlt
aad
cmc
cmp
test
aas
decb
in
or
fucom
enter
fcom
aaa
rcr
cmp
lock
enter
fldpi
jmp
loopne
shl
xchg
out
shl
out
out
cli
cmp
iret
mul
cli
xchg
hlt
test
out
in
iret
xchg
mov
repz
leave
ss
loopne
aas
fcmovu
cmpl
decl
mov
shl
lock
mov
cld
jmp
stc
cmp
out
loope
loop
mov
fildl
out
xchg
in
cmp
clc
repz
sti
cmp
stc
fcomp
loope
hlt
out
mov
fmul
int3
mov
fdivr
iret
out
cmp
rcl
icebp
sar
loopne
bnd
decl
jecxz
fisttps
icebp
jmp
fnstcw
icebp
cmp
fdivp
rcl
aas
ret
mov
std
adcl
in
fld
xlat
in
rcl
cmp
hlt
fiaddl
shl
leave
in
in
and
out
ljmp
hlt
rol
rcl
lret
cld
out
cmp
vpsrlw
call
fimuls
rcr
test
jmp
cmc
lock
cld
repnz
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
pop
mov
mov
jle
movsl
add
aad
mov
std
in
out
out
call
sarb
cmp
std
fstp
sbb
call
xlat
fucomi
test
loopne
aam
mov
lret
int
ror
leave
loopne
cmp
loop
roll
mul
out
mov
loope
ljmp
aaa
test
xchg
clc
std
in
test
fisttps
rcl
int3
call
ljmp
mov
faddl
jmp
aam
xor
imul
repnz
repnz
sbb
sti
leave
aam
out
out
decb
iret
in
jmp
aam
fxch
cmp
cmc
xlat
repnz
repz
adc
loope
cmc
out
call
cli
xor
sarl
xchg
aas
xchg
in
hlt
icebp
nop
mov
rol
xor
dec
int
repnz
sti
stc
rol
repz
clc
or
mov
xchg
shr
hlt
jmp
clc
ds
cld
jecxz
cmc
xlat
test
mov
iret
repz
out
out
cmp
lret
xor
into
ret
iret
sti
test
fcmove
jecxz
xchg
jmp
int
repz
out
repz
loope
aad
test
cmp
lret
aam
std
lock
ljmp
call
jmp
test
loope
rolb
addl
rol
cmp
fnsave
out
testb
orl
hlt
xchg
xchg
repnz
in
cmc
xlat
sti
into
fxch
jmp
fucomp
aad
aas
call
loope
stc
out
rcr
addl
lret
aad
cmp
rcl
addl
jmp
repz
xchg
xor
out
jmp
in
out
in
cmpl
mul
fdiv
ffree
shr
sub
jmp
out
in
test
xor
jecxz
xlat
cmp
xchg
icebp
idivb
enter
mov
jmp
stc
div
ljmp
cmp
loopne
test
xlat
xchg
jecxz
in
decb
test
cmc
cli
cmp
ljmp
in
orl
mov
into
decl
shll
cmp
clc
aas
int3
cmp
or
in
test
stc
lret
xchg
iret
rcr
lret
repz
repnz
aam
cmp
fistpll
int3
clc
fcomp
out
in
dec
jmp
lret
shrl
out
ss
fsubr
cmp
out
into
iret
stc
fstp
idiv
mov
std
stc
in
std
out
out
lea
imul
stc
clc
aam
lret
repnz
loope
rolb
test
out
nop
xchg
test
loop
in
sarb
repz
test
in
repz
loopne
in
mov
xchg
xchg
out
xchg
clc
test
cld
aad
lret
sub
cmc
cli
fiaddl
loop
in
sub
aam
lock
cmc
stc
cmp
ret
in
sti
lret
ljmp
ror
int
ret
enter
cmp
cld
fadds
in
jecxz
loopne
out
xchg
in
loop
div
shlb
cli
cmp
cmp
mul
fsub
mov
int3
out
into
fmul
jmp
repz
divl
xor
fxch
testl
jecxz
fcmovne
enter
test
testb
fnsave
lock
cli
iret
cmp
cmc
repz
testl
in
cmc
imul
rcr
test
aam
out
test
repz
sar
in
mov
loop
ret
fdivr
cmc
ds
cmp
iret
shl
leave
cli
aad
mov
sti
in
int3
out
in
xor
int
out
leave
std
shr
roll
sti
decl
mov
call
sar
aad
jmp
stc
cli
cli
icebp
loop
fsub
mov
loop
loope
out
iret
mov
jmp
fdiv
cmp
in
aas
leave
repnz
cli
hlt
cmc
sti
aas
rcl
out
in
mov
ljmp
out
out
stc
fcmovbe
hlt
call
cmp
jmp
in
sti
in
mov
enter
int
cmp
shr
xor
into
aad
into
test
xlat
iret
repnz
vpavgw
testb
add
mov
mov
jmp
int3
enter
lret
int
stos
test
dec
cmp
sub
movsl
add
leave
call
xchg
jmp
stc
cmp
icebp
cmp
lock
cld
repz
xchg
iret
cmc
jmp
ret
aaa
icebp
ds
fcmovbe
fdivrl
in
shl
inc
fstp
jmp
jmp
xor
out
cmpb
cmp
repz
out
not
test
lret
orb
out
clc
ret
into
fcmove
call
hlt
cmp
ret
sbb
jecxz
decl
mov
hlt
std
test
ret
cld
cs
sar
int
fsubr
rcl
cmc
cmp
in
loop
fdivr
into
jecxz
mov
loop
clc
fisubrl
cmp
clc
fsub
cmp
mov
in
in
cli
fstp
lock
lock
aam
fnsetpm(287
fstpt
cmc
cmp
repnz
cli
inc
rol
xchg
cli
sti
int
xchg
jmp
xor
cmc
jmp
cld
aad
rcl
mov
orl
ror
xor
xor
fsubrp
iret
cmc
in
cli
test
movl
jmp
mov
aam
lret
lret
cmc
ljmp
addl
jmp
loop
enter
xor
ds
jmp
sti
aad
loope
std
sub
frndint
lret
in
fucom
jmp
aad
cli
fsubr
adc
shl
out
orl
aas
jmp
enter
out
cmp
aas
sbb
out
mov
iret
lret
orl
xlat
cmp
shl
aad
add
les
fists
out
neg
repz
fldl
ret
clc
aad
mov
roll
hlt
ljmp
in
ror
ret
sti
rcr
test
fiaddl
xchg
in
jmp
aam
lret
aad
repnz
iret
std
sti
cld
ret
cmp
out
icebp
ljmp
fmulp
clc
in
cmp
std
mov
loop
repnz
aam
lds
cmp
testl
stc
test
mov
jmp
ret
sarb
cmpb
repnz
sar
out
mov
testl
rcr
lret
hlt
call
call
xchg
xlat
stc
loop
into
xchg
ljmp
cmp
in
loop
leave
hlt
std
xlat
int3
fcmovne
std
ror
cmp
fcmovnbe
iret
ss
in
rcr
testb
or
int
sti
in
int
mov
in
mov
div
cmp
ds
sar
fdivrs
mov
xor
clc
jmp
std
lret
jecxz
xchg
xlat
call
int3
lret
aas
hlt
imul
rcr
out
loope
aad
dec
out
sti
mov
sti
hlt
out
in
cli
std
cmp
hlt
fadd
cli
cmp
nop
loop
xchg
lea
in
ss
fdivp
fdiv
loop
aam
cmp
ret
int
orl
ret
icebp
aaa
std
sti
cmc
shl
test
stc
aad
test
out
jecxz
fmulp
mov
enter
dec
aam
int
aas
iret
aam
shl
out
jecxz
ljmp
mov
aad
ljmp
cmp
cmpb
std
sbb
lock
loope
repz
stc
cli
jmp
cli
int3
repnz
loop
out
lret
div
int3
lock
mov
in
xlat
into
in
ds
leave
out
or
fistpll
rolb
and
repnz
xor
cmp
lret
cmp
fdivrl
loop
mov
mov
xor
call
cmp
rcr
repz
fmul
in
in
fiadds
jecxz
call
lds
aaa
push
shr
sti
into
lock
cmc
sub
mov
in
lea
sub
idivb
rcr
cmp
int3
xor
out
out
std
call
faddp
cli
or
out
int3
enter
repnz
jmp
jmp
xor
test
ds
in
in
fsubr
out
int3
std
int
shll
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
cmc
in
int3
jmp
rcr
cmp
inc
out
aam
addb
loope
loop
iret
xor
fcom
sarl
loop
into
call
loope
lret
xchg
shl
out
xor
test
rcr
repz
ds
xlat
fdiv
ret
int3
jmp
int
test
out
fsub
ss
fcmovu
cld
cli
xor
out
aad
lds
fsqrt
test
repz
mov
ljmp
fistpll
in
icebp
fcmovne
aam
ret
jmp
and
mul
fcom
aam
neg
int3
out
roll
std
mov
mov
jecxz
rol
aam
aaa
fiaddl
out
dec
mov
int3
int3
sub
lret
in
testb
xor
loopne
int3
aam
fsubp
std
cld
mov
leave
in
jmp
addl
call
fcmovbe
cmp
in
fcom
icebp
decl
shl
test
cmp
call
cmp
orb
ret
fdivr
in
das
in
aaa
vcvtpd2dq
clc
leave
cli
cmp
cmp
aad
mul
cmc
fdivr
xchg
int
xchg
ffreep
out
fsub
out
fdivrs
div
fdivr
repz
enter
fnstsw
fiaddl
stc
aad
xor
ds
stc
fcmovb
iret
jmp
loopne
addl
lret
shl
jmp
aad
repz
clc
fadd
sti
aas
shl
jmp
ljmp
mov
fptan
neg
cmp
aad
rcl
fucomip
clc
ror
aam
rcl
xlat
cld
cld
cli
jmp
lea
ljmp
aas
in
std
rcr
fld
fcmove
fimuls
jmp
int
int3
aas
fcom
call
xor
rcl
clc
cld
fsubrp
call
nop
loopne
xchg
std
xchg
cmc
cmc
jmp
xor
aad
lret
fdivp
loopne
rol
repz
out
fmul
jecxz
fmul
xchg
lock
clc
repnz
fstp
iret
lret
sar
fcomip
xchg
fdecstp
aas
fiadds
jmp
test
out
fnstcw
test
fdiv
cld
call
loope
jmp
into
nop
xchg
out
cs
fcmovbe
test
ffreep
aad
faddl
stc
out
lret
cmc
fildll
xor
hlt
repz
int3
shl
out
icebp
aas
out
fucomi
mov
cmp
out
loopne
xor
cli
xor
aas
cmp
cmp
xchg
sti
iret
in
loope
das
xor
in
fcomp
jmp
shl
jecxz
ret
std
sub
loope
sub
iret
mov
into
aaa
fxch
sti
aad
add
frstpm(287
out
mov
dec
in
mov
mov
lret
int
xor
into
iret
sti
cmp
lret
mul
cld
in
rcr
les
fiadds
xor
cmp
int3
ds
out
int
out
not
aam
repnz
out
call
nop
test
xchg
int
leave
out
cs
out
int3
iret
fcmovnu
in
addb
idiv
mov
lret
cld
adcb
in
repnz
sti
leave
cmp
out
filds
fsubp
loop
xchg
shl
xchg
mov
call
out
leave
sti
clc
repnz
cmp
loop
in
mov
lret
cld
loopne
xchg
xlat
shl
ror
enter
ret
in
std
fsub
cli
cld
fcomip
xchg
loope
in
repnz
sub
sub
clc
rcl
sti
sar
rolb
lret
shr
test
out
jecxz
das
clc
xor
test
int
fnstcw
sarl
in
lret
jecxz
fsub
in
hlt
loopne
stc
aaa
std
in
cmc
or
cmp
repz
dec
stc
out
orl
cmp
cld
ljmp
iret
repnz
enter
fdivr
mov
rolb
xor
divb
out
cmp
rcr
loopne
adc
std
in
mov
jecxz
fistl
das
repnz
in
enter
jmp
iret
hlt
in
xor
mov
fisttpl
out
fadd
xor
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
dec
lret
fisubl
add
cmp
jmp
hlt
rcr
loopne
sbb
jecxz
mov
xchg
icebp
xchg
in
in
cmp
lock
cmp
xlat
leave
aas
lret
jecxz
in
test
sub
std
fsub
xchg
cld
repz
in
ss
icebp
sti
fsubr
sub
repnz
hlt
ds
lret
xchg
mov
sub
enter
cli
into
addb
in
rcr
in
neg
cmp
fucom
jecxz
aaa
in
xor
call
jmp
clc
addb
loopne
lret
xchg
nop
repnz
xlat
aaa
cli
cmp
in
lret
ror
loope
stc
filds
test
mov
out
ror
xchg
xor
jmp
sar
in
aas
xchg
mov
loopne
jecxz
out
jecxz
xchg
repz
shr
leave
repnz
not
cmc
ret
in
cld
in
test
shr
jecxz
in
fucomip
xor
leave
aad
loop
cmp
int3
in
mov
xchg
notb
cmp
lock
fcmovne
fmul
repnz
iret
aad
cmc
loopne
int3
in
jmp
aad
repz
in
cli
cmp
fnstsw
idivb
in
ret
inc
stc
lea
test
icebp
sti
xlat
jmp
into
cld
jecxz
fdivr
cld
test
in
out
fxch
out
std
icebp
shl
stc
div
hlt
rcl
rcr
aas
xor
into
sarb
mov
ljmp
cld
test
out
lret
xchg
repz
repnz
xor
into
ret
fcomip
xchg
ffree
loop
faddl
in
iret
in
int
xor
hlt
out
leave
clc
aad
loope
repnz
call
clc
fdivp
test
xchg
add
in
cld
sar
hlt
loopne
in
idivl
stc
ror
xchg
in
rorl
call
int3
int
adc
fnstsw
idiv
jecxz
in
nop
mov
jecxz
in
repz
lret
repz
sar
iret
loopne
jecxz
in
into
fstpt
out
jmp
sub
xor
int3
cmp
fdivr
call
cld
or
aas
out
loope
leave
incb
hlt
ss
cmc
cmp
jmp
ret
in
out
shl
aam
aas
lds
and
cmc
int
enter
icebp
iret
repnz
ret
test
cli
fisttpl
in
ret
lock
out
cli
lret
xor
cli
out
jmp
mov
mov
in
test
mov
int3
leave
not
aam
leave
out
cmp
shl
ds
cld
mov
mov
rcr
sub
cmc
into
call
test
out
xlat
aas
repz
stc
repz
std
jmp
mov
repz
lret
xorb
shr
aad
shl
loopne
std
sbb
cli
mov
loope
sar
out
lret
fiaddl
stc
jmp
std
aad
cli
out
out
out
xchg
xchg
lret
out
out
lock
out
lock
repz
fcmovne
xchg
filds
out
icebp
xor
in
xor
cmp
incl
enter
jmp
icebp
mov
jecxz
repnz
clc
fcomi
cli
clc
aam
loope
clc
fdivp
cli
lock
subl
xor
xlat
out
icebp
aas
ds
faddp
aad
std
out
icebp
jmp
xchg
lret
loop
xor
int3
loopne
cmp
out
lock
shl
aad
fcmovb
in
fmull
ror
ljmp
hlt
cld
sarl
sar
jmp
fcmovnu
stc
mov
sub
call
jmp
out
repnz
aad
fcmovnu
loope
rorl
out
jmp
into
out
xchg
imull
cmp
rcl
jmp
icebp
loop
shl
out
sub
loop
mov
xor
ljmp
repnz
clc
sti
aam
sti
xchg
cld
into
in
ljmp
icebp
out
hlt
in
cmp
lock
mov
cld
in
out
ljmp
lret
neg
aam
loop
lock
ds
leave
hlt
cmp
test
loope
shl
hlt
call
cld
clc
loopne
test
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
movsb
int
jle
movsl
add
iret
test
aad
loop
mov
in
cld
out
sti
addl
ds
cld
aam
loop
fiaddl
xlat
mov
sti
xlat
mov
repnz
fcmovnu
sar
lret
ds
repnz
neg
jecxz
in
mov
cli
icebp
mov
into
xchg
aam
loope
stc
xor
ds
cmp
std
fcmovu
fcmovb
stc
test
mov
fucomi
xchg
loop
ljmp
shlb
in
clc
rolb
repnz
call
iret
sti
xchg
iret
xchg
loope
rol
fcmovne
hlt
shr
fmul
imul
ret
repz
idiv
xchg
testb
iret
test
repz
jmp
cli
jmp
repz
iret
xlat
xor
hlt
jecxz
shl
in
in
out
jecxz
xchg
call
xor
in
idiv
icebp
sar
shl
aas
repnz
out
rclb
icebp
cmc
cli
out
lret
loopne
aam
loop
ret
clc
in
push
lret
out
fistl
leave
ror
jmp
cmp
repnz
fsub
cmpl
sub
fucomip
loopne
xchg
leave
out
lret
fdivs
in
loopne
loop
idiv
rcr
ljmp
decl
in
not
out
std
fsubrp
fldlg2
idivl
xlat
fst
in
mov
out
call
icebp
int
ret
les
aad
xor
xor
hlt
cmp
into
rcr
shl
jmp
test
jmp
fildl
xchg
lret
in
cmp
fstp
sti
repz
aaa
shl
addl
in
in
lret
in
test
ret
idivb
lret
cmp
out
idiv
roll
in
cli
leave
shl
repz
call
rcr
cmp
sti
in
fstpt
sar
cmp
ret
fiaddl
lock
xor
jmp
into
repnz
fistpll
adc
mul
jecxz
icebp
lret
or
out
test
sar
ljmp
aad
in
xlat
lret
enter
iret
icebp
in
fmull
div
call
cmc
mul
xlat
aas
std
icebp
sub
cld
mov
hlt
shr
xchg
lret
int3
repz
enter
jecxz
aas
cld
icebp
and
fsub
fmul
lret
in
std
mov
aam
fsincos
rcl
iret
in
fmul
shl
jecxz
rol
rcl
add
fucom
fiadds
rol
cmp
call
fdivr
rol
clc
hlt
aam
shr
out
fadd
out
mov
ret
xor
lret
shl
xchg
fdivr
icebp
hlt
test
lea
loopne
jecxz
cmp
into
fcom
cmp
cmp
les
stc
out
xchg
fcmovu
call
in
xor
fucomp
cmp
lock
fadd
loop
std
mov
cmp
jecxz
xor
loop
jmp
cmp
lret
icebp
rcr
movb
sub
xchg
out
call
iret
sarl
hlt
faddp
fdivr
mov
mul
in
cli
xchg
xchg
xchg
sub
ret
in
repnz
clc
repnz
and
cmc
cmc
int3
test
lock
aam
xor
iret
int3
fcmove
rcl
shr
repz
iret
xchg
mov
ret
int
or
repnz
sar
cld
vpsllw
cli
lock
fninit
icebp
stc
fabs
out
clc
fnstsw
loopne
mov
std
loop
mov
jmp
xor
stc
int3
cmp
repz
ffree
fcmove
test
fmulp
mov
lret
xor
imul
rcl
icebp
xlat
leave
hlt
lock
ret
orb
loopne
mov
iret
enter
imul
sti
in
cld
fcmovu
jmp
cmp
rol
fsubp
std
cmc
jmp
std
loope
ror
call
cmp
rcl
loopne
test
aam
fchs
enter
test
test
in
fdivrp
shl
not
cmp
out
fcmovne
leave
aas
sar
into
adc
ret
aad
movb
xchg
ror
stc
out
lock
jmp
cld
cli
in
xchg
xchg
loope
out
into
loope
mov
into
jmp
in
iret
cmp
hlt
cli
clc
shl
cli
repnz
test
jecxz
in
jmp
xchg
xrelease
lock
in
sti
lret
test
iret
cld
sti
rol
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
leave
fildl
in
jmp
xor
cli
fnstenv
repz
loopne
cmc
sti
faddp
jmp
ljmp
mov
cmp
cmp
sbb
div
in
cld
hlt
enter
icebp
jmp
loop
repnz
clc
hlt
fdivr
cmp
out
fucomi
aam
clc
cmp
addl
cld
xor
repz
in
ljmp
in
out
les
out
int
out
in
xchg
enter
into
into
xlat
fmulp
int
ret
call
lret
in
rcl
xchg
icebp
loopne
shl
clc
fsin
xor
loopne
fadds
sti
aad
mov
lret
in
mov
fcmovu
lret
ljmp
cld
test
addl
cmp
int3
sti
mov
cld
addb
sti
int
xlat
cmp
iret
addb
lret
test
nop
jmp
in
aad
fmul
std
jecxz
out
neg
xlat
repnz
fadds
mov
repz
jmp
stc
cmp
cmp
clc
loop
cld
in
lea
test
orb
lret
out
stc
repz
lock
ret
loope
xchg
jmp
jmp
xor
cli
xor
fcos
cmp
in
into
fdiv
cld
rcl
cmp
loop
xchg
in
loop
imul
ret
lret
into
aaa
int
loope
jmp
push
sti
loopne
out
mov
out
cld
jecxz
out
in
xor
sub
cmp
ror
aaa
cli
idiv
shl
iret
add
std
mov
out
clc
fucomi
mov
ror
in
enter
repnz
loop
loop
loope
repz
rorl
int3
out
aam
repnz
cli
hlt
hlt
aas
jmp
cld
loopne
loope
loopne
leave
jecxz
ljmp
adcb
ret
stc
xor
aam
aad
aas
idivb
xlat
in
out
mov
repnz
mov
lret
std
out
cmp
loope
fucom
xlat
out
ret
sar
stc
mul
test
fisttps
cmp
enter
cli
cld
cmpb
hlt
roll
cli
fucomi
cmp
iret
imul
ss
repnz
cmp
jmp
ret
ret
clc
mov
fcoml
mov
jmp
frstpm(287
aad
rcl
int3
sar
fadds
lret
xchg
std
into
jmp
int3
call
cmp
iret
sti
out
lret
into
cmp
rol
mov
jecxz
enter
jmp
int
orb
xlat
out
repz
loope
ret
fcmovb
jecxz
flds
in
fcmovnu
fdiv
mov
mov
xor
cld
rol
out
cld
cmp
in
in
lock
loop
enter
rcl
aas
and
std
mov
fnop
faddl
das
icebp
xor
shl
out
fdivl
int3
aas
in
in
stc
cmc
jmp
in
jmp
in
hlt
out
in
jecxz
icebp
out
lret
rcl
loope
in
out
leave
int3
xlat
mov
xchg
leave
sti
int
out
out
ret
cmp
aaa
ljmp
rcr
sti
push
hlt
jmp
mov
sub
iret
mov
ss
not
int
in
xor
ret
out
ret
fdivr
in
std
icebp
out
xchg
sarl
leave
icebp
fucomp
clc
xlat
lret
cmp
test
jmp
out
clc
fcomip
test
ret
lret
hlt
cmp
loope
loopne
in
rcl
ret
cmp
cld
inc
out
in
ljmp
leave
shr
neg
repnz
cli
sti
shl
ret
std
cmp
lock
mov
call
loop
leave
call
cmp
cmp
ror
jecxz
in
imul
ret
fildl
cmc
cmp
cmp
fsubrp
shr
lock
rcr
aaa
fmul
rol
in
std
mov
ljmp
div
xor
cmp
cmc
cmp
incb
aam
cld
rcr
mov
test
loop
cmp
fcomip
sar
std
rcl
repnz
fcmovb
and
xchg
enter
int3
neg
fdiv
aaa
jmp
shl
sarb
xchg
ret
out
in
loopne
mov
jmp
aam
iret
int3
fst
outsl
fmull
push
adc
fwait
sti
jle
movsl
add
mov
enter
int3
fcmovnbe
repz
cmp
xor
repz
call
jecxz
icebp
cli
mov
out
test
sarb
lret
cmc
cmp
test
out
in
out
call
hlt
aaa
in
xor
std
lret
fbstp
repz
sti
mov
cmc
out
out
jmp
ficoms
sar
xor
aam
jmp
ds
iret
test
cmp
xchg
roll
rclb
not
out
ss
repnz
into
cmp
cmp
aad
repz
stc
leave
fsubr
lock
xchg
fisttpll
hlt
aam
cmc
fcmovnbe
in
shl
cmc
fdivrp
idivb
fiaddl
int3
or
out
fdivrp
hlt
xchg
ret
aam
stc
int
clc
in
cmc
stc
repz
cmp
cmp
fscale
mov
repnz
div
cmp
aad
and
xchg
fdivr
loop
sub
sti
in
aam
xor
test
iret
out
jmp
enter
lret
ret
jmp
out
lock
out
repz
rcr
std
loope
lret
in
fsub
mov
jecxz
repz
out
in
into
xor
aad
ror
fnstsw
roll
lret
jmp
xor
aam
lea
loope
fadd
jmp
repz
std
fldl
xchg
xchg
pop
int3
in
shr
jmp
int3
cmp
aas
repnz
aas
adc
call
lea
in
clc
xor
int3
out
cmp
xor
test
xchg
hlt
icebp
clc
cld
cli
in
in
call
mov
out
leave
stc
sar
hlt
aad
in
stc
rcr
xchg
jmp
out
repz
out
hlt
int3
ljmp
xlat
icebp
vcvttpd2dq
test
ljmp
orb
aad
cmp
in
rcr
std
jmp
out
lock
clc
jecxz
or
cmp
out
lret
int
mul
aaa
clc
repz
int
ljmp
cmp
mov
test
stc
xor
rcl
cmp
sti
cmp
out
div
cmc
fmuls
in
in
jmp
sub
clc
xor
stc
shl
test
clc
fdivr
enter
lret
in
icebp
repnz
neg
cmp
idivb
cmp
sti
fsqrt
adc
mov
test
fmul
mov
rcll
sub
out
repz
stc
cmp
cli
iret
cli
cli
fcomip
call
cmp
xchg
xor
out
repnz
xor
cmp
int3
aaa
and
in
les
fucom
movl
loopne
ret
cmp
in
test
xchg
leave
fucomip
call
loop
cmp
lock
cmp
or
xlat
out
fadd
fcmovnb
mov
test
repz
jmp
loopne
test
test
inc
ret
rcr
fadd
int
loop
xchg
test
std
int3
in
in
in
in
cld
ds
jmp
xchg
in
nop
xchg
sti
lret
xor
loopne
fildl
ret
loop
into
std
adcb
jecxz
in
cmp
xor
rolb
sti
xchg
in
stc
div
aaa
int3
cmp
repnz
aad
fcomip
addb
in
mov
loope
lret
sti
lock
std
ret
ret
cmp
fadds
int
xchg
xchg
hlt
cmc
cmp
in
fcom
sti
icebp
ret
inc
addl
repz
aad
cmp
clc
cld
fdiv
std
fsubrp
aas
fsincos
lock
aad
clc
sti
fdivr
stc
stc
loop
lock
in
ss
repnz
fcmovu
int3
sar
cmp
aam
shr
lret
nop
jecxz
int
lea
div
in
out
rcr
imul
ss
ret
fiaddl
out
in
loope
in
ss
not
int3
cmp
cmp
push
stc
rolb
stc
jecxz
mov
sub
or
iret
call
std
fcom
ret
loopne
mov
mov
lret
in
call
and
shll
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
inc
cmpb
add
out
sti
cmc
xabort
jmp
aas
stc
mov
fucom
clc
addb
out
xchg
hlt
cmc
rcr
sti
fcmovne
clc
cmpb
addl
mov
rcl
loope
lret
xor
cld
hlt
lock
sbb
loopne
faddl
jmp
loope
xor
cli
hlt
ror
cld
fcomi
jmp
clc
fcomi
fcmovbe
adc
test
out
into
ret
repnz
cli
cmpl
loopne
aam
test
fisttpl
in
nop
xchg
enter
fcmove
stc
aad
cli
into
xor
in
out
stc
test
out
loopne
sti
addb
xchg
nop
xchg
ljmp
lret
aas
rcl
test
and
stc
jecxz
movb
jmp
cmp
rcl
rcr
jecxz
repz
sar
jmp
mov
ljmp
xlat
shr
iret
out
cmp
cmp
in
mul
fadds
in
out
int3
xchg
adcb
clc
cld
fcmovnbe
lret
sti
cmc
out
loopne
ret
loop
out
out
lret
leave
lea
aad
mov
lret
cmp
xlat
aam
and
shl
repnz
cmc
cld
xlat
jmp
in
adc
loope
repnz
cmp
ds
cmp
sti
cmc
in
lock
into
leave
ljmp
xlat
repz
cmp
xor
fdivr
sub
rcl
out
fcmovnu
orl
fcmovb
call
adc
sti
std
div
ljmp
ret
xchg
cld
xchg
enter
cmp
cmp
shr
xlat
cmp
test
cmc
in
cli
faddl
mov
out
sar
in
shl
fucomi
ds
int
sar
leave
repnz
xlat
xchg
xchg
mov
lock
jmp
shr
clc
aas
test
call
ret
in
icebp
rol
lock
out
leave
cmp
in
fcmovnu
repz
call
out
mov
sub
fmul
cmp
fldpi
into
std
add
shl
cmp
lret
stc
jecxz
addb
hlt
out
fldlg2
xor
int3
lret
jmp
sti
iret
loop
addl
jmp
shr
out
fincstp
xor
sar
loopne
not
iret
fstp
aam
xchg
cli
fsubp
divl
cmp
out
ljmp
rcr
cmp
ds
addb
enter
xchg
out
icebp
ror
enter
in
lret
shl
out
jecxz
jecxz
into
jmp
out
xchg
int
ret
out
enter
shr
repz
loopne
aad
and
lds
ror
iret
filds
xor
out
fidivrl
stc
call
in
jecxz
adc
aam
in
out
movl
into
leave
cmp
fmul
cmp
fstp
aad
in
neg
movl
xchg
ss
cmp
sarl
fcmovne
fdivrp
stc
jmp
lock
cmc
or
jmp
leave
cs
jmp
aad
into
shl
ljmp
fxch
fmull
out
xlat
in
cld
rcr
idiv
ret
xlat
in
add
sti
fcmovnu
in
stc
call
loope
out
vpaddw
rcr
loop
shl
sti
fadds
orb
in
call
out
cld
fcmovnu
idivl
hlt
test
ret
test
std
iret
iret
jmp
icebp
xor
icebp
xor
int
hlt
shl
loopne
rcr
ds
std
mov
mov
int3
clc
xor
cmc
leave
out
fnstsw
jmp
out
rcr
loop
cli
fcmove
in
icebp
iret
mov
cmp
fnstsw
lret
cmp
lock
fdivrs
fucom
decl
mov
in
lds
out
cmc
faddl
shl
rol
jmp
fldl
into
decl
out
leave
fcmovne
xlat
lock
repz
ljmp
lret
lret
in
int
ror
rcr
xor
repz
lock
loopne
shl
clc
loopne
aad
loopne
loopne
loope
out
sub
jmp
fmull
test
add
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
dec
pop
call
movsl
add
loope
into
fsubp
xlat
xchg
xlat
jmp
ljmp
enter
rcr
sar
cmc
sbb
fadd
jecxz
cld
add
mov
out
aam
xor
divl
repnz
fldl
in
loopne
jmp
call
dec
jmp
fdivr
lock
cld
cmp
int
fcomi
cmc
mov
stc
stc
fmul
into
into
call
in
sarb
cmc
xlat
aam
into
cmp
int3
cld
les
leave
sub
fucomp
in
xchg
aad
lock
lret
rcl
into
enter
fnstsw
shl
test
neg
xchg
leave
jecxz
xlat
sti
ljmp
jecxz
lock
out
ror
in
aad
cmp
ret
test
test
mov
loope
mov
rcl
jmp
xor
cmp
hlt
repnz
ret
fsubp
roll
xchg
nop
mov
mov
loopne
ret
jmp
ss
sarb
shl
sti
rcr
call
fildl
ret
fucomi
xlat
call
in
hlt
cmp
cli
sti
int3
jmp
in
mov
in
mov
hlt
xlat
icebp
in
cld
cli
into
ss
jmp
fidivrs
rcl
stc
not
mov
fstp
int3
dec
stc
lret
aam
leave
jmp
aad
fsub
cld
aad
lret
jmp
enter
repz
hlt
in
std
cmp
rcl
sti
ret
jecxz
ret
int3
mov
fadds
xchg
in
lret
xor
call
repz
sti
jecxz
cmc
out
fldl
test
in
cmc
mov
out
rcl
cmp
ror
repz
std
sar
cld
in
hlt
cmc
stc
stc
xchg
ror
xchg
out
xlat
clc
jmp
shll
loop
stc
ret
std
fadd
inc
mov
mov
jmp
out
sub
aaa
jmp
cmp
cli
rorb
neg
loopne
fdivrp
into
iret
jecxz
lret
in
lock
rcr
stc
aam
in
cmp
fcom
mov
vpmaxsw
mov
mov
jmp
hlt
aaa
xor
cmp
clc
xor
test
decl
lret
in
ljmp
neg
clc
enter
imul
loop
cmp
aam
jecxz
jecxz
xchg
lret
roll
xor
jmp
leave
aad
jmp
fdivrp
loop
cmp
jecxz
lret
fld
clc
lock
cld
mov
cmc
cmc
xor
lock
clc
fabs
aam
cmp
addb
in
jecxz
nop
roll
fldl2e
iret
in
icebp
cmp
out
in
sar
fxch
in
ljmp
out
lret
xchg
out
ret
ror
iret
int
testb
out
cmc
out
int
nop
std
sti
test
aad
int
stc
cmp
ds
rolb
enter
repnz
sti
push
cmc
iret
loop
shlb
int
jmp
fabs
int3
loopne
out
sarb
repnz
xlat
ljmp
loope
int
jecxz
sub
aad
fld
jmp
cmp
cmpb
fcmovnbe
into
incl
ss
sub
aad
out
repnz
int3
clc
aad
stc
jecxz
bnd
fxam
xchg
fsub
xchg
out
iret
sub
xlat
lret
lret
sbb
loop,pt
cmp
cmp
incl
fstl
cmc
ss
icebp
rcr
shl
roll
lock
shr
cmc
int3
jmp
lret
rolb
repz
out
icebp
iret
std
jmp
xchg
hlt
icebp
shl
cmp
loopne
std
mov
adc
ret
call
rcl
sarl
cmc
loopne
ljmp
fsin
fsubp
fsubrp
shlb
repz
idiv
repnz
lock
loopne
add
fcmove
fucomi
test
in
or
loope
out
cld
jmp
clc
fnstsw
shl
rol
loopne
repz
xchg
int3
fxch
icebp
mov
adcb
shr
aaa
idivb
cli
shl
aas
hlt
or
mov
int3
in
int
mov
xchg
out
int
cmp
ss
iret
loope
in
fld
sbb
testb
mov
cli
jmp
cmp
rcl
xor
testb
mov
mov
jmp
ss
aaa
in
ljmp
cmp
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
mov
insb
nop
mov
movsl
add
jecxz
loopne
pop
clc
orb
int3
sti
lret
lret
not
cli
cmc
xlat
sar
mov
std
rorl
lea
ss
jmp
xor
cld
clc
fcmovnbe
in
div
aad
add
mov
test
sarb
jmp
out
out
aas
lds
mov
jecxz
out
fisttps
in
clc
cmp
int
fdivr
cmp
in
ret
lock
mov
fiaddl
fxam
jmp
rcl
int3
repz
rcl
in
rcr
faddl
test
std
lock
cld
xchg
xchg
jecxz
test
fcmovnbe
das
ss
in
cli
in
push
neg
roll
lret
jecxz
test
xor
cli
fcmove
icebp
repnz
clc
mov
sti
mov
sbb
cli
iret
sub
out
jmp
lret
repnz
in
repnz
xor
cmp
aad
fildl
int3
int3
ss
cmp
jecxz
ret
icebp
icebp
faddl
out
sar
shr
aam
in
ljmp
and
lds
repnz
jecxz
out
flds
call
f2xm1
fcmovb
out
xor
jecxz
cmp
neg
stc
in
fcompp
xchg
icebp
bnd
mov
clc
rol
fnop
sar
cmp
cmp
rcl
int
ds
xchg
mov
stc
loopne
int3
ret
fcmove
mov
out
xor
cmc
jmp
jmp
icebp
repz
cld
out
test
in
ljmp
shr
mov
sub
icebp
cmp
jmp
sar
xor
cli
fdivr
out
xlat
ljmp
xchg
xchg
xor
cmp
filds
fdiv
rcl
out
stc
into
rorb
loope
idivb
sub
out
int
sti
roll
fcmovnu
int3
into
or
loopne
lret
xor
sti
cmp
stc
call
stc
imul
icebp
sti
sbb
out
out
ljmp
stc
aam
aad
ror
cmc
adc
fdivp
lret
mov
in
xchg
fsubr
xchg
and
int
aad
ds
test
fcomi
test
test
iret
mov
icebp
sub
shl
ss
xor
flds
mov
loop
repz
lret
loope
aad
out
std
cmp
cmp
repz
in
call
rorb
out
sub
xor
int3
cmp
incl
fcomip
not
fsub
xlat
cli
std
sti
jmp
and
out
cli
sar
int3
fdivr
cmp
sarl
fcmovnu
repz
call
mov
xchg
cld
lret
leave
xchg
xor
out
shr
mul
in
idiv
fld
icebp
test
mov
fsub
xchg
in
out
into
cmp
sti
in
icebp
in
ror
fdivrs
out
mov
addb
ss
cli
xor
shl
neg
repnz
ret
fcmovbe
mov
xchg
rol
xlat
into
ror
int
cmp
rcr
fidivrs
out
clc
in
mov
orl
xlat
shlb
lock
cmc
stc
repz
fildl
cld
in
in
xchg
xchg
int3
xor
lret
loopne
cmp
iret
in
cmc
sti
cmp
ret
jmp
in
cmc
sub
ss
fcomip
repnz
cli
lock
movl
rorb
aam
cmp
div
rcl
fdivrp
ds
xchg
repnz
xchg
fucom
int3
shlb
ret
enter
in
in
hlt
rcl
sti
rcl
and
test
aas
addl
icebp
rol
leave
xor
fcmovu
in
sar
icebp
out
stc
roll
in
loope
sub
enter
clc
xor
ss
aam
mov
xchg
mov
loop
xlat
jmp
in
lock
in
iret
rcr
rol
fdivr
int
sar
addb
test
incl
in
in
ror
sar
aaa
dec
cmp
test
sar
sbb
out
mov
mov
out
xchg
hlt
out
sti
cmp
ss
int
lock
std
clc
rolb
call
clc
jmp
int
into
fst
das
inc
aam
inc
pop
mov
mov
movsl
add
lock
hlt
xchg
fidivs
cmp
xor
cld
fst
cmc
dec
xlat
sti
ror
mov
in
fdivp
mov
iret
out
clc
call
div
fsubr
sti
out
aad
ljmp
in
test
cmc
rcl
cli
aam
stc
fucomip
aad
fidivrl
icebp
test
test
xor
enter
cld
sti
out
cli
into
ret
and
cld
addl
leave
iret
out
lock
cmp
sti
fld
repz
loope
mov
test
xchg
leave
mov
shl
repz
sar
ror
les
enter
fiadds
rcl
enter
std
stc
icebp
cmp
in
sbb
test
clc
decb
adcl
cmp
std
test
cmc
ljmp
xchg
mov
lock
loopne
out
ljmp
in
call
shl
cli
hlt
out
and
ljmp
mov
int3
cmp
aas
xor
in
cli
stc
sub
in
in
cld
loope
lret
loope
jmp
aad
cmp
jmp
cli
fiaddl
aam
out
cmp
loop
loopne
icebp
lock
hlt
out
sarb
out
cmp
and
ret
jmp
ljmp
ret
ret
das
stc
fcmove
sarl
sbb
repz
and
int3
ret
std
adc
aad
clc
out
mov
cld
sarb
shl
loopne
aad
fadd
loopne
std
jmp
xchg
sbb
loop
int
ss
cmp
xlat
lret
sarl
ljmp
cmp
xchg
jecxz
mov
std
repz
xchg
fsubr
aam
aad
in
cmp
in
stc
mov
repz
loope
repz
loopne
loop
jmp
leave
cmc
cli
shl
idivb
int3
in
ds
orb
fisttpl
rol
into
fcmovnu
stc
in
cmp
ret
fst
test
hlt
dec
test
out
sub
mov
in
ror
xlat
fdivrl
xor
out
jmp
fdiv
out
in
fcom
rol
out
into
cmp
int3
xchg
lock
icebp
fsub
lret
in
shr
cli
cmp
fcmovnu
cmp
jmp
enter
lds
fstp
sti
fsubr
jecxz
cld
shl
test
in
mov
in
lock
shl
mul
in
fcomi
std
xlat
fcmovu
cmc
cmc
sbb
mov
sti
test
call
dec
call
rcl
rcl
fcmovnu
cmp
std
hlt
xlat
cmp
fld
leave
les
or
rorb
shr
into
stc
hlt
shl
cld
in
fucomi
lret
xchg
mov
cmp
leave
xor
ret
rcl
fscale
xlat
xchg
mov
sub
enter
cmc
cmp
dec
lock
cmp
inc
repnz
fldl
mov
in
div
in
ror
cmp
int3
cmp
repnz
vpinsrw
test
into
lret
xchg
out
lret
jmp
cld
jmp
dec
filds
loop
xor
imul
leave
lret
cmp
repnz
loope
xlat
fimuls
mov
xor
into
into
clc
fcmovnu
cmc
into
lret
mul
xlat
fcmovnb
aad
loop
ret
into
fdivrp
iret
xchg
xchg
xchg
lock
enter
into
cmp
in
in
enter
in
fcmove
loopne
xchg
mov
repnz
div
fsub
das
fdivr
jmp
xchg
mov
jecxz
jmp
cld
sub
rcl
das
out
aam
jmp
cmp
in
rcl
cld
int3
enter
loopne
std
mov
fdiv
shl
stc
cli
iret
jmp
clc
rol
fstpt
sbb
mov
out
int3
fldl2t
xor
cli
fmul
sti
fidivrs
jecxz
repz
mov
fucom
repz
sarl
xor
xor
fcmovnbe
int
ffreep
aas
xchg
call
mov
les
leave
fcom
icebp
xor
sar
fstpt
std
fcmovbe
xlat
or
fsub
sti
jmp
loop
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
fmul
int
call
aam
neg
fdivr
out
jecxz
xchg
int3
enter
jmp
xchg
iret
stc
jecxz
cld
out
xlat
cmp
stc
repnz
cmp
std
mov
int3
into
cmc
call
call
fdivr
in
repnz
out
ftst
repz
mov
enter
mov
xor
neg
cmp
cld
rcr
cli
rcr
aam
leave
fsubr
fmul
fmulp
loope
in
ror
das
shl
div
lret
int
ret
incl
xchg
xchg
rcl
ss
lret
into
rcl
out
clc
std
out
cld
test
out
fmul
call
stc
iret
xor
in
fdivrp
repnz
into
hlt
incl
mov
in
fcomi
aam
repz
xor
xor
clc
out
in
aad
out
loopne
ret
cld
ds
mov
jmp
into
lret
jmp
icebp
not
int3
into
rol
out
iret
in
out
fnstcw
lock
shr
lret
ljmp
lea
cmp
fcomi
loopne
out
hlt
loop
clc
ret
enter
lret
out
leave
xchg
fisttpll
int
fnstcw
shl
into
cmp
sti
not
imul
fsqrt
jmp
adcb
aaa
enter
aam
cmp
in
cmp
repnz
xchg
ror
fiadds
lock
xlat
fstpt
loope
in
fcompp
xchg
cli
jmp
sti
out
out
int
in
int3
xor
out
xor
repnz
loop
fdivp
hlt
shl
stc
lea
out
xchg
repz
sub
das
enter
aam
aam
out
repz
xchg
incb
xchg
orl
xor
sti
int
rol
enter
jecxz
repnz
in
stc
mov
into
in
jmp
into
into
das
stc
jmp
cmp
fstpt
clc
icebp
out
clc
loope
stc
mov
ljmp
aad
cmp
ret
fldl
in
ljmp
loopne
shl
xor
lret
aam
call
aam
repz
cmp
out
mov
fyl2xp1
xchg
call
aaa
aad
in
clc
clc
in
aad
aam
test
test
cmc
fucomi
int
mov
mov
mov
test
lock
int
aam
lret
shr
lds
filds
jmp
xchg
cmp
ror
cmp
stc
into
lock
ds
loop
loope
lret
in
cli
orb
out
cmc
jmp
cli
aad
cmc
rcl
xlat
cmp
fcmovnb
ljmp
out
mov
test
repz
clc
hlt
cmp
addl
xchg
popl
cs
cmp
into
hlt
xchg
loopne
rcl
incl
out
shr
rol
in
in
jmp
ljmp
loop
mov
call
out
mov
repnz
repnz
cmc
aam
div
cmp
in
test
sub
aad
mov
fisttps
shr
out
int
jmp
lock
xor
cmp
fiadds
out
in
into
in
out
mov
lock
lret
clc
ror
out
xor
imul
cld
xor
loopne
clc
loopne
jmp
call
aaa
enter
out
ljmp
ret
mov
sar
loope
rclb
repz
out
in
bnd
cmc
lock
aam
in
xchg
cli
sub
jecxz
ret
xor
out
hlt
jmp
clc
not
sbb
fst
out
rcr
test
mov
sti
ror
loope
divb
ret
cmp
sarb
cmp
loopne
fldpi
faddl
nop
in
and
xor
clc
fcom
int3
stc
in
shl
cld
and
jmp
clc
movl
stc
iret
in
shlb
iret
loopne
rcr
cmp
out
lret
loope
add
xchg
repz
fdivp
in
rcr
in
cli
jmp
int3
stc
cld
cld
ret
jmp
cli
inc
sti
cld
mov
in
fdivp
aad
leave
hlt
call
aad
fcomp
in
ret
in
repnz
in
jecxz
jmp
repz
jmp
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
repnz
movsb
test
jle
pushl
int3
in
rcr
aad
cmc
loop
loop
test
loopne
out
ljmp
icebp
enter
cld
xor
aas
in
cmc
ret
fadd
loopne
cmc
test
jmp
int3
out
xchg
ret
repnz
xor
bnd
fucomip
fcmovnu
ret
jmp
aad
xchg
leave
icebp
call
shlb
mul
in
hlt
lock
ds
jmp
sti
icebp
sti
testl
mov
jmp
jecxz
aad
repz
icebp
bnd
jecxz
fsubp
ffree
fcmovu
leave
lea
decb
int
jmp
repz
rcl
aaa
in
sbb
jmp
fildl
int3
out
cmp
loope
loopne
test
jmp
fcom
into
mov
xchg
xchg
loop
ror
in
xlat
xor
cmp
into
xlat
test
jecxz
mov
filds
repz
cmp
divb
std
ljmp
std
in
hlt
cld
cmp
in
fiaddl
fldz
out
and
cmp
or
cmp
addl
hlt
int3
in
int
loopne
in
repz
ret
or
rcr
xlat
out
sti
cmp
jmp
fneni(8087
ds
fadd
incb
stc
mov
int3
int3
in
shl
das
sar
ror
fistpll
stc
cld
repz
out
ret
cld
hlt
repz
fld
test
fstp
fildl
out
shlb
vpaddusb
in
sarl
fnstcw
loop
cmpl
leave
lret
fists
cmc
rcr
cli
int3
loopne
xor
cmp
hlt
repz
sub
xchg
and
xor
ss
aam
iret
aam
xchg
loope
lret
loop
in
repz
out
hlt
jecxz
repnz
ror
rcr
cmp
ret
call
stc
in
ljmp
xchg
out
xor
ret
in
sti
cmp
out
ljmp
icebp
std
ljmp
cli
jecxz
xchg
call
shll
cmp
ljmp
cmp
icebp
mov
xchg
int
cli
loop
jmp
loopne
xchg
in
xor
aaa
jmp
out
loope
cmp
cmc
fcmovnu
std
loopne
xlat
fcmovb
out
fldl2t
fdivp
test
call
cmp
sti
fld
aaa
loope
std
xchg
jmp
fstl
hlt
repnz
jmp
out
aad
fnstsw
rcr
leave
and
ror
iret
loope
leave
xlat
fdivr
fdiv
loope
xlat
jecxz
fcomp
iret
cld
fmul
test
sti
icebp
hlt
xchg
in
icebp
sub
lret
rol
fstp
cmp
aam
xchg
xchg
ljmp
jecxz
sub
in
fidivl
lock
lock
std
fcmovnu
loop
mov
mov
lea
cmc
sti
xor
lret
jmp
cmp
faddl
test
cld
ljmp
icebp
aad
clc
cld
repnz
in
loope
aad
dec
les
lret
hlt
test
cmp
lock
jmp
fnstcw
fdivrs
iret
xchg
or
fdivrp
xchg
out
xchg
icebp
cs
xlat
cmp
out
cmc
fprem1
aas
cmp
aas
fadd
fadd
sti
jmp
int
in
mov
rcl
lret
fdivr
not
shl
fdivp
ret
addb
lret
repz
loop
ss
lret
aaa
dec
lock
sar
out
sti
into
hlt
call
loop,pt
cmp
enter
jmp
vcvttsd2si
repz
in
fneni(8087
ret
in
ret
fsubr
enter
in
xchg
loopne
in
out
cmp
cmp
ljmp
lock
clc
cmp
mov
mov
jecxz
and
aad
rcl
fsub
fsubrp
cmp
inc
xor
rol
aam
cli
leave
test
iret
aaa
xor
xor
fcmovu
clc
cmp
sar
xor
jecxz
out
add
sti
fxch
in
out
rol
rol
in
xor
jmp
in
aam
xlat
in
cmp
cmp
mov
loope
int3
int3
test
repz
lock
fdiv
ror
ret
aaa
std
sarb
testl
adcl
bound
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
dec
mov
sbb
add
lock
cmp
loopne
cmp
flds
mov
mov
test
jecxz
xor
div
jmp
out
sar
aam
xor
aad
mov
hlt
fdivr
jecxz
iret
call
leave
aaa
fcmovne
fnsave
mul
cmp
in
roll
fstp
in
out
icebp
out
xchg
xchg
loope
int3
shr
ror
test
cmp
hlt
aam
mul
cmp
stc
fdivr
ret
leave
in
shl
divb
fadd
xor
cmp
icebp
fdiv
xchg
shr
cld
clc
xchg
aas
ret
xchg
std
mov
test
loop
sti
out
sbb
test
lret
lret
in
adcb
in
into
loope
cmp
in
loopne
fadd
jmp
jmp
stc
loopne
incl
sti
xor
aam
cmp
loope
jmp
sti
out
sbb
ret
out
test
nop
test
ljmp
sarb
fcmovnu
ret
ret
out
repnz
lea
cmc
fisttps
in
out
shl
fdivl
aas
ror
rcr
incb
sti
out
nop
mov
rol
fcmovb
xlat
xor
fadd
rcl
rol
xchg
mov
aam
stc
in
fsubp
in
test
aaa
rcr
in
cmp
cmp
lock
aam
fiadds
addb
xchg
ljmp
mov
fdivrs
xorl
clc
fdivp
rcr
hlt
loop
aam
out
fdivr
repnz
add
mov
aas
fldl
in
neg
cli
fucomi
leave
fneni(8087
ret
hlt
fsub
fstp
call
mov
and
jecxz
cmp
fadds
loopne
cmc
fcmovu
xchg
test
and
int
aam
or
loop
mov
fyl2xp1
xor
out
jecxz
call
loop
xor
shl
fcmove
loope
fcmovnu
xor
rolb
cli
fldpi
lret
std
sbb
out
xlat
test
in
ffreep
lock
add
repnz
xchg
test
in
test
in
ret
into
cli
repz
test
loop
int3
ljmp
nop
lock
hlt
int
int3
imul
stc
cmp
roll
rcr
cld
enter
xchg
jmp
lock
repz
xor
xor
shl
pushl
clc
lret
in
addb
mov
rolb
aad
lret
cmp
cs
aas
icebp
fnstsw
std
sbb
std
loope
xlat
leave
out
mov
shl
cmp
ret
hlt
cmp
out
in
jmp
lock
fadd
out
fsubr
fcomp
and
xchg
in
xor
shr
call
leave
fsub
hlt
cmp
out
fcmovbe
flds
fmul
roll
jmp
jmp
cmp
fsubp
rcr
in
stc
repnz
sub
out
xor
xor
fdivl
jmp
hlt
jecxz
test
neg
repz
int3
int3
fndisi(8087
mov
in
out
call
out
aad
into
loop
in
test
aam
lret
ret
flds
xchg
mov
jmp
enter
lret
icebp
cmp
loop
aad
addl
loope
call
imul
das
test
cmc
repz
aad
faddp
mov
xchg
lret
or
lock
icebp
cli
icebp
fidivrl
aas
or
loop
xlat
clc
fmul
int3
out
xchg
icebp
int3
mov
out
shr
cmc
fcom
cmp
loope
in
lock
fucomi
mov
enter
loopne
out
ret
sar
cmp
aam
aad
cmc
hlt
div
icebp
add
std
mov
mov
call
fdiv
cld
cld
icebp
cmc
lret
shl
hlt
std
leave
sti
cld
jmp
rcl
mov
xor
cmp
repnz
fdivr
in
hlt
inc
out
aam
xchg
xchg
mov
fucomip
jmp
cmc
repnz
fucomp
loop
ffreep
cmpb
sarb
repz
cli
int
ret
xchg
mov
fmul
in
ds
shl
out
in
cmc
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
mov
out
dec
cs
rcl
ror
repz
cmc
hlt
ftst
sar
hlt
sti
leave
int3
add
out
repnz
div
sub
in
xor
int
lret
iret
in
loope
repz
stc
jmp
ljmp
mov
mov
out
cmp
sti
in
lret
fdivr
rol
iret
icebp
loopne
xlat
in
mov
and
aaa
xor
in
out
ss
test
loop
adc
test
xchg
aam
aam
jecxz
fmul
lret
loop
in
cli
repz
cmc
jmp
jmp
ficoms
jmp
ret
out
xor
into
ss
test
mov
ret
lret
mov
sti
ror
into
mov
out
mov
xor
loop
ffreep
test
and
test
xchg
rcr
fsubr
cmc
xor
iret
shl
shrl
shl
out
cmp
in
repz
test
int
in
jmp
clc
enter
std
cld
cmp
in
lret
dec
cli
cmp
jmp
loopne
int
jmp
aam
in
lock
fdivl
cmc
dec
xlat
cmp
addb
repz
add
out
mul
sarb
aas
sti
ret
jecxz
cli
jecxz
jmp
out
xchg
jmp
lret
jmp
sar
iret
sar
out
out
repnz
sti
std
les
xchg
out
mov
fld1
in
fucomi
stc
aad
ret
ds
clc
mov
fdivrp
cmp
test
call
leave
xor
hlt
aad
aas
cld
aad
cli
aad
stc
sub
ret
out
call
call
ljmp
aas
shl
cmp
sar
or
iret
icebp
repnz
aaa
xor
fcmovnbe
cmp
cmp
xchg
cli
jmp
loop
int
fucomp
xchg
cs
jmp
cmp
cld
div
aad
test
xchg
out
fucomp
out
fadd
xor
repz
dec
into
idiv
xor
fadd
loope
sti
mov
ror
mov
out
repz
ss
jmp
loope
repnz
xchg
xchg
jmp
sti
leave
fsub
fucomp
or
out
xor
in
int3
hlt
in
leave
flds
mul
repnz
out
lret
mov
out
mov
aad
loop
in
xor
ds
iret
loopne
jecxz
imul
jmp
mov
leave
int
jmp
shl
aam
rcl
ret
in
ret
cmpb
mov
test
call
xor
call
enter
loopne
in
out
cli
std
stc
in
call
leave
repz
call
out
sti
not
div
xchg
out
out
fisttpl
mov
ss
clc
leave
xor
test
in
out
test
mov
stc
std
cld
loop
out
out
sarb
fmul
clc
lret
fdivrl
sti
fcmove
xchg
cmp
cmp
xchg
imul
repnz
xchg
loop
enter
icebp
cld
clc
cmp
rcl
out
imul
fmul
addb
fsub
loope
cld
xchg
in
cli
lock
jmp
out
icebp
rcr
cli
cld
fsub
ffree
fucomip
lret
nop
xchg
xchg
sarl
aam
std
jmp
into
cmp
xchg
lock
xchg
mov
lret
fcmovb
out
xor
repz
fidivl
call
stc
fmul
stc
jmp
stc
lret
icebp
out
sar
int
das
das
fcomp
call
shl
xor
shl
aad
neg
ljmp
xchg
iret
ljmp
imul
iret
aas
shr
std
cld
repnz
stc
std
xlat
sti
out
jmp
mov
adcb
cld
xor
shr
in
in
ret
sarb
ret
jecxz
xchg
xchg
xor
shl
cmp
aad
repnz
clc
ss
mov
shl
add
mov
fisttpl
call
fidivs
cld
in
ret
test
sar
stc
shr
call
test
xor
cmp
cmp
cmc
lret
fdivr
ret
shl
xchg
lea
int3
xchg
jmp
shr
shl
xor
ds
into
cmp
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
mov
movsl
jle
xchg
add
aad
faddl
ljmp
mov
clc
leave
enter
cld
ljmp
cmp
sar
lret
sar
fisttps
clc
xor
xor
out
dec
loopne
rcl
mov
into
enter
in
ljmp
in
aad
sti
cld
std
cli
ffree
sar
out
repnz
fcmovb
in
into
int3
test
addb
out
lock
hlt
stc
imul
loop
cmp
sti
fcom
sar
mov
xchg
rcl
test
ss
lret
fsubr
fcmovu
cmp
shl
icebp
loop
lret
leave
stc
jmp
into
xor
loop
into
stc
not
neg
int
faddl
loope
loope
out
std
in
nop
fucomip
call
call
cli
shl
stc
sti
xlat
sub
dec
out
call
out
leave
repz
xlat
fstp
jecxz
into
cmp
loope
int3
loope
popl
in
rcl
leave
cmp
sti
clc
cmp
repnz
loop
xlat
xchg
clc
lock
mov
xchg
sub
not
xor
loopne
stc
aam
fildl
inc
decl
into
sub
in
hlt
repz
in
hlt
rcl
fucomi
xchg
shl
mov
jmp
jmp
not
hlt
repnz
aam
iret
aam
test
rcr
rol
fildl
bnd
loop
xor
icebp
sti
div
int3
in
fdivr
icebp
cmp
orl
xchg
in
fst
in
jecxz,pn
ss
shr
cmp
out
aas
icebp
cmp
mov
fildl
shl
mov
aam
lds
in
enter
sti
rcl
xor
in
shr
mov
mov
mov
fildl
aaa
lret
not
xor
aas
fnstsw
xlat
repz
fcomi
enter
rorb
int
shr
aaa
icebp
fucomip
cmp
loop
cli
shr
xchg
xchg
jecxz
xchg
out
call
xor
mul
loope
loope
repnz
fcmovnu
loop
xchg
nop
loope
mov
shrl
rcl
fsubr
ljmp
testb
out
loop
out
idivb
icebp
xor
lret
faddl
cmp
std
lret
test
leave
fisttpl
jmp
fsubr
out
div
lock
xor
fadds
in
iret
fucomip
bnd
fldlg2
xor
in
fnsave
xor
neg
add
movb
loop
hlt
rcr
int3
hlt
repnz
not
cld
out
cmp
jecxz
ds
ds
mov
out
cld
idiv
out
adcl
sar
sti
loopne
int3
or
out
iret
mov
xlat
mov
fstp
fdivr
sub
loop
int
aad
out
cld
addl
test
fsubp
mov
std
nop
rorl
aam
leave
repz
into
fidivrs
in
ret
mov
fisttpl
icebp
cld
shl
xlat
not
fdivp
sarl
repz
loope
std
ljmp
xchg
jmp
ret
aam
lret
hlt
leave
aas
cmp
ss
sarb
xchg
leave
fcmovb
jmp
loopne
icebp
int3
aad
sti
shr
cmp
sar
cmp
icebp
std
ds
sti
fninit
leave
call
sti
loope
xchg
sub
lret
aaa
aas
cmp
jecxz
fucom
lret
enter
loope
loope
hlt
xor
fstp
fdivl
ds
shl
xchg
hlt
mov
ret
fdivrp
in
int3
in
repnz
loope
test
jmp
out
lret
ds
shl
aad
iret
jecxz
aas
enter
cli
fdiv
rcll
xor
iret
stc
jmp
in
int
cmp
rol
clc
loopne
repnz
in
out
std
mov
shl
ror
repnz
fcmovu
ljmp
enter
incb
out
iret
loopne
xor
out
aam
cmp
xlat
aas
jecxz
fxch
rcr
call
cld
test
jmp
out
xor
cmp
hlt
cli
aad
cmp
xchg
in
not
call
fucomp
adcb
hlt
xor
xor
sub
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
push
jo
test
jle
xor
ret
xlat
sar
dec
mov
int
xchg
leave
out
xor
sbb
out
jecxz
mov
ds
fisttpll
int
loopne
fdiv
icebp
lret
lock
ror
xor
cmpb
or
in
fists
ljmp
xor
ds
stc
orl
jmp
roll
fcmovb
jmp
aad
in
cld
loopne
std
in
ffree
fadds
enter
out
std
fucom
mov
lock
xor
int3
aam
lock
ret
out
rol
xchg
xlat
jmp
jmp
das
sarb
cmc
fsubrp
int3
fcmovu
in
fcmovnbe
inc
rorl
into
jmp
fmulp
jecxz
cmc
cmp
cmp
cmp
int
iret
cmp
loop
in
shr
aas
ljmp
shl
xor
loop
int
fstp
loopne
cmp
cmp
xchg
ret
leave
cli
orl
xor
ror
stc
fdivrp
xlat
sar
fadds
in
std
addb
out
das
in
call
cmp
aas
lock
out
out
test
lret
jmp
fxch
incb
out
div
cmp
iret
leave
cmp
xlat
hlt
iret
sub
hlt
cli
in
mov
aam
inc
mov
fnstcw
ror
loop
xlat
jecxz
leave
test
ret
and
in
xchg
nop
mov
lock
cmp
bnd
ret
test
xlat
cli
xchg
lret
orl
lret
call
fstp
jecxz
test
xchg
rcl
call
xor
lds
out
aam
xor
rcl
leave
call
mov
xchg
xchg
into
sar
aad
jecxz
ljmp
in
cmc
loope
cmp
hlt
pop
xorl
into
into
fcmovnu
ds
sti
cmp
repnz
ffree
jecxz
fildl
jmp
shll
xor
xor
cld
repz
fadd
in
mov
cmc
dec
out
in
xchg
rorl
fmul
cmp
in
loope
addb
fdivrp
int3
int3
ror
jmp
int3
into
ljmp
std
sbb
in
aam
stc
xchg
fmull
nop
xor
fdivs
fcmove
into
mul
out
cld
loop
cmp
xlat
out
repz
clc
mov
in
in
std
xchg
fisttpll
in
shlb
fnstsw
aad
jecxz
int
fcmovnb
leave
out
ffreep
leave
into
adcb
out
xor
cmp
loop
rol
cmp
mov
int
xchg
lock
mul
aad
out
fsincos
cld
cmp
int3
cmp
ret
cld
xlat
stc
cli
fsubr
fcomip
std
nop
jecxz
xorb
xor
rcl
ss
cmp
aaa
int
in
in
in
clc
loope
fucomp
lret
in
lret
in
repnz
out
repnz
cmc
int3
aam
xor
aas
fnstcw
fiadds
enter
incl
mov
loopne
in
cmc
ror
xor
rcl
lock
stc
loopne
and
in
ljmp
loopne
jmp
xor
std
lret
icebp
clc
repnz
repz
xchg
fiadds
out
int3
repnz
aaa
jmp
icebp
cmp
stc
jmp
xlat
addb
test
std
xchg
loopne
fists
bnd
aaa
xor
fdivrl
fcmovb
call
sub
int
icebp
ljmp
or
repz
lds
neg
testl
das
xor
out
cmp
xlat
cld
stc
fldl
repz
enter
fldz
out
fcmovnu
xchg
into
xor
out
in
clc
out
shr
fnclex
cmp
rol
fcom
mul
fmul
int
int
lret
into
xchg
mov
jecxz
mov
xor
incb
in
stc
div
aad
ret
fxch
out
fstp
in
icebp
xor
clc
repnz
out
test
cmpl
mov
clc
std
ret
test
addl
cli
iret
hlt
xor
ljmp
ret
icebp
std
decb
or
test
div
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
cmpsb
or
scas
jle
xchg
add
jmp
enter
cli
sti
rcr
loope
aas
aas
int
xchg
add
mov
jmp
mov
loopne
test
aam
cmp
ljmp
stc
ds
sarl
clc
inc
fcomi
int3
lret
mov
xor
loope
hlt
ss
lock
cmp
aad
fidivrs
stc
aad
fcomp
fimull
ror
xchg
xor
in
das
jmp
adc
stc
sti
in
mov
test
addb
lret
in
in
int3
jmp
cmp
idiv
xlat
loop
in
fildl
repnz
xchg
xor
sub
xor
hlt
jmp
repz
jmp
in
out
fucompp
jecxz
out
xchg
out
shl
cmp
or
rol
loop
std
sti
mov
aad
out
loop
out
iret
xchg
loope
vshufps
iret
int
shl
cmc
sti
loope
ret
mov
in
nop
jecxz
mov
fildll
lret
stc
in
cmp
int3
rolb
cmp
fadd
jmp
jmp
loope
cmc
iret
out
sub
in
leave
iret
shr
shl
cli
ljmp
sti
orl
fcmovbe
cld
loope
jmp
in
xor
fdiv
clc
clc
and
aaa
jecxz
addl
fsubp
xchg
hlt
shl
int
xor
lret
jmp
leave
repnz
repz
mov
cli
cld
stc
stc
clc
loop
mov
loope
in
out
in
into
fcomp
ret
hlt
stc
rcr
enter
mov
loope
loop
ljmp
icebp
aam
lret
rolb
sbb
repz
leave
notl
lret
repz
loop
int3
xlat
rcl
idiv
repz
into
aaa
fidivrs
cld
hlt
loop
out
ljmp
ljmp
lret
into
fchs
cmp
xchg
out
loope
neg
enter
dec
sub
aad
sti
sarb
clc
sti
sarb
ror
aad
test
mov
std
aad
test
addl
lret
out
fidivl
ss
pushl
in
jecxz
icebp
fcomi
loope
in
repnz
ret
repnz
call
sar
cmp
cli
jmp
out
mov
cli
fdivrp
int
mov
sub
shl
sub
lret
call
stc
cmp
aam
div
leave
ljmp
shrb
fcmovu
ror
iret
neg
cli
jecxz
fnsetpm(287
xchg
ret
jecxz
icebp
loop
adc
aam
xor
idiv
xlat
rcr
repz
fcomp
out
fcmovb
xchg
repz
loope
incl
adcl
out
shl
fstpt
neg
sar
fneni(8087
dec
nop
in
into
idivb
xor
shl
mul
in
loopne
fdiv
call
jecxz
sub
call
loopne
iret
aam
ror
leave
cmp
repnz
call
loope
lret
fiaddl
xor
in
in
jmp
cld
ret
sti
fldl
fsubr
int
loopne
xchg
xor
sti
cmc
fdiv
in
out
in
rcl
jecxz
rorl
out
cmp
lock
ret
das
lock
shl
iret
aad
cmp
in
addb
lea
in
movl
aam
in
ds
repz
out
repz
int
jmp
out
jmp
int3
neg
cli
loopne
std
sti
cmp
shl
adc
testl
repz
stc
cmp
cli
lock
iret
test
shl
xlat
mov
sbb
loope
into
rolb
in
in
xlat
hlt
rcr
loop
cmc
cmp
testb
int3
lret
and
hlt
in
shl
cld
shr
cli
cmp
loopne
ret
jecxz
out
enter
repz
into
loope
cmc
sar
lock
fcmovnb
cmp
cli
fdivr
xlat
enter
xchg
call
mov
in
fcmove
xor
fadds
cmp
mov
mov
rcl
aaa
lock
jmp
xor
stc
out
xchg
cld
in
stc
fadds
shll
das
out
in
repnz
cmp
ds
in
iret
jecxz
mov
mov
sti
addb
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
xchg
jg
lds
add
ljmp
jmp
cli
in
div
xor
ror
std
ds
jmp
fcmovne
mov
nop
repnz
roll
iret
out
aam
shl
ret
ret
clc
test
lds
sti
into
incb
in
in
xor
out
icebp
loopne
shr
repz
lret
loopne
loope
mov
out
rcl
in
in
cs
fstpt
aad
aas
out
aas
cmp
call
out
std
loop
and
ljmp
loopne
in
loope
ds
mov
addb
fucom
loopne
sub
in
out
in
jmp
shl
push
test
and
clc
fdiv
xchg
xchg
xchg
aad
clc
leave
int3
cmp
fcmovu
cli
aad
aas
in
fcomip
call
fadds
fucomi
in
iret
aad
iret
in
xor
aaa
std
lock
std
ret
cmp
mov
sti
jecxz
out
cli
enter
call
xor
in
int
cmp
aad
fld
lds
jecxz
out
in
out
loopne
repz
in
leave
icebp
cmp
hlt
aad
cmp
hlt
rcl
aas
rcr
hlt
cli
imul
fsub
fcmovu
ror
loop
jmp
cmp
hlt
shl
aad
fcomp
loope
cmp
cld
fld
cmp
orl
rorl
into
imul
shr
sub
iret
sarl
hlt
fucompp
incb
out
out
out
rcl
out
ror
out
xlat
loopne
les
rolb
test
mov
fmul
shl
sub
lret
icebp
repz
cmp
test
repz
rcl
sar
mov
fdivr
iret
call
loopne
ror
jecxz
ss
cmp
idiv
in
aas
in
loop
xchg
lret
xchg
shl
clc
ret
cmp
cmp
cmp
cld
loopne
sbb
jecxz
inc
mov
test
out
xor
aam
int
aam
out
loope
in
aam
cmp
rcl
cli
int
leave
int
mov
aad
in
fcmovu
shll
std
in
stc
aas
cmp
lds
sti
aam
cli
mul
addl
cmp
in
out
cmp
jecxz
loop
cmp
fnstcw
call
test
cld
mov
lret
sar
sarl
loopne
jecxz
dec
rcl
out
sub
into
mov
out
out
in
out
shr
into
lock
fistpll
sti
aad
stc
loope
mul
stc
mov
sub
mov
jmp
out
call
cmp
in
hlt
mov
fcomip
xlat
mov
adc
in
call
fdivp
repz
movl
in
repz
ss
imul
fdiv
clc
cmp
in
loop
les
idiv
ret
out
call
test
fldl2t
mov
lock
shr
in
int
loop
adc
cmp
cmp
loopne
fsubp
xchg
xor
fsubrp
loope
loopne
in
ret
test
fdivr
in
and
sub
int3
rcl
repz
aam
filds
fcmovne
clc
out
dec
mov
out
xchg
rorl
xor
lret
aaa
ds
cmp
aad
loope
addb
mov
sti
xchg
icebp
xor
repnz
leave
mul
fdivr
xchg
lret
out
iret
fsubrp
icebp
mov
clc
sti
hlt
cmp
fbstp
clc
loop
out
test
sar
leave
in
decl
cld
xor
clc
das
xor
call
jmp
out
rolb
std
loopne
dec
mov
in
ss
hlt
cmc
shl
clc
std
ss
sar
sti
ds
hlt
lret
mov
test
das
out
shr
shll
cld
aad
aam
cmp
sti
clc
ret
aas
fmull
cmp
adc
mov
call
aad
cmp
ss
repnz
iret
add
out
jecxz
dec
or
add
add
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
in
mov
jle
add
leave
mov
test
xchg
jmp
enter
out
sarb
rcr
aad
and
cli
stc
loop
in
sti
sti
mov
xchg
shl
ret
div
cld
leave
fstpt
rol
aad
jecxz
fnstcw
cmc
shl
rclb
xor
in
fsub
out
test
lock
ret
rol
fcmovnu
test
leave
jmp
cli
cli
cmp
aas
loope
iret
cld
fsub
inc
loope
enter
jmp
aad
shl
hlt
xor
in
das
repz
cli
cmp
into
aad
xchg
jecxz
ret
xlat
test
cld
jecxz
test
test
repz
loop
fnstenv
fsubr
cmp
int3
inc
xlat
ds
testl
test
xchg
int3
jecxz
sub
out
lds
hlt
int
out
int3
icebp
hlt
addb
mov
fldl
in
jmp
leave
shr
xor
in
fcmovu
xor
jecxz
clc
in
cld
adc
std
test
in
cmp
lret
jmp
fdivr
rcl
out
aad
clc
fsubr
out
loop
int
hlt
mov
jecxz
aam
cmp
sar
fdivrs
xlat
cli
in
mov
lret
decl
out
iret
out
in
xor
xor
std
loop
shl
cld
mov
sbb
icebp
xchg
in
shl
in
out
cmp
cld
fnstcw
xchg
test
or
call
int
into
lock
lock
cmp
out
out
sti
lret
aad
inc
cmp
clc
stc
int
loopne
rol
iret
bnd
iret
rcl
repnz
neg
aam
fsubrp
in
lock
xchg
clc
aam
cmp
out
aas
xor
xlat
cli
in
fadd
xlat
idiv
loop
xor
mov
int
shr
xor
xor
iret
not
shl
in
repz
loopne
fld
addb
jmp
cmc
clc
out
fidivrl
jmp
fcomi
fmulp
cli
int3
out
addb
mov
iret
fsubr
out
shr
ljmp
fdivr
incb
cld
test
jmp
shl
leave
int
xchg
xor
das
out
lret
vpmaddwd
loopne,pt
cli
cmc
sti
mov
in
iret
loop
in
rcl
neg
int
int3
xor
cmp
iret
faddl
addb
mov
ret
sub
int3
stc
cmc
leave
ss
loop
in
and
ljmp
decb
and
neg
out
xlat
sar
icebp
cmp
jmp
test
cli
mov
test
jmp
fnstsw
cmc
aaa
ds
sbb
roll
lret
call
loopne
in
lock
lock
in
fdivr
leave
rcl
lock
cld
out
out
mov
cli
iret
jmp
icebp
xorb
cld
cli
idiv
loope
in
cmp
mov
repz
out
cmp
in
idiv
aad
std
adc
repnz
lret
sbb
std
cld
sti
rcr
sar
rol
cmp
enter
fmul
icebp
fsubrp
iret
leave
shl
cmpb
fucomip
adc
call
lock
fcmovbe
cmp
lds
xchg
mov
loop
inc
xchg
fcoml
loope
rol
in
ss
shl
les
aam
std
ljmp
jecxz
out
ret
int
leave
clc
fdivr
fucomi
filds
loopne
neg
shl
inc
not
hlt
loope
aaa
aaa
into
ss
cld
adc
sar
xchg
xor
xlat
lret
enter
test
sar
cli
into
hlt
lret
aam
adc
aas
aad
int
into
int3
xchg
icebp
test
rcl
shr
out
call
fcmovnu
rcl
fld1
fcomip
leave
mov
decb
jmp
xor
ss
fucom
stc
ret
out
test
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
jle
aas
add
filds
iret
cs
cmp
xor
idivl
adc
cmc
rorb
mov
in
iret
fadd
fsqrt
shl
cld
cmc
out
in
fmul
sarl
aam
in
mov
jmp
fcmove
jmp
std
test
ljmp
cmp
icebp
stc
out
add
call
aas
fstl
into
call
xor
xlat
cmp
in
aas
aam
aad
out
std
sti
ljmp
leave
ss
cmp
cld
std
sar
addl
icebp
out
add
xchg
repnz
cli
lret
fsub
cld
cmpb
faddl
jmp
jmp
jmp
lock
xor
int3
int3
jmp
idivl
out
cmp
lock
in
jmp
call
ljmp
fdecstp
ljmp
aas
cld
std
enter
out
dec
loopne
into
xlat
loope,pn
fcmovnu
aam
jmp
clc
loopne
fcmovbe
in
aad
hlt
into
int3
xchg
test
in
lds
clc
call
sti
aas
aas
sti
rcl
test
jmp
cli
out
lock
jecxz
fdivrs
xor
int3
dec
into
std
fscale
aam
enter
cmp
in
lock
shl
icebp
xchg
div
aam
xor
sti
jmp
xchg
neg
test
loopne
sti
jecxz
fimull
in
xor
iret
clc
out
lret
cmpl
loope
jecxz
cld
in
fsub
sti
int
cld
lret
into
call
enter
rcr
cmp
ds
out
xlat
xlat
in
loop
lret
repz
loop
test
out
out
jmp
hlt
in
ret
ffree
clc
in
enter
stc
fucomp
fstl
ret
fnstcw
sarb
repz
in
and
test
out
xor
int3
aaa
cmp
repnz
loopne
fcmovnbe
cli
cmp
aad
cli
out
sti
test
xchg
mov
hlt
shl
cmp
call
adc
sarl
xlat
fdivp
enter
out
mov
ret
icebp
xor
jmp
or
in
fsincos
repz
mov
adc
in
sbb
loopne
mov
hlt
out
in
fmulp
jmp
xor
cmc
repnz
xchg
cmp
enter
mov
fldpi
call
cmp
fcmovne
call
lret
mov
iret
xchg
fbstp
lret
in
int3
ljmp
int
rcl
xchg
xchg
lret
fiaddl
rcl
mov
fdivr
stc
in
fidivl
std
cmp
rcr
cld
cli
iret
jmp
lea
sar
test
cmp
in
int3
jmp
cmp
loopne
cmp
cmc
in
cld
xchg
in
mov
and
icebp
repz
aam
fcmovnu
xor
repz
test
aas
sar
fldl
leave
jmp
out
repz
cmp
in
loopne
aas
repz
fmul
out
cmp
call
out
sub
xor
cmp
repnz
in
shr
cmpb
sti
orb
shl
nop
in
test
std
neg
std
loope
incb
repnz
stc
in
int
fiaddl
in
leave
cli
iret
out
shl
cmp
lret
idivb
aam
fdivr
mov
std
xorl
repnz
cmp
inc
out
loop
hlt
in
loope
xchg
ljmp
cli
cmp
ljmp
aam
repnz
rcl
loope
fildl
mov
jmp
int3
hlt
out
out
sti
out
fucom
xlat
fdiv
sti
xchg
loop
xchg
xchg
jmp
jmp
lret
in
int
and
repz
fmulp
ret
vpsubsw
lock
xchg
nop
ror
div
aaa
rcl
out
sub
in
cmp
fsub
hlt
mov
inc
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
mov
jle
add
shl
mov
lock
xor
out
cmp
xor
jmp
cmp
shl
fdivp
stc
and
xchg
rorb
icebp
cmp
shl
jmp
cli
mul
cmp
repnz
and
lret
in
iret
int
shl
in
jmp
fucompp
repz
fdivr
ds
fidivrl
lock
jmp
sti
fdivr
loope
xchg
repz
fcomi
jmp
lret
shl
out
call
loope
loopne
ljmp
cmc
call
fcmovu
jmp
icebp
incl
out
out
repnz
xchg
imul
cmp
xor
out
out
repz
fiadds
shl
leave
sti
out
mov
out
mov
test
enter
ss
jmp
out
cmpb
ret
std
ret
test
loop
xchg
stc
ffreep
in
fsubrp
test
or
repz
aad
int3
cmp
sti
aas
sbb
lret
out
out
enter
test
repnz
fcmovu
leave
std
out
lret
sarb
shl
faddp
sbb
leave
fiaddl
dec
test
idiv
mul
lret
into
rcl
std
lret
xlat
sar
loop
cmp
out
shr
fiadds
lock
int3
repz
iret
repnz
fmulp
xlat
fcmovnb
cli
sti
aam
stc
ret
xor
jmp
fsubr
aam
xchg
loope
cli
sub
xlat
in
clc
into
test
cmp
fidivrl
loopne
stc
ljmp
loop
aam
repnz
sub
leave
repz
fadds
cli
test
lret
lea
loop
aam
shl
stc
out
out
shl
cmpl
lret
fstp
cld
xlat
sub
test
loop
loopne
in
aaa
xor
in
std
int
ds
cmp
repz
jecxz
loop
aas
jmp
std
mov
out
xchg
out
hlt
shl
fcomi
loop
in
ss
cmc
aas
hlt
mov
mov
repnz
xchg
int
leave
xor
out
sti
repnz
test
int
hlt
repnz
rcl
dec
in
int
nop
sti
enter
xchg
call
out
into
stc
shr
cmpl
aam
ret
fildl
ljmp
into
sub
sub
into
stc
fidivl
lret
sbb
rcr
filds
lea
in
vpsubd
lock
ret
xor
sti
jecxz
faddp
rcr
ljmp
out
jmp
loop
test
cmp
std
out
cmp
out
xchg
leave
aam
out
cmp
test
neg
les
leave
test
jmp
jmp
shl
out
icebp
cmp
call
cmp
rolb
xlat
ljmp
repnz
imul
aaa
fdivrl
icebp
lret
aaa
lret
xlat
icebp
shl
mov
loope
fcmovnb
xchg
iret
fnstsw
xor
jmp
iret
cmp
cmp
test
repz
icebp
shl
xchg
out
xchg
rcl
les
cld
leave
xor
rcr
std
aas
in
sbb
fsubr
xor
xchg
in
rcll
sub
xor
int
fcomi
rcr
ljmp
in
mov
in
lret
in
mov
das
jecxz
cmp
repnz
fnsave
and
fidivrl
in
test
jmp
out
cs
in
shr
dec
fcmovnb
iret
out
incb
xchg
fimuls
rcl
ljmp
xor
in
into
loopne
cld
cmp
fxam
icebp
repz
stc
jmp
in
jecxz
mov
xchg
adc
xor
xor
fcmovbe
not
clc
rcr
shl
sub
lret
enter
shr
jecxz
mov
cs
int
fmul
cmp
neg
jecxz
loopne
aam
in
jecxz
ffree
jmp
xchg
repz
divl
iret
lret
hlt
in
in
fcomp
clc
ret
rol
stc
ret
out
mov
test
hlt
sar
clc
fucomp
clc
in
cli
fdivrp
rcl
hlt
shl
frstpm(287
orl
add
add
add
add
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
lea
jle
aas
add
enter
xchg
in
in
call
xor
ret
adc
fdivr
repnz
lret
or
out
roll
clc
cli
fprem
int3
fcmovnb
int
rorl
int3
ljmp
xchg
lret
hlt
cmp
fnstsw
aad
flds
lock
jmp
out
out
in
mov
xchg
shrl
jmp
fcom
xlat
aam
sti
cmp
fiaddl
std
nop
xchg
test
xor
call
iret
std
clc
test
loopne
mov
loope
mov
out
xchg
into
cmc
mov
cmc
hlt
xor
ds
loop
test
mov
test
lret
jecxz
in
sti
std
cli
fsub
jmp
shl
fcmovb
out
imul
call
in
sub
icebp
fucomip
call
lock
shl
stc
sti
or
mov
stc
mov
loope
ror
in
cmp
ds
shl
out
lock
jmp
fmul
lock
enter
out
cmp
cli
out
aas
or
xlat
cld
in
xlat
in
repnz
hlt
lret
das
in
lret
xlat
fistpll
lock
in
aam
cli
loope
lret
ljmp
aam
xor
cmc
clc
icebp
in
sti
flds
xlat
rcl
fstp
jmp
out
mov
out
out
lret
cmp
loope
cmc
xor
cmc
out
out
fadds
ficoml
out
enter
cmp
cmp
in
jmp
in
cmp
sub
mov
xchg
test
int3
shl
out
cld
xor
hlt
ljmp
xor
mov
nop
int
jmp
hlt
int3
call
ds
iret
test
mov
leave
call
nop
loop
rcl
jmp
loope
lret
fcmovu
aaa
cli
ss
clc
aad
cmp
icebp
cmc
sti
cmc
aam
cli
in
nop
fucomi
mov
lret
xchg
in
in
out
sti
enter
fcmovnu
adc
xchg
loop
hlt
xchg
jmp
xchg
lret
loopne
in
xchg
clc
xor
in
jecxz
neg
repz
out
ds
in
faddp
cmp
fsubrp
iret
ljmp
into
int3
dec
cmp
iret
shl
add
ret
in
mov
loopne
lock
cmp
shl
shll
icebp
xor
leave
neg
aad
fprem1
loop
clc
std
adc
fdivrp
loopne
out
repnz
aam
hlt
xor
enter
cmp
fucomp
in
call
rol
out
out
stc
lret
out
int
icebp
iret
in
int3
in
repnz
xor
call
repz
fucom
sti
mul
mul
call
orb
in
lock
out
shl
repnz
cmp
repz
mov
loop
stc
std
test
div
lret
clc
ss
lret
sarl
aas
std
in
jecxz
aad
mov
adc
out
xor
xor
aad
jmp
sarb
cmp
orb
fistl
loope
int3
out
shl
xlat
stc
fsqrt
roll
test
loop
testl
xchg
test
xor
call
fdiv
fstp
mov
lret
into
orb
lds
aam
sti
int
int3
stc
lock
ret
loop
loopne
fucom
mov
jmp
xchg
aad
in
xlat
repz
repz
shl
out
call
enter
adc
aam
xor
int
cmp
cmp
sar
iret
fsubrp
aaa
rcr
lock
and
mul
adcb
rcl
in
cmp
fcmovne
shl
cmp
loopne
test
std
xchg
fsub
call
test
fisttpll
leave
ljmp
cmp
lock
add
xchg
clc
in
out
addl
rcr
cmp
out
loopne
aam
call
test
lds
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
xor
jmp
into
xor
repnz
cld
cmp
icebp
in
int3
lock
cmp
shl
cld
mov
lret
icebp
cmc
jecxz
rol
lds
fbstp
in
std
std
ds
adc
clc
jmp
call
enter
fcmovbe
aam
fptan
fsub
in
cli
mov
mov
addb
fcmovb
sti
clc
loop
cli
out
std
jecxz
rcl
mov
mov
fcoml
fdiv
shll
out
out
xor
dec
out
iret
aas
ret
hlt
jmp
jmp
lock
aam
cmp
shlb
aam
lds
lret
flds
out
loope
clc
fsub
dec
out
rolb
ret
cmp
call
xchg
in
aam
sub
aam
cld
out
cmp
cmp
cmc
call
testb
mov
loopne
in
out
int
xor
cmp
std
xchg
xchg
fucomi
fdivp
int
test
mov
fsub
test
cmpl
test
neg
ljmp
loope
fmulp
mov
xor
clc
hlt
repnz
rcl
xor
testb
xchg
mov
xchg
iret
loopne
test
loop
enter
sti
cmpl
ffreep
test
lret
enter
vprotb
test
xlat
aaa
cmc
ss
test
repz
out
lds
aad
out
out
int3
idivl
cmp
fcmovbe
sbb
rol
stc
sbb
jecxz
out
clc
int3
jecxz
test
jecxz
fmul
enter
repnz
cmp
jmp
test
rclb
loop
fdivrl
cmp
fadd
fcmovnb
jmp
fcmovne
std
jmp
adcl
xlat
cli
out
aam
std
ss
add
in
adc
xchg
loop
xchg
lret
xor
fildl
fcomp
hlt
jmp
int
cmp
loop
jecxz
shr
fcomp
repz
in
lret
lret
test
mov
mov
fucomi
jmp
shl
fmulp
enter
in
lret
aad
iret
shl
repnz
aad
clc
ret
mov
xchg
orb
xor
ljmp
cmp
cli
out
fdiv
inc
hlt
aad
leave
cld
xchg
ret
nop
out
out
out
shr
jmp
loope
ret
adc
into
jecxz
dec
lea
int
aad
int
hlt
int3
cmp
test
aad
hlt
add
test
shl
jecxz
enter
cli
cmp
fcomip
test
cmp
loop
lret
mov
orb
iret
in
in
xlat
clc
fdivr
int
lock
fcmovu
cmp
icebp
jecxz
dec
in
jmp
rcll
cmp
call
shl
cld
lock
faddl
xchg
push
test
int
xor
cmc
call
ds
aas
icebp
aad
loope
call
jecxz
leave
fiadds
loop
xor
or
loope
out
hlt
ret
xor
ror
xchg
icebp
test
in
aad
std
jmp
jecxz
sar
and
cmp
mov
out
icebp
jmp
fcmovbe
int
icebp
cmp
loope
jecxz
rcl
ret
fcmovb
fisttps
iret
xchg
aam
sti
cmp
aam
hlt
ds
mov
std
jmp
xchg
xor
fcmove
aaa
rcr
ret
fsubp
repnz
in
in
xchg
std
mov
int
enter
call
fdiv
aam
ror
in
loopne
mov
in
xchg
hlt
repz
sarb
xor
fsubr
fsub
loope
into
loopne
sub
idiv
fdivr
cmp
fisttpl
or
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
data16
fwait
dec
jle
aas
add
out
test
jmp
xlat
call
loope
fdivrp
out
jecxz
iret
fildl
test
fisttpll
cmp
cld
sti
lock
and
jecxz
test
test
repnz
fdivrp
not
in
enter
leave
cmp
ret
xchg
aam
out
addb
xchg
ljmp
cmp
jecxz,pt
xchg
add
mov
mov
loop
in
out
das
in
call
cmc
rcl
hlt
jmp
fimull
xchg
xchg
loope
aad
fdiv
cmc
xlat
cmp
out
fbstp
inc
lock
sti
aas
mov
fcmovne
icebp
jmp
jmp
int3
int3
cmc
out
repnz
cmp
ljmp
fildl
idiv
in
in
call
rcl
in
cld
fld1
cmp
fldl
in
loopne
shr
call
jecxz
ljmp
jmp
iret
aad
aam
std
cli
rcr
cli
std
mov
fcmovne
in
inc
fmul
repnz
rcl
lret
sti
clc
rcr
cmp
rcl
out
rcr
in
mov
fmul
xchg
repz
iret
std
in
aas
in
xor
sti
fsubr
ds
aas
in
repz
into
out
and
out
sub
aad
ljmp
ds
fsub
cmp
and
stc
stc
xchg
int
mov
leave
ss
sti
shr
fndisi(8087
loopne
in
test
cli
xlat
cmc
mov
orb
and
mul
loop
fcmovnb
cmc
rcl
fcmove
sar
and
mov
mov
mov
int
mov
enter
ljmp
out
shl
loope
out
ret
ret
sar
fcmovnu
fildl
in
xlat
fdivs
out
in
fnstcw
out
xlat
fcmovbe
filds
aam
stc
jecxz
int
filds
aam
not
fcmovu
in
idivb
fcmovu
xor
stc
fmulp
loop
cmp
ljmp
cmp
fsubp
test
clc
fidivrs
shr
in
loopne
loop
shr
lock
jmp
mul
clc
call
shl
fldl
in
faddp
mov
jmp
mov
fucomip
vpaddsb
in
repnz
loope
hlt
shl
shl
add
sti
fcoml
xor
sub
cmc
fsin
cmc
loop
cmp
mov
xor
and
int
std
jmp
xor
ror
aam
ret
jecxz
xchg
div
ds
iret
mov
test
xchg
fcomi
lret
call
xlat
in
fdivrl
out
hlt
test
fcomp
nop
jmp
sbb
loopne
sub
idiv
aad
lock
aad
ss
repz
cmc
call
leave
out
in
rcll
enter
aam
lock
cld
std
fcomp
fdiv
mov
cld
ljmp
neg
cmp
out
aaa
fnstsw
aas
rcl
repz
out
test
jecxz
das
in
xor
icebp
lock
aaa
into
lret
lock
cli
aad
ret
or
out
in
out
xchg
jmp
in
leave
fmulp
ljmp
xlat
ret
jmp
cmc
mov
enter
in
leave
loopne
in
fnstcw
shr
cmp
repz
sar
fcomp
ds
shl
in
cld
xchg
test
out
in
icebp
lds
fcmovu
int3
xlat
imul
add
cld
sti
fcmovnu
loopne
lret
loop
aam
lock
jmp
xlat
out
fiaddl
in
test
jecxz
fucomp
xor
into
clc
xor
lock
fmul
clc
adc
test
fst
xchg
xor
bnd
xor
ljmp
jecxz
ret
out
fsubp
in
leave
lret
into
xorl
neg
aad
lock
in
aaa
fnsave
in
sti
cld
enter
aam
in
fisttpl
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
mov
push
sbb
jle
add
shl
xor
shrl
out
iret
stc
xlat
cmp
fcomp
cmp
test
out
repz
enter
loop
cmp
fcmovnu
repnz
out
sti
bnd
in
jmp
loop
cmc
loope
rcl
in
int
aam
sarl
add
repnz
jecxz
cld
aad
call
ljmp
ret
xor
stc
sti
cld
icebp
fld
loop
in
in
cmp
call
in
sbb
xor
out
enter
not
repz
icebp
jecxz
fiadds
loope
cld
leave
loope
xchg
int
xchg
ljmp
sarl
int
repz
cmpb
orb
loop
ljmp
clc
cld
ss
cld
sti
sti
mov
sub
cld
out
xchg
mov
xor
call
sar
sbb
idiv
cmp
neg
xchg
decb
rclb
int
out
fcomp
in
cmp
loopne
cmp
out
enter
test
out
cmc
test
std
lret
into
fcmovu
cld
faddp
cmp
test
xchg
lret
int
out
loop
rcr
stc
icebp
clc
ljmp
test
addl
xchg
out
imul
loop
fmul
hlt
std
ss
cmp
sti
leave
sti
jmp
std
out
mov
cld
aam
cmp
clc
repnz
ret
testb
lock
adcb
cmp
jmp
out
rol
neg
out
jecxz
not
inc
fucom
lret
hlt
out
lock
aam
mul
leave
clc
xor
int
sti
rcl
test
cmp
icebp
fsub
nop
repz
repz
rcl
out
xlat
repz
cld
loope
fcomp
fcmovb
roll
nop
repnz
call
out
cs
stc
fdivp
jecxz
xlat
aaa
adc
in
into
xchg
loope
fdivl
hlt
cli
cmp
fstpt
push
incb
fmuls
adcl
out
out
shl
cmp
aas
fabs
out
cld
in
fmuls
out
in
xor
ss
lock
cli
test
fildl
cli
mov
mov
in
out
nop
mov
icebp
aad
in
xor
fcmovnbe
roll
mov
cli
out
out
xchg
jmp
xlat
clc
int3
ljmp
sar
loop
incb
loope
mov
call
fnstsw
leave
sar
repnz
ret
icebp
aam
ret
fisttps
cld
ljmp
lock
call
aam
in
hlt
and
rol
icebp
shl
fsubrp
leave
fisttpll
shr
xor
cli
out
cmp
enter
fdiv
not
lock
test
leave
in
test
loopne
fstp
in
sub
in
rol
int3
fdivp
roll
addb
out
iret
lret
ljmp
aam
aad
out
in
lret
loopne
cmc
cmp
in
cmc
add
jmp
in
nop
int3
enter
xor
cmp
cmp
loope
cmc
in
and
ljmp
decb
stc
out
cmp
fnsetpm(287
aad
cmp
sar
out
lret
jmp
xchg
lock
ss
fcmovu
cmp
ss
aam
shl
std
out
repnz
xchg
jmp
aad
xor
ret
loopne
adc
cmc
fld
les
xchg
fucom
addb
sarb
repnz
fidivs
int3
repz
in
addl
xchg
fdivrs
repnz
cmp
icebp
jmp
inc
xlat
cmc
sti
faddp
loope
out
loope
sar
out
xor
in
fucomp
xlat
fadd
rcl
rcr
cmc
rcr
in
and
iret
lret
in
out
and
inc
hlt
jmp
ret
ror
ret
rcl
je
repz
sbb
add
xor
fprem
aaa
iret
ss
out
fcmovu
icebp
loop
out
out
mov
clc
imul
iret
out
sti
cmp
fsubp
aas
fcomip
lock
cmc
out
add
fildl
test
iret
aaa
aam
xor
loopne
rcr
mul
std
loope
clc
in
xlat
mov
loope
enter
out
cmp
xlat
cld
ret
aad
xchg
pause
into
aas
fcom
jmp
cmp
xchg
ret
fdivrp
sub
out
in
incb
adc
repnz
fucom
repz
icebp
ret
les
fadds
incl
repz
aad
call
cmc
stc
cmp
shl
sti
fmul
cli
fcmovne
jecxz
loopne
int
loope
xor
call
iret
jmp
fdiv
div
std
fpatan
lret
mov
in
adc
leave
cmp
cs
stc
fcom
in
repnz
neg
loopne
xlat
mov
jmp
fcmovnu
mov
mov
lret
in
jmp
sarb
rcr
test
out
lret
cld
out
loopne
xchg
xchg
out
in
ror
sarb
int
xor
out
idiv
int
ds
loopne
adc
mov
xor
test
into
imul
test
test
lret
int3
xchg
into
in
in
hlt
int3
hlt
ret
lret
fnstcw
fsin
icebp
iret
shlb
test
jecxz
loopne
rorl
pop
in
icebp
xlat
out
fcmovbe
loopne
aas
incl
shr
leave
inc
call
in
mov
ret
clc
enter
stc
clc
repnz
fucomi
cld
addb
call
adc
fidivl
stc
shr
shl
roll
xchg
fiaddl
xchg
test
xchg
sub
iret
in
in
out
lret
imul
aad
cli
clc
aaa
hlt
rol
int3
fcompp
nop
ljmp
ss
in
sar
icebp
sti
iret
ret
into
cmpb
not
jmp
mov
leave
ror
std
int
shlb
cmp
idiv
lock
roll
cmc
mov
loop
test
lea
imul
jecxz
aad
std
lock
repnz
out
addb
enter
shl
ljmp
leave
iret
xor
sti
aam
jecxz
movl
xchg
loopne
rcl
leave
into
ljmp
test
xlat
aas
xchg
leave
rcr
xchg
out
in
icebp
leave
out
out
lret
icebp
cld
in
loop
cmpb
loop
into
fucomi
xchg
into
in
lret
rcr
std
jmp
out
fadd
fadds
mov
out
in
lea
lret
cmp
aas
cli
sar
ftst
aad
cmp
ret
stc
out
lret
out
iret
rclb
iret
fmul
lock
lock
test
cmp
test
jmp
test
xor
std
cmp
in
lock
aam
and
test
xchg
fdivp
shr
ss
fdivr
out
cmp
shll
xlat
mov
in
mul
mov
jecxz
xchg
iret
xor
xor
lret
aaa
aad
out
fcmovnbe
rol
fst
xlat
xor
jmp
fsubr
jecxz
loop
iret
mul
cmc
shll
lret
sti
in
cmp
lret
fucomip
rcl
xchg
cmp
fcmovbe
lret
fimull
in
int
out
hlt
pushl
xlat
cmc
cmp
in
sti
aam
in
fmuls
fiadds
fdiv
lret
ljmp
rolb
cmc
in
loopne
int
in
hlt
ret
in
aaa
in
enter
enter
rcl
aad
ret
test
in
aas
out
in
in
fisttpl
int
aaa
xor
int3
aad
loop
cmp
roll
loopne
jmp
rcr
xchg
pop
add
add
iret
vpaddusw
fstp
pop
mov
outsl
and
or
add
cs
jecxz
enter
xlat
out
loope
shl
add
out
aam
mov
fldl
in
das
fst
sbb
testl
mov
fisttpl
call
lds
iret
cmp
fdivrs
hlt
cmp
fcmovnb
test
repz
mov
lret
repnz
aam
xor
out
fidivrl
ljmp
cli
cmp
aad
leave
int
out
mov
mov
cmc
mov
in
out
int3
fcmovbe
repnz
test
rol
leave
fdivr
mov
out
xchg
aad
xor
leave
jmp
ljmp
cld
out
mov
call
ljmp
int
in
xor
int3
rol
mov
loope
enter
xor
out
in
int
idivl
push
out
cmp
cmp
std
hlt
ljmp
lret
mov
lea
jmp
aam
leave
ss
sarb
shl
cmc
in
cli
xlat
loopne
test
xchg
test
lock
out
out
out
enter
int3
aas
leave
icebp
divb
aam
loope
mul
stc
int3
stc
lds
mov
mov
ljmp
cmp
ds
sar
fdivp
aad
loopne
loopne
loop
xchg
in
xchg
das
loopne
into
cli
xlat
stc
loopne
sbb
repnz
in
orb
add
jecxz
lret
repz
enter
cmpl
call
xlat
jmp
xchg
xchg
cmc
jmp
iret
ret
xor
aam
test
roll
std
mov
int
int
into
into
test
xor
fcom
xlat
sar
roll
adc
jmp
mov
fmull
lea
enter
fistpll
into
idiv
cmc
repz
int
icebp
int
sar
xchg
leave
ret
icebp
call
cmp
fldl
ret
aad
lret
out
sti
hlt
lret
icebp
lret
aaa
enter
lret
hlt
fsubp
loopne
enter
into
test
into
aaa
cli
iret
sub
cmp
fst
idiv
fdiv
xchg
xlat
stc
lret
out
fcomip
sar
int
xor
stc
repnz
sbb
adc
jmp
test
fimull
repz
fdivrp
lret
cmp
int
hlt
stc
add
mov
orl
in
repnz
xor
cmp
cli
cld
test
cmc
and
in
xchg
loope
repnz
jmp
ds
cmp
shl
ffree
jecxz
ljmp
orb
fmul
shl
call
shl
cmp
cmp
mov
out
clc
into
jmp
jecxz
int
out
cmp
cmp
rcr
faddl
fndisi(8087
mul
in
in
mov
iret
iret
jmp
fiadds
test
rorl
rclb
sar
cmc
int3
std
cli
or
adc
cmp
xchg
ret
test
test
out
loope
out
cmp
aam
leave
sti
icebp
shl
sar
test
cmp
fmul
lret
test
int
pushl
aad
leave
out
cmp
cmp
test
sar
cld
ret
enter
rorl
xlat
clc
out
sti
cmc
in
mul
into
fdivr
fnstcw
mov
in
call
lret
fadd
sti
cmc
cmc
xor
into
not
addl
out
lock
rol
call
int3
xor
icebp
xor
stc
iret
cmc
cmp
xchg
hlt
loop
and
loop
iret
mov
in
xlat
cmp
cmp
cli
lret
loope
lock
cmp
and
in
sbb
leave
mov
iret
in
jmp
icebp
call
aam
out
aam
ret
ljmp
mov
in
xchg
loop
jmp
fcom
xlat
push
xlat
outsb
shr
lret
lahf
pop
jle
aas
add
xor
leave
clc
jmp
fcom
roll
ljmp
leave
int3
lock
repnz
jmp
repz
rcr
repz
leave
clc
hlt
mov
decb
icebp
int3
mov
iret
cli
fucomi
aad
stc
leave
repz
ljmp
adc
cld
mov
mov
sti
or
loopne
int3
jmp
lret
jmp
loop
bnd
shr
hlt
out
mov
in
les
int3
neg
lock
repz
clc
shl
rolb
xlat
call
icebp
xor
hlt
rcl
repnz
repnz
xchg
rolb
test
cmc
xchg
xor
shr
out
hlt
out
hlt
fcmovnbe
shl
fcmovu
decl
cld
nop
fdivr
fmull
fcmovnbe
in
neg
cmp
sub
cmp
test
fdivp
loopne
fisttpll
out
out
int3
shr
aad
clc
addb
mov
int
out
in
cs
in
rol
jmp
ds
rolb
fucomp
clc
cmp
popl
aaa
enter
in
fdivr
fbstp
aam
loop
adc
jmp
loop
lock
loop
iret
cmp
vpsubw
shr
fdivrs
lock
fcmovu
ret
fst
fsubr
or
lock
in
int3
jmp
fcmove
out
leave
cmp
leave
std
fst
sarb
repnz
mov
nop
loopne
jmp
call
jmp
ljmp
fadds
fsts
mov
in
cli
cmp
cmp
int
fidivl
jecxz
sti
shl
and
call
fsubp
xchg
xchg
mov
lds
cmp
shl
cld
in
fldl
xchg
int
or
call
out
out
in
lock
cmc
shll
fiadds
in
out
flds
int
leave
out
lret
aas
xor
cmp
add
les
xchg
lea
ljmp
adc
div
repnz
int3
cli
hlt
mov
shl
sub
xlat
div
ljmp
xlat
shl
jmp
lds
nop
xchg
xchg
aam
int
fcmovu
fcomp
ljmp
mov
enter
mov
loope
loope
lock
test
cld
repnz
sti
flds
jmp
mov
int
filds
cs
cmc
aam
fdivp
hlt
cmp
cmp
rcr
jmp
out
std
in
adcl
xor
jmp
sar
fcmovnbe
fxch
roll
loopne
rclb
hlt
xor
stc
ret
out
fsub
cli
repz
stc
fcmovnb
fadd
fucomip
lret
adc
lret
cmc
in
mov
hlt
fmul
jmp
icebp
jmp
cmp
shl
and
sti
mov
in
xrelease
xor
incl
fsubr
fsubr
in
cli
clc
sti
out
jecxz
lret
shl
cmp
jmp
inc
jmp
sti
sarl
in
shl
fscale
imul
ljmp
call
icebp
mov
fnstcw
out
fstpt
stc
stc
aad
stc
out
fld
stc
decb
mov
xchg
in
icebp
enter
sti
and
hlt
repnz
fcomi
cmp
jmp
mov
into
icebp
loopne
fstl
rcl
hlt
ss
fucomi
xlat
xor
fcomp
test
fisttpl
aam
int3
not
les
fnstenv
fst
and
call
test
fisttps
xchg
icebp
in
in
xor
out
sti
sti
cmp
out
lret
ds
aas
aad
cmp
sub
mov
leave
jmp
xchg
mov
ror
xor
into
loopne
cmp
xlat
rol
out
sti
mov
lret
xchg
xchg
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
das
dec
lds
jle
aas
add
clc
ret
jmp
cmp
rcr
test
icebp
cmp
mov
fadds
test
repnz
fcomp
hlt
cmp
hlt
cmc
fcomp
out
cmp
std
mov
mov
mov
out
leave
in
das
cmp
cli
bnd
aam
idiv
ret
fcomp
fimuls
in
out
cmp
shl
fnstcw
not
cmp
aas
test
fsub
rorl
lock
imul
xor
shr
hlt
enter
cmpl
in
cmc
hlt
ffreep
sbb
in
out
mov
in
xor
cmp
ret
cli
out
loopne
std
int
movb
shl
xor
sti
in
lock
rcl
ss
icebp
and
aas
sub
repz
div
or
leave
into
jmp
cli
in
int
int
cmp
cmp
roll
fisttpll
out
xchg
lret
repnz
lret
cli
fsubrp
jmp
fcom
dec
stc
fdiv
rol
jmp
mov
cld
mov
loope
jecxz
icebp
mov
idiv
fucomip
shl
xor
cmc
mov
fdivr
mov
in
in
mov
fnstenv
repnz
in
loopne
int3
roll
jecxz
aad
lret
test
nop
iret
jmp
in
xor
in
vshufps
neg
jmp
sar
fndisi(8087
repz
or
mov
lock
mov
stc
ljmp
sar
adc
repnz
fucomi
ljmp
xchg
sub
in
fxtract
leave
rcl
idivl
sar
rol
aad
stc
adcb
ficoms
enter
call
fiaddl
std
mov
or
jmp
xchg
sub
enter
lret
ljmp
addb
lret
leave
test
jmp
idivl
std
clc
fcmovnbe
ds
std
les
in
hlt
int
cmp
cmp
ror
imul
out
faddp
xchg
and
mov
cld
shr
aad
cli
loopne
in
std
aas
ffreep
mul
out
ds
rcr
in
lea
int3
lret
icebp
cmc
loope
loope
sarb
not
mov
int3
into
cmp
repnz
shl
rcr
repz
lret
xlat
cld
int3
repnz
mul
fimuls
call
call
xor
xor
cmc
rcr
add
xchg
in
sti
lret
int3
out
ljmp
xor
fprem
cmp
repz
shl
aam
lret
or
repz
lret
in
in
loope
out
fdivl
rolb
aad
cmp
rolb
lret
not
xor
aam
icebp
repnz
fldl
rol
fldl2e
mov
repz
ss
lock
out
call
cmp
ret
mul
enter
aas
loopne
mov
mov
in
cmp
cmc
jmp
fnstsw
aad
loopne
aad
in
test
fsubr
mov
leave
xchg
in
fmul
shr
ss
lret
clc
lret
out
call
repnz
test
into
in
out
fmulp
in
jecxz
jmp
rol
repz
std
faddl
sti
call
mov
xor
sub
repz
aas
mov
fsubr
loopne
std
dec
xchg
fdivp
enter
in
sti
stc
std
std
iret
lret
and
aas
call
in
iret
fdivrp
rolb
jecxz
in
ss
out
jmp
clc
ret
loopne
not
mov
loopne
add
das
lret
mov
xlat
loopne
repz
fcomip
out
and
int3
out
cld
shr
nop
test
call
xor
cmp
adc
sarl
imul
and
test
in
mov
nop
call
xor
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
sbb
pop
sub
data16
aas
add
aad
out
xlat
fiaddl
aas
aam
lds
fsub
in
repnz
in
push
das
ret
cli
cmp
aas
ffreep
ret
cld
in
ret
fcmovnb
hlt
jmp
jmp
in
loopne
int
mov
hlt
jmp
out
std
div
leave
ljmp
ret
out
cmc
jmp
in
cmc
divb
int3
fnsetpm(287
jmp
fcmovbe
fsubr
loope
mov
div
out
out
leave
cld
xchg
fdivp
aam
rol
ss
rcr
aad
cmp
aam
fcmovnu
movl
into
loope
xchg
out
int3
lock
lock
xor
xor
lret
out
cli
ret
mov
out
addl
iret
xor
aad
incl
cli
loop
repnz
lea
xacquire
enter
std
fsubrp
cmp
cmp
shl
jmp
ljmp
xchg
lret
cs
cmc
repnz
loope
fiaddl
repnz
sbb
loop
std
jecxz
xchg
rol
cmc
jecxz
in
aaa
clc
ds
cld
sbb
sbb
mov
lea
xchg
int3
fmul
int
repnz
fcmovnu
lock
cld
stc
lds
loop
enter
in
out
vpsubsb
out
clc
cli
aam
std
shl
loopne
jecxz
ljmp
mov
xchg
icebp
clc
das
lock
in
fdivr
repnz
std
xor
fxch
sti
fcos
loop
sub
out
out
xchg
out
in
ljmp
icebp
cmp
ret
mov
cmc
xlat
call
ljmp
jmp
out
xor
fcmovnbe
rolb
leave
jecxz
std
loope
mov
jmp
in
xor
lret
shrl
rcr
cmp
aam
fiadds
fildl
loopne
xchg
cs
clc
xlat
cmp
jmp
clc
repz
cmp
cli
aas
jmp
in
jmp
call
ret
cmp
aaa
lock
lret
aad
xlat
in
ret
cli
lret
in
int
jecxz
xchg
hlt
mov
xor
int
iret
int
div
std
aad
addl
out
out
leave
icebp
xchg
leave
ljmp
aaa
jmp
fdivrl
aam
fmuls
mov
loop
fsub
cmc
icebp
out
sti
jecxz
std
iret
ss
fdivrl
fiadds
fxam
in
loop
fucom
rorb
ljmp
repz
loope
repnz
into
xlat
aad
mov
enter
int3
int
out
roll
lock
xor
repz
in
ljmp
incb
and
ljmp
cmp
sbb
test
sti
loope
fimull
das
in
into
aad
int3
cmp
cmc
ljmp
fcomip
hlt
cmpb
cmp
loope
shr
xor
rol
testb
fsqrt
aad
cld
rorb
sub
in
cmp
fadd
aam
idivb
out
cmp
addl
fdivr
rolb
leave
in
lock
int
aas
icebp
fsubr
test
ret
jecxz
ret
xlat
mov
mov
mov
xor
out
aaa
jmp
cld
sarb
hlt
icebp
cmp
xor
clc
mov
icebp
rcl
xor
fcmovu
int3
call
loop
test
test
cmp
cld
ret
out
mov
hlt
div
ss
aad
fdiv
idivl
repz
loopne
roll
test
fucom
nop
xchg
jmp
rcl
fcmovnbe
enter
out
ljmp
loop
imul
jmp
call
cmp
cmp
fsin
jmp
loope
fabs
filds
cli
or
out
test
aad
int
cmp
aad
fidivrs
rorb
fucom
mov
das
aaa
out
jge
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
push
cmc
mov
jle
add
sar
int
aad
out
stc
hlt
fucomi
in
cmc
int3
mov
in
out
xchg
icebp
icebp
aam
call
xor
loopne
int
les
enter
into
std
jmp
shr
jmp
ljmp
aam
out
fiadds
xlat
in
iret
mov
into
jecxz
aam
sub
cmp
sarl
lret
test
cmp
fcmovb
fmulp
mov
into
jmp
fdivs
out
repz
cmpb
lret
loop
cmp
jecxz
mov
iret
cli
test
int
jmp
out
enter
xlat
cld
loopne
sarb
ss
fcmovnb
sbb
jmp
icebp
xchg
shrb
out
jmp
rcr
fdivr
in
in
aas
iret
add
aas
xchg
incl
out
xchg
xor
rol
stc
aam
sar
sarb
stc
cmc
aam
rcr
loop
ret
call
out
or
lret
stc
int
neg
icebp
lret
mul
fadds
clc
stc
fxch
loope
int3
in
aam
repz
repz
fxch
iret
iret
repz
hlt
xor
test
lret
in
int
xchg
sti
test
mov
out
jecxz
xlat
shl
ss
hlt
cmp
lock
stc
jmp
std
int3
in
clc
fisttpl
rcl
mov
std
icebp
out
ds
cli
or
aad
std
lret
xchg
nop
fmulp
fucomip
lea
sub
xor
repnz
cmc
in
repz
in
xchg
call
shl
mov
loope
xor
fnstsw
cmp
into
stc
jecxz
aas
aad
cld
aad
aam
mov
in
add
loop
lret
test
loope
fcomp
repz
ljmp
into
fucomp
ljmp
fcmovnbe
cmp
loope
lret
fidivl
call
stc
out
in
in
jmp
in
lock
jmp
out
xor
cmp
std
cmp
out
in
cmp
hlt
cli
xlat
in
adc
fstp
xchg
in
loopne
in
cld
in
fchs
int
cmp
cli
xlat
rol
out
sub
test
into
into
test
aam
xor
xor
out
iret
in
cmp
sti
cmp
hlt
sti
fcmovnb
cmpb
cli
mov
stc
in
in
mov
fsub
lock
call
iret
repz
fcmovnbe
stc
test
fdivrp
in
mov
shl
fcmovnbe
repz
hlt
lret
test
cmc
fcom
repz
jmp
shr
jecxz
xchg
lea
in
cmp
aaa
out
sarl
cmp
hlt
fiadds
addb
repz
out
lock
repz
std
push
std
filds
fadds
int3
incl
fnstenv
fdecstp
rcr
xlat
neg
jmp
out
jmp
jmp
lret
inc
shlb
aad
fcom
fucomi
out
ror
into
in
shl
mul
in
cmc
loop
fmulp
lea
rcl
in
leave
leave
fmul
add
loopne
sub
out
fdivr
fsub
xchg
lret
into
loope
xlat
in
cmp
cli
aaa
sti
repnz
loop
inc
cmp
xchg
cli
in
test
mov
stc
in
repnz
out
xor
in
out
ret
sti
fsubrp
out
in
sti
rorl
jmp
imul
aad
stc
fsub
cmp
hlt
cli
xlat
ret
aad
in
jmp
jmp
fldl
shll
in
cmp
clc
iret
filds
frstpm(287
ret
clc
leave
int3
stc
mov
aam
in
jmp
fidivl
aam
std
cmc
ds
out
out
sbb
cmc
mov
lret
int
ret
fucomip
jmp
repnz
int
cmp
into
ss
icebp
cmp
ss
xchg
aas
mov
ffree
out
mov
rorb
xor
ss
out
jmp
ffree
icebp
ret
enter
fcmovnu
mov
xlat
icebp
in
in
cmp
lock
repz
mov
clc
jmp
xabort
fucomp
int
xor
jmp
pop
mov
jmp
aam
fadd
fstp
pusha
shl
fstpl
jle
aas
add
fldpi
cli
clc
cmp
jmp
int3
lock
incb
jmp
loope
mov
lret
out
clc
sti
cld
not
xlat
loope
in
repnz
sar
repz
fcmovb
or
shl
loop
sub
into
out
aas
xor
or
shl
ffreep
out
out
out
orl
out
cmp
xor
cmp
xchg
faddp
sti
call
into
sar
repz
jmp
cmp
ret
loope
fst
mov
sti
icebp
leave
in
jmp
xor
clc
lock
icebp
adc
loop
icebp
stc
in
mov
out
out
loopne
xchg
ljmp
cld
fcmovbe
int
div
lock
cmp
mov
incl
loop
loope
clc
cli
cmp
ds
lds
in
and
in
rcl
nop
into
shr
iret
cmp
xor
ljmp
addb
aam
xchg
fucomi
int3
cld
iret
rcl
ret
aad
repnz
imul
repz
cmp
out
fcmovu
enter
ret
rcl
mov
xlat
cmc
rcl
leave
sarb
fistpll
stc
loope
test
rol
mov
ret
mov
xchg
int
stc
iret
cmc
cmp
cmc
jmp
ljmp
hlt
aam
incl
orb
leave
iret
cmp
fdivr
push
aas
repz
sarl
aas
loop
fimull
out
adcl
fsubr
in
hlt
in
out
in
xlat
fldl
cld
lret
fstp
in
sti
int3
shl
divl
repnz
int
iret
in
cld
fcmovu
into
std
cmp
lret
test
rolb
loope
loop
xor
fcmovu
in
lock
fdivr
cmc
mul
cld
loop
fxch
in
in
hlt
aam
mov
shl
ret
dec
sarl
cmp
in
xchg
jmp
lret
addb
clc
out
lret
xor
cmp
int
aam
ror
lock
rcl
div
loope
xlat
fcmovnb
iret
cld
xchg
hlt
out
iret
sub
out
in
cmp
fmulp
shr
loope
std
rol
test
f2xm1
loop
mov
mov
hlt
xor
ret
ljmp
xlat
repnz
mov
in
fiadds
hlt
xor
ror
into
stc
loopne
jecxz
icebp
shl
hlt
std
cld
out
fildl
cmc
call
cmp
sub
addb
in
faddl
ficoms
stc
call
out
repz
fcmovu
jecxz
sti
test
faddl
mov
int3
loopne
call
fidivrl
icebp
sar
fcmovne
cmp
lock
enter
xchg
aam
xchg
rcl
sub
div
out
call
ror
cmp
jmp
fdiv
addb
iret
in
xchg
test
aaa
in
ret
fxtract
jmp
loopne
into
lds
cmp
jecxz
les
in
jmp
in
cmc
xor
sar
aad
into
aad
out
out
out
les
mov
fiadds
xchg
xchg
lock
iret
std
ljmp
sub
aam
repnz
fcomp
cli
leave
lret
and
shl
out
enter
aaa
cmp
bnd
rcl
xchg
loope
ljmp
in
test
ret
cmp
icebp
xor
aas
cmp
int
out
aas
jecxz
mov
jmp
enter
out
ret
icebp
in
aam
xor
loope
cld
test
adc
cmc
cld
ds
int
stc
enter
loop
fbstp
in
test
clc
fcmove
fnstcw
cli
std
out
repz
cld
xchg
test
test
in
in
aam
ljmp
cli
fistpll
in
addb
repz
test
mov
mov
shl
lret
ss
fst
int3
repnz
test
xchg
cli
sti
sti
int3
mov
in
out
clc
imul
call
adc
shr
add
add
fcomp
fistps
je
pop
repz
jb
jle
add
ljmp
cld
stc
icebp
aam
aam
ret
in
cmp
xchg
rclb
enter
sti
shl
repz
aas
aas
movl
mov
rolb
icebp
jmp
ret
hlt
repnz
fsincos
sbb
cld
lea
xor
in
fdivrp
not
ss
loop
movb
mov
lds
int
lock
roll
fiaddl
out
fldl
jmp
jecxz
fld
imul
sar
sti
into
sti
inc
jecxz
xchg
in
fcomi
leave
int
addl
cmc
cld
fdivr
lret
rolb
sti
loopne
out
lret
mov
test
stc
lock
clc
stc
shl
in
in
clc
xchg
in
in
fucomp
fdivp
xor
loope
jmp
fld
cmp
std
cmp
loope
rcr
xlat
in
out
enter
aad
enter
leave
sar
lret
fidivrs
in
xor
movb
in
jmp
jmp
int
int3
leave
dec
loopne
xlat
cmp
in
stc
in
ret
fisttpll
dec
loope
xor
cli
fdivrp
leave
cmp
lret
shl
shl
xchg
call
out
leave
mov
xlat
jmp
cmp
ds
shlb
cld
xlat
in
addb
rorb
jmp
repz
aam
ret
cli
jecxz
and
fchs
fcmovu
xchg
sarb
cmc
xor
int3
fldl
adc
out
fmulp
jmp
jecxz
into
vphaddubw
aam
repz
cmp
cmp
lock
hlt
cmp
std
call
mov
incb
xor
out
in
int3
std
loopne
lock
xlat
adc
aas
loope
enter
lret
xor
icebp
in
shll
fnstsw
hlt
add
orl
out
int3
out
fldl2t
cmp
xor
aad
ds
aas
fstp
lock
fmul
jecxz
addl
fcmovne
xlat
int3
not
not
xlat
rol
mov
jmp
mov
xor
fcmovu
neg
fmul
cmp
icebp
loop
ret
enter
clc
lret
sub
in
lret
fmull
ret
xlat
cld
xlat
f2xm1
sti
int
jecxz
into
out
iret
loop
ret
jmp
fcom
nop
loop
shl
xor
hlt
icebp
fcomp
std
ds
shl
movl
and
aam
int3
repz
hlt
repnz
push
xlat
roll
not
neg
fsub
flds
out
and
sub
xor
out
cmc
icebp
shr
loop
ret
jecxz
xchg
fmul
loopne
test
les
rol
ljmp
ror
roll
out
mov
int3
cld
xchg
fucom
out
shl
lret
icebp
fdiv
ss
int
incb
lret
fcmovbe
int3
loopne
lret
jmp
cmc
idiv
xor
into
enter
sti
fdivr
testb
ret
jmp
in
ljmp
out
jmp
loope
ds
cmp
rcr
movb
mov
iret
xor
out
aam
leave
adc
int
icebp
out
fadds
ret
in
incl
out
jmp
clc
cli
fucomi
out
fld
out
out
fdivrp
lret
fisttpl
not
cli
rcl
cmp
ss
rcl
sar
stc
neg
clc
mov
std
mov
or
into
loop
fxch
fmul
hlt
jmp
aam
cmp
mov
and
std
loop
in
std
loop
out
dec
into
rcl
jmp
lret
rcl
fmulp
in
iret
cmp
jecxz
sbb
cld
fcmove
out
xchg
xor
rol
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
sbbl
add
shr
loopne
aas
fidivrs
xchg
ret
lret
std
iret
out
lock
xchg
mov
icebp
cs
aas
fnclex
stc
sbb
jecxz
filds
ret
fmull
sub
lock
aam
hlt
aas
in
fsubp
xlat
orb
dec
jmp
loope
aam
les
cmp
rcl
aas
shr
fdivr
div
shl
cmp
mov
testb
rclb
xlat
repz
aad
and
shr
orl
out
out
aaa
shl
cmp
sbb
enter
ffree
mov
lea
xor
int3
idiv
ljmp
roll
fcomp
or
lret
fucomip
shl
aad
hlt
out
aad
int
loopne
cmp
cmp
stc
aad
mov
mov
and
mov
repz
aad
xor
lock
jmp
xlat
fdivr
sar
rol
test
fcmovnbe
test
xchg
into
ror
fiadds
cld
jmp
out
adc
shl
aas
ds
jmp
vshufps
jecxz
hlt
rclb
les
in
cmp
fcom
loope
call
out
test
loop
lret
xchg
jecxz
call
enter
int
cli
aas
stc
cmc
test
out
int3
cmc
test
jmp
mov
ftst
cmp
fnsave
iret
cmp
into
cmpb
cld
flds
cmp
nop
xchg
divb
into
lock
xlat
loopne
cmc
imul
stc
mov
lea
lock
mov
in
cld
cmc
fldpi
shl
jecxz
out
repnz
in
fisttpl
mov
in
mov
out
les
cmc
shr
cmp
lret
shl
mov
bnd
inc
fiadds
cmc
repz
shr
cmc
stc
fiadds
sub
mov
imul
mov
in
int
std
xorl
cmc
stc
out
out
leave
sar
filds
fxch
xchg
aad
stc
clc
cld
mov
ljmp
shr
neg
xor
sti
in
adc
aas
fucomip
xchg
std
int
iret
faddl
into
das
div
int3
aam
iret
cld
lock
loope
mul
bnd
mov
sbb
std
shr
fcoml
xlat
iret
cmp
sar
rol
std
test
mov
lret
loope
into
xchg
jmp
lret
fcmovbe
int
sarl
loopne
adc
mov
mov
std
test
ljmp
out
div
cmc
xchg
out
into
lret
fnstsw
icebp
iret
decb
fcmovnu
lock
shr
roll
test
out
mov
leave
mov
out
loop
ror
aaa
sti
shrl
leave
xor
leave
shlb
leave
fsub
ret
out
in
fcmovnu
shl
ljmp
fdivr
lret
shl
fcmovnu
int
out
out
out
clc
out
out
fnsetpm(287
cld
xchg
mov
sar
out
fcmovu
idivl
repz
fdivr
cmc
and
loop
lret
jmp
shlb
icebp
aam
in
lock
rcl
int3
shl
stc
loop
rol
ret
jmp
xchg
loop
shr
aad
hlt
loop
ret
stc
rcl
fcmovne
cmp
repnz
rol
mov
call
movb
std
rorl
cmc
aad
into
repz
fcmovnu
idivb
hlt
test
rolb
mov
push
and
aam
loope
vpsllq
ror
ror
icebp
clc
clc
call
test
rol
cmc
ljmp
rcll
ret
div
jmp
stc
cmp
cli
xor
xlat
les
jmp
xchg
loopne
int
int3
out
ror
sti
cmp
repnz
ds
mov
mov
leave
leave
lock
nop
call
into
test
shl
lret
shl
fcmovnbe
icebp
in
leave
sbb
jmp
sar
xchg
cmp
out
aam
fcmovnbe
xor
jmp
int3
rol
aad
pop
pop
movsb
or
movsb
out
jle
aas
add
int
fdiv
lock
and
loope
movb
loopne
fcoml
xor
icebp
int3
cld
lret
sub
loopne
ds
repz
mov
out
sti
nop
test
mov
repnz
jmp
enter
neg
rol
cmc
sti
cmc
xchg
lret
add
lret
mov
aas
enter
lret
lret
shl
cmp
repz
loopne
call
mov
cli
xchg
repnz
shll
shl
fucomi
fdivr
fimull
cli
in
shr
in
loopne
icebp
enter
call
sti
test
loope
rorl
xchg
mov
loope
rcl
aad
enter
cmc
ds
sarl
icebp
fidivrs
repz
xchg
out
xor
jmp
sarb
sar
fucom
clc
cmp
shl
loop
test
dec
rcll
into
aaa
lret
dec
in
ds
cmp
call
cmp
lret
loope
ljmp
shl
leave
rcl
sti
into
fidivrs
out
icebp
les
sti
loopne
mov
fucomip
lea
jmp
into
std
sar
cmp
roll
mov
addl
in
int
in
jecxz
leave
icebp
lock
cmc
addb
mov
xlat
mov
dec
ret
aam
fidivrl
cmc
sub
inc
fdivp
rol
test
mov
loop
in
shll
out
out
in
repz
lret
aas
clc
fdivr
loope
xchg
lds
cld
leave
out
fimuls
cmc
shl
ror
lret
rcl
rcr
fsubrp
loopne
hlt
repz
ljmp
int3
loopne
ret
lock
lds
cmp
rcr
ret
aas
fdecstp
enter
ret
test
shll
fdivr
ror
cmp
or
in
loop
enter
fildl
in
xchg
hlt
out
xor
int
fdiv
cmp
int3
xor
xlat
cmc
mov
into
fistl
ss
aam
cld
aaa
cmp
icebp
and
loop
fisttpl
iret
loope
out
lret
cli
fsub
test
shl
cli
loop
out
cld
mov
mov
sub
jmp
ffreep
call
call
xorb
jecxz
in
mov
clc
jmp
xchg
repz
xor
jmp
aad
into
not
ffreep
test
lret
addb
sub
in
out
ss
leave
lret
or
ret
aad
hlt
ret
test
mov
and
lret
ljmp
xor
std
add
mov
fdivrp
xchg
cmc
in
int3
aam
fdivrp
cmp
hlt
and
sar
jmp
int3
out
lret
leave
lret
in
cmp
lds
mov
into
out
jmp
cli
clc
aaa
fst
rcl
xchg
in
hlt
enter
cli
fdivr
cld
icebp
repnz
in
enter
cmp
shl
into
sar
ds
fcomip
and
xchg
xor
cmc
jmp
ss
hlt
cmc
fmulp
jmp
loope
div
and
fsub
lret
icebp
jecxz
out
lret
out
int3
fcmovnu
rolb
clc
clc
aad
xchg
iret
mov
aad
icebp
enter
ljmp
ffree
aam
push
shl
jmp
loop
nop
xchg
xchg
shl
cmp
rcl
hlt
lret
xor
jecxz
rolb
testb
icebp
lock
xchg
fildll
stc
stc
stc
int
test
cli
loope
rcl
into
cli
lret
jmp
hlt
xor
call
cmp
idiv
fdiv
in
in
xchg
in
and
xchg
ficoms
xor
out
fldln2
add
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cs
shr
cmc
cmpsl
jg
jle
add
xor
sarl
cmp
loopne
fcom
jecxz
sar
ljmp
in
out
call
and
in
clc
cmp
xchg
int3
filds
test
xor
xor
cli
divb
test
rcl
aas
fcmovne
cmp
call
test
aam
jecxz
fstp
lret
iret
rcl
roll
fcom
stc
fucomip
xchg
xchg
jmp
out
fld
cmp
enter
out
cld
rcl
shl
stc
fiaddl
jmp
xchg
rclb
xor
sar
dec
xlat
out
jecxz
out
addb
stc
loopne
mov
ror
fucomp
iret
xlat
ds
rcl
shl
enter
in
xlat
jecxz
out
xchg
in
std
jecxz
out
enter
xor
dec
test
mov
fucomip
rcl
shlb
das
idiv
xor
shl
int
icebp
fadds
jecxz
stc
mov
call
nop
adcl
out
cmp
shl
fdivr
std
loop
mov
std
call
in
iret
jecxz
jmp
aaa
cli
std
jecxz
xchg
in
cmp
xchg
clc
fcmovu
out
enter
jecxz
aam
ret
aad
idiv
out
shl
clc
fcomi
in
xlat
loopne
aad
aam
mov
lock
in
int3
aad
cs
repz
hlt
sti
cli
iret
cmp
and
call
imul
in
loop
mov
sub
shl
icebp
std
aaa
sti
cmc
loope
rolb
in
aam
loope
mov
mov
leave
loope
fcomip
shl
in
ss
int3
loope
xlat
loopne
stc
jmp
ret
out
fmulp
loopne
fst
aam
xor
lret
icebp
lock
out
aas
hlt
rcr
aas
loop
xlat
fcomi
jecxz
incl
xchg
in
aam
sub
lds
xlat
loop,pt
fcmovnu
shl
in
in
jecxz
int
loop
decl
cmp
icebp
fnstsw
ljmp
out
sti
fmulp
in
int3
test
nop
in
mov
aaa
shl
aad
loope
or
repnz
std
in
clc
loope
test
mov
cmc
aam
xor
xor
into
and
int3
rol
rcr
cmc
loopne
neg
in
addl
lea
cmp
rcr
testl
repz
sti
mov
xchg
call
int3
leave
lock
repnz
ret
cmp
lock
orl
std
out
aad
not
ror
xor
hlt
sti
in
cmp
out
loop
jecxz
roll
lret
jecxz
loopne
cld
in
mov
xlat
out
leave
xor
hlt
lock
clc
sti
fdivrs
ljmp
mov
xchg
out
xchg
hlt
xor
xor
aaa
fidivrl
std
shl
ds
mov
in
out
out
xchg
rol
fcomip
jmp
in
ds
cmp
aad
std
clc
fstp
mov
test
loope
iret
out
xchg
imulb
enter
loope
ffreep
fcmovne
loope
aam
lret
stc
xchg
xchg
mov
int
loop
iret
xor
out
xor
cmp
test
test
in
ror
int
aas
xor
cmp
fcmovnb
cmp
loope
cmp
xchg
call
mov
xor
xor
call
lret
shl
aaa
testb
fsubr
mov
loop
xor
lock
jmp
repz
shr
iret
jmp
out
jmp
test
jecxz
cmp
cmp
idiv
test
cmc
fscale
loope
fdivp
mov
in
int3
loopne
test
and
aad
lret
xor
aam
cld
into
aam
addb
fstp
out
out
std
mov
stc
out
cmp
in
ror
std
aaa
hlt
stc
not
flds
in
xor
iret
das
xor
lret
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
jecxz
pop
and
aas
add
fmul
in
aad
ds
testl
fimuls
in
sti
cmc
out
out
shlb
cmp
iret
fcomp
ljmp
out
and
enter
in
fsub
leave
lret
shl
adc
stc
clc
mov
loopne
ljmp
aam
out
cmp
lret
fmul
int3
fcmovb
xchg
aas
xor
fdivr
mov
loop
out
ror
aam
in
aaa
xlat
fcmove
lock
int
aas
hlt
test
enter
jmp
iret
fists
das
aad
xlat
fxch
into
enter
fcom
std
fcmovnb
xlat
fldl2t
in
fld
iret
sar
cli
loop
hlt
out
xor
sub
out
enter
cmc
repz
sti
cmp
out
cmc
fadd
cli
loopne
fcoms
imul
cmc
clc
ror
int3
jmp
out
cli
cld
fisttpll
into
sti
loop
mov
in
shl
xlat
aad
cmp
int3
repnz
iret
lret
cmp
mov
xchg
aad
cli
cli
lock
mov
mov
aaa
shr
in
hlt
in
fcmovbe
sti
jecxz
shl
repz
mov
icebp
xor
jmp
repz
jecxz
fmull
mov
mov
fimull
enter
aad
call
icebp
cmp
aas
out
cld
xchg
mov
in
fsubp
leave
lds
aam
fcmovnbe
ror
cmp
repnz
orb
mov
iret
xor
lret
leave
sub
int
rolb
jmp
in
cld
cli
lret
ljmp
fmul
lret
cmp
aam
shl
std
adc
fld
loopne
xchg
in
and
imul
out
out
xor
xor
repz
std
orb
out
test
in
in
out
xor
xlat
in
hlt
aad
out
ds
loop
sarl
sti
jmp
and
loope
mov
xor
cmp
cmp
out
icebp
loop
test
ffreep
jmp
clc
loop
int3
in
out
sub
test
out
xor
in
cmp
cmp
loop
cmc
xlat
cmp
loop
cli
cmc
leave
test
in
jecxz
xchg
cli
xor
hlt
aam
std
ss
lock
loopne
loop
out
mov
lret
dec
sub
in
jmp
fmul
fucomi
aam
std
test
xchg
cld
cmp
test
test
test
mov
hlt
xlat
ret
xor
ss
adc
testb
jmp
in
fdivp
xchg
in
jmp
lret
aam
int3
aad
xor
lock
in
push
aam
and
sti
test
lock
icebp
mov
xor
xor
divb
fucomi
ds
cmp
fldl
jecxz
in
out
mov
aaa
ljmp
sub
iret
cmc
cld
xlat
cmc
inc
mov
rcll
xor
leave
hlt
iret
in
aaa
shl
cmp
fiadds
roll
xlat
into
mov
leave
das
out
aad
aam
rcr
fucom
out
aad
std
sti
fiaddl
ficoms
in
lret
iret
lock
into
int
fdivr
fdiv
call
cmc
orb
orb
xor
sti
cmp
cmc
xor
fmul
out
not
aam
int
sti
mov
ljmp
lret
out
int3
shr
loopne
int
call
loopne
out
mov
rcl
aad
clc
sub
ror
aam
ret
ret
fst
jmp
enter
lret
int3
jmp
mov
loope
shl
out
cmp
idiv
cli
in
xchg
ljmp
fucom
shr
leave
cld
jmp
aam
cmp
fdivrs
xlat
not
add
ljmp
pause
xchg
in
int
repnz
fcmovne
call
ret
sar
lock
sbb
jmp
adc
loop
rcr
ret
hlt
xor
xlat
iret
enter
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
lea
jg
aas
add
imul
ret
aaa
sti
test
fdivrp
int3
fmulp
in
fxch
in
repz
rcl
leave
jmp
hlt
fcmovnbe
int3
int
fdivrs
rolb
jmp
xchg
lret
mov
out
out
fmulp
in
lret
clc
aaa
xlat
stc
repz
into
cmc
test
aam
sar
neg
cmc
clc
in
jmp
mov
hlt
ljmp
sti
hlt
clc
cmp
sub
shl
in
xchg
jecxz
lret
in
aad
icebp
loop
in
stc
xor
cmp
loope
aad
icebp
test
call
xchg
cld
mov
in
call
repnz
call
not
int
test
aad
in
out
mov
ljmp
aam
loope
repnz
repz
cmc
std
lds
xchg
aam
jmp
rolb
fadd
clc
mov
mov
fld
out
sti
cld
fcomi
aas
aad
cld
fsub
ret
test
lock
sti
xchg
repz
lret
icebp
into
hlt
repz
hlt
out
rcl
in
leave
in
lea
test
xor
out
shl
cmp
into
cli
test
ds
flds
cld
mov
popl
repnz
aas
aas
cmp
aam
aas
rcl
shl
mul
std
clc
in
orb
cmp
shl
cmp
sarl
aam
frndint
out
test
faddl
aaa
aam
loop
repz
ss
int
cmc
out
test
ret
enter
mov
loopne
mov
call
enter
fcmovu
out
enter
ljmp
lds
out
xor
iret
cmp
std
xchg
fadds
iret
call
aam
stc
leave
cmp
iret
xlat
idiv
cmp
rol
out
flds
fisttps
repz
out
in
ret
jmp
fcmovnu
in
div
repnz
fstp
ret
loop
lret
hlt
in
test
repnz
call
cmp
xchg
out
xlat
out
loope
in
hlt
orl
aam
lret
cmp
jmp
in
in
mov
stc
cmp
incb
ror
cli
xbegin
into
int3
cld
idivb
test
stc
nop
out
repz
lock
enter
clc
rol
cmp
cmc
sti
repz
repz
ret
ror
xchg
xchg
lret
mov
fmul
vpaddusw
loop
shlb
xor
div
hlt
fidivrl
int
cli
iret
ret
xor
std
in
in
xchg
in
enter
jmp
sarb
and
loop
ret
mov
repz
xor
xor
sar
ss
filds
lock
mov
fiadds
iret
add
cli
imul
enter
imul
shr
cmpl
loope
xchg
in
and
loope
lret
lock
std
fmulp
std
fdiv
sar
ds
stc
out
xchg
jecxz
int
xor
lock
ss
cli
fidivrs
aad
fpatan
shl
loope
loop
xchg
mov
shl
nop
lret
mov
aaa
cli
out
ret
int3
hlt
iret
rcl
lret
jmp
cmp
cmp
mov
mov
fsubp
mov
shrl
jecxz
repnz
icebp
sti
fcmovne
sti
shl
test
out
call
nop
test
in
nop
fcom
ss
repz
into
rol
cld
rcl
sti
ret
mov
test
lret
loop
aad
shlb
cmp
xlat
cli
lock
ds
shl
ret
sti
or
in
or
out
mov
ror
xor
xlat
cmc
leave
ss
loope
fnsetpm(287
repz
aam
xchg
cmc
cli
movl
cs
lret
mul
repz
xchg
call
ror
orb
rcll
xor
ljmp
or
mov
add
aam
aad
fstp
movsb
ficomps
push
ljmp
jle
fdivrs
repnz
mul
cmp
inc
decl
xor
cmp
out
cli
fdivr
aam
ret
fsubrp
jecxz
call
jmp
rcl
xlat
cmp
shl
jmp
idivl
sar
idiv
aam
in
out
out
loopne
xchg
hlt
shr
mov
shr
cmp
rcr
fsubr
out
fcmovnbe
clc
xchg
aad
call
shl
mov
leave
call
std
aaa
out
fnstsw
loopne
shl
sbb
leave
fistl
xchg
shr
repz
shl
iret
in
int
cmp
icebp
stc
fadds
loop
icebp
out
rcll
out
out
clc
cmp
fsub
ret
cli
xchg
out
iret
aam
xor
out
cmp
call
xor
jecxz
fdivr
cld
ljmp
xchg
cmc
lock
ljmp
shl
xlat
rcr
out
hlt
clc
xchg
fadds
xchg
into
lret
out
shll
shlb
cld
std
cmp
enter
test
nop
out
hlt
repz
cmp
aas
int
repz
imul
loope
movb
jmp
in
clc
jmp
dec
lret
aam
loop
ljmp
loope
xchg
fmulp
loop
in
cmp
fucomp
in
loop
lock
std
sti
xlat
testl
int3
sub
sar
ljmp
loope
rcl
xchg
stc
cmp
std
cli
jmp
jmp
stc
cmc
xlat
enter
enter
icebp
cmp
aad
ffreep
mov
rcl
in
fadd
ljmp
ljmp
roll
test
xchg
cld
shl
fiadds
clc
in
cmp
ds
shl
enter
sti
dec
fabs
cli
out
lock
test
into
xlat
jecxz
les
repnz
cmp
rolb
xchg
enter
out
mov
mov
call
in
out
out
loop
repz
in
jmp
int
out
xchg
ljmp
xor
clc
shl
cmp
cmp
jecxz
out
rcl
mov
xchg
mov
xchg
out
icebp
stc
icebp
in
lret
fdivr
cli
iret
flds
mov
addb
sar
in
lret
leave
icebp
xlat
out
sub
in
xlat
les
xchg
cld
fcomip
into
ljmp
hlt
aas
int3
shr
iret
out
cld
inc
xlat
decl
out
xchg
repnz
ljmp
aas
ljmp
enter
aam
xlat
orb
out
fcmovne
cmp
repnz
into
roll
hlt
or
int3
int
lock
xchg
rorl
aad
fstp
aas
shl
sarl
xlat
fadd
fmul
sarl
int3
fcmove
in
rcll
xor
ror
sar
aam
ds
rol
aad
adc
and
xlat
xor
ss
in
cmp
fstpt
idivb
xchg
cmp
sar
cmp
in
int
jmp
aam
xlat
cmp
shl
shl
aaa
cmp
aam
in
xchg
pop
mov
int3
xchg
xchg
xchg
cmc
shl
in
fst
shlb
ljmp
in
iret
repz
aad
test
stc
lock
fnstcw
cmp
clc
cmp
mov
mov
enter
xchg
nop
out
repz
aas
cmp
xor
in
aad
cli
loope
cmp
neg
aad
and
fisttpll
out
lret
icebp
fstpt
xor
cmp
sar
mov
jecxz
sti
iret
adcl
not
cmp
xorb
stc
fsubr
cld
rol
lock
add
jmp
mov
out
fxch
not
cmp
cmp
add
add
lret
enter
int
cltd
movsb
imul
test
adc
aas
add
cmc
aam
out
loopne
aam
test
out
in
repz
sub
leave
aad
xlat
lret
ds
into
cld
sar
cli
jmp
in
call
call
cli
stc
cmc
repz
fucomi
out
cmp
xlat
rcr
std
roll
repnz
loop
fucomi
cld
out
cmp
leave
lock
rolb
mov
loopne
fildl
icebp
sub
ljmp
cmp
jmp
test
cmp
fcmovbe
inc
lret
in
icebp
fisttpll
jmp
icebp
fdiv
fucomi
iret
cmp
repnz
rorb
lret
loop
ror
out
out
fnstcw
enter
rcr
rcr
aas
testb
cli
nop
fucomp
xchg
in
out
xor
jmp
lock
aaa
repz
loope
in
call
out
std
decb
ljmp
sti
adc
adc
cli
lds
ljmp
lret
cmp
repnz
call
int
stc
stc
jmp
rcr
fisttps
lret
into
int
fld
cmp
cld
int
cmp
xchg
jmp
enter
lock
rcll
stc
xorb
aas
icebp
loopne
div
mov
hlt
out
iret
mov
test
out
mov
repnz
ror
in
leave
fstp
leave
cmp
fadds
incb
mov
lret
xor
out
shlb
xor
jecxz
fdiv
jmp
in
leave
nop
call
lret
xor
cli
iret
sti
xlat
lret
stc
into
sti
fdivrp
fadd
out
addl
decb
int
sub
leave
not
cmp
loopne
rcl
test
out
jmp
sub
ret
jecxz
std
aad
fcmovnu
fmulp
fdivl
ret
mov
fcos
ljmp
orl
cli
repz
hlt
imul
fcmovbe
out
rol
cli
aam
fmulp
idiv
in
dec
cld
into
mov
aad
out
out
sti
lds
cld
ljmp
loop
xlat
vcmpss
leave
test
xchg
out
xor
cld
jmp
loope
xchg
loopne
in
out
cld
fcompp
lret
int3
xchg
nop
and
xor
ss
cmp
int
sti
rcr
shl
jecxz
out
cmc
in
sbb
mov
ss
rcr
cmp
cmc
into
int3
fmul
loop
cmc
cli
in
mov
loope
lock
cmp
fucomp
cmp
ret
cld
faddl
mov
nop
loope
ljmp
xor
aaa
idivl
enter
loop
sar
and
sti
jmp
cld
out
lock
xor
iret
hlt
cmp
fnstcw
aas
aam
add
and
xchg
loope
popl
ljmp
fsub
in
incb
enter
jmp
cmc
repnz
aad
icebp
fucom
lret
ffreep
add
ret
clc
in
fmul
filds
jmp
loopne
icebp
in
int3
sti
cmp
aad
cmc
fcmovbe
in
out
cli
xchg
xchg
ljmp
shl
ljmp
int
shl
fucom
out
out
fcmove
addl
jmp
loope
ror
cmc
divl
cmp
icebp
rcr
xlat
sbb
fldlg2
repnz
iret
shl
in
cmc
repnz
leave
shr
cmp
icebp
cmc
fiadds
iret
ret
into
jecxz
xchg
xor
lds
out
div
stc
out
sti
iret
ds
not
loope
adc
fildl
out
stc
cli
leave
cmp
sti
cld
cmp
rcl
sarb
fisttpl
jecxz
jecxz
fimuls
cmp
xor
into
jmp
icebp
into
ret
repnz
lret
ds
stc
cli
cmp
int3
xor
hlt
cmp
fucomi
neg
sti
cmc
add
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
in
and
int3
jmp
out
stc
fdiv
iret
mov
ret
sub
out
cmp
in
in
aaa
icebp
cmp
cmc
mov
cmc
jmp
testl
call
ljmp
in
out
aad
fcmovnb
loope
out
in
mov
enter
call
cmp
fdivr
aad
cmp
rolb
leave
out
sti
mov
push
in
ret
hlt
fsubrs
xor
cmc
jecxz
ret
icebp
roll
cld
int3
sti
adc
int3
iret
into
xor
aaa
cli
aad
in
int3
fcmovb
rol
sar
cmp
sar
mov
test
mov
rorb
iret
repnz
out
test
icebp
sti
aas
iret
cmc
incb
int
iret
leave
mov
orl
fsubr
sti
leave
cld
lret
test
enter
incb
fcomip
hlt
loopne
aaa
out
stc
iret
aam
sti
call
in
div
call
fdivr
mov
cli
icebp
fucomi
notb
hlt
idiv
int3
fscale
aas
xor
test
cli
lds
in
fisttps
out
jecxz
in
loope
jmp
hlt
leave
clc
cmc
cld
cmc
repz
fimull
out
aad
lock
div
fsubr
cmc
xor
xlat
xlat
hlt
shr
sti
or
fstp
out
enter
loop
rcll
jecxz
leave
cmp
std
repz
testl
out
in
in
mov
rol
sar
sti
into
xlat
lret
xlat
cmp
ds
xlat
orl
loopne
imul
sub
iret
cmp
iret
cmp
cmpl
shl
incb
fists
jmp
in
repnz
cmp
rcl
rorl
faddl
sub
cs
cmp
into
fstp
fiadds
enter
mov
mov
shr
rol
out
enter
iret
xor
cmp
in
in
ljmp
repz
test
cmp
aas
into
inc
cld
test
test
test
in
xchg
shll
rcr
fnstenv
shl
cld
sar
fdivr
stc
ret
cmp
ljmp
xchg
jecxz
out
not
out
sti
out
fstp
repnz
fst
sbb
jmp
leave
rcr
enter
xchg
repnz
ljmp
std
jmp
flds
cmp
xchg
xchg
subb
icebp
aam
shll
fucompp
aam
fdiv
in
incl
mov
mov
in
cli
fiadds
fldpi
jecxz
icebp
cmp
bnd
repz
xlat
xchg
out
leave
xchg
loop
aad
shl
repnz
in
loopne
out
xlat
cmp
fdivr
push
mov
jmp
cli
loop
fcomp
cli
vpsrlw
out
shl
out
lock
lret
clc
jecxz
fcmovnb
cld
sbb
mov
decb
out
in
repnz
call
int3
in
fmul
adc
sbb
xchg
in
test
lret
xchg
in
shl
ror
std
int3
std
cmp
cmpb
repnz
rorl
ljmp
in
or
lret
in
shr
ds
fdivr
in
rol
loopne
idiv
call
ret
out
xchg
repz
iret
ret
cmp
cmp
sar
fcom
rcl
fcmovu
xchg
fcomp
out
xchg
nop
shl
xor
stc
int
rcl
int
out
fcmovnbe
fnclex
roll
mov
std
shl
ljmp
lock
into
ljmp
mov
hlt
adc
fmulp
ror
in
or
ljmp
rcr
repz
loope
std
into
cmp
cli
icebp
roll
out
xchg
loopne
xchg
loope
shll
int
int3
stc
in
cmp
fistpll
cmc
jecxz
test
lds
lds
in
xor
lret
clc
leave
jmp
sub
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
inc
push
add
sub
add
idiv
icebp
incb
cld
std
mov
enter
clc
ror
into
ss
loop
out
roll
mov
out
shl
imul
xor
fdivs
lds
cmp
cmp
fcom
add
mov
in
out
in
jmp
shlb
aaa
int
sarb
call
fdivr
xchg
ret
cld
xchg
test
call
ss
les
sar
lret
cmc
sti
cmp
cld
repnz
jecxz
in
fisttpl
aad
jmp
stc
enter
fucomp
loope
lock
sub
lret
leave
cld
test
xchg
xor
lds
repz
cmp
repnz
rolb
jecxz
call
shr
test
fdivr
call
stc
icebp
ret
in
jecxz
mov
xchg
int
out
repnz
aad
cli
cmp
cld
ds
cmp
sub
lret
loop
fstl
mov
iret
aaa
aad
cmp
ljmp
rol
ret
lret
inc
sti
out
xchg
ljmp
cli
jmp
out
clc
sti
shl
adc
hlt
ljmp
in
rcl
mov
lock
cmp
sarl
sarl
cmp
fiaddl
stc
std
iret
loop
mov
xor
in
lret
out
aam
fdivrl
leave
fdivp
clc
cld
lock
fcmovnbe
test
mov
dec
in
fisttps
aam
ss
icebp
cmp
lret
sbb
out
cmc
loopne
sub
int3
in
std
fcoml
loope
fnstenv
aad
jmp
ror
shl
roll
mov
lret
fucomi
loope
xchg
in
in
xchg
leave
xor
leave
in
out
lret
cmp
fcmovne
xchg
sti
in
ret
cmp
jmp
loope
mov
cmc
rcl
fnstsw
roll
fildl
mov
call
out
test
cli
cmc
fdivr
cmp
in
aam
stc
fdiv
mov
cld
in
fsub
faddp
lret
loop
jecxz
rcr
fsubrp
lret
aam
cmp
xlat
ret
loopne
out
out
ljmp
lret
aad
std
hlt
hlt
stc
lret
cmp
fcmovu
fcomi
fcomp
cld
ljmp
xor
in
icebp
in
in
xor
jmp
fadd
call
mov
ficoms
int
ret
repz
in
dec
rcr
fcmovu
xlat
adc
shl
div
stc
and
out
out
xchg
ljmp
xlat
aad
repz
std
aad
sti
rcl
clc
mov
cmp
shl
call
xor
out
aam
cmc
ss
xlat
xor
cmp
enter
int3
in
in
shl
jmp
shl
shl
jmp
rcr
adc
cmc
fdiv
aas
mov
xchg
in
int
out
xchg
aas
fsubr
les
aad
stc
xor
into
iret
std
stc
fdivr
fmulp
enter
mov
int
loop
repnz
out
shr
aam
lock
cmp
bnd
stc
loope
out
div
lret
cmp
rorl
xor
xor
cmpl
test
xchg
cmc
test
fmull
sti
repz
int3
aaa
rcl
sar
idiv
ret
stc
repz
enter
aam
jmp
fstpt
shr
fdivp
and
stc
aaa
cld
rcl
jecxz
test
mov
jmp
loop
dec
out
shr
fcmovnu
xlat
lret
cmp
and
mov
cmc
out
loopne
in
fisttpl
out
fninit
xor
int3
rcr
rcr
int
ret
jecxz
ret
hlt
xlat
xchg
lret
jmp
loopne
test
xor
ret
icebp
shr
cmp
aam
rcl
xlat
sar
loop
in
jmp
xchg
test
loope,pn
int
cmp
cmp
cmc
sti
inc
cmp
leave
ret
fxch
int3
in
push
push
rol
hlt
cmp
xor
out
cmp
call
add
ror
int3
aam
mov
ret
sub
sbb
jle
fcomi
out
xchg
shl
xrelease
xor
rcr
cmpl
roll
cli
fmul
xchg
mov
test
aaa
xor
rcr
in
test
enter
jmp
test
mov
les
ror
cmp
aaa
test
cli
clc
std
ret
call
enter
shl
xor
fnsetpm(287
cs
fmulp
lret
fdiv
add
cmc
mov
test
lock
loopne
shr
into
icebp
cmp
lret
fmul
fucomp
int3
fadds
rcr
test
mov
iret
xchg
test
call
test
in
cmp
not
in
out
call
icebp
cs
fdivr
fsubr
cmp
sti
inc
loopne
frstpm(287
shl
in
neg
fadds
mov
cmc
shrl
lock
hlt
ljmp
sti
cmpb
clc
shl
out
mov
std
out
int3
clc
xor
sti
int3
aam
cmp
cmp
rol
mov
fdivp
fdivr
adcb
leave
rcl
cmp
aaa
out
fildl
loope
not
jecxz
out
enter
fmul
dec
imul
leave
out
xor
cli
int
test
std
fcomp
std
xchg
cli
fisttpll
mov
enter
les
stc
out
out
hlt
iret
shr
stc
fadd
call
stc
out
std
roll
hlt
cmp
leave
out
clc
clc
iret
jecxz
cmpl
shl
cmp
xlat
fildl
ljmp
ret
fcmovnu
cmp
in
filds
fdivp
fadd
jmp
cld
jmp
nop
in
in
xor
cli
xor
idivb
jmp
call
int3
or
in
jecxz
int3
lret
lret
div
xor
cli
lret
ss
faddl
stc
test
ret
lock
jmp
ljmp
fcmovbe
iret
loope
cld
rcr
loopne
lret
xchg
out
ret
and
repnz
in
not
clc
sar
loope
and
testl
out
out
jmp
loop
out
cld
icebp
std
lock
rol
in
jmp
flds
out
jecxz
sub
in
aaa
leave
xor
into
cmp
loopne
sti
in
fxch
out
xchg
out
in
loope
repz
fcmovne
lret
lret
ljmp
repnz
idiv
jecxz
fcmove
enter
hlt
repnz
aad
sti
call
loop
aad
test
xor
fisttpl
enter
hlt
aas
rol
jmp
cmp
fsubr
repnz
cmc
cmp
shl
ret
in
jmp
into
out
fstl
hlt
icebp
out
leave
xor
rol
in
loop
mov
loop
mov
fmul
fimuls
into
sar
lret
out
call
sar
fcmovb
in
in
fdiv
test
loop
rol
aam
in
int
sarb
rcl
test
aad
clc
xlat
out
std
in
rolb
sti
cmc
ss
test
cmp
clc
loop
shl
lret
in
lret
enter
lock
hlt
xlat
imul
cli
cmp
in
cmp
testl
in
ljmp
hlt
xor
sbb
xchg
fdivr
mov
mov
loopne
xor
fsubr
stc
stc
ror
ffreep
hlt
adc
idiv
loop
cmc
int
or
in
in
ret
test
std
in
cmp
sar
out
fld
loop
out
loopne
xchg
mov
sti
xchg
xchg
xor
lret
jmp
std
filds
cli
call
xchg
int3
repz
out
in
aad
and
fcmovnbe
lock
orl
idivb
lock
sar
cmpl
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
stc
repz
orl
out
xlat
in
xor
cmp
cmp
call
cmp
rcr
dec
in
test
iret
in
hlt
lock
xor
sti
add
in
jecxz
mul
fcomip
test
push
xchg
iret
jecxz
ss
cmp
out
fcmovu
clc
roll
leave
xchg
call
mov
int3
lret
out
cmp
cli
fyl2xp1
cmp
hlt
lock
loope
stc
loopne
jmp
in
xor
shl
rcl
out
fadd
out
clc
rol
ret
addb
shlb
cmp
fsub
leave
xor
sar
in
addb
xchg
loopne
test
int3
shr
aam
out
ds
icebp
loopne
lock
into
out
cli
loop
mov
das
aad
loope
fnsetpm(287
loop
cld
test
loope
out
mov
shl
call
int3
repnz
lock
rol
clc
std
in
fbstp
aaa
fcmovnb
idiv
fcomp
mov
sti
rorb
xor
hlt
in
divl
ljmp
repz
repnz
shr
fucomp
fucomi
ret
xchg
or
aad
in
mov
jmp
loopne
iret
out
repnz
neg
in
out
or
fmulp
out
xor
sub
aad
leave
cmp
iret
xor
addl
iret
mov
in
xor
fprem
out
lret
jmp
faddp
test
cmc
xchg
mov
fsub
shl
mov
jmp
repz
aaa
enter
clc
loop
cmp
std
frstpm(287
ret
mov
push
adc
cmc
xor
in
fsub
cmp
hlt
jmp
repz
stc
fadd
clc
ret
sti
fsubp
ficoms
bnd
leave
jmp
xlat
xlat
fsub
cmp
fildl
and
push
out
int3
out
out
int
out
sarl
in
movl
iret
roll
lock
in
call
cmc
test
mov
stc
jmp
hlt
mov
aaa
into
xor
lock
icebp
shl
loop
aad
loope
in
faddl
imul
cs
cld
icebp
aas
lock
idivl
enter
nop
dec
out
call
aam
loopne
repz
addb
cli
ret
xchg
in
testb
cld
in
std
aas
sbb
repnz
cld
fadd
in
les
xlat
fmulp
mov
into
jmp
sti
leave
xlat
into
icebp
testl
lock
mov
iret
jmp
ret
cmp
rcr
fcos
fcomp
iret
testl
jmp
mov
hlt
iret
iret
lock
cmp
repz
stc
out
ret
sub
into
jmp
sub
xor
aam
stc
repz
int3
cmp
test
loope
cmpb
addb
fmulp
in
in
jmp
in
xlat
xor
repz
sbb
fisttpll
or
not
xor
sti
loopne
adc
fcomi
aam
testb
in
jmp
call
shlb
std
fimuls
and
jecxz
mov
sar
icebp
fcmovnb
cmp
leave
aad
fstpt
xlat
icebp
fisttps
out
test
addb
jmp
xor
iret
sti
cmp
int
loopne
test
decl
roll
clc
repz
sarb
loope
std
ds
mov
out
std
sub
rcr
xor
cmc
in
out
stc
leave
in
push
aad
call
jmp
leave
xchg
out
shl
loop
int
xlat
fcmovu
aam
repnz
rol
cmc
addb
add
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
push
jo
jg
aas
add
repnz
fsub
or
hlt
int
mov
cmp
aad
cmp
jmp
aas
test
aas
icebp
hlt
cli
mov
mov
icebp
shlb
lock
hlt
in
std
jmp
shl
hlt
in
mov
jmp
and
out
repz
cmp
call
aam
loope
clc
orb
in
call
clc
rcr
cmp
leave
imul
cli
xor
aad
aad
out
test
lds
loop
les
fcomi
into
fucomi
sti
repnz
std
testb
out
xchg
fdiv
in
out
out
out
lret
aas
lock
rcl
jecxz
mov
xchg
in
call
enter
in
loopne
fidivrl
repz
out
imul
leave
lret
xchg
lock
int3
xchg
fistpll
in
out
ss
ss
cmp
cli
int
lock
shl
fiaddl
loope
ljmp
leave
ss
shr
out
mov
test
vpsubusb
enter
rclb
cmp
int3
aad
icebp
fucomi
xlat
repnz
xlat
iret
out
in
sub
out
lds
nop
out
lret
cmp
cli
fcmovu
cmp
out
testb
int
fisttpl
cs
lock
ror
out
xor
sar
aam
vpaddd
stc
mov
jmp
rcr
aaa
aad
cmp
aad
clc
cmp
in
xlat
loop
mov
call
out
xor
out
cld
in
lret
not
mov
fdivrp
jmp
fcmovu
mov
out
sarl
sti
mul
sbb
repz
rcr
jecxz
and
sub
sbb
mov
into
das
enter
repz
ljmp
rcl
in
fimull
in
xchg
mov
rcl
enter
out
repnz
mov
cmc
rcl
loope
fcom
loope
into
adc
call
cmp
xor
test
out
repnz
fisttpl
mov
int
xchg
lret
cmc
aam
cmp
fcmovnu
aaa
rol
and
loop
enter
shr
fmul
or
cmp
xlat
stc
cmc
int3
not
out
sbb
fdivrp
fsub
cli
ret
mov
loope
in
xchg
out
shr
xor
aam
fcomi
sti
cli
test
mul
mov
mov
das
loop
lock
repnz
into
int
cmp
rcl
cmp
jmp
mov
shr
std
out
rorb
jecxz
iret
repnz
loope
aad
cmp
clc
mov
in
fcmovu
jmp
xchg
xchg
loopne
in
hlt
jecxz
iret
into
das
xlat
cmp
xor
aam
out
cli
in
fadd
rorl
in
in
sarl
lret
repnz
in
xchg
sti
in
iret
test
xchg
sub
out
cmp
cmp
lds
fxch
out
call
cmc
lret
jmp
rcr
in
into
in
ss
cmp
lret
in
cli
cli
faddp
xchg
ret
int3
ss
cmp
in
fistpll
lds
loope
int3
out
out
hlt
xor
cmp
in
out
lret
faddp
aad
not
repz
lea
std
xchg
test
in
xor
aam
stc
test
mov
orl
call
sub
cld
iret
mov
leave
faddp
loopne
lock
xchg
iret
int3
call
out
cmp
cld
adc
ret
cmc
fxch
cmc
xlat
jmp
int3
out
xchg
mov
mov
lock
out
shlb
cmc
cmp
xor
fcmovbe
rcr
xor
fmull
test
int3
out
icebp
jecxz
fdivs
stc
lock
xchg
out
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
pop
xor
xor
jg
aas
add
in
movb
test
xor
icebp
in
cmp
ljmp
cli
test
fucomp
mov
addl
leave
rcl
jmp
ret
jmp
mov
fcomi
xchg
jecxz
in
in
icebp
leave
fcomip
in
rcr
iret
xor
rcl
call
loope
xchg
lret
in
int
hlt
enter
aas
loope
out
icebp
adc
not
jmp
cmc
xchg
mov
cli
mov
iret
xchg
aaa
lret
xor
icebp
jmp
xor
cmp
out
fscale
aad
fimull
xchg
in
jecxz
jmp
cmc
shr
ffreep
pushl
cmp
loopne
icebp
les
mov
into
jmp
ss
cmp
iret
aam
cli
lock
xor
std
movb
repnz
out
loope
enter
out
icebp
fcomip
in
std
repz
xchg
rorb
int
lea
mov
sub
cli
ss
neg
leave
leave
int
cmp
cmp
mov
loop
ret
xchg
int
xchg
out
sarb
cld
icebp
fsubrp
cld
rcr
in
test
iret
add
out
cmp
repnz
mov
ret
xor
int
lock
aam
cmpb
loope
faddp
ljmp
or
shr
in
std
shr
in
rcl
jecxz
loope
in
shl
cld
mov
adcb
fidivl
out
leave
cmp
in
cmp
out
shl
fcom
div
les
jmp
out
out
cmc
in
std
sar
hlt
cmp
cmp
loopne
jecxz
enter
out
sbb
call
int
cmc
jmp
ret
shl
clc
incl
lret
fstl
xor
out
fdiv
out
incl
fcmovne
out
in
cli
cli
mov
in
loope
iret
loop
jmp
fidivs
cli
cmp
std
std
std
mov
jmp
in
loop
cli
xchg
loopne
xor
repnz
int
ss
ljmp
rol
cmc
mov
mov
int3
out
hlt
enter
xor
int
in
ffreep
aam
fsub
jmp
and
xchg
out
xchg
div
xor
in
cld
aad
jmp
out
repz
aam
in
aam
xlat
fisttpl
loope
in
fcmovnbe
xlat
leave
std
clc
rcr
xor
sbb
jmp
mov
mov
in
xor
ljmp
fdiv
mov
repnz
ret
test
addl
mov
into
lock
rcr
cmp
fcmovb
sbb
loopne
ljmp
cmc
mov
out
clc
sarb
fsqrt
lret
cld
icebp
stc
repz
ret
loopne
jmp
into
ret
jecxz
into
ror
repnz
fdivrp
div
fcomi
in
div
jmp
stc
nop
clc
cmp
orb
jecxz
stc
stc
aas
hlt
repnz
sti
cmp
test
lret
clc
int3
fildl
xchg
lock
cmp
in
int
stc
stc
fsubr
loope
sti
loop
stc
mul
aam
mov
leave
out
rclb
aam
sar
fdivrp
ret
sti
rcl
clc
sar
loope
leave
cmc
jecxz
jmp
lock
xor
aad
enter
cmp
aaa
stc
stc
int
test
dec
ljmp
lds
xor
ljmp
xor
cmp
rol
leave
mov
sar
repz
lds
shlb
jmp
xor
dec
cmp
cli
out
enter
jecxz
test
fsubrp
cmc
in
shr
enter
cmp
loopne
cmp
ljmp
hlt
out
shl
loope
in
cmp
aam
rcr
aad
aam
rcr
cmp
out
fimuls
rcr
xor
xor
ljmp
call
aas
loope
testb
dec
adc
pop
add
add
lret
fst
int
test
cmp
bnd
aas
add
xlat
test
mov
aam
into
cmp
jmp
cmp
aas
sbb
cmc
aas
call
fists
idiv
xor
int
int3
ljmp
aas
fcomip
aam
adc
out
rorb
in
out
xor
into
iret
loopne
clc
test
addl
lea
mov
ss
fcomip
fadds
clc
fstp
cmc
mov
lock
mov
imul
leave
jmp
enter
inc
aam
cmc
fninit
mov
call
add
loop
xor
xlat
cli
sti
ds
cmc
aas
filds
adc
out
int
popl
lret
int3
fcomip
fmulp
int
int3
aad
jmp
in
jmp
out
cmp
icebp
ret
fcmove
sub
sar
vcvtdq2pd
imul
ljmp
loope
in
cli
out
lret
fmulp
int3
fsub
aas
aam
loope
add
fisttpl
int
div
into
leave
in
out
xor
rcl
aam
fucomip
icebp
hlt
mul
lds
mov
int3
mov
lock
ror
leave
out
cld
cmp
jmp
ret
cld
out
leave
call
out
xchg
mov
in
ljmp
cld
cmc
ret
aas
clc
loope
rol
out
lea
xchg
loopne
xchg
loope
repnz
jmp
jmp
lret
rolb
sti
sarl
xchg
stc
fildl
in
ror
xor
clc
xor
jecxz
aaa
les
icebp
loop
jecxz
icebp
sbb
iret
xchg
jmp
in
in
jmp
shr
into
loope
cli
test
jmp
mov
loope
out
in
jmp
repz
add
rcl
mov
fcmovu
xchg
xchg
in
lock
loop
in
aaa
jmp
aam
imul
shl
cmp
sub
mov
lock
not
out
hlt
in
fdivrl
cmp
repz
loope
in
fcomp
aad
testl
leave
rclb
cmc
jmp
cmp
in
fstp
in
int
shl
aas
fdecstp
addb
loope
in
in
int3
out
ss
in
clc
int3
aad
std
addb
in
leave
in
out
sti
rolb
aaa
xor
leave
lret
ljmp
in
shl
fsin
jecxz
ljmp
out
iret
icebp
stc
jecxz
fucomi
stc
ljmp
not
in
call
jmp
fsubp
out
ljmp
in
fsubrp
xor
out
cmp
rcl
add
std
cld
cld
lret
adc
lret
cmp
cmp
icebp
idiv
lds
aas
stc
rol
mov
jecxz
fxch
leave
jmp
mov
xor
xor
leave
sar
cmp
cmp
cmp
cmp
xlat
lret
out
xchg
repnz
shr
aaa
cmp
fldlg2
fmulp
cmc
loop
iret
rol
mov
lret
lea
repz
loope
fcomp
aaa
cs
rcl
ret
aad
in
mov
cmc
out
add
hlt
int3
aam
das
out
cmp
iret
loopne
leave
out
clc
enter
fstp
xchg
hlt
mov
shll
out
in
not
fdivr
cmp
mov
leave
test
xchg
aam
test
ljmp
xor
cli
testl
or
ljmp
xor
icebp
test
lret
jmp
jecxz
repnz
int3
aaa
aad
out
lock
fucomi
sti
aad
rolb
call
incl
xlat
sub
cmc
shlb
xor
cmp
clc
test
les
ret
mov
lock
loopne
fsubr
call
fcom
stc
fpatan
in
cld
addb
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fldl
xor
scas
add
jecxz
mul
in
jmp
xchg
in
adc
jmp
sarl
cmp
pushl
rcl
in
loopne
cli
rolb
int
xchg
mov
in
div
iret
in
xor
fmulp
out
jmp
fucom
cmp
aad
mov
in
ljmp
out
cmc
sti
cmp
fstp
loope
cmp
clc
inc
rcl
sti
incb
iret
mov
loopne
lret
xchg
shl
icebp
xor
icebp
fdivrl
fcmovne
dec
cmp
aad
std
aad
mov
out
ret
rcr
lret
test
fcmovnu
cmp
loop
clc
aas
aas
out
sti
loop
add
mov
stc
rolb
int
int3
in
in
into
div
call
out
fstpt
lock
out
decl
mov
out
icebp
shl
shlb
stc
xlat
loope
int
sarb
out
fimull
into
out
fucomp
lock
sub
cmp
cmp
ds
mov
clc
aam
xlat
mov
int3
fldl
out
fcom
lret
iret
shl
ds
loope
mov
test
xchg
int
mov
in
repnz
repnz
aad
ret
cmp
rcl
cmp
xchg
lret
in
cmc
nop
shl
fldcw
loopne
addb
orb
lret
loopne
adc
into
iret
sar
iret
xor
clc
adc
hlt
cli
aam
flds
out
repz
loopne
fabs
ss
enter
in
lock
cli
fsubp
int3
ljmp
fdivr
xlat
fcmovnbe
xor
in
cmc
and
jmp
xchg
sti
loope
testb
lock
hlt
addb
xchg
in
mov
fucom
nop
rcr
mov
into
fidivl
cs
xor
push
cmc
loope
ret
repz
clc
fsubr
icebp
test
mov
in
loope
shl
aam
ror
clc
in
std
filds
call
out
shrb
cld
iret
in
rcl
fsub
cld
xor
mul
aad
xchg
vpsubsw
call
not
xlat
fadd
in
stc
test
aam
xchg
incl
in
enter
lret
icebp
shr
xor
ljmp
faddl
aad
jmp
dec
mov
cmp
shl
out
int3
cmc
out
icebp
adc
fcomip
roll
stc
mov
shl
fbstp
sub
ret
enter
cmp
shl
sbb
in
in
ret
in
out
jmp
xchg
loop
xchg
hlt
call
in
sar
xlat
lret
clc
cmp
rcr
fucom
jmp
in
mov
sub
or
xor
rcr
repz
jmp
mov
fcmovu
fsub
in
int3
in
jecxz
lret
sar
aas
fiadds
mul
faddp
loopne
ftst
enter
dec
divb
out
out
in
loope,pt
loopne
fisttps
and
in
rclb
ret
aad
enter
lock
fxam
jecxz
fcmovnb
hlt
rol
jecxz
test
lret
out
repz
aaa
in
shr
lock
cli
lret
test
aas
repz
adc
mov
xchg
ljmp
divb
xor
fcom
test
cli
in
cmp
clc
roll
int
out
out
sub
jmp
int3
cmp
cmc
ret
xchg
std
cmc
shl
out
shr
enter
mov
call
int
into
cmc
in
cmp
fsubp
mov
sbb
out
xor
xor
aad
cmp
std
stc
sarb
sti
in
mov
loop
jecxz
sti
mov
loop
out
cmp
int3
cmp
fsubr
and
loop
jmp
mov
xchg
sub
icebp
lret
int3
shr
cli
cmp
loop
filds
out
out
jmp
out
lock
jmp
sti
dec
rcl
into
in
fucom
ret
xlat
jecxz
xchg
mov
sar
xor
sub
out
repnz
leave
xlat
cmp
icebp
ret
loop
sub
ljmp
fcmove
fnstenv
in
ds
test
fmul
movl
ss
inc
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
imul
mov
aaa
jg
scas
add
lock
jmp
loope
fdivr
out
clc
fsubr
sar
sbb
rolb
clc
in
enter
aaa
aam
loopne
cmp
fcom
aas
shl
test
orb
das
jecxz
call
sar
hlt
repnz
shl
rcr
push
mov
out
lret
out
mov
jecxz
jmp
stc
sarb
rcl
shl
fnstsw
add
out
xchg
mov
hlt
repnz
rol
fsubr
hlt
out
fsubr
rcr
sub
roll
cld
fucomip
in
into
repnz
repnz
fdivrs
test
xor
loopne
fcmovbe
addl
clc
out
stc
xor
shl
in
ret
hlt
cmc
loop
fsub
aam
in
loop
fiaddl
in
cmc
iret
jecxz
xlat
cli
cmp
in
iret
into
hlt
stc
shl
ret
loop
mul
loopne
out
in
xchg
jecxz
loope
cmp
shlb
cld
sarb
lret
out
stc
shl
leave
enter
xchg
lret
in
out
xor
cmp
fsub
ljmp
add
in
out
jecxz
int3
xchg
dec
lret
into
into
in
in
out
sar
inc
out
shl
fisttpl
adcb
rol
xor
stc
rcr
sub
lds
out
out
ffreep
xchg
out
xor
shl
hlt
icebp
lock
fdivrl
shl
sbb
loope
ficoms
in
lret
xor
in
int
cmp
sti
std
hlt
out
sbb
fldl
lret
ret
call
in
xor
xor
aad
sti
cmp
cli
fcmovbe
cmp
mov
stc
test
shl
orb
shl
cli
rcr
lock
iret
aas
adc
in
mov
stc
lret
sbb
in
mov
in
icebp
lret
lock
cli
cld
loope
fcmovu
fadd
test
test
jecxz
mov
aaa
jmp
call
sar
roll
cli
in
jecxz
nop
out
in
ror
xor
int3
enter
cmp
sti
xchg
jmp
shr
enter
mov
out
int3
clc
ds
cmp
loopne,pt
xlat
mov
call
xchg
aam
fdivl
imul
stc
into
sar
adc
fucom
leave
loopne
xor
mov
ljmp
in
cmp
hlt
aas
xlat
rol
rcr
testl
xchg
repnz
div
repz
in
leave
loop
test
shl
rol
out
filds
xchg
mov
out
sti
call
int
xor
loop
sti
xlat
mov
fdiv
lret
fcmovnb
mov
xor
lret
out
fxch
cld
sarl
aam
int
stc
enter
in
stc
mov
int3
rolb
cmp
xor
fstp
fiaddl
mov
rolb
adcl
leave
in
cld
divl
ror
int3
in
xor
rolb
repnz
out
out
or
jecxz
shr
in
jecxz
in
iret
cmp
sarb
loope
addb
int
dec
std
mov
jmp
jmp
repz
in
hlt
int
stc
repnz
test
fneni(8087
aad
idiv
sti
mov
sbb
ror
mov
std
jmp
cmp
lret
jmp
aad
addl
out
frstpm(287
jmp
repz
out
into
int
out
enter
xlat
adc
xchg
sti
std
fmul
out
into
mov
jecxz
in
hlt
ss
cld
xor
int
shl
shr
rcl
cmc
shl
test
loop
call
test
xchg
ror
leave
div
shl
out
int3
lret
jecxz
iret
testb
stc
lret
lock
out
repz
fxch
cmp
aaa
cmp
in
out
not
cmp
icebp
hlt
ret
clc
enter
in
jmp
clc
shr
ror
iret
jmp
cmp
test
fistpll
enter
mov
loopne
cld
int3
lock
nop
aad
xor
jecxz
rcr
fdivrp
hlt
rolb
call
jecxz
fisttps
shl
stc
ss
aas
loope
lock
fldl
enter
test
in
mov
into
fcomp
int3
xor
div
cmp
clc
rcl
cmp
in
aad
in
movl
jmp
enter
fxch
shll
or
test
adc
add
fadds
int3
aad
aaa
lret
lret
ds
out
fucomi
rol
loope
out
in
aad
in
out
mov
in
lret
out
std
xlat
out
aam
iret
in
ret
fcmovnb
fdiv
fabs
xlat
fldl
ljmp
in
repz
sar
in
fcmovnb
xlat
shr
fimuls
fsub
xrelease
shrb
stc
cmp
add
cmp
repz
jmp
in
ret
fmulp
int
fcom
out
cmp
xlat
cld
cmp
rolb
add
mul
xchg
cld
mov
fcomip
mov
xchg
shl
repnz
in
das
sti
lock
ror
fstpt
aad
in
repz
sti
into
cmp
loope
call
stc
aad
jmp
sarb
test
stc
mov
fiaddl
loope
sti
cmp
ljmp
rcr
repz
int
cmp
leave
cs
xor
cmp
fld
in
rolb
neg
les
int
ljmp
cmp
fmulp
neg
out
aam
and
test
decb
into
in
in
aad
call
cmp
in
shl
repnz
repnz
mov
mov
mov
and
out
rcll
fcmovbe
stc
in
fidivrl
fldz
cld
cli
std
aas
xchg
xchg
fmuls
out
loope
in
rcl
xor
fcmovu
test
in
cmpl
in
inc
loop
into
out
loope
xchg
xchg
fcoml
shl
div
lret
sarl
not
fnstsw
flds
loope
loopne
shl
jmp
in
aad
into
test
in
fxtract
out
mov
fdivp
jmp
out
ljmp
jmp
aaa
clc
std
out
fdiv
test
repnz
sar
fmuls
out
fstp
xchg
loop
jmp
clc
jecxz
jmp
fcomp
iret
loop
call
test
test
cmc
rcl
out
hlt
sti
ds
out
test
loop
aam
in
mov
leave
mov
xabort
xor
out
aaa
leave
out
test
xor
incb
xlat
in
stc
fildl
mov
xor
cmp
mul
fst
loop
sub
fisttps
mov
test
out
cmp
repnz
lret
rcl
int
in
loope
rolb
test
adcl
jecxz
cld
iret
std
iret
ret
loopne
out
lret
call
iret
rorl
shl
cmp
fcompp
repnz
jmp
addl
repz
in
loop
cld
fimuls
hlt
fidivl
call
iret
test
shl
cli
or
in
lret
fimuls
xor
int
fcmove
xlat
cli
sti
out
fcmovbe
loop
out
ds
loopne
vcvttpd2dq
fucompp
mov
lock
shr
divl
loopne,pt
cmp
lock
aam
clc
ds
test
out
sub
leave
cmp
int
repz
xabort
lock
jmp
xor
out
clc
cli
sar
adc
neg
cmp
xlat
fabs
fpatan
xchg
int
cmp
int3
out
aam
rcl
not
lock
vpmovmskb
sbb
cli
xchg
aam
xchg
sub
xor
cli
fcmovu
rcr
cmp
stc
test
rcr
rcr
div
out
xlat
leave
repnz
out
xchg
shr
repnz
cmp
rcl
aaa
fcmovb
fld
cld
add
clc
repnz
xchg
xchg
loop
shl
xor
cmp
cmp
fidivrs
xor
aam
leave
loopne
mov
out
in
fsubrp
in
into
repz
ror
cmp
cmp
leave
out
shr
neg
cmp
hlt
jecxz
jecxz
in
fneni(8087
repz
in
shr
repnz
cli
xlat
in
lock
call
cs
fadd
out
out
repnz
mov
sarl
ljmp
sub
fsub
aam
lret
in
loope
int3
loopne
roll
out
mov
out
jmp
in
shll
cli
enter
fidivrs
shl
out
ljmp
xor
fcomip
imul
shll
clc
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
icebp
cmp
fcmovu
ret
rol
fadds
loop
mov
out
idiv
xor
shll
not
lret
ds
rcr
fldl
cli
in
into
orb
aaa
lret
fucom
out
cmp
loop
out
loop
testb
lret
jmp
in
call
xlat
loope
in
xchg
in
rol
ljmp
nop
cmc
lea
xor
cld
fildl
fsub
loopne
in
jmp
cmp
mov
in
xor
out
xor
sarb
cmp
clc
loop
adc
xchg
addl
filds
jmp
aam
stc
cmp
leave
mul
loop
faddl
repnz
loopne
repnz
cmp
repz
ds
hlt
repz
test
aam
in
incb
int
cs
xor
fdivp
ffree
rcl
fnstsw
jmp
into
sbb
sub
lock
fadd
idiv
fidivrl
shl
sti
fcmovnu
int
out
stc
ljmp
in
into
in
int
cmp
ret
std
lock
lret
aad
aad
in
ror
aam
addl
icebp
cmp
aam
cmp
sar
in
loopne
xlat
in
repnz
mov
xchg
ljmp
xchg
in
aam
into
xor
in
imul
in
cli
cld
cmp
in
incb
mov
rcl
icebp
shlb
cmp
xorb
repz
cmp
lock
mov
mov
cmc
test
aam
out
sbb
rcl
push
cli
jecxz
in
in
mov
mov
filds
enter
in
cmp
out
out
testb
nop
fsubrp
in
shr
iret
in
jmp
lret
out
int3
fcmovnu
int
in
fsub
stc
loop
loopne
mov
in
enter
fdivs
aad
fdiv
int
cmp
rcr
repz
idiv
mov
shlb
cmp
clc
cmp
shr
loop
fdivr
cmp
mov
mul
faddl
lret
jmp
das
leave
sti
ror
fidivrl
aas
div
cmc
ret
cmp
mul
mov
xlat
fimull
lret
nop
loopne
aam
cld
fdivrl
cmp
fdivr
testl
rol
mov
fiadds
enter
jmp
idiv
rolb
fadd
jmp
clc
nop
fists
xor
jmp
sti
fneni(8087
test
shl
mov
mov
test
xchg
mov
ror
xor
into
sar
clc
test
test
enter
flds
out
out
xlat
enter
out
cmp
icebp
repnz
xlat
test
jmp
sbb
orb
rcr
into
cmp
icebp
sub
aad
icebp
mov
xchg
lret
clc
out
xor
cmc
ljmp
rol
hlt
les
neg
mov
repnz
not
repz
xlat
in
ds
addl
sar
xchg
int3
mov
repnz
xor
in
int
cmp
cmpb
lock
mov
xchg
test
test
out
neg
shl
shl
repnz
in
test
xchg
int
out
fldpi
mov
int3
repz
hlt
addl
mov
loope
loopne
xchg
sub
iret
leave
xor
fcmove
hlt
cmp
cld
repnz
fiaddl
xchg
sti
and
test
les
out
lret
shlb
fnop
cmc
rcr
aam
xlat
in
stc
fsub
addl
repnz
in
xor
stc
jmp
loopne
out
mul
shl
clc
leave
imul
mov
sbb
lret
cld
icebp
fdivr
out
cmc
sbb
cmp
fcom
fdiv
xchg
fsubp
lret
repnz
xchg
mov
jecxz
aaa
int3
xor
xor
aaa
icebp
aas
fidivrs
in
idiv
mov
mov
add
xor
cmp
aam
sarl
addl
mov
or
lret
xchg
int3
loop
xlat
out
fcmove
imul
out
jmp
fcmovu
mov
ret
out
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
mov
jl
lds
scas
add
call
icebp
ret
jmp
xor
cmp
cld
repnz
cmc
lret
mov
in
leave
leave
xchg
xchg
aaa
fdivrs
jecxz
xor
stc
cmp
sar
out
out
fld1
call
in
xchg
test
shl
shlb
aaa
xor
cmc
sti
sti
test
xlat
ret
xchg
rcl
call
int
repnz
fcom
xor
cmc
out
fistpll
jecxz
and
hlt
aam
or
mov
leave
in
loop
out
aad
sar
int
xor
fidivrs
repnz
sti
cmp
ljmp
int
lret
xor
rcr
sar
adc
into
and
sti
out
xchg
xchg
decl
cli
rcr
fmul
sub
cld
in
cli
xlat
stc
mul
and
out
stc
dec
fstl
fcmovbe
aaa
aam
leave
out
cmp
fsub
rol
std
repnz
std
enter
jmp
aam
ret
xor
xor
icebp
dec
rol
clc
loopne
in
xchg
test
out
jmp
shr
fst
test
loopne
fsub
mov
in
nop
clc
orb
xor
lret
cmp
imul
hlt
hlt
aam
aam
ret
jmp
fdivrp
mov
leave
in
icebp
int
xlat
loop
out
cmc
shl
lret
idivb
aad
xchg
ljmp
mov
cmc
int
jmp
ljmp
rcl
rcl
xchg
add
mov
cs
cli
cld
fcmovne
sbb
aad
les
xchg
vpsubusb
jmp
xchg
in
in
loope
in
lock
hlt
aam
aad
in
shl
cmc
rcl
fsubr
fldl2e
out
call
cmc
and
rcl
int3
leave
fxch
lret
in
idiv
std
cmc
mov
mov
xchg
jmp
aad
das
enter
sti
in
int3
ds
in
mov
loop
fcompp
out
xchg
lret
fisttpl
in
in
int3
into
lret
in
sarb
fcmovu
xchg
cld
fadd
jecxz
enter
mov
mov
mov
in
icebp
iret
leave
cmp
out
loop
shl
fld
lret
lret
aam
cmp
cmp
icebp
cli
in
aas
cli
test
sar
sub
out
xchg
lock
roll
into
rol
aad
aam
jmp
fdivrl
ret
xchg
loopne
addl
fcomip
not
cmc
icebp
icebp
int3
fdiv
shl
imul
add
repz
cmc
xlat
mov
sub
lret
mov
ror
cmc
repnz
cmp
repnz
idiv
std
lret
test
stc
lret
icebp
jmp
out
xor
clc
repnz
loop
cld
neg
loop
mov
aad
mul
clc
cld
movb
out
enter
ss
neg
aaa
cmp
ret
xor
icebp
mov
sub
lret
out
rcl
clc
loopne
fcmovu
add
std
xlat
incl
out
out
out
out
cs
aam
jmp
lret
in
test
testb
and
xchg
mov
loope
fsub
fxam
call
fstpt
call
jmp
test
cmp
ds
cmp
call
out
out
cmc
cmp
fdivr
call
mov
loope
aaa
loop
repz
hlt
xor
lock
ret
testb
in
fstp
nop
loope
in
lock
cli
iret
cmc
in
iret
out
idivb
div
aas
sti
rol
mov
jmp
call
xchg
div
xor
lock
xor
test
jecxz
out
lock
sti
lret
enter
in
cmp
cmp
aad
in
rcr
adc
fucomip
out
test
loop
iret
rcl
xchg
xor
jecxz
cmp
imul
clc
cmc
fcmovu
aam
fld
in
out
cli
call
sti
leave
out
int
leave
aaa
xor
cmc
sti
icebp
cmpl
addb
lret
jmp
rolb
icebp
cmp
iret
cli
cmp
std
cmp
icebp
stc
aas
ret
enter
fcmovne
mov
out
in
roll
fsubrs
or
cli
hlt
sub
aam
vpor
int
stc
filds
ror
lock
ljmp
jb
add
icebp
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
es
mov
jle
add
int
lock
hlt
lds
lea
mov
aam
into
loope
jecxz
fdivp
ljmp
fucomip
test
mov
out
addb
out
in
enter
cmp
lock
cmc
mul
xor
xchg
fsubr
mov
leave
aad
xlat
vpsubd
cmp
lret
cli
sub
call
sbb
test
cld
cld
int3
ror
xor
leave
cmc
xor
cmpb
cmp
repz
hlt
loope
ret
out
in
rolb
xlat
hlt
stc
cmp
sti
lret
sar
cmp
int3
cmp
stc
cmpb
sbb
ret
sar
xchg
out
not
ljmp
lret
cmc
icebp
icebp
loopne
cmp
clc
cmp
clc
in
out
stc
loope
nop
out
divb
ljmp
cmp
and
addl
aam
les
cmc
leave
lret
jmp
in
loop
fstpt
repnz
cld
fisttps
das
icebp
xor
aam
idivb
aas
cmc
std
loopne
les
mov
add
sti
nop
mov
cmc
ret
xor
sti
cmp
cli
sti
repnz
loope
sub
out
test
fucomp
aaa
xor
repnz
cmp
lock
icebp
fcomi
mov
hlt
mov
cld
sub
fdivrp
shr
shl
jmp
ss
cli
sti
hlt
lret
shl
adc
loope
shl
testl
iret
sar
cmp
icebp
xor
lret
hlt
xor
hlt
in
loopne
xor
or
jecxz
mov
int
call
enter
div
icebp
cmp
cmp
fcmovu
out
int
nop
filds
aad
div
sarb
loopne
div
fadd
test
rcl
std
fisttpll
out
jmp
loopne
hlt
leave
ss
iret
repz
std
shl
and
aam
cli
mov
ljmp
iret
ss
aam
stc
repz
add
neg
out
jmp
ljmp
loopne
not
int3
into
leave
int3
fdiv
into
int
div
repnz
fdivrp
fcmove
xchg
into
nop
xrelease
aad
shr
sti
stc
lock
rcl
xor
testl
imul
xor
repnz
in
testl
fadd
test
fucomip
aam
rcl
fdiv
int3
aad
loopne
xlat
std
stc
shl
addb
in
addl
call
sti
cli
cmp
in
loop
roll
out
in
in
loope
lds
ret
in
ljmp
stc
sti
sub
add
addl
addl
aad
cmp
cmp
ret
cmc
fdivrl
lds
in
jecxz
rorl
loop
fsubr
cli
repz
test
ret
fucomip
jmp
out
lret
ret
xor
imul
aad
cmp
jecxz
cld
shr
xlat
aam
out
cmc
fildl
xchg
loope
aad
repnz
lock
out
cmc
aam
into
cld
rcr
aas
loope
xchg
out
test
hlt
aaa
sti
jmp
test
std
ret
aad
iret
fiaddl
out
sub
xor
in
xor
xor
fstp
lret
ret
mov
jecxz
jecxz
out
xchg
in
lock
cmp
xor
aad
fmulp
sti
shl
leave
mov
std
test
loopne
in
lret
lret
int
stc
fcomi
test
cmp
enter
mov
sti
in
aam
ljmp
fdivrp
lret
in
in
lock
hlt
stc
fadd
xlat
faddl
call
lock
int3
fldl2t
cld
aas
fidivrl
aas
loop
cli
test
call
in
xchg
xor
ret
call
fucomip
int
loope
fnsetpm(287
in
aad
fyl2xp1
loopne
shl
std
out
int3
out
xor
repz
std
hlt
fucomp
fdiv
decb
fcmovu
into
fcmovb
out
shl
aam
xor
cld
lock
leave
lret
fsub
icebp
out
ftst
iret
in
int
lret
loopne
leave
in
fdiv
neg
jmp
fdivp
cld
cmpl
mov
mul
sti
lret
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
push
out
xor
scas
add
fdiv
xchg
out
sub
leave
lock
fst
loop
clc
cli
stc
ret
jmp
lret
leave
lock
in
out
hlt
out
fdivrs
fxch
cmpb
fdivr
fcmovb
lock
flds
jmp
xor
sub
jmp
xor
repnz
hlt
rcr
ss
xchg
loop
clc
int3
xchg
cld
lret
dec
xchg
das
ret
sub
stc
sar
into
in
lret
ds
sti
cmc
into
xchg
idiv
xchg
in
iret
faddl
sub
cmp
sti
fstpt
iret
iret
in
icebp
loope
loope
std
inc
test
test
repz
xchg
xor
xor
ljmp
icebp
cld
test
hlt
jmp
in
lret
in
fdivrp
xchg
int3
rorl
ret
cmp
cmp
rcl
aam
ret
inc
out
test
in
xchg
sti
in
test
lock
int3
test
sarl
stc
iret
aam
ret
lret
xchg
mov
out
leave
ljmp
jecxz
icebp
int
rol
fidivrs
flds
fimull
mov
repnz
std
adc
in
out
cmp
cmp
int3
lock
ret
ret
cmc
ret
aam
int
mov
decb
int3
jecxz
clc
fcmovbe
cmp
fcmovne
fincstp
cmc
cmp
addb
lret
mov
sub
std
int3
jmp
xlat
cmp
aas
movb
orb
fdivrp
enter
repz
stc
xor
cmp
filds
ret
sub
int3
icebp
ficoml
ljmp
out
aaa
aam
cmp
call
xchg
and
add
cli
shr
aam
jmp
sarl
dec
sbb
leave
jmp
in
fsubp
fucomp
in
mov
shl
jmp
int3
out
repnz
sar
out
loop
in
test
fucomi
mov
ljmp
ds
ror
jecxz
fnstsw
sarb
test
in
out
out
fsubp
loopne
lret
add
clc
cmp
call
and
sti
test
rol
cmc
lret
lock
fsubr
cmp
stc
aam
aas
jmp
fsqrt
aad
in
imul
loope
ret
xchg
shl
in
jmp
sarb
shlb
cmc
loope
icebp
sar
lock
fsub
xchg
enter
shr
in
xor
rcl
out
idiv
cmp
shl
repz
in
sti
ljmp
jmp
icebp
in
shr
xor
sar
cmp
ffreep
les
enter
mov
jmp
aam
std
sarl
ljmp
std
les
mov
test
int
loopne
int3
ret
lock
das
aad
sbb
out
aam
xor
loope
into
and
sub
cmp
xor
ljmp
les
std
into
cld
shr
sti
kmovb
xor
fdivr
cli
aad
cmp
ret
mov
out
mov
loope
lock
xchg
aad
aam
loope
ror
iret
xor
cmp
ret
call
vpsubq
into
rcl
repnz
cmp
enter
sar
ljmp
out
aad
in
xlat
fadds
icebp
mov
lock
out
iret
repnz
ss
aam
in
into
cmc
icebp
testl
fimuls
rol
fcomp
cli
cmp
aas
rcr
xor
fdivrs
aam
loop
orb
ret
cmp
std
aaa
std
rolb
not
aad
fcmovb
test
in
xor
xor
shl
neg
fcmovnbe
call
inc
lret
out
mov
into
jmp
clc
enter
in
out
lret
cmc
roll
std
sbb
imul
test
in
mov
loop
cli
cmp
ljmp
cmc
fiaddl
incb
fmul
icebp
int3
out
xor
div
ljmp
inc
repz
cmc
test
orl
mov
orl
xor
icebp
xlat
jmp
shl
in
cld
mov
cli
xchg
out
sti
mov
mov
std
fcomp
aam
rcr
ret
std
add
in
loop
loope
in
loopne
leave
cs
sarb
fcomip
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
and
aam
flds
or
loope
test
xchg
lock
ljmp
cmc
repnz
ds
call
mov
out
mov
test
int
xor
fnstenv
xor
stc
ret
cmp
enter
sti
out
lret
sub
xchg
out
lret
into
out
xlat
cld
imul
cmp
shr
iret
fildl
lds
call
ret
neg
jmp
stc
out
in
dec
xchg
xchg
ret
test
mov
shlb
repz
fsqrt
out
lret
cmp
in
ret
stc
cmp
test
ret
dec
out
int3
out
in
sar
fsubrp
stc
jmp
mov
out
cld
aaa
adc
clc
lock
adc
out
test
ror
rclb
in
vpsllw
in
sti
hlt
in
icebp
ror
xchg
fcompp
fucom
vpavgb
out
cmc
xchg
iret
xor
ljmp
in
fnstcw
sbb
cmp
ret
std
call
in
divl
xor
sub
not
rcr
stc
cld
lock
rcl
push
iret
and
test
call
out
xlat
repnz
lret
roll
clc
in
mov
icebp
loope
out
loopne
in
ljmp
cld
jmp
loope
fldl
int
and
in
repz
shl
into
into
clc
cmp
fdivrs
out
hlt
rcr
cmc
rcr
cmp
in
decb
int3
jecxz
aaa
cmp
out
cmp
aad
xor
sarb
shl
xlat
fsub
lret
enter
xchg
ljmp
out
in
cli
cld
cmp
sar
ret
out
sarl
filds
loope
out
mul
ret
in
out
xlat
fdivs
int
shll
lock
addl
fdivp
ljmp
xor
aad
fcmovnu
out
out
fcomi
xlat
fmulp
loopne
sub
aaa
sub
aad
cmc
iret
rol
out
loopne
cmc
idiv
out
sbb
test
into
stc
rcr
call
xor
int3
iret
aas
addb
stc
cli
leave
lret
loopne
mov
jecxz
fstpt
lock
in
rol
repz
ror
stc
mov
in
xchg
leave
repnz
clc
mov
cmp
cmp
mov
leave
sti
jmp
xchg
leave
iret
incb
shlb
cli
fdivp
jecxz
sti
in
mov
aam
clc
loop
call
xor
cmp
cld
sti
xlat
cmp
aas
fdiv
in
loopne
out
stc
fisttps
imul
out
cli
lock
lret
in
leave
lret
sar
repz
ds
repnz
movl
in
nop
aaa
out
in
ss
cmp
hlt
std
ror
clc
xchg
mov
idiv
mov
adcb
int3
into
fucompp
fsubr
adc
rol
adc
repnz
sti
cld
shl
loope
ret
enter
lret
ljmp
aad
roll
mov
in
out
test
in
cmp
cmp
xor
loop
cmc
ret
not
ror
mov
sti
mov
clc
das
in
lret
aaa
fsubrp
incl
fimuls
out
in
addb
aad
clc
hlt
int
cmp
cmp
jecxz
rol
rcl
mov
stc
leave
in
lret
faddl
loope
clc
xor
bnd
lret
cmp
loopne
rcl
and
mov
mov
int3
lret
xchg
into
mov
lret
fcomi
in
ror
fcom
fcomi
into
faddp
call
mov
out
lock
in
repz
clc
out
aas
out
fcomip
cld
out
in
roll
xchg
int3
mov
aam
aad
stc
cmp
out
addl
aad
test
loopne
imul
xor
out
sti
out
clc
aaa
clc
loopne
fdivr
rcr
cmp
fcmovnu
cmp
in
xchg
ljmp
out
xor
addl
ljmp
xchg
loop
lret
cmp
fxtract
shl
lret
into
mov
loopne
loope
flds
fildl
xlat
in
cs
cmp
aas
loope
ret
cld
ret
mov
loop
loopne
loope
bnd
aas
sarl
fcmovnbe
fcmovb
loope
add
and
ja
cmp
jg
scas
add
into
jmp
fdiv
std
shl
sti
xor
rol
fsubp
out
ljmp
std
in
lret
mov
cmc
int3
stc
sti
repnz
stc
cli
jecxz
iret
cld
cmp
jecxz
aad
mov
movl
in
iret
neg
neg
in
cli
hlt
loope
jecxz
rcr
cli
out
addl
div
in
xor
cmp
fdiv
jecxz
stc
sti
xchg
loope
mov
mov
test
ret
cli
lret
cmp
ret
jecxz
ret
out
mov
out
mov
xchg
fcomi
sub
ljmp
out
cmp
loopne
out
fcmovnbe
int3
int3
xchg
cli
int3
mov
out
out
lret
leave
fcmovb
cli
cmp
sti
fsubr
into
repnz
rolb
fsub
mov
lret
xchg
shlb
xor
jmp
aas
loope
cmp
add
filds
sub
and
addl
cmc
std
fistpll
ljmp
fadd
rcr
mov
stc
call
loop
int3
xor
clc
into
repnz
xor
loop
cli
aas
mov
int3
in
mov
clc
lock
mov
xchg
jecxz
rcl
fistpll
lock
repnz
out
aad
jmp
in
lret
rorl
aam
lret
int3
fdivr
shr
jmp
fdivr
jecxz
cld
lret
fldl
call
xor
lret
iret
lock
and
hlt
xchg
mov
out
jmp
lock
test
idivb
in
aad
fnstsw
clc
rcr
cmc
loopne
sarb
fiaddl
in
xchg
fsubrp
test
rol
int
iret
clc
xor
sar
clc
icebp
repz
jmp
jmp
ljmp
in
ror
call
sar
cli
int
and
mov
std
fcmovnbe
out
out
out
xor
shr
out
lret
call
into
ds
out
fsubr
repz
imul
iret
fcomi
loop
into
clc
in
les
call
sarb
test
rol
jmp
orb
mov
cmc
aam
ret
in
ds
sti
ret
in
loopne
leave
jecxz
lea
sar
lret
ljmp
fstp
int3
lock
frndint
sarl
fst
call
adcb
int
cmc
aad
repnz
cmp
aaa
repnz
fxch
xlat
in
in
test
out
mov
das
cli
xlat
call
sti
stc
fsubr
in
cli
fadd
enter
cli
test
lret
xor
ror
int
std
repnz
cld
in
in
xchg
icebp
fisttps
in
out
into
mov
xlat
int3
test
cmp
ljmp
jecxz
ret
xchg
int3
ljmp
shr
vmovq
cmp
ds
repz
hlt
fcmovbe
fcmovbe
aam
jmp
call
in
div
aaa
repnz
cmp
iret
aaa
fmul
icebp
inc
aas
cmp
mov
lea
int
cs
repnz
enter
cmp
ret
in
test
and
xchg
into
icebp
sub
ljmp
cmp
sbb
idiv
cld
cld
sub
nop
xchg
frstpm(287
shr
leave
cmp
cmp
loop
cmc
fsincos
enter
stc
mov
loop
icebp
out
loope
test
lret
ss
xor
std
fnstenv
in
roll
fcmovbe
fadd
mul
incb
loope
test
xor
cmp
sti
lret
into
aas
shl
test
cmc
out
fcmovu
mov
loop
mov
xbegin
repnz
out
jmp
cmp
and
test
int3
sti
and
loopne
in
aas
in
lock
sti
out
repnz
fcmovnu
cmp
sti
les
loope
std
fldl
int
into
fdivs
fsub
fcom
aad
idiv
xor
jecxz
leave
mov
out
into
lret
mov
ss
idivl
cmp
incb
hlt
jmp
enter
nop
in
xchg
loope
lock
hlt
aam
clc
icebp
xlat
roll
mov
cld
fcmove
mov
loop
repz
shl
ret
call
call
ljmp
neg
and
sar
into
jmp
xor
sar
call
cmp
int3
add
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
in
hlt
mov
stc
loopne
adcl
jecxz
icebp
in
lret
sar
clc
iret
cld
faddp
fdivrp
loopne
jmp
jmp
jmp
lret
clc
not
cmp
cmp
repz
hlt
rcl
mov
fsubrp
nop
xchg
loop
out
in
jecxz
leave
not
int
out
cmp
out
hlt
sub
lret
cmc
mov
xchg
int
cmp
adc
aas
rcr
clc
cmc
repz
sbb
enter
adc
adcb
repnz
cld
cmp
cmp
jecxz
ret
aam
sbb
out
std
icebp
in
loopne
sbb
shll
leave
in
enter
idiv
clc
fistpll
div
xlat
rcr
cli
fimull
dec
iret
call
clc
aam
aam
div
loopne
add
loopne
loop
cld
lds
loope
adc
out
ljmp
fadd
fadd
ret
test
out
mov
out
int
fucomip
in
mov
das
in
repnz
jmp
in
movl
in
nop
xchg
out
dec
loopne
hlt
lret
in
in
lock
sub
lret
test
in
or
nop
into
out
mov
test
cmc
fsub
fadd
in
xlat
xchg
out
ljmp
fmull
in
fdiv
enter
int
icebp
test
stc
cmp
aad
jmp
rol
icebp
shl
testb
aaa
aad
fsubrp
std
rcl
cld
jecxz
faddl
addb
in
test
xor
cmc
stc
fnstcw
icebp
shr
xlat
mov
fsincos
mov
rcll
jmp
out
leave
xlat
sbb
rolb
ret
mov
in
in
test
loop
icebp
iret
int3
repnz
lret
stc
das
xlat
ds
or
fdiv
fdiv
incl
test
lret
ret
xor
lret
in
std
leave
in
jmp
loope
out
xlat
hlt
in
fcmovne
lret
mov
mov
aaa
xor
into
sti
rcr
clc
aas
cli
rol
cmp
jmp
in
rorb
sub
ljmp
jecxz
rol
aam
xlat
test
call
ret
jecxz
enter
call
ret
fildl
in
mov
popl
rcl
aaa
shll
hlt
fcmovne
ds
shl
fdivr
ret
out
xlat
mov
aas
orl
in
into
xor
in
call
in
rcr
out
loopne
lret
test
sti
lock
fisttps
enter
cmc
in
lret
in
and
aam
fiaddl
mov
adcb
enter
std
aam
divl
shr
test
cmp
test
test
lret
into
dec
test
in
jmp
cmp
std
out
rcr
xor
mov
mov
cmc
out
out
loop
xor
aaa
fdivrs
jecxz
loop
sub
ffree
test
decl
jecxz
idivb
rcl
xor
das
std
fcmovnbe
cmp
rcl
cli
loop
fcomp
enter
sti
xchg
addl
lret
addb
les
idiv
enter
out
cmc
not
xor
lds
cmp
stc
cmp
out
or
rolb
in
test
lret
icebp
in
in
test
xor
clc
aad
jmp
aaa
jecxz
test
fadd
leave
out
ficoml
shl
xor
shll
lret
sbb
repz
stc
ret
fisttpll
in
into
jmp
ret
aad
aaa
cmp
cli
out
shl
fdivrl
nop
into
mov
ficoms
cmp
sti
cmp
cli
leave
cli
cmp
cmp
fsubp
cmc
addb
decb
hlt
shr
int
int
enter
in
std
aad
aad
test
mov
lret
lret
ljmp
sti
out
repz
repz
clc
aad
cmp
lret
fdivrp
fcom
in
std
sub
shl
loop
in
jmp
repz
sti
cld
call
loope
fcomp
mov
loop
iret
out
in
jecxz
ret
cmp
dec
in
call
test
sti
int
xchg
or
leave
add
add
rcl
aad
aad
shll
out
lds
popf
loope
jle
add
jmp
aam
out
rcl
out
stc
faddp
ds
xlat
shl
loopne
stc
in
in
out
xor
loop
shl
iret
xor
cmp
sti
roll
test
mov
jmp
cs
ss
stc
cmp
cmp
in
aas
aas
fmul
aas
out
aad
ret
ret
fsubrp
test
xchg
fstl
out
xor
push
xlat
cmp
in
mov
ror
out
xlat
lea
xchg
sarb
cmp
aaa
fmul
cmp
jmp
aam
in
repz
out
int
std
repnz
sub
lock
into
ss
fcmovnbe
sti
out
jecxz
sar
icebp
ret
test
loop
out
jmp
shl
out
icebp
loop
sbb
in
enter
fsub
int
in
leave
adc
sub
in
cmp
ds
rcr
fcmovnb
jecxz
cld
fucomip
jmp
addl
icebp
clc
lock
out
ds
lock
aas
rcr
mov
addl
aam
xor
xlat
int
xor
stc
cld
loope
and
cli
addb
out
fucomip
hlt
xchg
xor
xor
aad
cld
cmp
sar
cmp
faddp
jecxz
in
in
test
jmp
ljmp
cli
jmp
loope
cli
out
fst
and
mov
rcr
icebp
xchg
ss
hlt
in
sti
shr
rol
into
sarb
in
loop
adc
sbb
lock
test
stc
ss
xlat
fcomip
in
clc
rcr
test
xchg
cli
icebp
repnz
mov
out
iret
jmp
call
xlat
stc
xor
fstp
aad
cmp
lds
rolb
fadd
add
mov
rclb
iret
cli
out
sar
aad
clc
neg
out
aad
fld
ljmp
mov
out
into
xchg
aam
out
vpsrld
hlt
enter
loope
loopne
aas
ret
in
xlat
nop
nop
int
lock
iret
xor
icebp
enter
cmp
ffreep
fsubr
out
cld
fmul
xchg
xchg
aaa
xor
fstp
fdivrp
repz
int
stc
aas
xlat
or
iret
cld
mov
filds
lret
sar
iret
cmp
out
stc
cmc
test
mov
neg
jmp
cld
xchg
cmc
aas
xor
repz
cmp
rcr
std
rcr
aam
ljmp
xchg
int3
icebp
aad
repz
shr
cmp
sarb
fst
sbb
test
fimuls
int3
mov
xchg
cmc
int
int
enter
ljmp
shr
lret
mul
ljmp
in
cmc
sub
icebp
aam
enter
aam
test
std
cmp
ret
fld
std
xlat
ljmp
lock
out
ss
jmp
std
fsub
cmp
mov
aad
test
fmuls
jmp
divb
xor
out
int3
cmp
hlt
not
add
lret
mov
fisttps
repz
rcl
out
lret
std
loope
div
xor
cld
aam
fmuls
and
rcl
sar
xor
rcl
xlat
fnstcw
rcl
add
fmull
fldl
shll
stc
not
int3
cld
cmp
sti
ret
jmp
loop
out
sub
in
leave
ror
in
xor
into
int
imul
in
rcl
xorb
jmp
fsubr
enter
repz
lock
shl
in
leave
out
xor
aad
cld
xchg
repnz
cli
mov
loope
lret
bnd
hlt
cmp
neg
repnz
cld
roll
test
xchg
xchg
hlt
mov
xlat
rcl
cmp
xor
xlat
out
sar
lds
in
loop
repnz
int3
iret
into
aaa
xor
xor
fsubrp
shr
cmp
fdivr
ror
hlt
mov
xchg
xor
enter
aaa
hlt
out
iret
loopne
test
fld1
add
out
in
push
cld
xchg
in
mov
cs
out
cli
int3
sub
in
aas
fdiv
and
testl
lock
xor
fucomip
shl
cmp
div
xchg
rcl
testb
lret
loop
out
in
rol
out
sarb
repnz
fdiv
stc
ret
mul
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
sbb
jg
scas
add
repz
in
fdivp
clc
ljmp
xchg
clc
in
xor
ljmp
in
incl
xchg
lret
mov
in
fcoml
aaa
ret
xor
rcl
enter
shr
mul
xchg
fmul
in
ljmp
xchg
xor
xor
cmc
out
shl
or
out
in
ss
in
aad
fcmovnbe
add
out
xchg
xor
cmc
rcl
jmp
addb
fadds
iret
jecxz
sbb
imul
loop
bnd
fucomp
xor
into
in
into
iret
mul
aas
cmp
mov
nop
loop
mov
and
xor
div
aaa
into
aam
fsub
int
cmc
into
fsub
leave
xchg
fcoml
ljmp
cmp
loope
shl
incb
rcr
and
in
dec
std
faddl
cmp
cmp
lret
ds
ljmp
xlat
mov
out
fimuls
fldl
xor
lock
fidivrl
aas
fdivrl
out
adc
fsubp
roll
mov
mov
test
out
in
out
fcmovu
aad
cld
fucomp
cmc
in
jmp
fsubr
leave
int
shr
cmp
enter
repz
fdivr
out
jmp
movl
xlat
jecxz
into
shr
cmp
ret
loop
icebp
test
fld
call
int3
aam
iret
repnz
imul
cmp
test
aad
xchg
std
mov
dec
mul
int
aam
test
aad
cmc
cmp
iret
rcl
leave
loopne
ret
rcr
sbb
test
in
nop
out
mov
leave
cs
ss
cmp
clc
cmc
repnz
fucom
xor
ljmp
shr
aam
out
cmc
idivb
mov
jmp
faddp
nop
xchg
in
sub
jmp
sti
cmp
cmp
enter
fsqrt
in
into
lret
repz
cmc
hlt
into
shl
sar
imul
int
aas
rcl
loope
xlat
mov
sti
ljmp
repz
out
xchg
into
xor
out
cmp
out
std
ds
rcr
std
hlt
leave
mov
xchg
icebp
addl
jecxz
fistpll
xlat
sti
repz
hlt
iret
fildl
fsub
std
iret
or
test
sub
fsubr
lret
loopne
std
loope
shl
out
in
ljmp
lret
ljmp
int
faddp
idivb
jmp
mul
shl
repnz
idiv
les
into
iret
in
xor
out
cmp
icebp
int3
out
out
sar
add
jmp
fiaddl
lret
ret
xor
aam
jmp
xlat
loop
aad
hlt
cld
jmp
std
ret
into
mov
in
out
lret
cld
cmp
fmul
out
jmp
in
flds
cmp
lds
lret
loope
in
int3
cmc
lock
icebp
int
repz
fdivrp
xchg
out
orb
shlb
cmc
jmp
in
out
fldpi
loop
loop
xchg
ds
std
in
enter
iret
test
in
sub
jecxz
fdiv
test
out
in
icebp
cli
clc
ffree
in
fcoml
imul
xor
icebp
out
cmc
jmp
repz
rol
hlt
clc
shr
mov
sbb
loop
shl
out
enter
leave
repz
imul
repnz
aam
cmc
dec
fcmovnu
jmp
test
in
cli
divb
ljmp
aam
fimull
out
in
jmp
xchg
fucomp
jecxz
fcomp
xor
ss
imul
xorb
aad
ret
in
jmp
lret
sti
jmp
out
fcom
int3
into
out
fnstenv
sti
in
cmp
cmp
fcmovu
out
in
mov
addl
loop
imul
lock
shr
add
aas
cld
ds
mov
xchg
mov
fstl
stc
lock
repz
repz
clc
std
icebp
ret
loopne
movb
sti
repnz
test
call
and
les
xlat
aas
test
les
out
fcmovnbe
div
fsubr
xlat
shl
out
sbb
fiadds
xchg
lock
inc
or
inc
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
push
inc
out
jg
jg
or
jle
xor
rcl
icebp
rcl
int3
int3
cmp
loopne
repz
in
mov
in
loop
lock
loope
repnz
icebp
divl
ds
int3
ret
icebp
aad
icebp
shl
aad
jmp
lret
rol
loopne
ret
xor
loop
in
fcmovnb
adc
xlat
leave
out
iret
iret
test
add
fmul
rcl
loope
out
stc
hlt
icebp
repz
decb
int
leave
mov
fisttps
out
enter
xor
rol
mov
xlat
cmp
mov
in
mov
lock
xor
fnstcw
cli
std
cmp
rolb
xor
mov
loopne
rolb
out
sarb
cli
aas
test
out
test
fcmovnb
fxch
int
rcll
repz
into
cmp
cmpb
not
add
lret
xchg
xchg
ljmp
repz
fdivr
cld
aam
jecxz
fcmovnbe
out
shl
in
sti
in
shl
jmp
cli
fidivl
test
cmc
xchg
call
ljmp
mov
aaa
in
idivl
ljmp
cmp
lock
test
iret
rcl
imul
fadd
idiv
cmc
repz
int3
xlat
fadds
mov
cli
jmp
sar
in
in
xor
sbb
aam
ret
inc
mov
out
test
not
in
xlat
xlat
jecxz
repz
aas
shl
test
sub
cmp
fmulp
fsubrs
repz
sar
std
cmp
ljmp
out
in
xchg
or
lret
fists
repz
jmp
ds
fcompp
lock
xlat
loopne
ret
enter
in
lock
fucomi
test
int3
fnstsw
ljmp
cmc
cmc
fdivr
cmp
orb
fisttps
lret
idiv
icebp
in
fistpll
cmp
xchg
in
fsub
fimull
lea
out
in
frndint
fdiv
div
roll
fmulp
faddp
lock
into
les
ljmp
into
rcr
fcmovu
lock
fdiv
repz
decb
out
jmp
ret
clc
sar
cmp
loope
shl
icebp
leave
out
loopne
lret
int3
loop
xchg
sub
imul
cmc
hlt
out
cmp
repz
loop
cmp
stc
lock
loop
fcmovnbe
xchg
lret
out
call
repz
fdivrs
test
fcmovbe
out
xchg
ljmp
call
lret
fstpt
fcmove
xlat
fidivrl
fistpll
clc
sbb
in
loope
in
jmp
xor
aas
fnstsw
fdivr
aad
stc
jmp
icebp
in
out
ljmp
int3
ljmp
aam
xchg
test
adc
vpaddsw
aam
ljmp
enter
cld
clc
test
sub
stc
fxch
xlat
in
clc
ljmp
stc
jecxz
cld
iret
lret
iret
mov
in
int3
out
shlb
ss
cmp
int3
loope
xchg
xchg
int
repnz
in
std
stc
jmp
cmp
jecxz
cld
sti
jecxz
call
fisttpl
fdivs
sub
repz
repnz
testb
enter
xchg
cmc
xor
fstpt
clc
rcl
loope
cld
enter
enter
iret
cld
repnz
xor
aam
fdivrl
sti
clc
hlt
mov
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
loop
xor
out
jg
or
jle
fcmovu
repnz
ds
repz
int
cld
enter
rclb
fsubr
cs
sub
loope
hlt
loop
loopne
ljmp
jecxz
loopne
aaa
out
ljmp
cli
addb
fucomp
cmp
mov
mov
icebp
iret
rcr
imul
icebp
fnop
ljmp
in
mov
cli
in
fimuls
xor
leave
repnz
fprem
sar
test
mov
call
int
decb
jmp
int
hlt
cmc
in
iret
iret
cmp
mov
fdiv
shl
rorl
repz
cmp
cmp
lock
repz
cmc
idivb
out
cld
mov
cli
adcl
out
in
repz
aaa
xlat
loope
repz
ret
hlt
mov
lock
out
stc
into
jmp
fmul
clc
int3
ret
in
loopne
fmul
xchg
into
iret
clc
jmp
out
lock
shr
hlt
hlt
xor
int3
aam
jecxz
cld
mov
jmp
jecxz
loopne
aam
loop
leave
in
fdivp
in
shl
xor
inc
xlat
enter
mov
sti
xchg
loop
repz
fdivs
aam
sti
fnstsw
in
div
xchg
lret
vpsubusw
out
mov
in
int
out
dec
cmp
xchg
cli
sti
cli
xchg
in
rorl
repnz
out
in
fdiv
inc
xor
hlt
lds
xchg
fsubrp
std
in
icebp
test
sti
out
fcmovb
cld
stc
cli
stc
in
cmp
rcr
jmp
nop
shlb
ret
fdivrl
cmp
in
adc
and
loopne
test
int3
out
fiadds
xor
fcmovb
fcomp
loope
repnz
cmc
mov
stc
lock
jmp
enter
cmp
out
out
rol
fldl
call
xchg
in
mov
test
ret
cmp
cli
leave
aam
into
std
int
aad
fiaddl
out
clc
shl
xchg
mov
xchg
out
loop
aad
jmp
rcr
jmp
cmpl
mov
fisttps
out
mov
enter
in
das
int3
shr
int
sarl
cld
out
std
xchg
fmul
roll
cmp
rcr
flds
fidivrl
out
stc
faddp
jmp
into
aad
xor
iret
test
hlt
fiadds
stc
test
aas
ret
sbb
cld
xchg
in
fadd
lret
int3
int
repz
sar
test
cmp
ret
lret
orl
int
call
shr
loope
int
in
loope
fld
std
mov
loope
into
mov
hlt
xchg
int
xor
call
icebp
icebp
lds
xchg
xchg
in
out
xchg
cmc
cs
shr
ljmp
xor
cld
into
out
mov
cld
ret
loope
test
call
out
shlb
repnz
cmp
hlt
cmp
cmp
hlt
aam
lock
mov
fstp
into
mov
das
out
int
call
cmp
aaa
sti
stc
xlat
ret
fsubr
fsubr
jmp
out
repz
jecxz
repz
sar
fcmovnbe
idiv
ret
icebp
fucom
out
adc
sti
icebp
mov
enter
int
aad
in
jmp
sti
aas
and
icebp
nop
mov
xlat
aad
enter
jmp
cmc
rol
call
out
leave
mov
mov
fmulp
hlt
loop
loope
ret
sub
cmp
ljmp
push
push
call
fiadds
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
and
cmc
xchg
add
lock
lret
cld
call
cmp
loopne
cld
in
leave
mov
test
into
loopne
jecxz
xor
cmp
lret
aas
fistpll
rcl
cld
fsub
call
mov
out
nop
xchg
in
in
ror
cmp
aaa
lock
cmc
incb
inc
fisttps
mov
mov
cs
cmp
iret
cmp
loope
rcl
int
ret
test
clc
sti
aad
cmc
addl
mov
cmp
lock
shl
jecxz
in
in
out
lock
out
call
shl
cmp
int3
in
out
cmp
cmp
fcmovnb
aas
mov
fucomi
testb
xchg
mov
aam
fmul
lock
xor
aaa
cmp
fucom
std
loop
ljmp
jmp
in
out
jecxz
clc
out
aaa
sub
fdiv
shl
cli
leave
in
loop
fiaddl
out
shr
ret
cmp
out
cmp
aad
aad
clc
leave
ret
mov
loope
iret
mov
enter
in
out
sarb
add
cmp
xchg
xchg
xchg
lret
dec
div
aaa
fcmovbe
adc
stc
mov
stc
sub
xchg
fucomip
xchg
nop
leave
loope
cmp
sub
faddl
mov
lock
jmp
out
ret
rol
jmp
icebp
repz
repz
loope
out
fildl
fldl
call
ljmp
cmc
cmp
hlt
jmp
clc
jecxz
clc
loop
int3
aam
ret
repz
out
cld
fstpt
icebp
lock
in
and
mov
fsubp
loop
aam
cs
hlt
in
shr
cli
and
shl
fsubr
test
xchg
fdivp
mov
les
ror
cs
in
cmc
sar
int
in
fdivrl
repnz
xchg
orb
ret
hlt
repz
cld
div
add
lock
ret
fildl
loopne
test
call
in
fucomp
cmc
aas
cmp
clc
aas
call
mov
mov
mov
iret
in
xor
lret
ljmp
into
not
sbb
fmul
jmp
loope
ss
sti
cmc
out
sti
fcomip
cli
ds
out
aam
test
cld
lock
test
sub
xor
cmp
shr
iret
jmp
aam
iret
cli
fcmovnb
fimull
out
in
test
test
lock
xlat
sti
not
fcomp
repnz
addl
lret
test
mov
into
hlt
clc
xor
in
ljmp
test
test
frstpm(287
sub
std
ror
ret
repnz
ljmp
shl
aad
fnclex
roll
test
in
iret
adcb
lret
repz
fcmovb
loop
fnstsw
loop
incb
xor
aad
jecxz
cmp
cmc
aam
rcr
ret
loope
cmc
incl
iret
jmp
ss
int
aam
cmp
jmp
cmp
stc
ret
out
fisttpll
xchg
vpsubsb
out
aam
out
rcl
inc
sbb
aas
cli
xlat
loopne
in
mov
repnz
mov
popl
imull
in
int3
fadd
aam
rcr
fsub
out
lock
xchg
cld
xchg
mov
in
aam
in
out
repz
int3
in
out
loopne
mov
sti
out
out
icebp
test
nop
aaa
shr
in
fnsave
idiv
jecxz
sar
idivl
ret
fcmovb
jmp
cli
loop
lock
xchg
out
xchg
xor
mov
andl
add
adc
jmp
rcl
aad
rcrl
push
push
or
jle
shr
in
cmp
lock
cmp
lret
ljmp
rcl
aam
repnz
xor
aam
fildl
aas
cmp
loope
fnsetpm(287
fcmove
sti
mov
repnz
shl
cmp
xor
fstpt
fldlg2
test
hlt
sar
enter
xchg
loopne
in
xchg
loopne
lock
call
fst
cmp
loope
out
loop
and
xlat
sar
loopne
lock
sar
xor
cmp
cmp
fdiv
fcos
loope
xchg
into
in
iret
lret
jmp
shl
cli
cs
fcom
aam
repz
std
sar
hlt
rcr
dec
loop
in
mov
stc
loope
fdiv
fldlg2
repz
cld
int
fdiv
cmpl
roll
fmuls
int3
shl
xor
shl
enter
shl
adc
fsub
leave
loop
fisttpl
mov
shl
fbstp
into
icebp
fidivl
fxtract
lret
out
out
ret
ret
cld
mov
sti
shr
in
mov
in
xor
cli
out
in
cmp
loope
in
loop
cmc
lret
xor
xchg
fiadds
fmul
in
jecxz
fsubr
out
loopne
cmpb
out
xchg
aam
clc
inc
clc
int
sub
mov
call
idiv
sbb
cmp
hlt
sti
cld
rolb
fcmove
cld
xchg
out
out
xor
into
clc
loopne
fdivrs
mov
idiv
cld
ljmp
enter
cli
out
clc
ret
adc
int
iret
int
cld
fucomi
xchg
in
out
iret
in
aam
sti
int
std
repz
shl
ret
loopne
cmp
out
call
jmp
int
cld
ret
test
lock
cmc
mov
mov
rclb
clc
stc
repnz
out
cmc
rcl
cmc
aad
in
lds
ret
mov
ss
cmp
fprem
xor
std
loopne
addb
lock
test
xchg
xor
into
rol
std
out
rcr
into
rcr
shl
roll
out
mov
xor
lret
cmpl
stc
neg
in
in
sti
sti
stc
jecxz
lock
not
loope
xor
aaa
cmp
ret
sarl
cmc
mov
lock
test
xor
lock
aam
aas
lret
repz
ret
xchg
in
fcmovbe
mov
jecxz
sbb
xchg
out
orl
out
repz
ljmp
fadd
ret
or
in
iret
ljmp
xor
into
aad
repnz
fnstsw
out
cli
aam
xchg
shl
repnz
ret
ret
cmp
out
fucomi
out
xlat
clc
rcr
cmp
movl
out
shll
aam
lret
stc
sti
cmp
shl
into
loopne
fdivrl
int3
fldl
faddl
stc
out
cs
fsubrp
repnz
fdivrp
jecxz
out
hlt
out
jmp
lock
fimuls
out
int3
sar
add
lock
in
mov
aam
mov
in
mov
call
repz
fucomp
repz
std
sub
hlt
testl
lret
test
xchg
icebp
hlt
fmul
cmp
iret
xlat
iret
in
cmp
call
aad
lret
fucomi
ficoms
out
out
int
xlat
xlat
aas
int3
aas
faddp
hlt
fildl
vpsraw
mov
loopne
out
mov
iret
aaa
stc
aaa
leave
xlat
in
fstp
in
rol
xlat
sti
test
out
and
mov
out
ljmp
cmp
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
jl
push
sti
jg
roll
jle
loope
test
aam
ret
mov
or
loop
fcomip
test
imul
cmp
cs
cld
icebp
xor
loop
roll
xchg
xlat
int
jmp
in
xchg
subl
ret
int3
cli
fcmovbe
xlat
fnop
and
repz
addl
xchg
test
ret
xor
aaa
out
aam
aad
test
clc
in
sti
in
mov
sub
fmul
fucomip
cmp
cmp
enter
std
jecxz
into
lret
test
aad
iret
cmp
xor
xor
aaa
rol
aas
aam
dec
xrelease
int
jmp
out
shl
in
leave
fnstenv
out
cli
xlat
aam
ljmp
shl
not
ret
out
call
hlt
loope
loop
cmp
int3
idivb
sbb
out
into
and
fucomi
stc
cli
mov
call
clc
fdiv
out
in
cli
and
ret
in
fcomi
test
in
roll
test
cmc
cmp
int
fcmovbe
fmul
cmp
loopne
repz
mov
loopne
sub
loopne
loop
fdivs
shl
cli
stc
aaa
aaa
fmul
lock
aad
iret
stc
aam
loopne
jmp
xchg
leave
sti
out
xor
cmp
aam
cmp
out
aas
hlt
xchg
cld
xchg
mov
sub
ljmp
shl
addb
lds
mov
fiadds
in
neg
in
rcl
shr
push
fidivrs
idiv
clc
not
lds
cld
into
into
test
ffreep
shl
repz
in
jmp
lret
jmp
fcmovu
clc
ret
test
stc
out
std
rorb
rcr
out
les
xor
cmp
fiaddl
enter
stc
fucomip
roll
shrb
loope
sti
addb
jmp
mov
out
jecxz
icebp
xlat
fsubr
cld
lret
ljmp
enter
mov
int3
nop
test
into
xor
fldcw
hlt
not
hlt
sti
fdiv
cmp
cld
test
loop
addb
xor
shr
hlt
in
lret
cmp
aam
cmc
cli
mov
loope
aaa
hlt
into
int
std
repz
shl
ffree
mov
in
enter
int3
out
rcll
aaa
in
fidivrl
fnstcw
clc
aad
xor
cmc
shl
lret
fcom
inc
int
lret
xor
test
shl
fcmove
jmp
shll
fsubr
addb
lret
ret
in
iret
xchg
nop
lret
std
cmc
loop
leave
xor
cmp
xor
cmp
jmp
rcl
mov
mov
test
jecxz
into
xor
int3
rcr
lret
cld
cmp
rcl
fldl
leave
int3
into
lock
repnz
mov
loopne
out
sarb
ss
xlat
fcmovnbe
aas
lock
aam
out
in
clc
repnz
out
std
jmp
in
cmp
call
cli
sti
adc
jmp
les
hlt
lret
xchg
sti
fcmovu
ljmp
in
loope
ljmp
icebp
decb
int3
stc
aaa
shll
int3
xlat
aas
fidivrl
repz
hlt
fcomp
loop
out
test
fcmove
test
into
push
cs
jmp
sarl
rol
aaa
into
aad
fsub
orl
int
clc
in
lret
repz
test
cmc
in
loope
ljmp
fistl
out
int
shl
rcl
fdivr
cli
lock
lret
in
out
ds
xor
in
call
jmp
repnz
not
ror
rol
clc
icebp
loop
ror
fmull
shl
fdivp
rol
out
fmul
dec
cmp
fadds
loope
mov
mov
out
out
test
loope
sub
stc
clc
jmp
loope
out
loop
in
ffree
ret
jmp
test
movl
movl
mov
sub
jmp
mov
fstp
enter
imul
jb
jg
roll
jle
leave
icebp
repnz
flds
clc
cld
test
jmp
fdivr
std
push
int
loop
loope
cmp
cmc
in
rolb
loopne
lret
in
fld1
cli
leave
nop
in
int3
mov
int3
not
std
incl
mov
in
fucomip
ret
jmp
loopne
lock
in
sar
ss
out
out
fstpt
sar
in
lock
cld
jmp
mov
xchg
loopne
clc
sub
repz
xlat
sarb
repnz
in
stc
jmp
fstl
lret
repnz
out
iret
aad
in
aam
mov
in
jecxz
fsubrp
xchg
jmp
aaa
call
jmp
fucompp
in
aam
repz
ficoml
fbstp
ror
enter
fdivrs
test
repz
mov
fists
out
in
in
ljmp
cli
lock
loopne
loopne
xlat
in
fsubr
orb
in
jmp
lock
lock
cmp
lock
test
test
loopne
loopne
int3
test
in
in
cs
into
out
enter
fsub
xor
aad
rcl
std
mov
out
out
fsub
hlt
aad
lret
aad
in
test
cmp
in
xor
mov
and
and
fsubp
in
stc
iret
in
xor
aam
fcmovnb
out
stc
cli
sti
mov
test
fdivr
mov
std
repnz
fsubrp
repz
xor
ss
aaa
ljmp
xor
cmc
cli
mov
mov
in
cmc
rclb
cmp
cmp
xor
fadd
call
aaa
fdiv
repz
fstp
enter
mov
sub
xor
bnd
fcomi
xlat
iret
cmc
aad
iret
fildl
jecxz
std
loop
in
out
iret
aaa
lret
fxch
shl
cmc
repz
lret
rol
hlt
test
std
cld
fucom
xchg
adc
jmp
lret
lret
iret
std
into
std
in
cmp
ljmp
nop
repnz
rol
in
xor
cli
cmp
xor
loope
sarb
xor
idivl
cmp
fisttpll
in
roll
divb
stc
call
in
stc
ffree
imul
out
sti
mov
out
in
or
into
xor
cmp
sar
cmc
loope
lock
cli
test
cld
sti
or
in
repnz
into
das
cmp
lret
std
int
repnz
jecxz
and
vcmpps
cmp
bnd
into
fucomip
div
into
out
xlat
aaa
lret
adc
ffree
lock
mov
testb
cld
mov
neg
xor
flds
call
lret
sti
sbb
in
nop
leave
lds
out
out
std
cmp
fdiv
in
cld
cmp
ret
stc
loope
in
mov
repz
lock
into
cmp
repz
jmp
fmul
call
lret
enter
stc
xlat
aaa
iret
fxch
loopne
aam
fcmovnb
ljmp
shl
xchg
out
in
in
out
ds
sti
dec
aad
rol
fiadds
orl
mov
in
sar
in
iret
cmp
rol
loop
ret
cld
out
loop
fsub
lock
shrb
shlb
rcl
ds
incb
faddp
jmp
int3
faddp
std
repz
ljmp
fdivl
cmp
aas
cld
faddl
sti
sar
fcomi
lea
xor
xor
out
fnstsw
test
mov
xchg
xchg
fildl
call
aam
fdivp
std
addb
flds
mov
out
call
cmp
out
cld
in
std
cmp
sti
test
testl
out
rol
jmp
repz
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
xor
in
test
jmp
fdivp
aad
repz
fdiv
xlat
shl
hlt
cli
xlat
fld
aam
and
jmp
loopne
call
shr
hlt
xlat
ss
in
xor
shl
in
test
jecxz
test
cld
in
cli
sti
xchg
int
aas
shr
ljmp
sar
and
sbb
xlat
cld
fcmovu
std
mov
out
out
mul
aam
lret
aad
loope
cmp
fidivrs
hlt
cmc
xchg
fimuls
mov
nop
repnz
cmp
in
fidivl
cmc
aad
rcr
sti
hlt
cmc
mov
sub
xchg
iret
mov
cmp
ror
xlat
fdivrp
shr
not
shl
cmp
mov
stc
mov
sub
out
int3
ljmp
aam
cmp
out
ljmp
int
out
leave
lret
sar
icebp
xlat
aas
cmc
cmc
shl
in
std
shl
test
int3
cld
nop
adcb
out
rcl
stc
shr
cld
jecxz
loope
in
fadd
mov
mov
incb
rcl
ljmp
cld
leave
cmp
cmp
loope
jecxz
xlat
enter
fisttps
in
ret
idiv
lock
lret
inc
cld
test
sar
xchg
lret
sti
and
mov
lret
repz
aaa
sub
ss
cmp
ljmp
fcmove
mov
xchg
jecxz
int3
mov
enter
shr
dec
aad
aas
fdiv
in
jecxz
shl
enter
loope
lret
in
ljmp
into
into
xor
int
fcomi
loopne
lret
test
ficoml
ret
fadd
out
lock
shl
cmp
repnz
test
loope
xchg
lock
fdivp
loopne
call
icebp
rcl
call
into
in
xlat
jmp
test
xlat
lret
mov
cli
out
cld
enter
out
xor
cmc
test
out
cmp
ss
repz
loop
mov
int
in
xor
fcmove
aaa
call
sub
into
cli
test
mov
ljmp
in
loope
loop
clc
aad
shl
cmp
sarb
fcmovbe
fildl
xchg
call
loopne
iret
in
cs
out
lret
ret
fadd
lock
test
fld
xchg
xchg
icebp
xor
aam
xlat
cmp
fsub
cld
rol
fstp
cmp
xchg
jmp
mov
cmc
ret
loopne
repz
cmc
cmp
std
xor
fnsetpm(287
faddl
mov
fxch
out
xchg
int3
int
clc
ljmp
rol
in
lock
jecxz
test
in
stc
jecxz
test
in
ror
cmp
loopne
shl
addb
testl
enter
aad
xor
lock
fiadds
loope
in
lret
xor
fcomip
shll
aad
cmp
cmp
cmp
out
int3
loop
jecxz
out
fcmovnu
lea
call
rcl
ljmp
ss
cmp
cmc
aad
cmp
ret
in
out
call
call
cmp
xlat
fidivrl
sarb
cmp
shl
loope
and
fdiv
int
call
fisubrs
iret
ss
cmp
aam
sarb
cmp
addl
test
out
in
out
repz
fucomi
ss
clc
sbb
jecxz
leave
neg
mov
iret
filds
xor
cli
int
ss
in
aaa
testb
fmull
fsubrp
loope
cmp
loop
in
fidivrl
leave
aad
test
les
jmp
mov
test
xor
hlt
cld
aaa
xlat
cmp
fstp
jmp
out
fsubr
addb
ret
out
ljmp
ret
sar
xchg
sbb
movb
cmc
int3
not
int
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
jae
lahf
scas
and
jg
roll
jle
fdivs
fdiv
int
ret
aam
enter
loope
decl
aam
aad
jecxz
lret
cmp
aas
fld
icebp
cmc
cmp
mov
fadd
jecxz
repnz
in
cmp
iret
cmp
icebp
mov
fimull
into
xchg
repnz
into
int
std
out
div
std
repz
fsubp
loopne
loopne
xlat
aas
into
mov
xchg
mov
fldl
icebp
icebp
imul
aam
lret
lret
std
in
icebp
out
hlt
lret
addb
int
mov
cmc
jecxz
xor
fsin
lret
fucom
clc
addl
jmp
jmp
cmc
out
rcl
out
cmp
call
cmc
ret
cmc
roll
fldl2e
int3
ret
loopne
adc
jmp
hlt
cmp
loope
lret
fcmove
into
hlt
lret
out
mov
xchg
shl
ss
fsubrp
cmp
icebp
ret
fdiv
fmull
addb
mov
int
xor
mul
std
cmp
in
aad
fcmovnb
xchg
sti
fsubr
fcomp
mov
call
imul
fsubr
rcr
cld
ds
loopne
mov
jmp
leave
jmp
iret
xchg
and
cmp
shr
int3
cld
bnd
fdiv
aas
in
icebp
loope
lret
mov
int
xchg
roll
int3
ret
cli
not
sbb
int
cli
ret
ret
loopne
mov
in
stc
out
repnz
jmp
ror
sub
cmp
ljmp
push
cld
test
in
hlt
test
test
or
cld
int3
xchg
in
mov
call
cmp
cld
xlat
ret
std
in
in
testb
jmp
lret
jmp
int
rcl
clc
cmp
aad
repz
dec
jecxz
loop
xchg
iret
cli
out
into
loopne
cmp
clc
icebp
call
div
fldl
xchg
xor
ret
icebp
sub
std
int
ljmp
clc
roll
fcmovnb
into
lret
lret
test
cli
jmp
shl
fstpt
xlat
fdivp
testb
mov
ret
repz
aam
test
loope
cld
stc
fucom
lret
fmull
fcmovnbe
shl
sub
ret
in
rcr
clc
ds
sbb
out
cmc
xlat
xchg
out
int
cli
test
iret
shl
sarb
icebp
cld
sarb
leave
fcmovb
sti
loopne
fxch
fiaddl
hlt
call
ljmp
cmp
in
aam
sbb
jmp
jmp
mov
lock
xor
shr
loope
repnz
lds
mov
xlat
jmp
flds
cmc
in
cmp
hlt
repnz
fucomi
jmp
fadd
inc
and
or
out
decb
jecxz
repnz
cld
lret
into
cmp
out
clc
fldl
int3
cld
xchg
out
int3
test
loopne
ss
cmc
lock
sti
fcmovbe
hlt
ds
lock
fdivr
ljmp
repnz
leave
ror
cmc
jmp
cmp
out
xor
cmp
out
enter
fsubr
out
fcmovne
out
repz
shr
lock
out
shl
out
xor
ret
xchg
neg
loopne
mov
sti
nop
repnz
rcr
int3
not
repnz
sbb
test
movb
nop
xchg
shl
jmp
clc
lret
jmp
fadd
enter
sti
ljmp
orl
lock
jmp
inc
cld
xor
mov
fucom
std
clc
in
test
sar
fucomi
in
leave
clc
aaa
shl
cli
ds
into
faddp
ret
fisttpll
test
ljmp
cld
cmp
out
cld
rcr
icebp
repnz
loope
or
std
rcl
stc
ss
cmp
int
aad
xchg
aam
std
and
fsubr
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
jg
roll
jle
out
loopne
addl
enter
fnstsw
in
cld
jecxz
shl
repz
int
jecxz
rclb
out
iret
cmp
jmp
cld
rcr
fsubr
mov
out
fiaddl
rol
xlat
xor
lock
cmp
aad
cld
into
mov
rcr
sti
mov
mov
mov
lock
out
ss
not
cmp
aad
into
aam
enter
test
in
xchg
ficoms
stc
repnz
add
ds
repnz
in
fcmovu
test
rcl
lds
into
fcmovnu
icebp
out
loopne
loope
cmp
hlt
icebp
jecxz
loope
out
xlat
out
xchg
cmc
repnz
in
repnz
into
jmp
aam
int3
roll
ljmp
ljmp
xlat
ss
shl
call
jecxz
mul
ret
ret
int
out
in
enter
shl
sar
fadd
in
aad
ror
loopne
int
icebp
neg
hlt
sti
xlat
jmp
mov
sti
mov
aam
int3
shr
jmp
cmp
cmc
cmp
rcl
hlt
cmp
cld
aas
in
std
shl
lock
xor
leave
leave
div
loope
fdivp
iret
hlt
idiv
cmc
rcl
xlat
loope
clc
ret
call
ror
loop
icebp
icebp
divl
lock
aam
in
cld
les
out
xlat
into
stc
and
int3
ficoms
iret
clc
leave
cmp
aad
int
faddl
ret
fadd
loopne
aam
xchg
fsub
cli
call
sti
xor
loope
repz
sbb
fneni(8087
iret
nop
lret
lret
loopne
xor
icebp
frstpm(287
sar
clc
stc
xlat
int
test
leave
sti
leave
aad
in
fdivrp
loop
xchg
jmp
ror
clc
cmp
incl
cmp
int
fstl
cli
sti
lock
cmp
repnz
not
fldl
fscale
fmull
in
sti
aam
repnz
shr
loope
adc
cmc
dec
fiaddl
loop
sti
xor
aas
ds
sbb
sti
ljmp
lret
iret
mov
xchg
out
out
shr
sub
fdivrs
fdivr
out
lret
fcom
fcmovnu
loope
cli
out
std
out
ljmp
jecxz
cmp
fucomp
jmp
cmp
hlt
sti
aaa
mov
loope
cmc
call
xchg
adc
ljmp
fsubr
clc
std
not
jecxz
adc
in
fcmove
int3
sub
ret
fnstenv
hlt
in
enter
fcomip
cli
shl
xlat
ljmp
shr
shl
sub
in
jmp
cmp
fdivrl
cli
out
std
roll
xchg
xchg
jecxz
loope
repz
sub
cmp
fmul
sarb
cli
addb
mov
test
test
repnz
sti
into
imul
sti
into
ffree
loop
test
sti
cld
loop
out
roll
xlat
into
neg
stc
aam
idivl
xlat
test
lock
mov
ret
in
xlat
in
test
loope
jmp
out
aad
jecxz
cmp
cmp
stc
cmc
into
in
xchg
in
leave
sbb
ror
clc
shl
xor
cmp
cmp
lret
lock
int3
cli
shl
enter
call
lret
jmp
idiv
lret
fmul
cmp
cmp
fldlg2
repz
loope
test
ret
jmp
rcr
xchg
mov
xor
repnz
in
call
fdivrl
loop
sti
ljmp
test
repnz
cmc
cmp
xor
aam
icebp
aaa
rcl
rcr
ror
mul
test
xchg
orb
in
ss
ljmp
clc
cmp
aam
out
cld
testl
int3
enter
out
fld1
xor
sti
hlt
ret
fcmovbe
fadd
jmp
fsub
nop
mov
in
iret
cmc
mov
rorl
imul
aam
enter
aad
cmp
and
nop
jg
roll
jle
cmp
addb
std
call
mov
xchg
mov
lds
leave
cmp
fdivr
cmc
fsubr
aas
cli
ret
inc
loopne
sti
jecxz
xchg
cld
int3
loopne
rolb
jmp
into
ljmp
aam
rcr
aas
fcomip
ror
cmp
mov
shl
xor
in
out
fidivs
sbb
sarl
std
aad
int3
aad
into
fcomip
test
cmc
stc
leave
cmp
enter
in
cmp
repnz
out
out
loopne
fdivp
int3
mov
into
clc
clc
iret
enter
fidivrs
repz
xchg
call
mov
incb
mov
xor
jmp
in
ds
xlat
cmp
mov
aam
in
lret
leave
in
lock
in
cmp
cmp
into
fscale
in
fcmovnu
hlt
std
sti
orb
jecxz
xor
fsincos
out
lret
cmp
lock
mul
call
mov
out
jmp
idiv
fdivrp
fcomip
xlat
xorl
test
loope
incl
lret
mov
mov
loopne
clc
xor
div
repnz
loope
loopne
aad
rcl
mov
lret
out
mov
loope
ffreep
divl
cmc
push
sti
ljmp
cmp
test
loopne
xlat
xchg
mov
in
iret
out
shr
roll
rcl
leave
shr
fcmovnb
mov
mov
sub
ror
icebp
xlat
out
ss
cmc
fdivrs
jecxz
aas
std
ds
fmuls
jecxz
in
cli
leave
xchg
jmp
repz
fidivrl
cmpb
xlat
out
clc
xlat
xchg
cmp
mov
nop
leave
in
loop
in
cmp
jecxz
aam
into
out
rol
adc
loopne
mov
repnz
xchg
test
xor
ljmp
shl
test
clc
out
clc
movl
iret
mov
leave
enter
ss
out
call
roll
stc
leave
xchg
cmc
aad
xor
in
call
cmp
cmp
shl
enter
clc
call
filds
aam
cld
sti
xor
aam
loop
fcmovbe
cmp
shl
fadds
in
repz
out
ljmp
loop
loop
jecxz
sti
cld
jmp
xlat
leave
xchg
ret
addb
in
fcomi
repz
test
shr
ds
or
leave
icebp
xchg
out
iret
ret
int3
out
xor
cmc
xor
cmp
ret
int3
loop
int
clc
xlat
xor
shll
not
iret
test
shl
in
out
xlat
test
jmp
xlat
ror
jmp
aad
and
aam
jecxz
xchg
mov
shl
mov
fst
hlt
int
int3
aad
loop
fdivr
fsubp
cmp
xchg
xchg
xchg
int
shl
cli
sub
ljmp
rcr
call
cli
fcmove
stc
cmp
out
enter
mov
xor
enter
fidivl
lock
fcmovbe
in
ds
xlat
hlt
std
test
mov
in
xchg
sub
aad
icebp
cmp
cmp
xor
loop
cli
ret
cmp
in
clc
test
xchg
mov
out
hlt
into
cmp
aam
ret
ret
repz
leave
jecxz
cld
std
rcl
xchg
aaa
idiv
out
shr
aaa
iret
shl
addl
leave
xlat
cmp
repnz
decl
in
test
cmp
cmp
cmp
cmp
fdivr
out
fimuls
fstl
fmul
sti
fmul
lret
loope
sti
mul
inc
jecxz
test
xchg
ret
in
in
loopne
cli
cmp
ror
out
cmc
in
loop
not
mov
out
icebp
mov
vpminsw
fcmovne
aam
fst
cli
shl
aas
div
sar
in
add
xchg
adc
lahf
clc
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
clc
int
sub
sti
not
loopne
loop
test
fdiv
cld
ret
lret
xchg
test
hlt
aaa
aad
sti
in
fistpll
aas
div
rol
call
int
jecxz
iret
xor
xor
jmp
cmp
ror
stc
cmp
fiaddl
fcmovu
aas
fimull
fucomip
test
xor
cmp
aas
imul
not
clc
loope
test
enter
shr
fdivrl
cmp
cmp
fcmovb
mov
mov
mov
ss
cli
clc
call
addb
cli
loope
enter
cli
xchg
faddl
out
cmp
in
aad
lret
cmp
out
call
loopne
out
faddp
mov
out
leave
in
fincstp
stc
into
cmp
jecxz
idivb
sar
mov
in
jmp
test
test
cld
fidivrl
rcr
and
hlt
jecxz
mov
leave
loope
lock
std
jmp
fcom
sub
sar
out
out
out
in
mov
cmp
jmp
shl
rcr
xor
xor
fistpll
fmuls
into
xchg
mov
cld
aad
leave
shl
fneni(8087
out
clc
testb
movb
shl
xor
icebp
stc
pushl
in
ftst
cld
xor
ljmp
in
in
shl
jmp
int3
sti
repnz
ds
mov
call
out
jecxz
icebp
out
ret
fsubr
cld
hlt
lret
hlt
lret
aad
sarl
div
ret
jmp
out
fdiv
xchg
or
jmp
ljmp
sar
sti
rolb
in
rorb
int3
ret
out
shl
div
call
xor
fcmove
loop
ret
out
decl
repnz
shll
out
lock
shl
icebp
cmc
sub
in
not
sti
test
in
lret
sub
sar
cs
call
ljmp
aad
stc
cld
filds
mov
hlt
in
xor
xlat
out
cmp
cmc
in
shl
aad
cmc
in
into
mov
repz
out
out
out
loop
out
jmp
cmp
aas
hlt
loop
cmp
leave
lret
xor
lret
loopne
test
not
in
ss
aad
in
cmp
fnstcw
lock
repz
mov
jecxz
enter
decb
xlat
repnz
jmp
clc
hlt
aaa
fucomi
out
repz
repnz
loop
cld
mov
fisttpll
xchg
shl
fnstcw
sti
rcr
aaa
icebp
sarb
xor
fadds
call
sti
ljmp
ljmp
icebp
cmp
int
cmp
rcr
jmp
fsubr
mul
lret
iret
out
cmc
fxch
in
addb
sar
rol
jecxz
mov
xchg
out
mov
shll
in
ret
std
enter
into
loop
hlt
in
in
xlat
ret
into
mov
into
in
xchg
hlt
int
lret
clc
imul
leave
lret
cmp
hlt
fcmovnu
repz
jecxz
ret
mov
xchg
xchg
in
xchg
loope
cli
neg
lock
int3
icebp
aas
shl
out
xchg
cli
fadd
mov
in
mov
xchg
xchg
les
xor
clc
xor
cmc
std
loopne
rolb
jmp
call
std
aam
jecxz
fldcw
aam
fucom
xor
loopne
aam
repz
cli
dec
mov
test
sti
div
std
lock
std
xlat
and
xchg
fisttpl
jmp
out
out
ljmp
fldl
ret
xchg
loop
out
out
nop
mov
out
aam
iret
jmp
cmp
aam
mov
jmp
fdivr
xchg
fdiv
int3
jecxz
enter
shr
int
cli
out
idiv
sar
aad
aam
dec
or
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
and
cltd
jg
roll
jle
ret
fmul
stc
mov
xchg
lock
xor
in
fcom
sar
rolb
sti
lock
loopne
out
cs
lock
rcr
ds
jecxz
aam
neg
testb
xchg
jmp
idiv
out
cmp
adc
aad
in
filds
fucomi
ror
xchg
in
jmp
aaa
sar
cmc
loope
loopne
icebp
xor
decb
rclb
call
aaa
cmp
std
cmp
sti
into
loope
rcr
cmp
out
lret
cmc
repz
jmp
xor
stc
loope
not
roll
into
fucom
into
jmp
test
iret
shr
cli
cmp
in
sbb
fildl
shl
lret
xchg
call
xchg
loop
aad
rol
jmp
aaa
int3
and
fiaddl
sti
xchg
xchg
shl
in
loop
aad
xlat
repnz
loope
or
xor
cld
inc
fcompp
fucomip
incb
xor
repnz
lret
ds
in
out
test
fninit
aam
rcr
loop
fcmovu
mov
loopne
ss
xlat
aaa
cmp
fcmovu
cmp
cmp
ret
sti
testl
iret
aaa
cld
out
fcom
int3
cmp
jmp
testb
sti
loopne
sbb
mov
loop
sti
in
ss
xlat
cmp
xor
cld
fisttpll
nop
xchg
sti
leave
rcr
out
fadds
xchg
in
fadd
cld
nop
lock
fucomp
lret
in
aaa
fsubr
ror
clc
ret
repz
shl
loop
cld
in
out
xchg
ret
xor
stc
lock
fcmovbe
cmp
aas
cmp
repnz
clc
lds
dec
fucom
cli
popl
ret
ss
ror
ret
call
loop
jmp
fsubrp
in
shl
sub
filds
hlt
lds
fld
mov
out
leave
leave
loop
in
lret
jmp
loope
in
xlat
rcr
neg
shr
fcmovb
jecxz
xchg
mov
xchg
xchg
fimuls
cli
iret
cli
xor
ds
loope
enter
call
call
nop
out
xor
out
repnz
fdivrl
enter
in
test
add
in
loope
test
fucomi
xchg
iret
lea
icebp
out
in
sti
lock
shl
idiv
cmpb
testb
mov
jmp
aam
in
out
ds
int3
cmp
std
vshufps
int3
fcmovnb
out
test
xor
lret
clc
int
cmp
iret
rcr
xabort
fadd
jmp
xchg
addb
icebp
loopne
int
in
iret
clc
repz
ficoms
lock
in
int3
in
xor
lret
loop
call
cmp
dec
and
ret
call
repnz
icebp
cli
in
fcom
repz
repz
cmc
rorl
enter
in
fsubp
divb
stc
shll
lret
xlat
in
xor
rcl
cmc
ret
mov
ds
shl
iret
iret
xchg
or
lock
in
ds
cmc
rol
rolb
jecxz
lret
iret
sbb
xor
ret
int
jmp
add
test
cmc
enter
out
xchg
sub
aas
jmp
fstp
cmp
fildl
call
into
ljmp
std
out
fdiv
in
or
mov
test
clc
out
in
rorb
loop
divb
cmp
std
lock
lock
fld
xlat
add
into
sti
jecxz
mov
cmp
ljmp
rcl
mov
jmp
xchg
mov
jmp
ret
out
in
xor
jmp
enter
fmul
fnstcw
mov
stc
inc
popf
jg
roll
jle
repnz
call
cmp
shl
sbb
and
stc
jmp
ljmp
cmc
stc
leave
xor
fdivr
loopne
mov
jmp
in
in
out
faddl
out
lds
enter
int
out
fadds
xchg
loope
loopne
int
icebp
repz
in
stc
in
in
repz
fidivrs
iret
std
repnz
hlt
fincstp
loope
ljmp
cld
in
out
xlat
in
fcom
out
iret
aam
rcr
neg
out
ffree
rol
out
mov
mov
xchg
in
mov
fsub
xor
into
aaa
cmp
loope
ret
lret
out
decb
jmp
aam
cmp
lock
cmp
icebp
fadd
mov
loope
mov
repnz
ret
lret
std
clc
xlat
cmp
cmp
loopne
cli
jmp
int
mov
cld
in
aam
repnz
cmp
aaa
lret
fucomp
xlat
icebp
fcmovnb
aas
xchg
lret
xchg
call
in
out
les
cld
xor
xor
ds
iret
cmp
movl
aad
xor
jecxz
xlat
aad
divl
lock
neg
aam
ret
out
fstp
roll
xchg
aaa
ss
cld
hlt
xor
aam
cmp
sbb
jmp
in
sbb
out
mov
out
cli
hlt
xor
sti
cli
lock
fucom
sarl
mov
in
aas
and
int
sti
mov
test
out
in
fsub
cld
cmp
int
test
cmp
roll
fucomp
loop
fucomp
into
call
call
test
test
sti
aas
out
stc
stc
ret
idiv
sub
int3
into
icebp
into
imul
cs
fmul
cld
jmp
cmp
filds
dec
ret
mov
xchg
out
xchg
shl
out
ljmp
fdivr
repnz
stc
ret
fucom
cld
test
lret
lock
loop
loope
out
xor
aad
in
out
cld
loope
rcl
test
xchg
mov
jmp
ret
lret
enter
dec
out
out
cmc
cmp
call
into
jmp
loopne
sti
test
enter
jmp
in
fsubp
fdiv
ret
clc
cmp
xor
test
rcr
jecxz
in
mov
in
nop
out
xor
cmp
out
aad
xor
jecxz
loope
movb
int3
in
xchg
loop
into
in
xor
xlat
aam
repnz
leave
lock
cmp
ljmp
fmull
ljmp
fdivr
out
clc
fcom
aam
ds
in
or
in
sar
repz
das
enter
int3
aas
jmp
stc
xlat
flds
fxch
fcmovne
xchg
xchg
in
in
sub
xor
cmp
imul
fsubr
rol
xlat
std
cld
aam
mov
ljmp
loopne
rcl
xor
fpatan
xlat
fcmovnu
test
rcr
hlt
xlat
lret
sbb
sti
int3
lock
lock
aas
jmp
ds
int3
aam
loopne
clc
in
mov
nop
out
in
aad
cs
lret
xor
cmp
stc
in
repz
fstl
ljmp
cli
hlt
fcmovu
sarb
shr
fnstsw
call
mov
std
repz
leave
xor
out
int3
fcmovnu
aas
cmp
rcl
inc
jmp
call
fucomip
xchg
adc
xor
lret
into
fdiv
fld1
mov
ret
fiadds
repz
not
cmp
cld
ljmp
xchg
xchg
mov
add
into
jecxz
out
cmp
hlt
hlt
roll
aam
repnz
inc
mov
xchg
lret
repnz
cmp
lret
enter
test
not
out
ret
mov
jmp
ljmp
cmp
cmp
cmp
out
shr
fstp
rcl
cmp
enter
add
adcl
jmp
enter
fst
ffree
and
dec
jo
cmp
fwait
push
mov
jle
lret
fucom
in
xor
hlt
cmc
les
in
in
addl
orb
icebp
int3
std
test
lock
out
fucomi
int3
out
or
std
ds
mov
adc
icebp
out
xor
icebp
icebp
cmp
loop
std
cld
shl
aas
inc
repnz
out
jmp
out
enter
incl
out
test
xchg
lret
in
in
sbb
aad
into
out
int3
fsubrp
shl
cmp
sti
mov
xor
out
xchg
loope
orl
fnstcw
in
iret
fsubrp
in
aad
hlt
xlat
jecxz
shl
out
repz
xlat
inc
out
lret
out
into
ljmp
repz
fdivrp
testb
cmp
test
fsubp
mov
xchg
in
in
hlt
jmp
sarl
cmp
rcl
xlat
incb
fucomip
call
lock
xor
cld
lret
cmp
stc
aam
mov
test
leave
rol
int3
mov
loop
clc
aad
cs
repnz
cmp
test
hlt
filds
out
fucom
ljmp
cmp
fucomip
clc
sarl
cli
test
ffree
aas
sub
stc
test
mov
lret
xchg
hlt
xchg
div
lock
hlt
repz
ds
into
icebp
aas
jecxz
loope
mov
std
mov
leave
fcoml
shr
xor
cli
cmp
sbb
push
clc
hlt
out
loope
mov
fucomp
sti
lret
xor
mov
cs
into
fcomip
fcmovne
int3
cmp
aas
icebp
fcomi
sti
aas
jmp
cmp
in
shl
out
cs
aaa
leave
enter
cmp
aas
divb
out
ret
loope
test
std
mov
addl
sar
int3
ret
cmp
rcl
div
fdivr
out
repz
cmp
iret
mov
rcll
leave
sti
cmp
into
out
out
out
clc
mul
cmp
cmc
cld
stc
rolb
fucomi
adc
aam
clc
shl
cld
push
ror
clc
roll
ljmp
cld
int3
or
out
fcmove
ss
repz
out
icebp
rolb
testb
in
repz
das
sub
xor
aad
ds
fucomip
incb
icebp
out
decl
jmp
jecxz
or
loop
jmp
leave
adc
out
lret
xchg
repz
fcmovnbe
cmp
repnz
incb
leave
int
loop
int3
out
in
imul
aaa
in
lret
jmp
test
idivb
loope
ds
out
sub
out
jecxz
out
cmp
fdiv
into
fcmovbe
ret
aaa
cmpl
aam
fsubrp
in
xchg
sbb
xchg
mov
xor
out
xor
cmp
idiv
lock
test
stc
in
lret
in
leave
ljmp
sti
in
ljmp
out
jmp
ret
cmp
loop
nop
repz
sub
loope
shlb
xor
jmp
in
repz
cmc
out
lds
jecxz
std
cld
int3
int
loopne
cmc
repz
fdivr
aaa
repz
aam
iret
rolb
testl
enter
rcr
cmp
xor
rol
in
ret
mov
ret
jmp
cli
int
sti
in
loop
loopne
sub
stc
fcmovnu
clc
fnstcw
lock
out
out
stc
in
mov
loop
loop
in
loopne
ret
cli
sar
cmp
into
faddl
xchg
mov
leave
into
mov
loopne
ljmp
into
sti
fcmovnb
cmp
into
rol
fcomip
ljmp
into
mov
in
into
cmp
hlt
xor
cmp
cmp
aam
ret
std
aad
int
sti
mov
xor
mov
fsubr
jmp
iret
rcr
testl
xchg
xchg
shr
aad
in
enter
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
sub
push
jg
roll
jle
fcmove
aas
sti
fincstp
add
or
mov
int
xor
mov
fcmovb
xor
int3
pushl
ljmp
repz
aad
out
lock
loop
int3
int3
lret
repz
out
ds
ffreep
fldl
ret
int3
fucomp
test
cld
in
ljmp
leave
cmp
not
int
test
test
jecxz
mov
in
shl
int3
call
aaa
ljmp
out
aam
ret
loope
loop
loope
xchg
in
xor
into
leave
icebp
repz
cmp
repz
addl
xchg
int
shll
iret
clc
sar
int
aad
in
hlt
out
fcmovbe
jmp
test
lret
adc
out
aaa
xor
lret
shr
cmp
rol
rol
jmp
mov
int3
loope
int
icebp
jmp
cmp
shl
cmp
mov
test
xchg
jmp
xor
enter
lret
roll
xchg
mov
mov
out
xorl
enter
int
repz
rcr
cmp
enter
jecxz
repz
jecxz
sarl
rcr
leave
iret
sti
xor
shr
cli
orb
fucom
int
cmp
jmp
fsubr
stc
ds
ds
faddl
mov
mov
out
cmp
into
int3
cmp
std
in
cld
in
cmp
rcl
fadd
xlat
mov
mov
lock
into
mov
loopne
das
enter
idiv
dec
in
loope
repz
repz
cmp
fcomp
test
shl
in
xlat
ror
aad
call
roll
testb
fdivrp
xchg
repz
xor
shl
cmp
ss
cmp
cli
inc
call
xlat
test
xchg
xchg
std
xchg
xor
cmp
sti
ljmp
fdivr
lock
cld
out
repz
ljmp
test
leave
cmp
sti
cld
fstpt
cmp
f2xm1
fldl2t
fdiv
fcompp
out
lea
nop
int3
jmp
out
ret
jmp
aam
loope
rol
cli
aas
movb
addb
lret
xor
jmp
std
cmp
rcr
rorb
frndint
std
in
in
xchg
xchg
ror
shll
aad
cli
out
cld
loop
in
clc
xlat
in
hlt
orb
xor
enter
loopne
fxam
xchg
ljmp
test
jmp
xor
cmp
std
fdivrs
into
cmp
xlat
jmp
decb
int
jmp
sub
out
jmp
loopne
out
out
xchg
cmc
addb
cld
in
mov
rcr
aam
lock
cmc
leave
lret
shl
cmp
repz
in
vpsubd
in
lret
lret
shl
in
aad
aaa
xor
jmp
cmp
fidivrl
loop
icebp
test
ret
sti
enter
mov
loop
enter
sarl
ds
and
rol
leave
fadds
out
call
in
shl
sti
out
shlb
out
jmp
shl
out
xchg
fcmovu
mov
mov
idivl
ljmp
cli
aas
cmc
rcr
aam
cmp
div
int
mov
dec
xchg
xchg
in
out
aad
std
xor
int3
cmp
addl
mov
std
loopne
cmc
fsubrp
int3
ret
enter
cmp
xlat
shl
rcl
mov
clc
mov
loopne
ljmp
int3
lret
aaa
repnz
cmp
sti
sti
icebp
jmp
sti
ljmp
xchg
roll
call
sti
cld
lock
cmc
aas
cmp
cld
aam
in
mov
sti
cmp
cmp
int3
sub
idivl
iret
aam
shl
rcr
fiadds
cli
clc
mov
fiadds
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
push
mov
jle
mov
out
cli
lret
divl
stc
test
xor
or
les
out
ror
repz
repnz
xlat
out
ds
fsubr
fmul
cmp
xor
loope
mov
repnz
xchg
loop
cld
in
test
int
fcomi
std
loopne
repnz
fldl
ret
rcl
xchg
xor
call
repnz
cmp
repnz
leave
test
int
fimull
rol
das
fcomi
icebp
repz
cmp
in
int
in
ret
jecxz
and
into
out
mov
rorl
fsubr
fdivl
ror
aas
sar
loopne
sar
clc
mov
loop
addb
cmp
out
dec
in
jmp
fadds
cli
loop
incb
into
ljmp
int
xor
out
sub
std
ret
jecxz
out
fcmovnu
addb
clc
out
int3
in
ss
clc
cmp
out
out
and
ret
mov
adc
loop
jecxz
lock
sar
testl
lret
lret
push
repnz
jmp
ror
jecxz
dec
aam
fpatan
repnz
icebp
out
fadd
idivb
rolb
ror
lock
fsubr
jmp
enter
aad
rcr
roll
loop
in
iret
out
nop
loop
shlb
rol
out
cmp
cld
xor
cmc
hlt
leave
loope
int
out
xchg
xchg
hlt
rol
idivb
cmp
cld
xor
shr
loope
roll
fadds
sti
lock
mov
in
aaa
shl
fcomp
cmp
repnz
cmp
into
aam
ljmp
iret
loope
faddp
into
lea
aaa
xor
iret
cld
cli
in
repz
loop
aam
mov
in
mov
cli
std
out
mov
out
in
loop
icebp
int
fidivrs
iret
fcmovnu
jecxz
aad
fsubr
mov
fsubr
mov
in
inc
jmp
xor
in
lret
enter
loope
hlt
fiadds
call
ficoms
out
lock
sar
cli
fadd
cmp
mov
addb
nop
xchg
sub
sarl
sti
adc
shl
and
int
loopne
out
icebp
in
out
shl
leave
icebp
cmp
rcr
out
fstpt
in
loope
jmp
stc
rolb
aad
shr
div
in
ss
xor
jmp
rcl
ds
lret
loop
loope
cld
loope
cmc
loope
in
call
repnz
rcr
into
ret
testb
test
iret
in
nop
xchg
in
les
jecxz
stc
repz
ljmp
add
cmc
rcl
in
call
xchg
repnz
out
iret
aad
rcr
fcmovb
loope
test
jecxz
sar
ret
ljmp
rolb
out
icebp
cs
fmul
add
xrelease
out
fisttpl
int3
lret
call
leave
repz
cli
out
frndint
test
mov
loope
vshufps
jmp
xchg
out
ss
int3
cld
cmp
std
in
xchg
lret
movb
jecxz
repz
iret
loop
lock
leave
call
rcl
call
test
loopne
xchg
das
xor
xor
fst
int3
xor
cmc
ret
lock
xor
int
into
mov
icebp
rcr
lds
fdiv
std
sar
stc
sar
repnz
out
incl
in
mov
cli
mov
orb
shrl
shlb
out
rcl
cmp
cmp
cmp
idiv
fsubr
fstl
not
jecxz
xlat
out
ss
xor
out
loop
rol
xchg
mov
xchg
out
enter
clc
repz
hlt
cmp
fcomp
sti
fistpll
cmc
cld
in
cld
ffreep
int3
sti
fucomp
in
call
in
idiv
cmp
out
stc
out
fdivrl
aad
lds
mov
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
imul
fisttps
scas
jg
roll
jle
cld
fmuls
xchg
int3
adc
cs
fdivrs
aam
cli
std
cmp
int3
idiv
fdivr
lret
jecxz
stc
stc
test
loopne
in
in
lret
out
out
ljmp
adc
fildl
jmp
call
call
call
rcl
xlat
rcl
cli
icebp
xlat
and
jmp
mov
out
fiaddl
aaa
bnd
xor
in
icebp
in
cmp
test
mov
lock
lock
xor
rcl
cmp
fstpt
clc
test
fdivr
aas
int3
sub
int
ficoms
in
out
fdivp
cmp
lret
repz
out
fmul
xchg
out
mov
or
in
shrb
in
out
fnstenv
repnz
xor
loope
roll
jmp
xchg
test
lret
int
into
call
rcl
repnz
ljmp
sti
xchg
vpsubb
cld
fcmovne
fneni(8087
testb
test
out
in
aas
aas
sar
cld
repz
lret
fucomip
out
out
inc
jmp
sarb
shl
enter
fcom
aaa
xlat
mov
repnz
test
loop
fsubrp
mov
vcmpss
cld
fadd
in
fucomi
sar
mov
div
lret
iret
test
out
ss
rcr
xor
xchg
leave
aam
jmp
sub
lock
in
std
roll
in
into
fucomp
int3
adc
test
not
loop
loopne
jecxz
out
mov
lret
in
and
into
xor
ret
fxch
fdivrp
ljmp
sub
and
in
repz
mov
loope
aam
jmp
adc
hlt
not
rol
out
out
test
popl
in
cmp
xor
out
divb
cmp
cmc
xlat
icebp
test
fdivr
in
out
int
loop
call
in
out
lock
xor
std
stc
ds
std
in
test
in
loopne
in
fiaddl
xchg
hlt
fnstenv
jmp
cmc
int
hlt
stc
ds
jmp
faddl
ret
fmul
int
clc
aaa
jmp
adc
fcmovbe
hlt
cmc
clc
fcmovnu
fucomip
decl
xor
cmp
out
aam
repnz
addb
xlat
sti
mov
lock
test
hlt
shrb
xor
shl
addb
clc
xchg
lret
out
sti
add
test
xor
fndisi(8087
clc
cmp
roll
faddl
jmp
hlt
das
lret
stc
jmp
fsub
ror
cmp
out
loopne
rcr
fildl
cli
call
in
ljmp
out
ljmp
cmc
fsub
clc
cmc
enter
call
test
aaa
xor
leave
in
xlat
imul
sti
aad
fucom
fcomip
ftst
loop
loope
fildl
jmp
rcl
xor
into
int
sti
cld
ljmp
lock
loopne
mov
clc
xlat
fsubp
fcmovnbe
popl
xor
stc
lret
ljmp
ds
push
sar
mov
addb
hlt
jmp
in
into
clc
aad
fdivr
clc
cli
adc
xchg
repnz
jecxz
xchg
stc
loope
out
mov
in
call
fdiv
xor
ds
in
into
fsub
loope
aas
hlt
hlt
call
lret
jecxz
xor
xor
idivl
ss
cmp
sti
in
out
sarl
out
fsubrp
testb
mov
ss
cld
aad
lret
hlt
fcmove
out
stc
hlt
and
fmuls
loop
xor
sti
enter
repz
fsubr
faddl
sti
ljmp
shll
xor
fcmovu
repnz
sar
ds
mov
call
loopne
std
in
shr
loope
xlat
cmp
shl
cmp
jmp
or
iret
xor
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
jle
loop
jg
roll
jle
int3
cs
out
aas
jmp
out
cmp
xchg
cld
fsubp
in
clc
lret
jmp
shrl
das
lock
in
aad
not
cli
hlt
test
repnz
call
xchg
cmp
loope
xchg
icebp
test
out
shr
xlat
cli
out
lret
ret
cli
jecxz
idiv
mov
ret
xlat
cli
cld
mov
nop
jmp
out
shr
xor
in
xor
jmp
cld
cld
ret
cmp
shl
addb
enter
fimuls
xor
cmp
aaa
loopne
roll
cmc
cmp
mov
fistl
hlt
hlt
aad
enter
fdivp
xlat
loopne
hlt
stc
repz
lret
and
xorb
int
cmp
shl
shl
xchg
call
nop
out
in
out
test
jmp
rol
into
repnz
fucomp
cli
repnz
xchg
lret
aam
ss
xor
jmp
xor
xlat
cmp
test
ret
fcmovbe
xchg
xchg
in
cld
lret
xor
fnstenv
xor
jmp
lret
iret
cmc
jecxz
clc
enter
xlat
out
xchg
mov
fucomip
aam
cmp
jmp
iret
test
addb
xchg
lret
lret
in
std
bnd
in
lret
icebp
xor
jmp
ds
out
testl
in
cli
lret
repz
jmp
loope
std
loopne
stc
loope
fdivrp
leave
repz
in
icebp
out
aam
xor
loopne
leave
shl
int3
sar
xlat
sar
xchg
test
test
fucom
mov
jmp
icebp
test
cli
cmp
fdivr
rcl
mov
jecxz
fucom
icebp
and
shl
clc
out
aaa
cmp
in
fsubp
test
hlt
iret
jecxz
loop
lret
fdivr
stc
repnz
mov
shl
xor
addb
cli
repnz
lret
test
nop
xchg
incl
ret
ror
cli
cmp
sar
into
std
hlt
enter
aam
int
fldl
leave
aam
vpavgb
out
sti
xchg
or
vpmulhw
jmp
not
call
cld
repnz
repnz
in
loope
fcoml
xor
repnz
rcr
fdiv
in
ds
aam
out
in
jecxz
out
lret
loop
xor
das
jecxz
shl
lock
lret
out
and
in
std
ljmp
ljmp
sti
out
repz
fidivs
ror
cli
in
cmc
fsubp
xchg
in
into
xchg
jecxz
out
mov
in
xlat
enter
xor
xor
cmp
cli
loopne
cmp
frstpm(287
stc
dec
fmulp
in
mov
lock
icebp
fdivrl
sub
fcomip
loope
ljmp
enter
std
dec
out
fcom
in
incl
idiv
icebp
stc
sti
les
sti
popl
ljmp
jmp
lock
fdecstp
shl
dec
testl
xchg
repnz
imul
into
sti
into
out
shl
cmp
sar
ds
shl
rcl
jecxz
sbb
loop
int
fcmovnbe
xlat
lret
fdivr
out
cld
int3
stc
fdivp
add
jmp
std
in
push
fmulp
hlt
not
lret
cmp
lret
call
shr
shl
lret
test
mov
ljmp
rcl
cmp
into
out
sar
fcmovnbe
aas
cmp
out
inc
cmp
loope
mov
jecxz
in
fildl
in
loope
stc
sti
sti
fneni(8087
fcmovne
fidivrs
in
vpsadbw
shr
ret
mov
icebp
fxch
mov
fmulp
repz
out
sub
ss
sti
ds
lock
std
neg
ret
xchg
adc
int
into
std
cmp
rcl
call
add
test
xchg
fsub
into
out
repnz
out
xor
in
out
leave
iret
shl
fcomi
icebp
stc
cmp
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
inc
out
jmp
imul
jmp
call
cmp
loop
aas
loopne
loope
in
test
enter
dec
in
shll
ss
lret
shl
int
rol
out
repnz
addl
cld
hlt
fmulp
sub
leave
repz
cld
aaa
cmp
cmp
xchg
cld
fiadds
stc
mov
lock
xlat
shl
iret
jmp
or
vpsrlw
out
fadds
out
xchg
fimuls
in
shl
ljmp
rolb
jmp
int3
mov
enter
enter
int
shl
rol
test
test
clc
test
mov
mov
call
cli
leave
fcmovbe
aaa
cli
stc
loopne
cmc
out
adc
addb
repnz
jmp
cmp
hlt
std
roll
ret
jecxz
icebp
fmull
xor
jmp
cmp
rcl
shr
cli
sbb
filds
clc
jecxz
std
xchg
mov
fcmovbe
xlat
cmp
test
les
fsubrp
int
int
out
hlt
out
sub
aaa
aam
rol
clc
fdiv
cmp
xor
stc
cmc
in
sbb
rcr
sub
ljmp
shl
cmp
loop
in
sbb
lret
xchg
icebp
icebp
mov
lret
out
aam
fcomi
aas
xor
loop
lock
sti
mov
idiv
in
lret
in
out
mov
int
sub
aaa
fcmovbe
in
in
rcr
filds
mov
out
in
std
repnz
shl
cmp
cmp
aaa
fcomip
xor
out
std
repz
fmulp
mov
dec
lock
clc
int
in
into
cld
sar
aad
lret
cli
repnz
leave
out
loop
orb
aam
cld
iret
cmp
xor
test
ljmp
mov
call
shrb
into
hlt
lock
out
fnstsw
xor
shr
jecxz
sarl
inc
cli
int
out
ljmp
in
xor
out
call
ljmp
aas
fsub
jmp
mov
fsub
repnz
int
cmp
aaa
fxch
hlt
not
xchg
xlat
mov
call
loop
icebp
aam
in
fidivrs
jmp
repz
xlat
loope
lret
lret
mov
call
lret
in
xlat
stc
ror
iret
shl
ss
and
loopne
leave
out
fistl
hlt
in
ror
neg
shr
into
not
xor
sar
cli
repz
out
out
in
xchg
int
jecxz
out
in
in
fstp
in
xor
int
jmp
cmc
cmc
out
shl
in
addl
int3
leave
clc
stc
out
lret
sti
cld
int3
shl
test
rcr
lret
in
fmul
in
in
int3
into
sub
fucomi
hlt
fdiv
cmp
cld
repnz
out
loop
mov
cli
rclb
out
shl
fdivr
stc
loopne
rolb
aas
out
int3
int3
in
fcoml
dec
rcl
sarb
lret
fildl
xchg
imul
in
std
out
ror
ljmp
fxch
out
out
jmp
aam
cmp
fcmovb
call
mov
mov
loop
enter
xor
into
cmp
in
int
sbb
shl
rcl
movl
orl
xor
cmc
in
repnz
loop
cmp
test
ror
ret
cli
imul
mov
rol
shl
sbb
xor
ds
out
sarb
shl
sub
mov
jecxz
mov
cmp
fadd
cmp
shl
cli
fdivr
cmc
bnd
xor
and
rcr
xchg
xrelease
cli
int3
iret
shr
jmp
shr
icebp
aad
fmuls
loopne
fimuls
rol
sub
int3
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
and
lcall
jle
aaa
ljmp
jmp
sti
fiaddl
mov
rclb
jecxz
fldt
rcl
fsub
icebp
int3
sbb
rorl
xchg
xchg
loop
mov
loopne
out
leave
in
rol
div
ds
cmp
ret
test
fdivrl
xchg
int
leave
icebp
std
out
aam
xor
repz
lock
cmp
hlt
cmp
lret
mov
into
mov
nop
mov
ss
xlat
in
sti
xor
rol
neg
mov
xchg
fdivrp
in
jecxz
fcmovne
mov
int3
xor
repz
int
in
fnsave
cmp
add
aam
ds
incl
in
mov
xor
fsubr
aad
clc
clc
int
lock
loope
rcl
fcomi
xchg
loope
out
mov
loope
cmp
out
xor
int
rcr
xor
icebp
out
rcl
fdivp
ljmp
test
repz
out
fdivrp
call
aad
sarl
out
sub
xchg
call
call
cmp
fst
rol
roll
fmuls
xchg
repnz
lret
fnstsw
rolb
loope
ret
lret
xchg
adc
std
ror
xor
xor
iret
fprem
out
int3
repz
faddp
adc
mov
out
stc
xchg
jecxz
rolb
lock
std
cmp
jmp
aas
xchg
cli
ret
mov
les
hlt
out
jmp
cmc
out
sar
hlt
sti
jmp
fstpt
int
icebp
fdivp
rcr
ret
enter
clc
inc
xor
test
in
das
repz
cli
cld
lock
aad
jecxz
cmp
fdivp
std
fucomi
lea
mov
aam
call
enter
filds
mov
mov
repz
lret
ror
hlt
fistpll
int
fadd
cmp
sti
cli
loopne
into
jmp
jmp
jecxz
into
cmp
ror
cmp
flds
out
shl
neg
sbb
mov
not
cmp
xor
iret
std
cli
repz
out
repnz
shr
aad
fiadds
xchg
cmc
xor
cmc
xlat
xor
enter
int
adc
xlat
inc
mov
loop
rcl
call
repz
repz
aad
out
into
shll
frstpm(287
fcomp
rolb
out
repnz
aaa
repz
jmp
shlb
fcmovnbe
into
ret
fnclex
and
xchg
out
loop
lret
mov
shr
xor
int3
lret
in
rcl
repnz
stc
out
out
fsubr
test
mov
repnz
out
repnz
fnstcw
out
std
jecxz
loopne
out
lret
xchg
in
aad
aaa
aam
lock
jmp
test
clc
xor
ror
testl
shl
ret
jecxz
jmp
xlat
sar
les
mov
jecxz
lret
test
xchg
mov
fcom
repz
aad
call
cmp
les
lret
nop
ljmp
xlat
in
clc
xor
lock
loopne
cli
lret
stc
test
fmul
std
fdivr
fdiv
in
into
loope
fimull
in
xor
sarl
out
idiv
ds
loop
mul
aam
aad
ffreep
fsubr
jmp
rclb
into
repz
int3
clc
lds
test
lock
mov
repz
ljmp
in
repnz
clc
loopne
mul
sti
movl
not
call
ds
into
jecxz
ljmp
sbb
loop
imull
not
leave
not
aaa
aam
lock
out
fisttpll
iret
lret
out
repnz
stc
rol
rcl
stc
stc
int3
jmp
lock
cld
test
shl
enter
jecxz
xchg
loopne
sub
cs
not
lret
cld
cmc
icebp
xchg
cmp
out
fisttpl
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
out
rol
enter
out
leave
cmp
leave
aas
repnz
test
nop
into
out
cmc
hlt
mov
ret
das
fcmovnbe
aam
aam
leave
leave
loope
fidivrs
fincstp
repz
enter
loop
out
call
lock
xor
out
aad
dec
xor
sar
aad
out
jmp
in
repnz
jecxz
in
repz
clc
int
rol
test
cli
rcr
fidivrs
mov
sbb
in
lock
mov
ret
in
cmp
rcl
aad
cmc
lret
cmp
cmc
rolb
mov
in
fcmovne
aam
xor
in
in
cmp
jmp
cmp
sti
in
fcomp
test
loop
fisttpll
divb
cmc
cmp
cmp
sar
shl
jecxz
icebp
incb
xchg
out
in
jmp
in
ret
ljmp
sar
incb
fimuls
shr
fcmove
xchg
adcb
hlt
cmp
sar
std
div
sub
jmp
ljmp
aam
lds
fucomi
cmc
ds
cmp
cmc
fsub
testl
mov
in
in
fdivrl
fadd
roll
jecxz
lret
testl
in
fmul
out
iret
xor
divb
fsubr
iret
adc
hlt
sbb
lret
clc
xchg
jmp
icebp
in
int
jecxz
cmc
test
lock
faddl
mov
xchg
out
jmp
aaa
enter
repnz
div
aad
jmp
fiadds
fstl
cmp
out
sti
xlat
xor
rol
fcmovnbe
enter
enter
out
std
out
sub
aad
in
jmp
fdivr
iret
xlat
cmc
repnz
aam
adc
mov
jmp
sbb
int3
sub
fisubrs
cs
aaa
lret
rcr
clc
clc
int3
cmp
fcmovnbe
adc
mov
test
jmp
jecxz
in
xchg
imul
jecxz
ror
cmp
iret
jmp
fnstcw
mov
jecxz
in
fiadds
into
xor
ljmp
rol
sar
test
fsubrp
lds
fists
in
out
cmp
jmp
int
fdivr
fiadds
call
and
aam
add
lret
stc
stc
call
ds
shl
stc
enter
in
lret
ror
mov
out
xor
ljmp
cmp
aas
ds
fsub
clc
xlat
test
mov
cs
ss
repz
out
fstp
lock
fcomi
enter
fcomi
lret
mov
shl
ss
jmp
jmp
sti
fld
mul
hlt
mov
mov
fmull
call
std
leave
loopne
icebp
test
out
fsubrp
neg
into
mov
jecxz
test
in
cmc
in
lret
leave
cmc
sarb
shl
cmp
rcr
xlat
mul
xchg
iret
repnz
nop
aad
xor
int3
fdivl
cli
icebp
cld
shl
lock
cli
jmp
stc
nop
mov
cmp
repz
in
rcr
clc
in
xlat
rcr
orl
and
test
shr
aad
aad
into
cli
neg
aam
mov
int3
incb
lret
iret
sub
shl
out
call
cmp
cmp
repz
repz
ljmp
ror
cld
lret
hlt
leave
jecxz
sarb
aad
into
addl
mov
loope
div
in
int3
in
in
ljmp
into
fcmovbe
cli
les
xchg
loopne
std
ljmp
cmp
in
jmp
jmp
fadd
roll
fsub
orb
cmc
loop
repz
int3
hlt
sbb
addb
loope
loopne
fsubp
addb
mov
fdivs
call
cmp
in
shl
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
iret
dec
scas
inc
jg
roll
jle
neg
in
ret
dec
leave
faddl
xor
ror
lret
rcl
iret
fstpt
cmp
rolb
std
in
out
int
hlt
int
dec
sub
in
repz
fcomi
icebp
rcr
aas
jecxz
jecxz
push
filds
mov
int3
mov
ret
ret
xor
int3
rolb
leave
loope
out
fsts
icebp
icebp
int3
into
clc
vpandn
cmc
icebp
dec
clc
rcr
loopne
mov
mov
test
jmp
cmc
enter
idivb
aad
fcmovne
aas
xor
loopne
lock
out
test
in
loopne
cmc
in
cmp
in
xlat
iret
leave
cmp
loope
in
test
fcomi
call
sti
lock
test
mov
das
ret
sar
rcl
in
cmp
icebp
xor
int
in
test
out
rorb
repz
int3
in
out
lret
aam
rcl
std
shl
and
shl
clc
aad
jmp
enter
filds
aam
jmp
not
sti
lock
cmp
shr
test
orl
adc
icebp
aad
les
cmc
repnz
sti
lret
ret
out
cmc
in
cld
or
sub
in
fcmovbe
icebp
xlat
icebp
std
int
lret
shl
out
fdivrl
cmc
mul
test
int
imul
shl
aad
fucomp
call
ret
iret
jecxz
rol
rorl
orb
xor
xor
fcmovu
std
div
fiaddl
add
std
jmp
int3
lret
div
lret
cmp
enter
fnstcw
xlat
aad
shr
out
mov
adcb
iret
lret
sti
jmp
fcmovnbe
fsub
fsubp
rol
hlt
stc
stc
fadd
enter
mov
rorb
fld
xor
rcr
lock
sti
adc
out
testb
xlat
lret
xchg
cld
loopne
xor
iret
shlb
lret
lock
and
leave
fcmovu
ror
iret
jmp
enter
cmp
imul
icebp
lock
std
std
icebp
repnz
sti
in
call
or
shr
cmp
jmp
cmp
out
clc
jmp
inc
incb
hlt
out
out
cmc
cmp
lock
in
int
fldl
out
out
fucomi
test
into
xorb
xor
test
fdiv
std
mul
movb
vprotq
nop
shll
jmp
fnstsw
loope
int3
shr
test
fisttpll
loope
mov
jecxz
rolb
sub
jmp
fdivrp
in
loop
fimull
in
into
jecxz
faddp
in
fsubr
fcom
fdiv
fsub
loope
ror
mov
mov
lock
repz
out
cmp
lret
repnz
in
fdivrp
in
loopne
mov
ljmp
ret
fldl2e
hlt
sti
cmc
ss
out
jmp
jmp
lret
in
xchg
xchg
call
out
lock
iret
fmul
repz
ret
repnz
mov
xchg
fucom
push
mov
hlt
jecxz
sar
fcmove
jmp
shr
in
mov
stc
mov
test
jmp
in
in
loopne
xlat
aaa
stc
cli
ds
std
loop
ds
test
addb
out
out
aad
shl
repnz
cld
out
cmp
lock
sar
roll
sub
sbb
jmp
adcb
fmul
idiv
leave
rcl
aad
sar
vpor
in
repnz
shl
leave
loop
aam
jmp
testl
cld
rorb
shl
jmp
loope
repnz
into
hlt
cld
fsub
fcom
cmp
in
mov
sti
call
mov
int
out
clc
sarl
xor
out
xor
int
fildl
ret
std
in
in
mov
mov
xbegin
jge
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
lea
adc
dec
jg
roll
jle
xlat
in
lock
cmp
out
ror
iret
ds
loopne
call
lock
out
ret
sar
call
rcl
sbb
int3
out
rorb
enter
fsubr
jmp
std
ret
cli
jecxz
aam
mov
mov
filds
xchg
cmp
lret
ss
adc
jmp
std
sti
in
adcl
out
fcmovu
xor
stc
jecxz
cli
ljmp
out
out
lock
out
test
aad
fcom
lock
jmp
cld
sbb
hlt
lds
lret
out
mov
jmp
out
fcmovu
fsubrp
test
mul
xchg
and
mov
stc
f2xm1
test
xchg
mov
div
in
sti
fdivl
aaa
cmp
xor
clc
loopne
mov
hlt
std
and
lret
lret
adc
out
iret
out
cmp
fcmovne
repnz
aas
sti
std
iret
loop
cmp
loop
xlat
fdivr
out
into
test
mov
aaa
rol
cmp
cmp
cmp
out
or
icebp
testl
mov
fldz
aad
fdivrp
aad
rcr
or
roll
sti
into
adc
out
out
ss
xor
fdivl
div
aad
lret
mov
repnz
jmp
out
not
lock
aas
repz
rcr
ret
hlt
fstp
mov
xchg
in
loopne
iret
les
repz
adc
rol
adc
fcmovbe
mov
fsub
adcl
cmc
jecxz
xlat
xor
in
lret
cmpl
in
fdivr
aas
ret
neg
loop
or
inc
int
cmc
jmp
icebp
int3
fsubr
sar
stc
shl
rcr
fmull
lret
repnz
xchg
lret
aam
ss
fstpt
cld
out
stc
inc
test
mov
mov
repz
jmp
cld
fcmovnu
repz
loop
fld
loope
loopne
fmuls
in
test
loop
das
ljmp
cmc
fdiv
cmp
fimull
orl
out
loopne
int
repz
call
div
hlt
iret
add
clc
enter
fdivrp
cmp
shr
int3
in
cld
lret
ds
hlt
add
out
aas
fsub
fstp
stc
out
repz
lock
cmp
out
hlt
incl
xlat
jmp
jecxz
iret
out
xor
xor
cmp
cld
jecxz
jecxz
cmc
enter
cli
ljmp
ret
cmc
out
xor
fcmovnu
in
cli
rcl
ret
sarb
cmp
int3
in
into
enter
nop
jmp
shr
jmp
ljmp
cld
std
std
lea
nop
xchg
rcr
xchg
out
divl
into
lret
in
lret
into
cmp
div
loop
clc
mov
in
and
lock
cli
aad
rcl
ror
aam
fidivrs
fcmovb
ret
loopne
enter
enter
call
lds
aas
jmp
xlat
sbb
lds
mov
jmp
ss
lret
in
iret
rolb
call
fmul
rorl
iret
test
cmp
lock
clc
loope
sarl
les
mov
lret
fdiv
mov
out
xchg
xchg
ret
divl
iret
lock
shl
in
sti
out
movl
sti
test
lock
jmp
out
cmp
aaa
fsubr
sbb
shl
loopne,pt
jmp
and
xchg
cmp
aaa
sti
aam
sarl
hlt
fchs
testl
rcl
xchg
rol
shr
cld
cld
cld
icebp
bnd
jecxz
in
idivl
mov
fdivr
nop
fisttpll
leave
sub
into
fucomp
ljmp
fadd
fildl
inc
loopne
push
clc
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
in
test
cld
into
xchg
in
repz
hlt
cs
cmp
lret
rcl
repnz
testb
test
out
jmp
cld
out
sti
rcr
ss
aas
aam
loope
clc
out
mov
test
cs
repnz
cld
repnz
cld
fld
rcl
aas
ret
sbb
test
ljmp
xor
cld
out
test
jmp
aas
mov
sti
adc
loope
out
jmp
aas
clc
in
ljmp
test
xlat
int3
jmp
dec
mov
fiadds
in
repz
out
fucomi
rcl
rcl
clc
fcom
rcr
loopne
std
jecxz
test
ror
div
jmp
aam
repz
cmc
iret
cli
in
xor
fsub
mov
fsubrp
add
aad
repnz
xor
in
int3
adc
loop
fstp
iret
rcl
ret
loope
and
leave
nop
lret
xor
lock
fdiv
int3
int
adc
loope
fsub
fmull
mov
xor
shr
cmp
cmp
shl
jmp
in
add
lret
xchg
jecxz
jmp
hlt
hlt
sar
jmp
and
cmp
std
xlat
iret
repz
xchg
test
xor
icebp
into
in
xor
test
fiadds
ret
leave
in
int3
lret
faddl
cmp
jmp
shlb
cmp
fcmovb
faddl
mov
in
fiaddl
test
cs
in
aad
adc
testb
enter
incb
shr
repnz
aas
ds
cld
fucom
repz
jecxz
repz
test
shl
mov
test
int3
lock
shr
cmp
hlt
cld
and
mul
out
mov
cli
cli
mov
xchg
jmp
shr
shll
call
xor
into
fsub
call
fldl
lret
idiv
in
cmp
adc
sbb
call
adc
int
aad
aad
not
clc
xor
roll
hlt
not
std
dec
ret
in
ret
addl
stc
fdivrp
sti
shr
in
in
leave
shl
out
jecxz
ljmp
xor
fucompp
cmp
int3
faddp
addb
mov
shl
clc
ret
ror
cmp
idiv
test
sar
fstp
stc
rcr
mov
cmc
jmp
jmp
mov
fildl
xor
aaa
imul
fucomp
sar
test
repz
loop
mul
mov
into
enter
jmp
das
ret
xor
jmp
shr
faddp
loopne
enter
cli
addl
int3
sti
rcr
cmc
fxch
neg
xlat
fst
sar
inc
in
loopne
leave
xchg
repz
stc
lret
repnz
stc
aad
flds
clc
out
lret
std
cld
mov
in
icebp
shll
lock
int3
cmp
iret
out
in
repnz
std
in
lock
mov
xchg
in
aad
cmp
imul
jmp
cmp
stc
fucom
repnz
clc
leave
int3
out
stc
sti
in
mov
aas
das
into
in
rcl
cmc
in
leave
loopne
rolb
aam
aam
mov
xchg
jecxz
mov
into
int
aad
rcr
out
icebp
xlat
int3
vpsraw
clc
fstp
cli
int3
test
ljmp
sub
jmp
jmp
std
in
sar
xlat
cmp
xlat
aas
rol
mov
test
out
incb
ret
hlt
xlat
out
ss
xor
in
icebp
sar
ret
xchg
jecxz
out
int3
repnz
enter
out
in
ljmp
fadd
fstp
mul
test
cli
cli
xchg
roll
out
cli
stc
in
fcmovu
inc
aad
adc
testl
shl
das
in
aaa
cli
sti
xor
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
sar
loope
ret
test
and
stc
fdiv
mov
nop
jmp
cmp
mov
rcl
xor
call
clc
out
fchs
iret
repnz
std
out
sub
ror
int3
ds
fcmovu
cmpl
loop
xchg
lock
xor
out
rcr
out
ljmp
repnz
cli
fmulp
fadd
fcmovu
loop
loope
lret
repz
out
xor
xor
xlat
adc
ds
leave
jecxz
sti
testb
jmp
ret
icebp
in
clc
lret
repz
cmp
out
fildl
stc
out
jmp
std
mov
jmp
lret
fdivrp
std
cld
cmp
in
fadd
xchg
in
addl
aas
shl
into
cs
incb
sub
lret
mov
into
in
lock
vpaddsw
idivb
cmp
aam
cmp
stc
into
ret
call
inc
and
les
mov
aam
idivl
cld
fildl
test
faddp
ljmp
adcl
xor
das
ljmp
addb
decl
out
loop
lret
repnz
fdivr
cmp
ds
ret
fisttps
out
mov
out
fucom
ljmp
cld
out
repz
rol
cli
xlat
fnstcw
test
test
out
xor
repnz
xlat
fistpll
roll
mov
call
cmc
ljmp
ljmp
in
incb
mov
call
loope
mov
cmp
lret
shl
clc
icebp
cld
rcl
fdiv
shl
int3
int
lret
into
mov
lret
cmc
rcl
in
cs
mul
fmul
ret
xlat
clc
aam
aam
out
decb
xchg
in
push
shrb
xor
fnstcw
out
hlt
neg
sar
orl
inc
into
fsubr
icebp
mov
leave
xor
fdivs
fstpt
loopne
into
fildl
fucomp
ds
and
ror
std
lock
shll
bnd
in
int
stc
stc
aas
jmp
clc
xlat
filds
xchg
xchg
iret
out
xlat
aam
shlb
aas
cmpb
les
orb
icebp
out
cli
in
cld
into
ljmp
cmc
xchg
rol
fdivrp
sub
orb
out
in
in
xor
hlt
sar
jmp
iret
cli
xchg
leave
ljmp
repz
in
xor
icebp
fcmovnb
shr
push
loop
loop
cmc
cld
test
loopne
leave
loope
in
fsubp
shl
mov
shrb
lret
neg
ljmp
aad
rcl
enter
test
in
into
mul
call
into
fdivl
out
shl
ffree
out
faddl
xchg
aam
mov
in
xor
xlat
jmp
cld
sar
out
repnz
rcr
sarb
fdivr
lock
cmc
adc
fsubrs
ror
cmp
aad
filds
mov
lock
lea
into
xlat
xor
clc
cmp
or
in
imul
out
xchg
fmul
out
out
in
xchg
adc
in
xor
cmp
rcr
test
loop
loopne
sti
lret
cli
call
fdivs
idiv
lock
cli
aaa
fscale
cmp
ds
in
stc
cli
add
out
nop
shl
rorb
in
ds
xor
cmp
stc
ds
rol
jecxz
loop
enter
int
test
xor
xor
not
xor
fsub
sar
icebp
cli
incb
into
test
test
fcmovne
leave
incl
ds
xlat
aad
int3
fsubp
in
in
jmp
int3
out
shlb
std
loope
test
sar
fcomi
cli
enter
int3
add
add
add
mov
fildl
adc
jp
jg
roll
jle
mov
stc
into
call
ds
fld
sar
hlt
jmp
aad
fnstsw
lret
nop
in
into
jmp
cmc
sub
rol
lock
cmp
repz
idiv
sar
jmp
fscale
lock
out
test
aaa
fld
lds
sar
shr
rol
ret
leave
ljmp
ljmp
in
in
into
ljmp
jecxz
rol
enter
lret
cli
mov
loope
std
jmp
aam
aam
neg
icebp
sti
fst
ret
fldl
test
in
repnz
ljmp
cmp
aad
std
test
fdivrp
hlt
cmc
mov
or
lret
xchg
loopne
in
aad
xlat
aad
jmp
jmp
fdivr
div
cli
mov
xlat
addl
loop
mov
enter
aaa
fnsave
jmp
ss
test
xlat
mov
mov
and
xor
sub
cmc
call
aad
ror
out
rolb
in
ret
sti
in
enter
rcl
out
in
enter
out
in
lret
aaa
cmp
loop
mov
popl
in
xchg
out
xlat
ljmp
jmp
addl
or
in
lret
dec
xchg
shr
xchg
int3
xor
lock
shl
in
xlat
aad
fcomip
jecxz
std
mov
lret
out
cmp
cli
lds
cmp
iret
ds
out
mov
fsubrp
lret
rorb
enter
fldl2t
std
sbb
stc
rcl
mov
cld
mov
loop
and
jmp
stc
jmp
enter
in
loopne
repnz
sub
sub
and
iret
jmp
lock
int
in
cmp
out
fdivr
std
lock
mov
fistl
in
aad
iret
call
clc
cmp
shl
test
fdivrp
cli
out
in
sub
faddp
aam
call
icebp
lock
rcr
fdivp
idiv
mul
aam
xchg
in
xchg
repnz
ds
fidivrs
adc
sar
ljmp
and
decb
icebp
cmp
in
cmp
fcmovbe
ror
and
jecxz
xlat
sarl
xchg
iret
std
xor
in
jecxz
int
cmp
fcmovbe
cmp
in
clc
mov
out
vpmaddwd
int3
fisttps
leave
clc
ss
int3
loope
hlt
cmp
neg
clc
leave
mul
orb
and
push
in
jmp
hlt
int
repz
ss
aam
jmp
ret
fcomp
lock
jecxz
mov
xchg
loop
jmp
repnz
aad
cmp
loope
fcom
loope
fimuls
clc
mov
ljmp
out
cmc
enter
fsubr
lret
lret
stc
into
cmc
xor
loopne
loopne
mov
cmp
in
in
cld
fcmovne
cmp
hlt
lock
out
loope
lret
mov
call
cmp
sub
jmp
aas
test
test
cmc
sti
loope
in
lret
out
ljmp
xor
into
cmp
not
jmp
icebp
xchg
xlat
mov
test
lret
lock
cmc
aam
loope
jecxz
lds
shl
ret
ds
mov
loope
nop
jmp
call
ror
out
int
into
in
xlat
xor
cmc
repnz
lea
in
fxtract
out
aad
stc
cmp
icebp
rcr
cmp
rcr
sti
out
xchg
in
in
sub
rcl
fcom
hlt
xor
out
cli
rcr
and
cmp
mov
cli
xchg
loope
repz
fidivrl
int3
out
lret
flds
xchg
cmp
lret
in
rcl
out
leave
not
repnz
lock
in
loopne
enter
flds
incb
hlt
shl
jmp
lret
cmp
repnz
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
fst
out
cmp
aas
decl
aam
enter
jmp
cmp
std
hlt
cmp
shl
in
fld
lret
jmp
loope
lock
out
xor
fnstcw
hlt
hlt
test
icebp
shl
std
ds
testb
xchg
iret
repz
ret
test
rolb
aas
adc
in
in
test
clc
test
into
lock
shll
out
fidivrl
repz
loope
sbb
test
imul
xchg
jmp
out
lret
jmp
clc
clc
call
out
cld
cmp
stc
call
in
int3
cmp
nop
sti
adcb
out
hlt
cmp
cmc
aas
cmp
aam
fcomip
sti
jmp
les
aad
neg
in
clc
cmp
fucomp
cld
xor
sti
and
ret
jmp
rorb
cmc
jmp
aaa
sti
cmp
out
cmp
mul
call
test
mov
int3
rcl
int3
vpor
stc
xor
ss
cmc
in
ffree
loope
decl
cmp
incl
sub
repz
out
ljmp
ret
mul
xchg
mov
test
out
xchg
mov
enter
out
aam
iret
lret
out
fucom
lret
cmc
cmp
sbb
aad
in
xchg
in
xchg
xor
iret
shlb
shl
repz
fsub
sti
cmp
incb
mov
lret
ror
lock
jmp
into
xlat
aaa
xor
ds
ret
repz
div
lret
mov
cli
ljmp
lret
xor
cli
fcmovnbe
cmp
xorb
lret
cmp
clc
loopne
in
fdivrp
cld
mov
ljmp
cmc
aaa
aaa
lock
clc
clc
call
mov
icebp
mov
out
into
out
into
cmp
stc
clc
fcomp
fadds
jecxz
xlat
leave
or
flds
ss
cld
lock
cmpb
fcmovnu
cli
clc
repz
out
loopne
mov
icebp
ljmp
lret
lret
cld
lret
cmp
xchg
out
out
jmp
movl
in
cmp
rcl
xlat
out
cmp
fucomi
fimull
filds
out
ret
int3
cmp
jmp
cmp
out
in
xchg
cli
shl
loopne
in
jmp
out
xlat
cmc
xor
int
jmp
in
fsin
fdivrl
in
call
out
xor
aam
sti
cli
cmp
jecxz
int
test
xchg
mov
clc
out
lret
cld
orl
shr
cmp
int3
in
hlt
std
jmp
flds
xlat
ds
mov
in
xor
sti
cli
fcmovbe
rcr
cmp
std
cmc
hlt
repz
cld
fcmovnu
mov
mov
jmp
in
in
xor
leave
std
aad
fdivr
cmp
ret
cmc
out
mov
cmc
in
call
leave
fucomp
xchg
xor
int
lock
out
fdivrs
iret
ds
loopne
ljmp
xchg
lock
fsubr
xor
cmpl
out
loope
xchg
test
shl
loop
jmp
in
div
icebp
repz
aam
cli
roll
stc
fildl
mov
sub
das
jmp
ss
rcr
repz
fscale
in
addl
std
loop
out
into
ss
cmp
adc
fcmovu
ret
jecxz
rol
loope
int
stc
lret
rolb
rcl
iret
sarb
ret
aaa
faddp
cmp
fadd
lds
mov
hlt
aad
das
in
lret
leave
aaa
leave
cmc
repz
fistpll
rolb
repnz
call
out
fildl
not
leave
aaa
rcl
leave
stc
call
in
loopne
xchg
jmp
fdivrp
addb
ss
out
shr
into
addl
in
ret
sti
push
xchg
cmp
ret
fstpt
sti
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
jecxz
jmp
ror
into
sar
sar
movb
rcr
ret
sti
mov
repz
xor
out
xor
cld
in
cmp
jmp
xchg
aad
in
loop
out
std
mov
lret
int3
aam
jmp
aaa
xor
test
repz
mov
ror
loopne
in
xchg
jmp
iret
in
iret
call
loop
std
std
test
mov
sti
test
ljmp
shl
lret
ret
cmc
les
icebp
leave
aad
rcr
hlt
faddp
rcl
jecxz
xchg
xchg
lret
icebp
icebp
lret
icebp
int
std
xor
cmp
jecxz
xchg
mov
jmp
mov
fcmove
jmp
in
iret
fsub
ljmp
aas
aad
hlt
leave
adc
out
fyl2x
mov
repnz
hlt
inc
stc
icebp
fildl
out
loope
mov
adcl
lret
divb
into
lock
fucomp
in
fucomip
les
int3
jmp
aam
clc
cmp
shr
into
into
std
fldl
shr
and
repz
into
ljmp
aas
test
ftst
adc
aad
ljmp
repnz
jmp
ret
icebp
lret
out
out
aaa
repnz
rolb
ljmp
mov
and
and
idiv
sar
cmp
cli
ret
roll
and
in
in
in
xchg
decl
fsubr
cld
cmp
xor
loop
sbb
in
filds
in
out
cmp
aaa
fucomi
shr
loopne
loopne
xlat
jmp
cmp
sbb
xchg
divb
cs
fdivrs
shll
test
stc
jmp
fucom
in
mov
into
in
sub
cmc
shll
cli
xlat
rcr
aam
shl
out
ret
jecxz
in
xchg
out
xor
aam
loope
aam
fxch
fnstcw
fistpll
in
xlat
loop
fisttpl
in
xchg
xchg
cli
icebp
icebp
das
cmp
call
sar
fsubp
mov
sub
xchg
fadd
fdivp
mov
xor
out
cmp
stc
sti
aad
ret
fst
in
test
ljmp
std
xor
cmc
aas
rcr
ffreep
std
aam
aam
stc
sub
test
in
iret
xor
cmp
cmp
incl
loope
call
xorl
lds
iret
neg
mul
jecxz
fst
mul
test
enter
mov
jecxz
jmp
les
cld
lock
cmp
aam
out
std
fldpi
in
in
neg
cmp
xchg
enter
cld
cmp
cmp
ror
rcr
stc
incb
out
adcl
repnz
in
out
sub
fmull
int
mov
out
fimull
icebp
loop
cld
out
icebp
cmpl
std
add
loope
test
shl
in
ss
shl
lock
fsubrp
adc
test
iret
repz
xlat
test
into
fcmovu
xlat
std
repnz
fiadds
fiadds
xlat
loope
jmp
icebp
cmp
ljmp
mov
loop
mov
jmp
test
clc
xor
clc
sti
cmp
stc
aaa
jmp
out
aad
cld
addl
loop
mov
jmp
into
int3
lock
ljmp
idivb
cmp
icebp
fxam
loope
fcmovb
mov
jmp
out
call
iret
out
xlat
loope
loope
shl
aam
lret
fcmovb
mov
mov
fucomip
out
lock
in
lret
cmp
xor
iret
icebp
test
fadd
jmp
lret
mov
shlb
enter
xlat
fucomp
in
inc
aas
mul
aas
mov
repz
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
insl
jae
jg
roll
jle
cld
out
popl
shl
fdecstp
out
jmp
icebp
lret
cmp
sti
lock
in
inc
in
test
ljmp
hlt
sub
test
mov
fisttpll
adcl
rcr
clc
out
xlat
cmc
cmc
loopne
fcomp
ljmp
jecxz
faddp
xchg
ror
xor
into
push
out
repnz
loopne
test
out
fsubr
cld
in
xchg
enter
shl
sar
in
fnstsw
iret
ljmp
xchg
call
into
in
lock
xchg
das
in
leave
out
ss
ds
fcomi
cli
out
out
test
cmc
xchg
fucomi
fiadds
out
aaa
cmc
test
hlt
sbb
flds
int3
jmp
test
aad
not
pushl
cld
stc
aam
out
aaa
test
sti
idiv
clc
icebp
sar
sti
mov
xchg
shl
cli
xor
xlat
cmp
cld
cmp
and
stc
out
jmp
out
int3
mov
xchg
shrl
xlat
out
in
ds
lock
cmpb
std
stc
sti
ret
iret
out
shl
shlb
jmp
cmc
in
sti
cmp
fdivp
xchg
out
into
loop
in
rcr
xor
in
into
in
clc
lret
cmp
ljmp
loop
aad
aad
xlat
test
cmp
fucom
jmp
xor
ret
lret
fucomip
cmp
xor
in
ffree
and
shl
loope
out
clc
int3
test
cmp
shl
rolb
nop
test
shr
mov
neg
cmp
aad
int3
stc
fdivrp
div
repz
incl
fcom
lock
xchg
in
ret
stc
aam
fmul
repnz
loop
ret
in
loope
aad
fcmovu
testl
xor
hlt
xlat
fldpi
cmp
fst
xlat
hlt
in
fst
idiv
fiaddl
incb
xchg
xor
enter
aad
into
jmp
loop
cmp
and
out
mov
cld
mov
out
not
into
leave
int
cmp
lret
ret
repz
clc
repnz
xchg
jmp
lock
aam
shl
jecxz
in
xor
fcomi
ds
icebp
cmp
cmp
out
fcomp
lea
xchg
xor
call
call
icebp
test
loop
cld
incb
stc
cli
mov
nop
cmc
out
aad
leave
stc
int
int3
call
aam
testl
test
shlb
cmp
leave
out
xor
out
fcmovnbe
fnstsw
test
enter
in
lock
in
movb
repnz
hlt
xor
in
loope
jecxz
std
loopne
aad
loope
mov
hlt
cmc
mov
xlat
ljmp
cmc
ljmp
incl
jecxz
iret
loopne
out
rcl
rol
lock
clc
cmp
cmp
test
test
std
vpsubsb
fldl
repz
into
ss
fnstcw
in
neg
loopne
adc
loope
flds
test
aam
int
xor
cmp
aad
cld
stc
in
xlat
lock
shl
mov
mov
in
bnd
fadd
fsub
clc
int3
aam
neg
xchg
mov
int3
enter
xchg
rcr
not
leave
ror
ror
std
sarl
idiv
cld
repz
out
mov
call
sub
out
out
cmc
int3
fldln2
xlat
imul
sti
or
ret
mov
out
call
lea
aam
lock
aam
cmpl
idiv
in
xchg
mov
lock
xchg
int3
enter
in
fstpt
ror
iret
icebp
in
ss
test
clc
jmp
mov
fmulp
jecxz
test
not
xor
into
out
fucomp
neg
inc
adc
stc
jmp
in
adc
xlat
xlat
repz
fprem
aad
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
lret
xor
addr16
push
add
lret
repnz
ds
std
clc
test
testl
out
hlt
das
out
fmul
not
cli
sarb
incb
into
filds
mov
clc
xlat
out
xlat
idiv
incl
sti
lock
shl
xchg
popl
cs
cld
shl
cmp
fnstcw
idiv
int
sti
cmp
jmp
orl
lret
fidivl
or
aas
out
std
jmp
incl
repnz
iret
shr
sub
sub
aaa
into
int3
shll
repz
xor
cli
std
xchg
into
rcll
lret
cmp
repz
out
inc
in
in
out
mov
mov
int3
in
in
das
div
xor
xor
cmp
cli
fucom
decl
fdivr
mov
loop
int
shl
ret
int
cmp
in
faddl
in
test
mov
out
fimull
jmp
shl
fcomp
leave
loopne
in
cmp
idiv
shl
addl
aam
fbstp
call
cmp
cmp
lret
icebp
cmp
clc
hlt
cmc
mov
int
mov
fptan
call
xor
hlt
out
jmp
int3
jmp
sar
fdiv
jecxz
xchg
call
jecxz
mov
fmulp
aam
clc
clc
call
inc
shl
roll
loopne
out
xchg
jecxz
adcb
shr
lret
aaa
cmp
loope
cld
idivl
cld
stc
fsub
call
rcr
jecxz
jmp
leave
enter
hlt
lock
in
cmp
mov
test
xchg
shl
test
lock
xor
ss
loop
icebp
cmc
leave
int
out
in
int
xor
xor
out
fucomip
cli
ljmp
shl
aad
loope
in
in
int
fsub
call
shl
cmp
xor
xor
into
testb
in
leave
icebp
out
shl
fisttpll
vpsrlw
int
aas
fsub
ret
cmp
cld
mov
add
std
loop
ljmp
xlat
sar
sbb
sarl
fstpt
shl
shl
fiaddl
enter
mov
jmp
jmp
aam
fst
icebp
loop
jmp
mov
cmc
ret
jecxz
cmp
lock
fcom
cmp
ds
in
loopne
fst
test
clc
sti
orl
loope
repnz
in
iret
in
leave
cmp
cmp
repz
cld
addl
nop
mov
mov
icebp
lock
aad
stc
fdiv
iret
out
int
sti
xor
push
xchg
test
shl
icebp
int
in
int
out
sar
sar
div
cld
adc
out
sar
repz
xlat
call
nop
in
lret
into
aam
in
iret
out
shl
std
cmp
roll
out
rcr
shr
xchg
loopne
xor
test
xor
int
int3
clc
div
test
fiaddl
lret
into
xchg
out
xor
stc
cmp
fidivl
jmp
ds
loop
in
out
fdivrp
enter
jmp
cli
xchg
test
xchg
aas
out
repnz
xor
ds
cld
aad
loope
jecxz
sar
fimuls
rcl
out
jmp
in
in
leave
enter
rcr
int3
not
cmc
stc
testl
test
ret
ret
fpatan
repz
lock
std
out
fnstcw
out
out
jmp
jecxz
in
enter
into
lret
cmp
fdivrs
ret
mov
rcl
ret
mov
call
jmp
cs
ss
ljmp
xlat
ret
in
out
std
out
loop
ret
jmp
mov
orl
cmp
neg
loope
std
add
fsub
out
add
addl
loop
into
xor
fdivs
sti
div
ljmp
fxam
clc
mov
out
in
ret
in
mov
in
lret
in
cli
leave
iret
cli
jmp
iret
roll
xchg
xchg
out
mov
aad
in
icebp
rcl
lret
in
sarb
std
fdivr
test
in
fnstcw
mov
out
out
mov
lock
int
div
cld
hlt
cmp
lock
iret
icebp
fxam
test
call
addl
out
lret
repnz
fst
lret
jecxz
loope
aam
imul
loope
jmp
mov
arpl
adc
add
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
les
jle
add
sbb
in
test
call
xor
mov
jmp
ror
ret
loop
ljmp
int3
fidivrl
xlat
out
call
lret
in
jmp
ljmp
int3
not
xlat
icebp
fcomip
neg
aad
loope
aam
fcmovne
in
loopne
fsubp
test
sub
das
cmc
ss
aas
out
shl
loopne
test
aam
loopne
and
xchg
aad
out
aam
cmc
cmc
std
aam
aad
sar
cmp
ret
in
clc
jmp
mov
xlat
xor
iret
cli
ss
rcr
hlt
ds
iret
out
sti
cmp
repz
xchg
icebp
int3
int
fldl2t
fucomi
enter
ret
test
add
stc
xlat
enter
dec
hlt
in
jmp
xor
stc
cmp
in
leave
cmp
repz
clc
lds
fdivrp
fimull
ror
cmp
jmp
loopne
repz
sbb
in
enter
loope
in
xchg
loope
das
in
into
cmc
fsub
cld
fdiv
cmp
repnz
repnz
xlat
cmc
or
sti
ret
rclb
into
enter
jmp
iret
repnz
cmc
fcmovnbe
cld
neg
mov
fmul
xchg
ror
cli
in
jmp
sarl
icebp
movl
xchg
mov
int
shl
sarl
ljmp
fdivr
shl
in
mov
fsin
int3
mov
jmp
out
neg
shl
into
fdivrs
leave
lret
stc
test
out
in
mov
out
fcmove
ss
cld
sarb
ret
iret
mov
out
test
clc
orb
xchg
aaa
lret
xor
repz
faddl
sti
fcmovu
fcmovnb
fadds
test
xchg
incl
fsubr
fyl2x
incb
flds
ljmp
int3
repnz
aad
hlt
enter
cmp
xchg
mov
cli
aam
aad
fsubr
enter
rcl
aad
cmp
xor
lret
repnz
std
out
repz
iret
test
shl
out
loope
sub
xor
out
int3
lret
leave
aad
idivl
lock
ret
dec
enter
in
mov
in
fucomp
cmc
int3
loopne
sar
rcl
lock
cmp
idiv
filds
cmp
mov
fsubr
test
in
clc
iret
repz
int
repz
in
not
out
mul
ret
test
cli
jmp
repz
xor
jmp
cli
xlat
call
lret
leave
and
in
and
int3
loop
iret
cmp
int3
cmp
aas
call
test
cli
xchg
lret
icebp
out
mov
hlt
xor
cld
in
cmp
repnz
out
flds
mov
cld
in
sbb
out
int3
divl
shr
in
sti
xlat
fistpll
push
xlat
ret
neg
loope
test
loop
into
rol
rol
in
cmp
sarb
icebp
sti
hlt
cmp
aas
rolb
mov
jecxz
in
sub
int3
loop
ljmp
aas
fincstp
and
cld
sar
cmp
ret
int
int
aas
loope
call
aaa
sarl
sar
fldl
out
loopne
clc
xlat
jmp
xchg
sub
in
icebp
iret
cld
lret
ror
rcr
out
idiv
test
out
fsubr
lret
enter
out
int
das
in
std
cmp
sarb
std
fldl
loop
fadds
in
repnz
into
sarb
in
xor
icebp
sarl
in
ret
stc
int
dec
out
mov
int
in
call
int3
aas
in
in
cld
xor
clc
lock
jecxz
in
jecxz
shr
cmp
leave
xor
cld
cmc
clc
test
mov
enter
test
out
loop
xlat
iret
idiv
in
in
aas
fcmovu
shr
mov
in
fadd
lds
or
out
out
leave
repz
std
out
cmp
lret
addb
test
cld
in
iret
cld
shl
shr
iret
cmp
aam
enter
aam
rcl
rolb
and
fdiv
xchg
hlt
loope
xor
out
rcl
cmp
ds
xlat
in
loope
sar
jecxz
call
jecxz
int
shl
out
into
int3
repz
aaa
enter
ret
loope
jecxz
shll
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
cmp
jg
push
add
enter
in
mov
loope
sar
int
loop
xor
fmul
lret
enter
shr
rcr
idiv
cmp
in
std
out
mov
not
call
int
icebp
aas
std
div
int
shl
icebp
test
cld
loop
enter
fdivp
out
cs
clc
sti
cli
cmp
xor
sbb
ret
loop
lret
cmc
fisttps
call
xor
int
rcr
std
cld
out
cmp
fdivp
jmp
iret
out
mov
mov
clc
ret
jmp
cmp
cmc
enter
out
repnz
fiadds
mov
out
aas
les
xor
jmp
lret
out
clc
ret
rcl
shr
xchg
mov
icebp
rcr
out
call
clc
int
clc
fdivrp
addb
incl
out
fcmove
sti
xor
aas
out
lock
out
xor
cmc
cmp
xchg
fucomip
in
stc
sar
into
loop
rcl
enter
int
cmp
aam
shl
repz
fdiv
orb
int
int
xchg
out
stc
rol
lock
clc
int3
xlat
xlat
fcom
int
fdivr
hlt
mov
orl
sar
into
sarb
repz
cmc
icebp
repnz
out
int
int
loop
fst
xor
shll
lret
cmp
iret
jmp
cli
cmp
loope
sub
mov
shr
fdivp
aam
lret
repz
leave
cmp
repnz
imul
fcmove
int3
in
out
in
nop
mov
aam
sti
iret
cmp
aaa
in
cmc
cmp
jecxz
loopne
xchg
in
incb
enter
ror
aam
cli
or
push
xchg
in
ret
jmp
out
cmc
fcmovu
cmp
in
fcomp
ds
std
fcmovu
test
mov
xchg
int
test
ret
icebp
xor
fmulp
faddl
jmp
fmul
fisttpll
lret
sti
into
cld
int3
xor
cmp
ret
fcmovb
mov
in
hlt
incb
int
lret
out
aad
loopne
sar
fcmove
xor
aam
clc
mov
stc
fsubr
or
xor
xor
xor
enter
aas
cmc
sti
shl
rol
in
xchg
or
out
jmp
lock
fnstcw
out
jecxz
cmp
fcmovnb
aam
fucom
out
nop
xchg
int
iret
loop
repz
jmp
std
ljmp
cld
cli
out
aam
imul
loopne
fmul
into
xchg
hlt
jmp
ljmp
cmp
int
repnz
roll
loop
jecxz
xchg
xchg
std
int
lret
xor
sti
clc
into
cmp
rolb
enter
out
cld
iret
lret
xlat
jecxz
lock
cli
fcom
aam
shl
icebp
sbb
add
decb
icebp
repnz
in
out
ljmp
fidivl
stc
jmp
rol
mov
ret
ret
ret
sti
loopne
mov
icebp
aad
ljmp
ds
rolb
mov
in
jmp
addl
in
cli
out
repnz
fsub
fimuls
ljmp
fsub
rorb
leave
cmp
sar
jmp
sarl
fadd
sti
filds
out
out
cs
imul
fcmovnbe
cmp
in
mov
rolb
and
cmc
int3
loop
xor
cli
int
cmc
xlat
cmp
lock
fnstcw
call
leave
jmp
ret
loopne
xchg
cmc
xor
icebp
aaa
cmp
xor
jmp
or
mov
xchg
xchg
jmp
shll
cmp
in
lock
aad
sti
aam
ret
test
ljmp
neg
xor
ss
sti
cmp
cmc
icebp
cmp
fsub
loopne
sti
leave
fmull
mov
xchg
rcl
lret
aad
idiv
sti
cmc
into
lock
leave
aas
fucomp
shl
loopne
cmc
fcmovu
call
in
shr
hlt
int
repnz
xabort
shr
fdiv
ret
addb
test
test
nop
ret
cmp
xor
aaa
repz
sti
cmp
fadds
ret
in
leave
loopne
jmp
shll
hlt
loop
fsub
clc
hlt
shl
fdivr
in
fdivr
lret
out
lret
clc
idivb
clc
lret
repz
push
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
cmp
ret
cmp
ljmp
std
test
xchg
in
pop
jmp
int3
lret
aad
aam
loop
ds
ds
loop
mov
xchg
hlt
mov
shlb
xor
std
not
cmp
out
les
testb
test
xchg
mov
xor
into
xor
lret
hlt
stc
cmp
movl
hlt
mov
in
ljmp
cmp
rol
loopne
fsincos
mul
test
sub
loop
jmp
cmc
out
iret
jmp
aam
out
loopne
enter
leave
frstpm(287
movl
les
int
ds
cmp
stc
or
ljmp
in
fmull
out
rcl
cld
out
lret
ret
test
cmc
loopne
addl
in
hlt
lret
fnop
int
cmp
fucom
shl
cld
in
addb
shlb
enter
int3
cmp
int
fcmovbe
repz
fcos
out
fsubrp
repnz
dec
leave
jmp
leave
fsubr
call
lret
hlt
flds
test
ljmp
xlat
out
int3
enter
ds
hlt
cmp
inc
leave
int
mov
repnz
loop
clc
out
int3
xor
ds
in
aas
cmc
fcmovnb
loopne
enter
fcomip
faddl
lret
repnz
das
in
idiv
cmp
in
leave
mov
sub
aad
loop
aaa
jmp
cmp
cmp
icebp
aad
ds
testb
enter
out
fdiv
leave
lret
lret
shr
iret
repnz
loopne
in
sti
out
in
mov
enter
cli
mov
rcr
aad
jecxz
sarb
in
cld
cmc
ret
ds
fcmovnbe
jmp
fucom
ljmp
aam
sti
xor
xor
fidivrs
loop
repnz
fstp
test
in
loop
ret
out
rcr
int
jmp
int3
aad
sar
into
in
shl
cld
fldl
int
addl
stc
xor
fldl
fsub
clc
leave
sti
xchg
int
in
repz
int
sub
ss
rcl
decb
loop
test
xor
sub
jmp
loope
fcmovu
fcom
lds
fucomip
test
out
xchg
iret
icebp
rol
iret
shr
ror
aas
in
in
loope
out
clc
fucompp
in
xchg
nop
test
stc
lret
cmp
jmp
iret
incb
jecxz
mov
enter
addb
in
cmp
leave
jmp
jmp
fstp
cmp
leave
loopne
in
lret
iret
fimull
jecxz
in
xor
into
ds
xor
shl
xlat
out
fdivp
ret
test
jecxz
icebp
in
out
cld
std
xor
iret
sti
aas
idiv
ret
cmp
enter
cli
roll
cli
sub
ljmp
decb
mov
fadds
in
into
into
cmc
shll
cld
cmp
xor
sarl
rol
sarl
fucom
cld
leave
int
mov
repnz
xchg
in
shr
das
in
ljmp
in
into
repz
fsqrt
enter
out
sti
iret
xchg
mov
hlt
loopne
aad
cli
lock
cmp
stc
fucomip
std
hlt
xor
rorl
jecxz
test
aam
enter
int3
xlat
sarl
aad
rcl
rol
xor
xchg
aad
popl
std
loopne
aaa
xor
test
cmpl
sbb
cld
int3
out
mov
xchg
out
pushl
xor
in
xor
iret
cld
xor
cld
add
int
call
mov
loopne
lret
lock
into
icebp
ds
sarb
roll
in
enter
in
into
imul
cmp
leave
shr
in
lret
cmp
cli
out
test
lret
stc
loope
loope
cld
mov
cs
clc
hlt
sti
ljmp
shl
jecxz
aad
jecxz
in
fimull
lret
lret
repz
stc
repnz
ss
in
fxch
in
ret
cld
fucom
fiadds
xchg
iret
mov
loope
loope
xor
out
fdivrs
icebp
ret
cld
lds
or
adcb
and
lods
bound
inc
arpl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
sbbl
jle
int
icebp
jmp
in
into
cmp
cmp
aaa
ret
rol
aam
dec
loope
call
out
jmp
xlat
clc
cmp
ror
fistpll
cld
out
in
sbb
int3
into
out
shll
xor
fucomi
cmp
sarl
xor
icebp
lret
neg
incl
mov
xlat
divb
int3
icebp
ds
aad
idivb
jecxz
leave
xchg
cld
or
aam
jecxz
cmp
repz
cmp
hlt
in
fadds
fcmovu
fucomip
cld
in
nop
rcr
xchg
rol
xor
out
sarb
sar
cld
ds
cli
sti
ret
fsubrp
in
int
rolb
rcl
iret
in
fcomp
aas
div
rcr
add
cld
addb
iret
sti
repz
xchg
xlat
xor
ret
lock
int3
iret
jmp
in
cmp
iret
jecxz
out
mul
loopne
fcmove
ret
std
loopne
test
cs
shll
cmp
fcom
into
fucomi
stc
in
cli
sti
lock
out
test
sub
repz
cs
leave
out
xlat
cmp
std
adc
hlt
in
mov
lret
nop
ljmp
xor
lret
aam
neg
fnstcw
fptan
fmuls
mov
jecxz
filds
not
shr
fnsave
icebp
std
in
cmpl
xchg
call
orb
sub
hlt
lock
int3
test
rcr
mov
mov
push
nop
loope,pn
repz
hlt
fucomi
int
sarb
ret
bnd
in
std
mov
cli
incb
cmc
les
int3
xor
aad
stc
fpatan
test
ret
loopne
std
neg
mov
jmp
rol
clc
iret
fxch
xor
cld
enter
stc
stc
cmp
call
call
cld
lock
clc
cmp
cmp
jecxz
fiadds
in
sti
iret
jecxz
fisttpll
int3
aaa
fcmovu
ds
adc
cld
rolb
out
flds
mov
aam
lret
rol
int
loop
jmp
idiv
jmp
sti
cld
int
xchg
iret
xor
hlt
jmp
lret
ds
ds
fcmovnu
rolb
sti
out
cli
out
lret
iret
fistpll
mov
les
in
xchg
in
xor
out
fmul
lock
aas
cld
out
sti
std
sarl
icebp
aam
aam
fsubrp
xchg
icebp
jecxz
testb
leave
lret
out
incl
out
test
ljmp
enter
rcl
int
xor
call
aam
cmp
incb
fucom
loop
out
loop
int3
int3
fcmovbe
shr
cmc
xor
cmp
lock
test
loop
int3
in
iret
call
not
loop
rcr
cmp
cli
aaa
hlt
cld
aad
jecxz
out
xlat
aam
mov
clc
in
cld
out
in
out
cmc
icebp
ret
icebp
std
iret
lret
leave
div
xor
fcomi
cmp
leave
ret
faddl
orb
sar
hlt
iret
out
in
fcomi
loope
loop
ret
fmul
out
fsub
shr
shl
iret
hlt
sti
xor
cld
sti
shl
cmp
mov
ds
xlat
incb
fsubp
aaa
xor
imulb
dec
lret
idivb
out
incl
int3
xchg
icebp
hlt
out
fcmove
cld
shl
iret
repz
sarl
repz
fincstp
sar
xlat
xchg
int3
test
lret
into
xchg
sub
fldln2
jmp
repz
cmc
into
incl
not
cld
nop
mov
fadd
xchg
cmc
aam
std
sarb
out
cmp
aas
filds
mov
xchg
mov
fcmovbe
xor
stc
cmp
sti
cmc
xlat
cld
fcmovne
int
addb
xor
out
into
std
xor
clc
call
cmc
leave
cmp
enter
loop
lea
xor
xor
int
ror
test
into
in
rcr
xchg
mov
sar
in
lock
xchg
cmc
cs
int3
sarl
rcl
jecxz
div
rcr
rcl
ljmp
lret
jecxz
hlt
shlb
int
out
idivb
and
sti
fchs
out
ror
icebp
sti
xchg
jmp
test
cs
sub
fcomi
stc
fldl
xchg
lds
mov
add
add
lret
push
add
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
jle
sbb
push
add
fmul
decl
int
mov
sar
loopne
xorl
jmp
loope
xchg
mov
repz
ss
idiv
cmp
add
fld
roll
fmul
dec
in
nop
shl
aaa
sub
jmp
leave
jmp
in
in
sti
stc
in
rol
loop
in
icebp
lret
out
repz
fisubrl
ljmp
rcl
shr
in
jmp
adcb
ror
out
fcom
cld
xor
enter
cmp
sarl
rcr
clc
repnz
jmp
fildl
repz
in
xlat
out
div
out
cmp
rol
rcl
cli
cld
out
lret
test
addl
cmc
repnz
xlat
shl
cmc
rolb
rol
in
in
shl
lret
out
loop
icebp
ss
cmp
ds
repz
cmp
addb
shr
iret
xchg
inc
out
aaa
ror
hlt
cmp
icebp
cmc
jmp
not
into
xchg
ljmp
in
test
decb
shlb
fmul
out
clc
adc
int
xchg
loope
out
in
mov
fptan
hlt
jecxz
xor
in
out
leave
sti
shlb
fcom
loop
stc
hlt
ds
xchg
xchg
loop
lret
std
dec
sub
in
xor
cmp
xlat
ffree
sarb
jecxz
rcr
fdivr
neg
mov
fcomip
lret
jmp
sti
shr
lock
int
in
roll
cli
jecxz
test
xchg
rclb
jmp
icebp
in
ret
stc
not
std
cmc
loopne
out
in
int
in
repz
div
out
clc
imul
into
lret
cmp
test
fcmovne
xchg
lret
loope
repnz
out
mov
cmp
jmp
cmp
fadd
aas
cmp
fiaddl
adc
out
lret
out
mov
mov
divb
enter
std
lret
cld
add
repz
fsubrp
fcomp
enter
xchg
sbb
int3
stc
jmp
aam
in
fdivr
fcmovne
out
enter
fldl
in
shl
out
xor
sti
cmp
neg
cmp
clc
enter
orb
or
cmp
int3
fldl
neg
adc
decb
iret
int3
xchg
out
lock
stc
mov
shl
clc
adc
repnz
cld
mov
std
lret
orl
ss
cld
cmc
shl
fnop
aam
jecxz
loope
mov
nop
fcmovbe
fmulp
and
shl
fcmovnu
not
out
xorb
hlt
test
ret
std
leave
in
stc
enter
mov
adcb
xor
cli
sub
dec
ret
test
mov
xor
lret
ljmp
xor
fdivrp
sti
fldl
rol
imul
out
sti
fimuls
fucomi
lock
lock
leave
repnz
aad
cmp
out
test
in
fstp
xchg
out
lock
out
ret
in
fldl2e
fdivrl
fiadds
fdivrp
fcmovnu
in
test
jmp
std
fcomip
jecxz
cmp
shr
cli
cmc
loopne
stc
lret
test
xlat
test
lret
mov
adcb
xor
out
xor
out
aam
rol
stc
ret
adc
lret
in
lret
lock
call
jmp
shr
ds
sub
sub
cmc
hlt
lret
jmp
ret
loop
xchg
stc
lret
iret
icebp
icebp
mov
xchg
lock
not
in
fcmove
aad
roll
shl
out
xor
icebp
loope
cmc
and
out
leave
aad
or
ror
into
loopne
fcmovnb
clc
cli
and
fistl
ljmp
call
test
repz
ljmp
frstpm(287
xchg
icebp
loope
loop
shlb
call
cmp
aas
aad
out
sub
xchg
xchg
fists
repnz
aad
ror
hlt
cmp
aad
and
ljmp
in
iret
ret
xor
aam
in
shl
cmp
repnz
in
xchg
std
ret
rorb
cmp
repnz
hlt
fmul
hlt
jmp
into
loope
xlat
shl
clc
sub
in
in
iret
aad
loope
cmp
std
cli
xor
aam
jmp
inc
call
add
add
out
add
add
rcl
aad
aad
push
push
scas
idivl
sbb
push
add
mul
into
test
fcmovb
icebp
xchg
rolb
aad
repz
int
std
idivl
aam
cmp
sbb
jecxz
in
xchg
orl
repnz
hlt
fadd
xor
repz
lock
rcl
orl
fpatan
xchg
nop
test
in
xor
aaa
out
xor
cmp
jmp
lock
hlt
hlt
les
jecxz
lret
sti
repz
int
repz
cmp
out
cmp
shl
fdiv
enter
jmp
ffreep
mov
in
loopne
cmc
in
loop
iret
shl
shl
ljmp
fcmovu
enter
mov
xor
xor
in
cmc
loope
shl
call
out
out
enter
rcl
xor
lret
fcomi
fadds
ret
rol
hlt
fsubrp
clc
sti
decb
int3
lret
ret
aam
xor
dec
loopne
clc
inc
cld
decl
iret
out
ret
enter
ljmp
xlat
clc
rcl
shl
out
cli
fdivp
jecxz
leave
enter
enter
loop
std
in
cmc
shr
enter
shr
cld
cmp
hlt
out
xchg
cld
aas
jmp
idiv
cmp
in
sar
test
shr
stc
in
repnz
hlt
adc
aad
std
aad
lret
icebp
fneni(8087
imul
aad
xor
stc
fidivs
repnz
cmp
fadds
jmp
int
int3
xchg
repnz
jmp
in
cmp
idiv
addb
clc
lret
loop
out
ror
xchg
aam
in
jecxz
lock
out
ljmp
ret
xchg
mov
xlat
loop
in
icebp
rcll
iret
leave
cmp
out
cmp
shl
cld
test
fstp
testb
lret
lea
repz
aad
ljmp
loope
loope
sar
hlt
repz
enter
jmp
loopne
nop
in
aad
int3
sub
imul
out
out
cmp
jmp
jecxz
mov
out
jecxz
call
neg
aad
cmc
lret
out
into
call
out
loopne
div
xchg
std
xchg
mov
shll
in
icebp
fiadds
fdivrp
aam
int3
out
loope
sbb
icebp
enter
cmp
jmp
int
shl
fcmovne
in
stc
mov
mov
lock
ljmp
test
fucom
in
leave
repz
icebp
nop
xchg
filds
les
repnz
cmp
cmp
fxtract
mul
not
sar
addl
jecxz
xchg
test
lret
iret
in
imul
jmp
out
mul
call
test
mov
sub
call
lret
in
sar
lock
xchg
nop
fnsetpm(287
fcmovu
in
mul
lock
call
int
loope
fisttps
lea
fcmovne
popl
aad
cmp
idiv
loop
stc
cli
fiaddl
mov
out
mov
xchg
sti
aad
int3
cmp
clc
shl
cmp
mov
fisttpll
out
stc
cmp
in
clc
into
out
cmp
not
in
loopne
and
fdiv
loop
in
lock
int3
xchg
and
call
cmc
sti
fmulp
loop
cmp
ret
test
jmp
cmp
xor
leave
out
rcl
fcomp
ds
std
aam
mov
lret
std
mov
cmp
idivl
fmul
ds
int
cmc
idiv
out
in
stc
in
adcb
mov
cmp
iret
sti
das
out
xor
sarb
loope
mov
or
sar
mov
loope
sti
rol
xlat
repz
fnstsw
fsub
in
test
cmp
hlt
sti
call
test
loope
aas
call
cli
xor
iret
fsub
cmc
sarl
decl
fcomp
in
out
into
and
into
repnz
in
cmp
int
int3
repnz
xchg
xchg
xchg
call
shl
out
shr
lret
aas
ret
fdivrs
fsub
cmp
xchg
mov
mov
leave
out
mov
sub
repz
imul
in
out
cmp
loopne
clc
out
aad
in
std
jmp
faddl
xor
in
leave
cld
xor
fmul
xlat
xlat
shl
mov
and
in
test
xor
jne
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
lock
jl
or
jle
add
call
jmp
aad
xlat
cli
fiaddl
sti
cld
int3
inc
adcb
cmp
aas
ss
rcl
in
stc
jmp
jecxz
lret
leave
loop
aam
les
stc
shlb
leave
repz
cmp
iret
std
xor
std
in
mov
imul
out
into
xchg
hlt
out
int3
xor
rcr
cld
repnz
loop
shr
int3
mov
orl
lret
lret
aas
loopne
hlt
cmp
mov
test
out
fadd
aad
xlat
ror
sti
cmp
fsqrt
in
enter
mov
loope
lret
rorb
lret
cmc
fcmovnbe
cmc
leave
ds
mul
aad
xlat
out
xchg
in
int
repz
out
xor
loopne
into
into
cmp
ret
out
ret
test
ljmp
shl
jmp
cld
fucomip
cli
fiaddl
neg
loopne
loope
fcmove
xchg
repz
nop
in
shl
stc
call
sti
xlat
aad
ret
cmp
fdivp
in
mov
ror
rcl
jecxz
shlb
fcom
xorb
aam
xor
lret
loopne
xchg
in
lret
xchg
into
enter
shl
repnz
fucomp
loope
fdivr
flds
fucomi
pop
out
fcmovnbe
mov
cmc
ror
out
int3
rcl
call
fstp
loope
fcmovu
ffree
out
mov
xchg
loope
rcl
xor
cmp
cmp
rcr
cmc
enter
mov
fdiv
leave
mov
incl
iret
into
icebp
lret
jmp
sarb
neg
cmp
clc
vpand
mov
rcl
cmc
cli
stc
ror
fnclex
aam
out
out
std
sar
in
jmp
lea
cmc
into
in
fnsave
fstp
iret
and
fdivrl
aam
stc
cli
test
loope
fsubr
fcmovbe
lds
cmp
loopne
ret
rcr
idiv
lds
mov
in
out
rolb
xor
cmc
clc
out
lret
aas
cmp
int
fcmovb
aad
clc
aad
mov
in
mov
in
out
shl
xor
jmp
lret
stc
enter
jmp
hlt
aad
ljmp
mov
cmp
fidivrl
out
int
hlt
lock
mov
call
fstl
out
cmp
out
cmp
lret
jecxz
faddl
loope
adcl
mov
sub
lret
cmp
cli
cmp
aaa
xor
ret
mul
aad
sub
jmp
xchg
jecxz
xor
lret
loop
cmp
iret
ds
out
fndisi(8087
testl
ljmp
cmp
loopne
ds
lock
sti
idiv
out
xchg
loope
in
divl
cmp
neg
aad
iret
ss
fld
repnz
mov
addl
vpmaddwd
std
cmpb
hlt
xlat
movb
orb
jecxz
in
ss
fcomi
iret
iret
ss
into
repz
adc
call
repz
icebp
imul
out
in
cld
call
and
jecxz
int
nop
iret
in
call
into
imul
fcmovu
xor
sar
sar
cli
jecxz
call
jmp
repz
out
shl
out
fincstp
dec
lret
lret
ds
in
cmc
stc
test
loopne
loopne
int
lret
shr
fcmovnu
cmp
int3
sarb
loope
fcomip
cld
aam
mov
loopne
mov
loopne
in
xchg
rcr
shll
cld
neg
loopne
rcr
aam
ret
shr
sub
fxch
mov
xchg
nop
repz
jecxz
cmp
cmp
ss
aam
div
sti
fsubr
frstpm(287
stc
loop
lea
rolb
leave
icebp
mul
into
out
loopne
fdivrp
repz
ret
xchg
neg
mov
lock
loop
xchg
hlt
repz
cmp
cmc
aaa
out
aaa
int
out
ror
sarb
test
fucomi
cmp
lret
int3
out
xchg
jmp
lock
stc
out
cmp
xorl
cli
sub
int
into
jecxz
xor
fnstenv
leave
lret
and
aad
jmp
fscale
and
iret
clc
aad
enter
std
dec
loop
aad
rcl
cmp
fiadds
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
nopl
add
add
testl
xor
out
xor
fdecstp
xor
rolb
shr
loope
mov
xchg
leave
xchg
jecxz
in
les
enter
cmp
loopne
testb
out
jmp
iret
out
out
test
cld
jmp
cmp
cmp
lock
cli
loopne
aad
fcmovnb
fsubrp
in
orb
ljmp
out
cmp
sbb
cld
sar
jmp
mov
sbb
clc
loop
in
aam
shr
out
ss
std
clc
cmp
cmp
ret
in
rcr
orl
int
mov
divb
stc
ror
in
imul
out
lock
sti
ds
loop
filds
leave
shl
test
rcr
out
not
cli
sti
test
out
cld
dec
fildl
repz
xor
stc
mul
stc
ror
fcomi
in
xchg
cmp
ret
in
in
ror
int
mov
cmp
int3
fdivp
iret
fdivr
in
faddp
aad
cld
rol
loop
ret
cli
into
iret
jmp
aad
in
xor
cmp
lock
int3
aas
clc
jmp
xlat
test
std
ret
cld
into
lret
out
adc
fldcw
ror
aad
idivl
cmp
test
not
loope
cld
cmp
fsub
ljmp
aad
out
cmc
cmp
lret
out
clc
rcl
sti
aas
fadd
shr
leave
jmp
in
mov
mov
out
cmc
in
fdivr
ss
ljmp
shr
mov
cli
out
in
mov
out
shr
idiv
out
leave
iret
call
and
loopne
mov
fcmove
cli
out
icebp
shl
ffreep
cmp
sti
sti
fstp
out
in
int
adc
repnz
cld
mov
orl
repz
clc
xor
sti
fsubr
cmp
lock
shl
imul
loop
out
out
mov
fsubrp
out
mov
sub
lret
not
xor
fcom
fdivr
rcr
loopne
test
xor
in
out
shr
cmp
call
cmp
aam
aam
xor
out
clc
out
clc
out
fcmovnbe
cmc
mov
les
xor
test
in
icebp
sbb
cmp
lret
cmc
out
das
xor
in
out
out
fld
cmp
rolb
ret
iret
repnz
pause
divl
xor
hlt
div
hlt
std
in
cmp
rcr
aad
adc
sbb
lock
xacquire
xor
int
aaa
fmul
repz
in
rcr
aam
in
ds
xchg
out
call
adcl
cli
cmp
div
aas
aas
clc
aad
mov
xchg
ror
in
out
jmp
enter
jmp
dec
iret
jecxz
test
clc
loope
jmp
out
fiadds
icebp
divb
out
fdivrl
in
fdiv
repnz
shl
cmp
fmuls
cld
in
in
jecxz
jmp
out
jmp
int3
aam
repnz
ret
in
xlat
aas
and
fisttps
lock
lret
ljmp
aad
repnz
fcomi
clc
repz
fld
call
addl
lret
cli
cmp
cmc
jecxz
mov
decl
fmul
loope
loopne
in
jmp
test
jmp
sti
addl
ret
fdivrp
rolb
rcr
ljmp
cmp
test
aas
ret
int
int3
rorl
iret
jecxz
icebp
out
fdivrp
clc
cmp
cli
cmp
fsubp
std
clc
test
in
mul
loopne
call
call
out
call
fcmovu
out
xlat
int3
ret
repnz
ljmp
fdivr
rol
xchg
nop
into
int
jecxz
int3
xor
aad
xor
in
mov
call
iret
into
xchg
rcl
cmp
cmp
out
xor
in
cmp
xchg
in
mov
repz
icebp
out
out
call
cmp
shl
repnz
out
std
test
out
jecxz
lret
into
xor
rcr
aas
iret
stc
fldln2
sbb
xlat
sbb
ror
out
test
lock
icebp
ror
aam
xor
in
repz
lret
rol
jmp
xor
ss
out
in
in
call
cmp
test
clc
loopne
call
loope
mov
mov
mov
shl
ret
repz
cmp
cmp
idiv
add
jmp
lret
into
fst
fstp
bound
sbb
jle
add
aas
aam
stc
hlt
ljmp
out
sub
aad
sub
ss
repz
les
jmp
mov
fdivr
cli
fisttpl
aad
lock
lock
lret
rol
test
jecxz
fldln2
incb
xchg
shr
stc
ror
jmp
cmp
fdivrp
out
iret
xor
test
mov
cmc
xchg
loopne
cmp
push
idivl
call
in
out
nop
out
xchg
in
mov
xor
in
iret
rol
lock
cmp
les
in
ljmp
rcll
into
into
cmp
jmp
rolb
lret
push
sar
loopne
xchg
in
aaa
into
stc
aam
lret
icebp
cmp
aad
repz
mov
jmp
xchg
call
out
rcr
int
mul
fdivp
ret
repnz
out
flds
ss
enter
dec
in
stc
std
cmp
into
aam
cmp
jmp
shr
fstl
hlt
cmc
iret
fcmove
fnstsw
cli
fdivrp
icebp
loope
enter
test
mov
iret
xor
fdivrp
xlat
fadd
aad
std
rolb
fucom
int
cli
loop
nop
xchg
repnz
aam
clc
fcomip
fcmove
fildl
clc
or
ret
into
xchg
repnz
cmp
out
call
ds
sar
mul
into
test
enter
out
ljmp
into
fdivrl
loopne
fcmovnbe
ffree
repz
fdivr
cmp
mov
mov
cmc
fbstp
das
fsubr
icebp
jmp
and
xchg
filds
fcmovnu
in
xchg
jmp
shr
cmp
div
int
iret
in
out
stc
aad
mov
out
mov
jecxz
jmp
xchg
enter
ret
cmp
into
in
in
aas
in
lret
aam
orl
iret
loope
iret
loope
clc
stc
xor
lock
in
sarb
xor
in
xlat
clc
loope
mov
std
sar
int
lret
jmp
fcmovbe
cmp
clc
add
sti
call
out
loop
jecxz
ljmp
aam
fsub
xor
cmp
fdivr
xchg
test
jmp
out
mov
lea
in
lds
lret
shl
lock
repnz
xor
rolb
sti
int3
shl
aad
ss
neg
fcmovnbe
call
shl
fyl2x
lret
xlat
test
cmp
sub
std
cld
hlt
fcmovne
xor
cmpb
not
fmull
out
repz
xor
sti
rol
lds
fdivr
lret
into
std
rolb
ffreep
addb
xor
xor
in
cmp
ss
adc
in
bnd
shr
leave
out
rolb
adc
shr
repz
into
lret
aad
aam
sti
loope
out
leave
cld
fdivrp
int
sti
mov
xchg
out
in
leave
hlt
in
out
aad
aas
int3
fdivr
roll
cld
lret
shl
in
jmp
fucomp
sub
xor
xor
repnz
cmp
shl
cli
out
fdivrs
rol
lret
int
fucomp
stc
icebp
into
xchg
test
xor
xlat
xor
xor
in
sti
std
loop
clc
jecxz
repz
out
cld
jecxz
adcb
shr
ljmp
sti
int
rol
mov
int
loope
lret
into
leave
shr
cmp
ljmp
stc
sti
clc
lock
std
std
test
xlat
in
loope
xchg
int
call
xor
out
in
jmp
xor
fcmovb
leave
fcom
int3
jecxz
sbb
roll
out
iret
shr
lret
into
fdivr
aaa
iret
test
jmp
nop
ret
or
xor
lock
hlt
fsin
cmp
ret
shl
out
loop
mov
jmp
frstpm(287
cmc
xchg
jmp
vpminsw
cmc
ljmp
clc
sar
rol
leave
in
mov
nop
xchg
xlat
xor
ret
hlt
cmp
cld
fsubrp
repnz
adc
adc
sub
loopne
ror
xlat
cmp
sti
sti
in
fdivrl
bnd
mov
shr
test
leave
mov
fdivr
fdivp
cmc
int3
aas
into
test
rol
stc
xlat
leave
rorb
mov
out
push
jmp
int
iret
rcl
aad
inc
xor
hlt
pop
push
pop
add
add
enter
lock
in
in
loope
filds
ljmp
aad
sub
imul
lock
rcl
in
int
adc
ret
std
int3
call
out
repnz
cli
xor
clc
shr
cmp
fcom
shl
cmc
clc
shl
enter
cld
leave
call
out
shll
jmp
ror
ror
aaa
sti
ret
int
cmc
fiaddl
test
in
fsubp
lret
xchg
fidivrl
out
out
int
int3
aam
aad
test
ret
mov
lds
and
out
out
in
sti
mul
clc
cmp
loope
aad
test
mov
in
rcr
addl
cmp
out
call
cld
lock
neg
clc
in
int
rorb
aam
xor
in
sti
out
cld
fxch
stc
cmp
fcmovnbe
clc
cld
cld
repz
lret
sti
out
lock
call
shl
cmp
lret
fdiv
rolb
out
xlat
cld
neg
in
roll
icebp
jecxz
hlt
xor
cmc
leave
xlat
lret
repz
test
mov
loopne
mov
lock
repnz
jmp
rcl
int
aas
aas
fdivrs
sar
jmp
iret
mov
xor
out
lret
lock
cmp
loopne
out
incb
out
rcr
repnz
lret
fcomp
fsub
cmc
cli
rcr
ror
cld
out
iret
sti
loop
int
lea
clc
leave
cmp
std
aaa
lock
sar
out
test
mov
out
mov
stc
cmc
ljmp
loopne
cmc
test
lea
ljmp
repz
out
cli
idiv
cld
ret
jmp
nop
in
into
decb
aaa
jmp
div
cmp
stc
icebp
jmp
int
out
icebp
xchg
rolb
icebp
in
shl
adc
in
cmp
cmc
mov
nop
int
cmc
in
rcl
cmp
cli
shl
repz
into
icebp
in
aaa
fdivr
repz
in
fmull
xchg
xor
call
lock
ds
aam
icebp
clc
test
sti
ret
cld
jmp
dec
test
xchg
mov
fdivr
iret
clc
out
cmp
jecxz
into
sarl
stc
jecxz
cli
iret
test
adc
xor
in
xor
out
cli
shl
ror
cli
repz
dec
decl
test
in
in
ljmp
cld
cmp
loope
into
lock
in
addl
jecxz
sarl
shl
stc
jmp
loopne
fdiv
in
clc
rcr
lret
jmp
in
iret
incb
das
ss
ss
ljmp
aas
repz
jecxz
cmp
fcoml
xchg
fsub
repz
in
aad
leave
cli
lock
loop
ret
filds
mov
repz
out
mov
icebp
imul
fadd
fdivs
lret
fdiv
repz
lock
fucomip
xlat
fstp
imul
stc
mov
mov
lret
xchg
ljmp
jmp
enter
icebp
ds
aad
mov
call
loop
repz
icebp
fxch
lock
stc
sti
cmp
jmp
repz
pushl
stc
lock
cmp
fcmovnbe
fstpt
loope
jecxz
ret
fcomip
test
iret
out
int3
mov
fimuls
xor
aaa
fsincos
lret
lock
icebp
xchg
xlat
fucomp
xchg
lock
xchg
loopne
nop
aad
lret
div
div
lock
fcom
cmp
call
loopne
xchg
test
in
fdivr
lock
lock
clc
repz
std
clc
testl
test
push
loop
xor
fcmovne
std
fyl2xp1
lret
lock
adc
out
lret
clc
call
icebp
fucomip
aam
lret
fsubr
cli
cmp
std
neg
int3
ret
in
loopne
dec
xchg
lock
out
fdivrp
loop
leave
fld
hlt
ss
cmc
cmp
loopne
fdivr
neg
fucomi
fld
fcomp
mov
out
loop
xchg
stc
ffree
xlat
out
loopne
xor
cmc
cmp
ljmp
fcomi
decl
xor
sti
shl
lock
rcr
add
frstpm(287
clc
aad
jmp
in
out
nop
loop
loope
in
clc
cmp
icebp
in
rcr
cld
repz
cli
fcmovb
repnz
call
incl
jmp
mov
fcmovnu
or
sub
iret
cltd
call
push
add
loop
call
repz
in
dec
aam
ljmp
sti
roll
fnstsw
out
ljmp
xor
out
fdivs
push
stc
in
ss
not
lds
xchg
fcmovu
in
icebp
mov
ljmp
lock
jmp
aas
hlt
aad
mov
mov
into
cld
xchg
ljmp
int
lret
aad
shlb
iret
shl
ret
test
fcmovnb
fdivr
std
rorb
xbegin
lret
call
cmc
fdivrl
aam
xor
mov
in
fldl
imul
xor
in
fxch
cmp
iret
xchg
test
orb
hlt
loope
hlt
xor
jmp
xlat
into
ds
sti
out
inc
mov
xlat
out
cld
xchg
in
xchg
jecxz
aaa
hlt
clc
int
ds
shl
std
int
cmc
out
mov
rolb
in
out
loope
std
mov
icebp
ret
sarb
repnz
cld
rcl
clc
sti
fsubp
rcl
xor
loop
fdivrp
lock
fucomip
repnz
xor
iret
cli
cmc
xor
cli
ss
fsub
cmp
mov
ficoml
loope
ljmp
enter
repnz
in
cmc
orb
out
repnz
jmp
fxch
shlb
shr
std
in
iret
rolb
fscale
orb
lret
mov
xor
aad
clc
neg
cld
cld
cld
sti
shl
fdivr
sbb
iret
in
jecxz
mov
xor
out
shr
fcmovnbe
fadds
test
leave
mov
les
out
out
nop
int
jmp
int
repnz
repnz
rol
lock
xchg
out
lret
out
hlt
out
iret
shr
imul
xor
jmp
xlat
or
jecxz
mov
hlt
xchg
std
mov
lea
lock
xor
aam
ret
std
out
hlt
icebp
enter
std
faddl
loope
hlt
enter
lret
stc
out
sar
test
fsubrp
rol
call
cmp
mov
les
out
aad
fst
cld
leave
lret
cld
rcl
shl
in
test
fmul
test
loopne
iret
sti
iret
fmul
into
cmp
ss
fildl
std
stc
out
call
in
loopne
repnz
ror
in
stc
icebp
sarb
cmp
cli
hlt
aam
mov
in
xchg
icebp
jmp
loopne
out
xor
in
mul
jmp
fiaddl
clc
aad
cli
xchg
mov
jecxz
in
jmp
aam
fdivrs
xchg
or
into
imul
fcom
ljmp
loope,pt
lock
enter
ljmp
int
ror
aam
xor
idiv
iret
out
fstp
lds
fsubr
mov
aad
in
xor
repz
repz
call
enter
xchg
lea
cmc
vpmulhw
hlt
enter
loopne
fsubp
loope
fcmovbe
nop
lret
iret
mov
fcmovbe
hlt
iret
in
cmp
cmp
in
fpatan
inc
jecxz
cli
cmc
xchg
fucomip
xchg
leave
lds
in
repz
cmp
aam
xor
aaa
sbb
jecxz
movl
nop
mov
icebp
xor
xor
iret
cmc
and
cmp
test
dec
sti
out
clc
jmp
xchg
call
in
in
xor
ds
loopne
out
fcmovnu
std
ffree
cmc
sbb
clc
xchg
aad
in
lock
out
leave
hlt
fdivr
xor
icebp
out
fcmove
cli
fstp
sar
mov
jmp
fxch
sti
into
repnz
repz
fcomi
mov
fst
mov
test
in
into
xor
aam
rcl
in
ss
fadds
rol
ret
ret
enter
call
lret
out
rcr
iret
ljmp
shl
shl
mov
mul
jmp
xchg
lea
ret
rcr
aas
rcr
cmp
jecxz
cmp
jmp
into
test
orl
leave
iret
cmp
cmp
aad
repnz
fxam
add
add
mov
ljmp
shl
clc
cld
fdivrl
ljmp
cmc
loope
out
repz
leave
iret
in
fnop
std
in
repnz
hlt
iret
ret
idivl
iret
aad
cld
idiv
in
cmpl
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
stos
aaa
int
and
jle
add
and
fsub
lea
call
xor
in
int
out
sar
cmp
loopne
mov
div
in
xlat
jecxz
call
icebp
lret
fcmovne
shlb
test
cli
test
out
loope
rcl
repnz
in
in
lret
xor
fcomi
fcmove
lock
lret
cli
cmc
fstp
loop
cli
orl
out
xor
enter
idivb
sti
cmp
test
sarl
icebp
shr
jecxz
xchg
in
addl
aad
aaa
sti
shl
rolb
xchg
dec
shr
shl
xor
jmp
stc
int3
cmp
cmc
hlt
out
ret
cli
mov
fstl
fdivr
int3
repz
enter
shl
out
test
fcmovb
rcl
fucompp
cli
mov
into
aas
jmp
xor
fidivrl
cli
ret
aad
out
enter
fildl
xchg
cs
xor
icebp
out
lock
ret
clc
aas
test
out
enter
out
icebp
fiadds
shlb
not
neg
ret
stc
ds
out
fcmovb
out
std
call
enter
xchg
loop
leave
fcmovnu
ss
int
aaa
cmp
iret
fst
sti
movl
and
in
int
aad
cld
std
cmp
in
fucomip
loop
aad
jmp
mov
test
cmp
cli
ds
out
in
test
mul
mov
mov
loopne
out
in
ror
test
sub
iret
aam
and
cmc
inc
ret
cld
fsubp
out
into
repz
int
int
jmp
iret
cli
cld
addb
fsub
xlat
lea
mov
int
out
xor
in
fdivrs
aaa
ds
out
ds
jecxz
loopne
testb
xchg
aam
stc
xlat
aaa
hlt
into
fucomp
iret
test
cld
call
aas
enter
rorl
icebp
neg
rol
icebp
hlt
sti
sbb
aad
div
test
sub
lret
xchg
xchg
xchg
xlat
clc
xor
out
loope
add
shr
stc
clc
int3
std
out
fadd
loopne
jmp
xchg
ret
cmp
jmp
out
jmp
adc
loope
cmc
jmp
loope
fstp
test
aaa
bnd
cmp
rolb
jecxz
fsubp
mov
jmp
in
std
aam
lret
sti
test
in
fildl
aad
lret
adcl
sar
int3
ljmp
xchg
call
loope
clc
fcomip
fldl
ret
cli
cli
enter
push
repz
fcomi
dec
ds
or
jmp
shlb
fsubr
xor
iret
aad
cmc
repnz
fst
les
ljmp
clc
out
lret
hlt
stc
push
inc
cmp
cld
fst
stc
fld
test
in
in
int3
in
in
cmp
add
repz
fxtract
cmp
out
fucomp
fcmove
test
into
out
aam
ret
fcomi
out
repnz
aas
xor
out
ret
rcl
in
mov
lret
in
sub
out
cli
jecxz
cmp
int3
fnop
shl
xchg
decl
rcll
xor
fdivs
fst
sti
roll
repnz
out
into
call
lret
xor
cli
aaa
cmp
icebp
loope
shl
imul
call
rol
enter
test
loope
sti
xor
out
iret
sti
icebp
loope
test
ret
out
out
cli
fisttpl
stc
iret
sti
out
out
cmp
cmc
out
shl
fdivrs
jecxz
hlt
test
leave
nop
fsubrp
lock
jecxz
xlat
xor
lret
enter
aas
aam
sarb
testb
incl
xchg
into
xor
out
loopne
f2xm1
jmp
clc
in
mov
enter
decb
int3
in
fxch
rol
fdiv
cmc
hlt
hlt
ret
repnz
loope
mov
int3
int
xchg
repz
subb
in
stc
out
cld
sti
lret
cmp
out
fiaddl
shr
xchg
repz
stc
cmp
leave
ds
aas
and
xor
int3
fildl
mov
imul
cld
movl
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
stc
lock
lret
fucom
cmp
enter
out
out
test
shl
out
rol
cli
lret
test
rcr
fmul
mov
cld
fsub
fiaddl
aad
xor
cmp
int
int
fldl
mov
rcr
loope
xchg
xchg
enter
int
in
in
fdivrs
fadd
loope
aas
out
stc
mov
hlt
fisttps
jmp
cs
rcl
in
ror
inc
rcr
lock
cmp
ficoml
jmp
int3
int3
out
jmp
push
lock
in
xabort
lea
xchg
ret
lock
out
repz
call
fchs
cmp
test
lock
jmp
lock
xchg
jecxz
rol
jmp
int3
ds
ljmp
lds
fdivrp
fimuls
aaa
clc
idiv
in
ss
fdiv
aaa
rol
fcom
cld
in
mov
fsub
xchg
int3
xchg
loop
in
out
in
cmp
sti
clc
iret
shl
int3
std
fucom
loopne
loop
fildl
in
nop
shr
cmp
aad
sar
ss
ffree
cld
incl
in
fcomp
xchg
in
xor
ss
cli
icebp
hlt
cmpb
fildl
in
adcb
shr
cmp
leave
std
aaa
repnz
div
ds
rolb
fxch
lock
stc
xor
bnd
stc
mul
fcom
sti
xchg
xchg
mov
sti
orb
in
jmp
cmp
ds
and
xchg
jmp
jecxz
lea
xor
hlt
clc
cmp
stc
cmp
loope
cmc
and
out
aas
jmp
mov
out
xor
not
jecxz
int
fdivr
repnz
cmc
fiaddl
xchg
lock
stc
sub
repnz
repz
ret
neg
loop
jmp
jecxz
jecxz
int3
aad
rol
aaa
into
fcomp
call
not
fcmovnb
cmc
fcmovnb
aam
fsubp
mov
adc
in
cmp
rcl
std
leave
imul
aas
cmc
cmp
faddl
sub
xchg
mov
aad
cmp
int3
cmp
sub
sti
xlat
orb
out
aam
jecxz
int3
sti
cs
aam
icebp
xlat
hlt
enter
imul
xchg
fsub
loopne
faddp
xor
in
idivl
dec
lret
shl
clc
loop
enter
jmp
mov
nop
xchg
shl
shl
int3
clc
enter
sti
out
cmp
repz
xchg
int
xchg
in
enter
repz
aas
stc
xor
fucom
test
loop
xchg
out
in
loope
in
xor
idivb
sarb
cli
sar
sbb
clc
jmp
repnz
rcr
xor
aaa
xlat
int3
repz
into
ds
xlat
mov
ljmp
clc
call
lock
lret
repnz
fsin
nop
repnz
xchg
xor
lret
cmc
icebp
dec
cmp
fcmovb
loop
aad
in
testl
xor
test
fcomip
in
lock
shl
loope
xchg
icebp
xchg
iret
decl
aaa
ss
out
out
div
cmp
ret
aad
fdiv
xlat
sar
decl
xchg
call
fcmovbe
in
push
fcmovbe
in
idiv
repz
lret
jmp
out
lret
loopne
xor
loopne
leave
xlat
int
ds
fiadds
and
rcl
xor
ret
cs
aad
into
cmc
aas
shl
stc
test
in
lret
shl
dec
divl
in
fdivs
idiv
out
cmp
jmp
rol
out
loopne
cmc
jecxz
ljmp
repz
test
shl
cmp
sarb
cmp
rol
iret
shl
ret
fisttpl
out
in
repz
sar
fcmovu
icebp
in
iret
jmp
loopne
int3
les
out
and
test
clc
ret
int
orl
cmpb
ds
mov
ret
xor
loopne
rorb
xor
into
shl
cmp
loope
out
fdivr
std
loopne
neg
loopne
mov
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
bound
jle
add
in
call
jecxz
fnstenv
xor
out
repz
aas
ffree
xchg
xchg
iret
loop
rorl
lock
cli
lds
lret
rcr
inc
fdivrl
call
fmull
loope
lock
ror
int3
jmp
f2xm1
out
enter
jecxz
mov
ret
call
in
xor
aaa
aad
enter
aam
test
loopne
repnz
testl
xchg
xor
int3
ds
loope
hlt
test
sbb
leave
fcmovnbe
fst
cmp
jecxz
addl
ret
call
ffreep
out
stc
in
fimull
movb
loopne
cmp
out
loop
jmp
xor
idiv
stc
aam
cld
call
int
in
jmp
out
mul
cmp
aad
hlt
rcl
fdivrp
ret
fsub
clc
loop
std
mov
jmp
cs
std
ljmp
ds
mov
mov
decl
loop
lock
fdiv
repnz
fadd
testl
xchg
out
mov
rol
cmp
fucomi
lret
in
loope
ret
aas
hlt
cli
clc
out
fld
fadd
xchg
xchg
shl
hlt
xor
aad
xlat
sar
fsub
hlt
ror
cld
sar
cli
fadd
fadd
fmul
in
sti
xchg
xchg
cmc
das
aad
in
aaa
clc
cmp
lret
int
in
loopne
fucomi
ret
in
clc
ror
sub
aad
in
test
in
iret
sti
addb
hlt
xlat
clc
fcmovnu
lds
in
jmp
cmp
into
sarl
cmp
test
xchg
in
call
fisttps
in
lock
fdivl
fnsetpm(287
fdiv
stc
rorl
clc
popl
xchg
fcmovne
lock
cld
in
into
aad
sti
mov
cmp
leave
in
decb
int
stc
int
cli
ds
cld
icebp
ret
fildl
in
int
sti
mov
xchg
and
out
xor
shr
sti
out
xor
rol
sbb
fiadds
lret
out
xchg
sbb
fnstsw
aad
xor
in
lret
repnz
fcmovbe
fmulp
shl
xchg
cli
mov
jecxz
xor
shr
call
aam
out
in
adc
ret
shl
jmp
into
jecxz
sti
out
fnstsw
ss
neg
clc
enter
std
repnz
aas
fcomi
clc
clc
aam
out
int
xchg
vcvtdq2pd
xor
cmp
xor
icebp
cli
orl
in
loop
xacquire
xor
cmp
cmp
aad
enter
addl
icebp
lock
jecxz
int
cmp
cmp
cmp
cli
sarb
clc
jmp
sub
in
xchg
xchg
hlt
fxch
rcr
repnz
lret
repnz
hlt
enter
fcomp
ljmp
int
lock
in
fcmovnu
jmp
cli
sti
jmp
iret
ret
fldl
mov
cli
add
repz
stc
std
repz
out
int
into
incl
jecxz
loopne
jecxz
addl
sarb
enter
rcl
cmp
out
decb
clc
test
into
sti
cmc
int
repnz
lret
cmp
aas
jmp
ret
shl
rcr
jmp
in
lock
mov
jecxz
clc
out
iret
out
out
int
cmp
test
cmp
aad
fcmovnbe
xlat
cld
movl
ret
icebp
sti
lock
neg
sub
repnz
stc
loopne
test
out
xchg
jmp
sub
repz
xlat
xor
cmp
ret
ret
ffree
fsub
mov
adc
loop
std
xchg
iret
in
ret
fstpt
stc
ss
cmc
into
int
cmp
cmc
loopne
xchg
ror
ffreep
nop
xchg
fucomip
fcom
aaa
in
lds
int
in
xlat
test
sti
repnz
jecxz
stc
loopne
loop
fstl
in
shl
sti
xlat
aad
lock
ret
xlat
vshufps
iret
leave
loope
sti
ror
das
cli
fst
cmpl
rcr
fcmovbe
out
out
in
sti
jmp
xchg
xlat
clc
cmp
lret
neg
aas
aam
test
in
fsubr
mov
jmp
rol
ret
xor
iret
fmulp
lock
into
ds
repnz
mov
xor
jmp
into
int
xlat
das
repnz
push
das
add
add
cli
test
in
cld
orl
les
idiv
hlt
test
aad
in
ljmp
mov
orl
fdiv
lret
fdivr
add
fstp
in
out
in
test
stc
and
nop
in
out
xor
divl
ror
rcr
stc
xlat
stc
ret
fdiv
out
fldl
fucomi
xchg
loop
test
test
lock
in
cmc
frndint
fldl2e
jmp
test
rcl
out
mov
sbb
icebp
shl
out
xor
loope
fcom
aad
fidivrl
fcmovnbe
lock
xchg
in
mov
loop
fisttpll
call
xor
out
aaa
fiadds
xchg
jmp
and
out
out
jecxz
lret
and
xor
enter
loope
fdecstp
rcl
aas
loopne
fdivr
ret
cld
in
out
mov
xlat
sti
sar
sbb
loopne
lock
call
cli
mov
out
call
fdivr
cmc
cmp
stc
jecxz
fscale
stc
out
addl
fprem1
icebp
jmp
std
rol
lock
sbb
mov
loope
orl
call
jecxz
addl
mov
shlb
cmp
jmp
cmp
repnz
dec
in
out
jmp
xchg
stc
xor
cld
lock
aam
sti
fst
jecxz
out
ret
mov
fcmovu
call
lea
aad
xor
enter
out
jecxz
rcr
fidivrs
movb
pop
roll
in
div
sar
fucomi
int
cmp
lock
hlt
xchg
cli
cld
cli
mov
xchg
clc
ret
stc
jmp
int
out
cmp
out
cmp
rcl
jecxz
out
cli
jmp
loopne
out
shlb
lret
in
cmp
cmpb
cmp
xchg
testl
rcr
aad
xor
lret
repnz
fidivrs
ljmp
aam
mov
cld
f2xm1
mov
in
ror
aad
ror
fstpt
clc
fistpll
stc
ret
cli
lret
iret
cld
mov
jmp
jmp
ret
rcl
dec
lock
cmp
lds
in
sbb
shl
imul
stc
out
lock
lock
fsubr
divl
sar
leave
loopne
leave
imul
ret
fsub
mov
ror
xor
cmc
repnz
into
int
std
test
std
jmp
iret
xchg
jecxz
xchg
xor
hlt
ss
fmul
out
fstpt
cmp
xlat
clc
call
lret
out
std
test
icebp
fildll
test
out
in
sar
loope
cmp
hlt
mov
cmc
cmc
lret
out
fucomi
out
test
mov
shl
call
leave
cmc
shl
loop
shr
fxam
enter
in
std
repnz
in
iret
sub
cld
clc
icebp
rol
ds
inc
faddp
aam
fcmovnb
dec
xchg
jmp
xchg
jmp
in
cmp
rolb
out
idiv
clc
leave
ret
ret
in
std
fsubr
clc
xchg
xchg
ljmp
xor
cmc
aaa
out
ror
std
in
hlt
fndisi(8087
ret
xchg
fisttps
xor
cmp
cmc
shll
bnd
lock
test
xchg
hlt
out
aad
nop
fmuls
repz
cli
into
call
loop
xlat
stc
in
cli
loope
int
fmul
nop
iret
test
out
lock
cmp
leave
cmp
in
shr
ret
aas
loope
xchg
mov
rcl
out
out
in
stc
in
sti
fcomi
cmp
out
add
test
leave
out
xchg
call
sub
fmul
ror
vpsrlq
hlt
iret
sarl
cmp
fdiv
loopne
lret
jmp
jmp
loop
rcll
cmp
xlat
aad
fcmovnbe
xor
shl
std
div
fsubr
fmul
leave
xchg
call
out
xor
iret
fucomip
out
lock
aad
xor
fcmovnu
cld
cmc
lds
mov
in
fdivrs
test
fnstsw
fcmovu
rorb
lret
loop
call
out
cmp
rcr
fmul
cmp
lock
aam
repnz
loop
in
in
in
orb
ljmp
stc
cmp
aam
cmp
ftst
call
sti
fmuls
xchg
repz
ror
sarl
stc
cmp
faddl
ret
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
aas
ljmp
adc
test
loope
in
cmc
in
jmp
lock
out
aas
loope
clc
loop
mov
xchg
mov
jmp
call
ret
int3
int3
out
out
shl
repz
in
fsubp
loop
call
jmp
ret
repnz
aad
lock
cmp
cli
std
mov
xchg
out
leave
jecxz
icebp
repnz
repnz
aam
xor
out
adc
aad
std
repz
cmp
jmp
xchg
loop
cmp
lret
loopne
sbb
stc
lret
test
dec
shl
iret
loop
sar
lret
fdiv
idiv
int3
out
f2xm1
sti
vpmaddwd
enter
mov
fmull
into
fincstp
das
into
cmp
aad
xor
enter
decb
or
divb
loopne
in
repnz
ss
fcomi
cmp
fadds
jmp
nop
loopne
xor
repz
fcom
aad
sub
sub
into
mov
icebp
repz
aaa
rol
xor
not
filds
hlt
stc
cmp
mov
std
in
cli
fst
in
xor
lret
leave
stc
cli
into
aad
ret
cli
ds
jecxz
loop
loop
test
jmp
fldpi
lret
cli
fyl2x
std
sar
repnz
clc
stc
mov
jmp
faddl
loope
xor
in
clc
into
in
iret
lock
stc
sarl
ftst
cld
loop
in
cld
sub
decl
sarb
xlat
cmp
shr
rcl
sarb
ret
loope
clc
in
ret
mov
fcomip
in
cmc
cmp
cld
repz
hlt
repnz
ljmp
enter
rcl
ss
in
into
into
leave
cmp
xor
clc
out
lock
repnz
lret
rcll
xlat
shlb
out
icebp
leave
int3
lret
addb
ror
mul
leave
mov
out
xchg
shl
hlt
int
xor
cmp
cli
xlat
sar
xlat
cmp
out
sbb
decl
pushl
ret
cmp
lret
fcmovnbe
sar
div
incl
stc
int3
into
ror
in
decb
fyl2xp1
iret
shl
rcr
clc
fcmovu
test
in
testl
into
out
decb
ret
xor
ror
cmp
test
sti
lret
lret
in
xor
xchg
xchg
stc
out
shr
stc
int
lret
cmp
cmp
jmp
test
or
adc
notb
jecxz
fcmovu
idiv
cmp
sti
roll
loope
call
lret
xchg
fucomp
xor
xor
aaa
enter
in
jmp
cli
loopne
mov
jmp
in
icebp
in
out
shl
xchg
loopne
xor
lret
lds
xor
cli
not
in
rol
testb
test
lock
repnz
loop
call
ss
cmp
ror
fyl2x
xchg
xor
sub
rorl
leave
sub
enter
cmc
shl
sar
out
cmp
xlat
fmuls
cmp
sti
out
mov
xor
icebp
loopne
cmp
rcl
out
and
xchg
in
fimull
lret
xor
fidivrs
cld
int
ffreep
in
shl
out
imul
jecxz
loop
ljmp
lock
lret
iret
fidivrs
jmp
test
faddp
xlat
std
lret
fsubrp
and
shr
sub
icebp
lds
int
int3
testl
cli
mov
xchg
xlat
shl
xor
aad
int3
cmp
jecxz
ljmp
jecxz
out
mov
repz
test
into
rcl
cmp
in
out
cli
mov
clc
lock
cs
into
aad
aad
cld
in
ret
out
cmp
mov
leave
cld
nop
int3
jmp
xchg
in
enter
stc
push
in
int3
cmc
aam
test
aas
rol
loope
les
sti
out
call
cmp
in
ds
in
into
jecxz
icebp
cli
clc
shl
sar
out
fdiv
sbb
xchg
xchg
mul
clc
cli
into
cmc
in
or
sbb
aad
aam
leave
ret
aam
loopne
addl
aad
cmp
xlat
clc
rcr
xlat
out
aam
int
fmuls
inc
mov
jmp
aam
ror
fcomp
aam
aas
idivb
data16
cmp
jle
add
rolb
neg
in
imul
not
ret
fmul
not
neg
in
fimull
sub
lret
std
stc
ljmp
ret
sti
loope
lea
repz
shlb
aaa
cmp
cmp
clc
xlat
ljmp
rorb
rol
out
in
orl
fsubrp
sti
rcl
cmp
roll
loopne
decb
test
xchg
int3
xlat
ljmp
cli
into
jmp
in
aad
rcr
jmp
nop
xchg
xlat
out
in
cmp
int3
out
int
cmp
test
ret
out
loop,pt
out
enter
aam
ffreep
xor
lret
xor
cli
int3
frndint
cmp
out
cmp
aad
enter
xchg
icebp
das
into
xor
shl
jmp
ds
repz
in
nop
test
test
int3
repnz
xor
ss
cmp
fldl
stc
not
testl
xchg
int3
repnz
cld
aam
int3
test
rcl
mov
loopne
fistl
vpmulhw
ror
enter
cmp
std
hlt
sar
aas
test
cli
addl
pop
lret
xor
not
rcr
aas
loop
rolb
in
fmull
call
cli
lret
out
out
std
test
aam
mov
fisttpll
decl
aad
out
jecxz
cli
cmp
push
not
loopne
out
ljmp
mov
lret
cmc
into
std
icebp
sar
cli
rcl
loop
out
in
stc
cld
sti
fcmovnu
hlt
mov
icebp
ret
shll
cld
int
cld
aas
adc
fcmove
test
loope
jmp
icebp
hlt
xor
into
call
ljmp
stc
repnz
in
call
out
repz
sti
lret
cmp
cmp
std
in
call
in
xchg
cmc
nop
sub
sub
iret
lret
cmp
xor
int3
sbb
fcomip
in
cli
fisttpll
xchg
loope
xor
iret
cmc
xor
cmp
sbb
not
mov
in
popl
cmc
loop
ss
cmc
leave
aad
clc
cmpb
dec
mov
loop
in
xchg
xchg
mov
imul
ss
out
in
neg
iret
fcomp
test
hlt
mov
mov
int3
mov
rorl
enter
sar
or
sarb
loope
loopne
or
jecxz
icebp
iret
shl
in
div
sti
xor
repnz
ds
cmp
test
sti
enter
aam
iret
clc
imul
lret
in
out
leave
std
lret
aam
std
fcmovnb
mov
mov
fcmovnb
mov
lret
xchg
xor
call
cmp
out
ss
out
rcr
mov
std
xchg
into
fdiv
jmp
into
cmc
repz
int3
lock
cli
out
sbb
shl
out
test
mov
sub
xchg
cmp
in
int
xor
int3
out
cld
out
jecxz
shl
ljmp
orl
cmp
ss
fcmovbe
aas
imul
adc
enter
leave
in
icebp
out
mov
shr
cs
cmp
aad
in
lret
xlat
test
fildl
in
iret
iret
jmp
loopne
das
enter
out
fnstsw
ror
fcmovb
cmp
sar
les
mov
fdivr
out
in
faddl
test
aam
rcr
add
neg
in
cmp
out
out
mov
out
in
ljmp
fnsave
fiaddl
jecxz
mov
test
xchg
lock
ret
fldt
fsubr
loopne
repnz
xchg
lds
fcomi
test
out
loopne
out
cmp
cmp
int
loop
hlt
test
jmp
filds
in
out
aam
ljmp
repz
cmp
cld
loop
fmul
out
out
repz
xchg
xchg
repnz
aam
cmp
in
stc
jmp
loopne
ss
stc
in
out
in
out
cli
ljmp
in
xor
cmp
roll
aas
cmp
cmp
mov
out
in
iret
mov
icebp
enter
cmp
stc
fcomip
into
ds
std
call
add
push
mov
push
jmp
ret
rcl
aam
ret
sarl
or
arpl
add
add
xchg
jmp
cmc
hlt
stc
xor
fxch
cmp
in
ss
icebp
jmp
aas
out
rol
call
xchg
fldl
xor
iret
loope
cmp
clc
loope
xchg
loopne
in
std
out
mov
test
cli
jmp
xor
idiv
test
mov
out
loopne
icebp
in
out
xchg
mov
sar
xor
cmp
ss
cmp
cmp
test
jecxz
fcmovnu
xchg
loop
mov
lret
lock
xor
testb
loopne
cmp
jmp
iret
mov
shl
out
sub
call
cmp
in
sub
call
fsubrp
lds
fucom
aaa
stc
sub
lret
out
fldpi
xor
cmp
rcl
jecxz
aam
test
testl
xor
not
cmp
int
shll
in
bnd
loopne
cmp
mov
ljmp
nop
call
icebp
enter
cmp
out
in
aam
in
or
sti
fiadds
in
in
ss
stc
jmp
std
cmc
shl
cmp
mov
rcr
fincstp
nop
loopne
into
xchg
fsubrp
call
fdivr
stc
lock
neg
loop
loopne
aas
adc
fdivr
mov
in
int3
ljmp
sar
hlt
filds
out
mov
ljmp
icebp
fmull
ss
leave
ret
int3
fsubrp
out
aas
lock
aas
hlt
repz
xlat
fildl
in
in
jecxz
leave
lret
jmp
xor
jmp
fprem1
sbb
loope
testb
lock
xchg
icebp
cmp
xor
cli
loope
xorb
xlat
testb
fsubrp
int3
jecxz
enter
idiv
fsubr
fdivrs
repz
roll
roll
mov
out
out
rol
into
call
loope
cmc
aas
vpaddusb
clc
loopne
fucomi
fstp
jmp
rcl
idivl
in
ror
cli
imul
sti
ds
test
cmc
repnz
fadds
shr
shr
jmp
in
repz
rcr
cmc
fcomp
cmp
faddl
xchg
fcoml
fadd
jmp
int3
std
xor
idiv
add
fimuls
loopne
rclb
repz
in
aaa
or
fucomip
xchg
lea
jmp
shl
test
lret
shl
xlat
cld
fiaddl
leave
call
jmp
in
xchg
xchg
lock
in
out
into
lret
enter
sar
aad
aad
in
cmc
loopne
lds
int
cmc
fstp
hlt
cs
cmc
fucomip
lock
iret
out
out
iret
cmp
stc
xchg
clc
and
addl
xor
int
adc
aam
les
enter
test
xor
xor
in
fdivp
iret
iret
ror
and
cmp
cmp
hlt
ret
lret
fucomp
fsubr
mov
aaa
in
ss
fsubr
ds
stc
lock
ret
rcl
in
sti
imul
fsubrp
loopne
enter
addl
xlat
iret
std
test
icebp
icebp
test
enter
sar
out
lock
jmp
jmp
in
cli
int
shl
aas
aas
sar
cmp
loope
test
cli
in
mov
jmp
repnz
ret
fldl
mov
test
mov
fdiv
xchg
jmp
jmp
xor
clc
ljmp
ret
in
ret
loop
into
out
lock
ret
out
xor
roll
test
sbb
jecxz
loop
repz
xor
aad
sti
aad
fidivrl
in
xchg
cmp
clc
int3
leave
out
fiadds
lret
int3
xor
lret
addb
faddl
loopne
std
lret
xchg
aad
out
cld
cmp
jmp
fsubp
in
in
shl
loopne
clc
aad
test
mov
int
mov
mul
stc
ljmp
loopne
icebp
out
mov
filds
cmc
cmc
cli
call
ljmp
in
mov
fsubrp
in
dec
xor
std
fdivp
sub
sub
into
repnz
xor
clc
in
out
in
cld
out
out
in
mov
mov
in
clc
int3
xor
test
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
data16
cld
icebp
sub
add
add
lock
imul
shl
lret
and
shl
std
int3
in
in
cmp
imul
xor
shr
cmp
add
popl
xchg
icebp
ss
cmp
cmp
cmp
fisttpl
out
int
iret
lret
fisttps
xor
repnz
dec
add
enter
orl
out
rcl
ljmp
int3
leave
jmp
lret
into
xlat
vpsllq
ror
fldl
fsubrp
lock
cmp
in
jmp
fxch
cmc
aad
fnstcw
fcomip
sub
mov
sub
testb
stc
out
clc
cld
jmp
ret
hlt
repz
fsubp
in
fsubrp
loope
loop
in
int3
divb
into
ljmp
out
fsub
in
out
loop
fildl
in
iret
out
sti
cmp
into
loope
loopne
fucom
hlt
rorl
testl
call
lret
addb
or
in
jmp
int
cmc
out
jmp
enter
sub
ret
enter
in
jmp
lds
cli
rcr
hlt
jmp
ret
aas
test
enter
in
rorl
out
stc
shl
in
shr
clc
shr
aaa
flds
ret
inc
mov
nop
orl
jmp
int
jmp
shl
out
cmc
rcr
roll
lret
test
out
aad
rol
cmc
sti
lock
icebp
repnz
cmp
rorl
lret
cld
sti
lock
out
aam
out
xor
cli
ljmp
stc
fsubr
loope
enter
jecxz
in
clc
loope
fnstenv
xor
in
fcmovbe
and
stc
jmp
clc
out
stc
mov
mov
nop
repz
into
repnz
cmp
ret
neg
repnz
call
enter
in
xor
ljmp
xor
cmp
fdiv
ret
in
fisttpl
std
nop
lret
out
xchg
aaa
repz
sub
idiv
out
lret
out
ret
shl
rolb
xchg
xchg
in
loopne
in
xor
cmp
hlt
jmp
cmc
in
sarb
rolb
int3
int
xchg
in
xor
sar
ljmp
lret
in
incl
mov
shlb
sti
fld
fnstenv
lret
xor
sti
mov
aad
fsub
fcmovne
mov
test
in
out
lret
shlb
in
repz
roll
in
mov
test
cmp
int
into
repz
out
aam
in
cmp
ljmp
cld
into
test
xchg
aam
test
leave
fdivrp
in
stc
shl
hlt
shl
out
in
rolb
mov
out
cmp
cmp
sti
ds
cli
cmp
fdiv
jmp
sbb
loopne
fucomp
in
lds
sti
shl
ss
cli
lret
clc
int
xchg
xlat
les
lret
in
leave
jecxz
fxch
hlt
out
ljmp
std
hlt
rcr
fnstsw
test
ljmp
out
xor
jmp
int3
cmpl
loopne
ror
mov
lock
xor
sti
in
idiv
cmp
std
xor
int3
aaa
idiv
fyl2xp1
sub
into
jmp
jmp
repnz
xlat
jecxz
xor
in
int
repz
test
faddl
int3
enter
icebp
shrl
lret
cmp
cmp
cmp
cld
lret
test
repnz
shl
xor
ljmp
loopne
rcr
ror
fmull
rcl
and
clc
imulb
icebp
call
loope
cmp
testl
sbb
fucomip
out
das
sub
bnd
cmp
cmp
cmp
jecxz
clc
shl
loopne
test
out
mov
mov
enter
repz
rolb
jecxz
cli
fcmovu
fstp
ljmp
xor
cmp
icebp
aaa
icebp
fdivrl
int3
addb
fdiv
cli
leave
fptan
xchg
out
vpmulhw
out
out
jmp
testb
ret
cld
mov
hlt
out
faddl
rclb
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
push
mov
jle
add
ret
out
call
fcmovne
int3
jmp
in
repz
loope
lret
jmp
int3
xchg
in
cmp
aad
sarl
fnop
into
int3
repz
ss
fcmove
stc
aam
in
icebp
jecxz
fsubrp
mov
and
mov
cmc
leave
in
int3
sti
xor
out
aas
fcomip
cmp
cli
aad
repz
mov
jmp
test
xor
xor
cmc
sti
shl
sti
iret
stc
clc
hlt
enter
std
out
cmp
jmp
in
ljmp
or
idiv
enter
cmc
testb
decl
xor
cli
fistpll
cmp
fcmovnb
and
out
testl
jecxz
shr
loopne
cli
idiv
enter
fidivrl
loopne
int
repz
rol
ret
dec
int3
leave
or
jmp
aam
divb
ret
in
out
jmp
sbb
repz
leave
cli
out
xchg
xor
in
xchg
loope
iret
sar
lds
shr
or
ret
int
test
repz
cld
int3
neg
test
adcb
lret
lock
sar
rolb
sti
enter
out
test
rclb
ret
stc
ds
mov
loop
xchg
fdivp
jecxz
enter
fmul
into
sar
test
jecxz
jmp
fcmovnb
into
repnz
xchg
mul
shl
sti
enter
ljmp
in
sti
test
sti
test
int3
int3
icebp
shl
fcomi
lock
shl
fdivr
filds
ljmp
std
test
fcmovbe
imull
cmp
sbb
jecxz
sarl
fcomip
imul
loope
ror
jecxz
jmp
out
repz
sti
fmul
idiv
clc
cmc
cmc
cmp
incl
call
rcl
out
lret
xor
not
loopne
sar
out
xchg
movl
xchg
jmp
ret
xor
std
xlat
in
std
cmpl
fimuls
not
aam
lock
loope
fmul
shl
xlat
ret
fsub
fsubrp
fmul
and
int
xor
hlt
fidivrl
in
ret
rol
jmp
std
enter
test
out
fmul
cmp
cmp
lock
aad
in
cld
rcr
sbb
mov
iret
call
jecxz
cmp
fxch
into
ror
rcr
test
xor
loope
enter
out
cld
std
imulb
ss
sar
enter
call
in
sti
hlt
mov
mov
sti
out
or
shll
clc
clc
iret
jmp
fdivrs
mul
testl
in
repnz
cmc
imulb
cld
out
cli
stc
fyl2xp1
lret
iret
hlt
in
loope
mov
into
rolb
cs
clc
out
cld
jmp
cmp
aas
lock
loopne
loopne
fsub
shl
hlt
out
xchg
ret
xor
fnstenv
aaa
idivb
xor
hlt
aaa
shl
stc
xchg
cld
leave
sti
cli
cld
in
mov
rcr
xchg
rcl
in
leave
jmp
ljmp
inc
fmuls
std
lock
ret
repz
in
cmp
addb
ret
xchg
int3
stc
xchg
nop
out
fisubrs
lret
cld
in
xor
jmp
or
cmc
out
faddp
hlt
inc
call
in
fucomip
mov
lock
hlt
xor
in
in
orb
clc
out
xchg
loopne
xchg
nop
ss
int
int3
leave
xor
shr
clc
mov
fmull
xchg
into
lret
out
call
aam
out
in
lock
sar
ret
loopne
rcr
int3
cmp
flds
in
shr
ftst
out
sar
rolb
ret
ret
clc
out
testb
xchg
hlt
rcl
clc
lret
jmp
frndint
or
in
shl
lock
lret
out
fldln2
in
loopne
rcl
lock
stc
std
sar
faddp
addb
roll
in
nop
mov
int3
dec
ret
fadd
aaa
cmp
aam
fdecstp
in
ds
ret
int
test
out
std
repz
loope
in
rcr
in
cmp
jmp
lock
hlt
test
sbb
out
int3
nop
xchg
mul
ror
in
aad
xor
into
int3
sarb
sar
decl
inc
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
mov
addl
out
in
loopne
out
ror
xor
out
into
icebp
rcr
aad
cmc
clc
xchg
int3
in
cmp
iret
in
jecxz
int
jmp
hlt
int3
fmulp
test
call
into
jmp
loopne
enter
lret
xabort
cmc
lret
stc
addl
lret
loop
sti
sbb
xor
lock
in
out
fld
fcomp
sarb
loopne
incb
stc
mov
int
mov
das
aam
cmp
lret
call
icebp
cmp
aas
fdivr
ret
testb
mov
icebp
xchg
repz
shl
cld
cmp
lret
cmpb
in
fadd
ret
test
rcl
out
jecxz
shr
fcmovnbe
xor
int
repz
in
in
fsubr
mov
cmp
into
in
rol
vucomisd
std
out
cmp
loope
aas
aas
in
rorl
fnstsw
repnz
in
xor
aam
in
cmp
jmp
aas
ret
cmp
jmp
leave
icebp
fsubr
rolb
repnz
hlt
xlat
cld
repz
shl
aam
loope
mov
adcb
aad
jmp
fnsave
hlt
repnz
repnz
std
in
aam
mov
hlt
ljmp
sti
in
shl
enter
ror
std
out
out
sbb
fadd
loopne
sti
aam
fisttpl
xchg
iret
hlt
xchg
mov
jmp
jmp
ljmp
jecxz
call
loopne
fcomip
lret
hlt
mov
in
xor
rolb
test
fdivr
xlat
jmp
xchg
sti
into
out
xchg
loop
sub
sti
out
fnstenv
aam
neg
cmp
loop
sti
ret
clc
jmp
in
xchg
loopne
int
fisubrl
out
in
fcmovbe
cli
lret
rcl
hlt
rol
stc
div
sti
cld
call
ljmp
in
std
lret
out
aam
out
iret
xchg
aam
ret
xchg
xchg
test
aad
cmp
ret
mov
ljmp
out
xor
out
int
aam
hlt
test
in
cmp
div
mov
test
call
sar
int3
out
lret
in
rcl
leave
out
test
repz
cli
in
aad
decb
orl
xor
call
xchg
addb
test
jmp
ror
xor
out
lret
aam
icebp
imul
in
mov
enter
movl
sub
aaa
jmp
rol
cmp
xor
adc
fildl
decb
lock
loopne
leave
in
xor
into
aam
into
clc
stc
aad
faddl
fxch
out
loop
xchg
shll
xor
in
aam
lock
xlat
int
lret
repz
clc
fucom
testb
or
in
rcr
jmp
fnstcw
add
mov
sar
jmp
lret
mov
add
ss
clc
std
out
repnz
iret
into
cld
clc
xlat
mov
mov
lds
in
out
enter
leave
iret
clc
aas
std
fcomip
test
cmp
neg
in
loop
orl
fdivr
cmp
icebp
cmp
lret
and
cli
aad
mov
std
ljmp
jmp
aam
fucomi
xor
fdivr
fucom
xchg
flds
shl
icebp
faddl
sar
lock
ljmp
loopne
leave
call
incb
lret
cmp
divl
xor
aas
int3
loope
icebp
cmp
in
jmp
out
fcomi
mov
xchg
ss
cmp
aad
cmp
leave
stc
std
cmp
jecxz
sub
in
mov
sar
call
hlt
hlt
div
in
lret
hlt
fmul
aad
out
dec
jmp
fxch
lock
xchg
int3
shl
les
shr
jmp
xlat
rol
hlt
repz
test
mov
call
xchg
ret
in
cmp
clc
stc
icebp
loop
fldl
in
xchg
xchg
jecxz
orb
int3
enter
int3
iret
pushl
aam
rcr
fsubrp
flds
fcomip
mov
xorb
cld
jmp
cmp
rcr
test
not
fidivrl
in
call
aaa
xor
xor
aam
fbstp
sti
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
pusha
orb
add
add
ds
sbb
jecxz
fstp
jecxz
fmul
test
jmp
in
loopne
in
hlt
cmp
iret
call
lret
out
test
mov
mov
shl
lds
ret
in
lock
cmpl
rolb
fdivrp
fucomi
orl
iret
mul
shll
std
ret
icebp
loopne
fcos
ret
jecxz
int
orl
repz
int3
fsub
repz
ret
enter
fadd
jmp
test
roll
in
hlt
hlt
rcr
fnclex
cmp
loope
roll
xchg
decl
pop
loopne
sti
jmp
out
lret
cmp
in
jecxz
fcom
incb
or
in
repnz
test
ror
aam
cmp
div
sarb
fcmovbe
sti
test
movl
lock
jecxz
hlt
div
lret
xlat
loop
not
cmp
loope
div
mov
fsubr
fstp
repz
cmp
int3
ret
rcl
int3
xor
cld
sar
fdivr
loop
clc
clc
out
ror
mov
enter
div
fcomip
fldpi
into
out
xlat
fldl
cld
aam
cmp
faddp
jecxz
aad
lret
leave
shll
xor
fcomp
sti
call
cli
lock
mov
loope
std
mov
rcll
lret
les
testl
int
cli
test
cmc
jmp
iret
test
into
aam
ret
in
jmp
lret
int
out
fsubr
loope
loop
leave
xor
lret
sarl
in
cmc
lret
in
xlat
ret
fdivp
ret
fdecstp
mov
into
into
mov
in
cmp
fdiv
cmp
neg
ret
jecxz
adc
testl
lret
repz
out
xor
out
cmc
fcmovne
xor
aas
sarl
aam
movl
fcmove
mov
aad
icebp
jmp
cld
ffreep
cmp
les
loope
fldl
out
xchg
nop
sub
out
repz
shl
or
hlt
loopne
loop
fisttpl
cld
mov
xchg
shlb
clc
aad
cld
lock
shl
imul
fcom
shl
rolb
orl
das
lret
in
out
out
cld
out
testl
xchg
lea
in
lret
xor
jmp
ljmp
repz
stc
enter
jmp
lret
fisttps
lret
icebp
shr
fucomp
stc
cmp
stc
hlt
test
aad
in
out
out
test
mov
in
aad
ret
out
in
cmc
stc
fmulp
fidivs
cmp
xor
out
fsubp
orl
xchg
test
cmp
shr
imul
cmp
clc
sar
filds
sti
hlt
ljmp
out
jmp
into
xor
into
aaa
ljmp
xlat
loope
jmp
loopne
in
call
ljmp
xor
fld
cmp
fld
loop
aam
ret
fcmove
fsub
jecxz
dec
iret
clc
xor
lret
aas
lock
in
loope
fdivrs
test
mov
test
fchs
loope
call
int
fstpt
fpatan
icebp
xor
cmp
ret
ret
hlt
loopne
mov
std
stc
mov
in
into
xchg
xor
shll
in
fst
fcom
fdivrl
repnz
ljmp
cld
int3
out
or
icebp
ss
aaa
fidivrl
and
clc
shl
idiv
aam
mov
lret
clc
cld
sub
int
icebp
repnz
enter
cmc
aam
repz
in
loope
cld
test
lds
loop
jmp
out
jecxz
clc
call
cmpb
fiadds
xchg
in
out
mov
int3
leave
fdiv
cmp
cmp
lock
faddp
mov
ljmp
cli
repnz
and
neg
clc
int
leave
in
jmp
int3
mov
xor
imul
icebp
lock
clc
xor
lock
loope
dec
fiadds
in
mov
aaa
loope
cmp
call
not
into
sarb
xlat
out
out
xchg
xchg
xchg
sar
shr
fadd
cmp
ror
lock
movl
jmp
xor
iret
jmp
repnz
repnz
mov
clc
in
ljmp
cmc
in
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
mov
stos
add
xor
call
fiaddl
ljmp
icebp
loop
test
jmp
xlat
icebp
xlat
cmp
aad
or
loopne
cmp
fcomp
jmp
mov
mov
lret
lock
test
in
in
divl
aad
divb
adc
rcr
icebp
xchg
xlat
in
and
lret
loope
cld
hlt
in
xchg
lret
shr
cld
lret
out
fiaddl
in
out
test
cld
cld
fmulp
mov
cmc
jmp
xlat
hlt
out
jmp
lret
sti
fcmove
ret
jecxz
ret
int3
xchg
fucomi
in
repz
shr
divb
int
jmp
rolb
std
mul
int3
rcl
mov
xor
cmp
cld
cli
divb
mov
sti
mov
repnz
rorb
xor
jmp
sti
fcmovnu
fcomp
les
aad
fimuls
xchg
loopne
shlb
cmp
in
xor
std
xor
icebp
ds
std
fldl
out
lock
mov
int3
ret
cmp
enter
out
idiv
clc
loop
out
in
loope
ret
mov
ss
xor
fdiv
cld
jmp
loopne
enter
leave
lret
in
sarl
out
ror
iret
fdivl
shlb
mul
shl
std
repz
xchg
loope
loop
sub
shr
sti
int
in
cmp
sar
ret
aas
cmp
int
loope
out
lock
aam
cmp
jmp
cmc
cmp
fucomi
ret
fcomp
ret
lock
not
xor
xor
ds
loop
shl
and
lds
leave
iret
sar
into
aam
in
iret
fdivs
div
cmp
hlt
repz
adc
in
lret
mov
aad
ss
cmp
sti
lret
cmc
loope
loope
cld
testb
jecxz
fsubp
jmp
icebp
aad
sar
rol
das
ds
cmp
rcl
cli
std
ret
call
mov
clc
fxch
hlt
repz
xor
jmp
cmp
and
cmc
cli
lret
dec
add
out
shl
aad
xor
sti
iret
lret
leave
faddp
xlat
rol
and
jecxz
test
fsubrp
sti
loop
loope
rcl
rcl
xor
shll
leave
leave
cmp
ljmp
ret
sbb
out
fsubp
popl
in
fld
iret
lret
sbb
aad
out
fcomp
repz
mov
xchg
mov
icebp
xorb
into
fcmove
ss
fdivr
cmc
int
fistpll
loopne
jmp
or
mov
loope
lock
xor
int3
icebp
into
lock
enter
or
fcmovu
mov
hlt
fdivr
out
iret
nop
sbb
addl
repnz
fsubr
into
cmp
out
cmc
xchg
aam
stc
or
xchg
fistl
fidivl
int3
ror
shl
cmp
cmp
fld
cli
ret
dec
int
loopne
mov
xchg
or
repz
fadd
sarb
aas
test
aam
out
ljmp
enter
sub
leave
in
xor
lret
out
lret
lock
add
sti
mov
xchg
jecxz
repz
xor
ffree
icebp
roll
xlat
xlat
out
shr
fdivr
test
int3
jmp
in
iret
mul
hlt
cmp
cmp
out
fstp
cld
out
cmp
out
in
lret
out
into
in
xchg
in
shl
in
fmul
sarl
aad
int
int3
addb
fdiv
int
adc
in
mov
mov
into
fscale
sbb
cmp
rcr
in
xlat
mov
ljmp
xor
out
in
xor
lret
aas
incb
testl
call
lds
les
bnd
xor
xor
aam
in
loopne
in
ljmp
loope
aaa
in
rcr
ss
in
not
addl
fcmovbe
cli
ljmp
xor
std
xor
in
fcomi
cmp
ret
test
out
xchg
mov
cmp
leave
out
stc
aam
loop
add
rorb
out
fisttpll
lock
jmp
in
cmp
inc
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
inc
sub
sub
add
fcmovnu
sar
repz
xlat
lret
fsubp
int
lock
cmp
cmp
in
repnz
sti
aaa
fucomi
icebp
cmp
clc
xchg
out
adc
ljmp
rcl
into
rcr
lock
aad
repz
faddl
rcll
ret
out
in
xor
leave
rol
in
xchg
idiv
test
mov
ret
mov
fucom
inc
ljmp
std
cli
hlt
icebp
test
out
std
stc
or
mov
fimuls
lret
out
out
icebp
fcmovnb
aas
sar
rcr
out
loop
iret
in
sbb
out
xor
ror
iret
cli
fidivrs
sarl
shl
idiv
fucomi
in
leave
mov
into
fcoms
int3
fadd
in
out
out
clc
stc
rcr
clc
lock
rcr
roll
enter
enter
hlt
jecxz
ret
lret
fdivrp
fcmovu
xor
test
xchg
sti
xlat
test
in
in
int3
jecxz
lret
bnd
lock
cmp
jmp
test
add
idiv
loopne
ljmp
mov
aaa
out
fidivrl
icebp
cmp
cmp
cli
ret
ds
mov
jecxz
loop
in
shl
in
lret
hlt
icebp
int3
cmp
addb
shl
ret
jmp
mov
in
pushl
fcmove
cli
ror
loopne
into
dec
fdiv
xchg
std
call
iret
sub
loope
cmc
das
out
lock
lret
cli
in
int3
sti
rcr
iret
sti
sbb
test
sub
jmp
ss
fsub
fmulp
jmp
rcr
cmpl
out
fmuls
loope
test
out
stc
xor
fadds
jmp
loop
icebp
out
loop
in
cli
in
rol
fucomp
flds
cli
fcomp
xlat
and
call
out
mov
jmp
aaa
in
xor
fdiv
cmp
out
cld
repz
fadd
sub
xor
loope
jmp
cmp
jmp
aam
xor
and
xlat
xchg
test
loopne
in
iret
out
in
iret
aaa
int3
call
into
in
test
test
cmpl
std
int3
out
fcmovne
out
mov
clc
xlat
leave
xor
int3
icebp
loop
icebp
test
hlt
aad
movb
xchg
loope
out
imul
lock
out
xchg
aad
lret
stc
mul
xchg
loop
xchg
xchg
out
cmp
in
cmp
fistpll
loop
hlt
cli
aad
in
aad
stc
inc
jecxz
hlt
mov
int3
icebp
xor
aad
xor
cmp
mul
roll
jmp
cmc
cli
call
mov
into
hlt
lret
call
cmp
lock
stc
out
ljmp
icebp
shlb
rcl
int3
in
clc
in
xor
rolb
aad
adc
cmp
loopne
shr
xchg
icebp
cld
shl
into
xlat
lret
not
cmc
shl
cmp
std
in
call
mov
fcomi
cmc
repz
jmp
out
out
iret
lret
cmp
jmp
cmp
call
aas
in
fmuls
leave
shr
std
in
sub
in
into
fcmovbe
repnz
lret
ffreep
fdivrp
cmc
shl
ljmp
test
lock
int
aam
enter
lock
loop
idiv
clc
add
mov
out
cld
decl
in
cmc
call
lock
repnz
std
in
xchg
addl
in
cmc
test
call
rcl
aam
lds
fsubr
rcll
cmc
out
in
cmp
aam
cmc
int
lock
cmp
jecxz
shl
xorl
icebp
xor
iret
loop
xor
in
in
call
cmc
rcr
loope
in
fadd
out
ror
fucom
repnz
fcomp
call
rcll
cmc
into
lock
cmp
aaa
fcmovbe
and
into
rol
stc
rcl
fimull
into
rclb
jecxz
out
test
jmp
in
into
ds
repnz
test
leave
ljmp
loopne
cmp
ret
int3
lock
sarb
into
loopne
clc
aad
lds
jmp
ffree
inc
loopne
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
mov
filds
jle
add
in
into
loope
xor
fsubr
xor
lret
ror
cmc
cmp
loope
leave
orl
call
xor
xor
shl
fcmovnbe
fcmovu
stc
loop
lret
incl
std
lock
call
idivl
lret
aad
roll
xlat
and
int
hlt
xor
into
in
out
aam
out
rol
rcl
jecxz
std
lret
in
enter
cmc
nop
xchg
aaa
xor
xor
fcomp
ds
std
repz
fiaddl
aam
enter
xchg
icebp
xchg
jmp
shlb
out
repnz
cmp
hlt
cmp
clc
in
lock
out
xchg
mov
clc
mov
iret
jmp
call
leave
lret
loope
aad
repnz
in
loopne
mov
aam
in
xlat
xor
sbb
rol
rcr
jecxz
mov
ret
xchg
test
ss
cld
mov
neg
decb
ror
shlb
cmp
enter
xor
and
cld
mov
jecxz
mov
shr
aam
in
xor
cmp
fnsave
enter
fsubr
clc
xchg
test
sti
fcmovne
clc
movb
xlat
ret
cmp
shl
out
cmp
in
fcmovu
and
mov
xchg
sub
iret
xor
cmp
not
cli
sarb
std
fstp
movl
lret
icebp
in
into
iret
shlb
in
xlat
cld
test
loopne
aam
xlat
test
cmp
loop
out
sti
iret
jmp
xor
out
cli
fcomp
out
jecxz
aas
shl
sarl
loopne
and
fdivr
mov
xor
out
xor
out
in
ds
fnstsw
add
ljmp
jmp
icebp
in
leave
out
int
fidivrl
in
fcom
ror
std
std
ret
ret
fucomip
icebp
leave
into
jmp
loope
xor
aaa
std
cmp
repz
icebp
fnstsw
fstpt
mov
loop
ljmp
xchg
in
sub
jmp
cmp
out
adc
shl
ret
lret
in
repz
xor
in
repz
not
iret
rcl
shl
cmc
xchg
rol
fmuls
xchg
cmp
shl
in
lock
xor
int3
in
hlt
in
xor
loope
aam
out
aam
test
xchg
test
sub
int
rcr
stc
clc
cmpb
loopne
fiaddl
cld
in
into
fnsetpm(287
mov
in
in
cmp
aam
xlat
shr
aaa
int3
cmpb
ljmp
out
xchg
test
fadd
out
aaa
cmp
cld
ret
ret
addb
ret
out
into
jmp
int3
shr
aaa
cld
ljmp
clc
loop,pt
cmp
ret
loop
mov
mov
shll
icebp
xlat
cmp
int
add
rcr
bnd
test
xchg
loope
not
iret
jmp
repnz
rcl
aad
sub
jmp
mov
jmp
xchg
in
les
cmp
loopne
out
xchg
jmp
xlat
int3
cli
jecxz
jmp
addb
enter
into
cmp
shl
rolb
in
lds
iret
std
lret
loopne
cmc
xor
ds
cmp
jecxz
sub
idiv
int3
adc
adcb
std
cmp
out
cld
xlat
xor
out
faddp
aam
mov
jecxz
fsubrp
xchg
std
jmp
cmc
in
ror
fcomi
lock
loop
iret
std
or
jecxz
in
out
fcmovne
call
cmc
cs
repnz
jmp
icebp
shl
out
lock
in
sbb
lock
shlb
xor
into
in
neg
cmp
movl
enter
xor
fnop
cmp
repz
clc
icebp
clc
hlt
ret
repz
in
fdiv
xchg
repnz
rcl
ret
sar
cmp
repz
xlat
repz
out
xlat
clc
leave
out
sbb
repz
in
lret
jmp
fsub
clc
fst
push
rcl
rol
int3
in
icebp
ljmp
out
cmp
ror
xor
jmp
enter
int
fnstenv
sub
jno
in
jle
add
fidivrs
adc
cmp
cmp
ret
enter
in
call
aaa
loopne
int3
into
fucompp
cmp
rcr
fsubrp
out
test
out
fsubr
orl
mul
neg
lock
roll
stc
and
dec
ljmp
cs
ljmp
cmp
icebp
shl
addb
stc
mov
jmp
test
ljmp
out
sbb
cmc
fcmovbe
into
testl
xor
sar
lret
lock
aam
fsubp
cmc
mov
not
mov
fmul
call
jmp
leave
fnstcw
out
cmp
shl
cmc
fdivrl
cmp
idiv
in
loop
in
loop
mov
jmp
cmp
cmp
std
loopne
aad
ljmp
mov
lret
mov
in
jmp
icebp
leave
cmp
std
ret
jmp
cld
leave
mov
out
xchg
rorb
int
ljmp
or
cmp
aad
xchg
mov
loop
repz
lret
in
not
cld
aaa
aaa
sarb
in
stc
fxtract
test
mov
lock
iret
clc
icebp
xor
lds
cli
cld
ss
sti
in
xchg
loopne
jecxz
call
call
hlt
xor
into
ljmp
shr
std
loope
jecxz
fcmove
ljmp
aam
int
clc
xor
xor
cmp
rcl
cmp
out
into
hlt
shr
fst
jmp
mov
iret
jecxz
cmc
lock
xor
std
icebp
in
fidivrl
and
in
loope
std
in
sub
test
in
xchg
mov
xchg
icebp
das
out
leave
repnz
xlat
out
fcomp
cmp
adc
hlt
enter
ds
adcl
fdivs
lret
out
std
hlt
bnd
sar
shl
clc
icebp
out
hlt
lret
fadds
int3
rol
loop
cld
cmp
lock
std
filds
mov
loopne
rcll
lret
cmp
aam
testb
stc
out
call
fmuls
rcl
out
rol
icebp
aaa
aaa
out
hlt
rcl
shl
fst
iret
out
clc
loope
imul
mov
int
in
in
mov
hlt
in
in
sti
lret
fmul
shl
out
repnz
lret
lea
test
into
xchg
shr
div
aam
cmp
cmp
repnz
fmul
xchg
out
out
call
iret
in
repz
repz
fdivr
ljmp
hlt
fcmovbe
mov
repz
fsubr
xchg
rol
xor
xlat
cmp
div
xor
cmp
aad
call
cli
mov
int
mov
in
ljmp
stc
fld1
loop
in
in
fcmovnu
fsubrp
cli
clc
clc
clc
and
ffree
mov
out
cmp
repnz
in
xlat
sarb
cmpl
in
loopne
leave
jecxz
iret
jmp
incb
xor
cmc
jmp
clc
lock
roll
fsub
cld
fcmove
in
mov
iret
ror
int
in
aam
cmp
and
shl
orl
xchg
call
out
cli
std
cmp
stc
in
cmp
addb
sti
out
cld
ficoms
jmp
into
in
out
fcmovb
clc
iret
iret
rcl
test
std
fildl
repnz
lret
fcmovu
hlt
cmp
out
fcomp
testb
test
sub
xchg
aam
fxch
jecxz
cmp
icebp
cmp
cld
cmc
out
jecxz
aam
fsubr
xchg
sub
in
aad
test
out
jmp
std
loop
lds
into
out
call
out
loop
idivb
cmp
aam
in
in
idivb
roll
icebp
test
loop
jmp
fnsave
iret
cmp
jecxz
hlt
rcl
ljmp
call
mov
clc
int
aam
stc
cli
cld
cld
sar
cmp
test
aas
cmc
sti
cmp
mov
mov
loope
fldlg2
fld
cmp
cmp
cli
lret
sub
out
in
test
test
jmp
nop
test
out
ret
out
aad
cmc
fdivp
fcmovu
jmp
lock
std
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
mov
jmp
jle
mov
into
jmp
test
int
in
out
incl
add
cli
xchg
ret
int
out
jecxz
mov
aam
fxam
fcmovbe
cmp
stc
loope
icebp
icebp
ds
faddl
out
addl
xor
ret
enter
rcl
shr
aam
fnstsw
out
icebp
aad
or
call
int
in
lock
cmp
in
fbstp
cli
cmp
ret
int3
iret
rol
call
loop
test
lea
fnop
aad
int
cmp
in
mov
jmp
lea
filds
enter
in
fcom
iret
std
rolb
fmuls
repnz
faddl
rcl
jmp
test
fcmovnb
cmp
aad
jmp
leave
mov
out
idiv
ss
fdivr
fcom
ret
fsubrp
in
test
fisttpll
adcb
xor
int
shl
repnz
in
loope
lds
clc
call
repz
fsubr
loop
xlat
xor
leave
sti
int3
std
into
xchg
repz
fstp
loopne
or
ror
jmp
int3
aad
out
hlt
cld
ds
shl
call
fstl
ljmp
in
repnz
fldl
test
xlat
aad
cli
fisttpll
std
int
xchg
lret
les
jecxz
jmp
fsubr
fucom
int
sbb
aam
lea
lret
shr
ss
cmp
std
icebp
idiv
mul
in
enter
out
ljmp
repz
cmp
xor
fucomp
sti
cmp
shl
fld1
fdiv
in
out
in
filds
loop
fcmovbe
fmul
leave
in
int
loope
addb
fsub
jmp
xor
in
out
in
stc
sti
jmp
xor
sar
ret
test
cmc
cld
shr
std
test
out
fdivrp
int
fmul
idiv
xor
repz
aas
jecxz
cmc
in
in
std
out
cld
and
divl
repz
cli
lret
hlt
rcl
repz
loop
xchg
std
cld
xchg
repnz
mov
in
das
rcr
xlat
out
jmp
test
repz
std
jmp
fxch
lret
mov
addb
cmc
fcmovnb
in
fstp
cmp
cmp
cld
cld
jecxz
out
sub
mov
shll
divb
repnz
icebp
rolb
out
aas
sti
ret
sti
jecxz
enter
call
iret
out
xor
xor
lret
int
into
repz
mov
in
nop
sub
loop
loop
cli
xor
jmp
iret
cmp
shl
lds
fcmovb
mul
decl
xchg
neg
lds
fucomip
fucomp
int
in
rolb
mov
mul
bnd
xchg
enter
out
cmp
hlt
hlt
xlat
lret
cmp
cmc
rcl
mov
aad
testl
loope
fcmovu
out
cmp
out
addl
aam
ret
out
in
mov
ss
stc
jmp
fstpt
cmp
test
out
out
add
int
test
jmp
rcl
leave
div
out
in
div
iret
hlt
out
jecxz
ljmp
std
int3
cld
xchg
xchg
adcb
rcl
cmp
cmp
rcl
rol
std
repz
sti
iret
ret
icebp
ror
fiadds
lock
cmc
aaa
adc
loop
xor
decb
mov
out
ss
in
in
aam
adc
mov
fsubp
or
fmul
xchg
xchg
adc
jmp
xor
out
bnd
loope
aad
and
mov
sti
jmp
std
icebp
repnz
clc
ljmp
or
in
rolb
lds
jmp
fcmovnu
lret
fnstcw
aas
cmp
cmp
idiv
out
mov
jmp
aaa
das
lret
out
aad
cmp
enter
xlat
mov
call
stc
lret
shr
sti
aam
sarb
sub
ror
clc
xlat
fadds
lock
roll
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
lock
int
shl
loope
xor
cmp
xlat
std
mov
xchg
lock
ss
cmp
cli
shl
imul
nop
sub
loop
out
jecxz
int3
repnz
stc
fcomi
aam
vpor
into
lret
or
mov
sar
fnop
fcmove
fldz
in
jecxz
out
incb
aad
leave
mov
enter
fucomip
jmp
aam
ret
repz
icebp
dec
cmp
loopne
fcomi
add
xchg
xchg
in
xchg
das
jecxz
aaa
lret
iret
fstp
cld
xlat
loope
out
call
add
mov
out
xchg
ffree
jmp
cmp
xor
in
out
lock
fndisi(8087
ret
cli
fadds
and
imul
out
fyl2xp1
aaa
in
hlt
aad
fdivrl
xor
sar
hlt
std
in
jmp
mov
enter
ficoms
sti
fdiv
in
xor
icebp
neg
loope
mul
loop
sbb
or
jecxz
cld
in
xchg
aaa
leave
shll
fnstsw
icebp
clc
ret
xchg
stc
fimull
lret
xchg
out
shr
nop
icebp
das
ret
cmp
cmp
in
fidivrl
aas
cld
clc
filds
xchg
mov
in
leave
rol
fadd
cmp
jmp
cld
xchg
not
xlat
fldl
out
ljmp
out
out
cmp
sar
lret
sar
loope
out
aad
xlat
fcmovnu
test
test
mov
aaa
in
sarl
out
int3
ds
lock
enter
in
mov
sub
repnz
jecxz
fdivr
lret
shr
iret
into
loop
out
ret
jmp
nop
testb
aam
fidivrl
fldln2
cmp
cli
ds
in
vpandn
sti
loopne
hlt
aam
fnstcw
iret
out
cmp
int
iret
cmc
int3
xor
out
shl
in
xlat
test
call
call
iret
call
jmp
cmp
cmp
aas
out
ret
vcvtdq2pd
mov
in
ret
imul
into
std
cmp
out
rcr
lds
test
xchg
or
divl
cmc
aaa
jmp
xlat
int
aam
aam
repz
xlat
lret
int3
iret
xchg
int3
into
enter
cmp
loopne
int
rcl
in
bnd
icebp
mov
adcl
into
iret
in
sarl
xlat
clc
jmp
mov
jmp
mov
and
out
cld
jmp
lret
loopne
and
stc
rcr
loope
mov
call
mov
aas
icebp
cli
int3
stc
hlt
cli
out
fdivs
cmp
icebp
adc
std
xchg
addb
jmp
ret
hlt
out
cld
fdivr
aad
shr
fdivrl
test
stc
in
fcmovne
jecxz
fcomi
mov
call
int
aaa
ljmp
into
rcl
repz
mov
mov
jecxz
sub
loop
xor
repnz
leave
std
cmp
divl
out
stc
clc
idivl
movl
loope
aad
icebp
in
cmc
in
cmp
shr
aaa
lret
testb
sti
jmp
std
sub
test
mov
leave
cmp
jecxz
rol
call
enter
jmp
test
idivb
not
iret
and
cmp
fld
cli
rorb
jmp
loop
nop
mov
in
cmc
out
ret
cli
xor
out
stc
fdivr
test
stc
testb
fcomp
fcmove
iret
xchg
out
not
lret
fdiv
ds
cmc
jmp
sti
call
mov
cmp
orl
call
repz
cmp
fcomi
repnz
fsubrp
shl
testb
mov
faddl
int
lret
lret
in
xor
fst
in
fsub
ret
aam
lret
test
lret
test
xchg
cmc
xor
xor
out
hlt
cmp
cli
ds
sti
ret
ret
faddl
fadds
loop
loopne
xor
leave
fcmovne
clc
std
stc
cli
xlat
lock
mov
enter
mov
fcmove
jmp
xlat
xor
lret
int
cmpb
jecxz
cli
out
cmp
stc
enter
fprem
int
test
in
cmp
out
lock
rcl
aam
fucom
xchg
mov
push
add
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
fs
xchg
mov
add
add
neg
cmp
sar
in
hlt
orb
neg
mul
cmpb
into
cmpl
cmp
ljmp
clc
mov
int
xchg
lock
ror
into
xor
loopne
test
and
fldl
nop
ljmp
out
jmp
fidivl
fldl2t
leave
out
fcmovu
hlt
ret
sti
std
clc
repz
out
out
clc
lock
in
roll
rcl
out
std
ss
jecxz
fidivrl
xchg
mov
nop
icebp
iret
loop
repnz
rcl
sar
out
ret
ret
aad
fxch
imul
xchg
lret
out
out
xor
cmp
fistpll
xor
incl
mov
lret
nop
roll
lret
repz
repnz
lret
out
out
clc
fsubp
fiaddl
out
fucomp
mov
out
xor
shrb
in
aaa
enter
iret
cmc
cmp
out
loopne
fadd
hlt
xchg
in
jmp
leave
ret
ljmp
int
iret
in
jmp
std
cld
fmul
lret
loopne
xchg
in
aaa
icebp
cmp
cmc
jmp
cmc
repnz
ret
xlat
rcr
jmp
out
fst
call
int
fcmovne
enter
in
fstpt
cld
repz
xchg
enter
flds
xchg
hlt
bnd
int3
leave
cli
in
std
int
cmp
sar
hlt
rcr
sti
out
ret
movl
in
loop
enter
jmp
clc
idiv
sti
aam
fdecstp
or
mov
repnz
aad
call
cmp
neg
out
xlat
testb
sti
in
in
aas
int3
ljmp
in
ret
xor
out
divb
aaa
shr
iret
sarl
incb
lret
test
shl
clc
in
out
out
int
repz
cmc
clc
fcmovnbe
and
jmp
fldlg2
jmp
ljmp
iret
xor
lret
ss
leave
cld
jmp
fcmovbe
aad
mov
fdiv
in
aad
int
mov
loopne
call
idivl
out
jmp
out
hlt
rcl
ret
out
fxam
rol
mov
mov
shr
icebp
fdivrs
cmc
cmc
div
cmp
int3
shl
std
fildl
jecxz
cli
in
lret
cld
hlt
divb
shl
xor
leave
test
stc
imul
out
aas
movb
clc
lea
out
cs
rcl
lock
sti
loope
fadd
aam
test
not
ret
mov
loopne
testl
in
aam
shl
test
ret
idiv
sbb
fadd
jmp
sbb
xor
shr
int3
xlat
xabort
int
fdiv
aad
shl
push
testb
int
cmc
cmp
lock
fnsave
xlat
jecxz
xor
fdivr
roll
xor
f2xm1
icebp
iret
out
int3
lret
ret
ffree
loopne
sti
loopne
loope
cld
fsubp
mov
in
jmp
sub
aad
cmp
out
loopne
cmp
aam
idiv
inc
addl
cmc
adc
lret
lret
cmpl
repnz
fmull
in
neg
fdiv
fdivr
aaa
not
loope
int
ret
jmp
lret
lock
loopne
lret
repnz
repz
lret
cmp
out
cmp
loop
rcl
mov
int3
ret
cld
xrelease
ret
in
jmp
aaa
xor
test
leave
out
movl
out
xor
aad
ss
std
repnz
jmp
popl
xchg
neg
shll
fprem
cmp
aas
cmp
cmp
aaa
testl
mov
out
lret
xchg
repnz
int3
aas
jmp
iret
fadd
cmp
clc
test
repnz
clc
in
out
out
shr
jmp
loop
das
rcl
lret
rcl
rol
iret
fld
cmp
testb
and
rcr
not
enter
clc
aaa
jmp
cli
lock
fucom
aad
fcmovb
mov
mov
icebp
mov
lret
enter
std
cmp
jecxz
shl
sar
jmp
stc
out
lock
repz
cmp
fcmove
fucomi
icebp
jecxz
in
icebp
aam
aam
loopne
adcl
roll
add
push
or
adc
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
inc
lcall
stos
add
mov
ss
shr
aaa
icebp
aas
loope
int3
fcmovnbe
faddl
mov
std
cld
out
leave
test
mov
icebp
sub
ljmp
lock
in
ret
jmp
fmull
jmp
in
ror
out
cmp
shl
test
sbb
xchg
in
fiadds
jmp
xchg
divl
stc
jmp
xor
lock
in
aam
sarl
sar
and
xlat
or
out
repz
in
int
repz
fdivrs
clc
out
cmp
xchg
mov
pushl
call
aam
cmp
sbb
ret
xchg
loopne
sbb
in
lret
nop
test
in
cli
hlt
fdivrp
fsin
cmp
fdivr
fcomi
ljmp
xchg
shl
xor
cmp
repz
std
fsubr
loope
loopne
cmp
cmc
lock
in
leave
mov
mov
mov
out
iret
xor
in
aas
shl
fiadds
cmp
mov
mov
lret
out
decl
enter
out
std
fucom
clc
lock
fiadds
in
lret
repz
adc
lret
hlt
sti
in
aam
int3
fiaddl
test
mov
jecxz
mov
hlt
cmc
enter
in
into
repnz
ljmp
aad
fstp
mov
fdivr
in
jmp
xchg
mov
cmp
jmp
aam
rcr
std
out
cmp
fmuls
fiadds
ret
ljmp
fdivrp
ret
test
ret
mov
out
test
imul
aam
aaa
fldz
stc
into
repnz
fsubp
xlat
xor
mov
loop
loopne
aas
rcl
lret
fstp
lock
cmc
loopne
fdiv
div
loop
loopne
int
test
xchg
sub
rorb
in
out
ror
loope
int
into
clc
xchg
fincstp
clc
sub
mov
xchg
lds
out
icebp
hlt
lock
aas
repnz
shl
rorb
mov
icebp
xchg
leave
ss
int
iret
ljmp
ret
fldl
jecxz
dec
mov
xchg
int
xor
jecxz
fdiv
repnz
std
fsubrp
test
iret
aad
loopne
enter
lret
loop
out
test
xor
fucom
fmul
call
adc
fisttps
jmp
repz
into
in
iret
lock
cmp
fdivrp
aam
loopne
jmp
xchg
lock
icebp
in
sti
iret
sarb
stc
fnsave
xlat
iret
rcl
test
ret
cmc
adc
in
iret
iret
out
fdivr
adcl
lret
shl
test
fdivr
cli
rol
hlt
out
mov
ret
test
mov
cmc
fadd
into
aam
cmp
out
fdivr
in
and
ljmp
iret
loopne
enter
out
cmp
cmp
lock
xor
hlt
aas
loopne
lock
fmuls
loope
fucom
nop
shl
lret
cmp
fdivrs
cmp
testl
loopne
shl
in
xchg
out
jmp
icebp
aam
sarb
int3
idivb
loop
cmc
ret
in
mov
inc
mov
in
and
xor
iret
leave
xor
out
into
repz
aas
loop
repnz
jmp
xchg
repnz
int
lret
into
repnz
leave
leave
iret
lock
addl
jecxz
sti
std
xchg
aam
fxch
cld
fucomp
int
hlt
fadd
fcmovnb
fdivrp
cli
clc
mov
jecxz
shl
fsubr
icebp
aad
cmp
lret
hlt
aad
ret
repnz
out
int3
or
dec
loop
ss
lret
xor
out
aad
jecxz
ffree
fstpt
fldl2e
ljmp
in
loope
loop
xor
int3
fst
jmp
xor
ret
stc
mov
xchg
decl
stc
jecxz
sti
out
call
fmul
loop
aas
repnz
out
mov
in
mov
in
out
int3
mov
iret
out
int3
enter
lret
test
stc
test
test
in
xlat
aad
ret
lock
lret
not
loopne
out
repnz
shl
hlt
xlat
lret
cld
fdivrp
in
leave
out
repz
rcr
cmp
cmp
inc
fsubs
test
add
int3
rcl
ret
fldl
sbb
add
add
repz
ds
in
xlat
dec
std
test
loopne
ljmp
int
in
ds
fldlg2
jecxz
test
xchg
sub
mov
in
in
xor
sarl
in
ljmp
loopne
cmc
mov
out
cli
cld
clc
mov
loope
jmp
int3
aaa
out
repz
aad
repz
cmp
repnz
stc
in
call
loop
mov
xor
aaa
sti
into
sti
jecxz
shl
shl
test
mov
push
shr
fcomip
int3
sub
cmp
out
aaa
loopne
cli
ret
ret
loopne
mov
stc
fcmove
aam
in
out
shrl
vpsubb
clc
jmp
cmp
sub
mov
imul
mov
shl
xchg
div
cs
cmc
cmp
idivb
stc
lock
iret
out
incl
ljmp
xor
xor
xor
repz
loopne
fadd
cmp
mov
in
lret
ret
filds
into
out
into
cmp
jmp
xor
sti
shl
xlat
adc
ljmp
xchg
int
fdivs
fcomp
in
cmp
test
lds
ljmp
xchg
loop
in
lock
aaa
call
repnz
ds
loop
shl
xchg
sti
lret
std
jecxz
imull
iret
jmp
cmp
cmc
icebp
cmpl
xlat
stc
mov
adc
leave
stc
lock
cmp
cli
std
fsubr
hlt
icebp
repnz
aas
stc
fstp
hlt
ljmp
test
adc
not
out
aad
ljmp
repnz
sbb
jecxz
xchg
out
shl
repz
sub
cmp
cmp
ffree
xlat
lock
jecxz
std
in
fadd
icebp
mov
icebp
xor
int
fmul
in
loope
sbb
xchg
mov
sbb
rcr
fcmovne
ror
icebp
cmp
out
mul
test
and
xlat
lret
mov
xchg
mov
fmul
hlt
repz
clc
fstpt
ror
icebp
ror
neg
sti
sti
xlat
jmp
mov
iret
in
fucom
xor
jecxz
out
fnstenv
cmp
in
repnz
loope
fiaddl
xchg
ljmp
xor
enter
lret
fprem1
hlt
call
call
mov
xchg
xchg
nop
lds
ret
cmp
fidivs
int3
iret
icebp
icebp
loope
aad
lds
movb
lea
shr
cmc
idivl
fistpll
xor
aam
rolb
in
leave
mov
out
jecxz
iret
out
rcl
enter
cmc
fcmovu
fildl
faddp
cli
sti
int3
cld
mov
ret
xchg
mov
mov
repz
out
sarl
shl
aas
ret
clc
test
stc
xchg
xor
out
loope
xchg
jmp
fst
shr
xor
lret
mul
rcl
clc
mov
shl
aas
xlat
fisttpll
rcll
xor
sarb
enter
ror
and
hlt
loope
in
test
lret
aaa
enter
aaa
fdivs
cmp
cmc
lds
out
cli
mov
shl
ss
fcmovu
lret
cmp
fiaddl
test
ret
ljmp
into
out
cs
into
int3
loope
repz
clc
fmuls
jmp
into
out
sti
iret
lock
in
repz
out
cmp
std
int3
jmp
loopne
hlt
leave
idiv
stc
rorb
mov
repnz
in
call
loop
std
sbb
out
nop
mov
mov
repnz
out
in
cmp
cli
lret
out
fnstcw
fcmovb
ret
xchg
test
std
test
cli
hlt
jecxz
out
ret
aam
iret
stc
into
iret
div
rolb
jecxz
ret
fcmovnu
in
mov
call
cmp
in
ror
aad
clc
shl
shl
ds
loop
fcmovu
rcr
in
repnz
aas
cmp
xlat
shl
out
leave
xor
cmc
sar
ds
jmp
loopne
out
fists
stc
shr
sarb
push
aam
roll
leave
fldl
mov
loope
shl
in
cmp
shl
cmp
cmp
fcmovnb
rcr
call
inc
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
arpl
jle
add
in
jmp
loope
xchg
aad
shlb
xor
fmul
fsubr
std
loope
in
rol
in
clc
mov
cli
cld
xchg
in
xchg
test
enter
fdivr
fcomp
lock
mov
xchg
rcr
out
jmp
nop
fcomip
loope
jmp
iret
std
out
ds
stc
rcl
incb
out
and
mov
cmp
fcmovu
jmp
iret
int
sarb
add
mov
shr
addl
xlat
cmc
enter
test
repnz
in
filds
loope
fdiv
lock
fxam
cli
icebp
loopne
repz
xchg
xlat
fcmovb
int
std
mov
xchg
in
jmp
cmp
xor
aam
loop
jecxz
addl
into
out
cmp
into
jmp
cmp
aaa
ret
aas
aad
ljmp
nop
rclb
ret
in
test
aas
cli
cld
xchg
jmp
int
xchg
int
vpaddsb
xor
ljmp
test
enter
out
in
jecxz
shl
xchg
repnz
sub
int
out
lret
shll
out
xchg
cmc
loope
xchg
loop
loopne
out
push
xor
in
div
jmp
cmp
fucomp
faddl
addb
test
into
rol
in
out
repz
out
lret
xchg
orb
lret
jecxz
mov
cmp
clc
cmc
cmp
in
std
std
repz
loopne
cmc
xor
aad
fiaddl
xchg
loope
neg
cld
std
fsubrp
inc
repz
fucom
sbb
stc
repz
fsub
mov
rol
call
cmp
sarl
call
fucom
fsub
cld
fcmovnb
leave
aam
xchg
jmp
cmp
cmp
out
fdivp
shl
loop
sbb
test
cld
fildll
icebp
into
xor
fnstcw
fbstp
ljmp
lock
cld
ret
int
lret
into
mov
xorb
cmp
clc
fucomi
in
sar
add
aad
xchg
in
in
mov
aam
shl
ret
cmp
fcmovb
cmp
sti
ds
ret
call
jecxz
into
mov
shll
xor
test
jmp
int3
sbb
rcr
xchg
cld
leave
loopne
leave
fcoml
icebp
stc
fcmovbe
sar
jmp
cld
sti
fcomp
hlt
mov
out
jmp
call
out
ret
ret
in
clc
xor
lret
rcl
cli
cld
fcomip
mov
in
addb
xchg
aas
clc
enter
fsubr
cmp
ffree
stc
fsub
aam
mov
in
fcoml
iret
test
sub
xor
sar
jmp
out
into
aad
in
repz
jmp
jmp
xchg
in
hlt
aad
ret
lret
repz
hlt
test
ret
out
mov
lret
iret
jmp
mov
stc
fdivrl
repz
out
out
fcom
in
aad
call
cmp
ljmp
cmp
lret
shlb
fnstsw
rcl
hlt
cmc
in
dec
in
in
iret
out
aad
cmp
shl
enter
test
cmp
fcmovbe
mov
mov
clc
enter
fucom
hlt
out
out
fcmove
leave
xor
cli
ds
std
ds
cmc
shl
mov
fsubr
sub
xchg
in
ffreep
out
jmp
std
icebp
hlt
loope
cmp
xlat
out
in
sti
fsub
out
lea
int3
out
out
repz
cmp
mul
mul
lock
aaa
test
cmp
sti
jecxz
fstp
fxam
adcl
xor
xor
lret
sarl
int
fstp
test
addb
flds
xor
leave
xor
out
hlt
int
cmp
addl
enter
nop
int3
rolb
cs
ret
leave
fcmove
cmpb
fdivr
std
rcr
fadd
mov
fsubrp
lock
cld
xchg
in
mov
ret
in
xor
vpmaxub
loop
sar
jmp
fcmovnu
iret
stc
adc
icebp
aad
int3
xlat
clc
out
aam
hlt
jmp
into
aam
incl
loopne
leave
xchg
out
std
in
mov
out
hlt
test
int3
cmp
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
adc
jle
add
out
std
aaa
fdivrs
cmp
not
in
mov
fucom
in
mov
xchg
lock
xor
ljmp
enter
enter
rolb
xor
test
cmp
lret
cmp
rcr
rcr
cld
stc
jecxz
mov
in
xchg
xor
jmp
into
in
loopne
fcmovnb
icebp
ret
cld
ret
fsubp
call
ljmp
cmp
into
xor
out
loopne
lret
xor
filds
sub
in
mov
stc
xlat
int
into
xor
jmp
cmp
sti
div
roll
in
fstp
ss
in
xlat
shll
lock
sarb
fsubr
mov
call
lret
in
mov
aad
into
into
call
fyl2x
into
clc
icebp
out
repz
leave
mov
mov
nop
xchg
xabort
ljmp
sbb
lock
aad
repz
in
out
enter
mov
xchg
aad
aaa
xlat
ljmp
xor
repz
enter
jecxz
nop
mov
incl
xor
fld
icebp
test
fildl
sar
out
int
mov
iret
xor
rcl
ror
fnstsw
stc
cmc
dec
std
cmp
cmp
stc
vpand
cmc
in
cmp
rol
xor
cld
jmp
in
cli
xchg
mov
mov
enter
repz
aaa
into
clc
enter
cmp
cmp
fadds
xchg
call
mov
repz
ljmp
fcmovnbe
jmp
cmc
fadd
addl
jmp
addl
fdivr
enter
in
adc
shl
cmp
lret
loop
adc
into
xchg
int
xor
jmp
ss
sarb
fsub
ds
add
aam
xchg
in
leave
call
ret
int
out
call
fsubr
addb
mov
out
fsubp
rol
shl
jecxz
leave
clc
xlat
out
sti
xlat
cld
leave
repz
rol
cmp
addb
sti
lock
loopne
xchg
in
xor
fidivrs
in
fcomip
loope
loopne
cmp
test
fistl
lock
int
in
lret
ffreep
idivb
flds
out
mov
div
iret
in
sar
repnz
aas
fsubrp
cmp
sar
repnz
fsubp
test
xchg
out
std
int3
loopne
int3
fcomip
stc
xor
std
cmp
stc
std
ret
out
aad
mov
rorb
jmp
aaa
ds
out
fnstsw
sti
xchg
jmp
fxch
nop
int3
hlt
jmp
enter
aaa
xor
std
jmp
xor
shl
cld
int3
fsubrp
clc
icebp
jecxz
iret
mov
int3
lret
xor
out
xor
lret
ret
stc
incb
jecxz
in
fisttps
sub
aam
jmp
cmp
fucomp
sbb
shl
fcmovne
fucom
int
mov
out
into
jecxz
xor
int3
jmp
sarl
aaa
aam
test
test
loopne
mov
ret
icebp
std
jmp
mov
leave
cli
out
into
ror
out
aas
cmp
out
stc
jecxz
aad
out
mov
jmp
jmp
cmp
int3
cmc
shl
clc
aad
loope
ljmp
repz
or
enter
cli
shrb
aam
lret
cmp
fidivrs
addl
int3
lret
shll
loop
int3
fcmovu
addb
neg
mov
fdivr
cli
xchg
or
lret
ss
jmp
iret
sarb
cmp
cmp
cmp
div
loop
in
decb
repz
jecxz
aam
leave
cld
out
repz
repz
lock
jmp
faddl
int
idiv
cmp
repnz
fsubr
xlat
cli
test
fadds
into
xchg
enter
rcl
cmc
leave
jmp
cmp
cmp
test
test
xchg
test
iret
rolb
shl
in
cld
shr
fcomi
iret
frstpm(287
xlat
xlat
jmp
cld
mov
sar
mov
shll
in
aaa
repnz
idivl
cmpl
cli
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
clc
push
jbe
mov
jle
add
mov
fldln2
flds
xchg
xchg
loop
int3
sub
cmp
lret
into
cld
repz
call
fimull
addl
cld
fdivs
fcmove
sti
ret
ret
test
std
cli
cld
icebp
out
repnz
jmp
out
cmp
rcr
out
ret
xlat
icebp
xor
fiadds
test
mov
mov
fdiv
jecxz
cli
out
into
aas
cmc
lock
std
into
iret
test
cmpb
imul
stc
xlat
ljmp
jmp
ror
leave
fstp
test
test
cmc
ds
popl
leave
int3
xor
repz
cmp
aas
in
or
vpsubq
xchg
lock
clc
xor
rcr
xlat
out
lret
fdivr
test
fcomip
cld
incl
addb
icebp
div
aam
xor
test
int3
std
xchg
fadd
aad
test
cli
fsubp
fimull
test
cmp
shl
shlb
lret
into
out
ret
shl
mov
ljmp
mov
call
aas
cmp
in
aad
ds
xchg
xchg
mov
stc
mov
mov
iret
into
into
jecxz
in
ss
iret
cli
or
xlat
test
ds
leave
std
ljmp
ret
rcr
ffree
out
clc
icebp
std
cmp
aam
test
jmp
nop
shl
mov
fsubrp
das
leave
ror
out
out
cmp
int
test
cld
test
jecxz
cld
jmp
lret
stc
out
adcb
sar
rcl
ljmp
std
or
loope
ret
fucomip
ret
jmp
fdiv
test
ret
stc
fdivs
ror
ds
xchg
cmp
test
adcb
into
fincstp
cmc
out
cmp
cmp
aad
cli
shl
out
cmp
aad
fxch
icebp
loopne
sub
xor
xor
jecxz
loopne
in
rcr
in
aad
out
mov
out
decb
out
in
clc
in
shl
std
aam
xor
ret
cmp
lret
int3
jecxz
in
mov
xchg
ss
ss
sti
clc
cmc
in
in
aad
fcmovnb
cmc
out
xchg
imul
fisttpl
xchg
mov
ret
enter
cmp
clc
lock
out
hlt
sti
call
fildl
in
repnz
xchg
out
aam
lret
clc
das
sar
xor
aas
fmul
roll
leave
fcmovb
enter
lock
ret
cmp
ds
xor
loop
jecxz
loop
out
mov
ljmp
mov
xor
jmp
fsincos
incb
cmp
out
out
lret
mov
out
enter
icebp
cmp
into
shlb
sbb
testl
cmc
mov
aam
repnz
std
fildl
std
aas
ret
mov
mov
dec
int
mov
call
sub
aaa
rcl
cmc
lock
loopne
nop
mov
repnz
cmp
out
in
iret
rcr
sti
shl
repnz
out
flds
in
loop
xchg
out
jmp
f2xm1
repz
cmc
rcl
loopne
rcr
stc
ret
in
sbb
lea
shl
out
in
out
std
iret
clc
sar
loop
fcmovnu
cmp
out
in
sti
call
xchg
xchg
lret
aaa
rcl
cmp
out
in
repz
cli
fucomi
aad
cmc
jmp
dec
mov
jmp
out
xor
lret
test
test
adc
int3
call
fucom
lret
int
ss
rol
lds
cld
cld
jmp
xlat
aaa
loope
rcl
test
loope
hlt
xchg
cmc
test
fdiv
out
out
repnz
faddp
shl
not
aam
test
fsubr
sub
xchg
mov
sarl
fmul
xlat
cli
repz
aad
fcmovb
mov
cld
leave
cmp
in
lret
jmp
leave
cli
xor
in
rol
icebp
lret
shl
loop
fidivrl
fscale
fdiv
out
stc
test
shr
mov
lret
out
int
xor
cld
xor
xlat
repz
ffree
cmc
in
xchg
mov
in
sub
ljmp
sti
sti
rcr
out
fistpll
cmc
adc
xchg
fld
out
rcl
mov
js
inc
add
jge
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
push
addr16
mov
jle
add
mov
in
enter
cld
cmp
cmp
fisttps
lret
lret
leave
xchg
int3
repz
sti
icebp
fdivrp
ss
aas
out
repz
loopne
fucomp
cld
in
cli
test
out
out
jecxz
mov
jmp
sarl
fucomi
cmp
in
in
push
cmc
xabort
inc
out
inc
ljmp
hlt
cmp
aam
lret
stc
xlat
xlat
out
xor
fsubp
fisttpl
fcomip
in
xor
xor
cmp
in
ffreep
mov
sub
sbb
in
icebp
mov
rcr
rcr
lock
lret
sar
in
sti
mov
in
loopne
orb
enter
ss
cmp
jmp
adc
xchg
cmp
in
fildl
repz
sar
jmp
cmp
int3
incl
std
aam
sti
mov
aas
orl
in
not
xor
icebp
enter
ljmp
loope
in
loop
test
xlat
roll
xchg
rol
ror
jmp
in
clc
fdivr
repnz
mov
ror
orb
out
ljmp
fld
in
fsubr
cli
movl
ljmp
int3
out
out
ss
lock
icebp
jecxz
loope
shl
int3
mov
leave
out
int3
lret
in
mov
stc
enter
out
in
cmp
aam
hlt
cmc
enter
xchg
idiv
xchg
rcr
in
lret
xchg
loopne
lret
shlb
xor
iret
fdiv
rol
xor
fcmovb
ljmp
test
loope
repz
imul
in
rcr
ss
fdivrs
aas
cmp
fcmovb
shr
out
loop
lds
std
shl
out
ljmp
shlb
loope
test
not
aas
cmp
aad
out
mov
lret
vpaddsb
jecxz
shl
aaa
lret
cmp
stc
xchg
fcmovnu
aad
fcmovne
out
mov
jecxz
sar
enter
fcomp
idivb
cmp
into
ret
stc
or
fmuls
mul
jecxz
out
icebp
fxch
in
icebp
ror
fcmovnu
loopne
jmp
loope
fisttpll
mov
out
out
idiv
lock
faddl
aad
test
std
repz
int3
xchg
mov
shll
cmp
into
ds
ljmp
sti
repnz
faddl
in
mov
in
jmp
stc
cmc
repnz
repnz
repnz
fiaddl
mov
iret
or
int3
xchg
sti
cld
enter
call
in
fcmovb
sti
loop
addb
hlt
mov
loope
in
aam
enter
in
iret
into
lret
repz
not
clc
call
fcmove
xchg
leave
ror
mov
xor
xlat
aam
xor
std
xlat
sbb
rcr
leave
lret
cld
nop
cld
lret
in
shl
call
shr
cmc
sar
loope
idiv
fsubr
test
jecxz
xchg
fucomip
fnstenv
cli
lock
frndint
and
jmp
mov
sti
loopne
xor
lret
mov
cmp
into
ss
icebp
test
sar
rorl
mov
xchg
call
out
aam
clc
into
cmp
fcmovnu
add
jmp
out
out
call
sub
enter
call
ret
cmc
fucom
mov
neg
out
fiadds
hlt
imul
in
cli
repz
testl
mov
mov
fsub
call
mov
ret
lock
fidivrl
jmp
cmp
fcmovnb
out
call
icebp
fisttpll
cld
std
cmp
ds
ret
cld
roll
out
hlt
out
xchg
aam
xor
hlt
ljmp
rcl
std
fadd
aad
cli
stc
mov
hlt
aam
loop
fcomi
cmp
neg
lret
int
ret
loop
sti
leave
jmp
out
xchg
xlat
in
int3
jmp
addl
rol
iret
xchg
out
ljmp
std
icebp
addl
cli
clc
in
mov
xchg
lret
icebp
divb
ljmp
aaa
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
insl
leave
xchg
add
add
ds
int3
jecxz
loopne
test
loopne
fucomi
iret
mov
iret
jecxz
repz
out
loope
lock
call
fdiv
loop
stc
rcr
aad
vpsubsb
mov
sti
rolb
jecxz
fcom
xor
loop
lret
in
sar
out
test
ret
testl
xor
out
cmp
xor
xchg
mov
and
lret
fcom
loope
mov
fsincos
clc
cmp
ds
ret
shl
loopne
loop
fadd
std
in
icebp
in
out
int
fcmovb
leave
clc
cmp
in
std
ret
sarl
cmc
std
test
jmp
out
in
test
mov
xlat
lret
cmp
cmp
sti
call
sub
not
in
xchg
jecxz
call
xchg
out
xlat
idiv
aam
fiaddl
test
fildl
test
out
mov
iret
sarl
cmp
cld
roll
xchg
and
xchg
jmp
cmp
into
aad
in
ret
repz
out
shr
fisttpll
in
std
icebp
xchg
int
fcmovbe
rcl
call
fiadds
clc
loope
in
in
int
loop
in
loope
out
repnz
out
ljmp
ret
ds
loope
mov
out
fxch
cld
leave
xchg
xchg
shl
sub
sar
sarb
in
cmpl
inc
aam
jmp
iret
shl
out
ljmp
fidivrl
sti
hlt
rolb
rol
les
lret
rorb
xor
repz
aas
out
iret
rol
fprem
cli
fmul
in
int
std
loope
mov
stc
xor
lret
out
xor
icebp
fiadds
mov
in
in
fsubrp
xchg
lock
icebp
clc
sti
out
std
sarb
hlt
aam
stc
or
clc
xchg
test
fimuls
in
cmp
shl
xor
cmp
fdivrp
iret
cmp
xchg
cmp
xchg
mov
test
aas
into
ss
aad
ss
fstp
cmp
test
roll
iret
bnd
mul
out
div
leave
cmc
rcr
in
test
idiv
decb
xchg
lret
adc
into
cmp
lret
in
rcr
aas
in
mov
out
lock
sub
cli
out
cld
xor
stc
jecxz
aaa
iret
iret
cmc
aad
ljmp
fstl
int
shr
fsincos
iret
ret
jecxz
in
in
shl
incb
shr
in
ss
cli
icebp
repnz
fidivrl
in
inc
rorl
fiadds
std
out
in
jecxz
sub
out
jmp
loope
xchg
sar
stc
jmp
mov
aad
cmp
ret
enter
test
rcr
mov
std
jmp
ror
das
xlat
in
enter
aaa
fcmovnu
in
out
shl
lock
loope
in
lret
ljmp
jecxz
out
xlat
xor
idiv
fcmove
cmp
fistpll
xlat
out
rcl
in
lret
sti
shl
repz
call
cli
fcomi
fdivp
jecxz
loopne
test
test
sti
cld
in
cmc
lret
mov
fmull
div
xlat
xor
aaa
int3
ds
jmp
test
out
enter
mov
decl
out
mov
xor
out
call
iret
jmp
icebp
rol
xchg
add
incl
xchg
loopne
xor
xor
in
shr
lock
repnz
int3
xchg
and
xchg
xor
aad
in
in
xor
loopne
in
fninit
ret
fcomip
fsin
jecxz
clc
ljmp
into
out
out
repz
cld
sarb
stc
cmp
hlt
out
std
ljmp
std
in
xchg
fucomp
mov
leave
cmp
ljmp
cmp
icebp
rol
out
ljmp
incl
ror
in
jecxz
rol
leave
jmp
hlt
sti
sti
sub
mov
fsub
xchg
lret
ljmp
cld
out
add
cmp
cli
mov
test
xchg
xlat
sarb
aad
cmp
shr
cmp
in
sar
fcmovbe
fcmovnb
mov
faddl
rol
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
xchg
add
add
mov
mov
ljmp
cmpl
in
fdivrp
enter
mov
fcmovnu
in
fucomip
sar
loop
icebp
icebp
fcmovu
testl
test
call
fcoms
out
shlb
in
shr
into
cmp
fdiv
clc
out
cmp
incb
hlt
out
roll
out
in
repz
jmp
sti
cmp
jecxz
test
repz
fsub
int3
xlat
leave
test
mov
lret
in
rcl
in
aaa
int
sarl
in
fadd
fildl
lret
xchg
out
out
out
ret
cmp
out
int
cmp
loop
rcl
add
addl
out
fsincos
enter
cmp
shl
cmp
out
enter
test
call
in
fnstenv
les
enter
ret
cli
not
cmp
mul
fxch
test
enter
or
aaa
lret
neg
sub
lret
filds
test
and
or
jmp
out
cmp
std
fst
lock
icebp
loop
cmp
aam
cli
fcmovne
in
std
test
fbstp
ss
xlat
ss
icebp
out
test
in
fiaddl
out
fcmovne
aam
test
loopne
hlt
xor
cmp
cld
loope
cmp
test
aad
call
shr
decb
lock
in
cmp
cmp
leave
sti
loope
addb
out
in
out
nop
leave
nop
in
mov
in
ss
hlt
icebp
jecxz
test
aad
icebp
mov
repz
shr
hlt
out
in
ss
cmp
cmp
icebp
test
loop
mov
std
fucomip
lock
flds
stc
cmc
sti
int3
out
out
icebp
cmp
rcr
loope
in
clc
adc
loop
neg
cld
int3
out
lret
int
sarl
icebp
lock
xlat
bnd
cld
in
idiv
loopne
out
test
in
int3
in
rcr
lret
into
cmp
fcmovu
fdivrp
not
add
test
int
in
icebp
out
ljmp
sub
iret
xlat
lock
cmp
rcr
addl
out
xor
ljmp
ds
cmp
loope
cmp
adc
mov
in
xchg
neg
cmp
lock
hlt
int3
lret
int
ds
in
mul
fmul
add
cli
decb
icebp
iret
ss
leave
xor
shl
rcr
shr
into
loopne
hlt
jecxz
fmull
call
test
lret
repz
sar
aam
aam
in
std
mov
rorb
in
shlb
stc
cmp
enter
fldz
loop
fadd
xlat
ret
ds
jmp
shr
shll
fcom
hlt
jmp
loope
shr
call
clc
out
loop
jmp
sar
jmp
out
lret
shl
aad
sti
ds
lret
neg
cmpl
jecxz
fsubrp
sti
mov
iret
fcmovnbe
bnd
jmp
xor
ret
test
in
xchg
ret
xchg
mov
sar
call
fchs
in
int3
cmp
loop
leave
mov
sub
xchg
fmull
leave
into
into
rcl
cli
cli
aaa
fmul
aas
fucomip
fcmovnb
out
ljmp
fsubp
out
out
into
lret
aad
idiv
divl
clc
icebp
stc
int3
cmc
aaa
aam
hlt
clc
aam
in
jmp
fisttpll
ret
int3
ret
idiv
cmp
stc
int
fcmovnbe
test
sbb
loopne
test
xchg
fbstp
loop
into
xor
cmp
ljmp
and
mov
jmp
fisttpll
loop
xor
in
aaa
fyl2xp1
ljmp
xchg
mov
std
mov
jmp
in
fdivr
out
sar
repnz
in
add
xchg
iret
lea
out
xlat
in
cmp
cmp
xorb
mov
mov
mov
in
not
jmp
cmp
loope
faddp
addl
cmp
icebp
int
xchg
in
in
call
lret
fdivs
clc
test
aas
roll
in
nop
ljmp
in
in
ljmp
jge
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
leave
cmp
cmp
roll
test
adc
mul
xchg
loopne
in
mov
test
int3
jmp
aad
shl
cmp
aas
loopne,pt
mov
out
leave
incl
xchg
ret
sub
in
cmp
hlt
cmp
shl
out
fcmovu
loope
out
out
out
jecxz
xchg
cli
fcmovu
aam
aad
int3
fstp
test
rol
neg
xchg
test
test
icebp
repz
lret
in
in
cmp
loop
test
xchg
fdiv
sbb
mov
loopne
in
int
xlat
cmc
cld
out
loopne
or
cld
stc
out
stc
ljmp
rcl
test
out
fcomp
out
sar
lret
shl
repz
std
cmp
stc
stc
int3
ljmp
mov
ss
icebp
xor
test
add
orl
leave
out
das
cld
xlat
neg
cli
lret
loopne
in
test
jmp
ljmp
ret
aaa
cmp
ds
in
fiadds
in
out
adcl
int3
sti
fdivl
idiv
call
testl
in
cld
cmp
std
aaa
cmp
std
stc
fsub
in
fcomp
sti
cli
mov
mov
loop
xchg
loop
cmp
cmp
out
int3
hlt
lret
idivl
aad
test
faddl
f2xm1
out
lret
jmp
fcmovbe
int
hlt
hlt
cmp
aam
sbb
hlt
out
jecxz
sub
in
out
fiadds
fnstenv
sub
hlt
fstp
shl
aad
icebp
xlat
stc
std
xlat
fucomip
sbb
leave
nop
in
call
ss
into
ss
std
into
fcomi
test
xchg
fisttpl
jmp
mov
iret
xlat
xor
cmp
aam
aas
cmp
loope
jmp
out
lds
xchg
rol
repz
xlat
fiadds
jecxz
repz
mov
sti
enter
xchg
shr
jecxz
xor
xor
jecxz,pt
jecxz
idivl
fcmove
call
loopne
sbb
xchg
xor
cmc
leave
ret
repnz
cmp
cmp
cmp
ret
mul
ljmp
lret
mov
xchg
mov
int
cli
xor
ss
shl
cmp
fldln2
fmul
fcmovnbe
repnz
xchg
mul
ret
call
out
xor
rcl
clc
into
shl
push
lock
ljmp
out
sti
mov
enter
ss
cmp
icebp
loope
sti
test
jmp
jmp
jmp
xchg
sub
std
xchg
sub
out
xor
call
loop
xchg
fisttpll
int3
cld
lock
out
std
rcl
shrb
ss
stc
aas
stc
out
test
idiv
dec
in
in
std
in
lock
rorb
ss
repz
iret
lock
cmp
aad
ret
loop
clc
mov
mov
lock
xor
test
test
xchg
fsub
mov
lret
lock
repz
leave
sarb
in
icebp
cld
incb
fcmovb
in
idiv
loope
mov
jmp
repz
jmp
xor
rcr
out
fcmovnbe
mov
iret
mov
out
and
out
hlt
icebp
not
loopne
sti
in
mov
enter
and
test
not
int
fidivrl
cmp
icebp
cmp
test
aad
fdivrp
clc
ret
xchg
in
in
xchg
ljmp
rcl
lret
sarl
adc
lret
ljmp
repnz
loop
test
sti
loopne
xlat
xchg
test
sti
fiadds
hlt
call
in
ss
fdivp
lret
cmc
into
sbb
std
loop
ljmp
fucom
repz
repz
repnz
jmp
jmp
cmp
xlat
xor
loope
fsubr
fdivr
ret
in
loopne
test
nop
icebp
nop
jecxz
rcr
in
cmc
lret
shr
cmp
int
fld
xchg
jecxz
test
fmul
mov
mov
imull
aaa
out
jmp
fmul
out
out
addl
call
mov
xchg
jecxz
fcmove
cmp
fcmovnbe
int3
cmp
loop
repnz
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
sbb
mov
jle
mov
out
fiaddl
add
ljmp
aaa
fsubr
xor
jmp
les
lock
aam
repz
cmp
fdivrp
repnz
lock
lock
fsubr
ljmp
shl
ret
aad
xlat
cmc
int3
out
loope
ds
xlat
lds
orl
clc
jmp
aad
cmp
shl
and
mov
lret
fucomip
fdivrp
xor
std
fmulp
stc
int
div
adc
out
lret
in
jecxz
enter
enter
fcmovu
fcom
xor
fucom
repnz
lret
enter
ljmp
in
jmp
fldl2e
div
std
cmp
test
sar
clc
ljmp
loopne
mov
leave
clc
fucomp
or
lock
icebp
into
lds
leave
fucomp
jecxz
repnz
rolb
clc
lds
cmp
flds
fdivrp
ret
test
std
mov
mov
xchg
sub
int
enter
cmc
cmp
shl
aam
std
lds
ljmp
mov
xlat
ret
in
aam
repz
cmp
test
ffree
addb
xchg
test
int3
loop
call
enter
into
cmp
out
fsubr
int3
xchg
nop
out
xchg
nop
mov
cmp
fdivr
and
inc
clc
ret
xchg
in
in
enter
test
sti
cld
out
in
xor
rolb
mov
cld
sub
into
repz
call
jmp
mul
hlt
cmp
in
loop
lds
out
aas
lret
lret
sbb
int
aam
out
fcmovne
repnz
idiv
in
rcr
faddl
enter
std
into
iret
out
xchg
cmc
repz
into
fstpt
sarb
clc
leave
testb
fstl
in
xor
fdivp
sar
loope
lret
xlat
out
lock
ret
fucomp
lret
loop
xchg
jmp
int
rcl
cmp
in
or
aad
test
aad
fisttpll
xchg
test
ss
xor
hlt
enter
out
cmp
jecxz
jmp
std
call
repz
mov
jecxz
repnz
repz
cmc
std
aam
hlt
into
int
stc
stc
sti
cmc
cmp
lock
jmp
call
iret
cmp
movl
fdiv
in
lret
leave
xchg
orl
dec
stc
fiadds
stc
aam
neg
std
cmc
jecxz
clc
stc
out
and
iret
ror
into
fcmovnbe
sarb
cmp
loopne
addl
sti
into
int3
sti
int
repnz
xor
int
ss
shl
fiaddl
enter
mov
test
int
mov
repz
not
sarl
ljmp
cmp
lret
std
cli
in
out
xchg
fsubp
aad
iret
fyl2xp1
out
cmp
cmp
cmc
cmc
aam
cmc
out
sti
out
mov
ror
repnz
cmp
sti
iret
stc
clc
int3
shr
loopne
rcl
aam
ret
sti
enter
mov
in
aad
neg
mov
adc
cld
fucom
movb
sti
mov
ljmp
cld
xor
lock
aad
sar
fdivr
fucom
xlat
mov
repnz
rolb
cli
cmp
int
jmp
into
cmp
ret
jecxz
int
rcl
imul
xor
fdiv
cmp
stc
shl
addl
hlt
in
hlt
addb
loope
mov
ret
cli
fcomi
xor
fcmovnu
iret
rcl
sar
div
in
fsincos
stc
out
xchg
xchg
out
hlt
loop
int3
xor
xor
aas
aaa
loop
fsub
mov
ret
enter
repnz
ss
out
cmp
cmp
imul
cld
cmc
leave
xchg
ljmp
icebp
icebp
jmp
clc
fcom
cli
in
cli
std
leave
ss
roll
repnz
out
int3
fcompp
nop
lret
adcl
neg
out
out
aas
cmp
out
hlt
test
in
mov
jecxz
repnz
iret
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
out
sbb
jge
add
add
hlt
xor
in
rol
cmp
in
in
neg
rcr
cli
fiaddl
iret
out
nop
loopne
in
xlat
xlat
std
fdivr
aas
fsubp
cld
aas
cli
fsubp
ret
out
loop
std
test
cmc
std
loope
in
jecxz
aam
neg
xor
test
out
cli
jecxz
ret
stc
jecxz
xchg
loopne
aam
repz
aaa
cld
std
aaa
cmp
xor
rcl
mov
in
xchg
mov
call
jmp
xor
fidivl
xor
cld
fxtract
sti
shl
out
ljmp
test
dec
test
test
aam
cmp
repz
stc
sarb
fcom
xor
dec
cmp
xchg
mov
std
loopne
test
shr
ret
cmc
cmp
loopne
rcl
icebp
sub
sbb
adc
sub
cmp
cld
addl
mov
fildl
loopne
out
hlt
out
call
cli
push
ret
cmp
imul
test
in
test
in
filds
ret
imul
repnz
cmc
int3
clc
ds
adc
lret
out
fsubrp
sti
into
out
aad
int
aam
xor
out
cmp
fnstsw
in
aad
in
fcmovu
lret
mov
in
leave
lret
call
jecxz
repnz
rol
sar
test
out
aam
test
repz
cli
shl
ret
div
sub
in
into
out
jecxz
xlat
xlat
xor
xor
fdivrs
call
cld
jecxz
ret
loop
rcl
out
mov
rcl
cs
hlt
fmul
fidivrl
xlat
cmpl
fdivrs
incb
faddl
repz
jmp
fldz
ss
into
fucomi
xor
int
roll
xlat
out
out
shl
call
shlb
sub
lret
rol
out
inc
hlt
mov
rorl
ret
out
cmp
jmp
cmp
out
sbb
aaa
cmp
icebp
cmp
in
loope
incb
ror
lock
jmp
xor
std
rol
fnstsw
clc
cli
test
in
out
xchg
xchg
fmul
in
ret
into
shll
fdivp
ret
in
movl
out
mov
mov
ror
jecxz
not
aad
out
aam
imul
addl
loope
in
or
out
out
ss
hlt
jmp
cmp
cli
xor
rolb
addb
xchg
ljmp
fsubr
shll
xlat
stc
fstpt
rcr
out
out
fsubr
test
sar
repnz
leave
aam
out
leave
cmp
sar
ljmp
loop
in
sbb
in
loop
in
sti
fcmovnbe
fsub
test
sub
repz
out
call
cld
cmp
fcmovb
fmull
testl
xor
jecxz
fnstcw
aad
fmul
neg
div
rol
sarb
ljmp
rorb
test
cli
xorl
cli
rcl
test
clc
xchg
leave
jmp
repz
cld
out
imul
cmp
cmc
fidivrl
out
aad
loop
in
test
mov
jmp
jmp
fidivl
sti
lock
out
fistpll
mul
icebp
test
jmp
out
out
hlt
cmp
sarb
loopne,pt
sarb
cmp
sar
orb
jmp
jmp
lret
cli
fldln2
in
ss
int
test
call
jecxz
out
fsub
loop
shrb
cmp
jmp
ror
fcmovbe
lret
ret
ret
flds
int
loope
xchg
out
jmp
into
xor
fucom
fincstp
xor
hlt
into
flds
mov
xlat
and
sub
rol
leave
not
sbb
cld
fsubr
ret
in
jmp
std
icebp
ret
in
adc
iret
shlb
ret
aaa
iret
into
lret
std
fcom
fdiv
filds
fcmovnb
lret
clc
mov
xchg
mov
idivl
ret
rcl
in
lock
loop
fstp
fnstsw
test
cmp
dec
leave
out
xor
fldl2t
roll
roll
les
call
shl
lock
xlat
cli
cmp
add
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
cmp
roll
cmp
loope
cmc
test
out
cli
sub
in
lret
cmp
aad
in
cmp
cli
xchg
lret
test
fisttpl
cs
out
out
rcr
aam
cld
rcl
out
test
loope
xchg
int3
hlt
in
in
jmp
jecxz
into
cmp
fst
into
fcomip
out
loop
jmp
in
fucomi
int
mov
lret
shl
icebp
leave
hlt
in
ljmp
icebp
rcl
hlt
aam
mov
dec
lock
jmp
fsubr
idivl
sti
repnz
in
sbb
hlt
mov
std
ror
clc
loop
idiv
into
repz
fnstsw
out
leave
clc
out
enter
fimull
rcl
cmc
iret
call
aad
clc
addl
fisttpll
out
call
ror
call
or
repz
aam
cmp
in
int3
fmuls
out
clc
leave
hlt
cmp
aam
sti
stc
fdivr
ret
xlat
ror
lret
out
lret
ffreep
mov
iret
out
jmp
fsubr
xor
xor
jmp
mov
enter
jmp
shr
int
jmp
rcl
std
in
cld
stc
repnz
hlt
test
std
testl
ror
sti
out
neg
xor
jecxz
ds
in
xlat
fmulp
int
nop
orb
out
cmc
cli
xlat
hlt
sar
test
add
out
sar
jmp
adcl
fcmovnbe
sti
fst
stc
cmp
xchg
leave
xchg
mov
mov
xchg
mov
ss
lret
std
lret
incb
stc
cli
aas
hlt
std
stc
cmc
fld
mov
jmp
roll
not
iret
clc
div
in
xor
int
testb
xchg
fstp
out
out
aam
xchg
cmc
aaa
out
sti
cmp
repnz
loope
mov
in
add
hlt
shl
repz
fdivp
cld
sti
iret
dec
add
aas
xchg
loop
out
out
loopne
loopne
aam
sub
xlat
stc
out
in
rcl
test
out
cli
enter
test
in
cli
xchg
jmp
lret
cmp
call
icebp
loop
hlt
test
hlt
ljmp
mov
loop
repnz
cmp
cmc
lret
aam
cli
out
in
incb
mov
std
int
xchg
aad
iret
sub
sti
shl
cmp
jmp
cmp
cld
repz
lret
out
lock
aad
cmp
fidivrl
into
ret
out
fninit
in
ret
or
mov
test
xor
jmp
out
stc
fsubp
loop
test
jecxz
xlat
ljmp
out
int3
fadd
repnz
out
out
clc
xor
jmp
call
mov
test
mov
lock
mov
in
xlat
int3
iret
imul
enter
iret
fnstsw
rol
hlt
call
out
fiadds
rcr
out
sar
enter
out
stc
fidivrl
inc
xlat
ljmp
out
ret
mov
out
cmp
aam
xlat
cmp
lret
xlat
ret
sti
aad
jecxz
and
lock
ret
lret
lock
shl
lock
fcmovb
ljmp
in
aaa
xor
xor
cmp
icebp
jmp
repnz
loope
loope
dec
cmp
in
jmp
rcr
int3
enter
fyl2xp1
out
repnz
repz
clc
cld
loopne
sbb
in
repnz
repz
sti
cmp
iret
jmp
mov
into
loopne
orb
rcl
cld
in
fcmovu
int3
fiadds
rolb
xlat
call
ljmp
aaa
sti
ss
sbb
icebp
rol
call
div
in
orb
shll
clc
fcomi
xor
xor
jmp
stc
cld
ds
not
fcmove
test
lret
cli
enter
out
xchg
iret
jmp
jecxz
ror
fcmovnu
fdiv
flds
shl
fisttpll
repnz
in
movl
in
int3
jecxz
push
rorb
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
jnp
popf
data16
scas
add
add
jmp
out
xchg
aad
cmc
enter
jmp
idiv
clc
sti
cmc
neg
cmp
test
sbb
fadds
loopne
lret
out
icebp
aaa
cmp
shl
test
clc
cld
loop
and
sti
fiaddl
hlt
mov
ret
into
idivb
aaa
hlt
ret
out
xlat
jecxz
out
fimuls
cld
fildl
cmp
lret
shl
fincstp
icebp
jecxz
aad
aas
mov
fsubr
filds
cmc
shrl
cmp
sti
int
call
repz
aad
fcom
aad
in
cmp
mov
mov
rclb
aaa
out
lock
cmp
iret
aas
mov
loopne
mov
fadd
xchg
out
repnz
aad
lret
cli
call
repz
shr
ret
mov
out
int
shl
out
enter
sti
divl
stc
in
xchg
fucomp
fadds
mov
test
repz
xor
int
imul
sar
fmul
jecxz
fcomip
fxch
xor
mov
xchg
in
hlt
fsubrp
sub
clc
hlt
lret
repnz
sti
out
aas
mov
repnz
loope
cld
addb
out
bnd
loope
aad
fcmovnbe
aas
in
cmpb
aad
in
cmc
mov
lret
leave
in
rcr
jmp
ljmp
cli
std
shl
clc
cli
loope
in
jecxz
cli
stc
in
in
sub
jmp
shr
cmp
divb
cld
lret
sar
cmp
loopne
out
out
out
stc
mov
shl
iret
in
icebp
jecxz
div
xor
cli
call
sbb
jmp
fucom
in
xchg
loope
leave
in
cmp
in
leave
fdivrp
ror
repz
cld
out
lds
rol
lret
or
out
in
fdivr
enter
xor
sti
ds
call
xor
neg
xchg
call
repz
test
sti
lock
sti
loope
repnz
out
in
stc
idiv
lret
loop
xchg
mov
out
neg
enter
aad
in
in
test
cmc
std
test
loope
shl
xchg
lock
int
stc
fdivr
cmp
fdivrl
into
cmc
in
out
mov
call
call
in
shlb
cmp
cld
or
xchg
aam
dec
sbb
jmp
call
fcom
repz
fdiv
lock
in
incb
test
sub
hlt
in
repz
cmp
aaa
fcomp
filds
loope
enter
in
sti
ljmp
cmc
ret
cli
jecxz
clc
lock
in
cmp
jmp
ds
aad
ret
fcmovnbe
mov
cli
mov
repz
lock
jmp
clc
adc
ds
fdivr
out
in
imul
ljmp
fsubr
jecxz
out
aad
iret
aaa
out
xor
aad
mov
in
pop
leave
jmp
rcl
jecxz
sti
xor
ror
aas
rcl
ffreep
iret
fcmovbe
cmp
ffreep
test
fucomip
mov
test
mov
out
fnstcw
lock
int
fxch
test
lock
aam
mul
mov
loope
xchg
jmp
mov
ss
fsubr
jmp
repnz
int3
repz
and
mov
into
ficoml
out
fxam
les
inc
std
aaa
lret
loop
loop
out
aam
hlt
cmp
fisttps
fmull
ror
out
add
sti
cmp
in
cmc
out
in
in
loop
xchg
cs
in
aam
fidivrl
cmp
roll
mov
lock
nop
lock
in
sub
into
leave
shr
sar
shl
lock
neg
xchg
cmc
aam
fcmove
mov
loopne
leave
in
in
fcmove
fnstcw
in
std
xchg
cli
out
addb
fldl2e
repz
lds
enter
stc
sub
out
cli
rol
jmp
test
test
mov
in
out
cld
lret
cmp
cmp
out
loopne
incb
into
bnd
in
test
sub
ret
in
cmp
fcmovne
in
rcr
cli
fdivp
clc
call
xlat
lret
lret
rcl
xor
leave
cmc
out
xor
jmp
rcr
fcomip
repnz
jmp
out
rorb
iret
lock
testb
jmp
rcl
ret
fucomp
insb
fstps
add
add
add
jle
jle
sarl
testl
rcl
xchg
std
lock
int3
rol
xlat
fcomp
fcomp
aam
cmp
ds
xor
test
out
lock
fcmovne
xchg
out
out
div
shl
int
enter
lret
loope
in
adc
aas
enter
les
fcomip
ret
clc
aad
hlt
repnz
into
cmp
hlt
lock
addb
out
xchg
test
enter
leave
in
loop
adc
div
fldl
mov
repz
icebp
xor
divb
repnz
fisubrs
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
