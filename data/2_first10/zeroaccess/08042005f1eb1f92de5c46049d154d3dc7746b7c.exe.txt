push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
dec
hlt
xchg
jl
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
repnz
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
in
in
stc
not
stc
aas
sti
iret
ljmp
loope
call
rcll
fsubr
repnz
cmp
leave
enter
std
stc
cld
rol
fadds
xchg
int3
lret
in
das
int
cli
repnz
out
cmp
sar
filds
mov
fninit
iret
orl
enter
in
filds
stc
out
cli
orl
cld
ljmp
ret
xor
xor
ror
jmp
out
ds
or
aam
inc
fimull
std
repnz
xor
int
sarl
lret
xlat
loope
repz
aaa
sar
aam
shl
jecxz
lea
repnz
int3
cmp
jmp
int3
repz
push
neg
rorb
les
xor
xchg
out
aaa
repnz
das
cmp
stc
sti
aam
aad
clc
decl
addb
test
cli
rcr
lret
fdivr
ror
in
call
add
test
xchg
lret
xchg
xchg
repz
aam
leave
cld
call
jecxz
ffree
loope
enter
fisttpll
out
test
xor
into
divl
aas
loop
xchg
lock
idiv
repz
ljmp
into
fmul
sti
fld
std
out
cli
test
jmp
mov
lock
int
ljmp
sti
fucomp
in
loopne
hlt
enter
dec
std
xchg
enter
test
xor
repnz
ss
aaa
fdivr
cmp
fadd
test
rcr
fisttps
jecxz
hlt
mov
ds
out
sar
ffreep
cmp
in
iret
add
movl
nop
mov
lret
in
cmp
lret
sti
fldl
loope
test
cld
jmp
xor
out
fdivr
cmp
int3
idiv
mov
rolb
sti
int
jecxz
xchg
not
icebp
xor
int
into
std
xor
out
idivl
xlat
loopne
cld
cli
or
in
shl
lock
idivl
lret
repnz
cmp
call
out
mov
cmc
jmp
fsub
loope
sti
xchg
mov
stc
xor
lock
icebp
lret
cmp
test
out
not
int3
loop
addb
les
ret
ror
cld
out
icebp
out
jecxz
sar
ret
loopne
aam
std
xchg
ror
adc
repnz
idivl
in
cld
cmc
loopne,pt
call
fadds
fmulp
shr
aaa
lret
repnz
fadd
out
xlat
lret
mul
cmc
loope
fnop
filds
leave
in
popl
aam
jmp
cmp
int
cmp
frstpm(287
mov
call
xor
adc
in
in
ret
leave
call
test
loopne
addl
rolb
out
fstpt
in
out
fucomi
aas
out
repz
test
cmp
hlt
jmp
mov
xchg
rorl
cmp
test
ret
ret
in
jecxz
ret
aam
stc
lret
call
out
out
fsincos
iret
lret
aam
int3
repz
jecxz
ret
aas
in
in
fldl
loopne
xor
in
enter
hlt
shr
fdivrp
not
repz
ret
loope
in
cli
in
out
aam
in
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
mov
movsb
xor
add
add
jmp
int
adc
fprem
test
aad
fmuls
icebp
out
jecxz
call
out
in
aas
jmp
lock
shl
jecxz
jmp
loopne
fucomip
xchg
fdivp
jecxz
in
shr
aas
clc
jmp
jecxz
out
rcr
loopne
lret
jmp
call
rol
shl
repnz
repnz
loope
loop
ret
lock
cmp
sti
clc
fldln2
jmp
icebp
out
icebp
ret
out
icebp
imul
ds
in
std
rcl
cld
xlat
addl
aad
icebp
stc
sub
int3
lret
in
cli
aad
shl
xor
faddl
fcmovb
fildl
mov
xchg
xlat
lret
in
lock
imul
out
repz
repnz
in
neg
into
idiv
xchg
jecxz
in
fcmovnbe
xchg
jmp
sub
jmp
fcom
rcr
in
out
cmp
aad
loopne
aam
decb
test
loopne
repnz
std
cld
xor
stc
cmp
sar
in
xlat
shl
in
mov
out
xor
shr
in
cli
fdiv
aam
rolb
repz
loope
mov
call
call
lock
iret
jmp
cmp
shl
clc
xchg
addl
enter
shrl
fnstcw
loope
cmc
rorl
mov
fsqrt
lret
std
orl
sti
sti
cmp
cmp
loope
rol
loopne
aam
hlt
cmc
sub
in
test
fcomip
rol
aam
ret
int3
test
fdivrs
shl
mov
xlat
fcmovne
std
fsubr
mov
das
loop
out
ss
icebp
cmp
repnz
add
hlt
ljmp
out
roll
ss
repnz
call
cli
loopne
mov
add
sti
leave
loope
mov
loopne
repnz
fldln2
lret
xor
in
out
aam
fistpll
ret
call
int
out
jecxz
shr
out
xor
out
out
aad
loope
stc
xchg
shl
aad
stc
jmp
mov
fsubp
ss
enter
xor
sarb
lock
incb
out
sti
fsub
and
in
aad
out
rcr
clc
aas
fcmovnbe
div
fsubp
loope
cld
xor
jecxz
in
in
or
jecxz
shlb
idiv
jmp
cmp
roll
lret
ret
inc
into
filds
out
xor
into
idiv
neg
aam
shl
jecxz
fisttpl
fildl
xor
shl
xor
out
push
cmp
neg
loop
fsub
ret
ror
sti
testl
shr
jmp
aam
fdivs
ror
int
fdivr
loop
jmp
les
jecxz
xor
div
in
cmp
sti
aaa
fnstcw
aad
lret
mov
dec
incb
icebp
out
int3
fidivl
into
rcr
aaa
fstp
ds
call
ffreep
in
ret
jmp
in
cld
int
fscale
aam
aas
test
repz
in
test
lret
int3
cmp
rcr
cli
int3
rolb
fmuls
rol
in
not
lret
leave
hlt
shl
rcl
aam
lret
icebp
mov
int
test
xor
in
loopne
clc
shl
ss
rcr
fcmovbe
test
ss
out
in
fucomp
incl
xchg
icebp
cmp
in
lret
leave
cmp
test
fdivr
sti
ljmp
test
xor
lret
xor
loope
into
int
sti
xchg
ljmp
sub
jmp
aas
ljmp
enter
fadd
out
ss
repz
cmp
lock
faddp
ret
jecxz
cmp
in
aam
inc
cmp
aas
cmp
rolb
fsubr
fld
xchg
xor
in
ror
int3
fdiv
sar
ljmp
ljmp
lret
out
mov
into
repnz
fcomip
enter
icebp
sub
fcmovnu
call
lock
ljmp
xor
fcmovbe
cmp
int
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
testw
pop
jl
addb
jl
fndisi(8087
hlt
fadds
out
in
repz
jecxz
ret
cmp
xor
jmp
out
test
fcmovbe
fdivp
sti
dec
xchg
mov
xchg
les
ss
xor
out
clc
stc
fcmovu
ljmp
fcompp
mov
nop
mov
xor
les
ljmp
cli
ret
int
loope
fdivrs
push
call
in
cli
std
repnz
aaa
das
xor
int
rcl
enter
out
cmp
ds
ds
fiaddl
out
jecxz
xchg
xchg
sub
shr
sar
stc
aad
out
jmp
rol
iret
cmp
roll
xchg
sub
aaa
aam
out
std
icebp
int3
testb
hlt
mov
mov
stc
test
sub
xchg
xor
int3
lock
cmp
int
lret
test
repz
in
fmul
in
mov
fimuls
fcomip
int
lret
aam
shr
iret
fnstcw
xchg
std
in
std
mov
shr
ss
repnz
stc
loopne
not
test
test
enter
lret
loopne
fsubp
out
lock
int
repz
jmp
fcmovbe
aam
repnz
stc
testb
loopne
enter
ror
icebp
das
loop
in
fcmovnu
lret
repnz
rolb
dec
out
mov
loope
mov
iret
mov
loope
sub
cmc
cmp
aas
fnstsw
out
sub
mov
faddp
lret
idivl
test
jecxz
loope
fdivp
cmc
out
call
rcr
cld
ror
sub
ror
std
jmp
cmp
cld
rol
stc
les
cmp
jmp
sub
nop
jmp
shl
stc
clc
in
fdivrl
xor
ds
sbb
xlat
mov
fucomi
filds
rclb
fldlg2
cmp
jmp
loop
fisttps
lret
test
loop
popl
xlat
ljmp
xlat
shl
aas
xlat
leave
xchg
out
lret
out
repz
stc
call
loope
ds
repnz
in
out
mov
shr
int
xchg
ljmp
loope
stc
cmp
cmp
ret
test
fisttps
loopne
fdiv
out
lret
xlat
out
out
sbb
flds
mov
in
in
lea
repz
jmp
xlat
lret
cmp
sti
in
neg
in
call
repnz
call
xor
lret
aad
call
aas
cmp
lret
clc
cmp
xchg
jecxz
ret
cmc
leave
xlat
jmp
shr
hlt
loop
std
fildl
std
int
loop
icebp
adc
loope
out
iret
das
aaa
jmp
repnz
mov
in
ljmp
imul
aam
test
lock
std
fnstsw
push
xlat
xchg
lock
ljmp
aad
repnz
in
stc
hlt
repz
stc
ret
xchg
in
out
clc
out
ret
std
fsub
jmp
lret
jmp
xlat
xor
into
cmp
lret
test
rcr
cli
jmp
mov
sti
and
rcl
loop
xlat
int
div
cmp
xor
in
cli
repz
clc
decl
nop
test
sub
sub
xor
fcmove
lret
fmul
ror
into
sbb
loope
cli
fsubr
loopne
ljmp
stc
idivl
cmp
icebp
jecxz
aam
and
cli
test
xor
iret
int3
xor
fincstp
icebp
sar
enter
iret
cli
jecxz
xlat
leave
testl
or
mov
xor
cli
repnz
cmp
std
sar
aad
ds
repnz
mov
call
repnz
stc
int
aad
cmc
ljmp
lock
loopne
stc
xlat
out
out
leave
cld
test
loopne
ss
iret
test
adc
sarb
shl
cli
in
out
nop
into
xlat
fcomp
xor
iret
cmp
rolb
cld
test
or
shl
repnz
sub
rcl
jecxz
ljmp
hlt
aam
lock
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
or
add
cli
hlt
hlt
std
fimuls
icebp
cmc
out
in
int
shlb
cmp
jecxz
aas
hlt
sbb
fadds
out
in
in
sub
fnop
cmp
ss
icebp
aad
into
cmp
loop
testb
call
aad
das
shr
into
leave
cmp
loope
sbb
ret
and
mov
xchg
jmp
loop
aaa
out
jecxz
fdivrl
into
fsubp
out
xor
movb
fmull
jecxz
ror
cmp
not
call
rolb
cmc
leave
mov
int
aam
loop
cmp
fxtract
aam
rol
addb
jmp
lock
vpsrad
out
icebp
hlt
in
cmp
out
ret
loopne
test
leave
neg
mov
fiadds
mov
in
into
fidivrl
shlb
ds
aad
fucom
stc
sbb
clc
loopne
loop
cli
mov
lock
enter
out
lret
cmp
cmpl
enter
cld
loopne
jecxz
ror
jmp
fidivrl
fstpt
lock
clc
in
rcl
xlat
sti
stc
rolb
das
ss
jmp
xlat
cmp
shl
ds
cmp
mov
mov
cmp
mov
aad
in
xor
in
int3
fmul
std
test
repz
loope
testl
mov
cmp
neg
aam
xor
iret
sbb
lock
call
and
lret
iret
xchg
dec
sub
xlat
xlat
in
aam
lret
cmp
loop
hlt
stc
clc
shr
and
cli
in
mov
and
xor
cmp
enter
hlt
in
leave
ffreep
cmp
xchg
flds
and
out
xchg
fsubrp
das
das
jecxz
fst
fsubr
cmp
aam
roll
aam
mov
mov
out
test
out
ret
ret
xlat
ret
cmp
or
jecxz
not
cmp
fnclex
cld
jecxz
mov
out
into
ret
repz
in
clc
cld
in
into
aam
fucom
in
out
ret
fucom
fildl
loope
ror
out
ret
cmp
icebp
cli
loop
cmp
call
jmp
xchg
in
enter
in
cli
lret
fucomip
ljmp
stc
rorb
int
fsubp
out
cmc
fdivs
xlat
in
hlt
roll
testl
iret
shl
cld
mul
enter
int
cs
roll
jecxz
fst
stc
cmp
shl
shlb
fidivl
dec
int
xchg
ds
fmull
in
rol
stc
shlb
fidivrl
jmp
aas
cmp
shl
rol
ffreep
out
and
loop
cld
repnz
imul
fxch
aaa
rcr
fiaddl
leave
in
out
into
xchg
xor
hlt
out
vpminub
int3
cmp
ret
clc
xchg
xlat
out
std
jecxz
ljmp
jecxz
jecxz
repnz
cmp
call
incb
jecxz
mov
sub
incb
out
shl
xor
sti
in
icebp
fcomi
out
rcl
hlt
hlt
repnz
test
xchg
int
lock
jmp
les
jmp
test
adc
std
decl
bnd
lds
sar
int
inc
cmp
cmp
cmp
fsubr
or
lret
xchg
das
in
lret
xlat
cmp
in
cli
fldlg2
std
int
sbb
testb
enter
repz
shl
sar
clc
aam
cmp
out
shl
ffreep
repnz
mov
test
sub
fcmove
ljmp
hlt
mul
adc
jecxz
out
xchg
mov
iret
enter
fdivr
clc
cmp
sar
xlat
shl
orl
icebp
mov
loope
fmul
repnz
xlat
iret
jmp
int3
loopne
iret
aad
std
ret
fsubrp
fcmovbe
lock
repz
call
stc
rcl
jmp
cld
std
loop
rol
mov
sti
xor
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
pop
pop
adc
jl
addb
jl
fadd
sti
fsubr
in
sarb
xor
in
cli
xlat
std
xor
rcr
addl
fisttpl
ffreep
in
call
aam
cmp
loopne
out
loopne
xchg
xchg
test
rorb
rcl
out
fadd
into
icebp
shr
aam
fcmovu
in
aad
aam
int
in
call
aad
loopne
jecxz
into
xor
fdivr
jmp
lret
ret
jmp
filds
mov
fmul
rcl
ror
bnd
shl
aas
icebp
out
out
out
mov
loop
shr
lret
in
clc
xor
in
out
into
aad
std
in
int3
cmp
ds
or
lea
in
aad
aam
xor
xor
shr
repnz
fidivrs
hlt
xor
fcmovnu
in
std
fcmovne
fiadds
aam
loope
xor
lret
ffreep
repnz
sbb
div
xlat
out
ffreep
into
mov
loope
ret
cmp
clc
fdiv
fnsave
in
jecxz
cmp
aad
fprem
cli
stc
mov
sub
enter
xor
fsubp
shl
cli
out
mov
mov
or
into
fmul
repnz
int
in
ss
iret
in
sar
cmp
shl
jmp
stc
mov
out
cld
sbb
xchg
loop
out
ret
iret
fcomip
cmc
testl
fimuls
in
lret
into
leave
lock
xor
cmp
out
repnz
int3
sar
in
jmp
mov
sar
enter
in
in
enter
shl
xlat
hlt
fsubr
incl
mov
std
loop
std
mov
loop
loope
xlat
repz
call
sar
shl
shl
mov
in
jmp
out
adc
lret
shl
neg
fnstenv
ljmp
sar
mov
loope
cmc
mov
fcomi
repnz
rcl
sub
push
sti
leave
aam
mov
leave
lret
std
xchg
shr
out
aad
sub
iret
cld
clc
cmc
icebp
cli
ljmp
out
aam
fldl
mov
out
jmp
icebp
ljmp
cli
fdivp
cmp
sti
xchg
std
xlat
jmp
lret
jecxz
shl
mov
aam
xor
fucomp
shl
xlat
lret
fiaddl
loop
enter
dec
jecxz
mov
lock
ror
in
out
ss
neg
div
out
fdiv
in
jmp
test
mov
aaa
das
loopne
shll
lret
idivl
rcl
std
test
out
in
jmp
hlt
rcl
ss
xor
sti
fmulp
sti
cmp
sarl
in
cli
sti
les
rcr
hlt
xlat
mul
out
cmc
clc
repz
fucomip
div
cmp
lock
xlat
test
fmulp
fsub
ljmp
ror
enter
ss
rcl
fdivrs
rcr
aam
orb
icebp
adc
fcom
ljmp
int3
fcomp
rcl
lock
cmp
sti
loopne
sub
int
test
int3
cmp
icebp
rolb
std
lock
mov
sub
rcr
das
clc
ljmp
sarl
cmc
fcmovu
sti
enter
xchg
out
int3
into
call
test
dec
lock
add
repz
add
mov
mov
shlb
iret
in
in
in
loopne
sar
faddl
mov
mov
xchg
std
out
call
leave
cmp
cmp
or
test
sti
loopne
int3
into
lea
lret
int3
xlat
xor
fdivs
sub
stc
loope
fmull
lret
out
mov
in
div
int3
stc
sub
lock
cmp
div
fucomi
hlt
out
test
in
mov
sub
fadd
repnz
cmp
xor
lret
fucom
fildl
int3
test
in
out
xor
cmp
lret
std
cld
fmulp
out
int3
loop
ret
cmp
loopne
sti
out
and
jmp
orl
xor
in
out
aad
out
fcmovnu
sbb
ds
sbb
mov
mov
mov
jmp
aam
into
lret
rcr
fstp
les
leave
sahf
lcall
jl
shr
jmp
stc
imul
icebp
std
cmp
sarl
ljmp
xor
cli
ljmp
fsubr
aad
cmp
std
iret
cmp
sti
xlat
loop
sbb
call
cmp
in
icebp
out
fdiv
fnsave
sti
rolb
aas
out
ret
sti
shl
loopne
mov
addb
out
rcl
cmc
ss
xlat
in
roll
test
addl
lret
loopne
xor
aaa
ss
cmp
lret
in
aad
cmpb
hlt
mul
jecxz
idiv
in
in
std
lret
jecxz
icebp
cmc
shl
shll
cmp
sti
stc
cmp
cmc
sti
fcmovu
hlt
xchg
stc
int
test
in
out
int3
in
stc
stc
cmp
in
fxch
in
clc
stc
xor
out
fdivrp
xchg
into
enter
xor
cmp
jmp
aam
out
loopne
rcl
loop
cmc
ret
jmp
mov
lret
out
call
cmp
out
fld
xchg
icebp
fucomp
jecxz
lret
mov
xchg
lock
fidivrl
shl
sti
filds
clc
in
jecxz
iret
in
std
jmp
xlat
loope
cmp
fcomip
loopne
repnz
shl
repz
lret
leave
enter
loope
xor
int
repnz
cmpb
jmp
jmp
jecxz
cli
xchg
loopne
xor
xor
repz
rol
sti
ftst
idiv
jecxz
out
aas
mov
fmulp
cli
test
loopne
into
iret
ret
int3
cmp
stc
std
fcomip
ret
cmc
add
fmulp
fimuls
test
loope
xor
repz
repz
cmp
cmp
out
cmp
cmp
testl
out
xor
fcomi
xor
cmp
aad
cmp
rol
cld
clc
add
loopne
fdivr
stc
in
into
faddl
xor
sti
mul
icebp
aaa
cmp
jmp
xchg
repz
loope
out
in
xor
ror
aad
hlt
aad
out
enter
lock
aas
in
ds
jmp
call
mov
in
repnz
das
call
in
icebp
ss
cmp
vpsubusw
lret
fiadds
fst
nop
mov
ljmp
cld
stc
fst
aas
fptan
fiaddl
movb
imul
xor
cmp
out
loopne
sar
aas
rcr
ret
ret
out
enter
xchg
hlt
xor
jmp
call
cmp
jmp
test
cmc
cld
loopne
loop
dec
call
xor
in
hlt
repz
stc
cmp
ds
cli
incl
ljmp
loop
xlat
loop
rcr
lret
fidivrs
rcr
idiv
test
aad
cmp
in
call
xchg
ffreep
sar
fadd
cmc
stc
stc
int
roll
xchg
stc
jmp
ljmp
stc
ror
sub
fld
sar
clc
loopne
and
ret
mov
ds
fmull
sub
icebp
xor
repnz
aad
ror
int3
repz
out
leave
ret
mov
lock
fcoml
loop
cmp
aaa
cmp
cld
rcr
ret
xchg
clc
repnz
div
mov
jecxz
lret
jmp
int3
cmp
shl
in
xchg
cmp
mov
out
loope
les
xor
out
xor
into
out
fnsetpm(287
repnz
ret
ljmp
jecxz
mov
mov
loope
cmp
cmp
ror
cmp
ss
test
shl
call
test
icebp
fcoml
call
lret
cmc
aad
cmc
and
out
ljmp
lret
int3
jmp
in
cmp
iret
int
cli
repz
fdiv
fsub
adc
shl
mov
addb
fcmovnb
loop
sar
xor
fst
stc
ffree
test
rolb
out
lock
sar
into
fucomip
std
std
cmp
aad
aas
in
in
lock
lret
in
lret
ljmp
sar
lds
call
sar
ror
in
repz
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
fs
mov
sbb
add
xor
cmp
shl
cli
orl
mov
icebp
out
loopne
out
into
hlt
fcmovnbe
in
loope
ret
repz
jecxz
repnz
jmp
int3
in
cmp
lea
lock
aam
jmp
out
repz
movb
xchg
xchg
in
xchg
jmp
mul
iret
cmp
rcl
or
iret
fucom
adc
std
int
loop
xor
faddl
cli
sti
in
cmp
sar
std
xor
mov
decl
and
xchg
jecxz
aaa
rcl
in
clc
in
cmc
enter
ror
ret
mov
ljmp
loop
shrl
clc
cmc
aam
lock
std
out
lock
stc
fsub
mov
incb
repz
xchg
and
fadd
rcr
xor
icebp
out
cli
int
cmp
jmp
test
mov
std
fst
shl
xor
jmp
test
xor
loopne
std
cld
out
loop
ret
fmulp
jmp
ljmp
xor
clc
stc
stc
in
cmp
in
ds
std
mov
xchg
lret
xchg
shl
faddp
shl
fucomi
xor
iret
idiv
rcr
repnz
mov
int
std
cli
cld
out
xchg
cld
out
cs
xor
aam
std
call
in
aas
fcmovu
into
sti
leave
out
or
push
cld
jmp
ljmp
xor
shlb
lock
not
cmp
cmp
icebp
mov
enter
incb
sbb
das
xor
icebp
lret
out
jmp
aas
in
sti
fcompp
leave
stc
mov
lds
int
addl
rcl
cmp
lret
repz
in
addl
jecxz
fisttpll
icebp
in
cld
std
fstpt
out
jecxz
lds
in
lret
rol
std
mov
out
xor
ljmp
int3
fldl
idiv
sub
in
mov
fists
xor
cmp
cli
cmp
shr
sbb
std
fdivr
lret
fsubr
jmp
cmc
call
fucomip
cld
fndisi(8087
clc
fxch
icebp
fdivr
aad
enter
ljmp
aaa
shlb
xlat
fstp
iret
aad
out
std
fcmovnbe
inc
decb
lea
in
sub
bnd
shl
call
ror
ret
out
aas
out
std
in
jmp
xchg
mov
out
shll
iret
int3
fnstcw
shl
cmp
sti
xor
in
xchg
xlat
fdivr
int
out
xchg
hlt
in
clc
xor
jmp
roll
add
cli
fisttpll
mov
cmc
fsubr
xor
idivb
repnz
aam
rcr
sti
cld
test
jmp
enter
and
out
lock
iret
loope
xlat
or
hlt
clc
adc
aas
leave
addb
iret
cs
into
jmp
xor
rcl
fcomi
jmp
addb
in
out
into
int
xor
call
ds
faddp
iret
jecxz
rol
enter
rcr
int3
lock
out
fldlg2
clc
out
cld
clc
in
out
cmc
xor
hlt
add
loope
out
jmp
lock
iret
ror
leave
int3
cmp
fucomip
vpminsw
leave
out
iret
int3
xchg
in
xor
clc
fmul
jmp
sub
sub
sti
jmp
cmc
shr
xor
lret
ss
fstpt
int3
rcr
stc
jmp
ffreep
cmc
aad
ret
orl
xor
call
cmp
stc
cli
cmp
ss
out
cli
out
decl
orl
hlt
push
hlt
cli
repz
iret
cmc
xor
sub
loop
int3
mov
aad
mul
xor
jmp
divl
clc
cmp
out
cli
shl
test
jmp
inc
out
jecxz
out
xchg
in
cs
xor
shl
aas
in
cmc
aas
icebp
vpsadbw
test
mov
xchg
shrb
in
sarb
lret
sti
lock
and
loop
fucom
mov
aam
sub
not
test
mov
jmp
sarb
enter
fidivl
mov
or
addb
jl
out
fstpt
cmp
idiv
mov
loop
out
mov
fsubr
in
in
cmp
sarl
cli
xlat
in
ss
loopne
test
fsubp
clc
fsub
lock
in
rol
jmp
sarl
cmp
out
iret
ret
into
in
clc
out
xchg
cli
in
sti
addb
xor
in
stc
lret
xor
fistpll
lret
ret
cmp
loop
cli
loopne
fisttps
out
xor
lret
std
fcmove
aad
ret
aad
repz
faddp
loop
testb
mov
xor
div
rcl
out
icebp
xlat
fcomip
xlat
cmp
fcmovne
call
xchg
cld
xchg
out
aad
bnd
lret
in
int
ds
shl
cli
loop
cmp
out
fstp
xchg
xchg
xchg
cs
cli
xlat
imul
shl
sbb
aam
les
leave
xchg
mov
xchg
xor
out
stc
fldz
lret
cmp
push
xlat
in
decl
out
loopne
decb
lret
int3
shl
xor
in
into
repnz
fidivs
in
icebp
rcl
in
neg
fistl
jecxz
cs
leave
into
aad
hlt
in
not
repnz
hlt
hlt
fmul
call
xchg
repz
call
out
hlt
fiadds
aas
add
xlat
mov
mov
sub
ljmp
cmc
lock
cmc
sbb
out
aad
ds
movl
in
out
aaa
xlat
hlt
lock
cmp
ret
aad
fxch
lret
enter
fucom
rcl
aaa
jecxz
repz
into
hlt
rcl
aaa
repz
aas
test
cmc
cmp
cli
xchg
loopne
ljmp
in
lock
hlt
call
out
hlt
in
cli
clc
lea
lea
clc
out
cmp
shl
xor
adc
sub
cld
fsubr
clc
out
out
out
sub
iret
aam
out
ror
ljmp
loope
ret
cld
cld
jecxz
cmc
enter
cmp
in
ss
fxch
loopne
sti
ss
aad
test
mov
mov
xchg
lret
cmp
xlat
std
lret
into
out
fnstcw
in
loope
les
jmp
jmp
mov
std
cmp
imul
loope
sar
rcl
out
test
in
fsubr
inc
clc
cmp
fsubp
in
cmc
xor
in
cmc
ror
cmp
loop
out
call
fcmovbe
loopne
jmp
icebp
rcl
rcl
cmc
lret
cmpl
shl
fcomi
sti
mov
sti
jmp
nop
call
enter
aaa
in
aad
repz
shl
fcmovnu
mov
enter
in
xor
xor
lret
div
aad
aad
fbstp
in
clc
aam
clc
adc
jmp
loopne
aam
stc
repnz
in
cmc
int
rcr
out
fiaddl
lock
aam
div
shl
in
leave
call
out
stc
fld
test
xchg
loop
repz
xlat
stc
lock
test
loopne
rol
ds
jmp
xchg
xchg
sti
cli
repnz
sar
das
xor
cmp
iret
into
cmc
lret
call
aad
test
lret
or
fninit
call
fisubrs
rol
cmp
ret
xor
shl
in
icebp
fcmovnbe
shl
loope
test
stc
mov
jecxz
xor
aad
ljmp
loopne
aam
test
lret
in
into
mov
out
xor
not
jmp
into
into
ret
movl
incb
lds
xor
in
fcomp
aas
into
iret
cmp
rolb
fcmovb
ret
in
out
icebp
roll
jmp
hlt
sar
ljmp
repz
leave
mov
mov
fdivr
xchg
lret
mov
out
loop
icebp
leave
cmp
fistpll
out
in
cmp
clc
std
sbb
in
adc
jmp
out
loopne
aam
fiadds
fucom
test
enter
xchg
sub
les
fsub
int3
in
fcomi
fucom
repnz
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
inc
pop
push
sub
jl
addb
jl
xchg
mov
fmul
out
rcl
out
jecxz
xor
ror
xor
sarb
sti
aam
fcom
jmp
in
mov
out
out
aad
jmp
cmp
out
ret
fadd
mov
lret
mov
vmovntdq
aas
stc
lock
sar
cmp
enter
addl
call
test
repnz
xor
cmc
iret
cmp
loopne
cmc
cmp
cmp
out
fiadds
repz
sub
in
repz
in
cld
fucomp
xlat
lock
xor
repnz
mov
mul
cmp
in
out
enter
loopne
aas
out
ds
repz
cmp
into
fadds
fxch
testb
loopne
sub
das
in
loop
int3
repnz
out
std
std
into
cmp
loopne
shl
jmp
loop
mov
out
adcl
xor
aas
fst
cmp
test
ror
ds
sti
sti
in
in
test
jmp
xor
int3
icebp
ss
cmp
jecxz
ret
vcmppd
test
mov
shr
repz
int
call
loope
loope
cmp
loop
enter
sti
jmp
loopne
xor
call
out
cmp
out
cmp
sar
loope
fdivr
out
mov
clc
shl
repz
lret
ror
stc
loope
imul
fucomip
mov
loopne
shlb
lret
lret
rcl
sarl
aam
lret
rolb
rorb
iret
into
fldl
into
lock
into
fdivp
lds
clc
loopne
neg
call
clc
mov
lock
out
in
icebp
cmp
idiv
cmp
out
lock
out
rol
mul
in
ljmp
hlt
xor
fptan
in
repnz
lock
ret
shr
sbb
in
loopne
xchg
hlt
xor
shl
xor
jmp
dec
repnz
out
into
ret
shr
ret
clc
mov
aad
not
clc
out
shl
cmp
cmc
iret
aam
repnz
bnd
mov
cmp
xchg
out
ret
into
xor
jecxz
repnz
xor
hlt
aam
ret
sbb
xlat
test
flds
loopne
out
lds
rcr
sti
out
cmp
cmc
iret
jmp
loopne
rorl
in
aas
xor
xor
shl
aaa
icebp
lret
xor
xlat
xlat
loopne
test
ret
add
cld
test
popl
sub
int
repnz
call
cmp
lock
and
fldl
std
in
in
xor
int
std
lret
in
cli
lock
loope
fdivr
out
int
lea
xor
mul
lret
rcr
out
fcom
xlat
fstp
aas
fdivrs
fcomp
call
std
rcl
xchg
enter
out
fcmovne
int3
repz
out
in
hlt
in
idiv
leave
in
sub
fsub
out
decb
iret
out
enter
cmp
ret
in
xor
jmp
out
mov
aaa
out
in
repz
cmp
not
cmp
cld
sti
aam
rcl
cli
jmp
icebp
into
mov
cmc
ljmp
ds
cmc
cmp
fiadds
out
in
lock
in
rclb
aaa
repnz
int
shl
stc
in
in
rol
rcl
ret
fisttps
mov
cmc
lock
xlat
fidivl
int3
hlt
fst
rcl
ret
frstpm(287
repnz
enter
out
shrl
sub
sub
call
out
lock
cli
aad
ds
into
loopne
mov
aaa
jecxz
ret
aam
sar
fnop
cmp
cmp
out
in
leave
test
repnz
iret
call
lock
adc
test
aas
loopne
mov
ret
call
ljmp
in
int
cmp
shl
cmp
sbb
out
in
fcomip
loope
lock
sub
repnz
ror
jecxz
addl
ret
rorb
in
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
out
adc
jl
addb
jl
ret
jmp
mov
ljmp
ljmp
hlt
cmp
icebp
rcr
fucomi
xchg
sti
int
subl
lret
enter
jmp
lret
shl
std
out
out
test
loop
xchg
loope
jmp
fdivrp
loop
in
cs
cmc
out
jmp
fnstenv
int3
loope
cmp
shr
xchg
lret
std
mov
ficoml
cs
aam
repnz
fdivp
ffree
loop
add
ljmp
loop
fsubrp
stc
int3
out
cmp
out
sarb
fdivrs
decl
jmp
aam
shl
das
sar
fnstsw
cli
in
out
roll
test
int
mov
enter
iret
jmp
out
idivb
aaa
icebp
cmp
ret
aad
xchg
sti
or
in
int
out
cmc
repz
xor
shr
out
fld1
call
fcmovnb
out
shl
out
enter
jmp
out
mov
in
into
jmp
cmp
icebp
sar
int3
xlat
rcr
ds
idiv
xchg
loopne
into
lret
rol
ret
vpsllq
aam
in
rcr
and
out
ret
not
xchg
xchg
and
fldl2t
fnstenv
repnz
ret
ds
inc
fst
hlt
lret
iret
fsubp
sti
int
shr
loope
fsub
aaa
sar
fistpll
fprem
fdivp
test
loopne
out
fsubrp
in
out
in
shr
xor
aad
repnz
ds
aam
ret
aad
xchg
jmp
ret
lret
xlat
jmp
sbb
in
sar
fsubp
out
ljmp
xor
aad
ret
fmul
xor
push
rcl
addb
and
in
jecxz
lret
mov
aaa
ljmp
aam
int3
sti
cmc
loop
jmp
jmp
filds
into
xor
jmp
call
fcomip
fcomi
mov
fimull
ds
test
cmp
idiv
in
stc
clc
xor
out
sub
clc
into
cld
loop
cmc
ret
aaa
aam
xor
int
int3
icebp
cmc
in
in
jecxz
jmp
mov
divb
not
xor
out
stc
out
repz
test
clc
fdecstp
clc
jmp
jmp
sar
sub
shl
jmp
ds
xlat
out
fcos
call
neg
fists
das
fsubp
imul
cmp
fsubrp
int3
shr
clc
in
into
test
ret
in
shr
jecxz
mov
sti
leave
ss
aas
and
loope
test
and
jmp
in
leave
mov
cmp
std
lret
fdivr
cli
in
cmp
test
xlat
addb
loopne
icebp
iret
leave
xor
cmp
rcr
fcom
clc
test
aad
addl
repz
loopne
loopne
ror
cli
int
loope
shl
fst
fpatan
leave
xchg
in
fcmove
test
divb
call
int
fcomip
ret
fadd
jecxz
mov
iret
call
in
out
fucomi
das
cmp
into
cmp
shl
xlat
mov
fdiv
in
shl
call
xor
das
rol
xor
enter
fistpll
out
jmp
testl
icebp
in
cmp
rcr
fdivr
aad
ds
icebp
sbb
in
in
jmp
ljmp
div
sti
fidivrl
clc
rcr
cmp
into
sar
sti
call
add
cld
mov
int
repnz
aaa
xlat
enter
loope
icebp
stc
hlt
mov
or
leave
lock
icebp
aaa
icebp
shr
cmp
in
jecxz
call
int3
lret
lret
popl
int3
lock
cmp
rolb
loopne
cli
fimuls
mov
in
test
jmp
aam
cmpb
movb
enter
jmp
cmp
cmp
loopne
ljmp
lds
nop
nop
mov
jmp
into
les
rcr
fxch
enter
jl
mov
cmp
jl
addb
jl
loop
in
stc
jecxz
jmp
fistpll
cld
cmp
mov
loope
fsubr
out
xchg
test
enter
fstpt
cmp
sti
fnclex
fadd
in
fisttps
jmp
jmp
lock
in
clc
out
int3
shl
xor
in
aas
cmp
roll
hlt
orl
xchg
ljmp
iret
out
enter
aas
loope
fdiv
movl
jecxz
repz
jecxz
clc
aad
in
sti
cmc
xor
fadd
in
add
in
fcomip
mov
int3
sti
nop
out
ss
aad
out
cs
cmc
rcr
cld
xlat
mul
iret
mov
in
in
lock
lret
stc
in
fyl2xp1
xor
out
ret
cli
ljmp
mov
les
shl
int
cmp
cmp
fcmovb
fcmovnb
rorl
clc
mov
test
lock
ret
xlat
cmp
fcmovbe
xor
loope
notrack
xchg
fdiv
out
hlt
orl
jecxz
xor
cmp
out
int3
icebp
fdivrp
fprem1
cld
call
add
in
ss
loop
cmp
enter
xlat
add
mov
fadd
cli
fcmovnu
out
mov
mul
cmp
cli
in
cmp
out
cmp
cld
test
mov
out
fimull
test
clc
in
cli
sti
cmp
div
clc
aad
loopne
addl
leave
addb
lret
fcmovnu
into
sarb
cli
aad
hlt
icebp
ret
cmp
call
addl
lock
xor
int
loopne
imul
in
loopne
call
loope
in
jecxz
loopne
subl
icebp
repnz
lock
sarl
rolb
ds
xlat
loope
sti
fadd
ljmp
clc
sarb
ror
repnz
lds
test
in
int
repnz
loope
lock
in
in
into
sti
cmp
stc
stc
in
mov
std
dec
clc
call
jecxz
lock
das
fdivr
out
std
sti
roll
loop
loope
ds
fdivr
rcl
into
loop
enter
lds
call
into
cmp
bnd
out
call
iret
lds
xlat
repnz
les
xor
cli
out
mul
rorl
cmp
iret
mov
xchg
xchg
ss
sti
out
clc
clc
loop
in
add
xlat
loope
test
fdivr
mov
xchg
nop
mov
xchg
fucomip
rcr
shl
clc
clc
int
loope
roll
mov
ror
out
fucom
out
in
jecxz
shl
aam
shr
ljmp
shr
sti
in
jmp
sti
mov
jmp
test
shl
leave
fucomi
iret
fidivrl
cmp
aaa
xor
ret
in
clc
icebp
mov
xchg
into
xchg
fucomip
jecxz
cmp
xor
aad
repz
aas
xchg
jmp
int
in
test
and
out
xlat
fdivr
repz
ds
ret
xchg
clc
incl
clc
fdivrp
mov
repnz
in
stc
fptan
sar
std
rcr
rcr
loopne
loop
fsub
mov
out
xor
ret
clc
leave
xlat
test
test
enter
jmp
std
cmc
call
call
clc
fcomp
cmp
repnz
aam
repz
int3
ljmp
xchg
jmp
icebp
lret
in
neg
jmp
jmp
fnstsw
aad
jecxz
mul
fimuls
repz
hlt
sub
lret
std
fcom
std
cmp
cmp
fdivl
sar
enter
enter
iret
call
jmp
sti
call
aaa
cmp
and
fmull
rol
lret
xor
cmp
iret
cmp
repnz
sar
sar
sti
orl
das
repz
sti
bnd
cld
fcomip
fyl2xp1
fcmovnu
in
test
xchg
loopne
int
lret
jecxz
out
cmp
clc
ljmp
testb
out
fmul
in
fsubr
ljmp
dec
adc
into
jmp
enter
vpsubusb
sub
xor
mov
das
jl
addb
jl
in
hlt
hlt
stc
enter
icebp
ljmp
fisttpll
int
jmp
adc
stc
repnz
cmp
aaa
cmc
std
shl
cmp
cld
test
fmul
enter
xchg
sub
jmp
repnz
push
int3
cmp
aad
ret
leave
in
call
into
fdivp
out
xor
sub
stc
repnz
leave
adc
aaa
jecxz
ret
fld
loope
out
enter
jmp
sub
in
test
call
and
fsub
sar
sbb
mov
xchg
lret
xchg
sub
xor
sar
in
fildl
lds
out
lock
xchg
ret
out
repnz
out
xor
aad
sti
sti
rcl
addl
fisttps
in
iret
stc
lret
xor
aam
iret
xlat
fsubr
ds
std
out
roll
hlt
std
int3
stc
mov
sub
vpsllw
aam
cli
cli
cmp
cmp
fcomp
stc
fisttpll
in
loope
out
aam
repnz
icebp
fcom
imul
leave
stc
ds
sti
mov
cmc
test
mov
xor
in
shll
repz
cmp
ret
out
hlt
loop
dec
jmp
mov
int
divl
in
shrl
cmc
fdivrp
cli
cmp
cmc
add
mul
fimuls
iret
int
int
cmp
cmp
cli
cmp
into
aam
cmp
sbb
cmp
loop
sbb
out
ret
shll
aad
fxch
rcl
not
out
ret
ret
repnz
fdivr
sub
in
int3
enter
fsubr
stc
xor
in
not
jmp
int
incb
repz
mov
cld
loop
loopne
std
xchg
sub
int3
cli
les
loope
shl
loope
aad
lret
ret
fcoml
sub
stc
call
ss
out
test
lock
rcr
mov
aad
in
aad
cmp
into
sar
xor
fiaddl
out
icebp
xchg
out
mov
ljmp
clc
iret
sar
into
idiv
cmp
ret
mov
mov
jmp
repnz
cmp
iret
hlt
fdivr
cli
cmp
f2xm1
cli
rorb
xchg
repnz
in
ret
shl
cmp
xor
in
or
cmp
cld
in
int
call
int
leave
xlat
ljmp
jecxz
rolb
loopne
ret
vmovq
call
in
enter
fnstcw
mul
clc
int
iret
addl
iret
xor
ss
out
hlt
cmp
cli
iret
hlt
sbb
stc
out
test
nop
out
icebp
rcll
fcmove
frndint
sti
int
icebp
clc
cmp
rorl
add
ret
out
shlb
sar
loop
cmp
lret
sti
cli
lret
les
jmp
neg
jmp
loopne
xchg
int3
shl
jmp
int
fdivrs
in
lret
loop
xor
cli
ffree
mov
mov
call
icebp
test
cmp
fadd
ds
mov
ljmp
aam
rol
fsubr
iret
out
aad
fcomi
cmp
fmul
ret
int
jmp
jmp
out
xchg
hlt
aas
div
cs
sti
cmp
lret
loope
fsub
fcmovnb
out
stc
test
or
lret
mov
jecxz
not
cmp
cmc
rol
cmp
shr
idiv
loop
lret
push
decb
lret
fdivr
fnstenv
or
loope
cmpb
in
iret
iret
loopne
into
adcb
into
cmp
hlt
fyl2xp1
shl
xchg
xchg
dec
lock
repz
fsubp
shl
sti
cmp
cmp
vcmpss
aam
rcl
call
xchg
fucom
out
out
rcl
fsub
in
cmp
std
cmp
idivl
fcmovne
hlt
aam
mov
mov
in
out
cmc
fidivl
cmp
cmp
addb
jmp
cld
testl
rcl
loop
shr
ss
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
lea
sti
adc
xor
add
cmp
ljmp
ror
stc
in
out
in
out
mov
xor
sti
fistpll
sbb
shl
in
neg
and
fsub
xchg
cld
jecxz
ret
in
ret
lret
fcomi
rol
cmp
hlt
mov
cld
stc
loop
jmp
push
iret
test
xlat
xor
xor
int
xlat
int3
repz
fdivrp
hlt
stc
lret
test
mov
icebp
mov
fimuls
in
rcr
out
fcmovb
idivb
in
repz
ds
enter
in
call
sbb
lret
out
rcr
jmp
loope
ret
std
stc
fistpll
in
iret
ficoms
hlt
int
xor
xor
stc
stc
aaa
rcr
in
aas
fsubrp
fmull
lret
cld
cld
in
div
jecxz
xor
cmp
in
icebp
aam
aad
ret
fsqrt
add
mov
jecxz
cmp
cmpl
out
ss
faddp
addb
orb
xor
cmp
leave
aaa
cmc
leave
hlt
call
sarl
ret
mov
call
xchg
repz
jmp
jmp
cmc
std
clc
ljmp
ffreep
aam
addb
out
cmp
out
aad
fucomip
filds
not
xchg
fxch
lea
mov
les
cli
jecxz
out
test
fstp
jmp
xchg
jecxz
loop
imul
clc
sti
in
xor
std
shlb
fdivrs
rcl
test
fmull
sub
in
in
ljmp
in
shl
aas
loop
shl
fcmovbe
rcl
test
icebp
jmp
loope
xchg
jmp
shll
loopne
fcmovnu
aas
cli
fdivr
sar
stc
mov
call
loopne
ret
cmp
fildl
loopne
mov
call
sbb
shl
into
xor
jmp
out
out
fidivrs
stc
rol
test
test
test
out
shl
in
aas
ds
lret
cld
leave
cmp
and
sti
in
mov
int3
out
xchg
in
lret
sar
cmp
ljmp
fidivrs
in
lret
cld
out
cld
decl
lret
les
fst
in
cmp
idiv
repnz
call
testb
lret
in
mov
cmp
fsubrp
ffree
xchg
xchg
mov
loope
lret
fisttpll
cmp
enter
aaa
sti
rol
stc
testl
cld
leave
std
loopne
xor
jmp
ljmp
clc
cmp
into
fiadds
cmp
in
fsubr
mov
xor
aam
in
icebp
hlt
stc
lret
aaa
cmp
cld
faddp
ffree
in
loopne
loope
in
xor
lock
loopne
in
std
cmp
cmc
ds
test
xor
fcom
ret
jmp
shr
xor
sti
lret
in
stc
call
aam
ret
fmull
fcomp
adcl
loopne
cmp
call
repz
cmp
cmp
out
in
fcmovne
lea
aad
ret
call
out
aaa
aaa
out
aad
test
ret
fucomip
int3
loop
loope
fstp
out
loop
icebp
ss
repz
loop
cmp
xlat
cld
leave
repnz
out
aas
ret
cmp
int3
call
xlat
fdiv
cmc
loope
in
stc
loop
out
mov
lret
cmc
mov
shr
lock
enter
sti
out
hlt
stc
lret
idiv
fdivrp
mov
iret
xchg
cli
hlt
ror
ret
std
int
aaa
xor
lock
repz
mov
testb
out
call
icebp
sarb
repnz
int
fdivrp
in
cli
rolb
adc
ror
xacquire
shlb
jecxz
shl
std
fnstcw
int
jecxz
shl
jmp
mov
lret
cmc
xchg
lock
jecxz
out
out
ss
aas
into
icebp
loope
aam
ret
loop
hlt
faddl
iret
jmp
aad
int
cmp
cmp
hlt
mov
mov
jmp
ret
int
xor
sahf
push
lret
int
ss
addb
jl
xchg
stc
cmp
sti
loopne
rol
and
lret
das
repz
in
sar
leave
in
cmp
fidivrl
xlat
loope
sub
loopne
in
iret
in
into
das
shr
in
jmp
add
out
in
mov
shr
lret
int3
out
leave
in
xchg
xor
xor
hlt
lock
fcmove
repz
ffreep
fdivr
mov
leave
leave
xchg
filds
loope
cs
xor
in
sti
sar
cmc
icebp
loop
fimull
xchg
in
shr
xor
mul
stc
in
jmp
jmp
cld
shr
sti
cmp
jecxz
or
addl
jecxz
xor
cmp
cmp
cmc
fcmovne
stc
cld
fdivp
out
fdivrp
test
xor
into
xor
neg
fstpt
fcmovne
aad
repnz
out
mov
mov
xchg
xchg
xchg
cmc
rcl
shr
fidivl
rcl
aaa
cmp
not
fadds
call
enter
out
int3
rcl
aad
lock
lock
loopne
ds
fcmovnbe
shl
call
fucomp
xor
xor
out
out
xor
iret
cmp
shl
fucomip
jmp
loopne
leave
xchg
int3
in
shl
cmp
repz
enter
loopne
loop
ds
cli
out
fcmovne
rcl
popl
sti
std
cmp
rcr
cld
cli
and
and
in
fmuls
mov
out
sarl
cld
fcomp
fnsave
in
into
test
fcomip
div
fdivrp
dec
jmp
out
aam
in
int
cmc
cmc
std
fmul
out
fdiv
aad
xchg
mov
and
into
loop
out
repnz
lock
fiadds
jecxz
fldl
xchg
loop
aam
sub
clc
fnclex
out
in
aaa
loope
aam
faddp
cmc
sti
xchg
std
int3
out
fsubr
faddl
out
lock
fucompp
cmc
in
ret
cmp
shl
in
leave
xchg
fadd
xchg
mov
shll
lock
repnz
rcr
rol
push
loope
fdivrp
test
mov
shl
std
nop
xor
fdiv
cmp
call
int3
adc
in
stc
cld
xchg
mov
sti
sub
jmp
in
shl
int3
leave
icebp
call
rolb
clc
jmp
out
fdivr
mov
adcb
in
ss
inc
aad
int3
cmp
cmp
sti
out
stc
xchg
in
fdiv
jmp
sub
out
cmp
aad
fcmovb
cmp
test
idiv
fdiv
cmc
orl
in
xor
fxam
int
ror
out
fdivr
test
test
clc
out
leave
cmp
aam
repz
hlt
ljmp
in
test
rcl
test
int3
out
rcl
shrl
cmp
push
cmp
in
add
out
fucom
sti
in
loope
mov
sar
in
xor
sub
cmp
enter
ffree
cmp
lock
rol
clc
in
lret
int3
stc
cld
lock
icebp
fadd
enter
aaa
shr
cmp
jmp
loop
xor
fcomp
fcmovnu
jmp
fsub
in
lret
loop
in
out
leave
int
jmp
cli
in
sbb
xchg
xlat
fcomp
out
sti
xchg
dec
nop
jmp
ret
in
ffreep
cli
jecxz
iret
repz
repnz
xchg
cmc
xlat
out
mov
mov
loop
xor
in
xor
rcl
lock
ds
rcl
out
fdiv
shl
stc
iret
mov
lret
xchg
rol
int3
aam
fucomi
fdivp
jecxz
repnz
aam
call
in
test
loope
sub
ds
vpmovmskb
into
fst
stc
in
cmp
rcr
rcr
fst
fimuls
iret
cmp
shlb
iret
aaa
xlat
cmp
in
into
std
ret
xchg
loope
out
fsubr
out
nop
test
xor
ret
clc
ljmp
out
aad
mov
fmuls
hlt
jmp
lret
fdivrs
aam
loopne
fdivr
jecxz
hlt
aad
call
out
lret
xor
cmp
in
ror
aaa
icebp
enter
ret
test
lea
jmp
rcl
int3
iret
rol
shll
or
sbb
cmp
jl
mul
fsub
icebp
sub
aaa
fidivrl
sarl
out
aas
fdivrp
lock
cld
loopne
fdivr
lret
fimuls
repz
cli
shr
in
into
and
clc
lret
shl
fmul
sti
int
hlt
ljmp
xor
neg
ror
shl
loop
in
out
lret
clc
mov
enter
in
ljmp
shll
aas
cld
xor
jmp
loopne
int
xchg
xlat
loop
cmc
cmp
fnstcw
int
or
int3
call
ljmp
aad
xabort
lret
std
lret
cli
fstpt
cmc
call
cmp
jecxz
mov
lret
idivl
in
divl
jmp
out
repz
test
test
fisttpl
xchg
xor
rcl
xor
repz
fucomi
in
fdiv
sar
cmc
mov
incb
cli
rclb
xor
iret
clc
cld
fdivp
aad
std
in
loopne
add
ljmp
in
int
xchg
xor
xor
fnstcw
imul
cmp
icebp
sarl
out
fucom
mov
xchg
mov
xchg
out
rcl
not
repz
cmc
fdivrl
out
xlat
sarl
in
fcmovnbe
mov
iret
in
fucomip
addl
into
leave
sar
sti
filds
sbb
icebp
out
xor
clc
shlb
hlt
icebp
aad
call
into
cld
jecxz
sti
test
aam
xchg
jecxz
mov
in
shrb
fucomip
fcmove
rcr
xlat
fucomp
cmpb
cmpb
lds
shr
cmp
hlt
repz
call
xlat
cli
aad
std
std
loope
mov
cld
fcomp
int
jmp
xor
fcmovnbe
shr
cmp
fcom
jmp
shl
lock
out
fnsetpm(287
xchg
fstl
fsub
in
call
aad
jmp
xlat
mul
addl
mov
test
repnz
test
repnz
lret
cmpl
sti
test
aam
cmp
fcmovb
xchg
nop
repnz
das
fcmovnb
rcr
lock
aaa
addl
loope
mov
in
lock
test
shl
in
jecxz
call
cmp
flds
call
nop
xchg
cmc
xchg
xor
sub
icebp
fcmovbe
cld
shlb
fnstcw
ret
sar
ljmp
and
into
xor
int
in
sar
into
fcmovbe
aad
sarl
cmc
call
int3
out
faddl
repnz
aad
repz
out
xor
fistpll
sar
lret
fmul
fimuls
icebp
cmc
lret
aam
out
sti
hlt
iret
cmp
stc
ds
aam
test
fcmovu
in
loop
xchg
repnz
ret
ljmp
aas
cmc
cld
int
into
fcmovnb
in
jmp
or
repz
aam
xor
int3
neg
int
loope
repz
in
add
inc
ds
loopne
cli
int
std
shlb
in
cmc
leave
out
clc
fdivrs
in
roll
cmp
cmc
in
fmuls
enter
not
ss
clc
cmp
aaa
idivb
fdivrl
sti
mov
in
out
clc
fcomp
loope
cmc
mov
into
not
leave
rcr
out
icebp
leave
fcmovne
cmp
sarb
testb
call
loopne
out
cmp
cli
cmp
cs
lret
std
int3
in
cld
xchg
jmp
loop
imul
in
xchg
loope
out
stc
into
ds
cmp
aas
faddl
call
call
fmull
out
in
roll
aad
test
addb
clc
loop
into
xchg
lret
les
call
into
aas
aas
repz
loope
rcr
xlat
std
fcompp
out
jmp
xor
nop
lret
loope
idiv
enter
aad
fcomip
cld
cmp
sti
rcr
lret
xchg
faddl
aaa
loop
aad
xor
sti
cmp
stc
cmc
leave
rcr
mov
std
call
out
loope
rcl
cmp
icebp
enter
ss
icebp
frndint
or
loopne
mov
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
js
shlb
jl
addb
jl
jmp
in
int3
icebp
call
int3
ss
incb
jmp
and
ret
loop
loope
test
leave
xchg
test
ret
out
shl
clc
repz
ret
fdivrp
lret
inc
rol
in
test
jmp
fscale
shr
in
rcl
ffree
hlt
aas
in
mov
shl
repz
out
icebp
clc
clc
out
xor
int
lock
out
add
in
and
repz
hlt
cs
repz
faddp
ret
lock
fstp
jecxz
ret
jmp
loopne
orl
cmp
cmc
idivb
div
loop
ret
aam
in
add
jmp
in
out
mov
loop
lock
in
repnz
iret
loope
out
aam
fcmovnbe
std
fsub
out
jmp
shl
loop
xor
xlat
out
iret
aas
sar
fsubrp
idivl
clc
clc
loopne
in
loopne
xchg
std
sbb
cmp
repnz
lret
shr
sbb
ds
jecxz
ret
clc
lret
xrelease
jmp
xor
out
icebp
fxtract
out
xlat
adc
std
mov
lret
cld
test
ljmp
icebp
cmp
icebp
cmp
adc
test
aad
in
ret
xchg
loopne
iret
test
xor
shl
loop
divl
cmp
ds
in
ret
clc
out
repz
or
mov
shll
repnz
int
cld
lret
loopne
sar
fcomp
out
xchg
std
fucomi
mov
lock
fsubr
ss
aaa
bnd
fneni(8087
loopne
fsubp
rcl
in
loop
loope
faddl
test
out
test
xor
idiv
aam
loop
test
xchg
jecxz
add
cld
call
int3
jmp
jmp
shr
addb
sti
lret
in
std
or
sub
sti
leave
enter
repz
lret
sar
out
repz
cmc
out
out
nop
xchg
out
aaa
in
out
call
fdivrs
aad
int
repz
test
dec
call
xchg
shl
in
sub
in
ljmp
ds
fsubp
ljmp
leave
in
rorl
in
std
cmc
out
cmp
ds
repz
mov
mov
in
fcomp
out
into
lret
mov
test
not
cmp
and
loope
out
jmp
fsub
in
lret
call
loop
int3
ss
aad
call
out
jmp
out
jmp
ret
int3
lret
jmp
sub
in
hlt
hlt
aas
enter
rolb
fsubp
in
loopne
iret
int3
enter
mov
ret
rcl
xor
xor
aad
fdivp
cmp
ret
jmp
testl
xor
or
fdivp
ret
repz
jecxz
xchg
mov
lret
ret
ror
out
in
in
repnz
stc
cmp
repnz
adcb
ljmp
mul
rcl
addl
fsub
shr
fdivr
std
jecxz
fimuls
leave
out
cld
out
out
lret
sbb
shl
loope
stc
in
in
roll
icebp
call
in
lret
div
cmp
test
jecxz
test
fsubrp
loope
int
enter
not
enter
cli
hlt
cli
in
cld
fstpt
test
mov
leave
iret
xchg
lock
xor
icebp
div
std
xlat
cmp
jmp
int3
lret
cmc
mov
and
ljmp
int
cmp
divb
sarl
loope
lock
ret
mov
roll
into
int3
int3
shll
ror
dec
fcmove
out
loop
xor
jmp
xor
lret
rorb
hlt
int
aaa
int3
call
in
cld
repnz
in
out
int
ljmp
cmp
into
int3
loope
aas
in
mov
fxch
cmp
int3
xchg
sub
xor
cmp
leave
xlat
cmp
sarb
fld
aas
neg
into
mul
fcomp
std
sbb
repnz
dec
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
out
xor
ljmp
iret
jecxz
stc
aad
out
ret
ret
ffree
icebp
fimuls
divl
aad
xor
ljmp
cmpl
orb
cli
fmul
xchg
rol
cmc
std
call
iret
ret
fdivr
ds
mov
into
ror
xchg
shl
ljmp
aam
add
rol
fcmovnb
mov
mul
incl
loope
jmp
cmp
cmp
cmc
jmp
jmp
mov
cld
ror
lret
ror
xor
icebp
loope
in
jecxz
shl
std
fsincos
decl
rorb
xor
cmp
in
jecxz
fstpt
test
xchg
out
int3
ljmp
aaa
fcmove
into
cmc
repnz
in
aam
shl
lock
ljmp
decl
ss
call
shl
in
cmp
loop
ret
xchg
in
jecxz
mul
cmp
xlat
hlt
xor
lock
cld
ret
in
fmuls
xchg
xchg
das
repnz
in
cmc
stc
sti
repnz
ljmp
stc
in
add
jecxz
mov
into
int
leave
enter
cli
aaa
iret
cmp
sar
xlat
int3
test
loop
jecxz
int
sti
int3
stc
cmp
rcr
out
xchg
sti
jecxz
in
in
stc
rcl
cmp
aas
ds
xchg
xchg
xlat
test
call
rcl
cs
hlt
das
sti
cld
xor
cmp
loop
jmp
mov
sti
jmp
vshufpd
lret
int
fcmovne
icebp
loop
out
aam
fiadds
in
std
not
aad
enter
out
cld
cmp
rcr
shl
hlt
in
xchg
shl
iret
out
jmp
and
add
decl
sub
int3
mov
rol
icebp
xor
ljmp
adc
loop
rorb
mov
cmc
jmp
xor
leave
out
dec
ds
cld
aas
test
jecxz
std
cmc
clc
xchg
fcoml
mov
out
aad
in
shr
cmp
aas
div
sar
repnz
jmp
stc
jmp
out
hlt
ffreep
ljmp
aaa
fcmovnbe
int
fdivp
rorl
jmp
out
jecxz
xchg
cld
fucomip
cmc
fdivr
in
xor
stc
fsincos
aad
fsub
cmp
loope
enter
pop
in
xchg
xchg
lock
jmp
lock
aad
addl
xchg
faddp
ds
sti
fldpi
aad
cmp
loope
ljmp
ffree
add
xchg
cld
jecxz
sub
lret
int3
in
not
cmp
repz
fucomi
test
inc
enter
fsubp
xchg
enter
repz
stc
lret
cmp
rcl
fcmovb
test
in
fxch
test
loope
loop
shl
aam
cli
fcomi
ds
loopne
fdivrs
lock
test
xchg
xor
in
das
cli
cmp
jmp
faddl
mov
fsubp
or
cld
rclb
ret
cli
lret
lret
hlt
rcr
fpatan
fcomip
sti
neg
cmc
fcmovb
fmul
in
test
mov
aad
int
div
fidivl
ror
aas
sarb
idivl
clc
ret
repz
shl
xlat
mov
fdivr
enter
aaa
xor
iret
xor
cld
clc
loopne
jecxz
filds
sti
loope
mov
lret
ss
lret
cli
loope
ret
ljmp
xchg
out
out
test
out
repz
hlt
xor
lds
mov
mov
decl
jecxz
les
cmp
cli
fdiv
sti
fsubp
in
rolb
out
test
cld
int3
in
jmp
enter
iret
std
sbb
fld
xlat
fcmovu
in
loope
mov
or
xor
iret
mov
jmp
jmp
rcl
rol
fstp
jg
xchg
enter
add
jmp
xlat
shl
repz
inc
fmul
xabort
leave
loope
mov
rcl
in
loope
cmc
shl
shlb
mul
clc
cld
sti
incb
lds
ror
fldl
enter
fsub
jmp
icebp
loope
xlat
testb
enter
test
jmp
xor
ljmp
addl
fucomip
in
ffree
cld
sti
xchg
loopne
ljmp
xor
shl
idiv
sar
into
cmc
lock
mov
leave
adc
in
in
fcomi
xor
stc
out
int3
rcl
sti
aas
xchg
fisttpl
sub
out
test
jmp
shr
fsubr
ret
in
repz
lock
in
mov
out
enter
cmc
int3
enter
enter
into
sti
ss
sar
movl
leave
lret
jecxz
lret
sti
rcr
int3
faddl
jmp
int
lret
mov
in
xor
out
out
cmc
int3
shl
cmc
fcmovnb
cmp
test
mov
xor
xor
xlat
test
cmp
cmp
not
xchg
mov
jmp
iret
std
fucomp
xchg
xor
in
sub
lret
enter
ret
repnz
addb
sti
loop
and
repz
out
into
cmp
aad
int
aaa
fildl
test
sbb
cli
jmp
rol
xor
fst
rol
fcomi
out
cmp
out
aad
ffreep
xchg
in
loope
xchg
fdivs
in
lock
lret
std
int3
int3
fcmovb
frstpm(287
aad
xlat
xor
ficoms
in
icebp
cmp
cmp
into
iret
xchg
aad
repnz
loopne
nop
lock
out
shr
repnz
sub
div
rolb
fcmovnbe
out
call
mov
xchg
cli
filds
iret
int
ljmp
sarl
sarl
cli
sti
std
hlt
fisttpll
jmp
out
ror
clc
repz
repz
cli
xor
incb
ds
out
cld
jmp
out
ss
stc
jmp
out
cld
xor
in
cmp
fucompp
and
std
cmc
out
in
jecxz
sar
fcmovne
repz
jecxz
rcr
aad
cmp
cld
fildl
clc
int
int
sub
clc
ror
in
xor
addl
fiadds
std
mov
or
lret
ret
jmp
into
in
test
test
jmp
incb
xor
loope
xor
fmul
sarl
in
shl
in
test
loop
mov
imulb
cmc
jmp
neg
leave
iret
icebp
enter
sbb
cmc
in
in
cmpl
adcl
lret
test
aaa
lock
cld
loope
std
int
xlat
lock
rolb
out
xchg
rcr
icebp
xor
jmp
in
jmp
ds
lret
fimull
dec
out
in
repnz
xor
sar
ss
icebp
lock
mov
xchg
in
fsub
out
ss
hlt
repz
repz
fcomp
out
out
xchg
add
out
xchg
shl
shr
fsubr
into
xlat
enter
xor
aad
inc
fldl
loop
out
out
xchg
nop
xchg
int3
out
int
out
in
sti
aas
cld
shl
cmp
shl
hlt
fisttps
icebp
icebp
ljmp
out
ss
stc
loopne
cmp
aad
test
out
xchg
out
fcmovne
nop
out
test
int
out
fidivrs
fidivrl
or
icebp
jecxz
std
out
loopne
sti
fistl
loope
lret
idivl
dec
in
cmp
jecxz
fsub
fcmovne
jecxz
mov
leave
call
in
in
leave
int
aas
loopne
adc
call
mov
or
fiadds
out
ljmp
lret
fsub
out
test
sbb
jmp
in
int3
xchg
iret
aam
jmp
cmp
lret
repnz
lea
mov
jmp
mov
lret
fnstenv
stos
adc
addb
jl
shl
loop
les
lret
loope
in
aam
fldz
lret
cmp
rolb
xlat
jmp
cld
in
mov
cli
jecxz
ljmp
repz
cmp
lret
aas
in
jmp
in
fcmove
icebp
out
call
out
aad
aad
std
hlt
aam
jecxz
loopne
hlt
xchg
jmp
cmpb
cld
cld
call
cs
int3
jmp
cmp
fxam
fstpt
out
hlt
xlat
fldl
jmp
ljmp
repnz
fcmovu
in
fcom
mov
lret
fcmovbe
imul
in
int
iret
call
sti
repnz
int3
cmp
cmp
aas
test
rol
repz
cld
out
mov
jmp
fmulp
xor
ror
aam
cmp
aas
int
into
mul
loopne
aam
mov
in
iret
mov
cs
into
aam
fldz
hlt
aas
sbb
cld
std
fcomi
test
xchg
out
test
out
in
jmp
in
lret
iret
rcl
in
fincstp
std
shl
loop
xchg
repz
mov
out
xor
in
lret
rcr
fst
xchg
xchg
ret
enter
leave
jecxz
in
xchg
shl
in
repz
call
int
into
lock
shl
fcmovbe
ret
vpsraw
mov
in
int3
iret
das
jmp
shrl
aam
cmp
aaa
jecxz
add
out
in
loope
into
lock
in
shrl
div
repnz
ss
sar
adc
stc
rcl
aad
mov
cli
nop
jmp
out
in
jmp
xlat
xor
fidivs
sar
aam
ret
cmc
clc
enter
jmp
cld
repz
clc
fsubr
idivl
iret
add
ret
ret
test
or
leave
fsubp
or
cs
aaa
in
int3
repnz
rcr
rol
in
jmp
test
iret
fcmovu
icebp
lret
in
fcmovnu
lock
shl
jmp
rol
idiv
cmc
loope
cmp
orb
ljmp
jmp
sar
clc
shl
in
rcr
fcmovbe
fcmovu
loop
out
xchg
nop
ret
cmc
iret
xor
cmp
repnz
cmp
cmp
fsubp
lea
loop
in
test
icebp
loope
lret
sti
sarl
ds
ljmp
xlat
aad
sti
fcmovnu
xchg
out
rol
enter
in
xor
ljmp
aad
cli
rcl
loopne
jecxz
inc
not
test
in
lret
int
iret
in
in
xor
div
iret
sarb
repnz
int
int3
icebp
mov
jmp
int3
sar
cli
fcmovnu
shl
into
shl
out
test
mov
mov
adc
lret
fsincos
lock
cli
fistpll
xor
cmp
test
fsubp
ljmp
in
in
shl
in
sti
ror
into
call
aaa
loope
into
faddl
leave
clc
ljmp
ljmp
ror
ljmp
loope
fcomip
cmp
leave
fsub
int3
or
repz
clc
cmc
cmp
iret
cli
cmp
adc
sti
mul
jecxz
fucomp
loopne
xchg
loopne
xchg
iret
out
xor
loopne
into
repnz
cmp
leave
rolb
movb
in
mov
xchg
loopne
int3
rcl
xlat
repnz
div
sti
fildl
icebp
jmp
mov
loope
aad
jmp
out
cmp
repz
out
out
int3
fldl
hlt
mov
jmp
loopne
shl
in
repz
aaa
aaa
cmp
out
sti
in
lock
cmp
out
cmp
fiaddl
mov
sbb
fcoml
enter
lock
fdiv
fucomp
cld
ret
fildl
enter
lea
imul
cmp
fcmovbe
cmp
cli
cmp
in
xchg
enter
nop
xchg
ljmp
in
imul
fcmovne
test
aas
out
in
mul
jmp
fldl2e
idiv
xor
iret
jmp
shl
in
in
out
repnz
cmpl
into
aas
loop
rolb
ror
shl
lock
cmp
fdivr
cmp
rcr
in
lock
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
xlat
leave
out
fimull
iret
repz
ss
jmp
iret
lock
jecxz
cmc
sti
repnz
fucomip
fstp
loopne
mov
ljmp
loop
xlat
fdivr
cmp
rolb
jmp
xchg
leave
sub
jmp
into
cli
cmp
xlat
xlat
into
loope
ret
rcr
sbb
xlat
popl
out
icebp
aad
in
cmp
aad
fucom
loope
cmp
loopne
ret
stc
stc
in
xchg
in
enter
cmp
into
fnstsw
cld
cld
aad
aad
clc
out
ret
std
hlt
jmp
mov
jecxz
mov
leave
int3
neg
fstpt
in
test
lock
leave
out
xchg
std
into
out
out
mov
into
in
iret
fnstenv
idivl
cmp
loope
rol
loopne
in
fsubp
xchg
lret
jmp
shl
jmp
cli
xor
in
int
lret
fld
test
clc
out
idiv
loope
fimuls
loop
xchg
into
sar
ret
idivl
xor
cld
imul
cmp
xchg
mov
addb
xchg
xlat
in
idiv
shlb
clc
repnz
aas
in
aas
xchg
lds
int3
loop
out
out
in
enter
repnz
out
clc
iret
cld
repnz
add
stc
in
jecxz
dec
iret
sti
int
shll
ret
repnz
cli
xor
fcomi
cli
fld
loop
test
mov
ret
in
fdiv
out
out
ss
stc
aam
idivl
repz
repz
fstp
orl
mov
jmp
out
ljmp
cmp
cli
mov
loope
or
xchg
xlat
sarl
jmp
in
icebp
aas
fucomi
xor
xchg
in
fisttpl
fucomi
out
div
in
ss
rcr
rcl
aad
mul
test
fildl
jmp
repnz
out
icebp
fcmovnbe
aad
ret
in
ffreep
lret
int3
mov
enter
lret
out
fldpi
cmp
int
stc
cmp
ret
aam
stc
std
repz
out
shl
iret
icebp
ret
ror
jmp
shll
fdiv
in
stc
aad
fsub
loopne
int
leave
adcl
out
cli
repz
aaa
fucom
aas
cmp
xchg
in
fcmovu
rcl
xor
into
sub
aam
sar
stc
cmp
ffree
out
out
cmc
cli
lds
orb
ret
int3
lret
int
in
loope
repz
cmp
call
sub
enter
fstpt
jmp
ds
ror
ret
test
loopne
cli
mov
imul
addl
shlb
enter
cmc
int3
xlat
rolb
test
out
fucom
test
xor
stc
hlt
fldz
shl
into
test
into
xlat
repnz
cli
mov
loope
loop
loop
lret
sub
int
cmp
xlat
ds
sti
cmp
mov
fcomip
fdiv
loopne
int
call
call
repnz
hlt
cmc
cmpb
iret
rcl
loop
fdivr
cli
mov
leave
rcl
shlb
test
out
loopne
and
xchg
lock
lret
in
cmp
cmp
fcomi
fcmovnbe
lock
xor
fsubr
mov
test
jmp
shlb
shll
out
cmp
int3
cmp
adc
icebp
loope
lock
jmp
fcmove
in
fsubr
shl
xor
cmp
cmp
icebp
std
dec
into
out
cmp
rolb
mov
stc
shr
mov
fnstenv
aam
sti
enter
cld
rcr
out
lock
fxch
stc
xchg
mov
ljmp
icebp
aaa
cmp
fdivr
shr
cmc
fadd
loopne
in
out
nop
iret
rcr
enter
fdiv
fiadds
neg
std
fisttps
loope
mov
test
aaa
out
sti
fistpll
std
std
ss
cmp
sar
clc
mov
out
clc
out
xchg
fisubrs
xlat
lret
xor
in
sti
rol
in
xchg
sbb
shl
xlat
movl
jmp
jmp
ret
lret
enter
dec
div
xor
addb
jl
cli
xchg
mov
in
leave
imul
lock
sti
sbb
cmp
in
xchg
jecxz
in
out
lock
jecxz
out
call
cmc
ss
ret
in
jecxz
and
int3
mov
xchg
mov
shll
clc
rol
iret
xlat
stc
ret
cli
xrelease
jmp
leave
sti
in
out
in
in
shl
cli
xor
icebp
cli
call
clc
int
rcr
xchg
ret
xlat
lock
in
jmp
into
int3
cld
ret
faddp
loope
cld
roll
call
lock
repnz
out
call
out
jecxz
add
les
lret
aam
loopne
sti
sub
repz
roll
fcmove
in
and
or
repnz
lret
ret
stc
stc
std
fstpt
sub
hlt
out
and
cld
stc
repnz
in
cli
fstl
icebp
cmc
in
repz
in
ror
stc
roll
xlat
adc
test
out
lock
sar
cmp
fidivl
aam
std
vpmullw
in
sar
stc
test
ret
lret
int3
repz
xlat
icebp
xlat
aam
cmp
test
out
cmc
ljmp
mov
xchg
repz
div
fidivs
in
xor
cli
loopne
int3
mov
cli
std
iret
ret
out
cmp
cmp
in
into
in
adc
fldz
adc
shl
ljmp
out
imul
aam
in
in
out
cld
cmp
clc
cmpl
ds
call
ljmp
loop
jecxz
leave
repz
jmp
out
aad
cmc
xlat
cmc
test
sbb
out
rcl
xor
jmp
jmp
repnz
xlat
fiaddl
fcmovnu
out
into
popl
sub
cmc
lock
fdivr
ror
loope
xlat
into
fsubp
xlat
idivb
fisttpll
xor
ss
icebp
into
fcomi
clc
out
xlat
repz
xchg
std
test
xor
in
enter
cmpb
xchg
stc
jecxz
enter
fsub
jmp
icebp
ss
xor
sub
xlat
aas
cmp
clc
cmp
adc
sar
int
clc
lret
loopne
mov
roll
xor
aam
out
int
std
sbb
loope
cli
leave
or
ljmp
in
sti
aaa
xor
xor
in
in
jmp
sbb
std
cld
lret
lret
sub
stc
not
cld
idivb
in
clc
loope
hlt
mov
mov
sub
decb
jmp
jmp
lret
faddp
cld
cmp
std
inc
out
mov
mov
sti
fcmovnb
int3
xchg
call
fmul
cli
out
lock
cmp
int
loope
sarl
aam
ret
enter
xchg
jmp
aaa
fcmovbe
call
or
xor
rol
faddp
lret
mov
addb
rcl
fcmove
shl
cmp
cmp
cmc
in
cmp
mov
out
cli
cld
enter
ljmp
cmp
sbb
hlt
fst
sarl
and
enter
cmc
rol
repz
jmp
fcomp
sti
repnz
fldl
mov
fucomp
lock
hlt
in
out
xor
lret
ss
cmp
in
cmpb
fyl2xp1
neg
xchg
movb
clc
fninit
hlt
cmp
leave
fucomp
out
repnz
imul
test
mov
orl
int
imul
cmc
enter
enter
fcmovu
loop
rol
xchg
cli
mov
clc
call
lock
hlt
aad
int3
leave
cmp
aas
xlat
cld
cmc
fcmovnbe
loopne
cld
fsub
stc
test
in
nop
out
cmc
out
jmp
hlt
icebp
call
repnz
ret
xchg
repnz
call
jmp
aam
call
hlt
shl
lret
int
call
fcmovnb
cmp
ljmp
jecxz
das
xor
int
rcr
lret
sar
aad
fsubp
shl
iret
mov
ror
jecxz
inc
or
sahf
add
add
rcl
aad
lret
enter
mov
jl
addb
jl
icebp
aaa
sub
aad
hlt
aas
cmp
jecxz
out
fcomp
ret
in
repnz
xchg
icebp
xchg
out
das
cmp
cmp
in
into
lret
cmp
sarl
sti
ss
mov
lret
rol
fsub
loop
mov
sbb
cs
xor
cmp
ljmp
loope
ret
loope
icebp
rcl
or
sub
fistpll
repnz
shl
rol
repnz
in
mov
jmp
mov
shlb
lds
fcomp
sub
cmp
xchg
lret
flds
cmc
aad
xlat
cmc
divb
enter
fchs
lock
lock
ljmp
int
mov
fcom
lret
icebp
ss
div
stc
repz
in
mov
fmulp
lret
int3
loop
in
lock
out
enter
int
icebp
cmp
jecxz
jecxz
xchg
sti
icebp
rclb
enter
jmp
fidivl
in
jmp
leave
add
loop
xchg
jmp
xor
aad
cmp
jecxz
les
fucom
in
test
in
loope
cld
jecxz
stc
cmp
xor
lret
aad
clc
int
fsub
xlat
xlat
repnz
movl
jecxz
test
ss
sub
faddl
iret
out
out
in
xor
jmp
leave
xor
clc
std
out
lret
ret
sbb
addb
xchg
out
das
int
aam
cmp
leave
aas
lret
xrelease
loope
in
out
xchg
jmp
sti
xor
xor
repz
sarl
stc
fsubr
lds
jmp
fsubrp
loop
repnz
cmc
das
in
xor
cmp
sarb
fld
mov
fiaddl
rcr
hlt
xor
ljmp
test
ret
std
fdivr
sti
in
ret
hlt
out
fdivr
icebp
mov
mov
xor
int
stc
jecxz
jecxz
out
loop
mov
in
xchg
xchg
xorb
xor
iret
fadd
icebp
repz
cmp
fcmovu
cmc
ret
aas
in
fld1
int3
cld
mov
xchg
jecxz
enter
fucomp
jmp
out
int
in
repz
sti
jmp
in
icebp
faddl
xor
jmp
cli
sar
xlat
sbb
aam
ret
lret
fisttps
ss
int
cmp
cmp
clc
in
filds
lret
out
icebp
into
fisttps
leave
ret
out
xor
fcmovu
int
cli
shl
int3
aam
loop
call
fcmovnu
icebp
fsubp
orb
neg
out
jmp
lret
idivl
loop
repz
ret
fimuls
cli
fcmovu
sub
xor
cmp
repz
sar
loop
hlt
in
fcmovnbe
loopne
out
fsts
jmp
cmc
sti
lret
repz
cli
ss
fsubr
test
test
roll
mov
in
in
aaa
enter
fxtract
icebp
ret
cmp
icebp
repz
sub
cmc
jmp
out
ret
into
in
rcll
repnz
shl
fdiv
sar
movb
into
mov
nop
jecxz
ss
repz
lret
in
ljmp
aas
cmp
out
cmp
jecxz
sub
repz
fst
int
hlt
cmp
in
add
leave
in
cli
fdivrp
mov
aad
enter
cmp
icebp
clc
sti
jecxz
xlat
sti
test
in
call
nop
call
out
into
shr
cli
icebp
fcmovnu
repnz
fcmovnu
cmp
or
xchg
std
in
repz
fdivrs
fmul
sar
into
ret
faddp
in
test
fxch
jmp
iret
ret
faddl
jmp
das
xor
fst
idivb
test
fsubr
mov
iret
fucomi
mov
hlt
in
cmp
sti
fcmovbe
hlt
std
repnz
cli
les
ret
jmp
enter
aad
aad
aaa
rol
hlt
jmp
int3
test
cld
mov
in
loope
call
stc
aad
dec
clc
xor
add
jmp
rol
rcr
jbe
fldenv
adc
addb
jl
idivl
cmp
aam
xor
loopne
in
stc
roll
test
fimull
shrb
jmp
std
int
aad
out
ret
icebp
rcr
test
iret
loope
orb
lock
out
aaa
shr
lret
into
decb
clc
stc
lret
movl
loopne
lock
int
sar
xor
fst
enter
orb
icebp
loopne
loop
repz
std
sti
jmp
into
out
rcr
sar
jmp
fucomi
neg
cli
std
enter
aaa
ret
hlt
out
repz
xor
aam
lret
sar
fmulp
sar
repz
jecxz
mov
int
shl
inc
int
sub
cli
in
loope
cmc
shl
xlat
icebp
cmp
rcr
decl
in
std
nop
in
jmp
cmc
dec
xor
test
shl
mov
movb
loop
sti
hlt
sub
cs
out
frndint
aad
repnz
out
in
std
out
cli
sti
mov
lret
int3
idiv
cmp
cmp
ret
ret
roll
xchg
shr
in
repz
out
jmp
jmp
fucomi
xor
idiv
xlat
int3
out
out
cld
mov
aad
mov
xchg
test
int
xor
hlt
xor
into
aam
xor
out
loope
in
jecxz
hlt
mov
ljmp
jmp
ret
ror
fdivr
in
cmp
jecxz
test
ds
std
idiv
rcr
ljmp
lret
leave
das
cmp
aas
out
in
rolb
fdivr
cmp
cli
add
roll
out
jmp
xor
dec
clc
rol
cmp
mov
jecxz
aad
rorb
xlat
xor
iret
lock
int3
fcomi
ljmp
loop
aam
xchg
jecxz
out
lock
shll
repnz
aad
aam
sar
ljmp
fisttpll
leave
and
xor
stc
lock
aaa
leave
icebp
call
fnstsw
aas
not
aam
jecxz
leave
ljmp
in
stc
jmp
enter
out
cmp
out
shl
loope
call
iret
mov
icebp
repnz
iret
int3
fxch
cs
cli
sti
fiadds
jmp
xchg
lret
in
call
sub
jmp
in
leave
aaa
aad
lock
aam
in
rcr
fcmovbe
loope
addl
xor
xor
shr
jmp
xlat
int
into
aad
xchg
enter
mov
loope
int
jmp
lret
xor
call
jecxz
aam
vpsrad
std
addl
sar
int3
xor
ror
shl
cmp
test
mov
in
xlat
xor
fadds
in
in
into
imul
out
int
aam
xor
fndisi(8087
stc
aam
jmp
lret
into
in
filds
ljmp
sar
fdiv
cmp
push
in
test
push
jmp
into
in
cmp
sub
ljmp
addb
lock
xchg
decb
xor
fidivrl
test
icebp
loope
aas
xlat
cli
in
loopne
repz
divb
mov
aam
aaa
call
hlt
icebp
imul
cmc
test
loop
in
int
orl
shl
cli
sti
stc
aad
stc
lock
shl
int
mov
mov
hlt
ret
cmc
ljmp
iret
cld
int
filds
sti
sub
sub
mov
lret
repnz
std
cmc
aad
fcmovne
cmp
fld
loope
cmp
loopne
mov
in
cmp
cli
jmp
clc
fsubr
cmc
loopne
test
cli
fiadds
mov
in
jmp
call
enter
cld
cmp
aam
iret
aad
test
in
stc
mov
xchg
shl
repnz
jmp
iret
cmp
std
xlat
shl
test
fcos
xchg
int
fmulp
jecxz
cs
stc
leave
fxch
lret
lock
aas
icebp
sub
rolb
jecxz
test
shll
call
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
xchg
neg
push
in
jl
add
cld
cmp
test
out
jecxz
les
ficoms
repz
ss
cmp
cmp
fdivr
cli
xlat
loopne
ffreep
ret
testl
aam
xlat
call
in
fcmovnu
xor
xlat
cmp
filds
fpatan
cmc
mov
sar
in
leave
hlt
out
lret
icebp
fstpt
and
addl
rcl
lret
xor
sar
jmp
repnz
cld
sar
xor
and
orl
ss
shr
sar
test
rcr
mov
mov
test
out
fsubrp
jecxz
lret
aad
cmp
lret
fdiv
out
fstpt
enter
in
mov
adcb
xor
not
frndint
cmp
fldlg2
int3
stc
stc
hlt
mov
ljmp
in
xor
in
out
int3
lret
cmp
xlat
cmc
out
test
fdivr
mov
cmp
xor
int3
aam
cmp
cmp
iret
in
iret
mov
cld
clc
jmp
xor
xor
fldlg2
jmp
testl
loopne
std
test
aad
aam
xor
in
fincstp
fidivrs
lock
xchg
in
out
cmp
xor
rol
icebp
hlt
std
stc
cld
lret
incb
movl
in
rcl
cmc
int3
cmp
cmp
cmp
fmul
clc
lret
out
mov
ret
out
leave
jecxz
shl
add
out
ss
out
iret
cmp
aad
aaa
stc
aam
ror
clc
in
mov
leave
fiaddl
lret
xor
out
in
cld
jmp
repz
stc
cmp
lret
int3
lret
adcb
icebp
lret
aaa
in
fcmovu
or
xchg
out
addl
jecxz
xchg
into
xor
xor
imulb
repnz
aas
jecxz
xor
leave
in
mov
ljmp
lret
cs
xor
fidivrl
int
enter
ret
lock
int
pop
cld
test
jmp
in
xlat
ds
add
jecxz
mov
test
call
rcl
aaa
divb
div
fnstsw
out
fcomp
lret
into
ljmp
cmp
hlt
stc
xchg
enter
shl
test
xlat
in
xor
aaa
cs
std
sarb
aas
loop
add
fmulp
ljmp
ds
sub
into
iret
sti
loope
neg
cmp
shl
ret
fsubrp
in
fisttps
out
repnz
cmp
repz
jmp
cmp
loop
loope
cmc
leave
cld
lret
leave
loope
in
mov
aaa
loop
lret
stc
int
aam
rcr
fxch
rolb
jmp
vpmaxsw
loop
mov
xchg
xchg
aam
idiv
xor
fcmovbe
loope
out
cmp
addl
shr
mov
jecxz
loopne
jmp
std
ds
ffree
fstpt
repz
fmul
in
lock
repnz
xor
repnz
jmp
test
lock
ret
int
mov
xchg
mov
lock
xlat
rol
cld
cmp
cmp
loop
and
std
loope
sti
leave
loope
fucomi
test
int
mov
loopne
sti
sti
in
fdiv
iret
fdiv
loopne
fnsetpm(287
fcmovnbe
loop
sbb
ljmp
hlt
jmp
ljmp
aas
fsubp
sti
xorb
fcomip
aam
mov
into
out
xor
in
leave
cli
fadd
aam
shl
loop
cmc
mov
fiadds
lret
out
mov
out
in
cmp
cmc
cmc
incl
aad
call
adcb
in
out
cld
divb
cmpl
xor
shl
shr
lret
loopne
out
fiaddl
xor
div
shl
xor
fcmovne
not
rolb
int
mov
into
xchg
in
aad
enter
div
imul
aas
out
not
loopne
hlt
test
loope
clc
xchg
in
mov
fbstp
repz
not
mul
sbb
fimull
add
add
ret
xlat
int3
int
cmc
or
neg
sbb
mov
jl
addb
jl
in
cli
sbb
test
cld
loopne
mov
rol
cmc
lock
aam
aas
neg
clc
cmpb
jmp
mov
mov
out
xlat
icebp
ror
aaa
cld
into
cmc
enter
test
lock
addl
jmp
sarl
aaa
shll
lds
out
ss
out
cmp
aam
xlat
sti
test
loop
jecxz
les
out
stc
ljmp
std
cmp
sti
repnz
aad
aad
hlt
lret
int3
xchg
in
call
in
ljmp
out
lock
hlt
incb
fadd
in
loope
test
xchg
nop
out
xor
repz
shlb
leave
div
sbb
fiaddl
jmp
push
nop
cs
in
aam
or
sarb
ret
neg
jmp
sti
and
loop
cmp
iret
rcr
cmp
xlat
in
call
cmp
shl
aad
sti
out
call
test
icebp
xlat
call
leave
fdivrs
std
rcl
adc
enter
fcoms
xchg
loopne
in
jmp
ret
std
std
cmp
out
cli
in
sbb
mov
out
jmp
ror
cmc
in
rcr
cld
ss
loope
cli
cmp
rol
aam
cli
jmp
ljmp
repz
cli
cmp
ss
ret
hlt
ffreep
testl
shl
into
out
lret
lds
cli
std
into
out
cmp
fst
loopne
call
leave
sub
lret
lock
out
call
ror
xchg
aad
cmp
dec
in
mov
aam
shll
int
xor
in
fcmovbe
sarl
fcmovu
hlt
loope
out
enter
test
cmc
int
out
sti
lret
fcomi
in
enter
out
fdivr
sar
fdivrp
ljmp
xchg
xchg
jmp
cli
repz
mov
cmp
in
in
mov
std
ljmp
lret
repnz
fldl2e
into
repz
loopne
repnz
in
lock
mov
cmp
sti
jmp
out
incb
leave
neg
in
and
fdivl
int3
ss
out
cld
lock
repz
fsub
cmc
adc
sub
xchg
xchg
leave
fdivrp
shl
out
loop
jecxz
iret
int3
sti
into
cmp
cli
ds
jecxz
xchg
repnz
mov
mov
mov
xchg
icebp
ss
in
fcmovb
sub
ljmp
mov
loop
enter
xor
in
mov
xor
lret
fld
clc
test
ret
rcr
rcl
fcmovne
loopne
fimull
ret
rol
out
aaa
cmp
loope
or
test
not
loop
in
fcomp
out
rorb
xor
cmp
icebp
ljmp
test
sarb
enter
mov
xchg
mov
xor
int
into
cs
hlt
or
or
fcomip
fsubr
sbb
sub
rcr
sti
fcmovnu
iret
cmp
cmp
icebp
repz
repnz
out
ljmp
xor
hlt
std
cmp
ds
fdivrl
fcmovnbe
mov
mul
sub
in
xor
in
hlt
sti
cli
lret
repz
into
in
ljmp
mov
loopne
sub
cmp
lock
in
les
or
in
xchg
fdivr
rcl
in
in
aad
ljmp
aad
fcmovb
jmp
fcmovne
loope
int
rcl
xor
lret
out
shl
lret
ljmp
enter
in
xchg
rcl
cmp
int
shl
out
xor
repnz
shl
shl
test
repz
fcomip
lret
xor
out
in
icebp
in
adc
aas
ffreep
xlat
fcomip
sbb
out
ljmp
out
repz
aad
loope
xor
les
mov
in
xchg
shr
out
fsqrt
ret
lock
cmp
loopne
rcr
fdiv
in
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
cwtl
loope
sub
out
jl
addb
jl
sti
sub
lock
in
aad
cmc
out
out
cmpb
repnz
rcl
stc
cmp
loope
imul
ret
fcmovnbe
xor
int3
lock
neg
addl
std
xor
in
stc
lret
ret
call
shl
cmp
lock
out
hlt
flds
jecxz
cs
enter
jmp
hlt
repnz
loope
fdiv
xchg
mov
xchg
cmc
icebp
shlb
ss
in
icebp
idivb
loopne
out
stc
xchg
ljmp
filds
rcl
xlat
xor
clc
aam
sarl
mul
leave
jmp
jecxz
lret
in
rorb
div
sti
cmp
xor
rolb
fisttps
leave
fisttpll
cmp
in
jmp
fcmovnu
in
xor
xchg
mov
out
fimuls
in
fcmovnbe
enter
fdivrs
rol
and
test
ljmp
xor
in
loop
std
aam
repz
into
cmp
cmp
loopne
loop
jmp
out
int3
add
ret
fldt
shr
ss
loop
fcomp
hlt
addb
repnz
jecxz
jecxz
stc
fucomi
stc
aam
icebp
into
xor
not
not
hlt
sbb
adcl
xor
fptan
fsub
aam
ljmp
lret
loop
out
int3
stc
in
fcom
repz
fdiv
loope
test
movl
loop
jmp
sti
ret
cld
dec
in
div
cmp
cmp
repz
jmp
icebp
in
mov
out
cli
cld
hlt
leave
int3
fcmove
cld
fucom
call
mov
test
jecxz
in
in
call
shl
out
clc
ds
incb
leave
xor
aad
shr
xlat
xor
jmp
fiaddl
in
test
fucom
xlat
loop
fstl
xchg
rol
ss
lret
lret
rcr
rcr
mov
idiv
sti
lret
clc
enter
cmc
cs
xor
repnz
aaa
aam
jecxz
in
fsubrp
clc
fucompp
fsubr
xchg
lret
loop
into
ss
cs
test
hlt
in
out
repnz
loopne
stc
ljmp
call
xor
cld
rcl
shll
xchg
fdivrs
loopne
loope
mov
xor
repnz
hlt
out
not
shl
ds
in
jmp
mov
mov
ljmp
out
xor
jmp
ret
imul
add
sbb
nop
xchg
fimull
out
aam
cli
lret
fucomp
cmc
stc
int3
idiv
neg
testl
repnz
int
aaa
lock
xor
sti
in
in
flds
icebp
loop
xchg
aam
ss
sub
cmp
repnz
filds
aam
call
sti
mov
jecxz
out
idivb
out
repnz
std
stc
jmp
repnz
jecxz
fiaddl
fimull
in
int
enter
int
in
ljmp
sti
aas
faddl
shr
out
enter
in
shlb
xor
cmp
clc
repz
in
fdiv
ds
cld
aad
fmull
cmp
lock
sar
in
cmp
ret
xlat
fcmovnb
cmp
fsubr
xchg
mov
hlt
cmp
iret
out
std
out
aad
sar
fcmovbe
shl
icebp
filds
loope
mov
cmc
xchg
xor
xor
loop
repnz
xor
iret
xlat
stc
out
int3
fdiv
ret
ret
sub
loopne
loope
fdiv
in
ror
cmp
ds
repz
out
in
loopne
ds
test
cld
out
test
cld
xlat
fsubrp
cmp
hlt
lret
shl
lds
xchg
fucomip
test
lret
int3
ret
test
fcomp
aas
rorb
add
cld
loop
add
jmp
ror
int
fcmove
mov
push
sbb
bound
addb
jl
cmc
xchg
loop
les
cmp
xor
fmul
cmp
sarl
aas
testb
enter
iret
mov
cld
int
xor
ror
shl
iret
cmp
ds
out
into
fdivr
in
test
repz
fmuls
mov
divl
xor
in
lock
into
mov
stc
repnz
aad
mov
adcb
stc
cmc
leave
in
in
hlt
adc
lds
test
mov
lock
enter
sti
in
xor
std
cmp
in
test
xchg
lret
out
jmp
sub
not
call
repnz
cmp
in
or
int3
mov
loopne
shl
leave
cli
cmc
repz
fcmovnbe
lret
out
adc
incl
xor
loope
out
aad
repz
jmp
out
shl
sti
jmp
hlt
cmp
ret
fmul
in
out
out
out
sti
xchg
mov
out
fld1
imul
jmp
in
loope
rcr
repnz
fst
sti
in
xchg
iret
leave
xchg
out
xchg
hlt
xor
icebp
out
shr
in
int
in
ds
cld
sbb
enter
int
call
xchg
das
xor
ss
ss
xor
int
cmp
into
fadds
std
fmul
ljmp
ljmp
int
call
cmp
int3
fld
clc
repnz
test
enter
sti
mov
cld
int
in
xor
repz
in
sbb
cld
leave
out
leave
int3
cli
out
rcll
xor
aam
lret
repnz
std
in
loope
fsub
neg
in
rolb
loop
ror
cmp
leave
jmp
jecxz
test
cmp
clc
leave
xchg
out
rcr
int3
ss
iret
hlt
stc
fst
cmp
fucomi
lret
cli
cmp
sti
mov
addb
int
fcomi
cmp
shl
fcmovu
fstp
rcr
call
hlt
aad
in
loope
loopne
iret
fsub
icebp
cmc
int3
in
xor
cld
leave
xlat
hlt
xor
aam
xchg
out
int
sbb
xchg
xchg
icebp
xor
xor
in
fxch
int
repnz
inc
ror
cld
ret
out
fucom
fmul
add
xlat
cmc
lock
out
in
cmp
int3
iret
int3
aam
std
filds
les
cmc
mov
lret
cmp
out
aad
sub
aas
cmp
rol
std
fnstsw
call
mov
ror
repnz
in
repz
fdivr
cmp
xor
int3
stc
mov
out
enter
lock
xor
in
fcom
cld
xlat
adc
stc
icebp
fndisi(8087
mov
out
lret
out
xchg
in
shl
int3
fnsave
in
enter
test
cmp
cmp
call
xor
loopne
fcomp
ss
not
fsubr
ret
sti
call
lea
jmp
ss
iret
call
shl
rol
in
call
in
stc
jmp
jecxz
rcl
mov
icebp
hlt
iret
shr
xlat
cmp
ret
lock
or
lret
test
std
fcmove
cmp
shl
cli
clc
iret
xor
idivb
xlat
vpaddusw
stc
xchg
fimull
into
xchg
call
into
out
out
leave
sti
cmp
stc
or
mov
jecxz
stc
jmp
repz
lock
lret
fucomp
out
lret
into
cli
in
orl
incl
test
call
aas
icebp
aas
test
ret
in
jmp
mov
fcomip
icebp
iret
xor
in
out
repz
cli
sarl
ret
aad
mov
nop
iret
std
int
ljmp
leave
sar
xor
ljmp
aad
xchg
leave
call
into
jecxz
shr
fucomp
xor
fdivp
out
lds
roll
fxch
mov
jmp
in
test
int3
mul
out
lret
xor
shl
sarl
cli
sub
loop
ror
out
mov
xchg
shr
xor
sarl
cmp
xor
xchg
out
aad
loop
cld
shr
aam
enter
and
clc
jmp
xlat
ror
ror
xlat
fisttpl
lock
dec
push
jecxz
idivb
add
in
in
int3
out
test
xlat
out
cmp
xlat
xlat
test
xchg
leave
ficoms
loope
shlb
jmp
incl
rorb
fisttpll
roll
icebp
hlt
repz
cmpb
lock
cli
std
ljmp
fcmove
test
fcmovu
cld
cmp
loop
jecxz
fsin
std
in
out
shl
incl
clc
in
ljmp
shl
test
cld
ret
xchg
cld
loope
nop
enter
aaa
xlat
vaddsubps
icebp
cmp
repnz
stc
shl
xlat
ret
xrelease
fiaddl
sub
into
stc
aaa
into
aam
fdiv
aas
int3
lret
inc
cmp
sbb
jmp
fmuls
in
int3
xlat
aam
shr
cmp
ret
ror
ror
push
jecxz
in
ret
int3
icebp
sub
iret
fdivrl
cmp
in
lret
cmp
jmp
out
sbb
mov
int
icebp
divl
in
sti
out
aam
lock
aad
jecxz
call
rcll
in
icebp
out
jmp
rol
jecxz
shl
sbb
icebp
cld
out
xchg
loope
loop
int3
into
int3
iret
cli
leave
adc
iret
cli
cmp
fdiv
testl
xor
out
iret
icebp
out
cmp
test
cmp
adc
clc
rcr
aam
incb
icebp
enter
sti
xor
stc
xor
hlt
rcl
cli
jmp
cmp
enter
out
fldl
icebp
int
xor
out
sti
iret
icebp
cmp
in
mov
cmc
lret
cmp
filds
ret
int3
int3
xor
rcl
repz
cmp
shl
cld
ret
xchg
fdivr
sar
iret
out
in
out
fcomi
sarl
std
jmp
stc
std
xchg
shl
loope
fimull
in
lret
in
xor
fsubr
cli
fcom
push
in
xchg
jmp
or
out
xor
ss
cmp
cmp
hlt
jecxz
loopne
fldln2
cld
icebp
fisttpll
xor
xor
cmp
stc
cmp
rcr
hlt
out
mov
loopne
loope
incl
aad
out
cmp
idivl
int3
std
fdiv
iret
sar
fnstsw
shl
hlt
int
lret
jmp
mov
int
fmul
in
in
rcl
aas
cmp
cmc
cmp
shl
cli
cmc
loope
jecxz
loop
xchg
cli
jmp
loopne
repz
dec
loope
idivb
test
mov
loopne
lret
call
repnz
xor
shl
out
lock
stc
cmp
ds
ret
sub
jmp
orb
enter
aaa
in
xor
cmp
aam
cld
xchg
rolb
out
xchg
mov
sarb
fucomi
hlt
cld
fidivrs
filds
lock
shl
cli
mov
test
xchg
lds
aaa
out
cli
xor
aam
lock
cli
fdivr
loop
repnz
in
cld
mov
aam
repnz
repz
shr
shl
xor
out
repnz
lret
les
fsubr
cld
loope
jmp
xor
call
repnz
aam
rcl
in
icebp
ret
fstp
fdivr
jmp
in
in
int3
fxtract
enter
int
repnz
in
rorl
lret
mov
out
mov
call
das
enter
clc
cmc
aas
ftst
roll
ftst
iret
xchg
cmc
sub
ret
leave
icebp
aaa
jmp
repnz
loop
int
repnz
ljmp
mov
xchg
sub
aaa
int3
leave
hlt
ljmp
not
xchg
hlt
jmp
loopne
cld
out
lock
cli
fsub
jmp
out
dec
cmc
in
fcomp
call
sbb
in
xor
aad
aad
xor
stc
adc
xlat
cli
jecxz
xchg
icebp
fldl
loop
cmc
mul
xlat
fcmovnu
icebp
int
loopne
cmc
into
fcomi
add
fmulp
test
ret
rorl
loop
hlt
fimull
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
xor
scas
movsb
cli
jl
addb
jl
into
ror
ret
cli
cmp
lock
adc
int
jecxz
xchg
repnz
lds
fdivrs
aaa
roll
ffree
call
incl
in
nop
xchg
fisubrs
out
icebp
test
not
out
jmp
les
ljmp
fimuls
xor
in
cmp
into
into
lret
cmp
sti
out
div
xlat
ljmp
in
lock
int3
sar
lret
cmp
cmp
std
aad
test
icebp
stc
shr
in
test
int3
int
in
into
into
xor
ret
out
cmp
aam
and
rcl
test
cmpb
clc
ljmp
leave
test
clc
xor
fstpt
fld1
test
cmp
cli
in
fucom
movb
xor
stc
sti
stc
repnz
fstpt
loopne,pt
fcom
lret
testb
xor
call
clc
ret
cmp
leave
lret
call
test
lret
xlat
into
stc
fcmovne
aad
fidivrl
call
in
in
jmp
fcmovnu
lret
xchg
test
rol
fcmovne
lret
int3
out
jmp
hlt
call
cmp
std
ret
mov
int3
loop
in
aam
in
lret
fcomp
jmp
rol
cmp
jmp
aad
ljmp
xchg
aad
loope
shr
cmc
rcr
cmc
cmp
in
jecxz
aam
fcmovnb
loope
aad
ds
fxch
clc
fimull
in
cli
shl
sti
cmp
out
ds
filds
test
mov
sub
int
loop
ljmp
lock
testl
fstp
out
test
iret
divl
fxch
call
out
fnstcw
cmp
cmc
test
cli
sti
fisttpl
enter
cmp
out
add
test
ljmp
rol
jecxz
out
xor
dec
call
cmp
cmpl
fadds
cld
jmp
mov
out
ds
jmp
hlt
fcmovnbe
jmp
fld
shl
std
lds
stc
icebp
mov
roll
lock
xor
clc
fucomi
fildl
lock
jmp
jmp
in
xchg
leave
icebp
icebp
jecxz
loopne
jmp
neg
aad
repz
cmp
aas
stc
and
mul
repnz
lret
shrb
cmp
in
ljmp
ds
xlat
rcr
fcmovnb
in
hlt
jecxz
lea
leave
cs
loop
repnz
hlt
ror
xlat
sti
cmc
in
out
stc
cmc
movl
addl
repz
jmp
fdivp
test
mul
fdivr
in
nop
rolb
repnz
fdivr
cmp
cli
jecxz
ljmp
loopne
fldl
out
cld
mov
xor
les
repnz
leave
ss
loope
ret
test
fmul
loop
xchg
in
cmc
aad
sarb
cld
repz
fld
ds
hlt
std
in
lret
fsubrp
ret
rcl
xor
xor
cmp
xlat
xlat
fcomi
fidivrs
add
out
rcl
loopne
in
out
mov
xchg
leave
int3
out
icebp
fdiv
fcom
jmp
aad
fst
leave
in
leave
clc
call
int3
xchg
divl
stc
xor
stc
vpmaxub
icebp
or
mov
rcr
decb
fucomip
roll
xor
in
ds
int
aas
inc
shl
sti
out
sti
xchg
aaa
cs
cli
xor
cld
leave
fnstsw
cmp
cmp
repnz
out
in
fadd
loopne
cmc
call
ss
ljmp
inc
fildl
xlat
lds
xchg
int3
in
xlat
sub
test
aad
and
in
cli
cli
mov
out
mov
orb
ds
jecxz
cli
out
std
out
call
ljmp
hlt
in
out
xabort
cli
int
out
xlat
aam
in
xor
lret
cmp
mov
fmul
test
rcl
xor
cmp
shl
ljmp
add
leave
int
int
int
mov
aam
daa
cs
sub
jl
aas
ret
icebp
hlt
mov
hlt
xlat
pop
mov
jecxz
int
clc
rcr
in
aad
sti
lock
aam
iret
loopne
jmp
addl
rol
not
cmp
std
mul
aaa
cmp
clc
ret
repnz
or
loope
std
jecxz
loope
sar
in
sti
int3
out
jmp
stc
cmc
rcr
shl
cld
lret
mov
mov
call
icebp
sub
call
cmp
rcr
cmp
jmp
mov
jmp
ret
into
out
xor
aaa
xor
fdiv
std
fxam
out
call
xchg
xchg
repz
in
jmp
cmc
ss
enter
cmp
in
mul
addb
test
xor
das
aaa
call
std
call
cmp
aas
out
std
lock
orl
rorb
in
jmp
call
into
loop,pt
xchg
aad
in
popl
lea
test
aam
call
aam
cld
ret
jmp
mov
mov
cs
stc
fst
xor
sar
cmp
stc
fcmovnbe
orb
mov
adcb
std
lds
sti
cli
shl
and
repz
lret
adc
in
ljmp
fcmovnu
aas
neg
lock
jmp
hlt
lret
stc
enter
nop
mov
xor
xor
rcl
fidivrl
sarb
stc
loop
cld
aad
fcmovnbe
int
incb
xor
lret
divl
lret
ds
cld
cli
fiadds
shl
ljmp
in
xchg
jecxz
ljmp
not
cmp
idiv
aad
in
in
fcmovb
in
out
xchg
enter
ljmp
hlt
fidivrs
aam
cld
jmp
jecxz
neg
or
mov
loop,pn
sarb
in
in
clc
lock
cmc
rol
out
iret
ds
repnz
mov
jmp
mov
icebp
clc
hlt
aam
aaa
loope
cmp
sar
add
orb
lret
lds
call
cmp
shr
idiv
lock
cmp
sbb
xchg
into
xor
cmc
in
into
jmp
cmp
jecxz,pt
sar
mov
cld
loop
lea
out
fdiv
lret
loope
xor
into
cmp
clc
cli
fnstenv
in
icebp
jmp
fadd
jmp
iret
out
iret
out
div
out
ror
std
stc
rcr
addb
stc
test
cli
loope
shl
fcoml
fcomi
rcr
cmp
hlt
clc
xor
jecxz
out
fcom
mov
clc
movl
lret
aaa
int
icebp
aas
sti
stc
fyl2x
icebp
out
aad
loope
orb
aad
xor
jecxz
call
repnz
cld
aam
cli
and
aad
int3
lea
jecxz
div
cmp
xor
test
rolb
div
mov
mov
ljmp
cld
sti
cli
clc
cmpl
shl
repz
sbb
ret
lock
shr
rcr
cmp
call
aad
lock
jmp
loopne
sub
mov
in
in
jecxz
aad
xlat
enter
loop
std
out
xlat
lret
int3
mov
in
in
in
into
hlt
jmp
lret
divl
clc
loope
cmpl
add
cmp
leave
pop
mov
ret
adcl
xor
xor
fnstsw
xlat
jecxz
ljmp
shl
out
ret
lock
fscale
stc
hlt
int3
loope
loope
aam
ret
cmc
lret
call
xchg
jmp
cli
int
in
xor
sub
xchg
icebp
movl
iret
in
test
in
cs
aaa
loope
lock
into
push
in
fsubp
aad
out
into
lock
shr
xchg
xchg
sub
ljmp
not
stc
fcmovu
ret
leave
call
add
out
in
std
lock
leave
lret
lret
repnz
cmp
xor
add
jmp
aad
leave
lret
fstp
aad
mov
pop
cmpsl
mov
jl
addb
jl
in
testb
xchg
shr
icebp
enter
out
sar
hlt
call
repnz
in
fimuls
xchg
lea
rcl
out
ret
in
icebp
fst
shr
test
cmp
test
ret
sti
lock
loop
xor
xor
repnz
loopne
cmp
aam
and
in
jmp
fcmovu
fcoml
int3
sar
sar
std
in
ds
into
ss
aam
testl
out
lret
cmp
cs
test
stc
cmc
std
fldl
cli
adc
mov
fbstp
ljmp
repz
loop
out
lock
roll
sti
in
out
cmc
test
in
xor
divb
xlat
sti
sarl
shr
into
cmp
fistpll
in
test
xchg
jecxz
std
lret
ljmp
cmp
int
in
add
sarl
mov
in
xchg
int3
out
mov
shl
out
out
lret
out
aaa
ss
loope
loop
stc
ret
clc
in
neg
mov
orb
out
imul
aad
in
into
sti
ds
cmc
inc
shl
int
fisttpll
lret
lret
fsubrs
enter
cmp
lock
ret
repnz
incl
orl
jecxz
xor
enter
cmp
std
aad
loope
fldl
xchg
sti
faddl
enter
fcomi
iret
fldpi
ljmp
orl
in
mov
jmp
in
cli
shl
out
rcr
lret
cmc
in
cmpb
out
loope
icebp
sub
xchg
out
faddp
jecxz
jmp
xlat
fcom
fmulp
fidivrl
out
mul
xlat
fsubr
std
cmc
cld
popl
std
rcl
loope
int
xor
jmp
cmpl
cmp
cli
loopne
out
xchg
fcomp
in
into
test
xor
cmp
out
rolb
stc
xchg
xchg
jmp
adc
lret
xor
in
aad
in
ror
in
cli
lock
rcl
out
sbb
fucomi
in
sub
int
jmp
in
xor
hlt
shr
int3
xlat
aad
icebp
fcomp
sub
repnz
fldl
dec
icebp
fucompp
mov
ret
divl
repnz
fdivp
jmp
xor
fsub
xchg
jmp
in
test
int
aaa
out
xor
xor
into
jecxz
jmp
cmpb
mov
out
mov
call
xlat
xor
fidivrs
loopne
test
lock
test
cld
xchg
addl
aas
ret
ror
imul
icebp
ds
cld
in
test
rcl
mov
cmp
sti
xchg
in
xchg
loope
out
loopne
jecxz
in
shlb
div
stc
fucom
lds
repnz
lret
mov
repz
int
sub
in
jmp
ss
cmp
lock
fildl
jmp
enter
int3
add
lret
cmp
imul
divl
roll
clc
fdivp
cmp
fcmove
stc
cld
repz
cmc
jmp
cld
cmc
aas
cmp
lock
cld
jmp
loope
sti
mul
out
mov
int3
jmp
out
lret
cmp
fdivrs
repz
rcl
faddp
test
int
in
iret
enter
ror
clc
cli
shr
jmp
ss
ret
ret
loop
test
fcomip
aad
icebp
mov
icebp
les
in
in
ljmp
addl
ljmp
call
repnz
rcl
aam
icebp
faddp
jmp
testl
test
test
jmp
xor
loopne
ror
das
cmc
in
out
lock
out
in
rolb
in
fdivr
out
in
into
shl
in
idivb
in
xor
in
rcl
sar
cmp
xlat
cmp
int3
faddp
in
xchg
mov
cmc
jmp
das
icebp
stc
imul
cld
stc
out
in
fucomp
xchg
in
jmp
lock
ret
ljmp
icebp
in
shr
test
cmp
jmp
repz
out
ror
int3
lret
hlt
aam
div
into
rcr
orb
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
mov
addb
jl
jmp
fcomip
xchg
jecxz
xor
lret
fnstenv
in
neg
cmp
fisttps
jmp
or
fcom
fsin
shl
into
idivb
cmp
lret
test
movb
into
hlt
das
in
stc
lret
out
aam
cmp
cmp
ds
jmp
fcmovnu
mov
fisttpll
xor
lret
xor
rcl
rcr
std
aad
flds
filds
jmp
call
cmp
out
incl
cli
incb
adc
xor
shr
cli
fcomi
icebp
jecxz
lock
les
out
into
icebp
xchg
lret
mov
not
xor
ror
jmp
cmp
rcr
test
in
sbb
jmp
ret
out
icebp
clc
cmc
ror
cli
sar
stc
cmc
cli
fldl
out
rorl
out
out
out
cmc
rcl
idivb
mul
test
mov
out
xchg
out
fcoml
shl
cmc
cmp
ss
rolb
aas
xchg
shr
filds
loope
ret
ljmp
in
out
loop
xor
idiv
cli
aam
jmp
ljmp
fcomip
xor
icebp
iret
rcr
std
out
jecxz
hlt
lock
lds
call
xor
leave
out
repnz
rcl
ljmp
cmc
hlt
cmc
xchg
fscale
cmp
dec
ljmp
cmp
sar
mul
sti
lret
aas
rcr
shl
enter
fcmovne
std
rclb
in
stc
fxtract
aad
hlt
sti
out
ret
rol
faddp
cli
fsubrp
enter
out
into
sub
aaa
cmc
in
sti
lret
cmc
in
cmp
rol
rol
loopne
test
mov
lret
enter
out
out
aaa
cmp
cli
xor
xor
rcr
loope
int
test
std
ljmp
shl
fcmovne
repz
xor
shl
fmulp
loop
loope
mov
xlat
test
in
hlt
in
int
aad
leave
cmc
bnd
xlat
int3
cmp
fucom
fadds
icebp
out
lock
cmp
out
repnz
jmp
rcl
cmp
std
rol
aad
jecxz
jmp
out
mov
int3
mov
out
cld
jmp
loop
iret
stc
clc
out
hlt
loope
mov
mov
jmp
mov
f2xm1
jmp
enter
stc
les
addl
xchg
stc
jmp
icebp
lock
aad
hlt
adc
repnz
fsubrp
loop
add
xor
fcomi
cmp
into
into
int
clc
cmp
sti
repnz
mov
out
in
call
out
cmp
cmp
test
jecxz
shr
fdivr
loope
enter
mov
xor
call
rcl
adc
mov
sti
mov
testb
fisubrs
jmp
ljmp
ss
sarb
inc
in
mov
xlat
test
out
xor
in
fcmovnu
int3
cld
repz
sub
cli
clc
loop
mov
xor
clc
ljmp
fcomip
decb
std
testb
in
xor
repnz
fsubr
in
cli
cmp
aas
hlt
iret
repnz
clc
cmp
call
in
lret
xchg
aad
cmc
cs
std
xor
aaa
fmulp
sti
rcl
clc
in
decl
test
out
xchg
in
into
shrb
cld
cmc
lret
in
in
faddp
mov
std
in
test
lock
xor
sar
in
icebp
add
in
in
mov
cmp
out
in
xor
lret
call
repz
xlat
cmc
std
fimuls
hlt
mov
in
ret
aaa
jmp
xlat
cli
xor
cmp
sar
rcl
adc
fsub
lret
shr
leave
mov
in
aad
jmp
flds
xlat
xchg
fnsetpm(287
in
into
ror
xor
add
jmp
xlat
aad
rcr
fstp
push
xor
addb
jl
fcomp
icebp
fldt
cmp
fiaddl
and
rol
cmp
jmp
xchg
loope
out
in
cli
xor
xor
xlat
sti
fcos
addl
cld
mov
loop
ror
lock
lret
sarb
ljmp
mov
std
lret
std
mov
sub
enter
neg
sti
fdivr
cmpb
out
hlt
or
xchg
jmp
jmp
jmp
enter
rcl
lret
ds
adc
neg
fsubr
inc
xchg
out
loopne
repnz
rol
stc
std
in
test
lock
neg
into
xabort
imul
decb
mov
xchg
jmp
clc
out
aam
aam
leave
xor
xchg
cmc
call
out
in
rorb
loop
fcmovnbe
in
cmp
in
sarb
mov
mov
int
test
clc
ds
aas
test
xchg
rcr
aad
fucomp
mov
xchg
cs
lret
loop
xor
cli
call
out
xor
cmp
fdiv
ret
add
shr
in
stc
fcmovnbe
fdivrl
rcl
aam
cmp
fsub
hlt
stc
xlat
mov
hlt
or
clc
mov
repnz
repnz
shl
leave
iret
xlat
cli
aam
in
xlat
in
rorl
in
incb
loope
xchg
jmp
icebp
shl
shl
sar
cmp
cmc
fstpt
rcr
loope
in
leave
jmp
xchg
ret
lret
int
jmp
cmp
cmp
aad
push
addl
fcmovnu
loop
mov
nop
out
xor
leave
lret
loope
loopne
ffree
stc
test
cmp
ljmp
ret
call
enter
cmp
aad
test
vpaddb
fadd
out
xchg
ljmp
loope
xor
test
adc
movb
ljmp
in
jmp
xor
int3
out
sbb
fldl
xchg
mov
shr
fdivrs
out
std
ds
test
std
std
ffreep
jecxz
sti
stc
dec
clc
sub
xor
xor
cmp
rcl
into
repz
out
test
hlt
in
hlt
les
dec
aad
cs
jecxz
lret
icebp
xor
inc
roll
cli
add
call
in
in
fxch
cmp
cmp
lock
aam
into
fsubr
sar
repnz
clc
test
xchg
sbb
icebp
fcoml
idivb
fsubr
cmp
repnz
clc
repz
orl
lret
in
out
mov
in
leave
shl
sar
xlat
in
incl
lret
in
into
xor
loopne
out
xor
in
into
push
repnz
test
mov
sub
fcmovnu
lock
out
in
int3
aad
int
aam
cmp
fdiv
fcom
sti
sti
hlt
aad
clc
loop
orb
into
into
ret
jmp
in
iret
cld
cmp
repnz
xlat
in
sub
in
adcb
lret
faddl
test
sar
xchg
enter
or
in
aaa
loopne
jmp
clc
into
repz
cmp
xor
out
rcl
xchg
jmp
leave
lret
xchg
xchg
lret
xchg
ret
xlat
cmp
aad
ror
int
fucomp
push
mul
movl
xchg
repz
icebp
jmp
int3
int3
fstpt
in
cmp
repnz
xchg
out
test
cld
std
loope
shr
ds
fcmovu
rcr
xlat
loope
sbb
fucomi
cmp
mov
fstp
loopne
cli
loope
aad
loopne
stc
sti
cmp
aaa
std
ss
aas
sub
xlat
mov
sti
ljmp
loopne
fidivs
xor
out
call
ret
loopne
cmp
aad
xlat
loope
loope
enter
out
out
xlat
in
rol
xor
fsubrp
xlat
icebp
cld
test
sar
sbb
xlat
in
in
fmulp
out
test
in
cs
xor
rol
lret
cmp
in
jmp
out
jecxz
sarl
loope
enter
mul
clc
out
in
xor
ss
in
clc
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
hlt
cmp
loope
jecxz
aam
ret
shl
fimuls
xchg
repnz
cmc
xor
repnz
lock
in
xlat
ret
cli
lock
cmc
mov
fcmove
hlt
aad
repz
ss
lret
xor
cmc
rcr
aad
or
sti
leave
mov
xor
iret
iret
fcomip
fidivrs
in
lock
loop
in
decl
iret
lock
cmc
out
cmc
jmp
rcl
cmp
rcr
stc
out
repz
hlt
stc
sti
jecxz
loop
call
cmc
xor
int3
cmp
fdivrs
test
loopne
stc
mov
loope
test
call
out
dec
cli
into
bnd
addb
mov
loop
hlt
aam
aad
shll
stc
cmp
out
cmp
fndisi(8087
rcr
mul
xchg
rorl
loopne
xchg
lret
das
leave
in
ror
icebp
repnz
cmp
aaa
cmc
loope
xchg
out
addb
fiaddl
ret
jecxz
clc
iret
repz
cld
out
sti
cmp
loop
stc
std
leave
in
call
and
xor
shrb
in
shl
out
in
out
enter
sti
lock
jmp
lret
rol
ret
cmp
aas
out
xlat
cmp
cmp
cld
rcl
sti
enter
in
lock
call
sar
cli
ljmp
lock
sarl
loop
fsubrp
out
mov
fxch
in
jecxz
out
xor
clc
jecxz
iret
out
enter
sar
fcomi
xchg
out
in
out
out
xchg
std
in
jmp
in
iret
cs
fsubr
fildl
out
fcmovnbe
jecxz
lock
mov
fabs
nop
mov
mov
xchg
lret
out
div
cli
sar
shl
fcmovu
aam
std
loope
test
leave
out
nop
mov
cs
fucomp
int
loope
adc
test
fadd
jmp
mov
fimull
aad
rol
lret
repz
aad
hlt
ror
jmp
decl
lret
xchg
ljmp
repz
cmp
cmp
aas
test
flds
int
cli
int
out
cli
icebp
jmp
shl
cli
xor
cmp
idivl
inc
stc
test
rcr
adc
test
jmp
ret
xchg
lock
jmp
xor
enter
enter
repnz
fcmovne
shl
loopne
lret
xchg
cld
lret
out
rcr
out
xor
cs
call
shl
std
call
iret
fucom
ljmp
call
sti
sti
addl
lock
xchg
rcl
xor
xor
call
cmp
cmp
xlat
fdivrp
aam
in
jmp
sbb
rcl
ret
jmp
ljmp
shl
adc
mov
rcr
int3
cmc
xor
rcr
cld
ss
shl
fcmovnu
icebp
loop
mov
enter
into
ljmp
lock
xlat
icebp
idiv
out
lock
fsub
xlat
neg
decb
call
and
out
repnz
stc
repz
iret
cmp
ret
rol
incb
fsub
call
aaa
icebp
ss
lock
repnz
ret
loop
ret
xlat
test
cld
lret
mov
repz
loope
xor
loop
in
cld
aas
in
cmc
shl
rcl
fstp
out
in
loop
lea
iret
cmp
out
cld
cmp
dec
fildl
mov
ffree
jmp
loope
lds
in
rcl
lret
aaa
lock
std
xchg
ds
cld
aam
test
loope
in
lea
ret
lret
rcr
icebp
in
ds
mov
sti
ljmp
repz
xor
cmp
cmc
repz
cmp
cmc
testl
shl
out
enter
loop
faddl
loopne
mov
mov
repz
repnz
enter
out
fistpll
stc
lock
into
cld
fstp
in
cld
adcl
cmp
ljmp
icebp
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
aas
sbb
pusha
dec
xchg
jl
addb
jl
call
in
mov
fsubp
sti
call
popl
aad
hlt
out
in
out
leave
cli
roll
cmp
jmp
test
loopne
xor
xor
cmp
fnstsw
dec
sti
loope
test
cmp
in
fdivr
fnstcw
mov
enter
lret
hlt
repz
rcl
call
int3
int
cld
rol
jmp
jmp
xor
loope
out
iret
jmp
cmc
clc
jmp
lock
icebp
xchg
std
repz
test
mov
xor
cs
aad
shl
xor
sti
cmp
rcr
std
std
fcomip
rorl
in
repz
int3
fcmovbe
sar
cmp
cmp
aam
aam
roll
mov
lret
loope
aam
int
cmp
iret
jecxz
sti
aad
clc
repz
test
xchg
idivl
in
aaa
rcl
adc
cmc
sti
aad
fldl
call
out
out
shl
hlt
loop
shl
sar
cli
loope
cmp
cmp
aam
icebp
cmc
roll
nop
into
jmp
out
cmc
out
cmp
test
out
out
in
mov
test
icebp
std
repz
fidivrs
cmc
adc
ljmp
lock
xor
loop
lock
aaa
clc
cmp
faddl
in
std
loopne
and
int
ljmp
cmp
out
aam
fcmovnbe
fstp
inc
mov
cli
loope
test
in
orb
cmp
icebp
clc
fucomi
cmp
enter
iret
into
icebp
cmp
sbb
fsubr
shl
test
cmp
call
ffree
clc
sarb
fmul
jecxz
lret
lret
xchg
repz
xchg
call
xor
shll
int3
call
aas
aad
cmp
jecxz
std
fcomip
test
dec
repz
shll
xor
xor
ror
cmp
fiadds
loopne
sti
fiadds
out
shr
xor
fcmovb
jmp
cli
addl
out
out
xor
lock
clc
sar
sub
ljmp
rolb
mov
cli
fucomp
loope
int
rcr
ror
fcmovnbe
rcl
std
fsincos
out
lds
aas
loop,pt
and
test
xor
repnz
in
cmp
cmc
neg
cmc
shr
idivb
jmp
or
mov
xchg
lock
mov
cmp
shr
fcmovne
int3
jecxz
ds
fiadds
call
ljmp
neg
faddp
xlat
fcmovnbe
loopne
orl
xchg
xchg
icebp
out
out
sub
aad
rol
cmp
enter
inc
fcmovnu
fcom
cli
mov
out
loopne
cld
jmp
roll
in
cld
into
rcr
stc
icebp
cmp
repz
test
mov
test
fldl
out
in
cmc
cli
icebp
in
cmp
int
rcl
lds
test
and
int3
lock
xchg
test
xor
lret
int
fmul
icebp
fdivp
ffree
jecxz
fdivr
fld
mov
sub
repz
mov
sub
int
shlb
iret
cmc
into
fcmove
icebp
lret
aad
sti
lret
aas
xor
in
shr
int3
mov
cmp
call
ret
addb
jmp
fcomp
in
call
sub
shr
in
cmp
aad
lock
addb
nop
hlt
add
jecxz
jecxz
cmp
in
sti
repz
flds
iret
mov
rorl
icebp
fsub
loopne
cli
fldl
hlt
cld
lret
cmp
nop
shl
in
aaa
icebp
in
iret
xor
cs
cli
aaa
cmp
sti
in
aad
adc
and
mov
cmc
out
shl
xor
cmp
ljmp
fadds
mov
dec
fcmovb
call
faddp
int
ret
cmc
in
cmp
icebp
aam
ret
sar
xchg
in
mov
cli
jecxz
nop
fmull
xor
into
xlat
call
in
in
inc
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
loope
add
jl
add
loop
mov
out
xchg
jmp
out
ljmp
jmp
std
aam
clc
ret
enter
mov
xchg
jecxz
jmp
xor
repnz
repz
or
cmp
ret
rol
cmc
fldl
cld
int3
out
bnd
fnstenv
jmp
int3
cmc
cmp
loopne
stc
fdivr
cld
cli
cli
neg
test
jmp
out
int3
xor
xor
fdivs
or
into
call
aam
test
xchg
loope
ffreep
aam
ljmp
xor
jmp
test
xchg
cli
hlt
or
clc
ror
fsub
loope
aam
ss
loop
sarb
repz
ret
into
stc
test
cmc
fiadds
in
test
loop
rcl
cli
div
call
cmp
fistpll
xlat
test
cld
in
out
std
mov
aam
aad
hlt
xor
cmp
ret
mul
fadd
out
clc
int
jmp
jecxz
ret
xlat
sub
int3
leave
out
rcr
int
xlat
loopne
std
ret
fcomp
sub
jmp
test
aad
leave
cmp
fcmovne
ss
cmc
shl
std
test
hlt
out
mov
out
xchg
or
xor
ret
into
out
xlat
jmp
hlt
cmp
xlat
leave
leave
clc
loop
idiv
int3
mov
fbstp
out
cmp
fsubr
cld
xlat
out
incl
fdivr
in
out
out
addb
aas
leave
fcom
xlat
cmc
mul
fcomip
dec
cmpl
mov
roll
mov
int3
aaa
jmp
stc
ss
out
std
loop
repnz
hlt
lea
cld
leave
call
in
ror
icebp
cmp
cmp
in
ds
aas
rcl
clc
ror
sti
mov
jmp
test
int
out
shl
ljmp
out
sti
in
int
decb
icebp
ror
fcom
out
cli
cld
in
cmp
inc
rol
repz
rorb
jmp
ss
rcr
lock
cmp
xlat
out
into
cmc
xor
jecxz
rorb
in
int3
lock
xor
rcl
call
jecxz
sar
cmp
icebp
icebp
xchg
rcll
sti
int3
lret
jmp
aam
cli
int
in
aad
mov
ficoml
in
iret
shr
rol
out
cmp
shl
and
jmp
fmuls
in
ret
sub
in
fmul
cmp
jecxz
xchg
fldl
out
aam
in
std
les
fsincos
cmp
test
roll
iret
into
or
fists
shl
out
out
stc
lret
iret
rcl
fadd
clc
cld
aam
fsts
int3
out
test
lret
cld
stc
xlat
loope
aad
hlt
enter
leave
enter
iret
rol
ret
into
neg
loope
sar
clc
fdiv
loopne
sti
xlat
in
int
xchg
mov
fst
fdiv
rcl
lret
fst
repz
fdiv
test
jecxz
out
xchg
out
test
leave
div
xor
aam
std
ljmp
ret
ret
test
or
rcl
iret
ret
jecxz
cli
lret
rcr
fidivrs
ds
in
fadd
jmp
frstpm(287
lret
in
lock
xor
divb
xor
aam
out
lock
or
fisttpl
in
imull
int
iret
clc
fst
fcmove
cmp
in
loopne
ret
mul
std
in
test
repnz
int3
fdivrl
push
shl
out
aas
shl
leave
clc
out
mov
out
xchg
out
xor
ss
xor
xlat
out
leave
cmp
not
out
xlat
ljmp
aam
jecxz
leave
fnsave
xlat
xor
repz
loope
lds
loop
in
ret
jmp
into
cmp
fnstsw
xchg
jmp
out
call
icebp
rol
into
int3
ljmp
fdivr
inc
jecxz
shl
lret
je
mov
mov
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
jp
cld
push
sahf
jl
addb
jl
xchg
aad
lret
cs
int3
cld
out
repz
ret
jecxz
adc
fdecstp
int
in
iret
mov
shr
ror
out
jmp
stc
rcr
rcr
repz
loope
decl
xchg
out
lret
vpsubb
adc
cli
aas
flds
fchs
dec
out
xchg
jmp
xor
xor
enter
aaa
sti
out
aas
fsub
rcl
std
loop
xlat
loope
fstp
int
mov
ret
cmp
in
cmp
ret
hlt
xlat
test
repnz
stc
std
loop
int3
out
jmp
xchg
fcomip
ror
loop
jmp
ljmp
fyl2xp1
mul
leave
jecxz
out
out
repz
cld
cs
loope
addl
jmp
fadds
repnz
in
divl
call
int3
cmp
hlt
in
in
sarb
fucomip
repnz
lret
ficoms
std
int
xor
ret
iret
mul
lock
icebp
aas
jecxz
rcr
fmul
mov
cli
xchg
sti
into
mov
repz
incl
std
test
aad
cmp
sub
sub
fld1
cmp
fnstenv
adc
out
in
aad
shl
clc
in
out
in
int
mov
jmp
in
out
lret
xor
xlat
xlat
dec
fiadds
ljmp
jecxz
mov
out
aaa
shr
hlt
lret
loope
shr
in
jmp
in
loope
fadd
fildl
int3
in
cmc
leave
xor
repz
fdivrs
int3
cmp
std
sar
rcr
test
cld
in
xor
faddp
loopne
sar
call
cmp
test
xchg
aam
ret
jmp
int
incb
ss
cmp
cmc
jecxz
not
loope
out
xchg
in
mov
loop
fdivr
in
loope
loopne
in
cmp
ds
aam
mov
out
iret
jmp
int
out
lock
rcl
cmp
repnz
enter
out
cmp
test
mov
fsubr
in
in
in
cld
fistpll
hlt
out
xlat
ss
cmp
xor
cld
xor
shr
std
mov
cmp
iret
cli
ss
in
out
test
mul
add
in
loope
out
xchg
int3
mul
xlat
xor
xor
imul
repnz
test
incl
loop
out
mov
cmc
shr
mul
cli
div
aad
lret
std
lret
mov
lea
xor
in
lret
shl
in
and
in
xor
ret
mov
in
test
iret
mov
addl
stc
cmp
aam
xor
loop,pt
cld
mov
jmp
mov
enter
cld
nop
cs
stc
into
cld
hlt
lret
clc
aas
cmp
mov
jmp
sti
iret
out
shl
ss
fidivl
icebp
std
test
ret
in
icebp
fucom
out
jmp
xchg
in
rcl
aad
enter
fcomi
fst
rcr
repnz
leave
shr
in
aad
sbb
in
xor
aad
repz
iret
cmp
hlt
lret
cmp
mov
ret
mov
test
into
xchg
rol
into
in
cld
inc
fsubr
aad
sti
loope
icebp
aam
rol
not
lret
icebp
cli
mov
cs
ss
stc
aad
shr
in
clc
ds
stc
int
clc
icebp
fiaddl
icebp
sub
xor
les
fdivrp
ror
test
cmc
mov
filds
int
in
xor
enter
cmp
fcmovbe
test
and
xchg
loopne
cs
in
shlb
ljmp
fcmovu
cmp
out
in
fdivr
int
filds
aaa
iret
iret
shl
icebp
xor
rcr
sarl
in
incl
cli
jmp
shl
leave
ds
ror
xor
aad
fcmovnu
cmp
fdiv
ret
cld
lea
shr
out
out
icebp
aaa
xlat
aaa
in
std
lock
int3
int3
div
aas
rolb
cli
out
xchg
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
sbb
jecxz
repz
fucomp
aad
lock
cmp
icebp
sti
xabort
clc
int3
in
in
out
loop
loope
das
jecxz
clc
aaa
ljmp
shl
cld
loop
ret
loopne
int
in
ljmp
shl
in
cmc
hlt
ljmp
in
sbb
loopne
mov
enter
mov
enter
aam
cmp
iret
iret
in
into
std
jmp
clc
out
rcr
call
in
in
xchg
loop
clc
call
divb
rcl
push
rol
vpsubsb
fucom
testl
ror
jmp
int3
stc
stc
in
int
xchg
rolb
jmp
xchg
int3
call
call
lock
ror
xchg
repz
aam
mov
out
and
les
hlt
jmp
std
in
out
call
rcl
out
shr
enter
fimull
out
lret
cmp
sub
cmp
cmp
sar
icebp
test
cli
faddp
xchg
ret
lret
addb
icebp
hlt
ret
out
xor
jmp
icebp
sar
incl
xchg
mov
rcl
bnd
rcr
out
std
stc
ljmp
repnz
lret
mov
ret
enter
cmp
cmp
into
out
xlat
out
cmp
leave
ret
in
mov
test
mov
cmp
fcomi
loopne
ds
repz
ffree
sub
iret
loopne
icebp
aaa
mul
sti
ss
in
ret
filds
jecxz
mov
lret
in
lock
in
rcl
repz
mul
hlt
loopne
int3
or
jmp
hlt
aam
cmc
xor
lock
in
inc
repnz
fiadds
repz
int
stc
ret
loop
in
clc
lock
sbb
loop
rol
xchg
fdivr
in
std
loope
repnz
shl
xor
xor
xlat
int3
cli
clc
int
int3
out
fidivrl
sar
ds
addb
jmp
or
in
xor
hlt
ds
rcr
incl
sti
enter
movb
out
cli
xor
in
out
jecxz
repnz
mov
loop
iret
shl
xchg
ss
lock
rol
ds
cmp
rolb
mov
lret
jecxz
xor
repnz
divl
into
lret
aas
jmp
iret
out
roll
test
jmp
lret
repnz
hlt
int3
icebp
stc
cmp
cld
dec
ret
fcmovnbe
shl
sbb
xchg
fcmovu
cli
sbb
ljmp
clc
aam
aas
jecxz
out
std
aas
fadds
sti
mov
mov
cmp
out
in
shl
jmp
repz
rcl
out
stc
clc
out
ljmp
divl
in
loop
loop
xor
filds
addl
xlat
into
loop
cli
int3
out
jecxz
loop
xor
aad
xlat
aad
test
std
adc
add
cli
lret
loop
cs
fxch
repz
icebp
xor
icebp
hlt
aaa
into
clc
fimull
test
addb
repnz
aad
cld
fdivp
out
cmp
fdivrs
sarb
std
inc
int
enter
mov
in
cmp
cmp
cld
cmp
xchg
repz
mov
cld
mul
sti
std
int3
or
in
sub
xlat
ljmp
incb
leave
aas
leave
lret
jecxz
shr
out
xchg
aaa
ss
lret
int
int3
cmc
xor
ret
and
jmp
aam
shl
repz
aas
shll
lret
lret
ss
xor
clc
ror
loop
repnz
mul
sbb
out
shl
ret
cli
das
cmp
into
cmp
clc
aad
and
test
neg
iret
std
ljmp
clc
shrb
test
xor
loop
fidivrs
out
cli
loopne
loopne
fstpt
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
out
mov
jl
flds
jl
out
dec
mov
repz
ret
into
ror
ss
ffreep
aas
loope
jecxz
cmp
cld
sar
out
loop
loope
enter
lret
idivl
int
out
cmp
div
enter
std
cld
test
fcomip
out
aam
cmc
out
leave
xlat
fdivr
lret
cmp
ds
leave
shr
ret
ljmp
xchg
aad
shl
repz
in
stc
loopne
sarl
in
in
clc
loop
int
lret
enter
mov
in
hlt
ljmp
aaa
repz
ftst
loop
std
mov
fldlg2
ret
test
orl
out
xor
cld
clc
std
int3
cmp
fdivrl
in
ljmp
ret
xlat
cmp
int3
fsubr
roll
enter
out
lret
test
enter
test
imul
ljmp
stc
cmp
sar
cmc
fsincos
sar
mov
out
jmp
loopne
lea
leave
std
in
out
cmc
jecxz
cmp
into
cli
mov
mov
icebp
mov
icebp
in
xor
in
cs
div
jmp
ror
aas
mov
mov
cld
fucomp
mov
loop
out
leave
shl
fiadds
out
stc
out
filds
jmp
in
idivl
fcmovnbe
lret
cmp
sarl
fdivrl
test
test
stc
mov
enter
shr
iret
jecxz
xor
xor
loop
int3
in
fst
test
xlat
enter
adcb
xor
ss
cmp
repnz
in
into
repnz
clc
aad
xlat
std
mov
mov
aaa
in
jmp
cmp
fsubr
repz
out
loope
fcomip
testb
in
fsubrp
cld
lret
rorb
shlb
jmp
xlat
test
rol
shl
xchg
stc
mov
std
xchg
jmp
xor
cld
std
xlat
ljmp
rolb
iret
fisttps
jmp
jmp
cmp
call
cmp
mov
test
rcr
fcmove
test
out
test
clc
shl
fld
stc
test
sbb
into
lock
ds
in
cmp
stc
aas
xlat
into
cmp
out
cld
jmp
jecxz
jmp
std
int
lret
jmp
incl
lock
mov
xchg
clc
jmp
jmp
test
sar
int
idivl
fsub
hlt
int3
xchg
cld
jmp
xchg
in
icebp
in
shlb
sar
adc
aam
cmp
mov
mov
fisttpl
into
rcl
ss
jmp
aaa
div
loopne
out
std
cmp
cmp
into
out
test
shrl
in
rol
aaa
cmc
in
rcl
out
ret
xlat
rol
ljmp
lret
repnz
icebp
cmp
xor
in
ror
xlat
int3
call
jmp
leave
rolb
int
ljmp
repnz
out
repnz
sti
jecxz
cmc
mov
ljmp
cli
xchg
cmc
mov
out
jmp
xor
in
push
xlat
addl
in
xchg
xchg
shr
out
aam
fxch
enter
cmp
aas
int3
int3
or
cmc
aas
lret
and
int
dec
out
fdivp
cmp
out
clc
out
cmp
out
cmp
roll
std
lret
loop
mov
enter
lret
sti
das
cmp
int
fcomip
out
cmc
fldl
xlat
in
ljmp
ror
rol
out
in
std
sarl
cmp
ret
cmp
lret
shr
in
in
int3
repnz
shll
cmp
repnz
cmp
int3
iret
test
repnz
mov
lret
and
push
xchg
xchg
out
cmc
in
out
ror
loop
fcmovb
sti
mov
test
inc
fdiv
in
nop
loope
loopne
ret
int3
enter
mul
aam
in
shr
testb
fs
add
push
add
xor
jmp
ret
lret
ror
lret
sub
sahf
in
xchg
sbb
lods
jl
flds
jl
loope
mov
xchg
les
xlat
cmp
neg
sbb
rcl
loopne
and
shr
out
lret
out
mov
in
xor
fadd
neg
enter
clc
aas
addl
jmp
xchg
imull
jmp
int
fidivl
stc
ds
sar
rol
cld
ljmp
repz
out
out
stc
rcl
int
xor
call
into
lds
testl
xlat
mul
int
jmp
aam
into
in
fucom
frstpm(287
clc
call
int3
call
out
out
shlb
rcr
aad
cmp
loopne
stc
fcomip
fmull
xchg
cli
sti
cmp
jmp
rcr
int3
repz
call
shl
shl
enter
mov
jmp
out
out
xchg
into
loope
mul
rol
cmp
rcr
repnz
xor
aam
shl
cmp
addl
fmulp
sar
test
shr
loopne
out
aam
xlat
iret
orl
loop
cmp
xor
jecxz
aad
hlt
rol
cmc
loop
in
test
icebp
xor
xor
sar
in
icebp
repnz
cmc
jecxz
adc
sbb
cmc
loop
out
mov
jecxz
shl
out
test
fcmovb
fldln2
clc
addb
sti
mov
loop
ror
lret
enter
fdivrs
shrl
cmp
shl
cmp
xlat
lock
std
xlat
cmc
aad
test
xchg
loope
fdivp
fdivp
ss
lret
clc
in
xlat
int
int
xlat
fcomip
std
hlt
mov
repz
test
out
lret
in
out
cmp
rcl
int
ljmp
stc
xchg
leave
test
in
int
xor
clc
aas
repz
stc
icebp
stc
addl
stc
xrelease
sub
ss
enter
cli
sti
cli
shl
xchg
icebp
fdivr
testb
fcomip
lret
out
enter
leave
xor
sti
cli
rcr
roll
addb
nop
mov
jecxz
lret
shr
into
aad
shl
roll
fadd
loop
xchg
hlt
not
in
cmp
cmp
xor
out
fdiv
cmp
jmp
mov
mov
orl
das
lret
cmp
rcr
into
out
fstp
fadd
hlt
in
out
xchg
aam
lret
loopne
loop
jecxz
loope
jmp
iret
cmp
sti
loope
cli
test
enter
xor
shl
enter
ljmp
out
ds
cmc
icebp
add
fucomi
xor
out
xor
aaa
in
aaa
jmp
xlat
int3
shl
test
mov
mov
shl
fucomip
aaa
xor
xor
cmp
sarl
repnz
aas
or
out
ljmp
in
rcl
enter
lret
cmc
lret
fidivrl
div
fiaddl
loopne
mov
shl
in
enter
clc
loope
out
aad
sar
call
aam
leave
in
into
addb
leave
clc
into
rcr
cld
lock
in
xlat
hlt
roll
int
in
lret
mov
in
shrl
test
call
cmp
loopne
cmp
std
xlat
out
rcl
test
sub
mov
out
xor
loopne
cli
xor
cs
lock
lock
mov
adcb
out
ret
repz
ds
int
les
aad
jmp
mov
or
xchg
mov
ds
xor
cli
int
xlat
jmp
out
loop
stc
cmc
repz
out
out
fstl
aad
fdivr
out
cmp
aad
shl
shr
ret
ret
fsubp
test
xchg
fucomi
enter
ds
fxtract
stc
in
cmp
ds
testl
cli
in
sar
out
in
sub
iret
fcomp
in
cld
enter
ret
je
jmp
iret
aad
aad
aad
aad
mov
les
invd
in
mov
jl
add
inc
sti
lret
xchg
repz
aam
ror
cmp
cmp
jmp
cmp
aam
cld
fneni(8087
loopne
mov
ljmp
lret
aaa
ret
cmp
lret
sti
sbb
loop
cld
sti
out
std
aam
aam
call
fdiv
xor
std
flds
cmp
jecxz
ljmp
in
xorl
out
xor
xlat
cmp
call
loope
xor
test
jmp
mov
std
leave
mov
xor
mov
aaa
fst
clc
cmpb
lock
mov
loopne
jecxz
lret
lret
in
rol
cmc
repnz
xor
ss
ds
jecxz
fadds
xchg
hlt
hlt
rcl
sar
idiv
leave
lock
testl
cli
lret
lret
lret
mov
into
cmp
hlt
std
cmp
repnz
cmp
aad
faddl
out
jmp
sbb
repz
lret
lock
loopne
xor
out
lret
shr
fmull
cmp
lret
into
in
cmp
cld
rcl
repnz
aam
xchg
jmp
mov
iret
in
jecxz
aam
loop
mov
lret
fcomi
repnz
cli
movl
call
stc
fcmovne
iret
test
shl
aam
hlt
fst
xlat
fmul
fmulp
mov
rcl
out
into
ss
idiv
xor
call
xor
in
in
fcomi
std
imul
std
subl
les
ljmp
iret
inc
mul
faddp
mov
xchg
test
test
in
out
stc
in
into
cli
int3
int3
fnstcw
fidivl
aam
clc
ds
leave
call
sbb
jmp
out
cmc
lock
cmp
cmp
fstpt
ljmp
div
mov
enter
test
int3
leave
in
in
lret
aas
idiv
idivl
cmp
ret
stc
test
cld
loopne
fisttpll
cmp
repz
xor
repz
neg
jecxz
test
xchg
fmul
int
leave
jecxz
rcr
xchg
ljmp
stc
cld
xor
aam
loopne
aad
cmp
mov
lret
mov
loopne
lret
repnz
lock
jmp
cmp
lock
aad
iret
out
out
out
lret
call
out
loopne
sub
sub
lock
loopne
jecxz
enter
and
in
test
loopne
leave
cmp
loopne,pt
fidivrl
out
loop
cli
mov
jmp
sub
aad
jecxz
xlat
int
in
xacquire
mov
adcb
lret
into
inc
fcomip
sbb
sub
loop
cld
jmp
xchg
iret
iret
out
sub
cmc
fcmovne
jmp
cld
in
fcmovne
jmp
out
cld
ror
sub
mov
call
out
lret
icebp
lret
ret
xchg
xchg
repnz
add
cli
in
mov
fucomip
mov
int3
ror
int3
fcmovnu
cmc
sti
cli
hlt
idivl
cmp
loopne
in
fmul
int
shl
icebp
in
in
lret
cli
lret
std
leave
out
xlat
sti
int
push
into
test
lock
sub
enter
iret
out
mul
repnz
call
cmp
lret
fcmovbe
rcr
cmp
not
mul
mov
mov
mov
enter
repz
stc
clc
lret
icebp
int3
hlt
mul
lock
loop
mov
shl
mov
aaa
repz
jmp
loopne
fcomi
ss
in
clc
lock
mov
out
in
enter
cmp
out
lock
xor
rcr
sar
fcmovne
loope
jmp
jecxz
int3
lock
xor
lock
clc
repz
ds
fcom
addb
in
enter
fyl2x
ror
sarb
aaa
ss
cmp
stc
or
test
loope
xchg
loop
sarb
in
shl
ss
cmp
clc
lock
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
adcl
flds
jl
in
lret
loope
out
filds
in
flds
shr
xlat
repz
ljmp
xor
jecxz
out
fsub
leave
clc
cmc
cmc
sti
cli
jecxz
loope
lret
xchg
xor
cmp
into
shl
cmp
cmp
sar
ret
xchg
mov
clc
repnz
hlt
xchg
loope
into
lds
aad
lock
sarl
fmulp
cmp
clc
std
jmp
fsub
fcomip
out
lock
sub
xor
loop
fidivl
leave
cmp
iret
cmp
aaa
loop
hlt
ret
mov
fninit
enter
fcoml
int
int3
icebp
fdivl
div
aad
clc
loop
ds
mov
leave
int
mov
int3
leave
xor
cmc
xlat
aaa
out
leave
ss
out
sarb
loop
leave
mov
sub
icebp
das
out
aad
not
ss
lret
into
aas
rcl
ret
fcomp
out
out
loope
in
in
fiadds
shr
lock
cmc
xor
addl
jmp
lret
jecxz
in
mov
test
sti
ss
fdivr
test
xchg
out
fcomip
xchg
xchg
jecxz
jecxz
int
ss
xor
stc
in
cmp
xor
not
xchg
cld
stc
mov
xchg
std
mov
xor
cs
enter
xor
cmp
in
cli
cli
sti
sub
in
loopne
out
out
sub
lret
fdivr
fcom
in
fiaddl
add
jecxz
and
out
iret
in
xlat
cs
cmp
aaa
cs
xor
stc
sti
loopne
cmp
std
fcomi
repz
fildll
xor
int3
leave
ss
hlt
loopne
sarl
aaa
in
jecxz
lock
leave
cli
in
decb
mov
ds
aad
aam
aam
ds
cmp
stc
fldl
repz
xlat
repz
cmp
repz
rcr
int
sti
fadds
icebp
sar
in
rcr
shll
repz
sarb
cmp
aas
fdivr
aas
out
cmpb
out
cli
mov
neg
filds
repz
cmp
xlat
out
repnz
neg
lret
hlt
jmp
mov
lret
jmp
in
aam
in
ss
roll
sti
clc
mov
int3
int3
leave
out
lock
fsubr
out
repnz
out
fdivrp
sti
leave
mov
fsubrp
ret
icebp
in
out
call
xlat
sti
aam
in
sar
cmp
jecxz
fldl
out
ljmp
aam
clc
out
clc
sti
fmulp
cmp
clc
xlat
mov
hlt
fldlg2
ljmp
xor
xor
ret
fcmovbe
repz
xor
sti
repz
test
add
lret
rorl
mov
in
into
lret
cli
leave
sarl
loope
hlt
loop
addl
mov
leave
fnstenv
int3
out
xor
aad
cmp
xlat
fucompp
testb
jmp
jmp
out
cmc
shl
dec
sbb
sti
test
out
loopne
and
xlat
sti
fcmovnu
cmp
aas
iret
loopne
shl
movb
out
idiv
sarb
jmp
repz
testb
aam
addl
in
loop
rol
out
repnz
shr
fucom
loop
incb
ret
mov
in
mov
ljmp
stc
clc
into
clc
out
cmp
fcmovnb
in
aad
ds
xlat
iret
incl
icebp
enter
lret
out
sti
ror
ror
aam
shl
jmp
testl
xlat
shl
icebp
sti
cld
shl
xlat
rcr
cmp
out
sti
cmp
in
std
xlat
into
cli
ljmp
stc
out
lret
rcr
cmp
aaa
lock
addb
jmp
mov
jmp
fnstenv
sub
ds
lret
in
or
test
in
loopne
fdivp
icebp
xor
ror
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
add
flds
jl
hlt
aaa
idivl
cmc
idivb
sar
loop
jmp
in
lret
ret
roll
xor
aam
neg
sub
lock
cld
repz
leave
loop
call
addb
lret
jmp
in
jmp
call
dec
fiadds
lret
in
fsub
jecxz,pt
loop
fcomp
jmp
roll
fsub
fldl
out
mov
std
iret
mov
loopne
jecxz
leave
in
cmp
clc
repz
test
hlt
out
aam
out
lret
in
xchg
loopne
fcomip
divb
divb
rcl
cmp
ss
loopne
test
sti
std
repnz
fsubp
mov
in
mov
jmp
hlt
divb
lock
iret
out
rolb
mov
sub
int3
test
int3
enter
das
xor
xlat
ljmp
ds
fcmovnbe
jecxz
fmull
lret
cld
hlt
das
xor
ljmp
clc
hlt
cmp
cmp
in
fldz
fcmovu
fisttpll
sub
cmp
xor
call
sti
cmp
xlat
stc
enter
fsubr
out
enter
sar
lret
in
jmp
jmp
out
clc
aam
cmc
sar
in
mul
int3
enter
jmp
iret
aaa
in
hlt
hlt
iret
fdivrs
std
fcmovnb
xchg
cmc
cmpb
ffreep
jmp
jmp
not
stc
out
leave
repz
jmp
loope
stc
test
test
sbb
cmc
ror
clc
jmp
iret
xlat
lock
loope
leave
or
enter
addb
mov
iret
in
fucomip
cld
int3
or
into
out
xlat
xor
enter
cli
in
cmc
test
ss
in
fnstsw
int3
fcmovu
or
xchg
decl
xor
rol
shrb
hlt
ror
aad
fdivp
in
leave
xlat
loop
ljmp
in
out
out
enter
cmp
enter
and
mov
fsub
cld
and
loope
roll
sarb
in
aam
lret
fld1
cld
cld
aaa
cmp
xchg
ror
test
fucomip
xchg
adc
leave
xlat
jmp
jmp
sti
fucomp
hlt
in
shr
and
mov
out
mov
aaa
xor
in
repz
lret
repz
out
loop
in
aam
fucomi
lret
xchg
fimuls
in
clc
stc
cmp
shr
in
addl
cld
cld
out
out
cld
jmp
divl
clc
cmp
in
sbb
into
repz
testl
xor
stc
int
lret
div
cmp
clc
aaa
iret
add
hlt
aam
jmp
mov
rcl
das
hlt
ret
jmp
cli
lret
cli
incb
mov
lret
in
stc
sbb
fsubrp
loopne
iret
ss
cmp
sarl
imul
out
rcl
fneni(8087
mov
ljmp
repz
sub
cmp
int3
fcmovnu
stc
in
hlt
out
fiadds
in
mov
jecxz
sub
lock
fnstenv
cli
xor
cmp
loop
leave
mov
fcmove
int
mov
lock
xor
jmp
cld
aad
out
call
std
call
icebp
jecxz
sub
int3
cmp
aam
fldlg2
aad
out
ret
cld
fsub
lock
int
fisttpl
mov
lock
rcl
fsub
rcr
iret
cmp
cli
aas
in
add
std
shl
jmp
loop
in
fdivp
out
in
lret
sti
aas
stc
fdivr
roll
cmp
out
test
call
sar
ret
int3
xor
lret
lock
test
xlat
add
std
loopne
fcmovne
out
jecxz
rcl
lock
int3
out
fmul
clc
aam
aas
neg
xchg
out
decl
call
xor
jmp
call
sti
cmp
cmp
ret
fimull
into
loopne
in
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
xor
jl
flds
jl
out
loop
xor
int
ror
ror
jecxz
out
aas
mul
decl
lret
iret
ret
fucomp
cmp
jmp
out
idivl
sti
fxam
fsub
fisttpl
loope
in
out
out
sub
in
repz
addl
loopne
and
out
repz
hlt
fcomp
imul
cld
cmp
repz
test
hlt
mov
ds
loope
addl
fcom
ljmp
out
std
sbb
ret
loope
vpaddusb
ss
cmp
xor
ds
ret
call
sti
fcmovu
std
fadds
lock
in
loop
in
xor
rcr
aam
lret
loope
loop
sarb
fadd
lret
in
out
or
in
cmc
repnz
stc
cli
ljmp
cmp
fmuls
ffreep
fiadds
xor
jmp
rcl
fnstcw
cld
ds
ret
in
out
xlat
fcos
out
xchg
enter
xchg
cmp
idivb
flds
fsub
jmp
add
in
ror
addl
fcmovbe
int3
hlt
out
std
cmp
aas
sarl
stc
clc
ret
sti
loope
out
call
out
out
jmp
in
cmp
fninit
in
adc
idivb
mov
decl
int3
out
clc
xlat
not
fdiv
jmp
sarl
mov
out
fimuls
xchg
loope
out
lds
fcmovbe
addb
jmp
lret
sbb
ljmp
repz
jmp
sbb
hlt
cld
sbb
jmp
sub
jmp
loope
out
cli
lock
enter
loop
out
ffreep
sar
in
loopne
into
mov
test
aaa
int3
ljmp
rol
ret
in
cmp
ret
incb
sbb
xor
aad
jmp
repnz
clc
sti
cld
icebp
mov
in
enter
xchg
xchg
test
out
into
cmc
stc
cmp
cmp
test
lret
jmp
loope
xchg
shl
in
xor
leave
loope,pt
lret
repnz
rcr
mov
in
out
ret
call
shll
out
repz
cld
out
fldl2t
out
fadd
ljmp
aad
aaa
in
xlat
fnstcw
fsincos
into
cmc
into
stc
out
cmp
aam
rolb
out
call
in
aad
sub
stc
ljmp
loope
loopne
loope
cli
fdivrp
jmp
loop
out
lret
lock
lock
lret
fistpll
ss
xor
cld
xchg
cmc
sub
ret
clc
ss
repz
cmp
cmc
hlt
mov
out
in
loope
xor
into
out
cmc
not
lret
aam
shl
shl
in
in
jmp
loopne
iret
leave
fcmovbe
xchg
into
int3
loopne
fcmovu
cmp
cmp
imul
int
test
xlat
fdivr
fiaddl
loope
repz
xor
in
cli
xor
fcmovne
aas
std
rol
hlt
lock
fldln2
ret
in
addb
int3
repz
cli
clc
into
repnz
in
jecxz
cmc
shl
cmp
in
stc
test
xchg
loop
in
aaa
cmc
out
sar
repnz
out
sti
xchg
in
mov
rcll
rcl
das
into
shl
stc
cmp
aas
ret
in
leave
mov
in
fucomi
mov
fst
sub
aad
std
les
call
bnd
test
in
test
repnz
mov
jmp
aam
jmp
fmul
in
fmul
aad
loope
mov
test
xchg
lret
loope
loope
enter
cmc
out
cmpl
xchg
repnz
jmp
mov
mov
xchg
lret
ljmp
fcmovnu
in
jmp
ljmp
imul
loopne
ljmp
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
sti
shl
mov
ret
leave
repz
cmp
loopne
in
ret
xchg
out
addb
lea
in
xlat
cmp
icebp
aam
std
stc
loop
test
lret
lea
sti
dec
jecxz
jecxz
das
cmp
in
lret
call
aas
fchs
fld
shr
mov
nop
rolb
xor
in
leave
xlat
in
cmp
repnz
idivb
ret
testl
jecxz
imulb
icebp
int3
xlat
aam
stc
ds
sti
mov
fadd
leave
ljmp
aam
iret
out
ljmp
loopne
ljmp
fmul
xchg
xchg
rol
ror
xor
hlt
rcr
lret
lret
cmp
stc
loop
int
rol
hlt
out
decb
shl
ss
lret
hlt
cli
loop
out
fadd
test
std
hlt
in
sti
cli
call
icebp
in
add
test
fbstp
sti
repnz
std
addl
in
out
leave
fnop
cs
shr
out
fcmovnu
imul
faddl
cmp
in
loopne
shr
sub
enter
xor
fucomip
testl
shl
test
out
lret
orb
xor
ss
sti
stc
xchg
ret
int3
out
fucomip
loopne
mov
aaa
lret
xor
rcl
ljmp
addl
repz
call
lret
aas
std
lock
xlat
cmc
aad
repnz
ret
mov
loop
out
fiadds
jecxz
xor
aam
xlat
rolb
fdivrp
icebp
dec
call
xchg
rorb
loope
shl
in
aam
cmp
iret
test
sub
cld
out
jmp
repz
clc
int3
cmp
icebp
icebp
int
cld
fstpt
loopne
adc
fldl
mov
orb
sarl
xlat
xor
enter
call
ret
loop
mov
aad
out
fadd
aad
ss
sar
rorl
fildl
loopne
stc
int3
fxch
out
mov
cmp
xor
cld
div
in
incb
int
imul
int3
int
sar
lret
cmp
into
aas
xlat
std
fdiv
ret
rcr
xchg
loope
in
in
sub
jmp
cmp
or
in
cmc
fyl2xp1
xchg
out
lret
ret
loope
xchg
shlb
into
lret
int3
ljmp
repz
aam
orb
mov
lret
jmp
in
aam
shl
lock
into
mov
sti
mov
jmp
fcomip
loopne
jmp
shl
clc
fsubrp
ljmp
loopne
test
call
sbb
shl
das
xor
xor
fdivrs
cmp
ljmp
in
std
leave
sti
in
stc
fdivr
loop
and
jmp
cs
xor
jmp
aas
shl
orl
in
faddl
aam
cmc
lock
dec
loopne
cli
addb
hlt
lret
mov
cli
nop
lock
rcl
cmp
idiv
in
shl
aas
sbb
fisttpl
xchg
roll
out
fdivr
cmp
out
lret
fsubr
ffreep
ds
movl
jecxz
out
rol
repz
cmc
int
lret
inc
loopne
loope
loope
lds
popl
ljmp
fdivrs
into
iret
ds
test
mov
out
int3
mov
xor
iret
out
idivl
hlt
hlt
int
cli
shl
addb
iret
sti
into
into
mov
add
fnstenv
ljmp
out
cmp
call
loope
std
out
repnz
call
sarb
xor
fbstp
cmp
sti
aam
loopne
addl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
fxch
cmc
xor
jl
add
in
enter
lret
loope
rcl
out
ljmp
cmpl
cmp
out
rol
test
sbb
repnz
out
aaa
rcl
fmul
enter
sarb
test
rcr
cld
std
mov
fbstp
repnz
fucomi
cli
lret
fsqrt
repz
loopne
out
cmp
inc
mov
clc
dec
int
jmp
aaa
aaa
repnz
shl
cmp
in
loope
sti
testl
xchg
sub
into
call
iret
clc
fmul
out
push
cld
stc
in
shl
leave
hlt
lret
movb
test
in
out
idivl
incl
cmc
addl
xchg
std
xor
div
ljmp
cmp
fnstsw
clc
call
int3
enter
aaa
ret
aad
jmp
xor
ret
testl
nop
lret
xlat
shll
call
repz
xlat
ffree
out
in
fisttpl
cld
xchg
ljmp
iret
imul
neg
aad
ds
clc
fdivp
jmp
int
lds
aad
shr
in
cmp
repz
hlt
fcmovbe
addb
leave
fimull
adc
cmc
imul
in
leave
fsubr
lret
sbb
fdecstp
fcmovu
shl
aam
int
mov
out
enter
lret
ds
cli
cmp
sar
cmc
adc
xlat
out
ljmp
ds
ror
into
cmp
fstpt
out
into
aam
cld
cmp
fsubrp
jmp
out
mov
mov
out
test
lret
out
loope
ret
in
fld
cld
lret
test
sti
and
loopne
clc
repnz
repnz
cmp
cli
testl
in
mov
lret
lret
lret
in
in
shr
ss
lret
cmp
fdivrs
xchg
ljmp
clc
in
enter
ds
call
fld
ret
cmp
fisttpll
repz
in
int
sti
fsubr
sti
std
fldl
repnz
fsub
loop
mov
repz
test
int3
out
in
in
neg
enter
not
repz
hlt
fisttpl
test
loope
xor
lock
icebp
in
icebp
cmp
ret
in
jmp
ffree
test
in
shr
loop
xlat
sub
cmp
cmp
rcl
fld
repz
neg
adc
xchg
xor
in
rol
aad
roll
loop
icebp
out
loopne
les
cmc
or
call
fdivrl
cmp
ljmp
sti
rolb
in
out
mov
out
f2xm1
repnz
jmp
cmp
xchg
lock
mov
popl
loope
jmp
in
in
out
rcr
fidivrs
cli
stc
xlat
clc
fdivp
std
decb
fmul
cli
faddl
sti
fptan
enter
xlat
int3
cmc
std
cmp
call
cld
cmp
mov
incl
fcmovbe
ss
in
cli
loope
aam
cmc
out
test
rcr
fprem
in
call
fisubrs
in
int
cmp
cld
leave
iret
cmp
ret
loopne
clc
xchg
in
repz
mov
loope
iret
stc
fxch
ss
ljmp
enter
xchg
repz
cmp
cmp
fcmovnbe
out
ret
clc
rorl
mov
or
out
das
in
jmp
addl
cli
fadds
xchg
cs
ret
shl
xlat
sti
xlat
out
into
icebp
cld
fucomp
hlt
inc
jecxz
int
cmp
jmp
out
ror
cmp
out
std
icebp
faddp
aad
fcmovnb
movb
test
out
hlt
cmc
shl
jmp
fdivs
cli
xor
iret
fcmovnu
repnz
add
lret
aam
fstp
fisubrl
push
int3
je
mov
flds
jl
movl
xchg
out
ljmp
sub
leave
int3
cmp
cmp
sar
loopne
xchg
in
inc
stc
ljmp
out
aam
lret
and
aas
sbb
bnd
fisttps
ficoms
shl
ffree
icebp
in
jmp
rol
cmc
into
into
cmc
out
out
dec
shl
jecxz
enter
cmc
cmc
cmp
shr
shr
clc
sti
fcmovb
fcos
in
in
cld
ljmp
ljmp
cmp
repz
fdivr
ror
cmp
cmp
in
lock
stc
into
rcl
xor
in
hlt
in
flds
cmp
fcomip
sub
nop
in
lock
ret
out
shr
cmp
aas
cmp
clc
hlt
ret
loope
xchg
jmp
loopne
loop
xchg
in
cmc
xor
enter
lret
rcr
xchg
jmp
aas
loop
loop
int
in
ror
stc
xor
aaa
idivl
fprem1
sarl
rcl
cld
loope
fld
cld
add
sti
or
in
aad
enter
cmp
cmp
in
sarl
loop
sti
test
test
in
jmp
mov
xor
stc
clc
cmc
sti
dec
jmp
xlat
cmp
rol
addl
test
shl
jmp
fucomi
int3
into
cmp
fsub
addb
lret
jecxz
shl
ljmp
stc
stc
lret
stc
xor
loope
in
loope
jmp
call
in
out
in
out
cli
shl
fidivrs
fucom
fiaddl
mov
repz
int3
sti
ss
cmp
xchg
test
movl
rorl
clc
cmp
aam
cld
jmp
ret
xor
in
lret
xchg
out
add
rcr
in
into
jmp
lock
repnz
clc
rcr
hlt
sti
enter
xchg
fdiv
mov
test
iret
call
cmp
jmp
test
cmp
jmp
mov
in
cmc
cmp
stc
out
in
out
cmp
adc
aas
cmp
cmp
addl
out
loope
out
in
sti
sub
sar
mov
les
and
xchg
lock
ret
xor
idivl
fcmovbe
lret
aad
in
test
fmul
xlat
mov
mov
xchg
test
out
shl
enter
fucomp
hlt
adc
fucom
int3
test
sti
repz
imul
int3
lea
mov
das
out
in
xor
fdivr
out
not
rcl
iret
into
aad
mov
lret
lret
std
mov
jecxz
out
into
cmc
sar
stc
clc
aad
fnsave
lret
jecxz
movl
and
into
int3
clc
cmp
fmul
ss
in
fldpi
cmp
cld
cld
call
out
xchg
repnz
jecxz
ss
std
int3
in
fnstsw
xchg
lock
call
xchg
fldl
out
xor
std
dec
cld
lret
cmp
lock
roll
fldl
lret
ljmp
jmp
fmulp
fiaddl
cli
sti
aad
sbb
enter
icebp
imull
cmp
cmp
cmp
sti
aam
fadd
nop
or
rcl
icebp
repz
out
loop
aaa
xor
iret
ss
xlat
lock
addl
loop
out
in
in
xlat
shll
lock
call
idivl
cmc
mov
in
fmulp
and
test
ror
xor
xor
sarb
iret
in
fdivr
aam
clc
clc
jmp
fsubr
loope
nop
mov
cmp
cmc
fucomp
aaa
shl
xchg
mov
testl
xchg
fmulp
les
xlat
jmp
fdivrs
fdivrp
fadd
aad
in
mov
test
out
in
enter
std
call
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
push
lret
adc
jl
lret
jl
shl
cmp
rolb
stc
sbb
loop
rol
fcmove
lret
aam
fsubr
ljmp
call
aam
xchg
loope
mov
aam
shl
shr
ror
out
aas
icebp
test
mov
out
cld
mul
fsub
out
xchg
cld
icebp
cs
enter
fidivrl
addl
out
jecxz
in
fmul
xor
icebp
cmc
leave
jmp
out
lret
repz
test
aad
jmp
int3
cmpb
cmp
loop
fst
lret
xor
xor
filds
call
hlt
subl
aam
repz
sti
cmp
cmp
rcl
aaa
test
xchg
jmp
call
sti
std
loop
int
into
xor
jmp
hlt
cmp
repnz
cmc
loope
iret
aad
loope
loop
in
ror
sti
mov
int3
xor
icebp
enter
shll
cmpb
mov
ret
flds
out
lret
shl
ret
call
aas
ds
or
std
cli
enter
in
in
clc
mov
loop
jmp
cmp
ljmp
test
xlat
hlt
out
loopne
jmp
fmuls
ret
rcr
lret
lock
ds
int
repz
testb
aaa
xlat
lret
aad
lret
iret
xor
icebp
into
cmp
sub
shl
sti
jmp
lret
test
xor
stc
icebp
jmp
aad
into
rol
ds
std
cmp
in
lret
lock
shl
ret
int
jmp
incb
jmp
loope
jecxz
dec
in
cmc
call
lret
cmp
cmp
fcomi
aam
les
out
sbb
int3
fldl
repnz
iret
out
fcomi
jmp
cld
clc
out
shl
jecxz
ljmp
repz
ljmp
lock
loopne
aas
loopne
fdivp
mov
xchg
int
out
test
xchg
xchg
sub
iret
ffree
sti
stc
cli
neg
stc
test
loop
shr
loope
loopne
in
clc
test
jmp
fildll
in
int3
ljmp
repnz
test
rol
adc
fdiv
enter
ljmp
fcmovne
xor
ljmp
cmp
fildl
fdivr
cld
shr
cmc
lock
fxtract
icebp
xor
stc
std
ds
icebp
cmp
std
fcmovnb
xchg
mov
jmp
icebp
call
xor
in
xor
dec
clc
ss
sti
cld
int3
cmp
rol
call
std
push
ss
out
enter
out
iret
loopne
out
in
push
rol
in
cld
test
jecxz
sti
enter
sub
sarb
jmp
lock
fcmove
stc
roll
loope
shr
mov
lock
fmul
cmp
sar
add
in
out
aam
jecxz
xchg
in
lock
enter
xlat
lret
lock
test
fcmovu
clc
out
icebp
xorl
leave
in
fptan
fcmovu
lret
ret
clc
rcl
ret
in
fmul
sub
out
and
loopne
xlat
divl
fidivrs
fsubp
cld
jmp
sbb
jmp
call
jmp
xor
cld
fadd
ljmp
into
fdivp
xchg
out
cld
ror
out
xchg
hlt
call
hlt
sar
enter
lret
in
mov
jecxz
ljmp
cs
sub
leave
cmp
out
aad
int3
fldlg2
shl
jecxz
cmc
jecxz
jecxz
lock
in
cs
enter
into
fdiv
sarl
aad
fidivrl
test
xchg
out
les
xlat
stc
repz
iret
lret
sarl
loop
cli
out
jmp
std
loope
repnz
in
sarb
shl
cld
movl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
jb
sub
lret
jl
into
sub
xchg
loop,pt
cmc
clc
cmp
sbb
and
enter
cli
aad
rol
cmp
ror
sarl
fadds
loop
neg
xchg
nop
loop
and
xor
ret
out
cmc
rcr
fcom
out
jecxz
lock
xlat
hlt
mul
loopne
les
test
ss
cmp
mov
cmp
fsubr
call
aam
call
out
xor
in
cmc
fcomp
aam
out
aam
into
ret
std
jmp
filds
fdivr
int3
in
xlat
in
rcr
call
shr
in
in
into
and
call
in
loope
repz
ljmp
lret
imul
ds
cli
loopne
addb
out
call
in
sub
in
xor
xor
sar
leave
clc
aas
adc
stc
out
loope
hlt
mov
iret
test
faddl
repz
aad
fdivr
cmc
in
sarb
or
loope
rol
xchg
in
in
loopne
leave
nop
jecxz
call
les
in
clc
xor
sar
rorl
mov
ljmp
jecxz
lret
sub
ljmp
aad
aaa
xlat
sti
loopne
repz
stc
xchg
out
call
lock
test
sti
ss
aad
int3
xlat
repz
out
fcmove
in
test
xchg
fucomip
loop
test
rcr
xlat
fdivr
xlat
shl
push
ffree
xlat
repz
sti
lret
fmul
jecxz
xor
lret
stc
aad
aad
rcr
aad
out
jmp
mov
std
ret
mov
ret
in
in
in
shl
ljmp
hlt
aad
ffreep
leave
jecxz
fists
int
fucomi
icebp
shr
clc
repnz
std
shr
shl
fisttps
xchg
xchg
stc
xor
stc
shl
loopne
fcmovne
aaa
std
loope
xchg
out
testb
cli
repz
enter
shl
fidivl
aad
cmp
cmp
xor
flds
ljmp
stc
in
not
repnz
fdivl
cli
lret
idiv
loope
lret
mov
test
mov
shl
ss
aad
aaa
into
shll
cmp
adc
fadd
lock
fxch
cli
xlat
lret
lock
test
loope
in
mul
out
fcmovb
cmp
inc
in
aam
in
cmc
or
in
iret
fadds
loope
cmc
clc
shr
repz
cmc
cmp
loope
clc
xlat
sar
fcmovnb
ret
orb
icebp
xor
fadd
mul
out
out
cmp
repnz
vcvtdq2pd
fmull
testb
imull
in
imul
cmp
xor
cmp
aad
jmp
int3
ljmp
aad
lret
cli
lret
lret
hlt
rcl
sar
rcr
fld
orb
xchg
roll
in
enter
int3
aas
out
lock
cmp
ds
leave
in
loopne
lret
test
addl
enter
sti
in
div
stc
mov
xchg
out
xchg
repnz
xor
aaa
fcmovu
neg
fdivrl
hlt
ds
clc
xchg
call
int
out
aam
in
lret
out
out
sub
ds
mov
std
add
mov
int
add
in
in
cmc
fsubr
sti
stc
add
std
int
out
nop
xchg
into
int3
in
shl
jecxz
jmp
lret
aas
shl
in
in
neg
test
call
mov
int
rcr
sub
in
cmc
test
out
roll
cld
fstp
loopne
jecxz
out
ret
cmc
lret
xlat
int3
ret
out
mov
sti
fidivrl
ret
std
cld
test
iret
shl
ss
int3
jmp
cli
xorb
xlat
in
and
jecxz
fsub
out
in
fucompp
cmc
cmp
test
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
js
or
jl
fdivrp
ss
idiv
cmpl
cli
mov
ret
sub
mov
nop
jecxz
out
xor
lret
cli
aad
fldl
icebp
loop,pt
addl
into
ret
aam
shl
std
cli
loope
cli
repnz
mov
in
fisttpll
fidivs
aaa
out
test
clc
cmp
fcom
stc
call
lret
leave
out
mov
into
int3
in
jmp
int
sti
stc
out
idiv
int
into
cmp
loopne
fsub
jmp
xchg
ljmp
in
lock
loope
fstpt
cmp
ret
std
xor
test
test
out
out
int
sar
cli
icebp
into
loopne
fcomip
sarl
rcr
out
addl
loopne
mov
ljmp
cmc
out
std
enter
cld
not
loopne
ret
jecxz
std
in
ret
xchg
xor
in
cmc
cli
iret
ror
int3
aam
fcomip
rcr
rcl
call
in
fiadds
into
jmp
cmp
repz
rcr
iret
ret
mov
int
loop
std
lock
into
sub
loop
in
jmp
fnstsw
aad
hlt
shl
rol
test
mov
shl
icebp
clc
cmp
shr
jmp
fcomi
out
in
leave
ret
fildl
test
rorb
fst
aad
loope
aam
sti
in
mov
cli
in
filds
xchg
jmp
clc
cmp
jecxz
and
testb
fucomp
mov
int3
xlat
cmp
hlt
enter
std
out
repnz
add
xlat
incl
mov
out
in
xor
cmc
leave
cmp
cmp
cmpl
out
enter
lea
cld
mov
xor
cs
cli
jmp
cmp
lock
in
in
ror
fcmovnu
ljmp
fdivr
aam
cmc
enter
ds
repnz
std
ror
xlat
leave
or
mov
rcr
shlb
into
xor
sarl
cmp
cmp
fdivrp
aam
cld
clc
std
hlt
cmc
mov
incl
nop
nop
xchg
ret
int
out
fdiv
call
xlat
repz
test
in
loope
xchg
cmp
out
xor
jecxz
std
cs
cld
aam
cli
sti
in
loop
xchg
loope
fsubr
jmp
fsubp
jmp
loop
in
imul
icebp
in
ljmp
addb
mov
loopne
in
sbb
jmp
lock
addl
rcl
call
incb
ret
out
fcmovbe
hlt
aaa
into
iret
in
icebp
loopne
cmc
rorb
ljmp
int
hlt
sti
mul
call
out
ds
aam
cmp
aam
enter
sti
hlt
subl
cmp
int3
jecxz
sar
test
flds
jecxz
clc
and
mov
xlat
loop
sub
iret
in
fcmovnbe
call
cmp
jecxz
or
mov
fldz
leave
mov
call
fst
call
int3
clc
clc
in
mov
decb
incb
into
les
in
ss
iret
cmp
aam
rcl
fcmovbe
cld
cmp
jecxz
popl
in
loop
jmp
test
xor
cmp
iret
cmp
jecxz
and
fcmovbe
out
fildl
out
lret
lds
icebp
cli
in
ss
sti
hlt
out
rcl
cli
cmp
ds
popl
not
call
out
std
stc
neg
cmp
xchg
int3
clc
out
out
sti
std
xchg
in
xor
clc
fdivrp
xor
clc
aam
icebp
test
ljmp
int
ror
not
leave
xor
neg
repnz
dec
cmp
cmc
icebp
in
out
cli
lret
ljmp
shl
call
sti
icebp
jmp
xlat
repnz
shl
in
mov
mov
jmp
rol
aad
aad
fcmovne
scas
push
mov
mov
pop
jl
lret
jl
testl
sti
stc
jmp
repnz
out
sar
lret
fisttpl
xchg
test
jmp
xor
out
std
fdivr
aad
loop
out
rol
adc
test
cmp
xchg
xchg
enter
sar
jmp
jmp
cmp
loop
std
cmp
ret
in
sti
int
loop
fcmovbe
xchg
stc
shlb
into
into
sti
cli
cmp
xor
iret
out
not
in
loopne
neg
out
ficoms
xor
rcl
aad
sarl
iret
fmul
loop
faddl
fadds
call
xor
out
sti
xbegin
int
rcr
cmp
xchg
lret
mov
cld
cmc
shr
xor
jmp
cmp
hlt
ljmp
mov
fsubp
adcl
xlat
aam
repnz
cmp
sti
addb
in
aam
in
fmull
hlt
lock
fcmovnb
sarb
out
add
test
aas
mul
lret
fldl2t
fadds
fsubrp
aad
aad
cld
repnz
repnz
aas
cmp
sti
lock
aas
cmc
xor
icebp
stc
cld
into
out
ljmp
adc
jmp
flds
jmp
loop
xlat
out
cmp
cmc
ss
std
cmc
cmp
xor
cmp
test
lret
flds
cld
ljmp
fxtract
fprem
rcl
repz
xlat
fdivp
addl
xchg
aam
sub
out
shr
aas
cli
shr
aas
sti
repz
stc
lock
out
dec
out
ret
in
jmp
sarl
shr
cmp
icebp
fdivl
ret
ret
enter
test
mov
ljmp
fcom
clc
into
ljmp
clc
std
jmp
xchg
fucom
test
cld
in
imul
clc
fcomip
enter
ret
aad
leave
lret
loope
lret
jecxz
repz
into
out
xor
ljmp
cmp
sar
loopne
fucom
xlat
iret
lock
enter
out
jmp
jecxz
test
lock
xchg
call
int3
enter
xchg
divl
ss
out
into
cmp
aam
loope
repz
clc
cmc
out
mov
sti
mov
incb
cmc
ljmp
iret
aad
repnz
int3
ds
cmp
ret
fchs
loope
loop
enter
out
hlt
shll
lret
lock
ss
ds
repz
hlt
in
inc
xchg
in
movl
lret
ljmp
cmp
cmp
ret
cmp
shl
inc
in
xchg
int3
fisttps
in
out
enter
in
repnz
ds
aas
enter
fsubr
in
icebp
jmp
ret
ss
jmp
int3
int3
lret
out
lock
call
lret
mov
das
out
call
repnz
cmp
rcr
dec
loope
in
aam
call
lea
sarl
xlat
xlat
int3
aas
aad
rcr
cmp
fldpi
sti
test
mov
mov
in
cmc
enter
xor
ret
cmp
cld
aad
hlt
stc
fcmovne
jmp
out
jmp
nop
in
xor
faddl
sar
repz
call
testb
or
enter
xor
hlt
fsubr
aam
loopne
repz
dec
loope
jecxz
jecxz
xchg
lock
jmp
lock
push
rol
out
jmp
mov
lock
not
enter
divl
out
out
cmp
rcl
sbb
std
rorl
mov
xlat
aam
enter
icebp
imul
xlat
loop
fcmovu
clc
ds
in
or
xchg
in
in
xor
jmp
fnstenv
ds
fcomip
fdivrs
repz
hlt
fsub
int3
xchg
adcl
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
cmpsl
sub
pusha
jl
lret
jl
aaa
shl
lret
cmp
loop
roll
in
clc
adcl
icebp
das
lock
repnz
xlat
int3
clc
xchg
and
inc
loop
nop
in
ret
cmp
lret
cmp
add
fsubrp
jmp
ret
xchg
xchg
and
shrb
in
repnz
shl
cli
jmp
fdivrs
clc
repnz
fsubrp
cld
mov
int
xchg
loopne
sarl
cmp
idiv
fldln2
fidivrl
clc
ds
cld
xlat
sbb
leave
mov
xchg
out
faddp
hlt
lret
fcmovne
int3
cmp
jmp
loopne
icebp
in
repz
mov
out
fadds
xchg
repz
stc
cld
stc
shl
repnz
cmp
test
leave
std
jecxz
in
rolb
xor
std
out
ds
ljmp
add
test
orb
enter
not
in
add
clc
shl
rcr
ds
jmp
fcmovne
loopne
stc
xor
cmc
cmp
or
int
mul
faddp
mov
fidivrl
loop
lret
test
out
xchg
ljmp
aad
int
aad
fucomip
incl
loop
sub
xor
loopne
fnstenv
cmp
hlt
cmp
int3
into
ljmp
ret
fxch
loopne
loop
loope
div
cs
jmp
xlat
repz
into
sbb
aas
lea
iret
mov
lock
jmp
out
fidivrl
fidivrs
adc
fdivr
mov
mov
mov
loop
neg
repnz
repz
fst
fst
fdivr
in
in
cld
cld
shl
out
test
sub
cmp
clc
cmp
into
loope
ds
enter
out
shl
std
call
cs
shr
stc
sub
cmp
fdiv
xchg
mov
repz
shll
repnz
aaa
out
std
shl
icebp
hlt
ret
fsubr
fdiv
aad
mov
xchg
lock
mul
loop
icebp
xor
lret
stc
sbb
out
fptan
in
ret
mov
xchg
repz
ljmp
cmp
aaa
fcmovnbe
test
faddl
icebp
cmp
mov
fsubp
das
out
repz
fdivrl
stc
out
ds
loope
ret
or
test
mov
ror
ret
xor
in
iret
stc
cld
addb
fsincos
enter
lret
jecxz
stc
sti
int
leave
fmul
rcl
rolb
fisttpl
icebp
xor
iret
loope
xor
fdivr
in
iret
into
rcl
fabs
fcmovbe
cli
fmul
enter
out
faddl
xor
test
ljmp
sbb
cmc
leave
cli
enter
adc
in
repnz
repnz
in
enter
rcr
test
roll
cld
leave
fstp
rclb
jmp
sti
fcom
aas
ror
rcl
adc
xchg
nop
sti
test
out
in
ret
loopne
stc
sti
xor
cmc
lock
test
icebp
ret
dec
iret
clc
cmp
lret
xor
loopne
shl
lret
aam
int
fstpt
fiaddl
cmp
fmuls
faddl
sti
lret
ljmp
std
rcr
roll
icebp
int3
in
mov
xor
int3
fcomi
fidivrl
loope
aam
out
cli
aas
xchg
decb
filds
call
out
lds
sarb
enter
jecxz
hlt
sar
rcr
int
lret
loop
cld
out
repnz
out
jecxz
xor
aad
sti
lock
out
or
std
out
mov
adc
sub
fcmovu
les
fidivs
sti
xor
jecxz
sar
mov
cli
in
loop
cld
das
repnz
cmc
into
sti
repnz
int
div
cmc
rolb
mov
add
jmp
ret
int
lret
sub
cmc
fucomip
fs
lret
jl
inc
mov
fst
in
int3
iret
jmp
jecxz
ror
xlat
aad
div
sub
fdivr
cmp
inc
repz
fcmovu
out
iret
xchg
mov
aam
int3
ljmp
out
faddp
fidivrl
cmp
cmc
ds
cmc
ret
lret
addl
in
shr
clc
repnz
std
cmc
cmc
sar
in
fnstsw
clc
cld
sar
flds
xchg
repnz
shl
xor
cmp
xlat
cld
incb
test
loopne
fmuls
out
xchg
dec
lret
in
int
stc
leave
int
cld
cmp
aas
in
cld
sbb
int
lret
int3
xchg
shl
shl
lret
sti
fcmovu
fdiv
xor
out
out
repnz
aad
lock
test
ljmp
das
imul
leave
jmp
xor
fcmovu
fincstp
loopne
std
rcr
lock
loop
in
jmp
int
into
fdiv
cmp
sarl
ljmp
jmp
sbb
lret
loop
test
ljmp
out
xlat
repnz
jecxz
lock
cld
leave
fadds
in
hlt
out
shll
xor
in
fcom
xor
aam
in
jecxz
div
out
xor
addl
sti
fstp
fcmovne
out
fldz
int
repz
out
aas
out
fsubp
incb
into
test
stc
lret
sti
lret
std
leave
fsub
int3
cmpb
ret
int3
ret
popl
in
ret
cmp
sbb
stc
loope
jmp
enter
ficoml
hlt
ror
sti
aam
lock
ss
rcl
jecxz
test
aam
out
in
jmp
and
fbstp
loopne
test
icebp
ljmp
loopne
orl
xchg
xlat
stc
cmc
rcl
aad
divl
repz
lret
cmp
hlt
flds
out
test
cld
orb
jmp
jmp
loopne
fadds
out
test
in
mov
rcl
cmp
call
test
sbb
neg
mov
out
fcmovne
in
out
not
int3
in
xor
ror
rol
ds
cli
flds
ffree
mov
xor
enter
fstp
cmp
fcmovu
cmp
fnstsw
cli
aad
rcr
out
lret
fisttpl
test
rcr
ret
cmp
fcmovnbe
rcl
fucomi
into
cmp
ret
xabort
xchg
in
jmp
fdiv
int
fsubr
loop
in
repz
sar
loope
fcmovnbe
fiaddl
in
out
vpsllw
fucomp
in
cmc
xor
fdivs
xor
in
sarb
xor
in
loope
call
lret
orl
repnz
clc
int
inc
and
in
loop
in
test
adcl
lret
xor
lret
fcomp
loope
out
mov
loope
in
out
out
xchg
into
xor
call
leave
loopne,pt
stc
add
fiadds
aas
jecxz
test
call
jmp
xor
std
stc
out
sti
jecxz
hlt
out
rcl
fld
mov
mov
rcl
xor
ret
xlat
out
hlt
lret
cmp
cmp
xlat
ret
lret
lret
enter
loope
cmc
jmp
cmp
enter
fidivl
cmp
std
mov
fsubp
les
addb
loop
repnz
cld
hlt
loope
loope
stc
ds
aam
mov
in
out
in
out
loop
das
shlb
lret
in
fsubp
cmp
fcmovu
loope
fsubp
mov
rolb
leave
hlt
int
cld
shl
fcom
or
adc
lock
aam
vpmaxsw
aas
shl
in
xor
fnstcw
out
lock
cmc
fucom
ffree
mov
mov
ljmp
out
jecxz
enter
in
hlt
xlat
lret
cld
aas
xchg
bnd
stc
xchg
or
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
sub
mov
add
les
cmp
xor
cmp
cmp
jecxz
lock
imul
fxch
cld
in
call
out
int
aad
test
fdivrp
rcr
cmp
in
stc
cld
mov
test
in
repz
std
mov
enter
cli
cmc
ror
xchg
cmc
fucomp
jmp
neg
fcmovne
xchg
jmp
out
cmp
mul
repnz
stc
loopne
aad
call
mov
int3
ljmp
sti
fstp
lret
out
in
fdiv
repz
lret
in
jmp
repz
xchg
sub
repz
ljmp
ret
out
std
cmpb
rol
mov
in
test
sub
fcmovbe
std
clc
aas
or
in
jecxz
call
xlat
loopne
loop
repz
xor
ret
lock
fdivrs
jmp
or
incl
xlat
into
out
fucomi
out
ds
shl
repz
stc
jmp
fsubr
xchg
decl
hlt
int
jmp
std
cmp
addb
loop
mov
cld
in
jmp
int3
stc
cmp
hlt
int
fcomi
loopne
cli
hlt
fcomp
fstp
mov
xchg
sti
call
xchg
mul
cs
loop
cmc
aas
clc
in
sti
fdivrp
incb
in
fdivr
ror
mov
in
test
xor
xor
in
repnz
int
rcr
aad
fsubp
sti
stc
repnz
les
in
aas
lret
jmp
lret
lock
xlat
xlat
loopne
lock
and
fucomi
fadds
faddp
lret
shlb
shlb
fcmovbe
repz
flds
std
orb
jecxz
cmc
out
into
in
out
in
lret
aam
jecxz
iret
rcr
ret
loope
idiv
ljmp
ret
repnz
jmp
xor
imul
xor
aas
cli
in
stc
lret
std
incb
icebp
xor
cmp
aam
xor
shl
cmpl
loopne
test
aad
sti
loop
lds
not
xor
icebp
aad
cmp
fsub
lock
lret
jecxz
mov
loope
lock
int
sub
in
cmc
cmp
fucomi
into
loop
add
rcr
rcr
out
mov
nop
aam
into
lock
fld
std
aam
add
sub
aad
flds
xchg
hlt
out
ret
jmp
idivb
fdiv
ljmp
aas
in
test
stc
lret
lock
enter
into
shr
xor
xor
div
cmp
test
cli
xlat
roll
mov
int3
fsubr
fscale
icebp
aas
clc
std
sub
loope
testl
mov
shl
xor
icebp
jmp
jmp
cmp
cli
fdivr
aas
mov
rolb
mov
mov
hlt
in
out
mov
cmp
int3
rcl
test
sarl
repz
mov
into
sbb
loope
out
cmc
in
into
jmp
cli
int
out
addb
jmp
out
std
in
out
ror
in
xor
fdivrl
hlt
jecxz
fstpt
call
cli
sti
fmul
loopne
fstp
lock
aam
enter
cmp
iret
addl
loopne
int
out
ret
ret
test
sti
cld
in
iret
hlt
repnz
sti
aas
loopne
cli
test
stc
cld
fsub
mov
ret
int3
rcr
out
cmp
loopne
std
ffreep
les
test
sbb
aad
enter
fcmovne
fucom
cmp
rcr
out
loopne
test
imul
cld
into
iret
lret
rcl
ret
xor
cmp
aad
shlb
lock
addl
sar
int
xor
lret
les
cmp
repnz
test
ret
in
addl
call
sub
cmp
fiaddl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
mov
outsl
jl
lret
jl
out
repnz
jmp
out
call
xor
out
ss
std
jmp
int
cmp
idiv
call
ret
test
leave
loop
fld
stc
xor
fnstsw
fcmovnbe
add
call
lret
in
leave
testl
in
stc
stc
ret
rcl
aam
out
and
faddp
lds
loop
into
lret
jmp
xor
fidivl
lret
jmp
sti
hlt
icebp
ret
repnz
int3
std
jmp
xchg
in
ret
xor
in
cmp
xor
cmp
and
mov
inc
test
int
adcb
xor
repnz
bnd
aad
repz
repnz
orl
shr
aas
in
aam
fcmovnb
cmp
cli
cmp
in
in
aam
fadd
in
sub
rclb
mul
out
cmp
rcl
fprem
cld
std
int
xabort
fucom
jmp
lret
mov
lret
xchg
out
repz
xor
icebp
hlt
int
ror
leave
ret
int
sti
int
in
nop
xchg
lret
repnz
aaa
clc
iret
flds
repz
repz
cld
ret
loopne
mov
test
repnz
xlat
xor
out
cmp
repz
cmp
fxtract
shl
hlt
fcmovnu
les
lock
sub
ret
out
fcmovnu
aas
ljmp
loope
loop
aam
aam
test
int3
mov
xchg
loop
out
xor
fcom
stc
jmp
ss
cmc
fcompp
in
jmp
leave
mov
in
test
in
xchg
mov
stc
int3
loop
cli
jmp
out
fnstcw
cmp
in
aam
ret
mov
xchg
test
rcl
out
jmp
idiv
fidivrs
aas
shr
xchg
fcmovnu
cld
loopne
mov
jmp
in
repz
rol
hlt
repnz
ds
xlat
out
xchg
jecxz
orl
in
imul
aad
iret
out
repz
sti
mov
out
out
in
shl
out
jecxz
clc
shll
int3
sar
repz
loope
lock
aas
mov
cmc
loop
call
ss
leave
icebp
leave
in
out
div
loopne
aad
call
or
ficoml
test
std
ss
repnz
lock
icebp
test
ret
out
clc
fdiv
loop
int3
aam
fsubr
fdivr
sbb
ror
xchg
ret
mov
lds
in
lock
xor
aad
leave
lock
out
jmp
test
and
ljmp
in
cld
int3
jmp
rol
shlb
not
out
int3
fcomip
aam
les
int3
dec
decl
xor
ljmp
aas
in
idivb
or
add
shl
mul
lret
test
repz
fsubrp
jmp
xor
fadd
cli
aas
into
not
lock
fcom
ret
out
fisttpll
cld
in
call
shl
shl
aaa
aaa
repz
jmp
int3
lock
rol
inc
in
mov
call
cs
ss
cli
xor
iret
cmc
leave
fdivrs
ret
repz
sbb
xchg
out
nop
int3
iret
mov
in
xor
sub
cmp
jecxz
jecxz
into
fchs
fsub
ljmp
jmp
aam
int
cld
out
shl
shr
xor
sar
out
enter
nop
fbstp
out
jmp
lret
cmp
fcmove
sbb
jmp
stc
fmull
aad
sub
repz
lret
in
in
loop
fucom
jecxz
mov
mov
shr
int
repnz
cmp
xlat
out
loope
test
ret
sti
mov
xchg
cli
out
int3
shl
shr
jmp
cld
into
enter
lock
hlt
mov
mov
test
out
call
xor
out
div
int
fcmovne
out
rolb
enter
clc
jmp
inc
cmp
jmp
aad
enter
fsts
test
jl
add
jmp
cld
cmc
shl
ret
rcl
cmp
sti
jecxz
ret
jecxz
loopne
test
fmul
cmc
mov
sub
das
les
shll
fcmovne
faddp
cld
sar
out
mov
faddl
xchg
stc
xor
out
rcl
fmulp
lock
mov
fsubr
mov
fldl
in
in
sti
enter
stc
cmp
sub
fdiv
hlt
out
loop
sti
repz
mov
rcr
into
aaa
enter
shl
fcomip
stc
loope,pt
cmc
call
loopne
shl
lret
shll
repnz
clc
in
loope
clc
jecxz
aas
cmp
jecxz
loopne
enter
mov
out
rolb
into
in
push
out
cmp
sti
in
cli
fchs
sti
dec
sbb
enter
adcb
loop
cmp
aas
divb
xlat
lret
icebp
xlat
out
filds
iret
fucom
sti
out
mov
shl
jmp
ljmp
lret
icebp
call
rcl
test
in
in
test
xlat
cmp
aam
jmp
enter
test
sbb
idiv
ret
leave
in
into
out
iret
xchg
jmp
loop
int
cmp
shl
ljmp
fst
jmp
leave
addl
lret
cmc
xor
das
xor
fcmovnu
icebp
xor
ret
loopne
hlt
in
mov
jmp
cmc
into
xor
stc
aad
cli
ss
aad
in
fdiv
std
rcl
ret
fldl
loop
xchg
aad
sti
fdivp
faddp
out
cmp
cmc
lock
leave
int
std
leave
fucom
cmp
imulb
lret
cmp
enter
repnz
loope
std
fsubr
shl
neg
fcomp
lret
loop
mov
xor
leave
imul
cmp
hlt
cmp
icebp
sti
flds
mov
sti
out
adc
in
repnz
fdivs
repz
rol
hlt
sti
lret
ficoml
in
out
test
aaa
repz
fstp
in
fcmovnu
rcr
sti
cld
cld
and
nop
xchg
in
mov
not
rol
aad
fidivl
cmp
out
fidivrl
loopne
rcl
ds
lret
neg
fsin
lret
test
in
jmp
int3
aad
aas
cmc
cmp
in
in
lea
lock
rcl
call
aad
int3
icebp
cmp
sti
jecxz
jmp
in
fsub
int
xchg
in
xlat
sub
xor
icebp
loope
out
aas
into
int3
xor
test
dec
into
ljmp
lock
aad
cmp
call
lret
rorl
xchg
shlb
int
iret
neg
cmp
fcom
repnz
fcmovnu
fdivr
xchg
xor
in
cs
into
lock
in
rcl
rol
sub
loopne
jmp
out
xchg
aad
loopne
hlt
leave
aad
fnstenv
rcl
stc
ret
cli
loop
fucom
out
mov
call
lret
out
out
cld
sti
icebp
aad
ret
out
ret
lock
cmc
adc
lock
in
repz
mov
fnstenv
xlat
xor
cmp
mul
cli
cli
lds
in
fcmovnu
fucompp
jecxz
lock
xor
out
fcom
aaa
cmp
fdiv
ror
enter
inc
cli
in
int
in
in
into
out
jmp
cli
leave
idiv
loope
in
loope
test
loope
lds
cli
in
in
lock
in
out
int3
clc
rcl
cmp
cmp
bnd
aad
in
fcmove
int3
and
loope
repz
in
lret
xor
cli
fcmovnbe
sti
cld
rorb
fsub
icebp
jmp
rcl
out
in
cli
in
in
lret
fcom
out
aad
fucomp
loope
enter
cld
into
and
cmp
clc
clc
hlt
aam
fcom
call
test
in
loop
clc
or
jmp
sti
out
sar
out
incb
data16
add
xlat
aas
fst
fcmovne
mov
imul
lret
jl
icebp
idivb
out
jmp
loop
out
repz
int
shl
call
cmp
adc
fdivp
aam
decl
stc
mov
and
and
repnz
aas
into
fsubp
out
fiaddl
leave
sti
sub
into
out
shl
loop
loop
fucomi
fdivrs
aad
ret
fdiv
aam
call
xchg
jecxz
hlt
jmp
idiv
divl
fidivrs
mul
idiv
hlt
cmc
cld
in
fistl
xchg
rcl
sti
neg
int3
lret
cmp
rcl
add
fsin
mov
cmc
divb
in
in
lret
xor
int
fsub
adc
test
call
int3
loope
call
aaa
jmp
int
rcr
rcr
int
cmp
repz
mov
std
imul
icebp
out
repz
ret
fidivl
fcomp
icebp
int
cmc
sti
test
loop
fxch
mov
mov
xor
das
ljmp
loop
loop
loope
fcmovnb
hlt
ljmp
lret
das
out
clc
ror
in
out
mul
repz
aad
fcmovnb
rcl
cli
bnd
loope
out
out
ljmp
ss
out
cmp
in
shl
add
sti
std
mov
cld
add
int3
in
jmp
cmp
xor
fsubp
addl
in
xchg
jmp
ljmp
shlb
cmp
test
loopne
mov
popl
in
xor
das
fxch
clc
out
fcomp
sarb
loop
jecxz
iret
aam
loopne
loopne
enter
mov
in
cs
cmp
cmp
lret
leave
aam
int
xor
cmp
testb
in
roll
leave
out
hlt
std
cmp
xor
shl
loop
fadd
rolb
in
out
xchg
rcl
enter
ljmp
shl
incb
sti
aas
std
jecxz
int3
fcomip
mov
int3
lret
out
iret
lock
in
cmc
shl
hlt
ret
incb
nop
loopne
jmp
sar
aaa
cmp
aas
icebp
fdivr
fdiv
repnz
enter
in
jmp
std
shl
repnz
lret
out
shll
icebp
fcmovne
hlt
aam
xchg
fdivrl
rol
lret
icebp
nop
in
out
sub
int3
sub
fdivs
fucom
out
roll
cmp
shl
orl
loop
das
xor
xor
ljmp
ss
in
enter
inc
jecxz
cld
jmp
std
xchg
cmc
icebp
call
cld
fcmovne
idivl
call
aad
lock
leave
cld
ds
in
jecxz
shl
sub
ror
clc
fnstsw
icebp
xorb
fdivrs
stc
div
jmp
test
shl
in
jmp
sar
repz
cs
std
aam
cmp
loopne
loopne
repnz
test
ret
in
call
loopne
out
fnstcw
clc
fidivrl
shr
iret
lock
aad
std
xchg
loop
stc
enter
xchg
out
int3
mul
in
iret
fcomip
in
xor
cmp
loop
aam
cmp
icebp
decl
rcl
stc
ror
fcmovu
stc
lret
jmp
loop
out
clc
xchg
jecxz
orb
out
out
jmp
sarl
cmp
cmp
loope
sti
cld
mov
sti
fucomip
rclb
in
idiv
sti
fdivrs
mul
mov
dec
loope
loop
mov
mov
aad
sub
xor
ljmp
shl
aas
rcr
fcmovbe
aad
hlt
jmp
in
mov
mov
lock
xlat
out
cmp
rcl
loop
loope
call
test
lock
xor
out
icebp
clc
rcr
vpsllw
icebp
mov
in
mov
mov
out
xor
cmc
out
lock
ds
clc
out
cli
enter
test
lcall
jmp
int
into
fcmove
fst
aam
lods
push
push
sub
jl
lret
jl
cmp
loop
in
iret
rcl
das
int3
jmp
cmc
cmp
xlat
xlat
stc
out
mov
in
fldln2
test
out
aaa
in
sub
in
hlt
in
shl
call
loope
cmp
xlat
in
sti
mov
xchg
loope
call
iret
ror
fbstp
cmp
cmp
vpmaxsw
testb
fsub
mov
mov
ds
repnz
aaa
lret
jmp
ljmp
loope
in
fcmovnu
test
decl
xor
jecxz
cmp
repnz
aam
aas
in
test
faddl
rorl
shr
aaa
into
aaa
xor
in
ljmp
cld
rcr
clc
call
fiaddl
int3
in
out
aad
lret
aam
out
iret
cmc
fdivrs
enter
fdivrp
out
mov
cmc
xor
in
cmpl
out
ss
add
leave
std
loop
sub
iret
loopne
rol
sti
xor
sarb
cld
cmp
jmp
icebp
clc
jecxz
loopne
in
enter
fsubrp
iret
loop
into
cs
fst
cmp
enter
xor
fdivr
faddl
xchg
mov
xor
xor
ss
flds
ret
inc
and
incb
xor
les
fcmovnbe
cld
idiv
ror
rol
loopne
cli
mov
int3
sti
fcmove
iret
mov
cmc
in
cmp
cmp
xor
aad
into
loop
roll
fsubrp
fiaddl
shr
out
xor
cmp
leave
cmc
aas
lock
not
cmp
in
decl
out
in
repnz
sti
fcmovnb
lret
in
lret
fucomip
fucom
fcomp
neg
enter
lock
jecxz
sub
int
in
shlb
cmp
fstpt
in
out
out
repnz
idiv
sti
leave
int3
fildl
out
int3
out
xor
lret
stc
out
sar
xlat
shl
fsub
ljmp
in
and
not
out
div
icebp
fcmovbe
fldl
std
cld
clc
jmp
out
rorl
int3
in
cmp
enter
cli
idiv
cmc
std
jecxz
idiv
filds
mov
xlat
cmc
xor
xlat
hlt
xor
sti
sar
aad
loop
clc
fcom
out
mov
xchg
shl
out
in
in
shl
std
enter
xor
rolb
int
fdivrp
out
mov
cmp
lret
sti
in
aam
loop
out
loop
xchg
sar
xchg
sti
in
out
aas
lock
shl
fcmovnbe
in
cld
ljmp
out
call
mov
xchg
fldl
shr
das
repnz
repnz
jmp
aam
xchg
mov
repz
repnz
in
cmp
int
clc
lret
ds
out
fst
repnz
adc
mov
out
jmp
sub
fcmovu
stc
repnz
shl
xlat
rol
out
test
leave
in
or
loopne
xchg
mov
xor
leave
aam
aam
in
jecxz
xlat
loopne
sti
cmc
mov
faddp
fmulp
out
lock
icebp
lret
loop,pt
fdivrs
xor
cli
cmp
loope
iret
loop
bnd
loop
jmp
loopne
cmp
xchg
shr
in
out
fcmovu
sub
shl
repz
addl
ds
sub
xor
aam
sarl
ret
roll
xchg
repz
out
ret
aaa
hlt
xor
neg
repnz
lret
loope
bnd
jecxz
enter
in
test
lret
idiv
aad
icebp
testl
out
cld
lea
test
jmp
hlt
aad
out
cmp
in
cmp
in
into
out
clc
ret
in
int3
out
std
lea
vpaddsw
lock
cmp
int3
std
ret
cmp
vpsubusb
cld
jmp
incb
ljmp
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
gs
mov
ret
jl
add
fnsave
hlt
xor
rcr
aad
clc
clc
mov
stc
loopne
fsts
nop
xchg
in
stc
iret
sti
lock
repnz
ret
cmc
shl
add
aam
add
int
dec
xchg
cld
aad
sub
leave
cli
xor
hlt
repz
ds
cmpb
mov
cld
out
int3
fisttps
shl
int
aaa
fmul
in
out
int3
cmc
loope
shl
idiv
cmp
mov
ljmp
cmc
sti
out
loope
lock
and
rcl
fadd
xlat
out
enter
fmul
xchg
sarb
into
loop
cmp
xlat
leave
shr
ds
fcmovu
std
rcr
fmulp
xchg
mov
lds
in
aad
enter
cli
shr
xor
filds
add
loopne
ljmp
xor
aad
imul
lock
out
aad
out
shl
in
fucomip
mov
in
out
sub
jecxz
cmp
out
lock
cmp
repnz
repnz
lock
call
jmp
in
in
jecxz
cmp
lock
cmp
cmp
incl
xchg
xchg
mov
orl
ret
ror
aas
out
cmp
out
in
repz
sti
cld
int
lret
xorb
iret
in
ror
das
fcmovne
aam
rcr
sar
ds
cmp
or
loope
enter
cmc
iret
lock
int3
hlt
shl
adc
std
int
fisttpl
out
ss
out
cmp
idivl
cld
iret
out
cmpb
rcr
out
inc
test
lret
fmulp
fucomp
icebp
lds
jmp
stc
push
ljmp
stc
loopne
in
hlt
enter
sti
in
icebp
call
ret
into
loope
fsub
ror
testb
mov
sti
nop
sti
ficoms
int
out
in
out
fcomi
in
ret
aaa
jecxz
cmp
cld
out
into
jecxz
icebp
in
shr
std
lock
lret
leave
fcomp
idiv
out
fdivr
stc
cli
aad
test
enter
nop
fimuls
in
sub
in
clc
aas
fiaddl
lock
cli
fisttpl
xchg
ror
call
out
ljmp
loope
xchg
mov
out
sbb
in
shlb
clc
aad
xor
into
int3
sarl
int3
sar
sub
xlat
imul
jecxz
ljmp
jmp
lret
sarb
fcmovb
lock
cmp
int
roll
sbb
idiv
fmul
xrelease
loope
loop
divl
icebp
jecxz
sar
ret
or
sub
call
rcl
ror
xor
cli
out
lret
ror
int
decl
decb
into
in
out
ds
fcomi
stc
int
int3
xlat
hlt
cmp
fldlg2
aam
test
xchg
mov
mov
in
fdiv
xchg
test
jmp
sti
stc
sub
idiv
xchg
jecxz
clc
aam
mov
xchg
int
xlat
rcr
xor
cmp
sti
std
cmc
in
or
int3
xchg
loope
jmp
lret
shr
rcr
icebp
stc
fdiv
idivb
stc
cmp
lock
leave
loope
ror
out
ret
xor
repnz
cmp
out
rol
loope
loope
movb
cld
mov
sarb
shr
cmp
ljmp
lock
stc
jmp
lret
call
in
cmp
jmp
loopne
into
shl
rol
hlt
test
aam
out
loope
repnz
fsubr
stc
xor
testb
rolb
neg
mov
sti
xchg
jecxz
add
call
fdiv
aad
hlt
rol
loope
call
popl
in
aaa
aad
shl
aam
cmp
ror
sti
in
cld
enter
cld
repz
in
shl
not
out
lock
ret
cmp
cld
aad
mov
data16
add
enter
ret
or
add
nop
add
lret
jl
std
enter
fucom
fucomp
lret
imul
in
lret
lret
ljmp
loope
out
loop
stc
xchg
in
test
int
in
in
shlb
aas
shr
imul
repnz
cli
test
ffree
sti
out
mov
lret
sti
in
lock
rcl
cmp
sti
cmp
cmp
lock
shl
ret
mul
add
out
xchg
out
loop
xor
xlat
clc
cmp
lock
ret
not
movl
out
xor
cli
ljmp
in
loope
aam
aam
sbb
mov
stc
xchg
fcmovnbe
lock
cmc
xor
out
neg
aam
out
stc
cmp
out
flds
clc
faddl
in
xor
xor
cmp
iret
xor
jecxz
idiv
cmp
sub
sti
cmc
xchg
ljmp
in
repnz
cli
aad
loopne
into
sar
rcl
sbb
in
in
adc
out
xchg
ret
shll
loopne
xlat
sti
in
ljmp
cld
fildl
fcomi
out
test
loope
in
in
lock
ss
enter
cld
leave
sti
and
cmp
jmp
call
fdivr
cmc
icebp
sub
xor
in
iret
fnstcw
out
cli
ret
fsubr
in
mov
shl
xlat
ss
fucomi
lret
int
cmp
xor
cmp
fucom
into
leave
enter
xor
shr
aam
loop
aaa
clc
faddl
fcmovb
fcomip
out
rolb
shl
jmp
in
lock
aas
ret
repnz
xlat
std
adcb
into
xor
leave
adc
fcmovbe
cmp
clc
out
ret
fmull
call
out
xor
sub
cmp
icebp
cmp
jmp
in
sti
std
fimull
into
xchg
loope
xchg
shr
div
cmp
aam
std
lock
jecxz
and
add
enter
loope
sub
clc
stc
cmp
cmp
cmp
fscale
aam
loopne,pt
cmp
leave
in
adc
xor
jecxz
aad
hlt
sar
cmp
out
icebp
fnstcw
xchg
mov
call
ret
xlat
hlt
loop
push
repnz
hlt
out
hlt
fstp
enter
mul
fsubp
out
int3
loop
out
out
sti
iret
jmp
fst
sti
fdivp
stc
and
clc
mov
mov
loop
xlat
cmp
int3
test
ljmp
in
loopne
loope
out
xchg
icebp
cli
faddl
in
stc
call
cld
in
cmp
flds
movl
loope
in
xor
int3
enter
fdivrp
fucomip
ror
rcr
jmp
clc
stc
cmp
jmp
div
ljmp
sarb
add
fdivrp
aad
fmuls
orb
out
aad
cmp
cmp
fdivrp
std
aad
fcmovb
xchg
mov
cmc
in
das
leave
int3
out
enter
cmpl
fistpll
addl
mov
leave
sti
repnz
cld
ljmp
aam
stc
rcl
faddl
jmp
jmp
test
xor
aaa
lret
out
out
xorb
xlat
clc
clc
cmp
icebp
aad
cld
incb
xchg
lock
les
shlb
ror
clc
jmp
into
cli
sarl
icebp
std
out
aam
decl
mov
ret
call
out
lret
sti
fcmovne
fdiv
shl
rol
loope
enter
mov
test
in
xchg
loop
cs
cmp
leave
cmp
hlt
repz
cld
sti
std
xchg
ret
out
testb
inc
hlt
shl
aam
repnz
sti
ret
cmp
shl
aas
sar
xchg
mov
xchg
loope
out
div
int3
in
stc
cmp
lock
into
cmp
test
fldpi
jmp
leave
fstp
lock
test
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
cmp
pop
push
jg
lret
jl
ror
not
ror
call
clc
cli
fdiv
ds
ret
jmp
addb
enter
leave
sar
addb
rcr
neg
jmp
out
mov
int
repz
int3
sti
aad
aad
in
faddl
orb
out
fcmove
in
jmp
xor
hlt
test
xor
out
aas
aam
sti
cli
mov
repz
sub
out
sub
stc
enter
cmpl
xor
sti
test
mov
fnstenv
ret
enter
into
std
fucomi
loopne
call
lret
jmp
fadd
sub
ljmp
sti
and
aad
lock
in
jmp
mov
out
in
in
rcl
sti
sti
cmp
icebp
in
clc
cmp
repz
rcl
clc
leave
enter
iret
xchg
jecxz
stc
ljmp
test
rolb
test
into
test
mov
div
cmp
enter
jecxz
cmp
shl
in
out
loopne
xchg
sub
xor
xor
aaa
neg
lret
xor
cmp
inc
mov
mov
aad
xor
into
icebp
ljmp
cmp
jmp
loop
xchg
sar
or
jmp
xor
idiv
fcomp
rolb
fildl
std
out
int3
in
fucom
rcr
xor
in
shl
fucomp
aas
int3
shl
fsincos
xchg
clc
stc
sbb
addl
out
cmp
cld
shr
repnz
addb
jecxz
adcl
int3
cmp
cli
leave
cli
repz
lock
ffreep
clc
rol
fld1
orb
xchg
fdivrl
rcl
ror
lds
pushl
lret
cmp
cmc
ret
sti
out
sti
enter
int3
sub
xor
xlat
sarl
enter
shr
jecxz
shl
stc
aad
std
neg
add
in
ljmp
xor
sti
hlt
roll
cmpl
leave
fimull
std
int3
fucomip
into
aaa
xor
repnz
cmc
jmp
clc
cmp
ret
cli
mov
out
fmull
test
xchg
aad
in
cmp
fnstcw
icebp
fdivrl
clc
std
sar
iret
into
out
rol
stc
out
lock
xor
rcr
stc
iret
cmp
ret
rcr
stc
aas
hlt
stc
hlt
mov
decl
aaa
jmp
cld
fcomp
repnz
ffreep
jmp
imul
leave
sbb
out
loope
ss
out
sti
jmp
cmp
in
stc
test
call
mov
int3
add
int
fdiv
not
jmp
ds
xchg
out
lock
out
jecxz
xchg
fmulp
jecxz
xchg
fcom
xor
xor
lret
fucom
out
cmpl
int3
mov
mov
lret
decl
iret
shlb
lock
ljmp
ds
hlt
sar
loop
or
shl
mov
sub
shll
bnd
xor
repnz
cli
fcmovnb
xlat
incl
xchg
xor
shl
xlat
jmp
xlat
aas
aad
cmc
roll
cld
xchg
in
lret
enter
ss
cld
cmp
fyl2xp1
ret
incl
out
out
jmp
int
shll
not
xor
aas
lret
sti
repnz
mov
leave
call
lock
repnz
div
shl
std
and
test
leave
in
mov
std
loopne
jmp
xor
icebp
hlt
out
shll
shl
jecxz
cmp
rolb
jecxz
rol
xchg
lock
cmp
lock
mul
fst
fld
mov
std
decl
shl
repz
ljmp
test
cmp
jmp
mov
fcmovnb
in
mov
out
imul
jl
in
cli
loopne
mov
loopne
lret
call
ljmp
ds
fnstcw
xlat
lock
fcmovb
mov
sub
sub
jecxz,pt
stc
lret
push
ss
cld
in
jmp
loope
mov
in
das
repnz
enter
aas
shr
clc
ffreep
fdivrs
cmp
lret
mov
xchg
mov
sti
xor
cmc
cmp
repz
fdivp
cmc
aam
fnstcw
jecxz
clc
ret
fiadds
cli
mul
aaa
out
rcl
cmc
out
out
xor
cmp
loopne
fildl
shll
lret
ss
repz
fsubr
sti
aam
out
sar
inc
loopne
cld
xlat
clc
loop
call
shr
cs
clc
out
shlb
flds
mov
in
aad
lret
out
mov
in
loope
iret
xlat
lds
int
shll
rcr
ror
cmp
aas
clc
or
in
call
rcr
out
into
xor
xlat
fsubp
loopne
lret
loop
jecxz
cmp
testb
iret
xchg
lret
jmp
neg
ss
cmp
xchg
ret
mov
loope
aam
sar
std
jmp
loope
stc
aas
repz
mov
cmp
loope
in
jecxz
in
rcl
ss
cmp
xlat
fildl
leave
fmuls
cld
enter
ds
ljmp
cmpl
std
hlt
std
xor
jecxz
jecxz
test
std
in
xchg
ret
stc
ret
not
stc
loope
ret
cli
out
cmc
cli
icebp
loop
test
mov
xchg
xchg
xchg
lret
cmp
shl
repz
cmp
fadd
xor
out
fdivr
jmp
cli
in
enter
out
call
out
fcmovu
aam
int
adc
std
ret
std
ftst
icebp
xchg
orl
ljmp
loop
iret
aam
ret
idivl
mov
jecxz
jecxz
mov
orl
imul
loope
rcr
add
enter
stc
jmp
cli
ficoms
ret
jmp
in
cmp
incb
cmc
fucomip
mov
nop
out
rol
fdivr
cmp
xor
fyl2xp1
aam
cmp
fcomi
leave
mov
mov
loopne
in
in
in
divl
int
leave
out
hlt
loopne
fxch
xchg
std
aam
jmp
fmul
sti
nop
shl
orb
cmp
repnz
cmp
int3
fst
cli
rcr
repz
lret
lret
stc
jmp
std
mov
out
fdiv
loop
aam
fstp
int3
cmp
fmul
test
aam
fxch
hlt
xchg
fmulp
rcl
in
hlt
lret
iret
iret
idiv
icebp
into
ds
rcr
loop
cmc
cld
lret
std
pop
orb
int
test
shr
idiv
adc
sbb
out
out
test
test
loopne
cli
test
sub
leave
loopne
cmp
cli
out
int3
jmp
in
cmp
stc
fdivrp
in
out
mov
cmp
ror
out
shl
mov
call
out
cli
int
push
rcr
fdivr
int
jecxz
ror
aad
xor
loopne
icebp
cmp
aam
stc
cmc
loope
in
test
ljmp
leave
jmp
out
lret
out
fucom
ljmp
aam
clc
out
xchg
or
xchg
call
icebp
repnz
ss
in
fcomi
loopne
cmp
aam
mov
fisttpll
test
out
xchg
in
out
cmc
sti
cmp
cmp
clc
jmp
test
mov
in
lret
mov
hlt
rol
shl
fdivrl
sti
incl
enter
jmp
fisttpl
shr
in
lock
leave
int
ror
add
ret
cmp
faddp
into
test
lret
int3
repz
shl
leave
call
int
fld1
lock
test
mov
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
out
cli
adc
lret
jl
or
repz
addb
test
fadds
in
enter
call
aas
stc
flds
mov
mov
enter
and
cmc
xor
vcvttpd2dq
jmp
iret
ffree
sti
sub
loope
enter
fsub
leave
cld
rorl
in
xor
rolb
hlt
xlat
in
inc
mov
nop
xchg
iret
fcmovnbe
repnz
jmp
fdiv
cmp
cmp
shl
hlt
loopne
leave
sti
mov
into
sbb
divb
in
leave
int3
cmp
sarb
addl
jmp
cld
lret
out
mov
cmc
shlb
cmp
lret
fcmovnu
out
hlt
loopne
aam
xchg
in
rol
hlt
out
ret
xchg
icebp
loop
lock
shl
int3
call
loopne
out
ffree
enter
dec
in
fcmovnbe
test
xor
ret
jmp
out
cld
sub
call
xor
mov
and
fsub
shr
out
jecxz
in
xor
fucom
int
faddl
imul
clc
out
in
xchg
in
mov
or
ss
enter
shl
in
cmc
shl
ret
not
jmp
mov
leave
mov
loope
jmp
out
iret
les
lock
sar
aam
mov
enter
imul
loop
ret
test
ret
rcl
cmc
in
lret
shl
in
leave
mov
testl
xor
in
repz
out
into
cld
cmc
inc
sar
add
in
sti
and
nop
in
jmp
ljmp
ror
cld
repnz
lret
leave
xchg
lds
das
out
out
fdivp
test
xlat
loope
aad
lret
jmp
mov
fisubrs
xor
jmp
sti
fidivl
aam
in
rcr
repnz
aam
mov
mov
repnz
clc
sarl
enter
sti
lock
ret
in
enter
mov
fsubr
ljmp
leave
out
out
aam
xor
sti
jecxz
loopne
test
ds
rcr
faddl
jmp
repz
sar
stc
loopne
cmp
mov
cld
sti
nop
std
popl
enter
out
enter
loope
fdivr
xlat
jmp
mov
out
mov
repnz
jmp
icebp
ss
cmp
sarl
cmp
aad
test
mov
jmp
cli
iret
xchg
das
lret
ljmp
loope
lock
shl
in
mov
mov
int
loope
nop
aad
cmc
lret
test
aad
shr
lret
call
add
in
out
and
lret
loop
out
lret
in
shl
ret
out
test
sti
xchg
ljmp
rol
into
leave
rol
cmp
enter
repz
cmp
cmp
stc
faddp
mov
jecxz
testb
int
leave
cmp
cli
enter
aad
shl
cld
hlt
loope
fucomip
out
stc
out
out
shl
in
icebp
fdivp
int
loopne
xor
xor
iret
leave
lock
cmp
loop
stc
fcomp
aam
aam
test
mov
aad
loopne
ret
int
cmc
out
jmp
sarb
sbb
fiadds
std
sarl
in
in
hlt
out
jmp
lret
cmp
hlt
shl
test
cmp
jecxz
rorl
lret
out
cmp
in
fcomi
xlat
or
fucom
ljmp
call
aam
in
out
aam
cmp
ror
cld
aas
clc
in
aam
sub
mov
lea
in
ret
fstpt
xor
idivl
lret
lret
shl
fldl
in
test
int
cmc
hlt
fcomip
cmc
lock
ret
out
ss
fdivrp
iret
iret
cld
fadd
xlat
inc
test
out
std
xchg
mov
xor
lock
xor
fcmovbe
add
cmp
je
movl
jmp
rcl
rcl
roll
add
cmp
lret
jl
sar
lock
roll
sub
clc
out
int3
cmp
fdivs
out
loop
xlat
cmp
out
loop
jmp
mov
ljmp
fcmovnbe
cmp
shl
in
clc
loopne
repz
sbb
xchg
mov
stc
leave
shl
ljmp
shl
out
repnz
jmp
stc
lock
mov
int3
ret
rol
xor
repnz
loopne
cmp
idiv
div
hlt
loopne
cli
into
int3
jmp
lock
loope
cmp
lret
fstp
lock
vpsubb
fsub
test
test
mov
lea
leave
iret
cmp
loope
fdivr
fcmovnb
shl
les
int
ljmp
jecxz
cld
enter
ror
int3
repz
cld
lret
addb
test
xor
int
idivb
fbstp
rcl
cld
aam
clc
xchg
fcmovu
adc
xchg
out
in
xlat
xlat
jmp
sti
in
lret
test
test
test
out
mov
mov
divl
cmc
mov
lock
in
out
cli
hlt
ljmp
test
loopne
hlt
int3
xor
sti
jmp
add
out
cli
shr
lret
jecxz
out
clc
xchg
nop
ljmp
fadd
in
jmp
fmul
repz
fcmovbe
call
cli
sar
xchg
sub
shlb
lock
shl
rcr
lret
aad
adc
out
sbb
xchg
in
loop
int3
clc
aad
xlat
aaa
cmp
hlt
fucom
icebp
adc
testb
sti
cld
into
out
jmp
div
repz
cld
shr
std
rcl
loopne
repz
mov
xchg
aam
out
xor
xor
cli
jecxz
std
cld
clc
test
sti
loop
orb
enter
xor
jmp
clc
aas
aam
fsqrt
in
fcmovnbe
sar
fisttpll
int
and
fsubr
test
jecxz
clc
sti
cmp
lret
out
xor
out
iret
shl
xor
into
std
cmp
div
cmp
fucom
std
rcr
aas
fucomp
loopne
lea
enter
cmp
repz
loopne
into
sar
jmp
mov
lret
test
sar
in
das
cs
xor
cmp
hlt
jecxz
repnz
loope
loopne
mov
xchg
ljmp
stc
cmp
jmp
xor
cmp
cld
roll
idiv
call
jecxz
add
jecxz
out
jmp
in
lret
aas
add
in
lock
enter
into
lret
int
sub
neg
out
into
out
fdivr
cmp
sbb
cmp
stc
ljmp
in
int3
int3
sub
out
shr
ss
sti
aad
out
cmp
vshufps
fimuls
mov
xor
call
int3
cmp
in
rcr
in
ds
ret
fadd
fcmovb
in
mov
jmp
cmp
cmc
aas
rcr
add
fcmovne
ljmp
loope
shrl
xlat
xor
cmp
aad
cmc
loopne
cld
shl
lret
loope
enter
rcr
cs
repnz
xor
aaa
loop,pt
test
test
lock
call
ljmp
aaa
fnop
lret
lret
cmp
xlat
fmulp
hlt
stc
jmp
out
lret
clc
xor
leave
lock
shr
xlat
test
ret
addb
fcomip
jmp
iret
xor
out
repz
cmp
xchg
xlat
fucom
in
fxch
jmp
iret
fcmovne
cmp
icebp
sar
int3
aam
fldl2t
test
repnz
in
mov
out
out
in
ljmp
into
jecxz
sarl
jecxz
cmp
mov
loop
lea
jmp
lret
ret
int
jle
shrb
xor
sbb
lret
jl
in
in
xchg
in
aad
xor
aad
ss
aam
cld
repnz
fdivrl
test
les
xchg
cmp
lret
fcomip
imul
shl
loop
xlat
in
ds
std
lea
leave
ljmp
jmp
xor
aam
out
add
ljmp
out
rcr
aad
out
iret
fdiv
stc
stc
cmp
cmp
hlt
neg
cmp
lret
mov
repnz
cmc
out
ror
cmp
cmp
aaa
shl
cmp
test
clc
jmp
xchg
cld
lock
mov
xchg
xor
in
sub
in
fsub
aas
repz
cmc
xor
cmc
mov
icebp
fldl
xor
call
push
aam
aad
aas
rorb
test
xchg
ror
xor
clc
int3
hlt
xlat
lock
fdivp
xchg
mov
out
repnz
jmp
shr
aad
das
stc
cld
lret
sti
ds
std
mov
stc
fildl
int
sub
xor
fucomi
cmp
cmp
test
lret
jmp
jmp
out
xchg
leave
xor
in
lret
fbstp
loopne
roll
clc
enter
enter
cld
loop
cmc
xor
hlt
cmp
out
cmp
cld
lret
out
fcomi
xlat
out
or
mov
repz
xor
jmp
repnz
sar
jecxz
lret
enter
iret
rcll
shlb
cmp
cli
repz
xlat
cmp
xlat
repz
fsubrp
out
xchg
add
mov
cmc
out
ljmp
cmpl
rcl
fadd
hlt
out
call
sbb
mov
xor
cmp
cmp
out
stc
test
lret
jecxz
mov
cmc
mov
das
lret
out
out
int3
not
xor
shll
in
shl
call
out
loop
test
in
fxch
cmp
adc
ret
fisttpll
aas
int3
fdivrp
in
rorb
repz
jecxz
xlat
fcmovnbe
leave
fnstcw
in
lock
loopne
aad
clc
sub
xchg
lock
in
lret
ret
int3
cmp
iret
cmp
int
sar
ds
cmp
faddp
rcl
cmp
out
int
aad
ljmp
cmp
int3
fdivrp
fmulp
lock
stc
sar
xchg
mov
mov
call
out
in
clc
incl
into
rol
fdivr
lret
addb
out
sub
int
clc
xor
in
clc
enter
imul
xchg
cmp
jmp
mov
int
out
in
ffree
fdivr
aam
imul
ret
iret
loopne
repnz
mov
jmp
lret
jmp
and
into
into
mov
sbb
out
ljmp
out
lret
jmp
sbb
cmc
ret
mov
loop
lret
enter
inc
out
jmp
in
int
cmp
fucomp
in
rcl
cld
xchg
shr
xchg
xchg
xchg
xor
cs
lret
fcmovu
cmp
in
mov
xlat
jecxz
ljmp
icebp
shl
xor
cmc
in
test
repz
test
in
in
or
xor
jmp
out
in
incb
xchg
jecxz
and
icebp
enter
std
xchg
ljmp
clc
sarb
cmp
cld
adc
adc
repnz
out
lret
mov
call
aaa
loopne
aad
lret
rcr
ds
or
out
imul
rcl
int
call
xchg
fldl
fptan
das
cmp
int3
cmc
in
fistpll
jecxz
clc
fcmovnu
adc
xlat
mov
dec
ror
enter
xor
int
aam
cmp
loope
incb
out
jecxz
in
ror
out
repnz
in
xor
into
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
xchg
das
ljmp
add
xor
cmc
std
into
in
loope
out
in
loop
fcos
lret
clc
xchg
fcomi
lock
ss
cmp
ljmp
xlat
xchg
xor
call
xchg
xchg
mov
out
cs
in
xor
int3
call
aas
repnz
repz
enter
fdivrp
fcmove
in
xchg
xlat
xlat
aaa
out
ljmp
ds
test
sarb
ftst
ljmp
mov
xor
rcr
ss
neg
sarl
in
xchg
jecxz
stc
cli
test
test
cmc
jecxz
xor
aaa
in
aaa
in
fcmovu
aam
call
cmp
test
ficoml
in
in
clc
lret
loope
div
cld
rol
ds
repnz
frstpm(287
cmc
in
mov
into
ss
ror
in
xor
fcmovbe
dec
rcr
out
lret
xchg
xchg
repz
in
ss
xor
hlt
std
icebp
jecxz
jecxz
sar
loop
loop
sti
lea
xor
xor
fcmovne
sarb
hlt
cmc
rcr
adc
xlat
mov
call
mov
repz
cmc
cmc
xor
div
sti
rcl
out
xchg
jmp
out
xchg
int
orb
fincstp
cld
fmul
cmp
in
out
fiadds
loop
loopne
loopne
rcl
ret
test
jmp
aas
ds
lds
cmp
mov
cld
xchg
add
rcl
out
xor
out
cmp
jmp
lock
flds
xchg
lret
in
repz
ror
lret
out
out
ds
ret
xlat
shl
leave
std
out
leave
clc
in
loop
out
shl
lret
xor
lret
int
fldpi
stc
icebp
icebp
fcmovnbe
test
fsubrp
lds
xchg
loope
xor
rcr
sar
jmp
repnz
cmp
fidivrs
adc
jmp
out
xchg
hlt
loop
bnd
cmp
cmp
in
rol
loop
in
fld
repz
enter
int
icebp
loopne
enter
sti
out
icebp
out
out
xor
aas
repz
ds
rol
hlt
leave
rcr
cli
fmull
int3
nop
sub
in
rcl
jmp
int
aaa
xor
fcomp
aas
loope
leave
test
loop
fiaddl
xor
fucomi
cmp
idiv
sbb
addl
mov
xchg
mov
loopne
stc
xor
fcos
loope
rcr
rcl
xchg
jecxz
fsubrp
stc
fdivr
loope
xchg
out
xor
leave
ret
cli
clc
sarb
cmp
std
cli
into
out
out
rcr
enter
and
lds
in
cmp
aam
jmp
sub
fucom
cmc
in
mov
or
iret
add
ret
out
leave
in
int
neg
ds
cli
enter
loopne
mov
rcl
in
xor
aad
int3
jmp
repnz
clc
rcl
xchg
int3
in
addl
iret
aaa
cmc
into
repz
rcr
sti
out
aam
addl
cld
icebp
jmp
nop
out
xor
shll
out
call
leave
repz
sti
fcmovnu
addl
cld
clc
out
nop
loop
aam
cs
iret
xor
cmp
repz
call
idiv
aad
add
out
out
xlat
out
int
fdiv
cld
loope
hlt
xlat
fdivrl
not
rolb
mov
fcoms
cs
xlat
ljmp
fcomp
fdivrl
test
jecxz
fucomip
cli
in
test
rol
mov
rcr
icebp
cmp
xor
jecxz
sarl
cmpb
lds
out
int3
iret
stc
shll
test
repnz
fdivrp
aad
cmc
cmc
fcmovne
in
int3
call
loope
jmp
xor
out
repnz
shr
test
rcr
orb
mov
out
ds
frstpm(287
int
lret
cmp
icebp
stc
repnz
std
mov
xor
lea
mov
jmp
into
int3
ret
ds
jge
jae
push
and
lret
jl
sbb
lret
repz
xchg
hlt
icebp
ret
aad
cli
ljmp
in
sti
fsub
fiadds
call
sub
int
out
out
fildl
ds
xchg
leave
int
enter
test
sub
aam
shr
jmp
cmp
int
loopne
cmp
out
enter
test
jmp
imul
into
in
cmp
aam
repnz
cmc
lock
loop
clc
ret
fcmovnu
faddl
xor
lret
out
rcl
leave
fdivp
cld
cmp
rolb
rcr
jmp
iret
fstl
cmp
out
enter
idivb
fdivrp
test
mov
in
mov
aam
out
cmp
xlat
iret
in
cld
sbb
mov
shr
fisttpll
ljmp
cld
idivl
cmp
in
out
cmc
loop
test
fcomip
xlat
xchg
faddp
test
nop
push
hlt
shlb
shl
idivl
out
neg
cmp
ffree
icebp
in
mov
fisttpl
lock
hlt
pushl
aam
lock
icebp
cmp
lock
xor
xlat
fdivr
std
fsin
int
test
cmp
clc
ljmp
std
out
mul
stc
fcmovnu
iret
shr
loope
repnz
in
loope
loop
fsubr
ror
xlat
xor
addl
clc
mov
out
rcl
fcmovne
shr
test
out
into
shl
idiv
and
mov
shl
divl
ret
lret
vcvttpd2dq
out
cli
fdivp
cmc
repnz
in
cli
sar
into
fucom
xchg
ljmp
repz
out
out
jmp
aas
out
out
shl
cli
cld
mov
mov
or
int
fsubp
icebp
xor
leave
cld
repnz
sar
adc
stc
repz
fadd
fstpt
filds
test
das
lds
clc
ror
rcr
cld
lock
cmp
xchg
in
in
cmp
lret
xlat
fxam
test
in
cmc
loop
fdivrs
xor
lret
in
fsubp
mov
repnz
loopne
addl
hlt
lret
int
lret
icebp
icebp
hlt
aad
sti
and
call
lret
jecxz
cs
xor
cli
aas
sti
jmp
ds
aas
leave
shl
out
lds
mov
lret
rcl
ret
cmp
roll
roll
iret
int3
lret
out
jmp
into
ds
shr
in
std
xchg
stc
loope
movl
int3
call
jmp
ljmp
xchg
cmpl
sub
ds
repnz
aad
leave
stc
inc
out
fnstcw
xchg
aad
leave
std
testl
loope
fdiv
fnstenv
aam
icebp
loope
ds
stc
out
loop
jmp
mov
out
xchg
ljmp
repnz
cmp
sar
aam
out
out
rcl
cmp
sti
hlt
leave
fdiv
icebp
mov
shr
rorb
xor
fadd
cli
xlat
cmp
repz
out
mov
test
mov
jmp
cmp
lret
fnstcw
enter
repnz
aad
aam
rolb
test
std
icebp
icebp
in
iret
iret
sar
xor
stc
shl
into
xlat
div
into
shl
fadd
sar
repz
vpavgw
in
call
in
int
into
repz
test
mul
out
out
jecxz
cmc
icebp
xor
cmp
in
cmp
fstp
in
xlat
shl
cmc
aam
testb
mov
call
jmp
lret
fdivrl
fdivrp
faddp
fdivrp
cmp
call
mov
cs
xor
lret
xlat
rcl
cmp
aad
adc
fisttpll
loope
orb
into
rol
repz
in
enter
fcmovu
jmp
xlat
fdivr
repz
idiv
inc
or
aam
decl
add
add
rol
ds
fcmove
fisubrl
inc
mov
daa
jg
lret
jl
vcvtpd2dq
lret
adc
out
mov
xlat
ljmp
xchg
cld
xor
into
in
shr
stc
in
cmp
aas
xlat
iret
repz
fptan
fadd
mul
jmp
mov
std
lret
adc
int3
repz
sti
mul
aam
clc
sub
cmp
fdivp
cmp
or
rcl
ss
clc
jmp
dec
fucom
rcl
cli
push
stc
inc
out
fucomip
loopne
jecxz
ljmp
ljmp
cmp
shl
out
ret
mov
stc
call
cs
cs
xlat
xor
sarb
fdivr
cld
fldl2t
fcomi
repnz
clc
enter
mov
in
jecxz
hlt
shl
lret
cmp
sarl
jmp
sti
in
fcomp
out
loop
loope
in
jmp
aam
sub
loope
ret
std
sti
in
fiadds
iret
ror
iret
xor
fcmove
lret
faddl
ret
dec
in
out
mov
test
test
stc
in
clc
in
out
icebp
sar
out
ss
rol
cld
ret
xchg
loopne
into
test
out
rcl
int
int
cmc
aam
into
cmpl
fiaddl
loopne
incb
call
xor
cmp
loopne
fisttpl
xchg
decl
out
not
sti
lock
idivb
cmp
in
jmp
in
loopne
in
aas
ljmp
cmp
xor
xlat
repnz
icebp
stc
fnstcw
stc
hlt
jmp
nop
fimuls
int
jmp
cli
fdivl
cmp
cmc
and
icebp
inc
sub
in
out
jmp
sub
les
iret
loopne
aam
repnz
and
xchg
in
out
shl
in
das
ret
in
cld
jmp
std
aaa
in
cmp
loope
std
neg
cmp
sar
fucomp
sub
out
xchg
in
jmp
in
fdiv
in
cmp
cld
fdivs
repnz
in
ljmp
xchg
mov
iret
xlat
int3
out
iret
rol
std
aas
std
hlt
addb
loop
in
fmull
out
mov
jmp
out
jecxz
cmp
fld1
int3
into
stc
sbb
loop
inc
ljmp
repz
iret
fsub
ds
xor
ljmp
icebp
jecxz
int3
repz
orb
rolb
xor
out
lock
ljmp
cmp
addb
jmp
int3
int
icebp
jmp
cmp
sarb
in
aad
in
mov
jmp
sar
lret
aaa
in
cmp
iret
cmp
fidivl
fistpll
shr
fcmovnbe
mov
out
xor
movl
enter
iret
fsubr
hlt
jecxz
xchg
loop
clc
movb
in
icebp
das
cs
xor
stc
idiv
repz
shr
ds
cmp
incb
in
and
ss
out
lock
hlt
in
cld
fistpll
roll
xchg
mov
mov
xchg
test
mov
loope
in
jmp
repnz
sarl
fldl
xchg
out
mov
dec
xchg
in
lret
fpatan
lock
std
rcl
rcl
vcmppd
jmp
int3
aad
int3
rcl
cmp
xor
lret
addb
rcl
xor
enter
ror
cmc
lret
loope
jmp
clc
lret
lock
div
loope
cmp
shr
leave
jmp
cli
in
hlt
out
ljmp
aaa
iret
out
cmp
stc
mov
xchg
repnz
loope
enter
into
icebp
jmp
sti
fcomip
hlt
add
cld
enter
cld
xor
jmp
in
jmp
std
cmp
std
mov
xlat
les
shr
xor
fld
enter
xor
in
cli
loopne
cld
loop
xorb
jmp
sarl
lret
rcr
fsubr
push
pusha
and
jg
lret
jl
loop
testl
hlt
sub
in
aam
in
xor
fcmovne
std
aad
div
iret
rorl
sub
leave
not
xlat
sti
cmp
rolb
xlat
stc
fldl2e
orl
in
jmp
fnstcw
aad
loope
faddl
cmp
xchg
fdivr
lret
enter
shl
cmc
aad
lret
stc
ljmp
aam
idiv
rcl
fadd
in
clc
loop
out
in
out
jmp
out
sarl
neg
fadd
icebp
xor
lret
out
fidivrs
clc
stc
ret
fstp
xlat
fcmovnbe
ret
out
into
in
out
out
xor
xlat
fistpll
cmpb
or
cmp
xlat
stc
leave
in
cld
lret
mov
repz
lret
out
cmp
iret
lock
sti
out
xchg
orb
out
int
cmc
lret
fdivp
loopne
stc
into
cmp
jmp
loop
div
fstp
fsincos
shl
cmp
sbb
enter
ret
cmp
xor
repz
cmp
neg
stc
in
orl
xchg
xor
out
leave
jmp
out
rcr
int3
not
testl
stc
addb
xor
shr
int
mov
stc
lret
loope
adc
out
flds
in
mov
loop
into
loopne
int
rcr
cmp
idiv
adc
ret
xlat
in
neg
cld
xchg
mov
enter
int3
ret
stc
ror
lret
aad
sti
lret
not
adc
fcmove
clc
int
fcmovne
xchg
int3
jmp
xor
jmp
enter
out
in
into
cmp
lock
loop
cli
int3
in
loop
loopne
aaa
lock
int
hlt
repz
testl
cli
test
hlt
lret
in
cmp
icebp
iret
idivl
fidivrl
sbb
iret
rolb
mov
int3
mov
in
xor
icebp
cmp
lret
aaa
shr
std
xlat
fcomp
loope
mov
ret
xor
std
div
not
rcr
cmp
repnz
hlt
out
out
into
xchg
out
sub
loopne
aaa
shl
cmc
clc
clc
ror
not
leave
fprem
jecxz
fadd
ret
mov
repz
into
das
xor
int3
test
sarb
clc
aam
cmp
shl
jmp
out
out
mov
jmp
ljmp
loop
lock
imul
xlat
cli
loope
jecxz
fsubrp
fmull
iret
out
out
filds
out
test
int
test
aam
fcom
fsubr
leave
or
in
cli
aad
ds
xchg
fmull
jmp
xor
ret
sti
call
fincstp
ds
stc
div
aam
addl
loope
rol
fcmovne
aaa
icebp
ss
hlt
int3
rcr
icebp
fdivr
fmul
fdivrl
clc
enter
iret
icebp
nop
out
into
call
out
iret
shl
std
ror
cmp
loope,pt
fadd
lret
fmull
cld
in
rol
cli
in
sar
xor
cmp
cmc
rol
test
aam
fmull
enter
icebp
ss
in
out
hlt
cmc
fcompp
ds
shr
int
lret
lret
icebp
ret
xor
out
test
cmp
roll
xor
mov
icebp
mov
iret
enter
ss
cmp
repnz
loope
sti
xlat
loope
out
lock
sub
enter
test
jecxz
fisttpll
xchg
enter
int3
faddl
rol
enter
enter
test
jmp
out
out
sbb
mov
lret
cmc
xor
sar
out
in
cld
cmpb
std
out
fsub
call
xor
shl
aad
aam
loopne
fcmovbe
aas
xlat
out
div
roll
ljmp
jmp
fcmovnbe
int
loope
insl
lahf
dec
aam
xchg
pushf
das
jg
lret
jl
loopne
stc
jmp
aad
loopne
cli
stc
sbb
incb
rcl
fcomip
les
repnz
cs
cmp
enter
out
shl
lock
out
xor
in
mov
ss
aam
cmc
xor
fsubrp
sar
adc
loop
in
mov
ljmp
out
jmp
aaa
ds
out
aaa
aam
fdivrl
xchg
in
mov
leave
iret
orl
fcom
sti
xor
call
std
test
ds
xchg
out
loope
in
xor
fsubp
loop
repnz
aam
aad
xor
les
loope
orl
in
sbb
lret
jmp
iret
int
in
in
rcl
fidivrl
fdivr
in
fdivrp
vshufpd
fldl2e
repz
lret
loope
jmp
fidivrl
into
ljmp
repz
cld
mov
mov
loopne
jecxz
out
sub
loopne
leave
cmp
xor
div
in
out
jecxz
out
jmp
lret
leave
fdivr
in
cmp
xor
out
iret
ret
stc
std
call
into
cmp
test
shl
loop
lea
repnz
ss
jmp
out
or
in
loope
cli
dec
call
nop
out
mov
shl
xor
into
fsubr
int3
cmp
fdivrp
jecxz
idiv
cmc
sbb
enter
ror
xchg
mov
out
ljmp
out
int
loope
call
xlat
testb
sub
icebp
cmc
mov
cs
fdivs
fcmovne
fistpll
call
iret
aas
icebp
xor
fld
fildl
lea
xor
lret
fcmovnu
repz
les
ret
sub
loopne
fucom
cmc
iret
ss
cmp
ljmp
ffreep
aas
les
int3
in
sti
mov
ljmp
repz
fdivrs
icebp
out
cmp
fdivrs
in
xlat
ds
fcmovnu
mov
add
icebp
out
xor
sub
in
aas
into
iret
hlt
out
div
aas
lock
cli
test
fucomi
mov
mov
xchg
xchg
fnstcw
hlt
ss
sar
fdivr
aaa
clc
addb
repz
cmc
xchg
loope
xor
lret
hlt
fnstcw
in
sti
loop
out
mov
loopne
xor
ror
enter
cld
in
cmpl
mov
fcoms
hlt
out
stc
jmp
std
repnz
xor
fnstcw
testl
out
in
adc
lock
icebp
xor
icebp
fstpt
cmp
addl
cld
int3
fsts
out
in
xor
sarb
fdivr
int3
addl
incb
cld
icebp
repnz
ret
ljmp
fdecstp
in
out
repz
fabs
lret
cli
iret
out
mov
lock
lret
enter
int
into
rolb
jmp
fdivr
call
xor
out
xor
aam
loope
idiv
sarb
jecxz
xchg
int3
jecxz
repnz
call
out
rcr
shl
sub
aam
in
aad
lret
ljmp
in
loop
loopne
ss
xor
shl
ret
hlt
repz
out
int
shl
rcl
rol
in
in
in
fcmovu
stc
ljmp
ret
test
test
ljmp
int3
xlat
out
out
aad
cld
enter
sti
std
jmp
decl
hlt
xorb
ror
ljmp
push
int3
div
into
neg
jmp
mov
fimuls
iret
iret
not
cli
aaa
icebp
out
fst
loopne
sbb
loope
addb
xchg
in
int3
xor
loop
stc
fcmovu
out
sarb
repnz
fadds
aad
mov
in
lret
xchg
iret
rcl
das
out
icebp
cmc
cmp
cmp
repz
iret
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
pop
daa
mov
lret
jl
cmp
vpsllq
mov
testb
leave
divb
out
in
shl
in
cld
repz
ret
fabs
stc
loop
sar
sti
out
jmp
out
xor
cmp
xlat
in
sar
cmp
cmc
cli
shl
in
lret
lret
test
jmp
ror
in
cli
out
idiv
repnz
sar
xchg
les
int
shr
popl
lret
aaa
cmc
div
cmp
cmp
fldl
ljmp
out
xchg
int3
cmc
cmp
iret
int
in
testb
lock
leave
mov
rcl
out
fyl2xp1
lret
in
loope
jmp
hlt
in
fcmovu
rol
cmp
out
in
fbstp
cmc
call
fxch
leave
and
loope
ds
fisttpll
nop
rcl
lret
shr
jmp
icebp
cmp
shl
icebp
cmp
in
shl
flds
out
fxch
out
repz
sar
int3
sti
shr
div
jecxz
ds
sti
loopne
rcr
testb
std
jmp
divb
in
idivb
clc
cld
cmc
stc
lret
and
fucomp
xchg
loope
iret
xchg
shlb
cs
in
cmp
sti
std
sti
sar
idiv
mov
out
call
or
int3
sti
cmp
cmc
in
rcl
stc
faddl
loop
fiaddl
out
int3
iret
aaa
enter
lret
cmp
stc
rcl
cmp
ljmp
clc
loope
shl
lds
shl
icebp
sti
fucomi
mul
aad
cld
out
out
test
fmul
mov
cli
out
mov
fucom
or
ret
cmc
aaa
cli
cmp
ret
shl
jecxz
clc
fcmovu
rorl
in
bnd
cmp
leave
cli
lret
aam
xlat
rolb
out
out
fdivr
out
xor
loopne
call
ljmp
fadd
mov
jecxz
hlt
loope
test
aam
not
fdivr
std
ljmp
cmpl
int
loopne
into
cli
xchg
ljmp
xor
aam
aad
ds
call
jecxz
mov
mov
xor
aas
cmp
out
fprem1
iret
stc
xlat
fsubrp
testb
stc
fcomp
ljmp
lret
cmp
ljmp
idivl
cld
repz
std
in
ret
into
fsubr
enter
aad
jmp
shr
hlt
icebp
cmp
sti
shl
aas
iret
neg
loop
loope
jmp
lret
mov
loope
fisubrs
jmp
jmp
sti
ljmp
cmp
hlt
loop
movb
incb
out
xor
clc
in
ror
dec
cmp
sarl
iret
icebp
loop
repz
mov
decb
sar
xor
out
in
fildl
loopne
ljmp
test
das
lret
cli
hlt
in
xlat
fmul
cld
cmp
in
ret
hlt
leave
fdivr
xor
lea
rol
xor
lret
ror
cmp
aad
and
aad
cmp
rorb
ror
jecxz
stc
jmp
int
repz
ds
cmc
loope
fxch
call
mov
leave
lret
call
xor
into
lret
cs
xlat
and
clc
out
xlat
cli
xchg
ret
mov
addb
in
lock
cmc
in
lret
loope
aam
loope
aas
sarb
ret
aas
loopne
fcmovne
jmp
into
repnz
repz
leave
cmp
out
int3
lret
fsubr
out
neg
fptan
xchg
int3
idiv
enter
std
xchg
fcompp
xor
aad
idiv
cmp
sti
sbb
cli
aad
les
xchg
nop
int3
lret
sub
repz
int
aad
loope
ror
cld
rol
rolb
fcmovnbe
fucomp
in
xor
ss
xor
cmp
shr
out
out
aas
ret
cmp
jecxz
std
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
push
mov
push
cmp
jg
add
xchg
xchg
ret
out
int3
repnz
ss
in
aam
loop
mov
fsubp
fisttps
cmc
in
iret
xlat
repz
std
lock
jecxz
rol
cmp
loope
mov
in
ljmp
stc
shl
cmp
out
fcomi
fld
ret
fcmove
out
mov
cli
xchg
repnz
les
xor
lret
div
std
loopne
loopne
fcmovnu
idiv
fsubr
clc
jmp
test
orl
mov
fcmovne
std
jmp
ret
fdiv
ret
or
out
loop
repz
xchg
loope
ss
xor
rol
iret
lret
fdivr
jmp
aas
fdivr
rcl
loope
out
into
xchg
iret
sub
aam
repnz
cmp
ret
loop
test
fimull
xchg
aam
loopne
hlt
ss
leave
fcomip
fcmovu
fsub
fildl
flds
xchg
out
mul
ljmp
cld
sti
dec
shl
ret
out
in
std
into
incb
jecxz
fxch
into
iret
lret
enter
aam
out
test
cmc
jmp
lret
clc
mov
lret
out
shl
xor
out
xor
in
addb
xchg
test
in
xorl
in
icebp
cld
sarb
ds
fdecstp
cli
in
flds
mov
or
sub
aaa
out
cmp
cmp
shr
shl
addl
sti
xchg
in
in
cmc
in
cmc
lock
aaa
cmp
aas
icebp
jecxz
fptan
addb
xchg
loop
clc
mov
out
xchg
shl
shr
idiv
aad
cmp
hlt
loope
aas
cmp
testl
xor
sti
enter
clc
cmp
xor
aad
les
mov
rcr
repz
ss
in
cmp
cmp
aas
loope
call
rcr
std
std
loop
lea
xchg
lret
leave
aad
sarl
rol
fdiv
push
in
ljmp
xchg
lds
cs
lock
out
sti
dec
repnz
or
shl
stc
inc
xlat
iret
icebp
out
xchg
ret
xlat
call
fsubr
idivl
aas
std
icebp
out
mov
or
call
out
cs
jmp
cmp
hlt
cmp
in
jmp
lret
jmp
out
out
out
in
lock
leave
loope
hlt
std
cmp
out
loopne
decl
lret
rol
xlat
cmc
int3
out
fildl
shl
jmp
fsubrp
int
ljmp
enter
fldl2t
cmp
hlt
repz
shl
ret
test
xchg
clc
int
fiaddl
addb
cmp
lret
out
cmp
shl
repnz
ds
loope
les
fmull
int
cld
out
push
iret
sbb
ds
ret
cmp
test
jmp
out
xor
out
in
int3
ljmp
iret
adc
jmp
iret
out
hlt
xchg
aaa
out
clc
aas
addb
test
out
xlat
lret
or
repnz
out
aam
in
repz
aad
cmp
out
hlt
fadds
lds
ror
call
aam
xor
loope
stc
std
repz
rcr
aad
sti
out
test
call
ror
loopne
in
lock
enter
fistpll
rcr
and
sar
xchg
test
iret
leave
fsubr
stc
fidivl
fmulp
int3
cmp
repnz
addb
mov
repnz
int
shl
idivb
aam
cmp
repz
rcl
ds
sbb
in
test
in
rorl
loop
jmp
idivl
lret
loop
loop
hlt
cmp
clc
fadd
out
in
or
mov
icebp
in
jmp
jmp
icebp
rol
out
shl
loope
fsub
mov
loope
imul
out
int3
call
sarb
hlt
clc
cmp
aad
jmp
sti
mov
shr
clc
not
cld
call
ds
ds
loop
loop
lret
fsub
mov
leave
in
shlb
repz
call
fidivrs
lock
aaa
loop
fcmove
std
lret
fdivr
xlat
in
xchg
lock
ret
cli
lret
out
loope
std
out
iret
shl
icebp
testb
lret
jecxz
mov
xor
int3
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
cmpsl
insl
jle
cmp
jl
xor
enter
iret
lret
xchg
mov
std
mov
leave
lret
fmul
enter
lret
xor
ret
cmp
xor
int3
cmpl
stc
rol
into
loope
clc
out
enter
test
out
call
xor
into
cmp
jecxz
shl
repnz
leave
mov
sbb
mov
out
aad
jmp
lret
xlat
test
idivl
fdivrp
test
leave
test
aaa
repnz
in
jmp
in
sti
hlt
sbb
neg
shl
in
out
shl
out
in
icebp
enter
call
aas
repz
aas
std
test
in
sub
std
rcr
std
xchg
xor
in
test
fidivrl
test
xor
icebp
enter
test
in
jmp
icebp
fcomip
xlat
ret
ljmp
mov
aad
int3
in
xchg
into
xlat
fxch
rol
enter
loopne
loope
clc
lock
jmp
loope
in
hlt
into
xor
repnz
cs
in
loope
fucomp
into
in
repz
lret
xchg
fsubp
bnd
jecxz
out
xor
ss
repz
repz
or
cli
mov
mov
jmp
loopne
fcmovnu
std
ljmp
fnop
repnz
call
std
and
sbb
decl
jmp
mov
enter
ljmp
in
ret
out
ljmp
in
sti
fcmovbe
test
xlat
in
not
notrack
cli
faddp
test
jmp
loop
hlt
hlt
out
fcom
lock
lock
leave
cli
ss
sarl
loope
test
loop
fsubrp
mov
loopne
ror
les
call
xor
out
cmc
cmc
out
jecxz
repnz
out
and
in
xor
fcomi
jmp
cmp
fcom
cli
cli
test
ret
jmp
xchg
xor
idivl
jmp
icebp
aam
aas
cmpb
mov
lret
xchg
in
imulb
test
cmp
idivb
rcl
test
aam
fmull
fucomp
lret
fucom
jecxz
les
lret
in
cmp
int
into
cmpb
loop
sar
cli
shr
in
and
mov
iret
aaa
in
ss
xor
ds
aas
cmp
jecxz
test
aam
in
in
lret
fsubp
fmulp
rcl
shl
stc
in
cmp
fnstcw
fcmovbe
ror
jmp
test
ljmp
sub
shr
fxch
fcmovbe
lret
fidivrl
in
cmp
loope
shl
mov
in
mov
aam
xor
out
loop
rcr
jecxz
stc
out
fdiv
jmp
cmc
add
mov
loopne
test
xchg
ret
rol
cmp
fdivr
xor
std
cld
test
fcmovbe
mov
out
lret
fdivrp
test
sar
enter
repz
stc
aad
std
mov
fdivr
mov
ror
repnz
shr
loop
in
fistpll
sti
repz
lock
aad
in
std
mov
loope
fists
ret
enter
cmp
cmc
ret
in
out
addl
out
loope
ret
into
sti
cmp
in
aas
enter
int3
cmpl
mov
sti
in
nop
mov
mov
out
rcl
shl
cmp
sarl
fdiv
in
ffree
loopne
xchg
loopne
loop
ret
xor
cld
xor
call
testb
vpsubw
mov
icebp
adcl
jecxz
repnz
roll
and
xchg
std
fucomp
cld
in
loop
aam
in
leave
fmul
rcl
cmp
sar
icebp
jmp
ret
loope
xlat
out
loope
call
loope
out
out
in
xor
out
hlt
cmp
in
ds
repnz
cmp
jecxz
shl
icebp
shrb
ljmp
in
fucom
repz
mov
out
in
les
loope
sarl
sarl
leave
aaa
out
in
std
out
lock
ret
repz
jecxz
ljmp
out
xchg
sub
xor
cmc
sub
cs
cmp
loope
loopne
lock
cmc
call
cmp
xchg
rol
loop,pn
call
aad
jecxz
call
hlt
int3
mov
xchg
call
out
fcmovne
shl
xor
repnz
fldln2
aam
stc
int3
sbb
rol
in
fprem1
aaa
out
xlat
fadd
inc
cld
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
pop
out
adc
sarb
add
in
std
aad
repz
lret
call
in
xor
xor
ljmp
ror
out
into
addl
out
out
jmp
xchg
call
cmp
incl
fisttpll
fisttpll
icebp
in
divl
aaa
in
sub
clc
cli
and
out
filds
lret
mov
cld
in
sub
lock
leave
call
loopne
cmp
xchg
sar
mov
test
test
lret
fdivs
in
in
int
cmp
into
out
shl
ret
std
cli
fcmovnu
fsubrp
ret
loopne
ret
ret
sti
stc
fldl
ret
fdivrp
fdivr
enter
in
icebp
fnstsw
jecxz
repz
in
shl
xlat
fildl
cmp
aad
mov
lret
shr
in
xor
out
in
fnstsw
neg
aas
cli
aad
rcr
adc
in
out
mov
xor
jmp
fxtract
fsubp
cmc
clc
jmp
roll
ret
shl
out
iret
cmc
leave
into
into
jmp
in
cmp
adc
loope
in
out
orl
in
in
cli
fdivrl
jmp
clc
stc
ret
loop
in
cmp
loop
xchg
in
lret
leave
lret
into
into
lret
in
fprem
fadd
in
rol
in
enter
mov
enter
lret
ret
loopne
fst
xchg
jmp
divl
fld1
ljmp
fistpll
sti
rol
test
in
incl
test
out
jmp
hlt
aaa
rol
jmp
into
in
loop
fiadds
in
lret
mov
addl
loopne
clc
shl
iret
ljmp
idivl
incl
fsub
ljmp
rcl
rcr
repnz
cmp
repnz
in
flds
std
mov
nop
ret
call
in
jmp
shl
stc
icebp
mul
lds
sti
mov
fmul
hlt
jmp
out
out
call
xor
loop
cmp
mov
jmp
xchg
out
xor
std
xlat
lock
inc
mul
mov
call
cli
xchg
loopne
fnstsw
in
call
rol
hlt
and
loopne
fcmovnbe
repnz
and
mov
call
enter
repz
sar
fmul
sbb
icebp
lret
jmp
jmp
in
cmp
rol
aas
aad
mov
jecxz
lret
fimull
aad
jecxz
rol
aam
cmp
loope
iret
sti
sti
cmp
test
out
jecxz
xor
test
lret
iret
in
loopne
int
cmp
int3
fmul
xor
stc
cld
std
cmp
loope
sti
into
clc
roll
ret
int3
int
fxch
repz
mul
rcr
jmp
enter
out
loopne
mov
icebp
fnstcw
push
xor
xlat
loop
fiadds
add
or
fsubp
mov
loopne
out
int3
call
sar
ror
rolb
fucomp
jmp
leave
mov
sub
aam
cmc
cmp
lock
fxam
adc
shl
aad
xchg
jmp
adc
das
ror
aam
cmp
fcos
cmp
ret
xor
lock
rcr
rcl
xlat
in
cld
cld
in
loopne
fmul
in
loopne
loopne
in
xlat
stc
aad
cmp
ds
sarl
ret
idivl
jmp
jecxz
leave
out
mov
in
loopne
ret
fcom
jmp
loopne
lock
out
cmp
std
xlat
out
iret
fldl
sub
xor
enter
cmp
repnz
int
icebp
enter
nop
shl
xor
sub
ret
out
int3
clc
loope
cmp
out
in
repnz
loopne
nop
jecxz
cmc
in
loop
iret
iret
rcl
ljmp
aas
aad
jmp
lret
aam
out
sbb
in
ret
shl
ljmp
idivl
sti
fadd
fcomi
or
jmp
jecxz
repz
loop
ret
fdecstp
cmp
lock
sarl
shl
out
test
ds
enter
fdivp
test
fdiv
fdivp
shl
int3
lock
hlt
out
fcom
int3
cmp
mov
stc
ljmp
fucom
in
lret
xlat
xor
vpxor
out
loope
rcl
std
icebp
loopne
jne
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
int
outsl
outsl
les
add
repz
out
in
in
loope
xor
int
aas
shl
in
loop
lock
ljmp
test
out
xor
repnz
ss
cli
out
orb
int
enter
in
xor
int
in
into
sar
into
shlb
addb
into
mov
lret
cs
cmc
fdiv
call
test
lds
and
fucomp
mov
jmp
out
leave
sarl
cld
aaa
repz
int
fcmovb
rcr
cli
cmc
stc
orb
xchg
icebp
jmp
aam
lret
aam
cmpb
xor
mov
mov
aad
cld
lret
out
test
lret
sub
imul
aam
int3
out
cli
loopne
lret
aad
loope
xchg
in
testb
out
loopne
shr
aad
aad
rcr
ret
ret
out
test
in
call
cmc
into
leave
xor
fnstenv
ljmp
rcr
cmp
ror
sti
les
into
jmp
aam
repz
sar
cmp
in
cli
neg
std
fucomi
in
testl
stc
out
not
jmp
out
hlt
into
shl
hlt
xlat
xchg
neg
jmp
int3
decl
loop
rcr
fcmovu
loope
std
test
rcl
out
test
aam
in
fmul
in
mov
ret
fdivs
stc
in
call
jecxz
in
cmp
test
orb
nop
or
rcl
repnz
aaa
aad
out
in
cld
in
cld
stc
ret
repz
testl
lret
fcmovbe
into
ljmp
icebp
loop
test
test
xlat
cmc
ds
xchg
test
in
lock
aaa
xor
clc
aam
shl
fstpt
cld
rol
not
fcmove
out
vpsubusw
loop
call
jmp
rcl
in
xor
clc
testl
in
std
xchg
rorl
out
jecxz
out
rcl
int
not
sar
testl
sub
in
sub
cs
ljmp
fcomp
xbegin
in
xor
jmp
ss
jmp
leave
ljmp
cmpl
jmp
cld
nop
loopne
jmp
in
into
xor
hlt
adc
fmuls
xchg
aad
in
xor
call
enter
cmp
fidivrl
lock
jmp
test
xchg
xchg
out
mov
in
xor
lock
lret
shl
fdivrl
cmc
mov
xchg
sub
lret
in
dec
repnz
sub
ret
rcr
icebp
hlt
clc
lret
jecxz
repz
hlt
rol
ljmp
fucom
enter
in
aaa
xor
rcr
into
jecxz
idiv
shl
fmul
decb
cli
lret
iret
xor
jmp
out
cmc
add
xlat
loopne
mov
out
loop
jmp
sti
mov
xor
ror
out
imulb
fdivrs
in
out
xlat
hlt
stc
int
rolb
in
out
jmp
jmp
ss
in
lret
fsub
ds
fprem
rol
mov
fadd
cmp
shr
rcl
loop
out
in
fdivrl
cmp
in
fdiv
fdivrs
mov
mov
leave
fldln2
into
lock
divl
cmp
call
in
mov
cmp
leave
cli
call
out
out
divl
enter
cmp
ret
jmp
enter
and
test
cmp
rcr
int
repnz
out
jmp
std
std
lock
ret
clc
and
icebp
aad
aad
out
shl
fsubp
shl
ret
cld
loop
in
test
sbb
lret
aaa
in
lret
out
jmp
out
out
cld
xchg
jmp
fimuls
test
repz
hlt
xor
inc
std
fcom
cld
xchg
cmc
xlat
jecxz
xchg
in
ljmp
fdiv
hlt
int
std
jecxz
loopne
adc
mov
mov
shl
xchg
out
loopne
cmp
lret
cmp
cmp
lock
test
jmp
into
jmp
repnz
jecxz
fptan
repz
jmp
cmp
iret
adc
loop
repnz
loop
incb
out
xor
out
fdivl
fcmove
ret
out
divl
ret
ret
mul
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
movsb
insb
push
lret
jg
add
in
enter
jmp
lret
lret
in
sti
sarl
sbb
test
test
fsubr
xchg
xchg
jmp
out
int
rcl
sub
repz
ffreep
sbb
std
in
les
out
sub
cld
call
enter
cmc
imul
aas
lret
rolb
xchg
fcmovu
jecxz
mov
rcl
hlt
cs
shlb
repz
fsub
faddp
cmp
test
icebp
in
ljmp
iret
hlt
repnz
enter
cld
ret
hlt
into
xchg
fsubr
in
and
loopne
out
loope
repnz
xor
out
fcmove
loopne
ds
lret
incl
out
call
jmp
ds
hlt
jecxz
repnz
repz
in
cmp
stc
lret
repnz
rorl
in
xor
cmp
sarl
out
out
sti
cli
mov
lret
out
in
hlt
ret
jmp
call
aaa
into
cmp
adc
sti
sbb
incl
cld
in
mov
ret
int3
std
rcr
sarb
cmpl
cmc
ret
in
xchg
shl
loop
xor
jmp
cmp
aad
testb
stc
clc
test
fcoml
sub
mul
leave
fcomi
clc
int
icebp
faddp
out
mov
addb
out
ljmp
out
std
xlat
xlat
rcl
aam
repz
cmp
out
xlat
ffree
cld
iret
xchg
xchg
jecxz
cmc
int
lret
into
push
jecxz
test
shl
loopne
repz
in
test
addb
aad
out
xor
lret
aas
xor
mov
ds
enter
iret
stc
out
std
in
lock
xlat
hlt
repz
out
cli
hlt
fcmove
xlat
loopne
repz
test
loop
iret
repz
int
out
int
repz
int
cli
fadds
cli
enter
lret
rcll
icebp
cmp
lret
leave
aam
cmp
sar
lock
std
add
loop
iret
fmul
ficoml
div
jmp
shlb
fadd
out
std
addl
fldl
into
int
xor
icebp
cmc
les
iret
rcl
ds
loop
rcr
hlt
ret
mov
mov
cld
ljmp
ljmp
int3
cmp
fdivp
out
sti
test
jmp
out
out
lret
xchg
xchg
ret
in
fldz
fidivrl
rcr
fidivrl
idiv
jmp
cli
jmp
mov
sub
call
xor
fldl
out
cmp
out
jmp
loope
mov
xor
fdiv
lock
out
sar
jecxz
iret
test
cmc
fildl
in
shl
loopne
repnz
enter
aas
icebp
ss
int
fiadds
not
jmp
sub
faddl
test
enter
faddl
xchg
out
addb
into
out
jecxz
aad
fnstenv
jmp
stc
cmp
hlt
lock
aad
fiadds
shr
adcb
xor
cmc
clc
lock
clc
in
fcom
aam
sti
hlt
fldpi
out
adc
add
call
ljmp
cmp
fcomip
fcmovnbe
aad
cld
xchg
out
in
repnz
out
leave
in
cmp
sti
cmp
int3
cmc
iret
xlat
stc
cmc
xchg
cld
or
jmp
cmp
lret
ljmp
ds
xor
xchg
repz
sti
sti
fldl
loop
enter
cli
int
in
in
aaa
fdivrs
cmc
addl
iret
stc
out
sti
lret
in
cmp
cmp
add
loop
xlat
xchg
int
rcr
lret
xor
xor
leave
cmp
aad
clc
cmp
shl
repnz
test
out
les
into
ret
shr
shr
fcomip
aad
dec
stc
std
ret
out
frndint
jecxz
fcoml
jmp
call
sarb
repnz
xor
fcmovb
ret
ffree
out
fucomi
in
nop
ror
xor
jmp
call
fcomp
aam
sarl
rol
leave
in
in
fstp
cmc
aad
xor
repnz
fdivrs
int
cmp
std
xlat
cmp
fcmovnb
fsub
repnz
enter
hlt
sub
out
rcl
rcr
aad
int3
cmp
fcmovb
fiadds
jmp
mov
xchg
jb
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
out
repnz
call
int3
jecxz
jmp
lock
leave
mov
std
int3
mov
loope
mov
shll
in
out
aam
fcmove
iret
fdivr
cmp
cli
xchg
in
flds
into
aad
shlb
rol
sti
in
into
in
sar
cmc
hlt
out
in
cmp
int
sti
in
addb
sar
out
aaa
cld
fistpll
rcl
out
test
loop
lret
loopne
lret
movb
hlt
leave
cmp
lret
stc
idivl
xor
ret
test
faddp
in
out
fmulp
lret
loopne
ret
sar
out
sbb
shl
rcr
test
fmuls
in
ljmp
rcr
fsubrp
stc
loop
sti
loope
div
cld
mov
in
rorb
int
lret
iret
icebp
fstp
cli
cld
cmp
xchg
cmp
fsubp
mov
int3
cmp
xor
cs
sti
cli
in
int3
lret
cmp
lock
jmp
sbb
mov
stc
xor
xor
cs
out
test
ret
test
nop
int3
jecxz
into
imull
xor
fst
fnstenv
fdivp
std
hlt
in
xchg
repz
cmp
in
mov
mov
aad
sti
cli
aam
leave
cmp
jmp
neg
repz
sub
cld
shl
xchg
repz
test
lret
ljmp
adc
test
jecxz
mov
aam
xor
in
iret
cmp
ljmp
out
into
loop
in
aaa
cmp
jmp
sarb
cmp
ret
mov
mov
lock
test
mov
enter
lret
repnz
rcl
aad
rolb
iret
and
test
repz
aaa
iret
cld
call
stc
iret
hlt
faddl
into
loop
loop
xchg
xchg
in
shl
lret
cmp
iret
stc
int
int3
cmp
in
lds
mov
fcomip
iret
repnz
rol
int
hlt
fdivrp
std
test
int
xlat
ror
in
lret
test
test
into
std
fprem1
repz
aam
fsubr
sti
fst
leave
clc
in
aam
in
out
rcl
int3
xchg
out
out
ds
repz
loop
ror
out
fdivl
in
aam
fucomp
cli
out
loop
cmc
ljmp
in
cld
aaa
out
cmp
fiaddl
loop
les
fstp
nop
repz
loop
cmc
xor
cmc
call
and
fcom
xchg
fcmovbe
rol
call
xchg
mov
shr
in
loop
lret
jmp
xlat
lock
fcomp
push
test
sti
lds
test
into
fsubp
xchg
aad
xor
fnstenv
into
ljmp
stc
int
test
test
fisttps
fdivrp
xor
xor
icebp
lock
cld
cmp
clc
hlt
test
fcmove
lret
xchg
sub
iret
jmp
xor
aam
loope
fstp
lock
std
enter
repnz
loope
xor
out
cli
std
fptan
ss
cmp
sar
fmulp
aam
lret
xchg
out
les
aam
clc
cmp
cmp
xor
fcomp
jecxz
loop
mov
jecxz
rol
shl
ret
int3
cs
ror
shl
ds
mov
mov
jmp
xchg
test
cmp
fdiv
cmc
int
loopne
ljmp
ret
dec
cld
out
fcomi
out
xor
ret
test
out
into
rcr
incb
std
jmp
addl
ret
out
in
fcmovnb
lret
cmp
jecxz,pt
idiv
aam
xchg
jecxz
ljmp
fmulp
in
fcomi
out
enter
out
div
clc
shl
test
cmc
movl
cld
shl
vpsllq
fdivrs
out
cmp
repz
lds
cli
xchg
iret
xchg
mov
mov
xor
cmp
int
in
in
shr
ffreep
rolb
fsubp
out
orl
sub
jmp
clc
lret
cmp
repnz
stc
cmpb
fadds
out
ror
jecxz
jmp
sub
xor
xor
cmp
out
int3
out
neg
loop
lds
fisttpll
repz
out
xor
stc
lock
fcmovnb
sbb
sar
fmulp
enter
add
icebp
in
cmc
xlat
repnz
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
rep
jb
push
mov
add
rcl
hlt
into
cmp
fcmovb
jmp
fisttpll
cld
xchg
xor
lret
ss
xor
xlat
jmp
ljmp
cmp
test
in
xchg
div
fsubrp
out
out
jmp
xor
roll
testb
call
call
rcl
clc
aad
aam
and
dec
cmpb
fsubp
aas
dec
mov
out
leave
stc
sti
out
lret
jmp
fiadds
xchg
mov
rclb
jmp
rol
lret
fmulp
into
sbb
adc
hlt
decb
jmp
sub
xor
fdivp
cmp
loope
sarb
cmpb
aad
loopne
popl
in
jmp
out
call
cmp
fst
lock
call
notb
ds
idiv
stc
neg
test
cmp
cmc
fcmovnb
loop
repnz
xlat
in
loop
sbb
out
repnz
icebp
ds
fcmovbe
jmp
sub
out
out
xchg
xchg
ror
in
call
out
out
sarl
clc
fcom
cli
ret
cli
sti
lds
rcll
cmc
sti
int
xor
jmp
repnz
jecxz
mov
incb
xor
sar
aam
cli
ljmp
in
fmull
mov
xor
shl
enter
sbb
rcr
ret
fadds
fmul
into
repnz
bnd
ljmp
ret
fadd
aad
out
int3
jmp
in
jmp
icebp
in
std
idivl
fdivrl
out
int
in
loopne
lock
test
loop
loopne
repz
imul
hlt
fsubr
iret
aaa
in
ljmp
in
out
into
mov
out
lret
ret
in
aam
xor
rcl
cmp
fdivrs
vmaskmovdqu
rol
enter
shl
mov
fcomi
ljmp
out
neg
icebp
loop
shl
vpminsw
in
fcoml
loop
in
lret
sti
jmp
loop
repnz
loope
std
xchg
iret
out
lret
out
xor
lock
xor
out
rcr
xor
test
inc
rcl
enter
sti
jmp
iret
leave
int3
clc
ljmp
fcomip
std
aas
and
call
in
and
cld
loope
rcl
out
cmp
cmp
clc
fisttpl
fimuls
loopne
ror
xlat
int
out
jmp
fdivrl
fsubp
test
fisttps
lret
pushl
in
mov
div
test
cli
addl
in
xchg
xchg
lret
dec
xor
xor
fcmovne
enter
loope
cli
aas
aad
rcr
movl
mov
xor
ljmp
aas
repz
sbb
xlat
ror
out
test
jecxz
stc
fstp
loope
out
loop
int3
xor
ds
call
out
lock
xlat
fcmovnu
cmc
cmp
fsubr
mov
test
loop
xor
fdivr
cmp
rcr
dec
fcom
stc
fsubr
lock
cmp
out
lret
shlb
xor
jmp
sti
sti
test
jecxz
cli
rorb
neg
jecxz
call
jmp
cmc
ror
ss
xor
shl
cmp
xlat
ret
cli
sti
fsubr
out
std
clc
fstl
ljmp
icebp
rcl
ds
mov
mov
enter
ljmp
cs
idiv
fucomi
int
fnstsw
sti
jecxz
xlat
test
std
mov
sbb
aad
icebp
out
aad
fnstcw
cmp
fcomip
xchg
out
fiaddl
xor
jmp
cli
out
jmp
ljmp
testl
xor
cli
fsubr
xor
aas
fsub
xchg
xchg
lret
test
test
in
test
aam
cmp
loop
sar
xlat
ret
mov
call
fistl
fldl2t
cmp
stc
cmp
in
cmp
cmp
in
out
shl
cmc
in
fprem
fucomip
cli
in
repnz
lock
fcmovnb
cld
ss
cli
cmp
enter
clc
xchg
xchg
sub
xchg
cmc
stc
into
cmp
in
int
xor
cmp
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
pushf
dec
jbe
mov
jg
add
loope
test
stc
std
ljmp
xchg
jecxz
sti
jmp
cli
aas
lret
clc
aam
out
cmc
shr
ror
loope
int3
mov
xchg
xor
lret
ret
cmp
cmp
icebp
xlat
in
loope
out
in
rol
stc
fcomp
int3
repz
loopne
call
fdivl
fst
fucomp
iret
roll
in
ds
in
sub
ss
in
xor
lret
div
repnz
shl
loopne
fucomip
fstp
jmp
stc
into
nop
in
std
xchg
mov
lock
lret
cmc
std
cld
cmp
leave
cmp
jmp
repz
repz
mov
clc
jecxz
adc
fnstenv
xor
icebp
repnz
fstp
jmp
in
int
mov
rol
lret
ret
xor
lret
rol
fcmovbe
cmp
jecxz
stc
fadds
lret
iret
aaa
out
cmp
cmp
leave
cmp
rol
div
sbb
loope
loop
jmp
out
stc
vaddsubps
rcl
into
out
ret
xor
into
orb
sub
icebp
imul
int3
sti
clc
cmp
std
fiaddl
mov
test
out
in
lret
in
out
loope
divb
fprem
call
aam
cli
repz
inc
jmp
in
in
leave
jmp
xor
icebp
stc
out
shll
cld
std
aas
into
cmp
cmc
clc
cmp
sti
enter
mov
sub
shr
call
cmp
leave
lock
fldl
ror
nop
xchg
lock
lret
out
iret
ss
test
rcr
sti
cmp
jecxz
out
fsubr
into
jmp
xchg
xor
out
aaa
xor
cmc
lock
aas
in
ret
out
clc
xchg
lock
rcl
jmp
ror
enter
cmp
ret
fmulp
testb
jecxz
mov
out
xor
out
call
int
icebp
in
test
loope
xchg
cli
cld
out
repz
jecxz
icebp
jmp
sarl
xor
rol
fcmovnb
std
test
cmc
sti
out
in
ljmp
xlat
sub
xor
cmp
cmp
rcl
and
in
test
loop
loope
in
out
fcmovnu
xlat
rol
in
cli
int
std
repnz
xchg
stc
decl
in
loopne
imul
xor
cmc
cmp
repz
rolb
lock
jmp
icebp
cld
repnz
rol
int3
fcmovnbe
test
ljmp
repz
fiadds
repnz
repnz
ret
loopne
in
sar
int3
sarl
jmp
and
cld
fdiv
sti
sbb
mov
sar
rcl
hlt
repz
repnz
xorl
mov
cli
mov
sbb
sbb
out
sub
ljmp
loop
cmp
faddp
in
cli
mov
loop
jecxz
repnz
shr
ret
lock
lret
aam
in
fdivrl
std
loope
in
fucomp
repz
aaa
rcr
shr
cli
out
into
iret
into
cmc
adc
jmp
jmp
leave
iret
call
xchg
xor
in
fincstp
cmp
cmp
incl
cmp
clc
mov
mov
lea
aam
repz
aam
cmp
aam
shl
iret
xchg
mov
mov
stc
mov
hlt
shlb
cmp
jmp
aam
int3
lret
cmp
loop
shl
cli
mov
jmp
rcr
jmp
rol
repnz
cmc
xor
jmp
repz
test
mov
loope
call
mov
jmp
repnz
out
aad
out
loope
not
jmp
in
fimull
aam
xor
bnd
les
cmp
fdivrs
out
xlat
mul
test
jecxz
repz
enter
fcomp
idiv
cmc
sar
jecxz
repnz
fcmovnu
cmc
shl
ffreep
fsub
sar
lds
stc
jecxz
aad
out
xlat
xor
ds
sub
sti
in
std
jmp
mov
lock
incl
out
ljmp
sarl
fdiv
ret
hlt
repz
mov
loope
cld
addl
mul
repz
fadd
aad
clc
ret
clc
fadd
loope
call
jmp
call
les
fdivl
ss
loopne
repz
out
clc
xlat
ljmp
hlt
test
lret
mov
sti
icebp
shl
cmp
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
shl
jg
add
or
mov
lock
cmc
cmc
cmp
fdivrl
test
clc
mov
into
fcom
lret
in
icebp
shr
sub
repz
repnz
loope
icebp
in
jmp
enter
xchg
fimuls
ret
into
cmp
aas
sarb
repnz
ret
mov
sub
out
xorb
ret
xor
stc
xor
ljmp
leave
rorb
mov
lock
xor
out
cli
cli
fidivrl
aad
out
ret
faddl
mov
ljmp
rol
aad
xor
div
int
jmp
addb
mov
mov
ljmp
sub
cs
xlat
aam
lock
aam
lock
cmp
stc
addl
stc
fdivs
iret
iret
xlat
into
stc
fildl
cmpl
test
xchg
cs
aam
int
call
fcomip
jmp
leave
shl
iret
fsubr
lret
idiv
fxch
lret
fxch
loope
rol
mov
sub
test
leave
jecxz
shl
sub
das
ss
div
aad
cmp
ljmp
fcmovne
jecxz
mov
cli
out
lret
iret
loope
int3
leave
ror
fbstp
aas
ror
cmp
cld
ljmp
icebp
out
mov
in
int3
jmp
cmc
into
fucomip
fldl
or
stc
nop
out
sar
xor
in
lret
int
repnz
sarl
test
rcr
aas
test
aad
xlat
aam
std
call
leave
in
lret
hlt
fcmovbe
cld
call
sti
and
in
sti
fucomip
iret
fmul
in
or
fmulp
enter
leave
in
cmp
cld
rol
aas
jecxz
in
cld
aam
call
xchg
iret
xchg
xor
lret
into
imul
int3
cmc
aad
loope
aam
adc
test
in
out
cs
fidivl
sti
aas
loope
faddp
idiv
imul
out
leave
std
leave
std
sti
fcmove
xorl
sarl
std
aas
idiv
rol
hlt
idiv
mov
std
ds
in
loopne
xchg
das
clc
aaa
xlat
rcr
fdivrs
aas
fsubr
out
fld
jecxz
in
jmp
in
out
xchg
cli
into
jmp
aaa
int
xor
aam
repnz
roll
loope
and
lret
bnd
lock
ret
lock
hlt
xor
std
rcr
out
sti
loop
lret
std
or
in
fstl
das
in
shll
aad
clc
ss
aas
xlat
leave
flds
in
std
nop
mov
mul
fcmovnb
fst
shl
xlat
sbb
rolb
mov
loop
test
iret
xchg
aad
aad
idivb
imul
cmp
fildl
loopne
in
enter
xchg
ljmp
in
aam
loope
xorl
aam
jmp
sti
sub
iret
aaa
ss
jmp
fstp
xlat
repnz
mov
faddl
lock
in
out
rcl
imul
in
jmp
xlat
out
cmp
ffree
cld
idiv
out
leave
cmc
jmp
test
shl
enter
iret
lock
in
std
sti
in
mov
fiadds
enter
out
ljmp
iret
loop
aas
in
enter
fsub
into
rcr
icebp
add
out
ss
call
addl
test
loopne
mov
cld
clc
repz
shl
iret
xor
imul
lret
xlat
rcl
int
fstp
fcmovnbe
aas
cmc
jmp
iret
decb
mov
aaa
leave
call
cmp
leave
call
cld
ret
clc
aam
not
out
lock
in
vpmuludq
out
sar
fcmovnbe
xlat
cli
rolb
std
mov
mov
push
lret
repnz
loop
cld
fdiv
out
shl
ror
cmp
test
iret
fst
lea
in
call
enter
in
cmc
in
repnz
cld
sbb
out
xchg
vmovq
cmp
stc
leave
cmp
iret
lret
inc
rolb
xchg
in
cli
shl
shl
ret
out
ljmp
hlt
rcl
repz
repnz
sbb
ljmp
ret
rcr
leave
fdivrp
idivl
lock
aas
fmuls
out
loope
mov
jmp
iret
int
ret
fstp
sbb
call
loop
jl
add
loop
out
mov
int
neg
xor
std
sub
aas
fnstsw
fcmovb
or
mov
aam
stc
cmc
cmp
sar
sarl
repz
popl
or
cmc
stc
aam
std
std
lret
aas
cmc
add
icebp
cmp
test
fcmovu
jecxz
in
repz
jmp
divb
out
fucompp
iret
cmp
sar
divb
icebp
out
not
std
out
out
ftst
mov
int
fistpll
ss
ljmp
rcr
int
rcl
cmp
sub
loope
ljmp
aad
shl
loop
div
rcr
sti
in
aas
fdivrs
in
test
in
loopne
out
lret
jmp
out
aaa
in
cmc
out
in
aaa
repz
in
icebp
std
testl
incb
fldl
lret
stc
hlt
icebp
inc
fstp
test
aam
orl
xor
ret
aas
imul
fxch
cmp
rorb
iret
loope
icebp
xchg
xor
xor
clc
stc
std
out
in
out
aad
lret
cld
out
idiv
and
orb
shl
hlt
in
xlat
test
hlt
aam
cmc
cmp
fcmovb
fcmovnu
leave
xchg
jecxz
addb
icebp
vpand
cmp
aaa
in
xor
loopne
incb
lret
sti
movb
lds
iret
out
xor
std
sarl
int3
fmulp
shl
enter
cld
test
loop
fildl
out
lret
xlat
iret
shr
lret
in
cmp
cmp
repz
mov
out
repz
repz
sti
fcmovu
addl
jecxz
sbb
fmul
xchg
fcomi
iret
in
xchg
xlat
in
sar
fdivrs
aaa
aad
sti
jecxz
icebp
in
cmp
fcmovnb
loope
fldl
rcll
fcomi
cmp
lock
ret
test
neg
xlat
jmp
ljmp
int
sti
cld
fstp
fucomi
test
test
call
std
iret
sub
loopne
loop
fdivr
cmc
jmp
int3
fcmovbe
mov
fsubr
loopne
xchg
xor
loope
enter
out
filds
aad
fdiv
aad
neg
fcomip
fsubp
lock
lock
xor
rcr
out
cmp
sar
in
rol
mul
decl
xchg
xor
rcr
cmp
fxch
leave
ljmp
or
leave
enter
out
rolb
cmc
ret
in
rcr
ljmp
loop
in
fsub
fcom
jmp
iret
lret
fcmovne
repz
sub
leave
rol
xor
int
cld
ds
stc
test
call
out
jecxz
repnz
xlat
repz
shr
iret
cmp
xlat
shl
out
out
loopne
int3
rcr
shr
mov
in
into
xor
int
ds
and
xchg
leave
and
cld
ret
rolb
call
sarl
cli
fdivr
repz
jmp
std
loop
xchg
lock
sti
stc
aam
out
cmp
cmp
rol
aas
rcl
std
repz
in
in
fsubr
ljmp
in
xlat
xor
ror
and
repz
fmuls
out
fcomi
loop
loop
int
jmp
loope
in
repz
cmpl
flds
enter
sub
into
call
ror
f2xm1
cld
aam
cld
fisttpl
adcl
iret
in
clc
loope
rcr
rcl
repnz
test
in
loop
orb
fdiv
lret
fxch
lret
aad
sbb
jecxz
xor
neg
aam
fcmovnb
ljmp
jmp
ss
lret
cmp
ss
ljmp
div
cmc
out
int
lret
mov
fstp
shl
div
shl
sti
jmp
in
fcomip
out
xlat
lock
xchg
std
stc
fadds
xchg
out
xor
lret
ret
repnz
loopne
cmc
aam
cld
in
loopne
clc
xchg
into
lret
cmp
fcmovb
shr
cmp
and
test
call
lock
lret
jecxz
aaa
xor
cld
idiv
in
ss
in
aad
incl
int3
fdivr
test
aam
xor
loop
cli
aaa
imul
jmp
cmp
fistpll
icebp
in
repnz
jmp
fimull
int3
je
xor
add
jmp
rol
sarl
rcl
mov
repnz
jl
add
lock
jmp
sarb
cmc
rcr
aad
cli
test
cmp
fisttps
aad
shl
cs
fst
fstpt
cmp
cmc
cmc
out
adc
xlat
in
out
mov
lret
or
out
in
shl
xor
vcvttpd2dq
aam
ds
sbb
call
jecxz
xchg
xchg
out
loopne
cmp
out
call
lock
fpatan
in
in
loop
xchg
enter
mov
aam
xor
rcl
dec
xor
iret
ret
call
ret
sbb
out
out
xchg
fcomip
leave
leave
call
repz
int
sar
aam
cmp
fadd
out
sti
xlat
jmp
jmp
fiadds
ss
xor
repnz
cld
hlt
fcomip
loopne
jecxz
fisttpll
lret
cmp
clc
xor
aaa
icebp
idiv
repnz
icebp
cmp
and
neg
sbb
aaa
clc
leave
out
std
aad
aaa
cmp
ret
test
bnd
incb
mov
rcl
lret
imul
jmp
cmp
cmp
add
mov
int
movl
out
xor
cmp
fildl
test
sar
int3
ljmp
not
cmp
lret
hlt
stc
cmp
fisttpll
iret
nop
in
enter
sub
out
in
idiv
aad
int3
int
sarb
aad
jecxz
faddp
not
loope
fisttpl
mov
in
shl
ss
idivl
neg
addl
lea
cmp
repnz
idiv
std
jmp
fsub
aas
lock
repnz
in
decl
aaa
loope
loopne
fnstenv
clc
fmul
loope
in
loop
shl
idiv
sti
iret
mov
icebp
rcr
mov
jmp
int3
aam
aam
neg
stc
xlat
faddl
mov
mov
out
in
cmc
in
into
vaddsubpd
int
xlat
out
div
xlat
in
lock
out
test
sub
mov
aam
call
fdiv
cmp
into
jecxz
xlat
std
in
adc
loopne
fmul
loopne
mov
adc
rcl
lock
jmp
rcl
or
jmp
call
xchg
xchg
cli
in
out
test
ss
aam
into
xor
clc
xchg
sar
mov
clc
vshufps
nop
cmc
into
leave
fsubr
cmp
rcr
sar
cld
cld
add
loopne
stc
loopne
stc
loopne
fldl
ss
iret
sarb
icebp
shl
ret
ret
test
incb
jmp
ljmp
aas
sbb
sarb
add
enter
clc
faddp
nop
addb
dec
stc
iret
clc
cmp
out
out
repz
xchg
int3
xchg
sub
iret
ret
in
out
iret
std
in
test
adc
shl
aad
out
leave
out
mov
mov
mov
int3
cs
in
out
iret
fcomi
in
in
aam
fsubrp
call
fucomi
std
repz
orb
iret
xor
cld
movl
sarb
testb
jmp
out
int3
stc
in
shl
sar
clc
iret
fidivrl
xchg
xlat
mov
lret
std
rorb
in
lret
aad
aas
cli
cmp
sarl
faddp
fcompp
lret
fiadds
sub
aam
in
ret
test
cli
sub
aas
test
fsubr
lret
cld
fmul
call
sub
icebp
std
int
ret
sti
stc
test
clc
sub
in
test
sub
xlat
aam
leave
lret
iret
lock
std
fldl
xchg
in
fsubr
xor
xor
out
aam
fucomi
xlat
fiaddl
fabs
icebp
jecxz
jecxz
xchg
ret
xor
frndint
sar
xlat
xor
sti
addl
fcomp
loop
add
rol
enter
xor
in
cmp
lock
out
rcr
out
and
out
xchg
cmc
mov
jmp
in
cmp
int
aad
fdivr
ds
fmul
ret
call
cld
cld
in
loop
into
loop
cs
xor
ds
ret
roll
in
jmp
jmp
mov
int
fucomip
cmp
ret
ret
enter
addb
jmp
in
in
mov
jmp
iret
aad
aad
push
pop
inc
pop
daa
in
jg
add
out
lock
shl
incl
in
ret
mov
fidivs
xor
cmp
icebp
call
test
rcl
cmc
out
lea
int
repnz
loop
clc
fcomp
int
icebp
loop
xchg
loop
adc
mov
loope
std
xchg
nop
vpaddsw
int
aaa
lret
shl
fld
fucomi
jecxz
in
loop
jmp
loopne
fcmovnbe
addb
ljmp
xlat
repnz
std
repnz
xchg
sbb
mov
mov
int
test
lret
lds
clc
iret
shl
cmc
into
ds
xlat
stc
ss
fxch
ss
fcom
repnz
xlat
cmc
in
ljmp
jmp
lock
loopne
xor
aam
divb
fucomp
iret
hlt
ret
and
xchg
out
in
leave
shl
xor
ror
in
xlat
sti
repnz
push
xlat
flds
mov
jmp
out
ljmp
cld
ljmp
aad
mov
test
call
imul
sub
leave
out
not
repnz
jecxz
dec
icebp
aam
fucompp
mov
in
jecxz
out
xchg
fucom
cld
xor
repz
aaa
iret
hlt
repnz
loope
test
loope
repnz
out
in
mov
shl
hlt
not
shl
repz
ss
call
cli
in
rcl
lret
lret
orb
neg
enter
cmp
shl
loop
fimuls
leave
rolb
in
ljmp
sar
xchg
fcom
xchg
fmul
loopne
jmp
fists
aaa
jmp
ror
test
cmp
cmp
stc
repz
addb
fildl
loopne
out
xor
shl
sarl
jecxz
aas
fst
ds
test
fucompp
lret
test
iret
int
stc
repnz
int
into
into
shl
jecxz
aam
loopne
mov
loop
loope
loopne
ds
imul
cmc
shlb
shl
out
repz
repnz
mov
leave
fsts
xor
fcom
out
imul
iret
lret
imul
rcl
shr
jecxz
out
lret
dec
in
div
xor
in
ljmp
shl
test
ret
test
in
or
mov
les
xlat
fsubr
fidivrl
cld
int3
ret
xlat
into
loope
jmp
mov
sub
mov
xor
ljmp
aad
shl
xchg
enter
xchg
loop
sub
out
out
ljmp
fincstp
clc
std
enter
enter
ljmp
iret
lret
sti
xor
clc
in
jmp
loope
cmp
leave
fcomi
fcmovnb
fdivrp
dec
jmp
jmp
rol
fdivr
push
xor
fdivr
in
adc
test
aam
cli
jecxz
cmp
loopne
xchg
push
repz
jmp
hlt
icebp
into
cli
in
idivb
repz
rcl
ret
cmc
in
xor
lock
enter
ljmp
aad
addl
cli
int
mov
stc
shr
leave
repnz
repz
shl
mul
jecxz
aam
jmp
and
xor
jmp
icebp
repz
out
iret
out
cld
ret
call
test
xchg
rorl
cmp
aaa
into
stc
in
into
in
call
ret
lds
out
fmuls
out
int3
into
int3
cmp
stc
cmp
hlt
cli
shl
rcl
ret
repnz
std
clc
jmp
sti
jmp
out
das
into
lds
jmp
les
std
stc
loope
mov
xlat
mov
ljmp
in
in
ljmp
hlt
loope
fdivr
xchg
les
xor
lret
fcmove
icebp
cmp
fdivrp
mul
repz
call
mov
mov
in
aad
iret
fsub
shr
ljmp
cli
rcl
lock
ds
mov
test
iret
imul
stc
jmp
lret
loope
cmp
test
in
leave
mov
ljmp
xor
cmp
int3
neg
fcmovne
ret
int
loopne
in
xchg
cmc
in
jecxz
mov
filds
shr
out
leave
rcl
aam
std
in
clc
cmp
mov
cli
mul
mov
lret
cmp
xor
int3
ror
sarl
cld
hlt
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
and
jmp
jl
add
test
stc
xchg
fucomp
decb
aad
shl
jmp
icebp
aam
clc
into
xlat
repnz
neg
loope
or
fucom
lea
xor
aad
lock
sar
cmp
cmp
roll
out
cli
out
in
lea
in
fdivr
rol
xlat
leave
shl
hlt
cmp
mov
test
fmul
xchg
fcmovu
loopne
shr
out
out
fdivs
aam
into
rcl
add
sti
rcr
cld
out
fisttpll
xor
cs
xor
clc
cli
iret
aas
call
out
in
fninit
hlt
les
loopne
iret
out
repnz
out
aaa
enter
cmp
out
sarb
fsub
enter
enter
ret
mov
loope
shlb
cmc
repnz
sarb
divb
cli
cmp
cmp
fisttpll
out
mov
fiadds
lret
stc
fsub
lret
aas
out
fpatan
aas
xlat
cmpl
sar
std
mov
test
lock
in
enter
test
neg
loop
fistpll
div
cmc
orl
addb
lock
aam
int
ds
std
sti
cmpl
loope
test
lret
loopne
std
xchg
lret
loope
in
cmp
rcl
cmp
xor
ljmp
mul
xchg
ljmp
fsub
cmp
rcl
cmp
cmp
idiv
cli
fucomi
xchg
mov
in
in
lock
out
lret
call
not
cmp
shl
fiaddl
fsubp
iret
xchg
ljmp
aam
out
cmp
fucom
ret
in
ljmp
shl
sub
xor
aam
xlat
aad
xor
xlat
fst
stc
hlt
xchg
fdiv
imul
in
xchg
lret
loopne
ror
hlt
lock
fucom
iret
faddp
loop
mov
fdiv
lret
jmp
jmp
ljmp
xor
jecxz
hlt
iret
fcom
ret
in
jecxz
sub
lret
test
shr
stc
icebp
lock
idiv
into
shr
lret
flds
mov
ljmp
xchg
lock
xor
in
aad
in
ljmp
ret
test
in
sti
xchg
adc
leave
fcmove
mov
lock
hlt
aam
icebp
idiv
lret
rcl
aam
in
aad
in
mov
xor
xchg
in
shl
shrb
sub
leave
std
ror
fcmovnbe
roll
call
les
in
rcr
xlat
sub
cli
stc
fcmovnu
repnz
in
cmp
cmc
jmp
out
nop
les
enter
int
std
aaa
rcl
fbstp
ss
fcomi
cmc
call
into
jmp
les
aad
stc
int
aad
lock
test
xchg
rolb
call
ret
xor
lret
xlat
xor
aad
loopne
cmc
ret
not
loopne
in
dec
fsub
lret
enter
cmc
xchg
ss
xor
into
lret
loopne
call
idivb
shr
repnz
call
jmp
in
mov
out
sarb
cld
int
ss
cmp
test
fadd
mul
dec
xchg
xchg
fcom
aaa
int
xbegin
idiv
cmp
fcos
call
out
in
mov
hlt
in
shr
aaa
sti
cmp
cmp
aad
ret
fucom
jmp
in
lret
loopne
int
xchg
xchg
sub
shl
test
iret
repz
aam
ret
ret
neg
jmp
out
xor
in
xor
cmc
lock
out
fst
into
icebp
fdivp
ret
fsub
hlt
jmp
lret
kmovw
in
xor
int
into
icebp
fistpll
rcl
lock
out
lret
mov
out
xchg
repz
stc
xor
idiv
hlt
int
clc
fmul
loop
lds
leave
in
out
mov
sarb
fnstenv
call
shr
aad
ret
loope
clc
ljmp
jmp
lock
aaa
aaa
jmp
fdivrp
clc
aas
ds
cmp
clc
hlt
mov
loop
in
jecxz
rol
aam
int
leave
icebp
stc
xor
sarl
lds
test
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
ljmp
std
add
testb
loop
in
xchg
in
adc
jmp
enter
clc
lock
cli
aad
fstp
add
sti
mov
in
lret
jmp
out
lret
mov
iret
cmp
ds
fstp
rolb
ret
out
in
mov
shl
rcl
out
xor
cmc
lock
ljmp
out
cmp
jmp
fcmovnu
leave
icebp
loop
test
iret
cs
out
out
call
test
cmp
loopne
fiaddl
in
incl
xlat
cs
fsubr
cmp
jmp
shr
cmpl
mov
call
ficoms
in
cs
aaa
lret
fcmovbe
lret
iret
aam
ds
icebp
repz
xchg
mov
div
icebp
ljmp
div
cld
cmc
lock
mov
shr
out
xchg
in
xchg
aad
xor
stc
repz
shr
sarl
aam
cli
sar
jecxz
int
fsub
xchg
in
xchg
call
int3
xor
cmp
cmc
shr
jmp
iret
aad
test
ret
lret
loopne
mov
loop
cmc
out
fcmove
cli
fistpll
ss
icebp
clc
stc
icebp
adc
fdiv
lret
std
mov
rcl
into
ror
cmc
std
lret
in
iret
shr
rol
cli
fld
call
hlt
mov
mov
lock
icebp
idiv
int3
int3
xlat
cmp
div
ds
jmp
addl
aad
fnstenv
hlt
cmp
fcmovnu
in
and
and
xlat
loop
cmp
sti
cmp
not
stc
ret
sti
fadd
xchg
testb
fadd
jecxz
loope
out
jecxz
in
sti
cmc
idiv
int3
addl
loope
hlt
enter
repnz
fiadds
ret
jmp
ljmp
vpsubw
loope
into
xchg
icebp
out
test
cli
shlb
neg
cmp
aas
stc
sti
aam
ljmp
cli
shl
into
hlt
call
in
aas
int3
lret
aam
fsub
cmp
loope
jecxz
out
lret
hlt
xor
lds
aaa
enter
cld
ds
jmp
les
lock
mov
lds
std
fstpt
call
not
repz
mov
aad
test
call
call
call
push
loopne
loope
shr
in
flds
lock
iret
loop
fldln2
cmp
lock
repnz
clc
bnd
out
test
mov
lret
sti
loope
mov
in
icebp
xor
rol
aam
rcl
icebp
rcl
xor
icebp
sar
and
ret
orl
cmp
cmp
out
shl
call
aad
fcmovnbe
repz
fadds
jecxz
fidivs
iret
not
iret
rol
xlat
cli
sarl
rol
test
xchg
lret
mov
mov
int3
lret
repz
std
out
clc
mul
jecxz
in
fdivrs
shr
aam
fsubrp
repz
loop
leave
jmp
xor
ret
jecxz
adc
jmp
fsubr
lret
in
call
sti
shr
ljmp
stc
cli
fildl
in
ljmp
into
rcl
into
shl
loop
sti
cmp
rol
rcr
rcr
in
cmp
jecxz
out
into
mov
aad
xor
clc
neg
cmp
rcr
in
fcmovu
xchg
in
cmp
mov
mov
xchg
xor
aaa
jmp
in
sar
cmc
sar
cmp
cld
fxtract
loop
clc
stc
xchg
shl
out
iret
shr
cmp
in
lock
rcl
fadd
ljmp
sbb
rol
loopne
ss
div
sti
icebp
cmp
loope
idivb
fildl
stc
test
aad
lret
ss
sub
in
fyl2x
cmp
test
loopne
test
in
loop
addb
cmp
lret
ffree
cmp
rcr
enter
lret
clc
xchg
repz
jecxz
ret
icebp
fdivs
fidivl
sti
call
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
cmp
jl
add
incb
mov
leave
in
std
mov
fucompp
in
repnz
loopne
repnz
ljmp
aaa
fucom
ffreep
cli
or
sbb
xor
out
shll
cmc
sarl
imul
out
xlat
iret
fsubr
leave
sti
leave
jecxz
sbb
out
lret
repz
lock
ds
fxch
and
in
in
leave
call
loope
repz
call
leave
enter
in
fnop
call
out
repz
and
jecxz
in
fcmove
lock
ret
in
in
loopne
fdivr
cld
aad
int
das
jecxz
cmp
xor
into
loope
sti
adc
sti
loope
jmp
out
mov
icebp
loopne
ljmp
repnz
jmp
cmp
aam
test
in
stc
faddl
nop
mov
ss
call
cli
test
std
test
fadd
mov
mov
orl
jmp
aam
ror
int3
fnstcw
fst
loope
cli
fcmovu
jmp
mov
enter
adcl
xor
out
pushl
shll
stc
loope
add
out
sub
out
loop
xor
jecxz
cmp
aas
hlt
in
idivb
lock
cmc
ret
call
stc
loop
mov
sti
ljmp
xor
fxam
xlat
ret
mov
int3
std
int3
lret
lock
fists
ljmp
cld
fcmovu
cli
add
orb
in
fcomi
out
pushl
ds
call
repz
hlt
loopne
rol
aam
fmul
loopne
mov
loope
shl
int3
ret
cmp
fcomi
int
cmp
clc
fcmovbe
leave
out
filds
xchg
xchg
out
shlb
cmp
hlt
cmp
lret
lret
cmc
and
xchg
test
add
lea
xchg
out
das
xor
ret
xlat
neg
repnz
cmp
hlt
rol
std
out
xlat
ljmp
int
int
sub
not
idivb
out
xlat
out
faddp
icebp
div
loopne
xchg
int3
cli
out
int3
in
test
das
loop
cmp
fst
enter
ds
cmp
xlat
fcom
mov
fcmovu
clc
loope
out
enter
jecxz
into
out
cmc
into
out
repnz
std
cld
repz
fsub
mov
enter
loopne
loopne
lret
lock
xor
xor
cmp
repz
stc
aam
call
fildl
rcll
clc
cmp
enter
fdivr
sti
ret
rorb
std
xlat
loop
sti
rcll
test
xor
into
sti
ds
loop
in
repz
idiv
mov
xchg
enter
xchg
out
stc
xor
into
cmp
jmp
adc
ret
xchg
ret
test
cmp
shl
cmp
rcl
rcr
lret
sub
into
in
orl
leave
in
stc
aaa
cmpl
test
repz
in
les
repnz
jmp
fucomp
loopne
ret
ret
stc
test
and
out
xchg
and
rcl
out
out
fcmovne
repz
cmp
mov
xchg
nop
fldl
lret
hlt
fnstsw
out
into
cli
loope
cmc
div
hlt
ret
sbb
call
int3
mov
std
loop
xor
out
int
ss
ss
stc
adc
fildl
out
xor
test
cmc
xlat
rcl
cmc
xor
cmc
cmp
out
in
out
testl
sub
jecxz
stc
cld
in
out
cmc
cmp
xchg
jmp
jmp
mov
addb
icebp
sti
stc
lret
xlat
clc
sti
test
cmc
xchg
in
ljmp
int3
ror
ror
loopne
cli
shll
cli
cmp
rcr
xlat
vcvttpd2dq
decb
in
cs
lock
not
aam
leave
lret
in
sub
test
out
out
mov
iret
mov
mov
xor
aam
ljmp
jne
mov
xchg
add
add
aad
rcr
fstp
sbb
jo
mov
jg
std
add
int3
bnd
mul
fcmovnu
test
loope
cs
stc
fstpt
lret
jecxz
lock
icebp
fcmovbe
out
std
hlt
out
out
out
xchg
out
shrl
xor
cmc
cmp
divl
cmp
out
sar
cmc
xchg
fcomip
xchg
cld
out
jecxz
into
lret
loop
fsubrp
in
lret
hlt
cmp
in
mul
lock
in
fmul
in
call
sub
out
cmp
xor
cmp
lock
shl
jecxz
aad
jmp
fiaddl
clc
repz
repz
iret
repnz
aas
cmp
sti
loopne
mov
sti
std
nop
adc
out
cs
into
xor
sti
cmp
shl
hlt
shl
xchg
out
jmp
xchg
hlt
loop
fld
hlt
in
out
jmp
rcl
icebp
fstp
xchg
out
test
nop
xchg
cmc
jecxz
lock
in
leave
loop
mov
enter
sti
call
xor
call
repz
leave
idiv
cmp
div
out
test
testl
iret
stc
sti
cmp
out
into
cmp
out
cmc
iret
repnz
lds
loop
cld
jecxz
out
xchg
icebp
shl
stc
clc
enter
xor
int3
testb
rcr
leave
aam
in
mov
shr
mov
loopne
lds
fldlg2
int
xor
ret
fnstcw
fcompp
fiadds
mov
sti
xchg
out
xchg
xor
cmc
aaa
jecxz
cmp
cmp
cmp
clc
in
into
cmp
jmp
mov
rolb
ds
ret
out
xor
out
clc
cmp
into
shl
hlt
imul
fsubrp
clc
cld
dec
xchg
xchg
rcr
into
shr
ret
shr
cli
ror
fndisi(8087
fucomip
rcl
out
loopne
addb
out
xor
xlat
shll
in
xor
sar
cmp
cmp
icebp
orb
xchg
lret
in
in
xor
shr
in
aaa
int
lock
cmp
repnz
rol
fimull
jmp
out
into
lock
aaa
jmp
in
stc
in
loope
lret
shl
test
loope
into
adcl
xor
xlat
jmp
fxch
xlat
out
int3
ret
rolb
jecxz
icebp
fcmovnu
call
repnz
clc
aaa
neg
ss
fldlg2
xor
fcom
aam
in
xor
int3
push
shrl
xor
clc
in
shl
sar
repz
out
ljmp
shr
xchg
int
leave
ret
ljmp
lret
sti
fistpll
test
sub
sti
lret
into
loop
rol
leave
leave
aaa
shl
testb
repnz
loop
and
fadds
loop
cs
xor
or
xchg
neg
stc
xlat
stc
mov
and
shlb
ss
fstp
div
adc
cmp
fdivrl
jmp
ret
int
call
in
jmp
repnz
xor
stc
shl
aad
lret
in
mov
rorb
sti
rcr
fcmove
repz
in
xor
fiadds
aad
or
enter
xchg
fabs
rcl
jmp
icebp
in
cli
cmp
add
sti
repz
cli
addl
aaa
out
cmp
cmp
fiaddl
into
repz
lock
mov
fmul
out
into
int3
enter
aaa
int
xor
cmp
aas
ss
ds
cmc
xchg
stc
testb
rcr
into
leave
cmp
xor
cmc
xor
sar
icebp
cmp
aas
aam
mov
out
out
jmp
mov
lret
aam
fnstenv
div
cmp
roll
aas
mov
in
loopne
in
std
mov
in
xchg
loop
out
in
out
icebp
enter
ds
icebp
in
test
cli
xchg
out
orl
fisttpll
jmp
fcomp
cmp
div
lret
cmp
rcr
fadd
roll
in
xchg
test
loopne
nop
or
xor
cmp
jmp
inc
cli
test
fdivrp
std
aad
icebp
shr
clc
aad
into
in
aam
ljmp
or
or
add
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
sub
jno
test
cmpsb
add
loope
repz
loop
ret
xchg
add
xor
call
in
enter
fdivr
in
int3
hlt
loop
mov
fsubp
fucom
mov
repnz
out
out
out
cmp
cmc
shr
aas
out
out
std
std
test
testl
ds
in
aam
xor
mul
repz
loop
testl
int
int3
loopne
out
loop
aam
cmp
fdivp
loopne
xchg
cmp
in
jecxz
mov
in
aad
aaa
loope
fcmovu
ss
out
loopne
add
ret
test
test
lock
aad
vcvttpd2dqy
das
call
cld
repnz
cmp
in
fucomi
lret
lret
xchg
iret
int
hlt
fcmove
cmc
out
into
xor
and
cli
mov
addl
in
in
into
cmp
loopne
xlat
aad
loopne
enter
in
mov
shl
lock
jmp
cli
sti
aam
clc
cld
lock
test
addb
fsubr
loope
int3
out
in
int3
fxch
cmc
xor
cld
cs
xlat
lret
cmp
cmp
in
shl
in
loope
int
lds
xor
fcmovne
cmp
ss
lret
in
aad
test
jmp
clc
in
ror
in
loope
out
ljmp
out
cmp
into
std
ljmp
add
int
stc
in
into
cli
in
xor
shll
cmc
hlt
call
loop
out
hlt
test
fdivrp
cld
std
neg
addl
shll
cmp
lock
xor
ret
loop
sti
lret
xor
cmp
cmc
repnz
cmp
aas
fildl
jmp
aam
std
sar
loope
mov
aaa
xor
iret
in
lock
shl
out
repz
aam
in
mov
cli
ror
test
ljmp
out
cmp
stc
int
out
cli
not
out
cli
ftst
xlat
fdivr
out
sti
jmp
xor
std
repz
test
mov
fistpll
mov
decb
loopne
icebp
fdiv
out
lret
cli
ljmp
aas
repz
call
iret
rcll
aad
out
test
in
loop
in
and
mov
in
ss
ss
lret
test
ds
fst
loop
aam
out
call
in
add
iret
cmc
out
int
xor
or
in
adc
mov
in
aad
int3
iret
out
repnz
int
fcmove
int
fdivrl
cld
idiv
in
sti
mov
ljmp
into
lock
into
cmp
loope
sarl
faddl
xlat
xor
shl
rcl
in
xor
aad
sub
aas
shl
add
ret
loop
iret
repz
aaa
ret
out
out
out
fcmovnbe
aad
or
repz
in
loopne
shl
jmp
in
sti
rcl
cli
hlt
sub
fldz
faddl
lret
lea
das
leave
lds
fidivl
stc
cli
std
ret
repnz
in
leave
lret
out
out
xchg
mov
ret
lret
clc
fxch
fsubr
out
out
lock
faddp
enter
in
mov
adcl
cmp
ljmp
sar
fisttpl
rol
shr
shl
loop
fmul
loope
fcmovu
addb
test
cmp
int
call
jmp
clc
clc
test
imul
not
into
div
neg
lret
jmp
out
xchg
call
aad
rol
fxch
repnz
cli
dec
lds
jecxz
jmp
mov
fisttpll
int3
aam
cmp
in
shr
xlat
cmp
f2xm1
in
call
out
nop
cld
loopne
xchg
jmp
sti
lret
shl
test
and
loop
out
fisttpl
loope
vcmpps
aaa
sti
cs
cmp
aad
call
cmp
in
xlat
jmp
leave
call
int3
loope
shl
cli
fsubr
test
sbb
movl
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
mov
in
mov
jg
cmpsb
add
loope
stc
mov
mov
imul
call
sti
not
int
sub
rcr
lret
mov
cli
icebp
addl
les
aad
lock
shl
cli
stc
fimuls
int3
fmul
out
fmul
out
xor
cmc
in
out
xor
cmp
fcomip
sarb
xor
xchg
clc
lea
leave
ret
ret
out
ds
iret
fucom
xchg
ret
call
fiaddl
clc
xor
in
cmp
aad
cld
xchg
jmp
lock
ror
pushl
int
sti
repz
ror
out
idivb
add
aam
rcr
test
mov
call
cmp
clc
in
iret
sar
out
sti
neg
std
xlat
repnz
fiadds
int3
xchg
jmp
int3
fcmovu
cli
in
fdivrs
testl
jmp
test
int3
in
clc
cmp
int
stc
test
test
call
flds
loopne
lock
call
xor
add
jecxz
fimuls
out
aaa
ret
icebp
xor
in
jecxz
rcr
roll
addb
xor
int
ror
aam
lret
xlat
jecxz
xchg
call
stc
lret
mov
xlat
clc
in
in
jmp
in
iret
jmp
cmp
cmp
ror
fimuls
leave
icebp
xchg
std
mov
out
out
cli
repz
cli
aam
call
ror
in
aad
div
in
rolb
jmp
int3
fnstsw
out
fcomi
fldl
cmp
ljmp
mov
repz
in
in
sub
sti
lret
fdiv
ljmp
loope
mov
jmp
int
sub
loopne
repz
cmc
lret
cmp
in
icebp
out
idiv
hlt
mov
out
icebp
loope
in
int3
hlt
xor
loop
ljmp
int
aam
aad
test
jmp
imul
jmp
call
fst
aad
stc
fdiv
in
jmp
xchg
fdiv
icebp
loope
xor
in
jmp
cmp
aad
xchg
fcmovnbe
fsub
in
stc
fiadds
loop
xlat
xor
fcmovbe
neg
xlat
std
in
out
fcomi
out
ret
std
out
jmp
xor
xor
leave
clc
into
int3
aas
aas
sarl
ret
ffreep
fdivr
ret
int3
mov
rol
leave
aad
int
shll
repz
stc
cmp
addb
out
iret
cld
out
lock
shll
jmp
ds
icebp
std
test
cld
mul
ljmp
xchg
loop
fdiv
cmp
not
in
ret
sbb
jmp
cld
call
call
cmc
ret
ss
aad
cli
aam
cmc
cmp
ret
lret
mov
in
fucomp
lret
repz
out
call
repz
stc
into
cmp
out
cmp
out
repz
jecxz
out
out
std
icebp
fiaddl
sub
shr
ret
out
xor
int
loop
test
enter
int
lret
out
in
into
ds
out
fcmovbe
repnz
enter
cmp
aam
xor
and
jecxz
addl
jmp
cmp
fildl
cmc
loopne
cmp
loope
icebp
orl
xor
aam
cmp
fdivrs
in
lret
fsubr
mov
mov
and
stc
repnz
lret
call
clc
fdivr
jmp
loope
rorb
jecxz
shll
call
fdiv
neg
cmp
rcr
loope
ffree
call
shr
in
shl
xor
repnz
repz
lret
test
fxch
jmp
shr
ficoms
cmp
sti
xor
xor
cmp
shl
repnz
rorl
std
cld
leave
xchg
rclb
sub
cmp
push
loop
icebp
mov
enter
clc
rorl
in
xor
cmp
cmp
aam
and
fcmovnb
int3
ljmp
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
ret
add
mov
cmpsb
add
lock
cli
cmp
std
rol
out
cmp
flds
int3
int
loopne
jmp
shlb
icebp
aad
cmp
repnz
aad
hlt
roll
fldl
into
div
sti
imulb
int
cmp
fcomp
fnstsw
aam
add
int
out
lret
lock
sub
xor
lock
shl
loop
fmull
loop
lret
xchg
out
xor
fnsetpm(287
enter
in
xor
rolb
cmc
xlat
sar
fsubr
xchg
lret
int3
les
in
repnz
cmp
rcr
xor
cmc
in
mov
test
adcb
rol
hlt
ror
repnz
cmp
shlb
clc
rolb
fmuls
mov
xor
fld1
out
xlat
call
mul
ret
not
test
fincstp
decb
jmp
mov
lock
lock
lret
xchg
sti
enter
mov
mov
in
shl
lret
lret
call
ss
loope
hlt
fcmovu
std
clc
int
mov
shrb
neg
cs
loope
int
aas
roll
repnz
iret
ffreep
xchg
in
rol
lock
xor
fld
ds
loop
test
call
fcomip
shl
sub
sarb
rol
out
loope
rcr
xor
xchg
loop
jecxz
lret
fisttps
int
hlt
int3
into
int3
out
ds
ds
out
ds
rcl
test
test
in
xchg
fnstsw
into
repz
test
roll
test
ret
addl
loopne
xor
vshufps
cli
ds
idivb
cmc
out
xlat
call
call
icebp
hlt
mov
in
imul
not
out
jmp
out
lock
ror
enter
call
out
into
xor
xor
leave
out
std
loopne
into
into
in
cmp
cli
ffree
test
lret
int
loop
int
in
lret
imul
ror
ror
lret
rcr
rcl
hlt
jecxz
in
xchg
call
rcll
clc
fcmove
jmp
inc
fxtract
div
std
cmp
repz
loop
sti
lret
xchg
out
iret
fstl
lret
in
fistpll
jmp
cmc
sar
stc
std
out
jecxz
ljmp
loop
int3
out
into
hlt
out
xlat
out
rcl
aas
ljmp
clc
rol
mov
dec
mov
sti
cli
fcomp
fnstcw
iret
sar
cmp
in
leave
out
rorb
ljmp
into
cld
into
rcl
loop
aam
aad
mov
enter
out
loope
in
mul
jmp
enter
ret
out
ljmp
fldl
xlat
aaa
sar
repnz
sti
test
loope
out
lock
jecxz
loope
in
out
repnz
loop
hlt
sti
aam
idivb
repz
adc
not
mov
test
jmp
out
out
lret
xor
shll
loope
in
fnstenv
cmp
ret
cmp
fldl2e
mov
addb
xchg
lret
loope
lret
call
addl
xlat
lds
enter
out
das
ljmp
cli
cmp
ljmp
std
push
std
addb
int
in
xor
das
shlb
jmp
out
aam
repnz
jecxz
loopne
bnd
fdivr
cld
in
out
mul
hlt
lock
fdivrs
out
lock
loop
div
jmp
fld
clc
out
fmull
loopne
std
aaa
leave
aad
fistpll
ret
ret
xlat
cli
ffreep
lret
ljmp
adcb
xor
int
push
xor
lret
xlat
and
xchg
leave
testl
aaa
cs
aam
hlt
aam
cmc
idivl
add
loopne
mov
xchg
xchg
xor
out
out
ss
shll
into
loope
aas
aas
rol
std
sti
fcomp
in
fucom
xchg
das
jmp
in
repnz
aas
repz
int
aam
aas
stc
sti
in
cmp
aad
sub
cmp
sub
cld
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
jo
lcall
add
idivl
lock
cmc
sti
ffree
enter
cld
iret
out
loopne
in
hlt
out
in
vshufps
jmp
int3
add
fiadds
fcmovb
lret
fdivr
in
shr
xor
call
fscale
sar
lret
loop
in
xor
loope
mov
incb
hlt
test
iret
int
jmp
idiv
lret
repz
shl
fsubp
loop
leave
out
in
out
in
hlt
icebp
ljmp
icebp
shl
mul
rcl
lock
mov
lret
lret
into
loop
call
xor
jmp
aad
fdivr
loop
loopne
in
jmp
enter
loop
ret
lock
in
enter
lret
hlt
out
rcr
jmp
imul
xchg
into
fcmovnbe
call
icebp
xor
jecxz
lret
aaa
jmp
and
mov
repz
std
in
loopne
mov
and
shlb
loope
in
xor
shll
sti
xorl
neg
lea
rorl
repz
cmp
loopne
shl
in
mov
sti
mov
in
xor
xlat
int
cmc
sub
clc
stc
aas
shl
cmp
xor
sbb
sbb
jecxz
popl
out
ljmp
iret
ss
lock
icebp
lret
xchg
cli
addl
mov
jmp
leave
out
in
sarl
into
in
aas
call
mov
xchg
in
aad
cmc
call
aaa
aam
aas
repz
stc
aas
cld
sbb
loope
jecxz
lock
call
sti
into
ljmp
sti
rcl
movb
enter
fmul
fsubrp
in
fxch
ror
rcr
cld
div
inc
xlat
cli
repnz
aam
iret
test
repz
xchg
shll
icebp
in
cli
cs
sbb
stc
ds
lock
loop
in
loop
xor
ret
aam
aaa
not
std
cmp
addb
cld
cld
iret
std
xchg
jecxz
in
aad
aad
int3
jmp
fnstcw
in
jecxz
mov
fsubr
dec
jmp
in
addb
lret
in
into
into
ljmp
aas
aam
leave
lret
icebp
fsub
out
xchg
out
hlt
les
rcl
icebp
fcomp
fcomi
aas
aam
rorl
orl
clc
aad
stc
cmc
xor
clc
repnz
aam
aas
test
out
cs
xor
cmp
fxch
out
repz
sbb
nop
fdiv
in
test
aam
sub
int
rcr
cmp
cld
fchs
stc
loop
add
cmp
clc
fildl
xor
lret
in
ljmp
aad
sbb
cmp
sub
enter
out
xchg
xchg
iret
mov
in
xor
xor
cmp
hlt
sti
stc
cmpl
lret
in
in
repz
ret
xor
ljmp
sarb
fstp
cld
out
hlt
jmp
shl
aaa
aaa
iret
sti
icebp
test
repnz
leave
jmp
shl
xor
in
sti
rcr
cmp
fildl
ss
enter
sar
out
fucomp
iret
xor
clc
cmc
xor
out
repz
lret
push
fucom
test
mov
mov
leave
jmp
mov
xor
aad
loope
fldl
leave
cli
fprem
icebp
int3
repz
xchg
shl
loopne
jecxz
fucomp
cmp
cmp
repz
in
sti
int3
out
sti
out
aad
shl
fcomi
icebp
stc
cmp
aad
sti
test
shl
shl
ljmp
mov
xlat
iret
aaa
ss
sti
icebp
shl
cmp
mov
cld
in
in
ljmp
lret
xor
cli
cmp
cmp
cmc
shl
add
fiaddl
shrl
clc
jmp
int
cmpl
test
into
cli
rcl
jmp
popl
cmc
test
aam
sub
cmp
cmp
fcmovbe
lret
cmp
into
adc
loope
imul
int3
jmp
cmp
aam
icebp
idiv
int3
in
out
rcr
cmp
xor
sti
rcl
ror
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
mov
xor
xchg
jg
cmpsb
add
clc
in
out
rcr
in
lea
xor
out
fdiv
cmp
std
int
shl
hlt
add
or
jmp
xor
fxam
cmp
stc
fsubr
fcmovu
in
repz
jecxz
ret
loopne
xchg
rclb
out
out
das
lret
test
rcl
leave
rcr
loope
idiv
ljmp
out
aad
fld
xabort
cmp
lock
test
fadd
in
mov
lea
lret
int
clc
shl
cmp
loope
rcr
clc
ret
in
enter
fldl
iret
hlt
xlat
int3
lret
call
cli
clc
loopne
hlt
in
cmp
icebp
fmull
xor
xor
icebp
ljmp
loope
adc
std
out
out
mov
test
out
repnz
hlt
in
xlat
in
fmul
xlat
cld
not
repnz
fpatan
rorl
enter
iret
enter
cmc
lret
push
call
out
clc
shl
addl
in
sub
cmp
fsubr
cmp
loop
out
rolb
lret
mov
leave
in
fdiv
xor
repnz
out
cmp
cmp
adc
stc
jmp
fucomip
in
orb
aas
call
cmp
hlt
sar
lret
rcr
add
sti
out
orb
shr
hlt
stc
stc
cmp
out
cmp
loopne
faddl
sti
in
in
leave
dec
xchg
orb
jmp
xor
stc
cmp
and
mov
call
out
mov
ret
rcl
out
ss
cld
shl
jmp
test
lret
hlt
enter
fsubr
int
fiaddl
rcr
std
ds
iret
fldl
loop
fpatan
lret
cs
cld
cmp
ret
clc
fdecstp
flds
lret
sub
sarl
aam
cmpl
out
mul
testb
mov
cld
cmc
das
shr
std
ror
icebp
fxtract
in
cli
fdivrp
xchg
mov
stc
clc
out
jmp
test
lret
lock
fadd
loope
cmp
out
repnz
test
out
fisttpll
sti
cmp
enter
shl
repnz
sar
in
lret
sbb
fucomi
mov
jmp
jmp
cmp
xor
shl
cld
sbb
fcomip
int3
iret
cli
fcmovnb
xchg
fcoml
xor
in
call
cmp
in
cmp
mov
jecxz
cli
rcr
leave
fisttpll
rcl
xlat
lret
int3
jmp
fcmovne
loope
cli
jmp
loopne
mov
xchg
hlt
cmp
int
lret
cmp
fdiv
repnz
ret
aas
shl
in
idivl
int
ret
fcmovne
mov
in
aam
jmp
aad
xor
fnstcw
sar
out
ffreep
xchg
or
into
mov
sub
test
ss
cld
in
xlat
ret
ds
int
in
call
leave
lret
ret
loop
leave
into
aam
cmp
ret
out
shl
hlt
hlt
test
fisttpll
div
repnz
std
rcl
cmp
jecxz
int
loop
aam
out
orb
div
icebp
xor
lock
fsubr
fsubr
loope
fildl
out
sub
jmp
mov
mov
cmc
sub
ret
xlat
loope
jecxz
sarl
sar
ror
std
jmp
nop
ror
out
in
in
loop
int
cli
in
xor
shl
not
into
ds
leave
in
fadd
int3
sti
mov
ror
call
jecxz
xor
idivl
ret
out
shl
enter
loopne
mov
lock
in
xor
adc
incl
cmp
mov
out
jmp
rol
fnstsw
stc
aas
std
xchg
lock
mov
testl
cmc
repz
into
cli
test
fdivs
test
movb
aam
lret
in
cli
in
lret
lock
in
ret
sti
aad
idiv
imul
jmp
xchg
into
xor
jmp
aad
rcl
fst
leave
pop
push
sub
jl
add
iret
ret
fmulp
imull
icebp
fcmovbe
iret
fcmove
repnz
xchg
ds
jmp
fisttpll
fcomp
xor
sti
fstp
into
in
std
jecxz
aad
loop
rorl
call
ror
loopne
shlb
out
fadd
jmp
adc
testl
icebp
jmp
xchg
lret
loopne
repnz
fstp
cs
incl
fucom
cld
icebp
out
or
loope
fucomi
jmp
aad
int
stc
sar
xchg
jmp
out
mov
vucomisd
out
shlb
in
cli
fstp
cmp
dec
xchg
mov
ret
sti
enter
loop
aam
xor
int3
clc
lret
aaa
repz
aas
repz
aad
aad
test
loop
lock
shl
xlat
xlat
lret
int3
out
hlt
out
ds
idiv
in
incl
loope
lret
ret
into
rcl
out
jmp
cmp
ljmp
rol
repnz
sar
sbb
mov
fcmovbe
enter
rcl
icebp
hlt
iret
into
fldl
or
fdivr
rorl
loope
aam
hlt
loopne
jmp
test
ret
xchg
mov
jmp
iret
in
out
mov
lret
loope
mov
xor
repnz
ljmp
clc
xlat
leave
cld
stc
roll
loop
rcl
cmp
jmp
fmul
addl
out
fldl
call
loop
into
int
cmp
clc
loop
add
mov
call
loop
xchg
lret
cmp
fcomp
hlt
aam
fcomi
shl
jmp
lret
std
loopne
not
out
cmp
lock
cmp
aad
aad
sar
ret
jmp
ret
in
call
cmp
das
int3
in
idiv
in
push
xlat
push
shl
repz
mov
in
enter
repnz
in
out
clc
xor
ftst
repz
adc
hlt
hlt
out
ds
rorl
test
enter
leave
in
aaa
sub
out
jmp
out
neg
std
neg
loop
mov
fimuls
jmp
lock
imul
in
fmulp
cmp
rol
loope
sar
mov
out
loope
xchg
call
das
repz
enter
clc
out
clc
int3
test
or
vpsubq
in
dec
jmp
out
inc
xor
lds
lret
fcmovnu
addb
call
lret
loop
loope
out
ret
aad
in
fscale
jmp
cmp
loopne
les
stc
mov
in
xlat
iret
cmc
aam
int3
int
fdiv
out
ljmp
loopne
sti
lret
or
mov
mov
rcr
xchg
repnz
not
sarl
aas
repz
ds
shl
fldl
flds
faddl
shr
loop
fdiv
cmp
fcmovnbe
rcl
fsub
mov
int
cmc
icebp
leave
shl
jecxz
shr
aam
fdivr
cmp
in
decb
ftst
lret
out
lock
div
jmp
cmp
into
jecxz
sbb
stc
in
nop
ljmp
hlt
sub
out
rcl
loope
push
rcr
xlat
repnz
fcmovne
std
repz
xchg
shl
xor
fstp
clc
rcl
sar
cmp
mul
in
in
lret
test
sub
out
jecxz
in
std
fcomi
lock
cmc
xchg
test
in
out
std
les
inc
shl
leave
cli
sti
in
fchs
cmc
ds
sarl
jecxz
test
jmp
loop
cld
and
in
repz
in
cmp
ljmp
cli
fcomi
loope
div
lret
enter
mov
hlt
stc
enter
int
into
cmp
stc
in
in
ret
xlat
neg
jmp
ljmp
xor
stc
cmp
neg
ret
sar
fiadds
mov
aam
fmul
fmul
cmp
lret
loope
int
out
roll
xchg
enter
out
test
call
call
cmc
stc
lock
cld
fucomi
fld
repnz
movb
jmp
xor
out
enter
movb
jmp
leave
sarl
rcl
int
mov
jmp
adc
jg
cmpsb
add
aaa
cmpb
aam
cld
clc
mov
popl
in
jecxz
xlat
ret
xor
cld
repnz
fst
inc
int
in
fcmovnbe
leave
fsub
xchg
xchg
jmp
in
jmp
aad
ss
aaa
rolb
addb
xchg
mov
cld
out
out
in
loopne
jmp
ss
aam
sti
cld
roll
fcmovb
mov
rorb
cmc
not
sub
xlat
shr
ljmp
cmc
in
aam
loope
cld
lock
sub
jmp
filds
clc
orl
clc
into
sbb
xchg
int3
iret
out
out
jmp
int3
ds
shr
std
aad
shr
into
in
mov
lret
fsubr
fmul
fnclex
aas
sub
test
cld
std
xlat
adc
sar
or
xor
xor
enter
lret
jecxz
hlt
lock
repz
fisttpl
xchg
mov
icebp
jmp
xor
in
fsubrp
rcl
sar
fidivrs
faddl
icebp
clc
fimull
jecxz,pn
int
ss
in
ds
in
mov
fadd
mov
fcomi
mov
jmp
ret
repnz
lock
xlat
in
cmp
loope
hlt
xlat
rorb
loopne
leave
int3
sub
in
ljmp
xor
test
sar
out
stc
xchg
ljmp
jmp
sar
fcmovnu
enter
lock
xchg
test
jmp
std
popl
mov
div
lret
int3
xbegin
in
in
cmp
ds
fiadds
mov
cld
mov
pause
out
out
sub
xor
call
testl
fdivrp
xchg
cli
in
out
xor
loop
idivb
aam
cmp
repz
icebp
xlat
test
roll
fcmovnu
leave
out
fisttpll
in
sub
leave
int
aas
loop
loopne
xlat
xchg
fisttpll
in
loop
repz
div
out
shl
jmp
aad
out
mul
cmc
xor
call
jmp
xchg
out
call
shl
repz
idiv
shl
repz
mov
loope
int3
in
int3
mov
xchg
lock
xor
call
out
shl
clc
cmp
out
xchg
sar
test
cld
sbb
repz
out
sub
iret
repnz
out
xlat
int3
fcmovnb
xchg
clc
fldl2e
and
jecxz
out
mov
ljmp
in
xorb
cmp
lock
fsubr
cld
enter
int3
or
das
xor
repz
aad
lret
shl
out
rcr
into
ret
jmp
sub
std
int3
hlt
sub
icebp
out
xor
lock
hlt
in
xor
test
xchg
testl
xchg
aad
ret
rcl
xor
cli
aaa
sarl
in
sbb
iret
cmp
fcmovbe
fimuls
cli
fsub
subb
lret
shl
lret
cmp
in
cli
cmp
ret
xchg
mul
out
cmp
lret
sarl
ss
cmc
cmp
jecxz,pt
fcmovbe
aad
std
rol
sbb
std
cld
xchg
filds
test
in
aaa
fxam
fnstcw
loope
ffree
jecxz
out
in
leave
out
mov
loope
loope
aaa
cmp
ss
rcr
rcl
clc
jecxz
icebp
clc
cmp
ljmp
cld
out
ds
jmp
lret
aas
sarl
cmp
leave
loopne
enter
int3
mov
out
xor
aaa
icebp
fcomip
aaa
into
cmp
in
aad
sar
mov
int
int3
flds
aad
repz
shl
fxch
fmul
ror
cmc
cld
ss
ds
jecxz
fmulp
cld
in
mov
icebp
aaa
ret
ss
enter
repnz
lock
loopne
adc
jmp
fsubrp
repz
jmp
jmp
std
leave
aam
out
cmp
cmc
hlt
fidivrl
fdiv
jmp
xlat
enter
lock
into
xor
aaa
shlb
idivl
fsub
imul
fcmovu
out
cli
ret
out
les
jecxz
hlt
lret
lret
icebp
in
iret
int3
cmp
hlt
rcr
sbb
ds
call
std
mov
in
jmp
ss
call
cli
test
push
loopne
inc
aam
dec
add
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
cmc
cmp
xchg
nop
out
aad
shr
xor
sub
ss
int
sti
div
cmp
cmp
xchg
int
in
in
das
leave
xor
lret
lret
ds
jecxz
icebp
xchg
xlat
test
push
leave
std
ror
sub
in
aad
loope
lock
cmc
clc
out
repz
mov
in
ss
idivl
leave
aad
rcr
ror
cld
ds
bnd
sti
mov
int
nop
mov
sbb
sti
in
in
in
lock
ss
jecxz
loope
addb
out
mov
fiaddl
aaa
not
xor
sar
fcmovne
cmp
aam
int
cmpb
cli
mov
imul
orb
fsubrl
lock
cli
jmp
leave
fdivrl
loop
fadd
shr
jmp
sti
out
and
aam
xlat
cmc
icebp
fsubr
fidivl
clc
lock
aam
cmp
mov
cld
mov
mul
loop
out
repnz
int3
in
fcmovnbe
std
xor
repz
fldpi
dec
neg
into
out
decb
jmp
test
jmp
jmp
lret
loop
aas
fimull
lret
fld
xor
aaa
cmp
fildl
into
addb
ds
xchg
sub
int3
ss
call
int
mov
stc
xor
enter
call
in
loope
jecxz
enter
call
out
xchg
orb
sub
repz
ret
clc
cmc
fld1
lock
std
iret
out
mov
fcmovnb
cli
fsub
mov
cld
call
in
int
aam
xor
sbb
cmp
addb
int3
loopne
shr
out
xlat
cmp
out
enter
fcmovu
loop
cld
aam
test
fcmovu
ljmp
aad
jmp
icebp
xlat
shl
cmp
roll
cld
mul
loopne
icebp
mov
loop
aam
repz
iret
fxch
int
repz
out
into
fadds
iret
iret
out
sbb
in
jmp
cmc
in
out
in
sti
out
icebp
in
cmp
loope
mov
mov
in
xchg
cmc
rcl
aam
into
idiv
out
imul
lret
cmp
fstp
lret
ljmp
sub
repz
hlt
div
hlt
call
shll
ds
xchg
mov
ret
xchg
std
cli
in
in
xor
out
cmp
aad
cmc
lret
out
in
repz
loopne
hlt
orl
repz
bnd
leave
iret
cld
loop
iret
cmc
out
testl
fdivr
hlt
shll
in
int3
hlt
repnz
into
shlb
dec
fcom
ret
sti
in
xlat
sub
leave
xchg
jmp
enter
sti
sar
std
enter
xlat
sti
icebp
rol
fincstp
loope
stc
iret
lock
xor
lret
fidivrl
lret
fcmovu
aas
test
shr
fsubrp
xchg
xchg
int
jecxz
clc
into
jmp
jmp
icebp
std
in
aam
cmp
icebp
test
shl
ret
out
mov
iret
xor
repz
iret
cli
rcl
fsubrp
iret
in
aam
fucomp
jmp
enter
icebp
out
repnz
idiv
iret
aaa
cmc
and
neg
flds
xchg
xchg
in
out
aaa
idiv
divb
sbb
clc
repnz
incl
movb
jmp
clc
cmp
sarb
ljmp
aam
fisttpll
lret
jmp
shrl
call
aam
lret
cli
fst
loopne
aas
std
cli
test
cli
int
hlt
dec
ljmp
fdivrl
in
cli
int
icebp
clc
xlat
call
mov
test
xchg
enter
in
out
fsubrp
aaa
in
jecxz
cmp
out
loope
sbb
mov
mov
in
xchg
rorl
cli
loop
fcmovne
aam
fnstcw
ret
xchg
out
fmull
out
nop
xchg
out
in
rcl
icebp
std
cmc
enter
clc
cmp
loop
stc
rolb
test
icebp
jmp
aaa
fcmovnu
fcmovu
test
fptan
jecxz
rorl
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
jg
cmpsb
add
rorl
ret
xor
iret
ror
lret
sti
repz
add
xchg
mov
xor
repz
fsubr
shl
shl
into
ss
loopne
fld1
xchg
test
addl
icebp
das
sarb
out
shr
into
lock
cld
fdivrl
call
iret
cld
mov
in
test
in
hlt
out
rcl
hlt
enter
into
rolb
aam
orb
leave
lea
icebp
int
sar
hlt
int
sarb
cmp
fadd
cld
shl
loopne
xchg
lea
cmc
loop
xlat
jmp
stc
cmp
xlat
aam
mov
repnz
mov
xchg
xchg
in
rcl
lret
aas
idivl
clc
cmp
test
ljmp
sub
fcmove
in
imul
out
loope
out
fcomp
fcmovnu
fisttps
jmp
repnz
rcr
xor
ror
into
fcomi
cmc
ds
shr
sti
mov
aam
loop
lret
hlt
shl
icebp
sarl
stc
sbb
loopne
cmp
cld
out
mov
mov
enter
out
ret
aaa
loop
out
idiv
lock
sar
rcl
and
out
std
in
ror
into
xchg
in
in
xlat
sar
repnz
lock
xlat
sarb
ret
ret
neg
loopne
in
orl
das
shr
fprem1
in
cmp
rcr
fst
loop
add
stc
lret
clc
out
aad
jmp
lock
clc
int
ds
sti
cmpb
mov
cmc
out
loop
sti
xchg
xor
lret
xor
cmp
cmp
cmp
test
test
mov
out
jmp
int
xor
aaa
int3
xor
cmp
fucomip
cmp
sti
add
inc
call
xchg
out
into
ret
ror
sar
test
idiv
in
adc
mov
into
orl
ss
call
sti
faddl
sti
test
fucomip
in
xchg
out
sub
not
sub
cmp
icebp
cld
mul
cmc
xor
in
aad
cli
orb
in
nop
das
cs
in
sarl
dec
cmp
loopne
shl
aad
ret
ret
iret
mov
std
icebp
sub
sub
aaa
not
cs
cmp
cli
loopne
loope
out
lret
fucomi
lock
cld
enter
cmp
lock
rcr
cmp
ds
hlt
loop
shl
fdivrp
sar
in
int
cli
iret
mov
cs
f2xm1
in
out
ds
cmp
sti
hlt
repz
ret
leave
xchg
into
jmp
out
aad
in
cmp
shl
xor
cmp
aas
sar
cld
jecxz
rorb
loop
in
repz
out
jmp
in
out
cmp
out
test
aad
sti
cli
adc
les
xor
sti
hlt
leave
fidivrl
loop,pt
adc
repnz
call
and
icebp
int3
ds
clc
cmp
ljmp
jecxz
out
call
iret
cld
mov
out
jmp
sub
out
in
rcl
ljmp
cli
xchg
ret
jmp
int
xchg
test
mov
icebp
loop,pn
leave
aam
in
cld
lock
rcl
cmc
mov
neg
loopne
xchg
sub
enter
cmp
iret
fucomi
xlat
roll
fldlg2
stc
jmp
ficoms
divl
lret
int3
rcl
std
sti
les
mov
jmp
in
loop
ss
loope
ds
aas
vmovq
or
roll
in
shl
cmp
jmp
cli
sub
fcmovb
add
test
xchg
call
shll
icebp
xor
rcl
cmp
shl
repz
in
call
fcmovnb
int
mov
std
out
out
ret
icebp
icebp
aad
aad
int
shl
lock
out
mov
xchg
sti
lret
shl
ret
int3
out
out
hlt
loopne
shl
repz
cmp
fstp
in
mov
xchg
call
rol
int
out
clc
in
in
shl
out
loop
out
aad
cld
aam
mov
into
sub
leave
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
popa
xchg
fwait
cwtl
add
jl
cmp
call
clc
xor
clc
aam
cli
test
cmp
out
fmulp
fucomi
cli
shlb
loope
repz
out
enter
leave
cli
lret
int
xchg
loope
in
enter
jmp
aam
stc
cmp
rcr
loopne
orb
jmp
lret
repnz
not
cmc
repz
ret
neg
mov
in
orl
repnz
sub
loopne
cli
xor
ror
xor
shl
rcr
test
aas
jecxz
fsubp
mov
xor
vpaddusb
ljmp
in
std
lock
jmp
out
xchg
repz
cmc
in
in
repnz
test
add
xchg
fcoms
shr
ret
imul
lret
enter
cmp
ds
call
xchg
loopne
fdiv
iret
or
call
repnz
fcmovne
stc
testl
ds
loop
xchg
fsubrp
faddp
in
int3
ror
cmp
lret
stc
fucomi
clc
and
sti
in
test
leave
test
shl
rclb
xlat
cmp
into
ljmp
fadd
out
fcmovnu
mov
loopne
loope
into
and
subl
stc
clc
clc
cmc
fcomip
iret
int
fdiv
incb
jmp
repnz
call
repnz
in
adc
sarl
xchg
rcl
decb
mov
ret
icebp
cli
int3
jmp
fidivrs
xchg
div
not
clc
jmp
xchg
xchg
mov
shl
lret
in
fcmovnb
lock
vshufps
jmp
in
ret
ss
icebp
ss
cmp
xlat
out
leave
addb
addb
fcom
sub
sbb
iret
stc
fcomp
xor
mov
test
into
loop
cli
lret
cmp
fcmovnbe
shl
icebp
cmp
loop
int
clc
iret
cli
call
lret
fpatan
xor
jmp
shl
rolb
std
movl
aaa
xor
cmp
std
enter
jecxz
cmpb
decb
xchg
add
mov
out
incl
repnz
std
stc
fadd
xchg
int3
loop
test
lret
das
iret
shr
xor
xor
cmp
in
sti
in
icebp
fcmovu
int
mov
in
jmp
mov
das
test
int
lret
cmp
in
cld
jmp
test
test
repnz
in
xor
aaa
ljmp
repnz
icebp
adc
std
mov
adc
sbb
shl
cmp
out
xlat
int
in
int
fildl
jmp
mov
out
nop
fisttpll
ss
xor
call
int3
icebp
loopne
faddl
std
into
std
fcmove
iret
aam
jecxz
lret
enter
cmp
into
rcl
out
out
imul
mov
jmp
in
ljmp
repnz
fsubr
int3
xlat
divb
aam
out
fiadds
or
xchg
and
fdivp
icebp
fnstenv
out
lret
leave
lock
cmp
idivb
roll
call
jmp
ds
xor
stc
xor
aad
out
loope
sar
les
xchg
loope
enter
iret
mul
sub
hlt
call
out
cld
clc
shll
fcmovnu
cld
and
mov
lock
iret
xor
leave
loop
int3
repnz
fsubrp
jmp
test
fucomp
fcmovnbe
cmp
leave
xchg
xchg
cli
xchg
not
leave
out
mul
in
iret
leave
lret
jecxz
or
loop
sar
loope
cli
lret
loopne
in
in
shl
loopne
cli
sar
xor
lock
loop
not
aam
leave
fildl
sbb
xchg
std
xor
sar
out
std
fadds
enter
xchg
repnz
shr
in
lret
aad
repz
test
std
in
leave
jecxz
in
repnz
sub
fdivr
jecxz
jecxz,pt
out
idivb
xchg
ljmp
in
shr
ljmp
aad
cmp
test
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
and
push
lods
mov
jl
add
cmp
ror
test
fldl
xchg
out
in
into
ss
fprem1
hlt
roll
rcl
shl
or
jmp
xchg
rolb
lret
out
ljmp
test
in
loop
in
out
or
hlt
shl
out
aam
cli
xor
std
fidivrl
fsubp
loope
lock
jmp
decb
cs
ret
stc
icebp
int
icebp
call
and
orb
fadds
aaa
out
out
cmp
jmp
into
enter
sar
fadds
jmp
repnz
out
repz
lret
fcmove
aas
fnstsw
in
xor
div
mov
stc
fdivr
enter
mov
aam
shr
cmp
cli
std
enter
out
iret
fiaddl
jmp
ret
out
mul
xchg
mov
fsub
int
cmp
out
loopne
std
in
loopne
sbb
fucom
fxch
mov
incl
jmp
testb
rolb
and
enter
repz
ret
into
lret
xlat
aas
icebp
lret
loopne
cld
xor
fcmovnu
xchg
orb
shr
xor
in
dec
fninit
fdiv
cmp
mov
in
lret
loop
shl
aam
lret
ret
xor
aam
int
cmp
std
xlat
fmul
call
xchg
mov
xchg
ret
xor
fdivr
ljmp
call
mov
test
cld
out
jmp
cli
int
out
cmp
stc
shl
cli
fadds
loop
testb
mov
shr
cli
sub
into
jmp
sar
fsincos
idivb
movl
addb
fcomp
jmp
shr
ret
repnz
enter
jecxz
loopne
std
lock
xor
shl
fsubrp
cmp
cmp
faddp
fcmovu
call
nop
loope
lret
das
int
xor
in
cmp
idivl
ds
div
stc
sti
clc
div
ljmp
in
std
test
mov
in
leave
lock
xor
int
loope
loop
inc
out
enter
call
int
imull
xor
xor
cs
lret
cld
fildl
fcmovb
ret
shr
cld
into
shl
xchg
into
aam
fxch
cmp
xor
stc
out
int
cmp
fsub
orb
lock
out
hlt
out
cmp
cmp
icebp
sar
roll
fcmovne
cmp
jmp
fists
cs
neg
xor
ds
fsubr
loopne
test
jmp
out
stc
lock
out
loop
ljmp
sarl
jmp
aam
cmc
sarb
out
enter
mov
sub
nop
icebp
cmc
xor
int3
ret
fnstcw
xor
jmp
sti
loopne
rcl
fcmovbe
imul
clc
lock
incb
shl
out
aad
rcr
hlt
shl
in
xchg
lds
ret
mov
ljmp
vcvttsd2si
std
aad
cmp
idivl
in
repnz
xor
mov
xchg
xor
sub
into
repnz
xorb
loope
cmp
repz
xlat
cld
jmp
jecxz
loope
rcl
stc
repnz
xor
fcom
dec
inc
stc
sti
fcmovbe
fisttps
jecxz
sti
ror
lret
divl
ss
hlt
out
loopne
xlat
sbb
addl
fildl
enter
out
stc
cmc
jmp
shll
xor
shl
out
fsubr
fmul
int3
cld
mov
rcr
ljmp
cmp
ljmp
ret
mov
lret
loope
cmc
not
leave
out
fnstcw
cmp
or
cmp
std
sar
in
int
leave
fildl
cmc
xor
xor
xor
in
sti
repnz
std
aam
fld
hlt
cli
imul
clc
rcll
sub
call
out
rol
repnz
cmp
cld
mov
jecxz
test
xor
into
cmp
fnstcw
repz
cmc
xor
xchg
lds
jecxz
xlat
shll
out
fdivrp
xlat
repz
loopne
fadds
test
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
fucompp
loope
test
in
out
div
xor
loope
sbb
shl
idiv
test
rolb
xor
out
out
out
aam
ds
in
ftst
cmp
out
xchg
into
jmp
leave
ss
in
ss
jmp
test
ffreep
rolb
jmp
rcr
repz
in
ret
cmp
cld
cmp
in
rcr
rol
test
loop
xchg
cmc
lret
int
ror
loop
xor
repnz
stc
sti
incb
hlt
mov
fcomip
call
sti
cmp
lock
cmp
test
xchg
mov
mov
mov
fcmovnu
enter
in
call
xor
cmp
fdiv
in
adc
incl
into
repz
icebp
shr
repnz
xor
fsin
cmpl
iret
cmp
hlt
loop
loopne
fisttpll
mov
int3
aam
sar
shl
fcmovnu
faddp
testl
cmc
jmp
sar
hlt
shll
cmp
iret
int
fcomp
and
jmp
loop
fstp
in
into
xor
loope
in
lock
cmp
lock
cmp
xlat
loope
fcmovu
sar
out
ret
in
out
jmp
int3
xlat
shl
divb
stc
lret
std
faddl
add
addl
out
in
out
shl
std
roll
enter
jmp
xchg
xchg
out
aaa
loope
in
stc
lret
iret
fidivrl
shl
test
faddl
fistl
call
lock
clc
shl
repnz
cmp
fadd
in
jecxz
cli
clc
ret
lret
mov
in
int3
jmp
cld
fmul
ffree
aam
icebp
lock
jecxz
loop
nop
lret
test
aad
div
cmc
fbstp
fadd
sar
loop
lock
out
int
mov
fisttps
cmp
jmp
in
test
jmp
cld
cmp
loope
loop
enter
enter
aas
hlt
jecxz
addl
call
fsubp
in
or
aad
leave
fldl2t
out
leave
call
cmp
loope
test
ds
loop
xchg
lock
test
sub
out
repnz
repz
xor
aas
fucomp
les
clc
xchg
ror
fdiv
aaa
jmp
xlat
cmp
roll
fsub
rol
jecxz
loop
jecxz
ret
orb
div
lock
rcr
out
neg
cld
std
loope
mov
out
and
fucomip
iret
out
into
call
enter
sar
ret
aas
ret
cld
test
mov
in
mov
xchg
shl
aaa
iret
sarl
cmp
ror
loope
repz
xlat
into
fadd
or
fsubrp
out
jmp
iret
xor
xor
aam
ss
ljmp
bnd
sbb
xchg
repnz
in
call
lret
out
cli
addb
cmp
sti
test
orb
ds
iret
loop
repnz
fsubr
iret
lock
cld
ret
test
loope
ffreep
fcmovne
mov
ljmp
fucomi
out
jecxz
cli
out
f2xm1
ds
cld
mov
mov
in
icebp
in
xor
hlt
iret
sti
int3
xor
aaa
clc
idivb
loopne
repz
stc
out
fstp
jmp
in
out
hlt
ret
in
xor
out
cli
in
in
sarl
xchg
in
out
div
mov
hlt
xlat
loop
xlat
xor
cld
clc
stc
lock
in
in
lds
lret
mov
fmull
call
sar
out
into
std
int
faddl
rcr
mov
jecxz
rcr
in
test
mov
cmp
ror
cmp
icebp
loopne
fcmovnu
out
faddp
test
cld
popl
jecxz
cmp
shl
cmp
fidivrs
fstp
out
sar
ret
and
mov
in
fdivr
lock
xchg
jmp
rcr
enter
clc
roll
jecxz
cld
stc
test
fimull
loop
out
loope
xor
mul
std
call
fcmovnu
in
lock
add
jmp
rol
int
fst
fcmovne
xor
out
mov
jl
clc
into
in
les
xor
ljmp
rcl
fmull
cmc
leave
jmp
xor
fdivr
enter
lret
aad
loop
loop
lret
out
repz
loop
das
loopne
rol
fdivl
clc
hlt
stc
cmp
out
xlat
xchg
shl
loop
xchg
xchg
repz
into
hlt
xor
cld
cmc
idivb
or
ds
cli
aad
aad
mov
stc
loop
cmp
ret
ret
in
into
cmp
cmp
call
icebp
xchg
enter
mov
in
test
lret
ret
div
jmp
out
out
aaa
in
icebp
sar
mov
loope
fstl
test
in
jecxz
in
fcomi
aam
cli
loopne
loope
out
icebp
xchg
leave
jmp
nop
shr
out
xor
clc
sarb
sar
jecxz
ret
ret
rcr
faddl
orb
out
stc
ljmp
in
cmp
cld
xchg
leave
loopne
std
int3
std
enter
mov
xor
shl
sar
aam
lock
ds
in
loopne
cli
mov
int3
enter
loopne
cmp
fdiv
out
ds
adc
ret
jmp
lret
shl
xchg
cmc
out
mov
aad
xor
xor
clc
sar
sbb
fdivrs
xchg
test
fcos
fdivr
jmp
std
subl
xor
lock
clc
div
cli
stc
out
test
ret
rcr
mul
lret
into
xchg
std
mov
out
lock
clc
cld
leave
loopne
loopne
aas
test
ret
into
fmul
loope
mov
stc
shr
repz
lret
iret
ds
aam
out
loop
not
ret
jecxz
mov
orb
loop
jmp
int3
loope
int
cmpl
shr
dec
cld
fcomip
test
call
call
loope
rol
aad
rcr
jecxz
fimuls
into
lock
xlat
repz
xlat
cli
fldz
repnz
into
jmp
sarb
jmp
mul
clc
out
shl
jmp
enter
clc
loopne
repnz
aam
mov
sbb
mov
iret
in
cmp
aad
out
div
lock
shl
ds
cmc
lret
jecxz
in
jecxz
xrelease
shr
hlt
leave
sti
in
lret
cmp
xlat
sti
ret
testb
xchg
shl
cmp
out
in
lret
sarb
in
idiv
ror
cmc
fmuls
loopne
loopne
xor
fdiv
repnz
rol
xlat
mov
xchg
clc
cmp
jmp
ljmp
fcomip
jmp
xor
imul
aad
add
fadd
std
xchg
xchg
in
mov
fsubrl
rcl
cmp
fsubr
aad
aas
cli
rcr
loop
shl
call
jmp
lret
loope
out
in
repnz
out
aam
repz
and
aas
repnz
cli
rolb
xor
int3
imul
enter
cld
loope
loop
faddp
std
stc
test
ljmp
les
in
aaa
xor
xor
clc
cld
cmp
test
mov
fiadds
in
iret
in
ror
out
int
cmp
test
shl
fsub
xlat
fimull
iret
repz
int3
ret
ret
cmp
xor
rcl
out
idivl
test
loopne
sbb
in
loope
mov
cmp
lock
fdiv
sti
ret
loope
hlt
testl
out
jmp
fdivrs
aas
sarb
ljmp
xchg
int3
fmull
xor
int3
fcomip
clc
ffree
fistpll
into
fstpt
clc
in
enter
loope
xchg
loopne
aad
ss
lock
iret
fsub
rol
lock
cli
xor
mov
sub
in
jmp
icebp
jmp
cmp
cmp
aaa
icebp
jecxz
ret
cld
std
sar
lret
mov
loopne
int3
mov
shl
rcl
cmc
shl
cmp
fdivs
cmp
into
loopne
sarb
xchg
ret
cli
clc
or
loopne
mov
sarb
cmc
cld
cmc
dec
xor
rcl
loope
nop
xchg
call
aaa
sub
cmp
hlt
lock
ds
jmp
lret
ret
fstpl
fidivrl
lods
and
jl
add
shl
cmc
sti
xor
ljmp
xchg
hlt
icebp
aam
xor
out
into
cmp
fcmovbe
sbb
in
stc
fdivrp
repnz
xor
clc
cmp
ss
jmp
cmp
fmul
jecxz
hlt
rolb
out
test
leave
enter
in
aaa
cld
cmp
sar
loopne
loopne
out
jecxz
fxch
orl
rol
xor
shl
fidivrl
shl
sti
in
xlat
rol
jmp
jmp
out
mov
call
cmp
stc
out
idiv
repz
jecxz
lock
leave
ret
xchg
xlat
and
mov
cmc
rcl
xlat
xor
xlat
aad
iret
repnz
leave
xor
shl
cli
hlt
in
enter
lock
out
xchg
jmp
lock
aad
in
int3
lock
loope
fdiv
not
in
lret
fisttpl
lret
fnstenv
ret
fstp
jmp
cmp
jmp
shl
jmp
sub
int3
into
popl
xor
divb
repnz
int3
dec
aam
shl
loop
cli
and
out
out
ljmp
aaa
xor
xor
std
out
rcl
rcr
ljmp
aam
repz
aam
hlt
repz
lret
fst
ret
repnz
loope
hlt
cli
mov
xchg
mov
iret
icebp
ss
lret
std
fucomp
clc
fsubrp
rcr
jmp
mov
std
xchg
rclb
fdiv
jmp
cmp
loopne
les
mov
cli
incl
int3
in
fsub
lret
out
aas
sbb
loopne
rcr
call
cli
orb
fcmovnbe
fdiv
loope
icebp
hlt
in
fdecstp
loopne
loop
and
fiaddl
out
shlb
int3
xor
repnz
out
ljmp
cmp
fcmovnb
ds
mov
das
xor
xor
lock
cld
aaa
cli
icebp
faddp
stc
mov
aad
in
jecxz
test
out
aad
stc
lret
lret
aaa
cmp
jmp
and
ds
out
sti
mov
lret
xor
xchg
repz
sti
fyl2x
cmp
rolb
stc
addb
leave
or
into
lret
jmp
aam
clc
into
xor
fdivr
aam
icebp
repnz
sub
aad
jmp
int
call
call
repz
cmp
ret
mov
in
in
loope
loop
xchg
into
out
idivl
cs
pushl
fcmovu
inc
loopne
cmc
enter
neg
fldl2e
lret
mov
hlt
bnd
cld
enter
lock
xchg
loop
adc
fists
in
xor
repz
fucomip
rcl
cmp
int
xor
or
lret
shl
jmp
hlt
ror
rol
xchg
sarl
cld
sub
sbb
aas
out
fldpi
cmp
lret
int
test
ljmp
fdivrp
out
fnstsw
jmp
in
in
cld
jmp
lock
cli
sar
in
aas
test
flds
mov
cs
aam
enter
lock
stc
std
xor
icebp
test
hlt
ret
fisttpll
in
in
xchg
in
loope
fxch
jmp
call
neg
shr
rorb
icebp
int
hlt
xor
cli
aaa
in
fcomp
cmp
in
test
jecxz
fsubp
xchg
out
divl
xlat
enter
aam
out
fmulp
faddp
cld
fsubp
aam
cld
fucomip
mov
fucomp
fcmovne
sar
test
aad
icebp
cli
call
aad
cli
ds
hlt
mov
clc
test
loopne
jecxz
jmp
ds
ss
out
enter
out
int3
into
repnz
std
jmp
enter
xchg
hlt
loop
cli
out
int
cmp
shl
call
fdivp
aam
xor
xor
aad
cmp
shll
cmp
stc
loop
addb
fistl
repz
imul
repnz
hlt
shl
ret
cmp
rol
repnz
leave
fcmovnb
std
jmp
lret
repz
icebp
jmp
int3
cld
iret
out
fldz
loop,pt
fcomi
mov
leave
ret
mov
jmp
aam
fcmovnu
mulb
aam
aam
jg
cmpsb
add
in
mov
out
fdivrs
cmp
xor
ret
clc
loopne
out
mov
or
out
enter
into
and
out
cmc
test
lock
shl
fsin
les
lret
mov
lds
xchg
mov
fyl2x
lret
aad
iret
cli
fpatan
out
cmc
aas
ss
mov
neg
xlat
jmp
in
cli
std
aam
in
imul
cmp
sarb
xlat
shl
repnz
vpaddd
fildl
aad
lock
xor
into
ss
idivb
sti
sar
fxtract
rcl
test
in
fsub
cli
lret
shl
int3
in
ljmp
out
into
fdivrp
cmp
mov
ljmp
in
jmp
shl
jecxz
loop
lock
out
in
hlt
aaa
into
loope
clc
out
ret
loope
mov
lret
das
ljmp
cmp
add
fucomi
int
mov
shl
call
out
fsqrt
lock
cmp
ds
cmp
std
cmc
hlt
repnz
jmp
loop
shr
ror
ds
shlb
cli
hlt
std
cmp
fmul
fcomp
hlt
sti
movb
cli
in
jecxz
xchg
fucom
enter
cmp
std
ss
jmp
repnz
cmp
leave
mov
sti
stc
testl
fldpi
cmp
icebp
cmc
enter
loope
rcr
loopne
in
loope
mov
test
mov
add
cmp
fsubr
divl
sar
rcr
out
jmp
lret
mov
test
out
in
cld
ret
rcr
xor
fidivl
shl
aad
in
loope
fcom
out
jmp
out
lret
mov
leave
divb
int
fcmovne
out
leave
out
in
filds
ffree
fucomp
out
rol
test
jmp
lret
in
fstpt
sti
out
lock
xchg
call
out
mov
iret
int3
nop
lock
repz
loop
fcom
call
cmp
fdivrl
xchg
xlat
jecxz
into
ljmp
sti
aaa
iret
aaa
in
lret
cmp
xlat
addl
fldl
jecxz
xlat
xor
xor
shl
fdiv
fiaddl
mov
mov
fisttpl
xlat
cmc
fdivr
lock
out
cmc
repnz
aas
cmp
aam
cmp
jecxz
out
repz
call
in
lock
cmp
neg
xor
decb
fldl
jmp
cmc
xor
lock
cmp
lret
jecxz
in
fst
test
stc
loopne
in
addb
int3
call
out
clc
enter
sarb
leave
fisttpll
test
call
int
iret
neg
cmp
inc
fcmovnbe
out
test
std
jecxz
xchg
loope
fsub
int
xor
out
cmp
loope
out
out
loopne
mov
hlt
loop
clc
lret
into
ljmp
xor
icebp
out
or
hlt
rcl
test
loopne
fdivr
jecxz
mov
xor
int3
cs
into
adc
testl
leave
mov
fsubp
in
xchg
ret
aam
fiadds
adc
faddl
ljmp
sarl
in
out
in
fdiv
ss
cli
cmp
sbb
incb
fsubp
loop
test
aas
jecxz
loop
cmp
fidivl
call
sar
jecxz
mov
mov
lret
loope
mov
jmp
xlat
loopne
out
cli
fidivl
cmp
in
lret
rolb
cld
int
fcomp
std
into
out
in
fucomp
shlb
xor
xor
cmp
fmulp
rcr
stc
repz
and
repz
jecxz
xchg
repz
call
std
enter
xchg
cmp
mov
call
lret
stc
cli
std
lret
loope
in
lock
fmuls
out
loop
fcmovu
ror
ror
lret
jecxz
iret
fdivp
fcmovnu
lock
rcr
loope
out
in
enter
sub
xor
out
fst
shl
out
aas
adc
hlt
jmp
clc
mov
incb
jmp
lock
xlat
cli
cmp
aam
fiaddl
xchg
jmp
xchg
in
out
test
lds
add
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
in
dec
pop
jle
jg
cmpsb
add
enter
in
shl
cmc
sar
repnz
aas
ret
mov
div
leave
in
loope
loope
out
enter
cmc
lock
repz
cli
in
or
fsub
addb
out
out
sub
out
stc
sarl
cmc
aam
fdivrs
out
rol
sti
int3
out
out
xchg
orl
rcr
fsubr
test
loopne
mul
jecxz
xchg
fisttps
mov
lret
leave
out
clc
cmp
sarl
aas
idiv
shl
fcmovnb
hlt
test
ljmp
out
xchg
in
cs
std
jmp
lret
cmp
cmp
aad
jmp
dec
out
iret
mov
ds
xor
lds
out
lret
repnz
ret
push
sub
fsubp
mov
xor
int
repz
cmp
clc
cld
clc
out
fadd
mov
dec
jmp
loope
loope
jecxz
cmp
fdiv
cmp
roll
cmc
int
lds
xor
out
out
fdivrs
lret
xor
test
stc
loop
cmc
mov
cmc
enter
fmul
xchg
rcl
aad
in
ljmp
cmp
aaa
icebp
loopne
aam
loope
idiv
mov
jecxz
mov
in
in
das
aad
clc
aaa
cmp
shl
out
div
aad
faddl
jecxz
xchg
int3
in
add
xor
xor
cmc
ss
rcl
fdivr
ret
cli
mov
test
test
ret
out
leave
out
loop
sub
out
idiv
lock
repz
dec
xlat
mov
sti
jmp
out
cmp
into
fists
aad
aaa
fdivp
sti
rcl
fiaddl
testb
jmp
out
int3
in
aaa
clc
lret
xor
enter
aas
call
loop
cmp
out
dec
int3
roll
out
lret
loopne
icebp
fdivs
xor
cmp
in
lock
jecxz
fmulp
std
and
mov
lret
jecxz
repz
in
ror
hlt
in
xlat
loope
aas
stc
xor
test
aam
in
out
ret
jecxz
mov
aad
icebp
call
loopne
sti
clc
fadd
rorl
lret
jmp
rcl
shr
call
out
fdivr
aas
std
in
cmp
fisttps
or
shr
xor
stc
loope
in
cld
cli
rcr
repnz
decl
lret
ljmp
shl
dec
hlt
hlt
fsub
repz
sub
loopne
jmp
shll
cs
hlt
lock
xor
sti
cld
icebp
mul
std
loopne
std
fidivrs
xchg
loop
int3
leave
std
lret
out
xor
divl
xlat
aam
fucomi
ljmp
fcomp
in
test
xchg
in
out
xor
cmp
fdiv
icebp
cli
sbb
test
xabort
test
mov
iret
or
jecxz
mov
loop
xor
fucomp
cmp
add
lock
hlt
loope
ret
fscale
addl
jmp
clc
lret
lret
into
int3
addl
fsubp
repz
xchg
int
lret
clc
ljmp
std
cmp
in
test
clc
lock
ret
lret
mov
jecxz
out
clc
ret
enter
into
out
cmc
fdecstp
xlat
addb
orb
xchg
ljmp
fnstenv
cmp
jmp
aad
stc
loop
inc
jecxz
fcmovne
movb
xor
neg
divb
xor
cmp
rcr
shll
fdiv
add
ret
jecxz
enter
mov
das
out
repnz
ss
sti
cmp
call
movb
xor
shl
neg
frndint
hlt
aas
sarl
loopne
loopne
test
cld
ljmp
in
cli
cli
aam
hlt
out
aaa
repnz
out
test
cmc
ret
aam
aam
clc
mov
out
out
fdivp
xor
aaa
aam
fdivrl
iret
cmp
aam
incl
iret
in
aad
sub
divl
xlat
jmp
aas
iret
lret
inc
std
cmp
and
cmp
add
loopne
xchg
cmc
enter
enter
bnd
in
ret
incl
loope
jmp
ds
aad
xlat
hlt
lret
roll
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
fidivl
jg
cmpsb
add
lret
loop
xchg
mov
mov
lret
loopne
xchg
lock
aad
sar
xor
out
cmp
adc
fdivr
ret
loop
xchg
xchg
mov
les
fst
aaa
call
int
aad
and
in
cld
shr
xlat
in
xor
cmc
cmp
clc
hlt
lock
fsincos
mov
sti
call
cld
cld
nop
loop
sub
repnz
out
hlt
icebp
repnz
out
fsubp
aam
loope
xchg
fimull
xchg
sarl
shl
sti
loop
lret
enter
int
int
into
into
fdivr
mov
xchg
in
nop
iret
sub
out
repnz
ror
aam
aam
ret
repz
xlat
in
out
and
or
ret
dec
faddl
sbb
leave
hlt
cld
ret
out
int3
into
mov
in
icebp
jmp
aam
aaa
loopne
cmp
rol
loop
out
cmc
loopne
fmul
out
in
in
enter
loop
jmp
lret
ds
cmp
sar
leave
cmp
in
call
xchg
shlb
lret
stc
lock
xlat
repnz
xchg
call
in
loopne
out
jmp
ror
xor
stc
jmp
repz
int3
addl
dec
cli
loop
xchg
lock
lret
ret
aaa
std
aam
int3
repz
shl
ds
clc
leave
clc
jecxz
enter
mov
jmp
xor
cli
clc
enter
roll
mov
loop
fadds
idiv
loope
cmp
jmp
lret
out
aam
cmp
in
out
test
in
orl
stc
lock
cmp
cmp
jecxz,pt
jmp
sti
mov
clc
orl
cmp
iret
out
cld
icebp
enter
cmc
rol
cld
repnz
dec
imul
xor
in
cs
in
out
xor
leave
repnz
repnz
ret
hlt
mov
into
loop
fimuls
ret
call
fstpt
lock
cmp
out
out
int3
fmul
roll
repnz
repnz
div
aad
stc
aas
aas
repz
roll
jmp
ljmp
fdivs
aam
iret
out
loopne
neg
iret
sarl
mov
call
lret
int3
xchg
int
aad
jmp
fdiv
cmc
stc
cmp
incl
std
orb
out
leave
shl
xor
lock
cmp
in
loop
cmp
mov
into
fstl
fcomi
leave
fcomp
out
adc
test
adc
aas
fldl
cli
mov
iret
fstp
xlat
enter
int3
rcl
hlt
aas
std
and
loope
std
decb
out
ljmp
jmp
xor
fdiv
fucompp
cli
jmp
ret
leave
test
xor
not
sub
rcl
and
rol
fcmovu
mov
mov
xlat
aad
jmp
shr
cmp
cmp
cmc
leave
fcmovne
mov
std
enter
loopne
mov
in
cmc
ror
aas
ds
idiv
repz
mov
iret
mov
shr
out
icebp
cmp
ljmp
rcr
incb
jmp
out
std
roll
stc
jmp
rcl
jmp
clc
cmp
fsubp
fcos
xchg
mov
mov
out
out
ror
fsub
int
cmpl
mul
in
ds
imul
in
in
out
out
fisttpll
cmp
in
fdivrl
cli
cmc
cmp
xchg
std
cli
enter
sub
int3
lds
lret
sar
call
cmp
xchg
faddl
lea
loop
cs
lret
out
out
icebp
sub
addb
jmp
loop
loopne
xor
fsubr
jmp
out
cmp
cmp
loop
jecxz
fadds
repz
xchg
xlat
ret
xor
fcom
cmp
out
fldz
test
out
cli
mov
sti
xchg
out
hlt
jmp
rcl
fmul
shr
sbb
call
push
call
add
int
int
mov
data16
jl
add
in
xor
lret
loop
clc
out
xor
aaa
ljmp
shl
clc
jmp
sub
xor
lret
out
iret
push
aas
xlat
fcmove
into
fyl2xp1
cmp
test
ffree
rorl
fsub
xor
out
int
cli
fldl2e
repz
repz
aas
fdivrl
fcmovu
call
ljmp
jmp
in
out
aad
fcmove
rol
loopne
cld
ds
std
addl
cs
vpmulhuw
cmp
jmp
cmp
idiv
in
fdivr
mov
rol
lock
out
in
loopne
xlat
ljmp
xlat
icebp
ds
ss
ret
in
out
jmp
xor
not
lock
cmp
and
int
out
in
loop
out
out
shlb
sar
repz
clc
into
cmp
hlt
cmp
jmp
aad
loope
call
mov
aam
xor
int
cli
cld
jmp
std
aam
test
shl
test
fisttpll
fmulp
loopne
div
cmp
leave
lock
cmp
stc
rcr
repz
idiv
loope
test
jmp
ror
out
cs
leave
out
aad
idiv
lret
cmp
adc
and
cmp
fcmovnu
fxch
sti
mov
in
in
loop
jecxz
cli
repz
addb
fstp
std
icebp
in
lea
ret
ret
lret
cmp
lret
cmc
ret
loop
mov
xor
icebp
xor
in
iret
aaa
xor
loopne
cmp
sar
sti
in
loop
fimull
sub
ftst
shl
rcl
int3
cmp
test
hlt
sti
roll
fcmovne
iret
mov
shl
ret
mov
cmp
rcr
lds
cmp
incb
dec
aam
in
cmp
out
cmp
icebp
rcl
xchg
mov
frndint
in
in
in
in
in
in
xor
repnz
cmp
aaa
sti
clc
enter
mul
cli
lret
loopne
mov
fsubr
div
fnstcw
into
clc
cmc
rcr
fmull
mov
ljmp
vshufps
xlat
lret
xlat
iret
cld
movl
cld
roll
aam
ror
repnz
roll
loopne
hlt
out
test
fcmovbe
jmp
shr
fmul
ss
lret
sti
in
jmp
fst
cld
xchg
repnz
std
faddl
jecxz
sub
repz
fucom
repnz
into
rcl
in
sti
fidivrl
shl
adc
fcomp
fisttpl
lock
xchg
mul
loope
ljmp
ss
cmc
in
cmc
cld
loopne
mov
xchg
and
rclb
call
std
lret
cmc
into
aad
hlt
cli
loopne
aas
ret
faddp
fmuls
in
lock
int
cmp
repnz
cmc
lock
std
cmp
fsub
test
mov
mul
sar
divb
cld
aaa
fmul
cmp
imul
icebp
fcom
test
mov
in
mov
out
in
ss
shl
ds
cmp
fdivr
repnz
aam
test
xchg
out
lock
shl
aaa
aad
repz
faddp
fcmovu
bnd
loopne
dec
jecxz
lret
loopne
xor
out
xor
testl
mov
in
faddl
into
out
xor
lret
loope
cld
addb
sti
ljmp
xchg
cmc
into
out
repz
repz
fdivr
fcmovne
in
xlat
rolb
call
into
shr
leave
fadd
cli
repz
cmp
repnz
cmp
fxch
jmp
clc
loop
xchg
fsubrp
xchg
not
aam
in
clc
enter
rol
ds
test
mov
flds
mov
sub
jmp
clc
and
ds
mov
loop
cli
test
nop
push
lret
cmp
hlt
into
clc
test
hlt
icebp
in
call
in
into
orl
jmp
iret
rcr
jecxz
aas
les
adc
clc
and
lock
cmp
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
cmc
iret
lock
xor
shr
loope
sti
hlt
fcomi
lea
adc
in
xor
fcompp
leave
lock
cmp
in
lea
xchg
lea
aaa
shlb
into
into
cmp
enter
int3
loopne
filds
aam
in
or
lea
enter
in
in
lock
int
clc
ret
aam
lret
lret
sti
mov
aad
out
in
cli
idiv
ss
repz
out
fucom
clc
xor
hlt
sar
out
xchg
xorb
repz
in
cmp
sti
rcl
cmp
icebp
ret
mov
in
loop
lds
rcr
ss
leave
out
fyl2x
out
repz
or
jmp
lret
lret
out
rorl
sar
sti
lret
cmp
xlat
cmp
int
xchg
int3
ljmp
into
out
adc
repz
mov
clc
in
jecxz
testb
out
jecxz
jmp
sub
les
aam
fcmovnbe
ljmp
mov
faddl
loop
mov
call
lock
or
cmp
icebp
lock
loop
or
fcomp
jmp
aam
rcr
lret
lret
fdivl
fcmovne
sarl
out
ds
rcr
stc
incb
int
lock
leave
loop
loop
repz
into
stc
lret
xor
hlt
mul
shl
ret
cli
lret
icebp
or
roll
shrl
shl
int
aad
sbb
cli
and
or
mov
out
cmc
xor
rcl
rcr
cli
ljmp
repz
mov
shll
loop
iret
jmp
faddl
in
cmp
in
faddp
mov
fsub
fsubrp
xlat
repz
int
out
fcmovnu
cli
fptan
cmp
in
int
cmc
test
ljmp
cmp
leave
stc
call
sbb
ffreep
out
test
fcmovnu
in
or
loope
cmc
xor
lock
lret
fcomi
faddl
mov
fsubp
sti
xchg
mov
stc
lret
div
cmp
jmp
aam
sbb
fcmovnu
ret
clc
jmp
loop
mov
in
ret
ljmp
cld
sti
xor
cli
cmp
repz
test
jmp
iret
jecxz
repz
in
mov
fsub
xor
std
stc
ret
cmp
sar
jmp
mov
iret
fiadds
aaa
ret
lret
jmp
aas
repz
shl
ds
rcr
orb
enter
leave
jmp
xor
neg
cmp
out
cld
sti
clc
call
lret
ficoms
aad
sti
out
sti
jmp
repnz
int3
cmp
ret
loop
xchg
ljmp
lock
icebp
out
hlt
fcmovnu
sti
iret
jmp
in
lret
clc
aas
fcomi
loop
cmp
jmp
repz
cmp
shr
int
jecxz
into
cld
fcmovu
out
rcr
in
stc
stc
loopne
jmp
mov
mov
xlat
iret
cmc
jmp
hlt
repz
loope
cld
in
test
shr
cmc
cmp
in
mov
call
cmp
sar
hlt
shl
stc
loope
test
in
cli
mov
xchg
xchg
jmp
in
sub
stc
sti
ret
cmp
fsubr
iret
aas
addl
mov
ljmp
cli
xchg
repz
in
aam
cld
cli
aad
fdivl
cld
ret
xchg
out
mov
out
mov
loope
shr
stc
sarl
clc
std
cli
out
xor
hlt
jecxz
loopne
aad
rcr
out
mov
mov
xor
xor
aad
std
aaa
cmp
ds
xchg
in
rolb
out
rcr
cmp
fmul
aas
ffreep
clc
cmp
repz
test
in
lret
into
fndisi(8087
loope
cmpl
xor
aam
fnop
leave
out
cmp
sti
cli
out
std
ret
in
repnz
fucomp
xchg
leave
int
mov
out
neg
aad
clc
cmp
clc
int3
inc
ret
repnz
fsubp
ffreep
int
cmc
mov
loop
repnz
fscale
repz
into
shl
repnz
jmp
fiaddl
in
aad
sub
jmp
lods
cli
push
es
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
add
cmpsb
pop
jg
cmpsb
add
rol
cmp
fiadds
cli
loopne
ljmp
in
int3
in
int
aas
ljmp
out
xchg
sti
xor
in
call
aad
xor
xor
cmp
iret
iret
push
iret
roll
sub
les
call
lret
int3
out
call
ret
icebp
and
mov
lret
leave
jmp
iret
imul
into
xor
jecxz
loopne
cld
mov
mov
fsubr
into
sub
loop
stc
cmc
lret
repnz
xlat
addl
test
cmp
aam
stc
into
iret
iret
shl
rcr
lock
repnz
in
cld
ret
fneni(8087
into
out
in
in
hlt
out
call
rcl
into
vcmpsd
xchg
test
hlt
int3
int
aaa
cmp
out
in
cmp
fstp
ljmp
fldl2t
leave
repz
out
ficoms
sub
ss
aad
fdivr
cld
std
fidivrl
mov
aad
mov
sub
ror
ror
lds
in
cmp
add
loopne
not
cli
in
flds
jmp
out
in
aad
ljmp
shl
rol
fld
fdivrp
out
decb
in
divl
out
xor
ror
loope
cmpb
xlat
loopne
loope
orl
mov
in
lock
rcl
out
cmp
loope
fdivp
aad
xchg
test
cmp
hlt
jmp
into
fst
rcr
out
test
test
ret
rcl
out
sub
cmp
lret
int3
int
ret
jmp
fsubrp
cli
mov
repz
out
cld
mul
loope
std
imul
loopne
ffree
cli
in
in
cmp
mov
out
fcomip
lret
shl
xor
ss
repz
sub
repnz
vpaddw
icebp
mov
fsubp
ret
ss
jmp
out
sar
test
fdivr
mov
aad
vpsubw
rcl
out
in
neg
mul
cld
roll
mov
into
std
xchg
cmc
loop
repz
cmp
out
cmp
not
fcomip
shl
cld
loope
fsubrp
lret
loop
fcomip
shl
call
hlt
xor
jmp
loop
iret
out
fcmovu
mov
fcmovnu
mov
in
mov
loope
icebp
int
xor
icebp
cmp
shl
aam
clc
fdivrp
loope
in
xchg
shl
int3
in
lret
hlt
enter
cmp
sti
in
loopne
ret
aad
repz
stc
loopne
xchg
fld1
out
fmul
stc
cld
xlat
rol
out
add
cmp
xchg
int3
hlt
rcl
xor
lret
out
clc
ds
loopne
ds
fstp
rorl
rol
fdivrs
out
repz
fldln2
iret
cld
cmp
xor
loope
decb
enter
cli
enter
sar
xorb
shl
leave
jmp
jmp
hlt
xor
ljmp
iret
xlat
cmp
cmp
std
repnz
fcomi
icebp
std
iret
xchg
lock
sub
repnz
cmp
xor
cld
fucomi
ret
mov
jmp
xor
les
fcmovbe
lret
in
jmp
std
div
sub
out
iret
int
out
out
shl
ret
std
hlt
ss
jecxz
xlat
div
mov
fcomp
sti
repz
loope
ror
jecxz
lock
sbb
jecxz
repz
std
fmul
lret
fsubr
out
out
fldcw
clc
int3
out
idiv
test
out
test
sti
fmuls
call
in
xlat
cmp
cmp
ljmp
iret
out
xor
fucomp
fmul
lea
aam
f2xm1
repnz
std
in
jecxz
icebp
loopne
fcomi
lock
test
mov
shr
or
shr
jmp
in
cmp
aam
fstp
ds
into
loop
sti
fsub
cld
int3
enter
jmp
xchg
ret
cmp
enter
int3
hlt
jmp
fdivrp
out
fxch
aas
loopne
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
pusha
jg
cmpsb
add
movb
call
in
shr
out
in
icebp
ss
loopne
cld
lock
mov
lret
in
out
out
fstl
repnz
jmp
out
ds
sub
repnz
iret
out
xchg
xchg
mov
ret
out
out
out
cmp
shlb
cmp
cmp
cli
cmp
jmp
hlt
fsubr
xchg
leave
int
clc
repnz
in
hlt
dec
loope
clc
loope
or
mov
ss
ret
int3
out
repnz
aad
out
in
fdivr
test
jmp
sub
das
aaa
iret
vshufpd
shl
xlat
ffreep
in
aas
xlat
ret
aam
in
cld
sub
sub
call
shll
jmp
jmp
cmp
mov
ret
loop
ljmp
mov
xor
in
xor
int
out
xlat
cmc
test
repz
cli
ret
mov
shr
iret
rol
cli
les
fdiv
xchg
cmpb
stc
call
enter
lock
enter
xor
leave
cmp
clc
into
and
imul
mov
loopne
fidivs
cmp
out
aad
icebp
int3
hlt
fiaddl
fcmovbe
loop
jmp
enter
xor
shl
iret
xor
cld
add
fcmovnu
repnz
sti
call
shl
ror
aam
loop
in
into
xor
cmpl
cmp
repz
mov
test
xchg
shl
xor
lret
aad
cmp
aam
fcomp
lock
stc
loope
fucomip
loope
out
jecxz
leave
hlt
cmc
clc
iret
clc
jmp
sti
lock
ret
div
fdiv
shr
in
fmuls
enter
out
in
xor
call
icebp
xor
jmp
out
mov
cld
mov
hlt
xor
xor
out
out
cmp
ds
ret
sar
cmp
iret
iret
clc
xchg
add
in
idiv
aad
hlt
ljmp
ds
fdecstp
mov
lret
in
rcr
into
out
xor
lret
stc
xor
cmc
ljmp
repz
stc
fsubp
loopne
int3
mov
cli
repnz
jmp
sub
out
in
cmp
cmp
rcr
jecxz
cmc
loope
jmp
in
into
in
iret
cmp
out
call
icebp
shl
faddp
ret
fdivr
stc
mov
add
call
xor
cmp
fcmovnbe
out
cli
rcl
aaa
stc
shl
out
loope
loopne
vpaddusb
icebp
xchg
in
cs
out
out
std
lret
cmp
jecxz
xlat
in
mov
mov
fildll
int3
in
lret
int3
icebp
fcmovb
cmc
div
jecxz
in
fsub
xchg
in
icebp
sar
repz
in
in
fucomp
xor
repnz
cmp
cmp
lock
lds
lret
in
xor
enter
hlt
frndint
stc
fildl
xchg
xor
cld
in
leave
les
xor
call
iret
cmp
shl
sub
jecxz
jecxz
fneni(8087
std
xchg
out
in
in
ss
shl
cmp
rol
mov
lock
cmc
aad
xor
xor
repz
jecxz
loopne
aas
ret
fadd
mov
call
orl
ss
enter
out
loopne
out
faddl
ljmp
hlt
mov
sub
cmc
fcmovbe
std
aam
cmp
cmp
cmp
fld
icebp
call
ljmp
jmp
cs
out
ret
cmp
ljmp
int3
ret
ffreep
addl
int3
mov
xor
aad
out
fmul
ss
cli
loopne
mov
decl
out
hlt
test
shl
in
out
shl
aam
enter
in
adc
jecxz
adc
jecxz
ret
leave
fdivrp
fmul
repnz
ret
xlat
cmc
fcmovnbe
xor
in
loope
shl
ret
jmp
fcmovne
in
into
test
xchg
loop
jmp
out
sti
ss
aaa
aas
lock
into
repz
stc
loopne
aad
cmc
cmc
loop
fldl
loop
xor
int
in
cli
hlt
aam
fdecstp
sti
int
out
aad
enter
fmulp
stc
fmuls
aam
xor
add
add
aam
rcr
fcmovb
mov
fstpl
jmp
jmp
jl
add
icebp
repnz
xor
cli
cmp
cmp
cmp
les
cld
rcr
ret
in
icebp
cli
cld
test
xor
ret
xor
repnz
int3
cmp
fdivp
loope
fdiv
xchg
shl
fiaddl
out
mov
int
iret
int3
hlt
int
hlt
fcmovne
dec
xor
cmp
shl
std
inc
xchg
ljmp
loop
xchg
loop
int3
hlt
rcr
loop
cli
fcmove
in
aas
or
repnz
aam
loopne
mov
loop
call
call
cmc
fnstenv
jmp
fadds
lret
hlt
hlt
vpmacssdql
lret
jmp
fsubrp
lret
into
rcl
rol
loopne
in
out
leave
loope
mov
cli
out
mov
lret
into
lds
cmp
xlat
aam
cmp
cmc
std
int
cli
out
fimuls
aaa
out
ror
aad
cmp
clc
fcom
loopne
iret
loope
aad
loopne
jecxz
in
fsin
loopne
in
jmp
in
cmp
repz
rcr
stc
mov
enter
test
leave
orb
xor
ss
fdivr
out
rol
hlt
filds
fcoms
call
rcr
lock
fxch
aas
shr
out
clc
sti
shl
lret
mov
lret
out
nop
cld
push
xlat
xor
cmc
fucomip
fidivrs
cmp
repz
aam
ret
addb
in
std
cld
and
shrl
xlat
clc
cmp
out
clc
rol
sbb
or
leave
call
in
fdivp
cs
ret
lret
xor
in
sub
loope
sar
mov
hlt
std
test
jecxz
fstl
jecxz
out
xor
fxch
in
ret
aas
lock
mov
lret
testl
in
int
sti
fcmovu
rcr
xor
out
fcomp
cmc
fmull
shr
ror
xchg
aam
in
in
icebp
stc
xor
icebp
out
aam
xor
test
ffree
ljmp
in
out
fmul
in
lret
hlt
call
rcl
f2xm1
sarb
fcmovu
mov
cld
xchg
xchg
shl
cs
neg
cmp
repz
jmp
mov
fldl
ror
in
jmp
push
stc
call
loopne
out
call
mov
std
mov
clc
out
aad
shll
std
loopne
ffree
sbb
xchg
xlat
jmp
fcom
or
filds
sub
out
cmc
shl
cld
and
movl
cli
xor
loop
clc
enter
fucomi
loope
loope
out
repz
fucomp
enter
nop
inc
fxch
out
ljmp
int
loope
cli
call
mov
add
xor
fcom
fistpll
clc
cmp
repz
aam
pop
icebp
fiadds
in
aad
lret
loope
aad
xlat
into
fcmovbe
ret
xor
fcom
int3
fmulp
or
jmp
test
int
aam
sar
clc
clc
int3
fucomp
icebp
adc
xor
fimull
test
xor
ss
xor
cld
xor
test
ret
addb
fst
out
in
xor
ljmp
bnd
fxch
ds
rol
fdivrl
cmp
loop
out
ret
aaa
hlt
iret
aaa
icebp
cmp
cmpl
ds
leave
mov
mov
hlt
lock
cmp
sar
shl
std
addl
mov
ror
icebp
fsincos
cmc
fistpll
int
loop
rcr
fadd
loope
ljmp
jmp
sar
shl
out
aaa
lret
jmp
aas
shl
ftst
fsubp
aam
fdiv
int
xor
xor
loop
ret
rcr
rcl
shl
repnz
cmc
lea
jmp
xlat
repnz
leave
cmp
shl
loope
ret
fincstp
fildl
iret
iret
xchg
mov
add
in
stc
xor
repnz
jmp
fcomi
ljmp
ret
in
enter
or
xchg
xchg
loopne
loopne
jmp
sti
iret
test
test
fmul
dec
in
out
mov
ror
out
jmp
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
movsl
push
imul
add
cmp
cmp
loop
stc
out
add
mov
mov
cmc
jmp
enter
repz
stc
sar
repz
and
add
lds
out
cmp
into
cmc
aad
fcmovbe
repz
sti
push
cmc
hlt
xlat
mov
call
repnz
out
loop
icebp
fcmove
xlat
aad
iret
jmp
lock
cld
dec
loope
cmp
loopne
out
iret
mov
jmp
cmp
aad
ds
aas
ss
div
ljmp
mov
or
ret
hlt
out
rcl
xlat
repnz
sar
aas
faddp
repz
div
mov
rcl
in
xor
shr
ror
clc
cmp
shl
sar
cli
test
std
les
repz
jmp
idivl
jmp
iret
shl
rcl
stc
call
in
sti
test
adc
out
das
jmp
aam
fcmovnbe
rcr
in
shr
cmc
ffree
mov
lret
out
stc
shr
ror
ret
ror
fdivs
in
jmp
fdivrs
flds
fisttpll
in
lret
ret
ret
repnz
cld
fnstsw
out
adc
clc
aam
test
std
in
call
int
lock
iret
jmp
ror
test
rcr
jmp
fld
int
mov
mov
int
lret
rcr
fcomi
idivb
xor
test
ret
sub
icebp
in
leave
into
fldl
loop
icebp
into
cld
sar
fldl
loope
test
out
mov
loop
icebp
out
jmp
cmp
hlt
loope
aaa
xor
loope
rcl
fsubr
int3
loopne
iret
repnz
xor
int
xor
clc
repz
out
cmp
test
out
lret
rol
into
in
leave
shr
out
xor
call
int3
aam
test
add
cli
and
sti
repnz
ret
aam
out
icebp
out
ljmp
xlat
lock
cli
ljmp
std
int
xchg
out
out
out
in
iret
shr
xor
int3
incb
jecxz
fldl2t
in
sti
out
call
shlb
out
jmp
out
aam
cmpb
std
fst
shl
ret
sbb
fildl
in
clc
ret
out
icebp
xlat
aam
clc
ffreep
clc
xor
fimull
fcmove
stc
leave
int3
xchg
mov
hlt
ds
xlat
ret
ss
cmp
into
int3
fcom
jecxz
cmp
fldpi
mov
cli
int3
nop
dec
cli
in
ror
sub
cmp
int
aam
test
fstp
std
fdivrs
out
loope
ret
loop
aas
aaa
jmp
cld
fcomip
lock
flds
jmp
test
int
loopne
shl
divl
xor
out
int
sbb
flds
fsubp
mov
sbb
xor
jmp
call
idivb
fst
test
aam
fcomip
fisttpl
and
jmp
lret
hlt
rcr
cld
test
ffree
fildl
call
movb
lock
icebp
ret
repz
aam
roll
jecxz
stc
lret
jmp
out
fiaddl
int
std
int3
shl
lret
ljmp
out
cld
ret
jmp
repnz
test
repz
aam
repnz
aas
into
rolb
aam
sti
mov
out
cmc
ljmp
icebp
lret
ss
clc
lret
cmc
or
in
flds
in
jmp
fucomip
aad
icebp
jecxz
icebp
stc
std
fnsave
xor
hlt
clc
jmp
orb
bnd
ljmp
test
rcl
cmpb
in
loope
fucomip
and
mov
xor
cld
aam
cli
out
loope
shl
call
mov
stc
nop
in
orb
repz
cmp
cmp
clc
vpsrlq
ret
addl
in
lds
aad
hlt
repz
mul
rol
shl
fldln2
sbb
cli
enter
into
shl
xor
lock
repz
hlt
hlt
icebp
ret
aam
out
in
in
fdivp
xor
in
in
into
cmp
aas
int
in
aam
lock
in
add
jmp
int
ret
fcmovu
add
dec
pop
mov
jg
cmpsb
add
sar
lret
jmp
addb
into
int
into
mov
faddl
and
icebp
lock
xchg
int
out
mov
loopne
leave
iret
into
ljmp
lock
icebp
inc
fildl
jecxz
lret
lret
into
lock
shl
das
fsqrt
enter
jecxz
loopne
hlt
fildl
in
mov
in
in
xchg
out
into
cmp
aad
cmp
sti
fcmovne
lock
xchg
clc
repnz
enter
out
jmp
fdecstp
std
loope
movb
int
jmp
mov
loop
repnz
shl
sti
iret
stc
out
cmc
lret
mov
xchg
fucom
out
enter
fst
out
aaa
jmp
lret
repnz
lret
ror
repnz
ds
or
add
cld
into
xchg
ror
lock
out
enter
jecxz
and
cmc
cmc
cli
out
out
nop
xchg
call
shl
ror
lret
stc
aam
int3
aam
cmp
aam
cli
clc
std
cld
ret
in
xor
int3
jmp
ss
xlat
cmp
icebp
ret
sti
stc
aam
aas
in
in
fmul
mov
div
into
lret
cmp
out
jecxz
stc
leave
mov
fcomi
out
fcoml
fdivrs
cmp
repnz
ds
hlt
test
incl
cmp
loope
call
xor
xor
cmp
fcmovb
sti
call
repnz
jmp
out
clc
mov
mov
loope
loopne
cmp
out
out
ror
aad
loope
rcl
ret
std
and
int3
xchg
test
leave
shl
int3
stc
aas
rcr
repz
addl
movl
sar
int
stc
rcr
iret
hlt
movb
int
out
mov
xor
sarb
idiv
ljmp
out
loope
jmp
in
test
loopne
out
das
out
shr
xor
sti
cmp
cmp
test
bnd
cmc
ret
jecxz
clc
stc
lret
out
das
leave
ss
xlat
jmp
roll
cld
loop
mov
int3
test
mov
incl
in
jmp
stc
jmp
fdivrl
cld
faddp
sar
ret
fstp
xor
ror
xor
out
into
lret
sar
into
fcmovnu
aad
test
ljmp
dec
mov
shrb
call
in
ds
addl
sbb
loop
test
fcomip
rol
out
hlt
stc
out
cmp
icebp
std
and
out
stc
stc
in
les
addl
sub
cmp
div
ret
out
ret
idiv
enter
mov
enter
fcmovnbe
iret
into
repz
cmp
add
loop
clc
add
fisttps
repz
rcr
std
lret
out
in
lret
xor
aad
call
loopne
lret
ret
int
cmc
neg
shlb
fcmovu
int3
sti
cmpb
fcmovu
enter
loope
out
out
int3
aam
aam
cmp
cmc
ret
rolb
cli
in
enter
jmp
jmp
ljmp
cmp
ss
adc
adc
sbb
mov
mov
dec
sbb
repz
ljmp
frndint
ret
cmp
mov
addl
nop
mov
xchg
out
ret
jecxz
int3
cmp
out
repnz
cmp
test
div
loope
jmp
into
xchg
in
loopne
call
out
cmp
shr
repnz
sarl
ret
xor
loopne
mov
out
ret
cmc
int3
xlat
in
into
jmp
lret
out
rol
fldl
ljmp
out
inc
icebp
loop
xor
jmp
lret
fsubr
repnz
sar
shl
loop
cmp
ljmp
in
int3
repz
mov
in
in
hlt
roll
into
call
hlt
fdiv
fcmovne
rclb
loopne
int3
cmc
repz
push
out
xlat
xchg
lret
lret
fsub
lret
or
lret
cmc
out
leave
rcr
icebp
shr
fisttpll
ljmp
adc
sar
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
xchg
pop
dec
cmc
js
jg
cmpsb
add
int3
std
sub
clc
xlat
cmp
in
repnz
lret
clc
in
jmp
neg
jmp
aad
repnz
rcl
xlat
cmp
out
cli
cmp
iret
shl
repz
cmp
in
imul
iret
xchg
loopne
xchg
jmp
int3
icebp
xlat
in
in
cmc
fidivl
shl
cld
int
test
loope
cmp
test
fimull
xor
cs
not
fcmovu
fsubr
icebp
ljmp
cli
mov
out
out
jmp
loope
out
xor
repnz
repz
shlb
fdivp
fcomp
repz
adc
in
mov
fucompp
mov
shl
xor
in
repz
lock
stc
cmp
aad
fstp
mov
sbb
xchg
xchg
rcl
xor
xor
int3
xor
fucomip
loope
fdiv
cli
cli
jmp
lret
repz
xor
jecxz
aad
out
in
fldl2t
test
aaa
cld
fadd
cmp
hlt
cld
in
int
nop
xor
xlat
ss
loop
aam
std
xor
loope
loope
cmc
loopne
repz
orl
int
cmp
xor
aas
cmp
ret
inc
fildl
hlt
lret
stc
and
shl
int3
xor
jmp
fistpll
cmc
into
out
cmp
clc
les
out
in
fldz
lret
into
cmp
std
aad
shl
loop
sti
clc
std
jmp
icebp
sub
out
leave
test
cmp
fneni(8087
hlt
roll
xchg
fsubr
xor
mov
xor
in
cmp
cli
call
repz
xor
test
repnz
enter
loop
xchg
ret
jmp
aas
out
cmp
ret
filds
loop
iret
dec
fiaddl
xor
ss
fistpll
clc
loopne,pt
fsub
incb
hlt
jmp
ror
fimull
lds
in
cmp
loope
into
xchg
lock
leave
fcmovnb
out
fmul
in
jmp
aaa
fstp
lret
xor
int
cmpl
fld
xchg
into
nop
cli
ljmp
loop
xor
call
in
aad
repnz
aam
test
addb
icebp
div
ss
ror
icebp
fcmovu
lret
loop
repnz
in
cld
jecxz
jmp
addb
not
shll
std
repnz
cmp
jmp
rcr
call
fcomip
call
xor
iret
cmp
hlt
xlat
fcmove
lock
fucom
repnz
mov
leave
in
call
xor
fdiv
cmp
jmp
repz
out
fadd
not
jmp
rcr
testl
test
sti
int3
call
sar
jmp
cmp
shl
xor
mov
xchg
jmp
in
ljmp
cli
shl
add
sti
mov
leave
fcomp
int3
int
loope
cld
mov
loope
icebp
shl
mov
repz
ffree
aad
fadds
xchg
rcl
test
in
cli
icebp
fucomp
aad
out
cmc
loope
cmp
hlt
clc
in
lret
out
in
out
call
ss
cli
aad
clc
in
aam
loop
std
enter
xchg
shl
cmc
xchg
fsubrp
jecxz
cmc
jmp
out
xor
sti
addl
xlat
mov
jmp
loopne
mov
lret
fmul
in
in
dec
into
cli
cmp
fiadds
roll
jmp
xchg
fdivp
cs
ss
int
sti
cmp
aad
iret
ret
out
test
ret
enter
xchg
ljmp
aaa
into
cmp
sar
rorl
fsub
dec
out
lret
cs
cmp
into
aas
aas
cmp
iret
clc
aad
in
fiadds
nop
xchg
into
in
ss
cmp
cmp
sbb
aad
int
lret
mov
out
in
xor
les
iret
div
aam
lock
sar
out
test
fsubp
mov
mov
les
jmp
fcmovu
jmp
in
loopne
and
icebp
lds
out
fmull
into
fildll
hlt
in
fnstenv
shr
div
cmp
aad
int
xlat
xor
sar
mov
movl
jmp
push
mov
lock
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
push
push
lret
jns
jl
add
iret
icebp
xor
rol
cmc
ftst
cmc
mov
test
repz
repz
xor
repnz
out
in
cmp
aad
lret
aad
test
test
out
shl
jmp
jmp
repnz
out
cmp
clc
and
sti
mov
call
cld
xchg
lds
das
jmp
cld
fptan
jmp
loope
jecxz
out
out
rcl
lret
aad
out
jmp
aas
cli
ret
out
hlt
out
out
xlat
stc
out
lret
out
fimuls
aam
leave
cmp
cld
into
xor
repnz
aad
mov
jecxz
fscale
nop
in
ror
nop
ds
aad
test
sar
icebp
neg
into
shl
addb
mov
loopne
loopne
int
mul
in
fcmovu
aaa
enter
aam
out
in
addb
cld
fabs
mov
lret
stc
ror
repnz
call
aam
out
test
mov
out
cmc
xor
out
xor
cmp
cmp
fnstsw
cmc
xlat
cmp
fdivp
jmp
in
std
icebp
lock
shr
cld
xor
out
hlt
ss
cli
sti
test
testl
test
xor
xlat
enter
lret
push
lock
aaa
out
testl
icebp
fcmovu
lock
aaa
aad
fidivrl
hlt
stc
cmc
into
cld
ret
in
lds
call
into
loop
ret
lock
out
iret
iret
shl
cmc
ds
hlt
jecxz
mov
cmc
in
fdiv
std
test
lret
sti
fucomi
cmp
or
ret
std
add
test
lret
in
aas
rol
repz
xor
aas
ljmp
neg
test
out
in
cli
iret
fmulp
xor
stc
fsub
out
rcr
leave
fdiv
cmc
fcmovbe
fprem
cmp
shr
lret
out
sub
sub
shr
xor
leave
cmp
lret
cmp
rcr
jmp
ror
loope
in
cli
fsub
xchg
aaa
jmp
int3
repnz
out
in
fmulp
repz
fyl2xp1
repnz
out
in
mov
mov
int3
stc
int3
fucomi
leave
sarb
stc
std
loope
fildl
out
enter
loopne
iret
jecxz
iret
ror
jmp
in
ljmp
add
aad
cmp
hlt
icebp
out
nop
mov
xor
std
fcmovnbe
sti
push
in
icebp
cmp
cmpb
ds
in
ret
fsubr
lret
out
lock
sub
xlat
int
out
fprem1
lret
shl
test
mov
sti
std
movl
stc
stc
int3
int3
clc
icebp
cli
lret
into
repz
sbb
enter
mov
fimull
xchg
jecxz
clc
jmp
bnd
in
sti
fyl2xp1
in
repz
in
cmp
call
out
out
iret
clc
aad
fld
in
fcmovnu
xor
fucomp
rorb
int
ret
loopne
ds
xor
enter
mov
xlat
clc
idiv
sti
mov
cli
into
rorl
out
leave
leave
xlat
in
cmp
fprem
in
ret
aam
dec
ret
int
fsub
loop
out
out
ds
iret
int3
into
int
xor
cld
cmp
icebp
out
jmp
out
vpsrlw
call
out
vpmulhuw
cmp
cmp
cmp
into
in
ret
mov
in
out
jecxz
faddl
aaa
cmc
lret
call
loopne
jmp
int3
mov
leave
lret
xor
out
fldz
cmp
idiv
cmp
icebp
repz
aam
std
neg
addl
in
das
in
in
aam
aad
call
cmp
flds
fadd
rorl
in
in
ret
jmp
divb
shl
shl
mov
out
cld
into
orl
ret
in
fnstenv
sarl
sub
ret
ret
call
call
aad
iret
in
leave
das
cs
repz
out
rcr
mov
out
sub
sub
ljmp
icebp
out
aas
out
aas
cmp
in
repz
fmul
decl
jmp
shll
stc
ss
cmp
icebp
shl
repnz
cmp
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
lahf
sub
int3
jl
jl
add
out
sti
fmul
call
lret
xor
xor
icebp
xor
clc
xor
out
shl
rcr
stc
rol
ljmp
loopne
into
lret
repz
aad
enter
div
ss
sub
loope
mov
leave
jecxz
icebp
repnz
ljmp
cmp
iret
cmp
shl
aam
hlt
idiv
adc
rcr
repz
rcl
out
shl
int3
enter
into
ds
lret
shl
cli
test
rcr
std
mov
out
call
ret
div
lret
shl
fldl
jmp
jecxz
test
out
fmull
xor
hlt
in
cmp
cmp
cmp
repz
aas
mov
leave
in
ljmp
icebp
xchg
aam
loopne
int3
out
stc
shl
aad
cld
cmc
int3
rol
aam
clc
les
ror
mov
aad
fdecstp
aam
fcomi
cmc
loopne
testl
xlat
call
cli
lret
and
jmp
clc
fpatan
aas
icebp
lret
call
ds
ljmp
cld
repnz
in
sub
enter
iret
fnstcw
fcmovnbe
aas
jmp
lds
test
std
jecxz
nop
xchg
xchg
int3
fldcw
fcom
sub
shl
fucomi
aam
div
idiv
in
jecxz
fiaddl
jmp
enter
stc
out
sarl
int
aam
ds
hlt
enter
cld
xchg
xchg
cli
iret
out
lock
cli
ror
sar
jmp
repnz
les
jecxz
out
addb
jmp
cmp
ds
sbb
ds
neg
fisttps
std
xchg
not
into
ljmp
jmp
lret
sub
cmp
clc
loopne
in
out
jecxz
xchg
out
jmp
icebp
repz
fmul
iret
test
into
out
mov
loope
fsub
xchg
sub
aam
out
test
jmp
rcr
fldl
test
fcmovne
mov
lock
ret
repnz
aaa
cmp
sar
repnz
repnz
or
enter
rcl
enter
fxam
out
shl
ss
out
into
into
sbb
jmp
mul
clc
std
loop
out
std
ds
iret
ret
fmulp
in
cmp
std
cmpb
ret
sbb
in
fucomi
call
test
jmp
loop
ror
cli
enter
std
frstpm(287
loopne
mov
int
xlat
stc
enter
or
rcl
aam
xlat
cmp
lret
aad
hlt
rcl
xlat
fldl
cli
or
in
repnz
in
xlat
hlt
in
ror
repnz
cmp
flds
fldl
xor
ljmp
stc
cmp
ljmp
hlt
cli
or
in
fimull
ret
fmul
lock
fdivr
int3
in
cmp
aam
in
in
call
test
xor
sar
cmp
cld
int
sti
out
iret
adc
std
cmc
test
add
int
out
int3
leave
imul
aad
aad
test
rolb
lds
ljmp
iret
stc
cmc
cmp
repz
cmc
test
jmp
test
mov
in
icebp
repz
lock
sbb
faddp
jmp
jecxz
mov
cli
mov
into
xchg
aad
loop,pn
xor
stc
fdivr
loopne
fidivrs
add
ret
iret
nop
mov
ljmp
lret
cld
ds
hlt
in
add
jmp
stc
out
sub
loope
stc
xor
xor
repnz
cmp
aad
cmp
enter
in
fsub
fcmove
repz
in
iret
not
in
not
jmp
std
testl
hlt
xlat
test
loopne
decl
hlt
ljmp
fsub
lret
icebp
hlt
in
rol
loopne
fadd
out
ftst
mov
lock
enter
les
leave
clc
enter
cld
ret
adc
out
mov
out
xchg
loope
in
out
in
cld
jmp
leave
neg
jecxz
stc
cli
cmp
mov
repnz
jecxz
xchg
out
lock
hlt
aam
xor
clc
aad
fdivrl
iret
test
sarb
repnz
cld
ljmp
in
loope
jmp
in
jmp
fdivrp
shr
xchg
hlt
ret
in
mov
in
clc
out
call
in
fldpi
aaa
fdivs
aam
hlt
aam
rcl
fucomip
mov
xchg
cld
lret
mov
icebp
xor
xor
xlat
sbb
xchg
jb
add
add
add
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rcrb
popf
add
add
jge
jl
cld
push
fcmove
mov
lret
stc
out
int
mov
loop
xor
out
fucomip
aas
lret
cli
out
jmp
in
cli
mov
mov
ret
int3
loop
lret
icebp
ss
sar
test
loopne
sti
hlt
mov
lret
out
in
xchg
xrelease
cld
fsubr
hlt
jecxz
xor
idiv
stc
fstp
in
call
repz
test
repnz
in
out
repz
rcl
jmp
out
jecxz
ret
jmp
jmp
out
ljmp
fmul
fidivrl
test
fldl
cmp
test
repz
rcr
lock
rcr
into
aas
cld
clc
out
incb
in
enter
shr
aam
repz
jmp
ljmp
inc
and
loopne
in
lds
out
sar
fdivr
repnz
repz
ds
sti
out
fsub
rol
mov
ss
in
fdivl
aam
cmp
div
fld
fdivrl
in
incb
ficoms
out
lret
cld
out
idivb
div
aad
xor
in
sti
mov
aad
aaa
out
int
int3
fdivr
lock
hlt
faddl
cmp
sbb
iret
rcr
repz
leave
int
das
leave
jmp
neg
loope
in
cmc
fcmovnu
call
test
in
loop
cmc
jmp
ss
repnz
cli
shl
shr
cmp
cmp
test
fcmovnu
in
loopne
xchg
sar
xchg
in
shr
xor
in
enter
lock
clc
int
addb
mov
in
iret
test
xor
out
xlat
idiv
aam
cli
out
incb
mov
xor
leave
std
cmp
ljmp
filds
cmp
xchg
aad
enter
cli
das
ds
out
sbb
filds
stc
decb
xor
fcmovnb
cmc
out
xor
enter
int
clc
shr
test
ljmp
repz
into
out
out
jmp
icebp
cmp
cmc
sti
xlat
filds
xchg
aaa
imul
xlat
loop
clc
repnz
call
jecxz
repz
adc
int3
in
loop
mov
int
rcl
fdivr
cmp
cmp
out
in
aad
jmp
std
out
mov
enter
mov
lret
out
out
cmp
iret
cli
shr
ljmp
fdivp
ret
call
ljmp
int3
iret
cmp
faddl
repz
aam
std
cld
loopne
pause
lock
rcl
loopne
in
fcomip
fprem1
cmc
std
mov
aam
fcmovne
lock
aaa
icebp
xor
lret
aad
loop
rcr
jmp
xchg
test
in
xor
ret
out
jmp
jmp
cli
std
testl
out
enter
xor
iret
shlb
jecxz
out
fcom
rcr
sbb
lret
leave
fsubr
into
aad
shr
iret
cmc
ret
rcr
xor
aas
out
shl
lock
jmp
iret
out
xor
cmp
clc
aad
ljmp
xor
sub
ret
mov
int3
ror
cmp
cmp
aam
loop
in
shl
jmp
leave
xlat
sti
jmp
loopne
aam
cmp
fadds
lret
xchg
jecxz
out
out
orb
not
aam
ss
aad
loop
sar
aad
jmp
fstp
jmp
mov
std
mov
xor
sarl
xor
fnstsw
test
cmp
mov
jmp
adc
test
xor
cld
cmpl
lock
call
loopne
frndint
loope
jecxz
int
loop
xor
fcmovne
int
cmp
icebp
mov
enter
cli
adc
fdivp
aaa
lock
shr
xor
enter
sti
mov
ret
movl
ljmp
out
lock
loopne
cmp
rcr
rcl
bnd
jecxz
out
cmc
sub
out
ljmp
aas
out
clc
test
cli
fdivrp
loop
int3
mov
out
lret
repz
rcr
cli
shr
repz
aas
xor
sar
fcom
in
xchg
loop
int3
test
shrb
loopne
cmc
aam
inc
call
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
xor
jge
jl
ret
ret
loop
cld
out
fucomi
out
out
cmc
xor
stc
xor
repz
shl
cmp
out
cld
cmp
sbb
leave
sti
mov
sti
std
mov
in
fadd
cli
lret
ret
out
rcl
fld
test
in
decl
into
out
xor
aad
ds
sar
jecxz
stc
test
loope
call
shl
aam
lret
aaa
out
repz
sar
les
test
loopne
stc
sar
int3
cld
out
nop
jecxz
shrb
out
call
fcomp
aam
in
ror
loope
frstpm(287
call
fucomip
lret
int
xor
lds
in
leave
sarb
hlt
xorb
out
std
loop
fsub
jmp
fmulp
xchg
repnz
lock
shl
sar
repnz
cmp
fcmovb
mov
in
mov
call
into
loop
shlb
int3
std
hlt
shl
shr
shl
neg
out
cli
ljmp
hlt
ret
in
xor
leave
cmp
sti
repnz
in
xlat
loope
loopne
cld
enter
mov
test
lock
lret
xor
shl
loope
repz
lret
mov
xchg
xchg
mov
aad
out
jmp
lret
clc
out
fcmovu
rolb
cli
enter
lea
rcr
sub
int3
cli
enter
lret
fmul
cmp
fprem1
call
xlat
sti
testl
repz
int
fcmove
repnz
jecxz
mul
rol
ret
repz
call
xchg
hlt
in
cmp
into
leave
fstp
xor
loop
sub
int3
sti
lret
out
iret
test
icebp
enter
ds
out
std
cmp
cld
cmp
int
ljmp
aaa
out
les
xor
aas
rcl
aad
repz
stc
fld
test
out
fscale
in
loope
cld
xchg
xor
icebp
stc
div
jmp
cmp
rolb
test
aad
loopne
iret
fdivr
orb
out
cmc
fcmove
int
fninit
repnz
cmc
call
sti
flds
in
iret
in
shl
xor
out
cmp
out
flds
in
int
ljmp
lret
cmc
shll
repz
rcr
cmp
shl
lret
fldl2e
ffree
mov
lock
out
jmp
xor
sub
cmp
ss
xlat
incb
test
stc
in
xchg
lret
cmc
hlt
rcl
aaa
test
aad
iret
shr
int3
cmp
fld
decl
shl
jmp
loopne
out
jmp
enter
testl
jmp
test
mov
into
repnz
rcr
xor
lret
cmp
out
ljmp
sti
jecxz
xchg
rcr
out
in
test
ret
int3
xchg
fcomi
sti
cmp
addl
enter
hlt
rol
xor
xor
shl
fcmovnbe
hlt
cld
stc
adc
jmp
cld
loopne
repnz
loope
cld
repnz
shlb
jmp
ret
loope
clc
std
fsubrp
in
ljmp
out
divl
rol
iret
aam
int3
lock
test
xor
aad
out
fimull
shl
fucomi
cmp
in
aas
cmp
aaa
aam
div
call
enter
repz
jmp
out
iret
std
jmp
stc
adc
jecxz
test
repnz
fdivr
int3
icebp
std
incl
jmp
cmp
lret
cli
add
lock
std
jmp
in
xlat
orl
mov
shr
rcr
enter
rcl
fdivrl
mov
test
lret
icebp
sub
fyl2xp1
call
stc
int
int
fidivrl
out
lock
ret
into
enter
mov
out
enter
ror
into
int
call
cmc
fld1
shl
cli
rolb
sub
cs
call
into
xor
shl
fld
faddp
std
test
in
incb
out
iret
aaa
lret
cmp
hlt
shl
fcmovnb
test
cmp
mov
repnz
rol
aad
cmp
int
cmp
cli
idiv
rcl
jmp
xchg
iret
xchg
iret
loop
int
rcl
ss
xor
out
int
cmp
cmp
cmp
int3
call
loope
aaa
xor
in
int
cmp
faddp
ss
cmp
aad
out
lds
ljmp
iret
cli
sar
aaa
leave
jmp
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
test
cmp
jge
jl
jmp
into
sar
test
mov
addb
repnz
stc
int3
clc
hlt
lock
cmp
test
repnz
ror
clc
test
leave
xchg
mov
mov
out
fmul
ljmp
repnz
fdiv
mov
xchg
xchg
xor
xlat
call
xor
jmp
loope
ret
hlt
loope
xchg
neg
int3
in
ljmp
xor
fcomp
xlat
cmp
adc
fcomp
fcmovbe
xlat
cmc
in
enter
jmp
jmp
out
jmp
out
repz
cmp
rol
test
fcmove
loopne
ror
cli
in
rcr
shll
rcl
shl
clc
xlat
out
jmp
stc
test
xlat
lock
ljmp
rolb
iret
in
cmp
cmc
cld
hlt
jmp
adc
repnz
fsubr
clc
int
fcmovbe
fcmovnu
std
addb
ror
sar
loope
xor
or
stc
fstp
orl
lea
loopne
in
cmp
ror
rolb
loope
hlt
sti
jmp
mov
ljmp
repnz
cli
cld
mul
ds
jecxz
xchg
add
movl
call
in
out
rcl
div
fcmovu
fsubp
cld
aad
cmp
lea
rclb
div
sar
xor
repnz
aam
and
mov
cli
fsubrp
mov
out
mov
in
cmp
in
ret
cmc
stc
cld
cli
out
lock
sti
out
mov
jmp
xor
ret
idivb
cli
repnz
lock
fsubr
addb
mov
fptan
in
int
repz
lock
cli
div
leave
xlat
test
mov
jecxz
shr
mov
xor
sti
idiv
sti
cmp
repnz
in
cmp
hlt
aam
hlt
jmp
sub
mov
rcr
in
cmc
fnstenv
ret
out
fadd
std
rcr
sub
cli
ljmp
into
xor
cmp
cli
sti
rcr
addl
shr
aam
stc
fmul
out
test
iret
mov
sti
enter
icebp
in
cmp
out
in
in
xchg
adc
out
cld
fdivr
mov
fidivs
out
fcmovnbe
cmp
leave
cmp
cmc
jecxz
ret
loop
xchg
sti
in
fldl
ss
cmp
cli
cmp
loop
icebp
ret
addl
mov
lret
xor
aaa
rcr
aas
into
xlat
div
cld
fstp
xchg
jmp
aaa
out
jmp
loop
cmp
filds
lock
fdivr
les
int
sub
ror
imul
xor
fidivrs
div
xlat
aas
sbb
std
sbb
icebp
jmp
lds
fldl2t
in
repz
leave
hlt
fcmovnbe
repz
and
ljmp
ljmp
cs
div
idiv
idiv
ret
aam
jecxz
out
test
fisttps
cmc
rcr
ror
clc
call
clc
repnz
rcr
test
into
mov
in
sub
fcmove
call
in
repz
xlat
jmp
cmp
mov
les
xchg
out
fsub
cmp
in
cmc
cmp
into
in
ret
div
fcom
test
call
shll
shl
ds
lock
fcomip
in
cmp
icebp
orb
out
cmp
out
clc
std
ror
aaa
lock
shl
fcmovu
fcmovbe
sbb
clc
mov
fmulp
iret
int3
sub
repz
xor
shr
cmp
cmp
icebp
and
hlt
cmp
fiaddl
hlt
enter
aam
cmp
dec
icebp
int3
lret
cld
aam
fcomp
neg
jecxz
clc
out
int3
sti
xchg
in
lret
xor
int
aaa
iret
rolb
test
rol
mul
in
loop
icebp
cmp
jmp
in
sti
fcomi
cmp
ds
cmp
xchg
ds
fisttpll
cli
loope
roll
cmc
xlat
aaa
aam
fucomip
fmul
fidivs
fcom
adc
fst
out
addl
out
lret
out
fst
cmp
fst
cli
icebp
sar
mov
int3
faddp
nop
jmp
call
xor
cmc
div
call
fadd
in
lret
test
xchg
jecxz
lret
int
shl
xor
jmp
jecxz
xchg
loopne
leave
call
mov
loopne
lock
icebp
cmp
aas
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
call
mov
jl
add
int
in
test
jmp
jecxz
sti
out
fisttpl
loop,pn
cmp
lock
or
iret
enter
xchg
xchg
icebp
jmp
jmp
fcomi
and
jecxz
roll
int3
fcom
iret
int
loop
xor
cmc
fcmovb
cs
xor
repz
test
inc
ffreep
in
fsubp
shr
xchg
repz
les
cmp
cmp
jmp
shl
lock
lret
ret
call
sub
out
sub
in
icebp
lock
std
fcomp
fcmovbe
cmp
std
mov
cmp
call
out
hlt
xchg
shl
fdivs
lock
std
out
rcr
ror
cmc
xchg
ror
xchg
fsubr
or
xchg
loopne
icebp
lret
idiv
ret
call
sar
idiv
cmp
test
cmp
mov
addb
leave
in
xor
shl
xor
loope
into
add
ret
leave
int3
in
enter
ss
cmc
fxch
std
xor
jmp
repnz
cli
aam
sbb
in
nop
cmc
into
enter
rcr
ljmp
aam
xor
loope
lea
out
int
out
ret
ljmp
ror
icebp
rcr
cmc
out
or
addl
xor
icebp
std
into
cld
int3
cmp
in
stc
hlt
cli
cli
sbb
fucom
iret
out
jmp
mov
cmp
repz
stc
aas
call
int
in
in
lock
out
stc
lret
ss
std
jecxz
out
cmc
mov
in
in
fadds
loope
loope
lret
fnsave
rolb
fcmovne
fsubr
test
iret
rol
aaa
clc
lret
xor
fcmovnbe
cmp
icebp
cld
out
call
icebp
repnz
in
out
aam
in
in
neg
shl
in
ss
mov
loop
loopne
mov
incb
lret
in
out
test
call
cmp
clc
jmp
lret
mov
repz
call
out
cmp
inc
fsubr
leave
cmp
jmp
cli
fistl
mov
xor
out
xlat
fcomip
loope
stc
cmc
fisttps
cli
ljmp
loop
sarb
ror
in
ror
cmp
stc
jmp
cmp
fucomp
fldz
enter
fisubrs
icebp
leave
xor
icebp
clc
sar
ror
xlat
shr
xchg
xor
mov
out
xchg
jmp
int
call
aam
jmp
lret
fyl2x
in
cmp
loope
clc
repnz
sarl
in
loop
jmp
sub
xor
test
cs
std
loope
aad
out
test
clc
mov
jecxz
lret
jmp
test
into
fxch
enter
loop
xchg
ret
faddl
mov
test
out
cs
stc
repnz
fxch
filds
iret
std
jmp
loope
iret
xchg
repnz
ds
in
cli
fxch
rcl
call
iret
fptan
and
shl
jmp
nop
in
jmp
loopne
aam
into
lds
call
fdivp
add
loope
loope
sti
iret
addb
xor
ffree
hlt
xor
int3
stc
out
ds
shl
cmp
lret
cli
icebp
in
int
iret
fdivrs
leave
fnstsw
stc
xlat
repz
xchg
out
lock
fisttpll
lock
iret
clc
cmp
xor
cmp
int
push
into
jmp
xchg
int
into
int3
ror
fadd
rol
fsub
xlat
ret
lock
roll
in
pause
int3
xchg
vpsraw
int
fdivrl
stc
rol
aas
hlt
cmp
mov
test
mov
aaa
xor
out
clc
cmp
fsubr
in
test
fsubr
jmp
xchg
xchg
mov
lret
xor
int
aaa
in
jmp
icebp
call
test
fldl
mov
fldl
aad
cld
cld
aas
rol
loopne
in
out
cmp
int
fldlg2
enter
shl
enter
lds
aaa
ffreep
fnstsw
fmul
in
ret
loopne
aad
iret
in
lock
mov
repnz
ljmp
xor
aas
rcl
in
loopne
repz
test
in
jmp
std
iret
xor
out
clc
iret
aam
cmp
addl
cld
not
out
out
mov
dec
xlat
test
aaa
in
iret
clc
shlb
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
jl
leave
pop
jle
jge
jl
loopne
icebp
rolb
call
mov
int
mov
xlat
shl
enter
out
aam
xlat
repz
cld
xchg
jmp
mov
jmp
fscale
leave
clc
sti
lret
das
jmp
aam
enter
aam
neg
in
jmp
leave
inc
in
sar
loopne
xlat
stc
xor
into
in
out
ss
aas
addb
fucomp
jecxz
fimuls
xlat
in
xor
in
rcr
lock
ljmp
hlt
ret
movl
hlt
xor
std
xlat
aaa
hlt
jecxz
fcos
add
xchg
into
cli
xchg
in
shr
xor
int3
imull
rcr
int3
hlt
out
into
fmul
cmc
jecxz
cld
loopne
aam
jmp
call
ss
int3
sub
ljmp
cmp
cmp
call
mov
jmp
ret
shlb
out
sti
enter
aam
cmp
fdivrp
and
fadd
leave
int
ljmp
xor
cmp
out
iret
jecxz
add
out
xlat
ljmp
cli
sub
ror
int
in
leave
int
ss
fcmovne
aam
cmp
test
fdivp
test
vpaddb
in
cs
sub
leave
int
repz
aam
out
repz
fst
mov
out
jmp
shll
aad
repz
in
cmp
int
xlat
fadds
xchg
call
sti
and
in
in
lret
fmulp
ljmp
fdivp
xlat
cli
test
int
xchg
icebp
xor
repnz
idivl
repz
cmp
fdivrl
cld
icebp
fldl
mov
fadds
xchg
sub
loopne
jmp
cmc
out
in
out
fprem
aas
cmp
test
test
repnz
jmp
call
xchg
shr
sub
in
jmp
out
hlt
shl
hlt
add
ds
aam
int
test
fucomp
xchg
loop
lock
shr
clc
sti
out
sti
int
in
rolb
xor
std
ljmp
jmp
xor
in
lock
cmp
icebp
clc
rol
xlat
xlat
hlt
clc
rcl
cmc
incb
shl
das
aam
xlat
aaa
int
repz
int
fsubr
rol
shl
fabs
test
xchg
loope
repz
aas
out
fldlg2
cli
fsub
out
cld
clc
adc
ret
testl
shr
xchg
mov
in
shl
fnstenv
out
fstp
into
out
fucomip
fdivp
movl
mov
shr
rcl
cmc
cli
repz
int
shl
clc
jmp
sti
xchg
in
fstp
sub
cs
xor
xabort
hlt
repnz
fsubrp
mov
rcl
std
jmp
sti
mov
lock
call
f2xm1
cmp
loop
jecxz
xchg
mov
xlat
leave
sti
icebp
in
jecxz
hlt
xor
icebp
stc
fcmovne
icebp
rolb
test
jecxz
cmp
cli
mov
rol
int
repz
call
or
rol
fst
int
adcb
xchg
fldcw
lock
cli
ds
cmp
cmp
sti
loop
enter
mov
out
mov
lock
out
ss
int
fiaddl
aam
sti
clc
xchg
into
lret
iret
icebp
leave
jmp
aas
xorb
lock
ljmp
fmulp
loopne
xor
stc
div
sarl
call
fildl
std
aam
mov
enter
das
out
enter
cmp
stc
and
out
in
lret
iret
cli
lds
out
fxch
xor
not
idiv
aam
dec
out
lret
int3
nop
into
cmp
std
lret
ss
div
cmp
std
stc
out
xchg
rcr
clc
in
int3
enter
into
fcoml
xlat
aaa
call
sti
cmp
cmp
mov
in
call
mov
enter
lret
rcl
fsqrt
out
xchg
orb
dec
out
loopne
test
aam
clc
xor
ror
iret
rcl
aam
std
jecxz
cli
test
test
lret
call
vpaddsb
enter
call
cmp
aad
xlat
call
enter
test
jecxz
in
sti
div
dec
xor
cmp
icebp
xor
xchg
loope
repnz
shr
ss
lret
lock
sti
aam
repnz
mov
mov
leave
fiadds
xor
out
frstpm(287
fucomi
subl
xchg
add
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
shrb
jg
sbb
jge
jl
ror
loope
ds
sar
shl
hlt
clc
mov
int3
mov
in
xchg
mov
jecxz
into
jecxz
jmp
stc
cmp
fndisi(8087
repnz
test
xchg
test
xor
lret
sarb
cld
cmp
rcl
int3
lds
lret
xchg
sbb
iret
mov
das
ss
out
cmp
xor
cmc
cli
hlt
fucom
and
movl
rol
cmp
test
icebp
idiv
cmp
in
aaa
sti
ds
stc
cld
in
fsubr
sti
out
loope
in
clc
loopne
ljmp
jmp
addb
loop
aam
call
test
jecxz
loop
int3
cs
repz
ljmp
call
xchg
shl
aad
cmp
xor
leave
xlat
out
test
mov
call
in
out
shr
neg
fnop
repnz
fidivrs
xor
repnz
in
test
sub
sti
in
cmc
push
shll
fisubrl
clc
ljmp
iret
sti
cmp
bnd
mov
mov
xchg
iret
jecxz
sub
ss
ljmp
cmp
repnz
shl
mov
test
mov
in
repnz
cs
out
stc
out
hlt
std
fmul
sub
rol
shl
mov
sub
shl
ds
fst
out
aaa
hlt
cmpl
repz
rolb
fmuls
cmc
xchg
jmp
out
xor
fdivr
lret
cli
loopne
loop
cld
repz
out
mov
xchg
out
xchg
int
repz
aam
fadd
test
mov
cmc
mov
mov
mov
cs
aad
into
iret
div
in
cmp
ror
repz
lret
ljmp
aad
idivl
fdivr
cmpl
hlt
out
mul
in
fcomi
jmp
in
shr
call
iret
repnz
in
repz
les
in
fmull
mov
fisttpll
xor
fadd
cmp
cmp
hlt
lock
std
loopne
in
mul
clc
sbb
lret
jecxz
xchg
imul
xor
imul
lock
cmp
cmp
rolb
loopne
dec
mov
in
loopne
xchg
out
cmp
in
sar
rcr
cmp
xlat
cmp
cmp
aad
mov
loopne
icebp
ffreep
and
leave
jecxz
aad
fucom
repz
ror
test
aam
call
mov
mov
int3
xchg
xchg
xchg
enter
fincstp
jmp
rolb
leave
cmc
cmp
xchg
cld
icebp
rcl
loop
xor
repz
xor
into
enter
idivl
rolb
cli
iret
loop
rol
subl
ret
repnz
loopne
in
xchg
lret
fdivrp
leave
test
cli
mov
addb
out
out
fdivrl
xlat
loopne
out
addl
loope
decl
lds
icebp
aam
cmp
aas
clc
ret
test
loopne
xchg
in
std
ffreep
add
loopne
loope
cmc
shl
jmp
sub
icebp
int
lret
clc
cmp
lock
rcr
std
addl
rol
int
int3
out
loope
loope
test
call
mov
orb
ss
cld
lret
loope
fcom
fdiv
lock
aad
leave
call
mov
int3
rcr
repnz
sti
fcmovu
int
loopne
fmul
in
mov
hlt
aad
hlt
lret
cmp
into
ficoms
stc
ss
shl
enter
aam
std
cmpb
test
mov
fcmove
les
repz
aam
fmulp
repnz
loopne
not
stc
test
test
shr
xor
jmp
out
fmul
rcl
addb
cld
ljmp
xor
aaa
xor
aam
fsubr
int3
sar
ret
call
mov
iret
loopne
in
xchg
test
xor
jecxz
sub
fdivs
repz
out
jecxz
rol
inc
aad
mov
loop
fdivrp
hlt
repnz
iret
jmp
rcr
fdivrp
xlat
shl
jmp
std
out
xchg
hlt
lret
xchg
in
into
icebp
in
ret
lds
int3
lret
test
out
loope
sti
test
call
iret
jmp
shll
idivb
out
adc
cmp
aad
jecxz
ret
fcmovnb
clc
xchg
jmp
jecxz
int3
fucomi
ror
repz
icebp
out
fucomi
cli
repz
mov
mov
addb
in
int
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
cwtl
and
jge
jl
repnz
cmp
in
jmp
xchg
loopne
in
orb
sub
test
aam
shlb
xchg
fadd
rolb
out
mov
cmp
ljmp
fdivrl
loope
jecxz
rol
std
loope
mov
rorb
aaa
jmp
ss
lock
dec
ds
cmp
xabort
enter
mov
shl
rcl
cmc
loop
cmp
clc
test
hlt
call
xchg
test
cli
lret
repz
lret
stc
jmp
call
in
cmc
cmp
jecxz
ljmp
in
fcomip
xlat
shll
icebp
shl
loop
repz
in
in
in
lret
jmp
lock
xor
jmp
xlat
in
fdivr
icebp
in
loope
sarb
std
hlt
cli
and
lret
sti
icebp
jmp
ret
aam
out
out
cmp
hlt
jecxz
test
cmp
cmc
fsub
incb
mov
xlat
hlt
into
repz
aam
in
lret
shl
xor
xchg
stc
movl
xor
jmp
repz
cld
idivb
aas
lock
out
ljmp
mov
lret
cmp
clc
in
loopne
std
shl
cmc
loopne
in
idiv
nop
in
fstl
neg
shr
test
fcomp
fcmovu
hlt
repnz
stc
aam
enter
mov
iret
fdivl
in
shr
aaa
into
sti
lret
repz
ret
rcl
fiaddl
out
fsub
and
fmul
stc
in
aad
lret
in
int3
rcl
int3
aad
jmp
xchg
fisttpl
out
jecxz
out
sub
aaa
repnz
clc
hlt
lock
adc
fadds
sub
xchg
loope
into
lret
sub
in
xor
jmp
xlat
ret
loopne
stc
addl
leave
jmp
cmc
xor
not
in
clc
sti
int3
repnz
jmp
stc
repz
in
jecxz
clc
call
into
xchg
cmc
jmp
repz
in
jmp
fdiv
in
clc
fcmovnu
mov
mov
addl
ljmp
fmul
fiadds
decl
or
jmp
in
ljmp
aas
rol
in
rcl
fimuls
iret
xchg
fisttpl
shl
enter
ss
clc
idivl
loope
cld
rolb
fadds
into
out
out
shrb
xor
xor
cmp
shl
xchg
mul
out
out
std
sti
xchg
into
mov
aaa
cs
aad
repz
icebp
cmp
xorl
testb
stc
test
lret
loope
loop
cmp
call
out
cmp
in
test
rcl
mov
int
repnz
shl
int3
xor
loop
out
out
sarb
fadd
ror
aas
cli
xlat
mov
sti
jmp
loop
in
enter
subl
rol
aam
cmp
enter
neg
sti
repz
leave
lret
test
call
fdivrs
imul
loope
in
stc
ror
ss
cld
stc
sti
rol
mov
mov
aaa
in
fcmovbe
enter
ret
rcl
loope
fsubp
repnz
test
ror
out
int
shl
in
ret
stc
clc
in
push
repnz
xchg
and
aad
jmp
repnz
cmp
out
addb
in
loopne
in
lock
xor
hlt
enter
cmp
icebp
repz
out
rolb
rolb
hlt
call
shr
cld
jecxz
in
test
ret
fmull
xchg
out
loop
xor
stc
in
cs
cmp
add
cmc
xlat
repz
fstp
stc
fcmovu
testl
shl
cmp
aaa
cmp
out
ds
ljmp
cli
cld
or
mov
fcomip
xor
int
imulb
sar
cmp
rcr
incb
mov
out
iret
fcomp
xchg
mov
rol
out
in
aad
iret
leave
cmp
lock
ret
cli
cmp
jecxz
mov
pop
jmp
iret
in
mov
repnz
in
out
ljmp
or
repnz
mov
xor
cmc
cli
lret
in
loop
cmp
idiv
mov
cld
in
out
icebp
leave
mov
in
in
rcr
iret
xor
rcl
xor
loope
std
rolb
mov
in
xchg
shl
testl
jmp
int
iret
rcl
fsts
fs
loopne
js
les
jl
add
jmp
sti
loope
in
hlt
xlat
fiaddl
cld
fisttpl
iret
aam
xor
leave
cmp
in
xlat
fdivp
in
out
hlt
roll
lret
fldlg2
test
out
call
aaa
lock
in
int
enter
cmc
rcr
icebp
rol
xchg
icebp
in
mov
in
loope
cmc
icebp
xor
lret
cmp
cli
fcmovne
hlt
loope
out
out
mov
lock
repnz
int3
cmp
ror
aam
cmc
lock
rcr
jmp
in
int
mov
iret
out
std
xor
cmp
cmp
xor
aas
cmp
not
cmc
fdivr
out
ret
xchg
in
fmulp
xor
in
aad
sti
fsubr
cmp
cmp
std
stc
mov
in
mov
fcmove
test
iret
shl
sub
loop
sarb
int
in
test
sar
xchg
mov
in
out
lret
out
ror
aad
ss
xor
cmpb
aad
hlt
adc
in
iret
cli
cld
int3
repnz
in
enter
out
std
fstpt
std
shl
neg
xchg
xchg
fdivp
jecxz
cli
and
repz
call
cmp
xlat
std
fcomi
fcmovnbe
std
out
aam
clc
movb
int
in
xor
jmp
clc
ss
lock
rorb
xchg
xchg
xchg
xor
div
xor
lret
fsincos
dec
cmc
fildl
and
orb
into
lret
stc
lret
enter
cmp
in
testl
cld
ljmp
out
in
cmp
filds
hlt
out
std
out
enter
out
repnz
mov
leave
out
in
leave
clc
clc
rolb
ret
xor
into
sti
ficoms
lret
fnstenv
cmp
aad
sti
ljmp
sti
sti
hlt
mov
mov
loope
jmp
in
fdivp
aaa
mov
rcl
stc
out
loopne
xlat
shl
lret
leave
enter
lea
jmp
out
stc
jmp
bnd
idiv
out
stc
jmp
cld
mov
loope
out
leave
jmp
xor
lock
rcr
ljmp
stc
xchg
fadds
mov
mov
fldpi
jmp
xor
out
jmp
std
ret
in
lds
lret
ljmp
lret
cmp
in
sarb
lock
fdivr
hlt
cmp
addb
sub
xor
leave
aam
lock
ljmp
cli
into
roll
fcmovne
in
xchg
jecxz
cmp
rcl
shll
cmpl
cmp
idiv
rcl
cmc
loop
mov
lret
lock
out
xor
aad
cmp
cmc
fdivrs
ds
std
std
std
jmp
fcomp
jmp
mov
out
in
enter
f2xm1
cmp
int3
out
rcl
jecxz
hlt
icebp
fstp
xchg
ret
lret
ljmp
xor
out
sti
cmp
into
fidivrl
dec
into
repnz
loopne
addl
iret
aad
loopne
cs
in
xlat
fcomp
stc
cmp
fsub
stc
idiv
mov
in
fdiv
mov
out
iret
iret
fdivr
clc
shl
hlt
cmpb
mov
out
jecxz
sbb
aad
loope
ror
call
aaa
std
repnz
neg
test
test
fmuls
into
out
hlt
fsubp
sub
test
shr
shl
stc
jecxz
cmp
xlat
test
std
addl
in
nop
leave
shl
into
repnz
into
cli
rcl
adc
adc
in
mov
add
ljmp
ss
std
aas
into
call
sti
ret
xor
iret
fmul
fdivrp
cmc
lock
das
loope
sub
cmc
in
xor
fdivrs
sar
std
cmp
aas
in
loope
lds
iret
iret
int
loopne
iret
imull
rcl
aaa
enter
lock
in
jecxz
cmc
addl
rol
clc
xor
aad
lret
fcmove
lret
cmp
faddp
fprem
enter
int
fcmovnu
rorb
shl
enter
jmp
xor
cmp
shr
idiv
loop
mov
xchg
mov
loop
iret
repnz
hlt
out
fucomi
sbb
loopne
fiaddl
loop
xchg
sub
shl
ret
std
std
iret
ss
into
in
loop
inc
mov
leave
cmc
jmp
out
jmp
icebp
xor
cld
cli
ret
fcomip
rcr
faddp
mov
xchg
int3
loope
out
repnz
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
repz
bnd
vpsrad
xchg
jmp
repnz
cmp
repnz
div
int
push
in
fld
fsub
lret
lret
iret
lret
jmp
xor
xor
cli
xlat
icebp
sarl
cmp
hlt
aad
adc
fcomp
into
fcmovnu
out
shl
shl
cmp
call
fadd
in
hlt
cmp
and
and
in
mov
repz
fsubrp
out
hlt
sar
aad
enter
ds
and
orl
out
test
sub
xor
ror
aam
cli
int3
int3
cld
in
into
leave
in
mov
faddl
icebp
ret
hlt
fsubr
std
rcl
rcr
adc
shr
cmp
cmp
adcl
bnd
cmp
lock
hlt
test
out
clc
neg
jmp
ljmp
xor
fnstcw
push
sarb
in
imul
cmc
fucomi
ljmp
in
out
xlat
ljmp
int3
lret
in
fisttpll
out
mov
loope
in
inc
jecxz
enter
cld
fcmovu
cld
loope
fcmovb
rcl
fsub
fsubr
lret
in
enter
addb
aaa
icebp
sar
in
int
icebp
into
fcom
cmc
loopne
loopne
addl
loop
fcomp
shlb
lock
cli
out
fsub
cmpb
aas
les
out
in
out
out
jecxz
xchg
ljmp
std
ljmp
loop
xchg
xor
xor
out
cmp
cld
cmp
jmp
cmp
std
repnz
ljmp
ficoml
shll
clc
icebp
int3
fnstsw
out
repz
mov
cli
xchg
call
divb
int3
fdivl
out
icebp
cmc
cli
xlat
xchg
incl
lret
sti
leave
icebp
repnz
shl
call
cld
clc
cld
cld
fcmovu
in
shl
fdivrp
fcmove
int
enter
jmp
mov
stc
cmp
cmp
lret
ss
call
xor
cld
xchg
xchg
orb
repnz
cmp
stc
out
fucom
icebp
fadds
loopne
mov
sbb
out
out
out
out
lret
jmp
jmp
out
in
out
in
into
sti
shr
ror
testb
into
mov
ror
cmc
out
cmc
cmp
sar
int3
rcl
sar
sti
stc
fsubp
clc
xchg
mov
out
in
rol
shlb
out
cld
int3
cmc
fdiv
cli
incb
xor
int
ficoms
imul
divl
enter
shr
repz
iret
cmc
not
fcomip
roll
int3
std
xor
aad
aam
shl
cli
xor
jecxz
cmp
rcr
out
flds
mov
mov
jmp
loopne
repnz
lret
in
out
cmp
repnz
clc
out
cld
test
loope
test
rcl
lret
leave
xor
into
cmp
rolb
fstp
lret
mov
roll
cmc
aaa
icebp
shl
idivb
sar
aas
cmc
cmp
xor
xchg
cld
icebp
std
ret
hlt
loop
sbb
rorl
sti
in
cmp
frndint
lret
rcl
repnz
std
stc
mov
xchg
sbb
call
das
divl
ret
out
jmp
sti
xor
out
roll
fsubrp
int
in
rcr
xchg
xchg
enter
shl
in
xor
into
in
sarl
ret
fadds
imul
jmp
xchg
out
int3
in
sub
cmp
imul
add
std
fdiv
in
test
movb
hlt
clc
out
aam
int3
in
leave
sub
cli
int3
xor
loope
addb
mov
icebp
out
xor
aam
stc
call
out
test
aad
leave
fsubp
std
in
decb
sbb
imull
icebp
loop
xor
call
cmp
cmc
xor
mov
out
clc
xchg
int3
icebp
sbb
enter
cmp
jmp
xlat
in
rorb
jmp
rcr
jmp
xor
call
sarl
clc
int
xlat
out
repnz
cmc
stc
mov
sbb
fldl
cmc
in
out
cmp
cmp
clc
cmp
neg
fadd
sti
cli
loop
lret
into
repz
cld
in
fidivs
clc
jmp
sti
cmp
lret
aad
cmc
cld
cmp
hlt
sub
in
cld
xchg
xor
stc
shr
int3
xor
idivb
xlat
repnz
rcr
addb
xlat
in
enter
pop
add
aad
aad
rolb
push
test
jle
jge
jl
icebp
sar
out
sti
call
cmp
ret
div
lret
fisttps
repnz
shrl
sar
cmp
shr
icebp
cmp
std
rol
fmuls
aam
fsubrp
int3
in
into
out
cmc
fdiv
std
fsin
out
test
repz
lret
test
fdivp
rol
in
cmc
xor
fcmovnbe
cmp
aam
cld
inc
shl
call
xchg
out
loope
stc
leave
in
std
out
jmp
lock
xlat
loop
fsubrp
fld
xchg
cmp
fcomp
leave
test
ljmp
fpatan
lret
sti
out
xor
sar
int
mov
xchg
out
rcl
shr
repz
lock
roll
out
in
jecxz
mov
xor
ss
repz
out
hlt
enter
rcl
test
jmp
out
lret
fdiv
fucom
test
call
sti
fcomip
cmp
in
ret
decl
fcmove
nop
fcmove
xchg
shl
sub
std
cmc
stc
cmp
loopne
in
jmp
lock
loope
sub
shl
repnz
fldlg2
shr
fcmovnbe
hlt
fcmovnbe
mov
test
lret
shl
sub
jecxz
icebp
icebp
xlat
cmp
test
ds
xchg
xchg
mov
rol
int
aad
out
fcomi
iret
cmp
jecxz
repnz
call
aad
ret
in
cld
std
out
repnz
stc
fdivrs
ret
loop
test
clc
cld
out
out
movl
out
fistpll
fcmove
out
repz
xchg
vcvttpd2dq
and
xchg
cmp
shl
ljmp
in
xlat
rol
div
cmp
loop
test
in
sti
xchg
shl
hlt
shr
fdivs
out
lret
in
fdivp
jmp
cmc
in
adc
in
loope
enter
leave
xor
iret
in
cmp
lret
rcr
hlt
int3
rcr
clc
xlat
loope
fildl
xchg
in
aam
repnz
call
out
les
jmp
loop
fisttpl
xor
ret
aaa
repnz
xor
out
flds
in
lds
loope
int
dec
ljmp
jmp
lock
cmp
repnz
std
call
mov
in
shlb
lret
shlb
out
idivl
into
ret
fadd
stc
xchg
leave
jmp
orb
loop
xlat
cmp
xor
fcom
lock
rol
mov
loop
xchg
shl
test
xor
int
clc
cmp
fadd
cmp
in
loope
xchg
jmp
xchg
xchg
leave
sub
ret
jmp
int3
int3
cmp
fcmovne
into
aam
add
in
fisttps
jecxz
ror
ror
in
aam
cmp
sarb
out
fucomp
les
fadd
and
xchg
decb
les
aaa
call
loop
ret
std
xlat
hlt
repz
cmp
rol
cli
icebp
int
out
ret
in
fcmovu
cld
cmp
iret
inc
sarb
fmull
jmp
divb
fcmovnu
jmp
ror
fcmovnbe
aas
roll
xor
jmp
lret
xchg
leave
out
into
repnz
jmp
lret
cmp
cmp
xchg
sti
cmc
fldpi
sti
icebp
test
icebp
repnz
loopne
lock
ss
fabs
in
xlat
cmp
ret
xlat
fisttpl
repz
out
hlt
ljmp
fcmovu
std
icebp
sti
lock
and
ljmp
ljmp
aam
cld
out
ret
ljmp
fmul
out
loope
into
shr
lret
in
cmp
cmp
sarl
cmc
xlat
mov
cld
mov
test
jmp
jmp
das
xor
lret
out
jmp
into
cmp
aas
aas
fdiv
loope
jecxz
sub
in
and
ret
out
das
shr
ds
aam
fstp
sar
rol
mov
in
loope
fadds
lret
jmp
cmc
shl
add
call
fdivp
or
cs
icebp
ffree
int3
in
ljmp
fnstcw
mov
int
in
loop
in
xor
jmp
fsubr
icebp
cmp
fnsetpm(287
std
rcl
loopne
in
fcmovnu
jmp
out
mul
aad
fsub
imulb
rcl
fcmove
std
rcr
in
test
in
orb
in
shr
xor
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
stc
lret
rcl
cmp
lock
not
shl
sti
cmc
mov
loopne
lds
jmp
cmc
xor
lret
out
cmp
sbb
out
add
fcomp
cld
loopne
xchg
lret
lock
call
fadds
xlat
hlt
leave
test
leave
fxch
lret
iret
loope
int3
ljmp
fidivrl
ret
xchg
std
jecxz
in
imul
into
fildl
cmc
loope
call
cmp
enter
vpaddb
neg
fisttps
sti
fisttpll
fprem
in
out
repz
lock
fidivrs
test
xchg
clc
mov
mov
xchg
hlt
ss
hlt
hlt
out
ljmp
call
xchg
jmp
cli
fcmove
sub
sub
lret
iret
cmp
rcl
test
in
fcmovbe
cmc
cli
mov
xchg
xor
xor
aad
int
iret
fst
ret
les
ret
call
nop
jecxz
in
sti
enter
iret
aaa
fprem1
rcl
ds
fisttpl
int
icebp
jecxz
int3
test
imul
xor
xor
clc
cmp
aas
aaa
cld
xlat
repnz
sti
hlt
cmp
loope
std
fucomp
sarb
sub
fsub
iret
cmp
idiv
iret
loop
cmp
repnz
xlat
ret
cmp
cld
mov
int
in
ljmp
into
cmp
ret
repz
stc
std
fildl
out
xor
xor
ss
loop
loopne
cmc
rcr
sti
loope
fdivrs
fdivrp
fucomi
ljmp
cmp
xor
xor
repz
repz
fcomp
jmp
enter
mov
jmp
into
sar
cld
aad
std
adc
loop
hlt
enter
lret
loopne
aad
ror
cmc
jmp
rcr
cmp
test
test
fadd
int
jmp
and
in
lock
enter
fsub
ds
inc
xchg
lock
out
loopne
in
enter
into
shr
icebp
cmpl
mov
in
xchg
xor
ljmp
lret
aam
fcmovnu
lock
jecxz
or
shr
mov
ss
fildl
test
out
jecxz
mov
out
loop
out
test
ret
divb
cmp
ror
rcr
call
aam
std
loope
jecxz
in
ljmp
rol
cmp
clc
leave
int
shl
aaa
jmp
cmp
out
jmp
call
fucom
mov
aaa
in
cmp
imul
cmp
ror
stc
in
ret
fcomip
cmc
test
add
out
cli
fmul
incb
xor
fnstsw
lock
std
mov
call
jecxz
fsubrp
out
shr
aaa
loop
fdivrl
adc
sti
sub
sti
xor
dec
les
aaa
lret
rol
std
shl
xor
shl
or
sub
out
int
in
cmc
mov
out
xor
out
int
out
cmp
jecxz
fadd
cmp
rcl
aam
fdivr
ret
xchg
fsubrp
call
stc
repz
leave
fidivs
cmp
into
ret
xlat
loop
int
stc
decl
cs
fadd
fdivs
cmp
call
into
icebp
fdiv
aam
or
call
xchg
call
out
cli
iret
cmc
out
repz
shr
roll
mov
mov
fsub
into
aad
das
ljmp
lret
fiaddl
clc
call
test
fld
call
aam
rol
loopne
stc
stc
xor
fcmovu
fcmovnb
fsubp
mov
faddp
das
test
ljmp
cmp
loop
std
cli
neg
in
in
rclb
ljmp
not
dec
loope
ret
stc
cld
in
hlt
ljmp
in
jmp
icebp
in
push
jmp
ret
fcom
sarl
test
in
in
leave
jmp
in
cmp
std
cmp
stc
fnstenv
aad
sar
jecxz
jmp
loop
in
call
jmp
call
icebp
rcl
icebp
jmp
loope
fdiv
xlat
cld
mov
out
test
std
jmp
sub
jecxz
ret
xor
adc
stc
xchg
out
rorb
roll
iret
clc
leave
repnz
cli
lret
in
cmp
jmp
lret
enter
xchg
ljmp
inc
or
jmp
ror
ror
rcr
frstor
pop
sub
insl
mov
jle
jge
jl
call
stc
aaa
xor
cmp
fldl
test
iret
lret
out
in
cmc
in
ljmp
loopne
xlat
sarl
jmp
cld
mov
fldl
enter
cmp
cmp
fdivrs
in
hlt
cli
ret
sti
std
neg
test
cld
int3
jmp
leave
out
out
das
lock
cmp
cmp
cmp
jmp
xchg
test
xor
fdivrl
clc
ds
adc
shl
rol
hlt
cmp
in
fucom
repz
xchg
xchg
jmp
aaa
ss
push
fadds
sti
hlt
sti
xlat
leave
out
cli
fsubr
les
sub
imul
clc
cmp
cmp
test
xlat
loopne
repnz
fmuls
xchg
not
in
out
ss
jmp
int
aas
div
fcmovb
rorb
jecxz
icebp
enter
loop
xor
fnstenv
icebp
in
cmc
cmp
repz
stc
std
fdivr
in
ret
fld
jecxz
fadds
out
loop
rcr
cmp
into
not
cli
fscale
fcmovu
out
shl
clc
cld
leave
enter
mov
les
rol
shlb
xlat
idiv
add
test
mov
test
mov
test
cli
fidivl
fucom
out
jmp
loope
roll
fucomi
lea
sub
aaa
fdivl
aad
int
icebp
xlat
leave
loopne
enter
test
lret
int
clc
xlat
out
ss
lds
cli
in
int
xchg
fisttpll
out
shl
int3
in
cld
in
int3
fcom
in
aad
fucom
ds
clc
mul
stc
fsub
orb
repz
xor
shl
lret
out
testl
enter
in
std
cld
mov
ss
hlt
cmp
repz
sar
out
sti
ret
jecxz
xchg
xlat
mov
mov
fcmovnu
ljmp
fcmovne
fdivrp
cmp
int3
cmp
shl
aam
ret
fisttpll
enter
out
xor
cmp
lock
cmp
shr
hlt
rcr
fcmovnb
fmul
xchg
out
int
repnz
leave
cmp
into
hlt
in
into
cmc
std
icebp
fucom
lret
or
in
jmp
bnd
out
xor
xor
fdiv
fdiv
stc
fdivr
loope
cmc
test
sub
or
icebp
in
fadd
int3
enter
cmp
in
test
loop
leave
in
xlat
fsubrp
repz
and
out
jmp
lret
cmp
in
out
ret
enter
enter
sub
shl
jecxz
aaa
sub
fucomp
lock
into
rol
repz
out
xor
hlt
in
fucomip
sbb
in
xchg
ror
xor
xor
stc
aaa
sti
fucomip
icebp
ljmp
mov
aam
loope
out
loopne
loope
sub
rcl
lock
out
jmp
loop
repnz
loop
std
jmp
loopne
in
cs
sti
ljmp
in
icebp
xor
test
lret
in
loop
flds
loope
lret
out
repz
lret
loop
in
loope
mov
ret
xor
shll
jmp
iret
fdiv
stc
fst
in
int
fsub
sti
iret
xchg
loope
not
cmp
ss
call
cmp
xchg
fdivr
mov
fsubr
loopne
cmc
mul
in
sti
repz
into
int
cld
add
shl
fcmovne
mov
cli
call
in
loopne
fpatan
aaa
cmp
aaa
cmc
enter
add
aas
sti
cli
ljmp
loope
test
cmp
repnz
in
std
cmp
out
icebp
shl
in
jmp
cld
in
xchg
std
mov
repnz
out
aas
loopne
aas
cmp
and
cld
cld
fdivr
iret
loop
adcb
xor
fdivrl
ljmp
mul
repz
ret
out
enter
jmp
in
cmc
in
cld
cmc
out
rcr
lock
incl
fdivp
xchg
int
mov
in
out
divl
into
iret
repnz
fcmovbe
shl
cmp
xchg
call
loope
int3
ret
xlat
shl
cmp
cmp
xlat
cmp
in
aas
std
cmp
rolb
mov
aad
faddp
stc
xor
out
in
in
dec
sbb
repnz
test
sti
mov
jmp
int3
test
loopne
out
vcvtdq2pd
in
cmp
std
cmp
rolb
sti
ret
out
movb
lret
icebp
out
ror
add
push
jmp
lret
ds
lret
rol
loop
fisttps
jl
add
icebp
xor
lret
sarb
icebp
int3
aam
repnz
jmp
sub
lret
in
xchg
loopne
aad
repnz
icebp
lret
ss
into
fucom
sbb
ljmp
call
repz
xor
clc
shl
rcl
ret
shl
call
mov
test
repnz
cmp
ljmp
xlat
ds
add
stc
iret
in
out
fmulp
out
les
iret
xor
fmulp
jecxz
add
cld
in
test
fsubr
in
mov
addb
out
out
xor
aam
int3
out
cmc
jecxz
jmp
clc
sti
imul
jecxz
cli
filds
enter
cli
ds
enter
rol
xor
fcos
in
out
int3
fcmove
int3
mov
in
out
iret
aam
cmp
xlat
shl
std
cli
fxam
lret
stc
in
mov
das
shll
shlb
ljmp
cmp
fcmovb
repz
in
fmuls
icebp
div
neg
aad
not
push
aas
cli
loopne
testb
fcomp
std
push
lret
sub
fsincos
out
jmp
neg
ret
inc
test
leave
int3
xbegin
das
jmp
divl
cmp
fprem1
cld
fdivrp
shl
rolb
mov
mov
xor
iret
call
stc
fiaddl
mov
fists
cmc
stc
clc
jecxz
out
shr
aad
cld
hlt
fscale
jmp
ljmp
in
lds
call
enter
in
repnz
out
std
std
fmull
test
xlat
aad
lret
out
aaa
cmp
icebp
fstpt
stc
sti
out
cmp
xchg
ret
xchg
and
sub
xor
neg
cmp
aad
add
cmp
lock
out
incl
jmp
jmp
repnz
ror
shl
fsub
aas
fsubrp
xchg
iret
mov
lock
jecxz
fdivs
shl
sarb
shr
sbb
mov
xchg
out
mov
lock
ljmp
lret
shr
icebp
inc
mul
clc
clc
out
in
fstl
out
hlt
lret
repz
jmp
into
cmp
cmp
les
leave
out
loop
xor
jecxz,pn
std
fadd
fstpt
iret
fcmovnbe
int3
rorb
fiadds
fstl
divl
xlat
leave
jmp
loop
xlat
not
flds
lds
repz
lret
ss
in
xchg
cmp
sti
loope
leave
mov
xchg
repnz
repz
ror
jmp
inc
icebp
cli
fdivr
ret
fiaddl
lock
call
iret
stc
fnsave
cld
in
fistpll
icebp
test
adc
loop
lret
out
sti
in
lret
repz
repz
call
in
vpavgw
test
in
out
out
fstp
addl
das
leave
sti
xlat
ljmp
enter
in
lret
loopne
lock
out
jecxz
das
cmp
ljmp
fld
hlt
iret
into
jecxz
cmc
into
aad
leave
ror
call
rcr
cmp
imul
xchg
idiv
loopne
mov
mov
jmp
out
test
ss
hlt
out
div
out
cld
stc
cli
sbb
lock
fsubr
repz
cs
lret
hlt
aad
rcl
fistpll
rol
out
shl
test
fcoml
aas
call
xor
cmp
adc
fiadds
fld
int
loopne
jmp
aam
in
in
xor
fucomi
hlt
aad
sarb
fcomi
fucomip
loopne
cli
jmp
ffreep
in
int3
call
cld
enter
loope
cli
lds
mov
idiv
in
in
out
lret
shl
out
fsqrt
jmp
aam
hlt
rol
rcl
cmc
out
decl
xchg
shl
jmp
xor
call
ss
cld
sar
iret
cmp
fxch
jecxz
fsubr
test
lret
iret
mov
rol
rol
jmp
jmp
int
imul
shl
loope
xchg
rorb
enter
jmp
lock
cli
lock
roll
add
jecxz
fmul
repnz
in
shll
xor
ss
cmp
icebp
ffreep
int3
in
movb
xchg
in
out
out
and
in
js
inc
add
sub
jmp
rcl
mov
neg
repnz
cmp
aad
ret
jge
jl
in
aad
lret
xor
shl
shl
sar
ret
in
mul
mov
out
in
jecxz
shll
das
sti
xor
fcmovne
cmp
cld
cmp
out
test
les
out
shl
lds
in
in
aaa
cld
cmpl
cli
lock
cmp
loopne
hlt
enter
fdivr
in
iret
call
into
xor
repz
in
xor
ret
test
stc
test
xor
enter
fnstcw
aas
out
roll
cmp
out
in
popl
loope
in
out
imul
sar
loop
out
fadds
mov
leave
mov
das
lret
ss
cmp
aaa
aam
mul
jecxz
fisttps
loope
in
ljmp
lret
xor
sub
out
aad
cmp
in
aas
decb
fcmovnu
repz
cmp
icebp
aad
fcom
aaa
fcmovnu
cmp
rcr
xlat
jmp
fstp
out
int3
test
int3
call
inc
mul
out
jecxz
jmp
mov
cli
test
leave
sar
jecxz
rcl
xor
ljmp
aam
fiaddl
or
xchg
iret
out
rcr
rcr
lret
cmp
cld
cmp
jmp
cld
and
in
cmc
repnz
shl
in
cmp
repz
xlat
sar
std
out
hlt
out
out
mov
ror
out
enter
jmp
shr
ret
lock
call
cmc
xchg
ret
xor
idivl
rcl
cmp
into
cmc
aam
cli
repz
cld
mov
xchg
xor
fcomi
in
xlat
lret
xlat
int
lock
rcr
xlat
std
ds
into
call
lret
jmp
aad
out
out
jmp
loop
cmp
rcl
fcmovb
mov
loope
loope
jecxz
rol
ret
repz
clc
repnz
sti
iret
fcom
jmp
cmc
sbb
out
out
mov
out
in
lock
xor
into
cld
rcl
cmp
fdecstp
sar
mov
add
mul
xor
out
aam
div
xor
int3
div
into
loop
clc
lret
mov
fsubr
mov
test
shl
iret
aam
clc
iret
cmp
fsubr
icebp
rcr
les
ret
in
in
test
rcl
rol
in
sarl
loop
std
aas
testb
sti
mov
lret
rolb
sub
sub
sbb
aam
cmp
ret
cli
fcomip
xchg
out
loopne
out
clc
cmp
repz
jmp
int3
aaa
in
cmp
shl
fmul
mov
loopne
mov
cmc
xor
enter
cmp
ror
call
out
out
cmp
cmc
fimull
addl
in
stc
cmp
shl
lock
into
icebp
stc
cmp
in
lret
sti
or
into
xchg
call
in
in
repnz
cmp
rcl
iret
jecxz
sbb
fisttps
in
test
out
sti
in
enter
jmp
icebp
iret
into
test
rcr
fld
xchg
jmp
div
repnz
enter
out
xlat
rolb
std
stc
loope
ljmp
xchg
xor
leave
cmp
out
div
xor
into
sbb
lret
fdivrp
mov
in
jmp
test
fnstenv
lock
cmp
rolb
stc
mov
iret
xchg
fistl
lret
clc
fcmove
stc
shl
cmp
repz
idiv
clc
rolb
ljmp
int
xor
cmp
fdiv
cld
std
loope
ds
out
xchg
ret
loope
idiv
fldl
out
lret
stc
les
leave
lret
jmp
fiadds
roll
fnstcw
in
fdivr
in
loopne
xor
cmc
xor
ljmp
test
clc
mov
rolb
enter
ljmp
into
f2xm1
loopne
call
mov
jmp
xchg
jecxz
into
hlt
sub
repz
sti
loope
xlat
iret
int
std
aad
hlt
faddl
movb
enter
jmp
out
clc
hlt
f2xm1
cld
rcr
out
out
cmp
nop
in
xchg
in
cmp
xor
lret
jmp
ds
cli
sar
out
ret
loopne
xchg
int
cld
xchg
mov
jecxz
xor
cmc
cld
and
ds
mov
ds
iret
loope
lret
pushl
call
jmp
jmp
int
mov
cmp
xchg
shl
aas
leave
jle
jge
jl
sub
rcl
icebp
fdivrs
stc
fxch
ffreep
cld
sar
inc
out
cld
jmp
in
fucomip
jecxz,pn
in
cmp
cmc
cmp
cmp
loopne
aas
into
into
jecxz
xchg
mov
in
std
repz
shl
shr
fcmovnu
lret
fcomip
sar
not
shr
mov
aad
addb
repnz
out
repnz
sti
fst
rcl
aam
addl
jmp
jmp
in
rcll
cmp
call
cmp
adc
mov
repz
in
test
out
cmp
rcr
fcmovnu
xor
roll
in
push
rorl
int3
sti
cmp
das
divl
aam
int3
xor
rolb
aas
in
out
loope
enter
enter
lret
xor
ffree
rcr
lock
cld
mov
enter
repz
idivl
cld
cmp
faddp
repnz
xlat
aam
mov
adc
loop
imul
repz
cmp
jecxz
aad
test
in
lret
in
jecxz
out
lret
xchg
loopne
xchg
xor
cmp
dec
loopne,pt
neg
loopne
inc
mov
mov
fdivr
cli
xchg
int
sub
lret
rcl
xor
ror
loope
jecxz
fcmovbe
ret
ret
shl
cld
fnclex
int
ret
cli
nop
in
hlt
int3
leave
shl
aaa
int
xor
int3
cmp
clc
ror
xchg
sti
mov
in
into
iret
fmulp
shl
loope
in
das
lret
cmp
int3
cs
ljmp
vcmpsd
ret
int
cli
ret
jmp
out
fsubr
jmp
fcmovu
aad
fildl
clc
mov
loop
out
cmc
repz
shr
out
clc
shr
shl
hlt
fisttpll
fiaddl
aad
sub
iret
lock
cmp
sti
fcom
mov
fdivr
jecxz
in
out
in
loop
xor
fdivrs
fnstcw
idivb
fmulp
cmc
mov
sub
mov
int3
repnz
stc
cmp
sar
fst
repnz
cld
aam
loop
mov
int3
test
cli
cmp
fcmovbe
lret
aaa
jecxz
hlt
loopne
xlat
mov
aad
in
aam
sbb
shll
das
cmp
jmp
cmc
aam
cmc
test
rorb
out
out
out
mov
repz
lret
iret
repnz
rcr
cli
testb
xlat
cmp
popl
iret
sub
ret
hlt
out
idiv
cmp
sar
icebp
fadds
fmul
std
sti
lock
int
xlat
ret
lret
fcmove
stc
out
cli
aad
shl
cmp
push
test
clc
out
iret
adc
in
and
shl
lret
cmp
rcl
std
cmp
out
shl
repz
xlat
aad
std
jmp
clc
addb
rcr
fdivr
shl
xlat
in
in
fldl
fsqrt
or
sti
iret
vpsllq
loopne
in
clc
out
out
aaa
cmp
fsub
fsubr
iret
fcmovb
leave
test
lret
repz
shl
jecxz
test
iret
shll
fildl
repz
repz
stc
cld
fucomip
shr
xchg
xor
ljmp
fxch
idivb
in
jecxz
jmp
loope
mov
sti
mov
mov
add
clc
icebp
lret
into
xor
ds
aam
stc
out
or
mov
shl
lret
loope
cmp
xor
int
fdivrl
cmp
fsubp
icebp
out
cmp
loop
fmulp
enter
rcl
in
out
lock
fucomi
rcr
stc
aam
out
fidivrl
shr
ret
clc
std
mov
iret
sti
nop
out
iret
out
ret
xor
sub
aam
aad
ss
rcr
iret
mov
aad
cli
std
xlat
enter
loop
xchg
loop
xor
ret
cld
std
fnstsw
cli
int
faddl
fsub
ljmp
sub
into
fld
repnz
xlat
fnstsw
loope
loopne
clc
rorl
call
shl
xor
loop
enter
rcr
pushl
out
fstp
cmp
mov
adcb
sub
int
cmp
aas
out
shr
loop
loopne
mov
leave
iret
in
lret
fmulp
test
cmp
out
fst
cld
icebp
rcr
ret
fnstsw
xlat
cli
in
in
in
xchg
out
call
aaa
sub
jmp
cmp
std
cmp
loopne
std
out
ljmp
jecxz
in
xor
enter
call
fucomp
fiaddl
idiv
sti
int3
movl
add
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
inc
cmp
jle
jge
jl
test
jmp
sti
out
stc
xor
fcom
fdivp
sub
out
aam
loop
loope
jmp
xor
xor
rcr
sti
iret
aam
adc
in
cmp
loope
lret
jmp
xchg
in
stc
hlt
repnz
out
fdivrl
in
adc
rolb
neg
out
loope
aad
enter
clc
in
in
hlt
clc
div
fcmovnb
shl
repz
in
dec
iret
div
stc
xor
out
fdiv
aam
int3
cmp
rcl
fcmovbe
lret
xchg
int3
ret
cmp
jmp
in
divl
repnz
cmp
xlat
fsubr
out
fisttpl
aad
cs
leave
rol
cld
repz
ss
xlat
loope
aad
fst
std
fucomip
vpsubq
addb
lock
into
imul
hlt
repnz
fsub
sarb
cli
mov
ds
fxch
mov
jmp
shl
sar
xor
iret
cmp
test
test
fldl
lret
jmp
cmp
lock
sbb
neg
jecxz
call
loope
leave
xchg
out
xor
shll
loopne
lock
or
or
cli
sub
enter
les
in
aad
cli
loopne
fdivrp
fcom
aad
fcmovnbe
ret
loope
xor
in
iret
in
lret
fdiv
lret
xor
aam
xor
out
fidivrs
cmpl
rorl
or
in
hlt
enter
in
iret
out
cmp
cmp
aas
out
orl
mov
xchg
test
in
sti
xor
cmp
lret
loope
lret
in
test
in
mov
iret
icebp
repnz
xor
out
idivb
cmp
orl
loope
xchg
ror
ss
mov
aas
lock
repz
fdivp
les
jecxz
ficoms
call
cmp
shr
addl
ret
jecxz
mov
fdiv
lret
mov
fildll
repnz
cli
ss
loopne
clc
mov
cld
jecxz
ljmp
xor
ss
cmp
ds
iret
fiaddl
rcl
stc
fcmovnb
icebp
sti
fstp
jmp
in
into
xor
leave
repz
in
fprem1
idiv
ds
ljmp
in
fmulp
cs
shr
icebp
lock
cmp
cmp
shl
out
mov
xchg
std
icebp
lret
out
lret
sub
fld
cmp
cmp
aam
aad
lock
mov
int3
fcmovne
out
ljmp
jmp
lret
lock
enter
iret
sti
into
cmp
out
cld
mov
in
and
das
cmp
lret
in
cmp
iret
cmp
fdivrs
out
std
in
xchg
cmc
call
test
cld
shl
loopne
loope
cmp
mul
cmc
sti
cmp
xor
cmp
sub
xchg
nop
in
adcb
out
lock
cmp
lret
fdivrp
hlt
cmp
cld
stc
test
iret
sti
iret
xchg
int
xor
aaa
fscale
aaa
push
rcr
std
fidivrs
cmp
loope
aam
in
mov
mov
xchg
sub
jmp
iret
out
cld
out
in
jecxz
rolb
aas
jecxz
iret
out
jecxz
into
shrb
out
fldln2
int3
int
aaa
stc
ds
fnclex
flds
idiv
mov
rol
xor
stc
lock
int3
jmp
ljmp
rcl
hlt
sbb
addl
stc
clc
xor
xor
cmp
cmp
ret
ret
fldl
in
cld
in
mov
repnz
xlat
cmp
cli
add
cli
clc
mov
ljmp
out
repz
xor
into
enter
cmp
idiv
ret
test
mov
jmp
rcr
out
lock
out
ljmp
cmp
ret
rolb
iret
into
fucomip
rcr
roll
cmp
aad
aam
jecxz
rcl
std
jecxz
std
fdivr
and
mov
enter
out
not
call
into
stc
loope
cmp
out
idiv
test
in
int3
int
sub
iret
aaa
ljmp
sar
cmp
ffree
clc
aam
mov
incb
repnz
into
leave
cmc
in
xlat
xor
xor
fcomi
shl
lock
in
loopne
fcmovbe
test
lret
int3
jecxz
call
repz
aam
test
cmc
ret
int3
out
loop
loope
cmc
mov
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
xor
jle
jge
jl
mov
out
aad
fcomi
cmp
ss
cmp
cmp
cmp
cli
lret
fninit
stc
fstp
call
jecxz
rol
cmp
cmp
xorl
adc
hlt
in
std
sub
cli
jmp
xor
les
repz
sti
fldlg2
repnz
rol
adc
in
fsub
idiv
mov
jecxz
cld
in
cs
ror
ss
fcomip
xor
xor
hlt
rcr
inc
in
ljmp
xor
iret
int3
ss
in
sti
aad
std
xchg
jecxz
int3
int3
call
ret
int3
loopne
xlat
fldpi
cmp
cmp
loope,pt
cmp
out
in
test
int3
enter
aam
jmp
ss
aad
cmc
in
aas
ret
vcmpsd
nop
repz
das
in
out
out
cmp
lock
aas
fmul
loope
cmp
testl
xchg
in
in
shr
fldl2e
fsubr
aam
fcmovnu
fcmovne
aas
ret
fldl
call
jmp
xlat
fcmovnbe
xor
shlb
lock
icebp
idiv
loop
cmp
jecxz
in
fcmovnu
std
fucomip
sti
leave
in
hlt
lret
cmp
fidivrl
lock
repz
int3
cmc
ret
loope
std
ret
xchg
orb
in
std
cmp
aad
cmpl
loope
xlat
std
fmuls
jecxz
xchg
repz
shl
icebp
iret
shl
cld
jmp
cmp
fnstsw
loop
out
cli
testb
vpsrlw
in
ret
leave
not
fcmovne
cld
test
aam
cli
movl
into
sub
xor
std
std
aas
rcl
fucomi
into
cmc
ret
in
leave
int3
out
test
xchg
ds
in
lock
cmp
sub
icebp
icebp
in
jmp
in
out
xchg
out
out
vpmulhuw
lret
sarb
rcr
repnz
rol
repz
roll
test
in
cmp
cmpl
cli
out
xchg
call
icebp
in
call
ror
fadds
test
xlat
clc
aam
cmp
repz
xor
in
idiv
rolb
aam
fld
jmp
mov
ficoml
rcr
call
aam
idivl
lds
repz
loop
test
in
loope,pt
cmp
in
iret
std
cmp
cmp
ds
lock
xchg
std
ljmp
mov
lret
shll
hlt
aad
xor
loop
xlat
int3
enter
aad
shrb
int
fcomi
xor
aam
clc
clc
fsubr
into
ret
mov
xchg
ljmp
sub
xlat
xor
cld
fxtract
fdiv
inc
test
cmc
aad
test
jecxz
adc
repnz
leave
cmc
leave
into
xor
aad
xlat
test
roll
cli
int
test
jecxz
orb
out
cmp
shr
repz
clc
fprem1
sar
cmc
xchg
filds
xchg
xor
jecxz
ret
leave
xor
cmp
rcr
lock
xlat
jmp
sti
into
into
xchg
aam
jmp
int3
ret
aam
out
fnclex
loope
fmul
aas
jecxz
sub
fdivr
in
xchg
out
lock
cmp
jmp
ljmp
test
out
enter
out
std
in
into
lret
xor
hlt
call
xlat
lret
not
fucom
fcompp
fcomip
in
fsub
rcl
xor
out
aad
rcl
fdivr
rol
hlt
bnd
mov
and
sti
loop
decl
into
rol
cld
std
sar
fildl
rcl
movl
int
fsubrp
in
shl
int3
sar
aaa
cld
sti
lock
rcr
loop
idiv
adc
aam
xchg
mov
out
ljmp
out
fucomi
hlt
hlt
in
sarl
aam
shl
xchg
fsub
iret
dec
mov
xchg
jmp
sarl
fistpll
jecxz
mul
ds
not
fisttps
jecxz
shl
jmp
ss
out
std
fidivrl
int3
cmc
stc
mov
ffreep
test
ret
jmp
cmc
cmc
xchg
out
repz
not
in
fildl
out
jecxz
sbb
orb
ret
adc
fcmovne
call
ss
into
iret
cld
roll
iret
dec
rcll
repnz
enter
into
clc
shl
not
incb
lret
in
jmp
clc
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
icebp
cmp
jle
jge
jl
or
sar
cli
jmp
xor
aam
jecxz
in
out
sti
cmp
loop
adc
faddl
ret
fsubr
xlat
cmp
cmp
sbb
rolb
loop
in
fldl
rol
vpsrld
xor
cmp
cmp
icebp
jecxz
mov
fsubrp
test
cli
lret
shl
enter
into
cmp
test
stc
xchg
mov
xchg
int
xor
rcr
les
lock
cmp
idiv
sarl
fdivr
leave
incb
sbb
sub
jecxz
in
xlat
cmp
loope
shl
fcomip
rol
test
aam
fmull
xchg
xchg
aam
ljmp
xor
clc
sarb
ror
addl
mov
in
xor
f2xm1
lock
into
fcmovnbe
ror
into
fucom
in
mov
lock
nop
enter
repz
aaa
ret
lret
fcmovne
sti
div
in
jecxz
loope
repnz
jecxz
jmp
repz
enter
fcomp
leave
ror
cmp
ret
std
add
loope
jecxz
cld
jmp
in
leave
in
rol
lret
call
lret
loope
fsub
xchg
hlt
loop
xchg
cld
mov
aas
xor
not
ss
jmp
dec
sar
sar
fdivr
mov
enter
cld
out
xchg
out
xchg
shr
iret
test
sarb
aam
jmp
stc
sarb
rol
lret
faddp
out
and
out
out
lret
iret
call
imul
sarb
lret
aas
in
xchg
xchg
mov
fsub
xlat
into
repz
imul
ror
rcl
add
in
loope
mov
in
repz
sub
lock
sti
clc
shl
cmp
loopne
ftst
xlat
xchg
loope
out
xchg
rcl
in
xor
rcl
ljmp
cmp
loopne
loop
fcomp
loop
mov
int3
int3
in
fisttpll
fcom
iret
leave
jmp
cmp
sti
sar
aam
hlt
idivb
fcmovnbe
orl
aad
in
cmp
icebp
hlt
cli
cmp
rcl
in
out
ret
fisttpll
mov
out
aaa
rol
in
idiv
ljmp
int3
shl
aam
div
lret
in
std
fiaddl
lret
sar
lock
aam
repz
int
xlat
out
iret
filds
out
ljmp
shl
aaa
leave
sub
sub
in
hlt
loop
mov
out
icebp
addb
fcmovne
stc
das
sar
ss
cld
rolb
ret
decb
decb
xor
xlat
jmp
aas
ss
fcom
filds
ret
orl
fsubrp
xchg
xor
out
xor
cli
int3
fdiv
cli
aaa
lret
cmp
xlat
fadd
jecxz
testb
repz
mov
int3
aaa
in
xlat
ds
lret
icebp
iret
cld
lock
testl
fcmovnu
lret
out
repz
lock
loopne
rol
loop
aam
std
test
lret
xchg
aaa
loop
out
clc
aad
in
cmp
cmp
out
in
and
xchg
cld
orl
ss
hlt
int3
cld
cmp
enter
xchg
in
mov
into
nop
into
test
mov
sub
jmp
xor
ror
aam
jecxz
ljmp
loope
call
loopne
out
xchg
int3
fnop
in
lds
lock
lock
jecxz
cmc
and
add
fsin
mov
std
cld
xchg
out
xor
ss
idivb
sti
incl
rol
int
in
xchg
xlat
xor
xor
aad
xor
xor
jecxz
sbb
jecxz
fldl
jmp
in
in
lock
cli
repnz
loop
xlat
adc
addl
mov
loope
leave
icebp
shlb
into
lret
lock
in
repz
shl
test
icebp
fsubrp
mov
and
repnz
aad
fyl2x
aad
cmp
shl
test
sbb
lret
mov
xor
sar
out
shr
jecxz
fistpll
rcl
aam
out
clc
out
mov
loope
xor
divb
cmp
enter
jecxz
aad
cli
sub
mov
idiv
std
repz
into
mov
fsqrt
cli
iret
aas
cmp
fst
mul
fstp
loop
lret
out
in
ljmp
fcmovne
into
loope
ffree
fucomi
roll
in
loopne
mov
leave
mov
pop
xor
jmp
int
enter
int
lds
push
cmp
jle
jge
jl
call
das
out
int3
cmp
in
cmc
hlt
icebp
fucomip
in
in
ds
jmp
ljmp
rcl
test
out
cs
cmp
ret
cld
out
stc
mov
xchg
test
fbstp
sti
icebp
idivl
aam
repnz
fdiv
fiaddl
sti
nop
sti
int3
sub
int3
aam
hlt
in
idiv
incb
hlt
cmp
jecxz
enter
xlat
test
in
jmp
out
aam
hlt
fcmovu
int3
int
fsub
divb
in
aam
jecxz
jecxz
repz
xor
leave
sub
repz
repz
ss
cmc
repnz
loopne
testl
ret
int
xlat
cld
dec
fcmovne
std
rolb
fdiv
mov
leave
leave
in
addb
lock
lock
call
fistpll
fmul
xchg
xchg
out
ss
stc
xlat
dec
sar
fcomi
cld
lock
roll
in
in
into
shr
shl
stc
repz
stc
call
fcomip
aas
cld
icebp
cli
lock
fiaddl
fxch
mov
push
xor
in
xor
aam
aam
int
icebp
fcmovb
cli
fcom
jmp
in
loopne
mov
jmp
xor
int
ds
icebp
and
loop
stc
mov
mov
nop
test
icebp
lret
aaa
out
clc
repz
lock
in
lock
ret
mul
mov
leave
loope
mov
cmc
aad
jecxz
stc
cmp
iret
push
cmp
std
stc
loop
std
fsub
mov
mov
jmp
test
enter
jmp
hlt
in
shl
cmp
int
in
clc
fcmovnbe
jmp
lea
mov
loop
enter
in
cmp
into
addb
xchg
loopne
nop
xchg
test
xor
imul
fdiv
loope
std
ret
fdivp
cmp
cmp
test
loope
out
enter
iret
mov
loopne
vcvtpd2dq
call
cmp
fcos
add
neg
in
loopne
out
lret
ss
sarl
shl
int
icebp
fidivrl
clc
out
mov
fucomp
shl
das
lock
fidivrl
int
fnstsw
sbb
lock
xor
cld
fcmovnb
faddl
jmp
repnz
fdecstp
icebp
sti
fcomip
xor
cmp
ds
mov
repnz
and
int3
fdivr
fsub
jmp
mov
icebp
fistpll
test
aam
xchg
fiadds
jmp
test
iret
cmp
cmp
ds
out
and
fadds
inc
mov
lea
imul
int3
ret
jmp
idivl
in
lock
leave
aam
int
in
out
in
in
icebp
lret
hlt
cli
std
aas
not
sbb
mov
jecxz
shr
mov
xchg
test
shl
fcomi
shlb
jecxz
sti
std
stc
repnz
and
test
iret
mov
xor
int3
xor
aam
fbstp
ret
test
fadd
leave
testb
xchg
out
xor
loop
repz
cmp
std
out
lret
shl
hlt
aad
repnz
not
movl
fdiv
lock
aas
cld
cld
clc
faddl
jmp
out
xchg
clc
xor
fnop
lock
ljmp
fsubrp
aam
enter
enter
fnstenv
xlat
aaa
xabort
into
jmp
cmp
test
lock
mov
xchg
int3
out
jmp
das
xlat
lock
sti
out
fstp
aam
out
repz
test
fst
neg
loop
std
in
loope
orb
ret
repnz
int
sar
cli
out
jecxz
fcmovnb
fadds
jmp
xlat
ljmp
in
repz
in
ret
adc
and
fdiv
mov
iret
shlb
lret
cmp
out
in
sti
into
idiv
lock
ret
out
cli
mov
icebp
aad
cmc
xor
cli
call
lock
out
mov
vshufps
mov
xchg
lret
int
fdivrl
aad
xchg
stc
cmc
std
in
jecxz
mov
ljmp
neg
neg
aaa
fsub
jmp
ret
fucomip
mov
lock
not
fxch
fucomi
fdiv
sarb
cld
adc
ret
aam
sub
fmull
call
xor
ljmp
cmp
stc
loop
cld
ret
clc
sti
into
pop
jmp
ds
ror
aad
fistl
loop
jb
sti
mov
jge
jl
out
lret
aam
int3
ror
xlat
fcmovbe
hlt
rcl
cmp
ror
hlt
sar
dec
cld
cld
call
xor
hlt
aaa
stc
ljmp
shl
stc
test
ret
call
mov
or
and
stc
cld
in
aas
iret
in
lret
cmp
ds
jmp
fucomi
call
jmp
sar
fnstsw
cmc
xor
into
ds
in
icebp
testl
fcoml
hlt
clc
lock
xor
in
adc
out
shl
in
ret
jmp
out
fptan
fcmovnbe
hlt
out
call
icebp
test
add
sbb
sub
in
xor
sti
out
inc
jecxz
hlt
jecxz
jmp
in
test
out
int
fld
xor
out
in
int3
xlat
iret
add
shl
rol
loope
cli
fucom
int
fdivr
test
xor
int3
in
int
out
jmp
neg
loope
out
dec
repz
leave
cmp
call
shr
hlt
cli
loope
orb
cmp
lret
mov
jecxz
stc
into
imul
xor
fcmovne
cmp
vpmulhw
aad
test
ljmp
cmc
fmul
icebp
xor
int3
repnz
call
cmc
sbb
test
ret
jecxz
cli
decl
loop
ror
xlat
cmp
shl
hlt
mov
repz
jmp
into
mov
in
ljmp
cmp
aas
shl
cmp
fdivr
out
les
in
loop
mov
rcl
jmp
shr
xor
lock
rol
jmp
out
hlt
div
rcr
clc
sbb
mov
jecxz
mov
fstp
sarb
ljmp
rcr
in
hlt
lret
jecxz
sti
hlt
fcmovnbe
xchg
mov
int
call
jmp
lds
xlat
repz
stc
fsub
fucom
ds
movb
loopne
cmc
lret
jecxz
rol
cmp
and
xor
test
sti
jmp
in
icebp
xor
enter
hlt
imul
div
neg
push
ss
repz
in
neg
jmp
stc
lret
jmp
out
repz
xor
fucomi
aas
sarl
xor
cmp
fmul
std
lea
in
fxam
ljmp
fcmovu
cmp
xchg
lock
repz
leave
int3
in
jmp
test
mov
shlb
out
mov
or
cmp
shl
lds
fsubr
jmp
iret
mov
into
idiv
cmc
aas
repz
aam
ds
test
jmp
int
loope
fcmovb
int
xor
test
fld
ror
shr
rol
cmp
sti
mov
icebp
in
xchg
xor
iret
fcmovnu
clc
repnz
aas
int
fcomp
fucomi
fdivrp
out
test
fiadds
out
roll
sar
cmp
in
lock
repz
incl
fadds
out
inc
aam
jmp
in
call
loope
shr
shl
aad
jecxz
sti
fucom
out
mov
out
std
in
fsubr
cli
ss
lock
std
fadd
fnsetpm(287
orb
into
mov
ficoml
enter
jmp
in
xor
test
cmc
out
lret
call
out
repz
into
in
call
clc
repnz
stc
out
sbb
cmp
out
loop
call
in
lret
cmp
cmp
cld
shr
cli
repz
sar
ret
fadds
lock
not
call
cmc
xlat
loop
test
fdiv
cmc
rcr
jmp
fcmovnbe
out
into
xchg
cs
in
ljmp
lret
in
lock
jecxz
sub
cmc
jecxz
in
xor
fyl2xp1
shr
fcmovnbe
xor
aas
test
ffree
out
in
in
filds
das
call
cmp
hlt
cmp
fstpt
into
call
jmp
loopne
int3
loop
sar
enter
lret
aam
cmp
in
out
repnz
in
call
xchg
orl
cmp
cli
int
in
lret
test
out
jmp
loopne
fcomip
in
cli
xchg
into
loope
stc
cmp
jmp
cmp
sti
loop
rcr
rcr
fsub
aam
vshufps
mov
sar
repnz
iret
xor
aaa
enter
fmulp
in
aas
fcomi
mov
mov
repnz
in
xor
cli
lret
idiv
sti
cld
cmp
fucomi
fisttps
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
xchg
jle
pop
add
in
out
in
out
call
sarb
out
std
xlat
call
jecxz
enter
test
adcl
out
in
les
ss
fxch
rcl
fdivr
aam
jecxz
fnstsw
in
fucomi
shl
mov
fdiv
cmp
cmp
rcl
shl
cmp
fucom
call
in
in
nop
into
jecxz
enter
into
cmc
shl
stc
test
xor
sti
mov
mov
mov
mov
in
jmp
into
cmp
icebp
out
cmp
aam
loopne
ds
lds
fildl
mov
leave
fucom
cmp
fcomp
jmp
loop
incl
mov
int
mov
out
fsubr
std
in
add
in
stc
frstpm(287
loop
cmp
xor
fcmovb
cli
ror
cld
fdivrl
loope
xlat
lock
out
leave
in
leave
fimuls
out
ret
aam
aam
fdivs
rol
cmp
ret
mov
int3
cli
stc
int3
out
fists
icebp
sarl
fucomip
fsubrp
icebp
cmp
test
out
std
fcmovb
in
in
cld
int3
ljmp
stc
mov
repnz
inc
roll
in
ljmp
aam
loop
xor
iret
hlt
xlat
call
loope
jmp
loope
cld
enter
loop
lds
cmp
aad
repz
loopne
std
div
stc
jmp
enter
jmp
cmp
hlt
stc
out
imul
std
icebp
shl
fcmove
idivl
faddl
fisttpll
cs
xlat
fmul
lock
jmp
sub
stc
sar
xchg
int
in
roll
das
sti
hlt
int3
cmp
ror
cmp
fsubr
cmp
out
rol
incl
addb
out
das
xor
cmp
repz
sar
and
les
mov
cmc
fcomi
xor
clc
repz
loope
out
fdiv
leave
les
xchg
fsubp
aam
jecxz
call
cld
rcl
cmp
loopne
addb
in
in
iret
out
out
lret
iret
fmul
out
adc
ljmp
cmp
iret
sub
in
aad
loopne
in
int3
fcos
repz
shlb
cmp
stc
incb
out
into
test
int
int3
hlt
out
cmp
lret
in
in
repnz
lret
cmp
cmp
decb
lock
aas
cmp
ljmp
fcomip
aad
fucomip
mov
jmp
adcl
leave
cmp
jmp
loope
loope
cmc
enter
fisttps
in
in
in
shlb
cmp
jmp
lock
in
fucomp
fisttpll
fldpi
in
sub
int3
xor
into
ss
icebp
dec
xor
loopne
xchg
rolb
fimuls
sar
aaa
jmp
in
fcmovbe
cli
loope
loop
mov
jmp
mov
ret
mov
leave
icebp
rcl
xor
cld
iret
fprem
fld
sti
cld
fcomi
clc
leave
cmc
jmp
out
loope
cli
mov
mov
test
shl
jmp
cmp
cmc
leave
cmp
sti
cmp
rcr
lret
mov
movb
cmp
int
int3
shr
ds
cli
imul
clc
test
lret
test
repz
in
ss
repz
sar
lret
enter
rol
loop
loop
fld
cmc
int
out
test
test
xor
into
aad
cmc
cmc
cmp
iret
cmp
in
aas
loopne
fucomp
testb
roll
loop
aad
fxch
rcl
cld
repz
testl
enter
xchg
mov
fdivrs
call
std
call
loop
xacquire
sar
lock
cmc
xchg
ds
into
sarl
call
jmp
xor
lock
cli
stc
in
ret
in
sti
in
fucomi
cli
lret
adc
ret
repnz
lret
int3
lret
xchg
out
rcl
iret
rcl
xlat
jmp
cmp
sarl
stc
jecxz
lret
in
test
loope
mov
loopne
sarl
sub
xor
in
cmp
rcl
aam
repnz
out
repnz
rolb
loop
loope
loopne
shll
xor
xor
aam
ds
icebp
cli
idiv
orl
leave
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
sbb
adc
jle
pop
add
out
xchg
lock
lock
ror
aam
cld
repnz
cld
cmp
sti
ds
cld
xchg
jmp
loop
repnz
iret
jmp
int
in
repz
shl
cld
out
rcr
enter
fdivr
loop
shr
loopne
in
repz
out
cli
fucomp
sarb
sar
in
fadds
ljmp
adc
xchg
xor
out
in
std
aad
repz
leave
std
incl
sti
xchg
fisubrs
jecxz
cmp
xlat
sar
ss
into
out
out
out
lock
loopne
out
adcb
leave
xor
out
cmp
cmp
idivl
iret
loope
cmp
aam
call
in
rcl
into
ds
icebp
in
cmp
out
lret
jmp
in
and
in
xchg
fidivrl
loopne
lret
int3
fldl
das
loopne
xor
xor
clc
ljmp
xor
lret
mov
fnsetpm(287
mov
fincstp
loop
out
sti
rcr
cmp
stc
loope
ret
and
xchg
xor
cs
cli
lock
fcmovnu
int3
xlat
cmp
and
out
lea
loope
cmp
loop
in
and
shl
aas
repnz
fiaddl
repz
int
in
cmc
iret
call
std
idiv
fcmovu
mov
icebp
rorl
jmp
cmp
idiv
jmp
fdivp
rcr
call
loope
xchg
xchg
loopne
cmc
jmp
cmp
xlat
incb
lret
sti
cld
fcoml
xor
hlt
hlt
shr
sti
out
hlt
ret
into
cli
aam
aas
cmp
jecxz
out
faddl
rcl
xor
iret
xor
leave
sti
in
ljmp
ret
fsub
in
jmp
mov
out
in
fsubr
shl
int3
cmp
cld
iret
aas
or
out
fucomp
stc
ljmp
rol
out
test
incb
cmc
loope
xchg
out
in
ret
lret
test
call
test
ret
mov
cmp
mov
loopne
jmp
shr
out
shr
ds
aas
cmp
enter
xor
xchg
mov
xchg
aas
jmp
xor
xlat
repnz
cmp
xor
aas
lock
xchg
loop
call
out
ret
clc
ss
fcmove
shr
fucomip
ljmp
cmp
in
stc
fcmovu
in
in
shl
stc
jmp
cmp
xlat
sti
cmp
loop
rol
into
test
sub
cld
dec
xor
sub
enter
fcomi
clc
xor
aam
idivl
lock
rolb
call
shl
out
cmc
fxch
fucompp
aad
call
icebp
fsubr
in
mul
lds
lret
xor
enter
int
lret
idiv
sar
faddp
fdiv
mov
xor
call
lret
xor
into
in
hlt
shll
ror
jmp
stc
cmp
leave
out
cli
xlat
in
into
mov
popl
xor
call
fucom
cmpl
leave
decl
mov
iret
mov
jmp
in
in
leave
enter
fdiv
fst
rol
hlt
xchg
sar
xchg
test
ret
xor
call
aad
repnz
loop
loope
aam
fiadds
roll
xlat
into
fsub
ljmp
test
aad
repz
in
leave
out
repz
fst
ror
idiv
out
leave
out
stc
fdivp
xor
jecxz
iret
rolb
out
loopne
jmp
out
jmp
ror
cmp
into
into
neg
test
hlt
stc
stc
xchg
fisttpl
cs
lret
shll
shl
ret
ret
hlt
out
shl
shl
fucomi
fmul
mov
lret
loope
in
in
lret
ss
rcr
xlat
shr
cli
cmp
in
repz
dec
ret
and
repnz
in
in
fprem1
out
int
int
lock
repnz
incb
jecxz
mov
in
jecxz
lret
cmp
int3
loope
neg
into
div
sar
jmp
mov
out
xchg
aas
int
cmp
int3
xor
enter
fldlg2
sub
loopne
rcl
out
mov
fimuls
out
int
enter
out
repnz
ljmp
xlat
loopne
test
inc
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
dec
mov
jle
pop
add
in
cld
fmuls
in
int3
sub
cmc
xor
out
sbb
lock
stc
out
fadd
sub
mov
aam
leave
cmp
in
aaa
cmc
ret
fidivrs
cli
shr
lret
out
call
int3
iret
loopne
in
clc
stc
hlt
ss
and
cmp
out
repz
loopne
int
jecxz
sti
test
loop
cmc
sub
cmp
ljmp
in
fcmovne
ret
loope
lock
out
cli
or
test
out
aam
leave
leave
divb
cld
int3
lock
fdivp
fnstsw
jecxz
std
test
ffree
enter
fistl
in
fxch
xor
lret
sti
int
iret
in
ffree
jecxz
test
shl
iret
sub
sub
out
call
lret
int
cmp
out
sti
stc
shr
in
mov
filds
shl
sti
out
cs
loopne
jecxz
clc
test
repnz
mov
jecxz
out
rol
cs
jmp
lret
test
aas
out
mov
enter
loop
out
mov
lret
shlb
stc
cmp
out
sbb
cmc
rolb
in
enter
repz
ror
das
ljmp
icebp
rcl
aam
loopne
in
xchg
int3
cli
repnz
into
in
jecxz
out
icebp
fnstsw
lock
stc
test
orb
enter
mov
cmc
aad
xor
out
int3
iret
lret
fdivrp
stc
aaa
stc
ret
in
fimuls
roll
faddp
in
iret
jmp
aas
cmp
ret
jmp
jmp
jecxz
fpatan
lds
mov
cmp
cld
repnz
cmpb
out
in
test
in
fcomip
lret
ret
leave
xor
fiadds
cmc
call
mov
repnz
xor
ror
sar
cmp
div
iret
in
fcmovbe
enter
neg
leave
loope
sbb
jecxz
ss
cmp
iret
into
fidivrs
ljmp
fnstsw
jmp
sbb
fcmovu
std
cmc
in
call
fcomp
call
xchg
rcr
cli
test
fcom
loopne
dec
int3
sub
lret
ds
out
loop
out
loop
fdivp
call
ljmp
div
fsubr
lock
test
aas
aas
loope
decl
out
call
cmc
out
sub
out
cmp
div
sarl
in
fnstcw
cmc
sar
in
in
call
in
aad
rcl
enter
out
out
iret
lret
cld
xor
jecxz
addl
cli
mul
mov
hlt
stc
shr
fnstcw
and
clc
jmp
jmp
iret
adc
hlt
out
xor
jecxz
jmp
mul
in
cmp
repnz
roll
idiv
in
int3
out
loope
stc
leave
xor
lret
roll
out
mov
int
out
into
shr
ret
into
leave
xor
cmp
hlt
rcl
jecxz
fiaddl
lret
loope
orl
hlt
loop
xor
cmp
call
xor
call
fimull
shl
out
clc
cmc
cli
aad
repz
loope
fucomip
test
aam
fucom
or
fdivr
ds
out
fcomi
cmp
repz
cmc
in
fiadds
xchg
fucomip
sbb
imul
fsub
xor
cmp
stc
clc
jecxz
in
ret
neg
in
in
mov
jecxz
repnz
xor
aad
push
ds
into
loop
fcmovnbe
cld
jmp
sub
rcll
aad
in
repnz
cmp
in
clc
inc
and
test
call
hlt
shll
cmp
jmp
jmp
loopne
neg
rol
shl
testb
test
int3
int
shl
cld
sti
std
lret
adc
repz
std
lret
dec
cli
fsubr
icebp
shl
in
xor
aas
div
fistpll
cmp
repnz
sub
fadds
rcl
lret
jmp
cmp
aam
cmp
cmp
mov
lret
in
out
lock
loop
aas
ds
xor
sarb
adc
xrelease
enter
loopne
xchg
fcmovne
nop
into
mov
in
in
sarb
xor
fistpll
cmp
iret
shll
loope
inc
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
popf
mov
pop
add
test
xlat
cmc
ret
decl
lret
stc
fcmovnbe
xor
incl
jmp
test
and
repz
jecxz
iret
lret
jecxz
jmp
jecxz
fdivr
ffreep
out
in
fcom
out
std
repz
in
ret
jecxz
fld
cld
jmp
loopne
out
aad
shl
fucom
out
cld
fucom
xchg
mov
int3
xor
call
std
sarl
lock
sarl
cmp
sbb
out
out
int
jmp
xor
lret
lret
lret
aas
clc
fsubr
shr
cld
cld
loope
fildl
incl
cld
mov
in
leave
cmp
loope
into
cmp
cli
in
xabort
ljmp
aaa
hlt
int
in
fmulp
xlat
cmc
ds
loopne
test
test
mov
jecxz
test
lock
xor
int3
fdiv
icebp
stc
cmp
aas
xlat
cld
fld
mov
loope
cmp
sub
lret
xor
fmul
cmp
in
iret
fprem
int
shl
sar
in
in
out
sar
in
lret
sub
lret
xlat
xor
cmc
cmp
in
shl
in
xlat
loop
call
in
cld
lret
in
in
ret
xor
lock
sar
fidivrs
sarl
cmp
stc
test
fdiv
in
in
fiadds
ror
in
xor
in
into
enter
rcl
xchg
fldl
jmp
in
fcmovu
out
not
aad
out
aam
cmp
sar
shl
shl
ljmp
fisttps
lock
lret
out
cmc
loope
addl
loopne
lret
mov
into
ret
lock
iret
xor
cmp
cld
repz
f2xm1
cld
test
mov
jecxz
loop
test
in
xor
ljmp
cmp
cmp
ret
iret
test
lret
mov
lock
in
hlt
cmc
aam
out
in
fdivr
cld
fnstsw
repnz
jmp
out
leave
out
icebp
shr
ror
icebp
xor
in
cmc
rcl
cld
addb
fimuls
ljmp
ljmp
std
in
hlt
cmp
mov
bnd
int
ljmp
test
das
cmp
cmp
fsub
xchg
leave
jecxz
test
cld
adc
int
shl
jmp
call
sti
aam
ffreep
repz
cld
xchg
cmp
in
xor
sub
xlat
fst
jmp
cli
fcmovbe
add
icebp
repnz
fsub
lret
out
out
xchg
jmp
fincstp
in
cmp
aas
roll
in
fisttps
rorl
rcl
ljmp
int3
icebp
fadd
fld
ret
xchg
rolb
aas
vpsllq
cmc
enter
cmp
in
std
aam
repz
fimuls
fsubp
mov
fcoml
loop
in
sti
fdivrs
int3
fdivp
fld
cld
shl
lds
lret
shl
out
xor
jmp
repnz
add
out
aam
in
cld
fsubr
mov
out
xlat
loop
leave
clc
icebp
idiv
fidivrl
loop
rol
cmp
call
icebp
shr
test
icebp
sub
out
in
fucompp
xor
call
cmp
rcr
sar
cli
jecxz
iret
fucom
out
ret
shl
test
fsubr
fyl2xp1
aad
aam
test
std
lret
or
mov
xor
loop
stc
neg
ds
cmc
sar
faddp
mov
out
dec
orb
mul
cmp
cmp
ror
test
cmp
ret
sbb
addb
les
in
repz
ret
repz
in
in
loope
cmp
enter
fstl
stc
rol
leave
call
fxch
jecxz
stc
in
loopne
cmp
int
ror
shlb
div
cld
into
clc
rolb
call
mov
in
in
icebp
idiv
in
cld
cmc
jecxz
in
fsubr
stc
hlt
sub
out
in
mov
jmp
shl
cmc
xlat
rcl
into
cmp
ss
cmc
rol
fdiv
call
enter
sub
les
rcl
jmp
cmp
in
ror
out
sub
aam
leave
call
cmc
lret
f2xm1
jecxz
fcomi
stc
sar
call
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
mov
jl
add
loopne
aam
sbb
ljmp
xor
ljmp
icebp
loopne
cmc
lret
fdiv
mov
out
in
leave
nop
mov
ror
xor
call
loopne
loope
ret
rcl
jmp
aam
mov
addb
loope
leave
not
call
lret
incb
loop
mov
lret
int
out
cld
in
orl
stc
jmp
hlt
out
fsubp
iret
shr
ffree
cli
jmp
std
fcomp
mov
out
or
xor
enter
out
in
fst
into
sar
xrelease
testb
loope
mov
mov
jecxz
shl
rol
shr
cld
sarb
hlt
jecxz
cmp
mov
fmuls
fdivr
cli
lret
into
into
test
xor
in
ljmp
cmp
out
in
int3
sti
cld
fstp
test
and
aad
cmp
lock
ds
shl
cmc
mov
jmp
mov
fimull
ror
xor
fadd
repz
lret
faddp
stc
aas
loope
hlt
sti
enter
jmp
mov
fbstp
hlt
stc
xor
iret
in
cmp
out
ds
shl
fdivr
loope
mov
lock
loop
rcl
das
hlt
ss
call
xor
lock
in
mov
and
shl
out
repnz
lret
fmul
out
fcomi
int3
aad
loopne
loop
fmull
cmp
xchg
ffreep
cmc
ret
ret
jmp
fcos
cmp
cmp
adc
rcl
aas
loop
loopne
in
lret
filds
in
in
out
ss
in
int
fdivr
cmp
call
lret
fsubr
out
lds
cmc
ror
out
stc
repnz
aas
loope
test
xlat
mov
test
int3
rcl
sub
fucomi
fcomip
fnstcw
repnz
cmp
in
xor
fnstenv
ret
lock
cmpb
repz
test
fadd
test
icebp
lock
das
xor
into
clc
clc
cmp
fdivr
fsub
rol
sar
cmp
shl
mov
out
fisttpll
ds
out
fxtract
cmp
ss
loopne
out
mov
in
popl
loopne
ss
cmp
leave
fstpt
fadd
fcmovb
std
std
in
loop
sti
ret
or
adc
repz
sbb
cli
shr
cmp
out
lock
out
xor
repnz
ds
neg
std
fscale
xchg
ret
fmul
icebp
loope
mov
iret
xor
xor
call
addb
in
fcmovnb
in
lret
std
test
iret
in
aaa
divb
cmc
lret
fcmovne
cld
int3
fdivrp
iret
xchg
leave
stc
nop
cld
mov
fnstcw
fldt
enter
rcr
aad
lock
mov
out
stc
iret
jmp
aam
in
out
ss
fcmovbe
out
ss
ret
div
sti
shl
in
cli
test
sub
xor
jmp
leave
clc
repz
ret
jmp
lock
std
jmp
fcmovb
ljmp
xor
loop
shl
ljmp
out
lret
loope
aas
loope
ret
std
enter
div
in
aas
loopne
sti
call
xor
fmull
icebp
int
out
out
cmp
shr
cmp
ds
fdivrp
loopne
imul
out
lret
mov
shl
mov
lds
clc
repz
stc
jmp
into
loopne
test
fcmovnbe
xlat
ds
sti
test
jecxz
lock
in
cs
imul
fdivrl
int
shr
rcl
ret
or
sti
out
cmc
aad
sti
xor
lret
cmp
cmc
rcl
jmp
repnz
out
fcmovnb
orb
int3
rcl
lret
int
cmp
fcomp
std
repnz
loope
lret
xlat
flds
adcb
lret
das
out
lret
fnstsw
icebp
ret
lock
cli
cld
repnz
stc
in
lret
fsubr
iret
or
leave
out
idivl
rcl
fcmovu
clc
std
enter
test
in
out
adc
call
out
aad
leave
divb
sti
int
cmc
shl
repz
incb
jmp
cld
shl
in
leave
in
mul
hlt
out
fstp
fcmovnbe
call
jmp
mov
incb
in
shr
mov
loope
xor
shr
cmc
add
add
ror
aas
aad
iret
rol
adcb
rorb
add
fistpll
fcmovu
adc
fiadds
in
in
leave
ss
out
jmp
int
rcr
aad
loop
flds
jecxz
iret
and
stc
xor
out
lock
aas
jecxz
add
fcomip
in
leave
mov
in
jecxz
ret
xor
fsubr
in
xlat
in
std
repnz
out
repnz
fiadds
fdivr
xchg
shl
out
xlat
ss
xor
repnz
rcl
xchg
sti
clc
fdivr
leave
lret
fcmovnu
decb
in
out
out
rol
jmp
jmp
sarl
out
icebp
cmp
ljmp
xor
ss
sarl
repnz
cmp
aad
faddp
jecxz
and
imul
fsub
xchg
repz
repnz
cld
cli
fyl2xp1
enter
sar
aad
call
imul
loope
mov
xlat
in
aaa
call
cld
repz
cmp
cld
out
xchg
clc
fucomi
aam
out
rol
nop
mov
sub
clc
ljmp
icebp
fidivrl
addl
in
out
push
xchg
jecxz
lret
in
ret
out
in
out
ds
out
in
xlat
aad
cmc
repz
test
test
rol
fdiv
rcl
sar
rcl
jecxz
in
rol
fadds
iret
test
repnz
cmp
in
lret
lock
cmp
testl
shl
int
int
shll
in
lock
in
loop
clc
int3
faddp
iret
std
out
cld
int
loopne
repnz
out
in
fcmovnbe
std
test
fcomip
clc
int
test
out
mov
ret
ret
in
lret
cmp
sti
clc
out
cld
out
fcomip
repnz
out
ljmp
loope
cmp
int
out
lret
cmc
jecxz
out
sbb
cmc
hlt
jecxz
loopne
jmp
ret
ret
xor
xor
fdiv
std
out
fxch
fsubr
bnd
aad
fsub
ret
cld
fucomip
loope
int
xchg
xchg
ss
loop
icebp
fsubr
xorl
aas
addb
jecxz
test
jecxz
out
test
shlb
enter
shl
out
fsubp
cmp
ds
jecxz
jmp
out
enter
lock
cmp
rolb
lock
out
xchg
ficoml
xor
shl
jmp
sarb
sub
ljmp
xlat
aam
icebp
repz
cmp
into
xor
fiadds
lret
lret
enter
iret
jmp
loop
fidivrl
fdivr
ror
cmp
clc
loopne
rol
xchg
flds
out
loopne
fsubp
ret
idiv
into
cmp
std
ss
fsubp
lock
cmc
xchg
shl
ss
test
fcomi
out
std
cmp
fsubr
fisttpll
xchg
int3
out
fcomip
cmp
xlat
out
lret
icebp
fadd
ret
in
ret
loop
jmp
in
call
cmc
call
xor
addb
in
in
loopne
int
jecxz
lock
call
fdivp
iret
ds
lock
inc
mov
loopne
mov
out
in
iret
addb
clc
leave
in
xor
call
int
aad
xlat
ljmp
lret
sar
in
sub
repnz
repz
cmp
fidivrs
loopne
ror
loop
lret
std
ret
mov
aam
lock
cmc
out
lock
shl
mov
addb
fmull
out
xlat
jecxz
repnz
test
sbb
fcomp
clc
in
out
xchg
repz
cmc
cmp
fmul
cmp
xor
faddl
jecxz
int3
lret
test
enter
xor
cmp
into
cmp
std
ror
aam
enter
fildl
into
int3
in
ret
repnz
cmp
in
fldl
xchg
fstp
jmp
shr
fadd
jmp
ror
out
repz
push
cmp
fsub
loope
imul
lret
lret
jmp
iret
test
fxch
enter
lds
jmp
loopne
test
shl
in
in
ss
jmp
fildl
ret
rcl
loopne
xchg
sub
fxch
rcr
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
call
cmpb
add
aas
in
repz
int3
loop
hlt
call
loopne
mov
lret
ljmp
fcmove
int3
cld
cli
fidivrs
cmpb
into
test
loop
out
stc
cli
adcb
rol
out
int
rcl
sti
out
shl
icebp
cld
in
mov
imul
fisttpl
icebp
in
cmp
rcl
dec
fadd
cmp
in
std
incl
ret
in
cld
rcl
jmp
xlat
call
aam
iret
ret
xchg
out
sub
and
iret
xor
sarb
lret
stc
out
aam
icebp
sarb
test
jecxz
leave
test
std
cli
shr
bnd
xor
rcl
sarl
repz
call
mov
mov
mov
lret
jmp
fpatan
cld
aad
repnz
test
mov
fcmovnu
fcmovbe
test
out
out
imul
sar
cld
int3
aad
stc
out
mov
lret
icebp
mov
into
xor
dec
fsubr
rcr
test
shl
loop
shl
xchg
in
mov
into
cmc
loope
imulb
xlat
in
fcmovb
xlat
iret
xlat
fdivr
out
rolb
stc
jmp
out
icebp
std
addl
stc
ss
rcl
cmc
ffree
clc
add
aam
ret
testb
int
xchg
out
les
repz
jmp
cmp
out
repnz
fsub
cmp
faddl
ret
clc
imul
jmp
icebp
ss
repnz
repz
cs
out
repz
loopne
test
out
mov
fsub
test
lret
ds
fdiv
aam
int
out
aas
iret
jecxz
hlt
cmp
fdiv
flds
out
mov
mov
das
jmp
in
aaa
out
shl
ss
loope
cmp
jecxz
fsub
cli
xchg
jmp
in
stc
lock
fdiv
sti
out
jecxz
cmp
ds
sti
xlat
fisttpl
in
xchg
loope
les
repnz
cmp
shl
int
clc
cmc
in
hlt
mov
shl
out
mov
out
in
ret
sarb
cli
repz
cmp
cmp
xchg
add
cld
out
out
leave
in
loop
xor
in
repz
in
int3
xor
xlat
out
xor
out
std
fimull
mov
into
lock
out
fildll
shr
call
hlt
lret
loope
fsincos
jmp
dec
ret
test
ror
xchg
int
cmc
sub
cli
cmp
xor
into
mov
out
lock
loopne
loope
xor
in
ret
jmp
int
fldl2e
rolb
fdivp
clc
jmp
mov
cld
xor
cmc
jmp
int3
out
repz
stc
rcr
movb
in
repnz
out
cs
in
stc
icebp
in
cmp
shl
les
loopne
add
fildl
jmp
out
int3
out
hlt
sti
out
std
std
shl
rcl
xchg
in
orl
hlt
iret
xor
lret
out
lock
xor
shl
xlat
fstpt
out
xor
stc
clc
xchg
mov
rcl
xabort
fdivrs
xlat
shr
out
fdiv
aam
cmp
in
jmp
in
shr
loop
hlt
rcr
test
fiaddl
out
stc
xlat
xlat
enter
out
rcl
les
sub
rcr
lock
inc
cmp
out
ret
fsub
aad
in
cli
lret
lock
cld
mov
jmp
repnz
clc
hlt
xor
cmpl
fiadds
leave
ljmp
adc
in
lock
lret
lret
int
in
loopne
iret
out
aam
repz
leave
xlat
ljmp
repnz
xor
hlt
fxch
aad
clc
cmp
cli
cmc
rcl
rol
out
ret
in
cli
lock
iret
nop
fisubrs
ret
enter
aas
out
rcl
clc
fcmovu
loop
aam
enter
out
out
iret
loope
call
out
hlt
clc
shl
in
lret
cmp
aad
in
neg
test
std
or
mov
in
cld
in
hlt
lock
xor
repz
out
ds
lock
aad
mov
fiadds
ret
mov
iret
xor
rcr
aas
shl
cmp
loope
sti
into
cmc
out
aam
cmc
lock
enter
and
div
faddp
repz
out
ljmp
xor
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
bound
insl
ret
jl
add
in
int
fcmovu
fcmovnu
sar
sti
ret
loope
lret
cmc
out
sbb
xchg
out
aad
aam
cmp
cli
ret
fadds
stc
and
xchg
repnz
enter
cmp
fcmovbe
cmc
in
icebp
sub
cmc
jmp
test
out
jmp
cld
aad
out
fldl2t
int
cmp
in
cmp
out
roll
leave
rcr
out
lret
out
fcmovu
rol
jmp
leave
cmp
fcom
addl
testb
out
repz
xor
fldl2e
int3
lret
cmc
in
cmp
aas
sti
jecxz
incl
xchg
out
rcr
idivl
cld
int3
out
test
fistpll
mul
repz
stc
in
or
jmp
xor
cmp
ss
ret
std
repnz
jmp
ret
fsub
sub
in
jecxz
jmp
cld
in
icebp
in
stc
in
fcmovbe
test
loop
jmp
into
fsubr
loope
rol
lret
jmp
ljmp
fdiv
in
clc
mov
fcmovne
lock
fld
in
iret
aam
leave
cmp
cmp
fsubp
ret
out
fninit
roll
sub
fsubr
int
cmc
xor
repnz
cld
xchg
xchg
lret
out
test
in
xor
lret
xor
int3
ljmp
cli
sar
fucom
in
fiaddl
cld
lock
ret
in
enter
enter
stc
aad
iret
shl
repnz
xchg
lock
mov
out
jmp
xor
hlt
fprem
idivl
mov
ret
ret
int3
xchg
nop
loopne
ds
lret
fldcw
cmc
sarb
iret
loope
aas
aad
stc
loopne
lret
int3
out
iret
fmul
jecxz
leave
lret
fchs
call
fsub
lock
xlat
int
cli
iret
cld
nop
loope
out
ror
repnz
xor
aam
icebp
cmp
cli
fsubrp
clc
cmpl
int3
ljmp
int
out
out
aad
fidivrs
shl
ds
aas
loopne
push
in
iret
jecxz
jmp
ljmp
fucomp
rcl
std
cli
jecxz
cld
mov
and
loopne
repz
hlt
xor
fnstsw
cmp
clc
fsubrp
jmp
lock
fsub
cld
int3
enter
call
imul
std
leave
sti
aam
lret
lret
loopne
loope
leave
enter
test
fsub
lret
out
mov
out
divb
lret
iret
int
cmp
std
lds
xchg
jmp
out
rcr
into
adcb
in
hlt
cli
fst
jmp
cmp
out
cld
cmp
lret
shr
int3
or
in
ds
lret
in
leave
cmp
jecxz
cmp
lock
stc
sarb
faddl
ror
in
xor
cmp
lret
out
fucomi
not
fstp
neg
out
ret
fisttpll
jmp
ljmp
ret
ss
repnz
ret
repnz
cmp
call
out
mov
shr
in
cs
int
fcom
fcmovnb
lret
repz
test
mov
ljmp
cmc
out
aad
repnz
fprem1
fcmovnb
icebp
cmp
out
iret
icebp
ret
cmp
fldl
mov
shr
rolb
xor
out
xor
loop
lock
fadds
out
lret
out
repnz
cli
repz
leave
xor
repnz
rcr
fsub
test
loope
loop
fsubr
sti
cmp
into
int
call
out
jmp
test
clc
repnz
in
cmc
in
aam
repnz
rcr
out
ss
fadds
sub
rcr
xchg
lret
lret
cmp
repz
xor
leave
jmp
test
call
into
shr
xor
vpminsw
fdivr
lock
into
lret
hlt
test
jmp
test
enter
hlt
cli
in
out
cld
xchg
nop
shll
cmp
stc
into
cld
fidivrl
aam
jecxz
testb
rclb
into
test
repnz
int3
icebp
int3
loope
in
neg
icebp
cmp
xchg
test
int
int3
fcmovbe
ss
fdivrs
sti
cli
shl
not
fsub
lret
mov
xor
into
sub
ss
icebp
cmc
out
cli
cmp
fdivrp
leave
fucomi
call
ljmp
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
adc
push
and
jl
out
rcl
ljmp
cmp
loop
stc
faddl
rclb
neg
call
into
leave
repnz
out
fdiv
aas
cmpl
jecxz
loop
nop
cld
jmp
rcl
jmp
lret
fldlg2
incb
sti
or
test
in
jmp
cmp
stc
ror
aam
xlat
fdivp
ror
idiv
flds
loope
xchg
loope
bnd
into
enter
jmp
cmp
sti
or
cmc
test
loop
cli
xchg
enter
incb
ret
in
out
rcl
int3
cmp
cmp
fcmovnu
lock
leave
lret
test
enter
in
int
into
aad
sub
loop
enter
jmp
cmp
std
stc
xchg
ret
mov
orl
lock
xor
repnz
lret
xchg
into
mov
jmp
xchg
fsub
int
jmp
jecxz
loopne
stc
leave
hlt
clc
sti
neg
ss
cli
not
fst
xchg
or
lea
and
xor
ljmp
dec
cmp
test
orb
xchg
lret
icebp
mov
out
fcmovb
xor
sti
cmp
rolb
in
test
clc
std
xchg
movl
out
aam
shl
addb
lret
cld
int
icebp
addl
fcmovnb
cmp
iret
xor
idivb
out
rcr
ret
out
sti
dec
int
xchg
nop
jmp
cmp
int
cli
clc
cli
xor
adc
aad
hlt
test
fcmovnu
mov
neg
fsub
ljmp
int
lret
repnz
int
lock
aad
shl
loopne
out
xchg
lret
cmc
call
in
shr
int
fnstcw
jmp
fildl
hlt
cmc
sti
in
leave
in
stc
fimuls
iret
iret
lds
in
fucomip
int3
sbb
out
stc
loopne
mov
sar
iret
ret
out
fnsave
enter
cld
repz
repz
ret
jmp
test
out
out
out
int3
and
icebp
xor
ss
ljmp
hlt
icebp
in
mov
std
stc
xlat
clc
cmp
test
call
rol
lock
xor
fstpt
cli
fstpt
aam
out
clc
rcr
test
clc
hlt
xchg
add
into
icebp
roll
cmc
xor
cmp
call
fcmovnb
fst
jmp
ret
sar
fimuls
repz
call
sar
hlt
fsubr
ret
sarb
mov
mov
fcmovne
fprem
jmp
and
out
out
lret
enter
int
in
ljmp
fmuls
test
loopne
idiv
xor
cld
lret
cmp
ljmp
ret
sar
out
ljmp
xor
shr
fnstcw
in
ds
loop
xor
jecxz
idiv
jmp
in
mov
out
shl
aam
icebp
leave
in
call
int
incl
mov
jecxz
ret
int
loope
rcl
out
stc
clc
fdivrs
out
ds
rcl
cld
out
sbb
testl
aad
out
icebp
cmc
fld1
out
lret
ljmp
mov
jmp
in
lret
xchg
cmp
hlt
clc
divl
cmp
div
ds
icebp
cmp
mul
test
sub
loop
jmp
sub
int3
xor
cmp
out
jmp
cmp
sbb
hlt
xlat
orb
lea
sub
aam
enter
cmc
aad
loope
fadds
xchg
loop
shl
lock
lret
in
clc
cmc
loopne
xor
test
loop
repz
int
repnz
in
into
cmc
jecxz
cld
cmp
test
roll
call
xchg
loop
jmp
fsubp
test
out
cmp
int
fcmovu
aad
ret
shr
cld
in
in
xchg
hlt
ror
call
fdivrp
cmp
lock
fadds
xchg
fsubrp
mov
out
ljmp
in
icebp
leave
cmp
hlt
idiv
int3
shl
xlat
rcr
mov
incl
or
enter
fidivl
aad
cli
loop
out
mov
fsubr
loop
xchg
xchg
out
xor
in
ret
enter
clc
stc
rol
xchg
mov
movl
into
xor
enter
in
sar
rcl
neg
shl
out
addl
fcmovnbe
std
loope
mov
add
jmp
aad
fstl
idivl
sbb
jl
add
sub
call
ds
fcmovu
fmulp
add
rcr
ret
loop
xchg
loopne
aaa
out
cmc
aad
clc
cmp
out
fstpt
jmp
loope
aad
sbb
flds
ljmp
sub
into
ds
and
loop
out
in
incl
sar
xlat
std
out
xor
test
fcmovu
repz
xchg
ds
lret
test
out
cmp
fucompp
sti
sub
in
cli
enter
rcl
imul
std
xor
cmp
loopne
call
rorl
loope
aad
shl
out
aaa
ss
aam
aad
out
ret
cmp
cld
test
lea
loope
lock
repz
cmp
loop
stc
cmc
mov
or
loop
repnz
repnz
repz
ror
aas
cmp
cmp
cmp
repz
mov
sti
enter
loopne
xchg
fsubrp
fxtract
repz
cmp
cmp
aad
and
sti
xchg
in
jmp
fucom
popl
mov
int
idivl
jecxz
loop
jmp
out
sub
lds
ss
lock
cmc
fnstsw
filds
fld1
xchg
ljmp
addl
ljmp
adc
jecxz
vpsubusb
sti
ret
in
inc
in
in
int
ret
out
stc
cmp
enter
aad
into
in
flds
enter
cld
cld
loope
mov
in
lock
leave
iret
cmp
icebp
out
ds
inc
stc
cmp
clc
mov
ret
enter
in
cmp
sti
repz
fdecstp
mov
int
mov
aad
out
cmp
in
fmul
in
ror
std
jmp
test
xchg
mov
in
repz
leave
lret
jmp
sar
clc
not
rcl
cld
sarb
enter
cld
loopne
jmp
icebp
xlat
cld
ljmp
and
loopne
leave
in
xchg
sub
addl
shr
enter
sti
repnz
stc
hlt
cmc
cmp
std
mov
ret
jecxz
xchg
sarl
repz
out
cli
into
ds
fadd
xchg
test
in
in
jecxz
test
adcl
int3
enter
fstp
ljmp
fcmovb
repz
jmp
in
lret
jmp
repnz
fprem
rol
cmp
jecxz
lock
mov
out
dec
loope
roll
iret
lds
cmp
cmp
inc
fldl
clc
lret
in
loope
in
call
aam
cmp
sbb
loope
fiaddl
int
lret
loop
fildl
loop
jmp
call
shl
inc
xor
cmp
xchg
mov
mov
out
mov
aaa
xor
aam
out
aas
cmc
in
ret
sti
ret
mov
ljmp
imulb
fdivs
rcl
int3
sarb
loope
sarl
aam
cmp
cmp
aam
cli
loopne
icebp
test
in
int
lret
enter
ss
repz
loopne
shr
into
neg
not
mov
loope
in
int3
test
stc
fmul
sti
repz
lret
sti
ss
loopne
test
ds
clc
cli
enter
cld
orl
cmp
out
cmp
mov
cmpb
std
ljmp
imul
cmp
xor
stc
loope
sbb
xlat
xchg
incl
lret
iret
out
xlat
cs
idiv
out
cmp
int3
cmp
cmc
test
stc
iret
fdivr
sti
std
repz
fptan
std
aaa
std
imul
loope
lock
test
fcomp
faddp
clc
mov
ljmp
imul
icebp
lret
hlt
repnz
cld
loop
test
lock
fst
stc
sub
fists
aaa
shl
idiv
not
stc
repz
test
mul
jecxz
clc
ret
jmp
stc
mul
enter
mov
lock
leave
fcmovne
aaa
sti
cmp
fiaddl
sbb
sti
out
jmp
mov
out
out
cmp
xlat
iret
out
enter
sarb
sbb
jmp
mov
xchg
mov
jmp
rcr
in
iret
lock
sti
ljmp
stc
in
les
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
xor
into
pop
xchg
jle
pop
add
mov
int3
int3
cs
rcl
ror
cmc
icebp
out
mov
call
iret
cmc
jmp
cmp
enter
out
fnstcw
roll
xor
hlt
mov
idivl
aad
lret
lret
shr
cmp
fsub
xchg
ror
lret
ror
rcl
cmp
loope
cmp
ret
out
out
out
cld
fst
loopne
repnz
out
rcr
int
xlat
aas
call
addb
cld
cli
mov
fcomi
cld
mov
cmc
sub
out
rcl
repnz
repnz
repnz
cmp
not
in
int3
ljmp
into
sarb
cmc
stc
repz
clc
sub
sti
sti
repnz
ror
loop
addl
cmc
in
lret
out
aad
cmp
cli
loope
aam
jmp
orl
icebp
aad
fcomi
fcomip
cmp
loop
aam
xchg
std
in
stc
out
fsubrp
lret
shl
lret
out
lret
lret
fadd
ret
add
cmc
mov
out
ror
out
int
imull
aas
fnstsw
cmp
cld
fld
repnz
in
in
rcll
vcomisd
ss
in
cmp
cmp
ret
incl
dec
lock
ljmp
xor
ss
int3
int
cmp
leave
testl
int3
in
in
lock
xor
sarb
fninit
lret
ds
testl
xchg
icebp
cld
rcr
leave
in
cmp
aam
xlat
ss
fdivrl
fsincos
test
mul
mov
std
fucomi
aad
div
loop
xor
in
cmp
repnz
sbb
shl
and
and
mov
xlat
enter
aas
lret
cld
aam
aam
enter
and
ret
std
ss
add
fdivr
mov
stc
clc
mul
fmulp
nop
mov
iret
idiv
xor
repz
leave
std
shr
cli
test
ffree
fcmovnu
repz
in
loope
out
fucomi
in
mov
div
out
out
jmp
lret
int
cld
cmp
fstpt
loope
in
xchg
sub
mov
mov
icebp
int3
jmp
xor
cmp
lock
aam
out
hlt
loop
vpsrlq
fiaddl
mov
aam
ror
in
vpaddw
cmp
fsub
jecxz
aas
clc
loopne
rcr
mov
fucomi
call
icebp
repz
xor
cmpl
incl
filds
into
fdecstp
ljmp
idivb
clc
call
ret
xchg
fstp
cld
imul
or
int
sub
sub
test
rcl
cmp
cmp
cli
test
xchg
loopne
shl
iret
lock
int
cli
repz
sarl
jecxz
roll
mov
ret
and
rcl
das
shl
aad
clc
into
repnz
cmp
fxtract
test
shl
out
xlat
iret
fists
das
icebp
clc
cmp
in
fidivs
loope
xorl
loope
aad
hlt
xlat
loop
xlat
out
xchg
mov
int3
xor
in
xor
test
shr
clc
cli
hlt
call
mov
and
in
jecxz
lock
lret
jmp
jmp
hlt
fcom
cli
loope
shr
mov
mov
int
ret
xor
sar
ffreep
idivb
jecxz
test
cmc
stc
ret
or
in
sti
int
in
in
loop
cs
xlat
fld
cmp
fsubp
fstp
icebp
int
hlt
icebp
loopne
out
clc
xchg
hlt
ljmp
cld
cmp
in
in
jecxz
in
test
les
icebp
shl
shl
adc
xor
xor
aas
lret
cmc
cmp
cmpl
in
mov
repz
out
in
idiv
icebp
int
cmpl
ret
fcmovnb
sti
loope
into
jmp
and
out
int3
fcmovbe
cli
out
cmp
in
xor
adc
testb
iret
clc
clc
xrelease
lret
xor
clc
aaa
aam
loopne
ret
shr
mov
test
in
ljmp
icebp
fcomi
leave
call
cmp
sarb
vpsubd
in
sti
shl
xchg
lret
hlt
shlb
in
shl
jmp
cmp
aad
addb
xchg
xchg
fs
add
fs
add
rol
add
inc
jl
add
cli
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
jns
roll
mov
jle
pop
add
fucom
out
nop
out
out
aaa
jmp
out
sbb
xor
in
xchg
loop
fmull
ljmp
out
out
in
cld
fucom
ret
repnz
imul
hlt
sar
in
loop
xchg
sar
out
sub
ss
xlat
cmp
cmp
std
out
cmp
jmp
mov
or
lret
mov
ret
xor
lock
call
rcr
in
test
ljmp
iret
divl
iret
clc
cmp
sar
ret
rol
test
out
cld
fmuls
iret
rol
sti
sti
out
cli
ljmp
fsub
xchg
cli
hlt
decl
and
int
lock
ror
out
aaa
roll
stc
xlat
stc
jecxz
mov
mov
imul
cmc
xor
int
int3
ljmp
icebp
lock
test
fcmovnu
xlat
in
in
cld
mov
aam
xor
lret
sarb
fcmovu
xor
repnz
int3
fmulp
adc
out
loop
loope
aaa
shl
in
repnz
rcr
lock
hlt
aad
jmp
enter
into
enter
lock
into
icebp
loopne
lret
fcmove
cld
lock
in
ds
loop
enter
in
clc
sti
sti
into
cld
test
ret
lret
cli
ss
cli
call
test
aam
ret
faddl
lret
ljmp
hlt
xor
into
std
std
ret
jecxz
loope
cli
repnz
lds
aad
iret
les
aaa
in
cmp
int
fldz
ror
call
fcomi
repz
lret
les
divl
xor
lret
shr
idivl
cmp
test
cmc
jecxz
cli
fildl
leave
mov
sti
aaa
shl
cmp
clc
rolb
fcmovbe
call
fmul
test
fcomp
in
cld
cmc
aad
jecxz
cmp
cli
out
icebp
lret
repnz
rcl
fucomip
mov
out
into
sub
aam
imul
cmp
std
icebp
repz
fxch
fildl
in
leave
xchg
out
loopne
sub
mul
ret
rcr
ljmp
ds
ret
testb
mov
enter
jmp
cmp
in
xor
jmp
or
loope
fsin
out
test
test
aam
ljmp
cmc
loope
rcr
aam
ret
xchg
clc
loope
xchg
mov
in
fdivl
lret
sar
sbb
loop
aam
addl
leave
repnz
loopne
call
iret
lret
in
cmp
mul
into
sti
loope
hlt
call
addl
aad
xor
xlat
cmp
repnz
sti
mov
jecxz
jmp
call
out
das
xlat
cmp
in
cmp
or
mov
in
ret
mov
sti
decl
lret
ss
aaa
icebp
into
cld
cld
lock
hlt
cmpb
neg
shl
jmp
fsub
lret
xchg
call
xlat
xor
lret
xlat
cmc
in
shl
cmp
in
flds
fcmove
testb
xlat
enter
div
sti
aad
in
int
fiadds
mov
xchg
test
fdivrp
pushl
xor
ljmp
fildl
jmp
fsubr
iret
xchg
in
lret
repz
cmp
call
jecxz
ss
rcl
cmc
leave
test
ffreep
ror
mov
in
loop
test
out
clc
loop
test
fsin
sti
enter
orb
in
iret
les
idiv
cmp
cmp
in
loopne
cmc
loopne
cli
lret
loop
fimull
jecxz
in
cs
stc
neg
in
rol
in
fdivr
aas
ds
fisttpll
enter
in
mov
not
std
cmp
int3
loope
xor
loop
cmp
shl
push
xchg
fildl
rcr
shr
ror
lock
int3
out
and
stc
out
leave
xchg
faddp
sti
filds
repnz
loop
out
xor
in
xlat
fistpll
not
cmp
sar
ret
test
lret
jmp
xor
leave
int
xor
cmp
in
repz
hlt
fcmovnbe
test
mov
jmp
jecxz
enter
loope
lock
cld
leave
rolb
test
repz
enter
hlt
ljmp
mov
xchg
jmp
cmp
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
int3
xchg
mov
jl
xor
cli
out
fsub
ss
out
int
into
in
ljmp
shl
cmp
fisttpll
xchg
aad
repz
xor
jmp
cmp
cli
hlt
imul
mov
test
into
mov
out
shl
out
sub
leave
out
jmp
cmp
faddl
mov
enter
std
repz
test
xor
call
cmp
repnz
into
hlt
out
cli
std
mov
loop
in
clc
int3
ljmp
cli
ror
std
cmp
iret
idivl
lret
out
out
addl
push
lret
xchg
aaa
rol
iret
cmp
aas
iret
ljmp
mov
mov
lock
xor
lret
lock
stc
shll
out
fst
ss
out
test
clc
int3
ljmp
in
fstpt
repz
in
call
icebp
rcl
loop
fcmovbe
loop
or
lret
mov
lret
aad
stc
hlt
into
sbb
fcom
in
ljmp
loopne
lret
cs
in
icebp
ljmp
test
test
call
sub
in
loop
icebp
xor
lret
into
rcl
jmp
ljmp
repnz
mov
jecxz
in
xlat
int
cmp
jmp
cmp
ret
cli
enter
les
int3
out
out
ror
icebp
int
out
cld
div
in
hlt
out
fidivrl
cli
sbb
mov
loop
ljmp
cmp
xlat
cmp
ror
push
shl
out
jmp
cli
int3
xchg
cli
int
nop
addb
jmp
sub
ds
xlat
jmp
test
int
repz
cmp
adc
lock
fcmove
fcmovnb
incb
mov
out
mov
clc
xor
fld
ss
cmp
cmp
lret
inc
clc
mov
mov
cmc
in
not
repnz
fucomip
loope
xor
sar
les
fstp
out
xchg
rorl
test
std
cli
ljmp
clc
stc
xchg
or
in
int
cmp
lret
xor
fbstp
icebp
aas
xor
std
rcl
in
jecxz
loope
xchg
decb
leave
loop
jmp
xor
rolb
shl
sti
loop
rorb
fldcw
cli
fsubr
shlb
fcmovnbe
inc
hlt
clc
cli
filds
loopne
in
out
sub
repnz
jmp
cmp
fcomip
clc
fadds
mov
call
not
jmp
cmc
cli
aam
lret
aad
int3
xlat
cli
sti
sti
loope
sti
adc
call
sarb
xor
out
hlt
std
cli
hlt
cmp
cmc
div
aam
orb
icebp
or
iret
xor
clc
ss
add
jecxz
repz
loopne
mov
lret
jmp
lock
mov
xor
cmp
cmp
fmul
ret
mul
cli
out
ljmp
orl
cmp
lock
fcmovbe
lret
or
or
shl
test
jmp
adc
roll
leave
out
mov
sti
fsubr
sarb
out
stc
hlt
iret
aam
xor
cmp
loop
into
stc
cmp
mov
aas
sti
int
lock
cmp
out
jmp
cmc
fcomi
out
shr
clc
leave
dec
rol
jecxz
in
ret
idivb
xor
out
ss
cld
rcl
shr
call
lret
lock
call
clc
lds
sti
stc
fnstenv
in
fldl
cld
loopne
hlt
lds
and
enter
enter
fsubrp
shl
ret
rcl
xchg
test
sti
cmp
lock
mov
mov
shl
int3
in
sti
fucomi
shl
lret
ljmp
ds
test
into
int
shl
out
aam
in
out
not
sbb
aam
rcr
fadd
xchg
xchg
std
out
rol
enter
jmp
ljmp
xchg
clc
jmp
rorb
not
lret
repnz
dec
in
cmp
aam
out
addl
leave
shl
jmp
out
in
not
xbegin
rcl
rolb
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
movsb
jle
pop
add
jmp
frndint
ljmp
shrb
repz
out
jmp
cmc
jecxz
aas
cld
rol
call
xchg
mov
xchg
xorb
ljmp
sar
enter
out
fcompp
roll
xchg
loopne
xchg
test
ret
cs
cmp
cmp
std
jmp
stc
fcomip
fld
fdiv
hlt
std
stc
clc
xchg
leave
icebp
out
jmp
call
xlat
shl
test
std
loope
hlt
in
adc
mov
lret
in
fiadds
repz
out
cmp
repz
sti
out
cli
fucomip
not
jecxz
std
std
mov
out
aam
cmp
xor
sti
cld
cmp
sarb
rcl
mov
mov
rcl
aad
in
aam
lock
icebp
ljmp
xchg
leave
out
loop
repz
sub
fcomi
out
fdivr
in
fsubp
cmp
ljmp
in
loop
jecxz
jecxz
icebp
repnz
into
aaa
loopne
int
in
lds
mov
fsubr
fdivrp
xchg
out
int3
jmp
aad
xor
aam
iret
fstpt
add
shr
aam
cmp
loope
out
les
in
call
lock
jmp
loop
clc
fcmovb
hlt
test
clc
cmp
fnstenv
aad
icebp
lret
cmp
repnz
ds
xchg
xchg
jmp
call
ficoml
clc
sti
call
cli
shr
aad
fcmovb
aam
lret
cli
loopne
lea
out
jmp
ret
hlt
aaa
lret
out
shl
repz
fcmovne
sti
int3
adcl
das
xor
into
out
fsubp
aas
fstpt
ret
stc
ret
call
ljmp
lret
sti
aad
rcl
int3
into
lret
test
in
cmp
sti
int3
sti
mov
test
out
xlat
cli
cmp
in
repnz
into
loope
in
repnz
add
cld
std
fildl
enter
xor
into
clc
jmp
jecxz
cli
idivb
out
leave
test
ror
mov
sar
rcl
aad
int
jmp
cmpb
addl
lret
cmc
lret
jmp
iret
aaa
rcr
rcr
rol
neg
fdivr
aam
fsub
clc
clc
leave
lret
in
xchg
in
enter
cmp
fidivrl
fmulp
lret
div
cmp
cli
fsub
leave
xchg
clc
loopne
or
in
ror
in
das
fdivrl
cld
std
out
cli
fcomp
jmp
rcr
fcmove
clc
in
out
mov
shl
sub
xlat
out
cmp
lret
fidivrs
cmc
out
repnz
ffree
enter
loopne
jmp
loopne
in
mul
repnz
call
rcr
sbb
not
in
cmp
jecxz
in
jmp
hlt
mul
ljmp
enter
std
fistpll
ret
fdiv
call
iret
jecxz
repz
rol
cmp
ljmp
iret
int
loop
jmp
fmull
jmp
jecxz
in
aad
lock
rcl
cmp
leave
shl
aad
out
sar
cmp
call
fcmovnu
in
and
ret
in
out
cmp
cmp
enter
loopne
shl
std
out
jmp
cmc
xchg
xor
lret
in
enter
fcmove
test
cmc
ret
sti
int
fucomi
fucomip
mov
jecxz
lret
ds
hlt
int3
not
adc
repnz
aad
fdivr
clc
in
loopne
xorl
cmp
shr
jecxz
rcr
mov
ljmp
nop
mov
test
ljmp
std
cmp
aad
fdivrp
xlat
jecxz
rolb
loop
cld
repz
cmp
enter
icebp
loope
sti
aas
sti
fdivrl
roll
loope
jecxz
fcomip
fimuls
jmp
xlat
out
hlt
xabort
ret
xchg
ret
fucomp
orb
repnz
ret
enter
enter
not
sar
fldl2t
ret
jmp
into
fmulp
xchg
ds
leave
jmp
leave
xlat
fcomi
in
xlat
div
fndisi(8087
fmulp
fld
jmp
cli
mov
repnz
cmp
in
ss
in
cmp
ds
lret
xchg
jmp
loopne
jmp
xchg
loopne
out
rcr
out
repz
aad
out
iret
lock
loop
decb
les
xor
fcmovnu
ljmp
neg
fidivrl
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
cli
fcmovne
mov
out
test
xchg
mov
out
jmp
imul
iret
repnz
fst
mov
repnz
fiadds
rcl
icebp
sti
shl
icebp
ljmp
hlt
fiadds
stc
loopne
int
leave
cld
mov
hlt
sarl
test
call
cld
cmc
std
aam
xchg
ljmp
ljmp
mul
out
call
into
fst
aas
repz
clc
fistpll
test
out
xchg
call
shl
cs
into
in
jmp
filds
mov
loopne
cli
mov
fmull
sti
xor
cmp
int3
repz
in
xchg
in
test
loopne
lock
sar
shl
jecxz
cmp
out
ds
ljmp
cmc
out
call
sbb
loope
das
cmc
in
ret
aam
xlat
cmp
fcmove
loope
ds
loop
fcmovu
xlat
test
into
iret
fnstenv
lret
std
shl
jecxz
repz
loop
lock
repz
roll
aam
aam
stc
ds
out
in
loopne
xchg
call
clc
xor
sar
std
shl
aas
rcr
int
cld
adc
rcr
leave
fsub
decl
das
loope
int3
fidivl
lret
cmp
out
out
out
lock
cmc
in
ds
into
loopne
int3
jmp
mov
xor
in
int3
cmp
xlat
lret
xlat
xorb
cld
ret
loop
xlat
in
in
mov
addb
xor
xor
enter
int
ljmp
addl
in
lock
repz
ror
fst
fcmovbe
int3
or
shl
aam
xlat
not
jmp
xchg
jmp
loopne
jmp
jmp
out
shr
hlt
mov
lds
repz
jecxz
in
in
enter
fiaddl
hlt
movb
lea
fnstcw
out
cmp
sarl
shl
cmpl
out
std
in
mov
fdiv
mov
into
out
in
ret
rcl
xor
hlt
std
iret
out
cld
xlat
cmp
loopne
rcl
xlat
jmp
loop
in
in
fdiv
aaa
vcmpsd
ror
ljmp
xchg
test
jmp
fildl
imul
jmp
xor
hlt
sti
xor
aam
fadds
std
int
loop
xchg
shl
repnz
repz
ljmp
cmp
mov
nop
int
ror
in
out
enter
jmp
aas
aad
test
in
sbb
loop
in
in
cli
cli
lock
int3
ss
std
cli
out
ret
in
loopne
shl
aam
sar
in
mov
shr
faddl
shl
xor
idivb
out
fdivp
ds
fdivr
out
in
xchg
in
addl
aas
ss
cmp
adc
out
decb
loop
fldl2e
cmp
out
stc
sti
aad
ss
into
sti
test
enter
repz
jmp
std
shr
shlb
sarb
xchg
loope
fsubr
fsubr
push
icebp
into
jmp
jecxz
cmp
not
aas
int3
not
or
ret
stc
loope
in
fsubp
loop
ljmp
cmp
and
jmp
leave
out
out
std
std
xchg
enter
lret
fcom
fnstsw
fidivrl
idiv
stc
icebp
stc
ds
xor
clc
loop
rcl
call
ret
sarl
int3
rcr
test
xchg
ret
sub
clc
cld
fcomip
call
shl
sar
stc
sar
sti
cmp
filds
in
test
test
xchg
ljmp
xor
stc
div
std
ret
mov
cld
idiv
loopne
lret
enter
loopne
out
rcr
leave
ret
idivl
out
std
loop
fsqrt
add
inc
aam
sbb
xchg
fsubp
call
out
repnz
cmp
xlat
mul
in
xlat
ret
fcmovnb
out
fdiv
xchg
in
shll
div
out
lock
sbb
hlt
sti
leave
div
out
lret
enter
int3
ror
cmp
int3
enter
jmp
into
rolb
loop
int
sbb
xchg
adcb
aaa
std
cld
cmc
cmc
int
shl
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
loopne
sub
jl
cmp
incl
ljmp
in
call
jmp
xor
loope
aas
fiaddl
cld
stc
mov
fisttpl
sub
repz
repnz
enter
fcmovnbe
lret
iret
out
fptan
test
int
jmp
in
les
enter
fdiv
enter
xlat
aas
fdivrp
ret
call
addb
in
enter
xor
ljmp
out
cmc
cmp
idiv
std
cmp
std
jmp
lret
lret
fisttpl
ftst
loop
jmp
ss
aaa
neg
sti
hlt
rcl
idiv
hlt
mov
leave
lock
lret
lret
int3
icebp
leave
loopne
sti
and
out
aam
fsubp
clc
sti
std
call
out
xchg
rol
cmp
out
clc
cld
idivl
fstpt
call
movl
lret
fptan
lret
jmp
int3
roll
call
out
sub
out
xlat
ss
ret
icebp
out
loope
int
cmp
loop
stc
fimull
in
jmp
test
xor
cmp
cmp
rol
neg
loope
test
or
out
test
sti
mov
or
mov
icebp
in
cmp
adc
hlt
test
jmp
mul
in
aad
enter
into
std
xor
cmp
imul
fdiv
aas
in
mov
in
adc
shl
icebp
ret
sar
fmul
fst
aad
inc
faddl
sbb
lock
fstl
aam
aad
stc
fcmovnbe
int
cmp
in
fdivr
shl
cmc
test
aas
loop
std
sti
cli
jecxz
hlt
sarl
int3
fcmovnb
fcomp
out
enter
icebp
shl
roll
inc
int
flds
lret
leave
aam
in
sarb
aaa
std
cld
fcmovnu
cld
ret
out
cld
std
sti
jmp
call
aam
das
in
clc
cmp
jmp
icebp
hlt
jecxz
into
neg
cld
fdivrl
mov
icebp
std
cmc
out
les
call
leave
cmp
in
imul
and
repnz
incl
jmp
aam
neg
out
repnz
jmp
idivb
fcmovnbe
icebp
mov
loopne
lret
into
sti
loope
orl
lret
add
out
loopne
mov
fsubr
or
jecxz
aam
fcmovb
fdivr
rolb
cmp
ljmp
leave
xchg
test
ror
fdiv
fstpt
int
in
cmp
out
clc
sti
in
aas
fadds
xchg
mov
jmp
in
loop
cmp
jmp
ret
in
test
test
int3
in
fmull
aaa
lret
clc
shlb
int
xlat
aam
ret
stc
aam
jmp
stc
fucomip
into
loope
xchg
leave
int
xor
fdivr
in
vpsubusw
repz
cli
std
and
ret
in
ffreep
div
ret
cmp
repz
out
aad
in
loop
mov
mov
shll
bnd
xor
in
loopne
repnz
shl
enter
call
jmp
in
aad
int
fdivrs
xor
lock
out
cli
fdiv
sar
movl
call
cmp
lret
fdivrp
shlb
shl
in
xchg
addb
loope
xor
icebp
shl
iret
aam
out
out
cmp
cmp
std
out
addb
ljmp
test
in
xor
lret
int3
leave
into
icebp
aam
idiv
call
in
mov
cld
mov
call
out
out
divb
fmul
sub
loope
movl
ljmp
out
rcl
xor
aad
cmp
sarl
rcl
cmc
aad
ret
enter
loope
shl
xor
ss
hlt
imul
repnz
rcl
cmc
hlt
out
jmp
cld
xlat
mov
in
out
xchg
ret
ror
aam
xor
cmc
hlt
loope
xlat
lds
hlt
or
fcmovu
out
out
repnz
ss
sar
out
lret
roll
cmp
nop
cld
jmp
out
out
in
les
bnd
and
add
fdivr
lret
clc
jecxz
fxch
into
mov
in
xor
cmp
in
leave
xor
jecxz
out
ret
testl
test
sti
out
sar
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
pop
inc
imul
sub
lock
cld
ret
int3
loope
fdivp
stc
int
out
ss
stc
ds
ds
ret
stc
mul
out
fmulp
jmp
xchg
lock
lock
stc
loope
fiadds
aad
xchg
mov
in
mov
in
sarl
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
