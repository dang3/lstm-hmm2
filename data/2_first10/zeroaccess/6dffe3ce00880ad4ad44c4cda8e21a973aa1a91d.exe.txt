push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
dec
cltd
jle
jle
mov
jle
into
xlat
cmp
pop
add
push
imul
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
ret
or
aam
out
sbb
test
andb
lahf
popa
jno
push
cmp
mov
sub
cmp
scas
sbb
rcr
enter
xchg
add
inc
dec
sbb
pop
push
lret
mov
dec
mov
in
test
addr16
std
sbb
faddp
xor
adc
fwait
sbb
fmull
inc
add
popf
ja
jne
xlat
sub
mov
scas
dec
sub
push
icebp
jmp
and
idiv
add
ret
and
outsl
sti
enter
push
clc
add
fstpt
and
lods
loope
std
mov
negb
cltd
jae
cmpsl
mov
test
cld
bndstx
mov
aas
scas
and
jo
push
mov
jno
movsb
pop
fdivrl
andl
push
aam
mov
iret
and
loopne
orl
in
fiadds
cmp
lea
cmp
add
sbb
add
add
jg
inc
add
push
add
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
jg
jle
jg
jle
clc
mov
dec
out
adc
cmp
test
divb
nop
mov
scas
and
imul
inc
popf
pop
call
xchg
cmp
dec
into
pop
push
xor
fs
in
ss
iret
daa
jne
in
xchg
adcl
jecxz
cmp
xor
clc
or
and
pop
shrl
cltd
rcll
or
daa
pop
in
and
jbe
dec
ljmp
pusha
shlb
dec
jb
push
out
jecxz
cmc
call
add
jl
lods
dec
cmp
jle
cmc
cmpsl
nop
out
rcll
add
xchg
xchg
or
adc
outsb
sub
fcoms
mov
jb
lret
or
push
testl
push
out
rcll
sbb
xchg
mov
fiadds
and
push
mov
loope
xchg
shll
cld
jb
lods
sbb
dec
add
xchg
aas
and
btr
inc
xor
jp
ret
in
movsb
insb
cmpsl
imul
rolb
adc
stos
packuswb
outsb
subl
cltd
roll
and
inc
adc
inc
sbb
ficoms
push
pop
loopne
xor
shlb
aad
nop
mov
pusha
inc
or
movb
into
cld
adc
popf
push
or
mov
cmp
xchg
int
push
fldpi
inc
mov
jbe
sub
adc
out
push
fwait
roll
push
xchg
push
adc
arpl
inc
or
add
or
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
outsl
dec
sub
jns
jle
jg
jle
addb
dec
pop
mov
jge
cmc
add
outsl
jmp
xor
inc
jno
add
jg
stos
sahf
out
test
mov
stos
push
cmp
cmp
js
sahf
mov
cmp
xor
sbb
adc
int
sbb
xchg
sarl
scas
push
ja
inc
out
notb
mov
pop
imul
add
cs
jne
and
push
repz
rcll
scas
jp
adc
aam
push
jmp
push
pop
mov
test
add
aad
ret
cmp
dec
test
push
fstps
mov
push
jp
xor
movsl
xor
flds
mov
xor
loope
fcmovne
mov
xchg
xor
fsub
cmp
sbb
fisubl
xor
sahf
insl
in
rorb
lret
int3
mov
sub
mov
adc
sar
das
lds
movsb
in
sub
dec
xchg
push
mov
je
pop
fldl2e
in
or
cmp
mov
xor
out
jp
dec
pop
dec
dec
mov
mov
pop
adc
rclb
push
je
mov
in
mov
cmp
mov
dec
pushf
pop
lods
jle
fiadds
rclb
mov
cmc
stc
hlt
sub
lret
fs
cmp
jnp
aaa
push
pop
stos
inc
xor
test
cmpsl
rcl
push
gs
das
das
and
js
push
mov
cltd
lret
or
fcmovne
jnp
out
jp
pop
dec
sbb
jne
mov
or
jmp
or
popa
sbb
popf
push
sbb
jle
jg
jle
lahf
fsts
mov
adc
jo
aam
inc
or
mov
jmp
iret
decl
mov
jp
int3
mov
arpl
enter
ror
and
dec
mov
push
test
inc
cmp
lcall
or
dec
fstl
or
aad
cmpsb
xor
sub
fistpl
shrb
jge
jno
push
jb
subb
fwait
mov
stos
mov
push
sbbl
add
and
ds
test
out
or
std
or
shr
add
movb
push
pop
aad
outsl
test
clc
insb
jmp
lock
leave
pop
lret
imul
fs
add
push
sub
sbb
push
rorb
loopne
adc
cmp
cltd
and
lds
fadds
mov
loopne
bound
pop
jbe
add
lods
imul
enter
jmp
push
and
mov
fsubrs
sti
ja
scas
cld
jno
xlat
xchg
std
sbb
push
cmp
imull
xor
dec
adc
loope
adc
aam
lahf
pop
pop
push
andb
sbb
gs
mov
xchg
push
inc
and
sti
imull
data16
pop
loopne
push
outsl
ljmp
push
icebp
cmc
xchg
pop
cmp
pop
repnz
inc
outsb
outsl
clc
loopne
out
cmpl
sub
aad
dec
add
dec
incl
lock
xchg
pop
mov
xchg
mov
cltd
xchg
xor
mov
inc
or
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
loop
push
add
jle
jg
jle
adc
nop
jecxz
pop
dec
add
int
into
inc
mov
push
leave
dec
mov
or
add
in
pop
mov
call
out
sbb
push
and
mov
cmp
inc
cmpsb
xchg
cwtl
mov
dec
dec
pusha
push
and
cmp
enter
pushf
cmpsl
gs
mov
cltd
fwait
in
push
jno
sbb
repz
shlb
jg
popf
pop
sbb
mov
cmpsb
xor
cmp
adc
jb
pop
xchg
adc
fs
inc
jge
addr16
test
imul
jl
push
popa
add
jno
aam
popa
push
mov
jmp
xor
clc
push
in
mov
sbbl
push
mov
mov
in
outsb
cmp
rorl
push
mov
sti
cmp
shl
mov
dec
call
imul
in
inc
adc
pop
adc
sub
push
hlt
mov
mov
mov
sub
push
shll
mov
in
lahf
pop
xchg
icebp
pop
daa
ja
ret
and
outsl
out
cli
pop
je
adc
dec
inc
mov
jbe
jecxz
and
sub
das
cmp
mov
jg
mov
leave
loope
add
and
xchg
daa
sub
mov
mov
pop
inc
dec
std
pushf
lods
sbb
adcl
int
xchg
out
push
cs
dec
in
fucom
repz
in
cli
es
int3
mov
sbb
test
or
shrb
aas
jge
in
dec
jnp
mov
mov
mov
mov
movzwl
add
jmp
push
mov
test
data16
pusha
mov
jle
mov
jle
mov
movsb
sub
inc
add
sub
fwait
out
ss
pop
sbb
gs
sub
push
xor
jbe
subl
cmp
sahf
mov
rcl
xchg
or
repz
jg
push
orb
js
fistps
push
xchg
fcoms
pop
adc
in
and
outsl
or
sbb
add
inc
mov
pop
iret
in
xor
in
rclb
int3
fidivrs
pushf
cli
lds
add
insb
loop
inc
ss
das
test
in
add
push
out
ss
fnstcw
xor
js
sub
mov
je
cmp
les
fldenv
fstl
push
enter
xlat
fldl
cmp
rcrl
cmp
sub
mov
xlat
pop
mov
xor
loope
es
lret
jp
xchg
ds
inc
std
xchg
aad
and
jmp
ret
pop
fprem1
pop
cmpsl
arpl
xor
in
sbb
xor
dec
movsb
pop
bound
push
sbb
mov
jnp
stos
push
dec
or
pop
xlat
inc
fcompl
push
rol
pop
das
jg
inc
lds
dec
in
addr16
adc
mov
or
leave
and
inc
fidivrl
lock
mov
push
ret
lahf
mov
and
addb
sub
or
adc
es
inc
subb
loopne
rorl
popa
data16
in
add
mov
outsl
dec
push
scas
push
mov
or
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
inc
dec
mov
rolb
jle
jg
jle
sbb
ja
mov
test
dec
and
xlat
and
outsb
mov
loope
inc
cs
inc
mov
addr16
cs
xor
rorb
cmp
out
clc
pop
sub
js
push
scas
xor
or
mov
mov
in
cmp
jns
adc
push
lods
adc
mov
outsb
sub
cmpsl
lock
cmp
fidivrs
ja
sti
sub
pop
add
adc
jle
add
hlt
pop
or
fdivs
insb
push
lds
cmc
jmp
call
push
adc
push
push
add
jg
clc
bound
nop
push
fbld
into
and
cmp
push
lahf
xorb
insb
jns
out
nop
imul
and
cmpb
fidivs
push
sub
lods
sbb
pop
dec
jae
sub
sub
dec
sbb
int3
in
adc
mov
push
loope
cmp
sub
aam
add
fdivrs
loop
pop
jmp
ror
test
imul
dec
aas
int
repnz
fldcw
sti
scas
mov
ja
stos
imul
mov
outsb
imul
outsb
int3
daa
incl
mov
fisttpll
repz
pop
mov
popa
clc
ficoml
sub
scas
xor
out
rcrl
shll
in
or
je
jae
push
stc
lds
jge
ficompl
pop
jno
adc
and
test
add
pop
les
std
aaa
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
sbb
jle
mov
jle
test
iret
outsl
pushf
fisttps
sbb
je
xchg
xor
xor
jp
into
pop
aaa
mov
scas
fldl
stos
cmp
shlb
dec
loopne
mov
mov
cmp
cli
pop
cmp
xor
jg
adc
popf
hlt
hlt
ja
pop
or
mov
mov
mov
pop
sbb
pop
mov
xor
mov
in
pop
mov
push
lea
loope
cs
gs
shr
sub
xlat
in
pop
jecxz
in
adc
adc
push
shrl
shll
and
xlat
push
cs
jecxz
lcall
aaa
push
or
ljmp
clc
pop
mov
popa
les
mov
dec
or
push
in
lds
or
dec
cmpsl
filds
imul
lock
xor
stc
ficomps
fsubl
aam
or
mov
out
mov
mov
and
push
loopne
xor
stos
or
mov
mov
daa
mov
fidivs
stos
sub
sarl
les
call
mov
pop
lret
sbb
push
and
test
push
into
and
sub
int
popf
jmp
and
movb
test
xchg
xchg
mov
ja
and
add
sahf
or
sub
push
nop
xor
and
mov
xchg
testl
mov
sub
jne
js
push
pop
cmpsl
push
rcrl
lea
aad
fldt
add
and
roll
sahf
inc
add
insl
lret
push
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
mulps
mov
jle
jg
jle
shll
jg
push
icebp
mov
push
popf
adc
pop
and
popf
sub
mov
jmp
pop
or
test
addr16
mov
xchg
cmp
dec
fcoml
cmp
cld
fcoml
sbb
xchg
jp
aas
ja
mov
cmp
out
repz
push
mov
or
and
repz
inc
pop
scas
je
clc
mov
sub
lods
xchg
cwtl
loop
xchg
lsl
outsb
dec
lahf
scas
idivl
in
push
sbb
mov
insb
imul
clc
testb
mov
pusha
push
fildl
push
jge
cmp
cmpsb
pop
jl
inc
dec
push
les
dec
cli
sub
mov
cld
jno
in
mov
jnp
dec
cmp
fisttps
shll
pop
push
cld
push
ret
rcrb
mov
push
movsb
jnp
addr16
mov
jmp
sarb
mov
sub
push
js
test
daa
dec
mov
sbb
xlat
xchg
cmp
repz
cs
pop
loope
dec
gs
xchg
mov
daa
mov
jbe
mov
fdivrl
dec
in
dec
pushf
repnz
or
andl
inc
orl
dec
aas
and
test
xor
push
fs
inc
rol
mov
sub
mov
gs
and
dec
icebp
ljmp
xorb
fimull
sti
es
jns
jo
icebp
cwtl
imul
loop
loope
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
imul
iret
cmpsb
je
pop
loope
outsb
nop
icebp
gs
add
push
out
rcrb
adc
test
call
xchg
pop
jo
fistpll
add
cmp
push
lret
je
mov
push
bound
dec
jne
cmpsl
icebp
sbb
out
icebp
cld
addr16
xchg
aad
jecxz
cwtl
popf
cmp
mov
iret
cmp
dec
dec
sbb
loop
add
ret
inc
cltd
sti
add
mov
frstor
mov
xchg
adc
mov
sbb
mov
shrb
in
fs
sub
jnp
aam
and
call
dec
fimull
out
sbb
repnz
and
jnp
outsb
leave
sbb
idivl
sahf
jno
enter
fstpl
jno
das
lret
flds
rcll
mov
mov
fcmovnu
xchg
mov
mov
pusha
in
bound
pop
addb
add
xlat
cwtl
sub
xchg
lahf
mov
push
stc
jo
cwtl
or
movsb
insb
or
and
sar
movsl
push
cmp
and
mov
mov
jb
sahf
mov
cmp
jbe
jg
iret
jg
fmuls
dec
fmull
bound
fistps
mov
xor
jl
out
xor
in
xor
jno
pop
stos
add
jne
dec
movsl
mov
jmp
add
clc
sbbl
xchg
jp
repnz
fmull
pop
dec
lcall
jge
icebp
lock
daa
pop
pop
scas
fidivrs
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
clc
test
and
jle
mov
jle
sbb
cltd
xor
mov
sarl
or
dec
mov
loopne
cmpsl
push
ja
adc
stos
outsb
cld
pusha
fs
lods
arpl
daa
xchg
xor
pop
dec
hlt
xchg
das
loope
jecxz
sub
pop
add
sub
fisubs
xchg
and
bound
int
xlat
stos
dec
xchg
sbb
insb
mov
and
sti
sub
sub
and
in
and
mov
sub
cmp
fstps
fimuls
outsl
loopne
pushf
adc
aam
cs
mov
inc
ja
adc
jae
pop
cmp
and
loop
push
scas
clc
cs
xchg
movsb
test
addr16
push
cwtl
ja
dec
mov
and
sub
dec
sub
push
pop
pop
outsl
push
cmp
cltd
lahf
and
shl
int
loop
adc
adc
fstps
in
cltd
movsl
and
dec
pop
mov
scas
stos
mov
orl
js
stc
dec
push
inc
fnstenv
aad
arpl
adc
adc
sbb
xchg
jo
inc
mov
adc
gs
sbb
sbb
push
sbb
in
cltd
sub
in
cmpsb
xchg
push
xchg
notl
ds
test
xchg
sub
das
stc
jno
xlat
je
out
pop
jb
inc
push
mov
mov
pop
rcl
fs
sti
psrlw
cmp
dec
jnp
sbb
outsl
lea
dec
mov
jp
add
outsl
sbb
xlat
mov
xor
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
sbb
dec
push
or
push
jg
jle
stos
mov
sbb
jl
mov
repz
movsb
fldcw
sub
in
mov
popa
je
pushf
sub
pop
out
jecxz
push
xorl
jle
cwtl
adcb
lcall
sarb
jp
jae
jmp
or
xchg
mov
fists
jecxz
ljmp
dec
in
lret
idivl
mov
push
out
ret
mov
mov
adc
and
in
ds
push
mov
sub
mov
std
adc
dec
popa
arpl
pop
mov
jg
in
push
mov
sub
shll
sub
scas
adc
push
dec
jae
int
xor
adc
jno
lods
loopne
fidivs
mov
inc
icebp
sti
xchg
mov
cltd
hlt
cli
xor
push
stos
pop
mov
addr16
enter
pop
jo
dec
arpl
jmp
loopne
or
test
shll
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
fsubrs
cli
jae
jle
push
jg
jle
pop
jo
out
or
sbbl
pop
cmp
repz
andb
icebp
mov
imul
fnstsw
sahf
dec
xor
or
mov
sub
or
pushf
and
rorb
mov
pop
inc
pop
push
rcrb
xchg
add
xchg
mov
sbb
dec
leave
add
adc
and
lcall
or
lods
popf
leave
push
loopne
ss
inc
leave
add
push
sbb
movsb
mov
test
sbb
add
sti
mov
dec
jle
fcoml
fisttpl
mov
xor
lcall
imul
xchg
xchg
add
mov
inc
jg
mov
jno
mov
std
jge
fwait
jo
int
filds
xor
scas
fdivs
aaa
rorl
xchg
cmpl
xor
outsl
aad
xor
mov
pop
imul
dec
xchg
test
cwtl
xor
jge
or
hlt
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
mov
adc
jle
push
jg
jle
cwtl
pop
sarl
dec
xchg
push
xor
and
lcall
mov
lods
sbb
sub
fcmovu
and
xlat
ret
es
dec
dec
iret
inc
xchg
xor
mov
pop
adc
fs
mov
adc
aam
fxch
shl
shll
pop
push
sarl
into
add
dec
add
and
mov
test
xchg
sbbb
adc
pop
mov
les
add
fs
jo
pop
sbb
cli
in
idiv
lds
xor
xchg
push
aaa
add
or
ffree
push
flds
mov
insb
out
dec
jns
cs
loopne
cwtl
decb
mov
shlb
mov
ret
and
test
arpl
out
adc
fsub
mov
negl
lea
negl
cmp
mov
pop
pop
data16
sbb
mov
pop
loopne
int
sbb
pop
or
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
fistps
push
jns
jle
sub
adc
add
jae
les
sbb
or
push
mov
loop
in
sbbl
popa
cmp
int
dec
push
pop
jae
popa
rorb
mov
fcmovnu
mov
cmp
das
mov
push
jb
jns
inc
ret
outsl
cmp
repz
lcall
es
scas
and
ret
or
mov
lret
mov
mov
call
lcall
sub
cld
or
mov
cmp
ljmp
pop
fiadds
inc
sbbl
sbb
loope
fs
fmuls
pop
sub
xchg
mov
cmp
arpl
ret
xchg
or
aam
jecxz
outsl
test
rorb
jle
push
and
sub
lcall
jmp
stos
mov
fisubrl
les
in
test
pop
adc
pop
mov
loopne
cld
mov
dec
add
mov
xchg
movsl
jne
sub
cmp
jge,pt
xchg
mov
add
insl
jle
cmp
flds
in
mov
add
jl
sbb
dec
add
cmp
movsb
xor
xchg
std
jmp
pushf
repnz
add
mov
mov
test
repz
into
leave
pop
das
push
cmp
std
cmc
movsb
nop
jae
js
jl
fistl
daa
or
sub
dec
mov
les
addl
jmp
int3
into
mov
add
imul
jg
push
mov
imul
sbb
mov
outsl
or
jp,pt
shrl
mov
jne
es
inc
and
lods
and
insl
in
subb
movsl
push
fwait
or
in
popf
notb
pop
scas
cmp
sub
ds
pop
subb
xor
mov
pop
dec
ja
jo
jp
pop
mov
je
test
add
dec
mov
dec
idivb
bound
insb
jge
data16
insl
jg
jne
clc
inc
and
push
xchg
scas
xor
sti
fidivs
divb
inc
mov
lret
add
dec
cmp
addl
pop
je
popa
and
fistpl
aaa
pop
cmp
mov
in
dec
movsb
cmpsl
cmc
jmp
jg
cmp
lea
pop
andb
mov
mov
gs
les
es
jb
dec
push
pop
mov
ret
mov
out
sarb
ficoms
adc
lods
and
mov
inc
fwait
add
js
pop
je
loope
outsb
xor
and
lods
out
sbb
sbb
sub
jge
fisubl
mov
loope
jo
outsl
add
and
push
fisubl
dec
jne
mov
xlat
insl
xor
push
xchg
test
dec
js
lods
into
hlt
mov
mov
sub
jge
fisubrs
xchg
push
cmp
cld
pop
into
loope
jb
sub
pop
cld
add
mov
int3
adc
cmpsb
ljmp
push
stc
mov
sub
dec
sub
sbbl
std
daa
imul
es
xor
decl
fs
scas
and
in
and
jae
gs
dec
xchg
jae
sub
lods
dec
lock
sbb
xchg
fstl
dec
jmp
push
in
jbe
add
jp
and
js
add
jns
cmp
inc
and
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
xchg
fwait
ud2
adc
push
jns
jle
add
in
loope
and
pop
dec
sbb
inc
sub
out
push
push
daa
cmp
mov
ljmp
push
test
dec
popf
inc
push
jo
add
inc
fld
mov
daa
cltd
or
or
fxch
into
push
pushf
adc
cmp
cmp
arpl
push
or
lock
loope
into
lcall
out
testl
pushf
push
adc
iret
das
and
xor
push
pop
dec
fwait
push
ret
pop
in
jmp
idivl
adc
sbbl
and
sbb
mov
add
mov
sub
adc
cltd
loopne
pushf
inc
jp
xor
popf
jnp
lahf
sbb
cmpsb
mov
jne
lds
or
loop
movl
mov
jb
dec
cmpb
cltd
fwait
push
insb
mov
add
cltd
sub
add
adc
jnp
test
in
test
and
jmp
jp
inc
inc
js
and
inc
sbb
inc
ret
fwait
and
out
push
pop
sub
dec
mov
sbb
mov
adc
sub
xchg
xchg
sbbl
push
test
out
mov
jecxz
cmp
out
enter
pop
out
fs
xchg
pop
mov
push
clc
repnz
setnp
fmuls
cmp
add
dec
shlb
testb
push
xchg
lret
push
xchg
fdivrl
xchg
lahf
js
xchg
sbb
add
dec
push
aaa
pop
xchg
cmp
mov
in
aad
sub
or
mov
rorb
sti
push
xchg
mov
jl
imul
mov
movl
mov
popf
ficomps
jp
xchg
test
sahf
sbb
lahf
rolb
pusha
mov
orb
cmp
push
xchg
xchg
push
in
shll
xchg
xor
addr16
mov
add
xchg
stos
lcall
gs
xchg
push
jo
mov
lret
jp
rcl
ds
fsubrl
iret
jmp
xor
clc
inc
sahf
cmp
and
aaa
ret
jno
fmuls
add
mov
outsl
into
and
and
out
dec
mov
ret
pop
movsb
cli
ds
dec
scas
iret
rorl
test
cli
rcl
cmc
stos
call
and
mov
adc
pushf
outsl
das
jbe
gs
mov
mov
jge
add
push
aas
subb
adc
cld
add
jbe
mov
in
xchg
loopne
xorb
adc
icebp
add
imul
fadds
jnp
sub
or
roll
sub
mov
mov
mov
and
or
lods
xchg
mov
ficoms
loope
push
sbb
mov
push
and
pushl
sbbb
repnz
and
jbe
outsb
pop
push
ljmp
jp
daa
or
pop
xchg
pop
jbe
cmpsb
loop
cmp
lock
loopne
adc
test
lret
jl
jle
adc
jecxz
int
xchg
stos
and
insb
aam
sbb
in
and
testb
pop
cmpb
lcall
shl
int3
leave
sbb
inc
sarb
mov
subb
shlb
add
cwtl
cmp
cld
int3
pop
je
jle
xor
inc
or
push
mov
stc
insl
mov
xor
scas
xor
cmp
fnsave
sub
or
int3
cmc
mov
xor
movsl
into
pop
xchg
subb
dec
mov
mov
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
and
jle
push
jns
jle
jns
jge
or
lcall
mov
subl
sub
adc
push
jns
jg
ficomps
lock
repz
push
pop
jae
add
dec
inc
mov
or
mov
shl
sub
in
jo
ret
insl
popf
add
xchg
outsb
in
into
inc
rcl
testl
das
cmpsb
xchg
jp
add
es
xchg
fwait
mov
push
or
mov
ss
xorl
cltd
repnz
mov
hlt
mov
jno
loopne
xchg
push
aaa
movsl
outsl
cmp
and
mov
adcl
mov
pop
cli
leave
inc
and
iret
scas
lds
sub
nop
icebp
cmp
shlb
push
xor
xchg
push
pop
cmc
arpl
sti
je
cmp
mov
imull
adc
xchg
sub
fcoml
push
mov
pop
scas
cmp
cmp
insl
xchg
repnz
mov
mov
pop
mov
iret
xchg
loop
or
in
dec
jecxz
jo
in
into
and
nop
inc
xor
paddusw
inc
std
sub
lcall
fidivs
xor
fists
mov
xchg
fisubrs
pushl
and
stos
mov
mov
pop
ret
sbb
or
fadds
nop
test
mov
add
lods
xor
push
adc
outsb
imul
sub
inc
outsb
lret
stos
aas
push
dec
jbe
mov
dec
sub
fs
push
add
std
mov
popl
push
pop
test
movsb
stos
insb
xchg
jo
xor
fsubl
popf
lret
xor
or
movsl
test
pop
add
inc
and
adc
or
cmp
jmp
xor
xchg
mov
rcrb
or
out
push
dec
mov
xchg
push
sbb
mov
xor
jae
push
out
sbb
test
jmp
pop
mov
into
js
push
aad
adc
xchg
xchg
roll
insb
mov
sbb
pop
lret
out
xchg
rclb
pop
and
lods
mov
sub
lahf
cmp
mov
repz
lea
mov
incb
xorb
shll
sbbb
mov
insl
aam
shrl
xchg
push
push
adc
insl
xchg
dec
outsb
pop
cwtl
sbb
mov
mov
in
fstpt
mov
cmc
gs
popa
pusha
xor
push
leave
lahf
test
jmp
test
mov
stos
scas
inc
rclb
imul
pop
sub
mov
aas
test
fdivrl
insb
mov
lods
movsb
mov
bnd
jg
insb
rorl
and
xor
mov
jle
jl
mov
or
cmpsb
das
lea
add
stc
iret
das
add
jns
jno
jl
popf
stos
insb
pop
test
cmc
fs
mov
or
cltd
in
stos
cmp
lahf
and
in
push
jns
add
dec
mov
sbb
lahf
data16
dec
stos
mov
mov
pop
bound
mov
and
roll
add
dec
test
xchg
cltd
push
aam
data16
ficoms
mov
fcomps
in
xchg
cli
inc
mov
jecxz
mov
mov
jnp
and
inc
std
jno
ljmp
mov
lahf
mov
cmp
rorb
popf
je
in
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
jl
pop
inc
jge
dec
stos
jg
or
mov
mov
dec
repz
sub
mov
roll
adc
sbb
xor
dec
inc
out
je
dec
xor
adc
scas
inc
lahf
sbb
ret
mov
jo
out
and
pop
cmp
add
loope
cli
dec
in
sub
xlat
pushf
or
dec
jbe
jnp
ds
xor
js
lock
fbld
xchg
sub
inc
inc
sbb
cmp
mov
inc
les
xchg
pop
imul
sbb
sbb
out
stos
add
aaa
flds
stc
mov
inc
fcmovnbe
pop
lods
jnp
stos
scas
pop
ss
jne
sbb
mov
cmpsl
push
sub
jne
sbb
nop
lods
xchg
mov
mov
adc
adc
int
loope
sbb
cltd
xchg
mov
jno
mov
jae
cs
mov
sub
xchg
fistps
mov
push
xchg
adc
out
mov
fldz
and
push
movsl
xlat
inc
sub
push
sarb
adc
jl
xor
dec
mov
sbb
lock
mov
mov
loope
pop
ret
aas
test
xor
mov
pushf
sbb
setb
daa
mov
nop
inc
inc
cmp
into
fisubs
dec
or
cmpsb
inc
inc
aaa
divb
outsb
stos
insl
daa
jle
xor
negl
lahf
or
aad
testb
sbb
add
repnz
incb
mov
mov
jge
in
lret
outsb
aam
icebp
fmul
negl
pop
xchg
lods
xor
mov
aas
repnz
je
sbb
mov
mov
addb
sti
aam
pop
mov
fcomps
or
pop
cmp
jns
in
leave
or
pop
cmpb
push
dec
mov
loop
cmp
ret
dec
mov
pop
mov
jmp
testb
inc
inc
inc
popa
lods
mov
rcr
sbb
mov
jge
mov
xor
in
xchg
shlb
ljmp
mov
mov
adc
push
stos
pop
mov
shll
pop
pop
daa
inc
dec
je
out
inc
sbb
pop
mov
push
icebp
cmp
xchg
sbb
adc
addr16
jne
pop
test
pushf
inc
ja
arpl
add
jg
rorb
push
sub
popa
lock
add
aaa
je
sbb
lcall
mov
xor
mov
xchg
mov
fwait
jp
aas
test
pop
rorl
js
aam
jb
test
hlt
shlb
aaa
ret
dec
bound
ficomps
mov
aad
push
dec
scas
stc
ret
xor
cmpsl
fldcw
xor
pusha
jmp
pop
xchg
xor
aad
mov
push
xchg
clc
dec
or
push
out
xchg
das
hlt
mov
stos
sbb
jnp
cwtl
subl
stc
loop
int3
push
mov
loop
test
lret
insb
cli
enter
mov
sub
mov
call
cmc
out
sbb
sbb
dec
xchg
xchg
test
mov
fwait
imul
or
jmp
or
mov
mov
sbbl
sbb
xchg
sub
mov
fsubp
ret
cmp
mov
idivl
lea
mov
icebp
call
dec
jp
mov
inc
int3
adc
test
stos
jnp
xchg
insl
clc
jno,pn
sbb
in
in
roll
into
mov
adc
mov
jbe
cli
mov
dec
mov
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
pop
xchg
sbb
push
jns
jle
xchg
mov
and
aaa
or
push
out
jecxz
scas
insb
sbb
or
pop
jmp
lahf
daa
mov
adc
jne
or
mov
inc
gs
sub
int
add
hlt
icebp
add
xor
xlat
and
sub
xor
into
fsubrs
push
cmp
icebp
ss
xchg
xor
xor
jg
inc
mov
test
out
test
aam
mov
sbb
cmp
adc
out
mov
out
jg
or
repnz
je
add
mov
popf
mov
sahf
xor
and
jbe
jne
cmp
pop
push
mov
pushf
out
lret
test
fidivl
mov
divb
jl
sub
iret
jb
sub
fidivrs
add
adc
dec
rolb
mov
push
cmc
mov
push
mov
ret
sarl
sbb
sbb
push
push
les
mov
mov
test
fidivs
push
lock
les
rcl
movsl
xchg
pushl
sbb
inc
jnp
cmp
roll
popf
loopne
xchg
movsl
pop
in
mov
aas
cwtl
add
int
cmpb
dec
mov
xor
lods
xchg
mov
or
push
ljmp
sub
into
and
sub
sbb
adc
jno
fs
push
lea
fldcw
adc
lret
xchg
frndint
xchg
jnp
es
scas
lcall
je
mov
in
imul
cmp
adc
mov
jns
aad
and
xchg
sub
mov
popf
lret
push
push
pop
loop
push
mov
jle
mov
sub
or
scas
jle
mov
sub
jno
xchg
inc
in
sub
fnstsw
out
push
mov
cli
notl
sbb
dec
and
push
shr
insb
jmp
or
sbb
lahf
sbb
jno
and
push
pushf
in
cmp
mov
add
jbe,pt
push
aaa
in
fdivrp
cmpl
sbb
mov
push
pusha
je
xor
jb
xor
cli
clc
add
insl
scas
sbb
aaa
inc
push
stos
lds
orl
shlb
push
jle
pop
adc
sti
add
dec
mov
pushf
jo
jmp
mov
cwtl
mov
repz
orb
int
test
jno
sub
mov
mov
cs
lret
aad
ljmp
call
ret
mov
and
and
xchg
push
adc
sbb
ret
out
jecxz
xor
mov
cltd
pop
aam
fdivl
loopne
out
xchg
andb
fwait
lods
sarl
jae
add
xchg
leave
rolb
sub
jmp
ret
das
mov
cmp
lods
pop
jmp
jle
cmp
js
adc
popf
scas
je
in
into
or
mov
fwait
js
mov
dec
or
mov
add
xchg
xor
daa
pop
shrl
cmp
loopne
mov
les
xchg
adc
add
stos
add
lds
inc
xor
or
mov
pop
movl
jge
in
sub
or
daa
mov
mov
insb
sub
insl
mov
dec
aad
imul
fidivrs
popa
gs
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
lods
jl
sub
daa
jle
push
jns
jle
and
mov
push
in
sarb
dec
movsl
sbb
fld
pop
add
test
enter
mov
rorb
dec
lds
jbe
adc
xor
orl
rclb
and
lret
push
adc
outsb
cmpsl
ds
sahf
out
lret
leave
push
xchg
shrb
in
mov
bound
ja
mov
pop
cld
and
lret
push
ss
jns
pop
fcmovnb
ja
out
decb
inc
in
adc
mov
out
out
icebp
or
and
popa
pusha
push
jae
cmpsb
mov
mov
pop
push
sbbl
movb
fwait
mov
add
xor
testl
fwait
sub
loopne
in
push
jge
push
jmp
adc
sbb
add
pushf
dec
jle
imul
ficompl
jo
and
icebp
mov
fs
sarl
add
mov
ret
add
ja
les
pop
xorb
xchg
loope
stc
imul
pop
adc
fyl2xp1
insl
cld
mov
adc
xchg
ret
xchg
lahf
pop
scas
pop
rclb
push
mov
iret
popf
loopne
in
ret
enter
cmp
icebp
cmp
mov
cmp
out
test
and
je
jnp
mov
or
mov
lock
cli
movsl
push
hlt
pop
sub
inc
xlat
pop
rorl
cwtl
pop
stc
or
push
xchg
add
inc
pop
movsl
es
aaa
fs
lret
push
push
mov
jbe
lock
shlb
stos
jge
dec
dec
mov
xchg
ljmp
lcall
divl
pusha
enter
xchg
mov
sbbb
mov
sub
xor
push
insl
fiaddl
mov
fs
rep
adc
repz
mov
imul
adc
sub
cmp
add
sahf
xchg
pop
sbb
call
fdivrl
jecxz
iret
mov
lea
mulb
push
jne
aam
sub
cmpsb
and
std
xchg
ret
test
insb
mov
mov
jbe
cltd
cmp
adc
jbe
mov
or
ficoml
ret
arpl
ljmp
inc
lret
and
sub
daa
fiaddl
xor
dec
in
sub
xor
sbb
lahf
fisubs
hlt
mov
pop
sbb
jno
fwait
cwtl
and
aad
push
test
mov
adc
fistpl
mov
pop
mov
call
sbb
push
jbe
push
aaa
call
test
jbe
aam
fs
push
imul
daa
movsb
int
stc
sbb
xchg
test
mov
sbb
xor
es
cltd
push
mov
loopne
xchg
ret
xchg
xor
mov
negb
clc
add
adc
or
push
lods
pop
dec
test
pop
fsubrp
inc
or
push
mov
mov
in
and
shl
mov
add
lock
jle
sti
xlat
dec
test
stos
pusha
sub
xor
mov
in
pop
insb
xchg
outsl
addr16
push
imul
rcl
inc
xchg
cwtl
ja
fwait
pusha
ja
aas
aas
leave
dec
out
sub
repnz
std
push
jbe
ss
xor
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
pmullw
jle
jns
jle
sbb
add
test
inc
xchg
repnz
popl
ret
repnz
popl
icebp
dec
mul
jecxz
jecxz
mov
xor
and
icebp
cltd
icebp
hlt
dec
mov
pop
aad
xor
xchg
mov
stc
and
mov
xor
xchg
add
pop
push
xchg
lahf
mov
test
inc
cmp
insb
xchg
test
jge
dec
sarb
sar
mov
je
xlat
pop
dec
cli
pusha
loop
dec
inc
dec
xchg
test
cld
in
mov
sar
sub
jne
ljmp
add
mov
sbb
ficomps
icebp
andl
sbb
jne
roll
lods
lahf
mov
stos
std
mov
aad
inc
cwtl
movsl
adc
dec
and
jecxz
popa
jne
out
cmp
test
push
add
hlt
in
mov
ss
into
add
andps
dec
fnsave
scas
imul
rclb
mulb
push
push
inc
lea
je
cmp
push
lea
sbb
pop
pop
push
push
lcall
lret
or
mov
out
lahf
int
and
sub
cmp
or
mov
dec
loope
mov
xor
fs
mov
out
push
mov
stc
jle
sbb
cli
cmp
pop
enter
pop
inc
xchg
cwtl
mov
add
ret
clc
xchg
pop
insb
mov
or
pop
dec
or
xor
or
adc
decl
js
cmp
cli
inc
fs
icebp
bound
int3
mov
jb
add
inc
dec
pop
inc
mov
shlb
pop
adc
in
nop
push
push
inc
lcall
sub
shrb
jge
cmp
fwait
scas
cmp
dec
mov
jb
dec
pop
jnp
sar
loopne
sbbb
adcb
xchg
stos
mov
push
mov
in
or
mov
or
icebp
mull
mov
xor
pop
dec
scas
ja
outsl
pop
popa
js
loope
fcomps
imul
jae
jmp
shrl
fsubrl
inc
shll
fcomps
nop
sbb
adc
mov
nop
rcrl
out
lahf
ss
sbb
or
or
sub
sub
and
and
call
dec
mov
test
sbb
mov
sbb
divl
adc
adc
mov
das
push
mulb
push
or
add
mov
cs
push
inc
ficoml
mov
mov
je
aas
sar
push
repz
movsl
dec
cmpsb
cltd
xor
or
mov
and
pop
push
lahf
xchg
lea
and
mull
xchg
testl
imull
pop
js
jnp
jns
int
pop
pop
jb
stc
mov
inc
outsb
and
icebp
sub
pushl
cs
lock
shl
xor
or
pop
pop
push
not
subl
loopne
dec
pusha
or
cli
pop
adc
xchg
test
or
mov
pcmpgtw
push
dec
cwtl
sahf
sti
mov
push
movsl
dec
cwtl
ljmp
aad
leave
lcall
xor
pop
mov
imul
ficompl
popf
pop
jae
aam
lret
cmp
fsubl
cmp
movsl
fnstcw
push
xor
or
jl
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
adc
cmp
das
jle
pop
jg
jle
test
pop
fmul
sub
xor
popa
push
pop
inc
leave
pop
popa
mov
pushf
pop
push
loope
movsl
daa
xchg
dec
outsl
fdivr
sbb
fildll
push
sub
pop
sub
push
push
repnz
sbb
cmpsl
movsl
lcall
pusha
mov
sub
enter
mov
aaa
add
mov
repnz
js
mov
cmpsb
ret
bound
adc
in
rclb
mov
rclb
push
xchg
roll
pop
or
test
in
cli
in
adc
lcall
dec
jnp
fdivl
iret
shl
xchg
jae
loope
mov
js
lods
or
bound
stc
addr16
lock
repnz
loopne
dec
jmp
cld
dec
cld
pusha
mov
xchg
je
pop
adc
arpl
daa
xchg
movsl
shr
dec
adc
add
insb
mul
test
sarb
sti
lea
iretw
dec
mov
add
xor
scas
adc
jnp
fldcw
mov
int3
int3
push
jge
ljmp
outsb
out
cmp
pop
cmp
mov
dec
std
mov
jbe
sub
add
nop
xor
daa
jle
nop
fadds
jae
cmp
xlat
dec
cmpsb
sub
add
ss
push
push
sub
les
sub
leave
or
pop
jle
fcmovnu
data16
sahf
je
xorb
dec
mov
lea
int
sbb
mov
movsb
push
imul
cmc
jmp
and
ds
sbb
enter
add
add
sub
inc
leave
jae
dec
cmp
outsl
dec
arpl
adc
shll
push
dec
mov
dec
mov
mov
adc
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
daa
jb
bound
jle
pop
jg
jle
rcl
dec
gs
in
add
cmp
lahf
loopne
mov
adc
sbbb
mov
rcrl
lods
mov
mov
adc
sarl
mov
aas
inc
sbb
sub
jb
in
pushl
mov
sbb
ret
mov
daa
std
or
mov
inc
cmp
push
stos
stos
call
pop
leave
xor
out
sub
add
cmpsb
leave
out
pushf
xchg
mov
fidivs
daa
les
ja
ret
dec
ljmp
jle
mov
jo
dec
imul
lds
or
jne
test
ja
xor
xchg
mov
dec
pop
push
add
in
pop
mov
push
pop
push
popf
in
mov
dec
adc
xor
jno
mov
scas
rcrb
hlt
push
ja
ds
sbb
dec
mov
cmp
sbb
nop
movsl
fnstcw
cmp
shrl
outsl
lds
mov
daa
dec
push
sub
dec
cmp
out
stc
adc
sahf
mov
jns
decb
push
xor
fwait
sar
and
jmp
insl
inc
cld
les
fldl
pop
mov
mov
cmpsb
movsl
inc
push
in
pop
add
cli
ror
mov
out
lea
sahf
push
push
and
xchg
xchg
in
dec
lcall
pop
test
popa
mov
add
add
sbb
push
mov
mov
or
movsb
inc
dec
mov
mov
movl
jmp
test
rcll
pop
pusha
or
ljmp
mov
mov
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
adc
jle
les
jle
ljmp
mov
sbb
xchg
roll
scas
jo
in
movsb
cmp
cld
shrb
jmp
repnz
push
loop
xchg
aaa
pushf
loopne
incl
or
out
adc
add
push
pop
add
xchg
mov
and
les
imul
sub
xor
adc
js
or
fs
sbb
add
mov
mov
jnp
in
cmp
adc
lods
adc
repnz
lret
xor
xchg
cld
push
sarl
mov
inc
das
lock
xchg
push
movsl
mov
in
mov
test
and
cltd
in
repnz
push
xor
icebp
jge
ss
sbb
shll
lock
sbb
add
jl
push
jnp
and
notb
cwtl
test
or
je
cld
jno
pop
inc
fidivrl
inc
mov
shr
xchg
sbb
inc
push
sub
mov
mov
popf
jecxz
push
scas
mov
aam
das
mov
pop
and
cli
clc
js
into
std
jl
xor
stc
adc
mov
in
test
rcrl
ret
mov
push
jb
jecxz
ror
sbb
xor
adc
loopne,pn
and
mov
cs
sub
add
xchg
inc
lods
xor
cli
push
aaa
sar
data16
ds
inc
inc
mov
cmc
add
mov
in
and
aas
mov
xchg
fldt
inc
cmpb
or
sbb
movsb
daa
fcmovnu
stos
lods
jnp
and
jns
jae
stos
gs
cmpsb
and
loope
lret
in
shlb
add
jecxz
je
push
mov
nop
data16
repnz
jl
je
loope
pop
scas
pop
and
out
pop
clc
pop
push
int3
mov
out
ret
xor
stos
push
dec
lea
insl
or
stos
add
jmp
divb
mov
mov
push
scas
jbe
sub
and
insb
xor
sbb
adc
ja
pop
lahf
cmp
lcall
xchg
idivb
les
cltd
mov
fcompl
fwait
xor
ds
sub
and
sub
sbb
shlb
gs
and
mov
cmc
popl
mov
sbb
mov
mov
popa
jbe
push
scas
xor
lret
insb
fbld
dec
pop
push
idivb
jmp
sub
pusha
cli
mov
ss
dec
call
les
add
fstpt
and
sub
mov
dec
mov
dec
push
and
lcall
push
mov
jns
push
mov
and
loope
jb
and
jo
ret
fdivrs
sar
ret
xchg
xchg
mov
jae
imul
rolb
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
mov
and
jle
les
jle
mov
mov
jle
mov
ret
hlt
lcall
add
push
nop
xchg
pop
cmc
inc
js
jbe
pusha
aaa
or
outsl
add
rep
inc
xchg
std
inc
xor
mov
jg
movsl
loopne
hlt
push
lods
fwait
pop
dec
cmp
push
mov
cli
les
ss
xchg
mov
jl
cmp
fmuls
inc
mov
add
jno
or
jb
mov
outsl
hlt
jecxz
cmp
jmp
sub
fdivrs
fists
in
aad
ljmp
or
and
jecxz
jecxz
cltd
adc
or
test
push
jl
inc
xlat
push
cmpsl
enter
aam
xor
clc
or
inc
test
push
push
xchg
test
inc
bound
jmp
outsl
rorb
jae
imul
adc
stos
fdivr
push
xor
getsec
mov
lcall
imul
jg
and
add
arpl
mov
push
adc
jp
sub
dec
loope
ret
xchg
or
push
cld
jmp
pushf
leave
inc
jne
fisttpl
stc
mov
pop
scas
stos
cmpb
cld
ret
xchg
pop
iret
jmp
adc
xor
pushf
lock
push
pop
mov
das
cmp
jne
out
push
or
scas
sbb
and
pop
lea
jmp
inc
test
in
test
xor
push
ret
in
add
sahf
sub
pop
add
gs
push
cmp
mov
shlb
fcoms
fs
mov
push
pop
push
xchg
pop
mov
sub
outsl
insl
fcmovb
fstps
xchg
push
jecxz
xchg
push
adc
mov
jmp
and
aam
inc
push
mov
pop
push
pop
pop
lret
pop
cmpsl
push
add
pop
jecxz
mulb
add
or
sub
xcrypt-ecb
cmpsl
mov
cmpsl
test
adc
lock
mov
sbb
and
sub
clc
insl
jge
add
arpl
cltd
mov
lcall
jnp
push
out
std
and
sub
in
xchg
mov
repz
mov
cmp
cmp
jno
pop
dec
ljmp
imulb
bound
insb
pop
xor
jmp
ror
push
cmc
mov
cmpsb
cmc
fsubr
adc
adc
lcall
jo
dec
gs
je
mov
or
pop
shl
sarb
mov
aad
lea
fsubs
hlt
mov
jg
or
andl
rolb
mov
es
jg
popf
stos
outsl
pop
xchg
adc
sub
pop
sbbb
add
scas
call
inc
sub
divb
pop
sub
or
or
mov
mov
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
std
shrl
les
jle
fildl
add
xchg
in
dec
and
mov
add
out
jecxz
and
push
in
sub
and
ljmp
hlt
dec
push
xchg
pop
pushf
jmp
mov
test
lea
subb
dec
adc
cmpsb
or
and
mov
dec
loop
mov
cmp
outsb
push
lea
xor
ficompl
lret
xchg
lret
cmpsb
scas
jmp
pop
aam
rcrl
push
fdivp
xchg
pushf
in
lock
jp
mov
jb
int3
push
clc
test
imul
mov
insb
inc
jno
inc
vmovaps
cmp
nop
cmp
cmp
bnd
jecxz
ja
pop
and
mov
fsubrs
or
jl
stc
or
inc
sub
in
mov
std
mov
mov
in
dec
or
mov
xlat
push
dec
cmc
or
dec
mov
hlt
adc
aam
or
ljmp
repnz
jae
bound
push
iret
dec
inc
inc
enter
aas
in
xchg
scas
aaa
repz
and
loop
mov
outsb
xchg
aas
int
aad
add
fsubl
icebp
and
popa
das
add
cmp
mov
jb
push
mov
add
lcall
inc
repz
adcb
cltd
inc
fbld
andb
pop
adc
stos
dec
orb
hlt
nop
in
sub
sbb
pop
test
test
in
fisubl
jl
pusha
dec
ror
mov
and
in
insb
roll
lret
inc
xchg
mov
cmp
ret
push
sub
xchg
inc
mov
mov
cmp
out
ja
pop
inc
notb
stc
daa
jge
out
mov
les
loope
lock
add
adc
cmp
gs
sub
sarb
cmp
fists
sti
test
xchg
adc
sbb
fstpt
jecxz
cmc
mov
lea
mov
call
movsb
or
xor
out
popa
test
in
insl
clc
into
enter
aas
jno
pop
and
rorl
fmuls
xchg
jmp
and
push
imul
fdivs
push
sbb
repnz
cmp
xchg
push
pop
adc
sbb
nop
test
bound
cmp
mov
stos
jae
enter
in
shr
lcall
sub
and
xor
jmp
jle
push
fsts
xchg
and
inc
repnz
sahf
push
lods
jecxz
dec
pop
insb
lahf
ds
out
aad
loopne
mov
scas
test
lcall
fidivs
int3
enter
out
inc
xor
dec
hlt
lods
xor
nop
hlt
bound
xchg
cmpsb
fistl
jne
or
mov
xchg
mov
push
or
jmp
jno
mov
mov
sahf
test
dec
and
loopne
cmpsl
xchg
cltd
ret
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
stos
pop
mov
jle
les
jle
mov
sti
dec
dec
jnp
inc
pop
les
stos
sub
enter
mov
cmp
aas
jo
sbb
mov
arpl
add
xor
test
ret
add
lock
les
and
add
es
leave
shll
fwait
pop
rcrl
jbe
cli
xadd
call
iret
clc
cli
pop
cwtl
test
mov
or
jno
mov
inc
mov
test
xor
sub
sbb
testl
xchg
and
pop
cmp
adc
mov
jne
xlat
push
dec
push
pop
and
xchg
pushl
xchg
sahf
loop
push
sub
mov
fs
dec
fucomip
lcall
and
mov
sub
dec
sahf
adc
pop
dec
add
inc
pop
jno
cmp
push
or
lahf
stos
xor
pop
ds
pop
gs
jns
ds
jno
mov
and
fs
js
test
and
sbb
iret
cwtl
ljmp
rol
arpl
nop
ret
or
sub
push
add
push
add
lret
daa
push
scas
test
push
cs
xchg
sbb
dec
fdivl
aad
mov
mov
dec
sahf
hlt
lret
push
imul
fidivl
xor
jne
out
shlb
stc
adc
xor
in
js
xor
test
pop
or
ret
cmp
into
sti
scas
imul
add
push
out
xor
cs
or
ret
cmp
inc
cwtl
mov
rcrl
pop
add
push
push
and
dec
push
jg
inc
fisttpll
rolb
mov
shlb
xor
aaa
inc
popf
and
sti
adc
loopne
dec
repz
mov
fsubrl
subb
out
nop
dec
fwait
push
push
mov
sahf
shl
mov
scas
add
outsb
dec
mov
jl
mov
mov
or
inc
inc
mov
nop
push
aam
int3
dec
faddl
dec
test
sbb
mov
ret
cmpsb
dec
loopne
xchg
loope
pop
test
pop
mov
xchg
sub
in
mov
xor
xchg
and
and
inc
ss
test
addl
call
push
outsl
imul
insl
adc
inc
and
pop
rcrb
inc
add
insl
dec
add
and
sub
add
xchg
lret
mov
arpl
lods
mov
jns
loop
cmpsb
sub
fwait
push
mov
andb
sbb
ficoms
dec
fdiv
lret
xor
in
addr16
roll
pop
ficompl
jns
xchg
add
imul
add
sarb
leave
pop
xor
or
enter
or
and
push
dec
loop
jge
stos
cmp
idiv
or
cmpsl
mov
repz
push
sti
test
inc
ljmp
dec
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
into
xchg
pop
mov
jle
dec
jns
jle
adc
lds
jge
add
xor
mov
lret
test
sub
scas
push
mov
setae
and
cmp
or
sub
jle
fwait
inc
repz
in
sahf
out
fcoml
lods
mov
inc
add
imul
jnp
push
sub
aad
decb
xchg
es
test
cs
dec
filds
xchg
addb
xor
cli
shl
sbb
sbbl
inc
xor
mov
xorl
daa
sub
push
insl
sub
inc
pop
pop
cmp
or
fnstcw
popf
adc
in
mov
mov
scas
or
mov
lock
push
inc
mov
sub
inc
xor
pop
push
mov
in
or
cmpsb
add
aam
xchg
add
leave
sbb
outsb
pop
dec
dec
push
add
pop
add
add
cld
js
pop
or
pop
jg
pop
push
and
xor
data16
or
and
stos
arpl
clc
testb
ljmp
pushf
pop
add
lods
in
push
sarb
push
nop
inc
aam
js
push
subl
or
jl
mov
outsb
add
jg
add
insb
iret
inc
sbb
sub
inc
subl
xchg
add
mov
pushf
dec
jge
iret
or
sti
ret
mov
mov
dec
popa
xchg
lret
data16
insb
jo
xor
cwtl
add
dec
je
pushf
xchg
mov
addl
add
jns
fsts
loope
inc
pop
lock
add
lcall
in
data16
repnz
jbe
xchg
call
pop
push
aad
and
or
mov
mov
mov
pushf
mov
jmp
ret
pop
int
repz
push
push
leave
sbb
xor
xor
cmp
stc
cld
mov
div
xchg
sbb
jo
or
lock
lea
or
outsl
sbb
mov
push
sub
jle
push
push
or
vmovd
lahf
mov
inc
or
add
sahf
scas
out
loope
add
psrld
leave
insl
sahf
xor
dec
cmp
adc
sbb
mov
dec
lahf
fiaddl
loopne
cmp
adc
and
ret
mov
mov
mov
push
movsl
sub
jmp
stos
out
and
xlat
jmp
imull
adc
fnsave
shll
test
lock
mov
btc
shll
sbb
jno
lock
int
icebp
js
mov
cmp
sarl
adc
imul
cmp
and
andl
cwtl
mov
imul
push
addr16
leave
loopne
add
bnd
or
cmp
lret
sub
mov
in
outsl
mov
dec
sahf
cmp
xlat
pusha
pop
and
les
nop
or
jae
push
dec
sub
or
mov
jno
jb
stos
adc
sbb
jo
mov
xor
ret
push
jge
shl
js
imull
push
stos
leave
xchg
lea
movzwl
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
pushf
xchg
pushf
cmp
jle
jns
jle
stos
inc
in
jae
jle
pop
mov
shlb
dec
iret
cli
push
adc
mov
add
popa
shl
mov
leave
out
dec
pop
mov
fxch
out
out
jmp
aaa
push
dec
mov
cmp
push
xchg
sub
jl
pop
loopne
ficomps
push
out
add
stos
xchg
add
outsl
pop
test
fs
fidivs
push
pop
fs
lret
movsl
into
cmc
aaa
lahf
cmpsl
add
ja
incl
pop
subb
test
xchg
sarb
ret
movsb
xchg
sarb
lods
xchg
lret
inc
push
popa
mov
inc
pusha
sub
scas
icebp
mov
push
in
mov
testb
dec
stos
mov
mov
js
pop
and
fisttpl
fadd
ja
adc
ds
adc
jg
xor
fimuls
nop
push
dec
idiv
ds
pop
or
mov
ss
leave
stos
push
and
jne
or
push
std
aas
outsb
fs
push
adc
xchg
add
and
and
out
jmp
cmp
or
addr16
inc
enter
out
push
xor
jp
stos
push
ljmp
and
daa
sub
pop
out
and
or
cmpl
cli
xchg
movsl
cmpb
popf
sti
adc
pop
xchg
xchg
ret
js
adc
into
and
lcall
jno
inc
mov
mov
mov
out
sbb
xor
mov
xor
fs
out
mov
or
mov
aad
jnp
dec
pushf
add
sar
sub
test
push
aam
daa
js
in
push
mov
adc
daa
and
stc
push
cld
fists
movsl
jl
mov
and
sbb
pop
jb
mov
mov
lea
andl
jg
cltd
lods
out
enter
lret
testb
lahf
cli
add
cwtl
pop
xor
test
push
shl
sbb
int
pop
adc
jbe
push
gs
das
lea
mov
mov
jmp
les
das
or
aaa
cli
stos
fwait
dec
cmp
cmp
jne
cld
lea
pop
cmp
xchg
jo
into
in
aas
mov
repnz
jne
inc
orb
std
jae
sbbl
push
add
jo
rorb
and
in
inc
adc
pop
aam
ret
mov
rcrl
or
outsb
imul
imul
sbb
sub
add
mov
push
fistpll
int3
imul
adc
lahf
fwait
stos
fistpl
lcall
and
pop
cli
scas
jnp
add
out
test
out
mov
sbb
test
sbb
push
pop
dec
push
mov
adc
adcb
repz
sbb
cli
xor
cld
popf
hlt
mov
and
hlt
mov
pop
or
punpcklbw
imulb
aas
fcomi
cmp
fldcw
adc
sub
push
pop
inc
dec
mov
imul
roll
inc
add
lret
shll
sbbl
fidivs
add
mov
int
mov
pop
xchg
sti
xor
int
xchg
adc
push
sbb
sbb
clc
mov
enter
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
stos
popf
jle
dec
jns
jle
mov
lods
dec
int3
fs
out
cwtl
stc
out
sbb
test
sub
cmp
lcall
sti
mov
push
fimull
into
cmp
sti
xlat
push
je
inc
pop
jb
ficomps
inc
mov
mov
xor
xchg
and
jl
cmp
pushf
int3
aaa
fisttpl
lret
adc
dec
push
mov
insl
fcom
xor
lods
or
imul
popf
cmpsb
loopne
push
pop
mov
cwtl
jmp
cmp
aas
mov
push
xchg
in
add
push
rorb
jle
mov
adc
imul
mov
enter
into
add
mov
jg
pop
pushf
cli
adc
mov
inc
stc
imul
imul
das
or
icebp
add
loope
out
pop
std
xor
sti
dec
insb
xor
add
pop
push
xorl
xchg
out
pop
dec
lods
sahf
sbb
push
add
ds
xchg
sub
imul
dec
test
adc
dec
lds
mov
xor
cmc
ret
inc
fldcw
push
mov
sub
xor
push
aaa
pop
int
pop
mov
pop
adc
push
jle
jne
xchg
rep
into
es
xor
in
movsl
or
xlat
fstps
and
dec
daa
dec
lret
adc
and
mov
shrl
mov
xchg
sahf
mov
out
add
es
lahf
repnz
out
mov
sti
push
jecxz
test
xor
xchg
lods
icebp
rorb
xor
xchg
cltd
inc
xchg
arpl
out
jmp
mov
push
int3
insb
pop
sub
push
cld
in
into
cmpsl
push
out
pop
mov
mov
add
cmc
insl
ja
stos
arpl
inc
cmp
lahf
jmp
lret
pop
cmp
add
sbb
or
divb
or
cmp
dec
fidivl
in
loop
xchg
hlt
std
rolb
std
mov
sbb
fyl2xp1
cmpsb
das
fs
jl
mov
fistpl
call
sub
insb
jo
or
add
jg
je
test
cmpsb
jg
shll
jbe
jae
ja
inc
divl
enter
fldl
aad
andb
loop
xchg
das
movsl
aam
addr16
dec
shr
xchg
adc
clc
lret
xor
js
mov
add
addr16
lds
pop
dec
add
movsl
dec
xor
push
outsb
loope
mov
lcall
add
pop
cli
push
mov
xchg
push
pop
mov
xor
dec
pop
lea
out
mov
popf
paddb
pop
scas
ds
lods
cmc
and
stos
fisttpl
std
repz
out
rcr
cmp
sub
and
add
or
inc
sbb
aad
mov
fnstcw
mov
xor
sub
inc
ljmp
adcl
mov
mov
or
leave
or
xchg
mov
ja
fistps
ljmp
xchg
adcl
out
repnz
test
imul
mov
fdivrl
mov
ljmp
in
push
test
cmc
or
popf
adc
cltd
pop
push
sbb
gs
and
adcb
test
xor
push
push
sti
jno
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
push
xor
jp
pop
popa
push
call
mov
out
jg
pop
cmp
rclb
inc
aas
add
inc
sets
cli
mov
in
jecxz
jns
jmp
or
jp
mov
or
push
lea
sub
add
adc
sbb
mov
loope
mov
xchg
or
movsl
add
lcall
cmp
movsl
call
mov
mov
inc
jno
or
in
ret
int3
sti
fnstcw
insl
in
lods
adc
adc
daa
in
push
mov
xchg
mov
popf
notl
mov
mov
sub
in
pop
icebp
push
dec
adc
and
xlat
mov
outsb
lea
jb
dec
clc
test
mov
das
sbb
lea
ja
cmpsl
ret
test
push
or
sysexit
cmp
outsl
arpl
mov
pop
inc
fs
mov
mov
adc
in
and
lea
sbb
aas
in
xor
ffree
and
fistl
mov
lods
and
mov
lret
fwait
test
add
es
jae
mov
fdivs
dec
inc
fdivrl
mov
imul
stos
xchg
push
adc
and
xorb
std
mov
adc
mov
pushl
adcb
je,pn
out
loop
or
sbb
js
push
xlat
and
jnp
leave
jbe
pop
out
pop
dec
daa
dec
mov
and
in
mov
pop
inc
push
test
jle
push
jecxz
aas
or
inc
sub
fs
cld
loop
cmp
movl
sbb
leave
jmp
inc
jp
hlt
dec
hlt
into
push
in
jmp
cltd
insb
popf
lcall
jmp
das
jno,pn
push
or
mov
bound
push
jg
and
push
xor
mov
push
mov
fsubl
fdivr
addb
mov
inc
sarl
mov
es
mov
and
cmc
jmp
mov
adc
cmpsl
inc
push
out
pop
daa
lea
imul
jmp
outsb
xor
push
hlt
sahf
dec
pushl
lret
jbe
pop
jp
aas
arpl
mov
inc
adcl
jmp
hlt
add
mov
hlt
inc
sub
loop
mov
xor
or
jae
mov
fidivrl
add
and
in
repz
insl
push
lcall
push
ret
fmull
mov
in
aad
popa
inc
lcall
popl
mov
outsb
movsl
jbe
mov
clc
mov
mov
cmp
cmp
rclb
mov
cli
lret
ret
push
mov
or
push
push
shlb
sbb
pop
aad
cmp
pop
push
push
daa
cmpl
in
mov
cltd
imul
inc
pop
fwait
inc
mov
mov
jg
out
sub
iret
mov
insl
mov
pop
push
sub
cmp
aaa
mov
sbb
in
cmp
xor
scas
into
mov
js
sub
sbb
xlat
xor
out
mov
mov
xchg
mov
adc
cmp
ror
outsl
cld
pushf
push
sub
mov
ljmp
ficomps
inc
push
lods
stc
mov
adc
cmp
pop
enter
mov
xchg
lret
inc
iret
mov
and
aam
dec
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
sbb
jle
dec
jns
jle
out
in
arpl
out
pop
adc
mov
pop
data16
insb
rorl
xor
jb
addr16
mov
or
ds
or
out
mov
add
pop
or
mov
xchg
xor
jb
enter
pop
pop
arpl
inc
fnstsw
push
scas
into
adc
adc
xchg
sub
push
mov
sub
dec
pop
out
test
push
bound
imul
add
mov
je
sarb
dec
dec
sub
or
stos
repnz
jno
inc
sub
bound
std
pop
mov
xor
sub
jbe
aas
mov
fstpt
and
enter
xlat
out
popf
xchg
cmpsl
sbb
lcall
stc
out
xor
ret
inc
push
mov
pop
jl
adc
test
push
lea
je
mul
and
push
add
je
xchg
out
jae
repz
jecxz
scas
fwait
sub
and
jbe
cmp
mov
inc
xchg
mov
gs
stc
rclw
test
mov
xchg
lahf
and
jne
aad
outsl
push
stc
push
ret
jnp
test
xor
je
and
inc
scas
add
jns
fwait
xchg
hlt
inc
stos
jo
cmp
pop
out
data16
out
pushf
lcall
sbb
mov
dec
mov
fnstenv
roll
inc
ljmp
icebp
addb
push
or
jo
shld
scas
test
adc
fldl
xor
dec
mov
mov
ret
xor
mov
clc
cmpsl
stos
push
cmp
int3
push
dec
push
add
xchg
aad
fs
es
jae
repnz
xchg
jp
scas
and
in
inc
ret
lret
pop
fdivp
out
jnp
sahf
push
inc
mov
sbb
xor
scas
xor
and
dec
fsubrs
pop
lret
inc
pop
sbb
into
push
out
ljmp
neg
fnstsw
xlat
mov
push
cmp
bound
inc
jle
push
or
fwait
adc
push
xor
jo
and
out
sahf
mov
mov
lahf
into
adc
push
insb
setge
dec
int
lahf
aad
cli
fsubs
xor
push
imul
rcrl
mov
adc
bound
add
sti
lea
sub
insl
sub
sub
pushf
lcall
mov
mov
repnz
pop
or
aaa
std
dec
aad
popa
dec
out
insl
xchg
hlt
dec
mov
dec
ljmp
pop
xor
fcmovnb
icebp
pop
inc
sub
sbb
mov
mov
fwait
ret
cs
ret
sub
jb
cmp
nop
jo
mov
push
sub
jp
mov
ljmp
cwtl
lahf
mov
sbb
lcall
mov
mov
int
sbb
or
jg
xchg
dec
push
in
or
aam
add
lret
iret
loope
fnstenv
or
leave
rcrb
lret
dec
js
pop
xorl
mov
add
inc
das
mov
arpl
adc
roll
aas
dec
arpl
test
cmp
dec
mov
int
movsb
sbb
pop
fwait
xchg
mov
sbb
cmpsl
out
sub
popa
lods
push
notl
jmp
mov
add
call
mov
test
add
add
sahf
sbb
add
in
decl
call
das
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
and
movsl
mov
mov
mov
lods
popf
ljmp
cmp
push
mov
dec
movsb
jl
call
push
push
fwait
jg
cmp
aad
xor
xchg
sbbl
sbb
or
adc
decb
out
fcomip
leave
add
decl
push
mov
roll
xchg
sub
pop
dec
lock
pop
pop
cwtl
mov
pop
les
mul
mov
loopne
aam
sub
insb
sbb
call
mov
jg
sbb
ret
mov
daa
leave
pop
rcrl
xchg
cmp
push
jnp
lea
cmp
sbb
sbb
sub
add
dec
cld
lret
xchg
jg
loope
vxorps
loop
clc
loope
rcrb
dec
pop
push
ret
mov
or
pop
xchg
sub
sub
enter
xchg
push
push
mov
out
push
mov
and
cwtl
mov
adc
pop
sub
rorl
fimull
push
push
mov
or
mov
push
xchg
sub
jmp
movsl
leave
xor
sbb
cmp
mov
jo
je
in
hlt
jg
enter
test
push
sub
rol
fs
fidivrs
mov
mov
inc
inc
push
leave
mov
cmpsb
scas
push
jle
mov
popf
xor
add
ja
push
addr16
mov
and
ljmp
ss
dec
negl
add
in
sahf
daa
push
shlb
xorl
int3
xor
sahf
mov
or
loopne
cmpsb
cmpsl
mov
sub
mov
out
insb
adc
loope
push
adc
test
int
sbb
mov
mov
xchg
and
mov
scas
or
sbb
inc
xlat
call
pop
xor
iret
lret
imul
jp
pop
xchg
ret
mov
fwait
call
rcr
push
sub
mov
and
fnstsw
cmc
jecxz
pop
sbb
or
lret
data16
xlat
cld
das
adc
aaa
sbb
sbb
sbb
push
call
pop
add
push
adc
lock
jl
insl
hlt
ja
xchg
repz
mov
push
pop
push
pop
xor
test
mov
jo
xchg
ret
push
mov
push
scas
call
xor
sub
jnp
mov
arpl
dec
sub
pushf
dec
sbb
mov
jle
scas
lcall
setae
dec
popa
cld
test
ret
ds
push
or
inc
stos
push
cli
out
cmp
int
cmp
test
clc
adc
and
lret
xchg
mov
movb
aas
push
jg
lods
sbbl
ljmp
or
xor
nopl
add
pop
mov
xchg
ljmp
pusha
mov
insl
fimull
stos
sub
popa
mov
int
mulb
movsb
mov
jecxz
cmp
mov
mov
inc
inc
push
pop
mov
cli
outsb
out
mov
movb
xchg
adc
cmpsb
mov
mov
cmp
hlt
loope
lret
idivb
dec
mov
sbb
cmp
ljmp
outsb
nop
subl
das
std
pop
mov
lock
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
jmp
jle
dec
jns
jle
add
inc
sub
push
dec
in
scas
lock
xchg
or
ss
push
mov
pop
add
loop
mov
adc
lock
arpl
pop
dec
rclb
iret
mov
mov
cmp
gs
loopne
add
ret
iret
test
mov
mov
adc
test
std
int
pop
shll
pop
sub
jmp
insl
fdiv
and
movsb
jmp
daa
mov
cmp
push
inc
jge
push
ss
mov
pop
jp
es
filds
or
negb
dec
je
pop
std
lcall
mov
push
aaa
loop
ja
jae
mov
sub
ljmp
jl
inc
adc
sbb
je
dec
cmp
mov
jne
in
adc
and
dec
inc
jae
clc
jne
sub
sub
fabs
cwtl
adc
cltd
add
push
sub
inc
dec
aam
arpl
fcmovnbe
in
aam
js
mov
push
addb
loope
decb
test
push
js
adc
inc
jno
sub
pop
sbbl
jbe
pop
or
sbb
pusha
mov
cltd
fs
jae
mov
orb
add
dec
sarb
mov
xchg
pop
ljmp
jmp
jmp
inc
shlb
fisubl
sbb
shlb
std
inc
icebp
sti
adc
inc
add
pop
xchg
shll
mov
mov
arpl
add
das
xor
pop
xor
sub
xor
leave
push
sub
das
mov
pop
repz
ret
movsb
je
ret
mov
xchg
notb
add
mov
fnstcw
imul
adc
scas
sbb
pop
out
adc
out
popf
xor
pop
aam
jb
sbbl
fsubp
sbb
pop
pop
xchg
ja
bound
mov
clc
fstps
or
or
jp
jne
nop
sub
jbe
lidtl
or
or
mov
les
mov
sub
sbb
imul
pop
mov
out
cmp
enter
mov
pop
xchg
mov
jp
js
sbb
popa
add
mov
cmp
inc
mov
popf
daa
sbb
popa
test
push
adc
les
mov
lretw
sahf
adc
leave
in
rolb
mov
cmpsb
outsl
jg
sahf
mov
adc
loop
in
das
push
mov
adc
sub
movsl
fcmovnu
or
in
cmp
adc
les
or
mov
mov
and
mov
pop
cmp
jp
in
jno
adc
out
pop
fiaddl
insl
push
ficoml
or
cmp
test
inc
add
dec
jg
icebp
hlt
outsb
or
cmc
add
push
jmp
push
adc
mov
rorl
filds
sub
mov
hlt
inc
sbb
cmp
sub
jns
push
daa
and
stos
and
lds
testl
icebp
add
cmp
sbb
cmp
outsb
jmp
das
push
mov
push
or
out
sti
insb
mov
or
xor
ds
bound
fildl
lret
xor
nop
jmp
mov
push
or
push
xchg
mov
jp
xor
outsl
mov
jae
leave
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
xchg
mov
stos
sarb
dec
jns
jle
cmp
xchg
adc
dec
insl
xchg
xchg
add
imul
jmp
aaa
lds
xchg
push
lods
pop
das
andb
out
mov
push
mov
ret
cld
dec
arpl
shrb
enter
lods
lds
or
fdivl
push
aad
mov
mov
out
in
cli
push
lods
pop
test
mov
or
clc
push
mov
bound
lds
inc
adc
xchg
add
fstpt
mov
inc
fbld
sub
mov
andb
xchg
sbbl
dec
cld
cmc
xor
cmovae
mov
scas
mov
daa
fistps
enter
adc
mov
leave
xlat
iret
cs
pushf
push
ss
ss
ret
int3
mov
rcrb
in
sti
pop
xchg
fcmovb
mov
into
sahf
shl
cmpsl
std
faddl
add
add
cs
xchg
mov
orl
and
addb
mov
pop
movsb
add
gs
aas
call
mov
jns
shlb
ret
cwtl
cmp
pop
pop
into
sbb
cmp
jbe
xchg
pop
sarl
pushf
cmp
xor
stos
mov
pop
cmp
xchg
jmp
jmp
loop
rcrl
push
xor
out
and
cmpsl
mov
ss
and
pop
cwtl
rcll
pop
push
and
xchg
xchg
rcl
shlb
mov
sbb
orl
fucom
sub
dec
jnp
mov
mov
sub
pop
sub
xor
mov
clc
out
movsl
cwtl
outsl
cld
mov
icebp
xor
cli
add
sub
dec
dec
and
imul
jb
out
dec
adc
bound
std
inc
inc
icebp
clc
mov
fiadds
fwait
lods
jp
lods
and
mov
dec
add
xchg
inc
imul
mov
mov
testb
lret
cmp
mov
leave
outsl
pop
mov
out
insl
jne
sti
add
lcall
and
int3
xchg
jns
int
rcrb
mov
sahf
popf
or
lock
cmpsl
pop
fisubl
in
inc
repnz
insl
push
mov
cld
ds
jmp
dec
je
ss
es
repnz
pop
test
repz
mov
adc
push
push
int3
imulb
arpl
xchg
pop
fcom
jl
jl
cwtl
pusha
dec
lock
push
scas
stos
push
outsb
xor
mov
adc
fcomps
popa
sub
xchg
in
xchg
loopne
xor
sub
adc
dec
repnz
out
stos
xor
stos
dec
mov
fsqrt
jb
es
frstor
and
ret
push
lock
ljmp
imul
stos
or
and
sub
mov
nop
outsl
dec
or
pop
negl
punpcklbw
mov
cmp
jne
fbld
dec
xchg
cmp
ds
popa
mov
pop
hlt
cli
xchg
cmp
icebp
or
sub
sub
leave
pop
dec
inc
rolb
adc
fidivrl
push
push
pop
leave
sbb
dec
scas
lret
ficomps
sub
mov
clc
adcl
fsubrl
outsb
xchg
fdivs
sbb
out
or
xchg
out
inc
mov
pop
jg
dec
and
push
inc
mov
and
add
aam
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
inc
imul
js
jle
cmp
int
mov
sub
add
cmp
pop
sub
xchg
icebp
sub
rolb
pop
inc
push
push
andl
aas
cmc
mov
and
das
dec
rclb
mov
push
rorl
pop
mov
sbb
mov
dec
lods
cmp
sahf
dec
jbe
pop
icebp
inc
sub
in
sub
inc
mov
out
mov
sub
cmp
mov
push
leave
loope
hlt
adc
inc
fisttpll
in
popa
xchg
daa
int3
push
xor
jne
cwtl
lods
inc
int
mov
ds
xchg
ss
orb
and
mov
jge
shlb
in
fsubrs
push
dec
pop
mov
test
pop
inc
cwtl
mov
jo
rclb
es
test
fisubl
sbb
data16
xchg
pop
aaa
jb
or
push
cli
loopne
xchg
xchg
sub
mov
jbe
and
imul
std
xchg
out
adc
out
sbbl
iret
cmpsb
jns
stos
shll
insl
push
sub
frstor
jp
sub
push
cmp
mov
push
stos
je
nop
xlat
pop
xchg
mov
std
xor
sub
test
xor
push
xchg
sahf
stos
ja
out
loope
jge
jge
test
mov
pop
lea
lret
sub
fbstp
data16
cmp
mov
cltd
jno
mov
cltd
xor
mov
mov
movsb
hlt
pop
fidivs
adc
and
dec
push
fstpt
mov
sub
sub
add
int3
xchg
dec
pop
cmpsl
cmp
pop
in
aam
jns
mov
movsb
sbb
pop
clc
rcll
adc
mov
pop
imul
testb
outsb
scas
xor
pusha
stos
iret
adc
mov
mov
outsb
dec
ret
mov
pop
fildll
dec
loopne
xorl
xor
lock
mov
pop
aaa
xor
or
jne
mov
jb
or
jecxz
cmpl
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
fwait
int
fdivrs
loope
jle
rcl
xchg
fcompl
fistl
jmp
and
fiaddl
mov
std
hlt
shll
cli
push
mov
xor
mov
in
sarl
add
addb
push
jl
xchg
cli
mov
cmp
adc
sti
jbe
mov
arpl
movsl
mov
sub
dec
imul
pop
call
out
jae
xchg
popa
push
cmp
cs
add
sbb
cld
incl
stos
sub
ss
je
jne
jns
loopne
int3
std
insl
std
jecxz
and
out
shll
cmp
cmpsb
nop
push
add
cmp
xor
sbb
in
jge
fsub
mov
scas
adc
scas
imul
stos
movsl
sti
mov
shll
adc
cld
sbbb
stos
das
jl
jae
dec
pop
mov
mov
es
pop
adc
jecxz
arpl
out
sti
std
mov
outsb
int
lcall
mov
mov
cmpsl
adc
cmpsl
dec
aas
mov
mov
adc
aaa
bound
inc
sub
xchg
lock
or
cwtl
pop
xchg
dec
movsb
pop
add
sub
and
pop
out
in
and
in
pop
inc
aad
ja
mov
push
inc
bnd
mov
inc
xchg
aaa
fisttps
movsl
adc
sahf
out
or
cmp
sub
mov
mov
addl
dec
mov
data16
inc
mov
dec
pop
pop
xchg
inc
mov
sbb
inc
xchg
pusha
shll
xchg
outsb
test
lds
movsb
ljmp
mov
inc
cmp
mov
dec
jbe
xchg
out
or
inc
xchg
fwait
out
fists
test
mov
and
xchg
ljmp
lret
and
push
popf
sbb
sub
adc
and
shr
rcl
push
adc
or
sbb
nop
push
inc
imul
out
or
or
sbb
lods
sbb
adc
loopne
mov
cmp
cmp
clc
xor
add
repz
repnz
mov
adc
jge
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
shr
scas
jl
fstpt
loope
jle
xlat
hlt
loope
add
ja
lea
sbb
es
push
jae
adc
push
xor
adc
jo
push
adc
mov
pop
xor
lret
in
pushf
jns
and
lods
scas
or
jo
inc
jae
dec
jb
adc
mov
mov
jno
imul
pmullw
adc
lret
movsl
test
mov
pusha
in
call
and
push
test
cmp
jmp
jns
daa
dec
js
rcr
movsl
inc
jbe
loope
xchg
sub
sub
dec
dec
rclb
scas
adc
daa
mov
pop
ja
cmp
push
sbb
scas
xchg
fs
loopne
fldcw
or
cltd
test
jnp
cmp
adc
cmp
xor
in
lods
mov
int3
lods
repnz
dec
and
sub
or
mov
movsb
cmp
mov
push
test
dec
push
andl
shlb
in
arpl
jmp
mov
mov
sti
ret
adc
rclb
movsl
mov
adc
pop
push
sub
test
pop
insb
mov
mov
dec
repnz
repnz
lfs
cmp
and
adc
and
cmp
pop
xchg
in
jae
cld
lcall
and
push
popa
fcomps
nop
adc
in
shll
pusha
cmp
in
out
lahf
adc
adc
or
arpl
xor
or
mov
idivb
sahf
adc
cli
fdivrs
lods
jne
scas
dec
call
mov
cmp
mov
test
les
stc
fxch
cwtl
fxch
lret
aad
lret
push
mov
sbb
fwait
icebp
mov
jnp
stc
xchg
pop
leave
sahf
repnz
shr
dec
pop
outsl
add
cwtl
sub
sbb
in
xlat
pop
pop
call
add
scas
jmp
orl
and
mov
add
test
and
lods
ljmp
jb
mov
cmp
addb
cmc
addr16
inc
cmpsl
movsb
sbb
fisubs
arpl
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
loop
pop
inc
inc
in
jle
js
jle
into
lods
adc
lods
in
cltd
add
daa
cmpsb
or
rcl
adc
sub
jg
inc
mulps
pop
xor
cmp
sarl
shrb
fisttpll
cmpsl
and
in
repnz
pushf
dec
mov
sub
test
loope
cmpsb
dec
adc
call
and
pop
mov
xchg
leave
dec
jle
outsl
adc
scas
xchg
addr16
addr16
repnz
xlat
scas
mov
aas
push
repnz
loopne
add
adc
mov
sbb
sub
mov
addl
outsl
maxps
aam
cli
adc
cwtl
in
jb
pop
loop
mov
addr16
push
cmp
inc
stos
jp
dec
outsl
stos
aad
dec
jno
and
aad
test
repz
mov
clc
jg
out
xor
xor
test
mov
xor
mov
mov
ja
lds
xchg
xor
add
mov
cmp
repz
xor
jnp
mov
xor
sub
addr16
clc
adc
stc
xlat
push
cmpsb
push
or
jno
lock
ljmp
xchg
fcompl
xchg
sahf
lock
les
xchg
dec
ret
repz
fstpt
bound
repz
adc
xchg
in
inc
sti
mov
xchg
adc
push
mov
cltd
mov
ds
outsb
adc
loope
in
sbb
xor
cmpsb
int3
xchg
mov
or
mov
jbe
fadd
mov
lods
insb
mov
and
mov
and
sbb
xchg
subl
push
lcall
jmp
decb
sti
mov
dec
ljmp
add
insl
and
test
push
in
ret
bswap
rolb
add
add
outsb
mov
inc
pop
jae
ja
sbb
inc
es
push
mov
popa
popa
or
jge
adc
cmp
call
mov
mov
dec
cmc
fdiv
hlt
daa
data16
das
mov
scas
sti
mov
sahf
loop
mov
push
cmpsb
sbb
sub
add
ret
inc
inc
add
inc
or
add
add
add
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
loop
fstpl
dec
add
ud0
fmul
cmp
aaa
mov
bound
or
mov
and
cli
mov
fistl
out
xchg
pop
pop
xchg
lock
fdivrs
iret
push
jecxz
xlat
out
hlt
cli
je
lock
addr16
jle
ss
cld
dec
mov
sbb
dec
stos
scas
mov
inc
add
push
pop
dec
fsubrs
and
fdivrs
das
in
sub
and
shlb
in
daa
pop
inc
jno
mov
pop
lock
mov
ja
orl
push
in
sbb
add
mov
sub
aad
scas
xchg
adc
rorl
lret
fsubl
mov
pop
call
jp
jp
dec
and
pop
mov
or
das
gs
enter
push
sahf
or
jne
ret
std
mov
call
in
test
sbb
add
jecxz
xor
lds
pushl
pop
push
dec
arpl
xchg
sbb
xchg
dec
sub
cmp
xor
pop
ret
test
jns
int
fs
dec
jne
and
rolb
shl
cmp
dec
push
popf
jns
pop
mov
push
andb
push
jae
dec
xlat
xlat
daa
loop
jle
adc
jbe
xchg
pop
pop
stos
or
jmp
mov
mov
aas
cmp
dec
in
mov
jp
leave
bound
jae
mov
movsb
mov
sbb
cmpsl
sti
pop
cmpb
gs
dec
cmp
stc
mov
out
push
popf
and
xchg
push
decb
lcall
mov
mov
inc
iret
sub
dec
loopne
and
or
xchg
call
mov
dec
lods
mov
lods
fstpt
ret
in
and
jle
clc
mov
leave
and
jmp
cmp
dec
mov
in
cmp
daa
fs
sbb
in
mov
cmp
cwtl
push
repz
jecxz
ljmp
sbb
add
repnz
arpl
in
xlat
dec
jge
mov
cwtl
movsl
or
outsb
movsb
jmp
mov
adc
sub
in
cltd
imul
movb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
pop
ja
xchg
loop
jle
jns
jle
sbb
mov
mov
or
sbb
xor
inc
sub
mov
inc
mov
in
xchg
inc
xchg
pop
add
mov
mov
mov
gs
dec
pop
hlt
rolb
aad
addr16
mov
mov
test
and
mov
cmp
push
fstpt
ljmp
test
sbb
or
mov
in
cli
push
mov
xorb
xchg
mov
sub
jns
xor
push
fisubrl
popf
cmp
aad
loopne
jbe
push
daa
sub
and
or
push
xchg
push
push
cmpxchg
fisubrs
sbb
cmpsb
lcall
out
out
fiaddl
outsb
in
jo
jo
dec
nop
decl
and
fmull
inc
clc
dec
sub
pop
test
inc
out
mov
or
or
es
mov
add
int3
rcrb
fisttpll
lds
lods
stos
sbb
jae
push
pop
jno
stc
movsb
in
mov
sbb
loope
xchg
jp
es
xlat
and
je
mov
ds
inc
or
divb
in
cld
sti
fmul
mov
adc
xlat
jecxz
mov
pop
loopne
xchg
lds
mov
iret
push
mov
cmpsb
out
hlt
lock
push
stc
jmp
cld
push
mov
sti
fisubl
xor
mov
outsl
sbb
imul
cmc
xor
jmp
adc
lods
mov
adc
or
movsl
and
inc
dec
mov
jbe
xor
cwtl
jne
mov
adc
cld
sbb
cmpsl
ret
inc
lds
lods
stc
dec
add
enter
leave
adc
cmp
pop
aaa
jns
push
push
lods
add
lock
imul
and
rolb
add
aad
sub
push
les
sub
iret
icebp
aaa
and
insb
push
mov
fisttpll
add
stos
ds
cltd
cmc
jge
test
push
xchg
mov
jns
aaa
je
bnd
dec
sbb
popa
mov
cmp
push
cmp
nop
xor
inc
daa
pop
les
xchg
popf
mov
dec
fldl
mov
pop
or
ds
hlt
dec
insl
adcb
int3
cmp
daa
loop
jne
jnp
push
data16
xor
mov
addr16
inc
gs
push
cmp
fisttpll
dec
mov
sbb
daa
push
lcall
fcoml
mov
and
xor
and
jo
sub
lret
or
xlat
stos
fisttpl
sub
mov
arpl
mov
popf
inc
cld
jnp
mov
or
in
cli
cmp
in
test
pop
sub
icebp
in
aas
lea
jne
mov
mov
push
dec
xchg
jmp
aaa
pop
cli
or
popf
pop
pop
and
add
gs
push
inc
mov
jge
xchg
dec
loopne
pop
add
fld
lods
xchg
jl
scas
push
or
lcall
incl
sbb
lahf
adc
aam
mov
push
in
cmp
in
enter
jecxz
in
pop
outsl
sarb
push
scas
lods
repz
ficoml
pop
mov
inc
sub
adc
push
push
aas
push
lods
cmp
push
stc
mov
inc
dec
in
aaa
jg
and
jb
jnp
sub
inc
sub
inc
out
push
aad
fisubl
pop
ja
int
shll
sub
inc
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
pop
cmp
xchg
out
jle
jo
jle
sbb
stc
cmpsb
cmp
mov
and
test
fildl
mov
icebp
enter
add
push
shrl
pop
pop
cs
lds
mov
mov
jae
xchg
clc
inc
sti
or
das
cltd
mov
dec
mov
addr16
cs
or
cmp
mov
adc
lret
les
jo
cmp
mov
mov
fucompp
mov
cmpl
dec
xor
inc
mov
mov
lahf
and
mov
pop
xchg
scas
sbb
test
mov
leave
fimuls
push
cwtl
add
xchg
inc
add
lcall
and
mov
psrad
push
mov
cmp
xor
mov
cli
cmp
subb
les
xchg
int
add
fimull
setg
and
add
mov
hlt
in
stos
gs
adc
sub
rorb
sub
bound
sub
jg
xorb
inc
bts
xor
mov
mov
mov
sub
bound
sub
mov
and
mov
shrl
mov
mov
leave
push
cmpsl
ret
dec
popa
xor
fiadds
xor
inc
mov
jecxz
add
pusha
sub
mov
push
pusha
das
sbb
push
imul
jge
inc
push
jno
sti
leave
aam
push
mov
xchg
and
jo
or
pop
ja
mov
and
fimull
stos
fwait
or
fbstp
sub
adc
mov
jbe
cmp
nop
xchg
les
push
cmp
rcr
push
sbb
cmp
mulb
test
fwait
and
outsb
mov
hlt
scas
pop
push
inc
mov
mov
int
or
jge
call
adc
xor
out
arpl
dec
outsl
sub
mov
or
jp
mov
jle
repnz
ja
int3
lock
cld
sbb
jno
push
jae
mov
xchg
add
inc
or
ret
mov
inc
pusha
sub
push
xlat
mov
pop
imul
push
pusha
test
ret
xor
pop
lods
in
data16
scas
insl
clc
xchg
test
or
fcomip
scas
push
mov
idivl
add
push
pop
adc
cmp
xlat
pusha
jns
nop
mov
jmp
cmp
xchg
es
mov
test
or
xchg
jl
hlt
stos
sbb
xor
jmp
fwait
inc
lods
sub
sbb
sbb
out
dec
pop
dec
adc
emms
sub
jns
fisubrl
and
fiaddl
test
pop
aas
adc
popa
xchg
xchg
push
pop
dec
push
add
out
adc
pop
mov
fs
testb
push
xor
mov
in
outsl
insl
and
ret
test
in
and
add
mov
mov
lea
and
push
xrelease
push
int
mov
mov
dec
cltd
ret
jmp
test
ret
repz
and
bound
arpl
repz
add
xor
rcr
orb
outsb
stos
cmc
repnz
and
sbb
scas
popf
push
mov
imul
xor
pop
mov
stos
test
sbb
xchg
das
fstps
lcall
dec
jl
push
repnz
sahf
bound
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
push
cld
mov
jo
jle
add
shlb
cmp
shll
inc
inc
lods
mov
sti
or
xor
or
sahf
ds
loop
ret
out
lds
or
xchg
jae
and
inc
dec
pop
test
inc
popf
int
fistps
pop
and
pop
cmp
jmp
sbb
nop
push
cmpsl
jl
icebp
jle
icebp
xchg
jbe
pushf
xchg
clc
cmp
ja,pn
lea
mov
cmp
sti
cld
in
sbb
outsb
dec
or
xor
aad
scas
out
push
dec
adc
lahf
hlt
xor
mov
lods
ss
orl
popf
jns
xchg
jmp
leave
inc
frstor
out
rorb
jae
jns
int3
push
cmc
fcomi
fcompl
sbb
push
sti
mov
mov
dec
jl
jae
or
add
jns
jecxz
xchg
nop
aaa
sub
jo
cwtl
push
cld
aam
mov
sti
popa
cmp
dec
add
and
enter
jo
repz
pop
mov
popf
std
mov
pushf
jbe
add
ficoms
addr16
mov
mov
es
stos
adc
sysret
shlb
lea
shrl
mov
cwtl
aam
insl
jo
jmp
roll
out
xchg
pusha
jae
sub
mov
daa
and
or
js
hlt
imul
stos
xchg
dec
mov
jns
ret
outsl
stos
cmp
in
mov
insl
pop
push
jns
call
mov
ficomps
add
idivl
fstpl
sbb
push
stos
mov
xchg
fwait
inc
jb
orl
mov
jecxz
test
les
adc
fistpl
mull
inc
or
sti
mov
mov
cld
xchg
je
and
and
mov
xor
and
mov
xor
adc
pushf
mov
in
jp
fcom
or
mov
mov
out
fisttps
jne
inc
mov
ljmp
inc
push
push
add
je
inc
out
test
rorb
ret
fwait
into
sub
movsb
lock
add
stos
decb
pusha
push
push
sbb
sbb
xchg
cmp
add
cmpsb
cld
out
push
out
pop
inc
scas
push
out
sbb
fsts
ja
mov
mov
lock
out
nop
shrb
dec
stc
in
cmp
xchg
xor
add
ficompl
mov
mov
lahf
push
rcrb
in
cmp
fwait
mov
adc
mov
mov
jle
adc
and
pop
sub
lods
rolb
add
arpl
pop
adc
pop
xor
fmuls
in
sbbb
into
mov
cmp
inc
add
adc
pop
or
push
std
or
jae
sub
sbb
cmp
clc
push
test
sar
jo
test
push
lods
mov
mov
out
xor
and
fimuls
stos
mov
mov
adc
mov
sub
sub
es
jle
iret
orb
in
scas
xchg
rcll
mov
cld
sbb
rcr
pop
test
jg
inc
lock
lock
xchg
out
sti
pop
pop
ret
test
out
call
and
adc
cmpsl
cmp
mov
add
rorl
lahf
push
mov
mov
sub
jp
and
addr16
popf
mov
and
imul
fidivrl
xor
cmpl
jno
test
pop
int
arpl
push
rol
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fldcw
pusha
int3
xor
jle
jns
jle
mov
sbb
mov
or
and
scas
mov
hlt
adc
fmull
mov
cltd
cmpsb
jbe
repz
out
aas
push
jbe
cmpsb
xchg
movsb
add
push
clc
hlt
push
out
shlb
mov
loope
or
out
xor
pop
mov
inc
sub
daa
mov
xchg
scas
dec
ret
pop
cld
jg
push
ja
add
add
jno
pop
stos
clc
les
scas
test
leave
pop
cli
ds
dec
pop
xchg
dec
sub
cmp
arpl
cmp
out
test
mov
cmp
push
cwtl
cs
pop
or
xor
cltd
imul
xor
inc
add
mov
cli
rolb
roll
test
movsl
inc
pushf
in
fnsave
pop
scas
inc
lahf
mov
xchg
mov
xchg
mov
mov
inc
gs
loop
out
arpl
mov
out
arpl
ss
into
adc
or
pop
shrl
or
cmc
fcmovbe
pop
mov
xchg
cs
loop
loop
push
inc
xchg
fstpt
aad
mov
jns
inc
in
sbb
jle
stos
jp
cli
inc
pop
adc
ret
or
ja
mov
lods
pop
movsb
popf
add
out
jbe
inc
jmp
das
je
mov
jb
fldl
xchg
aad
mov
ss
push
in
arpl
push
pop
jmp
fsts
mov
xchg
xchg
push
imul
jbe
addr16
insb
fnstcw
sbb
addb
jge
mov
mov
push
mov
pop
insl
cmp
add
aad
ret
mov
xor
sub
pop
sbb
rol
movsb
push
popf
cltd
dec
cmpsl
mov
pop
push
xor
mov
outsb
mov
mov
nop
mov
and
test
cmp
popa
mov
pop
xor
daa
and
xchg
mov
pop
and
mov
sub
jo
pop
mov
sub
pop
jp
or
and
fisttps
jo
push
mov
sub
aaa
xchg
lock
in
sarb
mov
pop
xor
mov
jl
adc
push
popa
cld
repz
jae
test
dec
jge
xor
fldenv
xchg
ret
cltd
scas
cmp
push
add
mov
mov
into
aas
mov
and
popa
adc
inc
movsl
into
inc
mov
cmp
ret
imul
and
adc
nop
roll
mov
ret
xorb
cld
mov
mov
in
test
icebp
cmp
into
adc
daa
push
mov
fnstsw
repnz
push
repnz
inc
mov
jg
mov
or
test
fists
shll
dec
pushf
pop
jae
push
push
cwtl
mov
mov
dec
pop
dec
push
not
aas
push
mov
rol
int3
pop
aad
scas
shl
cmpsl
in
inc
loope
in
mov
cmp
sub
sub
adc
jb
inc
js
jge
shlb
aaa
stos
sbb
aaa
cmp
ljmp
xlat
pop
lahf
mov
ss
dec
jo
push
adc
jle
insl
subb
fs
shrd
ret
ja
mov
push
shll
add
and
mov
into
pusha
es
ret
fisttpl
cmp
mov
mov
cmpsl
cmp
or
in
mov
scas
xchg
inc
int
cwtl
jge
aam
mov
dec
out
jnp
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
int
or
cli
bnd
jo
jle
mov
sbb
add
mov
iret
dec
iret
mov
mov
push
lahf
pop
ret
popf
loop
adc
js
int
sbb
mov
xor
pop
imul
add
xchg
mov
leave
cld
inc
in
dec
mov
les
add
leave
ds
loop
inc
xchg
mov
fadds
adc
jecxz
mov
icebp
xchg
sbb
mov
clc
mov
test
arpl
in
and
xchg
xor
xchg
dec
jp
cmp
arpl
into
das
sti
stos
mov
jno
das
rclb
xor
add
pcmpeqb
popf
jg
cli
fucomip
repnz
or
ret
mov
stc
push
scas
jle
fsubrl
xchg
out
daa
inc
aaa
pop
fcomp
shll
mov
mov
pushf
xchg
lcall
loope
add
cmp
push
shrb
adc
xchg
mov
inc
dec
ljmp
movsb
cmp
arpl
cmc
movl
dec
mov
out
pop
roll
stos
xor
pop
inc
pusha
ret
dec
out
arpl
outsb
push
push
push
lods
pop
loop
fimull
xor
mov
sbb
xchg
pusha
sub
mov
jl
cld
pop
xor
je
cmp
sahf
sbb
or
jno
cs
rolb
dec
add
jl
add
jns
nop
mov
xlat
cli
xchg
aaa
jmp
fcoml
mov
xchg
pop
mov
dec
and
shlb
push
cwtl
adc
mov
roll
mov
mov
xor
test
pushf
pop
stos
sbb
data16
push
fld
dec
inc
ss
jns
inc
ja
addb
or
mov
stos
inc
cs
pop
mov
pushf
aam
dec
mov
mov
mov
xor
xchg
movsl
and
cld
sbbb
out
pop
or
cmpsl
cmpsl
cld
ja
ret
sarl
mov
add
fldt
loop
cmc
data16
in
sub
push
inc
adc
fadd
aam
je
push
and
pop
orb
inc
mov
loope
test
mov
jp
shrb
int3
add
inc
sub
out
xorb
in
leave
adc
mov
mov
mov
orb
scas
stc
pop
mov
mov
cmp
cmp
sbb
mov
loop
neg
ret
sbb
push
and
outsl
jns
cmp
add
insb
sub
ret
push
fsts
jb
cli
dec
jecxz
jne
lret
mul
in
repz
mov
xchg
and
leave
mov
adc
mov
and
cmc
jns
push
push
stos
int3
fsubrs
dec
pop
in
enter
or
add
xor
jae
mov
pop
test
mov
es
mov
pop
mov
ret
add
out
daa
sbb
inc
cmc
adc
das
mov
enter
das
xchg
int
inc
lahf
mov
mov
popa
loopne
outsl
sub
loope
xlat
cli
and
sbb
es
push
iret
push
xchg
pop
clc
jns
dec
mov
stos
add
adc
or
inc
icebp
sar
mov
fisubl
mov
sub
jb
inc
dec
imul
insb
fs
sar
hlt
inc
lods
icebp
mov
lcall
leave
push
lds
cld
ret
add
xchg
jbe
lahf
cmp
test
pop
fmull
test
adc
xor
sbb
int
aas
scas
popa
push
clc
push
jb
test
rolb
add
inc
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
in
jmp
add
jle
jo
jle
xlat
fs
xchg
mov
fsubrp
bound
fadd
rcl
rol
scas
sub
in
insl
mov
mov
xor
mov
hlt
dec
fcoms
xchg
fildl
cmpsb
stos
js
add
push
mov
loop
xor
mov
mov
sarb
sub
cmp
pop
aad
mov
inc
arpl
rcrl
outsl
ficompl
inc
mov
xchg
and
pop
mov
aaa
ljmp
negl
push
gs
fiadds
sub
ljmp
or
outsb
push
mov
cltd
dec
ja
xchg
inc
aas
inc
sub
scas
push
inc
xor
add
push
mov
loopne
jg
imul
aad
hlt
cmp
jae
sbb
jl
adc
jge
popa
pop
inc
xor
pusha
ds
in
dec
cmp
fisttps
pop
pop
int3
or
xchg
repnz
mov
or
pop
mov
arpl
xchg
aas
jge
xor
cmpsl
xchg
out
xor
stc
out
repz
mov
imul
xor
addr16
lahf
out
cmp
sub
mov
test
sbb
cmp
sbb
fnsave
jno
fdiv
lahf
arpl
sbb
jle
push
inc
fs
sbb
cwtl
xchg
xor
ljmp
xor
lods
sub
push
add
sbbl
add
test
stos
cmp
decb
push
cmp
mov
outsl
clc
mov
mov
int3
mov
jno
data16
dec
or
and
das
mov
and
lock
movb
xor
aas
inc
insb
push
mov
push
xlat
xchg
mov
and
aam
adc
cmp
push
loopne
movsl
push
push
pop
shll
dec
cmc
mov
pop
jle
mov
ds
pop
les
cmc
push
jge
rcll
xchg
pop
mov
shlb
or
adc
cld
inc
fcoml
insl
dec
mov
fcoml
mov
or
xchg
xchg
dec
xchg
enter
sub
jb
sahf
mov
call
or
cmpsl
loop
cli
int3
ss
lea
fildl
lock
pop
dec
xor
xchg
jo
cmp
jl
hlt
ret
xchg
cltd
xchg
or
incw
xchg
xlat
sub
cltd
test
mov
nop
jecxz
test
popa
fwait
call
or
cmp
test
pop
mov
test
add
inc
jle
inc
out
cli
movb
add
enter
pusha
pusha
fnstenv
mov
in
mov
dec
xchg
inc
fwait
jmp
and
scas
push
xor
or
jns
sub
repnz
push
cmp
imul
xchg
cmp
ret
fchs
pop
xchg
add
pop
repz
jg
mov
inc
xchg
and
sbbl
push
pop
pop
mov
ss
repz
inc
pop
stc
cmp
cltd
mov
xorl
fdivrp
loopne
rdmsr
pushf
pushf
sbbb
mov
mov
sub
dec
pop
js
sub
ret
mov
cmp
imulb
add
insl
mov
push
loop
cmp
inc
mov
inc
aad
shll
divb
push
lods
mov
sbb
jecxz
inc
xor
decl
mov
fsubs
sub
dec
loopne
sbb
out
bound
adc
in
adc
sti
and
dec
jmp
xor
pushf
push
jo
adc
jns
cmpsb
roll
or
xor
sbbb
dec
dec
inc
mov
push
pop
pop
pop
jne
enter
scas
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
mov
cli
jle
jo
jle
fsubrp
lods
int
repz
jo
xchg
and
mov
push
fldenv
xor
mov
sahf
sbb
in
iret
add
negb
xchg
in
mov
pop
outsl
xchg
sahf
sbb
jp
jmp
cs
jp
fldenv
into
push
xor
mov
push
sub
popf
repz
adc
jl
mov
sbb
xchg
rorl
or
lods
or
adc
sbb
push
mov
xor
add
pusha
add
in
ret
pushf
out
sub
cmp
jle
and
mov
xchg
add
xchg
sub
loope
jo
out
aad
popa
add
mov
jbe
ljmp
push
sub
xor
push
mov
cmp
popf
movsl
arpl
push
push
es
dec
out
push
inc
test
js
lock
andb
push
cld
adc
inc
dec
add
or
dec
cmovo
into
stos
lods
mov
xor
xchg
cwtl
in
sarb
fdivs
mov
pop
mov
xor
dec
pusha
test
jb
xor
jns
repz
fldcw
jge
das
sbb
inc
negl
xchg
pop
and
lahf
sub
adc
xor
popf
ftst
pop
pushf
repz
add
rclb
mov
fists
bound
fisubs
pop
dec
push
add
jg
sub
mov
pop
aaa
test
cmp
or
mov
outsb
or
xor
enter
lahf
out
pop
aaa
or
scas
sub
xchg
mov
lods
push
mov
mov
arpl
or
mov
lret
jo
dec
mov
daa
mov
je
popf
sub
sub
mov
xchg
lret
pop
adc
pop
imul
aas
in
xchg
inc
daa
repz
in
call
addr16
cwtl
cmpsb
push
les
push
mov
mov
lods
pop
popa
out
mov
lcall
cld
adc
inc
dec
gs
aas
es
test
fsts
adc
in
shll
xchg
leave
mov
push
in
and
mov
out
mov
and
pop
daa
shr
xchg
out
add
xlat
in
lret
mov
mov
shl
fwait
xor
js
push
scas
or
out
shrl
mov
clc
jp
push
and
xchg
lea
xor
sbbl
popf
imul
rorb
ror
dec
lret
aad
push
cmp
xor
packuswb
mov
xlat
xchg
fcoml
call
sub
ds
cmp
xchg
lret
inc
push
test
sub
pop
lock
mov
stc
adc
add
sbb
cmp
insb
js
push
push
pop
loopne
xchg
mov
xor
push
lock
stos
cmpsl
lea
faddl
jno
push
bts
or
inc
mov
sbb
jno
popf
xchg
mov
mov
stos
mov
cmp
jl
xchg
lret
xchg
mov
add
filds
push
out
movsb
or
repz
jo
jb
inc
xchg
fwait
jmp
ret
pop
out
xor
shrl
cmp
imul
mov
adc
ret
aaa
mov
push
or
sar
in
adcb
fildll
enter
jo
shr
pop
out
push
mov
lods
sar
adc
popf
adc
mov
mov
test
in
xchg
xchg
xor
lret
leave
mov
mov
shll
mov
and
aam
mov
fistpll
fimull
xchg
add
add
or
add
adc
add
dec
int3
aam
pop
rcll
xchg
mov
out
movsl
mov
jo
jle
push
or
addw
sub
arpl
leave
sbb
aaa
iret
ror
test
movsl
mov
inc
lahf
aaa
call
aaa
das
xchg
test
shl
mov
sbb
cli
sbb
and
imul
cmp
cs
call
mov
out
lds
mov
xor
cltd
cmp
push
movsl
call
dec
and
xchg
jl
insb
loope
xor
sub
or
sub
pop
inc
adc
xchg
add
imul
sbb
sbb
jge
xor
enter
fmull
imul
lret
or
cld
xchg
in
js
xchg
cmp
dec
xlat
jb
imul
adc
jge
cmpl
aad
push
or
xor
popf
or
cmp
js
nop
fcmove
sbb
test
cmp
ljmp
cmp
mov
and
pop
loop
xchg
insl
cli
adc
mov
mov
in
mov
ds
xchg
int3
sub
out
xor
addb
fs
int3
or
fidivrs
in
dec
in
sti
fwait
addr16
loopne
and
sbb
lea
subb
movsw
pop
hlt
movsl
icebp
in
roll
sub
jle
jo
icebp
std
pop
loop
dec
xlat
dec
andb
add
push
inc
fwait
sbb
lods
nop
jmp
sub
repnz
lcall
movsb
pop
dec
mov
pop
sub
imul
dec
mov
loopne
pop
sti
clc
and
pop
hlt
xchg
call
jecxz
in
push
push
adc
outsb
cmpsl
inc
pop
inc
xchg
xchg
cltd
pop
scas
imul
mov
lea
push
adc
ffree
lods
ds
stos
dec
and
dec
fidivrl
jle
decl
insl
cmp
daa
xchg
clc
xchg
jae
xchg
adc
aad
mov
inc
sub
mov
movsl
clc
xor
dec
push
test
mov
mov
data16
pop
xchg
inc
icebp
xor
stos
dec
push
outsb
leave
cld
and
lea
repnz
mov
xchg
jae
sub
pop
or
cmp
hlt
push
ljmp
push
or
or
pop
or
lods
cs
mov
fwait
mov
or
sub
and
dec
das
insl
inc
fisubs
xlat
popa
imul
sbb
adcb
dec
and
fs
sub
push
scas
int
call
adcb
call
sbb
cmp
push
push
scas
in
outsl
push
mov
ljmp
jnp
lret
jns
xor
mov
shlb
sub
daa
inc
imul
sbb
mov
push
sarb
lret
add
jo
mov
lret
out
cmp
sbb
add
xor
inc
sbb
stos
mov
inc
pop
xor
and
enter
js
out
push
lds
jo
dec
test
xchg
loopne
fimull
push
jae
dec
outsb
and
rorb
dec
int
sbbb
pop
mov
xchg
lock
push
out
imul
cmc
cmc
mov
pop
or
nop
jg
push
dec
inc
sbb
insb
mov
iret
xor
jne
mov
push
sbb
in
xlat
mov
dec
loopne
cmp
gs
rolb
sub
fisubs
in
mov
addr16
mov
enter
and
xchg
dec
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
jne
inc
sub
jo
jle
cmp
and
or
fldenv
mov
in
repnz
fwait
xor
cmp
xchg
pusha
jg
pop
imul
ror
sub
rcrl
mull
sahf
or
cmpsl
mov
lods
sub
loope
fnsaves
shll
push
jb
rcll
cmpl
test
xchg
cmpsb
sub
xor
push
lret
aam
mov
cltd
adc
xor
xchg
fcmovnbe
dec
jnp
mov
xchg
stos
jno
loop
lret
loop
dec
jmp
jl
mov
arpl
mov
ja
xor
push
jne
push
aam
or
faddp
fdivrs
dec
in
ss
fsub
in
sti
dec
scas
lret
push
movsl
dec
aaa
dec
repnz
lret
add
mov
push
test
xchg
mov
lods
xor
xchg
sub
les
pop
pop
ss
and
or
push
fdivrl
adc
pop
fst
and
and
mov
xlat
mov
fnstenv
hlt
movsb
loopne
sub
stc
fsubs
aam
lods
dec
cmp
xchg
cwtl
ja
imul
daa
repnz
xchg
xchg
push
adc
sbb
xchg
mov
loope
ret
nop
or
scas
aas
push
cmpb
jo
push
sbb
pop
or
imull
mov
jbe
pop
push
lods
insb
mov
in
andl
loop
inc
mov
adc
jb
jnp
xor
pushf
scas
insl
inc
test
jbe
int
popa
sub
fstpt
sub
xchg
and
neg
js
imul
dec
rolb
ss
jg
repnz
pop
jae
out
cli
sbb
sub
lods
xor
pop
mov
test
pushf
xchg
scas
sub
jo
scas
adc
xor
fiaddl
out
add
iret
jmp
adc
and
cwtl
push
fnstcw
mov
mov
inc
pandn
sahf
xor
rcl
testl
fcomps
insl
dec
rclb
push
cmp
mov
pop
loope
jge
outsb
sbb
xor
and
lods
push
xchg
mov
mov
mov
jmp
xchg
xchg
pop
jmp
dec
int3
xorl
add
cld
add
inc
adc
rolb
inc
sub
jp
add
sbb
add
shll
fidivrs
xor
sahf
mov
in
inc
xor
inc
ficoms
push
out
lret
loope
adc
dec
push
adc
adc
push
xlat
daa
mov
mov
cltd
xor
iret
xchg
xchg
sub
imul
sti
adc
xchg
mov
daa
stos
sub
pop
rorb
mov
jg
inc
mov
add
aad
mov
stc
cmpsl
push
in
pop
scas
lcall
ss
cwtl
arpl
push
movsl
sbb
test
cmp
leave
xchg
mov
xchg
repnz
jno
lods
sahf
jb
aas
adc
jae
jns
loope
push
jb
jle
stc
aam
lea
cmc
inc
testb
jp
pop
rcr
and
int
cmp
sub
or
in
fsubl
pop
test
or
jl
stos
push
cs
jmp
push
add
push
shll
cs
fisttpll
jb
mov
daa
lea
shrl
sti
mov
out
inc
mov
cs
js
inc
mov
jle
sar
lea
push
popa
movntps
and
fnsave
push
cmp
cmp
jecxz
loope
mov
ds
test
fs
lret
xchg
mov
ret
push
ss
cs
xchg
mov
loope
addl
aad
jge
mov
popa
in
mov
mov
adc
xchg
fistpll
fimull
add
add
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
movl
jle
jns
jle
inc
sti
insl
sti
je
fcoml
fdivl
js
xor
pop
pavgb
pop
dec
sbb
leave
mov
sahf
mov
adcl
aad
mov
cli
rcll
movsb
sbb
push
sbb
sub
add
push
repnz
pop
mov
gs
add
xlat
xchg
inc
sub
xchg
xor
adc
jne
mov
push
aad
cmpl
repnz
loope
int3
fldenv
aad
fiadds
push
mov
inc
xchg
ret
shrb
sub
sbb
push
roll
lods
aas
jne
aam
incb
mov
sarl
cmp
or
cli
ret
xchg
scas
xchg
push
jno
cli
call
or
in
fdivs
add
push
les
add
andl
imul
gs
int
les
sbb
scas
loop
pusha
jl
inc
inc
cmp
sbb
xchg
inc
fwait
sarl
xlat
out
rorb
pop
add
cmp
push
inc
cmp
sbb
imul
out
test
cmpsl
mov
mov
adc
out
ret
push
sti
movsl
push
scas
and
inc
es
ja
pop
inc
fnstenv
xchg
xchg
scas
inc
adc
shlb
inc
xor
sbb
fsubrl
clc
test
mov
ret
cmp
mov
and
stos
jge
add
aam
insl
sbb
adc
lods
push
and
ljmp
inc
mov
jle
mov
inc
loopew
hlt
jnp
movsb
jg
or
add
pop
fnstenv
xchg
fimull
leave
jmp
lock
pop
xchg
idivl
push
lahf
jge
loopne
loop
mov
inc
repnz
insl
inc
stc
mov
test
ret
xchg
stos
sub
or
inc
jecxz
sbb
pushf
push
jb
mov
cmp
lds
call
lret
jl
subb
adc
int
mov
and
adc
rcrb
repz
cmp
cli
xchg
movsl
jmp
or
xlat
aaa
pop
mov
push
sbb
test
fwait
into
or
push
jl
in
dec
push
inc
gs
jb
xlat
push
xchg
out
push
push
push
pop
into
push
or
loope
lods
sbb
neg
aam
dec
lcall
int
movsb
sub
jae
ss
ret
mov
dec
mov
decl
dec
mov
push
cmp
mov
out
and
in
loopne
mov
jmp
pop
xor
lods
cwtl
mov
dec
push
fndisi(8087
jns
int
add
enter
mov
sbbl
jae
xor
test
add
jb
mov
test
mov
push
pusha
cwtl
add
xchg
inc
or
loop
vhsubps
or
xor
movsb
lock
nop
jae
mov
fists
dec
pop
add
call
es
inc
and
fists
sub
sarl
jnp
mov
dec
arpl
lret
loop
cmp
hlt
mov
push
mov
popa
jnp
in
imul
ds
jno
pop
shlb
sarl
ds
pop
sub
dec
push
dec
adc
cmp
lock
subb
or
test
stos
mov
mov
icebp
add
xchg
adc
and
cmp
pop
movsl
loope
out
out
js
dec
sbbb
sahf
or
mov
mov
jo
outsl
mov
sti
jg
jno
adc
cltd
mov
jo
stc
add
jmp
cmp
dec
mov
rcrb
jg
xchg
mov
jo
jle
divl
imul
jae
shlb
xchg
cmp
dec
mov
push
mov
push
loop
pop
jo
lea
inc
cmp
dec
or
cltd
stos
cmp
adc
sbb
ret
mov
rolb
adc
iret
cmp
jge
in
mov
fldenv
xchg
stos
lahf
lret
call
push
or
jo
jle
adc
pushf
ja
leave
data16
outsb
or
push
jb
cmc
xchg
imul
cltd
push
add
or
es
mov
mov
mov
pop
xchg
loopne
inc
fadds
cwtl
rclb
xor
aaa
or
pop
pushl
les
push
and
push
and
in
inc
lcall
test
in
mov
pop
adc
push
or
jmp
test
and
popa
ret
fdivs
push
xorl
adc
jne
dec
xchg
fwait
das
adc
jmp
cmpb
rcrl
fistpll
add
cmpsb
pusha
xchg
xchg
test
sbb
scas
out
cmp
loope
adc
dec
dec
lods
popa
shrl
ds
ja
lret
leave
js
int
mov
imul
mov
push
mov
ret
inc
sub
jp
jg
dec
ja
ljmp
out
insb
outsb
loope
pop
repz
inc
add
rcl
jecxz
mov
pop
clc
pop
call
and
repz
add
and
cltd
cmp
cltd
sub
leave
mov
lods
and
ret
mov
jle
repnz
add
scas
xchg
sub
and
imulb
out
js
shl
mov
push
push
movsb
sbb
pop
mov
mov
push
cmp
pushf
add
dec
mulb
cmpsb
and
push
dec
push
das
scas
mov
inc
jge
insl
xor
fnstcw
hlt
adc
dec
jnp
insl
mov
and
sub
lahf
sub
sub
cs
pop
mov
push
mov
cmc
std
xchg
cs
inc
inc
mov
lds
jbe
jg
mov
sarl
or
sbb
flds
jne
mov
mov
pop
fwait
notb
cmp
adc
push
sbb
ret
es
sbb
out
imul
sub
mov
mov
xorl
xchg
or
mov
cmp
sub
pop
fists
call
ja
mov
sti
fstl
adc
push
pop
into
and
xchg
adc
adc
xchg
jno
ss
rolb
cmp
enter
aad
fsubrs
into
mov
ljmp
in
push
fnstenv
or
sbb
insb
xchg
pop
push
add
sbb
loope
es
jge
iret
repz
in
sbb
cmp
rorb
stc
xchg
fimull
std
xor
xchg
cmp
sbb
cmpb
dec
cmpl
jbe
pop
shll
mov
pushf
lret
repz
push
in
bound
mov
push
sahf
testb
push
adc
dec
jo
es
mov
jl
test
setp
pushf
adc
sbb
sbb
jge
sbb
call
into
and
add
sbb
inc
shrl
loope
mov
jo
cltd
fs
shlb
setle
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
cmpl
jle
jo
jle
scas
sti
sbb
scas
ret
mov
mov
xor
push
xor
mov
sub
xchg
rcl
div
adc
mov
pop
jno
pusha
xor
pop
out
jmp
xor
push
scas
jecxz
pop
add
hlt
outsl
shrl
stos
pop
xor
test
dec
pop
lret
mov
stos
adc
inc
mov
jge
shrl
addr16
jo
mov
in
cwtl
movsb
jl
lea
call
flds
arpl
push
add
jno
into
adc
std
dec
pop
aas
dec
cltd
push
nop
pop
sbb
aas
xor
sbb
mov
cmp
add
xchg
mov
test
ror
scas
jnp
and
cmp
sbb
xchg
xchg
sbb
jecxz
pop
bound
mov
nop
mov
sub
jae
daa
andl
inc
das
cmpsb
xchg
inc
fmuls
divl
aad
add
shlb
mov
outsb
leave
pop
stos
imul
dec
and
subl
or
cmp
faddl
std
pop
push
inc
loopne
fs
cmp
repz
mov
bnd
imul
aam
jp
inc
imul
dec
mov
iret
cltd
sahf
push
jecxz
add
loop
roll
push
pop
push
cmpsb
je
lea
sbb
insb
cmp
mov
lods
lds
sahf
repnz
ja
mov
mov
cwtl
popw
xchg
clc
std
lret
loopne
cld
addr16
sahf
les
mov
mov
in
les
add
xchg
leave
mov
add
cmp
les
mov
incl
lcall
icebp
jb
subb
loopne
sarb
add
dec
jae
and
sub
jmp
in
popa
xchg
in
mov
lret
pop
data16
mov
cltd
jne
in
add
and
cmc
mov
pop
or
xor
aad
push
mov
mov
sub
lret
aad
jl
or
cmpsb
lcall
adc
fs
hlt
and
or
shl
and
push
jle
loop
dec
dec
xor
or
jg
mov
call
gs
adc
mov
out
and
and
or
lret
mov
mov
lods
xor
imul
sub
push
add
test
bound
push
ja
push
in
xor
out
push
and
int
xchg
dec
stos
adc
pop
dec
mov
inc
es
cs
push
pushf
ficomps
cs
pop
jb
je
loop
sbb
mov
jge
cli
inc
sbb
ret
movsb
sbb
add
lahf
scas
loop
adcl
fmulp
ja
xchg
xor
movl
push
mov
mov
push
out
int3
mov
shrl
sbb
mov
add
popa
push
jg
cmp
adc
xchg
mov
push
mov
mov
xchg
adc
adc
mov
fdivrl
jno
mov
test
mov
imul
idivl
adc
xor
shlb
dec
adc
and
add
scas
cmp
push
pop
sarl
outsb
fsubr
hlt
jno
lods
cmpsb
xchg
icebp
fidivrl
xchg
inc
sbb
std
inc
and
sbb
cmp
lahf
leave
imul
pop
push
mov
mov
mov
dec
push
xor
xor
into
push
stc
aas
adc
shl
jle
popf
lea
outsb
aad
jno
sbb
movb
sub
jge
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
vmwrite
jle
jo
jle
int3
add
enter
sbb
xchg
dec
xor
and
xchg
pop
add
rolb
call
push
jae
daa
push
aaa
test
leave
add
dec
add
lahf
jne
mov
aam
sub
cmpsb
pop
mov
push
inc
jnp
pop
jnp
movl
sbb
and
rorl
sub
ljmp
ljmp
xchg
jne
outsl
mov
push
push
imul
es
outsl
inc
lods
and
fsubl
xor
mov
and
shll
xor
notl
xor
xor
in
icebp
jno
xchg
sub
adc
sbb
popf
or
out
int3
cmp
mov
cmp
shrl
rcll
push
subl
shrl
lds
icebp
sbb
mov
xchg
mov
xor
pop
lods
nop
fistpl
and
call
lods
test
ss
cmp
orb
cmpsl
dec
mov
les
mov
adc
andl
mov
rcll
mov
ss
addl
or
in
inc
push
stc
nop
stos
leave
mov
hlt
pop
pop
inc
rorb
es
inc
roll
pop
lret
mov
adc
test
jp
mov
jle
roll
mov
lods
leave
xchg
sub
data16
push
mov
jl
push
and
stos
arpl
xchg
cmc
add
sbb
push
pop
dec
cmp
sub
loopne
push
lret
adc
fisttps
adc
in
sbb
roll
sub
jbe
xlat
dec
lret
inc
inc
icebp
or
fistl
jbe
in
cmpsb
cmp
test
arpl
jge
mov
mov
or
pop
xlat
lcall
cld
pop
jno
jle
bound
ret
jmp
xchg
mov
inc
imul
ret
loop
mov
enter
add
push
out
shll
sub
mov
or
mov
push
xor
lods
loopne
cmp
lods
gs
std
pop
lahf
mov
ret
ret
pusha
pushf
fisubs
pop
imul
rolb
mul
mov
jo
push
add
pusha
xchg
mov
leave
or
lods
mov
dec
lret
in
in
sub
outsb
mov
mov
lret
popf
sub
jle
fwait
adc
jne
mov
xchg
push
dec
jo
fwait
mov
add
das
mov
dec
dec
xor
subl
inc
pop
rcrl
jnp
hlt
int3
mov
inc
sbb
cmpl
and
stos
xchg
pushf
lret
cmp
insl
sbb
repnz
rorl
push
aas
mov
add
cmpsl
sbb
outsl
jo
stc
sub
dec
xchg
mov
js
in
inc
fldt
mov
test
repz
mov
jno
xor
sub
xchg
cmp
add
add
mov
and
mov
lods
sbb
inc
subb
in
repnz
jge
pop
fisubs
dec
loop
fwait
pushl
mov
cmp
adc
addb
inc
movsb
adc
repnz
cmpsl
sbb
pop
js
imul
pusha
and
jle
xchg
and
xchg
in
loop
mov
call
mov
pop
push
aam
mov
js
xchg
pushf
pushf
call
into
iret
adc
out
stos
test
lds
fdivrl
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
mov
xlat
adc
sahf
jle
jo
jle
add
push
stos
push
popa
pop
dec
mov
stos
jae
push
mov
xor
mov
jnp
addb
sbbl
sbb
mov
add
mov
or
popa
push
and
xchg
xor
push
cmp
dec
in
sarb
ja
lahf
sbb
mov
cltd
sbb
push
sbb
out
dec
popf
xchg
outsb
ret
nop
decl
push
dec
vpmacswd
pop
push
rorl
xchg
loope
ret
lea
adc
or
aaa
jecxz
mov
and
dec
xor
mov
pop
inc
sub
loopne
int3
jp
mov
imul
jb
lcall
imul
fs
inc
xchg
or
jecxz
lock
cld
rcll
aam
jmp
or
mov
sbb
outsb
out
pushf
xchg
imul
popf
cltd
fnsave
add
sahf
add
or
jb
sub
or
xor
int
push
pusha
ds
mov
cmpsb
leave
mov
sub
inc
mov
cmp
mov
ja
lahf
fsts
inc
push
or
out
nop
or
popa
loop
popf
movsb
xchg
xchg
push
dec
dec
or
sub
push
mov
cld
inc
mov
fldt
mov
add
out
in
addr16
fldl
int
xor
fisttpl
and
divl
push
in
into
xchg
mov
fucomip
and
mov
dec
ret
out
inc
mov
cmp
nop
out
and
or
test
mov
js
rcrb
fidivs
lahf
and
fs
addr16
testb
dec
push
sbb
jne
pushf
push
jo
xchg
xchg
insb
push
movsl
xlat
sub
cmp
inc
jle
cli
ror
ljmp
roll
loopne
mov
popa
leave
sarb
xor
inc
inc
fimuls
cwtl
and
jmp
imul
insl
inc
push
repz
pop
bound
inc
imul
orb
pop
xchg
xor
hlt
mov
lahf
sar
fbld
mov
vpunpcklbw
mov
push
pop
push
scas
or
test
mov
seta
xchg
lea
adc
sti
sahf
subb
inc
mov
jmp
jmp
dec
sub
ret
and
adc
inc
pop
dec
mov
jbe
push
cmp
xchg
pop
pop
inc
adc
cli
insl
and
enter
scas
mov
or
jle
or
pop
call
loopne
bound
inc
pop
inc
and
clc
or
je
in
push
jecxz
icebp
push
ret
cmpl
cmc
cli
mov
es
cmpsl
mov
fstl
add
ffree
xchg
jbe
adc
pop
es
ret
cmpsb
cmp
or
inc
xor
int3
mov
sbb
or
int
testb
inc
push
in
ljmp
pop
push
sti
dec
mov
stos
nop
sub
pop
jg
pop
cltd
fsub
cli
dec
out
popf
sbb
dec
pusha
arpl
and
lods
cmp
xchg
test
cld
outsb
sub
xchg
xchg
stos
xchg
jmp
xchg
pop
mov
cltd
addr16
cmovnp
je
in
cltd
in
cs
aad
ja
mov
jecxz
mov
cmp
push
mov
xchg
jl
add
mov
bound
add
test
add
fcmovbe
stos
add
xchg
iret
xchg
notl
outsl
mov
push
add
push
sbb
ficompl
cmp
xchg
xlat
mov
into
cmp
sbb
or
cmc
mov
mov
movsb
in
xchg
or
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
inc
cltd
and
jle
jns
jle
xorl
mov
leave
ret
mov
push
xchg
loopne
loop
adc
jge
insl
mov
jl
sbb
push
call
jg
lods
push
outsb
pslld
inc
int3
jle
mov
inc
jecxz
ficoml
rcll
subl
mov
in
sub
fldl
or
add
je
arpl
lret
jnp
xor
jle
add
popf
xor
jl
push
fidivs
je
int
push
cmp
push
inc
filds
sahf
xor
div
fs
xor
mov
mov
dec
stc
mov
jnp
sahf
in
mov
add
and
mov
arpl
xchg
jge
cmp
xchg
add
sarl
mov
movsb
and
push
xor
insl
in
mov
lds
mov
pop
dec
sbb
or
cmp
clc
stc
inc
jmp
fcmove
cmp
adc
pushf
xor
in
pushw
pop
cs
xor
sbb
repz
mov
lret
dec
lods
addr16
sbb
dec
xor
mov
dec
lcall
pusha
pop
push
mov
push
sub
lock
loope
jno
lcall
mov
stos
add
jge
pop
rcll
rorb
mov
mov
mov
pop
xor
cltd
and
ss
and
test
rolb
jae
repz
aam
dec
jle
repnz
mov
mov
push
sbb
repnz
popf
jnp
sbb
mov
add
ds
lcall
mov
loop
inc
jmp
icebp
mov
test
push
notb
adc
clc
jbe
jl
push
and
jl
xchg
dec
dec
dec
clc
mov
loopne
push
cmp
or
fs
push
push
push
mov
popf
movl
mov
xor
mov
pop
out
cmp
rolb
mov
cmpsb
ret
repnz
adcb
sub
ljmp
nop
pop
or
cltd
xor
repz
mov
mov
sub
repz
std
in
hlt
mov
les
jge
jne
fldl
sarl
push
cmpsl
fsubp
cmp
xor
xchg
ss
movsb
movsb
dec
fistpl
mov
testb
inc
push
ret
fcompl
cmp
lock
in
mov
cmp
icebp
cltd
xchg
mov
iret
adc
add
stos
repz
test
adc
add
sbb
sub
rep
cmp
inc
push
repnz
dec
stos
push
add
leave
xchg
and
dec
push
insl
jno
out
and
or
les
icebp
mov
dec
xor
sarl
mov
repnz
sub
loope
add
enter
sub
cwtl
out
sub
sbb
mov
inc
mov
mov
aas
call
insb
mov
inc
add
pusha
mov
add
jb
mov
enter
jge
jbe
push
clc
pop
push
nop
mov
das
xchg
iret
add
adc
dec
add
cmp
mov
mov
cltd
jl
js
roll
push
mov
sahf
js
lock
push
mov
pop
xchg
jp
dec
jnp
sbb
gs
lea
fwait
or
add
hlt
pop
cld
ja
cmp
xlat
add
push
nop
int
outsl
mov
iret
xchg
pop
or
cwtl
inc
cmpb
mov
and
cli
mov
pushf
pop
push
mov
movsb
movsl
push
dec
ret
mov
and
sbb
std
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
into
cmp
jle
inc
adc
pop
aaa
xor
jbe
fnstsw
fldcw
inc
inc
inc
cmpsb
ret
out
addb
cmp
adc
sbbl
adc
test
cmpsb
jo
cmp
or
out
and
sbb
pushl
mov
sbb
in
mov
push
ror
inc
pop
rol
adc
aad
dec
mov
cwtl
sub
pop
mov
inc
fimuls
out
sahf
sbb
insl
push
clc
nop
test
mov
hlt
push
rcl
xor
xor
data16
in
push
mov
sub
sub
fildll
aad
movsl
std
int
lds
cmpsb
dec
stc
fs
dec
mov
jns
mov
bound
imul
cmp
movsb
mov
pop
pop
cmp
xchg
ret
imul
aas
into
inc
lahf
hlt
inc
in
mov
cs
adcb
push
sbb
fcomps
jecxz
mov
cltd
inc
push
jge
cmpsl
adc
dec
xor
push
insl
push
jbe,pt
mov
pop
mov
mov
push
out
dec
scas
sub
je
mov
outsb
xchg
inc
insb
mov
popa
and
lods
test
mov
pop
clc
imul
or
aaa
or
xlat
and
in
ja
testl
push
clc
cmp
lret
fimuls
mov
adc
cmpsb
pop
sbb
or
jle
out
call
xor
mov
xchg
and
fstps
std
ljmp
lds
cmp
std
ja
std
gs
dec
mov
insl
jno
insb
nop
inc
cld
dec
mov
mov
adc
xlat
or
mov
out
notb
mov
jns
sub
add
adc
and
cmp
outsl
mov
loope
cmp
xlat
dec
and
jg
ja
push
ss
jecxz
push
mov
adc
outsb
mov
cmp
sbb
mov
inc
int
and
push
xchg
xchg
jle
cld
decl
jae
fnstcw
add
adc
cmp
insb
ds
clc
fldenv
fstpl
mov
mov
mov
push
dec
clc
xlat
cmp
adc
xchg
out
add
and
add
pushf
jns
sbb
clc
push
sub
jl
cwtl
lods
xor
outsb
adc
or
test
push
jecxz
sub
mov
cmp
mov
clc
out
pop
jnp
out
dec
sub
pushf
aaa
ficoms
mov
pop
mov
outsl
jno
mov
inc
shll
sub
inc
jne
movsl
dec
or
adc
sub
jg
gs
pop
mov
lret
or
sti
fidivl
sbb
inc
mov
sbb
and
cmp
imul
btl
popf
leave
or
xor
xchg
mov
aas
pop
jle
inc
loope
cltd
call
or
xor
mov
dec
imul
int3
mov
repnz
adc
stc
jae
sbb
shrb
add
orb
loop
out
mov
adc
in
jg
mov
sub
sub
sub
push
push
cmc
add
sub
adc
leave
popa
std
add
into
shll
xchg
sub
push
cmc
or
add
xchg
es
push
push
or
pop
mov
inc
sahf
clc
jp
push
mulb
inc
mov
jp
mov
sbb
mov
and
les
and
cmp
mov
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
jnp
inc
xor
jle
cmp
or
mov
jge
xor
adc
inc
inc
inc
fldl
mov
or
and
js
jl
mov
in
fnstcw
cmpsl
xor
lea
jge
scas
sbb
fidivrs
pop
mov
dec
xor
or
push
daa
shrl
adc
pop
pop
iret
loop
jg
das
dec
out
sbb
and
test
shll
ljmp
pop
sub
pushf
fldl
addr16
jge
arpl
jecxz
scas
sbb
inc
call
jae
pop
cltd
sahf
jne
push
pop
sub
je
test
call
fsubs
cli
std
mov
sbb
add
or
push
fldl
lds
cmp
sub
arpl
push
add
insb
cmp
lahf
jmp
mov
cmp
cmp
insb
cmp
cmp
mov
sbb
insl
addr16
push
stos
add
dec
stc
into
add
xlat
popa
mov
addr16
xchg
fstpt
cmpsl
rcll
out
loope
add
xor
cmp
sbb
sub
outsl
fwait
mov
in
into
cmp
jle
out
mov
or
inc
pop
push
pop
push
lods
xchg
aaa
sbb
fdivp
push
movsl
cmpsb
cld
sbb
xor
sub
jle
add
mov
pop
mov
xchg
js
stc
or
push
loop
adc
pop
mov
ds
adc
sub
fldcw
jmp
je
out
std
inc
outsb
sub
repnz
lcall
dec
scas
pusha
jne,pt
push
mov
xchg
xchg
stc
sub
std
into
cmp
mov
cmp
dec
std
pop
push
or
shrb
ret
inc
scas
pop
addr16
and
int
imul
sbb
loop
flds
pop
jb
jne
je
pop
push
mov
fimull
pop
sbb
je
xlat
pcmpeqb
ss
pusha
inc
popa
sti
sar
shll
shll
insl
dec
adc
or
cli
and
test
in
pop
pop
sarb
sbb
cltd
les
stos
sub
dec
xchg
icebp
divb
sarl
mov
popa
mov
rol
cwtl
push
xchg
rcrb
jno
xor
sbb
push
cld
add
cmpsl
mov
mov
sbb
push
loope
sub
push
cld
add
jo
decb
jecxz
inc
popf
mov
loope
mov
mov
int3
popf
xor
imul
mov
pop
stos
test
jmp
stos
test
push
sahf
lods
adcl
cli
push
fldcw
mov
sbb
push
dec
movb
mov
leave
xchg
shrb
xchg
mov
lahf
aad
js
enter
lock
mov
sarl
and
cltd
test
push
add
in
popa
mov
cmc
or
fcomip
out
and
sti
jecxz
pop
mov
and
mov
out
mov
das
fwait
sbb
sarl
jbe
movsl
aaa
mov
lahf
das
sub
cmp
xlat
push
int3
inc
xchg
add
xchg
jp
in
mov
add
rorl
enter
sarb
aad
mov
cmp
sub
inc
out
jge
xchg
dec
cmp
sub
cmp
call
lods
jae
pop
jl
sarl
mov
mov
mov
hlt
jne
outsl
add
stos
jl
jle
addl
scas
sub
mov
je
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
rclb
mov
scas
jle
jo
jle
push
cltd
in
jne
enter
cmp
pop
mov
je
popa
repz
lret
cli
inc
mov
adc
add
repz
lods
mov
sahf
and
adc
add
mov
out
in
stc
data16
add
add
fistpll
mov
rol
xchg
fcmovu
subb
jae
cmpsb
adc
inc
adc
or
cmp
jmp
xor
ror
rcr
cmp
and
pop
fsubl
lods
aam
xor
insb
pop
xchg
adc
pop
out
or
clc
insl
bound
mov
sbb
fistpll
dec
xor
data16
inc
xchg
mov
adc
push
mov
push
jno
fucom
popf
dec
in
sub
jnp
mov
sub
jl
push
mov
or
pushf
inc
jmp
repz
shrl
test
xchg
jp
out
std
imull
les
or
repz
dec
mov
lods
pop
xchg
arpl
adc
imul
or
inc
sbb
mov
imul
cmp
mov
cld
sub
sub
cmp
sti
jl
mov
cmp
push
movsb
andb
popf
dec
fwait
mov
cmp
es
mull
jb
xchg
filds
movsl
mov
cmp
inc
outsl
sarl
paddsw
leave
push
jge
sbb
cld
jl
mov
scas
pop
js
mov
push
nop
cmp
lds
das
in
testb
loopne
jl
std
and
sbb
jp,pt
xor
ja
popl
fbstp
jle
pop
xlat
jle
pop
inc
mov
mov
xor
sahf
test
cmp
js
mov
bound
and
in
fldl
pop
jmp
adc
push
ja
lds
push
push
out
test
and
pop
fldcw
arpl
les
mov
lds
xchg
mov
push
std
add
scas
or
imul
or
testl
popa
lods
inc
push
in
addr16
pop
and
sbb
shrb
lret
cli
jmp
js
cmc
lret
jle
roll
xchg
test
xchg
mov
nop
aad
sbb
mov
in
pop
lahf
push
sub
subb
jmp
ret
push
inc
lock
xchg
mov
adc
sub
lahf
push
or
xchg
push
and
jle
neg
fcmovnu
or
cmc
out
orl
jnp
addb
push
lds
mov
xchg
mov
dec
cmp
inc
repnz
lahf
adc
mov
sbb
and
cwtl
mov
int3
pop
nop
cmp
cmp
shlb
sbb
xchg
scas
pop
push
sti
dec
negb
pop
cld
mov
popf
mov
outsb
in
movsb
fxch
in
push
and
xor
xchg
punpckldq
pushf
jbe
icebp
frstor
pop
cmp
adcl
test
pop
addr16
out
dec
je
xchg
mov
ss
mov
push
sub
loope
call
cltd
lahf
mov
sub
repnz
es
jmp
jnp
inc
push
fcomps
cwtl
jnp
cld
aaa
hlt
mov
leave
push
fisubl
xchg
pop
jmp
sub
das
and
in
sti
loopne
inc
std
sub
cmpsb
add
cmp
aam
rcr
enter
bound
mov
push
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
push
jle
jo
jle
mov
insb
xchg
jle
loopne
mov
jg
pop
cmp
jge
mov
aad
scas
in
cld
lea
mov
icebp
mov
and
fisubl
lret
pop
pusha
sub
jmp
fisttpl
cltd
mov
lahf
mov
mov
fcoml
pop
jge
movsl
dec
loopne
or
loopne
jmp
out
decb
xchg
popf
xor
js
cmp
push
xchg
lods
pop
fdivs
sub
stos
jae
xchg
xchg
inc
ja
das
jp
dec
push
fwait
popl
rorl
dec
lahf
xor
mov
or
xorl
mov
cmp
mov
xor
add
insl
mov
mov
ljmp
stc
and
loop
mov
scas
pop
inc
pushf
push
mov
sbb
jbe
xorl
dec
mov
xor
pop
mov
add
xor
sub
push
cmpsb
or
xlat
in
jecxz
or
lahf
adc
rcrl
hlt
movsb
sbb
xlat
pushf
xchg
xchg
arpl
sbb
out
push
ljmp
sarl
inc
mov
and
push
pop
and
pushf
popa
pop
aas
sub
aas
stos
pushf
jle
xor
inc
xlat
mov
mov
xchg
sahf
sub
insl
outsb
or
mov
mov
push
stos
sub
popf
pop
push
cmp
inc
dec
out
jmp
inc
je
cld
sub
mov
bound
cmc
xchg
aaa
sbb
xor
jge
mov
jmp
mov
cmc
or
xlat
clc
lock
mov
xchg
or
or
pop
ss
dec
imul
add
adc
dec
push
imul
and
incl
cmp
mov
test
scas
push
int3
int3
mov
xchg
pop
ret
mov
xchg
push
std
fucom
scas
xlat
mov
scas
js
adc
les
fimull
jecxz
dec
divl
popa
add
cmc
in
in
push
bound
adc
pop
dec
mov
push
out
addr16
cmpsl
addb
fimull
dec
pop
push
loop
pop
xchg
jecxz
lcall
xstore-rng
cmpsl
xchg
ret
mov
sbbl
jns
jnp
inc
fdivrp
movsl
addr16
inc
fsubrs
cmp
in
mov
lds
aas
iret
add
div
rcl
push
mov
pop
xchg
jge
or
jb
test
lds
push
mov
lock
in
jo
aas
sub
repnz
test
mov
xor
cmpsl
aaa
cmp
cli
xor
push
adc
adc
cmpb
sub
mov
sbb
repz
jae
adc
jns
out
mov
pushf
jmp
sti
adc
xor
jmp
test
xorl
and
mov
mulb
push
dec
pop
popf
sahf
inc
or
lods
fcoms
jge
orb
sbb
push
adc
xlat
pop
sbb
lock
inc
push
mov
add
jl
mov
dec
ljmp
sub
sub
lds
dec
xchg
adc
sub
mov
sbb
nop
push
movsl
mov
cli
leave
and
ja
enter
xchg
imul
inc
imul
cmp
clc
sub
mov
push
and
leave
insl
jecxz
xor
loope
pop
fdivp
cli
data16
jg
mov
mov
mov
ss
mov
mov
xchg
daa
sub
sub
negb
movsl
xchg
or
lcall
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
lock
and
jle
imul
outsl
gs
xchg
in
stc
rcrl
push
ss
out
xor
mov
inc
add
ficomps
imul
jns
pop
add
pop
ja
call
mov
fs
arpl
out
mov
gs
stos
outsb
lods
adc
sbb
sahf
shl
cmp
push
cmp
mov
addr16
div
mov
ret
sbb
std
pusha
dec
jmp
adc
mov
dec
in
dec
dec
push
pop
push
push
lahf
stos
call
cmp
jecxz
mov
cltd
pop
add
sub
mov
bound
les
mov
xchg
xlat
loop
in
lret
inc
adc
ret
fxch
add
sbb
out
bound
sbb
mov
or
inc
loopne
sbb
push
add
cmc
icebp
je
cwtl
jl
mov
sbb
adc
push
out
mov
fidivrs
test
leave
cmp
inc
mov
or
cmp
pusha
leave
fsubs
div
adc
jo
mov
pop
mov
xor
nop
adc
mov
xchg
in
aaa
in
test
mov
push
insb
ffreep
arpl
nop
push
popf
stos
leave
jbe
mov
dec
shll
pushf
fsts
cmp
xor
scas
cmpb
jne
js
lcall
fistpll
shrl
popa
ds
scas
push
add
adc
jnp
or
jb
xchg
pop
shrl
negb
inc
inc
je
fdivrs
popf
shll
lret
cmp
jb
loope
mov
or
jmp
inc
fldenv
inc
insb
lahf
xlat
repz
iret
sub
sub
data16
lahf
fsubrl
sbb
or
dec
push
iret
cmovs
imul
dec
jb
mov
adc
jg
nop
sub
popa
sbb
xlat
sub
in
clc
cld
inc
and
mov
sub
ljmp
mov
clc
sub
mov
fbld
sbb
sub
repnz
movsl
adc
push
cs
jno
enter
xchg
xor
jnp
sbb
and
pop
ja
push
pop
xor
jns
add
jle
mov
dec
xchg
sbb
push
addr16
ljmp
and
push
arpl
sahf
or
ret
sbb
push
push
mov
mov
cmp
add
jl
repnz
lods
loop
es
pop
sub
movl
mov
repz
dec
rorb
aaa
push
sub
int3
mov
inc
test
sub
xchg
hlt
push
mov
cld
aam
aad
jnp
mov
aaa
adcb
inc
sbb
arpl
mov
cmp
je
mov
mov
jo
push
xor
rorl
sub
iret
mov
ret
fisubrl
push
test
dec
fistps
les
repz
fs
mov
leave
and
xchg
jne
mov
push
insw
movsb
sbb
mov
add
inc
mov
jle
outsl
pop
and
push
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
pop
stos
setle
jle
ja
stos
sahf
adc
xchg
or
ja
xchg
inc
mov
mov
xchg
lea
popf
adc
mov
sbb
mov
mov
sti
dec
dec
mov
movsl
rcrl
and
and
stos
pop
jle
lcall
frndint
push
shl
inc
xchg
xchg
test
jne
leave
xlat
sbb
sbb
scas
ds
outsb
sub
xor
mov
xchg
pushf
xchg
fadds
sbb
mov
cmpb
nop
mov
xor
cmp
sub
loope
icebp
adc
ss
or
js
outsl
xor
js
inc
jle
and
pop
add
aad
out
sbb
jp
mov
sbb
mov
mov
bound
add
rorl
test
adc
cmp
cmp
xor
cmp
les
enter
sti
pop
lock
cmc
cmpsb
test
stc
clc
add
and
or
jnp
adc
fsts
mov
clc
push
dec
push
lret
dec
or
xor
dec
cltd
aam
sti
lahf
lods
dec
jne
push
fxch
cmp
enter
test
roll
rcrb
pop
ja
test
pop
adc
rorb
mov
stos
inc
imul
xchg
adc
mov
pusha
es
fwait
cs
shll
call
dec
sub
das
and
call
mov
loop
xor
les
mov
jno
or
jp
loope
enter
insb
push
popa
or
stos
and
std
mov
dec
xchg
sbb
pushf
stos
dec
dec
add
push
es
int3
pusha
pop
jns
jmp
push
mov
push
add
ja
cmp
mov
adc
cs
adcl
mov
ljmp
mov
xchg
adc
mov
xor
push
sub
loop
cmpsl
aas
add
mov
mov
jb
and
cmp
int
data16
sbb
xchg
xlat
lds
push
mov
sub
fwait
add
pop
mov
arpl
xchg
das
pusha
insl
or
jns
push
shlb
push
dec
and
clc
nop
jae
jp
xor
mov
xchg
rorb
or
add
mov
dec
cmp
loopne
je
sbb
mov
or
push
iret
jo
cltd
out
getsec
mov
cmp
jo
lock
adc
ljmp
sub
push
adc
jne
xchg
push
adc
inc
sbb
pusha
mov
sbb
sbb
shlb
mov
sbb
ficompl
and
or
es
in
dec
cld
dec
das
popf
xlat
sarb
xor
mov
push
push
std
sub
and
mov
fistpll
fdivrl
push
xchg
adc
add
sub
and
mov
dec
inc
popf
and
lahf
int3
xor
xchg
mov
dec
popf
mov
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
mov
loop
adc
jle
hlt
jns
jle
mov
xlat
sub
pop
jno
mov
mov
ret
adc
push
mov
movsl
push
xchg
cmp
xor
mov
sub
add
stc
mov
push
ds
rcrb
push
xchg
cwtl
mov
lcall
mov
fcomi
arpl
mov
leave
and
and
add
es
mov
add
stc
xchg
push
enter
mov
daa
xchg
xor
xchg
pushf
xor
pop
popf
lods
cli
ja
js
mov
add
push
in
mov
push
pop
iret
and
lods
push
sub
inc
adc
push
pop
into
sub
adc
test
inc
jmp
pmaddwd
mov
stos
in
es
sbb
mov
xchg
mov
mov
pop
cwtl
cmpsl
push
xchg
ret
adc
xchg
mov
pop
mov
scas
icebp
repz
pop
pop
jne
repnz
pop
add
lret
jg
out
mov
movsb
fdivrp
pop
and
mov
mov
arpl
push
inc
pop
mov
xor
cltd
aaa
xor
movsb
push
jl,pn
pushf
test
out
adc
ret
movsl
mov
push
ret
loopne
test
das
pop
test
rorb
or
push
out
bnd
or
mov
mov
cmc
pusha
int
test
sub
sub
add
test
mov
aas
imull
aaa
jne
data16
xor
inc
repz
jae
scas
ds
jno
push
cmp
test
add
xlat
clc
cwtl
jns
xor
outsl
fdiv
pushf
fisttpl
sub
cld
ret
cltd
push
into
fwait
push
mov
shll
sub
fdivl
mov
push
dec
std
imul
sub
mov
orl
cwtl
mov
loop
or
idivl
xchg
lods
pop
inc
push
pop
push
push
dec
orb
jl
xchg
fcmovnu
adc
adc
sbb
call
sar
pop
add
jmp
add
in
sub
xchg
idivb
iret
or
leave
daa
push
jle
mov
inc
xchg
mov
jae
push
jbe
call
sbb
pop
or
nop
mov
popa
adc
arpl
aad
or
add
adcl
pusha
xchg
mov
dec
hlt
cmp
fistpl
stc
inc
jbe
sbbb
int3
pop
cwtl
sub
xor
or
test
movsl
pop
stos
insl
cmc
xchg
lahf
push
push
aas
repz
pop
add
mov
add
mov
xor
data16
adc
pop
stos
ss
movsb
cmpsl
mov
inc
scas
outsb
lea
rcrb
int3
jae
test
std
lcall
ja
push
adc
xchg
clc
clc
add
adc
mov
xorb
dec
inc
mov
adc
push
jne
lods
outsl
jg
or
movsb
push
push
push
fdivr
pop
cmp
test
repnz
testl
jne
jge
movsl
push
shrl
xor
mov
inc
cmp
les
psadbw
inc
orb
cmp
jb
dec
or
add
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
jl
and
mov
jle
mov
jecxz
cld
jb
push
aas
add
sbb
pop
xor
cltd
loopne
jae
jno
cld
add
add
loope
or
xchg
push
add
out
stos
xor
lods
jp
push
frstor
sub
call
mov
adc
mov
jno
out
inc
out
test
mov
mov
out
and
pop
loop
cld
aaa
jne
xchg
push
jno
dec
pop
sbb
xchg
scas
in
push
inc
or
stc
push
es
xor
add
je
mov
add
fcoml
mov
dec
jp
es
int
adc
out
jecxz
xor
lret
outsl
mov
mov
cmp
sub
lea
lds
sub
imul
outsl
addr16
shrb
cs
fmuls
mov
lret
mov
repnz
mov
ffreep
inc
add
fistpl
das
push
test
adcl
test
or
arpl
fnstcw
push
xchg
or
in
fidivl
lods
add
push
and
push
mov
xor
jl
cmpsb
bound
add
mov
loop
or
xor
test
xor
add
fwait
mov
nop
cltd
mov
cmp
add
es
cli
jbe
lret
pop
mov
jno
and
add
roll
jbe
aad
jmp
sub
sub
lea
loope
rcrl
daa
test
xlat
imul
dec
add
fdivl
daa
fsubrl
ds
es
xchg
iret
inc
rol
and
ss
nop
pop
inc
pop
cmpsl
adc
outsb
fsubrp
mov
dec
mov
test
xchg
ficomps
sub
ja
mov
push
inc
test
adcl
adc
dec
cld
mov
jno
in
in
dec
imulb
cmp
xchg
cmpsl
loopne
je
ljmp
xchg
es
loop
xchg
pushf
dec
sub
lcall
sub
jle
dec
adc
outsb
jl
int3
stos
cmp
stos
outsl
jmp
jp
lret
xlat
dec
dec
mov
out
sti
pop
cmp
pop
or
hlt
xchg
scas
mov
aas
lahf
xor
dec
inc
out
sub
add
in
ss
out
clc
mov
fbld
lahf
cmp
arpl
repnz
jp
das
mov
ja
pop
xchg
push
das
pushf
repnz
dec
subb
pusha
pop
sbb
adc
pusha
xor
jle
or
lcall
jo
sbb
jns
push
rorb
mov
notl
xchg
adc
mov
dec
lcall
xchg
sbb
inc
xchg
sub
in
pop
mov
enter
enter
sahf
xchg
ficompl
cli
dec
rcrb
loop
xlat
ret
push
test
cs
pop
aas
lds
cld
xchg
mov
fistl
dec
pop
pusha
mov
mov
mov
xor
xor
sub
and
mov
dec
mov
inc
cld
xor
pop
jmp
push
clc
clc
mov
test
adc
pop
stos
js
inc
jle
hlt
jns
jle
dec
mov
cmp
fdivr
and
jnp
xchg
push
pop
or
push
mov
sarb
mov
sbb
repz
inc
mov
or
mov
pop
lret
fdivrs
and
jle
dec
loope
jg
xchg
pop
sbb
or
sbb
retw
or
push
and
or
fs
rcr
push
popf
stc
por
pop
in
jp
cld
xor
sub
iret
or
and
fldt
aad
push
pushl
sti
mov
rcll
cmpsb
pushf
pop
push
lahf
mov
nop
stc
xchg
xchg
pop
orb
stc
push
push
vmovaps
stc
xchg
shrl
xchg
push
jne
movsl
fistps
and
movsl
nop
popf
jnp
dec
fisubrs
divl
popa
insb
test
dec
and
mov
cmc
lcall
pop
int3
xchg
inc
sbb
lcall
sbb
in
aaa
or
mov
inc
sahf
repnz
sbb
jae
xchg
fmul
mov
fisttpll
lock
jno
inc
les
data16
push
pop
notl
mov
aas
pop
ja
sub
cmpsb
in
dec
xchg
ja
mov
add
imul
jecxz
adc
inc
ret
lahf
push
jb
push
aaa
sub
sub
mov
mov
fcomip
js
push
adc
andb
stc
jl
cwtl
outsb
ljmp
ljmp
inc
ss
push
adc
call
pop
mov
jb
pop
out
jb
js
popf
dec
test
jecxz
add
cld
xlat
or
in
test
test
outsb
mov
xchg
outsb
ret
fldenv
into
xor
xor
popf
movsb
mov
icebp
mov
fsubrs
sbb
xchg
leave
sahf
lcall
xchg
sub
sub
mov
jecxz
cmc
push
loope
into
and
mov
int3
pop
pop
pusha
and
cmpsb
fistl
je
popa
fwait
cld
xor
and
inc
dec
stos
ja
sub
sub
add
inc
ss
mov
push
aaa
data16
adc
add
push
cmp
xchg
iret
cwtl
mov
movsl
imul
xor
test
aad
nop
je
shr
std
mov
mov
mov
in
mov
hlt
arpl
sbb
or
cmp
mov
mov
das
push
mov
jne
add
mov
add
outsl
xchg
pop
sti
sub
dec
in
xlat
cs
add
std
pop
movsb
pop
adc
jae
cltd
decb
sub
rclb
std
inc
and
lcall
lahf
inc
or
dec
push
jno
je
or
stos
inc
adc
sbb
jns
aam
fildl
fcoml
mov
push
loopne
pop
insl
pop
icebp
test
in
rorl
xor
cmp
xchg
fs
xchg
push
xchg
sub
push
loope
loop
mov
xor
outsl
mov
sub
ret
pop
xor
mov
jp
sbb
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
popf
push
mov
testb
pushf
jg
jle
cmpsb
xlat
js
imul
jg
popf
jl
add
out
dec
mov
mov
lea
imul
sbb
ret
decb
repnz
pop
xchg
xor
fisubrl
pop
idiv
pusha
mov
setno
lret
out
hlt
mov
fdivrs
sub
push
jb
cmp
inc
shl
cltd
mov
xchg
pop
fmull
rorl
xor
xor
adc
std
das
shlb
push
push
xlat
into
xchg
or
cltd
adc
sub
sti
fdivrl
js
mov
loope
pop
mov
dec
icebp
sub
mov
movsb
jo
aam
xor
cmp
mov
clc
movsb
scas
inc
stc
mov
cld
ret
xchg
dec
test
mul
adc
push
sub
cwtl
mov
push
arpl
stc
movsb
adc
mov
sbb
gs
int
movsb
and
inc
xor
pop
test
test
test
cmp
mov
mov
int3
ljmp
lret
mov
and
rclb
inc
into
xor
lcall
out
das
inc
jne
aad
xchg
lahf
mov
lcall
lret
push
sbbl
stc
int
xchg
test
xorl
andl
jge
flds
mov
mov
decl
lret
mov
fwait
and
or
xchg
inc
jecxz
xchg
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
es
loope
adc
jle
pushf
jg
jle
mov
cmovne
decb
andb
jp
mov
subl
jo
or
sub
imul
sub
pop
das
push
aad
dec
hlt
and
or
rolb
jb
xorl
adc
sbb
cmpsb
sub
xchg
stc
fstl
lret
cld
jne
sub
mov
push
jle
jmp
jge
test
sarl
in
lock
inc
sahf
je
mov
arpl
adc
addb
pop
into
cmpsb
xchg
mov
test
adc
mov
call
mov
aad
les
mov
lret
sbb
lock
sbb
pop
repnz
pop
rcrl
je
add
inc
pop
dec
dec
sbb
arpl
popa
mov
shlb
scas
mov
scas
cltd
jae
inc
popl
divl
lcall
jb
addb
std
lret
adc
sbb
popf
cmp
ret
fstpl
push
subl
imul
pop
sbb
cld
cmp
cli
cwtl
push
sub
jecxz
add
jne
in
fs
cmp
jecxz
fldcw
xchg
xor
mov
mov
stos
xchg
daa
roll
and
jecxz
jne
mov
pop
pop
cwtl
jg
push
sbb
mov
mov
repnz
pand
mov
sbb
out
jl
inc
ret
in
daa
aaa
adc
push
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
push
aas
and
stos
inc
jle
popf
js
jle
lcall
out
and
or
lret
shrl
adc
call
xchg
std
out
or
push
repz
sti
adc
push
fwait
out
imul
or
sbb
cmp
push
scas
jnp
es
aad
xchg
dec
pop
out
repz
mov
std
in
scas
sbb
inc
ss
lods
sub
fisubrs
pop
fidivrl
jp
inc
fidivrs
mov
add
outsl
push
add
mov
dec
insl
rcr
dec
sub
mov
decb
jb
sbb
jno
les
inc
and
cmp
sbb
shll
arpl
jl
xchg
xor
xor
dec
sub
push
aas
test
mov
ret
outsl
out
mov
xchg
js
fisubrs
mov
xor
push
cmp
jns
fstps
xlat
mov
jo
inc
shl
pushf
cmc
push
lea
adcb
and
jne
and
idivl
pusha
loop
negl
imul
in
sub
aaa
cmc
add
sub
in
mov
mov
fwait
pop
or
jno
dec
xor
sbb
adc
mov
mov
jo
or
cwtl
xchg
dec
shrb
and
stos
js
jp
outsl
inc
mov
adc
add
sbb
xchg
mov
fistpll
inc
fmuls
call
orl
popa
jno
adc
jb
and
dec
cli
hlt
add
xchg
pusha
lea
loop
es
dec
pop
or
sbbb
in
xchg
and
fiadds
and
je
ljmp
mov
cmp
cmp
dec
icebp
inc
dec
xor
insb
shrb
sub
or
mov
dec
mov
push
aaa
pop
pop
sbb
dec
inc
into
cmpsl
lcall
and
sub
or
xor
push
popa
arpl
in
ficoml
push
mov
jp
inc
sti
dec
push
inc
iret
xchg
in
fs
sti
movsl
push
int
les
push
xchg
push
or
jnp
lds
not
lcall
jnp
out
mov
sub
insl
mov
pop
lahf
xchg
mov
xorl
repz
cmc
xchg
add
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
add
and
sbb
mov
out
popf
xor
rcr
xchg
jne
rcrb
xor
mov
ret
mov
mov
repnz
adc
push
imul
mov
pop
or
test
fmulp
jmp
aad
sbb
pop
pop
inc
pop
push
xor
jb
pop
mov
call
lahf
ret
mov
in
adc
add
ss
jo
or
mov
push
inc
sub
dec
mov
add
xor
int3
div
test
adcb
inc
xchg
popf
int
clc
fbld
lahf
xchg
xchg
xor
cmp
leave
pop
jmp
daa
test
cmp
dec
stos
aaa
int3
out
mov
push
cli
push
test
out
and
jecxz
cs
nop
inc
pushf
pop
pop
jns
mov
imul
stos
aaa
inc
fisubrl
xor
scas
test
or
pushf
inc
sub
cltd
push
out
jbe
and
push
jge
push
call
orl
pop
mov
ret
inc
mov
inc
pop
xchg
sub
adc
pop
data16
xor
dec
and
pop
and
sub
imul
push
xor
out
cmc
pop
andl
sbb
sbb
mov
add
mov
das
cmpsl
orl
adcb
repz
pop
mov
cwtl
and
push
into
test
imul
inc
sub
fdivrl
into
cli
push
jne,pn
lds
add
inc
pop
and
cli
repz
rolb
dec
sub
aaa
jmp
cmp
lods
aaa
add
lds
shlb
adc
enter
mov
mov
fmull
adc
or
ret
add
mov
sbb
fldl
clts
lods
inc
sub
mov
ss
incb
test
ss
or
xchg
mov
cmp
aaa
xor
add
and
movsb
mov
and
or
jle
sbb
lds
sbb
and
test
jne
jg
mov
add
or
mov
jo
cmp
dec
movsl
sbb
jbe
xor
dec
loopne
fwait
sahf
xchg
jp
or
adc
xor
jl
xchg
inc
sub
or
sbb
jl
popf
ds
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
ret
lods
push
js
jle
ret
sub
add
pop
fidivrl
pusha
cli
imul
or
xchg
icebp
cmp
insb
sarw
aaa
pop
lods
jmp
test
jecxz
pop
pop
inc
sub
ret
cli
adc
and
dec
sbb
mov
xchg
mov
or
dec
out
sbb
mov
loopne
scas
xchg
sbb
or
or
dec
add
bound
notb
rolb
mov
or
cwtl
cmp
loope
mov
dec
push
push
add
mov
out
pop
xor
dec
or
xor
xchg
and
add
jle
in
mov
orl
mov
cltd
lahf
out
out
mov
punpckldq
and
aas
add
adc
sbb
jecxz
popf
add
aaa
lahf
bound
in
jbe
and
dec
js
push
inc
mov
push
sbb
test
cmpsl
bound
shll
mov
out
arpl
and
mov
push
imul
inc
push
push
das
sub
aad
aaa
sub
push
mov
lock
jns
cmpsb
in
pop
ds
push
movsl
adc
add
or
xlat
subl
mov
jmp
push
xor
mov
das
adc
icebp
adc
cwtl
xor
aas
adc
pop
test
pop
mov
jno
mov
sub
subb
push
sbb
inc
iret
adc
dec
iret
loope
jbe
adc
push
gs
outsb
cmp
cmp
in
jae
movb
jae
pusha
and
scas
je
mov
aas
sub
idivb
ds
and
ret
push
mov
andl
or
mov
repnz
sbb
pop
shll
mov
push
cmp
fwait
mov
sub
data16
popf
mov
pop
in
ss
dec
dec
aaa
adc
shrb
es
mov
inc
out
hlt
insb
ds
jg
push
push
testb
xchg
imul
dec
aad
inc
dec
sbb
add
inc
sub
mov
jo
aam
stos
lret
sarb
lea
push
pop
jmp
xor
inc
mov
inc
sbb
xor
cli
out
sub
pop
stos
sbb
push
gs
pop
or
adc
clc
inc
pop
fs
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
add
pop
jg
jle
jbe
mov
out
dec
xchg
je
or
or
scas
mov
rolb
shlb
stc
stos
jns
arpl
test
ljmp
pop
xchg
jmp
bound
pop
pop
aam
jge
mov
jge
cld
popf
cltd
xchg
insl
mov
mov
sbb
inc
cmpl
bound
dec
popa
into
movsl
negb
dec
mov
fiaddl
rcr
outsb
cmp
int3
inc
push
push
popa
mov
gs
adc
dec
adc
test
dec
call
add
mov
inc
aaa
popf
cmp
pop
sub
push
xrstor
icebp
iret
xlat
lock
mov
ds
ss
int
inc
jo
adc
mov
imul
orl
clc
in
cwtl
mov
sbb
push
out
shll
lods
dec
lods
mov
aas
aas
and
sub
test
ficompl
or
sub
dec
dec
add
mov
mov
jp
dec
in
divl
inc
addr16
mov
icebp
stos
xor
cmp
cltd
in
sub
pop
push
adc
in
in
mov
dec
mov
jge
cmp
cli
sbb
mov
popa
or
mov
sbb
sub
stc
mov
mov
iret
test
sti
flds
jb
cmp
fisubs
or
rorb
fs
push
int3
mov
pop
ficoml
stos
insb
pop
in
jae
push
sub
int3
pusha
lds
cmp
or
dec
push
xor
inc
or
mov
add
mov
ja
ficompl
add
mov
mov
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
cmp
push
jle
pop
jg
jle
mov
shlb
ss
mov
cmpsb
lret
xchg
imul
testl
loope
ljmp
cmp
pop
cltd
mov
sub
fnstsw
out
add
or
daa
rol
scas
sar
push
push
sarl
push
in
jns
cmp
push
stc
xchg
mov
fistpll
cltd
cmpl
fidivl
loop
and
pop
lea
push
clc
push
imul
inc
call
inc
inc
cli
aam
sub
int3
cmp
sbb
dec
pop
test
scas
push
mov
aaa
mov
lods
stc
mov
xor
out
in
cmp
std
into
call
roll
dec
gs
adc
add
or
mov
sbb
repnz
outsb
adc
mov
es
jmp
dec
dec
lret
stc
jg
shlb
je
dec
dec
adc
nop
mov
call
gs
std
pop
mov
sbb
dec
xorl
jg
mov
mov
or
rcrb
mov
push
sub
in
inc
sbb
push
das
loopne
add
cmp
pop
push
fimull
mov
out
dec
push
mov
pop
push
loopne
mov
dec
mov
je
sbb
and
clc
mov
pop
push
mov
aam
inc
sub
ret
test
pop
imul
mov
add
adc
sahf
aam
sub
sbb
jmp
cmc
mov
or
insb
or
in
dec
test
leave
xchg
popl
shll
pop
outsb
jb
out
push
push
push
std
jle
dec
test
adc
push
sbb
loope
int
adc
sub
sub
cwtl
sbbb
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
subb
aad
jle
pop
jg
jle
mov
mov
popl
lea
inc
lcall
jne
and
cmc
jae
lods
jns
push
outsl
pop
sbb
aas
jmp
lds
cmp
mov
lods
cli
jbe
fs
sti
sub
mov
in
jle
int
push
mov
sub
pop
add
cmp
aas
movsl
jns
add
out
outsl
mov
fwait
jnp
cmp
xlat
cmp
add
je
leave
add
mov
das
gs
movsb
out
add
add
les
xchg
loopne
mov
jae
push
adc
xlat
jecxz
mov
mov
inc
mov
xchg
push
add
aad
jno
and
rolb
jl
inc
sbb
mov
pop
subb
into
push
dec
lret
cmpsl
sbb
insb
and
dec
into
mov
movq
push
out
push
mov
sbb
dec
aad
ret
xchg
vphaddubw
aam
jno
jae
or
imul
adc
mov
inc
popf
jle
sub
xor
lcall
or
and
adc
ds
push
pop
add
repz
lret
push
call
loope
in
movsb
inc
cwtl
jmp
fwait
add
mov
cmpsl
sub
pop
ret
fcoms
jp
mov
rol
adc
sub
sbb
mov
or
add
xlat
aaa
out
xor
add
lret
inc
mov
jo
cmp
pop
rcr
mov
pusha
xor
push
loope
jmp
mov
sarl
pop
xor
xor
push
add
pop
mov
jp
into
sbb
aas
icebp
mov
sbb
mov
sub
je
jnp
addr16
add
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
mov
push
jle
pop
jg
jle
sbb
sbb
loope
in
cmp
leave
les
add
jle
js
orl
dec
mov
adc
stos
mov
les
in
adc
inc
in
lds
jle
add
aaa
int3
data16
decb
fwait
je
shl
test
js
ja
into
data16
ds
jecxz
inc
cmc
hlt
das
jns
cld
adc
in
inc
out
sub
fistps
mov
and
adc
jo
sbb
cmp
push
xchg
frstor
jp
and
pushf
sbb
ja
mov
movsb
shl
scas
sub
cmc
lret
sub
fs
jne
in
mov
sub
mov
sbb
sbb
repnz
fisttpl
loop
add
pop
xchg
jae
lcall
repnz
mov
push
lea
cmpsl
xchg
loope
icebp
and
je
sub
cli
cmp
ret
imul
or
stc
add
xor
mov
fistpll
jb
jbe
xor
push
xchg
stc
cld
popa
les
push
xor
pop
mov
cs
and
popf
fstpl
mov
addr16
cmp
sbb
sbbb
adc
das
out
mov
inc
xor
xor
lret
ret
decl
rep
mov
mov
cmpsl
dec
mov
adc
adcl
bound
clc
sahf
dec
int3
pop
aas
lea
cmp
into
cmp
outsb
xchg
decl
jno
ljmp
test
pop
loop
icebp
inc
sahf
arpl
pusha
icebp
popf
scas
imul
jnp
jne
or
les
xor
lahf
xchg
andl
mov
jg
jbe
xchg
clc
push
popa
mov
mov
jmp
cmp
jne
xchg
mov
lea
adc
jle
jg
jle
insb
fistps
xchg
add
lcall
xchg
shll
mov
lahf
ljmp
mov
subb
sbb
xchg
rcr
mov
and
lds
and
loope
push
enter
daa
xor
adc
lods
push
arpl
xchg
cmpsb
xchg
aas
in
jg
arpl
push
xchg
je
out
movsl
dec
sub
in
and
ret
push
jg
cmp
lea
push
cmpl
adcb
mov
adc
adc
enter
mov
mov
loop
jmp
add
je
or
sub
cmp
nop
push
nop
pop
mov
ljmp
test
rorb
rcrl
adcb
add
cmp
fcoms
arpl
into
sbb
dec
lods
rorl
jge
outsb
xchg
lret
test
iret
jge
fcmovbe
hlt
and
jne
neg
push
add
sub
std
xchg
jp
cmp
inc
ss
mov
mov
add
inc
add
js
jge
inc
mov
jne
xor
mov
pushf
icebp
addr16
lret
pop
aas
sti
sbb
pop
sbb
popf
and
std
enter
pop
add
lock
data16
jo
sub
into
xchg
ja
cwtl
scas
or
pop
fs
out
test
cmpsl
xchg
mov
mov
push
lods
mov
cmp
xchg
push
pop
adc
add
sarb
mov
mov
repz
xor
mov
mov
or
xor
test
nop
shll
ret
dec
jmp
dec
nop
mov
mov
xor
cmp
leave
add
jp
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
fisubs
jle
jle
pop
jg
jle
cmpl
cmp
adc
pop
stc
xchg
stos
adc
xchg
shlb
add
cmp
sub
adc
movsl
and
adc
cmp
lea
ror
push
xor
data16
pop
dec
ja
mov
mov
and
fistps
or
fldt
jp
je
cmpsb
mov
out
data16
fadds
xchg
push
pop
mov
mov
jns
dec
fninit
sbb
movsb
das
sub
inc
jle
jns
push
cmp
fwait
mov
jnp
mov
jne
repz
es
jp
fcmovnbe
xchg
loopne
sbb
pop
add
sub
mov
ret
subb
lahf
popl
ret
mov
repz
fs
das
sbb
pop
loope
mov
out
and
mov
sub
rep
lea
repnz
imul
jno
aaa
mov
stos
sbb
std
mov
jo
lret
and
add
inc
inc
jp
mov
es
imul
rolb
aam
cmpsl
mov
movl
fidivrl
idivb
idivl
pop
aad
rorl
jbe
mov
xchg
add
repz
les
loopne
adc
popf
sub
jge
popf
lea
sbbl
mov
mov
pop
push
fs
dec
adc
inc
jae
rcrl
lods
sub
pop
enter
outsb
test
aaa
sti
pop
aaa
push
add
enter
inc
pop
aaa
sbb
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
in
fmulp
pop
pop
jle
pop
jg
jle
icebp
clc
pushf
addr16
subl
or
outsb
in
loop
pop
loopne
pop
dec
lahf
ret
ret
mov
lcall
mov
sub
inc
jne
je
xor
ret
fwait
pop
inc
mov
hlt
xor
xlat
daa
mov
mov
jnp
sti
jne
leave
es
xchg
into
adc
aaa
and
aam
cld
lret
mov
sbb
aas
inc
in
xchg
sbb
lahf
add
fs
stc
push
push
cmp
jmp
lock
stc
ljmp
sti
scas
push
repnz
mov
push
jge
pushf
xchg
in
or
out
inc
xchg
pop
bound
sarb
and
and
insb
add
pop
adc
outsb
stos
push
inc
and
cs
push
in
notb
add
fdivr
jae
pop
int
gs
cmp
fsubrs
xor
adc
ret
ds
jae
daa
push
cmp
cmp
and
pop
lock
inc
xchg
push
xchg
inc
cltd
rcrb
je
popf
push
sbb
stc
dec
mov
pushf
aam
push
jne
lods
fs
fisubrs
jle
faddp
jns
dec
lcall
sbb
jp
les
das
mov
bound
jb
and
mov
cmp
addl
push
jp
push
add
jge
gs
adc
test
push
mov
arpl
sub
mov
pop
imul
mov
cltd
sbbl
mov
addb
leave
add
inc
js
pop
jb
dec
fisubs
dec
repz
test
and
pop
out
or
xor
mov
mov
iret
out
hlt
into
or
test
pop
enter
jmp
aaa
cmp
cltd
int
jno
ja
loope
adc
pop
test
jle
jg
jle
ret
es
lea
mov
xor
xor
mov
popa
dec
scas
aas
add
cmp
aad
or
ret
inc
cmp
and
cli
add
gs
xchg
adc
jo
mov
jbe
cltd
stos
or
ljmp
pop
mov
mov
xchg
sbb
add
jmp
and
subl
lcall
mov
lock
inc
mov
xchg
jo
hlt
sbb
pushf
gs
stos
or
push
nop
js
out
stc
rcll
out
or
dec
sub
outsl
loop
sbb
test
outsl
jecxz
cwtl
adc
dec
je
cli
movl
popf
xchg
xchg
jo
adc
or
pop
dec
popf
lds
ficompl
jg
xchg
push
cmp
fsts
sbb
push
into
fisubrl
scas
mov
adc
lcall
fprem
push
jg
int
fwait
xor
iret
xor
outsl
xchg
cli
jb
fmuls
std
mov
adc
jg
push
clc
test
mov
xor
sbb
push
insb
pop
test
mov
mov
ret
fwait
jnp
jno
cmpsb
dec
sub
and
jl
push
aaa
inc
test
je
divb
ljmp
lock
mov
adc
sub
cld
inc
jae
sub
rcl
mov
push
jecxz
ljmp
je
scas
shlb
mov
mov
or
stc
addr16
dec
mov
dec
and
jle
in
xchg
fimull
or
stc
xor
imul
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fmuls
jmp
jle
pop
jg
jle
and
push
pop
mov
xor
fmuls
leave
dec
sbb
repz
and
dec
and
sub
cmpl
icebp
fcomip
inc
pop
out
or
adc
jl
xor
aas
or
sar
ret
push
or
jl
fcoms
pop
or
inc
aas
in
in
pusha
mov
ror
cmp
and
rorb
sub
cltd
add
loopne
outsl
in
sbb
push
jo
arpl
and
shrl
pop
and
cmp
loop
sub
and
fsubrl
hlt
mov
inc
lahf
sub
repnz
subl
mov
and
push
lods
lret
mov
mov
popf
aas
mov
mov
or
xchg
xchg
and
lcall
push
lret
scas
xchg
mov
and
sub
add
lods
xchg
mov
mov
mov
or
imul
xchg
sbb
fisttps
clc
sbb
xchg
or
xor
mov
xchg
xorl
aas
sti
rorl
and
add
and
fs
sbb
int
rcrb
and
pop
mov
sbb
inc
stos
rcrb
testb
sbb
scas
push
mov
push
add
imul
test
cmp
mov
dec
xlat
je
sbb
imul
rorl
movsb
xchg
movsl
jbe
xor
outsb
mov
int3
and
push
faddl
cmpl
stos
mov
aad
pop
sbb
and
mov
fiaddl
push
adc
xor
cmp
rorl
sub
adc
push
jbe
cmc
nop
aaa
cli
xchg
pop
mov
insl
inc
in
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
flds
in
add
add
add
mov
jg
enter
pop
sub
inc
mov
pop
add
xor
inc
adc
or
push
pop
mov
or
xchg
leave
mov
xor
outsl
xor
stc
or
pand
sbb
cli
mov
je
fucomi
inc
lcall
mov
jmp
or
xor
into
or
pop
pop
inc
push
std
sbb
xor
imul
mov
insl
cmpsl
popa
outsl
idivb
lret
ror
mov
repz
fadd
or
test
out
mov
lret
dec
cli
sbb
lods
ret
jb
insb
daa
mov
test
jne
pushf
ss
xchg
jbe
xchg
mov
cwtl
push
mov
xor
lods
pop
pop
and
or
fisttps
ja
ret
sti
mov
jge
sbb
int3
movsb
lds
jns
xor
mov
add
push
pusha
in
jle
cs
pop
ret
mov
out
add
add
add
sbb
fdivrl
mov
push
out
push
add
cltd
push
mov
xor
and
dec
and
inc
and
mov
pop
pop
sarb
imul
xor
jns
js
gs
sbb
aad
scas
jg
enter
push
mov
xor
jl
cld
test
xor
push
dec
pop
inc
pop
pop
out
cwtl
pop
push
outsl
inc
loop,pn
testl
das
fs
scas
mov
jg
jnp
andb
insl
mov
lcall
mov
jbe
je
mov
sub
inc
adcb
cmpb
inc
lcall
mov
fwait
in
in
push
and
push
movsl
jnp
and
jne
mov
sbb
inc
adc
mov
outsb
fwait
dec
ret
sbb
add
add
adc
mov
adc
addr16
add
cmc
add
add
add
xor
dec
lea
int
test
icebp
popa
jl
test
fadd
add
cwtl
add
into
repz
mov
push
dec
scas
jp
sbb
mov
xor
rcrb
jno
stos
jg
jecxz
jno
lret
jge
in
pop
jnp
dec
out
fsubrs
hlt
aam
sar
xor
shlb
sbb
loopne
sbb
aam
vp4dpwssd
repnz
pop
push
js
arpl
pop
es
xor
jge
loopne,pn
add
scas
dec
sub
aam
shlb
adc
lahf
pop
leave
fcomps
or
sub
pushf
sahf
and
mov
out
fnstcw
adc
mull
xchg
mov
push
in
int
or
pop
shrb
daa
popa
jle
cmc
ficoms
lret
js
and
testl
fldcw
add
nop
lock
shlb
loopne
add
add
subl
stos
dec
out
lock
imul
add
add
add
mov
sbbb
xchg
adc
push
inc
mov
sbb
add
and
aas
shr
push
mov
int3
pop
push
push
mov
lret
xchg
dec
mov
addb
movsb
fchs
lret
sbb
loope
mov
mov
dec
cmc
jge
int
dec
xchg
incb
sar
pushf
sub
jmp
cli
orl
xor
jne
mov
std
sub
add
out
cmp
rclb
or
jnp
hlt
mov
sub
cs
lods
dec
sub
pushf
jb
pushf
arpl
inc
insb
push
data16
sub
lods
sub
repz
mov
dec
or
cmc
mov
lcall
dec
fs
pop
imul
mov
movsb
fdivs
push
xchg
mov
xchg
gs
inc
inc
pop
sub
pop
sub
add
pop
jae
or
leave
bnd
fildll
lret
add
cmc
add
add
cld
add
jge
insb
sbb
lcall
or
mov
or
adc
xor
ret
mov
fs
filds
incl
pop
adc
pop
adc
sub
pushw
in
dec
scas
cmpsl
and
xchg
ja
or
outsl
adc
cmp
enter
xchg
inc
rcrl
sub
cmpsl
pop
add
xor
scas
test
les
stc
xor
stc
mov
adc
aam
mov
add
pop
repz
pop
std
int
enter
je
in
inc
shrl
movsl
icebp
lea
loop
add
and
outsb
ljmp
xchg
cmp
cmp
out
sub
adc
push
fstl
in
adc
je
dec
push
stos
jne
es
dec
ds
scas
fsts
add
cs
pop
add
add
cmc
insl
cmc
out
lcall
sub
pop
mov
arpl
add
cmc
add
add
call
scas
ret
jo
and
jbe
or
test
gs
out
hlt
adc
xor
loopne
lret
mov
out
cmc
jp
stc
and
lcall
push
xor
std
in
xchg
fwait
lret
xchg
push
sbbb
sub
popa
loope
sbb
pop
insb
mov
xchg
imul
cld
fcmovu
mov
or
enter
das
jge
and
repnz
repz
es
sub
loopne
pusha
das
xchg
cmpsb
imul
xchg
jno
xor
mov
loope
and
xor
imul
clc
outsl
testl
or
inc
inc
sti
mov
adc
mov
negl
xor
push
mov
mov
cld
aas
sbbb
or
cmpsl
stos
push
roll
add
jle
add
outsl
jle
dec
xchg
call
xchg
dec
jmp
add
add
add
stc
sarl
test
ret
push
mov
lds
movb
and
scas
in
add
mov
inc
nop
dec
shrl
dec
mov
inc
fadd
add
lret
insb
or
jp
imul
loop
test
ret
stos
jo
ficompl
pop
idivb
mov
push
data16
repz
aam
sbb
add
jecxz
into
movsl
jle
mov
rclb
shll
data16
fldenv
fildl
push
repnz
popa
loop
mov
push
mov
test
into
pop
xor
jg
out
adc
and
ja
mov
and
std
lahf
loopne
neg
cld
fcom
fsts
cmpsb
pop
push
add
mov
lcall
in
mov
scas
loope
and
or
and
scas
sti
jle
inc
sbb
cmpb
add
cmc
add
add
icebp
cs
push
fisubrl
jg
inc
pop
ds
mov
pop
jmp
xlat
sub
xchg
dec
xchg
rol
cmc
or
xchg
or
into
ljmp
sbb
push
fbstp
lock
hlt
hlt
push
je
adc
mov
out
mov
dec
mov
imul
xor
in
pop
xor
mov
lcall
push
push
mov
add
jnp
ds
jmp
xor
call
mov
pop
out
mov
repz
mov
add
mov
inc
test
sbb
dec
ds
push
xchg
test
push
into
lods
jl
scas
loope
cmp
mov
push
push
insl
dec
xorb
jecxz
mov
dec
cmpb
and
add
negl
lahf
push
pop
jmp
xor
add
cmc
add
add
outsl
sbb
hlt
loopne
xchg
hlt
jp
xchg
rcll
test
xor
into
xchg
aas
lds
dec
pop
loopne
mov
sbb
int
jb
push
adc
xchg
push
pop
stos
sbb
mov
mov
test
popa
pusha
or
adc
fisttpll
stos
cmp
std
sti
fs
mov
lock
cmp
aam
xorb
push
sub
mov
cmp
in
cmpsl
repz
xor
push
les
je
fistpl
push
jp
xor
bound
mov
sub
sub
mov
pop
std
cmpsl
cs
scas
and
lret
imul
scas
icebp
lock
jae
pop
mov
mov
mov
xchg
popa
mov
xchg
fsts
icebp
dec
imul
dec
iret
push
push
add
xor
push
jl
jle
insb
pop
decl
cmp
out
add
cmc
add
add
cmpsb
pusha
mov
mov
inc
roll
scas
sar
dec
daa
push
cs
mov
mov
dec
movsb
jmp
lret
jae
dec
pop
sub
pop
lahf
rcll
or
mov
fimull
incl
mov
push
xor
mov
pop
push
jo
sbb
lret
enter
jp
sbb
mov
pop
popf
leave
pusha
sbb
cmpsl
push
jg
or
lret
cli
jne
aam
inc
inc
cwtl
pusha
mov
jmp
jno
xchg
rcrl
pop
fwait
gs
daa
into
fmul
lcall
popf
mov
adc
cmp
jge
out
xor
add
jbe
test
xorl
xor
jecxz
fisubrs
and
xor
mov
movsb
int3
adc
aam
imul
stos
ljmp
sahf
sub
and
fldt
call
add
fwait
mov
pop
ljmp
push
out
add
cmc
add
add
push
loope
test
cmp
bound
jae
sarb
dec
cmp
sub
imul
push
lock
fcom
aaa
mov
pop
cmp
aad
out
lock
pusha
cwtl
shlb
aas
fisubl
js
push
push
daa
sbbb
loope
int3
jmp
imul
int
fs
in
push
scas
lret
mov
cmc
and
cmp
outsb
mov
and
stos
fs
mov
movsb
sub
movsl
stos
add
cmp
or
adc
jb
imul
adc
sub
and
mov
cmp
test
mov
fldl
push
in
or
sbb
jns
xor
cmpsb
nop
pop
jno
jb
jns
sbb
aaa
mov
add
data16
jne
mov
adcb
mov
lock
cmc
add
add
mov
jb
in
insl
test
int3
test
push
jns
and
and
cmp
adc
pop
sti
cs
dec
jae
test
cmp
rolb
jnp
inc
pop
dec
xor
pop
sbb
mov
xlat
popa
cmp
stc
jmp
dec
jge
dec
rep
lret
xchg
not
in
sbb
dec
cwtl
arpl
mov
xlat
xor
test
fiaddl
adc
mov
lods
mov
stc
imul
push
movsb
inc
pop
pop
dec
xor
xchg
sub
sahf
adc
jno
or
mov
fnsetpm(287
or
xchg
push
xor
and
cmp
pop
lret
or
cmpsl
inc
test
rcrb
jbe
fists
or
add
mov
sub
pushf
fisubrs
cwtl
sub
mov
fistl
add
add
add
jnp
sti
xchg
rol
imul
push
or
add
cmc
add
add
inc
sub
sarl
sti
dec
mov
js
ss
ret
jge
mov
inc
insb
dec
cltd
loopne
sbb
movsl
push
push
loop
lds
mov
inc
les
xchg
idivb
fists
loopne
hlt
jnp
push
push
movsb
mov
cs
push
jno
mov
cmp
mov
mov
sbb
pop
sbbb
dec
jmp
dec
lahf
out
mov
clc
scas
fistpll
test
mov
mov
or
adc
mov
pop
adc
fdivl
pop
dec
mov
mov
dec
sub
icebp
adc
jmp
pop
icebp
xchg
dec
addr16
pop
jp
dec
or
or
lock
es
jge
push
std
add
add
pop
sarl
test
sub
jg
std
icebp
add
cmc
add
add
fisttps
in
pop
mov
outsl
jno
add
imul
or
test
xchg
dec
popf
cltd
cmp
data16
mov
lock
leave
dec
cmp
cltd
inc
push
or
xchg
movsb
sub
addr16
and
icebp
aad
inc
outsl
lahf
sbb
mov
scas
push
out
inc
call
or
inc
pusha
pop
or
ret
or
pop
sub
scas
sub
scas
pop
flds
xor
inc
fiaddl
pop
fdivl
adc
sbbb
sbb
jp
and
sbb
div
pop
mov
data16
int
xchg
or
inc
jnp
daa
mov
jo
inc
cmp
sbb
inc
jno
outsl
inc
push
xchg
cmp
and
and
mov
inc
mov
enter
ja
cmp
sbbl
roll
add
add
repz
std
repz
xchg
scas
fstl
in
pop
repnz
cmc
add
add
mov
push
dec
pop
aas
sbb
test
pop
and
loop
pushf
cltd
shrb
shlb
mov
rorb
add
std
cli
nop
dec
sub
mov
push
out
in
lret
sbb
dec
icebp
inc
test
sub
rclb
fldenv
std
push
pop
test
hlt
xchg
gs
sbbb
cli
jb
jb
mov
shrl
pop
fisttpl
mov
jnp
sbb
outsl
insb
test
stos
ficomps
loop
push
push
aaa
jecxz
mov
xchg
jge
push
call
cmpsl
push
dec
mov
outsl
mov
mov
js
and
and
push
push
mov
xor
out
pop
push
pop
int
push
or
dec
push
icebp
fwait
xor
std
fneni(8087
je
insb
mov
mov
add
adc
cmpsl
lock
add
lock
cmp
or
lahf
dec
pop
xchg
out
add
cmc
add
add
mov
xchg
and
add
leave
xor
addr16
scas
push
or
fisttpll
aas
rclb
add
jp
fadds
and
dec
mov
aam
cmp
outsb
not
xchg
sub
int
dec
xchg
iret
mov
sarb
ficoms
movsl
mov
dec
push
or
int
mov
or
jb
mov
xlat
push
int
push
movsl
ds
jmp
into
sub
ret
lea
dec
mov
sub
fsubrl
leave
mov
paddd
dec
and
lock
push
aaa
aam
jno
push
push
aaa
loopne
scas
leave
or
or
incl
or
adc
imul
jbe
subl
cmp
pop
cmpsl
dec
jns
addl
cmpsb
jne
mov
mov
std
roll
lock
add
nopl
add
add
mov
mov
mov
cmp
add
add
add
enter
and
fmull
test
es
fldcw
xchg
mov
push
jae
stos
dec
mov
in
es
into
movb
mov
pusha
dec
call
jp
cmp
adc
jp
mov
jae
jno
subb
lret
cmp
mov
jl
jbe
hlt
nop
scas
andl
jae
call
lcall
cmp
daa
out
js
and
inc
mov
push
test
dec
and
fstpl
das
or
push
pop
ds
sbbb
pop
jb
dec
lds
jmp
mov
mov
dec
fnstsw
icebp
scas
lods
movsl
sbb
test
fisttps
fdivl
testb
fs
ret
fidivl
adc
ror
outsl
daa
add
insb
das
cmpsl
and
and
push
add
add
xchg
in
mov
pushl
comiss
add
cmc
add
add
ret
mov
push
inc
mov
cli
xor
push
mov
mov
das
mov
xor
xchg
cmpsb
sub
cmc
and
sub
sub
arpl
sahf
cli
add
es
insl
sti
add
loope
pop
xor
mov
fimuls
mov
enter
outsl
or
push
jle
mov
sbb
mov
jnp
test
sbb
bound
int3
enter
call
aaa
imul
mov
and
or
sti
enter
pop
inc
cmp
or
cmpsl
jmp
out
dec
mov
sub
stc
sub
jg
lods
aaa
xchg
fistpl
pop
push
add
add
jns
gs
call
scas
sbb
mov
pop
rcll
jbe
hlt
and
cwtl
std
test
dec
add
test
add
inc
mov
in
negl
push
inc
push
xor
testb
cmc
add
add
and
mov
test
cld
mov
and
sub
shl
cmc
loope
sub
aaa
icebp
xlat
xor
repnz
sbb
adc
xor
outsb
repnz
adc
cmc
add
cmp
or
add
mov
jge
mov
das
stc
dec
xlat
cld
sub
sbb
shlb
sbb
test
xchg
sbb
push
mov
pop
push
nop
js
enter
push
jne
dec
add
out
push
dec
out
imul
clc
aam
das
mov
mov
mov
inc
xor
stc
xor
mov
mov
aaa
cmp
jp
call
aas
dec
lods
stos
repnz
inc
pop
and
insl
scas
lods
adc
scas
inc
inc
leave
scas
daa
loop
ds
or
adc
cmp
lock
xlat
lret
out
cmp
lcall
arpl
add
add
mov
nop
fmull
cmp
add
add
ret
iret
push
and
lcall
sbb
push
and
xchg
xor
xor
mov
test
pop
rcpps
pop
lahf
xchg
icebp
push
xchg
icebp
in
add
adc
inc
inc
add
push
int3
ret
push
dec
sahf
xchg
mov
xchg
or
xchg
adc
jnp
in
sbb
or
cmpsl
sub
push
xchg
scas
and
xor
dec
cmp
xor
add
mov
dec
sti
cmp
pop
pushf
push
rclb
and
cmp
push
iret
mov
xchg
and
decl
or
in
cmpsb
es
rcrl
inc
cmp
sbb
leave
das
add
mov
jns
or
add
lea
int3
cld
fcmovnb
imul
xchg
xor
int3
push
out
push
sub
es
mulb
mov
dec
call
mov
pop
or
cli
jge
popf
mov
cmp
mov
push
add
adc
mov
add
cmc
add
add
mov
nop
pop
sbb
in
pop
insb
xor
cs
xchg
add
sbb
cmc
mov
xchg
sub
xor
xlat
fsubp
ss
leave
cmp
mov
or
popf
cltd
js
add
push
mov
arpl
sarl
and
nop
fiadds
adc
push
fdivs
rcr
popf
pop
sbb
and
jp,pt
call
push
push
xchg
dec
mov
daa
bound
nop
addl
pop
xchg
lds
hlt
lods
dec
push
in
inc
push
sbb
mov
jmp
subb
xor
dec
js
idiv
sbb
jecxz
daa
mov
fists
sub
fsubp
jbe
jg
lods
sub
push
cmp
rcll
call
je
xchg
dec
shrl
push
pusha
push
stos
fimull
push
add
add
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
pop
icebp
out
je
mul
out
outsl
mov
movsl
rcr
mov
jo
test
popf
int3
iret
mov
or
jne
dec
dec
shrl
sahf
mov
jle
push
jle
mov
repz
rol
mov
cld
xchg
lods
loopne
sbb
movsb
mov
add
sub
orb
inc
pop
fisttpll
dec
sub
outsl
icebp
pop
cmp
adc
lods
jb
xchg
push
mov
mov
mov
arpl
mov
mov
or
dec
hlt
mov
adc
mov
jecxz
xchg
outsl
insl
mov
mul
iret
push
mov
push
xchg
in
push
push
mov
daa
cmpsb
stos
push
inc
and
xchg
pushf
aas
adc
repnz
mov
mov
mov
pop
aas
subl
jl
testl
roll
add
pop
mov
push
decl
aaa
mov
add
cmc
add
add
pop
pop
push
ljmp
pop
pushf
fstpt
and
sub
call
outsl
and
fdivrs
cli
jb
pop
aad
or
popa
pop
xor
js
xor
mov
xlat
in
repnz
jns
mov
pop
int
and
cmp
addr16
jmp
xor
pop
or
jae
xchg
cmpsl
lea
add
dec
sbb
or
mov
shlb
outsb
xor
sub
out
jae
fwait
dec
and
inc
lock
in
push
dec
xchg
xor
adc
divl
mov
out
dec
add
mov
push
jns
lods
in
aas
mov
and
and
enter
xor
xor
mov
call
mov
test
in
xor
je
pop
push
rcll
and
cmp
sti
fsubp
decl
ret
or
je
sti
add
cmc
add
add
adc
lods
jns
pusha
fistl
or
xchg
dec
mov
ljmp
imul
es
pop
jmp
inc
xchg
mov
mov
dec
das
jmp
xor
pop
pop
shrl
adc
test
push
push
adc
sbb
insb
scas
daa
mov
adc
testl
or
cwtl
and
inc
incl
subb
adc
mov
mov
cli
imul
push
dec
sahf
jl
mul
lret
mov
pusha
out
arpl
arpl
adc
in
cld
lcall
jp
pop
push
jo
xchg
scas
push
daa
dec
xchg
push
push
repnz
push
mov
pop
insl
out
stc
mov
andb
movsb
push
push
cmp
fldt
ficompl
aam
hlt
fldt
and
and
or
cwtd
mov
add
cmc
add
add
xchg
or
ja
jbe
into
inc
sub
mov
ret
xlat
and
push
cmp
sbb
mov
inc
in
and
aam
jp
clc
pop
pop
ljmp
push
cmp
sbb
mov
inc
scas
and
pop
push
insl
ljmp
js
pop
je
push
lea
mov
pop
jp
pusha
cmpsl
xor
pop
push
dec
cmp
roll
jge
xor
fstpl
sub
adc
in
mov
push
dec
rorb
fnstsw
mov
lcall
cmp
add
adc
ficomps
loop
mov
cmpsb
push
addr16
mov
xor
imul
mov
out
jmp
test
mov
add
mov
inc
xor
shrb
cmp
add
repz
ror
lock
jnp
jmp
sbb
mov
push
jns
add
cmc
add
add
pop
mov
and
movsb
mov
sbb
loop
loop
bound
or
xlat
push
inc
inc
pop
dec
push
push
dec
inc
pusha
sub
or
xchg
ss
loope
or
mov
push
xrelease
cmp
ja
sub
jno
jmp
shlb
or
xor
dec
gs
inc
mov
xchg
ds
pop
xorb
js
sbb
fwait
inc
or
arpl
add
push
call
sbb
xor
jb
je
cmp
and
test
xor
pop
pop
pop
add
popf
sub
out
push
mov
stos
test
xor
mov
xchg
xchg
jno
mov
pop
cmc
lret
idivb
adc
xchg
pop
and
int3
in
popf
int
adc
mov
cltd
or
add
add
repz
fimuls
mov
cltd
aam
incb
add
add
add
adc
pop
js
add
shll
jge
cmp
ljmp
xchg
sbb
repz
decb
push
in
xchg
lcall
cltd
int3
das
icebp
nop
dec
mov
ds
les
test
leave
xlat
push
dec
xlat
test
outsl
addr16
shlb
push
jmp
fidivrs
sahf
outsl
clc
jge
mov
pop
xchg
push
jle
and
or
mov
push
arpl
adc
push
dec
dec
lret
iret
jl
jl
in
es
or
add
cmp
loop
lock
in
push
les
fwait
jl
mov
std
jp
xchg
cmpsb
in
popa
rorb
sti
popa
int3
imul
xchg
jns
aaa
in
mov
push
jo
mov
xor
outsb
es
add
jg
test
and
sahf
lods
add
add
out
xchg
jns
jecxz
mov
arpl
add
cmc
add
add
rcll
in
sub
out
in
mov
dec
lret
fisttps
xchg
pop
repnz
mov
bswap
jg
dec
adc
jb
stc
scas
xor
test
int3
push
outsl
push
jmp
xor
or
repnz
dec
inc
or
cwtl
fbld
popa
les
outsb
jns
cmpsb
mov
divl
fdivrp
lret
cmp
rclb
add
daa
aas
ja
mov
sub
repnz
xor
jg
ficompl
mov
insl
adc
mov
inc
add
dec
addb
adc
test
jns
lds
sbb
clc
mov
lea
shl
hlt
fs
inc
mov
push
arpl
sub
or
mov
not
leave
jae
cmc
dec
movsl
inc
cmc
xchg
sub
fcomi
dec
stos
cmp
out
adc
cwtl
sbb
push
push
mov
push
arpl
add
add
scas
push
repz
cmc
scas
mov
addb
add
add
add
lcall
xlat
cmp
mov
rolb
inc
sub
xchg
shll
out
sub
pop
inc
enter
pop
or
ret
push
adc
test
cmpsl
rorl
movsb
and
mov
pop
in
push
loopne
adc
add
pop
mov
mov
sub
dec
jnp
stos
or
ljmp
mov
add
lret
inc
or
addr16
push
dec
daa
cmp
cmpl
mov
mov
xor
ja
loope
rcrb
shl
popf
sbb
or
stos
jb
sahf
aas
sbb
sub
sbb
mov
test
mov
mov
rcrl
cmp
lcall
add
lret
pusha
rorb
lea
aad
dec
add
add
add
add
mov
lcall
loope
pushf
mov
fwait
imul
fwait
movsl
inc
andl
cmc
repnz
inc
dec
ret
repz
iret
jo
mov
fisubrl
pushf
aad
adc
adc
mov
xchg
pop
shl
aad
scas
mov
mov
fdivrs
loop
xchg
push
fcmovbe
mov
xor
pop
ljmp
loop
or
jae
sbb
mov
or
out
cld
lods
idivb
mov
and
sub
hlt
shll
jbe
rolb
sti
push
les
psubb
and
loop
or
jmp
sub
mov
lea
push
sub
movsb
xchg
movsl
in
inc
fsub
pop
lret
and
sub
dec
pop
pop
scas
add
push
xor
je
notw
cmc
lret
xchg
pop
cmc
cmp
add
gs
testl
jb
jno
add
add
add
add
xor
loopne
xchg
das
mov
orl
arpl
jg
adc
pop
jns
mov
nop
or
sub
jle
jmp
loopne
cmp
aas
in
cmp
subl
sti
inc
mov
push
push
cli
into
mov
lods
sar
les
test
negb
cmp
push
mov
lcall
out
and
addl
not
ja
out
dec
fcmovne
sbb
dec
jge
mov
insl
jbe
loope
xor
scas
sub
outsb
iret
or
hlt
or
xlat
inc
add
out
push
inc
sbb
add
icebp
push
pop
mov
pop
adc
sub
ret
sbb
sub
push
mov
and
es
inc
fdivr
or
rorb
lds
fwait
into
call
mov
mov
add
and
daa
lahf
jle
sbb
dec
and
aaa
add
add
add
add
je
add
jmp
fcoml
iret
sti
mov
lret
mov
push
js
into
push
insb
mov
inc
stos
jge
cmc
scas
push
dec
sbb
repnz
add
adc
mov
gs
dec
mov
pusha
or
push
cmp
nop
into
sahf
mov
and
insl
inc
jmp
cmp
adcl
adc
sub
insl
cld
les
test
push
sub
ja
mov
jl
fsubr
icebp
stc
aaa
jecxz
mov
loope
repnz
push
out
sbb
xchg
icebp
push
insb
ret
cwtl
and
and
mov
hlt
and
cmp
clc
cmpb
sbb
lea
pushf
mov
xchg
xchg
jle
and
out
inc
and
xor
add
mov
xlat
aam
push
add
add
add
cmc
add
add
loop
pop
loope
js
fldenv
jmp
cwtl
adc
and
jmp
jg
lret
jecxz
xchg
out
data16
ja
sub
and
and
inc
jae
sub
xor
cmpsl
dec
mov
xchg
pop
sahf
bound
and
xor
fbld
movnti
insb
push
repz
dec
cmp
mov
jbe
or
inc
mov
hlt
icebp
popf
ljmp
std
add
push
outsb
dec
jns
xchg
loop
ja
jne
and
jno
aad
mov
movsb
pushl
jge
hlt
sub
js
mov
bound
scas
pop
pushf
negb
jns
mov
testl
lods
jecxz
dec
push
mov
lods
aam
mov
cmc
mov
adc
stos
lods
adc
mov
subl
rcr
ljmp
add
add
push
inc
pop
jns
aas
fisttpl
inc
sub
add
add
mov
inc
jl
dec
dec
mov
xor
insl
pop
mov
ds
push
mov
xor
fdivl
cli
xchg
xchg
mov
ficoml
push
sbb
inc
in
sub
lea
fmul
sub
js
mov
xor
pop
push
mov
mov
jbe
and
insb
xchg
add
icebp
mov
and
push
inc
and
scas
aas
inc
mov
stos
test
sub
and
dec
call
push
mov
mov
mov
mov
mov
adc
subl
inc
fcompl
ss
adc
lods
outsb
mov
mov
inc
mov
repnz
xchg
test
sbb
push
sbb
push
stc
sub
movsl
xchg
arpl
mov
xor
jecxz
jns
cwtl
and
push
divl
xor
dec
mov
xor
jecxz
cwtl
loop
stos
mov
cmp
add
jnp
mov
sbb
sti
push
push
add
cmc
add
add
pop
lods
or
add
and
ja
pop
xchg
dec
in
insb
cmpsl
adc
bound
fs
cld
jmp
cmp
push
ret
enter
inc
or
divl
test
dec
jecxz
push
les
jne
sub
test
data16
push
sub
outsb
mov
shll
vmovaps
cmp
into
ret
xor
mov
bound
aad
push
jl
repnz
out
fcmovb
lcall
mov
test
insl
pop
jg
stc
fstps
mov
shrl
adc
mov
repz
mov
mov
cltd
fnsave
mov
leave
nop
dec
or
movsl
push
inc
or
mov
push
xchg
stos
push
addb
adc
push
dec
xor
pusha
adcl
add
add
xlat
pop
xlat
jg
mov
push
popf
xor
add
add
add
cmp
out
test
sbb
addl
cmpsl
mov
dec
adc
sbb
int3
pop
push
rorb
movsb
dec
add
hlt
lods
and
pushf
mov
cmpsb
in
leave
fcoms
rorl
push
testl
cmp
pop
popf
jecxz
loope
movl
bound
mov
das
or
lea
push
mov
cli
fldenv
outsb
jecxz
pop
xchg
fwait
sarl
or
insl
outsl
mov
push
and
lods
adc
insb
mov
test
fwait
pusha
adc
jg
shl
out
sub
dec
push
fdivs
xor
outsl
bound
lahf
jge,pn
les
and
das
add
inc
pop
xor
addr16
push
cmp
notl
jnp
mov
sbb
push
outsb
addr16
and
mov
dec
lods
sub
movnti
add
xchg
mov
idivl
adc
cmpsb
mov
or
add
add
add
inc
adc
xor
sub
mov
mov
push
jmp
ret
jle
stos
fldenv
dec
dec
xor
mov
movsl
fwait
xchg
les
mov
cmp
data16
pop
stos
hlt
outsb
inc
mov
shlb
dec
push
les
xchg
pop
lret
and
fldcw
sbb
ret
xchg
out
int
push
mov
loop
mov
and
xor
outsl
int3
adc
add
stos
mov
in
push
sub
stc
lods
gs
out
add
cmp
jge
add
popa
pop
out
sbb
cmp
inc
sbb
imul
jg
xchg
or
xor
pop
test
pop
pop
cmp
rorl
inc
rolb
lret
xlat
add
add
mov
stc
pushf
lock
shl
or
add
add
add
out
cmpsb
and
rcr
stos
inc
or
jmp
fs
enter
test
or
mov
mov
pop
mov
jae
cmp
inc
jg,pn
fiaddl
inc
inc
out
jl
xchg
lret
cwtl
cmpsb
ss
push
mov
jg
in
jns
adc
insl
loop
negb
jg
sub
aaa
popa
pop
in
subl
stc
push
insl
inc
push
push
dec
xor
cmp
adc
js
inc
je
xchg
mov
rcrb
inc
or
iret
sub
push
mov
pushl
fistpll
sub
inc
out
jmp
cli
inc
es
cmpsl
outsb
data16
mov
xchg
mov
pop
xchg
dec
xor
mull
testl
dec
enter
cmp
jnp
daa
les
xlat
push
cmp
xorl
popa
fsts
add
add
push
pop
push
jmp
sub
aaa
and
cmc
add
add
cmp
outsl
sti
lds
addr16
xchg
out
fcmovne
test
in
into
mov
xchg
mov
jl
dec
mov
in
lret
lds
dec
jbe
push
aam
ljmp
xchg
imul
or
xchg
in
cmpsl
imull
shlb
ljmp
loopne
ja
outsb
lea
xor
daa
aaa
push
xchg
mov
popa
push
adcl
outsb
xor
jo
mov
push
push
test
lods
leave
lret
sub
insb
movsb
pop
mov
mov
mov
push
fidivrs
mov
pusha
and
pop
and
ret
adc
popf
std
mov
push
xchg
mov
cmp
inc
mov
push
sbb
or
mov
inc
dec
xor
adc
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
cmp
or
add
add
add
out
mov
push
jge
xlat
push
mov
lds
or
push
sbb
cli
cmp
inc
inc
inc
cmpsb
fistpll
ljmp
jmp
or
loopne
lret
or
mov
gs
mov
add
fcoms
insl
pushf
ljmp
mov
mov
scas
fimuls
mov
or
mov
sbb
je
out
pop
pop
jbe
subb
mov
sbb
adc
jecxz
sahf
outsb
pop
out
aas
scas
mov
mov
or
int
or
insl
int3
rclb
addr16
sub
jnp
leave
xchg
add
pop
jmp
sub
push
andb
sbb
sti
xlat
lret
outsb
xchg
movsl
rolb
sbb
cmp
mov
jge
call
nop
pop
xor
or
add
jo
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
or
mov
aam
add
cmc
add
add
sti
jp
lea
inc
sbb
jle
test
repnz
inc
mov
sarb
cmp
cmpsl
out
add
cld
int3
mov
pop
mov
out
mov
mov
mov
fwait
jns
pop
es
mov
popf
cmpsl
pushf
clc
sbb
mov
stos
mov
xchg
scas
ja
dec
rorb
rorb
test
sbb
cli
js
jbe
lods
test
jno
je
lds
xchg
xor
xchg
adc
lret
mov
shlb
mov
frstor
mov
cmp
mov
ret
repz
xchg
imul
les
inc
inc
sub
sbb
out
mov
mov
cld
lahf
negl
mov
pop
add
jle
cwtl
call
add
aam
int
xchg
clc
sti
push
sahf
stc
leave
or
add
add
add
out
ret
jae
bound
xchg
or
or
arpl
test
sbb
push
dec
cmp
xchg
mov
loop
or
push
ret
aas
cmc
add
mov
inc
daa
or
pop
rcr
lret
stos
push
add
stc
push
movsl
mov
sbb
in
sub
mov
pusha
scas
xor
in
lds
xor
xchg
fs
adc
xor
into
or
mov
and
sub
inc
popf
icebp
fcmovnb
jmp
jb
add
jo
xchg
std
lret
mov
adc
sbb
and
es
inc
imul
sbb
in
mov
popf
sbb
int
xchg
and
jb
sbb
stos
pop
pop
xchg
xchg
outsl
mov
jle
out
xor
xchg
push
pop
test
aas
popl
add
pop
arpl
addr16
inc
jmp
pop
mov
add
add
insl
pushf
cwtl
data16
jg
xchg
sub
lods
sub
scas
fwait
shrb
into
and
lret
popf
aas
mov
js
xchg
push
rcll
push
sti
push
lcall
adc
xor
js
jo
js
ficoms
mov
push
je
aam
jl
aas
loop
clc
arpl
xor
or
out
sbb
ljmp
jmp
adc
jo
addl
mov
push
mov
stc
repz
stc
mov
mov
or
pop
mov
mov
inc
fldcw
aas
jl
lahf
adc
mov
hlt
jnp
xor
pop
shl
jo
jne
idivb
loopne
jge
or
push
dec
xor
aad
push
jns
pop
sub
sbb
ljmp
sbb
aam
ss
xor
add
out
cmp
cmp
pushl
jecxz
inc
push
std
repnz
add
cmc
add
add
jmp
push
xor
or
dec
scas
in
movsb
arpl
sbb
cmp
pushf
jbe
cmpsb
inc
dec
fisttpl
mov
sbbl
cmpb
mov
mov
test
or
xor
sub
gs
hlt
or
js
dec
or
into
pop
jno
in
lahf
inc
push
rol
lcall
dec
aas
ret
es
popa
test
test
mov
fcoms
pop
loope
inc
jns
cltd
pushf
sbb
fcmovu
xor
in
push
fcompl
arpl
mov
jecxz
pop
dec
test
testl
outsb
xlat
xchg
lods
insb
cltd
add
push
jmp
das
mov
je
push
out
push
xchg
pop
out
lahf
outsl
aaa
dec
pop
movsb
int
push
insb
mov
push
or
aaa
jge
xchg
ds
ss
mov
mov
or
out
cmp
inc
add
add
push
scas
out
mov
shlb
xor
test
add
cmc
add
add
xor
push
sbb
pop
scas
scas
loopne
add
ret
aaa
hlt
imul
xor
insb
xor
cmp
stc
adc
xor
pop
cmp
ds
sbb
fidivrl
jne
push
xor
sbb
cltd
cmp
iretw
mov
out
jge
or
fisttps
bound
ds
xchg
insb
pop
fdivs
in
fs
inc
pop
or
scas
add
dec
xor
mov
fidivl
idivl
jecxz
ljmp
fcompl
shll
es
imul
adc
movsb
int
push
jl
sbb
hlt
mov
imul
sub
mov
push
add
and
out
push
pusha
xchg
jmp
add
add
xchg
and
movsl
mov
mov
cmp
scas
add
popf
adc
add
add
add
add
add
xor
mov
sbb
inc
ficompl
xchg
sbb
fmul
mov
lock
jecxz,pt
xor
dec
int3
mov
addb
cmpsb
cwtl
mov
ds
test
rcl
jp
cltd
jno
mov
xlat
fsubrp
test
inc
mov
shlb
xchg
shll
mov
addr16
rcll
and
cmpsl
sub
inc
mov
mov
popa
pop
gs
test
xchg
mov
mov
loopne
insb
ja
jle
adcb
mov
xlat
xchg
cmc
jmp
push
dec
xchg
cwtl
popa
call
fwait
mov
cmc
jp
mov
fwait
outsb
add
ljmp
shl
sti
xchg
xchg
out
enter
rcrb
mov
pop
jns
xchg
add
add
mov
push
jg
mov
sarl
jg
adc
add
add
add
xchg
jecxz
pop
cmp
imul
stos
aad
mov
push
pop
cmp
nop
pop
mov
pop
sbb
push
rcll
mov
cmpsl
fsubs
push
inc
and
sti
xor
ss
xlat
adc
pop
nop
loope
into
push
les
jmp
xchg
and
pop
or
arpl
insl
ljmp
loopne
cmp
xor
xor
pop
repnz
clc
push
inc
out
mov
test
jmp
add
pop
je
xor
ja
fs
adcb
rcll
movsl
xor
sbb
dec
into
add
cmp
sahf
std
roll
cmp
test
inc
add
arpl
aad
cmpsb
dec
pop
xor
out
insl
dec
aaa
bound
in
jbe
loop
sub
pop
fbstp
add
inc
stc
mov
mov
fidivrs
shll
ljmp
add
dec
cmp
stc
in
and
adc
mov
push
push
sbb
aad
add
inc
inc
loop
pop
rclb
pop
data16
pusha
mov
outsl
fcoml
cmp
adc
sti
je
ret
add
dec
dec
mov
scas
es
adc
push
sub
gs
cmp
xor
roll
sbb
fcom
arpl
sbb
pop
adc
jno
outsl
lret
inc
out
lods
add
push
jno
repz
or
arpl
cmc
dec
mov
adc
sub
add
add
lahf
add
dec
jbe
into
and
icebp
cli
xchg
sahf
sarb
adc
push
sbb
inc
ja
insl
cli
repnz
hlt
cmp
sub
inc
scas
cwtl
add
out
add
lds
mov
mov
pop
fsubp
inc
dec
std
and
cmpb
cmp
adc
lods
ja
cwtl
cmp
add
xchg
sub
scas
jbe
or
jl
add
cmc
add
add
rcr
xchg
mov
jns
loope
addr16
int
fdivl
mov
leave
stos
mov
push
out
jg
xchg
loopne
or
xchg
mov
pop
mov
jbe
or
xor
xor
sbb
mov
cld
or
add
repz
in
add
sub
popf
mov
push
sbb
sub
outsb
popa
punpckldq
inc
or
icebp
loopne
aaa
adc
xchg
imul
out
mov
add
lds
xor
out
std
xor
push
dec
xor
rorl
jne
xor
imul
popf
insb
jmp
pop
mov
mov
xchg
jmp
icebp
xor
in
fdivr
sub
dec
xchg
nop
or
rcll
push
popa
cmp
arpl
lret
add
add
hlt
fists
stos
sub
cmc
add
add
adc
sbb
xor
loop
rcrl
pop
cltd
mov
test
out
xor
sub
arpl
dec
arpl
push
ds
jnp
jno
int
scas
lret
push
pop
lcall
cmp
pop
fisubrs
mov
in
inc
or
xor
daa
pop
bswap
and
ds
aad
xchg
rcll
lods
mov
xchg
dec
mov
and
in
repz
test
jns
js
pop
ror
lcall
xchg
sub
mov
xchg
popa
es
jp
sub
dec
arpl
aam
and
cmp
sub
mov
pop
movsl
adc
rcll
test
jge
mov
int3
out
shlb
xor
cmp
pusha
fucomip
cmp
mov
hlt
mov
mov
add
ds
inc
movsl
mov
add
into
fwait
testb
pop
xchg
adc
add
lods
ds
aas
aad
or
adc
mov
jns
mov
or
and
imulb
push
cmc
mull
lds
dec
call
xchg
push
lcall
mov
xor
xchg
adc
mov
arpl
inc
leave
xchg
xchg
pop
sbb
lock
aam
ffreep
and
mov
add
insl
jae
pop
jmp
int3
adc
into
ja
int3
daa
ss
dec
cmpsb
jle
sub
jl
push
stc
pushf
jae
jge
popa
jno
push
cwtl
pop
leave
or
dec
jle
hlt
test
xlat
loop
fmulp
jb
sahf
pminsw
pop
jecxz
nop
bnd
sbb
and
cmpb
int3
cmp
mov
cmp
notb
arpl
mov
push
fildl
in
xlat
pop
nop
pop
lea
xchg
inc
pop
jle
push
arpl
add
jl
test
out
mov
pop
mov
call
add
add
add
push
lds
jo
jp
inc
sub
mov
lock
enter
mov
in
cmp
add
mov
movsl
sub
jbe
loope
dec
cs
mov
push
pop
mov
xchg
icebp
imul
rcl
fsts
aam
sti
imul
xor
imul
mov
repz
out
stos
mov
adc
sub
sbb
arpl
fcomps
inc
xor
sub
inc
das
cmp
add
lock
loop
in
jge
das
inc
adc
addr16
inc
mov
xchg
mov
cmp
nop
inc
daa
jmp
jae
or
mov
mov
adc
mov
addb
and
outsb
xor
lods
jb
xor
cmp
ja
jbe
in
jl
arpl
daa
enter
xor
xor
add
add
inc
out
aas
mov
sub
adc
cmp
add
cmc
add
add
sub
mov
repz
jle
in
and
test
adc
inc
fcoms
mov
inc
and
jo
bound
stos
popf
das
cmp
pusha
add
jl
inc
es
ja
or
pop
jge
inc
add
cmp
iret
test
in
cmp
inc
push
test
test
push
out
xor
fdivl
pushf
inc
ret
outsb
subl
push
jbe
fsubl
gs
jge
decl
and
mov
imul
and
inc
mov
or
inc
pop
out
data16
ret
adc
hlt
mov
je
repnz
add
shrb
sbb
push
jno
fldl
pop
repnz
and
lds
nop
jb
aad
push
nop
lcall
andl
dec
pop
sub
add
push
bnd
jp
xchg
inc
imul
cmc
add
add
shlb
cwtl
shr
mov
fidivs
mov
mov
fisubrl
jmp
ss
sti
iret
loopne
icebp
pushf
cmp
ss
lock
inc
lcall
mov
scas
adc
xchg
xchg
lcall
jecxz
cwtl
test
addr16
push
popf
jg
push
in
rcrb
push
orl
out
xchg
mov
sbbb
and
mov
mov
ljmp
ret
sahf
cltd
xchg
jle
adc
test
sbb
jmp
data16
addb
mov
mov
sbb
pop
jo
sahf
popa
insb
enter
dec
inc
mov
dec
vmwrite
insl
dec
mov
pmulhuw
xchg
aad
sbb
sub
cmpsb
mov
jno
out
hlt
in
stos
cmp
and
pop
shlb
push
cli
pop
pop
add
add
in
out
ja
fbstp
sub
or
sbb
add
add
add
lret
lea
xor
xchg
sub
fwait
inc
out
adc
in
mov
fcmovnu
decb
sarl
notb
dec
xor
enter
sti
jmp
shrb
scas
pop
mov
push
scas
inc
scas
and
sti
push
xchg
mov
orl
sub
push
push
popf
das
or
add
and
call
fildl
xlat
ret
add
dec
xor
pop
adc
sbb
pusha
sbb
mov
cmp
clc
js
in
jmp
les
jge
push
sahf
jge
sbb
xchg
insl
sub
xor
adc
shlb
jecxz
and
jge
loopne
es
and
sub
and
cltd
mov
mov
ss
pop
cltd
iret
gs
xchg
test
mov
pop
inc
dec
sbb
mov
imul
add
pop
in
jl
das
sbb
add
add
add
push
mov
scas
xor
popa
mov
outsl
dec
jne
lods
lret
mov
adcb
rolb
cmpsb
into
popa
fcomi
popf
dec
movsb
jae
add
xchg
sbb
jmp
pop
into
fistps
test
idivl
add
dec
push
mov
repnz
add
dec
cmp
dec
add
adc
das
cmp
mov
adc
push
loop
ja
xchg
jl
shll
jp
adc
xor
mov
negb
cmp
xchg
mov
cli
sub
sbb
cld
in
in
mov
push
int3
rcll
mov
and
inc
xor
sbbl
xor
faddl
rclb
jb
add
push
icebp
loope
adc
pop
pop
mov
sbb
mov
push
daa
mov
ret
add
jg
imull
push
imulb
sbb
add
add
add
pop
sub
xlat
dec
insl
gs
dec
divl
cwtl
add
mov
mov
xchg
repnz
push
xchg
xchg
push
lret
sbb
add
out
shll
jnp
out
add
rcr
dec
push
mov
jno
lret
push
and
inc
fwait
sbb
push
jmp
push
in
pop
idivb
and
cmpsl
xchg
out
cltd
sbb
ret
shrl
roll
push
adc
xchg
rcl
pop
adc
jmp
cmp
out
dec
ljmp
sbb
jne
mov
mov
lret
arpl
mov
xchg
imul
mov
ljmp
mov
aaa
inc
cmpl
int3
ss
scas
lock
mov
imul
iretw
dec
stc
jle
jmp
aam
adc
add
cmp
sti
jg
and
add
cld
out
sbb
add
add
add
lret
addr16
jmp
aas
cli
cltd
cmc
test
filds
negl
out
aad
es
push
inc
mov
adc
mov
ficoml
pop
push
sub
mov
stos
clc
mov
std
xchg
adc
imul
add
fmuls
test
cli
ret
insb
dec
imull
push
lret
popf
ret
push
dec
pop
daa
les
jns
nop
pop
mov
mov
adc
adcl
sub
test
out
jnp
sub
mov
outsl
loop
push
aam
add
sbb
movb
outsl
xlat
sbb
or
xor
xchg
adc
test
sub
cmpsl
mov
mov
call
faddl
les
sub
xlat
ds
pop
xor
leave
das
xchg
scas
add
stc
cmp
test
add
jnp
fldl
cmp
add
cmc
add
add
enter
xor
push
jmp
enter
lret
push
sbb
lods
adc
loope
subl
out
fcoml
sbb
popa
sub
inc
jmp
jo
ds
leave
mov
mov
jnp
fstpt
lret
jbe
enter
dec
jl
movsl
test
sbb
push
scas
cmp
cs
mov
test
popf
dec
xchg
sub
jae
dec
xchg
inc
lret
inc
xchg
and
test
sbb
fisubs
popf
insb
mov
test
cmpsb
addl
mov
fcoms
mov
js
add
and
dec
xchg
push
lock
jl
sub
inc
cmp
push
out
in
enter
in
adc
fwait
mov
mov
dec
jge
shll
bound
scas
mov
iret
cli
fs
cmp
shrb
or
mov
sbb
add
add
outsl
mov
xchg
pop
cltd
mov
lcall
cmc
add
add
jns
cmpsb
push
sub
or
fistl
mov
roll
and
lock
adc
dec
outsb
je
push
test
int
adc
and
loopne
in
sbb
sbb
inc
dec
iret
dec
arpl
mov
loope
mov
cmp
adc
adc
mov
push
pop
cli
fistpl
add
push
shll
scas
add
leave
into
int3
mov
or
xchg
mov
mov
ds
lods
cmp
dec
dec
cltd
xchg
jp
inc
mov
imull
imul
movsl
cmp
xchg
sbb
ja
das
int
cmp
mov
mov
or
push
in
push
xor
mov
sbb
enter
mov
add
add
jmp
loop
pusha
jmp
add
add
add
sbb
repz
cmpsl
dec
pop
sbb
or
cmpsl
dec
inc
push
pop
and
fidivrl
xor
shrl
jb
inc
push
imul
or
scas
pop
bound
mov
push
xchg
pop
fisubrl
cs
sbb
shlb
jae
jecxz
sbb
mov
push
or
adc
daa
mov
test
mov
int
pop
inc
jp
and
outsb
and
gs
int3
lret
arpl
movsl
mov
lods
out
sub
pop
shll
sbbb
mov
lret
iret
pop
test
mov
jae
xor
push
dec
sub
pop
mov
xor
adc
cmp
push
cmp
and
stos
sub
push
xor
mov
insl
mov
sub
cli
jb
cli
xchg
lret
test
sub
mov
imul
adc
sti
or
or
xor
xchg
lds
icebp
cmp
daa
in
pop
add
cmc
add
add
bound
xchg
out
jl
out
nop
loop
sbb
daa
icebp
pop
nop
and
and
dec
adc
xchg
push
lds
dec
push
cmc
imulb
add
cmc
sbb
mov
pop
dec
out
dec
andb
push
xchg
and
mov
arpl
subb
fdivs
jl
ret
adc
inc
xchg
mov
shlb
fsubrs
lea
mov
pop
loope
loopne
pop
sbb
jmp
jno
xchg
or
das
dec
test
int3
dec
subb
adc
mov
push
fistps
and
jo
jge
cs
lahf
sbb
xor
std
cmp
test
cwtl
mov
and
bound
xchg
and
xchg
in
cmp
mov
lods
sbb
lods
sti
cmp
add
push
int
add
add
cli
inc
jg
int
pop
sbb
js
dec
loop
add
cmc
add
add
xchg
jmp
jecxz
and
xchg
xchg
pushf
xor
add
es
adc
and
pop
adc
fcmovbe
inc
movsl
sub
jo
imul
mov
andb
mov
inc
es
popa
repz
stc
inc
stc
cmpsl
jb
cld
rcrl
jl
xor
push
xor
negl
leave
jl
lea
cmp
std
shl
rcll
es
push
push
inc
cmp
stc
adc
dec
pop
mov
dec
cmp
out
pushl
push
jnp
pushf
adc
adc
in
add
repz
jbe
sahf
add
or
jnp
add
jbe
mov
clc
xchg
rclb
or
dec
leave
in
xor
jnp
xor
mov
les
and
mov
mov
dec
pusha
sub
jne
mov
xchg
pusha
push
dec
fstl
push
pop
jae
mov
add
add
xchg
std
cmp
jle
fisttps
cmp
add
cmc
add
add
jle
out
lret
push
int
mov
bound
cmpsb
stos
repnz
out
mov
xchg
jp
push
add
cmc
xor
stos
push
xor
aam
xchg
in
std
mov
leave
lods
or
addps
mov
inc
push
call
pop
dec
out
mov
cli
push
daa
xor
adc
adc
or
lods
into
jnp
into
xchg
xlat
push
mov
std
outsb
and
insl
out
ja
ljmp
test
bound
movsl
pop
jne
inc
push
mov
sahf
or
or
jno
adc
pop
lods
xor
ss
dec
jmp
adc
jns
cmp
mov
in
cmp
adc
adcl
daa
xor
sub
cltd
pop
repz
enter
dec
pop
popa
jne
and
xchg
mov
add
add
iret
xlat
ficoml
mov
in
int3
and
add
add
add
sbb
inc
jno
jle
or
lods
imul
pusha
pop
dec
sub
push
ficoml
or
pop
cli
mov
inc
jmp
mov
and
mov
fcmovnbe
inc
cld
repz
imul
stos
dec
inc
xchg
or
mov
imul
mov
ljmp
sbb
jns
out
xchg
sti
imul
or
mov
hlt
testb
xor
test
data16
stos
adc
ficoml
and
pop
mov
add
outsl
jp
movl
add
dec
mov
adc
add
add
or
pop
jno
fisttpll
mov
sbbb
xor
out
lods
in
clc
fnstcw
rcll
aaa
daa
call
jg
push
ja
add
add
sub
iret
outsb
jmp
rcll
shll
add
add
add
mov
inc
mov
jne
fcoms
dec
in
scas
push
adc
mov
cltd
fiadds
or
out
mov
pop
lods
call
dec
lret
jno
sbb
dec
mov
jne
in
and
adc
mov
scas
in
add
or
lds
pop
sbb
pushf
test
mov
jbe
pop
cmc
sbb
push
pop
push
cmp
xchg
movsl
sub
inc
ss
adc
mov
insl
je
sbb
adc
and
jecxz
lea
mov
cwtl
xchg
pop
inc
pop
nop
xchg
add
or
aas
mov
mov
inc
xchg
loopne
jno
and
and
push
and
mov
xor
push
fiaddl
cwtl
inc
jne
je
add
out
mov
jnp
mov
addl
add
sbb
std
sbb
stc
cld
or
daa
add
pop
mov
add
cmc
add
add
and
lahf
cmpsl
gs
sbb
in
dec
cmp
jmp
inc
aam
enter
mov
das
std
sahf
push
dec
jae
int3
nop
cmp
fldl2t
and
imul
or
jne
in
dec
push
add
shll
xorb
push
xchg
mov
mov
pop
sbb
rorl
fnsave
in
push
inc
out
and
add
pop
jmp
shlb
pop
je
mov
mov
stos
test
inc
sbbb
mov
adc
pop
out
push
push
test
int3
push
fidivrl
push
stos
mov
mov
mov
xchg
jbe
jne
loop
loopne
add
daa
xor
in
pop
call
adc
jle
daa
and
push
cmp
inc
mov
call
jno
je
popa
jns
mov
add
add
pop
test
scas
repz
cld
cmp
jl
je
adc
stos
and
add
jnp
lock
pushf
ja
ds
push
cld
lods
xorb
inc
adc
iret
addr16
and
or
roll
loop
cmp
hlt
xlat
js
ror
in
cli
enter
or
mov
clc
negb
inc
push
mov
adc
lods
sub
test
dec
mov
or
pushf
cli
mov
rorb
inc
in
jl
push
sub
mov
nop
mov
add
into
push
jecxz
xchg
pushf
cmp
inc
fsts
dec
xchg
stos
ljmp
cmpsl
dec
xor
sbb
loope
xchg
pop
xchg
out
dec
push
cmp
cmp
cltd
sub
insb
mov
test
xor
pop
movsb
adc
adc
push
imul
std
movsl
inc
inc
jb
jmp
idiv
add
jnp
popa
xchg
out
xchg
ss
out
ljmp
fmuls
sub
add
lods
push
add
add
dec
pushl
inc
leave
dec
jg
add
cmc
add
add
clc
add
lods
or
adc
adc
movsb
push
stos
and
add
xchg
adc
xchg
daa
cmp
shrl
test
je
add
loop
popa
mov
cmc
pusha
mov
call
jg
xor
lcall
sub
jp
push
fucomp
xchg
stos
js
add
gs
int3
add
inc
sbb
shlb
js
cmp
pop
repz
scas
inc
cld
xor
adc
push
fmuls
sbb
cmc
imul
mov
sahf
dec
fs
mov
sub
dec
loop
movsl
jne
cmp
cli
cmp
adc
into
sahf
inc
push
adc
xor
gs
lods
in
mov
mov
adc
movsb
cmp
inc
sti
mov
jne
xor
add
add
inc
ja
pop
aas
pop
pop
inc
adc
int3
lock
add
js
lock
in
stos
mov
test
aaa
pop
push
or
and
pop
cmp
sbb
cmpsl
stc
icebp
inc
add
out
pop
mov
stc
xlat
cmp
push
cmp
adc
pop
cltd
jl
iret
cs
mov
pop
aaa
in
enter
xor
stos
adc
sbb
mov
add
inc
adc
ja
push
sbbl
outsl
push
sahf
xor
pop
cmp
addl
mov
out
pop
or
aas
xchg
fstpt
aad
cmp
xor
cmpsb
stos
xchg
loope
inc
dec
mov
nop
mov
mov
sub
add
or
fcomps
packsswb
das
outsb
int
into
push
mov
mov
andl
movsl
fldenv
push
cmp
test
cld
push
arpl
push
enter
add
repz
jae
ja
div
dec
lods
push
mov
lcall
cmc
add
add
icebp
mov
cs
mov
test
push
dec
clc
cmpsl
call
scas
cmp
in
mov
test
das
jmp
xor
std
jle
imul
pop
in
jl
stos
into
mov
lds
adc
loope
decl
fdivr
lret
int
dec
mov
ret
aam
ficompl
loop
aad
stos
mov
repz
pop
xor
cltd
cmpsb
mov
push
addr16
push
repz
mov
out
std
jns
in
ret
fnsave
add
movsb
scas
fisubrs
xor
ret
push
icebp
push
pop
fsubs
std
inc
mov
outsb
pop
ret
xor
lret
push
test
jne
push
fsubrs
out
xor
imul
into
roll
out
sahf
xchg
ja
or
mov
cmp
lret
into
insl
inc
and
add
xor
cli
std
jg
into
jno
inc
mov
stc
jg
add
cmc
add
add
dec
push
xchg
fucom
sbb
loopne
adc
push
dec
inc
leave
xchg
cld
push
cmpsl
stos
stos
in
jbe
or
clc
cmp
incb
jge
or
aaa
inc
aaa
mov
lods
or
push
mov
jne
xor
pop
arpl
push
mov
ss
push
sbb
iret
data16
add
jmp
ja
repz
inc
iret
sub
xchg
mov
scas
add
push
push
push
enter
lea
cmp
mov
add
outsb
mov
push
scas
xchg
pusha
dec
push
cmp
cmp
sub
and
adc
sub
call
or
mov
roll
jmp
movsb
shlb
popf
iret
sbb
sbbb
push
stc
cmp
sub
add
mov
ljmp
mov
mov
add
add
add
mov
std
incl
sub
pop
stos
cli
xchg
add
add
add
dec
pusha
pop
dec
jmp
cs
shl
movsb
dec
cmp
pop
pop
jnp
hlt
mov
jnp
test
std
cltd
iret
mov
test
xchg
or
cwtl
scas
inc
repnz
push
dec
popa
movsb
adc
loop
pop
dec
loopne
inc
cwtl
dec
call
nopl
xchg
push
in
stc
or
mov
cltd
xchg
shr
andl
stos
pop
xor
sbb
sub
outsl
insb
lahf
pop
jae
jne
sbb
sub
outsb
popf
push
mov
dec
outsl
or
imul
adc
and
mov
dec
fdivl
cmpsb
rcll
fldenv
pop
xchg
fidivrs
or
mov
adc
shrl
sarl
dec
pop
leave
sbb
mov
das
sbbl
insl
jae
fbld
incb
test
jl
mov
daa
lahf
lods
add
xchg
aad
jecxz
fisttpl
inc
loop
dec
add
add
add
es
jg
pop
xorl
imull
add
cmc
add
add
loop
mov
xchg
aam
push
js
mov
xor
adc
jmp
and
sbb
xor
sahf
fwait
data16
nop
xchg
sbb
lcall
jae
add
mov
mov
sbb
mov
jp
int3
outsb
call
mov
mov
xor
mov
and
and
adc
fistpll
repnz
sbb
adc
adc
scas
lret
test
or
mov
fsubrs
xchg
int
dec
movsl
push
lret
sub
mov
and
lret
jp
out
test
stos
cltd
scas
aas
add
js
cmp
cmp
jle
mov
pop
mov
arpl
mov
push
pop
les
in
nop
xchg
loop
push
add
push
cmp
sub
mov
test
orl
push
add
add
or
cmp
cmovle
sub
add
add
add
leave
shll
sbb
jae
pop
pop
ja
xchg
jge
ds
pop
pop
sub
inc
into
stos
mov
lcall
inc
inc
lds
ljmp
in
sbb
cmp
jle
xlat
sti
push
sub
lock
repnz
xor
fadd
sahf
jns
or
mov
and
xor
fidivrl
jmp
rolb
sarl
pushf
test
xchg
xchg
sahf
mov
sbb
in
aaa
and
ret
cmp
outsb
pop
xor
out
scas
mov
ficoms
xor
shl
and
sub
ret
cmc
adc
movsb
movsl
mov
outsb
das
mov
jecxz
addr16
imul
call
mov
adc
xor
in
into
mov
leave
ss
xor
ja
shrb
sub
add
sub
popf
jae
dec
jecxz
stos
es
cmpsl
push
popf
inc
shll
lods
sar
out
add
mov
jecxz
inc
or
dec
sub
xor
rcr
mov
movsl
mov
cmpb
cmp
or
sbb
test
sub
xor
cltd
sbb
aad
jge,pn
dec
fcmovnu
dec
cmp
mov
mov
in
mov
bound
into
sub
hlt
ja
int
mov
mov
push
jmp
jle
push
mov
ljmp
cld
insb
adc
mov
mov
jns
inc
add
xor
decb
in
xor
flds
xor
sub
jae
dec
xchg
aad
dec
xor
sbb
mov
lock
inc
bound
loopne
leave
scas
pop
xchg
out
scas
out
out
lds
add
ficoms
stos
sbb
ljmp
dec
add
cmc
add
add
int
bound
pop
jne
add
or
not
popl
push
aas
pop
cwtl
or
and
adc
aam
mov
sbb
sbb
push
cmpsl
push
jg
fucomp
ljmp
push
push
pop
fildll
xchg
cmp
mov
sbb
jne
mov
fistpll
scas
mov
sub
fsubp
mov
xchg
mov
jno
or
imul
ds
mov
add
popf
dec
pop
sub
aaa
fldcw
xchg
aad
rclb
inc
pop
pxor
xchg
sub
and
mov
mov
cmp
mov
arpl
adc
jns
lock
xchg
pop
aas
enter
jb
call
movsb
xor
fsts
mov
inc
push
mov
add
add
in
out
sbbb
sbb
cmp
add
add
or
jno
mov
test
call
call
in
pop
mov
mov
cmpsb
scas
repz
decb
shr
jnp
and
and
out
add
je
push
jmp
dec
sbb
enter
scas
out
jmp
arpl
sbb
mov
stos
dec
dec
cmpsl
or
pop
or
std
enter
adc
andb
or
pop
pop
cld
gs
cmpsb
pop
fisubrl
xlat
mov
lret
sahf
loop
and
repnz
jbe
pusha
aam
scas
stos
jno
dec
pop
and
mov
jmp
xorb
enter
dec
inc
mov
jnp
jae
ljmp
push
fnstsw
divb
lcall
mov
and
or
popa
loop
add
repnz
bnd
inc
jnp
iret
iret
fnstcw
cmp
test
mov
mov
add
sbb
out
aad
jo
fs
xor
add
cmc
add
add
cmp
pop
mov
into
lret
cmp
daa
fistpll
mov
in
and
xor
mov
cltd
stc
inc
ds
dec
pop
cmp
sub
xchg
inc
out
pop
insb
jp
push
push
add
pop
xchg
and
push
dec
sub
xorb
pop
incb
pop
mov
dec
xor
and
fldenv
dec
das
pushl
in
punpcklwd
lret
inc
xor
dec
or
add
xorb
jl
aad
int3
cli
pushw
jae
ret
sbb
es
out
mov
jl
aas
add
fsubr
sbb
sbb
rcl
jns
pop
push
add
addl
push
loopne
pop
mov
jne
cmp
push
popf
mov
cli
movsb
xchg
lret
notb
lret
add
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
lcall
adc
mov
loop
cli
mov
xchg
cmp
xchg
mov
dec
dec
sub
sahf
cmp
gs
sub
mov
sbb
sub
inc
add
outsb
and
test
es
in
popa
inc
lcall
dec
test
test
fdivrl
fidivl
dec
lcall
push
cmp
mov
dec
pop
lret
rorb
and
inc
rol
add
mov
sahf
decb
adc
cli
icebp
jl
cld
rclb
call
sub
loope
push
out
fcmove
imul
mov
adc
mov
sahf
cltd
adc
jae
xor
mov
sub
mov
je
sar
xor
mov
jbe
test
add
inc
push
mov
add
test
sbb
out
add
lods
scas
cmp
sbb
add
cmc
add
add
or
xchg
pop
and
jmp
mov
sub
xor
idiv
dec
dec
dec
xchg
mov
bound
cmpsb
out
dec
push
adc
aas
mov
sarb
rorl
dec
lcall
pop
pop
cli
push
fldcw
cld
cmpb
cmp
out
rcll
xorl
jge
call
and
loop
in
dec
fs
xor
dec
cmp
mov
push
pusha
xor
mov
sub
xchg
enter
movsb
xchg
fisttps
outsb
insb
pop
ret
mov
fisubrl
insb
dec
imul
pop
sbb
jge
and
pop
jo
stos
inc
jne
cmp
sub
push
loopne
popf
icebp
rcrl
test
adc
add
popa
add
add
jg
cld
add
adc
cmpsb
adc
add
cmc
add
add
adc
or
pop
mov
dec
cmpsl
xlat
pop
mov
aas
cs
adc
xchg
iret
in
daa
sub
ret
mov
cmp
push
dec
cmpsb
add
fs
lcall
mov
cltd
jg
inc
sbb
and
mov
cld
sub
sbb
push
jae
loopne
xchg
lahf
jmp
clc
aad
aaa
sbb
pop
or
push
in
fistpl
or
fdivrs
stos
dec
pop
test
out
push
sti
shll
push
shlb
and
dec
pop
sub
int
adc
add
fsubrl
addb
orb
adcb
or
adc
into
or
add
inc
ret
push
push
push
mov
aaa
shlb
movsb
add
add
mov
iret
mov
fiadds
add
add
add
lods
mov
adc
cmc
jle,pn
fs
arpl
ret
outsb
xchg
pop
jmp
jge
or
cs
pushw
std
sbb
pop
int3
mov
mov
sub
ja
and
std
mov
shrl
stc
arpl
pop
fucomi
inc
mov
sub
in
inc
mov
pop
mov
cmp
fbstp
loop
dec
jne
sbb
cs
cmp
test
jge
lcall
push
and
add
mov
in
xor
in
and
std
xchg
icebp
adc
adc
sarb
popa
in
lods
lock
mov
jb,pt
ret
popa
xorb
cmpsl
cmp
sbb
adc
bound
cltd
mov
faddl
fbld
int
mov
imul
test
dec
leave
xchg
add
or
sbb
jb
and
xor
add
add
add
inc
icebp
sub
ret
cmp
movsl
lock
push
stos
int
loopne
icebp
scas
xor
ja
mov
or
xchg
hlt
xchg
into
test
aam
shlb
sbb
and
sbb
xchg
int3
xchg
cmc
xchg
int3
dec
mov
fcmovbe
jmp
xchg
or
mov
push
pop
pop
fstl
into
push
pop
lods
adc
das
hlt
pushf
push
jge
lock
jns
or
xor
push
loop
lahf
and
push
mov
xchg
les
repz
fistpl
adc
aam
jns
insl
nop
mov
inc
int
inc
push
sub
adc
clc
and
movsb
sub
loop
out
and
mov
xchg
faddl
cmp
cwtl
adc
adcl
push
addr16
mov
jg
sarl
xchg
xor
pop
icebp
dec
sbb
add
xor
clc
cli
clc
sarb
repnz
inc
aam
pop
pop
xchg
xor
add
xchg
ja
xchg
iret
in
xor
clc
popa
cmp
rcrb
rclb
dec
cmp
mov
imul
pop
out
jecxz
or
popf
mov
lahf
sti
test
mov
pushf
xchg
push
pop
adc
sbb
push
mov
dec
inc
sub
mov
test
fimull
push
sub
sbb
fsts
push
lret
gs
mov
lock
add
sub
xchg
fidivs
add
sub
into
cld
lret
sub
mov
lea
cmpsl
sbb
out
xchg
xor
cmp
push
dec
outsl
push
push
icebp
mov
add
push
hlt
scas
pop
idivb
pushw
pop
sub
push
sbb
dec
jmp
notb
mov
inc
dec
sbb
mov
inc
dec
imul
mov
pop
movsb
test
daa
add
add
jnp
out
push
lcall
in
add
cmc
add
add
jecxz
out
push
xchg
out
lock
jae
sbb
sbb
lea
fst
insl
inc
call
inc
sbb
loopne
daa
pop
sbb
loop
ljmp
dec
cmp
movsb
std
and
sub
inc
ret
mov
dec
push
pop
add
stos
xor
popf
jae
mov
dec
dec
inc
mov
addb
and
je
pop
subb
popf
jle
mov
mov
xor
iret
jns
cmp
sbb
andb
add
add
lret
in
mov
jae
ret
xchg
scas
in
in
xor
aas
pop
call
pop
inc
add
xchg
inc
sub
push
loope
and
xchg
push
dec
shlb
mov
xor
jp
mov
out
dec
push
jp
mov
sub
inc
jmp
dec
dec
pop
mov
cmpsb
test
outsb
sbb
jo
cmp
cmp
in
add
push
add
add
es
data16
cmc
jle
dec
jae
push
fidivl
add
cmc
add
add
das
xor
aam
mov
xchg
stos
mov
mov
and
mov
sbb
mov
inc
mov
in
mov
mov
mov
sub
and
dec
cmp
cld
aam
pop
and
mov
decl
cwtl
jmp
loope
sub
push
lret
iret
jo,pt
lahf
or
out
fsubs
mov
out
cli
loopne
lret
cwtl
and
pcmpgtw
jo
mov
stc
loop
mov
sbb
push
ds
repnz
sbb
adc
dec
stc
or
adc
and
popa
sub
mov
cmpb
arpl
mov
lret
xor
mov
jl
xchg
arpl
test
sbb
lret
jns
pop
aas
dec
stos
xorb
lahf
xchg
movsl
mov
mov
cmp
mov
mov
mov
jo
add
clc
mov
fldcw
cwtl
cmpsl
addb
iret
cmp
add
add
add
jo
inc
cltd
jnp
mov
add
jo
nop
mov
ss
xchg
push
loope
cltd
test
nop
mov
rcll
aam
add
mov
orb
outsb
and
in
ja
add
into
pop
xlat
scas
arpl
mov
and
cli
mov
dec
push
loope
das
lahf
ficoml
loop
insl
cmp
push
cwtl
or
jns
jnp
and
hlt
dec
pop
jae
and
jge
movsb
cs
pop
outsb
inc
xchg
inc
jmp
sub
mov
dec
andl
xor
ja
insb
leave
adcb
adcl
xor
mov
sbb
jl
mov
push
negl
jnp
aad
xchg
dec
adc
adc
push
push
jl
jb
sbb
iret
ds
sbb
push
arpl
add
add
and
push
sti
cmpsl
pop
push
jo
cltd
mov
mov
cmc
add
add
add
rcll
repz
std
shrb
lock
sub
scas
in
ds
add
repz
jns
add
rclb
mov
stos
xchg
pop
jno
repnz
outsb
inc
add
cmp
sbb
es
push
or
jg
add
adc
mov
int3
out
cmp
call
inc
cmp
cli
rclb
xchg
mov
or
cli
dec
pop
int3
stos
movsb
push
es
pop
orl
call
xchg
jb
or
inc
or
push
or
and
out
fdivr
mov
sti
xor
sub
jecxz
and
mov
cltd
sbb
scas
adc
cwtl
sbb
lret
mov
inc
inc
add
or
mov
pusha
push
aam
pushf
add
add
mov
std
cmp
sub
movsb
movsb
mov
add
add
icebp
cmc
xor
ss
sbb
fnstcw
cmp
cmp
mov
cmpsb
adc
push
cmp
jb
mov
push
pop
mov
mov
cmp
popa
and
aam
lds
ret
cmp
xchg
mov
add
sub
rcrl
neg
lret
mov
ds
mov
test
repnz
aaa
mov
rclb
into
orl
popa
in
nop
pushl
popw
push
gs
outsl
mov
loopne
in
xor
aad
jmp
xor
test
xor
pop
or
repz
int3
mov
test
fstpl
out
xor
ja
and
aaa
adc
ffree
sbb
lods
stos
ret
xor
sbb
cmp
dec
add
xor
add
add
and
jecxz
or
scas
cmp
add
add
add
daa
cltd
xchg
bound
and
or
push
sbb
repz
loope
and
cmp
jg
sub
mov
ret
dec
lcall
pusha
mov
fimull
xorb
sub
test
xor
or
movsb
pop
sub
aas
add
sbb
ret
adc
pop
cwtl
cmp
mov
mov
dec
xchg
lea
mov
icebp
sbb
cmc
sbbl
sti
out
aas
cmpsl
mov
sar
pop
sub
mov
incb
ja
in
repz
ja
inc
xchg
lret
add
arpl
sahf
jmp
iret
jae
testb
mov
xchg
outsl
sarl
jns
mov
jno
mov
stos
and
pop
sbb
hlt
or
jmp
rol
shr
loopne
test
inc
add
fiaddl
ret
ficomps
push
sub
cmc
add
add
mov
fs
fidivrl
push
mov
imul
cwtl
jne
and
subb
sbb
mov
push
out
pop
push
pop
adc
and
test
leave
inc
fidivl
enter
test
jno
enter
shrb
sti
inc
and
mov
sub
xor
or
aad
inc
pop
sub
xor
int
shlb
and
adc
scas
sub
iret
mov
shlb
push
shll
sbb
lock
aaa
push
mov
das
imul
sbb
add
in
push
ret
lahf
and
xor
nop
adc
push
adc
add
imul
fldenv
dec
mov
imul
xchg
inc
test
jmp
xor
pop
mov
cli
or
push
and
imul
add
arpl
ja
repnz
add
test
add
add
add
sbb
es
lock
clc
push
push
push
in
dec
aaa
and
push
xchg
dec
pop
lcall
outsl
mov
nop
data16
pop
in
rcl
dec
cld
mov
cmc
xchg
cmp
popf
inc
mov
push
inc
add
mov
adc
divl
loopne
popf
and
gs
lcall
inc
in
pusha
les
int
cmp
pop
sbb
jle
push
or
test
je
test
ficoml
push
add
and
loopne
mov
aad
mov
rolb
psubq
test
jns
xor
fs
jp
xor
pop
cmpsl
lock
or
mov
dec
fadds
outsb
sub
fdivr
sbbl
sbb
je
stc
dec
loope
sti
sti
int3
popa
inc
jmp
add
cmp
mov
icebp
fcmovne
es
pop
incl
add
lock
mov
cwtl
sbb
mov
cmc
add
add
sbb
sbb
shrl
jle
sub
mov
xchg
les
sbb
mov
fmuls
hlt
ja
popl
mov
cmpl
pop
jbe
leave
repnz
scas
mov
lret
cmc
cmp
xor
pop
cmp
mov
and
push
fcoml
sbb
jp
dec
jae
xlat
jl
jp
and
fisubrl
or
test
sti
jg
arpl
les
dec
adc
aad
inc
or
xchg
jb
pop
out
adc
bound
adc
std
mov
out
jno
daa
fistpl
push
adc
and
pop
pop
test
lahf
sub
roll
mov
add
inc
cltd
pushf
mov
jl
dec
jp
mov
jg
or
cmp
push
xlat
icebp
out
imul
add
add
sti
pop
jge
div
cmp
and
cmpb
add
add
add
add
mov
jb
out
hlt
jnp
xor
popf
js
sub
mov
jmp
jo
or
test
push
mov
popf
mov
stos
lea
lds
mov
lods
fiadds
add
sti
pop
nop
push
subb
movsb
mov
mov
scas
out
mov
and
push
jecxz
aad
shlb
aaa
sti
inc
das
sub
repnz
mov
js
pop
cld
incl
jne
cld
xchg
ljmp
js
outsb
sub
js,pt
lahf
mov
repnz
xor
cld
fucomi
data16
fsubl
rcrb
insl
cmp
adc
sahf
or
cwtl
insl
jb
inc
jb
cmp
inc
add
adc
fucomi
movsb
xor
fistl
sub
insb
jbe
add
pusha
cltd
fsub
std
in
popf
jle
es
push
pop
inc
ja
add
cmc
add
add
cmc
fwait
ds
movl
cmpsb
and
dec
mov
lods
clc
sahf
call
sub
ss
out
adc
and
mov
lahf
stos
shlb
and
les
mov
inc
inc
xor
scas
and
cmp
or
in
leave
fistpl
cmp
mov
rclb
pop
cmp
hlt
sbb
ss
cmp
inc
shrl
arpl
sbb
cli
inc
lods
push
dec
xor
and
add
cmp
or
arpl
mov
and
das
in
and
mov
andb
jecxz
loope
sbb
adc
das
and
outsb
or
sahf
cli
repnz
ret
jo
nop
pop
jmp
mov
push
daa
adc
sub
sub
lahf
mov
add
add
jp
jnp
sti
xchg
jle
popf
loopne
or
dec
insb
inc
add
cmc
add
add
mov
and
sub
jecxz
mov
popa
jle
or
inc
pop
rol
or
mov
paddb
std
inc
cli
push
pop
call
inc
push
insl
jns
shlb
or
pop
out
das
test
jns
mov
cwtl
mov
push
inc
cld
cmc
dec
jae
mov
in
push
mov
cwtl
fwait
les
mov
push
sarb
push
jb
maskmovq
idivl
in
andb
jl
call
inc
out
repnz
aaa
out
roll
xlat
or
or
nop
into
pop
sbb
gs
loopne
push
mov
lahf
jb
xlat
ja
mov
cmp
fcoms
dec
int
or
and
leave
popa
enter
push
repz
sbb
push
mov
jbe
mov
pop
mov
call
in
mov
add
mov
push
sti
loopne
cmp
push
xchg
popa
inc
add
cmc
add
add
icebp
aam
fsubs
into
mov
scas
xor
jnp
loopne
stc
and
xor
push
inc
and
pop
aam
out
arpl
and
test
push
insl
inc
cwtl
lahf
sub
pushf
mov
divb
mov
mov
popf
jnp
popa
mov
jge
aaa
xlat
push
adc
cmc
jno
mov
sbb
sti
test
mov
or
scas
jo
decl
pop
js
sbb
rcrb
push
out
inc
shrl
lods
inc
dec
mov
stos
push
in
xor
popa
cmp
scas
push
roll
jnp
lea
iret
mov
and
pusha
or
movsl
jecxz
dec
test
dec
lret
mov
add
pop
es
pop
data16
nop
adc
lods
fisttps
jb
mov
dec
add
add
cmp
and
push
dec
mov
xchg
ja
inc
add
cmc
add
add
or
dec
add
push
cmp
lret
add
or
mov
jns
out
inc
icebp
jle
rorb
xchg
adcb
test
xchg
xchg
cld
popa
sub
cs
sbb
imul
xchg
in
sbb
sbb
adc
push
aad
in
in
pop
out
stos
jnp
je
mov
adc
js
loopne
and
and
add
sbb
adc
dec
push
and
xchg
imul
cmc
dec
movsb
dec
mov
cmp
or
mov
mov
cmp
insl
inc
movsl
or
int3
sti
cmpl
addb
jnp
dec
jnp
inc
pop
push
adcb
dec
out
inc
jae
push
sbbl
push
cmpsl
jbe
bound
sub
dec
xor
inc
test
mov
ffreep
pop
mov
pop
pop
inc
jl
les
mov
sub
out
dec
inc
incb
ljmp
scas
aas
leave
inc
dec
inc
add
cmc
add
add
dec
pop
lods
shll
push
sbb
mov
iret
fwait
mov
push
addl
cltd
jns
push
mov
shrl
push
inc
insb
mov
inc
enter
ja
outsl
mov
mov
lret
add
fsubrl
inc
pop
repnz
cld
or
repnz
fistpl
ret
inc
mov
sbb
test
xor
test
dec
daa
push
add
lea
in
push
sbb
stos
arpl
jmp
mov
cmp
loopne
mov
mov
js
lea
leave
mov
xor
sbb
lret
movsb
mov
loopne
xchg
jp
jb
or
pop
xchg
inc
ss
mov
and
aam
stos
and
out
xchg
daa
fdivrs
lods
fstl
push
sub
int3
sub
fs
adc
add
divb
rclb
mov
scas
daa
inc
inc
add
cmc
add
add
push
mov
cmpsl
iret
mov
stc
push
or
mov
jmp
dec
test
and
and
mov
push
mov
out
outsb
and
and
add
setno
outsb
mov
push
push
call
pop
les
jae
cltd
icebp
add
adc
pusha
pop
mov
and
mov
cmc
test
cmp
dec
dec
and
cmp
mov
orl
pop
jl,pn
daa
fadds
and
enter
inc
lods
inc
pop
gs
pop
subl
push
popa
sti
cmp
out
adc
sub
mov
and
scas
ljmp
dec
sub
add
mov
inc
or
jle
or
je
not
jmp
imul
jge
add
pop
ret
fdivrl
mov
fimuls
incl
clc
jo
lea
add
jl
dec
jbe
idivl
ss
repz
pop
addr16
add
add
hlt
mov
sahf
in
mov
out
jecxz
sbb
push
xchg
sub
inc
cmp
jae
inc
adc
cmp
enter
lea
loope
jp
pop
push
xlat
or
lea
lods
hlt
mov
mov
ljmp
pushf
add
xchg
push
push
push
xchg
lret
insb
iret
subb
and
xchg
ret
xor
inc
mov
jmp
test
stos
call
lock
pop
inc
scas
insb
pushf
in
pop
sti
rsm
fstp
aad
xor
cmp
pop
ret
cmpsl
test
xchg
sub
add
dec
jns
js
pop
push
dec
xchg
cmp
aas
mov
fnstsw
repnz
gs
add
cmpsl
frstor
cmp
fimull
sbb
and
mov
add
and
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
mov
test
inc
sbb
inc
push
dec
push
ljmp
xor
popa
cwtl
add
xor
sbb
mov
fdiv
push
mov
mov
jb
jns
jns
push
in
mov
cwtl
xlat
cmc
fwait
mov
mov
push
jne
bound
sub
mov
in
decl
test
shll
jb
jl
test
and
daa
mov
add
mov
ja
nop
out
fldenv
movsl
xor
loop
cs
xchg
mov
add
sub
lret
jo
jp
or
dec
aas
mov
mov
mov
mov
repnz
mov
adc
test
push
cli
stos
addr16
jle
out
sbb
call
test
scas
stc
into
insl
and
test
movsl
pop
sub
mov
fnclex
mov
pop
pop
jae
jp
insb
sbb
adc
add
test
add
add
insb
pop
pushf
scas
fistpll
loop
inc
pop
or
pop
dec
add
cmc
add
add
mov
add
mov
sub
insl
negb
aam
pop
xchg
mov
sub
pushw
xor
mov
cwtl
insb
pop
adc
iret
jl,pt
mov
lods
dec
imul
mov
push
daa
aas
xchg
push
jns
lds
mull
cld
mov
cmp
addr16
xor
mov
mov
sbb
test
and
imul
or
imul
or
sti
xchg
pop
inc
push
mov
stos
ret
mov
push
cmp
push
mov
lret
data16
loopne
sbb
adc
cmp
pop
dec
lds
faddl
lret
add
scas
lods
or
xor
fldpi
xor
add
push
call
loopne
outsl
repz
nop
nop
lods
jl
ds
jb
or
sub
lahf
int3
sbbl
add
sbb
jnp
jnp
cmp
les
fnsave
dec
add
cmc
add
add
mov
inc
xchg
mov
fcomip
push
xchg
fadd
bnd
les
addl
mov
faddl
sbb
jmp
dec
adc
dec
cmp
shll
clc
pushf
lcall
lock
aad
dec
icebp
sahf
sbb
lods
js
cld
xbegin
icebp
xor
push
jno
or
das
and
and
mov
sbb
jb
cmp
or
out
inc
popf
shll
aaa
mov
out
jmp
xor
into
and
test
push
push
fcoms
pushf
xchg
pop
je
dec
add
jnp
xchg
mov
sahf
jo
mov
pop
adcb
xlat
fidivrs
jecxz
enter
nop
aam
sub
jbe
mov
mov
cmp
lahf
lahf
ret
dec
outsl
clc
xor
cwtl
push
stc
iret
and
push
add
add
outsl
lret
mov
out
incl
arpl
jns
xchg
pop
or
add
add
add
sbb
daa
jne
dec
pop
rcl
add
cmp
in
adc
std
hlt
inc
negl
loopne
pusha
mov
sub
inc
sub
mov
icebp
or
mov
jge
xor
stc
lea
imul
stos
or
popa
or
sbb
into
das
es
jae
push
fsubrs
int3
fimuls
adc
das
fsubl
mov
aas
mov
imull
inc
jmp
shlb
out
jl
cli
xchg
mov
stos
fst
std
ss
mov
cmp
lods
les
add
jge
pop
jae
cmp
and
jp
dec
js
and
incl
pop
dec
jo
and
mov
ja
lcall
dec
push
xlat
repnz
adc
sub
sub
sbb
iret
add
add
repz
cmp
lods
repz
in
pusha
out
jae
arpl
cmc
add
add
mov
testb
inc
xchg
push
mov
scas
sahf
sub
pushf
scas
call
shrb
and
cwtl
mov
insb
nop
add
xchg
std
xchg
jl
test
sbb
inc
sub
mov
js
out
dec
loopne
sbb
stos
repz
fiadds
pop
cs
xor
xor
lahf
adc
xor
mov
sbbl
jns
inc
jnp
mov
push
push
xchg
scas
mov
daa
add
lret
dec
into
push
sbb
addb
push
or
das
cmpsb
or
inc
dec
xor
filds
addl
jb
js
lds
jne
mov
xchg
dec
lock
jge
and
cmp
inc
push
jnp
fcomip
add
sub
jns
iret
dec
mov
idivb
mov
loop
mov
test
lret
lret
push
cmp
aas
daa
push
cld
push
std
jmp
push
jg
push
or
dec
repz
add
cmc
add
add
rclb
or
scas
cli
jbe
xchg
std
cmp
push
fistpl
sti
lahf
push
sbb
or
and
jmp
sahf
into
mov
mov
pop
mov
push
mov
cld
inc
lea
ds
mov
in
mov
in
ljmp
cmpsl
mov
mov
and
insl
add
push
add
mov
jnp
insb
pop
xor
lahf
cmp
fldcw
xchg
mov
xor
jne
mov
lods
dec
sub
aad
std
scas
mov
or
adc
fidivl
cmpl
pop
pop
push
adc
clc
sbb
mov
popf
sub
push
and
or
push
and
rcll
xchg
adc
mov
adc
dec
cld
sbb
add
dec
push
add
sbb
dec
push
cwtl
adc
sbb
xchg
call
add
add
mov
lods
add
lds
pop
lret
push
adc
inc
nop
add
fisubl
push
fstpl
dec
loop
loopne
mov
std
jb
dec
xchg
aam
repz
inc
sbb
lds
ds
lods
xchg
leave
aas
inc
bound
jo
ret
mov
cmpsl
cmp
pop
cld
inc
shll
loope
imul
popf
adc
jno
es
in
jno
cmpsl
bound
pop
mov
pushf
sbbb
fsubl
jae
cmpsb
pusha
out
pushf
int3
or
mov
push
stc
loop
les
jl
add
and
js
xor
push
mov
push
mov
sub
loopne
mov
xchg
mov
arpl
jecxz
stc
cmc
inc
or
and
cwtl
mov
adc
mov
add
stos
add
push
mov
mov
lahf
dec
add
cmc
add
add
cltd
xorb
adc
lret
daa
mov
push
inc
dec
pop
sbb
ret
push
cmp
in
sbb
popa
std
sbb
lock
dec
or
mov
lahf
pop
mov
and
hlt
iret
adc
inc
cmp
pushf
sub
fsubl
mov
aam
mov
orl
push
rcll
das
movsb
in
dec
add
cmp
jg
jle
mov
xchg
dec
mov
add
xchg
push
or
dec
mov
sbb
cmp
xchg
fildll
and
rcrl
sub
mov
mov
dec
adc
or
jne
or
pop
jmp
xchg
lret
push
shll
pop
mov
mov
or
outsb
enter
cwtl
push
dec
cmp
stos
icebp
pop
lods
or
test
xor
rcll
cmp
mov
ja
jg
xchg
lcall
not
dec
add
cmc
add
add
pop
pop
jo
fbstp
fsubrs
jle
test
inc
inc
push
or
xchg
mov
xchg
mov
cli
lock
mov
icebp
jo
pop
push
mov
push
xchg
lahf
pop
cld
and
insl
push
popa
inc
dec
cmp
loop
fistl
add
decl
dec
sarb
mov
mov
aaa
mov
outsb
shll
int3
outsl
inc
dec
cmp
dec
jmp
pop
daa
daa
mov
add
dec
aaa
xor
sub
stc
jae
insl
addb
dec
cs
pusha
fdivrs
popf
jns
rclb
shlb
scas
push
and
data16
fdivr
adcl
inc
inc
xchg
mov
cli
lods
rcrb
mov
inc
test
cmpsl
loopne
mov
pusha
xlat
ds
mov
hlt
sub
xchg
inc
push
sub
push
sub
jp
dec
andb
adc
add
add
push
dec
lret
jmp
imul
xchg
aad
fsubrs
dec
add
cmc
add
add
sub
test
push
xor
jp
jp
inc
lods
filds
imul
and
jge
shlb
test
mov
stos
stos
jo
sub
lret
inc
cwtl
sub
loop
sub
rcl
cmp
or
pop
pushl
sub
adc
xor
shrl
mov
cmp
outsl
cs
pop
rcrl
or
cmp
push
lods
mov
repz
bnd
scas
roll
inc
jns
mov
lea
sub
cltd
mov
pop
jmp
rcr
notb
or
cmp
xchg
lea
pop
les
cmpsl
out
inc
adc
aam
loop
outsb
orb
mov
cmc
lret
imul
lds
and
repz
cld
subl
lds
cmc
cwtl
and
rorl
mov
add
add
mov
pusha
ds
inc
aaa
nop
jge
jge
shlb
cmpsl
aad
mov
xor
xchg
in
addr16
cmovo
outsl
dec
mov
imul
idivl
mov
mov
push
and
shlb
jp
inc
ljmp
lds
or
mov
jb
pop
cmp
cmp
pop
xchg
xlat
aas
test
fnstcw
stc
divb
xchg
mov
popa
loop
cmp
cltd
sub
repnz
mov
icebp
test
adc
push
std
mov
negb
mov
xor
loop
cmp
nop
jmp
xchg
test
push
add
xchg
jne
push
movd
fwait
xor
mov
pop
sub
lcall
adc
out
imul
fs
repz
add
sub
jns
clc
mov
mov
push
add
cmc
add
add
pop
or
sub
lret
lahf
sahf
pop
ret
mov
mov
and
out
cmp
sbb
xchg
pop
push
sbb
push
out
mov
pop
mov
shll
into
inc
imul
lret
cs
mov
dec
repz
das
cmc
cmp
lods
out
stos
call
pop
rolb
lock
stos
xchg
repz
scas
enter
enter
jle
adc
pop
sub
fbstp
fists
jl
adc
test
inc
dec
cmp
and
adc
cmc
xor
jmp
cmpsl
xor
into
or
es
stos
mov
sbb
push
ss
mov
cmpsl
jl
mov
cmp
clc
lods
push
jo
sbb
mov
mov
ds
mov
add
cmp
mov
add
ret
jg
mov
add
add
cmc
add
add
cmpsl
xchg
fiaddl
mov
jae
lahf
mov
sub
outsl
push
mov
in
rorl
hlt
pusha
mov
dec
in
and
adc
sbb
mov
rorb
mov
cmp
mov
lods
dec
mov
insb
push
adc
test
clc
push
sbb
je
mov
bound
fsts
jle
test
mov
sub
inc
rcrb
sbb
sub
mov
mov
fwait
pop
sbb
std
cmp
bnd
js,pt
sbb
push
cwtl
push
mov
mov
mov
dec
jne
push
pop
fdivrl
imul
stos
sbbb
and
mov
imul
dec
js
and
and
data16
and
sbb
adc
cmp
cmp
mov
js
adcl
push
xchg
sahf
inc
testl
adc
mov
cwtl
out
daa
addr16
movsl
sahf
fwait
push
add
cmc
add
add
or
mov
rcll
pop
mov
cld
dec
sub
push
jb
lds
push
lods
enter
out
pop
je
repnz
out
jo
cmpsb
add
stc
loope
cmpsl
imul
jne
cmp
push
std
xor
push
test
jbe
add
pop
or
outsb
mov
jnp
push
push
test
push
mov
adc
lret
mov
and
insl
mov
out
sbb
mov
push
and
lds
mov
cmp
cs
fimuls
ret
add
add
sub
push
push
mov
mov
inc
sub
pop
dec
lea
inc
in
mov
xor
pop
leave
push
mov
test
push
daa
cld
pop
lret
aaa
cs
popa
loopne
insl
pop
shl
cli
clc
repz
test
add
inc
icebp
hlt
gs
push
sub
jo
nop
push
add
cmc
add
add
insb
cmp
imul
into
fwait
push
popa
popa
dec
push
xor
bound
push
daa
js
mov
mov
pop
cmpsb
test
sub
imul
push
sbb
xor
inc
inc
in
xchg
stos
xchg
xchg
repz
adc
xchg
adc
shlb
or
data16
test
mov
loope
push
imul
rcrb
fnstcw
cs
movsl
inc
xchg
lret
pop
out
cli
mov
xchg
jg
mov
fdivp
shlb
inc
clc
mov
fldl
and
adc
out
jecxz
sbb
or
adcl
adc
je
mov
movsb
inc
es
inc
xor
out
or
nop
inc
ret
int
mov
lret
mov
std
cmp
lock
push
icebp
mov
add
add
add
add
aas
gs
repnz
and
xchg
lret
test
add
add
add
pusha
xchg
jle
mov
fidivrl
incl
and
lcall
jge
imul
dec
mov
lea
jbe
pop
pusha
cwtl
pushf
fs
jo
in
mov
mov
cwtl
leave
ljmp
dec
mov
sub
mov
cmp
loop
xchg
pop
ja
mov
lds
mov
mov
divb
aam
inc
or
sbb
add
mulb
gs
and
fstps
dec
lds
inc
shll
push
jge
push
adc
arpl
or
insl
in
shll
jg
add
add
mov
adc
pop
repz
jne
pop
aad
xorl
cltd
add
call
jno
jmp
pop
push
push
loopne
ja
push
js
jp
out
push
add
add
out
fisttpll
mov
jp
add
cmc
add
add
sub
fisttps
aam
pop
inc
mov
mov
outsb
cmp
and
cld
push
push
leave
sahf
jmp
in
mov
mov
sub
cmpl
or
dec
mov
add
out
dec
cltd
mov
adc
jge
xchg
sbb
aaa
cmpsb
out
aam
add
jns
mov
subl
push
loop
dec
mov
dec
aad
xor
rolb
xor
xchg
sbb
ffreep
fstpl
out
test
add
sub
cmp
int
pop
xchg
pushf
lret
fsubr
es
in
push
jae
in
inc
add
dec
sbb
imul
and
je
xchg
mov
icebp
dec
fisttpl
jb
fcoml
sbb
xchg
popa
or
push
pushf
mov
fld
hlt
inc
mov
add
inc
cmp
cmpsl
add
add
mov
arpl
outsl
push
add
cmc
add
add
dec
and
jg
in
in
adc
sbb
and
sub
rorb
adc
mov
in
jnp
lret
clc
ret
xchg
ja
push
pop
and
mov
pop
inc
cltd
mov
fistpll
out
into
sbb
lea
imul
inc
repnz
and
daa
mov
sub
and
pusha
push
idivl
clc
xorl
ds
cs
bound
je
add
jl
mov
jae
and
jl
and
ret
in
mov
enter
or
movsb
cmc
push
mov
movsb
push
les
or
sub
add
lods
in
fcoml
mov
sub
mov
jg
mov
out
inc
xchg
lds
adc
jecxz
insb
insl
fistpl
gs
fnstenv
in
cmpsl
add
jnp
fadds
pop
or
add
push
sbb
jmpw
fnstcw
mov
test
add
add
add
add
loopne
mov
cmc
daa
push
aas
add
adc
mov
cmp
adc
push
jecxz
adc
js
mov
stos
mov
rorb
cmp
hlt
fadds
repnz
das
outsl
int3
movsb
out
xchg
push
add
sub
cmp
push
xchg
mov
and
push
and
cmp
cmpb
mov
xor
lret
add
and
add
test
les
popa
shlb
inc
mov
xor
arpl
xor
add
adcb
add
xorb
test
mov
mov
mov
fwait
and
inc
add
loop
out
daa
cmpsb
fsubp
out
push
movsl
loope
mov
and
mov
sub
lret
imul
ficoml
fdivl
pop
fwait
adc
or
xor
add
cmp
imul
out
mov
arpl
or
sbb
cmc
add
add
xchg
xchg
data16
xor
add
fdivp
outsl
push
popf
aam
in
stos
lods
push
lahf
jl
icebp
xor
jl
dec
jge
push
mov
es
jb
test
pop
imul
cmp
js
mov
jo
add
sub
insl
jp
iret
fisubs
ja
cmp
sarb
sbb
dec
aad
in
movsl
adc
push
pop
popf
pop
cmp
test
clc
jae
sti
call
stc
insb
xchg
shrl
cs
inc
shlb
cmpsb
adc
xlat
push
push
xor
cmp
xchg
sarl
out
push
sub
mov
sbb
out
test
jle
bound
pop
push
sub
jb
popa
push
movsl
icebp
dec
inc
adc
pop
stos
aad
out
jl
cmpsb
mov
insl
jg
insb
movsb
out
push
pop
popf
test
add
add
dec
stc
mov
clc
add
jnp
mov
add
add
add
rolb
imulb
pop
pop
mov
ret
xchg
mov
mov
aad
xor
mov
repz
cmc
sbb
xor
ss
push
fisttpl
and
fdivr
jecxz
and
push
shrb
dec
out
sahf
les
fistpll
add
xor
mov
stos
in
jns
dec
xor
aad
imul
mov
inc
fcoml
sbb
push
cmp
cmp
popa
adc
mov
stos
xchg
lds
xchg
cli
nop
filds
mov
loope
pop
pop
out
inc
jbe
mov
loop
xchg
cmp
loop
cmpsl
pop
cmpsl
xchg
lea
xchg
xor
nop
sbb
jnp
hlt
cmp
ss
inc
testl
mov
inc
xchg
cld
int
jg
inc
pop
jo
ffreep
add
add
jg
cld
jo
hlt
leave
xchg
mov
add
cmc
add
add
jle
out
jl
insl
push
and
cmc
mov
in
push
dec
mov
stos
xchg
mov
cwtl
cmp
cmpsl
mov
outsl
pop
aad
stc
fs
xor
add
mov
xchg
pop
ret
mov
jp
daa
lcall
leave
stos
pop
or
fisttpll
iret
adc
imul
mov
mov
je
popf
ret
stos
inc
arpl
in
mov
xchg
iret
repz
push
lock
les
das
mov
int3
mov
dec
mov
loop
mov
cmp
mov
ficoms
movsb
cmp
insl
push
and
call
mov
push
das
movsl
push
mov
push
mov
inc
test
ja
pcmpgtb
add
fidivrl
int
jg
and
add
or
dec
stos
dec
loopne
cmc
lret
xor
lods
int3
add
add
xchg
mov
mov
jae
add
pop
add
cmc
add
add
bound
insb
jae
lea
adc
xor
sbb
xor
fisttpl
adc
shrl
dec
adc
add
aas
and
push
xchg
adc
xchg
lea
and
lods
jae
pop
dec
push
int
test
cld
inc
ds
pop
ljmp
mov
test
imul
adc
divb
mov
ja
sub
inc
xchg
push
xchg
outsb
push
or
mov
sub
les
xchg
xor
mov
dec
dec
sbb
je
mov
mov
out
in
jns
xor
inc
mov
jns
push
sbb
mov
js
xchg
jg
daa
jne
jns
ss
in
cmp
or
dec
jge
pop
xchg
sahf
xor
add
add
inc
mov
push
push
jmp
sahf
fisubs
adc
pop
add
cmc
add
add
push
xchg
inc
push
add
pop
lock
inc
aam
mov
xchg
xor
insl
in
std
jno
daa
jo
and
xor
shr
xchg
arpl
jl
mov
filds
das
outsb
mov
test
lcall
mov
add
gs
lock
mov
sarl
test
vscatterqps
loop
adc
xor
test
pop
jb
repnz
mov
std
xor
push
leave
or
push
mov
inc
mov
fdivrs
int3
xor
inc
test
lahf
pop
inc
fsubrs
fisubs
jl
dec
mov
ret
push
aas
mov
push
js
pop
mov
or
sub
push
inc
loop
fldenv
cmp
icebp
add
or
mov
jno
ror
ret
bound
jbe
sbb
mov
add
add
sub
cmp
dec
bswap
jp
and
add
add
add
cld
xlat
js
in
mov
and
add
roll
scas
cmp
xchg
mov
lea
insb
popf
in
inc
ss
cmp
push
inc
imul
jb
or
sub
stc
rcrb
jb
mov
mov
stc
pop
push
jno
xorb
sub
mov
pop
aaa
push
push
and
push
loope
dec
adc
popa
stos
cwtl
pop
cmp
sub
loop
out
mov
jb
and
sbb
pusha
rolb
or
xor
pop
aam
mov
cmpsb
mov
cmp
scas
lock
lret
and
add
push
add
push
jp
mov
pop
or
pop
movsl
fdivl
popf
pop
lret
mov
inc
orb
lret
das
push
add
mov
jae
ljmp
fmuls
dec
and
xchg
inc
in
cmpsb
and
add
or
push
shll
out
xchg
inc
push
in
pop
add
cmc
add
add
and
shll
minps
rorl
scas
jnp
xor
mov
cmp
dec
pusha
shrl
ret
lods
add
outsb
data16
jne
cmp
xchg
ret
pop
lret
ljmp
jp
push
add
jae
pop
stos
push
test
popf
movsl
lahf
or
repz
pushf
push
dec
pop
jmp
mov
adc
idiv
and
sub
xchg
aad
into
mov
lds
mov
repnz
sub
mov
xor
lea
rcll
cmc
call
loopne
in
jge
mov
pusha
mov
pop
popf
cltd
inc
ja
iret
mov
and
xor
sarb
push
cs
mov
jp
imul
lea
inc
cwtl
mov
jo
and
test
scas
daa
pop
lahf
cld
pop
fs
add
add
out
lcall
inc
and
mov
inc
lods
or
add
cmc
add
add
or
stos
or
in
mov
sub
pop
jns
push
lods
outsl
pop
mov
mov
int3
rcrb
test
lods
xlat
sbb
push
test
gs
jbe
jo
mov
xor
cmp
stos
ljmp
cli
rcl
test
push
push
or
fisubrs
mov
push
pop
push
mov
jg
fidivl
push
mov
out
jo
xor
or
mov
lahf
dec
stc
roll
cmp
cmpsl
mov
inc
or
mov
je
ss
fmuls
rorb
lret
fnsave
adc
testl
sub
add
push
inc
outsl
add
sub
sub
add
rcrl
inc
mov
push
ljmp
add
add
jbe
idiv
imul
pop
or
add
add
add
pop
repz
insl
lahf
mov
pop
fstpt
inc
inc
sahf
dec
js
sbb
or
mov
jle
test
push
out
lea
push
movsb
insb
data16
ds
popl
cmpsb
ja
test
mov
lret
loopne
insb
xchg
dec
pop
sar
xor
insb
int
mov
out
insb
es
test
mov
les
jmp
rol
mov
mov
in
mov
add
mov
mov
sub
cltd
add
pop
pushf
push
sub
sub
mov
sbb
test
cmc
js
pop
fsts
jnp
outsl
xchg
cmp
movsb
inc
xor
outsb
aam
adc
ds
popa
ja
xchg
add
mov
in
mov
push
xlat
test
mov
sbb
jo
push
ds
mov
jge
mov
add
add
fwait
cmp
dec
data16
dec
rorl
add
cmc
add
add
into
or
andl
xor
jbe
imul
mov
clc
sub
fmul
jge
rcrb
xchg
mov
mov
jae
leave
xchg
pop
jmp
push
cmp
rcrb
jmp
pop
mov
xchg
sub
sahf
mov
or
mov
repnz
es
fdiv
jmp
xor
lods
dec
popf
push
jo
add
imul
out
pop
cmp
jl
xchg
pop
mov
push
pop
pop
sbb
out
add
jo
cmp
mov
adc
xchg
lods
lds
test
sub
jle
add
lds
in
or
sbb
shl
mov
hlt
cmpps
cmp
jp
cmp
cld
xchg
shrb
mov
xchg
out
lret
out
add
add
clc
mov
or
push
jg
jmp
add
cmc
add
add
adc
and
sbb
cmp
sub
and
mov
fsubrl
dec
mov
dec
arpl
movsl
pusha
js
cmc
cmp
jg
mov
bound
jo
lret
jmp
fnsave
jno
sub
push
ret
ds
pop
sbb
mov
xchg
mov
in
xor
pop
cmp
push
inc
mov
pop
adc
jl
cmp
push
adc
mov
aam
adc
mov
out
stos
jo
xchg
mov
ss
out
notb
xchg
and
ret
icebp
push
xor
lcall
iret
xchg
test
adc
icebp
rolb
add
sub
jns
xchg
popa
fldenv
js
mov
jg
cmp
lds
cmpsl
pop
sub
mov
jecxz
add
scas
xchg
push
adc
out
mov
jae
iret
xor
arpl
add
add
add
mov
dec
xor
lods
ret
dec
or
sub
sti
sub
hlt
adc
fiadds
mov
jg
andb
movsl
ja
pop
cmp
and
add
packssdw
sbb
out
jno
flds
adc
lret
call
push
add
sbb
mov
int
inc
cli
mov
cmp
test
int
mov
push
jbe
mov
in
adc
push
test
in
data16
scas
insb
fsubr
mov
pop
dec
mov
sub
orl
jbe
cli
fildl
sbb
scas
pop
pusha
jmp
inc
sub
push
aad
ret
stos
in
xchg
pop
sub
sbb
push
pop
xchg
es
je
sub
out
sub
shll
popa
pop
notb
popa
cmp
aam
mov
test
mov
add
mov
int3
rorb
dec
sub
jnp
add
cmc
add
add
jns
out
jno
test
sbb
inc
xor
cmp
ja
jo
setns
mov
adc
adc
xor
mov
sbb
in
sbb
inc
push
mov
test
mov
test
sarl
inc
leave
dec
gs
push
add
imul
repnz
icebp
insl
dec
mov
mov
cmp
jl
ucomiss
jae
pop
xlat
mov
or
adc
jnp
sub
aam
cmpsb
in
pop
ss
stc
cli
mov
insb
in
call
cmp
arpl
mov
mov
mov
mov
movsl
sub
sub
sbb
aam
test
xor
icebp
mov
jno
cltd
hlt
mov
push
pop
and
jo
inc
adc
lods
iret
pop
mov
adc
jmp
adc
int
decb
add
add
mov
cmp
add
cmc
add
add
cmp
jne
sub
popf
insb
or
sbb
cmp
pushf
mov
jns
xchg
xchg
xchg
inc
popa
mov
js
ficomps
dec
sbbl
pop
or
lret
subb
inc
xchg
jae
cmp
add
xchg
movsb
mov
sahf
scas
sbb
aad
sbb
andb
push
inc
shll
std
sub
mov
pop
test
cs
lock
pop
cmp
int
je
ds
sub
xor
pop
leave
js
jnp
insb
sar
out
jbe
cmc
sub
or
sub
push
push
inc
adc
pop
pop
push
jecxz
sbb
fdivrs
stos
adc
xchg
hlt
cmp
test
xchg
mov
and
mov
pop
and
xchg
fdivp
sbb
add
inc
mov
add
jne
aam
in
lds
adc
je
mov
add
movsb
jae
jnp
mov
lods
push
adc
mov
add
add
lea
inc
out
popf
cmp
rsqrtps
mov
cwtl
in
dec
imul
stos
cs
ljmp
jl
test
sub
inc
int3
add
out
addb
int3
xor
lea
jns
xchg
jl
pop
lret
or
sbb
out
inc
mov
or
sbb
dec
incb
mov
mov
mov
iret
mov
or
cmp
mov
testb
sub
iret
mov
mov
sti
into
jae
enter
movsl
in
pop
fdivrs
cmp
dec
out
mov
lea
dec
outsb
mov
fldcw
pop
add
scas
cmc
dec
into
and
fsts
sub
mov
cmp
push
addr16
cmp
push
addr16
xor
xor
mov
divb
int
fisttpll
add
add
xor
mov
and
mov
add
cmc
add
add
or
loop
xor
ss
mov
jp
js
mov
mov
cmpsl
jo
ja
push
lods
xchg
rcr
mov
and
lea
mov
jne
ss
lea
inc
cmc
es
or
movsb
sbb
movsb
fcoms
jbe
xchg
push
mov
xchg
cmp
push
add
data16
adcb
jne
push
push
std
rolb
fidivrl
push
stos
push
std
cmp
fdivrs
push
push
in
and
cmp
mov
jmp
pop
test
cmpsl
mov
and
jno
scas
add
ret
mov
mov
in
repnz
int3
aaa
xchg
mov
xor
push
xchg
stc
mov
sub
push
ret
pusha
cwtl
shlb
pop
pop
jle
repnz
jae
rclb
add
cltd
ja
add
add
mov
scas
sub
jns
cmp
add
add
inc
or
movl
jecxz
repz
mov
aas
mov
out
inc
in
shlb
inc
aaa
fimull
push
lods
in
dec
inc
jne
pop
dec
or
xchg
jp
pop
adc
notl
push
dec
push
pop
xchg
mov
scas
mov
pop
or
sub
shlb
mulb
xor
dec
imul
pusha
stc
stos
dec
jnp
fsubrs
hlt
jae
xlat
mov
add
arpl
out
mov
mov
pusha
add
mov
jns
mov
xchg
roll
out
test
rcll
and
fildll
add
sub
xor
out
push
add
loope
jp
adc
lahf
es
int
mov
ja
lret
or
dec
data16
ljmp
inc
cmp
push
aad
and
add
add
push
into
push
cmp
sub
pop
and
add
add
add
or
stos
adc
addr16
lock
aaa
mov
lods
addr16
test
xchg
sbb
xchg
adc
cmpb
cmp
mov
lret
xor
xlat
jbe
add
mov
jbe
lret
in
sbb
mov
jp
or
icebp
inc
xchg
dec
mov
sbb
roll
jmp
imul
and
xor
outsb
movb
push
inc
out
stc
int3
add
andb
add
pop
lds
xchg
fimull
aad
mov
mov
mov
scas
mov
imul
pop
dec
mov
inc
push
push
shl
sub
pushf
inc
lock
jo
sbbl
rcrl
push
mov
push
and
ret
jl
into
mov
js
sbb
add
add
xchg
inc
shl
xlat
mov
fisttps
jo
mov
pop
xchg
push
add
add
add
jmp
pop
push
xorl
cmp
sbb
mov
xchg
aas
and
sbb
dec
insb
imul
in
adc
adc
push
mov
push
mov
sbb
outsb
mov
mov
jns
jle
sub
movsb
xor
mov
aam
mov
rol
enter
jle
mov
pop
jno
xor
rol
xchg
dec
scas
mov
push
mov
jns
jns
in
out
adc
inc
bound
adc
push
add
loope
jb
hlt
shrb
or
mov
mov
and
pusha
addr16
cmp
jmp
jmp
mov
nop
xor
mov
add
ret
rep
std
mov
gs
xchg
or
ror
popa
aas
dec
add
add
lahf
pop
bnd
mov
mov
add
add
add
fildl
test
je
jno
dec
movsl
test
cltd
int
adc
cmp
push
in
inc
push
pop
push
sub
xchg
lea
sbb
push
in
jb
adc
push
mov
adcb
in
mov
sbb
sbb
sbb
pop
mov
adc
jg
xlat
and
test
mov
and
mov
xchg
fidivs
loope
adc
push
andb
push
insl
into
movsb
xchg
inc
in
pop
ror
arpl
inc
pusha
pop
mov
out
cmpsl
xor
mov
mov
mov
mov
idivl
and
pop
adc
xorb
jae
insb
pop
push
cmp
pop
ficoms
out
dec
aad
mov
fmull
lcall
lret
pusha
sbb
lcall
push
out
repz
xor
or
add
add
idiv
jg
data16
aad
sahf
jno
jge
add
cmc
add
add
add
sbb
pop
push
sbb
dec
xchg
inc
cmp
test
ficomps
or
je
out
mov
jnp
cmp
push
es
fidivrl
jl
enter
imul
jnp
enter
adc
in
mov
sub
imul
cld
mov
fnsave
fadds
xchg
mov
shlb
inc
je
dec
xchg
push
test
icebp
addr16
jmp
cmpsb
and
scas
mov
adc
aad
push
sbb
mov
cltd
xchg
dec
daa
fs
adc
daa
repz
jb
stc
pusha
xor
ret
dec
cmpsl
push
add
and
addr16
lds
aaa
dec
stos
std
inc
cmc
mov
sub
test
push
sub
jg
mov
add
inc
pop
mov
movsb
inc
gs
xor
or
insl
add
cmc
add
add
jns
and
mov
icebp
ret
pop
outsl
xchg
std
stc
jl
aaa
mov
in
jmp
pop
mov
mov
sbb
cmp
outsl
out
jge
in
fdivp
cmp
shlb
lods
push
mov
cli
push
fcmove
mov
in
inc
in
and
subb
cmp
insl
jmp
sub
jb
adc
enter
mov
or
xchg
test
aas
movsb
outsl
sbb
adc
sub
xchg
xor
loopne
rcr
mov
rcrl
xchg
imul
es
pop
xor
lret
sub
xor
jp
push
ja
pusha
adc
sub
and
mov
push
lret
adcl
xchg
xchg
fldenv
fldenv
sti
mov
out
jae
sar
lret
dec
and
xchg
sub
mov
imul
dec
clc
dec
fiadds
add
repnz
movsb
jle
mov
or
outsb
add
cmc
add
add
loope
lret
sbb
idivl
negl
in
add
sub
mov
mov
inc
fdivs
adc
mov
es
push
fdivrl
imull
jmp
sbb
gs
sbbb
fwait
pushf
dec
mov
test
data16
insl
arpl
je
insl
mov
fwait
popf
mov
and
push
in
mov
inc
xchg
sti
pop
xor
push
and
xchg
pop
gs
popf
sbb
inc
test
cmp
and
scas
int3
mov
jl
fst
pushf
insl
adcl
jecxz
xchg
sar
test
rclb
lock
mov
popa
mov
fidivs
lock
jecxz
and
nop
fisubrs
imul
jge
iret
stc
inc
in
decl
add
add
jmp
sub
cmp
mov
pop
outsl
add
cmc
add
add
sti
stc
adc
pushf
jns
stos
jmp
mov
or
repz
cmpb
enter
xlat
lret
sahf
mov
cmp
leave
iret
jne
rclb
lcall
cmp
inc
jo
repz
mov
adc
test
mov
mov
dec
pop
in
dec
sub
bound
mov
daa
scas
xor
scas
dec
cmp
iret
jmp
push
popl
jp
lods
shl
and
pop
ja
enter
jge
or
pop
xchg
cmpsb
or
call
inc
or
into
test
lcall
std
or
inc
xchg
pop
mov
cmc
xchg
movsb
loope
lret
xor
dec
dec
jb
inc
bound
inc
push
cmp
push
adc
mov
mov
cltd
out
lret
pushf
sti
dec
and
lds
lcall
xchg
mov
push
roll
add
shll
fnstenv
insl
dec
test
add
add
add
xchg
jo
dec
push
pusha
mov
int3
in
sub
subb
dec
xchg
add
pop
jo
mov
cmp
pop
push
dec
divl
jae
iret
inc
cs
stos
xor
jecxz
pop
test
add
iret
jl
in
jge
add
push
scas
push
data16
xchg
jno
arpl
jmp
mov
fwait
int
add
pop
jl
pop
and
mov
and
lods
movl
test
mov
ret
inc
jae
fbstp
xchg
jl
pushf
test
lcall
sarb
aad
push
ss
cli
jecxz
nop
loopne
lret
mov
pop
inc
cmpsb
push
or
push
call
cmpsb
sub
jb
sub
jg
outsb
fimuls
add
inc
push
push
jns
xchg
push
and
sub
roll
dec
jp
mov
push
cltd
loopne
push
add
add
cld
je
jbe
jmp
lea
xchg
xchg
pop
xor
cmc
add
add
xchg
pop
mov
jl
mov
shll
pop
cs
lea
xchg
fcomps
mov
imulb
inc
push
push
idiv
cli
or
pop
or
xchg
ds
mov
js
add
dec
stos
out
sbb
xlat
sbb
out
dec
jecxz
rcrb
xchg
fists
rolb
mov
sahf
xor
sbb
xchg
sub
loope
adc
out
push
push
pop
ret
stos
pop
push
mov
ret
popf
sbb
rcrb
cs
movsl
lret
dec
inc
push
hlt
jp
test
popa
dec
xchg
sbb
gs
push
pop
dec
mov
and
xor
or
and
mov
lahf
fisubs
arpl
fistl
sbb
and
push
jp
aaa
lods
lea
jge
xchg
fistpl
jb
cmp
call
fcompl
add
push
cltd
jmp
fcmovnbe
cld
xor
sub
jb
add
add
add
mov
fldt
push
mov
iret
add
pusha
frstor
cmp
gs
push
enter
ss
mov
sbb
aas
jae
outsl
insl
sbb
les
jbe
inc
jecxz
cld
les
aad
sub
add
sub
aam
incl
repnz
loop
imul
imul
push
lds
rcrb
cli
xchg
xchg
je
aam
pop
cwtl
adcl
movsb
adc
inc
cmp
repnz
shrl
pop
idiv
mov
ljmp
push
repz
testb
adc
repnz
and
fxtract
lahf
stos
pop
cmp
add
xlat
dec
jbe
das
test
or
and
push
mov
adc
imul
scas
fsubrs
pop
sub
pop
xchg
arpl
cmp
xlat
daa
insb
sbb
icebp
rclb
add
add
push
jg
pop
jne
ja
fwait
shll
add
cmc
add
add
icebp
pop
pop
inc
cmpsb
inc
cmp
testl
dec
add
mov
inc
clc
mov
push
cld
or
pop
cmp
aas
aad
sub
subb
test
mov
sbb
fnsave
mov
jle
test
pop
mov
loopne
and
push
adc
icebp
sti
adc
popa
or
xchg
andl
xor
cwtl
imul
lds
mov
cltd
push
xchg
shlb
scas
movsl
dec
andb
mov
lods
outsl
adc
sbb
add
lea
in
arpl
lock
inc
and
lods
lods
out
and
cmp
repz
enter
mov
orb
clc
add
iret
mov
sub
jl
mov
sub
popa
cmpsl
enter
xchg
add
add
mov
fucomip
addr16
add
cmc
add
add
movsb
insb
mov
dec
pop
mov
rorl
lret
fimull
cmc
repnz
xchg
lods
stos
fdivrp
mov
cmc
jbe
xor
add
in
mov
iret
mov
add
insb
test
loop
jae
lahf
add
sub
outsl
mov
jle
leave
jp
adc
popf
mov
mov
fdivl
or
xor
sub
movsb
ficompl
push
mov
dec
call
dec
les
jg
lcall
int
mov
fldenv
push
leave
inc
push
idivb
sub
negl
adc
sar
stc
pop
inc
call
cmp
jecxz
fwait
adc
add
aad
pop
rcrl
fists
out
mov
out
inc
cmp
xor
cmp
fs
aad
outsb
iret
push
add
add
dec
out
iret
jmp
cmpsb
addr16
jo
dec
sbb
add
add
add
mov
leave
inc
ror
mov
ret
in
dec
push
stc
lahf
adc
mov
cs
jnp
aas
jmp
adc
daa
pop
popa
add
add
mov
mov
ja
icebp
sbb
in
push
int
lock
cmp
into
sbbb
divb
push
adc
and
push
push
jmp
xchg
xchg
sub
fimuls
jl
xchg
pusha
mov
sub
aad
mov
addr16
xchg
pop
scas
pop
icebp
push
cmpb
in
dec
outsl
fucomip
enter
outsl
test
pop
dec
mov
dec
or
mov
inc
scas
sbb
leave
mov
lret
jns
push
sub
pop
pop
test
cltd
inc
repz
xchg
test
push
push
or
xchg
push
and
fstl
js
xchg
sbb
inc
jb
mov
add
add
std
cmpsb
pop
lods
jne
xchg
shll
or
jbe
add
add
add
ja
mov
dec
jb
jbe
lock
add
cmc
push
cmp
int3
sbb
pop
or
in
cmp
pop
icebp
mov
pusha
pop
add
add
xchg
sub
dec
lea
xchg
jecxz
in
inc
cmpsl
aas
cmp
pop
insl
jo
loopne
cmp
ret
stc
add
and
lcall
aas
push
inc
loope
or
out
in
push
inc
out
jae
dec
mov
int3
push
fcompl
scas
jno
imul
jns
shr
jecxz
repnz
icebp
pushf
push
add
jbe
jae
inc
iret
push
popf
mov
faddl
mov
lcall
add
add
in
movsl
push
xchg
es
and
dec
pop
ds
sahf
jnp
pop
and
sarl
or
push
xchg
aad
notb
fwait
int
lods
fsubs
cmp
add
in
lods
imul
neg
std
stc
idivl
pop
add
add
cmc
add
add
in
mov
or
pop
adc
sub
shl
mov
push
xor
andl
mov
jecxz
inc
ja
insb
orl
mov
or
imul
gs
and
and
js
fdivrp
cmp
sbb
mov
mov
pop
add
mov
stos
mov
aad
test
xor
push
cmp
cmpsb
cli
add
add
mov
adcl
lods
test
xor
and
rorb
cmpsb
lds
das
test
or
mov
cld
pop
fidivrl
cli
lods
jg
fnstsw
lcall
sbb
rcrb
dec
int
in
pop
jmp
cmp
daa
sbb
pop
dec
inc
stc
aas
pop
jecxz
imul
aam
mov
cmp
adc
and
cld
add
add
cs
mov
jne
stc
ja
add
add
add
cltd
xor
or
in
fcoml
pop
ljmp
lods
loope
inc
xchg
cld
icebp
shll
sar
push
outsb
push
jo
mov
fmuls
pop
push
roll
mov
xchg
or
clc
xor
add
enter
and
imulb
cmp
xchg
subb
jge
dec
fwait
mov
jne
jecxz
inc
popa
icebp
sbb
xchg
or
push
add
sbb
xchg
inc
mov
es
or
jp
sarb
pusha
lret
mov
into
dec
ret
repnz
push
call
daa
out
lds
scas
sbb
pusha
arpl
ja
jg
mov
lcall
nop
insl
push
sti
popf
xlat
xor
pop
clc
flds
cld
push
push
cmpsb
clc
mov
pop
jge
cmp
adc
inc
fcomi
fistpl
out
rclb
add
ja
out
dec
jg
aad
cs
lcall
add
pop
lret
pop
mov
nop
rorb
lret
push
push
xor
lea
scas
mov
shlb
adc
or
das
stc
shrl
pushf
mov
loop
repz
fisubrs
aaa
dec
int
jo
mov
jbe
xchg
lds
add
inc
xchg
pop
lock
push
sub
jg
add
arpl
enter
add
dec
cli
add
rclb
daa
inc
data16
push
push
lock
xlat
std
mov
push
ja
dec
sbb
out
test
mov
pop
mov
outsb
xlat
inc
mov
push
andb
std
sub
lods
outsl
mov
rcrl
arpl
cmp
stos
fisttpl
dec
sbbb
imul
or
xlat
pop
stos
cmpsl
sub
pop
pop
ss
jecxz
cmpsl
cmp
add
daa
sub
ja
mov
paddq
or
jecxz
add
cmc
add
add
jnp
test
scas
push
cmp
sub
loop
or
mov
and
sahf
call
or
loopne
dec
cmp
cltd
pop
out
pop
or
cmp
lret
inc
push
cli
shlb
cmpsl
jmp
add
fcom
dec
cld
xchg
cmpsb
je
jle
dec
or
add
dec
jnp
cmovns
dec
out
pop
pop
add
test
inc
das
pushf
pop
rolb
and
push
lods
or
es
repz
rorl
inc
dec
jle
ljmp
mov
or
push
push
dec
dec
mov
nop
into
in
cmp
jg
lcall
push
dec
sbb
sahf
dec
fsubrl
and
mov
bswap
pop
inc
xchg
fwait
add
or
inc
or
mov
add
cmp
jnp
jge
xchg
inc
ja
xor
jp
add
add
add
scas
or
lods
idiv
add
insb
pop
int3
pushf
jle
adc
dec
mov
das
cli
inc
movsb
sub
std
dec
adc
pushf
out
aam
or
les
stc
dec
mul
or
aas
in
adcl
gs
lods
arpl
aad
cmp
icebp
add
pop
outsb
icebp
mov
jo
or
lret
add
jle
pop
in
outsb
mov
mov
xorb
pop
mov
lods
mov
out
je
cmpl
pop
add
fs
pop
and
add
into
ds
pop
mov
repz
and
push
jp
push
ficoms
aam
push
dec
jns
jne
push
or
movsb
sub
pushf
stos
jb
mov
inc
cmp
jae
adc
push
sbb
test
cmp
pop
scas
pop
test
ds
add
add
cli
xchg
jle
mov
mov
jnp
add
add
add
mull
xchg
pusha
rcrb
sbb
dec
mov
xchg
popa
mov
cmp
mov
test
push
leave
mov
shl
sti
negb
mov
pop
sub
cmp
mov
xchg
aam
jmp
addr16
xchg
push
xchg
in
outsb
mov
pusha
lahf
mov
cli
and
jae
addr16
jae
aas
in
subl
pop
pop
cs
pop
aaa
sub
outsb
fmuls
popf
push
out
add
out
inc
xor
ret
ret
cld
popf
sbb
pop
hlt
nop
sbb
hlt
mov
rcrl
mov
inc
mov
subl
lea
or
mov
in
cmp
pop
icebp
push
arpl
ret
and
and
pop
inc
cs
add
add
fwait
jnp
aad
gs
into
add
idivl
add
add
add
cmpsl
fwait
push
cli
or
adcb
mov
jp
sbb
xchg
sub
mov
subb
inc
lock
or
or
mov
pop
dec
jbe
sub
xor
and
int
push
outsb
push
mov
xchg
out
outsl
nop
jecxz
outsl
pop
add
lock
sbb
insb
repnz
and
push
mov
pop
push
xor
push
outsl
mov
push
push
cld
rolb
aad
push
mov
dec
inc
add
hlt
out
push
jmp
ret
xchg
loop
repz
sbb
mov
in
pop
fdivr
lock
sub
xorl
mov
fs
or
dec
outsl
dec
lock
adc
push
in
bound
cld
mov
pop
or
adc
fisubs
hlt
sub
mov
mov
icebp
push
and
add
ror
aas
xchg
and
leave
add
add
std
mov
enter
push
mov
add
cmc
add
add
cmpsl
adc
iret
movsb
mov
pop
jns
mov
add
imul
popf
adc
clc
sbb
and
or
cwtl
rep
jns
fldt
imul
fs
xor
mov
sbb
add
mov
jmp
push
in
roll
repnz
stos
outsb
mov
mov
dec
lahf
fsubs
cmp
je
and
mov
outsb
pop
pop
or
sub
je
dec
adc
xchg
lret
stc
add
outsl
and
int3
negb
inc
arpl
jno
dec
push
adc
mov
call
adc
and
leave
scas
icebp
pop
adc
mov
call
pop
pop
leave
jl
inc
jl
ljmp
mov
loope
mov
sbb
orl
adcl
xchg
ffreep
dec
imul
jbe
icebp
lods
jle
add
add
add
js
jmp
out
sub
dec
xchg
xor
xchg
in
iret
mov
mov
sarb
jle
cli
sbb
and
pop
ss
mov
mov
push
movb
push
cmp
jno
push
outsb
fwait
adc
dec
sbb
xchg
sub
and
out
ja
cmpsl
inc
in
arpl
inc
cmpsl
sbb
pop
test
mov
push
cli
fmull
aam
pop
jl
jnp
pop
sti
idivl
idivb
mov
xchg
dec
push
test
lods
mov
fistpl
xchg
js
ret
int3
ficomps
int3
imul
testb
push
jae
into
cli
mov
cmpsl
fisubrl
pusha
jne
sbb
fs
pop
int3
xchg
enter
mov
xchg
int3
push
xchg
add
add
bound
in
pop
test
jnp
add
jg
add
add
add
jne
insb
inc
andb
mov
outsl
add
repnz
bound
fwait
ds
push
add
cwtl
leave
stc
popa
into
jns
sarb
clc
orl
mov
xor
ja
mov
mov
inc
adc
hlt
test
push
sahf
pusha
mov
mov
mov
iret
cli
lock
cmp
movsb
cmpxchg
mov
sbb
lcall
outsl
movl
jmp
jecxz
xchg
cld
or
sbb
jne
popa
shl
loope,pn
mov
inc
xchg
pop
sbb
sub
rcrl
loope
jo
adc
xchg
jb
jge
xor
lret
insl
push
inc
jb
add
add
xor
push
or
pop
dec
int3
cmc
xchg
xor
sub
insl
xchg
sbb
loope
push
xor
rclb
divb
or
jecxz
popa
pop
add
add
divl
bound
aam
xchg
addb
cmc
add
add
roll
sti
sbb
scas
insl
fstpl
arpl
incb
jge
aas
mov
mov
pop
decb
cmp
mov
rclb
cs
cmp
inc
movsl
mov
shlb
push
jg
inc
lods
insl
fbstp
xchg
mov
pop
and
pop
xchg
cmp
sti
mov
mov
stos
cmp
roll
xchg
filds
jmp
ds
adc
push
mov
call
and
mov
cmc
pop
jmp
fs
dec
cmp
fucomi
rolb
and
mov
mov
mov
mov
rorb
fs
bound
or
or
lret
mov
mov
insb
adc
loop
sbb
rorl
xor
mov
add
clc
fisubs
mov
push
mov
dec
stc
mov
add
mov
not
imul
adc
lods
inc
xor
jmp
fistpll
mov
enter
or
push
jge
nop
rcrl
ja
sub
mov
jnp
add
int
mov
int
sbb
js
ja
adc
movsl
push
mov
push
les
jo
adc
push
xlat
mov
or
arpl
mov
pop
and
sbb
push
push
movsb
lock
sbb
and
inc
arpl
add
loopne
mov
jae
inc
arpl
divb
add
jne
cmp
cmp
cwtl
xor
imul
cltd
cmc
pop
inc
push
outsl
adcb
add
cwtl
mov
loopne
inc
int3
leave
inc
xchg
xchg
xor
pushf
add
je
or
adc
ret
jmp
outsb
mov
ljmp
loope
sbb
mov
add
cmpsl
cmp
add
shlb
mov
pop
mov
add
cmc
add
add
sub
sbb
cmp
gs
rorb
cwtl
into
push
aad
sbbl
inc
mov
inc
push
ja
adc
inc
test
mov
int
push
in
out
pop
sub
jle
cwtl
sbbl
push
aam
jmp
dec
jge
pop
int
mulb
popf
daa
rolb
pop
aas
push
in
pop
stos
sbb
out
ret
jl
je
sbb
scas
dec
xchg
decb
sub
lods
stos
lods
mov
mov
lret
or
xchg
loop
dec
rcrl
enter
push
jmp
mov
mov
aad
imul
bound
call
inc
mull
dec
ret
mov
sbb
iret
in
cmpl
aas
mov
xchg
add
add
testl
popa
jne
add
cmc
add
add
cmc
pop
xchg
lret
repnz
jns
adc
das
dec
out
addb
xchg
jae
repz
fs
mov
sub
cvtps2pd
sub
adc
stos
jne
add
mov
and
mov
call
mov
sar
jnp
ret
push
cmpsb
pop
arpl
cmp
icebp
adc
aad
mov
dec
mov
mov
lock
mov
imul
ficoml
mov
imul
loope
mov
popa
mov
emms
push
sub
xlat
std
pop
pop
xor
mov
and
jge
and
sub
stos
sahf
mov
and
iret
aas
std
sub
in
sub
add
lock
aaa
inc
mov
repz
mov
test
mov
sahf
inc
cmp
or
dec
ss
popa
pop
divb
sub
xchg
mov
loopne
fldl
add
xor
jo
ja
std
stos
lods
and
ffree
mov
add
cmc
add
add
rorb
popf
mov
pop
into
js
mov
xchg
cmpsb
je
inc
xlat
pop
stos
icebp
scas
fnsave
ss
fcomp
jae
rcll
fwait
shll
cmp
push
and
push
clc
fwait
sahf
mov
jnp
xorl
mov
mov
cmpsb
stos
cwtl
and
incb
xchg
in
mov
mov
repnz
pusha
adc
lods
fildl
dec
rcrl
inc
mov
pop
mov
in
or
sti
dec
xchg
loopne
mov
adc
inc
repz
sub
std
xchg
xchg
pop
add
jle
xor
out
call
push
lds
xlat
inc
popa
or
cmpb
mov
std
in
and
or
lcall
subb
lcall
iret
test
inc
outsb
or
inc
cwtl
and
add
add
cmpsb
arpl
je
jb
cmp
add
cmc
add
add
adc
fsts
jmp
rcll
mov
shrl
push
push
pushf
arpl
jp
xchg
push
xchg
push
lahf
insl
push
aas
jo
aad
stos
cmc
rclb
pop
scas
jle
movb
jge
hlt
stos
rcll
clc
repz
imul
lods
loopne
xor
mov
jnp
and
push
xchg
sbb
ja
aas
adc
dec
arpl
or
stc
jle
ret
jb
jne
push
jmp
mov
lret
xlat
jnp
arpl
and
jne
xchg
scas
int
xchg
adc
cli
fidivrs
ljmp
aaa
in
mov
or
jl
cmp
push
or
movsl
movsb
mov
cmp
pop
sbb
mov
lea
sub
pushf
or
add
add
cmp
cli
mov
notl
pop
push
xchg
add
add
add
fildl
andl
xchg
pop
push
or
mov
and
sbb
aam
popf
inc
push
or
lock
add
sbb
push
imul
fincstp
dec
push
ret
imul
xor
lcall
mov
push
fs
fisttpll
sub
xor
mov
fisubs
inc
aam
dec
jmp
pop
fbstp
push
out
pop
in
imul
mov
add
push
dec
ret
call
sub
lcall
dec
and
mov
clc
sbb
hlt
addr16
xor
jbe
add
inc
pop
or
pop
jbe
mov
icebp
cmp
or
insl
push
fcompl
jle
add
cmp
push
repz
mov
sbb
aad
andl
add
std
test
ljmp
xchg
sub
xchg
add
add
add
repz
jbe
rcr
es
fs
mov
or
mov
push
jo
and
lods
inc
mov
or
lock
iret
js
or
mov
cli
or
or
lea
inc
sti
rorl
mov
js
sbbl
mov
and
adc
push
mov
sub
mov
enter
jecxz
inc
subl
mov
xchg
adc
test
xchg
sub
adc
mov
mov
sbb
les
lds
inc
aas
in
es
mov
shlb
out
cmp
data16
mov
leave
test
mov
pop
test
fdivp
rcrl
filds
jl
and
clc
sub
pop
push
es
push
loopne
sbb
inc
lea
push
sarb
mov
lods
jle
add
add
xchg
xchg
jns
incl
out
mov
add
add
add
push
clc
push
xchg
and
cmp
push
mov
mov
adc
and
jns
stos
divl
vmread
adc
fmul
dec
sahf
lcall
in
dec
test
ret
add
rclb
ja
rorb
jecxz
mov
sbb
shrl
iret
push
mov
in
cmp
mov
jae
mov
cli
adc
mov
sbb
rcr
mov
test
and
push
stc
jecxz
ja
in
xchg
sub
pop
cmpl
outsb
cltd
hlt
mov
jmp
fucomi
mov
xchg
push
mov
popf
or
sub
dec
fidivl
sahf
lds
inc
popl
stos
std
addr16
dec
es
push
or
imul
mov
jne
imul
xchg
jbe
add
hlt
scas
scas
lcall
xchg
dec
lea
xor
add
sub
jnp
mov
stc
mov
lret
and
std
lods
in
cmp
and
xchg
dec
pop
mov
add
jb
xor
add
frstor
mov
movsl
sbbb
js
and
movsb
jb
cmp
jl
adcb
dec
inc
shl
out
mov
shr
adc
jge
jl
jo
lcall
xchg
jb
stos
iret
xchg
xchg
jle
pushf
pop
frstor
xchg
aaa
jns
push
jg
lods
scas
jl
mov
xchg
cmp
push
xor
nop
or
jno
cmc
shll
lods
lods
and
lahf
test
je,pn
push
mov
rclb
mov
jae
sar
leave
or
in
jp
ljmp
mov
imul
push
xchg
jmp
inc
fiaddl
arpl
jo
mov
dec
inc
jo
add
jl
cs
idiv
fst
inc
sahf
pop
sarb
add
add
add
inc
push
out
jg
push
dec
sub
cli
arpl
adc
aam
popf
fstps
push
jo
inc
cmpsl
mov
sbb
aam
xchg
pop
jno
les
shll
jne
repz
pop
testl
or
and
mov
lea
clc
sbb
inc
mov
mov
jecxz
jge
mov
enter
loope
push
sub
pop
lret
test
movsl
cmp
xchg
ret
movl
cli
dec
inc
pop
ds
mov
mov
cmp
push
imul
rclb
jg
or
or
pop
inc
and
cmp
add
push
push
ror
cmp
sbb
outsl
jbe
sub
sahf
push
clc
pop
lret
sbb
popf
jns
or
sarl
daa
pop
ffreep
stc
jge
es
add
xchg
call
and
and
dec
or
add
add
insl
xchg
and
xlat
cmp
test
mov
push
sub
xor
and
and
in
lret
pop
cmp
gs
shrl
jno
inc
in
or
sub
adc
call
mov
mov
insb
aad
ja
dec
jmp
mov
outsl
repnz
push
mov
jb
sbb
cmp
int3
addl
xchg
mov
scas
xchg
and
jne
rolb
fdivl
fldpi
jecxz
adc
or
ret
push
ss
or
lods
jae
sub
fbstp
lret
stos
jp
sbb
sub
out
adc
mov
xor
loope
lods
mov
add
sbb
pusha
push
inc
jle
cmp
sbb
adc
stos
fadds
pop
mov
mov
inc
loope
xchg
xchg
sti
and
pop
pop
adc
add
add
sti
iret
and
repnz
add
adc
add
and
lods
xchg
ret
lcall
add
sbb
pop
pop
gs
popa
fbstp
lock
fstps
add
mov
call
sub
add
cwtl
adc
jl
xchg
xor
mov
inc
jbe
lahf
cli
dec
cmpsb
ficoml
jmp
add
stc
sbb
xchg
mov
jae
enter
sbb
push
or
out
hlt
subb
out
mov
xor
and
pop
pop
mov
roll
push
and
mov
repnz
mov
mov
movsb
cmp
inc
rcl
movsb
into
jle
movsb
ret
jae
mov
or
xor
repz
faddl
cmpsb
inc
in
xor
clc
pusha
jecxz
sbb
ss
add
sub
mov
add
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
mov
pop
sub
lea
add
add
add
sub
idiv
mov
lret
mov
and
dec
mov
inc
hlt
dec
lcall
out
push
cmp
mov
pop
fcom
jb
xchg
cmp
repz
std
cmp
iret
repz
sbb
mov
mov
sbb
movsl
cmpsl
cwtl
dec
push
pop
mov
aad
lret
sub
or
lods
sbb
adc
int3
or
mov
in
lret
sarb
adc
in
sti
scas
std
ds
inc
sbb
mov
cmp
inc
popf
mov
arpl
es
hlt
fsubs
mov
jne
nop
sbb
les
jge
jns
addl
les
mov
cmp
lret
add
lret
pop
and
movsl
pop
add
aaa
dec
pop
iret
add
roll
test
mov
mov
add
add
mov
into
jno
popf
repz
lea
add
add
add
mov
sub
testb
outsl
addr16
pop
movsb
xchg
pushf
jle
cmc
xchg
shlb
xor
aad
out
and
jl
imul
cmc
xchg
repz
cltd
mov
mov
sub
cmp
fisubrl
outsb
jbe
sti
xorl
inc
imull
pusha
xchg
jae
xchg
inc
mov
lret
push
lods
adc
mov
sub
mov
cmp
push
lret
jae
out
push
mov
inc
cld
cmpsl
sub
adc
pop
adcl
in
xchg
mov
and
popf
push
aas
and
pop
cmp
mov
fprem
mov
mov
test
aam
lods
sbb
adc
mov
xorl
sub
jns
sbb
sti
mov
add
xchg
enter
stc
push
mov
andb
inc
jo
cld
add
add
pop
test
ljmp
jp
cmp
add
cmc
mov
cmc
add
add
fxtract
and
adc
vandnps
sbb
in
sbb
mov
xchg
or
mov
cmp
and
pop
stc
pop
nop
xchg
jne
pop
sbb
push
jp
or
pusha
xlat
push
or
and
andl
sub
cwtl
cmp
push
scas
and
ror
in
mov
push
inc
xlat
stos
lahf
xor
jne
gs
push
pushf
mov
shrl
ret
les
cmp
adc
mov
andb
jne
bound
mov
or
es
push
mov
fldl
mov
cltd
aad
mov
mov
fs
rolb
ljmp
pop
outsb
pop
adc
lods
std
push
adcb
xor
jae
inc
subl
nop
push
pushf
mov
lret
push
add
add
arpl
jnp
sbb
xchg
sub
fsubrs
out
add
cmc
add
add
imul
add
mov
je
je
lcall
les
fisttpll
sahf
out
fsubl
outsl
mov
xor
out
lods
cs
cld
lods
jle
rcll
add
or
xor
dec
push
push
or
dec
arpl
mov
call
pop
orl
fbld
mov
mov
sbb
ror
outsb
add
dec
mov
sbb
ret
out
dec
hlt
pushf
lret
sbb
mov
sub
repz
jne
test
add
inc
mov
and
cmp
or
js
xchg
xchg
lahf
adcl
cmpsl
mov
in
add
lods
xchg
inc
jp
mov
xor
push
add
test
addr16
cwtl
int
or
and
add
push
aas
or
mov
shlb
add
cmc
add
add
arpl
xor
jnp
mov
dec
jecxz
dec
and
adc
cmp
sti
add
add
xchg
mov
mov
xchg
inc
push
sbb
sti
mov
or
pop
test
int
outsb
inc
pop
jb
inc
jo
mov
sbb
das
mov
addl
and
push
pop
aas
fcmovb
dec
testl
cmp
xchg
out
test
test
les
orl
js
fisttpll
mov
gs
stos
clc
fldenv
adc
mov
add
add
xchg
add
lds
lahf
push
andl
les
jbe,pn
rol
jbe
lcall
mov
pop
mov
and
cmpsb
jle
mov
sub
cmp
or
nop
arpl
pop
pop
es
sbb
push
add
add
push
outsb
fdivrp
sub
lcall
add
cmc
add
add
pusha
dec
sti
arpl
lock
xchg
inc
xchg
push
lcall
adcl
aaa
jnp
test
out
insb
fcmovbe
mov
fidivs
lret
adc
dec
sti
cltd
leave
jg
sbb
and
mov
es
jnp
cli
mov
dec
push
cmp
jb
dec
add
imul
pop
addl
cs
or
outsl
pop
jbe
pop
inc
mov
ret
xor
fists
notl
cmp
fldl
push
sbb
inc
dec
inc
inc
orb
jmp
insl
mov
xor
fsub
mov
adc
cmp
adc
jmp
inc
mov
or
push
sub
and
pop
and
xchg
add
test
adc
adc
in
daa
dec
mov
add
cmp
mov
in
sbb
sbb
cmc
add
add
in
mov
shlb
out
and
sbb
inc
xchg
test
pop
iret
aas
int3
mov
jge
sub
xchg
rcrw
xchg
adc
aaa
push
lds
fsubrl
inc
xor
addr16
xor
pop
bound
pop
int3
mov
int
scas
mov
xchg
out
sysexit
mov
inc
leave
scas
mov
outsl
fistpl
dec
and
sub
in
mov
rorb
mov
cmpsb
xor
nop
movsb
xchg
add
mov
dec
dec
mov
rcll
xchg
aaa
sbb
lods
outsb
dec
mov
or
and
and
cmp
sarb
jmp
push
das
jbe
push
imul
js
dec
cmpsl
out
int3
adc
sar
and
dec
popa
pop
push
dec
pop
dec
jge
pop
aaa
mul
sub
jne
add
add
add
int
fstp
iret
push
lock
jmp
adc
add
add
add
inc
push
lods
shll
rcrb
std
mov
mov
insb
dec
push
push
fsts
inc
sbb
std
add
or
dec
stos
push
jns
pop
pop
push
ja
mov
outsl
mov
bound
jns
xlat
iret
and
inc
cltd
mov
loopne
fildll
xchg
rcl
fcmovnb
jb
inc
mov
out
bound
movsl
sub
mov
sbb
jno
xchg
xchg
inc
pop
and
mov
cmpsl
je
lea
popf
jnp
add
lea
hlt
insb
pop
mov
insl
jo
jg
jo
push
into
hlt
sub
test
cmp
testb
inc
dec
stos
lock
mov
xchg
bound
insb
jbe
fs
sbb
cltd
mov
cmc
cmp
ret
mov
xchg
fwait
and
test
mov
leave
jge
mov
cmpb
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
mov
mov
mov
mov
jae
xchg
push
rorb
in
outsl
call
mov
mov
addr16
inc
popa
popa
cmpsb
inc
cmp
leave
adc
push
push
ljmp
stc
negb
cmp
xchg
test
dec
rcrb
dec
cmp
jb
shrl
xchg
jge
hlt
test
jbe
mov
jmp
popa
das
xchg
movsb
xor
fldt
enter
hlt
dec
xor
imul
sub
jmp
jl
push
stos
xchg
xchg
decl
xor
mov
pop
or
movaps
jl
jl
and
mov
fwait
pop
mov
ror
lods
mov
jae
mov
pop
les
mov
mov
repz
push
jl
into
xchg
adc
push
mov
add
add
mov
push
xchg
dec
ja
xchg
add
cmc
add
add
lods
ret
inc
pop
aas
inc
inc
cs
cs
or
xlat
mov
pop
bound
movsl
pop
mov
pop
cmp
pavgw
test
sbb
cltd
xchg
fsubs
sub
mov
fidivrl
sub
or
xor
xchg
sbb
repnz
fistps
xlat
sti
imul
adc
jns
add
mov
sbb
dec
xor
insl
in
jnp
popl
push
xor
pop
movl
mov
ja
dec
xor
mov
cmp
push
or
jae
xor
lret
in
or
mov
daa
lods
pop
daa
mov
sub
xor
or
or
push
push
add
adc
cmp
repz
mov
punpckhdq
lds
pop
insb
pop
aas
test
sub
mov
ret
aad
js
add
inc
or
test
mov
mov
xchg
add
cmc
add
add
push
adc
xor
fcmovnbe
and
out
call
push
mov
dec
push
lea
mov
negb
jno
xor
or
pop
add
sub
mov
and
es
xchg
jle
lods
mov
xchg
sbb
jno
repnz
mov
and
or
add
xchg
idivb
enter
pop
or
mov
repz
decl
mov
push
adc
sbb
lods
popf
call
cld
test
mov
sub
pop
dec
add
lock
mov
rcr
fiaddl
call
mov
sub
xor
in
xor
adc
test
inc
daa
notb
inc
inc
adc
fistpl
xor
repnz
loope
nop
mov
mov
add
ljmp
loop
dec
pop
adc
xchg
add
cmc
add
add
stc
push
decl
jp
in
rcrb
outsl
add
mov
push
add
push
sbb
sub
mov
out
cmp
mov
ret
mov
ss
aas
mov
cmpb
dec
add
decl
xor
sbb
ret
dec
sub
mov
jne
mov
xchg
ss
and
or
and
pushf
mov
sub
decb
add
std
pusha
push
mov
repz
xor
stc
inc
dec
iret
mov
lods
lret
cmp
gs
loopne
mov
call
outsl
push
dec
test
subb
cmp
sti
cwtl
mov
repnz
int3
lahf
and
pop
jb
lea
xchg
sub
push
fsubrl
xchg
dec
shrl
add
xchg
or
mov
aaa
push
add
add
aaa
shlb
cmc
div
rcl
inc
pop
lods
nop
sub
sbbl
add
movsl
icebp
cmp
cmp
adc
out
xor
adc
ret
jge
fisubs
iret
dec
lret
jo
pop
lea
ffree
sub
or
mov
pop
xor
dec
call
mov
mov
mov
xchg
push
aam
data16
mov
outsb
or
inc
jl
pop
xchg
mov
cmp
clc
mov
xor
xchg
xor
sbb
xor
or
popa
cmp
xchg
pop
mov
in
sub
pop
push
pop
xor
cmp
lods
and
push
xchg
je
stos
jge
fistpll
push
mov
cmp
mov
dec
inc
enter
lods
dec
int3
je
mov
outsl
jl
add
xchg
cmp
jae
mov
push
rcl
outsb
push
adcl
rorb
shll
push
mov
mov
add
pop
push
nop
push
sahf
rcr
pop
test
jno
cltd
add
cmc
add
add
pop
dec
movsl
ds
mov
scas
mov
xchg
jecxz
mov
shr
mov
cmc
popf
and
cmp
jne
push
mov
add
jle
scas
fcoml
mov
outsb
test
mov
loope
mov
frstor
and
pop
xor
pop
imul
sub
xchg
ljmp
mov
jbe
xor
stos
ror
cmc
jno
popf
jl
xchg
cmc
nop
subl
mov
sub
rorl
icebp
lods
inc
cmp
out
je
xor
out
mov
in
mov
aaa
dec
and
sbb
imul
adc
cmpsl
push
sub
dec
or
fwait
cmpsb
fsub
and
imul
mov
bound
outsl
loop
push
add
add
add
arpl
cmpsb
jcxz
jne
push
inc
push
cltd
dec
lcall
xor
ret
sbb
hlt
push
dec
jecxz
pop
idivb
insb
sub
dec
xor
repnz
adc
dec
jle
in
loop
xchg
sbb
mov
pop
popf
fimull
pop
jo
jns
cmp
scas
sub
in
sub
xchg
arpl
sbb
ds
jbe
push
ja
mov
sub
cltd
outsl
int
divl
jae
jnp
jae
mov
mov
nop
xchg
push
daa
lret
lea
and
inc
rcll
ds
xchg
mov
jo
repnz
mull
xchg
scas
fmull
xchg
add
xor
xchg
push
push
jp
outsl
push
stos
cmpl
push
mov
fstl
add
sahf
jge
fs
lock
jb
sbb
fstps
hlt
xchg
mov
push
add
ret
aad
sbb
push
add
add
clc
jnp
jg
in
cli
cwtl
inc
mov
dec
adc
add
cmc
add
add
pop
cli
xchg
inc
cmp
or
push
add
push
and
pushf
gs
setl
data16
pop
jo
cmp
imul
mov
inc
xchg
xor
out
sbb
cld
mov
loop
and
cmp
int
add
xchg
stc
mov
lock
jmp
sub
jmp
adc
pop
jno
xlat
aam
insb
add
scas
arpl
xor
subb
dec
inc
adc
jbe
in
lock
in
loop
and
adc
mov
and
push
add
divb
pop
jno
inc
sub
mov
sub
fdivrl
mov
popa
sub
or
stos
xchg
out
xorb
mov
cmc
sbb
rorl
aas
fdivrl
push
mov
sub
dec
ds
mov
jbe
icebp
sarb
nop
or
add
add
lods
faddl
fbstp
cld
inc
push
cltd
das
scas
sub
push
pushf
add
cmc
add
add
loop
js
pop
push
repz
mov
push
jnp
push
jle
lock
sub
mov
stos
cld
loop
mov
push
call
push
loop
jnp
mov
into
data16
aad
imul
mov
enter
scas
insb
mov
inc
jge
stc
lods
push
cmp
decb
fwait
jne
aad
loopne
xchg
inc
arpl
xlat
inc
pop
imulb
outsl
out
lods
sub
inc
cmp
sub
push
jl
xchg
lret
xchg
or
mov
push
jle
ja
push
lods
sbb
aad
add
add
test
shll
lret
push
aaa
out
push
sbb
mov
push
scas
adc
nop
aaa
bnd
sub
push
mul
filds
mov
fstpl
out
call
lret
pop
lods
es
outsb
mov
xchg
add
add
jl
sar
std
jle
loop
jmp
popf
add
cmc
add
add
xor
mov
jg
dec
jne
add
and
and
iret
dec
push
sbb
fistps
out
adc
add
int
jne
xor
cmc
ficomps
popa
pop
mov
pushf
cmp
or
ds
pop
fs
adc
sub
jge
das
push
mov
sbb
inc
arpl
cmc
push
xchg
mov
inc
push
xor
add
jl
lds
mov
mov
cmp
mov
sub
cmp
mov
mov
shl
mov
iret
ret
xchg
arpl
cmp
int3
int3
add
lods
mov
or
lods
rcrl
shl
stos
xchg
fsts
mov
in
add
outsl
rorb
sub
rcl
mov
xchg
push
cmp
add
mov
inc
jno
ret
push
push
lret
mov
jne
add
add
cwtl
or
stos
xchg
cmp
pop
xchg
inc
jno
sahf
add
cmc
add
add
jmp
sbb
mov
bound
mov
sbb
pop
cmpsb
out
adc
inc
mov
jle
iret
and
fsubrl
jno
pop
mov
jecxz
xorb
jecxz
jge
and
clc
adc
pop
pop
inc
sub
jno,pn
movsb
push
mov
jbe
jo
dec
xor
icebp
mov
mov
sbb
xchg
push
lea
xchg
xchg
dec
stc
cmp
xor
jnp
sahf
lcall
inc
lret
sbb
fbstp
inc
insb
inc
lock
xchg
sbb
sbb
faddl
and
mov
jg
fidivrs
roll
jle
or
nop
idivb
jge
negb
pop
addb
test
dec
cmpsb
add
cltd
push
mov
xchg
push
movsb
xor
loop
push
sub
add
fwait
and
popa
mov
aad
aam
fyl2x
out
ss
add
cmc
add
add
jle
ret
xor
or
push
hlt
mov
xchg
sbb
mov
into
cmp
aam
pop
lds
je
outsb
bound
fucomp
xor
push
test
jle
das
or
pop
movsb
mov
inc
loope
cli
shrl
aad
outsb
pop
or
lcall
in
adc
aad
jmp
dec
fldcw
addr16
mov
fwait
ss
push
cmp
daa
notb
jnp
in
add
fmul
fstl
sbb
dec
adc
int3
push
pop
cmc
mov
cmpl
or
adc
and
mov
loope
orb
lahf
sti
jmp
mov
mov
mov
ja
out
data16
sbb
dec
mov
in
add
fwait
xchg
jmp
sub
and
movsl
in
movsb
push
cltd
or
mov
add
push
and
xlat
aas
jle
ds
sub
add
loopne
pushf
aaa
mov
cld
cmp
lods
and
dec
test
aad
push
ja
fcompl
inc
sbb
sbbl
frstor
cmpsb
das
push
xchg
mov
rclw
imul
loop
in
adc
sub
subb
jg
mov
arpl
lahf
bound
xchg
rol
rclb
nop
inc
xor
push
aas
mov
shr
push
push
push
imul
push
mov
sub
pop
sub
pusha
pop
mov
fwait
mov
mov
jno
mov
adc
adc
or
pop
sbb
adc
in
push
mov
inc
or
add
fisubs
pop
das
xchg
loopne
popf
inc
push
das
xor
lea
pop
inc
hlt
adc
fwait
or
mov
sldt
add
mov
mov
jmp
ljmp
add
cmc
add
add
jg
loop
add
fstpt
in
loop
imulb
jl
rol
pop
lahf
in
mov
mov
movsl
xchg
dec
pop
in
out
movsb
dec
xchg
movsb
cmpsl
sub
out
push
lea
sub
test
push
pop
lahf
bound
add
adc
sub
sub
xlat
xchg
push
adc
mov
shlb
and
pushf
push
mov
iret
outsl
das
jb
mov
in
in
push
sbb
andb
pushf
es
pop
popf
hlt
inc
mov
add
loopne
fstpt
aaa
fcoms
fnsave
xchg
adcb
mov
and
dec
mov
je
mov
mov
and
out
clc
out
mov
inc
dec
jp
xor
cmpsl
jae
dec
inc
ror
xchg
gs
bound
jo
push
bound
add
adc
add
add
lret
sbbl
mov
pop
mov
add
add
pusha
scas
cltd
call
ficomps
xchg
repz
cwtl
inc
mov
outsb
pop
in
and
leave
push
jo
lahf
ret
aaa
popa
mov
mov
adc
xchg
testb
push
ja
and
dec
push
sbb
dec
jge
jno
dec
dec
stos
ds
push
in
loopne
into
or
clc
jp
lcall
enter
inc
fists
adc
lret
sbbb
popa
jne
loope
inc
incb
push
dec
pop
test
outsb
jmp
push
sbb
popf
fidivs
movsl
jbe
xor
mov
les
mov
push
push
subb
dec
jno
jne
pushf
addr16
pop
mov
lret
stos
xchg
mov
xchg
sbb
pop
mov
sub
or
popa
jae
out
lret
push
mov
stos
cs
mov
imul
and
or
testl
add
add
add
pop
fimull
fs
js
mov
out
xor
push
or
add
mov
sti
mov
mov
pop
mov
mov
dec
divb
mov
xchg
push
jge
cmpsb
xchg
xlat
pushf
sti
lret
out
clc
aaa
mov
es
mov
xchg
in
or
cmp
add
mov
xor
pop
and
or
enter
xchg
add
cli
add
sbb
mov
ljmp
jnp
xlat
mov
sbb
jecxz
or
cwtl
fistpl
jmp
sbb
mov
push
das
mov
add
cmp
loope
movsb
rcr
icebp
push
shlb
sahf
jb
xchg
cmpsb
ja
lret
aas
push
cs
fsubl
mov
popf
sub
inc
test
cmp
fnstcw
ja
mov
sahf
add
add
mov
dec
mov
cmp
jmp
add
push
shr
clc
sarb
frstor
pop
aaa
enter
test
stc
roll
int
dec
and
xor
dec
fwait
xchg
add
mov
sbb
inc
sbb
xchg
lds
fnstcw
add
inc
adc
ljmp
cmp
sub
and
je
outsb
adc
in
leave
mov
in
xchg
xchg
lcall
push
and
in
pop
shrl
push
push
fadd
jbe
or
adc
addr16
mov
orb
push
sub
or
xchg
hlt
std
cmpsl
cmp
inc
fst
jo
leave
aam
outsb
mov
clc
jl
out
dec
sub
sti
or
lret
mov
add
cmp
popf
icebp
or
mov
testl
fldl
mov
adc
push
add
add
ja
out
das
mov
aam
push
mov
add
add
add
jbe
outsb
push
pop
xchg
out
movsl
out
pusha
lret
lea
dec
incl
movsb
pop
fisttpl
ss
add
mov
mov
mov
sub
pop
cmp
or
data16
shlb
mov
sub
jae
sbb
outsl
and
jae
pop
mov
imul
inc
shlb
sti
mov
rcrb
ss
ficoms
mov
add
jg
and
rol
push
mov
ja
push
mov
mov
aaa
ret
xchg
fistl
fsts
xchg
outsl
lret
lret
jo
dec
mov
pop
ds
adc
je
cwtl
pop
mov
sub
mov
bound
cmp
jecxz
clc
xchg
in
in
fstps
clc
fistpll
xchg
gs
pop
pop
sub
add
add
pusha
test
mov
fidivrl
jmp
add
add
repnz
jge
loopne
addl
and
and
push
pop
adc
repz
fists
push
or
dec
insb
icebp
imul
stos
hlt
int3
imul
mov
sbb
aam
rclb
test
mov
mov
imul
outsb
dec
inc
add
or
add
jno
ret
or
dec
enter
xchg
jmp
xor
jg
jl
jbe
imul
and
sub
lds
insl
cmp
cmp
insl
xchg
lea
mov
mov
nop
mov
cmc
mov
push
push
sti
rcll
push
pop
jb
push
push
icebp
mov
andl
fidivs
mov
mov
adc
cmp
pop
rclb
test
lock
fdivrp
adc
loop
loop
sti
packuswb
int3
arpl
xchg
cmc
push
dec
inc
add
add
mov
repz
repz
mov
add
cmc
add
add
fistl
les
mov
xchg
lods
xchg
ret
stos
dec
pop
lock
movsl
aad
aam
pushf
nop
mov
or
inc
push
and
repz
jbe
mov
mov
fiaddl
xor
clc
rclb
fsts
xlat
in
xchg
pop
inc
cmp
adc
push
sbb
loop
ficoms
add
sub
outsl
sub
pop
mov
sub
push
push
imul
rorb
inc
bnd
pusha
lcall
in
insb
notb
xor
mov
or
add
add
adc
mov
push
and
loope
in
add
pop
mov
adc
lret
pop
insl
and
clc
cmpsl
aas
shll
testb
cmpsl
jmp
mov
add
mov
adc
xor
add
add
mov
mov
cmp
sbb
jb
cmpsl
add
cmc
add
add
mov
mov
sub
dec
cmp
ficoms
divb
adc
xchg
push
pusha
jecxz,pt
fisttps
xchg
push
pop
dec
inc
cs
pop
inc
pop
fisttpl
or
mov
fistpll
mov
fldl
xor
mov
movsb
shlb
xor
push
cmp
add
pop
mov
mov
xlat
ret
enter
push
pop
xchg
and
pop
pushf
and
jmp
hlt
jmp
mov
adc
mov
neg
push
icebp
movsb
xor
cmpl
in
cs
shlb
pop
sahf
push
ficompl
insl
jp
add
mov
push
bound
popf
push
and
sti
aad
movsl
jne
js
fmull
enter
add
or
sbb
mov
xchg
mov
enter
cmc
add
add
orb
inc
cmpsl
push
cmp
pop
out
xchg
jmp
in
xchg
mov
adcl
lret
push
out
out
dec
sub
adc
cmp
mov
push
inc
mov
aad
ret
pop
mov
push
jne
mov
loope
push
cmp
push
mov
popa
fwait
pop
loop
js
cmp
pop
jne
sbb
cmp
test
push
movsb
adc
dec
rcl
cmp
xchg
jne
xlat
sbbb
xchg
jmp
test
push
dec
and
xor
jl
sub
cs
push
stc
xorb
add
inc
mov
push
mov
dec
fcmove
idivb
sub
add
sub
sarb
jno
push
add
test
push
daa
mov
stc
out
xor
add
outsb
bound
pop
or
or
lret
add
dec
cltd
movsb
xchg
add
push
inc
fdivl
stos
push
cmp
add
add
push
ret
sbb
inc
fst
add
addr16
loop
xchg
push
push
dec
mov
shl
fdivr
rcrb
dec
adc
in
test
inc
std
popf
stc
jnp
in
divb
lret
and
lods
lock
xor
push
mov
push
insl
pop
mov
inc
cwtl
cmp
aas
sub
cmpsb
mov
pop
jbe
aaa
jge
sahf
scas
fs
scas
pop
pop
sub
sub
inc
xbegin
mov
fwait
in
mov
push
loopne
add
ret
sub
mov
push
mov
jge
sub
dec
adc
add
mov
and
mov
pop
mov
lcall
or
cs
mov
das
fsubrl
outsl
decb
loopne
push
pop
mov
xor
inc
push
jno
adc
pop
and
jl
and
mov
add
add
sbb
mov
pusha
sub
and
add
add
add
lock
lcall
jl
lock
cmc
xchg
jle
jnp
scas
rcrb
repnz
sub
loope
insl
movaps
stos
repz
xchg
cltd
mov
sbb
push
xorb
add
pop
mov
test
or
xlat
push
hlt
add
mov
in
and
or
and
add
arpl
aaa
xchg
dec
mov
pushf
xchg
stos
leave
cli
mov
lcall
fwait
dec
mov
and
arpl
and
into
jp
cld
mov
cltd
adc
push
int
jp
ret
and
dec
add
test
inc
leave
xor
inc
scas
out
adc
mov
bound
add
or
fld
outsl
mov
mov
add
mov
into
sub
push
push
jg
inc
jg
arpl
cmp
mov
add
add
stos
hlt
jmp
ljmp
or
cmpsl
stos
add
cmc
add
add
inc
cmp
push
mov
paddd
add
test
fwait
pop
cmp
cmp
cmc
cmp
add
imul
push
nop
add
inc
xchg
xor
add
subb
sub
cmp
mov
adc
ja
mov
adcl
xor
mov
mov
test
pop
nop
int3
mov
push
mov
fwait
rcl
jp
inc
jge
cmpsl
sub
xlat
in
mov
mov
loopne
out
lods
push
cmpl
inc
es
lahf
jne
mov
hlt
cs
sub
add
jecxz
mov
jp
jecxz
add
ret
sub
mov
lea
aam
adc
aas
and
and
cmp
cmpb
xor
outsb
pusha
fisubrl
sbb
add
add
out
xlat
out
jg
dec
cmp
mulb
add
cmc
add
add
pop
loop
incl
enter
xchg
test
cmp
push
sarb
sub
mov
push
hlt
pop
mov
int
jmp
push
push
mov
lea
dec
jg
dec
adc
mov
aas
loope
popa
xor
movsb
jno
aaa
int3
lea
xor
and
fmull
xchg
jb
stc
pop
ficompl
bound
push
popf
scas
das
xchg
popa
out
sub
test
cmp
cwtl
sbb
test
push
lods
cmc
aam
xchg
or
push
jp
adc
xrelease
xor
test
in
mov
sbb
aaa
std
cltd
dec
sub
and
cltd
mov
loope
dec
loope
and
loop
xchg
pop
aaa
dec
mov
out
dec
add
fcoms
rclb
add
add
mov
inc
fwait
lds
xor
push
je
lods
add
cmc
add
add
daa
int
cwtl
adc
or
sbb
and
lds
xchg
sub
push
lods
adc
cmp
push
rorb
pusha
aam
pop
adc
push
inc
push
pop
add
xchg
test
xchg
fiadds
add
mov
daa
sub
icebp
jno
aam
lods
rcrl
hlt
push
push
lahf
sub
mov
push
mov
lock
cwtl
xchg
jbe
fcom
or
in
adc
pop
cmc
mov
aas
inc
inc
out
cmpsb
xchg
inc
jno
cwtl
push
je
push
movsb
subl
ret
cmp
movsb
and
dec
dec
sub
aaa
dec
sub
fs
mov
xchg
pusha
jmp
push
leave
gs
ds
popf
push
and
ret
sub
jl
or
repz
add
sbb
jp
or
mov
repnz
out
iret
in
sbb
mov
ljmp
add
lcall
std
clc
jns
ljmp
add
cmc
add
add
mov
das
lret
sarl
sub
popa
repz
sahf
aas
std
fistpll
xor
pop
jo,pt
das
xor
inc
inc
sbb
pop
pop
push
imul
mov
or
sub
xor
pop
arpl
pop
das
into
fcmovb
sti
sub
and
lcall
cmp
jns
pop
xchg
mov
jge
mov
das
aaa
adc
dec
fcmovnbe
cmc
mov
aad
imul
ds
out
lret
clc
ljmp
sarb
and
fldl
xchg
sbb
sbb
js
cli
out
cmp
hlt
lahf
mov
sub
xchg
pusha
incb
mov
xchg
cmpsl
sahf
bound
sti
and
adc
sbb
adc
xor
jnp
cmpsl
add
in
push
flds
add
lret
jnp
sti
jmp
xchg
sub
sub
jnp
add
cmc
add
add
imul
test
int3
xchg
out
das
sahf
movsl
sbbl
popa
and
dec
lret
dec
dec
dec
jl
notb
push
dec
jno
fsts
cmp
jae
iret
xchg
mov
push
gs
out
loope
insl
mov
inc
push
insl
or
in
xorb
lods
mov
aas
hlt
jae
xchg
sbb
sbb
int3
inc
push
loopne
fdivr
and
jl
or
push
pop
lds
in
repnz
cmp
sbb
iret
push
inc
push
sbb
fs
or
rep
ds
cmpsb
imul
mov
push
add
adc
inc
call
dec
cmc
ret
fstp
mov
lahf
lock
leave
xchg
ret
pusha
jecxz
mov
and
ds
cmp
xchg
lock
std
jae
inc
scas
int
pop
cmp
pop
mov
cmp
mov
jecxz
lock
sbb
mov
mov
add
add
add
mov
or
inc
dec
std
ror
sub
orb
sbb
clc
pusha
inc
adc
sti
push
fistpll
ss
outsb
mov
scas
lds
mov
lret
push
lds
popf
add
pop
es
cltd
cmpsb
std
xchg
std
inc
fucom
xchg
fnstenv
aad
jb
xchg
and
cmc
bound
mov
popa
push
or
dec
push
bound
jo
sbbb
or
adc
movb
sub
fsubrp
outsb
xchg
hlt
cld
outsb
fsubr
out
gs
jle
adc
or
popf
push
scas
xchg
jge
outsl
xchg
mov
dec
cs
and
stos
push
fdivr
mov
cltd
in
push
outsl
mov
xchg
orb
or
test
pushf
mov
mov
jno
ret
mov
add
mov
cld
mov
test
gs
add
add
add
rol
data16
popa
pop
inc
mov
mov
pop
jle
enter
sbb
or
out
jge
es
call
cli
mov
sbb
shll
or
mov
stc
mov
repz
pop
int
pop
lea
into
push
cmc
sbb
cmpsb
pusha
dec
das
or
lahf
dec
jmp
dec
mov
cltd
rorl
lock
or
mov
in
sti
sbb
adc
mov
and
mov
inc
jae
jns
pop
xor
sub
js
jmp
in
ljmp
mov
push
xchg
add
jg
jle
dec
mov
or
cli
decl
sarb
xor
sbb
mov
aaa
je
xor
push
lahf
lds
rol
fs
fsubr
daa
cmp
sub
xor
add
out
cmc
mov
int
push
sbb
add
cmc
add
add
rcrb
xor
mov
roll
mov
fstpl
xchg
imul
fldcw
out
or
add
pop
arpl
aam
add
int
jbe
dec
cmpsb
dec
aam
dec
dec
ss
adc
jle
inc
inc
jecxz
lock
adc
inc
cld
push
sub
push
lret
fptan
les
pop
mov
aam
scas
lods
sbb
cmp
sbb
pop
in
js
lcall
push
lcall
pop
pop
xchg
or
out
adc
fwait
mov
mov
mov
aaa
xchg
sub
iret
and
mov
inc
pop
and
jae
int3
or
push
sub
pusha
mov
decb
jbe
cmpsl
popa
jg
cmovg
push
push
aad
jp
pop
mov
push
mov
adc
jns
push
rol
add
add
out
std
dec
std
pop
mov
or
aam
mov
add
add
add
enter
and
mov
dec
add
sahf
mov
jecxz
sub
dec
inc
mov
xchg
sbb
ret
mov
mov
mov
pop
inc
or
sbb
loope
gs
push
mov
sub
ja
inc
enter
sbb
dec
push
lock
mov
fnstenv
xor
mov
jne
jmp
xorb
xchg
push
or
adc
imul
in
stc
dec
and
push
jb
std
fdivr
mov
inc
xor
setno
setne
nop
jl
add
push
pop
adc
mov
lret
push
icebp
and
loope
adc
cmp
shl
mov
cmp
pop
fcoml
mov
imul
orl
aas
jle
push
dec
test
xchg
imul
add
fidivs
loop
ljmp
leave
test
add
add
add
inc
push
sahf
xor
pop
xor
adcb
xor
fistps
fcomps
inc
pop
mov
or
aaa
ret
inc
xor
push
rcr
enter
push
push
std
adc
data16
mov
mov
inc
inc
ja
sbb
scas
inc
sub
test
or
dec
add
sub
xchg
inc
mov
cmp
pop
in
lods
or
pop
xlat
call
push
and
imul
mov
adc
lcall
cmpsb
dec
jne
fwait
iret
inc
dec
lds
jnp
stc
sub
push
jle
adc
arpl
sbb
cltd
popa
adc
pop
fldenv
jmp
outsb
andb
test
or
es
lods
add
daa
add
add
xchg
jg
jmp
std
jge
in
xchg
add
cmc
add
add
aam
inc
mov
add
adc
mov
xchg
mov
jmp
inc
adc
stos
cmp
pop
aaa
push
sbb
cltd
les
and
outsl
icebp
in
outsl
xor
lret
push
push
lea
dec
sbb
sti
adc
pop
jg
out
stc
xchg
shl
sub
push
pop
mov
in
jne
clc
cmp
sahf
dec
adc
pop
mov
jno
aas
mov
mov
cmpsl
in
jg
jl
and
xor
mov
mov
les
test
xchg
sbb
cld
clc
lea
push
sahf
or
lds
push
fdiv
iret
push
jb
xor
cmpb
enter
nop
inc
inc
data16
int
gs
leave
mov
sahf
cmpsb
nop
pop
in
jo
and
sub
cmp
outsl
push
jmp
jmp
popa
cli
xchg
jbe
out
add
lahf
out
adc
adc
incb
add
push
divb
std
cmp
loope
cs
add
add
add
jns
stos
out
mov
in
lahf
movsb
push
mov
aas
out
repz
mov
jbe
orb
cmp
sub
jmp
push
sbb
out
xchg
mov
pushf
push
outsl
inc
test
ret
inc
xchg
add
pop
lret
xchg
push
je
pusha
out
xchg
lcall
xchg
inc
adc
into
imul
stc
fwait
push
pop
or
fildl
int
cmp
xchg
xchg
dec
lretw
repz
fimuls
push
and
sbb
mov
stos
ss
dec
bound
cltd
in
vmread
lea
inc
stos
in
pop
cli
shr
mov
dec
pop
pop
mov
add
mov
sub
mov
addr16
mov
cs
jnp
push
jmp
ss
push
imul
sbb
add
add
xor
cmp
ficoml
daa
aas
cld
or
mov
add
add
add
in
inc
ljmp
sar
hlt
xor
add
and
jge
mov
dec
outsb
mov
rcrl
sbbb
pop
cmc
xchg
jns
pop
out
fs
mov
cmc
inc
cwtl
pop
rorl
add
dec
cli
sbb
daa
push
and
fcoms
subb
in
cwtl
jnp
inc
imul
jecxz
stos
sahf
push
outsl
add
cmp
test
aad
mov
xchg
fsubr
jne
jae
jp
sub
outsl
adc
pop
insl
ljmp
jne
scas
cmp
cmp
or
iret
add
add
xchg
pop
mov
pop
rorl
cld
push
adc
sub
das
xorb
aaa
sbb
xor
dec
inc
cmp
cld
shlb
outsl
push
xchg
scas
mov
add
add
jp
les
mov
push
push
adc
xchg
push
cmp
mov
add
ljmp
es
stos
cs
inc
xchg
pop
testl
pop
cmp
fldl
xchg
or
scas
stos
add
and
cmp
and
xor
pushf
inc
mov
pop
les
loopne
test
flds
or
clc
lcall
sbb
aad
jns
push
das
push
mov
lods
fcomps
fisubl
sbbb
shrl
dec
dec
lods
and
cmp
sahf
mov
or
jb
mov
xor
pop
mov
scas
adc
fs
int3
and
int
ret
sub
fmuls
scas
xor
push
mov
or
xor
out
inc
sarl
out
pop
and
jg
cmp
es
scas
pop
add
fmul
rcrl
or
pop
cltd
jp
inc
inc
adc
add
clc
pop
stc
out
push
insb
xchg
cld
sub
dec
and
add
cmc
add
add
aam
dec
xchg
xor
pop
gs
push
mov
mov
shrb
mov
push
sbb
cmp
jp
mov
mov
in
xor
mov
jge
push
loopne
shl
adc
insb
loopne
jo
ret
fmuls
cmpsl
ds
in
dec
ror
sub
insl
sub
mov
dec
push
out
cmc
push
addr16
and
mov
out
pop
repz
push
int
adcb
xlat
sub
pop
adc
fucom
sbb
sub
inc
out
cltd
or
aas
dec
dec
lds
pop
push
mov
jecxz
add
push
or
lret
rol
add
outsb
es
cmp
mov
jmp
ljmp
sbb
loop
or
jle
dec
inc
inc
jo
inc
ret
bnd
cld
popa
imul
dec
jb
push
inc
fisttpl
adc
cmc
add
add
push
mov
lcall
ret
js
add
add
test
dec
inc
fs
xchg
or
jae,pt
and
fmuls
pushf
subl
add
jl
jecxz
cmpsb
lds
sub
jle
cmp
add
lods
lods
mov
mov
sub
sbb
in
adc
mov
lcall
pop
notl
mov
mov
fldl
outsl
call
arpl
mov
out
and
nop
xchg
sbb
in
mov
mov
mov
mov
loope
lods
ss
adc
ljmp
nop
xchg
lret
cmp
jbe
sub
cltd
sti
ds
sbb
mov
aaa
jnp
xchg
dec
cmc
movsl
addr16
mov
mov
mov
loop
mov
out
loop
int3
dec
arpl
aam
dec
and
lods
jne
or
rcr
shr
cmp
imul
add
add
jne
mov
xlat
insb
scas
xchg
or
insb
idivl
add
jecxz
ljmp
jno
jmp
sub
fcmovnu
inc
hlt
jp
xchg
push
push
push
test
lods
add
inc
pop
xor
js
adc
inc
cmp
test
xorb
cmpsl
jmp
jns
cmp
push
shrl
sub
sub
mov
hlt
sarl
adc
cmp
insb
in
stc
mov
xchg
lea
pop
test
jo
inc
mov
loopne
mov
fiadds
push
jno
adc
or
and
push
mov
push
lret
push
loope
jnp
lret
or
or
imull
negl
out
pop
dec
jmp
cltd
push
push
pop
push
sbb
stos
xchg
cltd
movsl
push
js
dec
dec
sub
jle
jle
ss
pop
pop
mull
and
jmp
enter
push
add
add
pop
sbbl
fstpl
test
add
add
add
mov
adc
fistps
sbb
lock
mov
fstpt
shll
insl
insl
ds
jnp,pt
sahf
and
cltd
sbb
ja
inc
mov
stos
insb
fwait
jbe
and
push
dec
mov
mov
mov
mov
mov
pop
and
sbb
pop
cmpsl
push
add
pop
dec
cli
xchg
add
pop
pop
pop
and
mov
dec
out
dec
push
sub
jnp
mov
sbb
adc
movsl
cld
mov
mov
in
push
xor
mov
lea
dec
data16
pop
mov
inc
cmc
arpl
add
adc
aaa
inc
adc
push
jg
sub
push
inc
pop
xor
addr16
sbbb
je
cmc
mov
stos
add
data16
xor
jl
add
add
in
mov
jecxz
out
sub
inc
and
add
add
icebp
bswap
imul
rcll
stc
out
out
out
pop
loope
xor
iret
xchg
das
mov
mov
jmp
jg
and
scas
cmp
xchg
pop
leave
ds
je
fsubrs
xchg
sbb
dec
mov
std
cmc
push
push
fnstenv
mov
push
add
add
rcrl
pop
pop
andl
std
jne
inc
sbbl
jmp
mov
xlat
sub
out
int
add
movswl
aam
sahf
stc
add
mov
pop
ret
testl
mov
jle
push
and
push
popa
sbb
sub
mov
jbe
xchg
pop
scas
sbb
inc
add
xor
sbb
jg
rdpmc
pusha
adc
add
add
std
test
jg
jbe
movsb
push
out
mov
mov
add
xor
mov
fisubrs
sub
or
or
dec
push
ss
rorl
call
int
je
push
push
cmc
mov
sub
jp
mov
sti
fldl
fiaddl
loop
lahf
ret
stos
or
int3
and
inc
pop
cld
in
nop
icebp
mov
js
pop
fs
aas
xchg
xor
xor
mov
sub
sbb
hlt
pop
or
in
add
jge
mov
adc
push
insb
cltd
or
sub
es
mov
imul
push
fsts
cli
mov
and
mov
push
hlt
test
jo
inc
and
jg
clc
pop
pusha
imul
pop
xchg
pusha
dec
fs
stos
pop
dec
inc
xor
cmp
or
pusha
mov
stos
cmp
iret
imul
add
lock
in
lcall
xor
jl
pop
lret
mov
add
or
or
adc
inc
inc
push
mov
add
cmp
loopne
orb
add
mov
mov
clc
jge
or
pop
xchg
loopne
add
push
inc
cmp
and
lcall
shl
pop
lret
push
enter
and
popa
or
mov
fistps
std
rol
cmp
stos
out
ror
les
sahf
sarb
add
push
xchg
adc
or
aaa
mov
test
adc
adc
sub
std
jnp
adc
push
jnp
out
leave
mov
stos
ja
xlat
cmp
jg
xchg
cmp
ss
jbe
pop
adc
jge
in
sbb
lds
icebp
jg
xchg
lods
ficomps
movsl
jne
or
xchg
iret
push
xor
jmp
adc
pop
in
scas
fstl
add
add
sub
jg,pt
stos
dec
push
jo
xchg
aam
mov
add
sbb
mov
in
push
pop
lret
or
repnz
mov
mov
jmp
cli
imul
in
daa
nop
loop
mov
imul
cmp
or
or
test
add
adc
push
int
out
std
into
les
or
popf
shr
pop
shll
mov
aaa
pushf
lea
or
xor
xchg
add
fsubs
xabort
test
aaa
jecxz
sbb
call
cmp
or
add
sbb
mov
test
jp
xor
cmp
jo
mov
stos
loopne
lret
or
and
les
dec
xchg
jl
insb
test
xor
sub
cli
sub
fiadds
cmp
jno
arpl
lret
call
mov
insl
sbb
outsl
mov
or
add
cmc
add
add
mov
dec
lret
add
xlat
imul
mov
arpl
cmc
test
pop
jbe
fcoms
jl
mov
cmp
stos
ffree
fcmovu
adc
loop
sbb
xchg
xchg
rcrb
mov
inc
mov
pushf
inc
sub
shlb
int
mov
dec
or
fwait
es
pusha
sbb
mov
and
xorl
sahf
scas
popf
adc
ds
es
jmp
xor
imul
and
mov
sub
out
repz
xchg
ficompl
inc
mov
bound
push
cmp
test
aaa
push
sbb
incl
and
xor
loop
mov
sub
je
stos
daa
xor
addb
sbb
mov
cwtl
pop
into
jbe
bnd
or
loopne
sbb
inc
data16
add
inc
fbld
mov
cltd
enter
stos
roll
cmc
add
add
mov
jecxz
push
cmpsl
shrb
xor
mov
jg
out
xchg
jns
xchg
push
into
jg
xor
and
or
idivl
inc
mov
mov
mov
aad
mov
data16
notb
mov
rcr
je
fs
outsb
sbb
sbb
cmpsl
cli
cmpsb
pop
ja
or
dec
adc
pop
ja
cmpsl
ds
push
rcrl
xchg
mov
or
sub
movsb
jp
rolb
out
out
ret
sbb
cld
cmpsl
lods
xlat
pop
enter
adc
push
fcoms
push
dec
das
repz
inc
inc
int
movsl
inc
rol
shll
and
inc
fdivp
out
dec
aad
mov
xchg
pop
mov
pop
xor
xlat
and
sbb
lods
mov
inc
out
cli
lea
inc
xchg
imul
mov
push
add
loopne
add
add
fistpll
call
mov
jno
lahf
ret
cmc
add
add
add
and
pop
repz
adc
pop
sahf
shl
lds
cmp
outsl
fisubrl
sbb
stos
into
int3
faddl
loopne
mov
lcall
scas
rcll
mov
push
in
sahf
inc
repz
dec
cmc
pop
and
ss
push
dec
pop
addl
fildl
inc
out
out
sbb
outsl
cltd
xchg
cwtl
ficompl
xchg
add
out
mov
push
mov
cltd
out
outsb
addr16
lock
stos
pmovmskb
dec
sbb
mov
mov
imul
icebp
and
dec
cmp
push
dec
call
mov
test
mov
mov
adc
xor
add
in
in
push
sbb
testl
dec
les
cmp
fmul
pop
aad
js
leave
sbb
mov
leave
pusha
push
cwtl
out
add
add
std
sti
leave
sti
iret
ljmp
jecxz
out
mov
add
fnstenv
lock
add
lret
jo
fistpll
adc
addr16
cmp
push
popa
aad
loop
mov
out
cmpsb
out
imul
xor
insl
push
iret
cmpsl
pusha
fs
inc
mov
mov
scas
cmpsb
or
jbe
incl
cmc
je
daa
in
sti
ds
inc
xlat
sbb
or
inc
outsl
mov
arpl
std
push
xor
inc
mov
jecxz
addr16
bound
addr16
test
out
cld
push
aad
mov
insl
inc
mov
loope
mov
and
mov
mulps
pop
fwait
pushf
rcll
lods
fisttpll
inc
mov
or
je
outsb
outsb
xor
pop
sahf
mov
aam
cmp
outsb
movsb
pop
add
sbb
and
jno
sbb
mov
sub
push
cmp
aam
jl
sub
dec
or
adc
add
mov
es
push
add
les
add
add
add
adc
pop
mov
std
sti
jl
repz
xchg
rol
sub
inc
xor
daa
pop
inc
jle
mov
fidivrl
jnp
and
push
sbb
shll
orl
cmpsl
in
repz
push
and
out
fsubrs
adc
out
out
ds
orb
cld
or
pop
pop
pop
mov
stos
adc
enter
pop
hlt
mov
stos
js
sti
fdivr
imul
cltd
jle
jae
xor
popa
adc
cmp
clc
or
in
or
inc
xchg
xchg
test
inc
add
jns
jp
jae
jecxz
cmpsl
sub
mov
push
cli
adc
push
enter
adc
das
std
gs
inc
xlat
inc
fdivrs
push
or
leave
test
sub
lcall
add
jg
mov
sub
bswap
imul
lds
add
add
add
in
mov
mov
xchg
jle
inc
shl
mov
pusha
cmpsl
testb
jle
and
inc
ror
mov
sbb
mov
push
test
jge
imul
in
xor
aaa
cwtl
add
fmull
mov
aas
xor
mov
jmp
sar
or
pop
xor
shlb
xchg
popa
popa
lea
dec
popf
andb
jbe
mov
cmp
adc
mov
pop
xchg
rol
mov
add
movsb
mov
mov
add
cmp
rcl
je
jg
or
int
dec
int3
cmp
test
ljmp
fs
lcall
mov
out
arpl
adc
loopne
and
push
add
adc
mov
cmc
dec
pop
cmp
sub
cmp
fwait
add
add
inc
enter
pushl
out
adc
xor
xchg
jae
add
cmc
add
add
shr
mov
cmp
mov
sub
ss
ljmp
inc
jno
imul
lea
sbb
fstps
xchg
arpl
cmp
push
adc
xchg
xchg
mov
xchg
pop
adc
fsts
fldt
adc
jns,pn
sbb
and
push
xor
inc
nop
cltd
push
stos
sub
pop
mov
rclb
test
pop
icebp
fs
pushf
jb
out
and
dec
sbb
cmp
movsb
ds
add
test
pop
inc
pop
jecxz
jge
stos
add
ss
pop
fildll
movsb
bnd
xchg
rcl
dec
jp
sub
inc
movsb
adc
enter
add
idiv
dec
addr16
push
mov
push
mov
lods
sbb
shrb
cmp
add
xlat
pushf
shrb
jb
ret
insl
dec
push
add
add
movsb
lods
or
push
cmp
sahf
mov
popa
sub
dec
cs
sub
xchg
dec
in
lret
jle
aaa
pop
and
jb
push
pop
repnz
pop
dec
outsl
ret
addr16
frstor
sub
test
jg
filds
cmp
mov
jecxz
inc
lds
pop
stc
mov
push
and
mov
push
dec
dec
sar
mov
lds
fs
mov
lea
dec
xchg
inc
sub
psubq
lods
dec
test
or
or
insl
push
fs
imul
mov
or
insl
or
xchg
movsb
or
adc
inc
mov
push
mov
lods
cmc
jp
lds
out
push
jb
or
out
fmull
loop
aam
lret
jl
xor
shll
test
inc
xor
xchg
out
dec
pusha
or
sbb
sub
jo
dec
ss
out
add
sub
scas
mov
xchg
push
outsl
call
enter
add
add
mov
or
rorb
or
sub
sub
data16
loop
sti
push
adc
aam
xor
lret
arpl
jbe
hlt
mov
sub
ror
ret
push
movsb
aad
js
jge
pop
cmp
js
lret
fwait
push
neg
xchg
ret
aas
movsb
in
adc
or
mov
ss
aad
pop
adc
xchg
mov
into
call
das
aam
mov
or
icebp
push
pop
inc
mov
sbb
outsl
sub
lods
addr16
xor
jl
in
jne
sti
lods
ret
int
inc
mov
stc
fdivp
or
pop
fcomps
push
jnp
ret
dec
xchg
dec
jns
mov
push
pop
push
ja
pop
out
fs
dec
imul
jnp
xchg
mov
inc
jae
jnp
mov
jle
mov
shrl
or
add
add
jne
jne
jg
out
and
xchg
xchg
pusha
push
leave
add
cmc
add
add
movsb
and
scas
push
fdivr
or
and
out
pop
rolb
mov
dec
jae
dec
out
pop
test
dec
ficompl
push
xorb
xchg
movl
mov
shll
lea
nop
pop
jl
loope
pushf
xor
sbb
clc
mov
insb
push
sbb
fwait
loop
stos
mov
mov
lea
cmpsb
cltd
push
movsl
cld
pop
jmp
out
int
cwtl
mov
out
cmp
shlb
jge
roll
dec
push
inc
jae
neg
add
mov
mov
lcall
pop
mov
mov
sahf
icebp
lods
shll
xor
cmp
es
mov
sbb
mov
push
inc
adc
cmp
insb
pop
orl
rcl
xchg
mov
rorl
adc
hlt
movsl
add
add
dec
pop
mov
cmpsb
fstpl
dec
xor
add
cmc
add
add
add
outsb
lret
push
aaa
and
leave
mov
sub
imull
mov
or
xchg
in
pop
lods
addr16
push
cmp
idivl
xor
cmc
pop
jnp
jge
mov
or
cmp
push
cs
lahf
mov
dec
test
iret
mov
mov
sbb
pop
repnz
pop
jg
punpckldq
sarl
dec
leave
cli
dec
inc
daa
data16
push
cwtl
xchg
adc
mov
out
and
mov
pop
in
subb
xor
adc
and
sti
aam
jle
push
nop
scas
and
and
fisubl
jno
stc
pop
ret
stc
push
outsl
inc
rclb
dec
stos
lahf
ja
jle
pop
mov
adc
add
jb
out
lea
xor
add
add
outsb
jle
lods
not
mov
add
lret
add
cmc
add
add
mov
test
std
je
fimull
subb
shl
add
std
data16
push
out
xor
sbb
xor
mov
cmp
cmc
test
inc
mov
sbb
repz
fs
pop
xchg
dec
ds
sub
push
outsb
sbb
push
lock
insl
mov
lods
mov
jl
inc
mov
and
fists
xor
adc
mov
mov
mov
dec
rorl
negb
fidivrs
sbbl
inc
inc
mov
push
fimuls
xchg
test
stos
push
mov
repnz
stc
jg
add
movsl
push
mov
ja
nop
out
insl
call
adcl
lds
lods
movsl
ret
pop
jge
push
mov
aam
xor
fldl
cmp
add
mov
mov
push
xor
adc
cmc
add
add
dec
sbb
cmp
xchg
dec
and
jp
pshufw
push
add
lds
mov
mov
pusha
out
xor
adc
shrb
dec
lea
sbb
sbb
pop
mov
sub
dec
int3
sti
fcmovnb
pop
out
jns
inc
dec
xchg
jns
push
pop
adc
je
je
nop
push
push
xor
iret
inc
inc
sub
or
sub
cmpl
dec
cmp
das
ljmp
addb
pop
flds
mov
xchg
ja
imul
fldt
pop
orb
mov
and
jmp
inc
fs
or
fistpll
mov
inc
jnp
cmpsb
inc
adc
push
sbb
mov
mov
popf
mov
out
test
add
test
sbb
xlat
ss
inc
movsb
notl
add
cmc
add
add
push
dec
lods
or
push
movsl
xor
mov
sub
cmp
repz
test
in
ljmp
xchg
and
push
daa
insl
addr16
xor
adc
pop
jmp
and
cmpsb
xor
add
inc
push
ss
dec
mov
push
fwait
xchg
aad
push
lret
jg
push
stc
pop
push
mov
sbb
xchg
inc
xor
xor
jno
jge
dec
dec
rcrb
test
je
pop
jo
mov
ss
push
mov
xchg
je
insb
shrb
lahf
ficoms
mov
movsl
jg
inc
jecxz
xor
sub
ss
inc
xor
inc
insl
sub
xchg
fisttpl
push
sti
loop
fistpl
mulb
loopne
and
adc
dec
rcll
idiv
gs
inc
das
add
add
push
sub
cmp
jg
cmp
outsb
xlat
sbb
add
cmc
add
add
pop
les
xor
ficoml
lahf
inc
adc
stos
jmp
adc
aad
sub
movsl
inc
xchg
mov
pop
sub
adc
sbb
lcall
jnp
ja
das
lea
popf
fcomps
pop
mov
jecxz
cmpsl
sub
in
jmp
loopne
stos
int3
mov
lock
sbb
cs
jne
icebp
in
fsubr
sbb
inc
adc
jle
push
out
pop
pop
lret
test
push
out
out
pop
test
dec
inc
aad
and
lcall
mov
xor
jle
mov
in
leave
sbb
test
outsb
inc
jae
loope
mov
cltd
jno
adc
shr
jp
adc
pop
cmp
je
adc
sbb
xchg
inc
add
test
pop
cmp
pushf
das
scas
inc
movsl
sti
lds
fisttps
sbb
clc
mov
pop
fucom
pop
xchg
inc
pushf
test
add
jmp
ds
repz
aam
dec
push
pop
adc
add
cmc
add
add
cmpsl
scas
and
icebp
pop
mov
in
push
das
test
xchg
out
sub
inc
fiadds
aam
stos
dec
les
mov
sti
add
dec
and
lcall
jae
pop
jno
scas
and
adc
mov
das
insb
push
pushf
sub
mov
sub
popf
scas
fdivrp
jbe
rcl
das
in
jecxz
xor
dec
arpl
push
cmp
push
adc
jno
aam
or
sbb
sub
lret
stc
push
mov
mov
pop
pushf
adc
push
lahf
mov
jmp
adc
push
mov
mov
clc
aas
rorb
fucomi
jns
cmc
arpl
jae
or
arpl
shll
lea
in
pop
shl
mov
jecxz
enter
not
jns
or
mov
jmp
mov
add
mov
jne
inc
sub
add
add
add
jle
std
inc
jnp
sbb
out
dec
or
mov
cmp
mov
fnstenv
cmp
jg
stos
jae
imul
push
lock
xor
leave
in
mov
rcrb
das
test
push
or
xor
dec
lea
add
fisubl
sbb
xchg
cmpsl
ljmp
arpl
push
mov
insb
out
jno
xor
jmp
cltd
pushf
xlat
cs
sbb
xchg
std
cmpsb
ljmp
inc
mov
xchg
sbb
inc
fwait
and
mov
les
leave
sbb
fsubp
scas
loopne
and
adc
mov
pop
sub
dec
adc
scas
cltd
xor
and
mov
mov
lret
pop
mov
jno
push
int3
jecxz
and
insl
push
cmp
jno
repz
cld
pusha
jno
leave
imul
add
enter
in
out
mov
dec
pop
leave
lret
aad
rolb
add
add
add
sbb
jle
ds
and
loop
add
repnz
inc
cs
ds
mov
cli
fbld
div
push
xor
push
mov
adc
int
pcmpgtb
es
mov
jl
jmp
dec
mov
xchg
in
xor
bound
jle
lret
and
mov
mov
loopne
movsb
decb
or
lret
fstpl
xor
in
xchg
clc
fcoml
pop
paddusb
sbb
mov
cmp
clc
cmp
cmp
call
loope
push
testb
test
mov
inc
pop
xchg
jno
mov
jmp
outsl
xchg
bound
mov
into
lahf
cwtl
xchg
mov
call
sbb
mov
js
add
add
imul
cmc
call
lret
out
roll
add
add
add
scas
sub
add
pushf
inc
push
in
loopne
xor
mov
aas
ret
lods
mov
icebp
fcomps
jno
xor
xchg
and
jae
std
jp
stos
lods
pop
or
test
mov
mov
addr16
cld
cltd
jl
ljmp
pop
sbb
mov
into
adc
push
movsl
xor
adc
cmp
push
stos
daa
xchg
ljmp
jmp
or
adc
fidivrl
cmpsl
lcall
xchg
cmp
dec
push
xor
popa
jno
dec
lock
cmp
cmpsl
jecxz
cmp
testl
xchg
pop
loope
adc
ret
mov
mov
push
in
ss
pusha
adc
push
rorl
sbb
xchg
out
dec
sbbl
add
movsl
mov
iret
xchg
xor
xchg
or
rolb
add
add
add
inc
push
pusha
sarl
mov
arpl
xchg
lret
xchg
push
xchg
js
and
std
cs
xchg
rolb
les
ljmp
sub
mov
adc
shrl
aad
stos
mov
les
and
movsl
sbb
aad
aad
psubsw
pop
cmpsl
push
loop
inc
test
fiadds
enter
std
mov
imul
inc
adc
cmpsb
fisubrs
mov
insl
bound
aas
fs
aam
movsl
or
push
ja
lcall
mov
mov
mov
ret
outsb
and
jne
sbb
and
out
icebp
adc
xor
xlat
mov
sbb
test
or
lods
outsb
pop
sti
dec
orl
addr16
movaps
mov
in
int
sahf
jg
rcr
xchg
aaa
sbb
xor
dec
jl
pop
popa
bnd
add
mov
out
out
out
into
gs
fsts
inc
xchg
pop
add
cmc
add
add
mov
and
push
mov
fdivl
and
insl
enter
and
clc
pop
gs
pop
and
sub
rcrb
push
xchg
inc
adc
push
sub
add
jl
xchg
cmp
cli
add
cmp
cltd
js
jle
inc
shll
mov
js
xor
lret
mov
jae
xchg
xor
xchg
lea
das
cmpsb
jecxz
test
sub
nop
mov
xor
fsts
mov
test
xchg
arpl
fxch
lock
push
pop
rorl
adc
or
adc
xchg
push
cmp
lods
sbb
push
and
xor
in
decl
inc
mov
fwait
popa
popf
test
test
ret
mov
sbb
jg
pop
aam
sti
aam
push
push
das
push
or
repnz
pop
loope
xor
sub
dec
mov
loopne
and
je
out
mov
inc
sahf
into
push
into
aam
add
add
add
mov
sub
scas
pop
xor
adcl
out
popa
loop
push
mov
bound
sub
add
faddl
lret
sbb
push
mov
inc
pop
out
ret
sub
adc
data16
and
int
cli
fisttps
sahf
inc
cmp
jne
fdivrs
pop
cmpsb
orl
aas
pushf
cwtl
jo
cmpsl
aas
pop
addr16
pushf
imul
jmp
pop
cltd
adc
fdivl
mov
fstp
dec
lods
repz
loop
in
insb
movsl
xchg
daa
aam
cwtl
push
push
dec
hlt
repnz
or
scas
scas
xor
scas
jne
dec
pop
idiv
js
jbe
jge
mov
mov
fisubrl
pop
fidivs
das
orb
jne
jmp
popa
lea
dec
jle
push
out
or
add
push
ret
sub
pop
dec
outsb
fst
out
mov
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
jne
ret
aad
add
add
add
mov
mov
mov
mov
mov
aaa
add
in
int
jae
int
add
or
xchg
pop
imul
call
push
shr
gs
mov
les
insb
daa
lods
pop
pop
cmpsb
push
sarl
scas
icebp
pusha
fdivs
mov
outsb
hlt
js
xorb
and
or
jb
xchg
dec
jle
or
daa
int3
inc
adc
mov
xor
sbb
incl
mov
mov
jo
add
xchg
mov
loope
rcll
nop
sahf
xor
dec
jge
inc
lods
in
into
jne
sahf
ficomps
rcll
xor
mov
std
mov
stos
cwtl
dec
mov
enter
subb
ss
pop
mov
jge
adc
mov
dec
inc
mov
add
call
out
lahf
or
fdivs
mov
add
add
jbe
loope
popa
add
divb
xchg
out
movsb
stc
das
xorl
cmp
mov
cmove
pusha
pusha
cmp
jb
je
sub
cmpsb
sub
push
sahf
arpl
clc
mov
hlt
rcll
add
mov
mov
and
add
jb
lea
jne
xor
out
cld
int3
cmc
inc
push
fsubrl
insl
push
repz
push
nop
jecxz
add
inc
jns
and
insb
mov
sbb
and
or
jns
add
pop
add
jo
cmp
int3
xor
int
or
adc
aas
es
pop
xchg
imul
sti
pop
sbb
pop
nop
mov
xchg
mov
stos
shll
fwait
push
xor
xchg
dec
mov
frstor
xchg
test
mov
mov
mov
ficoml
jge
lods
lods
xlat
add
cmc
add
add
cmp
das
jmp
dec
cli
cmpsb
les
xchg
xor
ss
jl
xchg
int
jl
fwait
mov
fnstcw
out
xchg
sbb
dec
iret
or
inc
push
in
push
push
xor
lds
int
sahf
jno
sub
scas
sub
jb
iret
pmullw
insb
decb
push
addr16
test
mov
sub
mov
cmp
sub
mov
xor
jmp
xor
mov
mov
push
pop
or
push
loop
inc
add
cmpsb
inc
mov
in
das
js
xor
jno
repz
adc
add
bound
test
movsl
and
loope
adc
and
xor
mov
cwtl
push
xchg
cmp
adc
sub
pushf
jbe
gs
sbb
sub
push
jecxz
loop
add
xor
add
sbb
sbb
add
add
cmc
add
add
push
sbb
jbe
fs
fcompl
push
jo
movsl
aad
mov
and
or
ds
sbb
lock
loopne
out
pop
out
repz
adc
popf
rcrl
cmpl
push
push
xchg
insl
je
mov
nop
idivl
cmpb
fimull
push
mov
test
or
mov
pop
cmp
stc
jg
shl
repnz
ret
jo
inc
push
out
or
loopne
jmp
gs
and
pop
jge
dec
push
or
and
push
popf
fsubrs
ds
aaa
cli
cmc
xor
lcall
icebp
arpl
je
movsb
repnz
jae
mov
or
loop
adc
mov
dec
shlb
mov
dec
js
mov
push
aad
outsb
push
mov
movsl
inc
dec
out
xor
add
add
ds
sub
xchg
push
xchg
flds
add
add
add
push
nop
divl
cld
adc
hlt
andb
js
insl
lods
adc
insl
in
xlat
ja
xchg
jns
js
std
mov
mov
sub
sbb
int3
leave
sub
sbb
pop
lods
and
pop
jmp
dec
test
cmp
inc
push
push
in
cmp
dec
mov
xor
add
pop
dec
adc
inc
pop
gs
cs
lds
lret
xchg
aam
jle
test
clc
push
cli
mov
test
repz
cmp
loop
test
mov
xchg
gs
in
push
xchg
ss
jge
mov
hlt
cltd
sbb
movsb
pop
popf
mov
jmp
xchg
mov
es
mov
in
push
ja
sub
ja
cmp
imul
int3
into
lcall
mov
out
pop
add
and
mov
add
xchg
and
idiv
lahf
insl
mov
mov
add
cmc
add
add
dec
lret
aaa
mov
add
or
mov
ret
xlat
lds
lods
imul
or
and
lods
ret
jmp
daa
mov
xchg
mov
sub
add
dec
push
loop
inc
jg
push
lea
das
lahf
push
push
fiaddl
inc
dec
push
push
or
test
rcrb
test
test
imul
cld
inc
loopne
fisubrs
jnp
push
sub
mov
push
mov
data16
xchg
ds
push
les
int
cmc
mov
push
push
fidivrl
dec
stc
ret
pop
ja
cmp
pop
pushf
fwait
mov
sbb
xor
fldt
pop
inc
fcmovnbe
push
sbb
inc
repz
xor
cmp
push
test
jecxz
jbe
ja
aam
jg
mov
shll
mov
add
cmp
jg
loope
cs
or
add
add
add
and
jno
stc
and
dec
imul
inc
xchg
aas
mov
mov
gs
sarl
jnp
fsubrs
mov
pushf
notb
fidivrl
adc
or
cmp
pop
fmull
jo
sbbb
jno
testb
fsts
out
sbbl
fisttpl
pop
mov
push
mov
repz
and
dec
mov
fwait
pop
loop
in
add
aaa
adc
cmpsb
jne
sti
mov
mov
insl
xchg
jecxz
mov
push
jle
cmp
in
xor
inc
ja
pop
mov
mov
cmc
xor
jecxz
and
mov
pop
arpl
mov
and
add
cmpsl
addb
add
inc
mov
dec
push
xor
ret
push
add
movsl
mov
cwtl
mov
add
int
out
out
imul
cltd
xor
ja
faddl
add
add
add
mov
push
aam
daa
mov
lcall
mov
int
rolb
pop
ret
cmc
push
jo
push
pop
mov
das
jae
push
xchg
mov
mov
outsb
fsub
sub
lods
sbb
cmp
jge
cmp
lods
xchg
push
sub
pushf
push
shrl
jg
sbb
ret
pop
dec
imul
adc
jp
iret
js
rolb
or
call
push
aaa
hlt
out
mov
es
or
jmp
subb
pop
bound
push
scas
repnz
cmc
les
sub
cs
test
gs
push
jbe
add
cmp
ljmp
dec
les
push
aad
rorl
shlb
inc
lret
ss
cld
es
fldcw
sub
push
sbb
in
ss
or
mov
add
psubusw
push
xchg
fsubrs
xchg
xchg
xor
imul
add
add
add
loopnew
inc
dec
jae
push
imul
jmp
testb
je
outsb
inc
les
sbb
pushf
cmpsl
das
bound
sub
mov
or
cmp
scas
rorb
dec
fsub
mov
mov
sahf
inc
cwtl
pop
inc
lcall
ss
mov
push
push
mov
ret
and
sbb
mov
add
out
je
xchg
mov
adc
lds
jp
mov
mov
push
testb
mov
flds
xor
pusha
mov
pop
mov
mov
ljmp
jnp
inc
enter
mov
lds
and
addr16
test
jae
out
dec
cmp
nop
in
push
inc
mov
xor
movsb
jnp
jbe
mov
jb
lea
adc
or
inc
lahf
and
sub
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
or
cmc
add
add
fucomi
jnp
leave
loopne
ret
lahf
mov
or
repnz
add
mov
push
andb
pop
es
cltd
cli
sahf
inc
xor
mov
jl
leave
mov
add
in
mov
movsb
paddsb
incl
loop,pt
daa
aas
sub
ret
xor
or
sarl
dec
outsb
adcb
or
punpckhdq
mov
roll
pop
pop
mov
pop
rcrb
pop
mov
lcall
xchg
shr
jno
mov
negb
clc
mov
test
jnp
es
stos
sbb
push
dec
xorl
inc
lods
call
ss
mov
push
mov
rorb
sub
dec
dec
into
and
nop
add
xlat
in
out
iret
lds
mov
das
push
mov
adc
push
stos
movsb
dec
fistpll
and
or
add
pop
dec
jle
jg
std
fldt
cmp
cli
dec
addr16
filds
add
add
add
lret
cmp
pop
loop
adc
mov
sub
push
mov
sub
lea
push
popf
push
shlb
loope
cld
loop
fbstp
and
fsubrs
test
push
in
mov
aad
mov
rclb
jmp
clc
loop
pop
movl
lret
outsb
jns
xor
dec
gs
std
paddsb
out
xor
aad
inc
mov
faddl
shl
int
lds
jo
push
mov
imul
pushf
sbb
jecxz
sbb
div
pop
push
iret
adc
out
movl
in
or
int3
rol
outsl
xchg
into
shrl
in
pop
pop
sti
adc
arpl
mov
enter
sar
jb
mov
mov
jb
les
cmp
jp
test
int3
lahf
lea
or
cmp
ljmp
sarl
stos
dec
loopne
add
add
add
movsl
jnp
add
out
adc
or
sub
jns
mov
iret
lahf
or
xchg
std
aad
and
or
out
mov
sbb
lea
fsubl
lahf
mov
fists
pop
or
sub
out
jmp
dec
and
stc
and
lret
je
mov
fldenv
mov
ficomps
or
dec
cmp
jge
mov
ror
mov
xchg
xchg
leave
adc
add
cmc
adc
cmp
xchg
xor
jmp
pushf
rolb
cmpsl
adc
jne
adc
jo
dec
dec
shl
das
sub
mov
jmp
cltd
push
inc
sbb
and
test
sub
shrb
outsl
movsl
add
add
sbb
jmp
mov
sbb
gs
loope
add
add
add
clc
pop
movsb
dec
int3
out
dec
arpl
ja
icebp
cmc
xchg
jecxz
mov
pop
jae
push
cmc
sub
xchg
popa
mov
jnp
mov
dec
stc
xchg
repnz
pop
adc
cld
jl,pt
dec
ja
daa
sbb
ret
sbb
mov
out
adc
mov
cmp
push
pop
jle
or
push
sub
dec
fsubs
lret
es
mov
xchg
lcall
cwtl
jbe
mov
hlt
popf
mov
popa
adc
add
xchg
pop
pop
dec
or
inc
shl
repnz
imul
pushl
stos
sub
mov
aaa
inc
sub
insb
arpl
loope
leave
test
mov
movsb
mov
xchg
push
nop
jl
and
fdivrs
fs
ja
mov
push
mov
cli
shrb
ljmp
add
push
out
jp
dec
pop
jecxz,pt
xor
add
cmc
add
add
xor
cmc
jae
fldcw
cltd
mov
rep
int3
cmp
sub
cli
addr16
aas
add
push
imul
push
add
in
and
sub
or
lds
add
fstl
mov
xchg
icebp
lods
xchg
cmp
fsts
xor
and
loop
daa
sahf
cli
sub
push
cmpsl
lock
jns
mov
test
testb
clc
icebp
or
jg
or
cmp
add
aaa
or
xor
mov
xchg
and
repz
push
or
cli
adc
sbb
arpl
ficoml
pop
sbb
enter
mov
aaa
in
out
testl
jno
sub
xchg
mov
das
inc
sbb
xchg
adc
pop
cs
or
pop
in
xor
or
add
jg
mov
lcall
mov
pop
sub
add
cmc
add
add
les
xorl
mov
add
sbb
pop
add
cmp
loop
and
mov
mov
jno
add
stc
mov
aam
test
stc
xor
cld
mov
xor
lds
popf
icebp
ja
cli
fsubs
int
adc
gs
js
cmp
repz
inc
loop
into
xor
mov
sbb
sbb
lods
movsl
xchg
lret
popa
lods
fildll
push
jle
testl
sbb
xchg
sahf
cmp
pop
sub
js
insl
nop
mov
inc
jo
dec
shlb
inc
add
stc
loope
add
movsb
xchg
imul
or
imul
or
push
push
hlt
xchg
ja
push
fsubrl
insl
ror
jae
fisttpll
cmp
push
out
movsl
loope
xchg
mov
std
sbb
mov
add
add
mov
jns
daa
data16
push
in
add
add
add
movsl
mov
stc
xchg
mov
mov
xchg
test
into
cmp
das
sub
in
shrl
or
lea
and
xchg
insl
pop
mov
ficoms
adc
sbb
je
xlat
rcrl
ss
jb
test
add
mov
int3
pop
jge
mov
cmp
out
outsl
data16
stc
sti
jg
andl
sub
call
shll
pop
pop
adc
fisubrs
pop
mov
rcl
pop
jns
scas
add
push
sub
mov
sub
inc
imul
add
push
push
mov
sbb
and
mov
bswap
loop
popa
mov
ret
lods
int
sbb
sbb
mov
xor
mov
repnz
loope
in
shrl
lods
scas
and
add
dec
pushf
ljmp
add
add
fadd
fsubp
jnp
push
xor
sahf
adc
add
cmc
add
add
bswap
cs
arpl
push
adc
loop
lock
les
and
adc
or
cs
adc
mov
lock
sub
aaa
rclb
pop
inc
in
xchg
pop
and
adc
out
add
mov
inc
lods
xchg
or
jge
mov
cmp
add
sub
cmp
sti
cmp
subl
mov
leave
xor
mov
scas
into
xchg
xchg
jp
jmp
outsl
leave
mov
ror
push
push
lret
xadd
mov
cli
mov
pop
xor
insb
aam
pop
in
ret
jne
daa
movsl
ss
inc
mov
xor
loop
adc
addb
sub
js
inc
test
mov
jecxz
imull
mov
fisttpll
xchg
xchg
orb
inc
or
push
xor
add
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
ljmp
fwait
add
pop
jmp
out
cs
pop
arpl
insb
xor
mov
outsb
xchg
push
outsb
imul
repz
xchg
test
dec
and
or
repnz
and
fisttpll
dec
movsb
notb
sub
fsubrl
outsl
sbb
outsb
or
mov
ss
das
notl
xlat
icebp
push
stos
cmp
pop
inc
in
mov
lea
adcb
push
jbe
loope
mov
test
or
pop
stos
mov
mov
sbb
sbb
mov
pop
jmp
dec
jb
mov
xchg
mov
out
addr16
daa
addr16
mov
push
xor
jl
mov
add
ds
inc
jne,pt
jle
rcll
repz
mov
inc
jne
test
repnz
push
sub
lea
pop
jbe
ja
sti
dec
push
sbb
mov
cmc
add
add
jne
push
repz
pop
cmp
cmp
data16
pushf
pop
mov
sub
aam
nop
popa
rolb
push
sub
cmc
scas
lret
div
mov
popa
jecxz
mov
push
mov
fsubs
stc
inc
sti
lods
mov
lea
ret
pop
icebp
mov
dec
and
cmc
pop
mov
clc
enter
pop
jecxz
lock
mov
pushf
dec
xchg
or
ret
mov
int3
lcall
xchg
sti
popf
mov
push
add
xor
in
sbb
mov
mov
sbb
out
enter
cmpsb
test
std
shrb
dec
add
clc
scas
mov
pushf
inc
repnz
jp
std
cmp
mov
lret
mov
jp
and
sti
int
dec
add
add
into
arpl
inc
push
cmc
or
into
pop
pslld
add
cmc
add
add
out
in
aaa
lret
jge
inc
outsb
push
lods
push
lods
in
jo
jb
push
ror
mov
jne
lods
into
lock
pop
dec
push
jae
pop
cmp
lret
or
jmp
dec
in
jmp
adc
xor
neg
mov
jmp
mov
adc
sub
enter
mov
pushf
aad
cli
movntps
jge
add
xlat
or
pop
outsl
loop
xor
pop
pop
ds
out
hlt
lods
and
lret
mov
jle
sarl
mov
roll
ficomps
jle
lret
push
fs
push
loop
jge
insl
pop
les
xchg
cmp
arpl
pushf
mull
sbb
sbbl
jo
or
loopne
in
pop
mov
call
dec
aas
add
fisubl
loopne
dec
inc
and
add
ja
decl
jecxz
mov
out
add
cmc
add
add
out
sub
sbb
bnd
pop
in
cmp
mov
xlat
fmull
push
icebp
cmpsb
fucomp
stos
push
mov
dec
frstor
sbb
sub
sbb
or
cmpsl
xchg
dec
jo
je
mov
cmp
lcall
mov
std
push
xor
lock
int3
shll
divl
cwtl
ret
mov
rolb
pop
std
and
cld
adc
insb
cwtl
nop
push
add
cmpl
in
xchg
in
ficomps
cli
mov
in
sbb
mov
cld
in
push
xor
adc
add
jp
add
push
sahf
jns
or
loopne
mov
adc
enter
xor
mov
push
nop
ss
xchg
in
cmp
lock
add
add
lock
jg
mov
test
fnstenv
cmc
add
add
insl
out
repz
cmpsb
call
mov
push
jmp
sub
into
ljmp
cmpsb
pop
xchg
sub
iret
push
je
imul
imul
sbb
cmpl
xorl
sub
data16
aam
fisttps
sub
popa
les
negb
cmc
jb
cld
pop
sbb
dec
sbb
out
mov
push
lods
mov
cmp
outsl
or
lcall
mov
or
bound
movsb
bound
popa
push
loop
jle
aas
jmp
fcmovne
dec
int
dec
cltd
in
or
rcrb
cmpl
xor
scas
lcall
push
dec
or
fdivrl
jbe
sbb
pop
xchg
outsl
fsts
mov
inc
pop
cmp
adc
cmpl
sub
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
xor
out
ljmp
clc
in
outsl
add
loop
sub
pop
cld
notl
cmp
add
repz
jecxz
rcrl
movsl
xor
and
cmpsb
cmpsb
or
add
sbb
cli
subl
sbb
push
push
mov
xchg
add
mov
mov
sub
jp
int
push
insb
adc
jmp
scas
repz
fbstp
daa
out
movsb
mov
outsb
or
pushl
vmread
add
outsl
cmpsl
mov
test
je
pop
pop
stc
loope
sbb
jl
add
out
jg
adc
divb
mov
shlb
imul
loopne
cmp
ret
test
movsb
jl
lea
data16
jg
or
sahf
push
inc
cmc
cli
out
mov
aas
jecxz
cs
and
stc
mov
dec
js
stc
mov
push
nop
aad
dec
jmp
add
add
add
sahf
push
imulb
xor
cltd
cmc
inc
xor
sub
lods
fstpt
das
test
mov
dec
push
inc
or
je
mov
dec
nop
xor
cmc
ficoml
mov
xor
aas
sbb
push
xlat
jle
jno
lcall
popa
lock
cmpsl
outsl
mov
lds
xlat
sbbl
jle
mov
add
pushf
pop
cltd
add
inc
out
std
mov
das
sahf
cmpsl
test
push
sbb
mov
mov
jl
mov
aad
adc
lcall
dec
adc
fwait
pop
std
pusha
xor
push
add
movsl
nop
test
xchg
adc
int
sub
inc
xor
pop
sbb
js
adc
dec
push
subl
dec
pop
mov
mov
add
add
insl
repz
add
call
in
add
cmc
add
add
adc
pop
lahf
pushf
aaa
loopne
movsb
js
and
or
lahf
mov
push
lea
jbe
cmp
ret
andb
jle
sub
leave
test
xchg
cli
aad
lret
push
cmp
adc
xchg
push
movsl
xor
dec
mov
fists
movsl
push
lahf
push
cmpsl
dec
insb
js
scas
decl
push
and
dec
and
sub
loope
adc
pop
rorb
sub
lahf
stc
sub
fdivr
hlt
stc
iret
jp
das
lret
test
int3
dec
jmp
mov
aad
push
pop
jae
enter
pusha
pop
pop
mov
sbb
shll
in
mov
outsl
inc
cmpsb
mov
ja
xchg
dec
fisttpl
cwtl
xor
xor
and
jecxz
mov
and
dec
rcrb
inc
les
push
push
cmp
adc
adc
fnstenv
cmp
jnp
sbb
mov
add
add
mov
sbb
push
mov
ja
movb
ja
add
pop
bound
add
insb
xor
and
mov
mov
mov
sbb
stos
shrl
addb
jns
push
addr16
sbb
add
orl
ret
lods
movsb
or
enter
push
jecxz
outsl
dec
imul
dec
test
and
in
cmp
gs
popa
jg
add
stos
or
testb
pusha
test
dec
xchg
or
fwait
jmp
movsl
fwait
adc
insl
scas
out
push
xor
data16
mov
push
lcall
dec
mov
insl
stc
loope
push
pop
aad
fcom
imul
js
lret
cli
mov
push
jns
fsubs
int3
push
xchg
repz
cmp
roll
add
subb
jmp
popa
test
movsl
out
add
cmc
add
add
jne
sti
xor
into
cmp
rolb
mov
xor
sti
mov
cmpsb
sbb
or
push
shlb
roll
push
cmpsl
mov
jp
push
sar
loopne
add
sub
imul
mov
or
sarb
in
sbb
mov
dec
out
std
sarl
or
ds
xor
jno
mov
dec
mov
stc
jb
dec
pop
jne
mov
in
push
lcall
sarl
popa
pop
test
fdivl
mov
inc
lods
imul
out
sbb
sbbb
mov
stos
imulb
outsb
or
xchg
mov
inc
inc
pop
dec
hlt
pop
jg
dec
shll
adc
scas
enter
mov
or
cmc
das
cmp
jp
add
add
jb
scas
cmp
int3
repnz
out
add
cmc
add
add
sbb
hlt
xchg
adc
sub
mov
push
nop
ror
loopne
stos
ds
mov
add
jae
imull
cmp
ds
push
push
cwtl
cmc
pop
insb
dec
mov
pop
add
call
aaa
push
xchg
test
movsl
xor
mov
cld
sarl
jp
xchg
pop
aad
push
pop
jp
mov
and
mov
inc
lds
push
mov
cmc
jns
push
negb
js
sub
and
clc
jo
out
dec
scas
fisubl
cli
daa
test
jp
leave
cli
cmc
push
add
popf
ds
test
sub
sbb
sbb
movsb
dec
add
fsubl
in
jnp
sti
fucomip
ja
cmpsl
mov
jp
das
fists
mov
xor
sub
in
jo
add
mov
xlat
mov
bound
lock
cmc
add
add
mov
iret
js
xchg
cwtl
xorl
arpl
mov
scas
hlt
add
xchg
push
jge
iret
jge
add
shrl
inc
xor
mov
imul
pop
jmp
out
leave
stos
push
loop
mov
add
jecxz
mov
les
enter
inc
ret
addl
pop
add
xchg
push
dec
push
je
cmpsb
add
mov
xor
xchg
cli
and
sub
test
mov
and
test
mov
push
out
adc
loope
push
std
and
or
mov
rcll
call
lods
push
or
stos
addl
loop
sbb
enter
repnz
jae
lret
orb
mov
inc
jge
sub
dec
out
ja
push
fiaddl
add
lods
cmp
lods
aas
jp
int3
icebp
sahf
popf
dec
das
test
add
cmc
add
add
jp
xor
rol
enter
sub
es
pushf
gs
rclb
mov
jmp
aaa
ret
dec
jnp
cli
lods
or
je
or
add
mov
lcall
add
test
lret
and
or
xchg
add
mov
jge
shl
mov
sbb
int3
push
out
cmp
negb
pop
aam
loopne
adc
mov
rol
in
dec
sub
das
inc
pop
popf
pushf
pushf
add
dec
int3
and
movsl
ret
push
cmp
inc
gs
imul
push
add
mov
xchg
jae
shrl
enter
popa
pop
sbb
roll
fstl
pop
add
sub
jno
stos
dec
test
cmp
sbbl
loop
fadd
sti
mov
push
fnstcw
add
add
add
mov
sub
add
cmc
es
ds
adc
sub
xchg
dec
pushf
scas
inc
insl
into
outsl
lret
push
adc
mov
rclb
dec
adc
aad
push
out
fimull
inc
movsl
and
inc
push
nop
je
sarl
mov
popf
inc
xchg
fs
lods
dec
push
fldl2e
sub
outsl
in
in
clc
stos
ret
jg
sub
arpl
xchg
sbb
popf
fisubrl
xor
xor
pop
xchg
dec
xor
mov
pop
xchg
cmp
push
int
pop
call
mov
imul
adc
or
insb
in
mov
loopne
pushf
inc
inc
pop
push
mov
aam
jbe
dec
mov
pusha
mov
dec
xchg
ret
adc
jae
test
call
and
ficoml
int3
adc
cwtl
dec
es
pushf
add
mov
cmpsb
arpl
add
into
adc
neg
jge
push
xchg
xchg
adc
add
add
add
or
les
push
lock
hlt
xor
test
mov
in
dec
fadds
mov
nop
gs
and
or
jae
test
out
test
arpl
jmp
and
jno
jbe
pop
jne
push
aam
and
sub
xor
cmp
or
xchg
mov
fildll
cmp
mov
mov
lret
dec
mov
stos
repz
sahf
jo
in
sar
cmp
sahf
push
mov
pop
dec
xchg
mov
movsb
stos
adc
arpl
in
mov
pop
sub
cld
sub
insl
movsb
cmp
cwtl
int3
mov
movsb
out
pushf
popa
and
cmp
adc
mov
sbb
adc
out
add
and
pusha
clc
adc
ret
arpl
andl
add
add
dec
sub
or
loop
arpl
add
cmc
add
add
loope
repnz
cmp
sbb
inc
push
aam
jmp
cltd
sbb
cmpsb
jae
sahf
pusha
mov
shl
sbb
mov
xor
xor
sub
add
mov
cmp
repz
jp
dec
enter
ficoml
sbb
push
xchg
xor
xor
mov
pop
imul
jns
mov
mov
sbb
fisttpl
sub
dec
mov
pop
sub
jecxz
and
orb
mov
cmp
dec
adc
andb
xor
jne
or
aad
fisubs
dec
in
subb
cli
sub
pusha
mov
xchg
push
fs
jb
xor
out
xor
in
push
or
inc
add
call
data16
add
add
ja
and
aaa
negl
sahf
icebp
out
cmc
add
cmc
add
add
or
sbb
push
jle
and
cmpsl
mov
loopne
aad
pusha
cmpsl
aaa
add
mov
lods
insb
pop
sti
add
stos
ret
sarb
sbb
sub
fwait
gs
add
cmp
mov
push
mov
ret
sbb
and
sub
mov
and
dec
xor
mov
mov
aam
fnsave
dec
push
mov
or
xchg
dec
je
popa
xchg
adc
shll
xchg
ds
cmpsb
push
fcmove
pop
loope
lea
xor
sub
imul
sub
adc
repnz
vpunpckldq
out
push
rcrb
out
int
jl
scas
imul
push
outsb
xlat
mov
cmp
mov
push
in
jae
sub
shl
daa
mov
add
in
xchg
jecxz
jmp
mov
in
addb
testb
cmc
add
add
jns
popa
cwtl
jae
add
adc
orb
dec
fcompl
std
inc
inc
xor
jbe
pop
xchg
fucom
mov
popa
and
mov
push
xor
xchg
or
clc
inc
outsl
add
dec
xchg
xlat
mov
xorb
lcall
xchg
pop
out
popf
imul
push
push
ds
add
arpl
cwtl
stos
pop
orb
fnsave
nop
cmpl
inc
mov
outsl
push
stc
inc
push
mov
pop
sbb
sub
sub
pop
pusha
aam
push
mov
push
add
sbb
and
mov
sti
sub
pop
cmp
adc
or
shrl
adc
xchg
jmp
cld
and
adc
mov
jecxz
sahf
mov
cs
lret
and
add
add
jne
cmp
pop
lret
xor
add
cmc
add
add
enter
cmp
rcll
daa
sahf
adcb
add
xchg
sub
pop
imul
lds
fsubrl
xchg
outsl
dec
cwtl
cmp
imulb
cmp
lds
or
lea
cmpsl
movsb
inc
lods
fcoms
outsl
lea
arpl
daa
inc
insb
ror
mov
inc
bswap
out
pop
rorl
or
mov
in
imul
push
out
inc
aad
sbb
cmp
jne
nop
jnp
cmp
push
sub
out
add
pand
cmpsl
pop
fadd
sbb
push
mov
stos
sbb
cli
in
imul
lds
sbb
stos
inc
out
inc
pop
cmp
shr
cmpsl
lret
sbb
jmp
push
or
fiadds
push
outsb
add
add
sub
scas
fdivr
fnstcw
cmpl
out
clc
add
cmc
add
add
pop
or
clc
push
push
insl
data16
mov
adcl
xor
cmp
mov
in
rcrb
add
aas
ret
sub
repz
or
les
or
in
aad
add
rorb
push
out
or
cmc
loop
xchg
lock
or
pop
mov
rclb
shll
aaa
mov
cmpl
cli
pop
mov
jl
mov
insb
push
insl
xchg
dec
popf
push
pop
das
stos
fistpl
fdivr
jge
mov
xor
sahf
mov
add
sub
lds
aad
lret
clc
xor
insl
sbb
push
insb
fimuls
xor
inc
icebp
fs
ret
fsubs
clc
mov
pop
jae
mov
fcmovne
xorl
call
xchg
mov
aas
mov
add
add
add
xor
xchg
fwait
bound
dec
inc
sar
sub
add
cmc
add
add
push
push
cmpb
ljmp
lahf
icebp
movsb
fisubrs
xchg
mov
adc
stc
stos
pop
and
xchg
and
jno
int3
xchg
or
sbb
out
add
mov
sbbl
fsts
lret
adcl
bts
fiaddl
pop
scas
adc
lock
sbb
int3
sub
fistps
mov
or
arpl
negb
enter
loopne
scas
repz
dec
dec
xchg
push
rcr
mov
adc
fstps
pop
repnz
mov
shll
or
ret
ret
jecxz
aaa
pop
movsl
jo
lods
or
and
dec
add
push
ja
nop
mov
aam
lret
mov
pop
js
push
and
add
adc
int
in
idivl
pushl
inc
pop
imul
add
cmc
add
add
xchg
lods
faddl
xchg
xchg
out
adc
add
rcll
str
fdivs
or
inc
mov
jmp
notl
fists
test
mov
js
xchg
mov
lcall
aas
sbb
inc
dec
jbe
pop
adc
push
inc
popf
fs
or
in
push
xlat
xor
dec
xchg
xor
ja
fiaddl
leave
rorb
out
shrl
int3
push
mov
push
cmp
bound
jno
sarb
push
les
mov
push
xor
int
std
jmp
dec
xorb
mov
fwait
or
push
adc
lea
xor
and
inc
cwtl
cmp
and
mov
mov
mov
pop
mov
daa
push
shlb
cltd
int
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
or
pop
or
lods
cmp
sub
imull
inc
sbbl
xchg
or
push
xchg
es
pop
clc
mov
add
pop
sarl
mov
xchg
push
mov
dec
cmp
in
addl
mov
jo
cmp
repnz
mov
ret
es
ss
sahf
fcomip
mov
pop
lret
push
cltd
pop
cwtl
insb
shl
sub
pop
cs
and
push
sub
adc
sti
xor
addb
add
addr16
and
stos
and
inc
cld
inc
push
sub
test
mov
cmp
mov
mov
xchg
jle
push
push
push
sub
out
pop
xlat
pop
mov
cwtl
les
lods
mov
pop
pop
pop
sbb
push
xchg
testb
add
add
lcall
mov
adc
or
add
cmc
add
add
cmp
into
pop
movsl
rcrb
cmp
arpl
pushf
adc
and
cmp
add
stos
sbb
call
mov
cmpsb
adc
or
pop
push
aaa
pop
jecxz
dec
add
xor
add
pop
dec
je
add
cmp
fidivl
loop
pushf
in
sub
mov
sti
xor
sbb
in
xorb
adc
mov
pop
cltd
inc
lock
xchg
pop
test
mov
les
inc
jo
and
xchg
jns
mov
push
cmp
mov
in
inc
pop
faddl
mov
in
stc
aam
std
or
ret
test
je
in
mov
and
jle
push
xor
pushf
cld
add
push
iret
cmp
dec
hlt
outsb
xchg
adc
jno
mov
fldcw
pop
pop
cld
add
add
jae
cltd
dec
mov
fs
add
cmc
add
add
mov
mov
fdivl
pop
lcall
fimuls
int3
add
es
testb
loop
es
movsl
pop
ss
push
xor
ja
xchg
neg
or
mov
out
xchg
mov
and
or
jg
xchg
inc
out
lods
sti
stos
movl
jmp
or
xchg
cmp
push
daa
mov
cmc
jmp
xchg
inc
or
pop
push
xchg
in
out
ljmp
xor
xchg
or
cmp
add
xchg
ja
push
jne
mov
leave
sbb
imul
add
stos
je
scas
lock
jae
mov
jp
jns
add
icebp
mov
aas
clc
push
aas
cwtl
fcoms
and
or
xchg
frstor
pop
loop
testb
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
shrl
cmc
std
add
cmc
add
add
dec
lcall
cltd
stos
xor
sti
lods
dec
loop
mov
clc
lcall
idivl
mov
dec
push
or
push
inc
xchg
int3
jmp
add
popl
test
fwait
mov
pop
daa
mov
pop
insb
xchg
pusha
call
repz
out
loop
xor
jne
decb
fwait
cwtl
mov
push
flds
pop
sub
xchg
iret
add
or
nop
repnz
jno
dec
out
jge
xor
jnp
xchg
shlb
xchg
mov
push
dec
push
xor
in
xchg
push
roll
cld
inc
cs
adc
lds
mov
cmp
orl
aad
cld
xchg
test
jno
jnp
lods
xor
adc
ret
js
repnz
mov
push
mov
mov
lret
cld
adc
add
add
test
jg
xor
or
adc
cmpsb
ljmp
add
lea
mov
adc
jae
mov
test
mov
addr16
push
inc
cmp
insb
sub
jl
loop
mov
jo
pop
stc
dec
xchg
dec
andb
xchg
mov
in
adc
and
cmp
movsb
icebp
movsb
int3
loop
push
jp
mov
lea
cltd
cmp
and
xchg
iret
insl
testb
push
jbe
loope
mov
jnp
rcll
jmp
jns
lods
lock
push
pusha
mov
mov
mov
sbb
push
test
push
bnd
cmp
mov
lock
mov
movsb
xchg
cmpsl
push
scas
mov
movsb
mov
out
pop
adc
movsb
fmul
jo
fistps
dec
and
fmull
mov
rolb
aad
lods
mov
cld
addr16
xlat
add
add
movsb
push
in
cmc
jne
pop
adc
insb
jge
sbb
add
cmc
add
add
xor
jecxz
xor
fnstcw
jecxz
push
adc
in
cmp
sub
out
xor
dec
imul
mov
push
push
iret
dec
lret
aad
mov
std
xor
aas
es
lahf
fistpll
pop
icebp
sub
add
popa
js
or
nop
lea
loope
lock
int
mov
pop
pop
xor
test
das
push
jno
sbb
mov
sub
add
bound
adc
lea
adc
push
les
in
pop
adc
push
inc
in
cli
filds
xor
add
es
mov
sbb
sub
xor
mov
push
xchg
fs
mov
int
or
mov
test
adc
icebp
adc
add
add
out
shlb
aas
out
fwait
aaa
call
xchg
aam
add
cmc
add
add
cmp
insb
jmp
xchg
mov
aam
rcr
sbb
repnz
pop
and
enter
jns
mov
aaa
fdivs
jns
imul
xchg
mov
outsl
sbb
jo
dec
adc
sahf
arpl
sub
loopne
sbb
push
sarb
divb
fwait
or
pop
cld
cmp
jb
mov
loope
fisubl
fs
add
stos
or
mov
pop
lods
clc
mov
jo
mov
dec
mov
movsl
mov
call
aad
push
movsl
repnz
fstl
sub
inc
dec
pop
jecxz
sbb
sbb
stos
adc
cmpsl
push
add
dec
hlt
hlt
mov
jne
mov
decb
cmc
fmull
sub
dec
or
es
adc
sub
sbb
lcall
add
mov
lcall
mov
leave
add
add
add
add
lret
lret
and
in
xlat
or
and
cmp
mov
jne
sbb
sbb
rcrl
in
pop
inc
xchg
mov
sub
andl
mov
mov
scas
cltd
addr16
and
push
push
or
xchg
xchg
shll
pushf
push
mov
add
rolb
jecxz
sbb
sub
xchg
clc
shll
xchg
jle
cmpsl
cmp
lret
add
cli
pop
pop
test
popf
cmp
sarb
outsb
pop
push
jo
mov
insl
sarb
sbb
insl
outsl
sbb
dec
push
rclb
inc
in
fimuls
jl
ret
push
rorl
dec
ds
jle
or
or
jle
out
and
jge
push
xor
cmp
sbb
ds
or
rcrb
ja
mov
xchg
lcall
add
add
ret
bnd
rorb
cltd
jl
out
aas
mov
add
add
xchg
lods
test
dec
roll
add
push
adcl
out
jl
jecxz
aam
push
mov
nop
xor
mov
into
lds
adc
pop
fs
fmul
mov
insb
mov
adc
and
cli
stos
adc
sub
jns
cmp
or
mov
lea
ja
popf
mov
ss
loopne
sbb
inc
jne
negb
adc
in
xchg
lret
lea
jns
icebp
xor
and
cli
les
out
dec
sbb
mov
dec
sahf
fwait
mov
adc
pop
mov
and
xchg
inc
jmp
mov
mov
outsb
or
setnp
jbe
fnsave
mov
scas
xor
sub
gs
dec
ss
iret
xlat
mov
repz
add
add
std
aaa
mov
lret
jne
xor
add
add
add
test
pop
cmpsl
and
pop
xchg
call
ret
mov
imul
xchg
movsb
movsb
pop
stos
sbb
mov
inc
or
cltd
insb
push
jle
jo
lcall
int
mov
cmp
cmp
or
andb
xchg
lret
adc
loopne
pop
scas
or
push
stos
imul
mov
dec
mov
pushf
and
fcmovnb
or
aad
jmp
icebp
gs
mov
or
cmp
in
inc
test
sbb
jb
inc
lret
enter
dec
lret
xlat
push
jne
dec
mov
cmp
dec
push
xchg
adc
mov
aad
pop
cmp
fiadds
inc
xchg
addr16
lret
sub
xchg
notl
inc
jmp
adc
xor
mov
out
mov
sub
cld
mov
add
insl
aam
mov
fs
stos
add
stos
test
add
dec
add
add
js
es
pop
test
xchg
sub
dec
cld
in
lret
jnp
cmp
das
ja
loop
jbe
mov
dec
xor
add
mov
nop
jbe
xor
mov
push
fldt
xchg
es
add
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
xor
sub
into
jmp
xchg
cmpsl
stc
and
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
