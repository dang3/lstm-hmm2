mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
sti
aaa
xchg
nopl
jmp
mov
xlat
les
sub
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
fdiv
std
sahf
popa
adc
cmp
cmp
mov
xor
mov
mov
xchg
and
aam
cwtl
add
jmp
push
or
rcll
lods
adc
dec
jnp
pop
in
sbb
cmp
xlat
rclb
stos
pop
out
sarl
mov
aam
xchg
and
jg
popf
adc
sbb
xchg
enter
adc
push
push
mov
sub
sahf
mov
stos
jecxz
nop
sbb
sbb
mov
cld
data16
scas
xor
mov
cmp
xorl
rcrl
stc
lcall
cld
scas
adc
imul
repz
mov
pop
ja
dec
jge
xor
push
pop
dec
xchg
lahf
jle
cmc
pop
jnp
inc
ret
cmpsl
sti
cwtl
call
imul
mov
push
jmp
add
mov
and
movb
jl
test
mov
dec
into
pop
ficomps
mov
hlt
pop
add
xchg
sbb
xor
sub
sahf
jbe
jmp
mov
or
mov
push
xchg
arpl
mov
loop
jns
aas
mov
pop
sbb
add
das
imul
xchg
pusha
ja
leave
gs
jbe
mov
sbb
jb
lods
stc
movsb
push
cmp
fsubp
loopne
lret
ja
cmp
mov
mov
mov
mov
test
and
inc
addr16
jmp
leave
pop
lcall
hlt
adc
leave
pop
mov
iret
push
pop
insl
and
sub
mov
sbbl
cmp
xchg
orl
push
loop
sbb
cmp
outsb
stc
xor
cmp
pushf
iret
pop
cld
sub
or
mov
xchg
cmc
cli
mov
or
mov
sub
imul
inc
cmp
lods
ret
mov
les
int
sub
dec
daa
in
aaa
mov
insb
mov
sub
xchg
sahf
inc
and
call
pop
mov
cmp
jecxz
popaw
pop
arpl
and
lcall
cltd
call
rorb
mov
insb
jb
dec
dec
adc
sub
sub
cld
sub
adc
stc
mov
in
cmp
and
ljmp
inc
cmpsl
nop
das
cmp
js
inc
outsl
shlb
mov
mov
and
in
imul
xchg
mov
insb
les
lret
xchg
and
dec
xchg
xchg
adc
pop
aam
xchg
jns
fscale
and
xchg
nop
into
and
aas
jnp
push
push
out
sub
pop
popa
and
sbb
push
insl
ss
mov
imull
into
pop
or
movsb
shll
mov
ret
cmpb
mov
pop
jae
pop
hlt
pop
repnz
or
sub
push
stos
or
aad
into
push
dec
mov
adc
inc
mov
enter
popa
jb
dec
jmp
mov
sub
mov
and
mov
sbb
sub
fdivl
or
xlat
outsl
movsl
xchg
outsl
shlb
xor
xchg
or
or
jecxz
sub
cli
mov
and
push
mov
push
lods
jle
or
cld
lret
test
sub
bound
jnp
js
pop
lret
mov
pushf
lods
pop
mov
dec
xlat
xchg
daa
pop
mov
mov
mov
test
and
ret
pop
loopne
adc
adc
cmp
out
cli
fs
stos
jl
mov
push
pop
in
inc
and
or
jo
fwait
daa
pop
mov
pushf
in
insb
gs
ss
clc
mov
mov
dec
mov
pop
mov
push
xchg
or
repz
jp
mov
sub
and
addb
cmpsl
inc
push
iret
mov
iret
in
mov
in
adc
in
dec
insl
out
xchg
das
mov
insb
shll
subb
xchg
adc
dec
cmp
sub
out
ret
xchg
sbb
sub
lcall
ss
out
ret
outsb
cmpsb
sbb
dec
sahf
out
push
pop
imul
sbb
out
pop
adc
cmpsl
sar
xchg
cmp
cmp
or
outsl
lahf
adc
mov
mov
fiaddl
mov
xor
jno
dec
mov
test
and
in
pop
xchg
sti
je
fbstp
xchg
hlt
cwtl
ss
sbb
test
sbb
ljmp
dec
push
stos
in
adc
fildll
jl
push
or
push
sahf
das
xor
int3
mov
lods
mov
notb
mov
dec
les
out
jnp
jbe
hlt
pop
rorb
inc
out
mov
or
pop
sti
inc
xchg
loop
adc
pop
gs
imul
xchg
fisubrl
incl
and
sbb
mov
sbb
or
out
jae
not
out
rcr
orl
scas
push
fistps
lods
repnz
cli
dec
mov
adc
loopne
loope
popa
pop
aaa
jae
ret
inc
adc
xchg
sbb
mov
scas
adc
loope
sub
loopne
mov
adc
in
push
adc
adc
jge
mov
add
in
adc
cmp
mov
jle
push
int3
pop
shrl
shll
loopne
in
lcall
lds
pop
clc
outsl
pop
and
mov
xadd
imul
push
test
mov
test
dec
push
pop
sbb
neg
loopne
adc
shlb
call
lahf
or
fisttps
scas
shll
jo
fwait
cltd
xor
push
jl
fistps
inc
out
iret
jl
pop
push
or
vandps
add
pop
sbb
scas
adc
xchg
add
scas
lahf
iret
mov
pop
pop
and
xchg
sbb
and
jecxz
sbb
jge
push
popa
dec
movsl
ds
mov
add
add
add
jo
add
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pextrw
imul
xchg
aas
leave
xor
mov
xlat
mov
sbb
mov
mov
jmp
add
call
add
pslld
xchg
or
or
jo
push
rcr
cmpsb
sub
add
iret
sub
or
jbe
movsl
sbb
rcl
es
fwait
jnp
jo
xchg
push
mov
add
sbb
jae
pop
adc
out
add
cmp
je
scas
testb
pop
aad
repz
cli
pop
addr16
not
mov
xchg
adc
xchg
push
add
jmp
add
jb
ds
jns,pt
in
and
insb
pop
pop
mov
inc
daa
fcompl
jno
fst
adc
int3
pop
shr
std
xchg
sbb
fisttpll
test
and
outsb
dec
add
movsl
or
push
jmp
jle
out
iret
mov
xchg
add
lods
notb
jb
mov
mov
xchg
fadd
add
mov
rcll
cs
push
and
cld
xchg
mov
jns
stos
xchg
cs
insl
rorb
stos
dec
repnz
xchg
jne
xchg
fsts
inc
int
outsb
pop
shll
add
popa
mov
and
xchg
cmp
sbb
sbb
mov
popa
leave
jmp
mov
jl
outsl
mov
inc
xchg
shlb
or
mov
in
ret
and
sahf
push
imull
hlt
loopne
je
je
pop
pop
inc
pushf
jecxz
lahf
test
push
mov
orl
dec
mov
sub
data16
sbb
or
fistl
pop
adc
repnz
enter
dec
test
test
mov
cld
mov
imul
std
pop
outsb
sub
scas
adc
out
adcb
lret
jmp
mov
push
gs
loope
jg
lods
pusha
adc
jmp
xchg
je
call
cmp
dec
dec
scas
pushf
xor
shl
stc
xor
lods
loopne
ficoml
xchg
call
sub
orl
jecxz
or
into
push
lahf
cmp
int
in
bound
inc
sti
xchg
add
mov
cltd
mov
adc
sub
fwait
sbb
inc
xchg
in
repz
mov
iret
insb
loop
or
pop
fisubl
mov
sbb
enter
fildl
mov
jnp
lock
notb
sub
gs
pushl
imul
mov
jo
add
and
xor
add
mov
mov
int
out
bound
mov
popa
in
cltd
mov
fmulp
mov
xor
fs
push
adc
gs
fnclex
inc
gs
jns
cmpsb
xchg
xor
or
adc
or
leave
adc
aam
subl
scas
or
jp
adc
mov
and
fildl
jns
mov
out
nop
inc
mov
pop
test
push
adc
imul
dec
lret
rdmsr
adc
outsb
inc
shlb
sbb
jno
jge
sub
dec
cltd
sub
add
jbe
bound
pusha
mov
cmp
cmp
sub
dec
pop
ret
repnz
stos
fdivs
lock
push
mov
js
pop
sub
inc
fbstp
and
cmp
fisubs
mov
int3
inc
test
lcall
cmp
jmp
push
cmp
mov
cmpsb
dec
jno
shlb
out
mov
pop
push
mov
test
mov
aam
mov
mov
scas
lods
mov
mov
loop
je
shl
cmc
fistpl
popf
push
mov
inc
std
cld
arpl
popa
mov
clc
sbb
dec
sti
aam
inc
imul
xchg
lea
std
mov
cmp
adc
stos
sub
mov
andl
xchg
js
or
stos
xchg
xchg
jnp
and
push
mov
stos
adc
addr16
in
pop
sub
cmp
mov
adc
jle
sahf
ss
cmp
pop
sub
sbb
mov
das
repz
lea
repz
fsubl
push
popl
decl
scas
mov
insl
mov
into
mov
imul
add
clc
test
lods
adcl
xor
and
push
stos
xor
add
push
aad
into
nop
sarl
out
jp
xchg
sbb
dec
or
leave
mov
xor
mov
in
andb
mov
jns
sti
aas
out
lds
sbb
pushl
dec
cmp
xor
mov
mov
lret
fldenv
dec
sub
mov
lock
mov
sar
ret
xchg
popa
lret
aaa
dec
mov
sub
inc
fidivs
das
into
cwtl
jl
pop
xchg
add
adc
xorb
jge
bound
dec
push
pop
dec
xchg
int
sbb
scas
xlat
cmp
xchg
and
mov
aaa
fwait
es
shrb
mov
leave
stc
mov
dec
rorb
cli
lds
add
pop
loopne
pop
nop
cld
das
dec
cld
sub
popa
sbb
or
and
daa
dec
or
ret
inc
mov
or
mov
pop
dec
xorl
mov
ds
push
pop
std
mov
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
pinsrw
das
cmp
in
cmp
aad
push
aaa
in
test
in
jb
cs
mov
pop
dec
cmp
mov
cld
fiadds
or
push
xchg
and
les
pop
adc
sub
lods
adc
dec
stos
lods
out
inc
fists
dec
pop
pop
push
stos
loop
mov
jg
sbbb
fistl
cmp
pop
ret
sub
repz
pop
arpl
sub
and
jecxz
inc
dec
jae
cs
xchg
icebp
dec
jmp
and
das
loopne
and
cli
repz
outsb
hlt
cwtl
mov
mov
push
cmc
jbe
mov
shlb
test
les
xor
movsb
out
mov
cmpsb
punpckldq
sarb
xor
jp
jle
call
shl
or
nop
jge
dec
enter
cmp
pop
push
mov
mov
inc
push
or
rcrl
scas
push
mov
xorb
sub
pop
in
addl
mov
fwait
aad
xchg
pusha
adc
std
out
adc
int3
in
out
inc
push
jb
dec
lods
aam
or
rcr
cmpsl
adc
mov
push
shl
pop
cvtps2pd
xor
xchg
loope
nop
fwait
jg
orl
cmp
aas
in
mov
sbb
cmpl
mov
jae
add
sbb
fld
mov
fs
mov
cltd
lock
aaa
dec
pop
pop
mov
leave
fst
dec
fucomi
cmc
cmp
xchg
lahf
add
sub
data16
add
imul
or
leave
inc
cmpsl
add
movsl
out
cmp
dec
jbe
stos
pop
hlt
out
jns
mov
lcall
movsb
notb
clc
cld
inc
cmpsl
pop
xchg
xor
xchg
sti
pop
jecxz
lret
and
ss
test
add
push
mov
sub
out
inc
je
pop
vminss
pushl
cmp
hlt
push
rcr
imul
ret
dec
adc
jg
jne
pop
jmp
fisttps
and
push
les
push
int
out
iret
add
test
fdivrs
stos
sahf
xchg
adc
jl
jecxz
stc
jne
lods
mov
xchg
sub
scas
push
inc
adc
mov
aam
ret
mov
out
xchg
out
sub
out
std
arpl
mov
cmp
testb
inc
lar
push
push
and
mov
xchg
adc
roll
jb
push
rorb
mov
ret
fldt
fildll
int3
mov
mov
adc
mov
test
leave
in
fidivl
cmp
sub
sbb
push
cmp
jecxz
sub
fs
lcall
inc
mov
push
popf
xchg
sub
mov
push
leave
xchg
fnstcw
cltd
add
pop
xchg
sub
xchg
ret
xchg
mov
cmpsb
pop
gs
mov
sbb
ljmp
lahf
sbb
cli
pop
outsb
adc
cs
iret
adc
out
mov
dec
inc
mov
popf
adc
fcom
inc
lret
aas
fwait
or
js
and
jecxz
sub
mov
pop
jle
xchg
lods
enter
and
sbb
mov
movsb
inc
out
ficomps
std
sub
lret
xor
fadds
adc
inc
dec
fildll
push
push
cmp
fucomip
sub
aam
mov
inc
in
outsb
and
cltd
or
mov
outsl
int
bound
stos
stos
imul
outsb
cmp
loope
push
popa
add
aaa
push
jo
nop
cld
sbb
stos
xchg
fists
orl
stc
cmpsb
shl
inc
scas
movsb
jae
or
add
pusha
daa
mov
es
add
and
push
xor
scas
xor
hlt
add
jmp
mov
rclb
repnz
icebp
mov
mov
pop
jg
sbb
cmp
xchg
mov
loopne
jns
lcall
push
sahf
pop
out
test
leave
jmp
inc
push
inc
and
dec
jo
dec
fcoml
sub
mov
and
mov
shll
test
xchg
mov
in
aad
or
loope
ja
sahf
ljmp
dec
out
push
filds
inc
rol
sub
add
inc
push
jae
dec
roll
sbb
push
mov
ja
cld
pop
push
sub
inc
stos
jle
cld
mov
in
xlat
cltd
enter
add
jno
arpl
cli
in
subl
fiadds
pop
add
adc
dec
lods
xor
fldl
fucomi
mov
insb
xchg
insb
xor
xchg
int3
sbb
leave
xchg
lea
mov
fcomps
push
movsl
iret
mov
imul
ret
mov
sub
iret
fdivrs
mov
push
or
jae
outsl
cmc
inc
or
jg
rolb
fnstenv
mov
xchg
call
xor
ficoms
rcrl
subb
int3
insb
push
or
popf
xchg
push
fdivrs
add
mov
inc
std
inc
call
jno
sbb
icebp
dec
fwait
or
or
repz
xor
lret
shl
das
xchg
data16
mov
pusha
mov
je,pt
cmp
jo
and
mov
in
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
popa
add
pinsrw
cvtps2pd
sub
and
pop
out
lods
enter
dec
pop
lret
pushf
scas
push
add
movsb
mov
cld
jo
jl
insb
jns
or
dec
aas
pop
jne
test
pop
and
in
add
fisubl
fwait
pop
dec
test
mov
adc
stos
mov
lret
fmull
rcrb
sub
mov
loopne
cld
jge
xchg
jg
dec
push
pop
stos
dec
mov
sarl
pop
sti
out
sub
push
mov
jg
into
out
sub
mov
das
jl
ret
push
jbe
xchg
add
cmpb
out
out
imul
adc
pop
add
push
stc
aad
mov
adc
fs
mov
mov
push
cltd
int3
inc
adc
shrl
lret
std
xchg
or
imul
mov
and
std
adc
insb
add
pop
mov
mov
fstps
jmp
je
shl
sub
in
mov
addb
jae
es
pop
push
stos
fs
mov
inc
inc
scas
push
cmp
loope
adc
lods
sbb
sarl
stos
inc
or
arpl
adc
jecxz
push
notb
js
shrb
fs
clc
mov
mov
mov
addb
das
jbe
jg
lret
insl
js
dec
decl
movsl
inc
mov
rclb
jo
xorb
mov
ret
cmpsl
lods
pusha
adc
xor
pop
mov
mov
push
fcompl
adc
dec
inc
fwait
inc
sbb
cmpsl
mov
gs
fdiv
xor
imul
test
lahf
mov
mov
pop
aad
rorl
jp
es
pop
sub
cltd
sub
inc
adc
cmp
cltd
in
jg
inc
lcall
movsb
mov
subl
loopne
in
or
cwtl
test
sti
xchg
imul
xchg
int3
mov
sbb
dec
cld
adc
shrb
xor
ja
fwait
sub
inc
cltd
in
sub
mov
fxch
les
jns
push
into
mov
push
mov
movsl
std
adc
data16
cwtl
push
je
loop
call
mov
xorw
xor
cmpsb
addr16
fnstsw
ss
sbb
xchg
addr16
xor
hlt
pop
ret
lret
mov
mov
movsb
jno
inc
push
scas
xor
or
mov
mov
aam
cs
jb
pop
xor
jo
cs
fcmove
negl
and
xchg
jecxz
pop
aaa
pop
dec
je
add
je
lahf
fs
xchg
add
dec
int
jle
adc
inc
stos
sbb
fstl
jns
insl
adc
inc
pop
lods
nop
mov
repnz
js
xchg
sub
imul
fnstsw
dec
add
repnz
in
movsl
jne
jae
and
pop
test
je
mov
inc
xchg
repz
lods
aam
sub
imulb
divps
enter
ret
nop
mov
mov
push
mov
cli
adc
mov
outsb
mov
xchg
jns
and
xor
ljmp
sahf
arpl
add
and
xchg
xchg
bound
dec
ret
push
mov
adc
push
jb
adc
rcrl
cmpsl
dec
adc
mov
arpl
mov
jnp
test
pop
inc
sub
jge
jp
xor
cmp
and
and
out
jae
sbb
rcl
in
adc
int
cmpsl
les
xchg
sbb
mov
jns
and
rcll
fsubrs
add
ret
daa
inc
push
inc
arpl
cmpsb
adc
lret
stos
adcl
sbb
xchg
cmp
mov
mov
lods
cmpsl
stc
dec
pop
fisubrs
mov
jg
mov
out
cmp
jns
ss
sub
loopne
mov
jp
lahf
in
arpl
xchg
jmp
mov
cmpl
cli
mov
push
aaa
roll
and
std
push
or
pop
mov
movsb
mov
adc
cmp
in
mov
add
es
icebp
dec
jmp
lods
cmpsb
and
cltd
and
xchg
test
add
xchg
loop
loope
and
push
push
push
and
lcallw
fidivrl
fidivrs
xor
in
rorb
in
shll
cmp
dec
popa
or
mov
pop
add
call
mov
gs
add
dec
es
mov
push
mov
jbe
dec
jbe
mov
add
add
sbb
lahf
sahf
adc
or
lret
or
aaa
jp
jnp
mov
out
adc
xor
mov
push
mov
mov
push
xchg
xlat
add
push
pop
mov
xchg
inc
jo
dec
jg
push
mov
out
mull
dec
pushf
cmpsb
divl
xor
out
xor
xor
mov
add
xchg
pop
nop
adc
jns
or
or
test
imul
adc
out
dec
aas
jns
add
shrb
sbb
rcr
pop
jbe
inc
mov
or
xlat
xchg
mov
pop
je,pn
and
fwait
adc
adc
push
pop
add
push
and
inc
les
int3
mov
mov
scas
jecxz
fs
push
jmp
cld
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
push
adcb
packuswb
pop
adc
lea
xor
lahf
or
pop
cmp
or
xor
mov
mov
xor
sub
xchg
pushf
inc
ss
adc
and
fdivs
pop
call
pop
into
jb
push
jb
cmpsb
push
sub
cmp
out
pusha
xor
inc
jecxz
std
daa
mov
fcmovnbe
mov
movb
dec
mov
addr16
xor
inc
jmp
out
mov
or
push
dec
mov
pop
sub
rorb
lods
mov
xchg
pop
pop
cmp
xor
pop
into
adc
lret
pop
and
aas
jns
imul
xorb
xchg
data16
or
dec
push
sbb
iret
jecxz
pushf
or
jae
sbb
xchg
addr16
pushf
sahf
add
cltd
mov
icebp
dec
out
sbb
lds
fs
xchg
test
imul
xor
imul
pushl
repz
add
push
dec
push
loop
stos
cld
test
xor
or
cli
call
jge
jecxz
fnstcw
inc
data16
stos
sti
jl
mov
jg
stc
mov
jnp
rolb
push
pop
or
jp
mov
sbb
jle
lods
cmp
scas
jecxz
int
jl
xor
cmpsl
mov
xchg
nop
adc
lock
les
or
mov
or
sahf
or
aad
xor
mov
cwtl
pop
inc
scas
data16
popa
imul
xchg
nop
loopne
sbb
mov
insl
fidivrs
cmpsb
fdivrl
sub
mov
mov
sbb
or
data16
xchg
xor
pop
lods
aaa
stos
je
hlt
mov
loopne
or
stc
cmp
mov
pop
jbe
rcll
cmp
clc
xor
jbe
sti
cmp
movsl
out
cwtl
popa
add
fldenv
pop
loop
mov
cmp
aas
fwait
inc
push
pop
ja
ss
test
mov
scas
sbb
xor
hlt
fcomp
add
sbb
sbb
minps
mov
les
ja
sbb
movsl
mov
stos
adc
mov
jns
les
stc
sub
push
stos
rcll
mov
mov
adc
fdiv
sub
fsubs
cmpsl
call
nop
es
inc
test
adc
inc
sbb
data16
mov
aaa
addr16
push
add
daa
rcl
jl
cmpsb
mull
dec
hlt
xlat
sub
mov
lods
mov
aas
inc
test
jmp
sbb
add
test
dec
ds
push
rcr
mov
test
push
repz
jp
xlat
pushf
stos
cmpb
pop
jecxz
push
lret
jg
sbb
mov
or
dec
jno
icebp
push
and
fbld
push
inc
mov
rcrb
push
insb
mov
insl
jo
mulb
jl
enter
pop
mov
clc
lcall
inc
ljmp
inc
inc
sub
into
and
xchg
leave
adc
jge
jne
push
jo
jg
sbb
and
bound
jns
sub
mov
rolb
movsl
and
mov
xorb
repnz
inc
xor
and
sub
push
ljmp
inc
jno
push
shrl
in
mov
outsb
sbb
stc
sbb
fsubl
cmp
dec
inc
test
ljmp
mov
mov
jle
sub
cltd
sbbl
out
out
test
xor
sbb
scas
add
add
xchg
xor
sbbl
sarb
test
mov
daa
inc
insl
mov
sub
mov
hlt
dec
out
int3
aaa
neg
push
or
xor
mov
mov
sub
test
negl
rcrl
push
test
sbb
or
push
cmp
fcmove
lahf
mov
ret
lret
lods
xchg
cmpb
out
dec
fs
loopne
ss
dec
out
xor
into
dec
sbb
xor
lret
pusha
lcall
jg
xlat
sub
xchg
out
ficomps
lods
add
cltd
dec
cmp
cmp
xorb
int3
das
daa
pop
clc
imul
loop
stc
jl
jo
ss
popf
loope
fnstsw
or
push
push
push
test
sub
cwtl
add
push
fwait
cmc
cmp
push
add
jp
mov
pop
fcomps
push
dec
push
sub
sbb
or
pop
mov
mov
rcll
dec
imul
fwait
test
jmp
insl
leave
xorl
cltd
insb
adc
int3
mov
adc
dec
push
cli
add
lahf
mov
das
mov
mov
dec
cli
and
clc
dec
dec
hlt
xchg
loop
in
xchg
cltd
xchg
sbb
jo
rol
dec
in
inc
cmp
fdivrl
iret
sahf
jno
dec
mov
adc
or
jle
test
pop
mov
cld
aaa
sub
lcall
pop
inc
sbb
shl
sub
shrb
jl
xchg
mov
sub
popf
out
fdivrs
fmulp
lea
and
and
addl
arpl
clc
xchg
stos
xchg
dec
jns
jb
jmp
pop
sub
fisttpl
cmp
outsl
or
adc
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
jmp
in
rorb
pinsrw
dec
ffreep
adc
xor
enter
dec
scas
inc
mov
std
mov
push
mov
sbb
jle
ret
jne
sub
mov
inc
xor
jne
loopne
jbe
outsl
sub
dec
and
or
sbb
or
arpl
out
fnstenv
shrl
add
imul
es
je
lock
cmp
and
mov
inc
insl
je
rcr
popf
pop
out
imulb
push
push
inc
xchg
hlt
lret
dec
xchg
lods
fbld
push
adc
mov
jg
mov
xlat
aas
jge
jo
cmp
xchg
add
stos
popa
sahf
or
inc
push
cmp
pop
xchg
test
lret
pusha
xchg
bts
lods
mov
lcall
into
fwait
rclb
inc
adc
jmp
jge
mov
adc
add
les
lret
das
les
ret
mov
pop
movsl
icebp
lds
loop
cmpsl
popf
and
roll
shll
pop
call
push
and
add
mov
push
or
jbe
adc
cmp
xchg
pop
nop
es
jbe
mov
cmp
mov
mov
pop
out
pop
pop
sub
lret
idiv
add
fildll
js
insb
dec
bound
pop
iret
or
sub
hlt
pop
mov
daa
int
imul
pop
lahf
ljmp
or
cmp
pop
push
xor
mov
inc
mov
sbb
cs
shll
lret
aas
sub
incb
js
pop
adc
fldl
cmp
adcb
movsl
dec
ja
sbb
push
pop
mov
push
jecxz
dec
cmp
ds
std
arpl
ljmp
or
xor
fcmovne
lea
cmpsb
dec
dec
mov
outsl
xchg
mov
push
lods
nop
add
pop
mov
enter
dec
and
in
lret
push
inc
sbbl
daa
cmc
mov
jmp
pop
mov
cmpsb
in
or
add
inc
mov
popa
dec
outsl
bnd
xor
push
mov
aaa
scas
loopne
xchg
sub
std
ret
aam
repz
iret
rclb
loope
adc
stos
sahf
js
into
pop
pop
shrb
in
sbb
or
les
push
xchg
hlt
jg
sub
jg
or
pop
add
shrb
push
jp
nop
mov
jbe
pop
xor
popa
sub
std
rorl
nop
inc
rol
add
mov
jb
and
xchg
adc
jo
in
repnz
and
clc
pop
addr16
dec
scas
into
enter
cmp
or
xor
ljmp
in
mov
adc
pop
scas
fisttpl
cmpl
lcall
popa
icebp
xorl
jne
call
cmp
imul
cs
mov
sbb
add
rclb
loope
pop
xorl
mov
pop
xor
and
cmp
mov
outsb
cmp
adc
fiaddl
xor
dec
sub
aam
dec
mov
adc
out
xchg
mov
or
pop
test
push
add
jp
jb
add
mov
popf
daa
sarb
or
in
push
fidivrl
out
jle
les
mov
xchg
or
and
jbe
aaa
inc
xchg
jne
ljmp
xchg
cld
or
enter
enter
push
outsl
xchg
daa
lods
xchg
scas
mov
add
insb
out
push
inc
leave
mov
sbb
adc
ds
insb
out
sti
cmp
imulb
dec
add
sahf
sbb
and
imul
add
cld
mov
pmullw
idivl
push
fdivl
adc
outsb
and
mov
scas
push
es
inc
insl
fldt
lods
cmc
nop
cmp
rcll
lock
push
test
shlb
inc
sub
sub
add
sbb
nop
mov
ret
cmp
ss
cld
mov
mov
jae
push
and
int3
adc
adc
scas
rclb
fdivp
gs
xchg
dec
push
insb
push
pop
pop
xor
hlt
inc
enter
push
push
sbb
icebp
pop
icebp
sub
in
ss
sbb
mov
repnz
jmp
xor
xchg
rcrb
cmpsl
mov
sub
xlat
jg
lods
pop
rcrb
into
shrl
insl
repnz
adc
xchg
mov
mov
xor
jmp
push
jle
push
mov
push
aas
jb
filds
push
inc
arpl
inc
out
pop
mov
xlat
xor
stos
ss
pusha
ret
icebp
mov
arpl
sbb
idiv
add
lahf
into
jge
mov
mov
cs
mov
sbb
mov
push
cmp
dec
outsb
shrl
add
out
aas
test
cwtl
dec
ja
push
inc
mov
cmovp
cmc
pop
xchg
mull
rolb
jecxz
sahf
sbb
insb
call
dec
testb
add
adc
or
cld
aaa
jle
xchg
sbb
inc
mov
enter
pop
push
fdivr
sahf
xor
dec
div
mov
xchg
xchg
leave
mov
pop
mov
je
in
push
sbb
sub
sub
adc
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
push
sub
pinsrw
punpckhdq
jl
testl
jnp
dec
lock
stc
test
inc
es
fadds
fstpt
push
sub
fsts
scas
int
bound
ja
mov
repnz
inc
ljmp
imul
sub
shrl
jne
rorl
out
cmpsl
xor
imul
or
pop
mov
inc
mov
add
mov
mov
lock
add
dec
cwtl
dec
sub
insb
shlb
movsl
idivb
jp
add
adc
sbb
xchg
in
xor
mov
ljmp
cmp
push
pop
out
jne
sti
lea
iret
mov
adc
jbe
repnz
pop
cmpsl
cmp
idivb
ja
imul
xchg
jge
fdiv
cmp
fldl
jecxz
movsb
sbb
mov
jg
insb
or
ja
mov
sbb
lahf
pop
xor
cmpsb
add
int
imull
mov
out
cmpsb
xchg
rol
adc
pusha
inc
jecxz
loop
not
fwait
inc
dec
repz
and
fwait
enter
test
call
and
je
adc
sbb
push
mov
inc
cmp
xchg
loopne
adc
and
push
rorb
daa
dec
mov
in
xor
loope
mov
fdivl
arpl
xchg
in
bound
add
dec
push
sbb
push
adc
std
mov
daa
les
lret
dec
inc
rcl
sbb
mov
jg
push
lock
hlt
cmp
mov
inc
or
in
fnstcw
movsb
scas
xor
test
adc
ds
pop
jnp
add
dec
cli
fdivrs
outsl
sub
adc
jnp
pop
mov
sub
mov
cmp
orb
jge
add
mov
inc
dec
and
push
dec
sbb
jg
loope
insb
sbb
aam
loop
or
lcall
sbb
or
fmul
pop
pushf
push
xor
cmp
outsl
std
stos
adc
and
movsb
loop
ret
das
jmp
pop
push
filds
mov
or
cli
cmp
cmp
fmull
sub
mov
push
in
jnp
add
test
cli
jecxz
fucomip
pop
push
pop
sub
cmpsl
and
insl
push
dec
repz
movsl
ja
and
cmpxchg
mov
lods
push
dec
cmp
shll
loopne
in
pop
add
push
ret
stc
icebp
add
cmp
mov
ret
arpl
mov
addl
dec
subb
aaa
and
pop
scas
jge
sarb
inc
mov
and
jecxz
fcmovbe
dec
and
cmp
xchg
push
mov
cmpsb
lock
mov
and
nop
pop
or
xchg
fcomi
mov
or
mov
call
mov
shl
cmpb
xchg
je
mov
outsl
shr
fidivrl
xchg
insl
pop
push
mov
loopne
jo
xlat
pop
rorw
cmpsb
jge
imul
gs
or
push
aam
push
orl
mov
stc
dec
mov
dec
or
cmp
fs
data16
add
xchg
jno
mov
mov
sub
push
stos
adc
clts
mov
movsl
cli
jbe
enter
call
scas
les
aas
adc
mov
fwait
xor
pminsw
dec
inc
mov
pop
push
pop
stos
or
loope
fsubrs
add
call
mov
xchg
and
mov
xor
dec
addl
and
inc
xor
incl
icebp
js
mov
mov
xchg
imul
inc
push
jge
daa
ret
pop
adc
insb
pop
or
sub
pop
or
push
icebp
push
cli
orl
jnp
pop
mov
jle
xchg
fs
stc
mov
ret
dec
scas
push
mov
stos
idivb
adc
lcall
add
pop
std
pop
pusha
out
mov
mov
out
aam
movsb
push
lret
int3
sub
shlb
xchg
mov
fsub
xor
sahf
mov
nop
lods
xchg
push
sub
or
movsl
jne
pop
out
divl
ss
sbb
mov
cmp
add
dec
add
lock
jl
jl
mov
cmp
test
dec
aad
loop
mov
inc
iret
cld
bound
lds
and
lock
xlat
stos
call
iret
push
mov
adc
add
sub
sub
dec
pop
sub
shl
lea
xor
xor
int3
pop
sti
mov
enterw
insb
inc
sbb
jb
jg
popf
leave
aaa
jae
sub
lret
cltd
mov
stos
cwtl
nop
pop
and
cs
sbbb
pop
pop
push
cmpsb
dec
and
pop
or
aas
orb
ret
ret
pop
lahf
xor
pop
fstpl
sahf
ret
ja
insl
dec
or
jne
mov
jnp
jmp
sbb
cmp
mov
cmc
and
sbb
enter
push
push
nop
xchg
sbb
adc
push
inc
aas
imulb
add
enter
aaa
sbb
dec
sub
pusha
and
int3
pop
and
add
push
arpl
jmp
icebp
sbb
adc
lds
rolb
mov
hlt
push
fidivrs
call
lret
and
dec
xor
fnstsw
adc
and
mov
imul
mov
mov
int
mov
outsb
or
loope
lret
out
scas
sub
jl
dec
and
xchg
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
xchg
scas
push
mov
les
pop
add
push
mov
lahf
fwait
call
imul
or
mov
xor
cmp
dec
js
out
jp
stc
ljmp
pop
movsb
push
rcll
mov
cmp
loope
lods
add
xchg
adcl
adc
dec
fnstsw
and
sub
push
sub
add
ret
fucomip
sub
daa
jns
and
pushf
fwait
and
xrelease
lea
jbe
lods
sbb
jge
inc
mov
cli
xchg
aas
inc
or
scas
mov
mov
sti
mov
xor
push
jnp
mov
fs
js
add
sbb
sbb
enter
shlb
push
scas
inc
sbb
fsubs
stos
adc
std
in
aas
and
or
enter
jp
cli
in
lods
aas
and
daa
pop
xchg
or
sbb
stos
dec
jnp
scas
rcr
loopne
in
push
imul
xor
sbb
push
sub
mov
int3
test
aad
pop
and
xor
adc
push
roll
jl
fildll
daa
cld
jae
push
push
push
sub
pop
xchg
nop
lods
punpckldq
rcll
pop
sahf
inc
mov
fs
xchg
adc
ret
push
mov
xor
push
int3
imul
xor
rcll
sub
movsb
sub
push
pop
out
mov
xor
lahf
jg
mov
movsl
push
push
cli
mov
mov
xchg
int3
dec
cltd
lods
pop
iret
xor
push
push
pushf
xchg
bound
lret
jno
mov
or
push
adc
pop
mull
dec
rolb
ljmp
out
pop
dec
add
test
inc
xor
in
pop
ja
popa
cltd
pop
xchg
movsb
jno
cmp
push
pop
sahf
lock
xor
add
outsl
jge
or
ljmp
dec
sub
add
mov
les
lock
pop
mov
repnz
sbbb
leave
aas
test
xchg
roll
adcl
jne
shrl
int3
fnsave
sti
es
add
push
cmc
mov
stos
repnz
pop
pop
repnz
or
imul
mov
jecxz
test
test
mov
lds
repz
fmul
cltd
stos
std
jl
mov
loope
or
jle
xchg
adc
out
jb
adc
test
fistps
mov
out
jecxz
sahf
mov
cld
xor
fisubs
fmul
push
push
adc
cmp
sbb
inc
lock
lea
push
mov
or
scas
jbe
fcmovne
std
xor
in
mov
ret
xchg
sub
xor
push
std
sub
mov
add
lock
add
dec
movb
sbb
popf
iret
sub
sub
push
xor
or
int3
inc
lds
out
mov
mov
push
pop
mov
out
dec
dec
pop
push
push
jl
push
mov
ret
sbb
pop
jle
mov
jnp
dec
pop
pop
inc
aaa
test
cmpsb
inc
jp
paddusw
mov
popf
out
sarl
and
inc
aam
mov
repz
mov
scas
xchg
nop
aaa
sub
lea
fnstenv
mov
lds
in
int3
push
cmp
negb
inc
lret
sti
loop
mov
and
adc
repz
mov
jecxz
cwtl
or
arpl
mov
imul
cmp
xor
add
push
add
or
loope
aaa
cmp
jmp
lods
pop
mov
out
in
add
mov
adc
mov
cmp
mov
cli
icebp
ret
rcrl
xor
int
xchg
jmp
inc
je
imul
aas
les
cld
mov
sub
pop
mov
push
xor
or
push
inc
lods
out
xorl
push
rorl
mov
dec
pusha
cmp
xchg
aaa
mov
stc
or
out
ficoml
mov
sbb
sub
mul
xor
mov
jb
push
test
outsb
bound
inc
roll
repnz
scas
imul
xchg
out
fucomip
or
sbb
fwait
std
jl
add
sub
stc
aas
jno
and
into
xchg
and
dec
decb
add
icebp
clc
adc
repnz
out
xor
xchg
cwtl
out
dec
cmpsl
inc
pushf
ja
insb
adc
orb
fwait
mov
insb
jnp
pushl
mul
cmp
std
push
xchg
pop
xor
stos
add
jecxz
cmp
addr16
pop
sub
cltd
adc
inc
sbb
out
push
scas
dec
or
std
xchg
repnz
outsb
das
lret
mov
nop
add
ja
cld
sbb
movsl
mov
cmp
iret
adc
add
mov
pop
mov
mov
pop
sub
pop
addb
dec
jle
jle
pop
mov
into
dec
aaa
pop
push
push
dec
int3
hlt
lea
movsb
lds
popa
mov
daa
sbb
out
aam
and
out
lcall
int
sub
cli
and
mov
dec
iret
cmp
test
mov
dec
and
lods
fidivrl
pop
in
jns
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
lret
sbb
js
pushf
pinsrw
sbb
js
out
sbb
add
test
ud0
dec
dec
fstl
fdivs
push
sub
test
mov
mov
adc
adc
pop
mov
fwait
jns
cmp
push
icebp
jle
inc
mov
dec
xchg
cmpb
dec
sbb
push
fs
sbb
xchg
loop
and
cmp
inc
lret
ljmp
cmpsl
push
lret
hlt
mov
je
and
in
scas
fisubrl
test
aas
into
loop
dec
xor
sahf
daa
out
int
and
hlt
jo
gs
jae
inc
adc
leave
sbb
and
cmpb
mov
pop
sub
xchg
add
pusha
loope
or
je
pop
out
sbb
ror
xor
out
lea
fisubrl
lahf
adc
ljmp
jo
ret
idivl
xor
jae
xor
mov
pop
popf
mov
push
xchg
xor
mov
sub
mov
mov
inc
xchg
cld
mov
adc
loop
inc
adc
adc
sbb
inc
adc
xor
wbinvd
mov
mov
imul
and
dec
dec
arpl
aas
out
mov
inc
insl
adc
push
inc
push
dec
push
jne
cmp
cmc
mov
jecxz
push
mul
loop
cmp
addr16
push
cmpsl
or
mov
jg
cli
xchg
cli
sbb
in
jecxz
xor
push
ret
dec
inc
into
mov
fldenv
mov
insl
fistps
jge
cmc
shlb
fistl
cmp
mov
xchg
pop
out
fildll
pop
insb
cltd
dec
and
pushf
mov
loope
and
jne
add
shll
push
or
mov
push
imul
mov
sbb
std
lcall
pop
addr16
add
push
jge
mov
call
ljmp
adc
aas
insl
pop
cwtl
cmp
cmp
pop
dec
das
push
popf
and
xchg
leave
nop
fsubrl
clc
filds
cwtl
loopne
andl
mov
pop
icebp
dec
outsl
insb
in
mov
and
xor
add
insb
lea
fmuls
mov
inc
xchg
mov
pop
inc
gs
mov
xlat
dec
xlat
jg
in
lock
sbb
std
push
out
sti
test
mov
adc
ret
bound
call
push
dec
mov
cmp
mov
stc
scas
int
int
mov
sbb
leave
loope
xchg
adcl
cs
mov
popa
lock
push
ret
aam
sbb
fmuls
jae
andl
dec
sbb
shlb
and
xchg
pop
mov
in
testl
or
xor
xor
cld
xor
pop
inc
xor
mov
xchg
icebp
xchg
cmp
cmp
popf
push
adc
push
adc
int3
and
pop
xor
mov
shl
xchg
dec
jge
in
icebp
insl
fisubrs
mov
pushf
orb
out
stos
fdiv
adc
jns
push
fadds
out
mov
cmpsb
xchg
out
hlt
jecxz
ret
or
lcall
dec
shl
or
sbb
cmp
xchg
fsubrs
outsl
in
mov
flds
sbb
jae
pop
or
sahf
jmp
dec
push
aaa
aaa
sub
ljmp
dec
mov
and
sbb
cltd
aad
add
xchg
out
sub
inc
pop
lahf
mulb
fists
movsl
scas
xchg
ficoml
mov
xor
pop
xor
xor
mov
add
jae
sub
je
addr16
mov
jecxz
scas
sub
and
or
int
test
inc
insb
mov
dec
out
mov
lods
ret
push
stos
fwait
sub
mov
dec
ret
pushf
aas
ja
mov
cmpsl
and
push
pop
and
gs
mov
loop
fcomi
pushf
jne
xchg
and
fs
enter
sbb
jne
sub
mov
xchg
jne
icebp
adcb
stos
test
jg
jmp
nop
imul
outsb
outsl
test
sbb
hlt
add
cli
xchg
xchg
cmp
aam
rolb
jno
mov
xchg
dec
stos
mov
mov
or
ja
xor
adc
aam
jne
lods
jae
subb
sub
jns
sbb
sub
mov
icebp
mov
movb
inc
les
out
adc
push
or
sub
xchg
mov
mov
fmulp
jnp
rclb
xor
push
jne
test
pop
clc
cltd
add
jecxz
scas
inc
lds
popf
mov
mov
push
sbb
lds
and
push
ja
std
dec
hlt
mov
xchg
mov
mov
in
mov
lcall
sub
addr16
psrld
xchg
inc
scas
jb
sbb
repz
jle
loope
jge
pushf
loopne
jne
jge
mov
test
adc
push
jg
js
loope
sti
gs
mov
add
rdpmc
lea
inc
push
aam
dec
movsl
sbb
stc
lret
pop
out
sub
sti
les
cmpsl
mov
dec
mov
inc
das
or
cmp
push
repnz
test
xor
das
adc
pop
fcmovbe
fndisi(8087
push
push
fcomi
add
fcompl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
pop
lea
pinsrw
paddusw
adc
inc
int3
dec
push
repz
and
mov
or
mov
mov
pop
insl
and
mov
dec
dec
pusha
cli
aad
mov
mov
hlt
cmpsl
ficompl
and
inc
fsubrl
aad
mov
cli
push
pusha
das
out
ss
lret
or
jno
cmp
stos
sbb
pop
in
sbb
jb
push
add
jg
push
call
lds
sbb
in
pop
and
fimull
hlt
dec
outsb
mov
out
sbb
mov
icebp
ror
fyl2xp1
jge
dec
mov
lock
leave
jmp
rorb
pop
jle
lods
push
daa
nop
adc
mov
pop
std
data16
jbe
jg
icebp
jp
sub
jl
cmp
cld
sahf
popa
push
jl
popa
jb
mov
jmp
mov
popf
hlt
fwait
insb
inc
das
outsl
stc
sbb
fistpl
call
pop
ljmp
jne
xor
and
dec
mov
or
push
ja
mov
pop
cmp
mov
push
inc
sub
sbb
cmpsb
or
testl
mov
jo
inc
jae
insb
xchg
push
out
fmull
mov
orb
add
jge,pt
loope
lret
mov
mov
adc
pusha
in
ljmp
lods
ljmp
lds
loopne
in
xor
movb
popf
push
and
mov
push
inc
cs
cwtl
jns
push
push
inc
mov
clc
movsl
sub
sub
xchg
xor
mov
jg
xchg
cli
mov
xlat
adc
cwtl
xchg
or
outsl
je
xchg
xor
adc
je
adc
cmp
mov
pop
sti
cmp
jae
in
int3
je
and
enter
or
push
shl
sbb
pop
inc
cld
mov
outsl
xorb
sbb
inc
push
jecxz
mov
dec
mov
dec
xchg
cmp
xchg
das
iret
push
lods
cli
subb
aaa
icebp
sub
dec
aam
mov
fwait
mov
hlt
adc
pop
nop
sub
stc
dec
shrl
mov
lahf
in
in
loop
les
and
push
out
test
aaa
dec
jno
subl
loopne
add
sub
or
adc
pop
xchg
sahf
imul
inc
sti
das
cltd
adc
aad
insl
loope
insl
jb
dec
imull
sbb
mov
out
adc
addr16
or
pop
cmp
dec
push
and
jb
fwait
stc
ss
fisttpl
dec
pop
scas
jo
cmp
push
sarl
sahf
mov
movb
leave
inc
movsl
insb
repz
cwtl
loopne
sbb
jl
iret
add
mov
in
call
iret
push
inc
test
scas
add
pop
lcall
inc
iret
sbb
out
sbb
pop
lods
mov
syscall
jmp
stc
ja
add
shlb
lahf
cmpsb
aaa
sbb
mov
cld
mov
inc
pop
sbb
push
movsl
test
add
cmpsl
mov
rorl
push
aaa
ljmp
sub
stos
adc
jl
xor
aaa
cmp
pop
xchg
dec
popa
shll
imul
push
xchg
outsb
mov
test
pop
adc
xor
imul
push
mov
imul
mov
int3
inc
lret
sub
aas
cmp
sub
dec
les
inc
das
sbb
into
dec
addr16
adc
ret
out
and
imul
cmp
mov
outsl
addr16
jge
mov
jle
lods
stos
cld
and
push
adc
int3
insb
cld
cs
jnp
cmp
daa
imul
mov
push
adc
movsl
popa
lock
push
jl
js
loop
jmp
int
jbe
jecxz
inc
and
sahf
pop
and
clc
inc
sub
sbb
movsl
into
sub
lock
shl
adc
pop
mov
pop
and
jg
cli
add
fdivrs
sar
xchg
in
pop
fs
inc
shlb
mov
loopne
mov
push
lret
xorb
fnsave
stos
sarl
test
imul
mov
lods
out
popa
pop
cmpl
out
sbb
js
pop
shlb
sub
insl
xchg
or
push
xor
cmp
notb
aam
jae
add
xchg
cmp
xchg
jmp
dec
stos
fidivrl
push
jns
lcall
int3
sub
jno
sub
xorb
sbb
scas
mov
inc
xchg
mov
cmp
or
in
jne
inc
mov
lea
repz
cmp
fldenv
dec
mov
push
movsb
push
fwait
or
mov
testl
jmp
jg
dec
int
jmp
sub
fldt
pop
dec
bound
xor
stos
xlat
idivl
push
jecxz
lock
jnp
sub
repz
nop
mov
mov
adc
rol
cmpb
push
daa
popa
xor
dec
cli
and
jp
scas
push
inc
lcall
inc
cli
fadds
and
fstps
jns
les
jno
imul
or
lcall
dec
ss
mov
lods
lahf
pop
mov
in
enter
mov
mov
mov
inc
dec
sti
std
daa
in
fildl
aas
shll
jg
call
lret
out
lcall
sub
and
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
loop
js
xchg
pinsrw
cmp
hlt
fwait
sub
inc
sbb
xor
pop
fwait
rcl
arpl
jno
leave
aaa
scas
call
adc
daa
out
add
inc
int3
pop
movsb
dec
dec
mov
jno
or
adc
pop
mov
inc
jbe
int3
mov
sub
stos
push
mov
adc
stos
jecxz
iret
sbb
repz
out
repnz
add
mov
roll
sbbl
daa
shrb
loop
fsubs
mov
mov
inc
rcrb
jne
insl
aam
sbb
lret
cmp
xchg
lret
push
dec
scas
push
in
jge
insb
inc
test
mov
shlb
aas
outsl
cmp
pushf
xchg
outsb
jge
push
mov
mov
mov
cmp
jmp
ss
in
inc
push
sahf
adc
mov
adc
dec
ds
les
sub
add
dec
inc
sub
pop
push
jae
jb
stc
add
andb
mov
shll
mov
ja
pop
push
shll
mov
dec
lock
aad
sbb
icebp
das
ret
xor
call
and
adc
jns
xor
xorb
add
out
ret
es
xor
rorb
or
xor
add
mov
cwtl
sbb
ljmp
jnp
and
inc
dec
add
pop
in
ret
and
rolb
adcb
in
fnstenv
and
arpl
outsb
xor
cmp
xlat
jl
push
and
fsub
xorb
mov
xchg
test
mov
inc
mov
and
add
cmp
mov
dec
insb
ds
jb
std
sub
pusha
jb
mov
cmp
insl
ljmp
push
lcall
imul
fiadds
test
inc
jns
mov
jne
in
xchg
cmpsb
sub
mov
mov
add
sbb
icebp
repnz
nop
or
sbb
stos
shrb
and
jbe
jns
ret
rclb
ja
and
fstl
es
push
and
sub
test
ljmp
or
or
stos
in
bnd
sbb
xchg
inc
inc
inc
xchg
mov
dec
cld
jno
aad
adc
mov
dec
ret
fmul
push
mov
scas
addr16
call
pop
movb
loope
pop
jns
xchg
and
je
jle
xor
pop
test
pop
lahf
push
mov
stos
push
outsb
daa
subl
push
test
lock
jg
scas
mov
fucomp
cmp
js
hlt
ret
add
mov
aas
inc
and
nop
test
repz
enter
xlat
ljmp
mov
jg
icebp
dec
cmpsl
rcll
dec
fsin
xor
cmpsl
jg
dec
pop
inc
jbe
negl
jmp
mov
pop
push
inc
jno
outsb
pop
pop
xchg
pop
mov
aas
out
lret
test
inc
pop
out
inc
mov
cmp
inc
cmc
stos
incl
add
and
mov
and
cli
daa
js
dec
sbb
mov
push
std
popl
push
stos
fidivrs
xchg
nop
jnp
push
mov
adc
push
cmp
rorb
mov
aaa
into
sbb
les
adc
sbb
or
cmp
aam
lahf
sub
adc
outsl
cmp
leave
call
xchg
aam
int3
fildll
je
add
or
sbb
sbb
popf
jb,pn
shlb
es
mov
pop
cmp
dec
add
jg
fists
aam
jno
push
adc
jle
add
mov
clc
pop
cmp
fdiv
pop
scas
jecxz
xor
mov
frstor
add
jp
adc
cmp
popa
in
scas
sbb
imul
mov
push
mov
jge
fwait
inc
push
leave
pusha
push
jo
jae
jl
popf
lods
pop
and
mov
add
xchg
mov
add
stos
add
lods
cmpsl
stc
cmp
shrl
iret
sarl
aaa
cmp
outsl
push
aam
incl
lcall
jle
mov
data16
mov
cli
and
adc
das
pop
push
mov
xor
das
push
adc
push
std
popa
cmp
fprem
scas
push
lcall
xchg
sbb
out
das
insl
pop
les
xchg
mov
dec
nop
jmp
cmp
dec
clc
arpl
aaa
je
je
pusha
lods
aam
pop
insb
es
adc
xlat
pop
ss
xchg
jo
push
pop
jl
jge
pop
int
xor
jo
dec
popa
or
dec
les
repz
lea
xchg
push
or
mov
push
push
rorl
loope
add
orl
into
lahf
push
jg
add
and
inc
xorl
add
mov
and
mov
add
out
pop
mov
inc
jmp
pop
sarl
add
push
movsl
adc
sub
fmul
mov
cmp
orb
xchg
push
leave
adc
cmp
outsl
jmp
push
sub
orl
push
mov
je
add
lea
add
lds
std
loop
dec
xchg
push
cmp
sub
sub
or
add
in
jle
dec
repz
mov
inc
adc
test
cs
xchg
jle
xchg
xor
xchg
mov
in
xor
jbe
mov
lods
fnstcw
inc
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
adc
js
add
notl
mov
clc
dec
adc
xorb
pop
loope
std
jecxz
sbb
ja
cltd
adc
sbb
inc
xchg
push
popa
es
cmpsl
push
sub
mov
fsubrs
aad
dec
push
jmp
nop
and
xchg
or
sbb
dec
mov
cli
divl
shl
rorb
mov
xor
dec
fisubrs
jno
das
push
rcll
xor
mov
fadd
inc
jp
adc
inc
lahf
mov
xchg
jnp
stos
pop
adc
sub
cmp
xor
add
sub
push
and
inc
aad
push
add
negb
inc
filds
jecxz
mov
pushf
sub
and
mov
sbb
int3
add
rorl
xchg
inc
leave
push
push
jno
add
xchg
xchg
fsubr
mov
in
and
sbb
push
iret
scas
scas
loope
dec
jb
push
or
enter
daa
push
or
sbb
push
jle
call
lds
add
cmpsb
dec
jecxz
shrb
aam
mov
bnd
or
mov
or
cmp
sub
cmc
inc
jae
jne
add
in
fsubrs
jno
inc
negb
adc
inc
xchg
push
pop
imul
mov
sar
mov
gs
jns
shl
mov
mov
je
jmp
fwait
pop
pop
add
xchg
jnp
ja
xor
aad
scas
sub
lcall
mov
mov
cli
ds
or
in
jge
aam
fidivrs
gs
fs
pop
add
les
cmc
mov
pop
mov
lock
mov
adc
inc
xchg
arpl
std
ss
add
cs
push
lock
adc
rclb
jecxz
jnp
andl
daa
sub
ljmp
int
push
fdivl
mov
sub
int3
es
mov
dec
dec
les
sbb
pop
int
adc
inc
stos
mov
das
leave
and
jb
pushf
testl
push
inc
insl
inc
xorl
mov
xsaveopt
call
hlt
pop
fstps
cld
scas
outsl
mov
lret
mov
xchg
pop
ja
mov
mov
inc
mov
pusha
aam
sbb
call
mov
mov
push
cltd
adc
test
push
loop
rolb
jno
icebp
sub
lea
cmpsb
jecxz
mov
inc
push
adc
idivb
mov
or
or
push
mov
aaa
mov
mov
stos
mov
push
pushf
xchg
out
jmp
sub
cli
repz
sbb
or
and
mov
iret
jb
sete
or
xchg
mov
mov
sets
lret
mov
and
les
pop
rcll
call
neg
icebp
sub
dec
or
mov
jle
xchg
adc
pusha
fisttps
sbb
dec
pop
xchg
mov
push
jae
adc
push
mov
leave
int3
pop
or
hlt
mov
push
cmp
adc
xor
mov
inc
jns
imul
dec
push
jmp
pop
cs
mov
adc
pop
ficompl
mov
jo
outsb
cmp
mov
or
push
sub
xchg
out
hlt
jmp
jnp
xchg
dec
fs
add
cmp
jb
cmp
push
scas
es
xor
inc
pop
gs
dec
dec
in
roll
mov
repnz
ss
adc
orl
addr16
cmpsl
and
sub
sub
nop
mov
jp
sub
mov
pop
out
and
and
pop
sub
in
lea
inc
lret
movsl
mov
shrb
sub
pop
test
or
jl
xchg
cli
loope
lds
inc
imul
push
or
mov
hlt
pop
imul
cmpsl
cmc
sub
dec
xor
dec
inc
xchg
ds
mull
loopne
lods
or
and
mov
jbe
out
das
cs
fwait
adc
je
imul
divps
stos
sbb
ret
insl
int
hlt
ja
ljmp
std
inc
mov
pop
xor
clc
mov
push
icebp
icebp
cmp
outsl
sti
and
and
cmpsb
jno
push
rcll
adc
sub
mov
mov
sub
push
mul
scas
cmp
loope
sbb
out
nop
loope
push
fists
add
cld
out
ss
lods
mov
sbb
mov
mov
mov
sbb
stc
xchg
adc
leave
in
js
inc
arpl
js
mov
loopne
mov
adcl
loope
xchg
adc
test
aas
sub
add
push
insl
loop
lahf
imul
xor
sbb
dec
pop
xchg
xchg
dec
icebp
mov
and
aaa
dec
sahf
jle
jo
push
xor
popa
lcall
outsb
call
push
pop
hlt
bound
pop
int
inc
fnsave
push
inc
cmp
jbe
faddl
pop
fwait
movsb
scas
and
mov
mov
adc
adc
lret
inc
mov
sbb
into
xchg
inc
sub
ret
inc
and
ss
insb
sbb
rcl
pushf
stos
push
or
iret
dec
lea
mov
lds
idivl
dec
or
sub
mov
out
popa
out
mov
mov
cmp
xchg
inc
fsubrl
clc
dec
and
mov
nop
jmp
stos
xchg
mov
pop
sti
shlb
adc
hlt
or
test
sbb
roll
jno
rorl
aad
nop
cmpsl
adc
and
outsb
into
cmp
mov
mov
outsl
sar
mov
cmpsl
aad
mov
jg
les
repz
sbb
jno
and
call
sbb
sub
xor
mov
pop
sbb
fiadds
add
out
rolb
jmp
lahf
mov
push
mov
adc
movsb
and
jbe
addl
lock
test
sbb
popf
addr16
imul
cmc
andl
sub
mov
dec
adc
pop
cmp
pop
jge
jmp
pop
fwait
xchg
jp
adc
pop
les
inc
int3
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
jo
mov
push
sqrtps
cs
pop
mov
pop
lcall
and
lods
push
pop
push
or
aad
lret
push
shlb
dec
outsb
sub
imul
jge
jns
mov
pop
js
xchg
push
stos
pop
jmp
mov
fisubs
popf
hlt
mov
and
inc
test
mov
mov
add
jo
cmpsb
loopne
pop
sbb
mov
cmp
inc
sub
and
push
push
std
outsl
lret
repnz
and
xchg
adc
in
clc
aad
jg
mov
or
dec
ljmp
adc
dec
mov
sbb
pop
movsl
pop
adc
sbb
push
adc
addr16
lcall
push
jecxz
int
add
jns
bound
xchg
jo
xchg
out
and
jmp
bound
sbb
jae
aam
imul
push
add
mov
cwtl
adc
add
aam
adc
psraw
lcall
or
inc
cld
lock
jp
leave
or
out
mov
mov
mov
push
call
aad
cmp
subb
lds
leave
xchg
sub
xchg
inc
cltd
push
cmpsl
fwait
and
cli
lods
mov
add
push
dec
dec
int3
test
fwait
repnz
insb
jp
shrl
in
sub
add
sbb
rcll
adc
push
lods
test
nop
sub
xchg
push
lds
or
fisubs
gs
stos
andb
jbe
loop
aam
jns
cmp
scas
arpl
test
push
adc
hlt
xchg
arpl
dec
leave
enter
out
mov
or
es
jns
sbb
fxch
out
push
cld
xor
mov
lea
pop
ret
insb
movb
push
aas
sub
in
lea
out
jmp
shll
sahf
xlat
cmp
rep
pusha
dec
jge
shrl
mov
mov
aas
jo
jg
neg
push
addb
lahf
repnz
sahf
fists
xor
filds
lret
dec
shll
test
lock
sbb
mov
movsb
xor
loop
pop
stos
jg
rcll
xor
mov
movsb
mov
add
pusha
sbb
dec
mov
cmpb
and
mov
fwait
test
or
mov
lds
popf
pcmpgtw
sbb
adc
xchg
xor
push
dec
sbbl
xor
mov
gs
inc
sbb
jo
xor
push
aas
sbb
pop
or
aam
call
ret
jecxz
jns
in
popa
fdivl
mov
adc
mov
cmp
mov
xor
xor
ret
jmp
outsb
add
xor
outsb
mov
jmp
and
sub
out
loopne
insl
xchg
xor
xor
mov
push
mov
sub
scas
pop
jle
xchg
push
ja
mov
repz
sbb
mov
xor
inc
mov
inc
sbb
xchg
jg
xor
sbb
or
movsb
sbb
nop
loope
into
cmpsl
or
iret
lock
mov
inc
jae
enter
jnp
mov
popa
es
inc
test
xor
sbb
je
dec
fstpl
add
mov
sbbb
jmp
mov
aaa
lock
mov
scas
cwtl
lcall
add
subl
or
xchg
into
wbinvd
push
jl
inc
lea
push
movsl
and
jns
rcr
push
out
pop
mov
pushf
jb
ficomps
sbb
pushf
fdivs
jmp
dec
aam
in
xor
aas
mov
xchg
test
mov
rcrb
xor
jo
aaa
adc
push
mov
addr16
pop
in
in
in
sbb
mov
mov
pop
mov
xlat
scas
test
inc
jb
push
cmpsl
inc
lods
add
mov
loopne
fnsave
mov
push
cwtl
jge
and
push
adc
inc
fisubrs
int
loope
gs
rcll
lods
pop
cmpsb
sub
inc
lea
fsubrl
mov
hlt
mov
cwtl
sbb
outsb
clc
xor
adc
outsb
and
or
mov
mov
popf
loope
ds
mov
mov
mov
loopne
push
in
filds
int
pop
dec
into
fwait
imul
cmp
fistl
sarb
leave
cmp
jb
xchg
in
rclb
mov
out
jle
lret
in
jns
adc
inc
call
fnstsw
or
mov
jle
and
and
rcrl
dec
bound
es
negb
mov
test
in
xchg
add
and
lods
rorb
imul
rclb
xor
push
ret
sti
cmpsb
fidivl
mulb
and
rclb
sub
stos
ds
fs
dec
dec
sbb
dec
mov
push
inc
jae
icebp
scas
movsl
and
dec
aam
xchg
stos
pop
pop
and
hlt
ss
frstor
int3
jns
dec
add
pop
mov
push
pop
fmul
loopne
inc
jecxz
js
xchg
add
sahf
jmp
out
cli
imul
pop
dec
jle
pop
jle
push
lcall
mov
sub
jne
stc
and
cli
mov
out
into
loopne
inc
aaa
imul
jle
ds
js
mov
pop
inc
roll
nop
cmp
dec
mov
clc
cmpsl
stc
and
test
cmp
js
insb
push
fmuls
sub
sub
pop
mov
and
scas
call
inc
mov
or
pop
pop
shl
cli
dec
add
inc
mov
push
loop
lcall
pop
pop
mov
fistpll
sbb
movsl
imul
push
out
mov
hlt
mov
jns
rolb
test
jp
repnz
fistps
call
dec
adc
mov
mov
aad
popa
cmp
imul
and
mov
clc
xchg
ds
sbbb
call
inc
add
lret
pop
scas
addr16
data16
in
ret
add
mov
mov
dec
out
fsubrl
sbb
out
sub
jb
sub
xchg
fwait
pushf
inc
leave
into
jmp
push
jne
fists
inc
and
xor
and
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
pop
and
add
xchg
addr16
aas
rorb
subl
cmp
mov
push
xor
adc
cld
jge
jae
inc
out
nop
jns
lret
aaa
cmp
jge
jg
ds
insb
add
enter
adc
aas
das
pop
pop
inc
clc
mov
sti
push
es
adc
addb
into
mov
and
mov
sti
jl
rcll
mov
popf
jo
cmp
dec
push
push
xchg
call
jmp
dec
sbb
xor
dec
jns
dec
xor
mov
lretw
sub
lods
and
dec
xlat
add
xorb
jg
lods
and
lods
cmpsl
repz
xchg
adcb
in
into
icebp
adc
inc
popa
cld
push
loopne
sub
mov
fwait
das
inc
daa
inc
ret
jecxz
push
and
sti
cld
subl
rcrb
addr16
shr
enter
sti
ficomps
shll
adcb
aaa
call
push
loop
xor
jmp
sahf
icebp
mov
push
out
stos
ret
cli
lods
xchg
ds
pop
xor
push
aaa
jbe
and
test
or
in
sbb
loope
in
mov
push
add
mov
test
mulb
xchg
mov
popa
pop
fisubrs
aaa
iret
push
ja
ror
push
adc
add
add
repz
dec
and
imul
dec
adc
inc
jg
das
dec
adcb
xor
inc
mov
or
cmp
mov
pop
push
fnstenv
popa
xlat
mov
inc
adc
push
rclb
into
mov
adc
or
push
jb
inc
inc
out
daa
movsb
stos
jbe
out
cmp
push
adc
sbb
pusha
dec
in
dec
insl
pop
cld
ret
xchg
add
pushf
ret
add
adc
jne
sbb
push
cltd
xchg
pop
add
mov
stos
sbb
xorb
mov
stc
rorb
sbb
ret
fstpl
mov
in
push
xchg
mov
pop
jle
das
scas
movsb
cmp
jmp
int
push
jecxz
arpl
call
sbb
notl
sub
pop
in
outsb
sarb
mov
jne
es
sahf
dec
add
push
in
push
sbb
mov
mov
adcl
inc
pop
aas
xchg
sub
dec
xor
mov
sub
add
add
and
aad
pop
fadds
xor
hlt
mov
push
xchg
outsl
xchg
loope
lds
inc
xor
add
daa
and
sub
jmp
insl
dec
mov
ret
lods
sti
jb
adc
call
andb
test
add
hlt
xchg
push
stc
rcrl
les
loopne
or
sub
pop
out
push
bnd
jecxz
pop
dec
in
mov
scas
cmp
push
cmp
push
mov
pop
push
pop
adc
in
pop
ds
cmpb
iret
sub
jns
cmp
mov
lahf
jge
aaa
sbb
jo
mov
addr16
sub
jb
mov
jmp
lret
push
sahf
sti
idivl
sub
jp
sub
mov
or
mov
adc
scas
lahf
ljmp
pop
sbb
call
clc
jnp
aas
cmpsl
sahf
ret
xchg
jae
xchg
leave
repz
pop
cwtl
ss
inc
and
outsb
push
std
cmp
fstpt
jne
popf
adc
pop
idivl
add
scas
jne
jp
aad
mov
or
lea
shr
mov
dec
push
pop
hlt
sbb
popa
mov
fsubp
mov
inc
insl
call
clc
jmp
cmp
dec
je
dec
add
outsl
int3
push
add
das
stc
adc
cmpsl
cmp
add
push
push
or
in
ja
in
or
xorl
and
subl
fadds
push
sbb
cmp
addps
mov
insb
jno
xchg
jne
adcl
sbb
cmp
sbb
and
fistps
lret
outsl
orb
push
rcr
mov
dec
nop
or
jge
add
ja
aaa
nop
scas
mov
cmp
and
sbb
imul
push
mov
sbb
clc
mov
ret
test
out
cltd
jmp
or
das
popfw
out
shll
push
inc
mov
sub
clc
es
psllq
dec
push
sbb
dec
ret
mov
add
mov
add
and
inc
and
mov
pop
add
movsb
js
jecxz
xor
inc
sahf
je
dec
jl
pop
jg
push
sub
mov
imul
lret
ficompl
or
mov
mov
stos
jl
insl
js
xor
adc
cmp
shll
jge
jns
pop
sbb
xchg
aaa
pop
into
lret
jmp
dec
and
shl
dec
or
fistpl
mov
std
ja,pt
or
mov
push
push
dec
and
mov
fsubrs
push
enter
fimuls
cld
or
rolb
pop
add
leave
mov
or
std
std
stc
into
fisubrl
sahf
mov
lea
nop
jp
fnstenv
adc
sbbb
lahf
call
push
icebp
pop
subb
jae
stos
pushf
mov
sub
fwait
cmc
lock
js
ret
and
into
xchg
sahf
xor
push
xor
or
and
js
cld
lods
inc
int3
cmp
xor
repnz
mov
jns
jmp
out
or
inc
incl
negb
pop
inc
push
jns
in
lcall
stc
mov
sbb
push
into
fbstp
loopne
rorl
push
lahf
fwait
push
inc
lahf
shl
btc
imul
shlb
or
aad
popl
not
cmpb
or
out
jo
or
popa
sar
stc
xchg
xlat
ja
xchg
rcrl
notl
and
pushf
hlt
mov
jns
test
mov
pop
sub
and
push
inc
fucom
adc
jo
sbb
repnz
mov
ljmp
sbb
ror
movsb
jl
adc
mov
mov
pop
mov
mov
imul
pop
xchg
js
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
insl
jb
mov
add
hlt
sub
outsl
std
and
data16
xchg
mov
add
jge
adc
cli
pop
pop
xchg
jo
cmp
lret
stos
push
in
gs
push
call
xchg
xor
push
jmp
imul
mov
mov
out
stc
mov
and
xchg
sbbl
fadd
dec
or
cmpsl
outsl
jp
insb
mov
xchg
div
jl
test
jle
cwtd
dec
cltd
jmp
adc
jnp
sub
enter
push
jbe
pop
push
add
and
xor
orl
aad
sti
cmpsb
xchg
and
imul
clc
jl
add
out
adc
mov
dec
mov
mov
sahf
incb
mov
adc
and
or
insb
xor
fildl
pop
aad
nop
push
sub
or
lahf
jae
fnstcw
jno
sahf
mov
mov
jle
in
js
mov
inc
lea
in
sbb
pop
pop
xchg
dec
adc
push
outsl
mov
mov
sti
adc
jge
jge
cwtl
clc
inc
stos
insb
aaa
sub
daa
pop
rolb
sub
aaa
aad
out
push
not
sbb
cwtl
adc
sub
movsl
lock
xchg
mov
ret
inc
mov
inc
push
cmpsl
and
ljmp
push
popf
xor
sti
enter
mov
fdivrs
mov
sbb
cmp
sahf
outsl
add
cmp
or
movsb
jmp
in
inc
cmp
imul
and
das
rclb
cmp
js
pop
sub
mov
inc
neg
push
aas
dec
ret
nop
lret
mov
mov
xchg
or
fisubs
xor
mov
daa
shl
dec
sub
in
and
dec
or
dec
mov
out
es
cmp
dec
fsts
rcr
rcll
orl
and
or
out
sub
outsl
or
cmp
cwtl
xchg
clc
jmp
jmp
dec
mov
adc
sbb
cs
fmuls
mov
in
ret
jecxz
adc
mov
or
neg
out
pop
mov
push
jo
mov
std
movsl
mov
add
movsb
lods
mov
decl
push
fistpl
adc
lods
mov
mov
popf
push
mul
gs
mov
sahf
mov
les
mov
jecxz
lcall
mulb
les
imul
subb
jp
test
xchg
cmp
jnp
mov
mov
lds
out
mov
push
lcall
push
and
outsl
xchg
sub
cmp
mov
daa
enter
pop
adc
push
add
cmp
iret
int
add
adc
adc
adc
cltd
pop
xor
mov
pop
inc
bound
sbb
punpckhdq
popf
cwtl
mov
cmpl
xor
ficomps
sbb
pop
push
bound
push
dec
vphaddwq
jp
adc
dec
dec
or
jo
jp
jp
mov
mov
dec
fbstp
or
add
xchg
shll
fstps
lock
imul
loopne
das
nop
outsl
jmp
aaa
xchg
ds
arpl
xor
mov
mov
sbbl
sub
rcl
cs
add
fcomp
adc
lods
jge
inc
repnz
inc
cmp
pushf
dec
clc
cmp
out
pop
add
inc
out
aad
jno
mov
and
xchg
mov
jbe
iret
in
push
cmp
xchg
pushf
cwtl
sub
cmp
jo
inc
inc
rcr
daa
insl
jno
sbb
adc
sti
fmul
loop
fistps
leave
stos
enter
dec
ja
dec
aas
int3
xlat
sub
mov
cmp
jge
out
outsb
xchg
daa
push
cli
out
aaa
test
popf
test
je
add
mov
nop
lcall
add
nop
addr16
adc
addr16
insl
and
dec
or
pop
es
lahf
testb
adc
ret
push
ret
xor
pusha
movsl
popa
mov
jle
popf
in
and
aad
shrl
xor
into
xchg
mov
ja
jmp
adc
pop
inc
dec
cmp
adc
mov
mov
call
jae
repz
fcmovb
cmp
call
test
rcrb
rclb
pop
shrl
jmp
ror
sbb
scas
jl
pop
repnz
mov
mov
push
dec
push
sub
data16
gs
push
cmp
cmp
cmc
shrd
jl
cli
and
jo
cmp
dec
lods
aam
leave
jmp
rcr
nop
ficomps
adc
sti
push
sub
sub
fstpt
fidivl
jo
jecxz
cli
dec
pop
xchg
or
jp
imul
mov
ja
xchg
lcall
push
push
add
mov
sub
push
mov
dec
fisttpl
mov
cmp
pop
pop
cmp
mov
xchg
push
fisttpl
adc
mov
jno
out
lods
push
add
int3
arpl
lea
and
icebp
mov
add
jg
cwtl
jb
push
xor
scas
aad
lods
cmpsl
lahf
xchg
imul
iret
xorb
mov
jp
outsb
fnstenv
sahf
adc
int3
dec
movsl
sub
sub
jle
jns
mov
dec
mov
mov
test
cli
and
out
mov
xchg
mov
sub
lock
jl
and
add
fwait
adc
mov
xor
jp
cs
mov
xor
mul
or
xor
es
fldl2e
sbb
adc
jl
iret
aas
jae
movsb
or
jecxz
mov
lahf
sub
jle
add
push
push
out
jp
mov
andb
es
dec
in
mov
or
in
pop
fucomp
adc
adc
sub
sbb
mov
xchg
xor
jecxz
sahf
data16
or
xchg
cltd
pop
push
in
ss
addb
lahf
insl
cs
add
testb
adc
shlb
in
leave
bound
cmpsl
adc
pop
shll
mov
mov
xchg
push
xor
pop
lret
pop
xor
mov
sar
push
mov
sbb
jle
xorb
add
adc
sbb
push
in
scas
repnz
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
sarb
cs
add
lahf
enter
jb
loope
test
mov
rcrl
dec
sbb
xor
mov
pusha
cmc
jmp
arpl
jae
fbstp
addr16
xor
pop
test
xchg
out
cmp
leave
inc
jp
and
ret
lret
cmp
mov
push
push
rclb
int3
fbld
jns
cmp
mov
push
push
cmc
and
rolb
cli
adc
add
pop
dec
lods
add
repnz
jne
leave
test
mov
push
pop
pop
jnp
dec
push
outsl
rolb
leave
push
je
push
push
andb
movl
xor
push
test
movsb
lock
dec
sub
cli
int3
lock
or
cwtl
inc
cmp
mov
xchg
in
fnsave
mov
push
mov
push
fldcw
nop
test
divb
mov
add
sub
pop
push
into
sub
imul
mov
ljmp
fwait
sbb
push
add
xor
cpuid
bound
xor
xor
xchg
or
mov
inc
jae
rolb
xor
push
mov
iret
xor
imul
mov
pop
xor
inc
xchg
or
add
cmc
loopne
xlat
js
hlt
mov
jl
cmp
pop
pop
dec
push
fimuls
test
xchg
dec
mov
mov
ja
xchg
xlat
ret
cs
sahf
aaa
mov
jle
sbb
pop
or
sbb
rolb
add
jnp
pop
sti
mov
pop
es
pop
fwait
pop
data16
mov
je
cmpsb
or
mov
aam
mov
lds
mov
leave
lock
jg
adc
push
loopne
pop
dec
jg
call
mov
xchg
sub
mov
lea
add
sub
push
popf
pop
imul
in
cmpsb
shrb
scas
loopne
cmpsl
aaa
jmp
cmp
pop
ljmp
shrl
cli
inc
aad
pop
mov
jge
and
dec
lahf
mov
dec
push
fisttps
ret
iret
push
fsubrs
sbb
inc
dec
jo
add
or
xchg
jae
adc
push
xchg
sbb
test
pop
mov
out
ss
xchg
outsb
sbb
push
sti
mov
lcall
call
mov
add
pop
jb
out
dec
xchg
adc
dec
stc
sbb
xlat
sub
xchg
test
xacquire
pop
mov
cmp
shl
or
sbb
mov
xlat
adc
xlat
xchg
jp
sub
cmpsl
ja
sbb
das
cmp
jp
jnp
pop
pop
clc
jmp
xchg
xchg
popa
pop
push
ljmp
mov
push
imul
ss
movsl
jo
mov
mov
cld
xchg
xchg
cmp
cmp
xchg
xchg
rclb
cmp
push
shll
sub
dec
inc
xchg
imul
mov
mov
stc
jb
cmp
jns
sbb
or
jo
cltd
cmp
insb
addr16
mov
inc
in
mov
sbb
sbb
mov
push
ja
out
sbb
dec
xor
sbb
cmp
ljmp
rolb
xchg
mov
inc
sahf
mov
lods
sub
inc
std
test
lea
into
and
in
loope
aam
and
ds
adc
and
lret
cmp
fs
mov
cmp
and
lret
movsl
pusha
mov
adc
stos
add
test
nop
arpl
dec
mov
and
call
dec
jp
mov
push
adc
dec
mov
aaa
test
sbb
aaa
mov
mov
andb
add
leave
jbe
pop
inc
and
orb
and
testb
ret
stos
jne
daa
push
test
mov
clc
rcrl
xchg
pop
xor
call
xor
sarl
fcmovnb
xor
cli
and
adc
pop
xor
xlat
shll
and
add
or
loop
popa
shll
popf
jae
pop
cltd
adc
stos
repnz
xor
add
or
dec
cmp
mov
jnp
in
jb
mov
or
cmp
test
sub
scas
lcall
mov
push
xchg
faddl
and
mov
pop
incl
xor
ljmp
mov
ljmp
adc
jecxz
test
cltd
out
jl
dec
xor
in
movsb
popf
imul
or
data16
pop
out
push
xchg
push
sbb
add
push
push
int3
xchg
cmp
fs
mov
sarb
and
insl
inc
mov
hlt
in
cld
cwtl
cmp
dec
or
sbb
mov
addl
push
jle
aam
lock
push
fstpt
mov
dec
pop
xor
negl
mov
pop
xchg
lret
mov
sub
fsubrp
mov
or
and
and
dec
leave
mov
loope
sub
xlat
mov
mov
mov
pop
push
mov
inc
popa
scas
xor
stos
mov
fs
aam
jbe
jmp
adc
ljmp
shl
test
xorl
jge
add
sub
push
daa
mov
incl
aas
xchg
and
mov
or
push
cli
stos
repz
outsb
jmp
xchg
jmp
xor
inc
fsubrp
mov
fcmovnb
fcoml
movsb
aad
sbb
cwtl
std
cmp
stos
fs
xor
xor
in
xlat
mov
dec
xchg
lea
mov
pop
xor
mov
mov
addl
ljmp
cmp
sub
test
pop
jg
shrl
xor
push
push
out
push
push
test
je
inc
lds
mov
mov
mov
je
imulb
push
xchg
inc
add
in
loopne
into
leave
pushf
pop
dec
mov
pop
dec
or
pop
enter
pop
lret
retw
mov
jle
fldl
xchg
roll
pop
test
test
sahf
pop
pop
lahf
popf
lods
stos
fcomps
add
dec
add
mov
stos
jle
repnz
lds
bound
sti
sub
loope
mov
add
mov
and
xchg
sub
push
add
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
aas
mov
add
orb
add
sar
adc
xchg
pop
sahf
adc
or
ljmp
mov
ss
inc
fs
aad
dec
sub
pop
leave
mov
cmp
jnp
lcall
ds
insl
dec
push
lds
cmpsb
mov
ja
out
xorl
cli
jne
sub
push
aam
xorb
jmp
sbb
in
daa
or
rcll
and
jp
out
or
loop
push
add
idivb
adc
imul
or
xchg
mov
push
stos
add
popa
mov
or
inc
rcl
jg
mov
sub
dec
pop
cmp
xchg
mov
adc
mov
inc
lds
stos
cmp
xor
mov
xor
mov
inc
lock
andb
stos
out
sti
mov
movsb
test
mov
leave
daa
lods
je
pop
cs
aaa
mov
sub
mov
dec
aam
hlt
push
lods
repnz
call
pushf
adc
lret
lods
in
and
lods
movsb
pop
jo
cs
sbb
test
loope
aad
jb
xor
idiv
sbb
cmpsb
fcoms
xchg
sub
nop
inc
pop
cmp
cmp
push
bound
stos
movsb
sub
add
lret
and
lcall
mov
idivb
add
shll
add
cmpsl
das
xchg
outsl
mov
loop
adc
cld
lds
imul
pop
rcrb
iret
inc
pusha
sbbb
dec
adc
jmp
add
sbb
jecxz
ss
shll
test
and
sbb
dec
in
adc
js
cld
sbb
inc
test
push
xchg
cmpsb
das
jmp
dec
jg
outsb
xchg
repnz
xchg
jl
push
or
dec
dec
pusha
dec
imul
mov
mov
mov
test
and
lock
cmp
fsubrl
jnp
fildl
inc
into
pushf
jns
sub
cmc
clc
add
pusha
lods
mov
xchg
and
sbb
aad
xchg
cmp
arpl
pushf
imul
xchg
mov
data16
push
outsl
cwtl
psubusw
sub
rclb
mov
jp
popa
shlb
pop
aas
and
sub
in
xor
loopne
adc
in
ds
xchg
add
in
idiv
pop
xchg
and
arpl
rcrb
push
call
rcrl
and
jge
sub
roll
dec
xlat
icebp
je
mov
stos
push
rorl
mov
adc
adc
in
mov
xchg
xchg
pop
push
add
ds
test
jge
mov
pop
xor
fldt
xchg
movsl
sbb
inc
xchg
add
and
xchg
cwtl
popf
int
mov
movsb
xorb
es
mov
pop
inc
and
or
loopne
mov
pusha
mov
mov
pop
stos
push
cwtl
cmpsb
mov
mov
mov
mov
subl
fisubs
mov
pushf
outsb
xchg
insb
push
xor
in
popa
aad
jb
cmpb
cmp
movsb
cmc
fldl
push
pop
sub
pop
pop
aam
jo
repnz
jo
sub
aad
add
std
rcll
stc
iret
sub
xchg
jl
adc
rcrl
outsl
add
orl
lea
xchg
je
scas
stos
iret
iret
push
push
je
or
ret
icebp
fisubrl
shrb
xor
pusha
push
inc
mov
push
je
or
popa
std
js
fnstsw
gs
mov
inc
pop
in
movb
rcrb
stos
sub
mov
nop
xor
inc
jmp
pop
and
jl
adc
decb
mov
cwtl
and
jmp
inc
inc
mov
pop
or
rcl
enter
adc
test
add
mov
mov
sbb
add
cltd
mov
dec
cmpsl
movl
inc
std
mov
add
cmp
stos
repz
and
push
test
cltd
xor
in
mov
imul
int
dec
arpl
xchg
sbb
pop
dec
les
inc
mov
jl
inc
push
pop
out
mov
adc
jp
test
jp
push
mov
leave
int3
xchg
sbb
mov
add
adc
sahf
fcomi
shl
xorl
sub
loope
mov
js
mov
mov
or
xchg
mov
and
cs
sbb
into
push
rorl
into
rolb
fwait
sbb
in
jle
in
mov
data16
push
into
xor
xchg
xchg
loop
je
enter
mov
mov
clc
xor
insl
mov
dec
int
ds
jae
sub
out
adc
push
xchg
adc
push
or
jbe
nop
scas
rolb
mov
sub
push
int3
aad
push
je
and
mov
nop
aam
inc
lock
sbb
popa
pop
pop
mov
dec
fwait
jp
dec
sbb
push
adc
add
xlat
mov
jg
aad
mov
outsl
mov
lret
sbb
cs
mov
lcall
mov
sbb
in
lcall
jno
out
shr
aaa
movsb
push
xchg
mov
dec
jnp
repnz
sbb
cmp
xchg
xor
mov
aaa
leave
stos
negb
faddl
sbbl
cmp
movsl
mov
pop
push
int
scas
mov
xchg
leave
fwait
out
aas
and
adc
push
sbb
popf
jg
pop
sub
in
cmc
test
mov
jmp
aaa
pop
stos
loopne
cld
lret
outsb
pop
loopne
lods
cmc
pop
xor
cs
xchg
ss
addr16
cmp
pop
or
xchg
or
adc
mov
inc
fstpl
lret
adc
jb
cmp
imul
or
mov
push
xor
pop
cli
testb
inc
std
pop
xchg
mov
movsb
mov
into
testl
pop
stos
sbb
arpl
cld
imul
xor
lcall
mov
loop
clc
cs
pop
stos
scas
mov
inc
cli
popf
pop
das
sbb
sahf
fisttps
add
xchg
pop
mov
add
mov
fistl
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
mov
add
mov
movsl
adc
jne
dec
pop
nop
mov
and
mov
cmc
adc
inc
pop
cwtl
and
sub
adc
ja
add
ljmp
add
sbb
stos
mov
or
adc
cmc
filds
ret
mov
and
and
mov
lret
cmpl
enter
pop
incb
cmpsl
mov
xchg
xor
inc
jle
jmp
mov
push
loope
out
stc
push
xchg
sbb
or
adc
jb
pop
jmp
push
sbb
mov
hlt
sarb
test
popa
mov
rorb
sub
lds
cmc
push
jno
popa
pop
sahf
int
ret
and
data16
xor
adc
jns
dec
xchg
xchg
leave
jge
inc
sbb
sub
mov
pushf
inc
dec
jne
iret
fstpt
lret
insl
ja
faddl
dec
repnz
mov
in
xchg
das
lea
pop
sti
imul
imul
shll
and
lret
loop
fistpl
rcr
loopne
mov
jp
das
arpl
jl
mov
add
rorb
fnstcw
repz
adc
cmc
sub
inc
out
jo
jnp
cs
scas
das
repnz
es
mov
mov
bound
std
sub
jbe
xchg
pop
adc
mov
cld
test
repz
test
div
add
pop
push
les
fsubp
aas
jo
dec
mov
es
xchg
push
jno
push
call
jge
push
dec
jb
or
in
xchg
sti
out
or
out
cmp
sti
xor
adc
or
repz
rcll
or
adc
xorb
test
aas
pop
jo
shll
sub
addb
add
pop
mov
stc
xor
pop
iret
jno
or
rcl
or
xchg
mov
xor
loopne
daa
int3
adc
and
loop
je
scas
push
fs
ja
sub
hlt
jno
out
mov
vlddqu
mov
jb
sub
or
mov
push
xor
fmul
xchg
imul
push
mov
jns
push
imul
fdivrs
xor
jne
sti
sbb
movsl
gs
pop
cltd
jg
lret
lods
cli
mov
sbb
loope
push
mov
xchg
imul
cmp
ficompl
mov
jnp
xor
jmp
adcl
cmc
jp
xchg
ljmp
mov
mov
push
push
inc
enter
dec
cli
sbb
sub
ret
inc
lret
sub
lods
cmp
scas
cli
inc
in
test
xchg
mov
and
pop
cmpsl
pop
sbb
push
xor
adc
dec
imul
jns
push
out
sub
aas
pop
out
ds
int
pop
push
mov
addr16
sub
or
adc
cmpsl
loop
out
std
jp
fs
xor
das
nop
mulb
ljmp
movsb
ds
sar
pop
loop
outsl
mov
dec
mov
xor
inc
xchg
jae
push
push
sub
xor
sub
popa
or
mov
stos
sbb
xor
pop
addl
fcmovnu
loope
or
mov
icebp
arpl
pop
pop
popa
adc
lret
ljmp
into
cmp
ret
cmc
outsl
dec
cmp
sub
pop
mov
pushf
cmp
in
jl
xchg
push
jne
jbe
mov
out
repz
pop
shrb
cltd
loop
das
mov
repnz
call
sbb
lods
and
and
or
bound
push
and
fnstenv
dec
es
out
movsl
addr16
add
fs
xchg
insb
lret
je
push
mov
in
fcoml
dec
mov
jae
in
les
push
fstl
or
mov
xor
ja
xor
fisttpl
rol
icebp
jne
mulb
pop
mov
daa
out
mov
jae
iret
test
cld
mov
sbb
fs
cltd
ret
dec
mov
push
mov
sub
adc
gs
dec
std
shl
jl
jno
xchg
gs
dec
dec
mov
mov
push
xchg
adc
sbb
sbb
dec
test
xchg
popa
sub
jl
cmpsl
or
fimuls
mov
mov
mov
loop
mov
out
dec
adc
xor
fwait
mov
popf
push
jmp
subl
mov
outsl
stc
sub
pop
sub
sub
cmp
or
xchg
repz
bound
mov
add
jp
cmc
and
es
push
adc
pop
push
jecxz
repnz
cmp
sbb
aas
fldl2t
test
push
push
add
adc
jo
movsl
xor
pusha
sub
cmp
xchg
adc
and
roll
jg
imul
push
lock
pushf
out
in
imul
hlt
xor
je
jge
lock
rorb
adc
jb
jno
add
mov
dec
lret
cmpsb
cld
divl
test
add
ret
xor
lock
mov
push
mov
cld
add
sub
pop
mov
mov
ret
jp
lret
stos
inc
xchg
call
xchg
sbb
pop
movsb
loope
sub
push
test
int
cmp
dec
test
or
pusha
push
ljmp
pop
icebp
sbb
roll
and
in
or
pop
push
fiaddl
movsl
int
add
and
add
sbb
push
aad
lods
jl
cwtl
add
push
mov
xchg
popa
mov
lcall
stos
fisttps
sbb
sbb
and
stos
cltd
out
mov
push
cli
mov
cmp
mov
sbb
iret
pusha
adc
addr16
in
daa
mov
push
inc
test
jnp
adc
addl
lds
test
cmp
inc
or
sub
mov
stos
mov
xchg
mov
repz
arpl
repz
add
clc
sahf
add
in
fsubrs
aad
mov
daa
push
jle
sbb
es
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
cmp
add
and
fnstenv
and
sub
jns
and
in
xchg
sub
cmp
lret
inc
les
out
aaa
or
mov
aaa
data16
lock
cmpsb
or
insb
sahf
sub
test
popa
jo
out
hlt
in
inc
mov
and
in
jp
push
ss
lretw
pop
std
cmpsb
pop
std
push
jne
out
push
sub
rorb
aam
jo
jl
or
mov
inc
pop
inc
arpl
push
dec
fists
pusha
fcmovb
adc
fdivr
and
lea
mov
std
hlt
subl
mov
shlb
imul
or
jle
dec
roll
lret
push
scas
cmc
lock
shrl
fistpll
mov
ret
sbb
int
lahf
shl
xchg
mov
out
push
inc
jae
jg
push
fnstcw
push
push
sbb
ret
cmp
aad
push
fdivl
out
push
push
mov
dec
inc
xor
fxch
divl
sbb
leave
sub
iret
ret
sub
sbb
cmpb
sahf
cmp
sti
push
sub
data16
mov
inc
add
std
rorl
cmp
lock
insb
push
adcl
and
and
sbb
test
dec
jg
inc
flds
imul
xchg
ljmp
mov
lds
mov
fucomp
ja
jmp
xor
add
movsb
mov
push
fs
test
ds
stos
sbb
jle
jae
sbb
pushf
nop
and
adcl
pop
sbb
test
xlat
lock
outsb
sub
mov
lock
jecxz
ret
out
jae
mov
jne
xor
or
xor
xchg
les
popa
sbb
sub
adc
xor
and
ss
pusha
outsb
cmp
call
std
jmp
repz
cmpsl
xor
cwtl
mov
pop
jl
inc
add
lret
xor
jge
mov
je
out
orb
imul
movsb
in
out
xchg
cmp
xor
inc
repz
fstp
lods
call
pop
popa
mov
or
pop
mov
xchg
xchg
sbb
jle
stos
jge
test
or
movsb
fs
sbb
inc
push
loope
repz
or
addr16
mov
and
mov
inc
shl
jae
ja
jae
dec
xor
addl
lahf
insb
jno
das
flds
hlt
vmread
roll
aaa
in
inc
push
dec
cmpsb
add
scas
sbb
sbb
push
jp
xorl
jl
cmp
pop
sbb
mov
add
aas
std
imull
push
movsb
adc
xchg
push
add
mov
add
push
es
xlat
dec
cwtl
movsl
pop
outsl
mov
xchg
popf
rolb
dec
xchg
mov
jnp
push
push
out
sti
adc
outsb
sahf
shrb
outsl
inc
jmp
cmp
pop
fsubrl
pop
cs
and
xor
jne
outsl
jmp
fisttpl
out
subl
adc
inc
inc
mov
push
and
sarb
add
xor
loopne
jle
xchg
mov
mov
ret
inc
cmpsl
xor
push
xlat
inc
fbstp
loopne
add
popa
adc
sbb
movsb
dec
xchg
mov
sahf
jmp
ss
mov
inc
inc
and
in
dec
xchg
test
call
push
cmpsb
pminsw
xchg
pop
scas
and
mov
shrl
cmp
fs
xchg
pop
insl
jb
enter
dec
loopne
pop
pop
sub
add
icebp
cmp
xor
dec
clc
jnp
arpl
aad
dec
adc
cmp
mov
cmp
pop
pop
sahf
inc
jo
mov
jo
rcl
out
mov
dec
push
dec
or
push
and
mov
es
movsb
daa
xor
cmpsl
test
outsb
call
lret
dec
push
movsb
popa
push
mov
mov
adc
jo
call
cmpsb
fwait
fwait
sub
pop
test
daa
aas
lock
das
fisttps
fdivs
and
fmuls
xchg
or
add
xchg
ss
mov
out
adc
or
adc
adc
out
idiv
fadd
enter
cmp
mov
cmp
mov
xchg
movsb
ficompl
pop
and
jp
mov
out
push
les
push
cmc
adc
sub
push
fists
std
pop
cs
leave
fs
gs
pushf
jecxz
add
jg
add
in
add
jmp
mov
data16
dec
mov
loope
mov
mov
inc
push
test
inc
jbe
dec
cmpl
rcl
lret
orb
outsl
shrl
es
mov
call
mov
scas
sbb
ja
xlat
fwait
pushf
movb
jp
loopne
icebp
rcrl
pop
push
fdivrl
or
sub
mov
mov
aas
push
fdivl
or
mov
decl
mov
sbb
addr16
enter
enter
repz
pop
cli
outsl
mov
jo
inc
pop
mov
sahf
in
inc
ret
fsts
dec
repz
ds
jns
or
je
fists
mov
sub
inc
adc
outsb
std
das
and
cmp
lods
ret
adc
pusha
out
test
inc
inc
ret
dec
sbbb
cltd
cwtl
pop
inc
in
in
mov
sub
adc
mov
fcoms
jmp
push
loop
loopne
das
aas
cmp
dec
movsl
fildl
mov
pop
mov
mov
in
fadd
and
cmp
movsb
icebp
pop
cmp
aaa
decl
or
xchg
inc
leave
scas
mov
movsl
jl
mov
sub
or
sbb
aaa
stos
dec
lea
jnp
mov
xor
mov
adc
jns
xlat
add
sarb
dec
pop
imull
out
test
test
xchg
clc
or
cs
push
cmp
in
ds
push
or
hlt
loopne
call
cltd
mov
dec
mov
out
add
sbb
sahf
adc
sti
jecxz
push
sub
mov
jmp
les
enter
jmp
mov
lcall
cmp
fistpll
std
cmpsl
sarl
mov
imul
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
js
or
add
cmp
xor
inc
inc
outsb
mov
scas
sbb
out
inc
outsl
mov
rcr
outsb
scas
aas
lods
fs
inc
add
mov
xchg
sub
cli
sarl
js
mov
adc
ljmp
test
gs
insb
sarl
subb
inc
arpl
xor
lahf
jp
jb
fdivs
jge
out
and
ljmp
xor
aad
daa
xchg
fstp
or
and
mov
aad
dec
adc
das
inc
iret
add
sbb
jl
pop
jnp
insb
xchg
push
dec
repnz
dec
inc
push
in
fidivs
xor
inc
mov
or
cld
gs
fldcw
ficoms
push
out
mov
mov
cmp
nop
cmpsl
fisubl
dec
movsb
fidivl
sbb
pop
movl
xchg
sbb
data16
arpl
mov
outsb
add
mov
cmp
mov
push
mov
movsb
mov
jne,pt
in
idiv
or
test
andb
test
push
xor
cld
jno
dec
cmp
test
leave
ja
cwtl
mov
push
shlb
mov
xchg
arpl
cmp
jmp
imul
pop
jae
push
shlb
pushf
std
clc
jg
adc
pop
popf
cmp
dec
mov
popa
stos
insl
stos
sub
je
lock
dec
in
leavew
xchg
enter
mov
xor
push
adcl
enter
rorb
jecxz
cmp
data16
andps
cwtl
sahf
orl
push
imul
test
jl
xor
lea
mov
and
cwtl
or
add
and
inc
out
movsl
xor
loop
lds
push
loope
fld
aas
dec
pop
mov
or
pop
lock
sti
shlb
jecxz
and
push
fcoms
jno
mov
ljmp
inc
dec
hlt
iret
ret
pushl
or
mov
xlat
sarb
das
rorb
in
notl
mov
mov
mov
in
mov
add
xlat
cmpsl
ds
arpl
ss
ficoml
sbb
inc
pop
adc
sbb
into
push
cmpsl
mov
pop
pop
cmpsl
adc
and
push
fdivrl
mov
push
push
int
rcrl
push
lods
or
sbb
adc
stos
ret
sti
call
into
cmp
pop
vmread
adc
push
and
mov
dec
stos
pushf
test
sti
inc
das
adc
jns
or
int
push
test
movsl
add
les
mov
cli
pop
loopne
cli
mov
xor
mov
test
mov
add
repz
dec
in
mov
add
push
ds
movsb
out
dec
sbb
nop
test
cmpsb
gs
add
movsl
rorb
lcall
lahf
cli
push
mov
mov
adc
dec
sbb
out
lcall
push
push
bound
lcall
out
call
lods
mov
shlb
sbb
outsl
out
xchg
mov
icebp
pop
cmp
bound
mov
repz
push
pop
iret
fidivl
orb
cmp
movsb
imul
out
push
hlt
insl
scas
loope
rolb
adc
push
sub
push
sbbb
test
xor
lahf
addr16
xor
adc
mov
test
pop
jmp
insl
outsb
push
jnp
inc
fnstsw
loop
gs
push
lock
movl
ror
ret
aas
inc
iret
imul
jns
adc
mov
sbb
pop
stos
jp
mov
xor
jmp
cmpl
shll
lahf
bound
add
icebp
cs
push
mov
xor
sub
and
push
xchg
cli
insb
fcmove
jnp
fcompl
aas
sbb
cmp
bound
push
loopne
xchg
xchg
mul
xchg
sbb
and
in
dec
inc
xchg
in
clc
les
repz
int
jmp
daa
inc
mov
xchg
sub
ds
jmp
loope
sbb
mov
in
mov
not
dec
int
aas
pop
shrl
sarl
test
jle
cmp
lock
scas
in
xchg
adc
sbb
inc
or
mov
lock
cmpsl
packsswb
add
scas
xor
loop
mov
sub
daa
bound
cmpsl
mov
jmp
push
je
lods
out
dec
jmp
xchg
cltd
loopne
xor
std
negb
imul
sub
in
and
mov
push
dec
bound
or
cmpsl
jnp
popa
hlt
in
std
xor
jbe
and
sub
les
int3
pushf
std
jmp
adc
shlb
mov
test
cmp
fdivs
je
mov
mov
pop
add
pusha
push
dec
test
aad
mov
xchg
cmp
pushf
jae
cmp
mov
ret
add
mov
insl
lea
sbb
mov
cmp
mov
js
jnp
aas
repnz
fcomi
inc
je
or
ror
mov
xchg
mov
adc
and
hlt
push
pop
jg
cs
xchg
add
fadd
pop
repnz
movsb
decb
pop
popf
cmp
and
sub
sbb
ja
ljmp
sahf
sbb
xchg
sub
lods
mov
ja
pop
cmp
in
lods
and
pop
rcr
mov
mov
pop
push
rcrb
icebp
js
mov
inc
aad
loop
lss
push
push
leave
mov
cmpsb
xchg
pop
inc
jbe
lret
xchg
sub
xor
rcrb
lds
fmuls
mov
addr16
in
push
add
adc
inc
movsl
pop
mov
fs
push
jns
bound
xor
jb
mov
add
mov
mov
in
and
lds
arpl
enter
mov
in
push
sub
sbb
popa
cmp
xchg
andb
ljmp
fstpt
cmp
cmp
add
jl,pn
int
call
in
test
shlb
add
cld
cs
outsb
xor
mov
push
xor
insl
mov
pop
roll
jmp
or
test
pop
js
or
sub
in
adc
aad
imul
ret
aas
jae
outsb
cmp
adc
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
movb
add
sub
dec
inc
ret
dec
je
fxch
adc
jnp
daa
ja
xor
inc
push
xlat
mov
mov
das
mov
mov
stos
les
xor
mov
movsb
loope
fldcw
jecxz
arpl
or
hlt
les
or
stos
aad
repz
jge
insl
mov
sahf
lret
sub
fidivrl
mov
or
xchg
jle
pop
lods
pop
sbb
mov
in
ja
xchg
jecxz
jg
movsb
pop
cmp
dec
outsl
inc
jb
pop
sbb
clc
jns
sarb
sbb
pop
test
mov
arpl
adc
adc
xor
loop,pn
cmp
add
outsl
and
or
jbe
mov
add
nop
cmp
ss
out
movsl
or
lret
xchg
rcrb
in
or
paddusb
loopne
bound
cmp
arpl
xchg
sub
push
lods
insl
outsl
inc
inc
bound
test
iret
rcr
jp
dec
push
sti
mov
and
aam
imul
adc
insl
popf
push
pusha
add
faddl
into
out
fldenv
inc
lcall
loopne
and
mov
lods
in
mov
lds
enter
pop
leave
add
xchg
push
fmul
inc
xchg
mov
ljmp
jge
xor
sub
jp
bound
xchg
pop
pop
adc
mov
mov
lock
lahf
inc
in
add
or
add
jb
push
out
ss
mov
push
and
and
sbb
cmc
arpl
int3
pop
or
sbb
stos
xlat
mov
push
sub
outsb
jl
sarb
mov
aas
xor
adc
lahf
fidivs
push
arpl
movaps
in
xor
lret
les
mov
dec
loope
xchg
jb
stos
pop
sbb
ss
and
idivl
dec
js
dec
insb
cmc
ja
mov
mov
pop
inc
int
and
pusha
lahf
xchg
sub
mov
or
stos
test
ficoms
dec
xchg
cmp
add
push
push
shlb
push
int3
xor
icebp
push
adc
push
ds
cmp
jmp
clc
sbb
cli
jns
mov
std
inc
xor
loop
je
fidivl
lock
dec
pop
adc
mov
mov
into
push
int3
inc
dec
pop
pop
js
and
add
cmp
sahf
pop
sub
jmp
push
inc
ja
xchg
mov
leave
xchg
movsb
add
add
mov
inc
mov
dec
outsl
mov
jmp
push
pusha
cmp
ret
cmp
imul
and
movsl
jge
popf
in
repnz
enter
fiaddl
mov
cli
sar
push
mov
adc
mov
ss
jo
iret
push
das
shl
call
divl
stos
mov
mov
dec
pop
dec
outsl
popf
cltd
subb
sahf
push
xchg
adc
sbb
mov
ror
pop
or
mov
sahf
out
xor
push
jno
fisttpl
pop
jo
loope
mov
ret
sub
xor
stos
xchg
gs
push
test
jmp
jle
rorl
loopne
notb
insl
sbb
xor
jbe
mov
sbbb
mov
mov
aas
push
cwtl
and
inc
push
loope
call
daa
lret
mul
in
jecxz
insb
insb
xor
addb
xlat
jmp
shrl
push
insb
adc
mov
int
mov
push
push
pop
lcall
or
gs
jl
js
lea
jge
xchg
lods
nop
jl
pop
lods
sbb
jmp
int3
sub
and
ret
outsl
repnz
scas
out
sbb
lds
ja
arpl
insb
or
lea
cmp
xchg
mov
cmp
push
aas
mov
push
aaa
das
lea
lea
loop
jge
cmpsb
nop
movsb
inc
fiadds
cmp
add
pop
scas
jns
jns
mov
xor
shll
imul
pop
fs
ljmp
lahf
ss
inc
fcoml
out
sbb
shll
xchg
dec
lods
mov
sub
into
into
cwtl
incl
mov
or
xchg
ret
xchg
je
mov
xchg
pusha
push
dec
icebp
mov
fdivr
repnz
sub
faddl
jb
orl
out
pop
and
jp
out
add
lock
out
insl
aad
loope
mov
push
or
fildll
test
bsr
cmp
dec
jl
mov
ss
push
cmpsb
fsts
mov
mov
inc
pop
jmp
ret
into
xor
inc
pop
test
jp
jne
lds
pop
movsl
stos
add
xchg
stos
dec
and
push
adc
fmulp
xchg
pop
hlt
rdpmc
add
pushf
mov
pushf
inc
aad
dec
out
inc
cmpsl
fnstenv
test
or
imul
repnz
inc
pop
cmpsl
arpl
push
and
js
cmp
mov
shlb
push
enter
loopne
cmpsb
clc
add
xor
jecxz
jecxz
leave
cltd
sub
and
push
mov
add
daa
addr16
ret
xchg
mov
push
xchg
and
pop
xor
dec
clc
jnp
xor
mov
xchg
sub
movsb
jecxz
jno
pop
add
mov
jmp
push
mov
outsb
imul
nop
or
xor
out
adc
ret
xchg
enter
roll
js
jge
mov
pushf
addr16
loop
fs
jmp
fsts
adc
or
adc
ss
test
loop
adc
push
xchg
popa
ja
or
ret
movsb
out
insb
cmp
jnp
sbb
jp
jle
pop
ljmp
xor
rcrb
jne
sbb
adc
and
stc
mov
mov
test
cmp
and
test
xor
or
sub
push
xor
sbb
cmp
inc
jmp
pop
cmpl
ljmp
fisubrl
popf
pop
ljmp
sbb
xchg
rolb
ret
mov
shlb
or
push
adc
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
push
data16
call
cmovs
scas
movsb
daa
push
sub
es
jle
dec
cmp
cmp
test
in
cmpsl
movsb
dec
mov
and
cmp
shll
subb
pop
lahf
jnp
jbe
shlb
xor
call
jne
jmp
insl
sub
sbb
mov
push
and
dec
andb
movsb
sbb
cmp
scas
imul
rclb
or
call
mov
movsb
cmp
push
adc
bound
fsubrs
and
mov
inc
xorl
gs
xlat
inc
xchg
in
call
xor
movsl
pop
adc
inc
xchg
push
dec
ret
mov
xor
mov
fadds
mov
push
hlt
daa
mov
xor
lahf
dec
push
or
add
in
roll
mov
mov
daa
inc
cmp
in
jmp
cmp
sbb
inc
inc
mov
int3
mov
xchg
enter
push
mov
and
jl
mov
cwtl
xor
das
es
mov
in
cmpsb
mov
js
adc
test
sub
mov
test
cs
mov
rcrb
inc
inc
adc
xor
sarl
les
sbb
or
int3
test
mov
jecxz
lahf
push
mov
sbb
loope
xchg
xchg
movl
fimull
push
pop
push
inc
xor
pop
call
mov
mov
divl
xchg
or
dec
mov
jbe
mov
jmp
inc
sbb
pop
adc
idivb
stc
and
dec
mov
icebp
lahf
xchg
dec
sbb
mov
xchg
push
jge
mov
cmp
sub
adc
cmp
pop
sahf
stos
cmp
popf
inc
dec
addl
adc
aaa
jmp
cwtl
in
lea
jae
dec
xor
jns
pop
loope
mov
daa
add
pop
mov
and
int
in
loop
mov
repz
in
rorb
xlat
nop
cmp
xor
push
pop
clc
add
mov
out
aad
jmp
push
xchg
cwtl
mov
repnz
sub
adc
sbb
add
xlat
xchg
sbb
push
jbe
mov
std
pop
shll
lods
adc
out
fmuls
aam
sub
movsb
loope
int3
fnstsw
ja
or
and
in
stos
mov
aad
scas
push
or
loope
cmp
push
test
leave
xchg
adc
mov
aad
pop
jb
push
cmp
rorl
outsb
mov
inc
sbb
dec
mov
pop
and
movsb
sub
jg
sbb
stos
add
mov
add
jns
stos
out
imul
sub
loop
xchg
in
les
xor
mov
pop
sbb
nop
mov
das
gs
mov
aad
dec
inc
mov
sub
push
aad
fdivrp
or
adc
inc
fucom
pop
or
pop
pusha
pop
xchg
push
sub
add
rorl
sbb
adc
push
adc
sti
inc
inc
mov
pop
mov
sub
sbb
gs
inc
pusha
push
sbb
jge
outsl
test
and
xchg
rorb
dec
lahf
jns
addb
loopne
xchg
out
mov
jno
stos
xchg
jle
ja
sarb
push
xor
add
popa
dec
add
xchg
xorl
mov
adc
lret
mov
jp
ja
sbb
cld
cmp
icebp
cmp
xor
mov
jg
pop
dec
mov
and
std
mov
xchg
mov
adc
mov
loop
inc
test
xor
sti
xlat
js
xchg
sbb
push
mov
jle
inc
push
aas
add
insl
pop
inc
popf
dec
popf
outsb
cmpsl
pop
and
sbb
adc
or
stos
push
cmc
fisttpl
test
test
and
or
cmp
pop
xchg
out
sbbl
mov
in
movsl
dec
sub
dec
mov
icebp
xchg
gs
xchg
addr16
mov
faddp
mov
mul
cmp
dec
push
and
mov
inc
out
pop
jo
sbb
mov
cmc
push
ffreep
inc
push
std
jne
push
inc
adc
mov
ja
scas
pop
jno
and
push
lahf
pop
dec
jb
outsb
lock
enter
into
mov
iret
mov
scas
mov
add
fsts
and
cli
lret
xor
xor
ds
cmpsb
repnz
xchg
add
out
stos
mov
cmpsl
sub
fucomp
and
push
iret
aad
push
mov
imull
cmc
xorl
pop
iret
mov
dec
push
xlat
xchg
data16
frstor
lret
pop
xchg
and
in
cmpsl
imul
xor
out
xor
addr16
mov
pop
imul
mov
addr16
jbe
jns
lcall
xor
and
loope
fsub
jmp
imul
sbb
js
jae
int3
bnd
cmpsb
jno
jg
in
push
cmpsl
std
mov
xchg
sub
addr16
fxch
adc
xor
or
int3
cmp
pop
daa
sbb
sub
sbb
test
adc
fwait
ss
pusha
std
cli
push
outsl
inc
xor
aaa
xor
xor
es
call
divl
lret
out
adc
lret
lock
cmpsb
in
shlb
enter
jecxz
add
test
loope
dec
cmp
aad
je
setge
jno
sbb
es
nop
cli
movsb
cltd
popf
inc
push
in
mov
push
fwait
sub
ret
mov
push
jne
fcmovu
cmp
xchg
mov
test
out
xchg
add
popa
inc
imul
ret
dec
xor
stc
jge
repnz
aam
daa
ret
and
lsl
push
inc
jecxz
jne
cmp
fiadds
stos
shll
mov
pop
in
sub
push
adc
inc
dec
shld
adc
jb
dec
fs
xor
sub
or
popa
fisubrl
mov
orl
loop
push
mov
or
mov
out
pop
sub
mov
jl
mov
mov
outsb
rolb
test
stos
out
and
daa
bound
mov
pushf
mov
stos
ss
lods
lea
les
xchg
jns
ds
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
femms
daa
jg
sarb
lds
sarb
into
popa
push
idiv
xchg
pushf
ret
nop
and
psubsb
ret
fs
sub
xor
adc
xchg
enter
sbb
sbb
cmpsb
popa
mov
mov
sub
inc
out
jae
fwait
inc
lock
inc
dec
jecxz
out
lds
jmp
addr16
dec
pop
jne
mov
xchg
out
pop
adc
scas
jmp
jo
loop
jl
test
movsb
insb
insl
mov
lea
push
cmp
in
jl
in
add
lea
xchg
negb
pop
push
or
sub
mov
ja
sarl
sub
xchg
xor
sub
clc
jg
popa
pop
ffree
stos
add
mov
jecxz
ficomps
jns
pop
mov
je
hlt
cli
shll
dec
faddl
test
mov
pop
inc
rclb
and
jg
pop
and
js
out
sub
pop
movl
push
or
jne
jno
add
lret
test
push
fmul
push
adc
testl
push
das
pop
sbb
and
inc
inc
repnz
jnp
leave
inc
pop
lcall
rorb
test
xchg
icebp
add
push
filds
jl
int3
ja
imul
pushf
repz
jge
fsubr
xor
add
mov
sub
xchg
dec
fdiv
xchg
adc
push
adc
pop
std
movsl
jne
cmp
jnp
pop
cltd
pop
jecxz
pop
mov
in
imul
mov
repz
loopne
push
sub
out
xor
or
mov
stos
mov
dec
add
pop
outsl
sub
jle
cmpsb
clc
pushf
xchg
insl
popa
xchg
xchg
fistpll
mov
pop
mov
adc
xchg
stc
cs
or
mov
mov
cmpsb
xor
inc
inc
repz
ds
rol
arpl
lds
enter
or
test
pop
sub
imul
push
xor
mov
add
adc
sti
sti
inc
je
sub
scas
push
mov
pusha
push
stc
xchg
enter
out
xor
inc
pop
ss
test
decb
clc
jl
arpl
roll
ds
arpl
cmpsl
push
mov
or
loopne
jp
pusha
stos
lods
adc
or
mov
jne
into
or
jg
dec
mov
lcall
fs
push
mov
inc
test
add
xchg
mov
std
aas
sub
insl
cld
push
enter
aas
cltd
ja
cmp
in
jbe
movsb
add
icebp
stc
dec
insb
adc
ret
pop
jecxz
push
add
popf
out
jmp
and
fldcw
mov
add
hlt
push
in
mov
stc
jg
push
mov
cmc
cmp
or
aad
mov
dec
mov
push
sbb
sbb
jecxz,pt
stos
imull
insb
sbb
sub
out
jne
fildl
or
cmpsl
pushf
pusha
xor
repnz
cmp
mov
pop
dec
cmp
xchg
add
mov
xor
movsl
adc
outsb
cmp
jmp
insl
sub
jns
arpl
ss
outsl
arpl
shrb
sbb
in
data16
push
call
dec
mov
xchg
ds
jae
cmp
cmp
shl
pusha
cwtl
mov
dec
mov
xchg
mov
or
push
popa
add
jbe
cs
adc
hlt
je
lea
or
jmp
imul
pop
jns
jns
mov
jno
ljmp
aas
mov
and
lock
xchg
call
lret
outsl
mov
in
add
lock
loop
xchg
nop
push
sbb
mov
inc
repz
lret
xor
outsb
add
aaa
mulb
iret
shlb
lret
and
repnz
sbb
nop
frstor
xor
rclb
xor
adc
pop
mov
mov
inc
pop
push
sbb
aad
fiaddl
popa
lods
loopne
stos
add
cmp
push
aad
es
js
int
hlt
jge
push
cmp
push
dec
push
insl
ja
aaa
jecxz
ss
das
sub
adc
mov
movsl
push
mov
fwait
mov
sbb
push
xor
inc
cli
stc
mov
jae
in
mov
xchg
sub
je
arpl
mov
sbb
push
cltd
xchg
cli
push
mov
jmp
xchg
or
cmp
sbb
outsl
clc
lds
rcll
push
mov
daa
lret
stos
mov
scas
fstl
xor
repz
in
iret
les
lret
in
ja
lret
jge
je
ffreep
mov
sti
dec
pop
inc
in
fwait
inc
and
xchg
insl
mov
pusha
mov
or
cmp
mov
mov
jmp
xchg
stos
repnz
mov
inc
scas
and
and
je
lret
add
aaa
and
daa
shlb
outsb
mov
gs
lahf
mov
mov
call
scas
add
inc
ficomps
int
xor
shll
xchg
ja
stc
stc
push
cmpsb
popa
bound
out
bound
inc
ja
mov
mov
cltd
in
mov
shlb
movsl
neg
or
mov
repnz
sbb
cld
inc
cmp
lret
sbb
out
push
repz
pop
cmpsl
arpl
or
ret
inc
pop
sub
in
rorb
or
sbb
cli
inc
addr16
ja
insl
jge
rcll
ret
pop
xchg
xor
loope
sub
repz
adc
inc
jns
in
cmp
or
sub
jge
push
call
addr16
popf
jl
mov
pop
hlt
lods
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
das
fadd
loope
invd
add
setno
and
mov
mov
push
cmpsl
or
or
push
jne
cmpsl
scas
idivb
imul
test
jge
stos
aad
mov
imul
xchg
mov
mov
mov
jp
test
adc
adc
loope
jle
cmpsl
add
loopne
xchg
pop
rcll
sub
lea
lock
pop
jno
pop
les
xchg
test
out
into
mov
mov
aaa
and
mov
mov
repz
or
sbb
and
mov
test
sti
xchg
rclb
lret
xor
loop
dec
mov
cwtl
xchg
jnp
stos
outsl
push
ror
mov
mov
and
mov
mov
nop
fnstcw
xchg
adc
add
rcll
pcmpgtb
inc
push
push
stc
push
dec
xchg
shr
aaa
lcall
adc
out
adc
mov
mov
add
dec
jl
pop
int3
sub
fdivp
push
inc
adc
sub
cs
xor
inc
leave
sub
arpl
sbb
lret
shlb
push
icebp
xor
xchg
mov
sbb
sub
mov
arpl
jnp,pn
sti
icebp
inc
mov
movsb
clc
or
sub
testb
imul
adc
ud2
xor
sbbb
mov
xchg
mov
int
movsb
or
push
mov
sbb
xchg
jmp
jmp
fmulp
mov
lahf
pop
adc
xlat
add
and
shl
cwtl
cmpsb
shrb
fdivrl
pop
stos
add
or
dec
jle
push
xor
mov
xchg
xchg
xor
lods
lahf
sub
out
lret
subl
call
test
leave
addb
gs
and
lock
lods
jne
test
imul
test
jbe
aam
sub
mov
cmp
adc
adc
test
or
cwtl
push
mov
mov
rclb
xchg
jbe
and
jl
cmp
lods
mov
push
inc
xchg
andl
rolb
dec
sub
sti
inc
dec
inc
push
sub
ds
xchg
push
icebp
and
xchg
rol
and
or
xchg
adc
adc
cmc
loope
ret
repz
test
push
inc
cmp
cs
pop
test
adc
pause
mov
fs
ret
fcmovnbe
cmp
xchg
into
ss
mov
inc
xchg
mov
pop
pusha
or
fcoms
aad
inc
mov
sub
stc
fwait
pop
xchg
jp
inc
sbb
loop
cwtl
loope
test
mov
arpl
out
testb
or
popa
js
add
cmpb
adc
jle
fs
lahf
push
out
fdivs
inc
inc
or
push
adc
mov
mov
inc
and
sahf
testl
sub
dec
call
add
pushf
sarb
in
pusha
mov
xchg
insb
cmp
adc
iret
or
and
nopl
mov
test
pusha
pop
sub
in
orb
inc
cmpsb
jp
push
mov
loop
aaa
lcall
sbb
jae,pn
test
cmc
jbe
lods
pop
out
dec
call
push
mov
cmp
orl
enter
loopne
mov
faddl
sarb
xor
adc
mov
xor
and
push
mov
fs
clc
mov
inc
xchg
pop
mov
push
dec
daa
sbb
inc
movb
ror
fdivrl
push
push
jb
in
mov
xchg
out
jo
aam
xlat
pusha
mov
adc
push
sub
xchg
cwtl
sbb
mov
movsl
mov
rorb
outsl
add
mov
and
cli
push
dec
cmp
sub
add
inc
xchg
sub
jno
mov
jg
inc
rclb
icebp
mov
aas
stc
je
xchg
popa
pop
adc
jbe
mov
cwtl
xor
jno
add
pusha
fsubl
pop
jnp
push
sub
mov
xor
mov
aaa
cmpsb
daa
popf
into
cmp
pop
pop
mov
js
cmp
ljmp
cmp
jp
int3
xor
jge
jp
into
dec
jne
jecxz
xchg
out
das
in
dec
dec
out
adc
mov
pop
cmp
mov
xor
sbbl
pushf
lcall
aad
ret
and
dec
adc
mov
mov
stos
mov
mov
or
sbb
mov
not
shrb
icebp
std
xor
es
adc
pushf
out
fmuls
lret
push
ret
test
shlb
or
push
pop
sbb
mov
and
xor
mov
inc
xchg
movb
mov
fisubrs
mov
stos
xchg
or
lock
repnz
scas
inc
xchg
xchg
mov
in
shlb
stos
add
sub
xchg
push
repnz
sbb
mov
mov
inc
xor
mov
xor
in
adc
sub
push
xlat
repnz
mov
mov
in
cmp
push
leave
adc
push
mov
call
rcrl
fwait
sub
call
jo
lahf
fsubl
cmp
fiaddl
mov
jo
testb
cli
stos
inc
mov
sbb
or
cmpsl
addl
push
ud0
jl
pop
dec
inc
sbbb
xchg
push
xadd
sbb
test
mov
sub
xchg
insl
sub
je
jmp
fildl
aaa
lret
cmc
popf
add
shll
push
cli
aam
xor
or
cmc
pop
adc
adc
rcl
call
inc
adc
add
cmp
je
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
jbe
mov
invd
add
syscall
test
push
cli
mov
mov
xchg
lds
mov
mov
mov
pop
and
push
mov
ja
mov
add
mov
ret
fdiv
mov
aad
les
fisttpll
sbb
leave
int
out
sub
sbb
das
ficoms
mov
xchg
fsubrl
mov
mov
push
and
push
jne
cli
sti
dec
shrb
outsl
fnsave
repz
subb
inc
push
pop
sub
fmulp
mov
adc
faddl
rolb
mov
std
and
mov
test
negl
neg
dec
xor
ds
push
out
cld
lcall
sub
add
adc
mov
popa
into
mov
repnz
cmpsb
insl
les
or
rorb
pushw
mov
das
fs
scas
sub
or
inc
jle
dec
ret
js
jle
lock
inc
xchg
or
std
pop
add
push
repnz
ljmp
clc
inc
adc
pop
push
rcll
push
iret
ret
aad
nop
add
push
lret
push
xor
sbb
pop
mov
cmp
push
pop
rcr
xchg
mov
push
fisubrs
mov
sbb
aas
das
jo
inc
orb
mov
push
jecxz
push
xchg
das
mov
nop
jbe
jno
add
mov
repz
pushl
sbb
cmp
outsl
rclb
popa
mov
pop
repz
jo
and
in
out
sbb
leave
lahf
jno
aas
and
push
dec
in
xchg
ficomps
jge
popf
or
arpl
out
add
xchg
jmp
adc
xor
pushf
push
cmc
mov
mov
nop
sbb
xor
mov
jno
in
test
and
fstpl
mov
ficoms
stos
cmp
jmp
mov
dec
cmp
jae
in
popa
ret
mov
sub
cmp
and
push
mov
out
mov
call
adc
sbb
mov
aas
jne
mov
inc
sub
aad
outsl
shll
mov
fwait
sbb
jle
mov
int
rcl
test
xor
add
sbb
das
and
lcall
inc
int3
fidivrs
xor
pop
pop
jecxz
mov
jecxz
scas
stos
mov
xor
xorl
sub
adc
mov
repnz
fisubrl
lret
jnp
lret
int3
js
sti
push
cmp
into
addr16
push
ss
out
add
clc
dec
pop
push
jns
push
push
pop
inc
ficomps
dec
js
fnsave
pop
test
data16
mov
xchg
in
jne
ss
fldenv
pop
xor
iret
add
ret
mov
mov
je
cltd
dec
add
mov
popf
scas
ljmp
push
jno
dec
jp
cltd
or
js
xorb
icebp
push
xchg
jl
mov
fbstp
and
das
fiadds
insb
xchg
adc
xor
xchg
in
repz
scas
jg
cmpl
sub
in
bextr
mov
sbb
pop
dec
pandn
lcall
mov
push
in
sbb
fiadds
and
mov
jle
test
stc
out
cltd
fdivrs
xor
insb
cmp
hlt
sub
inc
rcll
xchg
inc
sbb
dec
mov
add
notb
fmull
fmuls
xchg
mov
stos
pop
xor
mov
rcrl
imull
subb
mov
xchg
mov
scas
out
mov
ds
in
test
nop
xchg
dec
test
es
repz
push
iret
lods
fstl
stos
mov
test
lea
insb
cld
lret
int
es
push
dec
lea
es
push
bound
or
pop
sbb
rclb
jl
mov
loopne
xchg
popf
pushf
jo
or
rcll
sbbb
loopne
aas
movsl
and
lret
xchg
mov
imul
push
addr16
pop
pop
jecxz
enter
movsb
gs
sub
pop
add
xchg
pop
lret
sahf
inc
cmc
je
dec
outsl
pop
sub
mov
stc
jb
mov
scas
jle
into
in
and
pusha
mov
adc
pop
pop
mov
push
jl
rclb
out
dec
mov
movd
push
jl
dec
push
sub
dec
pop
mov
add
dec
push
push
lock
jne
scas
xor
aaa
and
sbb
popa
lret
scas
jg
xor
adc
push
push
mov
mov
in
push
subl
mull
inc
xchg
adc
jae
fldt
cmp
push
pop
push
ljmp
sub
out
lcall
pop
pop
mov
scas
xor
push
insb
mov
mov
add
insl
cmp
fnstsw
out
repz
adc
adc
std
adc
aaa
cwtl
std
fcmovnbe
adc
setb
loop
cwtl
and
push
dec
gs
shrl
fwait
mov
lods
and
mov
cmp
add
pop
inc
andl
fisubs
imul
sbb
icebp
add
mov
call
loop
loope
sbb
icebp
js
aaa
adc
aam
inc
mov
pop
movsb
mov
leave
mov
adc
rol
and
call
lods
cltd
dec
fsubl
je
out
stc
pop
sub
or
rcrl
dec
shlb
sub
aas
rcr
insb
int3
jp
ljmp
fstpt
jbe
lret
adc
lahf
mov
cmp
test
imul
enter
rcrb
mov
ljmp
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
rcpps
ds
mov
push
xchg
add
rsqrtps
push
addr16
mov
or
iret
fucomi
movsl
sub
shll
pop
sbb
mov
jp
fdivr
push
xor
jmp
mov
lahf
dec
push
ljmp
inc
xchg
sahf
pop
inc
push
mov
push
lods
cltd
sahf
subl
mov
jnp
sbb
mov
out
fbstp
lods
in
inc
jge
lds
jae
pop
jecxz
mov
mov
bound
in
xchg
lods
shll
adc
ljmp
loopne
cmp
mov
pop
repnz
jecxz
scas
pop
cmpsb
addl
xchg
loope
aad
mov
sbb
and
dec
mov
push
cmpsb
jb
fistpl
mov
fbstp
push
mov
dec
fptan
aad
mov
shrb
add
aad
xchg
mov
xlat
xor
or
cmpsb
imul
fldcw
stc
inc
aad
push
roll
jbe
gs
mov
or
jo
das
jecxz
mov
mov
jno
dec
enter
sub
imul
fisubrs
aaa
testb
sub
xor
jmp
lock
jge
add
aad
mov
and
jns
sbb
pop
je
ror
std
push
lock
jne
clc
cmp
ret
lock
inc
cmpsb
stos
and
xchg
jbe
add
test
fldenv
cli
jb
mov
ds
int
push
loop
xchg
mov
jl
arpl
dec
addr16
jb
and
dec
xchg
lea
sarl
test
dec
ljmp
ljmp
push
mov
mov
outsl
pop
lcall
cwtl
faddl
pop
repnz
bnd
mov
sub
adc
mov
cmp
fstpl
inc
jl
pop
sub
cmp
mov
sti
test
mov
movsl
jge
push
dec
and
out
pop
pop
and
cmc
xor
aaa
fucom
pushf
pusha
hlt
mov
sahf
jnp
xchg
dec
sub
mov
or
sti
rorl
push
mov
push
fnstenv
push
movsl
mov
cmp
xchg
aad
int3
arpl
sti
sahf
mov
jp
push
jo
mov
dec
addr16
add
aaa
aam
sbb
push
xlat
xor
pop
dec
bound
mov
lahf
hlt
arpl
mov
gs
ret
imul
adc
or
loop
aad
push
push
mov
mov
xorl
and
orl
sub
gs
add
inc
int
std
clc
inc
dec
add
pop
xchg
idivb
cmp
outsl
mov
pmaxsw
sti
pop
ret
jmp
inc
bound
fs
ss
mov
insb
add
aam
data16
jg
cltd
xchg
adc
cmp
jl
push
js
mov
cmp
push
aam
add
xchg
dec
xor
mov
adc
popl
idiv
dec
mov
inc
mov
xchg
xchg
fldl
sub
into
push
xlat
stos
mov
jg
cmp
pop
cmp
dec
pop
and
test
jo
adc
rcrb
push
inc
stos
sub
push
push
pop
and
pop
xchg
pop
inc
cmp
pop
sub
pop
stos
sbb
jo
pop
dec
jb
shrl
inc
rorl
sbb
or
sti
rcrl
fisubl
sub
outsb
add
iret
test
gs
sub
scas
ja
sbb
dec
cli
dec
shll
inc
js
shrl
popa
push
jae
gs
mov
inc
fnstsw
fs
addl
cs
loope
out
pop
and
sub
shll
scas
xlat
add
mov
orl
addl
sti
addr16
jne
dec
mov
dec
fnstcw
negb
pop
scas
subb
cmpl
mov
sbb
jbe
leave
mov
std
sar
dec
pop
inc
popa
out
insb
mov
dec
adc
adc
out
xor
mov
xor
adc
mov
les
sub
rcr
inc
jns
lret
push
adc
sub
outsl
cs
adc
test
mov
push
filds
jp
inc
sbb
push
insb
mov
dec
xchg
add
jle
dec
in
insl
fsubs
pusha
jmp
dec
inc
mov
int3
inc
mov
fwait
loop
pop
rcll
or
sbb
cmpsb
leave
cmp
mov
lods
loopne
pop
push
mov
test
jg
fldt
bound
lret
xor
les
inc
les
inc
add
ljmp
mov
jns
pusha
push
inc
mov
add
adc
jecxz
dec
xor
ds
and
pushf
add
adcl
sbb
push
or
cltd
orl
arpl
adc
sub
jb
jmp
repnz
mov
es
call
xor
jecxz
out
xor
xor
mov
mov
pop
mov
and
cli
test
loop
call
test
sub
testb
bound
fsubrs
push
popa
in
jae
popf
loop
xchg
fsubr
leave
ljmp
inc
xlat
repnz
pop
pmaxsw
cmpl
pop
sti
jg
fs
flds
mov
add
xchg
cmpsb
mov
push
stos
in
sbb
in
pusha
cmp
inc
jo
push
lock
jl
pop
lahf
cmp
lahf
mov
into
add
inc
repz
lds
xchg
test
incb
testl
or
insb
lret
xchg
mov
addr16
dec
mov
jp
fnsave
iret
insb
in
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
lock
inc
cwtl
test
popa
mov
aas
xchg
je
popa
loop
outsl
nop
mov
sub
sub
mov
jbe
sub
xor
mov
movsb
push
outsb
pop
xor
xchg
push
xlat
or
add
adc
in
orl
test
test
int
jb
aad
scas
fsubrs
ret
cmc
outsl
dec
lcall
out
enter
int
xor
popf
sbb
lock
cli
scas
sbb
add
lahf
cmp
jl
test
cvtdq2ps
int3
lea
and
lods
mov
stos
popf
jo
ret
shlb
ret
and
movsb
pop
push
mov
mov
cmc
loop
jle
xor
sti
jns
cmc
outsl
imul
loop
mov
sub
dec
loopne
cmpb
fdivp
int3
cmp
inc
in
mov
loopne
test
mov
fnstenv
jl
jbe
lods
scas
test
cmp
shrl
arpl
mull
in
push
loopne
mov
shll
out
lcall
aam
xor
cmc
inc
jno
call
shlb
psubusw
pop
ss
or
xchg
test
popf
faddp
out
and
pop
add
add
sbb
popa
loope
push
sbb
mov
das
fnstenv
sub
arpl
test
rorl
dec
sub
mov
arpl
std
add
inc
fdivr
scas
lock
ret
faddl
filds
and
cli
out
mov
xchg
out
insl
add
pushf
jl
mov
pop
dec
scas
push
ds
out
cmp
jle
fildl
loopne
pop
movl
lds
in
std
push
dec
adc
insb
mov
xchg
xchg
pop
push
and
mov
xchg
mov
xchg
mov
jo
outsl
adc
mov
pop
dec
call
xchg
pop
jecxz
lds
mov
int
nop
push
loop
jecxz
sbb
in
imul
shlb
ret
mov
in
pop
je
fbld
ss
fldenv
shlb
dec
xchg
popa
push
mov
fwait
jecxz
add
xor
stc
mov
or
ss
scas
mov
dec
and
xchg
dec
rorl
loop
cmpsl
sbb
imul
mov
adc
in
cmpl
test
es
cmp
js
jnp
ret
out
add
xchg
loope
inc
scas
jae
mov
test
xor
mov
sbb
js
and
popa
dec
cld
int3
hlt
pop
mov
loope
push
pop
lret
es
and
rolb
movsb
aaa
icebp
loop
sbb
cmp
push
stos
add
jne
ja
jnp
rol
pop
rol
adc
sti
aam
lret
add
pop
std
imull
mov
jno
mov
cli
sti
popw
repnz
fndisi(8087
cwtl
add
orl
jge
into
daa
inc
movsb
dec
dec
decl
jg
fs
pop
stos
mov
movsl
dec
mov
lock
maxps
ja
add
lcall
fstps
sub
fldl
mov
mov
movsb
rcr
rcl
shlb
jmp
push
jmp
cmpsl
sbb
aam
mov
scas
je
sbb
bound
repz
lods
fnstsw
mov
push
test
iret
imul
cmp
push
mov
in
leave
push
cmp
stc
sti
repz
cmp
iret
out
mov
jno
and
add
cmp
push
cwtl
and
nop
xor
mov
pop
mov
jg
fistl
call
pop
outsb
sub
and
jge
mov
pushl
cmpsb
ds
and
cmpsb
add
fdivr
aas
rcll
xlat
je
les
dec
push
hlt
jae
mov
gs
paddsw
aad
pop
rol
aaa
inc
sbb
popf
daa
or
popf
cmpsb
sbb
cmpsl
add
daa
icebp
mov
xor
add
cmp
cmp
push
dec
loop
push
loopne
out
out
scas
mov
add
dec
sbb
push
xor
pushf
scas
jge
rcrb
jmp
dec
jo
mov
sahf
pusha
xchg
push
jmp
or
stos
mov
sub
mov
scas
mov
jno
scas
lock
mov
lret
sub
push
loopne
jmp
pop
jno
xor
out
mov
test
jg
dec
xor
pop
fmul
insl
jg
mov
mov
dec
in
jge
ret
pop
and
shrl
jmp
mov
je
add
xchg
or
dec
cmp
mov
insl
daa
repnz
push
in
sbb
pop
dec
mov
imul
addr16
enter
ret
inc
subb
cmp
pop
jo
push
lock
in
or
add
ds
mov
push
imul
jge
jecxz
sub
sbb
cs
pop
push
popf
jae
in
rep
lahf
iret
fld
popa
int3
leave
je
icebp
xchg
lret
push
aam
mov
cs
sub
ds
cltd
jnp
dec
aaa
scas
lahf
xchg
movsb
mov
fcom
ss
xor
test
sub
mov
pop
mov
in
fldl
test
dec
pop
xor
rolb
sub
mov
or
repz
mov
jnp
mov
jno
ret
rolb
sub
push
gs
xchg
cmp
push
lcall
jg
and
enter
je
pop
inc
out
iret
ds
std
push
and
clc
xor
es
enter
shlb
lret
jo
inc
stos
mov
push
add
lcall
lahf
xor
and
nop
push
jae
cmp
popf
xchg
adc
mov
jns
pop
idiv
jmp
mov
xchg
mov
insb
dec
mov
or
lsl
inc
jns
pop
add
lods
inc
fstl
add
adc
out
out
es
mov
out
std
sbb
rcll
jbe
mov
and
mov
push
data16
sub
les
stc
ret
lret
scas
cmpsb
repnz
cmp
push
fwait
js
or
xchg
arpl
fs
mov
test
sbb
imul
xchg
out
roll
mov
test
add
sub
test
in
dec
and
out
xchg
mov
mov
scas
int3
cltd
push
xor
cmp
inc
insl
inc
repnz
or
push
fnstenv
leave
dec
sbb
jne
in
and
fistl
fcomps
xor
add
mov
aas
jg
ficompl
pop
jbe
fmuls
les
sub
leave
jbe
rcr
jmp
aas
cld
pop
stc
add
pop
leave
aaa
imul
add
adc
pushf
mov
jne
pop
push
notl
jl
sbb
xchg
cmpsb
xor
fdivl
mov
mov
jp
xor
lcall
mov
fs
mov
js
ror
xor
mov
pop
cmp
sbb
imul
xor
out
xchg
mov
push
loop
test
rcr
dec
adc
mov
adcl
inc
je
cmc
cmp
lahf
in
push
xorl
icebp
stos
mov
dec
clc
outsl
cmp
sbb
bound
sub
mov
pushf
jp
dec
pop
push
push
popa
cmp
inc
xor
ds
push
dec
addr16
fmull
test
push
cmove
dec
loopne
pop
dec
xchg
stc
pop
pop
fcmovb
or
sub
pop
adc
adc
testl
mov
jecxz
enter
nop
add
sub
jo
enter
adcl
mov
jmp
fwait
xorl
stos
in
mov
add
bound
int
pop
fwait
stc
sbb
mov
fdivrs
mov
pop
push
xor
lods
pop
cmp
push
dec
sahf
aam
in
iret
pop
les
mov
filds
insb
mov
ret
int
jle
xchg
or
mov
in
sbb
or
imul
push
rcl
add
jmp
sbb
sub
cmpsb
dec
pop
popf
stc
jo
add
mov
int3
mov
aad
lods
aas
scas
push
hlt
imul
ficoms
sbb
xor
lcall
fsubrl
stc
shll
fcmove
adc
int3
rol
xor
sub
sahf
popa
and
insb
mov
bound
dec
pusha
jbe
cld
sbb
push
stos
push
fildl
adc
mov
dec
notl
xor
push
add
pusha
shll
rcrl
fildll
dec
jne
inc
rorl
mov
and
int
clc
sbb
loopne
pop
stc
pop
test
into
jbe
jo
dec
mov
jbe
dec
push
loopne
mov
mov
sbb
fcmovne
jnp
test
movsb
mov
mov
dec
add
cmp
test
in
mov
dec
fdivl
pop
icebp
fisttpll
in
outsl
xor
jne
xchg
push
cltd
cwtl
cmp
inc
inc
mov
lret
iret
mov
mov
cmp
out
or
gs
popa
pop
pushf
fs
leave
into
lds
adc
shll
or
shlb
out
in
ret
sbb
xor
mov
test
addr16
clc
std
std
cmpb
or
jne
arpl
adc
sbb
pop
sub
and
push
icebp
in
in
orl
xchg
outsl
fmuls
fs
aam
mov
test
or
decb
ret
and
in
mov
cmp
lret
inc
jp
xor
je
pusha
stc
mov
shlb
stc
fistl
xor
in
cmp
mov
xchg
jp
mov
add
test
std
fsts
cmpsl
cmp
cmp
xchg
adc
cmc
sub
xchg
mov
imul
jl
gs
imul
leave
callw
shl
mov
xchg
mov
loopne
or
jb
fstps
add
mov
fcmovbe
in
and
int
repz
jmp
ficoml
adc
dec
lcall
mov
push
or
xchg
popf
cmp
jns
aam
xlat
mov
cs
lahf
pushf
push
xchg
cmp
and
push
aas
jle
xchg
adcl
mov
fdivl
cmp
mov
in
jo
adc
dec
sub
sub
icebp
jns
push
jae
mov
imul
lods
add
scas
mov
xchg
jbe
scas
hlt
mov
jp
in
cwtl
sbb
scas
and
mov
lret
mulpd
rcr
add
lods
mov
mov
or
mov
xor
mov
mov
xchg
cs
lret
push
shlb
enter
mov
inc
jge
mov
cmp
sbb
xchg
imulb
lcall
pop
sahf
sahf
jns
popf
xor
dec
inc
lock
sar
jg
ss
aam
cmp
adc
mov
fldenv
jae
or
inc
scas
push
fstpl
xchg
outsl
xchg
xchg
jne
sbb
push
fcmovnbe
cli
pushf
cmpsl
mov
adc
sub
mov
clc
xchg
jle
insb
jmp
adcb
xchg
and
jne
loop
out
push
repnz
cmp
mov
fdivs
jmp
lock
xchg
cmp
call
ficomps
popa
mov
loopne
fwait
js
add
arpl
xor
testb
jmp
and
sub
fisttpll
lods
fwait
xchg
es
movsl
or
push
aas
pop
pop
jl
fwait
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
pmuludq
in
or
xchg
pop
setle
gs
lahf
imul
mov
sub
test
aas
repnz
cmpb
or
sub
clc
mov
cwtl
inc
xchg
inc
and
cs
lret
inc
inc
loop
jb
ret
xchg
je
addl
pop
or
push
and
scas
cmc
aaa
in
das
cmpb
jno
fstpl
add
test
lret
fimull
lahf
add
mov
lds
xchg
adc
cmp
sar
fiadds
adc
cwtl
adcb
inc
loop
in
outsl
add
ss
fmull
jae
stc
xchg
push
mov
inc
lods
xchg
and
outsl
sub
xchg
push
out
call
xacquire
icebp
push
xorb
popa
mov
lds
insl
fcomip
inc
ret
ja
cmp
lock
pop
dec
mov
jle
mov
sub
popf
or
dec
lcall
xchg
gs
inc
or
out
xchg
push
into
pop
into
sbb
xchg
push
nop
and
cs
fdivr
fstpl
ja
xchg
push
jo
mov
lret
ret
mov
pop
and
sub
push
jnp
mov
lahf
arpl
add
enter
bound
cli
jbe
xchg
xchg
adc
out
jbe
je
aam
xlat
cmp
jno
ljmp
cwtl
div
dec
mov
push
mov
inc
es
je
cltd
mov
mov
mov
sub
in
add
jae
es
xchg
stos
pusha
mov
js
popf
notl
sbb
sete
int3
or
cmc
gs
mov
lret
loop
call
shll
mov
ret
cmp
addb
inc
lods
push
in
push
jnp,pt
lock
jo
roll
xchg
mov
inc
jl
dec
jno
lock
loope
dec
leave
pop
jnp
clc
bound
push
out
jmp
xlat
xchg
pop
es
pop
sub
inc
cmp
adc
mov
cmp
loop
repnz
mov
mov
or
fadd
in
repnz
out
xor
fucompp
orb
loop
jg
xchg
sub
icebp
data16
mov
ret
inc
out
add
data16
hlt
sbb
std
fldenv
push
dec
inc
test
xor
gs
xchg
push
scas
call
insl
fstl
scas
fwait
sti
bound
andb
cmpb
push
in
add
shll
insb
mov
and
outsb
push
or
enter
arpl
ljmp
mov
add
lret
xchg
cli
outsl
insb
inc
or
clc
adc
test
mov
mov
loopne
inc
mov
push
inc
iret
stos
or
int3
push
cmpsb
loop
ret
adc
out
call
xchg
sub
pop
push
into
mov
ss
or
push
dec
mov
movsb
mov
lds
push
int
inc
cmp
and
xchg
insl
pop
sti
xchg
add
lea
mov
pop
xchg
loopne
mov
sbb
and
ret
ljmp
inc
sbb
out
and
jne
pop
ds
and
andl
fstpt
leave
imul
mov
cmp
sbb
ja
daa
shrb
in
cmp
sbb
mov
xchg
xorb
push
mov
in
lret
mul
inc
mov
in
pop
lods
aaa
adc
fcoms
dec
movsl
cmpsb
cmp
bound
pop
xlat
mov
mov
mov
bound
iret
dec
sub
loope
shll
push
lcall
push
jns
sahf
stc
mov
test
pop
mov
push
pop
fnstsw
fimuls
pop
push
xlat
cmp
push
xlat
jge
loop
cltd
repz
push
les
jl
clc
hlt
pop
mov
loopne
sbb
bound
dec
test
or
fdivs
test
and
or
push
adc
dec
loopne
jge
rorl
rorb
ss
sub
call
ja
dec
ljmp
lret
jmp
sbb
and
scas
jg
cmp
add
rorl
mov
fwait
mov
mov
dec
mov
imul
pushf
dec
jmp
subl
popa
stos
test
sub
mov
adcl
sub
push
cwtl
inc
bound
ret
rcrb
lret
jge
andb
dec
rorl
sti
dec
or
mov
mov
and
mov
xchg
testl
push
enterw
mov
fnsave
sbb
js
inc
sbb
pop
mov
dec
jne
xchg
ret
sarb
sub
pop
jp
cmp
cmp
ds
dec
inc
pop
int
les
dec
cli
mov
sbb
xlat
inc
mov
insb
imul
mov
mov
js
xlat
pop
int
test
aaa
fnstcw
jg
ja
jp
mov
push
mov
lods
and
es
pop
mov
pop
lods
out
jmp
sub
mov
cmp
xor
into
dec
das
cld
lret
shlb
imul
scas
icebp
mov
sahf
mov
sti
mov
jmp
lret
sub
cli
mov
and
adc
xor
push
pop
inc
je
xor
xor
mov
dec
stc
mov
addr16
mov
add
int
push
div
push
sub
ja
fildll
movsl
es
sub
and
icebp
adc
lea
sub
repnz
out
inc
push
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
ffree
mov
or
pfacc
mov
lahf
std
mov
pop
xor
mov
push
pop
adc
cli
push
inc
movsl
or
xchg
in
stos
lea
cmp
repz
test
or
arpl
jb
stos
int3
inc
call
push
les
pop
icebp
pop
xchg
xor
popa
in
sbb
aam
sbb
dec
test
sub
sub
mov
xor
push
push
cmp
sbb
out
or
mov
add
mov
ljmp
je
inc
cmpsl
lret
aas
adc
xchg
mov
jp
jnp
lret
shll
sbb
sbb
jle
hlt
imul
bound
mov
fs
cmp
pop
test
popf
push
mov
sub
das
gs
sbb
mov
push
jne
mov
aaa
add
and
sti
xor
xchg
xor
push
ja
dec
xor
mov
insb
clc
add
add
dec
pop
dec
in
mov
cmp
mov
jns
mov
lcall
push
mov
clc
lahf
mov
pop
and
inc
pop
gs
inc
sti
fiadds
fadd
mov
scas
pause
scas
dec
testl
lret
dec
je
xchg
mov
mov
test
or
pop
ss
rcrl
push
mov
and
sbb
out
mov
or
dec
mov
dec
jl
jmp
xchg
mov
mov
push
jp
or
push
xchg
shrb
mov
sbb
inc
jmp
mov
daa
sub
shlb
pop
mov
ret
push
ljmp
adc
mov
outsb
xlat
push
sbb
mov
mov
jne
loopne
jbe
lods
outsl
pop
cmp
insl
push
fstpl
hlt
aas
jno
xor
and
adc
mov
push
or
and
iret
test
pop
mov
mov
out
jmp
xchg
daa
arpl
add
xor
or
stc
repnz
push
fdivl
jns
mov
xchg
push
xchg
jnp
stos
aad
add
or
fisttps
daa
shlb
pop
xchg
xchg
clc
jmp
fcomps
dec
js
popa
div
out
lea
stc
push
inc
lock
sub
push
dec
cmove
test
shlb
lret
daa
mov
inc
and
xchg
mov
ficompl
sub
in
push
rorl
ret
sub
in
or
into
and
movsb
cmp
or
imul
mov
scas
sbb
xor
fdivr
pop
mov
xchg
fwait
call
fidivrs
mov
jp
add
jle
inc
insl
fstpl
popa
pop
bound
incb
cs
pop
decl
pop
popa
enter
mov
icebp
sub
cmc
lret
cs
psubusw
outsl
imul
pop
adcl
popa
sahf
jo
jo
sbb
movsb
mov
mov
int3
movsb
cmpb
xor
mov
sarb
jle
cmp
push
out
stos
push
jge
jle
pop
sub
lret
xor
mov
pop
js
jge
repz
cwtl
pop
push
push
shl
ficoml
mov
in
or
xchg
xchg
jecxz
sahf
mov
jb
int
loopne
shlb
pop
xor
mov
loope
mov
pop
xchg
sub
xchg
jns
int3
pop
sti
in
jne
es
lods
enter
insl
in
pop
jl
jns
push
je
and
and
int
bound
dec
mov
fstps
push
mov
adc
pop
xor
aaa
mov
dec
pop
adc
xchg
aam
je
movd
dec
xchg
pushf
test
pop
mov
bnd
jg
push
add
sbb
push
into
mov
push
or
cwtl
push
scas
addb
push
std
out
mov
xor
lcall
nop
add
lahf
fstps
loopne
pop
jns
loope
daa
mov
insb
inc
xchg
fldenv
jae
mull
and
out
mov
xchg
xchg
hlt
sarl
inc
push
and
xchg
cmp
jg
push
xor
and
out
subb
mov
sub
xchg
cmp
in
add
push
jge
or
mov
dec
fidivrl
outsb
mov
fisubl
jecxz
pop
mov
jbe
pop
and
inc
notb
inc
pop
xchg
daa
push
movsl
cmp
popf
or
lret
pop
lds
mov
xchg
dec
xchg
xor
sti
cli
inc
fisubl
xlat
pop
dec
dec
out
int
inc
int3
pop
jns
jg
or
dec
mov
or
inc
push
leave
int3
sti
scas
xchg
xchg
cwtl
xor
inc
or
sub
stos
inc
imul
push
enter
call
mov
xor
bound
in
pop
adcl
push
xor
ss
push
lods
adc
clc
leave
mov
mov
mov
lcall
cmpsb
push
add
sub
xor
add
bound
arpl
jle
pop
add
outsl
imul
and
add
cmp
fstpt
pcmpeqw
push
push
mov
outsb
cmp
adc
in
mov
jecxz
push
scas
shrl
inc
pop
arpl
mov
adcl
add
push
pusha
xchg
loop
jle
add
fisttps
add
jmp
xor
dec
jmp
pop
andl
sar
sarl
outsb
imul
mov
pop
sbb
pop
pop
punpckhdq
mov
aaa
jmp
lret
xchg
jmp
mov
cmp
nop
mov
imul
lret
xcrypt-cbc
cmpsl
pop
add
pusha
stos
xorps
mov
sbb
daa
pop
push
xor
in
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
adc
or
pand
dec
sti
aad
pop
sbb
dec
addr16
xchg
shll
push
mov
leave
out
ja
jle
outsl
sti
push
incb
dec
pushf
ret
or
repnz
jg
stos
imul
push
ds
cwtl
repz
xchg
iret
inc
fadds
enter
sbb
dec
enter
imul
cmpsb
cld
arpl
cmc
pop
sahf
cmp
cli
lods
dec
push
daa
pop
bound
outsb
sub
pop
cltd
xchg
cmpsb
jno
xor
in
pop
loop
popf
mov
sub
or
jbe
xchg
js
pop
xchg
mov
out
xlat
aaa
xor
popa
pop
pop
dec
clc
dec
test
lret
jle
std
fnstenv
insl
cmp
lahf
cmp
aam
pop
stos
push
jle
scas
dec
cmp
and
fistpll
mov
mov
stos
xlat
ja
out
jbe
out
push
dec
insl
cwtl
mov
cwtl
xor
mov
out
loopne
outsb
add
add
cmp
mov
mov
push
int3
aad
xchg
xchg
mov
cmp
pop
dec
dec
and
sub
fwait
cmp
or
int
jl
mov
xor
inc
cmc
mov
push
das
mov
cmp
test
jmp
dec
lahf
xchg
sbb
add
movsl
add
call
xor
test
negl
jmp
mov
pop
mov
pusha
push
jp
movsl
jns
mov
pop
imul
pop
jl
sub
sub
xchg
mov
cmpsl
mov
mov
sub
inc
mov
push
jae
push
mulb
dec
jo
adc
jp
add
flds
sbb
xchg
lahf
mov
push
mov
les
cmpsl
push
out
and
pop
and
or
mov
jo
xor
sbbl
cmp
mov
clc
push
mov
ja
xchg
in
leave
jnp
dec
outsb
adc
aaa
or
int3
pop
jae
inc
cwtl
daa
loop
jecxz
lods
mov
ja
mov
mov
stos
inc
insl
mov
sub
data16
or
sub
pop
sub
xchg
jmp
imul
xor
and
sbb
and
or
fstpt
je
mov
pusha
in
cmpl
cmp
pusha
fld
enter
xchg
xchg
fucomp
adc
jne
inc
jg
inc
xchg
ljmp
lea
adc
iret
pop
call
push
jnp
test
adc
dec
out
mov
xchg
je
outsl
push
push
gs
push
pushf
cmpb
or
and
mov
incb
pop
sbb
fs
jb
out
outsl
fstl
and
out
sub
in
jns
lret
shll
cmp
xor
test
cmp
mov
pop
mov
dec
jge
int
movsb
and
aad
shll
insb
cmp
in
dec
ljmp
outsl
test
mov
mov
stos
mov
sti
cmp
adc
mov
stc
xor
lahf
mov
cld
jb
sbb
xchg
mov
cli
dec
gs
inc
mov
mov
bound
push
rcll
xor
adc
call
int3
push
and
add
cmp
lock
fwait
insb
and
cmpsl
pop
mov
push
push
iret
push
out
mov
fisttpl
into
pop
pop
outsl
cltd
rcrb
jnp
aas
push
add
sub
pop
jmp
arpl
xchg
jno
push
hlt
jbe
xchg
test
pop
outsl
xor
or
jmp
mov
fcos
add
aad
fsubl
lahf
pop
loop
cli
mov
ds
or
jmp
and
sbb
or
dec
dec
xchg
jae
jge
xchg
push
dec
mov
pop
fwait
mov
and
adc
aaa
rolb
cmpsb
into
pusha
cmpb
lods
icebp
xor
nop
pop
or
pop
ret
xchg
lds
pop
pop
cmpsb
adc
and
leave
jb
jae
lods
xor
pop
pop
insl
sahf
sub
jl
scas
sub
pop
shrl
add
out
pop
jne
andb
xorl
call
jecxz
push
and
push
js
test
jecxz
inc
stos
xchg
rolb
nop
test
decb
pop
mov
jne
je
xchg
xor
pop
sub
add
dec
or
pop
cs
mov
cmpsb
pop
pop
xor
roll
hlt
aam
movsb
sbb
ror
push
sarl
xor
adc
cmc
test
push
cs
pop
aam
jle
stos
das
cmp
sbb
lahf
xchg
test
imul
sub
sahf
cmp
shll
inc
sbb
push
and
lret
icebp
iret
cli
jo
and
adc
sub
and
dec
imul
push
pushf
scas
fwait
test
dec
dec
jmp
out
jmp
negb
mov
jl
xor
frstor
dec
rorb
adc
push
adc
subb
psubsb
filds
dec
repz
pop
inc
shll
cmpsb
xor
stos
push
pop
leave
dec
push
mov
jmp
jl
sbb
jb
jb
mov
adc
sub
jmp
dec
push
sbb
pusha
inc
sti
and
test
je
rorl
fildl
or
insb
fadd
rcrl
ss
mov
inc
xchg
in
orb
xchg
adc
es
pop
repz
flds
jno
sbb
rcrb
jne
push
rcl
lret
xchg
push
inc
in
int3
sbb
mov
inc
lea
xchg
sbb
xor
mov
adc
fwait
imul
cwtl
sbb
cltd
mov
into
lcall
adc
push
loopne
sub
push
xchg
dec
sub
or
sti
mov
ficoml
mov
cltd
mov
mov
or
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
pandn
data16
call
fucomip
adc
mov
xchg
leave
je
movsb
lods
sahf
test
or
shll
test
sub
lahf
mov
mov
and
nop
mov
fwait
jo
jle
aad
jnp
fwait
popf
mov
cmp
test
adc
pop
inc
nop
cltd
test
cmp
sahf
xor
das
out
sbb
sarl
add
pop
xchg
inc
mov
mov
sbb
pop
out
xchg
stc
and
sahf
gs
mov
mov
pop
mov
add
mov
fadd
pushf
popf
out
sub
loopne
mov
push
sub
xlat
sbb
leave
and
shrl
and
sub
addr16
sbb
fiadds
mov
pusha
popf
push
jg
je
or
cmpsl
push
mov
dec
add
insb
cmp
testl
cs
inc
or
andb
into
in
jecxz
push
adc
and
into
push
repnz
dec
imul
sbb
mov
sbb
or
stos
icebp
lock
es
sbb
leave
dec
jb
mov
roll
adc
repnz
add
xchg
cltd
add
sub
int
pop
xor
mov
and
aas
movsb
sub
pop
sub
lods
enter
mov
ljmp
and
lds
fcmovne
push
fsub
push
out
fnstcw
in
nop
repz
subl
jnp
outsb
icebp
in
cmp
call
imul
test
sbb
push
and
dec
imul
lahf
push
shll
lea
into
mov
stos
mov
into
sub
pop
pusha
mov
movsb
xchg
aam
push
xchg
push
pop
mov
xor
sbb
inc
sub
add
mov
mov
push
jae
stos
pop
out
ss
aam
cmp
dec
adc
mov
adc
push
mov
xchg
inc
dec
rorl
ja
fstps
faddp
push
mov
aas
shrb
jecxz
mov
or
dec
repnz
imul
addb
cmpsb
jnp
mov
loopne
dec
lret
sbb
fcoml
stc
test
xlat
pop
nop
pop
shlb
aam
ret
mov
and
lahf
ja
lods
ret
push
sub
xchg
shlb
push
aaa
sub
or
ljmp
and
in
adc
cs
ds
in
mov
adc
aas
sub
icebp
cli
cmpsb
xchg
test
ljmp
adcb
cld
mov
adc
dec
stc
push
decl
add
and
adc
pop
stos
xor
cmp
outsl
jge
pusha
ret
stos
loope
lods
loop
shlb
divb
and
mov
mov
mov
mov
xchg
fnstsw
push
imulb
popf
mov
icebp
adc
mov
or
fcomps
repz
outsl
cmpsb
out
in
adc
mov
sbb
lock
jbe
push
mov
cmp
ljmp
insb
addl
jnp
es
test
jnp
sub
mov
inc
ja
iret
js
pop
popf
mov
sub
cmc
xchg
leave
jns
xor
jb
sub
scas
lcall
mov
imul
xchg
fcmove
inc
cltd
dec
andl
imull
add
jnp
scas
jno
fdivl
push
popa
push
fidivs
push
fists
daa
dec
mov
mov
jb
or
jecxz
dec
mov
out
ljmp
adc
sbb
in
test
addr16
jo
jns
sarb
jbe
xorl
pushf
mov
out
mov
dec
call
rol
les
inc
fdivl
imul
sarl
mov
xorb
push
jmp
rolb
shl
cmp
and
ret
inc
sub
mov
scas
push
stos
pop
andb
inc
jecxz
pop
arpl
popf
xor
jno
orl
sub
aaa
push
mov
push
sub
cs
mov
jecxz
xchg
into
adcl
movsl
add
pop
lret
push
call
shll
lods
sti
gs
sarl
imul
outsl
pop
jnp
rolb
into
ret
imul
sub
rcl
stos
es
adc
mov
pusha
mov
jmp
push
mov
sub
ficompl
repnz
aad
in
push
or
stc
fistpll
sub
add
dec
adc
inc
stos
lret
lea
mov
std
mov
aaa
add
pusha
jo
lret
nop
mov
cmp
test
stc
mov
repz
mov
or
jp
sbb
repz
ret
jge
enter
loop
xlat
bound
pop
cltd
lock
lret
test
insb
inc
orl
nop
or
je
fdivl
ljmp
in
lcall
adc
int3
push
popa
push
int
aam
xor
push
jmp
ljmp
pop
xor
call
jge
or
in
mov
xchg
jns
test
icebp
inc
mov
sbb
mov
jne
mov
and
cmp
cld
outsb
push
pop
xchg
cmp
xor
dec
pushf
xchg
hlt
pop
lds
xor
jo
push
pop
cld
data16
lods
cmp
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
gs
enter
or
cmpxchg
jecxz
xchg
or
pop
jns
or
mov
sti
addr16
rcrb
add
aam
jnp
mov
sub
add
push
fsubrp
es
cmp
pop
lods
mov
movsl
in
sbb
ret
jl
xorb
jge
fcmovnu
and
clc
add
cmp
insl
movsb
and
jecxz
js
jns,pn
outsl
or
sbb
jno
inc
adc
jne
inc
je
movsl
ds
fsubs
sub
mov
das
lds
cltd
sub
mov
cmp
inc
xchg
lds
aaa
mulb
lods
test
movsl
aad
sbb
adc
push
hlt
xchg
add
push
pop
fstl
pop
hlt
ja
sbb
or
divb
xor
stos
out
in
inc
or
pop
ljmp
ss
lret
out
loop
mov
aas
jg
cmp
cli
les
dec
out
flds
mov
pop
dec
mov
fidivrs
cmp
jbe
ds
sti
or
add
jmp
add
mov
jmp
sbb
jg
pop
sbb
ror
adc
loop
jg
jns
or
jle
les
inc
jg
and
sbb
stos
rorl
data16
and
idiv
sbb
ret
xor
jo
lea
cmp
shrb
cltd
test
gs
sar
sahf
mov
xor
adc
fcmovb
outsl
adc
xchg
in
stos
mov
andb
sbbl
fdivr
test
add
xchg
stc
mov
out
icebp
movsb
mov
mov
out
and
mov
icebp
pop
out
mov
mov
mov
jb
imul
outsb
xor
pop
sbb
dec
or
push
jecxz
jg
sahf
or
lahf
push
jns
mov
and
mov
jg
lret
shlb
sub
sub
cs
cmc
mov
mov
orb
loop
cld
lods
imulb
mov
in
sub
fptan
jmp
pop
xchg
pusha
rcll
xor
or
sahf
xor
or
jecxz
push
cmp
mov
pushf
fidivl
mov
mov
xor
adc
lahf
in
mov
mov
ret
punpckldq
scas
mov
jl
bound
mov
dec
aam
inc
or
jmp
or
mov
add
mov
push
stc
inc
xchg
ja
test
mov
mov
or
pusha
test
lcall
push
shrl
loope
add
cli
fisubrs
loope
xchg
stos
shrl
int
inc
mov
cmp
ljmp
pop
mov
sbb
mov
push
dec
aad
add
mov
add
add
cmp
cwtl
hlt
mov
mov
rcll
or
push
push
push
cld
fdivrs
push
out
cmp
ficompl
movsl
or
out
pop
mov
mov
fmuls
push
pop
adc
or
push
jecxz
int
enter
setno
mov
lods
daa
xchg
adc
push
xchg
dec
push
mov
xor
out
roll
js
subb
in
shll
add
data16
clc
push
movsl
leave
jne
mov
pop
xchg
mov
outsl
fidivs
jle
mov
mov
test
push
in
pop
push
mov
mov
jmp
cwtl
push
lea
adc
xchg
dec
notl
stos
sbb
vpsubw
xor
jae
ret
imul
out
cltd
xor
cmp
out
insb
jp
mov
imul
or
mov
dec
aaa
mov
repz
rcll
mov
jp
cmp
cmp
dec
icebp
divl
mov
xchg
and
insl
dec
test
aaa
cmp
cmpsl
xchg
nop
in
sub
mov
sti
outsb
insb
cmp
cmpsb
mov
stos
out
or
dec
pop
lret
popf
mov
dec
mov
xchg
int
lods
mov
dec
pop
shlb
mov
sub
out
mov
mov
mov
cmp
jne
mov
dec
dec
pop
ficompl
outsb
enter
fisubrs
cli
mov
call
cltd
pop
jle
divl
movsl
dec
hlt
cmp
or
lods
xchg
jmp
xor
scas
test
mov
jb
loopne
outsl
lock
mov
cmp
jbe
push
add
sub
xor
mov
movsl
les
mov
pop
dec
jmp
and
sti
cmp
arpl
adc
mov
aad
pusha
mov
fcmovb
pushl
xchg
jmp
sub
fwait
scas
lock
fiaddl
mov
pusha
xor
or
pop
xchg
cmp
inc
xchg
mov
aaa
add
lahf
and
mov
iret
fcoms
inc
in
aas
arpl
mov
daa
push
fdivl
repnz
adc
mov
icebp
add
cmp
in
in
adc
ret
adc
insl
into
cmpsl
aas
int
push
sbb
xor
outsl
lcall
inc
add
or
and
test
test
lea
mov
or
bts
pop
in
scas
leave
xchg
xchg
cmp
and
push
jg
fldcw
shl
inc
and
pop
ljmp
aas
inc
xchg
lahf
or
jb
scas
dec
sahf
jle
out
adc
enter
sub
sahf
push
addr16
aaa
ficomps
sub
imul
dec
jmp
das
mov
pop
and
les
mov
loope
lds
pop
lods
jl
cmp
and
jb
dec
dec
jecxz
scas
sbbb
into
call
mov
icebp
push
int
and
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
clc
cmc
dec
fisttps
invd
add
setae
cmpsb
mov
and
dec
push
sub
hlt
sbb
addr16
mov
mov
xchg
inc
ja
xor
mov
in
pop
test
lods
outsb
mov
lret
pop
xor
nop
and
push
in
ss
sbb
js
adc
iret
imul
loope
mov
arpl
xchg
ss
insb
leave
pop
stos
andl
test
cmc
movsl
lods
jge
nop
mov
mov
and
mov
cltd
jo
jno
cmp
pop
lahf
dec
sub
mov
jb
mov
sbb
jbe
mov
loopne
repz
std
mov
and
push
inc
out
mov
rcll
sub
sbb
inc
out
push
bound
mov
fistpl
int
lret
popf
adc
sahf
rclb
inc
jbe
rcrb
cmp
sti
sbb
mov
insl
hlt
mov
repz
lcall
fsubp
loopne
jae
nop
les
fistpll
nop
cmp
push
adc
sub
inc
or
fisttps
insl
adc
xor
jo
rcrb
cmp
push
mov
and
bound
cmpsb
sbb
cwtl
mov
sti
mov
sub
mov
pop
call
int
fdivrl
mov
cmp
push
push
icebp
dec
lret
mov
xor
ds
repnz
stos
les
shlb
lds
xchg
ret
mov
divb
ds
arpl
sahf
adc
cli
push
xchg
mov
xor
push
jecxz
je
or
insl
lea
int3
in
hlt
inc
call
jle
dec
daa
fldenv
pop
sub
mov
rcr
jle
fwait
pop
and
in
inc
push
mov
stc
stos
jo
out
xor
inc
mov
test
pop
ret
mov
dec
cmp
shrl
sbb
mov
adc
pop
add
and
cmc
imul
add
je
stos
fwait
cmovnp
push
pop
subb
and
cmp
adc
stc
frstor
pop
sbbl
arpl
inc
push
into
add
jmp
ret
and
pop
icebp
xor
ds
scas
push
pop
adc
dec
mov
sub
pop
cld
mov
and
cmpsb
xchg
xor
xchg
setns
jmp
fnstenv
sahf
push
jecxz
in
or
mov
sub
inc
and
push
idivb
dec
fiadds
cmp
loopne
cmpsb
in
pop
clc
mov
mov
fs
outsb
aad
fnstenv
shlb
xor
imul
mov
push
hlt
dec
adc
jmpw
mov
or
cltd
push
xlat
ja
lods
test
inc
shlb
xchg
or
mov
xchg
adc
lret
scas
cmp
scas
fdivs
outsl
cmpsb
inc
inc
and
sub
test
sub
adc
in
sbb
mov
push
add
lds
fists
push
cmpsb
push
xor
xor
shrb
push
lea
or
nop
cmp
xchg
add
or
sub
hlt
fcmovnb
scas
call
out
cmc
adc
sti
lock
jbe
xchg
push
subl
out
push
inc
fwait
add
or
lret
push
fadd
daa
ret
stos
nop
inc
add
dec
es
sbb
sub
out
insb
mov
clc
xor
mov
jbe
pushl
daa
rolb
lahf
inc
int3
lods
fwait
sbb
mov
pop
adc
add
repz
outsb
popa
inc
pop
xchg
cltd
ret
cmp
pop
pusha
aas
xchg
dec
out
mov
mov
push
divl
and
insb
lock
dec
repz
mov
rcll
mov
inc
ja
mov
gs
push
sti
cmp
dec
push
js
pusha
jo
pusha
in
aaa
sahf
mov
daa
aam
pop
and
push
fsubs
xchg
mov
mov
mov
hlt
pop
stos
out
push
stc
scas
std
inc
test
and
pop
aam
push
es
cmp
push
in
pop
push
js
cld
imul
and
subl
dec
mov
aaa
cmp
push
out
and
sub
in
adc
and
lret
adc
clc
sbb
and
mov
popf
je
scas
int3
cmp
adc
sub
lea
xor
jle
test
add
xchg
jl
cs
stc
xchg
xor
pop
lods
scas
gs
outsb
aad
dec
push
push
sbb
es
mov
mov
xchg
out
push
vmovntpd
mov
js
mov
and
mov
mov
inc
pusha
lcall
das
pop
stos
rorl
out
jmp
pop
sbb
jmp
cmp
ret
into
mov
xchg
jmp
sbb
sbb
out
jp
aaa
rol
aas
mov
movsb
jle
add
jg
or
movsb
sub
mov
add
mov
xchg
rclb
ret
hlt
lcall
idiv
fs
icebp
ret
dec
jno
cltd
ficoml
in
inc
ret
and
fucom
sbb
data16
int
sbb
into
add
xor
pushf
sarb
xor
jecxz
out
and
int3
stos
mov
stos
fidivl
stos
xchg
dec
inc
xor
inc
shlb
pusha
pop
pop
lcall
sti
sbb
mov
sbb
in
push
insl
cmpsl
insb
add
inc
ja
fmul
bound
rcrl
stos
mov
inc
jecxz
mov
lret
arpl
cmpsb
mov
js
mov
ffreep
inc
divl
repnz
fisubs
xor
ret
jo
scas
sbb
in
cs
rcrl
outsl
or
push
movsb
lods
aaa
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
punpckldq
cmp
xchg
movsb
pop
pop
inc
pop
cmp
jae
dec
ds
lea
or
lock
repnz
fsts
mov
lret
ds
xchg
lcall
aad
xchg
jecxz
addr16
test
sub
dec
pusha
inc
sbb
xor
sub
dec
repz
mov
stos
dec
mov
sarl
cmp
push
xor
push
pop
andb
scas
movsb
mov
fwait
jno
push
jmp
push
sub
add
push
or
lds
js
jle
dec
sbb
jl
test
cmovb
pop
jp
in
loopne
inc
sbb
push
lret
jg
movsb
and
push
daa
ljmp
mov
mov
sbb
test
push
loopne
std
les
fwait
dec
add
jns
outsb
pop
test
cmp
testl
push
cmp
in
aaa
or
jecxz
mov
dec
pop
add
out
mov
mov
ja
add
imul
inc
dec
enter
push
cmc
cmp
adc
mov
cmpsb
mov
loopne
sti
out
fildl
sti
adc
movsl
add
imul
imul
mov
out
aas
int
xor
fnstenv
jb
sub
push
ret
nop
jecxz
jmp
shlb
dec
shr
imul
dec
dec
push
aad
sbb
jae
xlat
or
and
scas
pop
jecxz
inc
aaa
mov
sub
xor
xchg
scas
jbe
imulb
mov
fidivrl
sbb
mov
jo
lea
je
push
inc
dec
xchg
add
testl
pop
inc
dec
rorl
ljmp
scas
mov
inc
pusha
jecxz
out
mov
aam
shr
dec
jecxz
pop
movq
lds
mov
stos
inc
xor
or
xor
es
pushl
cmpsl
cmp
mov
in
pop
rcrl
shr
xor
dec
aam
dec
sbb
lods
jge
fnsave
orb
add
dec
pop
or
loope
mov
fwait
gs
ja
add
mov
xorb
sarl
add
pushf
ss
push
xchg
push
je
and
test
jno
inc
sbb
mov
xlat
xchg
js
sbb
xlat
inc
xchg
mov
in
add
test
cwtl
mov
insl
mov
sarl
jbe
test
jmp
pop
add
repnz
mov
jp
stc
js
jo
inc
or
sub
test
paddsb
xchg
jb
push
ret
loope
mov
jl
pop
in
fsubrl
sbb
loopne
mov
add
into
jecxz
sub
pop
mov
lods
aas
sbb
mov
jg
in
xchg
mov
fdivrl
inc
inc
dec
xchg
push
xchg
movsl
jne
xorb
loop
fisubrl
mov
and
lahf
iret
cmpsb
aad
in
push
sub
aad
and
jecxz
mov
xor
sahf
push
faddl
imul
dec
xchg
and
xchg
mov
out
mov
jmp
stos
insb
add
xchg
lea
pop
xor
dec
cli
cmc
cmp
shrl
andl
imul
and
movsb
xchg
gs
and
insl
stos
sbb
aas
into
int
cmp
xchg
add
andl
mov
push
es
sbb
mov
mov
nop
mov
outsl
mov
es
cld
sub
or
or
fs
jmp
arpl
mov
xchg
aad
jecxz
subl
mov
test
lds
addr16
andb
aad
sub
or
sbb
shlb
push
xor
les
sahf
or
jno
ljmp
in
mov
mov
cmpsl
inc
xor
jne
aad
push
and
sbb
mov
ret
mov
xor
xchg
cmp
leave
stos
xor
ret
ficomps
ss
mov
lret
std
sbb
jns
jmp
adc
ret
pushf
iret
in
xchg
into
fildll
and
adc
add
and
imul
or
adc
push
leave
stc
sub
inc
mov
xor
les
push
sbb
dec
mov
dec
inc
inc
push
mov
test
push
adc
in
psrlq
sbb
cmp
je
subb
sbb
je
out
sbb
je
leave
fsubrl
mov
push
out
sti
fidivs
xchg
or
int3
int3
popf
mulb
lods
movsb
out
adc
adc
clc
xchg
xor
push
dec
mov
cltd
sbb
jb
or
stos
rcrb
mov
jecxz
mov
cmpsl
lods
in
leave
inc
int3
push
outsb
mov
stc
and
mov
sub
push
dec
sti
mov
inc
das
cmp
or
mov
gs
dec
enter
inc
pop
adc
ja
mov
scas
aaa
aaa
cs
outsl
adc
xor
test
xlat
daa
gs
call
add
dec
add
lock
test
pop
mov
sub
lock
out
js
daa
xchg
jo
push
dec
sbb
dec
jmp
xchg
pop
xchg
hlt
or
pushl
mov
sti
clc
pop
jbe
adc
iret
push
fcmovnbe
push
push
jp
adc
ficoml
fnsave
mov
outsl
mov
cli
rep
dec
out
dec
and
ret
cmp
push
pop
inc
rcl
sbb
mov
add
inc
pop
fisttps
lea
or
fimuls
mov
mov
out
pop
jne
lret
dec
jmp
xchg
sub
cmp
les
fld1
jo
mov
lahf
jnp
sarb
mov
add
dec
icebp
inc
or
call
fucomi
decl
shl
jmp
push
mov
cli
sbb
fnstenv
dec
jno
fs
inc
invd
add
rdtsc
ljmp
mov
daa
das
cmp
pop
push
repz
cli
bound
and
cmp
mov
jl
inc
xchg
repz
repz
lock
mov
add
test
mov
mov
sbb
jp
ret
pop
push
cmpsl
nop
push
push
mov
add
jge
imul
or
mov
cmc
xor
mov
ljmp
repnz
scas
add
push
push
and
sbbb
or
sub
xor
xchg
add
push
orb
and
aad
popf
insb
cli
into
and
mov
jmp
add
ja
fimuls
or
mov
pushf
fs
std
jno
and
push
xlat
pop
push
test
cmc
dec
xor
sub
pushf
dec
shr
mov
lods
gs
and
dec
mov
sub
cmp
or
add
push
dec
loope
icebp
inc
mov
cmpsb
sar
mov
pusha
push
sbb
pop
pushf
pushf
mov
into
mov
or
loop
pusha
jns
loopne
cwtl
lret
dec
jns
pusha
sbb
xchg
inc
int
mov
insb
mov
mov
mov
or
clc
cmpsb
mov
sti
pop
popf
xchg
xchg
dec
jne
bnd
xchg
aas
gs
imul
stos
xchg
loopne
mov
or
idivl
cmp
iret
cmp
fsubrl
push
sbb
mov
aas
jge
popf
pop
int
xchg
test
pop
iret
jg
push
popa
fdivr
test
mov
faddp
xchg
clc
pop
orb
sarb
jo
js
cs
sti
sbb
jecxz
mov
mov
pop
sbb
mov
pop
xor
mov
dec
add
lret
inc
xchg
pop
jns
cmp
xor
lret
lds
jnp
push
adc
orb
loope
jbe
shll
sbb
fsubrl
dec
pop
cmp
inc
lret
mov
leave
leave
dec
mov
cmpsl
lret
repz
and
lods
lahf
repz
and
dec
mov
push
cltd
jne
jo
das
repz
das
add
sbb
test
outsl
call
imul
push
les
xor
xor
jp
sub
dec
in
jge
daa
int
test
icebp
mov
xlat
insl
ja
sbb
dec
sub
mov
and
into
pop
cli
xor
and
xorb
ret
or
ljmp
lds
mov
jmp
js
pop
mov
movsl
fstl
outsl
cmc
stos
sub
xchg
add
pop
dec
and
out
enter
cmp
push
faddp
or
pop
pop
jl
dec
push
cltd
vphaddbq
dec
lcall
ja
shlb
push
lea
flds
pushf
adc
repnz
nop
jp
cwtl
std
test
push
xor
mov
insl
push
push
jmp
pop
cmp
daa
dec
or
jl
mov
and
out
lcall
stos
mov
fcmove
jl
int
test
sahf
mov
pop
inc
roll
dec
lcall
dec
scas
adc
insb
fstpt
xchg
ficompl
in
or
mov
popf
int3
popa
call
out
aas
xchg
popf
mov
or
xor
inc
pop
jne
push
push
jle
loop
into
dec
jge
je
jmp
mov
js
rol
push
int
stos
lds
lds
int3
dec
and
mov
cmpsb
add
pop
dec
in
cmpsb
pop
jne
into
ss
push
lret
pop
or
mov
jle
mov
loope
jmp
or
cli
shlb
jmp
test
lds
gs
dec
fnstcw
imul
out
and
popa
or
xorb
in
jo
insl
mov
fucomip
sbb
pmaxub
je
les
adc
mov
loop
movsb
sbb
mov
fstl
movsl
dec
push
dec
adc
pop
outsl
add
bnd
xor
inc
add
pusha
stos
in
inc
dec
out
and
mov
jge
sub
out
rclb
mov
out
sbb
inc
movsb
cltd
mov
out
xchg
roll
mov
cs
es
cld
in
sub
int3
add
lds
mov
data16
xchg
je
pop
dec
or
and
jp
testl
fisubrl
adc
fcmovu
mov
sbb
mov
and
std
imul
pop
mov
inc
xor
pop
xor
iret
fcom
cmp
pop
push
push
jge
sbb
mov
lds
aaa
test
cmp
in
xchg
xchg
cmp
vorps
jbe
incb
cmp
push
loop
and
pop
mov
xchg
and
mov
ljmp
adc
sahf
push
push
adc
popf
fsubrl
fs
cmp
sti
mov
jbe
insl
call
adc
push
dec
xor
insl
mov
mov
das
adc
and
bound
jb
inc
stc
xchg
push
and
adc
mov
sbb
shlb
aaa
and
and
inc
pop
adc
ret
inc
xchg
cmp
or
push
add
jnp
mov
push
pop
mov
pop
lds
sbb
sub
jbe
mov
arpl
mov
pusha
ljmp
pushf
xor
hlt
or
ljmp
imul
lret
adc
popf
push
vpmaxsw
push
loopne
dec
sub
sub
orl
shlb
fwait
push
outsb
cmpsl
test
shrb
mov
popf
fld
sub
aas
aaa
adc
push
inc
cwtl
adc
or
or
pop
push
bnd
gs
push
in
mov
cwtl
inc
jae
inc
and
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
lods
xchg
out
mov
inc
push
sub
int3
sbb
pop
xor
sahf
and
cmpsb
jnp
cmp
pop
mov
pop
sub
into
jp
lahf
and
outsb
xchg
leavew
mov
fs
repz
adc
mov
scas
movsb
mov
int3
lock
mov
jnp
jg
mov
lds
aaa
out
das
in
mov
jmp
ja
sbb
fsts
or
mov
cmpsb
out
sbb
pop
cli
in
nop
mov
add
push
imul
fs
out
push
push
je
inc
std
inc
xchg
cs
aaa
and
xchg
mov
or
push
cltd
sub
stos
mov
sub
pop
in
sbb
std
lods
mov
sub
stos
mov
fcomps
daa
das
push
pop
adc
cli
xchg
hlt
xor
and
lcall
pop
adc
repnz
or
cli
sub
bound
mov
pop
push
fidivs
test
sub
mov
fistps
pop
insb
int3
sahf
aas
xchg
push
pop
iret
fmull
test
mov
pop
or
js
cli
add
and
xchg
pop
add
add
jno
inc
movsb
addr16
mov
xor
shlb
stos
mov
ficoms
out
mov
mov
jae
jns
pop
inc
inc
lcall
jne
sub
ret
jbe
js
xchg
imulb
push
push
div
pop
inc
cmp
mov
mov
mov
sti
xchg
lods
in
daa
sub
test
fwait
pop
icebp
and
xchg
ljmp
imul
sub
mov
out
ljmp
mov
out
cltd
lods
nop
out
add
xor
aam
push
int
into
adc
lcall
cmp
sub
test
cmp
sub
mov
mov
pop
xchg
sahf
cmpsb
cs
jl
in
jo
pop
in
stc
mov
mov
jg
imul
or
mov
pushf
ds
adc
cmp
dec
dec
or
inc
daa
pop
cli
ds
xorl
mov
add
sbb
out
dec
stos
jmp
sbb
ljmp
out
add
mov
sub
add
inc
mov
inc
mov
enter
inc
loope
add
int3
arpl
orb
enter
push
cmpsb
fdivl
andb
or
mov
mov
adcb
les
mov
xor
arpl
test
xchg
rcrb
pusha
fcomps
loopne
inc
lods
insb
push
and
out
gs
aam
loopne
out
cmp
or
dec
mov
inc
into
adc
xlat
jge
xor
xor
insb
xchg
into
pop
loop
dec
jb
inc
jl
xchg
cmpsl
or
mov
inc
bound
adc
xchg
stos
dec
mov
jnp
in
pop
dec
sarb
adc
cmp
cld
inc
lods
dec
jg
sbb
pop
in
jle
hlt
pop
rcrl
cs
sub
inc
mov
jg
cltd
push
cmc
in
clc
mov
cmp
lds
out
adc
loope
add
aaa
clc
xchg
es
sub
pop
xchg
push
jmp
lods
ficoml
out
shrl
jb
xor
sub
out
out
cmc
test
and
stos
rolb
xchg
mov
xor
test
fdiv
mov
push
mov
xchg
sub
mov
sub
push
insl
dec
mov
sbb
mov
sbb
leave
pop
shl
inc
fchs
mov
dec
cld
ud2
dec
movsl
add
xchg
cli
dec
inc
ja
cs
movsl
inc
mov
lcall
pop
daa
ljmp
pop
push
xor
fldcw
push
jne
add
push
xor
adc
ret
ja
ret
in
aaa
mov
inc
add
data16
add
jns
addr16
push
push
icebp
cmp
mov
mov
aas
popa
sbb
arpl
cmp
jb
arpl
in
inc
outsl
movsb
xchg
fwait
mov
cmovg
jl
out
loope
mov
pop
dec
pop
dec
jg
xchg
aas
jp
and
cmp
test
clc
mov
stc
sub
lahf
js
flds
daa
jae
shlb
xlat
jno
clc
jg
rol
sub
mov
pop
movsl
insl
sub
push
insl
inc
inc
popl
xchg
dec
cld
scas
cmpsb
sbbl
push
test
sbb
test
je
stos
std
xchg
scas
sub
scas
lcall
and
into
imul
sbb
lea
xchg
and
pusha
xchg
mov
cmpsl
out
es
xchg
flds
imul
xor
xor
imul
mov
test
inc
enter
inc
cmp
pop
adc
add
cmp
mov
lods
jecxz
ljmp
push
xchg
mov
sub
repz
push
jecxz
add
loop
dec
xor
arpl
xchg
xchg
fucom
pusha
out
xchg
scas
and
popf
fistl
gs
fwait
or
push
jl
dec
add
sbb
popf
jno
push
push
cli
mov
loop
mov
sbb
dec
shlb
movsb
or
fwait
in
std
pop
mov
stos
je
or
pop
repnz
inc
imul
aaa
sub
mov
int
pop
into
mov
dec
dec
add
pop
cmp
sti
iret
or
xchg
jnp
xchg
mov
cwtl
test
in
loop
aad
inc
test
xchg
fs
dec
cli
mov
or
xor
fwait
and
and
sub
push
add
mov
fcmovnbe
cmp
cli
hlt
stc
dec
xor
pop
push
mov
jg
sbb
stos
mov
push
fucomi
pusha
xchg
cs
cmp
fdivr
lods
push
cmp
outsl
sbb
stos
or
sub
std
xlat
xchg
aaa
push
and
fs
adc
push
sub
adc
arpl
lret
jge
aam
add
push
xchg
repz
sbb
push
lods
lahf
es
mov
negl
push
orb
int
push
cwtl
or
ljmp
jae
mov
test
xor
out
inc
xchg
sbb
stos
into
pop
iret
add
and
popa
cmc
mov
push
adc
add
adc
dec
add
pop
sub
or
dec
rep
jbe
int
sbb
jmp
sub
and
sub
fsubrp
and
and
cs
jnp
sbb
stos
loope
aaa
call
leave
push
add
add
imul
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
sbb
clc
sbb
mov
pfnacc
and
popa
jae
or
sub
lods
pop
xchg
shll
fwait
mov
arpl
aad
pusha
cmp
repz
sub
cwtl
out
adc
mov
orb
xchg
pushf
cld
out
in
lods
mov
lock
cmp
ja
arpl
scas
sbb
cwtl
add
leave
jno
dec
pop
in
mov
sarl
nop
mov
dec
pop
dec
fdivp
fsubrl
add
int3
lods
call
outsb
mov
dec
lock
sahf
aas
cmpsl
xor
push
jnp
pop
or
push
scas
xchg
into
int3
dec
sahf
aad
adc
push
shll
push
pop
sbb
xchg
test
and
add
xchg
bound
or
and
notb
jnp
movsb
xor
call
sahf
cmp
cmp
incl
mov
pop
in
dec
incl
popa
insl
cmpsl
mov
adc
inc
xchg
mov
ret
movsb
mov
loop
sbb
fisttpll
cmp
pop
ss
sbb
adc
call
add
push
push
xor
push
pop
adc
dec
enter
add
out
ret
hlt
inc
push
std
adc
inc
scas
fmull
bound
jb
je
xchg
sub
xor
mov
hlt
stc
loop
inc
and
sahf
arpl
dec
fstps
shlb
mov
and
xor
inc
jno
dec
sysexit
aas
or
subb
mov
dec
ret
rclb
ror
fnsave
call
movsl
and
mov
in
les
jge
mov
ja,pn
stos
pusha
jg
cmp
add
addb
mov
and
je
sti
mov
std
stos
sub
sub
cld
daa
lods
or
dec
and
push
or
mov
and
mov
lcallw
jecxz
je
arpl
shl
cltd
and
jp
mov
sbb
scas
in
ljmp
test
mov
mov
shlb
repnz
jle
out
push
jmp
xchg
push
int3
pop
scas
or
mov
or
sarl
xor
sbb
and
xchg
popa
loop
outsl
movsl
push
sbb
jno
xor
pop
lods
popf
jmp
dec
adc
jl
loopne
aas
cmp
adc
cmp
add
mov
jp
inc
adc
cmc
sub
mov
push
js
scas
xchg
and
cli
xchg
scas
adc
dec
push
loope
outsl
int3
iret
or
out
lock
insb
jns
sub
lcall
aad
hlt
cs
movsb
aad
ja
xchg
xor
xchg
xchg
and
test
mov
jmp
lahf
dec
xchg
push
into
mov
push
jl
leave
adc
sar
jle
push
cltd
jle
arpl
lds
fsubs
jae
cmpsb
in
pop
movsl
shll
inc
shlb
xchg
inc
xchg
in
subl
addr16
hlt
hlt
push
xchg
sub
and
push
dec
xor
xchg
or
fs
adc
loop
dec
dec
rorb
pop
sbb
and
xchg
xchg
fcompl
jecxz
rcrl
push
jge
cmp
rcrb
cmpsb
and
cmc
imul
aam
scas
jle
mov
mov
jecxz
icebp
inc
mov
xorl
cwtl
pusha
adc
mov
push
movsl
push
subl
imulb
fdivs
out
pop
mov
popa
fs
imul
dec
in
mov
enter
lahf
sub
out
cmpsb
push
sbb
jl
add
stos
inc
xor
cmp
jbe
in
cmp
push
outsb
cmpsl
stos
or
ss
movsb
adc
movsb
mov
in
cli
or
mov
insb
pop
add
cmp
fwait
push
cmp
mov
or
jmp
sbb
mov
aam
adc
stc
std
sti
inc
xchg
sub
push
fisubl
mov
mov
cs
add
lds
push
xchg
mov
or
jae
mov
and
xchg
in
dec
mov
lcall
gs
sbb
das
fisubs
push
lcall
cmp
push
mov
lods
ret
fs
cwtl
pop
xchg
mov
imul
push
jne
or
andb
push
jnp
jb
rolb
ficoml
jl
roll
xchg
mov
fs
shl
js
jae
xchg
rolb
cmp
ret
mov
sbb
dec
jns
mov
out
jb
xorl
mov
pop
mov
movsb
inc
fs
pushf
std
das
push
inc
scas
xchg
out
pop
inc
mov
add
mov
jb
cli
enter
clc
push
push
mov
push
push
jns
jmp
xor
fcomps
pushf
or
es
les
aam
cmpsl
lea
cmp
jne
xchg
lea
add
inc
or
lcall
cmp
mov
mov
jns
dec
clc
cmp
call
movnti
enter
aas
push
jb
xchg
imulb
mov
ja
lds
jle
mov
daa
pop
inc
mov
imul
cltd
fstps
adc
adc
outsb
add
repnz
push
jne
add
loope
test
imul
sbb
mov
ljmp
xor
xchg
push
sub
xor
inc
fwait
inc
pop
int3
fdivl
or
jge
xchg
dec
cmp
push
outsb
call
pop
insl
cmp
ja
mov
adc
push
out
mov
and
cmp
or
jb
cmpsl
movd
loop
push
popl
add
cmpsb
push
incb
mov
xor
lcall
arpl
dec
js
outsb
mov
dec
test
push
pop
pop
out
and
dec
xchg
ret
mov
adc
jmp
outsb
mov
xor
dec
js
cmp
adc
rorl
arpl
daa
lds
cltd
outsb
inc
mov
repz
push
fs
jle
rep
scas
push
roll
sub
bound
adcl
pop
pop
cmp
test
pop
sbb
xchg
jge
jmp
inc
add
sbb
pusha
leave
pop
jp
mov
jb
in
loop
add
cld
scas
inc
adc
push
sbb
fprem
in
mov
cwtl
xlat
out
inc
mov
mov
adc
adc
ret
adc
lcall
jmp
stos
shlb
pop
inc
push
stos
mov
sub
call
clc
pop
dec
lahf
jp
cltd
pop
scas
push
xchg
dec
testb
dec
and
mov
push
jbe
insb
icebp
xsaveopt
in
jae
jle
xorl
syscall
subl
into
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
in
jns
mov
and
xchg
mov
leave
jmp
inc
les
dec
sbb
pushf
inc
rolb
loope
popa
aas
mov
mov
mov
arpl
test
in
fnstsw
lret
push
lahf
pop
or
mov
fcomip
xchg
sbb
dec
cmp
fiaddl
xor
inc
aaa
js
cmp
sbb
cli
sti
and
add
mov
sahf
daa
ljmp
xor
jae
call
sub
dec
pop
inc
loope
or
jecxz
xchg
pop
out
or
and
and
repnz
push
or
add
nop
fsts
mov
xor
jo
js
sbb
ss
fisttps
fstl
imul
enter
pop
jl
adc
jb
test
shrb
jge
lds
loope
mov
pop
pop
push
int
cmpps
sbb
cltd
pop
adc
loopne
sbb
mov
std
das
xchg
xchg
or
mov
int3
fdivs
xchg
nop
push
adc
jo
outsb
xchg
rol
loope
rcrl
inc
xor
push
ljmp
jp
movl
je
or
push
fidivl
sti
push
mov
sti
ljmp
push
fdivrs
push
out
jb
imul
mov
mov
jnp
mov
pop
test
inc
into
push
aaa
sub
push
lret
ret
push
sub
lock
ret
sti
jae
icebp
mov
mov
cmpsb
xchg
add
xlat
shl
pop
push
sub
dec
xchg
scas
xchg
loopne
ss
mov
jo
iret
cmp
stos
or
mov
insl
jge
repnz
fbld
pop
shl
push
sub
mov
pop
mov
cmp
add
into
sbb
jp
scas
dec
pop
popf
cmp
lock
xchg
sub
fcomi
inc
inc
ja
es
inc
arpl
xchg
xchg
mov
daa
dec
sub
andb
pop
mov
dec
icebp
dec
sub
mov
xchg
mov
jb
push
pandn
sbb
lcall
inc
ret
push
rcrb
xchg
mov
jp
and
lret
cmp
adcb
daa
xchg
pop
push
pop
mov
lcall
and
les
and
es
shlb
or
xchg
adc
clc
sbb
cmp
stos
popa
sub
outsl
iret
pusha
pushf
mov
push
add
jecxz
push
sarb
push
std
rcrb
dec
xor
aam
mov
mov
pop
movsb
mov
push
sti
add
rcr
cwtl
adc
add
je
inc
ds
lcall
aas
incl
jmp
fwait
je
pushf
pop
fbld
out
movsb
rcll
repz
arpl
sub
loop
pop
mov
xchg
xchg
ss
pop
das
popa
xchg
or
jge
sub
pop
mov
push
shll
mov
ds
shrb
mov
or
shll
sbb
cltd
sub
sub
mov
fmuls
hlt
cmpsb
jne
outsb
and
push
insl
loop
sti
sbb
shr
lret
sbb
bswap
xor
jp
inc
aaa
cmpsl
or
or
call
cmp
xor
xchg
loopne
dec
ljmp
pop
pushf
mov
cli
iret
cmp
pop
pop
popf
stos
mov
mov
sbb
cltd
jnp
mov
jnp
xchg
mov
out
push
xchg
xor
repnz
mov
movsb
loopne
cmpsb
inc
stc
mov
popa
jg
jg
stos
arpl
and
mov
ljmp
das
sub
dec
add
push
popf
imul
icebp
iret
dec
and
scas
jge
inc
pop
hlt
jle
bound
out
sbb
les
dec
push
push
stos
call
stos
lock
lcall
addr16
and
xlat
movsb
push
add
jo
mov
inc
mov
xchg
mov
add
mov
stos
mov
lds
movsb
inc
jp
push
inc
pop
mov
xor
ret
cmp
hlt
lea
and
aaa
andb
testl
pop
data16
das
enter
movl
stc
jae
fsts
gs
fisttps
cmpsb
jns
cwtl
sub
lcall
or
clts
mov
add
jmp
test
call
mov
xor
xor
inc
jl
testl
push
dec
lods
mov
xchg
sbb
add
enter
push
jg
stos
mov
xchg
ljmp
mov
mov
jl
dec
add
ss
inc
pop
jne
and
movsl
sbb
jb
dec
and
jns
push
mov
nop
test
mov
xor
mov
cmp
xchg
or
push
xor
out
notb
inc
daa
pop
jle
push
mov
mov
xorl
fstl
out
mov
xor
dec
jns
stos
jo
ficompl
leave
jmp
push
push
xchg
sub
pop
inc
pop
int3
lds
xor
outsb
push
or
mov
mov
fistpll
adc
mov
ja
into
pop
cmp
movhps
mov
mov
repnz
mov
or
xchg
inc
aad
push
fsubs
mov
loopne
jecxz
fwait
or
jae
and
add
xor
int3
sbb
das
into
sbb
mull
int3
incl
fsubs
mov
and
mov
mov
mov
pusha
mov
jns
in
cmp
jae
shll
mov
inc
imul
in
mov
dec
rcll
leave
inc
xor
mov
lcall
fwait
cmp
fwait
stc
mov
imul
andb
negl
pop
scas
fs
jp
mov
ret
inc
ds
sbb
mov
inc
lea
xchg
inc
jle
jne
leave
dec
sbb
and
popf
ljmp
arpl
mov
pop
je
push
js
mov
sti
sahf
mov
pop
sbb
dec
ss
add
mov
std
sub
push
iret
leave
push
inc
aad
pop
jns
repz
dec
mov
out
les
loope
cmp
push
jle
fs
pop
and
cmpsb
cltd
ret
lods
dec
test
adc
loop
xor
loope
dec
jmp
stos
cmpsb
xchg
mov
fcmovu
add
lds
fsubrs
push
ljmp
rcll
ds
sbb
xor
dec
dec
test
adc
jmp
into
add
or
adc
adc
and
mov
mov
and
adc
inc
cmp
roll
sbb
std
pop
ret
mov
add
out
jl
cli
mov
sbb
lret
pop
and
pop
adc
fstps
mov
insb
ds
xlat
push
bound
loop
test
or
sti
mov
dec
leave
dec
hlt
xchg
pop
ljmp
aas
pop
loopne
std
push
inc
inc
inc
out
push
in
fstl
mov
lea
test
ret
pop
imul
cmp
adc
xor
adc
int3
loop
sub
sbb
pop
inc
call
gs
cmp
adc
push
xchg
and
iret
pop
fucomip
sub
fcoms
dec
push
cmp
hlt
out
or
int3
xor
xchg
xchg
lret
mov
ficoml
into
cwtl
bound
add
cmp
cmp
adc
mov
sbb
arpl
push
movsb
int3
mov
jne
movsb
jge
push
fs
dec
pop
sub
sahf
in
sub
out
cmp
sbb
xchg
jg
enter
outsl
enter
mov
rcrb
push
cs
outsb
icebp
adc
out
dec
xor
xlat
ss
push
xchg
ficompl
ds
pop
push
push
lods
leave
sub
loop
roll
fmulp
adc
es
pushfw
jge
jno
cli
ja
sub
sarb
aas
cli
or
idiv
mov
fidivrl
cmp
cmp
lret
inc
in
inc
in
data16
jno
scas
jge
adc
mov
inc
sub
int3
push
cmpsl
test
and
cmp
mov
mov
ret
xchg
idivl
inc
imul
xchg
movsl
push
jbe
out
push
test
xor
imul
data16
sbb
imul
test
jns
push
movsl
xchg
and
push
in
inc
int3
orb
xchg
adc
xchg
lcall
adc
or
pop
mov
ja
leave
rorb
or
aaa
ljmp
aas
loop
out
popf
aas
xchg
mov
jne
hlt
inc
int3
insl
mov
int3
sbb
or
loope
cwtl
adc
addr16
jno
fcmove
fs
mov
rcrb
inc
sti
loope
adc
push
jecxz
mov
shll
in
push
mov
nopl
icebp
negb
mov
xchg
xor
or
mov
jl
scas
fistpl
jb
and
adc
loope
stos
and
test
xchg
cmp
fcoml
sbb
jecxz
imul
mov
cld
adc
loope
pop
cmp
or
lretw
leave
leave
outsl
arpl
aas
scas
scas
nop
jl,pn
adc
push
mov
pusha
rclb
push
cmp
add
xor
stos
mov
lea
imul
pop
insb
movsl
mov
jle
push
mov
sbb
xor
push
add
push
lahf
das
scas
imul
lahf
movsl
subb
icebp
sbb
adc
in
popf
popa
sub
sbb
cmc
mov
jge
out
mov
cltd
enter
je
cmc
mov
insl
jle
int
cltd
mov
hlt
or
ds
mov
inc
inc
cmpsl
inc
stos
sub
popf
mov
mov
sbb
xchg
into
arpl
mov
icebp
dec
clc
adc
sub
cmp
xchg
jge
mov
cwtl
fdivs
insb
inc
push
lcall
lods
rcrb
dec
ljmp
popa
dec
cmp
cmp
sub
inc
test
outsl
shl
or
fucom
xchg
jns
or
adc
jno
rol
daa
out
dec
pop
pop
fidivl
imul
dec
cmpb
gs
mov
xchg
lcall
mov
dec
xor
mov
popf
arpl
mov
mov
sbb
jnp
lds
das
loop
mov
inc
cmpsb
fiaddl
hlt
lea
xchg
xchg
negl
push
add
push
adc
mov
aad
cmp
inc
clc
aas
xchg
sbb
cmp
sub
inc
jl
mov
mov
cld
inc
scas
sarb
shlb
jns
ljmp
fwait
pusha
jne
and
dec
lock
inc
inc
xchg
std
add
scas
das
iret
and
inc
cmp
push
cmpsb
cli
iret
insl
outsb
adcb
fcompl
sub
lea
mov
mov
adc
and
outsb
sbb
mov
fsubl
andl
xchg
sub
dec
sbb
sbb
sahf
inc
stos
xor
pop
jg
mov
mov
in
inc
enter
mul
popa
int3
jno
sbb
test
pushl
mov
clc
js
push
xor
mov
mov
rorl
mov
scas
aaa
dec
scas
in
outsl
sub
aas
mov
xor
daa
inc
pop
enter
std
push
sbb
xchg
mov
int3
cmp
push
pop
or
test
std
push
mov
jae
into
inc
stos
fs
dec
adc
mov
xchg
fwait
aas
packssdw
ja
in
dec
and
stos
adc
fs
or
cld
pop
cmpsl
test
jo
bound
xchg
and
mov
mov
dec
sub
lcall
outsb
lcall
lret
push
aad
and
jnp
gs
and
xor
popf
or
pusha
mov
jmp
or
adc
sahf
dec
sub
mov
popf
arpl
mov
mov
and
push
cli
lods
scas
loope
fdiv
repz
out
sarb
lea
addr16
pop
sub
mov
fdivrp
pushf
and
or
xor
imul
cmc
pop
mov
jns
ja
jg
lcall
in
dec
inc
fimuls
mov
and
rcrb
xor
inc
add
daa
insl
sarb
mov
xor
mov
or
jmp
ljmp
ret
jno
push
fs
outsl
int
cmp
adc
addb
js
ret
pop
sub
inc
mov
cmc
leave
test
and
cld
mov
mov
das
call
fcomip
nop
xlat
icebp
roll
lcall
inc
add
mov
into
mov
scas
or
pushl
cmp
cmp
ja
mov
sbb
test
inc
leave
or
sub
xor
dec
mov
mov
and
add
push
sbbb
or
fwait
cmpsl
fldt
mov
pushf
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
mov
in
adc
and
aaa
ja
inc
xchg
mov
dec
sbbl
jl
or
sub
movb
ffree
movsl
jmp
jecxz
fcompl
mov
cli
mov
mov
fisttpl
inc
sahf
rcr
lret
ja
mov
xchg
test
mov
lods
mov
sbb
dec
pop
jg
xor
fcmovne
sub
fisubs
jns
aaa
pop
stc
insl
push
aaa
pop
pop
in
mov
ss
inc
fs
imul
mov
dec
mov
mov
cmp
pop
nop
paddd
int3
mov
lcall
mov
xor
mov
mov
cltd
sub
repz
xor
das
repz
cmc
pop
dec
and
sub
cmp
jns,pn
les
stos
mov
adc
in
xchg
mov
push
rcrl
mov
pop
adc
mov
add
adc
jbe
outsl
adc
sub
orb
mov
adc
cmc
dec
hlt
dec
push
inc
xchg
and
mov
sbb
or
xor
mov
pop
out
sti
loopne
inc
movsb
xor
lahf
inc
xorb
movsb
sub
jnp,pn
inc
add
fimuls
stos
sub
addps
mov
lahf
mov
btc
cmpsb
rorb
lds
ja
add
fisubrs
mov
rol
pop
icebp
fdivrp
push
jle
mov
xor
jmp
cltd
loopne
mov
push
sar
fdivr
jbe
or
scas
sub
int3
nop
les
rorb
or
jae
lea
arpl
bound
or
dec
pop
imul
jns
inc
mov
hlt
andb
movsb
into
loop
add
xchg
inc
pushf
push
movl
or
adc
test
cmp
loop
ret
pop
mov
loopne
div
imul
push
lods
pop
movsl
jmp
or
dec
insl
ds
jl
and
pop
lret
or
xor
imul
test
xorl
insl
test
xchg
ja
adc
inc
ror
cmp
mov
and
ds
jae
icebp
pushf
cltd
cld
fldt
add
or
inc
call
cld
ss
xor
push
aas
jecxz
or
jg
pop
and
ss
and
mov
xor
popa
call
mov
lret
inc
sbb
lahf
ss
pop
hlt
cwtl
inc
ret
add
outsl
in
push
adc
cmp
mov
or
and
or
leave
sub
sbbb
cmp
test
sub
dec
jb
mov
sbb
push
sarl
test
cli
jb
pop
or
stc
loope
and
je
inc
or
push
call
stos
call
ja
jmp
xchg
pop
adc
repnz
and
fistl
in
jo
pushf
call
jb
rolb
test
xor
pusha
lret
cmpsl
cwtl
pop
mov
mov
sbb
popa
push
out
sbb
adc
enter
popf
adc
and
cld
in
out
imul
je
jnp
push
shrl
dec
cmp
xor
push
leave
push
or
sub
jle
push
dec
mov
fs
sub
inc
imul
mov
push
mov
stc
mov
sbb
sbb
ret
xchg
pop
or
dec
xchg
enter
xchg
insb
ficompl
pop
movsb
xchg
in
gs
loopne
inc
imulb
out
inc
dec
orl
mov
mov
cltd
pusha
mov
out
stos
call
mov
pusha
adc
xorl
cmpsb
pop
stos
xor
test
fstl
inc
push
out
test
inc
xor
cmpsb
cltd
and
push
jmp
inc
in
mov
out
out
mov
mov
jno
aam
lcall
push
inc
sub
ss
xor
inc
mov
fsubrp
movsb
jmp
dec
adc
mov
andl
cmp
popf
cltd
popa
adc
movsb
rclb
jne
push
jne
add
popa
sub
dec
lock
das
cmp
xchg
fs
mov
fistpl
stc
and
mov
jnp
xlat
sub
push
inc
mov
cltd
jle
es
lahf
dec
mov
scas
jb
das
dec
push
jmp
popa
scas
mov
cs
or
cld
pop
mov
frstor
xchg
call
stos
pop
mov
in
cmc
ds
sub
push
das
je
aas
rcrl
pop
in
stos
ds
jecxz
push
xor
push
pop
es
or
and
and
out
aad
inc
or
outsb
sbb
fs
ds
std
fldenv
mov
and
add
adc
ret
sub
adc
push
aam
or
xor
ss
cld
mov
inc
ja
jns
shl
jmp
loope
and
out
push
mov
test
imul
xchg
repnz
ds
popf
xor
lahf
insb
lods
adc
jnp
jg
push
in
push
add
dec
xchg
ljmp
push
cmc
addb
mov
mov
daa
enter
rcrb
fidivl
sbb
add
fidivrs
pop
test
out
inc
inc
mov
mov
mov
outsl
icebp
dec
arpl
lret
pop
mov
jne
arpl
cli
xchg
in
jno
ret
aas
out
push
cld
mov
clc
dec
inc
sbb
push
pop
cltd
cli
scas
roll
inc
mov
jb
lods
push
mov
ljmp
pop
fistpll
adc
adcl
jle
mov
daa
ret
popa
or
jg
clc
sarb
fmuls
gs
mov
call
cld
addb
call
or
sbb
outsl
adc
aam
jp
mov
dec
push
ror
daa
sbb
adc
hlt
loopne
xchg
mov
out
loope
ret
sti
sbb
outsl
in
scas
ja
push
jbe
sub
packuswb
repnz
aam
js
dec
mov
outsb
mov
pop
mov
jge
and
imul
mov
or
add
es
mov
add
stos
dec
sub
or
lods
lret
outsb
test
das
cmp
out
xor
sub
cmpsb
inc
add
mov
in
out
cli
or
push
xor
cli
pop
and
loopne,pn
mov
out
stc
push
dec
in
push
xor
outsb
stos
lods
nop
mov
push
aas
adcl
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
push
cs
cmp
adc
and
repz
popf
xor
dec
or
push
adc
dec
mov
repnz
movsb
rcll
adc
add
enter
sub
pop
shl
pop
mov
push
leave
or
jns
push
push
dec
or
pop
imul
sbb
sbb
lret
lods
scas
mov
jbe
inc
js
pop
jb
mov
filds
and
adc
jp
cmpsb
cmpsb
push
sahf
negl
cmpsl
shr
adc
mov
outsl
jne
bnd
push
icebp
xor
jecxz
movsl
pop
jl
cs
pop
test
push
or
ret
aas
mov
dec
adc
jg
jb
and
divl
jno
loop
jle
cld
mov
ret
or
push
mov
sbb
mov
pushf
int3
push
pushf
loope
mov
inc
cmpsl
into
scas
js
jo
movsl
les
xchg
mov
xor
mov
mov
pushf
popa
cmp
fstp
xchg
or
les
inc
push
faddl
add
sti
xor
jle
sahf
cmp
mov
xchg
jp
or
rorl
rcll
push
in
fsubs
pop
cmp
mov
xchg
sbb
adc
push
sub
movsb
sbb
sbb
xor
add
push
inc
mov
leave
sti
rorb
scas
adc
push
dec
arpl
add
add
iret
ja
test
or
sub
xor
pop
push
cs
add
push
mov
cmp
lret
js
addr16
test
pop
stc
call
into
pop
pushf
or
jmp
aaa
sub
lock
pop
cmpsb
fimuls
loope
inc
cs
lahf
cmp
mov
mov
out
push
cmp
insb
call
hlt
jnp
popa
cltd
js
scas
cmpsl
lcall
test
add
sub
clc
fsubl
mov
and
mov
mov
cmp
jg
les
lock
out
mov
pop
ss
les
lret
sub
inc
inc
mov
lock
setp
mov
test
mov
rcll
cmp
insl
xorb
adc
outsb
into
adc
mov
dec
push
dec
cmc
shlb
sahf
push
movsl
push
push
xor
int3
xor
dec
fimuls
cs
mov
xchg
sti
cli
pop
icebp
add
or
das
pop
or
mov
pop
js
jge
cmp
jnp
jbe
sub
push
sbb
sbb
adcl
push
inc
fidivrs
sarb
lods
test
pop
cmpsb
pop
sbb
loopne
fs
sbb
nop
mov
imul
gs
jmp
in
adc
ja
nop
ljmp
lds
mov
xor
shll
push
xor
leave
sub
icebp
sbb
pushf
sub
pop
adc
push
les
cltd
dec
js
jl
out
xor
mov
jle
stc
in
and
subb
adc
or
and
jbe
xor
int3
adc
add
inc
xor
rcrb
add
jae
aad
mov
mov
pop
lret
pop
mov
pop
pop
inc
or
jbe
sub
enter
inc
sarb
fdiv
sbb
fwait
shlb
jp
pop
lods
outsl
sahf
fisubrs
or
sbb
inc
pop
pushf
jb
ds
mov
mov
and
pop
fistps
mov
dec
xchg
or
inc
je
adc
and
outsl
dec
call
mov
shll
popf
mov
ljmp
push
cltd
push
mov
mov
jns
rorb
bound
xor
pusha
and
inc
stos
cwtl
shll
fidivrs
out
pop
shlb
imul
mov
and
or
pop
xlat
sbb
inc
shl
std
cli
ret
imul
jp
cmpsb
pop
ja
add
push
mov
xchg
in
sub
lcall
add
push
sub
cli
adc
popf
inc
add
ja
lret
jbe
inc
bound
aaa
jbe
add
lret
mov
jnp
in
mov
mov
sub
add
cmpsb
mov
sub
add
or
dec
push
xchg
push
push
ret
pop
andl
int3
lahf
cmp
bnd
sub
inc
test
or
adc
lea
ljmp
mov
push
stos
jle
sbb
add
jb
cmpsb
or
mov
or
movb
ror
je
stc
stos
sahf
jns
fsts
push
adc
dec
insb
or
push
push
loope
add
mov
fs
pop
xchg
call
and
imul
push
or
jecxz
xor
out
fidivl
push
rorb
mov
sti
loopne
jmp
fptan
cmp
pop
sbb
jg
in
icebp
xchg
popf
fwait
mov
out
jg
or
out
in
mov
bound
add
movsl
dec
ja
aad
gs
stos
mov
shr
cmp
push
fstpt
lock
repnz
inc
inc
je
rol
push
leave
rcrl
or
out
jbe
sub
cmp
mov
or
in
push
add
js
mov
and
aad
in
out
xchg
and
leave
inc
call
pop
insb
mov
dec
add
and
mov
mov
dec
xor
lods
lahf
ret
mov
sahf
fadd
pmulhuw
jecxz
pop
pop
inc
xchg
fisubrl
daa
xor
dec
and
mov
pop
sbb
push
fcompl
sbb
cli
adc
mov
jae
mov
xor
mov
add
fidivs
push
jne
aas
or
pop
lock
shlb
xor
fisubs
inc
test
mov
pop
add
dec
mov
mov
fisttpl
mov
lcall
or
and
imul
push
mov
xchg
out
pop
repnz
test
mov
add
sahf
cmpsb
rol
out
les
fwait
shll
inc
dec
dec
adc
cmp
push
fwait
arpl
xchg
bound
push
mov
jl
rcrl
fidivrl
mov
mull
xor
rol
cmc
inc
and
icebp
test
mov
push
push
cltd
cmc
cmp
int3
xchg
jl
cmp
dec
aam
mov
sub
push
cmp
sub
les
mov
push
mov
xor
xchg
ficoms
pop
test
mov
jne
or
jmp
cmc
xchg
cmp
push
mov
adc
mov
mov
rdpmc
or
out
xlat
xchg
pop
mov
add
jp
fwait
push
repnz
cld
or
in
push
popw
sub
jmp
inc
or
imull
mov
dec
scas
bound
xor
fisubl
and
clc
sub
les
das
mov
cltd
fmuls
jge
int
pop
loope
insl
push
es
or
sbb
test
loop
lods
mov
movsb
inc
loop
inc
xor
pop
clc
xor
loope
dec
shr
jne
push
dec
pop
pop
mul
and
scas
fdivl
jbe
xchg
fwait
inc
xor
rorl
inc
sbb
or
jo
add
push
fs
cmc
insb
xlat
sub
inc
dec
jno
rorl
xor
lret
inc
jb
fimull
fldcw
or
jo
rcll
cmp
push
jno
mov
in
mov
in
mov
loope
push
xor
and
and
mov
cmp
stos
dec
lods
pop
jno
mov
cmp
push
xor
cmp
inc
test
and
sub
cwtl
je
lods
dec
inc
adc
dec
nop
pop
in
push
jecxz
out
fs
mov
jo
dec
sub
mov
fldcw
adc
jp
pop
or
sahf
sub
sbb
pop
aad
mov
push
push
adc
jmp
cmp
hlt
sahf
mov
stos
out
lcall
mov
data16
or
loopne
rcll
mul
cmpxchg
icebp
pushf
and
jp
sub
push
popf
fidivl
push
cmp
and
mov
add
hlt
sub
xorb
lock
mov
dec
lock
fldenv
dec
int
adc
mov
gs
gs
in
xor
es
mov
mov
fsts
lock
cmpsb
jae
aad
jmp
aam
xchg
and
xchg
scas
nop
pop
shl
cwtl
cwtl
enter
cmp
cli
roll
fisubs
jecxz
adc
test
out
movd
iret
aad
mov
sub
and
add
es
sahf
adc
insl
cmc
imul
popf
fwait
jnp
mov
test
test
sbb
imul
shll
adc
xor
pop
cmp
arpl
aaa
adc
xor
pop
fcoms
test
xchg
sahf
mov
inc
scas
and
stos
and
mov
into
idivb
iret
add
cwtl
push
mov
sbb
sti
int3
sub
push
ss
push
jl
pop
gs
xor
cmp
ja
mov
out
fwait
rcl
stc
mov
call
jb
jb
pop
cmp
imul
fildl
xchg
push
mov
rcrb
adc
fs
outsb
mov
mov
dec
ret
inc
movsb
dec
cmp
xchg
cmpsb
mov
and
cmpsl
jle
rcl
mov
loop
lods
add
pop
mov
daa
in
rorb
inc
cmp
pop
jnp
and
outsl
fisubrs
jmp
jmp
and
hlt
or
cmc
movb
in
stos
jg
clc
subl
mov
jb
or
movsl
aam
hlt
xchg
lds
sahf
addb
inc
xchg
and
xor
outsb
mov
mov
lea
icebp
rsm
mulb
data16
lcall
out
cld
fistpll
scas
pushf
jbe
test
xor
adc
stos
imul
sahf
enter
mov
xchg
inc
sub
mov
pop
aaa
xchg
lcall
xor
call
mov
mov
dec
push
sbb
adc
aas
repz
adc
mov
inc
push
adc
or
into
in
in
xor
outsb
inc
sbb
dec
inc
lret
cltd
sarb
sub
mov
lods
addr16
imul
dec
lods
mov
sub
in
mov
mov
and
into
aaa
pop
pop
pop
adc
adc
js
xor
mov
out
int
mov
sub
dec
add
or
das
inc
push
sbb
mov
test
cmpb
loop
int3
xlat
aad
testb
push
das
les
jbe
xor
mov
in
push
xor
pushf
sahf
mov
lds
inc
lcall
popf
pusha
jnp
mov
in
inc
push
out
dec
or
stos
pop
int
imulb
mov
stos
push
lret
push
dec
push
mov
mov
hlt
sub
jmp
inc
or
sub
shlb
and
ss
clc
popf
xchg
jns
scas
out
es
out
sbb
shrb
pop
inc
dec
popa
arpl
sub
mov
popa
xchg
rorl
pop
pop
aas
fstps
dec
into
jnp
inc
int
mov
andb
pop
in
scas
hlt
or
push
mov
sbb
pop
add
push
and
sbb
bound
mov
sysexit
push
mov
push
shrb
scas
mov
imul
subb
loope
inc
outsl
inc
notl
sub
fimull
xor
inc
mov
sbb
cmc
dec
dec
pop
xchg
push
xchg
in
xchg
sub
loopne
lcall
dec
lock
sahf
test
push
mov
push
pop
and
add
pop
sahf
push
nop
adcb
push
shll
les
add
adc
shrb
insl
mov
out
pcmpeqd
in
sub
mov
push
jmp
dec
and
jecxz
leave
fstpt
xchg
addr16
mov
stos
push
ss
jmp
inc
push
jge
or
jbe
scas
sub
mov
add
dec
ret
lods
ss
mov
lds
sub
mov
data16
mov
pop
xor
xchg
aam
sub
fsubrl
xor
lods
mov
and
loop
fucomi
shufps
stc
jle
enter
add
and
pop
aam
dec
aad
daa
xchg
sub
ret
aam
add
dec
aad
inc
fchs
jne
xchg
push
sub
lods
faddl
sbb
xor
notl
xor
push
mov
mov
roll
pop
mov
andl
lret
outsb
mov
mov
arpl
andb
pop
jle
mov
jae
mov
xor
sarb
mov
or
push
jns
arpl
ja
les
arpl
ret
fbstp
mov
aas
add
pushf
cmpsl
jge
xor
stos
push
outsl
lods
inc
gs
xchg
dec
cmpsl
jp
test
xor
pop
lret
fcoml
sbb
sbb
jecxz
aaa
xchg
mov
add
std
pushf
outsb
mov
and
cmp
xor
or
mov
or
std
cmpsl
push
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
inc
xor
push
and
mov
push
fdivl
arpl
iret
and
lret
das
jl
fwait
inc
loop
sti
adc
pop
push
dec
push
dec
fiaddl
insl
stc
xor
mov
jo
sub
pusha
loope
xchg
mov
jnp
sbb
sub
es
mov
lea
jg
mov
pop
mov
adc
jb
sbb
sbb
pop
outsb
sbb
jp
mov
add
or
fiaddl
push
mov
mov
movsb
lock
nop
adc
out
and
push
and
xchg
or
push
sub
les
mov
hlt
or
mov
fistpl
repz
sub
ss
test
add
jbe
sbb
cmpsl
sbb
mov
mov
inc
mov
and
stos
xor
aaa
ret
pop
add
in
inc
stc
push
lock
mov
scas
sub
fs
mov
or
xchg
mov
lock
push
fldcw
mov
sbb
cld
aas
and
aas
cmpsl
push
xor
mov
push
aad
cli
stos
imul
pop
out
cs
and
sbb
jg
stos
addl
mov
dec
movsb
mov
cmp
pop
xchg
xchg
pop
mov
cld
fistpll
out
lock
dec
push
and
jmp
push
jmp
jmp
icebp
sbb
adc
cli
xor
push
cwtl
inc
std
fs
xchg
jnp
inc
fbld
fs
bound
add
inc
dec
pop
inc
push
mov
cli
or
sub
or
sub
mov
lcall
daa
and
xlat
sub
cmpsb
fwait
dec
pop
out
sbb
fcompl
dec
sub
push
pop
dec
mov
cmp
mov
xchg
inc
scas
sbb
mulb
pop
push
cwtl
dec
dec
mov
in
jecxz
movsb
xchg
loopne
sub
sub
outsl
or
fnsave
mov
jl
and
scas
in
sarl
dec
shlb
cmp
outsb
das
adc
ret
sub
mov
mov
cli
xchg
dec
inc
lret
mov
mov
mov
lahf
push
ja
out
lret
mov
mov
out
sbb
inc
notb
insb
push
mov
and
and
jno
cmp
add
pop
sbb
scas
lret
imul
stos
inc
mov
popf
sub
fimuls
lcall
push
jp
in
lcall
push
shrb
jb
ror
outsl
bound
push
cmp
mov
xor
push
and
scas
sub
mov
int3
add
rcr
rcll
jno
mov
jp
aas
inc
add
add
cmpsb
cmp
hlt
mov
xchg
cmpsb
cmpsb
mov
hlt
lcall
cli
and
adc
mov
cs
ss
cmpsb
push
pop
dec
fnclex
xchg
xor
cld
xor
scas
and
aas
jl
xchg
mov
sbb
pop
push
movl
cmp
push
jns
pushf
pushf
push
mov
jno
inc
dec
sbb
inc
pop
mov
and
mov
pop
mov
mov
mov
mov
or
fadd
jae
or
fucomi
test
adc
mov
xor
mov
movl
outsl
ljmp
inc
hlt
ret
jp
mov
mov
in
dec
xor
pop
mov
int
stc
addr16
jne
lods
insl
or
cmc
sub
pop
or
push
movb
mov
sub
xchg
xchg
inc
mov
mov
sub
lahf
cmp
push
and
sar
les
gs
into
fcomp
inc
and
icebp
ret
jb
lcall
jbe
outsb
jne
enter
lcall
dec
push
dec
cltd
cld
add
cltd
dec
fsubl
std
xorb
xchg
mov
mov
dec
fmuls
mov
add
add
dec
jp
pop
aam
jg
mov
popl
mov
xchg
mov
insl
iret
jae
xchg
mov
push
push
jg
ret
pop
add
push
xor
in
shll
xor
in
mov
jge
jmp
cmp
push
fs
dec
cmpb
jge
mov
xchg
cmp
add
mov
bound
push
imul
pop
mov
xor
and
lea
call
adc
lret
xor
push
adc
jecxz
or
cmp
shll
jnp
adc
push
movb
pop
test
aad
xor
xchg
xchg
rolb
mov
lods
mov
add
cmpsl
mov
dec
js
add
mov
lret
lods
cmc
push
sub
loop
jmp
xchg
xor
xchg
or
inc
aad
ljmp
stc
fsts
mov
cld
fsts
loope
cwtl
dec
pushf
adc
dec
pop
rcll
dec
das
clc
jo
cmp
jg
jae
jle
mov
stc
add
aas
repnz
cltd
stc
aad
rcr
and
mov
cmpsb
jnp
cmp
and
adc
shr
test
insl
fdivrl
repnz
and
daa
mov
iret
cs
icebp
mov
sub
fiadds
mov
pop
inc
mov
push
cmp
dec
test
inc
mov
stos
mov
adc
mov
adc
push
mov
pop
adc
ret
dec
add
fs
sub
mov
jp
mov
clc
cmc
adc
mov
mov
push
fnstenv
cld
inc
pop
and
out
scas
xchg
test
movsb
mov
ret
pop
or
leave
adc
xchg
insl
js
sub
das
movsl
je
sub
js
mov
notl
aaa
mov
cld
jmp
in
and
inc
in
sbb
sub
and
test
sub
dec
adc
out
mov
dec
xchg
jle
push
icebp
enter
das
cmpsb
outsb
out
out
xchg
and
loop
data16
sahf
push
xchg
xor
push
div
and
les
xchg
jb
xchg
sbb
lock
and
push
and
imul
mov
inc
xor
inc
dec
add
mov
aad
cwtl
test
imul
push
push
push
cwtl
icebp
addr16
rol
dec
mov
inc
inc
or
loope
xor
pushf
mov
mov
hlt
je
movsb
cmp
shl
mov
lods
insl
mov
adc
loope
ficoml
icebp
mov
and
and
jmp
jne
add
subl
xchg
stc
cmp
adc
and
rorl
out
sbb
fildl
test
aad
push
ret
leave
popa
arpl
mov
divl
or
jecxz
pop
rcrl
and
int
ja
xchg
push
sti
sbb
jnp
fucomi
aad
outsb
pop
fcmovnb
cmp
lret
xchg
nop
adc
xor
xor
cmp
xchg
xlat
dec
out
sub
lcall
dec
pop
and
icebp
or
loopne
push
clc
dec
and
inc
nop
sarl
sub
and
mov
dec
inc
pop
cwtl
push
sbb
push
xor
cli
xchg
shll
sbb
test
rclb
dec
aam
std
outsb
jnp
cmpsb
dec
lret
jp
les
mov
mov
jo
xor
lahf
pop
in
jmp
and
mov
mov
adc
pushf
repz
cli
push
rorl
sub
mov
mov
scas
or
add
xor
mov
repnz
cmp
inc
pop
das
sbb
dec
movb
xchg
in
test
inc
jne,pn
jne
lcall
test
push
ret
cmp
and
sbb
lahf
enter
sub
fst
push
stos
jo,pn
mov
stos
xchg
mov
fwait
out
emms
out
fsubrl
cmp
adc
lahf
call
sub
mov
call
lret
faddp
jge
lds
in
rcrb
loopne
mov
add
pop
daa
cmp
mov
jle
ds
mov
inc
jno
push
dec
or
cmpsb
fidivl
cmp
mov
inc
jbe
lea
lcall
cmp
jne
push
repz
mov
out
xchg
or
xchg
and
mov
xor
daa
fwait
cmp
dec
adc
imul
add
flds
imul
nop
jo
jp
add
rclb
mov
rol
jmp
sarl
lods
mov
cmp
or
insb
pusha
sub
arpl
lea
js
scas
iret
movsb
out
push
sub
loopne
jp
cwtl
and
add
dec
jg
cmp
pushf
mov
push
adc
xor
adc
add
or
stos
shrd
imul
lcall
sbb
sbb
rorb
sti
cmp
nop
gs
daa
jae
cmp
ret
or
js
rcl
fwait
add
aad
cli
xlat
repnz
cli
arpl
fs
shl
mov
lods
leave
insl
adc
jns
sbb
xlat
test
add
mov
sti
ficoml
mov
fists
mov
add
insb
mov
frstor
rdmsr
xchg
testl
int3
mov
xor
in
shl
cli
bound
lret
test
adc
movsb
test
mov
mov
gs
pop
shll
mov
and
aaa
lods
movsl
faddp
add
xchg
push
popf
inc
and
sub
pop
jo
jl
adc
jmp
pop
lret
out
std
jns
out
mov
lret
xor
mov
sub
je
in
or
sarl
mov
add
mov
aaa
lods
aam
mov
dec
xchg
ret
adc
fsubrp
dec
fwait
ljmp
fisubrl
fwait
ret
aaa
ss
stos
xchg
clc
cwtl
dec
aas
pop
xchg
sbb
insl
mov
jbe
je
ret
sub
lods
rcrb
push
adc
and
jae
push
je
lret
shll
repz
and
jbe
or
test
inc
xchg
arpl
mov
sub
rcll
imul
into
jecxz
imul
cmp
adc
jne
pusha
jg
xor
lods
lahf
push
divl
cmpsl
scas
jne
xchg
xor
pop
jl
mov
popf
iret
mov
sub
outsl
mov
ficoml
add
xchg
rorb
roll
insb
sub
js
push
pop
jo
fcmovu
iret
iret
cltd
movl
xchg
cmp
xchg
pop
lret
popf
xor
dec
mov
cmpb
xchg
nop
adc
data16
mov
testb
cmp
rclb
test
stc
stos
fdivl
pop
sbb
jmp
and
andb
sahf
icebp
dec
add
push
mov
aad
cmp
in
lahf
rolb
in
dec
jne
pop
call
aaa
xchg
pop
sbb
rcl
jo
test
add
mov
sub
popa
fcmove
push
adc
mov
dec
add
movsb
xchg
sbb
ret
scas
repz
jl
call
adc
out
ret
imull
call
inc
shlb
orl
movsb
loope
addr16
jnp
cvtps2pd
cmp
mov
and
mov
addr16
add
dec
sub
push
cmp
cs
cmc
insl
cmp
or
push
cmp
test
and
rcrl
out
dec
or
sbb
push
lret
cmc
pushf
mov
das
lret
int3
inc
imul
mov
inc
sar
sub
rorb
out
xlat
lret
addr16
sub
mov
in
mov
pusha
mov
jle
adc
lahf
xor
mov
cli
push
lock
mov
lahf
call
cs
jecxz
cmp
sbb
cmpsl
jno
dec
lea
jmp
lock
leave
mov
fisttpl
mov
xchg
clc
inc
xor
xlat
outsl
mov
imul
shll
push
pusha
or
cmpsl
mov
push
call
loop
mov
aas
fwait
mov
sub
jbe
mov
xor
cwtl
xchg
xchg
jg
push
xor
aad
sbb
popa
sbb
push
dec
jle
push
cmp
pop
pop
andb
sub
out
dec
or
jmp
movsb
test
or
scas
and
clc
inc
ss
jle
mov
aad
sbb
rcll
loopne
cmpsl
scas
imul
sub
lock
out
dec
adc
cld
xchg
scas
out
mov
mov
fisubrl
cmp
pushf
add
sbb
mov
sub
fdiv
sbb
adc
add
mov
std
daa
xchg
sub
add
test
cmp
or
pop
mov
sbb
cmpsb
aam
out
ss
dec
add
fldenv
sub
arpl
cmp
arpl
mov
dec
dec
in
jge
pop
int3
xchg
mov
aam
mov
push
sbb
movl
repz
mov
adc
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
jno
lret
mov
mov
cmovs
push
mov
push
inc
lret
mov
sub
jge
popf
fwait
rep
xor
in
pop
cmc
clc
leave
push
addr16
adc
add
dec
mov
test
popa
ds
test
ret
adc
fstl
xchg
fistps
mov
cmp
adc
in
lret
inc
push
sbb
push
pop
dec
sub
jbe
fisttps
mov
shll
pop
je
sti
call
push
push
add
pop
cmp
loop
shll
jmp
mov
jno
repnz
push
jle
xchg
xchg
outsb
pop
mov
test
jmp
pop
mov
testl
inc
jg
repz
into
jge
addr16
ret
out
lock
cmpsb
lds
pusha
clc
inc
adc
rclb
inc
andb
mov
and
xchg
pop
cmpsb
pop
push
cmp
cmpsl
repnz
addr16
clc
addr16
insb
adc
popf
adc
cmp
notb
imul
sub
test
shrb
cmpsl
inc
ret
add
mov
push
inc
fisttps
sub
int3
dec
fimull
cli
pusha
sub
pop
data16
sahf
pushf
mov
cmp
mov
sub
cwtl
adc
cmp
sub
dec
lds
popa
bound
out
pop
jp
cs
cli
repz
fimuls
rcrl
add
mov
and
fsubl
fnstsw
and
push
dec
outsl
inc
mov
mov
push
bnd
loopne
add
adc
add
pop
ja
add
xlat
jnp
adc
ds
jbe
outsl
inc
sub
gs
outsl
pop
fdivs
cmp
call
scas
dec
xchg
insb
mov
pop
inc
push
mov
mov
mov
ds
lds
sbb
sub
dec
add
push
and
aam
testb
xchg
stos
and
jmp
out
dec
mov
cwtl
jae
dec
jno
sti
cwtl
pop
pop
rcrl
movsl
sar
pop
dec
xchg
dec
repz
mov
sub
inc
jne
sbb
mov
or
xor
dec
xchg
out
outsl
push
daa
loopne
pusha
rcll
adc
push
sbb
hlt
push
rcl
xchg
in
call
inc
xchg
pop
ljmp
jp
lods
lcall
cmp
mov
cmp
adc
sub
arpl
bound
mov
bound
mov
int
rorl
insb
and
and
push
jmp
xchg
fnsave
repz
mov
dec
push
mov
subl
test
add
or
pop
std
and
jb
sbb
mov
movsb
jge
and
inc
lds
ja
mov
fwait
inc
adc
out
movl
dec
movb
ret
inc
adcb
cmc
adc
or
push
add
push
loopne
mov
iret
mov
pop
hlt
jae
incl
scas
ja
test
mov
test
adc
out
imul
pop
sub
outsb
push
imul
test
movb
dec
sbb
mov
or
push
in
xchg
sub
ret
movsl
ss
outsl
or
sti
inc
ss
xchg
incb
int3
mov
pop
xchg
iret
je
hlt
repz
push
or
or
ret
jl
jo
mov
lcall
xchg
push
fs
jbe
inc
mov
movsb
je
bswap
int
in
pop
sub
inc
loopne
push
xor
orb
imul
loope
bound
loope
xor
mov
fidivrl
mov
ds
jmp
push
pop
ljmp
outsl
repnz
add
jg
push
mov
jb
pop
lods
fsub
mov
loop
push
mov
adc
or
xchg
stos
leave
inc
ret
out
int3
dec
loopne
mov
push
adc
and
es
inc
mov
aaa
imul
xor
mov
inc
int
cmp
jg
dec
cmp
repz
cs
adc
jbe
mov
dec
jge
jmp
stos
das
mov
adc
mov
sub
adc
cmp
sbb
fwait
inc
pop
add
mov
sbb
out
push
rol
movsb
aas
xchg
mov
mov
xchg
std
add
fdivs
ljmp
adc
sbb
hlt
add
movsl
subb
mov
jle
pop
into
pop
adc
jl
repz
or
outsl
cmpsl
pop
ret
inc
sbb
js
jnp
adc
ret
scas
arpl
lcall
addl
dec
jae
lods
cli
fsts
aaa
lods
add
orb
cmp
pop
add
cmpl
and
dec
jo
stos
jg
mov
fadd
mov
scas
jecxz
add
mov
mov
inc
dec
ljmp
inc
inc
ja
movsb
push
gs
pop
pop
sahf
ds
jns
outsl
es
popa
scas
jnp
push
cmp
movsl
outsl
dec
or
scas
sub
lods
jae
jmp
gs
sub
pop
cmp
imul
dec
shlb
or
lea
ljmp
inc
test
imul
rclb
repz
jmp
outsb
mov
jmp
push
and
sbb
sbb
push
push
mov
in
xorl
ja
hlt
dec
jbe
add
lock
inc
sub
mov
inc
push
sub
out
sbb
xor
loop
fstl
sbb
and
mov
int
jb
mov
adc
sub
jle
and
data16
sub
clc
in
cmp
ja
fbld
aad
cmp
inc
jl
jae
lods
adc
push
loope
rcrb
adc
popa
push
jge
sbb
mov
rcrl
test
pop
lahf
repz
repz
jmp
adc
xchg
cmpsb
adc
rorb
stos
mov
sbb
shl
out
mov
pop
mov
cmpsl
xor
push
fldt
fistpll
sbbb
imul
push
cmp
and
leave
bnd
add
int
xor
stos
mov
sub
sbb
sub
and
mov
inc
je
inc
lret
push
arpl
mov
push
dec
mov
mov
xor
ss
xchg
mov
in
fidivl
or
sub
fldl
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
or
xchg
movswl
or
jbe
inc
sbb
ret
mov
sti
pop
jns
out
jmp
mov
fwait
das
xor
shrl
or
or
mov
xchg
test
mov
or
mov
fstl
xchg
cmp
test
mov
aad
mov
xchg
fldl
xor
sub
leave
or
and
pop
in
mov
aam
mov
adc
push
lods
sbb
ja
jmp
movsl
jecxz
push
lret
loope
dec
mov
aam
jnp
fists
push
dec
inc
jno
sar
int3
icebp
js
sub
mov
pushf
add
inc
fsubs
cmpsl
aad
test
sub
xchg
popa
add
push
pop
scas
mov
mov
or
xor
fwait
sti
lods
mov
push
loop
movsb
dec
jo
cmpsl
jp
jo
repz
rcrb
divb
xor
aam
fidivrl
testl
shl
pop
mov
adcl
mov
movhps
cmp
and
and
xor
sbb
mov
rcl
mov
push
sub
ja
xor
inc
jmp
mov
mov
iret
out
dec
pop
add
test
outsl
sbb
push
jae
xor
sbb
out
xor
fiaddl
cmp
mov
pop
mov
and
pop
scas
test
imull
sub
push
and
iret
xor
ret
mov
cwtl
xor
out
pop
and
xchg
cmp
outsb
lods
movsl
cmp
sub
dec
aam
aas
dec
mov
cmpsl
std
ljmp
push
loope
sbbb
test
arpl
jne
mov
arpl
js
test
leave
mov
sbb
mov
jno
sbb
push
fadds
mov
in
test
dec
mov
lret
nop
popf
stos
into
in
hlt
mov
enter
xchg
jae
in
mov
sub
jbe
bound
loope
les
mov
cmp
xor
jp
and
xchg
xchg
sbb
mov
sbb
mov
test
loop
jmp
sbb
sub
aas
insl
sbb
mov
leave
test
sbb
pop
jmp
cld
rcrl
inc
scas
mov
push
cmp
movsl
test
insl
add
outsl
dec
divb
jge
mov
mov
dec
inc
add
neg
and
enter
jo
mov
mov
and
insb
push
push
sbb
fstpt
jmp
adc
hlt
notl
mov
lahf
test
dec
xchg
rolb
fbstp
lods
xor
adc
fnstenv
cmp
scas
xchg
dec
sub
std
stc
enter
push
lea
mov
dec
stos
test
icebp
jo
stos
aam
jb
xor
mov
cmp
lock
inc
push
mov
xor
or
xchg
dec
shll
mov
addr16
das
and
aaa
dec
jecxz
arpl
mov
mov
xchg
inc
ret
call
mov
outsl
std
push
pop
and
call
xchg
movd
dec
mov
sti
add
jecxz
dec
jae
push
jle
xor
fsubs
jle
stos
cmp
xor
push
jmp
rorb
pop
pop
leave
dec
or
aas
arpl
je
dec
mov
sub
cmp
push
xor
lock
push
lock
inc
std
push
or
lock
xor
mov
sbbl
int
into
mov
lret
jb
daa
xor
js
roll
inc
ficompl
cmpsb
outsl
mov
in
add
test
sbb
insb
adc
jle
adc
movsb
cmp
sbb
adcb
sahf
sbb
fs
cmc
insl
xchg
fucom
repnz
inc
xor
xchg
or
xor
lds
lcall
jns
inc
xchg
ljmp
test
out
es
push
xchg
test
push
test
mov
insb
cmc
cmpsb
and
cwtl
sbb
cmpsb
mov
jle
out
mull
int
das
jae
xlat
jp
xchg
roll
js
and
xchg
fimuls
and
inc
int3
cmp
xchg
test
mov
mov
fldt
inc
adc
xchg
insb
push
push
sub
mov
mov
pop
ror
jae
test
fcmovbe
fsts
jp
filds
in
fwait
adcl
xchg
fdiv
in
int
sbb
inc
adc
xchg
mov
add
inc
movsb
jo
cmp
dec
fwait
xchg
je
pop
add
cmc
xor
sti
and
shrl
or
into
jnp
xchg
repz
xor
stc
and
lcall
cmp
icebp
addr16
xor
scas
xchg
inc
jo
sbb
dec
add
mov
shrl
jae
outsl
shlb
rcrb
add
lret
int
fidivrl
ja
fadds
mov
xor
ror
les
lahf
jno
ljmp
sbb
ret
xchg
and
addl
jbe
jge
ds
push
push
pop
mov
or
sub
bound
pop
jnp
leave
inc
inc
rcll
push
out
nop
sbb
or
loopne
push
aam
sub
mov
dec
add
pop
mov
fstpl
add
insl
repz
mov
data16
test
scas
pusha
add
jb
lahf
fisubs
cld
dec
add
jae
dec
push
xchg
mov
inc
adc
lock
cs
xor
inc
lcall
arpl
aam
push
xchg
ss
leave
push
test
popf
lods
xchg
xor
lret
in
sarb
pushf
pop
push
mov
jb
xchg
dec
or
lods
mov
test
fidivl
addr16
cmp
pop
jno
adc
sahf
mov
xchg
arpl
jnp
adc
std
push
test
leave
adc
add
repz
clc
sub
ret
jae
jl
cwtl
sbb
ja
or
or
xchg
add
mov
sbb
pop
popf
inc
push
ficoms
stc
loop
mov
sbb
loopne
jp
adc
sub
ret
inc
xchg
dec
mov
pop
dec
pop
aaa
loop
cmp
ljmp
push
in
aam
mov
cmp
or
aam
dec
mov
dec
loopne
fstpt
mov
and
sbb
sbb
pop
cs
icebp
arpl
and
cmp
test
xchg
mov
loope
and
lds
jmp
sbb
push
adc
xchg
int3
xchg
ret
ret
nop
adc
and
ja,pn
cmp
and
mov
dec
push
jmp
divl
pop
mov
or
out
hlt
sub
call
sbb
shrl
repz
lods
je
data16
mov
xchg
je
dec
or
sbb
pop
mov
mov
scas
data16
shl
nop
aad
cld
ror
mov
popf
roll
lret
lcallw
xchg
xchg
xor
xchg
xor
faddl
inc
lock
leave
lods
call
jle
out
and
cmpsb
mov
test
lds
push
es
bound
mov
repz
movsl
mov
loopne
and
arpl
xor
pop
sub
and
mov
lds
jne
jge
sahf
mov
adc
xchg
std
xchg
rcrb
ds
jge
cmp
cltd
cwtl
mov
jge
sub
mov
loop
inc
sub
mov
call
push
mov
arpl
aas
adc
in
sub
cmp
cmpsl
inc
in
sbb
es
add
dec
xor
pop
xchg
lock
cmpsl
cld
pusha
mov
sbb
mov
frstor
cmp
sub
and
loope
lock
shlb
push
inc
iret
jmp
in
push
xchg
test
and
add
sbbl
mov
aas
and
stos
aas
in
mov
mov
pop
add
or
pop
in
mov
pop
arpl
xchg
cmp
or
mov
popa
inc
aas
test
in
xchg
jmp
jl
or
dec
and
and
mov
cmp
ret
hlt
int
or
ja
xchg
add
mov
adc
pop
inc
cmpsl
inc
dec
stos
dec
scas
mov
out
insb
das
call
inc
pop
loopne
shlb
ds
dec
ret
ret
jmp
sub
mov
test
fdivrl
stc
jmp
adcl
sarb
hlt
out
lea
stc
test
adc
sbb
jnp
xor
jg
frstor
jge
mov
cmp
stc
add
adc
lret
xchg
imul
jg
mov
js
fs
fsubrl
mov
push
adc
popf
sti
and
sbb
cmpsb
fistpl
mov
popa
hlt
cli
out
lock
cli
cmpsb
or
add
add
mov
in
and
stc
adc
arpl
testl
push
gs
jnp
push
inc
rcll
aad
repz
shrb
xchg
push
pop
dec
notl
fidivrs
orl
popf
cmp
dec
call
das
xor
push
jbe
sbb
lds
lods
xor
push
mov
jae
sbbb
aas
int
mov
jns
cwtl
adc
sbb
lcall
ds
insl
repz
gs
xchg
popf
stos
adc
mov
xor
and
lods
sub
daa
and
lahf
loopne
ret
leave
push
sbb
lcall
hlt
fwait
icebp
jmp
mov
stos
arpl
adc
pushl
push
andl
cmpsb
pop
outsl
test
sahf
xchg
pop
sbbb
inc
and
int
jge
lods
xor
adc
aas
add
add
cmp
dec
lret
mov
sub
jp
mov
cs
nop
aam
mov
lret
pushl
jle
sub
rcr
std
fdivs
cmp
adc
mov
movsl
pop
mov
mov
jno
xchg
mov
mov
mov
sub
lds
nop
hlt
add
sbb
sbb
cmpsl
and
pop
push
test
cmp
movsb
cmpsl
icebp
mov
shll
scas
scas
idiv
add
push
mov
xchg
jno
mov
dec
adc
push
cmpsb
loopw
mov
and
mov
das
ret
int3
push
divb
inc
and
andl
sub
subl
fnstenv
incl
fcmovbe
cld
sahf
outsb
sbb
push
xchg
mov
fistps
in
adc
imul
adc
ret
ret
test
das
push
sbb
mov
sub
xor
lret
lods
push
outsb
stc
into
cmp
pop
push
mov
sbb
pusha
and
jae
or
dec
mov
mov
fcmovb
aas
sar
sbb
icebp
stos
mov
fs
dec
rclb
mov
jmp
push
sub
xor
dec
and
xor
hlt
aam
movl
fwait
daa
mov
mov
or
mov
mov
push
imul
and
push
sub
repz
bound
fwait
pop
sbb
dec
add
inc
fdivrp
cmp
test
negb
pushf
xor
jmp
push
dec
das
add
mov
jnp
sti
jne
fstl
jl
in
adc
mov
outsb
mov
mov
pop
jbe
push
adc
gs
sti
hlt
cmp
add
xor
push
orb
call
xor
adc
push
ffree
sub
add
jne
leave
loopne
loopne
fcmovne
cmp
testl
mov
loop
mov
jl
mov
mov
and
mov
jg
xor
xchg
into
in
xchg
cmpb
rcrb
loope
in
dec
imul
jno
lcall
cltd
push
insl
adc
leave
sbb
lock
cmp
sbb
mov
and
lods
andb
push
adc
insb
popa
cmp
add
aaa
push
mov
jae
or
ror
std
shlb
adc
push
dec
dec
jbe
es
daa
outsl
jb
mov
mov
test
push
arpl
pop
int
inc
lds
stc
pop
xor
pop
mov
jnp
xchg
mov
mov
shlb
addr16
leave
loopne
repz
sub
outsl
popl
in
push
lock
push
out
mov
and
mov
mov
fildll
add
lret
hlt
jg
and
mov
cmp
adc
out
cmp
xor
sub
adc
nop
xchg
jo
sbb
loopne
mov
xor
andb
insb
push
loop
mull
xchg
dec
call
leave
adc
inc
push
mul
mov
pop
adc
out
push
cwtl
mov
repnz
xchg
xor
pop
inc
rcl
aas
push
xchg
jnp
shll
xor
int3
add
das
or
mov
cld
insl
xchg
in
inc
dec
movsb
pop
dec
inc
aam
stc
sub
sub
ljmp
xchg
lods
mov
lods
cmp
push
ret
or
xchg
cmp
cld
mov
jecxz
adc
mov
jmp
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
xor
adc
addl
push
dec
jmp
mov
out
push
cltd
add
xchg
into
mov
push
mov
jo
mov
fs
cld
sahf
out
push
mov
inc
xchg
mov
dec
jmp
inc
jno
movsl
in
dec
in
mov
movsl
pop
ret
xchg
mov
xchg
bound
inc
mull
mov
push
sub
adc
je
cltd
sbb
sub
sbb
xchg
xor
clc
add
or
add
lret
repz
orb
addr16
jns
cs
mov
or
ret
mov
push
out
addr16
jb
in
push
loopne
cmp
xchg
lret
sbb
adc
mov
push
mov
mov
adc
enter
jno
mov
stos
cmpsb
cli
insl
shlb
push
xchg
push
in
jbe
movsb
add
xlat
aam
add
add
add
sbb
xchg
sarb
sahf
rol
sti
mov
adc
xchg
sti
or
lcall
pop
test
icebp
cmc
fnsave
fs
std
sti
out
repz
ret
push
repnz
nop
lock
dec
sub
xor
xchg
aas
arpl
sbb
pop
mov
add
fwait
scas
jne
lret
xor
jae
shlb
call
dec
or
cmp
sub
pop
xchg
divb
mov
outsl
addl
in
sbb
pop
sbb
pop
fadds
jne
insb
or
lods
push
arpl
and
push
mov
leave
test
mov
xor
mov
push
lret
fnstcw
mov
ss
pop
fstl
mov
nop
hlt
push
cmp
push
inc
mov
es
cmp
xor
leave
and
jmp
sti
int3
out
sbb
jnp
lea
ficoml
and
aad
lods
loope
ja
inc
ficoml
aas
sub
or
cwtl
ljmp
sahf
push
in
xor
addr16
test
inc
push
jbe
lods
mov
imul
sbb
aas
aam
out
daa
dec
imul
scas
add
arpl
jmp
adc
mov
stos
popf
cmp
stos
jns
jae
pop
jb
mov
push
xor
dec
push
and
push
dec
sub
fidivrs
dec
jmp
rcrl
ret
divps
add
and
or
cmpsb
and
stc
xor
je
mov
push
out
pop
mov
bound
pop
pop
inc
adc
shrb
in
stos
enter
jns
and
rcr
mov
mov
nop
push
push
mov
dec
add
popa
add
mov
or
xchg
aam
push
daa
or
mov
vmovaps
pop
mov
movsl
push
mov
add
scas
popf
testb
and
das
fisubrl
push
adc
add
test
cmp
and
jmp
xchg
cmc
stos
xor
sbb
sub
aam
fstps
jg
bound
pushf
cmp
xchg
mov
out
pop
push
lds
mov
sub
sbb
in
inc
mov
sbb
das
rolb
or
inc
fst
jp
pop
and
xor
add
outsb
sbb
pop
shlb
mov
dec
call
ret
xchg
test
imul
mov
bound
lahf
mov
mov
mov
jb
sahf
ret
pop
cld
sbb
stc
arpl
outsl
xchg
pop
lret
sbb
push
bound
mov
mov
cmc
cmp
je
cmp
lahf
mov
adc
mov
cli
push
fs
les
aaa
dec
in
imul
pop
xchg
jg
das
lahf
and
sbb
push
jl
out
je
sbb
pusha
test
sbb
mov
xchg
pop
cmp
jbe
orb
lods
add
inc
cs
fdivrp
and
dec
in
push
sarl
mov
shr
in
in
inc
or
jmp
dec
sbb
cwtl
push
inc
subl
cmp
ja
out
mov
push
mov
xchg
jp
inc
add
and
mov
iret
ljmp
loope
adc
jge
mov
jbe
call
xor
xor
cmc
in
lea
scas
scas
out
sti
gs
js
lea
or
add
mov
jecxz
unpcklps
and
push
ret
xor
test
push
sbb
arpl
add
popf
push
mov
dec
mov
inc
cmpsb
pop
insb
push
jae
lea
or
fcoml
pusha
sub
push
ljmp
data16
mov
adc
inc
xchg
mov
xchg
in
daa
and
call
aam
sub
out
add
les
sti
cmc
imul
out
mov
mov
push
jg
arpl
xor
stc
add
mov
ret
andb
push
ret
fisttps
lahf
add
clc
aad
xchg
orb
mov
lock
jp
cmpsl
add
jle
xorb
mov
adc
jo
dec
decb
scas
sbb
sub
push
pop
xchg
nop
iret
test
or
movsb
fildll
out
cmp
push
jno
dec
bound
pop
mov
sub
gs
mov
jle
sahf
add
lret
leave
mov
sar
imulb
inc
adc
rolb
les
sub
neg
out
dec
pop
popf
mov
movsl
xchg
fimull
mov
testb
pushf
push
xor
imul
jbe
jnp
cmp
lret
pop
pop
sarb
in
pusha
dec
pop
cmpsl
out
fdivs
mov
adc
dec
dec
xor
ljmp
dec
and
popl
pop
cmp
dec
adcl
jne
int3
test
sub
sbb
or
nop
add
insl
outsl
pop
pop
xchg
inc
xor
adc
lret
mov
dec
stos
gs
pop
outsl
xchg
push
mov
or
mov
push
repnz
mov
out
push
fwait
arpl
sbb
pop
ss
xor
fcompl
dec
fidivs
aas
nop
pop
repnz
jo
inc
sbb
pop
outsb
repnz
adc
jno
out
fsubl
call
or
and
mov
es
push
adc
push
pop
dec
dec
fs
mov
icebp
adc
icebp
mov
stos
int
lret
sahf
std
hlt
push
adc
mov
mov
lods
call
mov
inc
ds
cmp
inc
push
enter
movsl
je
push
shll
mov
mov
pop
and
pop
test
shrb
push
repz
jnp
sub
cmc
mov
lahf
lret
xlat
out
in
xor
pop
and
or
add
fcomps
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
out
jb
sbb
jno
add
in
ljmp
mov
push
outsl
loop
mov
hlt
jl
popf
aaa
imul
jl
adc
das
jns
pushf
icebp
clc
je
jae
cli
sarl
repnz
stos
pop
popa
mov
aad
mov
mov
in
mov
push
cltd
mov
lahf
sbb
xlat
popf
lods
orb
lock
push
cmp
cli
popa
push
or
loope
mov
xchg
loopne
pop
sbb
sub
pop
scas
mov
test
aad
js
nop
iret
xchg
push
mov
fiaddl
mov
push
aas
xchg
je
mov
lea
sar
cwtl
es
jg
dec
push
sahf
push
jle
push
insb
pop
adc
push
mov
aam
push
sbb
outsb
ret
in
mov
xchg
sbb
dec
call
cmp
xchg
fistpll
mov
push
jge
push
loop
pop
push
mov
cmp
outsb
mov
mov
test
arpl
call
fwait
call
ret
add
loopne
arpl
scas
lds
sbb
jae
lret
sub
and
cltd
fimuls
js
lret
sub
outsl
pop
out
cmp
jbe
dec
mov
jle
mov
xorb
stos
stos
sbb
xlat
insl
mov
hlt
out
pop
jne
inc
shl
stos
adc
outsb
sub
imul
lret
ret
xor
lods
lret
inc
sbb
repnz
or
add
xchg
fisubl
cmp
pop
xor
jno
mov
int
addb
adc
int
jmp
or
mov
imul
stos
lea
or
and
mov
cmc
mov
jno
sbb
lret
adc
and
inc
in
xchg
mov
lea
test
xchg
push
repnz
inc
push
xor
mov
das
data16
sbbb
cmp
jp
in
cmp
cli
xchg
or
xchg
jp
mov
int
mov
sub
cmpsl
int
dec
mov
loope
and
leave
je
and
mov
ret
out
es
dec
fxch
enter
leave
shr
cmp
les
and
jp
jb
inc
mov
jne
adc
dec
je
data16
mov
mov
sbb
jb
adc
push
enter
popf
or
and
sub
dec
xchg
cmp
cli
and
loop
sub
fbld
dec
jl
adc
cli
jge
push
jmp
add
call
mov
jmp
sub
lret
mov
aas
aam
adc
loopne
fimull
or
mov
dec
and
lahf
int
lock
add
add
jp
jns
xor
icebp
je
and
xor
enter
adc
inc
rorb
cmpsb
xchg
insb
divb
pop
mov
lds
jl
or
cmp
pop
jne
lods
pop
pop
pop
xor
mov
push
or
jmp
jne
loop
cmp
lret
stos
sub
mov
jnp
cmp
imul
mov
adc
xor
push
je
ds
pop
ss
push
mov
scas
std
fwait
push
loop
jnp
stos
mov
mov
arpl
pop
mov
decb
loop
das
sbbl
jl
repnz
adc
adc
fisubrs
das
faddl
cmp
loope
pop
sub
or
insl
pusha
xchg
pop
loop
pop
cwtl
or
push
pop
add
mov
and
xchg
mov
ja
jns
imul
mov
mov
es
pop
mov
sub
rcll
test
hlt
cmp
lds
inc
sub
mov
mov
push
jb
jae
and
mov
adc
rclb
movsl
idivb
cmp
outsb
pop
mull
in
ja
mov
or
cmpsb
jl
out
rclb
lea
pop
sub
mov
std
jmp
xchg
cmpsl
shlb
pop
xor
scas
pop
inc
push
mov
cld
sbb
and
mov
jne
xchg
mov
jo
xchg
sbb
addl
cmpsl
test
sub
xchg
dec
xor
jmp
sub
xchg
mov
lcall
or
fstl
mov
inc
sub
xchg
xchg
xchg
rorb
paddsb
adc
pop
imul
jge
pop
stos
mov
adc
test
sub
aam
xor
adc
mov
push
cmp
add
jae
je
inc
pop
mov
fldt
outsl
ficoms
es
adc
cld
cli
push
icebp
inc
scas
adc
sbb
inc
pop
icebp
gs
loope
adc
dec
xor
lcall
push
mov
mov
aaa
sub
outsb
inc
xchg
sahf
fs
push
cmpsb
dec
pushf
dec
jne
popf
mov
outsb
lea
cwtl
lods
xchg
stos
popf
jge
ret
fistpll
rclb
mov
ret
call
xchg
and
in
push
pusha
cmp
out
test
mul
jp
pop
xchg
sbbl
outsl
jnp
inc
pop
cmp
orb
or
adc
ds
leave
jge
imul
stc
xchg
cli
shlb
aas
cld
incb
stc
inc
stos
mov
fldpi
add
xor
fcompp
int3
dec
pop
enter
outsl
xor
bound
adc
cmp
loopne
notb
mov
add
out
popf
lcall
leave
push
xchg
cmpsb
jge
inc
jae
and
adc
mov
aas
push
push
push
pop
mov
repnz
fsubl
add
js
cs
lock
das
push
outsl
aas
lret
gs
popf
repnz
mov
xchg
ja
inc
dec
shr
outsb
aam
outsl
adc
in
aas
out
and
dec
repz
cltd
scas
mov
insl
mov
mov
popf
push
data16
and
mov
sub
fwait
pushf
fdivrs
int3
ja
mov
jle
call
jge
push
cmp
es
adc
ficoms
gs
aam
adc
out
test
in
rcr
fimuls
sbb
xchg
push
stos
jle
rorl
cld
fimull
lock
in
add
pushf
xchg
loop
sub
xor
push
div
leave
lock
rorb
mov
sub
loop
test
xor
cmp
sub
adc
cmp
xor
xor
add
xor
jae
int
fsubrs
or
sbb
mov
fwait
pop
daa
cli
sub
add
int3
mov
xor
ja
das
inc
arpl
cs
mov
push
hlt
scas
sub
mov
lcall
cmpsb
pushf
sub
mov
fsubl
sarb
add
pop
and
xor
inc
repz
push
sub
gs
cltd
jl
ljmp
cmp
mov
lock
push
aam
insb
insb
repz
xchg
out
dec
test
popf
mov
das
hlt
or
jne
pop
sarl
jmp
lret
pop
mov
lds
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
test
adc
addl
mov
iret
xchg
lgs
adc
inc
cmp
pop
dec
stos
add
into
mov
jge,pt
in
arpl
les
and
ret
pop
out
xchg
jnp
fdiv
pop
pop
jae
unpcklps
adc
xor
roll
ljmp
mov
ror
fnsave
mov
push
scas
fistps
push
xor
nop
cmp
in
test
xchg
out
and
out
icebp
sub
cmp
imul
dec
les
sub
sub
outsb
insb
pop
pop
xchg
jns
js
lock
hlt
sbb
dec
in
lea
xor
mov
add
movsl
aas
xchg
jle
mov
cmp
xor
jbe
add
jns
pop
push
dec
mov
jns
test
popf
and
cld
js
in
sbb
sub
push
sbb
dec
jae
insb
mov
xor
mov
gs
push
ja
std
xor
xchg
movsl
or
test
dec
jb
cmp
outsb
adc
xchg
xchg
dec
push
add
push
int
mov
inc
stos
adc
jae
loope
xchg
aam
pop
push
pop
mov
ljmp
in
jecxz
mov
or
sti
test
std
mov
pop
divb
mov
mov
hlt
jmp
call
je
push
xchg
popf
xchg
pop
cld
jns
push
das
or
dec
or
pop
lret
ret
push
mov
adc
sbb
cwtl
jecxz
out
popa
cmp
or
scas
sbb
or
out
pop
and
pop
jae
ds
cmp
cmp
je
adc
repnz
or
pop
nop
mov
mov
shlb
xchg
iret
lahf
jg
mov
ja
adc
pop
mov
imul
jns
jecxz
jae
lods
xchg
data16
js
sub
jo
mov
movsl
inc
or
xor
cli
test
cmp
cld
fincstp
out
xor
xor
mov
repnz
cli
adc
sbb
pop
mov
leave
cmpsb
cmp
or
pop
jno
fwait
mov
adc
xchg
aas
stos
xlat
out
imul
out
jg
jge
cmp
push
decb
lock
insl
sub
aad
shrl
push
sbb
out
inc
clc
dec
rolb
gs
xchg
in
cwtl
mov
movsl
in
push
dec
rcrl
divb
sub
lock
bound
mov
jg
add
call
pop
dec
inc
imul
xchg
and
ret
loopne
fdiv
mov
pop
xor
fs
mov
in
inc
scas
jb
jecxz
jae
xor
adcb
sbb
dec
sbb
fstps
das
loopne
sbb
mov
sub
inc
sbb
inc
sub
cmpsl
sbb
mov
or
adc
rcl
int3
cltd
adc
mov
jp
outsb
push
shlb
add
cmp
or
ljmp
sbb
xchg
mov
aas
sbb
or
sbb
inc
lret
mov
jb
lret
stos
or
out
pop
jg
jl
fucomp
scas
mov
repz
fsubp
cltd
sub
mov
aas
xchg
push
imul
test
stc
add
or
ror
mov
int
out
cmp
add
push
sbb
imulb
lods
popa
dec
sbb
jbe
mov
and
into
xchg
add
dec
or
adc
mov
jo
loope
mov
and
push
movsl
shld
add
rep
jmp
dec
repnz
sub
imul
and
cli
xchg
add
in
out
xor
push
es
pop
lock
or
icebp
bound
xchg
sbb
mov
push
fucom
sbb
sub
jnp
les
xchg
into
call
jo
ret
repz
fists
push
mov
es
xchg
fmuls
jo
jnp
jmp
sbb
leave
lods
pop
add
xchg
inc
enter
lods
ret
dec
add
sbb
out
pop
inc
ret
add
rcll
icebp
movsb
dec
andl
mov
mov
push
clc
test
lret
inc
pop
mov
mov
aad
mov
test
loopne
inc
pop
jae
add
gs
cmc
js
push
mov
xchg
adc
sub
stos
lahf
mov
push
out
and
fwait
lods
cmp
or
aad
js
out
loope
mov
push
xor
loop
mov
push
pop
jmp
inc
mov
xchg
pop
loop
shlb
out
cmp
inc
push
xchg
or
xchg
les
dec
jno
push
jnp
add
ja
nop
xchg
aam
insl
dec
imul
sub
scas
cmc
dec
or
push
cmp
add
push
in
cmpsb
aaa
cltd
add
mov
imul
xchg
xlat
fimuls
or
ljmp
jecxz
loopne
push
mov
roll
dec
inc
xor
jle
cmp
insl
insl
int
les
sbb
dec
mov
stc
sub
lock
add
movsb
ret
fldt
iret
icebp
inc
cwtl
xor
iret
inc
ret
int3
andb
icebp
lods
in
call
sbb
sbb
ja
jecxz
mov
push
lret
rol
ret
push
pop
int3
aas
mov
cmp
dec
sub
stos
cmp
and
scas
fcmovnbe
lea
hlt
jmp
adc
nop
imulb
imul
pop
adc
push
sahf
inc
push
adc
aam
jo
lods
jb
jge
xchg
subb
mov
leave
cmp
repz
fdivr
gs
cmpsl
shr
and
push
out
mov
inc
test
andl
push
popf
xchg
pushl
inc
mov
inc
push
or
mov
cltd
cmp
loop
popa
outsl
or
pop
add
loope
mov
addl
xor
mov
leave
in
scas
das
mov
fiaddl
gs
dec
inc
popa
ljmp
pop
shld
mov
shll
clc
mov
inc
call
inc
iret
sahf
xor
cmp
cltd
or
or
movsb
xor
and
into
mov
mov
repnz
xchg
mov
fisubl
pop
mov
test
xchg
inc
popa
sbb
scas
mov
cmp
dec
sub
xchg
nop
or
fs
sub
adc
push
jns
loopne
mov
lret
jmp
leave
xchg
sbb
mov
les
jge
rol
push
mov
add
xchg
insb
mov
fadds
mov
dec
nop
sbb
mov
popl
sbb
dec
inc
add
mov
adc
mov
inc
cmp
and
jge
and
adc
mov
inc
movsb
nop
dec
xor
jno
sub
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
adc
addl
int3
xchg
push
pop
pop
inc
xchg
clc
push
and
cmc
bound
adc
jle
fsts
loopne
fstl
xor
cmp
sub
mov
sahf
sbb
int3
add
repz
xor
mov
outsl
sbb
or
add
mov
adc
movsl
nop
test
sub
ja
add
lods
mov
loope
inc
jbe
sbb
shll
dec
addr16
notb
sub
hlt
insl
push
xchg
enter
push
testl
push
in
push
mov
in
rcll
cmp
xor
andb
roll
dec
lock
loope
sbb
mov
aad
pop
adc
or
add
lcall
into
stc
in
sbb
xchg
cmp
lock
into
xlat
shlb
jbe
or
unpcklps
jl
xchg
ss
or
ds
adc
mov
not
fwait
int
inc
iret
sbb
add
ds
aad
in
adc
add
ljmp
ficomps
pusha
jl
in
or
outsl
cmc
xor
out
cmpsl
out
iret
inc
dec
andb
mov
sbbb
mov
mov
and
rcrl
das
jle
mov
movsl
jecxz
int3
mov
imul
js
mull
mov
lcall
xchg
ret
out
andl
lods
xlat
jnp
cwtl
cld
ret
cltd
add
insb
or
xchg
cmpsb
mov
push
push
sahf
mov
xlat
cmp
xor
popa
js
loope
cmpsb
dec
inc
movaps
sub
xchg
movsb
outsb
jbe
roll
shrb
xchg
aad
xchg
cs
int
mov
out
in
xchg
inc
cmp
mov
inc
int
dec
xor
jl
or
clc
jmp
jae
lods
fcomip
ljmp
add
push
xchg
sub
fimuls
das
movsb
outsb
mov
iret
push
ja
jecxz
ret
rorl
fmuls
cmp
push
int3
mov
sub
jmp
lods
or
popa
sti
pop
int
loope
test
scas
mov
rcll
addr16
jle
jmp
repz
sub
fdivl
pop
jecxz
sub
out
repz
jbe
jg
scas
inc
jg
sub
push
and
mov
stos
or
sbb
aas
jns
and
xchg
movsb
jno
add
popa
stc
mov
pop
scas
dec
int
adc
fstpl
dec
mov
fidivrs
inc
mov
cs
subb
adc
dec
les
hlt
clc
mov
cmpsb
jbe
lock
cmp
cmp
push
aam
sbb
insl
popf
aam
sub
and
repnz
cmc
push
int
and
or
je
dec
loope
sbb
aaa
mov
dec
inc
push
cwtl
mov
mov
in
inc
je
cmpsb
mov
pop
imul
dec
cmpsb
fdivrs
lahf
les
xchg
pop
loop
push
add
outsl
fcompl
nop
cmp
cmp
fnstenv
out
loope
loope
icebp
pop
mov
push
repnz
and
jns
xchg
test
mov
and
je
out
inc
je
push
loope
mov
lret
arpl
cwtl
aad
xchg
push
bts
fidivl
dec
les
sub
cmc
stc
lcall
jno
fildll
or
pop
dec
in
sub
out
mov
iret
addr16
cmpsl
xlat
sarl
pop
and
pop
jae
sarl
jg
jg
lods
pop
jne
faddl
cwtl
xor
pop
sub
adc
or
mov
out
out
or
andl
pop
cli
and
lret
or
dec
mov
mov
push
add
and
decb
xorb
mov
jl
andb
sub
push
mov
test
lds
arpl
fildll
pop
xor
cltd
insb
sbb
and
sti
scas
mov
cmpsl
repz
xor
push
fdivs
adc
cmp
cwtl
insb
add
dec
adc
sbb
jbe
es
jae
pushf
xchg
jmp
pop
xchg
push
shlb
pop
inc
push
and
inc
test
xchg
dec
mov
dec
test
sub
jo
adc
adc
xchg
jle
xchg
mov
mov
cltd
jg
cmp
sbb
pop
out
xchg
movsb
mov
sbb
pop
loope
xchg
jle
mov
sti
pop
ret
sbb
pop
pop
xchg
pop
mov
jmp
std
cwtl
or
stos
xchg
sbbb
ret
iret
xchg
cmp
dec
push
adc
push
lock
test
scas
xor
mov
insl
sti
xchg
push
stos
mov
jnp
pop
mov
and
sub
fnstcw
jns
daa
nop
aaa
out
or
mov
orl
imul
ss
sbb
mov
sbbl
pop
fucomip
mov
dec
jbe
push
inc
push
sbb
xacquire
inc
loopne
add
inc
cmp
popf
inc
mov
or
adc
in
jno
or
mov
mov
ret
push
test
inc
addr16
js
pop
popa
or
decb
cmp
movsl
lret
xchg
popf
repz
xchg
fucom
adcb
cmp
or
pop
inc
mov
xchg
roll
adc
pop
jae
or
dec
adc
inc
insl
rclb
xchg
mov
arpl
in
sahf
push
aad
sbbl
or
test
jbe
adc
fsubl
test
mov
nop
xor
xor
cmp
fsubs
jge
and
sahf
popa
mov
push
mov
adc
jle
push
mov
jl
xor
or
mov
sub
pusha
xchg
outsb
mov
bound
sbb
pop
ret
xchg
xchg
icebp
in
cmp
dec
icebp
fadds
in
mov
rorl
mov
dec
dec
pop
mov
sub
daa
xor
cli
or
mov
daa
cli
and
cmp
sbb
or
add
mov
leave
gs
ret
data16
in
rorb
jns
testl
roll
into
mov
in
mov
cltd
mov
loop
stc
inc
jg
in
mov
into
loopne
inc
loop
push
mov
xchg
sub
push
xor
jnp
dec
sbb
and
pop
sbb
out
sahf
out
or
inc
xchg
jne
test
jp
cmp
pusha
and
dec
lods
orb
enter
mov
mov
sbb
mov
sub
ss
jns
in
dec
popf
orl
inc
jb
push
call
adc
mov
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
mov
mov
adc
stc
out
es
jmp
in
adc
add
mov
mov
leave
in
sub
pushf
pop
adc
cld
and
lea
jae
jbe
fidivs
outsb
lds
or
mov
movsb
ss
cli
sbb
mov
adc
js
loop
mov
in
adc
shll
mov
ret
dec
mov
cmc
dec
test
jno
cmp
push
add
dec
jae
mov
adcb
xor
movsl
lret
scas
shll
mov
test
or
fistl
jp
ds
mov
and
enter
outsb
out
movsl
ja
inc
addr16
push
mov
fmul
mov
add
pop
xor
or
or
addr16
xor
gs
out
adc
cmp
int
sbb
push
mov
xchg
sbb
outsb
pop
hlt
loop
into
es
inc
dec
fldl
aaa
mov
insb
int3
inc
sbbl
push
fwait
scas
mov
pop
dec
repnz
mov
fnsave
inc
stc
jns
ja
adc
add
mov
xor
cs
cwtl
imul
mov
mov
mov
jno
out
loopne
outsl
jbe
test
sub
jmp
mov
aas
ss
filds
clc
mov
and
clc
pop
test
pop
add
packsswb
cmpsl
add
or
dec
mov
pop
dec
lods
cs
ror
cli
dec
das
movsl
inc
sub
fsts
jmp
scas
xchg
xchg
and
repnz
loop
push
popf
push
and
xor
sub
dec
lods
jmp
cmp
insl
jmp
push
notb
mov
leave
loopne
loop
divl
fnstcw
jo
fdivl
in
movsb
dec
test
mov
or
and
mov
aaa
or
dec
sti
arpl
inc
dec
mov
mov
sbbl
push
stos
sti
ficomps
mov
dec
std
jmp
mov
call
popa
pop
sub
inc
inc
pop
leave
xor
mov
lahf
add
cmp
ret
push
leave
hlt
push
jl
ret
pop
mov
in
adc
sbb
mov
fchs
xchg
xor
scas
arpl
gs
out
and
mov
test
mov
jmp
sbb
sbb
enter
sub
add
sub
mov
fldenv
cmpsl
out
mov
mov
jnp
dec
lods
sarb
stc
fidivrs
mov
mov
add
int3
mov
cmpsb
lods
fisttpll
loop
inc
or
cs
addl
mov
out
jmp
fidivrl
mov
mov
push
pop
aam
mov
push
out
push
outsb
mov
movsl
mov
cmp
out
cwtl
cmc
daa
jle
rcr
jg
jmp
ja
fiaddl
pop
xchg
add
dec
insl
or
sub
subb
dec
icebp
daa
xchg
dec
aaa
outsl
addl
and
add
inc
mov
lret
in
loop
xor
mov
fsubr
mov
cmp
pop
or
stc
sbb
lcall
int3
xor
inc
rol
adc
cli
sbb
and
shrb
in
xchg
sub
adc
pop
push
xchg
lods
mov
jae
mov
adc
adc
pop
ljmp
lea
inc
add
aam
ret
sub
mov
das
jnp
or
aad
sbb
ss
hlt
test
mov
mov
scas
xor
ds
rorl
adc
mov
lahf
jbe
test
int
pop
adc
jmp
jle
cmpsb
mov
stc
push
xchg
mov
iret
mov
add
into
jp
mov
int3
xor
dec
mov
jle
loope
mov
adc
mov
divb
in
inc
aas
sub
sbb
jl
leave
loopne
in
sub
lret
push
out
in
mov
mov
out
push
push
testb
mov
cmp
stos
inc
mov
insl
xor
add
xlat
negl
add
movsb
dec
sub
push
insl
push
lock
dec
sub
pop
adc
mov
cmp
jo
adc
in
xlat
sub
popa
adc
in
ficomps
enter
sarb
push
and
repz
popa
cmp
push
cmp
fs
rol
sbb
xor
adc
rcr
or
outsl
je
test
mov
jle
data16
sarl
push
xchg
inc
xchg
jecxz
lahf
int3
adc
pop
bound
aam
cmp
and
shlw
pop
pop
jo
cmp
mov
dec
xchg
mov
cmp
mov
ds
mov
push
add
inc
push
aam
test
add
iret
xchg
pop
push
mov
pop
divb
sbb
icebp
fdivl
dec
nop
andb
xor
dec
fists
push
xchg
leave
test
xor
adc
sti
sub
jp
xor
aad
dec
jp
push
jp
std
push
sti
stos
negb
pushl
gs
sub
lods
rorl
add
sar
xor
inc
mov
sub
fcomps
jbe
xchg
repnz
test
xor
pushf
dec
jmp
lret
or
pop
push
mov
or
shrl
push
push
lods
es
sub
adc
push
push
add
mov
loop
inc
test
dec
gs
imul
bound
data16
xchg
cmc
and
outsb
loop
test
sub
cltd
aad
fdivs
dec
loop
pop
jbe
inc
add
lock
add
dec
rcr
test
fwait
jle
push
inc
push
dec
add
jmp
jecxz
out
cmp
jb
inc
xchg
pop
xchg
xor
sbb
rcr
jmp
cmp
push
pop
adc
jae
subb
push
call
mov
inc
lods
jle
stc
lcall
std
push
mov
mov
adc
ret
shlb
or
lock
jge
xor
sub
mov
and
lods
dec
adc
test
aas
inc
push
xchg
imul
dec
test
decl
mov
orb
jge
jp
push
cmpsl
xchg
jbe
imul
xor
xchg
push
xor
jnp
nop
shrb
inc
sub
mov
pop
into
mov
fwait
stos
das
pop
mov
push
decb
insb
pop
enter
int3
mov
push
jb
lock
jmp
or
pushf
ja
cmp
loop
movsb
cld
repz
into
sub
cmp
ss
push
and
ds
adc
ret
push
leave
mov
jnp
or
insl
xchg
jle
insl
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
xlat
scas
push
xchg
xor
jno
push
jecxz
xchg
and
pushf
xchg
outsl
inc
in
addl
and
push
push
xor
pop
adc
je
jle
jg
leave
dec
inc
jl
jae
ud0
mov
lock
lods
sbb
mov
ds
ja
and
or
pop
out
out
or
cltd
aas
in
adc
jp
pop
lea
das
mov
pop
ds
inc
ret
int3
cmp
lcall
cltd
inc
hlt
xlat
add
jnp
cmc
mov
fs
xor
or
dec
dec
jnp
nop
into
inc
insl
lcall
leave
iret
movsb
rolb
les
inc
mov
push
nop
cmpl
test
daa
adc
sti
imul
dec
lcall
ss
imul
adc
jo
pop
xor
rolb
and
lcall
xor
xor
sub
mov
push
testl
mov
inc
popf
je
push
pop
pop
xor
imul
ficoml
fldcw
and
cltd
or
test
out
sahf
aas
lods
hlt
clc
aad
mov
dec
dec
sub
loop
push
mov
xchg
push
dec
fisubl
inc
imul
mov
call
in
arpl
scas
push
imul
neg
scas
fnstenv
cmpsb
daa
and
mov
pop
jg
mov
sbb
lods
inc
shll
xlat
shll
pop
and
popa
cmp
insl
dec
xor
push
xlat
je
mov
inc
xchg
fstps
je
clc
inc
xchg
dec
dec
push
call
mov
xchg
test
pop
movsl
fsubl
push
pop
in
cmc
filds
sub
push
or
adc
aas
pop
aam
or
xchg
das
push
fstp
fs
adc
push
pop
xor
add
adc
ljmp
sbb
xchg
outsb
ljmp
lcall
loopne
jecxz
cmp
arpl
pusha
cmp
mov
std
mov
movsl
add
sbb
pop
call
imul
call
ds
and
in
lods
or
stos
mov
test
outsb
mov
ss
xchg
cmpsl
out
sub
jb
xchg
dec
adc
cmp
mov
shlb
shlb
xorb
or
pop
inc
outsl
adc
inc
add
cmpsl
ret
mov
xor
in
jmp
data16
pop
mov
popf
scas
mov
add
cmp
aad
pop
loope
xchg
je
mov
xor
es
and
cmpsl
movsl
cmp
cs
lock
pusha
xchg
mov
xor
or
out
mov
mov
cmp
lret
out
fwait
dec
push
iret
xor
fdiv
enter
pop
scas
jle
sbb
out
gs
int
jne
enter
dec
pop
gs
mov
nop
sahf
jnp
rcl
loopne
fildl
mov
jne
les
dec
pusha
cwtl
mov
dec
cmpsb
lock
mov
pop
dec
inc
idivl
insb
fwait
ret
mov
or
cmp
sub
filds
cmp
jb
fwait
aaa
shlb
and
cmp
data16
in
jmp
inc
jg
lret
or
iret
lahf
fsubrl
or
sub
add
iret
xor
xchg
les
ret
jo
movsl
jo
cltd
and
mov
mov
imul
fisubrs
hlt
out
inc
xchg
mov
ffreep
jno
out
sbb
push
mov
iret
das
pop
lcall
mov
movsb
int3
inc
mov
pop
pop
sarl
mov
inc
jbe
dec
aaa
mov
lods
or
and
add
jecxz
or
je
dec
jno
je
mov
icebp
cmp
shlb
lods
dec
xchg
sbb
xchg
xchg
test
addl
cltd
xor
ds
pop
test
into
or
push
or
cmp
jne
push
jo
lcall
fdivrp
je
pop
daa
scas
iret
pop
mov
pop
add
int
scas
adc
or
icebp
or
outsb
imul
sub
inc
xlat
cmp
mov
scas
and
movsl
pop
jns
xchg
mov
popa
cmpsb
inc
mov
mov
lea
fcoms
hlt
cltd
std
mov
pusha
sub
lock
dec
stos
jle
outsl
push
mov
inc
and
add
orb
in
mov
xchg
jle
jmp
scas
ficoms
jo
jno
and
movsl
push
jg
leave
and
cmp
xor
popf
gs
sub
cmp
arpl
ja
jb
jne
mov
adc
xchg
std
cli
jle
fcoms
and
jae
mov
adc
ret
or
pop
lods
adc
in
shl
adc
outsb
or
aad
xor
shlb
scas
call
xor
sub
cmp
mov
movsl
jo
stos
out
cld
lods
or
mov
daa
scas
cltd
add
dec
clc
lods
adc
cmc
jp
inc
cmp
pop
add
adc
test
imul
mov
mov
or
adc
je
adc
sbb
inc
xor
xor
or
fucompp
call
jecxz
daa
je
lods
jns
sub
stos
jl
fcompl
push
lods
push
sub
pop
int3
pushf
cmp
xor
jns
cmp
xchg
div
jae
push
push
hlt
push
inc
outsl
mov
fnsave
pusha
dec
xor
jmpw
shr
push
push
xchg
push
jl
jae
fnstenv
jecxz
jns
adc
pushl
cmp
repnz
popf
test
loope
dec
jns
fimull
lcall
paddsb
xchg
repnz
adc
enter
jb
mov
mov
std
leave
bound
pop
negl
fdivp
int3
cwtl
adc
arpl
test
or
push
ret
xor
xor
in
shlb
mov
faddl
out
add
mov
push
push
repz
and
push
pop
imul
lock
cmpsl
mov
push
sub
shlb
jge
adc
cmp
lret
mov
movsb
dec
push
and
xlat
leave
imul
pop
jne
test
jp
xchg
pop
mov
jns
sbb
mov
std
sbb
cmp
push
push
push
dec
pop
xor
jl
or
jb
movsb
cmp
push
ret
pop
mov
stos
lock
mov
or
out
pusha
push
fbld
sub
pop
xchg
sub
hlt
scas
push
pop
aam
pop
cmp
fiaddl
dec
sbb
sbb
outsl
cmp
push
lock
adc
dec
hlt
popa
bound
aas
adc
sbb
ret
xchg
mov
mov
mov
push
pop
push
push
xchg
mov
enter
push
lret
jmp
loop
daa
js
stos
mov
xor
lahf
lods
adc
or
ret
mov
test
xor
dec
pop
aaa
shlb
imul
or
and
add
movl
add
call
inc
inc
add
inc
add
loope
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
jbe
outsl
sbb
push
gs
cmp
test
inc
fwait
pop
sub
shlb
icebp
or
cs
and
dec
add
sgdtl
lahf
bound
pop
mov
cs
sbb
pop
js
pushf
aad
shrl
jecxz
xchg
pop
pop
push
adc
movsb
test
sbb
ffree
jne
or
add
mov
insb
insw
adc
shrb
xor
inc
add
and
xor
xchg
jne
pop
mov
cli
push
addr16
fs
cmp
cld
pop
inc
testb
lret
popf
add
xchg
loop
pop
notl
daa
sbb
lcall
or
adc
outsb
scas
inc
cmp
push
lcall
or
mov
notl
mov
xor
sbb
icebp
fcmovu
xchg
or
sub
repz
jns
xchg
lds
rol
cmp
xchg
gs
inc
mov
testl
and
pusha
adc
aaa
mov
fs
aas
shrb
test
add
mov
mov
ljmp
dec
iret
push
lcall
and
lods
mov
jb
std
push
fs
push
cs
call
or
fbld
and
fs
sahf
mov
orl
movsl
adcb
push
xchg
adc
in
mov
mov
pop
or
scas
mov
test
push
push
shll
rorb
lods
pop
inc
dec
pop
cld
or
out
xchg
out
mov
mov
pop
mov
xor
push
xor
sbb
xor
into
mov
mov
mov
dec
lret
loop
push
pushf
pop
cld
xor
aas
sub
fisubl
mov
outsl
fs
daa
pusha
jp
std
inc
mov
xor
hlt
ss
xor
jp
mov
inc
jne
inc
dec
rcrb
sub
mov
mov
aad
cmpl
outsl
push
pop
xor
inc
mov
inc
addr16
xchg
ljmp
pop
in
divb
jno
cmc
stc
rdmsr
fnsave
cmp
inc
push
mov
out
sbb
jmp
or
ret
lods
int
mov
testb
mov
addr16
stos
lret
cmp
mov
pushf
xchg
dec
mov
or
sahf
cmp
mov
sub
fstl
lahf
or
lock
adc
scas
mov
test
pop
lahf
lock
lods
push
cltd
out
jle
add
enter
xchg
in
add
lcall
rclb
push
lcall
jp
out
push
pop
loop
and
jmp
ljmp
ljmp
dec
mov
jnp
pusha
push
addr16
test
pop
out
push
jecxz
cmpsb
adc
dec
push
fbld
inc
push
lcall
stos
push
gs
push
pop
push
outsl
in
pop
cmc
push
cmpsb
and
push
jp
add
popa
sub
mov
ss
imul
xlat
stos
dec
aaa
lcall
jmp
ret
mov
push
sarb
fst
pop
adc
fninit
pop
jecxz
sbb
mov
sub
in
stos
popf
xlat
mov
leave
je
out
lret
int
out
int
inc
xchg
jp
in
ja
movsl
or
push
and
cmp
bound
inc
ljmp
mov
sbb
xchg
out
popf
xchg
mov
mov
testb
push
adc
scas
sub
xchg
add
mov
push
pop
cli
push
addb
shll
push
xchg
aas
sub
mov
adc
push
inc
push
fs
loopne
xchg
sahf
gs
push
outsb
stos
or
push
cwtl
sub
xchg
or
mov
xlat
fcoml
pop
daa
outsb
popa
sbb
dec
push
add
or
or
outsw
mov
inc
cwtl
data16
into
shll
or
add
rol
inc
frstor
lods
xor
dec
add
ljmp
enter
pusha
sahf
xchg
test
pop
pop
in
call
aam
jne
mov
lcall
out
or
rcrl
iret
mov
jmp
jecxz
push
lahf
pop
cli
inc
repz
andb
sub
mov
dec
and
xor
lret
rol
loop
mov
test
loopne
das
out
dec
jle
jae
cmp
xor
mov
out
xor
pushf
mov
mov
push
cs
insb
inc
stos
inc
into
pushf
iret
sub
dec
in
inc
enter
ret
icebp
xor
pop
ffree
out
mov
gs
cmp
rorl
jp
aad
sbbl
mov
test
arpl
inc
inc
fbstp
sbb
jbe
sub
push
fcompl
jle
shlb
cmp
aam
enter
xor
imul
cmp
sub
or
lahf
adc
cmp
and
add
jno
aam
mov
sbb
mov
cs
adc
jmp
add
xor
inc
outsl
and
fs
aam
mov
dec
cltd
sbb
or
push
in
lods
std
jb
xchg
pop
adc
dec
add
pandn
in
out
mov
and
out
mov
stc
movsb
loop
push
clc
out
test
sbb
jbe
out
inc
xor
arpl
mov
les
and
push
pop
push
fnsave
push
jp
gs
adc
jle
fwait
or
sbb
mov
imul
rcl
xchg
or
imul
mov
adcl
pop
cld
dec
adc
lock
cs
loopne
xchg
nop
xor
inc
fidivrl
pusha
xor
in
aas
cmp
scas
ret
and
push
push
es
and
sub
inc
mov
xchg
icebp
sub
lods
xor
imul
dec
les
test
and
mulb
arpl
movsl
xor
fistpll
jb
faddp
xchg
and
sub
jmp
mov
pop
push
lahf
aas
xchg
sub
fildll
add
lock
fcompl
and
inc
and
mov
pusha
ret
sbb
dec
aam
inc
pop
fistpll
repz
mov
sti
xchg
cmp
mov
lods
in
sub
dec
shl
bsr
stc
fcomps
fbld
mov
push
setb
stc
xor
and
mov
jno
push
incb
mov
movsw
scas
cmp
outsb
adc
cmp
insb
jmp
lods
mov
mov
push
rclb
push
ficoml
aad
mov
inc
in
and
pop
jae
add
dec
mov
jecxz
addl
mov
dec
mov
jg
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
cmpsb
sub
scas
adc
jno
dec
mov
mov
cmp
xchg
dec
leave
orl
push
cli
fsubrs
adc
jmp
jle
cmpsb
fisubs
test
pop
xchg
push
xchg
jl
leave
mov
push
lods
in
into
jb
dec
iret
pop
bound
mov
cld
imul
in
lods
inc
fcmovbe
into
pop
mov
arpl
mov
ficompl
xlat
arpl
aas
in
hlt
filds
rcl
dec
adc
mov
sbb
dec
inc
cmp
or
lret
and
adc
mov
mov
cwtl
mov
imul
push
movsb
mov
in
and
pop
or
hlt
push
sbb
inc
movsb
jle
shll
fstps
cmp
or
pop
lods
loop
or
and
stos
add
lret
je
jg
adc
test
mov
or
lock
rcrl
xor
fnsave
ss
pushf
popa
dec
cmp
ja
cmpsb
insb
pop
sbb
add
and
mov
jne
lods
leave
push
xor
aam
pop
mov
loope
ds
cld
pop
js
xor
xchg
push
jno
mov
and
xchg
insb
mov
pop
dec
mov
insl
mov
jmp
orl
jge
mov
and
jb
mov
sub
xlat
iret
xchg
cmp
cld
adc
test
dec
arpl
push
int3
mov
cs
cmp
int3
addl
mov
jbe
push
test
dec
add
bound
xor
hlt
nop
cmpsl
lds
mov
test
adc
jle
mov
dec
hlt
and
jbe
daa
sbb
mov
cmp
sub
stos
xchg
movsb
inc
cli
fadd
pop
or
cltd
push
das
lret
test
mov
jae
ficoml
mov
sahf
push
repnz
lahf
push
ficomps
pop
xor
in
sub
mov
sub
jnp
xor
data16
call
fcoms
stc
xchg
add
mov
mov
lds
push
nop
jo
stos
rcrl
call
lret
imul
mov
xor
push
imul
icebp
hlt
xchg
mov
dec
in
and
lods
ljmp
fbld
push
mov
inc
bound
js
repz
shlb
jns
ret
cmp
mov
sub
call
pop
loop,pt
cmpsl
sbb
mov
pop
dec
out
push
mov
adc
dec
cmp
push
mov
push
or
addr16
or
outsl
mov
lret
xor
cmp
faddl
mov
push
movsb
test
into
std
push
div
jp
cwtl
add
lret
cld
mov
jo
das
add
sti
pushf
xor
sub
sub
pop
loopne
add
int3
inc
cli
into
xchg
adc
or
mov
push
pop
aam
jle
mov
or
cmp
jne
and
inc
jnp
call
pop
out
out
and
inc
and
xchg
test
sub
aaa
mov
jb
repz
adc
cld
sahf
in
pop
shll
loope
cltd
cmpsb
mov
add
pop
mov
lds
outsb
das
pop
orl
or
mov
mov
frstor
out
add
jmp
add
fmull
cmpsl
les
rcll
cmp
pop
ja
xor
mov
movsl
xchg
jl
push
ss
fidivrl
aas
movsb
aas
addr16
inc
cmp
jp
sub
jmp
scas
jp
mov
and
jmp
out
insl
shrb
xlat
push
rclb
cmp
lock
addr16
clc
cld
adc
sarl
jns
dec
inc
sbb
jnp
jae
mov
mov
xlat
sahf
mov
lods
fs
mov
sub
rcrl
cli
ds
cmpsl
mov
call
adc
mov
outsb
or
mov
ficompl
dec
adc
push
pop
sbb
rdtsc
dec
sbb
ret
outsb
jns
outsl
xchg
rol
cld
test
in
push
jmp
int3
adc
add
or
rcll
or
bound
pop
push
lds
hlt
inc
iret
adc
stos
bound
inc
dec
cld
stc
push
daa
sti
or
mov
xlat
int
xchg
pop
jns
ret
pop
andnps
ja
dec
add
cmpsb
push
dec
sbbl
sbb
sbb
xlat
lock
adc
cmp
pop
aam
gs
in
jge,pt
cwtl
loop
mov
pusha
mov
jo
aaa
or
mov
rolb
test
stos
xor
mov
subl
jnp
inc
cmpsl
and
lods
shlb
stos
xor
pusha
fadd
out
aaa
mov
or
inc
lods
sbbb
arpl
lds
xchg
jle
mov
shlb
out
push
fbstp
fldl
lock
test
push
mov
jno
mov
inc
sbb
lahf
mov
cmp
jp
sbb
mov
sub
mov
xchg
ja
jg
xor
insl
inc
es
adc
test
push
hlt
cmp
mov
es
bound
and
fiadds
jns
out
dec
loope
popf
fs
sub
push
add
push
pop
stc
xor
lds
int3
jg
cmp
cmpsl
dec
sar
mov
add
subl
enter
out
imul
rcrb
lods
adc
sbb
xlat
clc
iret
push
jg
inc
push
and
jmp
test
xchg
jae
cmpl
add
fucompp
outsl
pop
xchg
add
add
cli
dec
adc
aad
hlt
push
xchg
stc
js
daa
dec
jecxz
bound
imul
in
jno
or
pop
imul
or
xor
mov
cmpsb
sbb
imul
movsl
adc
jno
out
push
ds
inc
in
fstpt
push
mov
push
jns
cli
jl
lds
fistl
int3
xchg
add
mov
xchg
mov
inc
sub
negl
xor
xor
mov
stos
mov
sbb
mov
cltd
aas
jmp
arpl
inc
push
xor
in
push
adc
rcr
dec
adc
mov
rclb
sarl
xchg
push
push
and
cmc
and
stos
iret
cmc
outsl
xor
in
pop
outsb
sbb
add
fs
hlt
inc
cmp
mov
aad
scas
icebp
sub
inc
pop
pop
xlat
xor
dec
xchg
add
lods
fucomp
push
sbb
sti
leave
ficoms
andb
adc
fld
inc
jecxz
pop
or
popa
hlt
mov
dec
lods
sbb
dec
cmp
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
ficompl
pop
cli
adc
jno
je
xchg
rcrb
ret
cmp
or
shll
ljmp
and
cmp
push
arpl
rorl
idivb
lods
adc
movsb
xchg
sub
dec
fisubrs
leave
dec
in
cltd
push
push
cmp
jmp
adc
jmp
xlat
fwait
das
movsb
mov
jle
adc
push
out
dec
sub
test
adc
sar
sbb
les
je
stc
xchg
jle
frstor
ja
jp
mov
movsb
jle
std
jmp
cwtl
hlt
mov
lcall
push
dec
jle
jl
rorl
ja
loop
ss
in
push
leave
bound
pop
mov
clc
mov
in
lock
xor
ss
int3
push
aam
sbb
and
and
insb
or
inc
mov
hlt
hlt
cwtl
xchg
jl
fdiv
add
sub
lods
mov
ret
aas
enter
shl
incl
jle
xor
add
repz
mov
in
and
repnz
push
xchg
addb
push
int
jge
or
add
mov
dec
fnstcw
sbb
pop
cli
pop
xor
xor
shll
insb
sar
push
sti
in
aaa
mov
dec
out
cmp
cmp
shl
sbb
push
mov
cmp
pop
mov
in
sti
std
sbb
out
clc
jne
push
xchg
sub
cmp
xchg
shll
cltd
jle
fmuls
xchg
jg
pop
and
jp
cmp
pop
ja
pusha
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
