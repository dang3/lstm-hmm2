push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
adcl
jg
jle
xlat
cmp
pop
add
push
push
or
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
shrl
fildll
sub
mov
cmp
mov
pop
icebp
popa
rolb
nop
jne
stos
dec
cmp
dec
lahf
stc
mov
cmpsb
jns
out
mov
jle
add
dec
add
in
mov
stc
subl
ss
leave
jbe
test
xchg
outsb
xor
or
mov
imul
loope
repz
sub
or
jge
jne
mov
sbb
mov
mov
enter
ret
repz
lods
fadd
in
pop
lods
iret
xor
fistpll
sahf
push
ljmp
jl
pop
mov
sarl
pop
add
sbbl
test
xchg
jl
cmpsl
sub
fdivrl
test
add
iret
mov
xor
push
cltd
mov
fadd
int
mov
xor
push
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
inc
in
mov
jle
mov
jle
test
mov
mov
inc
fsubr
clc
mov
xchg
add
orb
xchg
mov
out
test
jbe
outsb
aas
mov
adc
pop
jmp
out
imul
imul
jbe
or
enter
adc
adc
das
or
and
mov
fdiv
ss
in
jae
or
ror
push
daa
ss
out
hlt
xchg
mov
xor
mov
fildll
aad
popa
jmp
sbb
into
cmpsl
in
inc
scas
xchg
pop
mov
insb
xchg
push
fdivrl
jg
jo
add
loop
das
xor
mov
or
outsb
mov
ficompl
sarl
nop
adc
ffree
les
testl
out
jb
xor
push
dec
pusha
shll
lds
pop
adc
sub
in
xor
imul
xchg
lods
shr
mov
ret
pop
sub
push
xchg
xchg
xor
leave
mov
rclb
and
add
gs
lock
int3
or
test
js
out
insb
fmull
xlat
xchg
int3
add
lret
jl
roll
xchg
jg
pop
ss
stc
lds
ret
std
push
push
jns
lcall
jae
data16
xor
sub
movsl
jno
push
aaa
sbb
lods
fsubs
jmp
adc
shrb
addr16
or
fdiv
pop
inc
or
sbb
fistpl
js
popa
add
add
pop
loop
lods
inc
sti
jmp
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
loop
es
jns
jle
jg
jle
ret
push
into
lds
sub
push
dec
add
and
daa
cmpsb
cmpsl
adc
mov
jl
mov
cld
jp
xlat
mov
and
xchg
lock
and
mov
addr16
cli
push
ja
add
jo
imul
push
xor
insl
inc
loopne
cwtl
xor
jle
dec
aam
jecxz
lods
aad
inc
sub
fimuls
rcr
fwait
loope
loopne
lret
lea
cli
bts
stc
ja
mov
add
add
xchg
sub
sbb
int3
jge
dec
pop
push
loopne
and
mov
jmp
lret
out
fadds
and
std
sarb
popf
in
lret
fadd
push
fimull
psubq
lahf
ss
jecxz
jns
stos
xchg
cld
xor
dec
mov
in
aas
mov
out
insl
outsb
insl
jo
xlat
jns
dec
push
inc
lods
xchg
mov
adc
loope
fbld
xchg
frstor
sbb
pop
xor
inc
fisubs
cli
ret
aam
push
sub
pusha
sbb
les
mov
rclb
mov
call
push
in
icebp
js
jne
js
sti
test
dec
mov
mov
test
lods
xor
dec
aaa
sub
sbb
popa
xlat
mov
xor
lea
popa
std
les
xlat
xor
sub
in
scas
mov
mov
jo
fidivrs
and
cmpsb
xor
fcmovne
orb
mov
mov
and
xor
rcl
jne
mov
or
jmp
or
popa
sbb
jnp
jle
jg
jle
call
lahf
les
adc
jns
mov
jno
cmp
inc
inc
pop
cmpsb
mov
stos
sbb
lock
out
ss
mov
or
xchg
pop
xchg
pushf
adc
add
mov
cmp
cmpsl
push
fwait
sarb
into
dec
leave
fnstenv
jp
xchg
pop
adc
popf
in
aam
pop
dec
shr
or
scas
nop
lret
jmp
pop
pop
outsl
pop
and
repnz
lea
repz
shrb
mov
xchg
outsl
lret
jl
into
aad
inc
loop
ljmp
out
lods
sbb
leave
push
out
mov
push
sbb
pop
ljmp
mov
or
jo
ror
subb
lods
loopne
movsb
cmp
ret
xchg
in
aad
pop
test
in
in
pop
sbb
insb
jge
jle
pop
dec
dec
xchg
das
sbb
imul
push
add
push
jge
sub
enter
push
xor
mov
out
out
sub
pop
sub
es
mov
aaa
inc
push
shl
jno
add
pushf
test
out
iret
shl
mov
imul
movb
jns
inc
dec
inc
cmpsb
int
inc
cltd
aas
bound
sarl
popf
inc
inc
and
out
xchg
cmp
rclb
call
shl
dec
xchg
jmp
sub
bound
xor
xchg
pop
cltd
mov
adc
jbe
andps
xchg
inc
mov
sahf
loop
hlt
sbb
jmp
xor
jl
jge
pop
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
cmp
mov
jle
adc
mov
iret
cmp
les
or
cltd
outsb
fucomi
fisttps
outsb
out
hlt
push
lret
jb
pop
push
cmp
arpl
xor
jno
sub
add
and
mov
shll
add
lock
scas
inc
or
in
stc
lea
test
push
xchg
mov
adc
repnz
push
outsb
loopne
mov
fildll
inc
jae
sbb
mov
jg
sub
aaa
insl
inc
mov
fs
into
aam
dec
mov
lea
ret
xchg
mov
cltd
addb
push
int3
inc
sbb
or
push
fs
aaa
mov
sub
and
loop
insb
push
sbb
mov
popa
test
loop
ret
and
repnz
adc
lret
add
imul
push
sub
mov
sbb
mov
idiv
xchg
dec
jno
xchg
pop
adc
mov
and
xchg
out
out
jecxz
int3
jbe
xlat
sahf
pop
sub
fidivrs
xchg
mov
int
in
push
and
inc
push
cld
inc
fst
je
popf
out
dec
inc
sub
imul
ret
xchg
mov
or
jno
fmull
test
jbe
pop
mov
inc
sha1msg2
test
sub
insl
sub
inc
or
sub
xor
xchg
mov
fcomp
pop
addb
test
xor
sub
sub
call
xchg
jae
loop
outsb
aam
fcoms
rorb
add
cld
movzwl
add
jmp
push
mov
test
sti
dec
push
mov
jle
mov
jle
mov
sahf
xor
push
fdivs
ljmp
aam
or
xchg
insb
mov
inc
fwait
push
cli
push
popf
jne
cmp
insb
or
dec
jno
mov
adc
sbbb
push
std
or
cwtl
cmp
testb
and
bswap
cwtl
or
insl
xor
jae
jmp
mov
jg
cmp
rol
mov
les
call
or
movsb
stos
cmp
pusha
jnp
cmp
mov
push
rcrb
fcoml
mov
sub
mov
les
loope
lock
mov
nop
mov
stos
xchg
out
sbb
push
pop
push
or
lret
imul
loop
jp
xchg
sbb
sbb
adc
pop
inc
rolb
test
cmp
mov
sbb
mov
or
call
inc
int
test
adc
sub
fldenv
inc
dec
push
dec
cmp
rolb
jo
and
sar
sbb
cmp
aad
popf
mov
add
ficomps
xor
pop
addb
insl
int
ret
mov
and
movsb
in
mov
push
mov
jne
daa
cs
mov
lcall
jmp
cs
cmp
xchg
add
xor
cmp
jmp
mov
inc
popa
ja
nop
sub
push
sub
adc
icebp
mov
aam
aam
int3
cmc
dec
adc
aaa
inc
scas
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
gs
lods
or
add
mov
jle
push
data16
out
adc
and
sbb
or
cwtl
xchg
out
push
sub
pop
arpl
xor
insl
pop
fsubrl
mov
popf
mov
xor
mov
push
jle
xchg
mov
enter
in
push
inc
xchg
jmp
mov
mov
pop
pop
mov
xchg
pop
inc
outsb
repz
sub
sbb
mov
fcoml
mov
xlat
adc
mov
sbb
data16
loop
mov
cmpsl
addr16
rorb
pop
mov
arpl
shrl
aad
push
cmp
ret
mov
xor
jbe
ljmp
jge
or
mov
stos
rorb
sbb
dec
pop
mov
add
mov
mov
jg
xor
jg
mov
ss
divb
mov
cmpsb
pop
shll
out
sbb
mov
inc
or
xor
jno
sub
sbb
cmp
int3
fwait
ja
sarb
sbb
cmp
sti
movsb
out
add
std
aas
popf
or
cmp
and
sti
jo
dec
mov
repz
cmpsl
inc
in
add
ss
xor
sahf
sarb
adcl
pop
dec
mulb
jae
test
arpl
dec
aaa
rcrl
repnz
adc
jbe
and
sbb
lret
xchg
push
lahf
lds
mov
adc
outsl
sbb
mov
arpl
repnz
sub
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
jle
mov
jle
in
repz
lds
sbb
pop
sub
push
cmp
imul
adc
pop
sub
mov
cmp
and
xchg
push
lret
addr16
js
inc
pop
idivl
sti
sti
into
cld
ret
cmp
popa
fs
loopne
push
lds
pop
mov
mov
or
sub
int
mov
pop
les
dec
lods
leave
add
addb
pop
out
popf
gs
ss
shr
cmpsb
push
dec
add
adcl
xchg
pusha
and
jns
test
jb
or
ret
stos
add
aam
cli
dec
loopne
xchg
outsb
and
movsl
ret
call
cwtl
lock
int
and
repnz
jne
imul
mov
jae
or
xchg
jb
jle
and
cmpsl
leave
cli
push
cmpsb
xor
cmpb
js
daa
sub
rcr
pop
push
jecxz
aas
imul
fidivl
in
sbb
adc
aas
daa
mov
int3
push
cmc
into
cmp
sbb
jbe
mov
out
jae
cmp
sub
lret
lock
mov
adc
into
sbb
nop
pop
inc
add
sub
xchg
cli
dec
aad
inc
jo
cs
xor
adc
call
insl
out
nop
loop
xchg
lret
iret
aam
sub
out
push
mov
hlt
xchg
fldt
or
and
xchg
dec
xor
xor
sbb
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
cmovne
lahf
mov
jle
mov
jle
std
xchg
add
fs
scas
orl
fcmovbe
dec
jne
ret
mov
cmpb
sbb
mov
or
add
icebp
and
dec
outsl
pop
jns
sahf
aad
push
mov
push
jp
inc
push
int
mov
faddl
mov
xor
add
sbb
and
in
push
add
jl
jbe
fs
mov
and
fadd
add
push
cs
mov
inc
xlat
js
mov
std
mov
rcrb
jnp
inc
scas
push
aaa
inc
pop
and
push
jb
pop
psubw
push
xchg
and
nop
lds
mov
pusha
pop
push
mov
jno
sbb
jge
pushf
popa
push
popf
out
sub
lcall
push
mov
sbb
es
adc
jg
gs
fsubr
adc
mov
add
loope
mov
bswap
pop
aas
test
lret
add
lods
xor
sbb
icebp
mov
pop
push
mov
pushf
aas
pop
or
iret
mov
aad
aam
inc
xchg
sbbb
xchg
push
mov
adc
sbb
shufps
loop
dec
mov
adc
gs
stos
jns
sahf
xchg
lods
jle
mov
call
dec
jbe
fldl
fcoml
pop
add
cmp
rcrl
insb
repz
ja
jp
add
cli
jmp
pushf
rcrl
insl
mov
lcall
cmpl
lahf
mov
lods
cmp
shld
xor
mov
or
in
inc
or
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
mov
mov
loop
xchg
outsb
push
fldt
sub
jmp
and
sub
leave
xor
jae
mov
pushf
cmpsb
mov
mov
pop
adc
out
cmp
aas
cwtl
xchg
or
out
sub
add
mov
fldt
cmpsb
es
mov
cwtl
sub
in
lret
lret
shll
mov
lea
add
cwtl
dec
out
xor
subb
test
movsl
pop
dec
imul
dec
test
clc
lods
shlb
pop
lods
pop
inc
test
mov
dec
sub
and
jmp
sti
int
dec
and
pop
roll
xchg
adc
push
hlt
or
mov
loope
inc
ret
test
push
cmp
in
lods
adcl
cmp
shll
in
fldcw
and
lods
mov
xor
int
sbb
or
xchg
pop
xor
pop
or
icebp
insb
in
divl
insl
fsts
in
movsb
xor
lods
rolb
sub
sbb
mov
xor
repz
sub
lahf
push
inc
mov
in
inc
sub
jns
add
pop
inc
jp
ljmp
mov
adc
popa
mov
icebp
cmp
fstpt
xchg
dec
sub
pusha
lock
jbe
loop
pop
mov
inc
adc
loop
je
enter
pusha
fwait
ja
movsl
test
mov
sarb
icebp
lock
mov
sti
pusha
data16
sbb
ds
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
in
test
and
jle
mov
jle
stc
cmp
jg
mov
out
in
lea
bound
pop
inc
ljmp
imul
xchg
andl
xchg
fisubrs
pop
sub
cmc
adc
cmp
mov
mov
fisubs
aas
lea
inc
xchg
data16
and
shll
add
jge
cmp
mov
cli
adc
jg
fiaddl
mov
test
jno
aas
divl
icebp
jecxz
jge
pop
mov
push
hlt
or
push
inc
repz
push
sbb
xchg
jmp
xor
pop
sarl
push
push
jl
frstor
mov
xchg
je
fucom
and
test
pop
push
push
les
xchg
movsl
sahf
sbb
mov
pusha
lret
pop
inc
lcall
mov
int3
lods
xor
lret
dec
sbb
int3
loope
rclb
std
dec
out
cmp
pop
adc
mov
or
sbb
pop
stc
addr16
jmp
fldenv
xchg
xchg
cmp
fdivs
mov
jl
jecxz
adcb
roll
adc
aad
fdivp
pop
ret
lods
cs
mov
std
pop
push
mov
and
sbb
adc
clc
dec
cmc
inc
aam
or
das
or
inc
mov
push
ljmp
mov
je
loope
aas
loope
pop
xchg
mov
sub
rclb
repz
xor
or
push
insl
mov
dec
cmp
jmp
sub
add
and
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
mov
pop
push
or
push
jg
jle
repnz
cmpsb
call
jb
xchg
xchg
enter
xchg
in
add
xor
das
aas
inc
sbb
dec
in
clc
cli
jo
push
aas
popf
loope
xchg
push
or
and
aas
pop
lods
dec
fmul
decl
pop
push
ja
or
mov
xor
mov
mov
stos
stos
scas
pop
mov
int3
and
aam
mov
jge
xor
pop
push
adc
pushf
push
loopne
je
cmc
mov
and
xchg
push
xor
mov
dec
adc
fwait
add
rolb
xor
cmp
or
es
pop
call
xor
les
cmp
sub
or
sbb
pushf
repz
jl
out
push
pop
stos
outsl
xor
adc
insl
call
add
shll
loop
lret
mov
add
mov
xchg
mov
mov
pop
jmp
xchg
jge
and
test
xchg
in
inc
mov
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
incb
jle
push
jg
jle
fisttpl
out
cmc
sub
dec
fnstsw
fndisi(8087
fwait
test
cmp
dec
sub
hlt
das
sbb
popf
xor
lods
or
scas
rcl
xchg
sub
inc
insb
mov
fwait
hlt
xor
lcall
push
rorl
lahf
mov
gs
stos
pop
aad
lods
jg
stc
fidivl
je
cmc
pushl
pushf
mov
inc
adc
mov
add
xchg
test
mov
or
out
jp
fimull
inc
icebp
sub
xor
adc
icebp
out
adc
lods
jecxz
pop
sahf
dec
and
push
movsl
sub
enter
mov
inc
mov
test
pop
popa
iret
mov
fsubrp
mov
setns
fwait
and
push
cmp
push
or
push
faddl
movb
sbb
in
popf
jge
shl
loope
push
lret
subl
nop
xor
or
pushf
mov
cli
shlb
shl
inc
mov
inc
jg
lods
sbb
pop
in
inc
inc
sbb
or
aad
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
scas
jp
loopne
or
push
jg
jle
add
jno
xchg
in
sub
mov
in
add
call
ss
add
sbb
out
rcll
cmp
xlat
ret
pop
mov
inc
fwait
dec
into
dec
movsb
mov
sbb
dec
in
push
fists
jecxz
rclb
cmp
dec
cmp
loop
or
xchg
idivb
outsb
inc
push
jns
call
dec
xor
push
movl
ficomps
push
jge
loopne
mov
aaa
outsb
xchg
xchg
je
rcrb
add
shrb
stos
mul
cltd
sub
mov
idivl
in
push
pop
cwtd
sub
cld
nop
in
adc
push
adc
dec
mov
lcall
lock
orl
add
mov
call
fs
or
in
sub
repz
ljmp
lds
push
fldt
pop
or
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
adc
jle
jns
jle
cs
sub
xor
add
lcall
pop
es
pushf
xchg
sbb
mov
pop
mov
adc
cs
int3
aam
clc
cs
ja
inc
and
sub
jns
jno
fdiv
lret
jmp
ja
std
mov
push
sub
jns
sti
imul
pushf
push
dec
cltd
rolb
and
jge
mov
mov
mov
stos
pop
pop
ret
and
lret
add
xor
or
push
stos
in
xor
popaw
js
add
dec
mov
pop
ficomps
in
sahf
xchg
rorl
jg
jge
xchg
jne
lret
imul
pop
inc
lock
lods
inc
shrl
es
imul
ds
inc
sahf
xchg
int
movsb
mov
mov
pop
fmull
lret
in
in
push
imul
jmp
adc
andb
adc
lds
add
test
mov
and
mov
iret
jge
jmp
xchg
cmc
sarb
das
aaa
push
dec
aas
andl
inc
inc
dec
icebp
jns
sub
lcall
test
daa
test
jb
inc
pushf
mov
ja,pn
xchg
add
mov
cmpb
xor
xchg
adc
cmp
pop
push
lahf
jne
push
pop
pop
nop
sarl
mov
jae
push
xor
sbb
test
fwait
fs
xor
das
movsb
adc
cmp
xchg
add
cmpsl
jmp
in
push
ja
push
push
or
mov
push
push
dec
sub
mov
adc
xor
icebp
test
lea
repnz
mov
int
ret
jbe
sbb
mov
mov
push
cmpsl
out
push
dec
mov
pop
adc
jbe
mov
notl
and
rcll
bswap
nop
lods
aad
rsm
repnz
pop
insl
ret
push
test
aad
ljmp
es
inc
inc
push
mov
cltd
ss
nop
and
out
addr16
xchg
movsb
jb
pusha
jge
xchg
dec
cmpsb
and
inc
mov
mulb
out
pop
mov
mov
or
xorl
daa
xor
fdivl
add
negb
bound
nop
mov
jno
push
mov
xchg
popa
fwait
mov
fstpt
xchg
int
fimull
fs
jns
popa
dec
and
jb
cmp
fcos
pop
xor
dec
mov
push
test
lods
sbb
lods
insl
xor
adc
push
clc
xchg
xchg
js
jp
popa
inc
in
inc
nop
in
inc
cmpsl
add
mov
arpl
andl
insb
ret
or
inc
xchg
repnz
push
ds
mov
push
out
adc
xchg
xor
repnz
mov
mov
notb
int
shlb
lds
roll
pop
jg
repz
jmp
sarb
fdiv
loope
inc
loopne
inc
push
inc
adc
sar
dec
sub
imul
add
mov
jno
test
repnz
ds
push
mov
sbb
sbb
xor
pop
xchg
xchg
daa
repnz
dec
leave
in
mov
cs
stos
mov
std
cmp
adc
sbb
xchg
jmp
das
jmp
or
mov
adc
cltd
in
arpl
cmpsl
mov
xchg
lods
test
ljmp
push
and
out
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
fimull
adc
push
jns
jle
lahf
push
aad
andb
mov
stc
xor
sub
in
in
inc
rclb
imul
dec
je
lea
sar
jp
jae
push
push
cmp
pop
cs
jo
mov
mov
lock
movsl
mov
loopne
adc
jl
add
and
fs
sbb
cwtl
xor
and
cmp
fldl
push
fsubr
in
out
shl
rep
sahf
dec
pop
pop
xchg
mov
outsb
std
stos
jne
insb
pusha
imul
and
pop
xchg
sti
leave
and
fs
in
push
leave
mov
aaa
add
es
icebp
fsubrs
lret
push
rolb
pusha
out
mov
inc
les
cmc
stc
jnp
jae
jns
and
jmp
push
push
mov
push
adc
or
jmp
imul
pop
test
inc
test
cmp
nop
fsubrs
push
sbbl
or
xchg
or
js
fimuls
movsl
out
xor
cli
in
or
lcall
data16
inc
or
adc
iret
or
dec
enter
xor
std
cld
insl
mov
insb
cmp
mov
in
adc
pcmpgtd
add
pop
pop
push
cmpsl
or
movsl
dec
and
cmp
sbb
xlat
testl
mov
xchg
rcrb
xchg
xor
data16
mov
add
add
pop
dec
int
fstp
push
xor
fisubrl
cmp
outsl
cmp
jo
pop
loop
adc
out
stos
fistps
adc
js
adcb
pop
or
jmp
ret
pop
lds
in
jno
mov
jno
add
or
xor
xor
lock
push
jmp
adc
ja
xlat
pop
jno
mov
stos
mov
add
xchg
rorb
xchg
insb
or
and
int
fldt
cmp
cmc
mov
inc
and
mov
orb
inc
pop
gs
inc
rcrb
es
stos
push
daa
jbe
aas
mov
gs
ljmp
imul
pop
dec
mov
mov
sbb
in
ds
mov
imul
jge
add
cmp
je
xchg
add
sti
fwait
pushf
inc
mov
add
lods
js
shrb
addr16
nop
aas
std
mov
xchg
xorl
pop
jge
push
mov
iret
loopne
add
inc
les
jo
fcomp
dec
sarl
and
jg
aas
popf
test
push
loope
push
xchg
insb
cmp
or
sub
lods
mov
pop
inc
sub
xor
xor
stc
adc
sarb
cmp
mov
decb
test
pop
out
inc
dec
popf
or
sub
shlb
hlt
test
outsb
sub
bound
push
and
subl
jns
mov
lcall
loope
mov
dec
roll
add
or
jb
mov
mov
or
in
aam
repnz
loop
jae
add
jp
mov
fwait
scas
push
add
inc
stos
jnp
cmp
ljmp
sub
pushf
adc
movl
ret
pop
sbb
xchg
sbb
popf
push
xorl
add
idivb
mov
stos
pop
push
je
subb
sti
ret
fists
iret
lcall
jmp
inc
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
jns
clc
cmp
jle
push
jns
jle
shr
lods
inc
mov
or
ret
adc
pushf
ret
mov
push
dec
sbbl
sub
imul
push
fwait
int
mov
cmpsl
adc
add
xchg
mov
or
fsubl
or
lods
and
push
push
scas
pop
in
jne
icebp
sbb
push
sub
and
ja
xchg
and
adc
in
sbb
jne
and
push
push
data16
loop
sbb
sub
rol
mov
test
add
or
push
xchg
outsb
vpmadcswd
sub
dec
cmp
add
cld
push
sub
inc
mov
inc
rorl
adc
or
ds
inc
push
into
test
jmp
sbb
pop
test
push
lock
xchg
mov
xor
mov
je
jns
aas
xor
testl
xchg
ret
rolb
call
xor
popa
xchg
gs
cmpsb
int
sub
cltd
sub
outsb
fsub
cli
icebp
popf
fcomps
pushf
repz
jge
push
inc
lods
xor
mov
je
jge
outsb
cmp
cmpsb
add
aam
lods
in
lahf
repz
bound
jnp
xchg
fldt
sbb
jnp
xchg
out
out
add
cmp
push
cmp
lcall
in
mov
and
or
dec
shl
push
jo
out
pop
jns
adc
call
inc
and
xlat
in
std
push
or
aad
leave
pop
push
xor
hlt
pop
lret
jcxz
scas
outsb
stos
psubw
inc
mov
es
mov
aam
pop
fidivrl
or
out
mov
and
vmwrite
ja
add
sub
sbb
mov
lods
mov
test
stc
adc
push
jp
cmpsl
mov
popa
jge
mov
lcall
std
in
lea
lods
nop
or
leave
adc
fnstsw
mov
jb
roll
adc
fdivp
lods
in
adc
jo
pop
adc
fwait
push
xchg
fdivs
add
cmp
nop
hlt
push
mov
out
insl
cwtl
xlat
test
mov
jno
insl
daa
xor
int
in
fcmovb
sbb
xchg
jb
cmp
rorl
clc
sti
push
xor
inc
js
popf
into
lret
ljmp
std
out
mov
add
lds
decl
std
popa
mov
xchg
add
mov
cmp
rcrl
incl
and
xchg
dec
scas
inc
insb
test
inc
divl
adc
test
fisubs
jmp
into
ds
jmp
xor
stc
xchg
mov
inc
push
ss
fcmovnbe
and
sub
scas
mov
sub
in
dec
adc
pop
add
insb
xchg
xor
rclb
jae
aad
scas
or
xchg
lahf
mov
push
mov
andl
lret
test
and
jo
stos
daa
jns
jg
test
adc
sbb
push
adc
inc
std
mov
lahf
shl
push
das
dec
loop
adc
push
add
decl
jmp
push
stc
dec
loope
mov
js
xchg
add
in
jae
jne
add
sub
mov
mov
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
sbb
icebp
and
mov
sub
dec
mov
int3
jl
mov
sarl
stos
leave
xor
in
push
push
fimuls
or
out
mov
sub
stc
add
fdivl
mull
addr16
outsb
test
push
lods
xchg
mov
xchg
add
ds
test
jbe
int3
xor
dec
xor
ret
loopne
test
nop
inc
or
mov
bound
pop
aad
jo
leave
popl
push
cld
inc
ss
jecxz
pop
lahf
stos
fs
ljmp
mov
fdivrs
inc
sub
and
cld
ljmp
mov
stos
pusha
ja
rclb
cmp
xchg
leave
fstpt
shl
pop
fiaddl
pop
pop
nop
leave
mov
lock
add
repnz
or
sahf
pushf
aaa
mov
add
add
push
xor
sahf
dec
xchg
xor
inc
fildl
fidivrs
icebp
lahf
loopne
mov
pop
inc
add
pushl
xchg
mov
dec
fs
mov
cmp
dec
push
mov
icebp
fistps
push
in
shrl
dec
nop
cmpsb
mov
stc
adc
mov
dec
outsl
aad
lret
inc
pop
xor
pop
push
mov
and
xor
xor
dec
xor
imul
out
loop
dec
dec
into
cmc
jle
sub
js
push
jne
inc
in
xchg
and
push
lds
mov
jo
jg
sub
push
pop
jbe
xchg
mov
jae
sbb
fstp
dec
shll
push
mov
lds
fucom
sahf
push
nop
cmpsl
push
or
inc
sahf
dec
dec
into
ja
jns
pop
push
push
lock
and
lea
jno
imul
cmp
jecxz
cwtl
les
test
nop
mov
sti
das
popf
inc
fsubs
insb
jns
sti
mov
shll
adc
pop
ljmp
inc
dec
adc
jns
inc
adc
movsl
imul
stos
imul
in
mov
imul
test
enter
ds
aam
into
inc
das
rorl
ret
jmp
push
popa
in
cmp
outsb
aam
or
dec
pop
shll
lock
scas
cli
sbb
in
mov
int3
pop
push
mov
out
cltd
push
and
and
loop
ret
cld
int
dec
sahf
xor
pop
icebp
shll
lock
popf
outsb
fwait
call
imul
and
lcall
push
mov
and
push
outsl
dec
cmc
pop
movsl
clc
cmp
xor
cmc
ror
jmp
or
push
sbb
jo
decl
mov
int
mov
sub
and
xor
xor
fwait
mov
repz
mov
rorb
mov
cmpsl
dec
hlt
enter
scas
fwait
mov
mov
movsb
dec
shr
mov
xor
stc
mov
hlt
test
jno
mov
aas
mov
sbb
subb
and
inc
jg
jno
je
mov
push
testl
sub
mov
inc
jg
mov
cmc
mov
mov
sub
lahf
push
imul
shrb
add
sbb
outsl
addr16
addr16
fistl
test
adc
repz
pusha
test
cmp
roll
mov
mov
jmp
pop
ret
jge
insb
jae
test
ljmp
jle
jbe
push
cmp
imul
sbb
jl
jmp
repz
out
sbb
fsts
insl
fsubrl
cmp
jmp
imul
inc
dec
fisttpll
and
adcb
and
ret
xchg
jno
mov
repz
gs
mov
sbb
ja
mov
insl
imul
mov
xor
aam
mulb
jae
das
add
mov
repz
xchg
fcmovu
mov
sbb
adc
in
push
cmp
dec
push
leave
pop
lds
cmp
xchg
loopne
ljmp
ss
sarl
inc
jns
sahf
lret
or
notl
sbb
pop
sub
ficomps
adc
jbe
mov
sbb
ljmp
cs
pusha
adc
jl
mov
or
ljmp
movsb
shll
adcb
sub
inc
jl
sub
sub
fcoml
scas
mov
pop
bound
sub
movsb
cmpsl
loopne
out
movsb
shr
and
out
dec
dec
sti
pop
scas
clc
jge
decb
cli
mov
jb
inc
mov
push
in
dec
xchg
mov
repz
xlat
jnp
or
daa
mov
fldenv
pop
and
mov
push
iret
shrb
dec
out
out
cmp
std
mov
orb
cmp
gs
pop
inc
repnz
and
add
mov
inc
xor
cmp
mov
rclb
cmp
sti
lret
mov
mov
mov
cltd
or
fbld
and
insl
pop
clc
sbb
xchg
rol
jae
pop
add
arpl
xchg
ljmp
loop
lret
jge
rcll
xchg
cmc
rep
cmp
test
jg
adc
push
cli
adc
pop
cmp
mov
pop
ljmp
jb
es
adc
lcall
shll
and
inc
or
cs
dec
or
push
out
call
call
popf
aas
push
adc
mov
testl
addb
xor
enter
jne
jo
jl
andl
in
out
rcrb
jg
mov
add
movl
dec
lea
je
mov
movsb
or
mov
fstl
xor
mov
ja
mov
push
or
clc
push
jae
popa
xchg
mov
jno
pop
pop
add
xor
mov
mov
inc
jg
fbld
test
enter
pop
cwtl
out
mov
ljmp
or
mov
mov
out
loop
shrl
xor
sub
mov
push
sbb
cs
cltd
bound
pop
pusha
fisubl
xchg
test
cmp
cmc
rorl
scas
out
and
and
mov
rcl
mov
test
sarb
hlt
push
jp
test
jne
jle
sarb
nopl
test
mov
mov
inc
mov
or
cmp
cmpsl
dec
xchg
int3
in
adc
inc
xchg
inc
and
iret
into
push
mov
bound
stc
fildl
fld
and
and
pop
jl
and
jae,pt
add
insb
inc
das
mov
add
rep
add
std
movsb
popl
sbbl
shl
and
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
pop
push
cltd
jmp
push
jns
jle
adc
int3
lock
pop
mov
aam
fsubrs
pusha
stos
test
sub
rorb
bound
out
adc
gs
loope
mov
or
mov
outsb
scas
sub
int
cmp
push
cmp
call
mov
out
and
dec
in
cld
addr16
sub
in
repz
out
and
sbb
adc
fisubrl
and
jne
add
cmp
loopne
cld
sahf
test
mov
dec
adc
add
ds
pusha
sub
inc
pop
mov
fidivrl
outsb
jl
fsub
and
popf
lods
mov
fs
push
push
out
fwait
or
in
xchg
aas
push
in
cmpsl
lahf
sar
dec
idiv
out
push
mov
ja
xchg
ljmp
dec
pop
in
clc
data16
stos
imul
sub
mov
add
xchg
mov
xchg
cmp
fistps
in
pop
and
div
inc
push
mov
and
push
inc
sysret
popa
jae
mov
pop
rolb
pop
add
jg
fnstcw
cmp
loope
jb
bound
stc
mov
hlt
cmp
movsl
not
into
aaa
imul
sarl
daa
mov
shll
outsl
dec
xchg
pop
mov
sbb
sbb
cmpsb
jae
mov
repnz
xchg
cli
push
push
into
test
jmp
iret
imul
enter
hlt
int
enter
pop
xchg
ret
pop
imul
mov
addr16
push
mov
popf
xchg
mov
xchg
push
adc
aas
mov
lcall
pop
pop
stc
cmpsl
xchg
mov
pop
cli
adc
xchg
jne
pop
add
sub
cmp
je
in
insl
fdivl
add
adc
sti
flds
dec
ds
jg
jmp
xor
bound
test
jbe
out
cmp
cmp
bound
clc
adc
ds
test
mov
int3
jbe
or
sub
nop
mulb
ds
clc
pusha
fwait
les
sbb
mov
and
cmp
in
xor
cmp
repz
sbb
sbb
lcall
cmp
mov
lock
fistpl
jbe
inc
ficoms
lret
arpl
scas
mov
pop
add
push
fisubl
lds
sbb
pop
cmp
sub
movsl
addl
add
fbstp
in
test
xor
popf
je
mov
enter
pop
push
or
xor
push
pushf
or
scas
sbb
loope
push
loope
fs
cmp
xchg
and
mov
cmp
and
mov
stos
jne
lahf
scas
iret
dec
sahf
inc
mov
add
pop
hlt
push
mov
xchg
mul
and
mov
dec
outsb
ljmp
inc
sub
and
mov
adc
mov
insb
insl
xor
enter
or
jmp
push
pop
les
xor
mov
pop
pop
out
jmp
out
sub
and
dec
sarl
pop
xor
push
negb
and
add
sti
inc
mov
cwtl
and
inc
enter
inc
adc
lahf
mov
scas
mov
pop
lds
mov
lds
loope
loope
test
xlat
cwtl
lret
cs
clc
dec
mov
jecxz
sbb
popf
jge
mov
xchg
pop
jno
lock
or
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
xor
mov
ret
and
push
jns
jle
sub
or
mov
and
hlt
push
lock
aad
pop
imul
pop
fsub
repnz
stos
mov
mov
fnstcw
or
adc
imul
xor
shll
test
push
aaa
sub
jb
fistl
xchg
jbe
dec
sub
in
xor
cmp
ljmp
jne
cmp
jne
insl
mov
aas
jae
sub
cmp
bound
andb
xchg
push
cli
mov
xchg
jbe
lret
pop
in
xor
pop
sbb
lea
cwtl
imul
repnz
fcmovb
dec
scas
adc
testb
push
mov
insb
jo
enter
dec
loope
loopne
adc
dec
or
rcll
dec
aaa
push
push
mov
clc
or
pop
mov
jle
repz
test
std
in
or
push
shrb
inc
add
add
dec
aaa
dec
jo
mov
iret
aad
out
insb
repz
xchg
leave
mov
and
jp
int3
mov
jbe
in
popf
push
cmp
cwtl
dec
mov
aad
scas
cmpsb
pop
in
xor
out
fmuls
sbb
enter
push
sbb
rcl
daa
pushf
fs
adc
outsl
cmp
sub
shlb
lods
mov
inc
or
push
mov
int3
push
sub
out
lret
ret
xor
xchg
divl
insl
push
out
mov
enter
jae
inc
test
pop
lahf
ficoms
adc
and
mov
in
gs
pushf
inc
push
jno
xchg
push
pop
hlt
push
dec
fcomip
insb
fnsave
inc
call
and
clc
lcall
test
lret
sub
aaa
push
shrb
inc
pop
mov
loopne
repnz
dec
in
xchg
xchg
xchg
cmp
mov
shll
rcll
pop
movl
pusha
inc
out
repz
mov
xor
lea
xor
lods
push
dec
jno
dec
iret
sbb
mov
cmp
inc
lock
lods
inc
xchg
in
fucomp
xor
push
mov
mov
insb
in
pop
push
push
cli
mov
dec
dec
repnz
jp
inc
jl
xchg
xor
mov
and
rorb
xchg
xchg
push
cli
pop
lcall
or
idivb
mov
push
fnstsw
mov
cmp
xchg
push
fwait
and
pop
clc
test
aas
sub
es
pusha
jne
cmp
add
mov
cs
sub
mov
sub
fistpl
dec
fwait
jle
arpl
pop
sub
dec
push
in
repz
imul
cmpsl
mov
dec
aaa
add
gs
adc
cmpps
and
mov
sub
or
stc
xchg
adc
pop
mov
add
or
inc
scas
aas
in
cld
out
lock
cld
pop
mov
xchg
cmpb
icebp
rcrb
adc
xchg
call
mov
xchg
fsubp
push
jecxz
cmp
mov
inc
mov
cltd
pop
dec
push
mov
cld
pop
push
adc
or
and
push
cmp
sub
jo
add
out
push
push
stos
je
aad
and
hlt
es
mov
pop
mov
andl
mov
mov
cmp
xor
scas
xlat
mov
ja
inc
and
cmp
mov
add
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
insb
dec
push
sbb
jle
pop
jg
jle
into
dec
lret
aaa
and
outsl
dec
add
nop
mov
fstpl
call
xchg
aam
loop
adc
jae
dec
jne
lock
pop
pop
fcomps
insl
out
and
aas
pop
pop
aas
mov
pop
cmc
mov
into
scas
xchg
cmp
or
shrl
aam
push
sub
lods
aad
rol
icebp
cmp
repz
jmp
stos
into
inc
xchg
mov
cmp
mov
std
cs
mov
fistps
repz
mov
xchg
sub
bnd
sbb
outsb
arpl
jge
sub
jg
push
jmp
test
sbb
and
test
test
or
stos
or
mov
loope
push
mov
jae
mov
fwait
jnp
push
adc
push
sahf
cmp
xchg
daa
push
mov
cmp
in
idiv
jae
loop
mov
and
push
dec
cwtl
repnz
or
jecxz
or
stos
test
cmp
and
sbb
movsb
jmp
xor
jns
aas
and
les
aad
sub
test
scas
inc
add
sub
in
push
ljmp
cmp
test
or
cwtl
inc
std
repz
mov
lock
and
ret
inc
lea
aam
mov
out
mov
jne
xor
push
cmp
xchg
jo
cmpsb
xchg
bound
loope
adc
les
jge
stc
mov
add
fistpl
or
xchg
adc
xlat
mov
adc
dec
mov
or
aam
or
sub
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
arpl
ds
jnp
jle
pop
jg
jle
ja
in
bound
out
movsl
xchg
int3
pop
testl
mov
mov
in
cmp
call
andb
out
adc
xchg
in
bound
sub
sbb
xlat
es
inc
xchg
mov
stos
ljmp
mov
dec
cmc
sub
xchg
ds
cmp
inc
cmpsl
sbb
sub
jne
enter
xlat
and
ret
repnz
stos
mov
add
xchg
pop
pop
add
es
inc
repnz
or
push
xor
sub
add
dec
xor
sbb
jl
cmpsl
sub
loope
xchg
addr16
mov
add
je
clc
pop
push
cmp
inc
push
stos
inc
cmp
sbb
lcall
pop
sub
cs
ljmp
lret
cmc
jle
or
outsb
stos
rorl
into
addr16
rcll
xor
popa
mov
mov
and
int3
cmp
push
mov
sbb
stc
lea
mov
adc
lods
cltd
jg
push
fwait
xlat
jge
sub
xor
mov
push
lock
adc
jbe
mov
mov
loopne
ljmp
sbb
and
push
idiv
add
in
push
sub
sbb
movsl
or
int3
and
dec
mov
data16
dec
pusha
out
movsw
aam
sbb
sarb
mov
ret
sub
xorb
adc
or
jmp
jns
jg
and
xlat
ljmp
pop
pop
dec
push
sbb
mov
jle
adc
cmp
test
cmp
xlat
or
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
loope
sub
les
jle
insl
scas
mov
mov
mov
mov
mov
neg
inc
mov
mov
or
insl
arpl
xchg
call
jno
sahf
add
test
cmpsl
push
xor
arpl
and
inc
clc
cmp
mov
mov
rcll
pop
fbstp
imul
inc
jnp,pt
in
lods
aaa
and
sbb
mov
sub
test
mov
fstps
arpl
xchg
std
add
dec
test
xchg
scas
dec
rorl
insb
test
jno
fcomi
stc
jmp
mov
popf
mov
std
inc
ret
xchg
int3
jbe
mov
mov
into
daa
jle
fs
faddl
es
je
push
repz
popf
out
inc
mov
in
loopne
outsb
fistpl
lahf
and
popf
outsl
dec
jns
and
and
ret
aas
or
bound
push
push
cmpsl
inc
dec
rol
cwtl
loope
test
shll
mov
mov
cmp
cltd
loopne
js
or
push
fwait
cmp
push
hlt
xchg
xor
fildll
nop
mov
sbb
in
movsb
xchg
adc
mov
repz
loopne
loope
xor
xchg
cmpsb
dec
in
push
jbe
sub
dec
int
not
les
insl
xor
clc
cltd
jno
fcomp
pop
add
sbb
sub
cmp
mov
shl
popl
dec
in
int
ret
sub
lret
lret
inc
fisttpl
pop
jo
dec
jb
lock
aam
lcall
xchg
sub
or
cmpsb
out
fs
in
mov
or
out
xchg
jge
push
or
movb
test
push
loopne
mov
test
or
lods
fnsave
push
jecxz
cmp
pop
iret
adc
into
inc
icebp
dec
xor
imul
test
mov
mov
hlt
and
and
mov
ja
ret
inc
push
sbb
lahf
mov
scas
mov
cmp
adc
add
xchg
pushf
dec
add
mov
lods
mov
aaa
aaa
cli
adc
mov
sub
fnstsw
adcw
jo
pop
cmc
mov
mov
sub
mov
hlt
les
add
or
cwtl
mov
lods
jg
addb
movl
and
insb
mov
ss
sub
inc
loopne
lods
je
jle
cmc
jp
call
das
mov
imulb
les
sub
out
xchg
add
pop
ljmp
repnz
cli
es
jg
in
fbld
and
push
loop
addl
push
jnp
dec
mov
add
sub
add
lods
sarl
mov
jne
adc
xlat
movsl
or
dec
push
jb
dec
iret
je
testl
mov
stos
mov
test
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
mov
jle
jns
jle
test
sub
out
dec
push
mov
xchg
or
xlat
push
and
das
cmp
decb
or
mov
jle
repz
adc
cmpsl
repz
jbe
es
xchg
das
in
pop
in
sbb
xchg
stos
insb
jmp
pop
jno
or
stc
xchg
outsl
stos
xchg
xchg
sub
std
in
xlat
jb
sub
mov
jge
hlt
inc
in
pusha
sarl
call
movb
sbb
dec
and
cmp
outsl
pop
push
mov
mov
pop
test
loopne
xchg
push
push
test
in
pop
xchg
and
xchg
add
push
jecxz
aad
out
cltd
pusha
into
lret
xor
rorl
aad
sub
cli
xor
or
push
pop
and
add
push
clc
xchg
sbb
jle
sbb
inc
out
xchg
addr16
mov
gs
pop
pop
xor
mov
add
mov
andb
xor
aaa
xchg
xor
addl
test
bound
pop
xchg
ficompl
push
mov
rorb
mov
mov
or
mov
addr16
punpckhbw
stos
push
dec
pop
out
shrl
loopne
mov
and
cmp
push
fnstcw
pushf
lea
mov
out
inc
ja
ret
xchg
aas
lock
int
cmp
repz
idivb
pop
popf
xor
mov
cld
and
in
dec
push
mov
push
mov
out
stos
loope
mov
jmp
xor
insl
sub
cmp
mov
sbb
negl
ljmp
stos
rorb
inc
mov
popf
push
sbb
in
jb
ret
pop
int3
dec
jecxz
scas
lcall
fisttpll
rolb
scas
rol
in
rclb
movsb
in
aas
test
cmp
test
xchg
lds
data16
sub
dec
iret
pusha
stos
lcall
mov
cltd
ss
jl
cmp
mov
adc
scas
das
mov
push
outsl
jecxz
jo
mov
andl
dec
jmp
pop
and
mov
add
or
cmp
or
iret
scas
movsb
xor
scas
lods
enter
mov
int
in
dec
clc
cmp
add
and
mov
imul
decb
dec
rorl
repnz
and
imul
push
test
sbb
sbb
test
fisttpll
ss
aad
xorb
mov
sub
test
in
jl
add
movsl
test
sub
cmpsb
mov
dec
out
rcrb
inc
adc
popf
jne
fidivl
dec
pop
adc
and
and
rcl
clc
cmpsb
je
movsl
cmp
and
cmp
xchg
iret
dec
mov
insb
ljmp
sbb
push
or
and
mov
in
or
inc
clc
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
xchg
pop
sbb
out
xor
les
jle
mov
into
shrl
js
mov
ret
xchg
stos
imull
nop
out
insb
test
sub
fwait
mov
aas
aad
mov
mov
sbb
stos
lret
sub
push
jle
or
dec
ror
xchg
jnp
push
sbb
adc
xor
pusha
fs
xor
xor
dec
xchg
xor
mov
das
data16
xor
xor
sub
mov
sub
je
hlt
push
add
jb
dec
out
pop
je
fistpll
inc
mov
loop
mov
fs
fidivs
les
push
push
mov
push
mov
dec
in
test
fcompl
adc
test
clc
and
std
bound
cltd
jns
push
cwtl
sbb
inc
mov
xchg
cmpsl
cmp
mov
jo
pop
jne
out
jns
je
pop
push
sbb
push
mov
into
mov
lret
or
arpl
scas
mov
shl
xchg
dec
leave
pop
mov
or
lea
lcall
fidivl
inc
into
jecxz
in
imul
jo
js
sbb
adc
dec
jae
add
data16
cmp
xor
push
fidivrs
cmp
scas
adc
inc
xadd
icebp
fs
icebp
ljmp
mov
stos
fcmove
jmp
lret
mov
jge
mov
dec
mov
stc
nopl
inc
mov
sarb
testb
imul
jmp
pop
gs
jb
mov
lret
pop
jl
nop
repz
mov
push
jb
sub
xchg
lret
stos
sub
mov
in
xor
mov
jo
sub
and
lds
jbe
cmp
lds
push
stos
fldt
dec
xchg
lcall
jecxz
rorl
adcl
repnz
xchg
mov
mov
shrl
add
mov
push
mov
ljmp
mov
loop
add
add
pop
movsl
out
addr16
xchg
fdivrl
jno
pop
ret
scas
xor
jnp
sub
inc
push
push
xor
data16
add
je
pushf
movsl
pop
or
out
or
mov
or
add
sbb
lods
xlat
out
lahf
or
fbstp
cmp
sahf
pusha
iret
call
daa
dec
lea
mov
xor
jo
flds
sub
inc
push
in
fdivs
stos
mov
aad
dec
lock
pop
aam
sbb
dec
and
xor
outsl
sub
jp
add
icebp
ret
push
add
imull
dec
lods
dec
pop
push
popf
pop
je
mov
icebp
and
xor
lock
pushl
xchg
jne
mov
and
aam
and
outsb
xchg
cmc
dec
adc
or
lret
popa
mov
leave
nop
cmp
pop
loope
iret
jb
cmp
add
fdivr
push
add
test
sbb
adc
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
bsr
jns
jle
jp
pushl
outsl
int3
sub
nop
ror
jg
clc
or
lret
imul
aaa
mov
xchg
or
pop
lods
cmp
mov
lret
or
cld
mov
pop
or
mov
dec
in
dec
push
or
xchg
and
outsl
in
decb
ja
cmpsb
add
xchg
jno
inc
movsl
int3
leave
insb
ret
xchg
inc
fnsave
pop
xchg
cmc
dec
aaa
mov
shlb
test
pop
test
xor
fisubs
inc
jnp
dec
push
sub
lret
mov
pop
cli
iret
int
femms
jge
data16
loopne
movsb
ds
xchg
out
dec
mov
inc
fidivs
jecxz
lock
mov
jnp
mov
test
daa
movsl
and
xor
popa
js
jmp
pop
int
xor
mov
test
adc
push
rcll
hlt
subl
and
xor
xor
jge
test
xchg
sarb
lods
cmp
jb
movsl
lods
imul
sub
add
scas
lret
ja
test
loope
xor
fdivrp
jp
lahf
push
mov
arpl
sub
je
cmp
in
out
push
and
and
nop
adc
cmp
sbbb
ret
cmp
jb
and
fidivs
outsl
idivl
and
mov
mov
fsubrp
adc
push
cld
cmpsb
and
sbb
in
dec
inc
add
or
fiadds
mov
ret
sbb
cltd
push
cmp
and
or
fstl
hlt
adc
cmp
dec
sahf
sub
daa
mov
sub
xor
mov
mov
mov
daa
loope
adc
clc
push
movsl
ds
andl
dec
add
push
push
pmuludq
aad
fs
les
adc
pop
cmp
mov
mov
neg
rorl
notl
test
enter
out
pop
iret
adc
or
jb
mov
mov
xor
add
xchg
sub
jmp
movb
push
mov
insb
mov
jl
cmpsl
rcr
jb
sub
sti
mov
push
add
cld
lds
mov
xorb
adc
lea
adc
nop
lock
aam
sbb
test
dec
bnd
daa
adc
mov
mov
mov
scas
and
add
xor
leave
xchg
in
jno
insb
nop
inc
popa
hlt
stc
xchg
call
ret
sbb
inc
mov
loop
mov
fcomps
pop
lcall
inc
push
xor
lret
aam
fmull
scas
outsl
cmc
cmpsb
xor
repz
aas
push
das
mov
out
pop
adc
repnz
lahf
mov
js
and
and
subb
jg
cmp
adc
push
fdivrs
sub
mov
fistpl
adc
xchg
faddl
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
shll
jle
dec
jns
jle
arpl
push
mov
repz
out
xchg
repz
nop
mov
sub
and
scas
scas
stos
cmc
push
adc
out
dec
test
into
and
lods
and
mov
lock
in
movsb
dec
sub
ret
xchg
in
jae
shlb
fs
add
incb
sarl
pop
jmp
fwait
cmpsl
adc
or
cmpl
into
clc
inc
movups
adc
call
dec
shrb
xor
xor
aas
or
hlt
out
rclb
mov
outsl
test
push
push
or
aas
repnz
pop
lds
push
lcall
jmp
mov
dec
cmpl
and
pop
mov
xor
xor
enter
inc
les
scas
shrw
adc
xchg
push
lahf
mov
js
dec
add
push
mov
fldlg2
repz
adc
push
sbb
les
mov
xchg
jp
mov
inc
icebp
dec
add
xlat
sub
loop
inc
outsl
dec
pusha
aam
in
dec
ret
testb
jecxz
movsb
xchg
ret
in
sub
push
out
in
cmpsl
xor
sub
sti
cs
add
jb
xor
sub
sarb
jb
into
js
fwait
arpl
cwtl
jb
out
outsb
rcll
in
jne
lods
shlw
ss
stos
push
mov
xchg
xchg
sbbb
mov
pop
and
xchg
scas
mov
daa
sahf
jle
mov
idivl
pop
cmp
mov
repnz
rcll
fucom
sub
movsb
pop
xchg
pushf
cmpl
jmp
inc
inc
dec
cwtl
add
jecxz
cmp
and
loop
and
adc
and
mov
data16
push
lahf
mov
add
imul
add
sub
es
mov
push
fcmovne
popf
aam
cmp
pop
test
inc
cmp
test
test
dec
dec
xor
mov
sbb
or
inc
andb
lahf
xor
sub
adc
lret
popa
stc
arpl
cmp
dec
dec
int
jno
lock
jbe
sub
sub
xchg
mov
scas
inc
lahf
dec
insb
dec
ds
nop
repnz
push
xchg
imul
fwait
mov
sbb
insb
arpl
fstp
adc
fsubl
cmp
ds
cmp
xchg
sub
outsl
pop
movsl
stos
xchg
popf
dec
or
enter
subps
mov
dec
jae
pop
lret
mov
mov
hlt
and
and
sub
lds
jg
push
jp
loop
outsl
std
xchg
mov
pop
or
cmc
jl
sbb
nop
add
aas
pop
icebp
mov
inc
jns
xchg
mov
test
cmp
stc
rcll
cmp
xor
mov
or
mov
and
jae
inc
lds
pop
call
add
ja
inc
dec
and
icebp
cmovle
xchg
sub
sub
jg
inc
imul
push
test
xor
pop
cld
ss
adc
push
ret
fiaddl
jbe
pop
mov
push
int3
pop
adc
xchg
adc
pop
insl
pusha
dec
add
bound
add
inc
lds
or
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
push
out
outsl
dec
cmp
dec
jns
jle
mov
dec
xchg
leave
pushf
mov
fstps
enter
ljmp
jmp
cmp
dec
sub
cmp
insb
ljmp
sbb
leave
mov
stc
stos
xchg
xlat
out
fildll
inc
lahf
mov
and
sarl
lock
lcall
sbb
dec
fisubl
cmc
rcll
les
mov
pushf
mov
cli
add
sbb
push
iret
movsb
ja
fisttpll
sub
mov
mov
xchg
les
lcall
jb
lea
dec
jae
mov
mov
dec
cmpb
lahf
mov
cli
add
push
rcrb
fidivrl
iret
sahf
loope
jne
sub
cmp
push
jg
pop
movsl
jne
fldenv
je
add
loope
call
push
pop
or
push
testb
adc
inc
hlt
sub
pusha
dec
aas
mov
test
test
and
push
sarb
and
add
lcall
add
bound
stos
inc
cmp
push
cli
xchg
loope
negl
dec
and
xor
jge
pop
inc
and
inc
jbe
mov
pushw
fcoms
mov
inc
xchg
xchg
mov
add
fwait
ret
mov
fcomi
mov
cmpsl
ss
dec
jnp
adc
clc
and
loop
xchg
mov
jg
sub
loopne
popa
in
add
out
sahf
jge
ss
dec
mov
or
xor
mov
pop
xchg
fdivs
mov
sarb
icebp
or
scas
or
cli
ret
and
add
nop
lock
dec
sub
dec
in
xchg
fnstenv
data16
filds
call
xchg
cmpsb
aaa
cmp
repnz
jmp
adc
out
cmp
cmpsb
cmp
insl
push
fiadds
jl
push
or
cli
sbb
mov
imul
sub
mov
push
dec
fsubl
mov
data16
mov
call
adc
fstl
jp
loopne
and
aam
mov
dec
fwait
and
lods
cs
dec
dec
test
movsb
in
pop
outsl
sahf
xchg
data16
and
push
cmpsb
es
aam
xor
mov
test
cmp
test
lock
jo
push
fistl
aad
mov
sbb
shrb
dec
pop
push
mov
mov
fiaddl
popf
stc
add
nop
adc
inc
and
test
pop
jg
cld
and
jle
lahf
push
xchg
and
mov
fwait
ljmp
push
addr16
in
mov
sbb
stc
dec
adc
lods
and
aad
xchg
in
xchg
out
sub
icebp
inc
mov
loope
lods
out
mov
xchg
lcall
ljmp
inc
and
enter
aas
xchg
imul
mov
mov
xchg
xchg
mov
arpl
es
mov
pop
into
aas
std
test
daa
xor
test
pop
stos
xor
add
imul
inc
xorl
xlat
xor
and
incl
pop
sub
xchg
les
imul
movsb
inc
add
mov
mov
xor
scas
scas
xchg
mov
inc
ja
pop
mov
sahf
nop
icebp
in
in
xor
stc
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
jbe
jle
dec
jns
jle
mov
scas
sub
faddl
pusha
mov
and
pop
dec
enter
popf
aad
pop
mov
jle
ja
sub
xchg
jbe
inc
loop
bnd
loop
mov
nop
stos
mov
sub
pop
orl
cltd
cmpsl
mov
ds
jecxz
movsl
xlat
mov
inc
cmpsl
pop
push
or
add
dec
xchg
pop
fwait
movsl
and
icebp
or
push
xlat
in
or
mov
xchg
icebp
cmp
push
bound
mov
fstpt
jp
insb
daa
ret
mov
ret
les
xor
enter
xchg
por
mov
in
sub
jb
nop
cld
shll
out
out
pop
xor
test
lret
fs
or
scas
insl
sub
cmp
addr16
lahf
mov
xor
cmpsl
movsl
mov
add
inc
pop
std
xchg
fldl
or
loop
xor
sbb
add
out
jmp
push
add
mov
sub
dec
dec
stc
dec
es
sub
repnz
rcll
push
fnstenv
movsl
xor
pop
sbb
fists
jge
subl
add
mov
mov
mov
fcmovnb
movsl
sti
lahf
pop
daa
test
mov
fiadds
mov
mov
or
popf
jne
adc
and
push
dec
mov
push
fldcw
mov
mov
imul
aad
les
mov
dec
icebp
xor
ljmp
hlt
decb
movsb
lock
push
or
xchg
lret
xor
andb
adc
sub
lret
lods
mov
je
xor
mov
push
push
adc
add
iret
popl
iret
imull
jmp
xor
scas
pop
sub
movsb
push
inc
mov
cmp
xlat
imul
inc
addl
mov
mov
iret
pop
int
testl
xchg
pop
mov
push
and
xchg
cmc
je
inc
add
mov
cmp
sahf
movsb
mov
xlat
and
outsb
popa
jae
adc
adc
fiadds
adc
mov
popf
cltd
dec
add
mov
or
jmp
jo
inc
adc
cmp
fists
arpl
rcl
mov
cmp
dec
push
xor
or
pop
ret
dec
sbb
sahf
xchg
je
mov
sbb
jbe
test
dec
movsb
add
mov
dec
shlb
pop
arpl
fdivr
dec
scas
stos
pop
adc
movsl
add
mov
inc
mov
adc
dec
int
lahf
repnz
scas
xor
sub
xchg
push
jmp
dec
or
jecxz
mov
jmp
loop
mov
ljmp
repz
xor
adc
ds
fmull
nop
and
mov
arpl
dec
push
lock
pop
or
lods
and
shr
push
jmp
sbb
arpl
cmp
inc
cmp
dec
pop
movups
shll
aad
sbb
sbbl
lods
jmp
inc
fsubrl
mov
les
pop
fstpl
fs
cmpsb
cwtl
xchg
or
xchg
pop
pop
hlt
mov
inc
outsl
push
fwait
and
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
sbb
ljmp
jmp
pop
mov
fidivrl
push
lret
inc
popa
rolb
loop
jecxz
mov
pop
or
lds
xchg
shlb
outsl
sahf
in
and
push
lods
or
jnp
les
cmp
cld
mov
xchg
xor
inc
inc
clc
and
mov
repnz
icebp
inc
add
addb
jl
rclb
inc
mov
sbb
adc
stos
sbb
mov
bnd
add
es
pop
daa
out
jmp
inc
dec
lret
outsl
outsb
mov
js
lcall
and
sbb
in
dec
mov
das
pop
addr16
add
and
mov
sbb
mov
arpl
dec
push
sub
test
sahf
xor
movsl
sub
or
sbb
lods
mov
or
cmpsl
mov
pop
shr
sbb
clc
shlb
and
sahf
adc
dec
cltd
out
mov
jl
or
add
push
call
jl
inc
inc
test
mov
add
jle
rcll
jmp
mov
cmpb
push
insl
insl
mov
dec
shrb
push
xchg
out
inc
lret
or
xor
mov
mov
loope
data16
popa
ljmp
out
inc
dec
xor
xchg
adc
mov
inc
fs
push
dec
jle
push
pop
sti
out
arpl
call
jno
out
lret
inc
mov
and
subl
xor
mov
movsl
bound
mov
fmull
xchg
or
cmpsl
or
jl
bound
inc
stos
into
xchg
xchg
bound
inc
sbb
cmp
iret
popa
and
cwtl
inc
lea
out
xchg
push
sub
jp
push
in
inc
and
mov
sti
test
mov
notl
sbb
pusha
js
aad
idivb
icebp
aad
ret
mov
mov
out
xchg
cmp
loop
popa
stc
cmp
or
repz
xchg
sti
sbb
fwait
loopne
fisubl
ret
pop
pop
cli
or
mov
inc
mov
out
push
mov
xchg
ficompl
push
loopne
sub
cld
scas
lcall
jp
pop
roll
bnd
leave
in
or
testb
dec
mov
mov
mov
mov
xor
push
jl
in
lods
sbb
xchg
lock
mov
dec
test
jno
cmpsl
testb
rcr
jae
lds
jp
xor
or
cmp
jnp
nop
ficompl
push
xor
addr16
mov
add
insb
sbb
testb
mov
cmp
pop
xchg
mov
add
inc
xchg
fdivrl
cmp
xchg
sbb
sbbb
inc
test
inc
sbb
mov
inc
insl
inc
mov
imul
and
js
enter
sarl
push
lods
out
lea
pusha
xor
mov
xchg
dec
lret
mov
pop
loope
fucomip
xchg
adc
stc
mov
ljmp
xchg
mov
and
dec
subb
ljmp
sbb
test
imul
iret
inc
jns
fldenv
cmp
add
add
scas
adc
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
loope
daa
aas
iret
jle
dec
jns
jle
or
data16
sbb
fisttpl
mov
adc
cmp
dec
adc
jbe
lcall
bound
mov
add
int
hlt
sbb
hlt
jge
adc
lds
pop
aas
cmp
popa
aad
add
jp
cwtl
xor
hlt
repnz
faddl
aam
fwait
stc
ds
xor
jmp
sbb
mov
sbb
mov
add
cmp
or
into
jg
or
xchg
cmc
call
sti
xchg
repz
mov
out
lods
fisubrs
mov
bound
ljmp
mov
or
bound
decb
inc
xor
xchg
inc
sub
arpl
dec
call
mov
lods
fiaddl
mov
xor
push
pop
test
jbe
lea
sbb
jae
inc
pop
faddp
in
lods
gs
cmp
in
loope
xchg
mov
iret
push
push
out
adc
jbe
inc
add
into
mov
call
shrl
mov
shrb
push
inc
loopne
movsl
or
jecxz
pop
in
push
jnp
mov
add
add
movsb
out
push
cwtl
inc
xchg
or
js
out
jg
and
loop
out
outsb
dec
push
add
lahf
adc
shl
lea
or
fistpll
in
insb
lcall
in
dec
cmp
iret
mov
adc
insb
dec
sbbl
loope
inc
sub
insl
loop
xor
inc
dec
mov
ja
xor
sbb
les
pop
xchg
adc
push
shrl
dec
std
repnz
sti
int3
sbb
jno
dec
mov
or
cmp
sub
sub
outsb
fadd
ret
cltd
pop
push
xchg
inc
push
aaa
lds
loope
aam
push
cli
out
xlat
cmp
add
mov
dec
sbb
xchg
jo
cld
xor
andl
push
dec
wbinvd
jge
test
sbb
lcall
xor
in
inc
cmp
xchg
fdivs
mov
sub
in
pop
sbb
mov
cld
rcrb
xchg
imul
gs
stos
mov
xor
cmp
clc
sub
sbb
pop
and
mov
inc
xor
daa
pushf
or
or
rol
dec
sbbb
dec
outsb
sti
and
xchg
pusha
mov
add
pop
cmp
addr16
mov
ljmp
je
jo
pop
outsl
push
outsb
mov
fimull
ret
movsl
add
lret
rorl
fstpt
sbb
pushf
dec
push
inc
outsb
add
imulb
mov
call
imul
outsl
aas
out
inc
sbb
pop
iret
popf
ret
mov
pop
into
popl
mov
fwait
dec
leave
leave
scas
imul
mov
test
test
lds
cmp
test
pop
mov
mov
sahf
ss
clc
int3
orb
adc
mov
js
mov
fsubl
stos
lret
fstps
jno
data16
inc
fidivs
psubsb
xchg
je
and
in
icebp
push
inc
bound
xchg
rcr
nop
dec
cmc
inc
int3
outsb
mov
sti
aad
cmp
mov
out
loopne
sub
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
cmp
fdivs
push
out
push
rolb
mov
mov
testb
popa
inc
in
mov
sbb
cmpsl
cld
ret
or
xor
push
lods
sub
cmp
and
lds
and
mov
rcrb
lea
outsb
xor
stos
icebp
test
sti
iret
push
jl
push
ret
imul
add
jnp
mov
jp
movsb
jne
ds
push
pop
negl
mov
sbb
inc
ds
cs
sahf
and
and
mov
cmp
xor
in
xchg
xlat
mov
gs
jno
push
outsl
sub
out
popf
nop
jg
push
mov
cmp
lcall
arpl
icebp
dec
or
mov
and
adc
xchg
adc
mov
inc
jns
and
adc
mov
xchg
lds
fwait
or
ds
adc
gs
or
adc
insl
mov
inc
fsub
ret
cli
mov
cli
lcall
popa
push
mov
push
daa
cltd
lods
push
jae
scas
add
push
adc
test
jne
cs
xor
jmp
movups
aad
xlat
jbe
pop
fldl
mov
add
lahf
mov
mov
sbb
pop
in
cmpsb
in
add
sbb
std
int
stos
add
mov
sub
dec
jmp
aaa
sbb
jge
pushf
aad
shrb
xchg
cld
xor
daa
jmp
aaa
mov
enter
xor
sti
clc
pop
mov
test
xchg
mov
data16
stos
fcmovbe
push
in
mov
inc
xchg
fdivrp
sub
or
pop
lret
mov
bound
jle
xor
push
jp
movsl
fwait
cmp
or
dec
add
je
inc
into
jb
sti
cli
jnp
popf
inc
fidivrs
aad
jns
fadd
adc
outsb
lds
xchg
pop
addr16
stos
cmp
push
fidivrs
sub
mov
jne
pop
fs
mov
fld
adc
fmull
lret
xor
shl
shrl
scas
sbb
fisubl
xor
xlat
mov
aad
arpl
or
scas
sub
add
mov
pop
mov
sub
outsb
negb
fcom
fucomp
xchg
or
int3
cld
sub
lods
cld
sub
sbb
je
lds
add
sbb
ds
inc
pop
mov
out
lods
movsb
addr16
add
xchg
out
lahf
inc
fsubp
mov
andb
imul
sbbl
pop
ret
shlb
xchg
push
or
xchg
xor
push
push
xchg
sbb
cmpsl
push
inc
dec
push
and
nop
lahf
pop
cmpsl
aad
out
paddusw
fistl
lds
add
mov
push
jge
out
xchg
push
cmp
lods
pop
xchg
test
mov
pop
add
fcoms
repnz
lret
ret
jns
and
add
jle
daa
and
addr16
mov
jbe
adc
jmp
jae
mov
test
xchg
das
adc
pop
mov
pop
sahf
fs
cwtl
and
rolb
push
xlat
pop
cmp
aas
xchg
mov
dec
dec
push
int
jne
jb
mov
push
jecxz
or
outsl
fwait
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
imul
jle
dec
jns
jle
test
mov
inc
cmpsl
pop
out
in
nop
or
repz
test
outsb
jbe
fsubp
pop
adc
mov
xchg
iret
imul
mov
scas
xlat
push
push
push
mov
gs
jnp
scas
xchg
aam
cwtl
mov
cmp
insb
mov
inc
fildll
push
mov
pshufw
add
pop
push
fidivl
add
add
daa
daa
popl
sbb
je
xchg
comiss
add
jb
jge
or
adc
and
mov
call
aaa
or
out
cs
insl
mov
push
dec
pop
repnz
addl
hlt
xor
shl
or
jb
mov
jge
push
mov
pop
mov
mov
pop
or
sbb
sub
in
out
pop
adc
shlb
cs
fstpl
or
iret
addr16
pop
adc
mov
pop
xchg
addr16
sbb
pop
outsb
mov
test
stos
or
lods
es
pop
and
push
sahf
cltd
sbb
mov
or
rol
xchg
xor
cmp
adc
fldt
or
cmp
push
mov
fbld
sahf
mov
fcompl
loop
push
sbb
addr16
rolb
test
sbb
sbb
hlt
lret
shlb
jl
aas
outsl
adc
dec
adc
sub
sti
pop
inc
mov
jg
imul
lock
lock
orl
jle
ds
daa
mov
mov
mov
jg
out
add
sub
mov
cli
mov
sub
jno
mov
lahf
jl
nop
or
insl
ret
lock
adc
fistpl
push
cld
mov
iret
sahf
cmpsb
ss
xchg
mov
outsl
xlat
adc
cmp
faddl
xor
cmp
cmpsl
mov
inc
sub
imul
jnp
pop
loop
push
mov
mov
mov
stos
shrl
inc
push
dec
fwait
ds
std
adcl
xor
rol
ret
mov
cmpsb
push
lcall
xchg
in
repz
cmc
xor
stos
orl
fcoml
xchg
cs
xor
mov
and
outsl
push
mov
jbe
xchg
add
jmp
jl
push
xchg
sub
pop
adc
jb,pt
in
xor
mov
and
lods
das
int
sub
sub
mov
fstps
es
idiv
jmp
or
and
jbe
sbb
pop
addr16
nop
xor
inc
sub
jge
scas
outsl
movsb
xchg
or
rcrb
loop
mov
jmp
nop
mov
ss
cmp
shrb
xchg
sub
fistpll
pop
jb
mov
mov
or
out
aad
fld1
loopne
jmp
sub
rcr
pop
cld
in
jne
jnp
push
mov
std
call
fdivs
fldl
add
lea
rep
or
xor
daa
lret
push
pop
rolb
and
fidivrl
cs
inc
ds
inc
sbb
xor
fbld
push
cmp
pop
bound
cmp
mov
out
mov
imul
push
pop
push
dec
sbb
ds
mov
out
incb
aaa
mov
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
inc
sub
stos
sarb
dec
jns
jle
sahf
mov
jmp
mov
fcmovnu
mov
and
fldenv
enter
xorl
cli
in
and
outsb
xchg
pusha
test
imul
test
adc
popa
bound
shl
adc
loopne
xchg
out
movsl
inc
dec
out
push
lret
aaa
shlb
fidivrl
shrb
hlt
xchg
out
rcll
and
insl
loopne
stos
adc
xor
pop
jp
pop
adc
insl
scas
mov
data16
jno
inc
lret
inc
inc
pop
orl
lret
addr16
fsub
cmp
aad
xor
icebp
insl
mov
mov
setp
sbb
test
stc
cld
test
push
stos
mov
notb
js
pop
dec
xchg
mov
adc
pop
mov
cmp
xor
ljmp
leave
mov
stos
xor
pop
sub
sbb
push
xor
mov
scas
xchg
or
mov
lods
out
xchg
add
cmc
or
jge
adc
sbb
mov
sbb
inc
mov
push
stos
xchg
sbb
push
push
sbb
xchg
push
negl
aaa
aas
xchg
popa
std
add
jbe
adc
imul
aad
js
sub
aad
jnp
frstor
or
fldl
sbb
js
inc
jns
dec
hlt
fadds
cmp
mov
rol
cmpsl
xchg
xchg
cmpsb
pop
movsl
add
xor
lods
xorb
mov
dec
lods
inc
popf
push
pop
inc
mov
mov
sbb
xor
icebp
cmp
jg
inc
mov
pushf
daa
add
fcompl
mov
sbb
mov
adc
cmc
sbb
out
fstps
adcb
mov
lcall
jl
and
mov
test
repz
cld
in
add
dec
imul
jg
mov
out
das
aam
jle
test
je
in
out
daa
dec
and
cmpsl
add
mov
or
loopne
mov
pop
mov
jmp
and
jmp
aas
inc
and
mov
mov
in
jge
mov
lods
xor
xor
jns
mov
sahf
lods
dec
sarb
mov
dec
outsb
push
mov
inc
inc
lret
mov
or
add
mov
or
mov
pop
cmp
leave
pop
popa
jns
sbb
jns
test
ljmp
and
aam
xchg
cmp
cld
jno
dec
sahf
call
sub
jmp
movsb
xlat
test
push
jbe
mov
in
cmp
movsl
mov
push
mov
mov
scas
adc
sahf
pop
sbb
jl
pushf
cmpsb
and
mov
dec
lock
dec
push
and
or
sti
xlat
jl
push
adc
xor
or
repz
pop
jo
or
pushf
mov
mov
mov
imul
mov
pop
push
xchg
lods
or
dec
sbb
leave
icebp
mov
test
push
push
pop
aas
pop
mov
pop
mov
unpckhps
mov
xchg
push
call
pop
stc
jns
dec
xchg
jp
add
jns
push
sbb
leave
pop
lahf
mov
mul
pop
xchg
pop
xor
cmp
fs
xchg
rcll
frstor
addl
adc
ret
or
imul
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
and
nop
sti
fidivrs
loope
jle
pop
hlt
movsb
pop
pop
or
add
sbb
xchg
pop
and
addr16
xor
push
xor
push
jge
push
pop
push
xor
inc
adcb
dec
sbb
push
mov
cmp
sub
push
fidivs
addr16
and
pop
push
mov
mov
jp
cwtl
aam
sahf
rcll
pop
xchg
sahf
add
push
pushf
out
jns
dec
int3
mov
aam
mov
pop
sub
movsb
adc
mov
xorb
jl
movsb
shrd
xor
addr16
in
popa
rorb
jae
add
push
push
dec
add
gs
mov
adc
lods
clc
addl
mov
pop
movsl
mov
pop
js
mov
rol
loopne
mov
sbb
std
dec
loope
pusha
arpl
lret
jg
test
negl
test
std
push
adc
sbbb
add
inc
es
adc
ljmp
out
sahf
pop
or
arpl
cmc
jbe
call
xlat
or
outsb
ss
ja
hlt
mov
dec
push
inc
jecxz
jnp
mov
cs
hlt
mov
std
adc
andl
dec
sarl
sbb
dec
nop
popa
inc
ds
cwtl
insb
xor
je
and
bound
mov
jbe
adc
sbb
ds
jle
je
mov
xor
sti
test
pushf
add
enter
iret
cmpsb
cli
add
nop
adc
mov
xchg
cmp
jno
push
scas
or
addr16
sti
mov
push
cwtl
test
lods
repz
pusha
pop
out
sbb
mov
inc
rclb
adc
orb
insb
mov
decl
out
aaa
xchg
fwait
movsb
pavgb
test
hlt
in
or
lfs
jb
jle
add
fists
popa
lret
cmpsl
int
dec
popf
xor
cmp
mov
mov
push
testb
fldl
fldt
push
pop
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
dec
call
loope
jle
lds
test
popa
lock
fbstp
int3
lods
test
dec
bound
lock
jnp
mov
int
sbb
mov
in
xchg
sbb
lods
push
sub
testb
mov
sub
sub
arpl
fdivrl
adc
cmpl
loopne
fidivrl
inc
popa
cmpl
iret
outsb
sub
bswap
jnp
cmp
icebp
pop
call
jg
xchg
inc
test
adcl
fwait
scas
pushl
mov
pop
pop
xchg
xchg
pop
push
pop
xor
jo
aam
cs
mov
pop
pop
xchg
jb
mov
fimuls
xchg
or
dec
inc
movsl
jl
in
lret
mov
push
and
cmpl
into
adc
repz
aad
cmpl
iret
cltd
and
push
mov
cmp
push
jo
cmc
shrl
or
imul
sub
add
in
push
loop
ss
std
les
add
and
dec
or
jge
adc
movsl
dec
cmp
cwtl
and
sub
jbe
cltd
enter
dec
push
xor
mov
gs
mov
push
das
pop
or
push
push
sbb
cmp
cmp
mov
xchg
pop
inc
imul
enter
pop
insl
inc
mov
cmpb
imul
jmp
xchg
out
jmp
les
xor
mov
sti
inc
in
xchg
inc
dec
mov
scas
andb
leave
imul
xor
cmpsl
push
or
lret
inc
outsl
fstpl
mov
mov
stc
jp
in
sarl
pop
ja
pop
lods
mov
in
jnp
or
enter
sbb
scas
lret
sbb
sbb
int
sbb
mov
out
jmp
inc
daa
iret
xchg
cmp
movlps
lret
movntq
push
pop
cmp
aaa
sub
and
insb
inc
outsl
adc
or
popf
ret
movsb
sti
loope
lods
sub
cld
rcrl
sbb
insl
inc
pop
test
sbb
inc
adc
push
xlat
xor
xchg
cmp
push
push
mov
scas
jne
lret
jg
inc
push
mov
out
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
and
or
rcr
jle
loope
jle
mov
ds
pop
mov
cmp
mov
scas
clc
lahf
lea
and
jmp
jae
imul
loop
ret
loope
adcl
cmpsb
jae
mov
add
int
lret
ret
sbb
in
lcall
nop
movsl
mov
cmpsl
imul
fisttpll
out
std
or
push
mov
pop
pop
cltd
cmp
and
es
lcall
aas
pop
mov
jbe
call
sub
loop
icebp
or
lret
xchg
loope
test
repnz
xor
test
std
aad
mov
jns
push
outsb
lock
pop
push
les
jge
icebp
adc
and
insl
adc
mov
enter
jl
mov
pop
rcl
ljmp
into
sbb
je
adc
and
divb
stos
in
in
push
stos
loope
movsl
mov
mov
lahf
push
lret
dec
and
aam
stos
loopne
xor
fs
sub
dec
ljmp
xorb
ljmp
addr16
push
ds
mov
pop
push
push
xchg
push
test
xchg
and
jbe
mov
scas
jae
jmp
jae
jo
jnp
cmp
inc
fidivrl
pop
sbb
xor
cwtl
jg
call
xchg
dec
daa
sahf
add
lock
stos
inc
pushf
test
sahf
dec
cmp
or
aad
dec
xorl
stc
jle
sbb
mov
mov
xor
pop
xchg
pop
out
mov
out
and
loopne
inc
xor
insb
adc
ss
insl
pop
adc
adc
or
rcl
dec
sbb
cwtl
mov
dec
sbb
aas
dec
pop
loope
jp
jo
mov
jb
call
push
xor
mov
std
xchg
mov
cld
mov
mov
lock
lock
mov
insl
jnp
negb
pusha
sbb
lahf
enter
inc
xchg
lret
nop
mov
jmp
dec
cs
mov
pop
dec
and
shll
dec
mov
dec
and
cmpsb
leave
mov
cli
pop
adc
cwtl
loopne
cld
pop
nop
stc
test
jne
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
leave
addb
loope
jle
insb
divb
cs
ret
xor
outsb
gs
adc
push
cmp
pop
and
out
stos
js
jmp
je
js
adc
scas
push
aam
inc
rcll
call
xchg
lock
and
inc
pop
or
ret
movupd
fdiv
mov
pop
mov
movsb
adc
popa
rcr
mov
adc
sahf
pop
movsl
loop
call
sub
repz
or
out
lds
clc
xchg
jge
sbbb
jg
test
cmc
jge
jnp
mov
pusha
je
jno
push
xor
aam
fcomip
cmp
pusha
incl
jns
repz
inc
sbb
push
popa
ret
pusha
cmp
cltd
mov
in
lods
cmp
jno
xor
lcall
enter
sub
les
cmc
mov
pushf
insb
add
into
xor
pop
or
fisubrl
pop
or
mov
push
mov
mov
sahf
sbb
bound
fcomi
add
aam
lea
push
pop
add
ss
cld
je
jb
jne
inc
inc
push
sahf
sub
movsl
popf
imul
add
xor
inc
and
mov
cmpb
popf
lods
ret
push
test
sahf
add
or
fwait
and
cli
or
mov
loop
sub
or
xor
dec
call
aad
add
jne
mov
test
pop
add
subl
push
rorb
outsb
daa
shrl
ja
mov
and
push
cld
xor
xchg
mov
push
and
sbb
cmp
push
jmp
lahf
inc
ss
mov
aaa
xchg
xor
popf
mov
jb
gs
mov
or
mov
jecxz
insl
xor
mov
mov
cmpsb
xlat
or
addr16
jbe
js
test
popa
icebp
pop
neg
lods
test
adc
lahf
mov
addr16
aaa
int3
jl
dec
push
lret
aad
adc
xchg
cmp
mov
mov
fisubrl
repnz
sbb
enter
stc
je
and
int
adc
and
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
ret
pusha
pop
aas
push
add
nop
add
push
mov
inc
pop
pop
adc
cmp
sbb
dec
add
jno
jp
pop
sti
xchg
leave
dec
out
mov
and
and
jbe
popf
mov
pop
mov
ljmp
pop
inc
pushf
xchg
sbb
int3
push
xchg
push
in
mov
outsb
push
cmpsb
mov
insl
test
repz
outsl
xchg
aad
aas
leave
int3
jmp
jnp
and
sub
bound
incl
or
push
jge
pop
xchg
dec
je
lret
xchg
push
pop
scas
std
push
jns
adc
in
xchg
outsl
daa
insb
xlat
popa
and
pop
out
in
dec
addr16
addr16
lcall
push
testb
sub
push
and
jecxz
arpl
hlt
loop
jns
pop
mov
push
or
sub
fldt
push
sub
jo
je
mov
lret
mov
mov
cmp
repz
movsl
aad
add
jge
movsl
mov
fidivs
fldl2e
ret
movl
arpl
nop
ds
into
pop
pop
push
mov
mov
ljmp
push
push
fbld
rcrl
cld
mov
and
mov
xor
push
out
xchg
arpl
push
mov
rolb
push
mov
lcall
pusha
nop
rcll
insl
cmp
xor
and
lds
or
inc
mov
lods
movsb
push
jecxz
sbb
shrl
les
fnstenv
out
ljmp
push
xchg
sub
jecxz
shrl
lret
mov
outsb
jle
push
lahf
das
and
sub
sbb
arpl
fisubl
fmuls
jecxz
lds
mov
imulb
in
push
call
movsl
jg
sub
sub
lret
jb
pop
dec
push
and
add
mov
and
jae
xor
int3
cli
mov
sub
stc
mov
xor
jmp
stc
test
jle
icebp
sbb
repz
sub
jg
pop
add
loope
stos
dec
xor
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
fsubs
jle
jo
jle
add
xchg
or
mov
in
jle
orb
lock
fsubrs
sbb
adc
or
pop
out
dec
call
xor
repnz
mov
sub
mov
jle
add
jne
add
add
lcall
xchg
xor
lahf
jbe
or
mov
push
cmc
sbb
push
inc
fiaddl
cmc
lods
arpl
adc
nop
pusha
bnd
cmp
aas
jo
xchg
mov
movsl
leave
rorb
adcb
sub
in
dec
test
hlt
mov
cmp
xor
xlat
shrb
ret
xor
xchg
stos
stos
in
jp
fisubs
or
fistps
or
popf
jb
mov
outsb
in
mov
mov
sahf
and
mov
push
and
stc
sbb
sub
jmp
dec
idiv
xor
ljmp
nop
ja
jnp
fsubrp
out
out
pop
movb
loopne
std
xchg
xchg
cmp
or
xor
pop
aas
push
pushf
popa
sbb
mov
jp
nop
cmp
cmp
add
sahf
movsb
hlt
mov
sbb
push
adc
jge
dec
push
jle
dec
cmp
pop
inc
cmc
mov
lcall
mov
mov
cld
popa
cmc
out
repnz
xor
test
push
dec
cmpsl
xchg
mov
outsb
jne
push
arpl
push
dec
ds
push
mov
push
loope
insb
xchg
adc
iret
mov
pop
clc
ljmp
xlat
add
mov
push
movsl
mov
mov
dec
cmc
leave
sbb
xor
into
out
jnp
cld
fistpll
dec
pop
addl
int3
add
inc
sub
and
test
cmp
cmpsb
pop
xchg
jmp
loopne
dec
notb
mov
repz
pop
sbb
mov
outsb
loope
mov
mov
xchg
in
jl
sub
out
test
push
adc
and
out
ficoms
sarl
enter
xor
push
jle
xchg
xor
sub
pop
dec
xchg
jmp
xorl
xor
lret
mov
add
fistpll
jle
fistps
xor
or
mov
ficomps
pop
pop
mov
and
sub
cmc
xchg
xchg
sarl
es
inc
xor
sbb
jl
dec
out
outsl
popf
push
cwtl
testl
cwtl
shll
lods
sub
lock
cld
xchg
xor
testl
aam
push
push
push
mov
test
sbb
pop
jle
fwait
sarl
sti
pusha
jno
sbb
sahf
push
and
pop
adcb
push
xor
mov
mov
adc
sbb
mov
or
xor
push
ja
clc
jge
dec
sbb
int3
sbb
xor
xchg
and
cld
out
out
mov
outsb
scas
mov
cmp
movsl
scas
and
fcomps
stos
aam
lcall
mov
mov
jbe
inc
out
pop
vcvttps2uqq
cmp
jb
mov
pop
test
inc
fistpll
in
jno
or
test
sbb
addr16
lods
ret
jne
or
xor
mov
std
add
daa
jnp
or
hlt
push
dec
daa
mov
add
or
jp
push
rcrl
lcall
pop
xor
mov
lret
int3
mov
jbe
dec
inc
es
fldl
sub
inc
xchg
mov
popf
push
bound
inc
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
push
adc
xchg
out
jle
jo
jle
inc
pop
cwtl
hlt
and
or
mov
out
test
pusha
inc
cmp
outsl
rcrl
cltd
jno
jnp
jge
or
stos
xchg
jae
lret
loopne
and
pop
iret
adc
pop
insb
or
lds
pop
iret
test
adc
into
adc
push
pop
xor
mov
sub
xchg
cmp
or
mov
subb
xchg
roll
xor
add
test
iret
mov
rcrb
sahf
in
movsb
popa
mov
pop
jp
outsl
mov
pop
xchg
xchg
dec
xor
cld
mov
fldcw
adc
mov
sbb
ret
inc
inc
rolb
jmp
cmp
xor
and
jg
ret
xchg
xchg
pop
jno
subb
ret
fcmovu
jo
lret
sbb
dec
xchg
gs
xor
xor
mov
inc
stos
mov
loopne
xor
test
xchg
mov
lods
pop
dec
das
sub
incl
jbe
xchg
pusha
lods
in
call
xlat
popf
mov
leave
inc
mov
pop
test
mov
or
adc
outsl
dec
add
ret
jp
jl
test
hlt
ss
cld
lods
mov
pop
xchg
sar
cs
ds
sbbb
aas
mov
lret
inc
add
js
andps
cmp
or
jnp
push
sbb
jns
mov
ret
ss
scas
jae
cmp
aaa
sti
mov
sbb
sahf
and
and
jo
adc
pop
es
mov
outsb
ficoms
jp
scas
mov
mov
rorb
sub
and
out
insb
imul
std
mov
out
idivb
sub
mov
xor
mull
push
and
mov
adc
cltd
pop
test
or
daa
bswap
sbbl
aas
xchg
sub
mov
dec
call
nop
lret
adc
push
push
dec
pusha
fs
ljmp
lahf
inc
dec
fidivs
imul
cmp
dec
fwait
mov
adc
or
shrb
dec
inc
orb
cmpsb
jb
xor
fstpl
cli
sbb
repz
push
adc
and
or
aaa
push
call
pop
xlat
enter
xor
mov
lods
out
push
and
sbb
and
fiadds
in
pop
fiaddl
pop
stos
pop
and
xchg
test
mov
bound
test
popa
outsl
sub
mov
std
cmp
pop
shrb
call
inc
stos
imul
out
pushl
fbstp
lcall
push
mov
lds
aaa
add
fdivs
sbb
jae
pop
lcall
lea
mov
cmc
test
inc
jbe
push
pop
push
xor
fs
pop
or
dec
xchg
mov
inc
mov
popa
or
popf
mul
mov
xor
push
out
adc
pop
sub
cld
mov
cmpsb
fisttps
outsl
imul
les
adc
pop
mov
add
add
push
and
push
mov
lds
lods
loop
mov
ljmp
cld
mov
inc
xchg
jno
out
jecxz
pop
and
push
rorl
add
mov
fdiv
scas
outsl
mov
scas
jl
sti
xchg
imull
jp
cmp
add
mov
in
lods
imul
mov
fcmovu
sbb
xor
dec
cld
jbe
call
mov
inc
shrb
addl
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
xchg
jle
jo
jle
nop
inc
test
in
test
ficompl
dec
cmp
das
mov
push
std
and
out
dec
cmp
addr16
call
fnsetpm(287
xchg
inc
cli
push
stos
dec
cmp
les
adc
loope
inc
lds
mov
pusha
or
sbb
movsl
add
loope
pop
int3
xchg
or
mov
mov
sub
fisttps
insl
sub
shr
fidivs
je
mov
cwtl
iret
faddl
xchg
in
je
adc
xlat
fdivl
jecxz
lcall
sarl
xorb
movsb
xorb
rolb
repnz
dec
iret
jmp
adcb
lods
mov
fs
jb
cld
xchg
stc
enter
mov
sub
push
aaa
mov
or
into
push
push
popf
pop
push
aam
call
xchg
rol
push
xchg
subb
push
xchg
call
jns
cmc
in
stos
gs
fstpt
xchg
cmp
jne
mov
dec
xorl
mov
jp
repnz
mov
jge
and
cmc
mov
xlat
nop
sub
scas
inc
xor
jge
mov
das
pop
pop
xchg
adc
pop
xor
call
adc
lds
mov
xor
aad
out
dec
loopne
int
push
insb
mov
mov
dec
cmp
sub
mov
int3
sub
pop
xchg
arpl
xor
mov
in
ds
stc
mov
jl
pop
inc
mov
sbb
scas
mov
xor
popa
jmp
mov
shr
mov
xor
pusha
xor
movsl
inc
stos
and
inc
sti
dec
enter
push
ja
mov
mov
pop
mov
in
cmp
xchg
int3
xchg
jae
inc
aaa
repnz
cmpl
jae
jecxz
mov
sub
add
add
cli
fxch
addr16
repnz
cli
dec
jecxz
dec
pop
aad
je
loope
inc
mov
rcrl
xchg
lock
adc
push
xchg
xchg
outsl
or
sbb
shll
in
adcl
sbb
cltd
stc
xchg
push
pop
add
ljmp
mov
shll
cwtl
and
daa
stc
cmp
sbb
fistl
stos
test
nop
es
imul
inc
jae
repnz
mov
pop
cli
jb
in
aad
popf
sub
repz
bound
arpl
inc
mov
das
fs
jle
xchg
fldenv
fwait
out
incl
sub
loope
out
push
pop
pop
mov
notb
adc
movsb
mov
out
mov
stos
loop
mov
or
push
shrl
idivb
sbb
lret
mov
and
mov
das
xchg
sbb
cmp
ss
add
xchg
imulb
pop
iret
mov
and
sub
adc
xchg
xchg
ja
jmp
rorl
jle
xor
pop
fcoml
or
or
les
or
mov
sbb
mov
es
pop
cmp
inc
add
cld
test
fcompl
cmp
lods
jae
dec
pusha
out
mov
xchg
js
popa
shrl
scas
xor
rcrl
adcb
pop
pop
dec
xchg
sub
cmpsb
mov
xchg
hlt
mov
xor
pop
jae
push
add
das
test
shrb
add
setl
xchg
bound
pushf
dec
test
popf
cmpsl
push
mov
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fchs
scas
movsb
xor
jle
jns
jle
cmpsl
dec
fiaddl
test
sar
mov
shll
paddsw
sbb
xor
sub
push
dec
aad
adc
repnz
push
mov
rorb
andb
in
ss
enter
pop
adc
cld
or
mov
nop
dec
mov
or
cld
sbb
mov
or
lods
jb
push
lcall
hlt
ret
jb
icebp
in
and
loop
ljmp
cmp
addr16
push
push
jae
add
mov
out
inc
adc
lret
dec
jmp
hlt
inc
and
bnd
pushf
jbe
aas
imul
and
inc
xchg
mov
xchg
aaa
daa
repnz
aaa
mov
dec
stos
mov
fldlg2
inc
aam
call
jecxz
xor
ja
pop
movsb
scas
sub
adc
cmpsb
push
pop
mov
arpl
fistl
in
neg
lods
jge
cwtl
aaa
sub
mov
inc
push
jl
loopne
out
xor
pop
cmpsl
jo
idivl
xchg
and
mov
cltd
cmpsb
push
or
add
push
js
cmp
orb
and
shrb
add
sub
fisttps
inc
outsl
loop
lods
daa
cltd
imull
mov
sub
xor
xlat
pop
xchg
icebp
add
ja
xor
mov
or
and
dec
pop
xchg
int
jg
cmp
pop
arpl
in
adc
mov
push
les
movsl
mov
dec
or
ljmp
in
lahf
cmpl
ret
es
and
cli
ror
fsubs
aad
ss
cltd
xchg
movsl
das
imul
icebp
and
add
mov
pop
jl
mov
test
push
sub
dec
mov
push
push
cmp
sub
dec
cmp
sub
xchg
inc
mov
jo
dec
pusha
inc
into
test
push
sahf
sahf
test
jno
xchg
dec
xchg
in
cwtl
into
adcb
pop
cmp
xchg
fcomps
cmpl
jmp
push
push
sbb
aam
arpl
cmp
arpl
in
sbb
jns
test
cmp
xor
fiadds
cld
in
call
jno
or
mov
inc
pusha
std
push
push
pop
pop
mov
push
pop
lcall
cld
push
lcall
xor
je
test
insb
xchg
sub
in
aad
sub
gs
mov
sub
mov
lret
push
xchg
nop
inc
lahf
cmp
xor
out
sub
adc
movd
in
cli
addb
lds
in
ljmp
xor
mov
pop
mov
dec
jge
ss
lret
push
and
loopne
std
outsb
icebp
imul
ret
cmp
cmp
xor
push
xchg
mov
shl
add
cmpsl
push
jg
decb
cmpsl
sbb
pushf
push
test
cli
rcrb
pop
in
xchg
sbbb
dec
inc
decb
ret
mov
ljmp
in
fisttps
cld
or
out
xor
and
pop
jmp
inc
icebp
outsb
sarb
jmp
push
aas
test
jp
lods
cmp
jo
call
xor
loop
cmp
sbb
jo
out
cld
out
push
cmp
pop
lds
xlat
pop
cmc
scas
mov
mov
dec
and
push
jmp
scas
inc
aam
jge
out
pushf
add
or
int
pop
jl
jmp
js
mov
mov
push
pavgb
mov
xor
aam
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
xchg
das
daa
cli
bnd
jo
jle
fisttpl
stos
pop
push
mov
adcb
and
xor
bound
enter
je
pushf
mov
dec
scas
sub
test
in
cmpsb
sub
daa
mov
out
cli
pop
lock
fwait
dec
mov
jle
sub
jns
fwait
cmp
add
sub
cld
sub
mov
mov
fnstenv
push
sbb
repz
xor
cltd
mov
sbb
jbe
cmc
inc
into
pushf
jb
lock
mov
push
and
pop
cld
lahf
sbb
mov
sbb
push
adc
mov
mov
shrb
add
out
hlt
scas
cmpsl
xchg
lds
fdivs
pop
aaa
inc
rcll
je
mov
cwtl
mov
testb
mov
mov
xchg
xchg
or
mov
les
stos
repz
mov
jmp
das
daa
fisttps
mov
std
inc
mov
sub
add
or
xor
sbb
push
cli
mov
cmp
andb
mov
std
mov
repnz
dec
push
pop
das
sbb
outsb
mov
lret
aas
jae
xlat
aad
daa
xor
inc
xlat
lahf
cmpsb
xor
and
adc
nop
loope
jl
inc
stos
ss
mov
jg
and
inc
mov
cli
cltd
xchg
cmp
xchg
push
test
push
inc
insb
sbb
jo
mov
in
andl
sbb
add
or
mov
int
dec
mov
adc
ret
jecxz
pop
inc
push
mov
aaa
ljmp
clc
mov
pop
pop
inc
pop
cmc
popf
xchg
scas
jmp
sbb
sbb
and
mov
fwait
test
cltd
adc
fs
fcomps
aad
mov
hlt
push
outsl
mov
shr
ja
sbb
xchg
xor
adc
ss
pop
aad
or
xchg
add
xor
ret
ffree
into
cmc
inc
jg
popf
push
out
pop
adc
loop
xlat
dec
add
into
ret
pusha
push
and
jp
xchg
loop
out
rorb
ljmp
sbb
push
xchg
scas
push
or
into
mov
pop
adc
or
dec
stos
xchg
mov
jnp
xchg
jbe
mov
out
adc
cmp
lahf
in
fs
loope
movsl
and
enter
cwtl
push
adc
sbb
mov
mov
inc
xorl
lret
sahf
fsubrs
aas
fistpl
bnd
sub
gs
mov
ss
pop
dec
pop
arpl
cmp
es
ret
pusha
and
dec
std
test
lods
andb
xchg
rorb
dec
xor
cmp
or
mov
cmp
lahf
pop
mov
cltd
cmpsb
mov
mov
cs
sub
push
cmpsb
bound
jecxz
or
cmp
cmc
addr16
xor
outsl
loop
mov
lods
or
popa
jmp
out
dec
out
cmp
cmp
popa
dec
or
xor
xor
aaa
gs
xor
or
cld
sbb
lahf
nop
xchg
push
stc
stc
pusha
fldl
popa
cld
sub
pop
sub
mov
jge
cmc
mov
jno
lcall
add
add
jmp
aad
pop
xor
and
push
fadds
ret
pop
add
add
push
jb
xor
mov
out
cmc
xor
outsb
push
or
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
pop
jae
xor
jle
jo
jle
pushf
daa
mov
xchg
or
leave
mov
xchg
adcb
and
lret
inc
pop
int
jl
lock
pop
in
test
cltd
jg
test
mov
sub
jge
stos
ficoms
loop
enter
xchg
lock
mov
outsl
enter
test
aaa
neg
sub
inc
adc
cmp
mov
shll
jb
adc
ja
jns
jns
add
fsubrp
push
dec
mov
lret
or
pop
adc
lds
mov
popf
lahf
jb
mov
aad
mov
jge
xchg
jecxz
and
dec
daa
int3
stos
cwtl
out
jne
jl
int3
test
xchg
push
sarb
add
mov
ljmp
test
loopne
push
mov
dec
sti
pusha
aam
adc
pop
mov
jecxz
cld
xor
icebp
adc
and
shrb
mov
out
jecxz
pop
push
out
ret
mov
faddl
xor
inc
js
imul
mov
pop
jns
or
js
jecxz
jp
cmp
dec
jge
dec
jle
inc
in
test
shl
adcl
xor
mov
jne
lahf
xor
pop
std
xchg
subl
dec
iret
cmp
and
xchg
cmp
pop
push
cmpsb
loop
iret
movsb
adc
pop
les
push
pop
or
out
fisttps
push
ljmp
cmp
mov
arpl
imull
xchg
lcall
shr
xchg
push
pop
jl
add
hlt
lods
dec
inc
pop
mov
add
loopne
fs
repz
mov
cmpsb
icebp
insl
or
daa
pop
xor
cmpsl
ds
data16
test
or
inc
mov
stos
test
adc
arpl
jbe
in
test
mov
push
movsl
or
mov
inc
xchg
rclb
sahf
rol
mov
dec
xlat
sbb
cmp
mov
dec
push
jge
sahf
add
pop
ficoml
mov
sbb
adc
mull
push
add
push
xchg
repnz
stos
cmpsb
xchg
dec
dec
icebp
or
and
and
std
popf
pop
mov
jae
and
in
sbb
cld
imul
sub
mov
xor
mov
addr16
outsb
mov
or
leave
push
add
ss
cli
neg
xchg
xchg
stos
stc
aad
cmp
test
test
jl
jg
mov
xor
test
sub
aad
hlt
jbe
pop
xchg
pop
aaa
outsl
clc
ret
fidivs
ficomps
scas
push
mov
mov
and
jg
ljmp
out
push
jmp
stc
fcomps
fisubl
xor
sub
mov
xchg
jns
xchg
daa
xor
push
push
imul
inc
out
ljmp
push
cli
jmp
mov
out
and
mov
fcoml
jns
sbb
loopne
lret
jmp
in
sub
jo
dec
jge
aaa
pop
sub
ret
or
gs
cmp
mov
xchg
int3
cmp
xchg
cmpsb
fnstcw
aad
movsb
xchg
int3
sti
loope
push
mov
xchg
jae
jmp
jg
sub
mov
dec
pushl
aaa
xchg
dec
and
in
test
pop
fcom
jo
dec
cmp
fsubr
and
pop
popf
mov
adc
out
inc
popf
xchg
mov
addr16
in
xor
ja
mov
push
pop
push
push
aad
adc
adc
cmp
cmp
in
xchg
push
mov
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
test
cli
jle
jo
jle
xchg
repnz
test
ret
mov
daa
or
dec
loop
out
aas
add
fdivr
out
push
jge
subb
repnz
or
xor
fcomip
inc
ljmp
pop
jg
pop
aaa
data16
stos
lds
arpl
repz
push
bound
cld
and
fwait
adc
test
testl
lret
or
or
cmp
push
lahf
out
mov
stos
lret
mov
cmc
lock
pusha
mov
xor
enter
int
testb
insl
nop
sbb
push
sbb
lret
rcll
cmc
sbb
mov
pop
dec
jl
mov
adc
pop
xor
sbb
out
fisubs
and
xchg
cwtl
mov
les
test
scas
mov
jbe
jns
mov
out
or
outsb
mov
aaa
jae
test
push
ret
or
mov
inc
mov
in
out
mov
ja
sbb
paddusb
ds
xor
ja
push
adc
mov
xor
testb
cmc
mov
fstp
xor
fildll
int
cmpsl
add
jbe
cli
lds
out
lret
xchg
mov
arpl
insl
or
inc
mov
push
sti
jp
push
push
rorb
cmp
dec
xchg
iret
mov
adc
fcomi
xor
sub
lods
lret
sub
mov
xchg
cmpsb
sub
sub
rcll
xlat
mov
mov
xchg
jae
in
out
lcall
orl
fisttps
ja
icebp
push
cltd
ret
cltd
call
lods
mov
fnstenv
pusha
jbe
sub
push
push
pushl
call
or
out
mov
pop
insl
gs
lods
aad
mov
add
xor
popf
in
cmp
lods
or
inc
pushf
fwait
pop
jne
dec
mov
mov
inc
add
pop
dec
test
fs
ret
rolb
pop
pushf
sbb
sbb
and
xchg
sahf
mov
pop
fistpl
and
add
fwait
inc
jecxz
pop
pop
sahf
lods
icebp
orl
sbb
mov
mov
adc
addr16
sahf
movl
jo
pushf
push
mov
lods
outsb
and
rolb
xor
pop
jbe
orb
and
sbb
add
mov
sbb
in
pop
scas
pusha
pop
xor
iret
das
ljmp
int3
push
mov
dec
dec
ja
pop
pop
fdivrl
xchg
lahf
push
out
rcrb
mov
jo
int3
xor
sbb
movsl
ds
nop
movsb
iret
aas
cmc
inc
dec
pop
test
sarl
pop
cmpsb
lcall
clc
mov
or
fistps
pop
icebp
add
scas
mov
add
pop
in
loope
adc
lea
jbe
jg
inc
jp
push
push
mov
aaa
and
lret
pop
mov
cmp
or
dec
push
cmp
pop
xchg
or
push
push
sbb
in
fs
popa
adc
imul
xlat
sbb
mov
hlt
int3
xlat
leave
mov
fs
dec
fs
mov
ja
mov
loop
adc
add
mov
xchg
mov
fucomi
out
ja
mov
adc
mov
adc
dec
and
add
pop
adc
xor
test
add
inc
jae
xorb
adc
xor
shl
insl
jae
xor
stc
clc
inc
xchg
lcall
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
mov
adc
xchg
jo
jle
mov
xchg
movsl
ss
and
jp
lods
ds
sbb
cltd
scas
add
imul
divb
int3
nop
pop
xor
dec
jmp
push
push
add
lret
test
sbb
dec
aam
push
dec
mov
cmpsb
fwait
cmpsl
imul
or
out
jbe
xchg
fiadds
adc
dec
pop
xlat
mov
cltd
sbb
enter
sub
fwait
gs
std
cmp
sbb
cli
pushf
dec
in
cltd
cld
cmp
or
ljmp
mov
ds
cmpsl
neg
cmp
jbe
mov
add
outsl
mov
movsl
movsl
jnp
cld
and
js
pop
mov
clc
es
xor
dec
sub
xor
mov
in
scas
adc
imul
stos
bound
or
pop
jno
pop
cmpb
push
fstl
mov
add
test
jne
pusha
js
loopne
iret
jmp
fadds
repz
add
enter
adc
pop
push
and
jb
push
add
sub
loop
cmp
lcall
mov
adc
push
movsb
lock
lret
shlb
pop
pop
cmp
and
stos
sub
dec
js
or
mov
mov
sub
mov
xor
lods
bound
mov
pop
sbb
sbbb
jp
cwtl
fdivrl
ja
scas
pop
and
fisubrs
pushf
dec
adc
push
imul
out
sub
in
dec
imul
outsl
pop
jns
jns
mov
jge
adc
out
push
mov
addr16
int3
inc
loopne
pop
and
and
mov
in
dec
je
cmp
pop
xchg
rolb
xor
out
jno
sbb
sbb
and
mov
and
scas
arpl
iret
dec
mov
or
and
xchg
movsb
mov
cmp
cwtl
scas
sbb
sbb
cmp
inc
jnp
and
or
mov
jmp
push
xchg
inc
xor
adc
hlt
loop
shll
adc
xchg
mov
shrl
les
cmp
cmp
xchg
adc
xor
rcr
mov
stc
jp
push
ret
and
xor
rcl
mov
mov
es
popa
iret
mov
pop
mov
sub
adc
lcall
adc
jbe
and
mov
ret
mulb
mov
push
and
or
mov
sar
jecxz
mov
fbstp
insb
in
fcomi
mov
jmp
and
mov
shl
xlat
mov
mov
rcrb
push
or
mov
xor
mov
mov
lret
pop
in
xchg
mov
dec
vhsubps
shl
cmp
aad
jns
cltd
jecxz
int3
mov
not
bound
add
cmp
fisubrs
loope
lret
jp
pop
ja
add
subl
insb
pop
addb
and
xchg
orb
sar
rol
dec
sub
sbb
xlat
repnz
or
std
sahf
jecxz
cli
cmp
sahf
lods
push
push
push
adc
push
and
imul
inc
mov
push
test
iret
xchg
outsl
mov
ds
mov
xor
xchg
sub
dec
jb
mov
push
push
mov
sub
mov
pop
cmpsb
sub
pop
xor
lods
xor
mov
xor
cmp
xchg
add
or
mov
jns
dec
popa
dec
mov
gs
lea
addr16
xchg
out
fcmovnbe
mov
pushf
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
jge
xchg
ja
cmpb
jns
jle
jmp
ficompl
xchg
sub
jne
adc
lods
cmpsl
mov
into
cs
xchg
enter
pop
mov
sbb
ja
cli
into
xor
pop
sub
pushf
lods
in
int
test
dec
jecxz
pop
sbb
sti
inc
pop
gs
je
cld
loopne
adc
or
pop
cwtl
divl
or
pop
dec
pop
xor
lods
mov
adc
mov
test
xchg
add
decb
imul
sahf
xorb
fstps
mov
xor
mov
sarl
push
pop
iret
dec
fiaddl
or
lods
ljmp
stos
adc
in
xchg
xor
aad
cwtl
cmpps
idivl
cmpsl
inc
inc
lea
aaa
push
inc
jecxz
mov
xor
jp
movsl
inc
sub
push
lret
xchg
jnp
lds
add
sub
jo
sahf
das
or
jns
clc
xchg
pop
xchg
cltd
inc
push
push
sub
mov
loop
mov
xchg
sahf
mov
stos
or
push
sbb
cmovge
adc
sbb
movsl
mov
icebp
pushl
out
repnz
mov
add
cmpsb
mov
test
xchg
dec
push
cwtl
mov
sub
pop
bound
add
sub
ljmp
outsl
int
or
loopne
sti
adc
popa
das
pop
fisubrl
dec
stc
fisttpl
fs
aas
lods
or
addr16
insl
lods
idiv
cmpsb
out
sbb
push
popf
mov
aam
or
hlt
jp
xchg
popa
push
sahf
xchg
loope
xchg
gs
push
adc
adc
xchg
inc
arpl
mov
lahf
cmp
mov
sti
pop
mov
shl
jnp
xchg
add
shlb
adc
jne
out
ficoml
loope
daa
icebp
fwait
sbb
push
pop
rcrb
daa
mov
xchg
cs
jb
add
mov
jns
mov
test
repnz
jno
sub
cs
sbbb
repnz
add
aam
fmuls
int3
mov
out
fwait
sub
out
cmpsb
cmp
sbb
lret
out
sti
push
dec
push
stc
jb
in
jno
sahf
adc
or
orb
push
cmp
mov
int3
decl
loopne
stos
push
shll
mov
ror
ss
into
push
out
pop
sbb
loopne
insb
sub
and
out
push
mov
xor
icebp
dec
jge
xchg
dec
sti
iret
mov
push
pop
cltd
jae
lret
cwtl
jmp
pop
jle
jbe
data16
fsubr
faddl
mov
ja
lods
rcr
data16
and
mov
sarl
ret
pop
cld
inc
fdivrl
cmp
loope
cmpsl
cld
rclb
push
pop
inc
and
sub
and
jp
mov
test
nop
jg
mov
daa
fbstp
dec
scas
dec
das
cmpsb
lcall
ljmp
push
jmp
pop
bound
jmp
in
aaa
add
jmp
test
out
fiaddl
push
negl
sbbl
sub
in
push
cmp
in
orb
daa
mov
push
imul
shrl
addr16
pandn
sub
leave
mov
popf
lahf
mov
test
dec
push
mov
inc
jge
mov
loop
pop
popa
addr16
jle
cmp
mov
sub
cmpsb
mov
cwtl
std
stc
mov
sti
pop
mov
or
pop
xlat
scas
enter
lcall
sub
xchg
aaa
mov
ret
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
adc
std
in
jle
jo
jle
pop
push
shl
stc
sahf
sbb
and
mov
cmc
decb
push
scas
xchg
jno
rolb
dec
add
icebp
push
outsb
push
xchg
sarl
call
pop
mov
int
insl
andb
inc
xchg
fiadds
popf
adc
push
and
jnp
test
adc
inc
jbe
in
bound
add
shrl
icebp
inc
lock
pop
lahf
adcl
flds
imul
out
and
mov
and
push
test
dec
jge
std
cmpb
add
shl
mov
popa
cmpsb
jno
sarl
jg
adc
mov
inc
lock
inc
xor
movsl
xchg
adc
out
lods
into
xor
push
jmp
and
sbb
fdivr
fidivrs
loope
leave
xorb
loopne
inc
cmp
push
movsb
dec
jo
int3
mov
orb
dec
es
cmp
test
insb
js
add
bound
nop
mov
or
inc
push
cwtl
jnp
add
xor
out
pop
mov
inc
stos
pop
cmp
cmp
test
sbb
or
push
daa
addr16
outsl
or
ljmp
mov
repnz
clc
lret
test
lahf
stos
pop
inc
fiadds
and
pop
adc
xchg
mov
test
push
clc
add
fucomip
pop
fcomip
out
inc
les
dec
inc
xlat
movsl
cmc
das
fbstp
xor
xor
mov
addr16
sahf
popf
pop
lds
jecxz
inc
xor
movsl
jo
in
lahf
in
sti
cmp
movsb
and
xchg
mov
mov
call
push
lea
or
ja
aad
cmp
test
xchg
ror
stos
inc
movsb
jno
arpl
dec
in
shll
xor
jbe
imul
repz
dec
es
cmpsl
mov
incl
lock
sti
dec
mov
xor
sarb
outsl
sbb
cmc
push
push
inc
shl
and
test
xor
jecxz
dec
repnz
aas
outsb
shll
sbb
aad
out
xchg
mov
mov
xlat
cmp
jmp
or
call
inc
sbb
sub
inc
push
mov
shrl
pop
or
pop
mov
insl
mov
sbb
jmp
cmp
jno,pt
adc
mov
fsts
inc
jg
lock
icebp
pushf
rclb
shll
and
push
dec
out
sub
popf
mov
cmc
push
dec
cwtl
pop
pop
int
test
push
fildll
jmp
scas
loop
xorb
daa
dec
loope
aad
ljmp
adc
int
jg
rcrb
jb
repnz
cmp
or
pop
gs
int3
add
jo
xor
mov
or
aam
mov
shlb
sbb
sub
scas
mov
or
pop
in
fsubr
fisubl
psubusw
xor
cmpb
pusha
fs
dec
inc
addr16
fs
xchg
in
loop
pop
cmpsb
faddl
push
xchg
xchg
sub
adc
cmovp
fcomp
or
arpl
into
mov
mov
xchg
dec
adc
push
xchg
mov
stos
fnstcw
fisttps
jno
mov
in
enter
cltd
into
pop
dec
fcmovu
inc
outsl
adc
or
cmp
pop
es
add
push
mov
add
mov
rcrb
xor
neg
test
add
fidivrl
inc
push
and
in
and
out
and
sbb
and
sbb
stc
add
jmp
cmp
dec
mov
rclb
cmp
jle
jns
jle
mull
mov
mov
lea
xor
in
in
or
xor
cs
xor
jnp
clc
push
jg
push
mov
xchg
aas
stc
ret
push
add
mov
push
jbe
out
xchg
scas
data16
or
sbb
hlt
mov
decl
shr
inc
aam
add
jle
lods
inc
xor
lea
jns
dec
icebp
lret
fs
lret
out
sub
xchg
out
xchg
stos
fcompl
or
daa
ja
push
mov
jmp
inc
mov
pop
or
pop
aad
outsb
xchg
jae
pop
aas
jb
push
pusha
and
or
jg
jbe
test
and
cmp
bound
dec
xchg
ds
test
pop
nop
ljmp
scas
es
sub
mov
pop
sub
and
leave
daa
cs
mov
sub
iret
lret
inc
lds
int3
mov
dec
scas
mov
ficoml
jle
pop
aas
insb
sub
xor
mov
and
les
fiadds
or
and
mov
in
xchg
lods
mov
xchg
jnp
sti
loop
insl
test
mov
aad
xor
mov
aaa
push
aaa
mov
jp
mov
mov
xchg
daa
mov
sti
cmpsl
cs
mov
aas
sbb
jmp
cld
jecxz
push
pop
in
nop
aad
inc
add
fisttps
test
sbb
ret
inc
inc
ja
in
rorl
fwait
xor
jb
stos
and
repnz
dec
or
sbb
jnp
push
mov
int3
jo
rorb
push
in
and
outsb
cmp
xchg
in
in
push
test
pop
stos
push
jg
inc
push
inc
loopne
mov
insl
add
or
les
out
in
sbb
imul
addr16
cli
iret
roll
adc
dec
push
es
cmp
jnp
imul
add
int3
daa
mov
out
inc
mov
mov
aad
lock
mov
ja
push
mov
mov
ss
dec
lods
xor
mov
xchg
mov
test
outsb
sub
cli
mov
lds
dec
jmp
jecxz
addr16
inc
or
fildll
bound
iret
dec
adc
xlat
scas
lds
mov
push
cmp
into
mov
mov
cltd
pop
sarb
dec
mov
jge
dec
andl
daa
mov
adc
test
adc
add
cmp
outsb
pop
xchg
jbe
in
or
incl
push
mov
sub
rcrb
enter
and
movsl
jnp
jp
mov
aas
mov
mov
popa
sub
ss
stos
push
push
lods
jae
loopne
int3
sti
mov
pop
outsl
xor
pop
out
je
imul
push
push
lods
aaa
xor
jmp
dec
jb
mov
cmp
addb
add
sbb
push
cltd
pop
pop
inc
mov
rcl
cmp
and
icebp
push
add
fisttpll
adc
push
call
sub
iret
mov
pop
dec
mov
pusha
test
mov
nop
lahf
cmp
in
inc
pop
mov
ds
insb
dec
push
push
inc
imul
scas
std
fmuls
mov
mov
push
mov
push
push
lahf
xor
cmp
mov
test
jnp
les
jecxz
notb
pop
sub
jo
push
mov
nop
or
lock
sub
nop
iret
popl
add
or
push
into
fidivl
mov
loope
jle
ljmp
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
jb
sti
out
rclb
jle
popf
and
or
mov
mov
push
sub
push
data16
mov
jne
xchg
mov
lcall
sub
sbb
dec
fdiv
in
add
in
sbb
mov
stc
inc
insb
xchg
mov
cld
mov
push
cwtl
jle
cwtl
cmc
int
add
fmull
iret
xor
repnz
xchg
pop
loop
cmpsl
xchg
mov
call
jb
mov
jne
jbe
mov
mov
pop
lods
stc
fstp
sbb
ja
or
aad
sub
xchg
push
adc
pop
mov
cmp
lahf
cmpsl
out
sub
cmp
ficoms
jmp
cld
xchg
dec
cmc
cmp
push
pop
sub
repnz
add
scas
sbb
repnz
adc
stc
mov
add
lods
push
vmovq
gs
jl
sub
inc
fchs
stos
mov
adc
push
push
mov
xchg
loop
call
mov
gs
sti
test
add
push
je
fisttps
sbb
inc
adc
inc
cmpsl
fisubs
outsb
inc
nop
adc
fptan
mov
sbbb
cld
or
add
imul
adcl
push
sbb
and
ret
sbb
cmp
aam
lret
mov
pop
outsb
cmp
dec
or
mov
aaa
dec
cltd
out
xchg
sbb
mov
mov
and
call
pop
int3
sbb
xor
push
mov
adc
ret
les
mov
dec
subl
mov
aad
pusha
jnp
int
jg
in
cltd
icebp
jmp
cmpb
xor
lods
je
jmp
cld
test
in
push
push
jmp
fs
push
sbb
pop
stos
push
jae
scas
sub
adc
fs
xchg
push
sbb
push
pop
stos
mov
pop
mov
insl
inc
popf
fdivr
stos
outsl
mov
xor
adcb
lret
std
shll
pop
cmp
or
xor
lods
movsl
mov
call
jbe
lock
inc
dec
call
xorl
pop
sbb
mov
test
insl
xor
scas
push
mov
cmc
imul
sbb
xor
sbb
mov
pushf
icebp
pop
inc
inc
std
cmp
sub
push
nop
add
call
adc
inc
fmuls
stc
inc
lods
cwtl
push
cmpsb
mov
lcall
les
loop
daa
inc
iret
inc
dec
push
adc
mov
out
xorl
stos
mov
jge
lods
sbb
fldl
cmp
mov
into
mov
pop
bound
jns
arpl
add
add
mov
or
mov
icebp
inc
js
out
in
pop
ret
or
push
xchg
inc
out
cmp
clc
or
ret
cmpsl
push
imul
cmc
mov
cltd
xor
xchg
stos
loopne
movsl
sar
insl
sbb
xchg
adc
ss
and
and
inc
dec
test
sbb
arpl
adc
les
pop
jg
sub
push
mov
inc
sub
rcrb
pop
int
sub
stos
inc
iret
push
ja
xor
inc
loopne
mov
nop
pusha
push
push
inc
roll
xchg
cmp
add
and
mull
int3
iret
cmp
sahf
fldt
cmpsl
sub
scas
sub
and
sbb
sbb
inc
inc
ret
rclb
sbb
mov
adc
jb
and
cli
cmp
cld
icebp
in
sub
addr16
aam
test
add
cmp
xchg
into
adc
xlat
lret
mov
mov
insb
sbb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
paddd
cmp
xchg
jle
jo
jle
dec
cld
repnz
lods
xor
mov
lret
pop
adc
insl
lret
test
push
loopne
xchg
in
leave
in
mov
xchg
mov
xorb
mov
imul
sbb
imull
shrb
push
xor
or
sub
push
dec
pop
cs
xor
cmpsb
movsb
std
stos
dec
xor
test
push
stc
fldenv
sub
popf
add
jnp
push
fs
sub
mov
shlb
testb
je
and
xchg
xor
rclb
xchg
leave
xchg
shll
pop
insb
ret
sbb
cmp
jmp
cmpsb
sti
mov
jae
lahf
xor
push
pusha
repz
movswl
cmp
jae
sub
pop
pop
out
cli
push
and
out
cmpsb
pushf
gs
test
xchg
mov
jl
pop
mov
lock
insb
in
mov
jo
dec
sub
xor
aad
mov
aam
mov
in
cmp
xchg
testl
sbbl
ss
or
fstl
adc
mov
pushf
jns
repnz
mov
sbb
jne
jmp
cmpb
xchg
sbb
vmwrite
lds
mov
or
sti
movntps
cmp
loop
pop
jp
pushf
xchg
mov
mov
mov
fs
mov
dec
fs
sti
push
pop
outsb
daa
inc
lods
repz
test
cwtl
or
repnz
sbb
pushf
cs
sarl
push
inc
sub
inc
popf
and
sbb
lods
popa
arpl
shlb
dec
out
aad
add
ja
mov
mov
fldt
test
adc
outsb
sti
arpl
cmp
push
pop
cmc
icebp
nop
push
xchg
shll
insl
push
fmull
or
pop
dec
sub
fidivs
jbe
jmp
out
and
es
or
in
test
jne
dec
jmp
in
push
aaa
arpl
imul
repnz
fistpl
xor
orl
cmp
pop
push
or
lds
and
inc
test
nop
mov
mov
ss
mov
lds
sub
pop
jg
or
loope
add
xor
push
arpl
xchg
fbld
jp
daa
je
sti
cmp
imull
lods
sbb
in
mov
add
aam
repz
inc
add
push
fs
lds
ret
bound
mov
and
pop
jle
ljmp
pop
mov
test
pop
push
mov
jmp
push
or
adc
jmp
paddsb
out
aaa
xor
or
aam
int3
lds
mov
jne
repnz
dec
sti
adcb
arpl
lcall
jbe
lahf
jg
sbb
std
mov
dec
in
sbb
out
adc
cli
push
inc
or
and
in
add
nop
jne
mov
and
aad
aam
test
pop
pusha
mov
mov
enter
mov
add
in
push
mov
cmpl
test
dec
xchg
and
insl
mov
dec
js
inc
push
lock
sbb
push
mov
in
std
mov
xchg
out
aaa
mov
gs
mov
rol
pop
outsb
addr16
jmp
mov
add
mov
push
mov
sub
lret
shl
lcall
div
gs
shrl
sahf
stos
aaa
fstpl
push
mov
xor
pop
xchg
aaa
adc
jge
test
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
insl
clc
ror
jle
jo
jle
stos
xchg
stos
or
sbb
mov
nop
movsb
lock
jo
mov
imul
inc
repnz
mov
das
cmp
and
xor
pop
ret
or
stos
mov
out
adc
popf
loope
jmp
outsl
int3
imul
xor
je
ficompl
lret
cmp
fbld
inc
fwait
js
jl
lret
inc
and
gs
cmpsl
out
arpl
lret
push
add
mov
daa
nop
jl
mov
cmp
mov
sub
ljmp
xlat
xor
sub
sbb
xchg
scas
js
scas
xchg
or
pop
cwtl
jns
dec
lea
jmp
add
shrl
mov
xor
stc
icebp
pop
lcall
sbb
jbe
data16
adc
jno
pop
jg
push
in
and
cmc
mov
adc
addr16
and
jp
xchg
cmp
jbe
out
xor
dec
pop
xor
add
insl
outsb
add
cmp
or
inc
inc
idiv
mov
mov
mov
into
lret
scas
xchg
and
cmpb
push
nop
mov
mov
cltd
insb
push
mov
sub
or
fmulp
ret
fiadds
ror
and
popf
add
cmp
sub
icebp
bound
sbb
in
sub
inc
push
jmp
push
mov
in
lods
call
sarb
xchg
cmp
aad
fiadds
add
xor
aas
nop
xchg
fmull
or
test
out
gs
cmp
pop
adc
inc
or
push
rorl
inc
scas
lock
ds
and
mov
mov
rcr
and
or
mov
push
pop
push
dec
andb
les
mov
xchg
call
sub
pop
xchg
push
mov
in
fisttpll
push
add
idiv
mov
mov
pop
cmpsl
dec
push
xchg
jp
mov
icebp
nop
pandn
xchg
out
aam
add
jne
adc
jb
rcrb
pushf
movq
inc
mov
pop
jle
mov
dec
inc
jecxz
and
mov
dec
aam
dec
in
xchg
ja
push
lock
mov
push
mov
lret
pushf
inc
jnp
es
mov
or
push
xchg
mov
sti
jg
sub
add
aas
add
les
adc
cmc
leave
enter
adc
jb
fmul
outsb
xchg
push
mov
icebp
push
pop
lret
repnz
dec
ror
add
mov
fsub
movsl
std
outsb
iret
scas
xor
pop
or
sahf
pushl
jl
fsin
mov
sbb
shr
cld
inc
or
inc
mov
and
cmpb
mov
or
aaa
andl
aaa
test
stos
xor
jge
aam
push
jnp
dec
popa
xchg
insl
mov
in
repz
jg
or
push
test
jne
aad
mov
ljmp
mov
or
int
push
fidivl
dec
and
adc
pop
jne
mov
xor
adcl
push
sarl
inc
xor
lods
push
aam
fistps
and
cmp
lea
and
movsb
movsl
cmc
ret
sarb
lea
cmp
loopne
sub
in
sbb
sub
data16
mov
inc
stos
push
push
xchg
ret
stos
adc
adc
aas
movsl
mov
js
push
jns
adc
lret
loopne
mov
push
in
xchg
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
fs
sub
lcall
lods
xlat
xor
mov
mov
mov
or
sbb
pop
cmp
gs
or
stos
scas
and
jns
data16
imul
clc
test
sahf
das
mov
xchg
lods
dec
mov
and
dec
mov
sub
lods
pop
shrl
mov
out
test
cltd
mov
push
and
mov
xlat
mov
cld
dec
enter
dec
pop
fnstenv
jmp
mov
sub
xchg
imul
fildll
data16
out
fistps
xor
iret
fwait
js
ss
inc
dec
inc
insl
lret
xchg
mov
rclb
imul
jo
mov
cwtl
sbb
cmpsl
ds
aas
dec
xchg
jno
add
sbb
mov
cmp
insl
dec
push
daa
int
in
cmp
xor
mov
and
jmp
pop
fildll
dec
adc
push
movsb
loop
adc
adc
mov
repz
cmpsb
je
xchg
fisubl
pop
notb
and
aaa
pop
pop
cmc
dec
adc
pop
mov
daa
popf
repz
leave
decl
pop
mov
jns
in
mov
mov
add
sbb
mov
fsubrs
or
mov
dec
ljmp
and
pop
filds
dec
jl
in
mov
aad
ds
add
sub
mov
push
xor
shl
fcom
sti
fsubrl
in
mov
mov
mov
push
insb
dec
addr16
pop
or
cwtl
stc
dec
xchg
add
mov
lahf
ja
jmp
repnz
jbe
inc
mov
cmc
cmp
fmulp
or
pop
addr16
imul
nop
pop
push
rol
test
sub
pop
mov
adc
dec
adc
inc
cli
cmpsl
jmp
shr
out
sbb
inc
or
into
adc
in
xchg
pop
pusha
xchg
jg
sub
mull
std
jge
mov
fnsave
repz
stos
cmp
addr16
xchg
cmc
xor
shrl
rcrb
bound
in
pop
or
inc
lods
and
pop
arpl
and
xor
adc
daa
dec
out
clc
out
cld
aam
movsb
icebp
outsl
pop
or
adc
gs
dec
nop
fsts
adc
sbbl
ret
dec
xchg
in
mov
dec
out
jecxz
std
sub
out
sub
addr16
adc
mov
mov
lret
add
repnz
test
xchg
aad
out
pusha
push
jge
in
xchg
negl
adc
lods
push
fistpll
sarb
push
xchg
xor
jnp
mov
jns
xlat
push
popa
jl
sub
inc
xor
and
or
fwait
lret
add
stc
sbb
stos
cmc
mov
jo
xor
mov
jmp
xor
fsubrs
mov
mov
inc
loopne
clc
cmp
pop
lahf
inc
sub
add
pop
dec
and
lea
sti
jbe
mov
jbe
xor
test
cmpsb
cs
push
aad
fadds
dec
mov
inc
movsl
negl
dec
xor
lods
cmp
mov
loop
add
xchg
stc
cli
inc
mov
xchg
push
fwait
cltd
mov
int3
sbb
cld
iret
add
loopne
xor
or
xchg
push
scas
adc
sbb
adc
dec
mov
cld
into
lea
sub
fmull
mov
sti
inc
cmp
arpl
cmp
mov
jno
adc
or
ficoms
hlt
xor
idivl
mov
xchg
ja
stos
dec
push
xor
mov
test
dec
sub
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
icebp
cmp
jle
fs
or
mov
scas
lods
pop
roll
xor
out
mov
jne
or
or
xchg
sbb
int3
xchg
inc
jle
cmp
decb
adc
mov
movsb
adc
mov
pop
scas
cmp
test
fprem
pop
jmpw
sbb
std
ja
pcmpgtw
mov
push
sub
leave
dec
jbe
and
arpl
ret
mov
lods
inc
add
rcr
mov
mov
test
scas
lock
js
andl
fisubrl
int
jl
dec
jecxz
fwait
out
push
enter
jnp
sbb
cwtl
dec
and
shlb
adc
loopne
pusha
jmp
adc
xchg
and
add
es
jle
mov
cmp
cmc
push
or
shlb
add
adc
cmpl
push
jb
xor
push
popa
js
xlat
aas
int
enter
and
add
mov
addr16
popa
jae
sub
jnp
pop
push
pop
sbb
test
pusha
rorl
sbb
mov
pop
xorb
pop
cwtl
ret
test
jns
lret
pusha
mov
fwait
cli
dec
loop
daa
mov
leave
mov
cltd
mov
js
jbe
or
mov
mov
xor
cmp
imul
cld
loop
inc
mov
lock
push
sub
repnz
jno
je
push
fiaddl
xlat
fldenv
movsl
dec
mov
pop
and
inc
and
xchg
xchg
dec
adc
cwtl
push
jge
and
mov
mov
hlt
jg
rcrb
std
add
jbe
out
iret
stos
mov
jne
lea
xchg
mov
inc
jno
jle
loope
xor
push
pop
jl
movsl
jmp
xchg
xlat
iret
or
orl
mov
pop
mov
dec
inc
dec
mov
pop
push
jbe
lcall
sub
lahf
and
pop
idivl
cli
je
and
mov
jecxz
dec
repz
sbb
add
inc
jb,pt
sub
imulb
push
push
push
aad
je
mov
inc
nop
push
inc
test
and
aas
xchg
mov
add
push
sub
bound
jne
test
push
fdivs
push
iret
or
pop
fildl
adc
jp
or
cmovo
jns
aam
fwait
jae
test
dec
mov
dec
jne
push
dec
inc
pop
add
sbb
sbb
inc
stos
shrb
push
pop
int
xchg
sub
jno
push
test
pop
xchg
rcll
jno
shl
repz
and
xchg
xchg
stos
aaa
sahf
push
push
mov
push
add
fildl
in
das
xchg
cli
push
sbb
aaa
xchg
fsubr
push
adc
shrl
popa
push
mov
mov
and
xchg
lds
in
jecxz
ret
stc
xlat
sbb
icebp
out
test
inc
movsl
lcall
nop
lret
inc
inc
sbb
or
or
stos
xor
ljmp
aad
xchg
ja
and
sub
adc
adc
xchg
xor
imul
mov
bound
fcoml
sub
jns
mov
leave
out
clc
inc
xorb
mov
cmp
mov
imul
push
pop
out
sbb
dec
lods
add
mov
lahf
aad
data16
mov
pop
and
mov
jo
in
pop
sbb
sub
xor
dec
mov
mov
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
mov
jle
jo
jle
mov
repnz
std
test
push
push
mov
imul
inc
rcrb
sub
pop
das
add
jmp
sahf
xor
inc
pop
fsubrl
push
push
sub
in
in
cmp
neg
das
sbb
lods
fidivl
xchg
sahf
in
clc
mov
test
and
test
mov
cmp
mov
popf
push
inc
cmpsl
cmp
push
pusha
sub
outsb
sub
aas
add
push
and
cli
repz
mov
test
or
push
mov
in
jl
add
xor
fcoml
xor
xor
sub
test
xchg
cmp
pop
push
and
jp
mov
scas
inc
xchg
jo
inc
mov
sub
push
cmp
xor
pop
dec
adc
jns
fucom
shrd
insb
sub
les
arpl
cli
shlb
jp
or
cmc
out
mov
ret
sbb
int3
nop
mov
xor
jae
push
mov
mov
dec
cmp
inc
dec
cld
sbb
lret
loop
mov
add
mov
sbb
cld
inc
push
add
or
mov
mov
cmp
xor
fildl
stc
les
xor
inc
mov
mov
inc
cmp
xchg
inc
xchg
loop
in
push
jno
add
jns
inc
xor
xchg
rolb
bound
mov
lcall
or
push
jae
mov
nop
dec
fstpl
xacquire
sbbl
rolb
arpl
das
addb
sub
jg
repz
call
mov
mov
out
call
adc
mov
adc
pop
cmc
mov
or
xlat
mov
add
xor
aad
dec
nop
dec
fdivl
pop
call
push
xor
lods
push
pop
mov
fwait
mov
ds
pop
inc
inc
imul
mov
fistl
cs
or
cmp
cmp
push
cmp
jbe
adc
add
adc
mov
inc
jle
sbb
test
and
jns
sub
adc
push
repz
mov
aam
fimuls
clc
inc
push
mov
mov
sar
aaa
jge
fcom
jnp
lods
or
push
add
pop
roll
repz
sbb
stos
aad
or
xchg
ret
xchg
mov
fldcw
push
mov
call
fwait
inc
pop
jne
insl
mov
mov
or
add
xchg
pop
outsl
and
jns
sti
clc
pusha
mov
or
dec
sub
test
and
aaa
pop
inc
adc
cmp
cli
and
movsl
inc
aad
push
jl
push
lret
out
mov
stos
xchg
push
xchg
lods
decl
cmp
sub
jo
sub
test
cwtl
leave
mov
clc
repnz
jbe
fdivl
xlat
pop
jne
cmpsb
jns
cmpsl
xchg
cmp
lret
ret
mov
jl
push
pop
mov
mov
mov
mov
mov
fs
adc
mov
mov
jne
inc
mov
ret
mov
mov
jp
inc
lahf
mov
jnp
or
fists
sub
add
xor
je
sub
cltd
pop
push
das
stos
dec
insb
or
cmpsl
mov
and
or
es
es
mov
enter
mov
jb
pop
cltd
push
and
push
insl
mov
cltd
mov
sub
jb
jmp
mov
add
mov
push
clc
mov
xor
mov
jmp
sahf
lcall
adc
and
inc
sub
xor
jle
jo
jle
pop
cmpsl
test
add
sub
xchg
push
pop
jp
cmp
jg
pop
stos
popf
incb
mov
pop
add
sti
loope
pushf
xchg
ds
leave
dec
imul
int
xor
es
pop
out
add
cwtl
leave
add
ret
mov
daa
ret
add
or
icebp
ret
int
sahf
push
test
sbb
jne
mov
fistl
and
sub
sarb
decl
add
inc
mov
test
cmp
xor
dec
adc
or
in
rcrl
out
aaa
test
cmp
fidivs
mov
pop
outsb
push
js
and
dec
push
fsubr
js
mov
inc
rcll
mov
inc
sub
xor
outsb
test
pop
cli
mov
push
dec
call
movsl
cmp
push
push
les
mov
pop
mov
push
jecxz
jae
cs
xchg
in
pop
mov
inc
xor
loopne
ret
sub
dec
sti
xor
pop
popf
sub
ret
add
in
mov
lock
movsb
pusha
push
repz
aas
pop
insb
lea
add
shl
out
xchg
xor
hlt
push
jl
ljmp
sub
pop
push
ljmp
inc
cmp
sahf
push
imul
movsl
scas
and
push
pop
pop
pop
in
pushf
nop
cmp
stc
push
jb
lret
sbb
ljmp
and
bound
push
sbb
movsl
aad
xchg
std
jle
lds
xlat
ja
cld
mov
mov
xchg
lea
fistps
imul
jb
xchg
lret
sarl
push
lods
sub
push
adc
stc
cwtl
pop
mov
cli
test
insb
mov
pop
adc
lods
sbb
push
xchg
sub
daa
inc
mov
in
or
xor
outsb
and
sub
mov
hlt
sbb
hlt
mov
in
xor
mov
int3
cmpsl
xor
xlat
mov
mov
insl
pop
pop
stc
push
adc
dec
imul
iret
xchg
inc
sbb
xlat
push
adc
mov
mov
pushf
into
pushf
int3
and
xor
mov
lock
jp
xor
mov
mov
daa
fs
lods
sub
out
mov
ja
loop
xchg
jg
sub
shrd
mov
fs
jmp
pop
cmpsb
mov
or
dec
push
test
pop
and
insb
test
jo
ja
mov
scas
inc
pop
sbb
xor
cs
jb
dec
cli
jmp
hlt
fsubrp
mov
add
add
mov
sub
xor
bswap
mov
into
mov
inc
lret
jne
sbb
movsb
aam
xchg
sahf
out
mov
push
movsb
mov
adc
stc
cs
add
jbe
aad
inc
push
int
outsb
inc
push
xchg
test
adc
lcall
push
sbb
jbe
inc
test
lds
imul
jb
sub
invd
sub
xor
push
xchg
arpl
sbb
and
push
sarl
sbb
push
out
aas
insb
data16
movsb
je
xor
ja
and
fstps
mov
int3
add
rclb
push
push
repnz
ss
aad
test
xor
setge
fisubrs
push
cmp
leave
mov
mov
ds
dec
ret
sti
pop
xchg
xlat
push
mov
inc
arpl
mov
sbb
clc
scas
push
add
test
push
leave
call
rcl
inc
ds
xchg
rol
inc
jge
insb
pop
sar
in
jmp
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
test
adc
stos
jle
jo
jle
lret
sub
leave
xchg
outsb
repz
fcmovbe
add
mov
or
fwait
jns
mov
repnz
pop
add
movsl
addr16
jle
loop
bound
dec
inc
cmp
fucom
sbb
cli
sub
cmpsb
rcrb
sbb
add
xor
in
and
in
push
stos
fldenv
jo
cmc
sbb
pop
jmp
cmp
shr
stos
lret
xchg
cmp
gs
mov
jl
test
jb
shrb
and
xchg
movsl
les
jno
in
outsl
mov
dec
pushl
cmp
lcall
in
cmp
fidivs
fxch
sti
les
leave
mov
inc
pop
add
inc
inc
movb
leave
cmp
sti
mov
pop
insb
jb
mov
jge
jnp
push
sub
mov
data16
inc
sbb
jns
fwait
mov
cltd
bound
addl
xchg
jne
jo
movsb
xor
in
mov
lret
iret
rclb
lock
shlb
sbb
ljmp
push
out
mov
pop
mov
mov
test
les
fildll
push
cltd
std
js
dec
mov
data16
rorl
stos
les
cmpsb
sbb
rcll
jae
lret
pop
jne
cmpsl
xor
repz
scas
stos
shl
loopne
and
jo
xchg
rorl
fisubl
sbb
push
push
or
xchg
cmpb
in
lods
pop
jns
incb
out
add
push
mov
in
loopne
cld
adc
push
jmp
xor
sbb
out
mov
jle
nop
lods
jmp
xor
push
jno
aas
iret
mov
mov
cmpsl
aad
jge
adc
in
sbb
bnd
mov
ljmp
sub
test
bound
inc
xor
cmp
add
jl
push
add
mov
shll
adcb
pop
xlat
lahf
and
jp
rorb
insl
jg
xor
scas
sub
sbb
andl
imul
push
mov
and
les
inc
mov
push
pop
icebp
sbb
mov
incb
xor
gs
out
lds
xchg
dec
sub
add
cli
xchg
cmpl
dec
mov
xchg
lds
ja
jmp
xor
popl
test
jne
jbe
imul
cld
adc
inc
jnp
push
push
sub
and
dec
push
jp
nop
repz
mov
movsb
xor
sahf
inc
jge
aas
sbb
data16
stc
fs
pop
lds
rol
push
add
xor
dec
leave
pushl
dec
ljmp
sbb
dec
xor
or
jne
mov
mov
xchg
pandn
popa
pop
scas
sub
jnp
and
xor
push
cmp
inc
mov
bound
adc
inc
pop
xor
push
add
fs
inc
mov
stos
pop
fbstp
cmp
mov
loope
xorl
cmp
add
add
lds
outsb
add
fldenv
dec
test
or
sub
jmp
testl
jne
xor
push
nop
es
out
int3
pushf
daa
mov
imul
and
lret
pop
je
cmp
pop
out
mov
cld
mov
pop
cmp
insb
call
adc
addb
filds
fcom
pop
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
adc
and
jle
mov
data16
jne
jp
lds
push
shlb
mov
jbe
cltd
push
and
sub
and
cwtl
in
enter
jb
out
xor
sub
int3
cmp
fdivs
repnz
pop
dec
out
shrl
pminsw
shl
mov
sti
dec
cmp
inc
mov
in
sub
sbb
push
push
and
rcl
mov
test
iret
bound
test
clc
rorl
push
cmp
fcomps
mov
xchg
adc
dec
aad
mov
dec
mov
pop
and
mov
scas
mov
dec
sub
outsl
xchg
fcompl
or
xor
in
mov
sub
pusha
jae
stc
pop
addr16
into
lods
mov
loope
mov
ret
into
and
adc
push
sbb
aaa
or
xchg
ss
pushf
sub
cmp
jbe
imul
push
jmp
xchg
dec
ljmp
sarl
add
ret
movsb
out
xor
mov
jnp
cmpsb
test
or
adc
scas
movsl
fisubrs
in
loopne
push
call
js
dec
addr16
xchg
gs
ljmp
xchg
in
out
lods
xchg
fildl
pop
rorl
add
adc
shrb
or
add
scas
rol
cmp
xchg
or
mov
and
ret
cmpsb
add
icebp
jp
pop
mov
pushf
pop
clc
mov
je
sahf
leave
pop
jp
mov
rclb
adc
mov
dec
dec
xor
xor
add
pop
jl
inc
lahf
js
mov
xor
inc
mov
cmp
out
lahf
aam
push
movsb
push
push
movsb
inc
add
insl
pop
dec
adc
mov
ficompl
jecxz
sbb
imul
das
push
add
es
xlat
fsubrl
fs
loope
mov
dec
dec
int3
adc
rolb
ret
adc
inc
fmul
push
xchg
sub
adc
and
xchg
add
mov
bnd
out
jns
pop
push
sub
test
push
xor
push
shrb
test
push
gs
inc
hlt
out
xlat
fs
rcrb
push
cmp
adcl
icebp
jle
adc
das
insl
or
jge
pushf
mov
xchg
pop
xchg
lods
pop
clc
ficoms
pop
xchg
pop
xor
insl
jle
in
adc
add
xchg
sbb
push
push
or
push
xchg
test
fcmovu
in
aad
jp
inc
jno
add
sub
dec
add
lea
push
fwait
mov
sbb
lea
test
arpl
push
cld
cld
jns
ret
mov
push
leave
and
out
xorl
fisttpl
push
push
pushf
negl
or
mov
testl
or
mov
repnz
imul
or
pop
jns
xchg
or
xor
dec
xor
sbb
xchg
gs
pop
pop
hlt
sub
ret
loope
mov
sbb
sarb
popf
rorb
lahf
mov
pop
lods
add
leave
call
aas
ss
scas
leave
into
push
sarb
or
rcrb
loop
sti
aaa
pop
sub
cmp
cld
test
inc
add
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
sub
or
jns
jle
mov
aad
or
nop
jl
push
pushf
inc
aad
mov
les
dec
test
dec
xchg
xchg
std
fs
popa
mov
jns
sub
outsl
mov
js
xchg
lds
jb
add
jp
or
fldt
je
dec
jle
es
fwait
cmp
and
mov
fdivp
fbld
jne
pop
gs
test
pop
mov
aas
fdivrs
xchg
lods
sahf
aad
xor
lret
cs
lahf
jp
movsb
les
cli
stos
addr16
cld
sub
lahf
je
ljmp
nop
aas
lret
insb
adc
cmpsb
mov
add
out
cmp
cld
adc
and
push
jo
jno
pop
cmpsl
lahf
push
add
mov
sti
testl
jbe
nop
inc
cmp
mov
ljmp
test
xchg
int
mov
and
hlt
fdivs
dec
push
mov
cmp
pop
ljmp
mov
ficoml
jbe
lods
mov
sub
sar
inc
add
lahf
mov
aas
and
nop
jmp
mov
dec
jae
lahf
sbb
lds
xor
sub
fwait
add
rorl
leave
dec
fists
lret
idivb
mov
xor
stos
cwtl
jl
mov
inc
push
test
dec
mov
mov
and
mov
es
dec
pop
cmp
jmp
dec
mov
dec
clc
clc
fnstenv
nop
lret
push
and
jb
and
mov
lods
fcoms
in
pusha
sbb
xchg
jno
sub
xchg
outsb
adc
repz
mov
mov
or
lds
push
filds
jg
andl
mov
fxch
into
cmp
add
mov
sbb
je
mov
movsl
push
push
or
lahf
inc
mov
call
aaa
lret
pop
inc
sbb
or
pop
sub
addb
and
cmp
jecxz
mov
lds
outsb
gs
sbb
dec
repz
jl
jmp
push
push
cmpsb
jmp
xchg
push
sbb
dec
rcrl
jae
sbb
mov
clc
push
insl
adc
mov
pop
retw
cltd
fbld
mov
push
fs
and
stos
jo
mov
push
mov
mov
fnstenv
jne
xor
addr16
scas
sbb
push
out
repz
mov
fstps
xchg
lods
jne
add
mov
ficoms
fstpl
and
fstps
movsb
andl
lahf
adc
xchg
cwtl
in
insb
lret
mov
mov
jnp
ret
lcall
sub
repz
loop
ffree
xchg
rclb
fs
mov
or
jmp
pop
cmp
jecxz
data16
lret
push
push
mov
fsubp
pop
push
rcrb
mov
imul
stos
bound
or
pop
xchg
xchg
cli
dec
sbb
xor
pop
sbb
xchg
sub
loope
faddl
fucomip
add
shll
dec
or
xor
iret
inc
inc
add
movl
inc
inc
add
rol
cmova
push
add
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
pop
fistps
adc
jle
hlt
jns
jle
hlt
and
sti
or
pop
xlat
enter
pop
push
cmc
mov
pop
adc
popf
inc
clc
mov
ds
xor
dec
mov
popf
addr16
sub
adc
sub
mov
in
push
push
xchg
cmc
inc
pop
jb
lods
int3
xor
lds
add
das
lcall
repnz
fdivp
sub
mov
adc
scas
pushf
jg
test
xchg
mov
aaa
test
xchg
lods
sbb
lahf
xor
mov
xchg
jnp
add
and
mov
dec
push
dec
mov
scas
fdivrl
or
pop
mov
push
out
ret
cmpsl
inc
sub
xchg
orb
popf
fwait
or
lods
cmpsb
fimull
push
mov
fldenv
push
adc
enter
std
mulb
cmp
sbb
pop
push
aam
jl
cs
insb
sbb
cld
adc
mov
mov
aas
mov
mov
mov
fldenv
or
mov
pop
fwait
add
repnz
xchg
sti
mov
mov
inc
mov
subb
pushf
adc
and
daa
add
adc
mov
lea
jnp
push
in
cmp
inc
adc
or
add
push
dec
mov
and
jg
mov
sub
fcompl
icebp
or
dec
cmp
jl
inc
lea
mov
jge
fsubl
test
add
add
or
add
mov
ds
jge
and
xchg
jb
mov
sub
dec
xchg
mov
dec
test
lea
adc
sub
xchg
out
inc
mov
stos
aad
scas
xor
dec
sub
xor
loop
das
stos
lret
test
push
sarl
cwtl
aam
test
bound
pop
pshufw
push
pop
jmp
and
andb
addl
xchg
addl
push
stos
outsb
dec
lock
mov
cmp
adc
aas
call
cmp
std
pop
adcl
stos
fucom
xchg
cltd
fiadds
xchg
cmp
push
xor
and
pop
ret
jmp
jns
and
mov
jl
pop
popf
or
iret
jecxz
mov
call
jecxz
cld
sarl
push
mov
out
or
cwtl
push
pop
adc
mov
xor
mov
mov
loope
xchg
ret
lcall
push
rolb
xchg
fidivrs
adc
push
pop
adc
test
adc
push
cltd
or
pop
rcrl
fiadds
mov
and
popl
sub
rorl
xchg
cmpsb
inc
popf
dec
das
push
or
shrb
or
push
jl
repnz
inc
push
mov
fnsave
mov
pop
mov
dec
cli
lret
jae
dec
jnp
fildl
push
in
jb
mov
iret
sbb
cmp
insl
cld
in
pusha
loope
in
imul
dec
inc
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
ss
push
cmpb
jle
data16
insb
ret
push
js
decb
insl
add
movsl
mov
fidivl
jle
and
jo
daa
add
lds
sub
clc
xchg
xor
insb
scas
jge
dec
testl
inc
iret
in
negl
inc
bsf
push
movsl
dec
lea
sub
sub
int3
jb
fadds
mov
nop
mov
push
push
rcrb
cwtl
leave
maxps
cmp
inc
cmp
cmp
bound
lds
or
test
outsl
add
sub
push
xchg
les
inc
sbb
icebp
pop
mov
into
dec
orb
dec
cmp
or
lods
and
xchg
mov
addr16
sbb
mov
dec
cwtl
adc
mov
aam
pop
push
aam
mov
inc
mov
jg
ret
xchg
in
cmp
aas
hlt
cmpsl
jge
out
jae
mov
lcall
dec
scas
lods
adc
cwtl
dec
or
imull
pushaw
insb
ret
pop
push
enter
int
sahf
cmp
sbb
jecxz
imulb
aaa
mov
push
dec
call
xchg
inc
sub
stc
xchg
and
fcmovbe
ljmp
mov
pop
ret
sarl
xlat
cltd
inc
sub
ret
mov
movsb
mov
out
shrl
mov
orb
mov
in
or
nop
inc
jg
cmp
adc
int3
adc
push
shll
add
jbe
mov
mov
pop
xor
and
pusha
push
rclb
xchg
ja
imul
mov
add
push
repz
add
xor
dec
in
mov
cmp
jle
mov
jmp
mov
cld
cwtl
mov
jl
movsl
insl
mov
mov
pop
cmp
lods
mov
cwtl
push
lret
pop
sbb
and
pop
mov
je
in
call
bound
jle
jae
jecxz
nop
mov
sti
bound
jmp
xlat
arpl
dec
dec
fsubr
leave
mov
pop
imul
mov
in
daa
and
filds
sbb
jae
xor
loop
rorl
pop
sub
fs
jp
mov
pop
add
sub
adc
mov
pop
xchg
xlat
mov
ret
jns
scas
mov
mov
clc
cs
inc
add
cmp
sbb
cmp
in
mov
dec
mov
xlat
xlat
mov
in
or
nop
inc
pop
jle
insl
hlt
cld
xchg
inc
jle
push
adc
xchg
lahf
push
mov
jle
negl
pop
imul
jecxz
inc
push
gs
subl
inc
pop
ret
in
gs
popa
pusha
out
mov
cmpsl
xchg
mov
adc
cwtl
push
mov
add
test
imul
pop
test
add
repz
incb
mov
imul
leave
adc
out
jns
jne
imul
lahf
outsb
mov
testl
cld
imul
aas
mov
pop
jmp
push
clc
clc
mov
test
adc
jnp
js
jle
hlt
jns
jle
cmc
loop
stc
out
xchg
int
shr
xchg
xor
gs
push
fiadds
inc
xor
dec
dec
ds
sub
pop
sbb
pop
sub
or
sub
fs
dec
xor
cmpsb
push
sti
inc
fdivp
mov
xchg
mov
xorl
enter
or
xor
inc
cwtl
mov
mov
mov
jmp
lods
shrb
mov
fidivrl
sbb
pop
out
inc
mov
pop
xchg
mov
xchg
fmuls
icebp
aam
pop
cmp
paddw
mov
cmp
pop
jle
add
adc
mov
mov
add
xor
xchg
or
mov
dec
js
test
dec
js
stos
leave
mov
lcall
cmp
movsl
lods
mov
insb
repnz
dec
sub
xor
lahf
add
cli
jno
adc
cltd
push
rcr
lods
aad
ret
jp
jo
jl
xchg
gs
mov
push
js
adc
xor
dec
mov
inc
xchg
sub
scas
jns
pop
or
in
cli
cmp
mov
test
push
test
mov
mov
sbb
inc
push
adc
movsb
cmp
sar
inc
mov
cmp
cmp
ret
mov
hlt
clc
mov
stc
inc
sbb
inc
jbe
imul
stc
aaa
pop
test
fdivr
xlat
in
sti
xor
push
cmpsl
pop
add
mov
pop
pusha
das
sbb
adc
pop
enter
fcompl
cmc
ss
xor
dec
mov
imull
mov
stos
into
adc
xlat
cmpsb
pop
inc
xor
enter
mov
inc
in
xor
jns
pop
pop
add
movsb
ss
inc
lret
dec
or
in
push
movsb
pusha
and
cmp
sahf
dec
in
adc
fwait
loop
dec
shll
mov
or
lds
mov
sub
xor
jb
adc
mov
movsl
dec
xor
rcr
mov
push
dec
cld
sbb
outsb
mov
lods
jmp
cmp
jmp
out
sbb
mov
sbb
sbb
test
ds
push
andl
loopne
pop
je
add
aam
or
in
pop
dec
xchg
mov
sub
cli
inc
adc
and
sub
fwait
sub
xchg
adc
hlt
mov
sti
movsl
mov
cmc
clc
ret
sub
iret
imull
std
scas
das
cmc
popf
fs
mov
jns
xchg
xor
sbb
cmpsb
mov
adc
test
xor
cmp
adc
andl
push
jno
xchg
sbb
mov
adc
jmp
xor
jmp
pop
mov
add
dec
aam
fmul
lea
add
inc
addr16
ret
add
sub
shlb
push
stc
call
xchg
cli
sbb
out
cmp
push
test
jl
ss
inc
adc
sahf
aas
mov
pop
add
pop
jge
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
aaa
stos
inc
or
pushf
jg
jle
les
adc
or
in
mov
fnsave
add
int
test
cmpsl
and
and
aad
and
jnp
ds
sub
mov
sbb
ret
mov
fldt
mov
mov
popf
adc
mov
int3
test
lret
mov
bound
xchg
adc
add
xchg
pop
xchg
mov
mov
lcall
sbb
sbb
inc
mov
popa
xor
pop
mov
lods
push
fstps
jge
xor
xor
add
push
sbb
es
or
fs
pop
in
sbb
mov
mov
mov
popa
xchg
mov
test
rcr
cs
push
pop
sub
xchg
sub
lock
call
aas
ljmp
stos
bound
fcom
out
into
das
xor
xchg
sahf
int
loope
cltd
inc
mov
stos
cmpsb
repnz
rcll
push
rcll
imul
cmpsb
in
das
btr
in
in
scas
cmpsb
jo
sarl
push
popf
and
xchg
mov
push
clc
fs
ss
arpl
dec
cmc
es
mov
pop
lcall
popa
sub
xchg
mov
add
sbb
pop
test
push
xlat
iret
in
add
mov
rcrb
mov
or
sub
xor
mov
loope
leave
gs
adc
sub
sti
iret
insl
push
mov
inc
adc
or
int
mov
lea
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
dec
mov
ret
jle
pushf
jg
jle
lahf
lds
dec
jno
in
sbb
sub
pop
adc
cli
daa
push
jo
cmp
cld
aam
repz
mov
clc
fdivs
mov
dec
in
ss
sti
fstpt
mov
or
addr16
mov
scas
daa
add
xor
jle
shll
pushf
sarl
dec
mov
int
xchg
outsl
and
sub
pop
dec
pop
out
adc
mov
cmp
pop
jle
movsb
mov
ret
mov
cmpb
adc
jne
cmp
loope
cmpsb
scas
cmp
cmpsl
sub
shl
and
pop
stc
xor
xorb
icebp
push
pop
cmp
dec
loope
dec
faddl
out
inc
and
sub
test
xchg
mov
pop
inc
call
mov
lods
jnp
scas
movsl
insb
pop
mov
mov
jo
sub
push
sbb
call
mov
inc
push
and
jl
rcrl
ljmp
mov
dec
push
mov
fisttps
pop
xchg
movl
mov
arpl
xor
and
scas
ja
push
cltd
mov
ret
mov
fldcw
jae
add
sbb
ds
aas
out
push
push
cmp
inc
rcr
dec
sbb
xor
pusha
add
mov
test
or
push
mov
adc
aad
out
pop
push
mov
and
repnz
cmp
fnsave
cwtl
cmpsl
cld
ss
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
stos
jno
pop
stos
inc
jle
popf
js
jle
push
call
dec
in
sbb
dec
sbb
int3
xchg
pop
adc
les
inc
add
jno
imulb
cmpsl
xchg
xchg
test
in
pop
push
or
and
cmp
jns
fdivrl
inc
xchg
insb
mov
mov
iret
cmpsb
notl
mov
pop
out
loop
ss
jne
mov
fcomps
fistps
push
sub
xor
ja
pop
test
inc
jo
mov
repz
or
mov
mov
and
test
mov
or
daa
into
adc
negb
movsl
fcoml
and
push
xchg
cwtl
lock
jae
mull
int
pop
add
push
xchg
mov
xorb
jne
jge
mov
pop
jg
out
mov
ret
mov
cmp
mov
xchg
xor
dec
sub
xchg
iret
lods
add
dec
push
in
mov
push
mov
xchg
pop
cmc
daa
mov
jecxz
pop
test
mov
or
mov
mov
cwtl
xchg
subl
xor
cmp
dec
shlb
cmp
cmp
xchg
out
lods
mov
xor
push
or
pop
pop
push
sub
lret
adc
dec
jnp
mov
jle
xchg
mov
fs
mov
fisubl
and
mov
enter
orl
add
push
inc
sub
xor
mov
repz
repnz
cld
sub
xor
pop
mov
dec
push
dec
sti
mov
pop
lods
lock
dec
jg
add
xchg
stos
je
and
out
idivb
sbb
sub
fsubl
lcall
or
and
ljmp
or
xchg
pushf
cmp
add
mov
jns
stos
lcall
mov
mov
and
lret
push
pusha
loopne
mov
xor
int
sub
dec
les
cmc
lock
dec
xchg
aas
adc
mov
ds
or
scas
push
add
sub
fcoms
mov
mov
mov
int3
hlt
inc
ret
and
aas
push
into
dec
lahf
fisttps
lods
mov
add
pushw
cmpb
add
inc
push
mov
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
xor
fidivrl
cmpsb
inc
xchg
or
pop
adc
ror
in
mov
and
dec
dec
nop
lahf
dec
adc
add
stc
mov
leave
adc
push
mov
push
je
push
fdivrs
xchg
pop
or
pop
pop
aas
adc
mov
adc
jb
sbb
loop
and
jno
dec
pusha
gs
stos
aad
inc
je
iret
sahf
cltd
lcall
fst
fnstsw
add
popf
outsb
adc
enter
xchg
aaa
or
lret
mov
imul
fs
addb
das
pusha
sub
scas
and
sbb
and
nop
sbb
dec
js
es
sbb
xorl
in
mov
out
jge
in
pusha
and
sub
loope
int
cmpsl
pop
sub
das
sbb
push
mov
sub
xchg
sbb
cmpsl
add
shl
dec
mov
sub
or
push
test
pop
mov
xchg
dec
fwait
mov
add
pusha
pop
fcomps
in
cmc
insl
mov
cmpsb
iret
dec
pop
and
out
dec
dec
rcll
xor
jnp
lds
xor
ljmp
mov
adcl
sbb
ret
cwtl
icebp
push
xor
sti
and
lret
lahf
push
pushf
cmp
adc
xor
and
andb
lds
cmc
vpandn
xor
cwtl
or
stos
add
push
cmp
jb
ret
iret
sub
push
cmp
or
outsb
add
rolb
adc
adc
mov
lock
call
fadds
in
mov
pop
cmpsb
das
mov
cmpl
je
fldcw
jmp
nop
mov
shlb
cmc
cmpsl
push
aad
mov
sbb
dec
inc
nop
stos
jb
push
mov
movsb
or
add
test
dec
out
scas
fs
std
mulb
enter
and
test
leave
xor
je
adc
mov
xchg
xor
mov
jb
loopne
inc
dec
push
cmp
out
fwait
outsb
jp
daa
je
in
outsl
inc
out
ret
es
or
jnp
and
mov
popf
dec
daa
dec
inc
inc
imul
push
loop
ss
push
pop
jle
outsl
push
xchg
lcall
mov
mov
inc
int3
dec
inc
sbbw
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
test
popf
js
jle
fbld
mov
jge
not
mov
out
loope
jnp
sbb
lods
and
pop
leave
pushl
push
hlt
cld
push
jg
mov
aas
loop
push
sbb
mov
addl
outsl
aas
rclb
test
sub
ss
mov
ss
cld
mov
btr
into
or
jg
and
dec
iret
fstpl
inc
jae
push
xchg
xor
imul
incb
sbbl
leave
xchg
jecxz
mov
jmp
dec
rorl
cmp
stos
mov
sbb
lea
xrelease
nop
or
dec
xor
cmp
out
repz
cwtl
cmp
ljmp
repz
test
insb
mov
jecxz
les
jno
scas
inc
sbb
jne
fptan
push
xlat
or
lods
mov
fcomip
cwtl
push
imul
inc
sub
iret
cmp
xchg
mov
arpl
mov
sbb
scas
jbe
daa
add
fwait
mov
repnz
inc
das
dec
inc
mov
inc
cld
jecxz
fldenv
rcrl
push
fistl
icebp
sbb
insb
lods
and
add
icebp
dec
lods
or
inc
sar
ds
ficoml
xchg
mov
and
jl
xor
sub
jmp
mov
xchg
and
aas
xchg
dec
adcb
addb
or
mulb
mov
fsubl
sbb
cmpsl
inc
jae
mov
sub
stos
sbb
inc
cmpsl
out
or
jbe
in
xor
into
or
subb
stos
pop
push
cwtl
in
adc
sbb
xchg
push
adc
nop
outsl
mov
ss
sarb
pop
sbb
popf
std
add
push
lods
push
xorl
mov
mov
out
xchg
push
mov
pop
jo
and
and
dec
stc
mov
dec
mov
int3
stos
mov
cltd
fnstsw
sub
popf
cmc
cmp
fisubrs
scas
test
mov
insb
fimull
jmp
dec
mov
icebp
or
add
repz
jecxz
test
fisubl
bswap
les
pop
dec
in
test
cmp
xchg
jl
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
mov
cwtl
pop
jg
jle
mov
mov
mov
pop
sbb
das
inc
negb
sbb
mov
sbb
or
cmp
xchg
in
cli
or
sub
ja
pop
imul
push
jecxz
jnp
xor
lods
mov
out
jnp
xor
ja
fadd
pop
cltd
dec
movsl
mov
lods
jb
xor
out
jb
adc
add
mov
and
sbb
sub
mov
mov
mov
in
pop
daa
add
pop
jns
ljmp
or
jb
lret
pop
int3
cmc
mov
gs
in
imul
push
xor
loopne
cmp
fwait
cmpsb
sbb
and
mov
jbe
inc
cmp
in
cmp
mov
outsl
mov
sbb
das
mov
xor
and
das
inc
fistpll
rcll
pop
lahf
and
dec
addb
xchg
fs
pop
mov
sbb
int
std
inc
lods
mov
jb
fsubp
lcall
inc
xlat
shll
rol
push
out
imul
mov
mov
mov
push
fadds
out
mov
movsl
push
insl
pop
push
push
into
test
push
divb
out
pop
lock
push
cmpsb
push
int3
xlat
int
and
mul
sub
dec
cmp
fldt
xchg
std
in
xchg
loope
out
movsb
and
shlb
orb
lcall
pop
add
xor
sbb
fstpt
dec
pop
scas
pop
iret
repz
in
jne
andb
xor
lcall
lret
mov
adc
pop
pop
or
jns
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
xchg
dec
in
ljmp
jle
jecxz
push
imul
ret
mov
fadds
loope
mov
cmc
inc
push
repz
xchg
xchg
out
xchg
push
lods
loop
and
push
jge
arpl
jecxz
mov
lods
xor
sub
adc
adc
jecxz
and
jae
push
push
sbb
mov
jae
xchg
sti
out
sub
cmp
dec
jbe
insb
add
push
xor
ret
lock
scas
mov
pushf
aad
pop
pop
loope
mov
test
pop
ljmp
sub
in
cmp
lcall
repz
mov
jl
insl
jb
negl
push
imul
rcr
add
aam
xchg
ljmp
and
add
pop
loope
ljmp
cmpb
enter
and
outsl
mov
shll
cmp
cli
or
rcl
ja
iret
add
outsb
cmp
jno
pusha
cs
dec
mov
ds
test
sbb
dec
fsubs
inc
ljmp
xor
fadds
push
push
je
dec
add
and
test
mov
dec
in
cld
jmp
dec
push
dec
inc
sbb
adc
pusha
fsubs
aam
mov
es
mov
inc
add
or
mov
loop
int3
and
pop
out
push
xor
add
roll
js
sbb
jno
mov
jg
jge
fwait
cld
pop
dec
or
sti
push
outsb
sub
bound
xor
mov
mov
addb
push
jbe
lds
jb
xchg
mov
pop
push
mov
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
jb
mov
aad
jle
pop
jg
jle
mov
xchg
xlat
test
sar
out
xorps
mov
add
add
mov
inc
outsb
jge
insb
dec
sbb
idivb
xlat
lahf
xor
dec
push
shlb
add
shl
leave
lods
adc
cmp
int3
xchg
jg
popa
mov
es
xchg
cmpsl
and
andl
insb
sbb
mov
loop
lret
or
cli
sbb
adc
and
add
jp
push
mov
jl
pop
aam
cmp
jg
ret
sub
sub
xor
sbb
gs
repnz
cmc
xor
sbb
dec
ficoms
enter
add
inc
push
dec
jge
ror
iret
in
mov
loope
pop
popf
sarl
popf
xor
mov
dec
cmp
js
call
push
mov
add
popf
imul
jle
js
cmp
pop
push
pop
jae
push
ss
mov
push
dec
add
cmp
jmp
sub
movsl
xor
scas
push
xlat
hlt
popa
push
mov
nop
hlt
xchg
inc
inc
sub
push
jbe
jne
int
test
je
inc
lock
shrb
inc
mov
add
xorb
psllw
pop
push
xchg
hlt
xor
lret
push
mov
pop
scas
jns
dec
push
int
mov
adc
sahf
cmp
push
repnz
rorb
pop
jo
shr
push
xor
mov
out
sbb
lcall
es
fsubrl
ds
add
shll
mov
pushf
insl
fs
fistl
fwait
subl
jnp
fbld
insl
mov
lcall
movsl
popa
ljmp
enter
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
push
push
jle
pop
jg
jle
mov
dec
sbb
sub
jmp
mov
or
lret
pop
call
mov
add
mov
incb
add
movsb
cmp
adc
aam
lahf
xchg
popa
xor
add
mov
fdivrp
jge
test
mov
add
in
push
jmp
push
or
or
andb
push
cwtl
pusha
cmp
inc
mov
ss
and
fdivrs
int3
in
fstpt
xchg
mov
mov
sbb
gs
push
inc
ss
dec
mov
mov
int3
push
cmp
push
push
mov
in
jp
rol
stos
jne
ja
mov
adc
xchg
dec
insl
pop
ds
movsb
and
lods
fnstenv
stos
and
push
daa
jecxz
sub
shl
or
ljmp
in
popf
jmp
jmp
pop
push
stos
jne
lahf
or
dec
add
dec
arpl
je
adc
repz
mov
ja
lds
popf
mov
into
pop
pop
adc
mov
sbb
imul
xor
jno
lock
mov
sub
in
mov
lods
aam
cli
js
mov
imul
push
test
or
dec
dec
add
loope
or
fs
stos
repz
out
movsb
lods
add
xor
push
aad
sti
xchg
cwtl
sub
sbb
nop
add
dec
mov
mov
and
movsl
mov
test
pop
stc
inc
jno
xor
cmovo
leave
outsl
ja
push
xchg
or
popa
int
es
pop
test
dec
ret
jo
rcrl
mov
xor
daa
adcl
mov
mov
jmp
cmp
jne
xchg
mov
bound
or
push
jle
pop
jg
jle
add
jb
ja
pop
push
push
cmp
outsl
inc
ds
pop
dec
mov
cmp
adc
xchg
cmpsb
je
jl
jbe
nop
pop
xchg
xor
mov
test
cmp
and
divl
fisttps
xchg
aas
test
test
les
cli
mov
ss
sub
into
aaa
sbb
cmp
in
dec
xlat
xchg
leave
es
aaa
sahf
or
test
xor
sub
lahf
mov
pop
push
lds
mov
ret
mov
sub
out
push
arpl
push
jo
test
lahf
push
xchg
aaa
test
push
pop
mov
ds
jge
mov
xor
cld
inc
fcomps
imul
or
addr16
inc
jmp
xor
and
mov
lret
nop
sbb
inc
scas
sbbb
pop
cmp
paddusb
pop
or
inc
hlt
stc
lcall
dec
out
sub
fidivs
movsb
popf
sub
pop
fldenv
dec
loopne
mov
pusha
ljmp
pusha
mov
inc
mov
xor
mov
pop
mov
mov
mov
dec
mov
mov
imul
popf
mov
call
sub
in
sbbl
mov
mov
inc
and
pop
jns
nopl
mov
cmp
int3
aam
mov
mov
cmp
or
jno
aas
pushf
rcr
pop
jo
fldl
inc
lods
cmp
xlat
and
scas
xchg
outsl
pop
sub
ret
loopne
leave
jae
rolb
mov
dec
add
add
sbb
adc
hlt
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
fidivl
jle
jle
pop
jg
jle
data16
fistpll
addr16
jg
lock
jnp
adc
into
mov
pop
jp
cmpb
pop
lds
jmp
adcl
sbb
into
inc
fwait
loopne
xchg
out
pop
sbb
jne
jmp
fistl
std
ss
fs
rcll
dec
jne
push
sbb
push
js
sbb
xor
sbb
xor
movsl
ss
lret
push
xor
movsb
inc
out
test
pop
xchg
mov
sub
sbb
sub
int
notl
insb
mov
negb
div
mov
inc
adc
or
sbb
sbb
dec
pop
dec
cmp
fbstp
add
or
and
jbe
movsl
insl
les
inc
push
mov
sub
loope
out
jp
dec
cmpsb
aas
jl
pop
mov
inc
in
insb
mov
adc
pop
scas
mov
inc
call
push
pop
shr
pop
hlt
cwtl
popf
push
lods
mov
pop
lds
xor
inc
cmpsl
std
jo
mov
jns
popa
cmpsl
nop
out
pop
adc
or
pop
pushf
imul
ret
daa
in
pop
inc
stos
jle
xor
ss
es
call
cmp
pop
sbb
out
aas
fwait
gs
xchg
cli
jae
push
jns
dec
popa
mov
addb
iret
out
movsl
and
fdivs
mov
mov
mov
push
popf
push
lds
inc
dec
es
mov
push
arpl
push
sub
jbe
cmpsl
les
inc
cmp
pop
mov
jl
jl
ss
fstpt
add
and
sbb
aaa
nop
adc
inc
lock
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
mov
aam
pop
pop
jle
pop
jg
jle
sub
and
in
jne
jo
or
dec
jl
mov
push
add
je
pop
test
mov
mov
idivb
sbb
repz
fcompl
xchg
shlb
ljmp
and
cld
xor
std
imul
cmp
and
cmp
xor
fstps
nop
ljmp
xchg
xchg
das
push
mov
sbb
lods
or
fldcw
std
pop
mov
sbb
jp
mov
jo
push
iret
test
sub
sbb
push
mov
dec
cs
xchg
cltd
sahf
push
loop
fsubs
mov
xchg
sub
daa
daa
cli
les
and
xchg
das
sbb
bound
repnz
xlat
jecxz
cli
movsb
into
xchg
xchg
cltd
jno
shll
sub
push
adcl
stc
imul
adc
inc
jg
cmp
and
stos
xchg
or
adc
enter
xchg
sub
inc
pushf
call
adc
fdiv
mov
lret
arpl
push
icebp
test
push
addr16
shl
int
call
mov
jmp
into
scas
add
subb
shl
sbb
mov
insl
or
lret
lods
movsl
mov
cmp
frstor
mov
test
pop
adc
jo
push
shlb
insb
test
or
pop
dec
arpl
movsb
fcmovu
lret
fcmovnbe
mov
and
stc
dec
lods
cmp
or
popa
out
icebp
cmp
sbb
std
dec
xlat
mov
and
cmpsl
and
lahf
adc
or
mov
add
insb
xchg
hlt
cmp
adc
xchg
shrl
std
jae
out
addr16
xchg
pop
test
sti
add
add
cmp
cltd
int
jno
ja
loope
out
cli
lcall
jle
adc
pop
inc
cmp
cld
xchg
push
pop
je
divl
mov
push
adc
cmp
dec
xchg
stc
and
and
es
mov
jle
xor
aad
stos
scas
insb
xor
jecxz
jno
sub
mov
add
clc
mov
and
pop
push
fcomip
loopne
jl
mov
repnz
rolb
mov
xchg
popf
sub
sbb
inc
push
dec
and
jmp
mov
loop
test
inc
inc
stos
mov
mov
sub
jp
out
cmp
jp
in
or
dec
int
pop
xchg
sahf
fwait
cmp
popa
scas
imul
rcll
fildl
and
pop
push
inc
ret
cmp
or
repnz
sbbb
ja
aad
mov
insb
clc
fwait
imul
sub
mov
hlt
inc
popf
pop
ss
addr16
jno
rcrb
inc
lods
add
out
jl
mov
ds
out
sti
popa
cmpsl
push
push
adc
and
aas
sub
push
test
pop
pop
jmp
cmpl
or
inc
mov
mov
repnz
inc
ret
addr16
jo
and
daa
mov
jl
mov
push
pop
jae
mov
inc
shl
cwtl
test
push
jae
scas
mov
push
mov
sbb
ficompl
fsubrl
cmp
mov
cld
in
jp
jno
lock
shl
gs
pop
out
xor
fisubs
int3
lret
jp
bound
pop
loope
jg
in
or
sub
dec
insl
mov
xor
into
es
cmp
mov
dec
mov
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fadds
pop
jle
pop
jg
jle
cltd
cmp
jmp
mov
ret
scas
mov
mov
aad
jnp
outsb
xor
sbb
setno
outsb
adc
cmp
add
fsubrs
and
cmp
ja
dec
sbb
mov
outsb
xchg
mov
lea
cmp
pop
ret
push
scas
xlat
cmp
push
sub
maskmovq
push
cltd
ljmp
jle
jo
jo
push
in
sbb
stc
cmpsl
xchg
mov
cmpsb
cld
outsb
xlat
push
iret
fwait
add
dec
sahf
adc
inc
sbb
jo
cld
out
dec
fdivs
lcall
mov
xor
or
mov
es
dec
xchg
push
imul
sbbb
adc
mov
stos
pushf
cmp
test
or
and
divl
xor
mov
out
or
in
sbb
pop
sub
fmull
je
popa
push
xchg
imul
decl
pop
push
data16
pop
popa
int3
es
sub
and
movsl
mov
loop
scas
addr16
sub
dec
push
add
and
xor
add
add
lret
mov
insb
inc
lret
sbb
push
pop
addr16
ja
bound
fstpt
mov
adc
push
adc
dec
pusha
lahf
popa
pop
sub
xor
push
clc
sbb
and
outsb
sahf
fmuls
sub
pop
cwtl
cltd
mov
xlat
pop
pushw
iret
gs
and
jp
mov
ja
ss
mov
out
xchg
or
loope
and
pop
movlps
icebp
fstp
popf
outsl
cltd
mov
pop
jl
loope
pop
cmp
out
jecxz
nop
ret
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fsts
or
add
cmc
add
add
loope
jmp
adc
mov
in
mov
mov
mov
test
loopne
xchg
outsl
movsl
add
and
sti
xchg
fcomps
mov
adc
pusha
inc
cmp
pop
cld
es
pop
fidivs
das
and
testb
je
pop
xor
xchg
push
sbb
xchg
inc
out
xlat
repnz
cs
insl
out
jae
in
mov
add
shr
dec
mov
xor
xor
je
push
fbstp
sbbb
rcrl
pop
imulb
and
stc
push
and
jge
jbe
add
iret
nop
out
arpl
test
fmull
jne
subb
dec
xlat
test
xor
inc
loop
and
mov
xor
ret
xlat
dec
jbe
repz
into
lods
mov
inc
dec
push
cmp
mov
sti
jle
inc
xchg
add
add
push
pusha
in
jle
cs
pop
ret
scas
sub
add
add
mov
das
bswap
dec
dec
jle
cli
adc
shl
mov
push
push
sahf
xor
aas
js
shl
adc
pop
call
sub
ss
or
xor
cmc
and
mov
sbb
push
loope
daa
cs
subl
mov
ficompl
and
arpl
mov
loope
test
xchg
or
loope
jne
xchg
mov
out
outsb
push
sub
pop
cltd
dec
dec
or
sahf
mov
pop
ror
jmp
push
loopne
rcrb
push
mov
scas
ret
mov
push
jns
jp
dec
jb
and
test
shll
repz
jns
mov
and
sbb
aam
mov
inc
loop
fiadds
adc
mov
cmpsb
xchg
add
add
adc
mov
adc
mov
jbe
add
cmc
add
add
movsb
jle
call
xchg
mov
add
add
mov
popa
sarl
mov
cwtl
out
pushf
jl
add
adc
adc
cwtl
aad
mov
int3
push
movsl
dec
mov
mov
xchg
pop
mov
or
pop
or
pop
pusha
bound
jnp
sti
cmp
lea
or
add
mov
add
fwait
cmpsw
aam
sbb
enter
inc
mov
loope
pop
movsl
jnp
clc
addr16
jno
xor
dec
mov
dec
or
in
jp
ja
fsubrp
and
lds
sbb
jno
les
loop
push
btc
lds
push
imul
push
xchg
icebp
dec
jp
fs
xchg
clc
cwtl
aam
mov
fs
pusha
repz
or
or
mov
xor
loopne
mov
adcb
and
add
add
subl
stos
dec
out
scas
loopnew
imul
add
add
add
es
inc
dec
xchg
sub
inc
mov
syscall
inc
mov
popf
loopne
cld
fsubrp
and
sbb
and
pop
stos
daa
aam
in
int3
dec
mov
add
adc
and
mov
in
jl
jp
test
add
cmp
jo
or
push
mov
mov
fimuls
push
xor
pop
jmp
js
sbb
lret
enter
outsl
orl
cmc
jmp
xchg
daa
xor
xorl
xor
push
mov
cs
lea
gs
ljmp
in
mov
and
or
stc
loope
cmp
pushf
daa
les
inc
imul
cmpb
rcrb
jl
mov
or
sub
xor
xlat
mov
cmp
add
pop
jae
or
leave
bnd
ret
in
pusha
jmp
add
and
adc
scas
inc
and
lcall
sbb
rclb
lcall
mov
and
rolb
xchg
mov
adc
and
sahf
add
and
das
orb
mov
shl
pushf
aad
push
jge
adc
xlat
lea
sbb
bound
pop
jno
xchg
gs
daa
xor
mov
xchg
dec
sahf
cmpsl
xor
fcompl
fs
add
sub
mov
loop
js
jl
cmpsb
mov
enter
imul
lods
pop
and
fidivrs
out
and
sbb
jle
xlat
add
cmp
dec
arpl
mov
or
test
xor
jge
jl
fmul
mov
jne
outsb
mov
lds
add
add
cmc
insl
cmc
out
lcall
sub
ds
add
add
cmc
add
add
inc
ret
leave
outsb
push
and
jnp
test
leave
and
adc
test
cmp
sbb
cli
inc
clc
jg
dec
xchg
scas
js
cmp
mov
js
push
mov
and
and
xacquire
test
cmp
push
sub
mov
sub
pop
or
sti
push
loopne
leave
call
lds
aas
adc
push
roll
test
je
and
inc
ret
xor
inc
inc
fiadds
adc
popa
inc
enter
fdiv
cmpsb
lahf
mov
mov
jbe
pop
cmc
push
loop
sbb
lret
and
jg
adc
scas
push
test
sbb
out
imul
ret
lret
test
icebp
push
mov
lock
xchg
xchg
ret
mov
mov
mov
das
pop
jl
push
add
add
add
outsl
jle
dec
xchg
call
aam
jmp
add
add
add
icebp
cli
dec
cmpl
dec
mov
cld
addr16
imul
cmp
adc
xchg
mov
nop
ds
idivb
pop
sbb
mov
dec
divb
push
add
push
jecxz
ds
sbb
loope
xlat
mov
jo
xchg
fldl
jne
xor
push
pop
test
fld
mov
push
lods
aad
mov
jnp
cmpsb
cmpsl
jne
cmovs
outsb
jae
sbb
cwtl
test
out
test
mov
lret
popl
sub
stos
push
or
enter
daa
ljmp
stos
icebp
repnz
loop
scas
cli
std
repz
mov
scas
ficomps
push
test
enter
jbe
fcompl
test
adc
fmuls
lret
push
fwait
jnp
add
or
and
scas
sti
jle
inc
sbb
push
aas
in
add
cmc
add
add
cmpsb
imul
jnp
dec
cs
mov
mov
mov
xor
inc
adc
jns
dec
mov
add
cmp
jno
adc
cli
aam
mov
mov
scas
mov
shrl
cmpsl
js
cmc
cmpsl
add
mull
pop
cmc
push
sbb
sub
push
xchg
mov
sub
adc
jb
test
iret
sahf
lds
ss
jecxz
push
sbb
adc
mov
sbbl
pop
mov
out
xor
movsl
cmp
cmpsl
addr16
cwtl
adc
js
test
mov
out
ror
sbb
push
iret
shrl
pop
xchg
or
pushf
sub
rolb
and
pop
sbb
addl
mov
aad
jnp
sub
ss
movsl
in
lea
imul
cmpsl
in
xchg
sahf
pop
in
add
add
negl
lahf
aad
sar
xor
add
cmc
add
add
inc
xchg
dec
inc
inc
rorl
adc
pushf
movsb
mov
popf
jge
lret
adc
cmc
addb
and
inc
repz
mov
fidivrl
shlb
pop
adc
cmp
dec
cmpsl
push
fisubrs
xchg
js
mov
inc
push
cmc
mov
xor
pop
xor
mov
das
addr16
loope
testb
movsl
sti
cmc
cld
int
ds
popa
sbbl
outsl
jno
int3
jg
push
lock
outsl
cld
mov
int
in
push
mov
lea
or
cmp
icebp
xor
out
clc
inc
mov
mov
mov
sbb
push
push
add
inc
outsl
jne
and
mov
sti
icebp
mov
mov
mulb
in
mov
push
dec
sbb
mov
add
add
push
jl
jle
insb
pop
decl
daa
sbb
imulb
out
add
cmc
add
add
in
lret
out
cmpsb
pop
push
pop
pop
sbb
test
sbb
mov
pop
push
jae
sbb
jae
inc
xor
aad
cltd
dec
shlb
cwtl
shrb
mov
scas
dec
adc
push
divps
add
mov
mov
mov
xor
adc
jp
xchg
or
mov
and
adc
into
pushf
inc
add
sub
dec
mov
cltd
xchg
lds
mov
lock
not
cmc
xchg
inc
add
sub
notb
dec
out
push
jmp
ret
cwtl
out
es
add
std
fs
enter
clc
outsl
mov
leave
mov
testl
or
push
cltd
mov
mov
mov
sub
cmp
inc
jl
jne
jle
add
add
add
fwait
mov
pop
ljmp
push
out
add
cmc
add
add
es
jl
mov
add
xchg
or
xchg
xchg
inc
xlat
into
push
iret
xchg
adc
out
jns
push
or
xlat
adcb
movsb
mov
int3
mov
lock
movq
xchg
or
outsb
inc
scas
mov
sahf
aam
ret
push
inc
cld
xlat
or
push
int
sub
dec
adc
in
loope
movsb
shl
out
lret
call
aas
hlt
fcomps
jae
add
inc
aas
sbb
cmpsb
in
dec
push
mov
loope
sub
negl
cmpsl
xchg
out
lcall
xchg
ret
scas
scas
jo
and
movsl
mov
jg
fwait
mov
mov
cmp
or
std
adc
push
cmp
dec
jecxz
daa
leave
arpl
je
ljmp
dec
pop
push
and
xchg
ss
les
testl
add
add
data16
jne
mov
gs
les
ljmp
add
jmp
jno
jle
pop
dec
cmp
and
test
orl
ss
lock
xor
lock
cld
rcll
scas
inc
in
mov
ss
push
fcomip
jns
xchg
pop
sub
or
or
sbb
push
sbb
mov
lret
movsl
xchg
xor
ret
sbb
cmpsb
es
cmc
cmc
cmp
inc
mov
and
mov
mov
sbb
imul
add
js
scas
push
or
pop
push
xor
jae
negb
add
push
fsubrs
fcompl
cmpsl
ds
imul
sbb
ss
xchg
fdivs
mov
fcomi
fwait
cmp
imul
outsb
fidivs
inc
into
mov
test
rcrl
mov
jne
xor
xchg
test
add
jnp
add
jnp
sti
xchg
rol
imul
add
cmc
add
add
jle
test
xlat
inc
mov
push
sti
and
cwtl
imull
ficompl
dec
sbb
ljmp
mov
data16
mov
mov
movsb
xor
pushf
push
or
cwtl
ljmp
mov
pop
or
jmp
inc
xchg
add
ret
sbb
push
dec
cmp
pusha
mov
sahf
add
xchg
xor
push
cwtl
and
icebp
jnp
dec
xchg
inc
xor
push
out
cli
loopne
cli
adc
mov
pop
daa
and
jnp
push
jnp
mov
ret
xor
rol
and
mov
mov
scas
into
jae
popf
sbb
push
les
mov
out
mov
mov
add
outsb
pop
imul
xor
out
push
pop
xchg
xor
xlat
test
xor
jne
scas
or
je
add
sub
pop
sarl
test
sub
icebp
add
cmc
add
add
push
pop
lods
fisubrl
valignd
mov
jg
dec
push
inc
mov
cmp
mov
repz
leave
aas
adc
mov
xchg
je
int3
jo
lret
inc
mov
shl
cmp
fimull
add
jge
xor
popa
cmp
int3
sbb
push
cmc
loop
subb
mov
adc
or
push
mov
andl
imul
dec
xchg
pop
or
loop
mov
sub
iret
scas
xchg
sub
pop
sahf
push
inc
stos
mov
jle
out
sbb
cmp
outsl
sbb
sbb
aam
xchg
push
mov
out
pop
sbb
cmc
push
in
dec
push
fisubs
cmc
pop
and
xchg
jl
pop
test
mov
push
pop
fmuls
repz
sub
and
jo
je
xchg
out
subl
outsb
add
add
repz
std
repz
xchg
scas
fldl
lahf
repnz
cmc
add
add
ljmp
xchg
jg
dec
push
fwait
orb
pop
dec
sub
stos
enter
clc
push
or
or
movsb
jns
hlt
push
aas
pop
enter
je
add
sbb
int
rcrl
or
cmp
sub
gs
inc
jns
add
sbb
lea
xchg
outsb
mov
add
shrb
rsqrtps
xor
test
mov
and
cli
adcb
cmc
mov
and
mov
shll
jo
jg
call
jo
mov
push
das
mov
dec
cs
fistpl
xchg
jbe
int
cmpsl
push
push
data16
adcb
scas
adc
push
das
aaa
pop
mov
pop
fcmovnb
push
xchg
push
cmp
das
lret
popl
add
add
lock
cmp
or
mov
repz
cmc
add
add
pop
xor
enter
xchg
movsl
fs
sub
fisubrs
push
xor
mov
cmc
cmp
rorb
mov
cmp
inc
sti
or
icebp
jecxz
repz
in
fldenv
test
add
xchg
pop
pop
hlt
ret
rol
add
test
mov
fs
scas
cli
add
mov
mov
dec
fs
xor
and
adc
mov
lahf
aam
mov
xor
dec
psadbw
mov
add
mov
mov
mov
cwtl
jp
mov
mov
push
mov
push
test
push
shll
dec
loope
or
pop
clc
xor
outsb
jmp
push
inc
xor
ret
dec
sbb
movsb
jge
dec
daa
add
cld
or
add
insl
lcall
lret
sbb
aad
in
sbb
fdiv
add
cmc
add
add
dec
and
pop
push
push
jge
aad
add
mov
insl
jmp
in
hlt
xchg
enter
jmp
push
cld
aad
iret
sti
push
mov
andl
arpl
ret
xor
mov
dec
push
dec
xor
loopne
or
or
cmpsb
jle
aad
push
or
enter
loop
leave
int3
pop
inc
leave
cmp
mov
jns
jb
cmp
mov
das
mov
or
mov
adc
inc
xchg
jle
sbb
add
mov
data16
loopne
mov
in
lds
jmp
lahf
pop
xchg
hlt
xlat
add
ljmp
js
push
aas
xor
mov
loopne
push
leave
aas
test
add
loopne,pn
cmp
aad
mov
icebp
in
lret
or
adc
fildll
cs
das
jns
add
add
xchg
in
mov
pushl
comiss
cmc
add
cmc
add
add
lcall
test
cmp
ret
mov
mov
mov
xchg
sub
fidivl
inc
rclb
adc
xor
outsb
inc
out
xor
cmp
sub
scas
aad
aad
inc
xchg
aad
sbb
and
jb
xchg
lds
xor
push
xchg
dec
aad
sti
pusha
push
out
into
mov
jbe
mov
popa
jle
movsb
lcall
test
scas
sbb
jl
cmp
cmp
cmp
movsl
push
push
pop
mov
pop
stc
pop
pop
gs
push
sub
or
sub
push
popf
out
cli
fs
cwtl
xor
mov
adc
enter
in
into
push
add
mov
insl
mov
mov
dec
cmpsb
mov
lods
test
sbb
push
cmp
sbb
add
sub
in
negl
push
inc
push
xor
sub
testb
cmc
add
add
out
ljmp
fmulp
decl
std
jo
ret
or
pop
jge
mov
orb
jge
in
outsb
imul
mov
add
arpl
daa
aaa
xchg
movsl
outsl
shl
push
push
or
push
mov
add
xchg
pop
pop
imul
fwait
jo
imul
loopne
mov
movb
adc
and
outsl
scas
rcpps
and
loopne
leave
stos
lret
orl
sbb
or
enter
mov
adc
jle
ret
dec
fwait
or
repz
movsb
sbb
mov
pop
or
rolb
stos
xlat
nop
shlb
push
mov
movsl
cs
fdivrp
pop
xorl
xchg
lret
insb
popf
sbb
addb
xchg
dec
xchg
pop
int
shlb
add
add
mov
nop
fmull
out
testl
add
ljmp
sbb
sahf
aad
ljmp
push
out
stos
je
loope
aaa
je
mov
push
inc
jl
inc
sub
push
mov
cmpsl
leave
jecxz
add
xor
xor
nop
lock
bound
jnp
popf
add
je
sarl
or
jbe
push
xor
ds
and
inc
gs
mov
xchg
ret
xchg
dec
icebp
xor
push
mov
fnsave
and
negl
pop
mov
xor
push
mov
jne
or
mov
push
dec
fsubrs
xchg
jnp
jge
jo
je
in
push
or
pop
sbb
ss
mov
cld
xor
mov
inc
push
inc
mov
das
iret
jns
mov
lret
xor
sub
clc
mov
xor
movsl
pop
adc
aad
fstl
mov
push
or
sbb
push
and
pop
loope
add
cmp
mov
push
add
adc
xor
clc
add
cmc
add
add
fidivrl
popa
dec
out
ja
icebp
imul
jmp
inc
and
and
push
jb
mov
mov
add
sbbl
add
imulb
sbb
push
cs
test
sbb
lcall
scas
int3
pop
popa
xor
cmp
int
mov
mov
jne
mov
sub
imul
add
add
jb
shl
inc
pusha
pop
in
test
js
das
mov
xchg
mov
push
aam
test
orb
dec
and
mov
xor
rcr
sarl
push
xor
push
insl
adc
push
cmp
in
ffree
bnd
adc
repnz
fwait
incb
fisubs
ret
xchg
mov
jp
ret
xlat
xor
std
xchg
inc
stos
stos
hlt
ja
mov
stos
sbb
add
add
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
lahf
test
into
push
jne
fwait
add
and
mov
shrl
jge
and
mov
loopne
pop
xor
cwtl
cwtl
inc
cltd
call
sub
fcmovnu
or
jg
pop
jle
lea
or
mov
mov
movsl
cmp
or
popa
sub
aad
hlt
aad
add
fs
ja
sti
lods
mov
xchg
xor
lods
adc
lea
in
out
adc
ss
or
pop
psubq
roll
xchg
vpsubd
pop
cltd
xor
imul
xchg
xchg
or
ds
sub
cmp
icebp
sbb
jbe
xchg
fcoml
fsub
mov
jp
jg
fs
inc
test
lea
aad
ret
dec
inc
cmpsb
add
add
mov
push
decl
push
lret
cli
add
cmc
add
add
push
ja
and
popf
pop
mov
xor
cli
insb
jno
xor
mov
je
pushf
push
dec
mov
inc
lds
inc
mov
cmp
adc
fbstp
dec
add
add
dec
out
test
sub
loopne
and
jmp
dec
pop
nop
lock
sbb
xchg
inc
test
xchg
arpl
jae
fwait
push
push
mov
lahf
cmp
shrb
inc
add
cwtl
xchg
movsb
mov
flds
pushf
xchg
lods
jl
jbe
cmp
out
xor
jne
mov
add
mov
rcll
xor
aas
nop
jae
push
addr16
cmc
insb
aas
mov
aam
push
jbe
popa
cmpsb
lds
push
loop
repz
adc
mov
lds
iret
inc
aaa
insl
and
ljmp
pop
add
add
jmp
in
dec
dec
ret
orl
add
cmc
add
add
push
cs
mov
in
add
loop
lds
lret
popa
arpl
adc
pop
nop
sti
int
add
shlb
daa
rcrb
in
cltd
push
es
loop
xor
inc
mov
sub
inc
hlt
aaa
mov
and
int
adc
pusha
jg
sub
push
aad
lock
mov
lret
test
jae
jo
lahf
mov
xchg
out
lahf
shlb
xor
mov
sbb
mov
cmp
dec
sahf
sbb
sub
scas
adc
cmpl
xchg
lea
adc
icebp
loope
repnz
jmp
int
insl
pop
mov
inc
cmpl
jmp
add
iret
xchg
and
pop
mov
shrb
or
mov
and
sub
sub
sbb
cwtl
cmc
dec
fdivs
and
add
add
outsb
xor
or
data16
subb
cld
add
cmc
add
add
pop
cwtl
inc
pusha
mov
fidivs
les
ret
test
xchg
cmp
fwait
push
and
sbb
test
inc
mov
jnp
mov
movsl
loope
inc
xlat
xchg
xchg
inc
mov
test
mov
fdivr
and
jecxz
aaa
cld
stos
hlt
mov
stos
pop
mov
xchg
xchg
ficoml
lret
jmp
lods
or
sub
push
sbb
add
andl
cmp
adc
in
ljmp
dec
jle
pop
lods
repnz
and
fldl
and
xchg
sahf
cmpl
mov
ret
ds
push
cmp
inc
repz
test
dec
jb
dec
popa
arpl
cmp
mov
pushw
dec
xor
xchg
jno
inc
mov
loop
cmp
add
add
inc
ror
lock
jnp
jmp
sbb
clc
test
jns
add
cmc
add
add
das
hlt
push
add
add
jl
inc
int
mov
cld
das
lret
mov
add
lock
pop
dec
cmp
aad
insb
movsl
and
mov
cmovb
xchg
xchg
jl
inc
int3
inc
adcb
xor
xchg
cmc
push
sub
xchg
into
mov
fstpl
stos
scas
fisubrl
dec
xchg
cld
jb
or
das
clc
mov
das
aam
mov
lea
stos
pop
scas
mov
dec
out
loopne
xchg
mov
rorl
pusha
testb
imul
pop
aad
inc
ljmp
insl
cmp
inc
cltd
enter
data16
cli
mov
sub
add
lea
xor
jp
add
xchg
push
pop
lret
repz
and
iret
loop
pushf
repz
adc
and
jbe
add
add
repz
fimuls
mov
mov
add
add
add
ss
sti
stc
lgdtl
ljmp
insb
in
cld
repnz
adc
shrl
nop
icebp
stc
dec
cli
nop
push
cmp
mov
xchg
lcall
jl
cmp
lret
ds
xor
repz
or
or
mov
outsb
enter
dec
iret
xchg
xor
dec
rcrb
jg
xor
cmp
mov
rcrb
mov
out
xor
loope
mov
or
roll
rorw
inc
sahf
adc
pop
fimull
lret
in
inc
pop
stc
xor
jl
imul
push
in
stos
decl
mov
xor
popf
xchg
cmp
insb
inc
out
sub
cmp
add
jmp
mov
lods
xchg
lds
mov
cmp
rcl
fcmovbe
jns
cmpsl
mov
imull
add
out
xchg
jns
fists
add
cmc
add
add
ja
lcall
jns
testl
xchg
add
xchg
push
cltd
and
dec
insb
fistpl
pop
shl
lods
das
jp
and
leave
sbb
cli
xor
mov
subb
in
in
pop
push
in
dec
xchg
and
aaa
dec
leave
in
inc
clc
push
push
xchg
gs
push
cmp
ja
jae
and
bound
enter
push
xor
jno
shl
fistpl
dec
adc
mov
dec
je
xchg
cltd
adc
jecxz
xchg
push
inc
js
fwait
stos
sbb
aas
mov
shll
sub
adc
adc
and
cmp
cmp
fwait
shll
push
andb
or
incl
imul
push
xlat
inc
into
push
icebp
cwtl
lds
or
insl
inc
and
xchg
movb
add
scas
push
repz
cmc
scas
mov
cmpsb
loope
pop
add
add
add
add
adcb
add
push
push
mov
je
inc
int
adc
lods
sub
xor
scas
loope
mov
jnp
loop
jnp
in
sub
mov
sbb
movsl
mov
out
test
ljmp
xchg
clc
in
cmc
test
or
or
js
pushf
xchg
pop
dec
stc
jp
clc
sbb
fdivr
mov
fdivrs
inc
pushf
xor
stos
dec
stc
loop
out
cmpsb
sub
jb
cmpsl
into
dec
cmp
jp
xor
lea
shrb
pop
in
ljmp
or
repz
les
cmpsl
ljmp
push
inc
or
repnz
xchg
jge
inc
add
add
pop
xchg
bnd
push
popa
test
pop
cli
inc
xchg
stc
cmpsl
test
pop
xor
inc
add
or
adc
mov
xor
add
add
pusha
rorb
lea
cmp
cmc
add
add
scas
out
jmp
rorl
add
das
in
mov
sub
mov
adc
mov
mov
sub
addr16
push
sub
cmpsb
fldl
out
fstps
and
lods
leave
stos
jl
push
mov
scas
cs
rcll
daa
test
xlat
cmp
repnz
enter
and
andb
cmp
cmpsl
cwtl
sar
adc
aam
pushf
mov
shl
jmp
test
fabs
ljmp
cmpsl
pop
jbe
mov
xchg
push
or
out
xchg
idivl
cmp
imul
xlat
lods
pop
inc
sub
add
jg
sub
cmc
cmp
mov
inc
xchg
pop
fnop
roll
jg
push
push
in
ret
outsl
rol
mov
mov
push
push
pop
mov
imul
adc
mov
test
add
add
gs
testl
adc
add
cmc
add
add
fcmovu
add
cltd
xchg
notb
iret
arpl
clc
push
mov
test
jmp
push
cmp
xor
js
ret
js
mov
ljmp
jmp
pop
lcall
xchg
stos
adcl
xor
loopne
nop
scas
push
movsl
mov
pop
notl
push
jb
mov
mov
lock
or
xchg
bound
mov
mov
push
movb
jb
add
add
jecxz
es
aas
adc
pop
xorb
negl
rclb
lods
cmpsl
cmpsl
pop
clc
jns
test
sahf
adc
popf
mov
or
xor
push
or
mov
jnp
jge
xchg
out
pop
cmp
ficoms
sub
lods
inc
or
loop
mov
mov
push
pop
call
into
add
add
xchg
mov
jle
sbb
loope
xchg
add
add
add
add
cmc
pop
cmp
lods
add
int
fidivs
mov
cmp
inc
sbb
push
into
pop
inc
inc
out
pop
cmpsb
pop
mov
push
inc
pop
scas
repz
leave
mov
xchg
cmp
cmp
or
jle
mov
pop
fisttpl
enter
mov
lock
int3
repz
xorb
push
out
pop
repz
mov
or
test
test
adc
pop
in
mov
mov
xor
xor
stos
dec
adc
push
dec
sar
pushl
aad
and
cwtl
sti
jmp
adc
mov
pop
cwtl
nop
pusha
stos
ljmp
pop
and
and
add
sub
mov
xlat
mov
xchg
shrb
mov
cmp
sbb
inc
ja
iret
add
add
xlat
aam
shlb
pop
sub
add
cmc
add
add
jnp
rcll
mov
push
pushf
mov
or
jmp
inc
adc
xchg
pop
lcall
add
fidivrs
dec
nop
icebp
push
dec
into
cmpl
or
add
push
es
or
jbe
cmp
xchg
dec
mov
inc
popf
sub
sahf
dec
xor
mov
mov
loop
out
pop
les
push
out
sbb
xor
subl
jns
imul
push
mov
mov
fmull
jl
lock
mov
shlb
lret
add
sub
fdivrl
cmp
sub
sbb
sbb
pop
int
xchg
test
add
mov
adc
fimull
jbe
mov
push
push
loop
mov
jg
pushf
pop
mov
and
pop
scas
nop
fsub
fidivrl
xchg
addr16
xor
push
push
jae
add
jbe
push
inc
pop
jns
aas
fisttpl
inc
xchg
lds
and
add
xchg
lahf
xor
inc
dec
xchg
jae
ret
pop
in
jl
push
adc
imul
decl
imul
cwtl
les
inc
fwait
orl
adc
inc
jno
sub
dec
and
and
ret
aaa
not
repz
dec
or
imul
jns
pop
add
ret
std
push
add
inc
cs
inc
out
lahf
mov
fistpll
lea
movsb
dec
adc
xor
sbb
xor
out
lret
jg
sahf
adc
sbb
lods
mov
je
repnz
ljmp
aaa
lock
scas
mov
inc
pop
out
sbb
xor
hlt
and
xor
cmp
test
addr16
repnz
fbstp
push
pop
ror
mov
cmpsl
imul
push
cld
push
test
add
add
jnp
mov
and
mov
push
push
add
cmc
add
add
cmp
cmp
rolb
rorb
xlat
mov
lahf
repnz
inc
mov
sbb
mov
or
inc
rcrb
dec
imul
sarb
jbe
test
out
pop
cmc
lea
imul
cmc
popf
jo
les
test
mov
out
dec
xor
fs
jmp
clc
inc
fucomi
lret
add
dec
jne
orl
jb
adc
cmp
xor
xorl
popa
cmc
adc
lahf
mov
sarl
xchg
sub
into
pushf
pop
lods
sbb
cmp
aas
or
pop
inc
mov
add
mov
adc
xchg
ds
ret
imul
sbb
js
aas
mov
shl
sbb
push
movsl
jno
xchg
adc
add
imul
adc
flds
or
add
cmc
add
add
lds
repz
test
test
jnp
add
int3
sub
int
xlat
lret
mov
adc
push
shlb
jno
and
mov
mov
aam
das
inc
loope
xor
jo
into
in
mov
cmp
cmp
addl
adc
test
sti
outsb
or
pop
add
jmp
jno
adc
sub
cmp
xchg
leave
loop
cmp
lods
scas
pop
addr16
jmp
insb
fisttpl
or
add
insb
pop
sub
in
dec
mov
sub
xor
mov
jl
push
cmp
por
es
aad
xchg
inc
stc
je
leave
jmp
in
ss
call
xorb
test
cmp
dec
and
int
sti
aas
or
sub
push
sbb
jp
pop
insb
push
add
add
fdiv
mov
lock
jno
or
add
add
add
testl
in
push
cmc
jne
ret
ret
movsl
mov
stos
das
in
mov
xchg
mov
mov
dec
shrb
sbb
enter
test
jo
fists
mov
xor
sbb
jecxz
gs
sub
inc
dec
mov
cwtl
pop
scas
cmp
inc
and
sub
push
push
stc
fs
movsl
mov
adc
out
xor
pop
call
lock
dec
mov
test
movb
xor
adc
add
scas
ret
add
movsl
cmp
push
jmp
aaa
jl
cltd
in
rcl
imull
int
add
push
shll
dec
inc
sarl
pushf
je
cwtl
push
lea
or
stos
adc
xor
in
sub
mov
stos
repnz
in
int
cld
add
add
add
mov
stc
aas
sub
add
cmc
add
add
dec
pop
mov
or
cmpsl
inc
and
loopne
test
test
xor
ljmp
cwtl
hlt
mov
push
scas
push
daa
lahf
cmc
std
pop
push
cli
cmp
loop
jne
mov
mov
dec
push
rcl
mov
iret
lcall
std
pop
xor
and
ret
jb
pop
push
sahf
dec
cwtl
adc
inc
jbe
adc
jnp
jmp
pop
lds
into
in
cs
add
sub
sub
mov
clc
dec
insb
sbb
enter
sti
xchg
scas
test
jp
aam
dec
fidivrs
dec
data16
mov
addr16
or
test
sahf
pop
int3
in
movsl
scas
add
adc
mov
xor
inc
ss
stos
and
jle
fdivp
and
pop
push
xchg
inc
inc
ficompl
add
add
push
pop
push
jmp
sub
mov
cmc
add
add
adc
pushf
cmp
cltd
xchg
push
std
cmpsb
roll
push
or
pusha
and
sub
fs
cmpsl
add
dec
sbb
add
inc
test
ror
add
mov
decl
out
cmp
cwtl
clc
xlat
lea
lods
pusha
leave
pop
lods
inc
mov
push
out
xor
add
ljmp
push
add
jge
std
cltd
mov
psrad
inc
mov
sar
repz
dec
mov
xchg
or
sti
jg
jp
cmc
xchg
aad
cmp
or
and
jnp
popa
mov
cs
fs
or
xchg
xor
sbb
xor
jbe
es
and
sbb
adc
inc
lret
push
scas
or
cmpsb
sbb
or
xchg
xchg
jmp
mov
sub
or
mov
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
mov
or
add
add
add
mov
cmp
add
clc
jnp
in
frstor
stc
sub
imul
inc
sahf
xchg
popa
sahf
xchg
mov
xchg
clc
mov
sbb
inc
arpl
sbbl
pop
lahf
dec
push
mov
sbb
mov
adc
cld
repz
and
jb
push
ds
jno
out
push
loope
out
sub
sub
rorb
aam
mov
inc
cmp
dec
jbe
fdiv
jp
shll
push
cmp
mov
xor
cmp
rorl
xchg
lahf
inc
sub
mov
jecxz
mov
ror
nop
rsqrtps
mov
mov
outsl
subb
add
mov
inc
scas
jns
cmp
push
in
ljmp
stos
pop
xchg
dec
sbb
xchg
fisubl
andl
jb
or
jns
mov
dec
push
in
sub
add
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
jno
pushf
imul
add
add
outsl
xchg
adc
sub
or
test
xchg
push
ret
repz
xchg
inc
mov
add
mov
dec
push
dec
or
jns
lock
shll
xor
push
es
ret
repnz
mov
mov
adc
mov
aaa
int
cmp
add
inc
jno
aaa
stc
adc
in
das
pop
pop
test
aam
add
outsb
adc
fs
daa
inc
jne
mov
pop
hlt
and
jnp
in
lret
pop
sub
dec
ret
or
xor
icebp
mov
fsubr
inc
inc
das
imul
jno
ss
xchg
loop
adc
cmc
aam
mov
adc
rorb
add
aam
xlat
out
in
mov
sub
in
scas
stos
push
ret
jecxz
inc
pop
add
in
leave
sbb
push
adc
or
add
add
aam
int
xchg
clc
pop
and
leave
or
add
add
add
or
aam
cmp
dec
mov
pop
mov
mull
push
inc
out
std
and
icebp
xchg
xor
mov
jne
mov
sub
ja
sub
dec
xchg
shll
bnd
jb
ds
ljmp
mov
stos
ja
mov
dec
test
cltd
mov
jno
popa
cmpsb
push
sbb
sarb
mov
xchg
or
sbb
rol
sbb
aad
cmp
jno
or
arpl
test
pop
push
mov
fsubs
lret
and
repz
push
imull
cmp
ret
rcll
sbb
or
inc
sub
xor
mov
test
cli
push
adc
push
cli
fcmovnb
jb
mov
sbb
hlt
push
adc
add
add
arpl
addr16
inc
jmp
xchg
mov
add
add
insb
imul
push
push
push
pop
sbbb
xchg
mov
lret
jae
andb
bnd
arpl
dec
leave
mov
jg,pt
push
lock
out
cmp
dec
xchg
sub
or
pushf
mov
inc
dec
ret
or
jl
shrl
mov
jo
lret
cli
imul
loopne
mov
add
mov
call
sbbb
dec
dec
out
mov
aas
sbb
mov
in
scas
jl
loope
popa
inc
divl
xchg
iret
inc
testl
nop
or
pop
cmp
jl
and
insl
das
xchg
imul
out
shlb
test
dec
lret
cli
es
xchg
pop
xchg
cmp
push
push
xor
sub
sbb
pop
mov
jmp
hlt
pop
sub
mov
or
add
add
out
out
pushl
jecxz
push
pop
mov
add
add
add
adc
mov
sub
arpl
xor
mov
push
outsb
xchg
mov
pop
and
add
add
sub
loop
insb
jo
xor
mov
mov
jmp
mov
sbb
jge
imul
sbb
les
push
pushf
ljmp
int
xchg
enterw
leave
loop
mov
add
sub
pop
jne
xchg
lods
jno
setns
ja
add
daa
push
imul
aas
add
imul
xchg
adc
stc
repz
pop
push
cmp
xchg
mov
sub
jno
inc
int3
jnp
out
push
aaa
in
mov
enter
pop
int
lods
jnp
xor
jl
outsl
cmp
pop
mov
and
sub
mov
or
aaa
jge
orl
adc
out
sub
out
lret
xchg
mov
js
pop
add
add
push
scas
out
mov
shrb
sgdtl
cmc
add
add
add
add
ljmp
add
xchg
cvttps2pi
add
std
sbb
cmp
addr16
js
hlt
movsl
sub
mov
and
leave
xchg
fwait
add
mov
cmpb
mov
push
push
inc
dec
sbb
cmpsl
cmp
mov
pop
pop
daa
insb
jge
js
and
xor
or
mov
cs
lods
cmpsl
bound
iret
jmp
mov
adc
sub
loopne
dec
add
loopne
mov
push
insl
setl
sub
cld
mov
lds
xchg
or
cmp
pop
es
rcrb
in
sbb
adc
mov
jle
push
push
jbe
jp
xor
leave
xor
aam
cmp
sbbl
lahf
push
out
and
xchg
xor
sbb
add
add
xchg
and
movsl
mov
mov
cmp
scas
inc
hlt
mov
add
add
add
out
xor
stos
mov
inc
imul
stc
and
dec
popf
mov
mov
and
repnz
ja
orb
pop
cmp
mov
std
add
insb
outsl
lcall
or
pop
repz
test
stos
jae
clc
enter
sti
dec
xor
outsl
or
pop
out
stc
lret
sub
out
aaa
ja
pusha
rcll
lret
lds
adc
or
and
jle
arpl
fldt
mov
push
inc
inc
jge
bound
call
mov
popa
xchg
in
jno
push
mov
gs
cmpsl
std
add
in
ffree
mov
xor
mov
in
mov
inc
nop
or
aad
add
data16
loope
and
add
add
mov
push
jg
mov
les
ficoms
adc
add
add
add
cmpsb
es
xchg
aas
mov
inc
daa
loopne
or
out
stos
fldcw
inc
xor
jge
dec
mov
test
mov
mov
push
jl
cmp
mov
in
movsl
inc
outsl
pop
out
add
dec
cmp
shrl
nop
into
xchg
outsb
xchg
lea
cmp
inc
gs
xchg
test
test
push
inc
jnp
dec
xchg
mov
dec
jo
adc
push
add
testb
xor
cwtl
into
arpl
sahf
loope
cs
ja
movsl
addr16
xchg
and
pushf
push
jno
icebp
out
mov
das
mov
add
sbb
adc
adc
push
lahf
push
adc
addr16
inc
pop
rcrb
subl
sub
jbe
lcall
pop
js
in
pop
loop
add
inc
stc
mov
mov
fidivrs
xchg
push
add
cmc
add
add
dec
sub
xor
adc
or
pop
mov
inc
cmp
inc
stos
xor
repz
imul
or
outsb
lahf
and
imul
and
xor
pop
dec
add
cmp
mov
adc
inc
arpl
out
lds
sub
repz
insb
jo
ret
clc
pop
out
inc
cmp
pushf
in
repz
fndisi(8087
ret
mov
or
les
sub
sbb
cmc
adc
in
cmpl
fmull
mov
lds
sahf
cltd
cmp
fs
repz
jno
ret
in
xor
aad
sti
mov
stos
shrb
arpl
add
sbb
call
call
cmp
lret
pushf
push
and
and
mov
sbbb
add
add
mov
or
jl
add
cmc
add
add
insb
and
lods
inc
repnz
cmp
push
adc
mov
movsl
push
xorb
cmp
lcall
jle
loopne
fidivl
or
lahf
dec
lret
inc
cmp
fldl
mov
mov
and
inc
dec
aad
and
xchg
enter
mov
push
push
in
jmp
or
mov
fs
jns
lret
xlat
or
sbb
int3
push
sahf
push
sbb
out
jmp
dec
mov
sub
xchg
cmp
ret
mov
jne
dec
sub
sbb
fnstcw
mov
arpl
inc
in
shrb
inc
pop
cs
iret
dec
imul
cmp
aad
push
mov
jg
xchg
lods
xor
cmp
repz
test
mov
aaa
mov
add
add
hlt
fists
mov
dec
jno
add
cmc
add
add
out
fnstenv
mov
pop
push
jbe
dec
or
push
loope
insb
and
mov
sbb
xchg
inc
lods
out
insb
lcall
sub
sbb
push
cmc
sbb
mov
xlat
popa
paddusw
jmp
mov
inc
push
int3
gs
cmpsb
mov
adc
in
cmp
in
jns
push
bound
mov
test
out
fistps
cmp
fsts
mov
pop
xchg
imul
pop
cmp
dec
adc
adc
jae
or
inc
in
inc
notb
mov
int3
scas
dec
adc
mov
dec
cwtl
jg
lahf
in
mov
or
sub
push
xor
xchg
xor
push
inc
loope
xor
jo
hlt
cmp
jbe
add
add
into
fwait
testb
adc
add
cmc
add
add
imul
int
mov
push
fidivl
shrl
push
push
ljmp
stos
mov
and
push
jge
int3
and
cmc
mov
into
cmp
jg
mov
sbb
or
xor
sub
pop
jmp
xchg
mov
sbb
xor
rcr
cltd
loope
lods
mov
mov
scas
arpl
mov
ret
movsb
repnz
les
pop
pop
mov
or
jmp
test
inc
loop
dec
aad
xchg
push
addl
stos
out
jno
decl
and
jecxz
test
xor
imul
in
pop
roll
xchg
mov
test
pop
sub
scas
data16
insl
nop
mov
xlat
cmp
loopne
test
fcom
movsl
mov
jno
movb
add
add
xor
mov
pop
mov
push
adc
add
add
add
sub
inc
cmp
jle
ljmp
sbb
add
jno
or
leave
bound
scas
sub
fwait
imul
jmp
xchg
adc
inc
loop
lds
clc
loope
jae
cmp
aam
incl
daa
push
jbe
pop
lods
loop
popf
call
sbb
aam
cld
add
cmp
dec
test
push
sti
cmc
push
iret
or
ficoml
dec
mov
lcall
mov
in
sar
push
jge
bound
dec
jmp
pop
fdivrl
dec
ljmp
loopne
jecxz
jae
mov
mov
in
mov
test
sub
rcr
add
xchg
mov
stos
in
push
cmp
sbb
mov
or
addr16
addr16
mov
or
pushf
xchg
add
mov
out
xchg
add
inc
out
aas
mov
sub
loop
push
pop
add
cmc
add
add
jecxz
sbb
lock
sbb
dec
insb
sub
xor
dec
aaa
js
pop
fimuls
mov
push
pop
std
in
fmull
mov
jp
and
movsb
jno
pop
filds
int
test
cmp
dec
mov
and
mov
sahf
dec
out
inc
bound
cli
xchg
sub
mov
mov
jb
pop
xchg
ljmp
dec
lock
inc
std
fcmovb
inc
fisubrl
sbb
test
nop
outsb
ja
lcall
xchg
aad
inc
pop
xchg
dec
imul
in
rol
das
cs
mov
ss
dec
sbb
test
xchg
and
dec
pop
test
or
in
or
dec
lret
cmp
or
rcl
dec
arpl
bound
mov
dec
or
je
jno
and
add
add
bnd
jp
xchg
inc
sub
iret
bound
add
cmc
add
add
and
pop
lock
jmp
mov
bound
pop
addr16
mov
bnd
aaa
les
xchg
sbb
pop
insb
lret
cld
jnp
jecxz
enter
or
cld
dec
jl
ljmp
addr16
lods
sbb
sub
lret
xchg
mov
ss
pop
int
imul
in
xchg
xor
mov
sbb
xor
jle
test
lahf
stos
loopne
leave
pop
testb
fcmove
sbb
cli
lods
and
pop
pop
xor
sub
xchg
aad
sub
or
inc
push
xor
cmpsb
icebp
or
popa
or
pop
xor
pusha
xlat
mov
and
daa
fidivl
push
xchg
lret
and
mov
ret
pop
loopne
and
pop
test
jmp
inc
shlb
cmp
ret
add
add
in
out
ja
fbstp
lahf
inc
data16
add
cmc
add
add
add
inc
inc
fwait
adc
mov
imul
imul
repnz
out
add
call
sbb
incb
push
std
xor
enter
jp
inc
xchg
or
push
cmpb
cltd
xchg
lahf
jnp
lret
lea
sub
fst
popa
sub
addr16
sbb
insb
outsb
jl
sub
insb
bound
testb
add
in
pop
or
sbb
and
pop
lds
in
cmp
or
push
imul
push
xor
jge
fwait
js
xor
fisubs
fistpll
pop
hlt
aad
mov
xchg
add
push
mov
rcrb
sbb
call
sbb
je
in
jl
cmp
pop
dec
pop
out
idiv
xchg
pop
cmp
add
scas
test
in
mov
add
add
add
push
jne
cmp
fstl
and
icebp
test
xchg
cs
fmul
fadds
ret
stos
dec
push
mov
inc
jae
mov
xor
ret
or
outsb
ja
lds
cmp
rcll
mulb
out
cs
cmc
gs
cmp
loop
xchg
jl
cs
adc
inc
repz
mov
stos
mov
adc
sbb
xor
cmc
ror
js
or
cmp
imul
addr16
xchg
addr16
popa
into
icebp
je
test
dec
fnstsw
out
cmp
sub
lret
mov
mov
insb
andb
or
adc
mov
dec
pop
mov
cmp
sub
test
push
add
push
out
sub
inc
push
out
xor
push
inc
jge
xlat
mulb
pop
dec
xor
int
fwait
roll
stos
pusha
fsubl
sub
cmp
xchg
add
add
mov
jg
imull
push
testb
add
cmc
add
add
lret
dec
push
test
and
and
pop
js
scas
pop
fdivrp
adc
fcompl
mov
xchg
cmp
xchg
add
dec
push
in
jb
push
jle
xchg
push
push
pop
wrmsr
test
mov
jnp
sbb
shlb
outsl
cmp
push
or
int3
xchg
lods
rclb
sub
roll
mov
mov
gs
lea
ja
mov
das
test
jne
subb
ljmp
push
sub
sbb
xchg
ficomps
or
jge
push
insb
cmpsl
push
out
ss
cmp
loopne
sub
pop
dec
ds
sbb
pusha
push
or
mov
std
outsb
call
xor
mov
roll
test
mov
and
add
cmp
sti
jg
and
xchg
movsl
adc
sbb
add
add
add
dec
mov
fwait
xor
jne
inc
fisubs
jg
mov
sbb
call
out
ljmp
mov
pop
push
into
jno
fldlg2
rcr
cmpsl
xor
imulb
xchg
push
sbb
adc
sub
in
jle
pop
sbb
call
adc
xor
pop
sbb
js
loopne
jge
xor
imul
pop
andl
xor
incl
call
mov
int3
jmp
jmp
test
xor
sub
inc
call
test
jp
jb
leave
xchg
outsl
adc
mov
sti
cmp
decl
mov
sub
rcrb
jne
cmpsb
and
cwtl
jbe
icebp
dec
cmpsl
imul
sub
adc
loop
mov
dec
fstl
or
push
sahf
fiadds
add
scas
aam
jnp
fldl
loop
in
sbb
add
lret
mov
cmp
or
insl
push
incb
in
inc
shr
outsb
pop
dec
imul
jno
or
push
shlb
aam
gs
sub
jne
sbb
mov
push
movsl
add
ret
test
push
aam
xlat
or
les
xadd
mov
mov
xor
adc
sarb
mov
and
bound
arpl
cli
sbb
lods
jb
fstpl
pusha
jecxz
out
dec
cwtl
les
int3
xlat
bound
mov
xor
pop
add
mov
jns
ss
xchg
shl
xchg
emms
mov
ljmp
fcomip
jp
mov
lcall
mov
lods
sub
rclb
lret
inc
or
add
mov
mov
xchg
adc
and
add
add
outsl
mov
xchg
pop
cltd
mov
pop
mov
add
add
add
mov
sbb
mov
cmp
or
lods
lods
mov
fwait
push
aas
or
cmp
push
xchg
insl
out
lock
in
sbb
pop
in
xchg
mov
push
sbb
pop
push
xchg
mov
shll
loop
inc
mov
lret
out
push
inc
and
arpl
orl
and
pop
adc
adc
push
lods
push
addr16
les
rcl
mov
mov
sbb
test
pop
mov
xchg
jmp
movsl
mov
stos
pop
test
inc
dec
inc
pusha
in
push
fdivrs
adc
mov
fsubs
mov
enter
repz
pop
push
enter
les
popa
mov
fs
int
pop
mov
jne
mov
cmp
loope
int3
add
add
jmp
loop
movsb
lret
in
clc
push
add
cmc
add
add
dec
stc
adc
pop
jns
sub
cwtl
insb
orl
inc
and
jno
xchg
imul
and
aas
repnz
mov
add
jae
paddusw
fcompl
lods
mov
sub
cmpl
inc
imul
iret
jnp
pushf
dec
mov
inc
lods
cltd
popf
int3
sbb
adc
in
mov
mov
test
test
pushf
stos
outsb
mov
fndisi(8087
push
pop
out
push
mov
lret
push
sahf
add
repz
mov
dec
pop
and
ret
mov
test
fs
lods
rcrl
jb
mov
pop
enter
cwtl
pop
rcll
sbb
mov
scas
or
movsb
mov
xchg
adc
mov
imul
lock
xor
or
mov
cmpb
addl
mov
or
xor
xchg
lds
icebp
cmp
add
pop
add
cmc
add
add
add
jb
out
adc
and
call
shll
xchg
mov
adc
cmpsl
mov
fcoms
jno
inc
hlt
mov
xchg
push
or
jno
jg
push
mov
mov
scas
test
js
shl
shr
push
and
repz
and
jg
push
sahf
mov
div
add
inc
fs
mov
test
mov
fnstcw
test
push
add
xchg
mov
push
lahf
dec
cwtl
jbe
dec
daa
addl
lahf
lahf
pop
jecxz
or
cmp
dec
xchg
xor
subb
sahf
out
pop
int3
cmp
test
jbe
xchg
sbb
dec
sub
aas
push
test
jne
jno
addb
dec
icebp
jg
cmpsb
pushf
inc
test
sbb
jns
out
pop
mov
push
divb
add
add
cli
inc
jg
int
pop
sbb
lahf
fwait
pop
loop
add
cmc
add
add
jg
pop
int3
push
fcmovnu
fidivrs
mov
mov
mov
xchg
lret
cmpsb
ds
xchg
aaa
sub
popf
in
out
lods
mov
arpl
push
insb
mov
pushf
or
xlat
adc
cmp
mov
hlt
xor
inc
pushf
mov
dec
mov
rorl
cpuid
inc
adc
lea
mov
into
push
push
add
jb
add
loope
pusha
lods
lea
fcomp
sbb
fisubrl
mov
cmp
add
shrl
jno
add
and
stc
out
fisubs
pop
into
and
pop
inc
je
lods
adc
push
ss
mov
fcomps
xchg
pop
dec
lods
adc
mov
fsts
jmp
inc
pop
adc
fs
ret
rolb
add
aas
test
negl
lock
std
cmp
jle
fisttps
cmp
xlat
and
add
add
add
lret
jnp
inc
clc
sub
fwait
icebp
pusha
aaa
xchg
in
jnp
push
out
lea
push
fsubrp
adc
push
mov
dec
cld
mov
ds
inc
push
xchg
and
jp
xchg
and
and
pop
adc
ret
shrb
cmc
mov
push
fiaddl
jl
ja
cmp
test
mov
jle
jnp
mov
jo
fbstp
iret
xchg
sub
cmp
jle
jecxz
test
jge
push
int3
in
lock
mov
stc
inc
mov
mov
mov
jl
xor
and
aas
jo
xchg
cmpb
pop
pop
jg
mov
loope
pop
xlat
xor
jnp
pop
jle
mov
aaa
pop
cmp
mov
inc
scas
bound
incl
pop
test
pop
insb
cmpsl
ret
adc
add
xchg
pop
lds
xlat
ficoml
adc
int3
and
add
add
add
in
jmp
mov
pusha
movsb
mov
nop
pusha
aad
mov
xchg
mov
sbb
pop
sbb
loop
aam
sbb
mov
pop
inc
adc
dec
aam
ds
dec
jle
push
inc
jge
jns
or
xchg
xchg
lock
shll
cli
xor
inc
aad
ret
push
rep
add
cltd
xor
outsl
sbb
xor
lock
clc
mov
push
stc
mov
adc
cwtl
mov
lds
mov
das
jg
loope
pusha
pop
mov
test
int
dec
push
cmp
fbld
mov
fwait
push
mov
or
jbe
lret
inc
aaa
adc
int3
jle
insl
and
inc
add
ja
sub
and
sbb
xchg
mov
add
add
sub
iret
outsb
jmp
rcll
xor
or
and
add
add
add
add
pop
push
gs
push
xchg
sbbb
pop
pop
pop
inc
out
jo
and
ficoms
push
sub
jae
xchg
lahf
cmp
lock
daa
adc
mov
and
sbb
and
int
and
in
pop
movsl
fiadds
lock
ret
arpl
pop
cmpsl
mov
sub
insl
mov
lahf
mov
inc
mov
lahf
sahf
cmp
daa
rcl
test
jb
or
and
out
xor
cmc
fistps
cltd
es
mov
jnp
call
outsl
enter
xor
enter
arpl
lds
mov
shl
or
adc
in
test
cmp
xor
jno
ret
stos
pop
stos
into
inc
add
add
std
sbb
stc
cld
or
shlb
add
add
add
cltd
int3
bound
rcrb
jl
pop
lret
dec
sahf
cwtl
jb
pop
xchg
aad
fwait
add
adc
xchg
in
fstl
jle
xor
pop
jp
gs
push
jne
aaa
inc
out
dec
dec
inc
repnz
repnz
or
out
pusha
adc
js
fs
push
dec
cmp
sub
cli
loope
stos
fwait
and
icebp
addr16
int3
mov
push
int3
out
jbe
cmc
inc
adc
pop
mov
push
nop
or
cmpsl
push
lods
mov
mov
xor
andl
js
cld
fists
jp
xor
xor
call
adc
into
jb
sub
xor
leave
adc
dec
mov
inc
adc
mov
and
and
outsb
mov
mov
call
jb
add
add
pop
test
scas
repz
cld
cmp
jl
fimuls
add
cmc
add
add
pop
cmp
jecxz
push
push
stos
push
and
inc
icebp
and
mul
cmp
dec
addb
push
xchg
mov
cmp
enter
ret
stos
addr16
lret
addr16
rcll
inc
stos
adc
mov
xchg
push
popf
mov
and
out
dec
mov
push
test
test
les
ds
fcompl
cmp
insb
pushf
fcoml
repz
cmc
cltd
arpl
rcll
dec
out
push
out
xor
mov
mov
push
int3
add
jb
cli
sti
rorl
or
mov
inc
iret
cmp
jno
or
fdivl
pop
pop
ficoms
andb
popf
es
into
nop
jno
and
popa
repnz
imul
dec
mov
xlat
cltd
mov
lock
adc
scas
orb
xchg
add
add
add
dec
pushl
cltd
jae
cmpsb
mov
add
add
addr16
je
pop
sti
cmp
dec
dec
adc
pop
jbe
in
lea
jb
jo
mov
push
or
popa
lea
add
mov
aad
cltd
mov
je
mov
in
scas
push
mov
dec
mov
mulb
inc
mov
scas
or
sbb
or
cmp
bound
lahf
mov
adc
repz
push
xor
aas
sub
mov
push
je
nop
sbb
pop
cmc
std
mov
cwtl
cmp
insl
lods
or
into
jge
xchg
in
cld
xor
jnp
jl
cmc
and
mov
adc
fisubs
repz
mov
movsb
scas
xor
mov
fildl
cmp
push
out
or
or
mov
cmpsb
sahf
jns
jb
fstl
push
jo
adc
xor
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
hlt
sti
pop
xchg
daa
add
cmc
add
add
jmp
enter
sub
adc
test
push
loop
aam
adc
jne
dec
aad
jb
and
lea
xchg
fsubs
pop
in
lock
fisubs
xor
cli
pushf
mov
push
and
pop
sbb
jbe
repz
sbb
loop
pop
ja
jns
push
cs
outsb
test
popa
rorb
aas
xlat
adc
and
mov
into
pushf
mov
mov
add
and
jle
test
mov
lods
test
xlat
test
repz
mov
jl
rcl
scas
mov
dec
cwtl
fcmovnu
insb
repnz
movsb
roll
adc
mov
imul
lds
jae
pop
pushf
mov
pop
outsb
or
or
or
cmpsb
sti
lods
mov
dec
xchg
stc
addr16
mov
xor
repz
jae
ja
div
dec
lods
push
mov
mov
cmc
add
add
dec
dec
cli
ljmp
lret
mov
xchg
push
testb
xor
lock
push
out
xlat
lret
add
dec
sbb
push
mov
cmpsb
lea
clc
and
xchg
cmp
sub
mov
push
mov
or
jecxz
or
into
adc
loope
jae
mov
inc
faddl
cmp
sbb
xchg
jnp
xchg
rcrb
mulps
mov
push
pop
pop
push
xor
cld
xchg
or
xchg
mov
and
sahf
inc
fnstenv
stos
xchg
or
fcmovnbe
loop
sbb
addr16
testb
in
sahf
daa
fadd
push
jle
adc
and
ret
and
inc
addb
mov
lods
cmc
test
movb
lret
or
sbb
dec
out
sbb
cmp
xchg
repnz
mov
sub
cmp
add
cli
std
jg
into
jno
ret
loop
sub
add
add
add
div
mull
outsl
lcall
jne
iret
leave
imul
fwait
out
jns
adc
xor
ds
pop
push
in
leave
or
call
add
mov
divb
sub
ds
in
stos
inc
jno
sub
dec
or
xchg
insl
rcll
arpl
shrb
mov
mov
pop
cwtl
leave
call
arpl
xchg
rcl
adc
push
cmpsl
jbe
jmp
scas
sbb
enter
rcll
or
sub
xor
adc
push
daa
push
mov
faddl
aad
notb
jecxz
xor
stc
inc
shl
lret
ret
mov
add
stos
iret
outsl
jne
adc
dec
test
cmp
cmpsl
arpl
jae
mov
sbb
jns
andb
pop
xor
inc
ds
add
testl
incl
sub
pop
dec
cmp
cmc
add
add
jp
dec
mov
roll
add
dec
hlt
dec
ret
push
xchg
adc
orb
test
das
xchg
push
popf
addb
leave
fmul
ja
mov
insb
in
mov
into
xorb
mov
ret
and
loop
mov
pop
push
xchg
sbb
cmp
mov
mov
sbb
adc
xchg
in
and
loop
sbb
test
icebp
cli
aas
mov
xchg
cld
xorb
into
mov
shrl
push
or
movsb
fst
inc
hlt
call
push
pop
push
filds
ja
fstpl
in
rclb
cmp
scas
jo
mov
inc
movsl
fdivrp
cmpsl
dec
xchg
insb
outsl
data16
pop
or
shlb
loop
in
mov
fcompl
cmp
pop
cmpsl
push
or
cmp
adc
adc
add
push
es
jg
pop
xorl
or
sub
add
add
add
aaa
in
fistpl
dec
xchg
pop
es
dec
jae
add
lea
call
inc
sbb
repz
adc
test
cwtl
or
sub
push
jl
fisttps
pop
and
xchg
mov
sub
cmpsb
or
dec
stc
fdivrl
lahf
daa
adcl
or
pop
or
and
or
and
push
sbb
xchg
rcrb
inc
ss
mov
mov
int
sbb
cmc
dec
nop
repnz
mov
outsb
into
pusha
sbb
jecxz
cli
or
ljmp
xor
popf
das
lods
sbb
mov
jl
and
and
mov
loopne
lock
enter
jns
clc
shll
rorb
mov
ja
test
pop
das
roll
add
add
or
cmp
rcrl
pop
sub
add
add
add
add
mov
xchg
enter
and
xor
jp
sub
aaa
and
in
int
loope
pushf
push
das
push
pop
mov
pop
loopne
xchg
addr16
scas
jge
mov
test
ja
lahf
mov
fisubrl
mov
or
cmp
cmp
jg
fs
add
jno
int3
add
dec
push
add
nop
xor
mov
aam
mov
push
stos
xchg
mov
inc
mov
or
in
iret
cmp
mov
int3
lcall
daa
jmp
xchg
aad
mov
xchg
sub
adc
jae
mov
and
mov
and
and
xchg
dec
pop
lret
sbb
mov
push
les
lret
cmp
and
xchg
sti
arpl
cmc
mov
mov
out
mov
adc
jnp
add
xor
ja
psubsb
push
sub
add
and
cmpsl
mov
je
mov
xchg
insl
sub
mov
jmp
cmp
cltd
nop
push
lds
push
movsl
add
or
pop
mov
mov
ret
sub
sbb
mov
or
test
xchg
inc
push
sub
jne
inc
xchg
out
mov
mov
push
sbb
out
push
cmp
sub
jmp
add
mov
sbb
mov
sub
dec
fucom
and
pop
pop
mov
adc
fidivrl
add
push
std
stos
aam
pop
push
shll
cld
pop
add
xchg
pop
inc
test
orb
mov
sbb
sbb
mov
rcll
jo
and
push
outsl
sbb
sub
cltd
ficompl
lret
pop
dec
xchg
adc
in
fs
jo
add
add
ficoms
stos
sbb
ljmp
repz
add
cmc
add
add
call
test
sub
pop
enter
sub
ja
jo
xchg
test
sub
aad
pop
gs
lret
sub
push
xchg
and
clc
inc
push
popa
loope
imul
sbb
cmpsb
aas
and
fiadds
pop
rcll
insl
fdivr
push
and
gs
rcll
mov
loop
pop
cmp
call
cmpsb
fisttpll
in
arpl
das
mov
and
shlb
pusha
mov
jno
adc
fmuls
cmp
dec
fidivs
add
xchg
xchg
in
orl
xchg
add
ss
aaa
mov
sbb
inc
adc
or
or
push
xlat
mov
mov
add
jl
bound
popa
mov
js
mov
out
xor
pop
ljmp
cltd
cli
mov
add
in
out
sbbb
sbb
cmp
add
add
fidivrl
in
jno
inc
push
loop
mov
lret
shlb
fnsave
addr16
cld
xchg
lret
cmp
sub
or
clc
mov
fstp
mov
inc
sub
iret
or
push
shlb
mov
adc
mov
sub
popf
pop
mov
pushf
push
cmpsb
popf
push
push
scas
fadd
out
mov
push
popa
inc
cltd
add
cmp
imul
subl
clc
test
addr16
dec
ss
push
int3
icebp
mov
mov
sbb
pop
fiaddl
xchg
in
mov
adc
mov
enter
les
ja
add
xchg
xchg
and
mov
and
adc
mov
cltd
ret
and
inc
cmp
jbe
xor
push
adc
imul
setb
in
loop
pop
scas
bnd
add
add
sbb
out
aad
jo
mov
and
xor
add
add
add
push
loop
cmp
cmpsb
fisubrl
push
data16
and
push
popf
sbb
xchg
loop
lea
xchg
xchg
and
xlat
ret
xor
cmp
or
pusha
nop
loopne
xor
xchg
adc
push
dec
xor
adc
mov
fwait
pop
js
mov
outsl
dec
out
mov
dec
add
xchg
shll
andl
add
mov
adc
jp
jnp
mov
fbstp
adcl
or
outsl
frstor
ja
ja
fmulp
sub
adc
lea
inc
fcom
mov
ljmp
mov
cltd
outsl
sahf
mov
cld
mov
mov
test
sub
clc
mov
loopne
loopne
sub
clc
test
lods
test
aam
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
shl
mov
adcb
xor
xchg
mov
icebp
ret
idivl
cmpsl
dec
adc
out
js
or
sbb
ljmp
push
cltd
mov
jns
and
xor
gs
lds
or
je
rcll
ljmp
jmp
insb
jg
shlb
pop
xor
jbe
push
sbb
enter
wbinvd
inc
cmp
mov
mov
fwait
lea
ljmp
push
adc
mov
mov
aaa
jne
mov
jne
imul
daa
push
fcmovbe
popf
mov
dec
push
addr16
xor
and
jb
mov
xor
movb
cmp
test
pop
pcmpeqd
mov
push
add
add
lods
jg
add
lods
mov
xor
add
add
add
pop
sub
cmp
pop
jns
in
jb
sub
rol
jl
jno
insl
mov
out
push
call
dec
mov
push
icebp
in
mov
fldenv
jl
xor
fs
xchg
mov
push
jmp
add
mov
cmp
sbb
pop
dec
data16
xlat
outsb
aam
push
inc
cmp
aas
sbb
data16
out
addr16
and
cmp
push
negl
les
push
rep
arpl
add
test
test
and
rol
imul
adc
sbb
mov
push
call
rcl
lret
sub
jbe
cmpsl
xchg
adc
loope
fnsave
idivb
popa
xorb
fwait
stos
arpl
ror
cmp
mov
pop
pushf
loop
inc
loopne
push
fldenv
ljmp
andb
mov
push
adc
push
add
add
jg
cld
add
adc
sbb
xor
add
add
add
add
xchg
push
addr16
push
adc
mov
mov
not
mov
sub
std
bound
out
push
inc
movsb
imul
gs
inc
lret
aad
cmovbe
ret
outsb
add
mov
adc
inc
cmp
testl
and
ss
daa
add
jg
out
test
jmp
sbb
mov
sub
inc
out
cwtl
ljmp
nop
xor
sbb
push
and
lahf
dec
int3
test
push
lods
sbb
dec
outsl
in
out
das
pop
mov
lret
stos
jg
dec
jp
pop
dec
jnp
push
and
in
sahf
mov
xor
scas
imul
mov
dec
xchg
xor
add
xchg
cld
inc
aam
hlt
dec
nop
or
movsl
jecxz
pop
pusha
or
or
jo
sub
xor
inc
or
add
ret
mov
iret
mov
adc
fdivrl
push
xor
add
add
add
xor
mov
add
mov
cli
pop
mov
pop
data16
sbb
mulb
mov
lods
fwait
adc
inc
fisttpll
cltd
stos
or
aad
push
mov
and
enter
mov
stos
inc
das
es
dec
fcoms
cli
daa
mov
out
sbb
outsl
dec
sbb
cmp
mov
imul
push
mov
push
or
cmp
dec
pushf
rolb
out
imul
int3
dec
cmp
ret
jae
push
adc
mov
pop
or
dec
notb
outsl
jmp
lea
push
js
std
mov
hlt
jecxz
imul
loop
cli
pop
insl
fbld
cltd
jnp
push
int3
je
dec
add
mov
sbb
xchg
cmp
add
or
sbb
out
mov
cmc
add
add
cmpsb
je
push
pop
lea
sbb
sbb
xor
rcrl
cmp
std
jne
mov
mov
lahf
shl
cmpsl
push
jno
add
xchg
push
xchg
dec
outsl
mov
adc
sub
jae
push
push
fiadds
int
mov
jbe
xor
mov
pusha
push
icebp
jo
push
pop
jnp
gs
lock
push
fwait
dec
lds
test
hlt
xor
push
push
cld
movsl
scas
enter
pop
in
or
pusha
and
or
sub
inc
jno
leave
out
aam
insb
mov
insb
lret
xor
mov
dec
mov
daa
push
mov
cltd
cmp
mov
sub
push
stos
lods
cmp
pop
pushf
mov
mov
push
fwait
mov
push
shrd
sahf
clc
push
jge
dec
sub
and
add
addr16
fs
xchg
lret
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
lret
and
cmc
add
add
out
ljmp
push
into
jmp
fsubl
ret
pop
daa
arpl
mov
sub
fisubl
pop
and
sbb
push
adc
dec
out
cmp
ret
cld
cli
lretw
addr16
call
sar
aam
sbb
or
js
rcl
and
add
push
xchg
adc
adc
push
jnp
ja
faddl
movb
std
subb
xlat
mov
jle
sbb
or
fisttps
outsb
mov
and
pop
mov
xchg
stos
xlat
xor
js
or
push
test
push
jp
add
mov
leave
inc
inc
pop
mov
outsb
pop
add
mov
test
mov
and
dec
xchg
das
repz
push
jecxz
adc
ret
adc
or
pop
add
hlt
mov
popa
jmp
add
add
jnp
out
push
lcall
in
add
cmc
add
add
push
outsb
dec
and
fldt
cmp
mov
cltd
sbb
sar
or
mov
adc
or
aas
sub
dec
cs
push
or
mov
xor
add
sbb
jne
insl
ret
sti
mov
mov
scas
nop
jne
adc
fists
aad
adc
jae
mov
mov
outsb
sub
and
sbb
scas
cwtl
mov
addr16
mov
movsb
pushf
lret
sbb
enter
add
pop
test
pop
ja
pop
cmp
fs
adc
pop
ja
leave
dec
or
fxch
mov
lret
jmp
mov
push
dec
add
or
xchg
jg
push
xchg
testl
in
pop
loop
or
fbstp
cld
xchg
add
fsubrs
in
enter
mov
fs
es
data16
cmc
jle
dec
bound
cmp
cmc
add
add
scas
add
xor
add
add
jns
xor
aas
test
push
add
mov
stos
xchg
push
push
pop
lret
mov
pop
pushf
out
mov
cwtl
test
fwait
jbe
test
clc
mov
sub
mov
test
cmc
pop
out
je
dec
xchg
fiaddl
std
pop
fdivl
idivl
pop
jmp
xor
mov
ficomps
push
addr16
sbb
ss
and
jmp
call
hlt
or
sbb
dec
out
or
jecxz
es
enter
or
ljmp
add
fistpll
andl
push
mov
mov
jl
icebp
cmp
dec
cmp
in
cmp
jo
icebp
ja
cmp
test
xlat
cmp
das
sbb
add
add
dec
mov
imul
adc
iret
cmp
add
add
add
inc
push
jmp
xor
addr16
mov
in
and
das
lcall
jnp
imul
or
imul
aaa
inc
jns
fs
outsb
add
in
and
test
daa
popa
inc
cwtl
lods
sbb
sub
movsb
jns
dec
pushl
lea
jne
clc
repz
push
repnz
cld
fnstenv
xor
sub
push
jg
cmpl
inc
or
ds
aas
or
sti
pop
cmp
fbstp
dec
pop
inc
pop
fs
xchg
roll
les
sub
mov
call
jmp
mov
push
jle
loope
inc
inc
loope
mov
jbe
mov
push
cli
jmp
push
dec
mov
inc
push
fldl
popa
and
lret
arpl
in
jp
cwtl
add
add
and
push
sti
cmpsl
pop
push
jo
sbb
add
les
add
cmc
add
add
lret
testb
adc
outsb
cmpsl
cmp
jmp
rcl
pop
or
inc
orb
push
into
imul
pop
pop
mov
cli
in
pop
inc
pop
add
and
push
loop
and
dec
aaa
xchg
adc
clc
xchg
psubq
fmuls
pusha
mov
jecxz
pop
lret
sbb
dec
jno
int
jns
out
cmp
icebp
sti
push
fwait
dec
cmp
mov
addr16
popa
add
adc
mov
add
push
out
pop
negb
cld
mov
fsubl
xor
and
fcompl
mov
adc
fldcw
fadd
mov
loop
mov
cmpb
mov
adc
dec
dec
fcmovnb
pop
jmp
push
pop
sahf
sub
or
lret
sub
loop
jl
fwait
adc
and
subb
cli
out
les
sub
iret
jae
add
push
and
std
cmp
movb
pop
mov
add
add
aam
and
cmp
sbb
mov
adc
and
lahf
jg
jae
test
mov
jns
push
pop
mov
pop
je
inc
sbb
loop
jge
pop
jae
jnp
pop
push
add
mov
pop
loopne
mov
jecxz
cmp
sub
ljmp
cmp
rcr
jle
jo
and
xor
data16
and
push
ret
dec
decb
add
pop
push
jae
pop
add
cmpsl
push
jbe
inc
jns
pushf
loop
insb
dec
lds
adc
insb
push
xchg
mov
xor
adc
and
fwait
xchg
sub
mov
jnp
inc
lahf
adc
jns
outsb
lcall
lds
xor
outsl
or
ja
xchg
push
jnp
cmp
add
imul
add
add
lds
xchg
and
push
or
scas
cmp
add
add
add
stos
in
xor
popf
push
mov
cltd
mov
jmp
and
hlt
adc
mov
cltd
mov
jne
and
cltd
sub
add
mov
test
xchg
add
pop
mov
sbb
shlb
mov
fisttpll
push
mov
and
adc
enter
jb
mov
inc
sti
bound
adcl
and
xchg
xor
fimull
mov
inc
mov
and
rcrb
fstps
inc
mov
xchg
push
adc
push
pop
cld
imul
dec
in
in
mov
ja
and
test
cvtpi2ps
xchg
rorb
jae
pop
das
fdivs
imul
jb
mov
and
out
add
add
add
xchg
ficomps
push
popa
mov
cmc
add
add
icebp
pop
lock
scas
mov
adc
in
mov
sbb
jb
xor
adcl
push
push
lret
das
add
pop
inc
aas
mov
popa
adc
repnz
xor
lods
mov
jl
xor
mov
lods
insl
jg
je
aad
and
imul
imul
xorb
jbe
mov
or
lea
imul
fincstp
gs
loopne
mov
sub
repnz
xor
repz
cmp
dec
sarl
hlt
aas
enter
std
into
sbb
test
shll
jno
jne
in
jb
pusha
pusha
repz
mov
add
adc
cs
xchg
pop
shlb
and
push
das
jae
cmpl
xchg
andl
add
lods
xor
mov
pop
add
ljmp
cmc
add
add
inc
dec
pop
decb
cmpsb
or
imul
test
mov
rclb
and
dec
jg
jb
push
insb
jge
mov
dec
sbb
test
pop
lds
icebp
hlt
sub
andl
clc
or
stos
ja
test
mov
test
movsb
cwtl
jg
sub
add
mov
jnp
inc
cmp
mov
rcrb
cmp
jae
popf
in
ret
ja
cli
bnd
fldenv
dec
adc
outsb
addr16
push
sarl
pop
aad
enter
sub
lock
inc
push
scas
pop
and
jecxz
lret
popa
stos
lret
jle
push
ss
mov
movsl
lret
das
inc
cwtl
test
pop
clc
pop
pop
loop
mov
mov
gs
cmp
add
add
lret
mov
cwtl
sbb
pop
lea
add
cmc
add
add
cmp
mov
loope
add
fidivl
pop
gs
mov
js
dec
ja
mov
cmp
shlb
prefetch
inc
ja
cmpsl
jle
pop
jmp
dec
movsb
outsl
dec
mov
push
push
pop
push
mov
add
ret
mov
sbb
push
pusha
dec
adc
add
outsb
loopne
icebp
fdivrs
dec
sub
adc
dec
cli
rorb
xor
imul
fcmovnb
int3
out
lods
xor
in
xlat
and
jg
scas
and
dec
sub
jo
or
jp
and
adc
jg
xor
adc
mov
pop
adc
std
sbb
pushf
out
push
cmpsb
xor
jmp
lret
push
leave
pmulhw
loopne
mov
inc
or
popa
or
popl
add
add
sti
pop
jge
div
cmp
jo
lods
dec
cmpb
add
add
add
cwtl
lods
pop
fdivl
adc
mov
adc
hlt
xor
bound
into
mov
loopne
insb
cmp
fimull
sbbl
into
mov
lods
adc
and
pop
in
sbb
and
cltd
jno
popa
adc
mov
repz
icebp
jl
in
subl
jmp
cmp
pop
loopne
call
inc
adc
cmp
bnd
pop
out
adc
mov
rorb
sub
jnp
test
mov
inc
cmp
ficomps
jnp
xor
cmpsb
adc
loope
jnp
add
ret
cmp
mov
add
lock
dec
vpsraw
dec
lahf
movsl
jle
add
idivl
cmp
addr16
jo
fsubp
push
rcrl
inc
add
jecxz
push
cmpb
mov
mov
addl
add
fsub
std
in
popf
jle
es
xchg
cmpsl
mov
inc
add
cmc
add
add
jo
push
testb
les
jmp
mov
bound
std
jae,pt
loope
mov
ja
shr
out
sub
xchg
jno
imul
cld
jo
or
imul
or
xor
outsb
push
xchg
movsb
mov
sbb
mov
movsl
adc
mov
jg
aam
and
andl
aaa
cmp
cmp
and
sti
dec
ds
push
cli
gs
xlat
ljmp
mov
push
lcall
dec
adc
push
pusha
push
sbb
jo
jb
lods
fnstcw
sti
adc
or
xchg
mov
xor
cmp
lods
jge
in
in
adc
dec
xor
pushf
sbb
add
fcmovb
js
std
leave
lods
cli
mov
stos
lahf
lahf
xchg
in
add
add
jp
jnp
sti
xchg
jle
popf
loopne
loopne
cmp
inc
add
cmc
add
add
test
cltd
pusha
pcmpgtd
inc
xchg
or
fadd
movsl
fcoml
xor
imul
std
jecxz
pop
nop
ja
mov
sti
mov
jle
lahf
cmpsl
call
add
lahf
push
inc
cld
lock
in
mov
aaa
arpl
dec
lods
cmpsb
enter
sub
push
cltd
mov
sbb
insl
dec
imull
addr16
cltd
mov
ret
sub
subb
pop
jmp
inc
cmp
in
xlat
jge
arpl
jle
gs
fistps
pop
jmp
aad
push
daa
hlt
fistps
push
cmp
inc
out
mov
adc
jg
fxch
sbb
dec
inc
add
scas
ljmp
add
mov
es
mov
push
std
testb
aas
rorl
xor
shrb
ja
add
add
push
sti
loopne
cmp
pop
out
xchg
je
inc
add
cmc
add
add
push
arpl
xchg
lods
sbb
mov
mov
stos
in
mov
addr16
jge
or
jl
dec
negb
bound
shrl
idivl
pop
or
dec
mov
and
jge
popa
add
roll
push
je
xchg
int3
popa
xchg
cmp
or
pop
sbb
leave
inc
pop
sub
mov
mov
paddq
add
sti
push
dec
das
sub
ja
xchg
or
mov
repnz
jl
loop
jne
enter
fs
xor
mov
pop
jbe
pop
sub
lods
std
leave
dec
imul
xor
dec
sbb
mov
cmp
inc
adc
mov
pushf
adc
mov
mov
stc
jbe
jo
or
je
or
gs
pop
adc
add
add
cmp
and
push
dec
in
mulb
push
inc
add
cmc
add
add
mov
push
mov
jl
pop
das
dec
lret
or
adc
mov
add
or
inc
arpl
mov
dec
or
sbb
jbe
loope
mov
push
mov
movsl
lods
movsl
lock
lret
xorb
icebp
mov
push
ljmp
test
cmp
push
mov
stos
jmp
mov
cwtl
jmp
push
cmp
ds
dec
jl
ds
dec
sti
xchg
inc
imul
lahf
ret
addl
icebp
mov
leave
xchg
sti
ja
pop
lds
loope
out
mov
sti
fs
subl
or
xor
jl
xchg
push
lods
mov
mov
jmp
push
into
lcall
push
dec
sbb
push
push
fwait
in
and
andb
jmp
clc
pop
cmp
add
add
cmp
jge
stos
movsl
push
arpl
mov
add
cmc
add
add
insl
aas
cwtl
fsubr
sbb
mov
das
mov
sub
inc
xor
adc
pop
xor
dec
mov
dec
leave
out
pop
repnz
into
mov
sbb
xor
pop
or
loopne
xchg
xchg
test
pop
push
loope
in
push
sbb
pop
inc
pop
bswap
push
inc
das
mov
cmp
xchg
jg
ret
rcr
push
mov
sbb
xor
sub
rcrb
push
aad
call
dec
icebp
out
sub
scas
xor
mov
inc
xchg
xchg
fstl
sbb
cmpsl
mov
mov
mov
fistl
sub
pop
aas
les
outsl
das
sti
push
or
push
xchg
mov
std
cmpsb
jnp
sbb
insl
hlt
cmc
js
add
push
das
aaa
into
addr16
mov
add
add
rclb
mov
shrl
add
cmc
add
add
add
xchg
cs
test
sub
decl
xchg
into
out
adcb
movsb
notb
stos
dec
pop
loop
arpl
in
pushf
ficomps
repz
adc
fdivr
std
jb
adc
xchg
jne
shrd
mov
dec
dec
pop
les
cmp
popa
mov
into
dec
fs
sbb
lcall
jmp
fnstcw
mov
mov
les
mov
mov
lahf
cmp
adc
sub
iret
xor
jno
push
pushf
aas
notb
repnz
mov
sub
mov
lret
outsl
aam
addl
push
cmp
arpl
adc
mov
sbb
loopne
leave
jp
clc
ret
scas
sub
pop
mov
jecxz
dec
dec
enter
ljmp
call
cmp
aad
pop
pusha
shlb
lahf
push
daa
xor
mov
add
jl
dec
jbe
idivl
ss
repz
add
inc
add
cmc
add
add
gs
rcrb
add
jp
xchg
or
iret
test
cmpsb
add
inc
sbb
xchg
pop
cmp
xlat
jmp
fcmove
push
ljmp
sub
int3
gs
xor
inc
jno
and
inc
hlt
test
ds
loopne
stos
jnp
sbb
dec
and
leave
cmp
add
adc
xor
push
loop
add
mov
push
lret
lret
ret
push
cmp
gs
insb
xchg
stc
nop
xor
das
fidivrs
push
jg
in
int3
clc
shlb
rcl
adc
addr16
scas
test
push
add
mov
in
movsb
and
aas
pusha
repz
xchg
or
iret
leave
rolb
jge
lret
jl
mov
mov
outsl
inc
and
jb
xor
pop
jmp
imul
jae
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
add
stos
or
and
or
js
inc
outsl
data16
cmp
in
in
movsb
mov
mov
in
pop
dec
ds
or
mov
icebp
mov
lds
ror
scas
mov
push
js
xchg
clc
dec
push
dec
pusha
mov
arpl
inc
test
loop
ret
xchg
hlt
xlat
ret
mov
dec
xchg
cmp
shlb
inc
push
movsl
jo
pop
inc
imul
push
decl
cmp
cli
mov
sbb
or
inc
mov
xchg
jno,pn
out
lods
nop
inc
test
bound
cmp
sbb
sub
test
sbb
pop
aad
sub
lret
add
cmp
pop
inc
and
mov
dec
xor
push
mov
mov
sti
inc
and
add
add
insb
pop
pushf
scas
fistpll
loop
cmp
dec
add
cmc
add
add
xchg
jne
xchg
or
std
mov
inc
pop
sbb
std
inc
jne
sub
stc
cmp
jbe
out
imul
lret
dec
dec
dec
stos
xor
leave
mov
push
mov
js
push
mov
jne
jl
jne
lods
push
mov
xchg
test
lods
add
xchg
or
jno
xchg
cmp
cmp
aad
in
mov
sbbb
pop
fwait
loopne
jg
cmp
insl
mov
cmp
lds
daa
insl
imul
dec
inc
sbb
das
out
divb
data16
sbb
or
push
gs
dec
dec
das
mov
repz
adc
rcrl
les
fwait
cltd
jne
and
mov
sub
popf
mov
xor
pop
loopne
lods
mov
hlt
push
dec
add
outsl
adc
fisubl
testl
push
xor
add
sbb
jnp
jnp
cmp
les
frstor
dec
add
cmc
add
add
hlt
inc
fwait
pop
cwtl
push
adc
xor
pop
inc
orl
mov
ja
mov
sub
repnz
int3
push
mov
xchg
pop
add
outsb
sahf
out
fadds
scas
mov
icebp
mov
and
add
test
bound
sbb
xor
out
fwait
aam
imul
lcall
lock
insb
bound
dec
ss
push
out
ret
in
out
in
loopne
xchg
xor
sahf
pop
out
cmc
inc
lahf
pop
rcrb
mov
inc
fucomi
adc
in
xchg
and
sti
js
sbbl
jns
repnz
xchg
inc
mov
test
sub
sbbl
adc
popf
pop
push
fistpll
pushf
loope
pop
lods
jmp
jno
cwtl
into
sub
jnp
cmc
das
cli
sbb
ljmp
add
add
adc
incl
arpl
xchg
adc
dec
add
cmc
add
add
scas
movsb
ret
lds
cmpl
loop
lahf
lods
push
fmull
dec
xchg
arpl
add
enter
adc
mov
insl
mov
xor
add
enter
in
decl
xchg
adc
aaa
jp
cld
inc
jmp
cld
cli
lock
out
fldl
add
stos
jb
dec
lock
push
out
lcall
icebp
imul
dec
sub
sbb
lock
andl
push
ljmp
push
inc
cmpsb
lret
inc
in
xor
xchg
pusha
testb
fists
inc
jae
loope
shll
and
int
in
fiadds
mov
hlt
into
pop
test
adc
xchg
add
pusha
test
in
dec
inc
jb
lcall
mov
lcall
push
sti
shll
xor
add
add
repz
cmp
lods
repz
in
pusha
out
xchg
ffreep
cmp
add
cmc
add
add
out
bound
cmp
and
xor
dec
and
dec
push
sbb
dec
ljmp
hlt
mov
sub
loopne
cmp
jbe
pop
and
sbb
dec
pop
into
xchg
fwait
test
cli
pop
cld
lds
mov
jp
mov
push
subb
in
jp
loop
ja
mov
cmp
xchg
out
push
fistpll
cmp
jecxz
mov
push
rol
xor
lock
push
flds
or
ljmp
ds
fnstenv
mov
sbb
inc
std
rcl
in
test
sub
mov
xchg
xlat
xchg
adc
add
jne
sbb
dec
push
or
lods
push
dec
adc
sbbl
xchg
cmp
xor
rorb
js
imul
add
add
daa
push
cld
push
std
jmp
push
jg
push
xchg
dec
cwtl
add
dec
add
cmc
add
add
fisttpll
xchg
stos
loop
mov
mov
loopne
lea
cmpsl
add
sti
inc
sbb
roll
nop
ljmp
push
push
loope
push
jmp
mov
jbe
adc
scas
xchg
lcall
xor
repnz
pop
mov
rol
jp
je
push
dec
negl
test
repz
popf
xor
jp
and
cmp
mov
dec
nop
aaa
into
imul
pusha
dec
jo
out
int3
fldcw
push
int
scas
fwait
pop
mov
push
jnp
dec
and
jne
pop
or
pushf
mov
mov
addl
pop
cltd
inc
xchg
daa
out
mov
rorl
adc
cld
and
adc
push
and
outsb
push
sub
push
xchg
imul
jo
mov
cmpsb
pop
enter
or
and
leave
add
add
add
sbb
dec
push
cwtl
adc
pop
xorb
add
add
add
and
in
ret
test
push
jmp
pop
and
ret
adc
push
es
push
xor
mov
jns
add
outsb
xchg
in
sbb
sub
pop
xor
enter
outsl
test
or
push
mov
mov
fsubs
scas
jl
loope
fdivrl
imulb
add
dec
mov
das
outsl
sub
sti
mov
scas
sub
cmp
sbb
shlb
stos
sar
repnz
enter
ja
fcomps
popf
out
or
cmp
das
subl
ret
pusha
sahf
jp
aas
popf
iret
sub
cltd
adc
mov
inc
icebp
mov
and
mov
movsl
cmp
in
mov
mov
scas
icebp
jae
imul
cld
into
fists
xchg
adc
push
or
add
stos
add
push
mov
mov
mov
fisttpll
add
add
add
jns,pn
and
fnstcw
aaa
cld
loopne
mov
adcb
cmpsl
mov
jae
add
dec
mov
mov
addr16
dec
dec
fnsave
pop
xchg
lret
add
xchg
xor
xor
pop
or
icebp
insb
cld
adc
add
mov
mov
sub
fdivrs
roll
lods
inc
adc
ss
dec
into
lea
movl
rcrb
clc
mov
movsb
mov
push
and
mov
pop
push
test
xchg
js
nop
xor
adc
push
adc
or
add
sub
in
push
std
push
mov
cmpsb
xchg
call
fdivrs
aas
xchg
cmp
das
and
inc
add
add
jg
xchg
lcall
adc
add
cmc
add
add
sub
mov
call
lahf
into
out
inc
and
es
cmp
xchg
icebp
dec
push
pop
popa
push
insl
std
pop
rcl
push
mov
dec
xchg
xchg
xorl
and
mov
dec
lods
jle
mov
in
lea
and
jecxz
jnp
push
insl
sub
push
lret
dec
dec
or
test
xchg
push
mov
leave
add
gs
cmpxchg
fwait
dec
sub
sti
out
ret
and
add
adc
fs
test
xor
add
pop
stos
mov
xchg
or
or
imul
xchg
into
sub
pushf
push
sbb
mov
mov
pop
mov
aaa
rcrb
rolb
fmul
fnsave
es
add
add
push
dec
lret
jmp
imul
xchg
aad
out
cmpsb
pop
dec
add
cmc
add
add
test
test
test
jle
mov
cwtl
xchg
inc
ret
stos
in
cmp
shlb
pusha
mov
xorl
in
cmp
and
hlt
daa
or
fmul
adc
fisubl
das
loope
push
adc
or
jp
leave
jl
addb
insb
inc
aas
add
fwait
outsb
loopne
dec
push
add
or
sbb
push
lods
jbe
xchg
pop
shlb
xchg
mov
dec
inc
xchg
lods
mov
inc
addl
fmuls
and
nop
adc
arpl
jne
inc
imul
out
sbb
jae
fcmovne
jl
inc
adc
lea
gs
mov
aad
rorl
insl
or
imul
push
les
cmp
loopne
mov
ljmp
inc
ljmp
mov
orb
orb
push
mov
add
add
cwtl
loope
std
jge
cwtl
and
jns
jnp
push
add
cmc
add
add
pusha
inc
mov
jb
mov
dec
or
mov
insb
dec
cmpsb
movsl
mov
push
lock
mov
dec
cvtdq2ps
fmull
adc
add
xor
stc
ja
inc
inc
sub
mov
push
decl
jmp
mov
test
mov
gs
lahf
lcall
ja
mov
or
or
arpl
xor
add
insl
nop
adc
mov
pop
stc
sahf
mov
out
push
loopne
mov
gs
jp
jae
movsb
jae
scas
shlb
sti
push
test
sti
aas
out
neg
inc
and
outsl
pop
and
adcl
sbb
aaa
mov
ret
mov
pop
ss
bound
mov
std
ret
jne
test
stc
dec
out
fldenv
sbb
dec
rcr
push
loop
int
jmp
add
sub
jns
clc
mov
push
scas
jae
mov
add
cmc
add
add
adc
adc
xor
or
sub
rcll
push
nop
jb
mov
mov
scas
out
xor
sbb
sarb
jae
dec
aaa
scas
mov
mov
aas
fiadds
push
les
or
lds
xor
ds
xchg
int
test
out
stc
mov
push
test
sbb
test
sub
mov
dec
test
push
cmc
leave
push
jne
out
jns
ret
popa
fsub
out
pop
in
mov
popa
push
std
fcompl
cmp
inc
xor
pop
mov
nop
sub
int
jge
inc
adc
loope
and
add
decb
mov
or
push
sub
cmp
mov
push
cmc
sbb
lea
in
or
jmp
movsb
jnp
xchg
mov
xlat
cltd
es
aam
mov
js
ret
jg
mov
roll
cmpsb
push
add
cmc
add
add
iret
ss
adc
add
sub
sarl
cwtl
gs
mov
rcll
mov
cmpsl
subl
fdivrs
out
push
push
mov
scas
movsb
push
orl
pop
xor
out
ljmp
and
jge
add
test
push
test
nop
scas
xchg
dec
ret
add
sub
inc
cmp
out
and
cmp
mov
dec
cld
or
inc
mov
ret
ljmp
out
insb
lcall
sbbb
insb
ds
les
add
sti
xchg
rcrl
push
cmp
test
sub
or
mov
add
insl
fistpll
xlat
xor
ds
push
fyl2x
jmp
pop
sbb
dec
paddw
cmpsl
hlt
nop
sub
or
cmc
adc
jecxz
inc
int3
or
add
add
das
mov
cwtl
out
daa
add
push
add
cmc
add
add
out
fstps
adc
dec
into
fwait
pop
inc
xrelease
and
xlat
repz
psubsb
insb
mov
outsb
add
xor
adc
and
dec
std
test
sub
xchg
jmp
out
cmc
mov
jmp
jge
jb
shll
andl
push
pop
sbbl
out
rcrb
add
pushf
sbb
mov
fnstsw
mov
pop
movsb
lret
in
mov
mov
lcall
dec
or
insb
sbb
pusha
push
add
movl
mov
sbb
dec
mov
test
xchg
ficoml
dec
mov
outsl
inc
int3
fbstp
xorl
movsb
outsb
or
inc
sbb
test
adc
iret
ror
xchg
fstpl
pop
ficoms
push
add
add
hlt
gs
push
sub
dec
jns
push
add
cmc
add
add
lret
adc
mov
jle
jecxz
ret
inc
in
test
imul
dec
pop
xor
xchg
fs
push
into
mov
mov
popa
aas
inc
mov
dec
sbbb
push
mov
out
xchg
sub
xchg
dec
leave
sub
mov
cmp
dec
insl
lds
repnz
loope
dec
repz
inc
lcall
mull
jae
fsubp
inc
add
stos
mov
jae
xchg
push
enter
mov
loop
pop
outsl
std
and
aaa
mov
mulb
add
cmpsl
pop
out
jmp
mov
mov
adc
xor
int3
aam
adc
push
jnp
add
rcll
cmc
lcall
stos
push
push
mov
insl
outsl
xchg
push
enter
out
jns
test
into
popf
xor
mov
pop
inc
mov
aad
cmp
add
add
aas
gs
repnz
and
ss
xchg
test
add
add
add
lret
andl
mov
das
inc
iret
out
mov
je
mov
out
rorb
lds
inc
andl
lahf
les
imul
mov
imul
xchg
pop
sbb
daa
jne
imul
cmp
fstps
mov
cmpsl
icebp
push
adc
dec
inc
xchg
adc
sub
gs
adc
cmp
cli
bound
jg
or
bound
test
cmpw
push
hlt
fcmovne
push
xorb
add
orb
icebp
adc
mov
aad
xchg
movsl
dec
inc
mov
pop
jno
pop
insl
dec
cmp
sub
xchg
mov
fs
loop
inc
and
inc
and
push
shll
mov
iret
jae
pushf
sub
jnp,pn
sti
pop
cmpsb
jb
fucomip
fnstcw
popf
mov
sbb
cmpsl
pusha
add
add
out
fisttpll
mov
jp
add
cmc
add
add
repz
sub
inc
fdivrp
cltd
popa
icebp
jp
icebp
jae
test
pusha
stos
cmp
xor
pop
mov
sub
xchg
icebp
push
jnp
imull
push
mov
xor
or
push
push
sbb
xor
add
in
mov
into
and
push
and
inc
clc
out
jmp
adc
adc
imul
insb
add
testb
xor
adc
loope
and
dec
jl
repz
push
dec
arpl
and
push
rclb
out
inc
lock
pushf
xor
or
notl
mov
push
xchg
and
jne
pop
pop
mov
add
pushl
push
sub
mov
push
pop
repnz
or
std
jecxz
xchg
and
mov
clc
mov
add
fildll
mov
arpl
outsl
push
add
cmc
add
add
mov
push
or
cmp
jns
push
and
mov
loop
leave
int3
idivl
fadds
movb
icebp
mov
push
cs
in
cmp
ret
fistl
ret
decl
cmpsl
pop
or
nop
lcall
cmp
xor
sbb
lock
jl
in
mov
jb
vcvtss2sd
cmc
adc
inc
adc
cmp
loope
bound
data16
xchg
cmp
push
xchg
shll
pop
cltd
lods
aaa
fsubs
and
or
mov
repz
or
mov
sub
push
out
mov
jp
push
ja
pushl
xchg
jl
pop
sbb
xor
mov
pop
mov
xor
mov
or
dec
lock
push
sbb
jmpw
fnstcw
mov
shlb
add
add
add
ret
cmpl
pop
into
cld
mov
sub
jp
adc
push
imul
in
jo
mov
pop
lret
pop
and
je
push
test
push
xchg
push
pop
xor
pop
mov
sbb
leave
pop
add
mov
loope
jnp
aad
sbb
stos
push
sub
jno
insb
imul
or
dec
mov
ficoms
dec
nop
notl
in
ja
ret
dec
inc
add
stc
mov
xor
sub
lahf
pop
inc
xchg
daa
scas
pop
cmp
std
ret
cwtl
mulb
lods
stc
gs
arpl
sub
ret
addr16
sbb
aas
subb
scas
inc
pop
and
adc
insb
iret
icebp
ljmp
mov
push
xchg
and
ja
imul
push
mov
xor
add
add
imul
out
mov
arpl
mov
add
cmc
add
add
pop
xchg
jae
shl
ja
pop
adc
pushf
lahf
bound
mov
ljmp
fisttps
jae
in
jb
sbb
mov
repnz
psllw
movsl
aad
les
xor
pop
jnp
fs
nopl
jnp
lock
cli
pop
call
mov
mov
scas
dec
lret
movsb
jae
pop
mov
inc
ljmp
jle
dec
cmp
fsubs
insl
jmp
mov
mov
outsl
sub
aam
aas
dec
pushf
xchg
bound
insb
push
mov
sbb
xchg
in
jne
lret
ds
push
and
or
lea
push
cmp
int3
fidivrs
sbb
nop
call
adc
in
inc
popf
stos
scas
pop
outsl
cli
xchg
add
xchg
dec
pop
cmp
lods
sub
add
js
add
dec
stc
mov
clc
add
jl
add
cmc
add
add
loop
movsb
inc
imul
xchg
movsb
sti
gs
and
cmp
inc
imul
inc
imul
inc
pop
jbe
and
ljmp
or
mov
sub
jmp
les
fimull
cmpsb
mov
and
sub
push
push
lret
lock
jno
ss
jle
inc
sub
in
out
je
andl
movsb
pop
jno
or
xchg
js
and
leave
dec
sahf
mov
fistl
push
xor
stos
movsl
es
push
mov
sarl
mov
dec
sub
js
add
xchg
adc
mov
cltd
adc
pop
pop
mov
pop
mov
dec
cmp
fs
mov
mov
leave
pop
fisubrs
pop
sbb
pop
pop
loop
ror
loop
fisubl
xor
div
leave
mov
xor
ljmp
adc
dec
push
sbb
mov
add
jg
cld
jo
hlt
leave
sbbb
pop
add
cmc
add
add
dec
dec
mov
repnz
test
dec
repnz
xorb
xlat
cmpsl
test
out
jecxz
ret
stos
dec
push
jmp
aam
push
sub
xor
orb
adc
cmp
or
mov
les
clc
xchg
sbb
fidivl
popf
xchg
xor
mov
mov
out
sub
xlat
sub
adc
sub
push
fmul
pushf
ror
xor
xor
cmp
sub
test
sub
sbb
stc
popf
ss
push
push
xor
mov
add
aad
xchg
sti
lahf
or
int
decb
adc
cmp
scas
aaa
jb
lahf
call
outsb
fstl
pop
cmc
ja
xchg
inc
ret
push
cli
dec
xchg
in
sbb
pop
add
add
xchg
mov
mov
push
cmp
cmc
add
add
cmp
adc
pop
push
lcall
movsl
pop
stc
out
sub
inc
xchg
scas
adc
mov
iret
loop
scas
add
push
xor
mov
sbb
inc
mov
fs
daa
adc
sub
lods
mov
dec
add
lret
imull
or
aam
stc
orl
mov
fisubrl
and
fstl
dec
xchg
and
loopne
stos
icebp
push
lcall
sub
push
into
loop
in
ljmp
aam
icebp
fcompl
xlat
or
push
lds
rorl
mov
out
into
pop
xchg
js
negl
and
jae
int
inc
pop
push
mov
push
mov
push
flds
or
inc
out
enter
lcall
das
pop
sbb
pop
sbb
movsb
push
int
mov
stos
add
add
add
inc
mov
push
push
jmp
sahf
fisubs
fimuls
cmc
add
add
dec
mov
sub
add
xchg
push
mov
pop
ds
cs
es
xchg
inc
and
push
xor
gs
or
inc
test
cmpsb
leave
pusha
cmp
mov
ja
notb
add
inc
lcall
mov
or
fnstcw
add
sbb
xlat
sahf
js
int
xchg
pusha
mov
xor
enter
or
pop
mov
imul
les
sub
pop
cltd
divb
push
popf
out
stos
and
rcl
je
mov
push
ficomps
adcl
add
mov
fldt
sbb
sbb
test
loopne
stos
jns
xchg
lock
stc
push
inc
mov
scas
comiss
popf
mov
pop
insl
iret
aam
xchg
push
lret
sbb
aad
in
popa
jnp
aaa
add
add
add
sub
cmp
dec
setae
push
and
add
add
add
sbb
dec
loope
repnz
sub
sbb
scas
les
inc
jl
or
pop
aaa
fwait
addr16
mov
repz
ljmp
andl
lods
mov
ljmp
enter
pop
cmc
add
sbb
xor
add
and
aam
scas
sbb
or
xchg
push
adc
cltd
mov
pop
ret
adc
jecxz
frstor
sbb
and
jno
gs
pop
in
inc
push
push
mov
jp
jle
or
test
mov
in
lods
adc
out
stc
inc
lcall
xchg
call
in
test
sahf
add
pop
jb
ljmp
jp
and
loopne
outsl
popf
sub
mov
jg
or
push
xor
add
or
push
shll
out
xchg
inc
push
pop
pop
add
cmc
add
add
xorl
loop
jp
es
insb
leave
cmp
pop
into
clc
negb
mov
push
sub
rolb
ss
inc
add
cwtl
mov
push
jmp
lcall
jns
add
add
jae
cli
lock
in
dec
push
xchg
jnp
pop
mov
repz
xchg
andb
fists
stos
mov
pop
insb
mov
in
call
lcall
xchg
gs
mov
pop
or
into
mov
push
sahf
pop
ds
jns
sub
mov
test
scas
in
add
icebp
fwait
rorb
dec
hlt
add
cmp
cmp
pop
data16
jg
inc
aas
imul
mov
mov
pop
cmp
xor
and
sub
sbb
out
jl
mov
push
mov
xor
add
stos
push
lcall
inc
and
out
loop
or
add
cmc
add
add
inc
and
mulb
mov
sbbb
lea
mov
sub
and
insl
icebp
imul
sub
mov
popf
jne
jne
int
or
fadds
shlb
iret
pop
mov
ds
mov
pop
add
mov
mov
cmc
mov
jb
dec
xchg
adc
stos
cmp
mov
pop
jmp
jle
data16
test
xor
test
dec
jns
pop
popf
mov
jnp
jb
push
cli
xchg
jae
mov
xorl
adc
arpl
xchg
fcompl
and
lret
jmp
sub
fs
shr
aas
cltd
out
ds
or
cmp
shl
xor
mov
push
pop
mov
cld
clc
aaa
and
addr16
add
add
jbe
idiv
imul
jg
xor
popa
add
cmc
add
add
mov
repz
inc
xor
scas
mov
pop
ret
add
and
ud1
test
pop
ret
std
fisttpl
jge
call
jg
roll
mov
cli
push
aaa
lods
or
mov
fistpll
mov
push
jnp
insl
cmpsl
imul
subl
mov
xor
jg
adc
xor
xchg
addb
outsl
es
outsb
jo
dec
fildl
dec
or
call
fldenv
xchg
cmp
dec
enter
dec
jecxz
arpl
test
movsb
sbb
pop
push
notb
int
sahf
jbe
ficoml
pop
adc
jns
mov
mov
cld
jno
rcll
cmp
fidivl
shll
xchg
sub
jbe
add
xchg
sbb
mov
push
push
xor
sar
outsb
xchg
insw
sbb
roll
add
jae
fwait
cmp
dec
data16
cmpb
popa
add
cmc
add
add
xor
mov
adcb
test
aam
push
lods
pop
jno
ljmp
dec
enter
push
pop
pusha
fldcw
inc
shll
mov
fisubl
or
stos
mov
fsts
mov
mov
adc
add
or
fildll
push
aaa
std
xchg
jecxz
push
jns
jo
popl
ljmp
pop
loopne
add
insl
or
daa
aad
aam
js
int
dec
xor
cmp
arpl
xchg
or
dec
jl
mov
int3
mov
sbb
push
adc
inc
jl
xchg
imul
popa
jmp
xor
in
int3
jo
cmpsl
mov
aas
pop
cmp
decb
mov
stos
dec
inc
hlt
add
add
clc
mov
or
mov
add
cmc
add
add
or
adc
xor
fldt
inc
sub
adc
xchg
jl,pn
imul
cmp
jbe
mov
int3
scas
bnd
lock
jnp
cmp
clc
pop
sbb
in
lret
add
hlt
and
das
jno
sbb
xlat
aaa
lds
sub
dec
popa
add
push
lret
enter
inc
cmp
sub
out
mov
sub
xlat
ja
sti
daa
xor
outsl
xchg
daa
mov
iret
movsl
dec
pop
gs
push
jp
das
and
fs
sub
or
push
push
das
sti
add
hlt
gs
mov
cli
sbb
sub
sub
test
cmp
test
and
in
cmpsb
mov
icebp
movsl
lea
pop
out
test
outsb
or
mov
adc
push
ret
daa
sub
jno
mov
fiaddl
add
scas
xchg
push
adc
out
mov
add
loopne
add
cmc
add
add
arpl
pop
rolb
mov
in
aam
popa
aad
and
jns
mov
pop
fcoms
aam
and
lcall
xchg
sub
fdivrs
mov
add
lds
xor
test
jnp
inc
and
stos
aas
shrl
outsl
iret
das
pop
dec
push
mov
dec
test
push
jg,pn
pop
mov
aam
loop
cltd
fadd
in
mov
notb
mov
mov
xchg
int
sub
mov
push
nop
dec
loope
imul
js
test
inc
imul
imul
test
scas
jns
sbb
into
cmp
push
dec
pushf
cltd
xchg
jmp
inc
insl
adc
out
push
addr16
mov
addr16
xchg
daa
xchg
cmpl
fistl
xchg
jle
in
movsl
mov
mov
insb
xchg
daa
loop
fdivs
mov
add
add
mov
int3
rorb
mov
iret
sub
add
cmc
add
add
or
fdivrl
pop
not
lock
xor
push
es
in
mov
out
rcrl
stc
shll
sub
push
sti
push
test
and
mov
jns
dec
ds
inc
and
cmp
fwait
mov
insl
loope
and
js
pop
xchg
sub
mov
xadd
and
mov
jnp
add
sbb
xchg
aad
aas
push
adc
clc
xchg
and
pop
shl
imul
movsl
aam
push
out
addr16
addr16
movsb
push
lds
add
jb
fsubl
test
test
or
or
adc
xor
inc
loop
lods
jns
lea
ffree
inc
jg
cmp
aam
xor
sbb
nop
jge
stos
lods
hlt
cmp
push
in
sti
outsb
lods
xchg
adc
add
mov
and
das
lret
cmp
inc
imul
add
add
adc
in
pop
enter
xchg
popf
mov
andl
mov
outsb
and
mov
push
cmp
or
fisubrs
xchg
xchg
jp
cmpsl
adc
aam
xchg
cmp
adcl
mov
jecxz
inc
mov
test
push
sub
insl
cmp
push
les
or
mov
and
or
push
jg
mov
xchg
out
repz
and
cli
lret
mov
xlat
ja
mov
mov
jnp
fistpl
fwait
stc
lret
xor
jge
push
fimuls
xor
xor
push
push
adc
pop
xlat
xchg
push
add
dec
mov
mov
cmpsl
or
rolb
addr16
push
or
int
push
aad
sbb
sbb
into
mov
sbb
add
fsubl
mov
lods
push
adc
mov
add
add
add
out
mov
fadd
popf
data16
lock
cmp
js
in
jb
adc
rorl
fsubrl
leave
cmpsl
mov
push
push
mov
in
cmp
out
jmp
xor
inc
cld
mov
inc
mov
ja
in
jbe
imul
pop
es
mov
push
jae
xchg
into
scas
ss
sub
jne
fnsave
jb
sbb
lds
xor
insb
mov
loopne
pop
les
aaa
mov
je
js
mov
jbe
xchg
frstor
xorl
cmpsb
iret
and
mov
mov
push
out
push
push
xor
adc
icebp
es
or
cmp
cld
rorb
mov
xchg
ljmp
dec
pop
sub
cld
or
rclb
xor
inc
sbbl
sub
add
xor
mov
and
mov
add
cmc
add
add
xor
test
mov
fsubrs
add
outsb
mov
aaa
test
inc
leave
scas
pop
adc
in
mov
xlat
xor
cmpsb
xchg
lret
jne
and
pop
arpl
jmp
dec
lods
cmpsb
mov
mov
sbb
pop
loopne
lcall
cmp
adc
adc
lea
xor
movsl
mov
pop
stos
leave
sbb
xor
stos
inc
and
lcall
andb
inc
pop
pushf
sub
jmp
int
iret
push
adc
sbb
lods
and
push
mov
mov
lods
loopne
aam
loop
sbb
push
push
mov
dec
test
mov
jmp
inc
movsb
inc
ret
mov
int3
xlat
arpl
cli
mov
pop
outsb
lods
add
rcr
push
adcl
mov
mov
sub
sbb
loopne
push
add
cmpsb
mov
adc
push
iret
push
or
and
mov
ljmp
mov
mov
pop
in
push
pop
sbb
jp
jnp
rorl
add
addr16
sbbl
xchg
enter
mov
push
lock
mov
mov
cmpsl
arpl
icebp
push
dec
add
xor
or
loop
dec
sub
cmpsl
cmp
add
push
mov
jo
pop
lret
inc
enter
xor
mov
jne
lahf
push
test
std
es
lods
jns
adc
int
cwtl
sub
addl
mov
inc
jno
sbb
pop
mov
imul
rcrl
lods
adc
mov
adcb
push
arpl
inc
mov
jno
jo
pop
jg
push
sbb
mov
test
mov
scas
shrl
fldt
inc
data16
add
add
out
into
push
cmp
sub
lret
aas
sahf
imul
add
jb
mov
dec
mov
pusha
in
out
mov
cmp
or
rcrl
rol
jle
add
push
or
enter
xor
dec
daa
cmpsl
mov
insl
cmp
vpsrlq
xchg
mov
xchg
mov
sub
lods
out
fsts
loope
lret
push
imulb
cmpl
xor
addr16
pop
daa
stos
in
mov
jo
xor
ja
in
mov
out
mov
daa
sbb
sub
sahf
push
das
les
popa
stos
sub
dec
pop
mov
jle
daa
dec
lret
outsl
int
xor
mul
ret
fcmovbe
mov
popf
push
leave
xor
sub
pop
cmpsb
stos
push
jnp
and
jl
ja
cmp
mov
leave
dec
lret
mov
outsl
cltd
jbe
repnz
shlb
sbb
and
mov
fisttps
jo
sbb
outsb
xchg
push
add
add
add
mov
jno
out
sub
pop
shlb
and
push
lea
aam
lret
ret
sbb
mov
lret
sub
stos
in
add
loop
lret
sub
dec
out
mov
lods
add
pop
xchg
xor
ljmp
fwait
jae
cwtl
call
and
push
inc
or
jl
mov
ljmp
push
outsb
inc
ds
sub
fldt
lea
mov
inc
xchg
fcompl
pop
stos
ljmp
sub
pop
test
xchg
cmp
iret
xor
mov
push
dec
xchg
pop
icebp
mov
add
and
std
dec
adc
xchg
dec
in
fidivl
fsubrl
jmp
subb
xchg
cmpl
cmp
xchg
mov
test
sbb
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
mov
add
add
add
sti
fwait
adc
mov
inc
mov
jo
lods
les
outsl
test
mov
sub
fimull
rclb
xor
call
fnstcw
mov
sub
jmp
xor
icebp
movsl
pop
mov
dec
sarl
inc
stos
sbb
mov
ja
ds
xchg
dec
push
lods
addr16
lea
pop
out
pop
lret
jge
mov
inc
or
and
jne
add
jae
aaa
adc
lcall
aam
xor
aam
subl
hlt
add
mov
or
xchg
mov
mov
sub
lcall
mul
dec
push
imul
ret
inc
push
lock
mov
hlt
pop
inc
mov
add
rclb
push
push
xor
mov
pop
shlb
sub
sub
xchg
sahf
pop
testl
add
add
add
add
mov
cs
xchg
sub
out
pop
dec
jne
jb
scas
push
pop
cmpsb
inc
mov
mov
xchg
enter
out
add
pop
push
add
mov
mov
xor
jae
mov
mov
enter
fldl
cmp
adc
pop
adc
sub
mov
inc
xor
fwait
lcall
cld
cmp
mov
xchg
loope
lret
sub
pop
jge
inc
sbb
sub
pop
hlt
add
out
inc
aas
inc
cmc
test
sub
cmp
jb
fs
mov
popf
outsb
push
ret
sub
pop
xchg
xor
nop
sub
imul
orl
push
and
dec
test
jbe
sbb
sbb
repnz
add
nop
fsub
nop
iret
jno
mov
outsl
in
add
add
pop
mov
movsb
inc
gs
pushf
or
shlb
add
cmc
add
add
rcr
pop
es
jg
inc
movl
sbb
mov
jnp
add
push
pushf
push
loopne
in
lock
pop
lds
xor
jne
test
fs
jno
sub
xor
lock
cmp
loope
adc
or
xlat
mov
cltd
inc
pusha
push
mov
js
push
pop
es
insl
out
fistpl
mov
and
enter
imul
lahf
xchg
fmul
push
mulb
jae
adc
andb
fmuls
dec
push
xor
pop
pop
push
mov
inc
and
repz
xor
lahf
stc
mov
lock
popf
mov
jle
test
loopne
mov
jle
sbb
ds
int3
push
mov
mov
push
int
add
pop
addl
enter
add
add
repnz
movsb
jle
mov
js
outsb
add
cmc
add
add
mov
adc
stos
lcall
imul
movb
xchg
aam
je
sahf
push
insb
pop
add
leave
inc
inc
andl
mov
jg
inc
ja
popf
fdivrp
xchg
cmpsb
jg
clc
dec
jno
xor
rcrb
dec
das
inc
xor
mov
fimull
add
pop
test
sub
or
push
sub
push
cmp
cmp
nop
gs
mov
outsl
and
out
push
mov
shl
sub
mov
adc
fldcw
pushf
shl
rol
cwtl
sbb
cmp
cmpsl
pminsw
sbb
xor
jmp
cld
das
stos
xchg
dec
fwait
mov
jb
jmp
stos
loopne
or
fwait
aas
mov
rcll
mov
add
stos
sub
stos
out
jmp
sub
push
lds
pop
outsl
add
cmc
add
add
push
jg
jns
clc
out
std
mov
and
andb
mov
fstps
insb
cmp
and
xchg
mov
insl
adc
dec
scas
loopne
icebp
or
mov
dec
rcl
jno
mov
and
fiadds
test
cmc
xor
cmp
dec
jbe
xchg
mov
pop
pushf
cmp
pusha
jne
cli
push
movsl
jl
aas
pushl
test
jmp
pop
test
pusha
out
rolb
sbb
lods
enter
fsts
sbb
push
arpl
mov
stc
pop
sbb
ja
pop
mov
mov
iret
sbbl
adc
pop
sysret
int3
and
cmpsb
mov
mov
mov
pop
sti
mov
push
mov
push
or
jb
imul
pop
js
les
movsb
insl
pusha
jmp
add
add
mov
fnstenv
dec
adc
add
cmc
add
add
loop
popf
mov
cmp
test
pop
das
push
out
xchg
dec
mov
shll
jg
in
in
popf
jecxz
cltd
or
into
and
ss
push
nop
inc
data16
scas
cmp
out
lods
pop
push
pop
addr16
mov
push
jns
push
movsb
fisttpl
aaa
mov
add
cmp
mov
sbb
outsb
xor
push
xchg
pop
jmp
fsts
jge
and
call
cmpb
xchg
adc
fsubp
or
sarl
pop
pusha
outsb
jge
xor
or
shlb
movsb
lock
jnp
outsb
mov
sbb
jae
scas
and
sbb
leave
push
aas
inc
sub
inc
test
sbb
mov
and
out
addr16
loope
out
mov
in
addr16
push
push
out
into
aaa
mov
jae
dec
out
repnz
add
cld
je
jbe
jmp
lea
xchg
pop
scas
inc
loop
jno
add
add
add
sbb
shlb
aas
negl
inc
into
xor
or
pop
inc
pop
add
cld
je
popa
mov
mov
mull
jp
icebp
outsl
filds
stos
lods
iret
jmp
pop
xadd
sub
cld
xor
rolb
icebp
adc
out
hlt
push
mov
inc
out
mov
ret
aam
mov
push
push
test
xchg
lea
mov
adc
sti
iret
aaa
test
push
stos
xor
popf
leave
adcl
mov
mov
hlt
fdivrs
push
sub
cs
jmp
dec
mov
push
cmp
mov
sub
jbe
add
sbb
sbb
aaa
dec
repz
jg
gs
or
cmp
xor
ss
xchg
xchg
sbbl
mov
or
and
add
call
test
add
add
cltd
jmp
fcmovnbe
cld
xor
lahf
mov
and
jb
add
add
add
add
push
neg
dec
and
leave
xorb
adc
fisttpll
mov
lea
sbb
icebp
xchg
jg
mov
jecxz
pop
mov
repnz
inc
add
lock
enter
mov
sub
push
outsl
and
popa
aaa
lds
fisttpll
pop
cli
loopne
clc
jle
es
and
notl
and
mov
mov
sub
cmp
cmpsl
add
inc
aam
sub
dec
loopne
xor
data16
pushf
mov
xor
popf
adc
sub
mov
sub
sub
sbb
aam
jns
test
cmp
nop
sbb
sarl
sub
pop
hlt
popf
jnp
mov
sub
add
mov
mov
push
jg
pop
jne
clc
dec
xor
jae
add
add
add
push
std
inc
shll
dec
imul
sub
jnp
fstpt
sub
cmp
roll
jae
mov
lcall
loop
push
test
sub
push
sahf
repnz
shlb
add
arpl
jb
lcall
and
fiadds
xchg
adc
fsubl
xchg
add
arpl
pusha
sub
pop
stc
ret
or
adc
adc
mov
dec
xchg
xchg
jnp
es
lcall
add
insl
adc
fsubrs
mov
das
push
loope
add
adc
dec
xor
dec
ret
mov
cmp
mov
push
pop
jle
or
sbb
lretw
add
outsl
xchg
mov
mov
rcl
mov
cmc
test
imul
and
add
iret
mov
fucomip
addr16
outsl
stc
and
add
add
push
jp
mov
jle
or
fstpl
sti
sti
std
mov
fbld
xlat
sti
inc
add
ja
push
arpl
push
dec
sbb
jno
fs
inc
call
xor
imul
scas
xchg
push
push
xor
je
and
xor
sbb
sbb
movsl
mov
das
push
mov
int3
inc
icebp
mov
jl
sarb
sub
dec
outsb
sbb
cs
sbb
cmp
adc
mov
pop
inc
sarl
jbe
sbb
inc
out
neg
and
popa
sub
subl
and
les
cwtl
sub
dec
or
jmp
shr
mov
clc
mov
leave
push
popf
popl
insl
push
jns
les
aad
pop
sahf
jmp
shll
dec
es
or
rcr
pop
int3
es
mov
pop
jle
movsb
mov
aad
add
imul
dec
out
iret
jmp
cmpsb
add
jnp
jne
add
add
add
push
mov
jbe
idivb
imul
or
xchg
push
test
mov
jecxz
lods
rorl
and
std
dec
cs
mov
sub
pusha
push
outsb
pop
xor
xchg
push
inc
jns
mov
xchg
mov
cli
adc
mov
add
lcall
sahf
popf
mov
popa
pop
jmp
hlt
gs
pop
fnsave
xor
dec
movsb
dec
adc
sbb
mov
jae
enter
pop
sub
outsl
dec
es
in
fwait
xchg
pop
push
leave
or
aam
div
adc
dec
xor
scas
cmp
dec
xor
xor
add
inc
ret
pop
into
lcall
mov
xor
notb
add
or
lods
and
add
dec
jge
sbb
dec
mov
subl
xchg
mov
or
pop
std
pop
sbb
jle
lret
or
cmp
cmpsl
out
xchg
sti
mov
outsb
xor
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
iret
sbb
pcmpeqd
add
add
add
add
aaa
lock
daa
jmp
mov
xchg
cmc
fstpt
mov
add
xor
scas
xchg
iret
push
bound
addl
loop
les
add
cmp
hlt
pop
push
cmc
les
ljmp
pop
adc
andb
adc
xchg
or
aaa
adc
mov
add
adcb
iret
ds
mov
jbe
repnz
jl
fsubrl
dec
sbb
push
icebp
ret
xor
rep
mov
jne
xchg
std
mov
add
scas
cmp
scas
push
loop
jne
or
xorb
push
mov
or
pop
jge
sahf
push
es
stc
pop
dec
and
addr16
pusha
mov
sub
out
sbb
sti
rcrl
mov
mov
add
in
lods
imul
neg
std
stc
idivl
leave
add
add
cmc
add
add
push
push
int3
test
repz
lahf
movsb
clc
inc
cwtl
and
out
xchg
pop
loope
or
enter
lds
pop
sub
lock
adcb
rorl
pusha
xchg
jo
shl
xor
bound
cmc
xchg
fwait
push
mov
mov
aas
movsl
fistps
mov
and
push
stos
fwait
icebp
mov
test
cmp
mov
push
loop
lods
les
xchg
movsb
add
push
in
test
cmp
cmp
xchg
imul
fwait
aaa
das
xorb
stos
mov
loop
mov
cmp
adcb
mov
mov
jno
fcmovu
in
sahf
lds
jo
jmp
inc
or
xorb
gs
mov
incb
or
js
cld
mov
gs
jb
mov
imul
add
push
subb
in
push
mov
push
sub
add
cmc
add
add
push
pop
jmp
insb
mov
stos
sbb
ror
jle
pop
xchg
mov
popf
adc
xor
push
cwtl
mov
in
and
jg
cmp
pop
imul
pusha
pop
pop
mov
xor
mov
mov
shl
or
xor
repnz
xchg
adc
mov
sbbb
aam
pop
leave
clc
push
rcrb
push
in
mov
jnp
movsl
push
mov
cmp
xor
inc
insb
sbb
push
push
sarl
cmp
fiadds
lcall
rcll
sbb
sbb
mov
cmp
lds
cs
xchg
aas
popl
shlb
mov
testl
mull
add
ja
out
dec
jg
aad
adcl
add
add
out
jae
pusha
inc
ds
fst
sub
mov
mov
mov
or
pop
adc
pop
xchg
add
mov
mov
out
jle
push
in
inc
pop
stc
jecxz,pt
or
sbb
hlt
fcmovb
ret
push
mov
lea
stos
xor
sbb
ret
push
mov
sbb
push
addr16
testb
cmpsb
testl
sub
test
andb
or
adc
xor
inc
popa
xor
jae
push
sub
mov
loop
aas
push
sbb
dec
gs
mov
fisubl
stc
out
andl
mov
fnsave
in
adc
movsb
xchg
lret
test
sub
mov
add
or
xchg
dec
scas
gs
or
daa
lret
ds
dec
inc
push
rcl
punpcklwd
jae
sbb
lahf
sub
mov
jg
addb
add
sub
ja
mov
paddq
add
cmc
add
add
jmp
mov
sub
mov
push
and
clc
das
and
push
jne
fimull
rcll
lret
call
pushf
stos
in
xor
pop
xor
mov
popa
aas
push
std
fs
ja
jne
enter
mov
mov
push
xchg
pop
cli
add
pop
and
movl
cs
shlb
cmp
jg
push
jge
pop
or
js
mov
adcl
arpl
add
or
in
repz
cmpsb
shll
insl
xor
sbb
js
push
xchg
mov
bound
in
les
popf
jmp
lock
mov
push
je
ss
fstpt
lret
rcll
loop
fcmovnu
jl
outsb
mov
outsl
add
test
push
mov
fs
loopne
daa
jl
add
int
mov
jnp
jge
xchg
xor
add
cmc
add
add
das
mov
stc
fs
clc
xor
cmp
std
mov
add
dec
xchg
add
mov
popa
iret
cltd
jbe
scas
scas
cli
cmp
push
adc
and
stos
mov
test
fmul
lock
test
xchg
in
mov
mov
iret
out
adc
push
jp
mov
shr
cwtl
mov
test
aam
in
jno
or
stos
sarb
push
push
push
lods
popf
adc
call
jb
repz
xchg
jo
popf
inc
mov
jmp
xchg
jns
pop
dec
loopne
loopne
push
mov
mov
xchg
negl
pop
jne
push
xchg
aad
mov
xchg
and
mov
hlt
xor
popa
popf
mov
loop
jo
bound
dec
pop
sbb
fs
fcmovne
xchg
popa
cmp
mov
pushf
out
in
lock
js
add
cltd
sub
test
mov
and
add
add
cli
xchg
jle
mov
mov
test
movsl
int
add
cmc
add
add
jmp
sbb
add
jp
fwait
nop
mov
mov
out
loope
sar
test
push
stos
mov
insb
lods
xchg
jp
mov
adc
fdivrl
or
xchg
scas
pop
sbb
shll
in
or
int
mov
mov
insl
pop
mov
push
call
je
aas
jno
mov
sbb
mov
insb
scas
inc
rcll
sub
movl
nop
inc
mov
adc
test
mov
pop
jae
mov
lods
xor
sub
pop
rcrb
cmc
js
jmp
aam
in
mov
aam
stos
mov
enter
mov
cs
sub
push
or
fnstenv
pop
adc
jle
shll
aaa
idivl
test
add
add
fwait
jnp
aad
gs
into
add
push
jb
jl
add
add
add
shrb
mov
sbb
gs
aas
or
insl
rcr
mov
fsubrp
rcrb
insl
cmp
mov
or
daa
andb
mov
push
popf
aas
push
push
sbb
jecxz
cmpsl
scas
xor
lret
std
mov
cwtl
jo
imul
idivb
test
push
adc
ja
pop
mov
cmp
jbe
add
and
and
inc
dec
imul
in
add
out
mov
jecxz
inc
jno
cmp
sti
sbb
and
lret
add
scas
ret
dec
fsubs
mov
fwait
adc
pusha
xor
out
ror
jns
mov
or
push
shlb
sub
imul
mov
sub
aam
cld
sbb
imul
je
lcall
add
mov
std
mov
enter
and
jge
add
add
add
ret
fadd
push
fwait
xor
jnp
xor
imul
adc
loopne
mov
xchg
mov
es
lea
sbb
lods
mov
repz
fcomps
movsl
mov
int3
hlt
jle
adc
mov
les
stc
cli
and
push
jbe
cmp
stos
jno
pop
js
insl
negl
loope
mov
lret
sub
nop
ljmp
shr
and
cli
outsl
cmpsl
push
negl
xchg
in
cld
or
jp
stc
gs
push
mov
jae
mov
cmp
enter
adc
scas
mov
dec
popf
mov
hlt
mov
stos
cmp
inc
inc
jno
jb
push
or
sbb
or
adc
xchg
aad
adc
and
xchg
sub
xchg
xchg
or
jne
add
add
fstl
out
testl
add
add
add
dec
es
add
adc
ret
jbe
and
std
mov
cmpl
inc
hlt
jp
loopne
sub
movsl
push
mov
aaa
stc
push
scas
inc
add
ss
pusha
inc
inc
leave
or
cli
pop
push
mov
add
pop
pop
int3
mov
lods
rcll
icebp
mov
mov
test
fs
adc
fildl
cltd
js
sti
sbb
mov
lret
cmp
xor
dec
scas
into
xchg
loope
and
and
xchg
xchg
jne
fbstp
faddp
mov
iret
xor
mov
push
xchg
mov
loope
dec
push
add
lcall
cmp
das
shll
adc
push
inc
mov
test
test
sbb
add
or
jecxz
out
push
mov
insl
mov
mov
add
add
bound
in
pop
test
testl
cmc
add
add
xor
push
clc
xor
push
testl
jg
test
cmp
jle
aam
xor
out
ljmp
jle
jb
mov
stos
push
std
sbb
mov
mov
and
dec
add
iret
ret
add
aam
dec
pop
out
add
cmpb
xchg
mov
pop
xor
sbb
dec
fsub
int3
lahf
pop
and
call
pop
loop
xchg
inc
add
add
test
or
push
fcom
or
sbb
jae
jge
mov
rcrb
lcall
mov
lea
pop
jae
call
ret
cld
int3
test
sub
xchg
jbe
les
bound
xchg
adc
or
ret
cmpl
jg
nop
xchg
stos
xchg
add
add
divl
bound
pop
mov
add
add
mov
fidivs
incl
jo
lds
push
cmc
ds
ficoml
jbe
pushf
adc
repnz
mov
jb
sahf
jbe
sub
mov
repz
add
push
inc
adc
inc
mov
clc
in
adc
sbb
in
je
test
rcrl
push
popf
mov
push
sub
sub
scas
mov
movsb
pop
cmp
jnp
add
jns
shrb
mov
xor
and
rolb
clc
xchg
stc
dec
addr16
icebp
sub
leave
andb
loope
loop
jle
pushf
loopne
div
sub
fcomip
loopne
imul
insl
nop
jo,pt
test
mov
sub
dec
jg
testl
shlb
lds
les
pop
dec
cmc
imulb
imul
xchg
add
add
fisubs
mov
push
mov
lds
mov
add
fstpt
and
xchg
lods
jg
sub
gs
sbb
xor
arpl
cmc
outsl
mov
stos
es
sbb
dec
out
call
scas
jbe
inc
mov
inc
jecxz
movsb
pop
xor
lahf
inc
out
mov
jae
jb
ss
ret
call
sbbb
inc
aas
mov
rcrb
out
add
mov
das
inc
sub
lahf
jne,pn
jg
xchg
sbb
sub
out
jecxz
or
sub
mov
fildl
jne
sbbb
in
mov
rol
aas
push
test
or
add
adc
mov
add
out
dec
mov
andb
imul
add
add
out
stos
imulb
cmpsb
push
mov
andb
sbb
scas
js
add
add
mov
outsl
jne
ljmp
push
sarb
cmc
add
add
aaa
mov
or
mov
mov
cmp
dec
mov
int
stc
cmp
movsl
cmp
hlt
or
sub
in
fnsave
mov
and
pop
inc
inc
movsb
dec
xor
std
xchg
and
dec
popf
pop
sahf
pop
xor
adc
lea
mov
mov
mov
popa
ret
pop
test
in
xlat
cltd
cmpsb
rol
ljmp
sbb
loope
sarl
das
inc
test
mov
cmpsl
pop
mov
jae
xchg
inc
cs
dec
xlat
mov
pop
mov
sti
leave
mov
and
cs
inc
push
ror
fisttps
jbe
mov
out
fildl
out
push
sub
std
iret
arpl
gs
dec
cmc
movsb
ror
inc
jae
cli
mov
outsb
mov
loope
mov
mov
jle
sub
js
inc
lock
adc
mov
add
add
testl
mov
cmc
add
add
push
js
push
sbb
add
js
test
mov
dec
cmp
cwtl
cmp
ss
jle
out
es
and
insl
sar
cs
xchg
mov
jnp
in
xor
lret
jb
pop
dec
mov
fs
push
or
leave
push
in
mov
lods
sahf
push
and
pop
leave
mov
or
adc
and
in
addr16
jo
push
ja
xchg
push
or
add
push
fldenv
jnp
pop
pop
xor
or
ja
push
xor
jge
ja
int3
mov
aaa
mov
push
jg
enter
add
xor
push
addr16
cmp
inc
sbb
adc
and
cmp
pop
and
adc
lods
mov
xchg
aas
xchg
dec
fsubrp
xchg
mov
add
add
jo
ja
std
stos
lods
and
fisttpll
test
add
add
add
sub
lahf
out
add
add
jecxz
xchg
mov
test
addr16
xor
in
mov
or
adc
jnp
sbb
in
xchg
lods
pop
rcrb
push
or
outsb
lret
mov
hlt
pop
pop
mov
xor
jecxz
or
pop
movsl
inc
aas
mov
push
popf
lock
pop
std
ljmp
movsb
sub
cmpsl
sub
sahf
pop
cmp
mov
xlat
cmp
int3
cmpsl
je
sub
andb
cmp
daa
dec
adc
push
icebp
lods
mov
clc
ss
sbb
dec
leave
pop
arpl
push
add
incb
cmp
imul
sub
fmul
in
and
cmc
sub
push
xchg
pusha
push
repnz
bound
mov
das
sub
sti
add
add
cmpsb
arpl
je
mov
add
cmc
add
add
insl
mov
add
dec
mov
mov
jmp
pop
xchg
js
inc
mull
dec
sub
andb
sub
and
in
push
cmp
mov
pop
cmpsb
jp
ret
inc
rcl
jbe
iret
xor
fsubrl
mov
pushl
jle
jle
mov
int3
sub
pop
or
xchg
push
inc
mov
and
ret
in
mov
sbb
add
cmp
xor
push
cmc
cmc
dec
and
push
jmp
push
xor
iret
arpl
xor
lret
jl
cmp
lods
sub
jne
jae
sti
leave
js
push
xor
and
and
shl
ljmp
dec
int
repnz
mov
mov
popa
add
loope
adc
dec
incb
outsl
mov
in
clc
sbb
jo
add
add
cmp
cli
mov
pushl
add
cmc
add
add
loop
sahf
aam
imul
pusha
out
sarb
enter
add
push
mov
pop
movsl
mov
xchg
mov
mov
testb
ss
xlat
clc
inc
addr16
fnstcw
mov
mov
jecxz
sbb
mov
xlat
push
nop
sarb
data16
pop
call
jns
push
mov
jo
cmp
stos
dec
lds
xchg
dec
adc
aam
dec
pop
rcrb
clc
dec
pop
js
fwait
xchg
add
scas
ss
jge
mov
and
mov
mov
mov
xor
enter
lcall
cmp
cmpsl
sub
test
pop
aas
push
xchg
push
mov
and
cmp
jge
pop
leave
dec
pop
int
push
pop
jbe
dec
pop
add
testl
jge
add
std
test
ljmp
mov
add
cmc
add
add
push
roll
pop
pop
xlat
imul
fnstcw
addr16
cwtl
xchg
sarb
xchg
pop
xor
push
sbbb
loope
push
sbbl
mov
jmp
fstps
inc
pop
add
or
das
push
shrl
negl
movsl
dec
or
mov
shlb
imul
shlb
out
pop
cld
cmp
mov
mov
dec
in
mov
cli
adc
mov
shr
aas
out
jno
or
pusha
jo
push
jb
fwait
mov
dec
or
fcoml
pop
enter
xchg
cli
out
test
fs
int
push
cmp
inc
adc
cmp
cmp
push
and
xor
pop
pop
pop
mov
stos
mov
cld
adc
mov
adc
sbb
iret
jl
push
add
add
xchg
xchg
jns
incl
mov
mov
add
add
add
or
lcall
adc
pop
jmp
push
pop
push
call
mov
cmp
pop
or
mov
imul
out
in
or
xor
sub
lret
mov
mov
push
inc
cvtps2pi
mov
aaa
xor
jp
andb
jmp
ljmp
rcrl
push
repnz
jno
cmp
pop
inc
test
out
nop
cmp
das
ja
sar
dec
cmp
adc
jl
stos
cmpsb
jl
ror
and
or
add
push
or
xchg
neg
cmp
or
js
ffreep
repz
sub
insl
adc
dec
repnz
arpl
dec
dec
pop
sbb
fs
pop
or
in
fists
in
popf
aaa
and
cmovl
inc
mov
inc
into
add
sub
add
scas
lcall
xchg
dec
lea
xor
add
xchg
dec
fdivs
mov
lock
mov
sbb
int3
or
clc
or
inc
or
pushl
jmp
mov
shll
lea
jo
mov
movsb
dec
stc
add
fidivrs
mov
and
inc
add
mov
jg
repnz
nop
pop
push
hlt
movsb
lea
sub
xlat
aad
mov
jo
loop
cmp
arpl
inc
ret
and
mov
dec
rcl
adc
mov
shrl
xchg
cmc
lods
and
cmp
daa
push
lahf
add
adcb
adc
mov
rol
jge
jle
das
arpl
loopne
sarb
xchg
es
push
mov
and
jmp
jp
pop
mov
cmp
js
xchg
mov
or
add
mov
idiv
fst
inc
sahf
pop
mov
push
push
sub
add
not
cmp
sub
call
cmp
out
sbb
pop
adc
mov
add
inc
stos
jno
add
mov
insl
xchg
and
push
pop
fwait
in
jb
wbinvd
push
xchg
push
add
push
loope
gs
push
xchg
dec
dec
mov
push
mov
add
jb
mov
mov
and
push
add
inc
sbb
xchg
out
pop
and
js
lods
mov
rcll
ss
xor
inc
mov
mov
xchg
sbb
or
leave
dec
lret
pop
enter
xor
adc
pop
cld
adc
and
pop
and
test
jno
icebp
add
dec
pop
jb
stc
mov
jae
mov
ret
fistpl
pop
daa
adc
insb
or
call
adc
xchg
call
and
mov
mov
add
add
add
pop
push
inc
fmul
cmp
adc
adc
jmp
adc
sbb
test
scas
pop
dec
push
icebp
jo
test
mov
repnz
call
js
out
scas
push
pop
inc
add
mov
loope
pop
lock
mov
mull
push
fsubrs
mov
add
jo
add
cmp
xchg
cltd
xor
cmp
push
push
pushf
pop
jb
test
jae
inc
or
mov
pop
xchg
fldenv
enter
fdiv
inc
and
insl
pop
pushf
jmp
jmp
ds
test
add
jae
or
pop
jae
dec
push
subb
fldcw
sbb
dec
scas
test
ljmp
mov
pop
notb
push
clc
push
mov
imul
sub
shrl
jne
pop
cmp
adc
push
int
inc
add
add
sti
iret
and
repnz
add
add
add
insl
push
and
sub
pop
sbb
lcall
outsb
in
sbb
mov
pop
in
clc
sub
mov
inc
jg
adc
hlt
inc
test
fisubrl
jns
xor
inc
and
sub
and
rclb
mov
ficompl
push
mull
sbb
inc
jbe
mov
hlt
adc
test
test
stos
inc
jnp
jnp
shl
mov
scas
cmp
fsubp
adc
fwait
insb
lret
xchg
lret
aad
mov
sub
pop
mov
stc
pusha
pop
jo
adc
lods
push
jno
and
and
data16
sbb
or
push
push
and
pop
movsb
popa
and
or
std
sub
clc
clc
js
pop
shll
gs
mov
push
out
outsl
xlat
aaa
add
cmp
fcoms
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
int
mov
cmc
add
add
dec
pushf
or
sub
jecxz
mov
addr16
int
ret
mov
lock
aam
jae
movsl
lock
xor
sbb
jno
addr16
sbb
sub
imul
out
add
push
aaa
sbb
cmp
cmp
sub
js
rcr
enter
insl
jmp
mov
bound
insl
div
mov
fildll
int
sbb
mov
mov
lret
mov
push
push
iret
cli
scas
nop
lea
mov
leave
add
xchg
icebp
push
pop
pop
xchg
dec
pop
icebp
testl
push
xor
movsb
lret
jecxz
mov
pop
sub
xchg
ja
mov
add
test
addr16
push
ret
jnp
add
and
lret
or
cltd
std
mov
icebp
add
add
mov
into
frstor
add
cmc
add
add
inc
adc
clc
ds
lcall
roll
imul
or
add
cmp
lretw
ffree
enter
repz
fdivrl
xchg
pop
es
pop
cmp
jo
jae
lods
dec
mov
push
iret
insb
xor
mov
in
outsl
cmc
addl
mov
or
jle
sbb
cmp
mov
xor
out
xlat
movsb
mov
movsb
inc
jae
lahf
add
loopne
push
xchg
xchg
mov
lret
out
aam
push
push
push
cmc
in
mov
jae
push
mov
adc
jecxz
and
sbb
scas
pop
jg
in
jnp
stc
lret
sbb
adc
mov
int3
je
clc
ss
pop
sbb
gs
arpl
and
inc
sub
stc
add
mov
xor
add
add
pop
test
ljmp
jp
cmp
imul
add
stos
lock
xorl
movsb
and
and
insb
out
sub
out
mov
pushf
sbb
add
or
repnz
adc
out
inc
mov
test
ret
dec
xchg
ret
out
aam
cmp
adc
push
mov
dec
jp
cmp
ror
mul
and
jle
jnp
int
pop
aam
scas
sti
pop
cmc
jmp
fildll
inc
ret
inc
cmp
insb
mov
inc
pop
and
in
clc
fdivrs
sub
iret
lods
ljmp
icebp
pop
dec
test
dec
cmpsl
pop
addr16
int3
ds
ss
and
out
int3
and
js
repnz
dec
mov
or
xor
jp
mov
int3
rclb
mov
xchg
xchg
scas
hlt
ja
mov
lea
sub
cltd
inc
scas
repnz
addr16
or
cmp
bound
add
add
arpl
jnp
sbb
xchg
sub
es
push
jmp
cmc
add
add
pop
dec
add
addr16
dec
std
cmpsl
sub
cmp
pop
in
sub
lcall
movsl
jge
jg
fs
stos
test
jp
test
sbb
imul
and
lds
jg
adc
mov
popa
jp
pop
imul
mov
hlt
sahf
sbbb
sahf
mov
imul
sub
sub
jno
adc
add
or
mulb
mov
cmpsl
dec
fildl
mov
sbb
clc
jbe
cmp
aam
imul
pop
sar
lcall
adc
xchg
arpl
cmp
jmp
jecxz
sub
push
dec
decl
adc
out
sarl
push
comiss
aas
xor
pop
lahf
clc
jmp
push
aas
or
mov
filds
add
cmc
add
add
mov
mov
jae
das
clc
shll
sbb
push
inc
xchg
inc
mov
cmp
jns
sbb
push
hlt
sti
cmp
call
loopne
sbb
out
mov
out
xchg
mov
mov
aas
mov
mov
fcompl
loopne
hlt
xorb
adc
mov
inc
xchg
mov
adc
mov
sar
and
pop
nop
jecxz
fdivs
adc
and
dec
shlb
push
loopne
or
and
loopne
repz
xchg
pop
lods
jp
insl
sbb
rcr
movsb
inc
vpsraw
sahf
outsl
or
mov
add
sti
ret
out
dec
fadds
ss
popf
dec
mov
leave
cmp
or
movsb
add
cmc
js
testb
aad
xchg
mov
popa
dec
sarb
push
mov
jmp
shll
and
xchg
add
pop
sbb
xchg
add
insb
fidivl
cli
sub
lcall
add
cmc
add
add
cmp
sbb
decl
cmpsb
sbb
xor
lods
fisttpl
xchg
hlt
xsha1
cmpsb
or
push
push
popa
xor
rclb
mov
pusha
outsl
insb
lods
sub
adc
jmp
mov
inc
dec
jle
daa
std
adc
xor
and
or
xor
and
dec
pop
sbb
aaa
xchg
mov
add
mov
fistpl
sub
scas
test
addr16
inc
mov
pop
cs
pop
das
sti
arpl
jnp
xlat
jo
call
or
mov
dec
push
les
mov
clc
dec
mov
mov
les
jmp
cmpsl
and
inc
push
mov
in
mov
adc
dec
push
dec
enter
add
push
or
sub
in
incb
mov
add
cmp
mov
in
lret
sub
rol
add
cmc
add
add
xchg
pusha
xchg
js
iret
mov
int3
mov
js
out
out
or
mov
rcll
into
mov
fcompl
mov
mov
mov
push
mov
std
out
movsb
xor
imul
push
pop
movl
inc
fdivs
pop
and
enter
imul
inc
mov
fwait
insb
inc
imul
cli
pop
imul
pusha
jecxz
inc
ljmp
xchg
add
push
cld
xor
sub
loop
mov
push
movsb
cwtl
and
cmpb
loopne
mov
mov
jp
sbb
in
mov
add
or
sub
or
jecxz
jmp
adc
gs
and
mov
cmp
sub
fwait
sub
cmpl
cld
dec
fdivs
inc
cmpsb
or
sub
fdivr
out
sub
flds
std
imul
add
int
fstp
iret
push
lock
jmp
imull
cmc
add
add
push
out
add
mov
es
loopne
test
jnp
dec
mov
ret
in
mov
es
xor
in
loope
mov
xlat
mov
or
stc
jae
test
dec
mov
enter
xchg
xchg
mov
push
cwtl
sub
xorb
mov
cs
add
pop
xor
lods
nop
mov
and
push
push
inc
gs
es
xchg
insl
lods
imul
lock
push
mov
push
inc
icebp
cmp
in
in
das
push
out
ficoml
lods
movsb
scas
add
pop
or
lcall
das
adc
jae
call
bound
adc
xor
jo
movsb
aam
jp
lock
les
loopne
lret
mov
xor
sbb
mov
cmovl
int
mov
mov
cld
fistps
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
jnp
ficompl
jno
aas
xchg
sbb
xlat
mov
xchg
jl
imul
and
pop
xchg
add
push
mov
aaa
pop
aam
adc
add
pop
lds
xor
inc
adc
mov
pop
inc
jl
sub
inc
xchg
ror
les
xor
add
out
scas
fucomi
add
rcrl
xchg
scas
xchg
sbb
dec
or
in
cltd
dec
pop
mov
pop
or
lock
pop
fs
cld
repz
or
sbb
das
jbe
ret
call
jno
lock
dec
ret
xchg
fcmovu
xchg
cmp
data16
icebp
push
out
nop
jp
popa
or
sarl
scas
in
mov
cmpsl
popf
cmpsb
es
sbb
cltd
aaa
rcrl
daa
rorl
rol
lahf
inc
and
rclb
lahf
xor
gs
xchg
dec
adc
rolb
mov
fimuls
imul
add
mov
push
fs
sub
add
sub
loopne
icebp
adc
cld
lea
cmp
jmp
or
iret
stos
sbb
test
and
and
imul
push
imul
sahf
dec
or
enter
adc
fcmovu
add
outsb
icebp
or
out
insb
ret
pop
decl
dec
insl
mov
cmpsb
adc
cli
adc
sbb
mov
jle
sarb
sub
sbb
jle
lods
insb
push
sub
cmp
out
sbb
outsl
dec
sbb
ret
icebp
sub
test
jnp
in
mov
ljmp
cltd
lret
mov
shll
cmp
pop
test
insb
daa
jge
scas
aas
stos
inc
iret
mov
xor
cmpsl
dec
mov
ljmp
call
out
movsb
lds
inc
inc
adc
lods
adc
push
lcall
add
inc
or
test
mov
testb
xchg
add
cmc
add
add
lss
dec
lcall
mov
test
lret
imul
push
adc
cmp
pop
lock
add
int
dec
imul
nop
adc
jo
sbb
loope
leave
out
mov
lds
xlat
push
jle
mov
adc
sti
loop
push
mov
pmaxub
adc
cmp
cmpb
xorl
sahf
adc
mov
int3
xchg
jb
pop
sub
out
mov
lahf
cmp
mov
leave
add
pop
inc
outsb
pop
xchg
int
mov
test
mov
dec
jle
mov
mov
lock
sbb
into
add
ja
lock
cwtl
pop
mov
aaa
js
cmc
xchg
jo
test
sub
jae
dec
jbe
and
xchg
cmp
push
cltd
push
pop
mov
add
ljmp
loop
dec
pop
push
iret
hlt
scas
mov
add
std
xchg
das
imul
inc
dec
inc
orb
adcb
ret
sbb
dec
call
test
fidivrl
pop
iret
jecxz
fwait
les
inc
aaa
stos
and
paddd
rolb
sti
inc
jecxz
aaa
test
mov
add
sbb
push
popa
into
fs
shlb
cmp
push
mov
insl
xor
and
gs
jne
imul
sub
mov
adc
jae
sub
inc
cld
fsts
movsl
test
jge
mov
mov
pop
push
data16
jl
adc
and
ret
cli
sub
mov
sbb
jb
and
test
sub
mov
push
xchg
pop
sub
insl
cmp
jmp
add
add
aaa
shlb
cmc
div
rcl
inc
pop
addr16
lea
add
cmc
add
add
ja
cmp
movsl
outsb
pop
inc
add
adc
scas
jle
sbb
xchg
fwait
push
pusha
push
arpl
lods
stc
repnz
mov
pop
mov
jmp
mov
fcoms
sbb
inc
push
stos
das
sub
filds
jmp
pop
and
and
outsl
pop
loopne
aas
inc
push
leave
into
xor
push
xchg
test
fstpt
push
movsl
dec
aad
lock
mov
stos
add
jo
cld
mov
imul
mov
fsubrs
dec
or
mov
ja
mov
sarb
mov
pusha
push
mov
add
loopne
enter
enter
or
and
sbb
test
ljmp
int3
xchg
aaa
and
mov
adc
fisttpll
jmp
mov
cmp
add
add
push
sahf
rcr
pop
test
or
add
cmc
add
add
imul
inc
pop
sbb
fistpl
in
test
mov
inc
mov
mov
and
add
adc
ret
lds
je
enter
fisubl
lods
ja
inc
jp
jno
dec
lods
xor
inc
sbb
enter
cmpsl
imul
xor
dec
ds
dec
or
cmpsl
dec
repnz
inc
mov
aaa
bound
cmp
and
or
jno
les
push
insb
dec
movsb
je
mov
mov
test
mov
pop
nop
rclb
in
pop
pop
sub
repz
dec
in
popf
cmp
mov
cld
xchg
jp
lods
jb
mov
insb
cmp
xchg
data16
mov
aad
push
aad
lods
orb
inc
int3
add
mov
jno
lcall
jmp
frstor
add
shll
cmpsb
jcxz
jne
push
inc
or
xor
lcall
scas
leave
add
das
ret
in
add
mov
or
add
mov
xchg
xchg
lahf
mov
call
or
jmp
push
push
movsb
les
jnp
push
mov
sub
cmc
push
and
xchg
jnp
push
outsb
jl
pop
movsb
mov
je
push
dec
inc
scas
push
inc
insl
mov
mov
xchg
cli
roll
les
dec
jb
jl
arpl
data16
push
lods
and
stc
mov
shll
dec
push
or
sub
fisubl
lea
sub
cmc
bound
pop
pop
xchg
mov
idiv
cmp
cmp
adc
or
gs
sbb
ss
je
hlt
sbb
and
xor
movb
sub
push
std
xor
jne
lea
iret
clc
jnp
jg
in
cli
cwtl
inc
mov
xchg
cmpsb
cmp
bound
add
jno
push
sub
mov
or
mov
aas
or
xchg
test
daa
sbbb
fwait
rorl
cmp
je
and
adc
fprem
xchg
scas
sbb
bound
jge
insl
mov
leave
addr16
add
add
lret
sbbl
push
data16
std
push
fs
xlat
iret
dec
jae
outsl
cmpsl
xchg
loope
and
mov
sub
push
xchg
push
test
sbb
pop
int
clc
jnp
lret
mov
scas
in
mov
mov
leave
push
sti
adc
je
outsb
in
outsb
std
cwtl
dec
xchg
movzwl
ja
dec
add
jnp
mov
cld
lods
sti
ss
stos
sbbb
lods
xchg
sub
jnp
cs
jmp
xchg
ja
out
pusha
xchg
cmpb
mov
sub
mov
dec
xchg
in
iret
cmp
add
ljmp
cld
inc
push
cltd
das
movsl
imul
add
xchg
clc
inc
ret
mov
out
movb
repnz
shrb
and
test
sub
bound
push
xor
pop
insl
pop
jp
push
daa
lea
pop
xor
sub
loop
testb
dec
aaa
or
pop
cmpsb
gs
pop
hlt
jnp
adc
and
jne
ja
or
ret
roll
les
xor
xchg
vpshufhw
xchg
xchg
jg
push
add
xlat
cmp
and
xchg
pop
push
mov
dec
jb
repz
cmp
lods
xchg
ret
mov
ret
fsubl
outsl
mov
mov
sbb
popf
mov
popf
cmp
cmpsl
push
sub
je
xchg
adc
mov
or
xchg
cmp
clc
aas
cmp
je
ret
xlat
xor
pop
sub
hlt
jae
pop
cli
mov
fnstenv
ficompl
add
jl
sar
std
jle
loop
cmp
outsl
adc
cmc
add
add
pop
add
loope
cmpsl
mov
lcall
faddl
cwtl
mov
hlt
dec
cmp
addr16
push
pminsw
mov
ja
push
mov
jle
or
mov
adc
bound
add
and
mov
out
push
add
mov
mov
scas
nop
add
fdivp
and
mov
jns
cmp
repnz
inc
xor
leave
gs
into
ret
das
je
cmc
adc
shlb
adc
push
repnz
aaa
fbstp
stc
orl
adc
in
inc
bound
ss
mov
inc
dec
mov
sub
lahf
mov
iret
add
jb
insl
mov
inc
int
lcall
addr16
ficomps
scas
adc
pop
mov
mov
jge
xor
push
leave
not
add
add
cwtl
or
stos
xchg
cmp
pop
add
push
filds
add
cmc
add
add
aas
cmc
mov
cmpsl
sbbl
cmp
adc
cmp
mov
in
daa
mov
pop
add
insl
adc
ljmp
rclb
sub
xchg
mov
in
mov
cli
or
dec
xchg
loopne
addr16
or
shrb
push
stc
sub
xor
mov
xchg
insl
mov
cld
js
pop
fldenv
pusha
inc
jl
popa
in
sbb
mov
add
fcmovne
pop
xchg
sub
xchg
xchg
mov
test
es
in
mov
sti
or
sub
xlat
cmp
or
adc
shr
sbb
loopne
in
ficompl
inc
fbld
adc
out
in
enter
pop
adc
out
inc
nop
sub
push
xchg
daa
mov
and
jbe
jp
or
movsb
add
add
outsl
sti
into
aad
aam
mov
xor
lahf
add
cmc
add
add
mov
add
stc
ja
nop
gs
mov
mov
fisubrs
xlat
push
mov
and
inc
es
imul
jle
xchg
push
gs
std
mov
pop
scas
sbb
shrb
out
sti
push
push
gs
lcall
jp
sub
cmp
mov
mov
mov
dec
or
imul
pop
xlat
xchg
lret
pop
pop
repz
loope
sti
mov
add
sub
iret
or
add
int
xchg
test
mov
out
enter
not
popf
sub
inc
lret
mov
jno
or
ret
ljmp
cmp
int3
inc
xchg
arpl
cwtl
popa
arpl
test
fldcw
je
mov
divl
rcrb
xchg
or
enter
addb
addl
add
dec
std
out
xlat
aas
jle
ds
sub
add
push
jo
into
cmpsl
jecxz
movsl
popf
dec
lods
stos
xchg
out
jg
repz
mov
lret
mov
add
cmp
in
icebp
xor
lret
imul
dec
cltd
xchg
and
mov
push
scas
js
push
cli
dec
cmc
imul
push
sub
leave
inc
sub
xchg
lahf
lret
stc
aas
dec
je
cmc
mov
and
and
cmp
or
pop
mov
lret
stos
push
jle
xchg
aad
scas
jmp
xor
pop
fadds
lahf
sbb
mov
pop
pop
fs
add
pushf
into
pop
and
inc
and
xchg
cmpb
pop
jne
ds
inc
jecxz
int
inc
pushf
loop
or
sbb
sub
pop
cmc
or
or
xor
nop
xchg
addr16
push
out
stc
xor
imul
leave
daa
cld
jmp
dec
or
aaa
add
add
mov
mov
jmp
ljmp
add
cmc
add
add
pop
fs
insb
fmuls
xchg
or
xor
nop
lock
loop
push
pop
jmp
fnstsw
das
pop
ljmp
out
pushf
aad
out
fistpll
pop
enter
mov
test
sub
sub
pop
call
mov
or
shll
push
icebp
fmull
dec
jb
xchg
out
jne
addr16
loop
stos
mov
and
sub
push
outsl
jmp
push
pushfw
aad
sarb
in
mov
orb
push
dec
out
scas
and
dec
jnp
inc
pop
pop
mov
ja
divb
cltd
xchg
dec
out
into
or
ds
nop
ja
test
dec
xor
jno
arpl
fldt
test
ror
adc
shl
jo
xchg
xlat
mov
data16
add
lret
sbbl
mov
movsb
jns
adc
add
add
rorl
aad
in
ja
lahf
mov
insb
inc
sbb
inc
test
test
mov
jmp
fwait
testb
mov
cmpsb
or
out
jns
out
push
push
cmp
je
jl
outsl
fcomps
push
std
pop
data16
mov
es
xchg
push
lret
cwtl
jb
adc
clc
pop
test
shlb
and
scas
test
andb
nop
dec
adc
cmc
fadds
hlt
add
cmpsl
pop
into
hlt
mov
and
test
adc
arpl
jns,pn
push
cmpb
pop
sub
push
pop
test
jne
rcrb
fsts
stos
inc
xchg
mov
adc
jg
mov
adc
outsb
lock
lcall
pop
sahf
sub
add
mov
imul
and
or
add
cs
or
add
clc
pop
dec
inc
sub
cli
jae
lock
push
push
call
mov
xchg
jns
jmp
push
outsb
pop
dec
mov
push
mov
push
es
fistpll
jecxz,pt
ficoml
aad
dec
pop
xor
pop
and
ror
sbb
xchg
sub
dec
sbbl
movsl
xor
les
icebp
daa
addr16
push
movsl
and
xchg
imul
lea
hlt
loop
outsb
jl
mov
push
sbb
fistl
add
insl
aaa
test
mov
inc
mov
leave
mov
push
sub
adc
shll
inc
or
add
push
je
push
lods
fsts
daa
xor
out
and
mov
xchg
and
xchg
int
cmpsl
adc
insb
and
xchg
xor
fsubrp
xchg
ret
jno
jns
imul
daa
out
add
add
mov
dec
mov
adc
cmc
add
add
push
or
mov
or
or
xor
push
lcall
xchg
push
adc
sbb
mov
ficomps
push
mov
push
jmp
aaa
inc
adc
xchg
int
aam
cmp
leave
or
mov
mov
enter
clc
dec
je
test
and
mov
adcb
test
mov
imul
outsb
xor
push
int3
push
pusha
arpl
pop
push
jae
xchg
mov
cmp
dec
sub
dec
pop
xor
bound
mov
sbb
popa
sti
lds
pushf
loopne
ds
out
sti
mov
outsl
test
daa
dec
fs
cmpsl
sti
xor
cs
popf
mov
or
cmpsb
lock
jbe
push
sbb
add
add
add
ja
out
das
mov
aam
fwait
ss
hlt
movsb
add
cmc
add
add
filds
pushf
mov
pop
insl
adc
dec
ja
icebp
inc
push
das
out
ss
insl
shll
pop
and
vsubps
xchg
out
sub
pop
sbb
jne
xchg
jno
sbb
sbb
push
inc
sbb
out
in
jmp
inc
lock
adc
jne
xchg
mov
inc
std
pop
stc
mov
push
mov
push
cmpsl
je
scas
push
test
lahf
dec
pop
inc
xchg
inc
ss
in
sub
dec
das
mov
xor
in
mov
pop
fdivrl
fidivrl
in
jecxz
sub
in
call
inc
int
lret
inc
shl
data16
dec
ljmp
cmp
out
sub
scas
stos
and
test
andl
cwtl
inc
repnz
mov
outsl
divb
movsb
inc
mov
sbb
or
test
iret
add
add
pusha
test
mov
cmp
jmp
add
add
sbb
bound
inc
ret
clc
in
add
cli
xchg
daa
mov
push
sub
add
jbe
imul
insb
stos
lret
sbb
inc
imul
jge
xor
mov
fldcw
sub
movsb
mov
inc
loopne
mov
in
notb
mov
in
into
push
push
dec
loope
incb
mov
jne
std
or
sbb
mov
test
pop
dec
popf
stos
mov
in
sub
cmp
cmp
cwtl
aaa
jns
pop
rorb
lea
push
xchg
jns
pusha
fidivrs
inc
cmp
mov
pop
pop
mov
repnz
adc
or
or
ja
dec
rorb
add
jae
fisttps
sub
test
sbb
push
add
add
mov
repz
repz
ja
stos
fisubs
add
jns
fisubrs
jnp
cmpsb
and
hlt
shll
xor
dec
mov
pop
out
mov
add
mov
dec
out
imul
fidivrl
jo
in
cmc
push
shll
stos
mov
cmp
mov
mov
cmp
add
iret
mov
fwait
insb
adc
inc
dec
mov
xchg
xor
lds
fsubs
cmp
icebp
xchg
out
outsl
lods
in
add
mov
ljmpw
mov
adc
fldt
pop
dec
rcll
sub
and
adc
mov
lcall
pop
sub
lds
fwait
mov
dec
push
in
ret
in
xor
js
in
mov
or
xchg
enter
out
je
pop
das
cmp
out
pushf
mov
add
add
mov
mov
cmp
mov
scas
mov
cmpsl
add
cmc
add
add
lret
dec
fcompl
sub
nop
xor
in
pop
jmp
cwtl
or
icebp
jne
stos
push
lahf
push
daa
cmpsl
cmp
bound
pop
inc
sbb
daa
scas
test
lret
inc
mov
sarl
loope
adc
mov
mov
ds
stos
stc
add
xchg
inc
stos
dec
scas
int
insl
int
mov
in
insl
movb
incb
sbb
sbb
scas
insb
insl
fldcw
mov
imul
sahf
push
js
dec
stos
test
mov
cmp
mov
lods
jp
nop
data16
out
cmp
or
popa
push
jnp
push
mov
gs
sarb
cmp
mov
lds
xchg
fisttpll
fstl
test
adc
add
or
sbb
mov
xchg
mov
enter
cmc
add
add
lret
dec
fistpl
nop
cli
cmp
pop
jne
mov
test
outsl
lret
sahf
hlt
scas
cli
insb
or
jecxz
or
and
insl
or
sbbb
xor
scas
out
cmp
mov
xchg
in
or
lods
push
pushf
or
test
aam
xor
shl
inc
test
push
dec
and
jle
scas
outsl
cmp
movsl
out
adc
or
pop
cmpsl
stos
pop
dec
push
push
pop
lret
mov
pop
inc
out
clc
sub
add
ja
cmpsb
lret
fisttpl
mov
sub
test
cmp
in
mov
pop
cmpsb
hlt
test
pop
mov
imulb
inc
jae
jmp
fimull
xor
mov
xor
jae
pushf
mov
data16
orl
cmp
cmp
xor
add
add
inc
fdivl
stos
push
xor
test
add
push
das
cmp
mov
xor
out
mov
ret
lret
inc
clts
xor
cmp
add
or
xchg
sub
js
mov
inc
or
dec
sub
and
or
push
lods
fsubr
sub
lret
rcll
rclb
adc
or
pop
inc
or
shlb
cmp
iret
pop
data16
or
addr16
ret
nop
xchg
out
xor
or
push
fwait
and
imul
xor
movsb
test
out
adc
xor
jae
cld
cmp
adc
and
ret
inc
jns
dec
out
jb
mov
cmc
dec
imul
push
rol
test
insl
sub
outsl
push
dec
rclb
xchg
loop
jb
insb
sbb
sub
movsb
cmc
in
xchg
loop
push
dec
rolb
scas
gs
or
lods
cli
xor
jecxz
mov
jae
add
adc
mov
pusha
fstl
cmpsb
mov
add
cmc
add
add
cmpsl
repz
add
into
cmpsb
fwait
ss
fucom
pop
and
aad
and
test
mov
dec
ss
adc
xchg
dec
jmp
xchg
and
popa
push
pop
xchg
mov
mov
lret
xor
cwtl
pop
rolb
push
bound
mov
scas
pop
jo
lock
std
xchg
lds
or
loop
jb
pop
push
xor
aad
in
xchg
inc
std
mov
mov
shrl
roll
ja
mov
sbb
in
push
in
stos
jmp
dec
inc
data16
fucomip
sbb
xlat
scas
or
fldl
lret
jg
ja,pn
sub
lea
xchg
inc
cwtl
fs
mov
inc
cwtl
mov
stos
movsb
shlb
adc
in
test
int
movsb
pop
push
fucomi
mov
adc
inc
cld
loop
iret
les
add
pop
test
stos
hlt
jmp
ljmp
xchg
cmpsl
stos
add
cmc
add
add
push
scas
jecxz
rol
bnd
pop
aam
adc
ljmp
mov
mov
fwait
pop
adc
pop
enter
xor
pop
inc
adc
icebp
or
xchg
pop
jmp
mov
adc
stos
push
inc
sbb
shll
and
stos
enter
sbb
pop
push
fdivrs
jae
xor
inc
or
je
xor
fs
lea
jmp
lcall
mov
add
imul
push
imul
clc
mov
stos
sbbl
add
mov
hlt
ljmp
in
int3
nop
add
aas
jo
add
movsb
int
push
sbb
arpl
lods
xchg
bound
jmp
inc
cmp
dec
mov
pusha
push
mov
stos
lcall
adc
add
add
out
xlat
out
jg
dec
cmp
jae
pop
or
add
dec
cltd
push
and
pop
mov
nop
jnp
pop
sbbl
xor
push
sub
fimull
xor
mov
pop
cltd
out
insb
rcr
aas
test
add
push
cwtl
push
ss
jle
iret
xor
and
sbb
pop
call
push
notb
xor
cmp
dec
pop
movsb
mov
push
mov
dec
inc
lcall
xchg
adc
imul
cmp
es
cmpl
idivl
hlt
xchg
loope
je
cmp
out
insb
lds
fcoms
adc
loope
xchg
outsl
in
pop
mov
pop
inc
jne
sbbb
fstps
arpl
fldenv
xor
rcl
inc
xor
sarb
mov
push
sub
adc
cmp
cmp
sub
outsl
jo
xchg
cmp
push
outsb
jo
add
add
mov
inc
fwait
lds
xor
or
xchg
lods
add
cmc
add
add
mov
sar
out
cli
cmp
push
cmp
and
stos
je
push
inc
xorb
inc
or
int3
sbb
push
jmp
or
sarl
daa
or
iret
out
or
mov
test
pushf
push
sub
scas
jmp
loope
adc
xor
loope
lea
xlat
jne
ss
shr
repz
cltd
sub
jecxz
add
popf
pop
push
or
clc
cmovno
imul
mov
int3
cli
gs
jecxz
cmpsl
cli
xor
mov
push
test
push
outsb
aad
scas
fs
xlat
inc
aam
add
xor
dec
pop
push
push
inc
sub
hlt
cs
cmp
cmp
bnd
mov
loopne
push
fmull
movsl
sahf
mov
popf
stos
push
jmp
iret
lahf
adcb
add
mov
ja
and
xor
add
add
add
and
jp
in
jo
sub
and
mov
cld
jns
into
add
jo
out
jp
mov
lods
jmp
bound
dec
mov
dec
sub
and
gs
ret
nop
jmp
sbb
cmp
xor
nop
dec
jecxz
xchg
pop
jne
and
dec
cwtl
movsl
pop
xchg
add
pop
rol
mov
jns
mov
xchg
pop
stc
xchg
mov
cmp
push
fwait
inc
cmp
divl
mov
call
push
mov
jo
push
push
mov
imul
push
repnz
das
adc
std
fsts
fistpll
movsl
or
cwtl
sbb
testl
push
jb
dec
lods
cld
mov
mov
mov
pop
popa
std
cmp
aaa
mov
dec
mov
sub
psraw
add
lret
jnp
sti
jmp
xchg
sub
sub
add
add
add
popl
cmp
test
or
rcr
enter
ret
dec
aad
push
out
stc
inc
adc
push
insb
push
mov
sbb
xchg
fcompp
jp
ss
jno
movsb
pop
popl
pop
jb
mov
cli
xchg
out
data16
jecxz
pop
add
push
sub
jle
ret
pop
mov
fimuls
adc
sbb
inc
sbbb
loopne
loopne
dec
pushf
or
insl
push
xchg
xchg
xchg
sub
movsl
mov
sarl
sbb
jbe
mov
jae
cltd
jae
sar
adc
sub
imul
sub
mov
pop
mov
in
add
in
mov
cmp
mov
sub
in
shlb
popf
cmp
fstl
add
mov
jecxz
lock
pop
sti
xchg
jo
add
cmc
add
add
dec
xor
popf
cmpsl
movsl
cmp
mov
fnstsw
xchg
jecxz
pop
cmpsb
sub
inc
notl
jnp
ss
fimuls
xchg
cs
sub
xchg
and
loop
cmc
add
iret
dec
adcb
jmp
pop
mov
dec
call
push
rcr
sbb
cmp
into
and
or
inc
daa
and
add
arpl
andl
dec
push
jnp
repnz
ja
mov
inc
popf
je
mov
xor
cmpsb
xchg
das
es
jl
repz
test
cwtl
jno
out
pop
test
adc
jp
push
or
push
icebp
mov
adc
loopne
cmpsb
in
jg
jecxz
jge
cmc
lahf
cmp
movl
or
xor
fwait
push
or
sub
in
mov
add
add
cld
mov
test
gs
add
add
add
sarb
fldcw
test
or
pop
cmpsl
xlat
pop
mov
adc
and
dec
test
pop
test
popa
lea
dec
add
popf
addr16
shlb
pop
push
xchg
stos
adc
cs
aam
adc
hlt
pop
notl
int
dec
xchg
pusha
inc
xor
cmp
jge
sbb
pusha
stc
mov
wrmsr
xor
add
nop
add
stos
sar
loope
mov
xchg
add
cli
jp
sub
test
out
mov
push
es
or
or
aas
xor
inc
jg
and
leave
jg
rcrb
das
nop
xchg
xor
add
pop
mov
adc
in
xlat
cmp
add
aas
adc
es
scas
cmp
mov
jnp
pop
pop
adc
jmp
jbe
jne
inc
scas
lods
xchg
inc
hlt
add
add
out
cmc
mov
sbb
add
pop
mov
add
add
add
mov
dec
daa
push
pop
push
fimuls
mov
ljmp
sbb
inc
mov
pop
and
mov
into
mov
scas
cmp
xchg
push
mov
jb
jbe
cmp
xchg
mov
shlb
jg
mov
mov
ljmp
std
mov
flds
mov
and
call
jae
aad
test
cs
fidivs
std
movsl
mov
xchg
dec
mov
cld
dec
pop
lods
mov
jecxz
popf
sub
cmp
jno
push
clc
xchg
fs
dec
shr
lret
push
or
dec
leave
cmp
test
leave
xchg
sub
pop
sbb
push
arpl
push
shlb
and
mov
xor
in
mov
xor
xchg
sbb
add
fucomip
std
dec
std
pop
mov
pop
pop
cmpsb
dec
mov
add
add
add
and
and
push
scas
clc
repnz
sub
and
in
into
jae
mov
mov
inc
test
ds
jmp
lock
xchg
aad
inc
imul
cwtl
in
into
insl
shrb
mov
aas
inc
cwtl
les
rcrb
dec
addl
ja
mov
popa
and
sti
addb
in
adc
pop
push
cmp
pextrw
ja
icebp
data16
sarb
adc
xor
stos
aad
sbb
scas
inc
or
push
jmp
repz
xor
and
jmp
pop
iret
pushf
std
scas
xor
and
sbbb
fbld
xchg
xchg
test
hlt
xor
in
inc
leave
mov
pop
or
negl
scas
popl
popf
add
add
fidivs
loop
ljmp
adc
movb
cmc
add
add
lcall
aaa
pushf
cmpsb
inc
inc
repnz
mov
and
push
or
int
pop
imul
aad
ja
test
popf
mov
mov
inc
pushf
andl
mov
shl
push
enter
aas
imul
test
mov
lret
stc
fisttpl
xchg
js
jecxz
jp
out
or
mov
mov
mov
fdiv
lods
dec
enter
lods
outsb
mov
add
jo
inc
xchg
hlt
xchg
aaa
daa
out
add
repz
es
in
iret
ljmp
in
inc
cmc
xchg
jbe
lods
fdivrl
jbe
jo
mov
popf
mov
mov
cmp
popf
pop
iret
xchg
dec
sbb
arpl
cmp
ret
out
fcompl
shlb
jno
adc
and
inc
aas
push
scas
add
push
xchg
jg
jmp
std
jge
in
xchg
loop
mov
mov
add
add
add
jb
push
cld
mov
xor
mov
sbb
lds
arpl
fwait
push
jl
std
mov
mov
sbb
or
push
pusha
sbb
sub
cmp
aam
push
filds
repz
adc
push
xchg
cld
cmp
outsb
or
cmp
cli
add
jge
outsl
inc
push
pop
ret
push
and
xor
inc
jne
mov
fwait
cmpsl
stos
adc
dec
das
std
sbbl
movsb
ds
jecxz
fwait
sbb
jo
push
add
push
sar
adcb
mov
push
jg
cmp
xor
or
sbb
push
sbb
sbb
icebp
mov
xchg
mov
add
mov
jmp
shlb
dec
sbb
insl
mov
cld
xchg
xor
xor
jg
mov
lods
mov
scas
add
add
xor
std
cmp
outsl
cs
add
add
add
out
enter
pop
pop
adc
faddl
sub
and
mov
loope
xor
fcmove
mov
add
rcr
rclb
mov
stos
aam
dec
add
or
and
adc
lea
cmp
jle
lock
push
cmpsl
fists
push
dec
fstps
pop
inc
stos
mov
ss
sbb
mov
push
test
loope
xchg
fwait
sub
add
adc
sahf
enter
push
inc
inc
mov
xchg
push
pop
jmp
cmp
pop
jle
ds
cmpsl
jbe
hlt
dec
sbb
call
add
sub
lcall
cmp
xchg
jg
mov
bound
decb
pop
stos
outsb
jo
sbb
xchg
or
jo
push
mov
lret
icebp
loop
jb
je
movsl
add
sbb
add
add
xor
cmp
ficoml
je
cwtl
andb
add
cmc
add
add
insb
mov
aad
xchg
mov
iret
jle
insb
push
aad
add
mov
and
dec
bound
xchg
mov
fisubrl
sbb
cmp
cltd
push
ds
mov
sub
adc
mov
ficomps
lea
cli
jge
mov
mov
push
xlat
enter
inc
outsl
fcmovnb
lret
flds
pop
adc
pop
mov
jle
cmp
test
inc
sub
jle
pop
dec
leave
or
pop
or
call
mov
imul
xor
push
lcall
scas
cmp
popa
inc
iret
and
mov
mov
or
cltd
xor
adc
xchg
imul
out
mov
fwait
dec
addb
aad
mov
inc
xchg
aam
push
aad
shll
push
and
add
add
es
les
mov
push
push
adc
mov
sbb
add
fidivl
mov
jg
adc
xor
out
cmp
lods
cmpsl
scas
cmc
rorl
cmp
testb
push
popf
bnd
pop
cmp
mov
into
pop
add
nop
in
filds
sub
inc
mov
daa
xchg
and
cld
loope
add
cmp
sub
stos
ljmp
sub
dec
pop
mov
repz
mov
fistps
xor
into
pop
push
mov
ds
sub
jg
mov
sti
test
xchg
cmp
dec
adc
adc
pushf
stos
or
jno
xor
jle
cmp
mov
cmp
test
cli
add
pusha
pop
sub
jb
sbb
dec
sub
xchg
xor
cmc
and
cmp
cmp
shl
mov
lock
ret
cwtl
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
mov
cmc
add
add
in
or
jb,pn
test
dec
fwait
ret
inc
mov
push
pop
mov
stos
outsl
rolb
fidivl
je
push
aam
add
dec
mov
sub
popf
and
imul
movsl
iret
or
or
ficomps
inc
push
pop
mov
pop
xor
mov
pop
mov
js
pop
jne
lods
addl
cmpsl
mov
mov
pop
in
lea
push
jbe
outsb
into
jmp
jb
add
adc
insb
jge
scas
out
cmp
push
out
mov
nop
lret
adc
or
in
shl
push
or
popl
jg
subb
mov
pop
fs
xorl
pop
sub
pushf
xor
mov
inc
and
iret
cmp
inc
push
inc
iret
aad
pop
iret
jge
stos
sub
fdivs
cli
in
imul
sti
fidivrs
mov
sbb
add
lds
cli
lcall
ret
gs
add
add
add
mov
decl
cmp
mov
dec
cmpl
jecxz
pop
out
insb
loopne
push
push
mov
mov
adc
js
sbb
aas
loope
or
decb
mov
int3
jge
xchg
xor
sub
inc
nop
inc
mov
std
in
pop
mov
dec
cltd
subb
pop
aas
lods
xlat
pop
push
pop
push
xchg
js
mov
jp
add
test
xor
lret
test
aaa
outsb
test
jb
cmpsl
or
shll
shll
mov
mov
fxch
xchg
xchg
and
adc
imul
jbe
cwtl
insb
and
lret
mov
iret
mov
inc
cmpsb
nop
xor
fwait
dec
mov
and
jnp
add
lret
cwtl
and
jns
in
adc
popa
divb
add
add
jne
mov
xlat
insb
scas
push
mov
mov
add
test
dec
dec
mov
jns
js
cmc
jp
jo
adc
arpl
sub
icebp
movl
hlt
push
repz
jnp
sbb
movsb
xchg
negl
and
pop
pop
push
mov
negb
inc
xlat
push
into
aas
insb
loopne
ljmp
lahf
adc
sbb
push
mov
jle,pt
or
in
xor
imul
cmpsl
mov
scas
stos
xor
scas
fldt
xor
mov
jg
cmp
xlat
sbb
int
hlt
int
sbb
cmp
mov
push
cwtl
jnp
push
in
imul
xchg
dec
dec
or
dec
addr16
das
mov
mov
pushfw
negb
mov
dec
pop
imul
and
cmp
dec
cmc
dec
cld
mov
add
add
add
pop
sbbl
fstpl
mov
add
cmc
add
add
cmp
jge
in
add
lret
mov
and
gs
mov
psadbw
fldl
mov
lret
imul
call
lahf
out
repz
movsb
xchg
int
adc
mov
cmp
jne
shlb
xchg
sbb
jo
mov
lret
pop
cmp
ret
jns
inc
adc
mov
jne
jecxz
ficomps
sub
out
add
fisubrl
outsb
sahf
xorb
and
aas
adc
push
icebp
pop
cld
xchg
sbbb
addr16
fcomps
daa
jnp
ret
jg
out
xor
inc
sbb
or
popf
mov
and
pop
mov
aad
push
lea
cmpsb
add
dec
xor
jo
shld
imul
ficoml
bound
push
lock
add
in
mov
jecxz
out
sub
outsb
sub
cmc
add
add
cld
jl
aam
mov
loop
std
call
dec
xchg
jle
int3
cmp
jo
pcmpeqb
cs
jmp
in
pop
iret
mov
mov
pop
movb
das
and
dec
mov
mov
xchg
rol
dec
out
scas
add
mov
les
xor
pop
jl
ret
xor
adc
add
xor
or
sarb
into
xchg
jmp
inc
pushf
push
fsubrl
push
push
xchg
cli
rcrl
shrb
xlat
mov
sub
jnp
and
insl
fmull
stc
das
sub
ss
adc
cmp
es
mov
mov
and
stos
lock
cmp
pop
stos
pop
shlb
data16
pop
pop
add
xchg
mov
ljmp
outsl
xor
add
push
xchg
test
jg
jbe
movsb
stos
scas
add
mov
add
shl
jp
xchg
aam
adc
cmp
push
int3
dec
sub
insb
mov
inc
cwtl
adc
jecxz
lret
movsl
mov
data16
ljmp
divl
sarl
notb
xsha256
cmpsb
push
mov
sbb
pop
idivb
sbb
lock
mov
adc
push
adc
es
xorl
pop
int3
int3
jle
and
xchg
sti
push
xchg
sub
fwait
into
push
imul
repz
xchg
sti
jge
jle
in
push
je
push
or
dec
and
popa
out
mov
dec
mov
xor
jle
push
data16
je
dec
sbb
popf
ss
inc
cmp
jge
js
ret
inc
pop
push
push
xchg
or
xor
xor
dec
jle
sub
es
push
or
iret
loop
sahf
add
sub
sbb
jns
cmp
xor
jp
add
lock
in
lcall
xor
sbb
lret
mov
add
adc
int
loopne
pop
push
hlt
into
test
sub
sub
leave
xor
xchg
adcb
js
test
sbb
and
pop
arpl
scas
stos
loopne
fs
xlat
and
das
cmc
xchg
pop
ss
repz
push
dec
movsl
and
mov
mov
rclb
outsl
jo
cmpsl
or
add
xor
data16
rcrb
pop
ret
loope
cld
push
aas
lcall
cmp
push
stc
push
or
test
lods
jmp
jge
outsb
das
out
ret
jno
add
aaa
push
adc
inc
xchg
or
imul
adc
cmp
rclb
outsb
sub
xchg
dec
jge
mov
int
adc
cld
and
inc
xchg
fidivl
insb
idivb
scas
popf
add
cld
pop
aaa
push
jecxz
xchg
ja
add
add
sub
jg,pt
stos
dec
push
jo
repz
xchg
mov
add
add
inc
jo
mov
repz
pop
sub
sarb
xor
lods
lret
xor
push
lret
outsb
sbb
push
dec
fidivs
adc
into
add
mov
sbb
or
enter
and
sub
bound
cmc
in
inc
adc
vmovss
adc
push
cmp
dec
popf
in
cmp
lea
fistpll
js
daa
push
xor
inc
les
scas
push
sti
inc
push
adc
cmp
mov
sbb
andl
sub
int
aaa
fsts
fcompl
mov
fldl
daa
test
ss
push
std
jb
cmp
jbe
mov
adc
adc
sbb
mull
mov
xchg
idivb
daa
or
add
cmp
les
adc
or
adc
add
insl
sbb
outsl
mov
test
or
add
add
mov
and
inc
fnsave
ss
pushf
pop
xor
jmp
pop
arpl
inc
cmp
xor
push
sbb
stos
cmp
xchg
les
jnp
mov
pop
pusha
cmc
xchg
xchg
out
add
xchg
out
sti
call
mov
lret
xor
lcall
jbe
aas
sub
mov
xchg
mulb
repnz
cmp
outsb
loop
jecxz
movsl
js
pop
sbb
pop
sbb
sub
push
sub
sub
mov
or
or
lods
add
popf
mov
into
mov
loopne
jbe
andb
gs
enter
xchg
test
adc
lcall
std
ja
cmpsb
mov
movb
cmpsb
mov
dec
inc
loop
jle
lret
stos
inc
es
shrl
mov
das
lods
mov
xchg
mov
out
add
xor
mov
cltd
mov
roll
cmc
add
add
imul
ret
xchg
insb
jno
mov
ss
adc
fwait
xchg
pop
jp
inc
in
das
mov
mov
out
into
jl
hlt
and
ret
xor
ljmp
inc
xchg
lods
pop
loopne
sub
and
outsl
std
sbb
mov
out
cmpsw
ljmp
inc
lods
inc
les
pop
pop
jge
mov
mov
addr16
mul
push
repnz
pop
add
decb
and
mov
rcr
xor
pop
ljmp
lods
jp
xchg
lahf
fists
sub
pop
rcrb
sbb
orb
add
adc
cmc
icebp
sub
movsl
idivl
push
mov
paddw
mov
mov
mov
into
xor
cwtl
fs
mov
test
int3
pop
cwtl
sbb
repnz
xchg
repz
fnstcw
mov
add
add
fistpll
call
mov
ret
cmc
add
add
mov
fs
out
xor
lods
push
mov
cmp
and
mov
lds
lods
cmp
xchg
adc
sahf
cmp
mov
cmpsl
mov
iret
add
jo
push
scas
sahf
ja
mov
ljmp
push
pop
and
insb
shl
cmp
cwtl
rcr
jl
inc
xor
imul
es
fsubrs
xor
sub
stc
push
jnp
mov
and
pop
lods
ret
mov
add
insl
repnz
in
andl
das
add
adc
inc
xchg
inc
insl
out
push
sbb
push
adc
daa
xchg
cmp
mov
xor
push
or
mov
and
and
ret
or
orb
jmp
into
std
sti
leave
sti
iret
ljmp
and
add
cmc
add
add
call
sbb
mov
lods
es
mov
nop
jo
in
pushf
inc
cmp
inc
cli
mov
push
xor
pushf
or
sbb
xor
movsl
out
mov
pop
addr16
mov
xlat
divps
mov
andb
mov
test
mov
ja
sbb
leave
jbe
loopne
sbb
or
inc
push
cltd
or
mov
out
push
cmp
dec
hlt
mov
sub
clc
fs
negl
cmpsb
jp
imul
mulb
add
cltd
push
push
xchg
and
mov
cmp
dec
cmp
out
ds
sub
jnp
out
jg
and
shlb
ds
pop
outsl
xchg
adc
jge
rcll
rclb
std
mov
sub
or
add
mov
mov
es
sbb
les
add
add
add
pushf
and
cmp
mov
and
and
call
mov
fisttps
lds
mov
mov
sub
xchg
or
imul
dec
imul
outsl
in
pop
jmp
dec
mov
mov
insl
adc
mov
loope
jno
mov
idivl
pop
xchg
mov
repnz
xorl
pop
xor
int3
push
sbb
xchg
jmp
jne
xchg
xor
mov
jo
lar
std
fs
mov
dec
addb
out
movb
sub
mov
sti
outsb
fbld
sub
lods
lods
jbe
arpl
andl
jns
jno
jge
pop
sbb
test
test
add
out
or
push
xchg
xlat
ret
out
fidivrl
adc
addb
fwait
add
add
jg
mov
sub
movhlps
out
jle
add
cmc
add
add
je
mov
push
test
lcall
in
jmp
lret
inc
pusha
push
inc
std
jecxz
int3
insb
mov
jp
sbb
add
popf
dec
loope
cmc
jo
adc
xchg
cmp
insb
push
cmp
movsb
push
cli
add
lea
inc
xrelease
lods
in
adc
loopne
rclb
es
jo
pop
in
out
popa
mov
and
movsb
loope
lcall
dec
cli
or
push
adc
rorl
sbb
jle
nop
sbb
int3
int
sub
pop
push
push
inc
out
push
dec
fs
push
into
call
cmp
ficoms
mov
lea
loopne
ljmp
jo
sub
pop
hlt
imul
cmp
adc
sbb
dec
rorb
and
aam
fldcw
or
mov
test
mov
in
add
add
inc
enter
pushl
out
adc
sbb
jae
add
cmc
add
add
lea
idivb
mov
imul
stos
stos
ret
or
out
inc
pop
scas
pop
outsl
fmul
xor
push
xlat
cs
mov
and
xor
mov
enter
ret
push
jb
test
pop
mov
shll
mov
adc
inc
iret
orb
fwait
adc
add
inc
test
pop
jo
sub
pop
cmpsb
mov
cs
and
in
ret
movsl
aaa
pushf
jle
mov
fbstp
fbld
dec
gs
pushf
movsb
mov
leave
arpl
aad
dec
stos
inc
pop
mov
xchg
adc
mov
sbb
stos
leave
lahf
inc
inc
mov
popf
add
sub
outsl
xor
aaa
adc
movsl
test
jb
jl
jnp,pt
cmpsl
shlb
xor
scas
adc
imul
mov
notl
cs
push
xor
mov
int3
lods
fucomi
sbb
fnstenv
add
add
pushf
shrb
jb
ret
cli
mov
movl
add
dec
cmc
add
dec
testb
mov
sub
jmp
sub
repnz
inc
add
sbb
pusha
cmpsl
and
xchg
cmp
ja
jl
jne
outsl
mov
andl
mov
cs
clc
xor
pop
shll
add
and
pusha
stos
fdiv
push
mov
or
int3
mov
fisttps
cmpsb
xor
cmp
fimuls
xchg
stos
dec
stos
push
adc
nop
xchg
dec
mov
mov
inc
cltd
jle
roll
sahf
xchg
inc
xchg
je
and
jnp
push
cld
stos
add
in
lock
into
dec
lahf
enter
inc
dec
repnz
fmul
xor
jecxz
inc
mov
xor
push
repnz
lea
loop
popf
cmc
popa
jns
ss
sub
inc
xorb
sbb
daa
lds
add
sub
scas
mov
xchg
push
outsl
imul
rcrl
add
cmc
add
add
dec
push
sub
dec
jns
adc
cmp
pop
mov
pop
inc
and
dec
adc
out
fimull
add
ss
xchg
sti
in
push
push
jl
loopne
inc
clc
rorb
stc
inc
ds
shr
xor
js
ret
aam
pop
mov
push
fs
jnp
push
xchg
or
je
das
pop
inc
pushf
mov
mov
xor
call
xor
sub
lahf
jae
jne
call
adc
jno
jle
inc
xor
mov
test
jbe
mov
jns
js
iret
cmp
jno
in
mov
lods
inc
roll
jecxz
mov
loope
pop
popa
or
add
push
scas
push
pop
loopne
inc
les
cmpl
push
bound
add
adc
std
in
mov
cmpsl
mov
lods
data16
push
jg
jne
jne
jg
out
and
jnp
in
push
leave
add
cmc
add
add
jnp
xor
mov
jp
dec
sub
or
xchg
stos
loope
mov
mov
mov
scas
or
pop
xor
loopne
sbb
or
lods
dec
fs
out
fnsave
xchg
and
sub
mov
inc
cld
into
inc
sub
xchg
and
aas
add
inc
mov
pop
adc
jae
or
fnstcw
mov
sbb
sub
mov
jbe
pop
mov
jecxz
inc
fisubs
loope
dec
insb
push
sub
sbb
sub
pop
xchg
xchg
imul
call
cmp
ret
and
mov
sub
push
lock
xchg
in
mov
dec
xor
and
mov
mov
testl
xor
sbb
into
pop
pushf
pushf
jmp
gs
int3
lods
mov
sbb
sarb
sub
fldl
add
sbb
mov
cmpsb
fstpl
ret
mov
lret
cmc
add
add
les
fiadds
sub
scas
andb
je
aam
lea
push
out
push
xchg
pop
mov
test
insl
or
inc
pusha
fdivr
ds
push
add
add
mov
xlat
addr16
xchg
cmp
in
les
or
in
cmc
xor
cmp
mov
pushf
cmc
add
jle
jbe
pop
sbb
inc
shl
jge
pop
cmp
pop
inc
imul
lahf
pop
sbb
pop
push
jg
cli
dec
cld
push
out
ds
cmc
sub
pop
adc
pop
out
sbb
out
inc
sub
cmp
cld
int
cltd
shrb
shr
lcall
jne
mov
filds
popf
add
adc
test
shl
lock
int3
dec
add
ret
in
mov
add
outsb
jle
lods
not
mov
add
imul
cmc
add
add
mov
dec
pop
dec
pop
aam
xor
cmp
pop
scas
jge
jmp
outsl
lea
mov
or
ret
addb
pushf
xchg
shl
aam
adc
icebp
icebp
jnp
inc
decb
xchg
sub
sbb
ret
addb
out
es
push
pop
sub
adc
int
or
xlat
mov
inc
subb
sahf
sahf
stc
dec
incl
je
pop
jo
ss
aad
pop
getsec
adc
sti
mov
dec
push
ljmp
cmc
and
pushf
sbb
frstor
insl
das
and
into
xor
aam
xchg
ds
stos
cmp
data16
in
jge
jno
and
jns
inc
aas
mov
push
push
movzwl
mov
lret
fbstp
xchg
popa
jle
mov
sarb
cmpsb
cwtl
pop
cltd
add
add
mov
xor
xchg
xor
add
cmc
add
add
ret
scas
bound
sti
fisubrs
jae
xchg
pop
dec
jno
push
aam
push
cltd
fptan
jg
mov
xchg
mov
rcl
outsb
mov
bound
aad
add
sub
test
stos
pusha
sub
jns
in
cs
xor
and
loopne
aam
aaa
gs
or
arpl
bound
push
mov
lcall
incb
aam
sarb
outsl
sbbl
sahf
lahf
jmp
sbb
call
cmpsb
jo
mov
or
test
jmp
repnz
xchg
mov
in
nop
out
jns
dec
pop
into
xor
icebp
adc
sub
mov
iret
and
and
adc
and
cmpsl
or
insl
fnstsw
add
outsl
int3
xchg
pusha
mov
add
test
sbb
xlat
ss
inc
movsb
jae
xchg
dec
es
add
add
add
mov
add
mov
das
jg
adcl
sub
mov
mov
lcall
xor
fcomps
add
imul
int3
mov
lcall
inc
pop
push
mov
lret
popf
mov
jmp
das
mov
outsl
jo
clc
fwait
scas
lcall
push
nop/reserved
jb
cmc
test
mov
rclb
cld
mov
jno
sub
push
test
pop
mov
lret
loope
xor
aam
test
aaa
dec
xor
leave
or
jns
imul
aas
clc
mov
popf
ret
mov
test
xor
pop
jl
pop
mov
dec
or
cli
fcompl
movsb
sbb
outsl
pop
adc
push
andl
aaa
movsb
ffreep
sbb
into
clc
mov
repz
add
add
push
sub
cmp
jg
cmp
test
cmc
add
add
xor
lds
inc
inc
push
repnz
push
jl
movsb
lods
pop
int3
fwait
jno
outsl
test
lcall
dec
out
push
cmp
cmp
fisttps
add
in
push
dec
sub
in
dec
adc
lcall
mov
je
fldl
and
sub
or
fimull
jb
call
and
lret
int
rclb
add
mov
or
lcall
or
jp
adc
jmp
bound
lods
icebp
pushf
push
xor
clc
add
scas
adc
hlt
pushf
mov
xchg
shlb
cmp
mov
sbbl
cmpsl
ficoms
dec
xor
imul
inc
or
mov
add
jmp
and
push
aas
data16
mov
add
jmp
ds
repz
aam
shl
cmp
iret
add
cmc
add
add
and
lahf
xlat
sarl
inc
push
dec
call
test
fwait
sub
push
adc
mov
imul
pop
dec
xchg
cmpsl
mov
into
xlat
push
inc
mov
loop
adc
ret
fistpl
sbb
adc
stos
xchg
daa
aad
and
ja
fisubrl
test
inc
pop
mov
jp
loope
mov
add
push
insb
rcrl
test
stos
js
sbb
jo
push
outsb
xlat
mov
adc
lods
or
sbb
inc
rcll
nop
mov
inc
sub
inc
loope
inc
out
and
mov
or
mov
mov
insl
scas
sub
mov
pop
in
xchg
or
sarb
push
movsb
inc
xchg
lods
lret
mov
xor
add
icebp
push
cwtl
cmp
rcr
popa
js
pop
hlt
pop
pop
mov
dec
arpl
add
mov
mov
jne
cs
jg
rolb
add
add
add
inc
jge
xchg
mov
jbe
in
inc
pop
jge
out
xor
sahf
inc
outsb
sub
mov
jb
pop
shll
sub
mov
mov
mov
js
xchg
js
pusha
aam
inc
dec
sti
sub
and
test
sub
lcall
lods
xchg
xchg
jne
rcr
test
fcmovb
outsb
ret
mov
push
jne
sbb
push
rcr
test
int3
cmp
std
adcb
ds
sbb
ja
and
xor
xor
dec
movsw
jno
hlt
dec
cltd
lcall
pop
das
shl
and
add
jp
loopne
mov
dec
adc
adcb
in
adc
lea
hlt
push
fisubrs
cmp
insb
pop
mov
scas
cmp
push
mov
sub
add
enter
in
out
mov
dec
push
mov
add
cmc
add
add
jecxz
cmc
lea
out
cwtl
jnp
ss
adc
insl
ss
inc
jnp
xor
push
mov
inc
lret
sbb
stos
popf
push
add
add
inc
test
push
xor
test
dec
nop
mov
pop
pop
adc
inc
imul
push
cs
jl
pop
shrb
loope
outsl
daa
cli
jbe
pop
mov
fdiv
lods
shlb
jbe
mov
add
inc
insl
mov
sub
and
loopne
addl
out
fsts
push
and
xor
or
add
jno
ja
out
jns
cmp
lahf
add
mov
clc
mov
arpl
ds
mov
push
adc
mov
xchg
es
mov
add
imul
cmc
call
cmp
cmp
roll
add
add
add
dec
enter
imul
push
insb
es
add
xchg
testb
mov
inc
aam
insl
lods
inc
inc
jle
fnstsw
mov
jo
js
dec
mov
into
add
cmp
out
add
mov
mov
stos
adc
int3
lret
push
loop
pushf
jle
or
test
ja
scas
fmul
cmp
lods
out
je
mov
dec
jg
mov
ret
aam
loope
xor
jmp
pop
popf
lock
arpl
mov
mov
xchg
cli
int
mov
xchg
andb
and
mov
rcr
sub
cmp
cmc
inc
shl
sub
xchg
sbb
jl
fbstp
and
pop
pop
xor
lods
stos
in
jle
jne
inc
pop
in
enter
sbb
bound
cmp
ds
test
inc
test
addl
add
add
ja
iret
xchg
xor
fisubs
hlt
in
add
cmc
add
add
in
push
or
out
loope
cli
xchg
push
cmpsb
addr16
jnp
cmpl
mov
mov
push
popf
adc
or
push
pop
push
and
mov
adc
sub
inc
mov
adc
sub
mov
xor
enter
lret
addl
imul
inc
sarl
add
adc
in
xorb
mov
ja
pop
push
stc
and
or
add
push
lret
jecxz
cmp
xchg
imul
lods
inc
dec
push
ret
xchg
dec
pop
xor
adc
pop
test
test
data16
inc
aam
mov
jns
and
outsb
xchg
push
aam
xor
push
jno
ja
xchg
popf
push
xchg
jmp
xchg
test
fdiv
test
jge
out
daa
setle
jg
call
mov
out
out
out
into
gs
fsts
mov
add
cmc
add
add
imul
sbb
roll
iret
lret
fcmovb
and
sbb
enter
or
cmp
sub
dec
arpl
in
push
xor
int
lcall
jbe
cmp
int
fnsave
les
in
dec
in
aad
scas
xchg
icebp
std
test
xchg
js
lret
or
jp
adc
sub
xor
mov
popa
pop
push
jp
fsts
ljmp
cmp
out
arpl
imul
test
push
stos
pop
outsb
nop
sub
and
mov
dec
push
add
movsb
pop
jne
sbb
sti
rcrl
jecxz
sub
lods
out
or
jae
cs
sarb
fs
out
adc
sbb
faddl
out
lea
sub
sub
sub
loopne
in
mov
mov
xchg
or
add
loopne
and
je
out
mov
test
adc
aam
add
add
add
ss
rclb
ss
xchg
sahf
je
stos
mov
xor
fildl
dec
push
loopne
mov
mov
icebp
pop
or
lods
scas
push
movd
sti
xchg
inc
movsl
cmpsl
aam
sub
mov
ret
push
add
call
gs
imul
sbb
jne
shrl
jle
nop
jb
mov
cwtl
addl
testb
inc
xchg
jp,pt
xlat
popa
loope
stos
loop
fisubs
movb
repnz
push
pusha
in
clc
ljmp
je
or
push
pop
mov
pusha
dec
mov
std
jnp
jo
jnp
mov
inc
loope
sbbl
ror
pop
ss
adc
push
scas
sti
pop
rcrb
xlat
inc
jbe
jl
fiaddl
and
sarb
dec
in
gs
dec
xchg
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
ds
ret
aad
add
add
add
test
jne
mov
mov
inc
push
dec
mov
mov
in
fcomip
jecxz
add
test
test
gs
push
pop
push
sahf
lret
cltd
in
push
sbb
add
push
and
jecxz
dec
ret
jg
loop
pop
popf
push
fmull
leave
sub
stos
and
scas
mov
and
imul
repz
sbb
inc
ja
sbb
in
outsb
rolb
outsl
cmp
loope
orps
repz
xor
ds
inc
addr16
mov
stos
sbb
sbbl
mov
push
out
jne
cmp
fiadds
fisubrl
or
push
cld
mov
loopne
xchg
jbe
sub
push
movsb
aas
fistpll
xor
mov
dec
pop
aas
movsl
mov
aas
adc
idivl
add
popf
mov
lahf
or
fdivs
mov
add
add
sub
push
aaa
jb
jbe
and
ret
sbb
mov
adc
sub
dec
in
fsubr
cmp
xchg
xor
xor
and
orl
mov
lret
pop
xchg
mov
ja
inc
movsb
dec
dec
cmpl
dec
fisttps
addr16
roll
out
aam
pushf
insl
jp
sti
adc
aam
movsl
in
sbb
stc
mov
push
cltd
std
insl
cmpsl
loop
cwtl
shl
and
test
mov
lods
pop
je
dec
ss
and
adc
pop
jge
or
sarl
lock
mov
mov
lret
cmp
mov
cmpsb
pop
test
or
adc
out
add
ret
outsb
lret
mov
test
cmp
push
lods
pop
data16
sbb
mov
or
add
mov
mov
mov
ficoml
leave
gs
add
add
add
dec
sbb
cmp
fldl
into
in
int
pop
sahf
call
mov
jb
shrl
xchg
cltd
cs
dec
call
push
jl
sbb
sti
sub
js
inc
lock
mov
mov
mov
jb
fdivl
push
push
adc
fisubrs
movsb
subb
into
cltd
stos
das
repz
or
loope
adc
or
jl
mov
inc
ja
pop
and
mov
sahf
sarb
mov
xor
dec
lods
aas
mov
push
mov
adcl
mov
push
sub
push
add
gs
add
ds
dec
xorl
fcmovu
inc
movsb
dec
jge
shll
xchg
andb
aad
fsubs
adc
fsubrl
pop
mov
mov
call
lea
or
jmp
or
mov
cwtl
and
lahf
add
add
add
sbb
sbb
mov
fbld
add
add
dec
aam
xor
daa
inc
mov
scas
mov
repz
repz
push
out
aas
inc
push
push
sbb
sbb
add
stos
stos
mull
dec
jmp
inc
mov
aaa
mov
xor
jae
jp
add
mov
pop
pop
vpminsw
inc
fidivrs
push
mov
adc
mov
cwtl
push
xlat
cmp
jg
lea
cmpsb
adc
into
jle
mov
push
mov
imul
add
es
int
setg
adc
add
mov
cltd
and
inc
into
jmp
hlt
scas
insl
pop
pop
cli
sti
mov
and
xchg
jne
out
add
ds
shlb
cmc
scas
and
inc
roll
fistl
jns
cmp
les
add
add
ds
sub
arpl
xchg
flds
add
add
add
cmp
sbb
pop
mov
inc
lahf
xchg
push
jae
lret
dec
or
fsubp
xchg
aad
cltd
sub
call
nop
sti
push
lock
adc
rcll
iret
int
and
iret
sub
imull
lahf
adc
add
jmp
test
xor
pop
dec
inc
push
mov
push
adc
jo
jae
mov
fnsave
fnstcw
into
ret
sub
shr
push
jne
cmp
hlt
push
cmpsl
loope
das
mov
stc
jae
jbe
outsl
mov
add
pop
xchg
xchg
int
mov
mov
mov
inc
cmpsl
mov
mov
xor
cmpsl
xor
mov
sahf
leave
adc
aad
hlt
adc
std
imull
cmp
lahf
push
add
xchg
and
idiv
lahf
insl
mov
push
out
iret
mov
add
cmc
add
add
add
jmp
jle
cmp
xchg
cwtl
incl
int3
pop
js
dec
sarb
idivl
js
daa
shl
pop
adcl
inc
daa
rol
cld
push
or
adc
or
lahf
xor
and
imul
add
xchg
rcrb
mov
mov
in
mov
cmc
jae
sti
and
xchg
inc
pop
adc
push
pusha
sbb
out
pop
cli
sbb
sbb
adc
jg
xor
xor
cmp
loope
test
inc
cmc
pushf
inc
jnp
jno
imul
inc
cltd
addr16
inc
mov
cmp
and
dec
pop
fcompl
cmc
xchg
icebp
mov
jo
lock
jnp
in
mov
mov
and
adcb
cld
loopne
jo
shlb
xchg
pushf
imul
cmp
jg
loope
cs
adc
add
add
add
pop
ficoms
movsl
js
mov
pop
lds
shlb
cli
sarl
adc
daa
sahf
inc
mov
mov
sbb
xchg
fmuls
nop
or
pop
pop
je
outsl
jl
out
in
mov
leave
cs
push
les
inc
icebp
shlb
loope
xlat
pop
pop
cmp
jno
or
clc
dec
loopne
lods
push
mov
xchg
add
fs
xor
mov
out
mov
int3
and
nop
dec
sub
shrb
call
cmpsl
xlat
lret
mov
xchg
inc
enter
add
sub
ss
icebp
dec
push
int3
fwait
imul
push
mov
pop
stos
xchg
jmp
fxch
imul
pop
jae
sti
lods
mov
sbb
lret
int
popl
adc
roll
aam
int
xchg
cli
sbb
out
fcoms
add
add
int
out
out
imul
cltd
xor
pop
jbe
add
cmc
add
add
or
fwait
cmp
push
das
mov
enter
lods
outsl
mov
pop
popf
das
sub
repnz
sbb
pop
or
add
adc
sbb
mov
stos
movsbl
mov
shrb
jle
std
je
xlat
dec
mov
and
test
cli
cmc
push
daa
pop
invd
aas
je
pop
shll
mov
gs
mov
sbb
sahf
mov
pop
cmp
push
inc
aaa
push
mov
pop
dec
xchg
jae
inc
cmpsb
jno
lahf
sbbb
xchg
jle
add
js
out
mov
sub
sub
push
cld
lock
scas
enter
movsl
cmp
mov
sti
lahf
das
arpl
or
shrl
jo
je
push
lcall
iret
loope
sti
push
and
aam
cld
push
roll
and
mov
dec
inc
or
inc
cltd
lea
add
out
fldcw
push
xchg
fsubrs
repnz
cmc
add
add
cmp
and
pushf
loop
sbb
dec
adc
movsl
pushf
mov
mov
negl
xor
call
in
and
fwait
ja
add
idivb
cmpsb
sbb
sti
out
cmp
mov
jbe
xchg
inc
push
xor
insb
xor
and
mov
adc
push
imull
sub
movsb
lds
dec
and
jo
pop
push
out
add
daa
jg
xchg
xlat
repnz
inc
cmpsb
mov
sbb
push
das
mov
cmp
and
movsb
rorb
loope
std
mov
adc
mov
data16
mul
out
mov
add
push
repnz
pop
jecxz
mov
mov
sub
push
or
jae
aam
loope
movsl
test
cwtl
sub
ret
ja
dec
push
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
inc
inc
pusha
fiadds
add
add
add
push
mov
es
out
out
sti
inc
jp
decl
cmpsl
mov
stos
je
aaa
cltd
in
sar
push
call
xlat
xor
adc
jns
sub
ljmp
out
call
in
adc
repnz
cli
loope,pt
pushf
jo
enter
jnp
jmp
arpl
cmpsl
inc
mov
jecxz
test
inc
and
jge
dec
bound
xchg
test
in
popa
xchg
xchg
movsl
adc
mov
push
add
pushf
mov
mov
loope
push
sub
dec
js
mov
xor
in
adc
call
cmp
push
sbb
test
mov
mov
js
pop
mov
arpl
jae
lea
gs
movsl
inc
popa
jae
in
out
fisubrs
loop
dec
jle
pusha
inc
lock
dec
aad
xor
test
add
add
jle
jg
std
fldt
cmp
rolb
add
cmc
add
add
xchg
sbb
xor
cltd
mov
call
fwait
rorb
sbb
push
or
and
inc
push
push
mov
or
mov
xor
or
cmpsl
jno
and
add
mov
ds
insb
adc
jnp
ret
mov
mov
xchg
pusha
shrb
sbb
push
xchg
dec
and
stos
lea
adc
fistpll
mov
jnp
push
hlt
pop
movsl
in
hlt
lock
les
or
repnz
sbb
inc
outsl
lret
xor
jge
or
xor
adc
int3
push
in
in
nop
test
cmp
xchg
xor
pop
adc
or
pop
cmp
mov
mov
sahf
inc
mov
or
jb
rep
push
sbb
stos
push
pop
cmp
add
add
mov
sti
idiv
lods
jne
adc
cmp
add
loopne
add
add
add
add
subl
or
inc
jb
dec
xchg
loopne
push
xlat
repz
aad
sti
jge
fisttps
mov
imul
cmp
push
mov
inc
xchg
sbb
fwait
ljmp
lret
push
pop
cmp
push
cmpsb
repz
inc
arpl
add
fs
lds
popf
or
into
flds
jbe
ficomps
pop
or
xchg
imul
jae
add
push
insb
mov
xchg
push
mov
loop
cli
dec
stc
jg
loopne
mov
or
sbb
adc
pop
popf
out
test
xor
in
test
mov
mov
xor
adc
and
test
out
pop
push
fs
and
jne
imul
jno
loope
scas
inc
ja
int
add
add
sbb
jmp
mov
xor
pop
aas
loope
add
add
add
lcall
out
icebp
or
lds
insl
push
test
mov
sbb
sbb
loope
lret
xor
jnp
rcl
pop
lea
or
fwait
aas
movsb
jno
mov
aaa
mov
mov
jns
dec
mov
xchg
push
mov
inc
adc
loopne
loop
or
sbb
mov
fisttpll
push
adc
jb
aad
orb
aad
inc
pop
mov
pop
mov
adc
outsb
lea
mov
cmpb
or
mov
and
cld
jnp
cwtl
pop
push
ja
inc
fidivrs
xchg
mov
pop
clc
push
or
and
lock
cltd
stc
hlt
jnp
dec
push
dec
popa
sbb
pop
call
xchg
shll
dec
test
push
add
add
push
out
jp
dec
mov
inc
int
loop
add
add
add
pop
xor
inc
ret
ret
push
bound
sbbl
leave
inc
pop
sub
jmp
dec
and
pop
inc
xchg
sbb
insl
imul
xor
jo
cmp
call
lcall
add
jle
incb
mov
xlat
shll
out
inc
or
add
sbb
push
imul
cmp
in
outsl
mov
loop
fldcw
out
add
inc
les
js
inc
insb
mov
das
adc
rcr
test
stos
inc
jno
inc
stc
xchg
xor
xchg
jp
movsl
imul
daa
fs
outsl
cmp
add
pop
jmp
jbe
jnp
mov
mov
test
loop
push
cs
push
xchg
cmp
scas
mov
popa
dec
jae
mov
lock
xor
add
add
mov
lcall
mov
ljmp
add
adc
roll
das
mov
jge
xchg
into
mov
popf
mov
movsl
sub
xor
dec
cmp
xor
sbb
xchg
cld
cmp
out
push
cmc
add
pop
sub
sub
addr16
xchg
jbe
es
pop
sub
sub
negb
cwtl
mov
push
mov
pop
es
adc
xchg
lea
push
xchg
sub
fidivrs
int3
or
out
out
jbe
and
jmp
mov
push
sub
loope
push
or
mov
loope
lret
xchg
jb
shll
pop
data16
pushl
adc
lret
pop
mov
xchg
fmulp
pop
lock
pusha
pop
fistpl
pop
push
out
pop
mov
leave
mov
cmp
sub
pop
xchg
je
push
mov
jg
jp
adc
jbe
mov
mov
add
mov
jns
daa
data16
push
in
add
add
add
bound
push
cmp
dec
arpl
or
int3
pop
pop
mov
adc
jb
mov
icebp
xchg
xchg
mov
ret
or
or
cmp
push
xchg
jl
dec
sub
xchg
xchg
mov
mov
mov
lock
inc
icebp
hlt
shl
xchg
xor
cmp
fsubs
dec
aas
shl
test
dec
jno
dec
lcall
adc
insb
mov
xorb
cmp
into
mov
xor
cs
ljmp
dec
xor
push
mov
mov
frstor
sbb
ljmp
push
pop
sub
xorb
ret
fistpl
movsb
icebp
mov
stos
xchg
mov
mov
movsl
es
jle
das
mov
adc
push
popf
bound
or
std
outsl
cmc
jb
sub
sti
add
add
fadd
fsubp
jnp
push
xor
jae
in
add
add
add
jb
adc
jo
scas
mov
or
lret
mov
pop
subb
mov
in
roll
fsubl
jne
mov
fsubl
sbb
shlb
test
in
adc
mov
daa
negb
je
pusha
sti
and
adc
dec
mov
aam
xchg
adc
mov
push
rcrb
jbe
in
dec
stc
dec
test
mov
add
icebp
scas
sub
enter
adc
jl
loop
sbb
sub
jb
cmpsb
mov
add
fnstsw
cltd
sahf
or
or
or
movsb
xchg
dec
fwait
cmc
add
call
cltd
hlt
jne
sub
ja
daa
imul
loope
ss
std
add
xchg
enter
push
cmp
sub
cld
cli
jle
addb
or
add
cmc
add
add
cmp
les
loopne
lret
dec
dec
test
xor
pop
jl
push
inc
in
clc
shlb
lods
mov
cmp
test
push
in
outsl
cmc
fimuls
arpl
das
jo
inc
mov
add
dec
rorl
lahf
jp
adc
xchg
push
notl
rolb
sahf
icebp
inc
xor
mov
jae
cltd
xor
sub
sbb
and
sbb
lock
adc
rcrb
pop
dec
fimull
mov
dec
scas
sti
mov
cmp
and
daa
inc
cmp
in
inc
les
lret
mov
repnz
aam
adc
mov
xchg
mov
jp
xor
pop
jo
adc
sbb
and
push
pop
idiv
stos
dec
jmp
mov
push
jne
dec
push
fildl
test
xchg
mov
push
out
test
jmp
push
out
add
lea
pop
jbe
ja
sti
dec
push
sbb
pop
std
out
add
add
add
or
rcrb
inc
lcall
repz
fs
pop
pop
cltd
jns
cmpsl
dec
aam
mov
inc
dec
add
cmp
insl
test
nop
or
out
sub
mov
or
faddl
lea
or
add
or
fcoml
loope
pusha
shl
jbe
aad
repnz
sub
lret
or
mov
inc
cmp
rcl
xchg
xchg
push
ret
mov
fbstp
push
jae
stos
jmp
cltd
dec
adc
inc
mov
push
push
cmc
and
bound
std
cmp
inc
push
xor
sub
imul
pop
mov
jl
sub
pop
gs
mov
test
jno
nop
or
scas
dec
jb
mov
adc
add
pushw
ret
stos
aaa
pop
in
lret
repz
xor
add
into
sahf
sbb
mov
push
sahf
aaa
lock
add
ror
cltd
outsl
mov
cmc
or
add
add
add
add
dec
cmpsb
dec
adc
push
in
cmpsl
fiadds
mov
popf
in
or
emms
pop
fdivrl
dec
stos
out
testl
setge
gs
mov
mov
sub
addl
stc
mov
call
adc
cmpsl
xlat
fwait
jnp
adc
xchg
pusha
jg
aas
sbb
fs
ja
stos
out
addr16
add
pop
or
mov
sub
sbb
scas
shr
push
xor
scas
ss
cmp
cmp
es
cmp
push
mov
mov
outsb
shlb
or
add
fcoml
push
insl
adc
fdivl
xchg
aad
cwtl
test
pusha
pop
dec
sahf
dec
ja
and
fadds
mov
add
dec
mov
xchg
xchg
pop
aas
mov
sub
push
cmp
mov
mov
out
cmpsl
outsl
call
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
inc
pushf
xchg
clc
mov
xlat
pop
push
stos
pop
or
cmp
add
ja
test
sbb
loope
pop
pusha
lea
sbb
mov
mov
repz
loope
jne
lds
addb
enter
cmpl
in
inc
push
ja
lea
iret
push
das
and
xchg
mov
clc
sbb
mov
dec
or
movsb
or
and
push
push
mov
cmp
xchg
cmp
xor
testb
int3
cli
cmp
lret
add
jae
pop
xchg
flds
outsl
lock
dec
sub
aaa
lock
enter
clc
inc
aaa
mov
ja
jno
push
mov
push
ja
dec
xor
loop
xchg
ljmp
push
sbbb
jmp
dec
in
xchg
pushf
ficoml
popl
pop
jae
fildl
ficoml
add
add
add
lock
jg
mov
stc
lds
fsubr
add
cmc
add
add
mov
jl
and
pop
scas
xor
mov
stc
mov
lret
adc
jg
adc
leave
mov
out
push
mov
and
insb
dec
sbb
cmpsb
jne
adc
xchg
pop
sub
lahf
test
push
imul
outsl
or
cmpsb
sbb
sbbl
or
pop
dec
ljmp
xor
or
xchg
push
rcll
add
sub
and
mov
scas
sub
stos
and
lods
lds
sub
fcomps
nop
xchg
out
ja
jb
ja
outsl
pop
push
cs
inc
mov
xchg
sub
orl
pop
jmp
mov
sahf
xchg
fiaddl
data16
xor
out
lods
insl
dec
or
xor
loopne
in
cmp
xor
jb
sub
add
pop
xlat
fisttpl
decb
add
add
add
dec
stc
push
lret
xchg
mov
es
adc
mov
nop
push
testb
cmovs
movl
push
inc
xchg
sub
sbb
out
test
shll
xchg
fisttpl
stc
and
out
mov
jae
or
div
add
iret
sub
imul
fldt
lock
popa
int
addb
push
inc
sti
mov
bnd
sbb
lods
ja
incl
inc
jmp
ds
sbbb
sub
sti
cmp
imul
test
dec
ja
or
push
icebp
fcompl
incb
pop
mov
sahf
mov
cld
enter
jl
jno
loope
cmpsb
lret
cmc
inc
test
xor
ljmp
test
or
sbb
xlat
movsb
js
add
add
mov
dec
js
stc
mov
push
nop
aad
insl
loop
jmp
add
add
add
mov
push
inc
shrb
lret
lahf
jno
roll
out
cmp
push
into
loope
cmp
ret
int
loop
cltd
push
sbb
or
rolb
mov
ja
mov
sbb
sbb
sbb
mov
in
pop
dec
inc
int
mov
mov
cmp
dec
dec
scas
and
mov
fprem
and
jb
subb
dec
push
jg
push
sbb
popf
fstpl
pop
imul
lods
stos
jo
mov
cltd
loopne
out
sahf
mov
dec
aaa
or
dec
xor
sti
fwait
xlat
pop
jnp
xor
jne
sahf
fstpt
inc
in
addl
fstpt
ljmp
push
add
pop
mov
cmp
mov
add
xchg
add
aam
add
jecxz
loop
cmpsl
xor
popf
stos
in
add
adc
add
add
insl
repz
add
mov
mov
mov
add
add
andl
jb
jo
stos
or
popa
lcall
mov
push
inc
jnp
cmpsl
jae
jmp
xchg
pusha
rclb
fistps
test
movsb
xchg
sub
arpl
mov
cwtl
inc
add
xor
lret
mov
sub
or
or
dec
fs
imul
push
jns
mov
cmpsb
inc
shl
jmp
int3
pop
ja
jnp
movsb
dec
xchg
pop
sbb
test
jnp
jp
stos
xor
jae
scas
roll
xchg
js
inc
enter
aaa
clc
mulb
arpl
lock
test
stos
rcl
cmp
or
mov
loop
inc
test
rolb
cmp
stc
mov
lret
outsl
popa
inc
add
fstpl
lods
add
adc
dec
mov
add
cmp
jnp
sbb
test
cmc
add
add
jg
fwait
mov
adc
add
mov
ds
push
sbb
dec
cmp
outsb
pop
and
adc
movsb
mov
in
outsl
ds
loop
push
inc
movsl
add
ret
out
dec
xchg
sbb
push
cld
mov
or
jge
scas
push
push
sub
mov
scas
cmp
outsb
popa
das
mov
aam
les
enter
mov
rep
js
lock
repz
pop
ds
lahf
jle
add
mov
sub
pop
in
inc
rep
cltd
dec
xor
inc
repnz
daa
pop
cmpsl
jp
sbb
jge
xchg
and
xchg
jae
add
daa
lods
sub
mov
xor
push
icebp
fldcw
xchg
fisubl
cmp
cs
lods
inc
test
jne
test
mov
xorb
negb
mov
add
subb
jmp
popa
test
movsl
out
add
cmc
add
add
loope
dec
jecxz
xchg
scas
in
cmp
lret
xor
popl
or
hlt
out
xchg
inc
xchg
aam
mov
hlt
push
xchg
les
test
mov
mov
sub
rcr
cs
and
popa
data16
push
jge
movsb
and
enter
enter
sbb
bound
flds
imul
shll
lds
and
pop
mov
das
scas
push
aaa
mov
sbb
add
mov
xorb
imul
xchg
out
xchg
pop
sub
icebp
add
inc
push
mov
adc
test
push
sub
into
mov
pusha
nop
mov
aas
fsub
mov
add
test
push
push
popf
rorl
repnz
jae
dec
cs
cmp
scas
sti
lcall
add
jb
scas
cmp
int3
repnz
out
add
cmc
add
add
int3
push
addl
mov
mov
cld
push
inc
in
fidivl
addr16
int3
outsl
mov
roll
push
cs
mov
inc
mov
pop
xchg
push
mov
push
xor
lods
cli
fsts
out
xlat
jl
negb
insb
push
out
cli
mov
cmp
shlb
outsl
cmp
adcl
jnp
orb
mov
jnp
insl
loopne
das
mov
movsl
call
bound
pop
fcomps
add
pop
push
xchg
sub
fbld
cmp
leave
and
mov
push
mov
dec
push
jmp
call
gs
sti
or
cmpsb
stos
into
fists
mov
cmovnp
adc
lret
jge
mov
movsb
or
inc
mov
mov
xlat
mov
bound
and
add
cmc
add
add
cmp
and
mov
mov
dec
sti
imul
or
xchg
mov
js
das
jno
imul
ds
stos
push
pop
inc
out
lret
sbb
mov
push
adc
sbb
loopne
lock
test
mov
sub
push
mov
mulb
mov
jae
repnz
pop
add
xchg
push
in
mov
xor
imul
or
and
loop
xchg
mov
dec
sbb
inc
pushl
add
movsl
les
pop
add
pushf
xor
sar
mov
pop
divb
outsl
push
ss
fdivrl
stc
icebp
jns
or
cmp
push
aaa
f2xm1
sbb
adc
inc
arpl
xchg
and
orl
inc
adcl
dec
and
jl
enter
add
add
mov
aas
jp
int3
icebp
arpl
dec
pop
test
add
cmc
add
add
inc
out
sti
xchg
es
les
xchg
push
ror
add
xor
add
cld
es
lock
movsl
mov
lea
inc
push
repz
jp
dec
subb
dec
out
xchg
add
js
add
fsub
and
je
mov
pusha
jno
push
cmp
pop
and
sahf
xor
mov
mov
rol
inc
insl
cmp
pop
xor
mov
adc
push
sub
in
js
scas
rclb
subl
loop
and
ja
cmp
dec
or
mov
rorl
add
test
push
inc
sub
jl
cwtl
dec
and
pop
jmp
rorl
fst
and
cltd
in
jb
test
mov
push
mov
ret
mov
jmp
push
popf
dec
std
movsb
sub
dec
or
out
sub
adc
jmp
add
mov
sti
mov
mov
aam
jns
add
cmc
add
add
insb
mov
mov
std
and
stos
push
daa
push
xchg
pop
mov
mov
outsl
fdivr
inc
stos
ret
int3
pop
cmp
xchg
ja
fwait
popf
xchg
and
test
cs
stc
sbb
hlt
mov
inc
sbb
insl
std
fdivrs
inc
push
enter
fcompl
out
mov
pop
adc
mov
mov
push
pop
sbb
xor
sub
lahf
lods
push
dec
xchg
inc
in
add
xchg
dec
out
notb
xchg
in
push
in
dec
mov
pop
shlb
or
pop
in
stos
lock
xor
xor
jmp
sub
xor
and
xchg
testb
xchg
fstpt
mov
cs
xor
leave
xchg
mov
add
mov
push
lods
loope
cwtl
add
add
into
adc
neg
jge
push
xchg
adc
outsb
repz
cmc
add
add
jle
inc
cmp
sub
cmp
loopne
mov
sar
cld
es
inc
das
fnstsw
add
mov
out
push
xchg
pop
push
sti
lock
inc
sub
jl
pop
aas
and
scas
adc
cmp
mov
jns
push
and
call
jp
std
mov
imul
dec
rol
insb
loopne
mov
xchg
inc
test
mov
mov
jle
and
jbe
in
mov
bound
int3
sbb
adc
push
cmpsb
xchg
jp
fnstcw
add
xor
xor
js
or
pop
or
sub
lds
adc
ljmp
and
jb
or
insl
ljmp
addr16
sti
icebp
add
sbb
xchg
and
aad
sahf
les
movsb
inc
xchg
or
lcall
aam
jl
outsb
or
insl
add
add
dec
sub
or
xchg
insb
arpl
add
cmc
add
add
dec
inc
adc
jp
cmc
pop
xor
outsb
xor
pop
int
rol
xchg
mov
cmp
xchg
add
iret
cmp
jns
inc
sub
mov
add
jle
ret
adc
xor
arpl
pushf
leave
mov
cmp
scas
mov
xchg
stos
lahf
mov
xor
addr16
push
xchg
xchg
mov
stos
lea
mov
out
and
sbb
fwait
cmc
pop
cmpsl
xchg
mov
mov
pop
lock
shrl
sub
pop
arpl
adc
into
out
or
xchg
fistps
lahf
rclb
dec
lahf
xor
int3
imul
dec
sbb
test
push
in
push
addr16
out
jb
mov
mov
sub
dec
pop
daa
out
inc
addb
push
loope
insb
scas
sbb
add
add
ja
and
aaa
negl
int3
mov
add
add
add
icebp
negl
mov
fidivl
lods
add
pop
fisttps
and
xchg
adc
xchg
xor
in
ror
cmpsb
out
mov
jmp
pop
imul
loopne
rcrl
imul
mov
loope
loopne
push
nop
fs
push
sbb
stos
jmp
bsr
push
or
aas
add
adc
popf
cmp
testl
jno
lods
xchg
lods
ret
aam
scas
xchg
add
mov
and
sub
or
pushf
push
rcll
xchg
in
inc
js
movsb
arpl
add
lock
add
int3
sbb
addr16
or
and
xchg
stc
mov
jge
inc
xchg
cmp
inc
mov
mov
add
aam
add
add
mov
cmc
mov
jge
pop
sahf
dec
testb
cmc
add
add
jne
cmp
daa
sbb
cmp
cmp
pop
lahf
aaa
pop
pop
inc
sub
cmpsl
je
sar
add
xchg
jg
cld
stc
jae
jbe
int3
or
imul
or
call
aas
xor
cltd
pop
outsb
pop
cltd
mov
cmc
inc
push
loop
ljmp
arpl
xchg
jg
mov
add
lods
pop
neg
sbb
add
adc
iret
cltd
int
pop
jg
sbb
cmpsb
aad
dec
int3
aaa
repnz
dec
int3
lea
loop
jo
and
mov
sbb
xor
in
arpl
sub
xchg
sahf
push
out
sub
dec
or
orb
arpl
test
in
es
pcmpgtw
mov
fcoms
mov
sbb
and
icebp
sub
or
or
jg
emms
mov
movl
add
jle
jne
cmp
pop
inc
fisttpl
rolb
add
add
add
xor
loopne
mov
mov
jmp
hlt
sub
int3
out
mov
pusha
shlb
jo
sahf
push
aad
xchg
jle
icebp
mov
xor
enter
stos
inc
xchg
mov
mov
test
dec
test
jmp
sub
popl
sahf
scas
mov
sbb
xor
test
imul
inc
clc
ds
add
daa
lcall
int
roll
pusha
adc
mov
nop
data16
or
sti
and
xchg
ss
sbb
fdivrs
sub
rorl
call
jnp
jecxz
insl
push
xchg
jne
xor
mov
dec
lods
add
jbe
jnp
jmp
mov
data16
mov
jae
idivb
test
xlat
fsubp
or
and
xor
jg
out
outsb
and
add
sub
scas
fdivr
fnstcw
cmpl
popf
aaa
clc
add
cmc
add
add
push
fwait
mov
sub
es
shll
test
data16
push
aaa
or
cmp
mov
mov
dec
add
cmpsl
adc
pop
scas
sub
pop
and
adc
cmp
sbb
dec
clc
push
imul
ja
scas
mov
call
rclb
and
cltd
insb
push
mov
mov
xor
or
push
cmp
clc
ds
mov
add
rolb
jae
loope
out
sbb
mov
das
mull
jmp
shll
or
nop
and
repz
and
and
stos
add
jmp
out
jmp
sub
outsb
cmp
pop
dec
clc
test
ret
shrb
dec
aam
hlt
sbb
add
inc
lahf
shl
push
ret
mov
shr
xor
add
add
xor
xchg
fwait
bound
cld
and
sub
add
cmc
add
add
fcoms
cmp
pop
int3
mov
push
cmp
subb
dec
sub
xchg
insl
aad
sub
mov
mov
cmp
adc
test
mov
or
int
bound
or
pop
cmp
aas
lods
clc
fsubs
stos
xchg
aaa
sub
dec
xchg
and
test
dec
xor
mov
pop
sahf
cli
push
fbld
cmp
mov
pushf
add
ret
lock
rcr
xchg
loopne
sahf
cwtl
test
movsb
xchg
shl
jmp
rcrl
lret
xchg
xlat
and
pop
mov
cli
mov
shlb
mov
and
adc
in
and
mov
dec
call
xor
pop
push
adc
stc
or
lods
xchg
inc
mov
mov
outsl
add
add
ds
in
idivl
pushl
mov
add
cmc
add
add
adc
nop
enter
dec
jns
js
leave
movl
frstor
rol
push
lds
jge
or
insl
sbb
jnp
stos
pop
lcall
push
push
pop
mov
pushf
imul
mov
jb
cmp
das
mov
add
mov
cmp
mov
aaa
sti
mov
sub
dec
jns,pn
mov
mov
xor
ffreep
je
cmc
inc
adc
mov
adc
sub
xchg
xchg
ja
lods
insb
mov
shrl
insb
sbb
outsl
out
pop
cmp
sbb
xor
jne
stos
fisubrs
mov
jmp
ljmp
mov
mov
mov
std
in
enter
out
or
aaa
mov
dec
push
adc
xor
cmp
jmp
pop
es
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
loopne
es
jg
out
sbb
hlt
inc
pop
cmp
out
scas
xor
fnsave
aaa
in
mov
cmp
pop
inc
add
pop
sub
jne
pop
xor
dec
hlt
mov
enter
rorb
push
add
mov
xchg
xchg
xchg
dec
pop
push
xchg
xor
int3
cwtl
int
es
fwait
push
mov
fwait
movsb
sbb
jmp
repnz
push
pop
stos
sbb
pop
add
adc
push
iret
push
lock
push
mov
fimull
rorb
push
push
push
icebp
xchg
mov
int
iret
jne
out
add
inc
or
popa
gs
add
je
jl
mov
or
jmp
je
jecxz
ror
fisttps
ds
mov
sbb
adc
mov
test
push
das
pop
addl
insl
sbb
arpl
xchg
add
add
lcall
jmp
cld
add
cmc
add
add
popf
popa
sbb
shrl
insb
mov
cmp
sub
push
fisubl
sub
and
pop
mov
sbb
push
dec
pushl
sti
fwait
mull
xor
sarb
or
push
rcrl
cmc
xchg
gs
jns
sbb
and
push
cld
in
into
dec
fwait
scas
adc
clc
enter
or
jne
mov
test
das
ficoms
jge
cs
lret
es
mov
arpl
and
jecxz
sub
pop
rcll
test
inc
pop
std
sbb
lods
andl
loopne
push
pop
pushf
jmp
test
dec
adc
or
mov
shlb
lcall
xchg
fbld
stc
shl
movq
dec
xor
shlb
sbb
je
loope
pop
jae
pop
cmp
add
aaa
jae
cltd
dec
mov
fs
add
cmc
add
add
sub
lret
iret
jno
popa
unpckhps
aad
mov
sub
xor
xlat
dec
in
lock
or
xchg
iret
arpl
xchg
dec
rolb
ffree
pop
inc
mov
int
cltd
fdivrl
mov
xchg
aas
xchg
jnp
sub
cmp
sbb
inc
xchg
cwtl
fsubrl
inc
fsubr
ja
adc
inc
test
cwtl
adc
outsl
popa
lahf
aaa
scas
divb
adc
setno
test
test
add
in
inc
adc
popa
dec
mov
movsl
pop
out
not
iret
test
sub
jbe
ss
xchg
scas
xlat
mov
imul
subl
jp
popf
outsb
jl
sbb
lret
cli
mov
lea
ret
sbb
inc
mov
adc
or
add
ds
into
nop
out
cwtl
jle
xlat
movsb
add
push
pushf
cmc
std
add
cmc
add
add
mov
push
sub
and
mov
or
jp
fiaddl
ret
stc
cmp
ss
mov
lahf
xor
adc
popf
js
mov
lret
and
add
xor
inc
repz
paddsw
xor
icebp
xor
inc
xchg
das
iret
pop
jbe
or
sbb
and
bound
fs
jnp
mov
sbb
mov
jb
sub
mov
add
clc
sbb
ficoms
add
adc
jmp
cmp
sub
das
mov
out
or
stc
mov
cmpsl
fsubs
addr16
insb
enter
or
adc
lret
push
jmp
push
sbb
movsb
mov
mov
fcompl
sbb
xor
add
cmc
popa
int3
xchg
mov
out
cmp
fwait
sub
add
jno
test
jg
xor
or
xchg
add
add
add
adc
es
shll
into
lods
xchg
and
stc
js
lods
insb
pop
mov
dec
les
int3
scas
adc
jne
aaa
jbe
pushf
adc
cmp
mov
xchg
pop
je
cmp
cld
xchg
les
fldl
in
dec
mov
jmp
push
jmp
popf
lods
xor
lea
pop
lods
push
fwait
dec
mov
mov
pop
xor
cmp
mov
lahf
push
outsb
xchg
cmp
xchg
adc
pop
aam
xchg
adc
pusha
cmpsb
sub
js
jae
dec
lcall
clc
pop
shlb
mov
push
out
out
and
int3
int3
sbb
dec
popa
and
sub
xor
fisubrl
ret
stc
popa
popf
sarb
js
cmp
mov
add
add
movsb
push
in
cmc
jne
pop
adc
cmp
enter
add
cmc
add
add
lea
roll
lods
pop
aam
pop
xchg
lcall
jns
jno
xor
inc
sbb
cmp
stc
or
sbb
pop
cmc
pop
lock
dec
jo
add
mov
sub
pop
pop
sub
xor
xor
out
jge
sub
fiaddl
fidivl
scas
lods
dec
inc
scas
cli
xor
test
lret
xor
nop
push
sbb
iret
enter
add
lret
xchg
dec
mov
mov
movsl
out
jns
in
popa
inc
or
iret
std
dec
sti
push
je
bound
fsts
jne
sub
push
movsb
xor
arpl
cmp
outsl
or
in
std
rcll
cld
outsl
iret
cmp
pop
push
jb
or
testb
add
add
add
ss
es
std
insb
repz
mov
adc
push
mov
add
add
out
shlb
aas
out
fwait
aaa
call
test
cmc
add
add
pop
sbb
mov
cmp
cmp
sti
pop
je
adc
rcrl
out
in
shlb
movsl
ret
push
inc
xor
arpl
iret
dec
js
pusha
jle
jne
scas
sbb
jmp
push
push
sbb
and
add
shlb
mov
dec
add
ss
fcmovnbe
ret
sahf
cld
jnp
lret
in
clc
cmpsb
push
mov
push
fisubs
in
xchg
in
test
mov
or
je
shrb
rorl
popf
aaa
imulb
sub
mov
imul
lock
push
pop
xchg
push
lahf
push
jb
sub
jns
lods
loop
sbb
push
es
cmp
jae
mov
pop
dec
stos
pusha
je
jb
andl
nop
leave
shlb
stos
push
and
add
inc
bound
add
mov
cmp
sub
mov
inc
add
das
mov
push
pop
lods
add
add
mov
lcall
jp
leave
add
add
add
add
inc
xchg
xchg
les
adc
addr16
sub
divl
addr16
jmp
pop
push
scas
push
xchg
jnp
add
mov
loop
lret
add
cmp
sub
dec
cwtl
cli
sahf
pop
push
mov
jno
in
aad
push
push
jecxz
js
test
mov
inc
mov
hlt
movsl
call
rcrl
jl
dec
or
sbb
rcl
add
lods
cmpsb
insb
int3
ja
imul
lock
insl
cli
or
outsl
cmpsb
rcl
and
fs
in
dec
loopne
test
test
mov
fwait
bound
pop
sub
push
mov
out
addr16
inc
push
data16
pop
lds
push
push
js
cld
jbe
iret
mov
negb
movsl
call
aas
jbe
push
push
in
add
sbb
add
dec
rol
lret
clc
rorb
cltd
jl
mov
add
cmc
add
add
jl
xor
popf
push
xchg
inc
cmp
gs
push
addb
lcall
iret
inc
inc
mov
sahf
or
ror
lods
sbb
js
les
movsb
jnp
pop
leave
push
addl
bound
pop
mov
sbb
or
mov
outsl
ss
test
push
cmpb
jbe
in
cmc
and
insb
les
enter
pop
outsl
dec
enter
xor
neg
add
sub
test
sub
in
std
ret
add
stos
xor
unpcklps
ret
lahf
ret
mov
cmpsl
jge
fstl
xor
enter
lds
jle
pop
adc
js
push
movsb
jl
cltd
arpl
and
cwtl
adc
imul
inc
add
add
std
aaa
mov
lret
jne
xchg
mov
add
add
add
sti
and
loopne
push
lods
sub
or
sti
mov
sets
in
loopne
xor
fsubs
clc
out
add
insl
inc
cli
mov
jmp
stos
sub
testl
cltd
xor
add
test
mov
jo
adc
cltd
cmc
lret
mul
jno
sbb
jne
nop
addr16
test
fcmove
test
push
jne
sbb
push
and
and
mov
clc
jmp
dec
push
mov
insl
sahf
adc
push
mov
je
xchg
frstor
push
in
add
xchg
fsubp
sub
vdivps
repnz
and
cmpsb
ja
adc
outsb
dec
movsl
sbb
inc
pop
je
sbb
add
pop
jo
in
nop
xchg
ds
in
mov
cmp
and
mov
add
add
insl
aam
mov
fs
mov
mov
add
add
add
mov
sbb
sub
sti
mov
in
cmc
outsl
pop
loope
xor
push
in
sti
ret
andl
and
and
adc
add
sti
imul
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
insl
push
imul
sti
push
lods
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
