push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
inc
and
sbb
sarl
rorb
cs
icebp
mov
adc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
or
add
insb
xor
imul
daa
mov
popa
test
imul
stos
div
mov
test
movsl
and
or
xor
pusha
pop
xchg
push
and
add
mov
int3
out
gs
pushf
dec
xchg
jl
mov
popl
outsb
hlt
mov
mov
rorb
xchg
ret
sub
mov
mov
ret
stos
fisubs
ficomps
push
test
test
test
xchg
xchg
int3
arpl
test
ss
or
mov
scas
mov
or
or
insl
push
lods
xchg
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
mov
adc
sbb
push
mov
ljmp
cmp
pop
stos
ds
cmpsb
adc
call
push
scas
inc
pop
stos
fisttpl
or
inc
pop
lret
aaa
cs
fidivrs
sub
adc
les
aam
xor
in
ret
fisubs
fcompl
mov
int3
xor
inc
push
in
xor
push
iret
mov
mov
outsb
jns
fisttpl
mov
shl
lock
sub
cld
mov
daa
push
sub
out
xchg
mov
cmpsl
xchg
adc
pop
addr16
mov
fisttpl
fwait
mov
xor
jg
sbb
shl
scas
add
and
push
loopne
sbb
test
dec
dec
icebp
es
push
xchg
imul
filds
adc
inc
setne
cmpb
jg
adc
scas
mov
fmuls
pop
push
inc
movsb
dec
cmp
mov
or
ror
sbb
jp
out
repz
or
and
stc
adc
pop
mov
jno
push
adc
push
in
mov
xor
gs
jae
xchg
mov
pop
rclb
mov
mov
mov
lret
jge
cmp
mov
aas
push
sbb
mov
aaa
clc
inc
sub
test
xlat
inc
test
cmpsb
jae
fcomps
movsb
loope
push
sbb
sub
fisubs
mov
xchg
loope
xchg
xchg
out
lahf
dec
sub
icebp
lret
frstor
pop
and
adc
cld
dec
mov
jp
subb
inc
pop
rcrb
out
dec
int
aad
ret
inc
dec
xlat
and
push
push
aaa
dec
repz
popa
insl
add
test
sub
xor
pop
stos
int
insl
lock
push
dec
xor
inc
adc
mov
jno
inc
aaa
adc
cmc
add
pop
add
cli
enter
subl
cmpl
shll
adc
fwait
aad
mov
dec
popf
pcmpeqw
ja
out
cmp
js
add
ljmp
jl
cmc
cmp
jle
test
insb
jmp
ljmp
mov
mov
dec
xor
jge
out
int
rorb
jns
add
cli
mov
rcll
cli
ja
jmp
iret
mov
es
jle
dec
mov
popf
jg
and
or
std
cld
jle
adc
lods
out
adc
je
xor
jl
cs
inc
jle
and
arpl
dec
iret
outsl
ja
fldl
inc
les
cmp
stos
cwtl
aas
add
pop
pusha
ret
xchg
ss
push
testb
sbb
gs
xor
les
data16
add
lahf
ljmp
repz
sbb
cwtl
ud0
popa
sbb
in
shlb
sarl
adc
loopne
aad
xchg
popa
je
leave
xor
ds
dec
lcall
or
xchg
loope
es
dec
test
imul
ret
int3
leave
jno
ds
mov
jl
jne
outsl
dec
pop
dec
icebp
jge
ret
stc
sbb
fmul
cmp
lahf
ljmp
inc
fidivl
dec
jae
ret
fstps
add
fwait
and
jmp
stos
pusha
clc
orl
lds
sub
or
inc
outsl
sbb
xchg
sbb
lods
pop
jnp
cld
mov
cmp
insb
pop
test
lods
out
in
xlat
jp
js
sbb
cmp
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
lods
cltd
mov
sahf
adc
sbb
or
add
fwait
xchg
xor
pop
jge
inc
sarl
adc
cmp
sub
jle
lret
sub
adc
pop
xchg
adc
fcmovne
sub
enter
add
add
adc
fistps
cmc
pop
or
push
cmp
add
mov
hlt
in
or
mov
pop
mov
insl
xchg
mov
sbb
popa
mov
mov
jecxz
hlt
jo
fsubr
and
decl
mov
std
imul
add
pusha
or
je
pop
xchg
pop
ret
jo
sub
out
or
add
inc
rcr
pop
rclb
xlat
out
out
sbb
movsl
push
add
xchg
sbb
xlat
bound
dec
js
shlb
loope
out
movl
mov
mov
rcr
bound
push
jle
mov
jmp
leave
push
cmpsl
sahf
xor
insl
pop
push
ficompl
pushf
ja
hlt
sbb
call
mov
pop
lcall
jae
sub
jae
in
mov
jne
lock
pop
jb
and
mov
inc
call
subl
or
sbb
call
sbb
mov
add
in
push
js
iret
movsb
test
push
data16
pop
mov
mov
pop
xlat
mov
out
cmp
pop
mov
push
test
dec
xlat
pop
sub
hlt
cltd
jp
aas
sub
sub
into
sub
std
outsl
and
fcomps
inc
adc
inc
adc
les
vpandn
xor
in
fdivr
lcall
push
mull
lea
sub
cmc
out
sti
mov
jae
inc
pop
lret
into
cmp
les
ret
dec
push
push
mov
and
fucomip
mov
jg
leave
and
sahf
cmpsl
pop
pushf
jl
ret
loop
movsb
loopne
std
loop
int
mov
mov
fcoms
call
cmc
fbld
mov
cld
adc
loope
mov
notb
mov
add
xchg
push
iret
hlt
jmp
sbb
repz
jecxz
push
in
lea
insl
xor
aam
cmp
cs
call
cld
or
sub
or
mov
addr16
inc
addr16
sub
pop
repz
xor
mov
outsl
rorb
popf
adc
sbb
jnp
sub
xchg
int
popf
lods
loope
and
push
dec
and
rolb
pop
jg
out
arpl
popa
jb
push
pop
sbb
pop
fldcw
cmpb
fcomps
loop
les
pop
out
loope
mov
scas
push
stc
std
cmp
rclb
test
pop
mov
roll
adc
jp
orl
add
pop
dec
inc
pusha
lock
lcall
inc
imul
mov
jne
mulps
adc
adc
mov
sbb
dec
push
fnstsw
jns
xchg
xchg
movsl
in
mov
imull
sbb
div
jne
mov
fbstp
add
mov
es
cmp
adc
repnz
leave
dec
dec
mov
nop
push
sub
add
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
sub
fbstp
sbb
es
mov
scas
in
stos
cmc
test
movsl
lea
ret
mov
mov
repz
inc
repz
or
inc
jecxz
gs
shll
or
push
mov
adc
pop
sub
add
sbb
or
add
add
inc
loop
or
ret
inc
mov
arpl
mov
push
add
jno
nop
dec
push
dec
fnstcw
dec
call
xchg
in
das
cs
mov
fiadds
addl
jbe
sub
insl
pop
faddl
xchg
jmp
test
push
cltd
imul
into
pop
popf
stc
sub
je
and
xchg
loope,pt
cld
insb
lods
test
jecxz
or
lods
sarb
xor
sub
mulb
aad
inc
pushf
out
adc
cli
stc
dec
out
push
dec
sbb
fistl
outsl
jns
daa
int
int
aad
xor
and
sti
jb
inc
mov
mov
lock
lea
filds
pop
repnz
jo
push
cs
mov
bswap
dec
daa
mov
jbe
inc
int3
or
push
imul
std
or
cmp
sarb
and
push
faddl
lods
and
ficompl
test
sub
adc
mov
cmp
aaa
mov
out
inc
push
adc
dec
and
jge
push
inc
cmp
or
add
mov
jle
dec
inc
jl
pop
in
add
jb
xorl
outsl
mov
loopne
loopne,pn
push
mov
hlt
cmp
ficoms
in
mov
jle
xchg
inc
adc
or
cmp
repz
mov
pop
ret
cli
leave
adc
pop
or
fwait
mov
cltd
jns
jo
push
mov
shr
rcrb
sbb
sarb
mov
loopne
pop
inc
cs
mov
push
cs
sub
add
cmp
fnstenv
xchg
sbb
sbb
daa
stos
ret
shrb
mov
es
outsb
fcoms
clc
mov
dec
popf
cmp
sbb
sub
jp
mov
jbe
jl
jle
pushf
roll
stc
rolb
psubb
push
xor
push
or
add
aaa
mov
js
cwtl
rcr
scas
scas
dec
mov
outsb
mov
je
dec
pop
clc
fidivs
dec
mov
mov
cmp
aad
adc
jb
cli
push
ja
aam
xchg
or
mov
and
popf
scas
int3
loope
jl
pop
mov
fdivrs
mov
out
jle
jmp
dec
testl
dec
les
ja
fldenv
jmp
and
inc
outsb
mov
cmpsl
adc
xchg
add
ja
xchg
fildll
pop
int3
gs
loopne
xor
adc
mov
fstpl
push
jecxz
cmc
out
xchg
xor
lds
js
ret
push
data16
push
jno
rcll
push
rorl
adc
push
sbbl
out
addr16
or
inc
pop
xchg
dec
pop
or
cmp
xlat
sub
test
ja
mov
adc
arpl
mov
sbb
int
cmpsb
adc
roll
mov
jmp
psubd
scas
dec
rolb
addb
xchg
sub
out
ljmp
scas
push
sbb
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
es
movsl
jmp
sub
lods
push
mov
and
cmp
mov
push
dec
lods
out
in
inc
mov
shlb
rcll
rcr
push
mov
inc
adc
cltd
orl
push
pop
pop
xchg
loop
mov
stos
shlb
sbb
mov
sub
subb
in
icebp
mov
cmp
out
mov
fs
sbb
stc
xor
stos
xor
popa
cmp
pop
stos
pushf
lods
mov
js
rcrb
out
push
test
lea
sbb
jbe
leave
ret
int
movsb
orl
sbb
in
mov
fcompl
cmp
jno
arpl
inc
mov
add
push
adc
xchg
cmp
adc
fdiv
fisttpl
pop
lds
mov
ret
fldcw
mov
loope
rcrb
adc
sub
add
jb
aaa
iret
push
and
cmp
test
jmp
mov
pop
jae
cmp
movl
cltd
sbb
pop
fs
test
loope
sub
scas
es
popf
jg
sub
call
lret
insb
jae
rcll
mov
lahf
ds
sub
mov
jl
inc
add
int3
push
sub
in
sti
imul
js
push
repnz
adc
add
int3
jns
push
loopne
mov
stos
sti
ret
or
sub
clc
shl
aaa
mov
popa
lahf
orb
pushf
cmp
push
add
jnp
adc
stos
cmp
mov
pop
dec
sub
sarb
inc
sub
repnz
add
out
xchg
push
sarb
shll
cmp
js
mov
sti
pop
sbb
lcall
cltd
mov
lods
insb
inc
jb
jbe
not
jae
lgs
xchg
fmuls
ds
fidivl
pop
lock
sbb
scas
test
inc
cmp
sub
jnp
popa
mov
xor
jns
outsl
mov
shll
push
insl
jmp
aaa
cwtl
mov
lods
mov
cli
or
lds
jnp
jge
mov
mov
bound
ds
xchg
sbb
jge
xchg
cmp
sbb
mov
xchg
jmp
and
int
stos
fldenv
roll
cmpsl
es
into
lcall
mov
jge
int
xchg
test
loope
mov
nop
push
jae
popf
mov
mov
cmc
arpl
movsb
mov
test
sbb
jp
jl
in
rcl
orb
outsl
adc
jecxz
xchg
pop
mov
adc
mov
jae
mov
jl
mov
mov
dec
push
push
es
aas
into
lret
sub
cli
push
ror
xchg
sbb
sahf
std
sub
push
cwtl
push
sub
and
jae
out
stos
add
xor
mov
scas
inc
popf
mov
adc
pusha
pushf
jo
cmp
pop
sub
in
out
mov
pop
test
push
call
mov
fwait
bound
jbe
cmpsb
or
loope
dec
mov
mov
iret
sub
jb
std
pop
sbb
sahf
hlt
pop
loope
sahf
in
sbb
mov
add
mov
mov
dec
int3
popf
int3
mov
testb
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
stos
mov
sbb
sahf
adc
sbb
or
mov
pop
lcall
or
cwtl
push
or
mov
hlt
in
lahf
int3
cmp
insb
fstpl
idivl
xlat
pop
loop
push
mov
inc
cmpsb
or
popa
xor
sub
adc
sbb
jo
hlt
les
or
orl
push
aas
cmp
mov
mov
jnp
mov
icebp
adcb
pushf
inc
inc
aas
movsl
das
push
leave
mov
test
dec
jge
mov
sti
andb
mov
bound
call
call
adc
xchg
mov
cmp
mov
lock
push
ja
adc
dec
or
adc
clc
pop
and
test
xchg
adc
movsl
push
clc
jp
and
fwait
lock
cmp
inc
mov
sub
xchg
sbbl
jae
loop
pop
fs
outsb
aam
sbb
push
sub
mov
mov
out
in
pop
hlt
add
ret
stos
les
push
fsubrp
daa
gs
push
cld
in
int
adc
test
jp
shrl
xchg
jle
inc
and
jbe
xor
inc
sub
mov
cltd
push
rcrl
outsl
sub
mov
adcb
pop
xor
sub
push
jo
lahf
outsl
dec
or
cmpl
loop
push
cs
dec
jne
push
jl
mov
testb
aam
mov
jb,pn
dec
push
adc
jmp
cli
dec
sbb
aad
movsl
push
xor
jbe,pn
gs
or
loope
or
push
add
cmpsb
xchg
dec
pop
mov
adc
pushf
in
negl
std
push
imul
je
mov
inc
lahf
ret
mov
incl
cltd
jbe
sbb
insl
xchg
bound
dec
clc
and
fldcw
mov
mov
sbb
xor
xor
xchg
xor
js
push
test
jns
lcall
add
adc
cmpsb
mov
lcall
xor
ja
cld
xor
cmp
hlt
pusha
arpl
loope
cmpsb
jge
popa
ds
sub
fs
xor
add
adc
push
jp
repnz
inc
add
adc
insl
mov
add
icebp
stc
adc
jne
movsl
inc
repz
sbb
icebp
stos
cmpsb
fwait
push
mov
loope
mov
cmp
scas
shl
xor
cmpsb
sub
ljmp
nop
dec
jnp
popa
xchg
push
clc
lds
daa
outsl
jae
test
jle
lock
jmp
fidivl
sahf
adc
inc
jo
cmp
sbb
dec
inc
dec
or
pusha
inc
mov
call
pusha
in
mov
cmpsb
pop
xor
pop
adc
push
cmp
in
or
jnp
psadbw
pop
inc
dec
stos
rolb
and
fdivs
inc
sbb
push
mov
jae
loopne
xor
out
rorb
and
test
push
jne
xor
cmpsl
cmp
mov
inc
cmc
jg
and
sub
popa
dec
js
arpl
xor
les
outsl
lods
sub
fsubrs
pop
inc
loopne
xor
ss
mov
mov
das
popf
xorps
imul
sbb
scas
pushf
or
mov
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
add
sbb
sahf
adc
sbb
mov
jmp
inc
add
mov
in
mov
push
les
add
push
jmp
cmpsb
push
mov
out
outsl
stos
inc
out
shll
add
xchg
aad
shrb
outsl
cmp
sbb
pop
adc
add
nop
or
add
adc
jbe
sbb
adc
or
or
cwtl
pushf
sub
lock
dec
outsb
les
xchg
fwait
cmpl
loopne
jl
in
xor
pop
call
leave
mov
xor
lret
xor
sub
jne
imul
mov
je
call
fcmovb
push
cs
ja
xchg
call
ret
std
jecxz
push
test
outsb
push
or
mov
sets
adc
inc
xor
dec
mov
pop
push
fwait
push
xchg
jb
jmp
cli
pop
aaa
stos
jo
cli
jl
sbb
or
push
xchg
sub
lock
sub
outsb
call
cmp
sarl
cs
dec
push
repnz
mov
pop
or
and
bound
xchg
push
mov
addr16
cmp
and
and
xchg
loop
add
or
xchg
daa
fwait
out
sub
sub
cmp
inc
aad
dec
int3
lcall
add
sbb
pop
mov
test
jno
xor
imul
lock
xlat
dec
xchg
pop
arpl
jno
movsb
or
push
stos
pop
pop
aam
das
push
iret
jg
push
popa
cmp
mov
lcall
jecxz
cmc
es
outsl
insb
inc
inc
clc
dec
adc
or
jg
mov
loopne
mov
and
sbb
xorl
or
cmp
and
lahf
pop
mov
in
hlt
xchg
and
ss
inc
out
rcll
mov
xlat
aad
repz
sbb
sbb
xchg
xchg
lods
call
sub
mov
push
shl
ss
pushf
out
js
xor
rcll
and
jbe
sub
in
jl
mov
mov
inc
stos
fcomps
lods
add
jl
sahf
inc
repnz
mov
mov
call
es
push
in
sub
inc
fcmovnbe
addr16
inc
pushw
xor
pushf
pop
dec
out
rol
push
pop
jg
jp
mov
arpl
into
and
adc
pop
cmp
pop
in
das
lea
ljmp
pop
push
jl
sbb
pop
rorb
xchg
cld
add
jmp
jp
mov
sahf
or
cmp
jo
icebp
pop
mov
out
lds
pop
mov
mov
adc
mov
repnz
je
mov
mov
fidivrl
decb
mov
inc
xor
push
mov
and
mov
jg
aaa
pop
jae
xchg
ret
jnp
inc
mov
pop
pop
xor
adc
dec
test
jg
sbb
fnstsw
cmp
pop
mov
add
or
push
pop
ficoml
mov
jmp
add
ss
ljmp
fcoml
mov
divl
jae
jecxz
rcrl
or
pop
mov
cmp
loop
sbb
rorb
lock
xor
out
mov
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
cwtl
push
jle
in
sbb
stc
dec
xchg
movsl
test
shrb
push
or
ja
xchg
dec
push
mov
js
mov
adc
pop
or
cmp
add
out
mov
add
jbe
inc
dec
in
hlt
test
lea
jl
inc
pop
es
cld
filds
daa
mov
xchg
mov
in
lret
xchg
xchg
out
jne
mov
call
outsl
mov
mov
xchg
arpl
or
fistps
jecxz
loop
xor
orl
popa
jle
ja
fcomip
add
and
cwtl
xor
mov
inc
fbld
mov
pop
mov
xchg
pop
mov
cmc
jb
fstpt
push
push
lds
in
cmp
fimuls
call
daa
in
pop
jl
or
jnp
leave
repz
adc
int
cmp
mov
mov
mov
clc
jbe
mov
test
mov
jbe
mov
nop
loopne
inc
or
sbb
jecxz
adc
loope
cmpsb
mov
mov
sbb
mov
pop
xor
jecxz
sub
cmp
gs
push
push
imul
ret
sub
or
pushf
push
sub
ljmp
out
cmp
aaa
sub
hlt
movb
jbe
insl
xor
cli
jle
pop
mov
popf
lock
sub
call
push
dec
testl
cmp
push
stos
test
or
sti
fstp
and
jmp
stc
imul
inc
jge
push
and
adc
xchg
jo
filds
push
jne
pop
adc
inc
mov
pop
add
xchg
mov
movsl
xor
mov
aaa
aam
jp
fisubs
sbb
iret
in
jnp
cmpsb
push
jg
aam
ret
add
cmc
pop
jnp
jge
cmc
xchg
add
test
sub
inc
add
xor
rorl
pop
loopne
adc
and
xchg
dec
push
stc
pop
add
daa
es
push
jl
out
or
xchg
mov
test
pop
icebp
cmova
add
nop
fdecstp
xchg
shlb
and
sti
lods
pop
flds
inc
repnz
and
mov
or
stc
sbb
in
mov
adc
dec
leave
jo
ret
mov
pop
push
or
je
add
inc
xor
or
ds
mov
outsl
les
subl
or
int
femms
leave
in
cmp
push
xchg
pop
sub
dec
test
out
push
lock
xchg
lret
xchg
test
adc
cs
jno
movsb
pop
xchg
hlt
dec
inc
ds
incb
cwtl
xchg
aaa
and
mov
dec
negl
and
or
fwait
cwtl
mov
lds
cmpsl
sbb
mov
sbb
cmpsl
dec
mov
adc
aad
es
pmulhw
jbe
xlat
sahf
lds
push
push
lahf
pop
inc
mov
jmp
addr16
mov
jae
mov
jmp
movsb
insl
gs
dec
pop
repz
mov
incb
push
lods
imul
and
cmp
btcl
xor
cmp
out
scas
cmp
fisttps
jae
inc
add
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
mov
loopne
call
add
inc
push
mov
inc
out
cld
fcompl
notb
and
loope
xlat
jp
adc
aad
fmul
pusha
out
leave
in
adcl
loop,pn
cmpsb
jb
mov
pop
dec
xchg
pop
rclb
xchg
addl
jo
lds
enter
mov
stc
push
clc
pop
jo
clc
adc
adc
push
lahf
mov
shlb
out
faddl
outsl
out
dec
push
mov
loopne
daa
cmp
inc
inc
jmp
addr16
pop
mov
or
lret
loopne
out
or
repz
mov
or
adc
push
add
lret
mov
jbe
addr16
insl
push
repnz
cmpsb
xlat
out
into
sti
push
iret
and
es
push
sahf
ret
jns
xchg
inc
or
add
lcall
mov
sub
fstl
ljmp
das
push
mov
cmp
in
xchg
pop
movsl
icebp
fistl
or
fists
dec
sbb
ret
add
rcr
adc
cmpsb
pop
mov
mov
ljmp
lret
or
repz
adc
xchg
mov
mov
sarb
mov
sub
sbb
sti
push
shlb
cmp
jmp
sarl
subb
xor
sub
icebp
mov
mov
shr
jmp
sub
add
or
jecxz
jnp
jno
pop
pop
cwtl
sbb
mov
adc
arpl
movsb
in
xchg
inc
movsb
inc
jmp
sbb
clc
loope
sub
iret
cmpsb
or
jo
and
cwtl
fcmovnbe
ss
mov
inc
nop
mov
adcb
push
leave
add
jle
and
cmp
pop
popa
lea
cmp
cmp
div
loopne
ds
add
ret
jno
data16
add
shll
dec
adc
mov
fmull
out
test
in
pop
adc
std
jae
jp
repz
and
xor
iret
xor
jmp
jbe
or
sbb
jnp
insb
mov
sbb
push
mov
pop
pushf
adc
push
popa
icebp
push
mov
shl
scas
xor
cli
inc
data16
ret
pop
js
or
xor
xchg
dec
test
pusha
jge
movsl
daa
xchg
das
not
xchg
enter
ja
stos
pop
sub
xchg
sbb
sub
push
or
out
push
test
dec
cli
in
int3
ret
sub
adc
int3
cmp
mov
sbb
sub
jg
dec
xor
mov
xor
add
pavgw
cmp
mov
in
dec
adc
aad
imul
xchg
jbe
fmull
idivb
daa
xchg
sub
add
add
mov
sti
gs
divb
jg
out
pusha
into
call
sub
mov
in
vpunpcklbw
mov
xchg
mov
or
outsb
jae
cli
loop
lods
js
icebp
jbe
loopne
lcall
popa
stc
loop
inc
div
mov
mov
cmp
loop
scas
leave
sub
lea
clc
or
call
bound
aaa
ret
mov
mov
nop
and
pop
add
in
sub
push
push
xchg
xor
daa
push
fs
leave
or
mov
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
pop
notb
sbb
or
repnz
xchg
sub
test
rclb
lea
xchg
loopne
mov
test
mov
bound
dec
loope
mov
in
and
ljmp
and
push
sub
inc
pop
test
jg
pop
push
lds
sbb
leave
cmp
sub
push
pop
mov
ficompl
mov
jo
xchg
pop
sbb
aaa
je
movsb
mov
push
xchg
mov
add
sub
sub
int3
jecxz
dec
in
popa
adc
jmp
fisttpll
push
loop
fs
in
and
lea
repnz
icebp
fidivrl
mov
inc
sbb
mov
mov
inc
aaa
xchg
insb
fsubl
scas
imul
dec
pushf
loope
adc
lea
push
adc
in
fsubrs
sub
cmp
loope
out
xchg
sahf
mov
adc
in
int3
mov
out
sahf
in
movsl
pop
mov
subl
aas
sahf
stc
add
xchg
sbb
mov
mov
inc
fnstenv
push
jnp
fmull
pop
mov
iret
mov
lcall
pushf
mov
xchg
pop
in
or
lea
or
pop
xlat
xorl
pop
je
fisttps
movsb
aam
fistps
sub
jo
push
sahf
repnz
adc
cmp
pop
mov
and
mov
inc
or
sbb
fdivp
ds
stos
mov
test
cli
add
sub
lahf
imul
xlat
jb
in
xor
push
inc
pushl
imul
dec
pop
xor
jbe
mov
push
jae
add
mov
hlt
imul
add
int3
je
cmpsl
fsts
jne
jae
outsl
or
out
fidivs
jecxz
xchg
jle
sar
mov
xlat
or
inc
mov
fwait
mov
adc
outsl
pop
test
fldl
cmp
xchg
in
xor
fisubl
add
inc
imul
cltd
mov
mov
jnp
movd
mov
push
roll
lds
inc
fs
ljmp
ds
mov
in
testb
adc
pop
xor
movl
lret
mov
dec
or
sub
ja
or
jbe
andb
mov
sub
xchg
xlat
frstor
inc
jne
cmc
sbb
mov
xlat
outsb
mov
repz
clc
hlt
enter
sbb
mov
mov
ljmp
lock
adc
dec
cmpsl
inc
cwtl
xchg
cmc
sub
inc
xchg
push
scas
cmp
cwtl
push
mov
cs
andb
xor
fmuls
xor
stc
lods
mov
adc
mov
ljmp
add
pusha
sub
imul
cmpsl
gs
sub
jae
xchg
mov
jmp
fwait
cmp
bound
out
push
ret
test
jecxz
dec
movb
cmp
ljmp
add
push
test
ljmp
mov
lret
enter
or
jb
pop
cmp
mov
pop
sbb
out
aam
inc
les
cmc
adc
cmp
add
mov
enter
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
mov
iret
sbb
sahf
adc
sbb
imul
pushf
push
sub
xor
xorb
lods
pop
inc
cmp
aaa
jae
mov
mov
jmp
repz
movsl
stc
push
in
ret
cmp
push
mov
pop
test
sbb
pop
xchg
aas
ds
fdivs
lds
testl
popa
push
or
sub
cmovs
sub
xor
dec
jle
and
out
jb
cltd
outsl
out
out
mov
sahf
pop
test
shlb
popf
jno
ss
cs
mov
and
divl
xor
mov
test
add
xchg
mov
push
aad
lds
aam
sti
into
loop
xor
mov
push
sub
push
enter
cmp
mov
mov
test
insl
call
in
out
and
hlt
mov
insl
push
xchg
subl
or
test
ret
xchg
dec
ja
xor
imul
mov
rcr
pop
insl
push
xchg
mov
lock
pusha
push
dec
mov
cmp
inc
mov
cmp
out
movsl
jb
cli
cmp
cmpsb
jge
mov
pop
and
pop
test
mov
fwait
test
xorl
sub
and
dec
jne
and
xchg
inc
or
outsb
scas
hlt
ja
dec
es
iret
mov
pop
call
rcll
or
pop
adc
lods
mov
xor
mov
and
cmp
fdiv
add
in
bound
xlat
dec
dec
pop
ds
dec
hlt
arpl
addr16
dec
or
stc
popa
and
popa
push
sub
ret
or
test
test
xchg
pop
repz
rolb
lock
lret
and
cmc
lods
xchg
mov
fsubs
fsubrl
pop
xor
add
idivb
push
mov
push
mov
pop
ja
pop
rorl
outsl
int3
rorb
jb
sbb
jb
jb
das
scas
mov
push
adc
rclb
xchg
push
sub
cmp
mov
jl
pop
mov
dec
cld
mov
stc
rolb
cli
fwait
mov
pusha
icebp
leave
jbe
adc
std
xchg
sub
jae
lret
mov
ds
or
xchg
or
push
shrb
mov
adc
or
sub
js
loope
push
jo
nop
push
ljmp
fsubl
mov
add
arpl
jmp
in
mov
or
sbb
pop
lods
out
sbb
inc
cltd
loop
push
or
sbb
mov
cmc
ret
mov
xchg
jbe
aam
dec
divb
mov
imul
mov
inc
dec
cmpsl
cmp
sbb
movsb
add
cli
and
lret
xor
popa
mov
insb
add
jnp
mov
aad
inc
cmp
outsl
inc
mov
xor
call
ret
sbb
jbe
push
mov
lods
sub
adc
sub
xchg
dec
call
idivl
stos
sbb
or
add
pop
shrb
imul
test
cltd
cwtl
cmp
push
lock
ror
cmp
punpckhdq
pop
xchg
loop
sub
jbe
dec
and
fwait
jg
mov
and
push
test
shrd
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
jne
sub
jbe
cmp
loope
rol
shlb
push
sub
fcmove
sub
push
dec
rcr
repnz
shlb
fnstsw
popa
sahf
xor
imul
pop
adc
fwait
mov
andl
rcll
ret
mov
inc
sub
mov
enter
aam
and
sub
es
orb
jne
jnp
mov
sahf
lods
sbb
stos
push
mov
sbb
inc
pusha
mov
aad
jns
add
inc
jns
sub
and
cmpb
sub
and
push
or
or
jno
in
push
cmp
mov
dec
mov
movsl
nop
and
repz
in
mov
decb
mov
mov
sub
pop
decb
mov
inc
and
inc
or
adc
cmp
lret
fucom
and
cli
lret
test
sub
lea
or
fisubl
lods
fdivrp
mov
mov
cmc
gs
adc
shll
push
daa
cmp
dec
les
add
ja
repz
fdivs
rorb
notb
adc
xchg
gs
pop
sub
imul
adc
cmp
fcompp
mov
cmp
aaa
and
mov
xchg
cwtl
test
inc
and
sbb
mov
dec
pusha
mov
add
shr
mov
loopne
stos
jbe
xchg
lahf
and
cs
out
nop
sbb
pop
mov
sub
cmp
xchg
fisttps
add
dec
scas
cltd
test
mov
test
pop
pop
leave
jg
xor
in
pop
and
jmp
mov
pop
mov
push
fstl
aam
xchg
jmp
addr16
dec
inc
das
popf
cmpsl
cmp
push
pop
lahf
incb
pop
mov
or
iret
js
rcrb
mov
sbb
je
repnz
push
arpl
stos
mov
push
inc
fdivr
repnz
jb
loop
insb
xor
mov
pop
nop
popf
fwait
push
js
sbb
add
xor
xor
popa
mov
pop
jg
sahf
dec
test
sub
or
cmp
jne
sbb
ret
xchg
cmc
cmc
popf
testb
aas
shlb
cmp
mov
sub
stos
mov
mov
cli
dec
or
jg
das
je
ja
nop
or
gs
xchg
mov
addl
mov
fisubl
movsb
mov
xor
ljmp
add
or
shr
js
lahf
cmp
push
hlt
pop
leave
test
push
int3
mov
mov
cli
mov
push
sbb
lock
repz
xchg
popa
adc
addr16
cmpl
test
nop
into
movsl
orb
ret
jmp
mov
pop
sub
lret
movsl
lgs
mov
outsl
das
es
lcall
lcall
sub
test
mov
lret
gs
xchg
aaa
adc
addr16
cmpsb
and
ret
mov
jns
sbb
fwait
nop
jg
into
push
mov
xchg
mov
inc
rsqrtps
repnz
sub
fimuls
and
fcoms
mov
pop
lret
data16
sub
xor
dec
lods
mov
push
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
push
dec
inc
push
rcrl
sahf
adc
sbb
fwait
add
push
pop
jns
les
pusha
pop
in
or
mov
adc
rorl
dec
push
inc
lret
pop
mov
loope
xor
loopne
outsb
jns
lods
pushf
mov
imul
daa
sub
pop
pop
test
lret
popf
mov
sbb
in
jl
loope
fstl
cmp
xor
cmpsl
jle
lds
ljmp
xor
test
lret
xor
mov
cli
add
mov
mov
dec
fidivl
mov
cmp
addr16
jae
jecxz
add
mov
mov
mov
add
je
jne
and
call
sti
add
imul
sbb
cli
data16
mov
mov
aaa
out
xchg
adc
aas
jbe
dec
arpl
fwait
mov
add
xchg
pop
ret
inc
jp
jecxz
push
jae
dec
mov
loope
push
sbb
adc
ficomps
insl
clc
mov
popa
arpl
inc
mov
jecxz
mov
or
jae
push
push
pop
imul
xchg
add
push
add
push
das
dec
out
xchg
ja
cmpl
cmc
cld
leave
popf
and
pushf
arpl
nop
orb
mov
fst
mov
shufps
xor
xchg
jb
jb
sub
or
stos
push
movsb
xlat
xchg
pop
cld
mov
jo
mov
xchg
push
int3
xor
outsl
mov
pop
or
mov
sub
outsl
sbb
and
mov
movsl
sahf
sahf
jp
shr
inc
cwtl
push
ret
leave
xchg
aam
sbbl
int
mov
adc
mov
mov
pop
mov
dec
and
ljmpw
out
sbb
fnstenv
jge
mov
inc
push
mov
lahf
leave
push
int
jne
or
dec
in
ljmp
out
cwtl
dec
jmp
dec
pop
and
enter
mov
cmp
movsb
test
mov
sbb
or
dec
nop
aad
sahf
pop
add
or
xor
js
or
rol
mov
cmc
clc
adc
movsb
jbe
pop
rorb
pop
and
int3
sub
nop
insb
lods
stos
out
push
ret
bound
int
jne
push
sub
dec
sub
hlt
in
repnz
or
cli
lods
push
sbb
mov
cmpsl
fwait
pop
out
dec
xchg
fwait
orb
lods
push
repz
sub
sbb
xchg
xchg
jns
sbb
push
jae
idivb
add
or
xchg
js
jne
or
lret
push
out
mov
add
jg
outsl
sbb
sub
or
aas
xor
inc
cmp
fcom
push
int3
mov
int3
jno
fstps
xchg
leave
cltd
mov
push
cmp
fcomi
lods
mov
rcl
test
loop
scas
std
cmp
cli
iret
xor
push
cmp
or
jnp
push
xchg
and
les
cltd
or
stos
cmp
cmpsl
mov
fsubl
jb
pop
xor
das
cmp
mulb
pushf
movl
int
mov
mov
in
dec
std
inc
mov
mov
out
leave
sub
rcr
outsl
mov
fildll
sbb
negb
icebp
pop
sub
ja
std
fsts
shrl
cmp
pop
mov
pop
lea
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
dec
test
sbb
stos
iret
fsubp
leave
pop
lock
xor
xor
bound
sti
data16
mov
int3
xor
pop
aad
mov
xchg
shll
cmp
stos
mov
daa
push
lods
or
ffreep
movl
mov
imul
pop
imul
mov
lods
pop
popa
lds
aaa
xor
adc
ljmp
and
and
cs
mov
xchg
xchg
sbb
nop
lea
out
mov
mov
cmp
sbbl
scas
cmp
add
jg
dec
aam
imul
dec
mov
icebp
xor
ds
daa
inc
mov
jno
xchg
mov
mov
pop
adc
xchg
nop
or
mov
mov
scas
push
mov
mov
pop
sbb
int3
sbb
fbstp
cmp
fwait
dec
xchg
insl
imul
lret
pop
addl
fld
sub
inc
jae
adc
sbb
pcmpeqw
ficomps
pop
js
jb
loopne
mov
fildl
mov
int3
inc
loop
mov
lahf
lcall
daa
and
addr16
ss
cmp
add
adc
mov
add
cs
mov
add
stos
lret
clc
mov
xor
imul
outsb
iret
xchg
inc
out
push
sbb
and
arpl
fisttpl
push
dec
icebp
jle
insl
es
lcall
push
xchg
mov
push
jb
push
rcl
xor
sub
xor
imul
push
jno
mov
jge
mov
data16
inc
insl
adc
repz
mov
pop
push
fdivl
cmp
or
push
mov
fsubs
or
jno
push
int
cmp
iret
cltd
and
push
es
scas
addr16
movswl
aaa
mov
out
dec
mov
sbb
jo
mov
enter
mov
inc
shlb
push
push
push
mov
mov
jne,pt
mov
cmpsl
bound
xchg
or
or
or
lahf
mov
and
mov
leave
ds
test
les
aam
pop
movsb
out
adc
loope
cmp
jmp
mov
fs
test
cmp
cmp
mov
inc
mov
out
ljmp
mov
cmc
fdivrl
loopne
mov
out
pop
outsb
mov
and
mov
bound
mov
popa
cmp
rcr
jno
stos
cmpsl
inc
mov
mov
into
add
pop
mov
fdivr
popa
outsl
shrb
inc
add
mov
sbb
push
cwtl
dec
imul
dec
add
jne
mov
dec
notb
lock
movsb
test
ret
sub
pop
pushf
mov
rol
sbb
in
out
addr16
and
or
xor
aaa
out
aad
rcll
xchg
leave
loopne
gs
movsb
test
rcr
mov
jb
push
xlat
test
test
inc
xlat
sbbl
sti
jp
push
jmp
push
push
cltd
pop
mov
ds
or
mov
insb
ret
adc
dec
std
cld
loopne
inc
fists
test
je
sahf
xor
inc
test
int
inc
aaa
test
mov
loop
out
sbbl
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
ja
mov
sahf
adc
sbb
push
dec
jae
pop
xchg
out
xor
fldt
inc
je
bound
adc
xlat
sbb
iret
repz
pop
aaa
fwait
lods
push
inc
arpl
insl
and
jmp
aas
pop
das
lret
dec
or
jne
pop
iret
loop
xlat
jle
cs
daa
mov
mov
fs
aam
insb
fwait
mov
pop
insl
push
bound
lea
bound
stos
je
jmp
push
outsl
inc
mov
icebp
inc
push
cmp
adc
mov
pusha
mov
stc
adc
hlt
xchg
sub
pop
frstor
dec
mov
cmpsl
cmp
mov
jge
scas
lcall
xor
mov
xorb
and
aas
call
mov
test
xchg
test
jno
push
insb
mov
adcb
pushf
and
sti
sbb
or
cmpb
stos
or
cmp
in
dec
cmp
or
adc
fildll
or
loopne
jbe
das
pop
and
mov
mov
repnz
add
push
pop
push
inc
cs
pop
stos
sbb
xor
dec
outsb
pushf
mov
out
jne
mov
xchg
pop
test
push
insb
cmp
aas
scas
gs
movsb
das
adc
nop
xchg
sbb
inc
pop
icebp
add
xchg
mov
mov
sbb
loopne
add
test
es
fimuls
xor
lock
loope
jb
in
xor
leave
inc
fcmovbe
sbb
and
in
add
icebp
push
and
push
mov
xor
dec
cltd
inc
fsts
pop
out
test
scas
orl
ds
ljmp
lock
outsb
xchg
rcrl
push
sahf
aad
pop
xchg
int
inc
js
dec
test
dec
pop
sub
sbb
ret
popf
mov
mov
loope
lods
mov
pop
pop
push
in
jp
inc
cmp
push
out
loopne
repz
xor
mov
js
adc
add
inc
cmp
jge
test
pop
stos
lahf
mov
scas
xor
test
js
and
fidivs
loope
mov
outsb
mov
arpl
sub
fildl
loopne
pop
ja
rcrl
cltd
fwait
xchg
imulb
cwtl
sbb
xchg
fmuls
jnp
gs
pop
dec
imul
adc
pop
xchg
adc
inc
xor
movsl
jno
cmp
mov
test
push
adc
loop
js
stos
rorb
or
daa
and
add
outsl
pop
pop
je
xor
push
test
fiadds
push
aam
mov
int3
dec
fidivrs
adc
dec
loop
or
sbb
and
int3
sbb
push
testb
jge
dec
jp
pusha
xchg
pop
fmuls
sbb
cmpsb
lds
cmp
repz
sub
fisttps
insb
insl
lods
jp
mov
loope
jb
imul
sbb
adc
movsl
stc
repnz
leave
jge
mov
outsb
int3
dec
sbb
and
lret
jmp
cmc
adc
pop
repz
mov
insl
fsubs
mov
and
in
jns
jno
sbb
xor
adc
int
jmp
in
cmp
in
sub
lods
lret
pushf
js
sbb
inc
aam
inc
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
xlat
sbb
sahf
adc
sbb
jmp
push
bound
test
xor
outsb
push
push
hlt
push
rclb
lahf
inc
push
popa
jae
pop
mov
sub
pushf
xchg
shrl
sti
pop
adc
cmp
aas
xchg
fsubs
mov
icebp
fwait
aas
out
add
xchg
fsubr
dec
cmp
orl
ja
adc
movsb
out
lods
push
imul
sbb
and
push
xchg
subl
push
stc
popf
cmp
lret
fs
add
lcall
jg
xchg
js
sbb
ds
das
xchg
mov
or
adc
sbb
cmp
leave
and
pop
sub
xchg
leave
lods
dec
push
dec
cmp
andb
ds
mov
clc
leave
or
shl
xchg
xlat
pushf
or
jmp
inc
xor
jne
jo
xor
std
inc
sbb
jne
nop
lcall
out
cmpsb
fdivrs
loope
sti
in
notb
push
pop
mov
sbb
outsb
xchg
stos
aad
mov
inc
mov
test
jl
fildl
sbb
add
xor
orl
push
inc
inc
insb
sub
xorb
add
lahf
pop
lea
loope
test
pop
sub
xchg
sbb
push
push
daa
lods
pop
xchg
or
lods
and
sub
movl
gs
scas
dec
jne
cmp
mov
cs
and
cld
and
push
rorl
dec
pop
les
aam
jmp
sub
jmp
dec
mov
cli
and
mov
jmp
aad
imul
push
cltd
mov
fwait
lret
adc
xor
and
pop
adc
insl
test
ljmp
rorl
xor
add
pop
add
popa
ljmp
shlb
mull
unpcklps
mov
pop
mov
cwtl
push
push
mov
mov
lahf
lods
push
mov
out
mov
aaa
movzbl
push
push
enter
inc
movsl
cmp
scas
ret
adc
jns
mov
mov
cmp
shr
push
sbb
shlb
loop
shll
or
adc
rcrb
popf
jecxz
jge
mov
popf
std
jle
adc
icebp
cmp
jmp
clc
out
pop
inc
shl
mov
iret
jl
pushf
and
cltd
rcrl
mov
jmp
insl
inc
lcall
pop
sbb
cmp
pop
pop
xchg
fadds
pop
test
mov
and
xor
int
mov
imul
inc
push
fnstenv
insl
push
addr16
dec
sub
mov
js
les
loopne
adc
add
dec
cmp
mov
shl
cmpl
imul
mov
out
fs
xchg
stos
mov
push
mov
and
out
stos
pop
std
int3
add
mov
sbb
or
lret
ret
pop
push
add
js
mov
sti
in
lds
lods
inc
rcll
enter
aad
xlat
xchg
filds
data16
dec
dec
das
clc
ja
lcall
loop
stc
mov
xlat
fidivrl
stos
xor
movsb
repz
push
jg
clc
jp,pn
pop
sub
push
sub
and
stc
xchg
adc
or
jno
iret
inc
sub
mov
pusha
mov
cmp
mov
xchg
dec
jbe
lcall
inc
int3
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
push
dec
fnstcw
adc
sbb
or
aad
icebp
push
imul
jecxz
imul
enter
sbb
iret
std
aaa
lcall
inc
out
adc
jg,pt
jg
call
int
daa
adc
das
jecxz
cmp
xlat
insl
fs
sarl
outsb
movsb
or
adc
add
pop
push
adc
mov
shll
mov
fcmovne
js
arpl
pop
fnstsw
xchg
scas
lret
ja
jo
xchg
ficompl
mov
in
inc
and
in
inc
dec
jp
sbb
jb
jg
mov
pop
dec
cs
dec
inc
int3
xor
dec
test
lahf
lods
lods
sbb
lds
sub
fcoml
or
cld
jmp
xchg
in
mov
aad
mov
jle
xchg
cmp
jb
jno
mov
and
push
mov
jbe
and
xchg
int3
add
add
mov
add
mov
or
fwait
mov
leave
xor
push
out
in
mov
mov
stos
mov
add
mov
std
iret
aas
aam
syscall
push
xlat
mov
ret
and
adc
faddl
mov
push
xchg
inc
lcall
mov
idivl
ret
cld
dec
dec
ror
test
xor
and
das
fbld
sbb
aas
adc
aam
adc
fcmovb
and
or
add
inc
inc
push
out
mov
fwait
lahf
add
or
or
sbb
and
fsubl
enter
inc
filds
sub
sbb
mov
mov
mov
movsb
out
pushf
mov
push
nop
scas
or
ja
into
mull
ja
pop
cmc
negl
sub
mov
jo
adcb
inc
loope
inc
mov
mov
pop
jae
popf
xor
xchg
xchg
fsts
in
out
lcall
mov
ror
dec
mov
sub
jne
dec
movsl
cmpsb
ja
push
in
push
and
xchg
add
rcll
cmp
pop
ret
out
out
xor
data16
push
push
jno
adc
cmc
sub
inc
add
sti
sbb
repnz
jno
notb
mov
mov
push
lds
cmp
test
test
ds
mov
fsubl
mov
fnsave
sbb
sub
push
dec
jnp
cltd
sub
stos
xchg
test
sbb
js
das
lea
add
pop
cmc
jne
push
mov
xor
mov
jbe
dec
push
push
mov
divb
icebp
loope
and
add
push
jo
gs
mov
push
test
sti
dec
xchg
pop
jg
xor
or
lods
arpl
scas
pop
pop
movsb
xor
inc
nop
lods
mov
mov
jmp
ss
lds
inc
mov
add
and
push
and
call
icebp
data16
pop
adc
imull
cli
lret
mov
mov
xlat
fsubrs
dec
std
in
mov
cmp
inc
push
push
sub
cwtl
sub
xchg
lahf
dec
dec
cmp
jo
je
jecxz
mov
data16
push
adc
dec
adc
loop
test
arpl
mov
dec
scas
adc
xorl
imulb
stos
dec
in
in
sub
sub
fistpl
sti
dec
pop
cwtl
jmp
subb
fadds
jno
enter
addl
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
mov
es
mov
xchg
out
mov
and
pop
push
mov
add
stos
ss
dec
cmpsl
loopne
xor
popa
adc
push
pop
sti
jnp
sub
or
jbe
adc
insb
push
out
lahf
xchg
rclb
or
gs
jl
imul
xor
sbb
push
add
pextrw
lods
je
ljmp
popf
outsl
mov
movsl
cmp
fdivl
mov
ljmp
jo
fidivrl
ljmp
ret
ljmp
loope
inc
mov
adc
add
add
xchg
adc
add
sub
mov
imulb
jecxz
cli
sarl
sub
je
sub
push
and
leave
enter
dec
add
push
cs
mov
mov
out
pop
pop
jns
and
cmp
aad
adc
mov
push
adc
aaa
dec
or
decl
scas
jecxz
in
int3
mov
and
cmp
and
iret
pop
outsb
fadd
push
ss
jbe
sahf
or
xor
jecxz
mov
fisubrl
lods
sti
xor
inc
pop
mov
dec
adc
sbb
or
shrb
stc
sbb
inc
fs
gs
push
ja
into
ljmp
xor
add
inc
ljmp
lret
dec
push
stc
daa
aaa
jbe
lea
sti
inc
xor
or
cmp
gs
sahf
mov
addr16
sub
dec
lods
jb
and
insb
icebp
dec
push
mov
sbb
xor
xchg
in
cmp
sub
mov
mov
test
test
push
repnz
adc
mov
xlat
lods
pop
pop
inc
aam
push
or
pop
test
pop
jge
insl
cli
cmc
les
sub
xchg
lret
and
push
mov
add
xor
sahf
adc
aas
imul
mov
push
jne
lock
sub
out
fnstenv
push
pop
lahf
mov
bound
xchg
push
and
sbb
mov
mov
push
xchg
mov
dec
mov
inc
xchg
adc
xor
or
push
mov
imulb
push
pop
mov
dec
mov
daa
dec
dec
mov
inc
std
int
test
xchg
scas
clc
loop
nop
adc
fstpt
pop
add
js
sub
mov
push
jo
jns
sub
call
rol
adc
sbb
and
and
mov
pop
jle
dec
push
dec
push
les
sub
pop
cmpsb
xchg
test
sub
test
pusha
push
scas
push
cmp
adc
jae
xor
out
imul
add
mov
add
adc
sbb
rcrb
lret
sub
sub
fimuls
shl
pop
in
pusha
jg
aas
insl
xor
jb
repz
jo
or
push
and
sub
xor
data16
dec
ljmp
sub
jle
sub
mov
jg
pusha
mov
mov
mov
fbstp
rclb
adc
push
or
insl
ja
xor
test
jg
xchg
xchg
push
cmp
pop
idivl
sub
mov
add
cmp
push
mov
dec
and
rolb
jmp
dec
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
es
xor
xor
popl
mov
fs
test
cmpsb
mov
dec
mov
xor
mov
push
jae
dec
insl
sarb
rcll
out
ja
mov
cmp
nop
lock
outsb
cmp
in
adc
jg
shll
adc
enter
xchg
sahf
cmpsb
and
test
sbb
test
adc
and
loop
pushl
fwait
sbb
loopne
das
jmp
pop
ret
sub
sbb
mov
lock
push
insb
dec
add
mov
mov
push
shrb
sbbl
ret
dec
fdivl
loop
shr
stc
pop
push
cmp
nop
cmpsl
pop
mov
aas
pop
sbb
aam
xlat
sub
je
sbb
push
insb
pop
mov
fstp
mov
jecxz
sti
lahf
sbb
iret
push
mov
es
jne
and
hlt
xchg
loopne
lcall
jmp
xor
jecxz
jb
rolb
int3
jno,pt
xchg
pushf
dec
gs
lock
dec
lds
divl
imul
in
jb
pop
adc
adc
mov
xchg
pusha
sbb
pop
and
adc
lea
sbb
cld
stc
pop
cs
testl
aas
inc
aaa
addb
cmc
mov
push
ds
frstor
adc
out
inc
lss
jg
cmp
cwtl
mov
add
sbb
inc
lahf
push
enter
mov
xlat
dec
les
pop
xchg
stos
jns
add
bound
test
sub
ljmp
fistpll
cmp
mov
dec
inc
push
insl
gs
ret
push
test
cli
jge
pop
loope
jo
mov
dec
mov
adc
mov
fstpl
jg
pop
jmp
popa
inc
ror
add
shlb
lcall
clts
push
push
xlat
subl
jmp
cmp
push
lret
pop
rclb
inc
push
inc
test
ror
movswl
add
js
add
movsl
testb
imul
sub
xor
pusha
in
ja
xchg
imul
push
jbe
js
outsl
gs
jmp
mov
sti
outsb
movsb
test
fcmovb
mov
xchg
xorl
hlt
push
rclb
pop
in
or
fldt
lock
faddp
scas
dec
jle
maxps
dec
fstpl
fidivs
xor
test
jnp
push
dec
fnstenv
rclb
leave
dec
scas
jge
inc
and
mov
or
add
loopne
into
icebp
sti
inc
mov
gs
fistps
test
mov
add
inc
aas
shrb
lea
arpl
xor
in
pop
out
sar
xlat
push
add
mov
xor
mov
fbstp
mov
ret
jecxz
add
or
xor
addb
roll
dec
pop
and
int
inc
pop
xor
dec
fnsave
pop
lahf
lcall
push
stos
jge
scas
dec
out
push
movsb
roll
and
mov
add
dec
push
xor
pop
daa
aaa
sbb
push
imul
mov
or
cmc
sbbb
lret
sub
xor
cmp
jecxz
lds
jl
add
int
int
mov
mov
or
sahf
ja
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
pop
mov
or
sbb
daa
dec
jp
adc
sti
out
not
mov
lock
lret
stos
sbb
add
out
push
iret
push
insb
ja,pt
mov
aaa
sbb
cld
push
adc
fsubrp
arpl
cmpsb
out
jg
or
add
xchg
stc
out
imul
jae
xchg
xchg
outsb
xor
mov
xor
popa
lret
inc
push
push
das
add
lret
and
xchg
jo
pushf
iret
xor
pop
push
clc
cld
adc
sub
ss
adc
jmp
pop
mov
test
jl
call
dec
inc
cmpsl
popf
roll
push
fsubp
incb
incl
stc
outsb
mov
push
stos
pop
mov
test
pop
cmp
shrb
mov
lea
fs
flds
cmpsl
popa
mov
dec
cmp
xor
fwait
test
nop
add
mov
int
icebp
mov
lret
aam
jb
cmp
jp
jmp
negl
jmp
push
sbb
sub
lods
and
out
or
insb
outsl
push
jno
mov
inc
jle
xor
push
fistpl
pushf
sub
daa
loopne
mov
cmp
sbb
in
not
mov
sti
mov
lcall
lret
testl
out
mov
jg
das
gs
fbstp
das
cli
repnz
cli
push
pop
add
push
outsl
inc
insb
mov
jbe
iret
adcl
xor
sbb
jl
adc
incl
pop
dec
sub
sarl
push
xchg
and
ret
and
jmp
addr16
and
insl
stc
mov
push
cs
xor
in
pop
jge
leave
movsl
push
push
jae
into
out
xchg
adc
xchg
popa
sbb
jbe
add
stc
or
adc
dec
cltd
mov
and
clc
arpl
jb
out
jbe
orb
push
mov
cmp
or
lcall
cmp
pop
je
ds
ljmp
imulb
dec
inc
add
fsubr
or
out
insb
lock
in
cmp
push
cmp
insw
rcrb
int
repz
sbb
and
xor
scas
rolb
idivb
pop
adc
push
inc
sbb
xor
mov
or
in
mov
out
sti
mov
fbstp
push
push
bound
call
bound
aad
and
divb
inc
mov
ja
xchg
in
xor
dec
out
loope
xor
ja
stos
add
add
mov
jne
adc
mov
aaa
in
sarb
sub
sbb
icebp
cmc
dec
ja
xor
je
sub
or
lods
mov
les
lcall
mov
xchg
or
push
sbb
and
xchg
mov
dec
popa
mov
dec
les
aaa
cmpsb
sub
sbb
and
mov
add
and
cmp
xor
setge
test
jbe
and
out
cmp
xchg
jae
in
cld
lods
in
or
jp
cmp
rclb
and
dec
and
push
call
push
xor
mov
imul
pop
mov
inc
mov
adc
cmpsl
sbb
aad
dec
daa
test
dec
pop
inc
pop
cmp
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
push
mov
sbb
sahf
adc
sbb
aad
loopne
jmp
mov
repnz
stos
mov
jnp
jge
push
fists
dec
rcrb
jmp
pop
jge
fdivrs
mov
pusha
cmpsb
ret
movsl
scas
xor
xchg
pop
test
add
pop
pop
in
cli
xorl
mov
pop
incl
imul
lods
enter
cmc
sbb
mov
pop
jnp,pt
sbb
and
cltd
add
jno
imul
dec
in
adc
cltd
xor
cld
mov
xor
outsb
push
cmp
xor
in
loope
orb
adcl
mov
out
push
push
fs
sarb
jmp
xor
ss
lahf
insl
cs
push
or
mov
test
push
dec
fiadds
pop
push
bound
cmc
shl
dec
shlb
mov
sbb
or
in
xchg
mov
xor
push
cwtl
pop
cmpsb
add
sub
movsl
xchg
adc
jmp
push
paddsb
push
jg
xlat
ficoms
mov
idivl
lock
mov
sub
out
jg
aam
nop
xchg
xor
jp
test
or
sub
pusha
add
aaa
ror
or
shlb
pop
test
and
in
xchg
out
mov
popa
gs
or
mov
cmp
and
dec
popf
inc
in
jno
in
jne
xchg
mov
mov
scas
lcall
mov
xchg
or
dec
adc
repnz
xchg
mov
lcall
pop
xchg
ror
sahf
out
mov
in
popa
sti
cmp
sarl
jbe
aam
mov
je
adc
inc
jae
cmp
mov
test
ds
lods
outsl
push
addb
inc
jecxz
in
outsl
inc
test
leave
enter
xor
stos
stos
dec
fdivrl
jae
daa
cmp
imull
nop
lret
xor
int3
xchg
je
and
adc
xchg
sbb
cltd
mov
jno
mov
clc
call
or
cmp
or
xor
inc
and
cmp
or
inc
push
adc
jl
scas
pop
push
fwait
jmp
imull
pop
cmp
sti
mov
jle
das
jge
sbb
pop
inc
pop
in
and
push
lods
jl
shrb
popl
adcb
sub
std
nop
sub
test
cmp
jbe
cmpsl
test
pop
xchg
adc
lcall
in
push
pop
loope
mov
test
insb
enter
mov
idivb
mov
clc
xchg
mov
mov
je
inc
scas
adc
pop
mov
pop
cwtl
push
push
call
into
sub
jb
orb
scas
fistps
jno
fcmovbe
dec
aas
js
xchg
dec
daa
rcl
popa
inc
or
aad
adc
jae
push
les
inc
pop
xchg
test
fs
jae
out
sbb
bound
shlb
stos
ficoms
inc
xchg
mov
roll
mov
sub
orb
mov
ja
popa
rclb
xchg
in
mov
outsl
insb
lds
rcrb
das
test
add
push
sahf
addr16
out
lea
lcall
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
pop
mov
sbb
sahf
adc
sbb
test
fimuls
stos
or
sbb
dec
mov
sbb
pop
je
mov
mov
pop
and
in
or
jne
xchg
push
cmpsl
inc
ret
pushf
ja
addr16
test
jb
cmpsl
pop
lret
dec
or
dec
mov
jmp
ficompl
inc
cmp
inc
fcmovnb
fcomps
and
or
cmp
add
mov
xor
adcb
sbb
bt
xor
test
and
pop
arpl
push
andb
jge
sbb
outsb
mov
add
rclb
cltd
icebp
subb
push
ljmp
xchg
pop
adc
mov
fwait
mov
xor
dec
fidivrs
call
lods
dec
jae
push
outsl
inc
push
inc
xchg
and
imull
cwtl
daa
inc
mov
aaa
inc
mov
aad
insl
mov
ret
push
aam
lret
mov
adc
sub
cmp
je
fldt
loop
inc
or
inc
popa
adc
rclb
or
push
icebp
loope
pand
dec
out
int3
mov
or
mov
ret
icebp
subb
stos
cmp
mov
stos
pop
icebp
jp
cmp
adc
hlt
test
inc
xor
inc
lock
inc
xchg
cld
ret
pop
pop
cmp
test
sahf
push
mov
inc
cmpsl
ret
stos
or
lods
pushf
andl
repnz
xchg
cs
xor
cs
cmpsb
jp
inc
pop
ret
addr16
lods
push
stos
aaa
leave
jne
jge
ret
mov
jnp
in
hlt
pop
mov
xor
sti
xchg
mov
outsl
jbe
inc
xor
push
hlt
pop
scas
or
in
dec
test
jl
fucomip
jp
mov
outsb
xchg
xchg
xchg
sub
lret
mov
aaa
xchg
rep
sub
push
lods
loop
out
jbe
mov
fldt
repnz
adc
int
sub
fldcw
pop
out
decb
imul
push
jg
pop
in
scas
arpl
cmp
mov
mov
out
cli
jge
sub
sub
imul
pop
pop
ljmp
jp
int3
shrb
leave
mov
cwtl
xchg
push
cmp
jl
lcall
pop
lods
shll
fcoml
add
jmp
jp
cmp
cmpsl
mov
cmp
ljmp
mov
in
lea
xchg
fcmovnbe
cwtl
sbb
je
enter
push
stc
nop
sub
mov
sti
aas
jbe
mov
js
loope
xchg
sbb
mov
mov
in
mov
les
enter
add
push
inc
sti
xchg
loop
pop
aas
and
test
mov
aad
mov
sbb
cld
fbld
mov
pop
pop
pop
dec
jns
in
add
sbb
hlt
movsb
jnp
xorb
call
xlat
daa
push
push
out
push
xchg
and
ss
push
sub
int3
xchg
pushf
pusha
add
inc
popa
or
sbbl
adc
cmpsb
mov
or
movsl
popa
int
test
push
mov
mov
sub
inc
outsb
cmp
loop
push
xchg
shll
out
push
into
adc
jecxz
negl
pop
notl
mov
jmp
repnz
jmp
imul
pushf
pop
jle
cmpsl
inc
push
jne
sbb
sub
es
notb
sub
pop
lahf
adc
and
xchg
pop
mov
aad
dec
and
push
js
inc
mov
push
add
pop
xchg
mov
out
cltd
int3
push
or
cmp
insl
jno
or
arpl
shrl
sahf
dec
mov
into
xor
mov
popl
sbb
mov
mov
add
or
xchg
inc
aaa
add
or
xchg
sub
fsubrl
cmp
dec
xchg
ror
mov
push
call
imul
mov
popf
add
stos
sub
pushf
cmp
sbb
dec
iret
push
pop
imul
dec
mov
ret
jmp
push
loopne
rcrl
push
jecxz
daa
adc
popf
or
popa
dec
rol
shlb
repz
add
pop
or
or
mov
stos
adc
jno
and
lock
dec
in
aaa
jb
push
out
dec
cmp
imull
cld
cmp
push
subb
mov
mov
dec
aad
mov
cmp
jecxz
and
leave
xor
loopne
xchg
arpl
mul
add
jo
dec
aaa
push
insl
and
fbstp
inc
sbb
lods
xchg
sbb
lret
fxch
test
outsb
and
gs
jle
in
int3
mov
repnz
sub
mov
insb
xor
jp
xor
add
fwait
fs
pop
ljmp
cmc
insl
fcmovbe
mov
mov
daa
inc
jp
rorl
or
in
jne
jnp
push
pushf
xor
inc
aaa
dec
sub
rol
jle
fsubl
cmp
xor
cmpsl
nop
ss
push
mov
add
pop
js
push
popa
adc
lret
int
outsl
dec
mov
pop
jecxz
in
fnstcw
mov
jns
lcall
dec
aam
jle
xor
push
push
test
stc
push
sbb
lret
mov
adc
outsl
dec
mov
popa
pop
mov
add
stos
jbe
mov
and
je
and
mov
add
sbb
mov
aas
test
sub
out
lcall
mov
popa
mov
bound
stc
imul
sbb
mov
das
negl
dec
cmp
lods
std
fidivrl
inc
pop
jmp
and
mov
xchg
out
popf
cmp
jmp
fsubs
cmp
mov
xor
add
fistpl
sub
xor
shl
movl
pushf
mov
rolb
and
cmp
jp
out
or
std
insl
xor
addr16
sbb
icebp
dec
jecxz
cmp
cmc
stc
pusha
mov
cs
jmp
jge
inc
jae
jno
jae
leave
adc
mov
jbe
xor
inc
jg
adc
sahf
hlt
and
sar
cltd
push
imul
fisubrl
adc
mov
add
add
or
mov
sub
sbb
movsl
stos
lods
lcall
add
movb
dec
or
je
mov
std
mov
push
jb
das
stos
lds
mov
sbb
dec
int3
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
jle
outsl
sbb
sahf
adc
sbb
addr16
int3
insl
sbb
test
out
jecxz
adc
loope,pn
daa
lods
xchg
xchg
jl
push
roll
sbb
dec
push
aaa
stos
popa
jg
xor
inc
or
loopne
xor
sub
test
filds
fucomi
or
mov
sub
lahf
mov
mov
cld
cmp
xchg
or
js
es
mov
xchg
mov
push
dec
sub
inc
sub
arpl
test
shl
cltd
test
xor
push
dec
xchg
push
inc
mov
cltd
sbb
cmpl
inc
jno
js
cmp
dec
and
or
movsl
ja
leave
clc
pop
pusha
lret
cmpsl
lcall
xor
stos
nop
jg
ret
add
push
adc
jl
mov
mov
pop
or
mov
cmp
or
push
daa
pop
arpl
rcrl
fstps
add
mov
leave
adc
out
aad
cs
push
push
push
std
fsub
cmpl
jl
mov
cwtl
mov
and
mov
pop
popa
mov
add
xchg
or
popf
cs
aam
fwait
outsb
cmp
in
mov
sub
dec
dec
dec
mov
mov
dec
cltd
add
add
xlat
cmp
outsb
jo
into
jo
data16
call
daa
sub
rol
ffree
pusha
call
shll
clc
xchg
dec
fstl
adc
and
jne
jp
inc
add
jp
shl
bound
jg
iret
dec
out
dec
pop
inc
sub
adc
jp
mov
cli
ffreep
ja
xchg
push
bound
out
xchg
daa
cmp
mov
or
ss
hlt
lret
inc
dec
mov
pop
xor
inc
adc
pop
mov
cltd
and
xchg
popa
adc
sbb
ficomps
xor
xchg
or
sarl
cld
push
sbb
lods
int3
shrl
xor
pop
jno
pop
lret
mov
js
sub
push
pusha
hlt
cmc
call
push
jnp
divb
mov
inc
aaa
ror
out
mov
adc
adc
jno
aam
outsb
inc
in
mov
outsl
lea
gs
add
das
clc
decl
jge
aam
push
fisubl
push
push
and
mov
or
in
sbb
ret
imul
fwait
add
sub
rcl
jle
sahf
popa
and
sbb
mov
mov
adc
adc
adc
adc
inc
pushf
dec
sbb
pop
mov
pusha
inc
lcall
jns
xchg
jbe
ja
xchg
das
gs
add
jbe
lret
iret
aas
pmuludq
add
notl
outsl
test
jbe
mov
sbb
incl
xor
add
repz
xchg
xchg
gs
xor
fbld
adc
dec
in
xor
outsb
push
aam
add
dec
je
les
mov
mov
insl
adc
loopne
mov
dec
push
dec
dec
jmp
inc
jbe
adc
fadds
mov
cmp
jo
movsb
jnp
lcall
cld
stos
ficompl
pop
push
pop
ja
jle
pushf
in
cltd
and
dec
pop
loop
aaa
lods
ja
nop
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
ja
test
sbb
sahf
adc
sbb
clc
xchg
faddp
sbb
xor
and
addb
ljmp
imul
int
test
or
int
rcl
div
add
scas
push
lahf
xchg
xchg
mov
jno
mov
mov
fucomp
mov
sbb
gs
add
cmove
lds
xor
mov
sub
lock
xor
daa
mov
add
mov
mov
sar
js
mov
lcall
mov
xchg
test
pop
stos
add
ficompl
insb
dec
lds
push
push
xor
subl
pop
lahf
icebp
repnz
xchg
subl
imul
adc
call
adc
dec
or
pop
sub
xchg
mov
xor
xchg
jo
sub
lcall
adc
push
loope
es
inc
adc
insl
push
xchg
or
mov
jne
and
xchg
movsb
sub
leave
mov
repz
sub
int
push
jo
push
adc
lock
push
inc
sbb
mov
push
jecxz
sub
cmp
mov
sub
lock
int
mov
cmp
dec
aas
adc
aam
test
mov
sbb
stc
or
push
daa
in
or
mov
lock
les
pop
repz
and
lcall
pop
xor
fndisi(8087
ss
dec
insl
sub
jge
pop
xchg
mov
mov
xchg
push
notl
aam
shrb
sub
and
shll
rorl
test
sub
dec
push
mov
jge
mov
clc
push
mov
int3
out
movsb
sbb
pop
mov
daa
in
add
jns
cmc
fiaddl
xchg
mov
in
push
push
inc
adc
mov
sub
ljmp
dec
jns
xor
fcoms
cltd
hlt
jge
dec
inc
xor
cmp
cmc
orb
inc
mov
xor
data16
outsb
lret
xor
pusha
lcall
xchg
pushfw
fisttps
dec
cmpsb
sub
or
adc
mov
in
jp
aaa
out
and
cmp
rolb
cmp
imul
repnz
rorb
push
add
fnstsw
jae
push
test
int
jp
sbb
in
int
mov
add
cmp
adc
mov
adc
hlt
fstl
pop
repnz
into
stos
mov
mov
cmp
or
cmp
cli
xchg
and
and
mov
pop
cwtl
jmp
sbb
sbb
mov
mov
ret
dec
sub
jle
push
ror
xlat
mov
imul
mov
jmp
aas
sti
cmp
sub
jle
icebp
mov
add
mov
lea
xor
hlt
xor
or
mov
iret
ds
clc
pop
insl
shlb
sarl
out
inc
inc
push
xchg
pushf
out
dec
fmuls
adc
pop
sbb
sub
ja
adc
pop
jns
sbb
mov
pop
into
cmp
sbbl
andb
xchg
sub
inc
fs
mov
sbb
xor
imul
mov
hlt
out
and
cwtl
out
sbb
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
mov
push
inc
add
xchg
out
add
hlt
or
mov
insb
jae
jb
cmp
stos
aaa
adc
xor
inc
xchg
inc
in
shlb
push
iret
add
jmp
sbb
xchg
call
add
push
stos
test
jmp
cmp
inc
adc
dec
outsb
xchg
clc
movsb
mov
mov
sti
and
mov
push
fdivrs
test
gs
mov
or
mov
mov
int3
mov
mov
scas
inc
sbb
or
xor
aas
enter
cmp
mov
gs
lcall
and
cli
insb
sub
inc
xor
fmulp
lock
push
test
mov
push
nop
stos
fadds
dec
nop
mov
pusha
rcll
rep
bound
pop
adc
push
mov
dec
inc
xlat
ret
fiaddl
dec
push
lods
loopne
mov
scas
sub
jmp
sbb
mov
mov
test
jmp
xchg
jae
rolb
cmp
aad
dec
mov
push
xchg
in
faddl
sbb
int3
call
iret
iret
add
sub
xchg
mov
imul
inc
pop
xchg
jmp
inc
sahf
int
xchg
ret
push
and
add
or
cltd
push
cmp
repz
jae
mov
lods
mov
xor
xchg
jg
lods
dec
fcoml
push
fsts
sbb
bound
cmpsb
jmp
dec
pop
jae
or
lock
in
jns
lods
pop
jne
mov
sub
stc
xor
push
cmp
adc
test
scas
push
add
push
add
dec
std
pop
das
in
cmp
xor
and
lock
repnz
in
rol
fsubl
mov
mov
sbb
mov
push
icebp
push
push
test
les
xchg
insl
dec
mov
cmp
testb
outsb
mov
xchg
mov
or
and
and
nop
mov
mov
in
insl
int3
ss
inc
mov
shlb
jnp
xchg
mov
pop
or
es
int3
mov
sub
into
adc
loopne
out
jns
je
pop
cli
fwait
cmp
mov
mov
inc
pusha
jg
adc
neg
popf
dec
rcrb
cmp
nop
push
lods
lcall
mov
adc
scas
mov
imul
popa
pop
mov
pushf
leave
or
imulb
aas
cmpsb
xlat
int
nop
pop
jb
cmpsb
mov
sar
pop
push
ja
test
mov
outsl
pop
xor
pop
jg
and
pop
jle
mov
clc
jl
push
dec
pop
dec
ds
pushf
mov
xor
mov
out
pop
ss
or
gs
push
fwait
and
rorb
inc
or
ret
test
cmp
xchg
sbb
cltd
addr16
xchg
test
mov
pop
push
shrl
daa
push
pop
call
fdivrp
insl
push
jp
fidivrs
ja
jmp
fs
aam
sahf
mov
aaa
sub
push
sbb
popa
out
daa
fidivrs
roll
ffree
mov
add
movsb
stc
movsl
lds
fmuls
mov
aas
dec
mov
and
push
loopne
divl
mov
ljmp
iret
insb
or
test
fstpt
jge
insb
cmpsl
subl
mov
mov
jmp
pop
jno
mov
xchg
push
dec
ja
mov
sbb
sahf
adc
sbb
lahf
xchg
ficoms
mov
jmp
sub
ss
testl
sbb
cmp
inc
iret
inc
xor
push
daa
jge
sbb
js
xor
test
mov
jbe
into
cmp
data16
mov
testl
xor
mov
pop
mov
adc
cmp
adc
jns
sbb
mov
iret
aaa
cwtl
ljmp
mov
cmpsl
inc
std
ds
repnz
aas
sub
outsb
add
fldcw
adc
ljmp
cmc
bound
add
mov
shll
andb
jnp,pt
adc
out
mov
mov
es
out
rorl
loope
hlt
adc
outsb
xor
lret
push
std
sub
sub
pop
fiadds
jle
jbe
insl
sahf
pop
add
xchg
add
xchg
jb
int3
and
jmp
pop
cmp
loop
add
cmc
pushf
push
xor
dec
lods
cmc
adc
adc
xchg
scas
lods
adc
pop
in
push
jae
cmp
adc
cmp
cmp
dec
shll
cmp
mov
sub
lret
xchg
pop
xchg
mov
adc
push
mov
subb
or
clc
std
mov
adc
int3
mov
adc
xchg
mov
testl
mov
xchg
fimuls
mov
in
js
ljmp
loop
xor
push
add
dec
into
push
mov
ss
fstps
gs
mov
push
dec
je
iret
inc
aad
fstp
pop
mov
cltd
mov
repz
insl
xlat
cmp
push
xchg
dec
xor
dec
nop
pop
call
ja
test
and
xchg
cmp
popf
fs
call
and
mov
xchg
sbb
mov
std
push
pop
mov
xlat
stc
jb,pn
mov
cmc
and
mov
aad
and
xor
xor
out
stc
pop
fsubrs
int
mov
sti
jo
push
and
pop
sub
lret
clc
mov
mov
cltd
insl
jg
jmp
aam
and
sub
dec
mov
adc
push
pop
cwtl
or
xlat
mov
or
ljmp
or
imul
icebp
das
sub
dec
or
outsl
aas
in
lds
iret
jle
lea
outsl
popf
dec
repz
out
stc
pop
repz
jl
mov
divb
mov
push
fldl
addl
xchg
xchg
stos
aas
sub
mov
add
lret
clc
shrb
call
jb
cltd
jl
ljmp
mov
addr16
jnp
and
inc
shl
xor
push
sbb
je
adc
mov
sbb
loopne
xor
dec
mov
cmp
repnz
or
repz
dec
bnd
xchg
aas
ret
inc
cmc
popa
subl
xlat
xchg
mov
test
adc
ffree
aaa
push
rorl
das
dec
xor
xor
jno
andb
pop
add
imul
lock
sbb
lret
fwait
inc
rcr
stos
rol
cmp
push
push
add
repnz
dec
jnp
lods
mov
dec
jp
inc
sub
and
lahf
xor
rcrw
fcomip
push
nop
inc
xchg
movsb
jbe
inc
mov
ror
mov
stc
out
bound
jle
sbb
lods
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
pop
mov
jle
push
sbb
sahf
adc
sbb
jns
negl
or
orb
repnz
jnp
clc
popf
fldcw
push
mov
push
xor
jno
cmp
imul
pop
sbb
lds
sbb
lods
lea
ja
in
xchg
fsubl
pop
stos
loop
je
icebp
out
clc
mov
gs
dec
xor
fnsave
adc
sub
mov
inc
aaa
insl
mov
sbb
bound
into
movups
pop
sbb
scas
mov
mov
pop
fistl
sub
jns
adc
mov
iret
notl
add
xor
xchg
push
cmovl
negl
mov
arpl
jle
outsl
or
data16
push
loope
sub
fildll
loope
aam
insb
sbb
mov
lds
add
pop
aam
idiv
ret
cmc
pop
andb
pushf
inc
mov
rclb
pop
iret
add
mov
inc
insl
sub
fcomps
lods
adc
lds
cmc
sbb
dec
dec
ret
jle
lds
and
push
or
js
and
xor
in
push
stc
les
mov
cwtl
adc
outsl
rorl
aam
call
cli
fldcw
daa
mov
sti
push
or
sti
int3
les
xchg
mov
or
fldl
mov
test
jg
aad
iret
xlat
adc
ljmp
inc
cmp
cpuid
dec
cs
ja
push
inc
pop
push
test
hlt
mov
xchg
adc
andl
outsl
sarl
mov
sub
xor
fistpl
sub
dec
jle
jg
repz
movsl
pop
or
imulb
jno
leave
xlat
movsl
mov
movsb
add
pop
xor
cmpsb
jmp
add
movsl
adc
or
pop
cmp
dec
push
pop
push
insb
add
jge
xchg
outsl
mov
add
repnz
pop
and
mov
imul
jecxz
xor
imulb
mov
out
mov
add
push
adc
and
mov
sbb
dec
lret
hlt
inc
xlat
fmull
fdivrl
cli
push
add
push
in
or
and
mov
push
fmuls
dec
dec
sbb
ja
sub
dec
jmp
cmp
push
test
aaa
xorl
push
jns
jg
dec
pushf
es
cmp
arpl
dec
mov
pop
pop
xor
adc
test
lahf
call
imul
hlt
enter
imul
cmp
push
orl
les
mov
stos
dec
adc
out
cmp
mov
scas
ja
inc
mov
push
pop
ss
icebp
cmp
mov
jno
testb
mov
fnstenv
push
lods
ja
repnz
jge
jp
push
pusha
push
cmc
push
sarl
fs
cli
push
ret
dec
loope
outsl
or
repz
mov
xchg
mov
jp
int
adcb
inc
imul
xchg
dec
mov
lock
adc
cmpsb
push
xchg
pop
lret
inc
stos
int
mov
push
fmull
jge
mov
leave
or
sbb
movsb
bound
xlat
adc
mov
xchg
dec
push
ret
xor
inc
add
mulb
ljmp
dec
movsb
xchg
je
rorb
movsb
ret
rorl
add
add
and
sbb
mov
pop
stos
rorb
sahf
adc
sbb
sbb
and
loopne
jmp
mov
push
add
test
cmpsl
jmp
sahf
lret
stc
cli
jbe
sub
jge
jmp
sbb
aaa
add
out
sub
cltd
sub
sub
mov
arpl
mov
dec
jbe
pop
xchg
pusha
jle
jne
outsl
adc
adc
shll
dec
push
fsubrs
fimull
sbb
pop
mov
mov
jmp
or
add
not
fistpl
mov
aad
inc
ficompl
sbbl
daa
fbstp
mov
mov
mov
movsl
dec
adc
dec
jno
xor
cli
adc
fs
aam
je
and
lret
int
ljmp
mov
sbb
mov
jae
lods
call
xor
push
jne
push
add
pop
cli
stos
inc
in
scas
sbb
jb
xchg
enter
mov
add
pusha
outsl
scas
xchg
pop
pop
sbb
sub
stos
sahf
mov
xchg
add
enter
bound
pop
xor
mov
xor
lea
and
stc
jne
cmp
ret
push
xor
scas
xor
ja
scas
or
in
pop
mov
and
scas
mov
fcomp
setbe
add
adc
data16
dec
ds
xchg
or
cmp
adc
jae
lret
xchg
test
pop
mov
out
mov
sbb
sub
mov
mov
mov
lahf
add
bound
mov
iret
insb
mov
repnz
mov
dec
or
sbbl
adc
adc
outsb
out
outsb
cli
mov
jecxz
inc
mov
fcomp
mov
aad
xlat
fdivl
fwait
pop
dec
push
test
fdivrs
push
mov
inc
sbb
cmp
js
pop
inc
gs
popa
push
mov
mov
mov
scas
ret
push
daa
mov
sub
xor
dec
test
mov
xchg
lock
leave
jnp
in
jg
push
shll
repz
loop
adc
mov
xchg
scas
int3
sbb
adc
inc
dec
stos
sbb
das
shlb
and
movsb
aaa
push
sti
shll
test
icebp
pop
aad
xchg
dec
mov
scas
xor
mov
or
mov
pushf
lret
mov
pop
stos
ret
stc
xchg
js
adc
out
sbb
xchg
inc
jns
cmpsb
int
shlb
call
leave
sub
add
mov
rclb
pop
xor
adc
jbe
js
mov
or
pop
pop
movsl
mov
movsb
rorb
insl
int
mov
shlb
push
in
xchg
push
mov
inc
jae
cmpsl
xor
jno
sahf
lret
pusha
sbb
mov
out
int3
sub
repnz
or
jae
les
clc
jle
repnz
popa
xor
leave
xor
and
dec
adc
mov
push
jp
inc
mov
ret
clc
fiaddl
xchg
mov
jae
call
jle
dec
les
xchg
sub
cmp
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
xchg
sbb
cmpsb
jp
cmp
adc
and
push
imul
xlat
and
dec
jg
decb
in
jg
lret
arpl
mov
mov
cmpsb
mov
sar
je
jp
mov
push
sub
cwtl
xchg
cwtl
xlat
cmp
repnz
shll
adc
dec
adc
adc
cmp
dec
or
or
les
mov
sahf
adc
iret
jmp
mov
lds
pop
nop
shl
out
mov
push
and
es
lods
mov
imul
xor
mov
out
stc
test
mov
inc
push
jmp
insl
shl
push
inc
cltd
test
pop
push
push
push
mov
dec
std
sbb
lock
aaa
enter
sub
xchg
cmp
in
pushf
xchg
lods
fldl
idivl
push
add
not
dec
adcl
lea
fsubs
mov
jg
adcb
sbb
jns
and
fldpi
pop
repz
int
call
adcl
loope
adc
stos
cld
icebp
out
sub
scas
or
xor
push
out
dec
sar
mov
dec
adc
jmp
lea
pop
cltd
loope
adc
lret
mov
cmp
cmp
jmp
mov
push
xorl
or
fiaddl
or
mov
movsl
sub
mov
push
cli
add
mov
fcmove
lea
dec
cltd
fnstsw
test
mov
push
inc
inc
sbb
addb
pop
das
push
sub
shlb
add
and
jle
xchg
bound
dec
ret
pop
ds
inc
or
es
sub
pusha
cmp
insb
xor
sub
mov
or
rorb
cmp
inc
popa
inc
cmp
mov
mov
enter
or
movsb
push
add
ja
push
lahf
incb
or
lcall
push
adc
jo
mov
imul
and
fnsave
loop
mov
dec
or
fistpl
nop
insb
test
mov
cli
int
xchg
or
repnz
int3
sahf
add
daa
inc
xor
dec
popa
lds
lahf
ror
push
xor
out
sti
sarb
jmp
push
dec
adc
and
aaa
inc
cmp
adc
insb
cltd
hlt
xor
xchg
repnz
test
pop
mov
iret
add
push
movsb
sub
jne
cmpsl
addr16
test
add
push
test
mov
jne
xchg
push
fcompl
icebp
ja
stos
add
sarl
sti
mov
insb
jne
int3
scas
fs
xchg
fcmovnbe
sub
inc
fbstp
sub
pop
xor
inc
adc
sub
pop
xor
mov
add
lcall
jmp
and
ja
repnz
push
in
xchg
jg
xchg
loopne
test
push
ss
xor
bound
cs
ds
lcall
repnz
push
mov
enter
push
mov
push
inc
shll
addr16
xor
in
adc
fisubrl
in
jne
clc
ficoms
out
or
repz
lcall
decl
idivl
mov
mov
dec
das
push
outsb
push
or
add
sbb
ret
cwtl
and
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
stos
int
sbb
sahf
adc
sbb
mov
aaa
jmp
andl
adc
imul
inc
rcrl
loop
adc
cltd
arpl
mov
adc
dec
je
mov
lods
cwtl
hlt
outsb
xchg
xor
mov
cmp
mov
mov
leave
cltd
and
xor
out
out
scas
push
sarl
mov
inc
add
test
shrb
jnp
hlt
inc
psraw
int
and
fidivrl
and
cmp
aad
lods
mov
in
stos
ror
push
xor
in
leave
scas
outsb
sbb
mov
imul
jecxz
push
sbb
mov
stos
jmp
jmp
movsb
movsb
sbb
add
test
jno
fisubl
sbb
divl
lock
test
jnp
dec
cli
ljmp
popa
addb
mov
mov
add
adc
add
fimuls
or
xchg
mov
in
popa
pop
mov
call
pop
and
xchg
push
gs
or
fwait
andb
sar
xchg
adc
inc
adc
scas
ret
xorl
daa
push
mov
mov
xchg
jb
in
sbb
gs
icebp
mov
fstpt
jae
bound
xor
mov
pop
pop
xchg
cmp
push
push
mov
jle
sbb
xor
cmpb
imul
outsb
scas
rolb
in
movl
nopl
and
push
fcmovne
imul
ret
pop
mov
decl
mov
jne
cmpsl
out
shrb
je
faddl
add
fcmovnb
inc
jno
push
lods
iret
call
sub
jl
jnp
dec
jge
jge
rcr
push
insb
ret
dec
push
test
aam
push
cmp
mov
data16
stos
mov
inc
mov
fdiv
sub
sbb
xor
jge
daa
inc
cmp
decl
imul
cmp
adc
subl
dec
or
aaa
xlat
mov
xor
movsb
mov
cmp
jg
lods
outsl
mov
push
test
cmp
call
js,pn
lret
jns
and
sbb
in
or
xor
and
mov
xchg
ljmp
xchg
int
pop
ja
jg
jg
cmp
das
nop
icebp
icebp
pusha
push
test
test
rol
push
outsl
insb
inc
fs
add
lods
ja
fdiv
ljmp
pop
push
subb
fbld
or
jge
pop
jmp
pusha
imul
push
ficompl
xor
push
movsl
aaa
iret
mov
leave
xchg
pushl
jb
repnz
cmpl
jnp
mov
xchg
sbb
flds
aam
outsb
lods
xchg
into
fistps
daa
xchg
and
push
pop
lods
in
and
cmp
sbb
pop
jbe
push
and
push
xchg
std
dec
add
loopne
insl
jl
cmc
push
ret
xchg
fisubrs
or
mov
out
or
das
shlb
push
es
mov
fucom
es
jb
dec
or
scas
jg
repz
or
dec
or
xchg
lret
addl
mov
mov
call
push
jo
xorl
push
sti
xchg
cmp
adc
rorb
push
nop
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
fsub
pop
jo
xor
sbb
inc
sbb
add
mov
add
xlat
fdivrs
sub
jb
pop
lods
in
xor
push
movb
testl
mov
out
loop
stos
imul
dec
es
mov
push
call
fadds
push
push
mov
ljmp
inc
add
xor
bound
pushf
je
or
jg
in
dec
sti
ljmp
std
adc
test
jns
pop
gs
mov
out
test
pop
cmp
enter
push
cmp
loope
out
mov
xchg
mov
inc
pop
push
scas
pop
xchg
stos
dec
mov
ret
mov
mov
push
push
ret
shll
lret
cwtl
dec
mov
xor
jmp
lds
scas
int3
cmp
cli
xchg
and
aad
fcoml
jl
test
inc
stc
in
fidivl
ss
cltd
push
repnz
cmp
dec
mov
fcom
xor
sahf
push
pop
pop
add
rcl
fcompl
mov
outsl
mov
out
adc
stos
jle
add
xor
sub
test
stos
jl
addr16
fldcw
ss
add
dec
adc
inc
inc
iret
icebp
push
sarb
adc
stos
adc
pop
jmp
push
and
push
adc
daa
xorl
sub
jecxz
sbb
pop
push
cmp
aas
pop
mov
xor
daa
mov
xlat
inc
pop
icebp
inc
inc
xor
cmp
gs
dec
dec
loop
aad
addl
jo
int3
dec
rol
xor
int
das
push
push
imul
xor
jge
ret
pop
pop
loop
int3
xor
call
int
dec
bound
mov
in
sbb
test
pop
adc
and
xlat
push
imul
mov
xchg
mov
xor
jp
ljmp
in
add
rcl
lret
aam
iret
jge
jb
in
popf
ret
push
sub
pusha
cmp
mov
std
js
xchg
aas
scas
in
mov
xchg
popa
aad
cs
mov
lea
in
inc
adc
ret
mov
dec
shll
sti
cmp
cmp
in
fdivr
push
and
lods
negb
mov
loope
cmp
nop
sub
ljmp
mov
out
lock
and
test
inc
outsl
mov
fs
test
fs
test
xlat
cltd
in
push
call
lea
push
fiaddl
ret
mov
or
mov
adc
fisubs
adc
test
mov
dec
es
mov
mov
lods
in
jmp
jnp
cmc
shll
push
mov
les
ljmp
ds
lahf
cmp
lret
xchg
mov
sub
pop
mov
loopne
push
shll
or
stos
into
sbb
xor
mov
hlt
xchg
adc
rcll
inc
daa
aaa
jmp
mov
inc
imul
ret
jge
rcrb
mov
push
ja
jmp
fisttpll
jmp
es
je
loopne
pusha
push
push
cmp
cmpsl
cwtl
mov
frstor
and
pop
loope
xor
shlb
sahf
cmp
jmp
rclb
movl
dec
add
lods
enter
add
ljmp
out
xor
jmp
sbb
jmp
ljmp
jo
push
mov
sub
sbb
cwtl
xor
pop
inc
call
sub
dec
fnstenv
sub
and
leave
fdivrl
loop
jle
jno
scas
sub
cmp
ret
adc
adc
stos
cmp
in
mov
fs
das
pop
loopne
cmp
xor
cs
pop
enter
movsl
ja
test
nop
cld
ret
pop
scas
cmpsb
shlb
rcll
jae
subl
lret
xlat
fsub
pusha
out
mov
push
lret
adc
dec
xchg
cmp
and
mov
mov
out
cltd
lahf
sub
ror
xor
insb
jae
icebp
and
dec
mov
mov
popa
mov
sbb
push
inc
iret
mov
cs
push
mov
sbb
xor
dec
bound
loope
jae
add
mov
dec
cmp
mov
sub
pop
sub
mov
shlb
inc
pop
cmp
mov
push
pushf
popf
xchg
mov
lret
scas
mov
inc
adc
or
dec
push
test
js
nop
in
adc
dec
fsubr
imul
cmp
dec
fdivl
out
mov
cli
sub
lods
call
mov
scas
inc
sbb
xchg
push
scas
je
push
inc
mov
leave
mov
add
std
xchg
jle
mov
jmp
jae
adc
add
xor
sub
movb
das
dec
push
and
call
xor
cmp
sub
xor
and
add
rorb
nop
lock
cmpl
or
adc
into
enter
mov
mov
or
inc
je
pop
or
clc
xchg
jb
or
mov
sub
sbb
mov
in
mov
sub
out
mov
dec
out
mov
scas
mov
sub
xchg
pop
subl
xor
movsl
in
xchg
adc
sub
jbe
ss
sarl
and
icebp
ficoml
lds
fstl
xchg
add
aas
push
jno
add
addr16
movsl
sbb
mov
pop
mov
mov
mov
test
out
xchg
test
mov
and
shlb
out
pushf
add
rcrb
sbb
daa
cmp
repnz
cmp
mov
rcrb
push
sbb
mov
or
push
mov
pop
repz
in
xor
clc
xchg
mov
and
adc
push
sub
and
dec
xchg
ficomps
add
cwtl
lods
rcrl
push
mov
in
ja
or
xlat
pop
jne
pop
xchg
xchg
xchg
cmpsl
addr16
outsb
adc
addr16
push
sub
adc
mov
xor
jae
inc
add
out
nop
or
outsb
adc
stos
and
shl
mov
fistps
adc
dec
add
scas
outsl
pop
sahf
mov
xor
inc
or
je
lock
call
pop
inc
adc
enter
xchg
repz
cmp
jae
dec
cwtl
jle
mov
aam
lds
shrb
in
int3
xor
adc
cwtl
adc
fnsave
xchg
cmc
sbb
mov
jns
ss
out
inc
push
mov
sub
pushf
je
cmpsl
ret
jmp
in
nop
push
fiadds
mov
aam
push
add
jle
loop
lahf
xchg
pop
mov
inc
cs
data16
das
add
into
test
mov
adc
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
pop
lea
and
sbb
sbb
ja
loope
sub
xchg
push
push
lods
fistpl
add
push
xlat
test
loope
jmp
push
int
les
cmp
ficoms
loopne
bound
cmp
push
mov
shlb
addb
insb
pop
call
jo
adc
mov
jne
vcmpps
xor
ret
lahf
or
lea
xchg
sbb
sbb
hlt
sub
fsubs
pop
stos
cmp
dec
repz
dec
movsl
push
ror
sti
fisubrl
stc
jp
fwait
bswap
jl
xchg
mov
mov
cwtl
movsb
mov
jo
loopne
dec
push
add
or
lods
inc
pusha
adc
pop
ret
dec
pop
push
jmp
mov
or
jno
push
add
jae
scas
xchg
rcrb
rolb
xchg
xlat
pushf
pop
mov
dec
rcrb
adc
push
xchg
mov
mov
sbb
inc
insb
sbb
fcomps
fdivrl
mov
dec
push
push
hlt
mov
mov
test
push
dec
cmpsb
nop
fdivrl
sarb
shl
cmp
andb
add
sub
pop
mull
insb
ret
or
int3
mov
fistl
fsubs
lret
ds
and
jecxz
push
push
fs
push
push
xor
xchg
xchg
movsl
jp
test
mov
loopne
jp
adc
mov
sub
push
mov
aas
pop
mov
mov
pop
cwtl
iret
rclb
sub
repz
mov
leave
add
add
sbb
test
inc
and
std
das
push
mov
neg
cmp
inc
push
add
mov
dec
imul
fcmovnu
xchg
pop
inc
jg
shr
adc
les
push
pop
xlat
push
scas
and
xchg
std
pop
js
sarb
iret
xchg
pop
mov
les
dec
adc
sbb
enter
lret
sti
dec
xchg
inc
imul
add
or
lahf
scas
jmp
in
and
mov
sarl
in
negb
adc
mov
and
pop
pop
test
or
mov
int
xchg
sahf
mov
xchg
out
sbbl
push
pop
and
inc
test
pushf
fisttpll
sbb
sbb
dec
adc
ret
xchg
sbb
push
cmc
push
push
into
enter
dec
negl
js
cld
into
inc
ret
xchg
insl
jnp
push
push
pop
push
popa
and
fcoml
mov
and
sbb
cmpsl
aam
insl
inc
mov
rclb
push
aas
jge
mov
add
cmp
filds
lahf
test
adc
in
test
cmp
inc
xchg
fadd
ja
clc
fildl
sbb
mov
cmpsl
adc
sub
icebp
cmpsl
push
and
or
sbb
movsb
adc
stos
loopne
xchg
aaa
mov
jno
cmp
test
sbb
adc
jg
ja
jge
movsb
pop
sbb
inc
and
mov
cwtl
std
rcll
xchg
sarb
divl
pop
in
fld
out
fstpl
adc
or
cmpsl
mov
fstpt
test
std
xchg
enter
pop
pop
gs
ds
adc
lret
add
xchg
cmp
cmp
mov
test
insb
in
gs
push
clc
sbb
rcrb
fldenv
or
bound
jecxz
push
add
out
push
xlat
adc
gs
jns
test
push
push
or
lcall
insl
xor
stc
cmp
xor
pop
andb
int
xor
out
and
add
ret
pushf
pop
or
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
scas
cwtl
insl
mov
sbb
sbb
sbb
sub
pop
das
scas
aaa
add
xlat
aas
fbstp
jae
gs
and
xor
sub
cltd
sbb
je
jae,pn
mov
test
sbb
mov
add
enter
fsubrs
aaa
ds
insl
jnp
in
pop
lret
sar
jle
fstpt
sub
pop
test
lds
call
push
mov
pop
and
xchg
mov
sbb
xor
mov
mov
mov
add
imul
cwtl
mov
cmc
dec
pushf
mov
or
sub
stos
inc
shlb
xchg
jp
or
pop
pushf
inc
and
mov
xor
xor
popf
movsl
std
dec
ret
jno
or
ret
mov
in
and
mov
lods
cld
dec
sar
sarl
dec
addr16
xchg
mov
std
xchg
dec
dec
pop
mov
xchg
jl
inc
jle
enter
add
fcoms
enter
cmp
mov
mov
cmp
add
adc
cli
sbb
jmp
test
adc
mov
mov
adc
sbb
add
popa
aaa
xchg
pop
dec
jne
push
scas
pop
mov
sub
inc
mov
jne
test
repz
inc
shll
fwait
mov
jno
xchg
xorb
scas
loope
loope
iret
pop
out
and
lret
jge
sub
dec
imul
pop
scas
push
rcrb
mov
mov
jnp
pop
sub
andb
call
test
jmp
rorl
testb
nop
cli
in
out
xchg
rclb
out
fs
mov
into
push
cwtl
insb
lret
mov
imul
pop
rorl
jecxz
ljmp
pop
jg
lds
int
and
iret
ss
or
dec
mov
xchg
add
daa
fstpt
xor
add
sub
loop
push
roll
jne
cld
dec
pop
cwtl
ret
push
arpl
pushf
jg
lret
repz
dec
aas
fcmovne
subl
icebp
sub
add
mov
mov
addr16
mov
dec
je
mov
push
jbe
fidivrl
outsl
out
inc
jmp
movsb
pop
push
jecxz
push
scas
add
out
fdivs
mov
sbb
jl
mov
add
movsb
add
jmp
jl
inc
sbb
lret
std
xchg
push
mov
test
jmp
imul
jbe
mov
sahf
jo
xor
mov
shll
and
inc
dec
and
inc
mov
pop
pop
mov
adc
rcl
ja,pt
mov
std
pop
jo
imul
ds
or
push
repz
or
pop
shr
and
adc
sub
mov
adc
movsl
inc
push
daa
add
lcall
outsb
adcl
pop
mov
xlat
mov
jge
sbb
mov
ljmp
xchg
test
call
scas
fsubs
add
pop
fisttpl
imul
ret
or
mov
dec
mov
mov
dec
ja
jnp
xchg
hlt
loopne
pop
sub
pop
cmp
push
pop
cmp
xor
mov
sti
mov
jno
sbb
sub
mov
pop
aad
enter
les
cmp
ret
std
adc
in
sti
or
inc
fisttpl
mov
adc
mov
inc
add
cld
mov
cmpsl
addb
dec
loopne
xchg
add
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
mov
sbb
outsb
adc
sbb
cmp
rcrl
push
mov
jns
pop
pop
aam
mov
dec
lds
inc
jmp
icebp
mov
push
jge
push
sbb
loope
mov
outsb
or
fsubrl
xchg
cmp
pusha
mov
sbb
jge
ljmp
pop
add
rol
hlt
sub
lcall
not
add
icebp
call
pop
push
sbb
mov
push
jne
sbb
adc
push
dec
push
inc
jg
xchg
leave
add
inc
mov
std
push
cld
xor
jp
push
push
or
push
and
outsl
xor
cmp
mov
movsl
sarb
out
fcoml
cltd
cmp
stos
jnp
and
push
mov
sub
mov
jecxz
mov
xchg
es
sbb
pop
push
out
popa
pop
pusha
pop
out
cmp
and
inc
mov
add
imul
pop
lcall
mov
add
cmpsl
loope
push
ljmp
loop
in
mov
inc
pushf
inc
xchg
divl
fwait
imul
jl
scas
scas
repnz
cmp
xchg
jg
dec
cli
dec
sub
aas
and
fstpl
jle
mov
sub
fxtract
sub
stos
popf
repnz
iret
jge
pop
xchg
test
leave
sub
fnstsw
add
insl
mov
xchg
xor
lods
insb
fcoms
out
rcll
lcall
or
gs
add
and
int
iret
int
sub
loopne
mov
imull
lock
xchg
xchg
mov
push
out
dec
or
sti
cs
add
aam
dec
push
mov
xchg
pusha
loop
adc
mov
in
sarl
mov
mov
add
fidivrs
sub
and
cmp
mov
dec
inc
xchg
sub
xchg
lcall
xchg
or
mov
xor
adc
pop
inc
in
inc
adc
leave
push
or
mov
push
and
orl
outsl
cmp
add
or
jmp
pop
sbb
xor
xchg
pop
or
dec
mov
mov
cmp
popa
mov
jb
dec
xchg
mov
popf
jae
jne
idivb
dec
push
sbb
sbb
jb
addl
mov
mov
iret
push
adc
into
xchg
and
sub
mov
stc
daa
inc
cpuid
or
nop
sti
pop
cld
sub
jge
out
add
popf
inc
xor
dec
add
popf
out
mov
pop
sahf
pushf
aad
stc
clc
mov
mov
mov
out
add
and
adc
mov
jne
push
or
lock
lret
mov
adc
add
repnz
leave
dec
sub
out
sti
hlt
stc
mov
pop
adc
inc
and
push
and
mov
lds
pop
add
xchg
sahf
pop
xchg
adc
sahf
lret
arpl
sbb
and
push
fisubs
hlt
call
cmp
into
cmpsl
cmp
repz
hlt
mov
shrb
jbe
cld
sub
push
push
jle
repnz
dec
pop
xchg
push
mov
fs
pop
pop
or
pop
sbb
and
jb
sub
lods
mov
xchg
push
movsb
mov
add
fdivrs
lret
jp
sbb
out
imul
pusha
cmp
inc
int
lcall
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
push
sbb
pusha
or
sbb
xlat
push
lret
jbe
pminub
xor
jns
addb
push
jl
fisttps
loopne
mov
rclb
jae
cmp
sub
cs
ja
or
mov
je
lea
test
xor
and
pushf
cmpsl
cmc
sahf
mov
or
lea
fdivs
scas
jb
push
or
adc
inc
inc
push
sarl
sub
xor
scas
jp
fs
fmul
aam
mov
int3
sub
dec
or
sahf
inc
pop
mov
lahf
in
sar
dec
xchg
pushf
frstor
xchg
dec
jno
pop
cmp
in
fcompl
push
pop
mov
scas
push
out
add
inc
call
sub
ja
adc
add
add
fcomp
outsl
cmp
dec
lods
js
mov
test
stc
mov
mov
in
test
fneni(8087
cwtl
lcall
adc
inc
test
mov
push
addr16
mov
lret
fs
push
imul
enter
dec
mov
lret
daa
dec
aaa
jge
push
icebp
mov
jmp
cmp
jg
int
xchg
adc
insb
bnd
in
cmp
das
stos
xchg
push
stos
mov
push
fsubrs
call
decb
mov
sbb
and
lods
pop
insb
les
cmp
sbb
inc
mov
mov
pop
mov
and
lret
lea
or
mov
push
mov
or
test
lahf
test
sbb
xchg
cmp
pop
frstpm(287
push
adc
xchg
sub
popf
mov
xchg
mov
or
scas
in
cmp
push
mov
adc
inc
lds
arpl
dec
shlb
ret
mov
add
subl
std
inc
push
cmp
sub
mov
popa
xchg
lock
jnp
scas
mov
pop
sub
jle
repz
leave
outsl
jne
xchg
sub
idivl
lods
push
mov
insb
xor
loopne
ret
push
flds
inc
jmp
out
fsubs
xchg
aam
mov
sub
lds
fwait
pop
pop
add
or
out
out
push
shrl
lods
insl
sub
in
scas
les
test
push
cmpsb
loope
xor
sbb
xchg
out
push
dec
cmpsl
mov
repnz
rorb
and
cmp
stos
adc
fisubrl
lods
std
nop
testl
das
jb
adc
inc
mov
mov
sub
das
adc
dec
inc
jle
xchg
and
xchg
decl
fmul
rcrl
jl
sbb
inc
loop
test
inc
xor
inc
or
dec
sbb
add
xchg
roll
mov
push
mov
xor
sarl
repz
out
add
sub
sbb
mov
repz
xor
iret
out
repnz
xchg
add
adc
push
and
adcl
mov
scas
xchg
xor
mov
jae
jmp
ds
mov
xlat
popa
out
cmp
push
jle
dec
shlb
ss
fstpl
loopne
cld
add
ror
xor
mov
xor
addb
sbb
test
xchg
mov
ror
mov
xchg
inc
popa
stc
hlt
xlat
out
jo
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
sub
sbb
outsb
adc
sbb
sarb
insl
push
xchg
push
jecxz
imull
aad
rclb
jg
andl
scas
mov
cltd
xchg
sbb
sub
sbb
lret
ljmp
mov
das
repz
mov
xchg
pop
in
leave
das
lea
xor
lea
sbb
div
imul
and
mov
and
outsb
push
imul
pop
sti
cli
dec
or
mov
mov
filds
xor
cwtl
sbb
mov
orl
data16
sbb
scas
inc
nop
xor
push
jmp
jl
arpl
inc
jnp
jge
or
adc
cltd
mov
jmp
rcrb
adc
xor
cltd
push
push
adc
js
xchg
xor
fldl
mov
pop
pop
scas
loope
in
jne
push
icebp
in
sbb
testb
push
inc
jo
iret
in
fwait
cmc
xchg
rcl
or
pop
push
ljmp
roll
lds
dec
lcall
xor
or
sbb
jns
dec
xor
shrb
xlat
popa
je
push
mov
imul
jnp
pop
iret
push
insl
scas
in
loope
mov
roll
and
mov
mov
cmc
jge
inc
cmc
jb
or
mov
cmc
addr16
mov
pop
popl
push
push
loope
gs
and
mov
outsl
xchg
pop
xchg
mov
mov
and
cmc
xor
xchg
add
bound
pop
popf
or
mov
push
xor
dec
jns
jmp
sub
lahf
sub
dec
add
rcrl
sbb
sub
fwait
mov
sbb
loopne
flds
mov
push
div
sbb
pop
ljmp
push
leave
sub
jg
jne
pop
in
mov
mov
mov
jb
mov
cwtl
call
mov
stos
fsubrl
mov
jo
je
add
mov
mov
lret
andl
cld
stos
ds
shl
jp
enter
mov
in
mov
daa
clc
nop
ljmp
mov
cmp
test
imul
cmp
mov
push
rolb
inc
popf
ret
and
cmpsb
inc
pop
fisubs
push
add
ljmp
lods
xchg
xor
fldt
es
xlat
fsubl
and
leavew
imul
out
out
das
iret
sbb
push
cmp
dec
push
mov
mov
push
mov
sbb
pop
pop
mov
in
roll
je
aaa
inc
iret
in
repnz
and
in
adc
scas
push
jp
dec
shlb
test
or
shl
ret
sub
fisubrs
sarl
decl
arpl
pop
jg
pusha
mov
mov
dec
push
data16
loope
push
jb
in
or
into
mov
test
stos
lds
xor
and
fdivrl
mov
out
in
adc
lods
movsb
add
ss
insb
out
leave
inc
js
inc
imul
cmp
lcall
xchg
xchg
push
repz
je
ss
dec
cmpsl
sbb
jne
or
loope
out
dec
lret
fcmovnbe
shrb
or
in
imul
add
repz
push
arpl
dec
fstpt
jnp
dec
mov
sub
daa
sbb
out
sub
addr16
jmp
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
sub
mov
outsb
adc
sbb
iret
inc
loope
mov
jmp
inc
cmp
cmp
sarb
inc
addb
push
js
jg
or
dec
popf
lret
cmp
cld
jo
sub
scas
cmp
shlb
dec
ret
mov
xchg
add
or
insl
insl
add
sti
imul
jb
data16
xlat
jg
ds
mov
dec
pop
subb
sbb
aas
scas
aam
add
insb
jge
iret
icebp
test
in
sahf
jns
sub
fdivr
sbb
addr16
inc
inc
out
sbb
cmc
fcoms
jp
cmp
mov
jmp
mov
fnstcw
pop
dec
xor
outsb
fisttpll
and
dec
cmp
jp
fs
data16
pop
shrl
and
mov
sbb
add
sub
fnstenv
sbb
loop
ja
dec
imul
fidivrl
jp
mov
mov
decb
xor
pop
push
shrl
or
dec
or
in
xchg
push
enter
add
arpl
out
scas
punpckhwd
pop
iret
addr16
mov
sbb
fcmovnb
or
mov
movsb
dec
add
sub
fwait
ss
popf
xchg
adc
or
dec
mov
xchg
and
std
mov
jmp
jno
lret
mov
fcomip
pop
pop
insl
push
mov
push
dec
hlt
adc
pop
lods
add
jle
repz
mov
jg
inc
push
mov
mov
cmp
mov
push
adc
aad
pop
pslld
sarb
push
shll
dec
hlt
inc
mov
movaps
mov
sub
jp
push
dec
mov
push
test
lcall
out
fidivrs
mov
or
rcll
cmp
jbe
mov
push
xchg
sbb
pop
inc
sahf
mov
repnz
push
pop
mov
mov
push
push
jmp
sar
movsb
ret
leave
in
sub
sti
es
jnp
sbb
inc
and
cmp
mov
xchg
push
cmp
or
sub
push
stc
jno
sar
cmp
push
pop
fbstp
mov
scas
sub
mov
fsubr
mov
in
adc
or
jl
pop
sbb
shl
mov
or
jnp
arpl
mov
rcrb
ret
loope
or
or
rcrb
mov
lock
cmp
stc
lods
mov
loopne
jns
leave
dec
cmpsl
xchg
addb
lea
lcall
or
sub
cltd
stos
xchg
mov
mov
adc
outsb
mov
shlb
ds
mov
test
adc
int
jo
ja
rep
push
push
pop
ffree
cli
nop
int
mov
mov
cmp
push
sub
push
dec
incl
add
xlat
xchg
decb
pop
xor
in
sbb
pop
das
aam
stos
and
cmp
cmpsl
and
in
push
popf
out
cmp
cmc
jl
js
outsl
test
push
call
es
idivb
icebp
int3
hlt
cmpsl
leave
aam
pop
shl
mov
sbb
pop
mov
loopne
pop
iret
and
pop
lret
in
jmp
sub
stos
icebp
sahf
xchg
pop
negl
mov
bound
loopne
cmp
mov
push
add
pushf
sbb
xor
dec
outsb
inc
cmpsb
cmpsb
or
aad
scas
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
mov
outsb
adc
sbb
or
mulb
cld
xor
fidivs
js
cmpsb
mov
xor
add
out
push
test
and
in
mov
mov
push
test
or
push
add
ljmp
or
push
mov
aaa
out
push
insl
cmp
mov
sbb
mov
mov
and
mov
mov
call
push
sti
mov
call
and
cmp
leave
xor
cld
sahf
add
jmp
cmp
inc
push
adc
sub
daa
dec
pop
imul
into
and
jl,pt
in
dec
sbb
lret
ljmp
test
pop
sbb
movsl
dec
xor
call
cwtl
icebp
cs
int3
xchg
sub
mov
xchg
sub
dec
call
push
or
xchg
test
movsb
mov
inc
cltd
aaa
add
dec
cmp
test
iret
fwait
push
or
scas
add
push
xchg
lock
mov
fsubs
cwtl
lods
movsl
inc
arpl
push
movsl
and
imul
xchg
in
imull
inc
sub
sub
sti
sub
out
int3
pop
icebp
xchg
fstpt
inc
hlt
push
clc
mov
es
pop
cwtl
aam
lock
popf
and
pop
das
pop
pop
lcall
sub
or
sub
ds
fs
dec
add
ss
stc
jo
mov
xchg
xchg
sbb
bound
subl
divb
loop
xor
jno
int
dec
cltd
cwtl
mov
test
ret
or
cmp
pop
imul
add
xlat
jns
notl
lods
aad
jge
bound
pop
jb
mov
add
jecxz
cli
cmpl
pop
xor
scas
iret
or
add
jno
and
mov
test
sub
in
sahf
sti
aam
pop
out
xchg
dec
mov
in
jl
inc
jbe,pn
fistpll
inc
andl
div
pop
mov
in
cld
sub
pop
je
push
jns
sub
inc
push
js
sbb
push
xor
adc
jns
pop
xlat
frstor
and
sub
ret
mov
mov
mov
push
lods
cltd
mov
popl
push
fwait
sbb
sbb
xchg
mov
cmc
push
inc
stc
xorb
sahf
fwait
push
in
movsb
cmp
and
add
xor
aas
xor
jo
lds
ja
sbb
fwait
xor
fisubl
jno
jge
std
loope
add
adc
ficoml
jp
xorb
fdivrs
stos
insb
leave
adcl
add
dec
push
dec
lods
stc
mov
and
adc
cld
fbld
pop
ds
test
pop
xchg
mov
fwait
aaa
mov
loop
stos
cmp
fcoms
shr
pop
inc
or
jae
push
daa
jno
inc
sbb
in
out
pop
xor
sub
shll
jp
lret
lods
xchg
sub
inc
hlt
neg
or
int3
mov
aas
sub
mov
mov
jns
stos
dec
dec
sahf
mov
cli
push
testb
mov
rolb
ja
push
vunpckhps
fbstp
push
mov
mov
popa
inc
adc
stos
outsb
popa
fs
outsl
arpl
add
aam
pop
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
cltd
and
add
xchg
add
lds
loope
test
pop
push
cmp
and
jno
and
mov
scas
adc
scas
dec
add
out
fdivrl
stos
shl
jne
enter
jp
scas
loop
pusha
rcll
es
adc
repnz
in
dec
inc
ds
cltd
mov
pop
push
test
jge
inc
arpl
clc
cmp
jbe
shlb
stos
push
fstl
or
movsb
test
mov
push
adc
inc
sbb
mov
loope
sbb
pop
sbb
and
mov
js
sub
bound
cli
inc
sahf
hlt
pop
rcrb
pop
jmp
pop
out
in
push
nop
rorb
mov
and
dec
fildl
mov
push
lcall
adcl
loopne
and
lea
fiaddl
sbb
fistl
mov
push
pop
popf
test
mov
out
adc
mov
insb
inc
add
add
cmc
out
outsl
fmuls
adc
add
or
shlb
jns
cs
push
mov
jecxz
sbb
adc
out
jp
call
and
lods
dec
xor
jnp
xor
repz
int
sahf
dec
or
push
sub
cwtl
mov
fiaddl
add
mov
mov
add
add
insb
movsb
xchg
sbb
xor
jno
movsb
jbe
rclb
sti
or
fcomp
xchg
pop
sbbl
xor
sbbb
iret
loopne
push
xchg
add
notl
mov
jbe
rcr
ds
popf
fnstcw
xor
pop
mov
cs
adc
push
or
fucomip
std
test
xchg
sar
cwtl
mov
add
dec
pop
cltd
dec
pusha
dec
jecxz
in
rclb
sub
add
inc
push
cmpsb
xchg
jl
push
call
cwtl
in
and
lods
mov
ja
repnz
and
ds
incl
dec
add
ret
mov
cmp
push
xchg
xlat
cs
adc
scas
insl
push
mov
popa
stc
iret
shrb
imul
in
mov
inc
fldenv
imul
in
ja
dec
sbb
push
mov
or
pop
int
mov
sub
cmpsl
xchg
hlt
lds
xor
mov
sar
xor
ss
jp
sbb
enter
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
add
rclb
sbb
scas
cmp
dec
sahf
xor
das
mov
pop
fidivrl
or
imul
push
imul
and
jmp
and
inc
mov
pop
addr16
sub
pushf
dec
or
lea
push
test
lcall
jae
test
dec
ja
cmp
dec
dec
arpl
pop
rorb
pop
adc
fs
jmp
add
jnp
inc
jbe
cltd
xchg
out
xor
testb
dec
orl
arpl
cltd
cmp
sbb
pop
jecxz
cwtl
add
jne
pop
jne
sti
xor
cmpsb
inc
aas
pop
xor
mov
vpaddsw
mov
mov
sbb
xor
mov
mov
stos
sbb
mov
bound
or
aam
cmp
sub
fsts
daa
lret
aaa
pop
xor
dec
inc
pop
idivl
leave
add
or
mov
or
rcr
pushf
ljmp
sti
dec
hlt
and
loopne
xchg
mov
sub
sub
and
aas
dec
cwtl
inc
in
fwait
xlat
mov
orb
mov
sbb
in
sub
mov
ljmp
adc
mov
xchg
int3
cli
repz
mov
mov
ds
hlt
dec
push
pushl
sbb
pop
fiadds
xchg
mov
pop
jmp
lcall
pop
inc
lods
scas
test
mov
enter
adc
daa
xchg
push
outsl
sbbl
mov
pusha
jo
sbb
push
xchg
or
and
cmp
lret
nop
and
cld
mov
loope
stos
inc
pushl
sub
add
cmpsl
adc
dec
adc
sub
push
cld
call
mov
push
mov
add
xchg
sub
test
or
nop
movsl
idivl
ds
add
adc
inc
fldt
cmpsb
loope
xor
mov
mov
in
movsb
flds
fs
or
je
outsl
rcl
movd
pushf
test
rclb
mov
repnz
pusha
lret
ja
out
in
int3
dec
out
cld
leave
rcll
xor
xor
bound
cmp
push
pushf
xor
xor
cmp
mov
imul
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
stos
cld
adc
rclb
sbb
int3
add
cmp
xchg
and
les
and
pop
or
inc
sub
or
frstor
mov
dec
jl
inc
jecxz
lret
adc
xor
mov
inc
cmp
bound
add
jge
in
xchg
cld
sub
cmp
jecxz
jns
push
and
jae
iret
in
add
dec
enterw
int3
dec
push
pusha
js
out
leave
sbb
xchg
fstps
into
jae
add
cmp
shl
mov
sub
nop
test
loop
mov
mov
popf
in
icebp
hlt
push
add
pushf
loopne
icebp
and
sub
fstl
sbb
lret
test
pop
lds
lret
imulb
jb
adc
data16
xchg
addr16
daa
ds
xlat
adc
inc
arpl
jno
fidivs
push
popf
test
mov
nop
mov
popa
jge
lods
ljmp
cmp
mov
mov
xor
ret
frstor
sub
mov
cwtl
jnp
fsubl
mov
ret
jbe
mov
push
mov
adc
cmp
sub
iret
mov
inc
mov
xor
aad
xchg
mov
jnp
fisubrs
dec
loop
loop
pop
lock
adc
or
jnp
out
xlat
sbb
push
lret
sbb
jo
movsb
xchg
outsb
inc
dec
dec
cmp
lret
xchg
cld
out
mov
cs
jo
xor
test
bound
pop
out
mov
xor
push
enter
jg
out
sahf
push
inc
sbb
push
xor
xorps
sbbb
mul
sub
dec
dec
push
jg
xor
movb
xlat
cmp
sti
inc
or
add
or
addr16
and
dec
popf
add
repnz
clc
adc
fiadds
cmc
insl
cmpsb
mov
xlat
mov
xchg
sahf
movsb
pop
pushf
dec
push
cs
push
outsb
popa
pushf
addb
mov
add
sbb
push
xlat
cmp
test
pop
faddl
in
call
jb
pusha
or
addb
push
xor
push
loopne
inc
ret
mov
dec
jbe
mov
jb
push
stos
xor
adc
fdivrl
std
xor
rcll
mov
fsubrl
test
outsb
mov
fldenv
shll
dec
loopne
shr
mov
fdivs
sbb
pop
into
sbb
jae
popf
outsb
mov
sbb
adc
sbb
mov
adc
pop
xor
jae,pt
insw
iret
and
push
outsl
scas
ret
pop
jmp
jb
test
mov
addr16
xchg
stos
iret
inc
test
inc
adc
mov
test
mov
xchg
imul
mov
aad
mov
jne
ret
add
push
pop
scas
lock
or
push
add
and
cmpb
pop
cmp
ret
sti
mov
pop
dec
imul
jae
add
cmp
icebp
mov
dec
push
lds
mov
orb
jne
dec
push
mov
pushf
or
out
xchg
add
dec
mov
popl
mov
sub
xor
shl
arpl
jmp
mov
xchg
cmp
adc
pop
pop
xor
rolb
adcb
enter
mov
mov
out
sub
out
nopl
or
orb
int
add
mov
xlat
int
xchg
pop
clc
andl
lods
insb
mov
dec
lea
out
fdiv
clc
clc
rcrl
or
fnstcw
sub
lret
and
stos
or
add
mov
jns
sahf
fldcw
hlt
xor
xorb
test
lcall
in
andl
pop
imul
filds
and
pop
push
cmp
mov
cwtl
es
jne
jg
test
cmp
insl
push
mov
nop
rorb
push
jbe
pop
push
shld
add
sbb
ja
inc
repnz
or
popa
add
mov
jecxz
rcll
scas
sub
pushf
jl
inc
push
jns
push
sbb
cmp
imul
xchg
loopne
and
pop
jge
add
pop
rcl
out
cmp
loopne
sbb
add
lock
lret
push
xor
daa
jecxz
cltd
into
inc
sub
bnd
lods
adc
dec
jmp
adc
stc
loopne
sbb
fxch
mov
add
cmp
lods
jl
mov
dec
push
and
ss
sub
push
mov
mov
shrl
dec
sub
xchg
xor
int
ja
sub
pop
push
push
sbb
sub
mov
gs
mov
scas
test
loop
dec
adc
std
popa
lea
jp
xor
mov
adc
stc
pop
rclb
cli
out
aad
stc
std
xchg
cmpsl
and
cmp
test
or
and
cltd
mov
dec
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
jle
fcomps
sbb
adc
sbb
rorl
jno
inc
adc
js
dec
or
or
cs
sub
or
jbe
mov
pusha
ret
mov
subl
mov
jge
popf
int
stc
sub
mov
dec
and
lcall
daa
iret
aas
mov
fldcw
inc
add
cs
loop
mov
mov
les
out
lcall
jb
and
dec
pop
lds
push
mov
push
idivl
jecxz
stos
dec
mov
sahf
push
xchg
cmp
adc
and
outsl
je
out
jae
dec
and
cltd
xchg
pop
mulb
movsb
stos
je
sub
jns
pop
pop
bound
call
or
lret
pop
mov
pop
jle
and
cwtl
shll
cmp
pop
jns
xchg
mov
nop
pop
pop
dec
add
lret
in
and
jb
loope
imul
xchg
cli
dec
jmp
jno
mov
sub
outsl
jo
fiadds
hlt
cld
ret
movsb
mov
cmc
test
dec
icebp
filds
pusha
mov
jns
mov
in
add
aam
and
mov
and
ret
out
add
test
movsl
xchg
mov
xor
out
sbb
daa
lret
out
out
lods
cmp
out
dec
sbb
shlb
pop
dec
mov
inc
add
shrl
iret
jge
ror
lret
cwtd
jp
loope
hlt
in
or
add
cmp
test
inc
pop
int
sbb
mov
sub
sarb
mov
xlat
mov
xchg
loopne
shrl
mov
cwtl
push
xchg
dec
stos
js
rolb
and
push
mov
aaa
or
rcrl
cmpsl
dec
mov
or
fisttpll
fistpll
inc
faddl
inc
cld
lahf
clc
dec
jg
jmp
and
sbb
pop
sub
xchg
ljmp
and
dec
repnz
mov
mov
fdivrp
aas
mov
in
push
xor
xor
sahf
xchg
xlat
gs
cmc
sub
pop
das
add
cmp
cwtl
jmp
test
add
push
inc
adc
jmp
add
mov
clc
pushf
scas
and
idivl
sbbl
sti
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
xorb
pop
rcrb
sbb
adc
sbb
stos
in
insb
movsl
and
add
dec
jo
mov
popf
popf
and
inc
iret
sbb
xor
out
loop
cwtl
cli
sub
es
push
jle
sub
sbbl
mov
push
xchg
sahf
hlt
in
mov
add
fnstcw
ds
fcomps
dec
cs
add
xor
popa
mov
jecxz
cld
push
clc
js
or
dec
cli
push
rclb
mov
test
data16
mov
adc
pushf
ljmp
fs
movsl
xchg
or
mov
adc
mov
mov
icebp
insb
and
xchg
jae
mov
add
or
cmp
int3
jecxz
mov
mov
into
scas
cmp
push
inc
and
fwait
or
inc
cmp
cltd
popf
or
fsubrp
mov
lret
push
inc
aaa
push
adc
outsl
outsl
addr16
jns
mov
inc
inc
push
testb
push
push
dec
aam
mov
xchg
ds
pop
xor
xchg
nop
or
add
test
xchg
ret
jl
ljmp
jge
lcall
jl
adc
addr16
mov
add
mov
push
cmpsb
mov
and
fists
mov
ss
mov
push
leave
pop
insb
mov
dec
xor
push
lods
aaa
ss
pop
jno
lods
cs
out
lods
aaa
mov
mov
push
xchg
mov
xchg
mov
jge
mov
mov
sahf
movsl
mov
mov
sbb
repz
scas
jl
mov
push
subl
outsb
test
or
or
add
lea
adc
xchg
mov
movsb
adc
mov
xchg
sbb
es
cmpsl
in
clc
jecxz
mov
imul
roll
dec
lcall
mov
mov
inc
mov
mov
ljmp
les
inc
xor
mov
or
into
sub
jb
repz
les
les
inc
outsl
push
xor
lret
inc
mov
mov
sbb
dec
fistpll
shrb
mov
test
inc
inc
int3
mov
shll
and
pop
lods
mov
mov
push
std
call
test
test
lock
stos
jg
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
add
sbb
adc
sbb
shr
fistps
andb
and
xor
or
mov
shlb
push
xchg
mov
xchg
test
inc
test
es
push
addr16
pop
add
cld
popa
push
repz
inc
dec
pusha
data16
rol
fdiv
add
scas
cmpsb
sbb
les
jne
aas
stc
pop
push
xor
lds
enter
rep
push
imul
out
lret
icebp
insl
push
sub
cmp
movsl
mov
pop
out
lcall
ficompl
inc
pop
dec
fimuls
inc
push
rol
in
rorl
loope
es
add
out
push
aaa
insb
nop
mov
fdivrs
pop
addr16
inc
jne
sub
inc
push
cmpsb
jg
pop
aad
mov
jns
clc
jnp
in
imul
add
daa
mov
inc
mov
test
sbb
clc
out
arpl
cltd
cmc
insl
jns
pop
adc
xor
call
inc
sahf
xorl
ret
das
adc
dec
mov
jmp
cld
sarb
ds
iret
mov
adc
mov
cmpsl
pop
fldcw
pop
mov
imul
leave
in
movsb
addr16
dec
fistpll
out
sub
testb
mov
xchg
stos
xchg
std
popl
outsb
push
dec
pop
test
sti
cmp
xor
mov
lock
mov
fs
sti
pushf
mov
jnp
dec
aam
js
addb
push
in
sbb
into
xchg
cltd
lcall
rorl
imul
adc
cmp
push
mov
fsts
mov
xchg
push
cmp
adc
aad
xchg
cld
inc
shlb
cmpb
fnstsw
call
into
loope
ret
cltd
mov
adc
das
mov
adcl
adc
cmp
sbb
outsl
mov
fwait
mov
sub
aas
xor
jne
and
call
cwtl
jns
fcom
cli
dec
xchg
pop
ficompl
ss
lcall
fistl
aam
outsl
sbb
add
or
sbb
nop
int
and
mov
test
mov
jl
cld
add
inc
mov
mov
mov
imul
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
test
push
enter
adc
sbb
stos
shrl
lea
movsb
mov
or
scas
cwtl
or
imul
pop
cmpsb
xchg
fimuls
popf
popa
fstpl
bound
push
push
jge
xchg
icebp
mov
inc
aas
cmp
mov
mov
shll
dec
cmp
lahf
addr16
pop
fisttpll
xor
and
ror
les
cmp
dec
fsub
mov
jmp
jl
sti
push
jg
or
popf
pop
cmpsb
xchg
dec
mov
push
mov
faddl
jmp
xchg
cld
or
adc
push
push
fistps
mov
mov
pop
ret
or
cmp
out
cltd
je
aad
mov
loop
arpl
cmp
aas
lret
inc
xor
dec
rclb
call
ljmp
mov
adc
xchg
in
iret
jns
sub
adc
and
fists
daa
or
jg
mov
enter
in
push
inc
sub
jmp
adc
xchg
ljmp
fstpl
sbb
leave
pop
imul
jno
lret
push
clc
fdivl
rcl
cmpsl
int
fisttps
mov
lods
lcall
out
stos
into
pop
movsb
mov
in
ficoml
std
mov
sti
ret
sub
add
xchg
mov
pop
cmp
xchg
adc
xlat
adc
stc
pushf
xchg
push
popf
mov
cmpsl
insb
xlat
nop
or
cli
arpl
leave
mov
in
vmovhpd
ss
inc
xor
jb
sub
add
cmpb
sub
xchg
decl
cltd
add
inc
pusha
hlt
out
cmp
xor
js
xor
mov
lea
insb
in
xor
and
popa
test
aad
adc
mov
jno
clc
aam
movsb
adc
pop
lds
stos
mov
mov
inc
hlt
mov
lock
inc
jnp
int3
push
je
cli
fwait
add
sti
dec
out
sti
test
scas
mov
jp
inc
pop
mov
inc
enter
lret
sahf
add
push
and
push
inc
jno
push
mov
jp
push
mov
jmp
cli
adcb
sbb
outsl
jecxz
test
add
or
xchg
or
push
test
xchg
jae
pusha
fistl
enter
jge
in
sbbb
jmp
popa
mov
popa
jge
mov
shlb
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
mov
cltd
out
pusha
iret
push
sbb
sub
popf
or
xchg
insl
add
jmp
mov
mov
out
adc
fnsave
jle
mov
jne
dec
adcb
scas
mov
or
nop
push
stos
test
movsb
lock
lcall
ret
xchg
jg
jo
stos
mov
scas
loope
xchg
mov
pop
xor
mov
push
sub
cltd
movsl
cmp
mov
jle
leave
push
sub
xchg
xchg
aas
enter
mov
mov
dec
mov
lret
in
arpl
push
rcrb
and
cs
js
inc
dec
pop
jmp
mov
mov
inc
sub
insb
popa
pop
xor
push
pop
incb
out
test
inc
inc
mov
adc
sub
clc
pop
jb
xchg
inc
cmp
test
cmpsl
fwait
adc
clc
movsb
jne
or
mov
inc
mov
orl
notl
aad
sub
sbb
jo
ret
hlt
mov
dec
in
xor
push
xchg
fadds
adc
xor
lcall
mov
mov
or
out
aad
xor
fisubl
cmp
push
andl
cmp
adc
mov
es
lret
je
nop
out
push
dec
ss
ficompl
lock
jnp
mul
sti
lds
adc
test
int3
std
cmp
xor
lret
jne
cmc
inc
out
lcall
or
iret
jp
jno
fiaddl
push
rol
dec
dec
and
mov
fsubl
insl
cmp
neg
imul
jae
xchg
sahf
repnz
lcall
lcall
adc
pop
in
loope
out
dec
hlt
addb
adc
and
jae
mov
inc
mulb
or
mov
pop
jl
popf
les
daa
ret
adc
push
cmp
iret
dec
icebp
sbb
insl
aad
iret
scas
and
push
xchg
in
cmp
mov
pop
xor
hlt
mov
jle
fs
xor
or
ljmp
aaa
ja
loopne
adc
mov
fwait
sarl
aas
and
and
fldl
and
cs
cwtl
ja
push
add
jge
cmpsl
scas
testl
sub
sbb
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
dec
adc
jl
mov
sbb
cmpsl
idivl
mov
in
xor
mov
clc
mov
push
mov
mov
pop
jl
cmpsl
pop
jb,pt
out
mov
cmc
cmp
in
int3
shrb
pop
lea
jbe
stos
sub
sbb
jmp
pusha
loop
pop
test
ljmp
mov
out
fsubrp
xor
outsb
pop
mov
adc
pop
fucompp
stos
inc
sbb
fmull
dec
movsb
mov
popf
in
mov
add
pushf
inc
test
push
ja
xor
lock
repz
mov
je
movsl
idivb
mov
mov
xchg
hlt
mov
and
cld
out
mov
cwtl
mov
out
sub
test
lods
ja
test
or
push
xor
adc
pop
imul
and
or
popa
repz
sub
es
xchg
jb
hlt
and
jl
idivb
mov
hlt
imul
fwait
movsb
cmp
cmpl
sbb
xor
mov
jbe
mov
xchg
arpl
pop
add
lods
ss
pop
pop
push
push
inc
fisubrl
repz
xchg
xchg
int
adc
mul
dec
sarb
xchg
xor
movsb
stos
loopne
andl
sub
movsb
and
hlt
pop
push
addl
pop
xchg
ljmp
pop
in
and
fwait
xchg
cmp
cmp
cmp
out
inc
jge
loope
add
add
cmp
and
adc
daa
jp
sub
inc
xchg
sub
jecxz
into
or
inc
dec
aad
dec
pop
push
cmc
outsl
lahf
in
xor
ror
popa
aam
pop
adc
cmp
push
push
and
add
sub
shl
nop
fdivrl
enter
push
js
mov
in
mov
mov
cmp
pop
cli
cmpsb
or
enter
shr
xacquire
inc
fsubr
fnstenv
pushf
test
mov
insb
loope
add
aam
gs
cltd
sub
pop
mov
dec
cli
cld
fsubrl
stos
inc
setbe
pop
adc
pop
shlb
push
mov
mov
lahf
sub
mov
cmpsl
xchg
cmp
push
leave
pop
lret
cmp
sub
or
pop
pop
pop
mov
ljmp
xor
sbb
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
and
rclb
sbb
sub
aaa
adc
mov
xchg
pop
push
or
jns
add
lock
icebp
test
daa
stc
adc
push
xor
lea
push
les
data16
rorb
inc
jno
inc
rclb
jno
mov
popf
sti
dec
out
pop
jo
in
xchg
std
cmp
pop
ret
push
scas
ss
cltd
xor
sbbl
push
mov
imul
lcall
arpl
dec
in
jl
jle
pop
sbb
dec
cmpsb
aam
mov
pop
rcll
sub
jns
inc
inc
out
xchg
daa
inc
mov
in
and
aam
pop
jle
in
mov
jmp
mov
sub
lahf
jne
sbb
pop
and
icebp
cltd
xchg
dec
in
insl
sti
call
aaa
movsb
lcall
sbb
mov
cmc
negb
push
push
adc
mov
push
cmc
mov
roll
cmp
pop
push
enter
inc
rcrl
inc
cmpsb
or
aas
mov
add
ss
lods
sub
sbb
jne
jge
sub
roll
imul
and
pop
out
fdiv
aad
movsb
xor
rorl
sub
sub
sub
inc
mov
cmp
ret
out
jnp
cmp
jb
dec
stc
loope
test
add
scas
pop
push
and
stc
inc
bound
int3
jge
lcall
or
pop
rcrb
in
ljmp
pop
loop
mov
loopne
mov
push
inc
mov
or
fs
sbb
xchg
mov
dec
xor
push
in
push
sahf
ljmp
or
add
or
and
xchg
dec
inc
inc
push
imul
and
xchg
rcrl
sub
repnz
push
setge
xchg
jae
adc
jne
jp
inc
add
pop
repz
int
shlb
xor
inc
lods
mov
inc
xlat
out
cs
rorl
stc
and
and
mov
mov
xlat
push
data16
xchg
das
push
ds
cmp
fnstenv
mov
sbb
leave
adcl
in
xchg
in
mov
sbb
cld
mov
jo
xchg
sbb
and
adc
and
xor
jb
in
inc
dec
xchg
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
mov
sbb
rclb
sbb
cmp
pop
sbb
mov
in
bound
outsl
dec
push
dec
add
mov
xor
int
pop
pop
push
adc
add
or
aad
mov
out
insl
sub
xlat
sbb
or
les
dec
mov
mov
push
dec
push
mov
and
and
sti
add
push
les
mov
push
pop
xor
or
inc
inc
sub
xchg
movsl
ret
insl
je
cmp
lods
popa
xchg
scas
sarl
imulb
jb
sti
mov
pop
cli
rclb
xchg
adc
xor
insl
sbb
lds
jecxz
fcoms
or
rcrl
aaa
pop
and
add
pop
test
dec
into
mov
mov
sbb
lods
sub
jmp
rolb
xchg
xchg
pop
in
jno
pop
bound
jb
push
out
pop
cmpsl
add
out
or
sbb
les
cmp
aaa
sbb
and
cmpsb
insb
mov
jb
insb
cmp
xchg
jnp
adc
ret
xor
lea
lods
ljmp
rolb
divb
adc
test
xor
and
daa
aad
jo
decl
pusha
dec
cmp
mov
out
sub
inc
ret
cmpsb
pop
addr16
ret
inc
push
jg
stos
enter
imul
repz
lea
pop
and
stos
jae
pop
aad
faddp
jl
cmpl
and
mov
sahf
inc
leave
in
mov
ret
stc
outsl
push
inc
mov
mov
mov
loop
adc
enter
scas
push
cs
mov
lods
xor
popa
jo
mov
push
test
paddb
stos
dec
inc
pop
fs
les
mov
jb
add
and
test
stos
or
or
mov
out
enter
xor
mov
frstor
xchg
sub
sbb
push
dec
stos
jno
adc
add
sub
mov
pop
sbbl
movsb
sbb
lea
sub
jns
cli
xchg
push
dec
push
les
movsb
dec
cs
add
iret
mov
lea
xor
sbb
add
test
js
int3
sub
cwtl
jae
xor
ja
stos
imul
mov
push
push
shll
pop
lods
pop
hlt
jmp
js
mov
mov
pop
or
test
idiv
lcall
mov
mov
inc
lcall
iret
jo
scas
sbb
rclb
sbb
adc
xor
adc
outsb
ljmp
enter
xchg
fmulp
test
aaa
loopne
xor
xorb
jae
xor
rcl
adcl
xor
out
jne
push
adc
addb
xor
inc
int
push
cmpsb
mov
jecxz
mov
lret
jg
cmp
mov
sub
cmp
adc
ds
jno
xchg
sub
arpl
jg
jmp
lret
jg
pop
movsb
jecxz
push
fdivrp
cmpl
test
mov
xor
adc
je
adc
fwait
jmp
fldenv
lods
lret
sub
fstl
push
mov
xchg
and
and
jg
cmpsl
mov
mov
out
mov
cmp
lods
mov
adc
push
data16
stc
jge
push
fdivrs
loop
cli
dec
iret
movsb
jb
fldl
addr16
inc
test
mov
fcoms
repz
enter
add
push
xchg
shll
inc
rorb
rorb
decb
mov
xor
mov
xchg
sub
into
cltd
jl
and
push
mov
shll
sub
xor
mov
xor
jp
sbb
jno
in
ret
pop
inc
mov
cmp
xor
add
loop
push
jo
rcr
lea
cmp
call
fistpl
push
aas
sub
dec
icebp
cmp
out
cli
fs
movsl
push
popl
loopne
ja
cmpsl
lret
push
sahf
dec
xchg
jg
mov
das
xor
mov
inc
lahf
cmpsl
push
fsubrp
fsub
es
aad
leave
test
aam
mov
hlt
mov
shrl
loope
lahf
inc
adc
xor
ss
pop
push
jmp
mov
jb
fsubrl
cmpsb
scas
sbb
loope
std
ret
xor
rolb
mov
out
add
inc
xchg
sbb
mov
daa
push
lret
fsubrp
adc
add
mov
mov
jns
dec
data16
add
adc
pop
movsl
out
cmpsb
xor
dec
test
daa
adc
lods
andl
push
cmpsl
lcall
ret
xor
lock
jne
repnz
inc
xchg
xor
adc
sbb
shrl
jecxz
mov
ja
fidivl
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
mov
sbb
mov
pop
inc
sub
add
sbb
push
push
push
pop
push
sti
dec
push
mov
cmc
scas
ljmp
test
and
sbb
test
scas
lcall
sbb
inc
xchg
mov
push
dec
ficomps
addr16
pushf
inc
scas
and
data16
ja
stc
mov
mov
mov
movsl
adc
xor
fstpl
jno
fnstenv
mov
leave
ds
fmul
test
cmp
jg
mul
push
push
jno
jg
mov
inc
nop
das
inc
add
pop
js
mov
sbb
xchg
xor
aad
sysexit
addr16
sbb
ds
clc
mov
clc
sti
roll
sbb
ds
iret
stc
pop
xor
inc
jno
mov
bound
cmc
push
movsb
les
jns
jge
pusha
mov
stos
mov
mov
ljmp
sbb
addr16
hlt
add
ljmp
mov
push
dec
xchg
loope
xchg
jbe
mov
iret
movb
inc
test
xchg
setae
repnz
or
add
add
lock
sbb
xor
mov
mov
cmp
and
cmc
xchg
ret
movsl
data16
sub
call
xchg
and
xchg
jbe
clc
mov
pop
xor
dec
dec
inc
push
ss
lock
mov
push
and
aas
mov
enter
aad
xchg
sub
xchg
xlat
xchg
nopl
add
aam
push
lahf
push
icebp
popf
or
std
mov
adc
inc
sbb
lock
mov
push
mov
jmp
imul
test
dec
inc
jge
cmp
movsl
shrb
dec
das
dec
push
mov
roll
mov
push
in
movsb
insl
adc
and
decb
pop
cmp
cmp
je
adc
dec
in
mov
cmp
fldl
cmpps
push
and
inc
push
and
cs
lods
in
jle
cmp
or
sub
pop
call
decb
mov
xor
push
mov
jae
jno
rorb
notl
jo
ds
and
insb
bnd
mov
jmp
es
jo
iret
add
int3
mov
mov
out
dec
mov
out
imul
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
or
pop
out
add
out
out
addb
xchg
push
aad
dec
jae
pop
push
in
ror
jae
xor
cmc
mov
shrl
sbb
and
jno
xor
sbb
push
adc
inc
fdivr
int
mov
add
lods
lret
fmuls
addl
fists
hlt
outsl
popa
aas
jmp
pop
jb
pusha
out
icebp
sbbb
in
sbb
and
jge
cmpsb
lcall
leave
movsb
inc
push
addr16
out
mov
push
notb
out
ss
shlb
idivb
and
lock
inc
mov
aam
imul
jb
add
pop
jnp
or
test
inc
or
mov
mov
pop
jnp
mov
cltd
clc
dec
movsl
xchg
cli
push
jle
push
add
mov
mov
inc
xchg
mov
xchg
out
test
adc
inc
xor
mov
add
xor
int3
cmpsl
jns
adc
repnz
sub
notb
xor
xchg
push
sub
push
xor
push
das
shll
push
xchg
cmp
add
jne
mov
adc
jp
cli
inc
xchg
std
mov
pop
jno
ret
xor
cltd
vdivsd
cmpsl
in
adc
std
inc
lret
adc
test
sbb
mov
jge
xor
fs
loope
sti
fbstp
shll
jg
iret
adc
xchg
sub
push
xor
movsb
jb
or
pop
inc
icebp
fisttps
xchg
cld
adc
jnp
addr16
inc
movsb
push
dec
popa
adc
aad
sub
push
imul
enter
xchg
iret
leave
cmpsb
sarb
dec
psubsw
or
sbb
je
out
dec
cmp
movaps
test
pop
std
int
jge
and
addl
and
cmpsl
jecxz
or
push
add
mov
and
push
fwait
mov
sbb
cltd
xchg
xchg
and
shrl
les
lock
dec
jmp
mov
aaa
push
dec
clc
data16
fwait
push
lods
and
mov
jl
xchg
lods
xchg
adc
pop
mov
out
adc
call
gs
add
cmp
push
ja
or
shll
not
mov
int
gs
adc
ucomiss
loope
mov
push
inc
or
out
xchg
loop
mov
pop
fsubrs
shll
inc
test
inc
in
mov
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
stos
jbe
sbb
mov
ljmp
cmpsb
imul
enter
sbb
mov
dec
jg
mov
cmp
sub
dec
fildll
add
bound
jmp
pop
fiadds
mov
push
add
repz
push
cmp
sub
es
or
outsb
pop
ds
inc
je
andl
imul
lods
popa
or
ds
and
repz
ret
outsl
les
sbb
shl
or
pop
das
arpl
xchg
in
aad
push
adc
adc
insb
aaa
fwait
rcrb
push
in
xchg
insl
mov
fnstcw
pop
dec
and
out
cmpsl
cld
out
pop
mov
cltd
outsb
sub
cld
sbb
xchg
cmpsl
fidivs
jae
popa
mov
dec
jge
rcrl
das
xchg
push
cmpsl
cli
and
dec
mov
inc
jae
movsl
mov
ds
push
xchg
rcll
push
es
and
jle
sahf
addl
sbb
xor
daa
sub
icebp
je
std
loope
xchg
or
inc
dec
into
add
cmp
xor
cmp
movsl
jb
pusha
cmpl
mov
cld
lods
flds
add
push
add
inc
outsb
xor
mov
les
movsl
mov
adc
dec
mov
sar
and
xor
xchg
push
movsb
jmp
and
mov
inc
mov
xor
sbb
sub
call
xor
out
dec
jge
pusha
xchg
fnsave
mov
outsb
push
loop
in
lret
jo
lds
imul
into
rorb
dec
lcall
mov
jbe
mov
cmc
mov
push
daa
sbb
mov
in
inc
jg
lret
in
add
pop
lods
jl
mov
fdivr
inc
fldcw
repz
mov
mov
arpl
loopne
insl
mov
inc
add
cmp
jo
sbb
pop
sub
jle
das
ret
sub
pushf
imul
mov
loop
add
jge
mov
mov
inc
xor
xor
mov
dec
enter
aaa
xchg
test
mov
repnz
roll
add
mov
sbb
xlat
pop
in
inc
test
addr16
mov
popa
les
xor
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
daa
inc
mov
mov
and
xchg
xor
pusha
fistps
push
pop
or
add
mov
ja
and
js
xor
ds
fidivrs
mov
mov
sbb
stc
das
add
xchg
xchg
ss
or
adc
pop
in
inc
mov
adc
mov
cmpsb
std
jne
clc
pop
dec
ror
in
popa
je
rcr
je
sbb
adc
lcall
sahf
sbb
addl
cmpl
aaa
fiaddl
mov
jl
jecxz
outsb
ljmp
jns
imul
dec
jo
xchg
sub
inc
cmp
cld
mov
mov
sub
mov
adc
pop
pop
jmp
aam
jno
in
mov
int3
out
and
rcrl
out
ficomps
inc
aam
out
divb
pop
sub
adc
jmp
addr16
inc
std
mov
imul
push
popf
lcall
cld
sbb
leave
icebp
xor
mov
enter
shrl
pop
mov
gs
adc
jmp
mov
mov
adc
test
adc
push
push
xor
jl
adc
push
pop
call
add
dec
loopne
or
xchg
xchg
cs
scas
loope
in
sub
repnz
insl
jne
and
sbb
pop
fnsave
ja
inc
sub
js
aas
pop
loopne
jns
rorl
imul
arpl
adcl
bswap
in
nop
adc
fbld
cwtl
xchg
mov
roll
mov
jp
mov
repnz
shll
jne
mov
inc
in
in
jb
sub
rolb
adc
out
ret
or
and
js
mov
ss
in
fcmove
dec
pop
fistl
sub
jns
outsl
pop
div
xor
loopne
dec
call
ds
je
aad
call
out
sbb
add
xchg
shlb
and
mulb
mov
scas
movsl
dec
es
cld
mov
xlat
inc
sti
scas
in
in
sub
and
sbb
mov
dec
js
fisubrl
in
push
scas
inc
in
add
fcmove
out
lret
or
jae
mov
jmp
sbb
lahf
out
dec
iret
icebp
xchg
sbb
xchg
cmp
es
jnp
dec
sub
fxch
mov
xor
xor
pcmpgtd
test
sub
test
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
dec
pop
jo
xchg
sbb
mov
jecxz
cs
aad
sahf
xchg
movsb
loop
repnz
aas
and
xchg
xor
mov
movsl
dec
cmc
adcl
cmpsb
in
mov
loope
aaa
dec
addl
hlt
mov
call
js
iret
push
lahf
adc
loope
push
shrl
sub
and
and
jge
movsl
cli
dec
lock
fisttpll
ret
stos
gs
sbb
fisubrs
inc
jns
cmp
hlt
dec
xchg
pop
xchg
ja
sbb
fmull
test
loopne
testl
insl
push
cmp
mov
in
cld
or
int
fmul
push
iret
adc
or
lods
addb
outsb
inc
push
test
and
lret
cmpsl
or
inc
cli
adc
popa
push
push
mov
mov
int
inc
sub
out
xor
andl
cmp
fidivl
inc
sbb
out
lret
inc
icebp
leave
or
loope
int3
jnp
or
xchg
int3
pop
rcll
insb
int3
stos
insl
stc
aad
fs
cmpsl
pop
aas
mov
push
lods
xlat
insb
daa
jge
lea
cwtd
jge
outsb
not
pusha
sti
sub
push
insl
cmp
adc
pop
mov
add
push
jb
fnstsw
mov
inc
and
push
lods
out
dec
push
jle
insb
mov
sbb
adc
jns
out
es
icebp
xchg
dec
clc
test
and
cltd
and
add
fnsave
pop
sbbb
mov
jp
in
push
jle
adc
pusha
lea
roll
sahf
aaa
mov
punpckldq
mov
dec
add
cmp
adcl
lds
lcall
ss
dec
ret
and
rolb
aam
inc
inc
and
jae
add
push
mov
out
pop
adc
push
jmp
jnp
stos
jecxz
xor
sbb
out
rcll
push
sub
jle
add
or
dec
and
jnp
sti
and
lahf
push
in
movsb
cmp
fwait
jle
sbb
das
mov
dec
movsb
xor
mov
icebp
xchg
and
sub
xor
mov
test
cmc
xor
stos
jl
inc
fadd
shrb
jbe
test
outsl
and
fidivs
pop
mov
fcoml
test
decl
lock
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
pop
jp
mov
lcall
loope
jmp
in
mull
xchg
push
mov
push
pop
jnp
ljmp
cld
je
push
mov
and
loope
push
push
pushf
and
shrl
sub
mov
jg
pop
enter
ja
popa
pop
loop
out
test
or
inc
fadd
dec
inc
leave
push
dec
stc
scas
jae
inc
pop
mov
sbb
lods
rcrl
pop
fmuls
add
je
pop
push
or
mov
or
aaa
pushf
test
or
fiadds
pop
push
int3
popa
inc
pop
subb
arpl
jne
pop
bound
sbb
rolb
mov
add
cmp
stc
push
push
xchg
fldenv
add
inc
loope
xchg
out
rcll
in
and
js
ret
mov
loopne
data16
push
lds
popa
sub
lret
sbb
pop
push
adc
add
cmp
mov
jle
subb
cmpb
mov
scas
jo
pop
cmp
push
cmp
push
fisubs
add
jecxz
jo
lods
iret
aas
mov
mov
xor
notb
xor
pop
imul
test
loop
test
out
iret
shll
sbb
xor
push
add
rclb
xchg
sarb
mov
mov
sbb
adc
jge
adc
xchg
add
xor
rcrl
outsl
and
sahf
xor
pushf
xchg
sbbb
iret
aaa
ljmp
pop
xor
sbb
popf
or
hlt
pop
xchg
push
cmp
push
sahf
fdecstp
movsb
in
int
loope
fdivs
mov
xor
jo
adc
testl
xor
pop
jl
or
repz
arpl
adcb
push
add
es
js
jg
std
inc
mov
cld
jne
or
sub
mov
jns
sti
neg
cmpsl
pop
in
xor
popl
xor
notl
add
gs
sbb
stos
daa
pop
mov
fists
fucomip
fiaddl
pop
mov
enter
dec
or
insb
dec
mov
jae
inc
sti
ficoms
mov
pushf
popa
jae
mov
orb
and
shll
xorb
push
cld
fstps
lahf
mov
stos
push
std
ss
or
andps
pushf
lods
push
sub
enter
or
cmp
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
jmp
es
push
imul
ljmp
mov
fisttpll
loopne
sub
inc
mov
inc
xor
ja
xor
stos
push
fimull
pusha
lea
xorl
test
jo
mov
shl
gs
sbb
outsb
inc
out
mov
fimull
adc
xchg
arpl
sbb
mov
mov
in
push
lock
push
inc
addr16
stc
xchg
and
and
jp
data16
fucomip
push
mov
shll
pop
lret
sbb
dec
mov
dec
mov
xor
push
shl
mov
in
sbb
pop
lods
ds
addb
pop
pop
cmpsb
jbe,pn
aas
lcall
jo
mov
inc
mov
mov
adc
inc
jae
pushf
stos
xor
sub
jbe
mov
fdivr
nop
inc
pop
jns
shl
jg,pn
call
or
pop
cld
or
sbb
lret
pop
lret
push
sbb
jns
out
sub
sti
inc
cmp
cmp
cmp
data16
aad
gs
fs
insb
inc
popf
inc
and
push
roll
pop
pop
fidivs
je
gs
outsb
push
jp
sbb
mov
imul
ljmp
inc
push
mov
mov
lods
leave
mull
xor
nop
jb
or
lea
arpl
test
xor
mov
rorb
xchg
jns
pop
loopne
hlt
ret
fcmove
shll
add
das
adc
shll
lds
cmp
les
push
xchg
je
xchg
iret
xchg
xchg
xchg
pop
cwtl
dec
add
js
jl
sub
enter
cmp
xlat
out
sub
mov
jnp
xchg
in
popf
pop
lods
pushf
rorb
into
add
jmp
jns
clc
aaa
ds
lea
push
andl
xor
hlt
popa
pop
dec
sub
aad
cmp
cli
lea
pop
mov
or
xchg
inc
enter
lret
or
dec
pusha
or
arpl
xor
cmpsl
divl
es
in
cmp
add
adc
sbb
jne
jo
fidivrl
jns
fsub
sbb
enter
sub
xlat
idivl
jg
ds
xor
orl
xor
mov
rcll
jp
data16
outsb
stc
std
lret
jle
lret
and
es
inc
hlt
mov
add
inc
add
sub
jmp
test
mov
push
inc
xchg
sbb
lcall
fdivp
mov
arpl
dec
cmp
outsl
inc
cmpsb
adc
loopne
mov
and
movsl
int3
jae
mov
out
mov
and
shlb
and
incb
jae
mov
xchg
shlb
fists
out
inc
push
lds
ds
dec
shrb
inc
cmpsl
adc
dec
adcb
xchg
sub
adc
add
cmp
push
sub
lret
dec
add
std
jmp
dec
stos
int3
sub
call
out
shll
xor
jb
adc
mov
gs
sarb
xchg
jg
rcr
adc
aas
adc
stc
outsl
ret
xor
hlt
mov
cltd
add
xchg
add
outsb
lds
insb
mov
mov
or
dec
sbb
aas
xor
nop
adc
jne
and
xchg
mov
jb
adc
or
sub
dec
push
dec
push
subl
or
arpl
or
push
add
inc
call
jbe
loop
mov
fildl
jmp
ficoml
insb
xchg
shr
add
sub
int3
and
jmp
fwait
cmp
lret
cli
test
out
xchg
call
jecxz
movsb
les
lcall
cmpsb
das
pop
movb
fdivrs
pop
icebp
mov
cmpsb
xchg
pop
outsl
jb
lcall
shll
call
inc
xor
jb
mov
sub
push
shll
mov
or
push
xchg
ss
aad
sti
fs
adc
test
or
mov
mov
ret
test
subl
imul
push
psubb
lea
xor
fs
repnz
or
sbb
in
imul
push
repz
mov
dec
stos
and
mov
in
cmp
ret
jge
or
or
mov
mov
push
mov
xlat
or
mov
and
fistps
dec
and
aas
jecxz
mov
pop
fistps
xchg
mov
lea
repnz
daa
sub
dec
xchg
out
pop
jecxz
cmp
test
adc
cmpl
cmpsl
cmp
xchg
mov
sbb
add
cmp
test
adc
jae
fiadds
adc
imul
fld
inc
inc
ud1
inc
mov
js
jo
dec
cld
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
das
dec
jle
jl
sbb
sbb
out
sbb
es
jbe
sub
xchg
lea
or
cmp
inc
cli
push
mov
cli
jmp
jae
cltd
mov
popf
adc
test
cmpl
cmp
enter
test
sbb
jne
xchg
mov
mov
inc
mov
in
fdiv
adc
add
mov
cmp
pop
dec
pop
pop
std
out
mov
test
push
pusha
cmp
inc
or
outsl
lahf
and
xor
out
mov
adc
loop
mov
jecxz
jo
sub
mov
repz
xchg
cmp
enter
jno
loope
lret
cltd
push
xchg
mov
rcrb
das
sbb
push
and
cmp
in
stc
jb
stos
in
sbb
movsb
xchg
dec
ljmp
cltd
mov
jle
jl
stos
xor
in
movsb
movsl
sbb
jmp
push
aad
xchg
negl
orb
adc
and
call
jge
or
sub
mov
subb
mov
adc
pop
negb
rclb
dec
or
hlt
scas
jp
mov
and
jge
xor
enter
sub
repz
hlt
mov
push
jno
stos
fbstp
rorb
sti
sub
lcall
cmpsb
inc
add
icebp
and
enter
adc
xlat
test
xor
and
inc
jge
fldcw
lret
out
pop
xor
pop
fwait
or
rolb
xor
push
xchg
cwtl
shlb
push
insl
dec
rol
jno
add
dec
enter
fstps
stc
inc
test
cmp
out
mov
mov
mull
xchg
xchg
jae
inc
orl
xor
mov
mov
mov
loope
mov
into
xor
ret
jg
mov
in
dec
ljmp
fcmovbe
cmp
sbb
xlat
cmp
xchg
test
sub
inc
lret
repnz
push
jecxz,pn
mov
out
or
rclb
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
ret
inc
js
sbb
sbb
popa
mov
sub
mov
jecxz
out
insl
in
or
adc
xchg
pop
sub
mov
push
sub
shll
adc
xchg
cmp
insl
xor
loopne
lahf
mov
dec
sub
sarl
mov
xor
xor
scas
xchg
stc
add
mov
jecxz
out
cltd
icebp
cmp
xor
jae
das
out
in
jg
mov
int
jmp
insb
mov
mov
das
and
lcall
in
jbe
push
daa
lahf
or
xorl
fdiv
into
jmp
jecxz
inc
mov
insl
or
insl
les
mov
jno
aam
int3
jno
jecxz
add
dec
mov
inc
daa
push
mov
pop
adc
test
mov
mov
inc
cwtl
rorb
mov
hlt
dec
pop
sbb
push
xchg
aaa
adc
mov
aad
lds
mov
cld
lock
js
dec
jmp
ss
jns
xchg
jge
or
loop
jns
jae
pop
je
mov
rol
ficompl
sub
cmp
xor
jno
ds
dec
jnp
push
push
in
jmp
jmp
arpl
or
test
xor
jg
into
jbe
dec
je
jmp
xchg
adc
sbbl
inc
add
sbb
xorl
out
lock
movsl
mov
sbb
mov
fcoml
in
stos
pop
mov
iret
mov
ss
fs
mov
aam
and
add
xchg
jg
mov
jne
push
iret
imul
lods
dec
outsb
not
or
dec
lods
pop
xchg
add
jo
sahf
pmullw
or
cmp
jnp
adc
fmul
push
mov
push
or
dec
loop
insb
mov
imul
xor
aas
lods
addb
imul
dec
cmc
jmp
push
mulb
sbb
push
adc
lahf
int3
mov
pusha
fsubs
push
pop
outsb
and
outsb
cmpsl
dec
and
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
xchg
jo
je
sbb
sbb
out
jmp
test
mov
daa
jmp
std
outsb
sub
ret
push
out
lcall
jp
inc
loop
rcll
loop
push
mov
xchg
add
decl
fadds
sarb
xchg
ret
push
sub
adc
jno
xchg
test
push
aaa
cmp
xor
add
sub
aaa
push
test
inc
inc
xchg
in
mov
jl
and
or
das
xchg
test
mov
mov
fwait
hlt
int
in
stos
cmpsb
loope,pt
push
fisttpll
notb
inc
push
mov
pop
stc
lods
or
ds
lret
in
mov
jmp
repz
sbb
out
pusha
and
loopne
into
and
pop
scas
cmp
pop
push
icebp
xor
mov
mov
es
sub
inc
dec
pop
mov
aam
ds
add
jae
mov
repnz
xchg
or
and
popa
mov
insl
rcl
stos
mov
dec
lret
pop
push
std
pop
pop
aaa
sbb
jno
lret
mov
mov
int3
js
cmpsb
test
test
je
jne
adc
inc
xchg
mov
scas
jecxz
inc
dec
fimuls
xchg
pop
sub
xlat
sbbb
jp
mov
xchg
dec
and
ret
jg
lret
fdivs
test
jle
push
repz
insb
sub
dec
movsl
or
and
push
and
ja
mov
std
adc
rcrl
outsb
mov
test
pushl
cltd
mov
outsl
mov
mov
sti
pop
inc
in
pusha
push
lret
test
in
cs
scas
pop
mov
pop
sub
mov
push
add
adc
mov
inc
push
jg
pop
mov
sbb
cmc
mov
mov
push
cmp
mov
xchg
pop
shl
jle
fistpl
in
mov
test
ret
loop
out
cmpsb
jl
add
add
lcall
pop
insb
or
xor
addr16
mov
xchg
scas
pop
dec
bswap
cmpsb
js
repz
leave
scas
notl
addr16
addr16
aas
scas
mov
cwtl
call
aas
inc
dec
aas
jno
push
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
idivl
fidivs
lcall
sub
in
xchg
out
push
pusha
std
out
ljmp
add
cmp
mov
in
mov
jbe
adc
adc
test
cltd
inc
inc
lret
into
movsl
jne
stos
add
in
push
push
leave
mov
mov
sbb
sahf
xchg
mov
je
es
jl
sbb
subl
mov
ja
repz
inc
movsl
jecxz
add
sbb
mov
adc
mov
leave
fdivrs
jecxz
push
pop
jmp
mov
add
ss
leave
jmp
or
mov
jne
sbb
inc
icebp
mov
mov
mov
sahf
sti
les
xlat
cmp
ret
pop
and
ds
push
cmc
sub
mov
mov
push
lea
push
mov
lods
pusha
pop
stos
addr16
or
mov
xor
push
mov
js
stos
and
jle
or
sbb
sbb
cmpsb
adc
mov
push
pop
cmpb
jmp
insl
inc
mov
add
inc
sbb
mov
loope
hlt
pop
xlat
les
in
int3
mov
fsub
imul
add
out
pusha
and
dec
test
out
clc
shll
mov
out
pop
fs
adc
orb
inc
inc
xor
leave
std
call
or
jecxz
inc
sbb
fdivrp
push
add
rcrl
adc
nop
adc
and
les
xor
mov
push
pop
mov
adcb
daa
jg
xchg
mov
mov
jle
pushf
jnp
and
iret
adcl
cmpl
mov
pop
shl
push
das
mov
inc
aaa
or
imul
cmp
stc
adc
pushl
jp
pop
pop
and
and
jmp
cmp
adcl
int
flds
lods
sbb
and
stos
cli
fstl
sarl
pop
mov
and
int
dec
popf
pop
call
loop
or
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
pop
jo
push
sbb
sbb
sahf
xor
adc
xchg
scas
adc
sbb
jbe
fwait
insb
dec
mov
les
lret
push
xchg
shlb
and
xchg
pop
mov
and
pop
cmp
mov
fcmovne
add
inc
mov
jg
popf
dec
aaa
push
jae
cli
aas
mov
mov
xor
jl
sub
in
out
pusha
push
or
sub
xchg
insl
int3
lcall
mov
test
je
addb
rolb
lret
int3
ja
mov
inc
mov
inc
inc
and
pop
stos
in
scas
rolb
or
jb
mov
adc
ror
xchg
out
jp
add
cwtl
lods
jae
les
rcll
jb
popf
and
jno
fiadds
ljmp
jmp
sbb
nop
in
xchg
scas
aas
rorb
push
mov
int3
imul
add
pop
imul
push
jno
mulb
jge
sub
popa
push
sbb
mov
scas
decb
mov
mov
and
cltd
aad
cmp
stos
mov
lcall
mov
or
jle
enter
dec
cld
lock
push
insb
push
ret
insl
inc
sub
inc
jecxz
jnp
adc
jae
imul
movsb
jl
test
les
jae
sub
push
pop
pop
add
daa
ss
or
fstl
aas
push
imul
iret
lea
sub
and
in
jg
rcrb
and
addb
stc
inc
sahf
hlt
daa
mov
sbb
adc
scas
popa
xchg
jns
sbb
jmp
inc
adc
sbb
pop
and
pop
pop
push
lahf
push
pop
into
mov
insb
fcmove
inc
pop
ret
in
mov
sub
mov
xchg
inc
out
push
or
int3
mov
dec
add
jo
int3
andl
jo
jg
dec
inc
jae
xchg
inc
cli
push
rolb
shl
push
fwait
jae
es
das
push
adc
dec
movsl
cs
mov
sbb
dec
cltd
dec
lock
les
arpl
xchg
dec
fnstcw
je
and
stos
mov
movsb
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
xor
fistpll
data16
jno
sbb
dec
push
cmp
push
fidivl
jb
xchg
movsl
dec
jbe
test
ja
and
cmp
sub
imul
xor
dec
rcrl
jl
lret
jns
inc
dec
dec
mov
fcoms
and
in
sub
xchg
ret
add
sub
or
mov
dec
sahf
jb
xlat
lcall
addr16
aad
jo
push
and
push
montmul
cmpsb
add
cli
addb
cmp
dec
pop
test
push
mov
mov
add
push
rcll
inc
jmp
xor
mov
mov
test
cld
cmp
into
dec
jns
cmc
fs
ss
push
pop
mov
aas
ds
sti
mov
adc
faddl
cld
aas
or
xchg
nop
fidivs
popf
sbb
movsl
lods
xchg
and
repz
adc
mov
mov
repnz
nop
fldl
repnz
sub
int
pop
mov
mov
jae
in
pop
std
push
ljmp
mov
mov
push
and
mov
dec
jno
in
push
sub
fwait
imul
xor
pop
movsb
adcl
cmpsb
pop
aas
ret
mov
iret
mov
cmp
jb
adc
dec
sub
dec
jns
or
jle
in
sbb
cwtl
in
mov
test
pop
int
pop
es
mov
xor
popa
mov
ljmp
outsb
jns
repnz
repnz
notl
es
add
fwait
adc
mov
lahf
les
loopne
mov
cli
lret
mov
sbb
fcmovnbe
call
adc
test
inc
in
sub
addb
mov
push
pop
sub
dec
hlt
and
out
test
mov
push
jae
mov
in
sahf
stc
aam
jae
inc
ss
xchg
xchg
call
or
into
inc
inc
add
leave
adc
stos
xchg
sarb
sbb
repz
out
sbb
incl
popa
sbb
mov
loop
mov
xor
push
test
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
add
stos
pusha
sbb
jno
sbb
loopne
dec
daa
ljmp
sbb
ja
aas
loop
shlb
push
stos
mov
add
das
push
mov
cmc
in
jae
les
cmp
xchg
xchg
mov
fisubrs
push
outsl
jb
shl
add
pop
mov
cld
sub
or
loope
popa
add
scas
xchg
xor
into
sub
or
pop
push
fwait
rcrl
movsb
mov
inc
std
lahf
mov
dec
mov
mov
cmp
cs
aam
sti
dec
mov
cmpsb
and
mov
xchg
fcompl
inc
loopne
pusha
ja
pushf
jmp
cs
and
sub
sub
sub
xchg
sub
das
clc
pusha
fcoms
and
dec
jnp
xlat
ljmp
inc
mov
mov
out
sahf
int3
les
push
aaa
addr16
jae
lods
adc
cs
insl
or
mov
std
or
in
xchg
icebp
inc
pop
mov
mov
dec
into
xchg
add
les
out
into
mov
mov
jnp
aaa
fwait
lret
jle
int3
jns
fiaddl
cmc
mov
fisttpll
or
push
insl
clc
cmp
inc
repnz
mov
jo
mov
or
idivb
std
dec
stos
sbb
push
in
push
icebp
out
iret
xlat
mov
xchg
call
in
adc
xchg
lret
xchg
lret
aaa
rorl
and
ret
sti
fucomi
sbb
xor
in
outsl
bswap
sbb
add
test
xlat
insl
cmp
push
inc
mov
into
loope
shrb
mov
mov
mov
push
negl
xor
pusha
outsl
mov
stos
rorb
inc
test
out
sbb
add
out
adc
mov
stos
dec
jb
aas
imul
lea
inc
pop
or
xorl
rcrb
sub
add
or
movsb
lods
pop
xchg
xlat
cld
push
xor
push
arpl
les
jo
xor
bt
lahf
test
pusha
cmpsb
push
daa
pop
int
push
adc
sub
cmp
sbb
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
pop
test
sbb
jno
sbb
out
rcr
xor
rcll
ja,pt
mov
mov
and
mov
std
fstpl
ss
xchg
mov
xchg
shrl
pushf
jle
in
bound
in
xchg
xchg
mov
add
data16
and
inc
xchg
pop
mov
leave
pop
mov
inc
shll
jge
push
xor
xchg
sbb
jae
arpl
push
push
icebp
sbb
sub
jb
hlt
sub
push
xorb
or
outsb
dec
loopne
pushf
add
lret
cmpl
sbb
pop
call
movsl
sub
int3
into
mov
sbb
mov
jb
pushf
nop
jle
sbb
inc
movsb
mov
rol
and
pop
fwait
mov
mov
stos
mov
or
out
inc
subl
sbb
jno
xchg
data16
scas
ss
aas
mov
add
pop
js
mov
pop
jg
sub
add
js
addr16
pushf
stos
inc
sbb
stos
cmp
pushf
pusha
fnsave
push
mov
add
imul
dec
andl
pop
imul
fdivrs
cld
push
cmp
pop
out
inc
dec
scas
pop
jmp
mov
add
push
and
test
pop
xor
fdiv
push
push
inc
fs
jmp
push
mov
mov
or
outsl
xchg
adc
adc
int
adc
lret
push
pop
ret
lock
fistpl
ja
iret
inc
sub
push
and
xchg
push
fdivrp
aaa
jle
xchg
xchg
shl
loope
ds
sbb
adc
adc
mov
mov
gs
mov
push
add
pushf
std
xorb
xchg
pop
mov
push
dec
clc
clc
add
lcall
shll
out
mulb
fstpl
lcall
lahf
enter
lds
push
xchg
jae
mov
cmc
test
dec
inc
ret
ja
add
push
jo
pushw
adcb
popa
subb
and
inc
fidivl
cmp
icebp
adc
fwait
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
mov
out
in
cmp
jle
xchg
and
std
cmp
pavgb
in
inc
pop
dec
les
ficomps
cld
jno
adc
scas
xchg
pop
lock
push
or
or
subb
subl
cmp
outsl
fisubl
dec
pop
stc
outsb
int3
sti
jp
and
enter
inc
test
dec
add
les
nopl
lods
movl
add
test
movsb
leave
jp
add
sub
cmpsl
nop
jecxz
dec
pushf
xlat
dec
adc
sbbb
outsl
push
dec
jg
pop
test
inc
adc
jae
fsubs
push
int
testl
cwtl
cltd
popf
or
pop
and
inc
mov
jne
cmp
cli
pop
push
ficoms
std
sbb
mov
sub
dec
pop
cmpsb
daa
aam
push
ljmp
xor
lock
dec
adc
mov
sbb
jmp
inc
dec
sub
push
es
loopne
xchg
dec
lret
mov
cmpsl
out
out
stos
sbbb
pop
scas
mov
hlt
pop
add
jbe
stos
sbb
jns
movsb
jge
xorb
aas
and
out
inc
in
insl
mov
outsb
jmp
jp
and
mov
in
out
nop
add
jg
lcall
out
idivb
mov
icebp
push
sub
jno
addb
cmp
stos
out
pop
cmp
lret
iret
loope
dec
pop
xchg
mov
rcl
gs
popf
jecxz
mov
pop
lahf
cld
mov
push
pop
sub
jmp
add
testb
int3
mov
sahf
imul
testl
loope
cmp
jb
inc
jmp
loop
gs
add
mov
lret
mov
repz
aaa
mulb
jae
jle
add
cmpsl
adc
imul
sbb
mov
mov
outsb
cmp
jbe
xor
in
int3
adc
and
fnstenv
cli
cmp
test
mov
mov
mov
pop
insb
sarl
jle
std
xchg
cmp
insb
or
sbb
and
sub
xchg
sbbl
xchg
ja
pop
inc
scas
test
outsl
add
ret
sbb
cwtl
in
jns
frstor
add
fildl
jne
out
cmc
test
fbstp
imul
cmpb
shl
aad
or
inc
icebp
mov
jno
movsb
popa
cld
lret
mov
mov
clc
stos
adc
xor
lahf
dec
push
and
push
rorl
add
or
ds
lds
cmpsl
movsb
push
mov
jle
mov
nop
arpl
dec
pop
aaa
mov
fsub
mov
ss
push
lods
vunpckhps
ljmp
repnz
test
mov
scas
fisubrl
or
push
sbb
inc
shrl
daa
pushf
lods
jp
aad
dec
cltd
cmp
push
ret
int
loop
inc
xchg
dec
scas
mov
sub
adc
jns
sbb
jge
nop
adc
push
jecxz
test
pop
push
pop
nop
testb
out
lds
inc
sti
ss
lock
pop
push
hlt
push
lods
xor
fistps
fidivs
fwait
push
push
xlat
sub
cwtl
mov
dec
cmp
fdivrl
sbb
lcall
mov
or
inc
xchg
add
arpl
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
adc
inc
fidivrs
mov
xchg
add
pop
xchg
sub
push
orl
cmpsl
insb
jae
mov
pushf
push
rorb
ja
sarb
cwtl
stc
jecxz
scas
jle
lea
push
popl
xorl
sahf
add
stc
dec
jo
and
push
fimuls
int3
leave
inc
push
mov
mov
lea
adc
nop
xor
ds
push
inc
cltd
mov
push
push
out
or
popf
jg
add
loope
sbb
mov
aad
rorb
sbb
ljmp
gs
xor
lea
and
adc
jmp
and
xchg
jae
and
daa
mov
int
jns
aas
add
add
dec
or
shrb
popa
push
push
cmc
and
fidivl
ljmp
in
roll
sbb
mov
out
jecxz
push
lret
mov
or
and
aad
imul
mov
add
sbb
je
test
aam
or
jbe
bnd
jbe
mov
xor
jbe
xchg
mov
and
sbb
cmpsb
cltd
xchg
fcomps
dec
aaa
repnz
or
mov
ror
xorb
jns
popf
nop
mov
jb
nop
cmp
dec
in
mov
sbb
mov
stos
cmp
cmp
inc
mov
add
cmp
js
cmp
jmp
cs
gs
jge
adc
sbb
cmp
add
sbb
dec
add
push
or
cltd
dec
test
lds
mov
mov
push
and
or
dec
icebp
sub
outsl
rclb
mov
mull
cli
in
adc
xor
or
pusha
add
adc
cmp
push
pusha
sub
or
das
sub
ret
test
adc
aad
jo
lcall
aad
push
sahf
ret
int
jecxz
lods
mov
push
jmp
pop
mov
rorl
jle
mov
mov
jno
xchg
sbb
insb
int3
stos
das
add
pop
test
imul
psllw
or
mov
pop
cld
cmpb
lret
sti
mov
repnz
stos
ljmp
into
dec
test
repnz
sub
stos
pushf
aaa
mov
xchg
inc
negl
inc
fisttps
adc
sbb
xchg
jbe
xor
add
js
cmpsl
aas
jnp
fdiv
jnp,pt
icebp
mul
adc
repnz
push
xlat
mov
push
sbb
push
test
out
nop
lock
xor
mov
aaa
out
lcall
inc
dec
jno
cmp
jae
js
push
movsb
cmp
inc
pushf
or
jb
test
lcall
push
add
jmp
movsl
outsb
fildl
pop
popf
cltd
out
pop
scas
inc
imul
test
inc
pop
sub
ret
aaa
loope
ss
sbb
add
fisubl
push
push
push
inc
aas
jae
aas
rcll
cli
bound
jae
movsb
or
adc
shrl
and
xor
loopne
imul
dec
sbb
add
xchg
xchg
lea
movsb
outsl
pop
lds
notb
aad
std
mov
inc
lods
clc
jl
sub
xorl
inc
insb
dec
cmp
push
add
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
test
sbb
mov
loope
push
sub
mov
or
pop
cltd
lahf
xchg
pop
add
pop
adc
jb
aaa
das
sbb
fmull
xchg
jo
jbe
pop
sub
mov
mov
stos
mov
cmp
lock
cltd
inc
jmp
sti
test
dec
dec
cmpsl
xchg
mov
gs
mul
push
push
mov
mov
push
mov
add
lea
jg
fsubrs
pop
push
addr16
fmul
mov
mov
cltd
fistpl
push
sub
mov
inc
sti
js
push
push
and
or
sti
pop
subb
or
repz
rorb
and
push
movsb
movsl
sti
dec
cmpsb
sbb
movsl
int
add
out
out
popa
cmp
add
cli
adc
sub
shlb
ja
push
pop
fs
mov
repz
mov
push
loop
out
scas
jg
stos
aas
xchg
sbb
out
ljmp
cld
insl
sub
subb
fnsave
lret
loop
xchg
mov
cmpsl
popf
in
or
cmpsl
pop
and
mov
sub
mov
cwtl
fadds
push
ds
out
sbbb
out
adcb
les
cmc
cltd
arpl
inc
aaa
pop
sbb
xor
pop
sub
mov
and
fwait
popa
ljmp
andb
into
mov
loop
fwait
mov
sub
pop
fwait
pop
xchg
mov
clc
out
int
adc
sbb
mov
int3
sti
pop
in
cmp
js
jecxz
push
addr16
mov
mov
inc
dec
cmp
mov
test
orl
mov
icebp
sbb
or
push
and
addr16
in
stc
arpl
fsubs
jmp
xor
mov
jns
arpl
arpl
mov
out
mov
xchg
scas
outsl
xor
sbb
mov
int
and
scas
in
mov
inc
pop
mov
xchg
pop
or
adc
xchg
add
pop
cmc
in
out
out
xor
add
push
inc
loopne
cmp
ret
sbb
insb
aad
repz
fnstenv
popf
or
pop
cmp
dec
push
iret
test
es
iret
inc
jecxz
jne
test
loop
stos
sbb
iret
cmc
pop
leave
pop
xchg
ficompl
cmp
or
pop
adc
out
adc
inc
es
loop
and
in
scas
sarb
jle
jl
movb
push
adc
mov
push
push
mov
jmp
xchg
jle
leave
imul
add
lcall
inc
sub
sbbl
mov
movsl
fs
jge
das
fcompl
popf
movb
jnp
fucomip
dec
sub
hlt
and
pop
fucomip
xor
or
testb
or
push
insl
pop
xlat
jle
insb
orb
mov
push
aam
pusha
mov
sbb
rcll
push
outsl
pop
and
mov
sub
cs
cmpsl
cmp
dec
xchg
fwait
sbb
push
data16
imul
push
inc
xchg
ss
movsb
test
mov
sbb
mov
sbb
mov
ljmp
ljmp
mov
sub
rcrl
inc
inc
xchg
mov
pop
shll
mov
sbb
push
cli
cwtl
dec
xchg
mov
ss
push
cmpsb
lock
adc
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
mov
sbb
adc
loopne
mov
je
test
inc
add
push
dec
and
push
mov
dec
addr16
cmp
or
sub
push
test
pop
and
popf
dec
adc
repz
lret
and
cmc
adc
sbb
pop
lret
xchg
and
cwtl
or
hlt
loop
push
divl
sahf
ja
insb
mov
mov
pop
pushf
and
nop
jp
or
call
fisttps
in
movsb
push
pop
test
into
xchg
lods
orl
jmp
sub
mov
imul
mov
jl
xchg
cmp
adc
sahf
cmpsb
lods
lods
sub
insl
mov
lods
ret
jbe
dec
cmpsl
addr16
shrl
pop
jmp
pop
fcmovb
pushf
cmc
and
cmp
repz
jb
rcl
cmp
das
sbb
or
test
add
decl
cmp
xlat
repz
sub
mov
loop
adc
cwtl
jnp
popa
jmp
scas
idiv
and
fdivr
or
push
repz
fdivrl
sahf
jmp
stc
jns
add
sub
adc
inc
dec
adc
mov
mov
add
movsb
ss
push
aam
and
sar
and
loope
outsl
andl
add
mov
xchg
push
lcall
test
lds
scas
in
mov
popf
jns
or
cmp
sbb
aam
scas
push
xchg
xchg
iret
test
pusha
lret
mov
inc
nop
scas
pop
cmp
adc
sbb
fsubr
sub
pop
jmp
mov
push
inc
xlat
or
js
leave
fsubl
ljmp
adcb
repnz
adc
movsl
fiadds
in
cmp
and
or
inc
daa
paddusb
xchg
lahf
mov
scas
ret
jp
nop
mov
shrb
call
xchg
jp
push
push
xor
adcb
inc
mov
pusha
in
mov
imul
stos
pop
xor
mov
lahf
out
leave
dec
inc
add
push
xchg
xchg
push
hlt
dec
adc
das
sub
loop
frstor
cmp
sub
fldt
test
repnz
nop
push
pop
lret
inc
cs
adc
sub
data16
sahf
pop
in
mov
mov
cmpl
jp
stos
xchg
jns
and
inc
sub
jp
cmp
daa
pop
sti
sti
lock
push
and
sbb
repz
sbb
jmp
aad
or
out
daa
push
jmp
loop
in
rcrl
mov
xchg
pop
in
mov
std
jae
push
jns
lods
mov
leave
xlat
daa
popf
cmp
jl
add
loop
lods
jno
jl
mov
es
mov
or
xor
out
push
xchg
jo
mov
call
jge
add
add
je
jecxz
lock
jno
xchg
push
fwait
adc
into
xchg
ret
mov
sbb
or
ror
mov
es
lcall
lahf
mov
lret
int
testb
add
jmp
fnsetpm(287
int
inc
loop
cmc
xor
mov
dec
or
dec
aam
pop
cli
loopne
jbe
wrmsr
add
ret
lret
call
shlb
pop
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
test
idivl
sbb
stos
adc
sbb
mov
std
pop
push
add
divl
out
rorl
mov
push
sti
cli
push
rclb
ljmp
int
cmc
repz
or
lcall
sti
sub
fcoml
mov
repnz
lcall
das
aas
movntq
outsl
add
lods
mov
in
hlt
je
xorl
sub
pop
cltd
lahf
lock
inc
ror
adc
loopne
jbe
adc
jbe
rclb
mov
outsb
loopne
notl
xchg
lods
cmpsl
mov
add
loop
jle
nop
cmpsl
addb
popa
orb
dec
push
inc
jl
adc
add
add
cmp
adc
sbb
outsb
or
adc
mov
jo
sti
push
inc
mov
mov
out
sub
sahf
and
pop
out
insl
xchg
xchg
test
xchg
ja
subl
dec
in
cs
scas
fstpt
fadd
pop
daa
mov
xchg
cld
xor
stos
adc
ret
inc
add
sbb
dec
and
pop
add
cmp
out
or
sbb
out
mov
daa
mov
push
inc
inc
add
cmp
push
js
aad
aaa
jne
mov
jmp
jl
sub
lods
adc
push
adc
push
sub
mov
cltd
mov
and
mov
cmp
mov
mov
dec
cli
pushf
fildll
lahf
and
jl
xchg
push
add
or
xchg
rcll
cmp
imul
xchg
pop
add
or
adc
xor
jecxz
cmp
push
mov
stos
test
or
pop
arpl
dec
and
mov
fnstcw
sub
xor
pop
aaa
inc
mov
sbb
pop
cmc
adc
sbb
loope
cmc
lods
loop
cmp
nop
aam
outsl
bound
cmp
sahf
jmp
stos
xchg
repnz
fdivr
cmp
mov
cmp
insl
push
mov
pop
pop
fsts
stos
sbb
push
cwtl
xor
cmp
cli
pop
add
jecxz
jge
in
add
iret
enter
lcall
out
xlat
or
movsb
jge
and
xchg
test
cwtl
out
hlt
data16
add
jns
sub
shll
mov
fistpll
divl
sub
outsl
xorl
outsl
leave
xchg
xor
adc
dec
inc
xchg
sahf
lods
mov
and
shll
popf
push
push
mov
push
leave
std
pop
loopne
jp
andl
sub
mov
das
cmc
dec
out
lea
imul
sub
pop
nop
adc
xor
in
jmp
mov
mov
mov
pop
icebp
scas
clc
das
pop
sub
mov
nop
xor
repnz
mov
lods
orb
out
push
stos
add
or
and
dec
scas
xor
cmp
std
cld
xor
imul
and
dec
shlb
dec
stos
mov
sub
cmp
fnstcw
cmp
cmp
push
xchg
dec
jae
add
nop
inc
jmp
jl
pop
push
ja
dec
xor
xchg
xchg
insb
pop
xchg
inc
pop
dec
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
sbb
sbb
stos
adc
sbb
jno
sub
xchg
mov
popa
xchg
inc
mov
dec
lret
mov
movsl
fidivl
mov
shlb
call
xor
or
xor
sub
out
jae
sahf
lcall
addl
je
xchg
jle
into
outsb
mov
pop
lock
out
or
sbb
outsb
jne
loope
mov
jmp
and
and
popf
push
xor
and
in
push
movsl
mov
adc
push
test
call
gs
rcrl
cmp
or
add
adc
adc
cld
inc
fistpl
loopne
dec
cmp
int
cld
fwait
or
stos
xor
outsb
test
out
out
add
insl
arpl
inc
in
shlb
xor
aad
mov
cmp
daa
aaa
inc
push
les
dec
xchg
sub
stos
mov
mov
dec
inc
dec
mov
clc
mov
popf
cmp
pop
dec
in
xchg
dec
mov
aaa
shr
out
jge
xchg
std
cltd
xorl
fdiv
popf
mull
leave
mov
cmpsb
push
inc
or
or
or
pop
cmpb
cmpsl
jae
jecxz
cwtl
iret
hlt
test
inc
add
shll
in
repz
dec
loop
cmc
push
add
mov
mov
push
mull
cwtl
je
addr16
adc
ljmp
adc
sub
mov
pop
dec
outsb
xor
xchg
iret
push
in
mov
push
cmp
loop
cmp
ja
add
jecxz
mov
stos
call
xorb
xchg
push
int
mov
adc
std
cmp
jno
movsb
adc
mov
mov
popa
jo
lods
pop
bound
and
pop
popf
fdivl
push
pop
and
mov
dec
jmp
int3
loop
cs
jb
adc
popf
push
jns
xchg
xchg
mov
push
das
adc
mov
vpsadbw
xchg
scas
pop
outsl
add
test
add
and
inc
xchg
pushf
pop
aaa
lds
mov
addb
ja
cli
mov
out
mov
mov
stc
jecxz
ret
cs
pop
inc
cmp
cmp
mov
dec
mov
inc
pop
push
xor
ss
or
and
jle
xor
push
mov
dec
ja
pop
in
inc
dec
adc
dec
gs
inc
in
imul
add
push
xchg
loope
mov
insb
cld
inc
jns
rolb
mov
in
xor
push
jno
xchg
aaa
daa
fdivs
mov
lret
jmp
insb
mov
jmp
test
push
mov
in
or
rclb
add
pusha
loopne
adc
test
adc
and
xorb
sbb
pop
mov
pop
mov
jno
lea
adc
or
xlat
adcl
pusha
cmpsl
dec
mov
jne
mov
jns
mov
movsb
jp
inc
inc
fs
dec
mov
mov
adc
and
jg
out
lret
sub
sti
stos
insl
dec
cli
je
inc
aas
mov
push
out
mov
std
gs
rep
fcoml
fdivrs
ss
int3
pop
inc
ja
repz
out
rcr
jb
in
sbb
loope
pop
and
mov
add
dec
dec
inc
fsubr
rorb
and
jp
lods
rolb
xchg
das
dec
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
lea
sub
sbb
adc
sbb
repz
mov
loope
add
shrl
roll
push
daa
ss
popa
repz
fwait
inc
cli
mov
pop
xchg
jb
inc
out
stos
mov
dec
jp
icebp
xchg
and
pop
pushf
js
mov
lret
lods
stos
cmp
shr
xchg
mov
inc
js
js
scas
arpl
test
loope
popf
lahf
in
leave
call
lea
add
mov
loopne
call
jecxz
jge
repz
xor
lock
xchg
mov
adc
shl
jb
clc
sbb
mov
repnz
dec
cmpl
jp
cs
xor
gs
and
mov
or
gs
lret
jecxz
out
in
fcompl
or
inc
cmp
push
cwtl
dec
sbb
mov
cmp
outsb
scas
jl
cld
dec
mov
push
add
pop
bound
xchg
pop
fld
dec
xchg
je
mov
hlt
filds
aam
orl
mov
insl
sub
sahf
inc
ret
adc
popa
xchg
call
push
clc
shl
mov
testl
cli
inc
push
hlt
imul
sub
push
in
dec
and
inc
xor
xchg
mov
jl
movsl
adc
aas
mov
cmp
stc
jb
sahf
and
and
sbb
jl
mov
fbstp
pushf
pop
or
pop
imul
xor
rcrb
jmp
or
in
mov
mov
cmp
enter
imul
xchg
stos
pop
jo
adcb
adc
aas
test
mov
out
fcmovnb
dec
jge
cld
cmpsl
mov
push
or
adc
loopne
dec
cmp
mov
adcl
bound
fcomip
movsb
jb
jecxz
mov
inc
cwtl
xor
mov
sub
out
pop
pop
xlat
pop
xor
jno
mov
pop
pop
mov
and
sti
pop
shrb
mov
and
in
cld
fcmovnu
inc
loope
lods
mov
test
jae
repz
les
sbb
fistpl
rcrb
jo
mov
jns
xor
cs
push
aas
cltd
jge
sub
mov
xor
push
leave
ds
mov
sbb
and
int3
mov
cs
icebp
add
and
int
lock
cmp
push
adc
mov
data16
shll
jno
mov
mov
mov
lock
mov
mov
fs
add
push
inc
stos
in
add
lock
pop
movsl
mov
xlat
and
popf
lods
fwait
call
or
lcall
setle
cmp
pop
test
in
sbb
pop
dec
push
frstor
sbb
mov
add
jno
pusha
inc
imul
fnstcw
push
jl
add
ss
sbb
rcrl
mov
negb
sub
int3
shl
inc
lods
stc
dec
mov
pop
sub
jp
int3
cmp
sub
mov
test
aas
xchg
mov
jge
into
xchg
out
add
fsubs
out
das
imul
push
sub
into
enter
loop
jmp
insb
sub
imul
or
sub
stos
cwtl
mov
pop
bound
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
out
mov
rclb
sbb
js
mov
movsb
push
dec
xor
pop
xchg
xor
push
icebp
jp
loop
aas
jbe
pop
sbb
or
and
pop
cmp
stc
mov
mov
loopne
jp
ret
xor
add
jo
jl
jae
dec
dec
mov
adc
mov
and
jecxz
std
mov
fcoml
lret
leave
xchg
add
insb
and
push
lcall
divb
je
adc
adc
scas
test
jne
cmp
sbb
jl
sahf
jge
les
lock
clc
loop
adc
jl
shll
ljmp
shll
sbb
sbb
or
cmpsl
cli
sbb
lods
lret
add
or
dec
mov
std
shl
push
sbb
sub
adc
sub
sbb
inc
mov
sbbl
xor
jo
mov
stos
into
out
and
cmp
or
push
xchg
rol
jl
sub
aas
add
adc
pop
mov
fwait
mov
pushf
fcompl
xchg
add
in
ja
push
cmp
add
mov
inc
adc
jl
mov
mov
xchg
addr16
jbe
lods
sti
leave
sahf
sbb
push
dec
pop
xlat
hlt
jle
jle
jbe
mov
xchg
push
adc
xchg
fwait
insb
ss
xor
roll
data16
stc
addb
lds
bound
cmp
lods
jae
and
das
and
cmp
push
adc
das
pushf
jecxz
push
sub
mov
push
jne
push
sbb
and
mov
ljmp
bound
xor
sbb
loopne
dec
push
mov
ja
or
loopnew
xchg
in
frstor
fimuls
aad
push
nop
imul
mov
das
cmp
cmpsl
repz
fcmovnb
sbb
and
xchg
add
or
fcoms
nop
add
mov
inc
fistpl
or
ja
in
jmp
add
outsl
jl
imul
adc
mov
xchg
pop
jmp
mov
dec
sub
pop
jmp
sbb
sub
mov
out
pop
cs
push
cltd
sub
or
stos
dec
xchg
xchg
data16
xchg
sbb
mov
jecxz
movsb
lahf
or
mov
pop
es
aaa
fwait
shl
test
lret
loope
jne
dec
ljmp
andb
push
dec
out
aam
ja,pn
idivl
outsb
cmp
mov
push
inc
mov
mov
aaa
push
mov
movsb
sub
mov
sahf
jb
mov
in
pop
mov
pop
and
mov
xlat
gs
push
mov
sbb
call
lock
dec
dec
js
outsl
loop
pop
add
aas
out
dec
test
dec
adc
push
inc
jl
test
ss
je
iret
pop
mov
jno
or
nop
roll
or
and
push
hlt
data16
add
notl
adc
xchg
std
pop
and
xchg
sar
mov
sub
inc
add
lock
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
push
fnstsw
sbb
sbb
adc
sbb
sbb
ds
xchg
mov
add
push
rcl
iret
jb
xor
add
shlb
jecxz
imul
in
pop
lret
jae
and
test
jo
xchg
jb
push
insb
add
or
cmp
dec
test
xor
lds
mov
inc
mov
popf
sahf
sub
rcr
out
adc
lret
dec
xorl
ret
paddd
add
cmp
sub
pop
inc
fwait
ret
dec
in
pop
int3
outsb
mov
inc
fstps
call
cmp
xchg
test
lret
xchg
bound
push
adc
out
xor
fwait
int3
adc
inc
sub
imul
add
push
mov
fdivp
pop
insl
pop
push
nop
and
daa
jecxz
inc
cmp
xchg
cli
out
fs
add
cs
cmp
lock
inc
pop
lock
je
inc
int
test
jle
xor
push
mov
outsl
cmp
mov
cmp
cltd
adcl
loope
sbb
jns
test
clc
cld
rorb
lcall
cli
adc
sarl
rorb
xor
push
mov
sbb
lcall
idivl
cmp
in
les
fisubl
es
mov
mov
jo
jbe
dec
xorl
fistpl
add
pop
xchg
mov
repnz
inc
adc
mov
les
mov
mov
mov
lcall
popa
xor
inc
stos
in
les
test
lcall
cmp
fldenv
pop
adc
scas
push
jb
sbb
sbb
cmpsb
mov
pop
filds
cmp
fisubl
sbb
insb
out
je
jne
out
ret
or
mov
fs
fisttpll
dec
xor
out
aaa
sbb
stos
jbe
xchg
sub
in
inc
mov
push
jb
mov
icebp
loop
adc
mov
or
jbe
in
dec
push
xor
pop
mov
icebp
in
out
aas
xchg
cs
xchg
mov
jge
aaa
fldt
push
pop
jbe
aad
xchg
push
mov
xor
sbb
mov
jg
dec
mov
call
mov
mov
mov
ds
cld
ljmp
mov
outsl
leave
and
repz
cmp
pushf
insl
sbb
out
pusha
add
shlb
mov
movsb
and
adc
mov
cmp
or
sbb
mov
stos
cmp
mov
insl
insb
sti
mov
bound
xchg
jbe
imul
jno
adc
mov
cs
pop
insl
data16
push
pop
cmpsl
clc
out
inc
daa
shlb
sahf
movsb
sti
pop
push
push
fisttps
push
or
or
outsb
sbb
fistpl
adc
outsl
dec
fstps
mov
mov
das
mov
push
jb
xlat
lea
mov
lock
push
bound
jmp
mov
pushf
add
rorb
cmp
lahf
iret
incb
dec
pop
and
mov
sahf
negl
es
xchg
stc
or
sub
test
push
push
pop
sarl
pop
pop
ffree
mov
cmp
aas
sub
xchg
jae
in
sub
xor
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
mov
push
sbb
pop
inc
daa
mov
ds
and
xchg
fs
sahf
add
lods
or
insl
mov
jae
push
jae
inc
push
inc
sbb
stos
sub
add
sbb
xchg
popf
or
loopne
inc
adc
xchg
xchg
stc
pusha
shlb
push
pusha
std
in
adc
mov
aaa
adc
adc
mov
push
xchg
aaa
adc
clc
push
push
sub
ds
jp
scas
pusha
shll
mov
outsl
scas
outsb
jo
incl
mov
aam
inc
mov
pop
mov
sbb
xchg
test
decl
negl
sar
xchg
add
push
addr16
jmp
jno
fcmovnbe
cmpb
sbb
inc
mov
add
jge
scas
cltd
popa
cmpsb
mov
mov
mov
dec
lret
cwtl
mov
sub
mov
loop
cs
mov
jno
or
clc
add
mov
addb
add
xor
jmp
jb
cld
cs
aas
insl
mov
repnz
pop
mov
iret
shlb
and
sti
lock
mov
movsl
inc
mov
push
pushf
ds
mov
popf
push
daa
push
mov
dec
jno
idiv
jmp
into
cmpsl
js
adc
xchg
push
inc
in
call
test
fnstsw
in
xchg
jne
subb
in
adc
in
int
cmpb
and
ljmp
sub
jle
repnz
mov
mov
test
mov
mov
mov
inc
cmp
subb
mov
sbb
pop
xor
lods
fdivr
pop
cmpsl
fdivrl
adc
sbb
xchg
mov
xor
cmpsl
mulb
lock
xor
xchg
test
pushf
pushf
xchg
popa
dec
add
pop
inc
test
into
out
inc
add
lods
push
mov
push
push
aas
push
or
imul
mov
push
repz
push
fst
iret
add
test
aas
xor
dec
test
icebp
in
imul
xor
pop
or
daa
fcomi
fiadds
pushf
and
es
and
loop
arpl
imul
jae
aad
std
xchg
mov
loope
out
fdivl
cmp
push
and
cmp
les
inc
add
fcompl
lods
jg
dec
push
cmp
lret
ja
xor
lods
mov
ss
mov
push
jp
dec
imul
cmc
sbb
fcmovnb
mov
test
arpl
jecxz
sub
sti
pop
push
jno
mov
sbb
stos
mov
cmp
adc
cmpsb
and
cli
or
shrb
xchg
fiadds
xchg
cmpsb
xorb
lret
inc
and
jnp
jns
nop
rcrb
nop
outsb
xor
fsubrp
bound
push
imul
cld
cltd
push
loopne
fmuls
dec
aaa
fildll
cmp
gs
addb
mov
movb
push
stc
pop
jmp
scas
fldenv
add
cmp
cwtl
push
aam
das
jmp
sub
out
xor
push
gs
pop
xor
mov
push
add
xchg
xchg
add
in
test
jne
mov
xorl
mov
mov
adc
sbb
xchg
daa
fidivrl
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
mov
mov
mov
sbb
xchg
jg
clc
push
xor
jb
std
xchg
inc
loop
jnp
aam
jecxz
mov
xchg
addr16
push
outsb
adc
lea
push
out
out
mov
dec
xchg
not
push
in
mov
jle
sbb
ja
mov
mov
xchg
addr16
ficoml
enter
jno
data16
icebp
scas
lods
fwait
nop
ficompl
popa
push
dec
aaa
fdivrl
cmc
pop
push
push
clc
cmp
xchg
mov
insb
out
sub
sbb
dec
xchg
cwtl
lahf
push
test
pop
or
cmp
sbb
push
or
add
fwait
in
and
inc
xor
insl
insl
jmp
mov
or
sub
cmp
jmp
adc
xchg
enter
cmp
pop
push
mov
leave
jne
mov
iret
inc
push
xchg
sbb
jnp
repnz
cs
jle
fs
cwtl
shrb
je
xchg
cmp
mov
lds
mov
scas
ret
out
xchg
dec
in
adc
into
sub
push
mov
xor
dec
cmp
push
xchg
push
dec
mov
mov
jp
es
adc
loopne
push
out
pop
lretw
jae
and
sbb
and
mov
sub
sbb
ja
jb
loop
push
push
icebp
mov
dec
cmp
jnp
mov
and
jl
test
in
dec
rcrb
xor
pop
mov
inc
pop
sarl
cmp
pop
mov
nop
imul
ret
fistl
popa
dec
fiaddl
cld
ljmp
std
and
es
lock
lret
xor
xchg
or
xchg
ljmp
sub
pop
les
adc
pop
jo
popa
push
add
fprem
mov
shrb
push
sbb
push
js
iret
cmp
call
movsl
lea
sub
sub
pop
loopne
jb
xor
inc
inc
lods
or
scas
adcl
xchg
nop
pop
icebp
cld
jp
rorb
int
lret
cmc
mov
push
or
fcmove
push
shll
inc
add
pop
movsl
xlat
xor
pop
jns
push
andl
inc
out
aaa
movsl
in
mov
movsl
les
in
jns
repnz
clc
pop
es
push
xchg
mov
out
inc
sbb
orl
mov
push
andl
inc
imul
push
repz
push
mov
iret
push
xchg
jle
sub
pop
adc
scas
lods
jle
jnp
in
test
and
push
scas
push
rclb
cmp
xchg
xchg
mov
outsb
mov
pop
es
sub
push
push
adc
cmp
bound
jge
rcrb
xorb
scas
test
lock
dec
cmpsb
dec
pop
ret
clc
inc
xchg
xchg
add
inc
jne
adc
pop
mov
pop
mov
sbb
sbb
rcll
popa
lret
sub
andb
cmc
xor
pop
cld
outsb
jns
push
jmp
sarl
push
mov
xchg
push
mov
notb
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
sbb
push
sbb
dec
and
push
movsl
add
movsl
jle
out
out
mov
or
negb
fbstp
push
pushf
ds
cmp
mov
mov
mov
pushw
popl
and
out
xor
push
iret
in
inc
call
xchg
push
aam
cmp
add
or
je
movsl
dec
ficompl
add
loope
inc
std
jae
adc
fs
orl
dec
push
in
adc
mov
adc
or
pop
in
fldl
nop
pop
loop
cwtl
mov
sbb
adc
xchg
stos
shlb
and
push
xchg
mov
inc
cli
mov
xor
xchg
xchg
jg
mov
adc
mov
mov
notb
lock
stc
or
stos
ret
sub
sub
push
push
mov
fcompl
mov
and
or
ss
ret
movsb
xchg
add
add
test
stc
sti
mov
aaa
pop
pop
push
jl
push
jns
push
jle
je
jmp
sarl
push
jl
addb
shll
pushf
xchg
pusha
cld
xchg
pop
ret
add
clc
sarl
dec
pop
int
mov
jb
xchg
sub
aad
int
mov
mov
stc
xchg
ja
adc
packssdw
lcall
mov
call
sub
in
adc
jo
and
xchg
das
jecxz
and
in
imul
int
cli
sbb
and
test
aam
or
enter
cltd
pusha
xor
inc
sub
adc
ja
pushf
repnz
push
iret
mov
cli
jecxz
jb
adc
movzwl
cli
cmp
movsb
mov
pop
es
jbe
shr
sub
sbb
iret
mov
jno
cmp
cld
pushf
jg
mov
int3
cmp
lods
mov
push
repnz
andb
jecxz
outsb
jg
imul
mov
mov
outsl
fisubl
test
ret
cmp
aad
stc
xchg
aam
movsb
mov
scas
pop
or
jno
cmp
and
dec
ss
pop
lret
ficoms
mov
daa
cmp
ss
inc
jae
or
mov
push
pop
or
fwait
bound
ds
mov
out
pushf
cld
jmp
push
xor
mov
and
mov
jae
cwtl
or
cmp
push
xor
fwait
mov
mov
rolb
mov
mov
in
mov
pushf
xchg
icebp
lret
jle
arpl
and
insb
add
xor
pop
int
push
pop
mov
pop
sbb
in
repz
mov
mov
mov
pop
iret
mov
iret
pushf
inc
into
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
jo,pn
push
add
sbb
jle
sub
into
and
cltd
mov
and
xor
inc
adc
into
bound
mov
or
add
jbe
lods
shlb
sbb
fists
pusha
std
aam
xor
inc
mov
sbb
test
push
popl
cmp
sub
sbb
push
cmc
inc
xor
xchg
xor
sbb
test
jp
pop
cltd
pop
mov
cmp
out
sbb
dec
call
cmp
rol
push
pushf
leave
mov
or
adc
lds
out
jnp
inc
push
lds
push
gs
dec
inc
mov
sub
pop
stos
push
adc
jle
dec
ja
fwait
inc
test
int
jb
and
mov
dec
and
sahf
push
int
jp
das
fcmove
imul
xlat
cmp
jp
popa
mov
adc
stc
or
out
xor
mov
mov
and
fs
add
xchg
loop
jmp
mov
jb
mov
sbb
sbb
jb
sbb
push
sbbl
adc
sar
pop
sub
cmp
inc
sbb
stos
mov
cld
push
sub
fistps
xor
xchg
cld
sbb
cmp
loope
push
shrb
or
jmp
jnp
sbb
xor
idivb
into
mov
xlat
xor
jecxz
call
les
jg
fisttpl
dec
push
sbb
add
xchg
arpl
inc
loope
xor
sbb
push
xchg
push
xor
xor
cld
pusha
punpckldq
int
cltd
js
lods
js
adc
das
aad
lock
fcoml
mov
mov
mov
adc
loop
hlt
and
cmc
adc
jp
enter
int
xchg
mov
or
outsl
jae
sbb
imul
add
stc
or
mov
test
jnp
or
xor
mov
xchg
fsubrs
pop
ret
das
out
cmp
or
pop
loopne
stc
movsl
imul
push
adc
lock
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
jl
cld
push
sbb
pop
cwtl
loopne
addr16
xlat
inc
ja
stos
mov
jbe
stos
mov
xor
sub
test
dec
mov
iret
sub
and
pop
mov
cmp
in
or
stos
pop
pusha
lcall
sahf
jp
and
insl
leave
aas
jmp
and
shrb
pop
notl
pop
fldenv
mov
icebp
icebp
cwtl
xor
addl
js
fdivrs
mov
cmpsl
mov
lahf
adc
cmp
inc
inc
mov
dec
rorl
aas
mov
gs
xor
dec
mov
nop
pop
push
roll
test
frstor
mov
aaa
xchg
fists
mov
xor
jo
clc
sti
inc
lcall
and
cs
cmpl
or
pushf
or
shll
push
xor
stos
addr16
dec
pop
imul
push
push
nop
sub
addr16
stc
jae
out
push
test
jp
daa
incb
shll
test
rolb
lret
xchg
movsb
sbb
pop
mov
mov
enter
sub
jns
jbe
fnstsw
rcrl
jmp
xchg
stos
pop
mov
jl
loop
aam
xchg
jmp
push
or
enter
jge
sub
cmpsl
xchg
sub
jmp
sbb
mov
movsb
aaa
cmp
mov
xor
jo
dec
cmp
xchg
icebp
sbb
mov
and
mov
lret
fsubs
cmp
cmp
xor
mov
cmpsl
sub
repz
or
xchg
mov
adc
add
pushf
fstps
out
cltd
and
xor
sbb
push
or
fildl
cmpb
push
push
shlb
lcall
cwtl
add
dec
dec
cmpsb
add
lods
xchg
mov
lahf
shlb
aas
ds
jle
movsl
adcb
sbb
push
xor
andb
dec
and
inc
outsb
mov
push
ret
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
fstpl
stc
out
mov
jbe
test
mov
dec
mov
xchg
xor
call
ljmp
cmp
adc
ret
inc
cmp
mov
pop
inc
in
fwait
or
stos
dec
cmp
pop
in
push
add
ljmp
pop
adc
jmp
je
inc
inc
pop
pusha
and
inc
ss
dec
idivb
in
andb
les
xchg
pop
dec
inc
invd
mov
push
decb
push
mov
movsl
jae
test
popa
dec
mov
xor
pop
out
les
lret
mov
xor
mov
cltd
adc
inc
cmp
push
je
xor
stos
rorl
int3
adc
fsub
daa
inc
aaa
mov
dec
les
ret
icebp
or
push
int3
sbb
mov
xchg
dec
repnz
shll
adc
jb
xor
xor
pop
push
mov
xor
imull
out
ret
xchg
inc
mov
stos
loop
mov
shll
sahf
xor
mov
rol
popf
imul
cwtl
inc
sub
in
jns
popf
or
sbb
outsb
pushf
pop
sbb
inc
jmp
jae
jmp
sbb
stos
jo
inc
jno
jg
scas
insb
call
add
cmp
dec
lcall
sub
mov
xor
ret
loopne
add
mov
cmpsb
adc
inc
push
push
xor
and
cli
fildll
xchg
mov
inc
mov
pop
sbb
xchg
mov
pop
or
mov
fldcw
andb
rcll
xchg
pop
repz
xchg
fdivs
mov
dec
adc
add
popw
inc
lahf
push
or
js
ss
lcall
out
or
jae
inc
or
fistpl
add
lds
push
push
ss
mov
das
jmp
mov
jge
jmp
sti
or
jns
out
mov
pop
mov
and
and
add
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
cwtl
daa
stos
jp
push
sbb
adc
sbb
inc
lea
aas
push
sub
cmpsb
mov
nop
xlat
and
das
xchg
lds
dec
mov
inc
daa
aam
insb
adc
mov
inc
movsl
mov
out
shrl
imul
scas
push
jmp
mov
imul
sarb
cmp
mov
sbb
sbb
mov
aas
xor
insl
and
mov
mov
nopl
fs
add
jae
sbb
aam
jecxz
fstpl
scas
jmp
push
cmpsb
and
and
lret
xor
roll
dec
ja
cs
jecxz
mov
adc
es
mov
sub
aad
sbb
mov
mov
decb
rorl
clc
or
mov
sub
adc
jge
dec
cli
push
stos
shrl
pop
popa
in
or
mov
push
fidivrs
lret
lods
movsb
dec
cmp
je
mov
popf
mov
inc
xor
inc
je
loop
adc
xchg
mov
push
data16
sub
and
cmpsb
outsb
xchg
dec
mov
insb
pop
jecxz
inc
adc
adc
out
sbb
in
xchg
cmpb
dec
popa
call
push
insl
sub
and
mov
sub
jnp
data16
jo
pop
js
cmp
je
pushf
mov
jno
mov
dec
sbb
pop
inc
push
int
add
xchg
lahf
popf
xor
iret
test
loopne
mov
or
fnsave
mov
into
mov
in
cwtl
shr
fcmovne
cmpsb
or
icebp
shlb
repnz
mov
pop
ret
jno
inc
adc
push
sbb
adc
frstor
sbb
add
xchg
mov
in
movsl
lret
adc
ret
mov
lods
pop
add
or
xor
sbb
imul
xchg
pop
fcompl
lea
icebp
jle
xchg
enter
in
pop
add
xor
lcall
aas
cmp
cld
push
jae
adc
shrb
outsb
push
inc
pop
cld
in
adc
push
pop
xchg
dec
or
push
cld
leave
inc
cmp
dec
fmul
aaa
add
or
adc
movsb
sub
inc
xchg
mov
pop
push
shrb
cmp
icebp
test
jo
mov
jae
inc
cli
sahf
pushf
sub
xchg
and
imul
movsl
mov
mov
subb
mov
xor
mov
addr16
and
and
sub
add
scas
popf
roll
mov
cmp
inc
fldz
cmpsb
xlat
push
mov
mov
inc
js
cmpsl
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
mov
xor
jge
adc
adc
fldt
dec
fwait
inc
js
adc
in
arpl
mov
xchg
xchg
fimull
push
les
cld
movsb
ljmp
lcall
inc
push
and
sbb
cmpsl
ja
xchg
fcomps
add
lret
push
dec
leave
xchg
xor
sbb
repnz
outsb
push
sahf
int3
sbb
imulb
daa
pop
test
sbb
xorl
lods
js
add
xor
fwait
sbb
mov
in
pop
mov
inc
testb
fists
std
mov
in
pop
shrb
inc
mov
movsb
test
lahf
icebp
mov
mulb
mov
mov
jmp
ss
dec
cmp
loopne
xchg
push
push
daa
mov
xor
jbe
into
adc
pop
test
jmp
adc
mov
jae
mov
cmc
lea
jnp
lock
cli
pop
mov
pushf
push
mov
add
clc
xor
insl
movsl
mov
dec
faddl
jbe
arpl
jp
xchg
imul
shlb
adc
fadd
mov
mov
stos
ret
inc
rolb
pop
repnz
jl
dec
push
ficoms
fsubp
lahf
mov
mov
dec
test
xchg
mov
and
mov
dec
add
jg
cmp
sub
inc
ds
push
xchg
add
jnp
push
xlat
mov
xchg
pop
insl
stos
or
fbstp
or
jecxz
sub
pop
std
add
xor
and
mov
ljmp
jge
fistpl
and
arpl
nop
sti
pop
into
dec
dec
cmp
mov
ljmp
push
xchg
rclb
jge
dec
sub
pop
bound
scas
cmp
shll
jae
push
or
adc
ret
jb
xor
push
adc
cmp
les
cmp
mov
enter
les
sbb
and
pop
fstpt
pusha
call
loope
adc
fs
jge
mov
inc
sti
or
out
loop
or
mov
and
nop
dec
je
mov
push
add
jge
fdivs
sahf
in
jbe
adc
lahf
pop
cmp
cs
les
pop
out
dec
jp
testb
test
mov
mov
cwtl
rclb
mov
add
insb
hlt
in
or
fimull
sub
popl
adc
xchg
jno
ds
push
out
or
cli
adc
add
mov
sub
add
icebp
mov
outsb
lcall
pop
inc
leave
adc
lret
and
pop
popa
mov
push
add
xor
aam
inc
scas
ds
sub
movsl
dec
xor
cltd
cmpsl
adc
shrl
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
push
loope
sub
je
mov
add
in
or
daa
fbstp
imul
add
inc
fdivl
out
mov
add
cmc
je
cli
jb
in
mov
push
sub
dec
mov
in
aad
arpl
addr16
lahf
shll
xchg
lret
cmp
cmp
push
pop
jbe
sub
xchg
aad
add
mov
pop
popf
and
ss
fsubs
or
jne
or
arpl
pop
dec
daa
sbb
and
stc
mov
scas
inc
push
stos
lods
mov
jno
mov
add
sbb
addr16
push
lcall
adc
jb
jbe
pusha
mov
stc
add
pop
popa
mov
xchg
shll
stos
xor
cmp
fadds
xor
push
sbb
sti
je
sbb
frstor
rclb
pushf
add
lahf
xor
jns
test
sub
lds
je
int
je
lahf
inc
mov
sbb
sbb
fsubrl
push
lock
movsb
adcb
cmp
vpshufd
lret
fcmovnu
pop
cmc
pop
lret
or
lcall
fildl
aam
mov
loop
xchg
das
inc
dec
push
mov
faddp
adc
adc
testl
lock
and
push
sub
xchg
adc
shll
les
cmc
push
arpl
and
mov
dec
dec
pop
subl
xor
pop
xchg
sbbl
pop
push
ret
mov
lock
adc
adc
mov
dec
adc
jp
repz
pop
push
gs
lret
sahf
sub
enter
jns
es
adc
dec
adc
sub
jg
pop
and
cs
stc
or
jge
in
mov
hlt
stos
and
aad
pop
int3
xchg
pushl
lods
sti
jecxz
sbb
repnz
ss
xchg
into
mov
nop
xlat
aad
cwtl
adc
insb
out
mov
or
out
xchg
icebp
pushf
jns
shrl
repnz
in
mov
add
cmp
ffree
mov
push
sub
movsb
pushf
insl
lret
dec
pop
push
jns
insl
shll
arpl
push
lret
pop
popa
push
lcall
mov
push
sub
into
push
adc
loope
add
cmp
mov
out
sub
ljmp
xor
cmp
pop
stos
mov
das
fldt
inc
dec
popf
mov
nop
orl
out
lahf
hlt
icebp
mov
pop
clc
xchg
cmp
icebp
and
cwtl
in
sub
push
jmp
sub
mov
sub
aam
sarb
cmp
daa
add
jecxz
bnd
dec
push
out
xchg
clc
in
inc
cwtl
sub
mov
push
adc
scas
xor
iret
test
push
mov
inc
push
pop
mov
sub
hlt
cmpsb
mov
lods
jne
jg
and
fists
xchg
hlt
mov
das
push
sbb
call
cmp
fistpl
sub
fisubrs
addr16
push
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
xor
or
lcall
push
mov
mov
mov
sbb
inc
fucomp
call
adc
addr16
pop
sbb
jp
test
mov
mov
xor
cmp
sub
adc
add
add
leave
cmc
repnz
jmp
cmp
lcall
sub
loope
xor
hlt
lds
fnstcw
and
xchg
in
pusha
pop
inc
jnp
jmp
dec
push
dec
fldcw
repnz
jnp
shrl
jg
adc
pop
int3
adc
push
cmp
aaa
int
dec
aam
xchg
pusha
inc
jns,pt
jb
mov
call
inc
lds
sbb
pop
test
test
pop
ds
fldt
push
jmp
loope
and
test
loop
pop
cld
xor
arpl
add
arpl
xchg
inc
mov
rclb
adc
xchg
mov
cmp
pop
ret
fs
add
cmp
jbe
shr
sti
scas
jmp
mov
and
call
cld
popl
test
lahf
jmp
jmp
push
push
test
jns
clc
add
mov
hlt
adc
lcall
subb
pop
push
sbbl
mov
pop
adcb
dec
lock
mov
and
or
ja
sub
mov
inc
fmull
rorb
sbb
call
les
dec
hlt
pop
pop
sbb
mov
jg
xchg
adc
mov
push
mov
mov
mov
jge
les
aad
adc
xlat
enter
add
mov
enter
mov
pop
xchg
pop
pop
jmp
lcall
inc
add
mov
cmp
mov
and
push
mov
xor
popa
scas
jle
test
outsb
push
xchg
inc
and
jne
jle
scas
sbb
int
mov
sbb
dec
and
sar
jno
shl
cli
and
ret
outsb
adc
int3
pop
jecxz
mov
pusha
add
ja
data16
xor
adc
or
in
mov
add
jge
das
xlat
sub
pop
sbb
push
cmp
enter
jbe
insl
or
insb
testl
insb
int3
jl
fldenv
add
lcall
xchg
sbb
btc
inc
mov
push
aad
inc
stos
je
addl
xchg
daa
inc
fnstenv
sbb
inc
test
dec
loop
mov
push
shrl
icebp
in
cs
lcall
inc
loope
cmp
sub
push
pushf
xor
xor
mov
xchg
jbe
adc
loop
fisubrs
scas
xchg
sub
pop
jnp
dec
fwait
movsl
and
sub
fadds
push
imul
imul
inc
push
orb
fstl
and
cwtl
inc
mov
mov
and
pusha
repnz
lret
scas
inc
xor
xchg
mov
jecxz
insb
add
adc
xchg
leave
shll
adc
sub
stos
dec
jno
sbb
or
daa
mov
cs
aad
lcall
and
inc
mov
stos
out
int
jb
xor
sbb
sahf
ljmp
inc
shlb
data16
or
es
inc
cs
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
xor
jo
fsts
sbb
out
stos
insl
mov
arpl
filds
sub
mov
and
mov
mov
aas
movsb
cwtl
outsl
fwait
movl
arpl
mov
dec
fucomip
jmp
adc
and
lcall
aad
fcmovb
shl
and
xor
mov
and
sub
mov
inc
fcmovnbe
iret
or
iret
movsb
jb
and
iret
inc
dec
dec
push
out
cli
mov
mov
sub
gs
mov
push
xor
inc
xor
or
pop
mov
loopne
push
lds
push
fsubrs
je
into
fs
add
popa
mov
mov
into
jae
and
lret
and
shrl
jae
ret
push
sub
subl
pusha
push
and
push
out
xchg
daa
out
xchg
sub
imul
in
shr
xor
sti
out
or
outsl
sub
jns
mov
popf
fisttpl
mov
fidivs
arpl
leave
push
push
repz
in
mov
and
sbb
mov
fcoml
and
xchg
movsb
loope
iret
mov
int
iret
enter
push
out
pop
fidivs
clc
cmp
adcb
int
pop
sub
fisubrs
je
lods
push
test
mov
inc
jg
hlt
pop
fcos
popf
inc
and
movsb
sbb
lea
and
mov
jecxz
push
add
cltd
cmpsl
push
jle
mov
into
sti
ljmp
and
cwtl
add
and
pop
pop
sti
arpl
pop
lret
adc
and
lret
pop
mov
push
jmp
fwait
je
pop
and
inc
sbb
dec
out
fistpll
sub
shl
fsubrl
leave
sbb
lret
inc
test
lahf
xchg
scas
jae
dec
aad
enter
cli
jb
sar
jns
cmc
lret
jecxz
sub
push
pop
pop
jmp
pop
movsb
lock
loop
int
and
fcmovnb
cmp
repnz
outsb
add
movsl
ljmp
cmp
sbb
int3
je
arpl
jno
jg
bound
loop
int
cld
int
xchg
xchg
shrb
sbb
pop
adc
push
pop
aas
and
pushf
push
loope
fcomi
insl
insl
movsl
incl
sub
sub
xor
dec
loope
inc
hlt
sub
mov
rorb
in
jbe
xor
mov
scas
ljmp
rolb
xor
xor
fimuls
adc
ljmp
sub
in
jbe
mov
push
cmp
dec
xor
ds
dec
test
jle
into
repnz
notl
aad
aam
inc
jp
sub
mov
sti
sub
hlt
pop
mov
adc
ljmp
sbb
inc
or
mov
or
push
xchg
and
and
imul
lods
xor
lock
mov
outsl
and
movsl
lds
mov
jp
xor
sub
lret
adc
mov
ret
dec
mov
jnp
adc
insb
in
bound
jecxz
fistl
dec
mov
inc
mov
mov
pushf
push
cmp
jecxz
jb
adc
sbb
stc
and
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
sbbb
stos
not
push
sbb
inc
daa
jmp
cltd
jno
stc
fucomp
inc
sbb
push
jp
movsl
mov
shll
cltd
iret
jmp
fisubs
add
scas
dec
nop
xchg
push
imul
shll
sub
sbb
sbb
mov
and
push
xor
jle
jge
cld
scas
sub
mov
xchg
lret
adcl
ljmp
dec
es
pop
lds
and
sub
cltd
mov
pop
mov
mov
ja
popa
cmp
iret
int
sbb
add
sbb
cmp
or
in
mov
das
imul
popa
popf
adc
mov
mov
mov
xor
notb
and
and
sbb
ljmp
mov
into
lods
jo
xor
adc
cmp
cmpsb
shl
jge
lock
sub
sbb
lods
sbb
sub
and
push
jo
repnz
ret
jp
mov
jne
in
daa
add
jecxz
data16
jge
ret
popf
int3
fst
mov
pop
mov
out
mov
cmp
std
push
jnp
cld
mov
ljmp
dec
and
xor
test
sbb
xchg
jecxz
cs
sahf
pop
push
jbe
mov
add
out
mov
out
cmp
jmp
icebp
pop
rolb
in
stc
cmpsb
ds
fcomps
mov
push
rcrb
push
push
inc
xor
sbb
push
fimull
jo
clc
in
sbb
or
fists
adc
cs
adc
cmpsb
mov
and
cmp
lahf
cmpsb
jmp
pushf
cmp
andl
fmulp
sbb
icebp
inc
sub
xchg
adc
jo
cmp
aaa
jge
push
jae
push
or
mov
mov
ljmp
push
pop
movb
mov
add
pop
stc
pop
js
aas
outsl
mov
rcrl
scas
out
gs
or
inc
idivb
adc
and
cmpsb
pop
fidivl
xor
pop
outsb
jl
pop
jbe
xchg
adc
es
push
mov
bound
push
nop
cmp
adc
call
js
xor
in
clc
xor
add
mov
shll
mov
lret
aas
mov
sbbb
xchg
and
movsl
cld
or
call
sub
mov
cmp
loope
dec
pusha
in
adc
cmp
jne
aad
out
pop
jne
push
into
sbb
mov
push
add
cwtl
xor
nop
cld
inc
cs
fmuls
inc
int
mov
and
fsub
out
add
push
add
inc
dec
inc
int
lcall
fimull
es
scas
jnp
call
jno
movsb
pop
adc
sti
sarb
ret
mov
fwait
mov
xchg
push
pop
dec
cmp
lods
sbb
mov
mov
stos
lcall
push
enter
jp
jae
sub
add
pop
decb
jns
pop
cld
push
repz
out
jp
repz
dec
aaa
std
aas
inc
cmp
test
test
add
sub
inc
jecxz
xor
dec
xor
bound
mov
and
fdivl
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
mov
jle
lret
push
sbb
pop
stc
mov
sbb
fincstp
lea
fldt
cld
out
ds
sbb
sub
cmp
mov
cmc
fbstp
test
dec
daa
call
subb
sub
push
sahf
pop
and
sub
test
test
bound
stos
or
push
addr16
push
bound
adc
loop
fbld
hlt
std
addr16
xor
popf
popa
dec
jae
mov
stos
movsb
add
into
fldl
mov
scas
sub
scas
and
pop
push
stc
cmpb
sar
addl
adc
push
stos
in
pop
push
dec
mov
jle
push
mov
mov
loopne
pop
out
pushf
cmp
and
je
pop
aam
jge
inc
adc
repz
mov
pop
mov
nop
jecxz
pop
lret
jbe
pop
repnz
or
xor
cmp
and
les
mov
imul
repz
js
mov
out
push
scas
je
mov
fwait
addr16
xchg
dec
adc
xor
es
inc
pop
inc
and
je
add
inc
insb
sbb
mov
ljmp
cwtl
mov
push
icebp
push
lds
xchg
add
xlat
sub
cmp
testb
push
xchg
push
mov
fisubrs
lods
adc
and
pop
cld
sbb
imul
xchg
jle
cmpl
jbe
fidivrl
fistl
sbb
mov
gs
loope
pop
inc
push
rcrl
mov
movsl
mov
sub
mov
pop
stos
jmp
shr
xchg
fs
mov
fs
int3
fstps
dec
xchg
pop
sub
push
jl
cmpsb
andl
shrb
inc
fidivrl
rcrl
aam
add
ss
xor
inc
jge
enter
xor
ds
adc
inc
jp
cmpsl
iret
jmp
jecxz
mov
jns
pop
aas
mov
xlat
adc
xchg
ljmp
js
ja
pop
xchg
pushf
movsl
cwtl
call
add
lea
dec
dec
mov
pop
shll
cli
mov
adc
dec
sarb
add
adc
scas
ror
hlt
in
loop
cltd
and
push
xchg
in
hlt
repnz
xchg
cmpsb
inc
and
pop
xchg
xor
and
add
mov
cmc
inc
jo
cmp
jecxz
ss
adc
sub
mov
add
subl
sti
imul
arpl
andb
or
adc
leave
and
lea
inc
mov
pop
mov
sarl
test
jecxz
xchg
icebp
data16
bound
in
jl
or
in
adc
jl
mov
ss
or
push
dec
push
sbb
fdivrs
push
sub
push
sbb
aam
je
xchg
insl
mov
push
cli
or
sbb
cld
lret
mov
pop
pop
xor
rorl
sbb
mov
fnstenv
pop
xor
lock
xor
jnp
enter
lcall
inc
add
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
mov
push
sbb
pop
das
and
jmp
cmp
lea
push
mov
ja
pop
fwait
mov
inc
mov
ret
dec
rclb
stos
push
mov
jo
jle
movsl
cmpsl
daa
mov
ret
push
pop
cs
cmp
dec
int
pop
repz
xor
dec
imul
pextrw
xor
adc
movsb
mov
xchg
sti
cmp
imul
xchg
movsb
jb
ret
repz
xchg
in
and
fldt
insb
pop
cmp
adc
dec
or
adc
jp
imul
stos
pop
test
or
jno
iret
fists
cmp
sub
cmpsl
jns
adc
lods
jmp
test
add
fdiv
add
xor
mov
push
ljmp
int3
aad
pop
lahf
je
add
add
insl
inc
cmc
test
out
imul
aam
out
jns
mov
jge
mov
add
xor
cmpsb
xchg
xchg
inc
rorb
sbb
jmp
fistps
leave
jno
pop
fdivs
test
jno
xorb
sbb
push
outsl
jno
cmp
ret
call
and
sbb
fs
jg
int3
or
adc
out
xchg
xchg
test
mov
push
jae
mov
fcoml
movsb
ret
jmp
in
adc
aas
clc
cmp
scas
std
xor
ds
test
insl
das
es
adc
push
lock
and
or
adc
dec
inc
mov
push
lret
sub
xor
pop
xchg
jmp
mov
adc
cmc
push
aaa
adc
roll
add
add
out
iret
dec
mov
addr16
push
push
pop
lcall
cs
loope
fisttpl
cmp
mov
nop
dec
xor
mov
dec
inc
xlat
aam
xchg
pusha
xchg
add
arpl
jae
cmp
push
rolb
cmp
mov
pushl
add
xchg
movl
jl
lret
cmp
scas
vorps
movsl
pop
pop
outsl
mov
push
cwtl
dec
jmp
sub
test
xchg
imul
repz
jecxz
mov
jmp
xorb
out
loope
dec
push
adc
insl
sbb
push
pop
or
xchg
fcom
push
push
pop
movsb
out
fsubr
ficompl
and
iret
pop
les
testb
jg
and
out
add
mov
imul
jg
rcrb
inc
xchg
shlb
or
lahf
mov
lods
mov
hlt
lock
je
ja
in
mov
sbb
dec
cmp
popa
jb
pop
jae
stos
pop
js
rcr
mov
movsl
sbb
jg
inc
mov
push
mov
mov
fbstp
add
mov
push
cli
mov
mov
jecxz
sub
cmp
cmpsb
lock
sub
mov
in
mov
lcall
popf
mov
add
roll
jo
xchg
push
cmp
sub
inc
jbe
sub
out
js
cmp
mov
lret
push
cld
dec
adc
push
je
cmp
in
xchg
fisttpl
test
jb
insl
add
ds
push
add
pop
sbb
inc
ret
popa
mov
mov
add
add
lods
enter
dec
addb
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
push
out
jecxz
push
sbb
push
sub
xchg
inc
flds
jae
loopne
loop
ret
and
push
inc
data16
ss
lahf
mov
pop
xor
sub
pop
rdpmc
dec
inc
jl
cmp
jns
xor
shlb
mov
lret
push
loopne
inc
cld
cs
and
inc
xor
cmp
cmpsl
fldt
cmpl
push
xchg
stos
ja
pusha
pushf
ds
mov
idivb
in
inc
jg
scas
adc
scas
lret
push
push
das
jp
popf
pusha
jae
sti
test
popa
sbbl
movsl
lret
test
sti
mov
sbb
jne
repnz
jno
mov
inc
pop
adc
or
nop
fisubl
mov
subl
mov
std
jmp
xor
mov
or
out
jmp
movsl
add
dec
adc
push
pop
add
addr16
and
cld
xor
adc
ret
aad
in
mov
and
sub
iret
jns
push
xlat
xchg
xor
mov
mov
xor
jae
es
ret
shl
dec
shll
in
mov
sahf
jae
mov
mov
fsubs
xchg
add
inc
imul
jl
ret
xchg
add
or
or
add
xchg
lcall
mov
orl
inc
lods
push
ss
ret
or
push
mov
sahf
lock
pop
sbb
mov
jns
fucomp
sub
hlt
je
nop
mov
je
add
fsts
push
out
sbb
pop
addr16
inc
stos
ret
sarb
out
xor
push
pop
out
and
inc
fwait
repnz
mov
loop
ret
mov
inc
sbb
outsb
or
sub
mov
aad
fisubl
adc
clc
in
sub
mov
mov
fs
xor
pusha
or
aaa
gs
mov
lods
jnp
cli
lret
pop
jle
pop
cwtl
xchg
push
out
sbb
lds
jge
jmp
cltd
mov
jo
sub
jp
cld
cmpb
pop
adcb
lods
push
pop
xchg
xor
mov
inc
push
add
add
sti
repz
dec
repz
sub
in
faddl
sub
inc
mov
or
jl
xchg
cld
push
jbe
mov
add
cmp
out
cmp
pop
loope
xor
and
xchg
or
in
inc
fldl
xchg
and
sub
pushf
leave
ja
xor
pop
push
rcrb
shrl
insl
cltd
shll
push
cmp
push
fs
push
xlat
std
movsl
xchg
les
and
pop
repz
or
jne
imul
push
mulb
dec
mov
ds
hlt
mov
pop
arpl
jne
enter
aaa
jl
insb
stos
in
or
dec
jmp
out
inc
mov
sub
pop
inc
stos
frstor
inc
pop
fnstenv
mov
cmpsl
in
or
push
push
jb
jge
arpl
call
mov
push
xor
les
jns
cmp
repz
out
ljmp
test
ret
pop
pop
jmp
sub
popf
jge
loop
in
adc
mov
adc
in
inc
jecxz
mov
ss
pop
loop
adc
mov
and
push
and
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
inc
cs
fidivrs
dec
cltd
dec
mov
xor
cmc
pop
cmp
sahf
mov
sbb
xchg
arpl
orl
pop
push
scas
cmp
mov
and
jns
sub
mov
test
clc
repz
movsl
ds
insl
inc
add
mov
cmp
addr16
imul
xor
sahf
stos
xor
add
mov
lret
push
mov
out
imul
sbb
and
js
fstl
in
ljmp
movsb
inc
mov
add
fldt
int
dec
sbb
mov
xchg
xlat
mov
imul
fscale
mov
push
test
sub
and
rol
mov
fldenv
xchg
cmc
stc
rorb
cmp
fst
push
xchg
or
mov
push
pop
mov
lcall
out
shll
and
or
repz
scas
cmpsb
fsubl
mov
xchg
lods
ficomps
lcall
or
add
adc
jmp
mov
fucompp
inc
xchg
dec
sub
test
jns
xchg
xchg
int3
mov
outsl
bsr
sbb
in
addr16
in
jl
lahf
movsl
push
sbb
out
jmp
test
adc
add
sahf
fcoml
add
dec
mov
push
jne
push
sub
cmpb
jae
push
ja
inc
icebp
cmp
lds
xor
add
imul
movsb
jb
inc
nop
pop
and
out
jns
jo
popf
xlat
xor
fwait
xchg
pushf
lret
mov
js
fimuls
scas
mov
mov
push
xor
pop
cmp
aad
imulb
sbb
out
adc
mov
push
out
xchg
subb
jb
dec
and
mov
xor
pushf
mov
incl
pop
scas
mov
adc
lods
ret
lahf
mov
mov
mov
cmp
imul
push
cwtl
fs
fdivp
mov
icebp
les
pop
or
out
sahf
insb
lods
jge
scas
data16
xchg
lock
adc
push
jl
aam
sub
cmp
repnz
jl
mov
jns
mov
jge
cld
cltd
cmp
cmc
sbb
push
xchg
sahf
in
jmp
pop
adc
mov
and
xchg
pop
outsb
loopne
xor
and
aaa
pop
add
lock
and
sbb
jp
rcr
pop
xor
dec
cmp
dec
je
cmp
jle
stos
enter
xor
xor
pop
gs
lods
andl
push
mov
mov
xor
push
xchg
imul
pop
cmp
or
push
sub
pop
sti
mov
mov
fistps
orb
repnz
mov
dec
test
pop
mov
dec
lret
das
dec
mov
xlat
enter
sub
mov
dec
test
inc
push
loopne
pop
add
adc
stos
in
ljmp
adc
push
scas
xchg
leave
adc
and
or
add
mov
cld
stos
push
push
outsl
cltd
shrl
cltd
fs
sub
arpl
jo
push
mov
mov
sub
pushf
dec
fstpt
lods
jnp
cmpsl
mov
es
mov
mov
and
shlb
cmpsb
out
shll
or
mov
pop
xor
add
loope
xor
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
sbb
daa
stos
sub
sbb
shlb
xchg
ret
mov
std
es
sub
in
xor
cmp
jne
mov
ds
cmpsb
pushf
dec
std
xor
lods
into
sub
shrb
dec
jge
xlat
subb
icebp
inc
sbb
adc
fadds
lock
pop
ret
lods
mov
pop
int
lea
mov
cmp
cltd
fiaddl
mov
loopne
mov
enter
inc
xor
mov
jne
sub
jle
cmp
jae
test
xor
cwtl
mov
outsb
out
inc
sub
arpl
cwtl
rcrl
aam
xor
or
test
es
pop
mov
gs
xchg
inc
or
or
aaa
inc
push
inc
xchg
fistpll
rcl
inc
call
int3
push
gs
adc
je
mov
scas
iret
out
and
mov
add
mov
jl
stc
lahf
push
inc
lahf
push
mov
fst
pop
xchg
sub
sbbl
fidivrs
imull
ja
add
adc
or
aas
shrl
bswap
mov
rcll
mov
jo
push
xor
pop
xchg
mov
sub
cmc
xchg
mov
inc
mov
mov
xor
push
pop
lds
outsb
dec
or
loope
add
fs
mov
sbb
and
fsubs
imul
ret
jbe
dec
ret
jne
in
dec
in
stos
sahf
jmp
stos
adc
sbb
aas
dec
cld
cmp
dec
lods
cmpsl
cmp
repz
les
cmp
iret
les
sbb
mov
pusha
out
scas
ss
movl
mov
rcrb
daa
jbe
mov
arpl
jnp
fimuls
dec
dec
lea
inc
xor
sbb
int3
pavgw
pushf
jl
in
jae
std
sbb
jge
addr16
sub
cli
mov
outsl
or
xor
sub
jecxz
pusha
dec
dec
fistl
lret
aam
xchg
jbe
push
dec
out
fisttpll
icebp
aaa
nop
ja
test
lret
mov
adc
inc
insb
repz
imul
lret
mov
fildl
mov
sbb
add
mov
out
jecxz
nop
test
addr16
fimull
mov
dec
sbb
cmp
mov
pop
jae
cmc
xor
ret
inc
and
enter
adc
pop
fsubs
shl
mov
sbb
cmp
mov
xchg
dec
sub
or
aaa
ret
sbb
mov
xorb
mov
add
sub
jno
stos
ret
repnz
scas
mov
test
scas
pop
loope
pop
dec
jg
fidivs
clc
punpckhbw
mov
negl
add
push
lds
or
fimuls
cs
add
xor
sbb
dec
pusha
notb
pop
xorb
gs
cmc
and
mov
push
repz
cltd
xor
or
fmul
pop
xchg
pop
mov
add
ret
aas
insb
leave
xchg
pop
or
inc
daa
nop
inc
mov
xchg
mov
lods
ljmp
mov
mov
lods
add
or
repnz
push
lods
xchg
adc
int3
pop
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
mov
push
sbb
sub
sub
or
pop
push
pop
call
sub
mov
add
jl
jnp
cmp
dec
repz
jnp
fidivs
mov
cmpsb
rolb
cmp
ds
aas
adc
lds
adc
lret
dec
push
hlt
cmp
iret
stc
loop
xchg
or
add
push
scas
lahf
js
or
xchg
mov
mov
mov
xor
sub
iret
or
jo
sub
mov
and
jle
cli
pop
outsl
lahf
pop
add
incb
imulb
and
push
scas
out
jnp
jmp
jbe
jae
jge
xor
push
call
into
xor
sub
and
cmc
js
dec
push
stc
dec
pop
push
sahf
or
pop
add
insb
jns
mov
xchg
bound
rorl
aas
mov
and
push
mov
aaa
add
mov
movsl
out
xor
movsb
jmp
fwait
cld
xor
mov
xor
mov
sbb
stc
rcll
ja
in
mov
fmull
das
dec
or
push
popf
mov
shll
pop
xchg
int
mov
jmp
or
mov
pop
pop
cmpsl
sbb
das
pop
into
fldl
out
add
ss
fcoml
mov
clc
jbe
xchg
or
test
frstor
dec
xor
lret
call
fisubrl
fidivs
sub
xchg
push
mov
fcompp
sub
iret
incl
ljmp
ja
dec
mov
lea
lea
addr16
pop
push
mov
int
sub
je
test
aaa
or
mov
add
sub
push
fisubs
sbb
adc
sub
in
xchg
pop
cmp
cmp
xor
scas
inc
xor
mov
cmp
data16
adc
bound
xor
dec
movsb
dec
loope
cmpsl
jmp
scas
scas
pop
jmp
int3
mov
ss
pop
sahf
adc
pop
fisttpl
jbe
movl
push
sbb
sub
xor
pop
adc
insl
and
jns
imul
jo
and
and
es
stc
mov
aam
ja
xor
movsl
orb
pop
lods
cmp
imul
fcomi
push
xlat
add
inc
xor
cmp
nop
shll
daa
sbb
frstor
xchg
mov
jmp
call
cltd
outsl
lock
lcall
xor
mov
or
fstpl
pop
cmc
pop
mov
gs
xor
and
mov
inc
and
sub
cmc
xor
enter
push
lods
icebp
cmpsl
add
sub
loopne
repz
or
cltd
or
in
cwtl
outsl
jge
fstpt
and
sbb
and
cmp
pushf
or
cmp
insb
dec
fcmovne
aam
in
mov
adc
repnz
dec
aas
icebp
xor
xor
lds
mov
or
mov
dec
fwait
lcall
inc
cli
cltd
fwait
xor
enter
jge
lret
loope
mov
mov
push
jnp
or
mov
add
xor
adc
jp
or
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
xor
pop
rcrl
mov
dec
mov
dec
je
lock
pusha
loope
mov
cmp
jmp
cmc
xor
cmp
ljmp
add
and
cmp
lock
leave
add
mov
and
jo
js
and
xchg
insb
add
cs
hlt
les
imul
mov
adcl
mov
jmp
cld
imul
imul
test
push
test
push
jl
mov
fs
dec
daa
cmp
pusha
in
outsl
imul
mov
cmpl
pop
xor
mov
xchg
sub
icebp
adc
sti
or
nop
addr16
cld
movsb
aas
sbb
stos
push
aaa
or
mov
loop
js
mov
and
dec
dec
daa
ljmp
ss
js
mov
jne
fisttps
popa
pop
shll
mov
inc
test
mov
mov
dec
incb
sbb
dec
cli
mov
cmp
push
shll
sub
cmp
dec
sub
sub
inc
xchg
sub
outsl
test
jg
data16
push
pop
adc
mov
sahf
jp
ja
pusha
mov
ja
xchg
mov
dec
repz
fcomp
lret
adc
dec
cmp
stos
scas
xchg
rcrb
outsl
push
daa
aam
jb
insl
repnz
ss
pop
jbe
movnti
bound
mov
stos
cmpl
stc
aaa
add
dec
sub
inc
mov
shlb
fstl
pop
fcoml
stos
fistps
out
xlat
add
rclb
push
dec
loop
and
and
pop
movsb
mov
loopne
gs
mov
loopne
insl
sub
push
aas
arpl
or
dec
mov
lret
mov
cld
adc
mov
xor
push
ss
mov
ds
popa
call
cld
wrmsr
scas
and
mov
lock
push
rcrl
inc
adc
test
pop
or
ss
jmp
jns
jbe
xlat
push
push
popf
cmp
jo
int3
inc
movsl
adc
cltd
cltd
je
sub
fwait
sbb
and
stc
add
dec
fdivl
stc
aam
add
out
cld
lods
push
pop
jge
popf
out
jp
pop
ret
inc
sub
xlat
mov
lret
jb
outsb
adc
mov
xchg
adc
adc
xchg
test
lods
push
xchg
cld
or
mov
pop
pop
sahf
sub
idivl
mov
push
std
cmpsl
inc
add
sub
enter
xor
insl
aad
repz
insb
jle
push
mov
mov
enter
popf
cmpsl
mov
mov
adc
rolb
cwtl
jge
sahf
dec
push
bound
mov
imul
cmc
xchg
testl
insb
pop
sbb
es
xor
adcl
into
add
mov
scas
xor
add
mov
pushf
adc
rcll
jns
icebp
arpl
pushf
xor
jmp
fwait
mov
bound
jl
jecxz
repz
out
daa
inc
mov
pop
or
xchg
sub
mov
nop
mov
sbb
push
jp
jge
dec
xchg
xchg
lock
pop
sub
push
in
lods
call
scas
sub
add
pop
mov
sub
test
add
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
pop
and
xchg
push
sbb
sub
jg
imul
push
fsubl
jmp
mov
adc
sub
in
bound
cmpsl
das
push
pusha
lods
outsb
hlt
jmp
addb
shr
xor
or
jnp
or
sub
mov
pop
insl
sti
pop
jecxz
testb
sahf
subb
lds
shrl
pop
je
jmp
jmp
rclb
into
out
xor
xlat
shlb
push
add
ret
lahf
int
pop
stos
mov
cmc
push
dec
into
mov
dec
stos
or
mov
ret
xchg
loopne
sbb
or
pop
jo
jne
out
inc
push
mov
insl
cmc
mov
push
xor
popa
dec
mov
aam
shr
fstl
ror
lds
sub
mov
add
fwait
pop
xchg
mov
ficomps
xchg
in
ror
mov
mov
push
or
pop
mov
pop
dec
sahf
int
jnp
xor
in
mov
xor
adc
pop
sar
fsubrs
roll
sub
loope
mov
xchg
and
int
inc
sbbl
lods
insl
pop
and
sub
xor
jle
add
fbld
xchg
sub
lcall
divb
dec
adc
pop
and
or
adc
inc
adc
pusha
mov
lods
mov
pushl
inc
xchg
lods
scas
mov
clc
and
dec
negb
jle
clc
out
dec
leave
lret
cmp
popf
adc
scas
lock
mov
inc
jl
adc
xchg
mov
xor
xor
popf
inc
out
cltd
sahf
push
jmp
pop
aaa
aad
das
aad
lea
add
jbe
test
mov
jecxz
loop
leave
pop
jne
adc
push
cmpsb
ret
outsb
xor
je
dec
sahf
aam
mov
lahf
sbb
push
xchg
shrb
cmp
das
popf
sbb
mov
mov
xchg
dec
test
inc
xor
xchg
incl
pop
jp
js
aad
inc
movsl
das
popf
enter
dec
ret
aad
jp
clc
ljmp
sbb
out
mov
sti
shll
out
jno
jecxz
sbb
mov
inc
out
dec
mov
jecxz
shl
mov
adc
lock
lock
movsl
test
movsb
add
add
mov
mov
xchg
ret
in
lcall
pop
test
push
jo
shr
sub
je
cmp
and
pop
adc
lcall
adc
and
sub
inc
ss
cmpl
ret
sbbl
sub
test
cli
in
dec
mov
outsl
push
je
cmc
out
sti
movsb
sahf
fs
jg
lods
es
push
testb
jo
adc
and
cs
pop
pop
adc
jle
sbb
pop
xor
mov
cmp
inc
aad
mov
aad
cmpsl
push
aaa
fwait
xor
xchg
adc
out
in
sub
sub
lea
jl
call
out
xor
jno
jle
mov
adcb
std
mov
lahf
movsl
dec
mov
mov
sahf
push
adc
fisttps
or
lods
fcmovnu
test
fidivs
ds
gs
xor
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
in
push
loope
mov
adc
sbb
in
sub
movsl
outsb
cmove
orb
mov
or
rorl
pop
out
push
add
inc
scas
add
shlb
popa
imul
or
pop
fsubs
testl
arpl
jge
xor
lcall
out
test
add
and
shll
mov
test
adc
dec
add
ret
iret
insl
leave
adc
push
daa
loopne
pop
and
ret
push
pop
ljmp
adc
out
or
pop
xchg
jnp
sahf
daa
repz
cld
fcomps
mov
lcall
inc
jecxz
pop
or
rcrb
rclb
mov
inc
push
rcrb
fistps
sar
pop
adc
pop
inc
adc
ja
add
xchg
cld
lahf
arpl
push
inc
push
out
lods
arpl
pop
inc
insb
adc
add
xchg
pop
adc
pop
jno
or
cmpsb
fidivs
mov
int3
arpl
nop
jnp
sbb
pusha
cld
pop
cmc
push
cmp
gs
and
aaa
dec
fs
dec
loope
pop
rolb
orl
mov
sub
pop
xor
mov
xchg
mov
adc
mov
leave
jmp
and
sub
adc
repz
pop
or
shrl
cltd
cmp
xchg
popf
mov
push
dec
adc
out
pop
incl
insb
sarl
ljmp
lock
das
fdivrl
stos
js
dec
push
dec
repnz
in
dec
sbbb
imul
mov
out
cmp
xchg
test
adc
or
sbb
push
fistps
push
fs
pop
outsb
insl
lret
dec
or
into
sub
ljmp
jg
and
push
push
cmpsb
and
adc
fistpll
cs
mov
or
std
cmc
jle
iret
mov
ficompl
jne
xchg
shl
mov
jns
in
mov
dec
ja
ja
fwait
and
cld
xchg
add
mov
and
cmp
repnz
or
jb
cmp
cmc
stc
adc
xor
outsl
addr16
imulb
setp
dec
xor
xchg
sub
xorl
cmp
pop
enter
sbb
loope
mov
jnp
xor
shr
lcall
push
mov
andl
lcall
sahf
push
sub
lock
jb
xor
dec
xor
movsl
adc
pusha
push
cmp
and
mov
dec
out
pop
adcb
push
push
in
shlb
pop
or
pop
jb
fnstcw
in
cs
pop
lods
mov
pop
sbb
xchg
rorl
mov
test
arpl
push
dec
stos
mov
stc
ret
lcall
cld
xchg
aaa
das
mov
mov
notb
ret
push
and
pop
jmp
fsubs
mov
ds
jbe
push
testl
outsl
ret
sti
pop
es
lock
or
mov
dec
adc
push
xchg
adc
add
pop
ja
push
arpl
jmp
push
repz
mov
adc
xchg
jae
in
pushf
test
mov
mov
xchg
inc
xlat
movsb
jmp
or
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
movsl
xlat
mov
mov
sub
fisttps
mov
fcmovnu
pop
fs
sub
dec
loope
dec
lds
dec
sub
push
cmp
mov
cmc
cmp
and
or
out
mov
mov
mov
cmc
es
xor
popf
pop
lcall
xchg
dec
jae
dec
lock
adc
mov
fsubr
je
incl
cmp
mov
cld
rorl
sahf
sub
mov
cld
cli
add
fadd
call
pusha
jnp
jge
push
jmp
test
sahf
add
mulb
gs
scas
icebp
adc
jno
ja
cmp
arpl
aad
mov
mov
pop
movsl
and
or
das
jns
sbb
jl
adc
xchg
mov
lret
inc
aaa
pop
lods
addb
fdivr
sbb
je
sarl
add
cmp
adcl
or
add
lret
ret
ret
in
fwait
lods
cmc
ss
inc
xchg
int3
dec
stc
add
cld
inc
add
test
and
mov
or
adcl
cmpsb
pop
movsb
mov
sub
sub
cli
and
loope
loop
repz
xchg
sbb
or
jge
clc
in
ret
data16
pop
fcom
pop
scas
int
fsubrp
add
mov
pop
fildll
shrb
lods
std
dec
mov
scas
stos
lds
and
mov
inc
jmp
std
mov
jmp
into
subl
divl
aaa
push
aas
pop
movntq
mov
jl
xor
femms
insb
jae
rclb
and
jae
stc
clc
mov
sub
movsl
sbb
push
mov
xchg
adc
lock
xor
pop
sub
mov
jl
cmc
dec
andb
or
mov
in
mov
or
dec
into
mov
call
push
add
xor
shl
flds
mov
push
lcall
sub
test
aaa
shll
sbb
ds
xchg
jbe
sbb
or
jmp
sub
xchg
xchg
bnd
loope
insb
sbb
sti
dec
movsl
cld
in
sbb
pop
cmp
or
aaa
lcall
aam
mov
int3
into
pop
idivb
stos
inc
dec
fdivs
sbb
sub
rcll
cmpl
ds
xor
cmpsb
inc
xor
sbb
aaa
push
push
fcomip
ret
les
push
mov
push
cmp
sub
inc
ret
mov
jl
sub
add
adc
sub
xor
and
loopne
fs
or
pop
xor
sbb
sbb
add
mov
scas
pop
sbb
sbb
inc
push
mov
and
cwtl
xchg
icebp
mov
and
iret
lea
arpl
lea
mov
das
insl
pusha
jo
dec
lods
imul
jmp
popl
out
sarb
jo
test
cs
and
mov
mov
xor
dec
fisubrs
xor
cltd
sbb
sbb
mov
lcall
inc
pop
cld
cmp
aam
xor
not
fdivrl
lcall
cmp
loopne
cmp
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
rorl
add
sbb
lahf
or
lods
aas
ss
push
hlt
imul
xor
imul
sbb
mov
orl
lea
in
loop
mov
mov
scas
jnp
pop
adc
adc
lahf
data16
subb
lea
mov
jb
jp
push
dec
roll
rol
xor
xor
xchg
scas
jbe
int
es
cwtl
dec
mov
jl
in
dec
sub
orl
adcb
ja
inc
adc
add
daa
nop
popa
inc
jae
stc
dec
mov
lds
ljmp
jbe,pn
xchg
outsb
xchg
or
out
clc
sbbl
mov
jns
mov
and
mov
dec
jb
mov
inc
cmc
subl
xor
cs
inc
jecxz
cli
jnp
cmp
insb
ja
pop
push
push
xor
mov
ficoml
js
cwtl
jnp
out
push
xchg
mov
xchg
push
xchg
int3
insl
mov
ret
into
push
jmp
mul
pop
scas
pop
xchg
sbb
cs
push
inc
jmp
jle
aas
push
outsl
or
adc
mov
inc
ret
mov
addr16
or
lahf
add
pop
in
adc
wrmsr
mov
rorb
inc
mov
add
stc
cld
xchg
push
adc
sarl
lret
andl
into
fwait
add
mov
dec
cmp
loop
out
aad
icebp
jmp
xchg
adc
cld
jle
lock
sbbb
pushf
test
mov
mov
push
push
fsubrs
or
lcall
xor
jp
push
sarl
mov
sbb
inc
mov
repnz
push
xor
mov
cmpsb
int
push
pop
js
cltd
ss
mov
jle
push
stos
bound
push
jo
mov
adc
pusha
subl
inc
lret
les
sbb
jb
loopne
xchg
shrl
adc
int
or
add
shrb
cmp
aas
pop
sub
das
xchg
iret
cmpsb
ss
mov
cld
push
ret
fucompp
andl
dec
mov
out
cmp
loop
mov
pop
addr16
pushf
sbb
dec
and
rorl
push
ret
xchg
sub
pop
jnp
xchg
out
cmp
rclb
mov
jae
es
in
cwtl
adc
sbb
xor
cmp
sub
sbb
xchg
mov
jecxz
push
nop
inc
sub
aas
dec
cs
jg
aam
bound
sbb
cmp
push
mov
add
pop
test
ficomps
push
sub
jae
xchg
in
dec
scas
add
inc
xchg
jo
pushf
xchg
xor
lds
jp
cmp
bound
sbb
mov
ret
cwtl
sub
mov
pop
lcall
jl
cmp
or
fdivrs
daa
add
xchg
pop
icebp
test
mov
xor
icebp
add
pop
push
sub
cmp
addl
popa
mov
jb
fcomip
pusha
ljmp
ja
cmp
jae
jbe
mov
dec
add
and
inc
cmp
xor
mov
mov
loopne
mov
stos
push
mov
std
pop
mov
dec
orl
out
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
or
cmp
sbb
pushf
testb
and
leave
pop
ss
push
sahf
insb
push
dec
in
cli
insb
and
push
movsb
out
inc
jge
push
lds
cmp
jnp
cmpsl
mov
xchg
or
xor
icebp
push
pop
aaa
mov
mov
jae
imul
inc
inc
rcrl
fnsave
pop
sub
fiadds
mov
cmp
dec
mov
pop
test
sub
in
xor
and
ret
push
call
sahf
movsb
nop
fbstp
jns
xchg
aas
fdivrl
popa
aam
test
jnp
pop
subl
ret
in
inc
cmpsb
push
mov
and
imul
subl
lods
arpl
lock
loopne
insl
pop
cmp
scas
jns
lods
and
pop
mov
dec
lcall
clc
pop
or
es
add
sbb
xchg
fs
mov
add
pop
mov
xor
push
and
loopne
pop
inc
push
fwait
rolb
mov
aas
shrb
jne
aaa
dec
add
xchg
jno
inc
testl
ja
js
mov
pop
add
mov
jb
out
inc
stos
aam
dec
jne
jb
cmp
xchg
xchg
dec
loope
hlt
aam
jg
fstpt
and
negb
repz
sub
jb
mov
mov
shrl
mov
mov
sbb
lds
pop
pop
jno
adc
push
pushf
or
xlat
fs
xchg
push
xchg
stos
cmpb
in
cmpsb
pop
pop
mov
mov
adc
fistpll
push
add
ret
mov
fwait
test
lock
xchg
test
mov
sbb
push
inc
lret
es
mov
enter
xlat
mov
imul
sub
rep
add
mov
cmp
or
int
call
je
xchg
rolb
cmp
mov
adc
inc
lahf
ss
pop
pop
and
ds
int
sahf
mov
insl
cli
push
xchg
mov
add
sub
jno
cmp
pop
cmp
xlat
inc
lret
xor
push
push
pop
outsb
push
xchg
jmp
test
jnp
loop
lea
pop
mov
repz
adc
inc
lds
fisubs
push
push
ficompl
ldmxcsr
inc
xor
mov
arpl
push
dec
ret
cmp
imul
iret
dec
aas
in
pop
inc
bnd
lock
loop
fiaddl
jnp
adcb
jp
sarb
sbb
or
mov
dec
sub
jnp
xchg
lds
cmp
mov
std
mov
lcall
mov
repz
cld
mov
sub
sub
sbbb
pop
fidivs
inc
sub
mov
pop
jg
push
das
pop
add
call
aam
jb
test
loop
dec
cltd
fs
add
dec
arpl
sub
adc
clc
mov
cmp
das
push
xchg
sbb
cli
pop
test
push
adc
push
pop
sti
jecxz
or
jle
scas
imul
lea
movl
mov
jmp
adc
dec
push
repz
in
in
cmpsl
mov
lods
inc
repnz
fnstcw
mov
sub
jb
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
test
sbb
adc
push
je
aas
nop
lret
call
mov
test
jge
push
adcb
icebp
lahf
aas
sub
push
aaa
ret
mov
sub
repnz
hlt
push
in
mov
sbb
loopne
pushf
inc
xor
mov
fimuls
or
cmp
pop
divb
mov
or
mov
jge
dec
sbb
cld
push
mov
inc
push
xchg
pop
jl
push
les
cltd
popa
adc
push
enter
inc
nop
lcall
mov
pop
loop
xor
iret
cmp
mov
sahf
cmp
fstpt
repz
inc
leave
sahf
and
mov
ret
or
lods
inc
push
inc
jp
fistps
mov
and
lods
push
xchg
sub
mov
jmp
fwait
push
subb
sbb
outsl
dec
sbb
and
mov
repnz
in
dec
xor
mov
fisubrs
outsl
pusha
sub
arpl
adc
aam
mov
pop
adc
push
dec
lret
push
fs
pushf
lock
or
shr
nop
gs
mov
push
mov
cltd
add
and
imulb
cmp
call
lret
es
call
fs
nop
jb
shrl
outsl
jb
or
pop
fxch
jge
subb
lods
movsl
js
inc
fidivl
lret
and
adc
aad
adc
sbb
push
adc
adc
or
fisttpll
mov
adc
sub
sbb
mov
pushf
orl
das
rorb
adc
arpl
and
mov
pop
test
rorb
and
fs
fidivrl
adc
xchg
mov
dec
aas
leave
lods
test
dec
xor
pop
int
mov
cmpl
hlt
aam
push
fs
mov
lock
lods
jne
adc
pop
fildll
lock
or
movsl
sbb
loope
aad
leave
mov
aam
mul
aaa
inc
cli
addb
mov
ret
addr16
ror
pop
lahf
mov
sti
cld
fisttpl
fbld
inc
mov
fisttpll
test
ds
stos
or
adc
mov
js
xchg
push
dec
setb
iret
lods
xchg
sub
xchg
sar
adc
lahf
jp
push
adc
addr16
mov
pusha
add
and
cld
jmp
cltd
cmp
mov
inc
push
orl
jg
add
imul
mov
int
sub
mov
test
jns
xor
cli
mov
int
std
js
aad
sbb
int3
jo
inc
cmpsl
rorb
fdivr
mov
add
pop
jecxz
push
mov
adc
in
pop
jp
jge
fisttps
sbb
add
movsl
stc
and
add
pop
push
mov
sub
fisubl
ss
scas
lcall
xchg
cmpsl
jmp
sbb
pop
pushf
movsb
fcmovb
mov
ds
pop
arpl
and
pop
sbb
dec
mov
sbb
mov
cmp
imul
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
loop
pop
jo
imul
mov
dec
pop
jg,pn
sbb
outsl
add
jp
push
cmpsl
mov
loop
jg
xchg
filds
sysret
fldl
inc
loopne
push
scas
out
cmc
outsb
icebp
push
lock
mov
xor
pop
orl
in
cmp
sbb
pushf
lcall
mov
xor
stos
dec
lods
je
xchg
xor
fnstcw
inc
sbb
dec
push
mov
fs
cmp
pusha
mov
mov
daa
xchg
xor
pop
xchg
int
mov
or
fprem
xlat
je
dec
push
mov
lock
sub
call
shlb
outsb
xchg
mov
fcomps
push
in
lret
or
es
mov
test
push
adc
in
add
mov
and
xchg
in
dec
mov
insb
sbb
in
xor
xlat
xlat
add
mov
stc
and
sarl
adc
loop
insb
dec
add
mov
dec
outsl
dec
out
int3
int3
clc
pop
inc
aad
jno
inc
cmp
rolb
mov
add
xorl
xor
xor
sbb
sub
pop
icebp
cmpsb
pop
xchg
sahf
sahf
int
push
xlat
and
popf
lods
inc
ljmp
sarb
adc
les
iret
push
stos
jecxz
lea
or
and
std
arpl
push
xlat
push
cmp
mov
add
push
adc
gs
add
loope
dec
sbb
ficoml
xor
sarb
sbb
mov
and
sbb
inc
in
out
scas
faddl
inc
movsb
cld
mov
mov
lds
popf
mov
mov
jo
pushf
add
cltd
push
jp
mov
mov
add
and
call
arpl
out
xor
cmp
loop
fisubs
and
shrb
add
mov
divl
jbe
xor
xchg
push
in
xor
cmpsl
lret
adc
xor
xorb
mov
or
add
xor
pop
lcall
out
jns
into
lods
mov
mov
or
into
jb
hlt
rcrb
xor
and
test
mov
lahf
mov
cmp
adc
xor
push
shr
subb
pop
dec
and
mov
gs
sub
lret
xchg
push
xor
mov
pop
into
adc
xchg
sbb
fs
inc
inc
pop
jp
push
sub
adc
scas
imul
cmp
pop
and
adc
scas
imul
mov
fstcw
repz
insb
xor
mov
js
fdiv
mov
lahf
adc
dec
je
clc
sub
lods
sahf
cli
sbb
sub
mov
jecxz
enter
call
stc
popa
cmc
std
lcall
lahf
int3
cmp
jae
add
subl
imul
add
lock
and
pop
call
lds
pop
push
mov
jb
test
lcall
ds
xchg
mov
loope
fwait
dec
push
adc
repnz
mov
sub
jp
cmpsl
jbe
cmp
clc
repz
jle
pop
adc
cs
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
xchg
lock
in
mov
sub
sbb
bound
pop
out
cmpsb
and
stos
jle
xchg
inc
or
pop
and
pop
in
pushf
xchg
inc
testb
push
data16
add
sub
pushf
testl
adc
repz
adc
pop
mov
push
and
dec
in
xor
ljmp
insl
push
sub
test
dec
sbb
ljmp
inc
in
push
movsl
xchg
and
in
lret
and
inc
mov
hlt
cli
sub
push
sub
out
ret
repnz
or
int
xor
icebp
pop
arpl
js
pop
and
or
clc
mov
xchg
pop
dec
aaa
mov
lds
or
xlat
sahf
add
stc
outsb
push
daa
add
mov
fsubp
lcall
dec
gs
push
lret
outsl
xchg
int
adc
fildl
pop
stos
lods
push
cs
push
add
test
out
pop
cmpsl
ljmp
fdiv
hlt
jecxz
mov
mov
outsl
mov
adc
xor
pop
daa
and
in
add
pop
add
mov
jp
in
pusha
stos
jg
ljmp
shll
xchg
xor
mov
and
mov
ss
pop
inc
int
add
lea
pop
mov
inc
push
aam
shlb
dec
lods
fs
pop
pop
outsb
dec
pushf
shl
fisubrl
and
fwait
aam
addl
mov
xor
push
jb
mov
push
ja
mov
pop
jecxz
jecxz
fcompl
cld
xlat
mov
mov
loop
lds
es
je
inc
sbbl
cmp
and
ss
insl
and
pop
outsl
jl
push
pop
xchg
sahf
push
xchg
cmp
cli
rorl
andl
jmp
mov
repz
scas
rcrb
cli
inc
add
mov
flds
popf
les
testb
or
dec
cmpb
and
orb
fistpl
btc
sbb
inc
push
cld
push
lea
xchg
mov
pushf
cmp
mov
pop
test
imul
lcall
xchg
xor
add
int3
mov
insb
in
mov
test
mov
in
sbb
mov
mov
mov
inc
add
pushf
lcall
je
sub
inc
lahf
rcrb
in
test
dec
rorl
addl
daa
sub
xchg
lds
adc
sbb
mov
inc
jae
jb
pop
arpl
orps
movsb
jg
mov
pop
orl
fidivl
data16
ret
push
add
loopne
negb
lea
outsb
xor
mov
mov
filds
shlb
fiadds
aad
adc
mov
testl
arpl
lret
ja
mov
mov
jg
pushf
fsubs
mov
mull
sbb
sub
inc
mov
test
cmp
jp
dec
idiv
or
incb
mov
ficompl
adc
jne
jo
jo
rorl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
mov
mov
pop
push
sbb
stos
xor
in
in
mov
cld
clc
mov
push
jmp
jae
jl
xchg
jg
mov
mov
mov
imul
adc
and
push
ja
adc
push
lahf
out
xchg
push
lds
pop
or
sbb
jns
xor
cmp
je
repz
xor
fwait
cmp
mov
js
ud2
ficompl
xor
mov
fmulp
lcall
scas
outsl
and
push
push
ja
cwtl
sub
pop
js
icebp
jg
fisubrl
mov
test
jg
cltd
sub
bound
push
je
testb
pop
or
xor
lcall
les
pop
cli
pop
mov
push
outsl
lret
xchg
icebp
and
add
pop
add
cmp
movsl
sbbb
sub
lret
psrld
ficoms
adc
cmp
push
jno
mov
loope
dec
cs
into
xchg
xor
lahf
sbb
push
and
jle
sub
mov
sbb
inc
cwtl
xchg
xchg
pop
jp
mov
int3
pop
sub
sub
cmpl
push
mulb
aas
xchg
call
jmp
hlt
popf
adc
fisttps
imul
dec
cmp
cmpsl
sub
orl
mov
adc
mov
mov
xor
incb
flds
pusha
loop
mov
jle
push
aas
pop
inc
cld
mov
mov
mov
xchg
push
fdivrl
sub
dec
popa
aas
jb
mov
sbb
cmp
pop
stc
loop
cmc
sub
xor
mov
inc
pop
sub
outsl
sbb
icebp
call
mov
hlt
mov
xor
ficomps
mov
mov
mov
daa
xchg
mov
das
into
fcoml
xchg
test
sub
pop
test
sbb
dec
sarb
xor
cs
and
test
pop
xor
aaa
in
fwait
pusha
or
in
insb
ss
push
subl
cmp
je
addb
aad
push
jge
or
clc
cld
mov
fdivs
clc
or
cmp
arpl
or
nop
xchg
roll
jnp
cs
sub
loopne
jmp
sbb
pop
xor
pop
mov
jb
rclb
sub
in
pop
movsb
out
stos
xor
and
gs
xor
xchg
orb
cmc
test
out
and
scas
mov
mov
outsb
test
mov
xchg
inc
fistl
push
sub
xor
xor
cmp
fiaddl
mov
gs
imul
pop
das
mov
mov
mov
add
dec
jg
add
jp
in
xor
aaa
push
jbe
repnz
sbb
insl
jbe
clc
xchg
test
xchg
jno
xchg
movsl
adc
inc
push
add
cmp
ljmp
dec
xor
xor
mov
movsl
in
sub
jne
hlt
or
aad
loopne
push
jmp
jae
imul
dec
lcallw
cmp
dec
aas
cmp
cli
out
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
or
push
push
push
sbb
xchg
sub
mov
dec
xchg
xor
inc
xchg
icebp
mov
hlt
jne
sbb
ljmp
adc
jmp
and
sbb
stos
jnp
scas
xchg
sbb
sbb
loope
sbb
data16
sahf
mov
shrb
sti
sub
or
dec
adcb
jnp
mov
mov
mov
lods
inc
sti
push
add
testl
mov
ficoml
and
push
lahf
jb
fistps
mov
xor
push
adc
and
lods
fstpt
in
ss
sub
insb
imul
dec
icebp
pop
inc
mov
sti
fldl2e
sub
or
fsts
add
mov
push
push
xorb
adc
push
cltd
rol
ja
and
sbb
fs
xor
adc
aas
mov
loop
loopne
inc
and
test
mov
lods
push
daa
enter
decb
add
and
add
xchg
popa
sti
rcrl
sbb
test
dec
push
lods
pop
stc
test
or
jne
jg
pop
test
cmp
jnp
ret
xchg
or
jecxz
roll
xchg
stc
or
enter
fdivrs
rorb
in
push
sbb
lds
hlt
xor
mov
adcb
arpl
pop
pop
mov
jge
xchg
mov
pop
lcall
clc
sub
cmp
add
or
xchg
or
adc
xchg
mov
jmp
jns
mov
cmp
inc
outsb
fsubs
into
insl
mov
pop
lods
mov
cmp
cmp
aas
jno
gs
jns
pushf
int
dec
add
or
out
jno
sbb
mov
xchg
cmp
fsubrp
stc
notb
pop
nop
ret
repz
arpl
push
xor
arpl
pop
popf
inc
aad
insb
adc
or
das
cmp
sarb
popa
fwait
stc
enter
scas
ljmp
cmpsb
lods
testl
out
jae
sub
pop
jmp
loope
sbb
loop
inc
mov
loop
and
test
cmp
xchg
jb
cmc
es
xchg
test
pop
fst
cld
mov
rcr
dec
sub
stos
fs
push
shl
aaa
call
push
mov
adc
mov
sbb
adc
andl
pop
dec
pop
dec
jo
insl
add
pop
mov
rcrl
mov
adc
cmp
jl
jno
and
jns
and
cli
or
js
cmp
out
aaa
pop
and
push
xor
sub
icebp
inc
in
pusha
subl
inc
add
sbb
cwtl
les
jb
fnstenv
popl
lods
mov
sbb
nop
jo
pop
out
inc
mov
adc
dec
add
cmpsl
push
xor
adc
sti
xchg
sbb
adc
mov
jl
test
bound
outsl
sbbb
jo
bound
cmpsb
pop
mov
in
and
ficompl
cmp
add
xchg
sti
mov
es
stos
or
fisttpl
jnp
je
mov
iret
add
sbb
ret
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
stos
jg
push
sbb
add
lods
or
inc
sarl
insl
dec
pop
adc
comiss
dec
and
out
xchg
scas
gs
mov
or
cwtl
dec
sbb
mov
pop
xlat
jo
jae
aaa
mov
lods
mov
out
dec
jmp
sub
insl
dec
repnz
mov
fstp
cmp
dec
lods
sub
inc
push
push
cmp
fmull
adc
out
sahf
adc
fwait
test
inc
out
stc
jge
sbb
mov
mov
pop
mov
outsl
cld
mov
rcr
inc
pop
lea
mov
ja
jle
repnz
rcll
or
mov
pop
mov
mov
cli
leave
cli
sbb
data16
pop
aam
mov
mov
roll
jbe
or
neg
adc
dec
jmp
inc
and
xor
xchg
stc
insb
pop
popf
hlt
lcall
pop
pop
fstp
addl
stc
jmp
sti
jnp
mov
nop
sbb
pop
es
push
jb
push
and
cmpsl
test
sub
dec
dec
add
jbe
push
push
inc
aam
outsl
xchg
mov
stc
cmpsl
outsl
icebp
repnz
and
subl
mov
xchg
push
dec
movsl
in
sub
loop
push
inc
cltd
pop
sarb
dec
lahf
and
iret
and
fs
test
cmpsb
sahf
iret
adc
jnp
into
adc
scas
sbb
add
cwtl
jne
psubq
test
and
arpl
test
xor
xchg
lods
cmp
shrl
mov
and
sub
fstps
les
xor
fsts
mov
xor
mov
dec
mov
loope
and
or
in
pop
mov
out
fisubrs
xchg
pop
in
sbb
inc
fldl
dec
cmpsb
xor
mov
stos
int3
pop
outsb
fnstcw
arpl
xor
mov
pusha
cmc
mov
fsincos
les
cmpsl
test
aad
stos
jb
mov
push
in
ss
cmp
xor
stos
jmp
dec
add
loop
test
andl
dec
fidivrs
jne
insl
fs
xchg
push
insl
pop
ja
adc
mov
pop
or
push
nopl
dec
push
add
xchg
and
add
popa
outsb
push
aas
stos
imul
ljmp
stc
scas
arpl
int3
clc
fcomps
fsubrs
cld
pop
mov
cmpsl
sub
sub
dec
mov
data16
clc
push
pop
xchg
sti
jns
cs
pop
and
pop
add
adc
jmp
fwait
sub
in
inc
mov
stos
lahf
and
lock
inc
into
leave
das
inc
jl
xchg
sub
dec
bound
adc
adc
and
sbb
or
xchg
xchg
or
push
pusha
adc
and
out
add
lock
xchg
mov
lods
inc
sub
mov
pushf
cmp
imul
pop
test
mov
xor
sbb
aaa
sub
and
testb
repz
ror
mov
orl
push
pop
sbb
pop
loope
cmc
sbb
in
pop
in
cmp
lock
sbb
jg
popf
xlat
sub
not
dec
inc
or
mov
mov
jmp
mov
and
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
xchg
dec
jle
inc
push
sbb
loop
sbb
js
xorb
sub
out
lret
lock
lock
pop
movsl
mov
test
test
out
sub
popa
push
and
jmp
adc
sbb
xor
and
cld
jmp
out
fnstcw
ds
arpl
lock
add
int3
sti
push
pop
in
rcrb
or
arpl
xchg
aad
movsb
push
mov
add
mov
inc
shlb
orl
mov
lods
mov
int3
xchg
sub
push
pop
aad
outsb
nop
push
movsl
aam
mov
mov
pop
mov
stc
xor
sbb
scas
push
addr16
mov
imul
adc
cli
push
int
sbb
adc
mov
repnz
sub
repz
mov
aam
rorb
cwtl
jg
push
add
xchg
push
mov
mov
jp
jecxz
jno
ficompl
fadds
or
jns
add
shlb
shll
in
int3
cmp
xchg
mov
es
pop
inc
or
cltd
jnp
mov
ljmp
ret
mov
cltd
inc
fstps
sbb
adc
ss
fadds
mov
jg
std
and
ret
es
xlat
sbb
and
mov
jmp
cmpsl
jmp
dec
push
in
add
mov
dec
fists
je
push
sub
jg
xchg
daa
or
leave
sub
pop
lret
xorb
out
jae
aas
mov
push
mov
adc
aaa
inc
mov
sub
jmp
hlt
cmpsb
stc
cmp
mov
and
mov
stos
adc
or
imul
or
mov
aaa
rorl
and
sub
dec
lods
xor
xor
xor
gs
ffreep
dec
sub
jg
and
sbb
push
jle
imul
pop
sbb
inc
and
cmpsl
cmp
and
sahf
inc
or
pop
xchg
je
mov
leave
popa
cmp
shll
sub
mov
mov
inc
sub
mov
pop
cs
call
movsl
lods
jl
or
shrl
rcll
cwtl
dec
punpckhbw
jle
dec
sbb
fsts
or
xchg
adc
mov
scas
mov
lret
lahf
mov
fisubs
icebp
mov
dec
inc
lds
mov
pop
or
adc
xchg
call
xor
mov
add
setg
push
mov
in
fisttpll
fists
popf
das
mov
push
cmp
test
lahf
mov
aad
stos
cmp
arpl
dec
mov
pushf
mov
xor
pop
enter
jp
mov
loopne
movsl
cmp
aas
jbe
shlb
addr16
cmp
adc
in
sub
xlat
cli
cmp
cmp
in
lock
sti
idivl
mov
add
loopne
sub
das
int
cmp
ficomps
jb
outsl
lea
sbb
stos
mov
mov
cmc
cmp
jecxz
jl
arpl
clc
rol
pushf
icebp
jne
insl
cltd
push
insl
cmpsl
inc
jns
dec
xlat
cmp
add
inc
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
fs
aas
push
sbb
mov
xchg
mov
stos
sbb
daa
andl
dec
das
push
shll
pusha
ds
pop
aad
scas
sub
jae
adc
pop
xchg
push
sti
or
fisttpl
call
sbb
aaa
adc
les
mov
outsl
je
outsl
test
in
jb
cmpsb
fimull
cs
and
cmp
or
pop
test
inc
lcall
sbb
mov
jmp
push
or
aaa
dec
subl
pop
and
fidivrl
xchg
and
inc
cmp
das
into
cld
int
popl
cwtl
push
call
inc
push
or
push
sub
add
mov
cmp
mov
jne
dec
in
scas
or
daa
movsb
cmp
ljmpw
adc
aas
mov
sti
or
inc
jns
jo
jle
jmp
sti
adc
sub
sbb
pop
mov
fs
or
inc
mov
and
dec
mov
sbb
sti
into
ret
pop
icebp
cltd
push
jnp
out
push
jno
push
iret
dec
jb
repz
add
fwait
addr16
leave
pop
dec
inc
outsb
mov
in
repz
movsb
stos
and
movsl
xacquire
sahf
ret
ljmp
call
push
jno
enter
aas
jo
arpl
pop
mov
mov
into
xchg
add
or
loope
loop
js
mov
popf
mov
into
shl
xchg
scas
mov
jbe
insb
test
mov
mov
lods
xchg
dec
repz
pop
out
cli
pop
loope
int
and
push
sbb
and
sub
rcrl
pop
adc
inc
addr16
data16
dec
or
in
sub
out
cwtl
and
out
rclb
add
sbb
push
inc
and
imul
xorl
cmpb
roll
mov
jmp
jg
push
fwait
and
push
fdivl
add
out
add
sbb
sbb
imul
mov
mov
dec
xchg
pop
mov
jb
arpl
fidivs
cmp
mov
mov
cmp
or
dec
mov
push
jnp
scas
xchg
pop
jge
movsb
mov
mov
push
xor
imul
jno
cld
adc
adc
cmpsl
and
sub
movsb
add
sbb
sti
add
jnp
jb
repz
mov
pop
jecxz
mov
pop
cmp
int
lahf
sub
lret
ret
push
add
aaa
add
cmp
test
ja
and
stos
test
mov
dec
adc
ret
xor
xor
mov
push
xor
xorl
loopne
std
adc
sbb
repz
cli
adc
lret
stos
popf
mov
insb
shlb
inc
pop
sub
add
ficoms
test
bound
inc
iret
push
aad
inc
inc
jmp
outsl
lock
lcall
jle,pt
rol
jg
mov
lcall
xor
hlt
push
xchg
mov
xor
sub
test
int
xchg
add
jo
or
jbe
stos
ss
xlat
sbb
loopne
or
jmp
test
nop
lahf
jp
and
xor
int3
imul
adc
sbb
or
das
mov
adc
cmp
arpl
sub
push
cmp
xor
dec
sbb
call
pop
inc
hlt
pop
stos
or
lret
xchg
ficoms
sahf
jl
inc
cmp
sbb
dec
out
lods
imul
test
mov
fistpl
adcl
cmpsl
mov
movb
xor
fmull
mov
cltd
pop
jnp
lret
stc
shrl
test
roll
cli
in
adc
cmp
pop
mov
adc
xchg
sub
bnd
mov
decb
mov
pushf
or
insl
jecxz
fdivrl
mov
test
jp
xorb
xchg
mov
jp
addr16
fiadds
mov
pop
decl
sub
lcall
xor
jl
pop
scas
loope
or
movsl
pop
xor
cmpb
out
test
out
loope
cld
dec
shrl
jl
jg
mul
inc
pusha
lea
fcoml
push
data16
shl
aam
outsb
sbb
push
loop
lahf
jns
loop
jge
cmp
mull
adc
addl
lret
push
popa
int3
xchg
jae
push
inc
imul
andl
iret
xchg
sub
outsb
xor
pop
das
movsb
mov
or
jg
scas
inc
test
sbb
sbb
push
ficompl
inc
out
mov
mov
xlat
popa
xchg
mov
mov
lcall
std
scas
cmp
jbe
nop
jb
pop
mov
pop
and
rolb
sahf
icebp
lea
push
sub
inc
sbb
jo
lock
ljmp
cmp
or
imul
xchg
add
sbb
inc
ds
xorb
cmp
push
dec
mov
xchg
xchg
test
inc
stc
adcl
sbb
fdivr
push
or
test
push
jb
sarl
jmp
ds
mov
ja
adc
gs
rcrl
mov
push
repnz
inc
mov
cmc
jecxz
cmpsl
dec
jbe
test
push
push
pop
mov
push
or
stos
popa
aas
push
cmp
mov
pop
mov
flds
inc
mov
mov
cld
call
loopne
mov
fisubrl
movl
jge
cmp
push
lds
mov
cmp
dec
sbb
inc
jl
subl
out
xor
mov
imul
into
int3
shl
jb
jns
es
push
cltd
or
dec
inc
ret
push
clc
mov
mov
rcll
fldl
push
repnz
ja
imul
imul
addr16
sbb
jg
sub
nop
dec
xlat
or
xor
mov
xchg
push
std
push
out
cmp
and
mov
test
std
push
test
lcall
sub
xchg
adc
lods
in
lahf
mov
nop
mov
rclb
addl
xchg
adc
sarl
adc
push
and
iret
pop
sbb
lea
push
mov
not
push
movsl
push
sub
enter
hlt
js,pn
lock
iret
dec
cmp
xlat
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
stc
lea
das
push
sbb
pop
loope
add
xorl
jg
xchg
lahf
rclb
in
xchg
xor
clc
insb
xchg
insl
and
mov
push
xor
cs
mov
sub
inc
cmp
push
andb
sbb
adc
mov
pop
jmp
xchg
mov
mov
out
mov
mov
ret
inc
mov
jne
leave
dec
jecxz
enter
mov
scas
mov
mov
mov
cmc
or
inc
pop
pop
mov
mov
imul
cmpsb
pop
xorl
jle
das
test
mov
ljmp
mov
add
cmp
lret
leave
mov
shlb
dec
pushf
subb
jns
mov
andb
jnp
addr16
mov
and
lret
jo
fimull
aaa
shlb
popf
xchg
insb
push
jl
sub
dec
inc
rol
xor
add
inc
out
mov
push
or
int
ss
cmpb
stos
data16
movsb
mov
sbb
popf
push
cmp
mov
jne
cmp
inc
ljmp
add
inc
pushf
icebp
or
pop
push
aam
xor
jb
inc
sub
mov
mov
inc
mov
leave
iret
xlat
push
les
leave
sbb
cmp
mov
mov
nop
inc
xlat
inc
jne
ret
hlt
mov
pop
cmc
inc
mov
pop
cwtl
andb
div
adc
aam
dec
les
fiaddl
or
jno
lock
rcrb
das
scas
xchg
bound
imul
mov
push
popa
mov
xchg
std
lods
add
sub
sbbl
out
cld
pop
mov
stc
lock
incb
jl
cli
leave
fistpll
in
cmp
xor
mov
push
xor
mov
jge
inc
idivl
ja
and
ljmp
aaa
enter
push
cmp
mov
fadd
sub
out
pop
inc
mov
cltd
push
sub
jg
repnz
dec
fs
jmp
xchg
nop
dec
stc
int
xchg
pop
dec
pop
xchg
lahf
dec
push
or
sbb
cmp
sbb
dec
xor
lret
add
repz
ds
out
sbb
call
iret
ljmp
dec
rcr
or
jg
xchg
push
jmp
cltd
stc
scas
sub
jns
mov
jl
ret
add
pop
pop
rcll
mov
adc
cmp
sbb
cmp
lds
pop
jbe
cltd
cld
stc
mov
movl
or
lock
pushf
scas
xor
pop
rcrl
rcr
dec
jnp
adc
cmp
shlb
inc
xlat
cmp
push
add
xchg
mov
lret
imul
add
dec
pop
push
cmovno
sbb
rcll
mov
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
stos
cltd
sub
sbb
mov
daa
dec
push
xchg
ret
adc
lods
sbb
mov
imul
inc
rcll
cmc
lods
push
int3
sub
lods
cmpsb
mov
arpl
ja
inc
loop
mov
sub
and
outsb
in
mov
fmulp
iret
cwtl
popf
shlb
push
mov
into
je
push
sub
rcrb
push
or
clc
imul
mov
popa
enter
jnp
inc
mov
movsb
xor
pop
mov
lods
push
ja
addb
xor
jns
lods
hlt
outsb
mov
push
int3
cwtl
ss
cmp
shll
jno
mov
push
mov
cmc
sub
sti
ds
push
dec
sarl
mov
scas
insl
pop
fsub
fsubp
ret
subl
jbe
fadd
out
inc
inc
imul
call
jge
aaa
jmp
gs
divb
sub
and
stos
push
movsl
mov
push
xor
mov
andl
and
mov
push
sbb
mov
sub
mov
sbb
cmp
sub
cmp
imul
cmc
mov
dec
ret
push
stc
pop
sbb
enter
loope
daa
push
scas
pop
and
les
test
adc
popa
loopne
push
iret
hlt
push
pushf
jecxz
iret
mov
push
lret
dec
push
push
imul
add
inc
xchg
inc
inc
aaa
mov
mov
push
insb
adc
call
pushf
push
xor
jb
repz
setl
xchg
adc
pop
loopne
int
xchg
in
js
xchg
fsubrl
scas
out
dec
rep
rorb
inc
loope
and
bound
or
mov
push
jecxz
out
scas
shll
add
mov
movsb
in
mov
clc
ficompl
jle
xorl
dec
notb
arpl
enter
shrb
addr16
shl
aam
jle
loope
push
sbbl
ret
cmp
sbb
stos
ret
shl
ds
loope
andl
sub
dec
xor
xchg
and
in
jmp
and
and
adc
pushf
mov
adc
outsl
fwait
lock
mov
ror
fldl
stos
scas
test
ljmp
insl
movhps
sbbl
lret
sub
pop
in
pop
jecxz
push
fisubl
clc
inc
inc
add
ss
inc
add
or
add
int3
or
popa
add
adc
adcb
imul
push
pop
lret
jecxz
xor
pop
sbb
shlb
es
popf
jmp
daa
add
sub
clc
cmpb
jmp
lcall
sub
ret
jmp
cwtl
std
mov
sbb
idiv
cwtl
dec
dec
incb
jecxz
pop
jmp
movsl
pop
adc
inc
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
jecxz
mov
mov
cmp
push
or
cmp
lock
push
shlb
ss
xor
fs
mov
push
fsts
cmpsl
xchg
mov
in
jbe
in
aam
fwait
inc
push
test
into
dec
xor
xor
pop
ror
wbinvd
dec
fisubrs
addr16
movl
faddp
loop
mov
insl
cmpsb
pop
pop
bnd
or
jbe
lcall
push
jg
xor
xor
inc
cmpps
xchg
mov
push
pop
push
adcl
movsb
aad
and
in
jp
and
sub
inc
and
movsl
pop
sbb
and
insl
sub
jns
inc
mov
lock
inc
push
add
xchg
out
movsb
xchg
mov
jle
or
push
mov
enter
mov
clc
in
xchg
or
pop
loopne
aad
int
xor
into
push
pop
cmp
nop
xchg
push
jp
sbb
pop
sti
add
jle
mov
out
aam
gs
bound
jmp
push
xchg
or
fbstp
xchg
or
adc
repnz
inc
lds
sub
ja
push
in
mov
mov
aam
cli
scas
or
dec
xchg
xor
jle
rcl
pop
xor
enter
and
fldenv
add
jb
push
or
jo
mov
push
hlt
shl
test
out
ret
popa
xor
call
xor
outsb
fwait
push
mov
jns
fnstenv
mov
cmpb
daa
loop
jnp
faddl
rclb
cmpsb
xor
jle
push
test
stc
jge
int3
inc
dec
push
adc
lds
call
push
call
inc
nop
sub
jbe
push
lahf
mov
jns
mov
mov
jmp
push
mov
insb
loopne
push
jne
sub
daa
ja
or
das
scas
test
aad
xchg
cltd
xchg
cmpsl
xor
enter
dec
or
jmp
cmp
lods
cwtl
jb
data16
cmc
mov
jbe
in
pop
outsl
mov
jns
fdivs
add
jns
or
jmp
icebp
cli
jg
jecxz
ret
lret
sahf
dec
adc
inc
fldt
lar
scas
outsl
stos
and
dec
and
roll
add
jns
add
popf
xor
insb
int3
cmp
loopne
cmpsb
push
js
inc
out
cmpsb
cmc
xor
outsl
lret
add
push
and
or
xor
adc
mov
popf
inc
xchg
and
or
push
das
xchg
sti
jns
lods
jl
nop
and
push
call
dec
mov
in
insl
rcrl
mov
ret
xorb
aaa
push
stc
loop
adc
mov
ds
xor
mov
lcall
adc
test
mov
daa
outsl
adc
xor
test
in
pop
pop
adc
pop
in
add
mov
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
push
imul
sbb
sbb
rcll
popf
push
outsl
aas
push
and
jbe
xor
add
daa
into
or
xor
inc
dec
cmp
out
pusha
fists
in
adc
je
mov
sub
or
in
stc
mov
ficoml
fwait
adc
out
pop
xor
das
xchg
rclb
addb
push
out
aaa
push
scas
mov
add
leave
xchg
lahf
mov
fcompl
fdivrp
push
cmovl
and
xchg
enter
es
sub
add
repnz
push
push
cmp
push
dec
push
push
jl
or
insl
sub
mov
sub
xchg
ds
insb
sbb
jns
clc
ficoms
addr16
ja
int3
ds
inc
jae
ret
adc
dec
inc
mov
aas
mov
repz
fs
cmp
incb
outsb
jae
jne
jns
cs
or
or
in
cmp
push
pop
cmpsb
into
xor
aad
cwtl
mov
int
addr16
xor
bound
imul
outsb
dec
xor
arpl
int
int
pop
out
rclb
xor
loop
rorl
ljmp
push
cmp
icebp
cmp
inc
jb
in
daa
mov
adc
mov
dec
xchg
sbb
out
data16
push
inc
nop
outsb
test
imul
out
lret
gs
mov
jg
pop
icebp
popf
fwait
leave
testb
jno
rcr
movsl
ret
cmp
rorb
push
test
xchg
push
sahf
repz
pusha
pop
cmp
xor
xor
xchg
jge
push
fnstcw
push
shll
lret
inc
mov
lret
gs
xlat
sbb
imul
sti
xor
pop
or
and
push
out
adc
int
daa
dec
add
xchg
mov
mov
dec
mov
aas
je
pop
jb
dec
mov
pop
add
imul
loopne
inc
inc
cmp
call
mov
mov
push
iret
in
loope
xor
or
outsl
push
jno
imul
sub
cli
call
das
adc
sbb
cmp
lahf
fbld
push
bnd
lcall
loop
cmp
incl
sub
lods
lret
imul
mov
lock
mov
xor
push
loope
mov
fsubs
add
mov
push
stc
xor
scas
add
shr
or
sbbb
pop
dec
xchg
fcompl
sahf
cmp
daa
xchg
cvttps2pi
fwait
loopne
inc
cld
inc
hlt
sbbl
inc
mov
sub
repz
les
inc
add
dec
pmulhw
inc
addr16
das
inc
cwtl
jge
aad
pushf
mov
fs
sub
push
jge
int3
sbb
subb
sbbl
pop
sub
in
inc
inc
cmpsb
and
imul
adc
xchg
xchg
mov
cmp
cltd
shlb
sbb
inc
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
cld
cmpsl
mov
mov
into
push
loope
cmc
sub
xor
xchg
cmpsl
stos
mov
mov
xlat
nop
fnsave
jno
jae
out
push
loop
enter
in
nop
nop
cmp
scas
bound
out
pop
jmp
shrb
jl
sti
mov
arpl
fimull
mov
leave
mov
enter
ljmp
rorl
jmp
xor
mov
mov
and
sbb
sti
xchg
cmpsl
rclb
pop
dec
inc
iret
xorl
repnz
inc
inc
dec
dec
leave
cmp
loopne
sub
xor
aas
push
pop
ja
les
cltd
ss
xchg
ljmp
mov
jbe,pn
xor
lea
and
pop
adc
mov
bound
lods
jbe
lret
push
lea
jns
xlat
mov
mov
xor
in
fs
pop
push
rcrb
mov
imulb
int3
pop
in
fcmove
imul
lea
aaa
jo
je
xor
test
and
inc
lea
pusha
cmp
mov
imul
push
add
aam
xchg
pop
cmp
mov
jmp
jge
sub
lahf
in
jbe
ficomps
scas
notb
lock
sbb
lahf
sbb
andb
cmpsb
psubb
sbb
jg
sti
sbb
mov
mov
mov
ss
loopne
mov
jb
xchg
xor
push
xor
xchg
fisttpll
je
call
in
mov
cmp
xor
popf
pop
pop
jecxz
cmpsl
lock
jae
call
jns
push
add
dec
mov
jecxz
stos
xchg
rcr
je
add
push
cmp
clc
cmc
xchg
adc
inc
xchg
sub
mov
shrb
mov
push
rcl
xchg
sahf
rorb
fdiv
inc
push
add
in
in
and
mov
repnz
sbb
test
rorb
lods
xor
or
icebp
repnz
fwait
inc
fsubrs
dec
inc
bound
movsb
das
dec
enter
in
pop
popl
pop
jno
or
int3
mov
xchg
push
stos
stos
push
arpl
outsb
shr
adcb
mov
and
xchg
push
rep
jmp
insl
mov
aam
add
jle
test
call
aad
sbb
outsl
sti
sahf
inc
and
xchg
inc
push
ds
into
mov
sub
lahf
dec
faddl
test
in
movsb
push
sub
push
xlat
sub
ds
insb
cwtl
and
mov
cmp
jp
enter
pusha
loopne
mov
mov
sub
or
add
icebp
ljmp
pop
in
cmp
popf
adc
fstl
jae
inc
out
aaa
push
ja
adc
push
mov
dec
sub
mov
sub
ds
inc
mov
arpl
and
outsb
mov
xlat
scas
xor
ljmp
fwait
addl
inc
add
scas
rolb
add
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
fadds
mov
loope
sbb
sbb
and
mov
cmpsb
test
xor
or
imul
add
xor
inc
lds
dec
jle
mov
loopne
and
pop
push
mov
test
mull
les
mov
dec
xor
jae
cli
xor
adc
dec
mov
pop
repnz
adc
xchg
out
jno
ljmp
dec
inc
lret
push
sbb
push
test
dec
xchg
pop
mov
cwtl
cmp
arpl
push
int3
pop
dec
rorl
out
xlat
sarb
in
xchg
lret
test
mov
sahf
ljmp
xchg
nop
out
adc
xor
test
enter
pop
mov
cmp
pop
fbld
adc
in
mov
data16
lods
or
add
adcb
sarb
or
outsl
mov
mov
dec
int
loopne
lock
sbb
add
je
xor
jl
das
adc
pop
mov
imul
sub
fwait
test
mov
lock
dec
js
cmp
jne
imul
push
mov
add
cmp
in
push
movsl
or
mov
fldl
sub
dec
addr16
cltd
or
or
sbb
outsb
cmpsl
push
rorl
mov
jmp
dec
inc
and
mov
fisttpll
cmpsb
mov
jmp
int
xor
pop
or
scas
nop
adc
not
jp
hlt
lret
in
mov
or
mov
enter
inc
mov
imull
sbb
mov
lret
mov
xchg
jno
adc
in
mov
shrl
ds
stc
and
inc
mov
adc
xchg
scas
mov
stc
out
neg
xchg
out
je
imul
lock
sbb
popf
push
out
mov
cmp
lock
movsb
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
cmp
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
les
inc
add
daa
inc
add
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
lock
cld
and
inc
add
inc
add
es
add
inc
add
jle
add
es
add
add
and
inc
add
inc
add
add
push
movsb
scas
or
movsb
add
inc
add
es
add
es
add
es
add
es
add
and
pop
es
add
inc
add
lcall
push
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
fistpll
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
in
inc
add
sub
pop
loop
js
lcall
and
add
loopne
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
mov
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
pusha
lea
add
add
add
add
add
add
add
lea
add
add
inc
lea
add
test
add
add
xchg
add
xchg
add
add
xchg
add
add
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
mov
add
add
dec
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
jb
add
jle
add
mov
add
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
js
add
mov
add
mov
add
les
add
loop
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
stos
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
add
push
mov
add
add
jle
add
xchg
mov
add
add
les
add
mov
add
mov
add
lea
add
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
imul
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
add
xchg
add
xchg
add
add
xchg
add
add
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
mov
add
add
dec
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
jb
add
jle
add
mov
add
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
js
add
mov
add
mov
add
les
add
loop
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
stos
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
add
push
mov
add
add
jle
add
xchg
mov
add
add
les
add
mov
add
mov
add
lea
add
lea
add
add
