push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
sbb
sbb
adc
sbb
pop
pop
das
rorb
cs
push
mov
or
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
call
movsb
cmc
sbb
adc
int3
sub
mov
and
and
mov
cmp
inc
add
jbe
test
out
jmp
dec
or
xchg
adc
pop
mov
call
add
pop
loop
mov
inc
sub
frstor
ret
add
pcmpgtw
subb
sub
addr16
repz
lods
fmuls
adc
sub
icebp
lds
jnp
inc
cmpsb
pop
mov
out
leave
arpl
adc
roll
mov
sbb
call
stos
mov
call
test
fstl
in
dec
push
pop
rolb
mov
adc
inc
dec
inc
pop
fcompl
pop
sub
xchg
imul
xor
es
ffreep
pop
sarb
loopne
jno
add
addl
sbb
out
push
fdiv
mov
incb
mov
rcl
push
cmp
aad
push
and
mov
sbb
sahf
cmp
mov
sbbl
inc
jecxz
nop
sub
int3
inc
or
dec
rolb
pop
fstpt
sbb
cmp
jbe
insb
scas
movsb
inc
popa
nop
mov
dec
into
xor
jo
mov
js
ss
mov
push
movsl
push
and
sbb
test
jl
xchg
sub
loope
pop
pop
repz
ret
inc
sarl
repnz
adc
sub
outsl
sti
sahf
push
sbb
dec
and
aad
loop
pop
out
sahf
jp
push
jae
fwait
and
rcrb
mov
mov
cmp
stos
inc
fcomp
adc
fdivrs
adc
lret
lock
mov
mov
cld
xchg
xchg
int
loopne
sbb
inc
outsb
or
mov
lcall
jecxz
leave
mov
add
test
push
push
loopne
cmp
cmc
adc
xchg
mov
roll
pop
lock
sub
xor
out
mov
jge
pminub
imul
in
jns
lods
sbb
sti
negb
mov
loopne
or
mov
push
dec
xchg
enter
stos
movlps
insb
pop
sub
or
sar
jo
test
loop
mov
ret
lock
fadds
loope
mov
lock
clc
jns
lret
jl
cltd
adc
push
enter
xor
add
lret
int
idivl
cld
addr16
loope
subb
fstl
or
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
test
jbe
mov
cwtl
xchg
or
inc
or
jp
sti
mov
mov
ret
xlat
mov
jle
mov
jecxz
hlt
idiv
jecxz
lds
imull
pop
movsb
js
out
adc
dec
mov
cmp
sbb
adc
addb
mov
mov
hlt
mov
dec
cmp
lcall
adc
repnz
mov
lock
and
mov
call
iret
and
push
push
mov
cmp
daa
nop
jg
outsb
or
push
sub
addb
jnp
or
and
in
xor
je
sub
push
jbe
mov
inc
or
test
int3
xlat
xlat
loope
out
daa
adc
adc
and
es
and
push
xchg
lods
mov
in
and
sub
jmp
mov
mov
ja
add
decl
imul
push
into
gs
enter
inc
repnz
mov
in
dec
cmc
ret
jg
and
fstps
stos
push
adc
mov
stos
popa
sbb
sub
cmp
cmp
push
mov
mov
push
negb
xchg
jbe
in
mov
sbb
cld
mov
cwtl
cmpsb
mov
or
fstps
add
pop
fwait
lods
sbb
cmp
xchg
add
and
xor
jg
adc
scas
int
xlat
int
or
ss
hlt
movsb
jle
sahf
adc
int3
inc
dec
inc
repnz
mov
xor
xor
mov
sahf
leave
push
push
fisubrl
inc
mov
mov
adc
scas
lcall
mov
aas
pop
adc
pushf
shl
clc
cmpsb
js
pop
sbbl
add
ss
inc
push
test
cltd
cmpsl
enter
lock
cltd
push
ja
shll
sub
es
dec
mull
dec
sbb
adc
mov
jne
shrl
in
test
push
xor
inc
jae
leave
movl
movl
shll
inc
add
shll
or
cmp
sbb
xchg
repz
fwait
data16
inc
adc
mov
pop
add
pushf
mov
lret
fs
cmpsl
adc
pop
mov
stc
and
mov
or
loop
shrl
rcrb
push
es
sbb
or
add
jns
test
scas
mov
push
shl
enter
aas
sti
add
idivb
rcl
loopne
jecxz
std
xor
push
lret
in
mov
ret
cmp
push
push
pusha
pop
xchg
aam
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
mov
add
or
mov
sub
test
jge
xchg
mov
movsb
out
xlat
and
dec
lock
or
sub
dec
mov
addb
scas
inc
lods
or
add
push
cmc
icebp
push
cmp
and
dec
js
pop
clc
sbb
daa
pusha
mov
pusha
and
ss
repz
jns
dec
xor
adc
aam
insl
inc
push
out
add
movups
add
fwait
daa
sub
fs
or
mov
inc
sbb
out
cmp
enter
inc
dec
inc
leave
jle
xor
sbb
push
push
outsl
fcomi
or
imul
or
clc
cli
mov
sbb
outsl
add
int3
pop
notb
or
mov
xor
xor
stc
cs
insl
clc
dec
add
mov
fst
add
push
mov
je
cmp
dec
repnz
xchg
pusha
or
ret
lds
xlat
cmp
js
dec
addr16
dec
rolb
ss
lods
inc
mov
insl
and
sbb
jmp
shl
sbb
sub
loop
sub
scas
jg
es
sti
enter
pop
jnp
decl
add
imul
aam
sbb
jecxz
dec
xor
movsb
pop
push
push
pop
leave
mov
jno
das
inc
es
test
repz
push
jno
xlat
cltd
xor
and
mov
sbb
push
add
insl
xor
or
arpl
fs
adc
lock
and
mov
in
out
jbe
stos
and
int3
cli
or
sub
fsts
adc
pop
es
out
cmc
in
xchg
push
mov
testb
sbbb
inc
lahf
orb
dec
mov
ljmp
push
ret
ja
inc
inc
jle
or
mov
ljmp
stc
xchg
je
xchg
sbb
jno
hlt
add
xor
mov
lds
adc
rcr
push
mov
sub
push
add
push
loope
push
dec
popa
dec
inc
loop
outsb
xlat
decb
fsts
dec
fnsave
lret
fiaddl
out
jp
mov
sbb
mov
adc
xor
inc
cmp
jle
fwait
idiv
shl
sbb
adcl
dec
sbb
jg
bswap
out
leave
jnp
xor
adc
addl
sbb
jmp
movsl
sbb
pusha
jo
cmpl
cmp
adc
sbb
and
push
cmpsb
and
mov
in
iret
ljmp
or
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
sbb
and
sbb
pop
and
add
addb
fiaddl
daa
xor
cs
stos
jbe
cmp
dec
push
popf
movsb
push
inc
xchg
jecxz
dec
sub
xchg
scas
dec
xchg
mov
lock
dec
insl
loope
or
fldl
sbb
add
xchg
loopne
jmp
pop
jb
inc
mov
pop
pop
sarb
movsb
roll
or
movsb
in
movsb
cmp
mov
jno
fidivrs
mov
test
test
push
push
test
mov
insb
mov
push
inc
adcl
sahf
out
daa
pop
jg
adcl
push
sub
fwait
imul
rorb
ret
shlb
mov
iret
pop
fdivrl
test
mov
fimuls
ja
test
inc
popa
divb
xchg
ret
les
or
fcomps
jl
pop
in
sarl
std
dec
mov
mov
loope
gs
mov
mov
loop
cwtl
mov
jbe
pop
mov
push
adc
dec
lahf
push
dec
cwtl
shrl
mov
cmp
mov
or
or
xor
adc
jae
out
lds
in
adc
add
repnz
aaa
outsb
adc
sahf
fwait
dec
addl
fstp
mov
jno
dec
or
popf
jl
insb
mov
repnz
les
adcb
ret
pminub
jb
push
adc
rolb
fisubs
fwait
loop
ficoml
lret
adc
out
fs
imul
add
adc
addl
int
fs
int
push
scas
mulb
adc
divb
fwait
addr16
ret
daa
mov
fs
xchg
data16
add
outsl
pop
xchg
iret
aas
sbb
into
leave
xorb
js
rorl
or
cmp
pop
pop
negl
into
out
mov
addr16
lods
les
dec
rorl
fldt
sahf
sub
rcrl
insb
xchg
push
sbb
pop
in
and
xchg
xchg
pop
dec
or
aaa
push
jb
je
sar
cmp
inc
jmp
jb
popa
pop
xchg
xor
push
outsb
gs
addl
pop
add
bsf
mov
jl
dec
inc
mov
enter
mov
ljmp
inc
mov
gs
sbb
or
popa
sbb
push
pop
je
cmc
adc
lret
xlat
sbb
ficomps
mov
stos
sahf
mov
loop
aam
jns
mov
add
fisttpll
adc
lods
cltd
push
sahf
mov
out
jl
jnp
push
and
data16
adc
inc
jbe
ret
std
lret
aad
icebp
sub
add
repnz
addl
movsb
pop
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
ret
cmp
jo
add
sbb
adc
sbb
aad
xor
cmp
lds
push
mov
and
clc
in
iret
sbbl
pop
pushf
shll
add
cmpsl
mov
scas
je
or
gs
pushf
or
xchg
sti
xor
outsl
mov
fsubrs
out
cmp
mov
nop
cmovns
aad
rorl
jmp
and
ss
mov
out
in
sarb
aaa
sub
in
sbb
mov
xchg
xor
aam
lret
shll
push
mov
fcmovne
cmpsl
cmpsb
jae
sarb
push
pmullw
adc
aam
inc
or
lods
push
int3
push
and
sub
mov
jo
dec
test
testl
ja
adc
movsb
addr16
lret
ja
push
mov
push
push
or
aam
js
dec
or
fisubrs
push
pop
jnp
mov
nop
ss
mov
scas
inc
cmpsl
adc
lahf
xor
sbb
enter
fisttps
out
mov
mov
shrb
cmpb
movsb
mull
xor
les
mov
inc
test
mov
push
adc
cltd
push
xor
mov
orl
push
int3
imul
movsb
lods
sub
in
nop
mov
movsb
jg
pop
cld
inc
data16
ret
stos
push
push
jns
cmpb
int3
adcb
fwait
jno
or
xor
int3
stc
nop
and
mov
repnz
or
cmp
cmpsl
setg
push
xor
xlat
xchg
imul
lret
sbb
mov
cmpsl
pop
cmp
dec
imull
jns
outsb
jmp
inc
or
orl
pop
inc
lds
jg
add
sbb
xor
jp
sbb
in
cli
jno
test
inc
mov
push
xor
cs
les
in
mov
jp
hlt
adc
push
dec
movsb
cltd
inc
pop
xor
imul
mov
fsubrs
dec
cmp
loopne
hlt
mov
lods
push
int3
mov
add
inc
fdivrs
scas
int
or
dec
mov
enter
inc
nop
pop
xchg
sti
insb
out
les
aam
dec
mov
jnp
pop
mov
loopne
jp
mov
orl
fwait
add
popf
ret
lcall
cld
orl
aad
iret
add
fidivrl
sub
add
mov
shlb
mov
or
xchg
aas
or
or
maskmovq
idivl
icebp
scas
insb
sbb
scas
ja
ljmp
xchg
push
inc
ja
fidivrs
xor
cmpsl
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
jmp
mov
and
sbb
xchg
std
loope
test
push
testl
adc
adc
sbb
adc
push
push
dec
fwait
mov
ret
jp
adc
xor
mov
pusha
cmp
loope
int3
sbb
jmp
add
test
orb
mov
push
repz
add
jne
jbe
jns
cmp
push
sbb
mov
dec
jb
fs
cmpsb
xor
cmp
sbb
jl
sub
lahf
and
lahf
cld
mov
jns
leave
sub
lods
imul
ljmp
adc
jg
jo
mov
xor
add
jae
lods
lea
cltd
data16
push
loopne
testb
mov
push
jl
mov
scas
cltd
stc
outsl
xchg
insl
jae
sbb
dec
clc
mov
test
jg
sarl
cmp
hlt
sbbl
mov
push
dec
cs
out
add
outsb
jp
cmc
inc
mov
pop
sub
popa
int3
loope
cmp
les
and
imull
clc
testl
test
movsb
mov
jmp
xchg
mov
outsl
stos
lahf
and
fistl
orb
rcr
lret
mov
hlt
popa
mov
aad
pop
ds
mov
lcall
lret
sbb
aas
es
jmp
xor
fcompl
fisttpl
ljmp
sbb
syscall
aam
mov
mov
inc
outsl
loop
push
mov
outsb
into
push
loop
add
dec
xchg
sahf
dec
push
inc
aam
sbb
cld
aad
imul
push
mov
dec
dec
push
push
cmp
and
lret
std
pop
add
mov
iret
outsb
popa
push
xor
mov
adc
pusha
push
mov
fsubs
mov
adc
out
aam
pushf
rorb
pop
mov
into
sbb
and
lds
es
test
clc
call
or
in
adc
mov
test
leave
or
inc
mov
mov
ja
pop
push
inc
add
adc
inc
mov
xor
mov
sar
pop
test
jg
fs
adc
jbe
or
imul
pusha
mov
les
mov
daa
and
xlat
popa
mov
mov
or
inc
fiaddl
xchg
sahf
sub
sti
enter
add
jb
sahf
inc
xchg
inc
mov
movsl
fdivrs
lods
and
sub
push
testl
and
cwtl
jns
mov
mov
mov
daa
scas
dec
xchg
push
and
test
jnp
add
or
fs
punpckhdq
mov
adcl
mov
xor
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
mov
mov
and
sbb
insl
adc
mov
sarb
and
sbb
cmp
shrb
cmp
test
lds
add
ret
add
setbe
cmp
pop
jg
aas
jnp
inc
or
in
movsb
mov
push
push
and
mov
xor
cmp
sbb
sub
addb
leave
mov
shr
xchg
pushl
add
clc
testb
cltd
mov
sbb
cmp
lea
icebp
sub
repnz
add
push
mov
or
shlb
xchg
aaa
hlt
mov
stos
lret
xor
arpl
test
stc
stos
jns
push
scas
xchg
mov
shll
push
and
stos
jl
cmc
sti
out
addr16
lods
cmp
sub
mov
sbb
jecxz
mov
arpl
ljmp
mov
cmp
cmp
insb
push
xor
aad
cmc
arpl
xchg
aad
mov
cwtl
add
popa
jecxz
je
sbb
sahf
movl
jecxz
sbb
dec
cmp
sub
and
sub
ror
inc
jmp
mov
lea
dec
jl
mov
sbb
cmpsb
ret
enter
xor
mov
add
mov
xor
sti
popf
push
jmp
icebp
xchg
cmp
aas
push
in
push
shlb
mov
push
or
sub
cmp
outsl
rcll
hlt
push
testl
xchg
mov
addr16
aas
xor
jnp
and
push
sub
and
xor
mov
sub
add
inc
shll
lret
mov
test
jle
data16
ss
and
inc
into
je
dec
jno
lds
inc
xor
daa
jns
in
cmp
int3
pusha
add
out
push
mov
and
scas
bound
dec
xor
jno
stos
insb
and
dec
jge
jmp
movl
inc
je
nop
loope
push
xor
pop
bound
xlat
movsb
mov
push
xchg
scas
or
sub
cmp
pop
rcl
jb
fwait
add
jp
daa
pusha
dec
mov
jae
les
and
push
add
aaa
out
das
inc
mov
push
jecxz,pt
mov
add
fstpl
jno
insl
lods
lea
pop
mov
out
leave
je
out
xor
loope
shll
adc
dec
sbb
das
das
shll
cmpsb
dec
and
xchg
jg
clc
mov
out
adc
xor
cmp
aam
push
xchg
fsubl
mov
jb
repz
add
xor
fisubl
ret
xchg
xor
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
jne
push
lock
and
sbb
jg
test
dec
dec
adc
or
sub
cmp
and
or
cmp
and
js
rolb
add
xchg
jle
subb
adc
sbb
or
or
sbb
cs
mov
add
mov
repnz
mov
shll
fldcw
dec
push
aaa
mov
lods
push
scas
jno
inc
aaa
lret
mov
movsb
shlw
filds
fidivrs
cwtl
ljmp
dec
stos
jle
cli
cmp
in
add
inc
jle
or
inc
mov
out
test
imul
add
lods
inc
adc
mov
push
lods
fstl
pop
add
cld
add
mov
xor
mov
add
mov
push
in
clc
sbb
out
lret
push
ss
test
fildll
mov
popa
addr16
fiaddl
add
cmp
jp
inc
adc
jbe
decb
lea
xor
lahf
mov
daa
push
sub
mov
add
fistpll
dec
lds
adc
shl
movsb
cwtl
rolb
xor
push
xor
loop
sub
insb
pop
or
sti
mov
cmp
push
int
test
lds
int3
loopne
stos
fisubl
orl
fwait
pop
mov
cmp
int3
mov
mov
cvttps2pi
js
jae
js
fcomps
xor
outsl
iret
xchg
test
cmpsl
xchg
lods
push
iret
push
fcmovu
pop
jp
dec
lcall
inc
xchg
cmp
add
test
shr
fistl
xor
rorl
ss
in
xor
std
call
leave
loope
mov
imul
ret
shrb
cmp
inc
sbb
repz
sbb
lcall
add
adc
inc
mov
and
aad
xorb
cmp
movsl
lea
aad
push
aad
out
add
lods
daa
sbb
orl
mov
test
mov
add
cmp
and
mov
adc
mov
popf
cli
imul
dec
sbb
hlt
clc
dec
fidivrs
mov
outsl
es
fldcw
mov
insl
cld
inc
insl
adc
cmp
test
in
xor
negl
repnz
push
xchg
loopne
inc
leave
cld
cwtl
gs
data16
sahf
fld
popw
push
mov
cmpsb
fwait
pop
fsubrl
shlb
mov
sbb
push
lcall
xchg
pop
cltd
add
insb
mov
in
rclb
push
dec
xor
subl
and
mov
stc
inc
inc
icebp
sbb
and
and
pop
push
and
xor
mov
shrd
jmp
out
push
push
push
mov
pop
pop
jo
jmp
sbb
adc
sbb
out
jle,pn
fcompl
xor
adc
stos
shll
movsb
ret
in
aam
or
mov
lahf
pop
add
adc
push
lds
rcr
inc
rcll
sbb
and
fbld
jecxz
jmp
out
sbb
imul
sbbb
shl
xor
jp
push
jae
fstps
lahf
vcvtsd2ss
push
jae
jbe
mov
cmp
and
pusha
mov
jne
repz
ja
iret
jne
mov
sub
or
fbstp
nop
dec
xchg
dec
push
popl
jmp
mov
push
lds
jg
stc
inc
arpl
test
into
cmpsb
sahf
push
add
nop
les
adc
outsl
leave
pop
popa
push
loope
push
icebp
aaa
mov
mov
out
mov
cmpsl
shrl
lahf
pushf
loop
mov
ja
ffree
leave
xor
pushf
jb
xor
in
mov
aad
pop
insb
and
fs
clc
fiadds
xchg
test
pop
aam
test
fiaddl
lahf
pop
or
icebp
sub
int3
push
mov
scas
push
ret
cmp
xchg
lret
sbb
gs
pusha
and
loop
jns
ss
mov
xor
loopne
ss
hlt
test
in
ja
es
cwtl
filds
movsl
sub
and
out
ret
mov
je
push
mov
xchg
orb
add
add
and
out
dec
push
js
xor
mov
lahf
shlb
push
loope
shll
inc
mov
jl
bound
jecxz
arpl
fcom
push
mov
sbb
lcall
xchg
jns
into
out
je
int3
mov
lds
cmpl
mov
test
sub
add
pop
enter
pop
cltd
dec
call
sub
mov
xchg
cmp
xchg
cmpsl
enter
dec
cmp
loopne
mov
cs
sbb
out
xlat
add
andb
jecxz
sbb
fs
sub
psraw
pop
lock
insb
sbb
mul
mov
outsb
add
daa
addr16
scas
andb
add
into
mov
push
repz
mov
xchg
movl
mov
xchg
icebp
inc
daa
pop
pop
cmp
mov
cli
into
enter
aam
stos
jbe
sarl
xor
dec
loope
loope
pop
loope
cld
pop
sub
sub
fdivp
js
push
xchg
aam
pushf
lods
jg
testl
xlat
in
int3
sbb
jecxz
inc
or
test
ss
stc
dec
dec
push
cwtl
sbb
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
ds
and
sbb
ret
outsl
clc
vcvtpd2dqy
stos
sbb
inc
xchg
mov
fwait
adc
in
push
jp
nop
dec
adc
jno
scas
shll
cmp
das
sti
pop
jecxz
or
aas
mov
lods
add
icebp
inc
unpcklps
inc
orb
mov
sbb
cmpsb
movsl
adc
scas
clc
add
add
test
int3
loopne
add
sub
fnstsw
sti
jl
push
shrb
imul
or
aad
icebp
insl
xchg
aas
fdivrl
daa
imul
lret
add
dec
jg
call
mov
aas
mov
lds
or
lret
or
je
aaa
inc
fldt
jl
jecxz
dec
sub
push
push
insb
insb
int
sub
xchg
dec
push
add
jb
mov
push
dec
pushf
jbe
pop
mul
mov
jno
cmp
and
fmuls
lds
cmpsb
fsubs
arpl
repz
mov
int
xchg
jmp
push
mov
cltd
xchg
incb
je
das
out
into
ds
fistps
lock
or
add
push
xor
jns
cmc
insb
loopne
cmp
lret
inc
rolb
xchg
imul
das
push
inc
stos
test
add
xlat
es
loope
push
incb
jecxz
lock
push
movsb
sahf
jno
dec
outsl
add
sti
mov
loope
roll
gs
lret
dec
int
push
loopne
xor
cli
out
sub
repz
mov
push
inc
lea
sti
outsl
and
xor
in
push
fcomip
movsl
cmc
ss
cmc
and
jae
and
leave
repz
cmp
pop
adc
add
pushf
inc
sub
cmpsl
xchg
or
fbld
test
pop
out
pushl
shl
incb
inc
inc
pop
xchg
pusha
arpl
xchg
pop
int
outsl
imul
push
hlt
call
daa
cmpsl
pop
mulb
push
into
push
scas
shr
xchg
sbb
sub
stos
pop
cmp
in
push
fwait
or
adc
jne
loopne
loop
adcb
push
aas
aas
out
leave
adc
cltd
cmp
jl
shr
dec
scas
fdivrs
lahf
sub
inc
test
lcall
xchg
cltd
in
test
outsl
ljmp
notb
jbe
es
add
lcall
jp
sbb
ret
jbe
fimuls
cmpsl
daa
lods
ret
lds
jmp
mov
jecxz
push
dec
hlt
push
incl
repz
imul
lea
xchg
rcrb
pop
dec
cltd
add
mov
addb
cld
idivl
icebp
jg
mov
adc
mov
mov
jmp
nop
dec
nop
add
lock
add
aad
push
adc
sbb
test
loope
sbb
adc
lods
ss
push
sub
mov
jecxz
push
add
push
jbe
rorb
cmp
sarl
repz
or
push
ret
push
filds
sbb
std
pslld
sbb
shlb
add
pop
mov
dec
jne
lods
jns
data16
pusha
xor
shrb
sbb
mov
frstpm(287
out
fwait
lods
cmpsl
inc
mov
idivl
fs
mov
sub
mov
mov
mov
sbb
mov
sahf
popa
sbb
dec
or
stc
movsb
insl
mov
sub
ds
add
movb
bound
xchg
fbstp
add
and
jbe
and
in
pop
xchg
out
sbb
stos
mov
pop
inc
sbb
lahf
out
lret
sub
cmp
sub
adc
mov
sarb
sbb
data16
out
xor
fxch
push
sarl
in
out
adc
mov
ret
ss
or
jecxz
lret
outsl
mov
jae
rolb
loop
mov
ret
push
push
cmpsl
out
xchg
int3
cltd
mov
jl
push
add
rcr
pop
test
outsl
mov
in
add
loop
test
cltd
test
cwtl
cwtl
mov
push
ljmp
lods
xchg
subb
jne
divl
inc
negl
arpl
mov
outsl
add
or
gs
shrb
jae
jne
xchg
push
mov
in
rol
inc
mov
aad
xorl
shlb
mov
popf
pop
sub
dec
and
mov
sub
into
cld
ficoml
sbb
fs
add
push
imul
xchg
vmovdqa
inc
dec
push
xchg
xlat
xor
sub
jp
xor
adc
mov
sub
cmp
mov
and
mov
mov
imul
adc
ret
pop
popa
test
xchg
nop
ja
ret
gs
mov
jmp
fbstp
pop
sbb
push
jnp
mov
jnp
ret
imul
pop
outsb
and
mov
imul
data16
mov
xchg
jns
sbb
in
shlb
add
imul
inc
cmp
mov
imul
daa
inc
inc
add
cli
fmull
movsl
pop
clc
std
jmp
lea
gs
xchg
push
imul
jle
clc
je
jno
push
cmp
jp
aaa
idiv
sub
je
xchg
xlat
shr
in
sub
fmuls
outsl
nop
mov
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
and
scas
push
loope
lret
cwtl
ret
or
cs
jecxz
sub
adc
xorb
rcrl
jns
push
fimuls
sahf
cwtl
cmp
cmpsb
pop
sub
shrl
adc
or
cs
lea
je
lods
dec
jg
loopne
dec
xchg
adc
aad
cmpsl
jno
pop
xor
je
mov
jo
mov
lock
je
mov
xchg
push
test
test
cltd
add
jge
mov
out
in
aad
mov
xchg
incl
outsl
mov
lea
icebp
std
mov
jns
mov
and
cs
xchg
xchg
push
inc
cmp
or
mov
or
or
jg
pusha
sbbb
lods
aas
scas
das
pop
adc
add
xchg
add
loope
shrb
fwait
push
ret
cmp
jnp
and
pop
sub
stos
push
push
cmc
insb
mov
xchg
xlat
das
leave
xchg
jp
addr16
lahf
xchg
push
sbb
mov
add
xchg
dec
xchg
push
adc
push
mov
inc
jmp
popa
jae
ja,pt
and
cs
arpl
push
inc
seto
sbb
adc
loope
test
out
jmp
add
inc
jp
sub
mov
sub
daa
inc
push
jne
std
in
jp
mov
popa
push
fimuls
xchg
mov
and
lcall
pop
dec
dec
loop
ds
jo
nop
repz
shll
lock
push
push
lcall
jge
add
sub
sahf
imul
iret
adc
xchg
repnz
adc
lea
jge
jne
and
imul
gs
movsl
push
inc
mov
mov
lret
adc
jle
inc
aaa
push
cwtl
clc
sahf
cmp
int3
dec
mov
aas
insl
add
sub
dec
adc
push
xor
push
push
jge
sbb
idivb
xchg
mov
inc
es
inc
adcl
rcr
dec
jbe,pn
cwtl
pop
shrb
pop
jb
fistpl
sbb
fwait
or
dec
dec
add
add
es
scas
lods
mov
pop
cli
mov
mov
imul
out
std
xchg
fmull
popf
repz
aas
jle
mov
mov
push
lret
pop
test
testl
add
shrb
popa
xor
mov
jne
cld
mov
mov
inc
mov
push
fisttps
pop
sti
stc
stc
jo
sti
pop
cld
cmpsb
pop
cli
in
sub
or
or
fistpl
and
cmp
ret
out
pop
inc
cld
pop
fsts
fs
lock
or
cmc
sub
cli
ret
push
clc
lds
hlt
fidivl
push
ljmp
cmc
mov
scas
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
sub
sub
and
sbb
out
testb
aaa
cwtl
mov
push
rolb
mov
jle
xor
lds
les
out
push
mov
pop
or
pushf
aaa
orl
ret
in
in
dec
inc
pop
adc
xchg
jne
sbb
mulb
mov
mov
mov
add
bound
leave
pop
cwtl
roll
adc
push
xor
mov
xchg
push
ret
out
sbbl
popa
add
lock
cmc
popa
aad
idiv
and
xchg
out
add
xchg
loop
push
insl
test
sub
and
and
stos
or
aad
jbe
jns
imul
push
lcall
sub
xor
mov
jl
aas
addr16
mov
pop
mov
js
pop
test
rclb
mov
test
jno
push
mov
imul
insl
lock
repz
lock
sub
out
rorb
add
pop
push
pop
outsl
xchg
sub
vmovups
xor
outsl
lcall
js
cmpsb
pusha
dec
mov
leave
sub
loop
dec
xchg
sbb
pusha
push
jmp
push
or
sub
xor
shrb
inc
push
or
mov
dec
ret
mov
scas
mov
bound
subl
and
shl
lahf
outsb
out
lahf
mov
add
xor
nop
lss
test
xor
test
push
mov
add
test
push
cmp
push
inc
jns
stos
sbb
call
cmpsl
mov
pop
cwtl
movsl
xchg
cmp
xchg
adc
pop
xchg
icebp
sbb
xor
and
insl
inc
outsb
and
jmp
sub
aam
addb
pop
add
cs
daa
setg
fimull
inc
fisttpl
js
xor
inc
mov
lea
mov
js
or
icebp
push
movsb
mov
xor
je
rcrb
repz
cmc
mov
and
jne
push
push
psrlq
test
div
cli
loopne
aad
leave
sbb
mov
mov
out
push
rolb
add
xchg
mov
add
and
dec
mov
jbe
ret
mov
cmp
iret
cmp
and
aas
mov
out
fnstenv
mov
sub
inc
xor
xchg
lahf
xor
fwait
add
cmp
mov
inc
jl
scas
pushf
jne
cs
xlat
xor
jge
cmpsl
xchg
push
inc
adc
ret
xchg
lock
inc
dec
add
push
scas
std
mov
jle
mov
insb
sti
cmp
gs
shrl
mov
pusha
fwait
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
xor
aaa
push
int
sbb
adc
sbb
inc
cwtl
es
cltd
mov
sbb
test
dec
xor
dec
movsl
lods
ret
pushf
jg
push
jmp
orb
cmc
cli
xor
iret
cmp
pop
xchg
dec
inc
not
push
sub
jl
cmp
mov
mov
lahf
aaa
cmpsb
nop
imul
cmp
imul
fimull
loope
push
es
jne
xor
std
leave
adc
in
or
daa
loope
dec
dec
sub
dec
xor
popa
mov
loop
das
sahf
dec
ret
mov
inc
cwtl
or
dec
out
xor
push
lea
or
rcrb
pop
mov
add
add
test
sub
or
and
mov
add
mov
cmpsl
hlt
lret
jo
aaa
mov
iret
xchg
movsl
push
push
or
xor
addr16
aam
jne
xor
push
sbb
lahf
hlt
and
sub
rcr
push
cmp
fidivrs
test
test
push
and
addr16
jo
mov
int
pop
xor
leave
cmp
fstl
push
mov
lock
icebp
ret
roll
jne
negl
add
shrl
cmp
repnz
sbb
inc
mov
mov
fisubs
fwait
int
arpl
jmp
and
push
lret
mov
testb
daa
lea
aad
repz
pop
pop
aam
adc
dec
movsl
loope
inc
add
xor
push
jnp
pop
mov
dec
les
jb
push
pop
dec
pusha
mov
and
dec
fsubl
enter
push
lret
push
data16
xor
xchg
jnp
ja
adc
bound
mov
xchg
stos
or
lods
fldt
and
jle
mov
and
push
jle
shrl
cmp
ret
insl
fisubrs
adc
out
jmp
mov
shr
xor
dec
lret
sbb
push
mov
push
cmpsb
lea
sbb
pop
jl
pop
xchg
ret
daa
cld
outsl
sbb
addl
rcrb
mov
popa
mov
xor
cmp
push
mul
mov
stc
mov
mov
aad
shl
mov
mov
cwtl
inc
push
negl
push
lahf
inc
int3
fcompl
xchg
jg
add
jl
stos
imul
rcll
xor
movd
mov
ret
cli
mov
sbb
subl
fisubrs
add
fs
popa
scas
sub
dec
iret
xor
aas
fwait
jmp
mov
jne
sarl
mov
rcl
aas
dec
xor
rclb
in
push
pop
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
pop
jo
sbb
and
sbb
ljmp
mov
jbe
jle
push
xchg
xchg
fcoml
xchg
mov
jae
out
cmp
mov
cmp
in
dec
push
enter
clc
and
cmp
pusha
dec
out
mov
sub
xchg
shll
jl
je
mov
pushf
mov
xchg
imul
stos
stc
sbb
ss
jno
insl
cltd
int3
imul
inc
mov
sbb
ljmp
daa
mov
in
pop
iret
pusha
lea
jg
jno
out
ljmp
push
add
test
pop
out
je
sub
sbb
mov
xor
push
shlb
cmp
jl
enter
add
cmpsl
stos
stos
mov
adc
out
arpl
mov
push
xchg
outsl
add
int3
stc
adc
push
std
imul
mov
sbb
jmp
jno
xchg
pop
mov
sbb
pop
xlat
push
cmc
push
add
and
daa
add
ljmp
neg
lahf
aas
jne
pop
mov
sti
xlat
cmp
add
or
jno
mov
addr16
pop
test
dec
pushf
xor
xchg
in
and
inc
daa
mov
jle
clc
dec
test
sub
jg
movsl
xor
stos
fadds
push
rcr
and
fildl
imul
sbb
ljmp
outsb
lods
es
enter
push
jg
lods
imul
ljmp
dec
scas
int3
and
xor
stc
iret
mov
jo
jb
or
adc
jns
sbb
or
sub
pop
js
mov
sbb
outsb
popa
pop
push
test
lods
jecxz
cs
sbb
jae
push
inc
icebp
movsl
sbb
in
xor
mov
stos
sbb
int
cmp
pop
cld
enter
cmp
loop
shlb
mov
scas
add
inc
ja
sub
jno
xor
mov
add
jle
push
sbb
inc
stos
sarb
andl
sbb
into
pop
push
popf
psubd
mov
cmpsb
xor
enter
subb
pop
mov
mov
or
cmp
xchg
and
sub
or
cmp
ret
out
xchg
ret
xor
xorl
mov
adc
and
stos
jo
push
notl
xor
das
sbb
add
adc
mov
sub
shlb
push
pop
sbb
fistpll
mov
stc
mov
push
inc
or
in
push
std
sub
sub
adc
xchg
xchg
ret
dec
clc
or
cmp
cmpsl
xor
nop
pop
dec
push
push
imul
or
hlt
aam
push
xor
xchg
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
jmp
sbb
and
sbb
sbb
inc
out
adc
gs
out
and
pop
mov
mov
push
lcall
ljmp
push
stc
repnz
add
std
add
bound
or
and
push
mov
inc
pop
ja
lcall
addr16
clc
sub
popf
dec
in
cli
xchg
shrb
sbb
int
mov
lahf
addb
jg
fcompl
aam
mov
ja
mov
divb
adc
repnz
push
mul
jbe
cmp
cmp
and
jnp
pop
xor
mov
jnp
inc
mov
dec
cmp
daa
pusha
and
test
mov
aam
sbb
push
lahf
test
mov
push
jecxz
rol
fs
scas
leave
jecxz
pushfw
push
repnz
pop
push
sbb
dec
sub
cmp
out
imul
es
sti
jge
sub
inc
lock
mov
xchg
adc
dec
fdivrp
test
add
adc
shrb
pop
pop
or
sarl
push
mov
pop
insl
scas
test
mov
add
imul
fdivr
lcall
mov
pop
sti
inc
sub
sbb
repnz
out
shll
lahf
jecxz
fs
jl
es
shrb
inc
pop
mov
xor
mov
mov
jnp
pop
fwait
mov
mov
sbb
insl
stos
repz
inc
mov
inc
movsl
sbb
and
mov
push
ret
imull
adc
mov
out
idivl
aaa
inc
scas
daa
ds
xchg
std
mov
or
pop
movsl
jne
pop
fdiv
or
and
ds
adc
loope
mov
dec
cmp
mov
cltd
in
lods
sbb
mov
and
inc
scas
mov
out
dec
xchg
int
rorl
orl
cmp
mov
pop
fidivrl
ds
mov
cmpsb
xor
arpl
push
fistps
dec
and
push
out
and
cwtl
cmc
sbb
xlat
inc
insl
lea
movsl
add
movsb
push
stos
insl
icebp
add
inc
dec
es
dec
enter
mov
and
adc
push
jo
jo
push
or
test
bswap
mov
push
repnz
movb
pop
adcl
sub
xchg
jp
icebp
cmp
push
or
mov
sarl
xor
add
jp
sub
cmpsl
dec
mov
jl
hlt
insl
cmp
ss
insb
xchg
mov
inc
mov
jne
ret
jns
adc
jb
push
push
lods
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
jle
mov
sbb
xchg
pop
stc
push
cs
jmp
shr
cmp
ss
add
incb
xchg
popa
enter
stc
xchg
imul
push
jmp
call
push
leave
mov
cs
icebp
sbb
clc
movsb
movsl
and
ret
js
icebp
push
cmp
test
scas
js
jp
in
sahf
ficompl
push
lahf
stc
jb
jo
leave
mov
aam
push
inc
lock
inc
pop
gs
sub
int3
and
aam
arpl
pushf
xchg
loopne
mov
sbb
inc
stos
push
inc
shl
lcall
lea
sbb
bound
pushf
fisubrl
vmwrite
lret
std
lret
push
movsb
sbb
test
mov
add
jns
movsb
mov
lahf
dec
stos
mov
popf
xchg
jno
xchg
add
and
arpl
int3
sub
jb
pop
inc
faddp
mov
push
xchg
movsb
pushf
loopne
rolb
mov
sahf
loopne
fldt
lea
imul
mov
mov
es
mov
std
popa
rcrb
loopne
push
divb
sti
outsb
outsl
iret
inc
mov
cld
imul
fwait
lret
outsb
sbb
sbb
or
xchg
in
sub
mov
out
fimuls
jg
add
fisubs
cmp
std
or
jecxz
mov
jo
or
enter
xor
add
je
pop
pop
push
mov
inc
push
aad
and
jle
mov
mov
lock
movsl
xor
adc
sbb
pop
jns
loop
in
xlat
mov
add
sahf
and
loopne
stos
sub
push
addl
les
mov
aam
rcrl
push
and
and
mov
pop
pop
pop
repz
inc
shl
xorl
cmpsb
aaa
mov
jecxz
xchg
mov
lret
sbb
imul
movsb
push
ja
dec
mov
push
jecxz
int3
imul
xchg
add
xchg
fcomps
dec
aad
xchg
adc
call
test
cmpsl
sti
pop
or
push
push
adc
cmp
jo
dec
lock
jne
push
clc
and
add
or
gs
pop
incl
mov
ret
aam
movsl
inc
js
aaa
sub
jecxz
jb
xor
in
lcall
push
int
push
pop
mov
cmp
test
xchg
cmp
sub
in
movsl
pop
imul
pusha
mov
aam
pusha
mov
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
pop
jae
mov
adc
sbb
xchg
imul
jmp
xor
add
mov
or
das
push
inc
jns
xor
sub
lods
popf
fs
push
or
out
ret
jb
movsl
xor
lret
cmp
fsubs
push
adc
push
aas
dec
dec
or
jo
push
mov
sbb
frstor
pusha
mov
jbe
xchg
icebp
jmp
daa
cmc
xchg
push
xchg
inc
int3
hlt
ds
mov
and
dec
xor
je
idivl
notb
xchg
mov
out
push
inc
imul
or
dec
add
cwtl
test
cmp
pop
push
dec
shrb
xchg
gs
jb,pn
mov
xchg
and
dec
xorl
and
outsl
lds
and
lea
mov
repnz
mov
and
xor
in
or
push
add
dec
mov
addb
cmpsl
or
movsl
xchg
dec
cld
mov
into
mov
mov
mov
test
aaa
xchg
cmp
inc
jo
cli
ljmp
sti
movsb
push
sub
insl
pop
fwait
sub
or
ret
inc
push
mov
mov
jg
adc
adc
push
inc
mov
mov
push
xchg
mov
fnstcw
cmpsl
mov
repz
scas
adc
sarl
andb
imul
adcb
sbb
loop
insb
or
jnp
cmp
fmulp
mov
test
cmp
in
sub
jmp
fs
inc
idivb
lds
adc
push
icebp
jb
repz
xchg
jg
fwait
adc
jmp
pop
in
cld
neg
lods
ret
bound
and
xlat
dec
mov
rorb
pop
idivb
and
jp
pop
adc
mov
mov
cwtl
out
out
xchg
push
add
mov
movsb
mov
std
icebp
aam
cld
mov
ljmp
lock
mov
mov
pop
test
cmp
test
xchg
cmp
js
outsb
stc
cs
xor
xor
das
mov
add
jns
jp
loop
push
leave
mov
mov
nop
sbb
gs
jbe
push
out
mov
xlat
lods
jecxz
xorl
xchg
movsl
lods
mov
dec
je
inc
jno
cmp
adc
inc
push
std
pop
jp
adc
pushf
aas
pusha
mov
push
loopew
xchg
cmp
nop
inc
loope
xchg
dec
xor
arpl
mov
jmp
mov
xor
bound
push
pop
pop
je
aad
mov
repz
push
pushf
shrb
outsb
subb
out
mov
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
add
fistpl
popf
movsl
or
repz
jmp
ret
xchg
pop
nop
xor
and
and
int
cmp
daa
push
aam
dec
xchg
adc
dec
and
add
ss
xchg
scas
jmp
pushf
pop
stc
mov
fsubs
push
sub
sbb
rclb
or
xor
imul
xor
fidivl
aas
sub
test
push
movsl
jmp
fistps
in
pusha
std
roll
push
inc
pop
jmp
mov
xchg
dec
mov
mov
and
int
hlt
adc
mov
orl
lock
aas
jge
stos
lds
sub
jne
and
sbb
jmp
shlb
pop
movsb
inc
stc
pop
sub
data16
add
jecxz
stos
repnz
lods
sub
fisubs
cmp
mul
push
mov
mov
mov
push
jo
mov
sub
push
rorl
in
jmp
movsl
les
mov
incb
ss
test
insl
jo
stc
lret
inc
outsb
push
cltd
das
rorl
mov
inc
adc
sbb
mov
inc
adc
clc
out
movsl
lahf
cmp
pop
adc
dec
pop
inc
dec
mov
scas
aas
pop
adc
push
in
push
or
pop
inc
test
xchg
test
push
scas
or
jns
jae,pn
dec
xlat
idiv
pop
cmp
sub
int
sbb
add
dec
out
add
scas
mov
rorb
daa
lods
fildll
rcll
and
mov
adc
jb
sub
push
addr16
fisubrs
movsl
scas
jecxz
jle
jae
out
jbe
test
dec
lods
add
sahf
rorb
jle
insb
mov
and
ret
js
cmp
xor
cmp
cli
adc
dec
lods
push
dec
push
mov
pop
aam
or
cmp
pop
nop
push
mov
or
out
jge
lods
dec
jge
mov
cltd
mov
xor
push
es
jno
dec
mov
and
dec
popa
pop
ljmp
and
lcall
fsubl
cs
mov
aam
mov
ds
pop
lods
mov
inc
xlat
out
cmc
cmp
hlt
popf
mov
iret
out
shll
es
imul
ss
cwtl
dec
pop
push
outsb
cmp
pop
cmc
push
xchg
movsb
and
aam
xchg
cmpsb
jle
call
adc
cmp
push
mov
pop
jg
mov
and
push
xlat
adc
and
fimuls
add
and
negl
inc
mov
lock
xor
enter
loope
add
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
xlat
hlt
push
test
sbb
cmpsl
in
sub
fsubrs
stos
jl
sub
aad
movsb
daa
sub
sahf
movsl
mov
cmp
sub
pop
add
cli
mov
incb
iret
clc
shll
jge
mov
push
dec
clc
mov
xchg
outsl
sbb
lcall
pop
pop
xchg
insl
dec
xor
cmp
pop
addb
mov
leave
add
xchg
fabs
pop
xchg
cli
xchg
cli
pop
out
cld
pushf
xchg
fcoml
pop
inc
jle
lret
sarb
mov
bound
in
popf
dec
xor
negb
negl
loope
outsl
std
lahf
andb
in
jg
add
add
xchg
xlat
repnz
jne
add
sub
inc
cld
mov
jb
or
pop
push
insl
push
out
pushf
sbb
or
xchg
or
outsl
jge
aam
add
mov
inc
pop
or
jb
lods
push
fmul
sarb
loop
cmpb
and
jne
ret
dec
ret
xchg
cwtl
lock
iret
test
pop
pop
insb
xor
jmp
pop
test
aam
jno
sbb
add
sbb
mov
ljmp
das
mov
xor
jl
insl
mov
pop
and
cmp
xchg
in
xlat
sub
mov
imul
inc
cwtl
jle
shrb
pusha
xor
dec
mov
std
cmpl
or
je
push
cs
pop
fcoms
xor
push
inc
push
cmc
pushf
pop
adc
mov
xchg
sbb
dec
movsl
out
push
loope
out
push
pop
cwtl
add
adcl
xor
inc
imul
sub
mov
or
and
idivl
adc
int
pop
push
stos
pop
push
xor
test
fs
movsl
or
or
inc
daa
fcmove
je
setns
and
mov
mov
push
mov
movl
negb
sbb
inc
aaa
xor
jge
stos
sbb
stos
sub
add
sbb
push
or
push
ret
lea
jl
mov
mov
cmp
shr
adc
andb
mov
sub
and
arpl
imull
cmp
cmp
adc
stc
fstps
mov
imul
out
push
mov
and
ljmp
bound
ficoms
adc
jp
pop
sub
aad
sbb
call
sub
cmp
lret
xlat
stc
test
cmp
fisttpll
enter
test
pusha
and
pop
icebp
jecxz
out
or
cli
in
shrl
mov
dec
jne
jnp
enter
ret
aam
sub
cs
out
out
leave
mov
dec
cmpsb
push
sbb
fcomps
call
xchg
mov
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
jo
mov
sbb
mov
repnz
insl
fs
into
xchg
jno
xor
lods
push
dec
addr16
sub
ret
jge
ss
push
dec
add
dec
xor
xchg
in
stos
pop
mov
data16
je
test
pop
std
push
jno
jg
and
enter
popf
out
push
push
icebp
cmc
mov
mov
mov
mov
jno
xlat
push
inc
or
cwtl
mov
add
push
pop
push
orb
mov
sub
dec
fsts
in
in
jb
pop
imul
mov
lret
dec
sbb
lock
dec
sbb
das
sbb
enter
sbb
js
int
fsubrp
movsl
mov
sbb
cs
mov
mov
sbb
daa
and
movsb
xor
jmp
call
xchg
sbb
bound
mov
dec
stos
inc
and
push
pop
mov
test
adc
adc
outsl
cmpsb
pop
js
mov
lods
push
add
loopne
pop
ljmp
js
sub
mov
scas
sbb
dec
push
or
and
aad
negl
or
sbb
in
les
adc
call
call
push
or
jae
popa
repz
imul
dec
call
mov
inc
gs
lock
xor
jl
pushf
dec
add
add
loopne
sahf
xor
cmovns
pop
aas
js
jb
lret
push
daa
nop
dec
push
mov
arpl
xor
adc
lcall
sbb
scas
sub
or
jne
xor
sbb
lcall
in
sbb
sbb
pop
push
inc
xlat
and
ss
jle
ss
enter
or
jl
push
mov
dec
aad
stc
icebp
cmp
xchg
xlat
scas
pop
push
mov
push
adc
insl
sub
dec
adc
imul
cld
mov
or
dec
sar
sbb
mov
pop
cltd
call
fwait
lea
or
jno
pop
es
cltd
xchg
dec
cmp
xor
mov
cmpsb
aad
mov
push
mov
aaa
xlat
lea
rclb
dec
clc
nop
xchg
mov
notb
xchg
mov
dec
jno
lea
jo
mov
push
jbe
push
cld
test
imul
test
jp
loope
test
pop
in
jno
adc
hlt
push
scas
mov
cli
stc
or
cvtpi2ps
cmp
out
in
sbb
cmp
xor
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
movsl
and
rcrb
sbb
stc
fbld
imul
xchg
xchg
push
inc
mov
xchg
mov
mov
mov
fdivs
or
mov
cld
leave
ja
test
fsub
pop
cmp
lods
in
push
cmc
cs
dec
xor
or
pop
sahf
aam
ret
daa
sub
sahf
mov
cmp
jnp
es
pop
add
push
leave
and
sbb
sbb
cmc
dec
sbb
in
xchg
adc
push
dec
push
xchg
lods
scas
cmp
lret
xchg
repz
add
push
test
lock
jp
pushf
lea
mov
out
in
mov
inc
and
outsb
cmp
push
imul
mov
hlt
cmp
cld
sub
dec
or
mov
ret
in
mov
fst
push
movsb
lret
repnz
pushf
and
cmp
jno
inc
nop
inc
dec
xlat
xchg
call
xchg
mov
mulb
roll
pusha
jge
shrb
jae
inc
pop
repnz
mov
cmc
sub
daa
fsubrl
inc
jmp
rcrb
add
scas
mov
mov
sub
daa
sub
ret
pop
push
loope
icebp
out
test
jp
push
dec
das
ret
incl
cmp
sub
push
loop
adc
out
testl
pop
sub
cs
cmp
lds
in
je
mov
cmc
add
xor
mov
mov
pop
jl
js
dec
xor
adc
popf
inc
add
xor
mov
inc
and
or
sbb
pop
xor
fiadds
fnstsw
jecxz
push
out
dec
jl
xlat
dec
pop
sbb
push
mov
or
cltd
pop
jl
pop
bound
scas
push
xchg
rclb
push
cmp
outsb
pusha
jne
push
sbb
lcall
jg
or
jb
jnp
xchg
mov
mov
mov
aas
xchg
jo
mov
xor
xor
cmp
cmc
xorl
imul
xchg
int3
out
inc
adc
into
movsb
fmuls
xor
sub
hlt
aas
push
inc
or
daa
aad
xor
fidivs
mov
pop
mov
sub
push
movsl
std
out
and
push
xchg
bound
ret
or
imul
cwtl
pusha
push
pop
imul
sub
jp
dec
mov
mov
cltd
in
icebp
iret
push
inc
dec
push
xchg
out
icebp
jo
mov
call
mov
bound
pop
sub
lret
mov
in
pop
push
push
dec
and
stos
in
addl
daa
adc
mov
cld
xor
mov
loopne
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jo
xchg
sbb
and
sbb
jb
xor
lods
mov
mov
lret
xchg
jbe
sub
iret
mov
shlb
mov
sub
xor
mov
fimull
add
aad
rol
scas
xchg
mov
test
mov
fs
je
ss
sub
push
dec
cltd
lods
les
and
xor
lock
xchg
add
insb
and
jp
lds
shrb
cltd
push
mov
sub
nop
enter
es
or
jge
sar
bound
add
jnp
fs
mov
mov
mov
dec
fidivrs
cld
leave
fisubs
movsb
sbb
inc
leave
inc
les
aam
pop
jae
jno
pop
pop
dec
mov
int
imul
lret
pusha
lock
xor
jmp
shll
btr
mov
dec
lods
loope
add
mov
inc
pop
loopne
xchg
leave
rorb
and
clc
aaa
or
lds
stc
push
out
mov
sub
lock
out
jnp
aas
xchg
rol
jmp
stos
sbb
test
sbb
push
imul
or
xchg
out
mov
pop
or
cld
mov
xchg
xor
fsubrl
enter
je
cmp
cltd
mov
stos
in
fists
cld
call
or
fadds
pop
xchg
mov
les
int
stos
dec
test
ss
repnz
clc
nop
xor
adc
push
add
add
push
sub
cmpsl
clc
pop
and
int3
insb
addr16
sbb
jae
dec
je
inc
fnsave
and
and
outsb
inc
xor
insl
pusha
cmp
stc
push
test
icebp
daa
jge
sub
sbb
and
pop
mov
mov
push
mov
cmpsb
push
cltd
leave
fsubr
jmp
scas
aad
jb
push
out
mov
adc
mov
sub
jp
and
test
xor
mov
push
aad
xchg
fidivs
in
xchg
scas
cmc
negb
lds
in
push
add
pop
mov
mov
int3
loope
mov
cmp
mov
sbb
and
bound
dec
ret
nop
clc
xchg
lcall
outsl
je
daa
repz
movsl
subb
sti
adc
add
push
in
hlt
pop
mov
jns
mov
xchg
xor
xor
call
scas
sub
lds
leave
ds
mov
fwait
dec
mov
inc
daa
adc
jg
dec
mov
pop
xchg
nop
pop
jl
sub
dec
jecxz
clc
inc
out
ja
ficomps
push
insl
pop
mov
dec
cltd
and
cwtl
pop
jo
es
dec
xchg
repnz
insl
cmpsl
ret
push
or
mov
add
add
sbb
push
push
out
push
and
push
xchg
sbb
and
sbb
jnp
movsl
push
lds
lods
lret
push
pop
adc
lods
xor
jmp
adcb
cmp
inc
cltd
mov
popa
sbb
inc
sar
inc
jb
gs
daa
lods
cs
xchg
mov
mov
push
cmp
test
jae
adc
and
cwtl
xchg
punpcklwd
sub
lahf
cld
xchg
or
mov
out
mov
mov
or
sub
mov
mov
icebp
in
mov
ret
sbb
mulb
imul
scas
adcb
lock
testb
mov
push
adc
add
scas
lcall
lret
sub
inc
inc
hlt
lds
xchg
xchg
dec
das
mov
push
test
loope
das
test
pop
bound
ret
xchg
leave
les
lock
sub
xchg
push
xor
jne
in
jae
addr16
int
rcrl
sbb
cmp
mov
clc
add
ret
fs
hlt
sub
pop
sbb
loope
aaa
iret
fstpt
xor
fs
sahf
pop
aad
imul
jns
sub
or
inc
addl
outsb
daa
xor
and
jmp
dec
popa
scas
sarl
ret
sub
cmc
mov
mov
inc
jg
cmc
xor
jne
or
cmpl
je
pop
aam
pop
xor
leave
push
inc
sub
dec
or
mov
xchg
pop
mov
imul
js
repz
jno
inc
xor
test
scas
daa
es
loop
xchg
push
leave
dec
pop
cmpsb
mov
ds
into
in
ret
xchg
rorl
inc
test
lock
shrl
jmp
call
fdiv
adc
rcll
mov
mov
in
in
jle
call
cmp
in
mov
aaa
aam
outsb
jbe
stos
sbb
jg
cmpsb
mov
cmc
push
lods
je
sbb
pushf
test
xor
pop
cmc
std
jg
mov
lret
insb
test
fnop
jle
sub
addl
add
cmp
flds
pop
cmp
jle
aam
dec
sub
xor
sbb
jge
enter
dec
or
gs
sbb
pop
adc
loopne
ror
into
iret
or
cltd
cmp
shrb
out
or
dec
and
dec
adc
shlb
mov
dec
dec
xor
cmpsb
rcrb
jg
aas
xchg
or
xchg
icebp
sub
test
mov
shlb
mov
and
imul
add
in
xchg
call
xchg
hlt
push
lret
imul
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
or
sub
sub
pop
cmp
inc
cli
sahf
test
dec
fdivrp
pop
xchg
mov
dec
jp
cmp
lret
shll
sub
pop
int
popa
movsl
lods
fimuls
and
jl
mov
movsb
mov
xchg
jp
jo
cmc
outsb
aaa
pop
xchg
dec
sbb
cmp
pop
imul
jnp
pusha
mov
jg
dec
outsl
mov
cmp
lcall
addr16
cmp
inc
sbb
jle
jl
pusha
clc
in
addr16
ljmp
cltd
stos
pop
xchg
mov
dec
mov
push
int3
arpl
rclb
cmp
pop
and
cmpsl
xor
pop
xchg
cmp
xchg
sub
xor
lcall
xor
cld
ret
pop
ljmp
lret
ljmp
out
adc
pop
scas
or
and
test
and
xor
cs
dec
call
bound
sbb
sahf
orb
xor
cmp
test
lock
add
fidivrl
jge
adc
js
push
jl
pop
rcrb
pop
adc
mov
loope
nop
rolb
imul
and
push
jmp
outsb
outsl
sbb
xchg
push
out
sbb
and
aas
push
es
add
clc
push
int3
test
dec
mov
push
dec
imul
nop
lea
push
stos
cmp
ret
or
bndldx
icebp
loopne
in
in
ja
dec
sbb
add
pop
adc
scas
inc
mov
or
mov
adc
std
or
and
xchg
das
push
sarl
rorl
pop
seta
flds
mov
jle
je
icebp
ss
mov
push
pusha
arpl
mov
xchg
jg
jne
mov
add
insl
mov
push
sub
rclb
cmp
pop
xchg
mov
xchg
and
lret
in
shr
inc
jno
fildl
pop
lods
lahf
or
push
inc
sbb
call
fists
pop
scas
jo
dec
lea
fldcw
stc
repz
shlb
repnz
ljmp
and
jbe
js,pn
mov
dec
shlb
rorl
das
cs
std
stos
in
shrb
hlt
cmpsb
sub
mov
jbe
and
xor
test
fiaddl
fsubr
cmpsb
orl
cli
pusha
sti
pushf
mov
sub
inc
push
or
int3
fs
pop
pop
lods
jns
pop
adc
jecxz
dec
arpl
inc
mov
cld
lret
adc
push
aas
mov
cmpl
sbb
pop
cmp
jae
or
jge
outsl
repz
mov
mov
and
adc
movsl
aaa
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
lcall
and
sbb
or
insl
ljmp
test
dec
xchg
xchg
mov
adc
lret
pop
push
cli
cwtl
mov
in
or
loop
add
icebp
in
xchg
pop
scas
dec
pop
jecxz
fisubrl
mov
out
ljmp
or
sbb
xor
sbb
fadd
out
std
pop
sbb
mov
lods
out
add
push
inc
mov
into
std
lret
repnz
pop
xchg
adc
ds
push
adc
outsl
jne
loope
shl
inc
lods
dec
dec
xacquire
adc
lods
ds
and
in
xor
mov
mov
cmp
push
mov
mov
lock
push
sti
xchg
jbe
hlt
mov
and
xchg
sub
fstpt
dec
arpl
mov
sub
add
popf
cwtl
xor
pop
sub
mov
sbb
dec
mov
stos
dec
leave
dec
push
mov
shl
mov
loop
iret
dec
cmpsb
lahf
cmp
add
xlat
scas
or
repz
mov
push
sbb
push
sbb
std
jnp
out
cltd
mov
fdivs
cmpsb
push
lods
fsubs
jl
adc
into
jl
rcl
jns
sbb
xchg
pop
sub
loop
xor
inc
push
mov
aam
repnz
call
jae
out
mov
test
jae
cmp
xor
in
mov
test
fsts
mov
push
xchg
xor
jae
adc
pop
adc
push
add
shll
jg
fistpl
inc
inc
mov
mov
lcall
sub
jmp
pop
mov
push
orb
dec
adc
push
cli
gs
loopne
hlt
out
ret
dec
add
xchg
mov
xchg
popa
xchg
test
roll
cmpb
mov
sbb
sub
adc
pop
xchg
cli
leave
mov
sahf
inc
arpl
les
add
dec
mov
mov
xchg
sbb
cmp
jo
push
and
xchg
inc
outsl
or
test
in
daa
jne
xor
inc
cmc
nop
add
pop
jl
sahf
test
mov
nop
fadds
add
sbb
stos
sbb
movsb
inc
das
mov
push
mov
inc
sbbb
cmp
mov
mulb
cmp
mov
mov
stos
addr16
cmpsb
or
or
out
das
jns
hlt
inc
push
and
xchg
adc
pop
push
push
mov
pop
std
xchg
negb
dec
xor
leave
cmp
or
and
sbb
scas
push
mov
or
pop
sub
dec
in
dec
iret
adc
inc
mov
sbb
test
fsub
mov
xlat
sub
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
and
sbb
mov
clc
push
es
int
pop
mov
xorl
scas
xchg
stc
sbb
js
ret
ret
cmp
in
jae
mov
pop
push
mov
add
arpl
scas
stos
les
sti
lcall
movsb
clc
push
mov
add
pop
cltd
jp
inc
aaa
mov
or
adcb
je
mov
sub
nop
arpl
fldcw
scas
lods
add
bnd
lcall
fsubrl
lret
rolb
dec
dec
movsb
das
leave
outsb
mov
incl
lahf
xchg
add
ret
adc
push
and
sbb
fmul
mov
lods
in
imul
sbbb
outsl
mov
mov
adc
lods
adc
test
pop
mov
popa
xchg
jg
sub
adc
pop
aaa
jle
inc
ret
mov
scas
outsb
cmp
mov
add
or
in
lea
mov
imul
arpl
adcb
or
inc
push
mov
lret
xor
outsb
adc
push
dec
fcompl
cmp
stos
ds
pop
sub
inc
pop
mov
sub
insb
das
aam
and
or
aaa
mov
ret
repz
sahf
test
cmp
inc
pop
xor
xchg
out
add
repz
inc
incb
jl
jae
dec
mov
jns
xor
into
aad
or
pop
inc
rclb
ret
sbb
in
cltd
movsb
fistl
push
lds
push
mov
enter
lret
cmp
repz
jle
shlb
lahf
xor
out
mov
mov
pop
mov
adc
pushf
and
pop
leave
add
mov
movsb
sbb
adc
stos
mov
sub
push
pop
out
push
xlat
add
incl
dec
mov
outsb
push
pop
dec
jnp
stos
xchg
push
data16
xchg
lods
mov
loop
out
shlb
xchg
loop
and
sub
mov
repnz
sub
inc
ret
xor
mov
data16
scas
or
jle
jnp
int
cltd
jl
pop
sahf
std
xchg
insl
cmp
cmp
testb
enter
xor
les
push
dec
cmpsl
subl
push
aam
pop
stos
pop
push
vphaddwq
test
cmpsb
mov
sti
imul
enter
pop
xchg
jg
sahf
mov
clc
mov
aam
inc
sbb
pop
mov
xor
lcall
jo
cmpb
in
pop
adc
mov
hlt
and
fdivrs
sub
mov
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
sahf
pop
jo
jns
sbb
adc
sbb
and
popa
or
cmp
cli
sub
cmp
popf
push
cmpb
mov
inc
xchg
lods
pop
or
cs
adc
cmp
lahf
pop
pop
cmp
add
cli
ljmp
aas
mov
stos
andl
inc
jmp
subb
nop
repnz
push
nop
insb
mov
pop
dec
pop
inc
das
fwait
mov
ljmp
cltd
push
arpl
cmp
xor
mov
mov
call
dec
jae
xchg
data16
push
and
jmp
pop
rcrb
sahf
push
repnz
add
rclb
adc
es
xor
sti
aad
test
mov
mov
dec
and
js
cmp
shlb
jge
cmpsb
xor
push
lret
mov
sarl
push
dec
pop
mov
mov
ljmp
pop
and
lret
pop
fisubl
aaa
inc
cmp
test
xchg
and
mov
in
addr16
jp
daa
mov
rcrb
inc
lods
push
sar
or
or
in
inc
mov
ja
xchg
xor
mov
mov
mov
cmp
xchg
lret
adc
push
cmpsl
cmp
mov
adc
daa
daa
sub
mov
pusha
lahf
scas
inc
pop
out
mov
mov
stos
into
jnp
mov
shrl
mov
lock
fidivrl
imul
mov
outsb
mov
adc
dec
ja
cmpsl
cltd
mov
adc
loop
pop
jl
xor
loope
fnsave
xor
dec
arpl
adc
in
bt
pop
movsb
push
xorb
cmpsl
xlat
xchg
inc
cli
aad
push
std
or
jae
call
push
and
pop
lock
mov
push
mov
add
jmp
inc
sbb
add
roll
jnp
test
imul
cmp
inc
xlat
dec
push
pop
icebp
pop
dec
frstor
inc
lcall
xor
outsb
mov
leave
mov
sbb
push
xlat
lcall
insb
push
dec
jns
cmp
cltd
call
rorb
ss
popa
andl
fwait
cmpsb
xlat
push
jp
xchg
stos
stos
in
sar
add
call
add
bound
inc
lea
or
mov
add
lret
out
cmp
iret
mov
imul
add
sbb
push
add
je
xchg
rorb
leave
mov
or
shlb
sub
inc
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
dec
fistpll
push
sbb
mov
xor
sbbl
pop
adc
mov
mov
mov
nop
jecxz
aam
decb
adc
fbstp
and
jecxz
pop
fstpt
out
pop
jno
cmp
push
sbb
push
cmp
push
lret
mov
stos
out
loop
sarb
dec
jmp
out
outsl
push
jmp
mov
jb
xor
clc
leave
outsb
lea
jb
popa
hlt
lods
rolb
pop
push
or
pop
push
or
out
repnz
sahf
decl
xor
test
pop
clc
out
xchg
mov
inc
mov
lret
dec
pop
xchg
addr16
ja
movsb
cwtl
loope
xchg
push
sbb
and
scas
or
sbb
mov
sub
aam
roll
incb
lods
jecxz
outsl
push
mov
push
jg
sub
add
mov
push
imul
sbb
inc
aas
mov
inc
dec
in
inc
insl
fcoms
rcr
inc
or
cmpsl
lods
fsub
dec
imul
mov
popf
mov
jmp
cli
sub
or
sti
push
pop
xor
jp
xchg
or
int
jecxz
pop
mov
xor
loopne
push
mov
sub
shll
pop
in
loop
scas
jne
pop
frstor
pop
push
adc
pop
popa
mov
inc
push
mov
sti
xor
mov
add
cs
mov
push
gs
cli
mov
adc
cld
loop
popf
mov
aas
dec
push
in
movsb
arpl
je
xchg
adc
ljmp
jg
sbb
mov
and
dec
lea
scas
jnp
push
jns
popa
mov
push
mov
decb
test
xor
and
jmp
movsb
mov
xchg
leave
xor
cli
mov
xchg
aas
adc
inc
dec
icebp
aaa
iret
sub
xor
xchg
or
adc
fisubrs
insl
mov
mov
scas
shl
push
cmp
hlt
pop
adc
pop
ljmp
push
int
aad
push
jge
aas
pop
mov
mov
ja
pop
int
in
sti
fmull
sub
xchg
and
jns
mov
je
shll
dec
and
adc
jb
dec
repz
fs
inc
push
adc
mov
jno
and
xchg
lret
adc
ds
out
out
rcrl
ficoms
adc
je
scas
repz
ja
add
popf
test
ret
pushf
add
in
es
jno
in
xchg
lahf
jecxz
int
addr16
mov
mov
stc
fnstenv
pop
sbb
or
clc
pop
filds
cld
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
int
mov
and
sbb
mov
lret
adc
ds
in
ret
mov
cmp
xchg
xchg
lcall
ja
mov
xchg
mov
jns
xchg
insl
mov
jg
inc
movsl
test
mov
and
enter
loope
jns
test
mov
sahf
lahf
dec
inc
sub
out
hlt
add
pop
and
shr
jle
lcall
testb
mov
daa
sbbb
xor
movsb
or
dec
jb
hlt
mov
cmc
mov
mov
js
jo
notl
repnz
inc
stos
mov
out
aaa
fimull
daa
pop
insl
add
in
push
fwait
cltd
cltd
inc
popa
in
or
dec
negl
mov
shlb
adc
fisubrs
mov
loope
imul
dec
xor
rcll
pop
sbb
leave
sub
mov
jmp
add
icebp
arpl
xchg
sbb
inc
adc
or
xchg
mov
into
mov
push
daa
or
pop
in
or
lret
out
push
aas
js
jns
add
pop
add
loope
mov
movsl
stos
inc
lret
mov
sbb
fisubrs
dec
xchg
call
or
cmp
loop
rolb
pop
mov
pushf
sub
adc
sbb
mov
loopne
dec
outsl
xor
mov
jmp
negl
aas
in
aaa
xchg
adc
xchg
cmc
cwtl
lods
jecxz
testb
inc
mov
fisttpl
cmp
cmp
cmp
cmp
adc
mov
pop
pop
or
mov
arpl
out
enter
push
push
fimuls
loopne
scas
jo
push
fistl
icebp
pushf
xchg
lahf
jl
rolb
and
or
test
fs
jp
cmp
daa
js
push
les
adc
inc
ret
push
sbb
add
dec
ss
mov
out
cmp
mov
mull
shll
xchg
add
xchg
imul
repnz
cmp
push
adc
test
sub
mov
lock
ja
xchg
ret
inc
lds
dec
lods
cmp
aad
adc
mov
jne
rcrl
in
ja
mov
push
jo
aam
xor
in
test
inc
ficoms
je
int
inc
push
xchg
sub
leave
mov
inc
sbb
cmc
lods
push
add
cmp
js
psrad
push
or
or
sub
sbb
mov
repnz
bound
push
call
pop
mov
xchg
outsb
xor
int3
out
rorl
cmc
mov
adc
sub
sub
lea
in
mov
movsl
inc
mov
xchg
insb
ljmp
shr
shr
jmp
and
push
sbb
push
xlat
test
sbb
adc
sbb
dec
loope
testl
jl
xor
loopne
inc
aas
test
push
dec
sub
testb
add
adc
int3
subl
imul
add
mov
and
push
adc
mov
push
adc
jo
or
dec
xchg
xlat
cmp
out
test
icebp
pop
sti
pop
shl
rorb
insl
dec
out
loop
lret
adc
out
jg
xchg
sbb
pop
mov
xor
pusha
into
mov
cmp
lcall
cs
mov
push
inc
int
jp
pop
add
call
stos
push
and
in
mov
cltd
adc
add
inc
mov
mov
jns
ss
jmp
popf
outsl
jb
test
loope
nop
adc
jg
imul
xchg
pop
cmpl
jae
arpl
enter
ret
xor
in
pop
sahf
jno
pop
pop
pop
adc
adc
sti
imul
not
andb
outsl
push
pop
scas
mov
sbb
push
dec
ss
pop
mov
jbe
stos
cmpsb
pop
loopne
arpl
dec
xlat
and
fisubrs
fucom
stc
lods
xchg
mov
cli
outsl
mov
add
add
rolb
lret
mov
jae
ret
add
adc
sub
jbe
ljmp
shlb
pop
popa
sub
or
enter
insl
push
shll
cmp
icebp
rolb
add
sub
jl
pop
pop
and
jae
or
lret
int3
repz
out
cli
mov
sub
cli
dec
xchg
lahf
mov
dec
test
adc
dec
pop
inc
in
cmp
inc
inc
rep
inc
leave
imul
and
inc
pop
dec
cmp
and
xchg
outsb
stc
mov
or
decl
fs
xor
stc
data16
push
add
pop
xchg
fsubr
or
ja
jno
xchg
ljmp
fstpl
insb
mull
dec
adc
jp
inc
call
popa
hlt
inc
mov
lahf
add
gs
loop
dec
mov
shlb
int3
xchg
xchg
cmp
mov
cmp
push
icebp
stos
cmpsl
sub
sub
xchg
adc
mov
in
cmp
add
imul
aam
xchg
scas
cmp
aaa
push
icebp
jne
movsb
dec
cwtl
xchg
cmpsl
ja
push
push
pop
call
jnp
xor
xor
mov
adcb
lret
adc
cmp
add
xor
mov
lock
jnp
ret
out
fmull
add
push
sbb
jae
inc
mov
icebp
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
arpl
adc
sbb
flds
inc
mov
imul
xchg
jnp
xchg
or
push
aad
out
imul
add
cld
xor
add
in
lock
mov
pop
xchg
add
jne
loope
mov
popl
mov
pop
mov
data16
mov
fwait
xchg
xor
mov
xchg
push
ret
mov
jmp
pop
int
popa
mov
pop
popa
jp
mov
add
or
push
xchg
fldenv
xchg
push
xorb
sbb
adc
mov
into
sti
inc
mov
test
enter
daa
adc
hlt
es
or
ljmp
in
add
xor
movsb
fwait
push
pop
adcb
cs
and
stos
mov
daa
or
mov
sbb
test
in
cmp
xor
test
fcomps
lret
faddl
mov
cmp
in
push
mov
imul
push
add
add
cmp
ficoms
push
xchg
pop
mov
hlt
shr
jge
dec
xor
xchg
add
xor
fwait
jmp
into
and
loopne
cltd
and
mov
xchg
data16
js
insl
inc
mov
lock
or
mov
jne
pop
sub
sbb
pop
ljmp
int3
inc
sbb
jne
jg
jns
mov
sti
mov
shll
shrb
xlat
lcall
cld
add
sbb
jg
icebp
add
inc
int
test
scas
adc
vandpd
cmc
sbb
ret
xor
push
rcr
cmpl
or
xor
push
mov
jge
cld
or
lods
mov
mov
xchg
sbb
dec
mov
inc
lret
adcb
adc
ret
and
xchg
or
dec
es
imul
scas
jmp
xchg
loop
and
sbb
push
xchg
sbb
ret
dec
add
stc
mov
inc
jmp
cwtl
and
inc
sub
xor
mov
sti
push
inc
jno
or
lods
dec
lods
sahf
call
scas
mov
or
out
xorb
int3
mov
mov
mov
xchg
xorl
adc
lods
int3
lret
cltd
je
xor
rorl
jbe
js
add
xor
xchg
push
sub
jb
divb
sbb
jbe
jge
inc
and
aaa
mov
arpl
pop
pushl
cs
ret
and
cmp
inc
je
imul
adc
push
jl
or
mov
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
out
popf
jo
pop
sbb
and
sbb
and
test
dec
inc
push
push
pop
data16
rorl
cmp
gs
jbe
push
subb
push
ja
scas
push
mov
jle
mov
cld
sub
fsubrs
lret
fnsave
imul
nop
ss
hlt
test
out
inc
push
jmp
inc
mov
ret
ret
les
ret
mov
out
idivb
push
cmp
shlb
adc
jl
xor
fisubrl
loop,pn
mull
fildll
xor
sbb
gs
into
sbb
push
inc
push
imul
das
pop
dec
pop
imulb
dec
xor
fwait
cmp
and
nop
mov
cmpsb
dec
pop
mov
fldt
add
adc
test
pop
pop
jno
bound
jl
xorl
sarb
push
pushf
mov
jo
mov
xchg
into
mov
pop
ljmp
xor
cmc
lds
rclb
adc
mov
xchg
pop
jecxz
test
mov
add
aad
or
ja
lret
push
popa
je
aad
nop
mov
push
jge
jae
addr16
into
mov
into
xchg
mov
insb
mov
or
hlt
jne
in
jno
scas
jg
stos
or
pop
adc
sub
imul
stos
popf
frstor
insl
and
and
mov
cld
imulb
loop
mov
cs
shlb
xor
pop
jmp
lahf
mov
ficompl
lods
sbb
fcmovu
dec
mov
andb
movsl
jmp
mov
into
es
fs
jg
shll
cmpsb
leave
scas
pop
xchg
dec
sti
jmp
shl
pop
in
sbb
sbb
sub
and
jnp
rcrl
mov
lds
sbb
xor
ja
jne
pop
pop
sahf
adc
xor
addr16
out
xchg
stos
push
push
hlt
ljmp
insb
test
dec
cmc
sbb
aad
add
xchg
test
test
fisttps
not
cmovle
push
push
cltd
dec
push
leave
mov
jl
test
adc
fwait
stos
gs
mov
or
push
out
mov
shrl
test
inc
notl
mov
jecxz
ljmp
xor
cmc
cmp
cmpb
sbb
movsb
test
movsb
pop
xchg
cs
xchg
test
push
imul
mov
out
xor
ja
jl
pop
push
repnz
arpl
rcrl
sahf
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
pop
sub
jge
pop
pop
add
js
dec
mov
xorl
sbb
mov
cmp
sahf
nop
inc
scas
inc
add
mov
out
add
or
dec
pop
jecxz
fimuls
push
jp
xchg
rcll
js
enter
mov
inc
cmc
mov
ds
adc
fldcw
mov
lret
frstor
and
xor
xrelease
outsl
pop
pop
shlb
rorl
jp
mov
insb
nop
jle
loope
fsub
fistpl
or
dec
inc
dec
out
jns
notl
xchg
dec
rol
cmp
aaa
cmc
adc
add
mov
cmp
push
fadd
movsl
lcall
ja
push
rol
out
or
rcrb
adc
stos
rcr
jne
cwtl
test
or
mov
les
sbb
jg
xor
scas
imul
cwtl
dec
inc
mov
jg
test
push
xlat
jg
adc
mov
loopne
fwait
xchg
or
dec
rcll
xchg
sti
and
scas
mov
pusha
or
cli
push
pop
test
aas
out
sbb
sub
mov
clc
sub
jle
dec
and
cmp
jg
sahf
inc
xchg
mov
sbb
push
push
loopne
jns
push
dec
dec
mov
cs
rorb
mov
inc
xlat
imul
xor
mov
aaa
xlat
ljmp
into
pushf
mov
imul
cmp
aas
adc
je
iret
mov
jl
out
arpl
ret
jns
jmp
dec
dec
jne
cwtl
fnsave
sahf
mov
in
jo
sub
mov
xor
dec
out
jecxz
fnstenv
outsl
ss
push
jl
or
fisubrs
jb
mov
testb
out
insl
dec
fcoms
cmp
iret
mov
add
mov
mov
xor
ret
push
or
or
int
shl
in
cmpsl
pushw
push
xor
sti
shll
outsb
cmp
sbbb
das
mov
mov
bound
add
jno
dec
jb
punpcklwd
and
mov
dec
jecxz
jle
jnp
rclb
outsl
push
mov
push
ret
and
cmp
cwtl
ret
cmp
or
cmp
pop
ds
push
in
lret
mov
lock
in
mov
nop
es
mov
or
cld
sbb
mov
xor
les
xchg
icebp
movsb
lcall
jle
std
stos
in
push
sbb
mov
test
adc
inc
sub
or
mov
imul
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
aam
icebp
sub
xor
sar
lret
xor
imul
push
xchg
jnp
cmp
xchg
xor
sub
std
lret
cmp
push
add
fnstenv
repnz
lret
nop
cmp
push
pop
cltd
xchg
and
mov
lret
call
mov
xchg
dec
sahf
cltd
or
inc
xor
imul
lret
jl
mov
xorl
xchg
adc
fmuls
out
repz
push
je
xor
fsubrs
jge
popl
xor
sbb
inc
lods
push
xchg
and
cmp
push
fstps
add
sbb
pop
sbb
rorb
jns
jne
mov
add
jo
pop
lods
xchg
mov
je
mov
ret
sub
mov
shlb
push
and
push
fcmovu
mov
inc
iret
sub
mov
jle
fmull
sub
push
int3
dec
or
inc
inc
push
sarl
lcall
out
fidivl
enter
push
cmp
into
mov
hlt
test
mov
xchg
or
push
sub
int3
stos
stos
outsb
add
outsb
fcoms
insb
adc
addr16
push
mov
adc
outsl
lea
push
sub
cmp
test
into
aas
popa
mov
int3
mov
mov
pop
jae
adc
aad
pop
lock
pop
in
push
jecxz
sub
dec
aas
stos
ss
pusha
es
bound
addr16
std
adc
das
mov
sti
xchg
lret
cmp
aad
decb
xor
jecxz
sub
jmp
inc
ret
add
mov
jg
and
aaa
fucomi
dec
ret
movsb
sub
add
lock
and
xchg
stos
mov
loop
pusha
and
xchg
ret
xor
dec
push
lret
sub
int
idiv
imul
sub
sbb
sub
ja
mov
adc
insb
dec
xchg
rolb
loopne
fldenv
fcoml
xor
adc
nop
and
pushf
rorl
popa
lods
xchg
repnz
test
adc
jns
mov
cmp
sbb
into
rcll
jo
repnz
cmp
insb
fsubrl
pop
into
clc
mov
sbb
push
out
jle
pushf
jge
or
in
filds
fildl
adc
daa
in
dec
iret
or
loope
add
movsb
cmp
iret
push
iret
pop
xor
cld
outsb
xorb
in
popf
add
repnz
add
push
or
out
adc
cmp
xchg
cmc
shrl
aad
xor
scas
out
orl
add
inc
inc
jns
stos
xor
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
pop
pop
jle
dec
sbb
add
sbb
push
dec
divl
lods
or
nop
mov
lret
mov
dec
ja
mov
xchg
mov
testb
mov
mov
jp
movsl
enter
imul
imul
pushf
aas
push
pop
sbb
lahf
mov
mov
and
dec
xchg
mov
pop
jbe
mov
aaa
xchg
lahf
adc
sbbl
push
jne
push
mov
pop
packssdw
testb
xchg
mov
es
xchg
aam
jp
ficoml
jmp
clc
adcl
lods
adc
in
pop
lcall
dec
gs
push
cmp
sahf
fwait
sbb
pushf
cld
stos
shrl
jno
test
push
mov
pop
cmp
divb
add
jge
pop
pop
xchg
les
loopne
dec
xor
shll
pop
adc
dec
out
or
xor
stc
and
jg
mov
sbb
xchg
adc
add
jno
fbstp
xchg
out
in
in
xorb
dec
fs
jg
ja
sub
sub
cmp
pop
or
xchg
mov
lods
jp
add
add
jns
pushf
into
aaa
cmpsl
cmp
cmp
and
aad
push
fnsetpm(287
add
fisttps
xorb
fisttpll
push
out
and
inc
mov
jg
or
inc
es
sub
lcall
dec
dec
fxch
mov
xor
jmp
mov
jae
push
stos
sbb
xlat
stos
mov
or
xor
mov
lret
insl
out
loop
xor
pop
mov
rolb
lret
jp
pop
fsubrs
and
pop
and
pop
aas
cmp
sub
and
lock
push
out
addr16
push
test
jp
nop
or
into
mov
lock
rcrb
arpl
push
cmp
rcl
mov
adc
sub
pop
ljmp
jnp
shlb
fistpll
sub
and
pop
jge
popa
pop
push
popa
mov
push
repnz
push
test
loope
jge
jbe
mov
pop
pop
pop
lods
push
js
rol
pop
sbb
inc
lcall
scas
scas
adc
scas
nop
xchg
cmp
insb
rcrb
orl
iret
add
jb
test
mov
lods
dec
jle
pop
pop
mov
pop
scas
call
push
dec
sbb
imul
xchg
mov
stc
jae
mov
sub
inc
dec
push
fistps
push
mov
push
fadds
test
jae
inc
stos
fcomip
mov
test
pop
or
in
or
test
mov
pop
loop
sub
out
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
cmpl
jl
inc
sbb
add
sbb
pop
ret
shl
gs
xor
sbb
dec
add
cmp
and
dec
jae
pop
cltd
subl
es
sbb
outsl
add
push
fcompl
test
dec
mov
cmp
int3
addr16
xchg
jne
iret
test
popa
lahf
mov
mov
dec
out
jmp
fiadds
icebp
adc
aam
mov
out
xchg
jae
xchg
xchg
enter
push
negl
add
cmpsb
jae
out
push
into
imul
sub
jl
out
add
aad
sub
data16
xchg
xor
lahf
shll
and
mull
add
xchg
mov
mov
pop
dec
sub
mov
sub
icebp
and
pop
xor
push
pop
add
insb
lret
lcall
jno
xor
cmp
call
scas
pop
mov
xor
or
cmpsl
jb
xor
out
aam
mov
ret
rclb
test
add
aad
jl
mov
inc
sbb
stos
ret
data16
fsub
sti
pop
movsb
pusha
cs
jl
fdivrl
sbb
fs
mull
sub
lods
ljmp
cmpsl
in
add
mov
sub
hlt
enter
add
das
xchg
cmpsl
pop
test
ret
lret
push
fsubl
xchg
ffree
xor
call
outsb
icebp
pop
clc
lahf
mov
shr
mov
bound
mov
lds
bound
push
neg
in
or
adc
xor
sbb
loopne
mov
cmc
into
mov
sbb
mov
nop
xchg
xchg
cmpsb
stc
cld
lods
sahf
je
sub
xchg
add
insb
push
dec
in
pop
inc
sti
jle
sub
in
clc
push
pusha
nop
shr
mov
rcrb
jmp
jp
and
es
movsl
dec
xchg
es
pushf
adc
inc
popa
imul
or
mov
or
jp
addr16
bound
sub
mov
lds
or
push
jge
mov
dec
jle
sub
test
popa
fstpl
xchg
pushf
dec
lret
mov
test
lret
cld
and
dec
sub
mov
ret
mov
fwait
les
andl
jg
cmp
xchg
andb
nop
mov
dec
es
pusha
pop
ja
cli
fcmovbe
pop
fstpt
sub
popa
adc
sbb
xchg
fldt
stos
out
js
cmp
cmp
jnp
pop
push
into
mov
insl
cwtl
xchg
add
pop
arpl
mov
leave
lock
xor
mov
stos
mov
cmp
or
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
sub
mov
cmp
sbb
cmp
cmpsl
das
call
mov
or
or
sub
jecxz
fs
inc
or
lds
out
clc
pop
sub
jmp
jg
gs
repz
mov
sbb
int3
gs
push
mov
or
ss
lahf
fidivl
mov
loopne
mov
loop
push
and
jnp
jle,pt
cmpsl
movhps
cmpsb
jmp
add
int3
xchg
outsb
add
negb
cli
dec
jbe
repz
fucomi
cmp
mov
dec
outsl
push
loopne
dec
mov
shll
and
add
inc
cmpb
sbb
sti
pop
add
push
push
jle
pop
push
inc
jmp
test
push
hlt
inc
in
ficoml
jmp
notl
out
lret
or
cltd
adc
cmpsb
sar
scas
lds
sub
je
or
add
pop
jle
jne
fstpl
in
repz
add
sahf
pop
pop
subl
test
pop
mov
mov
xchg
inc
sbb
xor
pop
cmp
inc
sbb
loope
iret
xchg
pop
sbb
fidivrs
rclb
xchg
cmp
dec
inc
and
call
mov
mov
pop
mov
adc
cwtl
lcallw
fmull
add
aaa
jnp
daa
stos
out
nop
mov
mov
or
mov
jmp
pop
xchg
cmc
jo
nop
das
stos
lds
inc
and
jl
ffreep
daa
adc
aam
test
lcall
mov
mov
cmc
push
cmpb
mov
mov
jle
jnp
lahf
inc
out
in
and
fnstsw
inc
jmp
inc
mov
push
pop
pop
in
stos
mov
jae
mov
sahf
jo
pop
pushf
adc
jbe
mov
adc
idivb
pop
fbld
push
gs
mov
lcall
push
das
imul
leave
lods
mov
add
mov
mov
cmc
movsb
lcall
mov
xor
inc
adc
inc
and
mov
xchg
loope
xlat
int
in
push
popf
dec
test
loop,pn
outsl
mov
xor
push
sti
pop
mov
gs
and
mov
jg
mov
add
jo
pusha
pop
out
mov
mov
repz
lods
out
mov
and
call
jl
jg
cmovge
fidivrs
push
out
movsl
jge
sub
pusha
icebp
dec
mov
sbb
sbb
outsl
outsb
movsb
in
cmp
and
pop
mov
jbe
arpl
cli
jg
inc
clc
push
and
jno
lock
movsl
sub
inc
scas
hlt
shrb
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
pop
lea
aaa
sbb
add
sbb
pop
fcmovnu
jl,pn
cmc
push
or
fstl
and
insl
xchg
inc
mov
mov
lret
ds
adcb
iret
sbb
sub
push
shrl
test
add
dec
bound
movsb
repnz
inc
mov
gs
xor
xor
or
in
lods
dec
imul
mov
test
mov
rolb
add
mov
cmp
dec
fisubrs
test
cld
aas
adc
mov
mov
xchg
sub
arpl
jbe
inc
pop
mov
and
jge
sbb
out
xchg
or
mov
ret
xchg
pushf
jle
dec
sub
rolb
gs
or
lds
repnz
adc
mov
in
gs
rorl
jle
jp
jecxz
push
loop
cmpsl
loope
push
push
jno
stos
push
in
movsb
or
outsb
in
jge
ret
xchg
cs
lods
or
aam
push
mov
xchg
aaa
ja
cmpsl
dec
sarl
xor
xchg
push
out
ror
mov
and
out
testb
out
test
jne
jo
cmc
fnstenv
xchg
into
push
arpl
js
jl
loop
es
lods
jns
stos
orl
sbb
push
add
xchg
and
push
cmpsl
push
xor
jo
jae
lcall
pusha
xchg
insl
stos
mov
dec
or
jp
adc
scas
test
lods
popf
cmp
sahf
inc
cmp
xchg
add
outsb
xchg
xchg
sub
add
xchg
mov
mov
aam
pop
xchg
data16
inc
jp
rcl
jae
rorl
pop
popf
lock
or
lret
ja
lahf
test
sbb
jl
inc
push
pop
lcall
adc
inc
mov
and
ret
xor
cmpsl
jbe
jmp
xchg
pusha
adc
jmp
or
stos
xchg
mov
push
xchg
pop
in
fdivr
jmp
xchg
xor
loopne
adc
sub
loopne
loope
mov
addr16
std
cmp
test
stos
mov
mov
or
aas
test
adc
dec
xchg
roll
std
adc
call
and
push
inc
cmp
jbe
ljmp
mov
mov
clc
in
cli
repnz
pusha
cmp
out
fidivs
mov
sbb
ljmp
bound
push
ja
sbb
sub
jecxz
lock
and
std
jae
pop
push
das
stc
fidivl
mov
jmp
out
lcall
je
sbb
movsb
mov
inc
out
cld
mov
mov
std
sbb
adc
mov
sub
jne
fisubrl
andb
xchg
sub
mov
jmp
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
fstpt
xor
sbb
adc
sbb
and
fs
bound
shr
xchg
push
fsts
xor
or
lret
sub
and
cs
andb
fwait
outsl
loopne
insb
out
and
adc
add
sub
cld
insl
or
push
mov
mov
fadd
dec
sti
push
das
jecxz
xchg
into
adc
in
sahf
dec
mov
ljmp
imul
push
scas
cltd
add
out
addb
jecxz
xrelease
pop
iret
and
fstpt
push
leave
adc
xchg
jge
push
add
mov
insb
dec
imul
jnp
cltd
shl
lret
leave
mov
lods
filds
mov
arpl
pop
cld
adc
lds
incl
adc
outsb
mov
jnp
bound
out
pop
popa
shlb
xor
dec
add
sub
sub
loopne
int3
das
and
jp
adc
sub
push
dec
outsl
pop
mov
aad
pop
sub
adc
insb
add
push
mov
cli
dec
gs
cli
test
test
pop
xor
arpl
movsl
ljmp
sub
fldcw
or
cmp
push
int
es
and
adc
stos
jmp
fistl
inc
enter
jbe
sahf
loopne
and
push
nop
aam
fsts
test
jns
inc
test
test
in
outsl
or
add
xchg
ss
pop
cmp
pop
jmp
js
int
sub
sbb
and
jecxz
jbe
in
mov
xor
push
mov
jp
pushf
lret
pushf
int3
jne
push
add
loopne
stc
loope
xor
sub
cs
pop
fcoml
cmc
es
cld
dec
dec
popf
mov
xlat
outsb
xchg
mov
addr16
imul
mov
jmp
adc
int3
pusha
adc
into
jne
mov
cmp
jno
jecxz
in
movl
xchg
dec
addr16
dec
test
lahf
or
mov
leave
dec
outsb
enter
adc
cmp
out
xor
enter
movsw
cmpsl
sub
insl
test
sub
xor
repz
jecxz
into
jmp
jbe
movsb
in
jmp
pop
scas
inc
and
shrb
sub
xchg
stos
scas
je
fmull
adc
or
jg
iret
shr
jns
or
push
pop
or
xchg
repnz
and
insl
jp
fadds
rcll
std
push
in
pushf
pop
or
ss
mov
pusha
mov
cmp
cmpsb
or
xchg
sub
xchg
push
xchg
xchg
mov
add
jmp
add
push
sbb
ja
into
jb
stos
mov
adc
sbb
mov
push
sbb
dec
mov
loop
cmp
shrl
sub
dec
or
push
cmp
out
jne
mov
fucomi
decb
popa
mov
test
int
enter
ja
dec
pop
loopne
inc
adc
inc
das
mov
aad
out
iret
jne
jne
movsb
adc
mov
fnsave
push
and
leave
push
jmp
insl
test
movsl
adc
jle
icebp
push
mov
test
call
clc
pop
push
xchg
ljmp
add
adc
fldenv
xor
cmc
add
sub
cmp
push
add
popf
sbb
pusha
and
xor
test
fstps
ljmp
mov
push
cli
cmp
push
mov
cmc
call
xchg
seta
arpl
add
dec
jnp
test
mov
jle
mov
and
sbb
cmp
imul
lcall
jp
mov
jle
push
orl
aam
mov
call
xchg
mov
mov
lock
sbb
mov
aaa
nop
cmpsl
xrelease
jne
ret
xor
outsl
jno
mov
cmp
add
push
or
stc
loopne
push
in
mov
scas
ss
test
push
sti
lcall
push
cmp
cmpsb
fiadds
bound
push
xor
test
lahf
fwait
mov
loop
std
mov
call
pop
lods
mov
pop
push
outsb
sbb
js
fnsave
lea
out
in
lock
mov
cmp
jmp
sbb
jb
mov
aam
cmc
repnz
arpl
arpl
std
jge
testl
or
call
fsubs
xchg
push
adc
inc
mov
mov
xchg
jmp
mov
adc
popf
cs
push
in
and
ret
iret
mov
and
fstp
data16
or
ds
sub
sub
and
in
push
rorl
sbb
mov
add
adc
ret
jbe
inc
xchg
or
xlat
push
xchg
pop
bound
outsl
clc
les
ja
mov
pop
lds
adc
lcall
insb
in
clc
or
pop
jne
jl
mov
jle
lods
movsl
or
sbb
xchg
xchg
addb
dec
mov
outsl
aas
jns
in
mov
lods
cs
push
ds
fisttps
icebp
jg
fcmovne
mov
add
dec
es
xchg
addl
mov
rolb
ret
pop
dec
pop
fs
je
pop
xchg
mov
pop
push
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
push
imul
adc
sbb
gs
fadd
dec
stos
jb
in
cmp
iret
or
or
into
sbb
divb
jne
ss
mov
or
daa
mov
fucomp
xor
jo
mov
addr16
test
filds
push
lock
js
dec
inc
push
adc
mov
jbe
pop
andb
inc
push
pusha
cmp
and
xchg
test
inc
aas
in
out
mov
pop
sbb
bound
xor
fcoms
or
sub
incb
out
test
dec
out
popa
mov
xor
and
dec
lods
and
cmp
andb
jno
pop
mov
mov
sub
das
jae
pop
inc
in
jl
jmp
jge
mov
addb
sub
lret
jb
lds
sub
into
lds
dec
dec
scas
out
jp
mov
sub
adc
hlt
jnp
mov
ja
sub
inc
xchg
mov
sub
ljmp
and
push
cltd
outsb
pop
movsb
leave
sti
or
pop
jnp
sbb
cmp
or
add
mul
sbb
fists
lahf
sub
js
stc
sub
stc
outsl
pop
dec
popf
nop
out
lahf
in
in
push
lahf
fwait
ja
lock
cmp
and
mov
xor
test
lds
movsb
mov
mov
cs
and
inc
ret
mov
inc
inc
loopne
cli
cltd
sbb
push
add
rcrl
movsl
mov
call
pop
scas
push
popf
xchg
stc
ss
adc
fildll
add
xchg
sahf
in
shlb
inc
daa
repz
fs
adc
test
mov
xchg
loope
mov
xor
lss
inc
add
dec
mov
rclb
in
mov
stos
cmp
xchg
jb
push
into
jne
xchg
push
test
mov
sub
out
loop
mov
or
jnp
cmp
push
adc
pop
sarl
lock
xor
gs
out
xchg
pop
rcrb
das
inc
aam
jne
int3
in
push
mov
cltd
lahf
call
idiv
sbb
mov
test
mov
shl
and
sub
xorl
inc
mov
ja
das
fwait
sbb
mov
xchg
sti
popf
jle
pop
stc
and
mov
lcall
movzwl
inc
xor
cli
loopne
jl
xor
insb
mov
je
cmp
fldt
int3
ja
out
push
jnp
inc
addr16
jno
aad
test
mov
cs
fstl
lock
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
push
dec
push
pop
sbb
add
sbb
cmpsb
cli
into
es
cmp
repnz
xchg
leave
test
mov
movsb
push
shll
nop
aam
push
in
ds
add
adc
fdivs
stos
jb
into
repz
inc
inc
imul
mulb
adc
and
lods
xor
stc
sub
push
arpl
rcr
and
es
pop
mov
push
push
leave
mov
sub
pop
andb
xchg
in
insb
adc
push
or
aas
push
push
mov
int3
idivl
rorl
enter
sub
mov
lcall
ja
and
cmp
add
dec
imul
sub
popa
mov
call
push
cmc
stc
iret
push
inc
jge
decb
push
xlat
fstl
xor
sbb
push
adc
jecxz
jnp
xchg
cmpb
adc
dec
out
movsb
ljmp
jge
vpackssdw
call
sbb
and
hlt
fsts
cmpsl
sub
sub
mov
and
add
fwait
test
stos
mov
xchg
je
adc
pop
add
xchg
jecxz
mov
cld
aas
pop
fisttpl
aam
sahf
mov
or
test
sub
jno
cmpsl
adc
es
cmovbe
dec
cmpsb
ret
cmp
nop
test
adc
cs
lea
xchg
and
cmp
dec
call
mov
outsb
mov
push
cmp
shlb
mov
dec
mov
push
jo
scas
xor
cs
insl
jmp
stc
addr16
iret
cli
mov
mov
js
and
repz
call
adc
fs
dec
push
jno
inc
js
mov
clc
lods
lds
or
fstpl
sub
adcb
mov
cmc
xor
sub
mov
shrl
jmp
sbb
mov
lods
inc
jge
xor
das
movsl
cld
xor
pushf
pop
pop
std
test
scas
cmp
adc
jecxz
push
dec
jb
addr16
jbe
pop
bound
dec
int3
les
jmp
add
push
sbb
add
sub
imulb
repz
jb
or
and
mull
ror
popa
fisttpl
inc
sahf
arpl
cwtl
xor
fwait
pushf
jae
fbstp
pop
xchg
mov
push
cmp
outsl
enter
or
idivb
into
jmp
xchg
xchg
inc
notl
inc
imul
enter
out
jg
test
jmp
adc
adc
dec
mov
xlat
nop
dec
push
push
push
mov
inc
addl
push
iret
sub
ds
repz
cmp
fadd
jo
xchg
rclb
loop
jle
aam
jno
mov
sub
and
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
cmp
add
mov
inc
mov
xchg
pop
scas
sub
inc
mov
stos
lock
ja
push
lds
xchg
mov
loope
data16
mov
pop
jno
push
in
jl
xor
mov
dec
out
aas
push
leave
jo
mov
add
loopne
push
jle
ret
mov
call
test
sbb
cmp
adc
push
cs
movsb
lret
adc
or
in
mov
xchg
sub
lds
or
add
lock
outsb
mov
scas
bound
es
mov
adc
push
insl
std
ret
repnz
cmp
rorl
fisttps
mov
push
sbb
gs
mov
mov
iret
fs
push
idiv
shlb
or
gs
push
and
jge
ljmp
and
xor
adc
push
xchg
add
enter
xchg
xlat
sbb
outsb
sub
inc
cmpsl
jns
add
push
out
cmp
xchg
push
fstl
or
dec
add
pop
or
and
push
sahf
fcomps
push
inc
insl
dec
sub
cmp
fwait
sti
insb
inc
and
or
push
sbb
fsubrl
sarl
pop
inc
jl
sub
stc
xor
lahf
jnp
jg
in
pop
push
jecxz
mov
jo
movsl
mov
add
jo
mov
jl
cmpl
pop
cli
hlt
adc
mov
push
fwait
mov
mov
test
stos
sbb
mov
icebp
adc
lahf
fadd
cmpsl
fimuls
sbb
loop
pop
pop
add
add
test
add
test
push
sahf
mov
cwtl
scas
mov
adc
xchg
loope
pop
jne
cld
mov
mov
dec
inc
push
aaa
out
mov
jns
add
jns
add
jp
ret
loop
mulb
jnp
push
stc
or
movsl
pop
push
pushaw
mov
gs
scas
xor
and
es
ffreep
icebp
and
mov
cmpsl
outsb
lea
movsb
push
in
lret
xchg
push
mov
and
cli
pushf
and
xchg
cli
negb
cs
sbb
imul
jne
add
lea
popa
enter
rolb
mov
dec
in
repnz
fs
and
inc
mov
jl
jg
sbb
xchg
scas
pop
or
mov
mov
adc
fsubrl
jne
or
lahf
sub
xor
sub
or
cwtl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
add
inc
push
adc
sbb
adc
sbb
fst
es
lret
push
lea
cmp
xor
test
rep
pop
sub
lret
cs
stos
shlb
push
push
test
lods
out
pop
ds
jns
mov
enter
call
cmp
adc
mov
push
push
int
lea
xor
je
add
mov
jle
sub
addr16
xchg
stos
mov
call
stc
push
ss
inc
enter
xchg
cmpsb
je
mov
pop
dec
aas
fs
in
pop
repz
sbb
mov
int3
leave
add
repz
imul
or
stos
pop
mov
stos
dec
mov
fistl
aam
call
adc
push
add
mov
icebp
pop
arpl
int3
and
pop
sbb
add
push
add
push
sub
xchg
pop
lea
add
lahf
add
fwait
repz
jns
scas
xchg
leave
scas
mov
pop
stos
cmp
fsub
mov
jle
cld
inc
pushw
cmpsb
push
mov
xchg
imul
push
shrl
arpl
xor
mov
lea
enter
fistpll
cmp
pusha
ljmp
cmp
push
cmp
dec
push
scas
leave
sub
mov
cmpsl
jb
jb
push
push
mov
and
dec
xor
call
pop
xor
and
fxch
cmp
int3
sub
add
pop
les
pop
inc
sub
iret
fidivrl
mov
dec
or
inc
add
jno
sub
mov
rcrb
ret
es
mov
cmpb
adc
xchg
pop
dec
jge
mov
pop
jge
scas
or
dec
in
iret
dec
rol
and
push
shrb
outsb
dec
xchg
insl
push
imul
adcl
loopne
dec
adc
pop
enter
mov
xor
pop
idivl
dec
sub
add
mov
xlat
clc
loop
lahf
pop
mov
push
xor
xchg
je
xlat
imul
xorb
inc
inc
or
lods
aaa
cld
jns
and
rol
cmpl
mov
xor
ds
and
icebp
loope
data16
clc
jl
or
pop
add
in
hlt
and
push
inc
and
sbb
xor
mov
test
or
bound
add
sub
inc
jge
and
xchg
adc
movsl
add
flds
adc
mov
test
ficoml
mov
dec
les
dec
cmp
add
outsb
add
pop
dec
lea
and
movl
xor
adc
arpl
xchg
mov
mov
sahf
jmp
push
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
leave
leave
jl
or
sbb
mov
cld
pusha
cmpsl
and
clc
les
lods
cmp
xchg
adc
cmp
call
cld
int
jnp
xor
sbb
lods
pop
or
jnp
push
jmp
xor
mov
jmp
fldcw
dec
pop
cmp
mov
rolb
lahf
cmp
push
mov
dec
lods
daa
ret
push
fnstsw
cmpsl
loope
and
inc
imul
ds
in
jecxz
xor
sbb
dec
sbb
push
test
enter
in
popl
repz
sar
pushf
add
xchg
push
push
xchg
jne
mov
sbb
and
cwtl
jp
rclb
jnp
and
jno
lret
rcrl
mov
add
movups
ret
cmp
or
xchg
mov
sbb
xchg
int
sbb
lock
pop
xor
xchg
repnz
negb
jno
into
pop
insl
dec
leave
repz
nop
cmp
jmp
rorl
adc
push
repz
sub
or
mov
cwtl
cmp
push
push
pop
cli
mov
scas
inc
sbbl
pop
sub
test
sahf
add
jae
movsl
xchg
pop
rorl
mov
sbb
fsubs
dec
movsb
inc
shlb
jnp
stos
add
mov
xor
adc
mov
cmpsb
push
inc
stos
adc
inc
arpl
mov
les
xor
mov
jns
mov
scas
repz
pop
sti
imul
das
jg
add
push
das
push
scas
icebp
in
addr16
movsl
add
inc
jge
sbb
ja
pop
out
imul
add
fistpll
icebp
icebp
pop
js
lret
sub
and
add
popa
xchg
fucom
movsl
xchg
lods
ret
sbb
mov
rclb
mov
cmpsb
add
fists
nop
inc
imul
test
sbb
adc
xchg
ret
movsb
movsb
sarb
scas
inc
mov
fisttpll
fbstp
daa
fs
call
test
mov
pop
jno
pop
and
jmp
dec
sti
pop
xorl
inc
mov
inc
xlat
mov
dec
mov
shll
jge
mov
test
cmp
ficoml
push
push
fnsave
xchg
call
aaa
movsb
incb
movsb
xchg
mov
ds
aad
test
sbb
dec
pop
mov
dec
mov
insb
mov
jo
and
cmpb
mov
fwait
pop
jmp
push
fsubrp
and
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
xchg
push
stos
rolb
sbb
test
sbb
call
inc
pop
add
pop
push
ja
lods
arpl
sbb
jmp
push
leave
test
pop
fildl
mov
or
jecxz
push
mov
iret
inc
mov
push
inc
add
mov
mov
mov
mov
and
sbb
fistpll
aaa
scas
xchg
pop
and
lret
lea
push
divb
sub
add
lds
mov
jae
repnz
or
xchg
add
xor
shll
inc
xchg
or
repnz
sbbl
cltd
adc
mov
push
cmp
les
and
xorl
sbbl
ljmp
mov
xor
sub
filds
adc
dec
lahf
sahf
xchg
cs
gs
ret
cmp
pop
push
dec
jns
movsb
leave
mov
pop
push
push
arpl
bsr
adc
lcall
sbb
jbe
mov
cltd
dec
icebp
daa
lret
xchg
cmpsb
daa
fwait
lahf
into
jne
jno
ret
push
outsb
sub
mov
cmp
mov
cmp
add
push
fmull
and
scas
cmpsl
ja
push
push
fdivrs
out
jae
icebp
inc
adc
sbb
test
mov
and
mov
mov
adc
xor
xchg
pushf
mov
mov
xor
ss
push
ja
cmpsl
in
lahf
xchg
mov
pop
sahf
movsb
repz
ljmp
cmp
dec
imul
loopne
loope
or
ret
lods
mov
aas
lahf
mov
fnstsw
jmp
mov
xchg
push
or
pop
pop
lret
cwtl
insb
scas
jno
add
ss
insb
fldt
ret
pusha
mov
cwtl
and
fsubl
fidivrs
jecxz
out
pmaddwd
mov
ret
daa
add
lds
scas
ss
jnp
test
sbbl
int
pop
test
dec
mov
xchg
xor
in
pop
andb
mov
push
ret
fmulp
mov
sbb
mov
andb
int3
cmp
hlt
loopne
pop
push
adc
mov
or
or
add
popa
jae,pt
dec
ja
nop
cmpb
cmp
enter
arpl
or
rorl
pusha
dec
jb
testb
push
test
cmpsl
push
pushl
iret
xchg
jne
mov
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
cmp
jle
add
sbb
pop
sub
inc
arpl
dec
das
and
sub
push
mov
or
lea
dec
into
sub
mov
aam
xchg
mov
nop
les
push
pop
and
sub
add
addl
sub
shll
pop
mov
mov
inc
in
hlt
fldenv
xchg
push
scas
adc
jmp
or
pop
xor
aad
mov
pushf
jmp
sbb
bound
pop
adc
std
adc
pop
scas
push
imul
inc
ror
insl
sbb
mov
ficomps
insl
jnp
pop
adc
and
xchg
dec
and
xor
fwait
push
adc
or
add
sbb
pop
int
add
push
mov
xor
sbb
xchg
xor
dec
pop
dec
sbb
xchg
cmp
outsb
shll
jp
lret
in
mov
add
ljmp
andb
xchg
fld
loopne
mov
pushf
out
fcoms
jo
cmpsl
mov
push
test
add
cmp
dec
adc
mov
scas
lods
dec
sub
ret
imulb
xchg
iret
hlt
jnp
push
fstpt
cmpb
repnz
shr
dec
aad
pusha
mov
sbb
negb
mov
push
mov
aam
addr16
mov
sub
lret
out
clc
sbb
xchg
or
xchg
or
dec
mov
stos
hlt
fmull
jns
sbb
push
push
js
cli
fldenv
and
imul
sub
inc
mov
sbb
stos
lret
inc
cmp
pop
sbb
sub
mov
and
outsl
out
sub
test
sahf
dec
mov
jp
pop
fwait
lods
jnp
sbb
mov
les
xchg
sub
in
rcrl
mov
mov
push
hlt
inc
jmp
add
push
movsb
leave
mov
idiv
jecxz
bound
adc
lods
fimuls
jge,pn
mov
jb
dec
xchg
sahf
push
mull
xlat
xchg
movsb
imul
in
aam
ret
push
cmp
xchg
mov
and
mov
lds
cltd
jae
xor
adc
xchg
mov
push
and
popa
out
mov
pop
mov
fstps
in
test
mov
inc
lret
sbb
lret
xchg
in
sub
sub
ret
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
adc
jle
sti
sbb
test
sbb
xchg
and
xlat
ret
pop
and
in
push
xchg
sub
sub
adcl
inc
test
cmpsl
rorl
push
xor
mov
mov
or
ss
add
rolb
adc
push
lods
scas
mov
ds
dec
push
cwtl
cmpsl
inc
dec
jge
jle
xor
lret
sbb
adc
into
mov
jp
insl
jge
in
enter
in
lds
pushl
std
jmp
or
sub
cmpsb
pop
sbb
push
in
mov
jmp
push
mov
dec
lods
mov
mov
shr
mov
push
sti
xlat
dec
dec
popf
mov
push
fsubrs
inc
push
decl
inc
pop
inc
inc
push
hlt
nop
xchg
mov
imul
cltd
xchg
and
movsl
mov
push
mov
lods
stos
adc
loopne
xchg
mov
xor
inc
out
imull
xchg
imull
out
popa
lods
push
pop
pusha
pop
dec
jnp
push
mov
nop
jp
leave
cmpsb
vaddsubpd
xchg
ds
push
jno
mov
push
mov
sti
lret
fwait
daa
push
mov
push
jge
mov
push
jo
cld
test
je
mov
and
mov
hlt
push
cmp
fsts
push
jp
ss
inc
cmpsb
popf
loopne
bound
sbb
imul
in
mov
and
adc
mull
inc
out
mov
pop
sbb
dec
mov
jp
jno
xor
arpl
inc
out
mov
lods
ret
shll
and
out
cli
sub
mov
cltd
cmp
mov
xchg
insb
popa
aaa
mov
push
mov
pcmpeqb
push
stos
arpl
inc
push
dec
and
mov
pushf
inc
jge
mov
lahf
stc
and
fs
sub
or
ret
cmp
xor
flds
cmp
outsb
push
push
xchg
pop
jg
add
jns
sbb
push
jecxz
mov
lret
or
and
nop
int3
pop
jnp
xchg
fcmovb
mov
jb
lods
mov
pop
pop
imul
jl
jb
fldenv
pop
adcl
ror
sub
xchg
dec
insb
pop
xchg
int3
loopne
lods
mov
int
jmp
das
inc
cmpb
cmpsl
and
jle
adc
leave
jae
std
call
xchg
out
add
jle
dec
mov
test
and
mov
movsl
pop
lret
in
push
xchg
cli
pushw
xor
mov
sub
movl
movl
movl
movl
jmp
push
mov
fistpl
inc
test
jo
negl
sbb
pop
lock
inc
inc
mov
mov
cld
loopne
sub
fistl
data16
xchg
sti
ja
sahf
or
mov
jmp
es
js
mov
outsl
test
mov
jecxz
fs
sbb
xor
int
scas
aad
dec
push
dec
fs
xlat
or
fildl
out
popf
push
loop
sub
decb
inc
out
lods
adc
gs
sti
adc
pop
fdivs
mov
cmp
mov
mov
and
cmp
xlat
xchg
mov
pop
push
insl
scas
cmp
fwait
jns
jnp
sub
dec
jg
mov
in
xor
cltd
cmp
cmp
push
lcall
out
mov
lret
lret
mov
or
push
loopne
adc
adc
ds
out
or
jmp
sub
jg
cmp
xchg
or
jl
and
or
pop
pop
inc
push
sarb
in
mov
stos
es
mov
in
loope
mov
movsl
ljmp
jns
icebp
enter
adc
adc
out
lcall
test
out
call
add
pop
pop
mov
lea
sbb
sbb
jns
sbb
das
std
mov
frstor
ljmp
imul
int3
loope
mov
sub
in
jmp
ror
sbb
out
sub
push
jno
mov
mov
fcomi
add
xor
mov
sarb
shlb
xchg
or
addr16
xor
sub
adc
and
scas
test
sbb
dec
push
jle
xor
cltd
jmp
sbb
xor
jnp
insb
adc
mov
in
cs
and
dec
stc
push
cmp
add
push
mov
inc
cltd
loope
inc
out
adc
add
mov
into
dec
test
push
add
stc
out
lock
jle
add
sub
mov
mov
adc
pop
aas
xchg
and
orb
jecxz
scas
or
mov
sub
add
pusha
push
add
adc
imul
sbb
lods
push
jle
mov
pusha
xlat
aam
jmp
jb
sahf
mov
add
cwtl
leave
insl
lock
test
in
sub
insl
xor
movl
movl
jmp
aas
mov
mov
dec
mov
jg
adc
sbb
test
sbb
sub
push
mov
xchg
je
push
ret
gs
add
pushf
icebp
pop
dec
idivl
cmp
mov
jns
ret
push
pusha
add
push
fsubs
or
pop
into
std
or
pop
dec
fs
push
icebp
sub
jb
aaa
sub
jns
sbb
test
fistps
out
sbb
mov
gs
cmp
ret
enter
pop
sbb
pushf
ljmp
int3
lahf
push
loope
mov
jmp
mov
out
jae
dec
in
test
movsl
pop
rol
cmc
dec
shll
inc
jno
pushf
cltd
insb
mov
xor
leave
push
daa
or
sub
pop
incb
sbb
rcr
addr16
es
push
std
outsb
dec
xor
cmp
leave
or
push
test
xrelease
sub
push
dec
push
fs
or
rorb
popf
and
idivl
jne
cmp
and
dec
sbb
movsl
or
xor
add
js
push
mov
xchg
pop
xor
add
lahf
leave
mov
xor
enter
cltd
inc
or
out
xor
cmpsb
out
shrb
push
cli
lds
pop
mov
mov
mov
outsb
xor
lcall
sbb
and
cmpsl
jge
stos
pop
pop
idivb
pop
push
hlt
aam
cmp
movsl
mov
or
pushf
adc
pop
fnsave
sbb
enter
or
xor
add
or
sbb
shl
rcr
inc
lods
sbb
inc
lret
sti
push
push
mov
cmp
aam
or
xchg
mov
mov
sub
lahf
mov
adc
loope
push
inc
dec
stos
dec
mov
jb,pn
inc
mov
push
nop
cltd
lahf
jge
mov
call
cmpsl
loop
xor
out
mov
iret
or
jp
add
mov
dec
std
lock
ja
xor
lcall
add
and
jp
mov
nop
aaa
adc
jbe
dec
xchg
jg
pushf
ret
test
xchg
je
dec
inc
mov
mov
jge
cmpsb
dec
int
dec
push
pop
xor
xchg
push
stc
add
ficoml
or
dec
pop
add
negl
pop
sti
add
rcl
into
sbb
add
mov
pop
cmp
inc
mov
push
jge
ljmp
nop
or
imul
sub
es
int3
xor
iret
je
test
shlb
js
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
push
hlt
push
ljmp
ds
sub
int
dec
lret
inc
inc
cmpsb
stos
stos
fs
repz
fcomip
xor
lea
mov
stos
pusha
in
dec
ja
adc
mov
ror
fdivrs
notb
and
jae
hlt
sti
cmp
enter
pop
sub
ss
dec
push
ret
js
outsl
cmpsl
movsb
xchg
std
fcom
into
icebp
adc
test
push
mov
sbb
add
lahf
sub
dec
add
icebp
pusha
lcall
dec
cmp
push
mov
xchg
xor
sbbl
icebp
xchg
lahf
mov
and
mov
dec
mov
jmp
lea
nop
test
push
rolb
popf
loop
fists
jge
je
mov
mov
add
pop
aad
call
push
jle
adc
cmp
idivb
cmp
inc
mov
mov
mov
lahf
je
scas
cmp
mov
add
adc
pop
sbb
roll
pop
jp
int
mov
pop
cmpsl
mov
mov
cwtl
lock
roll
xor
rcll
cld
mov
ja
movsl
iret
in
mov
ja
push
dec
rcl
push
mov
test
pop
addb
outsb
mov
push
xor
js
jg
jae
jecxz
shlb
pushf
test
dec
xor
jo
mov
push
and
notl
mov
or
cltd
sbb
sub
push
rorb
xor
fbld
lahf
dec
push
dec
ret
mov
fmuls
sbb
xchg
and
cmp
cmp
lea
lds
fcomps
push
aad
or
data16
sbb
js
mov
jp
daa
inc
jnp
dec
jnp
cmp
sahf
push
or
jo
int3
mov
scas
addb
mov
xor
pop
addr16
push
mov
out
mov
pop
movsl
mov
sbb
push
cltd
cmpsb
push
inc
cs
xlat
aad
inc
and
cli
xlat
jecxz
mov
xlat
jo
ljmp
inc
or
xchg
cwtl
add
mov
mov
outsl
sbb
pop
div
insb
testb
xchg
lock
cmp
sarb
cmp
cmp
adc
jae
push
sbb
dec
dec
sbb
lock
pop
push
push
and
xor
mov
mov
cltd
test
stos
or
push
xor
jae
xor
test
lock
pop
icebp
cwtl
test
inc
sub
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
xor
xor
sbb
test
sbb
mov
mov
js
std
aad
sti
mov
jnp
mov
fisubs
inc
sti
push
scas
ret
dec
sub
shlb
mov
aaa
stos
dec
sbb
imul
mov
repz
jl
sub
lahf
lret
inc
xor
cmp
xchg
test
pop
bound
mov
ja
cld
in
in
fisubl
adc
pop
sub
adc
sbb
push
movsb
or
cmp
repnz
pop
loopne
cmpsb
pop
sbb
imul
scas
xor
sub
aaa
ret
jno
arpl
lods
xchg
repnz
cs
mov
jb
mov
and
jo
mov
ficoml
cmpsb
in
push
add
pop
and
hlt
rcl
insl
or
insl
push
pop
pop
cmpsl
xchg
icebp
fwait
cmpsl
mov
fs
or
ss
jge
mov
add
cmp
add
cltd
mov
sbb
dec
jb
iret
movsb
cwtl
loope
mov
les
mov
mov
jae
dec
sbb
out
push
push
outsl
int
fnstcw
xchg
cltd
cmp
sti
add
push
mov
and
pop
inc
shrl
pop
push
test
pop
dec
popa
ret
or
xchg
das
xchg
pop
cmc
stos
lods
jno
or
xchg
cmc
xchg
mov
int3
push
xor
fpatan
mov
xor
dec
call
aam
rolb
and
add
addr16
pushf
or
xchg
lea
jae
cmp
jle
push
mov
daa
mov
mov
in
mov
sub
addb
adc
in
push
les
scas
lock
xor
sub
jno
jne
push
lret
and
nop
sbb
mov
imul
inc
in
add
cmpsb
fxch
pop
notl
mov
inc
in
hlt
stc
xor
jmp
sub
cmc
mov
push
stos
test
insl
out
mov
outsb
push
scas
fmulp
rclb
popf
xchg
jns
aaa
js
jmp
push
dec
mov
fmull
or
adc
lods
lret
clc
pusha
and
subb
hlt
push
les
pop
scas
imul
cltd
pop
pop
jg
xor
dec
ret
lds
pop
pop
movsl
jmp
cmp
sub
scas
xchg
cwtl
push
loopne
jae
ds
ret
pop
mov
dec
mov
aaa
lret
adc
push
sarb
fimuls
lret
jle
aaa
icebp
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
pop
cmp
cld
pop
leave
mov
out
xor
in
test
mov
cmc
rclb
push
pop
mov
jne
ds
insb
or
push
xor
popf
int3
push
add
dec
pusha
add
and
jg
addr16
outsl
std
in
push
xchg
daa
push
leave
stos
pop
popa
jecxz
test
arpl
sbb
mov
push
ss
pop
mov
push
in
xchg
xlat
push
les
xchg
and
mov
repnz
push
dec
pop
and
sbb
or
repz
lret
sbb
dec
repz
inc
pushf
shlb
and
shrb
repnz
hlt
xchg
or
sub
jmp
dec
jb
sub
scas
mov
dec
popf
or
xchg
retw
dec
mov
clc
inc
add
adc
and
pop
arpl
in
repz
arpl
nop
out
xor
xorb
outsl
and
xchg
ret
aas
or
mov
sub
cmp
sub
test
les
adc
in
mov
add
js
scas
push
xor
cmp
jns
sbb
add
mov
into
dec
fcoml
jmp
jnp
insl
or
pop
push
movsl
push
or
sub
bnd
std
sbb
loopne
rorb
orb
jle
test
adc
test
sub
sub
sub
pop
cli
and
enter
mov
inc
cltd
insl
inc
mov
xchg
out
gs
sbb
adc
push
enter
cs
ds
std
inc
dec
push
xor
add
pop
lds
enter
jg
pushf
jbe
mov
dec
push
movsl
in
or
scas
mov
inc
mov
scas
adc
ret
or
jmp
and
and
fsubl
push
outsl
jg
jmp
push
push
out
fildll
ja
and
popf
lea
movsb
pushf
dec
mov
repz
scas
imul
adc
aam
xchg
mov
in
icebp
inc
outsb
data16
int3
ss
sbb
hlt
dec
push
xor
mov
dec
or
sub
fistpl
sahf
es
lcall
subb
lret
inc
inc
and
int3
jmp
and
fidivrs
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
dec
xor
sbb
adc
sbb
setge
repnz
xchg
jmp
inc
jp
or
arpl
or
add
pop
xor
mov
mov
testl
ret
mull
add
mov
rcrb
je
xor
stos
rclb
fists
pop
lahf
aad
cs
in
mov
cmp
xchg
jne
std
or
mov
ret
pop
xchg
mul
jnp
lcall
mov
dec
pop
outsb
sbb
out
ljmp
push
lret
sahf
sub
cmpsl
insb
pusha
mov
jo
push
cmp
lfs
mov
pop
ljmp
mov
call
loopne
cmp
xor
xchg
stos
push
int
sbb
fwait
lahf
cltd
xor
movsl
ds
sub
dec
push
push
push
mov
fisttpl
inc
push
mov
inc
and
in
lea
mov
lods
mov
add
inc
gs
mov
jp
pushf
insl
cli
push
dec
xchg
movw
test
outsb
cmp
cmp
adcl
push
ret
outsb
push
lock
in
mov
cmp
not
ja
mov
test
mov
cmpsl
in
pusha
push
mov
jns
lods
xchg
dec
xchg
or
inc
pop
push
xchg
in
movsl
sub
leave
xchg
xlat
xchg
mov
sar
pop
sbb
sub
and
add
test
push
cmp
push
movsb
je
aaa
cmp
pmaxub
nopl
xor
push
pop
mov
test
repz
add
out
inc
fcoml
mov
insl
and
lret
sub
incb
xchg
mov
inc
fadds
clc
mov
mov
movsl
sub
clc
loope
dec
out
mov
inc
mov
shl
cmp
pop
xor
or
mov
in
xchg
sahf
or
sub
lods
adc
pop
xchg
fisttps
jns
jp
inc
mov
pop
stos
lock
push
lds
add
and
mov
jmp
xchg
inc
xorl
cwtl
mov
jbe
inc
mov
cmpsl
ljmp
mov
push
adc
fs
std
in
xchg
cld
push
popf
xlat
and
loop
scas
aaa
cmp
xor
adc
sub
fdiv
xor
cltd
imul
jp
mov
sub
or
fdivr
cmpsb
sbb
pop
dec
loope
adc
mov
rorw
ds
in
popa
in
int
lea
pop
and
mov
inc
dec
jae
mov
shll
cs
or
scas
jle
lock
mov
gs
adc
jl
or
xchg
fisubrs
mov
arpl
inc
bound
call
mov
or
or
loop
adc
cmp
mov
into
lds
out
adc
dec
jg
jnp
mov
outsl
in
roll
mov
cmpsb
repnz
adc
aad
push
jno
nop
cs
rcrb
mov
xchg
mov
scas
sub
jbe
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
ss
sbb
adc
sbb
cmpsb
xor
lahf
into
fistpl
push
aam
aad
add
scas
mov
mov
std
ljmp
fistps
push
pushf
xchg
cltd
ret
push
rcl
in
xor
cmp
push
bound
fstps
arpl
test
jmp
pusha
pop
dec
mov
dec
push
nop
rcr
or
xchg
out
mov
sbb
mulb
cmp
lcall
push
sub
or
cmp
inc
adc
pop
xlat
jo
pop
lahf
mov
rcrb
cmp
sbb
cmpsb
out
add
in
in
daa
cmpb
push
push
pop
inc
mov
push
sub
cmp
pop
iret
pop
dec
aam
in
and
pushf
push
xchg
outsl
fimuls
test
fisubs
jb
jecxz
repnz
lea
mov
push
lahf
testl
sub
popf
push
sub
popl
adc
dec
pop
jle
add
cs
cmp
jle
outsl
mov
stos
nop
scas
push
pop
sub
xchg
aas
loope
or
loope
scas
cs
or
aas
pop
xchg
xchg
and
push
or
leave
dec
sbb
loope
pop
push
test
pop
je
xchg
pop
js
mov
in
lock
xor
xor
lods
push
outsl
shl
testl
mov
and
je
xchg
popf
push
jae
push
push
xor
cmp
push
or
sub
lret
mov
repnz
enter
lods
movsb
dec
sub
mov
add
jge
jnp
lods
xor
cmpsb
loope
jb
lds
cmp
into
in
ret
aam
test
jecxz
aaa
xchg
js
jbe
adc
stc
leave
jnp
xchg
jne
jp
mov
dec
inc
popa
jp
add
xor
cmp
scas
in
filds
in
jecxz
je
push
lods
push
int
loope
repnz
out
dec
cmp
fidivrl
ds
and
incl
roll
daa
xchg
testb
mov
push
sbb
add
psraw
sbb
push
je
and
rorb
std
cwtl
mov
enter
cmp
sub
pop
lret
mov
divb
jp
es
or
call
mov
pop
into
pop
dec
mov
push
add
andb
hlt
cld
jo
test
fdivrl
es
lods
sbb
jge
and
or
inc
mov
in
cli
jae
xor
dec
js
cmp
addl
cmpsl
mov
iret
push
testb
xchg
sub
add
cmp
adc
insl
ja
pushf
sub
dec
lea
clc
cli
xor
loopne
into
daa
gs
repnz
std
mov
jmp
movsl
push
xchg
xor
clc
neg
stos
jo
mov
pop
in
bound
mov
sub
jnp
in
dec
xchg
adcl
sbb
mov
or
lods
ds
cli
pop
mov
les
and
add
sub
pop
mov
sub
fdivrp
cmp
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
push
repz
loopne
insb
movsl
aad
addr16
fwait
inc
push
mov
mov
mov
int3
test
je
jg
test
mov
filds
mov
popa
pop
pop
jle
mov
cld
push
cmp
ret
fnsave
pop
mov
mov
repz
bound
xchg
inc
in
out
push
in
cli
stc
adc
adcb
adc
push
sbb
jl
ret
das
cmc
mov
fnsave
rcrb
cmp
mov
xchg
imul
xchg
outsb
stc
push
aam
enter
outsl
mov
aaa
ljmp
sbb
mulb
pushf
mov
mov
pop
pop
xor
fs
outsl
int3
sbb
push
pop
lcall
std
loopne
push
addr16
leave
packssdw
stc
pop
pop
mov
cwtl
or
cmp
dec
adc
pop
cmpsb
xchg
inc
sbb
mov
mov
fidivrs
fistps
call
push
fnstsw
cli
cmp
xchg
jl
fidivrs
and
xchg
inc
fs
mov
inc
adc
data16
stos
lods
mov
insb
and
lret
lcall
xchg
add
aad
xchg
dec
cmp
inc
mov
mov
sbbb
mov
fimuls
or
cmc
pop
xchg
cmpsb
sub
scas
push
ja
fsubr
xor
inc
xchg
xchg
incl
push
pop
out
mov
pop
sub
js
mov
mov
into
mov
movsb
in
xlat
mov
mov
shlb
adc
mov
in
sub
push
inc
xchg
nop
sub
jg
scas
xlat
add
mov
lea
mov
xchg
sbb
mov
cli
sub
out
or
mov
jp
into
fs
ljmp
push
pop
xor
adc
test
cmpsb
push
in
test
cmpsl
mov
sbb
adc
adc
cmpsl
jg
loope
jns
popf
xchg
data16
fsubs
sbbb
jp
shl
sub
dec
rcrb
cmp
xor
mov
ret
imul
ds
lock
sbb
outsb
inc
sahf
stc
jp
add
in
dec
bound
in
xor
mov
test
cltd
xor
mov
popf
fcoms
jne
mov
push
scas
pushf
repz
loop
jle
mov
mov
mull
lahf
sti
add
cwtl
cmp
jnp
mov
push
addr16
adc
xchg
adc
push
sub
sub
repnz
sub
ds
push
xor
sbb
xor
jl
xchg
jb
leave
pop
push
loopne
or
lods
xchg
adc
inc
lret
push
arpl
xchg
dec
add
cmp
adc
or
mov
inc
add
lds
jge
cmp
sub
jge
movsl
push
stos
add
push
cs
icebp
mov
pop
es
fs
xchg
xor
stos
xchg
cmp
sbb
cltd
adc
enter
mov
xor
not
adc
adc
std
or
enter
xlat
inc
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
xor
mov
sbb
adc
sbb
add
sub
cmp
mov
iret
fsqrt
aaa
mov
pop
xor
add
sbb
mov
test
mov
add
and
fcomip
xchg
scas
cmp
xchg
mov
push
out
sub
pop
aad
out
insb
mov
cpuid
add
adc
cmp
rcll
std
jecxz
enter
ljmp
xchg
pop
loop
add
dec
loopne
test
cmp
sahf
clc
jo
or
mov
jo
std
lcall
sbb
push
sub
mov
or
jle
popf
push
stos
inc
fwait
in
jae
mov
xor
ja
cmpxchg
dec
shll
adc
mov
idiv
inc
sub
jbe
cmp
adc
cmpsl
adcb
insl
pop
aad
jns
add
lock
or
ljmp
lods
cmp
fcmovnb
mov
rcrb
repz
ret
fdivs
mov
bound
adc
clc
push
mov
lret
iret
mov
ss
pop
aad
push
dec
rorb
imul
shr
stc
xchg
xchg
and
pop
outsl
inc
ficoms
jnp
or
and
cltd
cmpsb
add
mov
ljmp
xchg
out
insb
xor
mov
mov
in
aam
pop
mov
out
adc
xor
movsl
cmp
push
sbb
adc
xorb
and
je
ret
pop
push
loopne
mov
push
push
xor
push
nop
fisubrs
lea
mov
xchg
cmpsl
sbb
cmp
add
orl
test
lret
and
shll
lahf
xchg
xor
inc
pop
and
jecxz
push
adc
ds
lods
cmp
mov
arpl
mov
mov
xor
xchg
jnp
insb
xchg
mov
mov
or
loopne
lock
xor
lods
mov
xchg
pushl
and
xor
test
mov
sub
enter
or
add
bound
jo
bound
sbb
mov
push
stos
pushf
lea
pop
push
sub
and
popa
xor
jle
scas
lea
call
cwtl
adc
inc
popa
add
test
sbbb
jns
sub
dec
pop
inc
mov
push
pop
ds
mov
js
or
jge
and
mov
jecxz
mov
add
xchg
xor
inc
push
fsubp
xor
lods
xor
mov
lods
mov
pop
mov
addr16
xchg
into
mov
sub
pop
rcrb
ret
and
movsb
push
pop
cld
fiadds
daa
stos
arpl
jbe
xchg
mov
or
fwait
shrb
popa
mov
and
sbb
xchg
cmpsl
cltd
sbb
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
adc
jo
mov
sbb
mov
push
inc
or
add
xchg
xor
mov
out
pxor
add
adc
filds
cmpsl
fdivrl
test
icebp
mov
lret
dec
sbb
ss
js
mov
xchg
imul
pop
mov
addr16
lea
mov
push
adc
leave
lahf
cmp
pop
xor
mov
out
mov
inc
sbb
pop
mov
scas
loopne
imul
mov
fistl
xor
cmpsl
sarb
sti
mov
cltd
or
add
or
repz
adc
pushf
xchg
repnz
fs
cmp
sub
mov
jl
movq
xchg
jge
scas
and
mov
jae
out
push
int3
addl
repnz
pusha
or
dec
icebp
lea
lret
nop
popf
and
cwtl
dec
add
out
inc
adc
test
jl
cmova
push
lcall
cmp
icebp
jo
xorl
test
shll
into
cmp
rcll
shl
test
movsb
std
testb
add
mov
inc
cli
dec
dec
jmpw
push
xchg
push
pushf
pop
enter
dec
add
adc
out
jno
sub
xor
cli
fwait
cmp
sbb
push
stos
adc
lcall
dec
notb
mov
outsl
mov
les
icebp
fildl
out
xchg
jp
and
fwait
mov
imul
inc
lret
shlb
push
mov
call
jecxz
push
sbbb
xor
jmp
adc
imul
mov
inc
out
fs
or
or
jno
or
cmp
in
loop
cwtl
xor
and
insb
sbb
cltd
je
fldcw
gs
mul
or
fisubl
test
aas
jbe
push
mov
xor
popf
test
mov
stos
mov
sub
mov
dec
xchg
xor
stc
lcall
out
mov
dec
cltd
jecxz
sub
or
jg
addl
inc
loopne
jl
or
jecxz
cld
xchg
xchg
filds
pop
xchg
fwait
add
imul
xor
push
int
push
and
in
and
lret
out
pusha
repnz
adc
mov
pusha
sub
inc
push
test
scas
aam
mov
push
rorl
or
adc
xchg
loope
mov
add
stos
outsb
sub
mov
adc
mov
dec
mov
std
dec
aaa
cmpsl
dec
aad
mov
jge
cld
arpl
inc
sub
xor
push
aam
popf
sub
push
pop
inc
pop
loop
inc
rol
cmp
adc
nop
dec
loopne
dec
data16
mov
add
cs
sbb
jecxz
adc
mov
jo
into
js
sbb
testl
nop
lock
aad
ljmp
jae
sbb
push
pop
pop
jns
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
imul
adc
sbb
cltd
mov
stos
mov
dec
fidivl
jbe
cmp
lods
aam
ja
sub
sar
les
mov
popa
pop
push
ds
mov
imul
mov
test
push
daa
ret
xchg
mov
lods
test
scas
lock
sub
inc
inc
sbb
orb
ret
jg
lea
sti
pop
fistl
pushf
lock
or
pop
mov
mov
dec
jecxz
sub
pop
std
dec
scas
cmp
fnstsw
mov
add
xchg
or
or
inc
xchg
decb
test
xor
jmp
call
push
repz
lock
sbb
mov
ret
out
adc
arpl
mov
jge
mov
mov
jg
sub
pushl
jnp
repnz
pop
dec
pop
stc
in
mov
daa
cltd
and
shll
fcmovnbe
fisubl
out
cmp
push
scas
or
out
sub
xlat
shrb
adc
mov
daa
mov
clc
stc
leave
test
cwtl
sbb
aaa
fstps
sub
mull
mov
dec
ret
cld
and
call
in
das
xchg
lds
adc
inc
push
into
popa
loopne
add
push
mov
fistl
lcall
mov
cltd
dec
outsl
nop
cli
inc
lods
mov
shl
jno
dec
mov
pop
into
aas
loop
and
xchg
cs
pop
pop
xor
or
out
mov
test
insb
pop
mov
cmp
fdivrl
fldcw
mov
imul
cmp
push
mov
ficoms
inc
das
rclb
test
jnp
daa
pop
dec
js
adc
or
or
sbb
mov
lret
pop
and
nop
lcall
sub
pusha
cmp
push
xor
pop
mov
adc
sub
call
fdivp
shl
lahf
loope
shl
push
pop
xchg
mov
mov
push
iret
insb
hlt
add
inc
jbe
jae
xchg
fdivrl
stos
outsb
cmp
add
push
cmp
imul
mov
jbe
fisubrs
xor
jmp
mov
jecxz
and
xor
mov
and
xchg
neg
add
jle
addr16
jb
imull
lds
stos
adc
mov
push
mov
insb
imul
cs
cmp
cltd
inc
je
dec
or
dec
push
stos
icebp
popa
fisttpll
or
mov
add
mov
jg
pushf
mov
ds
mov
addr16
mov
mov
jecxz
int
push
jo
jge
jns
lcall
xchg
icebp
shrb
add
jp
cld
sub
mov
test
mov
dec
rcrl
adc
loope
push
mov
pop
insl
faddp
test
into
sub
mov
pop
fldln2
test
mov
xchg
jmp
jg
mov
int
adc
jl
mov
dec
or
cmp
xchg
or
inc
sbb
add
cmpsb
pop
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
jp
jl
mov
sbb
adc
sbb
dec
sbb
dec
inc
jp
andb
out
push
mov
inc
push
repnz
jl
mov
cmp
or
mov
or
cmp
clc
sub
in
and
xchg
imul
xchg
pop
arpl
imul
adc
pop
je
add
xor
mov
cmp
jo
dec
adc
cwtl
test
nop
shlb
inc
push
push
sti
insb
shl
mov
cmpsl
pop
mov
shlb
and
mov
jbe
sahf
push
inc
lods
daa
jbe
fwait
clc
xor
and
lahf
push
jae
subl
push
retw
mov
push
dec
jo
xchg
add
sub
lret
rclb
mov
xchg
cli
dec
scas
xchg
inc
pushw
fsubl
pop
sub
popa
bound
sbb
sub
dec
fwait
jg
mov
dec
cmp
sbb
popa
mov
jle
sub
or
add
cmp
jecxz
nop
pop
mov
pop
into
sbb
dec
rcr
call
mov
leave
cmp
xchg
mov
or
and
pop
mov
or
std
test
in
je
jae
dec
sbb
loop
dec
inc
insl
pop
cmpsl
scas
lods
insl
push
pop
sub
mov
or
lods
out
and
sbbb
into
cmp
ljmp
or
dec
enter
mov
xchg
insb
movsl
and
rorl
mov
add
mov
mov
lret
out
shll
lcall
mov
mov
and
popf
jp
stos
out
icebp
int
push
and
mov
outsl
leave
mulb
rolb
adc
pop
push
push
jg
pop
test
mov
push
les
rclb
xor
nop
je
cmp
out
xor
adc
xchg
lods
ret
add
mov
fwait
test
nop/reserved
scas
lcallw
sub
nop
mov
int
xor
loop
inc
jmp
dec
and
jle
test
test
js
movsb
ljmp
mov
pushf
dec
mov
inc
lds
lea
mov
or
jmp
xchg
inc
into
cld
dec
adc
les
add
cltd
xchg
mov
testb
int3
lahf
mov
jns
lods
sub
into
jnp
test
aaa
fistpl
dec
adc
aam
out
sti
fisttps
fldt
test
aam
mov
js
cmp
sarb
pop
cmpsl
aam
xor
andb
mov
cltd
cmp
sbb
cltd
jne
faddl
push
call
mov
mov
sub
jns
adc
pop
rorb
jge
xor
cmp
and
negl
movsl
mov
and
cmp
notb
cmp
dec
in
mov
movsl
es
xchg
mov
sub
icebp
xchg
call
mov
adc
jo
or
fists
pusha
mov
scas
sbb
nop
xor
xor
outsb
popf
pop
push
lret
cmpb
sbb
pop
test
nop
push
inc
sbb
data16
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
xor
stos
sbb
test
mov
push
xorb
or
hlt
cs
test
lods
inc
outsl
push
adc
push
out
push
and
es
pusha
std
insb
cmpsb
dec
add
imul
jne
pop
sahf
sub
push
mov
sbbl
mov
notl
pop
add
test
cmpsb
adcl
imull
xchg
mov
inc
out
pop
popa
mov
push
fwait
mov
roll
push
fnstcw
add
ret
gs
mov
adc
pop
sbb
pop
rolb
cs
stos
add
fldcw
push
inc
enter
mov
sub
aaa
push
in
xchg
ss
movsl
leave
in
in
pop
pop
adc
dec
mov
roll
ja
mov
and
out
lret
call
inc
mov
lcall
jmp
iret
lret
pop
js
cmp
les
out
pop
ss
xor
rcr
xchg
inc
push
jb
out
sbb
orl
test
push
mov
mov
cmp
cmc
pop
pop
adc
js
jmp
cld
mov
lods
xor
je
pop
mov
stc
imul
xchg
and
xchg
mov
out
frstor
stos
push
dec
xchg
popa
bnd
insb
fcoml
shlb
pop
sti
jle
fwait
dec
pop
xorl
dec
pop
insl
gs
dec
imul
enter
jne
add
loopne
sub
int
jns
adc
lret
push
mov
jbe
xchg
fwait
rcll
mov
sbb
dec
xor
and
xchg
out
mov
js
imul
aad
ffree
shr
pop
shll
or
call
adc
and
rcrl
test
pusha
cld
jo
xchg
mov
daa
mov
ss
add
out
adc
iretw
or
add
sbb
popf
inc
flds
jbe
inc
test
imul
dec
and
rclb
mov
or
jle
filds
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
push
sub
mov
in
dec
fwait
cwtl
lea
ret
imul
jns
clc
int3
jmp
sub
push
aam
out
add
xchg
push
addb
dec
leave
ja
in
pop
sbb
sbb
mov
fists
push
or
fnstsw
test
jle
adc
xchg
dec
push
popa
dec
fstl
jb
cmp
sub
inc
lods
aas
outsl
into
push
data16
icebp
xor
mov
cs
mov
pop
rcl
ja
dec
int
test
rcl
xchg
jle
rcll
addr16
hlt
xorl
out
add
aam
mov
movsl
mov
mov
lods
call
stos
sarl
dec
loope
jno
in
push
fs
lahf
push
or
cld
mov
jae
out
dec
xchg
int3
jo
cltd
test
lock
je
repz
push
aad
mov
dec
out
rcll
pop
push
or
push
jp
pop
pop
mov
cmpsl
add
pop
fnstsw
sarb
sub
aas
push
push
push
dec
sarl
sbb
dec
cmp
mov
cmp
mov
cmp
stc
add
into
shrb
or
lahf
or
nop
rcr
ss
push
inc
xchg
popa
mov
mov
or
cmp
leave
and
add
cmp
popf
mov
mov
inc
bnd
sbb
and
fbstp
cmp
dec
int
push
les
dec
inc
mov
mov
mov
and
js
jmp
sub
stos
pushf
push
scas
push
leave
jge
jg
xchg
pop
sub
fmull
repz
fmull
and
mov
popf
add
dec
stos
ret
sbb
push
icebp
add
or
inc
sbb
les
sub
jbe
adc
sbb
lods
popf
daa
pop
and
push
orl
xchg
mov
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
or
insl
mov
mov
sbb
mov
inc
or
jns
jb
test
xor
test
push
ret
mov
out
int3
stos
sbb
movsb
bound
push
cmp
xor
jno
cmpsl
outsb
icebp
or
enter
ret
pop
mov
inc
enter
jecxz
sbb
inc
dec
je
jbe
add
fwait
lret
cmp
mov
ljmp
xorl
xchg
ficoml
sbbl
imul
sahf
enter
mov
jne
cmp
xchg
aaa
jns
shr
sub
xchg
hlt
mov
nop
fwait
jo
nop
lock
mov
xor
mov
xor
sub
cmpsb
xchg
scas
inc
xor
adc
sub
xchg
dec
inc
clc
adc
enter
test
push
inc
nop
in
test
xlat
div
dec
int3
fiaddl
cmp
pop
je
lret
pop
mov
cmp
dec
js
inc
pop
enter
aaa
push
out
xchg
iret
iret
mov
aaa
pop
stc
fsubs
sbb
add
outsb
jl
inc
cmp
je
fcompl
enter
push
push
mov
sub
stos
sub
dec
fadd
jmp
loope
popa
dec
je
pop
enter
cltd
push
and
mov
loope
adc
stc
mov
xor
ja
xchg
or
mov
pop
lret
adc
arpl
pop
fldenv
stc
ss
inc
and
dec
pop
out
test
xlat
mov
rcl
addb
out
xlat
pop
lahf
stos
add
and
sbb
fwait
jno
fdivrs
mov
adc
mov
inc
testl
clc
call
fisubrs
adc
lds
jl
fisttpl
cli
js
or
xor
push
push
aaa
ds
repnz
mov
cmpsl
sbb
pop
pop
pusha
jle
test
mov
or
sbb
push
cmpsl
jbe
sub
scas
jg
pop
lret
mov
movaps
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
mov
jl
pushf
sbb
test
pop
loopne
out
add
cmp
adc
mov
push
scas
inc
sbb
jmp
push
inc
outsb
fnsave
xchg
xor
dec
jb
xor
xor
dec
or
xor
lods
es
ret
jecxz
fmuls
imul
mov
loope
mov
xchg
test
push
leave
or
mov
jecxz
adc
pop
pop
jnp
out
mov
and
jge
mov
outsl
mov
in
ret
fcoms
sub
or
out
leave
addl
in
ss
aam
mov
icebp
lea
rorl
jle
divl
jg
cltd
or
mov
mov
mov
test
and
pushf
ret
rol
lret
stos
inc
out
imul
std
fmull
imul
je
popf
mov
js
cmpsb
cmp
out
mov
inc
pop
scas
push
cmp
pop
xchg
xor
insb
ja
inc
clc
fsubl
loop
cwtl
pop
add
call
bound
jl
arpl
mov
iret
ret
daa
bound
jmp
daa
aas
xchg
inc
cli
add
sub
mov
mov
pop
jle
xchg
test
dec
xor
repnz
jecxz
cmpsl
pop
cmp
and
adc
insb
lret
mov
or
std
loope
cld
jne
idivl
push
xor
inc
cmpl
sbb
sbb
aaa
iret
xor
dec
mov
jl,pn
inc
and
iret
mov
adc
les
testl
xlat
push
fwait
lea
sbbb
push
xorb
push
jno
loop
sbb
xchg
xchg
pushf
imul
dec
and
xchg
mov
loop
outsl
mov
ljmp
mov
add
push
imul
inc
adc
aas
popf
cmp
stc
lds
out
fnstenv
push
arpl
lods
and
adc
dec
aaa
rolb
roll
rorb
lcall
cli
lds
insl
int3
pop
ss
cmp
cmc
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
xchg
lahf
jo
cwtl
sbb
test
cmc
xor
shlb
ds
jo
popf
imul
mov
cmc
xchg
adc
cmp
les
dec
inc
xor
adcb
mov
enter
ficoml
inc
sbb
jl
arpl
loop
into
mov
cli
dec
sbb
test
cmp
outsl
rolb
xlat
inc
ficoml
insl
je
and
or
mov
adc
ljmp
mov
lds
iret
mov
ficoml
push
jae
xchg
out
hlt
fwait
xchg
or
roll
mov
mov
xchg
lods
xchg
sbb
xchg
mov
scas
mov
jecxz
adc
mov
xchg
jl
std
mov
lret
jno
mov
cmpsb
jbe
fidivs
scas
repz
add
or
js
mov
fstpt
cltd
imul
xor
jle
push
sarl
push
or
lock
aam
fcomps
sub
pop
mov
jge
xchg
ficoml
sahf
fbstp
xchg
movsl
add
mov
sbb
daa
xchg
pop
subl
xchg
divl
inc
push
scas
inc
mov
test
or
stos
xor
in
adc
xchg
int3
xchg
je,pn
mov
mov
pop
push
cmp
popf
cli
xchg
aam
jp
mov
cmc
sbb
shlb
lret
mov
sub
pop
lds
xchg
push
or
dec
xor
imul
leave
adc
in
push
lret
mov
mov
movb
jo
dec
negl
lret
push
shlb
dec
mov
inc
rcll
rol
clc
dec
mov
add
bnd
rorl
enter
mov
sub
jmp
addr16
int
lods
sbb
push
xchg
push
ret
mov
negl
jecxz
addb
aad
mov
aam
and
bound
push
pop
in
pop
mov
add
and
add
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
mov
sbb
sub
in
mov
mov
push
adc
mov
mov
rclb
inc
fidivs
pop
orb
arpl
je
fsubrl
adc
inc
adc
in
jo
les
dec
mov
shrl
pop
movsb
xchg
leave
rcrb
cwtl
xchg
sahf
test
das
dec
jg
jae
sbb
sub
sub
daa
loopne
sub
es
pop
es
inc
ret
mov
push
adcb
imul
imul
add
jmp
mov
popa
loopne
mov
or
sub
das
fisubs
xchg
rcrl
pusha
out
sub
and
into
inc
lahf
pusha
mov
icebp
sub
mov
sub
leave
jno
cmp
andl
mov
add
mov
test
icebp
sbb
dec
mov
push
nop
sub
jg
dec
mov
ja
pushf
popa
imul
cltd
dec
sahf
arpl
repz
xor
mov
add
or
mov
xor
ret
in
xor
mov
mov
and
arpl
repz
pushf
aas
popf
mov
sub
ljmp
ret
out
ret
leave
cmp
sub
add
mov
dec
daa
xor
mov
outsl
into
aas
pop
cmp
xor
jbe
and
insb
cmp
cs
movsl
and
out
inc
cmp
daa
cwtl
and
xor
js
sub
scas
rorb
js
mov
cs
sbb
and
xchg
dec
faddl
imul
inc
fcoms
fwait
adc
add
rorl
mov
outsl
push
movsb
jp
xadd
jmp
fsubr
stos
ljmp
mov
dec
icebp
push
mov
sbb
mov
cmp
adc
repnz
fildl
xor
pop
pop
daa
push
push
pop
jmp
hlt
insl
push
repnz
into
sbb
shrb
push
or
inc
shlb
fbstp
mov
xor
or
jmp
push
and
mov
push
nop
sbb
test
testl
mov
imul
fldenv
xor
add
loope
inc
cltd
adc
sbb
test
stc
sahf
cmp
clc
mov
repnz
cltd
cmpsb
push
jmp
push
mov
fsubrl
adc
fldt
mov
jne
jbe
pop
cmp
movsb
jnp
into
or
add
push
out
and
fwait
jmp
out
hlt
stos
and
lahf
sbb
frstor
stos
jbe
add
imul
repz
fimull
mov
imul
stc
push
cmpsl
pop
aam
jmp
pop
into
pushf
adc
mov
pop
icebp
dec
int3
fsts
or
xchg
cwtl
pop
ds
jb
dec
and
jl
sbb
fwait
mov
jae
sbb
negl
mov
sbb
mov
jae
cs
cwtl
clc
push
ja
pop
mov
pop
adc
mov
and
cmp
dec
iret
add
sub
cmp
xor
xchg
xchg
add
cmpl
xlat
xchg
std
adc
sti
fcomps
mov
sbb
or
xor
push
dec
or
fisttps
out
inc
sahf
xorb
rol
in
xchg
cs
cwtl
hlt
mov
clc
xor
out
push
push
push
enter
and
push
sti
adc
fsubrl
and
mov
movsl
lret
ret
mov
scas
inc
lods
fwait
lcall
sub
jge
inc
xchg
mov
mov
testb
sub
stc
dec
mov
mov
mov
sbbb
ja
addr16
push
sbb
inc
notl
sahf
sti
xor
push
add
icebp
fimuls
jge
pop
divb
mov
or
roll
sti
pop
cmp
inc
cli
pop
and
shrb
xchg
enter
popf
frstor
lahf
inc
outsb
jnp
enter
rorb
loop
and
loopne
jnp
xlat
addb
cmp
inc
mov
test
xor
dec
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
cmp
test
mov
mov
aad
jne
fs
cmp
pop
mov
jle
cmp
into
dec
inc
dec
mov
pushf
orl
pop
mov
xchg
andps
sbb
push
adc
jbe
push
lcall
in
dec
ss
lds
loope
clc
mov
mov
or
nop
clc
mov
pop
mov
lret
mov
or
jae
add
in
lahf
mov
bound
andb
loope
mov
mov
push
sbb
pop
dec
dec
cmpsl
mov
ss
inc
bound
leave
adc
mov
sub
cmp
mov
jae
ds
sbb
and
push
jge
repz
repz
jne
test
jo
enter
ret
ljmp
inc
cmp
out
or
sub
outsl
movsl
adc
int
jae
push
popf
imul
cmpsl
jp
cli
in
push
dec
or
xchg
mov
jge
xorl
xchg
xor
cmpsl
std
or
add
mov
and
imul
fists
xadd
mov
mov
xchg
repnz
test
sbb
sub
jne
dec
lret
or
pop
sbb
add
iret
xchg
and
sbb
clc
mov
insl
dec
aad
cmp
sbb
xchg
sbbb
mov
cmp
adc
add
aad
test
int
mov
mov
jle
add
out
test
lret
repz
loopne
dec
jle
movsb
sbb
pop
fwait
xchg
adc
outsl
xchg
inc
aam
push
imulb
stc
popf
cwtl
repnz
dec
inc
fistl
ja
adc
push
adc
loopne
mov
nop
push
jecxz
pop
subl
ds
stos
test
aad
dec
daa
in
pop
mov
loopne
stc
sahf
movl
push
mov
inc
shll
into
mov
add
popl
adc
sti
or
or
lcall
mov
xor
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
xchg
sbb
sbb
shlb
fs
pop
cmp
xchg
push
shll
and
in
mov
push
mov
add
cmp
add
inc
mov
scas
fldenv
repnz
dec
imul
lods
xchg
ror
add
cmc
cmp
lret
adc
aam
mov
cmp
outsb
dec
push
adc
and
add
jmp
jnp
adc
sub
pop
pop
mov
mov
xor
add
repz
mov
cmp
insb
int
cmp
mov
inc
mov
iret
mov
add
or
xor
cmp
add
adc
sub
cli
lods
sti
in
adc
test
stc
jp
ret
outsb
sub
or
int
xchg
stc
and
mov
dec
ds
xchg
xor
sbb
or
inc
inc
clc
mov
mov
xlat
jge
pop
loope
cmp
loop
xor
shll
sub
cmp
scas
fiadds
leave
mov
cmpsl
aaa
xchg
scas
sub
stos
js
imul
push
stc
mov
jl
add
hlt
jecxz
scas
call
clc
sahf
xchg
filds
ret
xlat
insl
adc
push
add
fistpl
lcall
flds
outsl
cmp
out
cs
mov
ficoml
movsb
sti
fisttpll
adc
pop
mov
xor
pop
or
pop
ror
jl
mov
and
cmpsl
dec
cmc
aad
mov
enter
loop
sbb
lret
jmp
mov
lret
fsub
jmp
sbb
xlat
xchg
mov
push
mov
xchg
js
clc
movl
cmp
jl
cs
jmp
xor
sti
loope
into
sti
mov
jno
lahf
and
xor
test
fwait
cmpsb
outsb
sub
sbb
clc
lcall
jnp
aaa
mov
mov
cmp
inc
jle
in
mov
jb
bound
bound
cmp
movsl
addr16
sbb
ja
out
rcl
pop
popf
sub
and
cmp
jno
and
add
xchg
cli
fwait
mov
sbbb
mov
in
mov
jb
loope
aam
adc
add
or
or
lods
daa
mov
int
or
xchg
and
loop
cli
add
lcall
popa
jg
aas
jb
mov
push
dec
xor
push
sub
movsl
lods
int3
in
aas
xor
fs
mov
cltd
je
inc
sarb
and
xor
pushf
fcompl
pop
cmp
cmp
push
push
mov
adc
outsl
scas
mov
jmp
push
in
iret
repz
sbb
repnz
pop
adc
cmpsl
xchg
add
rcr
lcall
jge
inc
adc
add
adc
mov
cmpsl
lea
sbb
xchg
rclb
push
cmp
jae
pop
mov
jo
cmp
into
test
rcl
pop
lea
push
cmp
test
mov
insb
add
add
jne
inc
sbb
pop
clc
push
arpl
adc
sbb
push
inc
filds
xor
push
ja
dec
jecxz
inc
sub
and
ss
sub
mov
fbld
and
aaa
lcall
jmp
and
dec
or
rclb
cld
pop
or
add
or
push
repz
cmpsl
aaa
in
jb
dec
jno
ret
jmp
push
bound
mov
cmp
in
xchg
xchg
xor
sbb
sbb
jl
cmpsb
sbb
and
sahf
aad
int
inc
xor
inc
dec
popf
push
jbe
push
js
repnz
jl
push
ljmp
clc
adc
pop
loope
and
lea
cmp
add
xor
pop
ret
dec
ljmp
int
mov
popa
in
jno
mov
mov
js
xlat
sub
push
sub
mov
mov
insb
nop
out
mov
scas
imul
push
inc
mov
lods
xchg
jl
sub
xchg
andl
movsb
mov
mov
jp
notl
and
clc
frstor
movd
sbb
adc
out
inc
lret
or
add
outsb
roll
das
fcmovnbe
cwtl
push
pop
adc
jge
push
pushf
icebp
int
daa
adc
cmp
push
outsl
enter
lcall
rolb
icebp
fdivs
jo
mov
and
cwtl
testb
mov
and
test
aad
cmpsb
adc
jne
push
xor
fldcw
insl
lret
mov
das
push
sbb
inc
lret
cs
pop
xchg
insl
loop
push
daa
stos
jecxz
mov
and
in
add
fs
dec
cmp
aad
sbb
mov
stc
cmpsl
mov
sub
add
repz
test
pushf
push
lea
push
cmp
push
sbb
push
punpckhdq
inc
mov
testb
or
push
cmp
lret
out
mov
cmp
sbb
addr16
insb
pop
sbb
std
sub
push
push
add
and
ja
pop
notb
adc
sbb
lock
inc
in
outsl
test
aaa
mov
orb
arpl
movsb
addr16
decl
cmpsb
lcall
mov
in
mov
cmc
cmp
fldenv
dec
mov
jge
aad
popa
jle
clc
jae
in
inc
roll
xchg
lods
in
ja
adc
adc
dec
add
aaa
mov
pop
mov
pop
add
arpl
iret
jo
fwait
in
aad
jl
and
imul
arpl
jge
iret
ret
adc
cltd
adc
xor
lods
and
mov
pushf
inc
push
pop
leave
rep
adc
shlb
inc
loope
push
cmpsb
and
jne
push
push
insb
jnp
add
adc
into
sar
je
lret
add
cs
jl
out
in
dec
pop
jne
rol
dec
repz
sub
adc
out
jb
add
icebp
mov
cmpsl
jmp
dec
push
sub
in
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
iret
leave
loopne
movsb
xchg
int
loopne
sbb
push
addr16
jo
mov
adc
loop
int3
push
ja
dec
sbb
nop
sti
insb
push
xchg
loopne
mov
xchg
ror
iret
jo
cld
inc
fcomip
pusha
shll
mov
adc
aam
loope
in
dec
cltd
jb
push
and
mov
add
movsl
xor
mov
js
call
mov
cmp
xor
mov
sbb
ljmp
outsl
in
insb
mov
lods
mov
pop
cmp
cmovno
ljmp
jo
jnp
pop
jnp
fldt
enter
imul
in
jl
aaa
jecxz
pop
jnp
adc
mov
dec
mulb
push
and
adc
icebp
int
adc
scas
add
les
adc
jp
pop
mov
xchg
pop
cltd
mov
rcl
out
fcmovnu
dec
das
lods
jp
lret
pop
fstps
add
mov
mov
std
and
test
dec
cmp
jmp
or
or
add
leave
add
xchg
test
dec
cmp
lea
and
cmp
mov
stc
lea
jmp
pop
sub
lret
sbb
fidivs
mov
outsl
test
idivb
and
hlt
dec
pop
sub
int
jecxz
arpl
fcom
pop
test
in
xor
push
inc
inc
mov
jp
xor
pop
adc
ja
pushf
mov
cmp
insl
xchg
jnp
cmp
lcall
push
int3
aad
sub
lock
cmpsb
outsl
jle
or
in
rolb
mov
mov
dec
scas
fwait
mov
mov
cmc
lret
test
rcrb
stos
loop
ds
test
mov
fisttps
inc
pop
lret
sbb
cld
push
das
xchg
fcmovbe
dec
movsb
xchg
lods
mov
in
xchg
inc
insl
mov
cmp
mov
push
mov
out
iret
andl
mov
addl
loop
pop
adc
call
fldcw
outsl
pop
cmp
ror
mov
add
cld
fbld
rclb
psubsw
pop
jnp
icebp
push
cmp
sub
loope
lods
lret
insb
bound
hlt
mov
in
sbb
pop
pop
shrb
stc
sahf
jmp
xor
mov
and
inc
outsl
mov
sbb
aas
jmp
sbb
jle
sbb
mov
ror
ficoms
mov
add
out
adc
neg
xchg
inc
ljmp
gs
rcrb
nop
lock
mov
das
xorl
cwtl
xchg
dec
mov
psubd
xor
mov
out
imul
imul
std
ljmp
xor
aaa
aaa
insl
or
push
sbb
test
pop
xchg
mov
jnp
cmp
xchg
push
out
cmp
jmp
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
iret
inc
subl
mov
dec
fucomp
aaa
adc
testb
jle
mov
outsl
dec
lret
ss
sbb
push
ljmp
push
je
je
clc
jae
cmp
lcall
xor
xchg
lock
aaa
mov
dec
xchg
push
leave
outsb
lret
mov
jnp
add
cmp
aas
dec
and
jnp
and
or
xchg
rcll
push
add
out
cmpsb
mov
xor
jns
add
add
jp
test
add
sbb
pop
mov
mov
adc
out
push
inc
mov
mov
inc
test
leave
mov
fisttps
adc
mov
fisubrs
mov
inc
int3
sub
rcll
int3
pop
push
cmp
and
push
add
xchg
pop
stos
fdivrl
lods
mov
adc
cli
mov
sbb
push
mov
shl
xlat
and
cmpl
repnz
mov
mov
arpl
or
je
sbb
in
dec
lahf
enter
cmpsb
mov
or
push
jne
shl
je
jmp
outsl
pop
cmp
popf
in
and
inc
xor
pop
push
andb
imul
add
test
fldl
ja
and
xchg
inc
push
fistpl
xor
clc
iret
xchg
andb
loope
stc
xor
fbstp
pop
js
xchg
leave
test
jle
lods
call
sbb
cmp
jge
aam
xchg
add
lret
stc
mov
and
out
in
add
xchg
int
fcomps
dec
xor
scas
inc
push
loope
or
dec
aaa
rcrl
jno
pushf
sub
inc
xchg
mov
sbbb
shl
mov
jle
out
or
or
sbb
cwtl
mov
inc
mov
jmp
push
inc
iret
xor
mov
jmp
sahf
pushf
rolb
xor
hlt
incb
mov
push
aas
mov
aam
jmp
lahf
xor
and
cmp
addr16
enter
sbb
sub
daa
xchg
xchg
cmp
dec
or
adc
out
lea
popa
lret
aas
cmp
push
cli
mov
cmpsb
push
iret
lahf
push
mov
pop
mov
xchg
dec
cwtl
pop
ret
bt
lret
shll
test
shrl
or
sbb
pop
ja
adc
push
cltd
scas
cmp
adc
pushf
inc
imul
sbb
outsb
cmp
icebp
dec
dec
test
lods
imul
xor
sbb
loopne
out
dec
hlt
hlt
push
scas
test
addr16
out
mov
addr16
inc
mov
push
test
lds
or
cltd
mov
cmp
jbe
repz
das
adc
pop
call
ds
ret
pop
inc
sbb
in
int
mov
loope
xchg
pusha
pop
testl
daa
jl
gs
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
fadd
jl
insb
sbb
jns
sbb
ffree
loopne
aaa
adc
stos
insl
and
fwait
outsl
push
das
mov
ljmp
pushf
enter
push
ret
add
ss
hlt
push
mov
fsubr
and
cmc
adc
in
fmuls
jmp
in
arpl
pop
pushf
imul
shll
mov
cmp
test
adc
jnp
negl
push
push
mov
sti
dec
sbb
add
mov
dec
in
and
stos
shrl
shl
mov
cmc
inc
inc
cli
dec
dec
or
push
pop
sbb
add
xlat
clc
shl
pop
sub
mov
push
dec
mov
mov
sub
enter
adc
orl
ja
out
pop
pop
xchg
roll
pusha
adc
push
jmp
lret
rorb
decb
call
cli
pop
push
aas
jmp
mov
fisttps
int
jp
shrb
xor
ds
pop
mov
iret
stos
mov
lret
fdiv
sub
imul
scas
dec
add
xchg
notl
gs
mov
sub
cmp
pop
cmp
je
push
sti
adc
mov
add
sbb
cmp
adc
mov
and
adc
loope
out
addb
add
mov
fiadds
sbb
pop
inc
mov
fisttpll
arpl
sbb
addr16
js
cmpsb
pop
dec
sbb
cs
in
push
mov
mov
push
iret
or
inc
lds
negb
mov
out
fs
cmp
addr16
fwait
push
dec
in
sub
pop
mov
jmp
pusha
xchg
cmpsl
daa
fdivrl
ljmp
vmulpd
jns
outsl
shlb
and
fildll
addr16
icebp
rorl
mov
jg
cmp
stc
cmpsl
push
mov
lret
or
or
ds
inc
stc
inc
push
jae
dec
out
mov
xchg
adc
sbb
in
ss
mov
mov
xor
sbb
pop
scas
pop
jmp
loope
xchg
push
add
jecxz
test
push
loopne
or
adc
jmp
sub
repz
cwtl
fnstsw
mov
add
cld
into
stc
loop
cs
xor
ss
jae
push
inc
nop
in
and
aam
jmp
out
cld
push
lock
sbb
mov
push
or
leave
dec
jecxz
push
out
scas
adc
rorb
push
jnp
mov
aam
gs
out
fisttpl
lds
lahf
dec
cltd
andl
popa
mov
int3
ret
test
test
sbbl
test
cmpsl
xorps
sub
ja
mov
cmp
sbb
mov
repnz
add
cmp
xor
inc
aaa
insl
cmp
das
hlt
jnp
movsl
addb
fisubrl
and
xchg
leave
dec
leave
dec
pop
add
jno
lock
loopne
sub
xchg
jbe
dec
sbb
sbb
push
insb
imulb
ja
lret
outsl
mov
es
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
out
scas
mov
sbb
sbb
test
jnp
inc
mov
mov
sub
jl
icebp
fidivrs
jmp
cltd
xor
popa
inc
pop
inc
gs
aad
fdivr
sbb
push
jno
cmpsl
insb
ljmp
outsb
xchg
roll
xor
xor
shlb
sub
push
dec
stc
ja
nop
dec
imul
pushf
mov
add
pushf
push
sahf
leave
sub
xchg
mov
push
sbb
pop
cld
push
lret
scas
mov
push
sub
fwait
aad
fs
dec
mov
pop
xchg
shrl
xor
dec
jg
xchg
mov
sub
xor
pop
dec
out
mov
imulb
fwait
lea
scas
aaa
jle
xor
ret
or
mov
les
cwtl
repnz
add
loop
icebp
lea
adc
mov
add
jbe
inc
mov
adc
int
mov
popf
daa
lods
mov
xchg
mov
xlat
xor
stos
cs
pushf
andl
es
ret
jg
and
mov
xchg
fistl
push
dec
clc
mov
add
movsl
imul
cmp
mov
dec
xchg
cmp
inc
mov
iret
rclb
mov
xor
icebp
repnz
add
sbb
stc
inc
jbe
nop
and
int3
divb
adc
repz
sbb
inc
and
mov
test
cmpsb
sarl
cmp
daa
cmp
and
repz
jnp
mov
test
fs
pop
mov
sbb
out
fdivl
std
int
inc
or
sub
pop
clc
xchg
test
cmp
es
loope
lods
sub
pop
inc
or
in
and
insl
scas
xchg
outsl
testl
dec
repz
add
dec
test
addb
jle
push
mov
and
test
int
subl
cmp
in
dec
jns
lods
cmpsl
jnp
mov
shrl
mov
popf
xchg
add
cmp
sbb
lds
jnp
xor
cmp
xchg
stos
sub
cmp
cmp
inc
and
clc
ljmp
or
adcb
fisubs
mov
pop
sbb
sbb
adc
stos
loope
icebp
cli
sbb
rcrb
mov
repnz
shlb
cmp
push
rcrb
push
iret
or
mov
paddw
or
mov
sti
shr
cmp
dec
dec
gs
xchg
cmp
add
decb
inc
add
out
xlat
ja
xchg
mov
jp
sub
out
in
das
xlat
das
pop
jnp
dec
out
cs
cld
stos
dec
xchg
push
xor
nop
mov
int
test
lock
js
pop
sub
mov
mov
enter
insb
pop
cmp
sahf
cmc
inc
add
dec
push
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
out
jns
mov
pop
sbb
jns
sbb
sub
popf
mov
cmc
inc
into
or
pop
pop
int3
movsb
pop
push
lock
repz
out
movsb
mov
les
shll
xchg
ret
push
mov
push
dec
dec
jo
cmp
mov
scas
es
jle
add
sbb
mov
xor
je
loopne
arpl
xchg
and
push
xor
rcr
nop
insb
mov
sub
movsl
push
mov
enter
add
rol
jmp
dec
inc
fimuls
or
mov
push
sbb
inc
mov
jge
jns
imull
sub
dec
add
mov
fists
lcall
loope
out
outsb
adc
int3
lods
inc
sbbl
dec
xlat
mov
add
mov
cmp
pop
leave
insl
jns
and
jb
lret
cmpsb
inc
mov
stos
jmp
sbb
lock
add
jns
lods
lods
fsubs
mov
sbb
xchg
xchg
scas
adc
into
fsubs
or
leave
into
sub
in
cmp
xor
repnz
add
pop
cmpb
in
rol
testb
xor
push
push
shll
push
jp
cmpsb
nop
jne
data16
in
sbb
inc
push
jge
dec
pop
mov
rcrb
sub
loop
fldcw
jge
and
popa
lret
je
pushf
add
mov
mov
in
mov
cmc
lods
sub
mov
lcall
cmp
mov
mov
clc
add
hlt
fidivl
sbb
push
cli
or
xchg
ret
mov
mov
jb
test
leave
dec
mov
inc
mov
bound
gs
and
adcl
add
dec
enter
es
mov
adc
fsubrs
loop
std
adcb
cmp
repnz
mov
and
fwait
dec
in
push
fcmovnb
imul
subl
jl
cmp
stos
lahf
ds
stos
cmp
imul
inc
xchg
xchg
mov
sub
addr16
add
mov
mov
mov
mov
nop
jmp
addr16
ja
data16
sub
pop
lock
sub
mov
mov
add
push
push
xchg
cmp
xchg
outsl
lret
sbb
sub
push
ja
and
xor
mov
cltd
add
mov
les
jae
cmpsb
push
fstp
pop
xchg
fs
sub
fisubrs
cmpsl
xor
mov
push
mov
mov
ds
gs
sbb
outsb
inc
mov
daa
xor
pop
cmpsb
xchg
ds
fistpll
push
dec
loope
jl
aam
add
testl
inc
mov
bound
mov
mov
pushf
lds
pop
bound
pop
push
aad
mov
pop
push
inc
fs
mul
mulb
jb
daa
fs
shll
add
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
sti
cmpsl
mov
je
sbb
and
pop
loope
cmp
inc
mov
jmp
addb
pop
add
fbld
mov
js
add
xchg
jmp
int
icebp
mov
or
idivb
mov
sbb
xor
gs
repz
push
push
bound
sub
dec
in
sbb
dec
cmpsb
cmp
xchg
cmpsl
dec
pop
jae
inc
rcl
es
insb
scas
add
sub
rcll
or
xor
insl
insb
sbb
cmp
sbb
insb
ljmp
cwtl
cmpsb
je
cmp
lahf
xor
cmc
mov
scas
pop
xor
dec
leave
xor
int
pop
iret
add
jmp
lds
jg
inc
out
pop
aas
jbe
and
sbb
out
pop
sub
into
xor
and
sahf
xchg
push
enter
dec
mov
pop
xchg
lea
aad
pop
mov
push
test
xchg
loopne
ds
fmuls
or
inc
mull
jno
cmp
push
inc
mov
cmpsb
push
cwtl
sbb
stos
jbe
pop
ja
or
xchg
inc
stc
mov
adc
insb
jl
sbb
or
loopne
sti
ds
jecxz
jns
jge
lahf
or
cmp
shll
adc
decb
mov
jb
or
inc
adc
mov
in
shlb
fdivrs
add
mov
sbb
repnz
dec
jecxz
push
and
scas
scas
inc
mov
push
daa
mov
xchg
dec
xchg
outsb
stos
mov
lods
repz
es
int
loopne
cmp
cmc
xchg
dec
repnz
or
popa
xlat
repz
stos
insl
mov
push
arpl
mov
rclb
mov
shlb
adcl
xchg
add
in
fsubl
outsl
lahf
in
mov
outsb
int3
sti
mov
loop
imul
cmovle
pop
std
test
xor
out
or
sub
iret
fsubrp
mov
dec
shrb
xor
inc
gs
repnz
pop
in
pop
adc
je
pop
movsl
clc
aas
add
fmull
cltd
pop
jge
je
xchg
cmp
jle
imul
pop
jo
fstl
mov
mov
popf
test
add
clc
aaa
test
les
pop
iret
in
in
pusha
sub
aaa
mov
int3
jnp
andb
jp
mov
outsl
adc
fidivl
cwtl
sahf
mov
cmpsl
mov
les
fdivl
add
sbb
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
push
stos
jne
sbb
and
sbb
loop
daa
jmp
mov
aaa
push
lret
add
add
sbb
icebp
sbb
sub
add
nop
pop
or
shrl
addb
cltd
jge
fwait
sbb
rcll
jns
sub
sub
and
add
aaa
xor
dec
fstps
sbb
push
movups
cltd
adc
fwait
xchg
jbe
loop
and
lods
out
jmp
pop
pop
in
sbb
adc
xor
cmp
and
lcall
mov
push
rolb
repz
mov
xchg
ret
stos
stc
dec
sub
push
aas
mov
lds
xchg
push
mov
test
jne
push
push
xchg
mov
ret
push
add
fdivrs
insb
gs
xor
sub
push
xlat
int3
sbb
cmpsl
popa
icebp
add
mov
shrl
xchg
xor
shlb
cmp
add
mov
add
and
ljmp
lahf
aaa
dec
jno
faddl
adcb
loop
mov
jne
dec
clc
movsl
imul
in
test
out
pop
repnz
das
pop
cld
cmp
or
into
pop
pop
cld
mov
and
mov
pusha
das
inc
pop
push
xorl
or
or
sti
mov
mov
mov
pop
rclb
mov
dec
lea
cli
aas
or
mov
inc
sbb
mov
push
sub
inc
jp
or
xlat
cmpsb
inc
push
cmp
cmp
dec
inc
lret
fimuls
scas
pushf
add
jno
pop
pusha
fstps
sub
jo
jmp
inc
test
cmpsb
mov
inc
sar
idivb
xor
decl
cwtl
push
fsubrp
mov
pop
xor
sahf
mov
jg
cld
enter
cmp
push
push
std
inc
ja
pusha
or
xchg
cmp
lods
leave
loop
aam
sub
and
pop
push
scas
mov
push
dec
dec
pop
imul
push
sti
mov
sbb
insb
pop
jcxz
insl
cmc
sbb
sbb
xchg
inc
addl
subb
sbb
out
andb
push
cli
sub
sbb
stc
cmpsb
leave
mov
int
fnstenv
nop
lods
inc
sahf
jae
mov
xchg
data16
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
jo
mov
scas
adc
sbb
mov
insl
or
pop
xchg
fisubrs
cmp
ss
dec
cmc
mov
aad
jl
adc
out
ljmp
fmull
cmp
sbb
mov
xor
cmpsl
push
cmp
adc
jnp
fs
pop
bnd
mov
test
jl
and
adc
in
test
movsl
mov
icebp
aam
out
add
dec
mov
fisttpl
sarb
add
xor
jge
mov
mov
fidivrl
push
or
and
xchg
mov
cmp
push
mov
xorb
push
sti
xorl
mov
xor
jge
aad
scas
dec
out
into
mov
or
ret
in
pusha
jmp
fdivs
out
daa
and
rcrl
ret
adc
xchg
or
jecxz
mov
shlb
in
fistpll
jl
outsb
mov
mov
loop
sahf
jbe
mov
dec
inc
in
fiadds
shlb
loop
add
bound
stos
sbb
xchg
shl
insl
push
pop
push
add
adc
adc
aad
mov
popf
rolb
adc
pop
mov
cmp
test
or
cwtl
pop
outsb
sarl
adc
xchg
mov
outsb
mov
cwtl
mov
subb
lret
add
fildll
push
and
fisubs
and
inc
mov
cmpsb
scas
add
mov
test
gs
push
mov
orb
rorl
cmp
add
sbb
and
pop
adc
int3
adc
push
out
shll
les
outsl
lcall
jmp
cmp
stos
jg
mov
insl
popa
and
iret
js
aaa
ret
jg
loope
inc
push
mov
push
cmp
stos
addl
cmp
fisubrl
push
xchg
lock
or
lods
xlat
push
test
fists
jmp
xchg
repz
sub
xchg
repz
add
xor
add
mov
xor
arpl
jecxz
cmp
popf
jae
mov
cmc
xchg
leave
rolb
push
xor
aas
clc
mov
sub
fadds
fldl
jns
lods
sbbl
mov
xor
nop
sti
pop
into
in
push
dec
cmp
out
das
adcb
inc
pop
or
sbb
dec
mov
and
mov
mov
jecxz
and
or
sub
imul
cmpsl
fsubr
dec
xchg
or
mov
lods
adc
imul
add
xchg
punpcklwd
out
out
fdivrs
lret
icebp
jecxz
xchg
fnstsw
and
test
int3
in
xlat
popf
dec
aad
fistl
fldenv
fdivr
repz
dec
xor
push
syscall
push
outsb
cmp
sub
mov
adc
inc
add
sti
cs
icebp
sti
cmpsb
out
outsl
fwait
inc
pop
cmp
in
rcll
leave
bound
adc
mov
jl
push
out
arpl
dec
lret
sbb
andb
and
xorb
fistl
lock
cmp
mov
cmp
adc
or
dec
cwtl
jmp
mov
inc
pop
insb
jl
ja
push
push
movsl
inc
stos
dec
or
idivb
add
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
movsl
cmp
sbb
sub
adc
cmp
loop
int
fcomps
push
sub
in
js
sbb
iret
jg
sbb
imul
jmp
sub
push
shll
arpl
cmpsb
push
arpl
in
nop
pop
adc
daa
mov
inc
out
mov
dec
scas
fsubrs
outsl
aas
mov
pushf
out
iret
ret
mov
push
lds
jbe
sub
movsl
xor
ret
fmul
imul
dec
dec
icebp
inc
rorl
sbb
pop
into
aad
pop
or
push
mov
scas
dec
xchg
sti
lock
pop
pop
std
xchg
loop
jae
daa
sbb
insb
jns
inc
imul
xlat
repz
imul
cmp
jae
inc
cmc
dec
inc
enter
rcr
aas
push
pop
mov
movb
xchg
sub
jae
lock
rcl
inc
jae
pop
xchg
mov
std
sahf
pushf
mov
inc
jae
imul
mov
mov
mov
push
ret
cld
adc
and
mov
sub
xchg
jbe
fs
mov
lcall
inc
inc
aaa
out
jmp
cli
lahf
loope
daa
inc
push
inc
mov
push
je
pop
sar
sbb
int3
inc
out
add
lcall
lcall
inc
hlt
sbb
adc
stos
call
mov
adc
cwtl
ret
pop
mov
pop
push
inc
mov
hlt
addb
nop
pop
mov
clc
xchg
and
pop
adc
or
gs
lret
mov
loopne
pop
dec
push
rcr
mov
mov
stos
lcall
gs
mov
arpl
mov
jno
stos
fsubrs
mov
jg
push
add
jmp
jae
cmc
data16
mov
js
add
sub
mov
push
mov
mov
data16
dec
sub
jae
mov
inc
xor
mov
jl
add
pop
in
dec
cld
jg
mov
into
add
pop
inc
adc
addr16
cmc
leave
mov
pop
adc
das
lods
les
mov
dec
xor
fidivs
das
jge
dec
mov
aam
pop
clc
pop
push
xchg
inc
mov
ret
xchg
adc
insl
and
cmp
mov
arpl
int3
fnstenv
enter
data16
outsl
cmp
sbbl
pop
cmp
shl
mov
mov
mov
cli
mov
scas
push
scas
and
stos
subb
xchg
das
mov
shlb
inc
pushf
ficoms
aam
es
or
jae
inc
lahf
aad
adc
cltd
ss
mov
or
mov
mov
adc
mov
loop
imul
inc
inc
mov
nop
pop
in
jecxz
cmpsb
inc
sbb
mov
xlat
mov
cld
inc
imul
fwait
add
jae
movsb
addr16
fimuls
pop
iret
les
movsl
xchg
jge
xor
inc
iret
sub
sbb
outsl
jp
fildl
inc
jp
push
loope
cmp
test
rcl
xchg
cwtl
orl
lock
inc
pusha
push
std
pop
mov
dec
or
add
mov
aaa
push
arpl
fs
clc
cmp
xchg
andl
adc
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
aam
mov
notb
sbb
mov
sahf
dec
push
pushf
call
mov
cmp
jae
jmp
outsl
incl
dec
in
mov
addr16
aam
mov
mov
fwait
pop
sbb
mov
lock
fimuls
pop
push
inc
and
stos
fs
xor
ja
in
jle
ret
sbb
mov
dec
xor
jmp
mov
pusha
iret
push
cld
addr16
sti
fstpt
pusha
adc
sbb
fnstcw
test
fsubr
sub
sub
lcall
push
mov
dec
push
push
cmp
idiv
sahf
in
xchg
clc
iret
pop
sbb
or
out
mov
sub
xlat
xchg
inc
push
loop
inc
xchg
jne
jge
lock
fmul
cmp
lret
dec
movsb
fistps
cmp
call
test
enter
bnd
std
dec
stos
jbe
aad
inc
arpl
not
test
incl
imul
mov
lret
shl
jp
inc
out
fs
stc
mov
flds
fcom
aam
iret
fwait
add
push
mov
sub
jmp
jecxz
out
add
mov
dec
jmp
sbb
je
mov
shl
in
in
test
stos
loopne
test
jno
push
inc
ficomps
out
shll
cli
xor
sbb
pop
in
test
mov
ds
and
add
mov
out
roll
and
or
test
xorl
pop
cs
fwait
dec
dec
jno
pop
sbb
loop
inc
jp
lret
inc
or
movsl
pop
push
iret
cwtl
xor
aam
add
mov
add
test
lret
cltd
cwtl
and
add
push
inc
and
mov
rcrb
ret
cld
or
mov
ja
imul
xor
pop
mov
aas
mov
subb
mov
fwait
mov
cmp
jo
popf
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
gs
sbb
notb
sbb
ss
dec
lea
sbb
cmpsl
sarl
popa
mov
dec
rolb
lahf
push
hlt
repnz
and
or
push
sahf
sub
inc
insb
data16
lret
jecxz
jg
sbb
jp
jge
mov
cli
vpand
mov
test
jp
xor
subl
int3
roll
push
add
adc
in
adc
mov
inc
push
lahf
push
dec
mov
divb
test
mov
gs
adc
loop
and
and
mov
cmpsl
sti
pop
push
xchg
nop
outsl
cltd
test
mov
iret
icebp
popf
aad
addr16
push
movsb
xchg
pushw
movsb
push
inc
jge
xor
inc
mov
xchg
cmp
test
and
sub
stos
sbb
lret
push
jae
cmc
pop
outsb
inc
cld
loop
jecxz
cmc
imul
popa
icebp
enter
lock
test
mov
mov
adc
cmpsb
pop
sbbb
insb
fistl
jb
add
xchg
ds
pushf
and
leave
lods
neg
add
lretw
pop
push
sarl
in
mov
and
clc
dec
in
push
mov
mov
inc
xchg
and
fistpll
shl
sub
rolb
mov
int
pop
pop
stos
or
out
lcall
stos
ljmp
push
arpl
pop
ljmp
xchg
cmp
fwait
xor
bound
ficompl
insb
in
pop
jnp
xchg
mov
int
sbb
into
divb
andb
stos
cmpsb
movsl
push
cs
add
sub
dec
sub
imulb
push
mov
push
fstl
xchg
xchg
subl
xor
mov
jge
rorl
xor
ds
xchg
jo
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
cmp
jo
sbb
notb
sbb
ret
mov
or
adc
ss
sbb
fbld
xor
xor
rcll
stos
loope
adc
das
in
je
xor
add
pusha
bound
or
iret
fstpt
cmp
pop
mov
cmp
jo
sub
xor
or
movsb
sbb
and
orl
loope
dec
jg
ret
test
mov
jb
sbb
xchg
add
xchg
jl
stc
xchg
fsub
orl
mov
enter
out
pop
dec
mov
dec
gs
pop
sub
mov
jge
cmpsb
jae
popa
and
sti
ljmp
sub
inc
rcrb
cmpsb
lret
mov
pop
fstpt
xchg
sub
sbb
scas
aam
test
call
add
mov
aaa
call
fsts
mov
adc
or
push
inc
sti
push
in
bound
inc
cmpsb
adcl
int3
cmpsb
pop
repz
mov
sti
cmp
jns,pt
mov
mov
and
es
inc
and
add
and
add
test
xor
add
daa
push
cli
movsl
mov
mov
repz
shll
add
shl
into
dec
lahf
pop
pop
fldenv
add
int3
mov
or
jb
inc
outsl
and
jg
mov
add
or
push
stos
xor
outsb
lock
xchg
notb
pop
mov
sbb
mov
fwait
popa
subb
enter
sub
pop
lods
pop
or
mov
sub
das
scas
in
outsl
andb
ret
test
xchg
pusha
inc
lea
jl
jb
inc
mov
das
dec
sbb
nop
pusha
sbbl
fisubl
pop
mov
mov
mov
clc
mov
push
sbb
shlb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
enter
idivb
insl
or
addr16
sbb
je
inc
inc
fs
cltd
adc
rolb
shrb
adc
shrb
add
lock
dec
push
aad
and
cmpsb
cmpsl
ljmp
es
xor
mov
inc
cmp
inc
sub
sarb
push
push
testb
mov
jg
mov
js
jl
test
jns
scas
cmp
adc
mov
adc
idiv
lea
lods
dec
xor
pop
testl
in
mov
addr16
sbb
stc
jb
and
xchg
shl
jne
mov
fwait
adc
push
popa
and
negl
adc
mov
dec
sarl
push
pop
mov
fstpt
mov
xchg
test
jg
fwait
add
scas
push
adc
mov
lock
jae
mov
in
mov
in
cltd
inc
push
das
gs
into
inc
and
sarl
loope
mov
adc
fwait
rep
subl
arpl
std
inc
stos
into
jno
xor
scas
mov
xorb
insl
pushf
sub
mov
xchg
pop
cltd
out
jmp
cltd
cmp
dec
push
mov
test
dec
mov
add
je
es
mov
les
xor
and
lret
inc
lds
sahf
fadd
sub
aam
pop
xchg
fcomi
jnp
adc
xchg
jae
mov
adc
jnp
nop
aam
sbb
in
jns
push
xorb
dec
out
inc
mov
adc
insl
mov
mov
jae
and
adc
jo
and
mov
sbb
adc
lret
fldt
lea
cld
add
xchg
cmp
arpl
cmp
mov
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
pop
iret
sub
movsb
xchg
mov
les
cmp
bound
push
sti
lahf
loop
pop
mov
lret
mov
and
mov
ret
and
aad
shrb
cmp
rcrl
cmp
inc
mov
jbe
insl
mov
inc
mov
mov
sub
dec
mov
or
push
jecxz
fdivrp
out
jmp
dec
xlat
xor
sub
fmuls
add
cld
and
int3
pop
cs
push
adc
fcomps
das
jg
xor
pop
lcall
pop
mov
imul
test
test
pop
and
xchg
fwait
scas
jne
gs
xor
push
jbe
inc
icebp
lcall
lock
mov
mov
or
adc
lds
or
subb
dec
sbb
je
push
jno
test
sbb
out
adc
fwait
dec
fsubs
cld
mov
mov
aaa
ficoml
sbb
jno
dec
data16
mov
scas
dec
mov
nop
loopne
dec
mov
xor
pop
out
xor
fimull
dec
fidivrs
xchg
cltd
into
aas
mov
aaa
mov
orb
and
cmc
push
cmp
gs
xor
and
fbld
xor
fdivr
in
mov
imul
dec
pushf
insb
jb
jae
mov
lods
or
or
pop
xchg
add
loopne
or
das
xor
out
pop
add
les
mov
out
fwait
mov
jmp
pop
shrb
fildl
push
jns
adc
push
inc
mov
dec
jns
sbb
pop
mov
sub
fstl
fcmovbe
add
inc
shlb
outsb
or
inc
cmc
cmpsl
andb
out
nop
xor
sbb
es
push
mov
mov
jmp
aaa
and
dec
mov
push
out
add
jo
sub
sbb
adc
sbb
les
xor
lahf
imull
or
fadds
fmuls
mov
ret
loopne
inc
adcb
data16
push
xor
add
cmpsb
cmpsb
rcrl
sbb
xor
cld
cmpb
fimuls
cmp
jg
pop
pushf
and
add
mov
and
mov
test
shlb
fcoml
jb
xor
adc
push
fwait
jmp
or
adc
cld
out
push
push
mov
lock
xor
sbbb
fistpll
cmp
loope
inc
aaa
inc
les
icebp
cs
dec
sub
stos
jmp
push
fs
mov
cmp
cld
jns
leave
pop
mov
fwait
imul
lret
test
adc
test
jae
push
adc
mov
cltd
fmull
jo
dec
xor
mov
xchg
cmp
push
adc
mov
inc
clc
jo
and
mov
enter
jb
sbb
xchg
fiadds
out
inc
aas
insl
and
sub
insb
in
pop
adc
pop
dec
cmp
mov
jnp
pusha
setle
lods
add
add
mov
fnstenv
push
push
mov
mov
jae
bnd
dec
or
adc
mov
mov
lea
jle
daa
pop
xor
sub
mov
lods
sbb
cmp
push
mov
dec
cmp
arpl
fldcw
or
xchg
jns
cmp
xor
mov
aas
rolb
xchg
incb
push
sub
jns
shlb
dec
jecxz
sbb
adc
sub
rcrl
sub
test
ret
xor
mov
pusha
test
xchg
mov
ret
aad
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
pop
xchg
jb
roll
ja
shr
fwait
mov
enter
push
push
and
stos
adcb
imull
andl
mov
jg
in
stc
adc
mov
dec
lcall
idivl
and
loopne
pop
cs
mov
ret
xor
push
ret
jb,pn
js
cmp
stos
adc
aas
fbstp
dec
fs
inc
in
cmp
add
fwait
add
and
inc
push
ret
out
aaa
jp
dec
fstps
fiadds
inc
add
jl
jle
mov
ret
aad
nop
popf
mov
inc
cmp
aas
inc
fsubr
add
dec
xchg
in
shll
jae
push
xor
push
jo
jne
mov
test
mov
and
dec
cwtl
add
pop
outsl
les
lret
iret
xchg
jae
mov
addb
pop
gs
stc
and
pusha
xchg
inc
or
adc
mov
and
pop
cld
mov
into
test
xchg
cmpl
or
mov
sub
in
push
push
add
cmp
pop
cld
into
jo
jge
adc
cmp
jle
addb
stos
push
push
sub
jl
xchg
sbb
rcr
pusha
adc
xchg
sub
cmc
inc
dec
scas
cmp
negb
dec
loop
aaa
push
or
lods
xchg
test
mov
add
jmp
inc
pop
fidivrs
shll
fs
jo
add
mov
cmp
ja
pop
mov
aam
add
sahf
inc
loopne
sub
call
inc
lea
cmpsl
jmp
cs
je
dec
mov
movsl
std
dec
dec
movsl
gs
icebp
arpl
insb
jno
dec
push
jl
divb
nop
cmpsb
inc
clc
aaa
pop
xchg
mov
lcall
or
clc
cmp
push
xchg
je
sub
xchg
adc
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
out
mov
xchg
call
and
mov
mov
mov
mov
fistps
xlat
call
mov
push
jne
jmp
xchg
imulb
jnp
mov
aas
notb
mov
enter
sbb
xchg
call
mov
and
jp
fstpl
scas
popa
push
adcl
or
pop
cli
cmp
imul
mov
les
push
sbb
mov
push
inc
rcll
sub
mov
movsl
cmpsl
cmpsb
sbb
jns
loopne
xor
adc
mov
nop
jmp
sbb
jp
lret
or
call
cmpsl
popa
gs
leave
lcall
stos
pusha
lods
mov
sti
mov
in
outsl
inc
and
jle
std
mov
mov
xchg
jle
hlt
xchg
jns
xchg
cmpsl
cld
add
hlt
outsb
xor
or
push
mov
mov
stos
adc
dec
inc
ja
adc
mov
aam
add
fwait
and
loope
pushf
jbe
dec
mov
inc
cwtl
and
stos
loopne
push
push
push
nop
sub
dec
mov
push
push
and
or
dec
movsl
mov
mov
jae
mov
lea
jb
xor
in
adcl
push
mov
push
out
push
insl
aam
in
aam
insl
pop
das
fidivrs
jle
je
sar
adc
mov
lods
loopne
xchg
out
in
jmp
loopne
sbb
negl
or
jecxz
push
scas
mov
xchg
repz
mov
popl
test
lods
call
lods
jp
mov
dec
pusha
and
test
lret
push
or
mov
sub
mov
mov
jecxz
ret
scas
xor
mov
inc
inc
jp
in
cmp
mov
fwait
add
jbe
mov
push
std
adc
in
mov
shlb
stc
fstpl
out
inc
pop
and
sbb
adc
or
and
mov
scas
call
lahf
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
mov
stos
add
sbb
sbb
subb
loopne
push
mov
pop
pop
pushf
ljmp
dec
and
push
mov
mov
jne
aas
mov
ds
das
sub
aad
arpl
mov
xchg
iret
add
fimull
xchg
push
push
jae
out
in
adc
imul
cmp
fdivl
punpckhbw
xor
adc
jge
movsb
mov
push
mov
pop
inc
movsl
dec
mov
aaa
mov
mov
add
scas
test
out
sub
and
add
add
or
cmp
fistps
lahf
pop
hlt
fisubrl
pop
arpl
call
mov
cmpsb
push
in
addb
ss
repnz
loopne
push
xorw
popf
test
xchg
sahf
jmp
inc
icebp
adc
int3
pop
sbb
ljmp
push
stos
daa
xchg
cmp
mov
sarb
rcll
loopne
add
cmpb
cmp
inc
fsubrs
ss
jl
fwait
push
movsb
pop
dec
lods
mov
jns
in
nop
xchg
out
xor
movsl
lds
xor
jmp
dec
adc
sub
lock
push
mov
loope
xor
cwtl
mov
jo
jnp
push
sub
inc
repnz
xor
mov
inc
sub
push
movsb
push
lock
cvtpi2ps
ss
push
push
les
xlat
outsb
das
nop
mov
inc
es
int
addr16
lock
ret
movsl
sbb
mov
aad
daa
test
adc
sbb
stc
es
imul
jb
pop
repnz
lcall
ret
test
rolb
jno
mov
aas
inc
lret
jo
cltd
push
adc
pop
mov
outsb
bswap
out
inc
cmp
and
dec
adc
sbb
lock
outsb
pushf
mov
rorb
xchg
adc
mov
aam
jb
fcoml
call
mov
iret
andl
push
lea
stos
les
xchg
mov
mov
movsl
cmpsl
push
mov
cmp
jae
pop
bound
ficomps
push
xchg
movsb
fld
inc
scas
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
pop
pop
add
jmp
fists
imul
or
movsb
pop
mov
dec
addr16
jle
cmp
lods
iret
jecxz
sub
mov
rorb
push
in
add
jne
push
bound
jbe
sub
scas
jmp
movsl
in
adc
dec
and
sbb
jb
sbb
psrld
cld
mov
icebp
fiadds
call
dec
inc
jmp
or
sti
pop
jae
aaa
cmp
mov
or
add
inc
scas
mov
sub
ds
testb
cmp
pop
mov
cmc
xor
mov
loope
shr
jmp
pusha
bound
lea
push
push
flds
cmp
repnz
outsl
dec
push
add
jp
inc
sahf
lea
dec
and
cmp
add
cmp
das
mov
sbb
test
test
sub
stos
ja
test
fwait
iret
xchg
mov
push
gs
mov
lock
or
shl
cwtl
sbb
lcall
adc
xor
xchg
call
out
xor
repnz
or
dec
jmp
jmp
xchg
insl
popl
hlt
add
mov
jle
loope
loope
cmp
sbb
jl
xchg
mov
sub
data16
xor
and
inc
es
mov
sub
jb
enter
adc
adc
scas
ds
dec
insb
jmp
and
int
fdivl
hlt
movsl
dec
test
push
or
fsubrp
sub
xchg
push
jnp
loop
sahf
aad
xchg
inc
push
and
int3
xchg
lahf
add
mov
ret
imulb
xor
jecxz
inc
sbb
adc
ret
leave
pusha
shl
mov
daa
repz
std
sub
mov
inc
lds
fninit
imul
inc
mov
inc
stos
insl
xchg
dec
mov
lcall
cmpsl
add
xchg
adc
ds
mov
xchg
mov
divl
mov
inc
sbb
mov
testl
stos
dec
fcmovnbe
jnp
and
pop
or
shlb
add
lea
mov
and
pop
cmpsl
sub
push
jne
nop
push
test
jnp
outsl
xchg
out
jae
xlat
aad
fucomip
test
push
xchg
loop
jno
adc
ss
iret
mull
pop
and
cmp
ljmp
or
shrb
hlt
mov
fildl
mov
std
inc
mov
pop
and
ret
pop
add
movsl
stos
push
jbe
sti
sbb
pminsw
add
jns
and
leave
pop
sub
or
xchg
fisttpl
pop
icebp
dec
imul
add
aam
mov
mov
jmp
mov
fs
and
imul
mov
push
mov
push
adc
push
dec
aaa
pop
push
xor
sbb
lea
pop
jns
xchg
push
add
or
xchg
imul
adc
fwait
mov
fldl
hlt
lea
dec
sub
ret
mov
sbb
xor
gs
add
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
cmpsl
orl
adc
sbb
adc
sbb
hlt
and
incl
notl
out
ja
rcrl
mov
mov
scas
pop
xor
or
xchg
xchg
psraw
fsubs
xchg
repnz
movsbl
push
cmp
or
nop
ret
pusha
sbb
ja
pop
ret
test
arpl
out
loopne
outsl
push
pop
scas
push
call
xor
sarb
loop
ja
in
sbb
lahf
bound
xlat
jp
mov
aam
fdivr
sahf
push
pop
adc
xchg
fnstenv
in
aas
mov
popf
ss
mov
mov
sub
cmp
mov
ret
ljmp
push
in
xlat
push
jmp
cmpsl
cmp
ljmp
jl
fwait
cmp
orb
mov
rclb
mov
adc
sbb
sti
gs
scas
sbb
test
out
mov
divl
and
dec
dec
mov
push
flds
ja
add
aas
mov
sub
add
pop
mov
or
and
cli
cpuid
cs
insb
or
idiv
xchg
and
arpl
in
adcb
push
jb
sub
cmpsl
sub
sbb
jecxz
and
out
nop
or
jnp
xor
nop
stc
push
push
fdivrs
dec
ficompl
adc
notb
shll
popa
mov
and
scas
ficoml
lea
insl
bound
test
adc
outsb
in
icebp
out
lret
and
mov
xor
cmpsb
outsb
mov
dec
nop
lea
popf
bound
jo
push
stc
sbb
sbb
insl
xor
cmc
mov
mov
xchg
std
or
or
jecxz
pop
jnp
or
fs
ds
or
push
xor
hlt
in
insl
dec
inc
adc
int
lock
lahf
icebp
dec
inc
loop
adc
sbb
cmpsl
jo
dec
and
lret
fisttps
jno
sbb
stos
les
xor
divl
cmpsl
mov
jle
faddp
in
mov
loop
xor
shrb
add
dec
sbb
jg
jnp
mov
pop
xchg
stc
movswl
pop
mov
push
sbb
push
jge
sub
int3
clc
fwait
shr
test
pop
fisttpll
aaa
mov
cmp
xchg
jle
push
lret
push
jmp
sbb
mov
xchg
data16
sbb
pushf
icebp
pop
dec
scas
fwait
xor
pop
push
lret
in
xor
out
jo
fs
xchg
xchg
pop
rolb
xor
sti
rcrb
xor
jae
je
pop
in
jbe
dec
test
cmp
ss
mov
loop
sahf
std
outsb
scas
fdivr
in
inc
xchg
dec
ds
mov
inc
add
or
js
and
or
insb
sub
fistpll
sub
ret
add
call
pop
xor
or
mov
add
add
std
gs
pop
dec
aad
hlt
xchg
fiaddl
lea
sahf
pop
fadds
jge
inc
test
hlt
dec
into
fcomps
cmp
movsb
cmp
xor
rcr
sbb
inc
sarb
jp
jp
cmp
cmp
xor
add
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
cli
mov
sbb
sbb
leave
add
xor
add
inc
jbe
mov
pop
cmp
sahf
cwtl
cli
mov
inc
addb
pop
xlat
inc
daa
add
cmp
dec
add
xchg
xchg
dec
dec
and
adc
push
jne
pop
fidivl
sti
rclb
in
cmp
leave
mov
sahf
mov
mov
outsb
jnp
or
mov
dec
imul
mov
mov
inc
lock
hlt
outsb
or
mov
adc
mov
pusha
inc
dec
push
jo
pop
cld
dec
mov
sbb
pop
dec
outsl
push
pushf
cmp
int
dec
dec
pop
fisubrl
add
xchg
add
in
insb
test
jnp
mov
fsubrs
push
inc
mov
or
sbb
ds
pop
hlt
jg
jg
mov
fmuls
call
dec
pop
pop
push
stc
fiaddl
sbb
or
mov
or
sbb
inc
lret
fstpt
je
or
push
xor
mov
xor
inc
push
sahf
xchg
jnp
push
fstps
pop
in
out
bound
jno
dec
out
pop
inc
push
ds
push
push
pop
data16
jbe
aaa
lea
mov
and
div
or
aam
inc
and
adc
icebp
jne
sti
cmpsl
mov
xor
je
pop
scas
cli
ljmp
and
or
jns
or
je
cmp
nop
and
jne
or
imul
frstor
negl
negb
dec
sbb
dec
into
add
mov
hlt
or
add
aas
inc
fwait
mov
mov
movsw
xchg
inc
cmp
pop
popa
lea
shrl
xor
lcall
push
sub
loop
fisubrl
push
stos
pop
or
movsb
fdiv
iret
push
sarl
jecxz
arpl
xor
mov
ret
mov
test
dec
lahf
lcall
push
and
movsl
mov
repz
mov
xacquire
mov
loop
cltd
ficompl
xchg
jb
sbb
push
rcll
les
jge
rorl
into
mov
fimuls
sarb
jnp
test
ljmp
inc
jne
push
sti
pop
into
mov
xor
bound
push
ret
lret
add
cmp
aam
xor
push
insb
cmp
xchg
scas
sub
sub
and
sbb
mov
jnp
rorl
xchg
lods
cmp
cmp
rorb
mov
sbb
xchg
mov
jecxz
mov
call
push
pop
adc
iret
dec
daa
cmp
push
fbld
mov
insl
cltd
cmp
jns
insl
loopne,pn
and
test
mov
jmp
movl
xchg
popa
stos
xchg
push
addr16
enter
inc
insb
adc
or
mov
aam
rorl
adc
or
imul
leave
frstor
incb
fcomip
inc
sub
push
and
and
cmp
mov
or
or
test
movsl
add
les
sti
int
in
fdivp
sbb
pushf
dec
test
fcom
xchg
insb
frstor
adc
pop
jno
je
sbb
sub
inc
addb
pushf
add
add
mov
push
in
xor
shrl
sbb
sbb
enter
daa
push
mov
popa
dec
into
or
sahf
cmpl
cmc
xchg
jmp
dec
ret
mov
popf
xor
int
sub
jle
repz
int3
sbb
xor
dec
std
sbb
jl
mov
mov
test
outsb
pop
addr16
dec
xchg
cli
xor
inc
adc
xchg
adc
int3
les
out
xor
lret
sti
fucomi
mov
lods
mov
in
add
jbe
pop
jbe
imul
add
xchg
cmp
jp
lock
les
dec
mov
and
fcoml
jg
gs
mov
inc
dec
xchg
pop
cwtl
sahf
cld
cld
xchg
xchg
and
rcll
mov
frstor
cmp
mov
mov
jns
fnstenv
fnstcw
mov
out
je
cmpb
jl
movl
inc
xor
test
aam
mov
loop
xchg
adc
push
jl
xchg
adc
sbb
repz
les
pop
loop
inc
sub
loopne
or
xchg
call
pop
xchg
mov
push
or
out
push
lods
or
push
mov
pusha
out
and
das
jle
mov
cmp
cmp
mov
sub
adc
subb
push
mov
sbb
cmpsl
clc
jmp
cmp
jnp
push
out
std
sbb
lret
add
ja
cs
lret
dec
xchg
dec
call
sbb
mov
xchg
add
lret
jle
jmp
scas
lahf
imul
fisubs
sbb
call
or
push
and
jb
xlat
push
xchg
mov
cltd
data16
xor
scas
jge
ret
lahf
data16
imul
imul
mov
cltd
in
nop
xchg
jl
mov
mov
sahf
arpl
aas
insl
inc
lret
shl
cmp
daa
int3
in
jp
and
sbb
mov
add
cli
inc
stos
in
data16
mov
pop
mov
leave
ja
std
out
flds
mov
lock
hlt
fdiv
sbb
nop
jo
push
sbb
les
sbb
pop
dec
std
shll
insb
dec
aad
fldenv
push
mov
mov
dec
fists
repz
jl
or
dec
cmp
cmp
xor
test
lcall
inc
fisttps
mov
pop
mov
jne
jl
sahf
pop
pop
mov
cmp
jne
leave
inc
test
fcomp
test
xchg
les
adc
sbb
pusha
test
xchg
jno
xchg
cltd
addr16
sti
pop
loopne
movsb
pop
push
push
test
and
push
and
ds
test
adc
movsb
insl
cmc
scas
and
mov
xchg
xchg
les
push
adc
adc
aaa
jecxz
insb
pop
ja
mov
mov
or
and
test
in
dec
cli
pop
dec
ficompl
push
dec
mov
sti
mov
inc
incl
add
add
xor
inc
addb
mov
add
add
je
adc
in
decl
dec
and
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
cmpb
xchg
rolb
pop
fisttpll
pop
test
jecxz
xlat
mov
in
push
or
int
scas
pop
stc
mov
popa
xlat
aaa
jnp
fldenv
pop
push
mov
push
push
pop
mov
inc
leave
pop
ja
mov
sbb
dec
pop
and
jno
mov
sub
dec
mov
adc
inc
pop
mov
push
pop
sbb
or
jae
push
mul
jbe
xlat
adc
ret
xchg
pop
mov
rorb
jb
bound
orps
ss
dec
jg
es
or
jbe
ja
int
push
mov
ljmp
xchg
xor
mov
dec
fisubrs
push
cmc
xchg
imul
pushf
int3
lods
inc
inc
pop
ds
cmpsb
jmp
mov
pusha
ljmp
pushf
loopne
insl
push
ret
xchg
ds
shll
xchg
jns
mov
add
lock
add
inc
xchg
cmpsl
xor
lahf
adc
and
or
xor
push
mov
mov
in
mul
lcall
stc
jp
pop
xchg
outsl
and
mov
jmp
pop
dec
pop
cwtl
outsl
int3
dec
dec
or
out
add
cltd
sbb
cld
dec
outsl
frstpm(287
loope
pop
jae
ljmp
sti
jo
insb
jno
pop
adc
jp
jbe
orl
subl
scas
sbb
inc
jns
call
pop
out
push
xor
call
mov
sbb
inc
outsb
stc
lods
cltd
out
jo
push
nop
in
shll
add
aad
jecxz
adc
out
movsb
push
mov
hlt
test
rorb
jne
loop
push
mov
stos
dec
clc
ds
sets
sub
mov
jb
sub
shlb
sub
or
mov
mov
cmp
rol
fistps
nop
into
fistl
mov
jmp
js
roll
xor
scas
in
xchg
and
pop
jne
push
mov
rcrb
jge
pop
xchg
push
push
gs
stos
insl
jne
into
push
sbb
test
inc
inc
dec
ss
pop
or
mov
pop
pop
mov
pop
ficomps
enter
xchg
cmp
mov
fistl
bnd
cmovae
test
fstl
sbb
mov
add
shrb
movsb
and
mov
and
and
inc
adc
leave
pop
repnz
popf
lret
jl
pop
sbb
dec
xorl
movsl
jo
idivb
adc
mov
sub
pop
shl
mov
fwait
mov
fwait
ret
lahf
push
imul
rcl
dec
les
push
xchg
ss
pop
fistpl
push
rorl
mov
divl
out
add
mov
mov
gs
pop
fldenv
stc
inc
mov
imul
or
aad
outsl
jg
aaa
inc
insl
mov
ret
and
and
or
or
leave
dec
leave
and
mov
mov
push
and
imul
mov
sbb
mov
in
testb
and
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
pop
mov
push
sbb
adc
sbb
leave
add
ret
hlt
shll
cwtl
bound
fstpt
mov
cmp
pop
in
mov
cmp
fisubrl
in
jge
or
sub
pop
outsb
mov
push
jo
sub
xchg
popf
hlt
pop
in
sbb
call
xchg
push
sbb
aas
popf
inc
ljmp
xor
sub
sub
xorl
sub
lret
fstpt
jb
or
jo
push
adc
int
jne
sti
std
add
sbbl
hlt
lods
and
scas
mov
ret
xor
movsl
inc
rcll
bswap
mov
inc
movsl
fiaddl
pop
xchg
adc
mov
pop
fs
bound
lods
repz
pop
data16
sub
mov
sbb
in
xor
jecxz
add
test
and
hlt
xchg
je
sbb
stc
dec
cli
xor
mov
xchg
inc
ret
push
cli
mov
pop
mov
dec
lods
pop
shlb
sbbb
bound
das
xor
hlt
leave
push
ljmp
cmp
or
in
cltd
stos
pop
idiv
dec
mov
fs
mov
data16
jo
mov
jp
dec
xchg
sbb
cld
cmpsb
mov
lret
iret
mov
add
out
sbb
mov
mov
mov
mov
inc
sbb
jo
dec
xor
arpl
lock
sub
repz
and
mov
out
or
popa
lods
cmp
jmp
sub
mov
stos
push
and
lcall
adc
or
loopne
sub
addr16
and
mov
mov
aad
xor
xor
push
repz
incl
pusha
aas
jg
repz
push
add
rorb
cmp
ja
push
mov
pop
insb
and
rorb
pop
jae
std
shl
or
pop
addr16
add
push
std
pop
popa
aas
repz
ja
adc
out
gs
data16
push
push
sbb
sbb
cmp
sbb
xor
xorl
adcb
and
es
stos
fwait
sahf
cld
cld
and
gs
pop
mov
pop
push
or
mov
stos
xchg
and
repz
jo
imul
subb
insl
pop
jbe
xlat
ss
push
xchg
mov
nop
scas
jle
sub
insb
and
fs
icebp
xor
sub
sub
in
ret
orl
shlb
adc
outsb
push
and
or
xchg
daa
es
aam
shll
sbb
fnsave
pop
mov
mov
sbb
out
in
mov
lods
lretw
ret
xchg
push
mov
xchg
xor
lods
pop
clc
daa
test
mov
das
in
rcll
dec
jb
aas
add
xor
pop
xor
push
xchg
pop
mov
mov
push
mov
popa
jns
or
popf
out
lds
add
cld
or
inc
adc
lods
sti
dec
lock
ljmp
cmpsb
lds
test
aaa
adc
mov
mov
sub
adc
fs
and
shl
movups
pop
mov
jnp
call
pushf
fisttpl
cltd
dec
aad
sub
das
loop
fimull
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
mov
repnz
std
jne
gs
mov
int3
cltd
arpl
xchg
retw
stos
scas
xchg
aas
insl
sbb
shl
sbbb
das
int
mov
jl
jae
cli
scas
and
jmp
add
or
addl
js
mov
mov
lds
leave
xor
movsb
sti
and
or
jo
insb
lds
mov
data16
stos
add
test
mov
xchg
jl
push
xchg
test
iret
jg
loopne
xchg
cmpsb
pop
xor
test
fs
cmpl
es
jb
cmp
fwait
dec
add
xor
sub
push
es
fimull
jp
movsb
jmp
leave
mov
das
les
addr16
dec
lods
mov
sub
xchg
fnsave
mov
and
rolb
or
xor
lods
pop
mov
jnp
lcall
paddusw
adc
aam
inc
rcl
xor
adc
sarb
or
sbb
shl
daa
xbegin
push
das
sbb
ljmp
mov
push
test
mov
cmc
push
dec
mov
in
adc
imul
cli
inc
inc
cmp
int3
in
or
mov
mov
in
popa
hlt
jns
mov
popa
inc
test
sub
xchg
stc
incl
outsb
inc
fwait
mov
jp
test
push
xchg
push
pop
out
dec
cmp
adc
out
jecxz
mov
mov
clc
hlt
imul
jmp
daa
stos
loope
pop
int
and
nop
and
arpl
shll
push
aam
or
inc
mov
loope
aad
das
inc
mov
push
xchg
lods
test
mov
mov
sbb
xchg
or
mov
test
cwtl
xor
and
insb
sub
jns
shlb
jnp
testb
sub
stc
pushf
std
mov
xorb
mov
mov
xchg
and
xor
clc
jnp
ret
loop
mov
push
jle
fisubrs
push
leave
and
and
cmp
mov
sub
push
lret
lret
icebp
pop
repnz
data16
mov
fisubrs
cmp
push
jae
or
and
movsl
sbb
xchg
xchg
sbb
sub
divl
fisubrs
mov
xor
and
lcall
out
jmp
int
out
es
sbb
into
and
imul
pop
or
js,pt
or
outsb
rdmsr
call
sbb
and
sub
pop
and
rcl
mov
jno
lds
xor
jb
cmp
sub
cmp
jae
pop
mov
cmp
aas
add
aad
push
jbe
jae
fistpl
ljmp
push
mov
lods
je
inc
hlt
mov
inc
and
test
jns
lcall
jle
push
and
imul
fstpt
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
call
jmp
sbb
orb
fimuls
cmpsb
pop
dec
or
lds
jo
sbb
mov
sub
pop
popf
sbb
aad
ja
test
xor
out
pop
cmp
rclb
outsl
pop
notl
sbbl
into
nop
jg
pop
mov
jecxz
push
sti
jno
je
mov
jecxz
xchg
fs
add
push
rcr
mov
addr16
dec
mov
js
jge
jp
sbb
push
mov
lds
movsb
mov
shrl
in
movsl
jnp
out
movsl
add
fs
xor
cmp
or
sbb
ret
sbb
xor
leave
das
call
loop
mov
jb
and
adc
lcall
test
push
pusha
push
mov
gs
ds
imul
inc
sub
ret
shrb
sarb
xchg
pop
aam
daa
lea
int3
lods
sbb
mov
or
xlat
push
mov
mov
add
inc
jnp
mov
push
or
mov
inc
mov
mov
pop
insl
movl
push
cmp
sbb
rorl
jl
sbb
jo
adc
das
pushf
adc
sbb
outsl
clc
lret
sbb
ss
test
aam
aaa
mov
sub
jle
into
mov
cld
loopne
les
jbe
movsb
leave
stc
in
or
push
fidivs
stc
stos
push
fnstsw
jle
syscall
sub
dec
outsb
fcoml
sbb
mov
movsl
adc
test
pop
mov
in
ret
mov
les
arpl
sub
fwait
aas
dec
or
ret
dec
dec
add
outsl
adc
in
iret
fs
call
std
add
jmp
mov
push
lods
repz
ja
lods
lea
aaa
sub
ljmp
push
hlt
mov
mov
popf
sahf
clc
clc
pop
xlat
popa
cmpsb
fidivrs
jp
mov
cmp
mov
test
pop
pop
icebp
rclb
cmp
loopne
adc
inc
inc
inc
xchg
push
fcomp
inc
dec
adc
cltd
mov
sahf
test
push
push
popf
jbe
or
add
jg
or
sub
insl
sahf
out
fwait
pop
imul
or
clc
sbb
add
jp
jecxz
sti
out
out
or
jmp
xor
lock
add
in
mov
push
add
push
xchg
rcr
push
or
andl
xor
stc
cmp
loopne
filds
sbb
sbbl
mov
lahf
xorb
mov
xchg
sub
pop
push
lret
leave
and
out
lods
cwtl
lock
adc
mov
xchg
out
pop
outsl
cmp
imul
xchg
sti
inc
icebp
cmc
and
push
and
and
jne
inc
repnz
fmull
fidivl
mov
fsubs
sbbl
or
fistl
repz
nop
ret
popl
add
jmp
and
sub
and
jmp
dec
in
testl
fwait
push
dec
cmp
lock
stos
mov
rsm
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
ret
jl
loope
sbb
adc
sbb
loopne
loop
sbb
xor
sub
xchg
lahf
xor
push
iret
push
out
fidivrs
pop
sbb
rcr
out
adc
adc
jo
mov
loopne
lahf
js
sub
xchg
xor
ret
out
mov
xchg
mov
dec
orl
dec
rcrb
inc
iret
push
xchg
cmp
enter
aaa
movsl
imul
scas
or
add
or
push
rcrl
aas
sub
dec
hlt
sub
cmpsb
test
push
mov
inc
mov
xlat
and
xchg
cmp
repnz
call
fwait
mov
jl
jmp
movsb
rcr
imul
cwtl
push
mov
push
cmc
pop
stos
jge
mov
mov
mov
and
ds
je
pop
dec
or
imul
shr
inc
movsl
xchg
add
lret
stc
adc
dec
inc
xor
movsl
inc
mov
sub
int3
les
cwtl
outsb
clc
pop
dec
in
mov
push
arpl
hlt
les
stc
mov
mov
daa
dec
or
cmp
jb
cltd
lea
inc
jl
mov
xlat
popf
loope
pop
jno
adc
jnp
js
rcrl
cmc
iret
push
adcl
rclb
loopne
fisubs
xor
jns
jp
test
stc
fwait
xor
mov
mov
adc
imul
nop
push
mov
ss
xor
insb
inc
pop
into
cmpl
lods
hlt
adc
mov
sub
pop
pop
jb
lock
fidivrl
pop
mov
push
ljmp
jne
and
jl
push
ja
or
push
arpl
pop
adc
sbb
push
aam
test
sbb
insl
adc
push
call
push
jo
mov
ss
data16
cmp
std
in
pop
cmp
xchg
mov
xchg
jg
enter
jge
jge
les
lods
aad
rol
in
in
mov
xlat
ret
push
xor
test
mov
xor
mull
das
or
xor
jge
sbb
push
inc
icebp
sbb
rclb
cmp
inc
inc
xchg
dec
ss
mov
or
lods
jl
ds
insl
mov
add
adc
out
daa
imul
cltd
je
cmp
mov
sub
adc
loope
and
aaa
mov
scas
push
push
pusha
mov
mov
stos
lods
push
inc
xchg
andl
xchg
mov
jecxz
dec
xchg
sub
das
sub
pop
jl
ret
notb
adc
cmp
dec
test
jle,pn
pop
mov
or
and
imul
orb
cmp
dec
call
pop
lock
movsl
sub
and
cmc
sbb
xchg
jmp
enter
fistps
mov
pop
loopne
push
cmpsb
mov
cmc
repnz
pop
repz
ss
mov
arpl
in
fs
ds
fsqrt
mov
scas
loop
adc
inc
mov
mov
bound
xchg
fs
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
pop
rcrb
inc
fistl
sbb
adc
sbb
cmp
push
push
idivl
adc
sbb
in
mov
mov
push
cs
dec
repz
ret
xor
shll
je
sub
cmc
mov
xchg
pop
bound
xchg
xlat
dec
es
sbb
jbe
insl
mov
mov
lcall
out
mov
mov
jmp
or
hlt
cld
mov
mov
mov
in
faddl
mov
sub
mov
fnstsw
call
and
push
cwtl
iret
jg
mov
push
scas
xchg
inc
fwait
inc
dec
stc
dec
ljmp
dec
push
popa
add
mov
jge
or
das
ljmp
mov
pop
fs
pop
pusha
pop
dec
mov
into
test
dec
mov
sbb
insb
sti
push
sbb
jnp
lock
ret
leave
pop
or
in
rolb
cld
xchg
arpl
pop
arpl
aas
clc
in
pop
pop
sub
aad
fisttpll
arpl
mov
sub
mov
mov
adc
push
inc
dec
scas
int
mov
push
mov
rorl
sbb
jl
inc
xchg
ror
cmpsl
add
clc
popa
add
jg
mov
sub
mov
add
stos
lock
pop
ret
mov
sahf
inc
cmp
add
aaa
cmpsb
jnp
aam
fildl
movsb
movsb
ret
sbb
call
push
mov
leave
int
fisttpll
mov
jl
pop
fwait
fs
dec
cmpsb
xorl
fistpl
aaa
inc
adcb
gs
jo
in
rolb
divl
repz
jbe
ja
test
fs
push
test
aaa
add
push
pop
add
xchg
mov
jns
xchg
loop
test
jne
mov
push
gs
and
shlb
push
or
loope
sub
insl
add
mov
fmull
frstor
aaa
mov
bound
inc
aad
sbb
imul
mov
and
and
push
mov
or
cmp
lds
das
iret
add
add
mov
xchg
mov
mov
push
sbb
mov
mull
jo
sbb
mov
cli
incb
sbb
inc
push
pop
fldt
and
jo
mov
rcr
aad
jecxz
cltd
add
jecxz
or
ja
mov
adc
cmp
pop
mov
test
ret
pop
adc
sub
sub
lcall
jne
mov
mov
or
and
outsb
imull
pushaw
xor
fsub
sub
sbb
dec
pushf
lret
sbb
adc
xor
xchg
inc
jbe
adc
pop
xor
aad
out
push
push
pusha
mov
pusha
out
xor
push
sbb
xor
inc
and
sub
xchg
cmp
add
int3
pop
lods
push
sbb
push
xlat
xchg
int
cwtl
xchg
rcrl
dec
fisttps
mov
cmp
xor
aas
pop
xor
inc
xchg
rcrb
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
sub
rcll
sbb
adc
sbb
cmp
fisubrs
daa
xorb
scas
pop
pop
add
mov
out
mov
dec
mov
jl
sub
aaa
cwtl
jb
test
mov
push
or
jg
xor
mov
lds
adc
mov
stc
xor
popf
loope
shll
jl
outsb
addr16
scas
inc
cmp
add
in
pop
into
push
aaa
lahf
mov
jcxz
mov
sbb
mov
sub
add
cld
mov
lret
mov
jae
popa
sahf
loop
mov
or
dec
or
xchg
add
xchg
int3
pop
lret
or
add
and
xchg
adc
mov
por
jmp
adc
inc
add
xor
inc
dec
xchg
int3
add
and
jnp
enter
and
mov
loopne
dec
movq
out
lret
xor
scas
ret
and
shl
hlt
mov
push
das
xorb
mov
fldt
out
push
aas
and
bound
adc
mov
fwait
in
roll
dec
push
push
jle
mov
loop
adc
adc
sbb
lahf
imul
cltd
and
pop
and
bound
cmpsb
jp
mov
popf
jmp
cmp
dec
pop
loopne
xchg
lods
std
imul
mov
mov
push
fcomps
repnz
sbb
imul
cmpsl
push
jecxz
adc
loope
sbb
mov
mov
mov
cmp
and
lret
outsl
pop
cmpsb
outsl
hlt
mov
faddl
jg
xchg
mov
cmp
jno
mov
jmp
enter
mov
adc
pop
add
rolb
rcl
mov
mov
clc
stos
pop
test
fisubl
pop
or
sub
pushf
mov
or
and
mov
mov
sub
push
add
sbb
mov
outsl
loopne
into
outsb
xchg
adc
jp
mov
sub
fcomip
std
fstpt
sarb
cmpsb
inc
pop
adc
daa
flds
xor
hlt
daa
inc
out
cwtl
adc
or
clc
or
pop
sti
dec
push
popa
sti
dec
or
and
hlt
imul
popa
adc
jnp
mov
scas
xchg
out
mov
cwtl
scas
jae
xchg
jae
xchg
js
push
xorb
dec
je
push
iret
bound
or
dec
mov
adc
add
jp
cmp
mov
jp
xchg
xchg
mov
ss
arpl
lock
xchg
xchg
aad
push
ret
jno
mov
in
sbb
sbb
dec
int
test
hlt
mov
sub
stos
mov
ret
mov
repz
int
dec
lods
or
jp
xor
iret
xor
movsb
sub
lds
leave
dec
cli
insb
fildl
clc
jb
mov
je
lcall
cld
mov
jns
call
in
je
out
mov
adc
sub
mov
mov
out
xor
aaa
add
push
and
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
lahf
iret
jo
int
sbb
adc
sbb
popa
mov
stos
test
cwtl
mov
mov
fldcw
rcrb
add
je
mov
mov
insb
jns
mov
pop
sbb
xchg
or
push
push
lods
sbb
shrb
add
addr16
or
js
mov
and
sub
adc
push
pop
stos
testb
inc
push
add
adc
dec
or
jge
into
mov
aas
xlat
xchg
dec
cmp
mov
sub
aas
cmp
dec
pop
mov
cmp
jb
fisubl
aaa
add
test
and
es
mov
popa
cmc
jmp
sub
shrl
rclb
popf
xchg
xor
inc
inc
pop
push
and
in
ficomps
mov
push
outsl
mov
std
gs
sub
clc
imul
sub
xor
pop
lea
into
push
in
inc
fistl
inc
mov
or
cmpsl
movsb
cmp
adc
bound
mov
jno
xor
stc
inc
lret
out
mov
mov
jge
add
xchg
fcompl
movzbl
lahf
cli
pop
out
scas
cli
pop
mov
or
lods
loope
cmc
xchg
inc
xor
lcall
lret
xchg
rcl
add
test
ljmp
minps
jge
cmp
shrl
xor
add
or
mov
aaa
xchg
and
std
sbb
mov
xchg
inc
rcll
sub
subb
lahf
pop
aad
add
fdivrp
mov
or
push
jg
nop
sub
pop
xchg
mov
jb
jns
rclb
jp
cmp
mov
inc
icebp
cmp
mov
enter
xchg
push
push
test
pop
dec
xor
pop
lods
xlat
std
jmp
xchg
inc
pop
adc
mov
rclb
fldenv
push
pushf
cmp
and
into
ret
loop
imul
push
popf
push
sbb
mull
idiv
roll
std
add
push
sub
movhps
lock
jb
lds
mov
rcll
insl
xlat
add
xor
in
scas
mov
icebp
das
mov
repnz
loopne
or
mov
testb
mov
mov
paddusw
call
loop
xchg
loop
push
or
daa
mov
stc
lcall
xor
sub
sub
xchg
push
shll
dec
pop
lret
push
dec
fldcw
mov
xchg
int
mov
dec
stc
movsb
inc
sbb
xorl
mov
push
jg
pop
out
jno
mov
and
sbb
orl
mov
add
scas
cs
pop
cmp
pop
jmp
call
and
jp
aas
pop
inc
bound
lds
out
mov
mov
int
pop
push
jbe
nop
in
test
sub
lret
fdiv
ret
add
cli
push
and
xchg
xchg
and
mov
pop
xlat
pop
ds
xor
outsl
add
pop
sbb
pop
pop
dec
fs
es
jmp
sub
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
push
aad
inc
lds
sbb
adc
sbb
sbb
sbbl
cs
pop
mov
out
adc
jecxz
insl
sbb
mov
popf
sub
push
insb
nop
sub
add
pop
jle
fsubr
cmp
fcomi
adc
ds
stos
push
cli
jb
sbb
inc
mov
sub
jnp
mov
js
pop
jge
call
fiadds
jbe
in
aad
dec
cs
shll
mov
mov
adcl
out
xchg
mov
mov
mov
dec
popw
mov
jl
push
std
mov
adc
movsb
test
mov
pop
sbb
es
sub
xor
cmp
push
xchg
push
test
loopne
ljmp
movsb
xor
jnp
push
mov
or
mov
ja
fsubrs
xor
and
xlat
dec
mov
std
std
test
xchg
cmc
sbb
sub
cmpsb
repnz
fucom
iret
jb
or
xchg
out
pop
pop
dec
sbb
in
mov
jmp
inc
and
pop
xor
filds
test
pushf
std
adc
popa
bsr
je
int
leave
mov
outsb
lahf
test
mov
xchg
sub
push
aam
mov
scas
cs
filds
push
mov
ss
mov
pop
push
sub
push
push
pusha
dec
or
sbb
cltd
xchg
movsl
cmp
mov
pop
lock
negb
int
stos
jle
cld
loope
jno
std
sbb
es
xlat
push
dec
sbb
sbb
inc
inc
add
inc
outsb
loope
xor
aad
push
sub
mov
insb
xor
cmp
ja
mov
push
dec
mov
fadds
sbb
stos
and
aam
aaa
push
jnp
loopne
xor
loopne
cs
mov
cld
popa
or
jbe
adc
stos
and
pop
push
pop
fdivl
cmp
sahf
fs
adc
cmpsl
aad
mov
inc
dec
dec
fistpll
xchg
cmc
rol
add
and
mov
shl
shrb
lahf
out
fmul
aaa
xchg
lea
or
sbb
mov
test
adc
dec
push
jge
popf
jb
cmc
and
enter
and
sub
pop
aam
and
cmp
out
pusha
mov
inc
adc
add
mov
adc
jnp
sbbl
and
xor
push
in
xchg
add
push
jnp
xchg
sub
xchg
pop
enter
mov
test
lea
out
enter
fsubrs
lret
fdivr
lods
sbb
outsb
or
mov
ds
add
js
orb
inc
addb
or
sbb
jnp
nop
ficoml
push
int
push
and
mov
sbb
push
adc
cmp
mov
sbb
jmp
sbb
dec
fists
into
leave
xchg
add
lods
xchg
out
mov
adc
enter
mov
push
mov
dec
pop
mov
js
xlat
mov
mov
push
jle
fucomp
loop
test
dec
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
stos
inc
mov
sbb
enter
cltd
fildl
sti
xchg
push
cmp
mov
leave
mov
rclb
shrb
dec
fs
std
adc
icebp
scas
cli
xor
repnz
xchg
xchg
xchg
cmp
jp
ljmp
das
in
data16
lcall
data16
push
dec
pusha
xchg
dec
out
lds
push
sti
jo
call
into
andl
sub
sbb
or
xchg
mov
jns
sbb
imul
mov
or
pushf
inc
inc
xchg
lea
rcr
mov
ret
cmp
fwait
add
inc
push
jp
add
inc
add
fs
and
mov
mov
ror
ret
into
mov
fsubl
jnp
sbb
jmp
aam
repz
ficoms
adc
jns
pop
xchg
insb
in
and
jae
sbb
and
pop
pop
sbb
and
sarb
cwtl
mov
push
and
ljmp
out
arpl
andb
loop
pop
xchg
mov
iret
lds
addl
andl
pop
cli
add
divl
xchg
ljmp
push
pop
sar
data16
pop
rcr
stos
adc
mov
pop
and
loopne
xor
push
add
adc
or
xchg
scas
push
dec
out
fbstp
and
std
inc
movsb
push
xchg
xchg
mov
out
and
adc
leave
and
aaa
insb
xchg
std
or
out
inc
dec
mov
sti
out
addb
mov
mov
push
jmp
push
pop
clc
filds
imul
fwait
xchg
mov
mov
das
mov
outsl
rclb
push
jl
pusha
adc
or
int
sbb
inc
add
dec
push
push
xor
std
pop
xchg
push
jbe
cwtl
sbb
sahf
mov
inc
gs
lods
dec
add
test
in
cli
inc
cmp
out
push
vpunpckhdq
mov
push
lcall
stos
mov
inc
call
push
insl
loope,pn
jno
jge
xor
cmc
jp
and
add
lods
mov
scas
lock
aas
jae
aas
ds
sub
out
outsb
out
pusha
pop
mov
push
sub
push
in
mov
adcl
mov
push
aaa
jb
pop
pop
pop
xor
xchg
mov
dec
aam
fcomps
scas
push
jmp
push
aas
imul
jbe
add
scas
push
adc
loop
lods
addr16
js
adc
mov
or
xor
and
mov
nop
xchg
test
in
mull
es
jnp
movsl
mov
ret
fisubrs
mov
out
xor
stos
adc
xchg
fildl
in
lahf
lock
cmc
mull
inc
out
adc
mov
push
es
jne
pop
mov
pop
shrl
mov
fwait
xchg
imul
push
stos
xchg
pop
ja
shr
sub
jo
jmp
and
subl
xchg
aam
xor
int3
shl
stc
cld
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
jae
mov
arpl
lcall
xor
ds
das
stos
dec
cmp
ret
arpl
repnz
inc
stos
pop
es
dec
mov
orl
jb
sub
dec
dec
pusha
pop
mov
js
lds
or
and
xchg
out
ds
jg
jbe
lcall
fmull
jmp
sub
or
test
into
repnz
sub
sub
shl
nop
call
inc
mov
mov
hlt
icebp
lret
jle
sbb
or
and
mov
mov
dec
xchg
cmp
cmp
jl
movb
mov
xchg
jne
lcall
jnp
iret
lods
clc
jo
jg
add
push
cmp
mov
scas
test
jg
js
mov
es
fists
push
xor
push
or
sub
sbb
int
dec
sbbb
aas
clc
js
subb
mov
loop
push
pop
popf
mov
xchg
popf
xchg
js
xchg
and
sbb
adc
out
jl
jle
test
add
rol
and
out
js
por
mov
inc
xlat
xchg
movsb
mov
or
pop
mov
in
popa
cwtl
and
out
es
stos
add
cmp
outsb
stos
jno
fimull
imul
or
fs
repz
mov
cmc
aaa
add
ljmp
shll
fwait
or
push
int3
xchg
cld
daa
mulb
mov
sarl
int
cltd
popa
mov
movsl
cwtl
and
xor
sub
push
add
sbb
out
lods
mov
pop
sbb
cmpsl
stc
sub
scas
test
xchg
cmp
sbbb
mov
xor
and
jmp
sbb
jg
sbb
lret
clc
arpl
sbb
nop
aaa
sub
mov
jmp
repnz
addr16
out
iret
mov
jo
test
ret
xchg
lods
xchg
stc
push
mov
cmc
dec
or
sti
inc
xchg
movsb
loopne
xchg
movb
out
sbb
xchg
int3
jo
inc
mov
xchg
cmc
dec
stos
or
fadd
rclb
mov
xchg
shr
mov
rcrl
and
ret
aas
cmpsl
mov
cld
pop
bound
xor
push
pusha
and
mov
aaa
insb
push
es
mov
push
test
hlt
int
cmp
clc
inc
loope
test
pop
in
push
xor
xchg
ret
and
xchg
in
pop
jne
xor
aas
loopne
stc
or
mov
loopne
ss
loopne
nop
ja
lds
add
and
or
or
adc
imul
mov
pop
mov
or
test
fwait
cmc
mov
sbb
lods
aas
sub
add
mov
in
jp
fstl
inc
inc
nop
hlt
xor
mov
inc
outsl
push
mov
mov
mov
push
and
clc
out
fistpl
insb
cmp
loope
or
loopne
add
cmpsl
mov
xchg
das
fwait
push
pop
push
stos
mov
ja
mov
fnstcw
shl
jne
push
aam
inc
sbb
sbb
push
jp
aas
lret
xor
jge
lea
mov
xor
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
push
shl
sahf
dec
jmp
and
xchg
cwtl
adc
pop
arpl
clc
test
xchg
adc
out
fcmovbe
or
mov
push
mov
addr16
push
sbb
js
inc
cmpsl
scas
xor
fs
aas
mov
insl
addr16
xchg
popf
add
pushf
push
mov
aam
jae
and
dec
inc
or
repnz
loopne
imul
mov
pop
mov
and
scas
decb
repz
cmp
xchg
leave
in
mov
adc
cmpsb
inc
les
fsubrp
or
xchg
mov
xchg
mov
pop
mov
jo
add
push
or
mov
cwtl
insb
xor
dec
mov
scas
fisubl
arpl
sub
lret
mov
in
xchg
repnz
out
outsb
ret
mov
xchg
mov
dec
push
cmpsb
ret
dec
ljmp
fimull
bnd
xchg
ret
push
jnp
xor
pop
sbb
fdivrs
add
inc
out
iret
dec
jmp
out
push
insb
stc
mov
dec
xor
int3
fildl
rolb
sbb
push
or
out
aas
lods
pop
cmp
je
adc
fbld
pop
out
fstps
daa
sub
std
mov
pop
dec
adc
adc
xor
sub
sub
lea
das
mov
fists
stc
jbe
mov
jl
sub
scas
sbb
arpl
add
sbb
sbb
dec
cmp
or
out
adc
pop
or
cli
cmp
ljmp
loopnew
mov
ret
cld
fldcw
test
ljmp
fistpl
sti
cmp
adc
inc
mov
icebp
gs
sub
int
sub
dec
fstl
push
xchg
dec
cmp
jl
hlt
mov
andl
sub
rol
jmp
cmpsl
es
popf
das
inc
inc
or
mov
jmp
xor
sbb
cmpsb
in
test
jle
insb
ss
scas
andl
cmp
mov
rcr
and
mov
mov
popf
cmc
stos
push
mov
mov
es
pop
cmpsl
mov
mov
xor
xchg
dec
scas
js
push
lods
stos
or
loope
lds
xchg
jp
pop
dec
and
add
stos
pushf
mov
stos
iret
fidivrs
test
test
out
out
push
push
jno
sahf
adcb
xchg
mov
clc
out
xchg
xor
adcl
mov
sub
scas
iret
sbb
dec
ds
stos
inc
xchg
stc
mov
mov
rorb
outsl
jnp
mov
or
aam
jecxz
in
dec
out
arpl
add
shll
loopne
rolb
adc
shrb
lds
push
ljmp
enter
sbb
sbb
or
add
sbb
sbb
or
mov
cltd
stos
sahf
call
sub
pop
inc
mov
push
mov
enter
nop
lret
mov
add
mov
push
mov
mov
frstor
and
push
inc
enter
inc
movb
fs
pushf
cwtl
jmp
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
push
rclb
inc
test
sbb
leave
mov
xor
orb
push
or
and
outsb
shll
repz
xor
mov
xchg
pop
lock
pusha
xlat
cltd
sub
adc
jbe
inc
xchg
dec
movsl
xchg
cmc
cld
gs
push
mov
pop
cltd
addb
mov
lods
insl
incl
lock
cmc
dec
push
lods
aam
mov
ja
push
call
fldl
mov
cltd
push
mull
scas
dec
movsl
jp
lock
jl
lods
dec
clc
std
test
fs
pop
sub
push
add
jae
je
inc
rolw
xchg
sarb
jge
mov
add
dec
cmc
dec
cmp
in
sbb
hlt
xchg
loopne
lcall
xchg
dec
cmp
movsb
data16
clc
xor
imul
mov
pop
xor
leave
je
les
daa
lds
test
pushl
mov
test
ljmp
ljmp
adc
je
xorl
mov
sub
ficoml
xchg
ret
adc
cli
test
test
ljmp
loop
xchg
clc
jmp
popa
sub
mov
cltd
aaa
icebp
mov
xchg
pop
jne
mov
loope
pop
lods
mov
push
cmp
mov
sbb
enter
push
loopne
xlat
xor
pushf
jne
push
adc
push
push
pop
xchg
ret
test
xor
xor
insl
xchg
and
outsl
mov
or
lds
inc
xchg
pop
pop
jg
int
das
and
shll
or
push
pop
mov
lea
in
incl
cmp
or
lds
cld
lret
and
sub
mov
mov
sahf
add
mov
cmp
cwtl
dec
xor
inc
dec
stos
xchg
lret
mov
push
inc
ja
or
out
out
mov
adc
push
scas
aaa
cld
sar
das
xchg
push
cld
and
fadd
dec
mov
sbb
xchg
jecxz
divl
inc
in
or
cmpsb
and
or
add
inc
pop
pop
adc
ljmp
or
sbb
mov
pushf
pop
cld
aas
cltd
psrld
sub
popf
mov
dec
mov
inc
push
gs
jg
lods
jecxz
in
push
inc
jb
nop
pop
jecxz
cld
mov
jno
fnstsw
adc
mov
cld
sbb
jbe
lods
dec
je
subb
mov
lret
sbb
leave
arpl
sub
test
pop
out
pop
cli
les
mov
icebp
push
fcompl
shlb
lods
jl
pop
jne
mov
xchg
hlt
add
ret
dec
nop
js
iret
lds
in
psubd
sbb
scas
xchg
insb
into
pop
cmpsb
in
setbe
xor
jbe
jbe
xor
lds
int3
xchg
fcoml
test
inc
lret
std
dec
push
add
enter
xchg
daa
and
leave
fnsave
daa
jecxz
lahf
cli
mov
xchg
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
pusha
cmp
push
mov
sbb
pusha
xlat
addr16
and
pop
mov
adc
fcom
imul
inc
icebp
mov
dec
adc
dec
js
mov
ret
pushl
hlt
or
mov
sbb
sub
mov
leave
cmp
jmp
dec
pushf
ds
fildl
sarb
dec
mov
ss
add
in
jnp
arpl
iret
xor
sub
push
jns
lds
ret
mov
or
mov
pop
xchg
ss
mov
sbb
pop
mov
outsb
push
inc
nop
insb
xchg
xor
in
pop
repz
fcos
cld
jne
xor
pop
inc
mov
push
repz
icebp
push
lahf
stos
mov
and
mov
adc
xchg
jns
mov
in
xchg
rcrl
push
cmp
ret
cs
and
gs
pop
loop
cmp
mov
adc
fwait
hlt
dec
push
mov
ljmp
loop
and
inc
sahf
adc
inc
dec
addr16
out
inc
fildll
add
out
mov
dec
cmp
sub
mov
inc
adc
lock
fisttpl
adc
lret
mov
push
and
in
lods
outsl
add
cs
outsl
mov
mov
sub
xorb
ss
mov
push
jno
mov
les
sub
call
int
in
or
js
push
mov
dec
inc
and
add
mov
enter
pop
mov
mov
ret
aad
lret
mov
cld
mov
lcall
jle
pop
es
dec
dec
rorl
loopne
loopne
cmp
pop
mov
lock
mov
mov
or
and
add
dec
stos
cmp
push
jmp
jo
sub
das
sbb
lahf
stos
sub
movq
and
sbb
sahf
mov
lret
jmp
ror
cmp
das
popa
lods
cmpsl
imul
loope
xchg
sub
ss
adc
stos
scas
in
xchg
lahf
lahf
and
mov
test
adc
jne
or
movsl
add
inc
mov
cmp
dec
push
and
enter
popa
int3
or
std
xchg
nop
movsl
mov
cmp
push
sub
mov
aas
pop
sbb
pop
sarb
sub
xchg
mov
mov
push
imul
stos
jnp
xchg
xor
mov
cmpsl
incl
out
or
pusha
sub
and
inc
pop
in
inc
cmp
scas
add
pushw
or
ret
xchg
jbe
repz
repnz
pop
or
fxch
adc
std
mov
add
data16
das
pop
loopne
fidivl
xor
mov
std
dec
add
aam
adc
add
out
sub
add
in
fnsave
mov
mov
sub
xchg
jl
nop
add
cmpsl
dec
jmp
pop
aaa
mov
jecxz
sub
pop
shlb
cwtd
inc
adc
inc
ja
ret
stc
jne
fucom
inc
jne
test
pop
arpl
jne
push
dec
xor
fcompl
jp
faddp
repz
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
adc
stos
pop
fwait
push
sbb
adc
sbb
pop
daa
lahf
pusha
inc
jg
lods
sbb
int3
mov
shll
mulb
divl
je
add
outsl
or
loopne
mov
jnp
sbb
dec
ret
add
das
cs
sbb
push
cmpsl
iret
and
nop
fstps
in
hlt
icebp
iret
cmp
sub
cmp
ja
les
jp
cmc
fistl
lret
mov
cmp
ret
cltd
cs
test
cmp
pop
pop
rcrl
inc
imul
and
cmp
dec
adc
lea
test
mov
push
rcrb
insl
aam
xchg
adc
add
pop
insb
pusha
pop
sub
lea
add
jecxz
fistps
jg
mov
pop
push
xchg
aaa
inc
jmp
jb
gs
pop
int3
fbld
notb
daa
push
jnp
xchg
loopne
scas
add
jl
mov
sub
add
mov
and
pushf
subb
adc
and
push
push
rorb
int
popa
hlt
fcomps
xchg
cmp
shll
mov
lds
inc
mov
nop
addl
pushf
push
pop
fistl
mov
xchg
pop
mov
in
and
ficomps
mov
sub
add
nop
mov
testb
ss
cs
stos
cld
inc
fidivs
pushf
xor
jno
sub
mov
fmull
add
mov
xchg
lods
jo
mov
jb
testb
adc
fmuls
sbb
fbld
add
dec
xchg
or
push
loope
ds
dec
push
jbe
adc
data16
mov
sahf
icebp
push
mov
dec
stc
imul
stos
sbb
cltd
lea
mov
xor
insl
cmc
xchg
lods
jmp
push
ficomps
mov
xchg
xchg
aad
cmpsb
or
or
xchg
xchg
cmc
cwtl
nop
xor
movsl
adc
icebp
negb
in
test
jbe
pop
decb
pushf
rolb
and
pop
jmp
sub
xchg
jecxz
arpl
cld
negl
push
jo
rcll
stos
outsb
jo
lcall
add
inc
es
loop
push
pop
fs
test
sbb
push
jns
xchg
jl
sti
out
mov
push
xor
sbb
test
and
mov
rorl
ss
push
ficomps
jo
push
xchg
jb
jecxz
mov
bound
addr16
mov
cli
movsb
fdivl
and
je
and
es
push
dec
inc
insb
pop
hlt
sarl
add
inc
out
jbe
stc
adc
sbb
call
leave
andl
test
jle
stc
daa
xchg
mov
or
mov
push
add
mov
mov
mov
push
fistpll
fimull
push
cmp
mov
cmc
movsb
adc
pop
in
inc
cld
add
jmp
mov
js
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
or
jl
xchg
push
sbb
adc
sbb
jl
lcall
rorl
loopne
mov
xor
add
mov
xchg
in
push
rorl
xchg
idiv
cld
mov
dec
ds
outsb
jmp
addr16
arpl
dec
and
inc
dec
daa
jecxz
aam
jmp
jnp
cwtl
adc
out
getsec
xchg
cmpsl
and
ficomps
inc
adc
and
mov
or
inc
loope
scas
andb
notb
gs
lret
pop
add
push
lcall
mov
popf
adc
xlat
sbb
jae
lods
stos
mov
inc
fwait
jmp
ds
dec
push
push
mov
lahf
js
pop
js
mov
mov
mov
rol
mov
inc
jecxz
imul
mov
ja
sarb
ds
aaa
xchg
pushf
inc
sarl
ds
add
inc
into
lret
mov
imul
sub
icebp
aas
es
pop
inc
hlt
and
push
dec
outsb
je
pop
xor
xchg
xchg
into
mov
dec
stc
sub
mov
push
and
cltd
outsb
mov
sub
cmp
push
lahf
jge
sub
sti
jo
inc
nop
mov
fists
dec
sar
ficoms
aam
jnp
bound
out
mov
mov
nop
mov
mov
and
fwait
cmp
sbbl
mov
es
sarb
negb
loop
call
inc
xor
mov
inc
jecxz
or
daa
cmc
add
int3
mov
xchg
mov
xchg
xchg
push
pop
out
push
dec
lcall
adc
pop
in
lahf
rcl
sub
arpl
arpl
mov
xor
call
push
xor
call
into
cmpsb
dec
ljmp
bound
cmp
cwtl
push
test
cmpsb
loop
sbb
push
ja
enter
leave
mov
xor
mov
adc
mov
inc
mov
lods
movsl
adc
popf
xor
in
popa
push
push
insb
push
dec
lahf
sbb
push
arpl
rcl
cwtl
jmp
add
bound
push
xor
dec
add
ja
iret
pop
in
xchg
insl
mov
inc
bound
jo
inc
lret
subb
scas
int
scas
xchg
in
inc
sbb
and
daa
mov
lods
pop
js
push
mov
fists
movsb
loope
jmp
add
outsl
call
in
add
adc
xor
dec
cmpsl
fs
sub
iret
xchg
and
dec
sti
js
ret
hlt
mov
mov
test
lea
mov
outsl
adc
pop
push
jo
adc
in
mov
mov
inc
js
aad
or
shrb
mov
js
lcall
pop
sahf
pop
fldcw
dec
or
movsl
cmp
fldl2t
mov
enter
push
mov
mov
mov
mov
mulb
add
dec
ret
mov
scas
into
inc
sub
imul
lret
cmc
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
inc
cwtl
lds
push
sbb
adc
sbb
fidivrl
and
mov
push
and
test
add
jbe
lahf
lods
rorl
cmp
repz
orb
bound
cmp
aad
mov
std
ds
xor
bndstx
movsl
sbb
fldl
sub
flds
inc
stos
arpl
inc
lds
pop
ret
bound
adc
mov
cmp
jo
das
sub
dec
insb
je
mov
sarb
fsubrl
add
stos
and
add
ss
sahf
pop
nop
shll
test
out
xchg
stos
mov
adc
jne
and
jmp
jne
pusha
push
ss
das
test
mov
cmp
bnd
jb
fwait
jae
mov
push
jg
add
int3
pop
and
leave
jnp
xorb
push
shrl
shll
rorb
fidivl
lock
jb
add
mov
xchg
std
lock
jecxz
adc
into
mov
jno
pop
out
dec
cmp
adc
or
mov
dec
ret
cmp
jns
out
jmp
scas
pop
test
sub
aas
test
fisubrl
jmp
jno
mov
push
push
adc
mov
mov
and
xchg
loopne
mov
jo
rcrb
push
sub
push
ljmp
xor
adc
rolb
scas
mov
cmp
fistpll
mov
cmp
push
pop
mov
xchg
in
mov
imul
adc
sbb
gs
xor
lock
push
push
imull
lock
jl
into
cltd
mov
push
mov
cld
mov
xchg
dec
mov
xchg
cmp
mov
outsl
insl
lret
sbb
iret
xchg
cli
add
jno
test
adc
push
dec
xchg
xchg
sbb
inc
pop
xor
push
leave
js
dec
sbb
inc
pop
out
mov
aam
clc
xor
push
jge
dec
flds
fwait
and
sbb
xor
mov
pushf
icebp
add
in
leave
fldcw
int3
insl
xor
test
cmc
jle
xor
dec
out
neg
orb
add
loop
lods
jb
mov
repnz
xchg
xor
sub
pop
inc
mov
ss
pop
rorl
ret
cld
sti
std
popa
or
push
push
es
movsb
enter
lea
mov
rdtsc
and
xchg
in
insl
push
cmpsb
xchg
repz
frstpm(287
lds
push
add
fadds
sub
popa
pop
movsl
aad
test
add
or
je
gs
add
sti
jo
add
and
imul
mov
and
lds
enter
incb
push
imul
lods
pop
into
add
push
lret
shll
and
and
push
lret
lret
mov
sub
sti
dec
pop
adc
out
cld
and
test
sbb
xchg
inc
aam
cmp
pushf
xorl
sub
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
in
inc
push
xchg
sbb
adc
sbb
jnp
pop
add
inc
ficompl
ljmp
pop
add
aam
xor
aas
adc
cwtl
ret
add
push
ja
pop
rclb
mov
jns
sarb
and
mov
in
mov
loop
lret
sbb
call
sbbb
or
xor
push
cmp
nop
cmpsb
imul
testl
pop
mov
pop
aaa
jne
jo
xchg
and
xchg
cmp
xchg
cwtl
ror
repnz
ret
nop
inc
xchg
jg
arpl
iret
mov
sub
std
mov
pusha
out
jnp
cs
dec
mov
mov
cmpsb
jnp
call
in
push
jmp
and
nop
addl
fs
repz
sbb
jne
cli
loop
sahf
aad
mov
idiv
jb
aad
mov
push
add
daa
stos
mov
push
sbb
stos
aas
fsubrs
jle
int
push
repnz
into
pop
sbb
dec
adc
int
out
int
pop
jae
ja
ret
and
bound
cmc
fdivrs
push
push
subb
mov
pushf
or
fcmovnbe
dec
repnz
mov
xchg
mov
std
xchg
out
out
enter
je
and
cs
sub
das
in
out
push
lret
push
push
jp
test
push
repnz
pop
mov
imul
and
mov
movsl
jl
fdivrl
dec
pop
lret
jnp
add
sbb
xor
test
mov
mov
xchg
lahf
cltd
lock
stc
jp
nop
adc
or
dec
or
sbb
mov
out
cmp
push
adcb
mov
arpl
int3
push
rdtsc
push
fcmovnb
lahf
ljmp
xchg
mov
pushf
je
cmp
sbbl
fimuls
and
or
shlb
sub
popa
aas
ds
push
dec
sar
jbe
test
push
insb
push
imul
pop
push
ret
je
sbb
or
rcrl
rclb
into
mulb
dec
and
pushf
out
adc
movsb
aam
or
mov
xlat
xchg
mov
push
cmp
pop
pop
and
out
or
mov
pop
pop
das
outsl
inc
sbb
test
push
or
pop
in
fbstp
cltd
sahf
lock
out
pop
pushf
ficomps
ja
cmpsl
jg
pop
dec
icebp
sub
sbb
lds
scas
imul
xor
ja
lret
dec
in
cmova
bound
xor
push
xor
cmp
jb
pop
stos
mov
fdivrl
out
cmp
pop
xlat
sahf
and
je
sub
add
leave
mov
mov
xchg
mov
xchg
test
mov
out
sub
rcll
push
movsl
iret
jns
cmp
imul
mov
pushf
andl
scas
sbb
mov
rorl
sub
int3
shlb
xor
pop
sbb
or
mov
imul
adc
and
fucompp
cli
pop
cmpsl
dec
shrb
push
mov
arpl
dec
clc
in
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
sub
and
sbb
pop
mulb
cs
aas
mov
and
ds
push
daa
adc
inc
pop
mov
push
in
cmp
fisubs
les
dec
mov
mov
and
cs
in
inc
lret
cs
adc
xchg
add
jbe
and
push
pop
into
cmp
xchg
pop
jle
ljmp
shr
imul
aaa
mov
aad
test
xor
das
jle
push
pop
and
mov
bound
les
and
push
jb
sahf
mov
aam
xchg
inc
xchg
push
fdivl
jne
add
aaa
or
ret
popf
stos
imul
cmc
xlat
hlt
sbb
and
mov
adcb
mov
inc
xchg
mov
push
mov
dec
mov
test
sub
jnp
pop
jns
add
pop
add
sub
inc
shrd
cld
and
in
lock
loopne
fmuls
insl
lods
xor
stc
pop
cltd
lods
ret
inc
mov
iret
dec
jno
xchg
je
movsb
pop
addr16
repnz
add
pop
jbe
push
dec
mov
inc
push
xchg
gs
jecxz
cmc
cmp
jp
mov
fisubl
gs
fstps
and
inc
scas
lcall
dec
jge
mov
lret
es
loope
add
cmpsb
or
adc
inc
lahf
xor
subl
out
dec
arpl
push
loope
mov
rorb
fisttps
cmc
arpl
mov
mov
jecxz
shll
rorl
cmpsl
leave
int3
mov
movsb
xlat
dec
cmp
js
cmp
data16
rclb
sub
jge
xchg
sbb
jmp
push
pop
das
pusha
shr
clc
ljmp
push
arpl
xchg
fdivs
cmpsb
test
push
jbe
cld
jns
add
mov
sub
scas
jae
shrl
pop
jg
mov
and
sbb
pushf
outsb
jp
shlb
daa
sahf
nop
sbbb
loop
sub
cmp
shrb
sub
daa
arpl
popa
scas
mov
int3
shrl
lret
adc
xchg
mov
dec
sahf
hlt
and
push
cmp
add
add
cs
jbe
inc
jmp
xor
or
ja
xchg
rcl
pop
or
adc
push
test
jae
ret
jb
pop
clc
pop
dec
outsb
jno
add
mov
sbb
loope
js
sbb
jne
lea
xchg
and
rorl
lahf
mov
mov
std
inc
xor
inc
imulb
es
pop
jae
cmp
inc
imul
mov
cmp
aaa
popf
xor
aad
loope
push
ljmp
sub
sub
popf
stos
popl
movsl
js
bnd
mov
pop
lds
and
push
mov
pop
sub
out
jp
jnp
fcmovb
mov
lcall
push
idivl
inc
cmp
xorb
ficoms
cmp
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
stos
popa
jo
jns
sbb
adc
sbb
les
adc
inc
fidivs
sub
or
repnz
xor
nop
das
mov
sbb
idivb
shll
subb
nop
adc
shr
or
push
inc
stos
iret
sahf
js
or
jl
inc
and
adc
mov
and
add
repnz
jmp
mov
mov
push
test
bound
xchg
inc
shl
pop
dec
jp
dec
in
mov
aam
sahf
ds
and
sub
pop
les
xchg
inc
lahf
test
jecxz
and
sbb
icebp
push
aaa
or
ret
int3
pop
inc
jo
push
adc
pop
orl
inc
lods
sub
sub
cli
insb
into
mov
adc
push
ret
and
cmp
pop
popa
push
add
movsb
into
mov
sbb
sub
mov
cmp
sub
or
lret
inc
iret
or
mov
stos
jns
lods
mov
cmp
shl
or
test
cmpsb
jb
outsb
inc
addr16
dec
mov
insl
push
push
lahf
push
sbb
lock
or
inc
mov
mov
lock
xchg
cld
in
push
lods
xchg
hlt
sbbl
xchg
insl
pop
mov
arpl
mov
pop
ja
sub
mov
call
cmp
inc
mov
jl
xor
sahf
arpl
push
dec
adc
cmp
ret
mov
push
mov
enter
adc
or
pop
shlb
out
xchg
repz
test
jne
and
mov
or
stos
dec
jecxz
bound
outsb
fsub
xor
fldl
or
test
pop
jp
mov
and
rcll
and
xor
leave
fimull
mov
cmpsl
divb
outsb
adc
xor
dec
sub
call
adc
push
pop
dec
xor
jmp
jmp
out
xor
sub
jmp
xchg
add
fmuls
lahf
das
dec
or
mov
fwait
pop
popa
cmp
shll
lcall
or
rcrl
xchg
nop
push
mov
test
aad
nop
sbb
ja
ja
je
fcmovne
jns
pop
and
imul
xchg
cmp
cmp
pusha
sahf
pop
xchg
xorb
pop
out
adc
jp
out
adc
mov
dec
inc
inc
sahf
jno
push
lds
dec
adc
xor
int
and
jb
lcall
inc
call
pop
es
hlt
dec
fiadds
xor
stc
pop
daa
and
push
in
lcall
lret
mul
xorl
push
lods
mov
adc
in
sub
pop
jge
dec
mov
dec
adc
or
or
xor
cmp
jb
cmp
mov
and
pop
imulb
bound
out
pop
lcall
adc
xchg
push
sub
cmpsb
or
popf
mov
je
or
inc
in
test
test
adc
sub
pop
sub
push
test
mov
xor
cmp
rcrb
imul
push
int3
ret
jno
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
insb
inc
push
jno
sbb
adc
sbb
mov
loope
mov
loop
mov
or
sbb
xchg
jb
std
or
aam
test
push
mov
testl
add
mov
xchg
xchg
mov
sbb
in
outsl
iret
sbb
daa
aam
sub
lock
or
pop
int
jnp
in
outsb
sub
sbb
xchg
push
in
in
movsb
imul
loope
ss
adc
add
push
push
ret
repz
sbb
inc
imul
or
je
das
inc
or
jge
jmp
fldcw
and
jmp
mov
fsubrs
mov
aas
ss
sub
inc
push
pusha
std
arpl
in
test
cwtl
jge
xchg
das
aad
lods
pushf
aaa
add
mov
sti
popa
shl
or
das
pop
in
adc
leave
loop
sbb
out
mov
xchg
loop
int3
stos
ljmp
out
push
out
rorl
test
mov
aas
lahf
fwait
sub
dec
in
jo
or
roll
jno
cmp
std
adc
add
jmp
mov
test
mov
rcl
push
inc
or
pop
xchg
movsb
add
stc
lret
adc
hlt
sbb
sbb
xchg
adc
jne
mov
and
push
mov
lahf
arpl
push
test
fisttpll
pop
xorl
test
insb
xchg
insl
sbb
jl
pop
popf
pushf
mov
xchg
adc
xchg
rorb
aad
sub
hlt
mov
out
mov
or
or
inc
ja
sub
std
mov
daa
out
les
jns
add
mov
int3
push
and
arpl
cmovno
andl
sahf
popf
insb
cmp
sbb
xchg
sahf
mov
dec
ss
aas
mov
jecxz
arpl
sbbl
xor
jno
in
shll
fdiv
xchg
pop
sbb
stos
cmp
xor
push
jp
push
xchg
repnz
orl
out
mov
nop
jge
pop
sub
fsts
sub
into
loop
sbb
das
inc
and
xor
add
pusha
dec
xchg
mov
inc
lcall
dec
inc
push
sbb
pop
add
jbe
ljmp
int
cmp
xchg
aad
test
fwait
cmp
rorl
push
jbe
jae
stc
repnz
mov
cmp
mov
mov
pushf
ljmp
add
xchg
std
idivb
lahf
test
ret
jns
mov
fmull
aam
adc
es
push
push
dec
ljmp
es
inc
xchg
call
mov
mov
inc
add
xor
xorb
push
push
pushf
adc
popf
orl
nop
adc
cwtl
addb
and
int
mov
mov
in
sub
divl
pop
xchg
in
pop
cmpsb
xor
lret
loop
out
inc
rcll
xchg
mov
adc
mov
js
cs
mov
loop
movsb
mov
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
gs
mov
adc
sbb
lret
test
cli
pop
shlb
add
pop
pop
movsl
mov
aas
stos
ds
sbb
lret
stos
cltd
icebp
pop
or
lret
inc
cld
xor
mov
and
add
or
adc
mov
inc
jns
out
pop
push
call
les
adc
cmp
lcall
xor
repz
push
jge
pop
add
push
jb
test
jecxz
or
adc
fmul
jge
shr
push
mov
jns
ja
out
cmovp
xchg
jl
inc
cltd
cmp
inc
shlb
pop
push
mov
inc
shll
mov
ret
dec
mov
repnz
test
jg
and
inc
mov
fwait
jl
and
xchg
cmp
jne
nop
push
es
jl
cli
loop
sbb
dec
or
nop
cmp
sti
push
inc
shll
mov
xchg
aaa
and
test
test
sub
inc
jne
jns
xchg
inc
sti
nop
andb
adc
in
adcb
mov
and
ffreep
mov
and
cs
push
ss
pop
imul
inc
and
arpl
ret
xchg
mov
xlat
test
aas
bound
sbb
dec
shlb
sbb
or
insl
inc
test
cmp
testl
pop
mov
imul
icebp
dec
adc
imul
inc
pusha
mov
push
sub
repz
cltd
xchg
outsb
hlt
sarb
ret
dec
daa
js
jno
ret
insl
daa
cmc
stos
insl
insb
mov
jle
stos
mov
ret
mov
dec
push
adc
movsb
sub
in
inc
jb
xor
lea
jp
mov
jg
mov
or
call
add
into
adc
aam
and
out
or
mov
jns
popa
inc
xor
sbb
push
push
jae
inc
lret
imul
mov
leave
fwait
xchg
sbbl
and
aas
push
les
sti
mov
dec
clc
adc
insb
test
xorl
push
popf
repnz
lds
out
jmp
mov
cmp
xchg
xchg
into
fwait
rcr
and
sub
subb
mov
mov
mov
push
push
add
fnstenv
fdivl
sarl
mov
or
in
int
add
stc
push
adc
mov
mov
xor
adc
addr16
mov
aaa
mov
mov
movb
jge
cmc
xchg
lods
out
inc
test
cmp
lods
in
mov
sbb
or
das
inc
jl
or
in
ss
call
jl
push
sub
push
push
out
pop
mov
push
jae
daa
lds
ret
dec
push
or
mov
xchg
shlb
mov
push
stos
mov
push
sub
mov
adc
xchg
push
flds
ficomps
inc
adc
in
jnp
mov
cmc
ss
cmp
xor
lods
adc
addr16
das
cmp
test
jle
movsl
in
popf
xchg
das
or
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
dec
add
push
arpl
sbb
adc
sbb
mov
mov
jmp
pop
shrl
jmp
push
nop
mov
shr
or
or
into
pop
xor
cmp
mov
repz
popaw
mov
jno
pop
idivb
jl
les
add
inc
stos
and
stos
dec
pop
enter
xor
pop
insb
xlat
dec
ss
mov
mov
mov
mov
jle
dec
orl
fiadds
imul
outsl
clc
mov
xchg
jp
pop
iret
xchg
repnz
ficompl
test
lods
sub
dec
inc
repz
jb
mov
jnp
pop
ret
mov
push
pushf
imul
inc
or
lods
into
jp
mov
fisubrs
les
add
sarl
in
jns
mov
mov
mov
js
test
pop
je
sub
xlat
mov
aaa
add
mov
les
sub
adc
shl
push
jle
mov
mov
xor
cmpsl
int
mov
xor
aam
rorl
arpl
add
push
sub
cwtl
in
insb
mov
mov
cwtl
pop
pop
xchg
cmp
ret
sti
push
dec
aas
jb
adc
adc
sbb
cmpsb
int
outsl
rcl
dec
or
outsb
inc
pop
subl
out
lretw
or
sub
loope
scas
cmpsl
popf
pop
mov
fmul
mov
pop
mov
jo
lea
add
add
xor
mov
mov
arpl
call
mov
clc
imul
outsl
imul
icebp
les
push
dec
mov
scas
sbb
push
sbb
ja
testl
xchg
ret
sub
mov
adc
xor
sub
sarl
xchg
xchg
stc
and
mov
and
xchg
frstor
mov
mov
pop
jne
rcr
test
pop
dec
rcrb
nop
icebp
pushf
push
sbb
in
adc
sbb
out
nop
int
inc
test
dec
movsb
addl
xchg
ret
mov
fs
dec
fmull
or
cmp
scas
push
loop
pop
cmp
cli
dec
call
into
cmp
sub
mov
dec
repz
ljmp
jne
push
cmc
in
add
and
icebp
icebp
pop
call
jnp
lahf
xchg
scas
cmp
push
cld
jge
mov
mov
mov
loope
sbb
dec
pop
sbb
lahf
mov
es
sbb
and
imul
cmpsl
daa
popa
xchg
sbb
pop
mov
mov
arpl
sub
push
pop
and
imul
movl
ss
mov
sbb
adc
jg
or
lea
repnz
mov
dec
mov
jb
aad
mov
and
jne
sarl
sbb
les
xchg
xor
lea
inc
out
xor
inc
push
fisubrs
clc
lcall
adcb
fwait
in
jmp
dec
push
adc
arpl
pop
xor
and
icebp
cmpsb
out
aaa
mov
xchg
inc
ds
sub
int
orl
pop
dec
jmp
mov
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
add
mov
and
sbb
pusha
mov
imul
cmp
insl
test
sub
adc
mov
push
lock
iret
jne,pt
lcall
data16
adc
pop
xchg
mov
jecxz
sbb
add
mov
mov
inc
or
out
test
dec
int3
pop
inc
adc
dec
fisubs
add
lds
cmp
lock
cmp
and
loopne
cmp
push
test
lret
divb
fisubl
push
icebp
inc
sub
dec
aad
push
cmc
insl
lods
sbb
movsb
loop
pusha
mov
or
cltd
aas
das
sub
adc
dec
inc
add
mov
rcrb
push
xchg
dec
cs
push
pop
shrl
lcall
push
mov
aas
es
outsl
sub
xor
add
pop
or
sbb
out
lsl
or
mov
dec
sub
mov
sbbb
sub
shl
and
cmp
push
pop
pop
xchg
xor
and
loopne
add
negl
pop
outsb
stos
test
mov
outsl
jo
cmpsl
push
xchg
popf
pop
lds
push
mov
mov
xchg
mov
jae
mov
or
test
push
sbb
enter
push
mov
mov
push
pop
hlt
inc
das
push
mov
push
push
imul
subl
sbb
xchg
cmp
pop
lcall
mov
imul
cmp
je
jle
sbb
popa
in
adc
out
fwait
adc
push
shll
rorl
cmc
dec
inc
jb
add
jne
mov
aam
cmc
pop
add
mov
xchg
pushf
movsl
ret
dec
stc
mov
scas
ss
in
push
clc
push
iret
dec
sub
gs
pushf
lret
xor
jb
mov
ljmp
pop
cmp
mov
dec
mov
stos
das
pop
dec
xor
pop
xor
addb
push
xchg
fidivrl
cmp
adc
iret
mov
into
cmp
pop
add
inc
sub
xchg
cli
in
fwait
inc
ret
gs
repnz
jae
mov
idivl
incl
and
xchg
fisubrs
ljmp
xlat
pop
in
sub
pmulhw
push
iret
mov
lret
enter
into
cld
jge
lock
mov
imul
adcl
add
fdivp
dec
mov
sbb
and
movsl
cmp
cwtl
cmc
ret
testl
pop
hlt
iret
repnz
movl
push
add
mov
out
enter
out
je
cs
idiv
dec
sub
outsb
lods
arpl
jecxz
jle
fcompl
xchg
sub
rorl
cld
stos
rolb
push
or
jp
imul
lods
pop
ficoms
loope
dec
add
sub
push
bound
fsub
cli
int
out
or
lock
popf
in
lret
in
sbb
outsl
pusha
repnz
shll
data16
mov
fs
xchg
sarb
sbb
divb
adc
scas
icebp
repz
and
mov
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
jle
jo
push
push
sbb
adc
sbb
in
outsb
inc
loop
lahf
push
cwtl
subb
jne
adc
and
push
clc
sbb
or
mov
inc
push
mov
out
scas
sub
xor
adcb
cmpsl
fisubl
das
jns
mov
pop
jno
jns
inc
cmp
push
mov
fs
pushf
xchg
sbbl
test
mov
inc
nop
sar
daa
call
mov
and
xor
adc
movsb
inc
sbb
dec
jne
add
lods
mov
movsb
iret
jge
jmp
dec
push
roll
in
mov
popa
mov
and
xor
out
pop
sbb
cld
int
pop
mov
or
test
mov
jnp
out
add
inc
pusha
cmp
je
xorb
inc
imul
pop
mov
ret
shlb
cmp
adc
test
repnz
pop
scas
xchg
dec
or
sub
out
mov
inc
or
sbb
adc
xor
and
xor
push
loope
cmp
cmpsb
lods
push
ljmp
sub
pop
movups
lea
cld
push
and
rolb
lea
adc
sub
cli
call
jno
scas
add
mov
ja
push
icebp
clc
xchg
cmpb
mov
mov
clc
cmp
lods
mov
pop
andb
push
pop
ret
addr16
loope
pop
icebp
sub
and
enter
std
mov
xchg
lock
jp
xor
sub
mov
loope
add
cs
mov
or
push
in
je
push
mov
pushf
push
int3
shl
dec
shlb
icebp
pop
lea
mov
push
push
jne
jmp
std
int3
cltd
jp
clc
out
and
inc
jno
push
pop
mov
xlat
and
stos
sarl
fildll
xor
jecxz
rclb
int3
imul
cmp
vmwrite
addl
cmp
movsl
enter
push
jge
inc
dec
jo
push
xchg
pop
call
stos
and
inc
dec
or
jp
test
test
sbbb
and
nop
sbb
jnp
jecxz
add
insb
push
das
cmp
and
loope
lea
pop
in
mov
mov
push
aam
popf
cwtl
dec
les
and
aas
xchg
incl
xor
out
push
mov
out
push
push
mov
fcoms
mov
jmp
mov
andl
add
shl
inc
fucompp
mov
mov
es
cmpsl
pop
faddl
jmp
movsl
aam
xorl
pop
push
inc
pop
test
pop
lds
add
movsb
repz
in
lret
cmp
mov
arpl
mov
lock
xor
fildl
jb
xlat
mov
pop
aad
sub
rcrb
addb
mov
arpl
shlb
out
jb
icebp
loope
fisubrs
push
or
push
sbbl
inc
fildl
xor
mov
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
loop
jl
dec
push
sbb
adc
sbb
jbe
adc
insb
das
jbe
daa
push
jmp
pushf
mov
aaa
mov
pushf
or
cmpsb
lcall
testl
jo
rcr
xchg
int3
pop
aam
iret
sub
cmpsl
sub
sbb
inc
mov
stos
lods
jae
mov
test
nop
pop
pop
rcrb
jb
hlt
adc
cmp
inc
mov
fdivs
push
pop
jo
cmp
bound
cmp
lret
out
push
sub
xchg
mov
xor
ljmp
loop
jge
test
push
xchg
pop
sub
aaa
jle
pop
stos
jmp
out
cld
xchg
arpl
adc
bswap
out
mov
and
ret
or
add
cmp
mov
cmp
mov
xchg
lcall
js
lcall
arpl
xor
ret
std
or
decl
push
aaa
jae
ret
stos
sahf
dec
or
andl
pop
scas
loope
and
fwait
and
jp
xor
push
enter
jecxz
inc
adc
test
or
inc
cmp
out
lds
xor
sbb
adc
sbbl
or
insb
inc
loope
icebp
rcr
add
or
jns
xor
xchg
or
int
mov
nop
jp
or
repz
pop
test
sarb
jg
push
adc
jne
ja
or
jnp
xchg
or
mov
rorl
lret
movsl
loopne
jmp
fsubs
pop
jmp
push
jle
add
jns
mov
and
daa
in
lods
mov
dec
inc
sub
enter
jle
out
mov
and
call
nop
test
mov
lods
std
mov
xor
jmp
and
push
push
mov
pop
xchg
adc
fisubrl
push
cmpsb
mov
decb
jo
in
iret
or
aam
lahf
pop
dec
dec
lods
ljmp
or
sub
movsb
sub
repz
stc
cmpb
xor
das
addr16
ja
andb
sub
dec
xchg
sbb
add
adc
xchg
int
xadd
cmpsl
fwait
ret
sar
out
inc
fcoms
ja
cmp
lcall
movsl
jecxz
daa
mov
fcoms
mov
pop
jns
shlb
shll
lret
inc
add
and
sti
cmp
test
jecxz
xchg
rcrl
fisubrl
outsl
inc
ljmp
ret
aam
cmp
js
out
and
lcall
jnp
loopnew
push
xchg
ret
sbb
pushf
mov
cmp
fwait
sbb
and
add
sub
in
xlat
sub
sbb
add
sub
shll
jmp
call
jne
scas
je
bound
push
jnp
sub
gs
test
xchg
pop
aaa
cs
or
xchg
push
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
test
jl
inc
push
sbb
adc
sbb
sbb
fadds
dec
sub
mov
mulb
xchg
nop
sub
lret
push
sbb
cmpsl
xor
daa
mov
aad
loop
jmp
jbe
sub
or
and
or
jp
sbb
movsb
xchg
insb
shl
testl
xchg
push
ja
mov
cli
and
adc
daa
stc
adc
in
mov
xlat
push
cmp
movb
in
adc
push
call
jle
into
stos
inc
adc
sub
scas
add
add
leave
mov
adc
mov
stc
push
scas
das
mov
int
cmpsb
mov
xlat
inc
sbb
test
dec
lea
add
mov
dec
push
shrb
add
int
sub
xor
mov
mov
jmp
shll
adc
dec
test
fsubs
daa
pop
ja
cmp
mov
fcomp
shlb
enter
or
lret
cmpl
sahf
rol
or
adc
insb
jae
enter
cmp
ret
fcmovb
mov
fdivl
or
xchg
xorb
gs
ficoms
sbb
nop
jg
ret
insl
test
loop
mov
push
out
mov
call
xchg
or
mov
jg
scas
push
xchg
int
lret
add
int3
insb
imul
dec
dec
fs
mov
lock
sub
test
sub
cmc
cmp
gs
lods
sahf
pop
push
fcompl
je
repz
fcmovnbe
js
je
xchg
xor
aad
ss
dec
push
stc
mov
or
lcall
add
ret
cmpsl
or
mov
push
call
adc
negl
ret
inc
adc
dec
popa
mov
jge
test
mov
in
cwtl
test
movsl
negb
cmp
dec
lret
mull
jmp
jns
or
cld
adc
lret
mov
mov
adc
xchg
popa
xor
jl
sbb
gs
push
dec
adc
fld
mov
push
repz
mov
stos
out
negl
xor
fdivrs
mov
ret
mov
cli
cltd
in
push
xchg
dec
xor
in
subb
aad
xchg
shll
pop
cmp
inc
ss
adc
ret
jle
in
out
in
mov
dec
sbb
sbb
push
stos
mov
push
mov
mov
int
xchg
clc
sbb
dec
mov
mov
ret
add
ds
cmp
push
mov
dec
adc
bnd
and
pop
cld
scas
stos
sbb
fists
push
push
push
cs
lea
hlt
sub
rcrl
js
aad
or
aas
fistps
movsb
test
or
cmp
xchg
sub
mov
ja
dec
mov
sti
push
test
sar
mov
lret
pop
add
dec
cmp
fistps
push
stos
mov
xor
js
adc
dec
testl
scas
in
mov
pop
pop
xorb
call
inc
in
add
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
loop
lods
dec
fldt
lds
int3
call
push
jmp
pop
push
xor
mov
in
push
movsl
push
or
lea
enter
xor
adc
das
and
mov
pop
or
pop
in
and
and
sbb
mov
push
adc
pop
dec
mov
pusha
cmp
and
js
fnsave
xor
ffreep
je
and
adc
daa
int3
push
cmp
in
les
add
or
lock
je
push
cli
outsb
divl
stos
mov
loopne
mov
outsb
icebp
shrb
push
pop
inc
stos
push
out
add
dec
cmpsl
repz
lock
gs
cmp
mov
jae
inc
xlat
sub
add
dec
and
mov
jno
pop
aam
xchg
out
aam
lea
aas
pop
mov
inc
xchg
mov
fnsave
sub
call
insl
test
mov
fiaddl
insl
and
ss
int
loope
mov
add
xor
rclb
in
mov
lret
pop
dec
dec
lcall
jmp
repnz
stos
jo
mov
cmp
adc
shll
mov
not
mov
xchg
clc
and
iret
sub
push
cmpsb
leave
cwtl
out
lret
adc
push
aas
into
cmpsl
mov
and
cmp
cld
insb
cld
lods
std
xchg
stos
icebp
pop
jns
xchg
hlt
cmp
pop
nop
dec
cmp
dec
sbb
dec
adc
adc
adcl
repnz
jnp
and
clc
fcmovbe
jo
flds
insl
mov
in
in
aam
repz
dec
outsl
and
xor
test
xor
fcmovnb
jns
scas
call
mov
cmp
and
sbb
mov
inc
push
sar
cmc
cmp
out
andb
into
iret
mov
pushf
push
lock
sub
sub
xor
sarl
mov
fistl
jl
pop
add
rolb
outsl
mov
clc
lock
shll
pop
add
and
adc
std
ja
pop
out
repz
jbe
pop
xchg
in
jne
ret
rolb
xor
cmp
mov
sub
rol
lds
jb
mov
sbb
clc
iret
mov
xchg
cmp
cli
xor
inc
jg
popa
jns
or
cwtl
xor
insl
sbb
stos
mov
fimuls
and
mov
ds
and
sub
inc
pop
or
in
leave
push
adc
mov
or
iret
sahf
lea
jnp
push
subb
cli
insb
in
scas
add
lret
push
std
pop
add
mov
es
adc
repz
cltd
cmp
stc
dec
dec
ror
or
sti
or
in
jmp
mov
fs
cltd
inc
sbb
adcl
sub
fimuls
lcall
add
loope
add
and
lret
imul
mov
repz
push
movsl
mov
icebp
lret
cmpsb
shll
repnz
out
jne
jge
pop
jae
in
cmpsb
mov
push
cld
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
stos
out
push
sbb
adc
sbb
add
jno
jns
jmp
insl
xchg
sub
aad
jo
inc
add
test
sub
mov
es
js
pop
mov
rcl
and
cmc
bound
push
xor
and
repnz
aaa
hlt
sub
add
inc
mov
icebp
scas
adc
sbb
popf
scas
inc
add
outsb
pop
xchg
or
dec
aam
mov
pop
pop
imul
mov
or
pop
xchg
mov
inc
aam
movsb
or
mov
mov
mov
movsb
jecxz
jle
mov
mov
jp
pop
pop
push
outsb
imul
jl
cmp
sub
and
jle
mov
xchg
mov
or
sbb
xor
lods
std
pop
sub
inc
jb
loopne
les
jno
push
mov
fsubrs
sbb
pop
mov
imul
sbb
xchg
inc
stc
xchg
mov
sub
mov
xor
xlat
lcall
mov
outsl
jg
into
stos
sub
sbb
lret
movsb
sub
cmp
loop
adc
mov
jo
icebp
mov
addb
in
js
sub
or
and
std
ret
call
inc
adc
fcmovnu
std
pusha
iret
jb
mull
stos
sub
xchg
lcall
mov
adc
mov
in
stos
inc
gs
pop
push
std
fdivr
ret
sbb
adc
xor
es
or
mov
mov
pop
add
mov
jnp
sbb
add
push
push
pop
jne
pushf
dec
aad
in
leave
and
xchg
lods
into
adc
mov
ret
ds
mov
mov
dec
cmpsb
movb
sbb
imul
adc
call
cld
insb
jno
cmpsb
imul
xor
add
leave
bound
xor
jb
out
bound
xor
pusha
testb
jp
sbb
test
and
mov
inc
das
outsl
pop
out
xor
sub
into
pushl
pop
mov
mov
xor
pop
dec
divl
xor
test
push
xor
sbb
inc
jl
popa
add
mov
scas
je
and
lahf
in
cld
sub
mov
dec
push
mov
pop
pop
cmp
fcoms
fstps
sqrtps
je
jle
push
mov
jnp
inc
xchg
or
mov
mov
outsl
inc
rclb
adc
stos
mov
add
xchg
orl
movb
jnp
pop
ror
sbb
inc
outsb
loop
popf
mov
jmp
fwait
jge
leave
or
aam
add
imul
xor
mov
mov
mov
push
mov
sbb
sbb
inc
adc
loope
test
sti
pop
lret
push
xlat
adc
mov
filds
xchg
xchg
aaa
cmp
push
cmp
imul
mov
and
mov
mov
fsts
pop
popa
js
sub
shl
pop
scas
cmp
jns
xchg
jno
inc
mov
movsl
add
das
sub
sbb
push
add
mov
inc
adc
push
mov
push
shrb
push
jge
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
cmp
sbb
adc
sbb
jmp
in
mov
clc
adc
dec
jg
or
xor
loope
xchg
lock
jne
xor
xor
or
test
inc
lcall
xor
jle
into
cmp
jo
into
fldl
push
add
stos
and
xchg
sbb
mov
jno
and
add
lret
dec
inc
cmpsb
add
mov
aaa
lahf
pop
jne
push
jae
dec
adcb
pushf
flds
in
subl
xchg
inc
fwait
daa
or
push
mov
cli
jp
and
mov
mov
fsubrs
xor
out
or
nop
in
jo
cmpsb
mov
xchg
mov
mov
mov
jp
enter
movsb
loope
jp
xchg
mov
stos
fnstsw
mov
pop
adc
lahf
push
scas
mov
sbb
sbb
or
jmp
fwait
lret
sbbb
jge
in
outsl
push
int
sbb
inc
hlt
arpl
movsb
cmp
adc
pop
jne
test
aam
test
or
repnz
or
sub
push
pop
bound
in
fstpt
filds
mov
xchg
adc
das
or
pop
les
and
xchg
jne
add
repz
hlt
sbb
test
arpl
dec
jp
aam
test
mov
mov
cltd
push
enter
jo
pop
rol
cmpsb
adc
scas
pop
sbb
mov
jge
push
pop
and
loope
sarl
or
pop
fcmovbe
idivl
mov
das
inc
lods
adc
sub
ds
mov
out
and
nop
popa
mov
mov
scas
sub
out
jg
sbbl
xchg
icebp
adc
mov
cmp
pusha
dec
inc
and
jecxz
popf
std
fstpt
cmc
fmul
mov
es
mov
mov
negb
mov
sub
push
xchg
sbb
lret
test
add
xchg
insb
flds
out
jle
add
sub
pop
ficompl
aad
adc
in
into
aam
enter
add
inc
mov
into
dec
sub
jp
mov
xchg
jmp
push
mov
xchg
shl
adc
std
and
mov
sbb
ret
adc
xchg
inc
lods
fmull
jle
mov
ds
push
imul
hlt
negb
and
jge
xchg
movsb
xorl
pushf
leave
das
add
sbb
lods
rcrl
add
test
adc
addr16
test
mov
lods
ja
lret
dec
jne
push
loopne
adc
ja
test
iret
mov
mov
push
iret
sbb
popf
test
fdivrs
mov
sahf
sub
inc
inc
shrl
mov
test
lods
fisubl
out
mov
sub
push
cmpb
into
push
movsb
adc
int3
mov
mov
bound
rorl
or
pushf
xchg
das
mov
jge
or
pop
cwtl
ret
rorl
std
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
dec
xchg
mov
and
sbb
mov
filds
mov
push
cmp
xchg
pop
sub
into
adc
inc
and
push
mov
sub
mov
addb
or
lcall
in
into
mov
imul
mov
add
sub
sbb
shr
mov
fmul
and
repz
inc
subl
and
mov
test
push
add
adc
sbb
adc
inc
and
cld
xchg
andb
pop
insb
cld
pop
leave
rolb
jmp
add
add
sub
dec
mov
scas
fwait
push
lcall
and
mov
arpl
mov
out
sbb
ds
inc
or
fmul
in
push
lahf
mov
enter
push
cmp
das
jb
sub
fnstsw
out
sbb
lahf
fstpl
addr16
add
xchg
pop
ja
shrb
inc
add
xor
mov
add
or
xchg
lea
stos
mov
int3
loop
xor
push
cmp
out
leave
mov
fwait
daa
dec
movsb
jno
pusha
inc
fdiv
add
push
orl
push
lahf
in
loop
repz
repz
movsl
popa
insb
mov
inc
mov
cli
and
inc
mov
fimuls
aam
clc
pop
pop
xor
add
and
arpl
fwait
xor
jbe
lock
jbe
add
dec
mov
ret
call
gs
mov
not
cmpsb
imul
lods
shlb
sub
xchg
lods
dec
nop
das
pop
or
sub
cmp
sti
jmp
aam
andb
pop
mov
push
sub
xchg
out
insb
cmc
dec
lock
cld
jmp
stos
imul
dec
sti
lds
cltd
aad
es
sbb
inc
xchg
lods
jb
mov
std
stc
adc
shll
loope
cmp
out
push
mov
push
lea
sbbl
adc
lea
mov
xor
insl
test
sbb
cltd
adc
xchg
jg
jp
sub
pop
insl
orl
js
jo
pop
jmp
mov
mov
adc
mov
cmpsl
adc
mov
cmpsl
es
insl
mov
pop
idivl
cmp
pop
lods
mov
xor
and
jmp
ljmp
loopne
push
in
loopne
dec
mov
in
or
lds
imul
pop
inc
ljmp
fisttpl
aam
mov
jne
clc
cld
repnz
add
je
add
sub
xlat
push
xchg
and
clc
mov
shlb
lea
xchg
sub
jle
mov
cmp
pop
das
mov
inc
mov
std
getsec
xor
mov
or
aaa
adc
iret
jl
jmp
fisttpll
and
or
das
dec
push
adc
cmp
pop
lret
fcoms
testb
into
mov
xchg
lods
jo
jne
repnz
mov
push
mov
pop
push
mov
pusha
fwait
push
sbb
leave
fsts
pop
fmuls
dec
es
add
int
in
adc
test
jecxz
imul
dec
dec
xor
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
int
add
adc
sbb
fdivl
out
test
shrl
sub
mov
nop
ljmp
cmc
pop
mov
or
jne
rcrb
mov
insb
or
mov
ljmp
in
scas
and
shll
pop
orb
sarb
dec
das
sub
js
dec
inc
clc
out
loope
mov
pop
push
sbb
test
shr
jb
add
pusha
pop
add
sbb
pop
pushf
int3
lds
popa
imul
dec
mov
dec
cwtl
mov
in
imul
ret
dec
outsb
es
das
adc
mov
dec
push
adcb
jmp
sar
ret
mov
movsl
call
in
mov
std
pop
sahf
int3
inc
je
push
mov
and
mov
stos
loop
imul
arpl
je
mov
xchg
xor
mov
pushf
cmp
leave
sbb
dec
cmpsb
add
jno
dec
pmaddwd
scas
cli
xchg
or
rorb
out
hlt
push
outsl
cmp
stc
dec
lret
shrl
push
gs
shrb
pop
xor
add
mov
sbb
sub
xchg
xchg
gs
aam
adc
rclb
mov
mov
inc
data16
cmpsb
popa
fucom
fisttps
call
cmp
lret
mov
enter
push
outsb
pop
or
lea
call
mov
mov
mov
inc
jmp
bound
or
mov
pop
daa
lods
fwait
dec
mov
loope
movsb
cmp
shrl
into
lds
cmpsb
jle
add
in
insl
imulb
stos
rorl
pusha
addr16
pusha
add
shl
or
xchg
mov
fdivs
cmpsb
inc
leave
scas
popa
and
dec
or
add
cmp
mov
arpl
sub
lahf
rorl
jns
jg
ret
fst
ss
sbb
outsl
rclb
aas
fld
sbb
jmp
shrl
jp
cmpsl
pop
mov
pop
mov
bound
les
pop
adc
cld
jecxz
js
loopne
add
dec
sub
dec
and
xchg
mov
lods
rcrl
js
inc
lcall
fsubrp
stos
sub
adc
arpl
and
mov
incb
outsl
add
mov
sbb
mov
or
shl
in
sti
popa
xchg
lds
inc
jmp
aas
push
mov
insb
inc
adc
dec
or
js
jno
insb
mov
mov
fldcw
mov
ret
mov
movsb
push
pop
movsb
js
frstpm(287
pushf
adc
sub
dec
cs
hlt
popf
gs
imul
adc
das
loop
jb
xchg
aaa
or
cmp
pop
iret
aas
jl
fmuls
mov
xchg
sub
xchg
add
mov
jne
ljmp
sbb
push
insb
inc
add
jle
call
inc
ficompl
pop
pop
ret
xor
sub
inc
jecxz
sti
jp
stos
jge
pop
adc
enter
or
xchg
mov
cltd
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
mov
sbb
sbb
out
call
lods
subl
cmpsl
repnz
fidivs
push
scas
repnz
xor
inc
push
or
xlat
push
repnz
jmp
pop
push
mov
jp
cmp
cltd
mov
pop
cmp
pusha
xor
movsl
dec
adc
lods
dec
in
dec
jne
jg
sub
outsl
aam
xchg
dec
test
ja
pusha
mov
aad
mov
mov
add
fisubl
stc
push
fwait
fs
xchg
mov
lds
lret
mov
add
mov
sub
mov
lods
sub
pusha
sysenter
mov
pop
lods
mov
jecxz
or
hlt
xchg
flds
xchg
pushf
jo
mov
jnp
jmp
mov
test
movzbl
repnz
popf
add
xchg
xchg
jb
mov
dec
out
sbb
nop
sub
inc
push
jne
stos
xorb
sahf
xor
cmp
inc
nop
adc
dec
mov
mov
push
mov
and
push
inc
in
ret
xchg
ja
jns
lahf
fcos
inc
xchg
js
lahf
inc
mov
in
sub
outsb
clc
pop
cmpsl
cmp
xchg
cmp
nop
mov
mov
int
dec
dec
push
sub
xor
es
xorl
outsl
push
popa
sbb
insb
mov
or
cmpsb
xlat
mov
inc
push
push
push
jno
mov
in
cmpsb
stos
xchg
movb
sub
pop
inc
ss
jne
je
mov
cmpsb
mov
adc
adcb
es
cmp
cli
mov
xchg
sahf
ja
fwait
scas
xchg
sbb
rcrb
dec
jno
or
fisttps
xchg
push
jae
das
outsl
xchg
push
cli
sub
scas
outsl
shlb
das
inc
jae
pop
cs
sarb
jl
pusha
xor
adc
adc
movsb
shll
add
ss
lds
mov
fldl2t
mov
cmp
mov
cmc
leave
rcrb
in
out
out
je
loope
sub
sbb
inc
cmp
cmc
adc
sbbb
and
incl
test
sub
lcall
lds
adc
aaa
sti
jmp
out
fisubl
mov
sbb
into
gs
popa
cmp
cltd
mov
inc
dec
loopne
mov
cmp
daa
pop
xor
idivb
subb
lret
xlat
jg
sbb
sbb
ret
add
push
lea
cli
pop
pusha
fnsave
pop
sbb
jle
adc
xor
mov
cwtl
inc
cld
add
mov
sub
xchg
mov
pusha
adc
enter
call
jbe
or
cmp
sbb
pop
mov
test
rclb
dec
pop
push
cmc
loopne
and
popa
and
aam
push
stos
and
inc
cld
lret
xchg
mov
in
pop
push
shll
mov
sub
mov
test
cmp
xor
jge
cs
inc
inc
xlat
movsb
xor
in
adc
jge
add
jo
xchg
jecxz
dec
pop
lret
jbe
jae
popf
cwtl
dec
mov
popf
dec
mov
xchg
nop
pop
cmp
in
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
and
sbb
andl
gs
repnz
jno
pop
sub
repz
iret
jb
arpl
repz
add
stos
pop
add
or
out
and
push
lret
sbb
jp
cld
popl
into
xchg
repz
mov
lea
stos
xchg
mov
les
add
mov
adc
mov
out
outsl
aaa
xor
xchg
mov
enter
mov
lcall
pop
sub
pop
adc
sbb
cmp
rcrl
mov
adc
xchg
and
adc
push
mov
pop
cmp
cmp
jmp
insl
out
jg
insl
js
repnz
mov
jecxz
nop
dec
pushf
stos
mov
xchg
or
cmpsb
das
das
dec
into
cmp
pop
cld
cs
mov
int
ds
adc
inc
iret
test
fst
int
lods
out
mov
fs
cli
adc
mov
stos
cltd
dec
daa
dec
mov
iret
nop
loope
cmp
ret
inc
pause
cmp
ret
cli
cmpsb
sbb
out
or
in
cli
lds
outsl
dec
mov
aam
and
xor
je
clc
outsl
ss
repz
push
jp
lods
cld
cli
nop
lcall
push
xchg
push
xor
je
rorb
jb
int3
ret
jno
sub
xchg
pop
mov
lahf
mov
sbb
loopne
jo
mov
mov
js
push
and
inc
insl
ret
mov
mov
cs
xchg
hlt
or
orl
fdivrp
data16
jmp
in
je
in
fcmovnbe
scas
nop
mov
fadd
shlb
clc
cmp
cltd
out
mov
into
pop
jb
xor
dec
mov
mov
push
insb
in
sahf
xor
or
sub
pushf
cltd
test
fimuls
repnz
push
sub
cmpsb
fimull
push
push
rorl
adc
rorl
inc
inc
fwait
push
jo
xchg
pop
movsl
divl
mov
jmp
push
into
aas
mov
lds
clc
icebp
and
cmc
cmc
stc
pop
ret
jbe
mov
ret
popf
sub
add
fwait
sbb
fmuls
repz
mov
inc
test
mov
outsb
bound
leave
mov
pop
lret
pop
cld
lods
lahf
push
repnz
cwtl
repz
xchg
pusha
sbb
ljmp
fs
inc
xchg
dec
xor
fmuls
cltd
sbb
add
mov
sub
mov
jecxz
ss
jo
jb
add
daa
sub
ja
xor
lahf
jb
add
adc
pop
cli
lock
in
lret
xchg
movsl
mov
daa
dec
scas
lret
dec
dec
ret
dec
fucomp
adcl
jecxz
daa
xchg
jmp
xchg
and
or
inc
mov
repnz
or
insl
inc
test
fcmove
and
sti
jb
xchg
test
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
or
sbb
adc
sbb
sahf
cwtl
loopne
daa
sahf
pop
fs
sbb
adc
lods
shl
outsb
adc
sub
lds
mov
xchg
movsl
push
mov
adc
cmp
pop
imul
xor
pop
lahf
sbb
xor
repz
enter
xor
mov
shlb
scas
fldt
fimuls
push
or
stc
pmaxub
subb
inc
xchg
mov
xchg
outsl
pop
inc
popf
loop
in
adc
sbb
call
out
aaa
repz
ss
jmp
insl
fdivs
push
imul
loopne
jne
push
rclb
sarl
dec
arpl
test
lcall
inc
insb
push
dec
xchg
fistpll
pop
add
mov
and
ja
xor
sbb
js
dec
daa
xchg
jle
stc
loope
sahf
pop
mov
arpl
lock
xor
inc
je
sub
insb
imul
ret
lock
stc
mov
stos
dec
mov
or
jnp
adc
xchg
add
shl
lea
jmp
cmp
mov
or
push
popf
mov
pop
flds
gs
out
dec
add
jle
dec
adc
push
jbe
and
sti
push
cmpsb
mov
sahf
loopne
fsubs
mov
mov
pop
mov
pop
fnstsw
dec
adc
mov
xchg
in
push
jge
sub
fldenv
lahf
jmp
mov
adc
cmpsl
xchg
push
mov
inc
mov
and
jmp
and
lret
jbe
addr16
push
sub
pop
imul
sbb
pop
mov
inc
out
dec
sbb
pop
jecxz
push
cwtl
jno
and
jge
add
pop
add
cmpsb
jle
pop
stos
sbb
pop
stc
mov
movsb
mov
movsb
adc
add
push
mov
adc
pop
je
jae
subl
call
xor
out
or
and
ja
mov
dec
sbb
lds
lea
sbb
mov
xchg
repz
mov
xchg
popa
mov
sbb
std
aam
xchg
mov
or
inc
push
fs
pop
mov
or
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
rolb
add
add
add
lret
add
nop
add
and
add
aam
add
push
nop
add
sub
add
inc
mov
add
add
test
add
add
sbb
add
add
add
lret
add
add
sbb
add
jo
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
add
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sbb
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
mov
add
es
add
sub
test
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
push
movsb
scas
or
movsb
pushf
es
add
add
inc
add
add
add
es
add
es
add
es
add
inc
add
inc
out
add
inc
add
inc
add
xchg
mov
add
inc
add
rcl
pop
push
jg
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
andb
dec
sub
add
add
scas
lcall
das
dec
add
jl
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
incb
inc
add
addl
push
addl
push
addl
push
addl
addl
addl
addl
addl
inc
addl
fiaddl
inc
add
addl
ljmp
add
addl
cli
addl
add
inc
add
addb
addb
addb
js
add
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
xchg
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
test
add
test
add
test
add
test
add
test
add
add
sbb
add
cmp
add
push
xchg
add
add
insb
xchg
add
add
mov
add
stos
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
xchg
add
add
bound
add
jl
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
and
add
inc
mov
add
add
pop
mov
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
je
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
add
add
add
jo
add
orb
add
add
add
add
add
mov
add
mov
add
mov
add
add
adc
add
cmp
add
pop
mov
add
add
mov
add
mov
add
les
add
lock
add
add
push
mov
add
add
cmp
add
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
