push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
loope
dec
ja
int3
cmp
mov
jmp
xlat
sahf
repz
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
cld
sbb
pop
pop
mov
test
xchg
pop
mov
sbb
arpl
push
int3
arpl
leave
stc
dec
adc
jns
popa
jp
add
stos
jbe
rorb
daa
dec
aas
inc
inc
bnd
cmp
sbb
xchg
and
nop
jge
jle
dec
es
xlat
sbb
cmp
cmpsl
xor
aam
xor
inc
in
popa
movsl
insb
cld
gs
adc
sbb
das
pushf
js
cmp
in
ret
or
aaa
loop
inc
in
dec
test
lcall
sarl
cs
inc
cmp
stos
or
mov
mov
mov
adc
mov
call
mov
cmp
adc
xor
dec
xor
test
scas
xlat
in
xor
out
iret
dec
mov
pop
add
subl
and
add
enter
adc
les
add
rcrl
cmp
cmc
mov
sti
or
jae
add
mov
shll
pop
and
push
pop
pusha
add
push
cli
cwtl
bound
lock
gs
mov
out
fucomip
fwait
mov
aam
jecxz
xor
popf
test
lret
jp
jg
ret
movsl
lods
push
mov
mov
and
xchg
sahf
lcall
fwait
mov
ret
mov
push
push
sbb
and
sub
xor
mov
gs
sub
mov
dec
xor
vandnpd
mov
aam
jae
cs
sub
icebp
sub
lahf
xor
out
and
jl
or
sahf
mov
decb
mov
repnz
shll
lods
leave
push
mov
mov
push
repz
sarb
enter
push
jecxz
gs
or
mov
fld
cmc
fld1
arpl
xchg
adc
lret
mov
inc
inc
roll
pop
mov
cmp
int
pop
notl
xchg
lock
mov
pop
aad
das
mov
or
push
bound
nop
fnsetpm(287
ljmp
movsl
mov
jb
xor
movsb
scas
jle
sti
fisubrs
jno
rclb
ret
loopne
gs
push
lcall
addr16
scas
sub
fldenv
jno
mov
cmpsb
aaa
andb
ror
pop
mov
hlt
out
adc
iret
or
cmp
xchg
fidivrs
xchg
mov
lret
add
cmp
stos
mov
inc
out
xlat
jae
std
psubsb
mov
insb
push
loope
addr16
stc
bound
cmp
xchg
sub
jb
ret
or
pop
or
cs
mov
jge
lahf
pop
mov
movsb
xor
int
or
outsl
into
daa
out
cltd
subb
loop
cwtl
push
add
shll
inc
cmpb
inc
pop
or
daa
mov
sub
repnz
lret
add
adc
hlt
push
loope
mov
or
mov
or
dec
pop
adc
movsl
xchg
test
mov
add
mov
mov
mov
ja
insb
insl
adc
loopne
pop
pop
loopne
pop
xlat
lock
jmp
pop
push
xor
mov
loopne
inc
add
or
ret
mov
lods
aaa
andl
adc
testb
jecxz
mov
insl
mov
in
shlb
inc
in
ficomps
aam
jg
push
mov
dec
adc
add
cmpb
dec
push
lahf
clc
or
jne
pop
std
subb
xchg
xor
inc
daa
pop
mov
pop
mov
fwait
jne
mov
push
jno
dec
sub
fs
pop
push
movsl
int3
lret
mov
add
mov
cltd
jb
mov
push
jmp
in
cmp
inc
cmpsb
cmp
inc
sub
sub
or
push
shll
add
mov
dec
sub
insl
mov
aam
inc
or
ret
pop
repnz
mov
daa
or
push
or
fisubrs
pop
push
shll
mov
xchg
sbb
sub
mov
iret
pusha
lea
loopne
add
cwtl
sub
cmp
stc
lahf
xchg
iret
xor
enter
popl
addb
loope
xchg
sub
lds
ljmp
ja
xchg
lret
in
mov
push
push
inc
fmull
daa
mov
ficoml
jg
hlt
or
mov
dec
sbb
ds
cld
add
fisubl
push
and
ret
adc
dec
movsl
std
dec
jl
cmpsl
sub
push
jbe
sub
sbbb
jno
mov
aam
fcmovnbe
dec
mov
ret
inc
in
sbb
pop
pop
mov
mov
das
ret
or
pop
mov
dec
push
out
leave
mov
adc
jle
mov
sbb
lods
add
add
jmp
pop
mov
dec
aaa
stos
icebp
rorl
xchg
std
xchg
jmp
movsl
xor
adc
test
arpl
pop
out
adc
adc
sbb
cmp
dec
jl
xadd
jp
iret
add
test
mov
pop
lds
mov
ret
nop
data16
rcrl
scas
repnz
scas
lds
mov
xlat
ret
ror
cmp
mov
adc
rorl
scas
sub
test
cmp
mov
out
testl
daa
or
inc
mov
pushf
inc
adc
lret
lret
fdivp
pop
or
push
call
fldl
or
fbld
lret
mov
out
sbb
jg
sbb
xor
jo
and
mov
pop
int3
pop
cmc
dec
jmp
aam
les
push
jno
aas
xor
sbb
mov
and
lods
data16
stc
sbb
inc
in
fsts
jmp
fisubs
sbbl
jmp
int3
icebp
insl
scas
cli
cmpsb
in
mov
clc
add
cltd
scas
xchg
outsb
add
mov
insb
fsubrs
push
sbb
call
dec
movsb
mov
adc
shll
aas
jne
lods
cmp
ret
repz
lahf
movsb
lea
jp
jns
push
mov
hlt
mov
pop
sbb
jbe
xor
cmc
lcall
out
xchg
ret
fstpt
in
push
outsl
out
data16
mov
inc
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
repz
xchg
cmovno
sub
lret
mov
push
cmc
pusha
jle
rclb
outsl
mov
scas
xlat
lret
and
push
out
cmpsb
outsb
mov
fcoms
ds
sub
movsl
out
add
lcall
loopne
push
jmp
cmp
push
mov
mov
aam
mov
push
inc
push
mov
inc
aad
mov
xchg
mov
add
ljmp
dec
sub
inc
jns
movsb
cmp
daa
add
push
and
aad
out
enter
or
mov
cmp
in
mov
dec
data16
sti
or
xor
and
repz
insb
movsl
inc
mov
aaa
arpl
int3
add
out
rorb
xchg
ds
jns
pop
insl
pusha
inc
or
popa
gs
lahf
sbb
dec
fldenv
scas
xor
pop
les
inc
mov
lret
int3
cmp
fwait
or
dec
sbb
leave
pop
xchg
stc
hlt
je
adc
shrl
sub
arpl
ja
jp
fst
arpl
add
jbe
pop
gs
sti
into
icebp
les
mov
in
adc
aam
cld
loopne
inc
movsl
hlt
pop
addr16
xchg
pop
cmp
cmp
xor
jnp
in
and
mov
mov
pop
pushf
out
imul
pop
nop
jge
jle
sub
push
inc
adc
ss
out
dec
mov
das
scas
cltd
or
mov
pop
outsl
push
push
add
xlat
jge
out
mov
test
dec
cmp
inc
outsl
aaa
shlb
mov
addr16
fwait
outsb
mov
movsl
pop
pushf
sbb
xorl
ret
orb
or
ret
dec
mov
jnp
rcr
mov
mov
rorl
and
inc
xlat
scas
mov
fstl
cmp
das
pop
out
icebp
pushf
lahf
cmpsb
add
inc
jnp
jg
xor
mov
movsl
xchg
sbb
pop
push
add
sbb
ds
push
pushf
sahf
int3
je
aam
fcmovu
fnsave
aaa
movsl
test
and
push
jecxz
sub
mov
ljmp
sbb
icebp
test
and
inc
pop
negl
sbb
pop
test
pusha
loop
aas
mov
pop
xor
xlat
outsb
jne
or
add
arpl
push
ja
iret
pop
xchg
pop
outsl
and
fstps
ds
dec
mov
xchg
cmpb
sbb
push
jl
add
push
adc
jmp
mov
int3
xchg
rcrl
xchg
xchg
xchg
push
inc
dec
mov
mov
aaa
mov
cmpsl
add
and
scas
cmp
test
orb
pop
subl
sbb
or
xor
push
andl
xchg
into
lods
dec
loope
fwait
xlat
aas
pop
xor
push
pop
xchg
mov
mov
lods
sbb
xchg
inc
scas
imull
lock
fcoms
in
icebp
cli
add
clc
jb
popf
and
and
cltd
sbb
fs
fcmovbe
inc
sub
clc
pop
jle
and
lea
aam
pavgb
inc
push
fwait
lcall
inc
lret
inc
outsl
in
mov
pop
pop
fcmovne
and
fists
ljmp
int
xchg
insb
lea
les
adc
add
mov
call
cmp
das
sbb
lcall
lret
movsl
sub
fwait
outsl
imul
adc
mov
inc
sub
incl
cmc
std
insb
shlb
xor
xor
mov
out
fisubrl
push
inc
mov
jno
sbb
dec
pop
pop
xor
addr16
int
cli
sti
js
mov
cmc
adc
mov
xchg
and
aas
lods
popa
and
xor
aam
and
push
cmp
lock
dec
xchg
pushf
inc
shlb
pop
ja
xor
jmp
in
mov
pop
loop
dec
xchg
roll
jae
jecxz
cwtl
inc
push
xchg
bound
lds
mov
cmp
aas
bswap
mov
jle
fsubr
fdivl
icebp
int3
inc
adc
xor
cs
pop
pop
pop
mov
push
repz
loop
push
xchg
mov
mov
xchg
lret
jge
in
scas
jne
push
int
ret
push
iret
sar
sbb
jecxz
cmpsb
pop
vpsubsw
sahf
push
xchg
mov
incl
push
sbb
cmp
xor
aaa
gs
dec
add
cli
icebp
or
outsl
popl
or
js
xor
push
or
mov
and
dec
bound
notb
lods
push
inc
xor
mov
jecxz
cmpsl
sbbl
les
pop
push
out
lods
jbe
pop
xor
add
inc
pop
jmp
je
stc
subb
cs
and
enter
ljmp
jno
loopne
ret
and
xor
cmp
adc
add
and
add
jns
xor
mov
xchg
test
leave
push
fistpl
dec
daa
mov
cmp
dec
inc
mov
inc
mov
movsl
bound
and
fwait
xor
fistpll
mov
bound
hlt
push
imul
daa
cmpb
mov
sub
pop
add
mov
mov
push
mov
lock
pop
je
mov
insb
addr16
imul
sub
mov
inc
push
push
fcmovnb
sbb
push
push
arpl
pop
pop
dec
movsl
jno
aad
mov
xchg
or
in
movsl
cmpsl
xchg
cmp
frstor
or
push
push
xchg
jns
jne
xor
test
ret
ds
and
ret
out
test
dec
cmp
hlt
pop
gs
rcl
scas
mov
js
ljmp
sub
daa
push
std
int3
mov
rclb
ds
rcll
lods
pop
popf
pop
lods
add
es
push
xchg
aas
jno
nop
cmp
shll
in
stos
pop
adc
call
or
ret
fmul
inc
mov
ficoml
popf
push
lret
sbbb
repnz
jge
inc
pop
insb
gs
xchg
std
fsts
scas
mov
adc
pop
cld
or
mov
je
jb
movsb
into
dec
add
clc
push
push
hlt
sub
dec
stc
ret
mov
push
rcrb
ss
js
imul
mov
into
or
gs
pusha
xchg
cltd
jns
dec
push
dec
or
sub
dec
xlat
and
or
jecxz
insb
loope
imul
lea
xchg
fadds
jae
mov
out
ret
xchg
adc
cmp
dec
into
pop
jo
test
or
add
adc
daa
or
jmp
scas
and
addr16
xlat
or
lcall
mov
xchg
es
addl
inc
or
clc
stos
pop
xor
cmp
out
pop
sbb
dec
cwtl
sbb
dec
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
xchg
sbb
mov
cmc
ja
mov
ss
leave
int3
mov
idivl
dec
push
xchg
add
xchg
jnp
push
and
cmpsb
cmpsl
into
fidivrl
bound
repnz
xchg
pop
daa
mulb
insb
xchg
push
cltd
dec
jle
arpl
lret
xchg
and
pop
popf
mov
jmp
lds
sbb
sbb
mov
mov
xor
push
js
pusha
add
inc
aam
mov
out
mov
xor
mov
shlb
sbb
jno
push
inc
xor
mov
icebp
xchg
inc
mov
fs
push
adc
cmpsb
mov
inc
cmpsl
ja
mov
test
rcl
sub
into
pusha
dec
xor
mov
cmp
jo
adc
push
movsb
es
out
loope
lea
xchg
mov
mov
adc
scas
adc
pop
decb
bound
xlat
imul
shrl
dec
sub
xchg
std
arpl
scas
cmp
dec
sub
pop
scas
cmp
aam
arpl
loop
lahf
jg
out
dec
jge
scas
jbe
cmpsb
cmp
sub
lret
jp
nop
xchg
adc
test
scas
into
push
addb
int
cmp
mov
fisttpll
fcomps
mov
test
ret
pop
sub
cmpsb
dec
scas
fdiv
divl
mov
xor
add
lods
xchg
bound
lcall
inc
push
or
lahf
testb
das
push
xchg
aaa
xor
enter
out
ljmp
mov
xchg
sahf
insl
push
out
in
dec
fs
mov
sbb
cmp
mov
cmp
adc
dec
fs
push
sbb
dec
pop
mov
mov
sbb
mov
ficomps
push
cmp
add
pop
repnz
jl
jno
pop
jno
xchg
roll
mov
clc
inc
sbb
pop
sbb
clc
xor
jmp
push
sub
outsb
pop
pop
xlat
pop
add
call
sarb
xchg
add
bound
sti
or
cmp
mov
add
popa
sub
cmc
mov
fwait
imul
movb
test
stos
sbb
xchg
in
movsl
jb
xchg
imul
outsb
jnp
orl
push
push
daa
dec
hlt
iret
add
sub
sbb
test
inc
call
pop
dec
xlat
sbb
and
in
add
shlb
push
xor
fisubl
inc
cmp
mov
nop
pop
pop
cmp
add
push
mov
js
shl
mov
scas
icebp
out
jl
pop
cs
inc
lcall
push
scas
popf
cmp
insl
imul
adc
xchg
bnd
push
and
sbb
sbb
xchg
jae
mov
loope
dec
test
daa
cmp
sub
add
cwtl
in
adc
xor
movsb
jle
gs
test
rclb
xor
dec
js
cmp
rclb
and
into
addl
add
fsubl
repnz
cmp
imul
mov
xchg
stc
mov
add
cmp
xchg
int3
xchg
cli
or
scas
cs
mov
in
mov
sub
cmpsl
mov
lods
push
lods
cmpsl
outsb
test
in
andb
xchg
cmc
xchg
mov
lgs
fnstsw
test
ret
outsb
jmp
or
insl
sub
mov
mov
dec
sub
or
push
pop
int3
outsl
cmc
sub
out
sub
out
stos
dec
push
aas
shl
out
cmpsl
out
sbb
mov
sub
subb
jnp
jge
mov
clc
xchg
adc
testl
or
pop
lfs
dec
add
xchg
xor
pop
testl
push
dec
arpl
or
dec
in
sub
loop
push
add
pop
mov
sbb
lods
push
mov
scas
ljmp
insb
outsb
mov
lret
mov
push
sbb
xor
into
rcrl
inc
jno
push
movhps
mov
push
imul
inc
cmc
mov
not
push
ret
rcr
push
pop
das
jne
xor
cmpsl
add
push
popa
clc
outsl
mov
int
xchg
pop
les
jns
mov
out
lea
jl
inc
int
sti
fsubl
adc
das
pop
daa
aaa
imul
cmp
add
add
xchg
insl
push
cmp
cmpsl
mov
into
mov
push
add
les
or
push
mov
ret
xchg
mov
xor
pop
mov
rcl
jg
cli
jecxz
mov
push
mov
in
mov
mov
es
jnp
inc
lods
lock
xor
jnp
pop
repz
jp
stos
sbb
cltd
adc
mov
daa
stos
lods
lahf
hlt
arpl
cs
popf
push
mov
std
out
or
sbb
jnp
popf
or
insb
cmp
mov
loope
mov
cltd
repz
sbb
sub
dec
fwait
or
or
lock
or
mov
adc
in
mov
sub
in
adc
lods
ljmp
jl
imul
fidivrs
daa
push
scas
sbb
pop
fldenv
cltd
mov
jecxz
dec
icebp
xor
and
fcoms
pop
pop
inc
lret
push
and
mov
bound
imul
push
ret
stos
sarl
inc
mov
ds
fdivrs
pop
inc
addr16
mull
fisubrs
jecxz
jae
mov
mov
in
or
xchg
cmp
mulb
test
sbb
stc
ljmp
mov
fbstp
xchg
jl
test
dec
pop
into
dec
shlb
inc
or
push
xchg
cmp
jbe
inc
mov
push
push
jg
mov
xor
test
mov
xchg
outsb
subl
loope
cmp
jp
or
jl
jl
jnp
pop
sub
test
jge
push
mov
push
jmp
inc
mov
adc
cli
shrb
pop
and
mov
sub
sbb
roll
add
jle
and
mov
je
add
mov
lds
iret
mov
lods
sbb
testl
mov
cs
icebp
into
push
lods
xchg
push
jns
decl
xchg
mov
inc
xchg
movsb
inc
pop
fucomip
sbb
xor
mov
test
mov
js
pop
sbb
cmpsb
scas
sbb
popa
inc
fidivrs
fidivs
dec
ja
mov
sbb
sarl
xchg
ds
stos
ret
jbe
jmp
xchg
push
pop
jge
mov
mov
mov
adc
js
stos
sbbl
int
xchg
sbb
mov
pop
dec
cmpsl
xor
mov
gs
jge
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
cmc
leave
jmp
cwtl
out
ja
jmp
mov
xchg
adc
clc
cld
mov
xor
pavgb
mov
dec
pop
inc
jge
test
mov
jb
out
inc
jle
or
lea
loopne
mov
jle
push
sub
je
pop
cltd
dec
outsb
push
filds
cmpsl
push
cmp
js
gs
adc
test
orl
pop
xchg
stos
sbb
jns
dec
pop
push
mov
jg
add
movsb
inc
cmp
cmp
repz
int3
rclb
testl
pop
or
cli
lds
and
or
xchg
mov
cs
rorl
icebp
lret
jmp
pushf
pop
imul
adc
sbb
ljmp
in
mull
push
xchg
pop
arpl
sub
into
xchg
cs
xor
pop
xchg
iret
sub
fwait
inc
and
addr16
aas
int
xlat
sbb
stc
sub
lret
int
lods
lret
xchg
cli
xchg
ret
or
pop
dec
add
inc
sub
jns
shl
sahf
push
aas
push
adc
in
test
aam
rclb
dec
lahf
fsubr
idivl
movsl
mov
shl
addr16
mov
jp
jne
loop
aam
sar
lods
mov
mov
mov
jns
aas
out
fcmovnu
jmp
pushf
stos
test
or
pop
fmul
or
test
push
jbe
in
xchg
jge
pop
out
cld
ds
iret
pushf
inc
dec
mul
jge
mov
sub
jnp
bound
in
lods
shrb
cmp
push
adc
shr
push
lret
cs
shll
iret
push
jb
cmc
push
or
xor
mov
cmc
or
sbbb
imul
fimuls
nop
pop
call
mov
cltd
js
in
imul
jb
mov
jmp
pusha
lahf
add
rorl
mov
mov
pop
sbb
icebp
adc
testb
push
movsb
stc
cwtl
sbb
or
cld
addr16
mov
jnp
and
mov
push
leave
hlt
inc
arpl
fcmovb
sti
mov
pop
outsl
jle
repnz
push
insb
lods
repnz
xchg
leave
gs
call
mov
mull
fisttpl
leave
mov
push
mov
jae
notb
into
mov
push
bound
iret
ret
adc
fidivl
push
push
rorb
xor
lahf
lcall
outsl
push
mov
sub
call
sub
add
repz
test
xchg
and
test
push
sbb
js
cmpsl
jmp
jnp
sti
add
ret
aam
fs
enter
rol
sub
outsb
mov
adcl
pop
pop
clc
loopne
sub
or
sbb
xchg
enter
adc
mov
int3
stos
sbb
cmpsb
pop
inc
cld
jg
add
loope
mov
sbb
fs
andb
dec
repz
sub
outsb
inc
das
sub
lock
stos
add
aas
fs
repnz
push
dec
sbb
and
out
rcrl
rcrb
lods
mov
jbe
bound
mov
add
mov
xchg
jo
jle
js
pop
scas
call
dec
cmp
dec
mov
movsb
jno
sbb
movsl
test
les
push
add
fwait
pop
xchg
sub
adcl
outsl
adc
ss
adc
daa
dec
sbb
pop
xor
push
sub
cmpsb
jnp
rol
lock
in
jb
addr16
sbb
lock
xchg
loop
or
lds
cmpsl
lock
loopne
mov
fstpt
and
and
in
shlb
outsl
adc
and
mov
stc
loopne
mov
xor
test
cmp
fbld
adc
mov
or
es
ljmp
push
xchg
jge
nop
xchg
imul
adcb
incb
stos
clc
cld
xchg
pop
std
stos
cmp
fcmovnbe
cmp
jne
lahf
arpl
inc
jns
dec
arpl
mov
pop
sub
mov
jb
add
loop
sbb
faddl
iret
push
shl
roll
jge
dec
push
jmp
cmc
sbb
and
xor
daa
xchg
jg
dec
repz
pop
rcrl
das
pop
lds
or
and
aas
add
push
mov
xchg
xchg
aam
xchg
cs
repz
fstpt
testb
in
loopne
mov
sbb
push
push
out
pusha
popa
insb
leave
dec
in
stc
shr
mov
push
jbe
cmp
out
int
into
rolb
mov
cmp
inc
pop
jmp
movsl
movsl
mov
cmp
xchg
out
ja
ret
or
mov
test
inc
test
fcompl
in
mov
mov
pop
mov
sbb
scas
push
sub
loopne
xor
dec
in
fsubrs
div
lcall
fldt
outsb
popa
stos
cld
adc
dec
incl
xor
cmp
add
or
loop
or
fnstsw
xchg
sub
jne
daa
sub
xorb
ret
lret
adc
pop
int
test
repnz
nop
in
ficompl
imul
sub
pop
pop
adc
and
fcompl
adc
mov
dec
xor
std
or
push
in
mov
stos
ret
mov
sbb
sub
pop
dec
pop
popf
test
stc
xor
scas
sub
lret
mov
aaa
push
xorb
shrl
push
push
orl
gs
dec
add
mov
push
orb
pop
push
in
push
mov
mov
scas
movntps
xchg
jnp
jmp
sti
jnp
lods
mov
inc
repz
pop
cmp
sbb
pop
shlb
cmp
les
xor
out
test
push
sbb
bound
lods
cmc
xchg
push
add
bnd
inc
mov
mov
pushf
or
scas
insl
dec
push
pop
mov
aaa
jo
sub
insb
sti
fsubrs
pop
sbb
sbb
and
ja
mov
mov
andl
cli
mov
pushf
icebp
fmul
sahf
out
sti
sub
fildll
and
andl
push
rcrl
push
les
insl
arpl
push
jae
stos
cmpsb
aad
jo
add
jno
push
mov
lds
jb
pop
ret
das
sbb
push
xchg
aad
sbb
pop
nop
fs
iret
push
push
pusha
fsts
popa
stos
mov
ffreep
xor
and
dec
loopne
pop
xor
dec
leave
mov
lret
incb
pop
sub
mov
adc
lock
and
mov
xor
ljmp
inc
aas
lods
push
mov
push
daa
stc
xlat
pop
ret
rcr
test
push
es
jo
cltd
sub
rorl
mov
inc
add
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
mov
aam
ja
outsl
inc
mov
push
adc
stos
stc
push
xchg
out
jae
dec
movsl
xchg
in
daa
cli
jl
ret
dec
fdivrp
lock
lds
bound
fcmovnbe
jns
in
shlb
outsb
xchg
inc
iret
fdivs
les
inc
mov
gs
rcrb
mov
jbe
adc
push
inc
sbb
pop
cmp
icebp
and
dec
lahf
inc
pop
push
inc
mov
xor
push
push
mov
and
jl
mov
ljmp
jl
insb
sub
xor
sub
push
rcll
aam
lret
pop
inc
es
int3
stc
jnp
clc
pop
ss
add
jae
sub
ds
adc
popa
xor
sbb
push
jne
or
or
and
mov
push
sarl
inc
shll
pop
enter
pop
lcall
jle
aaa
fists
movsl
mov
add
stc
subb
fmul
push
js
push
jge
mov
push
mov
add
rcrb
push
in
loop
ret
fwait
lea
cmp
dec
push
ror
cld
mov
iret
rolb
adc
mov
and
mov
mov
imul
and
in
repz
push
jp
ljmp
inc
jg
outsb
jbe
mov
aas
loop
bound
dec
repz
aas
mov
mov
jmp
lret
lret
mov
cmc
aaa
shlb
es
pusha
mov
subb
test
lea
push
push
cmp
lret
lcall
sub
jl
outsb
dec
ds
sbb
iret
jmp
cltd
jae
bswap
inc
test
pushf
sbb
jo
xor
scas
scas
mov
cmp
loope
not
stc
sahf
sti
push
or
lds
dec
jmp
dec
mov
jge
stc
xchg
test
jmp
int
sub
or
lods
lcall
stos
inc
pop
and
ds
cmp
fisttps
ret
popf
cmpsb
loopne
shll
or
daa
xor
out
push
insl
xor
repz
aaa
mov
jge
add
push
scas
fisubl
ljmp
pop
mov
mov
decl
test
jns
std
ss
cltd
push
dec
push
mov
cli
cmpl
push
pushf
dec
lea
lret
push
mov
in
cwtl
gs
mov
sub
mov
inc
xlat
cmp
lods
mov
je
pop
mov
push
push
adc
dec
or
movsb
pop
int
test
add
lret
push
scas
mov
cmpsb
adc
add
sub
and
in
daa
xor
or
fs
out
in
aad
hlt
inc
test
inc
mov
movsl
mov
mov
insl
dec
inc
hlt
sbb
cwtl
hlt
mov
pop
add
push
mov
jp
xchg
xlat
xchg
mov
mov
sahf
scas
push
push
popa
xor
hlt
and
mov
dec
or
mov
aas
shlb
in
cmp
iret
mov
push
mov
lods
js
inc
or
rcrb
add
dec
push
add
cmp
hlt
out
push
mov
mov
dec
and
xchg
das
loop
fnstenv
lds
xchg
push
jge
cmp
cmp
ffreep
in
jno
sbb
mov
sahf
aaa
pushl
fnstcw
insb
ss
inc
sbb
hlt
mov
mov
loopne
sarl
jno
mov
test
cwtl
les
mov
ja
jb
or
ret
add
push
fisubl
xor
dec
cmp
lret
adc
in
je
or
out
test
jno
bound
movb
cmp
fs
inc
fnsave
ss
jg
push
push
jno
cmp
js
xor
cmc
mov
in
fldl
add
arpl
mov
in
call
sbb
filds
outsl
dec
int3
repz
inc
push
lcall
inc
adc
add
adc
and
dec
push
adc
xor
rcll
push
loopne
pop
xor
jnp
mov
inc
test
mov
bound
cmp
cltd
jmp
or
mov
movsb
in
jno
mov
inc
mov
jl
xor
fwait
adc
push
fs
les
jp
in
fsubl
cld
lea
jb
inc
add
lahf
push
in
stos
mov
sub
lcall
decw
lods
loopne
cwtl
sub
push
sub
leave
notl
orl
cmc
f2xm1
imul
jns
hlt
lahf
mov
int
fildl
adc
add
push
in
jmp
mov
xlat
dec
add
push
push
mov
ss
mov
addr16
mov
pop
pop
cli
mov
pop
fs
stc
sbb
inc
xchg
je
inc
xor
inc
rcrl
mov
add
inc
lea
dec
es
in
es
mov
xchg
popf
adc
into
jno
adc
cmp
sarl
in
lds
push
push
fimuls
or
and
xchg
pop
pushf
sbb
in
cmpsl
mov
jmp
ficompl
push
inc
pusha
lret
movsb
add
repnz
xor
cli
divb
or
flds
in
pop
outsl
inc
inc
movsb
adc
dec
dec
adc
push
sahf
repz
or
inc
insl
cmp
in
sbb
push
imul
sub
mov
sub
jne
shl
jmp
adc
lret
mov
mov
xlat
mov
inc
mov
xor
xor
bound
sub
dec
fwait
popf
xor
hlt
sbb
adc
pop
adc
push
cmp
add
ds
mov
rolb
push
mov
jmp
out
sbbb
push
sbb
mov
cmp
cli
push
rol
les
adc
test
push
xchg
les
mov
test
dec
test
sub
jnp
addr16
lcall
inc
ficoml
loop
mov
mov
repnz
mov
xorl
dec
cmp
ret
scas
xchg
jno
arpl
movb
ss
cmp
inc
loop
xchg
pusha
std
xor
or
lret
fiaddl
sbb
add
pop
aas
stc
push
std
inc
mov
mov
sbb
xchg
inc
shrl
inc
sbb
push
ja
adc
adc
push
mov
sbb
fucomi
outsb
fsubp
xor
push
out
ds
out
pop
dec
inc
cmp
scas
xlat
shll
and
add
jno
cwtl
mov
shlb
pop
psrad
cltd
aaa
xor
or
mov
dec
aam
loope
test
jecxz
idivl
xchg
jno
fcoms
mov
lret
add
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
imul
fnstenv
movsl
leave
enter
je
add
lret
daa
and
push
pusha
out
adc
inc
jl
nop
divb
sbb
and
or
gs
incl
pop
mov
mov
xchg
xor
jns
sub
xor
pop
add
xchg
stc
out
cld
xchg
sbb
lret
into
fnstenv
xor
clc
xchg
popf
ffreep
jmp
jg
arpl
test
jne
out
fbld
pop
fdivl
ds
jo
ret
lret
pushf
sub
in
sbb
add
inc
repz
and
sti
xchg
or
test
xor
xor
mov
int
adc
jbe
cmp
fsub
aaa
aad
jno
push
and
lea
mov
adc
or
shl
out
in
and
xchg
setp
push
cmc
xlat
aad
xor
subb
jne
ljmp
mov
lcall
inc
lods
inc
cmp
and
repnz
bound
mov
jne
test
out
repnz
repnz
sub
push
scas
fldenv
mov
sub
daa
cltd
aad
imul
add
dec
sbb
ljmp
cltd
and
xchg
mov
cwtl
pop
add
xor
or
pop
pop
and
pop
jecxz
mov
leave
mov
fadds
cltd
xor
hlt
cs
pushf
jge
sbb
addr16
insb
xchg
subl
jb
insl
imul
sub
sbb
push
imul
pop
ret
mov
jge
jmp
mov
or
add
dec
ja
mov
sbb
or
add
mov
int
loopne
inc
pop
int3
jnp
mov
ds
pushf
incl
bound
push
and
inc
cmp
pop
test
je
mov
or
dec
sub
popf
add
cmp
mov
arpl
scas
sbb
add
mov
inc
mov
xchg
xor
imul
push
pop
and
mov
sbb
jb
stos
test
sub
push
pop
lods
and
lds
rcr
insl
in
iret
fcoml
xlat
outsl
and
nop
fisttpll
pop
stc
sub
ljmp
add
adc
pop
insl
mov
jns
mov
into
dec
adc
fwait
add
hlt
push
push
pop
loop
mov
and
push
mull
sub
outsb
push
jno
fildl
bound
mov
aaa
pop
pop
and
cs
push
push
dec
jle
mov
jmp
movups
jecxz
xor
jne
popf
add
jo
test
add
jno
mov
or
mov
mov
xchg
jmp
add
aas
and
leave
out
pop
adc
bound
fimull
jecxz
xor
xchg
clc
lock
jmp
int
dec
enter
sti
or
xor
popa
jp
add
test
xor
mov
push
in
inc
sbb
loop
jns
adc
and
call
lret
and
cmp
sbb
ret
pop
das
outsb
pop
mov
adc
std
inc
mov
push
inc
rorb
out
fadd
push
xchg
leave
fnstenv
not
movsb
cwtl
adc
inc
pop
mov
arpl
imul
mov
dec
add
test
jge
add
enter
in
psadbw
and
mov
mov
out
lcall
cmp
nop
cmpb
mov
and
push
scas
sbb
aad
je
js
xor
mov
fbstp
rorb
cmpsl
dec
mov
ret
icebp
enter
mov
lret
add
fcoms
xor
fimull
gs
pusha
xor
mov
popf
jae
and
inc
jle
call
les
mov
sub
test
adc
xor
inc
test
xchg
std
inc
int3
cmpl
cmpsb
sbb
jne
dec
mov
sub
mov
sbb
sti
enter
xchg
add
push
adc
and
mov
pop
in
pop
aaa
push
fwait
cmp
fidivrs
sub
pop
fsubl
sub
je
ret
and
fcmovnb
lret
in
xchg
cwtl
testb
aad
sbb
jno
mov
test
adc
lret
fsubs
mov
jno
mov
pop
outsb
or
jno
sub
xchg
mov
inc
lods
mov
jb
mov
jg
pop
cs
adc
fistpll
push
sbb
dec
and
or
jecxz
les
push
les
sbb
xchg
mov
push
mov
pop
cmp
cmpsl
pop
pop
std
loopne
xor
dec
stc
orl
jecxz
test
ds
add
popa
or
sub
xor
cmp
push
jp
add
mov
push
mov
pusha
push
jne
stos
sub
std
jle
lods
cmpps
adc
test
push
ljmp
cli
popf
mov
test
and
std
movsb
cmc
rorl
adc
add
xor
jae
icebp
cmp
jae
inc
mov
das
adc
in
adc
inc
sbb
call
insl
jge
icebp
outsb
push
push
xor
popf
jmp
mov
dec
in
dec
push
add
test
rcrl
ss
ljmp
mov
adc
mov
test
inc
and
mov
rcrb
jp
dec
inc
ret
inc
mov
mov
out
insl
pushf
pop
pop
stos
mov
ja
or
pop
xchg
stos
arpl
push
leave
roll
push
xor
fwait
push
cs
adc
packuswb
xchg
add
push
and
cmp
push
fdivrl
fidivl
sti
push
cli
dec
mov
mov
test
sbb
cmp
sbb
in
cmc
jg
in
add
inc
adc
sub
xchg
push
xor
xchg
add
pop
push
sahf
nop
dec
stos
add
add
xchg
dec
and
cmpsb
call
push
fadd
mov
notl
bound
and
xchg
dec
data16
insl
mov
xchg
cs
rorb
cs
lret
inc
ss
and
pop
jo
inc
pop
loop
sub
pushf
sbb
jg
push
aaa
addr16
xor
shll
sbb
xchg
dec
out
dec
sbb
sub
push
push
jo
inc
jle
shrl
jo,pt
inc
test
sbb
and
mov
gs
push
cmpsl
nop
stos
mov
shl
and
and
pop
add
lcall
fdivrl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
dec
call
xadd
xchg
decl
inc
ja
add
and
sub
pop
dec
mov
into
push
fcmove
cmp
insl
jle
inc
xchg
xchg
das
add
sahf
mov
mov
dec
mov
bound
pop
or
loop
lock
aam
mov
mov
xor
int3
js
add
jmp
xor
ficoml
ss
out
callw
mov
inc
dec
cmp
jl
sbb
push
jo
arpl
push
mov
lock
mov
in
xchg
and
call
add
sub
clc
jmp
xor
sbb
jns
mov
mov
mov
sub
sbb
pop
rorl
xchg
imul
scas
mov
pop
lret
jb
nop
rclb
bound
cmpsl
loopne
mov
xchg
cltd
sbb
jmp
pop
inc
or
test
leave
pusha
ljmp
ljmp
fisubrl
mov
dec
mov
dec
jle
adc
icebp
jle
xlat
inc
movsb
fcomi
fadd
xchg
std
push
jg
pop
enter
mov
mov
cmp
repnz
and
daa
std
dec
add
bound
shrl
decl
int
scas
fwait
or
iret
lods
iret
shll
push
popf
aad
into
vpcomuw
add
clc
insl
mov
inc
add
or
xchg
stos
fidivl
add
and
sbb
mov
push
add
push
sahf
hlt
cmp
adc
mov
mov
xor
pop
pop
sub
in
test
loop
out
test
jmp
mov
pop
popa
xchg
incb
xchg
loop
fdivrs
add
and
pop
icebp
pop
std
out
cmpsb
fisubrl
lcall
fnstenv
jne
push
sub
insb
adc
in
push
nop
pushf
scas
pop
sbb
cmp
pop
and
mov
dec
addb
push
or
cmp
lods
pop
int3
enter
jge
sub
sti
mov
test
lret
sbb
dec
dec
push
push
jmp
xchg
xchg
std
mov
cltd
shr
dec
pop
xchg
es
and
repnz
stos
cmp
std
pop
pop
ret
repnz
mov
and
inc
inc
imul
adc
add
sub
push
cmpsl
stos
call
pusha
cmp
pop
cmp
push
movsb
add
dec
in
int
and
mov
add
aad
rorl
pop
jae
mov
cmp
dec
add
and
push
pop
and
mov
mov
jb
push
icebp
sbb
out
call
mov
shll
iret
divl
sbb
loope
mov
insl
pop
lock
or
jbe
pop
pop
xor
sti
push
jmp
in
jmp
popa
mov
shrb
cmp
add
xchg
sbbb
push
mov
mov
cmp
pushf
arpl
rol
mov
aaa
leave
and
xchg
sbb
lds
fs
ss
add
ret
sub
fmulp
jg
sub
cmpsb
negb
xor
int3
or
push
mov
dec
outsl
mov
fidivs
cld
jo
pop
jecxz
shr
iret
xchg
sub
adc
or
testb
push
pop
ljmp
imul
sahf
rcll
test
add
mov
iret
xorl
loop
out
fimull
iret
in
adc
sbb
ret
inc
lcall
or
fdivl
adc
cwtl
inc
jns
mov
lea
lds
mov
cmp
daa
push
sbb
pop
push
rcl
and
mov
fisubl
xchg
arpl
and
ss
scas
mov
cmp
push
ss
jb
or
sbb
andb
cmp
jb
fisubl
shrl
shrl
push
xchg
cwtl
cld
daa
mov
jne
cli
mov
mov
mov
fstl
int3
and
inc
outsb
push
inc
std
hlt
xor
mov
cmp
push
dec
and
jle
xlat
loop
aas
mov
das
jmp
cld
add
lods
jl
les
and
into
pop
jl
pmullw
and
xchg
jno
ds
jbe
in
roll
test
clc
in
inc
das
mov
xchg
repz
lret
shl
xor
dec
adc
pop
and
jb
cmp
xchg
shrl
aas
cli
pusha
ja
mov
loope
stc
cmp
cmp
mov
inc
jge
aaa
les
aam
and
fcoml
dec
inc
or
and
adc
xor
inc
add
xchg
sbb
push
fwait
roll
xor
add
adc
pop
push
sbb
adc
sbb
sub
cmp
ret
scas
push
jmp
ret
add
mov
push
xor
sti
pop
outsl
enter
dec
dec
dec
cmc
and
outsb
shl
stos
outsl
dec
subl
arpl
ja
cmp
int3
mov
rcrl
and
mov
and
insb
adc
movsb
mov
out
adc
movsb
daa
out
ret
les
xchg
xchg
and
out
or
lock
movsl
movsb
push
std
push
lds
mov
daa
decb
sub
mov
andb
stos
xchg
enter
repz
add
popa
loope
test
dec
push
icebp
gs
push
push
sub
fcmovnb
in
test
xchg
or
push
pop
push
xchg
pushf
dec
imul
loopne
in
cmp
lods
popf
stos
jae
add
inc
lret
hlt
sub
test
cmp
mov
jnp
sar
add
pop
sub
xchg
add
imul
pop
jb
ja
jnp
xchg
sbb
lods
pop
pop
lret
scas
or
lret
iret
sub
adc
sbb
ret
arpl
shlb
adc
jae
jle
xchg
imul
movsb
mov
push
inc
icebp
push
xchg
das
xchg
cmpsl
loope
sahf
xor
out
or
adc
xchg
adc
push
mov
pop
popf
loopne
fisttpll
maskmovq
divl
jne
mov
push
loopne
int
push
fbstp
xchg
adc
jbe
push
shll
pop
or
jbe
adc
test
rorl
lahf
stos
shrb
imul
cmc
inc
push
pop
mov
mov
lods
mov
lock
lods
mov
push
or
cli
adc
in
jnp
push
sarl
ds
xor
popa
addb
push
xor
add
fstpt
adc
mov
xchg
into
ja
cmpsb
jbe
adc
xchg
jo
cs
xor
lods
out
jecxz
cmp
mov
sbb
mov
imul
dec
cmp
lods
adc
test
or
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
mov
movsb
ja
lock
bound
mov
mov
or
or
out
mov
aas
and
test
mov
shrb
xchg
daa
sbb
arpl
sub
dec
push
push
push
xlat
push
pusha
pushf
repnz
fwait
pop
sbb
insb
pop
push
out
cmpsl
int3
loope
inc
mov
mov
movl
cli
ret
adc
jle
dec
lahf
mov
or
repz
jecxz
insl
sbb
and
shlb
arpl
mov
dec
les
pop
sub
add
pop
faddp
and
insl
inc
cmpsb
inc
xchg
out
jmp
lods
outsl
pop
pop
arpl
leave
xlat
mov
jo
seta
stc
sbb
movsl
adcl
push
mov
xor
cmp
jns
test
and
sarb
jmp
cmp
enter
lret
push
lds
lods
mov
or
fidivs
lea
xchg
adc
xlat
aam
adc
mov
mov
int
das
xchg
testb
inc
scas
loopne
popa
xorl
stc
shrl
imul
das
hlt
test
and
or
sub
lahf
lods
dec
push
jne
out
cwtl
and
sbb
mov
fnsave
add
push
or
or
test
inc
pop
or
lret
xchg
es
mov
hlt
sbb
pop
aaa
popa
addl
inc
jle
int
gs
pop
and
xchg
leave
cmp
das
dec
addr16
sbb
jb
add
inc
repz
push
lret
or
mov
iret
aam
push
mov
dec
fs
and
cld
add
xchg
fadd
push
lea
xchg
cs
call
andl
inc
push
sbb
xchg
xchg
sbb
std
repz
imul
push
data16
add
cmp
mov
cmp
or
sbb
dec
jp
insb
xchg
daa
sarb
xor
sub
mov
ret
mov
test
sub
jne
pop
fmul
sbb
mov
sbb
add
xor
loope
pop
sub
test
test
mov
shr
fwait
sahf
std
jb
aaa
adc
or
cld
push
ja
scas
xor
mov
cmp
sbb
inc
or
jecxz
fbstp
sarb
adc
pop
adc
push
hlt
push
push
psubq
sub
shll
lods
aaa
pop
shrl
pop
jg
sbb
pop
sub
pop
out
push
inc
mov
fildll
icebp
inc
push
xor
xchg
mov
out
mov
sarl
or
shlb
dec
dec
cltd
push
imul
mov
ret
je
and
imul
mov
adc
loope
jae
je
insb
push
xor
popa
adc
fwait
xchg
hlt
hlt
movsl
dec
dec
sbb
scas
add
fbld
mov
mov
jg
jo
aad
loop
scas
rorl
test
mov
insl
mov
mov
xchg
iret
loope
adc
lcall
int
arpl
cmp
mov
xchg
hlt
stos
jle
pushf
mov
sub
fldl
adc
in
push
cmpb
xchg
into
insb
add
push
xchg
mov
adc
cltd
xchg
les
call
aam
add
loopne
xor
cmp
pop
pushf
stos
xor
jp
push
pushf
xor
ds
in
jae
lock
jecxz
adc
add
inc
stc
mov
pop
inc
mov
scas
xorl
icebp
pop
jnp
mov
jge
xor
int
add
inc
cs
addr16
aam
out
aad
or
push
mov
int
push
mov
xchg
aas
hlt
cmp
pop
mov
fwait
add
adc
sbb
call
cmpb
pop
jno
sar
cmp
cmp
scas
mov
and
data16
stos
dec
push
sub
sub
mov
jg
pop
jl
cmp
and
daa
push
pusha
pop
mov
mov
inc
fisttpl
dec
cltd
fsubp
mov
in
xchg
outsl
sbb
inc
jo
in
mov
pop
movsb
fsubp
push
sbb
mov
loop
mov
sarb
data16
in
adc
jae
adc
dec
out
ss
xchg
xchg
adc
pushw
loopne
shl
dec
sub
or
jo
popf
scas
in
loop
push
push
clc
xor
aad
dec
xor
pop
push
inc
xlat
arpl
dec
cmpl
add
pop
cmp
cmp
mov
loop
fsubrl
rclb
sbb
mov
push
adcl
sub
mov
pop
inc
outsb
lcall
or
subl
stos
in
cmp
divl
push
rcl
mov
pop
xorl
inc
mov
inc
add
sbb
ja
hlt
cltd
and
inc
ror
pusha
jno
call
in
mov
daa
inc
jmp
xor
pop
jg
mov
sbb
sub
pop
into
inc
mov
xchg
xor
loopne
sbb
lock
repnz
fwait
adc
cmpsb
jne
xchg
push
push
insl
pop
aaa
loop
dec
lret
adc
push
lcall
inc
pushf
lahf
sub
bound
lods
dec
sarl
xlat
aad
pushf
loop
inc
dec
sbb
mov
pop
add
lock
cmpsl
in
push
adcb
mov
pop
aam
mov
mov
mov
mov
or
nop
xor
movsb
cwtl
cltd
int3
cmp
xor
loop
daa
push
jge
sbb
mov
sub
fs
sub
add
mov
adc
pop
lds
dec
mov
or
mov
dec
or
and
mov
loop
and
jmp
test
in
repnz
cmp
jmp
roll
xchg
xchg
loopne
sub
cmp
aam
lahf
and
or
cli
dec
inc
aam
pop
stos
push
mov
xorb
and
movsb
fisttpll
pusha
js
arpl
jmp
push
stos
pop
xchg
jecxz
pushf
in
fdivrs
sub
and
jns
adcb
mov
mov
sbb
in
loop
cmp
add
aam
pop
sbb
loop
xchg
sbb
js
imul
incl
test
imul
mov
jns
rorb
sbb
cmp
push
movsl
sbb
pop
inc
inc
mov
jp
xchg
cmp
or
jl
xchg
jbe
inc
cmp
lods
cmp
jns
inc
loop
shlb
sbb
stc
cs
sti
cmp
es
imulb
or
mov
test
sbb
stos
cmp
xor
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
xor
dec
mov
ja
jle
mov
sbb
push
mov
dec
je
mov
nop
add
mov
lods
mov
fisttps
add
cmp
cwtl
mov
in
cmpsl
mov
shr
sbb
cmp
pop
or
push
aas
fdivp
xor
add
cli
in
outsl
sub
mov
gs
push
mov
push
movsl
and
xor
jo
mov
xor
lret
adc
pop
inc
dec
call
into
mov
outsb
ret
mov
fisttps
and
jge
adc
sub
cli
mov
inc
repnz
jo
ljmp
xor
popa
mov
shrb
xchg
shlb
adc
mov
mov
repnz
inc
jecxz
push
xor
test
ljmp
add
int
dec
jmp
pushf
cmc
bound
loopne
imul
in
cmc
sti
adc
sub
push
push
xor
add
jno
inc
and
ja
push
js
adc
popa
jo
and
outsb
cmpsb
inc
sbb
inc
nop
in
fstl
or
lock
add
jge
fisttps
adcl
das
and
mov
xor
sarb
pop
orb
cmovl
aad
nop
lahf
rorl
jge
add
rclb
cmpsl
rcrl
aas
cmp
daa
mov
jecxz
mov
add
and
add
decb
xlat
in
aas
xchg
push
adc
pop
mov
fcomp
sbb
pop
xor
mov
ljmp
inc
xor
pop
rolb
xchg
xor
xor
inc
ret
sarl
and
push
icebp
pop
add
paddusb
sub
inc
dec
dec
sub
push
lahf
lcall
inc
mov
xchg
or
jnp
adc
jnp
outsl
repnz
in
out
in
scas
adc
push
int3
push
and
cwtl
mov
js
inc
dec
cmc
jmp
cmp
clc
jle
mov
test
in
jne
in
data16
add
mov
jl
xchg
pop
test
lods
stos
ljmp
xchg
push
lods
out
je
mov
enter
or
imul
mull
adc
ds
mov
jns
mov
fdivs
loopne
inc
out
mov
pop
lods
pop
movsb
dec
or
into
ret
xchg
jge
in
mov
sbb
pop
pop
out
and
mov
cmp
pop
or
mov
push
scas
cmp
jecxz
lods
addl
je
xlat
popa
stos
add
repz
std
rorl
mov
inc
scas
mov
mov
pusha
add
cmp
inc
lret
enter
adc
lds
add
or
pop
stc
lods
pop
sbb
adc
jge
inc
in
jb
add
gs
push
mov
jno
imul
jle
inc
fsubrl
popa
cmp
das
and
fnstsw
popf
je
mov
shl
dec
cli
or
sub
outsb
outsb
and
movsb
mov
insl
insl
xor
jl
push
xlat
mov
ss
insb
sub
add
inc
fbstp
mov
jp
addr16
jg
adc
pop
jo
push
mov
iret
roll
imul
mov
dec
sub
inc
repnz
clc
jns
mov
and
dec
xchg
adc
inc
popf
pop
dec
ds
test
add
cmc
push
jns
aas
xchg
dec
inc
or
and
jmp
roll
adc
popa
in
push
dec
ss
vpbroadcastd
pop
sti
cmp
insb
push
sarl
stos
inc
dec
ja
std
and
cmpsl
testb
jp
hlt
adc
cmp
imul
inc
push
xor
push
jg
test
fs
popa
cmp
sahf
sub
shrb
add
mov
and
daa
pushf
mov
clc
lcall
cmp
lock
mov
jle
push
sti
hlt
subb
stc
addl
shr
push
add
pop
icebp
jecxz
mov
popa
andb
jge
out
sbb
int
add
jns
pop
mov
push
pop
stos
into
frstor
xchg
es
mov
test
fildll
mov
xlat
mov
ljmp
cld
mov
push
xchg
jns
add
xchg
int3
xor
or
xlat
inc
xchg
notl
lock
insb
jg
shll
loope
jnp
nop
xchg
pop
daa
push
or
ficompl
mov
inc
cmpsb
mov
outsb
xlat
jl
sbb
addl
mov
mov
cmp
inc
push
in
sub
hlt
adc
imul
out
or
fisttpll
pushf
imul
out
xchg
subl
adc
fbstp
dec
lahf
bound
mov
sbb
aam
mov
push
sahf
sbb
sub
imul
fidivrs
insb
bnd
push
inc
sti
push
ret
xor
inc
inc
cmp
aad
je
rcrb
mov
arpl
enter
outsl
imul
xor
pop
sub
enter
fstl
cmp
lock
cli
xor
test
arpl
fldenv
mov
ret
cs
xor
mov
dec
cmc
loopne
sti
lret
out
cmpb
aas
xor
loopne
movsb
xor
or
fcmovne
or
inc
shrl
jnp
jb
sub
xchg
pop
sub
mov
lcall
pop
fwait
xchg
stc
das
bound
xchg
mov
jl
dec
push
cmp
fdivl
subb
push
ficoml
push
and
sub
data16
sti
and
jb
adc
loop
or
pop
andb
jecxz
scas
mov
aad
or
adc
mov
decb
stos
ret
add
adc
pop
or
xchg
or
dec
jo
jl
fstl
lods
cmp
xorps
and
pop
and
vsqrtps
mov
subl
mov
fstl
inc
movsl
addl
push
in
xchg
iret
sbb
xchg
pusha
inc
dec
outsb
insl
into
adc
add
xor
fwait
push
aam
xor
in
std
orb
jo
cld
sar
mov
mov
shlb
testb
data16
movsb
xchg
xchg
cmp
testb
je
in
repz
cmp
mov
push
xor
test
push
es
sbb
jbe
subl
cmp
or
stc
cmp
aam
xchg
stc
lods
adc
lea
add
scas
in
scas
scas
dec
jg
aam
cmc
pop
sub
jne
pop
cmp
aaa
mov
das
mov
push
fstpl
sti
test
hlt
addr16
xchg
popf
call
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
loop
inc
mov
ja
xchg
push
mov
or
call
test
mov
pushf
xor
shrl
mov
mov
xlat
inc
outsb
mov
enter
out
jb
mov
cli
das
fiaddl
pop
lock
enter
sbb
pop
push
mov
jl
enter
call
jb
aam
ds
mov
cli
xlat
imul
mov
imul
jns
fldt
jp
lret
pop
repz
push
ret
dec
cmp
stos
data16
jmp
jl
imul
loopne
call
outsb
sbb
movq
std
mov
jns
int3
shl
or
xchg
add
test
add
aas
jb
mov
jle
cltd
aam
ret
dec
pop
adc
mov
sti
or
adc
les
pop
stos
sub
xor
push
icebp
ljmp
in
xor
gs
icebp
sbb
cmpsb
sub
jns
std
aad
cwtl
es
sbb
lea
pop
cmpsl
mov
xor
imul
lea
sarb
test
rorl
lahf
stos
push
pop
pop
add
fsts
inc
mov
mov
jnp
adc
loope
or
mov
mov
sbb
mov
rorb
repnz
scas
in
dec
push
imul
orl
sbb
mov
testl
sub
or
sub
sbb
out
shl
pop
les
scas
jo
push
out
mov
jge
xchg
adc
or
jle
gs
sahf
bound
or
lahf
push
ds
jmp
push
add
in
in
add
addl
xor
xchg
mov
mov
push
adcl
sub
jl
xor
inc
and
iret
aam
imul
or
mov
sub
test
inc
mov
jbe
fdivs
push
adc
xchg
fnstcw
xchg
push
js
mov
add
and
mov
or
cld
imul
data16
js
push
loope
arpl
lea
mov
mov
sub
mov
and
inc
les
push
inc
scas
pop
js
loop
xchg
or
pop
lods
jno
test
aaa
ja
test
pop
push
nop
xor
imul
and
adc
sbb
dec
adc
push
sub
fbld
aad
out
add
push
sbbl
xchg
leave
mov
lea
enter
sub
or
cmpsl
aaa
test
xlat
shrl
fiaddl
fisubl
cmc
cmp
out
jge
jbe
hlt
cwtl
pop
loope,pn
cli
jne
sbb
clc
dec
sbb
enter
mov
fucomip
xchg
loopne
push
shlb
push
pop
mov
sub
push
ret
jae
negl
call
test
add
sub
jnp
cmp
popf
xchg
add
lahf
lods
lods
pusha
pop
push
xchg
jns
dec
jg
loope
add
arpl
jp
ss
mov
mov
mov
scas
in
ljmp
call
jge
xor
cvtps2pi
sub
push
in
mov
or
pop
in
mov
fsubrl
daa
daa
add
inc
in
aam
imul
mov
ficoms
inc
cmp
mov
sbb
test
xor
sub
pop
fcom
in
popf
pop
pop
jnp
mov
in
int
enter
les
sbb
jne
hlt
fwait
out
push
sub
pop
push
jmp
or
aam
lret
movsl
sbb
or
adc
jns
lcall
pop
stos
stos
xchg
lods
out
mov
ja
rcl
das
out
xchg
dec
imul
test
dec
daa
push
push
push
cmc
icebp
rdtsc
in
loop
add
mov
push
pop
ss
aas
sahf
cli
nop
mov
and
mov
lahf
fwait
movsb
in
inc
filds
xchg
cli
scas
adc
mov
inc
adcb
mov
sbb
jns
cmp
inc
bound
xor
inc
out
scas
or
cmpsb
push
push
loop
divl
test
fcomip
pop
outsl
jge
inc
dec
inc
mov
mov
xor
pop
xorl
or
jbe
das
pop
dec
repnz
std
cmp
repnz
sbb
dec
pop
sub
inc
sbb
mov
test
repnz
push
jb
cmpsb
lea
cmp
fldl
std
ljmp
test
add
clc
mov
jp
push
rclb
inc
and
fsub
in
jo
pop
loopne
push
push
jb
nop
inc
or
loopne
jmp
mov
xchg
int
push
addr16
dec
mov
aas
dec
loopne
inc
ret
adc
sub
je
mov
push
add
inc
and
or
in
fs
mov
mov
js
iret
pop
push
lcall
insb
cltd
push
mov
enter
ljmp
sbb
sbbb
stc
pop
loope
jmp
mulb
fwait
in
lret
mov
nop
aam
into
shll
mov
movsl
or
sbb
test
insb
pop
sub
popa
loopne
adc
ss
push
xor
sbb
sbb
adc
mov
lock
enter
fimuls
test
pusha
leave
mov
mov
lcall
arpl
les
or
repz
push
inc
les
push
xlat
arpl
cmp
cmpsb
add
push
sbb
scas
cmp
inc
or
xchg
mov
pop
mov
lret
xor
stc
stos
mov
jnp
dec
jge
idivl
pop
jmp
and
out
subl
add
dec
xchg
mov
shrl
sbb
aaa
imul
ljmp
jbe
inc
mov
retw
inc
dec
shll
xor
dec
sbb
andl
inc
push
inc
lods
mov
mov
rclb
cwtl
jbe
cmp
enter
lret
or
xchg
adc
sub
push
data16
test
mov
in
sbb
push
xchg
nop
jecxz
jnp
pop
mov
dec
mov
pop
insb
push
sbb
popl
cmp
lea
call
add
xchg
outsl
cmpsl
sbb
mov
xchg
pop
aaa
outsb
add
jo
shr
inc
xchg
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
mov
push
mov
xchg
mov
popf
imul
pusha
ja
or
adc
sbb
jne
or
xchg
add
pushf
sbb
cmp
mov
pop
enter
outsb
xchg
lret
jge
fists
jge
xchg
lea
or
call
push
or
cmp
mov
pop
cltd
es
xchg
lds
cwtl
hlt
fiadds
mov
xchg
test
push
pop
cmc
sarb
stos
jl
push
test
ja
cmp
adc
clc
xchg
sbb
les
stc
mov
fadds
dec
cmp
loop
mov
and
pop
leave
mov
jne
xchg
aam
dec
sti
pop
add
xorb
pop
or
lcall
sub
mov
scas
add
fwait
sub
adc
out
imul
xor
sbb
fbld
push
fldt
daa
dec
daa
lds
ss
sbbb
lock
sahf
fwait
out
mov
je
jno
push
gs
add
cmc
mov
adc
sub
les
inc
icebp
xlat
outsb
cmp
push
push
stos
inc
or
fnop
clc
and
and
sbb
jg
mov
in
jecxz
shl
xor
cmp
lret
outsl
xor
cli
test
movb
mov
push
and
sbb
push
out
pop
xchg
lods
xchg
or
xchg
pop
hlt
xchg
or
mov
jbe
push
xor
jle
jnp
lahf
sub
jnp
movsb
push
loop
jg
lock
orb
jmp
loopne
jno
sbb
cmp
or
add
cmp
push
mov
imul
adc
cmpsl
xchg
xlat
pop
stc
out
cmc
call
aas
lods
lock
in
es
jo
hlt
and
add
xchg
mov
in
fiadds
add
inc
addr16
stc
movsl
sbb
call
pop
out
stos
or
jg
sti
mov
cli
mov
je
mov
aad
imul
mov
mov
jns
call
push
rcl
cmp
cmp
cwtl
pop
adc
inc
imul
ficomps
fidivrl
rcrl
fcompl
outsl
dec
mov
dec
or
shlb
gs
or
adc
bound
adcl
dec
push
cld
lods
xlat
xchg
enter
and
and
add
adc
test
movsb
dec
add
mov
jg
jno
fwait
push
add
adc
add
xchg
outsb
test
xchg
push
rcrb
and
insl
cmc
dec
enter
sub
jnp
test
adc
or
roll
cmp
add
popa
addr16
popf
rcl
shrb
jnp
pop
sti
andl
pushf
cs
in
shll
inc
int
push
hlt
pop
cmpsl
enter
movsl
mov
or
test
sub
push
into
scas
ss
mov
ja
aas
repz
inc
mov
inc
scas
scas
das
xchg
or
sbbb
dec
sub
jo
dec
icebp
cmp
sbb
mov
fisubrs
popa
pop
jmp
lock
imul
pusha
fcmovbe
mov
sub
xor
push
mov
adc
sub
push
sbb
dec
or
lods
jmp
xchg
pop
test
js
popa
sub
sbb
lret
ss
test
or
sbb
lods
xor
clc
stc
sub
mov
sbb
sub
cmpl
repz
mov
xchg
dec
xor
loopne
inc
outsl
xchg
shrl
ret
mov
sbb
pop
push
lret
stos
pusha
sbb
adc
lea
adc
push
mov
and
enter
lret
or
push
and
fwait
xchg
hlt
outsb
mov
ret
xchg
rcrl
mov
in
int3
lcallw
js
jecxz
movsl
data16
xchg
add
dec
inc
push
notb
out
lahf
daa
movsl
cmp
push
mov
dec
xchg
or
fsubrs
push
mov
call
loopne
xor
xchg
xchg
test
je
dec
inc
xchg
dec
loopne
xchg
int3
and
mov
jp
pop
cwtl
jns
aaa
call
sub
test
jb
aaa
das
sbb
nop
adc
call
jo
xchg
push
cmp
int3
cmpsl
mov
mov
cmpsl
add
mov
sahf
push
xorb
and
xor
and
lods
dec
inc
mov
rolb
push
bound
lahf
mov
lock
ss
call
rolb
mov
lret
push
cmp
loop
push
lock
popa
dec
jae
mov
cmp
xchg
xchg
sbbb
sub
push
xchg
or
or
jl
loop
adc
fmull
mov
lret
and
pop
jle
pop
fbld
jle
jp
cmp
mov
fs
inc
clc
inc
lret
mov
cmpsb
sbb
pop
mov
mov
adc
es
sbbb
fdivrl
int
sbb
mov
jns
test
jmp
xor
cmp
jb
push
and
mov
push
or
aad
data16
addr16
push
jno
mov
mov
dec
pop
mov
rcr
mov
iret
pop
fldl
out
test
pop
imul
andl
in
pop
ljmp
mov
out
scas
xorb
xchg
mov
test
in
roll
and
rolb
insb
out
lret
sub
jbe
popf
adc
sbb
out
xor
scas
xchg
sbb
sub
fbstp
push
push
insl
rcrb
fsubrl
mov
sbbb
shlb
lret
mov
jno
adc
mov
out
sbb
punpckhwd
in
mov
pop
cmp
arpl
movsb
or
andb
lret
and
mov
mov
test
pusha
jge
mov
fstpt
aas
adc
add
lret
dec
mov
cmc
add
mov
in
sub
clc
mov
insb
bnd
inc
jle
jle
xor
jae
pop
xchg
in
fistpl
push
repnz
ds
cmp
iret
mov
mov
repnz
ja
inc
pushf
outsb
xchg
push
jo
push
in
push
outsb
sahf
mov
pushf
jl
into
jmp
xchg
cmp
mov
imul
sub
mov
das
mov
xchg
addl
or
jge
test
js
out
fidivl
movzbl
fadd
jge
inc
test
insl
pushf
cli
popw
mov
dec
sbb
xchg
aas
mov
fnsave
ja
es
inc
seto
push
imul
cmp
cmp
addl
sub
mov
in
int
mov
jae
imul
xlat
int3
add
es
sti
inc
push
adc
test
pusha
or
push
inc
icebp
cld
cmp
in
rolb
add
push
in
and
push
cmp
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
mov
mov
fcompl
mov
les
xchg
jno
fs
imul
add
in
mov
decb
shll
insb
aas
aad
imul
pop
push
lds
push
dec
imul
sub
mov
lret
int
pop
mov
and
mov
imul
call
popf
xor
stos
es
or
xor
mov
inc
sub
xchg
dec
clc
lahf
and
shrb
pop
jnp
test
in
mulb
mov
inc
sub
divl
ss
std
mov
xor
pop
mov
and
roll
int3
jle
dec
inc
xor
jle
and
out
pop
push
fdiv
mov
fadds
pop
jae
jp
mov
or
repz
xchg
inc
sbb
insl
pop
cmp
pop
push
daa
std
mov
and
sahf
mov
mov
std
adc
lret
sbb
xchg
and
int3
add
inc
push
jecxz,pn
idivb
fs
mov
jns
stos
adc
mov
mov
push
iret
ljmp
dec
repz
gs
mov
add
mov
lcall
fiaddl
jmp
aas
out
stos
mov
dec
mov
movsb
mov
mov
pop
cmp
jno
es
mov
ret
inc
in
inc
mov
mov
mov
mov
push
mov
lahf
xchg
adc
mov
rcll
je
xor
fildll
mov
in
sbb
adc
xlat
movsb
dec
repnz
jns
mov
jbe
mov
cmp
mov
mov
out
mov
cmp
adc
add
adc
add
adc
lret
jo
mov
sub
inc
pop
add
cmp
dec
sbb
cmpsb
lea
imul
shlb
sbb
jge
adc
add
mov
ds
in
into
loopne
lahf
cltd
leave
mov
xor
test
or
out
insb
pop
out
cmp
fists
mov
xchg
jne
sti
sbb
xor
shlb
sbb
ds
adc
mov
into
pop
fsub
xchg
sub
pop
and
addr16
lods
jne
shl
cmp
sbb
fcompl
xor
xchg
call
sub
inc
add
sbb
jle
push
dec
std
pushf
xor
and
push
push
adc
jno
dec
divb
jnp
jp
repnz
inc
mov
std
out
ret
loop
pop
f2xm1
xchg
push
mov
pop
inc
push
sahf
mov
xor
in
dec
dec
mov
loopne
or
xor
and
lcall
pop
push
push
into
xor
xchg
mov
inc
dec
mov
mov
or
pop
sbb
shrl
in
and
dec
mov
stos
outsb
loope
mov
pop
mov
cmp
je
mov
push
xor
pop
pop
aad
inc
mov
sbb
lds
and
movsl
andl
sub
lcall
pop
mov
push
sub
mov
lahf
adc
inc
sbb
and
scas
xchg
mov
add
xchg
pop
lds
cli
xchg
rol
pusha
ret
sub
or
cmp
jb
in
leave
jne
push
jns
push
mov
pop
jbe
pop
js
fidivs
push
aam
bound
sbb
cmp
or
adc
jmp
ja
push
fwait
sub
xor
dec
pop
cld
jne
jnp
jno
out
les
and
scas
fstps
dec
insb
stos
lret
xor
fildl
cltd
inc
ret
xor
and
int
fisttpl
insl
sbb
jp
mov
outsb
mov
and
xor
mov
popa
mov
addl
add
push
es
aas
pop
mov
pop
popa
fistl
test
in
cs
jge
xchg
lods
xchg
fstps
addr16
sbb
xchg
sbb
sbb
enter
jb
push
xor
ljmp
xlat
aaa
nop
cmc
mov
dec
fucomi
jns
pop
inc
xor
movsb
addr16
sbb
jecxz
jge
xchg
out
push
lcall
aam
out
jg
call
pop
ljmp
or
leave
aam
pop
jb
push
mov
ss
repz
aad
or
cltd
mov
je
pop
popf
int3
mov
idivl
dec
in
ljmp
jecxz
xchg
mov
lods
mov
clc
cmp
mov
adc
and
cltd
popf
test
cmp
sbb
jne
gs
iret
or
iret
inc
popa
mov
daa
scas
pushf
dec
and
pushf
sub
adc
loop
sub
ret
add
stos
mov
jle
roll
lret
out
iret
xchg
dec
icebp
aam
cmp
pop
insb
mov
cld
out
xor
or
mov
pusha
clc
mov
inc
cmp
scas
mov
lods
sahf
repnz
js
inc
lret
mov
jl
add
pusha
insl
popa
add
xchg
push
in
xchg
in
mov
adc
mov
leave
cwtl
jne
aas
sarl
jg
pusha
scas
lret
enter
lock
add
xchg
in
adc
fwait
pop
add
cmp
enter
lret
pop
sbb
pop
push
xchg
fisubs
lea
fisubrl
js
push
pop
movsb
fnsave
xchg
imul
xor
jb
sbb
xchg
aad
add
or
push
mov
inc
pushf
mov
test
lahf
or
popf
adc
mov
popa
daa
imulb
loopne
xor
mov
xor
or
push
xor
in
and
fmull
push
sar
inc
add
lea
pop
or
and
fadds
xchg
dec
into
pop
pop
test
mov
sbb
add
pop
jmp
sar
ror
pop
insb
pop
lods
adc
icebp
or
hlt
in
or
inc
mov
lcall
int
mov
xchg
pop
cmp
xchg
jl
pop
shrl
pop
cs
and
leave
ret
push
rclb
inc
or
scas
iret
mov
cmpsb
in
jo
sub
js
repz
inc
add
dec
xor
push
sbb
popa
adc
loopne
push
pop
fstpt
outsb
dec
pop
inc
addl
push
call
inc
pop
jmp
lock
sarl
lods
xor
ss
mov
mov
inc
jae
jo
add
mov
mov
xchg
les
out
xorl
mov
jmp
popa
adc
roll
pop
testb
decl
test
cmpsl
icebp
xchg
mov
fstp
stos
repnz
in
and
movsl
test
mov
daa
pushf
dec
pop
dec
dec
fnstenv
pushf
xrelease
xchg
aad
pop
adc
pop
jno
popf
ds
mov
jge
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
mov
outsl
dec
ja
notb
mov
inc
popf
imul
out
pop
sbb
and
mov
mov
jg
push
sahf
jbe
aas
adc
adc
push
push
loope
dec
jo
mov
xchg
lcall
xor
pusha
cs
xor
adc
or
cmp
shrb
adc
inc
push
mov
into
sbbl
cmp
xchg
loop
fisttpl
dec
pop
test
popf
jp
adc
loopne
ret
sub
loop
cmp
lods
xor
jo
mov
cmp
pop
cmp
gs
dec
lods
fnstsw
ljmp
aaa
xor
outsb
in
xchg
push
sub
add
cmp
mov
pop
adc
xchg
fmul
dec
mov
push
and
sbb
nop
ljmp
movsb
fistpll
test
js
ds
popf
jle
bound
stos
cmpsl
and
or
leave
es
sbb
sbb
xchg
aaa
xchg
int3
cmp
scas
ret
cli
fs
cmpsl
cs
repnz
sahf
jl
cmp
shrb
fsubrs
mov
mov
sbb
int
incl
sub
test
fwait
out
ss
sbb
mov
icebp
in
push
push
ds
fabs
or
outsl
mov
neg
in
jb
jge
fs
lods
fists
fwait
pop
leave
dec
pusha
cmpsl
loop
dec
repz
popf
inc
rolb
jp
inc
xchg
cmpsl
pop
inc
in
adc
es
scas
rep
sub
into
cmpsl
mov
mov
dec
insb
jecxz
xor
sub
outsb
sbb
mov
out
mov
xor
and
sbb
shll
pop
jo
xor
imul
daa
test
scas
ljmp
hlt
xor
inc
insb
mov
out
dec
cmpl
aad
adc
jg
js
movsl
lods
in
shlb
aam
aaa
aam
jge
jle
adc
movsl
in
push
stos
lret
cmp
enter
lea
cltd
mov
pop
add
cmp
movsl
cmp
add
add
add
xor
xchg
sbb
mov
xchg
cli
mov
sbb
pop
dec
arpl
les
or
lret
or
push
mov
pop
or
adc
lods
xor
pushf
mov
shll
cmp
cs
cmp
daa
in
ret
lods
xor
add
mov
movsl
jle
inc
out
jbe
xchg
mov
out
movsl
into
pop
mov
popa
pop
xchg
pop
push
pop
insb
mov
outsl
mov
jb
ljmp
mov
mov
outsl
or
cmp
hlt
sbb
jge
inc
out
xchg
add
clc
and
mov
xor
adc
std
pop
stc
lds
ljmp
jmp
sbb
mov
xor
xchg
ds
pop
leave
loopne
ret
push
hlt
xor
mov
mov
sub
aaa
push
mov
daa
push
or
push
xor
or
addr16
cltd
shlb
mov
cld
cltd
cli
cmc
mov
in
push
mov
lahf
mov
xorb
incb
dec
jmp
mov
dec
inc
mov
filds
cmp
push
jp
clc
aas
out
cmp
jb
sub
clc
repz
stc
aas
cltd
sti
or
jl
out
test
ljmp
aaa
adc
jns
int
ja
in
mov
movsb
or
xor
xchg
jl
cmp
jg
js
mov
xchg
shll
imul
pop
out
jmp
sub
mov
les
fcompl
sar
cmc
dec
mov
adc
cmpsb
sbb
movsl
jno
and
mov
push
pop
nop
loope
xchg
pop
adc
cwtl
ret
xlat
mov
test
pop
sub
data16
aad
in
sarb
pop
cld
jno
repz
jbe
dec
popa
mov
out
xor
jge
push
inc
jo
dec
cwtl
popf
and
setnp
popa
imul
xchg
data16
sbb
cmp
shrb
mov
jmp
sub
jb
fdivrl
jl
lds
xchg
leave
cli
aas
mov
imul
sub
cmp
and
jmp
mov
clc
and
repz
add
push
fdivs
mov
mov
sub
divb
jns,pn
lahf
xor
ret
ret
je
push
subb
adc
in
cmp
fsubp
pop
cmp
popf
bound
or
cmp
pop
pop
mov
jecxz
mov
xchg
jo
bound
std
mov
fldenv
lahf
jb
stos
sub
xor
bound
lret
and
das
add
lret
andb
scas
int
pushl
push
fistl
sbb
mov
aaa
xchg
cmc
je
and
add
cs
jp
add
insb
data16
adc
xor
int3
push
loop
inc
imul
dec
sbb
mov
mov
lds
dec
xor
out
sub
cmp
xchg
cwtl
repz
dec
mov
arpl
dec
pop
or
fdivrs
xor
jmp
xchg
es
nop
mov
cltd
loop
jl
xchg
cs
jno
dec
imul
mov
iret
mov
das
dec
ljmp
in
insl
add
pushf
mov
leave
inc
add
xor
leave
xor
aam
mov
lret
ja
push
cld
fs
lock
aaa
dec
inc
shlb
ret
cld
inc
nop
xlat
sarl
loopne
popa
or
push
jle
repz
rcl
test
decb
pusha
outsl
push
shll
jecxz
sub
incl
cmpl
data16
jb
icebp
cwtl
or
icebp
lret
mov
pusha
dec
jg,pt
sub
clc
rclb
mov
mov
pop
in
adc
adc
dec
or
dec
das
adc
push
mov
sub
add
or
and
push
repz
xchg
jae
inc
adc
in
inc
stc
push
loope
aaa
sub
cli
push
icebp
push
ret
cmp
or
sub
push
mov
sub
loope
adc
jle
repnz
mov
push
shrb
push
fcoml
mov
lret
mov
adc
loope
popa
push
lds
xchg
iret
and
sub
addr16
popf
shll
test
xor
pop
cli
out
push
out
ljmp
cmp
push
sub
or
test
arpl
inc
imul
aad
aam
adc
hlt
xchg
pop
pop
mov
popf
cmpsl
xchg
xchg
jl
jg
mov
icebp
lock
cmp
add
xor
add
aas
mov
bswap
stos
mov
sub
sub
and
cwtl
nop
push
inc
gs
xor
xchg
mov
adc
scas
push
sahf
rorl
xchg
mov
fsubrl
stos
stos
sbb
jg
mov
push
js
test
fstps
lret
fmull
xchg
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
dec
movsb
je
call
add
xor
sub
push
pushf
fisubl
inc
stos
cmp
repnz
ret
in
lea
arpl
push
iret
shrl
addb
subl
ljmp
ljmp
jno
push
jno
lods
js
and
mov
dec
std
cld
js
add
sarl
mov
adcb
dec
mov
xchg
out
inc
gs
loopne
lods
cmp
fstp
jle
push
das
fwait
jne
sbb
jae
pop
cmp
es
push
cmp
arpl
lret
dec
sti
mov
mov
hlt
pop
cli
pop
pop
imul
xchg
test
insb
push
clc
inc
pushf
adc
rorb
jmp
in
xor
test
pushf
adc
pop
mov
and
jmp
enter
sub
inc
sbb
repz
sbb
lods
push
iret
add
icebp
mov
jbe
pop
imul
popf
data16
jne
ljmp
gs
out
mov
pop
imul
and
iret
dec
test
pop
cltd
jp
sub
or
out
sbb
push
jns
arpl
mov
or
mov
cmp
xor
push
add
das
loope
dec
outsb
popa
mov
fisubs
dec
mov
dec
sub
xlat
loope
or
adc
push
sub
repnz
imul
in
jns
pop
dec
popa
cmp
add
jmp
mov
jp
js
sub
xor
xor
roll
into
pop
adc
mov
in
in
push
ret
mov
adc
mov
lret
sarl
fldl2t
mov
pushf
mov
push
lahf
mov
shll
mov
js
sub
rorl
fdivrp
mov
jae
imul
and
vfpclasspsz
mov
inc
dec
mov
ja
cmpb
in
cli
push
add
lahf
jp
jp
xchg
adc
cmpsl
jge
sarl
pop
xchg
test
jge
fimull
ret
addr16
cmp
or
lahf
cltd
int
shlb
and
gs
int
inc
cwtl
es
rclb
xchg
fcoml
sbb
inc
loopne
lods
cmp
pop
mov
enter
pop
xor
add
sub
cmp
mov
or
scas
pusha
iret
cmp
cmp
testb
data16
idivb
mov
inc
mov
jecxz
xchg
xor
push
mov
int
xchg
push
sbb
jp
add
decl
lret
xchg
enter
fdiv
data16
outsl
xchg
pushf
adc
negb
stc
lea
add
fwait
jp
xor
mov
mov
notb
xchg
cmp
adc
test
jnp
mov
add
mov
jns
inc
jl
or
push
xchg
ja
dec
xchg
sbb
jmp
loope
xor
fcoml
inc
push
mov
imul
inc
imul
sub
pop
icebp
or
movsl
mov
loopne
cmpsl
fcmovbe
loope
adc
leave
inc
and
cmp
in
mov
jge
arpl
inc
fnstcw
inc
xchg
or
fnstcw
sub
scas
fwait
cmpsb
imul
mov
bts
inc
mov
or
or
pop
push
and
pop
cmpl
or
out
sahf
cmp
push
cli
movsb
test
mull
adc
sbb
jmp
mov
cmp
mov
jns
jmp
push
adc
es
sbb
imul
js
negb
mov
in
mov
inc
aam
lahf
ficoml
notb
mov
and
xor
pop
popa
mov
test
cmp
push
dec
mov
inc
test
dec
push
in
in
cmp
mov
pop
test
mov
cmp
sub
sub
int3
bts
stos
or
and
lcall
jecxz
push
jne
xchg
fwait
pop
and
imul
jns
pop
jg
pushf
ret
cld
jnp
or
xchg
ret
mov
ljmp
add
inc
xor
cmp
adc
cmc
or
movsb
push
jne
aad
sbb
cmpb
mov
mov
orb
xor
test
fcompl
pop
and
and
pop
push
sbb
cli
lock
clc
sub
movsl
push
jle
and
cli
repz
inc
sub
call
cmp
push
andb
in
push
or
pmaxsw
insl
gs
cmc
mov
mov
sub
xchg
jl
roll
cmp
jne
sub
imul
movsl
mov
jnp
push
dec
inc
daa
subl
mov
lret
mov
stc
outsb
add
push
fs
push
aam
push
scas
push
fmull
cmc
sub
xchg
int3
push
ljmp
push
sub
adc
out
inc
aas
loopne
lods
rol
lods
repz
into
cwtl
aad
xor
mov
test
xchg
nop
inc
adc
std
popa
and
cmpsb
inc
cmp
push
and
push
movsl
push
movups
gs
mov
imul
pop
outsl
pop
add
out
mov
inc
pop
jmp
inc
jle
jmp
ret
or
xchg
pop
dec
lock
cmp
out
int
aaa
mov
xchg
adc
aam
pop
xchg
or
push
stos
mov
js
mov
jg
pop
lret
test
iret
sti
imul
cwtl
movntq
roll
popf
movl
jne
fs
loope
leave
push
lret
fcmovu
insl
jecxz
pushf
mov
js
add
out
sub
jp
xchg
xchg
fisttpll
add
push
in
stos
int3
push
cmp
jmp
sbb
mov
push
push
ret
sbb
mov
xchg
sub
lcall
cld
sbb
cmp
jmp
insb
xor
cmp
fsubl
lea
add
push
fbstp
push
imul
jmp
dec
mov
jmp
cmpsb
add
loop
mov
arpl
mov
sti
movsl
call
dec
cmp
lcall
jecxz
sub
nop
xor
inc
mov
mov
or
mov
xchg
mov
and
cmp
out
es
mov
outsb
push
mov
shlb
lods
cmp
sub
sbb
xchg
xor
jno
idivl
push
add
mov
and
push
and
or
mov
pop
shrl
popf
shrb
aas
jo
fdivrl
rcl
mov
ljmp
mov
add
mov
test
inc
xlat
xor
data16
pop
xorl
fdivrl
sbb
mov
push
jnp
jnp
or
movsl
mov
incb
pushf
mov
lret
test
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
sbb
subb
ja
fiaddl
addr16
adc
cmpsb
mov
sub
inc
jae
ret
imul
rolb
in
push
fnstsw
stc
popf
fistps
or
add
cld
mov
je
mov
shll
mov
fchs
mov
hlt
fwait
sbb
je
xor
shl
sarb
rcr
xchg
scas
fdivl
lcall
push
mov
push
mov
lea
imul
xor
dec
push
cwtl
push
jmp
push
inc
fcmovu
mov
roll
mov
ds
mov
scas
sbb
pop
outsl
mov
iret
mov
aaa
stos
daa
ss
insb
mov
sti
inc
push
sub
and
xchg
daa
ret
jecxz
fildl
cld
out
shl
cmp
mov
popa
or
or
jnp
mov
ljmp
in
jl
jmp
das
insl
leave
pop
aas
je
movsl
movsb
imul
and
dec
mov
pop
mov
popa
push
xchg
jmp
shl
push
fistps
sbb
into
adc
imul
adc
push
stc
sbb
in
pop
push
inc
loop
or
dec
cmp
loopne
pop
repz
mov
mov
dec
pop
sbb
cmp
cmpsb
or
movsl
pop
add
adc
int3
cld
testb
inc
je
movsb
nop
icebp
scas
add
lcall
in
fisttpl
lock
xchg
add
mov
or
mov
loop
or
push
or
jmp
mov
leave
adc
stos
ja
jmp
cmpsl
jb
push
pop
js
cs
loop
dec
sbb
popa
push
mov
outsb
sbb
leave
inc
jle
in
pop
xor
lock
mov
out
cli
mov
mov
pop
xlat
fildl
or
in
ret
fadd
insb
pop
sub
mov
dec
xor
out
mov
mov
shll
or
hlt
push
dec
sub
ljmp
jne
adc
lahf
sbb
je
aaa
inc
push
pop
and
inc
std
xchg
inc
mov
dec
pusha
mov
xchg
ret
mov
aas
mov
and
adc
nop
leave
mov
mov
push
into
repz
or
loop
inc
add
mov
clc
sbb
aaa
aaa
or
cmpsb
imul
outsb
xor
add
mul
jnp
test
mov
jmp
lcall
fcmovne
stos
leave
test
jbe
adc
mov
fwait
xchg
xchg
mov
sub
mov
xor
cmp
cmp
jno
bound
les
and
dec
xor
in
dec
mov
pop
fldenv
mov
jp
push
call
repz
xchg
ja
fists
inc
outsb
aad
jb
ja
mov
repz
sbb
lahf
mov
xor
xchg
push
sub
jmp
mov
loope
int
ret
movsb
cmc
movsl
testl
mov
mov
cmpb
ret
add
aas
xorl
cmc
leave
andl
jmp
bound
fisttpl
dec
add
jmp
xor
adc
dec
pushf
sbb
adcb
out
xor
pushf
popa
push
sarl
sub
jns
pop
pop
jo
clc
into
call
mov
sub
dec
data16
mov
pop
mov
int
ktestb
jg
popa
push
and
cmpb
jg
dec
sbb
ror
and
sbb
xor
stc
inc
ja
mov
stc
aaa
sub
sti
or
jns
fdivr
jmp
in
adc
stc
pop
idivb
cmp
xchg
sbb
ja
lds
pushf
push
push
xchg
sub
testl
aam
mov
nop
sbb
and
rcrl
fisubrl
pop
ret
out
jmp
addr16
outsl
or
dec
lea
xchg
push
rclb
scas
mov
xor
lea
mov
std
loope
pop
pop
in
and
shll
inc
jle
push
sub
or
cmpsb
enter
pop
fs
push
and
mov
loopne
mov
daa
arpl
addr16
leave
aam
jns
pop
xchg
bound
xchg
rcrl
xchg
cmpsb
mov
fisttps
xchg
popa
imul
sbb
jecxz
ret
sub
fcomp
xor
dec
mov
scas
push
in
cltd
dec
div
jecxz
fdivs
xchg
outsb
cltd
loop
sbb
nop
movsb
repz
jmp
fmuls
stc
jb
push
jmp
push
roll
cmp
mov
mov
mov
pop
outsb
sbb
mov
jg
sub
push
sub
leave
test
mov
shl
adc
xchg
fistps
inc
stos
sti
daa
std
int
popa
or
jns
cli
jmp
daa
mov
ret
jnp
cmp
nop
pop
hlt
je
aas
test
sub
or
push
cmp
adc
out
lds
xchg
fisubrl
lock
mov
enter
loop
jmp
xor
mov
and
fwait
inc
data16
cmp
lods
pop
imull
xchg
inc
lcall
popa
mov
nop
pushf
shrl
cmpsl
and
cmpl
jno
and
ss
xchg
pop
dec
add
adc
pusha
lret
add
cmp
xor
pusha
daa
sub
mov
nop
sub
mov
test
lcall
push
js
jnp
popa
sub
cmp
mov
mov
cmpsl
mov
or
inc
xor
insb
mov
adc
xor
aas
ficompl
mov
xchg
xchg
cmp
dec
pop
stos
jecxz
pop
insl
xchg
pusha
cmpsb
jge
fcompl
repnz
loop
nop
cmp
adc
mov
pop
jmp
dec
mov
lea
push
in
add
jno
sbb
sub
inc
dec
sahf
loopne
mov
mov
dec
outsb
dec
adc
sub
mov
pop
call
adc
mov
cmp
jns
in
int3
mov
push
jo
scas
mov
mov
dec
mov
jnp
mov
outsb
jo
cmp
sbbb
mov
push
cmp
cs
stos
push
das
mov
inc
pushf
dec
xchg
divl
inc
shlb
addr16
mov
test
cmpsb
and
or
xchg
ret
addb
int3
in
std
popa
shl
mov
mov
outsb
pop
pop
mov
pop
jnp
push
jns
add
lahf
popf
repnz
cmp
xchg
pop
fdivs
cmp
loopne
push
pushf
jo
out
faddl
mov
movsl
cmp
mov
arpl
xchg
adcl
das
flds
ljmp
call
daa
add
push
add
mov
in
out
enter
daa
mov
into
sub
in
jecxz
sarl
aad
push
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
jg
fs
sbb
ja
scas
lret
in
pop
fwait
rclb
fisttps
iret
jae
aaa
adc
cwtl
movsl
mov
xor
in
int3
addr16
pop
xchg
jmp
pop
jle
push
push
shl
scas
inc
je
push
lret
inc
mov
sub
xor
lods
in
in
xchg
mov
pop
fldt
stos
xorb
loope
pop
je
outsb
jne
xor
jmp
mov
cmp
test
jl
sbb
xor
adc
jle
mov
mov
jmp
xchg
adc
int
jno
xchg
dec
pop
xlat
icebp
inc
mov
daa
adc
aaa
sti
and
and
mov
hlt
push
dec
je
mov
sbb
in
and
fldenv
mov
push
push
popa
gs
arpl
ljmp
xor
repnz
adc
add
jg
test
data16
aas
out
or
push
cmp
es
add
mov
loope
fildll
insl
dec
cmp
out
loope
sbb
add
sarb
sbb
idivb
sub
lods
or
adc
cmp
out
jmp
pop
pop
add
mov
cmp
jg
arpl
jmp
loope
inc
mov
push
sub
lea
xor
ss
lret
xchg
pop
arpl
mov
xchg
mov
mov
mov
fs
jmp
int3
in
jbe
nop
jle
xlat
enter
sub
add
inc
bound
scas
jb
jne
ja
nop
push
loope
inc
push
stos
loopnew
add
xor
cltd
push
cmp
ret
mov
mov
push
push
xchg
push
cmp
nop
jno
jnp
dec
lret
nop
dec
jge
imul
sti
rorb
fs
dec
ret
or
cld
dec
or
add
lcall
mov
mov
cmp
mov
cmp
push
lods
push
sub
mov
iret
or
jb
cmpsl
clc
mov
mov
sub
cmp
mov
out
mov
lret
sahf
cmc
ljmp
and
cmpsb
mov
or
sub
push
mov
mov
in
test
addb
or
addr16
scas
mov
mov
mov
test
jmp
sbb
jle
inc
loop
or
sbb
sub
mov
cmp
mov
jnp
and
mov
push
in
push
xchg
or
or
adc
lock
cmp
test
cmp
bound
sub
or
sarl
mov
sub
xchg
daa
subb
call
mov
cmpl
ja
inc
int
hlt
pop
cmpsb
cmp
and
xchg
xchg
adc
cli
sbb
sub
adc
lock
jne
dec
lcall
and
aaa
xor
cmp
movsb
lcall
cmp
pop
sarb
scas
daa
dec
xor
bound
push
lret
cmp
cwtl
hlt
inc
cli
xor
sub
mov
add
shr
sti
or
jle
filds
pop
inc
jb
sbb
push
mov
or
fnstsw
iret
std
push
xchg
mov
aam
fdivl
inc
jns
add
rcr
mov
or
popa
dec
inc
sti
xlat
popa
mov
push
fld
sub
and
mov
push
popf
std
jg
fdivrl
dec
pop
shll
ret
jbe
test
jp
jp
out
and
mov
add
adc
push
mov
imul
jmp
out
push
pop
mov
xchg
iret
lods
pop
aam
data16
icebp
inc
movsb
sub
xlat
pop
or
cmp
sub
outsb
pop
mov
aam
inc
mov
inc
add
cli
push
loop
jb
xchg
pop
int3
sahf
sub
es
xchg
aad
mov
pop
or
in
outsb
jbe
inc
ja
es
xchg
into
jp
add
gs
mov
js
mov
or
pop
lods
or
je
pop
repz
xchg
pusha
mov
out
ds
adc
push
mov
pop
lods
rclb
xchg
shlb
ljmp
sbb
fwait
push
add
xor
mov
loopne
sbb
or
inc
adc
push
dec
insb
daa
mov
scas
sbbl
int
scas
std
repz
adc
es
push
shrb
mov
repnz
or
dec
mov
or
icebp
rep
and
ja
xchg
bound
pop
rcl
lahf
int3
movb
aas
xor
jp
insl
cmpsb
inc
sbb
bound
push
icebp
pop
imul
or
stc
iretw
test
aad
fs
test
cld
mov
andl
inc
pop
out
and
cmpsb
mov
push
enter
dec
ss
shll
gs
repnz
dec
push
jno
pop
nop
xlat
call
or
ret
clc
rolb
pop
xchg
push
and
push
rorl
in
lock
inc
fisubs
adc
or
add
add
lret
scas
mov
cmp
call
cmp
jae
lods
push
xor
xor
enter
es
xchg
repz
insb
pop
add
repnz
and
rorl
jmp
cmp
inc
repnz
mov
cmpsb
inc
mov
roll
pop
add
mov
out
es
cmp
aad
cmpsb
dec
or
cmpsb
insl
stos
andl
or
cli
and
xchg
dec
cmp
cmp
sub
adc
or
jo
mov
jno
xor
jae
pop
je
mov
pop
mov
rolb
adc
push
cmp
js
lds
mov
dec
add
arpl
xor
or
sub
fiaddl
addr16
imul
xor
or
repnz
add
fwait
dec
les
xchg
mov
dec
push
pop
mov
xor
pop
insl
cmc
or
mov
pop
cmp
jg
add
enter
mov
sbb
adc
or
or
push
mov
leave
push
movsl
lahf
push
popf
xchg
sub
xchg
ja
test
insl
cmp
mov
sbb
mov
dec
dec
jl
mov
push
pop
test
inc
stos
stos
mov
adc
push
push
outsl
lret
cmp
lds
sub
sub
je
push
sub
arpl
mov
enter
hlt
clc
sbb
pop
or
xchg
movups
ret
mov
lock
adc
mov
scas
adc
rorl
cli
add
bnd
test
stos
xchg
xchg
push
xchg
jae
sar
call
mov
sbb
xchg
bound
mov
in
mov
stos
outsl
and
add
call
je
xchg
inc
jo
mov
std
xorb
addl
shl
imul
jmp
add
or
or
adc
mov
add
mov
sar
mov
shr
dec
jbe
fdivs
daa
into
fwait
daa
and
movsl
xchg
sub
jg
aad
outsb
pop
popf
int
push
add
pop
mov
pop
xchg
xor
add
or
or
or
ret
adc
les
sub
xor
add
cmp
xchg
ret
xor
dec
and
inc
dec
adc
std
mov
ljmp
sub
fwait
shr
negl
pushf
data16
int
add
mov
cmp
lahf
data16
mov
xchg
dec
xchg
jae
mov
mov
es
push
in
stos
andl
mov
jge
jle
sarb
mov
shrl
sub
sbb
xchg
xor
dec
sub
inc
inc
js
sbb
jns
pop
cmp
mov
mov
push
sub
pop
jle
das
gs
jp
icebp
js
out
aad
mov
or
cltd
dec
jecxz
data16
mov
roll
repnz
call
fsubrl
arpl
jns
mov
pusha
bound
scas
push
repnz
js
sub
or
test
lods
sub
cmpsl
outsb
sub
add
push
mov
lds
xchg
int3
in
sti
push
sub
pop
adc
inc
jmp
fnstsw
xor
subb
shll
test
loop
loopne
add
in
and
js
sub
ss
mov
sti
pop
and
mov
sub
mov
in
cmpsb
or
push
mov
pop
mov
lock
pop
ja
fadds
test
fadds
xchg
jecxz
dec
js
sbb
stos
pop
addr16
outsb
in
adc
xor
push
sbb
ret
das
test
outsb
outsl
adc
test
lds
shrb
jno
jmp
pop
sub
xchg
sub
scas
pop
jecxz
fstps
mov
sbb
insb
mov
pusha
lock
jg
stos
dec
addr16
inc
outsb
jg
cmc
dec
jb
mov
clc
jnp
push
pop
xchg
pop
fcomps
dec
mov
jle
insb
cs
cmp
cltd
pop
or
dec
icebp
nop
xchg
hlt
jle
add
lock
dec
xor
fisubl
push
and
or
jbe
std
into
jp
xchg
fs
adc
dec
repnz
mov
sub
out
mov
sbb
sub
lahf
lods
dec
rep
lds
pop
fbld
je
push
mov
cmp
rcl
add
in
jo
cmpsb
ljmp
mov
fnclex
sbb
addr16
out
inc
rcll
clc
aam
testb
popf
lret
add
aas
mov
mov
push
cmc
test
inc
aam
ss
lea
js
sbb
mov
pusha
insl
xchg
je
and
loop
dec
jbe
add
cs
inc
in
push
adc
daa
rorl
pop
out
dec
mov
test
shll
shl
ds
jecxz
out
scas
adc
std
icebp
sub
cmpsb
mov
push
sub
mov
cmp
xchg
stos
push
lods
adc
out
sbb
push
xchg
xchg
int3
and
push
fisubrs
jnp
in
insb
sbb
mov
mov
xchg
mov
imul
mov
lods
loop
inc
cmp
enter
cmp
dec
pop
mov
jns
or
aam
rcrb
pop
mov
ficoml
repz
push
pop
cmpsb
pop
mov
jne
je
jbe
scas
sbb
leave
cltd
sbb
mov
xor
lea
outsb
sti
test
xchg
gs
or
jnp
movsb
sub
add
divl
jmp
jmp
push
jo
ss
mov
nop
inc
jle
test
mov
arpl
les
shrb
ret
popf
sbbl
push
daa
movsb
jmp
stos
or
mov
sub
mov
jp
ja
lea
cmp
xor
data16
add
mov
test
and
daa
cmpsb
dec
fdivrs
jne
call
mov
inc
mov
lcall
cmpsb
scas
push
add
mov
cld
aaa
aas
mulb
xchg
int
into
adc
aam
cmp
push
mov
inc
pop
sti
jecxz
jb
xchg
xchg
mov
jns
ret
or
std
cs
shll
test
xlat
jnp
out
sub
gs
sbb
filds
inc
icebp
inc
xchg
push
inc
scas
jmp
push
pop
or
pop
insl
xchg
jo
mov
fbld
lcall
and
cmpsb
repnz
xchg
shr
call
jbe
push
sets
or
mov
add
inc
jl
dec
pop
adc
insb
cmp
notl
cmp
jmp
pop
popa
je
test
and
lock
jo
scas
xor
pop
aad
fsincos
das
movsl
push
xor
inc
adc
sub
aaa
xchg
and
in
mov
fdiv
cmp
jp
fistpll
and
sysret
mov
xchg
pusha
hlt
test
out
out
stos
js
push
inc
jecxz
nop
pushf
ret
jb
push
push
sbb
mov
loop
scas
mov
mov
dec
add
xor
pusha
sbb
lods
sbb
pop
or
dec
rolb
dec
jg
dec
mov
or
scas
xor
shrl
orl
shrl
stc
mov
sbb
imul
push
xchg
push
call
pop
mov
sbb
xor
sbb
cmpsl
aad
out
or
outsl
jp
pop
addl
inc
adc
cmc
sbb
sbb
jbe
enter
xor
mov
addr16
push
fsts
jp
test
jne
and
mov
fbstp
fists
xchg
cld
adc
lock
add
mov
das
mov
data16
mov
inc
cli
jnp
push
ret
inc
outsl
pop
and
das
sbb
fisttps
fdivrl
mov
lock
out
xor
fwait
rorl
dec
ljmp
mov
bound
sti
mov
std
int
pop
xchg
movsb
mov
test
xor
pushf
xchg
fildl
lds
adc
dec
add
aas
push
lahf
mov
dec
arpl
xor
dec
and
outsb
addr16
jp
add
ds
inc
repz
aas
or
jp
decb
mov
or
lds
cmpsb
mov
in
sub
push
mov
mov
push
scas
test
adc
loope
ljmp
lea
push
test
jne
shlb
adc
repz
fsincos
xor
out
add
xor
ds
adc
mov
leave
xchg
dec
iret
call
and
dec
fstp
pop
loopne
out
push
inc
sub
lret
pop
sbbb
ljmp
add
pop
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
dec
push
pop
xchg
or
ja
std
aad
inc
mov
fwait
mov
repz
call
and
sub
jle
push
mov
in
adc
stos
arpl
add
and
sub
int3
mov
mov
adc
mov
cmpsl
cmp
addl
loopne
jecxz
jecxz
push
fdivl
or
addb
mov
out
add
mov
cli
adc
mov
das
inc
testl
shll
mov
test
jb
sub
imul
adc
hlt
nop
fildll
push
outsl
adc
push
repnz
js
jp
jg
dec
mov
out
xchg
inc
popa
pop
push
inc
fisttpl
push
adc
and
mov
mov
ret
jb
stc
mov
jae
lcall
in
les
push
jb
sub
dec
xor
les
fists
aam
mov
xchg
daa
mov
ret
jp
xlat
lock
sub
test
dec
rorb
mov
adc
mov
lods
rcrl
cmpsb
jp
sbb
xor
push
sub
in
prefetch
out
mov
cmp
mov
push
mov
fildl
adc
in
fs
repz
popa
or
cmp
mov
pop
shll
pop
decl
sub
lock
sub
push
and
jg
ljmp
dec
lret
das
fdivs
out
int
and
test
sbb
xor
rorb
mov
cmpsl
or
jno
xor
pop
sbb
bound
popl
jle
mov
dec
pushl
lret
or
mov
in
inc
sar
jno
push
push
dec
cmp
sub
inc
and
call
jo
and
mov
clc
pop
xchg
movsl
dec
push
mov
andl
hlt
popf
mov
jb
outsb
sub
fildll
push
pop
push
mov
sbbl
sub
scas
popfw
or
push
push
scas
jno
mov
shll
pop
shlb
int3
xor
and
jbe
xchg
pop
mov
or
xlat
ret
push
push
es
loope
mov
fidivl
movsl
test
stos
cld
sub
sbb
lahf
xchg
int
into
aaa
push
sub
fstpl
mov
gs
mov
adc
js
dec
push
sub
jp
mov
push
lods
out
jnp
outsb
pop
add
xchg
xchg
adc
outsl
pop
push
fsts
xchg
mov
ljmp
xchg
pop
cs
popf
mov
loopne
call
dec
xchg
sbb
mov
mov
cmpsl
and
cmpsb
mov
out
jg
out
xor
ret
in
int3
pop
into
adc
or
icebp
pop
sbb
mov
test
xlat
repz
add
sub
add
rcl
mov
xchg
outsl
loopne,pn
push
pop
clc
into
hlt
push
leave
aad
add
sarb
xchg
inc
fwait
wrmsr
test
ds
jmp
test
xchg
lcall
fmul
fcoml
test
jmp
sarl
xor
add
xchg
add
or
rcll
sbb
aas
insl
mov
and
mov
fdivp
cmpsw
or
imul
loope
iret
mov
sbb
insb
cmp
cmp
dec
fcomps
sbb
jmp
pop
roll
mov
push
mov
or
xlat
leave
cmpsl
cmp
nop
inc
mov
xor
testl
leave
cmp
and
pcmpeqb
mov
scas
adc
js
mov
cmp
negb
push
cmp
push
mov
fsubl
loope
sbb
daa
scas
jg
xchg
fcmove
dec
adc
cmpsl
sub
cmp
rolb
mov
mov
bound
imull
push
and
cltd
and
mov
bound
mov
pop
inc
ret
cld
mov
aam
imul
adc
push
arpl
and
int
arpl
fnsave
sbb
cmc
dec
push
pusha
push
pop
xor
lods
mov
push
imul
push
insb
sbb
cs
ljmp
dec
adc
and
mov
jp
or
sbb
ret
outsb
stos
xchg
sbb
pop
pop
movsb
push
ja
daa
pop
iret
jae
iret
xor
jge
aad
int3
mov
in
pop
enter
dec
rclb
and
xor
mov
pop
jp
pop
push
push
out
aaa
idivb
outsl
dec
in
outsl
lds
cmc
aas
aam
inc
popa
int
stc
adc
mov
mov
outsl
into
or
cmpsb
stos
mov
xchg
jns
inc
imul
xorb
xor
and
sarb
push
and
ljmp
xlat
ret
dec
mov
iret
lea
adc
push
cmp
hlt
ja,pt
and
xchg
pop
sub
leave
clc
aaa
xor
repnz
cmpl
push
xchg
bound
mov
sub
mov
rcrl
imul
insb
push
in
push
faddl
cwtl
xchg
jb
jmp
mov
lcallw
push
xchg
sbb
fs
and
push
mov
lret
or
lret
lahf
mov
mov
dec
cli
fistpl
out
push
in
loope
loop
ljmp
rcrb
adc
mov
outsb
test
subl
xor
sub
lret
aas
jbe
loop
xchg
cld
cmp
icebp
hlt
xor
mov
test
mov
pop
mov
lods
stos
xlat
test
xorl
mov
je
hlt
int3
jp
imul
push
inc
inc
ja
out
daa
jns
arpl
aad
mov
inc
das
mov
in
adc
adc
dec
pop
inc
pop
fstl
and
loope
fsubr
adc
or
lds
jnp
rep
xor
orl
orb
in
rcll
cmp
and
leave
test
repz
inc
jge
cli
dec
xor
shll
test
test
orb
inc
addr16
jle
fldenv
je
or
dec
aaa
cs
pop
push
imul
das
pop
insb
stos
loopne
mov
gs
inc
sbb
xchg
pushf
int
das
shll
or
dec
adc
or
mov
mov
mov
push
mov
mov
and
jns
adc
mov
sub
pusha
mov
jb
mov
repz
js
sbb
lods
or
jp
into
xor
cmp
pusha
mov
into
scas
daa
test
inc
ret
dec
daa
jecxz
cmp
pop
cltd
ret
test
popa
gs
je
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
out
lock
or
stos
aam
push
xor
jge
sbb
dec
xor
pop
cwtl
or
jp
add
and
ret
xchg
cmp
mov
and
add
and
jne
mov
jle
mov
into
shrl
mov
aam
dec
pop
dec
sbb
inc
ljmp
mov
jae
in
fists
inc
push
gs
dec
jecxz
and
mov
sub
js
cwtl
sti
dec
fdivr
pop
nopl
push
fdivs
pop
sub
sbbl
pop
clc
dec
mov
imul
cmpsb
xor
out
xor
push
pop
jbe
mov
mov
inc
push
pop
dec
dec
sahf
inc
and
lahf
mov
cmp
addr16
mov
int3
lea
repz
pop
jle
es
fsubrl
push
cltd
les
jbe
cmp
ja
test
sbb
daa
inc
cmpsb
fs
mov
in
lcall
add
cltd
push
imul
iret
daa
lods
pop
out
xor
aaa
xchg
cmp
jne
cmp
scas
iret
fstpl
ss
push
repz
inc
or
sti
lea
loopne
mov
adc
div
inc
xor
fistl
inc
mov
in
subb
lret
sarb
ret
jb
popa
jno
shl
dec
test
iret
pop
xchg
cmp
aas
or
mov
sbb
subw
jle
jae
xchg
test
mov
xor
mov
mov
fsubrl
mov
pop
jnp
fcmovnu
arpl
dec
popa
sub
es
or
mov
cwtl
mov
sub
adc
sub
pop
dec
dec
add
rorl
shr
xchg
adc
mov
shrl
clc
mov
or
and
outsb
mov
shlb
push
push
dec
pop
movsb
lods
movsb
xor
ds
mov
adc
insl
mov
push
movsb
lock
lcall
xor
inc
in
ds
pop
movb
xor
clc
sbb
fs
outsb
daa
add
jmp
fwait
repz
lahf
stos
mov
adc
cmp
xor
jmp
pop
or
inc
xchg
in
jbe
in
inc
sbb
test
adc
cmp
xchg
or
lods
out
sub
rorb
push
mov
mov
aaa
inc
sub
sbb
lods
int3
lret
std
stos
testl
inc
mov
sub
add
pop
jg
in
aas
and
inc
je
mov
movsb
shlb
jmp
cmp
and
dec
cmpsl
jnp
scas
fcmovbe
pop
ret
sahf
outsl
gs
push
mov
stos
test
mov
dec
frstor
outsb
push
push
xlat
clc
mov
fildll
sbb
and
stos
mov
in
pusha
sub
mov
mov
lds
rclb
loopne
push
sub
fisubl
inc
lret
cmpsb
repnz
cmc
repz
cmp
sbb
in
in
fisttpl
pushf
push
cwtl
rcll
hlt
imul
popa
sahf
lahf
setne
cmpsl
out
add
inc
out
pop
mov
xchg
jmp
mov
mov
cmc
and
data16
adcl
repnz
dec
es
add
sbb
dec
gs
sub
cmpsl
dec
push
pop
lahf
adc
adc
les
or
data16
mov
add
test
jecxz
jp
out
test
out
inc
sbb
or
or
fiaddl
pop
orb
mov
and
fucom
pop
mov
xchg
repz
push
mov
pop
pop
pop
pop
lds
xchg
int3
icebp
movsb
dec
add
ja
xor
add
pusha
test
in
out
inc
mov
imul
imulb
xchg
mov
repz
push
mov
aad
shl
fwait
icebp
mov
pop
dec
repnz
daa
js
in
cli
test
cli
mov
dec
cmp
sub
jne
std
xor
add
outsl
pop
mov
jle
sbb
nop
test
das
leave
dec
or
fisttpl
cld
xor
icebp
cmp
mov
dec
cmp
cwtl
cli
repz
jmp
inc
ss
mov
lahf
fsts
fstpl
sub
fidivrs
cmpb
pop
andnps
shl
test
inc
call
xchg
daa
pop
push
push
fisubrl
jmp
inc
xchg
mov
push
mov
push
mov
shll
add
fildl
cld
iret
push
dec
sub
xlat
pop
aad
inc
insl
push
push
loopne
cld
in
lahf
sub
mov
les
push
cli
dec
sub
aad
sbb
es
loopne
rcrb
adc
lods
mov
jmp
cmpsl
xchg
or
mov
je
cmc
jecxz
or
out
pop
xor
dec
add
in
add
dec
sub
inc
sub
xchg
lret
cmp
fs
jo
iret
lahf
addr16
out
push
cmp
fstps
ds
aaa
sub
dec
mov
lock
insl
or
mov
sbb
xor
push
mov
pop
loope
push
dec
sub
in
ljmp
push
mov
mov
add
fistpll
sar
push
and
ds
jbe
adc
inc
adc
inc
lock
idivl
mov
xchg
push
leave
xor
pop
mov
xor
push
pop
pop
insb
mov
and
xor
or
sbb
mov
xchg
cli
fisubs
shlb
sbb
test
psrlq
mov
cmp
je
jbe
test
push
testb
in
dec
ficoms
scas
cs
aaa
insl
adc
jg
add
lret
or
clc
pop
lds
or
adc
push
scas
push
call
orb
orl
mov
out
cli
mov
lock
and
cs
push
std
xor
mov
in
sbb
je
xor
test
insb
mov
sar
int
iret
mov
mov
shlb
cli
shll
xchg
pop
out
dec
xchg
xchg
mov
ljmp
fs
and
mov
adc
iret
dec
inc
nop
dec
fcomps
cmp
jg
fildll
arpl
sub
jb
xor
mov
in
mov
mov
mov
xlat
out
cmp
popaw
loope
sub
aas
mov
mov
inc
push
pop
pusha
in
leave
sarl
and
pop
push
or
cmp
pop
test
test
pusha
sub
mov
imul
in
lret
and
dec
pop
jle
loop
fucomip
in
sahf
sbb
dec
fisttpll
mov
pop
inc
jle
mov
shrb
out
loopne
loop
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
dec
jl
movsl
cmp
cmp
stc
dec
sbb
cltd
adc
mov
mov
dec
arpl
in
pop
int3
cmc
out
js
ret
inc
mov
pop
icebp
pop
js
imul
aam
orl
lret
push
sti
add
sub
cmp
jmp
stc
divl
push
inc
stc
lahf
clc
mov
sar
sbb
and
mov
xor
xor
out
mov
mov
and
jecxz
lcall
cmc
xchg
popa
nop
cli
cmp
and
inc
fisttpll
jp
hlt
mov
cmp
cmp
xor
mov
popf
sbb
fidivrs
clc
xlat
in
test
sub
jo
cld
and
sahf
in
push
add
add
sbb
cmp
adc
pop
add
push
mov
mov
and
pop
mov
and
dec
xchg
std
cltd
and
inc
rclb
cli
lea
ljmp
rcl
aam
jnp
roll
int
dec
adc
mov
jmp
stos
push
bound
stos
pop
sub
and
cmp
ret
or
xchg
leave
mov
insl
aaa
sbb
xchg
outsl
inc
jb
pop
push
ljmp
xor
sbb
or
cmpsl
je
addr16
jge
aas
jle
lret
push
xor
adc
jle
stc
cld
xchg
inc
mov
sub
addb
push
add
leave
jno
mov
cltd
out
leave
xchg
ret
cmp
call
inc
ljmp
nop
jmp
sub
inc
inc
shl
pop
stos
and
dec
notl
popf
push
and
ja
loopne
mov
pop
add
ret
fcoml
mov
test
or
inc
push
mov
into
jo
subl
sbb
aas
jl
addb
push
loop
decb
sub
fs
sbb
and
or
dec
aad
pop
leave
cs
mov
icebp
push
lcall
mov
roll
fmuls
nop
imul
and
sbb
push
mov
xchg
cmc
jbe
popf
mov
add
sbb
inc
xchg
aad
jg
in
ret
inc
mov
pusha
popf
and
cmpb
sti
or
xor
adc
mov
dec
mov
mov
jg
sbb
mov
nop
pop
push
and
leave
call
divl
push
ret
movsb
or
mov
mov
xchg
lods
mov
pop
lahf
lcall
cltd
outsb
popa
dec
or
pop
or
dec
mov
loop
leave
sbb
ret
repz
xchg
pop
je
push
sti
pop
mov
sarb
cwtl
mov
sbb
es
test
mov
negl
dec
pop
fidivrs
adc
stos
fstpt
scas
enter
loopne
andps
mov
pop
cmp
popa
jb
aam
cs
movsb
cmp
je
add
addl
fnstenv
stc
sbb
pop
mov
mov
pop
imul
loopne
mov
mulb
test
int3
inc
rol
lret
icebp
insl
cmpsb
scas
xor
jae
out
mov
push
lds
mov
es
int
out
arpl
pop
subl
pushf
mov
ds
ds
jge
push
mov
into
std
and
sub
cmp
loopne
xchg
arpl
nop
dec
jo
push
add
add
pop
ret
subl
inc
icebp
clc
inc
aaa
jmp
xchg
jmp
lret
pop
dec
dec
lahf
push
push
sub
int3
jno
push
sub
lahf
xchg
dec
mov
mov
or
sahf
es
popa
inc
mov
xchg
push
xchg
jg
loopne
mov
fsubs
mov
orb
adc
add
incl
mov
xchg
loop
loopne
out
test
push
cmp
cli
sarl
mov
jmp
aam
cmp
in
adc
push
inc
fcomps
mov
pop
rcrl
mov
leave
nop
ror
mov
mov
and
cli
sbb
cld
pop
cmp
daa
ss
jmp
adc
inc
fidivrs
mov
cmp
scas
lret
and
or
and
pop
pop
xchg
push
sbb
cmp
or
clc
xchg
sarb
inc
lret
jl
shlb
sbbb
adc
sub
dec
int
pop
das
and
or
sbb
cltd
sub
insl
pop
xchg
sti
outsl
mov
mov
fdiv
jp
test
je
pushf
ficoml
pop
ror
inc
fistpl
push
cvtps2pd
jnp
lcall
sbb
cmp
push
add
cmp
sub
sub
insl
gs
push
test
cwtl
cmp
iret
into
shlb
icebp
int
adc
xchg
std
mov
sbb
mov
push
mov
pop
lods
pop
inc
mov
mov
pop
scas
jns
test
imul
enter
jg
cli
cvtdq2ps
repnz
pop
pop
inc
jae
xor
data16
and
ror
ds
cmp
xchg
pop
mov
jns
pop
sub
fcos
inc
inc
testb
mov
adc
push
dec
arpl
mov
ret
inc
sub
jle
mov
test
lret
dec
dec
xor
scas
lahf
imul
test
inc
cmp
sbb
enter
fcomp
addr16
mov
imull
test
loope
pop
sub
jl
int
adc
imul
nop
ljmp
add
fistl
in
xchg
push
lahf
xor
adcl
jne
push
in
or
pop
call
push
adc
data16
xchg
aad
dec
cli
test
xor
les
in
mov
add
mov
xchg
sbb
dec
cmpsl
or
inc
jmp
and
add
dec
stos
cmp
ljmp
call
jmp
hlt
sub
push
sbb
mov
inc
mov
aam
xchg
mov
cmpsl
adc
sbb
push
jmp
and
mov
mov
insb
mov
push
push
data16
jne
notl
cmp
imul
sbb
aad
fwait
sub
pusha
dec
inc
rep
mov
sub
jg
dec
jns
xchg
cmp
divl
jns
out
fsubs
mov
push
or
jno
xchg
sub
dec
jp
pop
jp
mov
or
add
mov
dec
test
rorl
fs
fsubs
xchg
push
repz
adc
fistpll
out
ss
adc
mov
mov
lret
scas
mov
cmp
bound
xor
fs
add
roll
jno
mov
imul
sbbb
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
divb
scas
lret
ja
jle
mov
push
in
mov
mov
or
or
push
xchg
and
test
ud1
mov
pop
push
mov
push
or
lods
or
in
pop
mov
push
fdivp
mov
mov
outsl
xchg
cmp
mov
mov
jmp
cmpsb
xchg
fchs
jge
add
andb
out
push
sub
cmpsb
sub
dec
lcall
mov
cmp
mov
nop
jmp
mov
adc
jmp
mov
sbb
push
daa
js
imul
dec
lret
invd
pop
xchg
cwtl
pop
sti
xchg
cmpl
jecxz
mov
or
pop
mov
add
test
pop
xchg
neg
rsm
jae
clc
fisttps
sub
sbb
dec
movsl
in
test
ljmp
icebp
js
cld
imull
aam
or
jo
fisttpll
faddl
ljmp
imul
or
sub
scas
push
mov
dec
outsl
pop
iret
enter
call
jb
lret
xchg
pop
rep
fcmovnb
or
call
cmp
shlb
in
mov
mov
in
push
aas
sub
adc
lods
lds
in
sub
mov
and
mov
aam
add
or
aam
and
sbb
pop
xor
cmp
cmp
daa
adc
sbb
outsb
xlat
inc
mov
jnp
cmpsl
sub
push
dec
es
jns
sahf
xor
xchg
inc
mov
adc
pushf
int
sbb
mov
int3
mov
mov
pop
dec
jb
addl
lret
pushf
lahf
icebp
sbb
out
jle
ret
cmpsb
sub
daa
aam
bt
decl
mov
dec
add
jns
dec
mov
or
push
dec
adc
xor
xor
jo
or
clc
arpl
stos
pop
movsb
jb
xchg
lds
push
pop
lea
shrl
pop
ss
dec
enter
fistl
push
dec
add
push
iret
je
sub
mov
add
adc
dec
mov
pop
int3
fcom
pop
mov
inc
push
std
push
hlt
mov
or
mov
dec
and
call
enter
rcrl
sub
inc
nop
inc
jbe
scas
or
movsl
in
sbb
pop
dec
in
sti
jne
insl
bnd
sub
jge
jmp
push
daa
pop
insb
mov
int
decl
sbb
cwtl
adc
adcb
mov
loopne
sub
call
pusha
add
out
pop
inc
sbbb
insl
loop
je
loop
test
dec
inc
adc
nop
mov
adc
notb
mov
ret
adcl
gs
xchg
inc
ja
es
gs
stc
mov
pop
outsl
sbb
xor
add
or
fwait
dec
cmc
sub
mov
cld
push
sub
cs
bound
jecxz
xor
mul
dec
lahf
xchg
dec
pop
pushf
enter
sahf
xlat
sbb
mov
pop
lods
jle
mov
clc
cmp
shll
xchg
jge
repnz
popf
sub
xor
sbb
dec
movsl
push
ja
xor
lock
mov
mov
or
and
in
imul
outsl
mov
cwtl
lock
jae
cmp
pop
mov
sub
add
xor
sarb
rol
inc
jmp
ret
jge
dec
out
fisttps
xor
sub
inc
pop
inc
sub
lahf
jns
outsl
mov
pop
popf
inc
jo
xchg
xor
xchg
mov
sbb
popf
nop
cmp
mov
clc
mov
cmc
xor
mov
fs
xchg
and
cltd
mov
scas
mov
in
cmc
mov
call
cmp
jno
or
xchg
cs
aaa
or
aam
mov
xor
int3
xchg
mov
fs
and
das
insb
adc
or
lcall
mov
inc
testb
fnstsw
and
adc
xlat
sbb
icebp
imul
loope
rcrb
sbb
mov
sub
xchg
int
mov
in
mov
adc
mov
hlt
push
inc
mov
push
dec
decl
cmpsl
jp
repz
enter
jae
icebp
mov
sub
mov
cltd
jns
or
pop
sbb
add
xchg
roll
cmpsl
inc
test
pop
jg
xchg
xchg
mull
adcb
fadd
jbe
fisubrs
mov
mov
cmp
fiaddl
jne
out
jp
jl
mov
les
imul
das
mov
imul
sbb
mov
or
jmp
sub
cmp
inc
add
jb
mov
and
ret
and
insl
andb
pushf
cs
push
dec
scas
lock
push
aad
sbbb
cmp
cltd
lods
gs
sahf
popa
fstpt
mov
mov
jmp
jbe
jmp
lds
xlat
pusha
sub
jno
dec
xchg
mov
fadds
stos
inc
and
jns
fyl2xp1
bswap
mov
aaa
push
cmp
aaa
push
pop
xor
mov
inc
sbb
pop
adc
data16
fwait
adc
push
sub
pop
dec
cmp
sbb
data16
dec
in
xor
cmp
adc
sbb
icebp
fists
xchg
dec
or
or
add
xor
lsl
add
or
jmp
out
or
mov
jg
or
sub
and
aas
adc
aas
mov
jbe
je
jecxz
into
push
pushf
jge
repz
jbe
vaddpd
xor
mov
clc
add
ret
das
lret
push
scas
add
push
mov
xchg
push
dec
jnp
push
andl
pop
je
jnp,pt
push
repnz
lods
andl
arpl
jo
lea
lods
lds
xor
in
pop
nop
aad
ret
shr
push
mov
out
aam
push
pop
xor
vpackssdw
pop
repz
inc
inc
push
jb
in
jns
xlat
sbb
mov
fists
mov
adc
aad
sar
loopne
sbb
jo
popf
or
fimuls
out
fs
jmp
cld
pop
pop
mov
and
pop
mov
push
and
xchg
out
test
cmp
rclb
stos
mov
push
jmp
xor
jecxz
imul
ret
sbb
pop
push
test
inc
xor
mov
out
popa
mov
cmp
jp
cmp
xlat
mov
cmp
lea
push
sbb
test
jae
pop
and
pop
xchg
jne
adcb
lret
xchg
cmp
cltd
jle
adc
movsl
pop
in
xchg
pusha
sub
mov
inc
js
idivl
out
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
cwtl
fmuls
mov
mov
add
xchg
subl
in
stc
call
mov
and
or
ss
cmc
mov
aam
gs
pop
pop
mov
sub
pusha
push
xor
mov
or
stos
icebp
iret
and
and
popf
push
insb
cmp
std
notl
ljmp
pop
lds
cmp
flds
mov
xchg
loope
js
iret
push
dec
xor
mov
loope
inc
inc
mov
inc
stos
or
fwait
add
arpl
xchg
and
push
xor
movsl
ror
xchg
and
add
adc
jp
xchg
pop
ja
call
je
fdivl
call
fisubl
pop
xchg
ds
clc
dec
mov
cwtl
inc
add
push
sub
ret
jecxz
cmp
pop
ja
call
mov
push
js
int3
fsubs
add
sub
lret
and
js
dec
or
icebp
sbb
bound
and
pop
mov
xchg
adc
jp
add
adc
inc
outsb
jbe
fmul
xchg
jle
mov
jno
mov
shlb
js
push
pop
sahf
and
jg
icebp
movsl
add
orl
call
push
repnz
ss
push
xor
stos
sub
sbb
sub
movsb
lret
and
lahf
jae
out
add
fs
pop
jp
in
pop
cmp
xor
add
lea
xchg
mov
xchg
or
or
sarb
test
insb
cmp
imul
out
adc
adc
pop
jp
outsl
xor
dec
push
ret
popf
xchg
adc
mov
stc
sub
cwtl
subl
sbb
movsl
leave
not
or
xchg
fstpt
sbb
mov
pop
les
xlat
les
fiaddl
stos
push
movsb
rcrl
mov
xchg
into
dec
or
loopne
sub
or
xor
clc
pop
addr16
pop
mov
inc
jmp
arpl
nop
fmul
xchg
adc
addb
adc
arpl
dec
cs
inc
mov
cmp
add
fsubrl
loop
pop
jne
and
insl
in
fwait
outsb
pop
fisubl
arpl
bound
mov
jb
mov
sub
mov
xor
out
jo
sub
mov
fistpll
xor
push
xchg
adc
insl
cs
adc
jle
je
popa
jb
lds
adc
adc
mov
das
inc
cmp
sarl
mov
mov
orl
outsl
or
and
xchg
sub
or
lret
cmp
pop
push
lahf
mov
push
push
jns
cmp
cltd
imul
mov
lods
cmp
mov
stos
gs
andl
in
adc
add
sbb
mov
sub
jno
or
sub
pop
sbb
mov
or
push
pop
inc
ror
or
out
negl
imulb
bound
out
inc
mov
int3
movsl
cmp
out
mov
call
lock
adc
xor
and
js
scas
in
inc
mov
pusha
and
cmpsb
test
into
pusha
enterw
addr16
je
jnp
jl
fsubrl
fidivrl
mov
push
out
mov
xor
sbb
insl
sbb
adc
mov
js
pop
mov
mov
mov
pop
popa
leave
xchg
cmp
and
fs
js
fisubrl
or
jbe
sub
das
stc
cmpsl
cmp
enter
push
pushf
aam
ljmp
lahf
or
insl
dec
daa
clc
adc
or
xor
lds
movsb
call
sbb
inc
and
dec
mov
sbb
sti
out
mov
je
aad
xor
pop
push
adc
xor
lahf
xchg
mov
xor
sbb
cmp
ss
mov
jmp
repnz
mov
xchg
rorb
jnp
or
cli
push
adc
stos
mov
repnz
or
popa
fildll
xchg
lds
add
jae
outsl
stos
push
shrb
fistpl
inc
dec
gs
fdivrl
pop
fisubrs
push
xor
inc
sbb
cld
sti
shrl
daa
xchg
movsb
xor
pop
jno
adc
mov
adc
jae
repnz
mov
scas
fldt
sbb
mov
mov
out
cmp
jo
sbb
dec
and
lea
jp
xor
jne
addr16
add
icebp
lret
dec
popa
pop
cmp
aam
sbb
jns
jle
pop
arpl
sahf
divb
insl
push
lret
fiaddl
cmp
mov
sti
call
nop
mov
repnz
push
jg
iret
sbb
jmp
mov
lret
adc
iret
js
cmp
mov
push
scas
shll
lret
lahf
cmp
aaa
push
int3
xor
rclb
testb
les
inc
scas
rcl
popf
mov
xorps
jbe
jbe
movsl
add
out
fbstp
inc
je
outsb
and
push
movsb
xchg
sub
xchg
aas
mov
imul
sbb
sub
cmp
mov
leave
add
test
enter
xchg
add
sub
ljmp
and
pop
dec
adc
cwtl
scas
xor
hlt
insl
add
ret
fiaddl
or
insb
mov
sti
sbb
int
mov
xchg
fcoml
testb
stos
notb
mov
sub
dec
je
mov
jno
stos
out
movsb
bound
jb
inc
rolb
lods
push
mov
mov
hlt
loopne
add
jns
popf
pop
push
test
sbb
shlb
lahf
xchg
inc
or
lods
cs
sub
xchg
dec
fdivl
notb
dec
sbb
inc
pushf
inc
rcrl
outsl
repnz
adc
add
nop
inc
int3
xchg
jae
pop
adc
add
mov
mov
jbe
insb
adc
pop
ret
xchg
pop
andl
mov
dec
cmpsl
ja
fprem
inc
sbb
pushf
inc
test
sti
mov
push
rorl
int3
xor
rcl
xchg
stos
insb
push
sbb
add
mov
out
cmp
cs
pop
push
stos
cmp
or
mov
inc
shlb
mov
push
push
iret
outsl
sbb
and
and
test
cld
jg
dec
iret
cwtl
xchg
int
mov
data16
stos
or
push
out
fwait
push
fs
out
ds
jle
daa
mov
push
pop
xor
mov
and
push
clc
jns
xchg
test
cmpsl
in
ds
xchg
ss
add
inc
xchg
enter
sahf
dec
push
outsb
movsb
mov
fstpl
int3
or
sub
jae
sbbl
cmc
in
insb
int
sub
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
data16
shrb
cmovb
xchg
fdiv
icebp
sub
sbb
xor
les
ljmp
pop
sbb
test
sbb
add
mov
mov
fisttps
shrb
jmp
rcl
out
das
cltd
sbb
mov
mov
ja
xchg
roll
std
jo
mov
fbstp
int3
pop
scas
in
pop
lcall
cmp
ret
pop
push
jne
or
xchg
push
add
mov
jmp
cmp
fnstenv
mov
dec
insl
hlt
adc
xchg
or
push
negl
mov
fdivs
lods
sbb
mov
aaa
lahf
in
pop
and
outsl
and
pop
xchg
and
or
jg
mov
shlb
pop
sub
stos
das
inc
adc
cmp
push
inc
lea
add
sub
insl
outsb
imul
ret
jbe
xor
push
pop
mov
ret
das
mov
inc
inc
dec
mov
inc
movsl
mov
lea
inc
out
cmpsb
xchg
adc
sub
add
pop
mov
or
jb
dec
mov
pop
or
mov
jge
lcall
addl
and
jno
xchg
or
fildll
xor
scas
insb
in
aaa
sbb
mov
push
fidivl
es
test
cmp
adc
ljmp
xchg
sub
and
xor
cmp
sub
add
mov
test
mov
cwtl
push
repz
adc
mov
dec
dec
jg
jae
rolb
dec
int3
cmp
mov
and
push
cltd
sub
pushf
push
lods
push
adc
jmp
mov
mov
dec
xchg
rcl
mov
into
pusha
shrb
xchg
cltd
pop
mov
scas
popa
call
sbb
add
sti
ja
mov
or
push
lahf
orb
lcall
cmp
adc
pop
sub
mov
popf
dec
mov
nop
sub
flds
into
mov
repnz
iret
ds
fidivl
inc
or
aam
mov
xor
icebp
mov
mov
push
testb
pop
lret
inc
mov
pop
or
xchg
fst
dec
sti
pop
and
shl
push
out
mov
insl
lahf
lret
xlat
fst
sub
xchg
popf
aad
divb
fisttpl
inc
arpl
mov
inc
out
mov
cmc
rclb
dec
add
sub
iret
pop
pop
test
jle
out
les
je
insl
ret
fs
lahf
adc
cmp
jecxz
test
adc
je
xchg
leave
jl
push
mov
cmp
xor
push
je,pt
mov
and
inc
sbb
dec
jae
subb
aas
adc
cmp
push
adc
cmp
mov
xor
cmp
cli
and
mov
inc
jp
xor
push
pop
mov
xchg
xchg
lret
out
es
push
ja
or
into
ljmp
xchg
clc
mov
js
addb
push
mov
les
in
add
bound
xchg
out
dec
lahf
insb
out
pushf
ljmp
sub
loope
add
fsts
outsl
push
mov
sbb
scas
and
insb
inc
jbe
adc
out
adc
popa
inc
xchg
int
adc
lds
cltd
add
repnz
inc
pop
std
xchg
xor
call
ljmp
movsb
daa
sbb
dec
in
pushf
loopne
sbb
mov
insb
in
push
inc
add
subl
inc
mov
cmpsl
test
mov
mov
iret
and
mov
xchg
sub
fwait
insb
aad
mov
sarb
scas
imul
fimuls
icebp
movsl
neg
xchg
jmp
push
in
rorl
jno
in
into
pop
lods
jge
jbe
sbb
jge
xor
inc
decl
dec
or
cwtl
int3
gs
mov
in
jnp
rclb
sub
shlb
xchg
sarb
in
das
and
xchg
popf
stos
mov
sub
lahf
out
add
adc
jge
aas
push
scas
mov
jle
movsl
push
dec
pop
inc
in
fnsave
je
fsubrl
test
mov
out
fisubl
addr16
inc
sbb
ljmp
add
mov
ja
mov
fsubrp
jp
mov
mov
adc
jl
aas
ss
inc
enter
movsl
sbb
jno,pn
subl
in
pushf
and
cmp
adc
fstps
xlat
cmpsl
out
and
inc
orl
ljmp
inc
neg
jp
push
add
rorb
daa
shrb
fwait
push
mov
mov
jo
xlat
aam
or
scas
jg
adc
fwait
push
js
mov
lock
dec
cmp
mov
pop
inc
arpl
int3
cmp
ljmp
hlt
add
enter
cltd
pusha
fildl
aad
lods
psrlw
aaa
out
and
fisttps
out
mov
push
lock
insl
mov
pushf
movsb
dec
jg
nop
rcrb
jmp
cwtl
xor
cli
xchg
ret
mov
ret
xor
mov
nop
rcrl
icebp
sbb
adc
adc
inc
pop
je
mov
lret
jg
push
or
inc
call
sub
or
mov
sbb
or
ss
shll
mov
lods
jnp
rcr
sbb
ret
dec
sarb
dec
jg
repnz
add
scas
cmpsl
mov
insb
push
cmpsb
sti
test
jmp
adc
std
inc
sub
lahf
dec
iret
fildl
mov
or
cs
subl
into
dec
push
and
jle
xchg
and
jo
sbbb
icebp
xor
xor
cmpsb
out
call
pop
mov
fwait
in
in
fs
sahf
pusha
data16
jp
fldcw
aas
pop
lahf
ret
aaa
pop
add
cmp
xor
push
pop
xchg
sbb
ret
xor
rorl
movsb
les
shlb
and
cmp
pop
pop
adc
jnp
sub
cmp
pop
mov
mov
sahf
pop
in
lods
lcall
mov
loope
xchg
xchg
scas
mov
push
push
cmc
jge
xor
leave
pop
mov
in
jnp
popf
mov
outsb
fisttps
aas
pushf
jge
sbbl
neg
sbb
sbb
outsb
mov
xor
inc
mov
sbb
push
shll
lods
adc
aas
ljmp
mov
adc
bound
xor
or
sub
je
and
sti
out
shl
sub
push
das
stc
push
cmp
jne
push
or
filds
sbb
insb
push
pop
fidivs
outsb
or
stos
aad
fnstcw
add
sub
pusha
push
fnstsw
mov
jae
fdivrs
sarl
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
aam
dec
mov
xchg
iret
mov
mov
scas
push
stos
sub
jg
and
in
jp
fists
test
and
jmp
iret
rorb
pop
dec
movsl
sub
mov
xchg
scas
pop
cmp
adc
mov
jmp
aas
adc
mov
movsl
pushf
dec
sub
out
jno
rorl
pop
cmpsl
lcall
aas
inc
push
in
pop
sbb
dec
mov
inc
cmp
mov
jge
sti
jnp
pop
pusha
lcall
and
scas
push
pushf
or
adc
cmp
les
pop
inc
leave
mov
dec
sbb
stos
mov
movsb
insl
notl
mov
adc
in
mov
pop
mov
into
cmpsb
dec
adc
cmp
or
out
mov
cmc
sbb
sbb
in
mov
add
insl
int3
xchg
mov
cmpsl
test
adc
jno
ss
in
int3
ret
jl
outsl
inc
lcall
mov
jnp
call
int
stc
arpl
inc
add
and
data16
xchg
incb
repnz
inc
lods
xchg
hlt
sbb
jg
jle
xlat
repnz
pop
or
lods
test
pushf
xchg
mov
mov
inc
pop
mov
repz
in
cld
mov
rcrl
aaa
and
push
cmp
sub
dec
ljmp
repz
iret
xor
or
mov
movsl
in
pop
mov
inc
xor
inc
lret
roll
add
dec
ror
add
sub
or
outsl
popa
jno
or
cmp
mov
or
mov
jge
fdivrs
and
adc
ffreep
insl
jmp
sbbl
ja
mov
je
in
push
xchg
addb
cld
dec
dec
pop
cmp
std
pop
mov
mov
xor
test
test
inc
insb
push
arpl
sbb
sub
mov
enter
dec
out
cmpsl
aam
inc
mov
lds
dec
add
push
sti
sbb
xchg
mov
mov
sbb
jmp
xchg
push
dec
notb
push
and
mov
jo
enter
data16
adc
cmc
popf
xchg
xchg
add
loopne
inc
loop
mov
into
mov
adc
sarb
fnstenv
shrb
and
pop
pop
rcll
xlat
out
mov
ljmp
mov
jl
sub
push
jns
cmpl
into
dec
add
je
lods
sub
imul
push
flds
addb
rcr
jecxz
fwait
xor
jns
cmp
scas
in
or
mov
dec
mov
dec
mov
push
imul
std
stos
push
cmp
sbb
add
sbb
cs
negb
mov
mov
jno
mov
add
loop
xor
xor
adc
and
cmp
mov
mov
and
shll
mov
jno
cmpsb
adc
adc
dec
sub
hlt
inc
dec
pop
fmull
jmp
mov
mov
and
movsl
push
imul
push
cwtl
xchg
cwtl
test
xlat
cld
addl
clc
sbb
jge
mov
cltd
fstps
stc
mov
xchg
push
pop
jbe
imul
xchg
arpl
cmp
mov
inc
rcll
inc
xor
and
push
xchg
in
repnz
icebp
pusha
sbb
mov
loopne
and
stos
incl
in
lret
push
or
push
enter
imul
push
es
ja
cmpsl
cld
push
lahf
lods
inc
mov
xchg
popa
insl
popa
aaa
enter
adc
jns
pop
pop
int
cltd
mov
jle
cmpsb
lds
popf
mov
in
pop
daa
aas
pop
mov
sbb
jo
aaa
inc
fildl
pop
adcb
or
rcrl
jb
fisttps
mov
enter
scas
jo
adc
jge
xchg
xor
and
mov
pop
sub
popf
adc
adc
or
int
jbe
shlb
jnp
lds
mov
cmpsl
xchg
dec
inc
mov
push
pop
inc
xchg
jns
leave
aaa
cmpsb
loop
ret
and
dec
and
fs
in
sub
cmp
adc
push
out
arpl
pop
and
lock
xor
lods
xchg
dec
adc
in
cmpsl
lret
in
pop
fsubrl
push
xor
push
adc
popl
fnstsw
mov
pop
movsl
and
int3
or
sub
adc
fisubs
jns
nop
scas
insl
lret
mov
jp
jbe
pop
mov
mov
sbb
aad
push
mov
jbe
xor
lods
sub
pop
cmpsl
aam
xchg
push
pusha
sub
sbb
xchg
adc
push
sub
cs
cmovae
cmp
push
and
movsb
xor
push
push
fs
sbb
or
call
jb
jl
int
adc
out
sub
std
adc
into
sarb
cli
mov
xchg
mov
push
xor
jmp
outsb
dec
push
ss
in
mov
andl
mov
xchg
mov
iret
pop
inc
pop
add
xlat
cltd
ljmp
aam
mov
std
or
xor
in
jg
pop
daa
and
sbb
popf
mov
mov
lret
xchg
xchg
mov
loopne
test
dec
fwait
stc
jg
pop
mov
and
or
cmp
gs
inc
mov
fldenv
add
pop
pusha
mov
sbb
into
ret
mov
dec
and
push
push
sub
imul
rolb
push
sub
dec
das
mov
cmp
shll
sbb
int3
cmp
xor
lret
mov
xchg
jl
xchg
movsb
movsl
or
pusha
cld
xchg
xorl
dec
mov
adc
mov
sub
into
xchg
out
fcomps
jg
push
inc
bound
dec
push
mov
push
jb
in
dec
in
rcll
retw
mov
jae
cwtl
pushf
lret
xchg
mov
stos
mov
jo
cmpsb
push
push
jecxz
ss
mov
repnz
adc
cmp
gs
sahf
aad
push
adc
push
mov
add
sbb
outsb
cmp
scas
xchg
jp
lock
jmp
mov
xchg
xor
add
in
dec
and
shlb
ja
or
rorl
adc
test
cwtl
xchg
inc
xor
mov
mov
int
btc
dec
pop
sbbl
cs
jns
mov
or
mov
jns
sarl
jo
add
cmp
mov
sub
stc
mov
insb
cld
jnp
popf
xchg
call
mov
fwait
inc
fldl
jmp
stos
xchg
dec
enter
sub
push
cli
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
pop
popf
adc
iret
mov
maxps
jg
or
mov
les
cwtl
dec
data16
xor
cmpsb
pop
nop
cmpsl
ljmp
pusha
jp
mov
aad
pusha
push
cmp
xchg
inc
scas
mov
roll
test
clc
call
stos
cmp
adc
insl
sbb
subb
or
cmpsb
cmp
jns
add
test
dec
aaa
inc
mov
pushf
in
in
lcall
sub
inc
frstor
fldt
sub
cmp
sub
lods
push
push
out
movb
data16
fcmovnbe
push
xor
icebp
stc
and
jmp
sub
add
adc
mov
ljmp
jl
lea
add
mov
es
add
cmp
jle
jbe
sbb
mov
or
inc
imul
movsb
jns
lea
add
add
jae
in
popf
loopne
and
sbb
ficoms
inc
daa
push
xor
push
pop
fistps
and
leave
movsl
inc
push
es
stos
xor
imul
daa
or
cmc
and
jle
int3
fwait
jp
cwtl
mov
mov
or
repz
adc
movsb
rol
inc
push
movsb
dec
mov
sub
and
mov
nop
mov
sti
dec
sbb
jg
icebp
dec
cmpsb
cmc
roll
aad
xor
insb
out
sub
add
icebp
adc
jbe
in
sti
test
sarl
les
leave
sbb
mov
pop
mov
jns
jp
aad
jno
jne
call
wrmsr
dec
mov
push
mov
popa
and
sub
int
je
vmread
or
mov
fildll
jo
stc
stos
lret
push
mov
inc
xor
aad
into
sbb
mov
test
add
or
push
dec
push
pop
fwait
stos
cmp
or
sub
pop
adc
xor
fisubs
pop
leave
add
push
or
and
add
jecxz
loop
pushf
flds
cmp
jns
int3
adc
push
in
cmp
data16
mov
cld
jne
mov
jno
in
fldcw
addb
ljmp
sub
lret
lret
lock
mov
push
push
fnstenv
sahf
xor
fscale
mov
adc
sbb
xchg
lahf
outsl
add
test
fwait
or
ja
loop
pop
add
or
je
push
setns
mov
fsubrl
sbb
lahf
add
xor
in
pop
outsl
and
mov
mov
xchg
in
orb
test
lods
in
jbe
mov
in
adc
scas
pop
leave
out
cltd
mov
in
std
sbb
and
lret
lea
jbe
test
xchg
movsb
jecxz
mov
fnstcw
cmpsb
leave
xor
lret
pop
fstl
jge
lret
aaa
push
daa
mov
push
pop
jno
ret
adc
push
addr16
in
nop
adc
fisttpll
mov
xor
fs
pop
ret
sub
inc
fcoms
pop
popf
cmp
shlb
subb
and
outsb
ljmp
imul
popf
and
divb
sbb
sbb
lods
cmpsb
movsb
mov
pop
pop
sub
test
stos
adc
gs
addr16
adc
movb
aas
inc
inc
adc
outsl
dec
sahf
mov
push
pusha
mov
mov
mov
jge
loopne
mov
jge
mov
xchg
in
push
enter
sbb
sub
loopne
pop
mov
push
and
jecxz
fs
ret
inc
pushf
mov
les
ret
in
push
jmp
bound
sub
pushf
jnp
and
pop
adc
xchg
ds
popa
cli
mov
das
xchg
dec
add
test
rcll
gs
pop
and
inc
cwtl
leave
pop
cmp
mov
ret
add
aaa
adc
stos
dec
push
rolb
xchg
sub
sbb
arpl
rolb
pop
daa
dec
insb
test
pop
repz
dec
dec
adc
imul
sbb
aas
jmp
ficomps
fnsave
cmc
pop
je
cmpsl
sti
mov
cltd
push
jbe
push
xor
in
add
test
sbb
xor
insl
inc
adc
xor
loopne
loopne
mov
fimull
adc
rcll
and
icebp
mov
repz
xchg
sub
les
shll
ljmp
out
sbb
sbb
in
push
ds
mov
fisubl
mov
adc
jl
stos
push
sbb
popa
imul
mov
inc
sarb
lret
into
jb
jb
mov
mov
stos
outsb
jmp
sub
test
mov
push
cmp
aam
aad
xorb
push
dec
dec
and
daa
lock
xchg
mov
stos
cmp
pop
add
in
inc
cmpsl
jne
sub
jg
clc
dec
xchg
sahf
test
xor
lret
sar
pop
stos
faddl
jp
or
and
push
fistps
and
xlat
push
sbb
mov
std
fimuls
cs
ret
cs
jp
mov
arpl
mov
ljmp
dec
shlb
inc
orl
out
adc
stc
jb
dec
jb
jne
adc
dec
popf
mov
test
sub
mov
lret
popf
jp
sub
arpl
pop
push
sbb
adc
cmpl
xchg
dec
sbb
shrl
inc
idivl
out
in
push
cld
fwait
xchg
dec
mov
rolb
cli
jbe
mulb
dec
notl
sub
outsb
jl
jge
mov
push
cmc
sti
aad
sarl
mov
adcl
lret
sub
adc
daa
jae
sub
pushf
bound
jo
fs
rcll
andb
sub
mov
andb
dec
pop
aad
repnz
mov
lcall
iret
fdivrl
testb
jbe
xchg
dec
fsubl
pop
scas
cmpsb
scas
sub
call
cltd
xor
movsb
add
mov
dec
out
pop
popa
adc
call
imull
les
add
xchg
ljmp
mov
lock
xlat
out
sahf
dec
scas
sub
inc
fnstenv
pop
je
mov
mov
mov
cmp
mov
and
test
or
add
mov
popa
add
pop
iret
jae
mov
sbb
ljmp
jne
xchg
mov
xor
shll
jae
xchg
or
sbb
scas
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
push
aas
aam
dec
xchg
ja
push
test
xchg
popf
and
or
and
add
rorl
inc
cmp
leave
adc
es
inc
cs
pusha
push
push
jnp
lea
ljmp
cld
adc
scas
push
cmp
mov
int3
pop
fsts
inc
pushf
lods
mov
jge
dec
in
or
pop
in
stos
ret
out
sbb
in
test
xor
or
push
push
movsb
push
or
cmp
push
pushf
mov
and
xchg
fildl
iret
sti
or
push
in
pop
sahf
xchg
add
mov
inc
je
mov
pop
mov
dec
lret
dec
shl
push
outsl
out
shr
cmp
xchg
sti
push
daa
add
call
mov
pusha
lret
lock
mov
or
add
nop
ja
add
iret
jmp
outsl
cmp
fcoms
mov
repnz
cld
mov
jge
xlat
js
xor
lods
pop
xor
outsb
fbstp
adc
popa
scas
test
jge
sub
int3
test
add
addr16
movsl
loope
sub
mov
pushf
mov
dec
iret
pop
pop
mov
cmpsl
mov
xchg
and
les
dec
out
cmpl
and
xor
mov
test
pop
je
or
mov
jg
or
jae
add
mov
dec
out
rclb
mov
mov
adc
into
loop
mov
mov
xor
sbb
ja
inc
outsb
add
mov
or
ret
ds
hlt
hlt
test
clc
push
shlb
mov
push
mov
xchg
push
leave
pop
out
mov
add
int
pop
mov
inc
and
cmpsb
lods
das
and
jmp
mov
and
cmp
std
test
das
add
jp
ret
loop
push
scas
adc
jne
ja
sub
push
fmul
sub
inc
mov
mov
ret
mov
clc
xlat
inc
push
adc
dec
scas
cmpl
imul
sub
inc
add
in
sub
mov
or
out
jecxz
jg
aam
xor
dec
sarl
xor
int3
shlb
scas
or
xlat
test
neg
push
lods
cltd
cmp
xchg
mov
inc
mov
jecxz
pop
jo
into
mov
dec
adc
lret
test
scas
ja
lods
fisubrs
inc
ror
xchg
in
push
pop
xchg
mov
aad
fucomip
dec
mov
sub
leave
jl
pop
adc
cmp
or
fwait
enter
mov
push
stos
insl
or
icebp
stc
out
jnp
lods
push
sbb
lods
lret
xorl
or
es
jne
jp
repnz
jge
add
rolb
pop
sub
outsb
rcrb
inc
js
pop
push
xchg
and
pop
insb
push
call
sahf
push
dec
in
mov
mov
sub
aam
xor
mov
xor
nop
sub
aas
xchg
adc
mov
cmc
gs
nop
mov
pushf
fwait
jbe
mov
dec
push
jae
cmp
fidivs
movsb
and
xor
mov
addb
and
insb
jo
sahf
gs
add
dec
adc
rcrb
adc
inc
arpl
mov
frstor
cmp
cwtd
or
push
jmp
xlat
mov
adc
mov
cmp
xchg
mov
jp
cld
sub
xchg
rcrb
mov
or
icebp
inc
lret
jbe
mov
into
mov
dec
lock
xchg
pop
test
sub
sahf
lcall
lret
scas
jb
push
fstpt
cmc
orb
mov
mov
mov
mov
imul
fdivrl
jecxz
stos
sub
jg
mov
inc
push
adc
push
xor
stos
cltd
fstps
aas
mov
fldcw
xchg
pop
cmpsb
cld
idivb
sahf
test
in
jle
mov
lods
and
xlat
loopne
int
dec
mov
nop
xchg
dec
jno
mov
jb
stos
and
and
sub
cmp
jl
scas
ds
fnstenv
roll
outsb
and
pushf
data16
jecxz
push
rcrl
pop
fsubl
sub
xchg
jg
cltd
lods
cmp
popa
rol
mov
push
add
lods
jbe
rcrb
subb
push
mov
testb
outsl
mov
outsl
lds
push
les
loopne
push
xor
jae
aas
xorb
out
add
sbb
mov
test
int3
or
icebp
sub
jne
cmp
pop
mov
jo
xor
xchg
icebp
fistl
addl
push
lock
or
dec
mov
aaa
dec
adc
dec
mov
test
insl
je
pop
fdivrl
xor
jmp
xor
xlat
inc
xor
sub
cmp
pop
in
pop
xor
scas
sbb
cs
aam
into
aaa
mov
movsl
mov
pop
rclb
cs
adc
jmpw
xchg
inc
cmp
mov
sub
aaa
mov
faddl
push
sahf
xchg
jno
gs
cmc
lea
movsb
aam
addr16
sub
push
fnstenv
or
push
xchg
pop
sbb
adc
dec
xchg
lret
adc
jp
sahf
or
movsb
xchg
ljmp
fsubs
push
inc
pop
sbb
sub
adc
mov
les
roll
stc
push
js
movsb
test
dec
xchg
js
negb
mov
into
or
sub
pop
dec
mov
shr
enter
mov
ljmp
mov
out
in
pop
jecxz
dec
or
jbe
outsb
ret
mov
arpl
dec
pop
cmpsl
fildl
inc
in
jno
xchg
das
fdivl
push
sbb
push
or
movsb
xchg
pushf
enter
pusha
lret
push
mov
ret
aam
shlb
mov
lea
push
xor
fdivrl
mov
dec
clc
popf
pop
fiadds
fistpl
mov
jg
mov
inc
jl
jmp
jg
out
inc
jnp
insb
into
mov
xchg
dec
cltd
movsb
xor
das
shl
mov
lods
popf
loopne
push
jl
hlt
shlb
cltd
jno
pop
mov
imul
cltd
int3
or
test
leave
xchg
inc
cli
mov
subl
adc
inc
add
and
dec
clc
pusha
sub
xchg
cmp
lock
popa
and
mov
fiadds
adc
imul
in
fistpll
or
mov
lods
cld
jae
jge
test
xor
arpl
add
pop
aas
jno
xor
sub
aad
outsb
jmp
scas
sbb
out
sbb
mov
in
pop
ljmp
jb
ja
dec
test
and
xor
mov
icebp
push
test
xchg
aad
xor
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
add
rclb
pfcmpgt
sbb
lret
mull
movb
ret
adc
pop
jge
frstor
das
aaa
jl
shlb
icebp
ja
stc
dec
xchg
fmuls
ret
ret
ljmp
test
jge
pop
test
cmpb
sbb
dec
mov
inc
fisttpl
mov
mov
lahf
fnstenv
pop
divl
jbe
in
pop
mov
jae
xchg
aad
cmpsl
imull
or
mov
or
jmp
mov
inc
std
stc
fst
clc
enter
pushf
out
or
jecxz
add
ljmp
cmc
sbb
ffreep
mov
sbbb
inc
xchg
add
jg
add
es
cld
ror
mov
pop
loopne
xchg
jecxz
jbe
push
inc
jmp
ret
inc
cmp
pushf
cmpsb
fisttpll
mov
subl
dec
outsb
lcall
mov
mov
test
or
insl
out
mov
or
imul
aaa
xchg
rcrl
xor
imul
and
jmp
cmpb
sarl
idivl
sarl
mov
lock
sarb
mov
mov
sbb
call
es
ret
push
sbb
push
inc
mov
xchg
or
lds
push
cmp
enter
roll
jmp
sbb
jbe
push
push
mov
inc
jns
pop
aad
pop
push
adc
pop
push
and
jp
cmp
into
jns
push
dec
mov
and
wbinvd
cs
stos
push
fcoms
fs
xor
int
cltd
inc
add
arpl
in
inc
mov
adc
cmp
dec
fscale
roll
pop
mov
or
test
or
inc
int
mov
add
adc
iret
adc
out
dec
lods
imul
jl,pt
nopl
pushf
pop
mov
int
push
adc
loop
pop
lahf
xor
jg
sub
dec
mov
xchg
incb
clc
iret
push
int3
mov
or
jmp
aas
sti
test
dec
lret
and
pop
push
or
xchg
bound
jp
lea
adc
out
xchg
lods
and
dec
dec
add
adc
fsubs
pop
repz
imul
adc
lds
dec
test
push
leave
sti
push
das
mov
or
sub
sub
fbstp
inc
insl
in
cmc
cmp
pushf
add
adc
je
mov
cltd
xor
fs
ljmp
test
add
lods
xchg
int3
mov
iret
adc
mov
sub
cmpl
ja
jno
aam
inc
ret
ss
xor
daa
stos
cltd
and
add
adcl
pop
mov
and
dec
xchg
jnp
stc
and
sti
cmp
popf
sarl
aaa
in
xchg
push
orb
addr16
aaa
inc
aad
popa
xchg
insl
mov
pop
pop
or
xchg
xchg
sbb
mov
outsb
js
cmp
cmp
sti
sbb
pusha
daa
cwtl
or
xchg
or
fdivr
ljmp
aaa
jb
je
and
out
adc
jl
fldcw
roll
addr16
push
add
jns
xchg
xchg
or
xor
and
fsubrl
sub
xchg
mov
and
mov
xlat
xchg
sbb
xchg
int
push
push
arpl
cmp
lods
xlat
stc
cmp
adc
add
and
shr
mov
out
imul
dec
mov
icebp
jae
enter
sub
pop
add
jnp
xchg
test
mov
sub
xchg
repnz
or
nop
dec
mov
cli
shrb
xchg
cmc
jmp
in
push
sbb
jl
das
push
lock
jnp
clc
sbb
es
mov
jnp
fucomip
std
xor
hlt
scas
jb
ret
mov
sarl
dec
mul
call
inc
out
lcall
and
jecxz
lcall
pop
les
sti
out
add
lods
mov
sbb
mov
cmp
bswap
arpl
xor
fcmove
mov
add
in
imul
mov
not
pop
or
push
pop
jne
sets
mov
lods
jge
dec
or
ss
cld
cld
dec
pop
int
mov
ja
inc
adc
call
test
scas
xchg
xor
mov
je
lahf
je
rcrl
or
mov
in
pushf
xchg
faddl
xor
ds
or
leave
lret
mov
pop
xchg
and
aaa
mov
lcall
jbe
arpl
scas
outsb
or
rcpps
addb
rorl
outsl
mov
xor
add
loop
int3
cltd
push
mov
add
mov
lahf
jecxz
mov
push
inc
mov
jns
int
gs
jmp
pop
mov
std
subl
je
js
lods
loopne
pop
cmp
mov
inc
das
insb
sbb
imul
pop
mov
jnp
mov
sbb
lods
repnz
jbe
aas
cmp
stc
cld
and
jo
inc
scas
pop
and
push
std
dec
inc
xchg
not
push
cmpb
mov
xor
push
mov
ja
mov
dec
inc
sbb
pop
xor
jns
cmp
and
dec
adc
pop
loopne
addr16
sarl
cmp
xor
push
adc
insb
leave
filds
or
popa
lret
icebp
aaa
jmp
fcoms
adc
test
sbb
inc
fidivrl
jp
push
xchg
scas
cmp
shll
dec
push
addr16
add
inc
mov
rcrl
and
xor
push
nop
mov
mov
lret
and
outsl
dec
cmp
and
or
pop
jns
push
int3
jae
movsb
scas
dec
arpl
and
cltd
inc
pop
cmp
fs
ja
dec
xchg
cmp
add
adc
shl
in
cmc
xor
out
nop
lock
pop
cmp
jne
mov
push
cmpsl
sub
gs
lods
cmc
cmp
inc
stos
test
pop
jnp
mov
sbb
mov
mov
lret
iret
cmp
add
mov
subl
xchg
insb
enter
jp
sbb
mov
mov
icebp
mov
mov
or
movsl
jl
hlt
cmp
iret
xor
cmp
pushf
dec
scas
sbb
subl
fisttpl
or
lds
iret
cmpb
xor
dec
sti
mov
or
movsl
in
inc
cmpb
aam
movsl
stos
out
pop
outsl
jmp
pop
popf
clc
adc
adc
mov
leave
push
fldt
test
inc
sbb
shlb
mov
mov
jmp
aam
inc
test
addr16
add
jns
inc
push
outsl
ja
jns
mov
inc
lods
sbb
pop
testb
pop
jle
shl
or
decb
mov
or
dec
out
ficoms
gs
xchg
jns
sti
ljmp
pop
add
add
mov
int
js
cld
aas
lods
push
cmp
jl
into
loopne
adc
or
cwtl
xchg
icebp
ja
pop
cmp
mov
fwait
xchg
lock
ret
push
adc
dec
adc
call
mov
xor
sbb
orl
add
popf
icebp
cmp
push
cli
or
pop
fwait
and
xlat
icebp
jmp
inc
adc
pop
imul
mov
mov
leave
out
aam
out
jle
mov
fildl
mov
imul
sbb
in
mov
cs
add
add
out
sub
jle
or
leave
push
pop
fistpll
push
cmpl
adc
push
fistl
lock
fcoms
out
mov
dec
mov
js
andl
and
pop
mov
xchg
inc
push
adc
cmp
in
or
out
pop
cmp
lret
sahf
dec
enter
cmp
jns
adc
lea
lcall
or
fucom
hlt
push
push
daa
jge
sbb
sub
inc
test
cmp
mov
xchg
ds
or
sbb
mov
lea
lret
lds
in
std
mov
adc
xchg
cs
icebp
je
loope
adc
and
sti
and
sbb
rclb
push
rcrl
and
jp
jno
adc
in
mov
adc
pop
mov
popf
adc
or
pop
fistps
aaa
dec
fcoml
addr16
or
sahf
inc
out
cld
sbbl
sub
fcoms
or
sub
in
mov
or
mov
sub
rcrl
sbb
repnz
xchg
mov
leave
fsubp
test
and
sub
scas
xchg
and
lret
ficomps
or
sarl
sahf
and
aaa
xor
or
sbb
lahf
fstl
fstps
adc
push
dec
loop
push
or
test
int
adc
clc
test
mov
ret
push
or
jmp
push
mov
mov
sarb
test
in
push
pop
ret
adc
push
push
decb
pop
mov
jecxz
pusha
cmp
push
stc
or
xchg
mov
mov
ja
inc
push
jge
mov
pusha
pop
in
insl
and
xor
daa
dec
mov
add
scas
add
mov
xchg
xchg
inc
jae
pop
xchg
xor
add
leave
xchg
push
pop
pop
fcmovnu
nop
shlb
incb
call
clc
movsb
or
sbb
and
rorb
add
mov
fists
inc
add
push
push
hlt
or
add
cli
sub
mov
imul
loopne
push
aam
div
add
repz
sub
xor
ret
lds
push
push
mov
push
pop
xor
out
jge
sub
mov
test
test
rcrl
or
pop
cwtl
popa
xchg
fwait
je
mov
mov
imul
repnz
mov
out
inc
jl
dec
dec
or
jbe
mov
test
jbe
cmp
dec
das
fwait
or
mov
xchg
mov
xchg
loop
mov
mov
jg
pop
psrlw
and
loope
aaa
jl
dec
inc
mov
out
iret
test
push
xor
cmp
mov
push
out
and
push
sbb
les
jp
jbe
mov
push
dec
fwait
scas
out
sbb
sub
add
js
inc
popa
pop
ja
inc
pop
fcoms
stos
push
push
add
addr16
sbb
inc
push
inc
pop
xchg
es
mov
mov
adc
mov
fnstenv
push
dec
jp
popa
xchg
outsl
mov
dec
fidivrl
in
mov
cmp
mov
in
mov
loopne
pop
fcmovnu
add
shr
jmp
aam
pop
aas
inc
push
aas
mov
sub
pop
xchg
inc
jg
aas
cltd
add
addr16
sahf
add
sbb
mov
fwait
push
test
enter
outsl
insl
call
mov
push
clc
fstpl
dec
shrb
icebp
adcb
ja
push
les
push
pop
lret
sub
dec
addr16
push
cmp
jb
addr16
imul
sbb
negl
jle
sub
ja
sbb
bound
dec
frstor
sub
aad
xor
inc
sbb
pop
push
mov
cmpsb
xor
jge
dec
sub
jne
add
imul
cmp
push
mov
mov
fs
jp
or
or
addr16
adc
iret
lods
dec
jle
je
sarl
movsb
fiaddl
xchg
push
xor
push
fcom
test
addb
mov
fiaddl
aam
addl
cmc
or
lods
sbb
jp
lcall
push
pop
and
mov
cmp
imulb
shlb
push
jo
pop
cmp
les
mov
sar
adc
mov
adcb
rorl
test
or
cltd
inc
aaa
jecxz
pop
jns
sub
pop
sbb
and
out
mov
push
mov
add
sti
jne
test
cmp
std
lods
std
mov
inc
add
test
pop
dec
repz
mov
fnstsw
loopne
inc
dec
imul
xor
dec
orl
cmpsb
movsb
fs
cmp
fnstcw
addb
mov
in
lods
jge
call
nop
insb
jg
push
in
cli
and
mov
jno
aaa
loop
mov
dec
repnz
jnp
mov
or
xchg
push
adc
divb
scas
nop
lcall
cmp
xor
add
add
jg
fmull
xlat
pop
lahf
xor
stos
sub
or
jbe
sarb
push
outsb
and
xchg
lods
inc
xchg
enter
push
nop
or
push
add
out
inc
in
aaa
mov
dec
mov
cltd
bnd
jl
jecxz
flds
imul
or
inc
sbb
shlb
pop
xchg
ret
jmp
adc
lretw
pop
fwait
or
mov
fs
data16
ret
in
cmc
notb
ljmp
xchg
adc
pop
pop
orl
sub
pop
mov
pop
mov
adc
sbb
inc
out
insb
cmp
pop
xchg
sub
fadds
stc
movsb
push
xchg
inc
jle
ds
sub
shrb
in
scas
and
cmpsb
mov
or
dec
cmpl
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
cmp
ja
das
cmp
out
sub
iret
into
shlb
push
push
repz
sub
mov
push
mov
mov
adc
out
pop
sub
sub
mov
sbb
adc
sub
mov
jecxz
jle
popf
mov
sti
scas
adc
xchg
test
pop
ss
mov
mov
pushl
jge
in
mov
cmp
push
xchg
add
push
adc
enter
add
push
aas
sbb
lods
and
sbb
or
inc
leave
addr16
in
dec
push
pop
lea
loop
fs
inc
mov
pop
or
icebp
xchg
cmp
outsl
popf
mov
pop
pop
pop
jb
inc
cwtl
std
or
adc
pop
pushf
aas
inc
jp
xchg
lds
mov
cmc
sar
jl
insl
in
inc
sub
enter
push
aad
pusha
movsl
loope
lods
cmp
mov
jb
push
stos
xor
fsubs
shr
mov
aam
daa
pop
mov
fcomip
mov
fdivs
pop
movsl
push
push
inc
push
pop
add
sbb
xor
lret
xchg
mov
dec
mov
shll
lods
dec
mov
pop
fwait
call
cmp
sbb
cmp
mov
and
adc
movsb
fisubrs
popa
lds
repnz
cmp
out
cmp
cmpsb
jle
sbb
mov
mov
jae
mov
pop
sub
aam
push
inc
and
adc
popa
sub
fldcw
mov
add
and
neg
cmp
sarb
push
mov
cmp
sub
mov
push
repz
mov
ret
cmpsb
aam
cmpsb
add
dec
xor
loopne
inc
xor
xchg
or
xor
cli
fiadds
mul
test
insb
fwait
lret
ffree
jp
sbb
sub
test
sub
xchg
decl
sub
mov
int
rorb
ret
test
ficomps
jmp
dec
xor
or
adc
or
push
lret
dec
cmp
repnz
emms
cmp
sub
jb
nop
and
xchg
and
repz
addr16
dec
add
sbb
fsubrs
or
mov
rcrb
aad
or
mov
mov
enter
push
xlat
dec
mov
add
mov
testl
xchg
hlt
repz
test
ja
lcall
je
and
mov
push
jno
jge
jnp
xchg
sahf
jle
adc
mov
sbb
aad
gs
sub
dec
cwtl
xchg
cmp
scas
lret
mov
add
int3
inc
pop
sub
popf
dec
int3
adc
subl
adc
lods
cwtl
das
sbb
xchg
mov
xchg
push
inc
sub
mov
adc
cmp
das
xchg
inc
out
aam
sub
pop
inc
mov
dec
lock
mov
in
mov
pop
jle
out
and
and
out
movsb
cmp
cmpsl
cmp
sbb
adc
cmp
stos
xor
pop
ret
shrb
add
push
data16
cmp
mov
push
inc
jmp
inc
add
out
xor
pop
nop
jge
push
push
jp
test
xchg
and
xor
adc
jns
lahf
push
loop
xchg
stos
mov
loopne
aaa
mov
movsl
adc
lahf
lret
jno
inc
push
out
daa
xchg
aas
ja
adc
imul
mov
adc
cwtl
push
sub
rcll
push
repnz
out
push
jg
pop
cmp
mov
ljmp
inc
lcall
push
cmp
nop
inc
jns
rorb
pop
jo
mov
das
repz
and
or
into
dec
test
mov
imul
lret
and
js
sbb
pop
push
dec
cmp
or
cmp
mov
adc
lret
ja
or
cld
icebp
and
mov
mov
jnp
in
mov
mov
pcmpgtb
jg
cli
xor
cmp
mov
xlat
clc
lock
mov
test
adc
outsl
sbb
mov
adc
imul
in
mov
into
inc
pop
movsb
mov
cmp
popf
push
test
sbb
or
mov
push
mov
mov
fldl
rcl
push
sahf
adc
ds
test
push
adc
or
mov
jae
mov
inc
out
outsb
into
sbb
or
jg
dec
sahf
scas
imul
fmul
pusha
leave
pop
inc
jb
sahf
loop
repnz
xor
aas
and
ds
sbb
sti
push
rcl
xor
inc
mov
xor
popa
clc
sub
cmp
pop
and
outsb
pop
arpl
and
or
cmc
xchg
stos
mov
dec
mov
call
push
xor
pop
dec
mov
or
icebp
in
xor
dec
inc
inc
sub
cmpl
xor
aad
xchg
dec
dec
xor
push
jo
pop
arpl
push
inc
sbb
xchg
ret
lea
sub
ret
lods
mov
repz
mov
dec
pop
jb
addr16
add
test
mov
mov
sub
enter
daa
sbb
nop
das
sub
sahf
add
addr16
popf
mov
push
add
adc
in
mov
call
insl
cs
movsl
mov
mov
adc
test
sbb
gs
cs
inc
xchg
int3
out
cltd
notl
daa
mov
xlat
test
data16
pop
jnp
and
add
loope
cld
mov
cltd
shrl
jecxz,pn
jecxz
adc
fisubs
inc
insb
xchg
outsb
mov
outsl
or
scas
push
xchg
pop
push
push
movsl
bound
push
mov
pop
push
es
aas
push
pop
add
cmp
pop
mov
aad
std
and
xchg
inc
xchg
cmp
xchg
shrb
cltd
shr
jno
mov
pop
push
cmp
repnz
jae
gs
insb
or
dec
scas
pop
jno
jnp
imul
mov
nop
ret
mov
jae
test
ret
push
or
loope
jecxz
pop
adc
push
jb
and
movsb
sub
scas
push
mov
adc
push
mov
clc
xor
sbb
loop
mov
add
sub
enter
loopne
aad
xchg
push
ror
iret
push
push
out
sbbb
inc
xchg
mov
push
jmp
call
xchg
push
cmp
aam
movl
xlat
in
cmpsl
scas
mov
mov
gs
pushf
mov
jmp
std
lods
mov
add
dec
mov
das
xlat
int
lcall
xor
jle
hlt
out
movsl
jns
mov
xchg
repnz
add
loopne
mov
mov
lods
mov
loope
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
fisubl
pswapd
or
aam
lods
clc
mov
push
fcomip
int
rorl
push
int3
and
or
adc
popf
cmc
idiv
out
mov
push
adc
sub
cs
jns
cmovns
push
lds
ret
jecxz
mov
rcr
sbb
push
popa
ja
rcr
cmpsl
or
aaa
dec
pop
hlt
mulb
dec
pushf
jl
cli
pop
sub
push
xchg
jg
jle
mov
nop
jae
orl
sti
mov
add
scas
fsubrs
mov
pop
sbb
lea
aad
sub
in
or
mov
inc
lcall
jle
adc
mov
xchg
adc
and
dec
lret
cli
cs
push
aam
test
mov
mov
arpl
xor
push
enter
push
dec
test
int
imulb
sbb
inc
mov
cld
mov
dec
out
add
mov
push
pop
test
mov
fmuls
insl
shll
icebp
js
rolb
sub
in
mov
or
jns
lods
cmp
rcll
iret
out
push
cltd
sbb
push
push
adc
sahf
stc
pop
and
enter
mov
xchg
int3
push
iret
pop
cmc
out
test
push
sahf
or
cltd
sub
rcl
jle
cmp
aad
mov
ljmp
dec
cltd
jecxz
add
test
dec
iret
in
pop
fdiv
xor
mov
scas
in
push
sarb
iret
shlb
popa
inc
lock
push
fnstsw
aaa
test
mov
mov
scas
push
sub
inc
icebp
lret
out
pop
sbb
ds
pop
adcl
daa
popa
inc
cmpsb
and
xchg
test
cltd
push
jne
sbb
iret
push
in
mov
push
scas
ret
cs
inc
xchg
fwait
dec
test
sti
and
or
ja
xchg
inc
jnp
push
test
fisubs
or
lret
shrl
aam
inc
and
jbe
dec
aaa
rcrl
dec
pop
jp
ret
add
mov
jne
cmpl
cli
lret
xchg
outsb
clc
sbb
cwtl
jns
jge
rclb
xchg
or
int3
in
out
adc
arpl
or
lea
ret
pop
lret
mov
iret
push
push
cmp
sti
cltd
ja
and
mov
push
jb
sbb
pop
notl
shlb
jle
sub
push
aam
lcall
and
xchg
mov
xchg
bound
lock
xorl
movntps
nop
xlat
faddl
mov
cmp
in
sbb
xchg
push
add
mov
outsl
ds
mov
out
and
mov
int3
fimull
testl
mov
xchg
sub
jg
dec
mov
lods
data16
sti
xor
ds
xor
insb
mov
icebp
test
mov
sbb
xor
inc
cmp
dec
xor
andb
mov
xchg
push
test
movsb
fldcw
mov
paddw
icebp
mov
loopne
mov
xorl
cltd
shlb
pop
mov
sbb
rcll
mov
pusha
aaa
lea
xor
inc
mov
xchg
fbld
into
out
xchg
clc
mov
cmpsl
sub
push
cwtl
xchg
and
fnsave
int
or
aas
mov
je
out
imul
popa
out
inc
xchg
pop
cmpsb
and
fidivrs
and
pop
xlat
mov
xchg
inc
leave
movsl
add
push
fnstenv
lcall
dec
outsb
ds
hlt
loop
adc
adc
push
scas
cltd
cltd
ljmp
in
inc
dec
adc
lret
push
icebp
idivl
imul
popf
xchg
and
aaa
lret
mov
jne
dec
or
push
push
adc
sbb
sub
mov
test
sub
lods
test
decb
add
and
inc
and
jle
mov
and
mov
loopne
mov
mov
mov
int
in
outsb
imul
cld
mov
arpl
mov
add
test
insb
ljmp
mov
fdivrl
iret
cmp
push
hlt
push
push
pop
pop
fs
xchg
mov
lods
jae
jg
mov
sub
xor
cmp
mov
inc
dec
xchg
sub
mov
call
fwait
scas
cs
enter
add
mov
jo
dec
mov
cmpsl
push
and
cltd
adc
test
and
inc
out
pushl
pop
iret
loope
dec
stos
jecxz
xor
scas
pushf
mov
sbb
fidivrl
mov
stos
sub
xchg
mov
jbe
test
outsb
or
dec
stc
push
dec
cmp
test
or
push
cmp
add
shlb
lds
aaa
pop
xchg
inc
pop
mov
movsb
scas
cmc
data16
stos
out
fs
xchg
add
pop
dec
out
adc
adc
lret
add
ret
shrb
repnz
sarl
and
dec
cmpsl
rol
and
dec
cmpsb
int3
clc
add
icebp
xor
jecxz
and
lods
clc
xchg
push
mov
sub
bnd
cmp
int
sbb
push
jne
stos
or
imul
adc
scas
in
subb
and
into
adc
or
jae
xchg
xchg
das
xor
aam
mov
xor
inc
jne
adc
push
jmp
bound
icebp
push
sbb
call
pop
or
movl
xchg
dec
stos
inc
and
xchg
movsl
dec
dec
gs
sbb
out
adc
test
jecxz
adcb
dec
cmp
mov
and
mov
mov
cmpsl
add
testb
or
push
sbb
add
ja
cld
and
sbb
flds
push
mov
dec
sub
push
popf
push
and
mov
jge
iret
jle
sub
jge
add
sar
jno
jmp
es
mov
xchg
dec
test
mov
popf
inc
cwtl
ret
loop
inc
mov
rcll
xchg
out
lret
mov
cmp
cmp
mov
outsb
adc
out
xchg
insl
mov
adc
cmp
mov
jmp
push
fbld
call
cmp
mov
repz
sahf
push
xor
pop
jp
jae
sbb
pop
test
mov
push
sub
mov
push
cwtl
loopne
lcall
imul
adc
inc
sub
arpl
lahf
andl
test
fldcw
add
lock
or
int3
or
adc
fs
pop
jmp
mov
pop
inc
int
inc
insb
arpl
pop
lock
icebp
jb
inc
setl
loope
movsl
int3
sbb
icebp
or
add
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
adc
mov
ja
sub
sarb
add
sarl
fdivrl
cmp
mov
test
lcall
loop
test
jmp
xlat
bound
inc
push
inc
mov
je
push
test
test
and
add
cld
data16
call
jns
or
or
mov
arpl
lcall
int
lret
fs
add
sbb
dec
mov
aas
mov
cs
daa
cmpsb
and
mov
push
adc
dec
cmp
call
daa
test
mov
xchg
mov
frstor
push
loop
adc
int
testl
mov
stc
es
lods
mov
nop
inc
or
mov
lret
mov
xor
std
pop
or
sub
fwait
push
sbb
or
call
cmc
stos
popf
in
dec
mov
pusha
or
xchg
iret
mov
xchg
repnz
icebp
xor
push
loope
adc
push
mov
push
add
daa
add
les
rcll
sub
dec
or
rcll
add
mov
iret
aam
ret
shll
ja
mov
mov
das
pusha
dec
push
popf
popf
out
and
dec
xchg
movsl
shrb
mov
push
decb
fidivrs
adc
inc
cltd
sti
rcl
push
push
out
and
adc
pusha
pop
orl
stos
xor
sbb
sub
jb
pop
push
stc
ss
mov
popa
pop
enter
ss
aaa
pop
sub
sub
mov
je
pop
mov
jno
push
jecxz
call
scas
rcrl
pop
or
clc
jo
pop
lods
scas
mov
cmpsl
mov
insb
out
test
mov
cmp
shlb
pop
lods
adc
mov
aad
scas
aaa
mov
mov
in
push
lret
ret
mov
loopne
mov
rorb
mov
daa
fnsave
lock
pop
adc
jge
sti
js
or
jo
sub
push
sbb
call
sbb
sub
fstpl
cmp
xor
xor
popf
sbb
fistpll
push
mov
adcl
arpl
or
jge
and
leave
cmp
fldt
dec
cmp
mov
jns
flds
popf
mov
cmpb
je
and
mov
mov
inc
pop
dec
mov
jb
add
insl
or
lea
sbb
stos
and
arpl
xlat
cli
addr16
mov
aas
xlat
mov
aaa
mov
xchg
shlb
inc
dec
mov
adc
ss
fstp
das
int
aam
mov
cmpsl
cs
adc
and
mov
loope
adc
mov
jbe
mov
pop
ret
outsl
popf
or
or
xchg
sahf
jno
ja
scas
mov
orl
push
mov
rorb
in
roll
dec
mov
xor
sub
dec
and
shlb
iret
cmp
rcll
lods
xor
pop
shrl
dec
sub
ss
insb
mov
pop
out
dec
ret
inc
adc
mov
js
push
mov
mov
sbb
roll
popf
pop
je
inc
inc
cmp
repnz
lahf
das
test
mov
push
in
add
dec
cmp
cmp
ret
sahf
jl
push
sar
rcr
fiadds
push
jge
in
ret
push
aam
dec
xlat
push
mov
mov
pop
mov
or
or
mov
in
mov
adc
push
pushf
jne
cmp
aas
push
sub
mov
xorb
inc
in
xchg
enter
imul
mov
jmp
ret
testb
scas
lret
cmpb
mov
mov
loope
adc
mov
das
cli
cmc
pop
js
out
ret
jo
sub
rcr
and
jmp
adc
jo
xchg
sub
cli
andb
leave
out
jge
pop
sbb
mov
push
in
push
lcall
idiv
ja
fdivrp
jne
xor
es
jbe
andb
add
cmc
mov
das
xor
mov
lahf
lock
inc
xchg
mov
xor
inc
cmp
call
out
jle
mov
aad
aaa
jae
mov
in
lods
and
insl
or
cs
pop
orl
xchg
loopne
bound
mov
xchg
out
push
mov
xchg
out
mov
sbb
lods
sub
pop
lea
cmp
xor
aas
xchg
in
icebp
in
push
mov
cld
cmp
and
sarl
inc
push
add
and
fdivl
int
or
cld
mov
xchg
sub
xchg
and
push
mov
and
push
test
sbb
inc
movsb
jl
pop
cmp
out
jmp
xchg
mov
cmc
orl
pop
sbb
leave
cmp
movaps
cmpsb
sub
mov
add
dec
inc
insl
sbb
inc
outsl
cmpb
lods
jbe
lea
pop
and
imul
test
enter
cli
cmc
arpl
or
sbb
pop
mov
in
mov
fcmovnbe
fsubl
cmp
xor
mov
leave
scas
cwtl
ss
cltd
mov
xor
stos
push
dec
jae
pop
sub
and
fnstenv
repz
and
pop
lahf
fmuls
push
adc
enter
lods
inc
rorl
repz
push
jecxz
or
jmp
fisubrl
xchg
cmpsb
in
bound
inc
ret
sarl
pop
push
mov
in
jnp
sti
out
jl
into
outsb
lods
adc
jno
xor
jbe
icebp
mov
xchg
inc
mov
loopne
testb
enter
or
sbb
sbb
sar
dec
lahf
int
adc
icebp
js
dec
stos
jnp
mov
lods
stos
test
daa
pop
jp
push
pop
stos
xorl
das
mov
sbb
test
mov
push
cs
pop
movsb
aam
and
pop
add
mov
addl
mov
les
mov
es
dec
test
jmp
sub
rcrl
jb
adc
imul
xchg
xor
and
stos
fstpl
jns
outsl
pusha
sbb
notl
movsb
loope
mov
out
mov
or
dec
mov
push
addr16
adc
cmp
data16
mov
pushf
test
rol
cmc
jb
sbb
xor
movsl
mov
push
in
pop
adc
jle
cli
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
adc
ja
ja
and
adcl
jne
dec
mov
mov
mov
cltd
inc
loopne
cmp
sub
sbb
mov
jmp
mov
ljmp
mov
xchg
cmc
in
sti
mov
scas
jle
fstpt
outsl
imul
mov
mov
outsb
cwtl
pop
cli
cwtl
je
int
fisubrl
sbb
lret
out
jno
pop
outsb
pop
div
repnz
je
popa
xchg
scas
in
lods
pop
push
ret
mov
mov
or
xchg
cli
fwait
inc
and
fwait
daa
xor
mov
xchg
pop
leave
aaa
jae
or
pop
imul
test
cmp
mov
mov
lods
aas
sub
xchg
cmpsl
testb
popa
aam
cmp
push
imul
fnstsw
jns
aas
push
gs
ret
sbb
in
lret
out
xor
ja
jmp
xchg
shrl
sarl
ret
cli
int3
inc
mov
mov
popf
cwtl
mov
push
cmp
push
mov
nop
dec
cmp
jl
aam
pusha
fiaddl
xor
in
cmp
push
inc
ss
dec
mov
arpl
pop
lods
dec
iret
dec
loop
dec
fsubrp
call
cmp
fldt
and
faddl
daa
push
popf
push
test
fnsave
lret
dec
mov
les
mov
inc
mov
cmp
int3
cmp
lcall
sub
lret
add
mov
sub
test
enter
jnp
dec
dec
push
mov
dec
dec
js
addr16
push
mov
jp
out
loope
add
inc
add
roll
sbb
test
mov
jg
loope
lea
frstor
orb
adc
xchg
insl
filds
arpl
inc
pop
out
add
das
lret
psubw
xchg
iret
out
shll
cld
rcrb
sub
cltd
jbe
gs
rcrl
add
sub
inc
mov
xchg
test
add
inc
jp
and
mov
ja
loope
movsb
dec
mov
xchg
out
neg
lods
pop
aam
out
push
in
sbb
jno
sti
and
data16
test
iret
jmp
mov
jae
out
stos
push
push
std
mov
adc
or
xchg
pop
push
push
rcrb
inc
loopne
sarb
xor
mov
jp
pop
bound
loopne
subl
xchg
or
js
lods
repnz
movsl
jne
mov
xchg
test
mov
shll
hlt
cwtl
fs
sbbl
dec
jl
clc
pop
fstps
div
leave
hlt
sbb
inc
adc
lods
bound
daa
or
jbe
fs
jae
lods
cmpsb
insl
push
mov
and
fwait
xor
xorl
xor
jno
hlt
ja
hlt
jge
or
push
pop
ss
mov
pop
push
aas
mov
repnz
ljmp
or
fiaddl
sbb
lret
sbb
and
and
shr
push
pop
js
adc
dec
fimull
adc
stos
dec
pop
vmread
icebp
sbb
cs
adc
push
cmc
push
mov
mulb
mov
sbb
aaa
pop
es
cmp
jecxz
sub
mov
sbb
fs
mov
and
data16
ja
aad
mov
nop
inc
inc
rcll
std
dec
nop
bound
pop
loopne
sbb
xchg
and
push
jns
enter
mov
and
out
int3
jnp
hlt
scas
inc
clc
cmp
fs
xchg
lods
mov
or
call
ss
fistpl
js
adc
pop
repnz
nop
and
xchg
out
fwait
hlt
mov
mov
mov
into
imul
int3
jge
cld
fimuls
lock
adc
xor
sti
xor
hlt
out
out
out
rcll
ss
mov
cmp
divl
or
clc
clc
xchg
insb
stos
xlat
dec
cmp
fcomps
fadd
jo
shll
add
or
push
xor
js
mov
repz
test
cmp
push
sbb
push
gs
jae
int
mov
pop
je
lea
xchg
cli
das
test
xchg
pusha
scas
movups
xchg
icebp
cmp
mov
loope
loopne
gs
push
rclb
pop
stc
dec
stos
jnp
lahf
sbb
addb
mov
inc
xchg
cmp
xlat
sub
fwait
lods
pushf
jnp
insl
test
xchg
arpl
outsl
jmp
cmp
fwait
xor
jg
inc
inc
into
test
and
shrl
push
negb
shr
push
cmp
fstpt
dec
ds
xchg
aam
pop
loope
pop
inc
lret
out
in
add
jmp
or
add
inc
add
aad
out
jg,pt
push
call
aam
jp
sbb
out
sbbl
cmp
xor
loopne
mov
loope
push
xor
loope
jns
or
fdivp
mov
pop
loop
sub
and
sti
pop
dec
js
aaa
cmpsb
add
sub
ss
popf
or
sti
push
fcmovu
mov
xchg
lret
ret
xchg
icebp
pop
xchg
mov
es
push
into
xchg
bound
hlt
fisubrs
mov
push
in
inc
jl
popf
cs
test
pop
xchg
and
add
inc
xor
fsubrl
or
lahf
dec
and
adc
pop
xchg
int
add
test
and
mov
jp
jb
cmp
addr16
and
cwtl
nop
out
xchg
rorl
les
cwtl
lahf
add
pop
lods
xor
shll
mov
push
xor
je
push
lods
jbe
test
inc
test
pop
push
inc
add
loop
and
mov
arpl
outsl
jno
lea
loopne
jp
stos
dec
add
mov
pop
mov
test
xchg
rcr
aaa
popf
xadd
dec
movsb
jns
xor
cmp
xchg
lods
cmp
das
add
cmp
mov
cwtl
fstps
jns
cmpsb
inc
dec
sub
jno
or
pop
icebp
or
scas
or
ret
scas
jl
mov
push
adc
mov
cmpsl
cmp
or
jle
inc
sub
xchg
out
jno
jns
cld
xchg
in
mov
insl
nop
fwait
pushaw
shll
pop
mov
loope
mov
call
xchg
xor
cmpb
insl
leave
imul
repnz
bound
js
sub
jae
movsl
push
and
mov
cmp
adc
dec
pusha
jl
lock
mov
sbb
movsb
ss
repnz
mov
repnz
int3
popf
fnstenv
cmc
sub
rorb
js
mov
pop
ss
inc
pop
outsl
mov
mov
sub
aaa
jbe
pop
xorb
fistpl
xchg
mov
mov
idivb
hlt
sbbb
and
adc
andb
fdivr
mov
divb
or
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
cvtpi2ps
push
push
cmp
movsb
stc
cli
push
inc
stc
test
insb
lahf
scas
ja
push
xchg
sbb
fsubrp
pop
cmpsl
ret
sahf
or
filds
inc
push
fld
ja
mov
add
or
sahf
xor
lret
add
xchg
popf
gs
xorl
data16
je
decb
enter
pop
rep
xchg
sub
mov
rorl
clc
and
bound
cmp
or
ljmp
xchg
lret
insb
xorb
jae
ds
jb
shlb
jno
scas
xchg
mov
mov
aas
mov
sub
fistl
adcl
inc
lret
fstps
inc
test
insb
lods
sbb
mov
out
inc
dec
pusha
mov
int
xor
xor
add
cmp
jl
pop
ja
sbb
js
int
dec
mov
jb
ss
in
mov
loop
sub
fistl
fs
mov
cwtl
or
cli
hlt
cmp
in
repz
sbbl
and
popf
push
lahf
xor
jle
imul
loope
push
pop
insl
sti
shl
mov
and
bound
in
sub
inc
xor
popf
inc
sub
cltd
lahf
pop
movsb
int3
mov
fsubr
jp
mov
movsb
xchg
push
xor
inc
sbb
push
outsl
sub
xchg
or
push
cmp
pop
lret
cwtl
mov
insb
dec
sbb
or
and
pop
push
xor
sarb
adc
stc
mov
es
mov
cmpsb
cwtl
and
js
pop
pop
lods
mov
insb
sbb
mov
jl
imul
jmp
xchg
sub
push
test
cs
mov
aam
dec
aad
ja
into
sbb
cmpsl
or
out
cmp
pop
daa
jo
mov
arpl
cmpb
xorb
sbb
jo
and
inc
jp
inc
push
loope
mov
sub
mov
inc
xchg
imul
mov
cmp
pop
jo
pop
movsl
jb
dec
xor
loopne
adc
mov
fdivrl
adc
gs
dec
push
mov
and
in
sbb
shrb
hlt
and
mov
int3
lock
pop
sbb
inc
mov
dec
rorl
loopne
out
mov
repz
cmp
stc
add
in
shr
lea
arpl
hlt
sti
pop
lods
es
jecxz
popl
and
ja
xlat
mov
incl
dec
push
xchg
push
in
test
jge
push
mov
dec
cwtl
addr16
or
stos
popa
sub
addr16
or
cmovs
cmpsl
call
jb
in
adc
lahf
les
mov
or
mov
xchg
mov
cmp
add
pop
push
xchg
sbb
repz
add
imul
mov
jl
ret
rol
dec
add
add
stc
loope
mov
sbb
enter
pushf
enter
mov
push
pop
iret
pop
mov
adc
push
and
imul
outsl
aas
imul
jl
sbb
mov
sbb
inc
iret
fisttps
lret
cwtl
dec
pop
scas
jbe
jecxz
cmp
test
fimull
int3
and
ret
sub
cmp
push
xchg
pop
mov
popa
mov
inc
lahf
bound
call
fists
test
inc
sub
cmpsb
mov
cltd
pop
lcall
idivb
repnz
cmp
and
int3
ja
insl
adc
dec
or
in
or
sub
lds
lea
add
int
ljmp
sub
pop
notl
std
sub
lds
inc
in
push
jae
daa
or
and
sub
stos
incl
mov
jp
pop
lahf
jne
aaa
sahf
decl
xchg
jmp
ja
in
sub
stos
loop
mov
lcall
stos
sub
cltd
not
sbb
leave
sbb
movsb
cltd
cld
dec
aaa
lcall
sti
xor
sbb
pop
or
adc
xchg
jb
leave
cmp
sarl
xchg
sbb
orl
mov
sub
mov
lret
ret
mov
daa
sub
popa
fwait
xchg
inc
fildll
add
mov
fisttpl
pop
outsb
add
aas
inc
jnp
cmp
cmp
mov
dec
scas
xchg
cmp
adc
mov
pop
pop
xchg
loop
jmp
adc
cmpsb
scas
ret
dec
ret
cmpsb
cmp
jle
cmpsb
js
push
pusha
aad
xchg
outsb
out
stos
pop
call
pop
xor
hlt
iret
mov
int3
mov
fnsave
lcall
inc
push
xchg
sub
mov
pop
pop
push
sbb
ficoml
das
movsl
lcall
shl
stc
divl
mov
dec
jp
sbb
and
sahf
mov
popf
push
or
pop
cmp
xchg
movd
rcll
ja
in
mov
push
inc
lret
sbb
xor
push
mov
hlt
jecxz
sub
push
das
lret
xchg
push
mov
cmpsl
movsl
push
jmp
aam
jle
mov
jbe
dec
das
repnz
mov
sub
dec
sub
add
sahf
push
xchg
cmp
pop
or
xchg
shrb
xchg
movsl
fcompl
mov
jnp
int3
aad
and
push
sbb
sbb
into
push
pop
int
jp
jp
fnstsw
inc
jmp
mov
mov
xchg
rcll
bound
movsl
sbb
mov
je
xor
pop
add
repnz
xchg
inc
ljmp
testb
cmpsb
inc
fs
jp
ss
cwtl
pop
cmc
or
sahf
sti
cmp
hlt
xchg
jecxz
sbb
pop
es
stc
push
lcall
enter
out
imul
xchg
jge
aas
sub
xchg
adc
adc
pop
mov
scas
int3
out
push
imul
out
dec
dec
xor
enter
mov
jo
pop
cmp
mov
mov
pop
loope
call
ljmp
sbb
pop
jb
cmp
stc
aas
test
js
das
xor
imul
inc
xchg
daa
cs
repz
push
add
cwtl
push
or
xor
pop
mov
xchg
add
or
push
push
mov
mov
push
inc
jo
dec
mov
add
sbb
dec
sub
xor
ror
popf
push
mov
jp
mov
jae
repz
dec
pop
jecxz
push
imul
in
aas
adc
nop
shll
sub
dec
stos
xchg
mov
push
ficompl
fcmovbe
pop
stc
push
pushf
adc
pop
cmp
push
js
fmuls
add
push
pop
pusha
fbstp
icebp
mov
dec
mov
mov
int3
scas
aaa
pop
and
push
dec
addr16
sbb
add
mov
clc
nop
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
push
inc
dec
mov
xchg
mov
xchg
and
mov
shrb
fldl
shl
pop
inc
out
jne
adc
push
add
jmp
test
xchg
aas
out
xchg
jl
gs
test
xchg
movsl
dec
std
cmc
clc
sarl
xchg
lock
jnp
cld
ss
inc
pop
hlt
int
cmpsb
lret
mov
cmp
fidivs
into
lcall
mov
daa
clc
loop
mov
sub
shll
cmp
out
mov
fwait
cld
xor
push
cmp
mov
mov
jecxz
mov
adc
push
mov
push
dec
jbe
jmp
out
xchg
mov
inc
decl
ss
sti
test
fadds
int3
jno
pop
lds
repnz
mov
das
sbb
sub
add
js
lahf
fucomip
sub
arpl
je
jg
fsub
or
sbb
jo
pop
out
movl
jnp
ret
pushf
imul
push
push
jae
lcall
shll
inc
adc
fimull
out
pushw
cmpsb
jno
or
push
xchg
aaa
jbe
movsl
hlt
xchg
xor
xchg
cmp
rcll
sbb
adc
fldenv
cvtdq2ps
insb
push
push
xlat
jmp
pop
aad
xchg
xchg
pop
inc
popa
pop
scas
push
mov
in
movsb
decb
fldcw
sub
and
cmc
dec
arpl
sub
notb
aas
test
or
mov
mov
or
adc
imul
fldcw
popf
sub
pop
mov
mov
and
iret
adc
jp
hlt
dec
ret
movsb
jb
mov
adc
mov
sub
lahf
fiadds
xchg
xchg
repnz
mov
and
jle
gs
les
popa
ljmp
push
xor
lods
cltd
loop
aas
popl
mov
adc
jge
fsub
gs
ljmp
xor
cs
shl
mov
cmp
movsl
je
loope
and
sub
adc
pop
and
loop
xchg
push
ret
jge
add
sahf
cmp
insl
jp
inc
pop
repnz
rorl
es
repz
cmp
fwait
or
ds
xchg
jg
lods
ja
and
movsl
fsubrl
fidivs
or
xchg
fldl
lods
jl
aad
loopne
out
adc
mov
sbb
pop
fcom
and
push
mov
push
gs
sbb
add
test
pop
cmp
push
add
lahf
inc
xor
jmp
rcl
pop
aad
cmp
aam
jb
shlb
loop
enter
lahf
push
negb
adc
and
mov
out
rcr
mov
mov
push
adc
lds
movsb
movsb
sbb
sbb
xchg
pop
mov
mov
sahf
imul
std
or
push
push
data16
jb
adcb
aas
push
xacquire
xchg
cld
iret
cs
xor
mov
ljmp
int3
int
orl
loopne
sub
fdivl
mov
ds
frstor
xchg
jle
mov
push
sbb
es
xchg
orl
dec
fisttps
js
xor
pop
adc
loopne
dec
cs
sub
int
sbb
cmp
mov
into
data16
xchg
mov
ret
into
xchg
jns
out
cmp
leave
mov
pop
ss
loope
jb
iret
into
xchg
das
cmpsl
xchg
pop
out
pop
fwait
mov
pop
pop
jnp
and
mov
ss
out
push
sbb
fwait
arpl
xchg
and
xchg
test
sbb
add
jbe
jae
sarl
jb
pop
jge
pop
push
out
mov
or
lock
sbb
adc
inc
sub
loopne
mov
scas
cmp
loop
xchg
adc
outsl
and
idivb
mov
xor
sub
jle
test
rcl
scas
jnp
lcall
xor
push
jle
or
fidivrs
scas
mov
dec
jbe
pop
ljmp
adc
dec
rcll
xchg
xor
and
mov
gs
fidivs
adc
mov
stc
xchg
pushf
or
lock
or
mov
stos
inc
out
insl
das
xchg
jmp
fildl
out
mov
sbb
and
and
mov
push
faddp
loopne
or
jb
mov
pop
in
xchg
out
cmp
in
mov
inc
jns
mov
mov
xor
jae
and
or
scas
sahf
pop
int3
push
adc
iret
pop
lahf
cmpsl
imul
call
pop
repnz
pop
icebp
imul
bound
int3
and
stos
mov
push
adc
in
into
jbe
fstpt
mov
adc
jmp
in
mov
cmp
sbb
pop
xchg
jo
push
xorl
add
push
xchg
xor
fidivl
mov
sti
push
repz
dec
out
mov
xor
push
loope
adc
lods
pop
inc
jle
jp
lods
sbb
xchg
cs
pusha
mov
adc
cli
adc
sahf
inc
ret
sub
outsb
sbb
ret
sbb
invd
rcrl
fsubrl
sbb
dec
push
cli
jle
popa
mov
out
or
fimull
outsb
mov
inc
sub
sub
les
jg
outsl
into
lret
scas
inc
pop
rcrb
and
add
pop
dec
test
and
sbb
loope
add
push
pop
popf
jbe
dec
jmp
pop
dec
lock
adc
insl
das
in
add
xor
lcall
mov
hlt
js
inc
adc
gs
in
add
call
aad
je
lret
and
into
dec
inc
clc
stos
divl
or
jecxz
sub
sbb
xchg
imull
scas
adc
adc
out
and
jle
sub
into
test
test
adc
sub
fstpt
repz
loope
negl
pop
jnp
add
inc
popa
jb
mov
nop
xchg
decl
ja
jnp
push
ds
mov
leave
sub
test
lcall
sti
mov
aas
xchg
mov
lret
sub
xchg
mov
mov
jae
pop
push
jmp
adc
mul
jecxz
xor
hlt
fwait
orl
ss
pusha
in
in
inc
movsl
sub
push
adc
xchg
fcoms
adc
test
mov
out
sub
enter
repnz
xchg
out
outsb
pop
or
dec
cmovg
or
iret
xor
cmp
sbb
cmc
jmp
ljmp
inc
cmpsl
cmpl
in
clc
jle
ret
fs
out
inc
dec
imul
sbb
insb
add
push
nop
popf
out
or
push
xor
sti
pop
adcl
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
lret
add
ja
push
iret
pop
pop
rcr
cltd
or
inc
test
data16
cmp
jae
sbb
es
lahf
daa
aaa
pop
and
imul
test
sbb
xor
negl
out
icebp
shlb
cmp
dec
cmpsl
sbb
push
stos
das
push
ss
adc
movsl
adc
iret
sub
push
pop
jno
inc
lret
add
sub
mov
cs
sbb
mov
pop
mov
nopl
jb
xor
inc
fidivl
dec
xchg
mov
or
adc
xor
inc
in
cmpb
push
xchg
pop
jle
pop
in
cld
push
push
push
iret
in
sub
mov
std
push
arpl
xor
mov
inc
pop
inc
mov
jmp
arpl
pop
movsb
cmc
lahf
lock
imul
pop
popf
xor
bound
mov
adc
pop
ljmp
adc
fsubr
inc
and
mov
and
xchg
push
ret
pushf
stos
pop
scas
or
push
int3
xor
icebp
stos
sbb
jg
sbb
xor
mov
movsb
enter
inc
iret
test
sbb
xor
xor
lds
and
xchg
leave
jb
push
jg
icebp
xor
pop
dec
mov
mov
adc
xlat
sub
dec
adc
cmp
xor
out
movsl
std
cmp
mov
add
cld
aad
xor
xchg
xor
notb
xor
dec
add
outsl
stos
out
inc
jg
adc
out
icebp
sub
iret
xor
cli
mov
addr16
sub
loope
lods
sub
adc
mov
jno
pop
sub
hlt
mov
sar
mov
mov
adc
jns
jl
test
jae
icebp
or
mov
mov
dec
cmp
out
sub
mov
mov
pusha
das
shrb
int
xor
out
or
aad
cs
jae
add
shrl
stc
lds
cmp
es
mov
or
shrb
cmp
pop
inc
inc
aam
and
shlb
sbb
lods
xor
or
in
movsb
push
mov
lods
test
shlb
mov
and
leave
mov
push
add
inc
pop
dec
mov
rcrl
push
mov
mov
inc
pop
mov
push
mov
mov
popa
aam
or
lock
scas
jmp
cmp
ds
inc
pop
xor
jae
notl
scas
inc
subl
ret
mov
sub
push
pop
adc
mov
push
outsl
inc
push
cli
insb
push
in
shll
dec
out
rolb
mov
push
cmp
aad
rcl
and
outsb
xor
pop
lds
lds
xor
pop
test
push
pop
xor
dec
pop
popa
and
sbb
sbb
pop
mov
sbb
xchg
pop
ljmp
incb
loopne
neg
xlat
stos
adc
mov
xchg
cli
pushf
dec
or
sub
or
jp
pushf
call
jl
movsb
imul
mulb
rorl
and
sti
iret
jmp
cmc
push
vprotb
inc
or
test
dec
cli
dec
xor
in
push
or
xor
push
push
add
mov
lret
adcb
mov
les
ret
sbb
push
inc
mov
outsl
dec
add
jns
insb
cmp
in
add
ljmp
dec
shll
jnp
clc
jecxz
aam
and
jge
mov
outsl
mov
sub
popf
jle
test
or
or
rolb
xor
push
inc
sahf
jecxz
insl
sbb
dec
int3
adc
pop
cmp
mov
push
add
xor
loope
arpl
sbb
or
sub
std
pusha
mov
push
xchg
mov
in
push
xor
mov
add
shr
jae
xchg
sub
inc
repz
aaa
aad
jns
lods
outsl
bnd
in
mov
push
add
test
lods
iret
test
out
jno
lret
data16
pop
xor
adc
into
dec
inc
lahf
dec
dec
jge
cmp
cltd
flds
call
hlt
jbe
mov
push
std
and
mov
loop
sub
pop
add
mov
pop
ds
or
xchg
rorb
add
rcrb
mov
mov
jno
fdivrs
inc
outsl
jnp
add
aam
fmul
xchg
fsubl
out
sub
stos
movsb
xchg
nop
mov
adc
push
mov
sub
andl
add
cmpsl
sub
mov
jge
cld
push
les
push
cld
mov
sub
add
sti
paddusb
cmp
jne
push
xor
in
stc
ficompl
pop
or
aaa
mov
inc
push
jle
mov
pxor
jns
sub
sbb
dec
outsb
sub
ja
push
dec
mov
out
adc
movsb
inc
push
shlb
test
push
mov
push
iret
xchg
sub
xchg
and
lods
jno
je
and
test
arpl
jo
jns
xorb
mov
xorl
popa
and
jle
mov
and
enter
adcb
xchg
sbb
outsl
mov
cmp
lods
or
clc
jo
adc
lods
push
mov
loop
lcall
shrl
js
cmp
mov
fidivrs
mov
int3
adc
loop
jb
and
fucomp
das
popf
test
pop
jo
aaa
push
pop
iret
xor
sub
inc
out
and
lods
loop
mov
stc
lret
push
dec
xor
sti
bound
mov
pop
sub
dec
push
inc
mov
and
xchg
hlt
fcompl
andl
ss
ret
jno
mov
jle
sahf
push
addr16
cmc
loop
outsb
std
xor
xor
xor
mov
insl
adc
xor
xor
enter
je
sarl
inc
in
mov
pusha
repz
mov
fstps
adc
hlt
fisttps
mov
mov
out
cltd
into
inc
dec
shl
leave
in
inc
ljmp
jns
mov
dec
jl
adc
and
pop
addr16
dec
adc
xor
outsl
imul
lahf
sbb
test
mov
pusha
out
repz
pop
enter
movsl
sbb
movsb
adc
adc
outsl
outsb
push
sarb
dec
cltd
push
push
insb
imulb
cmp
fstpl
data16
xlat
cmp
stos
mov
les
pop
sbb
dec
js
mov
fnstenv
sbb
xchg
sub
dec
out
call
sub
xchg
aad
cmp
les
mov
jne
dec
sub
test
fldenv
fwait
sbb
cmpsl
dec
xchg
cmp
in
inc
push
test
sbb
mov
jo
and
mov
jno
loope
into
jno
inc
pusha
mov
mov
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
pusha
outsb
repnz
fs
push
mov
mov
xchg
add
cmp
dec
push
lret
sbb
mov
enter
aaa
pushf
fsubs
insb
fsts
pop
cmpl
cli
movl
psrlw
in
or
jge
clc
imul
aad
xor
inc
orb
cmc
xor
shl
stos
hlt
sbb
aaa
pop
push
insb
inc
add
sti
lcall
mov
scas
mov
repnz
jmp
lret
dec
rol
cmp
fistpl
arpl
xchg
in
arpl
or
cmp
mov
cs
jo
xchg
lret
in
in
mov
xor
js
xchg
es
xlat
loop
outsb
sbb
xchg
xchg
sbb
cmc
dec
or
or
xchg
scas
push
xchg
out
in
xchg
lret
dec
cltd
loopne
adc
jmp
jo
pop
and
sahf
xchg
shlb
pop
gs
sbb
inc
loopne
stos
push
icebp
cli
adc
cmp
incb
int3
cwtl
mov
incb
ljmp
mov
call
sbb
cwtl
into
out
scas
push
data16
mov
sub
lret
add
dec
loopne
cmp
add
mov
inc
mov
int3
leave
mov
sbb
push
or
mov
out
ljmp
lods
cmp
scas
mov
push
mov
mov
pop
mov
addr16
movsl
nop
sbb
sub
in
dec
fs
cmp
loopne
xor
test
xchg
aaa
sbb
jo
adc
mov
mov
add
out
outsl
mov
cmp
std
inc
shr
dec
add
lret
mov
jg
pushf
and
and
ljmp
sbb
mov
jb
inc
daa
int
das
lods
fistpl
fwait
push
cld
call
sub
ds
ljmp
sti
sub
pop
out
push
push
out
cmp
cwtl
mov
lods
push
into
xor
xor
sti
shrb
scas
mov
mov
xor
jg
push
dec
data16
lcall
mov
and
xchg
push
loop
jmp
fbstp
cmp
gs
push
loopne
jmp
pushf
scas
incb
push
pushf
subb
das
xchg
sub
xor
dec
jnp
enter
daa
mov
scas
sbb
loopne
and
jo
cmpsb
rolb
add
push
movups
jg
cld
lahf
pushf
jns
daa
out
das
jb
stos
jnp
or
mov
jbe
lret
test
add
cmp
cmc
mov
dec
sub
mov
pop
sbb
mov
stos
push
shrb
imul
dec
push
aad
adc
ret
es
adc
cmc
xchg
sti
movb
sbb
push
div
and
es
rcrl
iret
sbb
push
frstpm(287
nop
sar
ja
cmp
aam
rclb
pop
test
in
or
into
in
pop
cmpsl
loope
bound
test
sti
mov
mov
stos
sbb
shll
les
sub
pushf
mov
ss
es
inc
neg
andl
and
idiv
pop
xor
cmp
mov
cmpb
lret
push
xchg
mov
pop
push
sbb
stos
ds
pushf
int3
sub
fwait
xchg
push
out
je
mov
mov
or
loope
ljmp
fdiv
push
test
es
jp
push
xor
adcl
push
dec
adc
aam
jb
sbb
repz
cltd
pop
cmc
aas
jno,pt
clc
mov
ret
insb
fs
lock
xchg
sub
mov
cmp
cmp
fwait
js
movsb
push
mov
and
xchg
imul
es
sti
popa
xchg
loopne
adc
push
xchg
cmp
mov
dec
cmp
and
sbb
testb
hlt
jg
push
or
aaa
scas
into
fadd
add
decb
ja
inc
jl
xchg
out
inc
or
push
push
adc
mov
dec
in
sbb
imul
clc
ret
and
xchg
inc
test
out
push
cs
sti
add
fimuls
mov
adc
stc
add
sbb
daa
mov
in
je
dec
and
dec
xchg
jp
jns
jno
cmp
push
jbe
rcl
dec
subps
repz
sub
lahf
jae
jmp
pop
xor
push
ret
iret
pushw
cmpsl
pushl
adc
arpl
or
mov
jecxz
negl
adc
xor
adc
lret
cmp
mov
imul
xlat
and
xchg
inc
adc
nop
movsb
insl
xchg
sub
pop
pop
addr16
nop
stc
stc
stos
jmp
push
mov
jne
add
test
in
or
fidivs
xchg
jne
push
xchg
mov
test
mov
rcrl
fdivl
pop
push
lahf
pop
sbb
xlat
outsb
push
je
xlat
jo
lds
sub
jecxz
pand
jae
lods
or
pop
mov
icebp
sub
pop
lods
popa
mov
mov
stos
dec
sbb
sbb
mulb
dec
call
mov
xchg
sar
int3
ret
jl
pop
std
sub
mov
or
and
pop
lahf
xchg
aam
gs
je
sti
mov
jne
adc
test
fucomp
inc
adc
in
or
gs
out
test
sbb
or
test
jbe
pop
fidivrl
push
cmpsl
sbb
pop
xlat
pusha
inc
inc
pop
inc
xor
xchg
jmp
sub
jne
sbb
mov
in
add
pushl
test
adc
std
jmp
mov
movsb
lock
xacquire
xchg
or
in
repnz
push
imul
push
leave
fcmovne
cmpl
loope
push
adc
sahf
dec
xor
icebp
in
test
ret
push
pop
stos
mov
pusha
inc
fcmovne
adc
and
movsl
cmpb
push
push
adc
or
xor
inc
push
cld
mov
out
addr16
sub
xchg
jne
addl
sub
lea
je
jnp
xor
or
dec
ficompl
nop
sbb
popf
frstor
add
out
push
sbb
dec
push
dec
imul
data16
stos
xchg
mov
repnz
and
cmpsl
xchg
sbb
sub
lret
dec
call
jl
mov
icebp
and
insb
in
stos
cmp
sbbb
call
stos
in
in
mov
push
xchg
adc
mov
out
pop
xchg
popa
mov
xchg
cmpsb
add
negb
xchg
inc
add
stc
pop
mov
add
ds
outsb
mov
push
mov
xlat
out
negb
mov
repnz
mov
loop
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
pop
pop
jnp
in
cmp
dec
icebp
mov
jo
decl
push
aad
subb
cmp
fnstcw
stos
imul
push
cli
cmc
aaa
aad
inc
jg
sub
mov
jl
or
addb
jmp
test
inc
adc
nop
mov
pop
je
or
rcrb
xor
loopne
aaa
sarl
insb
in
add
xchg
ljmp
inc
repz
or
push
pop
sub
mov
sub
xor
xlat
mov
sbb
pushf
out
jnp
out
cli
int3
iret
lret
shrl
xor
xchg
les
or
mov
sub
sbb
lret
fmuls
fwait
push
push
ljmp
adcl
mov
inc
cltd
enter
mov
leave
dec
jo
jno
pop
sbb
inc
push
aas
mov
dec
imulb
cmp
cmc
pop
inc
repz
and
mov
mov
call
notl
dec
add
push
inc
jge
mul
dec
orl
fadd
hlt
pusha
popa
dec
inc
out
adc
and
sub
cmp
xor
xchg
ds
cs
and
ljmp
ds
or
and
mov
inc
test
imul
inc
pop
repnz
addr16
adc
adc
pop
pop
cmc
aas
cmpb
fs
xchg
out
subl
dec
mov
in
or
mov
outsb
push
loope
xorb
mov
popf
pusha
loope
call
imul
push
pop
xchg
out
xchg
repnz
dec
pop
push
call
hlt
jl
std
sub
xchg
cmp
sbb
aam
adc
jns
fisubrs
aaa
data16
push
popf
outsl
loopne
mov
xor
mov
test
push
dec
dec
push
neg
mov
add
xor
pop
ffree
scas
mov
adc
inc
in
movsb
cmpsb
sti
std
mov
xchg
mov
mov
jae
jbe
lahf
mov
dec
pop
push
fistps
fdivr
out
or
dec
outsb
push
mov
pop
sbb
imul
test
and
call
inc
mov
inc
mov
ror
clc
and
ret
mov
push
mov
add
mov
mov
aam
pop
imul
jbe
insb
xchg
test
cmp
loop
or
lcall
adc
pop
xchg
jne
pushf
in
sbb
sub
test
add
pop
fnstsw
push
movl
sub
pop
push
cmpsb
inc
idivl
pop
push
js
jnp
ds
adc
mov
repnz
sti
jnp
std
fcoml
xor
je
leave
test
sbb
pop
decb
mov
out
scas
mov
mov
mov
cli
imul
cmpsb
push
jp
sbb
ljmp
ffreep
imul
stc
and
push
or
or
sbb
sti
push
pop
adc
xchg
clc
add
aaa
dec
pop
inc
lock
ljmp
jns
addl
rclb
lock
lcall
lock
and
popl
jne
out
mov
cmp
pop
xchg
jmp
pop
in
inc
sbb
mov
add
xchg
cmp
into
xor
pop
or
jnp
test
daa
xlat
mull
mov
or
jae
movsl
and
dec
dec
cltd
lea
cmpsl
push
inc
adc
inc
jbe
jge
cmp
xchg
in
scas
cs
shrl
jle
into
fsts
or
cwtl
test
fiaddl
or
jae
mov
sbb
xor
add
dec
das
fiadds
and
aaa
cmp
test
imul
mov
movsb
sbb
in
outsb
add
pusha
dec
testl
loop
cmp
xor
out
sub
adc
mov
xchg
fwait
dec
xchg
add
sbb
lret
dec
mov
in
fdivl
ljmpw
cld
aad
lret
mov
inc
dec
or
pop
jbe
call
mov
loopne
pop
jno
out
lods
popa
addr16
jp
sub
adc
mov
cwtl
imul
xor
js
mov
push
mov
fwait
sbb
mov
sbb
inc
pop
pop
pop
dec
daa
bound
arpl
and
cmc
cwtl
cmp
sub
xchg
xorl
pop
mov
daa
lahf
fs
cmpsb
in
push
or
cli
cmpsl
in
daa
lds
dec
sub
mov
int
ljmp
rcrb
sarl
cmpsl
stc
or
shrb
out
add
xor
out
loop
into
cltd
xor
xchg
and
mov
ds
mov
dec
cmp
add
cmp
mov
sarb
cmp
nop
mov
adc
call
pop
sbb
xchg
add
sub
nop
and
dec
mov
xsaveopt
loope
jg
cmp
mov
imul
dec
sti
add
cmp
loopne
mov
std
test
dec
mov
mov
imul
sbb
rcrl
pop
xchg
jle
mov
ret
pop
pop
mov
add
sub
ror
sub
or
or
or
ja
leave
and
jecxz
push
fstp
mov
jo
shlb
pop
push
xorb
push
dec
fs
mov
adc
push
mov
aad
fwait
xor
mov
gs
lods
pop
or
jge
xor
mov
push
lahf
sarb
adc
mov
cwtl
xor
arpl
imul
mov
out
add
lods
scas
mov
mov
repz
lret
iret
aad
adc
dec
cmpsb
xchg
jb
adc
or
outsb
je
sbb
push
repz
push
int
or
mov
add
jecxz
xor
push
fcmovb
frstor
icebp
push
shlb
lret
mov
out
out
inc
inc
cmp
test
addr16
pop
push
in
add
dec
dec
adc
in
sub
add
ljmp
inc
pop
cs
inc
cmc
js
add
outsb
pop
sub
pop
mov
out
mov
arpl
push
xor
sub
dec
imul
lret
adc
popf
cmp
fs
pop
sarb
push
push
lea
pop
mov
jno
xchg
repz
mov
mov
pop
xchg
pop
add
addr16
dec
cmpsl
mov
and
add
mov
cwtl
xor
fidivs
xor
jge
pop
mov
andl
xchg
jo
adc
sub
cmpsl
lock
fdiv
popf
fcompl
in
sbb
add
clc
push
ljmp
fisttpl
ror
pop
and
dec
mov
mov
jmp
ljmp
sub
cmp
adc
xchg
loope
mov
mov
push
pop
rcrb
mov
sub
cli
push
shlb
scas
mov
push
fistpl
dec
bound
cli
jecxz
lahf
fisttpl
push
mov
jo
cmp
xor
repz
adc
mov
pop
mov
fisttpl
sahf
or
or
mov
push
fs
pop
icebp
cmp
mov
repnz
push
mov
mov
ss
mov
push
pop
ffreep
mov
dec
movups
mov
jno
aad
int3
mov
bound
cmp
cmpl
jo
mov
fs
add
jnp
es
and
mov
dec
inc
push
pop
or
sahf
int3
iret
lock
out
and
pop
pop
ret
pushf
or
lea
ror
xchg
fs
dec
and
imul
ficoml
cs
test
aas
dec
mov
xlat
fwait
or
out
pop
pop
pop
icebp
jl
xor
lea
iret
lods
nop
sti
jb
lret
dec
jnp
add
mov
rol
push
fsts
xlat
cmp
inc
dec
adc
and
gs
movl
mov
fcmovnu
cmp
fidivl
in
adc
in
loop
jo
int3
repz
adc
popf
mov
cwtl
inc
cmp
loope
push
test
daa
sub
lods
aas
dec
jl
andb
or
inc
js
mov
imul
mov
push
sub
fs
push
xchg
sub
int3
sbbb
in
rclb
xchg
jno
ds
stc
daa
adc
jmp
hlt
sbb
out
movsb
clc
das
imul
push
inc
fs
push
mov
mov
stos
jne
insb
movsl
mov
mov
out
inc
jle
xchg
jle
nop
cld
and
and
or
dec
pshufw
mov
rolb
sbb
int3
je
mov
and
push
sub
inc
repnz
xor
sbb
xchg
inc
xchg
and
sub
stos
shl
lret
mov
xchg
mov
xlat
in
addb
cld
inc
jb
in
vcvtpd2psx
test
icebp
sbb
xor
insl
jb
pop
inc
or
mov
push
sbb
test
dec
repz
mov
pushl
outsl
pop
mov
fstp
shll
out
movsl
fs
arpl
push
loope
decl
mov
cmp
sbb
int
fidivrl
and
jecxz
out
sbb
xor
das
mov
mov
testb
in
les
repnz
aaa
push
pushf
cmpb
fsubrl
push
jbe
aas
mov
cmp
sbb
cmp
je
movsb
pop
or
mov
hlt
add
pop
cmp
insl
mov
push
xchg
adc
mov
sahf
cmp
sbb
and
pop
daa
jle
or
std
xchg
call
call
xchg
mov
inc
xor
xor
cmc
add
test
xchg
repz
fsubrl
inc
jno
jo
mov
mov
add
loop
pop
or
pop
pavgw
cmp
xorb
test
inc
jl
mov
ftst
ja
aam
fsubrl
mov
and
mov
pusha
out
sbb
shlb
in
jl
in
xchg
inc
dec
inc
lcall
pop
jp
mov
je
sarb
in
xchg
cmp
sar
dec
mov
cs
mov
inc
jge
add
stos
movsl
enter
popa
fisttps
inc
mov
add
mov
jge
jecxz
outsl
fdivp
mov
out
es
hlt
das
lahf
push
in
leave
ret
popf
call
and
or
les
sub
jnp
cli
lcall
ret
ss
push
xlat
add
jb
lcall
xchg
fmull
mov
lock
add
cmp
jl
decl
pop
mov
mov
xchg
xor
in
xchg
movl
fimuls
ja
push
inc
fidivs
cmpb
inc
pop
mov
xor
fsubr
or
rcr
jns
call
xor
sub
es
push
in
leave
lahf
add
dec
cli
in
out
xor
loop
dec
fcmove
xchg
aaa
add
dec
into
repz
loope
fsubrl
int
in
inc
xchg
sbb
iret
stos
data16
scas
cmp
xchg
sbb
cmc
sub
scas
cwtl
scas
lret
das
call
mov
enter
mov
jno
or
lret
inc
stc
jecxz
jp
cmpsl
inc
cmp
in
out
ja
xlat
xchg
stos
push
push
out
out
jnp
xchg
pop
in
pop
movsl
scas
in
jbe
lods
sub
and
loopne
out
fcoms
insl
mov
call
inc
adc
adc
mull
xchg
loope
aam
mov
or
hlt
pop
add
mov
sub
push
sbb
push
jno
fcompl
push
inc
sbb
outsb
das
push
mov
dec
pop
shlb
out
push
pop
insb
test
lcall
or
lods
movsb
mov
stos
add
aam
shlb
jbe
in
mov
dec
rolb
mov
les
mov
aam
mov
and
rolb
and
outsl
push
mov
cmp
push
sub
and
nop
mov
pushl
fcmovnbe
repz
mov
mov
mov
pop
es
push
dec
or
stc
mov
lods
xor
cmp
sub
mov
inc
xchg
pop
popa
clc
jp
jmp
mov
pop
out
sub
pop
xlat
std
add
add
sbb
lahf
pop
adc
inc
or
das
mov
mov
pop
iret
hlt
push
mov
or
mov
ljmp
adc
loop
adc
movsl
and
push
les
cmpsl
jnp
adc
lock
push
sahf
jmp
ss
cmp
xchg
sarl
mov
mov
es
inc
in
popf
pop
jp
xchg
cmp
filds
std
push
push
sbb
leave
pushf
jle
cmp
or
sub
test
or
mov
mov
movsl
mov
cmp
fmuls
or
fcomps
stos
add
xchg
mov
xor
push
icebp
rcl
sub
loopne
xchg
fadds
shll
stos
mov
out
enter
ror
jle
lahf
xchg
push
add
stos
mov
les
jae
pop
sub
hlt
call
or
subl
aas
movsb
or
and
fdivrs
xchg
and
idivb
cmp
dec
sub
mov
stos
or
push
cmp
mov
clc
sarl
stc
outsl
subb
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
dec
mov
xchg
mov
xchg
pop
mov
loope,pn
cmc
addb
xchg
cmp
outsb
adc
sti
xor
sahf
nop
fildll
mov
ss
push
and
cmc
pop
jbe
andb
sub
lods
mov
adc
push
jl
add
jb
adc
xchg
adc
ljmp
nop
lcall
or
adc
mov
mov
jb
ret
jno
aam
stc
cmp
daa
pop
mov
gs
in
int3
push
pop
push
cmc
inc
nop
loopne
jge
pop
mov
push
shrb
rorl
and
add
enter
xchg
data16
nop
sti
test
icebp
pop
aad
pop
xlat
into
das
adc
and
ja
ffreep
loop
lods
mov
iret
jge
and
out
xchg
stos
sbb
mov
sub
out
xor
and
mov
sbb
push
sub
lcall
popf
rolb
xchg
scas
mov
stc
icebp
movsl
insb
movsb
mov
push
push
inc
dec
cwtl
sbb
inc
stos
movaps
xchg
sbb
dec
pop
and
ret
stc
mov
adc
mov
push
cld
in
je
lea
stos
nop
push
mov
mov
div
push
and
pop
push
stos
mov
sbb
sbb
push
gs
pop
mov
insl
jb
xchg
addb
pop
cmp
stos
repnz
push
leave
rol
push
icebp
cmp
sbb
mov
adc
and
adc
cmp
mov
inc
xlat
pusha
push
jge
or
mov
jo
add
sub
push
shrb
jbe
aaa
scas
mov
loope
mov
mov
das
mov
jmp
push
fs
cmp
cmp
push
stc
cs
dec
and
jne
cmp
xchg
movsl
pop
lcall
push
cmp
cmp
lret
or
incl
jge
adc
add
add
lock
dec
les
int3
mov
into
mov
test
ret
aad
loope
stc
mov
in
dec
adc
mov
add
jbe
adc
aad
xchg
add
imul
mov
add
or
and
pop
push
sbb
ret
or
xchg
mov
xor
out
mov
setno
aas
ss
pop
mov
lcall
pop
ljmp
out
cmp
sbb
test
push
adc
cmp
push
xor
in
jmp
addr16
push
xchg
jnp
pop
jbe
dec
inc
mov
out
movsb
fwait
aaa
enter
mov
mov
hlt
xchg
xchg
dec
fcomi
pushf
or
scas
jae
icebp
inc
ljmp
ficoms
push
dec
lret
test
add
stc
adc
out
or
pop
push
cltd
in
cmp
cld
loop
test
mov
and
inc
das
imull
repnz
popa
nop
adc
inc
mov
jns
fsub
inc
pop
cmpl
scas
fisttps
lret
cmp
scas
and
mov
sbb
mov
popa
jne
rorb
cmpsl
lock
outsl
sbb
cmp
int3
out
mov
pop
mov
stos
lret
mov
fdivs
mov
push
pop
mov
add
pop
lahf
test
and
dec
out
in
or
movsb
sbb
inc
imul
jge
movsb
jge
and
rcrb
gs
or
jecxz
xchg
pushf
lret
in
out
dec
int
and
dec
imul
arpl
xchg
cmpsl
repz
jecxz
cwtl
dec
daa
xlat
and
fisttpll
sub
push
add
mov
dec
fidivs
jb
add
and
lods
outsb
cmp
mov
xchg
rcl
add
push
stc
adc
mov
or
push
jae
or
sbb
cli
push
cld
daa
ficomps
das
mov
sub
mov
pusha
dec
jnp
scas
push
push
fnstenv
addr16
adc
leave
xchg
ljmp
sbb
fists
mov
lcall
ss
sub
fsubl
jg
test
lcall
adc
jecxz
jle
push
xor
mov
test
or
fdivrp
icebp
stos
shrl
ret
stos
ret
pop
das
cmp
mov
xchg
test
rcl
xchg
cld
xchg
repnz
insl
into
data16
sub
xchg
mov
mov
sub
ret
in
cltd
jne
test
pop
mov
adc
faddl
pop
jnp
scas
idivl
cmpsb
inc
jmp
inc
adc
mov
mov
cmp
mov
cmp
mov
mov
cmp
rcr
scas
push
movsl
bound
cmc
push
decl
pushf
cmp
mov
rcl
aad
fidivl
iret
popf
pop
movsb
cld
negb
inc
inc
dec
adc
cld
fs
outsl
data16
sub
test
dec
movl
cmp
sbb
ds
addr16
pusha
roll
cltd
mov
test
mov
insl
fwait
mov
pusha
hlt
out
cmp
mov
push
jno
bound
mov
add
insl
aam
imull
fcoml
or
outsl
sbb
push
push
cmp
subl
adc
push
add
test
gs
jmp
js
or
add
or
lret
pop
dec
pop
pushf
into
mov
pop
shll
jmp
mov
cld
cmp
sbb
mov
data16
mov
out
add
cmpsb
and
inc
and
clc
xor
dec
push
mov
scas
mov
arpl
cld
test
pop
push
xchg
sahf
sarl
insb
push
jecxz
cli
cld
fucomip
test
push
mov
mov
and
fwait
xchg
jnp
pop
in
push
and
adc
jne
pop
mov
pop
sub
add
dec
dec
jbe
cmpl
lret
hlt
adc
xchg
fiaddl
lret
xchg
imul
popa
add
ret
sub
insl
int
jb,pt
mov
or
aam
jnp
stos
in
sbb
jbe
or
insl
fwait
and
adc
xchg
fists
cmpsb
in
mov
mov
sbb
jae
in
jl
mov
fidivrs
enter
lret
pop
add
dec
ficoml
mov
mov
data16
stos
call
test
loopne
push
jb
std
or
addr16
icebp
pushf
outsl
out
mov
jge
add
popf
aam
andb
insb
mov
jae
push
rol
jno
or
cltd
cmc
je
and
out
adc
push
insb
nop
aad
mov
push
and
xchg
jl
repnz
fmull
fiaddl
push
gs
mov
outsb
bswap
mov
and
xor
mov
push
cmp
inc
cmp
mov
pop
scas
mov
loop
and
add
cmp
loop
loopew
or
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
or
adc
xchg
xorb
rcll
aad
jmp
jle
push
fistpl
int
jne
mov
out
lds
mov
pop
pop
clc
sbb
ja
and
xor
loope
addr16
loop
dec
dec
sub
mov
jge
inc
or
pop
sbb
std
test
hlt
pop
test
lods
or
adc
insb
cli
mov
mov
iret
iret
fwait
lcall
test
cmpsl
loop
into
mov
jp
pushl
sbb
dec
cs
or
push
scas
sti
fldcw
xchg
insl
in
and
and
int
mov
nop
cmp
fdivrp
test
js
mov
ror
xchg
adcl
mov
pop
dec
xchg
inc
icebp
push
sbb
repnz
mov
and
cmc
rolb
imull
mov
xchg
fwait
mov
pop
xor
adc
jle
lock
fdivl
push
stos
jo
hlt
push
popf
repnz
push
aad
inc
mov
mov
xor
test
int3
jg
xchg
addl
dec
mov
nop
pop
jl
out
aaa
mov
loop
ret
inc
mov
add
test
repz
inc
xchg
sti
xchg
cmpsl
sub
rclb
inc
dec
sti
mov
lods
fists
or
adc
stc
mov
dec
push
mov
ja
add
les
test
jmp
jg
popa
movsl
or
pusha
int
mov
lea
out
insl
insb
xchg
ss
jns
jp
rolb
andl
hlt
cmp
out
shr
cmp
adc
pop
inc
inc
int3
int3
adc
push
lock
out
shll
sahf
mov
mov
cs
push
loope
xlat
cmp
xchg
mov
inc
mov
xchg
xchg
mov
into
mov
push
cmp
mov
pop
push
sti
insb
lea
bound
or
mov
loope
sub
lcall
test
push
lea
icebp
test
or
movsl
fisubrs
sub
lcall
pop
push
mov
shll
adc
cvtpi2ps
xchg
xchg
adc
subb
mov
out
push
mov
jnp
test
cltd
pop
jnp
add
mov
xchg
jg
daa
mov
pop
pop
cmpsl
xabort
xorb
test
push
insb
xchg
inc
imul
inc
loopne
enter
jae
dec
mov
clc
inc
jne
pop
addr16
xchg
xor
dec
clc
xchg
dec
insb
mov
pop
pop
sub
lods
sti
pop
mov
clc
fldcw
xlat
rdtsc
stos
adcl
push
jb
sti
int
sbb
dec
add
mov
hlt
mov
movsb
push
sub
in
mov
and
pusha
adc
mov
jg
fcmovbe
adc
stos
mov
xor
cmp
xchg
sub
ret
xor
out
xlat
lods
in
cmp
lahf
push
loope
in
je
mull
jb
test
mov
sub
rclb
rorb
iret
in
dec
sub
mov
push
jnp
sub
mov
dec
lret
xor
mov
das
out
or
mov
jbe
add
push
sarb
dec
int
xchg
xor
sub
into
out
mov
sub
pop
fs
cmp
inc
mov
punpcklbw
insb
and
sub
xchg
mov
lret
push
andb
rorl
lods
gs
adc
dec
bound
xchg
mov
add
and
mov
add
inc
cmp
jne
pop
ret
pop
scas
and
sbb
arpl
shrb
sub
shrl
jg
out
into
lds
inc
mov
mov
dec
mov
repnz
ljmp
push
jg
adc
das
bound
fucomp
and
and
lock
mov
cmp
xchg
mov
in
inc
hlt
movsb
xchg
push
js
sub
in
mov
incl
add
cs
ss
mov
push
or
hlt
fwait
inc
jle
into
or
add
imul
cmpsb
mov
aad
clc
xlat
and
push
inc
ret
clc
mov
add
cmp
jle
rorb
adc
scas
and
mov
cmpb
test
inc
mov
outsl
inc
sbb
xor
insl
mov
loop
lods
cmp
rcrb
lahf
or
cli
in
jae
test
xorb
aaa
lock
or
adc
ret
or
mov
pop
repz
cmpsb
inc
xor
clc
ja,pn
pop
cli
mov
push
cmp
push
ret
fcom
das
xor
aaa
mov
pusha
pop
mov
pop
pop
pusha
jae
push
jl
cwtl
fsubrl
loopne
push
fildll
and
dec
aam
rcrl
pop
stc
jecxz
outsb
in
pop
adc
es
xor
jbe
adc
sbb
shll
jne
and
pusha
mov
xor
adcl
inc
add
mov
mov
out
and
sub
out
subl
jne
cli
scas
mov
es
rorb
cmp
or
adc
push
ds
jg
mov
test
fistl
stc
mov
inc
mov
xchg
jns
xchg
sbb
push
loopne
xlat
cmp
jmp
daa
push
mov
lds
icebp
mov
outsl
dec
sbb
sub
adc
add
push
and
cmp
cld
cwtl
mov
cmpsl
cli
adc
adc
bound
aas
fisubs
cs
out
sub
sarb
hlt
repz
pop
idivb
pop
ljmp
mov
pop
xchg
cmp
sub
mov
les
lahf
enter
and
mov
fdivs
nop
and
xor
les
out
mov
or
js
insb
push
add
test
xchg
shlb
addb
jbe
into
negb
pop
fiadds
out
sbbl
mov
ljmp
and
inc
adc
inc
cmp
xor
adcl
sub
aad
sahf
aaa
sub
xchg
dec
pop
shll
push
outsl
push
leave
xchg
repz
lods
in
and
leave
test
xchg
and
jne
nop
movsl
sub
mov
shrb
mov
jmp
sbb
push
jb
popa
pushf
aad
dec
cmp
sub
pop
les
gs
mov
shlb
lahf
jp
repz
adc
fisttpl
cs
outsl
sbb
jmp
mov
xor
movsl
cli
movsb
pop
and
bound
out
cmp
jl
mov
je
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
popl
adc
xchg
or
xor
or
xor
jle
jb
pop
std
and
sub
fmuls
and
aad
mov
pop
outsl
cmc
dec
rcrb
ljmp
lea
inc
pop
ret
scas
loope
lret
es
aaa
cvtps2pd
mov
fwait
mov
imul
sti
cli
lods
inc
lods
fstl
in
xchg
sbb
jnp
out
sub
inc
das
jl
loopne
inc
inc
cld
stos
push
add
pop
jne
add
xor
and
xor
adc
xor
mov
insb
add
enter
sahf
mov
or
fcompl
mov
in
or
inc
mov
pop
popa
fstpt
xchg
test
xor
mov
mov
scas
cmpsb
fdivrl
adc
cli
and
fcomi
push
cmpsl
mov
icebp
mov
rcrb
jb
loopne
inc
dec
in
fst
out
adc
or
lahf
inc
cmpl
les
daa
mov
in
xor
xor
jp
cmp
jns
pop
sub
add
mov
rolb
add
and
and
inc
test
mov
int
loope
mov
mov
fadds
lods
aas
cmp
cmp
and
adc
mov
out
enter
push
xchg
add
insl
push
add
inc
out
adc
mov
adc
mov
inc
xor
adc
out
xor
fldenv
add
jg,pt
out
test
sub
pop
sub
dec
psllq
mov
xchg
pop
aam
ficompl
pop
enter
or
mov
or
and
xor
rolb
inc
xor
xchg
and
dec
xchg
dec
add
das
out
leave
add
ficoml
xor
mov
cmp
lret
sar
fwait
inc
stc
jno
and
lods
setge
jmp
mov
jno
movsl
mov
mov
cmp
push
pop
shl
xor
je
dec
mov
add
pop
dec
or
stos
xchg
leave
or
mov
pop
into
sbb
call
int3
in
or
adc
pop
repz
jmp
or
cmp
add
and
mov
aam
mov
test
outsb
jbe
dec
fstpl
pop
dec
xchg
outsb
stc
cmp
mov
mul
mov
lods
lods
iret
cmp
cltd
push
push
inc
imul
outsb
add
push
and
test
dec
xchg
push
int3
or
je
sub
test
xchg
push
cmovbe
lret
insb
leave
push
mov
jno
jge
mov
inc
cmpsb
popw
pop
test
aas
stc
pop
inc
inc
inc
add
push
insb
je
and
dec
and
push
or
fmuls
mov
into
pop
je
icebp
ret
push
mov
xchg
jmp
dec
push
rcrl
mov
loope
mov
push
mulps
push
out
xchg
pop
int
sahf
xor
push
lea
cmp
test
js
mov
pusha
mov
fwait
push
lret
or
mov
das
mov
enter
mov
enter
cmp
test
jae
das
push
jnp
jg
in
sbb
jno
inc
jbe
pop
pop
or
jle
and
cmpsb
add
mov
jo
pop
mov
repnz
inc
in
repnz
pop
fsubrs
mov
dec
cmpb
add
pop
ret
add
outsb
aam
xchg
out
int
enter
addr16
bound
sub
sbb
lret
popa
dec
addl
mov
sub
cvtps2pi
pushf
jb
sub
xchg
test
nop
outsb
cmc
pushf
orl
ds
vpcmpeqd
push
mov
imul
mov
andb
pop
push
int
adc
ljmp
and
cmp
aad
dec
test
adc
sub
push
jnp
cli
sahf
inc
cwtl
xchg
test
aad
imul
mov
add
pop
lock
pop
jecxz
jecxz
pop
sub
pop
sub
and
pop
xchg
fidivl
push
std
fsubs
mov
hlt
rclb
aas
sbb
data16
incb
push
ret
out
pusha
rcr
adc
je
push
scas
aaa
sbb
scas
arpl
adc
lret
cwtl
inc
popf
adc
inc
and
lcall
mov
add
inc
jle
jae
push
dec
mov
or
mov
sub
cmc
cmpsl
push
scas
icebp
loop
repz
rorb
fwait
dec
shll
sub
fdivp
push
das
pop
orb
pop
xchg
mov
sbb
inc
js
ss
cli
xlat
imul
pop
aad
fldl
mov
push
ret
ljmp
sbb
jbe
orl
or
sub
shl
push
fimull
loopne
fldcw
xorb
sub
call
hlt
es
mov
sahf
aaa
add
pop
cwtl
test
jno
push
and
xchg
cmp
pop
sub
mov
inc
cmp
aaa
xor
or
fnstcw
push
cmpsb
bound
pushf
in
xor
adcl
fwait
orl
push
out
jg
idivb
decl
jno
stc
fsubr
mov
stc
jno
mov
mov
sbb
negb
pop
jmp
aam
int
push
xchg
test
jle
mov
xchg
je
inc
push
out
std
aaa
cmpsl
pop
mov
cmp
cld
aad
jg
and
loop
adc
mov
add
jae
mov
ds
and
outsl
cld
data16
lods
mov
mov
decb
adc
cmp
sbb
add
scas
pop
aad
in
ljmp
xlat
sub
sti
ss
cltd
sub
es
dec
rcrb
or
ljmp
cmp
inc
lods
push
jo
mov
testl
pop
out
jg
fwait
test
fbld
mov
roll
mov
push
xchg
pop
xlat
mov
out
out
sti
fistps
repnz
insb
add
pslld
loopne
das
adc
mov
sbb
in
shlb
push
sbb
sub
clc
push
movsb
call
sbb
lock
or
or
sub
shl
mov
repz
mov
mov
fwait
xchg
adc
divl
jmp
adc
push
mov
mov
xor
mov
pop
js
out
cltd
push
pop
sahf
cmp
ret
cltd
inc
flds
dec
test
pop
sub
sarl
mov
add
xchg
popa
sar
add
sbb
je
call
or
and
inc
sub
fldt
sbb
stos
in
cmpsb
cmp
lods
dec
adc
cmp
fnsave
and
adc
mov
mov
repnz
mov
outsb
arpl
shll
push
mov
fdivp
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
fnsave
ja
ja
mov
outsb
je
xor
imul
popa
fcomip
cmp
adc
mov
pop
loope
dec
dec
or
daa
xchg
fmuls
mov
test
fisubl
scas
fbld
mov
mov
jmp
pop
dec
std
icebp
popf
call
mov
xchg
jl
mulps
mov
cmp
fs
mov
xchg
inc
andb
jg
push
mov
in
mov
jle
cmp
or
je
sub
xor
in
in
cmc
sub
and
push
push
icebp
mov
addr16
push
adc
push
out
inc
adc
jbe
out
bound
imul
push
dec
jmp
repz
lret
dec
jb
ljmp
insb
xchg
dec
les
dec
xchg
adc
sub
pop
push
mov
cmpsl
inc
leave
mov
stc
mov
xor
mov
sbb
sbb
pop
scas
inc
or
xchg
mov
xchg
mov
cltd
lods
int
jb
mov
xor
in
dec
xchg
jne
cmc
icebp
ficomps
bound
inc
negb
xor
jmp
xchg
xor
ret
push
cltd
cwtl
lock
or
pop
inc
inc
inc
outsb
dec
sub
cmp
or
sbb
outsl
inc
arpl
jl
cmp
mov
enter
inc
movsl
lea
pop
pop
dec
jae
xchg
inc
pop
aas
fcmovnb
movsb
imul
push
pusha
and
roll
xchg
fmuls
adcb
inc
lret
fcompl
dec
mov
cmp
lret
popf
sbb
cs
loop
pop
loop
push
sahf
mov
pop
sbb
clc
jb
cmpb
jg
mov
xor
xchg
push
pushl
add
jmp
dec
mov
mov
sti
hlt
test
pushf
xor
dec
adc
popa
mov
dec
xchg
mov
fs
iret
inc
jno
shll
and
adc
aam
incl
mov
dec
mov
js
sub
stos
fwait
mov
pop
push
out
add
mov
icebp
xchg
aaa
lds
sub
sbb
push
stc
mov
pop
lock
fisubrs
push
fdivs
inc
lret
inc
mov
enter
lods
lcall
dec
ds
and
or
inc
daa
pop
push
sub
xorl
mov
add
dec
repz
dec
push
xchg
mov
ret
xchg
scas
push
cmpsl
jne
scas
out
shr
mov
scas
imul
xor
lds
ret
or
cmpsb
fisubrs
dec
mov
sahf
jecxz
in
daa
add
fscale
inc
mov
mov
movsl
cmp
mov
xchg
cmp
nop
inc
add
mov
push
dec
push
or
cltd
leave
out
mov
jb
cmp
mov
js
sbb
mov
adc
insl
inc
push
stos
add
popa
mov
in
dec
shrb
jno
mov
push
xchg
repz
xchg
xor
fwait
es
adcb
push
inc
lods
jno
jecxz
sbb
imul
cmp
mov
sbb
dec
lods
and
mov
push
pop
or
fidivl
sbb
mov
push
dec
mov
sbb
push
sub
dec
dec
and
jns
mov
out
push
stos
into
xorl
push
popf
gs
test
lock
xor
lock
mov
cmp
insl
notl
lods
sub
testl
insl
jae
fcmovu
mov
mov
sub
in
fisttps
sbb
and
js
rcrl
das
loopne
cli
jo
xchg
sub
xor
js
jmp
sbb
add
adc
jae
jle
dec
lods
pop
pop
fadds
ret
cmp
adc
ret
pusha
mov
scas
mov
xchg
push
mov
push
inc
dec
push
rcll
jns
repnz
mov
push
pop
mov
cmpsb
out
sub
jmp
in
aaa
insb
lock
jns
shll
sub
orb
push
pop
xchg
pusha
pop
mov
xor
les
cld
add
repz
or
out
mov
push
and
inc
std
mov
pop
cmp
es
ret
cmpsl
jnp
pusha
mov
and
cmpl
lahf
dec
xchg
outsb
xor
dec
cmpb
mov
and
mov
ret
fwait
jno
or
sbb
lds
adc
mov
xchg
push
addr16
fdivr
icebp
mov
leave
test
testl
push
sub
js,pn
or
or
outsl
push
jbe
and
dec
lret
adc
andl
mov
std
xor
or
out
ds
push
dec
cmpsb
daa
sti
cmpb
xor
subb
adc
bound
jmp
push
ljmp
mov
xlat
jbe
fisubrs
sbb
bound
mov
out
mov
out
leave
mov
push
notl
imul
pop
mov
mov
or
xchg
enter
xlat
fwait
push
xor
call
sub
and
inc
mov
mov
cmp
pop
pop
inc
pop
jmp
jge
and
insl
lahf
cwtl
jns
nop
addb
pop
outsb
call
je
inc
inc
and
shrl
jns
push
xor
outsl
ds
cmpl
xchg
subb
sub
push
andb
sbb
shll
mov
push
out
testl
enter
mov
mov
xchg
fnsave
dec
push
cs
repnz
push
inc
mov
mov
sbb
scas
pop
mov
movsb
sti
loopne
enter
push
popa
into
loop
ljmp
adcb
and
lods
mov
out
adc
jno
mov
scas
lahf
push
stc
fmull
shrl
xchg
and
cmpb
cli
pop
lcall
adc
xlat
push
adc
popf
imul
jno
jp
daa
call
ficoms
cld
push
mov
pushf
pop
aam
push
dec
pop
push
push
sahf
out
push
jecxz
subl
je
lret
shrb
fsubrl
divb
leave
xchg
adc
mov
dec
lock
xor
pushf
fstpl
adc
cwtl
add
ds
and
pop
mov
adcb
jmp
cmp
pop
sbb
or
mov
add
inc
imul
dec
xchg
addb
push
adc
iret
push
lret
mov
in
ficoms
push
or
sub
mov
adc
add
inc
mov
xchg
pop
cli
ret
inc
out
ja
mov
ljmp
test
mov
fistl
sbb
jle
loop
jmp
pop
jb
xchg
in
inc
filds
repnz
push
iret
sti
jmp
vmptrld
movsl
shl
push
cmpsb
stc
shrd
shr
jmp
and
add
loop
es
pop
js
xchg
js
ja
push
jbe
jo
lods
loopne
sbb
ljmp
xor
sar
dec
xchg
repz
xorl
cld
or
jbe
data16
inc
dec
xchg
push
ljmp
xor
pop
fldcw
aaa
sahf
push
cmp
push
pop
dec
movsb
sbb
pushf
inc
insl
test
mov
fsub
mov
add
xor
sub
fwait
xor
gs
add
or
aam
int
int3
out
sbb
xlat
xchg
movsb
into
mov
imul
dec
stos
inc
lea
es
mov
xchg
aas
mov
sub
repnz
pop
aas
les
shr
jbe
scas
inc
std
push
sub
lret
imul
imul
mov
in
pop
push
ss
cmp
add
xchg
add
ds
test
pop
jp
push
jno
dec
aad
data16
jae
xor
cld
data16
push
aad
push
subb
scas
cmp
popa
ret
negl
or
dec
cwtl
pusha
or
push
rcrl
or
in
mov
imul
stc
test
inc
in
clc
xor
jmp
subl
pushf
inc
push
inc
and
ja
cmp
jnp
or
ss
rdtsc
stos
mov
lds
dec
imul
orl
gs
clc
sub
sbb
popl
mov
lds
lods
push
cld
in
mov
jge
mov
in
dec
scas
nop
arpl
push
les
inc
out
mov
imul
arpl
pop
out
dec
mov
sub
lods
cmc
jle
jnp
scas
xlat
stc
hlt
inc
push
or
jno
mov
jnp
xchg
imul
jp
inc
mov
push
scas
mov
repz
mov
dec
mov
jns
in
xor
and
cmp
sub
sub
out
cmpsb
mov
and
inc
mov
jge
stos
adc
lea
repnz
daa
mov
mov
or
xor
popf
mov
lahf
pop
enter
sub
ljmp
pop
jg
push
dec
arpl
push
mov
lods
cmpsb
int3
mov
sub
in
test
jno
rcll
xchg
xor
sbb
roll
xlat
sbb
sub
jecxz
jo
cmp
roll
cmp
jne
aad
and
mov
iret
xor
repz
and
mov
pop
stc
or
or
jge
sahf
adc
and
movsb
push
stos
cmpsl
imul
inc
sub
or
loop
dec
mov
xor
fcoms
imul
fldcw
mov
cmp
or
aad
sbb
xlat
cmp
insb
call
mov
adc
push
mov
enter
mov
fidivrl
sub
out
push
dec
push
push
cmp
xor
sbb
mov
jmp
loop
jle
imul
es
push
icebp
test
mov
cmp
push
jns
sub
ja
addr16
pop
jp
lods
pop
pop
ds
xor
push
fwait
mov
aaa
push
pop
incl
sbbb
xchg
jo
push
and
shrb
loopne
push
in
pop
push
fbld
sbb
ljmp
mov
adc
in
adc
aas
dec
insb
fwait
pop
popf
lcall
inc
stc
adc
lea
rcr
cmpsl
add
xchg
and
push
pop
test
adc
or
xchg
add
scas
add
jl
push
movsl
movsl
mov
js
adc
pusha
xor
jle
ss
fsts
loopne
and
inc
in
cmp
mov
inc
pop
mov
or
es
mov
sbb
xchg
jmp
idivl
js
shrl
xchg
pop
sbbb
adc
std
and
push
loope
sbbb
cld
loopne
push
jp
lods
sbb
sub
in
das
pop
cmp
fidivl
je
popf
fwait
es
std
xor
sbb
and
sbb
out
mov
mov
pop
jne
xor
int3
cmp
cwtl
sarb
mov
jge
jmp
movsb
inc
mov
add
stos
test
lods
or
pop
xchg
mov
ja
pop
adc
call
adc
adc
fdivs
xor
and
or
dec
inc
iret
cmpsb
into
movsl
int3
shrb
ja
js
int3
xor
test
fs
push
out
mov
insb
add
mov
jb
adc
shrl
pop
inc
cmp
sub
and
int
dec
sbb
sahf
fwait
outsl
ja
push
ret
sub
xchg
popf
les
adc
cmp
andl
inc
jbe
jmp
and
dec
fwait
adc
and
pop
out
xor
xchg
inc
cli
loope
cmp
imul
repz
shll
test
or
stos
jo
jbe
inc
mov
pcmpeqb
inc
insb
mov
xlat
lock
outsb
or
fdivrs
push
imul
xor
aaa
push
imul
mov
adc
lds
test
sub
repnz
xchg
call
sub
hlt
in
test
and
shrb
push
pop
mov
sbb
adc
cli
lahf
lret
repnz
sub
fimuls
ret
iret
ja
out
fdivr
push
cs
adc
mov
dec
popa
and
je
cmp
in
mov
icebp
adc
out
sub
push
cli
pop
icebp
dec
imul
das
mov
dec
mov
sub
push
in
mov
add
test
jmp
cmp
mov
mov
rcrb
int
cmpsl
and
int3
xchg
add
mov
addl
cmpl
cld
iret
ds
cwtl
stos
popa
test
fisubl
lds
xchg
enter
popf
ja
mov
push
test
push
outsl
gs
test
test
clc
cmp
sub
pop
and
or
jg
sbb
cs
aas
into
pop
lods
xchg
repnz
jns
mov
xor
dec
popa
rol
movsl
mov
loope
scas
out
dec
cmp
sbb
imul
hlt
loop
lea
mov
cmp
cli
jecxz
jmp
jno
mov
jge
jp
stos
aam
mov
fs
add
or
das
dec
test
mov
or
test
dec
ss
adc
in
inc
lds
popf
cmp
xchg
loopne
mov
lret
cmp
inc
neg
mov
test
mov
sbb
mov
rcll
push
jbe
dec
test
dec
clc
les
lock
push
and
fdivs
mov
dec
jle
sti
inc
jle
adc
popa
add
or
cmp
loope
push
out
adc
out
icebp
xchg
push
or
mov
or
jmp
aam
mov
xor
push
icebp
mov
adc
xchg
jae
inc
popa
mov
test
shll
addl
cltd
cmp
cltd
outsb
out
push
sub
add
jnp
daa
mov
and
loop
movsl
push
mov
and
fwait
testl
inc
pop
dec
pop
movsl
adc
xchg
jecxz
js
add
pop
sbb
popf
lock
fucomi
mov
andb
push
data16
and
mov
adc
or
xchg
ljmpw
push
push
shll
test
or
xchg
xlat
sub
pop
movswl
xor
minps
jne
sarl
inc
daa
lods
dec
jge
inc
es
filds
and
sti
jnp
call
testl
in
dec
sarl
lret
add
mov
mov
cltd
lock
jl
cwtl
clc
enter
adc
pop
mov
push
cmp
jno
dec
pop
test
and
sbb
incl
push
mov
js
xchg
xor
out
jne
sarl
sbb
mov
dec
leave
pop
sbb
lahf
js
fstpt
repnz
dec
sarl
sub
mov
push
nop
fists
popf
add
or
cmpb
cltd
pop
arpl
inc
adc
inc
mov
inc
jb
pop
sbb
mov
pop
inc
mov
mov
inc
push
pop
nop
push
dec
gs
rol
pop
hlt
out
loop
xor
cmp
cli
movb
cmpsb
mov
or
dec
inc
add
and
mov
dec
or
inc
sbbl
push
push
mov
ds
lcall
and
sti
add
popf
adc
in
into
mov
pop
push
scas
fildl
sahf
fcom
js
dec
xor
or
popf
pop
repnz
mov
std
cld
xor
and
inc
sub
gs
fsubr
inc
or
jnp
cmp
pop
scas
xor
mov
scas
call
cli
pop
test
popa
push
push
out
aam
xchg
fsubl
sbb
xor
pop
pop
repnz
fildl
cmp
fmull
repnz
ss
paddsb
int3
je
mov
mov
jle
cld
push
cwtl
lret
shlb
sahf
es
adc
in
lods
xchg
aad
inc
jg
mov
fcoms
aad
pop
jmp
ret
faddp
push
loop
mul
stos
int3
fsub
and
hlt
outsb
sub
repnz
not
fildll
xchg
sbb
out
leave
or
or
fsts
add
nop
xlat
and
lahf
sub
lods
out
sbb
popa
xchg
out
insb
xchg
jns
xchg
or
inc
lds
dec
sti
sti
loopne
push
iret
arpl
push
inc
popf
in
mov
push
addr16
pop
dec
mov
out
fwait
insb
hlt
cmp
lret
movsl
pop
inc
cmc
xlat
inc
mov
scas
movsb
std
sbb
enter
cmp
mov
mov
aaa
mov
jmp
mov
stos
test
iret
pusha
fisubrl
ret
popa
fstpt
out
pop
popf
jae
cmp
jne
push
mov
jo
scas
cs
adc
stos
repnz
cmpsb
in
xchg
sbb
mov
sub
sbb
pusha
aad
int3
add
pop
jge
les
adc
insb
scas
divb
js
loope
out
lods
pop
xlat
das
push
inc
and
sub
cld
add
ljmp
and
cmpb
ss
in
cmp
inc
test
fldt
mov
xor
pusha
sbb
pop
push
popa
adc
jnp
mov
aad
dec
mov
mov
xor
loopne
ljmp
insb
push
jp
jb
fstl
int3
roll
jecxz
repnz
fcomps
sub
data16
mov
ja
push
lods
pop
leave
or
jmp
push
xchg
mov
cmp
jbe
and
and
dec
add
repnz
outsb
std
in
pop
sub
popa
je
or
out
pop
int3
inc
ljmp
xor
jns
ret
pop
fidivl
ds
mov
ja
push
push
aam
pop
push
data16
test
mov
push
mov
cmpsl
je
push
jge
cmpsl
stos
scas
cwtl
mov
xchg
inc
repnz
mov
push
rcll
mov
jno
xchg
inc
sahf
icebp
aas
repnz
cmpsb
mov
out
sub
push
xchg
xor
lods
mov
mov
icebp
jmp
xchg
cmpsl
jbe
mov
add
enter
jnp
mov
push
add
dec
test
push
call
add
lcall
stc
pop
imulb
jnp
add
test
xchg
cmp
mov
and
adc
add
loop
shrl
mov
arpl
popl
cmpsb
push
xchg
push
xor
add
sbb
idiv
add
cld
cmp
mov
fcoml
out
push
add
pop
xor
push
xchg
dec
pop
adc
sub
bound
push
push
aaa
pusha
add
test
xor
push
add
jp
js
mov
mov
push
or
sub
push
pusha
pop
std
push
push
in
loopne
cmp
or
xchg
mov
nop
mov
stc
adc
push
addl
inc
sub
cmp
out
inc
fdivl
addr16
cwtl
imul
loopne
xchg
xchg
xchg
std
mov
nop
popf
cmc
mov
push
cmc
adc
mov
or
xchg
ss
add
test
into
lret
fstpl
or
mov
sub
dec
cli
outsl
clc
mov
pushl
inc
cmp
sbb
inc
mov
hlt
shrl
fimuls
add
mov
bound
scas
mov
pop
orl
mov
psubsw
xchg
test
je
and
sbb
and
repnz
mov
fnsave
insb
sbb
push
add
inc
jo
shrb
rcll
fnstcw
and
jp
cmc
sbb
inc
xor
testl
mov
xor
adc
aad
call
cmpsl
jo
das
es
inc
dec
jle
scas
fs
sub
sahf
or
push
and
pop
popa
jl
add
addr16
and
dec
mov
sub
push
ret
mov
and
repnz
int
inc
scas
sbb
jmp
js
xchg
xor
cld
das
push
outsl
push
add
clc
dec
mov
ja
mov
pop
pusha
gs
xorb
pop
loope
mov
xor
popa
fwait
mov
imul
xor
jno
adc
data16
in
divl
adc
jae
stos
pop
dec
adc
jl
inc
loope
push
test
dec
xor
jl
in
lea
pop
std
jnp
fdivrl
lods
pop
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
rcrb
jbe
xchg
out
dec
add
je
push
loop
pop
sub
dec
daa
cmpsb
shlb
inc
jns
ret
popf
in
xchg
mov
push
mov
cmp
jecxz
sbb
inc
inc
ret
push
in
cmc
movsb
popf
sti
cs
inc
test
inc
mov
jp
or
scas
pop
mul
xor
inc
or
lahf
aam
adc
pop
std
sarb
push
std
int3
leave
std
stos
dec
gs
pop
and
fs
dec
ror
or
add
fnstcw
sub
sbb
es
jg
push
add
movsb
mov
pop
xchg
mov
xor
test
imul
mov
lods
dec
jbe,pt
push
lret
popa
cmp
jns
dec
or
mov
sahf
lock
sbb
sti
fs
rcr
jne
into
ds
and
movsb
outsb
mov
dec
cmp
cmp
test
sbb
rolb
lea
inc
pop
movsb
rcrl
lahf
inc
out
cmpsb
and
xchg
push
cli
stos
pop
inc
and
outsl
sti
shrl
cmp
leave
fimull
lcall
adc
mov
pop
in
mov
pop
in
lods
outsl
sarl
sahf
insb
mov
leave
clc
out
stos
pop
sub
adc
pop
xchg
inc
pop
dec
imul
and
fisubrl
stc
mov
dec
leave
adc
out
pop
insb
negb
adc
xchg
inc
cmpsl
fcomps
lods
push
clc
data16
ds
fwait
cmpsb
ljmp
mov
nop
popf
test
out
into
popf
adc
sbb
call
ss
dec
jae
pop
add
sarb
mov
imul
sub
inc
aas
push
shl
out
mov
jno
pop
or
movsb
push
popf
push
jns
lods
mov
jg
mov
leave
xor
cmp
lods
push
mov
cmpsb
pop
fwait
pop
pop
insb
mov
mov
adc
aad
mov
sarb
enter
dec
pop
test
xchg
and
mov
mov
cmp
lods
and
xchg
sub
cmp
ss
ficoml
insb
or
aaa
enter
and
arpl
pushf
xor
mov
or
lock
fsubrl
inc
jnp
xor
cmpl
sub
test
sub
movsb
loopne
dec
movsl
cmpsl
jecxz
or
js
adc
mov
cmp
pusha
xor
or
je
push
and
ljmp
pop
lods
iret
hlt
rcrb
pop
add
mov
notb
mov
mov
jns
mov
push
sub
xor
mov
push
adc
ds
push
cli
or
add
sahf
xlat
and
cld
into
add
sbbb
lds
jb
pushf
xorb
dec
subl
sbb
add
jnp
jo
mov
mov
sub
or
dec
es
pop
movsb
sub
or
imul
jp
lret
int
mov
jae
idivl
mov
xchg
sub
mov
sbb
cmpb
enter
jecxz
push
sahf
mov
outsb
fstpt
adc
and
enter
enter
notb
enter
xor
and
or
push
lods
subb
dec
std
aas
dec
gs
fdivl
daa
data16
inc
xor
and
pop
aam
stc
cmp
aas
or
xchg
popf
push
ds
add
jge
test
pop
or
adc
sbb
shlb
and
lret
jo
movsb
sbb
movsb
mov
scas
push
out
icebp
dec
pop
mov
ljmp
cmp
test
mov
outsb
xor
push
faddp
push
aam
mul
dec
inc
das
fisubrs
mov
test
push
cs
sbb
ret
in
mov
rcl
in
imull
int
mov
fdivrp
mov
jge
ret
xchg
or
lcall
sub
mov
adc
and
fwait
bnd
adc
pop
dec
sub
jbe
adc
mov
adc
pop
sub
sub
and
icebp
inc
pop
in
and
or
das
pop
sub
and
movsl
loope
out
jp
loop
scas
xchg
mov
nopl
inc
mov
sbb
lds
repnz
insb
and
push
mov
jge
sbb
jbe
leave
jbe
out
push
test
push
in
ss
mov
or
sub
mov
mov
mov
pop
jecxz
fimull
sbb
bound
lret
gs
mov
imul
es
mov
xor
or
fucomi
xor
xchg
adc
add
js
jp
jo
int3
aam
insb
bound
orb
idiv
lock
imul
aaa
jmp
lods
ja
xor
pop
mov
dec
ja
cmp
cld
pop
sub
push
hlt
lcall
add
cmp
push
cmp
lods
gs
push
push
cwtl
arpl
inc
imul
push
movsb
sbbl
movsb
in
adc
push
ret
out
rcrl
sub
outsb
push
out
andb
cld
sbb
cmp
push
dec
jmp
jl
mulb
in
mov
mov
stos
cs
dec
adc
inc
lcall
push
cmp
jae
in
sub
jmp
jle
loope,pn
lret
push
hlt
cmp
jge
movsb
stos
popa
enter
ds
xchg
xor
sub
cmp
sbb
lret
mov
push
mul
pop
shl
lcall
xchg
adc
sahf
mov
xor
fidivs
in
xor
loopne
enter
sbb
lock
shr
mov
inc
aaa
xchg
fidivrs
push
mov
xor
and
gs
push
mov
mov
add
push
rolb
scas
xchg
jmp
sbb
pusha
add
in
outsb
cli
jmp
cmp
aaa
add
sbb
mov
cmp
push
jecxz
add
roll
cmp
in
pcmpeqd
sub
iret
jg
lods
xchg
adc
mov
dec
aas
jp
scas
add
mov
dec
dec
rcr
push
pop
mov
mov
jecxz
enter
test
mov
mov
adc
push
hlt
rol
inc
mov
bound
int
fistpll
sbb
icebp
push
sub
xor
fmuls
xchg
mov
fistl
dec
sub
mov
out
mov
pushf
sub
mov
je
cmpsl
xchg
mov
inc
mov
mov
call
sub
lods
das
push
shlb
scas
sbb
outsl
inc
pop
aas
loop
lock
add
and
pop
nop
jecxz
sbb
xor
orl
cmpsb
sub
nop
push
mov
or
pop
inc
jmp
jle
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
jo
lea
or
imul
movsb
mov
cmpsb
add
push
xchg
aas
push
cmpsb
jp
fisttpll
stc
hlt
add
je
sbb
mov
jne
loope
mov
or
mov
ljmp
lea
push
mov
jb
jo
stos
bts
scas
shl
sbb
sbb
fnstenv
cmp
sbb
pushf
cmp
leave
jge
xor
pop
out
mov
sub
mov
aas
outsl
leave
fcompl
inc
mul
or
cmp
in
leave
sub
cltd
xchg
cmpsb
mov
loopne
jmp
pop
push
mov
push
mov
lcall
les
pop
xor
imul
test
stos
test
dec
cmc
sti
scas
or
xchg
aas
test
repz
lods
mov
add
adc
or
test
mov
es
rcll
bound
mov
cmp
lcall
int3
push
das
cmp
mov
push
icebp
adc
insb
enter
sub
and
loope
mov
mov
mov
cmc
cli
cmp
jns
mov
test
cmc
add
jne
dec
sti
das
stos
cmc
icebp
jns
cli
push
jg
out
das
adc
enter
push
adc
mov
mov
cmp
mov
movsb
add
mov
nop
in
scas
jnp
and
jb
or
inc
sahf
push
inc
jbe
mov
dec
push
dec
xor
push
cmp
fisttpl
hlt
lret
stos
or
popa
inc
arpl
rcll
call
sub
pop
stos
inc
dec
jns
ud2
rcr
jbe
and
dec
lods
or
jbe
stos
pop
gs
ja
in
mov
pusha
mov
dec
inc
jp
test
adc
xchg
cld
mov
lds
dec
popa
mov
jecxz
mov
sarl
add
lds
jmp
push
mov
dec
mov
incw
lds
pop
mov
sub
jne
xchg
xchg
dec
mov
push
mov
scas
aam
clc
jg
bound
popf
jb
and
aas
inc
sub
sbb
or
mov
or
push
cmp
add
sbb
adc
pop
add
lods
xchg
or
cli
mov
push
outsl
mov
cmp
ja
aad
push
adc
sbb
scas
mov
cmpsl
push
aad
test
pop
loop
enter
mov
out
pop
push
or
push
push
unpckhps
jmp
mov
mov
imul
rcll
fnsave
cli
or
pop
ljmp
push
mov
sub
xchg
hlt
adc
shlb
mov
xchg
subb
xor
and
or
jl
jnp
push
inc
pushf
mov
push
xor
les
pusha
xchg
rol
stos
adc
xchg
pop
cwtl
xabort
and
movsl
popa
psubusb
mov
mov
cmc
add
mov
add
jns
ljmp
int3
addb
xor
clc
xchg
jno
out
and
nopl
pop
aaa
subb
roll
test
inc
fcmovbe
add
lahf
hlt
push
adc
aas
mov
clc
push
and
adc
mov
loop
repnz
sahf
xlat
test
jl
jb
orl
rcrb
imulb
stos
shl
inc
mov
cld
addb
popf
ror
dec
jp
pop
cmp
fldl
dec
sbb
js
mov
or
int
add
sarl
das
sub
pop
sbb
add
pop
lods
gs
sahf
aad
cmc
cld
mov
fdivr
pop
adc
lods
lea
jl
mov
icebp
repz
sbb
outsl
xor
rcrl
pop
cli
nop
pop
hlt
xchg
test
pop
flds
lahf
fidivl
xchg
inc
cmpsl
mov
gs
ja
negb
jae
fs
out
jmp
push
cltd
lcall
cmp
mov
push
pop
clc
pusha
sbb
dec
std
fnstcw
xchg
repnz
xchg
lret
xchg
pop
dec
aam
das
fxch
xor
or
arpl
out
dec
fdivr
out
insb
adc
mov
test
jno
test
mov
mov
ret
sbb
aam
cmp
ret
dec
andb
and
jae
pop
mov
mov
aad
cmpsb
leave
xchg
test
adc
jg
dec
push
ja
out
test
cs
push
xlat
cmpl
leave
pop
xor
jp
js
pop
push
in
pop
dec
ret
popf
xchg
jmp
in
outsb
inc
lahf
push
sub
dec
pop
stos
fdiv
xchg
jle
or
jnp
push
fdiv
jnp
bound
push
fsubrl
stos
jbe
fnstsw
addr16
daa
sahf
or
xor
fisttps
test
out
sbb
mov
iret
inc
push
lcall
add
fidivl
ja
cmp
hlt
in
cmpsb
incl
add
mov
mov
dec
andb
ss
jg
push
repz
pop
lock
lret
scas
xlat
pop
gs
lret
xor
and
inc
inc
push
mov
sub
lods
add
pop
or
sbbb
mov
js
add
mov
scas
int
iret
xlat
addb
cltd
sbb
outsl
lock
cmp
lods
mov
mov
stc
pop
cmpsb
or
jmp
xlat
mov
mov
aas
lret
cltd
shll
mov
ja
or
imulb
pop
rorb
xchg
dec
insb
daa
mov
cmpsl
adc
out
mov
xor
cmp
mov
adc
sbb
mov
pop
mov
xchg
cmp
iret
aam
lds
mov
ja
dec
xlat
adc
push
xchg
fsub
int3
mov
fisttpll
sub
imul
popf
insl
xlat
iret
xor
movsl
inc
int
pop
mov
enter
jle
leave
mov
movsl
cmp
pop
cmp
out
or
adc
fstpt
pop
sub
lcall
add
rcl
pop
shll
mov
in
jae
movsb
fwait
ss
aaa
imull
lock
jne
js
jbe
push
repz
subb
std
jb
cmp
ja
cmp
sub
xor
mov
dec
icebp
ss
negl
enter
stc
andb
sbb
mov
xchg
clc
idivb
and
fildll
or
stos
test
dec
lcall
pop
xchg
popf
fsub
cmpsl
and
xchg
dec
push
clc
lods
push
and
ret
sti
fxch
into
inc
or
call
xor
mov
pop
dec
test
nop
leave
add
jle
lret
ds
movsb
or
psubsw
push
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
dec
stos
stc
mov
adc
xchg
pop
xor
push
sub
fmul
sub
aas
xchg
outsl
inc
mov
cwtl
stc
xor
lret
pop
jecxz
rorb
arpl
xchg
inc
cmp
mov
lcall
mov
sahf
push
ret
cmp
xor
andl
push
cmp
scas
lret
imul
mov
cmpsl
daa
or
pop
mov
mov
fisttps
or
jle
icebp
cmp
lock
mov
mov
inc
enterw
iret
movsb
gs
or
bound
mov
and
add
adc
popa
faddp
addr16
lahf
cmp
ja
fst
iret
xor
push
daa
xlat
fimuls
add
and
out
out
sbb
push
add
lods
push
jge
push
jp
dec
ja
fsubrl
sbb
xlat
pop
in
pop
fiadds
mov
stos
xchg
cmc
mov
imul
lret
mov
add
push
push
fisttps
in
inc
in
rclb
push
cli
pop
notb
out
shrl
rcl
inc
or
cmp
decl
mov
pusha
add
jns
imul
xchg
xor
ret
in
inc
in
lahf
adc
cmpsl
out
cmc
inc
fcoml
test
pop
gs
fldcw
ret
mov
stos
add
sbb
mov
jle
stc
ja
inc
lret
sub
mov
popf
jmp
insb
scas
xor
cli
dec
subb
mov
and
push
cmpsb
jle
div
sti
mov
pusha
push
cld
out
sbb
inc
add
into
rol
mov
hlt
out
sti
push
lea
leave
mov
mov
and
mov
fs
pop
jmp
mov
inc
addr16
xor
xchg
xchg
cvtps2pd
movsb
daa
clc
mov
xchg
cmp
sub
movsl
dec
lret
xchg
dec
jne
inc
enter
jne
sbb
sub
in
sbb
shrb
xor
mov
les
mov
jge
movsb
pop
jno
mov
inc
test
cmp
int
and
mov
add
sub
cmpl
add
cmp
cmc
xlat
add
xchg
movsl
push
stos
ja
cmpsb
sbb
jp
movsb
push
jge
aas
add
mov
add
aas
inc
xchg
mov
sahf
xchg
cmp
lds
arpl
mov
cmp
ljmp
mov
mov
test
mov
push
xor
test
push
pop
jnp
xor
dec
dec
movsb
shll
std
xchg
cmp
or
inc
jo
pop
push
mov
hlt
push
data16
dec
sti
movsl
notb
xchg
jo,pt
inc
sub
daa
cmpsb
lock
es
in
jnp
bnd
inc
call
popf
aas
dec
dec
jbe
out
les
mov
shr
dec
mov
out
inc
pop
sub
xlat
pop
sub
cmp
pop
out
fsubrl
add
xchg
and
jmp
mov
cmp
iret
jmp
or
dec
xchg
repz
orb
pop
cs
movl
xchg
fldt
cmp
xorb
mov
lock
jo
lds
pop
xlat
xlat
clc
or
cwtl
ret
jl
test
xor
out
mov
dec
fbld
xor
pop
clc
adc
jmp
inc
iret
pop
sahf
and
pushf
sub
in
push
add
fistpl
seto
adc
stos
mov
mov
mov
in
pusha
mov
loope
inc
test
and
aas
lahf
add
out
in
mov
cli
sub
dec
pop
xchg
outsl
cmp
ljmp
mov
lcall
sbb
clc
shll
cmp
mov
popa
into
cmp
dec
push
ss
mov
jnp
push
sbb
dec
mov
lcall
add
lahf
clc
pop
mov
bound
call
push
jge
pop
add
xor
repz
fistpll
jnp
out
and
in
loopne
jmp
dec
test
inc
xchg
jecxz
mov
jg
jl
rorl
jle
in
orl
cmp
mov
lods
mov
ja
das
stos
out
jecxz
sbb
jmp
lods
and
add
or
push
lret
sub
inc
cmp
ds
inc
mov
iret
stos
xor
jle
mov
dec
mov
sahf
clc
dec
or
xchg
test
lea
xor
dec
or
call
scas
mov
psubw
push
sbb
arpl
or
arpl
popa
xchg
jbe
mov
dec
mov
stos
aad
xchg
fsubl
cmp
jecxz
mov
xchg
fdivl
shr
mov
xchg
cltd
jae
insb
fwait
sti
imul
cmpsl
lods
mov
cwtl
sbb
push
pop
mov
mov
sti
scas
jae
aad
push
clc
inc
adcb
xchg
fcoms
clc
in
mov
std
mov
dec
popf
dec
xchg
sbb
add
test
push
lret
mov
xchg
push
sub
lahf
cli
xor
mov
pop
fldcw
xor
nop
lods
inc
test
mulb
cmpsb
mov
popf
aaa
add
mov
in
dec
cld
xchg
ja
icebp
xchg
cmp
repz
push
sahf
and
out
sub
jae
int3
cltd
rorl
cmp
and
pop
into
in
pop
out
rolb
lds
les
mov
lret
or
jne
add
mov
vdivpd
xchg
pop
orb
jne
cmpsl
dec
jb
xchg
test
pop
and
icebp
xor
mov
mov
lods
andb
cmp
cmp
sahf
sub
loop
subb
mov
int3
and
cs
outsb
std
mov
pop
push
add
dec
cmpsl
adc
sbb
lret
push
jnp
rorl
pop
repz
mov
cwtd
push
pushf
loopne
push
mov
mov
loope
add
cmp
icebp
lret
jge
xor
in
rolb
ja
mov
into
out
lret
adc
push
sbb
enter
cwtl
dec
movsl
loop
enter
icebp
or
jb
lret
lcall
lret
clc
dec
rclb
jge
clc
shrl
push
out
shrb
jmp
xchg
inc
repnz
cwtl
rorl
sbb
jl
popa
dec
cmpw
cli
jg
mov
fsubp
stc
pushf
enter
loope
idiv
push
ja
mov
jno
cld
mov
loop
cmpsl
mov
fsubrs
push
mov
sub
outsl
add
adc
add
outsb
faddp
xchg
mov
dec
cltd
aam
mov
nop
pushf
dec
ja
stc
jo
xor
loop
xchg
mov
xor
adc
or
fbld
mov
sub
lcall
fdivr
pop
push
jmp
push
add
xor
fnstenv
in
and
pop
xchg
dec
stc
mov
rdpmc
rorb
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
jle
mov
adc
xchg
pop
das
lds
and
sub
sbb
mov
nop
es
and
lock
jmp
xchg
hlt
ret
loope
hlt
dec
les
xchg
push
xchg
cltd
mov
sbb
leave
mul
ljmp
sub
pop
or
cs
jns
loop
fwait
pop
adc
mov
cmpsl
andb
lds
andb
add
sub
add
mov
gs
cmp
aaa
int3
pop
pusha
sub
mov
insb
mov
and
adc
and
aaa
lret
ljmp
mov
sub
pop
xor
jge
sbb
or
jns
cmpsl
idivb
pop
cwtl
ds
fdivr
dec
pop
ss
mov
cmp
aad
push
cwtl
jne
sahf
clc
and
int
xchg
mov
rorb
inc
sbb
inc
sbb
push
mov
mov
and
cmp
jmp
addb
xchg
mov
scas
insb
dec
in
into
test
hlt
sbb
enter
sbb
outsb
fnstsw
add
sbb
ljmp
xchg
in
ror
push
sbb
jb
push
outsl
jmp
mov
cmp
lret
cmp
lods
jne
fidivrs
test
dec
stc
inc
inc
je
push
sahf
dec
and
mov
test
loop
cmp
shlb
ljmp
push
push
cs
fadd
mov
dec
dec
xor
push
sub
out
push
test
loopne
fdivs
mov
dec
xchg
shlb
dec
jg
bound
fnsave
popa
dec
lret
int3
in
push
adc
je
push
mov
and
xchg
add
mull
outsl
xchg
mov
push
sub
cmp
movsl
hlt
xchg
xchg
mov
or
fucom
int3
jb,pt
mov
inc
mov
and
mov
adc
mov
cwtl
lods
repz
ljmp
popa
pop
out
aad
icebp
mov
stc
mov
shlb
mov
pop
mov
fstps
jne
enter
lods
xor
rcl
stc
sub
cmp
pop
or
jmp
dec
cld
iret
sub
mov
inc
jl
addr16
jnp
pop
xchg
ret
mov
movsb
das
stos
jnp
dec
mov
or
or
xor
mov
cmp
ret
and
and
push
xchg
add
jge
das
pop
inc
loopne
sub
lea
mov
xchg
pop
xorl
jecxz
lods
pop
inc
aad
push
ret
shrl
int
cwtl
add
cmpsb
int3
fs
sbb
sub
lods
xor
add
pop
cmpl
cmpsl
pop
adc
cmp
lret
or
mov
fistpl
xor
test
cmp
adc
push
jp
inc
faddl
sbbl
push
fsubl
mov
sarl
daa
arpl
and
test
nop
mov
xchg
mov
faddl
aad
aaa
orb
xor
stos
mov
push
xchg
mov
and
sbb
aaa
gs
popf
xor
xchg
mov
je
cmp
fsubl
add
push
mov
mov
xchg
rcl
add
mov
jo
popf
int
sbb
pop
push
aad
pusha
fldenv
je
add
jg
in
fnstenv
pop
ret
scas
addr16
lcall
jns
pushf
int3
mov
cltd
cmp
add
lcall
cmpsl
cmp
mov
mov
push
sub
cmpsl
fs
pop
std
adc
xor
aad
ja
stc
jo
fldcw
push
xchg
mov
ficoms
fwait
std
rcrl
mov
out
push
cli
adc
and
test
clc
mov
cmpsl
into
push
pop
stc
pushf
loopne
sti
outsb
cmp
mov
pop
cmp
fwait
mov
or
mov
xchg
inc
sti
loopne
jge
jge
push
lahf
mov
out
cmpsb
pop
push
movsb
and
jmp
pop
and
cmp
sbb
movsl
fwait
and
push
out
rcll
sub
inc
sub
int3
sbb
pushf
cmp
mov
jae
and
stc
inc
mov
cmp
push
inc
out
pop
pusha
pop
mov
ss
call
inc
filds
pushf
cmp
jae
cmc
dec
mov
dec
xchg
sub
fs
and
sbb
pop
push
inc
loopne,pt
imul
mov
mov
mov
leave
push
imul
rcr
imul
jl
aad
adcb
adc
test
xchg
add
inc
inc
ret
aas
test
fistpl
push
icebp
lea
shr
hlt
push
mov
cmp
dec
cltd
mov
push
lcall
mov
iret
fistps
rolb
daa
push
cmpsl
cmpsb
movsb
cmpb
inc
jmp
cli
dec
int
es
push
test
lock
pop
aaa
fistpl
cmc
xchg
and
sub
add
sti
cs
push
outsb
jbe
js
lret
test
sbb
popa
addr16
mov
xor
test
push
in
lea
pop
test
cmp
mov
cltd
data16
or
mov
adc
sahf
ljmp
fs
std
cld
ficoml
js
cwtl
ss
add
iret
or
iret
add
pop
insb
out
inc
fistl
sbb
aaa
enter
mov
aaa
fdivr
mov
push
loopne
inc
mov
popa
les
je
inc
addb
loope
movsl
enter
xor
mov
imul
push
push
jl
stos
sbb
mov
mov
mov
or
ds
inc
hlt
mov
dec
pop
les
pop
iret
inc
cwtl
mov
lds
inc
inc
push
andl
inc
movsl
inc
scas
pop
inc
sti
mov
mov
subl
xchg
stos
pop
div
pop
push
adc
repnz
sbb
nop
lods
push
cmp
add
jle
mov
jmp
or
popf
hlt
jl
mov
fwait
jnp
dec
arpl
cmp
and
cmp
inc
int
lds
les
cltd
lahf
inc
push
mov
dec
push
jbe
pop
inc
or
jle
clc
inc
push
xchg
lahf
or
es
int
adc
xchg
bound
inc
push
pushf
add
out
xor
cltd
std
les
pop
int
and
dec
lret
dec
sbb
pop
je
or
xchg
sti
inc
adc
les
in
daa
in
mov
jb
push
lahf
dec
sub
mov
in
jge
fdivrl
shr
out
orl
negb
inc
or
pop
lret
push
sbb
pop
outsl
add
enter
mov
nop
mov
add
insb
mov
fistl
cmp
sub
xchg
inc
or
push
xchg
fistl
sti
ja
enter
pop
inc
jnp
push
mov
and
loope
sbb
adc
adc
arpl
enter
dec
mov
or
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
fmuls
adc
sbb
jge
xor
cmp
iret
sub
in
xlat
ret
dec
repz
cmpsl
pop
sub
fstps
ja
loopne
sbb
subl
mov
into
popf
das
add
int
pop
ljmp
sahf
push
jp
xor
daa
cmp
adc
leave
dec
out
das
ja
xorb
mov
into
xlat
or
in
push
sub
xor
mov
sub
mov
push
leave
std
pop
mov
movsl
movsb
lock
xor
inc
mov
push
ds
add
mov
in
pushf
push
and
xchg
mov
cld
je
out
adc
push
jecxz
cwtl
cmp
push
and
push
scas
xchg
xchg
adc
pop
out
in
pop
jmp
mov
dec
mulb
and
lea
dec
and
mov
and
lods
xchg
cmpsb
daa
sbb
scas
inc
dec
push
lods
cmp
xchg
push
push
dec
adc
inc
sub
idivb
adc
lods
and
stc
lcall
int
les
mov
adcl
arpl
and
dec
iret
inc
je
mov
pop
out
mov
sub
sub
leave
mov
xlat
out
mov
jb
push
cmp
push
jmp
and
and
inc
cmp
or
push
divl
pop
adc
cmp
xor
sub
pop
mov
sbb
cs
lcall
leave
xchg
loope
lret
cli
mov
es
jmp
mov
bnd
loop
pop
sub
gs
xchg
mov
fimuls
cmp
ss
pop
pop
sub
dec
loopne
hlt
xchg
fcmovnb
or
push
pop
mov
out
xlat
pop
gs
aad
je
shlb
cld
sub
jnp
sbb
orl
sarb
push
mov
lcall
mov
pop
jo
pop
xor
mov
mov
adc
popf
cs
mov
cltd
icebp
insb
mov
adc
mov
int
dec
out
divl
mov
sbb
sbb
ss
or
mov
inc
fstl
mov
leave
mov
inc
add
push
clc
mov
xchg
in
xor
pushf
lea
cmp
mov
test
adc
inc
sub
push
mov
int3
xor
aad
fdivl
jo
sub
js
imul
out
ljmp
insb
dec
push
push
cli
xlat
lods
mov
mov
mov
fsubrs
xor
mov
pop
les
xlat
or
mov
fdivr
bound
ja
xor
and
mov
mov
jno
pusha
cmp
xchg
call
aas
cld
push
sbb
pop
or
test
pop
adc
push
xchg
int
push
add
pop
jbe
xlat
adc
ds
lret
jo
mov
cmp
push
arpl
sbb
and
mov
int
ja
test
punpckhbw
push
pop
out
mov
inc
mov
jo
pushf
add
jge
into
aas
or
xchg
jp
inc
pcmpgtb
jg
mov
clc
dec
mov
mov
dec
testb
add
addr16
cmpsl
scas
pop
cmp
sbb
mov
ljmp
xchg
not
and
mov
repnz
mov
cli
movb
or
xchg
mov
dec
outsl
in
inc
int
les
stc
sbb
xor
clc
mov
adcl
xor
imul
sub
xchg
push
jbe
lea
jg
jno
repz
cmc
lods
and
in
out
push
adc
fs
daa
adc
add
jl
sub
movsl
adc
out
ljmp
stos
arpl
cmp
adc
add
ss
sub
int3
in
iret
xor
xor
loopne
xchg
pop
sbb
stos
mov
ret
pop
add
pop
out
scas
mov
sbb
lds
jg
fcmovnb
testl
add
mov
dec
mov
dec
jo
pop
and
xchg
pop
pop
cmp
dec
enter
mov
mov
or
jbe
fsubrl
add
jbe
cmc
out
inc
inc
andb
adc
add
out
inc
pop
add
add
inc
adcl
pusha
or
fstp
jle
flds
cltd
stc
lock
aam
ljmp
stc
lret
mov
push
jns
shlb
clc
sub
mov
adc
pop
jl
push
add
push
sub
jns
dec
mov
dec
icebp
xor
cltd
fwait
decb
aaa
adc
xchg
scas
xor
sub
pop
push
insb
add
adc
dec
ja
scas
fsts
mov
push
xlat
rorl
cli
sbb
and
xchg
fildll
in
outsl
xorb
push
cwtl
sti
inc
int3
mov
cmpb
cltd
push
sbb
jl
add
std
fidivs
idivb
jl
jno
cwtl
test
loopne
ret
mov
cmp
pop
adc
js
mov
popa
shrb
push
mov
pop
pusha
add
aaa
iret
jge
cmpsb
pop
leave
mov
mov
js
jo
inc
shrl
out
int
test
push
loope
cmp
call
mov
add
sub
mov
push
aad
jae
cmpsb
xor
xor
divl
addr16
mov
or
sub
jns
repnz
int
jne
dec
and
xor
pusha
mov
popf
loop
outsb
mov
ret
or
lahf
and
je
negl
or
add
jle
rcl
xchg
std
pop
stc
mov
leave
and
mov
test
rcl
xor
cmpsl
stos
adc
out
jmp
and
iret
sbb
loop
insl
stos
inc
push
push
push
roll
roll
cld
and
mov
mov
pushf
filds
es
mov
loope
sbb
in
cmp
ss
je
inc
aad
pusha
pusha
movsl
stos
insb
xchg
test
cmp
idivl
iret
sub
mov
adc
lcall
je
outsl
pusha
mov
je
outsl
mov
mov
jl
pusha
pop
icebp
sub
dec
daa
lods
mov
mov
adc
adc
or
fiadds
jge
xchg
and
repnz
fisubl
mov
mov
sub
xchg
in
aad
mov
jns
pop
sub
mulb
in
dec
dec
out
mov
stos
dec
xchg
jnp
push
mov
je
sub
dec
cwtl
dec
fisttps
add
pop
test
es
sbb
jne
sbb
jo
in
popf
cld
mov
jg
mov
lock
and
imul
sub
fidivrl
aas
bound
les
mul
inc
adc
pop
notl
in
push
mov
and
lods
add
out
cmp
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
aam
sbb
or
ja
push
xorps
shrl
pop
addr16
mov
sub
pop
and
sub
jl
sub
pushf
ret
sbb
and
mov
sub
daa
pop
pop
lds
push
test
inc
mov
lfs
stos
and
cmpb
lea
mov
dec
repz
in
pop
inc
movsl
outsb
jle
dec
and
jb
pop
std
movsl
icebp
cmp
mov
rcl
dec
lcall
enter
lods
xlat
sbb
std
rclb
movsl
std
ffree
cmp
fxch
adc
imul
push
mov
or
sbb
inc
fwait
mov
sub
clc
and
call
sbb
push
lret
xor
je
adc
xor
decb
xor
push
add
out
add
push
mov
and
repnz
mov
jne
loopne
pop
mov
xor
loope
jmp
adc
mov
mov
hlt
stos
jb
test
and
ss
mov
imul
mov
pop
imul
pop
int3
pushf
push
mov
inc
jne
aad
mov
xchg
cmp
sbb
imul
cwtl
loopne
loop
in
jge
adc
jb
pop
push
jg
push
pop
lret
out
loop
push
incb
cmp
cli
push
pushf
int
mov
pop
lds
stc
mov
insb
ja
xor
mov
rcl
add
xor
lahf
or
imul
cmc
movsl
pop
in
mov
pop
push
xor
xor
insb
push
or
ja
sti
sbbb
or
ficoms
xchg
cmp
fistpll
out
sbb
in
daa
sbb
daa
adc
fldenv
xlat
insl
jae
insl
pop
mov
das
gs
push
js
mov
pop
jp
and
sbb
lcall
shl
in
mov
mov
gs
pop
jmp
stos
jns
mov
pop
xchg
xchg
int
mov
and
sub
xor
mov
dec
jb
add
lcall
and
push
sub
imul
and
orb
add
pushf
mov
or
and
mov
bnd
stos
rcrb
jnp
aad
cmp
xorl
js
xchg
adc
int3
inc
mov
add
out
mov
jl
data16
jne
pushf
lods
mov
pushf
push
lock
jno
pop
adc
int
int
jb
in
testl
loop
mov
pop
inc
movsl
les
hlt
mov
dec
ljmp
adc
push
int
dec
xchg
jecxz
mov
fwait
or
call
jmp
inc
fwait
adc
sbb
call
mov
push
hlt
push
adc
push
sbb
cmp
daa
mov
sub
sub
inc
pop
or
stc
fcmovnu
cltd
fstps
sub
mov
jg
pop
sub
pop
lods
mov
dec
dec
and
sbb
out
or
inc
in
jmpw
add
add
add
and
vmwrite
das
pcmpgtb
add
sub
adc
dec
xor
jl
ds
leave
inc
lcall
ds
aam
mov
pop
dec
add
fs
sbb
pop
dec
pop
mov
imul
bound
in
pop
stc
das
lahf
mov
fisubrl
jno
fiadds
add
imul
cmp
dec
inc
jne
fs
ds
jecxz
adc
pop
nop
jp
movsb
sahf
call
cmp
cltd
pushf
sub
insb
xchg
insb
and
sar
das
mov
or
cmpsl
ret
les
mov
je
mov
lret
mov
add
pop
adc
ss
adc
in
sbb
mov
dec
hlt
stos
outsb
iret
adc
mov
jg
leave
outsl
out
outsl
into
addr16
pop
fcoms
mov
lret
or
std
mov
cmp
inc
fdivl
fs
insb
psubq
mov
pop
jmp
dec
push
ds
movsb
or
sbb
mov
inc
or
or
ss
push
xchg
fwait
dec
xlat
in
lahf
push
push
xor
sub
push
into
jnp
sub
ds
addr16
mov
xchg
sbb
addl
fstpl
push
jns
pop
mov
and
aaa
inc
jge
int3
orl
inc
lds
std
xchg
ds
or
adc
cvtdq2ps
movsl
out
cmp
pop
push
incb
pop
inc
ja
inc
adcl
adc
mov
add
adc
gs
pop
out
ljmp
dec
jg
xchg
or
and
loopnew
cmc
pop
mulps
sbb
in
scas
in
jmp
xlat
mov
push
jae
imul
cltd
inc
mov
jle
cmp
pop
idivl
stc
jmp
mov
xchg
fst
ja
cld
add
add
add
add
xchg
mov
dec
call
sahf
mov
xchg
sub
lahf
mov
das
addr16
cmp
divl
jmp
dec
popa
lock
fs
xchg
loopne
loopne
fcoml
or
adc
mov
cmpsl
jge
lods
mov
mov
inc
mov
test
jl
jns
hlt
push
out
pop
sbb
lods
test
xchg
pop
loop
arpl
int
sub
or
and
jo
or
sbb
roll
inc
sbb
pop
sub
fnstenv
xor
xchg
jmp
pop
xor
mov
aam
push
pop
gs
pop
xchg
int
push
sarb
in
imul
jmp
lock
dec
or
popl
pop
add
pop
stos
arpl
arpl
inc
adc
popa
test
add
sub
testb
movsl
icebp
jl
call
arpl
cli
aas
in
data16
mulb
jp
fildll
test
in
sbbb
mov
xchg
insl
mov
addl
lods
and
loopne
flds
mov
xor
dec
mov
push
push
repnz
in
sub
adc
cmc
rorb
adc
add
push
pop
dec
inc
push
aas
mull
ret
aam
adc
push
and
nop
loope
cmp
sbb
insb
xchg
or
pop
adc
sahf
xchg
pop
push
les
movb
xor
cli
jns
mov
testb
lret
jecxz
loop
jl,pn
clc
push
faddl
or
mov
xor
jl
repnz
stos
jmp
popf
inc
pop
or
cmpsb
push
pop
mov
arpl
cltd
test
cmpsl
push
mov
cmp
inc
enter
inc
lahf
mov
test
xchg
jo
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
mov
adc
jge
psubb
fmuls
or
arpl
jno
test
lret
mov
mov
stc
xor
jmp
pop
ds
dec
add
outsl
bound
push
cmpsl
pushf
xor
enter
push
out
sti
adc
test
incl
or
testl
mov
lcall
push
or
push
cmp
mov
testb
and
lods
mov
push
and
push
fs
mov
cltd
push
aas
pop
test
mov
pushl
gs
jns
ret
mov
jecxz
mov
or
sahf
jge
or
popf
aaa
sbb
pop
insl
insb
loope
lret
jns
scas
pushf
and
aaa
and
fcoml
leave
je
arpl
mov
lods
test
lahf
cmp
and
jmp
add
nop
ret
ljmp
mov
mov
cwtl
sub
push
daa
sub
push
xorl
scas
xor
or
add
push
data16
gs
aad
adc
or
int
mov
xchg
ret
pop
gs
push
push
inc
fstpt
roll
popa
ss
push
ficoms
and
test
push
and
imul
mov
jle
xchg
adc
push
je
mov
inc
xchg
mov
sub
mov
fstpl
sarb
adc
and
mov
bound
mov
rcl
mov
ffreep
mov
sahf
mov
push
push
inc
xchg
push
or
and
lds
leave
fstp
fiaddl
jp
icebp
loop
es
aad
mov
adc
pop
push
inc
je
ljmp
xor
add
ss
pop
mov
cmpl
callw
jecxz
scas
jns
cmp
and
cltd
rol
sbb
shrb
frstpm(287
je
or
mov
sub
fcmovb
add
push
shlb
movsl
repz
jne
pop
adc
push
cwtl
jb
push
lret
mov
cmpl
xchg
cmpsl
mov
add
sub
adc
in
pop
mov
push
mov
lock
ja
mov
or
dec
aas
xor
testb
addr16
xor
stc
mov
fildl
inc
hlt
test
das
inc
push
pop
sbb
xor
cmp
test
aad
dec
xor
and
fistpll
stc
lcall
test
pusha
stos
pop
cmp
in
loope
xor
rorl
add
xor
data16
xor
inc
adc
add
cli
cld
xor
bound
movsl
jmp
dec
push
push
jne
insl
sub
pop
mov
test
mov
lahf
fcoms
and
sbb
jno
js
pusha
lret
sbb
xor
dec
mov
mov
lea
cmp
mov
inc
ss
inc
into
sbbb
lock
cmpsb
and
in
inc
mov
cmc
std
scas
pop
in
out
ja
ficoms
in
cmc
jns
mov
lds
dec
popf
sub
xor
or
arpl
int3
cmp
jae
lea
xchg
push
fldt
xchg
and
xor
cmpb
inc
jecxz
cs
cmpsb
xor
into
hlt
loope
fs
pop
leave
push
pusha
xchg
dec
xor
push
aam
and
and
vfmadd213ps
xor
ds
sbb
push
sub
in
setp
adcb
jmp
dec
orl
data16
inc
mov
enter
rcrb
jbe
idiv
icebp
lods
test
mov
cld
dec
mov
mov
push
lock
cltd
xchg
int3
mov
neg
int
push
sub
push
jae
xchg
pop
test
push
pop
into
push
jmp
dec
jne
mov
addr16
add
aam
xchg
pop
out
push
pop
out
pop
mov
jecxz
bnd
out
loope
jae
aam
popl
mov
std
fsubp
sub
cmp
jge
shll
cmp
int
std
loopne
scas
lock
daa
call
leave
ja
sti
jne
push
in
je
pop
add
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
