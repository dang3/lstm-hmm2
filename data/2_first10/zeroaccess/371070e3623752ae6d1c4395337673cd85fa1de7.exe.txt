push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
test
addl
sub
es
cmp
js,pn
je
cmp
jo
jo
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
sbb
or
mov
jle
sti
cli
push
loope
repz
test
pop
xor
and
xchg
dec
xor
or
xlat
or
push
mov
and
lock
push
mov
stos
lret
les
mov
xlat
or
inc
mov
push
mov
in
jae
in
jle
or
pop
dec
scas
addr16
mov
scas
jb
aad
cmp
lcall
xor
add
inc
sub
xchg
xorl
push
insb
xor
sarl
shlb
int
sbb
out
lds
cmpsl
adc
jbe
clc
mov
inc
pushf
push
insb
rcl
push
mov
std
push
xor
mov
lret
add
cs
xor
push
notb
mull
pusha
repz
push
lcall
sub
stos
nop
mov
insl
cmp
scas
stc
ret
fimuls
popf
fmulp
xchg
dec
push
in
or
out
imul
jo
cmpsl
fnsave
xchg
add
shlb
pop
movl
fidivl
jns
stos
mov
cltd
mov
pop
rorl
dec
hlt
sub
and
sbb
testb
movb
in
dec
push
insl
bound
imul
jmp
popf
or
lods
pushf
xor
jne
mov
outsl
pop
in
movsb
push
xchg
movd
mov
jne
pop
mov
outsb
mov
jl
in
cmp
enter
pop
sbb
push
mov
arpl
lcall
lods
jno
jecxz
out
add
pop
pushf
or
imul
mov
pop
das
jmp
push
fnsave
jl
mov
cmp
mov
pop
xor
adc
test
sbbl
data16
mov
lods
cmpsl
adc
push
lahf
sti
movsb
pushf
inc
jl
sub
mull
inc
add
fstps
or
dec
loope
adc
shlb
sbb
mov
iret
add
leave
aaa
pop
jg
cmpl
es
test
or
pop
pop
dec
loop
pop
into
dec
cmp
xor
xor
pop
stc
xchg
arpl
xchg
xchg
pusha
mov
into
cmp
mov
inc
pushf
cmpsl
push
ret
rclb
sbb
cwtl
call
bound
aam
adc
stos
out
mov
hlt
dec
fcomps
push
jb
inc
mov
popa
addb
mov
out
faddl
mov
scas
out
shlb
cmp
add
ljmp
adc
mov
mov
pop
mov
les
mov
rcll
shlb
aam
cmp
fs
jge
into
stc
jle
jg
inc
push
je
add
jns
mov
cld
push
mov
jmp
mov
fidivs
orb
sbb
and
pop
push
mov
push
pop
xlat
nop
fmull
lods
enter
xor
aam
sbb
dec
mov
xor
jl
cld
cmp
scas
push
jmp
fcmove
rorl
out
ds
add
mov
add
movsb
jl
test
dec
dec
dec
push
mov
and
push
aaa
dec
sub
adc
and
xlat
adc
shl
test
leave
xlat
lret
insb
scas
mov
ljmp
les
ja
test
scas
divl
jl
ss
out
mov
sahf
leave
lcall
gs
lahf
test
push
jmp
insb
jmp
lret
xchg
mov
mov
mov
or
testb
cwtl
sub
pop
daa
popa
sub
hlt
and
hlt
or
jno
into
jae
sbb
pushf
stos
jbe
movsb
fldenv
push
pop
xchg
push
fldt
sbb
mov
dec
dec
jae
xchg
lret
push
inc
call
mov
jmp
les
mov
loopne
lret
lds
add
cli
xchg
int
out
loopne
mov
stc
out
clc
jo
pop
push
and
scas
add
fwait
pop
lret
inc
lcall
mov
ljmp
hlt
dec
pop
mov
hlt
jns
int
stos
mov
addr16
mov
stc
sbb
call
sbb
je
xor
shl
sbb
dec
fstpl
xor
out
out
cmpb
das
ret
stos
into
iret
loopne
cmpsl
je
hlt
or
sub
out
punpcklwd
insb
xchg
mov
and
sub
arpl
add
xor
aam
dec
adc
jmp
bound
mov
push
out
mov
jecxz
cmp
pop
jb
add
nop
dec
lock
data16
xchg
cwtl
push
out
mov
cmpsb
mov
sbb
push
popf
ds
loopne
mov
sub
or
fs
mov
sub
sub
fldcw
sub
dec
sbb
inc
stos
xchg
scas
shrb
sbb
mov
lret
mov
je
push
push
mov
outsl
shll
jp
mov
push
out
lods
imul
mov
or
xor
jbe
xor
aas
ljmp
clc
mov
mov
pop
cli
xor
ljmp
push
cmpb
pop
inc
and
in
adc
ljmp
push
je
push
cs
icebp
mov
cmp
cs
mov
les
or
sbb
addr16
mov
or
in
sti
outsl
sub
ljmp
inc
xchg
jae
mov
fisubrs
test
xchg
fs
dec
dec
pop
sub
jl
lret
pop
cmc
in
out
jle
ljmp
sub
sar
jg
les
mov
mov
lods
fmuls
fs
mov
call
mov
jle
mov
push
and
and
icebp
rcr
roll
repz
stc
dec
xchg
add
mov
push
jg
data16
mov
movsb
jecxz
cltd
xchg
shll
push
push
xchg
push
test
add
push
roll
pop
pusha
je
xchg
les
add
aad
dec
std
or
in
rcrl
enter
jle
lret
mov
addr16
insl
xchg
ret
mov
out
ds
xchg
xchg
sub
pop
loope
rorl
andl
outsb
mov
roll
es
aas
mov
pop
shrl
sub
addl
nop
add
cli
push
aad
fs
dec
push
jne
scas
loope
popf
inc
xor
push
adc
pop
sbb
icebp
iret
rcrb
pop
sbb
mov
loope
andl
outsl
leave
xchg
shll
sub
int
enter
mulb
les
popa
imul
xorl
sbb
cli
sbb
cmp
roll
mov
mov
cmp
mov
jecxz
jmp
hlt
cli
and
aas
mov
xor
fpatan
dec
jne
test
dec
in
sbb
fwait
pop
fnstsw
jae
neg
in
pop
adc
add
adc
mov
ds
sbb
fcompl
jg
push
sbb
lods
jg
sbb
rcll
push
sbb
out
xchg
pop
test
xor
mov
xchg
xchg
gs
ja
lds
lods
xchg
or
jle
ljmp
mov
cld
adcb
mov
jbe
scas
test
ret
fcoms
mov
shlb
xlat
push
movsb
inc
mov
fisubrl
jae
adc
in
mov
xchg
mov
xchg
inc
mov
nop
push
xchg
mov
pop
test
inc
cmp
mov
iret
popa
out
push
ss
jne
orl
xchg
pop
les
inc
or
mov
mov
cmp
inc
push
test
rcrb
add
rol
pop
lds
adc
inc
sbb
pop
fsubs
jnp
inc
lea
cld
pusha
pop
imul
addr16
push
jmp
pop
hlt
sub
mov
lahf
scas
pop
mov
add
cs
ss
add
or
add
mov
loop
fwait
addb
js
lods
pop
fisubl
mov
daa
enter
lahf
mov
es
mov
shlb
mov
push
bound
mov
and
inc
or
sub
insb
pop
mov
inc
out
insl
mov
sub
mov
jge
sub
neg
les
in
add
cld
xchg
adc
cmc
push
sub
xlat
adc
cld
stc
xchg
fimuls
mov
pop
fldl
push
fcoms
or
mov
incb
pop
test
int3
dec
jnp
cli
or
mov
fwait
lods
fcom
das
fnstenv
dec
loopne
fidivrl
fwait
clc
xor
pop
test
leave
js
test
or
test
ds
or
pop
in
in
lods
cmp
aad
or
mov
lahf
outsl
mov
push
call
jecxz
xor
dec
in
pop
cltd
roll
shrb
mov
inc
pusha
add
mov
xor
mov
leave
out
xchg
in
cmc
imulb
std
test
mov
inc
pop
jae
imul
stc
push
mov
xchg
inc
xor
int3
enter
js
mov
stos
and
pop
stos
mov
cmc
aas
lcall
mov
fadds
pushf
xor
pop
add
daa
subb
shl
mov
mov
pop
std
jno
test
inc
aam
mov
xlat
xor
hlt
scas
sahf
into
push
or
int3
les
dec
mov
test
mov
inc
mov
imulb
or
pop
in
and
mov
mov
pop
out
scas
lahf
rclb
stc
pop
pushf
sbb
sub
mov
sub
adc
faddl
movsb
lock
jecxz
shrb
xor
or
and
and
sub
scas
sbb
pop
lahf
mov
or
pop
mov
mov
jns
push
inc
xchg
ficomps
mov
sbb
daa
rclb
ret
cmpl
cltd
mov
fsubl
cmp
bound
ret
lock
cmp
bound
loop
leave
xor
lods
repz
xlat
jge
cmpsl
call
dec
test
test
adc
sub
mov
icebp
mov
shrb
in
mov
jno
mov
sbb
adc
int3
mov
sbbb
jns
jns
mov
sbb
decb
mov
shll
imul
dec
pop
lods
push
or
dec
sub
leave
adc
xchg
jmp
sub
pop
add
dec
stos
pop
push
xor
and
jne
adc
adc
push
xchg
push
add
pop
adc
xchg
mov
sbb
mov
sbb
or
add
cmc
sub
pop
dec
scas
insl
dec
imul
scas
add
adc
aas
in
fs
push
jg
dec
subl
dec
jge
push
mov
shrl
iret
out
in
mov
loopne
dec
dec
mov
rcrl
cli
pop
cmp
fsubs
ds
ljmp
mov
or
divb
lods
dec
inc
jno
lock
mov
arpl
push
mov
or
movsb
hlt
out
sbb
repz
addb
xor
sahf
dec
out
clc
les
and
rorb
cmp
test
pop
jle
inc
aaa
lds
dec
btc
movsb
sahf
cld
shr
fisubrl
in
fldlg2
xchg
insl
xor
loope
add
ja
mov
dec
or
pop
mov
rcl
rclb
pop
mov
dec
and
scas
push
das
ret
fistps
lret
jle
xor
icebp
dec
pop
mov
movsb
outsl
sub
mov
adc
jmp
or
mov
jecxz
clc
fisubs
xchg
adc
mulb
mov
mov
adc
addr16
mov
int
int
cmp
in
ret
pop
lcall
rclb
enter
add
test
loope
mov
cmp
out
loope
rclb
aaa
and
push
cli
cli
fimuls
adc
cld
stos
cmpsl
mov
adc
adc
mov
pop
out
lret
xlat
jns
cmp
jg
lods
push
nop
aam
and
cmp
pop
fldenv
test
jl
cmp
cmp
ret
fs
mov
or
dec
sbbl
pop
test
shll
and
movsl
and
aaa
into
xorb
or
into
inc
xchg
mov
adc
aas
movb
sub
or
inc
push
cmpsb
dec
inc
cld
push
dec
xchg
jge
and
addr16
sub
in
and
inc
loop
jmp
scas
mov
add
cmp
idivb
xchg
shl
fsub
enter
daa
lock
movsl
jg
movsb
fisttpl
push
out
jno
test
aam
iret
movsl
frstor
dec
stos
enter
cwtl
loopne
sub
decb
pusha
ds
arpl
int
mov
fdiv
test
mov
cs
mov
jmp
mov
mov
push
mov
mov
xor
fwait
mov
jb
and
xchg
mov
stos
jle
shrb
mov
jmp
mov
push
push
mov
cltd
push
test
xor
pop
jnp
cmp
sub
push
ret
lahf
out
dec
adc
scas
daa
pop
stos
pop
out
pop
sbb
jno
inc
mov
pop
and
push
loop
mov
leave
fldcw
int3
push
out
daa
xor
cmpsb
leave
xor
stc
shrl
sub
xor
insl
test
xchg
xchg
and
xchg
test
mov
xor
scas
aaa
or
mov
sbb
jae
cmp
clc
int
repz
je
mov
xchg
push
add
mov
add
loopne
inc
std
sub
imul
mov
pop
mov
adc
jbe
ss
cmpl
dec
fisttpl
call
movsl
fsts
imul
xchg
dec
mov
stos
jns
sbbb
das
aaa
and
pop
add
lahf
xor
ss
xchg
sbb
or
pop
aas
mov
out
mov
adc
lods
jecxz
bound
divl
lds
aad
aad
adc
mov
cmp
pop
sub
popf
pop
fistps
and
outsb
dec
enter
mov
ljmp
int3
pop
push
push
out
xchg
shrl
scas
jg
xor
mov
or
test
or
lahf
inc
inc
repz
inc
test
lret
in
xor
and
lea
in
mov
and
push
arpl
sub
cmp
jge
sub
out
movsb
popf
das
std
mov
test
mov
push
rorl
shlb
dec
test
lock
sbbl
or
ja
in
xor
push
jo
sbb
into
rol
lret
jmp
bound
ret
jo
adc
shrl
xchg
dec
insb
cmp
jo
jnp
loop
loopne
add
pop
push
inc
mov
sbb
in
mov
shl
pop
and
jmp
mov
jmp
mov
addr16
cmp
nop
sub
cltd
adc
xchg
jl
shl
mov
inc
adc
cmpl
ds
and
xor
sub
ljmp
xor
inc
sti
ret
jne
jnp
jl
mov
in
popf
mov
or
add
div
jp
popa
lods
data16
imul
bound
aad
mov
cmp
imul
sarl
cli
mov
not
ljmp
mov
jmp
seto
push
mov
mov
or
insb
adc
das
xchg
jle
push
test
mov
arpl
dec
ss
aaa
push
mov
mov
adc
mov
subb
xchg
pop
add
cmp
arpl
fnsave
cmp
int
sbb
xor
jne
mov
testb
jbe
jecxz
pusha
rcll
call
lds
adc
test
ja
or
mov
fisttpl
xor
mov
or
or
jge
adc
sahf
fisubrs
out
scas
jp
fwait
std
xchg
mov
mov
fwait
pop
int
inc
lret
fwait
add
cwtl
or
fisttpl
xorl
lret
push
add
ss
scas
lock
cmp
stos
aaa
test
loopne
mov
add
mov
mov
lret
sbb
jge
push
lods
std
int3
sbb
mov
aas
sti
cmpsb
fcmovbe
movsb
popa
add
fisubrl
call
mov
shll
lcall
mov
andl
in
jp
mov
mov
sti
std
pop
pusha
in
cmp
sbb
xchg
cli
push
push
adc
adc
inc
arpl
inc
push
push
xchg
aam
call
inc
aas
mov
bound
mov
movsb
pop
in
aad
in
leave
xchg
cmp
sub
or
push
dec
dec
sbb
cmp
mov
inc
adc
or
gs
pop
push
test
lcall
adc
loopne
sub
cmp
rolb
dec
jge
xlat
cs
int
lea
jbe
inc
sarb
push
dec
dec
jl
jb
adc
mov
sbb
aad
inc
pop
xchg
adc
push
adc
es
adc
scas
inc
js
and
mov
pop
fimull
je
cwtl
fwait
cmp
pop
jge
jnp
adc
je
push
enter
arpl
add
jmp
mov
std
pushl
add
and
dec
pop
mov
sarl
stc
jl
aas
sbbl
pop
add
stos
push
pop
xchg
mov
sbb
cmp
fs
xor
ficoms
out
scas
mov
mov
adc
jnp
movsl
aaa
aaa
stos
adc
mov
aas
xor
sarb
and
push
into
dec
clc
adc
mov
push
sub
mov
rcrl
cmp
fadds
push
inc
ja
out
and
and
cmpsb
push
in
fildll
sub
xlat
fadds
push
dec
xor
ds
pusha
mov
jb
dec
out
inc
and
cmp
lods
sbb
pop
mov
repz
popa
mov
push
inc
xor
sbb
inc
sahf
pusha
leave
dec
lret
mov
push
dec
jmp
jae
mov
inc
and
lcall
movsb
xchg
jge
outsb
fists
and
orl
int3
or
pop
xor
fwait
test
mov
sub
add
ret
cld
scas
cld
mov
loopne
dec
or
jl
xor
jb
add
mov
jecxz
mov
cmp
cwtl
int3
fcoml
and
pop
mov
scas
mov
xlat
fsubrs
and
jg
cmp
cmp
sbb
or
add
test
hlt
mov
outsb
dec
sub
mov
shl
mov
sbb
cli
aas
int
add
in
jae
inc
shr
outsb
pop
shll
jnp
lret
stos
and
les
ss
dec
int
cmpl
pop
xor
push
outsl
dec
int3
out
mov
mov
cmp
sub
leave
sbb
mov
imul
adc
stos
xchg
inc
mov
pusha
ss
in
nop
lahf
cmovle
fs
clc
pushf
inc
and
jae
adc
fimull
or
pop
mov
test
cmpsb
pop
ljmp
pop
jp
push
mov
push
jp
push
out
imul
mov
add
out
repnz
je
sbb
jge
sbb
xchg
sbb
pop
rcll
sbb
das
push
sub
fbld
xor
lods
xorb
fsubrs
jg
push
int
jns
adc
mov
adc
inc
mov
xlat
dec
mov
and
std
dec
xchg
and
bound
push
push
jns
incb
popa
pop
sbb
inc
push
jb
sub
scas
das
hlt
arpl
inc
clc
xchg
fidivrl
push
int
shll
lret
jb
add
in
cmpsb
ret
push
lods
sbb
psrld
or
gs
into
outsl
inc
cmp
jnp
mov
mov
inc
xchg
pop
inc
aaa
dec
jne
or
cmpb
cmp
or
sbb
sub
jbe
sub
xor
out
jecxz
pop
cmpsb
push
out
lea
xor
and
jle
dec
pop
lcall
cmp
inc
pop
mov
push
mov
pop
mov
outsl
shrb
xchg
lahf
xchg
add
pop
std
icebp
cwtl
shlb
mov
xor
mov
sub
push
mov
mov
mov
xor
sbb
pusha
loopne
and
jecxz
scas
or
pop
rclb
mov
popf
aam
inc
loopne
rcrb
dec
pop
sbb
xchg
jmp
int
sub
iret
mov
mov
ljmp
xorb
pushf
inc
faddl
mov
sub
sbb
iret
jo
or
jo
cmpb
mov
inc
lock
inc
out
xchg
push
jnp
out
bound
xor
and
int
jb
movsb
inc
or
sub
lret
jp
jb
xchg
add
int3
jge
cld
add
jae
jge
jne
mov
fwait
outsb
xor
cmp
sarb
cwtl
daa
adc
cmp
and
mov
push
leave
jge
mov
int3
sbb
add
push
pop
bound
dec
push
ljmp
rorl
xchg
xor
or
mov
fstpt
lods
ficoml
je
arpl
inc
cmp
dec
scas
add
fistl
movsl
in
pop
pushl
push
add
xlat
pop
mov
adc
jae
adc
adc
mov
outsl
add
test
cmpsb
hlt
fwait
test
xor
cwtl
out
addl
repnz
inc
pop
and
ret
daa
cli
outsb
call
or
push
scas
aad
adc
jno
in
mov
movsl
sbb
insl
test
lahf
pop
insb
add
pop
push
loop
push
lcall
mov
cmpsb
pop
stc
pop
fwait
sbb
cmp
rol
psubq
sbb
sbb
cli
imul
repnz
dec
lds
add
push
in
aad
sbb
cmp
pop
int
cmc
neg
mov
leave
rcl
nop
outsb
mov
push
xchg
shll
cmp
mov
cmpsb
lds
push
imul
test
adc
sar
in
fwait
out
test
movsb
dec
popf
movsb
enter
out
and
ja
sub
jnp
mov
xchg
xchg
sbb
cmp
sbb
cli
loop
xchg
adc
addl
scas
test
lds
pop
cmp
push
push
rol
cmp
add
dec
ljmp
mov
xor
pop
add
jno
fwait
push
test
push
mov
mov
inc
push
ljmp
das
cmp
je
movsl
xor
add
lcall
push
sbb
daa
testb
add
adcb
lock
cli
movsl
cwtl
adc
stos
aad
cs
out
rorb
pop
sbb
mov
dec
ds
popf
mov
out
adc
xor
cs
out
xor
inc
js
xchg
add
adc
pop
xor
sub
ja
mov
push
push
ret
mov
and
dec
lods
inc
xchg
jl
mov
inc
mov
mov
push
mov
sbb
dec
and
sub
jecxz
cli
popa
cmp
cmpsb
push
inc
fcmovne
aam
cs
daa
loop
sub
push
lret
aas
cli
add
das
cmpsb
cmp
lock
out
dec
and
mov
loop
repz
push
clc
lods
mov
sbb
sbbl
inc
cmpsl
mov
add
mov
subb
cltd
fcmovu
mov
pop
enter
fldenv
divb
and
hlt
fiaddl
jo
inc
negb
jne
in
dec
mov
aam
mov
aaa
dec
or
test
xor
or
and
dec
stos
out
mov
adc
push
mov
sub
adc
test
adc
cltd
lods
add
out
mov
cli
stc
adc
pop
pop
mov
shll
aas
pop
out
lret
out
push
stos
adc
and
aaa
int3
stos
cs
cmp
sub
sbb
lahf
jo
sahf
lret
jmp
pusha
dec
xor
mov
call
push
push
hlt
add
and
aas
dec
cld
xor
iret
add
pusha
roll
mov
sbb
cmp
push
mov
push
pushf
lods
mov
cltd
push
gs
out
xchg
bnd
xor
push
pop
push
inc
mov
inc
push
mov
rcrb
aaa
aad
loope
cli
sub
imul
sti
je
xchg
mov
jne
lret
jecxz
and
inc
adc
int3
cmp
jnp
adc
push
push
xlat
mov
popf
jg
movsb
icebp
adcb
cmc
fcmovnb
cmc
cmp
lds
cmc
fdivs
mov
es
push
aam
mov
mov
popa
mov
push
pop
mov
int
nop
sub
loop
adc
fnstcw
inc
xlat
vpunpckhqdq
and
cwtl
pop
rcl
pop
mov
pop
sub
adc
adc
ljmp
and
xchg
push
pop
repnz
cmp
pop
stos
add
push
cs
clc
adc
rol
sub
dec
adc
les
or
mov
in
ret
pop
fisubl
fstpt
enter
js
xchg
cmc
push
inc
inc
or
jnp
push
aaa
sub
clc
fadd
or
orl
cmp
jne
in
call
sub
mov
sub
sub
inc
loop
inc
xchg
rclb
jo
add
mov
aaa
inc
int3
fsubs
push
sub
mov
repnz
mov
and
dec
dec
imul
pop
add
xor
add
or
jmp
fldt
movq
adc
icebp
test
loop
rol
ret
mov
sti
shrb
clc
or
jmp
or
mov
ficompl
ret
arpl
mov
add
ja
movsb
mov
cmpsb
pop
sub
ljmp
ret
das
jp
lret
xor
mov
iret
ss
outsl
mov
push
insl
pop
inc
add
xlat
repnz
mov
sub
addl
bound
in
cmp
jge
test
mov
cs
push
inc
popf
stc
movsl
mov
adcb
cwtl
hlt
adc
push
popf
mov
xor
cwtl
xor
inc
push
movsb
dec
xchg
cmp
push
or
jnp
addr16
loope
inc
clc
es
jl
scas
push
cmp
testb
icebp
mov
adc
lock
outsl
lods
rclb
inc
icebp
mov
mov
or
xchg
inc
imul
mov
lahf
push
dec
cwtl
pop
fstpt
iret
loopne
fisttpll
mov
sbb
and
movsl
jbe
lcall
fnstsw
mov
ret
xchg
sub
push
mov
cli
jbe
jecxz
stc
ret
or
add
sbb
fcomip
cmp
ljmp
add
mov
add
lds
repnz
push
out
cmp
dec
jbe
push
mov
loopne
xchg
add
cmp
ja
pop
jae
xor
movb
xchg
mov
addr16
jge
xchg
out
add
jp
pop
sub
pop
mov
fdivrs
inc
ret
sub
scas
and
cmpsl
int
mov
push
jns
lods
insb
xorl
sub
mov
xchg
arpl
fcomps
pop
and
scas
ret
mov
mov
xor
int3
add
jns
pop
adc
test
imul
pop
xchg
and
pop
pop
sub
dec
dec
add
loop
sub
sbb
add
inc
sub
es
mov
xlat
sub
jecxz
dec
shl
mov
int3
fstl
push
xor
arpl
fsubrs
adc
sbb
cltd
cmp
pop
mov
rorb
mov
lret
sbb
dec
or
test
inc
shll
loope
dec
leave
sti
ficomps
clc
cld
lcall
insb
dec
daa
test
jbe
sbb
cmp
push
jp
out
daa
sahf
xchg
fiaddl
repz
pop
es
pop
mov
shlb
inc
lds
jb
xchg
out
mov
fisubl
rcll
push
push
dec
push
push
mov
lahf
loopne
sub
mov
pop
movsb
mov
dec
enterw
data16
pop
into
xchg
mov
push
pusha
js
clc
and
cmp
adc
push
jb
cld
cltd
dec
outsb
ds
sbb
call
inc
test
ss
fnstcw
mov
stc
call
add
cmpsb
std
adc
dec
jg
sbb
mov
addr16
cmpsl
mov
push
test
negb
xchg
lods
xchg
ss
xchg
int3
test
enter
xchg
push
jl
cli
push
dec
lock
arpl
lds
add
js
lea
js
pop
imulb
mov
mov
jl
lret
aas
push
push
and
and
xchg
pushl
rorb
pop
fwait
loopne
orl
xchg
int
mov
jo
sub
jnp
xchg
sub
xor
dec
add
inc
loope
mov
mov
sub
lea
and
jo
dec
jb
adc
mov
sti
xchg
rorl
jnp
add
ret
ja
sub
push
dec
mov
cmp
mov
mov
rcrb
lock
rcrl
mov
xchg
sub
pop
int
add
fidivs
mov
push
sbb
add
sbb
and
rcrl
bound
popf
ror
and
fs
sub
mov
sbb
ret
mov
data16
sti
orl
inc
mov
imulb
movsl
sub
or
aas
xchg
icebp
js
jge
pop
push
hlt
adcb
or
and
fadd
ficompl
jl
out
sbb
push
lea
and
out
lock
data16
adc
outsl
rol
inc
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
je
dec
dec
pop
addl
shrb
repnz
sub
fildll
adc
cld
push
scas
push
fistpl
aam
ljmp
push
inc
mov
pop
sbb
pop
in
imul
addr16
pop
jl
cli
popa
bound
add
pop
add
adc
mov
mov
test
cmp
sub
popa
inc
mov
dec
push
pop
push
ror
int
jg
sbb
push
test
xchg
out
fwait
lock
pop
xchg
or
and
inc
rolb
sbb
fs
fmulp
push
add
insb
loopne
jmp
add
sub
inc
jle
xor
fsubrs
and
adcl
adc
xor
data16
mov
cmp
pop
dec
stos
cli
inc
scas
stos
js
std
xlat
and
pop
mov
mov
or
mov
cmpsb
xchg
mov
rcl
push
fcmovu
stos
flds
lds
arpl
pop
fistps
dec
mov
push
iret
rep
push
pop
mov
jmp
insl
or
ror
inc
or
lds
dec
inc
test
pop
das
sub
jmp
xor
cmp
push
dec
dec
scas
pop
cmp
imul
and
fwait
scas
mov
mov
loope
add
fisttpl
outsb
das
imul
cltd
inc
mov
mov
hlt
or
adc
push
sub
daa
adc
mov
in
inc
dec
mov
xor
js
sahf
ss
jge
rolb
push
sub
int
cmpsl
nop
mov
shr
dec
dec
out
in
aam
mov
stc
dec
sbb
cmp
out
loop
shrl
and
icebp
inc
jp
gs
out
int3
test
or
mov
mov
mov
dec
mov
inc
inc
cmpsl
loopne
sti
xor
lods
aam
ret
hlt
jbe
sbb
and
cmp
jbe
gs
ret
adc
sub
push
gs
xor
mov
xchg
fs
pop
add
enter
clc
repnz
mov
test
mov
jno
lds
hlt
hlt
cmp
adc
loopne
cmpsl
add
mov
pop
cmp
divb
in
in
je
dec
push
jle
enter
mov
dec
pop
xor
repz
int3
inc
xchg
into
ficoms
jmp
int3
shrl
inc
cmp
test
call
push
test
dec
sbb
hlt
loop
jge
divb
push
xor
mov
ja
mov
dec
push
or
jb
push
aas
mov
sbb
jmp
cmpsb
mov
mov
nop
mov
cmp
add
leave
mov
popf
inc
popa
pop
xchg
cwtl
arpl
fldt
mov
imul
push
lcall
stc
nop
cs
dec
test
jg
mov
in
dec
test
lods
cltd
in
mov
dec
sbb
jmp
es
test
xorb
gs
jmp
stos
cmp
lahf
js
jo
mov
fsubrp
aaa
enter
or
pop
or
add
push
aaa
adcl
dec
mov
push
push
iret
pop
or
icebp
arpl
test
in
mov
or
outsb
push
shll
popf
mov
dec
je
aam
push
and
jmp
push
adcb
mov
xchg
dec
lret
and
mov
in
hlt
cmp
cmp
pushf
jecxz
xorb
das
lcall
cmp
mov
or
int3
cmp
inc
pop
negb
addr16
sbb
mov
cmpsb
jle
int3
inc
xor
pop
pusha
addr16
ja
sahf
pop
jbe
dec
pop
outsb
lret
fcmovnb
fs
aam
push
scas
mov
or
inc
push
cmc
dec
lock
imul
xchg
insl
adc
fistpl
jo
mov
adc
push
popf
mov
shll
test
push
inc
das
xor
add
pushf
xor
scas
dec
ss
je
push
cmp
pop
lock
lret
and
cmpsb
jle
inc
xlat
mov
xor
jge
dec
xchg
mov
mov
call
stos
inc
sbb
xor
jo
or
xor
mov
add
sbb
inc
jb
inc
push
or
xor
jne
or
and
mov
mov
mov
dec
sbb
iret
xor
lret
xlat
jnp
dec
xchg
xor
insl
cmpsb
cmpsb
jae
ret
dec
xor
enter
mov
das
pop
lea
and
cwtl
or
dec
test
movb
cmp
dec
stos
add
icebp
jg
gs
or
nop
push
cmpsb
cmp
pop
add
testl
adc
in
scas
mov
cmp
push
movsb
cmp
addr16
je
dec
sub
cmp
icebp
adc
xor
fcmovbe
mov
adc
movsb
sarb
and
fidivrs
int
dec
loopne
scas
adc
or
inc
leave
lods
dec
pmuludq
and
test
pop
cli
mov
xchg
test
mov
push
std
cmp
call
add
test
push
mov
jbe
fadds
mov
mov
les
cmp
jnp
lret
push
sbb
aaa
fxch
mov
lahf
in
pop
ret
add
dec
sub
cs
fs
mov
fidivl
popa
ds
cltd
addr16
scas
mov
mov
and
dec
and
sbb
int3
mov
in
xchg
cmp
and
jno
inc
sbb
xor
fsubs
jnp
rcr
xchg
cmp
rcr
mov
add
push
mov
pop
or
mov
mov
pop
xor
fsubrs
mov
jmp
out
movsl
xor
inc
flds
ret
out
pusha
fdiv
sbb
inc
push
int
jg
pop
aas
mov
mov
jecxz
push
cmp
cmp
jl
addr16
cmc
xor
cmp
inc
dec
sub
shrb
cltd
cld
lods
cwtl
or
inc
movsb
inc
pop
xchg
pop
outsb
pop
test
push
cli
xlat
or
jnp
mov
inc
lods
pop
imul
sbb
mov
filds
push
repnz
dec
xchg
push
adcb
mov
add
das
cltd
ljmp
call
push
xchg
in
xor
roll
inc
ficoms
fisttps
jnp
nop
pop
hlt
mov
sub
mov
lock
add
mov
xor
fstps
in
pop
neg
push
push
call
cmp
and
mov
popf
mov
mov
loope
ja
add
fwait
lret
insb
adc
push
jmp
pop
es
cmp
mov
clc
xor
js
xor
sub
js
sub
mov
dec
dec
mov
scas
xchg
and
push
sarb
xchg
js
push
rcr
dec
je
in
adc
mov
xchg
inc
jb
leave
inc
push
stos
fldz
mov
fildl
inc
xchg
push
icebp
jge
sub
mov
mov
pop
mov
ret
sub
cmp
and
int
fimuls
pushf
cmp
out
adc
or
push
leave
addr16
js
test
test
stos
pop
cmp
fisubrs
inc
ret
hlt
into
dec
and
loop
jmp
sbb
add
imul
call
adc
fwait
popf
mov
clc
cmp
pop
inc
test
pop
in
mov
mov
outsl
mov
mov
lcall
jae
xchg
and
lcall
mov
inc
xlat
stos
cli
dec
outsl
dec
mov
cld
pop
mov
hlt
push
iret
imul
sbbl
sbb
jnp
inc
pop
mov
nop
xchg
pop
dec
sub
or
xor
in
nop
jae
xchg
push
mov
das
ja
scas
clc
out
mov
mov
lods
dec
rol
out
and
in
daa
fmuls
mov
out
lods
rolb
cld
js
cmp
bnd
out
push
adc
and
mov
cmp
xlat
inc
dec
adc
int3
cmp
popa
outsl
fsubs
js
ret
shlb
or
pop
loop
dec
lock
push
dec
pop
popf
aas
lret
cmp
mov
int3
dec
lock
mov
ja
fnstenv
js,pt
push
insl
test
rorb
andb
xor
xchg
mov
pop
into
bound
bound
loop
mov
mov
pop
mov
or
adc
adc
mov
decl
popf
jns
addr16
xor
aam
add
nop
cmp
lahf
sub
mov
inc
pusha
add
clc
and
test
mov
pop
bound
cmp
and
xchg
jecxz
jae
jg
jge
dec
in
adc
jecxz
lahf
push
jo
je
dec
ja
mov
ret
adc
push
js
leave
popf
out
xlat
nop
js
sti
cld
xchg
mov
dec
xor
mov
sahf
pushf
inc
in
insb
mov
inc
mov
arpl
lahf
push
inc
std
or
jbe
cmp
mov
ljmp
fcmovnbe
and
xchg
shrb
movsl
aam
jno
andl
push
in
loope
in
inc
in
mov
pop
mov
cmpsb
jbe
in
fs
bnd
ror
je
jge
bound
or
ja
or
xchg
xchg
ret
ss
xchg
inc
call
sub
sub
mov
shll
aam
mov
hlt
jae
inc
std
es
loopne
mov
add
sarl
into
stos
adc
mov
and
sbb
je
mov
adc
mov
std
lahf
mov
fildll
fcompl
pop
fsubr
les
sub
xchg
jns
aas
mov
adc
xor
xchg
jbe
call
arpl
hlt
stc
ret
add
test
insb
jae
pop
iret
loopne
cmp
in
mov
push
mov
adc
mov
cs
sbb
divl
popf
fwait
js
aad
cmp
jae
xchg
cs
leave
mov
push
enter
es
jg
dec
lds
mov
push
push
push
mov
mov
ss
loope
icebp
int3
in
jmp
popf
ss
jg
sbb
daa
mov
adc
adc
mov
imul
jecxz
jl
shl
mov
mov
mov
loopne
xor
in
pop
jle
xor
push
sbb
cs
jg
movsl
mov
inc
repz
negl
dec
stos
push
mov
pop
cld
jnp
arpl
in
jge
adc
jo
and
inc
cs
ss
stc
repnz
loope
mov
jmp
push
cmpsb
jmp
ljmp
adc
add
icebp
jne
sub
in
mov
inc
test
mov
jnp
mov
xchg
xchg
xchg
psrld
shrb
pop
std
cmp
lds
push
and
pop
jbe
pop
adc
dec
dec
daa
or
fcmovne
sbb
adc
push
sub
pop
sbb
in
nop
dec
push
ror
aad
inc
loope
lahf
add
sub
inc
test
xchg
je
mov
fimull
mov
push
fildl
test
cmp
je
push
je
xor
or
popl
mov
loop
out
xchg
mov
sub
mov
sub
xchg
insb
sbb
es
nop
mov
adc
or
jge
loope
inc
or
xchg
push
and
imul
or
or
jp
ret
ret
mov
sub
inc
sbb
repz
fildl
xchg
ds
or
inc
dec
fcoms
xor
inc
ret
push
xlat
dec
jge
add
movsb
nop
sbb
xor
jb
cld
clc
daa
inc
jp
dec
loope
outsb
add
inc
fs
cmpsl
pop
mov
js
jge
into
xor
pop
in
or
mov
pop
or
mov
sarb
lcall
addr16
fs
push
push
scas
iret
add
shrb
sbb
out
jg
cmp
pop
shll
pop
mov
call
lock
xor
adc
dec
and
lea
mov
push
cwtl
sub
insb
adc
gs
jle
jle
cmpl
pop
push
addl
mov
pop
mov
out
movaps
gs
pushf
cmp
cmc
mov
sbb
lahf
loope
ljmp
or
data16
jnp
int3
mov
jmp
daa
lahf
aad
shlb
xorb
popa
div
mov
or
mov
gs
and
or
ljmp
leave
cmpsb
mov
aas
pop
es
xor
roll
mov
push
subl
and
mov
repnz
xchg
cmp
loopne
adc
sbb
sbb
std
mov
pop
sti
xlat
mov
clc
xor
mov
xchg
adc
fildl
jbe
add
lock
aam
nop
jp
sbb
imul
and
mov
cwtl
sbb
cld
inc
dec
scas
mov
add
in
pop
mov
adc
push
cmp
gs
in
mov
lahf
loop
test
stc
inc
adc
popf
ds
xchg
repz
and
out
xchg
sbb
jb
lret
loope
hlt
notb
stc
pop
add
or
or
inc
xor
js
sub
test
jmp
std
std
movl
mov
push
push
xor
aaa
dec
sub
jne
jo
cmp
loopne
and
cltd
xor
add
sbb
shlb
loop
or
sbb
pusha
lcall
xchg
dec
dec
inc
or
sahf
lret
out
push
daa
sahf
hlt
mov
dec
or
adc
pop
in
in
jmp
enter
lret
arpl
sub
cmp
mov
lods
mov
lock
std
popf
mov
test
shl
pop
lahf
inc
push
sahf
sub
jg
push
inc
in
push
ret
jae
push
aas
inc
inc
in
mov
mov
jns
aaa
push
add
mov
xchg
std
jbe
in
push
divl
dec
cs
sub
jge
mov
out
je
mov
call
xchg
call
test
mov
rclb
mov
imul
inc
jb
cmpsb
call
bnd
push
outsl
into
fxch
rolb
lds
call
cmp
add
cs
mov
dec
fsubrs
pop
push
inc
aam
fcmove
sub
push
rolb
pushf
cmp
jge
mov
les
dec
push
lahf
add
jecxz
xchg
fsubrl
xor
fwait
sub
addr16
lret
lea
popa
iret
and
iret
fstpl
fsts
sub
add
push
rcrb
insl
pop
imul
sub
sar
jmp
lock
xchg
inc
mov
cmp
jae
push
jno
lods
mov
push
dec
push
hlt
and
xchg
cmpsb
sub
les
iret
imulb
push
push
outsl
mov
ret
sbb
dec
repz
xchg
fnstenv
push
fucomip
mov
push
pop
imul
dec
cmp
push
imul
jno
jae
mov
dec
ficompl
jne
sub
aas
dec
daa
jns
outsb
adc
jne
icebp
fstps
sub
dec
dec
leave
xor
dec
cmp
mov
loopne
dec
mov
sahf
adc
in
loope
es
insl
mov
sbb
stos
cmp
les
jae
sub
jo
outsb
mov
pop
je
cmpb
sahf
std
xchg
fmull
mov
mov
cmp
xchg
mov
pop
popf
mov
sub
xor
jnp
stc
pusha
add
xchg
jg
cmc
loopne
jmp
push
push
cmp
cmp
sti
fistpl
movsb
pop
dec
gs
adc
movsb
add
out
cmp
dec
sub
jb
fistpl
notb
call
push
and
test
mov
psrad
std
push
out
loop
push
hlt
fcompl
cmp
cmp
popa
cmpsl
cwtl
in
cmp
mov
loope
mov
pop
inc
inc
or
les
xor
ret
rorl
out
hlt
cmp
add
xor
and
jmp
push
dec
int3
jp
out
mov
js
rclb
imul
push
xchg
pop
loope
push
cs
jle
sbb
lods
xchg
mov
inc
dec
gs
jge
sub
jmp
mov
mov
push
jbe
push
ds
mov
mov
fnstcw
es
mov
mov
stos
aas
mov
jmp
mov
cs
pop
sub
andb
and
jmp
test
and
fs
add
pop
add
cmp
inc
dec
data16
sahf
aam
mov
xchg
je
mov
add
xchg
mov
ret
mov
cld
sub
jo
aas
xorl
testb
cs
dec
data16
hlt
or
cs
jp
repnz
scas
jl
imulb
ret
rorb
fists
repz
shrl
jl
cmp
mov
pop
and
adc
fwait
iret
scas
movb
push
loope
inc
add
pushf
pusha
cmp
add
sbb
inc
rcll
inc
jecxz
xor
mov
in
add
int3
dec
call
mov
adc
stc
cs
mov
mov
hlt
loop
xchg
push
jb
lea
sub
or
mov
rorl
xchg
jae
mov
lods
mov
xchg
data16
call
dec
or
jmp
nop
jp
insb
jnp
jg
ja
and
add
pop
popa
movsl
inc
bound
mov
inc
outsl
sbb
or
repnz
push
hlt
addr16
addr16
inc
xchg
mov
mov
mov
cmp
fdivrs
inc
or
ss
mov
cmp
rcl
ficomps
imul
sub
rclb
rorl
xchg
and
dec
mov
sbb
lods
shrb
push
repz
imul
bnd
dec
and
int3
pop
imul
cmpl
cmp
dec
loopne
mov
es
pusha
pop
cmp
sbb
mov
jle
dec
lea
adc
fwait
xchg
int
cmc
imul
idivb
xor
mov
and
out
mov
andl
pop
cmc
sub
xchg
mov
sub
dec
rol
cld
sbb
std
xchg
fistpll
fwait
pop
mov
push
loopne
movsb
mov
fidivrs
call
fisubrs
popf
pop
repnz
pop
icebp
shlb
mov
mov
cmpsb
jmp
lods
adc
pop
add
adc
xlat
lret
scas
fiaddl
leave
mov
dec
jg
in
pop
jno
add
maxps
addr16
inc
xor
and
sub
andb
push
sbbb
xchg
jl
pop
popf
lds
das
push
lret
imulb
xchg
out
sarl
rclb
insb
in
inc
dec
or
lods
dec
sbb
loope
mov
sub
push
pop
push
jnp
jmp
orl
subb
out
mov
rclb
or
lret
addr16
lds
xor
inc
push
enter
and
and
mov
rcrl
xchg
mov
aad
sub
mov
cli
addr16
orl
and
shlb
pop
icebp
push
or
or
rcll
shll
or
aad
inc
xchg
lds
movsb
fildll
pop
out
or
aas
mov
jb
js
lret
rcrb
daa
adc
aas
xor
xchg
dec
jg
pop
es
add
hlt
fsubrs
pop
movsb
out
rol
dec
xor
cs
lock
mov
add
jns
xor
dec
ret
jmp
push
loope
lock
fisubrl
test
add
outsb
sbbb
push
cmp
jp
cmp
mov
adc
out
cmpsb
jecxz
loop
inc
std
fs
mov
sbb
adc
inc
test
loope
push
push
fcmovne
leave
pop
dec
ret
mov
adc
push
pop
rclb
push
shlb
mov
std
outsl
mov
out
pop
and
fs
pushf
sbb
dec
outsb
imul
or
dec
lods
leave
stos
sbb
sbb
jo
mov
shrl
daa
daa
popf
aaa
lea
lret
jl
xchg
js
mov
lret
cmc
mov
push
xchg
sbb
push
adc
dec
ret
sbb
rolb
inc
or
in
aas
pop
sahf
jb
and
scas
sub
loope
push
push
xlat
or
mov
mov
ret
inc
adc
pusha
xor
pop
mov
xor
cmpsb
cmp
test
loope
test
mov
ljmp
cmp
pop
xchg
das
dec
push
scas
imul
adc
cmpsb
fnstenv
dec
and
mov
imul
int
add
mov
test
jmp
outsb
jl
sub
inc
mov
and
xchg
lahf
lcall
mov
xchg
sub
mov
cli
data16
js
inc
hlt
scas
hlt
jge
push
jl
mov
out
imul
int
mov
xchg
jo
lahf
lds
inc
cli
pushf
add
das
scas
aam
fxch
push
xor
sub
adc
adc
int
cmp
jno
mov
pop
fxch
test
or
jae
sub
xor
popa
fisubs
xchg
pop
cmpsl
decb
aas
push
fucomp
popf
push
sbb
jo
xor
adc
sarl
in
js
fisubs
ret
sub
shr
gs
outsb
imul
insl
fptan
xchg
movsb
fwait
sub
cmp
adc
sbb
jl
cld
jo
subl
mov
in
movsl
popf
sub
mov
push
leave
fistpll
lods
scas
std
jmp
and
inc
in
lret
ja
imul
dec
pusha
ret
ret
mov
imul
inc
test
mov
aas
mov
inc
mov
sub
jo
cmp
test
cmp
mov
idiv
cmp
mov
fdivl
push
fstl
aad
aaa
mov
fbld
mov
cltd
inc
fsubrs
sub
fwait
ror
adc
ljmp
jl
addr16
lcall
jns
cwtl
dec
clc
call
cmp
push
xor
adc
mov
xchg
shll
cmc
rcrl
aam
or
mov
mov
shll
stos
cltd
call
mov
add
leave
shlb
xor
xchg
xchg
jno
adc
mov
xor
mov
xorb
fadd
or
jmp
push
pop
adc
das
xchg
nop
fwait
pop
test
pop
adc
je
mov
push
mov
nop
dec
pop
push
subb
and
fsubrs
push
mov
inc
pop
or
sti
notb
mov
iret
lret
mov
inc
insb
nop
xor
xor
dec
cmp
movsl
sarb
outsb
bound
and
addb
cs
inc
dec
popf
push
scas
mov
jecxz
cli
jno
mov
aam
loop
jae
cmp
pop
insl
mov
add
bound
or
mov
fsubrs
mov
out
mov
rcrl
pop
call
xor
jl
addl
aam
fidivrl
jge
push
xor
mov
pop
test
pop
das
and
mov
inc
test
add
es
push
repz
mov
push
test
pop
mov
imulb
shlb
out
rorb
pop
jmp
xchg
dec
pop
or
stos
test
jne
or
jle
out
int3
pop
pop
jno
mov
cmc
adc
mov
mov
pop
push
xor
lods
lods
mov
mov
sub
push
dec
in
push
dec
lock
xor
insb
and
ret
jbe
and
and
add
imul
xchg
or
pop
cmp
imul
in
test
inc
stos
rclb
cmp
cmpsb
es
or
clc
out
adc
mov
or
rclb
test
push
add
std
insb
stc
xor
nop
sbb
mov
outsb
in
sub
push
std
loope
add
push
inc
mov
in
in
lcall
loop
loop
xchg
cmp
ret
xchg
mov
adc
add
xor
js
and
into
cmovae
and
loop
movsl
and
shrb
jae
out
and
fists
mov
xor
cmp
cmpsb
pop
mov
stos
popf
mov
push
xor
or
xchg
out
xor
dec
mov
inc
mov
aad
mov
mov
rorb
and
aam
mov
mov
orl
enter
push
dec
andb
insl
jnp
daa
xchg
gs
cmpb
lahf
aam
stos
sbb
fstpt
push
inc
test
add
xchg
int3
mov
xchg
sub
dec
xchg
cwtl
or
jg
dec
or
fisubrl
stc
cltd
or
sub
fs
xor
ljmp
aad
pop
aas
adc
movsl
jmp
or
jns
inc
xchg
shl
mov
lods
cwtl
push
ss
gs
mov
dec
mov
nop
repz
ret
mov
outsl
in
out
cmp
sub
jne
daa
insb
fwait
mov
cmpsb
adc
mov
dec
and
repnz
push
inc
inc
stc
jp
add
popa
jmp
lock
aad
inc
std
popa
mov
push
xchg
adc
shll
inc
inc
lret
mov
gs
push
or
outsb
dec
mov
shlb
xchg
stos
mov
xchg
adc
ret
mov
jnp
incb
mov
push
ss
idiv
cs
clc
adc
cmp
add
mov
push
int3
aad
imul
imul
cltd
shlb
leave
iret
jmp
int
add
pop
mov
cmpsb
and
out
sti
divps
pop
xchg
and
add
push
fcompl
hlt
outsb
mov
push
mov
lods
pop
cltd
xor
ret
add
lea
push
jbe
or
lods
xlat
lcall
mov
and
inc
mov
int
cmpsb
push
cmp
int
mov
fiadds
in
iret
pusha
cs
std
push
movsl
in
xchg
pop
pop
sub
mov
out
popa
mov
sub
inc
add
ljmp
pop
sbb
scas
stos
xchg
cmp
jp
int
fnstcw
aas
mov
clc
inc
out
or
aam
adc
mov
das
fcomps
loope
xchg
pop
sub
lret
xchg
shrb
adc
xchg
sub
cmpsb
pop
pop
nop
repnz
enter
mov
add
cli
bound
fs
out
pusha
lods
and
cmpsl
xchg
jmp
outsl
or
stc
xchg
xchg
loopne
ds
mov
jno
fistl
jmp
mov
in
mov
mov
dec
sbb
push
pop
inc
sbb
enter
jl,pt
cmp
leave
andl
jl
rcl
push
flds
rorb
les
inc
cli
mov
dec
jecxz
mov
std
push
hlt
push
imul
mov
and
add
sub
cmp
and
shrl
stc
push
adcb
mov
cltd
pop
sbb
pushf
cltd
loope
adc
push
add
shll
cltd
adc
mov
add
test
stos
cmp
adc
add
enter
loop
js
adc
jmp
and
sarl
stos
xorl
xchg
lcall
popa
clts
jb
pop
jp
sbb
inc
push
imul
fs
test
insl
mov
push
push
or
int
xchg
flds
addr16
sbb
adc
push
or
xchg
daa
jae
mov
in
mov
into
addr16
pop
push
sar
sbb
add
dec
cmp
jno
cmpsb
ret
jae
xchg
lcall
inc
sbb
vorps
push
subl
or
loop
push
pop
les
loopne
pop
cmpsb
ret
inc
mov
dec
into
push
movsb
jae
test
inc
fsubl
inc
shr
mov
mov
fcmovnb
mov
xor
fsubl
cwtl
lods
cmpsl
int
sbb
fistl
ljmp
jb
push
sub
aas
sbb
cmp
xchg
sub
mov
iret
cli
imul
sar
push
imul
iret
cltd
mov
cmp
and
cmpl
or
and
fstpt
and
xchg
cwtl
adc
xchg
pop
fildl
daa
push
xor
jge
sub
das
movsb
imul
fwait
jmp
or
jns
mov
mov
cmp
dec
or
je
dec
in
mov
mov
mov
insl
std
es
inc
js
dec
outsl
cmc
jg
jbe
and
hlt
cmp
add
pop
jmp
or
in
gs
and
jp
mov
cmp
add
dec
pop
sub
sbb
jl
mov
cwtl
cwtl
imul
test
loopne
adc
or
int
outsl
push
sahf
or
cmpsb
test
fistps
jne
or
inc
mov
arpl
in
sub
lcall
stos
push
movsb
jg
and
push
xchg
js
icebp
or
cltd
call
inc
mov
das
stc
data16
out
shll
out
aas
testl
push
push
mov
in
rcl
push
dec
cmc
out
mov
xor
pushaw
push
pop
test
mov
sub
vpsadbw
sub
adc
cltd
popa
daa
or
cmp
pop
cmp
fs
mov
mulb
and
rclb
sbb
repz
stos
pop
cmp
shll
insb
push
sar
fbstp
mull
bound
pop
mov
js
gs
dec
pop
push
jp
repnz
mov
cmp
fwait
ret
adcl
gs
mov
jg
jb
nop
or
sti
lods
insb
loopne
lea
cmpsb
adc
sti
adc
push
in
pop
popf
mov
add
sbb
outsl
outsl
xchg
sarb
pop
jl
and
in
jbe
popa
test
mov
xchg
dec
xchg
fcmovne
aam
cmpsb
jmp
jg
adc
or
mov
inc
rcll
jnp
adc
sub
push
stos
jle
mov
add
adc
fptan
push
push
jp
out
outsb
jae
jne
mov
jns
jo
mov
loop
outsb
leave
in
push
sar
xchg
fsubr
fwait
cld
nop
pusha
imul
lret
shll
rolb
jo
jmp
sub
mov
arpl
dec
loopne
arpl
bound
jge
jo
dec
out
push
adc
xlat
mov
aas
push
faddl
icebp
cltd
sti
popf
push
das
dec
jno
pop
movsb
cmp
or
pop
testb
inc
inc
lods
cwtl
xor
add
sub
leave
lds
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
hlt
fmull
adc
addl
dec
adcl
rolb
sub
push
int3
ret
in
daa
pop
aam
push
inc
inc
shll
add
xor
xor
mov
int
arpl
lods
rcrb
lods
sti
std
cmpsb
cmp
pop
sti
negl
popf
sbb
sbbb
iret
shll
dec
in
enter
fdivl
add
mov
cmpsb
sbbl
mov
xchg
ss
xchg
sub
cs
les
mov
lods
dec
cld
add
iret
ret
repnz
lds
xchg
jl
test
add
int
mov
or
stos
pop
cmp
inc
mov
mov
mov
mov
ficompl
pop
popa
mov
cli
mov
inc
add
mov
iret
mov
and
je
dec
out
mov
xchg
push
rolb
aas
push
jp
stos
fcmovnu
lcall
push
call
icebp
fidivrl
cs
call
sbb
dec
push
cltd
push
call
pop
lahf
dec
rcrb
mov
push
scas
xlat
out
aaa
out
out
rcl
dec
or
aad
cmp
test
push
jp
xchg
testb
loope
addr16
and
daa
adc
sbb
insb
sub
idivl
jae
leave
jl
cmp
in
js
out
rcrb
into
xchg
lock
pusha
mov
mov
int3
cmpl
aam
das
push
xlat
jle
lcall
mov
mov
in
fistl
test
mov
fnstcw
mov
cld
sbb
cmp
lods
ja
icebp
push
jl
bound
mov
xor
jle
jo
adc
sub
lcall
dec
push
rol
pop
scas
mov
cltd
clc
jle
mov
xchg
inc
arpl
sti
insl
mov
push
pop
loop
and
lds
pop
aas
arpl
jns
push
mov
push
pop
filds
sbb
stos
and
fisttpll
scas
clc
scas
mov
popf
mov
mov
adc
mov
or
jmp
adc
xor
movsl
rolw
push
jmp
mov
and
mov
pop
cmp
sarl
sbb
pop
pop
stos
or
rclb
pop
sbb
mov
xor
pop
ljmp
sarb
std
ljmp
jmp
jae
jnp
inc
in
push
push
inc
test
rolb
pop
jl
loopne
pop
ss
int
pop
push
ror
rclb
push
loopne
pop
adc
outsb
adc
pop
sub
in
mov
mov
jecxz
fs
jae
int
pop
sub
pop
cmpsb
xor
fs
bswap
test
sbb
popa
or
fists
jno
cmp
test
mov
loopne
jb
jge
and
icebp
gs
shll
xchg
or
push
push
das
dec
sub
cmp
or
mov
sbb
inc
lods
sbb
in
cmp
inc
jl
out
arpl
cmp
xlat
push
arpl
imul
xor
mov
fistl
push
fiaddl
shrb
sub
hlt
add
push
inc
aam
sbb
push
sahf
sahf
add
push
insb
sbb
cmp
push
pop
add
adc
or
scas
sahf
mov
test
shlb
or
push
scas
pop
push
push
pop
jl
js
fdivl
xchg
mov
lret
orl
adc
and
pop
or
pop
mov
or
incl
data16
mov
das
repz
aas
cltd
push
out
addb
loopne
mov
popa
lock
sahf
jbe
pop
push
stos
cmp
es
pop
pop
data16
cmp
in
cwtl
xchg
negb
xchg
cmpsl
inc
mov
out
data16
ret
inc
cmpb
sar
in
push
push
mov
and
xor
stc
pop
xorb
pop
cmpsb
add
mov
push
subl
dec
xlat
dec
xchg
cmp
sti
stos
fs
ja
leave
ret
pop
pop
daa
inc
ds
mov
push
and
testb
cltd
fadd
or
rol
push
jo
lock
push
jl
and
lcall
test
aaa
push
inc
inc
insb
xchg
adc
imul
dec
adc
ficomps
loopne
push
test
adc
js
push
mov
jnp
aas
mov
jne
jle
mov
in
mov
movsb
jo
lcall
fnstcw
stos
or
jnp
fadds
push
popa
outsl
xor
jb
or
dec
bound
popf
xchg
inc
inc
pop
adc
repnz
movsb
adc
mov
and
and
xchg
add
and
or
mov
insl
cs
ficoml
sub
fwait
sbb
or
jo,pn
rolb
ja
jne
jbe
movl
call
fs
xlat
mov
or
outsl
outsl
shlb
or
es
loope
in
xor
mov
sbb
and
xchg
out
mov
iret
adc
jp
bound
iret
out
adc
movsl
pop
cmp
cmpl
jecxz
int
mov
ret
popf
xchg
push
lods
pop
mov
sbb
insb
xchg
out
push
sarl
mov
rcll
jno
jecxz
daa
push
fists
or
cli
jo
shlb
movsb
cmc
pop
jns
dec
mov
cmp
stc
xchg
mov
das
das
test
xor
ja
ljmp
sub
popa
adcl
lret
ds
push
pop
shrl
sbb
outsl
cld
cmc
jne
push
mov
dec
or
lcall
pop
mov
jno
jne
mov
sub
or
jle
test
insl
add
pop
dec
mov
hlt
mov
mov
ss
sbb
rorl
and
testl
pop
lods
inc
sbb
arpl
cmpl
cmpb
jns
fisubs
test
stos
jb
test
mov
rcr
ficompl
xchg
cmpsl
add
mov
push
jno
lcall
jmp
push
cmc
jns
dec
mov
mov
push
xor
sbbb
jo
cs
lret
add
fcomps
jno
adc
push
xchg
lods
jne
ret
insl
jae
or
dec
idivb
xor
movsl
adc
inc
dec
dec
lods
mov
cmp
aam
push
mov
push
mov
sbb
out
int3
xchg
pop
sti
mov
push
int3
xor
popa
int3
pop
xorl
mov
lds
arpl
mov
rcll
insl
jg
aam
aaa
mov
jmp
sbb
mov
aas
cltd
rolb
sub
cmp
nop
mov
mov
add
inc
push
or
mov
lods
sub
shlb
fs
insl
mov
movsl
fidivrl
inc
mov
out
pop
and
pop
push
lea
xchg
dec
and
pop
je
pop
js
out
mov
cmp
add
pop
xchg
jmp
sub
pop
loopne
mov
inc
lret
push
dec
lods
push
cmp
xchg
xchg
lret
movsb
pop
imul
gs
jo
lcall
pop
test
ret
test
jnp
adc
dec
push
outsl
xor
cmc
push
inc
jp
daa
fisubl
rcl
in
xorb
hlt
mov
xchg
imul
out
jnp
out
je
icebp
adc
and
out
xlat
stos
repz
xchg
jns
xor
xchg
sub
mov
imul
mov
shlb
filds
jg
adcb
dec
pop
enter
orb
or
lret
lods
and
and
mov
mov
mov
jnp
mov
sbb
out
add
lods
enter
lds
test
ds
adc
sbb
pushf
dec
inc
insl
add
xor
aad
sbb
inc
icebp
sbb
xchg
jno
cmp
out
and
iret
xor
mov
pop
jge
push
lods
and
push
ret
daa
popa
stos
adc
dec
jmp
outsb
sarb
mov
js
sub
ja
dec
mov
pop
fucomip
shrl
sbb
sahf
mov
sbb
cmp
stos
das
push
movsb
mov
iret
adc
jp
cwtl
push
cmpb
mov
int3
mov
iret
fistpl
loop
adc
cld
push
enter
push
scas
mov
lock
idivb
subl
shll
dec
and
jnp
jnp
inc
and
fsubrs
aaa
pop
add
out
or
mov
fcom
and
mov
mov
mov
cltd
push
sarl
movsb
sub
jnp
ss
inc
mov
fucomp
pusha
movsl
mov
xchg
pusha
cmp
gs
jno
adc
je
xor
mov
xchg
daa
cmp
mov
clc
cltd
sub
clc
pop
add
sbb
xor
stos
rorl
lods
dec
dec
scas
mov
pop
or
mov
push
stc
lea
loop
and
mov
rorb
scas
int3
jmp
and
mov
icebp
fbld
mov
fwait
nop
jecxz
pop
cmp
and
pop
push
cld
pop
jns
movsb
mov
dec
repz
cwtl
cmp
mov
shlb
xor
in
push
decl
pop
sbb
cmp
sub
add
gs
scas
mov
iret
jp
push
mov
push
mov
mov
dec
xchg
push
outsl
push
mov
aam
mov
xchg
inc
aas
and
push
arpl
or
ret
dec
cmp
mov
call
or
cld
and
pushf
push
mov
je
cmp
mov
repz
scas
scas
add
inc
and
inc
ror
mov
mov
fwait
aas
icebp
mov
pop
adc
pop
scas
add
aaa
test
ljmp
sbb
adc
mov
jo
std
movsl
shlb
scas
adc
cli
pusha
push
push
mov
es
dec
or
sbb
mov
adc
or
in
call
fidivs
mov
push
fildl
flds
bound
bound
dec
test
iret
xchg
int
dec
add
adc
aaa
lret
push
shrb
push
sbb
xor
addr16
test
fs
xor
and
lret
inc
push
lahf
and
xchg
daa
cmp
push
dec
test
imul
shlb
xor
lods
adc
cmc
xchg
mov
mov
out
lods
out
push
xor
out
dec
pop
mov
scas
imul
es
addb
test
sub
in
inc
or
bound
mov
jecxz
mov
popf
mov
outsl
sbb
fs
enter
or
push
jmp
cmp
sarl
jecxz
outsb
sbb
mov
inc
out
iret
mov
or
lcall
xor
mov
mulb
repz
icebp
cmp
mov
inc
sub
in
jo
mov
pop
rorl
push
mov
or
xchg
fldenv
jle
mov
mov
mov
rcl
cltd
dec
call
cmp
aaa
addr16
mov
imul
jmp
fnstenv
sub
cmpsl
jmp
and
leave
xchg
xchg
adc
ja
in
mov
dec
fwait
cld
scas
test
xor
inc
test
or
pop
fmul
cmp
ds
mov
ljmp
cmpsb
xchg
popf
adc
ljmp
xchg
ljmp
inc
test
ret
out
sub
inc
sbb
add
roll
inc
cmp
ljmp
dec
cmp
mov
aam
add
mov
repz
dec
xlat
jmp
sbb
incb
cmpsb
stos
jmp
clc
mov
rcl
dec
xchg
sahf
fisubrl
sarb
in
nopl
push
jg
add
outsl
xchg
adc
lcall
pop
nop
cli
fiaddl
xor
sbb
lods
pop
lcall
mov
push
xlat
jp
out
lods
popa
jecxz
dec
jo
lea
and
test
test
or
xor
or
cmp
test
pop
ja
add
jl
mov
pushl
int3
int3
jecxz
mov
jp
mov
pop
and
lcall
faddl
push
lret
cmp
adcl
rcrl
pop
or
iret
add
inc
lds
mov
aad
adc
fisubrs
xor
subb
cmpsb
aad
mov
jne
jge
ret
scas
push
dec
in
pop
mov
xor
dec
sbb
push
xor
movsl
xor
cmc
sbb
es
sbb
cltd
fildll
inc
push
cmp
inc
in
sbb
jo
mov
jmp
sarl
lds
andb
or
popf
pushf
inc
add
rorb
mov
add
lret
icebp
push
cmp
or
test
lret
xor
insl
aad
sahf
add
jp
cmp
outsl
pop
mov
jl
mov
and
dec
loopne
jmp
sbb
lahf
mov
mov
pop
orb
and
mov
xchg
hlt
sbb
mov
jb
mov
dec
inc
loopne
or
lods
ljmp
and
ja
or
lea
adc
mov
fcompl
in
adc
int3
cmpsb
push
pop
in
movsb
push
stos
xchg
mov
sti
lock
ja
push
mov
loopne
dec
mov
cmp
xchg
or
std
mov
daa
cmp
ss
add
xchg
cltd
inc
movsl
xor
cmc
xchg
adc
pop
cmpsb
pop
das
cmp
ret
adc
scas
lods
mov
mov
pusha
mov
or
rcrb
dec
iret
xchg
pusha
xor
adc
push
add
clc
cmp
jge
push
bound
jl
jecxz
out
push
mov
call
adc
push
sahf
cmc
icebp
in
negl
arpl
jns
push
stos
push
sti
cmp
or
addr16
mov
in
jp
popf
fisttpll
mov
rorb
int
push
cmp
adc
div
xchg
mov
inc
push
pop
addb
pop
add
sub
jp
leave
sarb
movsb
pop
push
fistl
fldenv
push
sub
xor
and
out
shl
filds
and
cmp
and
add
cmp
pusha
pop
aad
repnz
dec
and
mov
in
cmpsl
sbb
divps
aas
push
or
dec
enter
insl
and
sub
xchg
sbb
fsubrs
incl
fbstp
adc
leave
ja
jb
add
xor
gs
test
add
mov
dec
test
in
cmp
dec
imul
mov
sbb
lods
sbb
repz
sti
cmc
inc
mov
jb
xorl
imul
test
ljmp
inc
xor
mov
lahf
cltd
imul
scas
xor
sbb
inc
xorl
adc
ljmp
sbb
int3
enter
sub
mov
fiadds
add
call
inc
cmp
jg
mov
sub
jnp
pop
and
mov
pop
adc
mov
push
push
adc
and
xchg
dec
xchg
aaa
and
mov
mov
cmp
lods
out
cmp
movb
jle
pop
cmp
fidivrl
pusha
fsubr
test
out
dec
inc
enter
cwtl
mov
je
and
mov
jle
lcall
adc
xchg
gs
test
dec
insl
inc
xor
lcall
rorl
aad
jbe
and
or
lods
icebp
dec
arpl
loop
inc
cli
out
mov
fidivl
cld
je
bound
jmp
iret
lods
icebp
enter
pop
outsl
hlt
les
xchg
mov
stos
jb
int3
fwait
gs
imul
popa
dec
ds
push
cmp
jmp
xor
dec
inc
pop
push
push
test
out
adc
sahf
std
jo
mov
mov
mov
es
sub
aad
cmp
clc
sbb
iret
pop
test
lds
jge
pop
xchg
mov
in
dec
add
mov
stos
rcll
jg
int3
jne
popa
sahf
je
push
mov
sahf
sub
repnz
jnp
lock
xchg
inc
mov
push
nop
addr16
pop
jmp
pop
jnp
dec
push
xorb
ljmp
push
inc
or
aad
lcall
rolb
and
int
mov
mov
xchg
std
dec
and
call
mov
loop
aas
je
and
shlb
cmc
pop
lcall
orl
xchg
test
pop
lahf
aas
fimull
clc
add
mov
sub
push
xchg
jbe
lret
jg
lock
push
fsts
cld
or
lods
popa
push
out
cmpb
xchg
xor
ret
shll
pop
and
mov
mov
mov
lret
sub
pop
lods
pop
sbb
ror
bound
loop
cmc
lods
dec
sar
sub
stos
inc
or
loopne
out
sub
ffreep
test
scas
pop
mov
jle
pop
roll
enter
popa
dec
pop
mov
addb
and
in
mov
xchg
mov
inc
mov
out
sub
and
mov
dec
and
pop
sub
xchg
cmp
adc
repz
cmp
xorb
push
nop
out
sahf
adc
adc
in
adc
mov
int3
leave
pop
ret
rcrb
sbb
mov
loope
fadd
std
pop
add
jo
and
xchg
sbb
ret
mov
ds
adc
push
adcl
stos
lds
dec
enter
out
and
xchg
sbb
int3
or
xchg
addr16
fldl
imul
cmp
fiadds
push
andl
stos
js
out
jo
dec
mov
adc
push
insb
loope
es
movsl
into
jne
subb
loope
push
xlat
shl
push
or
orl
mov
lods
cmp
les
fldl
adc
or
xchg
xor
mov
lret
addl
cmp
sahf
stc
nop
sub
idivl
daa
sahf
mov
lods
les
test
add
sbb
mov
sbb
inc
push
jne
stc
mov
lret
add
vcvttps2dq
jns
fmuls
dec
xchg
cmpsb
lea
push
and
scas
in
and
xor
sub
fcomp
cmp
and
fisttps
push
xchg
dec
mov
mov
xchg
inc
sub
out
push
xchg
lcall
ds
xchg
sti
jge
ljmp
dec
dec
lods
jmp
cmp
pushf
dec
lahf
mov
or
shrb
ds
and
add
dec
iret
adc
scas
dec
adc
js
cmp
subl
lret
inc
mov
shlb
les
int3
aas
or
push
insl
cmpsl
shlb
mov
lods
lock
cwtl
dec
lock
repz
repz
jae
in
test
and
jecxz
mov
xor
cs
add
enter
gs
add
fsubl
push
out
and
shrb
sarb
xor
loopne
adc
fs
roll
mov
cmpsl
lcall
pop
dec
fucomp
negb
bound
adc
cmpsb
out
jp
stos
pop
jmp
pop
fmul
mov
sbb
decl
and
jae
mov
test
dec
stc
dec
mov
sbb
mov
xchg
insl
mov
frstor
push
cltd
mov
popa
inc
adc
xchg
flds
xchg
jnp
or
inc
and
mov
int3
sub
xchg
sbb
push
cmp
dec
lods
repnz
lods
dec
in
push
in
mov
cmp
push
js
xchg
stos
repnz
enter
xor
mov
leave
mov
inc
inc
mov
xor
and
xchg
popa
ret
sub
scas
iret
sbb
mov
or
arpl
jp
cmp
mov
push
push
cmpsb
fdivs
into
pop
pushf
stos
nop
movsb
add
push
push
out
mov
popf
int3
test
dec
fadds
dec
push
mov
std
loopne
fldl2e
lods
push
xchg
int
dec
ficompl
test
pop
xor
xor
adc
imul
jg
cmpsb
and
popa
jmp
push
outsb
test
repz
and
fcomps
xor
sar
mov
ret
adc
pushf
jo
loop
sub
dec
pshufw
outsl
add
mov
out
and
mov
test
lcall
xor
icebp
ja
cmpl
xorb
add
mov
push
adc
icebp
inc
out
xlat
push
dec
addr16
daa
add
outsb
daa
push
std
pop
push
add
dec
and
jo
sbb
sbb
xchg
and
mull
fldenv
xor
stos
dec
testl
imul
mov
and
dec
pop
in
insl
cmp
inc
leave
inc
loopne
leave
fidivrl
inc
mov
rolb
orb
cmc
pop
insb
pop
lcall
inc
or
mov
mov
ret
jnp
rcr
fwait
adc
fists
xchg
xor
adc
and
popf
cli
mov
push
sbb
or
sub
cs
sub
sub
dec
gs
mov
ljmp
into
jnp
rcrl
icebp
jo
and
jecxz
cld
sub
mov
cmp
adc
jmp
sub
pop
test
fwait
repz
adc
sbb
cmpsl
cmpsl
push
adc
gs
outsb
push
aas
add
sub
popa
sbb
fimull
mov
popf
xchg
jg
int
cli
std
push
inc
xor
mov
jb
push
jp
push
dec
int
mov
push
push
cmp
mov
std
sub
adc
push
adc
pushf
sbb
lds
inc
cmp
push
mov
call
rcr
inc
testb
and
imul
popf
jge
in
scas
cmp
ret
outsb
jb
rcll
pop
push
jno
cmp
shl
jb
movsl
pushf
cmp
push
xlat
jno
inc
xor
lret
sub
mov
or
lock
add
jl
loop
push
push
pop
or
mov
cli
dec
jo
or
fsubp
mov
jo
loop
push
in
cmpsl
inc
xor
sti
push
roll
sbb
lock
scas
lret
mov
jl
pop
cmp
sub
mov
arpl
lds
push
cmovp
push
fsubs
or
mov
aas
fdivs
inc
push
outsb
dec
decb
dec
outsb
sbb
shrl
push
jg
fs
mov
or
pushl
jno
in
pop
dec
push
mov
xor
push
jmp
jbe
fists
push
or
jo
and
mov
or
fadds
lds
fidivrl
inc
aas
cmp
lds
or
out
or
adc
inc
dec
in
or
sbb
je
fucomp
and
icebp
jl
movb
and
mov
cmp
dec
enter
mov
cwtl
push
mov
xor
negb
aad
pop
sub
cmpsb
jge
pop
adc
and
and
push
shrb
das
das
cmpsb
xchg
stc
push
shll
mov
bound
xchg
imul
aas
daa
jne
ret
je
sub
push
inc
gs
push
jno
addl
movsb
in
paddsb
out
pop
cli
xchg
xor
jo
push
repz
int3
fstps
iret
jae
lret
dec
jecxz
iret
mov
push
xchg
inc
and
dec
call
sbb
jmp
inc
pop
iret
aam
mov
lcall
addr16
enter
cltd
push
jp
dec
int3
rcr
pop
adc
pusha
add
orb
icebp
sbb
push
dec
fdivrs
test
sbb
push
push
mov
mov
xor
adcl
inc
push
dec
in
loope
movsl
mov
icebp
in
cmp
mov
dec
or
sbbl
pushf
mov
scas
cwtd
ret
mov
mov
aad
lock
cmp
jne
in
lahf
loopne
mov
or
daa
jmp
add
cmpsl
orl
dec
cmp
psraw
fs
in
fwait
jp
adc
hlt
out
mov
movsl
fcmovu
mov
dec
das
out
repz
push
and
lret
into
xchg
dec
mov
gs
inc
mov
in
xchg
js
lret
cmp
inc
ljmp
arpl
cmp
add
sub
mov
dec
push
into
pop
add
add
xchg
push
push
or
add
sub
jb
call
sub
xlat
jge
outsl
mov
mov
sub
inc
mov
pop
mov
mov
mov
push
aam
sbb
mov
dec
xor
xchg
ret
cld
inc
push
pop
test
outsl
mov
out
int3
and
lods
adc
rol
sbb
jle
cmpsl
outsl
add
jno
push
out
cwtl
fisubrs
jns
pop
out
clc
mov
pop
mov
outsb
and
fldl
fwait
shll
add
pop
arpl
mov
jns
fisubs
enter
insb
aam
test
lock
mov
and
cmp
pop
out
mov
mov
pop
and
push
sbb
shll
push
dec
pushf
adc
fidivrs
jne
pop
add
xchg
fmul
shll
jge
lea
hlt
rclb
push
sub
fs
mov
sub
in
sbb
addr16
pop
push
ss
adc
scas
fists
addb
fsubs
shr
and
and
or
lds
shl
lcall
mov
jge
mov
lds
mul
icebp
out
cmpsl
inc
dec
call
push
aas
xchg
xor
lcall
nop
leave
sub
fcmovb
out
push
push
lcall
test
iret
jnp
lods
jle
out
test
adc
adcb
fmuls
lret
pop
ss
and
shr
cmp
xchg
add
mov
imul
jge
cmpb
fsubl
mul
popa
in
jnp
daa
into
add
into
sub
sub
jo
cmc
push
jmp
xchg
mov
mov
inc
pop
pop
jl
jecxz
movsb
icebp
test
outsl
push
xor
inc
jne
mov
bound
mov
rcl
lods
xor
inc
outsl
dec
push
int3
mov
je
dec
mov
mov
movhps
into
dec
cltd
cmp
incl
push
and
out
hlt
xchg
daa
jmp
xlat
addr16
mov
inc
imul
shll
cmp
inc
cli
aam
inc
movsl
mov
cmp
and
push
test
jg
pop
adc
les
icebp
ds
out
movsl
jb
jae
or
ds
mov
pop
test
subb
hlt
lret
jle
push
mov
dec
mov
lock
jmp
and
stos
or
movsl
inc
adc
mov
in
fistps
cmp
dec
pop
decb
and
inc
mov
sbb
push
inc
adc
xchg
mov
test
insl
cli
movsb
pop
xlat
push
jo
mov
xor
idivl
and
add
push
jb
mov
adc
push
nop
xchg
lcall
sarl
mov
iret
push
pop
ljmp
mov
rorb
sub
and
fidivl
pop
fstpl
pusha
fcmovnb
xor
xor
push
sti
in
cltd
inc
cmp
cmp
lds
stos
xor
mov
arpl
lret
xchg
or
rolb
fstpl
xor
jae
mov
add
les
push
cmc
std
or
negl
into
scas
adc
movsl
adc
dec
jp
add
xchg
sub
and
push
jae
jp
jnp
dec
jne
add
push
repnz
push
in
sub
sub
and
loopne
ja
or
inc
pop
pop
aam
xchg
push
rorb
push
and
adc
mov
jne
mov
cmc
and
pop
out
sub
andl
rcll
adc
inc
dec
xchg
ljmp
and
xor
scas
mov
adc
pusha
pop
add
or
xchg
cmp
sbb
outsb
test
hlt
push
pop
mov
out
dec
or
adc
mov
stos
sbb
into
call
and
iret
push
push
mov
mov
movsb
mov
jae
aas
xchg
bound
ret
cmp
adc
adc
ljmp
in
lcall
xchg
icebp
adc
mov
imull
adc
shlb
and
inc
bound
sti
fldt
add
lahf
sbb
shlb
dec
push
pop
pushf
dec
pop
test
outsl
mov
push
sub
dec
movsb
or
icebp
pop
sub
mov
daa
cmp
xchg
out
jns
cmpsl
cmpsl
pop
fmull
mov
jl
jg
jae
add
sbb
sbb
cltd
jmp
xor
inc
aad
mov
and
xchg
xchg
cld
pop
xchg
sbb
xor
test
lods
sub
ret
jno
adc
out
add
shll
xor
lret
sbb
pop
adc
mov
mov
nop
adc
out
fmuls
push
inc
orl
mov
out
sub
fcomps
call
nop
lcall
popl
sub
rcll
pop
and
lret
stos
fildll
adc
aad
mov
xchg
push
vcvtsd2ss
mov
xor
addr16
fildl
adc
outsl
mov
and
xor
and
icebp
jae
int3
mov
sbb
dec
std
mov
cmpsl
fprem1
ljmp
mov
pop
pop
loope
pusha
mov
pop
sahf
adc
stos
fnsave
stos
aad
bound
nop
fdecstp
in
xchg
data16
cmp
loop
or
mov
jecxz
adc
lods
shlb
insl
sub
push
jecxz
mov
loopne
and
sub
fidivs
cwtl
repnz
sahf
js
xchg
in
lods
pop
popa
pop
in
out
data16
test
cmc
jb
add
hlt
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
dec
pushf
sbb
orl
icebp
pop
aas
xorb
cwtl
push
lret
pop
decl
push
or
andl
xchg
rcrb
fsubrs
aaa
add
jl
mov
stos
jno
xor
xor
cli
pop
inc
clc
scas
addr16
mov
adc
orb
mov
mov
xor
dec
add
fdiv
nop
stos
push
mov
ss
mov
mov
cmc
xchg
pop
inc
jmp
dec
add
fistpll
sub
inc
mov
aad
and
jne
adc
xchg
sub
and
add
das
xchg
mov
xchg
cwtl
push
imul
bound
and
insb
repz
add
cmpsl
idivb
ret
push
outsb
aam
add
add
jge
xchg
cmpsb
cs
add
mov
dec
jns
hlt
mov
lret
and
xchg
push
lret
rorb
in
int3
xchg
mov
in
adc
xor
xchg
lea
incl
inc
push
into
fsubr
sbb
cltd
mov
adcl
jg
jns
fwait
inc
inc
fs
jae
or
out
fmull
mov
shlb
sub
push
in
mov
sub
call
mov
mov
in
lea
sub
dec
sub
pop
cmp
mov
std
cmp
dec
mov
lea
insb
mov
fdivrl
mov
je
dec
sub
out
js
scas
rol
push
and
adc
fisubl
movsl
xor
sahf
mov
mov
pop
fstpt
iretw
aam
and
and
mov
loope
mov
adc
dec
lret
mov
mov
ja
mov
push
push
xor
nop
xor
scas
jns
mov
lret
out
stc
nop
outsl
mov
push
aaa
in
xor
dec
pop
scas
jg
insb
and
out
xlat
shll
mov
or
popa
outsl
jmp
sub
outsl
mov
aad
mov
sub
mov
push
mov
and
xchg
ds
insl
sub
pop
pop
adc
cli
xchg
adc
mov
rcrl
rorb
cmp
outsl
push
fsubrp
jno
icebp
mov
mov
xchg
mov
sub
loopne
pop
imul
ficoms
or
xchg
test
sbb
adc
inc
xchg
cmp
jecxz
xchg
out
add
out
pop
orb
sbb
sbb
lret
ret
mov
xchg
dec
mov
cmp
or
aas
rolb
or
popa
sub
arpl
mov
fbld
adc
push
push
js
adc
sbb
mov
nop
xchg
out
mov
cmp
adc
dec
inc
mov
xor
sub
insl
push
mov
ret
xchg
push
lcall
sub
push
push
push
sub
sbb
xchg
cmpsl
add
xchg
or
sbb
mov
sub
cmc
popa
cmp
imul
inc
fwait
sbb
iret
mov
adc
xchg
dec
xor
or
pusha
rolb
addr16
push
push
lds
pop
jo
sbbb
jno
cmc
xor
cli
jmp
sbb
inc
cmp
push
jle
out
cmp
and
test
test
movsb
push
stos
xor
les
inc
lcall
in
stc
std
mov
mov
shll
jle,pn
cmp
stos
mov
mov
repz
lods
hlt
decl
lret
push
mov
adc
cmpsl
fildl
sahf
leave
add
icebp
scas
fwait
pop
mov
adc
rcrb
add
lret
fsubl
pop
icebp
cmp
hlt
mov
sub
cmp
scas
imulb
jb
scas
ror
fstpt
mov
dec
inc
adc
mov
sub
and
push
push
fdivl
ficomps
jne
out
lret
cli
mov
cmp
mov
in
dec
mov
std
mov
add
push
mov
in
mov
rcrb
mov
addr16
loope
or
int
xchg
push
inc
jbe
cwtl
scas
test
xchg
cwtl
mov
cmp
hlt
pop
pop
push
xchg
repnz
jae
pushf
or
sub
cwtl
sub
mov
jbe
dec
test
imul
fwait
push
scas
stc
inc
aaa
adc
das
mov
xor
push
jp
inc
push
aas
movntps
cmpsl
pop
je
dec
lds
pop
je
jecxz
add
cmpsb
lds
mov
cwtl
leave
mov
clc
pop
push
subl
add
outsl
or
and
shl
pop
mov
push
jg
mov
aad
jns
cltd
in
mov
mov
repnz
popa
cmp
sbb
sub
mov
push
and
push
xor
push
mov
jmp
rol
cwtl
xor
sub
dec
lcall
inc
or
mov
popa
mov
pop
pop
out
xchg
loope
jnp
stos
in
jbe
mov
fisttpl
ja
and
enter
sbb
gs
std
jbe
pop
inc
ja
inc
aas
daa
jp
aam
mov
and
test
stos
inc
nop
enter
scas
cmpsb
movsb
xchg
je
cmp
push
loopne
sbb
rcrb
lock
cltd
sti
sbb
mov
int
push
lock
xchg
call
sbb
inc
sbb
int3
loop
xchg
xchg
lret
lret
sbbl
fimull
bound
leave
jl
xchg
andl
dec
mov
mov
negb
inc
push
test
cmpsl
sahf
pushf
repz
cmc
lods
imul
dec
loope
mov
xor
sbb
daa
inc
cmc
mov
cmp
movsb
jno
jns
hlt
loope
popa
fimuls
mov
enter
shrl
jle
data16
sub
std
sarl
std
lret
outsl
faddp
lds
repz
mov
dec
test
xor
dec
aam
dec
gs
test
pop
lock
outsb
xchg
xchg
cmc
push
hlt
xorb
mov
jo
inc
adc
loope
mov
lea
jbe
adc
inc
lds
xchg
lahf
aad
call
out
fdivs
and
push
push
jl
daa
pop
mov
fsts
pushf
pop
jns
jmp
cwtl
in
rol
movzbl
push
mov
mov
cli
sub
mov
inc
cmp
lea
sbbb
mov
addr16
push
fdivl
call
je
add
push
test
jge
daa
lahf
cld
lret
loopne
push
and
mov
adc
push
jmp
fidivrl
ljmp
movsl
jg
cmp
xor
hlt
mov
add
int
leave
sub
jnp
push
dec
push
or
mov
sbb
pop
dec
add
in
mov
jl
and
int
sub
ds
iret
dec
ds
addl
cmc
jge
pop
push
inc
outsl
aam
popf
jp
rorb
out
dec
outsl
add
jge
mov
cmp
test
hlt
xchg
js
clc
and
int
shrb
or
insl
dec
aas
dec
mov
push
xor
mov
push
lods
sub
mov
adc
xchg
mov
testl
add
lods
ret
into
hlt
jno
shll
inc
sub
test
push
cwtl
repz
shl
mov
mov
std
in
test
xor
shlb
imul
xorl
inc
jp
mov
xchg
push
subl
repz
mulb
inc
xchg
jmp
sub
ja
scas
and
cmp
push
cmpb
pop
mov
mov
xchg
cld
int3
push
ljmp
mov
xchg
test
cmpsl
in
lock
rcl
and
xor
pop
pop
movsl
xchg
sbb
test
test
push
cmp
lds
cmpsb
xchg
js
adc
fistpl
add
es
fidivrl
jecxz
inc
pop
adc
dec
repnz
inc
jne
cmp
cmp
sub
sub
lret
call
inc
push
xchg
inc
int
mov
mov
lds
lods
gs
loopne
xor
scas
mov
add
lret
test
imul
sub
add
bound
xor
lock
in
test
ljmp
push
addl
sbb
sub
push
cwtl
or
notl
cmp
test
add
es
mov
idivl
jns
pop
sbb
std
int3
push
into
lods
pop
les
add
iret
hlt
mov
enter
inc
mov
clc
jge
in
pop
push
pop
ljmp
fs
cmpsb
mov
dec
into
xchg
jp
shr
fdivrs
lret
add
pop
dec
jmp
jl
out
cld
add
std
fiadds
cld
ficompl
cmc
movsl
dec
xchg
mov
mov
mov
or
push
jns
ljmp
pop
leave
andl
lret
int
dec
push
and
push
or
mov
stos
inc
ret
icebp
inc
cs
mov
movb
out
and
std
test
jns
adc
jo
dec
aad
mov
out
dec
push
or
push
mov
arpl
lahf
in
movsb
test
int3
cmp
mov
or
insl
popf
xorb
or
int
pop
mov
mov
sub
mov
outsl
loopne
cld
lds
cld
mov
push
cmp
jnp
adc
lds
in
imul
aas
jle
xchg
jnp
ret
jmp
fsubrs
xor
rorl
sti
fsubrl
xor
nop
cmpsl
int
scas
cwtl
movsl
cld
fldcw
mov
loopne
sub
pop
mov
imul
cltd
mov
inc
mov
fs
pushf
xchg
mov
icebp
je
leave
xor
outsb
insb
xor
rclb
stos
cmc
dec
stc
es
or
xchg
rclb
or
aam
xchg
incb
jbe
mov
dec
jg
int3
cmp
sbb
out
stos
cmp
or
sub
js
mov
test
push
push
sub
dec
inc
sub
ljmp
fucomp
mov
cmp
cmp
pop
push
jne
cmc
pop
jnp
lret
mov
add
mov
inc
mov
inc
sti
xor
inc
dec
sbb
movsl
cmpsl
leave
fldcw
inc
dec
cs
mov
popf
mov
push
adc
dec
sbb
and
enter
sub
cli
stc
inc
hlt
fwait
adc
inc
out
pusha
inc
aam
sahf
lock
and
mov
jne
mov
add
popa
repnz
mov
xlat
mov
pusha
sub
imul
outsl
popf
inc
cmp
test
sub
cmp
pushf
movsb
sbb
lret
test
dec
push
mov
insb
push
aad
mov
mov
das
test
sahf
jae
add
mov
js
movsl
test
push
stos
add
jge
cmpsb
popa
dec
mov
sub
adc
pop
sbb
rolb
xchg
lock
push
mov
out
pop
mov
fildll
add
dec
or
mov
imul
adc
pushf
push
lcall
cs
push
cmpsb
adc
mov
int3
xchg
cmp
inc
dec
lods
es
adc
push
sbb
mov
sti
mov
imul
pop
rcl
lock
jge
adc
in
jne
jne
mov
test
or
dec
stos
cmp
jl
lock
fdivs
xor
dec
scas
cmpsl
into
pop
sub
push
repnz
aad
enter
adc
jo
outsb
or
inc
push
jnp
xchg
mov
or
lock
xchg
inc
stc
in
xchg
xor
xchg
rclb
je
and
aad
add
nop
shll
test
cmp
pusha
aam
cmp
cmpb
and
jb
xor
add
mov
es
inc
sub
dec
sbb
or
fnstenv
leave
out
inc
pop
sub
ds
xorb
jg
aaa
dec
loopne
push
clc
add
mov
jb
push
xor
mov
sub
fs
xchg
dec
or
sub
test
push
jge
mov
incl
sbbb
mov
mov
aas
hlt
jp
addb
pop
and
out
xchg
cmp
sbb
mov
cmp
icebp
fs
cmp
jecxz
sbb
add
sbbb
push
xchg
sbbl
adc
imul
nop
into
ja
sub
adc
lahf
mov
cli
ja
pop
out
mov
lahf
jecxz
add
hlt
cmp
inc
sub
arpl
fcmovb
cmp
mov
dec
mov
and
mov
mov
cs
or
xor
stos
daa
repnz
test
movsl
dec
push
pop
dec
adc
cs
cwtl
bound
scas
cmp
gs
jae
scas
adc
adc
add
ret
scas
adc
cs
out
popa
cmp
test
adc
in
push
jg
dec
addb
jo
jbe
xchg
xchg
sub
repnz
or
call
pop
jae
lock
mov
ljmp
dec
xor
adc
push
daa
mov
ljmp
ficompl
xchg
xor
ret
je
inc
adc
adc
je
pop
inc
push
inc
xor
jecxz
shlb
repnz
push
std
sbb
lahf
mov
mov
cmc
adc
mov
enter
stos
pop
popf
lret
rclb
aas
pop
int3
mov
xor
mov
data16
fsub
xchg
and
sub
mov
inc
imull
clc
sbb
jns
jo
ljmp
push
jne
sbb
repnz
pop
shr
sub
ret
and
cmc
das
mov
xchg
jecxz
jo
push
aam
adc
stos
enter
add
je
push
popa
inc
cmp
out
movsb
movsb
inc
scas
jge
mov
sti
mov
cmpsb
or
fwait
stos
mov
lcall
test
lds
out
adc
loopne
cmp
cmc
push
xor
push
arpl
jnp
in
adc
jl
push
push
pop
arpl
gs
mov
inc
push
xchg
cmp
xor
sub
lret
jmp
movsl
mov
outsl
test
mov
scas
push
sub
push
fisttps
xchg
and
stos
subb
mov
ret
or
fldenv
subl
cmp
dec
insb
xlat
js
xchg
or
popl
xchg
outsl
les
pop
mov
jno
shl
xlat
aas
jge
sbb
test
out
mulb
loopne
mov
pop
or
cmc
leave
push
cmpsl
aam
push
add
and
xchg
push
cmp
and
and
mov
and
dec
out
cmp
lahf
out
mov
dec
imul
jg
sbb
mov
push
cmp
xchg
addl
inc
mov
sbb
mov
test
aaa
sub
sbb
add
push
mov
push
xchg
cmp
mov
movsb
stos
popa
sar
out
shlb
cs
cwtl
push
and
mov
jmp
fldenv
es
repz
dec
sarb
xchg
adc
pop
cmp
ja
adc
mov
clc
loopne
sahf
add
push
in
inc
push
cld
pushw
mov
lods
movl
test
test
movsb
lret
flds
xchg
int3
add
jecxz
or
or
pop
adc
in
test
push
xchg
cmp
mov
dec
add
ficompl
das
inc
insb
filds
cmp
leave
xchg
jg
int
mov
insl
sbb
xor
inc
dec
push
mov
aam
push
jmp
cmovnp
jp
leave
or
mov
sbb
pop
mov
adc
in
shll
inc
pusha
pop
jecxz
push
pop
enter
fprem
add
xchg
cwtl
push
rorl
sub
out
jb
mull
movsb
jb
rcrb
shlb
es
in
xchg
pop
sub
sbb
stos
sbb
lcall
mov
lds
sub
cs
das
loope
aas
adc
lods
nop
mov
push
jns
pop
scas
inc
mov
in
or
sbb
sub
mov
dec
loope
std
inc
test
push
lret
inc
cmp
inc
shlb
push
cwtl
std
jg
mov
pop
mov
lret
fcomp
sub
dec
and
outsl
push
fstps
cmc
mov
xchg
mul
repz
cmp
enter
xchg
mov
dec
cmp
test
push
push
sbb
dec
addb
inc
mov
lock
push
fldl
cmp
movsl
pop
dec
add
mov
sub
mov
push
mov
lods
cmpsb
sti
popf
jb
mov
out
add
mov
and
cmp
jmp
dec
dec
repnz
pop
fst
mov
mov
loop
push
bound
fidivl
sub
jo
jge
fsubl
or
dec
adc
mov
enter
sbb
mov
jg
das
aam
push
dec
es
in
jg
xchg
push
rolb
nop
ret
dec
mov
add
push
cmp
repz
insb
bound
push
jae
frstor
test
inc
int
jg
mov
add
aad
mov
dec
sub
xorl
sbb
out
shll
ds
fdivl
xor
and
fs
xor
pop
mov
cld
dec
xor
daa
pop
loopne
push
cmove
sarl
out
or
arpl
xorl
sub
aad
shll
movsl
add
add
jne
sti
mov
lahf
pop
stos
mov
sub
xchg
fsubl
pop
add
xchg
inc
out
popa
push
test
adc
ds
aad
nop
lock
mov
fldt
cltd
aaa
test
mov
flds
adc
aaa
lds
out
jge
lahf
jge
inc
push
jge
loope
out
inc
inc
mov
icebp
test
in
roll
add
in
lds
jno
hlt
into
fcoms
jmp
call
std
sub
dec
xlat
iret
outsb
sarl
cmpb
jae
cli
icebp
mov
es
sub
mov
dec
arpl
inc
sub
push
test
cmp
add
cs
hlt
and
cld
cmp
fisubrl
mov
ficoml
aaa
or
scas
imul
sbb
xchg
xchg
les
cmpsl
mov
imul
mov
mov
fists
lcall
xor
cmp
add
lock
sub
add
jle
mov
pop
mov
mov
pop
mov
push
aam
jl
push
inc
push
inc
pop
out
sub
mov
push
imul
loopne
xchg
nop
push
lret
and
or
push
scas
dec
mov
mov
mov
or
push
dec
outsb
into
and
test
fcoms
push
xchg
int
push
ret
lds
in
bound
jno
push
mov
xor
jge
pushf
scas
arpl
test
or
imul
xchg
lds
dec
push
jno
aad
push
jo
and
out
repnz
xchg
in
loopne
fs
mov
cmpsb
xchg
mov
inc
icebp
mov
add
in
data16
pop
outsb
bnd
cmc
icebp
push
inc
sub
and
adc
jmp
lds
shrl
fnstenv
js
mov
ja
mov
stos
je
dec
std
ret
pop
cmp
add
ljmp
adc
fistpl
mov
mov
jbe
mov
mov
pop
lret
divl
xor
sub
test
icebp
mov
xchg
push
sbb
pop
and
pusha
mov
mov
repz
xchg
lods
fsubs
in
iret
ja
or
rcrl
jg
or
dec
aam
adc
sub
loopne
fiadds
or
cmp
adc
cmp
rcll
clc
mov
arpl
sub
outsl
mov
inc
sub
cwtl
frstpm(287
push
sub
pop
jne
push
sbb
mov
mov
cwtl
sti
mov
and
cmp
mov
or
mov
xor
nop
or
scas
scas
lods
inc
inc
call
addr16
add
test
and
inc
jecxz
dec
imul
add
mov
inc
imul
cld
sbb
dec
fcoml
adc
emms
xchg
add
aam
mov
add
jns
enter
or
sub
mov
xor
sahf
pop
and
sub
push
xor
call
xchg
mov
jo
sti
gs
ret
fwait
inc
jl
cld
nop
aas
jp
adc
icebp
inc
pop
in
inc
into
into
pop
mov
inc
xor
dec
in
mov
lock
dec
aas
pusha
mov
out
dec
rcr
jl
ss
sar
jnp
pop
mov
js
push
stc
cmp
xor
xor
hlt
andl
push
ja
iret
hlt
ljmp
sbb
lahf
out
pushf
xorb
push
push
outsb
push
xchg
rcrb
sti
push
nop
int3
enter
mov
mov
stos
lods
inc
iret
push
test
xchg
mov
repz
shll
rcrl
inc
mov
pusha
gs
scas
shlb
lock
stos
ret
cli
cmp
fdivr
sti
inc
jle
mov
subb
loop
dec
enter
in
or
or
adc
cs
jae
ss
or
sbb
repnz
push
inc
dec
daa
lea
cmp
imul
mov
cmpsb
mov
sbbl
imul
xchg
out
cmp
and
daa
mov
push
add
xchg
cli
cmp
inc
and
lock
jne
xor
mov
outsl
int
mov
mov
adc
int3
inc
jno
or
cmp
and
cs
pop
jle
sbb
rcll
add
inc
mov
pop
xchg
mov
addr16
adc
std
pushf
and
test
test
mov
mov
outsl
dec
mov
ret
inc
push
fcoml
dec
or
test
enter
jbe
sub
mov
push
mov
jmp
pushf
adc
sub
xor
jno
cmp
pop
cwtl
bound
aad
xchg
sbb
and
dec
pop
sahf
xor
pop
xor
cmp
adc
xor
pushl
or
or
imul
inc
add
movsl
sbb
sbb
sbb
mov
jp
add
jle
mov
mov
and
xor
lods
mov
push
or
sti
mov
mov
pop
inc
jge
icebp
not
fwait
pop
scas
inc
dec
mov
sub
or
cwtl
jp
sub
mov
mov
out
fcompl
out
sub
push
outsb
jp
lea
jne
mov
cld
jmp
cld
sub
push
inc
sub
pusha
or
rcrb
bound
pop
cmpsl
test
jnp
leave
cld
adc
lea
enter
or
cmp
and
lcall
lock
add
adcb
pop
xor
cltd
pushf
mov
pop
aaa
jmp
int3
dec
pop
sub
dec
jb
sub
xor
inc
push
gs
dec
sbb
xchg
dec
sbb
enter
fs
inc
add
inc
xor
jp
jo
movntps
mov
xor
mov
cmp
repz
xor
ret
shll
pop
xor
movsb
mov
outsl
imul
pusha
cmp
mov
les
ret
mov
push
loop
and
stos
or
add
lds
pop
pop
ljmp
lret
adc
test
jge
xor
cmpsb
adc
fldenv
outsb
fstpl
movsb
call
test
imul
sbb
ret
lahf
pop
in
mov
aad
inc
outsb
adc
fmull
adc
cmp
adc
repnz
out
xor
jp
and
ljmp
nop
cld
lcall
mov
cmp
or
enter
dec
cmovns
mov
movsb
push
push
stc
movsl
push
dec
pop
loop
jb
sub
loope
inc
xchg
cmpsb
insb
mov
xchg
aad
movsl
inc
mov
xchg
inc
testb
sub
mov
cmp
xchg
xlat
daa
or
insb
sahf
and
jmp
fs
mov
test
rclb
jns
dec
mov
sbb
imul
dec
clc
dec
xor
sbb
mov
pusha
xchg
add
scas
and
movsb
xchg
xchg
ljmp
rcr
daa
cwtl
les
sub
stos
test
or
sub
mov
js
pop
ret
sub
adc
xor
stc
xor
xlat
dec
je
fidivs
inc
stos
pop
scas
push
shl
aas
push
mov
jb
rorb
push
mov
and
insl
mov
xchg
fdivl
xchg
push
adc
push
push
mov
scas
adc
aas
or
jne
lret
push
pop
addl
xor
cmc
sti
or
aaa
jb
rcr
std
push
adc
sbb
xchg
movsb
push
add
data16
bound
ss
mov
enter
nop
ja
lret
jmp
pop
xor
or
outsl
mov
jmp
iret
aaa
bound
and
xor
mov
inc
cmp
cs
mov
cmp
sbb
out
and
pop
sarb
add
stos
jnp
and
insb
adcb
cli
mov
xchg
dec
and
sbb
test
stos
xor
loop
mov
dec
cs
addr16
loop
jmp
arpl
xor
xchg
js
pusha
jmp
imul
jo
inc
lahf
jbe
push
rcl
xchg
mov
int3
sbb
pop
and
lds
push
xchg
jno
cmp
iret
sbb
push
pop
in
mov
and
mov
fimull
clc
xchg
daa
push
xlat
test
mov
lcall
int3
arpl
ret
push
out
xlat
lcall
mov
xchg
subl
fidivrl
jmp
xchg
xchg
mov
adc
adc
das
and
shlb
fimull
jmp
jp
push
mov
pushf
push
jg
xlat
icebp
jb
xor
insb
leave
cmp
and
call
aas
push
outsl
jge
and
jns
xor
pop
cmp
pop
cmp
mov
mov
or
jg
aam
mov
dec
mov
mov
sbb
insb
call
out
or
sahf
stc
xchg
jae
out
mov
push
sti
adc
mov
scas
lock
jae
fscale
jns
cli
sub
add
push
sahf
cmp
popf
loopne
inc
or
mov
push
aas
out
or
dec
shl
loopne
mov
and
xchg
cmp
mov
cld
inc
pop
lcall
outsl
into
dec
movsl
push
cmp
xor
loopne
fbstp
mov
inc
jns
and
mov
fscale
mov
mov
clc
in
adc
jo
adc
jne
mov
xchg
cmpsl
sub
rorb
stos
fdivr
push
xor
ja
loop
adc
gs
fwait
lds
int3
out
faddl
adc
insb
sti
rclb
fadd
stos
shll
arpl
push
lret
cmp
sub
or
xchg
orb
mov
and
mov
icebp
pop
repnz
outsb
inc
sub
push
inc
mov
pop
push
add
fdivl
mov
pop
add
iret
lahf
stc
sbb
pminsw
les
int3
andl
ret
cmc
movsl
mov
jno
jae
jg
add
add
data16
inc
cmp
xor
ja
push
iret
adc
rcrl
xchg
test
sub
clc
lret
sti
add
scas
add
pinsrw
shlb
and
out
mov
hlt
sub
xchg
push
xchg
insb
fdivl
push
pop
imul
cmpsb
shrb
xchg
mov
xor
nop
sbb
out
icebp
bound
fimuls
or
aas
mov
jge
cmpl
cmpsb
pop
sub
test
sahf
pop
lds
fisttpll
inc
aas
ljmp
and
fstps
xchg
cmp
out
or
sbb
inc
jnp
sbb
fcoml
mov
push
popf
out
sub
sti
stos
cwtl
push
fdivs
lcall
push
mov
pop
jecxz
push
push
pop
push
aam
mov
lods
cmp
adc
sahf
and
repz
adc
lret
or
les
enter
out
daa
dec
sub
mov
xlat
out
xchg
sahf
push
sahf
int3
sarb
pop
out
jmp
or
xor
fimuls
xchg
fisubs
adcb
insl
stos
imul
pop
test
stc
out
jae
jae
lds
in
mov
jb
xor
pop
jmp
lock
ret
jl,pn
push
dec
mov
or
pop
or
lods
lea
lea
not
enter
push
loopne
adc
xchg
std
inc
sti
push
mov
sbb
pop
hlt
mov
int3
cmp
int3
popf
in
adc
push
cli
mov
mov
enter
sub
clc
mov
push
and
add
cmpsb
stos
inc
ljmp
fmuls
inc
lds
xor
adc
mov
stos
ljmp
mov
adc
xchg
test
pushf
adc
adc
xchg
rcrb
outsl
mov
in
adc
mov
push
sub
das
outsl
mov
daa
and
leave
pushf
daa
mov
out
pop
mov
insl
add
cmp
hlt
out
cmpsl
aam
dec
or
and
cmp
insb
hlt
push
push
fnstenv
testl
lcall
push
syscall
mov
cmp
cmp
popa
cmpsl
cltd
aam
out
add
int3
sub
jno
lds
pop
sbb
outsb
daa
xchg
cmp
mov
xchg
jle
mov
and
cmp
cs
mov
adc
mov
imul
outsl
hlt
insb
jbe
movsl
jb,pt
repnz
arpl
popf
cmp
or
popa
das
cwtl
data16
sub
add
ljmp
sbb
or
lds
sbb
xor
adc
mov
fcomi
dec
pop
popa
mov
outsl
inc
stc
imul
pushf
mov
aam
sub
mov
mov
ljmp
movb
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
lea
or
addl
add
jnp
ja
dec
and
mov
cli
int3
xor
add
leave
push
sahf
mov
fcmovnbe
mov
dec
out
mov
pop
push
cmpl
in
pop
mov
push
pushf
stos
insb
ret
iret
pop
testl
dec
pop
xor
adc
jne
mov
and
mov
iret
add
inc
stos
arpl
cmp
cmpsl
adc
sti
clc
pop
arpl
xlat
scas
into
cltd
imul
std
jp
divb
mov
dec
push
xor
cwtl
aad
inc
cmp
cwtl
xchg
setl
pop
jmp
fnstenv
mov
push
xor
pop
adc
jmp
mov
pop
mov
pusha
mov
lods
loopne
dec
es
push
inc
jb
and
outsb
cmp
xor
insl
test
sahf
pop
leave
add
push
test
mov
fnstsw
movsl
push
shlb
insl
cltd
cmp
mov
mov
inc
je
push
rol
imul
xchg
je
mov
lret
xor
int
sub
pop
pushf
jecxz
push
sbb
gs
xor
ret
loop
mov
inc
ja
int3
inc
insb
pop
adc
in
leave
fcmovu
repnz
in
sbb
sub
mov
rorl
fcmovbe
push
lea
adc
cs
shrb
or
pop
inc
out
pop
push
scas
mov
hlt
mov
popa
psubsb
out
xor
mov
jnp
pop
ljmp
mov
dec
lock
xor
shll
out
dec
jb
lcall
lock
fadds
pop
test
shl
sbb
push
in
cwtl
mov
outsl
aad
aad
push
addb
add
stos
xor
add
pop
push
js
lret
cmpl
int3
lcall
cld
mov
sbb
push
jp
enter
into
mov
xchg
push
gs
jae
lret
pop
mov
and
xchg
in
inc
fisubrl
popf
mov
cmp
xor
sub
xor
adc
fisttpl
cmpb
add
mov
pop
leave
enter
mov
pop
test
mov
push
dec
cmp
push
roll
xor
jbe
or
in
pop
les
cmp
pop
sbb
push
cld
shlb
pop
dec
sbb
xchg
pop
cmp
dec
push
pop
xor
sub
pop
jl
push
movsb
dec
hlt
xor
in
push
add
ror
sbb
sub
stos
adc
out
loopne
jae
mov
int3
rcr
cmp
xor
mov
lock
pushf
outsl
xchg
sbb
addr16
cmp
pusha
mov
or
jne
cld
dec
xchg
adc
les
mov
mov
jg
enter
test
xor
lods
xchg
sbb
lods
cltd
pop
push
test
out
negl
jae
enter
nop
jge
jbe
icebp
out
pop
mov
xchg
push
cmp
mov
mov
sub
les
fwait
test
adc
push
mov
add
fdivrl
sub
inc
xchg
je
mov
push
push
pop
lods
icebp
divb
mov
rcr
lods
cmc
adc
mov
repz
aaa
mov
rolb
shr
subb
sub
xor
pop
imul
inc
test
pop
sbb
in
scas
mov
loope
adcb
gs
cmpsb
insb
push
aad
inc
or
cmp
inc
lods
adc
fistl
inc
mov
out
adc
call
fdivr
mov
cs
mov
leave
cmp
insb
ds
xchg
cmpsb
sbb
push
jo
push
or
jnp
xchg
and
mov
in
into
es
shlb
and
lock
loopne
lahf
js
xchg
inc
ja
hlt
dec
mov
jb
jne
enter
dec
sub
cmpsb
inc
lcall
jl
xchg
jg
pop
in
jecxz
xor
sahf
out
les
cmc
add
cmp
dec
and
sti
xor
hlt
inc
pop
and
js
je
rorl
aam
sbb
inc
mov
shrl
lods
mov
movsl
pop
icebp
push
lds
and
mov
push
inc
add
push
lret
in
cmp
adc
pop
mov
dec
adc
or
js
and
sbb
aaa
bound
stos
pop
push
sbb
jg
push
imul
jbe
add
call
inc
xor
fdivl
test
mov
pop
lret
movsl
mov
mov
outsl
pop
lret
pop
push
cmp
jb
cvtdq2ps
mov
jecxz
jb
rolb
shll
xor
rolb
mov
and
into
sub
outsl
sbb
sub
cmc
insl
or
lcall
pop
mov
xchg
lock
dec
aad
packuswb
mov
inc
arpl
pop
les
mov
mov
fildl
xlat
xchg
fimull
or
cmp
push
push
and
js
mov
es
jp
outsl
shlb
repz
jb
mov
imul
fbld
xchg
mov
subl
and
mov
jno
test
adc
dec
ss
jbe
repnz
lock
inc
cmpsb
sub
mov
push
jmp
fnstenv
mov
sub
shll
loopne
ret
subb
inc
scas
jle
push
std
cmp
loop
sbb
in
sarb
ja
mov
rcrl
add
popf
je
add
sbb
add
sub
adc
adc
repz
leave
lret
gs
jge
and
repz
mov
sbb
fs
inc
bound
dec
das
mov
lret
test
rcr
add
cli
xchg
push
cmp
dec
stc
inc
jle
lods
xor
ret
sub
or
or
sbb
mov
push
fcmove
loop
aam
int3
mov
lea
clc
movsb
fmul
leave
push
int3
out
add
lcall
ret
ret
mov
iret
rolb
cmp
sti
dec
sub
scas
sti
mov
lods
cmp
sub
jmp
cmpsl
dec
scas
dec
js
popf
mov
push
gs
xchg
inc
aad
shrb
andb
xor
xchg
inc
push
adc
jp
shlb
cmc
in
xchg
sbb
or
pop
mov
xor
movsb
xlat
add
mov
push
lahf
enter
xor
hlt
test
insb
popa
pop
add
add
mov
aaa
xchg
mov
or
cld
mov
stc
xor
sbb
cmp
test
test
lods
dec
xchg
mov
scas
push
in
mov
mov
or
sbb
popf
pop
adc
inc
sbb
cmpsl
lods
fcoml
test
lods
cwtl
pop
pop
fisubs
mov
xchg
les
jle
jo
aam
sarl
or
jmp
and
std
sbb
iret
sti
cmp
popa
adc
pop
adc
adc
mov
clc
push
sbb
inc
pop
ss
dec
push
pop
idivl
fwait
insb
flds
je
jo
mov
cmp
add
push
adc
enter
repz
pop
sbb
repz
jnp
sub
cs
inc
sbb
lret
test
or
subl
aam
mov
pop
lret
sarb
push
jno
popa
xor
mov
lret
push
mov
clc
sbb
mov
fnstsw
and
xlat
xchg
mov
and
add
xor
test
mov
add
enter
lods
sbb
mov
mov
mov
add
arpl
adc
out
sbb
lcall
pop
mov
inc
shll
xchg
push
mov
mov
out
lahf
lods
dec
pop
test
xchg
cltd
mov
loopne
scas
mov
xor
call
push
fcoms
and
dec
sbb
movl
unpckhps
maxps
pop
sarl
inc
fcmovnbe
inc
and
out
fldcw
cmpsb
movsb
jp
int3
dec
jns
ja
stos
jae
shrl
ds
aaa
adc
mov
add
cld
pushf
iret
es
pop
bound
jmp
insl
aam
pop
mov
cmp
in
imul
xor
fistl
ljmp
hlt
mov
clc
shrl
loopne
xchg
push
insl
push
ret
sbb
adc
mov
repz
sub
ret
jecxz
std
xor
in
test
add
shrl
iret
push
loop
in
out
pop
daa
and
ss
aaa
dec
sub
pop
hlt
jae
xchg
and
and
jns
enter
xor
in
out
ret
xchg
push
sarb
pop
pusha
sub
sub
aam
std
jmp
dec
loopne
loope
outsl
shlb
shll
ror
call
dec
inc
jecxz
or
lahf
jb
push
jge
data16
mov
insl
jl
repnz
xorl
dec
inc
enter
push
sub
sub
jbe
out
xchg
push
inc
es
push
hlt
hlt
out
repz
call
cmp
int3
mov
jns
mov
mov
jle
dec
pop
adc
mov
ret
inc
sbb
inc
js
adc
cmp
test
sbb
cwtl
out
les
stc
jmp
stc
mov
popf
sbbb
scas
mov
mov
pop
xchg
lcall
mov
xor
push
mull
xchg
shrb
aas
push
js
push
negb
xchg
lock
xchg
int3
cltd
pop
stos
stos
adc
cmc
xor
jmp
or
xor
fwait
pop
mov
pusha
jp
orl
add
jne
xor
or
or
dec
test
sbb
addr16
cli
adc
jb
lea
push
inc
imull
cld
lock
mov
pop
lcall
ficoml
sbb
scas
inc
loop
ljmp
push
pop
adc
es
shlb
je
xchg
xchg
pop
nop
mov
sarb
mov
mov
repnz
inc
addb
lea
out
cli
pop
mov
cmpsb
out
adcl
fdivs
mov
xchg
inc
push
push
xor
push
cmc
xchg
and
ret
xchg
cmp
mov
dec
lods
or
mov
gs
daa
cltd
jb
add
decb
pop
xchg
dec
fcmove
adc
push
repnz
lret
mov
testb
mov
mov
pusha
daa
push
jl
cmp
sbb
in
sbbb
and
push
adc
fldenv
sub
negl
mov
fucom
sub
cmp
jbe
fsubrs
addb
push
dec
adc
or
decb
imul
dec
dec
fldt
nop
test
cmp
pop
ds
shlb
aaa
push
negb
out
or
mov
cs
rcrl
lea
inc
fldl
cwtl
adc
nop
mov
aas
cld
andb
xlat
in
or
es
mov
pushf
enter
inc
fimull
sub
stos
or
cwtl
scas
pop
pop
stos
adc
cmpsb
push
and
lea
xor
out
mov
outsl
ss
push
and
adc
inc
cmp
dec
popa
iret
data16
or
hlt
das
insl
lahf
fwait
cmpsl
mov
add
insl
arpl
push
xchg
push
loopne
imul
cmp
adc
cli
bound
imul
sbb
in
dec
sbb
xor
dec
movsl
cwtl
adc
adc
dec
jbe
push
cli
and
fldl
inc
adc
or
sbb
insl
jo
fdivrl
sub
scas
pop
dec
repnz
lcall
sub
hlt
cmpsl
enter
call
fistps
daa
push
jp
mov
mov
inc
push
lods
lock
jns
movsb
inc
xchg
ss
les
psrlw
adc
push
fisttps
push
sarl
movsl
xchg
jmp
ret
in
jbe
mov
inc
in
ficompl
or
adc
aam
push
jne
dec
inc
adc
jl
or
mov
rcrb
pop
aam
mov
push
shll
xor
push
inc
cmp
jno
loop
test
and
xchg
mov
xor
out
mov
adc
sub
dec
xchg
gs
imul
outsb
sbb
pop
imul
push
dec
mov
lahf
repz
jb
lods
push
clc
adc
movsb
cwtl
adc
dec
lcall
test
call
insb
adc
mov
in
push
cld
dec
sbb
xchg
fidivl
test
push
jecxz
nop
pop
lods
lahf
push
fdiv
pop
in
stos
addl
ja
imul
or
push
popf
adc
sarb
mov
aaa
xor
data16
xchg
mov
sbb
nop
out
mov
xor
cmovbe
loopne
std
xchg
movsb
jl
jns
add
rolb
lret
adc
sub
xchg
mov
xchg
scas
nop
and
lcall
aam
ljmp
scas
xchg
adc
sub
leave
shl
inc
in
xor
mov
seta
push
loope
sub
cmp
xor
jle
lods
loope
cmp
or
repz
mov
in
stc
mov
cmp
ljmp
cmpsl
xor
xchg
cli
jb
lret
int3
inc
aad
mov
mov
lods
into
aaa
lods
pusha
mov
mov
std
lcall
pop
je
test
imul
sbb
ja
mov
cmp
add
push
dec
loop
mov
popa
shl
clc
xchg
and
cld
fwait
or
insb
dec
mov
pushf
pop
repnz
xchg
xchg
xchg
aas
data16
fwait
jp
mov
jp
push
outsl
in
mov
add
sahf
stos
dec
sub
outsl
es
adc
lea
sbb
in
cmpsb
popl
fistl
or
cli
cmp
loope
and
dec
add
mov
jae
dec
les
fiadds
lods
or
je
inc
popa
popa
pop
fsubrl
shrb
add
stos
flds
and
dec
and
xor
cltd
push
mov
mov
bound
or
xlat
arpl
shrl
data16
loopne
cmp
mov
inc
ret
clc
jno
push
or
jecxz
sbb
pop
js
cltd
or
mov
ja
push
out
cmp
dec
outsb
sub
jge
sbb
in
or
push
rcrl
popa
es
test
shl
push
xor
ret
push
adc
lret
mov
add
dec
add
out
test
mov
fucomi
jmp
xor
or
mov
fldt
push
xchg
mov
aaa
decl
jbe
movsb
cwtl
push
ds
inc
lods
ljmp
lock
std
mov
mov
mov
push
lods
dec
movl
or
jbe
and
jmp
lret
pop
lcall
push
jno
pop
mov
fidivs
xor
ret
daa
std
fsubrl
push
mov
imul
push
xor
sub
push
add
xor
sbb
movsb
push
rclb
lea
xor
rorb
scas
out
mov
out
or
outsl
or
or
fld
push
int
int
data16
cltd
in
inc
popf
jg
leave
push
inc
xchg
aam
out
and
mov
pop
stos
pop
pop
cmp
sahf
insb
adc
lret
sub
dec
int
inc
add
adc
int3
movsl
sarb
es
negb
lret
jecxz
mov
sub
and
push
add
lea
xchg
aas
addr16
mov
arpl
and
aas
scas
pop
mov
sub
int
pop
aas
xchg
lods
cltd
out
pop
mov
mov
int3
sub
cld
rcrb
and
jmp
cltd
sti
xchg
out
sub
inc
mov
adc
dec
xor
cli
seta
mov
mov
into
mov
movsb
sti
fldenv
dec
cmp
inc
mov
and
test
jl
mov
out
scas
jg
jbe
jo
cmp
out
jmp
xor
dec
jno
daa
xor
sbb
lds
mov
repnz
or
jne
adc
and
adc
inc
sub
xchg
daa
gs
adc
xchg
loop
inc
lret
test
push
dec
mov
dec
sarb
fisubs
int
sar
cmpsl
and
add
int3
pop
imul
int3
push
test
adc
addr16
movsb
movl
mov
mov
notl
pop
mov
imul
inc
ja
lahf
push
dec
inc
dec
push
mov
sbb
mov
pop
scas
out
test
in
loope
aad
add
sub
jb
xor
push
ds
sub
scas
mov
lcall
andl
lret
cmp
movsl
je
stc
dec
pop
fidivs
stos
and
lret
lods
lahf
fisttps
mov
dec
test
xchg
pusha
inc
cs
lea
mov
js
pusha
add
or
dec
cmp
incl
sub
sub
loope
adc
fcmovb
sbb
test
adc
lahf
add
push
adc
xor
add
hlt
jne
push
jmp
fsubrl
sbb
addb
int3
xchg
push
push
adc
push
lret
push
sbb
rcll
imull
mov
std
mov
mov
rcrb
cmp
imul
jmp
or
hlt
pop
sbbb
mov
sub
rorb
loopne
fs
outsl
dec
push
int
sub
sub
gs
jmp
mov
bound
or
repnz
pop
jb
dec
stos
pushf
push
xlat
dec
dec
inc
push
xor
sarb
mov
dec
cmp
xor
inc
popf
jmp
js
das
cli
add
scas
dec
inc
mov
mov
xchg
dec
inc
adc
mov
mov
fcmovb
out
jo
cld
or
mov
xor
test
and
add
gs
mov
nop
imul
pop
cmp
cld
ds
repnz
sub
imul
dec
stc
pop
divb
add
jge
push
aaa
out
scas
mov
movsl
mov
mov
mov
mov
stc
sahf
inc
scas
add
dec
cmpsb
test
mov
in
jo
aad
xchg
sti
test
dec
push
push
aas
rcrl
pop
jp
mov
lock
popf
inc
jge
mov
jmp
aam
sub
dec
jbe
enter
out
stos
and
mov
adc
imul
push
push
cmc
loop
push
cmpsl
aaa
sub
pop
mov
xchg
lcall
sbb
scas
mov
mov
sbb
clc
mov
cmpsl
and
inc
xchg
push
je
mov
bound
or
jnp
mov
pop
mov
fwait
xchg
push
int3
push
mov
stc
push
inc
mov
adc
mov
add
adc
stos
mov
roll
mov
pop
pop
jo
rcr
ja
jp
and
sub
adc
rcrl
es
aaa
mov
cltd
add
out
dec
iret
pop
lret
mov
popf
lock
test
pop
sbb
js
or
xor
mov
iret
pop
push
clc
pop
add
call
mov
cli
inc
das
insb
leave
je
jb
addr16
scas
push
icebp
cmp
jne
lcall
out
clc
clc
stc
xchg
shll
pop
and
push
add
xchg
and
jbe
sbb
jmp
leave
mov
inc
push
cmp
mov
insl
push
rcrl
lret
mov
dec
xor
xor
inc
cmp
mov
test
repnz
int3
enter
sbb
cwtl
sub
cmp
mov
pop
je
movsb
rcl
mov
ljmp
sub
push
add
push
pop
add
mov
mov
or
xor
inc
popa
xchg
fwait
push
and
xchg
mov
lret
mov
xchg
ds
pop
cmp
adc
fmuls
and
hlt
iret
fimuls
mov
lods
test
sub
jmp
neg
xchg
fimuls
daa
lcall
int3
roll
xor
xchg
out
inc
dec
add
dec
mov
insb
dec
and
jl
and
and
iret
int
repnz
insl
jmp
ja
add
iret
adc
sti
mov
inc
dec
cltd
es
outsb
and
sti
jno
pushf
inc
inc
bound
aam
pop
xchg
add
or
pusha
lret
lret
xchg
mov
frstor
int
mov
int
fimull
mov
pushf
sub
ret
fistpll
sahf
les
jge
jno
sub
mov
outsl
lods
stos
popa
aam
jns
sbb
andb
pop
or
pop
cli
lret
mov
pop
inc
fsubl
movsl
sbb
fcmovu
jbe
lret
dec
adc
xor
xchg
jbe
ret
pop
sti
ss
mov
repz
pop
mov
sbbb
pop
es
mov
jo
cli
fldenv
mov
shll
sbb
imul
cmp
je
out
test
xchg
add
or
je
test
mov
xchg
adc
test
clc
sub
pop
or
sti
test
push
and
das
or
jmp
popf
jge
test
or
xchg
or
pop
sub
push
xchg
jbe
aaa
or
jb
loopne
jmp
popf
push
sub
call
sbbl
mov
add
mov
es
jmp
push
or
in
add
add
sbb
push
cmp
xchg
xchg
aaa
sbb
iret
popl
lock
xchg
jae
xchg
hlt
cmp
mov
outsl
jle
out
inc
mov
hlt
adc
mov
leave
out
mov
cmp
stos
fistpll
jle
int3
das
fistps
jne
call
fildl
mov
cmp
repnz
push
dec
push
int3
mov
jo
dec
call
and
div
gs
cmp
icebp
fs
sbb
push
fldenv
inc
cli
push
jmp
cmp
jmp
int3
in
dec
mov
mov
xchg
leave
xchg
xor
imul
notl
lods
pop
enter
sar
fadds
fsubl
pushf
mov
xor
mov
cmp
sbb
push
rcrl
adc
addl
jbe
fistps
mov
adc
and
sub
cmp
leave
in
push
sbb
or
leave
movsl
lret
push
jl
and
mov
cmc
xlat
sub
and
cmp
jne
shll
ret
cs
das
mov
data16
dec
jne
cmp
or
test
push
add
sub
fldcw
xor
or
jg
mov
wrmsr
xor
pop
out
inc
test
data16
cltd
mov
fucomp
or
bound
sub
dec
out
cli
dec
mov
push
out
clc
shll
xchg
add
and
imul
movsb
into
aad
ljmp
jns
nop
jecxz
in
and
inc
cmc
xlat
insl
mov
js
ficomps
jecxz
xchg
mov
pop
adc
and
fstpt
fcomps
sub
into
xor
gs
and
dec
bound
aas
push
dec
pushf
adc
jp
test
out
loop
adc
insl
std
test
les
mov
dec
lods
les
ljmp
cmp
add
fsubr
xchg
inc
inc
inc
lods
dec
and
inc
jns
pushf
pusha
mov
mov
or
xor
test
jns
push
lods
mov
mov
jle
mov
repnz
les
dec
sbbl
sub
cmp
or
das
xchg
xchg
inc
scas
mov
and
push
les
inc
xor
jge
lcall
mov
or
mov
push
jge
pushw
xor
out
pop
cs
adc
out
stos
xchg
add
fldcw
pusha
sub
add
fcmovu
pushl
filds
or
shrb
enter
cmp
sbb
stc
mov
pop
sbb
fisubs
pop
aaa
add
sti
mov
sub
andl
ret
mulb
dec
add
push
daa
cmp
in
add
add
test
test
push
cwtl
xor
inc
cli
and
pushf
push
mov
xlat
and
lret
ja
xchg
pop
sub
jmp
xor
mov
out
xchg
xchg
adc
call
mov
jle
jl
cmp
mov
lahf
inc
jl
mov
sbb
jp
push
stc
sub
pop
xchg
das
xor
xchg
leave
or
pop
xchg
in
xchg
dec
cmc
or
test
or
jle
outsl
mov
js
adc
int3
adc
cmc
icebp
or
popf
ljmp
mov
jbe
jbe
add
ja
push
inc
pop
adc
pop
xor
push
pusha
jo
int3
stos
fs
pop
mov
mov
mov
jg
fcom
lea
jns
jnp
scas
jno
adc
ret
and
push
cld
dec
aas
mov
loop
roll
stc
adc
xchg
xchg
and
popf
inc
dec
sub
sbb
divb
ds
lods
add
popa
xor
mov
push
sbb
xor
push
xchg
aad
and
add
and
aam
push
adc
cwtl
rorb
cmpsl
xor
pop
pop
pusha
add
adc
out
loope
xor
repnz
add
imul
dec
sbb
clc
push
inc
loope
or
xchg
out
mov
sub
aaa
out
scas
adc
in
xor
into
push
in
mov
adc
aam
push
sbb
xor
mov
jl
mov
dec
mov
les
pop
add
cmpsb
mov
das
xor
mov
rcrl
mov
sbbl
stc
mov
mov
bound
test
jbe
dec
jmp
popa
jo
and
std
rep
sub
mov
adc
mov
pop
or
and
xchg
adc
xor
push
mov
rorb
pop
lret
pushf
mov
rolb
out
and
mov
pop
rolb
cmp
int
iret
js
inc
cmp
mov
fadd
dec
aaa
inc
shl
adc
mov
orb
add
jle
xchg
xchg
xchg
xchg
dec
popa
jno
mov
imul
dec
pushf
xchg
mov
addr16
jbe
dec
enter
pop
add
push
mov
mov
inc
movsb
lea
pop
xchg
mov
pop
xorb
pushf
pop
sbb
rol
sbb
rcrl
out
jo
add
pusha
push
lock
xchg
rcll
xchg
roll
into
adc
sub
ds
popf
xchg
xlat
lds
sbb
jne
push
mov
cmpsl
inc
sbb
in
xchg
loopne
lahf
or
sub
or
push
call
sbb
sahf
into
push
cs
push
insb
xor
sbb
adc
and
or
push
out
add
in
xor
mov
inc
cmp
add
pusha
adc
data16
movsl
mov
xchg
je
fstpt
dec
test
call
subl
pop
stos
mov
pop
stos
lds
loopne
movsb
mov
notl
ljmp
ficoms
push
fldcw
adc
push
sub
mov
jecxz
jnp
mov
popf
push
mov
and
adc
inc
imul
dec
push
cmpsb
jbe
xchg
xor
movl
sbb
imul
cwtl
jae
leave
cmp
mov
cmp
push
jmp
adc
jo,pn
dec
pop
and
and
sub
js
vhaddps
push
scas
mov
movsb
adc
into
fistpll
push
sbb
aas
jno
xor
stos
stos
inc
adc
negb
mov
push
dec
adcb
push
test
out
sbb
inc
addr16
mov
pusha
sub
lahf
cmp
int
in
adc
jno
stc
popf
pop
movsl
mov
and
ret
push
cld
adc
in
jno
mov
cmp
roll
jle
lret
outsb
xchg
mov
stos
insl
mov
sarl
or
pop
data16
adc
dec
cwtl
inc
sbb
inc
ljmp
jb
dec
das
push
and
dec
int3
inc
cltd
push
aad
jae
pop
jp
add
xchg
roll
out
or
std
mov
cli
and
lds
sub
push
xchg
add
mov
testb
pop
mov
pop
stos
test
inc
or
pop
out
pusha
mov
lock
mulb
sub
test
dec
out
pop
jp,pn
clc
out
hlt
push
mov
cmp
pop
lods
mov
loope
dec
pushl
xor
lahf
int
in
xor
es
and
mov
addr16
inc
adc
jl
negl
nop
or
adc
test
xchg
add
mov
xchg
scas
int
add
sbb
cmp
inc
popa
or
fidivl
or
ljmp
aaa
cmpsb
dec
sub
fcmove
cltd
daa
mov
sbbl
ret
adc
mov
add
icebp
stos
pop
dec
std
jnp
mov
les
es
cvtdq2ps
sbb
iret
push
cli
add
mov
mov
loop
mov
push
pop
sbb
or
mov
in
dec
fstpl
or
es
pop
pop
mov
sbb
fnstsw
mov
pop
pop
js
mov
xchg
mov
mov
dec
test
mov
mov
pop
mov
cltd
repz
sub
and
popa
sahf
xchg
and
cmp
sub
outsl
js
addl
test
mov
dec
mov
ss
mov
pop
sbb
aam
test
push
cli
imul
or
mov
clc
mov
jbe
in
scas
push
sbb
cmp
sbb
cmc
repz
js
pop
adc
lret
mov
mov
xor
sbb
push
stos
pop
push
fwait
loop
sbb
add
sbb
and
add
cmc
pushf
inc
sbb
cmp
push
out
in
inc
mov
mov
fdiv
and
out
aad
sbb
mov
movsb
lret
fs
sub
cli
leave
sub
mov
dec
lds
sti
test
jl
adc
cmp
adc
adc
outsb
lds
bound
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
loop
adc
mov
addl
jne
mov
shrl
insb
adc
shlb
mov
mov
xor
popf
scas
sbb
sub
int3
dec
jp
mov
sub
rcll
mov
jnp
add
xchg
xor
cwtl
add
sbb
push
cmp
push
dec
in
imul
sti
adc
in
gs
sub
xor
dec
and
sbbl
cmp
clc
cmp
iret
inc
ret
inc
into
mov
add
leave
jp
xlat
rcr
mov
mov
dec
xchg
clc
cltd
jp
xchg
push
popf
dec
stc
mov
shll
jmp
xorl
shrl
enter
and
enter
pop
push
outsb
sbb
sub
jae
mov
cmp
mov
js
cmp
push
push
out
push
dec
jmp
test
jne
popa
or
push
adc
mov
in
pushf
repnz
nop
pop
iret
sub
push
cmp
loopne
jno
dec
aad
or
sti
sub
and
jbe
lcall
js
inc
cmp
pushf
out
rcrb
mov
int3
shl
pop
movsl
clc
das
movsb
shrb
adc
and
ucomiss
mov
sbb
jg
sub
mov
in
jb
cmp
cmpsl
pop
pop
daa
sti
sahf
js
mov
xor
pop
pushl
out
and
ret
inc
sahf
mov
orb
addr16
jno
fiaddl
test
mov
lret
fdivr
aaa
jo
adc
sbb
cmpsb
imul
sub
lods
add
dec
in
jae
mov
imul
je
mov
or
sub
and
fidivrl
outsl
fdivrl
xor
jle
inc
ja
jge
inc
pop
jnp
xor
jae
adc
adc
mov
ja
mov
jnp
aaa
xchg
in
inc
jnp
xor
pop
int3
jge
sbb
stos
icebp
fidivs
insb
or
scas
es
test
inc
push
jge
fs
outsl
mov
lods
imul
and
xchg
cmp
gs
cmp
and
mov
xorb
mov
incb
into
jno
pop
adc
mov
scas
std
sahf
mov
push
push
sub
popf
jns
xor
or
mov
xor
repz
rcrl
and
hlt
inc
call
and
inc
dec
inc
stc
fwait
push
mov
cmpb
test
cltd
sbb
mov
cmp
xchg
in
ret
xor
lret
cmp
movsb
addr16
jge
std
aaa
bound
jp
jnp
xchg
push
das
sbb
push
stos
push
mov
sub
pop
inc
stos
or
aam
jae
push
data16
push
dec
lsl
cmp
pop
in
add
jae
ds
in
dec
xchg
mov
ss
addb
idivl
pop
xchg
fcomps
xor
push
das
dec
aad
push
push
inc
lods
or
ret
push
sbb
hlt
in
repz
mov
cmp
les
or
call
call
push
call
scas
lcall
jb
imul
jmp
in
mov
popf
mov
mov
add
cld
test
xchg
inc
repz
movsb
push
jge
pop
sar
aas
adc
push
mov
mov
push
repz
push
mov
loop
push
xor
push
and
jnp
dec
add
das
sub
sti
repnz
leave
xlat
or
and
popl
mov
arpl
daa
aas
pop
cmp
shrl
idivl
ljmp
sub
loope
fwait
pusha
mov
and
loopne
dec
sbb
xchg
push
stos
sarb
sbb
add
ret
fistps
aad
aas
cltd
loope
mov
mov
sbb
cmp
mov
gs
mov
sub
imul
stos
cmc
js
stos
fsubr
pop
fdivrl
cmp
pushf
fs
lods
sbb
jnp
adc
js
rolb
xchg
test
dec
jecxz
sbb
in
adcb
xchg
orl
test
jecxz
aaa
mov
adc
xor
loop
jg
mov
fisttpl
jl
cmc
jns
fldl
leave
imul
mov
add
test
rol
shlb
jo
cmp
jae
sbb
sbb
daa
int3
jne
out
and
scas
mov
xchg
test
mov
lret
subl
subb
sbb
imull
push
sub
sbb
sub
xor
xlat
mov
or
nop
call
aam
aam
mov
sbb
inc
push
push
cmp
es
adc
mov
ljmp
jle
adcb
cmc
cmp
ret
outsb
lret
xchg
adc
sbb
cmpsb
sub
fnstsw
daa
inc
mov
cmc
aad
sbb
jmp
sub
mov
scas
dec
fisttps
in
pop
shll
inc
add
out
cmc
xchg
adc
in
int
push
pop
mov
push
and
push
mov
aad
add
adc
pop
add
outsl
jp
xchg
xlat
mov
sub
mov
push
divl
pop
add
and
adc
outsb
in
xor
push
or
out
movsb
inc
sub
rol
les
xor
sub
xor
jl
in
sbb
fnsave
cld
test
movsb
ljmp
addl
lds
shll
faddl
mov
push
sub
call
add
mov
dec
leave
jle
dec
testl
mov
fs
jbe
je
fistpll
lret
out
add
ljmp
add
lea
sub
adc
add
pop
xor
lret
cmc
cmp
or
roll
push
or
sbb
fsubs
adc
mov
cmpsb
mov
and
push
sub
dec
and
push
imul
jmp
pop
jge
out
mov
inc
adcb
clc
and
dec
cwtl
fwait
js
or
mov
lahf
hlt
cmc
out
mov
sub
dec
mov
inc
dec
cmc
pop
jb
and
push
lock
xor
sub
andb
cmp
dec
dec
inc
or
and
adc
adc
sbb
lret
dec
xorb
cmp
and
mov
ret
xor
or
out
sbb
pop
out
sbb
and
dec
dec
adc
cs
psubusb
sbb
mov
das
lods
out
and
dec
mull
lock
adc
mov
xchg
std
test
pop
enter
sbb
rorb
negb
gs
in
xor
sbb
enter
out
add
std
jp
push
fistl
inc
lods
mov
xchg
fsubr
int
pop
xchg
dec
addr16
mov
popf
pop
mov
or
adc
inc
int
add
int
mov
mov
mov
mov
daa
icebp
xor
fcompl
xor
imul
cltd
sar
fistpll
cmpsb
xlat
push
cld
mov
rcll
mov
pop
aas
sbb
sbb
ret
inc
or
ss
loop
pop
cmp
pop
push
inc
xchg
dec
sub
sti
cltd
jmp
inc
cwtl
mov
aas
inc
xchg
das
inc
js
and
outsl
stos
push
sub
push
outsb
jne
pop
enter
xor
fsub
inc
jmp
add
jnp
sbb
jbe
mov
pop
and
shrb
sarl
sbb
loope
mov
dec
xchg
mov
cli
out
test
inc
scas
xchg
cmpsl
and
clc
jge
orl
lods
popf
sbb
pop
das
shrl
fwait
mov
jl
test
sub
dec
sbb
lret
dec
dec
sarl
movl
dec
mov
mov
xchg
mov
nop
test
lock
repnz
rcrl
fstps
out
movsb
sarl
push
xchg
mov
dec
js
mov
cmp
leave
fadd
stc
enter
insb
dec
mov
sub
scas
jp
movsl
pop
lods
aas
lods
push
gs
enter
popa
inc
std
dec
xchg
jns
in
ja
or
jmp
pop
bound
fstpt
mov
loop
cld
jle
mov
cmp
dec
and
push
dec
sbb
sbb
adc
lret
pusha
pop
cmp
inc
ljmp
adc
aas
movsb
dec
mov
clc
add
jne
ret
xchg
adc
enter
xchg
push
cmp
mul
in
inc
xchg
push
and
mov
ret
mov
es
lds
sbb
mov
jl
xor
mov
and
dec
out
and
aaa
pop
sub
popa
push
dec
scas
mov
fidivrl
mov
mov
bound
aam
add
cmp
test
mov
push
call
insl
mov
push
adc
test
push
iret
lcall
fsubr
add
adc
or
mov
xor
aad
cli
neg
ja
dec
pop
sub
xchg
into
leave
adc
inc
int3
outsl
inc
popa
out
cmp
out
adc
mov
je
arpl
cmc
popf
push
ficoms
xchg
dec
dec
pop
and
shlb
inc
sub
mov
mov
xchg
ljmp
pop
rcrl
mov
sub
scas
or
fsubrp
daa
leave
mov
imulb
call
mov
pushf
push
lahf
cli
mov
cmp
mov
sahf
dec
inc
mov
lahf
xchg
insb
jo
aas
out
mov
nop
rcrb
xchg
in
das
jnp
les
cvtpi2ps
jb
push
imul
inc
js
sub
mov
xor
mov
int3
add
in
push
xor
jp
pop
scas
fldenv
cmp
cmc
sub
mov
ret
inc
dec
scas
mov
ss
sub
int3
pop
hlt
dec
sub
cmpsb
aam
hlt
mov
pusha
dec
lcall
call
push
test
jg,pt
xor
fidivs
pop
mov
add
cmp
add
and
daa
fbstp
adc
ds
addl
push
sbb
insb
pop
outsl
pop
mov
popa
bound
pop
mov
jecxz
push
mov
push
std
pop
push
jne
movsb
iret
in
mov
pop
lea
mov
add
pop
cltd
lret
mov
and
mov
pop
outsb
cli
adc
mov
add
adcb
clc
popa
je
cmp
inc
mov
ror
xor
notl
cli
popa
cli
js
cmp
shlb
push
or
mov
dec
mov
xchg
loopne
aam
mov
and
daa
lahf
xor
adc
and
mov
or
sbb
dec
push
adc
cmp
xor
xor
roll
xor
outsb
jae
fnstcw
std
pop
pop
les
scas
mov
push
jecxz
or
xchg
add
pop
repnz
xchg
jmp
inc
jb
fs
pop
daa
hlt
pop
fxch
loop
jg
inc
je
std
push
inc
loopne
jae
cmp
push
test
xchg
or
inc
outsl
gs
in
push
mov
cmpsb
popa
jno
fcom
xchg
dec
test
das
imul
mov
pop
sbb
rcrl
incl
or
insb
popa
jg
pop
lods
int3
shll
lahf
and
inc
daa
pop
mov
sbb
fisttpl
sbb
mov
int
rclb
les
dec
mov
movsb
mov
pop
loopne
and
jg
sub
aas
testb
inc
and
jnp
xor
test
push
iret
imul
dec
aaa
cld
sbbl
xor
rcrl
xchg
push
loope
or
movsb
and
jp
and
dec
js
inc
and
mov
sub
bound
xor
jbe
or
cmpsl
ja
and
add
push
xor
sbb
cmp
pop
outsl
cmp
add
aaa
shrl
jecxz
pop
mov
inc
mov
imulb
call
mov
or
push
or
imul
scas
sbb
xchg
aas
pop
das
and
jae
push
arpl
lret
insb
fisubs
push
jne
mov
insb
xchg
inc
and
dec
call
mov
xchg
scas
enter
push
in
mov
mov
push
dec
pop
daa
cmp
ret
sub
xor
fcoml
inc
lahf
cmpsb
add
pop
in
dec
dec
dec
imul
push
adc
sub
lea
testb
mov
bound
sbb
xchg
or
or
cli
adc
pusha
pop
es
loope
loopne
pop
sub
ljmp
add
shl
mov
fidivrl
jo
mov
jmp
cmc
fnstcw
inc
fisttpl
mov
ret
jle
pop
test
insl
sub
mov
sub
jb
jb
pop
dec
and
insb
mov
cmp
cs
rcll
popa
addr16
and
mov
add
cmc
repz
mov
push
push
dec
pop
lds
sti
push
lret
mov
push
out
insb
lock
imul
arpl
dec
adc
mov
pop
iret
adc
sbb
ljmp
movsb
insl
loopne
or
mov
mov
mov
out
push
fcomps
lock
repnz
data16
sti
sti
lret
loopne
aaa
xchg
mov
mov
ret
add
mov
push
inc
outsb
push
xor
xchg
sub
and
inc
mov
setge
push
in
out
cmpl
ss
jne
mov
daa
xor
push
lret
js
vpmulhw
popl
lcall
push
inc
mov
pushf
cld
setg
pop
dec
in
push
xchg
pop
arpl
shll
push
shrl
aad
in
ret
data16
mov
syscall
fadds
xchg
ret
out
sbb
jbe
xchg
xchg
sbb
arpl
and
push
ficompl
dec
adc
ret
out
push
mov
jle
xor
imul
mov
adc
xor
fidivrl
rclb
mov
nop
daa
pop
testl
dec
push
in
daa
out
dec
hlt
adc
cmp
cmp
les
inc
in
sti
pop
std
xchg
cltd
daa
mov
lahf
loopne
fimull
pop
mov
lods
nop
int
test
mov
cmp
ljmp
mov
repz
divl
lret
jae
jno
dec
out
orl
push
cwtl
leave
sarl
cmp
xor
cmpsb
into
mov
test
fmuls
repnz
into
jno
lds
sbb
cmp
lcall
dec
cmp
xlat
pop
scas
in
cltd
mov
enter
das
jecxz
sahf
inc
add
inc
inc
pop
outsb
adc
pop
aas
lahf
mov
add
xchg
scas
jns
daa
inc
inc
mov
loopne
push
addr16
ret
cwtl
jge
loopne
push
xchg
mov
sbb
out
sbb
mov
arpl
cs
fdivr
lods
pop
cmp
pushf
ja
xchg
cmp
test
xchg
jne
addb
inc
mov
pop
mov
or
xchg
jo
scas
push
out
or
aas
adc
add
xor
inc
push
adc
jb
ljmp
cs
movsb
inc
int3
push
das
sahf
int
jb
rolb
mov
call
sub
pop
adc
shlb
xor
ret
cmp
and
les
ss
push
sub
dec
push
add
jnp
fisttpll
xor
xor
inc
clc
aaa
mov
mov
push
cmp
pop
insl
or
adc
mov
aad
sbb
in
outsb
ja
inc
pop
cs
sub
mov
iret
mov
xor
enter
fistpll
addr16
mov
popa
stc
icebp
fs
xchg
inc
stos
ret
or
or
xchg
out
pop
jo
xchg
test
gs
mov
jg
popa
or
das
mov
jg
mov
scas
ljmp
mov
jne
xchg
mov
fsts
push
inc
cmp
push
jns
sti
and
cmpsb
or
jbe
push
mov
jle
or
push
imul
gs
push
loope
inc
in
lds
test
push
jo
ljmp
out
sbb
call
mov
sbb
adc
repz
or
xchg
add
mov
xor
jle
sub
fisubs
adc
adc
cld
xchg
inc
xchg
subb
xor
dec
xchg
pushf
repnz
push
mov
shl
inc
mov
jg
add
and
cwtl
cmpl
jo
sti
loopne
pushl
bound
into
in
lods
mov
and
test
xor
jne
cli
adc
out
loopne
xor
repnz
movsb
adc
jmp
sbb
mov
push
call
sub
inc
lock
movsb
test
je
out
js
insl
cmpsl
xor
pop
mov
mov
mov
mov
imul
imul
xor
push
xor
push
flds
in
sub
test
loopne
pop
movsl
mov
mov
and
cmp
cltd
mov
in
add
or
push
pop
xchg
inc
and
xchg
loop
pop
loop
dec
repz
outsl
stc
xchg
jne
shr
js
dec
pop
mov
add
and
js
push
adcb
lods
mov
out
shll
js
vmovaps
cmp
sbb
pop
cs
daa
movsl
adc
xchg
into
xor
out
imul
icebp
in
cmp
pop
lret
loopne
adc
mov
xchg
pop
pop
cmp
inc
push
push
outsb
ror
xor
rorb
stc
sub
pop
cltd
negb
rolb
jb
js
test
das
scas
pushf
push
add
and
and
and
je
cli
pop
pop
lock
roll
cwtl
pop
addr16
es
xor
insb
jb
incl
mov
data16
iret
movsl
adc
cmp
fstl
mov
enter
dec
xlat
dec
jns
push
or
jns
pop
test
pop
in
mov
cmpsl
and
xorl
and
pop
jp
cmp
cmp
jo
add
addl
roll
add
lret
shrw
mov
setle
xor
jae
sub
fucomi
imul
pop
xchg
cli
adc
xchg
lcall
jp
dec
inc
pop
xchg
gs
jb
and
mov
aam
subl
pop
repz
bound
lock
pop
hlt
cs
or
xchg
data16
js
lock
popf
sbb
out
call
cli
icebp
gs
insb
pushf
sub
xchg
dec
mov
outsb
sbb
jbe
xchg
xor
jb
inc
pop
out
outsb
xlat
sub
xchg
inc
pop
dec
xchg
pusha
sbb
jnp
xchg
cmpsl
xchg
ficoml
mov
iret
hlt
and
xchg
xor
sub
test
xor
push
pop
xchg
dec
jbe
inc
orb
inc
loope
cmpl
adc
jg
out
cmp
pop
inc
call
adc
mov
push
cmpsb
mov
mov
mov
fsubs
mov
mov
xlat
test
xchg
or
movsb
cmp
lret
cs
in
idivb
xchg
test
in
mov
xchg
das
movsl
jg
outsl
cmc
push
rorl
inc
sub
rcrb
xchg
mov
add
lahf
dec
mov
stos
mov
sub
out
mov
repz
add
dec
or
inc
push
imul
cmp
push
es
lock
dec
dec
push
dec
pop
or
fstpl
add
push
xor
mov
cmpsb
mov
popa
insl
xchg
xchg
sbb
xchg
mov
lods
movsl
sbb
add
movsl
repnz
call
fdiv
mov
cmp
ss
adc
xor
test
or
adc
mov
inc
stos
add
jmp
adcb
push
pop
movsl
test
outsl
into
jbe
jbe
jg
imul
movsl
scas
add
mov
jo
in
cli
movsl
lods
dec
pop
adc
loope
pop
or
data16
xchg
add
add
jae
push
shrl
loop
xlat
addr16
mov
rol
mov
push
stos
xchg
dec
in
pop
lahf
mov
and
repz
add
sbb
lds
xchg
dec
subb
xor
rcr
inc
mov
xor
xchg
daa
jno
scas
mov
xor
lcall
adc
out
movsb
push
jo
push
jmp
xor
ror
aaa
xchg
mov
push
std
and
push
lret
push
lahf
dec
aad
out
sbb
mov
pop
or
sbb
rcr
push
mov
lcall
imulb
enter
jl
lock
adc
sbb
into
push
mov
mov
mov
mov
outsb
sub
out
add
cmp
out
jbe
repz
adc
rcrb
mov
shr
pop
xchg
inc
hlt
jmp
insl
lahf
jl
adc
mov
mov
ret
loopne
mov
add
dec
div
js
cmp
push
or
clc
stc
les
push
add
out
clc
cld
int3
dec
mov
ret
and
sub
je
sub
fbstp
mov
mov
dec
sbb
leave
test
jns
cmpsb
xchg
jp
arpl
data16
aad
out
add
clc
add
mov
faddp
xchg
test
data16
cmpsl
inc
out
lret
outsb
mov
cmp
imulb
andb
xchg
and
in
outsb
mov
icebp
xor
mov
out
push
sbb
cmc
xor
dec
fnstenv
loope
cmc
movsb
cld
aas
mov
ljmp
and
imulb
pop
pop
out
and
mov
sub
aas
in
add
rolb
subb
mov
loopne
add
pop
mov
cmp
push
dec
xchg
pop
out
outsl
pop
mov
xlat
add
jmp
cmp
out
cli
leave
clc
or
adc
aam
jg
fistl
addl
mov
xchg
mov
insl
imul
xlat
icebp
add
mov
jno
or
mov
shr
jae
xor
sbb
and
iret
add
xchg
lcall
mov
mov
out
mov
shrb
movsl
push
xchg
jp
leave
pop
aas
inc
or
lods
pop
rclb
cmp
adc
xchg
ja
scas
nop
pop
dec
cltd
sub
arpl
in
popf
cmpsl
mov
sub
jno
out
fwait
xor
jge
ja
jp
call
fs
mov
in
fsubrl
out
inc
lea
jle
mov
and
pop
out
mov
adc
cmp
ljmp
shr
sub
inc
and
push
push
add
dec
sbb
and
xchg
mov
jno
pop
dec
adc
ficompl
cmp
fsubrl
add
loop
xlat
xchg
ret
sub
lret
es
std
mov
in
fxch
jg
push
jle
into
mov
test
cmp
rcr
mov
mov
inc
add
repz
cs
icebp
adc
dec
mov
loope
mov
push
ss
sbb
add
hlt
mov
and
sub
ja
dec
ljmp
shr
xor
mov
insb
aaa
sbb
fwait
jno
push
ret
test
xchg
pushf
ror
mov
mov
jbe
addr16
jg
sub
roll
lret
aam
les
in
and
or
jbe
pop
mov
pop
pop
aad
mov
or
inc
ljmp
jg
nop
fldenv
mov
out
push
bound
es
mov
hlt
pop
sar
fucomi
enter
jle
clc
adc
jnp
dec
add
xchg
ret
loop
add
cmp
insl
cltd
pop
or
scas
pop
cmpsl
daa
lahf
rclb
movsl
sarl
xor
movsb
pop
ds
outsb
mov
jnp,pn
scas
out
lretw
xor
or
fwait
mov
sbb
repnz
mov
sbb
xchg
pop
in
call
fldenv
test
dec
loopne
dec
andl
jne
rolb
aaa
repz
xchg
xchg
push
bound
pop
jle
sbb
mov
cmc
xchg
out
mov
dec
cltd
rorl
xlat
sub
sti
pop
mov
fs
data16
insb
jecxz
adc
add
pushf
stos
or
push
addr16
lock
outsb
stos
mov
jecxz
inc
inc
mov
xchg
sub
in
fdivp
fldcw
fwait
mov
cmpl
xchg
lods
pop
bound
and
fstl
js
movsb
cmpsb
inc
hlt
mov
fidivl
repz
mov
mov
inc
movsl
dec
sbb
ja
bound
lods
adc
rolb
push
lcall
adc
pop
insl
shr
and
int
xlat
cs
aad
push
dec
shlb
xor
test
imul
add
iret
add
xor
pop
rorl
fidivs
jnp
test
jge
lods
loope
push
in
adc
test
loope
inc
cmp
pop
mov
or
out
mov
addr16
adc
movsb
inc
xor
sub
lock
pop
push
fstps
pop
dec
xchg
adc
jl
clc
jno
adc
push
lcall
loopne
ja
mov
mov
add
lcall
jne
testl
sti
mov
ret
aad
xor
imull
hlt
lcall
xor
mov
movsb
aaa
dec
movsb
int3
lock
jb
push
sbb
lcall
mov
rorl
push
int
rclb
hlt
sub
mov
shll
cmpsl
pop
xlat
xchg
xor
mov
stos
loop
push
jb
mov
and
or
cmpsb
shrb
and
stos
pop
cmp
mov
pop
outsl
stc
in
nop
cltd
mov
sbb
jno
out
test
mov
pop
sub
nop
data16
xorl
movntq
pusha
iret
jg
lods
scas
jnp
cmp
xchg
jo
repz
push
dec
mov
out
cmp
enter
push
fisttpl
pusha
jecxz
rol
out
je
mov
loope
adc
sbb
inc
and
in
ror
gs
movsl
ret
push
shr
pusha
lods
outsb
jae
les
jno
sbbl
xlat
push
pushf
pop
out
hlt
stc
jne
sbbl
fdivrl
lahf
jg
mov
sbbb
iret
mov
shll
sbb
xor
pop
push
pop
mov
in
call
test
cmc
mov
dec
pop
xlat
addr16
rorl
roll
int
std
jp
jl
aam
sahf
ret
jo
xor
pop
mov
leave
ja
ret
lahf
xchg
stos
inc
pop
adcl
and
popf
fs
rorl
push
ds
mov
les
in
jl
jno
dec
out
or
sub
inc
and
add
test
dec
aaa
dec
adc
mov
mov
inc
insb
push
out
mov
rclb
dec
mov
mov
dec
cmpsl
xor
xchg
mov
into
mov
and
les
adc
mov
dec
je
ret
xchg
pop
daa
adc
xchg
push
mov
ret
imul
add
sub
push
xor
aam
fadds
jb
in
pusha
aaa
mov
icebp
and
adc
fcomps
push
pop
pop
sti
pop
sub
xor
xorl
sbb
dec
xchg
fwait
xchg
mov
push
push
or
or
push
xchg
popf
mov
sti
adc
icebp
xor
jmp
pushf
insl
push
pop
jmp
jno
sbb
jae
outsl
rcll
pop
into
rorb
push
test
loopne
sub
ljmp
stc
mov
fptan
out
mov
and
out
lcall
sub
xor
or
fs
in
add
in
dec
or
cld
loop
adc
pop
jno
xor
and
movl
enter
cmc
int3
cld
xchg
dec
stc
or
rcll
popa
and
mov
dec
hlt
mov
adc
jb
and
lds
es
sbb
movsl
out
cmpb
pop
stos
aam
into
cmp
mov
int3
pop
xchg
sbb
inc
and
mov
movsl
popf
jnp
cmp
add
out
and
mov
rcrl
shrb
leave
outsl
jb
cmp
push
mov
push
test
sar
push
sub
jle
and
mov
subb
mov
lea
mov
inc
ret
mov
xlat
pop
and
daa
and
loop
pop
inc
or
std
jo
inc
xchg
mov
mov
movsb
push
imul
outsb
loope
sbb
mov
out
dec
insb
mov
mov
int3
push
add
and
dec
lahf
dec
pop
mov
neg
in
xorl
jae
adc
mov
pop
push
jp
mov
out
xor
mov
lods
cltd
xchg
jecxz
repz
push
add
inc
push
addb
in
shrl
cltd
aaa
lea
and
daa
jmp
jnp
outsb
pop
jb
jle
xor
fidivl
jge
sub
adc
dec
pusha
xchg
mov
dec
mov
stos
hlt
out
inc
mov
or
inc
push
inc
or
cld
out
add
jns
int3
pop
into
call
mov
sub
inc
bound
lods
leave
or
ret
enter
loop
nop
repz
sub
adc
repz
scas
popf
lret
cmpsl
test
sbb
pop
add
push
xlat
jnp
mov
push
repnz
mov
sub
and
sbb
pop
andl
movb
mov
cs
subb
jp
jge
fidivs
dec
sbb
fdivrs
and
aaa
aas
jmp
jmp
ljmp
fimuls
daa
lds
idivb
mov
jb
and
int3
mov
test
push
mov
addb
jae
sbb
sbb
fadds
dec
adc
mov
faddp
enter
test
jecxz
lds
sbb
push
mov
add
jo
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
stos
lds
scas
addl
aas
int3
jge
lock
lcall
out
es
jle
fstps
sbb
aam
add
ja
popa
mov
filds
add
adc
push
cs
jo
xor
jbe
push
sbb
in
mov
mov
jns
ja
lds
xchg
push
jmp
xor
out
pop
in
xlat
xor
jle
jecxz
mov
jg
and
pop
inc
jbe
sbb
adc
movsb
mov
or
cs
mov
pushf
pusha
int3
sub
mov
mov
aam
jg
inc
pop
mov
addr16
sub
sub
cld
xor
fwait
movsl
addr16
add
dec
fsubrl
pop
push
jecxz
mov
add
cmp
out
mov
imul
call
add
rcrl
or
xorl
mov
cmpsb
mov
lods
jecxz
add
rorl
loop
roll
sbb
or
pop
xchg
push
jnp
adc
dec
test
loopne
and
iret
cwtl
push
clc
pop
repz
mov
and
ja
xor
or
mov
pop
ss
mov
js
inc
xlat
faddl
mov
sub
pop
push
in
jo
into
xchg
je
pmullw
ret
loop
xor
xlat
inc
pop
pop
negb
iret
mov
cmp
out
out
mov
jnp
fistpll
inc
dec
xor
mov
mov
sbb
imul
and
inc
imul
movsb
mov
leave
mov
and
mov
andps
cmc
mov
xchg
mov
add
stos
ja
int
js
add
aas
fbld
inc
mov
inc
mov
pop
push
xor
cwtl
mov
es
shlb
aam
in
lds
jmp
addr16
pop
adc
sahf
mov
rcr
sbb
jns
jno
scas
fstpt
add
jg
push
cli
lea
cmpl
mov
cmc
test
aas
xor
jp
fcmove
and
mov
push
ds
dec
test
out
pop
mov
out
roll
ss
cmp
pop
adc
cmp
add
push
popl
pop
lock
mov
xchg
lods
and
jl
and
xchg
fwait
dec
jge
xchg
insl
in
int3
loop
mov
popf
inc
es
gs
ljmp
ss
mov
mov
push
dec
and
dec
rorb
pop
jle
sbb
ss
jle
pop
jl
xor
scas
sbb
xchg
in
xor
andb
xchg
lods
stos
pusha
idivl
popf
sbb
add
sub
outsb
mov
mov
push
lds
push
lock
in
popf
pop
mov
jnp
jg
add
jp
fsubrs
and
mov
out
test
adc
arpl
and
out
out
ror
push
xor
push
test
fiadds
pop
sub
add
fistpl
and
aaa
cmp
fistl
push
mov
dec
rorb
xchg
add
cmp
mov
out
leave
fdivl
jecxz
sahf
out
inc
push
mov
data16
fisubrs
shlb
cmc
inc
gs
sbb
shll
jo
das
jbe
mov
bound
mov
or
cmp
sub
lea
lea
add
daa
add
movsb
out
clc
push
lods
aas
pop
sbb
iret
cmovne
fstpt
mov
sub
and
pop
adc
rorl
xor
push
mov
pop
pop
pop
negb
pop
fwait
jmp
lods
in
pushf
dec
jp
sbb
iret
xchg
cmpl
mov
int3
mov
adc
lcall
ja
mov
lret
inc
in
insl
repnz
xlat
xor
ljmp
xchg
les
sub
pushf
mov
push
sbb
lret
gs
ss
add
sub
mov
fildll
mov
or
mov
lds
jb
jge
jb
push
ja
pop
xchg
inc
dec
dec
xor
sete
in
lahf
mov
lea
out
fs
gs
into
adc
shll
jnp
jnp
mov
cmp
mov
xor
xchg
in
mov
std
xchg
ror
mov
cmp
lret
pop
fldcw
insb
push
andl
cmpsb
dec
shrb
and
or
and
mov
mov
scas
std
mov
and
lahf
mov
add
fildl
call
sub
pop
inc
out
cmp
add
inc
dec
inc
push
cs
push
push
mov
dec
and
scas
inc
cmp
jbe
inc
loopw
pop
popa
sub
outsl
dec
rol
icebp
xorb
jmp
sub
xor
pusha
jno
shlb
cmp
dec
and
pop
ss
int3
cld
mov
in
sahf
outsb
add
push
out
adc
jae
jmp
lahf
out
jo
mov
out
sub
mov
lock
inc
popf
push
fildll
mov
mov
into
push
inc
jbe
ret
ficompl
in
dec
sub
les
shlb
pop
sub
or
mov
fs
jns
cmp
inc
sbb
mov
shll
push
imul
rol
movsl
shlb
xchg
jo
jp
daa
popa
cmp
or
std
ja
pop
andb
fimull
inc
ret
mov
mov
out
cltd
xchg
push
jl
mov
repz
or
sbb
cmp
add
adc
aam
das
pop
pop
nop
xchg
scas
xchg
ret
jecxz
subl
sbb
jle
push
sub
pop
jnp
dec
orl
cmpsb
fidivrl
nop
jp
sub
or
mov
push
mov
xor
scas
pop
arpl
dec
xor
scas
or
mov
pusha
push
outsb
adc
ret
stos
adc
sbbl
imulb
lods
push
test
push
pop
movsl
push
dec
push
add
fisubs
pop
ss
push
adc
fdivl
imul
daa
pop
xor
pop
nop
bound
push
lcall
and
jge
rclb
mov
rol
sti
add
loopne
loopne
out
lcall
push
cmp
mov
inc
adc
mov
xchg
push
fwait
out
sti
fnsave
and
pop
add
xchg
les
stc
mov
popa
adc
ja
loope
es
cwtl
icebp
xchg
nopl
push
mov
test
cld
int3
xor
jnp
into
test
or
in
add
and
out
jge
cmp
and
sarl
push
ds
in
clc
and
loop
mov
fwait
push
mov
leave
push
add
dec
pop
cwtl
mov
pop
mov
test
jle
xchg
je
mov
cmp
scas
push
add
jmp
pop
add
adc
in
pop
fwait
sbb
cs
rorl
mov
filds
mov
or
and
rorl
dec
jge
das
sti
xor
pop
inc
push
test
mov
arpl
je
or
xor
movsb
cltd
loopne
ljmp
push
cltd
clc
cmpsb
in
lods
scas
inc
mov
jno
daa
clc
jp
test
lret
rorb
lds
push
cli
lret
shrb
decb
push
cmc
mov
mov
out
les
push
pop
bound
sub
imul
sti
out
mov
fdivl
and
jmp
push
fsubs
push
jmp
mov
scas
sub
xor
stos
ljmp
mov
and
jo
outsl
fucomip
adcb
xchg
xchg
fsubl
loopne
and
cmp
sti
mov
iret
push
mov
je
dec
fcoml
dec
adcl
mov
jp
mov
lds
std
sub
fiaddl
add
push
cmp
dec
xchg
mov
mov
aaa
inc
adc
shr
fnstsw
add
or
std
shll
or
test
add
loopne
jg
xor
loop
dec
sbb
stos
or
outsl
pop
xor
add
dec
mov
push
notb
fdivp
mov
dec
cmp
pop
in
and
rcrl
mov
insb
fcoml
mov
push
add
mov
push
sub
jg
add
push
repz
rol
lret
push
or
je
xchg
fistpll
jmp
cmpsb
push
pop
enter
xchg
fidivrs
mov
fdivl
dec
sbb
mov
cli
aas
outsb
aam
movzwl
pop
add
and
lret
mov
es
idiv
rcr
push
xorl
test
addr16
mov
cmp
lea
xor
in
fidivs
xchg
jmp
repnz
fdivrs
adc
in
imulb
mov
lcall
cmp
lret
cmp
into
cmpsl
cmp
jbe
dec
mov
rcll
loop
cmp
push
mov
mov
jmp
in
mov
out
outsl
fiadds
sub
testb
in
fimull
xchg
adc
js
sahf
sbb
cmp
lds
or
mov
les
push
lret
imul
xchg
sub
inc
push
out
cmc
ret
sbb
fstpt
add
arpl
imul
mov
popf
mov
out
lret
dec
std
fwait
jmp
add
orl
js
adc
clc
fdiv
in
gs
int
push
mov
les
fmuls
loope
in
pop
mov
jmp
adc
sbb
jge
stos
adc
jg
dec
inc
or
stos
push
std
cmpsl
inc
cmc
imul
out
lods
rcrb
xchg
pop
fstpt
gs
iret
mov
add
nop
enter
inc
in
push
testl
mov
mov
shrb
test
lds
fildll
sbb
xor
cmp
xchg
and
andb
push
sbb
xor
dec
jmp
ficomps
mov
sbb
or
test
mov
loop
push
mov
xor
pop
push
aad
scas
push
jne
ss
or
inc
fs
scas
hlt
adc
mov
mov
iret
mov
xchg
shl
mov
lods
add
mov
das
xor
jnp
mov
push
xchg
mov
roll
lret
mov
out
dec
insb
and
cli
cs
mov
dec
push
dec
stc
add
mov
and
fnstenv
adc
mov
lods
imul
stc
dec
cmp
dec
xchg
push
ja
mov
orb
lahf
loope
test
les
xchg
xchg
jno
pop
bswap
jle
mov
add
cs
and
cli
movsb
add
mov
sti
mov
push
push
mov
push
sti
sahf
aad
inc
lret
lods
jle
dec
imul
pop
insl
out
cli
lods
jnp
or
std
add
jo
or
out
jo
pop
test
jns
mov
insb
mov
xchg
data16
repnz
and
loope
shll
stos
inc
sub
ret
jge
mov
je
sbb
imul
je
mov
adc
mull
push
and
insl
mov
jl
loopne
stos
enter
iret
xchg
push
lret
lret
dec
lret
addr16
cwtl
test
mov
cmp
fs
pop
pop
mov
and
insw
fcomps
jbe
xchg
mov
xchg
jbe
imul
jl
loope
mov
jmp
or
add
mov
push
stc
xlat
bound
xchg
stos
jecxz
lds
lds
dec
addb
scas
xor
or
cmp
fistpl
xchg
push
int
arpl
mov
adc
out
sub
push
jecxz
mov
mov
sbb
lret
mov
dec
out
dec
push
or
jl
iret
test
fcmovb
and
shl
or
mov
lods
mov
jbe
inc
mov
jae,pn
mov
imul
jbe
in
xchg
xchg
icebp
jp
mov
xchg
and
mov
aas
push
push
imul
pop
sbb
scas
popf
dec
inc
mov
dec
jl
pop
test
popf
pop
call
loope
sub
shrb
adc
int
shll
jnp
and
and
leave
nopl
xor
call
shrl
not
leave
push
xchg
adc
mov
mov
jns
xor
scas
xlat
jge
clc
add
push
scas
sbb
lds
xchg
cld
xchg
into
cmc
jns
pusha
mov
out
mov
repz
mov
fisttps
lock
sbb
test
mov
pushf
loop
lds
add
popa
inc
xor
rcll
test
mov
nop
cmc
decl
mov
pop
jle
dec
popf
xor
pop
les
mov
scas
push
rcrl
cmc
jmp
test
xlat
cmp
or
mov
add
pop
jnp
test
into
sbb
leave
jge
mov
sbb
icebp
loopne
lret
fcmovbe
add
aas
iret
ficompl
loop
or
jnp
mov
pop
lea
xlat
pop
imul
sbb
xchg
fidivrl
pop
cs
mov
dec
cwtl
inc
cmp
stc
xchg
imul
push
cmp
and
push
pop
cmp
sbb
push
hlt
lds
xlat
mov
mov
in
imul
jb
addr16
addl
xchg
repnz
ss
pop
sub
and
xor
ret
mov
out
dec
stos
push
jne
popf
add
je
mov
adc
dec
insb
js
inc
fcomi
push
xor
gs
pop
mov
cwtl
add
and
ja
inc
xchg
xchg
dec
pushf
lock
inc
popf
notb
cmc
or
lods
push
sbb
and
into
in
pusha
and
pop
mov
daa
xchg
aaa
mov
push
es
scas
sub
data16
jg
cmpsb
pop
push
scas
push
cmpsl
push
or
push
inc
call
fistpll
sti
out
push
push
cwtl
jp
out
xchg
pop
push
fadd
cmp
push
pusha
repnz
push
mov
rclb
aad
cmp
lods
clc
mov
and
lret
adc
in
or
call
push
mov
test
outsl
push
iret
test
jp
insb
mov
test
std
mov
jp
mov
int
nop
aas
inc
xor
adc
xor
repz
int3
or
sbb
add
testl
test
cmpsb
dec
xchg
lds
xchg
adc
lods
mov
cmp
dec
mov
mov
fnstcw
add
shl
lcall
sub
xor
cmp
sbb
xor
or
push
inc
pop
data16
popa
and
mov
leave
insl
sarb
xchg
jecxz
scas
xchg
fnsave
in
shlb
adc
fadds
call
sti
xchg
je
pop
cwtl
loopne
xchg
loop
ret
rol
movsb
adc
insl
mov
in
inc
mov
pusha
stc
data16
add
fldl
pop
lods
jge
and
inc
mov
xchg
imul
fisubrl
mov
in
inc
and
sub
shrb
pop
ss
aas
or
int3
add
arpl
std
lods
repnz
jo
gs
rcl
and
jg
sub
leave
pop
aas
movsb
mov
add
inc
fyl2xp1
pop
and
dec
popf
pop
sub
test
scas
in
xchg
idiv
xchg
cmp
in
push
or
aam
ret
ror
cmp
fdivs
push
call
fistpll
push
cmp
clc
ret
cli
or
into
xchg
jg
sarl
xor
sarb
mov
stos
out
aam
cmp
push
std
mov
or
or
pop
lock
aaa
push
pop
je
insb
test
stc
dec
push
sarb
in
pushf
mov
add
pop
pop
pop
scas
into
dec
test
imul
mov
mov
dec
push
out
gs
jbe
inc
sub
into
cmc
pop
js
dec
mov
movsb
add
test
cmp
shll
adc
xchg
cmp
js
ret
hlt
or
popf
mov
jne
mov
xor
cld
adc
mov
sti
loop
roll
rorl
inc
inc
out
inc
mov
leave
xchg
sarl
jl
mov
shl
lea
push
loop
xor
xor
and
sar
adc
jmp
xorl
repnz
lret
push
int
or
mov
lret
lods
sub
add
lea
ja
xchg
mov
nop
and
inc
xor
mov
call
cmpsl
mov
dec
mov
lock
fs
mov
jmp
and
es
mov
imul
sub
jno
dec
enter
insb
sarl
push
push
scas
inc
or
mov
std
or
mov
psubsw
pop
scas
clc
lds
jg
xor
dec
fiaddl
push
sbb
pop
dec
push
pop
inc
repnz
push
nop
mov
xchg
lret
mov
jge
jno
pop
fwait
leave
cmp
fidivs
jbe
idiv
mov
lahf
xchg
fdivs
dec
fimull
test
bound
mov
lock
jecxz
dec
insl
ret
mov
insl
xchg
inc
mov
dec
pop
dec
xchg
cmp
dec
and
fildll
xor
adc
sub
popa
push
add
stos
inc
ret
add
dec
xchg
sti
push
pop
in
and
dec
sbb
mov
in
sbb
mov
idivl
jno
stc
add
mov
stos
pop
dec
pop
leave
ss
in
mov
imul
sbb
loop
mov
sub
jmp
daa
and
jl
xchg
sbbl
dec
popf
out
or
sub
mov
scas
mov
outsb
sub
cmp
push
icebp
push
dec
jge
les
cs
repz
xchg
stos
fsubp
outsb
outsb
ss
xor
mov
jmp
or
imul
daa
jge
in
jo
push
mov
out
std
mov
movsl
adc
push
hlt
and
repz
adc
push
dec
mov
push
frstor
inc
push
frstor
inc
outsb
xchg
lret
daa
or
jmp
jecxz
push
jne
adc
aam
mov
neg
decl
add
repz
out
jno
and
insb
aam
test
sarl
xor
in
mov
sbb
in
sub
xor
test
push
rorl
sahf
test
in
das
xchg
pushl
sub
mov
dec
ds
jo
fidivl
in
push
dec
jge
lods
sbb
sahf
lcall
aas
enter
jl
mov
xchg
enter
fstps
out
and
jns
jne
xchg
lret
push
stos
test
sbb
clc
xor
mov
dec
pop
push
mov
mov
mov
mov
mov
fdivs
jle
add
push
pop
ja
mov
adc
adc
pop
pop
jecxz
or
pop
pop
inc
and
insb
lock
add
lods
sbb
in
popa
dec
pusha
jmp
hlt
in
or
pop
xor
jno
mov
in
add
jecxz
sub
fs
adc
ja
add
mov
mov
pop
je
cmp
js
jae
outsb
call
xchg
inc
and
stos
aas
fwait
jo
push
mov
fchs
inc
adc
dec
loope
jnp
pop
imul
jb
outsb
mov
sub
xor
out
mov
xchg
jmp
dec
gs
fdivp
adc
stc
mov
xchg
lret
in
add
pop
and
push
mov
jno
lock
xchg
xorl
push
add
jns
lahf
mov
pop
int
mov
adc
lahf
repnz
mov
daa
lahf
cmp
dec
mov
shlb
inc
std
mov
mov
jl
test
or
notl
loopne
mov
mov
sub
jnp
lcall
pop
jl
pop
add
test
vpminub
pop
adc
into
rcrl
daa
lods
cmc
cmp
imul
pop
mov
or
push
sarb
push
lahf
daa
jb
pop
mov
test
dec
hlt
les
bound
adc
mov
jne
push
in
push
cmp
lret
mov
mov
lods
mov
sub
rolb
jne
lods
test
loopne
aam
adc
sub
and
icebp
shrl
mov
jmp
out
xchg
outsb
adc
push
jo
mov
or
fs
out
push
push
sbb
cmp
into
imul
pushf
fwait
xor
jp
and
adc
test
xchg
push
sbb
adc
jge
shlb
aad
je
xorb
fcoml
sahf
stos
jno
sbbl
clc
push
clc
inc
leave
fadd
push
jge
popa
pop
test
jo
loop
sub
sarb
cltd
mov
mov
cmp
inc
loopne
lret
xor
test
ret
inc
ja
std
sbb
mov
pop
mov
test
sbb
aam
out
andb
ss
out
bnd
js
mov
sbb
xor
dec
in
sub
cmp
fbstp
cmpb
sbb
lahf
xchg
inc
xchg
je
dec
mov
mov
sbb
lcall
inc
imul
repz
pop
jb
xchg
jb
pop
sub
loop
imul
adc
push
pushf
stc
cs
jbe
adc
leave
dec
jmpw
into
push
mov
and
mov
fistpl
push
clc
cmpsb
cmp
iret
enter
pop
aam
and
xor
mov
jl
pop
push
adc
lea
arpl
mov
fiaddl
mov
jo
mov
fdivrs
mov
cli
cs
sub
mov
iret
dec
jbe
dec
xchg
push
push
sub
cmp
pop
lahf
pushf
gs
std
mov
movsl
inc
mov
jp
sub
push
xlat
push
lret
xlat
jno
stos
xchg
stos
fiaddl
sbb
and
sub
movsl
mov
sti
or
xchg
cmp
push
xchg
push
pop
in
push
sbb
movb
stos
xor
sbb
pop
fldt
test
add
sbb
addr16
sbb
and
adc
mov
xor
xor
mov
xchg
mov
orl
dec
jmp
mov
popa
xchg
scas
shr
je
decl
daa
jp
aas
and
out
cmpb
sub
sub
mov
sub
sbb
fildl
call
and
bound
pcmpgtd
lahf
mov
pusha
std
mov
sti
cmpsb
iret
inc
lret
inc
lret
jmp
clc
mov
pop
pop
shrb
je
sub
fwait
mov
xchg
and
and
inc
xchg
dec
xchg
imul
jno
je
xor
add
and
cmp
mov
stos
aas
rcrb
jne
fbstp
jo
lods
mov
les
mov
push
or
push
xlat
in
pusha
out
les
shrb
xor
mov
jb
repz
mov
in
cmp
cli
dec
xchg
in
xlat
test
mov
enter
jae
outsl
mov
sti
int
or
movsl
inc
or
mov
and
shl
lods
jno
and
mov
std
jo
add
sti
mov
mov
fstpt
mov
repz
sub
nop
xor
or
js
dec
lods
jne
or
adc
push
ja
adc
mov
xor
xchg
xchg
xor
lret
sahf
push
stos
push
mov
fidivl
daa
adc
mov
scas
or
push
aas
test
mov
shl
cld
adc
in
pop
cmpsl
xlat
xor
popf
push
inc
mov
pop
call
dec
into
add
xchg
dec
adc
xchg
pop
xchg
xchg
xor
cmp
scas
sub
sti
repz
pop
in
xor
and
mov
out
adc
out
in
daa
sub
dec
lods
jae
call
fsubr
dec
call
imul
xchg
sahf
ds
pop
icebp
pop
pop
dec
adc
xchg
xchg
rol
add
jmp
adc
sub
stos
lock
inc
or
and
insb
std
mov
dec
fdivl
movsl
insb
lock
stos
nop
jle
loope
in
cmp
enter
xor
mov
imull
jle
daa
or
add
sbb
push
lods
icebp
lds
aad
add
leave
mov
repz
mov
add
xchg
sub
addb
xor
iret
sbb
sbb
sub
cmp
fbstp
in
mov
adc
and
lahf
inc
cmp
and
cli
mov
in
mov
push
add
lds
dec
pusha
xor
lea
sub
filds
mov
mov
insb
mov
out
dec
paddusw
aam
mov
adc
movsb
dec
pop
movsl
and
mov
cmp
shl
test
repnz
fdivl
aam
jmp
data16
cmp
cld
or
cmp
mov
or
insb
ljmp
pop
cmp
test
xchg
dec
inc
add
push
xchg
pslld
mov
out
push
push
fucom
push
paddw
in
jge
pop
jg
cmp
xlat
mov
sub
out
addl
mov
prefetchwt1
mov
mov
fldt
jnp
inc
xchg
cwtl
lret
shll
repz
arpl
mov
data16
push
lret
cs
popa
mov
mov
movsb
fnstenv
push
lret
mov
sub
and
push
or
dec
dec
jbe
sub
addr16
subb
jecxz
pop
jbe
or
push
dec
xchg
dec
lahf
dec
jp
loop
mov
mov
sbb
cs
mov
push
or
out
push
inc
shr
dec
push
popf
lcall
mov
rorl
inc
sbb
add
js
cmp
cmpsl
imul
in
addr16
test
dec
loope
cmc
aam
xchg
jle
jmp
int3
push
push
pop
in
push
stos
push
lods
xchg
movnti
push
pxor
cmp
ffree
pop
dec
push
enter
push
stos
stos
xchg
xacquire
int3
and
pop
ficompl
xor
and
pop
out
aaa
xor
in
or
int
shrl
add
lds
loope
pop
mov
push
fmull
push
fidivl
adc
inc
in
fmuls
dec
inc
stos
mov
lods
or
push
pop
and
out
mov
sub
jno
icebp
inc
pop
mov
in
sub
sub
mov
dec
mov
dec
call
jns
adc
pop
push
sub
add
jb
mov
cmp
pop
aad
mov
xchg
inc
fsub
fdivrl
lahf
repnz
rcr
in
push
jne
push
stos
dec
sbb
sarb
jbe
mov
outsl
mov
xchg
sahf
sbb
and
das
es
or
nop
popf
push
or
mov
dec
andl
repz
adc
iret
xor
push
rolb
ret
push
cld
rcll
xchg
pusha
cmp
test
lds
pop
dec
jp
mov
dec
fwait
push
mov
cmpsb
push
push
cmc
mov
cmpsb
sub
pop
pop
nop
xchg
mov
jmp
sub
das
pop
out
mov
hlt
lods
ror
inc
cmp
lret
por
xor
cmp
cmp
sub
loop
mov
push
pop
jae
xor
inc
je
mov
movsl
pushf
add
fmuls
in
dec
sub
outsl
movsb
nop
enter
cmc
pop
jne
test
fistpll
cmp
mov
cmp
xor
add
cli
stos
lds
inc
jecxz
and
xchg
out
jg
sub
inc
pop
test
push
repz
mov
xchg
mulb
icebp
push
xor
and
fdivrs
stc
aaa
repnz
outsl
ja
mov
cmp
scas
inc
or
jg
push
or
loopne
or
and
call
mov
int3
mov
mov
mov
add
jne
jno
xor
mov
push
mov
sub
pop
jmp
fwait
psrad
ds
and
sbb
fdivrs
insl
fadds
pop
xchg
xor
xchg
fdivr
and
int
dec
icebp
imul
test
jae
nop
je
lret
pop
sub
test
je
dec
mov
je
hlt
popl
into
ret
imul
cltd
jns
jns
jnp
sbb
hlt
lcall
ljmp
sbb
shrl
shrl
or
lods
rorb
xor
add
pop
sbb
imul
pop
xchg
fwait
aad
xor
ljmp
sbb
stc
jns
outsl
pop
jg
sbb
cmpb
fwait
inc
dec
lock
pop
in
fidivs
mov
dec
ljmp
mov
cmp
movsb
and
pop
gs
mov
inc
jmp
mov
lods
mov
sub
push
ds
xchg
enter
adc
xor
outsl
fwait
call
mov
ror
jne
ja
mov
insl
movsb
repz
xchg
pop
mov
pop
cmc
adc
xor
dec
pop
dec
jmp
pop
mov
mov
out
inc
ret
rcrb
and
scas
roll
push
dec
sub
push
or
cld
push
sbb
lahf
sti
jno
pushf
mov
dec
or
out
pop
push
jg
lret
pop
jg
jo
pusha
sub
je
mov
push
mov
and
mov
fsubs
pop
or
sub
aas
ds
xor
adc
les
jge
inc
nop
push
xor
jno
int
or
test
lods
iret
movsl
jno
rcrl
insb
leave
jns
sub
inc
or
mov
loop
pop
int
cmp
loop
movsl
sahf
add
fcomip
add
mov
test
mov
andl
mov
outsl
or
xor
fmull
cli
test
xlat
and
call
es
in
jp
ficoml
xor
in
test
sbb
inc
fists
mov
jbe
cmp
sbb
or
scas
insb
add
std
dec
hlt
imulb
idivl
lods
pop
mov
push
lods
push
sub
iret
push
in
dec
cmpb
sub
xchg
movsb
fwait
leave
clc
mov
mov
cmp
xchg
mov
arpl
add
sbb
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
mulb
adc
cli
mov
addl
mov
test
dec
xchg
bound
fs
test
jmp
xor
xor
cli
test
mov
mov
pextrw
mov
mov
xorl
push
aad
push
sbb
push
jl
aaa
jbe
andb
ret
xor
inc
mov
mov
sub
shlb
mov
decl
push
cmp
add
jne
and
pop
inc
jo
jne
aad
cld
and
idivl
leave
icebp
outsb
prefetch
mov
pushf
pop
jmp
pop
enter
or
mulb
inc
sbb
insl
insl
movups
out
sbb
mov
pop
repnz
cmpl
push
and
cltd
test
xor
shrb
rcll
mov
jp
inc
outsb
cltd
push
sti
adc
fldenv
add
or
and
lret
fxam
jmp
out
loop
add
shll
andl
inc
jmp
sbb
mov
push
dec
xor
mov
test
sub
lods
paddusw
dec
dec
mov
xchg
fldt
aaa
repz
popa
mov
insl
in
lods
out
pop
dec
inc
test
mov
or
in
pusha
es
mov
cmp
aaa
xchg
xchg
rolb
dec
in
jae
aam
jbe
mov
andl
movsl
mov
xor
aad
cmp
jb
jl
scas
test
dec
or
and
pop
mov
dec
sahf
loop
jmp
scas
cwtl
cmp
mov
mov
jo
out
es
mov
out
inc
adc
rolb
mov
xor
or
aam
inc
divl
mov
mov
xchg
out
sti
sub
shll
loopw
rorb
pop
cs
jae
push
mov
adc
sub
jae
pushf
gs
mov
mov
xchg
ljmp
lds
dec
push
icebp
jo
mov
sub
fidivl
lods
and
adc
sbb
jp
pop
pop
cli
mov
pop
outsl
jp
fdivs
adc
pop
mov
fdiv
dec
test
cs
cwtl
imul
insb
xchg
cmp
in
js
pop
imul
insb
daa
or
mov
movsb
mov
dec
inc
inc
jne
fcmovu
mov
dec
mov
std
daa
add
xchg
lahf
rclb
std
cmpsb
ljmp
mov
ss
stos
fiaddl
aas
mov
das
in
insb
cmp
in
or
push
sub
xchg
cmpsb
jmp
cmpsl
inc
inc
addr16
nop
rcl
fmull
scas
sbb
pop
pop
jle
adc
cmp
pop
jae
mov
cli
add
mov
mov
jecxz
outsb
xchg
mov
aad
fimuls
clc
or
in
cmp
adc
cmp
xor
add
cld
push
inc
iret
leave
dec
arpl
iret
and
add
mov
test
mov
cmc
bound
cmpsl
jle
and
pop
loopne
jno
sub
ficomps
cld
pop
mov
mov
push
push
mov
cmp
lret
mov
cmpsb
mov
jns
mov
bound
dec
adc
lea
pop
adc
pop
imul
lods
nop
test
adc
decb
stos
cmc
inc
add
mov
icebp
sti
sub
push
test
enter
aaa
jbe
sub
cmp
enter
insb
aam
cmp
ret
gs
xor
mov
push
dec
cli
push
frstpm(287
les
aad
call
or
or
rclb
xchg
xchg
add
sbb
negl
iret
sbb
mov
stos
scas
add
xor
mov
or
jge
push
rorl
pop
cld
dec
roll
and
mov
adc
outsl
and
or
cmp
outsb
in
ds
cmpl
ret
jecxz
gs
sbb
jmp
pop
adc
pop
jne
cmc
mov
arpl
dec
lret
sub
stos
repnz
lcall
xchg
mov
imul
xchg
or
imulb
imull
lea
sub
sub
jg
adc
cmp
push
cs
push
dec
fidivrl
lods
mov
rcr
in
sub
call
stos
hlt
test
mov
fadds
inc
adc
orl
mov
movsl
pop
pop
lahf
es
mov
sbb
outsl
pop
outsb
or
lcall
sub
cmpsb
jp
mov
out
pop
inc
dec
addr16
jmp
fwait
stc
mov
cwtl
stc
dec
fbstp
push
popa
push
xchg
xchg
mov
push
in
cmpsl
addr16
leave
and
shlb
test
lods
xlat
cmp
and
sti
insl
and
lret
insb
mov
jle
rcrl
mov
bound
cmp
cmp
jle
inc
fdivs
lds
fwait
cltd
adc
dec
les
sbbb
in
movsl
mov
scas
jmp
les
test
lcall
insb
push
mov
xor
add
shr
test
jl
stos
loope
scas
mov
jb
xor
jle
cmpsb
dec
jmp
inc
fdivl
inc
lahf
push
mov
call
insb
mov
shl
call
movsb
notl
lahf
xorb
add
xchg
jge,pt
cmpsb
mov
xlat
sbb
push
and
fs
push
adc
cmp
and
loopne
mov
rdpmc
jb
add
mov
rcrl
xchg
shlb
ja
lahf
in
jae
test
sub
enter
out
push
push
out
xchg
sbb
add
out
cmp
mov
int3
dec
scas
or
jno
out
mov
push
int3
pop
xor
dec
sahf
ljmp
xor
repnz
adc
and
leave
mov
mov
es
test
dec
dec
xor
out
pop
xchg
mov
lcall
fdivrs
jecxz
dec
out
vcmpsd
mov
cmc
fimuls
sbb
mov
rclb
mov
aas
jb
ficomps
movsl
jge
or
add
pop
sub
idivl
ficomps
mov
test
movsb
xor
nop
or
dec
add
pop
lods
repnz
xchg
xor
xor
mov
sbb
andl
je
lock
jg
pop
pop
jle
loope
aam
cli
outsb
mov
call
cli
outsb
xchg
or
sbb
sbb
cmpsl
sub
ljmp
push
into
aam
or
push
lret
mov
dec
or
cmp
adc
mov
or
aam
fmulp
pusha
repnz
lret
xlat
sub
fimull
jno
xor
cmp
dec
std
fwait
cmp
and
mov
mov
arpl
out
in
add
mov
cwtl
ret
push
movsb
jo
or
std
sub
inc
loop
in
add
sbb
dec
fimuls
cmp
jbe
pop
push
jo
push
cwtl
enter
mov
pop
cltd
lret
iret
loope
xchg
pop
xor
in
out
pushf
mov
stc
ja
mov
mov
rcr
mov
ss
fimuls
pop
mov
and
adc
je
iret
pop
iret
xchg
jnp
jno
xor
dec
inc
jl
sub
add
adc
sub
push
lret
or
xchg
push
xor
ja
push
sbb
outsl
test
aaa
dec
das
in
mov
and
mov
outsb
out
cltd
pushf
and
data16
push
jb
mov
orb
cmp
sub
adc
popf
cmpsb
lea
mov
mov
or
in
push
sti
psubw
dec
sub
pop
loopne
out
pop
cs
addr16
sahf
daa
incb
inc
clc
outsb
push
or
xorb
sti
mov
in
xchg
inc
add
sarl
and
jno
pop
pop
rcrl
xchg
pop
addr16
inc
sub
add
adc
sbb
mov
mov
enter
lods
lock
mov
adc
xor
pop
inc
sub
mov
aaa
fcompp
sub
push
xor
jge
ss
pop
sub
aad
xor
pop
iret
push
cmp
xlat
adc
rclb
bound
cli
xchg
adc
add
sti
out
cwtl
repnz
imul
mov
sbb
fstp
pop
dec
push
mov
lret
inc
push
dec
inc
mov
sbb
mov
xchg
cltd
adc
int3
jmp
push
xor
jge
cld
or
add
inc
stos
fistl
mov
imul
subb
adc
lret
pop
in
dec
adc
xchg
mov
push
cmp
jp
lock
push
mov
dec
repz
adcl
in
inc
pop
xchg
dec
lret
mov
pop
sbbl
add
ss
imul
and
push
mov
mov
sar
shrb
pop
pusha
mov
add
mov
or
mov
inc
mov
cmp
xchg
arpl
movsb
movsl
dec
mov
orb
sub
push
sahf
pushf
inc
add
imul
push
rclb
pop
push
lahf
add
sub
outsl
pop
jae
dec
not
lret
xor
adc
out
add
adc
std
pushf
test
adc
stc
movsl
pushf
lahf
sub
imul
cwtl
jle
inc
cmp
rorb
cmp
jnp
cwtl
xchg
sbb
sub
ljmp
sbb
imul
out
std
adc
and
jbe
pop
push
aaa
hlt
pop
ret
jmp
push
repnz
mov
in
pop
das
xor
insl
fimull
and
outsb
in
repnz
jno
jge
mov
fisubrs
icebp
cmp
mov
mov
inc
lret
gs
movaps
sub
sti
push
stos
sub
mov
jne
arpl
push
jnp
add
sub
test
mov
cmp
sar
int3
add
iret
mov
cli
or
movsl
imul
hlt
bound
fidivs
push
in
mov
rcrl
or
add
sbb
shl
sbb
mov
sbb
xchg
adc
fs
sti
cvtps2pi
std
mov
cmpsb
dec
inc
out
cwtl
scas
cmp
push
imul
mov
fcomps
lods
ret
push
cld
jp
mov
sub
sub
outsb
or
cs
aas
mov
popa
aaa
ja
stos
push
mov
imul
xchg
sbb
inc
lret
push
mov
ret
cld
in
cld
fwait
cmp
pop
fcompl
xchg
sbb
int
sbb
ljmp
mov
ficomps
fwait
and
test
jl
cmp
and
sub
ljmp
cld
xchg
mov
test
mov
movsl
sar
mov
jns
pop
insb
sbb
cs
mov
and
iret
jg
scas
or
pop
inc
jle
mov
out
xchg
inc
or
xchg
sub
pop
cmc
push
in
sarl
adc
sbb
sub
sub
fcomip
les
push
bound
mov
cmpsb
mov
notb
stos
mov
jge
dec
inc
dec
ja
jle
mov
addr16
mov
inc
push
icebp
adc
fldenv
push
insl
ret
rcrl
mov
insb
fwait
inc
jb
adc
mov
mov
cmp
xor
mov
inc
jp
sbb
lahf
out
cmp
stc
stos
xor
shl
xchg
pop
pop
sub
push
push
orl
and
fcmovnu
insb
mov
into
xlat
or
dec
sbb
dec
xchg
fcomps
lds
add
out
into
mov
lds
cmp
pusha
mov
and
xchg
inc
movsl
add
xor
cmp
inc
mov
mov
mov
popa
mov
test
jmp
stos
out
add
ja
popa
and
loop
sbb
lds
push
inc
test
xchg
jecxz
push
iret
xor
inc
lock
ds
and
mov
mov
outsb
pop
fildl
push
cwtl
mov
mov
out
mov
icebp
lahf
pushf
push
fwait
mov
xchg
jb
xlat
push
cmpsl
xchg
and
mov
sbb
cli
push
add
lea
xlat
neg
inc
sbb
lds
push
lds
enter
xor
add
mull
jmp
adcl
mov
mov
mov
and
pop
or
sub
cmp
and
orl
mov
std
adc
adc
testb
aad
push
aas
push
int3
outsl
sbb
cmc
fldcw
mov
icebp
push
cmp
cs
push
sub
dec
test
mov
lock
ljmp
test
mov
lea
mov
addr16
inc
fstl
xchg
jae
jb
pop
push
mov
loop
shll
cmp
jg
test
gs
loop
sti
aaa
pusha
inc
push
cld
jecxz
add
mov
or
lock
fcompl
repz
gs
out
sbb
lds
daa
ret
push
adc
cmp
into
sbb
push
movsl
and
test
sbb
push
xchg
lods
loop
dec
outsb
mov
shl
adc
and
mov
out
push
hlt
pop
rorb
mov
nop
loop
push
push
xchg
mov
pop
and
add
pop
xchg
mov
xchg
dec
aam
jl
push
into
inc
dec
outsl
dec
aad
pop
xchg
push
push
and
cmpsl
pushf
dec
loopne
aaa
lds
or
sub
jge
pop
rolb
cwtl
or
into
cmpsl
cmp
jl
or
mov
call
mov
movsl
aas
cltd
icebp
and
les
daa
das
or
xor
jmp
mov
push
sarb
nop
xor
lcall
and
stc
push
shll
sub
pop
push
xchg
ljmp
jae
fcmove
mov
inc
shrb
dec
or
push
adc
adc
iret
jl
mov
mov
clc
xchg
imul
inc
dec
push
insl
sbb
aad
ljmp
bound
lahf
lds
sahf
fmuls
mov
adc
xor
adc
cli
cltd
push
mov
rorl
xor
push
arpl
jp
int3
push
rcl
or
fwait
cli
mov
or
icebp
fidivrs
fwait
xchg
pop
lea
inc
push
ljmp
stos
push
add
stos
shlb
mov
imul
cs
adc
sbb
push
pusha
mov
mov
rcl
xorb
rcrb
pop
bound
pop
cmp
dec
jp
popa
dec
fnstsw
lahf
and
and
pop
pop
clc
push
dec
insb
andb
mov
pop
push
cmp
pusha
fdivrs
arpl
push
cld
ret
cwtl
adc
out
push
pop
dec
or
std
sbb
mov
mov
inc
inc
jle
and
ljmp
mov
shlb
adc
and
cmpsl
xchg
test
shr
in
sub
cmpsl
pop
in
jb
cld
ret
mov
lock
scas
repnz
mov
pop
mov
dec
imul
cld
mov
xor
jl
lock
jmp
sti
bound
mov
outsl
js
push
imulb
in
add
out
adc
jmp
sbb
insl
sarb
mov
mov
and
adc
or
cwtl
push
pushf
xchg
int3
fdivs
data16
insb
test
aad
ljmp
sub
push
xor
enter
mov
pop
pop
adcl
fdivs
add
push
das
rcrl
or
dec
xchg
dec
mov
jae
fcmove
fwait
xchg
adc
std
push
lods
popa
pop
in
negl
sahf
mov
inc
rcrl
dec
ret
add
mov
dec
cmpsb
das
leave
mov
cmp
pop
js
pop
ljmp
aam
jmp
sub
cmpsl
fdivl
sarb
mov
fimull
inc
mov
cmp
clc
pop
mov
cmpsb
xlat
dec
roll
aad
jnp
movsl
jbe
int
mov
push
add
in
mov
lea
add
stc
fimuls
loop
mov
pop
push
pop
filds
jnp
dec
jl
mov
add
lcall
repz
jbe
lcall
and
fisubrs
enter
fldcw
cmp
int3
jecxz
xchg
dec
xor
xor
add
dec
jns
out
pop
stos
jno
xchg
and
pusha
sub
ret
and
sbb
and
ljmp
or
mov
sub
push
sbb
cmp
sarl
mov
xchg
jnp
pop
enter
out
xor
push
dec
push
les
jle
sbb
sbb
adc
fsubl
dec
cmovbe
out
dec
je
ja
xchg
sub
shll
gs
popa
cmc
out
mov
pop
xchg
and
pop
in
add
andb
cmpsb
fdecstp
movsl
icebp
enter
das
adc
sub
test
clc
inc
jno
xor
mov
cli
les
push
add
mov
cmp
lock
popa
fmuls
push
or
adc
mov
hlt
pusha
ljmp
negb
lahf
jmp
lods
lcall
cmp
add
cmc
dec
outsb
cs
jno
mov
cmp
in
pop
cmp
mov
leave
jo
out
add
sbb
and
stos
jge
push
xlat
mov
mov
lcall
sarb
ficomps
push
sub
enter
xor
mov
mov
push
dec
cli
dec
das
in
loope
mov
int3
cmp
push
loop
test
loop
lret
xor
fldt
dec
mov
pop
ds
cmpsb
xor
or
lret
in
add
fsubrs
in
xchg
pop
mov
mov
inc
push
or
fmulp
pop
ds
ret
test
ret
adc
repnz
xchg
jp
cli
outsl
leave
and
mov
mov
mov
dec
fs
les
aaa
xchg
into
dec
xlat
mov
inc
pop
or
mov
insb
outsl
or
sti
call
addr16
das
xor
adc
pusha
lock
push
scas
pop
dec
jp
mov
xor
shrb
mov
repz
iret
inc
add
je
leave
lods
xchg
data16
or
jnp
cmp
fnstenv
daa
xlat
cmp
aam
push
xor
sbb
sarl
scas
frstor
jmp
jle
cmpl
xor
xor
xchg
mov
fimull
cmpsl
or
dec
mov
push
cmp
sbb
mov
cmp
cs
xchg
or
mov
in
test
xchg
xor
jno
std
pop
xorl
xchg
inc
push
xchg
pop
push
ja
cmp
adc
mov
mov
pop
mov
jmp
stos
push
test
aaa
test
loope
cmc
xor
nop
mov
adc
push
push
inc
ret
jp
add
dec
adc
dec
push
inc
pop
jg
and
decl
test
dec
mov
and
aam
mov
int
push
loope
adc
das
enter
fcmovbe
loopne
pop
jg
lret
sub
pop
lret
push
jle
jmp
int
pusha
mov
cltd
mov
es
push
push
ds
xchg
fs
lahf
jns
loop
mov
jecxz
cmp
dec
stos
fdiv
mov
and
lds
xchg
insl
adc
cmp
icebp
lods
stc
sub
les
add
dec
fcmovnu
scas
xor
or
daa
iret
mov
cs
sbb
std
xchg
shl
mov
jecxz
sbb
jp
clc
push
repz
push
mov
sbb
jns
xchg
jns
jae
mov
loopne
dec
cs
cmp
push
cmp
aad
or
dec
pop
mov
pop
push
jne
lds
mov
push
adc
adc
add
pavgw
pop
and
aas
dec
jnp
ja
fcomp
in
ja
or
xlat
xchg
movsb
inc
imul
clc
stos
cli
aas
pop
xchg
ret
int3
adc
fnstcw
xchg
jae
in
jmp
jg
aad
loope
fiaddl
push
rcrb
out
loope
add
mov
mov
aas
cli
sub
pop
iret
push
jbe
jnp
add
add
test
or
leave
addr16
mov
subl
adc
stos
jl
sbb
shrl
jmp
stos
xchg
inc
nop
je
jp
out
inc
xchg
stos
scas
xchg
and
xchg
xchg
cmp
fisubl
jae
dec
mov
push
jle
stos
push
out
mov
xor
stc
in
lcall
push
in
or
cs
pop
mov
mov
adc
fstps
cmp
test
cmpsb
les
inc
mov
shrb
lods
iret
jmp
push
ret
jl
pop
ret
pop
inc
push
sub
scas
sub
out
jl
mov
mov
sub
lea
mov
mov
cmp
popf
pop
or
inc
push
mov
cmp
push
insl
adc
mov
adc
push
mov
pop
push
dec
mov
rcrl
mov
jle
push
mov
mov
pop
leave
add
dec
mov
lds
bound
xchg
jmp
pop
push
addr16
shrb
xor
jb
jbe
xor
push
sarb
cli
out
ja
push
mov
cltd
sbb
push
push
sahf
dec
scas
enter
fdivr
mov
fidivrs
lret
adc
fs
xor
push
out
mov
hlt
jne
cld
stos
jbe
mov
sbb
in
dec
fdivs
enter
adc
lock
mov
push
aad
ljmp
pop
inc
bound
nop
enter
stos
dec
sbb
mov
popf
pop
xorb
addl
arpl
mov
subl
jl
push
ss
pop
push
lret
inc
push
call
stc
push
and
jecxz
outsb
pop
jno
test
mov
xor
test
or
and
mov
xchg
lahf
mov
test
mov
inc
rcr
je
aas
shr
mov
push
shr
cmc
and
dec
hlt
sub
popf
mov
aaa
mov
cmpsb
cmp
or
pop
incb
addl
xchg
add
add
pop
subl
push
mov
ficoml
pop
hlt
jo
inc
cmp
cmc
inc
aaa
loope
fistpll
xchg
in
jecxz
push
mul
mov
push
mov
push
or
jmp
popa
push
pop
or
mov
or
xor
xchg
push
and
mov
daa
jecxz
stos
add
add
xchg
sti
push
push
push
push
push
xor
xchg
jp
mov
cmp
loope
inc
push
clc
dec
cmp
mov
lock
mov
aaa
xchg
sub
jbe,pn
mov
lods
pop
cmpsl
sub
dec
ljmp
aas
iret
push
xlat
imul
xor
shrb
jno
ret
fisttps
push
sahf
sub
shr
jbe
mov
xor
cmpsb
pushf
ficompl
fcmovu
lret
mov
lret
cmpsl
mov
jl
imul
cmpsb
aaa
sub
jge
cld
enter
dec
push
adc
xlat
cmp
mov
sub
xor
mov
and
mov
loop
xor
adc
mov
repz
mov
nop
sub
and
scas
test
jmp
out
or
push
jb
pop
push
cwtl
cld
lods
rclb
lods
mov
jae
cmp
adc
fstpl
jge
iret
mov
sbb
mov
sbb
sbb
enter
popa
aas
rorl
xor
jmp
fcompl
rcrl
int
dec
nopl
lds
xor
cwtl
and
negl
movsb
sub
leave
jge
and
aaa
iret
mov
dec
pop
mov
jo
popf
andl
inc
push
xor
dec
rcll
xor
pusha
adc
subl
incl
pop
rorl
push
popa
xchg
jge
cmp
into
push
outsb
je
imul
add
cmp
cli
jae
dec
jns
fidivs
dec
mov
rol
inc
pusha
ds
cmpb
loopne
in
sub
in
ret
iret
xchg
xchg
cmpsl
mov
or
pusha
fs
pushf
in
je
adc
mov
sub
xchg
stos
push
pop
mov
adc
repnz
aad
adc
hlt
popa
lret
stos
cli
les
test
xor
fimuls
out
das
jp
and
adc
cs
xlat
cmpsl
inc
mov
sbb
jecxz
into
pop
pushf
dec
add
lahf
sti
push
mov
fsubrl
xchg
mov
adc
lret
adc
fnstsw
hlt
mov
stos
out
inc
lock
ljmp
pushf
mov
fisubs
ficompl
mov
repnz
ficoms
and
pushf
in
sub
mov
cmpl
aaa
jo
jne
add
lds
sbb
cs
or
pop
mov
sahf
pop
stos
cmp
out
sub
jno
adc
mov
sbb
adc
pop
sbbl
mov
outsl
push
cmpsb
push
jecxz
inc
inc
shll
jl
movsl
lcall
flds
xchg
inc
lods
mov
sahf
xchg
adc
sbb
mov
pop
sbb
sbb
fcompl
jge
ret
imul
mov
hlt
sbb
mov
imul
sub
shrb
imul
add
int
dec
icebp
cmp
subl
bound
jmp
push
inc
and
inc
adc
cs
inc
iret
lods
xchg
mov
insl
push
mov
stc
pop
adc
imul
rol
pop
repnz
mov
aaa
loop
mov
sub
jle
out
jmp
jns
xor
pop
cmp
les
pop
mov
jb
inc
nop
push
pop
jae
add
ds
jo
sbbl
pop
nop
imul
or
push
jbe
adc
cli
out
ret
mov
cmc
ret
icebp
loope
ja
push
mov
imul
ret
push
push
orl
js
out
jge
in
int3
outsl
cli
mov
mov
notb
xor
jmp
insb
lret
and
add
fnstcw
sbb
das
push
loopne
add
sub
sub
add
adc
add
jns
lock
add
dec
lds
sub
xchg
and
add
pop
out
std
ret
inc
pop
je
pop
daa
add
jecxz
dec
sti
add
imul
jl
xchg
fwait
sahf
mov
jp
test
mov
inc
mov
mov
push
add
cmp
xchg
and
pop
and
jge
pop
sbb
mov
into
mov
aaa
dec
cmp
or
lea
pop
aas
pop
mov
idivb
sub
outsl
fs
cld
and
cmc
mov
sub
mov
inc
mov
mov
daa
add
fmulp
outsl
imulb
jb
jne
call
iret
and
xchg
pop
and
subl
pop
lods
ret
sbb
cmp
sbb
ret
cs
mov
cmpsl
xchg
imull
in
ds
shl
xchg
mov
xchg
orl
daa
ljmp
mov
mov
jge
imul
ss
ret
or
outsl
clc
push
and
dec
imul
shlb
loop
jbe
gs
hlt
or
mov
push
push
mov
inc
lds
iret
add
jmp
int3
adc
lock
and
test
dec
outsb
cmp
fcoms
outsl
pop
dec
xchg
sub
adc
push
test
pop
loop
jl
cmp
out
or
push
call
in
cld
adc
ret
dec
jl
nop
rcll
pop
mov
pop
push
ljmp
stc
mov
or
mov
inc
das
adc
scas
icebp
and
fisubrs
sbb
xchg
sbb
out
jb
and
testl
adc
mov
xchg
lret
push
int
inc
insb
icebp
fs
sbb
mov
mov
mov
out
divl
outsb
icebp
adc
adc
push
hlt
insl
ja
or
int3
xor
in
in
inc
arpl
jnp
sarl
pop
add
fistl
cmp
jbe
adc
in
add
jns
popf
xchg
sub
loopne
into
jnp
pop
pusha
xor
mov
scas
mov
stc
xchg
push
rorl
pusha
mov
shrl
mov
cmc
insb
push
sti
sahf
jns
mov
fsub
int
sub
xchg
add
negb
push
sub
add
movsl
mov
loop
cmpsb
stos
sti
lds
pop
enter
xchg
fistpl
inc
jg
data16
in
mov
pop
repnz
mov
aad
fnsave
je
jg
pop
pop
lods
lods
in
inc
test
cli
lcall
and
adc
push
cmpsb
ds
fsubrl
or
sbb
insb
rcl
lea
jle
fnstcw
popa
lods
mov
sbb
insl
mov
test
push
cmc
mov
jmp
inc
clc
jecxz
dec
insb
sub
andb
shrl
jl
lock
add
sti
dec
rcl
xchg
mov
lret
mov
bound
jbe
lret
mov
aas
es
out
or
add
pop
bnd
andl
jle
rcl
mov
cmp
psubusw
hlt
xor
xchg
jae
sti
iret
fstl
sahf
out
ljmp
xchg
test
movsb
add
mov
mov
in
or
sub
and
jno
mov
dec
jbe
popa
sbb
notl
aam
fwait
test
and
dec
clc
in
mov
mov
sub
push
xchg
decl
jno
ds
mov
int3
cmp
adc
fcoms
sbb
inc
inc
out
int3
out
push
sub
stos
push
lret
andb
lock
cmp
mov
push
or
mov
cmp
push
mov
push
jecxz
mov
mov
in
dec
push
xchg
add
or
cmp
mov
insl
in
outsb
stc
outsl
xor
je
cwtl
adc
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
ds
cli
std
mov
addl
loop
bound
add
mov
push
cwtl
mov
inc
or
push
test
jmp
cmpsl
cltd
sub
or
inc
xchg
mov
xor
dec
bound
inc
mov
rolb
add
cmp
cmc
sahf
movsb
jmp
or
add
roll
add
dec
pop
pop
xchg
call
loope
and
cwtl
cs
push
push
jge
mov
mov
sub
mov
inc
sbb
cmpsl
dec
jb
int
mov
pop
add
jecxz
mov
xchg
imul
push
std
jecxz
pop
pop
or
lock
nop
push
and
push
jecxz
cld
imul
std
adc
jp
out
gs
jno
andl
insb
iret
insl
ja
and
in
push
lahf
mov
cmp
pop
mov
data16
icebp
adc
push
mov
popf
pop
pop
xchg
scas
jne
mov
aad
idivb
mov
dec
rcr
mov
movsl
mov
mov
push
hlt
cli
xchg
sub
sub
mov
icebp
dec
shlb
xchg
rcrl
lods
inc
push
mov
adc
mov
mov
sub
test
iret
sub
jmp
repnz
inc
neg
adc
rclb
sbb
in
mov
mov
dec
cmc
ss
sti
xor
adcb
mov
sub
clc
push
cmc
inc
dec
aad
mov
stc
mov
pushf
xchg
aaa
movsb
dec
stc
divb
adc
icebp
jg
cmp
lock
roll
mov
inc
inc
pop
icebp
pop
fistpl
fstps
fs
into
repnz
mov
sub
test
push
xor
sub
sub
push
in
shlb
add
adc
stos
jle
gs
lods
mov
test
cmp
jbe
addr16
mov
adc
stos
test
cmp
andl
xlat
fsubl
adc
ss
xchg
dec
lahf
sub
fistps
ja
test
int3
push
sub
push
dec
adc
in
mov
cmp
dec
gs
in
dec
sub
mov
call
lret
les
pop
in
scas
or
pop
cmp
rolb
lret
lcall
rolb
and
jb
pop
jb
mov
ret
cmpsb
gs
syscall
fsubl
cmp
fwait
add
or
sbb
aas
cltd
ret
inc
imul
fsubs
jecxz
xchg
mov
and
adc
adcl
out
xor
jp
pop
dec
push
ja
cmp
sbb
ljmp
fisubrl
xor
push
adc
int3
and
mov
push
lea
lock
pusha
cmpsb
xchg
sbb
fisttpll
push
hlt
or
mov
mov
mov
loope
adc
add
bound
aam
pop
in
rorb
cwtl
std
and
or
ljmp
push
push
popa
add
jge
into
jl
sub
push
jmp
mov
popf
xchg
inc
into
mov
adc
pop
jg
and
popf
nop
hlt
inc
or
jb
fldenv
jae
dec
xchg
mov
ja
pushf
mov
add
jae
mov
xor
mov
aam
pop
rcl
fistpl
add
cmpsl
or
arpl
mov
adc
or
xor
mov
add
bound
dec
hlt
cmpsl
push
jge
jge
in
mov
mov
loop
push
insb
popf
xchg
fs
xlat
ret
int3
mov
jge
and
mov
inc
cmp
lods
daa
xchg
sbb
push
insl
adc
xor
in
les
mov
movsb
in
mov
sub
xchg
fidivrl
jnp
sbb
jns
mov
or
pop
scas
cmp
cmp
dec
adc
fnsave
push
adc
enter
bound
xor
push
sub
stc
and
cmc
mov
icebp
test
incb
mov
js
xchg
imul
mov
push
jl
in
lret
subb
jb
popa
dec
nop
jns
inc
or
ljmp
pop
cld
xchg
and
test
jae
popf
popa
cmc
pop
add
jnp
popa
imul
push
mov
mov
mov
mov
push
ret
test
outsb
dec
push
sti
mov
out
pushw
push
mov
test
pop
enter
dec
adc
sbb
ret
inc
pop
out
loop
lahf
and
xor
imul
and
aaa
inc
sbb
and
and
ja
dec
imul
enter
mov
aam
icebp
movsl
mov
hlt
inc
and
sbb
pop
or
jmp
sbbb
gs
faddl
je
lds
xchg
dec
mov
mov
jp
subl
fnstenv
test
cmpsl
push
or
add
sbbl
push
adc
jg
fsts
call
lahf
les
sti
sub
fbld
push
jnp
lods
mov
jns
fldcw
pop
jl
es
and
push
into
jnp
jp
mov
int
inc
dec
pop
mov
push
inc
rolb
and
lcall
lcall
jecxz
pop
out
popa
aaa
mov
test
jge
xchg
lcall
jnp
insb
rcrl
jle
mov
xchg
arpl
mov
and
rclb
xor
pop
int3
mov
push
jle
test
sbb
cmp
xchg
jp
out
pop
mov
mov
xlat
out
inc
inc
test
cmc
cmpsb
shl
addr16
stos
inc
lds
insb
pop
dec
stc
mov
clc
push
loop
icebp
repz
push
shll
cs
inc
sub
inc
lahf
jg
adc
pop
inc
push
dec
inc
arpl
ljmp
cmpsb
push
push
repz
mov
nop
aas
jne
scas
sahf
test
add
lret
cld
pop
dec
daa
sub
in
inc
stc
add
aas
shlb
popf
rorl
xor
loopne
inc
mov
jbe
int3
or
and
push
mov
mov
daa
jmp
and
pop
les
sub
fldt
pop
pushf
lret
sahf
push
out
test
sbb
jge
rclb
loop
adc
outsb
shrl
inc
out
stos
cmp
inc
dec
xor
mov
sub
pop
enter
pop
cli
out
and
scas
jg
push
aam
and
mov
pop
sub
xchg
daa
imul
inc
mov
xchg
dec
or
mov
daa
addr16
jb
mov
mov
ret
push
adc
pop
inc
dec
out
mov
mov
jne
insb
adc
jae
dec
mov
insb
inc
fildl
fistpll
iret
test
shrl
mov
movsl
xchg
pop
xchg
xor
mov
pushf
jle
pop
dec
push
xchg
popa
jne
js
mov
push
push
sbb
dec
mov
movsb
mov
jb
fldenvs
jne
aam
ss
push
xor
dec
in
cmp
in
out
imul
pop
adc
stos
lds
sub
mov
ficompl
mov
pushf
in
mov
test
push
add
cmpsl
rcll
jg
les
cmp
jnp
jns
inc
icebp
sub
sbb
add
mov
lock
lea
xchg
jecxz
sbb
gs
fimuls
lods
dec
int3
out
or
adc
dec
andl
sbb
mov
add
int3
iret
lcall
cmpsb
pop
test
mov
and
xor
jmp
inc
pop
jne
xchg
xlat
in
pop
ja
loopne
cmp
popw
addr16
push
inc
idivb
adc
cmp
jecxz
pop
push
mov
xchg
xor
jmp
cmp
jg
daa
aam
cli
push
or
xor
cmp
mov
pop
insl
pop
stos
mov
inc
push
jl
adcb
push
mov
cltd
cmp
sbb
cltd
roll
mov
pop
mov
out
push
inc
rclw
sarl
fldcw
jo
imul
pop
jo
lods
hlt
mov
ror
jg
sgdtl
int
sub
mov
mov
push
mov
fwait
dec
inc
out
xchg
sbb
fs
test
hlt
and
mov
mov
dec
rcrl
scas
sbb
xchg
test
aad
lcall
sbb
jbe
sub
repnz
sub
aas
push
or
xor
dec
dec
outsb
cwtl
sub
lods
dec
mov
stos
mov
sbb
sbb
push
mov
adc
push
enter
js
and
jbe
leave
and
idivl
push
sbb
shr
lea
and
adc
xor
testb
jge
rcrl
dec
mov
popa
popf
lcall
aas
insb
lret
mov
test
lods
adc
fwait
lds
fs
add
sub
cmp
or
rcrl
inc
jae
in
addr16
popa
aam
hlt
and
lcall
sti
out
nop
aad
pushf
loopne
mov
adc
mov
mov
orb
inc
cmp
cltd
or
aad
idiv
dec
add
repz
cmp
stos
stos
xchg
lock
fisubrl
cld
out
cs
sbb
ss
orb
out
shlb
adc
out
jae
mov
je
adc
xor
push
rolb
pop
mov
sahf
jl
mov
std
pop
arpl
insl
xor
mov
divl
in
and
mov
inc
sub
pushl
aam
into
aaa
lahf
jg
mov
addb
stos
jl
pop
push
push
sub
or
ljmp
sahf
xchg
cmp
hlt
movsl
mov
xor
or
in
sbb
xor
jl
fdivrl
call
out
stos
adc
ds
out
jp
imul
dec
xor
scas
les
push
enter
and
les
call
xchg
pop
add
lret
into
push
stos
mov
or
xchg
inc
mov
int3
push
ds
out
nop
jge
ret
jns
into
adcb
into
inc
xchg
test
pushl
jp
mov
addr16
addl
cmpsb
xor
sbb
xor
jmp
lret
push
fst
push
cld
push
cmp
mov
mov
mov
pop
popf
adcl
adc
cmp
push
jecxz
xchg
jo
std
and
andl
xchg
js
push
fistps
out
andl
fs
cltd
xchg
add
fidivrl
lret
pop
cli
sahf
rcr
dec
sbb
xchg
aam
jnp
out
icebp
inc
sub
es
adcl
cmp
fsubp
push
add
cmp
shl
dec
push
arpl
insl
insb
cwtl
pop
add
int3
mov
add
pop
lret
jge
adc
btsl
sahf
xchg
imul
mov
lods
fsubs
push
pop
pop
popf
xor
and
in
mov
pop
jle
aas
push
sbb
fs
xlat
push
lea
pop
outsl
mov
mov
imul
dec
imul
loop
mov
out
pop
mov
xor
iret
mov
mov
xchg
dec
or
movsb
mov
xor
add
lock
push
xchg
mov
aam
aaa
lods
mov
jg
repz
push
enter
leave
push
loope
push
xor
cmp
add
or
mov
pusha
and
xor
ss
pop
int
push
adc
out
mov
repz
test
mov
sub
mov
pop
xlat
mov
jne
dec
shr
loope
inc
shl
pusha
ds
jle
sbb
fwait
pusha
inc
and
inc
jno
xchg
xchg
shl
mov
lods
out
cld
push
scas
xchg
xor
in
xchg
sahf
jno
inc
scas
jle
add
inc
sbb
sbb
pop
sub
cmpsl
push
sbb
sub
inc
bound
push
pop
addr16
lods
push
inc
lea
ds
sti
test
fwait
ret
mov
mov
add
mov
cmpsl
or
cmpb
addr16
fwait
icebp
test
in
lahf
test
test
scas
shrl
sub
mov
js
and
aas
repz
mov
jns
sub
jne
dec
sbb
std
xor
movsl
mov
outsb
cs
in
sub
mov
or
insl
iret
and
clc
inc
divb
xor
mov
icebp
dec
test
or
lcall
jne
std
add
outsl
iret
cltd
test
ljmp
in
daa
out
pop
in
lcall
sub
fdivs
sbb
inc
lock
mov
adc
xchg
cmpsl
or
pop
test
inc
cld
sbb
sbb
mov
test
mov
jmp
lret
rolb
adc
jno
xchg
adc
icebp
push
mov
xlat
clc
pushf
jns
jno
adc
movsl
mov
xchg
xor
movsl
fists
andl
mov
sub
or
cli
sbb
scas
aas
jge
push
jge
dec
cmp
mov
xchg
int
dec
cli
cli
lea
jae
dec
cmp
inc
dec
pop
mov
outsb
pop
shl
orb
pop
mov
push
or
cltd
sub
adc
or
in
cli
inc
jo
mov
dec
loope
faddl
xchg
cmp
xchg
leave
inc
xchg
cmp
mov
jle
lret
jge
sbb
and
xchg
add
fiaddl
cltd
or
mov
mov
outsl
aam
cs
mov
dec
idivb
mov
add
lcall
sub
xor
xor
ljmp
and
loopne
sub
xchg
in
lods
out
or
pop
jnp
leave
movsb
wrmsr
cli
and
cltd
jl
sub
add
dec
test
cli
movsl
loope
pop
hlt
push
ss
add
sbb
pop
xor
gs
repz
mov
mov
dec
xor
rcrb
movsb
dec
cmp
sti
and
outsl
scas
ljmp
add
pop
mov
adc
dec
jl
push
mov
dec
aaa
into
repnz
aam
inc
xchg
out
nop
xor
int
out
mov
shll
mov
lret
jns
push
mov
pop
les
mov
out
jl
enter
pusha
xchg
inc
push
test
mov
out
imul
shlb
pop
cmpsl
xchg
sahf
sbb
jno
push
sahf
sbb
pop
jecxz
insb
in
mov
push
pop
lret
mov
mov
stos
xlat
sahf
mov
fwait
xor
jb
lods
and
cmpsb
outsl
dec
sub
jp
push
nop
push
add
sub
inc
ljmp
push
lret
inc
nop
inc
leave
mov
pop
les
pop
ss
out
stos
mov
lea
repz
lret
sti
push
mov
cmc
mulb
fucomip
sarb
int
cli
int
subb
out
sbb
pop
lcall
xchg
in
lods
jb
mov
jno
mov
loop
icebp
rcll
aad
cmp
push
pop
dec
jo
inc
cmp
mov
pinsrw
enter
dec
inc
jae
mov
lea
push
lret
fimuls
jle
aas
lods
push
fincstp
lahf
mov
shrl
xchg
mov
mov
push
into
jo
imul
mov
int
push
out
nop
outsl
je
sbb
lea
dec
xchg
add
lods
popl
je
shlb
sub
or
fsincos
arpl
pop
jne
sbb
sti
push
mov
mov
mov
lcall
test
push
fldt
jbe
iret
insl
jg
cli
shll
and
mov
xor
cmpsb
ja
adc
jge
xor
sub
dec
js
cmpsb
push
pop
mov
mov
xchg
in
mov
sub
jg
and
mov
xor
cmc
adc
cmpsl
aad
int
test
mov
cs
aam
adc
pop
mov
cmp
test
dec
xor
pop
xchg
adc
sbb
imul
cmp
or
xchg
mov
inc
cmp
in
leave
dec
fwait
xchg
std
pop
mov
dec
push
iret
pushl
pop
mov
hlt
lock
xchg
mov
or
fstl
inc
pop
add
es
xor
cmc
jae
aam
popa
or
lods
popa
js
sbb
gs
or
and
jmp
push
movsb
ficoms
in
scas
fwait
lahf
or
dec
mov
mov
sub
leave
add
cld
lahf
xchg
insb
xchg
repz
xchg
rcrb
pop
mov
cld
ljmp
sbb
and
std
popf
loope
fldcw
in
xchg
inc
push
shll
sbb
pop
mov
mov
cli
push
push
int
shll
sub
push
addr16
jae
imul
adc
cmp
movsb
push
rclb
inc
movsl
in
mov
or
adc
arpl
mov
pop
dec
faddl
daa
ret
js
es
int3
fcomps
cmpsl
test
mov
pusha
and
xchg
push
cli
fldenv
cmp
lahf
sahf
fldenv
sbb
or
ss
mov
mov
xor
fadds
imul
enter
lock
push
rep
xchg
aaa
or
mov
fistps
mov
test
jbe
js
sbb
dec
xlat
mov
daa
adc
idivb
fs
negl
or
movb
push
shll
inc
push
or
or
andb
into
push
int3
ret
mov
push
jecxz
ljmp
sahf
jge
push
lret
xor
ljmp
mov
mov
push
jno
mov
jo
jg
lcall
mov
sarl
dec
imul
cmp
nop
icebp
push
iret
insb
inc
cmpsb
fsubs
das
mov
ret
inc
pop
inc
dec
inc
mov
aam
daa
aaa
mov
mov
shlb
aas
jbe
sar
outsl
dec
push
xchg
and
dec
es
cld
xchg
jle
inc
mov
push
push
aam
add
and
mov
outsb
es
std
ja
ja
stc
jmp
ffreep
mov
xchg
and
adc
stc
or
dec
and
inc
hlt
fbld
sub
dec
push
pop
xchg
loope
cmc
scas
jne
sub
loope
cmc
out
scas
jno
add
loopne
enter
push
sub
jno
and
sub
out
push
xchg
xor
mov
jge
lahf
add
mov
daa
aad
mov
daa
add
adc
adc
out
xchg
mov
mov
inc
cli
inc
in
sbb
mov
lock
lcall
lcall
daa
inc
fwait
mov
std
rcrl
pushf
xchg
and
stos
leave
shlb
adc
mov
imul
and
add
in
mov
dec
test
mov
fists
xchg
fsts
aad
mov
dec
notl
addr16
lds
test
fdivs
lods
cmpsb
and
lcall
shlb
sbb
aaa
xor
pusha
pop
popa
xchg
mov
xchg
mov
shlb
aaa
sbb
add
sbb
lock
mov
repz
sub
repnz
in
shrl
add
popf
dec
fcmovne
and
dec
xor
cmp
cbtw
sahf
cmp
or
push
mov
xor
mov
cmp
xor
pop
pop
jb
add
pop
cld
adc
repnz
movsb
mov
add
push
cmp
mov
xchg
sti
push
xchg
mov
bnd
leave
arpl
ja
stos
repz
push
or
push
leave
int3
mov
test
scas
xchg
inc
mov
and
and
ljmp
inc
ljmp
out
out
loopne
mov
sti
xor
repnz
xor
test
movsl
or
adc
fistps
dec
loop
mov
out
out
or
jne
mov
loop
mov
ljmp
dec
pop
sbb
pop
rcll
jp
repnz
adc
adc
out
cmp
and
or
movsb
sub
dec
xorl
sub
out
imul
outsl
inc
or
out
shrl
pop
mov
xlat
pop
ja
push
pop
dec
loop
pop
or
out
fisubrs
cwtl
dec
add
xchg
push
mov
dec
ja
aam
mov
sbb
stos
pop
xchg
or
cmpsb
push
div
icebp
push
inc
sub
hlt
aas
inc
adc
xor
cltd
pop
sub
jg
inc
ficoms
inc
fsts
stmxcsr
jae
mov
pop
es
add
push
or
push
and
jns
adc
ret
jmp
cmc
lcall
and
lcall
push
outsb
cli
cli
stos
xchg
test
lods
clc
adc
std
inc
das
mov
sbb
jo
std
jp
cmp
fbld
sub
shrb
sub
test
and
mov
sarl
mov
inc
pop
shrb
push
ja
aam
pop
dec
add
cmp
pop
loop
aam
fdivrs
inc
mov
mov
ret
xchg
push
int
add
push
in
je
mov
ds
cmp
jnp
cmpsl
aam
mov
hlt
inc
out
scas
and
and
xchg
inc
jbe
add
leave
sar
adc
dec
xchg
movsl
add
aaa
add
pop
and
pop
sti
mov
pop
mov
test
mov
add
decl
imul
notb
sbb
cs
cmp
xchg
insb
jne
lcall
pop
xchg
in
cmp
lock
bound
mov
scas
cltd
sub
pushl
jbe
add
fwait
xor
jle
pop
mov
loopne
aaa
data16
je
mov
cld
movsl
push
and
sub
pop
iret
sbb
fdivs
ds
mov
pop
push
push
stc
dec
or
lahf
loope
fldz
clc
je
adc
mov
fcoml
xchg
push
push
mov
sub
nop
sbb
pop
ret
xor
add
repz
fdivrp
mov
add
mov
xchg
outsb
loop
jecxz
dec
stos
in
rorb
mov
push
cmc
dec
ret
jo
daa
pop
aaa
jecxz
sbb
pop
das
sub
jne
add
and
cmp
pushf
lret
imul
adc
ret
push
leave
les
jae
cs
dec
test
dec
jbe
push
int3
insl
popf
fistl
push
xor
andb
push
cwtl
push
cmp
pop
cmpsl
pop
rolb
insl
sub
mov
cmp
push
fldt
xchg
adc
mov
imul
push
iret
andl
mov
jl
adc
sbbl
xchg
or
cli
mov
or
call
ficomps
push
int
movsl
cs
in
jmp
and
cltd
jne
fidivrl
adc
jmp
add
xchg
cli
aad
in
lret
sub
pop
test
inc
mov
jmp
int
or
adc
shlb
cmp
xor
dec
mov
int3
rclb
jne
mov
ljmp
push
pop
es
ja
cmp
or
gs
mov
sub
inc
sbb
push
mov
jae
inc
ljmp
cmp
dec
push
or
push
fdivs
xchg
int3
inc
mov
fbstp
aad
inc
lcall
repz
xor
and
mov
cmp
push
mov
xor
pop
adc
push
fstps
dec
ja
inc
shl
or
jo
xor
out
mov
sub
push
lret
movsb
adc
cmp
adc
test
jo
mov
sbb
jns
pop
mov
mov
jp
pop
rol
mov
xchg
sahf
out
movsb
fdivs
and
sub
fwait
sbbl
stc
mov
pop
add
mov
dec
dec
das
pop
or
stc
into
inc
mov
push
sahf
and
pushf
dec
test
add
aas
scas
mov
mov
mov
cmp
jns
negl
mov
jmp
es
mov
mov
dec
lret
sub
rcrb
aam
int3
dec
or
rol
mov
jge
stc
cs
inc
repnz
fldt
stc
pop
movsl
mov
xchg
sbb
mov
adc
nop
movsl
inc
mov
inc
dec
xchg
js
insb
cmp
pop
mov
add
jecxz
dec
adc
pop
andnps
daa
add
dec
mov
xorb
cmp
test
add
fs
adc
in
rorb
mov
dec
hlt
dec
sarb
rcll
mov
jbe
lds
adc
sbb
inc
pop
inc
gs
sub
mov
arpl
adc
jne
mov
movsb
cmc
bnd
jg
loope
pop
or
cli
add
add
aaa
leave
fdivl
cs
out
inc
rcl
sub
mov
nop
cmp
push
inc
or
xchg
xor
inc
cli
fnsave
dec
cld
push
push
add
insb
mov
fucomp
stos
aas
stc
pop
fsubrl
shl
movsb
jbe
xor
and
sub
adc
cmp
loop
test
and
loop
aad
aad
xlat
mov
inc
rclb
xor
inc
in
sbb
push
cli
push
in
daa
scas
scas
dec
stos
rcrl
das
push
fsubrl
inc
cltd
cmpsb
leave
pop
test
aam
mov
in
sub
es
cmpsb
scas
out
inc
cwtl
cltd
cltd
cs
push
xor
int
loope
fldcw
push
pop
cmp
dec
stc
add
inc
push
fldl
pop
jge
sbb
sub
pop
add
mov
sub
mov
or
fucom
cli
jmp
push
sbb
mov
das
lods
xor
dec
add
into
loop
or
pop
dec
test
push
in
scas
sub
aad
nop
mov
lods
mov
andb
jg
or
aas
jnp
pusha
and
dec
inc
dec
push
dec
pop
aam
loopne
dec
or
test
lahf
aas
icebp
sub
clc
sbb
mov
mov
pushf
push
jge
jnp
rorl
pmaxub
sub
loope
ja
jmp
adc
adc
cwtl
pop
pushl
rcrb
sub
outsb
push
into
out
out
cmp
mov
and
mov
and
sbb
xor
fucomip
shrb
out
jecxz
ja
lds
mov
or
rcrb
std
loope
movsb
jg
jo
inc
outsb
sbb
lahf
mov
int3
fldt
mov
or
ret
mov
mov
jnp
bound
mov
mov
or
cmc
cmpsl
or
outsb
push
shlb
pop
enter
pop
mov
push
push
adc
aas
sahf
call
outsl
jbe
jae
lret
xchg
fnstsw
fwait
arpl
xchg
cltd
pop
inc
and
mov
sbb
aam
inc
repnz
dec
lods
xchg
jmp
in
stos
jmp
stos
xor
mov
stos
test
adc
add
pop
mov
mov
lret
sbb
mov
mov
iret
xchg
adc
imul
add
fs
sbb
mov
shll
gs
shlb
mov
fbstp
sub
lahf
insl
add
movsb
inc
fldenv
inc
imul
aam
pop
xor
test
add
cmp
sbbb
outsl
ret
mov
pop
inc
pop
loopne
iret
push
xchg
and
cmpw
xchg
mov
sub
mov
in
out
jmp
or
repz
bound
add
dec
dec
xchg
dec
scas
dec
jge
imul
pushl
flds
mov
pop
loope
sub
pop
mov
fdivp
adc
inc
xchg
jb
sbb
inc
push
or
fdivs
dec
outsl
loope
lahf
loopne
imul
sar
mov
negb
xor
out
ds
mov
add
pushf
lret
test
sbb
jno
mov
in
sbb
outsb
mov
xchg
push
adc
mov
jns
mov
mov
dec
mov
shlb
test
icebp
push
adc
mov
push
jae
mov
mov
sbb
mov
cmp
aad
xchg
xchg
push
ds
out
xchg
inc
cmc
rcrl
mov
subb
mov
ds
push
add
mov
lahf
sbb
add
sbb
sub
inc
in
mov
mov
test
add
loope
push
inc
pop
xchg
or
jmp
adc
mov
out
adc
adc
mov
cmp
jmp
daa
or
xor
adc
sub
cmp
cwtl
pop
aas
insl
enter
dec
out
jae
xchg
icebp
xor
or
and
das
pextrw
call
fisttps
inc
divb
in
or
push
cwtl
movsl
je
lods
jp
inc
nop
add
in
push
cli
inc
outsb
pop
pop
mov
push
push
lods
sub
pop
dec
xchg
int
xchg
sub
lret
out
rcl
outsb
fadd
outsb
pop
int3
pop
mov
xor
or
xchg
lods
pop
jle
jg
ljmp
stos
mov
inc
js
and
loope
adc
cmp
cmpsl
imul
adc
aad
arpl
sti
cmpsl
fwait
add
pop
outsl
test
and
xor
insl
mov
push
mov
push
jge
repnz
xchg
fs
jl
lea
jae
sbb
pop
out
icebp
mov
out
outsl
fs
cmp
lea
push
pop
xor
mov
rorb
add
ficoms
es
cmc
shlb
adc
sbb
mov
sub
xchg
out
inc
iret
dec
push
pop
leave
mov
hlt
aam
fwait
jecxz
nop
add
lcall
jae
xchg
pop
mov
add
jb
repnz
add
xchg
adc
mov
or
daa
mov
cwtl
cmp
jge
lds
sbb
sbb
aad
pop
out
or
xchg
je
sti
or
stos
push
jb
pop
insb
inc
insb
xor
test
scas
cwtl
and
cmpsb
pop
push
cli
aam
adc
push
cmc
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
push
je
addb
sub
mov
xor
movsb
add
inc
mov
jae
add
lock
test
leave
cmp
pop
addl
insl
in
cmp
cmp
fsubrl
mov
adc
pop
das
push
mov
cmpsb
xor
pop
lret
inc
add
roll
push
xchg
aad
push
nop
dec
adc
lods
sub
mov
cmp
jae
movsb
std
gs
aad
jne
pushl
nop
popa
shl
fucomp
iret
movsb
mov
cmp
fcmovb
mov
mov
add
jns
xor
shlb
addl
in
mov
dec
popl
sub
out
aad
popa
pop
repnz
xlat
xchg
mov
lcall
mov
daa
mov
aad
pop
ror
mov
pusha
and
lahf
pop
out
repz
out
int3
add
outsb
aam
dec
sbb
aas
lock
pop
aad
fs
sbb
xchg
lods
rcll
push
int
cwtl
dec
sbb
test
dec
dec
enter
jb
mov
outsb
filds
push
pop
push
mov
xchg
push
jb
cmpsb
xchg
ret
adc
fmuls
xor
andl
sub
sub
test
jo
push
xchg
cmp
pop
dec
xchg
adcb
cmpsl
test
sahf
call
cld
vshufpd
je
or
fwait
jno
jecxz
ret
fcoml
rcrl
mov
push
shrb
in
cs
adc
push
divb
adc
out
xor
push
xor
ret
es
jnp
mull
sbb
popf
adc
sub
xlat
mov
mov
push
sub
or
fstps
add
xor
aaa
add
sub
movsl
push
cmp
mov
pop
dec
leave
push
add
es
or
shll
mov
jno
outsb
xor
xor
jp
stos
mov
sub
dec
jge
xor
push
xchg
outsl
dec
icebp
cli
ja
inc
pop
pop
mov
repnz
scas
out
test
xlat
and
sub
jo
in
cmp
xorb
cli
mov
mov
outsl
ret
test
out
cmp
mov
pusha
movsl
lahf
loop
mov
iret
sahf
dec
jl
xor
sahf
ret
add
pop
dec
xor
sbb
inc
inc
imul
imul
scas
xchg
push
lea
out
sub
pop
mov
mov
jo
lret
mov
fcomi
inc
pop
mov
aaa
mov
mov
std
inc
xchg
mov
jbe
mov
xor
or
add
pop
mov
in
aam
repnz
ja
loopne
pop
mov
sbb
dec
cli
outsl
sbb
pop
xchg
cmp
sub
add
aam
repz
pop
ror
xor
pop
mov
jns
lock
and
xor
js
xchg
jle
shl
ja
xchg
cwtl
sbb
cmp
mov
sub
aad
cltd
adcl
and
mov
sbb
push
and
xchg
and
pushf
ds
push
push
movsb
and
xlat
adc
cld
xchg
pushl
xchg
cli
lods
cltd
outsl
in
inc
ds
ja
fdivs
jp
or
xchg
mov
jnp
jg
incl
test
mov
insb
subb
clc
push
sbb
sahf
mov
pop
fsubl
jecxz
inc
and
pop
stos
jno
mov
or
nop
or
and
pop
xor
movsl
mov
lahf
inc
pop
daa
in
fisubl
and
ret
push
cmpl
insb
push
dec
sbb
lock
loopne
jns
sti
dec
lods
aad
rorl
imul
cmp
and
jnp
and
sub
xor
insb
pop
sub
xor
jle
dec
sub
scas
dec
call
inc
mov
movsl
ja
xlat
sarb
mov
push
loop
mov
lods
fcmovbe
mov
jle
stos
jb
jb
inc
lods
cltd
cmp
push
lcall
icebp
pop
jb
je
add
or
dec
dec
pop
testb
mov
je
mov
mov
sysret
sub
inc
pop
xchg
lods
insw
imul
push
or
insl
out
iret
testl
xchg
mov
stos
shrb
test
loope
xor
mov
sbb
andb
inc
fadds
js
add
enter
dec
add
jnp
jecxz
leave
shlb
pop
imul
cmp
stos
in
xor
mov
mov
enter
aas
hlt
adcb
jo
jg
sahf
das
prefetchnta
loopne
loope
aad
sbb
lret
push
mov
nop
xchg
mov
sub
cld
movsl
cmp
repz
imul
mov
inc
repnz
scas
cvtpi2ps
cmpsb
push
jbe
jne
mov
out
push
in
push
leave
and
test
xlat
into
and
dec
addl
mov
popa
push
inc
jl
ss
stos
in
lea
sub
pop
fwait
imul
imul
dec
inc
cld
les
lret
xchg
fstp
jl
outsb
mov
cmpsb
cmc
add
pop
xor
lret
mov
xor
push
cmp
inc
cld
aam
jbe
cld
stc
xchg
inc
sub
pop
mov
jg
or
mov
scas
add
pop
mov
lret
add
jb
repz
out
push
xor
and
daa
or
lcall
sti
jl
sub
mov
and
cltd
aaa
aad
cld
sbb
jb
jl
push
push
mov
pop
call
xor
pop
fdivl
push
out
loope
dec
cmc
add
mov
ret
aad
pop
imulb
pushf
sbbl
xchg
and
daa
hlt
push
or
int
dec
pop
adc
loope
push
cmp
stos
mov
cmp
into
rcll
pushf
xchg
mov
jg
mov
cs
mov
mov
jp
mov
clc
addr16
cmpl
push
xchg
test
sub
andb
out
enter
dec
loop
ja
mov
adc
orb
cltd
jne
pinsrw
sbbl
out
jmp
push
iret
xchg
mov
or
cmp
sbb
fcmovu
push
push
js
jae
in
fcomip
mov
lods
and
aas
cmp
xlat
loop
andl
imull
mov
push
push
push
daa
add
or
leave
sahf
stos
or
testb
push
pop
pop
rcrl
fdiv
notl
jecxz
add
mov
mov
jle
nop
xor
das
xchg
jns
test
into
inc
mov
std
scas
and
mov
gs
jmp
push
push
dec
hlt
sahf
jecxz
movsl
cmpsl
adc
xchg
and
testb
add
cmp
repnz
and
add
push
call
mov
sbb
fs
xchg
or
aam
cmpsb
icebp
cmpsb
out
add
in
jmp
mov
mov
xor
imul
or
push
pop
xchg
cmpl
fidivrs
fmull
jmp
daa
into
negl
in
jle
xor
imulb
in
pop
mov
ret
pop
shrl
mov
push
insb
add
outsb
xchg
test
fnsave
fstps
roll
outsl
gs
movsl
or
mov
pop
jne
push
xchg
call
jb
jae
or
mov
bound
stos
ljmp
loop
cmpl
arpl
fisubrl
fimull
nop
add
fisttpl
push
loope
mov
dec
leave
cmp
fimuls
insb
lret
jmp
aam
pop
push
dec
les
or
and
jl
and
jno
pop
jl
dec
and
filds
and
addr16
mov
lock
xchg
stc
mov
adc
insb
lock
sbb
ret
xor
adc
inc
mov
iret
enter
or
fs
xor
data16
mov
insl
push
sbb
mov
mov
inc
sarl
add
jg
dec
cmp
sub
addl
jg
je
mov
and
sub
inc
pop
inc
ds
mov
push
push
fdivr
mov
mov
daa
pop
dec
fs
sub
mov
iret
push
in
ret
sub
sahf
adc
lret
xor
push
arpl
cli
rcrl
cld
pop
lret
jmp
testb
sbb
aad
cwtl
cmp
lea
int3
jle
ljmp
dec
out
lret
int
jge
cmc
loope
push
xchg
adc
repz
sbb
xchg
push
adc
adcl
out
insl
shrb
add
icebp
dec
enter
sub
jecxz
pop
adc
rcl
and
push
lods
loop
icebp
std
mov
dec
es
pushf
std
pop
rolb
les
jo
sbb
mov
pop
xor
dec
or
mov
pop
push
pop
fcomps
aam
mull
scas
loop
bound
repnz
imul
cmp
enter
je
movsb
jmp
aaa
cmp
enter
mov
bound
lea
loop
sub
movsb
jno
outsl
inc
in
test
scas
mov
mov
test
ja
cmc
jb
outsb
in
or
inc
scas
inc
mov
imul
test
int3
mov
pop
cli
dec
add
dec
and
mov
aam
fwait
adc
outsl
cmpsl
sbb
sbb
push
jmp
and
push
dec
in
xchg
add
sub
fwait
lret
sar
and
sub
in
icebp
mov
sub
jmp
enter
loopne
adc
lret
jmp
stos
cmp
loop
inc
cmp
ds
andb
mov
xor
pop
push
pushf
shr
or
imul
bswap
or
lret
adc
xchg
add
clc
inc
add
cmpsb
getsec
lock
testl
psubusw
inc
hlt
and
loop
mov
xchg
pop
aas
int3
es
lahf
scas
xor
xor
dec
mov
test
or
jno
cmp
ret
inc
test
inc
xchg
jbe
jns
out
mov
mov
sbb
or
mov
loope
jbe
push
dec
jg
cmpsl
fistps
xchg
xchg
sub
jle
adc
fcmovne
into
sbb
dec
sbb
mov
mov
and
daa
jl
mov
loop
mov
shrl
push
mov
js
cmpb
icebp
pop
cmp
test
les
cmc
mov
xchg
jne
xor
iret
mov
and
in
sbb
ret
out
das
mov
jae
lods
adc
sar
nop
jnp
shlb
xchg
jl
or
jb
add
leave
imul
ret
xchg
lods
cmp
mov
aaa
jmp
loop
test
aaa
mov
out
in
movsl
add
sbb
outsb
mov
pop
cmc
push
pop
jmp
das
imul
lret
inc
fwait
rep
jge
mov
pop
adc
pusha
test
pop
sbb
notl
inc
inc
mov
addr16
push
adc
inc
xor
pop
movsl
push
xchg
mov
adc
inc
insl
hlt
mov
mov
fidivrl
lea
in
inc
nop
cmpsl
lea
aas
push
xchg
bound
pusha
jb
jae
mov
das
xor
inc
lods
addr16
lods
jb
fisubl
jns
shlb
hlt
pop
lcall
push
mov
cs
mov
cmp
scas
call
xchg
pushf
call
jno
lods
and
lahf
testl
iret
loopne
in
sti
insl
idivl
cmpl
cmp
pop
push
mov
mov
mov
push
mov
repz
out
push
jl
out
xor
sub
jmp
mov
movsb
mov
hlt
es
ror
push
repnz
jg
call
xchg
add
lock
and
adc
mov
or
or
pop
int3
mov
lea
out
add
int3
sahf
dec
inc
adc
adc
mov
es
cmp
jmp
mov
ret
mov
push
gs
loop
sbb
and
popa
xlat
pop
js,pn
loop
dec
xchg
or
mov
sbbb
repnz
daa
mov
mov
cmp
pop
pop
addr16
mov
dec
add
or
lret
add
xchg
push
je
stc
xchg
xchg
jg
dec
ss
push
push
dec
fs
jno
stos
cmp
gs
movsl
mov
js
jmp
xor
sbbl
stos
inc
stos
mov
inc
push
adc
not
push
stc
mov
mov
ljmp
mov
popf
pop
inc
jo
mov
lret
sbbl
xchg
in
mov
dec
mov
ja
test
je
cmp
mov
mull
mov
xor
arpl
add
push
xorb
nop
sub
and
inc
xor
adc
xchg
in
inc
jge
push
mov
jbe
push
cwtl
mov
adc
xor
xor
push
std
jae
popf
stos
pop
push
call
andb
sti
dec
jae
dec
imul
insb
les
add
mov
ficoml
imul
mov
test
mov
mov
mov
lea
sub
xchg
rorb
rorl
int3
rcll
test
insl
or
sbb
cltd
insl
sbbb
mov
dec
sarb
and
jnp
cmpsl
mov
out
sbb
pop
daa
orb
repnz
inc
arpl
jae
aas
cmp
sbbl
sub
shll
fucom
add
add
lahf
imul
in
jnp
jecxz
jb
scas
out
mov
add
lods
adc
push
dec
ja
js
insb
cmp
in
cld
ss
lods
dec
mov
mov
mov
mov
jl
mov
jmp
fdivrs
lods
sub
out
in
sbb
rclb
jnp
push
add
mov
repnz
sub
xor
shll
jne
repz
scas
mov
ljmp
aas
mov
xor
sahf
pop
fnstenv
es
pop
imull
pop
pop
pop
std
repz
scas
mov
loope
pop
xchg
push
pop
jo
cmp
jle
adc
mov
xchg
scas
add
add
sub
sbb
mov
enter
insl
cmp
xchg
int3
xchg
pusha
adc
daa
je
flds
pop
iret
test
mov
mov
bound
sti
aaa
add
leave
xchg
pop
fucomi
bnd
int
ljmp
cmp
cmp
pusha
inc
ret
push
push
out
lret
fldcw
add
push
pop
sarb
jle
push
mov
sub
test
jns
iret
mov
out
mov
and
cmpb
xor
xor
in
xchg
mov
loopne
das
jo
adc
ror
pop
loope
loopne
xchg
cltd
add
mov
mov
cli
stos
push
or
imul
out
fucomi
aam
cmp
mov
mov
cmp
xchg
inc
sahf
outsb
inc
rclb
dec
jge
xchg
adc
pop
sti
xchg
xor
sbb
cmp
pop
mov
pushf
jo
jne
and
mov
sbb
mov
jg
neg
mov
loope
inc
add
push
jnp
push
fwait
mov
and
jge
and
add
fldl
cvtps2pi
adcb
add
add
loop
dec
stc
xchg
fstpt
sbb
mov
mov
fadds
xor
jle
out
call
jo
pop
pop
dec
adc
cmp
inc
sahf
pop
pop
jae
loopne
push
xor
icebp
dec
test
jl
and
mov
clc
int3
mov
and
cmp
out
mov
sub
jmp
sbbl
lea
pop
gs
decl
sti
test
add
xor
dec
mov
fcmovne
xchg
push
pushf
movsl
scas
xor
xorb
cmp
sbb
mov
fdivs
bswap
rolb
dec
test
xlat
mov
pusha
mov
imul
jp
cmp
test
cld
test
jmp
int
inc
lds
mov
pop
cmpsb
mov
daa
sbb
sbb
lret
fisubs
push
xchg
dec
dec
push
repz
repz
cmp
fmuls
push
and
mov
ss
mov
js
ret
dec
and
unpckhps
in
jle
insl
xchg
ret
mov
into
jb
out
and
sbbb
daa
jl
insb
outsl
cmp
stos
mov
xor
push
jne
ja
sbb
cmp
aam
test
iret
lods
insl
test
pop
jno
xorl
sub
xchg
loop
cmpsb
in
ljmp
mov
popf
jge
push
das
sarl
ss
xchg
mov
pop
repz
xor
test
aas
pusha
push
dec
nop
lds
cwtl
lock
loopne
adc
dec
xchg
int
cmp
add
adc
fcmovne
mov
xor
rol
orl
je
insl
ss
mov
lahf
sbb
dec
mov
mov
push
add
xchg
loopne
mov
pop
dec
cmp
mov
pop
testb
pop
jg
cmpsb
and
ret
pop
sbbb
out
or
subb
popa
push
jne
push
cmp
pop
xor
scas
lahf
mov
lahf
into
pushf
outsb
data16
xchg
je
mov
sub
repz
pop
xchg
fdivs
jae
push
push
mov
sbb
call
cmp
mov
push
cmpsb
out
fistpll
movb
jmp
inc
repnz
adc
cmp
push
push
rclb
jmp
sub
fstpl
push
jmp
aaa
mov
lods
rolb
mov
dec
xor
scas
push
dec
xchg
scas
pop
mov
push
jmp
shlb
xor
push
and
fnstcw
aad
jne
scas
mov
jns
xorl
xor
xor
decl
push
ret
inc
shl
push
rcrl
mov
jno
xchg
jno
push
je
sbb
cmp
cmpb
sbb
imul
adc
sti
fstl
jecxz
mov
fldenv
add
ret
xchg
jp
mov
adc
nop
or
jg
lahf
popf
rcrb
scas
fcomp
imul
ljmp
rcll
push
adc
std
add
stc
movsl
cmp
adc
ret
sub
cmpsl
and
hlt
sbb
daa
addb
insl
outsb
sub
loope
jle
arpl
xor
fsubs
jnp
jmp
mov
adc
stos
dec
mov
shll
test
sbb
xor
pop
inc
push
ss
dec
lods
outsb
cltd
and
cmp
leave
test
inc
icebp
xor
adc
and
jmp
movsl
dec
sub
test
mov
aam
aaa
mov
cli
mov
in
test
movsb
add
sub
inc
int
inc
cs
adc
push
dec
mov
popf
add
mov
outsl
aad
cmp
dec
dec
mov
cmp
push
call
add
inc
fiadds
mov
push
out
scas
loope
mov
cli
dec
sub
and
push
add
jns
lcall
in
sub
or
jae
xlat
fisubs
add
dec
add
add
jnp
in
cmp
insl
sti
lcall
mov
test
insb
mov
outsb
jecxz
add
inc
pusha
les
or
xor
js
imul
lahf
dec
out
cmp
dec
sahf
sub
or
jno
ret
mov
jo
pushl
aam
repz
inc
xor
addl
clc
cmp
xor
mov
cmpsl
dec
cmp
jle
xor
sbb
out
iret
mov
scas
jp
lds
dec
fs
aas
xchg
cmpsb
shl
mov
sbbl
adc
inc
and
pushl
jp
sbb
xchg
leave
jp
das
clc
dec
or
ret
add
dec
xchg
call
sbb
cmc
jns
loop
mov
pop
loop
sarl
xchg
and
inc
inc
mov
mov
jg
push
outsl
int3
jl
mov
pusha
and
out
imul
lods
jo
add
mov
add
and
in
mov
mov
or
pushf
inc
fs
andl
mov
aad
sbb
ss
pop
lods
add
mov
orl
scas
ror
iret
or
cwtl
add
popf
leave
pop
jmp
pop
pop
jl
in
xchg
jnp
test
push
adc
outsb
test
adc
fs
jmp
popa
mov
sti
fs
rorb
aam
mov
arpl
enter
xlat
out
push
mov
adc
pop
repnz
jmp
inc
or
or
ja
pusha
ret
sub
repz
fsubl
test
cmp
or
andl
je
lock
nopl
jae
loopne
test
xor
sub
cmp
scas
mov
lret
xchg
stos
fsubs
xchg
jb
jb
movsl
push
int3
mov
xor
push
push
stc
sub
push
xchg
iret
push
adc
cmp
inc
mov
add
fisubl
out
sahf
xchg
arpl
test
xor
popa
xchg
out
sub
cwtl
dec
scas
adc
data16
in
int3
dec
fmulp
rorl
mov
adc
sub
pop
and
movsb
push
in
sbb
pop
jae
loopne
popf
xchg
int3
jnp
or
stos
mov
stos
push
aad
ret
or
in
ficoms
mov
push
out
popa
negl
and
add
sbb
mov
test
jo
outsb
dec
push
dec
mov
or
or
clc
mov
jmp
mov
lock
popf
push
lahf
xchg
ficoms
cmc
jp
inc
addb
jmp
and
cmc
mov
inc
pop
pop
mov
mov
in
cmp
enter
inc
jbe
fs
imul
or
jnp
jmp
lods
aad
dec
call
jge
inc
xor
std
adc
cmp
push
cmpsl
aaa
cltd
mov
xor
das
ss
jl
jle
clc
mov
mov
sbb
add
mov
adc
rol
jge
and
jno
mov
dec
sub
ljmp
loop
jp
or
push
cmp
mov
nop
rcrb
fdivrl
nop
add
jb
mov
data16
pusha
iret
mov
mov
jg
je
xchg
test
dec
adc
add
int
enter
sub
imul
push
mov
adc
cmp
xor
push
push
repz
and
add
inc
ds
pusha
inc
ljmp
xchg
add
sbb
cltd
xor
pop
mov
jge
jb
loop
dec
mov
out
leave
xorb
ret
xor
xor
add
js
cmpsb
or
icebp
mov
push
lret
sti
int3
add
pop
aas
or
imul
sarl
push
aas
push
xor
sbb
arpl
ds
lods
mov
cli
popf
sbb
pop
or
sub
movsb
or
lret
aaa
loope
adc
cmpsb
sti
test
mov
call
cmp
push
bnd
push
add
insl
jecxz
lock
cmc
cmpsb
insb
adc
or
imul
lret
pushf
sub
gs
bts
cmp
dec
push
out
scas
adc
add
jo
aad
fsubrp
push
mov
xor
inc
add
lods
into
inc
mov
and
pop
push
xor
and
mov
mov
in
insl
cmp
mov
loopne
inc
sub
pushf
cmp
jno
data16
shrl
cld
adc
ss
sbbl
lcall
jnp
fwait
or
lcall
ss
lds
push
mov
repz
repnz
mov
dec
ja
adc
pop
loop
insl
sarb
fildll
shrl
xor
sub
jmp
adc
nop
repnz
dec
xchg
jbe
mov
nop
and
xchg
sbbl
cmp
pop
add
xchg
pop
leave
and
rcrb
mov
mov
pop
aad
insb
sbb
xor
lds
stos
add
and
xlat
test
cmp
push
bound
mov
pusha
or
les
lods
call
and
ljmp
cmp
enter
and
jge
dec
jl
aas
cmp
fstp
fs
outsb
dec
sub
mov
repz
adc
into
out
jecxz
ss
in
cld
xchg
test
shrb
data16
inc
cmp
xchg
sub
jle
dec
movsl
mov
mov
and
push
test
mov
dec
push
cmc
and
das
out
leave
jle
dec
test
into
xor
subb
cmpsl
int
jle
jne
cmpsl
push
nop
add
movsl
pop
mov
cli
pop
hlt
jns
dec
push
aaa
mov
jb
les
ret
dec
repz
cmp
cmpb
jp
mov
into
xor
lock
aad
ret
adc
or
inc
jge
cmp
add
cs
cs
or
in
cltd
je
rorb
and
push
out
sbb
daa
and
das
pop
sti
pop
sbb
or
mov
mov
imul
mov
cmp
jecxz
mov
loope
sbbl
fidivs
ret
test
xchg
push
push
cs
imul
sbb
sub
outsl
ret
xor
pop
sbb
xchg
fsubl
xchg
jb
ss
pop
unpckhps
loope
pop
and
lock
push
cmp
sub
ljmp
xchg
test
jbe
inc
xchg
inc
aam
mov
add
push
sarl
loope
mov
std
mov
popf
pop
shrl
cmp
xchg
or
dec
jns
mov
sbb
cli
aad
inc
lret
jnp
loopne
lea
add
cld
xor
loop
les
cmp
fcomps
das
out
ror
pop
iret
push
aas
shlb
jge
and
int3
adc
icebp
cmp
push
popa
adc
cmc
add
stc
mov
jne
test
jle
imul
test
fdivrs
mov
xor
lods
fs
add
sarl
aaa
jno
sbb
jle
rorb
mov
add
lret
mov
cmp
addr16
and
mov
in
or
jmp
aas
scas
mov
or
cmpsb
mov
push
imul
test
decl
inc
subl
mov
cld
jbe
mov
dec
enter
test
push
pop
jb
inc
test
in
fwait
mov
jp
call
popf
icebp
adc
add
dec
rclb
in
je
xchg
push
in
pop
in
loope
mov
jnp
mov
in
pop
fcmovnu
mov
aad
cmp
loope
ds
cmp
mov
pop
test
outsl
mov
cli
xchg
pop
sti
push
fwait
addr16
mov
pop
or
insb
ja
in
bound
fbstp
fnstsw
add
lcall
pop
add
fmul
fdiv
add
mov
jmp
out
into
dec
mov
mov
addl
mov
mov
popa
ja
stos
pop
xchg
jp
push
jp
pop
xor
mov
mov
xor
das
rcrl
repz
xchg
and
or
out
sbb
stos
fimuls
jb
cld
bnd
push
jp
mov
faddp
and
push
jmp
jne
inc
ficoms
dec
gs
in
push
jge
mov
cmp
hlt
test
push
js
mov
pop
bound
fsts
cwtl
outsl
push
ficoml
sbb
in
xor
iret
aam
inc
adc
pop
and
xor
dec
movsl
out
jbe
xchg
xor
push
dec
movb
outsb
inc
scas
dec
jo
sbb
je,pn
push
imul
mov
in
subl
inc
and
lods
push
test
mov
mov
add
sub
ds
scas
out
jbe
ret
dec
push
jg
dec
icebp
lock
jns
add
or
lods
and
aad
dec
cmp
or
and
jno
jp
or
cmc
xor
sbb
push
mov
jbe
cwtl
aaa
pop
pop
inc
push
jae
imul
xor
pop
mov
lds
xor
fistpll
sti
je
push
lea
out
js
push
shll
cli
call
sbb
dec
sahf
and
mov
xchg
inc
mov
testb
or
loopne
mov
pop
dec
sbb
data16
and
jle
scas
jmp
fstps
push
pop
and
sub
push
les
mov
cmpsb
in
call
xlat
popa
enter
ss
cmpsb
aaa
sbb
mov
stos
push
push
or
or
es
adc
aam
ret
or
inc
xor
mov
push
push
ret
sarl
adc
clc
enter
xchg
js
test
adc
inc
fst
imul
dec
push
adc
leave
xchg
scas
insb
dec
idiv
pop
lock
sahf
fwait
mov
push
xchg
loopw
arpl
and
leave
pop
and
cmp
mov
cmp
cmp
mov
stos
pop
inc
lods
leave
dec
cltd
imul
dec
arpl
dec
pop
and
inc
sbb
add
or
test
test
xchg
sub
dec
das
mov
nop
outsb
pop
nop
pop
outsl
push
mov
sbb
add
mov
les
cmp
cmp
xchg
sahf
cmpsb
sbb
push
add
dec
scas
mov
repz
mov
inc
mov
outsl
or
jb
push
adcb
nop
inc
filds
sub
std
add
push
mov
jmp
cmp
daa
fbld
jbe
and
inc
xchg
push
fst
jp
mov
sub
scas
aas
js
add
lods
fisubrs
xor
and
mov
xchg
jno
or
mov
aad
test
es
pop
mov
in
call
xchg
hlt
mov
enter
into
call
fldenv
shlb
pop
cmp
sub
mov
mov
int
addl
in
cmp
mov
fcmovbe
std
orl
jnp
push
das
je
maxps
cmp
sbb
pop
dec
inc
popf
push
jmp
fstp
les
mov
lahf
lret
popa
cmc
decb
in
xlat
cltd
mov
xor
cmp
daa
loopne
into
int3
cmp
cli
pop
leave
xchg
adc
imul
or
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
ss
ds
addl
pushw
inc
xchg
xor
mov
fnstcw
pop
leave
adc
dec
push
cld
xchg
inc
pop
stos
sbb
pop
gs
xchg
jnp
icebp
ret
mov
popa
dec
add
sbbb
push
lret
sub
jbe
call
xor
or
ss
mov
jae
jno
imul
xchg
sbb
ljmp
ret
lods
pushf
rol
mov
dec
int
jg
test
xor
inc
jmp
ljmp
pusha
jecxz
pop
push
xorl
sub
xchg
dec
push
inc
xchg
lahf
mov
push
push
mov
sbb
testl
test
mov
out
insl
lods
push
xlat
ret
ljmp
out
and
jno
aaa
enter
mov
xchg
pushf
mov
adc
xor
andl
mov
out
les
jmp
xchg
mov
jno
cmp
cmp
mov
rol
inc
mov
xor
pop
repnz
jl
imul
dec
xlat
push
add
xchg
bound
xor
cmc
cmp
das
cmp
push
mov
movsb
nop
dec
jmp
add
pusha
out
xor
decl
and
in
pop
int3
ret
dec
test
leave
dec
sbb
push
ja
dec
adc
cmpsl
pop
or
cmp
fxtract
cs
lods
test
xchg
out
mov
pop
inc
or
sarb
add
jno
jle
arpl
bound
in
fistl
mov
cmpsl
test
shl
mov
clc
cmp
lds
hlt
xchg
jg
ja
dec
mov
fiaddl
dec
xor
sarl
push
xchg
aad
jp
mulb
xor
push
popa
cmpsl
arpl
lret
xchg
jae
jnp
mov
pusha
inc
mov
mov
outsb
ds
insb
in
iret
mov
sbb
inc
mov
faddl
outsb
shrl
xchg
jg
es
cmpsl
push
push
and
sub
popa
bound
xchg
incb
pop
lods
xchg
push
aas
test
inc
dec
loope
popa
addr16
xchg
mov
adc
in
jge
inc
stos
ljmp
inc
pop
inc
daa
loopne
popa
and
xchg
xchg
inc
stc
mov
adc
int
insb
clc
outsl
shll
jno
data16
je
test
jge
add
push
adc
loop
imul
divl
push
insb
adc
mov
int3
jmp
and
jb
sub
sbb
les
sub
jmp
xchg
or
mov
push
or
sbb
pop
pop
inc
sub
and
lret
mov
jnp
cmp
xor
cltd
pop
mov
push
jno
xchg
inc
int
lret
add
lahf
push
xchg
aaa
ret
mov
getsec
jmp
xlat
xchg
mov
fdivl
ror
jl
movsl
xchg
adc
pop
xor
icebp
iret
pop
lock
sbb
into
xchg
mov
add
andb
jbe
shrl
subl
fisubl
loopne
insl
aaa
rorb
jge
fldenv
in
mov
movsb
mov
rcrb
adc
ret
rcrl
lahf
clc
add
sbb
stc
sbb
loopne
stos
dec
inc
loope
lea
mov
jae
ret
pop
sarb
xchg
je
cmc
das
xchg
inc
mov
pushf
lods
mov
sbb
dec
lock
sbb
cmc
mov
shl
popa
mov
xchg
jmp
jb
loop
aaa
adc
mov
outsb
inc
out
inc
fidivrs
pusha
inc
loop
pop
test
or
arpl
iret
jmp
pop
cli
fsubrl
fisubs
sub
aaa
jbe
ja
and
pop
sub
sub
outsb
in
rclb
ja
mov
cli
divb
pop
dec
loop
pop
cmpsl
pop
loope
loop
xor
xor
xor
pop
push
push
repnz
out
sti
cmp
fs
xchg
stos
mov
xchg
dec
xor
lret
out
addl
lock
xor
jmp
mov
mov
in
insl
mov
xchg
and
les
dec
dec
jle
mov
repz
mov
iret
js
add
pop
xlat
xchg
ds
adc
faddl
loop
sub
push
jg
inc
mov
aad
fldl
sub
xchg
lret
sbb
add
adc
mov
rcrl
repnz
in
jns
addr16
arpl
dec
cmpsb
mov
ret
popf
jne
mov
sub
cmp
jge
call
or
push
add
pop
shll
sub
insb
cmp
xchg
shl
push
push
or
push
rorl
cmp
into
rcll
ret
aaa
adc
jo
push
inc
sti
test
ficomps
push
out
push
sbb
les
xchg
and
lcall
jmp
lcall
sub
pop
push
mov
sbb
ljmp
xchg
inc
sub
cmp
cmp
or
stc
mov
jg
lret
jns
jno
test
or
hlt
cmp
enter
cmpsb
nop
sbbl
cmpsl
rcr
cwtl
popl
ds
fadds
add
cmp
pop
mov
mov
addr16
mov
jle
mov
pop
pop
mov
ljmp
mov
xor
sahf
add
mov
ds
jmp
cmp
pop
pop
jecxz
sbb
mov
add
adc
loopne
cwtl
repnz
bound
roll
and
cs
and
push
xor
mov
dec
pop
loop
shl
popl
aaa
std
outsl
jnp
flds
rcrl
ds
mov
movsb
sub
das
outsb
mov
int
faddl
mov
ss
bound
test
lahf
inc
ljmp
xchg
sbbb
fistpl
cwtl
sub
add
shll
and
push
inc
lods
fidivl
mov
lret
adc
in
cld
or
push
sub
cli
shll
cmp
sub
add
mov
ss
int
push
push
mov
sbb
sbb
fisubs
jmp
sub
test
cltd
aaa
cmp
lock
sub
insb
dec
push
xor
cld
dec
xchg
rolb
pop
push
cmp
shlb
out
outsl
push
add
fwait
or
out
stc
sbb
repz
mov
test
pop
stc
or
jnp
inc
xchg
jo
mov
xchg
add
sub
adcb
adc
pop
mov
clc
or
mov
gs
cmc
test
sub
std
iret
mov
or
or
movl
or
lahf
pop
bound
cvtpi2ps
test
outsl
sub
add
xchg
add
sub
sbb
mov
jnp
push
mov
cli
outsb
ret
jl
mov
out
aaa
push
mov
out
or
sub
nop
xorl
xchg
in
pop
xchg
sbb
out
insl
loop
or
adc
mov
pop
adc
mov
cmpb
aaa
jecxz
iret
dec
outsb
pop
clc
roll
scas
pop
int
popf
movsl
add
xchg
ret
sbb
leave
stos
mov
andl
aam
mov
aas
xor
jne
je
sub
ficoms
sub
sbb
rcr
add
push
jecxz
xchg
push
out
mov
adc
lret
dec
and
sbb
in
or
fs
sbb
lock
push
xor
or
lret
xchg
jge
addr16
push
xchg
push
pop
loopne
mov
xor
xlat
stc
mov
mov
and
test
dec
sbb
inc
mov
das
shll
ficompl
sbb
or
sbb
adc
fs
in
sbb
pop
je
adc
hlt
std
lahf
int
fdivrl
lcall
mov
xchg
mov
sbb
mov
dec
xor
push
xchg
lods
sbb
xchg
inc
ss
pop
inc
leave
out
push
pop
adc
xor
cmp
xchg
rcll
jecxz
xchg
mov
test
lret
leave
out
mov
dec
jecxz
cmp
sbb
mov
push
xchg
mov
mov
xor
int3
pop
and
mov
or
pop
rorl
test
dec
push
movb
enter
ds
push
popa
lret
ds
pusha
jp
xor
nop
subl
test
sub
inc
mov
adc
cmp
movsl
loope
mov
das
mov
mov
pop
xchg
xchg
out
div
mov
adc
lcall
inc
jmp
dec
test
test
lea
cmpsl
jmp
popf
xor
out
cmp
scas
nop
test
ret
pop
mov
adc
sahf
movsl
mov
mov
into
shlb
js
xchg
int3
clc
jo
cmp
sub
dec
int3
pop
into
lcall
call
and
xchg
push
inc
push
adc
fnsave
fcompl
or
cmp
xchg
repz
pop
popf
pop
push
mov
cwtl
xor
int3
jmp
shll
movsl
cmp
mov
test
out
jecxz
cmpsl
js
into
fcmovbe
pop
xchg
cltd
sbb
das
jne
xchg
popa
pushf
cmp
cmp
mov
call
dec
outsl
cli
jmp
outsl
dec
cmp
xchg
leave
test
push
fsts
mov
jg
xchg
rclb
mov
jnp
sub
scas
lods
loopne
sub
cmpsl
cld
mulb
lods
push
xchg
push
adc
cmpsl
into
outsl
lret
pop
fiaddl
pusha
xor
mov
divl
inc
adc
push
adc
dec
jp
mov
xlat
mov
push
or
movsl
imul
lds
scas
std
mov
push
fdivrl
mov
imul
jg
mov
jae
adcl
lods
sti
into
sbb
mov
mov
jbe
in
aas
mov
inc
call
mov
inc
mov
dec
test
arpl
and
testl
or
cli
hlt
sbb
popa
cli
jb
xchg
xor
pop
xlat
pop
cs
nop
in
lret
pop
inc
addr16
test
xchg
inc
in
fwait
stos
or
cltd
popa
cmp
mov
jmp
out
add
jne
outsl
xchg
out
leave
les
mov
sbb
inc
inc
sub
jle
in
iret
movsb
icebp
inc
in
adc
fimuls
mov
push
scas
mov
icebp
adc
mov
xchg
ljmp
aas
cs
into
adc
push
call
xchg
mov
mov
push
fistps
mov
sub
mov
mov
cmpsl
popa
inc
test
stos
sbb
in
out
enter
insl
cli
sahf
clc
add
lds
repz
icebp
jg
xchg
xor
movsl
fcmovu
out
movsl
jnp
jge
add
jmp
outsb
loope
ret
daa
pop
cmpl
in
pop
xor
es
inc
jno
or
inc
leave
and
dec
lret
and
push
or
test
adc
ljmp
ljmp
icebp
clc
mov
adc
arpl
mov
mov
testb
adc
mov
sbbb
cld
push
mov
ret
push
and
mov
mov
sbb
jo
jne
jo
ret
aad
pop
into
and
push
inc
jge
js
scas
ficoml
stos
pop
nop
notl
pop
xor
in
cmpsl
pop
hlt
std
mov
int
pop
push
pop
std
sub
push
mov
cwtl
bound
and
sub
push
inc
and
jmp
pop
pop
pop
loopne
ja
push
push
stos
xchg
mov
adc
jg
push
aad
out
outsl
cltd
lret
mov
iret
or
or
xchg
cmc
sbb
cs
sub
cmp
adc
jo
loope
jmp
and
aaa
mov
sbb
clc
shlb
std
mov
into
ret
imul
in
pop
sub
cld
aam
pop
aas
shl
fcmovnbe
cmpsl
gs
adc
cli
insb
cld
or
or
mov
add
and
mov
movsl
idivb
jbe
push
sbb
and
jecxz
mov
jge
mov
or
filds
mov
ljmp
fs
xchg
mov
and
mov
jbe
inc
test
cmp
jns
cltd
sub
outsb
ret
rorl
mov
add
das
mov
lods
cld
int3
lds
sub
das
or
test
repnz
mov
lret
cmp
mov
call
mov
adc
sti
sti
lret
sbb
mov
mov
insb
and
fisubrs
fdivl
in
or
int
mov
in
cmp
bswap
mov
push
xchg
jo
outsl
stos
in
sbb
mov
adc
js
mov
outsb
and
xor
fdivrl
mov
int3
ret
add
mov
dec
sti
mov
pushf
ljmp
xchg
jp
cmp
mov
pusha
mov
leave
jno
pop
or
cmpsb
out
inc
jecxz
add
cltd
enter
iret
xchg
sub
xlat
imul
fs
dec
pushf
popa
aad
inc
mov
push
cmp
and
cmp
push
aas
dec
insb
sub
jecxz
fistps
mov
mov
lock
push
mov
test
icebp
push
xchg
int
add
jno
push
in
mov
pop
cmp
push
scas
push
subl
fisubrl
mov
aam
push
pushf
test
dec
aam
in
push
lahf
or
or
bound
mov
fwait
and
add
mov
cmp
xor
pop
inc
jae
sbb
daa
stc
sahf
ret
ss
fistpll
shll
out
push
ds
test
mov
fs
or
in
enter
mov
mov
push
movsb
xor
mov
xor
and
rcll
imul
add
cmp
je
mov
stos
or
cmc
push
ror
dec
jo
pop
or
pop
mov
jb
call
sbb
and
lea
shl
push
sti
push
pop
hlt
xchg
imul
int
loope
fildl
pop
sub
mov
lahf
mov
mov
paddusw
add
fwait
push
lret
pop
mov
push
inc
mov
cmc
ja
xchg
stos
call
cmp
xor
lods
or
lret
push
mov
add
dec
or
and
cli
push
fwait
lock
addr16
push
ja
jg
js
aaa
repnz
in
pop
loopne
cmp
stos
or
and
cli
jb
mov
xcrypt-ofb
cmpsl
sub
adc
hlt
or
test
mov
arpl
imul
adc
pop
jmp
and
mov
incl
or
mov
imul
ja
cmpsl
and
inc
adc
clc
jae
mov
xchg
add
xchg
dec
jg
xlat
movsl
jge
orb
mov
mov
and
shlb
enter
ret
subb
ljmp
nop
mov
add
xor
mov
xor
cmp
adc
or
sbb
mov
add
cmpsb
sub
xchg
mov
xchg
stos
iret
test
in
and
dec
notl
jp
insb
jl
pop
jg
aaa
sbb
xorb
xor
xor
jmp
ret
mov
sub
dec
sub
and
or
aaa
sti
xchg
push
js
jge
pushf
push
pop
jle
aas
push
mov
iret
inc
push
psrlw
jns
inc
rol
lahf
ja
sbb
or
sbb
stos
and
sub
lods
lods
and
aad
fmull
jp
push
and
sub
into
lret
pop
repz
stos
jae
rcll
fstl
stc
loope
jno
shrb
xchg
mov
cs
cmp
ss
fnsetpm(287
shrl
ret
mov
lcall
bound
stos
ficoms
xor
pop
pop
dec
xor
clc
std
in
inc
cmp
pusha
outsb
clc
push
ds
adc
mov
add
in
sbb
cmp
push
aam
sub
jp
push
shll
and
cs
dec
fiaddl
pusha
out
cmp
jno
pop
cmpsl
jmp
stc
loope
enter
xchg
push
ss
and
xor
es
fsubrl
xchg
imull
mov
sbb
inc
mov
adc
dec
pop
fdivrl
mov
fstps
add
fcomps
icebp
push
jle
ja
not
xchg
add
cmp
dec
icebp
add
mov
push
inc
int
lock
xchg
push
mov
mov
and
rcl
je
xor
jle
iret
insb
je
fcom
push
popa
jp
dec
cmpsl
xchg
je
int3
xorl
mov
adc
mov
xchg
pop
mov
in
testl
pop
fldenv
fimull
xor
mov
outsl
out
xor
inc
hlt
adcl
sub
push
test
push
xor
mov
mov
ja
roll
mov
or
xchg
mov
movsl
subb
or
add
in
in
rcll
stos
pop
pop
mov
repnz
fwait
shr
inc
sbb
es
into
sbb
and
dec
push
sub
jb
orb
fs
in
jns
sbbb
inc
insb
jo
enter
fcomp
dec
imul
sub
ljmp
push
dec
pop
out
or
shl
inc
mov
hlt
loopne
dec
ds
sub
mov
hlt
test
xor
popa
mov
mov
out
pushf
rcrl
adcb
cmp
movsb
shlb
call
arpl
push
xchg
mov
push
jno
dec
xbegin
rcrb
jmp
cmpsb
dec
rorl
mov
jbe
ss
jbe
pop
out
and
lcall
or
fcomps
andl
ds
pop
xchg
xchg
cld
cltd
xor
movsb
inc
or
pop
js
popa
test
sahf
scas
mov
xlat
and
sarl
popa
xchg
ss
notb
scas
dec
int
push
out
xor
add
inc
test
xlat
jmp
and
mov
rolb
inc
stos
out
push
repnz
xchg
lods
and
dec
add
insl
jo
xorb
mov
mov
add
pop
xchg
lods
lcall
jmp
fwait
mov
inc
pop
sub
mov
out
add
addr16
push
add
push
cmp
incl
jecxz
adc
fwait
adc
cltd
movsl
xor
mov
ret
mov
cmpl
mov
or
stc
and
dec
lret
pop
cmpsb
mov
mov
sub
or
insb
cmp
mov
sbbl
fcoml
ret
scas
cmpsb
dec
xchg
es
push
sub
std
adc
insb
sbbl
inc
pop
movsl
jecxz
or
dec
test
addr16
mov
xchg
xchg
dec
dec
enter
lret
enter
inc
xchg
or
out
mov
mov
pop
jb
xlat
pop
fisubs
ds
sub
fwait
push
sbb
dec
xor
inc
add
xor
adc
push
shlb
movntq
stos
nop
ret
sub
out
pop
std
add
leave
pop
repnz
mov
out
lcall
mov
xchg
cmp
lret
push
inc
inc
mov
mov
dec
idivl
scas
scas
jge
and
jl
mov
sti
iret
cmc
mov
scas
aad
cmpsl
repz
fdivrl
sbb
cld
lret
icebp
scas
imul
xchg
cmp
jmp
mov
vpsraw
in
in
pop
jno
sti
dec
out
mov
xor
loop
sub
scas
lahf
sbb
jecxz
push
lods
in
lods
popl
pop
push
outsb
inc
int3
scas
std
dec
pushf
cs
stos
xchg
jg
mov
jle
in
out
or
ljmp
mov
dec
les
rclb
sarb
rolb
outsl
push
dec
sub
xor
cmp
xchg
lret
lods
mov
fcoml
nop
or
pop
int3
mov
or
xor
jo
dec
shrl
loop
mov
pop
fistpl
cmp
push
xchg
in
call
sub
fidivrs
push
test
in
dec
data16
testl
scas
sub
ss
orb
jne
inc
ss
dec
jns
jbe
pusha
aam
add
cmpsb
mov
scas
pop
insb
roll
mov
and
cmc
ret
dec
add
stc
xlat
mov
mov
lcall
cmp
adc
mov
test
dec
sbb
aad
and
out
xchg
arpl
push
rcll
lret
push
sub
cmp
xor
sub
ja
ja
jb
cs
stos
cs
loopne
jno
btc
daa
jb
std
jmp
pushw
sarb
mov
and
xor
mov
in
and
sub
jmp
jne
icebp
mov
add
add
bound
orb
cmp
popa
scas
or
enter
gs
sti
dec
cmpsb
addr16
push
xor
stos
dec
xor
fsub
mov
sarl
rcrb
or
dec
dec
cwtl
popf
lahf
sarb
mov
cmp
and
loopne
inc
sub
stos
mov
cmp
cli
shlb
pop
in
outsb
xor
push
jbe
push
sbbb
lods
into
cmp
ret
jmp
pop
jp
inc
mov
sti
mov
dec
jo
cmp
int3
out
bound
aas
adc
mov
push
stos
xor
imul
jecxz
fcoml
push
push
std
xor
lds
sbb
lret
mov
enter
or
stc
into
cld
jge
mov
mov
xchg
mov
andb
scas
jl
mov
push
sub
test
mov
sub
push
cmc
inc
and
lods
xchg
inc
shll
das
pushf
xchg
out
cmp
ret
loopne
cltd
or
or
movsl
cmpsl
dec
jle
pop
push
rcll
cmp
icebp
mov
fisubl
xchg
data16
movsb
cwtl
mov
pop
pop
xchg
ficomps
shrl
outsl
or
mov
pop
jge
or
jo
push
lret
jp
test
jbe
jno
fwait
or
jle
sbb
jg
ljmp
cli
popa
pop
stos
adc
lret
jno
std
dec
in
ljmp
mov
test
out
daa
std
ds
cwtl
lret
int
int3
les
ja
test
stos
outsb
rcll
pop
cltd
or
jmp
lahf
scas
cmp
jbe
jle
inc
push
jp
popa
pop
sbb
ljmp
bnd
cltd
mov
nop
stos
xor
lret
cmp
jmp
mov
test
jns
xchg
cmp
xchg
pop
loope
ss
mov
lds
cmpl
andl
xor
push
xchg
imul
fstpl
mov
loopne
dec
or
cmp
xor
xchg
insb
mov
into
adcb
stc
adc
add
and
lods
jb
sar
lods
stos
mov
mov
and
rcrl
cmp
inc
sub
jmp
rorb
pop
icebp
jmp
cmp
jnp
inc
cwtl
adc
xor
outsb
sub
push
outsl
dec
lods
xchg
jne
test
sub
and
dec
add
lods
ljmp
outsb
adc
add
out
movsb
test
cld
sahf
jae
outsb
pop
inc
sub
into
mov
je
ljmp
in
xor
mov
mov
jns
ja
popa
xchg
fs
push
sub
sub
sub
xchg
sub
xchg
inc
popf
decl
xchg
xchg
xchg
sub
call
adc
add
xchg
xchg
cmp
out
dec
dec
fnsave
int
ret
xchg
jns
push
lcall
sahf
cld
dec
out
fstpt
jle
push
mov
js
pop
push
xor
stos
in
dec
bound
fbld
inc
daa
scas
mov
mov
dec
push
cmp
or
add
jmp
insl
in
xor
fnstenv
insb
pop
lret
mov
inc
xor
xchg
sbb
fmuls
out
out
test
jecxz
mov
mov
bound
pop
push
js
int
pop
popf
cmp
lds
dec
ret
push
add
mov
jns
pop
push
ss
push
jo
fdivrl
in
ds
inc
sarl
xchg
pop
sub
insb
sarb
pop
sbb
out
leave
outsb
lock
lock
cmpl
mov
int
dec
pop
lock
pop
mov
iret
insl
data16
add
jmp
cmp
repnz
cmpsl
movsb
jg
jmp
inc
roll
mov
adc
and
inc
aad
cmp
popf
fists
popf
shrl
mov
fmuls
jae
cmp
cmc
sbb
out
test
lea
xchg
cs
out
xchg
clc
cltd
stos
sbb
adc
rcrb
push
add
stos
imul
inc
mov
push
lock
and
xchg
xchg
bound
aas
iret
inc
dec
xchg
movsl
inc
insb
inc
pusha
pop
into
mov
inc
inc
sbbb
jnp
lahf
add
mov
jg
mov
pop
hlt
jecxz
lea
dec
lods
mov
into
xor
in
xor
pop
cli
rclb
nop
mov
jl
xor
lods
out
aad
and
sub
mov
sub
sti
inc
sti
mov
mov
outsl
or
fisubrs
data16
daa
xchg
xchg
int
stos
scas
xor
das
pop
ljmp
inc
pop
test
outsb
fs
cmp
mov
movsl
xchg
pop
mov
add
lcall
xor
lret
push
adc
ss
push
out
mov
pop
std
cmc
popa
cwtl
adc
adc
jno
notb
jmp
jb,pt
adc
mov
push
cmp
pop
ret
adc
dec
mov
sub
aam
ljmp
call
mov
dec
adc
jno
cmp
jg
mov
jnp
xlat
pusha
jmp
sub
xchg
push
xchg
out
mov
push
xchg
js
sub
sub
ss
iret
dec
sub
xchg
ljmp
das
cmpb
icebp
rol
cmp
lret
inc
xor
push
ret
fsubrl
xor
int
fs
loopne
ja
or
inc
push
lahf
xchg
and
adc
push
and
mov
rcrl
xchg
pop
push
dec
mov
outsl
xchg
leave
fimull
div
xadd
cld
add
jbe
adc
inc
idivb
std
or
arpl
cwtl
pop
sub
lcall
or
repz
scas
mov
mov
jno
adc
imul
adc
jl
ret
inc
test
sbb
pop
repz
repz
xchg
xor
mov
or
xchg
in
rcr
xchg
sub
outsb
test
je
xlat
stos
icebp
pop
and
pop
icebp
adc
push
jecxz
and
dec
loope
out
pop
xor
xchg
sub
xor
push
scas
ret
cmpb
daa
sbb
jae
ret
lock
test
in
mov
out
sbb
insl
push
adc
cmp
adc
test
push
fwait
roll
test
mov
pop
sti
adc
pop
jae
jp
out
out
pop
or
test
cli
cmp
lea
iret
and
mov
les
adc
sub
in
arpl
mov
stos
push
ficomps
sbb
dec
packsswb
mov
or
mov
into
dec
int
dec
out
sub
sbb
incb
pop
adc
loope
lods
ljmp
pop
push
mov
addr16
mov
inc
out
or
xchg
sub
inc
cmp
push
sub
add
pop
orb
fildl
cmpsb
mov
mov
sub
sti
ss
xor
jle
mov
or
inc
in
cmp
fldl
mov
mov
jb
and
cmp
jbe
xor
loope
jg
ds
jbe
dec
imul
xchg
xchg
jbe
jp
sbb
jmp
jl,pt
int
insb
mov
or
nop
das
ficoms
push
jge
add
jnp
jae
jne
pop
sbb
mov
cmp
push
std
mov
insl
insl
out
cmp
in
addl
cli
mov
arpl
mov
fwait
or
nop
mov
dec
and
ds
cmp
imul
cmp
mov
fisubl
add
and
mov
mov
loopne
mov
pop
or
fnstenv
lahf
movb
fwait
mov
add
mov
mov
jb
cmpsl
loop
inc
ss
fiaddl
out
cmpsl
and
ds
cmp
cld
sbb
or
call
bound
inc
mov
movsb
push
adc
imul
mov
inc
fucomp
inc
sbb
rorl
sub
push
lea
mov
pop
test
repnz
cli
cmpsl
mov
add
dec
popf
int
jl
sbb
lret
cltd
sahf
popa
dec
cmp
dec
mov
test
sahf
adc
popa
sbb
and
mov
mov
xchg
in
ret
call
cli
movsb
ficomps
arpl
out
xchg
jmp
leave
lds
outsl
ficoms
sub
in
les
push
mov
and
push
cwtl
cmp
inc
pusha
sub
push
add
mov
out
lret
dec
add
push
xchg
jl
xor
sbb
push
inc
adc
and
out
test
cli
jne
inc
sbb
jnp
test
test
int
pop
cli
stos
aad
sub
insb
push
mov
bound
call
es
add
in
pop
icebp
push
pop
flds
not
add
or
pop
and
or
lret
add
lock
ret
and
pop
jmp
test
push
xchg
test
pop
mov
ds
jns
fidivs
shl
out
jo
mov
mov
aaa
lret
dec
inc
int
loop
clc
in
mov
cmp
fwait
shlb
pop
ret
repnz
iret
or
cmp
push
inc
rol
mov
mov
in
xor
daa
lea
xchg
loopne
lret
mov
lcall
and
push
sarl
repnz
inc
rorl
pop
xrelease
rolb
adc
push
jmp
or
out
mov
push
test
sbb
icebp
jge
dec
push
lret
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
cltd
sbb
out
incl
cmpl
lcall
pushf
nop
xor
les
add
pop
incl
pop
pop
movsl
mov
movsl
adc
mov
add
or
push
cmp
dec
xchg
dec
xchg
xor
xchg
mov
inc
les
daa
mov
jmp
outsb
iret
ja
mov
or
pop
fcoms
dec
pop
fmuls
adc
sub
mov
nop
arpl
xchg
mov
je
adc
clc
sub
cmc
fmulp
fisubrl
in
jmp
add
inc
sbb
or
inc
and
rolb
lret
jo
lahf
sbb
inc
les
iret
out
fistps
stos
add
fs
mov
shrb
and
popf
icebp
jb
jb
add
outsl
and
mov
dec
test
mov
pop
mov
into
js
pop
dec
xchg
mov
shrb
inc
inc
cltd
inc
iret
aad
mov
mov
or
mov
mov
inc
cmp
cmp
sbb
adc
dec
jle
rorb
bound
loope
pop
iret
inc
cld
fldenv
rorb
arpl
dec
in
jle
dec
sahf
jno
clc
pop
pop
jns
or
clc
push
adc
pop
sbb
inc
and
jle
ret
in
rclb
enter
popa
lret
cmp
pop
outsb
jnp
adc
iret
mov
push
mov
dec
dec
cmc
insl
inc
xchg
daa
jne
xlat
xchg
mov
daa
sbb
inc
mov
lcall
or
pop
icebp
pop
and
pop
push
jbe
lock
ds
adc
push
sbb
xor
mov
movb
jo
loopne
lods
cmpsl
cmp
and
jge
arpl
jns
push
leave
adcb
push
mov
popa
mov
test
movsl
push
in
xor
mov
adc
cwtl
int
jle
ja
xchg
out
ja
rclb
out
pushf
xchg
seta
dec
mov
rorl
aam
mov
jns
jg
adc
pop
xchg
stos
inc
addr16
sbb
cmp
imul
add
bound
fbstp
add
xor
mov
dec
insb
cmpsl
ret
or
cmp
cmpsb
addr16
scas
dec
mov
imul
jae
rorb
dec
push
das
jae
idiv
cs
scas
add
loop
adc
imul
mov
xchg
dec
and
cmpsl
xlat
cmp
popa
push
inc
scas
jbe
ret
mov
inc
pushf
sbb
dec
mov
sahf
insb
push
movups
int
adc
inc
movsl
aaa
incb
inc
jno
movsb
mov
xor
imul
jg
push
pop
decl
pop
insb
stos
and
inc
xor
adc
xor
pop
jno
inc
cmp
mov
divl
lret
lret
loop
lret
in
add
mov
lods
jno
fimull
rorb
jmp
inc
push
mov
xor
pop
fisubl
or
rcr
mov
movsb
mov
add
mov
dec
and
insb
cmp
pop
lret
outsb
adc
pop
pop
jge
cmp
inc
mov
icebp
pop
cmpsl
and
mov
jo
mov
jae
aaa
adc
xor
cmp
pushf
mov
out
out
bound
fimuls
sahf
jo
xchg
mov
cmp
loopne
mov
jno
inc
jno
add
inc
cmpsb
push
fstl
test
jmp
nop
mov
outsb
inc
inc
xor
cmp
rcrl
push
xor
roll
jno
nop
mov
inc
inc
jnp
out
cmp
lahf
fimull
dec
add
iret
cmp
addb
jge
call
je
sub
std
enter
dec
lea
mov
push
sbb
adc
push
pop
xchg
inc
popa
jp
fisubrs
pop
add
imulb
movsb
inc
mov
push
cmpsb
mov
aad
mov
jns
aam
cmpsb
mov
mov
mov
or
jnp
clc
and
pop
mov
mov
add
jp
iret
xchg
ja
xor
call
push
pushf
nop
sbb
dec
add
mov
or
push
sbb
adc
inc
dec
lds
mov
inc
cli
xchg
dec
aad
mov
pop
xchg
mov
jecxz
push
imul
out
jp
fimull
out
ret
or
lret
into
stos
sbb
push
loop,pt
lret
jg
ss
clc
mov
push
inc
mov
mov
std
mov
dec
dec
sbb
jmp
mov
aas
mov
aad
daa
sbb
faddl
xor
mov
addb
insb
movsb
adc
jno
pop
repnz
rclb
cmp
add
cmp
mov
inc
add
xchg
stc
cs
aas
pop
cli
out
repz
je
adc
sti
adc
shr
dec
mov
mov
cmp
lods
jns
inc
stos
jge
lret
mov
mov
sbb
test
jg
inc
mov
sbb
push
push
pop
sub
mov
in
ret
xchg
xorb
cmp
popa
mov
lea
jns
cmpsb
fstpl
xchg
mov
push
imul
push
mov
int
je
std
mov
aam
fnstenv
pop
push
into
gs
lock
fistpl
mov
hlt
mov
notl
lds
cmp
mov
imul
xor
sub
arpl
push
jne
fcompl
jo
push
aaa
outsb
mov
aas
adc
push
pop
out
in
ss
jecxz
add
fidivrs
sub
and
fidivs
add
mov
movsb
sub
test
je
inc
in
gs
gs
add
jl
pop
mov
push
or
sub
rcll
push
mov
pushw
movb
jne
mov
ror
mov
mov
jle
rcrl
pop
movsb
imul
pushl
lea
imul
lea
push
sub
dec
mulb
mov
mov
addr16
push
and
mov
jne
mov
jae
sbb
in
lock
ret
lods
ficoms
jp
jno
mull
cwtl
notl
sub
test
in
loopne
and
pop
sarl
in
mov
mov
shlb
popf
bound
pop
outsl
das
xor
in
lods
adc
vmovntps
repnz
mov
dec
pusha
fs
aaa
and
test
ficoms
shr
adc
cmp
das
cmp
push
nop
inc
push
add
hlt
out
mov
fsubr
leave
icebp
xlat
pop
inc
dec
pop
ss
cmpsl
sbb
cmp
imul
popf
cmp
push
pop
enter
and
push
shl
incl
dec
push
std
dec
jecxz
and
shlb
outsb
cs
pop
xchg
cmp
sarw
mov
lcall
jmp
mov
push
rorb
push
sub
aam
lds
cmp
repnz
lods
mov
icebp
cmpl
mov
es
mov
cmp
mov
mov
push
mov
repz
out
rdtsc
cmpl
adc
stos
mov
add
sbb
rclb
mov
add
jge
gs
cmp
dec
in
insl
lds
insb
cld
mov
mov
or
loopne
jbe
sub
cli
mov
xchg
mov
push
les
jne
jo
mov
inc
push
push
imul
ljmp
movsl
push
xor
test
cli
mov
dec
cmp
or
xor
mov
inc
shlb
leave
aas
cmp
and
into
or
dec
add
sbb
inc
and
out
jecxz
push
mov
or
push
movsb
jl
sbb
int
cltd
mov
xchg
ret
add
sbb
mov
cmc
pop
xor
enter
cmpsb
aad
pusha
push
mov
fldenv
inc
pop
in
or
aas
dec
or
test
push
sti
ss
adc
in
jne
jae
pop
ret
mov
dec
out
clc
call
pop
ret
lds
jne
sbb
cs
js
inc
mov
pop
mov
sub
insb
fcmovb
push
fists
shl
cmp
inc
add
jge
sbb
cmpsl
call
test
and
inc
jmp
enter
out
xchg
adc
bound
stos
or
sub
shrl
jb
mov
add
xchg
mov
mov
dec
xor
bound
jl
push
nop
ja
cmp
clc
stc
inc
popa
mov
lcall
stos
fistpll
push
mov
aad
and
ja
pop
shlb
pusha
addr16
and
movsb
es
push
lods
pop
repnz
popf
add
lret
mov
or
sub
insb
int
jg
pop
or
lock
xor
push
sbb
jp
test
mov
cmp
fwait
xchg
fsubr
and
and
xor
and
mov
test
add
je
push
shr
into
fidivrs
xor
dec
je
sbb
add
cmp
mov
mov
cmp
fdivr
enter
jecxz
or
mov
push
aaa
in
xchg
add
mov
hlt
jo
jb
imul
jb
cwtl
cmpsl
mov
pop
add
jno
jecxz
rsm
xor
mov
add
sbb
mov
mov
adc
mov
ss
js
pop
lods
pushf
mov
rcrb
fisubrl
es
daa
enter
dec
stos
stos
or
lea
push
sti
or
add
xor
inc
xorb
mov
push
adc
jle
add
mov
test
or
js
cmp
testb
xchg
dec
xchg
fstl
jne
out
xchg
push
adc
inc
add
repz
jge
out
xor
ss
sbb
adc
aad
sbb
loope
mov
mov
xor
adc
cmp
popf
aam
insl
fmulp
call
pop
jno
add
pop
out
jp
jp
insl
hlt
lret
repnz
cmp
lods
mov
ret
jge
mov
repz
pop
filds
nop
jbe
repz
xchg
and
push
sub
stos
inc
and
dec
push
fs
add
gs
mov
mov
push
mov
mov
loopne
mov
xor
mov
fstps
inc
inc
cmpsb
out
test
addr16
bound
push
arpl
jle
cli
sbb
popa
xchg
jo
pop
stos
mov
inc
imul
xchg
add
daa
xor
push
sbb
jne
cmp
jne
and
mov
sbb
mov
and
mov
push
mov
nop
cli
andb
cmp
pushf
cmc
orb
ljmp
rorb
jecxz
testb
mov
lock
dec
inc
pop
js
jae
jecxz
sarl
ret
push
mov
shlb
or
sbb
leave
cwtl
lods
mov
cmp
or
xor
jp
mov
jae
popf
daa
mov
stos
and
stc
fistpl
aad
xchg
sub
das
pop
sub
jno
insb
push
arpl
xor
add
mov
mov
scas
mov
mov
add
mov
inc
loope
jge
cmpsb
pop
sbb
jno
mov
jae
iret
test
xchg
inc
dec
xor
outsb
fbstp
jmp
stos
mov
pop
mov
jmp
mov
push
outsb
add
sub
and
sar
test
popf
lahf
fldl
push
movsb
pop
jge
divb
add
out
push
aad
cmc
data16
subb
scas
ja
push
mov
stos
sbb
hlt
sahf
xchg
mov
sub
ss
mov
xor
flds
test
mov
mov
push
mov
mov
stc
sahf
adc
stos
push
xchg
adc
and
add
xlat
stos
icebp
cmp
cmp
sahf
orl
ds
cmpsl
ret
mov
shll
adc
jnp
leave
sub
int
pop
repnz
jmp
clc
int3
movsb
jp
jg
mov
adc
cltd
sub
sahf
aad
lods
mov
push
aaa
jg
adcb
fsubrs
mov
cmp
xchg
outsb
and
fistpll
cmp
jne
jne
sahf
lret
fptan
notb
shl
cmp
fs
and
mov
mov
sub
mov
addb
or
js
push
dec
and
cmp
out
stc
outsl
push
outsb
dec
and
pop
push
fcompl
mov
and
cs
jns
mov
orb
fisttpl
gs
push
mov
scas
dec
repnz
sbb
and
sbb
lods
add
fisttpll
pop
ficomps
xor
vmovlps
mov
bound
adc
imul
jne
imul
mov
mov
into
pushf
xorb
xchg
pusha
adc
dec
aaa
notl
mov
push
cs
cmpsb
int3
add
xchg
inc
popa
daa
outsb
ret
inc
mov
out
je
push
notb
lds
mov
xchg
add
adc
std
push
mov
popa
popf
push
test
cmp
aas
loopne
or
mov
xchg
push
and
cltd
pop
jno
jge
scas
dec
push
or
jle
xor
adc
mov
mov
and
repz
sbb
push
and
cs
sbb
popf
and
or
dec
xchg
mov
sbb
or
hlt
leave
test
or
mov
test
pop
into
pushf
xor
inc
pop
mov
test
out
xor
and
and
and
stc
pop
xor
in
cmpb
cwtl
in
lret
push
pusha
mov
cmc
mov
cld
pop
lds
jle
xchg
xchg
cmpsl
jl
push
insl
insb
inc
je
lcall
sbb
jge
dec
ss
movsb
mov
leave
pop
cmp
fs
out
add
out
inc
loop
pusha
ss
stos
push
mov
xchg
imul
and
testb
movsl
imull
movsl
push
inc
cmc
mov
test
fbld
mov
mov
pop
adc
bound
mov
lods
pushf
mov
int
add
mov
outsl
push
push
lcall
sub
dec
mov
clc
jns
pop
or
mov
cmp
mov
sbb
sbb
push
sbb
and
loop
sub
aad
ds
and
dec
nop
sahf
test
jl
sbb
out
jle
mov
iret
pop
sti
sbb
bound
cltd
lock
cmc
xchg
lret
neg
pop
or
xor
shl
dec
fadds
xor
inc
or
mov
dec
mov
inc
gs
cmp
xchg
mov
or
jbe
add
iret
inc
xorb
adc
loope
imul
push
and
fucomp
push
jl
lahf
test
sub
add
jb
hlt
mov
mov
mov
dec
psubsw
stc
and
inc
and
shl
add
ljmp
xor
sub
mov
dec
rclb
mov
cld
ss
aam
fisttpl
or
in
nop
stos
add
push
filds
inc
addr16
pop
pop
sbb
pop
mov
xchg
test
inc
cld
mov
out
mov
in
xor
or
lret
mov
dec
add
rol
mov
rcrb
mov
out
add
in
lock
cmpsb
aam
jbe
je
pop
xchg
popa
xchg
ret
add
aaa
inc
or
lea
repnz
test
incl
je
sub
stos
cs
pop
sub
stos
adc
les
movsl
sub
mov
pop
mov
repz
push
outsl
jnp
mov
fldt
fnsave
jns
adc
out
addl
mov
and
push
sbb
xor
jmp
sahf
leave
fildll
pushf
ja
jp
push
sbb
movsl
loope
mov
adc
push
mul
enter
fucomp
mov
test
jae
mov
out
jg
stos
movsl
mov
xor
pop
lahf
xchg
sti
scas
inc
jnp
jo
addb
push
dec
enter
aam
aaa
imul
mov
sbb
adc
stos
inc
pusha
jl
cltd
cwtl
aas
in
sbb
nop
scas
icebp
push
push
xchg
shll
adc
cmpsb
xor
or
sbb
inc
out
mov
jno
add
fsubs
inc
mov
mov
testl
cmp
push
pop
rdtsc
mov
loop
subb
inc
mov
or
pop
cmp
fistpl
test
and
jne
xor
das
roll
add
push
repnz
xchg
dec
pop
xchg
icebp
aam
fcmovne
popl
sahf
rol
mov
icebp
cmpsl
ds
jmp
xchg
bound
enter
sub
sbb
mov
outsl
mov
jmp
push
sbb
xlat
clc
shll
push
es
lcall
sub
pushf
stos
mov
jg
pop
push
stc
or
pop
pop
aas
and
adc
and
lods
jo
jnp
dec
imulb
sbbl
jo
or
stc
ret
cmp
mov
mov
mov
push
inc
mov
shlb
lret
adc
xor
into
or
or
jmp
fprem
fs
cmp
and
sbb
in
cmpsb
pop
sub
dec
sahf
jmp
mov
mov
pop
push
or
mov
pop
in
add
push
sub
iret
mov
pop
incb
add
xchg
jne
vpunpckhqdq
jmp
xor
adcl
lcall
mov
push
push
lock
inc
sub
add
xor
test
or
inc
arpl
mov
mov
cwtl
shl
fwait
leave
pushf
ret
adc
jg
hlt
xlat
push
mov
in
into
ljmp
cmp
faddl
mov
inc
and
shlb
and
inc
bnd
push
hlt
mov
inc
cmp
mov
pusha
cmpsb
into
repnz
mov
lock
std
or
xlat
dec
vpcmpeqw
lcallw
outsb
int
xchg
mov
mov
xor
jg
or
and
mov
outsl
xchg
cmpsl
pop
scas
lahf
imul
add
jne
leave
gs
sahf
or
push
jg
sbb
pop
inc
iret
js
das
lahf
pop
popf
movsb
rcrb
mov
std
repnz
cmp
adc
aaa
lea
ds
inc
rorl
add
and
cmp
lods
mov
fisubrs
sbb
mov
inc
into
movsb
xchg
cmp
or
sub
fbstp
les
sub
cli
cmpsb
push
js
mov
sbbb
inc
jae
pop
out
push
jge
ds
outsb
or
ss
sub
pop
mov
clc
mov
aaa
and
aas
sbb
sub
cmp
dec
xchg
out
mov
mov
pop
inc
cltd
out
mov
mov
push
lock
lods
das
out
push
pushf
sbb
pop
pop
mov
pop
rclb
or
dec
je
enter
cld
gs
std
out
orl
ficoms
out
cli
and
clc
jnp
push
jge
ret
jno
jecxz
pusha
adc
popl
push
imul
cli
or
or
sbb
ja
jle
mov
pop
loope
pop
ss
addr16
out
fwait
adc
mov
xchg
dec
mov
jae
push
sbb
lahf
inc
jle
xchg
outsl
sub
jge
inc
sahf
sub
in
mov
rol
push
xchg
mov
mov
xlat
jb
cmpsl
stos
jnp
mov
jbe
outsl
push
mov
pop
sub
mov
mov
mov
cmp
insb
jae
cmpsb
inc
jmp
in
xor
inc
or
test
bnd
sub
dec
int3
leave
fs
out
mov
sarb
xor
test
pop
aam
sub
inc
cmp
jne
loop
mov
pop
outsb
xchg
jno
sbb
jno
dec
fmull
mov
outsb
call
js
fistpll
dec
nop
jmp
xor
xchg
xlat
sub
repnz
mov
cld
mov
fs
or
sbb
mov
jge
int3
std
adc
mov
jae
dec
jp
je
mov
repnz
repnz
jge
je
lcall
out
aam
jae
cmc
bound
gs
ja
fs
popa
fdivl
inc
mov
adc
fucomp
out
and
jmp
jno
aas
dec
mov
imul
dec
mov
imul
adc
and
roll
loopne
pop
lds
sbb
mov
enter
mov
insb
data16
xlat
ret
xor
mov
add
dec
adcl
mov
mov
pop
scas
pusha
pusha
and
daa
in
inc
bswap
in
mov
push
and
push
mov
pushf
ret
ds
in
mov
dec
hlt
es
and
push
xchg
sahf
aas
xchg
add
jge
sub
sub
push
mov
xchg
cwtl
test
loop
inc
push
addr16
push
inc
std
xchg
pop
std
push
cmp
ror
pop
test
dec
cltd
call
jno
add
cmc
xchg
mov
mov
pop
pop
std
sub
gs
fnsave
xchg
sub
aaa
xor
fs
movsl
sbbb
in
scas
or
stos
mov
pushf
adc
push
cwtl
dec
dec
dec
push
mov
and
and
lea
push
mov
adc
outsb
movsb
mov
jmp
lret
push
push
mov
imull
test
js
imul
push
aaa
int
mov
shlb
inc
jg
and
nop
or
daa
fadds
out
aas
pop
mov
in
sub
mov
or
loope
ja
push
aaa
mov
mov
pop
insl
popa
push
cmpsl
adc
xor
mov
out
cmp
movsb
ds
ja
mov
cs
aam
das
pop
adc
adc
xchg
cli
jbe
popf
add
roll
pop
adc
aaa
push
fdivs
mov
sbb
add
xlat
or
dec
add
jb
lcall
into
cmp
mov
add
nop
dec
and
mov
std
xor
movsl
pop
push
inc
mov
inc
adc
lds
data16
mov
out
std
sbb
mov
aad
mov
or
xchg
icebp
mov
push
in
or
mov
mov
sub
inc
xor
pop
jo
jne
hlt
inc
or
and
xor
scas
xorb
mov
and
adc
sub
outsb
dec
push
pop
push
mov
fiaddl
adc
xor
aaa
or
idiv
mov
imul
jecxz
sbb
push
mov
out
in
fucom
loope
jo
iret
and
jb
mov
jo
rorb
movsb
in
dec
and
sahf
movsl
xor
repnz
push
cwtl
pop
cmp
xorl
ss
add
sahf
fs
fldt
cli
fs
xor
pop
notl
jbe
add
add
push
inc
insb
repz
push
out
imul
bound
dec
mov
es
out
inc
call
inc
add
cmp
out
xor
repz
cmp
jmp
outsl
pusha
cmp
add
xor
mov
or
int3
mov
mov
cltd
and
mov
daa
cmpsb
div
dec
scas
lea
adcl
aam
sbb
sarl
add
sbb
ret
inc
sub
into
ja
dec
jmp
insl
inc
adc
xor
mov
sub
sbb
jnp
rclb
jno
push
iret
pop
int3
xlat
lea
jne
add
xchg
push
scas
arpl
jb
jg
mov
mov
fcompl
cs
imul
adc
subb
mov
dec
outsl
mov
gs
insl
imul
pand
orps
mov
jmp
and
sub
fidivl
aaa
fcoms
es
jae
flds
test
or
sub
jae
leave
mov
dec
adc
mov
cmp
in
xor
pop
jle
test
xchg
lahf
push
sub
int3
cmp
dec
sbb
mov
sub
xchg
push
pop
jmp
lock
dec
sbb
punpcklwd
inc
lea
adc
sbb
aam
cwtl
jl
inc
andb
fwait
in
xchg
sub
jae
fnstenv
pop
int
jbe
sti
mov
lds
sub
sub
fisttps
cmpsb
rcrl
cmp
and
mov
loope
ds
sub
push
fmul
mov
inc
ljmp
push
xor
pop
imul
out
inc
sub
sbb
lret
sub
adc
jae
add
arpl
bound
xchg
test
or
mov
xor
push
lods
and
pushf
and
pushl
inc
dec
enter
mov
jp
inc
mov
mov
js
dec
cld
jg
cmp
inc
out
mov
push
out
fisubrs
fs
cld
or
stc
test
shll
cld
pusha
or
ss
negl
addr16
push
fwait
mov
andl
mov
and
add
sbb
imul
int
test
dec
test
push
mov
xchg
sbb
mov
lret
sbb
jo
pop
inc
cwtl
pop
pop
sbb
int3
inc
push
out
mov
or
lods
loope
jmp
jbe
fsts
or
int3
popa
stc
test
addr16
push
mov
out
sbb
mov
push
and
jb
push
cltd
jmp
and
push
imull
cmp
and
incl
push
gs
pop
xor
mov
arpl
sahf
stc
inc
insl
shrl
dec
fistps
push
or
clc
fbld
testl
inc
mov
sarl
sub
adc
pushf
jae
cmpsb
test
mov
fstpt
cmp
cmpsl
ficompl
xchg
xchg
xor
shlb
js
imul
sbb
adc
jns
fidivl
mov
cmp
repnz
jl
mov
imul
imul
test
pop
idiv
mov
sub
sahf
jp
xchg
pop
repz
adc
xchg
mov
pop
xchg
lcall
jb
jnp
clc
dec
test
sbb
or
xchg
xchg
shr
dec
push
xchg
inc
and
in
addr16
jge
mov
xor
movsb
xor
xor
push
add
mov
je
xor
and
adc
sbb
in
cli
sub
lods
pop
dec
filds
push
push
jl
cmp
bound
ret
std
and
fs
scas
scas
mov
out
mov
cmp
push
push
dec
xchg
jb
mov
loope
or
mov
adc
movsb
imul
xchg
fsts
leave
data16
fmuls
adc
insb
test
xchg
cmpsl
popa
or
jno
mov
test
push
repnz
cmp
orb
inc
dec
cmp
fbld
hlt
add
in
in
cmp
icebp
cmp
mov
push
xor
dec
jo
add
test
test
push
inc
mov
ss
cld
fisttpll
shll
cwtl
push
sti
loopne
inc
dec
ret
addr16
orl
popf
outsb
mov
push
or
shl
jle
cmpsl
loop
pop
add
std
je
sbb
fs
cmp
mov
push
jle
out
mov
sbb
cmp
mov
jle
in
les
jo
cmpsb
mov
sbb
loop
sbb
jecxz,pn
push
js
int3
addl
daa
or
inc
push
mov
dec
bound
jbe
pop
or
mov
xchg
imul
icebp
mov
cwtl
inc
cmp
mov
jp
sub
test
mov
setle
adc
cmp
lea
je
loop
mov
fwait
ja
scas
int
or
push
lahf
mov
jo
dec
xor
sub
in
lret
jbe
lods
cmp
ret
jmp
push
jne
leave
dec
xchg
inc
fldenv
adc
sbb
fiadds
cmp
lret
ss
nop
mov
xor
insb
or
ja
jmp
stos
cli
ds
loope
mov
aam
cmp
sub
call
push
popa
lret
pop
xor
push
in
sti
cli
faddl
add
sti
and
enter
sub
push
push
ret
add
fstl
pop
in
loope
push
imul
jns
ja
js
jbe
bound
outsl
lret
jbe
cwtl
outsb
popf
xor
push
dec
mov
in
sub
mov
mov
and
mov
stos
push
fistl
inc
jp
xchg
rcr
aad
in
shlb
or
and
sub
orb
mov
inc
dec
lahf
sahf
push
adcl
cmp
xchg
cmp
repz
sub
leave
jl
push
cmc
adc
jbe
ret
jbe
imul
cmp
out
mov
ret
js
push
in
aaa
stos
mov
movsb
sub
imul
mov
lret
and
lcall
dec
inc
xchg
rcrl
mov
in
ror
adc
jp
call
bound
push
push
sti
jecxz
sbb
pop
ja
loopne
addr16
enter
sub
inc
popa
dec
call
ss
stos
mov
mov
xchg
out
push
jmp
dec
out
jle
stos
jl
xorb
rorb
inc
jae
mov
and
js
jle
jo,pt
jns
and
and
aas
into
xchg
or
pop
pop
xor
repz
inc
sbb
je
leave
andl
popf
roll
jle
sub
mov
jo
push
pushf
cmc
mov
shl
mov
lea
push
ljmp
mov
jbe
stos
or
dec
sub
mov
add
out
pop
aaa
jp
mov
inc
mov
es
dec
les
out
jecxz
loope
mov
insl
std
call
adc
popa
into
sbb
shrl
jge
jae
stc
mov
pop
sahf
dec
into
stc
scas
push
popf
xchg
cmp
xchg
int3
pop
adcb
mov
mov
jns
in
das
call
add
jae
sub
loope
dec
fsubrl
cmpsl
stos
adc
out
inc
push
fadds
mov
lahf
pushw
addl
lcall
xchg
stos
cmp
insb
mov
adc
push
jns
jno
adc
data16
lods
repz
jecxz
mov
jns
stos
mov
test
pop
adc
push
pop
xor
test
jl
xor
mov
mov
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
sub
adc
orl
addl
add
call
sbb
push
mov
sarb
pop
pop
add
xchg
lods
xchg
je
sbb
mov
or
mov
jae
ja
into
mov
push
push
sar
lret
push
push
mov
mov
push
push
xchg
ficomps
jl
ret
fs
test
sub
pop
jle
test
sub
adc
rcr
pop
and
cmp
push
jne
rorl
mov
mov
cmc
mov
in
mov
or
or
dec
div
xchg
mov
cwtl
mov
push
jno
cltd
mov
mov
xrstors
mov
xor
jb
dec
cmp
fwait
or
test
lods
cmp
xchg
push
stos
lds
sub
lds
fidivs
push
leave
rolb
jbe
dec
fimuls
mov
push
fdivl
shrb
stc
mov
lods
cmc
imul
sub
jmp
cmp
xchg
enter
dec
cmpsl
stos
faddl
into
xor
mov
lock
cmp
repz
mov
push
repnz
enter
mov
ror
jl
xlat
inc
daa
pushf
imul
push
fwait
rcll
negl
cli
jb
lock
aam
mov
popa
stos
js
ret
out
xor
es
push
pop
call
shrb
push
sbb
sar
mov
adc
xchg
cli
iret
call
bound
jnp
inc
mov
mov
jg
rorb
js
js
fwait
cmp
and
push
aad
sbb
es
mov
pop
lcall
loop
push
inc
xor
jle
int3
fpatan
mov
jle
mov
sub
fsubrl
loop
lods
test
inc
shll
push
iret
mov
lods
push
shl
lret
sbbb
hlt
and
and
jns
pop
xlat
fbstp
lcall
fcoms
arpl
fistl
ljmp
add
lahf
jno
pop
sarl
mov
ljmp
scas
inc
xorb
mov
or
adc
leave
mov
pop
out
rclb
mov
ds
aam
push
imul
adc
gs
xchg
jmp
in
or
mov
in
enter
loope
mov
push
mov
pop
add
cmp
or
ret
sbb
jbe
or
cmp
movsl
jecxz
scas
cwtl
mov
insl
aad
leave
ss
out
scas
adc
mov
mov
stos
or
adc
mov
xchg
nop
xor
insl
xchg
bound
xor
sar
aad
mov
inc
sub
xorb
mov
lcall
addb
inc
xor
and
in
pusha
jecxz
sbb
sub
or
stos
or
mov
pop
or
mov
pusha
mov
xchg
in
inc
enter
inc
lods
mov
or
add
jecxz
cmp
jb
lock
arpl
cmp
sahf
xor
dec
lret
movsb
and
sbb
inc
mov
jns
adcb
lock
mov
jo
dec
in
mov
clc
pusha
pop
jns
outsl
out
fnsave
jmp
in
ljmp
popa
out
push
pop
lea
sub
mov
sub
fmul
pop
sub
or
push
push
mov
outsl
jmp
pop
mov
inc
pop
in
popf
or
mov
mov
cld
psraw
dec
jne
mov
push
pushf
jl
dec
dec
or
xor
jne
popf
movsb
xchg
pop
push
pop
pop
xor
jae
popl
sub
stos
push
cmp
call
sub
shl
inc
icebp
xchg
and
mov
jae
ds
xchg
jmp
fidivrs
push
mov
push
adc
mov
andb
outsl
test
xchg
ljmp
xchg
call
cmp
repz
mov
cmp
jge
or
jl
dec
inc
movb
mov
inc
dec
cmpb
stos
std
sahf
ds
shlb
pop
xor
mov
pop
rorl
inc
aad
xchg
mov
mov
sub
sti
repz
jae
xchg
or
mov
jg
and
cli
mov
shl
xor
add
jo
popf
adc
and
mov
in
aad
sub
cmp
dec
mov
mov
ss
repz
xlat
fwait
push
sbbb
cli
xor
mov
cmp
mov
xchg
lahf
in
loopne
add
jno
in
add
shlb
popa
out
fucom
lcall
dec
pop
into
mov
test
icebp
jne
dec
push
and
aad
jmp
sbb
xor
pop
jnp
inc
mov
fwait
fwait
sub
cld
mov
or
dec
push
inc
cmp
nop
pusha
xchg
pusha
push
pop
dec
push
aas
cmp
ror
mov
pop
and
dec
pop
fwait
mov
dec
adc
push
dec
pop
jb
popa
push
inc
mov
sarb
bnd
adc
pusha
push
cmp
xchg
add
lret
insb
jno
jl
sbb
lret
fisubs
push
sbb
or
jnp
adc
jo
pop
cwtl
mov
in
icebp
mov
ss
insl
add
loop
mov
sub
out
aam
das
pop
xorb
icebp
mov
mov
dec
inc
cmp
add
fwait
push
sbb
cmpsb
xor
xchg
repnz
cmp
dec
mov
or
andl
ljmp
or
and
fcoml
iret
pop
icebp
cmpb
dec
ret
ds
inc
daa
pusha
xchg
and
movl
inc
adc
cli
dec
sbb
inc
les
sbb
rcr
dec
loopne
and
xor
mov
fists
add
jnp
and
adc
mov
mov
cmp
mov
loop
push
cmc
or
inc
push
pop
insb
mov
int
push
fnstcw
data16
test
int
jo
mov
insl
icebp
out
test
inc
xor
jno
testb
clc
in
insb
imull
dec
push
cltd
imul
cmp
pusha
lds
add
add
push
and
lea
es
or
call
negb
mov
mov
dec
roll
cmp
movsb
inc
ds
lods
xchg
mov
mov
je
ss
pop
movsl
inc
test
ljmp
call
mov
mov
xor
shl
mov
aas
adc
or
adcb
mov
add
jp
lahf
ret
ljmp
testb
xor
loope
sbb
push
fisttps
fbld
xchg
cmp
shr
iret
mov
jbe
adc
push
daa
shll
rorl
jbe
test
dec
sub
cwtl
js
dec
loope
adc
clc
adc
scas
sub
push
movsb
data16
cmp
fisttpll
mov
sbb
push
faddl
mov
push
sbb
clc
or
es
push
loope
call
sarb
jle
mov
xchg
dec
pop
fisubl
fadd
and
test
and
fisttpll
cmp
pop
pop
xor
je
mov
dec
push
jmp
repz
dec
jbe
inc
dec
incb
pop
inc
jle
xchg
mov
ss
add
sbb
pop
or
sub
out
add
filds
jle
jp
jb
cwtl
mov
imul
pop
push
sub
mov
mov
cmp
mov
insl
out
sbb
push
je
data16
repz
js
push
gs
flds
std
adc
and
popf
or
test
jle
mov
in
insl
daa
aaa
lods
ss
shll
leave
xor
cs
fdivrs
push
cmp
push
inc
xchg
pop
pushf
mov
pop
adc
sub
xor
jg
shll
fcoml
xor
repz
xchg
xlat
or
arpl
adc
sub
mov
mov
push
iret
dec
pop
pop
addb
jge
mov
adc
aam
pop
cmp
lret
adc
and
or
xchg
lods
fdivrp
aam
jp
push
xor
or
and
leave
adc
popa
adc
mov
bound
enter
dec
shlb
shlb
notl
sub
add
cmp
sarl
inc
push
pop
and
addb
inc
adc
or
mov
daa
fsubrl
cli
dec
movsl
dec
mov
es
xorl
and
ret
push
adc
out
incb
cmp
mov
mov
loop
cli
sub
push
test
mov
dec
jle
jg
lret
loop
sar
adc
in
hlt
in
xor
add
sbb
cmpsl
ljmp
leave
mov
jne
in
add
movb
push
bound
insb
ret
jge
movsb
lahf
xchg
xchg
jge
enter
js
mov
imul
cwtl
or
out
fmull
fnclex
outsb
pop
dec
jns
mov
fsts
inc
push
push
and
add
inc
mov
adc
inc
shll
mov
fistps
imul
stos
stos
mov
nop
aad
in
adc
loope
dec
icebp
and
push
adc
bound
outsb
sahf
and
inc
pop
repnz
push
leave
cmp
ds
je
stos
mov
ds
fldl
loop
inc
mov
in
xchg
add
fdivr
call
mov
bound
mov
inc
lock
outsb
daa
pop
cmp
cwtl
inc
adcl
mov
pop
inc
jnp
sbb
popf
jmp
cld
xchg
or
pop
bound
ljmp
adc
xchg
or
dec
repz
mov
cli
negl
dec
sbb
push
in
or
stos
and
pop
pop
push
nop
xchg
test
and
push
or
mov
mov
nop
pop
dec
in
add
mov
mov
xchg
cmp
std
je
packssdw
or
pop
aaa
lret
pop
add
xchg
mov
sbb
test
jb
shll
pop
mov
dec
xchg
dec
cvttps2pi
insl
repnz
and
les
lret
mov
daa
mov
nop
sub
in
or
out
das
fldcw
mov
dec
pop
pusha
fmul
mov
mov
pop
dec
lahf
lods
mov
int
jl
mov
xchg
adc
popa
or
call
dec
push
les
push
test
adc
loop
test
sbb
mov
in
cs
lret
arpl
ret
repz
push
in
cltd
arpl
jne
jb
pop
jmp
jb
push
jne
mov
aaa
push
or
adc
xchg
mov
js
mov
mov
xchg
mov
xchg
jge
xor
dec
outsl
mov
inc
sbb
std
cmp
jno
pushf
movsl
pop
jbe
out
stc
outsb
roll
rorl
stos
mov
data16
inc
mov
test
xchg
sbb
dec
stos
add
sub
cmpsl
sbb
mov
mov
int3
mov
fistps
shrl
push
stc
lret
add
fdivs
push
iret
inc
push
mov
lock
sarb
dec
pop
and
mov
xor
xor
bound
mov
je
rcl
cmp
xor
add
dec
mov
div
dec
inc
push
dec
subl
fs
adc
xor
push
xchg
in
push
lods
xchg
sub
lcall
mov
ret
add
add
jo
pop
xchg
xchg
mov
inc
adc
cld
gs
adc
insb
push
cwtl
jbe
sub
cwtl
jno
and
or
dec
mov
inc
sub
push
dec
mov
insb
pop
int
sub
test
je
mov
dec
insb
scas
mov
jae
sete
mov
dec
ret
or
leave
bound
pop
int3
iret
pop
dec
lods
jp
fstpt
push
in
jl
sbb
push
mov
adc
sbb
outsb
or
or
cmp
dec
mov
add
pop
inc
mov
rclb
repnz
aam
int3
pop
icebp
sahf
cltd
jl
shufps
push
negb
ficoms
xor
inc
movsb
jns,pt
enter
mov
adc
inc
leave
test
les
call
mov
xchg
add
loop
sub
lods
fsts
fwait
push
xor
sbb
adc
or
cwtl
jnp
mov
or
xchg
lods
jp
pop
dec
movsl
add
cmpsl
ud0
aad
or
cwtl
inc
out
lret
jp
movsl
es
int3
movsl
mov
aam
mov
neg
jge
cwtl
hlt
sbb
and
adc
push
xchg
push
or
cmp
into
hlt
inc
sahf
cmp
fs
outsl
adc
adc
xor
adc
in
fwait
aam
xchg
mov
sub
movsl
movsb
test
test
sbb
inc
jmp
xchg
mov
mov
push
push
repnz
jge
sbb
pop
adc
mov
add
pop
pushfw
sbb
mov
pop
jo
std
fldl
into
sub
ret
decb
cmp
mov
add
shll
mov
rol
mov
mov
cmp
imul
call
outsb
lea
in
outsl
xor
fwait
inc
mov
fwait
dec
lret
xchg
xchg
or
sti
popa
out
mov
orb
jmp
pop
xchg
repz
push
int3
add
int
test
lahf
sahf
outsb
pushf
inc
jl
fdivrl
jmp
mov
adc
jo
cmc
xor
insl
inc
sarl
insb
jns
pop
les
or
lods
mov
adc
leave
cmp
pop
pushl
push
cmp
lret
idivl
lods
cmp
and
dec
inc
mov
jle
lret
shrb
jno
mov
cwtl
ret
inc
into
add
stc
loopne
add
loope
mov
sub
negl
outsb
xchg
enter
sbb
xchg
xchg
repz
xor
mov
and
fwait
cmp
lods
subl
mov
xlat
lahf
xchg
push
mov
sub
sbb
push
inc
mov
shll
sarl
ljmp
inc
sbb
pushf
cmp
sbb
dec
data16
inc
or
lea
leave
xchg
js
test
xchg
test
adc
add
dec
js
in
lret
pop
pop
sub
cmp
push
mov
push
add
stos
sbb
or
add
push
dec
imul
mov
pop
mov
cmp
push
inc
lea
lret
sbb
xor
and
cs
xchg
scas
sub
adc
xor
iret
sbb
mov
mov
jno
fmul
fcoms
imul
jbe
clc
lret
jo
sahf
fists
mov
ljmp
push
sbb
sub
xor
lcall
jmp
and
pop
insb
and
pop
cmpsb
cmp
mov
ja
mov
aam
mov
or
lret
out
jge
jb
or
mov
xchg
cmp
jno
inc
ret
jp
popa
loopne
mov
lcall
js
ret
in
lret
popa
push
andl
pop
lcall
xchg
mov
scas
mov
subl
mov
xor
inc
rorb
adc
xchg
hlt
cmpsl
inc
mov
aaa
les
aad
xor
mov
bound
xor
add
fildll
sti
call
or
mov
inc
jo
jbe
inc
mov
mov
xchg
orl
pop
push
call
sub
and
shlb
push
fstpt
adc
aaa
in
push
ja
mov
jno
add
and
xchg
or
pop
adc
mulb
testl
jmp
movsl
sbb
xchg
sti
lds
cmp
mov
push
jae
in
mov
or
out
sub
mov
into
repz
lahf
js
inc
or
jg
std
mov
mov
flds
xor
xchg
sti
xorb
jbe
mov
repz
inc
mov
pop
int
frstor
test
in
in
push
das
push
shlb
inc
aaa
shl
call
cmp
aad
imul
in
bound
es
fisubrl
jo
stos
lcall
repz
inc
sbb
rcl
js
ret
les
and
fwait
lret
cli
push
lds
fmull
or
int3
mulb
xor
cmp
test
jne
stos
stc
pop
and
mov
mov
xor
lds
pop
cmp
cvttps2pi
sub
fisubrs
pop
rorb
mov
jmp
into
pop
and
fyl2x
pop
pusha
lea
xor
jl
addr16
sbb
shlb
gs
jle
ljmp
addr16
dec
inc
pop
mov
add
fidivrs
sbb
fistpll
dec
sbb
shll
push
sub
rolb
xor
jg
xor
jnp
sbb
dec
aam
mov
in
out
xor
jbe
pusha
push
aam
jne
cmpsl
jae
mov
mov
xchg
sbb
ds
dec
out
mov
add
pop
mov
sub
mov
mov
or
fnsave
stos
push
enter
sub
inc
loop
fsts
push
adc
mov
out
inc
pop
orb
lods
cmpb
loopne
cmp
iret
inc
das
add
lea
scas
cli
cmp
pop
xor
cmp
arpl
sub
jg,pn
pop
lahf
mov
movsl
outsb
and
push
outsl
push
cmp
ficompl
dec
int3
jns
push
xor
mov
dec
rcl
test
jg
xchg
imul
push
push
fnstenv
repnz
and
stc
or
call
lret
sbb
jne
xchg
add
sbb
dec
into
loope
out
cmpsl
in
mov
jne
aad
jmp
test
add
je
divb
or
push
sti
inc
or
roll
and
out
rorl
and
adc
push
adc
jne
adc
pushf
inc
or
orb
pop
fstp
xor
mov
aas
cli
pusha
push
jo
jnp
sub
js
icebp
repnz
test
adc
and
push
xor
push
int3
jne
mov
push
orl
inc
lods
shll
ja
push
jnp
das
jne
std
mull
xor
jle
jne
xor
xor
into
and
repz
jne
xchg
sbb
int
je
cmp
mov
aad
rcrb
loopne
imul
ja
mov
pop
lcall
jge
stos
stc
adc
fsubrs
xor
addr16
lcall
daa
jbe
and
push
push
push
xor
mov
call
push
das
xchg
fdivr
inc
sti
xor
mov
xor
xlat
daa
fdivs
imul
jb
adc
cmp
ficoms
loopne
loope
lcall
inc
pop
je
xor
addr16
insl
cltd
cmpb
mov
pop
aas
push
pop
pop
jp
test
cmpsb
jl
mov
ljmp
xor
sub
test
mov
es
xchg
cmp
or
adc
mov
in
jno
cmpsb
push
loop
cmc
rclb
sbb
leave
icebp
sbb
mov
aam
lahf
das
nop
ret
push
mov
daa
xor
pop
mov
mov
sub
test
lret
pushf
and
hlt
add
sbb
mov
outsb
mov
pop
sbb
sub
cmp
dec
mov
lcall
scas
adc
nop
insl
fwait
stc
mov
enter
fldl
loopne
dec
adc
xchg
sub
aad
ds
leave
loop
mov
popa
sub
imul
lret
imul
pop
lahf
outsl
adc
cld
lods
ret
xchg
lahf
jmp
jbe
adc
outsl
fidivs
xor
add
sbb
push
lods
fldenv
sti
sbb
xchg
pop
jecxz
cld
fimull
mov
pop
mov
ret
and
pop
test
cmp
dec
pop
es
jp
push
pop
pop
or
popf
cld
shll
sub
xchg
loop
lahf
stc
jmp
sub
pop
dec
rcrl
push
and
pop
sub
jg
dec
mov
xor
adc
push
test
pop
or
pushf
aaa
or
and
mov
jp
xchg
push
add
nop
sbb
push
jmp
test
in
jbe
in
jg
pop
cmp
jbe
popa
xchg
movsb
stos
popf
cmpsb
cmp
pop
in
outsb
or
lods
mov
xchg
pop
mov
lea
rorb
push
xor
inc
mov
dec
and
and
cmpb
xchg
lds
pushf
ret
mov
push
pop
mov
jnp
dec
out
gs
inc
push
aaa
mov
pop
adc
test
push
xchg
or
les
leave
lret
adc
jge
fisttps
mov
mov
sub
imul
mov
xchg
push
rcll
push
aas
lret
pusha
imul
aaa
idivl
aam
rcrb
mov
dec
je
jp
lret
test
mov
dec
xor
rorb
push
sub
ret
jg
pop
sbb
xchg
iret
ficoml
rcrl
cmpsl
xchg
jns
and
lods
and
mov
mov
inc
sbb
add
out
cmp
mov
dec
lds
fstl
repz
adc
aam
xor
shr
mov
xor
dec
xchg
jne
lahf
inc
notl
adc
sbb
push
cli
fs
dec
lret
lods
std
dec
mov
aas
out
dec
inc
sub
or
xchg
xor
inc
mov
xchg
jno
xchg
adc
pop
xchg
mov
adc
pop
or
ss
pushl
movsl
ret
stos
lods
xchg
push
psraw
mov
push
mov
lock
push
cmp
add
lret
out
xchg
xchg
sbb
lret
mov
cmpsb
and
adc
jo
jp
movsl
push
add
shrl
inc
inc
xor
jbe
mov
xlat
out
mov
cmp
leave
dec
js
mov
xor
lret
movsl
and
mov
adc
mov
xchg
cmpsl
push
and
out
cli
jg
dec
cltd
push
mov
sbb
jmp
cmp
jecxz
pop
jmp
rcll
mov
pop
lods
out
inc
sbb
inc
add
sub
mov
jae
xchg
inc
xor
gs
or
out
sbb
cmp
hlt
in
sarb
fstl
xchg
push
daa
dec
clc
or
mov
sarl
stos
int
in
out
mov
sbb
ds
gs
test
nop
stos
pop
adcb
popf
dec
xorb
lds
hlt
out
mov
repnz
jp
daa
pushf
mov
out
mov
sbb
add
shr
and
mov
imul
subb
push
cmp
ficompl
dec
dec
insl
mov
xor
dec
jp
push
outsb
lods
ret
cmp
jo
mov
loop
jo
stc
dec
pop
dec
lret
inc
inc
js
loopne
cli
stos
push
pop
gs
or
fidivrs
dec
cmp
outsb
push
je
or
in
mov
xchg
sub
mov
in
loopne
mov
dec
jbe
cmpsl
hlt
jg
out
xlat
cld
xchg
xchg
push
adc
add
subb
mov
push
mov
xor
mov
out
movsb
mov
mov
jg
sbbl
or
movsb
lods
scas
or
cli
test
fwait
mov
sbb
cli
test
mov
cmp
stos
sub
xchg
data16
pop
pop
rcll
test
fsubs
hlt
xchg
mov
mov
iret
jmp
pop
inc
mov
pop
mov
or
clc
out
adcb
sbb
fmull
mov
push
shl
in
movsl
in
sub
iret
xchg
adc
sbb
pop
in
push
clc
dec
pop
dec
movl
push
leave
into
mov
fcoms
dec
push
and
cmp
cmp
hlt
jmp
loop
dec
shl
dec
xor
dec
inc
int3
jb
sub
imul
xchg
and
add
mov
lock
or
pop
es
inc
andb
sbb
leave
pop
mov
sbb
sbb
or
stc
test
or
mov
std
pushf
nop
sbb
cmc
jg
xorb
mov
iret
out
sbb
sub
into
clc
repnz
fcmovnu
enter
xchg
lahf
jp
mov
hlt
ror
mov
rcrb
and
dec
fnstsw
das
xchg
mov
add
hlt
repz
ret
adc
mov
sbb
sub
cwtl
xchg
cmp
outsb
sbb
cmp
inc
hlt
test
and
xchg
mov
lcall
daa
rcll
inc
rorb
pop
jo
mov
xchg
pusha
dec
imul
adc
push
rcrb
jp
mov
sbb
and
shr
insb
bound
pop
mov
mov
jp
int
sub
push
push
jle
adc
stos
pop
test
fs
es
jnp
push
inc
rcll
sbb
lock
add
inc
xchg
scas
fwait
jge
mov
push
sub
sub
imul
or
xor
push
mov
scas
push
pop
les
cs
push
addr16
stc
push
or
xor
ficompl
mov
lea
ret
xchg
inc
lea
out
sub
ret
add
push
sti
pop
inc
pop
sbb
rorb
cmp
push
push
in
and
repz
out
mov
mov
mov
mov
out
mov
sub
mov
test
mov
test
xchg
jecxz
je
cmp
xchg
or
dec
mov
jmp
je
sahf
push
xchg
mov
stc
xor
shrl
xlat
insl
and
out
xchg
push
pusha
xor
insb
subl
pop
jns
adc
sbb
lock
pop
inc
movb
xchg
stc
push
jg
mov
lret
jnp
jecxz
pusha
das
and
jp
cltd
sbb
test
sub
pop
inc
lcall
das
aad
mov
add
adc
xor
pop
push
fsub
out
jmp
insb
xor
xchg
cmpsl
inc
sub
add
mov
sarb
out
ja
pusha
xlat
add
jns
and
push
shll
lods
jg
pop
inc
jg
mov
xor
lahf
inc
cmp
popf
repz
fcmovnu
mov
test
mov
mov
mov
jae
call
cld
sti
lea
xchg
popf
loope
fwait
mov
inc
push
outsb
pop
cld
xchg
aam
shll
mov
div
jge
jecxz
mov
or
cmp
xor
inc
adc
mov
dec
fstps
out
imul
pop
out
cmpsl
dec
xchg
add
inc
clc
mov
out
iret
cli
cli
xchg
in
hlt
xor
fwait
xor
push
js
sbb
stos
cmp
mov
add
add
dec
dec
mov
pop
into
jle
sbb
dec
insl
ljmp
adc
lret
in
sub
in
cmp
add
shlb
out
je
loop
jecxz
mov
mov
jne
and
mov
addr16
ror
imul
xchg
mov
sar
pop
sub
jl
xchg
mov
sub
lea
and
mov
sub
insl
arpl
adc
test
ss
dec
fildl
loopne
lret
push
pop
xchg
ret
ds
jo
rorl
xor
jmp
fldt
leave
pop
inc
lods
sub
or
jns
sbb
mov
out
in
xchg
movsb
lods
cmp
sahf
into
sti
js
sub
mov
enter
in
pop
insb
pop
imul
fdivs
sub
insb
add
pop
iret
insl
jecxz
in
lds
dec
div
sbb
and
xor
mov
jae
add
push
xlat
jae
movsb
jmp
in
nop
test
insw
pusha
or
mov
bound
add
xor
mov
jg
das
lea
inc
loope
cmpsb
adc
rcrb
dec
pop
movsb
cmpl
dec
cmp
rorb
enter
ljmp
pop
imull
add
pop
push
out
or
out
lods
rcll
inc
clc
nop
ljmp
std
mov
dec
out
cli
or
bound
cmp
imull
loope
fadds
xchg
ljmp
xchg
mov
outsb
lods
scas
faddp
dec
add
cmp
mov
cmpb
mov
lds
fimull
addb
inc
adc
mov
add
cmp
push
lcall
mov
mov
jns
xchg
mov
insb
cmp
out
xchg
push
jle
daa
add
mov
push
push
aaa
aaa
xchg
shll
ja
mov
loopne
test
cltd
xor
pop
jbe
ss
xchg
jnp
sti
push
out
nop
mov
sub
lahf
xchg
xchg
es
lret
rcrb
jg
test
test
sbb
dec
xchg
rcrl
or
in
pushf
and
mov
pop
push
rclb
adc
inc
flds
dec
push
pop
jno
jbe
lods
mov
cmp
mov
or
cmp
pop
xchg
and
push
jno
mov
idivl
decl
test
insb
sahf
add
addr16
les
jns
pop
pop
popa
dec
aad
test
jo
lea
xchg
and
jg
xchg
dec
jae
bnd
mov
or
push
shrb
mov
notb
enter
mov
pusha
test
and
jg
ror
push
dec
inc
loopne
mov
cwtl
lahf
sbb
imul
orl
mov
arpl
sbb
movl
push
jge
sub
popa
out
xchg
int
je
adc
lods
inc
stc
jnp
enter
pushf
inc
adc
pop
mov
mov
mov
fstps
xor
test
sti
pop
std
jo
mov
mov
pop
push
xlat
mov
mov
int3
push
in
push
imul
or
push
fidivrl
lcall
outsl
jle
xchg
or
js
push
mov
int
fdivrl
cmp
insl
pop
shlb
or
imul
and
lret
ficomps
int
or
pop
xchg
jb
pop
push
inc
aaa
xor
push
test
cmp
int3
mov
cmc
xor
and
call
call
add
hlt
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
or
mov
orl
addl
xor
loopne
js
sub
inc
mov
jp
data16
inc
movsb
cs
jmp
sarb
inc
cmp
sbbl
ja
test
rorl
cli
cmp
pop
and
test
xchg
scas
sti
push
subl
ret
adc
push
hlt
push
iret
sahf
xchg
adc
arpl
cwtl
sbb
addr16
push
adc
jecxz
iret
iret
or
and
addr16
lea
scas
mov
mov
dec
mov
scas
incb
nop
aad
jp
into
cmpsb
xchg
lret
mov
dec
jae
dec
sbb
int
mov
mov
inc
dec
clc
jl
clc
xor
rcll
iret
mov
ret
cmp
mov
mov
iret
lods
jl
xchg
mov
stos
lods
or
fildll
fnstenv
sti
mov
rcll
mov
outsb
and
cmp
or
jae
outsb
cwtl
sbb
jmp
out
add
cli
cmp
daa
arpl
and
push
mov
dec
push
jle
mov
idivl
xchg
adc
sub
cmp
dec
fistpll
and
inc
mov
add
dec
hlt
cwtl
outsb
jae
sbbb
xchg
data16
aad
enter
and
addr16
fcoms
or
pop
fs
lods
pop
mov
test
mov
dec
pop
adc
jmp
decl
mov
pop
mov
sti
es
inc
pushf
or
mov
inc
clc
sbb
dec
mov
xchg
out
lret
sub
or
or
and
loop
out
gs
popa
sbb
dec
test
sub
cs
mov
xor
imul
fwait
loopne
pop
out
lcall
mov
mov
sbb
pusha
mov
cld
xchg
test
jg
scas
rcll
add
fidivs
mov
in
lret
and
stc
repz
jbe
aam
leave
pop
cltd
xchg
aad
mov
sub
pushf
and
fcmovbe
imul
cld
sbb
xchg
data16
mov
repz
inc
scas
adc
or
push
push
shr
adc
iret
clc
andl
mov
mov
fsubl
loopne
aaa
jmp
fidivrl
fprem
aam
cli
les
mov
js
adc
adc
cmp
xor
mov
xlat
xlat
lahf
pop
lock
call
mov
sarl
pop
daa
mov
jg
out
iret
mov
xchg
call
je
sub
push
out
int
arpl
repz
mov
fwait
and
nop
mov
pop
sbb
xchg
dec
mov
jmp
test
push
fs
ljmp
sub
test
sub
or
ret
aas
repz
ret
add
js
jp
cmp
sub
loop
xchg
mov
sbb
loop
ljmp
inc
cmpsl
outsl
popf
inc
xchg
sbb
jo
dec
xchg
into
dec
loop
sbb
xor
scas
jg
pop
lds
and
inc
adcb
data16
or
addr16
lods
push
push
cmp
push
xor
mov
mov
leave
pop
push
imul
shlb
mov
cmc
cs
mov
out
loope
loop
lds
das
fisttpl
shl
fstl
movsb
mov
inc
sbb
xor
cmp
adc
mov
cld
scas
push
mov
retw
negb
lods
fnsave
mov
dec
inc
shrb
push
jecxz
and
stc
pop
fs
pop
inc
pop
pop
sbb
lahf
push
xor
subb
xchg
sub
add
out
sahf
push
movsl
pusha
or
test
js
cwtl
repz
push
mov
aas
and
jle
out
aas
lods
andb
push
sub
fimull
cltd
or
ret
mov
loop
or
test
sbb
pop
testb
fwait
adc
xlat
in
push
dec
inc
jbe
cmp
mov
fimuls
nop
adc
fmull
sub
or
and
sbb
mov
push
lcall
cwtl
pop
ffree
jne
addr16
lds
out
xchg
daa
pop
add
jbe
rorb
rorl
inc
pusha
aas
imul
bound
or
mov
sbb
lahf
ds
test
rorb
into
aaa
mov
add
jb
dec
and
push
inc
inc
sahf
and
sub
or
es
sbb
pusha
xchg
sbb
mov
lods
xor
and
js
mov
mov
cmp
cmp
arpl
aaa
xor
sahf
dec
jmp
lcall
inc
cmp
insl
lahf
imul
cmp
mov
int
aaa
xchg
enter
or
lea
mov
rorl
aad
jbe
jp
insl
hlt
sub
sbb
mov
mov
xor
int
pop
scas
add
cmp
inc
dec
mov
addr16
and
mov
inc
insl
sbb
xchg
inc
sub
out
scas
xor
dec
sub
xchg
push
mov
jns
pop
sbb
jae
mov
xchg
out
ds
and
xchg
inc
and
add
repnz
sbb
jl
jae,pn
test
cmp
mov
jle
cmc
out
rorb
adc
mov
xor
pusha
sti
lcall
sbb
subl
mov
out
adc
into
leave
repnz
jg
sahf
cmp
mov
pop
popa
divb
popa
cmp
imul
add
mov
mov
imul
adc
xor
fmull
xchg
xchg
adc
lds
xor
stos
pop
mov
pop
outsl
bound
into
xor
adc
int3
jno
je
add
data16
xchg
inc
clc
in
cmp
mov
jmp
cmpl
mov
mov
lret
fstpt
mov
fwait
xchg
insb
ret
aam
sahf
ret
cwtl
dec
pop
push
leave
jecxz
xor
mov
ds
jne
push
mov
movsb
in
inc
popa
aas
mov
mov
lret
push
out
pop
cltd
notl
js
and
jb
sub
subl
mov
xor
jl
sub
divb
push
ja
ss
mov
dec
divb
mov
addb
idivb
push
clc
outsb
jno
inc
stos
imul
lds
mov
or
popa
mov
nop
in
pop
scas
icebp
xchg
lea
xchg
dec
jb
xchg
lretw
arpl
xchg
out
fwait
add
ficoms
or
or
inc
add
addl
inc
ret
mov
mov
sub
test
adc
mov
pushf
and
and
scas
mov
stc
cmc
adc
data16
lcall
pop
fiaddl
rolb
call
daa
cmp
imul
xor
xchg
inc
adc
in
out
outsl
jne
addb
add
push
push
stos
lods
aas
int
les
xchg
lret
sbb
xor
test
pop
out
enter
mov
dec
aam
sbb
outsl
dec
sub
mov
hlt
fdivrl
pusha
jo
pop
pop
mov
je
mov
cwtl
pop
out
adc
inc
push
jmp
aas
ret
test
mov
mov
mov
jb
or
sbb
add
pop
add
rorl
inc
fdivrl
lds
xor
ja
mov
mov
inc
das
in
sti
cmp
lcall
das
inc
dec
fildl
jmp
icebp
movsb
int3
push
cltd
adcl
inc
in
inc
add
lcall
stos
int3
adc
push
sub
or
clc
lcall
pop
sbb
jmp
sub
mov
dec
lcall
pop
pop
out
mov
dec
jmp
push
or
cmp
xor
push
sub
idivl
outsl
fsubs
mov
sbb
ss
cmp
adc
cmp
pop
repz
jno
xchg
inc
in
andb
adc
mov
and
jne
lds
loop
xchg
xchg
test
add
int3
int3
gs
mov
sbb
lock
sar
jne
and
xor
loopne
mov
inc
outsb
lahf
repnz
out
jnp
xor
cmp
mov
push
cmp
mov
popa
dec
mov
in
xchg
push
loopne
sbb
outsb
mov
jp
arpl
push
mov
push
pop
jle
and
hlt
imul
mov
gs
lods
jnp
hlt
add
inc
pop
in
addl
fidivs
xchg
js
insb
mov
loope
adc
stos
sbb
jmp
stos
jle
push
roll
and
dec
lahf
scas
std
sub
mov
pop
psrad
dec
pop
sub
mov
xchg
repz
mov
xchg
pop
mov
fdivrs
push
loopne
js
pop
xchg
jbe
je
xor
test
ds
push
inc
stos
push
adc
xchg
xorb
mov
xchg
jg
sti
dec
sub
repz
repz
cld
out
fcoms
negl
lcall
pop
push
fisubrl
out
push
enter
add
mov
lea
and
dec
pusha
shll
mov
inc
inc
orb
sub
or
lods
sbb
sbb
xchg
loopne
xchg
adc
jg
mov
and
sarb
add
icebp
jge
mov
in
lahf
jns
insl
ret
orb
xchg
fwait
or
push
je
add
fs
imul
ljmp
daa
enter
jecxz
push
xor
testb
sbb
add
subb
jg
ud0
jno
lock
cmp
xchg
in
data16
jmp
adc
dec
clc
cmpsl
mov
xor
xor
xlat
movups
jno
or
xchg
ror
decb
mov
push
and
jo
decl
xchg
mov
fnstcw
in
icebp
xor
add
shll
mov
push
xor
fisubrs
lock
cmc
test
sbb
push
mov
movsl
pop
insb
cmp
insl
pop
xor
or
cmp
stos
daa
cmpsb
aas
xor
mov
xor
popa
imul
aas
jb
cltd
xor
mov
jp
or
sarl
subb
xchg
push
push
push
stos
dec
push
mov
fstl
mov
mov
jg
inc
jp
add
inc
adc
jmp
repnz
cmp
sbb
ljmp
inc
ss
mov
add
shlb
push
xchg
jne
popf
jecxz
mov
rol
insl
sbb
into
cwtl
pop
cmpsb
mov
jns
loop
jp
testl
jns
jge
sub
xchg
iret
xor
pushf
cmp
lcall
lea
mov
ret
cmp
jae
imul
stos
cmp
or
xchg
or
pop
mov
jo
stos
inc
imul
adc
push
or
into
sti
mov
or
movsb
jg
ret
or
in
in
call
ja
std
icebp
test
aas
xor
test
pop
fidivrs
mov
ret
fists
sub
pop
xchg
mov
negl
lret
mov
int
sub
mov
or
push
js
lcall
pop
or
repz
rcrl
pusha
xchg
jns
sti
dec
xchg
pop
mov
jb
or
js
scas
leave
stos
int
stos
push
adc
jl
dec
jle
das
mov
test
inc
mov
dec
push
add
sub
daa
xchg
pop
mov
ljmp
push
insb
icebp
test
icebp
or
lock
sbb
sbb
es
dec
jbe
aaa
pop
push
das
ret
test
add
push
cs
sbb
mov
insb
ret
inc
mov
repz
pop
repnz
dec
and
xor
xchg
je
push
pushf
and
xrelease
xlat
add
mov
and
cli
rolb
xchg
filds
add
sbb
cmp
mov
jge
adc
and
aad
mov
out
push
cmp
mov
mov
xchg
push
nop
jmp
clc
and
test
imul
sbb
pop
std
pop
mov
subl
jle
pushf
in
jae
dec
xchg
jle
rcl
sbb
pop
mov
test
int3
cmpl
into
in
sti
mov
nop
outsl
mov
push
jmp
loopne
fidivs
aaa
jne
and
roll
in
adc
pop
xor
mulb
mov
fmul
sbb
mov
lret
mov
repz
test
repz
out
ret
inc
in
and
or
fcoms
xchg
xchg
int3
ja
fldcw
xor
jno
cli
xor
call
sbb
lods
xchg
mov
push
cli
mov
push
push
insb
shll
sub
xor
in
nop
idiv
mov
push
pop
mov
pop
sbb
mov
cmp
mov
int
loop
mov
add
ljmp
out
pop
push
and
dec
outsb
or
mov
xor
xchg
push
add
call
out
cmp
insl
adcb
lret
cmp
scas
arpl
push
mov
sub
pushf
mov
push
adc
rcl
lock
pushl
shlb
xlat
js
xor
mov
shll
fnstsw
add
lds
xchg
jae
pop
shl
jb
or
test
stos
mov
adc
test
in
dec
int3
repnz
int3
inc
fwait
insb
shlb
mov
inc
pop
fsts
cltd
xor
sbb
xor
lods
pop
dec
int3
mov
pop
fstl
pop
call
sub
aas
pop
xor
cmp
add
push
scas
pop
imul
js
es
sub
ds
in
push
inc
movsl
inc
imul
lret
cmp
pop
daa
mov
lcall
pop
mov
jb
pop
cwtl
cmp
bound
adc
dec
cmp
jae
ret
mov
test
inc
push
lcall
mov
clc
roll
lcall
ret
sub
mov
adc
rorb
mov
jmp
in
pop
mov
and
sahf
mov
add
dec
nop
push
cmp
pop
jno
test
mov
cli
push
shlb
dec
push
sti
sub
push
dec
mov
or
add
dec
sbb
repnz
pusha
or
sub
or
rcrl
sbb
mov
mov
push
int3
xchg
dec
add
pop
fsubrs
xchg
xchg
xchg
xlat
push
frstor
inc
fwait
pop
xor
stos
or
jnp
add
pop
pop
jae
adc
push
mov
mov
in
pop
mov
pop
pop
pop
jmp
mov
aam
dec
or
push
mov
mov
imul
in
mov
in
and
cmp
mov
lock
in
mov
or
arpl
or
mov
imul
cmp
sub
push
cmpsb
stc
xchg
mov
scas
xor
push
adc
shlb
stc
adc
mov
mov
pop
fistps
mov
mov
ret
xlat
gs
jno
add
adc
dec
jb
inc
and
mov
mov
and
add
stos
inc
repz
js
jmp
pop
adc
mov
neg
xchg
cli
dec
push
imul
pop
add
mov
andb
ss
fnstsw
movsb
std
add
inc
jb
xchg
cwtl
push
rol
cmp
dec
push
and
imul
ja
leave
add
out
int3
jae
popa
imul
pop
movsl
lret
imul
and
sti
inc
and
mull
jg
test
push
enter
pop
and
cmp
lea
ror
jl
mov
xor
ret
dec
xchg
icebp
add
cmc
mov
add
inc
mov
or
mov
add
fcmovnbe
and
inc
jmp
cmp
push
mov
xor
sub
rcrl
jne
jnp
or
jns
ljmp
aaa
jo
shll
test
ja
repz
stc
enter
cmp
jp
mov
call
pop
add
jmp
decb
aas
pop
or
aad
adc
jno
imul
or
stos
push
adc
inc
hlt
cmpsb
cmp
int3
call
jne
fstpl
inc
pop
mov
loope
push
mov
inc
pop
inc
xor
adc
add
and
push
jp
push
dec
cmc
fldl
push
jmp
daa
add
add
mov
sti
fidivs
mull
orl
rolb
sbb
adc
dec
popa
or
lock
addl
cmp
cld
and
sbb
shrl
cmp
ret
pop
stos
push
sbb
adc
or
pop
sub
movups
mov
xor
xor
mov
xchg
ljmp
inc
xchg
loop
or
lret
inc
jecxz
addl
nop
in
push
adc
cmp
mov
fwait
ret
pop
test
fbstp
cmpl
xchg
leave
sbb
jl
inc
cmp
cmpsl
xor
mov
inc
flds
mov
fld
inc
imul
or
pushl
sbb
push
and
mov
cmp
outsl
add
sti
and
fwait
imul
sbb
jmp
in
mov
push
test
addr16
inc
push
pop
inc
stc
pop
pop
cmp
inc
cmc
fucom
sbbl
adc
jge
push
push
fiaddl
loopne
or
add
mov
pop
dec
mov
and
or
in
fildl
mov
dec
or
xchg
out
clc
ret
fisubs
inc
aad
pop
and
outsb
or
jge
push
fstl
scas
dec
es
push
cmp
adc
aam
mov
nop
xchg
jno
pop
imul
lret
jae
cmc
lret
xchg
cld
xor
xchg
sbb
aas
or
xchg
les
push
nop
jecxz
clc
dec
adc
sbb
cmc
test
lods
xor
mov
cs
jg
ss
push
push
fsubs
test
fisttps
cs
cld
push
ror
aas
inc
mov
mov
or
inc
lds
shrl
push
mov
mov
cmp
push
jp
ljmp
mov
inc
mov
mov
aaa
inc
push
adc
or
loopne
sub
loop
in
xlat
int3
mov
pop
shll
push
shrl
pop
pop
jnp
mov
jnp
add
push
cmpsl
loop
lods
dec
negl
adc
jns
inc
mov
mov
loop
outsl
jne
imul
mov
daa
xor
pop
lcall
adc
push
insl
fs
rorl
clc
fidivs
cmp
xrelease
js
pop
dec
push
adc
inc
mov
leave
mov
mov
mov
and
nop
fmuls
xor
lods
xchg
bound
shr
rorb
jmp
pop
leave
sub
jns
test
in
sahf
sub
sti
cltd
in
in
sub
shlb
stc
in
adc
pop
divl
testl
pop
ret
dec
daa
push
xchg
dec
mov
cld
mov
jne
pop
lods
xor
cmp
xor
data16
in
subl
shrl
fmulp
test
add
out
xor
cmpsl
inc
adc
test
cmc
add
int3
out
mov
push
cmp
inc
test
adc
gs
push
fisttps
mov
pop
xchg
pop
lods
cltd
adc
and
int3
incb
mov
in
js
loope
sbb
adcb
fwait
or
sbb
mov
test
lock
aaa
ljmp
mov
lods
jg
mov
sbbl
jge
ret
mov
and
scas
fbld
leave
fwait
sbb
loope
lahf
mov
xchg
std
stos
loopne
push
das
test
cmpsb
ljmp
or
jnp
clc
jp
sbb
pop
push
cmp
sbbb
lea
shrl
sub
xchg
inc
xchg
adc
inc
inc
sub
pop
dec
movsl
inc
mov
cmp
insl
jmp
pop
repnz
pop
stc
lds
xor
xchg
mov
dec
nop
dec
lahf
sbb
jge
xor
sti
loop
or
xchg
sbb
int3
adc
xor
adc
ret
sub
sahf
cmpsl
jmp
mov
std
or
dec
cmp
sub
loope
cli
mulb
pop
or
hlt
sub
loope
jl
lcall
mov
jl
ss
jns
mov
cmp
mov
xor
jecxz
push
inc
adc
ja
insl
lods
cmp
jmp
test
mov
dec
xor
mov
ss
inc
dec
mov
cmp
mov
je
dec
dec
loop
adc
cmp
adc
out
test
lret
inc
rcrb
xor
loopne
outsb
xor
or
mov
popf
mov
mov
dec
sbb
xchg
out
add
push
mov
mov
divl
jne
jne
adc
pop
icebp
cmpsb
daa
jg
pop
pop
ja
mov
lcall
xchg
aad
jg
push
pop
jge
xchg
mov
mov
push
andl
xchg
sub
lahf
setp
pop
jno
lods
sbb
push
ret
pop
out
js
push
add
lcall
andb
rcl
xchg
hlt
push
jno
cmpsb
pop
es
cmp
ds
jp
sbb
pop
cs
push
xchg
add
stos
sti
in
movsb
es
aad
push
mov
mov
je
fisubs
inc
cwtl
shlb
out
push
lods
inc
in
shrl
fsubr
sub
mov
jne
push
fldt
in
and
incb
int3
cmp
lea
fdivrl
push
inc
cs
cs
add
mov
jo
or
mov
mov
dec
xchg
popf
cmp
sti
push
cmpb
jb
cmp
jae
fwait
mov
cmpsl
repnz
pop
stos
aad
push
orl
add
and
or
mov
dec
jb
pop
sub
aam
test
adc
xor
lret
push
mov
popf
mov
mov
sbb
jae
fwait
std
sub
xchg
xlat
call
sbb
jne
imul
push
cmpl
stos
add
pop
pop
sarb
jnp
popw
fstl
push
movsl
pusha
fisubrl
insl
push
and
movsl
push
rclb
adc
inc
or
std
pushf
sub
ds
or
push
das
jl
sub
movsl
fwait
es
pop
arpl
pop
inc
sbb
xchg
rcrb
jnp
xor
xor
imul
leave
jl
xchg
ret
jae
in
outsb
mov
test
adc
jg
repnz
test
lock
mov
push
inc
jmp
xor
pop
loopne
clc
imul
xor
add
dec
dec
arpl
add
push
inc
add
sbb
ljmp
fucomip
push
loopne
and
arpl
lock
jno
inc
jo
mov
pop
dec
xor
mov
fcoms
fnstcw
sti
mov
lods
ret
subl
int3
lahf
cli
leave
frstor
fists
cmpsl
inc
lahf
cmp
data16
lock
push
insb
jecxz
xchg
fs
inc
sub
popf
in
jmp
pop
fsubrl
test
outsb
loopne
pusha
dec
sub
cmp
repnz
xchg
sub
jbe
or
add
jns
mov
iret
addr16
pop
pop
in
jle
xchg
mov
push
jne
add
paddw
push
pop
sbbb
sbb
sbb
std
jnp
aad
in
xchg
push
stc
cltd
lds
pop
pop
nop
scas
adc
pop
pop
out
test
xchg
lock
sub
popa
ljmp
lods
mov
mov
les
jle
out
gs
aaa
stc
xor
dec
repnz
mov
xor
ljmp
and
testl
mov
lret
mov
mov
daa
sahf
js
add
test
mov
jns
sub
or
cmpsl
inc
mov
sub
imul
jnp
sub
test
repnz
mov
incb
or
mov
cmpb
js
imul
fists
dec
cwtl
call
ds
push
jns
dec
loopne
jge
jp
pop
test
cmc
out
pop
dec
andl
cmp
pop
mov
jae
cmp
pop
aaa
cld
sub
gs
xchg
test
xor
lock
loopne
cmp
pop
loope
xchg
mov
hlt
jne
pushf
xchg
mov
xchg
sbbl
or
mov
jns
adc
scas
push
push
scas
adc
adc
clc
fidivrl
shrb
inc
pop
inc
adc
mov
hlt
or
xor
lds
aad
mov
mov
pusha
and
outsl
adc
ds
add
faddp
jae
sbbl
aas
xchg
mov
fdivr
sbb
and
cli
cltd
cld
mov
stos
pop
fstl
ret
ss
inc
or
lcall
xchg
mov
mov
jns
pop
aaa
enter
pop
mov
pushf
addr16
or
int3
outsl
mov
addl
lods
mov
ficompl
insb
xchg
adc
sti
mov
mov
icebp
jno
xor
push
jecxz
sarb
sbb
xchg
in
pop
aam
das
popf
mov
pushf
mov
aaa
dec
in
pop
in
out
gs
xorw
in
jmp
push
lahf
in
int3
hlt
push
pop
push
push
mov
iret
push
jnp
dec
push
aad
cld
pop
mov
cmp
sbb
sti
xchg
scas
mov
mov
sti
sbb
outsb
pushf
cmp
push
lcall
inc
imul
lret
mov
das
clc
jns
jg
sbb
loop
sub
xchg
xchg
dec
and
popf
pusha
adc
push
scas
jno
xchg
cltd
or
cmpsb
inc
fcoms
popf
aam
dec
enter
jae
xor
xchg
sub
jge
test
std
repnz
fidivl
mov
fs
sbb
add
dec
pop
inc
in
xchg
xchg
mov
and
pop
jno
push
scas
push
imul
sahf
gs
xchg
jle
mov
cmp
outsl
cmp
pop
sbb
lods
lds
das
lds
mov
movsl
pop
jnp
xor
andl
fwait
or
xor
lods
xchg
xchg
aaa
adc
sbb
xorb
or
loopne
mov
jmp
incl
in
test
fwait
cmp
cld
repz
faddl
fnstenv
aas
lods
rorl
sbbl
lock
mov
outsb
jle
push
fidivrl
sub
jnp
mov
aam
popa
pop
shlb
push
mov
or
add
mov
rorb
inc
sbb
inc
add
pop
mov
loopne
push
insb
ret
adc
push
das
lock
fwait
in
and
fdivrl
sub
in
inc
scas
sub
cmp
ja
gs
fcoms
fcmovu
cmp
mov
arpl
push
stos
and
mov
lock
sti
shl
mov
fistps
out
loope
push
or
gs
jo
andb
dec
insl
or
outsl
leave
shrl
pop
int
pop
jno
rcrl
shlb
movsl
xchg
add
adc
or
mov
or
icebp
cmpl
and
test
movsl
insb
bound
mov
mov
xchg
test
arpl
dec
ds
test
sub
call
xchg
push
fs
fs
push
push
pop
dec
out
adc
mov
add
scas
into
pop
stos
xchg
loop
sub
mov
data16
adc
fimull
out
repz
inc
enter
and
out
inc
iret
sti
add
cmp
cmp
inc
repz
out
adc
jns
cmc
dec
or
ja
leave
xchg
cmpsl
sbb
arpl
out
and
scas
xchg
shl
sbb
jne
mov
mov
cmp
xlat
and
lret
andb
bound
cmp
cmp
mov
jno
scas
mov
clc
rcll
idivl
in
mov
inc
ljmp
or
push
aam
ja
sub
fstpt
lock
repnz
loopne
shrl
mov
mov
mov
jge
loopne
mov
rcl
outsl
push
negb
mov
sub
push
xchg
sbb
daa
cli
sbb
and
xor
repnz
out
fcoms
pushf
stos
jmp
sbb
enter
pop
jl
mov
add
stos
dec
lea
dec
jmp
in
xor
popa
in
rolb
xchg
adc
outsb
std
pop
js
push
sub
jl
inc
mov
sti
mov
pop
push
pop
sbb
mov
mov
mov
out
mov
xchg
pop
sti
adc
cs
and
aaa
or
lods
fs
and
mov
xor
add
mov
jmp
push
push
xchg
and
ljmp
repnz
stc
mov
movsb
mov
cmpsb
lret
test
xchg
mov
jne
mov
xor
stos
xor
push
or
movsl
sub
add
hlt
cmp
cwtl
es
das
pop
add
movsb
dec
mov
popf
sub
test
bound
adc
add
sbb
cmp
pop
dec
js
pop
cmp
mov
popa
adc
scas
push
xor
adc
add
sbb
ja
mov
cltd
pop
pop
jmp
mov
inc
cmp
cwtl
or
aad
test
imul
insb
addb
test
test
or
and
mov
std
lods
mov
aas
xchg
testb
adc
and
xchg
movsb
int
lock
addr16
leave
rcrl
pop
fs
fbld
jp
pop
or
xor
mov
lds
out
adcb
sbb
mov
xchg
sub
push
scas
mov
dec
clc
fiaddl
pushf
mov
rclb
mov
out
test
push
xor
dec
and
sub
xchg
cmp
push
pop
add
lret
mov
arpl
pop
or
aaa
outsl
and
jecxz
xchg
rcl
pop
adc
inc
push
add
push
or
or
xor
adc
lea
jge
jb
sbb
fimuls
rcl
cmc
push
nop
ficompl
in
cmp
rolb
mov
repnz
or
stos
add
sbb
xor
leave
jge
jne
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
jae
xchg
xchg
xchg
addb
filds
pop
and
push
fsubrl
and
rclb
push
sub
pop
pop
xchg
out
fistpl
stos
inc
scas
adc
push
scas
xchg
ret
sub
push
mov
mov
ret
test
andb
pop
daa
jecxz
jbe
lcall
and
insb
cmc
sbb
arpl
mov
addb
or
mov
and
rol
lcall
pop
jae
pop
mov
pop
jnp
in
lods
fadd
fucom
cmp
ja
notb
inc
pop
loope
dec
mov
shrl
in
sbb
leave
rcrl
mov
les
push
sub
imul
ret
lods
repz
lcall
in
pop
adc
or
mov
mov
sahf
call
in
outsl
jmp
les
add
and
mov
sbb
std
or
sub
pop
push
scas
mov
jg
push
cltd
and
int3
clc
xor
or
xor
add
movsb
insb
iret
sub
popl
ss
dec
movsb
arpl
mov
sbb
and
mov
mov
out
xchg
lods
xor
push
out
and
sar
mov
mov
lods
dec
or
cmpsl
daa
aaa
sbb
repz
int
add
test
xacquire
mov
jnp
repz
out
stos
sbb
sub
outsl
jge
js
pop
jl
mov
xor
add
fidivs
lea
inc
xchg
or
outsl
popf
mov
pop
jmp
aam
fldcw
pop
sbb
ret
insb
sbb
xor
push
xlat
movsl
cmp
sbb
sub
jmp
gs
stc
sub
xor
or
adc
mov
sub
shl
ficoml
sbb
push
arpl
cmc
pop
push
inc
jl
jmp
dec
add
pop
loopne
call
and
push
xchg
pop
cld
dec
add
cmpsl
fdiv
lock
dec
adc
sbb
sbb
dec
sbb
pop
xchg
jg
inc
xchg
or
fptan
add
mov
jnp
inc
add
inc
fs
inc
mov
lds
enter
cltd
mov
cmpsl
inc
and
gs
mov
ljmp
js
sbb
outsl
push
nop
mov
and
mov
push
add
mov
mov
testb
popa
loop
inc
int3
fimull
jmp
push
ljmp
mov
js
dec
mov
adc
xor
adc
je
jno
cmp
xchg
inc
stos
out
int3
push
pop
xchg
outsb
rclb
mov
cmpsb
ljmp
lahf
aad
mov
ds
jnp
mov
daa
xchg
xor
cmp
push
jmp
scas
mov
lods
jae
ret
inc
jp
mov
add
fmull
pusha
insl
int
outsb
inc
mov
adcb
stos
push
cmp
mov
cmp
and
lea
sub
imul
icebp
push
repz
into
aam
cmp
or
sub
movntps
pop
adc
adc
pop
sub
push
lock
push
mov
in
cs
push
cmp
outsl
hlt
addr16
xor
mov
dec
arpl
jnp
aad
xor
mov
outsb
mov
push
pop
xor
xchg
mov
inc
fcomp
pop
aaa
add
gs
mov
pushf
nop
das
jns
push
jnp
fldl
pop
fcmovnbe
fisttpll
inc
cltd
fucomi
sbb
sub
leave
iret
mov
ret
cld
repnz
sbb
dec
loop
mov
ficoml
insl
xchg
mov
mov
sbb
push
mov
jne
adc
and
sub
call
cmp
jle
jl
shrl
imul
xor
and
imul
xor
push
fidivl
adcl
test
sbb
mov
loopne
shlb
add
mov
sbb
loopne
pop
mov
cmpsl
adc
fwait
dec
iret
pusha
xchg
push
jno
pusha
loopne
out
aaa
movsb
sub
xorb
pop
lcall
add
xchg
sbb
dec
addl
inc
and
mov
xchg
test
pop
rolb
cmp
in
jne
pop
push
lcall
sbb
jmp
out
push
rcrl
and
xor
lods
dec
xchg
stos
xchg
call
inc
xchg
mov
add
stc
or
loop
je
icebp
jmp
xor
loope
jg
inc
jnp
divl
insb
std
or
iret
push
sarl
add
cmp
lds
mov
add
jbe
test
and
divl
xlat
test
push
in
pop
dec
inc
push
cmp
test
rclb
lock
xor
jo
lcall
jbe
mov
push
test
faddl
dec
pop
leave
insb
stos
cwtl
insb
mov
or
orb
andl
lea
rclb
mov
pop
hlt
imul
mov
or
cmpsl
lcall
inc
mov
and
jecxz
andb
mov
push
test
cmp
rolb
arpl
sti
aas
test
mov
push
inc
daa
sbb
leave
test
sub
lods
push
cmp
add
dec
xor
and
ljmp
sbb
jg
div
test
mov
test
lods
dec
loope
mov
mov
pop
sub
jns
jae
dec
insb
sbbb
cli
repnz
hlt
or
or
out
and
test
out
orl
sbb
and
mov
test
into
jecxz
push
aaa
inc
or
jns
movsl
fwait
in
pop
iret
jbe
and
mov
aam
cmp
ror
sub
sub
orl
cmpsl
addr16
ficoml
insb
fstl
call
mov
cmpsb
stos
xor
fldt
popl
pop
mov
or
jmp
arpl
repz
push
xor
ja
mov
sbb
inc
repnz
push
sbb
stc
insl
lahf
addl
imull
push
lods
rcll
push
push
pop
out
mov
hlt
negl
cmp
cmc
ret
sbb
rorb
mov
mov
mov
cli
lret
repnz
jnp
inc
fcomp
sub
mov
inc
push
into
inc
aaa
repz
nop
out
jb
mov
out
out
imul
test
in
pop
sub
pop
std
and
sbb
sbb
ja
dec
lret
jne
in
outsb
xchg
fildl
repnz
add
xchg
push
int
jns
aam
push
mov
fsubs
adc
jnp
test
pop
and
fninit
xchg
movsb
enter
jno
lret
sub
rcrl
cld
dec
mov
in
in
jl
test
emms
xlat
jo
jl
iret
ljmp
int3
pop
js
jo
adc
nop
cmp
pop
aam
mov
repnz
inc
jg
pop
nop
inc
or
imul
orb
xor
cmc
js
data16
fs
push
int3
or
and
imul
cmp
or
ljmp
js
cmp
stos
in
jp
rol
and
sti
inc
es
test
pop
imul
xor
orl
dec
dec
cmpsb
mov
mov
inc
jge
loope
rcrw
add
sbb
data16
jae
loopne
and
mov
cmp
xor
and
ret
enter
lods
jmp
sbbl
push
pop
lret
push
pop
popl
pop
sbb
add
repz
aad
cld
mov
packsswb
cmp
call
aas
decl
push
andl
and
loope
push
into
test
cmp
jns
in
incl
test
cmp
mov
xor
sarl
jo
icebp
ds
push
loopne
orb
mov
scas
leave
mov
sbb
mov
xchg
mov
dec
scas
jecxz
mov
repnz
dec
pushf
jecxz
mov
jle
mulb
cmpsl
in
out
or
jmp
sbb
adc
push
sbb
das
xor
movsl
jns
imul
pop
cmp
inc
adc
mov
or
lea
fists
jbe
adc
dec
loopne
xor
fisttps
faddl
push
cwtl
ja
xchg
inc
jns
adc
daa
mov
sub
hlt
jno
out
mov
dec
stos
fwait
ss
sbb
imul
pop
sub
lock
jge
xchg
je
jne
push
dec
aad
je
nop
mov
fbld
shlb
scas
jae
jo
dec
xchg
pop
out
sbb
mov
cmp
xor
jecxz
pop
fwait
add
or
imul
cmpb
xor
loop
xchg
sub
mov
mov
sub
or
into
lock
out
sbb
aad
push
sti
lock
dec
inc
in
lret
imul
andl
adc
sub
dec
sti
jl
je
aam
mov
pop
mov
push
lds
pop
and
dec
out
dec
test
idiv
mov
les
js
dec
lods
jo
mov
and
cmp
pop
pop
out
imul
push
xchg
shrl
jno
test
shl
jno
bound
scas
fcmovnb
jle
dec
cli
lea
mov
cltd
popl
push
jnp
in
push
sbb
and
or
dec
je
int
xchg
cmp
xor
xlat
xchg
cmp
pop
add
push
mov
jno
pop
adc
add
movsl
jnp
xor
cld
pop
cmp
xchg
mov
sarl
in
pop
movsb
jle
dec
cmp
mov
push
fldl
mov
lods
sbb
enter
loope
cmpb
inc
adc
adc
stc
ja
cwtl
sub
push
push
adc
into
addr16
insb
daa
fstps
inc
and
inc
mov
jmp
repz
negl
push
dec
decb
cmp
imul
cmp
sub
in
cmpb
sbb
pop
int
ret
push
scas
leave
push
push
mov
addb
push
jge
in
and
cmp
add
enter
cmp
xchg
add
xchg
cmp
push
mov
ljmp
outsb
fcoml
and
xlat
inc
jmp
mov
ss
dec
lods
ret
mov
push
lret
ja
pop
jne
ror
sbb
jb
mov
shl
cmpsb
loop
std
mov
adc
and
jne
mov
in
out
xor
or
inc
sarl
addl
out
pop
stos
sbb
and
aas
stos
cs
add
jns
cs
sti
xor
test
inc
inc
mul
add
insb
mov
cs
xor
jno
ret
les
andl
arpl
add
andb
test
xchg
mov
push
lret
mov
xchg
scas
jecxz
movsl
pusha
lahf
repnz
xchg
dec
and
dec
je
mov
shll
iret
pusha
call
divl
std
sub
stc
mov
sub
gs
rcrl
fwait
xchg
dec
pop
lods
push
sub
sbb
push
movl
test
in
mov
sbb
jge
adc
aam
ds
push
push
aam
shll
lds
stos
cmp
pusha
sar
push
pop
xchg
jno
mov
inc
jg
cmp
sahf
inc
xchg
add
jp
ss
jl
divl
mov
adcb
aam
repnz
movsb
sbb
in
enter
inc
inc
mov
out
aam
insl
int3
jmp
xchg
pop
shl
outsl
pop
les
push
ljmp
cmp
iret
arpl
mov
bound
and
jae
mov
call
jne
fistpl
out
push
jl
pop
movsb
repnz
pop
cmp
pop
fcoms
push
fisubs
lock
mov
add
out
xchg
pop
mov
or
idivb
cld
dec
fs
clc
mov
mov
test
pop
jecxz
dec
pop
mov
test
fiadds
lret
xor
cmc
addr16
movsl
inc
mov
cwtl
out
sbb
sbb
ret
push
xchg
clc
xchg
mov
scas
add
mov
aas
and
adc
mov
mov
pop
xor
lret
pop
int
movsb
sbb
rolb
dec
shl
insl
cmp
outsl
fisubrl
fcmovnu
pcmpeqw
push
add
xor
inc
shrb
aaa
dec
pop
cmp
adc
cmp
push
inc
out
adc
push
push
mov
cwtl
mov
mov
inc
loop
add
xchg
dec
or
pop
adc
out
pop
xor
scas
test
jne
sbb
or
aaa
pop
cltd
enter
lds
xchg
cmp
push
imul
xchg
dec
cld
cli
adc
pop
ret
jle
xchg
lret
enter
jns
pop
lea
pop
dec
or
fdivs
dec
mov
fsubs
packsswb
cmpsl
mov
mov
xchg
inc
mov
int
xor
lahf
daa
dec
in
mov
mov
outsb
xor
rcl
dec
outsl
imull
mov
js
pusha
and
push
sub
inc
cmpsb
xor
jne
mov
addr16
fidivrl
fcomi
add
cmc
stos
js
dec
rcll
inc
int3
adc
push
dec
xchg
pop
sub
dec
iret
pop
inc
enter
aaa
mov
push
or
adc
addr16
sbb
mov
ds
inc
jge
push
scas
das
dec
or
jecxz
notl
jg
ja
lea
mov
and
mov
xor
repnz
mov
push
imul
add
cmp
stos
mov
or
cmp
imul
mov
rclb
sbb
mov
scas
es
in
xchg
mov
and
lods
faddl
mov
push
and
sbb
push
movsl
mov
cld
shl
jp
cmp
adc
pop
xor
xor
call
jo
sbb
jl
out
call
xor
shll
xchg
mov
sub
or
or
push
hlt
ret
js
js
mov
push
mov
pushf
outsl
stc
ret
jns
fldenv
scas
scas
mov
xchg
out
lds
loope
cmp
mov
or
or
outsb
mov
xor
push
dec
mov
loop
repnz
dec
mov
call
cmpsl
ret
mov
fidivrl
mov
adc
sub
mov
adc
xor
loope
mov
pop
ss
mov
addb
or
icebp
mov
ret
mov
pop
xor
push
mov
mov
lods
insl
push
int
nop
dec
jnp
ds
sarl
ljmp
pop
sub
push
push
repnz
pop
xlat
adc
outsl
sbb
mov
sbb
jbe
push
sbb
stos
xchg
jl
adc
xlat
les
popf
gs
movsl
ret
in
sub
jecxz
jno
jae
push
push
loop
aad
and
jb
mov
mov
and
adc
popf
jns
negl
sub
mov
mov
insb
dec
aaa
mov
lock
inc
xlat
jle
jno
mov
adc
mov
or
xor
daa
sub
fiadds
adc
cmp
mov
xchg
rorl
mov
lds
sub
cmp
jg
xchg
frstpm(287
inc
aam
test
pushf
mov
sbb
and
and
scas
push
and
loopne
mov
js
add
add
test
mov
push
int
rcll
fisttpll
cmp
ret
adc
or
sbb
fistps
xchg
push
mov
pop
jns
or
les
mov
pop
mov
sub
filds
xchg
and
pop
sbb
es
lock
jo
adc
xchg
shr
cmp
sbb
loopne
std
sub
daa
sbb
hlt
jmp
jmp
mov
add
call
test
lret
in
stos
sub
push
ja
push
xchg
icebp
jbe
sbb
dec
les
ret
repnz
sti
fcmovnbe
inc
jecxz
adcl
jmp
out
jp
stc
dec
jmp
cmp
fstpt
rcrb
pop
out
stos
mov
out
pusha
sub
push
aaa
lods
daa
jecxz
dec
sub
sbb
jl
xor
jb
mov
jge
mov
lds
es
xchg
mov
scas
imul
aad
incl
cmp
mov
bnd
stos
loope
lds
fistpll
cmpsb
sub
or
lea
les
das
jae
push
push
mov
mov
lock
add
imul
jg
mov
clc
xor
push
pop
imul
out
test
addl
jge
in
pop
mov
mov
cmp
outsl
fldcw
mov
xlat
imul
in
fwait
jmp
xchg
jp
mov
clc
mov
push
sub
jge
push
popf
loopne
out
cli
mov
push
loope
test
cmc
aaa
fnsave
adc
push
int
jae
add
jg
pushl
movl
lds
xchg
mov
adc
xor
icebp
sbb
arpl
sbb
data16
repnz
mov
out
loopne
lahf
xor
xchg
adc
jmp
cld
cld
loopne
sub
dec
cmp
pop
xchg
cld
jecxz
push
loope
inc
in
testb
fadds
into
ljmp
dec
and
das
or
out
inc
insb
jae
aaa
sub
add
data16
enter
ficomps
push
jo
jecxz
rclb
fsubl
stc
or
inc
jnp
notl
repz
pusha
imul
push
mov
bound
adc
dec
xor
cld
sbbb
in
jecxz
enter
mov
sbb
mov
xchg
mov
sbb
sub
jbe
lods
add
xchg
xchg
cmp
xor
adc
loopne
mov
int
push
mov
or
es
pop
inc
fildl
cmp
cltd
dec
or
xchg
inc
push
pop
shrl
loop
icebp
stos
or
repz
sub
adc
pop
pusha
adc
lahf
outsb
push
jno
pop
mov
adc
mov
sub
sub
and
imul
adc
push
and
stos
or
ret
scas
out
insb
out
leave
sub
pop
push
sbb
mov
xchg
jg
pop
add
or
dec
insb
and
rorl
and
inc
mov
data16
je
sbb
adc
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
cmp
dec
add
add
add
add
add
add
pop
add
rorb
add
add
inc
push
mov
xor
out
aam
in
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
