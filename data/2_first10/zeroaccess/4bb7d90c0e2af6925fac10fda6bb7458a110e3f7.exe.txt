push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
mov
orl
orl
sbbl
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
je
push
push
push
call
orl
orl
adc
xor
neg
neg
cmpl
movl
mov
mov
movl
jmp
movl
jg
push
call
xor
adc
movl
mov
add
add
not
mov
sub
mov
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jbe
push
pushl
push
push
pushl
call
mov
mov
sub
and
sbb
sub
adcl
orl
or
orl
mov
mov
sub
or
lea
cmpl
mov
movl
not
mov
jmp
mov
not
jge
push
push
push
push
push
push
call
or
adc
sub
incl
mov
mov
sub
or
and
xor
xor
and
adc
mov
mov
cmpl
movl
mov
not
mov
jmp
mov
jle
push
push
push
pushl
call
orl
xor
mov
sbb
sub
mov
and
mov
xorl
xor
or
sub
mov
inc
mov
xor
add
mov
mov
add
mov
mov
addl
shrd
shr
mov
mov
xor
xor
addl
or
mov
add
mov
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
pushl
push
push
push
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
movl
or
movl
movl
movl
add
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jle
push
pushl
push
push
pushl
call
andl
notl
andl
orl
addl
sbbl
mov
subl
shl
xor
mov
xorl
push
sbbl
push
push
push
sbbl
call
mov
or
mov
mov
or
mov
xor
mov
mov
cmpl
mov
movl
mov
notl
jmp
movl
movl
jl
push
push
call
adcl
sub
adcl
negl
and
or
movzwl
add
mov
sbb
add
sub
sub
mov
xor
or
adc
lea
subl
mov
inc
mov
andl
or
and
adcl
mov
adcl
or
xorl
xor
movl
cmp
movl
jne
and
mov
or
mov
shrd
adc
shr
notl
mov
sbb
mov
shl
subl
xor
xor
or
mov
movl
cmp
movl
jne
xor
mov
mov
addl
xor
mov
sbbl
mov
mov
add
mov
shrd
andl
mov
mov
addl
xor
xorl
shr
mov
adc
mov
xor
movl
or
movl
shl
sub
mov
mov
subl
mov
add
mov
mov
add
mov
sbb
mov
shrd
cmpl
not
not
mov
mov
jmp
movl
movl
ja
push
push
call
xor
add
and
mov
movzbl
adc
mov
sbb
and
movzbl
sub
cmpl
mov
mov
mov
jmp
movl
jge
pushl
call
sub
mov
mov
or
subl
or
neg
adcl
shr
sbb
mov
mov
sbbl
xor
xor
shl
adc
xor
or
add
mov
mov
andl
jmp
mov
imul
jecxz
jle
adc
adc
adc
sbbl
lds
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
mov
push
mull
in
dec
push
cmp
inc
gs
dec
cmp
push
ja
add
mov
jp
jmp
inc
data16
sahf
testb
in
dec
dec
lds
xchg
test
leave
popf
dec
lret
push
add
add
rcl
outsb
and
push
test
inc
mov
push
xchg
jp
pop
and
jecxz
movsb
hlt
sub
sbb
popf
push
adc
les
out
xor
sub
dec
mov
and
xor
dec
jg
or
mov
push
sbbl
push
lcall
dec
adc
shrb
inc
sahf
push
sbb
xchg
bound
push
add
fidivrl
ds
fidivl
lods
les
and
dec
sbb
add
mov
sub
cs
add
pushf
xchg
sbb
loopne
lea
jle
cld
xor
sbb
mov
adc
idivb
aam
xchg
cmp
push
cmp
mov
cmpl
push
dec
pop
ret
and
inc
pop
arpl
icebp
pushf
pop
cmc
push
push
in
scas
lea
add
test
test
popf
sub
or
lret
test
adc
es
jmp
dec
ss
out
dec
jmp
sbbb
push
stos
ja
out
imul
sub
loop
jns
xor
jp
push
cmpl
mov
aas
incb
es
push
pop
adc
cmpsl
mov
sbb
mov
sub
mov
or
cmp
js
call
es
outsl
fadds
dec
sub
lahf
mov
inc
mov
xor
movsl
scas
stos
jp
sub
jb
repz
push
mov
ret
sbb
sbb
fisttps
sub
daa
mov
out
jmp
js
or
and
or
outsl
and
enter
movsb
hlt
pop
cltd
jbe
jg
or
loopne
leave
jbe
inc
je
sbb
mov
cmc
xchg
lret
pop
mov
es
cmp
push
insl
icebp
pop
sbb
imulb
mov
xchg
arpl
in
xchg
lock
and
mov
and
dec
sub
jbe
adc
repnz
bnd
out
aaa
les
xchg
movsl
pop
rclb
sti
fbld
pusha
out
loope
cmp
pop
push
imul
ror
leave
out
sbb
cmpsb
les
aam
push
scas
ja
pushf
popf
roll
push
rolb
aad
mov
popf
add
jmp
mov
insl
xor
xlat
addr16
push
mov
out
insb
fildll
lret
testb
stos
fildl
cltd
jo
cmp
dec
mov
jns
jne
stos
adc
push
adc
stos
xchg
cmpsl
movsl
jbe
int
push
adc
xchg
sub
lret
or
adc
bnd
push
cmp
and
cmc
mov
sarb
inc
setp
mov
sub
add
inc
cmp
ljmp
xchg
inc
xor
addr16
in
int
leave
inc
sahf
push
es
pop
push
or
push
sbb
xchg
jp
stos
jnp
and
and
aaa
test
scas
push
jb
outsl
clc
lret
push
mov
ja
call
jns
pushf
pop
cli
lods
into
pop
nop
inc
add
inc
insb
mov
push
fs
push
xchg
aaa
mov
popa
inc
cmp
xor
cli
stos
test
mov
adc
mov
add
sub
mov
pusha
pop
je
dec
pop
std
out
push
inc
pusha
lods
stos
sbbl
pop
and
add
or
sbb
outsb
lea
das
inc
cs
sub
leave
popf
mov
sbb
mov
push
aas
dec
cmp
cmp
ljmp
adc
scas
lock
jno
negl
lea
sub
in
cmp
xchg
pop
pop
cmp
push
dec
jbe
mov
pop
pop
pop
je
cmc
ret
aas
adc
lcall
ja
in
insb
lret
ss
sub
mov
repz
ljmp
xor
push
mov
jno
scas
lcall
or
inc
outsl
std
in
repnz
test
jb
jle
in
repz
aaa
jp
mov
xchg
xchg
jae
jb
cmc
je
pushf
cltd
xchg
iret
call
mov
clc
cmp
cs
std
inc
sbb
or
testb
xchg
or
push
in
test
sbb
ss
inc
pmullw
sbb
rorl
jmp
lock
and
lds
jb
xor
ficompl
mov
sbb
insb
xor
je
iret
inc
push
or
insl
jge
pop
push
shlb
jmp
inc
call
mov
leave
das
test
xchg
sbb
lahf
jae
and
pop
pusha
jg
jo
out
push
cmp
test
imul
int3
inc
mov
data16
mov
mulb
xor
and
imul
out
or
repnz
stc
out
mov
and
out
or
jae
jbe
dec
sub
addl
cs
xor
aas
inc
add
addr16
xor
pop
roll
jae
cmpsb
stos
or
cmc
ficompl
outsl
out
leave
aaa
addb
clc
xor
es
ja
dec
test
xor
data16
ja
cmc
dec
mov
pop
or
push
int3
fldt
jnp
test
dec
jmp
dec
imul
cmp
inc
mov
xor
popa
xor
std
gs
jle
push
aam
cmpsl
mov
aas
mov
repz
mov
or
lock
enter
je
or
mov
cmp
inc
decl
loop
sbb
aaa
mov
pop
dec
es
cwtl
adc
inc
mov
sub
add
rolb
cmp
cli
mov
imul
xlat
iret
push
xchg
repz
pop
xchg
insb
mov
pop
hlt
repz
outsl
movsl
test
xchg
cmp
ret
enter
leave
paddsb
pop
sub
bound
xchg
xor
jnp
sub
cld
pop
push
leave
popa
ja
loopne
sub
cmp
pop
stos
mov
cmp
in
les
in
jns
imul
mov
fstps
leave
push
sub
xchg
jp
movsb
rorb
xchg
or
lret
xchg
jmp
out
popf
and
ret
mov
mov
jnp
stos
mov
mov
mov
cli
shrb
pop
cmp
add
push
into
add
mov
push
js
pop
push
aaa
scas
call
mov
xchg
lds
nop
xchg
fs
jae
cmp
or
shlb
stos
inc
arpl
mov
xchg
pop
or
lods
cmpsl
xchg
cmp
shlb
shrb
mov
mov
aaa
cmp
dec
push
dec
add
inc
sbb
cmpsb
mov
orb
lret
push
fnstsw
jl
xchg
iret
aad
mov
pop
sti
and
inc
lock
cmp
mov
test
inc
test
inc
inc
mov
fs
rcr
xchg
inc
out
and
pop
iret
mov
lret
outsb
rcrb
out
das
sbb
sub
lea
into
mov
jge
mov
cmp
cmovg
int3
sbb
sti
adc
mov
or
lds
push
push
enter
jge
cld
not
bound
push
movsb
je
mov
jmp
leave
xor
inc
push
sahf
cmp
jo
cmp
pop
js
enter
cld
pop
jle
jb
mov
lods
mov
sbb
js
push
or
cs
lret
pop
xchg
push
xchg
ret
mov
push
sbb
popa
inc
jbe
mov
add
imul
inc
outsl
out
cwtl
mov
lea
jmp
sub
mov
or
sub
arpl
xor
or
sarl
cs
repnz
push
vmwrite
push
jnp
cld
mov
mov
dec
lcall
loopne
or
adc
xchg
rorb
rol
cmc
cmpb
das
fmuls
xchg
jge
inc
mov
loope
xor
cmpsl
mov
std
movsb
fidivrl
cmp
adc
cmp
push
in
loop
cmp
dec
or
mov
and
jno
xor
xchg
sub
pop
add
xchg
lahf
imull
repz
push
ljmp
add
jo
sub
imul
int3
push
mov
test
rcrl
in
clc
xchg
jo
lret
mov
cld
jne
mov
mov
outsb
push
dec
adc
clc
mov
and
dec
fs
jo
push
loopne
movsl
adc
sbb
rcl
out
dec
repnz
mov
jns
jmp
jne
fdivrp
orb
pop
adc
test
iret
add
jle
push
xlat
jne
pusha
cmp
test
fmul
or
fidivrl
fcmovbe
push
add
add
orb
mov
lods
lock
mov
movsb
sub
je
subl
call
aaa
enter
adc
xor
jns
or
lods
mov
addl
sarl
hlt
jmp
adc
mov
stos
xchg
jns
xchg
loope
jo
push
in
mov
aas
aad
bound
les
jge
jne
pop
arpl
movsl
cmpsb
rorb
push
or
movsb
or
jno
and
lret
packssdw
insl
inc
test
cmp
sub
xchg
add
bound
push
jmp
mov
aaa
in
cmp
xchg
xor
pushf
call
rorl
dec
mov
arpl
sbb
cld
mov
push
or
imul
jle
adc
jnp
les
das
push
add
xchg
imul
push
cmp
ds
into
or
movsb
sub
lock
mov
ret
test
in
mov
pop
xor
sbb
repnz
cmp
sarb
sti
into
sbb
pop
fidivrl
jp
push
dec
inc
jmp
mov
adc
lret
inc
mov
dec
mov
xor
mov
scas
adc
ds
je
in
aam
outsl
push
adc
inc
jae
inc
stos
xchg
sahf
imul
movsb
xlat
cld
pop
rol
xchg
xchg
das
pop
sub
dec
clc
dec
mov
ss
sbb
bound
fildl
fs
xchg
mov
int3
mov
insb
pushf
or
repnz
sbb
dec
dec
xor
test
enter
les
test
and
mov
stos
outsb
mov
dec
outsl
lret
aaa
dec
pop
mov
outsl
xor
inc
pop
out
inc
fwait
aaa
enter
cltd
pop
adc
push
ss
jle
scas
jbe
ret
adc
or
mov
fidivrl
xor
lds
mov
xchg
fcmovu
or
cmpsl
lock
sub
stos
mov
arpl
xlat
sbb
jg
fisttpl
push
inc
dec
push
push
sbb
dec
push
pop
cmpsl
mov
xchg
fwait
stc
sub
cmp
or
fiadds
out
jl
insl
aam
lods
mov
mov
pop
mov
add
bsr
mov
popa
in
mov
adc
cmc
int3
inc
fiadds
lea
or
flds
fsubs
daa
jmp
mov
fbld
jge
jo
adc
xchg
or
addr16
mul
test
pop
mov
movl
enter
mov
adc
xchg
dec
mov
imul
mov
sub
mov
push
xor
call
and
and
add
sub
pushf
push
adc
faddl
jl
in
pop
mov
ljmp
dec
dec
mov
push
sbb
ret
movl
lods
jg
mov
lock
jbe
icebp
fldenv
mov
fimull
and
inc
push
psrlq
add
adc
insb
and
popf
test
mov
push
mov
dec
mov
mov
mov
mov
lock
jb
cmp
push
ja
inc
mov
popf
pusha
fwait
sub
sbb
in
in
add
cs
loopne
shll
pop
bound
andb
imul
push
pop
cmp
sbb
dec
popf
or
ds
cmp
es
test
sub
test
add
xor
mov
std
xchg
ret
sub
in
cmpsb
dec
outsl
cmpsl
jle
call
adc
adc
nop
add
iret
cs
pop
jecxz
popa
inc
sti
sbb
cmp
jge
and
mov
lods
inc
cmp
movaps
cld
mov
pop
pop
fistl
shll
repz
sahf
fldt
mov
xchg
inc
es
ja
sub
sub
es
ror
sub
std
das
testl
out
mov
add
and
xor
or
mov
xor
pop
in
jmp
loope
push
push
jo
cmp
arpl
or
mov
jecxz
inc
shlb
jnp
les
in
xchg
jns
loope
sbb
jl
or
sbb
test
mov
jge
ljmp
add
lea
cs
jns
xor
and
movsl
rorl
fldt
sub
repz
sbb
frstor
xchg
push
xor
add
xlat
jp
xchg
dec
movsb
cmp
or
xor
daa
xchg
add
and
xchg
mov
movsb
bound
sbb
dec
mov
jp
dec
les
out
lcall
adc
add
push
mov
scas
mov
cld
push
cmpsl
std
jge
sbb
or
je
add
xorl
aas
cmpsb
push
and
jno
mov
push
test
jg
clc
xchg
jne
ret
enter
mov
mov
repz
pop
popa
cmp
scas
xchg
jp
pushf
test
data16
dec
jo,pt
cmpsl
subb
shlb
jmp
and
imul
lods
adc
imul
xchg
addr16
lods
stos
insb
sub
lds
jne
int
sbb
sti
xchg
push
or
lea
fists
repnz
sahf
in
mov
push
out
cmc
pop
mov
iret
mov
xchg
sub
popf
push
ret
add
push
pop
xor
push
out
insl
imul
pop
test
pop
cwtl
jle
push
cmpsb
inc
cmp
or
outsl
dec
jb
add
inc
jmp
iret
mov
scas
dec
cli
mov
sub
mov
out
dec
cmp
and
out
aaa
mov
ret
mov
xlat
xchg
jge
pop
mov
inc
lods
adc
stc
addb
push
subb
lock
lods
dec
sti
pop
xchg
test
push
cld
scas
fstpt
mov
cmp
mov
inc
incl
lahf
sbb
add
xchg
std
xchg
inc
jne
mov
js
int
mov
icebp
mov
shl
divl
cmpsb
dec
push
or
mov
sbb
daa
push
test
xchg
out
loopne
aad
inc
aas
loop
xor
adc
and
sub
jg
in
xor
jnp
pushf
push
push
or
mov
inc
sarl
dec
ds
fdivr
out
les
scas
dec
dec
and
lock
loop
mov
sbb
inc
cmp
fcmovne
sub
pop
test
pop
loopne
add
xchg
mov
xor
int3
sbb
or
fucomp
inc
mov
lods
mov
insl
std
scas
push
jle
test
mov
dec
inc
jge
ja
push
cwtl
out
shlb
jl
sub
pop
and
cmp
inc
push
pop
pop
jnp
push
repnz
cld
ret
ja
movsl
packssdw
in
push
scas
popf
shl
cmp
xchg
outsl
jle
and
and
mov
mov
das
xchg
lcall
inc
and
sub
ret
adc
cmp
fcoms
idivb
or
pop
rcrl
mov
bswap
xor
js
sar
out
inc
mov
hlt
daa
jl
arpl
pop
xor
fistpll
pop
pop
push
aas
sbb
push
movsb
mov
jns
fistpl
push
cmpsl
mov
cwtl
cmp
test
jg
jnp
mov
repnz
mov
mov
stos
scas
xor
sarl
xchg
cmc
mov
lock
lods
xchg
test
xchg
and
mov
ficoml
jl
movsl
push
test
sbb
fadd
pop
ss
adcb
xor
shr
ret
test
les
mov
outsl
inc
inc
or
and
pop
push
nop
xchg
cld
adc
fisubs
jb
adc
dec
dec
cmp
pop
sub
sub
pop
or
push
xor
xchg
test
mov
cmpsl
mov
aas
mov
push
in
inc
push
clc
bound
push
pop
sub
insl
sub
popf
push
stos
repnz
mov
pop
add
xor
sbb
push
out
rcl
adc
cmpl
daa
jl
dec
fwait
mov
packssdw
and
sti
mov
xchg
test
cmp
ret
jae
mov
pushf
mov
pop
xor
jecxz
loopne
test
pop
push
xchg
push
cmp
jle
pushf
and
add
test
or
xchg
sub
or
popa
adc
aas
xchg
clc
mov
data16
nop
loope
xchg
jne
xorb
mov
movsb
insl
cwtl
and
fstl
cmp
test
es
cmpsl
jmp
and
sbb
clc
mov
pop
pop
mov
scas
lods
push
stos
dec
sbb
push
rcrl
repnz
inc
pop
xchg
mov
mov
movsb
add
pop
and
movsl
and
fisttpl
pop
or
insb
lcall
scas
popf
xor
lret
repz
or
push
stos
loopne
cmp
shl
push
adc
jl
out
mov
leave
out
mov
insb
jge
movsb
scas
pop
inc
lods
cmpsb
or
sub
jb
cmp
fmuls
das
cmp
hlt
inc
sbb
sub
das
mov
push
notl
jg
inc
gs
lods
enter
aas
mov
popf
in
std
sarb
lds
mov
and
pop
stos
cld
cmp
jl
push
pushf
ljmp
mov
and
jbe
add
xchg
mov
mov
push
adc
mov
ficompl
mov
jmp
adc
sub
dec
test
inc
lds
fisubrl
xchg
mov
aam
mov
jnp
stos
push
mov
mov
and
lods
popa
subl
cmpsl
inc
dec
movl
jle
mov
lret
xor
notb
xchg
out
jnp
and
popa
lds
push
and
mov
repnz
adc
out
push
lcall
stos
jge
aaa
imul
mov
dec
arpl
shl
cmp
jb
xchg
pop
rcrb
jne,pt
inc
xorb
inc
pop
mov
and
adc
stc
xor
ficompl
repz
sub
xor
pop
popa
cmpl
push
pop
fdivp
pop
aad
push
test
jge
repz
out
bound
gs
or
dec
sbb
and
movsl
push
push
jp
cmp
imul
dec
andb
jns
rorl
jbe
xchg
movsl
mov
fldt
lods
sbb
mov
arpl
jns
push
mov
aad
fstl
dec
add
inc
fidivrs
jle
and
add
mov
shll
adc
ret
add
or
mov
push
in
cmp
adc
inc
add
push
xor
cmpsl
or
sti
push
out
push
mov
loop
jg
or
leave
cmpb
lods
mov
mov
adc
std
xor
mov
jle
aam
jbe
call
jl
test
in
out
or
imul
repz
addr16
dec
fstl
in
fwait
mov
fisttpl
jne
pop
pop
test
in
fdivrl
mov
sbb
cmp
call
mov
add
dec
jp
test
les
outsl
sub
stos
xchg
scas
push
fldcw
pop
aam
xor
imul
out
loopne
pushf
xchg
xorb
lret
mov
mov
and
lcall
adc
movsl
lds
leave
adc
insb
stos
fstp
mov
jns
push
cwtl
neg
dec
sahf
int3
scas
cli
cmp
pop
mov
insb
les
repz
pop
add
adc
roll
outsb
mov
fidivrs
and
cs
jnp
shrl
ds
addl
sbb
pushf
or
ror
fsin
push
pop
push
mov
pop
cmp
cmpsl
xchg
jo
scas
dec
pop
ja
add
dec
fwait
pop
jno
push
pop
loope
mov
outsl
sti
and
xchg
aaa
lahf
rorb
sahf
push
sbb
and
hlt
adc
imul
xor
shr
push
push
decb
xchg
or
std
rcll
xchg
xchg
arpl
mov
inc
std
add
or
or
ret
inc
xor
inc
sarb
xchg
jle
sarb
push
push
ljmp
pusha
xchg
fsubr
xchg
adc
adc
popf
roll
pop
mov
cli
mov
or
sub
lret
out
sbb
sbb
dec
inc
ds
inc
jo
cs
imul
inc
pop
sbbb
inc
mov
and
jae
divb
lcall
clc
and
pop
pop
jno
mov
test
lods
or
xor
orb
xor
hlt
and
shlb
pusha
stos
xor
sub
xchg
stos
jge
jmp
fwait
stc
mov
push
dec
add
rcr
adc
xor
xor
and
popf
pop
mov
mov
call
loop
dec
popa
inc
mov
dec
hlt
inc
cltd
mov
out
and
dec
sub
nop
pop
aas
inc
repz
jl
ljmp
jae
das
ljmp
or
or
popf
addr16
es
in
lea
mov
cmp
lahf
lahf
mov
pop
push
lret
call
mov
in
add
and
push
loopne
in
or
stos
mov
enter
xchg
mov
xchg
jnp
mov
xor
mov
add
sbb
insl
adc
mov
xor
cmp
daa
or
sub
lahf
sub
push
out
loopne
inc
pop
sti
push
repnz
gs
dec
push
or
imul
fcomps
xchg
mov
mov
cmp
les
inc
test
popa
sti
xchg
adc
push
movsb
aas
jle
mov
mov
mov
fdivrs
xchg
xchg
into
push
cmp
sub
ljmp
xchg
dec
lret
ret
into
fidivl
into
or
sgdtl
adc
mov
test
jmp
sub
data16
dec
xchg
ret
xlat
bound
pop
xchg
xorl
cmc
out
in
lds
cltd
sub
testb
lea
int
in
and
stos
iret
mov
in
xchg
cs
adc
mov
cs
in
cmpsl
jge
adc
and
fucomi
ds
sub
sti
mov
dec
lods
stos
cltd
xchg
jl
mov
in
aaa
dec
fldl
mov
lcall
sub
in
outsb
test
gs
cs
inc
popf
pop
std
cltd
mov
sarl
push
sub
lret
xor
pop
mov
adc
jmp
push
rorb
mov
and
inc
jbe
rorb
nop
shr
add
push
xor
outsl
cmp
and
jnp
xchg
jno
pop
pop
pop
push
mov
mov
pop
jl
jmp
lret
jp
pop
lods
pop
dec
mov
insl
out
fs
repz
cmc
lock
nop
xchg
divl
and
jle
and
push
data16
popa
mov
mov
xchg
xchg
push
loopne
neg
fdivrl
xchg
fdivrs
xor
pop
mov
das
inc
hlt
mov
sbb
imul
sub
xchg
mov
in
inc
sub
xor
add
repz
fdivs
jcxz
xchg
lods
or
mov
jb
xor
dec
repz
xchg
movsl
lds
jbe
cmpb
outsb
jne
or
andnps
xor
fnstenv
addr16
into
xor
lahf
pushf
das
vhaddps
pop
push
fildll
sbb
insl
push
sub
xor
add
sbb
or
and
xchg
xchg
dec
or
mov
xorb
cltd
mov
popf
insb
loopne
sub
or
add
pop
arpl
nop
sub
lods
dec
mov
xchg
mov
xor
xchg
pop
js
ds
jnp
mov
cwtl
push
sti
sbb
pop
outsl
cmc
inc
cli
scas
dec
outsb
cmp
loope
int
xor
mov
or
inc
outsb
push
test
das
sbb
xor
hlt
sbb
into
icebp
fcmovnb
ja
sbb
mov
jl
addl
and
aam
insb
sub
and
inc
int3
push
push
push
fs
mov
out
jp
cmpsw
mov
inc
dec
bound
test
fimull
jo
jmp
cmp
gs
mov
sarb
cmpsl
js
ret
les
jnp
mov
pop
fcmovu
xchg
std
mov
dec
cmp
inc
aam
inc
dec
and
cwtl
test
push
sbb
xchg
enter
jl
stos
orb
int3
mov
jp
sbb
push
jno
roll
fmull
shrb
mov
sarb
jmp
mov
push
out
cmpsl
sub
lds
imul
insl
punpckhbw
cmc
inc
lods
ss
clc
mov
enter
cmc
adc
daa
inc
into
pop
pop
mov
cltd
fcoms
ret
dec
out
xor
dec
sbb
mov
idivb
es
cmp
push
insb
je
in
into
gs
jl
fadd
pusha
sahf
out
push
mov
and
add
pop
and
leave
and
inc
push
popf
xchg
repnz
sbb
pop
mov
repnz
movsb
js
loop
stc
arpl
pop
pop
fwait
dec
dec
pusha
push
sbb
pop
sub
je
adcl
loopne
dec
std
repnz
xor
mov
push
shrb
mov
mov
mov
ljmp
mov
arpl
lock
cmp
sub
lret
inc
push
and
dec
sbb
ss
aaa
fs
adc
dec
leave
loop
push
fbld
jle
outsl
sar
jnp
test
jg
xchg
push
jp
ficompl
pushf
es
pop
fwait
movsb
test
dec
out
hlt
mov
insb
out
xor
pop
daa
iret
mov
pushl
lahf
cmp
and
sbb
dec
push
enter
cmpsl
pusha
mov
pop
hlt
jns
dec
aas
add
sbb
ret
inc
outsl
add
mov
inc
cmc
fidivs
test
out
mov
xchg
sarb
lods
je
hlt
jmp
pop
pop
jp
xor
add
or
shll
jns
sbb
insl
adc
and
push
leave
or
and
lock
lock
arpl
stc
fcompp
dec
or
push
dec
xor
and
push
xchg
mov
scas
adc
jle
push
iret
cmp
lret
addr16
enter
imull
in
mov
inc
or
pop
sarb
pop
adc
fidivrs
add
cmp
mov
mov
pop
mov
cmpsb
inc
dec
ljmp
xchg
xor
orl
sub
aad
aad
mov
roll
sub
bound
testb
mov
jmp
or
pop
push
sub
jle
push
cs
and
adc
jp
lcall
mov
pop
pusha
xchg
imul
dec
push
mov
jle
pushf
loopne
or
mov
out
sbb
sbb
mov
inc
gs
and
and
stos
js
es
sbb
test
mov
rcll
shrl
fcomip
lea
jmp
fsubs
imul
dec
push
push
fdivrl
jl
cmp
dec
lods
loope
push
int3
cmp
mov
int3
arpl
inc
bound
fnsave
mov
push
cld
and
out
es
shrd
shr
sbb
mov
mov
mov
orl
xor
xor
or
orl
shl
addl
lea
or
mov
cmpl
mov
mov
jmp
mov
movl
jl
pushl
pushl
push
push
call
sbb
movzbl
xor
mov
addl
sbbl
mov
sbbl
shrd
andl
shr
xor
mov
and
mov
mov
sbb
xor
movzbl
or
mov
mov
subl
xor
or
orl
shl
imul
mov
cmpl
mov
mov
movl
jmp
notl
jne
push
push
push
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
movl
or
and
sub
subl
sub
sbbl
mov
adcl
shrd
mov
mov
xor
decl
shr
cmpl
movl
movl
jmp
movl
movl
jl
pushl
push
push
call
adc
or
or
sbb
xor
neg
sbbl
mov
mov
sub
mov
mov
xor
or
negl
shl
xorl
sub
mov
movl
cmp
mov
mov
movl
jg
and
mov
mov
xorl
shrd
mov
xor
mov
xor
shl
xor
or
shr
cmpl
mov
movl
jmp
movl
movl
jb
push
push
pushl
push
call
neg
xorl
neg
xorl
inc
andl
adc
mov
addl
mov
cmpl
mov
mov
jmp
movl
jne
pushl
call
adc
sub
sub
and
sbb
mov
cmpl
mov
movl
jmp
movl
ja
pushl
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
shrd
shr
mov
mov
cmpl
mov
not
jmp
movl
movl
jl
call
dec
movzwl
sbb
and
xorl
movl
add
mov
xor
movl
xor
adcl
or
xorl
shl
subl
imul
adcl
sub
movl
jmp
movzwl
sbb
mov
mov
cmpl
movzwl
mov
movl
not
jmp
movl
movl
jg
push
push
push
pushl
pushl
push
push
push
pushl
call
adcl
sub
sbb
adcl
xorl
not
xor
xor
sub
mov
decl
shrd
mov
decl
mov
xor
xorl
shl
decl
xor
or
addl
shr
mov
mov
mov
and
mov
sbbl
shrd
sbbl
shr
decl
mov
cmpl
movl
not
jmp
mov
movl
je
push
call
and
adc
mov
sub
mov
movzbl
or
add
xor
xor
add
mov
sub
sub
mov
mov
xor
xor
orl
or
addl
shl
xor
add
add
mov
mov
xor
shrd
movzbl
sbb
shr
mov
mov
orl
xor
shl
xorl
xor
or
sbb
mov
xor
or
sub
mov
movl
sbb
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
push
push
push
push
push
push
push
pushl
call
dec
movzbl
sbb
sub
and
mov
mov
sub
add
mov
movl
mov
mov
sbb
mov
xorl
jmp
pop
pop
iret
pop
cltd
sbb
dec
fldenv
push
icebp
mov
adc
adc
mov
loope
mov
jmp
inc
cmp
sahf
adc
mov
jecxz
mov
lahf
dec
out
dec
mov
les
xchg
push
mov
or
cs
dec
pop
pusha
cwtl
push
sbbb
aad
jns
xor
cmc
or
adc
jg
pop
and
movsb
ljmp
jno
outsl
mov
out
outsl
jmp
push
inc
cmc
jbe
andb
jne
shl
lcall
lods
push
lcall
and
push
pop
cmpsb
stos
cltd
jbe
jbe
and
aad
test
ror
popf
push
lcall
outsb
loope
jnp
cmp
jae
mov
lcall
rorl
xlat
data16
out
out
in
das
sbb
mov
orl
pop
cmpsl
insb
je
adc
data16
lfs
call
sub
hlt
pop
mov
and
xchg
add
inc
sub
lds
inc
repz
stos
push
loop
jb
repz
jl
into
jg
or
mov
fsubp
repnz
mov
and
cmpsb
sub
mov
pop
cmpsl
sbb
sahf
hlt
cmpsl
outsb
addb
xchg
loop
in
adc
sbb
popf
inc
roll
mov
ficoml
mov
pusha
xchg
fnstcw
push
lods
pushf
sbbb
xchg
inc
mov
pushf
add
mov
xchg
inc
lret
pop
push
pop
das
repz
add
sub
fadd
sbb
iret
mov
out
popa
orl
enter
movsl
mov
js
cld
dec
imul
push
ja
or
js
mov
add
mov
xchg
cld
lret
aam
out
scas
test
pusha
cmpsb
mov
test
xor
dec
cs
jnp
lods
xor
bound
gs
loope
movsb
cltd
push
pop
movsb
filds
nop
stc
mov
or
arpl
mov
testb
pop
fdivs
lea
imul
lcall
jns
sbb
inc
sarl
inc
std
gs
rcl
loopne
push
mov
jecxz
lret
pop
push
cld
outsl
mov
mov
rolb
push
call
pop
movl
xchg
outsl
insb
idiv
mov
and
push
js
xor
add
rorl
into
cld
iret
pop
sti
or
push
push
bound
push
mov
enter
imull
push
fcmovu
mov
mov
movsl
jg
fcoml
and
inc
cmp
xlat
cmp
adc
jle
mov
xchg
xchg
lahf
mov
xchg
mov
push
sahf
int
mov
jg
addr16
arpl
add
mov
mov
imul
outsl
nop
fsubrl
mov
pop
mov
cmp
add
sbb
sbbl
mov
mov
cmp
mov
pop
ds
push
stos
sbb
pop
adcl
push
or
repnz
xchg
pop
push
insb
fcmovbe
sbb
sbb
in
sbbb
jbe
adc
mov
mov
inc
and
mov
loope
mov
ds
aad
loope
jbe
pop
xchg
fcmovb
lret
xor
mov
mov
pop
into
movsb
popf
pop
out
and
shrb
mov
out
mov
cmpsb
or
inc
and
inc
into
pop
add
lods
clc
cmp
inc
sbb
xor
jae
add
cmc
ds
jle
sti
fidivrl
adc
ljmp
push
movsb
iret
test
lret
push
cmp
xchg
sub
fucomip
outsb
jl
lahf
jae
ss
add
mov
xchg
sub
repz
xchg
xchg
pusha
mov
in
inc
mov
mov
inc
jge
div
filds
orb
in
outsb
mov
cwtl
pop
movsb
mov
or
pop
insl
or
out
mov
cmp
cmp
xor
jge
pop
adc
pop
mov
mov
jle
xchg
ret
movsb
fnstsw
xor
dec
mov
push
int3
dec
adc
shrl
sbb
xchg
iret
fs
jle
cs
and
xor
into
test
mov
ja
fbstp
stos
dec
lds
movsb
xrelease
mov
lock
cmc
mov
mov
imul
test
xorb
jmp
rcl
mov
bound
ljmp
iret
add
and
fidivl
mov
jns
std
stos
xor
rcl
adc
jne
mov
push
jnp
shl
xchg
mov
rcrb
loop
stos
inc
adc
dec
pop
sub
in
sub
mov
sbbb
shrl
push
jge
loopne
popa
jno
cmp
xor
jo
jnp
gs
aad
test
out
inc
fisttpl
scas
cmp
movsl
cmp
jl
pusha
jp
push
dec
sbb
cltd
jmp
xlat
pop
in
and
movsb
sub
fcom
xor
xchg
cmp
and
and
addb
cs
or
sub
or
jnp
not
imul
gs
outsb
das
xor
inc
jb
arpl
jecxz
xlat
bound
imul
mov
ret
fnsave
loop
imul
rclb
scas
and
mov
push
and
adc
sbb
bnd
sti
fcoms
mov
fnstsw
or
addb
dec
out
inc
cs
inc
push
dec
pop
xchg
inc
enter
and
subl
jmp
pop
repnz
and
jns
dec
sbb
mov
and
dec
insb
hlt
arpl
ss
pop
sti
push
add
add
push
push
cmp
push
test
inc
loopne
loopne
les
or
insl
jnp
xchg
movsl
out
jp
inc
add
inc
xchg
sbb
aaa
pop
test
push
inc
scas
jbe
aas
push
out
rcr
cmp
in
jbe
jnp
pop
sbb
adc
cmc
xchg
xor
mov
mov
gs
sbb
xor
pop
dec
call
xchg
push
fwait
out
in
test
mov
mov
xchg
pop
and
sbb
sbb
outsb
mov
or
jnp
mov
div
xor
mull
dec
mov
cmp
xor
insl
push
add
das
ret
loop
or
mov
test
mov
mov
movsl
mov
insl
haddpd
inc
push
and
mov
int
popf
icebp
mov
xchg
jmp
mov
fmull
dec
int
mov
daa
out
mov
xchg
test
adcb
pop
int3
mov
xor
mov
jbe
dec
repnz
inc
mov
movsb
aad
std
orl
lods
scas
out
mov
fs
stos
jo
or
lods
cmp
lods
sbb
cmp
mov
jno
pushl
pushl
inc
or
cmp
or
imul
cmp
sub
pop
add
fmuls
popa
inc
rolb
pop
insb
shl
lods
out
pop
popf
push
std
insb
movsb
pop
mov
xchg
mov
sbb
in
dec
jg
or
xor
rcr
and
lds
xor
test
jmp
movsl
test
jno
fadd
call
ret
inc
push
repnz
mov
and
or
clc
test
mov
test
add
lds
divb
mov
pusha
mov
stos
insb
pop
lock
mov
pop
call
xor
clc
inc
popf
or
xchg
adc
lea
int
ret
dec
pop
mov
xchg
ds
dec
test
inc
cmp
adc
pop
cmp
inc
jae
in
jge
jmp
ljmp
adc
imulb
fimull
aas
nop
clc
mov
subb
je
cltd
orb
xchg
addr16
push
lret
cwtl
fnsave
out
pop
dec
mov
frstor
sub
mov
fildl
in
stos
xchg
xor
ret
aaa
lea
pop
es
aaa
popf
jl
push
add
outsl
lcall
mov
out
jmp
out
in
addl
jp
loope
adc
ja,pt
das
mov
pop
in
jecxz
nop
adc
inc
daa
inc
mov
sub
mov
lahf
mov
mov
loopne
sbb
mov
push
add
jns
fstps
es
cs
rcrb
imul
adc
mov
js
or
sti
and
fcomip
pusha
add
out
loope
and
and
mov
sub
sub
dec
aas
addl
add
push
pop
sub
sbb
sbb
pop
ret
mov
lea
jno
xchg
add
incb
mov
push
xor
xchg
lahf
lcall
xchg
push
push
pop
add
push
cmp
fstpl
jge
les
cmp
xchg
cmp
jno
xchg
sbb
fadds
into
jnp
cmp
add
or
inc
mov
daa
ss
adc
cmpsb
sbb
dec
iret
add
loopne
test
scas
jne
sub
and
jle
mov
lret
push
xor
jnp
lret
fcomps
aad
sahf
movl
push
jae
fstpt
push
nop
add
sbb
and
cs
popf
lahf
push
daa
imul
push
xchg
push
mov
push
sti
lods
neg
push
test
or
xor
movsb
fcmovnb
mov
xchg
ficoms
push
xlat
movsl
sbb
pop
enter
xor
mov
mov
loop
cmpsb
mov
dec
push
mov
aaa
in
push
dec
fwait
push
insb
adc
fists
rcrb
mov
dec
pushf
fnstsw
lret
pop
jecxz
iret
mov
loopne
icebp
cld
or
adc
outsl
push
dec
ret
pop
mov
aaa
mov
sarl
in
xchg
andb
mov
mov
sti
cli
sbb
sub
mov
inc
mov
sar
xchg
mov
in
xor
dec
icebp
ss
movsb
lods
loop
jmp
mov
or
data16
adc
data16
outsb
movsb
mov
fisubl
dec
and
stos
mov
mov
scas
jle
or
lret
outsl
test
scas
hlt
pop
jnp,pn
dec
fildl
xor
neg
test
mov
popf
stc
xor
pop
sbb
daa
xchg
xchg
xchg
dec
std
icebp
add
mov
jns
movb
loop
invd
jmp
cld
push
push
push
adc
xchg
cmpsb
mov
insl
xchg
imulb
cli
mov
das
inc
scas
stos
mov
mov
pusha
cwtl
pop
dec
dec
xor
push
sub
inc
test
hlt
ja
jle
sbb
mov
adc
icebp
jae
push
adc
aas
nop
fidivs
negb
xchg
jbe
add
lods
inc
or
andl
xor
push
mov
dec
adc
roll
pop
mov
mov
aad
pop
pmaxsw
into
xlat
add
lahf
scas
mov
mov
cs
test
fmulp
push
jns
imul
add
pop
xchg
test
mov
sahf
repnz
fwait
mov
rcr
dec
sub
dec
inc
stos
push
and
sarb
xor
push
loop
cmpsl
mov
or
call
out
subl
mov
jb
scas
or
jg
pop
jae
orb
add
std
adcl
push
cmp
jge
push
mov
add
push
cmp
test
jae
bound
clc
out
ss
pop
inc
loopne
or
jp
lahf
lea
sbb
cmc
popa
rorb
jne
je
pushf
mov
out
push
push
pop
dec
dec
fwait
xor
lahf
inc
mov
or
imul
push
shrl
sbb
shl
mov
cmp
fs
pop
push
cmp
and
movsb
push
sar
xchg
adc
std
fdivs
pop
mov
adc
sti
ja
fmul
pop
lahf
dec
cmp
pop
outsb
orl
fnstcw
push
cmc
mov
adc
mov
in
mov
xchg
sub
fnstsw
out
shr
stos
shll
orl
ror
xchg
jmp
daa
sarl
xchg
dec
push
lret
sub
data16
pop
xor
daa
dec
cmp
dec
pop
mov
mov
sbbl
lods
dec
sbb
mov
gs
les
fimull
int3
stos
imul
inc
mov
pusha
sbb
aam
cmp
imul
pop
xchg
leave
ja
insb
mov
leave
push
add
iret
mov
popa
scas
loope
xchg
cmovae
cmpsb
rcrb
xchg
stos
push
aas
popa
in
rclb
push
mov
sbbb
insl
xchg
sub
out
mov
sbb
xor
imul
test
std
cld
jp
popf
lcall
add
mov
lods
cli
inc
and
adc
js
add
jmp
mov
xor
push
fists
jmp
jb
jge
pop
cli
push
and
out
out
repz
xor
add
pop
xchg
xor
cmc
pop
jnp
aam
scas
mov
jne
mov
rorl
pop
sbb
push
pop
stos
fidivrs
pop
mov
jmp
push
fsubp
rolb
imul
loope
fstl
mov
rorl
or
xor
mov
movsb
adcl
stc
sbb
mov
ret
in
std
pop
mov
sbb
ja
lods
jecxz
test
sbb
dec
inc
sbb
xor
add
pop
mov
inc
inc
jp
mov
inc
scas
popa
test
fwait
scas
jae
in
adc
xchg
and
icebp
fs
pop
or
jb
jle
jns
dec
push
outsb
and
popf
pusha
mov
xor
inc
dec
xchg
xchg
sbb
icebp
sbb
xor
inc
lods
xchg
ret
js
inc
sub
imul
push
test
jmp
and
jnp
sub
pop
xchg
add
add
jo
iret
bound
inc
and
mov
cwtl
cmpsb
xor
push
xor
inc
cmpsb
pusha
into
lea
mov
in
cmc
flds
int3
cmpl
in
movsl
outsl
inc
jl
lret
and
push
xor
shlb
pushf
cli
mov
fistpl
std
mov
push
inc
pop
ret
fnstsw
jb
or
mov
aad
jne
jo
inc
or
jmp
pop
inc
sbbl
push
repz
adcl
and
xchg
push
cmp
bound
mov
xchg
mov
and
dec
mov
rolb
cmp
popf
hlt
cmp
sub
insb
rcrb
fmul
add
jmp
fs
movb
ret
cmp
in
or
push
or
push
push
in
iret
imul
mov
sub
dec
insl
mov
sbb
mov
popf
loopne
hlt
lret
mov
mov
or
push
pop
mov
mov
lock
lcall
int
sub
sbb
stos
sbbl
repnz
xchg
xor
pop
sbb
mov
adcb
mov
mov
insb
ret
subl
inc
push
pop
mov
loop
jmp
mov
adc
fnstsw
cld
mov
aaa
repnz
cmp
arpl
mov
mov
call
mov
xchg
aam
pop
push
sbb
cmp
xlat
jmp
js
pop
ja
mov
lret
cltd
loopne
inc
xchg
stos
scas
xchg
out
and
andb
popf
push
xchg
push
mov
pushf
cmp
mov
push
mov
idivl
sub
es
daa
or
inc
out
xchg
adcl
xor
jbe
xor
imul
xchg
push
hlt
or
je
icebp
gs
add
or
fdivrl
mov
repz
mov
stos
arpl
sti
xor
or
in
aad
pcmpeqd
call
inc
xor
leave
loope
add
jl
dec
sti
cs
push
int3
adc
mov
sbb
push
imul
jecxz
jp
in
outsl
popf
fs
dec
dec
out
jp
adc
mov
mov
outsb
int
jle
rclb
sub
out
inc
ret
pop
int
outsb
push
push
cmp
mov
lods
inc
insl
jmp
lahf
les
jmp
cmpsl
mov
mov
adc
and
xchg
arpl
lret
imul
push
pop
jmp
or
mov
mov
out
push
divb
sbb
jge
xor
movsw
inc
push
in
loope
mov
mov
xor
gs
mov
mov
aas
push
adc
aaa
push
cli
popf
ds
pop
sbb
dec
scas
push
inc
das
leave
shll
ffree
dec
and
imul
or
push
adc
mov
mov
xchg
cmp
lea
sbb
les
imul
enter
cmp
cmp
andb
rclb
in
pop
popf
shlb
mov
fimull
cmc
push
sbb
insb
xchg
cmp
div
inc
pop
dec
addr16
test
sub
sbb
xor
mov
pop
enter
add
sub
push
addl
aaa
sbb
dec
test
or
cmp
cmp
dec
jbe
push
mov
or
fsubrs
aad
xchg
xchg
rcrb
cmp
roll
pop
fwait
aas
push
andl
inc
mov
aad
test
imul
inc
stc
mov
mov
jno
xlat
flds
xor
loop
dec
push
pop
jg
jb
dec
xchg
xor
adcb
mov
xchg
aaa
rcr
mov
mov
jmp
cld
dec
or
lcall
sahf
js
dec
inc
sbb
inc
and
inc
ret
mov
inc
aad
cmc
pop
popf
cmp
jmp
lahf
dec
or
dec
and
scas
push
lods
mov
push
mov
pop
ds
mov
popa
notb
lret
dec
push
sub
popf
xor
lock
xchg
je
cmpsl
sbb
mov
pop
xchg
in
pop
xor
daa
shl
les
mov
sub
ljmp
ss
xchg
push
iret
gs
or
or
add
test
popf
jge
sbb
push
dec
push
xchg
stos
pop
test
and
test
lock
jge
pop
adc
out
test
jp
xor
dec
push
cs
cmp
outsb
mov
add
aaa
add
push
das
and
hlt
jmp
push
lods
fwait
xchg
dec
cmc
int3
sbb
sub
cmp
in
in
loop
inc
test
insb
dec
lods
jns
mov
inc
mov
push
jl
sub
adc
xchg
ret
out
and
add
sti
push
out
mov
loope
shrb
dec
in
mov
lods
fwait
or
xchg
fstpt
sbb
and
mov
jg
incl
push
push
jge
dec
in
leave
dec
popf
cmpsl
mov
add
cmpb
mov
xchg
sbb
cld
xchg
sbb
mov
push
inc
and
cld
sub
loop
leave
push
lret
cmp
adc
jecxz
mov
cmp
int3
add
mov
sub
popa
leave
mov
out
mov
sahf
mov
xlat
sahf
push
divb
sbb
add
adc
and
cltd
and
mov
xlat
lahf
jbe
loopne
imul
lret
pusha
cli
cmpsl
push
js
jnp
push
jbe
hlt
lods
clc
outsb
arpl
inc
pushf
and
loopne
fwait
rolb
pop
fwait
inc
jp
mov
mov
notl
js
vmovdqa
or
in
sub
dec
mov
xor
ja
fdivrs
pushf
xchg
std
mov
cmp
in
xor
dec
sub
and
jo
aad
mov
or
es
sbb
stc
pop
cli
pop
inc
pop
out
mov
adc
sbb
mov
mov
ljmp
mov
int
in
add
aas
call
sbb
loop
lahf
pop
dec
dec
int3
sti
mov
fcomps
xchg
push
insb
outsl
or
and
addr16
xor
jp
int
jbe
insl
sub
mov
pop
add
imul
iret
sub
sahf
mov
out
sbb
enter
in
imul
cld
and
adc
fbld
lcall
cs
ds
push
or
jge
scas
mov
add
mov
or
sub
repnz
push
mov
fstps
sbb
sbb
negb
hlt
inc
xor
aas
cmp
mov
outsb
push
adc
inc
sub
jbe
pushf
shrl
mov
inc
jge
xchg
sub
sub
push
xchg
movsb
pusha
adc
sahf
leave
outsb
shll
inc
addr16
lea
or
jb
daa
xor
jne
cmp
jecxz
push
aam
jae
mov
cmpsl
adc
dec
or
test
jno
movb
daa
add
xor
fs
out
and
cmpsb
push
rorb
push
insb
movsl
jbe
mov
mov
sbb
test
in
push
inc
jp
sbb
xor
loope
outsb
in
rcrl
lcall
into
xor
call
adc
icebp
sub
es
popf
sub
sahf
shl
loop
loopne
dec
nop
adcb
ficomps
ljmp
aad
aam
push
dec
cmp
out
xor
mov
loope
stos
xor
testl
out
add
cmp
fisttpl
mov
push
sub
outsl
jge
sub
cmp
push
in
out
xchg
cmpsl
jge
add
outsb
addr16
ror
imul
push
rorb
and
xor
notb
mov
cmp
fcomi
push
std
js
shrb
dec
fcom
shlb
and
gs
push
fimull
in
inc
testb
sbb
jns
jge
out
and
addr16
rol
fstl
mov
and
std
xchg
mov
nop
mov
gs
add
jb
bound
lods
mov
mov
in
movsl
sbb
fcmove
sti
sbb
sub
mov
jns
adc
imul
cwtl
es
aas
adcl
push
and
cmp
sti
xchg
fldcw
xchg
xchg
jo
popf
push
sbb
in
data16
subl
jb
rcll
cmpsl
dec
or
and
jmp
jb
sub
insb
jmp
dec
aas
xorl
es
push
jp
mov
pop
mov
sub
jb
ja
jns
or
bound
dec
pop
cli
or
nop
int3
lcall
loope
jmp
push
xor
loop
dec
shll
push
outsb
sub
aas
lret
cmp
push
mov
popa
ds
push
sbb
and
ret
and
insl
and
std
pop
adc
addr16
dec
mov
push
insl
movl
lahf
dec
adc
bound
test
inc
xchg
sub
popf
loopne
xor
jg
xor
pop
in
or
push
jo
pushf
push
bound
jbe
jns
loop
dec
push
jg
addr16
jmp
sti
sub
stos
xchg
dec
mov
xor
cmp
xchg
incl
inc
or
jnp
or
fldt
push
mov
cmp
pop
mov
adcb
fimull
mov
getsec
adcb
pushl
mov
inc
jge
dec
pushf
cmp
dec
xchg
sbb
in
mov
and
imul
mov
call
pop
notb
add
xchg
adcl
lahf
mov
mov
cli
cltd
xchg
mov
mov
decl
adc
dec
and
fcom
fldl
repnz
es
and
and
and
xchg
dec
mov
adc
test
cld
jo
mov
lahf
insl
enter
lock
and
adc
xchg
outsb
mov
addb
xchg
jbe
jp
xchg
mov
popaw
std
repnz
push
and
add
jne
dec
jne
movsl
out
jns
enter
es
jno
loop
insl
fstpl
je
dec
xchg
cmp
push
xor
adc
mov
int3
movsl
out
ljmp
in
xchg
cld
mov
in
adc
or
lea
rclb
mov
mov
sub
ss
cmp
inc
pop
aam
mov
mov
inc
ja
xor
push
and
xchg
stos
pop
cmpsb
lods
loope
loope
xor
in
xor
mov
and
adc
mov
jecxz
and
stos
jg
aaa
pop
iret
push
notb
scas
or
jl
dec
mov
lock
ds
mov
adc
ret
fstpl
out
test
jp
rorb
sbb
mov
stos
sub
push
jne
jae
jno,pn
inc
mov
mov
imul
sbbb
cmc
js
and
cmp
lea
repz
push
mov
pop
dec
and
rolb
sbb
cwtl
xchg
xchg
flds
xchg
adc
pop
cli
pop
cli
stos
cmp
or
lock
inc
into
stc
add
adc
jnp
gs
dec
inc
xlat
cltd
pop
or
sbb
call
xor
fildll
ljmp
sub
or
gs
push
sahf
ljmp
adc
mov
pop
cmp
push
adc
out
lret
jae
add
aam
pop
in
into
addr16
fwait
add
fiadds
adc
ds
pop
mov
xchg
repz
shrb
jg
ret
lret
or
mov
loopne
sub
jns
fiaddl
loop
jge
inc
addr16
xchg
sub
xor
aad
pop
in
jp
add
stos
daa
aaa
jp
xchg
out
stos
enter
sti
push
or
roll
nop
loop
mov
imul
mov
aad
or
lret
and
sub
in
jo
jno
mov
pop
std
pusha
sbb
clc
iret
mov
cmc
push
push
cmp
test
bound
sub
xor
shlb
out
cmp
mov
test
stos
aam
lret
inc
loop
xorl
jge
sbb
push
shr
add
cmp
test
and
sbb
addr16
mov
push
sarb
out
cs
fxch
ret
cltd
cs
cmpsl
dec
mov
or
aaa
ss
les
and
push
test
jmp
into
dec
bound
iret
repz
cmpsl
leave
or
inc
add
sti
dec
push
lret
push
out
adc
aam
shlb
pop
sub
testl
mov
out
leave
call
rclb
lcall
xchg
rcrb
lock
dec
mov
or
dec
ds
js
xchg
mov
jecxz
push
testl
pandn
sub
inc
out
mov
scas
les
sti
xchg
and
and
xor
add
mov
aad
lods
jne
iret
aad
cld
sub
dec
lods
cmc
popf
mov
pop
push
int
xchg
adc
push
dec
add
jmp
push
ffree
lods
iret
push
repnz
xor
test
mov
xchg
xchg
pusha
fstl
es
push
outsb
testb
popa
inc
ret
xor
rclb
jne
pop
pop
adc
mov
lods
and
pop
fwait
mov
test
cmc
sub
adc
in
add
rcrl
push
pop
sub
cwtl
mov
fstpl
leave
es
cltd
in
jge
xchg
mov
sub
adc
mov
call
push
adc
mov
sbb
add
sub
jmp
lret
ret
xor
inc
stos
adc
jno
jb
cmp
shll
push
inc
imul
mov
jp
shrl
mov
add
cmp
testl
jae
fldcw
jbe
xchg
into
cmpsb
mov
push
lcall
pop
scas
mov
aaa
sub
test
and
ficoms
mov
dec
mov
imul
cwtl
cmp
jg
mov
stos
dec
push
hlt
sbb
xchg
lods
lods
or
mov
inc
fnsave
into
and
jmp
dec
mov
or
or
jp
into
xchg
int3
inc
nop
and
push
mov
and
push
jmp
mov
loopne
dec
rorl
and
adc
mov
xchg
and
decl
test
cli
mov
jbe
cmp
test
jecxz
mov
jg
add
cs
call
mov
out
sub
mov
or
add
out
mov
in
in
ljmp
mov
cmp
std
sti
jne
arpl
mov
or
sbb
in
push
shll
mov
lds
xor
test
and
in
mov
adc
out
decl
sbb
push
mov
inc
inc
fdivrs
nop
sub
add
inc
add
dec
into
inc
mov
pop
rorb
sub
cmp
jg
pop
es
cmp
std
jno
inc
xchg
dec
bound
mov
cmpsl
out
fisubrl
das
lods
movsl
mov
sahf
mov
in
add
or
movsb
repnz
mov
jge
xor
pop
jno
xor
push
dec
xor
xchg
dec
xchg
je
mov
int
xor
dec
cmp
xor
and
dec
loopne
push
jbe
jmp
cmp
out
enter
fadd
dec
jb
xchg
or
addb
les
pushf
pop
cltd
mov
out
cwtl
sub
xchg
int
cmp
clc
mov
enter
iret
outsl
sahf
aas
inc
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
call
or
adc
xor
mov
xor
or
sub
xor
xorl
xor
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
jmp
push
shl
dec
jne
sub
lods
cmpsl
ljmp
pop
adc
mov
sahf
pop
les
mov
out
pop
aad
movsl
leave
int
pop
in
sub
daa
scas
pop
adc
mov
jo
lea
jg
jl
scas
push
dec
push
js
sub
mov
nop
pushf
dec
jne
push
jmp
sub
iret
push
push
testl
inc
lahf
sbb
or
mov
sub
jmp
gs
flds
lods
jne
and
sbb
push
push
inc
xchg
cs
and
sti
push
xchg
popa
pop
and
mov
bound
dec
repz
adc
mov
adc
adc
daa
mov
adc
scas
push
push
lahf
lods
out
mov
mov
cmp
bound
mov
pop
out
inc
adc
mov
loopne
jb
pusha
dec
cs
cmp
leave
push
sbb
jne
lahf
and
iret
bound
adc
out
dec
pop
xchg
dec
in
rcl
dec
cs
pop
ds
dec
mov
imul
cwtl
sub
sbb
xchg
fisubs
jl
push
push
movsb
pop
mov
push
jns
push
lds
dec
lahf
fwait
mov
dec
addb
or
cs
mov
mov
leave
dec
push
pop
das
lret
cld
enter
pop
push
in
mov
jge
or
lods
xor
mov
mov
xor
popf
imulb
movsb
lret
pop
push
mov
inc
jno
inc
jo
sbb
jmp
sbb
cli
repz
sbb
shl
lret
dec
inc
jg
daa
and
int3
orb
sub
icebp
rclb
outsb
jle
pop
sub
push
mov
ja
shll
add
movsl
pop
cwtl
mov
xor
outsb
imul
enter
sub
sub
icebp
lock
and
cmp
stc
jns
gs
fwait
loop
dec
les
push
mov
lret
push
adc
inc
int3
sub
jbe
or
ds
call
add
xchg
pusha
dec
outsb
rcll
outsb
cmpsl
stos
insb
bound
mov
shlb
fucomip
loopne
mov
ja
daa
popf
cltd
shrb
inc
ret
popf
mov
mov
ret
jns
pop
repnz
push
incb
scas
jl
adc
mov
xor
rol
xchg
dec
nopl
rorl
sub
sbb
mov
dec
mov
aad
xchg
lock
sub
neg
push
movl
inc
lret
and
adc
dec
stc
inc
lock
fsubrl
cmp
sub
sbb
pop
push
push
jne
xchg
dec
test
xchg
daa
mov
es
mov
and
ds
mov
mov
adc
andl
sbb
stc
les
das
push
or
daa
cmp
cmp
vpshlb
popf
sbb
jl
ret
ret
lock
lret
aad
mov
icebp
cli
and
popa
cwtl
dec
mov
out
insb
popf
add
push
in
mov
repz
and
cmpsb
imul
xchg
dec
clc
stc
loope
pop
cld
adc
lds
cwtl
imul
mov
mov
ss
jo
ret
push
cmp
adc
fs
adc
inc
test
mov
pusha
mov
pushf
out
sti
ror
aad
adc
lret
movsl
jae
fdivr
mov
adc
loopne
out
sbb
aad
nop
pop
ret
test
sub
xor
push
inc
mov
xor
fimull
inc
and
xchg
leave
repnz
mov
inc
jnp
js
pop
cmpb
add
mov
push
inc
sbb
sbb
sbb
and
aam
jo
popl
jne
cli
cltd
mov
xchg
fnsave
pop
das
xor
cmp
fisubl
mov
lods
movhps
movl
inc
xor
sub
pushf
bts
or
push
cmpsl
sti
dec
cwtl
fdivs
mov
mov
out
insl
int3
mov
cmp
stos
test
dec
fnstenv
ds
lret
jns
mov
cmpl
stos
sarl
lret
cmovne
hlt
jo
jnp
mov
movsb
cmpsb
icebp
push
pop
in
outsl
sbb
mov
jp
addb
xchg
pop
push
mov
movl
push
daa
adc
push
out
add
mov
inc
pop
jnp
jae
push
jb
stos
xor
push
scas
or
and
out
das
lret
mov
ret
fwait
mov
and
imul
popf
jae
ret
mov
lret
repz
xor
xchg
imul
lods
mov
and
scas
push
mov
cmp
aam
ds
xor
adcl
mov
jmp
test
xchg
adc
mov
push
xchg
mov
in
cwtl
das
pop
adc
xor
add
pushf
mov
movsb
sbb
dec
lods
in
in
ljmp
jp
cld
gs
fisubs
inc
xchg
sbb
stos
loop
cmp
test
mov
icebp
push
pop
jmp
adc
mov
and
inc
xchg
roll
imul
sbb
test
imul
pop
test
add
or
repnz
ret
mov
in
arpl
jp
cmp
and
xchg
mov
js
jle
mov
shlb
jl
and
shll
nop
repz
push
pop
dec
bound
inc
xchg
call
dec
shrb
nop
shlb
inc
repnz
xchg
cld
cld
xchg
add
inc
and
out
leave
xchg
xchg
push
mov
out
mov
pop
imulb
hlt
jb
mov
fwait
jmp
hlt
pop
in
lods
je
dec
pop
mov
and
sbb
jno
fs
ja
fcmovnu
pushf
jo
mov
push
out
jecxz
push
dec
and
repz
ja
cmpsb
dec
push
ja
repnz
out
sub
les
adc
scas
test
in
and
dec
adc
ljmp
jp
push
xchg
pusha
xchg
push
cli
mov
adc
scas
data16
idivl
jae
inc
flds
ja
xchg
mov
push
and
andb
inc
jmp
es
xor
jne
mov
xor
push
jp
test
imul
jne
jae
pop
cmp
dec
xor
fidivs
pop
pushf
lea
lea
in
fistpl
xchg
loopne
fistpl
mov
scas
push
cld
aad
incl
pop
jnp
cmp
mov
setle
dec
mov
add
pop
ljmp
std
enter
jecxz
jo
xchg
leave
imul
aam
loope
or
pop
repnz
mov
sbb
iret
dec
jb
push
popa
mov
arpl
loopne
les
loopne
jnp
push
clc
movsb
or
mov
dec
add
sbb
cmp
es
rcrl
jecxz
push
xchg
mov
mov
add
push
inc
push
mov
jmp
jns
jns
jmp
sub
frstor
js
repnz
cmp
cmp
dec
adc
mov
dec
mov
jno
xchg
mov
gs
fnstenv
sahf
shlb
insl
ds
adc
leave
mov
sbb
sbb
loopne
inc
or
gs
jb
je
daa
mov
enter
push
movsb
mov
push
xor
imul
fsubl
push
es
fiadds
shll
mov
mov
jb
gs
xchg
outsb
add
inc
adc
mov
std
out
jae
leave
pop
fadd
push
sbb
dec
push
xchg
loopne
inc
jb
cmp
negl
lcall
mov
and
inc
cmp
lcall
scas
xchg
aad
es
adc
lock
nop
outsb
or
mov
sarb
dec
adc
or
clc
cltd
cs
in
mov
ds
aaa
push
test
fwait
or
adc
add
sbb
in
loopne
push
adc
pop
repz
pusha
rolb
daa
flds
outsb
call
xlat
push
jge
lds
repnz
shrl
jp
js,pt
sti
push
sarb
adc
mov
xchg
and
push
into
test
out
push
mov
push
lods
adc
xor
and
pushw
icebp
ficoml
or
fiadds
outsl
mov
ds
mov
mov
out
xchg
pop
pop
mov
je
cmpb
insb
pop
imul
add
outsb
int3
xchg
into
xchg
lret
fistl
or
fcmovnu
lret
outsl
les
sarl
jle
mov
add
stos
stc
mov
fsubr
mov
cmp
jmp
push
scas
scas
sti
mov
dec
inc
dec
pop
ja
cmpsl
mov
setns
popf
cld
fwait
mov
cmp
movb
and
mov
dec
mov
test
dec
add
bound
mov
aas
bound
lods
js
call
pop
lret
cmpl
ffreep
xor
shrb
dec
les
push
xchg
call
popa
dec
in
xchg
int3
xor
or
fildl
cs
dec
jle
mov
shll
sub
sbb
dec
jg
shr
stos
xor
mov
cmpsb
les
pop
mov
mov
pop
dec
test
and
cld
andb
jg
rsm
xchg
sbbl
dec
xorl
mov
pop
pop
gs
mov
es
cmp
push
ret
std
out
dec
inc
dec
outsb
out
mov
data16
sbb
push
add
out
jo
cmp
jmp
add
pop
shl
out
push
out
cmpsb
mov
lcall
inc
fnsave
and
and
dec
mov
adc
add
cmpsb
and
mov
aam
lock
jbe
mov
shlb
pop
subl
pop
in
popa
add
pop
dec
xchg
into
das
xorb
dec
and
ja
cltd
sti
cwtd
add
xor
pop
sub
leave
push
lcall
fs
cwtl
ret
cmp
inc
lods
divl
test
or
cmp
imul
aad
ret
jp
xchg
es
out
aas
loopne
into
or
xchg
cltd
ret
imul
das
testb
pop
push
or
test
aaa
inc
test
shrb
mov
in
cmp
into
adc
or
sub
aam
jnp
nop
ja
mov
add
and
in
arpl
je
dec
shll
andnps
in
std
adc
fsts
adc
or
sub
sti
push
sahf
mov
and
addr16
sbb
sbb
xor
and
dec
data16
lahf
mov
in
cmp
jnp
push
mov
add
mov
cmpsl
cwtl
mov
imul
pop
lock
pushf
mov
mov
dec
lods
aas
loopne
dec
jbe
inc
addr16
daa
adcb
add
lea
loop
lods
xchg
sub
das
and
push
push
lds
ret
mov
cltd
mov
jg
pop
in
and
dec
push
xchg
xor
mov
out
shll
jmp
je
scas
stos
dec
enter
pop
cltd
mov
es
jns
cmc
or
notl
push
in
ja
jno
and
std
mov
rclb
sub
stos
inc
inc
lock
subb
or
icebp
out
daa
mov
aad
shll
call
pop
sahf
mov
fwait
sbb
fiaddl
mov
sbb
fistl
jmp
and
push
sti
lret
rolb
pop
sub
dec
aas
pop
add
fadd
mov
mov
gs
mov
sbb
add
adc
movsl
in
pushf
rcl
adc
mov
fmul
mov
jo
or
mov
mov
inc
loope
js
mov
aam
lcall
mov
popa
test
dec
ficompl
adc
cld
cmp
pop
jmp
jge
icebp
mov
dec
mov
movsb
cli
stos
xor
pop
add
mov
add
mov
cmp
add
popa
sbb
push
loope
fistps
outsl
mov
cmp
int
shlb
jmp
addr16
stos
push
mov
mov
dec
into
jae
rol
xchg
aad
sbbl
push
and
dec
sbb
test
pop
sti
push
stos
jne
mov
mov
leave
xor
ucomiss
push
call
ret
repz
adc
inc
ja
jo
pop
mov
cwtl
and
dec
jb
or
repnz
add
enter
rcl
inc
clc
adc
sbb
push
inc
test
mov
rcrb
std
jle
js
mov
in
andl
and
xchg
dec
cmp
call
iret
call
imul
push
cmp
jl
and
out
insb
lds
cwtl
sbb
jle
addr16
pop
pop
sbb
jp
ja
je
and
xor
jne
and
sbb
add
inc
xor
icebp
push
inc
dec
dec
arpl
sub
lods
dec
cs
mov
pop
and
jns
push
push
cltd
nop
xor
and
aad
push
mov
add
mov
lcall
insb
xchg
dec
mov
add
fwait
and
stos
jnp
loop
jno
fdivr
jmp
mov
inc
popa
mov
sbb
mov
pop
dec
daa
xor
xor
jb
mov
mov
bound
or
mov
out
lods
or
push
mov
or
push
lods
jno
lahf
imul
pop
icebp
imul
sbbl
cld
jl
jl
movsb
jmp
push
enter
jge
push
pop
push
push
cli
jb
jge
push
xchg
sbb
jge
sbb
les
jge
loop
xor
or
jl
daa
add
pop
add
dec
stos
mov
mov
sub
movsb
mov
in
repz
int
scas
or
pop
mov
mov
inc
lcall
insb
pop
sub
mov
mov
mov
jmp
es
jecxz
xchg
stos
adc
xchg
xchg
pop
test
sub
int3
push
in
sbb
addr16
nop
dec
pusha
cld
jmp
push
lods
inc
dec
movsb
mov
fcmovne
rcrb
push
shrb
sti
mov
inc
jnp
popf
push
mov
mov
ficoml
jl
xor
and
decl
movsb
mov
mov
push
mov
push
mov
mov
lock
test
loope
rol
sbb
data16
sub
lea
decb
lea
xor
xor
inc
aad
push
sbb
sbb
cmc
add
cmpsl
mov
lcall
adc
pop
mov
mov
int3
push
cs
in
fcmove
rcrb
and
hlt
inc
xchg
orl
cwtl
pop
adc
fidivrl
jo
jg
push
cmp
xor
sahf
sti
cmpsb
push
mov
and
xor
sub
stos
or
mov
cmp
jns
pushf
std
test
mov
jmp
in
std
test
insl
cmp
xor
ret
sub
push
add
or
mov
push
scas
fwait
add
rcrl
xchg
xchg
call
inc
jl
and
or
cs
cmc
xor
repnz
pop
rcl
adc
hlt
push
test
add
shrl
lret
mov
or
fstl
xor
cmpsl
sub
cmpsb
add
xor
aad
outsl
lods
adc
sbb
sbb
cmp
dec
push
daa
mov
lock
push
aaa
add
das
adc
clc
rcll
jne
add
xchg
sub
fisubrl
sbb
jno
jo
adc
jmp
popf
imul
push
mov
jge
rcrb
aaa
insb
cmpsl
jp
data16
sbb
push
in
xor
push
jecxz
dec
daa
out
xchg
lahf
xlat
jge
testb
divb
pop
daa
or
loope
pop
sbb
outsb
out
int
pop
hlt
xor
push
xchg
cld
cmp
iret
and
jle
push
push
je
jmp
push
sub
call
adc
push
ss
pop
xchg
mov
ret
pop
test
or
xchg
mov
inc
push
bound
cs
hlt
inc
shlb
cmp
inc
sbbl
and
scas
es
adc
movsb
test
push
and
mov
jns
push
popa
lods
cltd
jl
or
stos
das
add
inc
rorl
fimull
out
lahf
jecxz
adc
andb
push
pop
xor
jo
dec
outsl
lock
push
mov
adc
aam
leave
inc
lods
inc
aas
pop
push
adc
repnz
xchg
pop
iret
inc
stc
lret
gs
and
in
cmp
leave
adc
or
jae
std
cli
push
mov
shr
pop
nop
cmpsb
and
outsl
mov
stos
std
sub
js
dec
cmp
push
in
or
lock
or
xor
das
stos
pusha
hlt
or
inc
mov
ljmp
mov
cld
pop
sysexit
xchg
addl
leave
out
scas
nop
dec
xchg
rolb
inc
pop
into
nop
dec
lret
out
sti
sub
cmp
jge
lods
jle
xchg
cld
cmp
sbb
adc
in
jg
or
dec
shlb
add
enter
lods
neg
jmp
jecxz
add
pushf
add
fbld
jno
adc
mov
shlb
xchg
je
ljmp
pop
js
sbbb
mov
dec
lods
cmp
ficoml
lret
sbb
cltd
das
fsubp
xlat
ret
sahf
and
bound
dec
loope
pop
jo
xor
mov
insl
js
lds
add
stos
jge
fsubrl
xchg
sbbl
inc
lea
sub
aaa
push
push
push
mov
das
inc
addr16
adc
enter
leave
mov
xchg
mov
push
pop
daa
repz
mov
stc
fistps
mov
ja
jne
xchg
push
xchg
frstpm(287
insl
ret
push
push
inc
mov
push
cmp
mov
lret
push
mov
int3
loopne
dec
xor
mov
xchg
mov
adcb
pushf
mov
sbb
xor
xchg
jge
ss
addb
cli
push
inc
cli
popf
iret
adc
jle
dec
xor
add
cwtl
push
cmp
pop
dec
xlat
xor
or
push
ds
sarb
sbb
repz
ret
int
xor
pop
rcl
mov
orb
and
cmc
arpl
arpl
popf
xor
mov
push
add
jns
arpl
xor
sub
mov
arpl
jb
mov
cs
mov
jle
lock
xor
sub
fistl
xor
and
loopne
jg
mov
icebp
inc
push
cmp
add
lock
jb
push
sub
enter
push
punpckhwd
in
sbb
mov
pop
mov
mov
in
push
dec
arpl
out
cli
inc
test
arpl
xor
stos
pop
mov
lds
inc
ds
ret
lods
fimuls
out
mov
sub
mov
sub
outsl
lods
push
xchg
lods
xchg
and
cs
add
cmp
mov
inc
mov
lds
pushf
and
aas
jb
dec
pop
sbbl
xor
xor
xor
jb
shr
mov
jnp
xchg
add
push
mov
idiv
outsl
mov
jecxz
ds
push
lret
jmp
add
sti
cwtl
insb
jge
mov
sbb
aam
pop
gs
hlt
call
out
lret
fwait
mov
loopne
sbb
int
xor
inc
scas
cld
daa
das
lcall
push
out
js
dec
dec
scas
or
imul
mov
loop
xchg
movsl
cltd
xor
sbb
sub
jns
std
mov
inc
inc
fldt
sub
fistpl
mov
and
ja
loopne
inc
imul
adc
lahf
std
xchg
or
push
mov
xor
inc
lret
sub
sbbb
lret
xlat
inc
mov
insl
pop
push
sbb
cmp
pop
or
je
adc
fistl
mov
xchg
sbb
lock
das
es
xchg
pop
push
jno
adc
mov
jbe
data16
outsl
test
aas
cli
rolb
add
mov
mov
leave
lods
adc
cli
pop
lahf
mov
cwtl
inc
mov
shrl
pop
cmp
lods
notb
or
adc
or
xorb
mov
imul
mov
mov
xorb
jmp
dec
mov
adc
fmuls
leave
add
jg
ret
aam
pop
push
mov
leave
pushf
dec
fsub
pop
movsl
mov
test
jne
push
adc
test
pop
int
and
push
push
pushf
or
bound
adc
mov
sbb
sbb
sub
sahf
stos
mov
ljmp
mov
stos
fs
pop
gs
imul
push
mov
mov
imul
cmpsb
jo
inc
lret
fucomi
jns
cmp
mov
sbb
ds
dec
sbb
std
push
adc
add
adc
pushf
scas
push
lock
std
in
aad
mov
cmpsl
and
addr16
sbb
into
pop
or
push
cli
in
add
jl
js
pop
cmp
mov
inc
and
cmp
cmp
ljmp
sbb
clc
sbb
insl
jb
mov
arpl
or
cmp
andl
mov
xchg
adc
mov
mov
das
stc
lock
fwait
and
xchg
push
lcall
adc
sbb
lods
jg
or
aas
push
mov
cmpsl
cmp
xchg
test
or
cmp
mov
imul
mov
mov
mov
imul
pop
into
fisubrl
xchg
and
les
xchg
inc
mov
pop
cltd
mov
int3
xchg
pop
aam
addl
stos
test
pop
lods
test
je
adc
mov
cmp
jae
popa
sahf
ret
std
out
dec
mov
aaa
pop
repnz
jge
vunpcklps
testl
xchg
dec
pop
mov
or
imul
in
cwtl
or
outsl
push
adc
and
mov
add
jp
pop
addr16
jp
test
pop
ret
xchg
test
adc
jne
cmc
adc
sbbl
pop
clc
jl
mov
jl
cld
or
adc
popa
add
out
clc
aas
sahf
in
mov
and
loopne
mov
out
mov
cli
pushf
scas
imul
sbb
stc
aam
and
push
mov
cmpsb
pop
push
add
je
call
aad
or
ret
inc
add
mov
addr16
in
lahf
test
arpl
or
pop
call
jbe
out
inc
inc
stos
rclb
and
mov
jle
pop
sub
lcall
fs
call
mov
and
mov
adc
enter
leave
sub
sbb
jl
pusha
fimull
ret
out
in
adc
shll
xchg
fmull
inc
bound
je
mov
in
push
mov
sahf
add
out
data16
les
cltd
test
imul
mov
int3
mov
rolb
xor
jnp
jmp
push
repnz
cmc
out
mov
fists
cld
push
imul
xor
pop
mov
lret
xchg
inc
cmp
pop
iret
xor
inc
cmpsb
cli
jnp
push
sub
xchg
cmpb
stos
arpl
mov
ss
cmp
loopne
sbb
sbb
aad
dec
mov
xchg
cmp
xor
xchg
add
lret
xor
push
insl
shrl
inc
movsl
daa
mov
fmul
fisubrs
adcb
insb
in
hlt
mov
pop
push
push
scas
mov
pop
lcall
lea
addr16
jle
push
sbb
insl
out
pusha
movsb
jmp
inc
push
jne
or
xlat
cmp
jno
pop
jle
fcmovnb
cmpsl
int
inc
mov
bound
and
insl
mov
mov
std
inc
addr16
adc
jae
loop
cmp
jle
imul
insl
or
mov
xchg
mov
inc
jne
ret
cmp
push
scas
loop
push
data16
mov
popf
or
leave
cwtl
repz
sbb
xorl
cmp
xchg
dec
mov
lds
sbb
push
rclb
rorl
adc
adc
sub
imul
mov
ljmp
pop
jge
ss
and
popl
in
dec
add
subb
and
xlat
push
and
sub
imul
adcb
arpl
fstps
sub
test
idiv
sbb
notl
in
call
add
sbb
in
imul
iret
xlat
int3
push
xor
ja
and
ret
push
mov
outsb
adcl
lods
and
jne
jmp
push
fsubrl
lret
sbb
dec
inc
dec
adc
sub
cmpsb
mov
test
mov
jl
pushf
mov
sub
ds
aad
test
cwtl
mov
icebp
cmc
add
leave
lods
dec
sub
inc
sub
das
cli
imul
jl
xlat
jns
movsb
jg
popf
and
jns
cmc
pop
mov
pushf
jl
dec
inc
sub
inc
int
and
mov
enter
es
adc
stos
push
stos
addr16
pop
pop
cmpsb
in
sbb
dec
daa
sub
push
adc
in
pop
lods
ds
pop
xchg
mov
cmp
and
popf
cmpl
xor
loopne
pop
cmpsb
daa
lcall
movsb
jne
lcall
sbb
jmp
push
xchg
pop
call
adc
add
push
push
adc
dec
fisttpl
and
es
dec
int
sahf
sub
push
add
in
stc
out
adc
imul
outsb
xlat
dec
lds
mov
das
add
outsb
mov
dec
icebp
mov
jmp
fists
push
ljmp
ja
lret
out
mov
into
divl
mov
les
inc
call
pop
lods
sub
je
cmc
jmp
bound
iret
mov
sub
inc
in
cmp
cmp
dec
and
loopne
cltd
test
pusha
mov
lea
jno
xchg
xchg
xchg
popf
out
rorl
mov
dec
jle
in
jecxz
adc
popa
mov
sub
gs
test
mov
add
pop
adc
dec
xchg
sahf
sbb
cmpsb
mov
adc
xor
push
xlat
imulb
mov
mov
into
mov
push
xor
and
xor
add
xchg
bound
inc
enter
mov
ret
cmp
fcom
imul
dec
xchg
dec
fisubs
pop
add
sub
cmp
adc
sbb
mov
jae
aad
and
outsb
adc
popf
ss
mov
ljmp
mov
inc
clc
adc
std
push
lahf
stos
or
out
mov
dec
xchg
pop
imul
in
notl
cmpsl
popa
xor
repnz
push
dec
push
out
cmc
mov
and
and
lcall
push
jb
bound
push
dec
loop
iret
mov
jno
dec
add
repnz
pushf
daa
arpl
lods
pop
and
inc
scas
add
aad
pop
aad
adc
repnz
pushf
dec
sbb
cmc
mov
lcall
and
mov
ret
dec
stos
sub
sub
inc
icebp
testl
lret
lret
into
ja
and
stc
enter
push
je
xchg
jo
fs
add
cmp
popa
roll
in
sub
cli
cmp
mov
mov
cli
jl
jb
add
add
outsb
pop
mov
ret
daa
insb
cltd
push
jge
jge
mov
xchg
inc
les
rcll
push
push
cmp
loope
and
lcall
lock
jno
xchg
es
adc
jo
xchg
mov
push
mov
fildll
xchg
daa
ljmp
iret
in
mov
lods
adc
dec
mov
cmp
rcrl
into
mov
and
jg
es
dec
jg
cmpsb
mov
mov
lahf
xchg
push
push
shlb
push
cli
int
xchg
shll
pop
dec
scas
xor
hlt
pop
data16
call
xchg
adc
cmp
fists
decl
aad
pop
add
pop
mov
daa
xor
push
inc
inc
sbb
bnd
xchg
rol
push
jo
rcr
stos
scas
add
adc
jns
xlat
cs
pop
rcl
mov
xchg
jne
dec
loopne
hlt
cmp
jns
pop
cmp
mov
jns
and
sbb
call
insb
fildll
jg
or
jns
in
push
sbb
or
sub
data16
mov
cmp
pushf
arpl
into
out
call
std
sti
jle
out
or
dec
subb
mov
cld
pop
push
cmp
repz
call
jmp
and
xchg
sub
push
in
aam
cli
imul
pop
jp
xor
fs
mov
repnz
mov
cmovl
sub
xchg
arpl
cltd
sub
out
add
negl
nop
xchg
mov
inc
mov
ret
iret
lods
roll
xor
mov
pop
leave
mov
push
mov
cld
sbb
fisttpl
mov
outsb
cs
rclb
pop
mov
or
push
ljmp
addl
xchg
inc
sub
jmp
sub
mov
fstpt
test
adc
pop
adc
sub
sbb
imul
ss
test
xchg
and
lds
daa
adc
sbb
fadds
in
and
and
xor
jecxz
andb
insb
out
imul
mov
adc
negl
stc
cmp
jae
shlb
pop
push
jl
cltd
cmp
movsb
in
xchg
sub
xor
mov
add
test
int3
sti
and
and
adc
test
js
mov
test
sbb
mov
lods
mov
fsubrp
mov
xchg
mov
mov
xchg
add
mov
dec
repz
dec
xor
popa
and
jbe
and
or
inc
imul
sub
jge
adc
lret
xor
mov
rorl
mov
fwait
mov
mov
xchg
xor
mov
ja
xchg
loope
jge
ja
push
sub
or
out
ds
addr16
push
mov
ror
out
stc
in
mov
pop
mov
adc
add
jae
and
aas
flds
inc
or
mov
test
jnp
xchg
jb
imul
mov
divps
dec
jb
aam
xchg
insl
lods
pushf
xchg
ja
int
inc
pushf
mov
out
sub
adc
lahf
mov
mov
sub
fadd
cmp
stos
lret
cwtl
cmp
adc
mov
cli
or
lret
cmp
sbb
daa
cmp
xor
push
adc
daa
bound
mov
shl
hlt
leave
mov
cmc
movsl
sub
add
fmull
dec
push
inc
adc
iret
pop
mov
push
icebp
cmp
jae
bound
push
mov
in
bound
insl
fistpl
mov
mov
lds
lods
inc
pop
xchg
mov
push
jns
jg
xlat
in
cmc
es
jle
sbbl
inc
stc
mov
rcr
xor
addr16
pop
pop
push
or
jmp
jb
pop
popa
sbb
and
mov
mov
das
inc
sarl
repnz
das
lret
imul
js
mov
dec
add
cmp
lock
mov
lahf
mov
xor
push
movsb
mov
xchg
rcrl
jl
arpl
adc
cmp
mov
daa
test
mov
jae
add
xchg
xlat
mov
imul
xchg
mov
sbb
mov
stos
cmp
scas
mov
xor
movl
je
jge
shll
xor
rcrb
and
mov
in
mov
sbb
insb
mov
xor
dec
lahf
aaa
test
sub
int3
lret
in
imul
cmpsb
inc
scas
out
and
loopne
test
imul
mov
popf
int
fisttps
movsb
add
orb
aas
xlat
rcrl
cltd
push
cmp
pop
pop
xchg
mov
jo
jge
in
pop
icebp
out
movsl
xchg
adc
fmuls
movsb
mov
fldenv
test
jb
cmp
pop
ret
mov
in
xor
add
push
or
sbb
sub
and
xchg
sahf
movsl
add
jge
test
in
das
rorb
arpl
fadds
pop
lods
into
cltd
lods
movsl
lcall
repnz
lea
pop
std
loope
fcoml
jp
sbb
out
mov
or
jno
subl
push
fwait
push
outsl
lea
ds
xor
and
xchg
lock
rcrl
std
in
pop
add
xchg
push
jl
sub
cmpsl
push
mov
rcrb
dec
ret
or
ret
shlb
or
test
sub
out
pushf
in
jge
xor
xor
stos
icebp
sub
mov
das
cltd
roll
mov
out
cmp
inc
ret
rcrb
pop
mov
cmp
stos
insb
pop
imul
cmp
add
lret
jge
adc
mov
dec
les
cs
sub
inc
add
cwtl
dec
adc
jg
pushf
adc
test
xor
movsl
mov
jle
sti
stos
jnp
rclb
xchg
mov
mov
mov
aaa
idiv
jae
pop
cmpsl
enter
push
popf
scas
push
fadd
movsl
aad
mov
jns
out
fsubl
xlat
int
and
and
jmp
xor
mov
lock
test
repnz
cmp
fwait
movsb
jmp
scas
push
in
mov
enter
push
push
jo
jb
push
aam
cmc
gs
sbb
stc
mov
in
jecxz
fs
shll
fisubrl
and
or
xchg
and
or
sub
push
mov
jmp
outsb
add
push
fcmovnb
lods
push
adc
pushf
mov
mov
xchg
into
lret
add
push
cmp
push
push
mov
mov
and
mov
pop
clc
mov
hlt
sbb
xchg
clc
cmp
mov
and
testb
test
addr16
adc
fld
jle
bound
cmp
or
mov
xchg
adc
es
shlb
aas
xchg
push
mov
lds
mov
std
xchg
or
push
fisttpl
leave
jg
and
mov
cwtl
and
mov
fsubl
es
xchg
cmc
pop
sub
xor
or
mov
adc
popf
in
jbe
sbb
adc
or
inc
fnstsw
outsl
fwait
rdmsr
jmp
aam
push
imul
arpl
mov
or
loopne
mov
scas
xchg
or
movsb
jge
mov
push
dec
jge
bound
stos
popa
xor
cwtl
mov
mov
cmp
dec
popf
movsb
and
scas
mov
fcmovbe
loop
mov
loop
sbb
xchg
lods
fldenv
dec
dec
aad
inc
xchg
jecxz
aaa
mov
fsts
sahf
rolb
mov
adc
mov
je
adc
xchg
adc
sub
jne
es
push
pop
sub
push
adc
loopne
sub
hlt
mov
push
adc
incl
in
adc
or
stos
jo
cmp
shl
xchg
loopne
ret
popa
aas
sub
repnz
in
push
jmp
inc
aaa
and
push
in
lret
pop
hlt
inc
push
add
stos
dec
les
test
and
jbe
jle
cmc
and
xchg
lock
std
sbb
dec
push
pop
mov
adc
aad
mov
jmp
push
std
aad
movzbl
jl
mov
or
roll
or
sbb
loopne
and
ror
jmp
ficoms
jbe
dec
ret
popa
xor
xchg
aaa
movsl
xor
or
add
outsb
xlat
int
cmp
mov
adcl
pushf
and
push
pop
cmp
stos
pop
push
and
hlt
bound
add
and
stc
lock
mov
push
add
loopne
inc
sbb
and
adc
inc
push
call
notb
stos
mov
test
jecxz
outsb
pop
or
pop
rolb
dec
into
cmp
sti
ret
insb
inc
in
shr
push
outsl
inc
mov
mov
inc
lods
pop
jnp
imul
mov
mov
mov
push
gs
outsl
imul
cmpb
cmp
les
push
fwait
pop
pusha
add
fidivs
sbb
adc
pop
cltd
mov
test
jbe
xor
sub
jge
mulb
sbb
fsubr
int3
mov
int3
inc
scas
lahf
sub
mov
xchg
push
ja
aam
push
loope
pop
sub
cmc
jo
push
inc
and
mov
xchg
add
dec
jmp
inc
xchg
fcoms
imul
mov
fbstp
mov
cmp
pop
jg
sbb
clc
xor
inc
outsl
es
xchg
pslld
ljmp
fbld
jns
pushw
pop
push
in
and
sub
pop
xchg
dec
mov
lods
pop
mov
xor
iret
in
es
fisttps
jle
mov
stos
in
xor
insl
mov
xor
jns
int3
mov
ds
ljmp
xchg
pusha
inc
ds
add
ljmp
or
mov
outsl
mov
mov
adcb
xchg
push
push
push
out
and
jg
mov
xchg
dec
sub
push
je
mov
enter
test
cmp
adc
xchg
sarb
jmp
mov
jae
idivl
icebp
mov
pop
cltd
imul
ja
mov
shlb
xchg
mov
jae
addb
andl
repnz
outsl
xchg
sub
stos
lcall
ret
mov
sub
scas
movsl
bsr
fwait
mov
inc
test
repnz
mov
inc
data16
movl
sbb
lahf
pop
loop
pop
sbb
sub
mov
mov
in
and
insl
jp
rcrl
in
sbb
fistpl
cwtl
jbe
jle
or
or
xor
mov
aaa
dec
daa
lea
pop
push
mul
or
mov
dec
jp
ljmp
xor
xor
push
add
adc
ljmp
pushf
or
adc
xor
mov
lahf
lcall
or
mov
subl
mov
in
lahf
push
dec
fadds
add
shrl
mov
roll
popa
xor
mov
xor
outsl
rcl
push
add
rolb
xlat
jecxz
jae
gs
push
sbb
pop
push
inc
fs
jl
mov
in
sbb
mov
add
sbb
mov
sbb
mov
sub
xor
and
push
or
cmp
incl
sti
mov
mov
cltd
gs
or
cli
jecxz
sbb
jmp
mov
ret
into
add
in
mov
addr16
dec
pop
into
scas
xchg
jno
ret
loope
fmull
mov
mov
push
jne
ret
daa
imul
and
ds
rcr
enter
or
in
inc
jno
hlt
jne
push
das
fstpt
loope
test
mov
mov
and
push
lea
popf
or
in
loope
inc
fs
fnstenv
xor
mov
cmc
test
push
jne
cmp
ljmp
mov
std
test
bound
out
cmp
daa
filds
jo
jge
sub
loope
icebp
and
loope
fsubrl
mov
pop
out
or
in
cmp
cmp
xlat
mov
ds
jo
nop
sbb
jo
test
ficoms
mov
sahf
dec
outsb
js
add
mov
sub
push
inc
jp
mov
sub
jnp
jl
xor
ret
in
or
shrb
dec
xchg
into
or
insb
lock
pop
ficoml
in
push
xchg
lahf
sub
xchg
cmpl
leave
leave
jmp
inc
lret
lret
inc
idivl
mov
addb
mov
sbb
sub
mov
lods
outsb
ja
cwtl
push
aam
push
mov
test
xor
sahf
xchg
out
fwait
loopne
clc
xchg
loopne
out
cltd
mov
ficompl
ret
cmpsl
je
push
rorb
pop
psllw
add
addr16
push
push
xchg
ret
out
ljmp
xchg
lahf
aas
jle,pt
bound
pusha
sti
sbb
cmpsb
popf
outsl
lahf
jmp
mov
jg
cli
imul
outsb
add
adc
sarb
lods
rcrb
and
sti
out
int
xchg
and
out
mov
mov
js
cmpsb
cmp
sub
je
aam
daa
pushf
inc
sub
ds
mov
in
mov
xlat
fwait
pop
popa
adc
shll
inc
call
movsb
mov
fs
jo
in
inc
lds
jecxz
add
push
mov
subl
fcmovnb
push
mov
mov
add
cli
xchg
rcll
mov
rcll
and
out
pop
mov
push
rclb
sar
adc
push
dec
xor
push
stc
rolb
bts
jle
jmp
ja
fwait
mov
ret
lea
cmpsl
or
mov
test
clc
aad
out
push
fwait
xchg
jne
or
cld
push
loop
pop
rcrb
or
mov
jge
outsl
sub
pop
pop
xor
lods
fildl
out
in
lds
out
cmp
daa
xor
xor
popa
xor
test
push
sahf
sbb
add
addl
jnp
sti
xor
or
ss
pop
pushf
jp
into
notl
xor
lds
jbe
push
nop
frstor
mov
mov
pop
loopne
movsl
das
mov
dec
push
testb
xchg
xchg
fmul
adc
pop
icebp
ds
dec
mov
call
mov
or
fstpl
push
xor
aas
mov
mov
sub
inc
add
jnp
mov
cld
push
jecxz
push
dec
jbe
jge
xor
outsb
push
mov
add
jg
mov
and
add
in
mov
arpl
insb
sbb
mov
in
xor
or
pop
xlat
pop
aam
js
mov
xor
in
cmp
pop
pop
arpl
outsb
out
cmpsb
js
ret
mov
rol
push
cmpsb
xchg
fwait
mov
sahf
not
and
lods
fwait
aad
stos
hlt
cwtl
xchg
sub
cmpsb
fcomps
iret
icebp
pushw
shl
repz
jo
inc
pop
pop
enter
fsts
sar
lods
cmpsb
int3
adc
lret
cmp
push
lods
fdivrs
out
jle
dec
push
sub
inc
lret
aas
sub
mov
movsb
shrb
and
and
inc
dec
xchg
jno
mov
add
mov
push
lahf
pushf
imull
sbbl
inc
and
int3
sub
lcall
xorb
jae
imul
fdivl
lods
jmp
mov
adc
ret
xchg
imul
dec
std
sbb
lahf
adc
aas
fists
push
push
mov
fwait
inc
pop
les
cwtl
and
xor
cmp
sar
ss
dec
mov
es
arpl
inc
add
mov
inc
adc
dec
mov
test
sbb
inc
mov
xor
popf
scas
sub
ror
mov
aad
addl
push
adc
in
js
mov
mov
movsb
popa
repz
add
cmpsl
sub
dec
mov
push
push
int3
mov
pop
lods
jns
jp
aam
pop
xchg
iret
dec
imul
mov
push
call
dec
or
int3
leave
or
pop
pop
dec
mov
sbb
mov
push
bswap
mov
lahf
xchg
test
xlat
pop
mov
sbb
sub
inc
xchg
jp
push
mov
insl
add
ljmp
stos
ss
mov
ret
subl
pusha
inc
pop
stos
out
call
pop
mov
mov
insl
sub
push
jmp
inc
jbe
jl
test
cwtl
or
add
push
mov
cmc
pop
mov
ljmp
sbb
loopne
lahf
clc
loope
ljmp
dec
cmp
incl
jge
and
cmp
jg
andl
leave
es
loop
lret
test
imul
test
xor
adc
lods
or
adc
out
jp
push
adc
sbb
fsubrl
mul
enter
adc
mov
sub
sarb
aaa
cmpl
shrl
popl
stos
jmp
dec
in
or
cmc
hlt
cmc
out
fimuls
mov
cmp
mov
in
mov
faddl
lcall
add
sar
nop
pop
dec
ja
sub
popa
es
gs
dec
mov
xchg
mov
inc
fistl
push
jecxz
push
popf
aam
and
or
pop
arpl
arpl
jnp
dec
inc
les
pop
arpl
fidivs
push
lcall
outsl
jae
lds
idivl
fwait
xchg
adc
scas
cld
cmc
or
mov
push
pop
xlat
adc
mov
lds
mov
mov
fmul
jb
jecxz
add
in
outsl
ljmp
jb
mov
pop
repnz
ds
adc
or
sbb
mov
pop
pop
mov
lret
dec
cmp
in
pop
add
mov
insb
popa
in
test
popa
cltd
dec
in
imul
mov
rcll
and
sbb
outsl
stc
imul
push
push
jnp
negb
and
shlb
or
xor
pushf
mov
mov
stos
and
jge
mov
ljmp
pop
xorl
sub
inc
or
inc
xor
pushl
or
push
adc
data16
std
out
dec
scas
push
test
or
in
mov
xchg
je
imul
xchg
add
push
loope
xor
xchg
lods
mov
push
sbb
pop
repnz
sarb
imul
add
lahf
push
orb
add
push
or
or
outsb
rcl
shrl
pop
fistl
ret
cltd
xor
dec
mov
mov
cwtl
ret
mov
mov
movsb
daa
outsl
add
or
cmp
insl
lds
pop
cli
sub
or
adc
jecxz
out
and
cwtl
cli
out
ss
jnp
fistpll
mov
mov
sbb
sbb
addr16
rclb
gs
cltd
call
adc
mov
lods
dec
cli
xor
gs
mov
outsb
xchg
jno
loop
pop
fiaddl
sbb
lods
aad
dec
out
push
lret
subl
sub
andl
jmp
mov
jbe
enter
dec
push
test
shl
pushf
rorl
mov
dec
rorl
das
push
mov
pushf
inc
pop
aad
enter
mov
mov
rol
jb
push
adc
les
outsb
push
sub
sbb
loop
mov
add
sahf
pop
inc
push
lret
cmp
cld
scas
in
push
or
daa
xor
sbb
cmp
and
subl
jno
and
testl
fimull
mov
jl
aas
jmp
cmpb
out
lds
movsb
cli
aam
sub
cmp
imul
mov
pop
icebp
mov
push
and
xlat
jp
sbb
test
pushf
call
stos
mov
xchg
pushf
lock
cmp
rclb
cs
cmpsl
lea
jge
in
fwait
insl
sbb
mov
rorb
sti
shrb
xor
cmpsl
xchg
rol
xchg
fidivs
pop
je
push
stos
lcall
fildll
addr16
je
movsb
outsl
xchg
push
xchg
pop
xchg
xor
sub
sub
or
sahf
sub
mov
inc
xor
sahf
in
loop
cmp
pop
mov
movsl
out
gs
xchg
and
imul
dec
outsl
sbb
popf
lea
scas
xlat
inc
fucomp
shll
ret
hlt
pop
lea
loop
cmp
sub
xor
and
pop
lods
out
or
cmp
mov
rcrl
fs
out
ficoml
xchg
jecxz
fidivl
icebp
xor
cltd
movsl
int3
add
jmp
jno
inc
inc
xchg
dec
mov
in
cltd
jp
repz
pop
testb
and
repz
fdivrs
lret
leave
fidivs
aas
mov
mov
cwtl
mov
test
into
das
lahf
jg
bound
sbb
rcrl
dec
scas
inc
cmp
cmpb
adc
cmp
inc
pop
xchg
fsts
inc
fisubrl
cmc
pop
push
lcall
sbb
rclb
mov
dec
sub
dec
mov
into
sub
fcoms
inc
push
push
mov
mov
testb
fbld
iret
mov
xchg
int
jmp
dec
mov
cmc
or
sbbl
dec
in
sbb
repnz
scas
lcall
aas
mov
mov
and
pop
lds
xlat
popa
dec
push
lahf
rorl
rol
call
stos
xchg
jecxz
pop
jecxz
xchg
cwtl
jns
cmp
das
repz
jge
shrl
push
cmp
loope
popf
sub
and
xor
dec
mov
popa
shrb
inc
inc
lahf
in
loope
sub
in
jge
pusha
dec
inc
sub
sub
push
aaa
movsb
rorl
inc
or
scas
dec
xchg
mov
subb
sbb
or
adc
jmp
pop
mov
cmp
adc
jge,pt
and
sub
dec
and
shrb
ss
xor
and
pop
dec
pop
fsubrl
out
cld
movsl
out
mov
ds
insl
test
arpl
mov
add
add
aaa
loopne
sub
sbb
xchg
xchg
add
push
push
mov
dec
daa
mov
and
ss
fiadds
xchg
lods
inc
out
add
mov
xchg
aam
in
inc
mov
add
push
xlat
gs
mov
dec
xor
sub
cmpsl
lods
outsl
and
data16
push
push
aas
data16
pmaddwd
jle
sub
xor
and
or
cmp
inc
adc
test
adc
leave
arpl
insb
jae
push
lcall
mov
dec
add
pushf
ficoml
pop
or
pop
push
fcomip
jnp
mov
adc
sub
sbbl
mov
std
int3
sbb
cmp
fs
xor
scas
sbb
fs
dec
loope
mov
pop
dec
rol
popa
rol
repnz
cmp
out
into
push
sub
jnp
inc
lods
mov
pop
fs
jne
shll
stos
sbb
not
mov
lret
ja
js
or
add
into
cs
in
pushf
mov
iret
aam
cmp
fnop
pop
pop
fcoml
shr
scas
outsb
js
mov
and
scas
movsl
xchg
and
adc
push
mov
fistpl
and
popf
push
cmp
insb
jp
adc
jb
jae
enter
xchg
inc
mov
sbb
lods
frstor
repnz
sub
and
jbe
scas
sub
cmp
dec
sahf
pop
mov
icebp
inc
std
pushf
lcall
lock
adc
mov
int3
dec
popf
and
mov
jbe
fsubs
push
lds
test
adc
test
insb
xchg
push
mov
add
lods
outsb
fwait
repz
push
outsb
pop
out
int
mov
dec
inc
mov
cmp
add
iret
jae
sbb
fistl
mov
sub
mov
adc
and
jbe
lock
fadds
scas
cli
gs
test
push
push
inc
insb
idivb
stos
sbb
jae
lods
popa
lods
jge
push
pop
cmp
inc
adc
loope
xlat
jnp
iret
xchg
pop
lods
jmp
sub
addl
adc
add
ljmp
faddp
dec
sbb
xchg
cmp
xor
mov
lret
add
dec
in
add
in
sbb
xchg
mov
or
into
loopne
inc
xchg
shrl
aad
pop
push
xchg
add
ret
addr16
stos
fbstp
jns
cld
xchg
pop
dec
cmpsl
decb
outsl
sub
repz
inc
lea
mov
cmp
push
jnp
ffree
mov
mov
fwait
push
in
lcall
inc
shll
test
es
mov
das
jo
push
sbb
js
clc
in
out
fs
add
mov
xor
jnp
sarb
mov
jne
push
insb
push
mov
mov
or
xorl
adc
xchg
mov
insb
pop
pandn
push
mov
mov
fdiv
mov
inc
jp
stc
xchg
push
xchg
push
outsb
iret
aas
rcr
fidivrl
inc
or
push
fs
lret
pop
inc
dec
out
insl
fdivs
addb
sub
pop
push
cmp
cli
testl
int
mov
jno
nop
test
ljmp
leave
pop
fisubrs
and
jg
cltd
mov
inc
push
std
cmc
jo
test
add
cmp
lods
fistl
xchg
pop
out
adc
sbb
insb
iret
sub
repnz
xchg
cltd
test
stos
adcb
dec
idivb
outsl
rcrb
mov
lock
subl
in
adc
sbb
jmp
inc
or
mov
rcll
cmpsb
scas
pop
add
inc
or
push
fcomp
fcomi
stos
adc
adcb
push
addr16
sub
adcb
xor
lahf
adc
das
push
aam
sbb
pop
mov
lock
dec
jle
pop
sbbb
incl
enter
mov
push
mov
or
sbb
adc
push
imul
cld
fwait
lahf
dec
pushf
xor
push
mov
into
test
ja
pop
mov
aad
push
add
pop
xor
and
mov
xor
mov
test
mov
into
sub
sub
imul
sbb
mov
or
sub
cli
dec
mov
jle
xchg
xchg
sbb
popl
enter
dec
je
test
ss
mov
in
rorl
push
push
mov
fwait
popa
mov
jl
mov
dec
jmp
cmovl
mov
pop
dec
mov
repnz
repnz
dec
push
cmc
add
jecxz
push
js
mov
mov
ds
addr16
rcrb
out
push
push
mov
xchg
outsb
int
js
sbb
jb
movsb
dec
rorb
jl
out
fbstp
mov
dec
int
lret
nop
enter
add
cmp
rorl
loop
inc
cs
int
jg
sbb
pop
cmp
dec
out
xor
sti
sbb
aaa
addl
outsl
add
mov
jl
adc
mov
scas
mov
cmc
mov
pop
mov
mov
packuswb
jb
adc
in
mov
pop
shll
and
js
jno
fstps
add
pop
inc
jge
subl
fsubrp
ret
lcall
pop
pop
mov
outsl
jbe
sub
das
imul
xlat
lret
dec
push
std
sub
lods
or
ja
or
icebp
cmp
xchg
icebp
mov
sub
push
shl
lahf
adc
es
and
cmp
int
cld
inc
xor
in
hlt
mov
and
or
ds
xor
ret
fisttps
hlt
inc
mov
mov
jp
in
pushf
inc
mov
in
sarl
fwait
out
shr
int3
xor
popa
cld
shlb
or
lret
nop
mov
test
push
shlb
lret
dec
xchg
xchg
push
mov
fldt
sub
lahf
fwait
or
sub
xchg
sbbl
repnz
cmp
push
push
push
dec
cli
xor
sahf
bound
cltd
cmp
push
jmp
popf
out
add
cmc
jne
add
es
xchg
xlat
into
cltd
xlat
call
mov
fistpll
pop
inc
rolb
xchg
or
pop
aam
or
xchg
stos
dec
test
xchg
xchg
mov
shlb
inc
int3
inc
shlb
and
jmp
repz
scas
out
js
loope
int3
xchg
mov
mov
ljmp
jecxz
imul
inc
mov
movb
test
pop
lea
push
pusha
dec
repz
push
jne
dec
fdivl
insl
out
and
mov
mov
aas
and
dec
cltd
lock
mov
xchg
sbb
xchg
sbbb
sbb
and
cmpl
pop
data16
jne
inc
xchg
movsb
lods
je
mov
xchg
sbb
mov
xchg
shr
cmc
in
push
pop
adc
dec
fsubrl
lret
push
xchg
or
into
leave
rcrb
out
adcl
push
test
ss
sti
fdivrl
mov
jo
pop
add
add
and
into
into
shlb
ja
pop
shll
cmp
lahf
loopne
mov
sub
pop
shrb
add
cs
xor
mov
xchg
push
push
adc
xchg
mov
jg
jns
into
call
fstpl
outsl
pop
or
jb
enter
pop
ds
and
pop
adc
dec
adc
jl
mov
in
leave
negb
cmp
mov
test
pop
xor
inc
xchg
sub
lods
into
add
dec
mov
pop
adc
popf
cmp
jg
and
repnz
cwtl
rclb
repnz
xor
push
cmp
loopne
int
andl
and
rol
jo
add
mov
int3
adc
cmp
sbb
mov
and
lods
imul
fstps
xchg
out
adc
xor
cmp
pop
loope
test
cmc
xchg
push
cmpsb
outsl
das
cmpsl
dec
lea
in
push
pop
addb
sarl
js
out
sub
mov
add
fmuls
ja
imul
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
lods
mov
xor
pop
sbb
js
jnp
lods
sub
adc
pop
adc
sarb
add
adc
cmpsl
loop
xor
mov
adc
push
jg
sub
jbe
xchg
js
js
adc
jg
jnp
adc
nop
aaa
pop
clc
pop
cmpsb
mov
mov
std
stc
jne
cmc
andb
cmp
jl
and
push
frstor
fildl
xchg
mov
and
les
jnp
fistps
jns
aam
pop
adc
push
loope
sbb
pop
mov
jns
imul
jne
sub
mov
xchg
xchg
std
dec
js
call
inc
push
and
cld
add
lods
lods
mov
sbb
xchg
gs
out
inc
mov
pop
loopne
push
ret
nop
sub
sbbb
pop
add
add
lret
sbb
dec
inc
movsb
pop
push
lds
push
loope
std
push
and
jecxz
lea
popa
sub
jmp
jp
test
test
jno
xchg
mov
ljmp
es
daa
mov
fbstp
outsl
sbbl
and
jae
xor
add
push
and
jo
cs
pop
test
sti
xor
lods
xor
cs
lret
aad
sgdtl
pop
xor
push
inc
aad
push
add
mov
xchg
mov
test
out
leave
test
out
cmpb
mov
mov
sub
rorb
add
fcomps
push
push
cmpsb
mov
imul
adc
ftst
stos
mov
jmp
cld
mov
cld
sbb
out
out
cwtl
pop
push
fists
jp
jle
and
jg
lea
movsl
push
test
and
pop
adc
push
push
sbb
sub
or
mov
lahf
pusha
sbb
out
hlt
push
inc
lock
fldl
add
pop
mov
pop
lret
mov
and
inc
mov
xor
push
lcall
pusha
fisubl
sub
push
xchg
add
lods
lcall
in
psubq
sub
mov
sahf
lods
inc
lds
mov
add
fstl
jecxz
push
or
mov
mov
pop
xor
loope
fadds
add
or
mov
mov
dec
xchg
pop
aad
or
ds
mov
pop
in
xor
push
ficoms
nop
sub
lds
subb
push
pusha
inc
pop
push
scas
in
das
add
negl
adc
pushf
enter
outsb
mov
leave
cmp
push
fistpl
pop
repz
aas
loope
jb
cmpsb
jb
ror
mov
and
scas
test
arpl
xchg
jecxz
dec
int3
fdivrl
or
clc
aas
scas
loop
jle
sub
ret
addr16
xchg
fcomps
mov
xlat
out
mulb
jno
mov
nop
shrb
mov
cmp
or
imul
test
in
fcoml
fsubr
rclb
cmp
call
das
not
testl
mov
out
sbb
cld
push
pop
mov
outsb
mov
mov
xor
push
out
add
jae
mov
cltd
fs
mov
out
lcall
fprem1
in
test
test
dec
and
fimuls
mov
fpatan
sub
sar
pop
out
out
push
jb
mov
sbb
dec
adc
sbb
jecxz
inc
add
sbb
mov
test
aaa
pop
pop
xor
xor
pop
push
lods
adc
or
xor
fcomip
adc
xor
jmp
lcall
xlat
adc
mov
stos
or
push
sub
mov
or
rolb
in
ds
test
cvtdq2ps
mov
pop
stos
mov
pop
xchg
test
xor
push
sub
push
add
pusha
cwtl
inc
sub
mov
pusha
sti
mov
xchg
lahf
scas
adc
cltd
mov
cmp
test
pop
mov
add
xchg
push
sub
cmp
dec
and
xchg
lds
insb
jecxz
add
mulb
lods
push
xchg
and
out
rorl
cmpsb
jg
imul
std
insl
cmpsb
out
movsl
insb
jo
mov
or
sbb
ljmp
mov
mov
mov
sbb
push
mov
lret
dec
adc
fisubs
push
lods
mov
xor
jle
insb
jnp
out
sub
movsb
popa
pushf
cmpsb
sub
or
mov
fimull
or
push
mov
lret
cmpsb
adc
or
jp
and
add
enter
popa
sbb
mov
fidivrl
nop
jno
xor
das
addb
push
scas
addr16
pop
ss
push
inc
test
lret
cmp
mov
addl
adc
movsl
adc
or
je
movb
imul
mov
stc
sbb
out
fildll
hlt
jmp
lret
scas
loope
shrl
xor
repz
push
dec
mov
pop
sub
mov
das
add
xor
cli
arpl
leave
push
jmp
movsl
rcl
lret
cmp
cmp
and
insl
cwtl
adc
mov
mov
clc
enter
outsl
arpl
push
cmpsl
leavew
xchg
add
add
int
jb
push
mov
les
adc
shll
cmp
fstpt
out
in
inc
jnp
enter
adc
cmc
ret
iret
xor
nop
outsl
sti
push
push
mov
addr16
jg
jae
fiaddl
cld
push
rolb
das
push
xchg
mov
pop
call
shrl
and
jge
les
lret
mov
popf
aaa
cltd
cltd
shlb
pop
push
mov
pop
or
mov
notrack
fcoms
sti
sarb
clc
dec
cmp
pop
fucomp
aam
dec
sbb
aad
cmpsb
out
test
fsubs
mov
addr16
lods
fadds
aad
inc
xor
jmp
or
repz
xor
das
in
enter
mov
mov
outsl
inc
add
shll
or
andb
jb
in
inc
aaa
jmp
dec
repnz
not
ds
mov
or
stos
xor
fildl
mov
imul
mov
push
fisubrl
cmc
iret
sub
cmpsl
shlb
int3
les
outsb
mov
inc
jp
xor
icebp
or
aad
daa
mov
inc
shl
sub
inc
mov
cmc
mov
push
movsl
ljmp
icebp
mov
push
jno
fisttpl
js
cmpsl
jno
sub
xlat
dec
stc
mov
cmp
sbb
xchg
mov
cmp
sub
jl
mov
jbe
lock
push
stos
ljmp
testl
inc
xor
fldt
adc
lods
in
adcl
daa
mov
pop
xlat
mov
cwtl
nop
or
ficompl
mov
dec
cmp
and
jecxz
xchg
scas
test
pop
ret
mov
sbb
sbb
xor
repnz
ljmp
imul
mov
mov
jae
dec
movb
fidivrl
aad
jo
push
repnz
pop
jo
sahf
sti
std
ljmp
dec
sbbl
xor
mov
cmc
stc
push
and
and
jg
data16
cmp
xor
les
gs
xchg
ffreep
push
movsb
push
inc
xchg
lock
gs
push
in
adc
test
adc
xor
jbe
mov
std
cs
mov
enter
test
inc
aaa
xor
and
in
fimuls
add
mov
and
fidivrl
test
movsb
test
inc
mov
inc
out
popa
xchg
popf
fisttpl
xor
in
or
push
xchg
div
ja
pop
je
scas
xchg
out
ja
outsb
outsb
rcrl
adc
jo
xchg
sub
mov
lods
pushf
push
stc
mov
push
imul
mov
sub
jno
add
outsb
push
xor
add
incl
mov
cwtl
or
dec
push
mov
cwtl
inc
insb
mov
dec
push
xor
push
int
pushf
jae
mov
dec
movsl
jbe
mov
ss
dec
jmp
inc
and
add
pop
cmp
add
add
adc
sub
test
rol
mov
popa
in
xchg
dec
pop
andb
out
mov
push
shll
cmp
adc
ss
add
nop
cmp
imul
icebp
imul
fstpl
out
ds
mov
loop
adc
jge
or
ja
mov
cld
fwait
pop
std
iret
in
sub
das
jp
jg
orl
movsb
inc
cli
dec
ja
push
fisubrs
cli
je
sbb
jb
push
mov
mov
hlt
ds
xchg
dec
int3
dec
pop
aam
cmp
bound
bswap
dec
add
sar
sub
popf
mov
bound
loop
popa
call
enter
fiadds
jnp
sarl
mov
xchg
inc
pop
aas
mov
into
push
test
enter
xor
mov
fidivs
outsl
add
cmpsl
popa
sarl
js
xchg
or
inc
inc
test
xchg
mov
cmc
es
jmp
popa
adc
cli
sub
dec
out
xchg
cmp
inc
add
popf
addr16
fsubl
and
adc
cmp
pop
mov
testb
mov
cmp
lea
push
out
adc
mov
dec
add
out
loop
sbb
xor
popa
inc
int
pop
jp
mov
add
or
icebp
pop
pop
dec
and
pop
jle
dec
cmp
cld
and
xor
ljmp
test
mov
jb
pop
fstpt
out
xor
les
out
repnz
or
cmp
adc
ds
stos
push
pop
inc
jle
sub
pushf
inc
addps
xor
xchg
push
nop
call
adc
inc
push
sbb
and
and
fimuls
dec
dec
fnstenv
test
lea
int
clc
and
sbb
addl
cmp
xor
insl
sub
clc
fxtract
ss
or
xchg
lods
jae
addr16
mov
cmp
dec
imul
ror
adc
push
sbb
loopne
and
repz
daa
bound
cmp
fcompp
js
mov
jns
inc
out
mov
stos
pop
scas
pop
push
daa
and
repz
cmp
loop
lahf
xchg
popf
add
into
adcl
push
xor
mov
sub
int
stc
sbb
subl
jp
lcall
imul
mov
push
xor
jge
add
ficoml
rolb
test
cmp
imul
test
add
jmp
movsl
xor
xchg
adc
sbb
pop
jle
dec
stc
inc
add
adc
rol
jo
sbb
ror
jne
lods
shlb
pop
xchg
enter
outsl
int
inc
xor
jb
dec
std
les
ret
hlt
je
pop
lds
in
lock
sahf
push
push
cmp
aas
mov
jae
and
sub
adc
jge
push
outsl
pushf
hlt
jge
aad
movsl
lds
sub
movsb
inc
jne
push
shlb
outsb
outsl
and
pushf
jae
scas
pop
dec
push
xor
jp
divl
adc
dec
pop
pop
aas
push
jl
mov
lcall
aad
jbe
ljmp
addr16
out
shrl
push
divb
xchg
mov
lods
adc
ficoms
jge
jns
push
addr16
and
sbb
cltd
out
dec
lds
push
sub
sbb
xor
lds
fsubrl
push
cmpsb
pop
jle
icebp
jbe
stos
sub
insb
dec
or
sbb
pop
xchg
std
stos
xor
push
xchg
sbb
mov
dec
mov
hlt
sarb
hlt
pusha
out
stos
push
icebp
jp
xor
mov
fstpl
es
imul
leave
fucomi
ljmp
mov
jae
inc
and
dec
mov
xchg
xchg
pop
lds
xchg
mov
pop
rorl
add
or
stos
jb
and
mov
cld
lods
popa
in
sbbb
xchg
fdivrs
lods
fbld
inc
insb
je
scas
jb
or
xchg
and
add
js
add
iret
movl
mov
jno
lods
pop
cld
sub
dec
push
arpl
add
and
lret
addr16
repnz
or
ficoml
les
pop
andl
mov
lods
mov
mov
mov
stc
xor
shr
notb
testl
fsin
ret
jno
xor
mov
inc
add
add
mov
xchg
or
je
leave
fcmove
loope
pop
enter
dec
cltd
push
out
jl
inc
repnz
xchg
sub
out
ss
mov
orl
jae
inc
mov
xlat
mov
test
push
dec
mov
cwtl
jnp
lret
mov
jnp
pusha
lret
in
mov
repnz
sub
cmpsl
and
add
int
aad
je
mov
int
cmp
dec
pop
cltd
push
es
div
mov
scas
or
jg
mov
cmpsb
mov
std
orl
inc
mov
mov
bound
mov
iret
mov
shlb
test
faddl
adc
mov
cmp
dec
stc
mov
push
test
sbb
out
xchg
xchg
pop
jne
or
inc
mov
cmp
xchg
xchg
dec
jle
and
jne
xchg
mov
orl
out
adc
fisttps
push
or
jp
stos
sub
add
cltd
xor
mov
dec
cmp
xor
sub
sbb
cmpl
jbe
mov
leave
mov
bound
or
dec
fs
out
dec
sbb
jae
and
mov
sub
shr
mov
lret
jno
stos
andb
jns
mull
aaa
test
push
cmpsb
sbbb
jecxz
jnp
ret
jecxz
rol
mov
cmpsb
pusha
loop
mov
inc
addr16
push
aad
fs
pushf
or
data16
push
mov
mov
mov
xchg
sarb
pop
mov
sti
xchg
mov
mov
cmp
adc
push
iret
fcomp
cmp
shrb
outsb
sti
aaa
dec
loop
add
and
mov
pop
jno
ret
and
movl
enter
sub
test
out
inc
dec
mov
mov
mov
add
loope
dec
push
and
mov
xlat
lock
out
sub
fnstcw
pop
sbb
std
loop
subb
push
test
es
mov
pushf
jno
call
push
movb
jne
aad
ret
shlb
or
jg
sbb
jmp
sub
out
sbb
inc
push
repz
mov
dec
sub
ja
adc
stc
adc
lcall
mov
add
xchg
dec
mov
ret
sbb
cld
ret
cld
mov
faddl
call
or
stc
or
sub
pop
inc
push
test
cmpsl
aas
repnz
jle
and
jmp
in
sarb
aas
scas
clc
xchg
test
call
or
jge
ror
and
pop
rcl
les
repz
call
sarb
lds
xchg
mov
cltd
popa
push
adc
sub
rol
js
pop
push
jecxz
mull
stos
dec
mov
jne
ja
add
imul
pop
adc
stos
sbb
cmp
imul
lods
inc
jne
mov
or
repnz
xlat
cmp
mov
movb
repnz
mov
leave
add
pop
mov
out
jle
arpl
lahf
jbe
ds
inc
and
mov
mov
arpl
das
sub
jg
mov
mov
or
lahf
leave
sbb
add
sub
cmp
inc
movsb
pop
xor
fdivrl
ret
pop
mov
xor
and
mov
or
xor
jge
lods
xchg
add
out
daa
arpl
fstp
pop
fistl
xor
cltd
out
adc
lock
sti
out
and
sub
or
popa
cwtl
cmpsb
push
out
icebp
xchg
mov
xchg
push
loope
jmp
aaa
cwtl
add
test
xchg
ret
sbb
in
lods
pop
ss
cmp
add
out
nop
dec
inc
add
mov
xchg
pop
popa
xchg
divl
pop
cmp
push
loop
lea
jg
fxtract
push
xchg
inc
je
mov
mov
mov
inc
dec
test
pop
ficoml
out
pop
mov
dec
fs
cmp
fsubrl
incl
pop
inc
sub
inc
mov
mov
mov
cmp
push
sub
pop
jecxz
and
push
in
jmp
dec
arpl
dec
push
xchg
pop
sub
mov
inc
sub
loopne
cmc
outsb
inc
leave
test
push
xchg
je
mov
xchg
mov
or
insl
fldenv
mov
sub
xchg
sbb
insb
movl
adc
rolb
out
cmpsl
out
sahf
xchg
and
sti
xchg
outsb
fwait
mov
mov
cmp
pop
push
out
rol
loope
in
int3
cltd
das
sbb
jge
jno
fs
pusha
push
loopne
fsubs
mov
push
and
xor
xor
or
jae
jne
pop
ret
and
fs
sti
ds
push
mov
xor
pop
dec
pop
xchg
js
mov
outsl
scas
ljmp
icebp
and
gs
adc
pop
daa
dec
outsb
and
add
push
inc
sbb
cmp
mov
sbb
mov
and
stos
cmp
mov
loope
ret
into
out
push
ss
dec
rcrl
sbb
ja
pop
mov
mov
arpl
cmc
test
ljmp
inc
and
in
call
cmp
pop
push
ljmp
js
lcall
pop
adc
push
outsb
sbb
incb
xor
pop
mov
sti
adc
testb
push
xor
lea
mov
pop
sbb
call
mov
add
jnp
ret
pop
out
pop
bound
notb
popa
pop
inc
sub
aaa
mov
pop
add
fsubl
dec
mov
aam
mov
fists
imul
mov
sub
and
and
lds
insb
sbbl
fsubrs
adc
lock
icebp
hlt
subl
out
pop
sbb
pop
or
rclb
mov
jmp
fimull
clc
adcb
repnz
cmp
imul
push
or
clc
popf
movsb
out
mov
pop
dec
andb
mov
mov
or
push
sub
xor
jecxz
cmp
scas
sub
sbb
lcall
pushf
inc
aas
xchg
sarl
add
mov
pushf
out
arpl
iret
stc
pushl
sub
rol
stos
out
xlat
ss
cmp
mov
jbe
jne
and
insl
inc
push
nop
adc
sbb
nop
out
je,pn
lea
pop
mov
loope
enter
shll
ljmp
xchg
mov
mov
iret
add
jns
ja
pop
popf
loopne
sbb
stc
lret
cmpsl
rolb
aaa
into
mov
mov
ficoml
addr16
xor
push
popf
ffreep
and
sbb
push
dec
rolb
jb
pushf
or
adc
bound
push
jp
std
lock
mov
cld
aas
mov
sbb
cltd
or
pop
adc
test
push
sub
add
cmpl
int3
xchg
inc
stos
into
dec
out
cli
inc
lea
ficomps
mov
xor
cmp
dec
adc
mov
test
xchg
outsb
sbb
subl
aaa
das
sti
ret
stos
sbb
je
cltd
mov
push
mov
cmp
push
icebp
lock
push
jo
ftst
push
jne
mov
xor
lods
jb
push
repz
ljmp
mov
in
lock
maskmovq
negl
orb
lods
stc
pop
jb
dec
and
push
hlt
push
jmp
mov
scas
or
mov
repnz
cmpsb
jmp
mov
leave
mov
push
jmp
mov
mov
popf
pop
pop
sub
cwtl
xchg
mov
pop
mov
jge
add
cmp
dec
sbb
xor
adc
and
jb
cli
dec
lcall
sbbl
dec
idiv
xchg
in
jecxz
sub
push
mulb
push
adc
stos
fwait
scas
mov
cmp
pop
push
xor
dec
jns,pt
mov
inc
mov
es
out
and
jp
xchg
cmp
out
lock
sbb
stos
or
cli
push
sub
arpl
mov
xor
push
nop
pop
pop
idiv
jmp
jp
mov
in
mov
cld
xchg
push
jae
pop
xchg
inc
xor
das
jae
dec
jnp
lahf
mov
aad
push
fcmovbe
xchg
popf
adc
into
inc
mov
mov
mov
movsb
test
cwtl
inc
sbb
fcmovnu
sti
push
sti
push
fdivs
and
sbb
jp
sbb
jb
insl
jae
pop
pop
lds
stos
mov
sub
popf
roll
bound
dec
imul
xchg
add
and
daa
jg
mov
jo
cwtl
dec
ds
jp
loop
sbbl
adc
fdivs
data16
push
stc
cltd
cmc
mov
arpl
mov
push
pop
pop
pop
push
in
cmp
mov
jno
lods
loop
jb
dec
lret
sbb
jae
inc
inc
add
test
fstpt
cli
sti
popf
icebp
add
insl
and
jl
mov
xlat
test
push
dec
scas
cmpb
cmc
inc
xor
sbb
dec
call
mov
fisttpll
or
aam
push
fwait
and
xchg
std
dec
xor
mov
mov
mov
cmp
int3
clc
adc
sub
sbb
xchg
cmp
inc
mov
imul
lods
pop
pop
and
mov
ljmp
dec
pop
mov
call
xor
jne
ljmp
les
mov
popa
imul
xlat
mov
inc
ret
daa
and
jno
imul
pop
stos
cmc
or
push
popa
paddq
repz
dec
mull
out
cmc
addb
mov
fs
das
test
out
add
xchg
ja
rcr
mov
sahf
fwait
sti
stos
mov
fidivs
push
pop
pop
sbb
scas
into
and
loope
and
xor
or
sub
ja
cmp
hlt
inc
mov
mov
fs
pop
and
inc
test
or
jmp
fdivrl
mov
das
mov
std
mov
mov
ljmp
push
pop
jmp
xchg
shll
stos
notrack
pop
xchg
cmpsl
mov
mov
push
inc
or
or
fimull
push
sub
lea
test
cmp
push
idivb
test
pop
push
fsubr
hlt
ds
mov
cli
jp
out
stc
ret
test
rol
leave
inc
xchg
lcall
dec
xchg
inc
loopne
adc
xchg
jecxz
fwait
sub
shll
pop
loop
jae
mov
popa
sbb
pop
pop
aam
insl
sbb
loop
cltd
inc
test
lcall
imull
ss
rorb
mov
xchg
imul
inc
in
xchg
std
jl
inc
in
jle
sahf
ljmp
jmp
int
dec
fsubrp
pop
fs
jmp
adc
and
insl
sbb
mov
ja
mov
popf
push
inc
sahf
cwtl
stc
sub
cli
subl
mov
push
test
lock
push
sbb
and
mov
mov
pop
inc
out
push
popf
lcall
lods
shl
mov
push
fwait
je
dec
popf
dec
jl,pt
ss
push
aas
fs
fimuls
nop
in
divl
inc
mov
sarl
rcll
and
cmp
xlat
or
fdivr
es
cmp
jno
in
pop
out
mov
mov
and
jbe
stos
jp
push
sbb
sti
xchg
xlat
mov
scas
cmp
es
roll
xchg
adc
or
jb
inc
aas
loope
mov
jle
mov
lret
repnz
mov
or
mov
pushf
mov
dec
xchg
hlt
clc
mov
jmp
or
and
fwait
or
mov
lock
inc
push
push
out
cmp
icebp
jns
mov
jle
orb
je
test
aas
pop
push
ljmp
mov
inc
rorb
push
cmp
inc
out
xchg
inc
arpl
inc
test
cld
ja
scas
pop
sbb
loop
add
lret
jae
imul
inc
out
outsl
out
fwait
stos
popf
std
inc
test
cwtl
push
adc
fsubp
ljmp
sbb
adc
pop
mov
dec
mov
test
repz
xlat
xor
xchg
insl
out
js
xchg
jns
push
adc
xchg
mov
mov
bound
sub
es
push
clc
cwtl
lret
adc
inc
xor
mov
gs
in
subl
xor
loope
fwait
aas
sub
and
test
mov
xor
push
and
dec
lods
push
divb
cli
rorl
fs
cmp
insb
jg
pop
es
gs
pop
jg
cmpb
add
mov
push
sarb
test
lods
pop
mov
fidivs
icebp
outsb
pushf
lahf
movsb
test
mov
mov
les
pop
clc
xchg
push
or
dec
mov
leave
fs
popa
cld
andb
dec
cltd
xchg
fs
push
mov
xlat
pop
andb
and
loopne
dec
insl
out
insb
adc
dec
je
call
fisttps
fs
mov
out
xchg
subl
aad
rclb
call
subl
lahf
cs
cmpsl
shll
out
repnz
pop
cmpsb
sub
scas
or
cmp
out
dec
mov
insl
or
mov
insb
addr16
xchg
mov
fcoml
pop
xchg
dec
xchg
cmp
fistl
stc
jmp
add
fwait
xchg
sbb
repz
imull
mov
lock
jb
inc
push
out
ja
mov
in
jns
out
push
mov
push
nop
cmp
scas
pop
out
leave
cmp
dec
jns
jg
lods
or
lods
and
testl
stos
mov
push
or
divps
push
add
mov
movsb
sbb
loopne,pn
mov
adcb
jb
gs
pop
add
hlt
imul
into
sahf
lock
out
cwtl
jb
dec
jnp
inc
cmp
mov
cmp
cli
call
cmc
orl
sti
jo
ret
adc
popa
adc
addb
mov
sbb
push
jno
cmp
adc
pop
push
iret
mov
cli
fisubs
mov
adc
roll
mov
mov
or
jl
movsb
arpl
sub
fsubrl
pop
pop
rcrl
pop
dec
call
int
and
push
stos
push
xor
cmpsb
fldl
ja
loopne
shlb
jae
movsl
pop
hlt
inc
fnsave
inc
pusha
imul
invlpg
jg
add
fldenv
push
add
sahf
inc
cli
sub
das
adc
out
movzwl
jle
sbb
mov
xor
fwait
xchg
test
inc
and
add
mov
push
pop
and
dec
sbb
push
jne
lret
or
pop
xchg
and
and
cltd
iret
mov
mov
pop
fs
mov
add
fldcw
inc
sub
dec
mov
and
push
pop
and
shlb
in
stc
mov
stos
fildll
jp
inc
or
lret
inc
inc
testl
rcrl
push
and
test
dec
inc
sbb
mov
sti
fbstp
pusha
in
int3
jb
sahf
pop
mov
pop
sub
xor
cmp
sub
psraw
sbb
hlt
in
inc
dec
loope
aas
shlb
sbb
popa
sbb
lret
inc
inc
xor
sub
imul
jl
clc
outsl
pop
mov
xor
mov
int
adc
jnp
icebp
xor
xchg
push
cltd
mov
inc
fadd
lea
das
pop
cmp
or
aad
mov
push
dec
imul
sbb
aaa
inc
test
mov
or
stos
push
in
mov
and
push
xchg
repz
pop
inc
sti
cld
add
sbb
pop
fwait
stos
addr16
arpl
gs
je
pop
mov
imul
push
pusha
pusha
mov
inc
cmc
dec
cmpsl
ss
push
lods
lds
leave
jno
das
xorb
lahf
sub
bound
out
push
test
mov
and
mov
fiaddl
mov
dec
enter
sbb
jbe
lods
in
and
jne
mov
fsubrs
cs
das
jbe
push
cmpsb
int3
push
into
dec
pop
arpl
out
inc
jge,pt
call
and
mov
mov
into
aaa
pushl
inc
int3
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
jmp
inc
mov
aaa
cwtl
arpl
push
imul
lds
adc
adc
js
push
call
lret
lcall
aad
jnp
lret
sbb
mov
into
jecxz
mov
sbb
mov
loop
je
xor
cltd
mov
imul
sub
daa
push
ds
sub
or
mov
adc
decl
insb
sub
push
sbb
shl
sub
je
xchg
lock
pop
sub
ja
dec
and
cmp
add
test
sub
sub
sub
mov
pushl
push
lds
push
mov
out
sub
cmp
arpl
dec
cmp
jecxz
push
out
pusha
rol
ficoml
iret
sbb
push
repnz
mov
mov
sbb
dec
bound
xchg
pop
cmp
loope
dec
jg
mov
subl
fcomip
ret
out
into
dec
pusha
and
pop
dec
in
mov
inc
je
pop
fisubl
inc
or
lcall
push
stc
xchg
add
or
hlt
das
enter
lods
cmp
sbb
sbb
mov
xchg
outsb
lret
js
rcrb
into
stos
out
adc
mov
jg
or
push
jmp
les
mov
pop
cmpsb
stos
lcall
loopne
add
add
mov
les
mov
mov
push
mov
fwait
out
sub
xlat
ljmp
mov
push
into
insb
mov
ja
loopne
clc
es
test
ja
cld
or
ror
ja
or
cmpsb
mov
xor
xor
mov
dec
inc
xchg
and
mov
xchg
in
sub
mov
push
clc
stos
xor
xchg
dec
lods
fwait
xlat
mov
add
xchg
icebp
out
mov
addr16
daa
fwait
sub
dec
shlb
cmc
mov
fistpl
pushf
dec
adc
sub
or
adc
insb
sub
test
mov
jo
into
movsl
or
mov
dec
sub
repz
imul
adc
mov
mov
adc
sbb
jb
dec
cmp
and
push
mov
jo
dec
sub
das
cmpsl
mov
out
push
mov
dec
rorb
sbb
lret
jmp
repz
loope
bound
pop
lret
loope
dec
add
inc
bound
mov
scas
mov
cmpsb
xor
movsl
push
jo
lret
in
and
push
inc
push
mov
sbbl
mov
jno
pop
mov
outsb
sub
cmp
sahf
jns
cwtl
gs
or
iret
ja
movsb
xchg
inc
add
enter
mov
jp
shll
cmp
mov
xchg
pop
mov
fmull
imul
adc
adcl
cwtl
jge
stc
pop
dec
xor
mov
sub
outsb
int3
inc
repnz
in
ret
pop
sarl
imul
push
push
in
xor
pop
enter
mov
or
rcl
sbb
cs
dec
mov
mov
cmp
imul
scas
mov
add
iret
iret
and
pop
sbb
scas
andb
jbe
call
test
comiss
pop
into
cmc
pop
or
and
mov
jns
or
bound
cs
lcall
lret
pop
add
rol
outsl
inc
inc
icebp
stos
in
xchg
add
add
test
dec
mov
adc
lea
dec
cli
sbb
sub
fisubrl
inc
lods
int3
jmp
mov
ficompl
fidivs
push
fucomi
inc
outsb
pcmpeqd
jns
xlat
add
sub
cmp
lret
mov
gs
sub
jae
lret
or
lds
outsl
sub
sahf
loope
cmp
andl
mov
hlt
mov
xchg
repnz
or
rcrb
jae
movsb
leave
addl
inc
aaa
adc
divb
xchg
mov
xchg
mov
test
add
jo
mov
or
xchg
jg
les
sub
mov
jecxz
stos
xor
loope
aad
lods
paddw
cmp
stc
stos
jl
roll
movsb
fldl
int3
pop
sub
cld
mov
pushf
xchg
adc
hlt
jecxz
into
or
repz
pop
in
xor
les
dec
jecxz
sbb
adc
xor
push
xor
int
inc
xchg
mov
pop
cmp
xchg
test
and
in
lret
xor
mov
push
icebp
push
pop
mov
loopne
loopne,pn
xchg
dec
lods
jle
sub
lahf
cmpsl
or
and
adc
cmp
lret
dec
xor
xchg
mov
xchg
pop
inc
sub
into
xor
out
jnp
pop
cmpsb
xchg
sbb
jecxz
mov
mov
outsb
enter
or
mov
inc
pop
dec
jb
cmp
call
in
mov
out
jl
or
and
sbb
inc
mov
and
ds
push
aam
mov
leave
sbb
sub
inc
arpl
mov
mov
jmp
xchg
in
cwtl
push
xchg
cmp
mov
mov
mull
mov
inc
sub
int3
stos
fnstsw
or
dec
sbb
lret
push
dec
adc
jno
dec
test
mov
mov
push
data16
lret
std
xchg
les
sbb
jecxz
subb
or
insl
je
xor
push
lock
push
testb
adc
scas
sarb
in
pop
push
inc
daa
flds
inc
cmp
test
lods
inc
js
jae
mov
add
testb
in
nop
cwtl
cmp
test
jne
addr16
stos
pop
mov
sbb
insb
scas
int
mov
in
aas
fwait
inc
loope
mov
fdiv
mov
leave
popa
pop
fwait
cmp
repz
lret
dec
mov
cmc
icebp
xlat
mov
and
jl
mov
mov
daa
push
pop
and
leave
inc
es
loop
and
mov
cmpsb
jle
cwtl
xor
fdivr
ror
xchg
stos
loop
cltd
pop
push
pusha
mov
jne
mov
cmpsl
pop
push
pop
dec
inc
cmp
jmp
sahf
rorb
daa
repnz
lods
pop
testb
cmc
andl
int
lods
ss
std
jmp
sub
jg
enter
into
mov
dec
not
dec
push
mov
mov
pop
mov
mov
imull
inc
cs
pop
cmp
daa
xchg
xchg
xchg
std
stc
int
test
ret
leave
int3
sub
call
sbb
movsl
lock
btc
push
sbb
fwait
pop
push
dec
sub
shlb
sbb
mov
cwtl
xchg
mov
dec
call
clc
clc
incl
jg
cmc
ss
or
sti
inc
divb
cmp
inc
xchg
push
test
pop
xchg
push
push
push
jno
jne
xchg
out
out
mov
fs
scas
xchg
cwtl
test
daa
sahf
lcall
jb
fbld
xchg
push
lea
mov
shll
dec
jbe
pop
mov
mov
pusha
xchg
ret
aam
mov
cmp
ds
mov
lods
mov
test
in
iret
inc
aaa
daa
outsb
mov
mov
popa
dec
hlt
mov
sub
cmc
inc
fsubrl
sbb
scas
dec
pop
loope
sbb
xchg
mov
rcrb
sub
int3
into
cmc
inc
mov
mov
xor
fnsave
jg
push
sub
push
fstpt
and
xor
add
addr16
jmp
push
jb
mov
lret
jo
fisttps
movsb
jle
arpl
lods
stos
jle
push
in
xchg
jge
push
mov
aad
stos
xor
outsl
inc
inc
scas
rorb
mov
dec
adc
pop
jle
dec
sub
mov
scas
cmpsl
out
or
add
movsl
mov
scas
pop
push
mov
push
scas
lea
mov
sahf
mov
movsl
subpd
cmp
add
mov
pop
mov
push
mov
roll
jp
sbb
push
popf
dec
out
leave
das
fsubrs
or
dec
xor
out
mov
xchg
fstpl
lcall
test
push
movsl
lcall
lcall
push
stos
adc
inc
ljmp
xchg
jle
ja
sub
pop
xchg
popa
addr16
lcall
icebp
xchg
jae
xchg
and
fcoml
push
nop
and
ljmp
dec
jge
sarl
mov
pop
cmp
imul
pop
push
ret
test
xchg
sarb
leave
cmpsb
je
dec
push
cmp
repnz
in
mov
dec
pop
add
mov
mov
je
pop
fwait
loopne
aaa
icebp
fstl
rorb
in
mov
xchg
lea
lret
mov
adc
jo
fists
jns
jmp
xchg
fidivrs
pop
mov
stos
push
rcl
fidivl
rorl
cmp
push
mov
sub
insl
lcall
in
sti
cmp
test
mov
add
xor
addr16
aas
xor
scas
popf
std
out
cs
iret
push
ret
sti
or
dec
cmc
and
sub
adc
stc
inc
add
lods
xchg
test
xlat
inc
mulb
outsl
add
int3
push
cmp
mov
lods
popf
jge
lds
or
fcmovnu
push
mov
xchg
adc
dec
lods
cltd
dec
push
fcoml
cmp
and
inc
jmp
jp
or
pop
ret
insl
or
and
inc
jp
xor
sub
or
sbb
pop
inc
adc
ja
cmpsb
dec
push
jg
mov
pop
or
sbb
in
int3
sub
xchg
mov
sub
pop
out
dec
mov
jbe
sub
push
jnp
mov
mov
mov
ret
cltd
out
lods
fsubs
je
popa
adc
pop
ds
ret
jo
mov
gs
scas
mov
sbb
xchg
aaa
lods
out
cwtl
cld
addb
mov
jl
and
rcrb
inc
mov
cwtl
mov
and
mov
xor
mov
mov
fdivrl
push
dec
lods
mov
ficomps
xchg
in
test
jns
adc
shr
dec
push
xchg
lock
add
in
push
aas
lret
xchg
addl
adc
les
mov
or
lea
and
dec
cld
xchg
push
and
stos
fnsave
dec
mov
pop
and
sbb
sub
cmp
jae
cmpsl
jb
in
shl
std
or
jecxz
pushf
ficomps
bound
andl
mov
jnp
mov
lret
gs
or
mov
ja
sbb
outsl
jl
adc
out
xchg
cmp
push
fildll
mov
fstl
or
fistpl
sbb
in
fmulp
es
fldcw
scas
xlat
cwtl
cmp
or
lahf
sub
or
lret
lea
in
adcl
mov
repz
jae
push
in
mov
stc
stos
nop
addl
sbb
stc
sti
add
and
mov
cmp
sub
pop
and
pusha
pop
rol
xor
or
add
stos
fcoml
paddw
mov
mov
adc
xlat
sub
xchg
sbb
jle
ret
lret
cs
push
mov
push
sbb
jne
mov
pop
repz
aaa
and
mov
test
das
push
pop
insb
lahf
xchg
mov
dec
jecxz
cmp
push
xlat
es
and
loopne
cmp
fdivl
ret
pop
imulb
popf
adc
or
jp
or
cmc
fldl
jmp
mov
ret
mov
hlt
pop
lds
pop
rcrb
shrl
in
push
xor
popa
rol
roll
mov
or
and
jbe
arpl
xchg
push
xchg
sub
adc
movsb
gs
xor
imul
sbb
mov
out
jge
xlat
sahf
pop
fldln2
sti
aas
inc
xor
jmp
push
stos
or
gs
fcoml
mov
lahf
pop
lret
cmc
stos
dec
adc
bound
or
je
mov
jl
je
divps
pop
add
cmp
inc
dec
dec
dec
fimull
loope
mov
xchg
andl
icebp
jns
xchg
clc
push
mov
in
jge
xlat
and
and
pop
out
shl
pop
inc
fsubp
mov
pop
outsl
jb
aam
mov
sahf
and
mov
fstpl
test
sahf
fcoml
test
cli
test
out
dec
jae
pop
scas
xchg
cmpsb
rcl
int3
xchg
iret
ret
loopne
popf
aad
sub
and
sub
dec
js
addr16
out
iret
stos
mov
xor
js
mov
mov
or
aam
sahf
cld
xchg
jno
shrb
xchg
ret
js
fstpl
pop
mov
cltd
mov
mov
cmpsl
ljmp
sbb
in
inc
push
icebp
loope
icebp
xor
push
mov
mov
int
xchg
cmp
cs
scas
push
push
cmp
xchg
adc
or
add
stc
mov
pop
push
adc
dec
test
enter
push
cltd
inc
iret
fcmovne
and
adc
xchg
ljmp
lcall
mov
mov
fwait
in
add
xor
mov
adc
jmp
addl
insb
dec
adc
xor
pop
repz
hlt
js
dec
adc
daa
pop
in
out
or
xchg
es
test
pop
push
mov
rorb
sbb
pop
cld
popl
or
xor
test
inc
push
lcall
jecxz
jo
sbb
pop
scas
popf
xchg
scas
fbstp
push
stos
scas
mov
add
mov
sub
mov
fstps
mov
xor
mov
lock
mov
pop
call
in
xlat
sbb
pop
icebp
inc
mov
daa
inc
ja
or
orb
outsb
std
or
adc
insl
mov
testb
push
inc
mov
push
xchg
pop
movsb
push
adc
pop
test
rorl
fiaddl
outsl
xchg
insb
lcall
jp
sbbl
stos
dec
int
and
orl
aam
dec
push
push
idiv
pop
fisttps
mov
cmovle
adc
inc
pop
clc
adc
jns
inc
mov
or
push
cmp
xor
push
btr
adc
push
sub
inc
pop
push
cmp
aaa
fcom
shl
push
jne
pop
les
mov
lret
sub
and
jo
sub
notl
pop
xchg
nop
imul
ficoml
mov
popa
mov
shlb
mov
cmpb
test
dec
push
xchg
in
sarb
add
sub
std
mov
push
lea
popa
jb
xchg
call
imul
mov
xor
es
adc
js
mov
aam
outsl
xchg
stc
adcl
pop
xchg
cs
cmp
fadd
xchg
add
ds
popf
push
fnstenv
adc
jnp
mov
push
push
xchg
ja
push
icebp
mov
insl
inc
lea
mov
inc
or
and
pop
and
iret
pop
test
cmpsl
cmp
outsb
add
jl
loopne
je
sub
repnz
stos
push
dec
xchg
movsl
cmc
mov
add
aaa
cmp
ret
imul
movsb
add
jno
mov
subb
push
bound
adc
pushf
dec
fisttpl
repz
xchg
and
lods
pop
fsubrs
cmp
jbe
mov
jle
sbb
push
aad
xchg
in
jo
in
fsubrs
mov
cmp
std
jns
jecxz
cmp
mov
insl
pop
mov
fbstp
pop
push
out
icebp
dec
popaw
iret
ljmp
push
shrl
xor
adc
adc
mov
push
pushf
dec
inc
sarb
cmp
mov
lods
stos
mov
cmpsl
or
fstpt
push
enter
ds
lret
aas
lds
pop
push
ret
mov
dec
out
hlt
push
and
cmpsl
and
pushf
and
xchg
jmp
push
jno
imul
xchg
pop
push
and
push
subl
lret
dec
ror
popf
add
mov
sub
andl
lcall
addb
lds
paddw
sbb
jne
jbe
fsubrl
subl
add
imul
outsb
ret
sub
notl
inc
xchg
add
lock
mov
in
xchg
mov
mov
pop
test
pop
cld
mov
dec
enter
sbb
popf
call
lods
lods
sti
push
cltd
in
fs
or
adc
add
aad
lods
add
cli
and
xchg
data16
cli
negl
cwtl
dec
fistl
jmp
xchg
add
in
jne
int3
add
sub
inc
ret
and
and
nop
lods
mov
in
adcb
stos
inc
ss
clc
sub
cmp
mov
push
pop
mov
jns
lods
push
mov
mov
inc
jle
mov
mov
cmpsb
in
clc
pusha
xchg
fisubrs
fdivr
test
cld
jl
sbb
es
or
push
push
mov
adc
push
inc
stos
sub
rcrl
jecxz
sub
sub
jae
dec
pop
xchg
nop
int
jo
ss
sar
push
flds
jmp
push
sarb
sahf
filds
out
sahf
bound
inc
shl
pop
pop
aas
dec
xchg
and
in
pusha
sub
dec
xor
pop
cld
adc
pop
fisttps
clc
push
js
out
nop
fadds
ja
out
push
mov
mov
in
pop
out
cmp
stc
xchg
ja
and
roll
leave
test
xchg
dec
cmp
fbld
leave
or
sti
add
or
push
call
pop
sti
add
pop
fdivrp
test
jnp
add
dec
mov
call
push
hlt
inc
adc
rorb
cmpl
test
jle
lds
call
jecxz
or
fs
cmp
ja
loope
jg
test
cld
ret
push
inc
ds
mov
cltd
and
lods
gs
aas
ljmp
mov
or
lret
cmp
cmp
test
cmpsl
pop
xchg
dec
jb,pt
test
xor
adc
push
pop
lret
cmp
stos
test
dec
in
lods
in
ja
xchg
stos
xchg
inc
sbb
js
adc
stos
adc
test
mov
push
sahf
mov
sub
mov
push
push
pop
push
sbb
movsb
movsl
test
cmpsb
dec
push
add
and
call
imul
mov
into
je
popf
in
mov
je
xchg
jmp
aaa
push
pop
mov
mov
add
jae
stos
mov
repnz
in
aad
inc
cmc
lock
in
sbb
add
cld
call
adc
aam
pop
lods
add
jp
adc
jp
jg
outsb
repz
mov
xor
data16
jmp
out
aad
incb
sub
leave
orps
lock
mov
inc
mov
xchg
xor
mov
push
scas
inc
push
xor
ss
inc
les
ret
iret
cmp
pop
icebp
inc
jns
shl
jns
lahf
in
cmpsb
sbb
cmp
sub
out
ficoml
push
adc
mov
fstl
cli
stos
stos
mov
sub
leave
jne
mov
lcall
jae
repz
inc
in
dec
addr16
negl
faddl
sbb
lods
mov
and
fidivs
outsb
xchg
loope
jno
adc
fstps
jmp
and
mov
arpl
adc
jmp
jp
xor
dec
mov
test
pushf
xchg
mov
fstpt
jmp
cmp
sbb
jae
jl
ljmp
xor
nop
addb
mov
push
add
popf
arpl
mov
adc
mov
lahf
cmp
int
add
fwait
test
mov
cmp
stos
dec
mov
pusha
xor
in
push
int
filds
adc
xlat
sbb
or
sti
mov
in
mov
gs
cmp
ljmp
sub
jns
mov
out
cmc
inc
enter
cmpsb
incb
int3
xor
pop
mov
jb
insl
stc
push
jne
ljmp
pop
push
cmp
sub
enter
fnstenv
fildll
inc
jbe
mulb
test
emms
push
mov
rcll
xor
ja
dec
scas
add
add
push
fistps
repz
jle
pop
icebp
sar
push
inc
xadd
outsb
mov
lock
ret
shll
mov
inc
iretw
mov
testl
push
scas
push
push
sub
addr16
jno
push
dec
push
jg
fsubrs
out
test
dec
fcomps
rcrl
cmpsb
sub
or
stc
in
fimull
out
jbe
mov
hlt
push
sti
scas
ficomps
vminps
nop
add
sbb
jns
pop
je
or
jo
int3
sbbl
push
add
fistps
cmp
loopne
mov
pop
adc
out
or
stc
popf
fistpl
dec
mov
pop
cld
fsubrl
aaa
rorl
inc
ret
or
arpl
or
popa
outsl
shll
jp
pushf
dec
dec
xchg
pop
mov
ds
jmp
aad
inc
cmp
sbb
push
push
push
icebp
push
adc
ja
fimuls
jae
jge
outsb
imul
loopne
mov
ret
cltd
fcompp
icebp
xor
dec
ds
cs
mov
ds
fiaddl
and
adc
cmp
cld
jecxz
loop
mov
xlat
ljmp
and
sbb
mov
in
push
cmp
adc
loope
pop
fcmovnbe
ret
mov
and
std
xor
push
xchg
aam
cmpsb
jns
popa
adc
or
mov
inc
outsl
xor
dec
cmp
push
jge
cmp
imul
dec
jns
into
push
mov
or
pop
add
mov
or
mov
and
in
pop
jne
push
testb
mov
mov
ret
std
insb
fstps
fiaddl
sahf
mov
ja
mov
fdiv
in
lods
xchg
popa
lds
lret
dec
sbb
pop
sbb
xchg
inc
cmpsb
sbb
rcrb
mov
add
xor
pop
adc
pop
sahf
jecxz
ds
mov
movl
lock
rcrb
inc
mov
xchg
loope
xchg
push
jmp
lea
sub
cmp
rcrb
jae
push
inc
rcll
icebp
mov
movsl
dec
xchg
lret
sub
jae
pushf
pop
and
je
cmp
fwait
ljmp
dec
xor
insb
rcr
movsb
add
int
ficoml
bound
aaa
fldenv
fldt
movsl
fucomp
clc
mov
mov
adc
rcr
imul
mov
fisubrs
xor
mov
mov
xchg
ja
and
mov
xchg
pop
and
inc
jecxz
add
insb
std
lock
inc
or
cltd
adcb
aaa
xchg
inc
xor
sub
fsub
stc
jp
movsb
popa
scas
xchg
jns
pop
insb
sbb
xchg
repz
ret
out
in
inc
cmp
sub
fisttps
dec
inc
inc
add
jle
or
dec
jns
icebp
repz
mov
mov
dec
imul
xchg
out
ljmp
inc
jmp
jle
mov
sub
push
ljmp
cmpsb
sub
jg
sub
dec
shrb
ret
mov
xchg
cmp
inc
adc
out
push
bound
lods
jge,pn
pop
push
sti
xor
inc
pop
aas
cld
add
jns
insl
and
sarb
push
adc
loope
mov
sarl
out
xchg
add
mov
hlt
daa
dec
xchg
bound
arpl
jno
vunpcklps
adc
out
mov
pop
add
daa
xor
lea
repz
inc
xchg
in
mov
flds
xor
jg
ss
lcall
xchg
sahf
sar
aas
loop
scas
pop
sub
jl
dec
cli
lcall
notl
test
in
xor
mov
cwtl
lds
stos
hlt
dec
roll
je
sub
dec
lahf
mov
dec
push
inc
mov
repz
push
jg
xor
mov
lods
in
inc
mov
inc
xor
add
icebp
std
popa
and
bound
stc
cmp
scas
les
or
scas
cli
ja
fs
ds
sub
sub
sbb
negl
add
jnp
sub
rorl
or
mov
out
jnp
cmp
cltd
bound
pop
andl
stos
jno
xchg
sbb
mov
cmp
push
outsl
inc
xor
stos
dec
cmpb
add
mov
mov
lds
or
test
and
pop
in
imul
pop
movsl
jmp
xor
mov
push
pop
fldcw
mov
cmpsl
mov
cmp
data16
ljmp
fisubrl
popa
testb
jns
dec
inc
stc
gs
clc
idiv
jg,pn
push
bound
xor
out
out
arpl
xor
fs
or
repnz
aad
inc
imul
les
and
inc
scas
adc
out
je
roll
test
mov
popa
push
jnp
sbb
xchg
cmp
in
sbb
pusha
test
loop
orb
sub
jo
cld
mov
aas
dec
fdivs
nop
rcrb
cmp
jecxz
stc
rorb
sbb
jno
lods
mov
mov
daa
fidivrl
fldt
cmp
test
xchg
jne
or
xchg
ret
sbb
imul
pop
sbb
jmp
and
into
stos
sub
cmc
xor
xorl
icebp
insl
aas
adc
sbb
mov
dec
roll
xchg
and
jne
pop
rcrl
shrb
push
loopne
push
sub
add
sbb
push
test
dec
mov
mov
test
jmp
inc
out
mov
xchg
insl
stos
push
mov
inc
leave
jge
push
scas
pop
stos
mov
pop
jo
mov
rcrl
mov
in
flds
adc
jl
fcmovbe
insl
jp
in
out
add
mov
orl
fstpt
cli
cmp
or
cmp
xlat
mov
insb
push
push
les
fists
inc
ss
sti
enter
cwtl
and
dec
pop
call
ja
rcrb
xor
in
xchg
sbb
mov
sarl
sub
test
pop
test
mov
mov
scas
outsl
sub
push
cmpsb
jbe
loopne
sub
adc
pmullw
sbb
out
dec
jge
dec
push
sti
jnp
mov
cwtl
cmp
adc
add
ss
push
fcompl
ret
cs
rorb
into
arpl
ljmp
sarb
pop
push
pop
fidivrl
int
mov
or
test
push
push
inc
jl
cmpl
sub
add
xchg
xchg
testb
hlt
loope
xchg
lahf
lahf
push
fmul
std
stc
out
xor
cli
arpl
xor
xchg
cli
out
xor
out
ror
imul
scas
shll
lock
or
push
mov
call
xchg
sbb
pusha
mov
mov
add
jo
push
push
xor
imul
jp
pop
les
stc
bound
rcll
ret
and
xchg
cmpsb
push
mov
insl
scas
pop
cmpsb
sbb
fsubrs
sbb
xchg
loopne
shlb
sti
in
movsb
ds
test
inc
inc
jg
dec
or
loopne
pop
shrl
out
push
xchg
xchg
mov
pop
cld
imul
std
mov
push
jne
sbb
fiaddl
cmpsl
loope
dec
push
mov
jbe
adc
dec
jnp
add
inc
stos
incl
sbb
add
add
mov
jae
pop
fcmovnb
cmpb
addb
sub
insl
xchg
das
pop
cmp
pop
jp
leave
xor
leave
sub
daa
jg
or
jge
adc
lcall
jecxz
cmp
hlt
arpl
inc
fimuls
sub
out
xchg
and
mov
add
push
nop
jmp
fistps
imul
imul
mov
sub
enter
sbb
imul
add
pop
movsl
pop
movsl
or
roll
fsubrl
cmp
rorb
stos
dec
clc
loopne
scas
cmp
fidivs
xor
fnstenv
ljmp
push
cltd
inc
lods
pushf
test
inc
inc
je
mov
xchg
inc
sbb
mov
je
cmp
mov
xchg
sarl
jne
jge
jmp
roll
sahf
rol
nop
dec
push
das
pop
rorb
mov
sub
nop
repz
fldt
sahf
mov
call
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
jmp
add
lret
lret
add
or
xor
pop
adc
clc
cmp
dec
out
add
roll
sarl
dec
idivb
xor
aas
mov
sti
pop
jg
cmp
adc
nop
adcl
jp
sub
in
sbb
pop
push
sub
fwait
adcl
add
add
and
insl
xchg
loop
aas
aaa
add
add
xchg
lods
cs
in
pop
cmp
aam
mov
dec
xchg
xor
mov
xor
movsl
cmp
fwait
push
jae
fisubl
push
inc
pop
jnp
xchg
test
cs
fdivl
mov
add
pop
dec
jp
sub
push
in
fstl
mov
and
pop
lea
andb
loope
push
lock
insb
cmp
in
xchg
mov
outsb
jns
xchg
fwait
mov
cpuid
xchg
mov
fdivrl
mov
mov
adc
test
stc
cmp
dec
das
pop
and
scas
inc
ds
xchg
sub
mov
inc
mov
jg
stc
jp
cmp
cltd
std
inc
cmp
pop
jb
scas
notl
dec
lds
decl
outsb
sti
mov
fisubs
jne
pop
jne
dec
sub
add
cmpsb
add
cmc
daa
pop
jecxz
cwtl
aad
icebp
jb
push
dec
or
dec
jmp
xchg
hlt
cmp
lods
xchg
or
aam
adc
in
mov
xor
std
jg
dec
mov
mov
jae
mov
xchg
ret
mov
pop
fidivs
loope
mov
xor
push
xchg
push
lret
cmc
pop
sbb
mov
adc
xchg
xchg
int
lds
cmp
add
pop
shr
or
pop
cmp
add
cmp
mov
mov
mov
ret
jecxz
imul
and
cmc
imul
pop
leave
xlat
fcmovnu
jecxz
sahf
xchg
dec
nop
push
mov
pop
jle
jne
repnz
sbb
dec
out
aas
pop
pop
sbb
stc
outsl
divl
jge
rorl
sbb
dec
xchg
int
xor
mov
inc
mov
out
test
out
jae
mov
addr16
and
gs
sti
shl
in
push
pusha
inc
adcb
adc
into
mov
dec
ret
mov
push
xchg
jbe
mov
cmp
out
scas
push
jae
int
fsts
xorb
mov
jae
jecxz
jae
mov
aaa
push
adcl
fmuls
jo
inc
sbb
ljmp
shl
pop
pop
lret
push
mov
rclb
pop
cwtl
gs
xchg
test
mov
jns
insl
jb
mov
and
out
push
or
ds
add
cmp
in
sbb
mov
push
inc
int3
jno
push
mov
jecxz
push
add
out
xchg
add
out
cmp
shrl
ljmp
iret
push
iret
test
adc
and
and
rcrb
fistps
pop
in
pusha
mov
xor
xchg
xor
clc
mov
repz
pop
add
xchg
pop
outsb
adc
xor
xchg
push
bound
cwtl
insl
mov
aad
sub
inc
mov
pushf
enter
jg
imul
push
lods
and
dec
mov
mov
sbb
xchg
mov
jae
jb
divb
add
mov
fbstp
lret
lret
lds
xchg
mov
or
imul
jno
test
xchg
mov
cmp
pop
aam
inc
enter
lods
pop
out
fisttpll
in
js
mov
fiaddl
adc
mov
mov
subb
fisubs
loopne
xchg
mov
xor
push
inc
adc
mov
popw
cli
ds
ljmp
add
mov
adc
sbbb
in
jae
mov
cmp
adc
xchg
test
pushf
inc
addl
rorb
dec
or
push
cmp
pop
loop
repnz
je
mov
xlat
int3
jge
sbb
aas
jge
bound
adc
xorl
xchg
daa
jmp
cmpsb
push
movsl
cmp
stos
mov
rorb
xchg
movsl
jmp
pop
in
or
lcall
push
dec
jecxz
xor
cmp
jne
sti
adc
mov
mov
push
or
pop
fstpl
idiv
sub
fisttpll
fists
stos
inc
sub
in
jnp
out
push
inc
in
fyl2x
cmp
inc
adc
mov
bound
cmp
fsubrl
sub
pop
in
andb
adc
outsb
sub
sub
gs
or
xchg
out
iret
xorb
jno
test
imul
sub
sbb
out
push
pop
jl
mov
cmp
divl
in
dec
pcmpgtw
lds
inc
fcomps
mov
and
aaa
push
mov
addr16
mov
mov
jge
and
std
test
loop
xor
push
mov
sbb
mov
lret
adc
jns
fdivl
push
imul
xor
dec
push
je
adc
ljmp
push
out
or
ja
shl
movb
xor
nop
shlb
xor
cmp
push
pop
sbb
fcoms
lods
xchg
pop
nop
mov
push
into
orl
adc
shrl
adc
jg
stos
inc
ja
in
jae
cmp
insb
cmp
pop
xor
imul
cmp
popf
jnp
mov
jg
push
sarb
add
gs
add
pop
addb
inc
adc
repz
xchg
sbb
test
pushl
push
aad
pop
aaa
xor
adc
scas
xchg
imul
loop
mov
out
cmp
cmp
in
push
mov
jnp
or
mov
out
xor
lcall
movsb
aas
mov
inc
lods
jp
popf
cmp
pop
inc
scas
mov
cs
test
mov
fadds
repnz
push
in
js
loop
cmp
stos
push
jbe
mov
mov
nop
hlt
imul
mov
mov
jl
jnp
xchg
jle
in
inc
xchg
cmp
nop
idivw
lods
mov
daa
mov
outsb
dec
dec
shl
xchg
aam
out
jae
push
fstpl
sub
cmp
out
pop
xchg
or
fnsave
inc
test
lret
xor
sbb
jle
cmp
xor
add
lds
stos
or
ss
mov
add
or
lods
popf
sbbb
lock
cmp
rorl
cmp
loopne
inc
jae
inc
sub
push
test
ja
sbb
and
outsb
inc
sub
icebp
dec
sub
adc
add
add
aas
xchg
adc
imul
cmp
in
pop
cmp
sti
mov
enter
insl
mov
xor
pop
test
leave
adc
xchg
sub
lret
lahf
mov
xchg
mov
xchg
dec
sbb
mov
push
mov
pop
or
sahf
sub
addb
dec
stos
xchg
les
and
in
pop
add
cwtl
dec
jns
in
rcrb
hlt
push
nop
test
mov
lcall
adc
add
push
fdivl
and
mov
pusha
push
xor
pop
jmp
std
mov
and
lret
push
call
xchg
loop
xchg
lret
lcall
mov
xor
cld
push
mov
ljmp
scas
xchg
mov
mov
xchg
cmp
jp
mov
xchg
aam
outsl
or
out
cmpsl
dec
and
fisttps
xchg
xor
dec
sbb
stos
scas
cmp
dec
adc
and
xchg
xchg
cld
sub
cmpsb
xor
insb
iret
push
js
sbb
mov
mov
in
inc
jo
add
jo
xor
inc
fwait
inc
mov
pop
dec
mov
ret
jecxz
push
dec
inc
cltd
add
cltd
mov
insl
jl
aad
aam
aas
push
cli
jg
fstpl
dec
add
ds
repnz
sbb
repz
in
sbbl
stc
mov
pop
mov
gs
icebp
inc
leave
push
cmpsb
push
mov
mov
pop
push
jno
xor
jl
in
mov
or
dec
xor
pop
jbe
adc
jb
lea
inc
jae
sbb
mov
push
fcoms
scas
cmp
sbb
data16
dec
mov
iret
inc
into
nop
push
sub
push
mov
fwait
add
push
jo
jg
add
leave
inc
adc
inc
dec
cmp
icebp
cld
ret
lock
scas
shll
mov
fcmove
mov
mov
fs
add
insb
cltd
int
stos
xor
inc
mov
test
mov
test
test
stos
or
stos
insb
cmp
sti
cmp
dec
pop
leave
sahf
cmp
test
xor
loop
pop
fnstsw
sbb
lock
aas
lods
jecxz
ret
adc
push
adc
cmp
mov
sbb
bound
push
fidivrs
lock
rcrb
sbb
into
adc
mov
sub
jg
pop
add
sarb
pop
jns
popa
iret
bound
sub
push
dec
rorl
sub
shlb
out
lret
lcall
push
cmp
hlt
pop
fwait
scas
iret
pop
xchg
fmull
loop
lahf
jl
outsb
into
icebp
cs
or
aad
pop
fnsave
push
dec
mov
sbb
mov
rcr
test
inc
or
mov
insl
leave
dec
bound
stos
in
inc
loop
xchg
out
lahf
mov
xor
hlt
jp
into
js
out
sahf
mov
ss
add
push
jl
les
jae
mov
add
es
sbb
add
sbb
sbb
dec
shlb
push
cmp
jg
or
jo
cli
sarl
and
ss
ss
mov
mov
test
mov
mov
inc
pusha
gs
in
hlt
fldcw
xchg
and
inc
inc
inc
jecxz
lret
mov
and
call
dec
rcr
test
push
adc
cwtl
cmp
fdivl
jge
mov
pop
stc
outsl
sub
pop
and
fisubl
test
and
pusha
push
popa
xor
add
xchg
mov
adc
push
pop
mov
and
and
xchg
dec
sub
cs
loop
ret
movsl
insl
mov
xchg
dec
push
adc
cmp
out
cmp
pop
in
ds
mov
loop
nop
pop
xor
inc
mov
push
add
xchg
je
nop
std
fs
aaa
adc
jbe
mov
repz
cmc
mov
dec
mov
lods
clc
ret
push
movb
jne
xlat
dec
adc
and
xchg
hlt
repz
out
fisttpl
dec
cmp
sbb
daa
sub
sbb
daa
mov
push
mov
cwtl
xchg
pop
xor
push
push
test
dec
sbb
push
inc
sahf
mov
shrb
cltd
jl
ficoms
mov
xor
cmpsl
inc
std
inc
dec
js
rcl
dec
aad
jo
stos
inc
insl
addl
sbb
mov
lods
add
sub
xchg
ljmp
aam
fdivl
out
jp
jl
rorl
adc
cmp
sbb
arpl
aaa
mov
sbb
push
mov
rclb
cmp
test
or
fwait
push
shrb
ljmp
and
add
jb
inc
cltd
xor
cmp
lods
fs
jb
pop
cmp
pop
and
xchg
cmp
pop
push
xor
sub
xchg
fwait
pop
push
daa
lock
mov
cmp
inc
xchg
mov
aaa
cmp
jne
mov
addr16
xchg
movsb
sbb
orl
adc
or
ljmp
scas
jmp
les
sub
std
sbb
mov
cmc
shlb
mov
xchg
mov
xor
jne
mov
sti
cmpsl
xchg
mov
push
sub
jnp
mov
mov
or
das
test
pop
push
mov
or
push
js
aas
xor
data16
push
stc
mov
dec
testb
popa
gs
jecxz
jb
mov
cmc
ret
cld
vpacksswb
pop
pop
pop
push
test
inc
and
adc
aad
cmp
push
imul
xchg
ret
pop
pop
je
repnz
ror
nop
push
sbb
jb
or
push
mov
xor
popa
pusha
loop
in
jecxz
lahf
lret
sub
jns
dec
jge
mov
jle
out
outsb
push
add
repnz
add
cmp
push
sarb
sti
pop
repz
jp
lock
inc
popa
fstl
out
fldenv
inc
pop
imul
push
push
xchg
fs
pop
inc
ficoms
adc
fcoms
sbb
loope
add
push
loop
inc
push
cmp
dec
xlat
xchg
or
lods
lcall
popa
dec
jne
fidivl
lretw
mov
jle
insl
pop
or
xor
ds
cwtl
mov
hlt
dec
les
jo
shrl
adc
xchg
jbe
repz
test
inc
and
or
jge
aas
es
sbb
sbb
hlt
outsb
ja
out
or
and
ds
mov
dec
xchg
jge
xchg
push
js
inc
xor
fiaddl
push
add
jno
inc
mov
in
pop
fwait
mov
sbb
or
fstl
shl
xchg
xchg
adc
push
jmp
push
test
repnz
sbb
mov
xchg
push
or
push
push
je
call
stos
imul
pop
mov
push
ret
jge
and
fldl
mov
xorb
sub
scas
pop
sub
push
cmp
mov
mov
mov
cmp
call
mov
mov
in
mov
xor
pop
fcmovu
scas
dec
jno
or
jae
inc
mov
jae
sbb
ja
enter
icebp
mov
mov
lock
mov
dec
test
push
imul
push
mov
lahf
mov
push
pushf
outsw
mul
inc
or
and
pop
int3
int
mov
shll
xor
std
lock
enter
out
decb
push
not
fwait
idivl
jae
xor
loop
scas
outsl
pop
mov
xchg
es
stos
leave
push
mov
popf
ja
dec
pop
inc
mov
je
sbb
sbb
and
dec
stc
sub
mov
mov
fbld
cmpsl
dec
mov
lea
shll
loopne
fbstp
test
xor
xor
or
fs
mov
sbb
fistl
aam
icebp
cmp
push
xchg
test
fcmovb
or
aad
mov
pop
jge
cmpsl
loope
pop
ja
mov
inc
das
jbe
mov
cmp
ds
std
add
xor
push
nop
mov
push
add
add
js
cmc
fisubs
mov
das
lock
jl
push
jle
pop
jmp
mov
in
jp
repz
movsl
mov
xor
repnz
xchg
xor
inc
adcl
test
dec
in
rorb
pop
pusha
repz
push
nop
out
pop
sbb
add
daa
stos
pop
flds
mov
push
sarl
ret
scas
inc
daa
push
std
xorb
in
xchg
ficoms
adc
in
jo
jo
out
stc
mov
fsts
sarl
jno
shll
cs
incl
adc
movsl
mov
jb
pop
outsl
jno
in
sub
stos
insl
loopne
and
add
dec
pushf
lock
repnz
leave
push
adc
mov
fisubrl
call
ss
mov
loope
mov
jle
cwtl
cld
not
fbld
adc
mov
stos
icebp
inc
dec
xchg
in
mov
and
call
sti
cmpsb
and
lods
popa
adc
jmp
repz
aam
incl
mov
loop
bnd
jl
cli
enter
inc
adc
mov
outsl
adc
dec
fs
xchg
dec
insl
adcl
inc
cmp
mov
xchg
mov
pop
push
stos
xchg
push
jle
add
lret
inc
scas
gs
mov
adc
push
mov
iret
jmp
cmovne
push
enter
movsl
rorb
repnz
int3
movl
out
sbb
add
in
fisubrl
push
jecxz
test
add
jnp
dec
fwait
lea
scas
or
jne
pop
andb
scas
out
pop
popa
je
lods
loope
test
rcll
xlat
outsl
xor
cli
hlt
aad
insl
enter
test
jo
push
lods
in
dec
dec
and
shlb
add
cmpsb
stos
push
xor
mov
xor
outsb
aam
xor
ret
adc
loope
cwtl
arpl
dec
jge
inc
aad
inc
das
lods
jb
xor
jle
lea
mov
repz
xchg
cmp
or
lret
andl
and
sub
jg
movsl
mov
jp
sub
xlat
cmpb
out
pop
dec
xchg
cmp
mull
mov
ds
scas
nop
mov
mov
xchg
cmc
cmpsl
fdivl
mov
std
xor
lcall
sub
subb
mov
mov
addl
ss
js
jg
insl
jne
xor
and
and
mov
cmp
pusha
push
cltd
test
xlat
cmpsb
sub
pop
dec
das
pop
cmp
mov
xchg
testb
xchg
call
inc
push
test
in
dec
fs
fisubs
pop
fldl
sub
leave
sbb
mov
jo
idivb
testl
jecxz
mov
ljmp
sbb
testl
jg
xorb
xchg
xchg
popf
push
fisttpl
and
int
int3
cmpsb
das
cmp
dec
cmp
scas
inc
dec
lret
sbb
mov
jge
mov
jo
jl
insl
pop
loopne
push
ljmp
dec
ss
je
sarl
push
nop
and
jmp
mov
lea
js
push
xchg
push
sbb
loopne
clc
mov
enter
stos
xchg
popf
and
jecxz
adc
imul
stos
aam
xor
jbe
add
jbe
out
or
inc
dec
outsb
nop
shll
mov
mov
adc
lcall
arpl
pop
push
add
adc
cmpsl
push
mov
fadds
daa
movsl
push
mov
xchg
jmp
ja
cld
jg
aaa
xchg
push
jb
leave
fisubrs
xlat
mull
lock
mov
jnp
sbb
arpl
xor
aad
cmp
out
mov
jecxz
rcrl
add
sub
movsb
dec
inc
xor
sub
add
addb
sahf
sbb
add
nop
push
fadds
cmp
test
test
aas
shlb
mov
ds
sti
stc
dec
jo
mov
gs
in
iret
cmpsb
cltd
sti
flds
lret
cmpsb
add
stc
ss
lret
call
je
lcall
add
jl
mov
scas
icebp
push
sbb
mov
fdivs
inc
hlt
loopne
inc
xorl
lods
cmp
es
push
vmovhps
pop
pop
dec
imul
aaa
add
das
cmpsb
fdivr
jge
std
sbb
or
ret
cmpsl
push
imul
push
movsb
rclb
clc
pop
sbb
fidivs
jg
push
lods
xor
or
sbb
sub
sti
lret
lea
ret
jnp
rclb
push
out
mov
in
jle
ret
mov
nop
pop
xor
lods
vmread
sbb
test
xchg
add
push
sbb
jl
inc
fcmovnb
out
pusha
mov
and
imulb
or
popf
fwait
xchg
outsl
pop
int3
ss
leave
mov
je
ficoms
push
imul
push
dec
push
sbb
dec
data16
cmc
insb
loopne
push
sub
jmp
scas
sbbl
push
or
cmp
mov
jb
insb
push
or
dec
jge
aas
push
push
pop
in
jne
fadd
mov
in
ror
adc
mov
and
or
lahf
fwait
jo
mov
inc
cmp
xor
mov
ja
fs
int
mov
mov
out
enter
mov
mov
fmuls
ret
xchg
or
xlat
mov
jo
outsl
nop
fstpt
lahf
repz
stc
nop
aam
testl
or
xchg
inc
mov
sbb
jbe
xor
incl
andl
ret
mov
xchg
loopne
sbb
pop
icebp
addr16
mov
pop
in
insl
jle
pop
or
xchg
into
fldt
scas
jno
xchg
ret
in
pop
push
int3
fists
ret
shlb
ljmp
xchg
inc
or
adc
xor
bound
in
cmovae
aad
rclb
aaa
cmp
pop
dec
cli
push
mov
fdivrs
pop
push
loope
lods
fnstsw
cmp
push
sbb
or
or
sbb
repnz
or
sahf
scas
movsl
xchg
xor
bound
mov
rorl
fcmove
adc
pop
stos
sbb
pop
ror
xor
lea
jo
faddl
mov
movsl
inc
jbe
or
icebp
in
daa
daa
xchg
sbb
lret
scas
jge
ret
repnz
mov
repnz
push
ljmp
pop
ljmp
or
pop
inc
je
bound
sub
fcmovu
vunpckhps
ss
daa
fidivrs
imul
pop
push
add
inc
pop
les
adc
push
xor
cmp
mov
test
inc
mov
jo
adc
insl
scas
inc
test
xor
movsl
sbbb
or
jecxz
push
call
cwtl
insb
enter
insl
mov
cltd
rorl
shl
loopne
pop
repnz
lock
ret
insb
aaa
jge
jle
adc
into
cmp
ret
dec
call
pushf
xchg
lods
jb
pop
mov
icebp
mov
sub
pusha
stc
push
daa
push
clc
pushf
or
and
enter
idivl
mov
mov
ljmp
fistps
or
cltd
nop
and
arpl
outsl
scas
cs
dec
push
nop
jae
imull
out
call
inc
xor
dec
and
cwtl
outsb
cmp
aas
sarb
mov
xchg
mov
leave
movsl
aaa
add
or
ret
add
pop
ljmp
clc
pop
pop
pop
jae
mov
mov
mov
sbb
cmp
sub
mov
or
mov
sub
dec
fdivrs
outsb
jb
lret
ret
jae
pop
repz
xchg
clc
cmpsb
dec
mov
lock
push
out
lods
mov
add
inc
subl
or
sub
in
dec
or
mov
out
sub
push
std
divb
popa
cmp
mov
sahf
or
loop
push
int
sbb
das
das
pop
inc
nop
jbe
mov
and
jo
popa
push
std
mov
or
and
adc
pop
pop
pop
dec
insl
insb
notl
mov
popf
sub
adc
addb
data16
fdivp
mov
cmp
aas
dec
and
cmp
idivb
mov
inc
inc
gs
and
dec
mov
fcoml
sbb
xor
mov
pop
xchg
arpl
shll
xchg
fdivrs
out
inc
xor
mov
jle
enter
and
dec
test
pop
mov
jo
outsb
cmp
sub
jnp
in
xlat
fwait
leave
repz
dec
push
fdivs
push
out
jnp
jecxz
and
jecxz
mov
ds
pop
insl
mov
arpl
out
test
cmpsl
and
xorb
sub
cld
fs
int
mov
jmp
movsl
sarl
adc
pop
incl
hlt
sbb
push
xor
mov
adc
push
and
in
into
clc
ljmp
or
adc
shrb
xor
loope,pt
lcall
add
aad
adc
add
in
mov
jo
bound
movsl
xchg
push
adc
mov
adc
es
pop
jno
dec
into
pop
enter
add
in
arpl
xor
xchg
push
add
xchg
mov
rcrb
fwait
adc
cmpsb
push
mov
adc
cmpsl
dec
dec
imul
cwtl
inc
mov
cld
inc
dec
push
ljmp
sub
sub
push
dec
gs
adc
xor
dec
ss
xorb
push
inc
jmp
loope
inc
jb
or
cld
mov
in
inc
shll
ljmp
das
aad
inc
jne
push
ljmp
sti
sahf
pop
mov
xor
cmp
cmpsl
adc
popf
imul
je
add
push
rcl
test
insb
pushf
lret
mov
jg
mov
mov
mov
clc
push
dec
adc
hlt
and
jle
stos
subl
test
push
inc
inc
inc
mov
maxps
roll
or
mov
xor
cmpb
inc
test
mov
lcall
leave
add
xor
xchg
enter
sbb
das
mov
cmp
scas
imul
std
or
mov
cltd
xchg
enter
sbb
inc
mov
sarb
scas
mov
das
push
aas
jae
dec
pop
push
push
mov
lcall
cmp
xchg
and
adc
push
stc
test
sarl
jnp
mov
xor
ja
and
in
dec
pop
dec
xchg
lds
les
jge
inc
stos
mov
mov
mov
add
repnz
dec
inc
xor
jae
jl
lret
adc
sbb
push
stos
inc
lods
xchg
into
data16
je
cli
out
inc
into
jle
and
adc
and
int3
jmp
sbb
mov
push
icebp
test
dec
xchg
or
push
addr16
mov
shl
mov
aam
in
mov
aad
cmp
mov
xchg
push
push
stos
clc
and
cmp
dec
out
je
ss
rorl
jbe
inc
cmp
cmp
imul
pushf
adc
adc
int
cmp
cmc
or
loop
jo
mov
popa
or
in
jmp
imul
sub
jmp
cmp
cltd
cmc
lret
popf
ret
mov
ljmp
fnstsw
int
cli
rolb
arpl
mov
or
mov
adc
mov
adc
adc
hlt
dec
stos
rcrb
shll
add
out
enter
lods
pop
lcall
push
inc
mov
jnp
rcrl
test
mov
push
sub
push
sub
cltd
or
in
or
sub
int3
cmp
xlat
dec
pushf
xchg
xorl
lret
shlb
ljmp
js
iret
insl
ds
fisubs
in
dec
xor
cltd
vpmulhuw
cmc
push
and
mov
fnstenv
jmp
sub
fdivrl
in
jmp
adc
nop
jle
pusha
cmpsl
xchg
mov
pop
pop
in
jg
xchg
insb
push
pop
inc
loopne
xchg
cli
push
xchg
or
inc
fcmove
popa
xchg
mov
sbb
arpl
sub
mov
scas
mov
or
adc
imul
jp
add
cmpsl
inc
out
gs
sbb
mov
adc
out
pop
dec
sbb
test
dec
outsl
icebp
rorl
mov
adc
jbe
push
das
sbb
in
mov
out
test
sbb
inc
mov
out
cmpsl
sti
xchg
pushf
scas
pop
in
lods
sbb
adc
repz
mov
call
sti
test
pop
mov
inc
or
add
mov
or
hlt
cmp
cmc
xchg
push
imul
pop
xchg
mov
icebp
cmp
int3
push
jmp
xchg
mov
mov
and
notl
mov
mov
sbb
lea
and
insl
dec
mov
cli
pop
invd
push
out
mov
inc
sub
push
push
jne
push
cld
jae
scas
pop
loop
ss
subb
mov
sub
loope
popf
psraw
pop
push
xor
lods
das
jno
xchg
adc
imul
sub
pop
nop
rol
adc
imul
mov
sahf
push
scas
lret
orb
xor
mov
adc
inc
test
lahf
scas
inc
pop
fistps
cmp
stos
test
xchg
cmp
repnz
jmp
out
cmp
movsb
rcrb
lock
popa
lret
adc
pop
xor
mov
jl
cltd
mov
lcall
fcomps
mov
in
dec
ljmp
iret
ret
fadds
xchg
pop
pop
and
adc
sarb
push
add
mov
fwait
sub
lea
frstor
outsb
mov
mov
sbb
stos
movsb
or
jecxz
test
push
jno
lods
out
call
jmp
fnstenv
sub
scas
insl
jge
bextr
loope
inc
shll
mov
in
lahf
fisttps
mov
dec
push
idiv
mov
fwait
out
les
outsb
cmp
inc
test
movb
in
pop
aaa
in
rolb
loopne
cmc
xor
jge
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
jmp
jnp
imul
sub
out
and
cmp
adc
imul
ja
sbb
into
xchg
scas
in
and
icebp
dec
adc
lret
js
dec
and
test
out
sub
into
dec
lods
mov
shll
stc
jno
push
hlt
jno
fdivrs
push
je
call
out
gs
mov
sbb
mov
addr16
outsl
xor
mov
es
adc
jmp
and
imul
fwait
push
in
ret
push
les
add
fcom
or
push
imul
xchg
je
sub
fildl
jne
mov
adcl
xor
adc
xor
mov
add
push
aam
cmpsb
dec
loope
addl
or
xchg
hlt
lds
inc
mov
xlat
pop
scas
pop
dec
mov
mov
pusha
xor
in
sub
xor
aad
or
or
ljmp
andl
mov
sub
push
jg
gs
dec
incb
cmp
mov
add
push
ret
xor
sub
or
incb
adc
mov
arpl
in
dec
dec
adc
rcr
aas
xchg
gs
xor
adc
xor
out
pop
cmpsl
or
in
movsl
or
andb
xorb
push
stos
jl
inc
add
pop
fnsave
in
mov
mov
push
push
cld
pop
loopne
lds
in
cmp
test
xchg
loopne
mov
fcmovnb
push
out
and
jbe
js
xlat
mov
xchg
loop
jb
scas
and
stc
and
xchg
cmp
lea
add
lds
in
push
movsb
repnz
sarl
xor
aas
les
repz
inc
int3
pop
lret
stos
pop
pop
xchg
cltd
ss
adc
sti
fimull
cmp
popa
adc
frstor
arpl
xor
inc
enter
dec
pop
or
push
das
add
es
jecxz
roll
hlt
lret
inc
push
daa
sub
add
cmc
inc
pushf
mov
mov
and
fisubrl
jnp
int3
pop
adc
loopne
jecxz
pop
out
cmp
jecxz
loope
push
aas
push
mov
xor
in
xchg
jno
orl
aam
xor
into
mov
lds
mov
enter
xchg
and
int
xchg
mov
stos
loopne
clc
cmp
jno
mov
packuswb
jmp
call
push
pushf
dec
rolb
lcall
nop
jnp
es
jle
in
pushf
pop
jae
push
dec
mov
insl
mov
loope
fldl
imul
in
and
arpl
shll
leave
rclb
scas
mov
jmp
orb
mov
xor
mov
dec
sbbl
adc
lods
mov
xchg
insb
sub
sub
or
outsl
jl
jb
hlt
mov
rolb
int
insb
add
mov
and
lea
scas
test
xchg
inc
and
fsts
cmc
xor
adc
es
xchg
cmc
cli
nop
add
mov
mov
jge
jbe
das
dec
xor
or
out
das
cld
mov
jo
fdecstp
mov
lahf
ja
and
jmp
jo
pop
jo
push
push
hlt
dec
lret
cmp
in
mov
aas
sub
xor
add
lods
in
pop
push
jp
scas
lahf
inc
push
cmc
ss
fisubs
scas
jmp
cmpsl
ss
rcrl
xor
pop
js
lret
xchg
inc
adc
inc
dec
lret
inc
ret
stos
cmc
mov
and
pusha
std
xorl
mov
repnz
std
outsb
lret
and
mov
rcrl
xor
jno
push
les
stos
pop
sbb
jmp
outsb
xchg
ljmp
xchg
call
cmp
out
xor
and
popf
std
push
push
daa
call
pop
cmpsb
in
imul
and
push
xchg
mov
cmp
fisubrs
mov
or
mov
test
scas
outsl
jle
push
inc
outsl
dec
test
jg
push
fs
push
mov
test
cld
shlb
imul
fisttps
jmp
xor
cmp
add
bound
xor
jns
lock
mov
inc
daa
dec
xor
fs
sub
push
int3
add
loop
push
xorl
ss
mov
cmpsb
pop
paddsb
add
decl
ret
add
clc
xor
and
or
shrl
push
mov
dec
into
adc
std
lock
inc
and
mov
and
fsubr
nop
mov
popf
gs
xchg
fildl
cmp
movsb
std
out
fdivrl
mov
aad
xchg
sub
and
ds
dec
ror
mov
bound
adc
insl
jp
punpckhwd
popf
push
mov
sub
xchg
nop
mov
fnstenv
or
xor
xor
mov
cmp
imul
pop
and
popa
add
je,pn
mov
popa
add
fwait
pop
push
es
dec
in
fs
incl
xor
pushf
scas
pop
call
adc
roll
jns
cltd
iret
int
cld
sbbb
mov
xchg
imul
movsb
mov
pop
test
or
push
repz
pop
push
into
dec
sti
sub
in
das
cmpxchg
and
daa
cld
sbb
addr16
je
lods
data16
xchg
into
mov
enter
cltd
dec
stc
pusha
aas
pop
movsl
push
cld
scas
shll
sbb
test
pop
xchg
outsb
out
test
lods
jne
sbb
jbe
mov
lods
or
or
nop
fnstcw
cmc
mov
scas
lahf
sub
push
dec
lahf
pop
cmp
loopne
mov
test
xchg
mov
push
dec
mov
cmp
and
inc
cmp
mov
adc
fcoml
sub
jb
addb
sbb
pop
sub
test
xor
sub
sub
dec
movsl
fstps
lcall
test
push
ja
bound
dec
lock
add
lahf
test
xor
stos
inc
lock
dec
xchg
je
push
push
jl
jns
mov
rcrb
pop
jbe
insl
cmpsl
xor
xchg
cmc
xor
sbb
leave
jl
ss
jle
mov
shrl
scas
pop
mov
mov
jle
ljmp
inc
in
mov
jmp
sahf
dec
lock
and
adc
fistl
inc
sbb
fiadds
push
enter
inc
dec
rorl
add
outsb
or
ljmp
mov
js
mov
lcall
add
fiaddl
dec
lahf
mov
push
mov
sbb
push
dec
cmc
cmp
inc
push
jo
mov
mov
stos
jmp
push
sbb
rclb
add
cwtl
fsubl
repnz
xchg
into
outsl
stc
mov
sbb
sahf
pop
sbb
pop
jge
out
je
pop
or
cmc
int3
inc
pop
push
shrb
push
pop
rcll
pop
into
dec
js
dec
jp
mov
sbb
push
jb
test
in
xor
xor
inc
push
lahf
jae,pt
cli
cmc
xor
jns
xchg
stos
or
mov
inc
dec
and
ja
adc
add
movsb
ret
mov
cmpsb
nop
icebp
imul
dec
mov
xlat
out
stc
cld
jg
add
inc
sub
mov
inc
or
or
addr16
xchg
xor
fimull
loopne
mov
popf
add
lods
cmc
jb
add
xchg
pop
pushl
mov
out
sarb
mov
call
fbstp
rcrl
sti
ret
out
shll
movsl
pop
sbb
pop
cli
lods
xor
dec
jo
dec
out
lcall
mov
xor
inc
dec
xorl
sbb
mov
test
jb
insb
lock
sbb
mov
and
jl
push
out
mov
push
mov
inc
out
fidivrl
pop
lcall
push
xchg
pop
mov
mov
add
or
test
inc
aad
jae
cltd
push
add
jns
mov
adc
lock
iret
pop
aas
mov
cmp
iret
add
mov
adc
dec
push
xor
es
jae
and
imul
pop
dec
insb
and
cltd
sbb
add
mov
idivl
pushf
sbb
shl
push
mov
pop
xor
fmuls
daa
aas
mov
and
dec
or
adc
xchg
divb
push
or
sub
jno
fisubl
or
loop
in
lcall
dec
add
mov
movsl
xor
mov
mov
iret
cmp
cmovle
mov
mov
loope
lock
shr
add
jno
adc
out
cmp
or
mov
or
out
aaa
in
pusha
pop
aad
test
mov
pop
mov
sub
and
ret
mov
and
sti
mov
out
icebp
cwtl
jne
adc
ljmp
stos
or
sub
div
cmc
inc
insb
arpl
and
xor
call
dec
sub
pop
cs
lods
scas
leave
pop
test
cmp
dec
xchg
movsb
mov
add
sbb
test
jmp
and
and
push
lock
jp
cmp
leave
and
stos
and
mov
addl
mov
pop
xchg
dec
cmp
out
pop
pop
xor
fwait
inc
addr16
mov
out
cmp
psubsw
pop
xor
loop
cmpsl
xor
sbb
pop
stos
insb
mov
adc
pop
jb
fisttps
outsl
and
jb
or
fbld
mov
inc
rcrl
mov
xchg
mov
negl
in
inc
mov
jle
into
fadd
mov
loopne
or
add
insb
fwait
jo
outsb
jbe
shll
clc
xor
hlt
sub
jae
xlat
shlb
mov
mov
inc
out
push
jb
aam
xchg
roll
push
mov
call
adc
xchg
dec
test
xchg
clc
cld
xchg
aam
out
pushf
and
movlhps
sti
daa
dec
enter
add
int3
dec
mov
inc
push
mov
and
dec
mov
or
mov
shrb
pop
push
jp
pop
in
push
jl
add
cmp
lock
mov
inc
addr16
push
repnz
clc
mov
jge
adc
or
jmp
rcrb
mov
mov
js
ja
ret
jae
popf
outsl
xchg
push
or
and
in
adc
push
iret
xchg
inc
movsl
scas
das
movsb
or
sbb
lods
mov
mov
outsb
xchg
repnz
sub
adc
movsl
adc
fimuls
mov
bound
push
aam
push
mov
iret
lock
lds
cmc
ret
imull
pop
cmpsb
aam
pop
sbb
test
push
lret
out
inc
stos
mov
je
mov
sbb
mov
jns
jmp
adc
push
sbb
imul
gs
cmp
scas
hlt
mov
popf
or
mov
data16
imul
push
cmp
out
xchg
cmc
cmp
mov
pop
fistps
sub
sbb
cmp
pop
ret
pcmpgtb
imul
jle
or
jae
mov
add
dec
mov
pop
loopne
mov
std
bound
push
inc
cmc
adc
neg
xchg
movsb
mov
call
cmp
adc
dec
in
push
sub
loopne
imul
rolb
popf
xor
lahf
shr
fs
lahf
sbb
jnp
pushf
repz
std
testl
cmpsb
push
call
setnp
pop
xchg
and
js
aad
cld
cltd
xchg
adc
add
jp
mov
and
fcmove
jb
es
icebp
xor
sbb
cmpl
pop
push
ffreep
mov
lods
inc
das
sbb
pop
in
lods
inc
pop
and
arpl
imul
adc
ja
dec
jbe
push
movnti
xor
fistpll
imul
adc
aam
xchg
cmpsb
aaa
imul
mov
xlat
jecxz
push
out
bound
and
dec
mov
add
stos
mov
daa
rclb
mov
pop
jne
mov
adc
fmull
or
shrb
inc
les
mov
pop
and
std
lea
lret
mov
xchg
xorb
push
mov
xlat
stos
iret
imul
cmp
sub
push
arpl
xchg
xchg
movsb
and
inc
xchg
add
repz
test
in
lahf
sbb
fisttpll
neg
xor
or
mov
bnd
mov
jne
movsl
sti
and
xchg
into
add
subb
inc
push
sbb
pop
cmpsb
xchg
fdivrl
sbb
fcomps
orl
jl
jp
cld
mov
ljmp
ret
cmp
mov
stc
or
lods
cwtl
push
mov
repz
int3
xchg
sbb
in
push
pop
adc
pop
xchg
cmc
or
cwtl
sub
stc
jg
pop
mov
mov
adc
jb
loope
aaa
in
xor
push
ret
add
repz
inc
lea
ss
jp
xor
out
adc
sub
ret
aaa
mov
mov
sub
mov
fistpl
popf
roll
cmp
sub
cmc
lds
ret
out
scas
fisubrl
in
rcrb
daa
rorb
add
pop
cmpsb
mov
or
xor
add
data16
faddp
mov
xor
sbb
dec
mov
cwtl
std
mov
fwait
pop
jmp
cltd
scas
inc
and
loope
popa
jne
cltd
cmp
mov
imul
dec
insl
mov
les
dec
cli
dec
ja
rol
sub
xchg
xchg
popf
pusha
adc
cmp
cwtl
or
add
fistpl
test
addr16
cmc
mov
aas
daa
cmpl
div
pop
cwtl
push
repnz
rcrl
xor
pusha
dec
jecxz
mov
adc
popf
popa
rcl
pop
mov
stos
out
dec
icebp
sbb
sbb
dec
xchg
lods
ret
jmp
xchg
lret
jmp
nop
mov
and
xor
rcrb
out
push
popf
sbbl
cmpsb
icebp
or
adc
pop
aaa
pmuludq
pop
daa
ss
out
ret
lahf
jbe
push
push
pop
movsl
aaa
mov
movsb
fadd
sub
inc
sub
daa
rcl
cmp
xor
fisubrl
or
mov
mov
test
mov
xchg
outsb
scas
dec
scas
stos
loop
iret
pushf
fildll
mov
cmpsl
lret
sub
mov
rcll
inc
fdiv
push
pusha
add
ljmp
scas
mov
loope
sub
stos
sarb
test
stos
cmp
add
inc
jecxz
push
push
fisttpl
shlb
or
into
cmpps
mov
loope
scas
cwtl
jl
popf
cld
orb
inc
repnz
inc
scas
xor
push
inc
mov
or
test
inc
lea
insl
pop
jnp
addr16
push
test
shr
mov
sti
jmp
mov
push
jmp
lock
popf
js
ja
xor
inc
and
push
leave
cmp
adc
lcall
and
ss
stos
adc
pop
shrl
push
flds
dec
out
cli
xchg
mov
fsubp
jnp
mov
xchg
out
mov
mov
mov
xor
daa
adc
add
test
les
mov
inc
adc
rolb
jae
addr16
or
lcall
shrl
lods
add
add
enter
inc
lcall
inc
sbb
xchg
loopne
xchg
pop
aas
sbb
fbstp
xchg
cmp
sub
mov
inc
and
enter
cmp
mov
cmp
gs
repz
enter
xchg
push
mov
add
adc
stc
inc
inc
movsb
repz
shlb
mov
jge
sub
out
fwait
cld
pop
mov
mov
ret
mov
push
int3
lods
lcall
hlt
sbb
pushf
shrl
push
call
xchg
fistl
loope
mov
jae
out
mov
je
sbb
inc
loopne
cmp
test
adc
es
mov
add
cmc
pop
sbb
or
inc
fiadds
mov
in
subl
insl
or
mov
or
pop
fistps
cltd
sub
int3
jmp
in
ret
fidivs
fists
sub
mov
and
xlat
fwait
lret
adc
inc
mov
mov
fwait
sbb
jmp
cmp
and
gs
stos
out
and
or
imul
mov
and
push
jge
jmp
and
mov
andl
mov
xchg
mov
or
or
cs
enter
fisubrs
fistl
cmp
or
test
data16
push
je
add
cmpsl
or
cmp
cmp
mov
adc
fisubrs
jns
std
mov
scas
jmp
loope
mov
mov
test
mov
out
outsl
fdivrl
sub
adc
pushf
stos
mov
pop
pop
cmc
mov
lods
pop
test
adcl
and
popa
test
cmpsl
out
cmpsl
popa
inc
mov
adc
sbb
push
test
cmpsb
xchg
shll
cmp
adc
xchg
mov
bound
orb
mov
xor
jmp
imul
mov
mov
adc
mov
sbb
daa
jb
ficomps
mov
sbb
mov
into
loope
inc
and
sbbl
xchg
int
enter
mov
sub
movsb
mov
ret
jl
xchg
pop
popa
shlb
lods
adc
mov
xchg
sub
sbb
cmc
sbb
aad
adc
aas
inc
xor
sbb
push
pusha
loopne
inc
pop
dec
pop
test
in
dec
mov
xor
stos
lret
hlt
leave
mov
cmp
jg
insb
aaa
testl
arpl
jl
stc
out
sarl
xchg
orl
sub
cmp
inc
jno
jbe
sbb
sub
adc
lea
movl
loopne
hlt
arpl
popa
test
sbb
adc
dec
int
mov
mov
mov
out
gs
lahf
incl
jle
mov
mov
out
mov
adcl
into
out
add
test
divb
inc
pop
leave
or
rclb
aad
pushf
lds
sub
push
ss
repnz
fsts
mov
mov
mov
xchg
stos
lock
negb
movl
xlat
adc
sbb
scas
lock
push
jg
dec
call
lahf
xorb
and
sahf
std
jbe
hlt
notb
jl
pop
movsl
sbb
push
mov
adc
fs
mov
dec
xchg
fiadds
adc
xor
add
adc
sbb
mov
push
mov
mov
push
mov
jb
arpl
stos
cmp
js
inc
pop
xor
test
arpl
cmp
xlat
xchg
push
inc
test
cmc
pop
xor
inc
test
push
xchg
xchg
push
test
movsb
inc
ficoms
fstpl
cwtl
cmp
push
popa
nop
nop
call
push
add
sub
aad
enter
stos
cmp
xchg
xor
mov
xor
mov
int3
mov
adc
push
inc
fcmovnb
insb
xlat
aam
fisubs
lahf
dec
mov
ret
and
mov
sbb
dec
push
jno
nop
and
les
and
mov
inc
jbe
lret
adc
xchg
mov
ret
rclb
push
adcl
rcl
gs
ss
sbb
out
mov
lea
mov
mov
lds
repnz
pop
push
fldcw
in
lods
lahf
mov
mov
stos
mov
rorl
int3
xor
aam
jl
mov
pushf
xchg
mov
int3
pop
jne
inc
outsl
push
xchg
push
stc
mov
mov
fwait
xor
test
ss
dec
insb
lock
mov
mov
jo
lret
shl
pushf
addr16
dec
pextrw
adc
adc
pushf
sbb
mov
add
xchg
test
jbe
imul
jg
inc
push
pop
fistpll
fwait
xor
mov
dec
push
pop
sahf
js
icebp
sub
dec
dec
pop
fidivrs
lea
movsb
push
jge
decb
cmp
mov
mov
pop
mov
repnz
stos
xchg
in
outsl
pop
and
add
rcrb
push
loopne
outsb
mov
jne
insl
ret
cmp
or
dec
scas
xor
jmp
pop
outsl
mov
xlat
jb
push
pushf
or
push
or
stos
loopne
push
gs
ficompl
xchg
rorb
std
mov
fucomi
arpl
inc
ror
aad
ret
subb
fcompl
pop
cmc
sub
cld
and
or
sub
jp
cmp
xchg
leave
push
push
ja
jne
ret
xchg
clc
mov
out
insl
out
mov
pop
add
int3
daa
stos
mov
adc
je
shlb
jmp
into
jp
test
or
ret
test
imul
int3
adc
dec
dec
jo
ret
add
xchg
cmpsl
aas
xor
in
pop
or
stc
mov
repnz
mov
add
push
pop
cmp
xor
in
sbb
jb
popf
subl
mov
add
cli
test
mov
xor
xchg
subb
jnp
pop
iret
mov
cmp
inc
mov
aad
xor
sbb
or
lret
jb
out
mov
xor
jmp
in
add
jmp
scas
dec
arpl
xor
mov
insl
add
xlat
icebp
lock
cmp
js
bound
shlb
call
sti
out
add
mov
cmc
sub
ror
mov
loope
fists
nop
push
sub
js
dec
jp
in
mov
popa
jne
cli
rcrb
test
adc
xchg
inc
in
adc
scas
test
jb
mov
pop
mov
jns
ja
inc
inc
or
sub
outsb
clc
push
jb
fwait
imul
flds
mov
xchg
mov
xchg
lds
fidivrs
cltd
dec
cmp
orb
out
mov
xor
and
loopne
xchg
push
jge
xchg
add
ret
mov
mov
mov
shr
mov
adc
aas
adc
js
shrb
jmp
mov
cmp
js
ret
mov
sbb
xchg
aam
sahf
mov
mov
push
push
xor
fbld
push
rclb
jl
test
mov
icebp
fwait
jnp
insl
adc
lods
int3
jecxz
or
mov
jmp
and
aad
adc
mov
cwtl
sti
decl
jl
imul
loop
jmp
ret
adc
adc
push
scas
js
aaa
dec
jbe
mov
fidivl
mov
call
push
push
fistpll
pop
mov
mov
lock
xor
int3
xlat
or
push
fidivrl
aam
outsl
je
inc
jo
pop
fcoml
insl
jo
movb
lcall
pop
imul
push
insl
lcall
cwtl
lahf
and
pop
rorl
or
dec
sub
test
cmpsb
xor
mov
out
mov
call
push
ret
push
mov
adc
aaa
movups
xchg
xor
ds
fdivs
jns
xchg
pop
dec
jne
add
fwait
idivb
inc
mov
add
mov
clc
call
ja
xor
push
or
sub
or
test
inc
movsl
test
stos
pop
mov
insl
add
add
jp
adc
movsl
ror
dec
out
sub
cwtl
fdivs
pop
xchg
dec
repz
cmp
lock
xchg
push
fldt
mov
insb
and
cmpsl
pop
pop
pop
add
xchg
mulb
nop
or
push
jmp
adc
mov
shrl
xchg
sub
jmp
out
cmp
mov
or
imul
push
sub
mov
sub
aas
lret
jb
push
fwait
out
xchg
mov
or
movsl
pop
jne
lret
das
dec
lods
sbb
orb
push
mov
stc
mov
ficomps
inc
mov
ret
or
adc
mov
lret
addb
cld
outsl
ljmp
jo
lock
add
les
and
mov
fstpt
incb
out
pop
fsubs
dec
cmp
sub
movsl
lock
jns
ss
pop
sbb
call
sub
add
or
xchg
insb
fs
xor
dec
das
loop
pop
adc
mov
jns
je
cmp
fs
sbb
test
repz
jecxz
sub
addr16
imul
inc
mov
fsubr
insl
mov
inc
dec
jae
or
jg
lock
roll
aas
fwait
xchg
aaa
jle
loop
lret
dec
sti
scas
cmp
bound
mov
das
or
in
rolb
scas
loop
push
fistpll
mov
jbe
out
in
mov
aaa
data16
in
mov
daa
xor
inc
call
or
pop
lret
xor
repz
and
rcll
inc
or
dec
out
jp
iret
push
imul
sahf
arpl
xlat
fists
std
stos
sbb
mov
or
jmp
sti
cmp
push
sbb
pop
mov
xor
aas
ja
mov
cmpsb
mov
push
push
push
and
ret
ja
fsubp
cmp
cmp
aaa
ret
ljmp
outsb
ret
adc
xchg
pop
rorl
sbb
arpl
stos
mov
movsl
stc
popf
mov
lret
ffree
jbe
mov
lret
std
stos
andb
push
jns
and
add
scas
add
and
out
inc
mov
mov
fidivrs
rorl
push
mov
test
add
lods
add
fldt
mov
shll
fsubl
mov
jo
push
ret
jnp
add
loope
fwait
cli
push
mov
cwtl
and
cld
mov
jp
sahf
push
ficompl
out
jg
and
lock
cli
movsb
fsub
mov
je
mov
xchg
mov
imul
jmp
repz
pusha
add
mov
mov
enter
lods
jmp
xor
mov
sti
test
sbbl
sbb
or
xorb
movsl
xchg
mov
ljmp
out
xor
push
mov
div
int
pop
sub
cmp
inc
lods
inc
add
imul
lret
out
xor
or
cmpsl
lret
je
shl
test
jle
leave
jo
imul
sub
mov
push
mov
jmp
in
jl
push
xor
aad
jmp
in
jne
fnstsw
mov
cmp
dec
mov
fildl
test
inc
mov
imul
out
cmpsb
mov
mov
adc
ret
adc
in
jg
repnz
jae
pushl
in
mov
xchg
sbb
push
insb
cli
test
xchg
jp
mov
loopne
lods
xchg
jbe
ror
in
ret
inc
xchg
or
xchg
lods
std
and
aas
mov
adc
adc
scas
pop
lods
add
jbe
icebp
dec
out
aaa
pop
add
int
shl
clc
push
in
aas
inc
mov
jge
ret
dec
jmp
xchg
cmp
inc
test
xor
repnz
mov
pop
cmp
into
push
xor
nop
stos
test
mov
int3
push
or
add
push
data16
and
mov
call
repnz
cmp
push
sahf
jmp
mov
cmp
fldcw
sub
int
popf
mov
dec
fimull
pop
je
xlat
leave
jae
mov
add
cmp
add
cmpsb
test
adc
fsub
dec
inc
lods
sbb
ficomps
jle
mov
mov
push
fisttpll
dec
or
xlat
shl
add
les
fs
popf
in
fisttpll
mov
fistps
adc
sti
lods
mov
ror
mov
sbb
add
push
fldt
cmp
fwait
int
lds
pop
jne
sub
in
adcb
nop
cs
in
and
das
push
data16
push
pop
push
and
mov
aad
mov
jl
lahf
outsl
adc
in
das
in
imul
test
sub
movsl
jmp
lea
sbb
outsl
ficompl
add
mov
jmp
add
xchg
xor
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
jmp
shrb
push
sbb
mov
inc
notl
adc
lds
jae
popf
push
outsb
and
push
mov
adc
fsts
mov
lret
mov
sahf
es
jno
mov
add
sub
les
sub
push
stos
shrl
int
js
jbe
adc
adc
add
hlt
push
pop
or
sub
inc
insl
test
pop
push
push
mov
lret
xor
jmp
data16
mov
lea
mov
xchg
loop
or
adc
dec
inc
rorl
jge
icebp
push
sub
enter
pop
dec
mov
jae
movsb
bound
addr16
xor
dec
test
iret
out
dec
mov
dec
stc
js
movl
shl
jge
push
push
add
lcall
pushf
enter
aad
pop
sub
mov
adc
test
inc
jmp
gs
or
je
fisttpll
or
cmp
cmp
int
jo
adc
jo
fs
movsl
es
add
movsb
leave
push
mov
xor
or
dec
mov
mov
mov
jnp
rol
xlat
jae
pop
call
outsl
movsb
inc
subl
adc
movsb
push
lcall
sbb
mov
pop
test
push
cmp
mov
lds
push
cli
dec
adc
mov
fimuls
imul
sahf
jbe
jecxz
out
in
nop
push
lahf
sahf
cmp
rclb
or
cmp
sarl
push
xor
dec
push
add
inc
mov
push
pop
adc
leave
sub
fsubrp
testl
fadd
jle
pusha
aas
or
lahf
xchg
jge
inc
sbb
vphadddq
jg
push
or
pop
popf
push
lret
mov
mov
jbe
cs
inc
inc
fwait
popa
push
cld
inc
int
cmp
jo
movd
mov
add
push
add
mov
xchg
cmp
mov
jl
mov
mov
or
or
scas
cmp
mov
inc
and
nop
xchg
sbb
or
mov
and
xchg
lcall
out
pushf
push
adc
fildl
gs
or
aas
sarl
push
lds
xchg
enter
jnp
inc
push
inc
sub
subl
lea
les
in
cs
shrb
jge
and
imul
dec
pop
cltd
test
sar
push
xor
add
mov
jg
and
lock
sbb
cmp
add
enter
add
jge
push
add
inc
lret
add
notl
enter
leave
dec
fcoml
mov
imul
rclb
cmpsb
xchg
scas
xchg
sbb
int3
dec
je
dec
pop
outsb
out
mov
test
das
push
xor
scas
sbb
sahf
lret
loop
cmp
xor
adc
sbb
adc
jne
dec
xor
jge
xchg
shrb
fisttpl
stos
pop
and
movsb
push
out
pop
sbb
and
loopne
bound
cmpsb
insb
shlb
shlb
pop
lock
mov
stos
or
out
out
inc
movsb
push
push
push
scas
scas
loop
jo
mov
in
or
out
pop
adc
pushf
cmc
inc
xchg
xchg
pop
dec
out
mov
or
fbstp
jl
arpl
add
or
lcall
xlat
pusha
xchg
jp
xchg
in
sbb
popa
insb
imul
sub
bound
lahf
clc
cmp
add
lods
xor
les
xchg
xor
add
out
add
shlb
jg
andb
sub
sahf
aad
int
lret
push
ja
sbb
imul
lret
mov
aas
adc
in
clc
cmp
cmpb
add
lret
cmp
push
daa
mov
push
fistps
or
and
xor
lods
sub
or
xor
cmp
push
in
sub
pop
add
and
add
push
outsb
or
loope
push
int
push
dec
repz
ret
pop
adc
cmp
repz
cmp
xlat
mov
jp
jmp
xchg
mov
out
dec
out
push
cltd
test
lods
cltd
pop
jb
sbb
out
rolb
loopne
and
out
and
push
out
dec
movsb
sub
jo
ret
inc
cmp
fs
int
pop
adc
js
aaa
xchg
and
fists
mov
into
cmp
repz
or
and
mov
mov
std
pop
stos
push
or
push
fsubrs
pop
sbb
sbb
rcll
dec
in
adc
pop
rcl
ret
jg
loop
lahf
das
mov
popa
std
push
fldl
xor
movsb
cmp
popf
js
sbb
outsl
push
or
push
cmp
out
fiadds
out
insb
std
imul
addr16
lcall
cmpsb
fidivrl
mov
and
adc
aad
cmp
sub
sbb
jge
add
mov
loop
jp
pop
sbbb
lcall
or
jae
bound
mov
aam
mov
shlb
xor
add
aaa
iret
movsl
mov
ljmp
xchg
ret
aas
orl
dec
dec
idivb
imul
jp
jb
dec
mov
arpl
in
ficomps
jno
push
aas
daa
movsb
xchg
mov
add
sbb
inc
js
or
xchg
inc
les
mov
loopne
xchg
jbe
aaa
dec
ret
xchg
push
daa
fisubl
daa
jo
cmpsb
mov
xor
and
xchg
ret
mov
movsl
pop
jl
scas
push
mulb
icebp
push
jecxz
sbb
jecxz
out
cmc
sub
fisttpll
aas
mov
sahf
shrb
ljmp
pop
ret
scas
cmp
mov
ljmp
in
imul
dec
pand
into
sbb
push
xchg
sbb
xor
sub
push
pop
iret
sbb
imul
cwtl
lcall
shll
pushf
xor
dec
jno
or
les
rcll
add
sub
into
mov
cmp
sahf
in
shll
int
fsubrs
decb
pop
je
call
rorb
or
cmp
adc
ret
fisubl
leave
shrb
push
push
mov
jge
stc
cmp
add
xchg
pusha
imul
push
test
dec
inc
ss
mov
jne
and
push
push
jne
or
xor
sub
enter
iret
insl
jg
xchg
testl
mov
jg
jg
lret
pop
push
pop
xchg
dec
inc
int3
add
mov
mov
sub
jno
mov
iret
sbb
push
scas
sahf
js
push
and
jecxz
test
push
sbb
adc
dec
das
stos
dec
outsl
daa
dec
mov
mov
pop
movsb
ret
into
mov
out
inc
sub
cmp
in
dec
rcl
dec
mov
adc
dec
pop
xchg
gs
repnz
loop
sbb
incb
dec
fdivl
xchg
mov
mov
xchg
jno
mov
jb
lcall
xchg
lods
add
repnz
xchg
cmp
jmp
pop
push
cmp
add
mov
add
sti
leave
std
ja
test
lods
add
xor
xchg
xlat
int
fldcw
jp
mov
icebp
inc
lods
ds
mov
sbb
cwtl
cwtl
push
stos
or
hlt
addl
in
adc
add
adc
std
fildll
push
adc
lret
push
shlb
or
push
mov
test
arpl
hlt
sub
imul
pusha
inc
and
stos
jno
sbb
leave
mov
add
ds
xor
mov
cwtl
in
or
insb
shl
mov
int3
fldt
mov
xchg
int3
rcl
mov
dec
lret
aam
pop
fidivl
mov
stos
and
inc
and
dec
inc
and
inc
push
sub
ss
cmp
jp
inc
movsb
lcall
aaa
inc
popf
repnz
dec
subl
adc
aas
fsubr
std
jmp
push
xor
loop
or
aad
rolb
xchg
and
sub
leave
mov
hlt
sbb
sub
add
dec
hlt
pop
shlb
out
mov
aas
mov
mull
lods
popa
jge
xor
jp
in
notb
lahf
push
in
pop
mov
rcrl
pop
push
lea
sahf
xchg
jno
mov
or
in
cmp
sbb
sbb
fdiv
into
repz
int
sti
pop
jge
inc
fidivrl
js
dec
lea
jo
pop
ret
ljmp
out
dec
movsb
insb
sbb
test
and
xchg
cmp
xchg
movsb
scas
pop
push
cld
loope
mov
movsb
ret
insl
jno
or
pushf
inc
cli
popa
cmp
hlt
pusha
movl
mov
aam
iret
roll
xchg
sub
imul
jl
cmp
sbb
out
xor
dec
jbe
imul
dec
xchg
jl
mov
sbb
jmp
lret
xchg
xor
xchg
out
insb
inc
imul
cwtl
insb
rcrl
test
xchg
xchg
iret
jae
push
shrb
mov
push
or
negl
lds
ss
dec
not
inc
or
mov
pop
push
mov
cltd
pop
aas
data16
repnz
test
mov
aaa
mov
pop
add
xchg
mov
fisubrl
dec
jno
out
call
data16
mov
adc
xchg
arpl
lea
in
sub
popf
in
pop
js
mov
lahf
hlt
jge
inc
xchg
je
popf
xor
or
stc
dec
adc
xor
pop
and
in
sub
pop
idivl
data16
add
popf
aad
and
jl
adcb
pop
lds
pop
jp
xor
ret
stc
clc
outsb
cmp
sub
pop
cmp
aam
addl
test
mov
cmp
jecxz
add
mov
roll
xchg
jl
mov
out
jno
mov
in
in
loopne
or
push
sub
inc
ja
dec
push
xchg
sub
in
or
cs
cld
mov
andb
lahf
and
adc
cmp
loop
mov
and
mov
mov
or
or
rcll
repnz
xlat
push
movsb
xchg
push
jg
loopne
push
repz
push
int
push
ret
jmp
dec
lcall
nop
jmp
adc
and
mov
adc
pushf
loop
add
int
sbb
jecxz
dec
or
cld
mov
jae
mov
ds
idivl
clc
xchg
lods
in
filds
cmp
adc
and
xor
and
xor
loop
dec
xchg
das
xchg
stc
pop
cmp
pop
aam
jo
jnp
cmp
cs
sbb
mov
mov
int
ljmp
ss
fistpll
imul
jmp
sub
cmpsl
inc
fcomi
push
add
mov
mov
fildl
push
sbb
add
ret
mov
push
rdpmc
fadds
stos
mov
addr16
iret
pushf
insl
loope
ficoms
movl
loope
mov
pop
lock
dec
or
adc
divb
dec
and
icebp
decl
mov
mov
pop
mov
jo
sbb
cs
pusha
subl
xchg
ret
or
fwait
cmp
lea
outsl
aas
xchg
sbb
adc
mov
stos
or
adc
pop
xor
aaa
sbb
pop
fiadds
push
ds
in
push
mov
xor
push
xchg
jae
push
mov
fisubs
jae
fidivs
pusha
mov
ret
repnz
push
push
loopne
lods
jnp
xor
movsl
imul
cmp
dec
inc
inc
mov
and
pop
xchg
sbb
faddl
add
loopne
into
dec
call
pop
mov
mov
imul
adc
xor
add
mov
and
clc
data16
bound
sbb
callw
and
mov
jmp
jnp
mov
dec
jl
sbb
loop
test
mov
mov
idiv
xor
and
push
inc
in
ss
bound
pop
pop
sbb
xor
mov
xchg
sbb
push
xchg
arpl
mov
test
in
mov
sbb
mov
pop
mov
adc
into
push
xor
mov
enter
scas
mov
pushf
test
mov
lret
fistpll
int
dec
movsb
pop
add
jno
shll
pop
rorb
xchg
loop
adc
cmp
push
pop
dec
mov
dec
mov
add
ret
aaa
int
movsl
adc
xchg
xor
gs
dec
cmp
jb
aam
ljmp
adc
adc
xchg
mov
sbb
jecxz
fiadds
adc
jo
mov
push
and
sahf
dec
push
sub
stos
add
in
aad
xchg
cmp
stos
adc
xchg
aaa
cmp
sub
push
insl
in
push
pop
mov
scas
arpl
daa
dec
jmp
rcrb
or
push
insb
cmp
sti
stos
or
pop
fnstenv
or
inc
dec
adc
jecxz
and
inc
das
lret
dec
mov
jmp
pop
mov
adc
xchg
dec
fs
outsl
add
inc
sbb
adc
push
int3
add
adcl
jmp
or
insb
and
bound
dec
vpmullw
xor
dec
push
inc
lock
pop
cs
xor
cltd
test
adc
int3
ficompl
adc
incb
pushf
cmp
push
lret
xlat
iret
adc
cs
xchg
loop
jnp
and
or
outsb
mov
loope
adc
in
popf
shlb
lahf
push
insl
nop
add
sahf
xchg
nopl
lea
dec
adc
pop
pop
imul
jns
pusha
mov
aam
push
sub
jnp
jp
mov
and
aam
inc
repz
sub
fcomps
pop
mov
and
and
jmp
mov
gs
jg
inc
ja
fwait
sub
mov
and
xchg
jge
sub
aad
or
push
jge
jb
pop
mov
movsl
loopne
xchg
jmp
es
jb
insl
adc
into
out
cs
xchg
loopne
loopne
inc
mov
sbb
lret
mov
hlt
add
xchg
mov
mulb
jp
fldl
cmp
test
mov
sti
fs
mov
push
hlt
lock
pop
clc
leave
sbb
sub
push
pop
mov
cmpsl
mov
fstl
jge
and
mov
jle
mov
cld
in
aas
cs
add
fs
jno
mov
mov
sbb
imulb
es
xchg
int3
add
les
sbb
sub
icebp
clc
cmp
pop
lahf
cltd
xor
scas
xchg
mov
sbb
das
es
sub
xor
push
jl
shrl
arpl
push
lahf
xor
mov
fldt
jbe
lahf
fcoms
fisubs
sbb
or
shlb
out
adc
out
adc
aas
mov
dec
rolb
pusha
cmp
xlat
stc
jge
adc
cmp
jns
jecxz
and
mov
or
mov
icebp
mov
out
cmp
fimull
cmp
pop
icebp
inc
cmp
lret
lea
pop
lret
lods
dec
stc
orb
sbb
jecxz
rcr
repnz
mov
jns
cmp
pushf
inc
cmp
xor
std
or
cmp
push
scas
sub
ret
xor
sbb
pusha
sub
lcall
adc
jmp
push
mov
cmpb
cmp
xor
pop
dec
mov
sbb
push
in
cmp
pop
rorb
push
mov
daa
in
adc
mov
jg
and
xor
mov
into
pop
hlt
cld
jmp
and
xchg
pusha
cmpsb
out
js
insb
rcll
sub
add
mov
dec
xchg
fsubl
mov
fcomp
sbb
mov
push
daa
pop
in
cmp
dec
lea
pushf
mov
cmp
sbb
push
push
mov
fs
jge
push
mov
std
xchg
aam
test
int3
cli
aad
jge
pop
rorl
sarl
fnstcw
dec
dec
in
lahf
out
test
pop
pop
cmp
pop
sub
adc
out
adc
insb
ret
inc
repnz
sub
inc
mov
inc
dec
cltd
cmp
adc
cmp
loop
mov
cmp
mov
pusha
in
or
jnp
sub
fst
inc
outsl
in
cmp
cmp
xor
adc
clc
clc
decb
imul
ret
mov
pop
pop
inc
pop
loopne
jmp
inc
mov
jge
cmpsb
add
ljmp
arpl
sbb
ds
mov
sbb
das
add
push
lcall
fs
cmp
jmp
sbb
inc
dec
xchg
sub
aam
sub
and
jge
ss
imul
mov
jp
push
aam
stos
dec
dec
mov
jne
in
addl
cmp
or
push
adc
sbb
inc
rcrb
cltd
cltd
sub
mov
fisubrs
or
movsl
bound
loopne
jp
xchg
mov
fs
and
inc
jl
sbb
je
or
dec
pushf
sbb
sbb
cld
dec
mov
add
lock
cmc
jmp
test
in
cli
add
or
sbb
aas
mov
push
test
lret
dec
roll
das
push
aaa
sbb
inc
lcall
mov
mov
inc
pop
cmp
imul
xor
movsb
push
jne
xor
in
mov
push
hlt
add
adc
cltd
movl
loop
add
ljmp
jp
in
dec
xor
mov
adc
xchg
mov
mov
mov
es
ret
xchg
outsl
mov
and
dec
jge
xlat
add
inc
add
mov
das
pop
or
es
sub
cwtl
test
push
mov
mov
out
in
dec
adc
icebp
cs
and
inc
imul
dec
push
loop
lahf
push
lods
mov
sbb
adc
add
lods
inc
push
push
cmp
sbb
mov
xor
call
imul
imul
mov
addr16
push
stc
push
mov
mov
aas
cltd
xor
cmpl
sahf
fdivl
cltd
fwait
xchg
mov
jge
mov
sahf
sub
adcb
and
push
mov
rcrb
jnp
dec
xchg
jg
dec
push
rcll
or
lds
sub
xorl
rolb
test
xor
or
gs
in
das
mov
pop
sub
scas
or
fcoms
xor
call
daa
push
mov
in
aam
pop
adc
and
in
testl
add
popa
inc
in
push
add
mov
mov
fdiv
ret
dec
repnz
adc
outsl
daa
cmpsl
icebp
or
test
and
outsb
outsl
jns
ficompl
aaa
mov
ds
add
jl
pushf
inc
sub
sub
mov
fldl
mov
xchg
test
ret
movsl
add
push
mov
shlb
xchg
ljmp
dec
inc
sahf
push
and
insb
add
cld
lock
int3
cmp
adc
inc
in
cltd
add
mov
pop
clc
fsub
shll
div
push
push
xor
push
hlt
pop
dec
mov
sbb
repnz
imul
jle
pop
out
jne
and
xchg
into
cs
ret
std
xchg
loop
int
out
cmpsb
or
cmc
mov
es
cmpsb
dec
ret
jl
xchg
lea
sti
dec
fneni(8087
dec
mov
and
fldt
test
xchg
cs
cmc
aam
cli
or
in
roll
stc
add
push
mov
or
in
insl
mov
dec
xchg
or
push
mov
adc
in
xor
imul
in
aad
arpl
push
pop
testb
adc
sbb
stos
out
ss
fs
sub
lds
adc
pushf
jl
clc
ja
ja
push
mov
out
pushf
xchg
jl
jno
enter
lret
cmpsb
adc
js
call
mov
xor
xor
repnz
xor
xor
and
pop
cltd
loop
mov
mov
add
inc
movb
push
mov
fsubrl
sub
pop
cs
int3
test
les
aad
mov
mov
or
xchg
mov
leave
fwait
push
mov
push
xchg
push
stos
inc
daa
insl
xorl
add
sub
pushf
fidivs
int3
dec
data16
and
sbb
mov
fadd
shlb
dec
out
iret
jnp
mov
pop
les
cs
and
into
sbb
add
movsl
adc
or
sub
ror
mov
movsb
adcb
and
sub
into
adc
sahf
pop
and
mov
ljmp
test
inc
jmp
adc
xchg
jnp
jo
lods
sbb
sub
push
out
shrl
aad
in
subb
sbb
imul
or
xchg
push
sbb
out
rcrl
int
mov
mov
into
sub
sbb
ret
cld
push
sub
pop
pop
xorb
push
adcb
loope
cmc
repz
ret
inc
shl
or
pushf
iret
xor
inc
adc
stos
mov
add
xor
pusha
sbb
loopne
inc
mov
in
mov
repnz
and
loop
fdivrp
fnsave
test
out
mov
daa
jns
sbb
jmp
imul
inc
cld
in
add
and
cmp
mov
push
repz
imul
mov
outsl
jnp
js
xchg
faddl
or
dec
push
push
xor
in
movd
push
aad
or
mov
inc
pop
andb
mov
ja
xchg
cmp
sbbl
add
dec
dec
push
xor
push
faddl
repnz
sub
and
popf
dec
rolb
and
into
push
out
mov
cltd
jmp
xchg
jmp
cmpsb
jno
jb
push
sbb
outsl
popf
shlb
movsl
sub
sub
jmp
jnp
cvtps2pd
dec
mov
and
dec
push
call
pop
fs
dec
fwait
mov
hlt
in
xor
mov
dec
loop
fldt
adcl
dec
popa
mov
push
cli
sbb
mov
push
shll
cmpsl
arpl
mov
cmpsl
out
jecxz,pn
pop
lahf
nop
mov
xchg
jl
daa
std
aam
call
inc
xchg
jno
cmpsl
dec
dec
sbbl
and
cmp
push
out
and
fldenv
pop
jns
aad
jecxz
repnz
xchg
inc
divl
aas
data16
push
and
mov
fimuls
stos
pop
or
mov
lds
xchg
push
adc
and
repz
into
jle
adc
popf
jmp
test
mov
negb
jae
iret
cmpsb
in
shll
lds
xchg
cmpsb
and
inc
push
cmp
mov
jbe
in
add
add
dec
xchg
test
rorl
adc
xor
pushf
stc
add
and
inc
jo
in
dec
loopne
mov
movb
test
fstl
inc
inc
stc
lahf
mov
xchg
lock
inc
sub
pushf
andl
rclb
jp
xchg
push
scas
sbb
fwait
xlat
xchg
cmpsl
push
and
cmp
jmp
mov
push
inc
fsubr
les
shll
mov
call
or
repnz
je
pop
sbb
pop
jl
ljmp
int
mov
rcr
pop
movsb
mov
lcall
dec
xchg
psubq
xor
jo
dec
lret
inc
es
mov
pop
fs
iret
or
jmp
xchg
or
lcall
inc
cltd
rcl
push
or
sbb
clc
mov
daa
pop
mov
and
xor
mov
xorl
xchg
mov
xchg
outsb
pop
mov
jno
pusha
push
outsb
push
andl
xor
int3
es
jecxz
cs
push
out
jns
ficompl
repnz
lret
cmc
inc
movsl
pop
movsl
pop
adcb
jle
insb
aas
mov
loop
fs
jne
aam
fimull
leave
dec
jle
dec
sub
cltd
and
mov
cmp
call
lods
adc
add
aad
cmp
fidivl
pop
ss
dec
cmc
hlt
lods
add
aad
adc
cli
fildl
mov
mov
push
test
xchg
popa
mov
and
inc
dec
add
test
outsl
scas
in
xchg
xorl
push
mov
in
mov
fisttpl
sbb
sub
mov
rclb
push
subb
dec
sub
push
loop
sub
mov
xchg
jp
cltd
and
pop
sti
sbb
or
push
xchg
rcrl
jge
push
or
movsb
mov
add
imul
and
lea
jnp
repz
push
mov
push
jns
ret
jnp
inc
lock
ss
imul
mov
pop
imul
add
sub
mov
in
sub
dec
and
push
loopne
xor
mov
xor
or
fisttps
cmc
int3
adc
shll
sbb
pop
cltd
add
xchg
dec
xchg
inc
cmp
or
es
or
mov
jbe
mov
je
sbb
push
nop
shlb
jbe
sbb
inc
imul
fisttps
or
sti
add
es
mov
pushf
cmp
xchg
and
test
loop
add
inc
adc
mov
das
hlt
push
mov
push
sub
stos
jge
push
xchg
mov
and
adc
call
jecxz
imul
shrl
inc
fistpll
test
mov
ret
ds
out
addl
mov
loope
scas
pop
aad
and
sbb
push
into
aaa
mov
inc
into
mov
add
xor
std
lea
and
pop
xchg
mov
lret
adc
xor
outsb
shlb
test
adc
pop
sub
xor
aas
or
stos
stos
push
ss
and
out
popa
fiadds
scas
out
notl
sbb
insb
xorb
sub
rorl
dec
xchg
les
jnp
jecxz
bound
aas
jp
stc
ljmp
outsb
adc
test
arpl
push
pop
cli
mov
dec
jge
stos
sub
aaa
fwait
jmp
lret
lahf
fcoml
ss
daa
xlat
aaa
std
andl
sbb
or
stos
in
add
push
jb
fcoms
mov
lcall
sti
out
cmpsl
bound
inc
pop
ds
mov
push
mov
mov
lret
stos
mov
in
add
sub
stos
ret
leave
dec
repz
rclb
sbb
xor
ret
dec
inc
punpckldq
mov
mov
pushf
pop
mov
mov
aaa
mov
lret
mov
cmp
fdivrs
dec
inc
popf
pop
sub
cmp
movsl
pop
dec
push
rolb
cmp
pop
iret
cwtl
mov
aaa
mov
sbb
pop
hlt
test
sti
cmp
pop
jp
out
decb
test
dec
dec
out
es
pushf
sub
pushf
cmpsl
jnp
adcl
lret
add
pop
mov
pop
xchg
out
or
jge
xor
int3
or
push
and
jnp
je
sahf
sub
push
push
icebp
pop
mov
test
pop
nop
cmc
sbb
mov
test
out
loope
inc
test
sbb
lods
in
cmc
cltd
ds
stos
xorl
jo
pop
jo
or
repnz
add
add
mov
sub
std
clc
repz
ret
mov
mov
test
push
mov
lret
lcall
mov
add
ss
mov
pop
sbb
mov
inc
fsubrp
fucomp
xchg
stos
lea
lahf
push
mov
outsb
add
mov
push
push
or
adc
push
aas
mov
add
and
aam
pop
out
incl
test
pop
xor
pushf
lahf
mov
stc
jbe
hlt
enter
or
cli
mov
and
push
add
ret
sub
jmp
test
test
sub
aam
fcoms
aas
enter
scas
in
and
into
and
push
add
or
into
push
cmpsb
je
in
mov
xor
push
int3
stc
jmp
sub
and
mov
ds
sbb
iret
sahf
or
lods
adc
and
jg
cmpsl
insb
in
out
xlat
push
out
cld
or
enter
push
sbb
fcmovne
fiaddl
pop
pusha
movsb
mov
call
add
mov
decb
xchg
sbb
dec
xchg
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
shr
ret
mov
xor
addl
and
shr
ret
jmp
mov
and
loopne
mov
fs
mov
adc
adc
pop
cmp
fistps
cli
sbb
xor
lahf
fbstp
adc
outsb
jae
jle
dec
shr
xor
outsb
mov
mov
aaa
decb
rorb
rcl
int3
sub
and
mov
mov
pop
push
dec
in
dec
sbb
mov
inc
inc
sarl
nop
aam
popa
adc
push
mov
je
inc
inc
loop
xchg
test
cmp
inc
imul
inc
fdivl
mov
cmc
pop
xor
sti
mov
push
push
adc
jl
nop
fldt
inc
bound
mov
scas
inc
xor
ffreep
jno
xor
cwtl
xchg
fwait
jl
mov
mov
jle
lcall
xchg
int
ss
out
jnp
sbb
mov
stos
cmpsl
mov
shlb
jl
sbb
inc
sbb
sbb
xchg
pop
sub
cltd
jne
movsl
clc
std
mov
and
dec
in
ss
fs
lds
xor
and
ret
push
sub
dec
repnz
adc
sub
cwtl
xor
rorb
push
pop
push
add
pop
inc
add
popa
ja
jmp
inc
pop
bswap
into
cld
je
test
cwtl
scas
xchg
cmp
out
mov
push
rolb
ja
sbb
lret
iret
push
sbb
pop
inc
xchg
cmp
sahf
enter
imul
xchg
dec
sub
jmp
mov
ds
nop
in
or
loopne
add
push
out
aam
lret
jecxz
inc
lds
mov
out
add
stc
popf
or
cltd
insl
jmp
addb
or
xchg
jg
xchg
pop
and
cmp
mov
in
aam
adc
daa
adc
mov
inc
test
mov
in
adc
aas
cmpl
imull
push
cmp
clc
adc
inc
scas
stos
push
insl
and
mov
enter
lahf
inc
cmp
outsb
shlb
jecxz
jmp
sbb
xor
cmp
sub
roll
outsl
add
mov
pop
into
cmpsl
sub
cmpsb
imul
cli
movsb
cmc
cmp
inc
rcl
or
sub
hlt
push
stc
jae
adcl
sbb
popf
mov
xor
pop
cltd
les
dec
adc
adc
das
add
xchg
aaa
loop
in
sub
push
les
pop
jmp
pop
int
nop
mov
add
lods
orl
rcll
add
dec
in
push
shrb
lods
test
iret
bound
out
inc
dec
push
hlt
lock
insl
mov
and
leave
leave
add
push
ret
jecxz
pop
mov
xor
orb
std
mov
sti
popf
mov
subl
movsl
popa
out
sarl
shl
pusha
push
stos
sbb
sti
ss
aam
cmp
adc
hlt
jl
sub
jno
and
lea
inc
std
push
repz
pushw
inc
mov
sysretw
into
xlat
mov
xor
add
pop
pop
mul
ds
mov
outsl
outsb
jle
lods
fcmove
addb
jmp
sub
jo
xchg
add
sub
stc
ret
pop
mov
push
add
testb
leave
loop
in
jnp
or
jmp
push
push
sbb
les
lret
sarb
js
sub
lcall
stos
adc
popf
mov
or
insl
cmp
shl
inc
and
jns
ja
imul
mov
mov
jbe
dec
fwait
push
shll
lret
sti
rcrl
pop
push
sub
cmpsl
lock
test
leave
sbb
xchg
lret
sub
dec
testb
pusha
sub
push
cwtl
pop
mov
sbb
mov
mov
cmp
fbld
gs
lcall
pop
jle
mov
xchg
adc
movsl
shlb
jle
sub
push
mov
sti
and
sbb
mov
dec
imul
sub
mov
adc
sub
push
xor
pop
inc
mov
sarb
lods
aam
int3
xlat
lock
out
ror
sub
dec
pop
dec
test
xchg
nop
repnz
push
ret
pop
add
enter
mov
in
push
sbb
bswap
les
repnz
inc
sbb
aad
add
dec
dec
and
iret
loope
cmpsb
imul
lea
sub
mov
dec
outsb
jbe
test
mov
je
cmpsl
inc
jecxz
mov
or
out
cltd
or
imull
jae
fildll
mov
cmp
out
subl
jnp
call
in
dec
stos
push
fcmovb
add
es
jae
in
adc
jbe
and
adc
insb
adc
insl
push
jo
xchg
popf
call
test
into
es
cmp
insb
aas
out
xchg
pop
into
jmp
fucompp
dec
dec
pop
ja
pop
pop
addl
stc
push
lcall
pop
adc
add
rcl
mov
mov
and
add
mov
out
clc
sbb
push
pop
jb
xor
das
fsubrl
xor
cmp
and
adc
pop
rorb
fldl2e
push
es
div
out
imul
jl
dec
mov
lea
add
dec
sub
stos
adc
je
adc
or
stos
into
mov
xor
std
fistpll
sub
mov
push
fldenv
out
add
repz
cltd
call
mov
arpl
call
xchg
or
lret
lea
dec
mov
pop
lods
nop
sub
outsb
repz
je
insl
inc
loopne
push
push
or
add
hlt
push
into
xlat
fildl
pop
and
push
pmaddwd
jmp
cmp
push
sbb
hlt
jg
or
add
sbb
mov
push
inc
xchg
addr16
push
push
cmp
loope
enter
repnz
add
call
push
loope
inc
sub
add
or
jp
cmp
mov
push
push
xor
dec
loopne
xchg
lahf
or
and
call
ret
mov
hlt
outsb
sub
push
icebp
imul
xchg
adc
push
adc
cwtl
mov
shll
notb
fldt
xchg
cmc
jecxz
mov
sbb
adc
pushl
mov
into
insb
out
jo
sub
nop
mov
fiaddl
scas
and
ret
inc
lcall
das
stc
fdivr
outsb
jp
pop
cmpsb
fcmovnbe
cmp
cs
xor
ds
mov
mov
loopne
sub
push
cmp
push
sub
aaa
daa
adc
and
mov
call
jne
js
push
mov
xchg
popf
mov
sub
mov
sub
lock
lods
push
push
push
jb
sbb
imul
ret
movsl
cmp
decb
je
loopne
xchg
dec
pop
and
cmp
mov
jno
mov
mov
stos
bound
cmpsl
push
out
inc
or
push
rcll
das
pop
mov
push
mov
data16
push
pop
xor
mov
pop
orb
adc
lea
repnz
or
ja
sbb
cmp
aas
movsb
pop
and
lock
call
bound
sbb
aas
iret
ljmp
xor
gs
fwait
andl
mov
or
mov
ss
cmpsl
ficoms
push
jl
cmp
inc
lock
push
stc
ret
daa
jmp
mov
mov
fildl
cmp
xor
lock
xor
lcall
and
dec
aad
popf
jns
xchg
aas
fidivrs
or
xchg
fmuls
xor
mov
insb
leave
bound
cmp
mov
jle
xchg
inc
mov
cmp
ret
cltd
mov
inc
push
ret
popf
fisttpll
adcl
and
add
mov
insb
adc
dec
inc
push
inc
aad
add
push
mov
leave
sarl
adc
daa
in
outsb
clc
clc
out
cmp
xchg
ljmp
cli
out
imul
sti
fs
test
xor
xor
adc
cmp
stos
leave
stc
incb
cmp
add
inc
je
inc
xchg
cmc
sarl
lret
lahf
add
pusha
or
push
rorb
je
dec
sahf
fwait
pop
loop
jle
adc
stos
adc
add
gs
shl
jg
mov
cltd
aaa
mov
outsl
je
testl
adc
mov
mov
cmc
popa
pop
sbb
dec
push
sub
pop
jo
das
xor
fbstp
pop
sarl
xor
lret
arpl
hlt
mov
js
mov
push
lods
push
lret
jge
lds
lret
mov
push
fwait
in
imul
jne
lock
adc
test
sbb
jl
push
pop
xor
xchg
aam
dec
jg
cmpsl
jae
push
jmp
mov
or
mov
movsl
xor
sbb
or
sar
sub
mov
pop
mov
jmp
xchg
push
add
out
test
sahf
lods
or
popa
fcmovu
cmp
pop
adc
or
push
mov
jbe
mov
repz
mov
mov
pop
xor
and
jecxz
adc
mov
dec
in
test
fcompl
xchg
das
push
lods
or
roll
sub
xchg
test
pop
mov
add
sub
mov
sub
jmp
imul
stos
dec
jno
xchg
push
mov
rcrb
repnz
add
push
mov
es
fcmove
or
out
lret
add
stc
or
mov
adc
or
adc
stc
in
xchg
adc
daa
je
mov
mov
test
insb
dec
cmpsb
cld
sbb
bound
test
andb
push
fimull
test
stc
lea
or
repz
ss
and
sbb
lret
dec
lods
mov
les
int3
out
movsb
sbb
in
push
mov
movlhps
add
sbb
mov
cmp
pushf
lret
sub
test
adc
xchg
mov
or
push
popf
or
push
stos
mov
mov
or
je
xor
into
mov
js
add
cltd
xlat
pop
repnz
jbe
pop
push
mulb
adc
xchg
fucomi
push
js
xchg
xchg
pusha
shrb
test
fiaddl
and
vorpd
adc
mov
ret
or
sub
cltd
sbb
add
testl
xor
xor
movsl
je
xor
aaa
icebp
movsl
mov
cmpsl
inc
call
and
mov
mov
xor
pop
fiaddl
rcrl
xchg
clc
add
mov
test
mov
cmp
lock
inc
or
inc
xchg
jbe
inc
sbb
in
xchg
cwtl
push
dec
push
mov
cmpsb
jg
outsl
xor
arpl
cs
out
roll
loop
test
jne
int3
ret
pop
and
repz
sbb
and
sbb
inc
cmp
inc
pop
fistl
orb
adc
mov
daa
int
rorl
fcomps
fsubl
mov
jne
push
mov
out
ret
fldenv
add
nop
pop
repnz
jnp
loope
push
mov
dec
mov
cmpsb
ret
call
call
arpl
bound
jb,pn
fs
adc
mov
mov
xor
or
sbb
cmc
jge
cltd
in
fildll
and
mov
push
mov
fdivs
fwait
cwtl
insl
dec
push
mov
adc
std
mov
test
ljmp
inc
push
or
popf
push
stos
mov
ret
into
movsl
adc
rcll
fistpll
mov
rcrb
cltd
inc
inc
and
loope
and
adc
test
ret
lods
sahf
cmp
inc
call
xor
das
or
mov
mov
fimuls
adc
mov
ds
mov
push
orl
ss
mov
mov
and
and
pushf
and
gs
sub
sub
inc
cmp
and
cmp
cwtl
js
xchg
jmp
pop
out
movsb
ret
je
lahf
or
or
adc
mov
daa
push
insl
sub
movsb
ds
add
lret
ja
or
stc
outsb
fwait
cmpsl
or
imul
xchg
cmpsl
jmp
ret
or
mov
push
sbb
sub
push
xchg
aaa
sbb
arpl
ret
mov
pop
dec
push
push
xchg
mov
mov
xor
jnp
and
sbb
or
or
add
insb
out
sub
enter
lods
ret
mov
hlt
lds
cmp
push
and
je
mov
jecxz
inc
scas
out
sbb
pushf
mov
loope
arpl
in
xchg
push
and
add
in
sbb
daa
loopne
dec
out
mov
jle
iret
add
xlat
xor
push
outsb
cmpsb
aad
pop
push
mov
lret
popa
lods
loopne
fwait
sbb
inc
call
push
or
xchg
das
or
jae
mov
adc
aaa
popf
mov
inc
xchg
aam
xchg
push
mov
in
jno
cmpsb
int3
xchg
mov
stos
and
push
inc
js
and
cmpsb
inc
jmp
aas
int
shr
mov
cld
fsts
lods
loop
subb
rolb
pop
test
pop
ret
into
xor
and
jl
xchg
push
cmp
cwtl
dec
mov
call
jl
sub
sbb
xor
push
adc
pop
push
pusha
je
xor
cmpl
repnz
lcall
fisubs
popa
adc
xor
adcl
cmpsl
lahf
pop
pushf
inc
mov
push
push
imul
dec
dec
mov
scas
aas
push
scas
mulb
add
in
lahf
leave
sub
xor
push
icebp
cmp
lock
xchg
dec
aad
pop
mov
jp
jae
dec
rcl
mov
jle
xorb
scas
xor
stos
je
cmp
shrb
lret
cmp
dec
xor
cmp
es
sbb
pop
pop
insb
loope
cmpsb
mov
mov
and
ja
arpl
scas
in
repz
or
ret
sub
mov
dec
jns
cmp
sub
add
jl
mov
out
inc
sahf
sbb
bound
pop
cs
in
xor
shll
cmp
test
lods
lret
int3
sti
test
fucomip
jge
aam
jb
mov
cmp
jge
jns
pop
mov
xor
insb
stos
pop
gs
inc
jns
add
or
in
cmpsl
or
in
or
xchg
outsb
jge
into
pop
les
mov
int3
mov
and
aam
xchg
sbb
mov
push
mov
mov
inc
outsb
test
cmp
insb
int
cs
pop
cld
mov
lahf
xor
in
sub
stc
je
mov
cs
movsb
or
jg
sbb
mov
int3
dec
push
add
loopne
divb
add
pop
movsl
xorl
fidivrl
or
pusha
push
jle
stos
dec
jmp
mov
mov
out
sbb
dec
ret
mov
mov
mov
mov
ret
and
dec
jle
div
in
and
inc
mov
out
adc
ljmp
xchg
push
scas
and
cmpsb
dec
mov
xchg
jg
stos
test
imul
cmpsb
xchg
push
mov
and
sbb
sub
repz
mov
push
adc
and
and
out
in
movsl
jbe
mov
jecxz
or
stos
mov
sub
scas
popf
sub
adc
js
push
repz
shll
inc
xchg
fdiv
mov
shll
inc
es
psubw
lds
push
inc
cli
dec
test
outsb
sarl
cltd
nop
or
int
mov
mov
push
sahf
and
jecxz
sub
daa
xor
push
sub
or
jmp
popf
mov
lcall
mov
fnstsw
aas
xor
pop
and
scas
insb
test
add
jne
fldt
popa
out
jo
orl
jmp
sbb
fbstp
lock
adc
data16
in
cmp
repnz
and
jbe
pop
cltd
aam
daa
mov
sub
in
pop
in
in
stc
sbb
iret
and
push
inc
not
ret
lahf
xchg
imull
mov
xor
or
stos
in
jge
int3
add
mov
ljmp
mov
stc
arpl
test
or
stos
sarb
inc
pop
push
dec
xor
js
sbbl
pop
fistps
imul
mov
mov
dec
insl
aad
cmpl
push
ret
inc
mov
sti
push
mov
mov
jb
jne
add
sub
xchg
inc
mov
pop
push
or
dec
add
ret
ds
mov
add
push
fsubp
mov
faddp
push
lret
jno
cwtl
popa
mov
in
sub
xchg
loopne
loope
popl
sbb
in
sub
jae
mov
jmp
or
push
xchg
aas
cmp
lock
aad
mov
sti
fcomps
testb
arpl
int
pop
into
fwait
in
add
sub
fists
pop
sub
adc
add
mov
xchg
pop
mov
mov
sbb
push
sub
enter
cmp
getsec
in
lock
lock
jecxz
adc
scas
sub
fwait
popl
ja
mov
inc
mov
push
mov
xorb
add
imul
enter
inc
sub
lods
mov
add
sarb
out
push
push
pushf
mov
ljmp
out
sbb
adc
jge
mov
or
popf
mov
sub
add
test
sbb
fdivs
jno
xchg
mov
push
fildll
shll
sbb
mov
insb
aam
mov
movsl
sub
mov
andl
fnsave
adc
inc
sti
xor
and
mov
mov
jb
xorb
fbld
fs
inc
dec
pop
sbb
lock
jne
adc
insl
in
enter
orl
nop
sub
jne
mov
push
sub
sub
lahf
popf
je
test
scas
jbe
imul
or
add
and
nop
inc
loop
sbb
dec
sbb
leavew
push
movsb
mov
jecxz
xchg
cmp
inc
xor
mov
int
xor
data16
lds
out
insl
les
ja
sbb
mov
push
jns
mov
or
in
sbbl
movb
movsl
cmpsl
dec
ds
push
nop
xor
mov
test
pop
push
push
sub
push
aaa
sbb
shlb
xchg
lock
test
aaa
adc
lahf
mov
xchg
jae
dec
lods
jecxz
and
sbbl
arpl
sub
sub
xchg
out
mov
xor
lret
les
cld
cmpsb
lods
inc
jmp
cmp
xchg
jns
pop
clc
cmc
push
mov
movsb
fists
imul
mov
mov
orl
push
cmp
lcall
mov
dec
or
push
in
or
add
inc
dec
lahf
sub
lods
mul
cmc
mov
stos
mov
cmc
fwait
rcrl
cmp
popa
stos
pop
cmp
mov
std
loopne
mov
and
xor
add
cli
cmpsl
and
test
pop
push
xchg
scas
aaa
aad
clc
mov
jnp
push
insl
push
add
loope
mov
add
mov
aas
sub
je
dec
mov
mov
xchg
shll
jl
cmp
pop
imul
mov
mov
lods
mov
ret
loope
enter
icebp
sub
bound
mov
mov
fmull
pushf
aad
push
or
mov
test
movsb
mov
xchg
pop
mov
xchg
or
push
aaa
lock
jb
lret
lods
add
loope
std
jne
adc
jns
fcmovb
jnp
pop
push
mov
dec
ficoml
mov
mov
iret
fcoms
je
popa
test
das
pop
cli
adc
iret
mov
test
add
lret
adc
add
dec
fidivrl
push
adc
sbbb
lahf
mov
adc
adcl
push
pop
aas
push
std
cs
mov
mov
or
fidivrl
and
dec
repz
out
mov
cmp
jns
mov
ljmp
push
jae
mov
hlt
jno
mov
movsl
pop
les
inc
mov
mov
jecxz
mov
and
into
lods
xor
jmp
push
mov
nop
mov
and
add
sub
dec
mov
mov
imul
mov
fisubs
cwtl
out
pop
and
int3
fwait
sbb
mov
cmp
ss
test
stos
dec
push
leave
int
lret
mov
lods
jp
inc
add
popl
jle
jmp
sbb
add
add
movsl
nop
nop
push
sbb
lcall
sbb
insl
xor
and
push
pop
in
jo
orb
nop
ret
icebp
dec
aas
fnstsw
test
cmp
jbe
mov
cmp
sub
add
pop
xchg
mov
adc
xor
aam
push
jmp
aad
aam
pop
bswap
imul
and
jae
bound
arpl
mov
dec
mov
pop
mov
inc
aam
jl
sarb
outsl
lds
pop
inc
pusha
popa
rcr
push
xor
xchg
jne
push
add
nop
inc
sbb
xchg
jae
orl
mov
push
sbb
or
daa
cs
sub
pop
sbb
shll
dec
inc
faddp
cltd
sarl
aam
cli
lea
out
imul
dec
mov
enter
mov
sbb
or
cmp
add
mov
nop
in
dec
movsl
mov
pop
mov
and
xchg
mov
add
add
ds
daa
sub
push
pop
fwait
or
push
lret
fdivr
mov
mov
ss
xlat
cmpsb
idivb
add
jns
mov
adc
hlt
xor
insb
arpl
push
push
aaa
or
div
ljmp
repz
push
aam
dec
aaa
push
addr16
movb
mov
test
mov
dec
sbb
push
ljmp
push
popf
xchg
cmp
jg
or
mov
and
mov
jmp
adc
sti
add
rcr
sub
sub
das
imul
cltd
pop
stc
popa
xor
std
call
push
ret
leave
cmp
and
ret
sub
inc
in
pop
adc
std
cmp
in
mov
xchg
xchg
push
mov
mov
movsl
mov
fstp
and
popa
push
adc
add
out
fstpl
xlat
dec
lods
rcll
lcall
inc
gs
jne
add
jno
stos
outsb
push
out
fmuls
pop
js
lahf
add
adc
or
js
movsb
movsb
mov
mov
xchg
enter
cmp
in
shrl
inc
sub
sbb
xor
jo
cmc
test
sarl
push
fdivl
mov
mov
sub
pushf
leave
cltd
push
sub
test
scas
or
mov
mov
es
pop
sub
mov
addr16
hlt
sub
loop
jbe
inc
lea
adc
lahf
adc
nop
jne
or
mov
lret
xchg
fcom
inc
or
push
sbb
push
dec
push
jecxz
decl
loope
and
outsb
js
push
jl
jno
mov
sbb
cmpsb
addr16
mov
mov
fwait
lea
dec
pop
and
in
mov
lret
lcall
loopne
pusha
mov
std
dec
adcb
dec
dec
in
inc
adc
dec
bswap
sbb
mov
lret
test
cwtl
aaa
es
dec
push
aam
les
test
sub
push
xchg
js
scas
push
jg
out
lcall
ret
sub
and
mov
sbb
pop
cmp
lock
js
test
std
cmpb
rcrb
out
cmp
jns
pop
cwtl
test
inc
and
push
xchg
mov
sahf
sub
fdivl
je
popf
divb
aam
cmpsl
aas
ret
cwtl
inc
data16
add
lock
and
pusha
and
mov
sahf
cli
and
lahf
jl
fiaddl
aaa
in
xchg
fucom
test
xor
inc
outsb
or
shrl
adc
mov
adc
sahf
sub
ret
add
cld
stc
in
outsb
cmc
aad
rorb
inc
ror
fidivrs
jbe
popf
push
xorl
add
mov
scas
int
cmp
or
test
imul
imul
add
push
push
aad
dec
inc
inc
adc
mov
cld
push
dec
jae
mov
or
jle
aam
pusha
icebp
and
test
or
jecxz
mov
jns
adc
test
push
ja
repnz
sub
ds
jle
inc
idiv
sbb
aaa
jmp
int3
xchg
inc
xor
cmpsb
pcmpgtd
sbb
das
pushf
xchg
les
fsts
lret
stc
cld
dec
jmp
sbb
jnp
mov
fldenv
push
xlat
popf
neg
sub
sub
popa
mov
jp
and
push
sub
sti
mov
mov
dec
mov
mov
ficoms
sbb
adc
jmp
mov
xchg
iret
aam
ret
pop
lret
loope
aad
push
test
rorb
xchg
sub
mov
movsl
adc
ljmp
cmp
popf
xor
push
cmc
pop
je
fldl
mov
mov
mov
dec
sbb
and
out
and
pop
pusha
jp
mov
jnp
dec
shrb
fildll
push
push
pop
mov
ja
jg
adc
in
pop
push
adc
shlb
fldt
jl
sbb
add
mov
or
jg
cmpsl
and
arpl
sbb
hlt
xchg
shrl
out
mov
stc
cmp
dec
pop
fnsave
out
jg
mov
test
data16
hlt
mov
mov
cltd
mov
je
adc
rcrb
adc
ret
icebp
lret
imul
decb
xor
add
xlat
notb
xchg
inc
fdivrs
aad
cs
sub
cmp
mov
movsb
jae
adc
mov
mov
push
cmp
fcomps
xor
call
add
aad
lods
xor
push
and
cmc
mov
stos
xchg
mov
adc
into
arpl
xor
sub
out
dec
mov
mov
mov
stos
fnsave
subl
push
xor
sub
rol
dec
cmp
or
mov
sub
jle
idivb
movsl
pop
pop
push
out
mov
mov
cmp
pop
xor
imul
ds
out
xchg
fdivrl
bound
icebp
xor
xchg
mov
xor
mov
adc
xchg
addr16
mov
inc
aam
in
xchg
lahf
xchg
jns
sbb
mov
shrb
push
jle
mov
cs
fimull
dec
mov
cmp
rorb
cmp
out
mov
inc
jno
bound
out
mov
mov
enter
jg
jnp
xchg
orl
mov
nop
sbb
movsb
test
popa
cmovne
dec
push
into
pop
sub
mov
jne
test
sub
outsl
arpl
xor
pop
ds
and
lret
shrl
jno
mov
out
ja
or
lret
paddsw
and
xor
arpl
dec
inc
add
adc
lret
pushf
xor
push
push
inc
pop
cmpsb
movsl
mov
pop
ret
xorb
jno
imul
sbb
adc
jno
jne
cmpsl
xchg
inc
in
push
aaa
cmp
xchg
imul
add
ja
enter
dec
scas
hlt
mov
inc
mov
xchg
xor
push
insl
test
test
aad
pop
jbe
jns
mov
insb
jmp
mov
xor
xor
pop
jno
mov
leave
in
and
rcr
cli
push
fcomp
into
add
or
ljmp
dec
repz
jg
repnz
faddl
mov
stc
push
dec
imul
xchg
movsb
mov
test
ljmp
lods
dec
push
pop
dec
gs
fcompl
mulb
sub
negl
loope
pop
aaa
fisttpl
xor
xor
ret
push
mov
sub
sbb
movl
mov
orl
mov
movl
cmpl
mov
movl
not
not
jmp
mov
ja
push
push
call
or
mov
xor
xor
add
or
sbb
add
adc
movzwl
xor
dec
mov
movl
addl
movl
cmpl
not
movl
jmp
mov
mov
jne
pushl
call
inc
movzbl
xor
mov
or
neg
and
adc
xor
movl
add
movl
movl
cmpl
mov
mov
jmp
mov
movl
jb
push
push
push
call
add
movl
xor
xor
movl
mov
mov
cmpl
mov
movl
movl
jmp
mov
jg
push
call
subl
or
add
sub
and
xor
add
sub
mov
andl
mov
sub
mov
push
mov
sbb
mov
cmpl
movl
movl
mov
jmp
mov
je
pushl
push
push
push
call
orl
dec
adc
xor
xorl
xor
or
mov
andl
push
addl
push
notl
push
push
incl
call
mov
mov
xor
and
not
xor
and
xor
or
mov
sub
xor
and
cmpl
mov
movl
jmp
movl
jg
pushl
push
pushl
push
pushl
pushl
pushl
call
add
xor
add
and
add
mov
and
add
mov
jmp
movsl
add
mov
stos
mov
jmp
js
adc
adc
fcmovb
jmp
ja
pop
jae
ja
jp
fcmovb
lcall
idivb
push
xchg
push
pop
andl
movl
push
and
fstpt
dec
xor
jge
pop
mov
fimull
stc
jp
dec
mov
pushf
jbe
jecxz
adc
and
inc
mov
mov
dec
out
adc
int3
dec
gs
mov
sub
sub
xchg
mov
jbe
scas
icebp
sbbb
out
mov
mov
add
push
or
ret
inc
iret
rcr
mov
or
nop
out
inc
mov
hlt
out
ss
shll
push
dec
mov
xchg
cwtl
inc
mov
sub
add
test
mov
pop
mov
sub
push
push
cmpsl
fidivs
xchg
rcrb
int3
daa
lahf
push
int
int3
sti
rcll
or
mov
sarl
aaa
mov
sub
out
jbe
mov
sahf
mov
sub
pop
adc
pop
and
jle
xchg
dec
es
aaa
orb
lods
outsl
gs
mov
cwtl
scas
xchg
lcall
ss
gs
negb
mov
and
rclb
sbb
mov
incb
pop
cmpsl
pop
outsb
pop
stos
and
dec
movsb
filds
xchg
stos
lcall
adc
ret
xchg
or
stos
or
std
clc
adc
lea
jbe
not
lods
or
je
mov
ljmp
fsub
xchg
nop
lahf
loope
pusha
imul
or
notb
sbb
sbb
push
call
mov
jnp
push
xor
stos
shlb
lock
mov
mov
xchg
cmp
pop
mov
mov
inc
push
jnp
sub
xchg
div
lret
bswap
fistps
mov
sbb
and
les
das
jns
mov
rcll
push
inc
ds
mov
notb
imul
add
outsl
repz
fwait
loope
mov
jecxz
in
mov
pop
pop
dec
ficoml
sub
cld
pop
stos
mov
inc
movsl
sbb
push
adc
inc
andl
push
mov
xor
add
daa
or
sub
sbb
idiv
xchg
daa
push
sbb
dec
pop
jno
push
xor
adc
gs
les
sbb
gs
ja
or
adc
loop
movsb
xor
push
scas
into
xchg
mov
and
std
mov
mov
cmp
add
pop
adc
outsb
test
mov
pop
addr16
cmc
cmp
adc
jmp
stc
insl
push
inc
arpl
mov
ja
lods
dec
push
cmc
mov
popa
add
out
fs
mov
in
adc
add
std
sub
sbb
xchg
mov
mov
cmp
dec
pop
jge
test
sbb
mov
cmc
mov
test
test
outsb
push
fiaddl
pop
scas
rcrl
roll
push
sub
adc
xchg
mov
pop
or
call
pushf
jl
shll
dec
test
mov
adc
out
or
lahf
and
dec
sub
ljmp
or
bound
sarb
or
sti
mov
cmp
cmp
pop
scas
inc
mov
clc
aad
aas
aaa
mov
test
insl
dec
movsl
enter
bound
roll
leave
in
test
mov
pop
pop
imulb
rcr
xor
xor
ljmp
and
xor
pop
imul
rcrb
cmpsb
cmp
cmp
pop
lcall
bound
stc
sarb
pop
and
mov
jle
aas
rcrl
addr16
jo
sbb
xor
sub
fldl
xchg
out
mov
adc
inc
xchg
adc
imul
add
fildll
adc
dec
push
and
gs
pop
lahf
push
dec
cmp
scas
and
lahf
mov
arpl
cmc
mov
and
mov
ret
or
pop
dec
sbb
in
enter
mov
iret
addr16
je
orb
mov
mov
fyl2x
insl
shlb
sti
mov
sbb
pop
mov
fidivl
mov
aas
xchg
mov
cmp
inc
jp
mov
shl
fcoml
mov
or
adc
xchg
jno
push
movsl
lret
xchg
arpl
jbe
repz
and
or
xchg
cmp
adc
jbe
pop
sub
stos
aad
pop
sub
xchg
int3
xor
cmp
lret
outsl
fstl
adc
out
dec
mov
lahf
xlat
add
xor
push
popf
push
aad
fbstp
push
push
push
test
sub
mov
jmp
pop
mov
sub
in
mov
fidivrs
hlt
insb
and
mov
cmp
cli
push
and
cs
loope
cld
jmp
add
adcb
or
xchg
lods
jle
mov
or
andb
jle
mov
push
shlb
xchg
xchg
dec
lods
jnp
incb
lret
decl
pop
shl
lods
fistps
jl
test
push
sub
sub
pop
and
loopne
mov
mov
pop
out
or
and
inc
cmpsl
or
and
pop
loope
clc
xor
and
xchg
dec
adc
push
add
jge
mov
xor
out
xor
xor
add
xor
pop
mov
sub
push
mov
mov
push
inc
jae
xchg
pop
jae
mov
loope
std
mov
adc
pop
jp
imul
shrb
aad
aas
cmp
add
fwait
std
pop
stos
sbb
push
dec
mov
in
ja
rclb
xor
cmc
cwtl
mov
cmpl
xor
jne
adc
in
out
jnp
jg
gs
ja
imul
out
lock
aaa
fmull
sbb
popa
and
cli
in
inc
mov
rolb
push
mov
insb
pop
xorl
sbbb
cmpl
cmp
mov
jmp
adc
jmp
push
add
sub
cmp
int
rcrl
sbb
xlat
call
stos
jae
add
ficompl
lock
outsl
into
mov
inc
jge
jb
stos
hlt
mov
jne
scas
lahf
pop
dec
mov
jmp
imul
or
dec
test
dec
scas
lret
xor
shl
ret
cs
mov
sub
cmp
push
scas
cwtl
xchg
mov
mov
inc
addl
adc
xor
shll
aaa
cmp
lahf
inc
imul
repz
push
ret
jne
or
bound
mov
icebp
mov
and
js
lods
nop
fisubrs
arpl
fs
les
shll
add
mov
xchg
push
sahf
mov
test
stc
and
push
shll
mov
and
add
aas
ror
xchg
add
dec
loope
mov
mov
mov
sub
shll
push
mov
mov
jno
je
dec
lret
push
mov
pop
cmp
les
popf
push
pop
pop
in
mov
aas
pop
aas
dec
cmpsb
and
cmp
psllw
push
in
pushf
aaa
inc
das
pushl
xchg
mov
mov
orl
shl
lods
mov
mov
mov
mov
hlt
out
scas
xor
aas
out
test
ljmp
mov
cmp
push
xchg
and
clc
sbb
mov
jecxz
dec
cmp
lock
jmp
push
sub
loop
insl
xchg
sbb
mov
mov
movsl
cltd
pop
testl
pop
pop
iret
mov
aam
xlat
lods
pop
pop
cmp
outsb
xor
and
xchg
adc
inc
mov
sub
iret
ficoms
out
addr16
add
jns
je
clc
pusha
mov
int
xchg
xorb
xor
loop
lahf
sbb
cmpsb
int3
inc
sub
call
or
vprotb
add
add
loope
rcrl
or
xchg
xor
dec
push
adc
push
daa
ja
mov
ret
dec
and
dec
adc
in
push
inc
and
mov
fs
mov
mov
xor
fwait
mov
push
sub
xor
dec
push
and
pop
stos
das
loopne
movsl
pop
mov
lea
je
test
mov
mov
fcmove
mov
lock
fsubl
inc
imul
push
orb
jl
repnz
pop
enter
cmc
js
or
push
lods
sbb
mov
push
xchg
cmc
in
in
outsb
add
push
jae
call
orl
outsl
pop
pop
mov
fsub
push
mov
cmp
mov
inc
or
push
mov
fisttpl
cltd
sub
repz
loopne
aam
ja
and
sbb
das
mov
sarb
jo
sti
jo
mov
jb
jmp
lahf
mov
pop
dec
push
js
lahf
jge
out
fwait
or
inc
mov
push
push
lock
adc
adc
sbb
dec
pop
lret
shll
addb
sbb
int
sbb
add
xchg
inc
repz
push
mov
lds
push
leave
lods
jl
stos
dec
cmpsb
imul
sub
jb
repz
loop
pop
xchg
cwtl
cmp
popf
inc
imul
andl
scas
sub
and
pusha
xor
out
xlat
push
dec
out
dec
popf
test
fiadds
shrl
loopne
test
mov
adc
das
mov
xor
ret
andl
mov
jmp
outsb
loope
inc
jae
nop
cli
mov
and
fnstsw
mov
popf
test
push
aaa
xor
jl
jmp
into
mov
jb
push
xor
xchg
mov
inc
sarl
and
out
aad
inc
jl
in
xor
push
dec
popa
xchg
mov
sbb
into
dec
pop
xlat
or
dec
push
xor
inc
pop
es
push
jno
jmp
push
add
andl
inc
xchg
sahf
ret
mov
je
cmp
loop
push
dec
add
inc
pop
scas
icebp
pop
mov
ja
inc
cld
and
imul
inc
fdivr
xlat
xchg
mov
add
or
movl
jge
cmp
xlat
dec
jo
mov
addl
popf
mov
and
je
in
xor
stos
mov
loopne
vpaddusw
push
sub
vmovhps
inc
rolb
imul
movsl
clc
jb
loopne
adc
mov
xchg
sbb
ds
fcoms
aaa
cmp
pushf
cmpsl
into
dec
movsb
sti
movsl
or
inc
or
roll
int
lods
jb
add
inc
outsb
lret
add
add
cmc
rcrb
mov
sub
flds
hlt
fldenv
int
xchg
or
cmovs
sbb
cmp
adc
lods
enter
popa
mov
xchg
loopne
jb
lret
orb
mov
dec
and
xor
sbbl
ret
adc
into
cli
sub
cmpsl
mov
xorb
add
push
in
cmpsl
dec
add
hlt
xor
aad
stos
shr
pop
test
mov
scas
rcl
sarb
jo
jbe
jmp
scas
fnsave
popf
mov
into
and
push
test
loop
inc
js
xacquire
xorl
jl
dec
sbb
push
sbb
xchg
adc
or
xchg
jg
push
rolb
pop
rcll
adc
pop
cmp
sbb
mov
pcmpeqd
jno
mov
or
insb
push
xor
fwait
rcll
mov
or
scas
dec
inc
push
dec
aam
repnz
inc
subl
ret
out
push
data16
xorb
and
pop
or
mov
fcmovu
je
aaa
icebp
imul
jmp
adc
mov
add
das
and
xchg
and
aad
or
clc
mov
inc
lahf
das
leave
push
mov
jno
mov
inc
pop
popf
cmc
clc
sub
imul
dec
pop
xlat
xor
push
or
sbb
or
arpl
lock
insb
repz
cmp
jb
add
test
fcoml
xchg
imul
mov
repnz
ds
dec
xchg
les
jno
inc
jb
sbb
sbb
and
out
jo
call
ljmp
rcll
adc
lcall
adc
call
xchg
mov
inc
fstl
xor
add
mov
adc
iret
jmp
mov
test
and
pop
sub
imul
jle
dec
pop
push
out
movsb
out
cmpsl
adc
test
push
fs
cmp
movsb
rorb
out
imul
icebp
pusha
lock
scas
push
decl
int3
fwait
push
jecxz
or
pop
dec
jno
cmp
cmp
fnsave
in
push
xchg
insb
lock
or
pop
mov
rolb
xor
rcrb
push
and
sbb
and
pop
push
into
xor
ds
sti
imul
stos
jne
out
incb
arpl
orb
rclb
sbb
cmp
jl
jne
out
iret
push
mov
cmp
test
push
push
and
or
lea
mov
rorl
mov
push
lods
add
int
call
sbb
jle
std
movsl
sbb
shlb
mov
mov
cld
ret
fmuls
pusha
sub
sub
adc
sbb
cmpsl
jle
adc
sub
xor
jg
cmp
push
cmpsl
in
shlb
xor
push
mov
std
push
jp
and
jb
cmp
popf
inc
xchg
jae
or
mov
loope
lcall
decl
or
ss
test
test
or
cmp
sbb
mov
mov
mov
mov
cltd
sub
insb
out
dec
push
ljmp
inc
sbb
insb
xor
xchg
cmpb
fisttpll
push
and
and
das
in
int3
dec
test
fimull
insl
jns
call
out
call
arpl
insl
cmp
fcompl
pop
xor
xor
cli
pop
insb
lock
out
mov
push
push
imul
je
xchg
shl
std
pop
mulb
test
cli
clc
add
mov
subl
sub
pop
lcall
jae
fwait
jne
daa
lret
xor
xor
mov
popa
imul
test
lock
daa
adc
das
shll
inc
das
xlat
sbbl
in
int
lea
jge
dec
add
gs
test
and
or
adc
hlt
ja
mov
cmpb
fbstp
jne
ljmp
jge
or
rorb
push
or
hlt
andl
shrb
push
clc
jle
cmp
cwtl
int
aad
int3
inc
cwtl
mov
xchg
dec
push
add
movsb
out
adc
rcrl
aam
loope
xchg
testb
mov
push
scas
out
push
or
testl
repz
pop
add
or
add
and
andb
sub
cmp
mov
in
and
js
arpl
mov
push
and
lods
scas
clc
call
pop
imul
adc
ss
jp
cmp
aas
std
xchg
sbb
loop
sbb
ret
push
aaa
stos
cli
gs
dec
inc
sub
fbstp
cmpsl
sti
fs
mov
in
mov
inc
daa
cmp
fsubl
push
pop
mov
arpl
js
push
mov
xchg
mov
mov
jg
jnp
and
jno
push
pop
jecxz
push
adc
rolb
mov
ror
and
push
lret
ret
nop
pusha
mov
ret
addr16
xorb
mov
jecxz
jae
imul
sbb
icebp
pop
out
inc
dec
outsb
mov
je
scas
pushf
out
dec
pop
mov
xlat
stos
jl
pop
inc
pop
inc
add
pop
dec
cmp
lds
mov
lret
dec
cmp
dec
dec
mov
mov
push
and
mov
gs
aaa
cs
sub
mov
and
adc
in
test
xchg
xchg
ficompl
add
or
xlat
push
mov
fimuls
lret
xchg
cmpsb
in
lods
sahf
pop
dec
stos
sbb
mov
sbb
dec
jecxz
popa
add
fildll
xor
push
cwtl
fldl
test
xlat
pop
add
push
ss
data16
xchg
and
cmp
sbb
jno
in
subb
repz
mov
insb
xchg
lcall
in
iret
or
push
lahf
fstpl
xorps
cmp
jecxz
loop
outsb
push
jno
das
or
pop
mov
cmpsb
or
mov
jg
xor
cli
sub
sub
adc
jns
and
js
jle
cmc
mov
inc
js
adc
mov
popa
mov
stos
push
push
loopne
cmp
lods
stos
shlb
fs
mov
and
or
mov
mov
sub
pop
roll
adc
bound
daa
cmp
dec
sbb
push
jne
mov
stc
sbb
push
daa
mov
ret
sub
dec
call
ret
clc
add
mov
loope
shr
sub
aaa
adc
inc
mov
es
push
sahf
out
movsl
jecxz
and
cmp
cmp
aam
inc
mov
dec
mov
pop
sbb
push
mov
lret
xor
xchg
stos
je
iret
mov
stos
pop
and
push
or
fstl
mov
mov
imul
icebp
out
pushf
pop
mov
xlat
mov
jle
clc
mov
xor
loopne
movsb
cltd
cmp
and
mov
add
cmp
mov
add
lret
jge
pop
xor
outsl
add
and
ss
mov
jbe
loop
je
addr16
mov
sub
push
movsb
clc
sub
lods
repz
or
or
cwtl
adc
int3
cs
xor
adc
ds
mov
in
icebp
rorl
or
in
mov
mov
push
pop
jmp
sbb
daa
icebp
sbb
fs
jg
push
out
and
mov
in
mov
hlt
and
push
sbb
bound
orb
aaa
or
or
movl
cmpb
add
fnstenv
mov
xor
or
pusha
and
inc
fldenv
push
gs
sub
icebp
and
es
inc
push
push
pushf
mov
icebp
orl
push
imul
je
push
mov
data16
roll
xchg
and
inc
mov
test
add
mov
jmp
push
ficoml
test
shll
add
xchg
jb
jg
sub
cmp
addl
inc
mov
dec
movaps
push
andb
push
sbb
and
add
pop
leave
fldenv
fucom
scas
jg
daa
sub
das
xchg
pop
imulb
lea
jmp
mov
nop
rolb
mov
mov
mov
inc
xchg
or
je
cwtl
imul
adc
pop
pop
xlat
out
cmpsb
xchg
jmp
cmp
fs
gs
lret
bound
xor
sub
sub
ror
pop
xchg
lods
adc
sbb
mov
out
xor
shrl
fidivrs
ficoml
or
jno
adc
test
push
cltd
pop
pop
dec
cltd
movsb
adc
loopne
mov
cltd
inc
inc
cltd
pop
mov
inc
aad
stos
push
lret
xchg
xchg
out
jle
pop
cmp
out
and
into
mov
jl
or
es
jne
push
aam
cmp
dec
cmp
mov
mov
mov
decl
jnp
rcr
sbb
mov
and
sarb
fstps
fwait
sbb
sahf
cmp
std
xor
shl
shl
push
mov
mov
repnz
sbb
ja
clc
sbbb
mov
jp
dec
xchg
sbb
lods
repz
mov
mov
jmp
mov
pop
sti
outsb
xchg
movsb
mov
call
test
repz
push
jmp
mov
insb
push
repz
mov
addl
fld1
arpl
pushf
sbb
aaa
es
ss
hlt
movsl
mov
sbb
jmp
jb
repz
mov
jg
enter
mov
push
fidivl
pop
inc
xchg
xchg
in
sub
call
pop
xchg
aam
add
sub
out
and
or
mov
cmp
out
test
and
repnz
cwtl
mov
stos
aam
mov
insb
fistl
sahf
mov
push
cmp
mov
pop
jae
lret
mov
fdivp
fwait
mov
pop
aaa
shrl
stc
mov
inc
imul
out
or
mov
add
sahf
fwait
cmpsb
andb
inc
bnd
jge
cld
or
test
scas
in
and
jp
cwtl
pop
xchg
adc
lahf
inc
sub
dec
jge
and
ss
ljmp
adc
lds
xorb
js
pop
pushf
bound
or
dec
inc
xchg
shrb
cwtl
test
in
ja
in
cmc
pop
insb
shl
into
lods
jno
cmp
out
aas
cmp
dec
mov
enter
add
push
adc
sbbl
push
addr16
mov
push
inc
fdiv
push
push
lods
sahf
xor
stos
gs
ror
inc
pop
push
rcrl
ljmp
cltd
inc
bound
xchg
and
sbb
mov
add
cltd
cmp
in
inc
lea
pop
pop
add
icebp
test
mov
sub
ror
xor
sahf
cli
jb
mov
add
cmp
xor
arpl
aam
xlat
push
adc
jecxz
add
mov
test
fsubs
das
cmp
push
enter
push
addr16
mov
sub
cmpsb
adc
mov
aas
scas
cmpsb
xchg
cmp
shll
aas
push
stos
js
push
adc
xchg
mov
inc
xor
repz
ja
mov
mov
sti
cs
mov
in
scas
push
and
push
pop
sbb
push
or
adc
sbb
insl
pop
lods
push
ret
insb
bnd
pop
mov
sub
dec
lret
push
stos
mov
xor
cli
mov
lret
inc
add
pop
sahf
stc
mov
jge
mov
pop
sub
xchg
mov
xchg
outsb
dec
pop
add
xor
enter
arpl
ret
jno
pushw
loop
ljmp
cmp
not
sbb
inc
cmp
pop
and
and
rcll
outsl
push
jecxz
movsl
jecxz
cmp
push
data16
dec
dec
icebp
gs
lods
mov
loop
push
jns
sbb
and
jecxz
sar
es
js
cwtl
mov
mov
fisubrs
sbb
mov
shll
rorl
icebp
fmuls
add
je
push
xchg
adc
inc
jle
pop
jmp
lods
and
lods
sub
roll
test
mov
imul
jb
stos
lock
sbbb
pop
inc
dec
or
cmc
mov
insb
push
int
adc
incb
test
or
pop
mov
mov
and
cmp
test
enter
jno
mov
filds
sbb
arpl
mov
lds
nop
js
xchg
add
enter
insb
mov
movsl
les
pop
insl
mov
stos
neg
and
xor
inc
lock
xchg
inc
sbb
mov
movb
and
xor
push
xchg
push
fsubrs
shrb
bound
or
jecxz
pop
loop
stc
mov
push
and
cmp
push
mov
push
mov
cmp
out
sarl
test
in
sub
sbb
jmp
in
add
nop
subb
jecxz
arpl
xor
mov
outsb
out
xchg
add
mov
mov
sbb
stc
mov
je
mov
bound
push
cmp
out
jne
jmp
push
test
jbe
dec
fdivr
scas
push
push
push
popf
mov
jge
scas
int
int
es
ret
mov
push
and
mov
pop
aas
dec
jge
mov
push
aad
inc
orb
rorb
out
scas
stc
add
out
hlt
call
ret
dec
mov
push
repnz
sbb
mov
mov
mov
push
add
loopne
repz
push
je
adc
mov
lds
or
in
xor
xor
or
adc
out
dec
sti
mov
jbe
and
sbbb
and
xchg
outsl
scas
mov
movsb
dec
add
xlat
enter
test
mov
aam
mov
sahf
loope
cs
in
mov
xchg
or
or
sbb
push
push
and
mov
xchg
cmp
leave
imul
insl
sti
test
pusha
add
imul
inc
flds
push
xlat
in
jno
push
mov
or
stc
cld
dec
icebp
in
imul
push
pop
aas
lahf
scas
ffreep
xor
stos
lcall
dec
lds
aas
push
popf
test
mov
fwait
jl
or
pushf
jg
loop
cmp
int
stos
mov
mov
mov
scas
movsb
pop
in
xcrypt-cbc
cmpsl
xlat
stos
stc
inc
inc
mov
or
sbb
scas
xchg
jle
or
int3
and
dec
mov
ss
cmp
xlat
jle
or
inc
cmc
jp
ja
fmull
xchg
add
cmp
loop
pcmpeqb
lea
sub
cwtl
repz
or
sub
test
sbb
and
add
in
roll
insb
test
jo
mov
push
pop
ja
dec
movsl
xchg
loopne
mov
jno
pusha
push
es
lds
outsl
xor
mov
and
icebp
inc
repnz
ficoms
jl
rorl
daa
inc
ds
dec
dec
andnps
inc
adc
ror
push
adc
notb
int
ja
adc
pop
pop
cmp
shll
cmp
les
mov
gs
lret
cmp
enter
test
or
ja
inc
adc
adc
clc
mov
scas
mov
pop
stos
jb
inc
dec
loope
inc
and
inc
pop
push
jb
lret
testl
sbb
jno
idivb
push
test
mov
push
xor
jnp
jmp
movsb
pop
xor
neg
lods
adc
std
test
pop
or
cmp
mov
xchg
sbb
mov
inc
subb
in
ja
jmp
stc
cmp
xor
mov
mov
call
daa
xor
adc
or
mov
and
ds
jmp
in
mov
or
add
inc
shlb
cld
icebp
sbb
enter
pop
push
dec
idivb
jge
mov
inc
ret
clc
fstl
xor
loope
sub
rorb
dec
imul
or
mov
adc
gs
xor
int3
shlb
xchg
ljmp
orb
mov
sub
call
stos
daa
mov
mov
clc
icebp
push
dec
cltd
test
xchg
in
push
jp
or
pop
test
repz
in
or
push
push
cmc
hlt
nop
and
sarb
imul
leave
int
add
fldenv
das
fldcw
dec
jbe
je
sub
test
sub
xchg
inc
test
mov
sbb
add
leave
out
mov
aad
mov
dec
push
mov
push
xchg
nop
push
icebp
fsubl
fdivrp
imul
dec
jg
mov
push
jmp
adc
mov
xor
js
sbb
adc
or
lods
xchg
movsb
fisubrl
ljmp
push
pop
in
mov
sbb
mov
fisttps
mov
pmaxub
lcall
sti
jmp
enter
sub
mov
test
dec
sub
mov
sbb
bound
push
leave
fisubrs
fcoms
dec
and
or
dec
ret
rolb
jmp
xor
xchg
pop
push
mov
pop
pop
add
pushf
sahf
shlb
into
add
lret
push
xchg
sbb
out
and
push
rcrb
pop
imul
push
add
mov
fstl
mov
adc
xchg
gs
ds
sbb
fwait
cmc
xchg
ljmp
add
add
movl
mov
mov
jmp
mov
je
push
push
pushl
pushl
pushl
call
mov
mov
sub
xor
xor
xor
sub
andl
add
mov
adc
mov
movl
inc
movl
or
movl
cmpl
mov
movl
mov
jmp
movl
mov
jl
pushl
pushl
push
push
call
xor
movzbl
adc
mov
neg
adcl
sub
cmpl
mov
movl
movzwl
jmp
mov
jl
call
andl
adc
or
neg
sub
add
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
add
insb
shrb
sbb
jbe
push
push
cmp
stos
loopne
adc
adc
lods
sbb
cmc
fstl
out
sub
push
in
aam
outsb
sbb
enter
push
aad
gs
out
mov
dec
push
clc
mov
stos
cmp
mov
rcl
subl
cmc
cmp
cmpb
pop
xor
xchg
jne
mov
fwait
shlb
inc
popa
int
adc
jb,pn
push
les
push
imul
adc
ss
iret
aad
adc
add
mov
imul
and
adc
loope
dec
push
test
cmpsb
sbb
jnp
jno
fistpl
int
jo
pusha
scas
add
repz
mov
les
aaa
dec
add
push
mov
xlat
or
sbb
cwtl
lret
inc
pop
in
fs
sbb
ret
sub
push
cltd
pop
push
cmp
mov
inc
xchg
rcr
mov
fcoml
cld
inc
mov
lret
imul
dec
cmp
mov
adc
loope
daa
or
and
fcmovne
sub
push
cmc
bnd
clc
incl
insl
mov
mov
xchg
mov
dec
jnp
out
lss
push
or
jne
movsl
jle
add
sbb
ljmp
push
dec
popa
and
jmp
xlat
insb
repnz
or
popf
icebp
sbb
add
push
pop
rcrl
fldenv
cmpsl
aaa
push
mov
sub
leave
sbb
or
inc
and
jmp
push
mov
aas
pop
mov
mov
mov
sbbb
mov
out
and
insb
push
sbbb
mov
mov
insb
dec
inc
insl
in
mov
push
jle
xchg
cwtl
sub
push
add
xchg
cld
dec
mov
loopne
hlt
in
push
mov
popl
xor
mov
out
dec
js
call
das
or
sub
dec
data16
mull
push
rorl
loope
es
sbb
pop
clc
or
sbb
jne
in
sub
sub
and
jbe
pop
dec
jmp
mov
mov
push
std
inc
add
mov
and
cmp
sbb
jmp
add
enter
mov
sub
insb
test
insl
jne
repnz
scas
xchg
gs
mov
dec
ror
xor
ss
mov
lret
push
jmp
add
ficoml
jbe
push
xor
out
jbe
lret
iret
push
dec
in
push
cld
adcb
fstl
cld
pop
out
pop
jmp
cmp
int3
add
orb
add
jo
adc
add
inc
xor
imul
std
sbb
xchg
cmp
add
adc
mov
jle
sub
cmp
aam
jmp
out
lea
mov
dec
inc
test
mov
xchg
and
mov
xchg
xor
mov
jae
xor
push
mov
push
sbb
scas
sub
sarl
iret
inc
sti
dec
pop
xor
dec
or
dec
mov
xchg
leave
push
popf
fwait
icebp
insl
outsb
pusha
movsl
and
fwait
test
aad
leave
out
mov
jp
aad
mov
dec
sbb
pop
jne
test
lea
loopne
mov
adc
xor
loope
popf
leave
lds
cmpsl
inc
mov
mov
cmp
outsb
jmp
mov
nop
xchg
hlt
inc
int3
in
and
dec
jns
mov
std
xor
scas
stos
sub
pop
ja
into
cmp
and
bound
pusha
iret
jne
inc
mov
mov
cmp
pop
lods
and
test
inc
add
dec
mov
lcall
addr16
inc
cmpsl
ret
push
test
lret
xchg
pop
fcmovnu
add
and
in
rolb
addr16
and
loope
out
pushf
popf
lea
test
test
sbb
aam
pop
aaa
inc
adcl
mov
push
inc
stos
jo
xchg
outsl
cmp
in
andb
bound
pop
xchg
adc
mov
inc
ret
mov
imul
dec
xchg
cmp
mov
mov
das
movsb
sub
jae
dec
aaa
push
xor
ljmp
mov
xchg
pop
sbb
and
js
sub
mov
pusha
pop
jns
inc
mov
arpl
mov
cmpsb
pusha
ljmp
jb
addb
jmp
mov
nop
add
push
pop
xor
and
shll
lds
cs
mov
push
mov
add
in
or
mov
inc
lret
mov
mov
leave
push
movsb
daa
cmp
pop
test
cwtl
pushf
insb
lcall
pop
mov
jne
out
cmp
sub
inc
call
stc
out
or
je
inc
imulb
ret
cmpsb
inc
mov
xchg
gs
mov
loop
mov
enter
mov
leave
push
lcall
cmpsl
ret
sbb
xchg
lea
int3
dec
std
jl
or
jp
sub
scas
pop
xchg
cmc
outsl
jmp
mov
and
clc
mov
jg
dec
cmp
and
jno
mov
popf
addr16
ficompl
ja
mov
push
cld
dec
lea
xchg
inc
xor
dec
xor
mov
out
xchg
movsb
mov
lret
mov
push
cmp
addr16
and
sahf
mov
pusha
pop
jl
in
imul
cmpsl
clc
stos
or
out
shll
xchg
not
ffree
xchg
sbb
mov
mov
mov
loope
movsb
addr16
mov
jns
out
sub
lret
add
sahf
dec
xor
mov
out
xor
scas
stos
ficoms
sarb
add
inc
sbb
push
imul
mov
dec
mov
test
popa
cli
sbb
popa
lret
xchg
jecxz
push
and
xchg
jo
mov
cli
cs
adc
sbb
mov
test
or
es
xor
add
loopne
inc
xor
mov
mov
movsb
xchg
mov
rcll
dec
fistpl
in
pop
cmp
mov
enter
sbb
or
jo
sub
pop
icebp
addl
dec
mov
sub
faddl
cld
cmc
je
push
nop
sbb
xor
addr16
clc
mov
test
xor
lods
icebp
fisttps
lcall
add
jns
xor
std
xchg
sbb
hlt
pop
cmpsb
popa
cwtl
sbb
add
cmpsl
das
jae
dec
aas
roll
push
mov
sbb
lods
jmp
outsl
jno
jnp
sahf
ss
dec
sbb
mov
imull
call
inc
or
adc
call
jbe
cld
add
ret
mov
push
mov
pop
xor
push
loopne
add
int3
lcall
xchg
stc
xorb
das
xchg
push
add
dec
push
sbb
sub
sbb
mov
adc
cld
test
or
pusha
lds
addb
and
test
aaa
data16
fmuls
or
fsubl
push
pop
fsubrs
mov
je
in
pop
imul
les
mov
adc
or
out
repz
xlat
imull
pop
adc
ret
test
in
icebp
sbb
pop
out
mov
cmpsb
addr16
jge
cmpsl
inc
push
movsl
in
fwait
inc
mulb
mov
or
push
movsb
std
pop
lcall
aam
lret
xchg
rcrb
xchg
jle
pop
out
inc
pop
pop
aad
jae
sub
jecxz
and
fiadds
outsb
xor
mov
mov
js
subb
and
repnz
jp
arpl
push
test
inc
call
xor
inc
mov
push
adc
push
sbb
inc
fstl
jno
ja
dec
outsl
lret
fnstenv
scas
sahf
inc
cmp
adc
int3
insl
popa
mov
push
nop
jl
out
test
xor
fwait
xchg
fistpl
jecxz
pop
adc
addr16
mov
push
insl
inc
scas
xchg
inc
mov
sub
add
push
mov
sbb
mov
test
inc
lods
loopne
stos
mov
pushw
repz
inc
and
mov
pop
sbb
scas
in
mov
cmp
fsub
sbb
xor
packsswb
insl
imul
cltd
adcl
test
mov
loope
aas
iret
mov
out
sub
mov
jl
mov
mov
inc
cmp
ret
ljmp
xor
or
xchg
adc
in
inc
xchg
out
or
rcll
cmp
daa
xor
push
pusha
test
jb
daa
mov
pop
or
mov
dec
in
sbb
pop
ljmp
cwtl
xchg
ja
xor
aam
add
mov
sarl
lds
lret
roll
sub
ss
sti
sbb
jmp
pop
xor
lds
or
rol
pusha
pushf
shl
dec
jnp
fwait
pop
sub
pop
movsb
ja
ret
xchg
into
iret
mov
dec
jp
fisttpll
pop
dec
jb
arpl
xor
js
pop
js
popa
sbb
test
daa
cld
loope
add
orb
inc
shl
rcrb
or
fwait
mov
dec
add
sbb
add
dec
sub
mov
or
add
push
cld
pop
stos
xor
cld
psllq
dec
jecxz
fildl
cmp
or
lcall
mov
inc
aas
add
xchg
inc
aas
and
in
jl
mov
addr16
mov
dec
dec
dec
rcl
leave
lock
dec
loope
gs
dec
inc
cmp
sub
xor
xchg
xchg
mov
xor
or
mov
inc
pop
cmp
je
xchg
adc
int
jo
xor
nop
ja
shrb
stos
lret
lret
sti
sbb
cmp
jo
mov
push
cmp
sub
cmpsl
adc
xchg
arpl
pop
lock
pop
shll
mov
sarl
inc
mov
aas
add
mov
sti
jno
lods
jmp
push
jecxz
clc
das
in
testb
loope
push
cwtl
cmp
fisubrl
sub
or
test
push
int
cltd
pusha
repnz
mov
or
in
sbb
test
dec
pusha
cmp
dec
and
jns
inc
notl
dec
in
push
xchg
push
inc
push
xor
cmc
loop
pop
or
add
ds
push
mov
out
pop
out
or
stos
cmc
ret
inc
add
pop
fcomps
lret
std
dec
inc
add
cmpsb
inc
mov
movsb
or
mov
push
rcl
shl
bound
xor
das
xchg
loopne
xchg
repnz
xchg
mov
adc
sub
xchg
adc
sub
test
push
pusha
jmp
sbb
divb
adc
rorl
pop
addr16
stos
sbbb
iret
dec
xlat
xor
fadds
jmp
or
jo
fisttpl
mov
enter
imul
dec
jbe
icebp
rorb
test
jmp
xchg
outsl
shr
mov
jae
insl
int3
mov
int
mov
imul
ja
and
data16
clc
enter
insb
jbe
stos
lret
adc
lret
ljmp
sub
pop
imul
aad
lret
decl
sbbl
add
pop
ljmp
loop
cmpsl
inc
and
push
push
loopne
stc
sbb
xor
subl
cmpl
inc
iret
pushf
cmpsl
fiaddl
ret
push
inc
push
in
xchg
cmc
lret
or
lcall
xor
data16
lds
xor
sti
add
cmp
in
int
pop
aad
sahf
out
cld
push
xchg
or
dec
inc
xchg
mov
sbb
jo
push
cmpsl
imul
or
mov
cmp
fldenv
sti
out
mov
imul
lods
add
xchg
adc
fsubl
jge
jnp
orl
jb
aam
jle
out
mov
pop
loopne
ds
inc
sub
or
and
push
lret
jnp
int3
mov
mov
xchg
adc
enter
scas
adc
pop
test
aaa
cmp
lcall
test
cmp
lea
sub
mov
cltd
dec
or
adc
repnz
push
sbb
xchg
mov
mov
ds
test
mov
sub
cmpsl
mov
roll
fstps
push
dec
std
cld
mov
loope
pop
pusha
inc
xchg
and
jl
inc
sar
call
push
inc
subb
repnz
push
pop
push
xor
pusha
aas
fstps
scas
xchg
scas
outsl
xchg
jp
push
test
cmpsb
les
je
in
mov
and
jp
add
scas
pop
jecxz
push
sbb
inc
loopne
popa
negb
shl
aad
cmp
rorl
jne
jmp
scas
mull
dec
imul
loope
push
and
std
push
and
push
jnp
lcall
cmp
lods
mov
lods
xchg
add
add
adc
mov
in
mov
jmp
mov
daa
jmp
cmp
push
add
sbb
cmpsb
out
push
lret
mov
mov
cmp
mov
cli
jne
rolb
cltd
lret
jnp
sub
mov
je
cmp
xchg
push
movsb
pushf
or
lret
bnd
mov
pushf
lahf
lock
subl
lcall
in
mov
popa
and
xor
or
jmp
testb
in
mov
push
stc
add
jp
adc
call
dec
into
repnz
jg
xor
lea
push
inc
aad
idiv
cld
jecxz
lcall
pop
mov
xor
inc
pop
lods
jne
das
pop
stos
stos
mov
dec
fmulp
sub
xchg
pop
cmp
and
sbb
jo
aas
outsl
push
pusha
push
push
mov
fidivrl
mov
aam
and
jp
jns
scas
stos
mov
mov
rcll
sti
jmp
lcall
cmp
pop
outsb
rcrl
imul
dec
shlb
into
and
push
out
mov
fistpll
mov
test
add
mov
add
aaa
pop
cmpsl
xor
pop
mov
pop
out
jae
push
pop
mov
idivl
out
xor
push
icebp
popa
or
inc
cmp
cli
ss
xchg
sub
scas
xchg
dec
cwtl
loope
icebp
or
mov
push
stos
cmpsb
cmc
add
in
test
je
testl
out
and
aas
orl
mov
mov
mov
and
mov
sub
xchg
dec
pop
sub
or
pop
or
dec
pop
fistpl
mov
clc
inc
fnsave
adc
sarl
rcll
mov
enter
cmpsb
jp
sti
repz
in
and
or
addl
sbb
leave
ljmp
xchg
push
xor
jl
or
and
push
fisubrs
xchg
mov
lret
aad
cmp
cmc
adcb
stc
mov
sub
scas
adc
flds
je
pop
push
jle
and
ret
fdivp
push
or
and
inc
and
movsw
pop
fwait
movnti
push
cmpb
fiaddl
nop
aaa
xchg
jo
in
or
in
popf
mov
xor
jp
pop
jge
cli
shrl
cld
xor
insb
cmp
mov
inc
xchg
mov
repz
pop
sar
sub
or
add
sbbl
cmp
dec
call
xchg
stos
rcrl
lcall
nop
sti
cmp
hlt
ret
mov
sbb
daa
sub
add
push
mov
imul
int
movsb
add
sar
pusha
les
pop
lock
decb
mov
mov
inc
pop
ret
sub
cmp
in
test
das
mov
int3
sarl
mov
mov
enter
mov
cmpl
mov
arpl
jmp
movsl
or
pop
movsb
xor
sub
xchg
sti
xor
aas
jbe
lcall
ret
push
decl
andl
adc
test
or
pop
mov
stos
sbb
gs
xchg
cmc
nop
hlt
rcll
sbb
js
xchg
pop
mov
nop
push
dec
bound
sbb
mov
pop
jecxz
cwtl
pop
mov
testb
cmp
xchg
dec
jo,pn
rcrb
push
mov
addb
fldl
add
movl
lret
or
inc
and
xor
xlat
push
rol
xchg
mov
test
pop
xchg
adc
sbb
sub
inc
fcompl
sbb
cmpl
xor
xchg
xor
addb
push
xchg
lahf
cmpsb
lret
aaa
dec
loope
movsl
xchg
and
lret
rolb
stos
lcall
rcr
cmc
and
xchg
mov
stos
pop
pinsrw
mov
pop
lret
aad
addb
repz
sub
test
jns
out
pop
mov
push
ja
sbb
xchg
push
sbb
adc
pop
cwtl
mov
mov
and
rol
rolb
xor
jg
adc
test
cmp
jg
pop
cmp
inc
mov
push
jp
ret
pushl
out
sub
in
out
adc
or
dec
inc
fnsave
jnp
js
mov
pop
cmp
lods
scas
lret
in
jl
or
mov
movsb
cmp
inc
inc
dec
adc
and
sub
inc
bound
mov
pcmpeqb
fcomps
loop
sti
jns
imul
das
inc
add
cmp
xor
ret
and
leave
jmp
push
push
stos
aas
ret
adc
xor
add
sahf
nop
jb
jb
jle
inc
fs
pushf
enter
push
imul
cmp
imul
and
cmp
xor
arpl
pop
shll
or
sbb
fsubrs
add
add
inc
loopne
add
in
or
add
inc
fsubs
add
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sbbl
push
push
mov
cmpl
mov
mov
movzbl
jmp
movzwl
je
pushl
call
and
or
xor
add
xor
mov
mov
xor
mov
orl
add
adc
mov
shrd
cmpl
movl
movl
not
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
adc
addl
mov
mov
sub
xor
xor
xor
and
adc
or
cmpl
not
movl
movl
movl
jmp
mov
ja
push
push
call
negl
mov
mov
xor
or
sub
adc
mov
xor
movzwl
add
shr
adcl
mov
mov
mov
sbb
xor
cmpl
movl
mov
jmp
mov
jle
push
pushl
push
push
call
mov
sub
mov
and
movzbl
sub
not
xor
or
xorl
mov
add
mov
not
shl
xorl
mov
shrd
sub
xor
shr
cmpl
movzwl
not
mov
movzwl
jmp
movl
movl
jbe
push
push
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
jae
pushl
push
pushl
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
mov
mov
mov
jmp
movl
not
jg
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jb
pushl
push
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jg
push
pushl
pushl
pushl
push
pushl
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
mov
movl
mov
jmp
movl
movl
jle
push
push
call
dec
sbb
xor
xorl
sub
addl
xor
shld
movl
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
cmp
movl
jne
cmp
movl
je
mov
subl
mov
sbb
push
pop
cmpl
mov
movl
jmp
not
jae
push
pushl
pushl
push
call
mov
or
mov
adcl
xor
xor
xor
mov
and
xor
or
add
movzwl
adc
xor
decl
shl
mov
xor
shr
incl
or
cmpl
mov
movzwl
movl
mov
jmp
movl
movl
jg
pushl
pushl
push
push
pushl
call
sbb
or
xor
sbb
and
adcl
movzbl
add
mov
mov
mov
adcl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jbe
push
push
call
sbbl
xor
neg
add
inc
adc
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
mov
movl
jmp
movl
mov
jae
pushl
pushl
push
pushl
call
or
or
xor
pushl
pop
adc
mov
add
xor
adc
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
movl
jne
adcl
xor
jmp
xor
add
mov
sub
sub
mov
add
movl
mov
mov
and
movl
cmpl
movl
mov
mov
jmp
mov
jg
pushl
call
or
mov
xor
sbb
adc
xor
xor
mov
adc
and
not
and
movl
movl
movl
cmpl
not
mov
jmp
movl
not
ja
pushl
pushl
pushl
push
call
mov
mov
xor
or
sub
adc
movl
sbb
cmpl
mov
mov
movl
mov
jmp
mov
jge
push
pushl
call
mov
mov
add
sub
add
add
movl
movl
xorl
push
movzwl
sbb
movl
or
mov
mov
subl
push
sbbl
push
andl
push
andl
call
mov
mov
push
adcl
push
push
xorl
push
adcl
call
mov
mov
sub
sub
mov
sbb
mov
add
movl
mov
movl
adc
mov
addl
xor
mov
subl
xor
mov
cmpl
mov
mov
movl
jmp
mov
movl
je
push
push
push
pushl
push
push
call
adc
movzwl
and
adc
and
xor
xor
xor
xor
sub
movl
cmpl
mov
movl
movzbl
jmp
movl
mov
jle
pushl
push
push
call
add
sub
xorl
incl
neg
or
movl
cmpl
mov
notl
not
jmp
mov
jg
push
push
push
call
mov
sub
mov
xor
movzwl
sub
sbbl
and
movzbl
sub
movl
cmpl
mov
movl
mov
jmp
movl
jle
push
push
push
push
push
pushl
push
call
adc
xorl
xor
add
adc
sbb
mov
sbb
mov
add
xor
movl
cmpl
movl
movzwl
movl
jmp
mov
movl
jbe
push
pushl
pushl
call
adcl
sbb
xor
add
xor
sbbl
adcl
sub
sub
movl
adc
push
add
movl
mov
mov
add
mov
mov
incl
push
sbbl
push
subl
push
adcl
call
cmpl
movzwl
mov
jmp
not
movzwl
ja
push
call
xor
or
xor
sbb
xor
adcl
mov
mov
xorl
push
push
adcl
push
push
call
cmpl
mov
movl
jmp
mov
movl
jl
pushl
push
call
subl
adcl
xor
mov
mov
sub
and
movzwl
add
or
and
mov
orl
mov
xor
orl
mov
sbbl
xor
mov
xor
sbbl
xor
cmp
jne
cmp
jne
movl
mov
adc
movl
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
push
pushl
pushl
push
call
adc
xor
xor
mov
sbb
xorl
or
movl
xorl
mov
adcl
imul
add
xor
mov
div
movzbl
and
pushl
or
xor
sbbl
and
not
xor
inc
pushl
mov
movzwl
adc
mov
push
notl
pop
xorl
div
mov
andl
sub
add
xorl
imul
adcl
and
xor
pushl
pushl
pushl
pushl
andl
pushl
call
movl
sub
movl
cmpl
movzbl
movl
jmp
movl
jbe
pushl
push
push
pushl
call
xor
sub
sub
add
adcl
mov
xor
or
mov
or
mov
adcl
sub
cmpl
movzbl
mov
movl
jmp
movl
jle
push
pushl
push
push
call
add
and
add
adc
dec
xor
add
add
dec
mov
andl
xor
adcl
xor
movl
div
imul
addl
xor
sbbl
pushl
sbbl
pushl
sbbl
call
sub
movl
cmpl
mov
movl
jmp
mov
ja
pushl
call
sub
and
add
sbbl
mov
sbb
andl
mov
movl
movl
mov
mov
sub
or
mov
mov
mov
adcl
mov
push
push
adcl
xor
xorl
xor
push
push
notl
call
orl
add
mov
movl
adc
mov
sbbl
movl
andl
movl
movl
addl
movl
dec
jne
cmpl
movl
movl
movzwl
jmp
mov
jle
push
pushl
call
sub
sbb
adc
not
sbb
sbb
add
movl
xor
mov
mov
subl
movl
mov
call
cmpl
movl
mov
movzwl
jmp
not
movl
jb
pushl
push
call
adc
xor
mov
add
mov
xor
lea
mov
lea
xor
add
mov
adc
mov
subl
mov
xor
or
adc
mov
mov
cmpl
mov
mov
mov
mov
jmp
mov
jae
pushl
call
xor
xor
mov
sub
xor
orl
xorl
mov
xor
mov
xor
mov
xor
and
xor
shl
subl
shr
or
sbb
mov
cmpl
mov
mov
movl
jmp
mov
mov
jl
push
call
adcl
sbb
adc
subl
dec
subl
mov
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
shrd
shr
mov
add
mov
mov
xorl
xor
addl
xor
or
mov
subl
push
pushl
addl
lea
andl
push
shl
subl
call
lea
push
andl
mov
movl
mov
sbbl
lea
xorl
push
mov
adcl
lea
mov
orl
mov
sbbl
mov
push
sbbl
call
movl
push
orl
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
addl
push
sub
push
adc
movl
movl
mov
adc
movl
mov
movzwl
xor
mov
subl
xor
div
or
imul
cmpl
movl
mov
movl
jmp
movl
mov
jbe
push
call
movl
orl
mov
or
xor
or
adc
and
add
mov
andl
xor
and
xorl
mov
xorl
xor
div
cmpl
mov
mov
mov
jmp
mov
movzwl
jb
push
pushl
push
call
mov
mov
sub
and
mov
mov
sub
xor
xor
xor
add
sub
imul
adc
mov
mov
adc
mov
mov
adc
and
sub
mov
movl
add
movl
movl
or
mov
andl
add
neg
xor
xor
sbbl
imul
mov
or
mov
mov
and
xor
add
mov
or
sub
adc
mov
sbb
movl
sbb
movl
notl
movl
add
movl
and
mov
movzwl
xor
imul
adc
mov
cmpl
movl
movzwl
movl
jmp
mov
jae
push
push
pushl
call
mov
sbb
mov
sub
andl
and
mov
sbb
mov
imul
imul
neg
mov
xorl
and
dec
or
xor
mov
xor
mov
mov
xorl
lea
mov
mov
sbb
mov
movl
movl
cmpl
movl
movl
mov
movl
jmp
mov
mov
jle
pushl
call
xorl
sbb
dec
subl
mov
mov
or
and
adc
movl
cmpl
mov
movzwl
mov
movl
jmp
movzbl
notl
jge
pushl
call
and
xor
movzwl
adc
and
xor
sbb
mov
xor
mov
or
or
add
or
mov
or
add
or
xor
mov
movl
cmpl
movl
mov
movzbl
jmp
movl
je
push
pushl
pushl
push
call
not
mov
mov
adc
sub
mov
mov
and
or
movl
cmpl
movl
notl
not
mov
jmp
mov
mov
jae
pushl
pushl
push
pushl
pushl
pushl
call
neg
dec
movzbl
and
dec
sbbl
sbb
sbb
cmpl
movl
mov
mov
jmp
not
jge
pushl
push
pushl
call
mov
adc
or
xor
xor
xor
mov
xor
mov
add
adcl
movl
mov
add
mov
addl
sub
mov
adcl
lea
sbbl
or
cmpl
movzbl
mov
jmp
movl
jl
push
push
pushl
call
and
adc
add
and
adc
mov
add
mov
and
sub
mov
xor
mov
mov
xor
movl
cmpl
mov
mov
jmp
mov
movzwl
jae
pushl
push
push
push
call
mov
or
mov
orl
orl
sbb
and
adc
movl
mov
add
imul
mov
adc
mov
adcl
imul
orl
xor
xor
or
or
mov
div
cmpl
mov
mov
movl
jmp
movl
movl
jle
pushl
pushl
push
push
pushl
call
adc
or
add
xor
add
neg
xor
xor
and
sub
or
mov
addl
movl
sbb
movl
and
movl
mov
mov
sub
mov
cmpl
mov
movl
jmp
movl
jge
call
adc
or
mov
adc
sbb
sub
mov
adcl
xor
addl
div
imul
cmpl
mov
mov
mov
movl
jmp
movl
movl
jne
pushl
push
push
pushl
push
push
pushl
call
orl
xorl
xor
and
orl
orl
inc
add
mov
subl
xor
movzbl
sbb
mov
xor
mov
adcl
div
add
xor
movzbl
adc
mov
movl
movl
movl
cmpl
mov
mov
jmp
mov
movl
jbe
push
push
pushl
call
add
sbb
movzwl
sbb
adcl
movzwl
sub
or
movl
mov
and
mov
andl
sub
shr
sub
mov
addl
imul
cmpl
movl
movl
movl
jmp
movl
jl
pushl
call
sbbl
xorl
xor
orl
sbb
mov
and
cmpl
movl
movl
jmp
mov
jle
pushl
push
push
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
sub
mov
neg
movl
xor
movl
xor
mov
or
xor
mov
or
movl
sub
dec
mov
movl
mov
xor
add
sub
imul
movl
movl
movl
add
movl
movl
movl
mov
mov
or
add
orl
mov
sub
incl
mov
movl
imul
imul
andl
mov
orl
or
mov
lea
orl
push
xorl
call
sub
mov
mov
imul
add
cmpl
movl
movl
mov
jmp
movl
jb
pushl
push
call
sbb
mov
or
xorl
addl
xor
add
adc
addl
and
mov
sub
mov
sub
or
xor
mov
xorl
div
cmpl
movl
mov
jmp
not
jl
push
push
push
push
call
xor
movzbl
and
mov
and
or
xor
add
add
mov
adc
movl
movl
movl
movl
mov
xor
movl
sbb
movl
cmpl
mov
movl
movl
jmp
mov
jbe
pushl
push
call
sbb
sbb
sub
adc
adc
movl
or
movl
sbb
movl
cmpl
movl
mov
mov
mov
jmp
movl
jge
push
push
call
andl
and
adc
mov
mov
and
sub
mov
or
movl
cmpl
mov
mov
jmp
mov
mov
jle
pushl
call
adc
mov
and
mov
xor
mov
sub
movzwl
and
mov
adc
movl
movl
and
mov
xorl
mov
adc
mov
and
and
sbbl
sub
sub
imul
mov
xor
lea
xor
mov
orl
mov
or
mov
mov
xor
add
add
mov
cmpl
movl
mov
jmp
movl
movl
jbe
push
push
pushl
call
or
sub
adc
xor
dec
movl
or
or
add
lea
or
and
mov
add
sub
add
add
mov
mov
xor
or
sub
xor
movl
mov
sbb
mov
movl
movl
adc
movl
and
mov
orl
mov
subl
mov
addl
xor
orl
xor
adcl
mov
notl
call
add
mov
sub
mov
mov
andl
mov
xor
adcl
xor
mov
orl
call
subl
or
or
adcl
mov
mov
adcl
xor
adcl
xor
sbbl
mov
call
mov
mov
mov
cmpl
movzbl
mov
mov
movl
jmp
movl
jle
push
push
pushl
call
sbbl
notl
xorl
neg
add
mov
xor
orl
xor
andl
mov
movzbl
adc
mov
mov
mov
xor
mov
adcl
mov
subl
mov
sbbl
call
sub
mov
or
mov
orl
or
subl
push
push
subl
push
xorl
push
call
mov
cmp
movl
jne
mov
cmpl
not
movzwl
mov
jmp
movl
ja
call
mov
sbb
sbb
xorl
movzwl
sbb
and
xor
mov
xor
orl
xor
orl
mov
xorl
call
cmpl
mov
movl
jmp
movl
jg
pushl
push
push
call
mov
add
and
or
or
mov
mov
sub
or
xor
mov
sub
mov
mov
adc
mov
xor
andl
xor
mov
subl
call
or
cmpl
movl
movl
jmp
mov
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
pushl
push
pushl
call
adcl
orl
adc
sbbl
orl
addl
notl
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
movzbl
sub
push
mov
or
movl
jne
or
mov
cmpl
notl
mov
mov
jmp
mov
jae
pushl
call
or
adc
xorl
movzbl
or
mov
sbbl
sub
mov
xor
incl
div
xor
or
sub
mov
mov
sub
mov
orl
div
mov
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
cmpl
mov
mov
movl
mov
jmp
movl
movzbl
jne
pushl
push
call
sbb
add
mov
xor
add
sub
and
inc
add
add
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
orl
shld
shl
ret
cmpl
mov
movl
jmp
movl
movl
jge
pushl
push
call
sub
xor
sbbl
movzwl
adc
mov
xor
and
shl
ret
xor
xor
ret
