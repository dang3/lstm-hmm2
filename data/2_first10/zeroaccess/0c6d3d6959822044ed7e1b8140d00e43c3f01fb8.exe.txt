push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
jmp
lret
sbb
or
sub
movb
pop
addl
xor
je,pn
jo
icebp
ja
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
add
or
lret
push
imul
push
xchg
add
xor
cmc
xchg
les
or
push
push
ja
sub
in
pop
mov
idivl
xlat
jge
enter
or
filds
dec
mov
dec
jmp
push
sahf
add
loop
pop
fucomip
sub
xchg
inc
fs
fists
aas
rcrl
inc
int
sahf
ret
mov
fwait
dec
inc
js
xor
cwtl
stc
jae
and
scas
cmpsb
icebp
push
xchg
push
test
and
jmp
cmp
inc
jnp
rcrl
mov
iret
dec
pushf
js
push
mov
loopne
adc
in
mov
adc
loop
sbb
rol
xor
notl
and
adc
push
add
adcl
sub
bound
or
std
inc
sarl
inc
mov
and
lock
xchg
lods
js
int3
pop
jb
movsl
into
inc
enter
add
inc
jae
push
jle
sti
and
cmc
xor
stos
push
in
pushl
xchg
pusha
dec
sbb
mov
sbb
push
lahf
or
aad
testl
insb
add
push
je
rclb
mov
and
rorb
rorl
dec
dec
adc
cmp
add
push
enter
xchg
mov
outsl
aad
push
pop
push
out
ret
sti
es
cld
inc
stos
stos
or
sbb
in
scas
iret
fst
int3
jno
pop
pop
inc
aas
sbb
aas
in
lods
nop
cmp
jmp
adc
mov
sbbl
jns
cmp
mov
fisubrs
adc
int
fwait
hlt
int
outsl
lods
out
pushf
int3
xorl
lock
in
outsb
leave
mov
jo
imul
pushf
arpl
adc
cmp
in
into
sub
xchg
rorb
xor
xchg
sub
pop
clc
addl
xchg
lea
push
sbb
pop
cwtl
push
pop
dec
xchg
imul
jmp
cmp
stc
or
mov
dec
notl
push
int
sbb
pop
add
insl
sub
xchg
jae
sub
orl
ret
sbb
nop
xchg
xor
mov
jns
aas
push
notl
or
sbb
xor
mov
xchg
cwtl
xchg
sti
dec
pusha
jbe
aas
jle
imul
fs
push
jne
sub
and
jnp
pop
adc
xchg
test
jo
jne
cmp
out
mov
out
dec
movl
fs
xor
cmpsb
xor
sahf
fldcw
xchg
jmp
xlat
sti
popf
jb
imul
loope
xor
adc
mov
ret
xchg
popa
loopne
cmp
mov
iret
sbb
imul
cwtl
mov
test
sub
push
or
scas
fwait
or
dec
hlt
sbb
push
cld
test
jne
mull
inc
xor
pop
ret
jecxz
push
push
xchg
call
dec
mov
rolb
leave
xchg
loope
jae
jns
dec
leave
insb
jp
pop
pop
sub
inc
cmp
loope
push
ljmp
fstps
adc
popa
movsb
fisubl
into
dec
test
inc
sti
mov
mov
add
adc
xchg
adc
and
daa
add
loope
repz
cmp
pop
xchg
inc
jae
js
scas
iret
std
mov
xlat
push
das
iret
repz
dec
xor
stc
enter
repnz
out
mov
push
lods
push
and
mov
cmp
add
lar
or
adc
inc
mov
in
fs
inc
adc
mov
gs
jnp
jmp
in
in
jno
paddsw
jmp
xchg
enter
jnp
mov
cltd
cmp
loope
pop
insb
cltd
cs
jg
or
and
addr16
sahf
cmpsl
popf
sub
xchg
test
lcall
inc
jmp
sbb
pop
inc
hlt
mov
push
push
jmp
xor
adc
dec
sahf
movsb
sub
stos
inc
inc
mov
les
ret
or
and
fisubs
shrl
fs
icebp
adc
aam
mov
mov
mov
bound
fucomi
add
cld
dec
in
daa
cmp
or
mov
xchg
popf
cld
mov
stc
inc
pop
sbb
inc
dec
inc
lcall
mov
out
mov
lcall
out
sbb
xor
lret
inc
cmp
inc
ds
iret
jle
fcmove
mov
jmp
lods
movsl
add
mov
pop
pusha
insb
orb
js
loope
repz
out
or
call
sbb
lahf
cmpsb
pop
jmp
test
xchg
jp
push
mov
mov
push
lahf
int
push
popa
mov
pushf
and
loopne
adc
imul
nop
adc
cmpsb
dec
loopne
int3
xchg
push
or
dec
inc
sub
xor
pop
dec
out
pop
fs
lret
scas
lds
adc
je
sub
jo
or
pop
pop
sbbl
in
popf
aam
iret
xor
ljmp
inc
xor
lea
in
xor
adc
adc
push
mov
dec
jecxz
or
cmp
dec
push
cmpsb
nop
aaa
cmpsb
ret
fcoms
addr16
popa
xchg
jmp
dec
mov
push
dec
call
push
xchg
and
jnp,pn
les
ficoms
dec
push
mov
orb
movsl
jbe
mov
lds
sub
cmp
xor
and
loopne
mov
mov
or
call
fwait
ds
xchg
lods
xor
rolb
lea
mov
sub
aad
push
or
push
cmp
mov
pop
leave
xchg
add
ficoms
pop
cmp
sub
jp
sbb
add
sbb
mov
mov
or
cld
aam
push
cmp
jge
jge
fwait
cmpsl
inc
repnz
in
inc
push
dec
cld
inc
sti
xchg
mov
lods
insb
jg
flds
test
sub
push
push
cli
dec
pop
add
int3
mov
dec
push
int3
cld
mov
ja
hlt
sar
xchg
fimull
je
xchg
dec
adc
pop
adc
into
sbb
mov
cmp
shrl
in
pop
sbb
out
jle
out
lahf
in
cmp
icebp
sti
xchg
repnz
mov
sbb
sub
bound
xlat
xor
mov
mull
lret
adc
orb
nop
cmpsl
sahf
idivb
outsb
mov
shll
icebp
dec
dec
iret
push
xchg
in
mov
cli
xor
or
ret
add
sub
icebp
int
jmp
in
xor
pop
mov
sub
pop
mov
jbe
roll
pop
sub
add
cmp
leave
mov
inc
stc
mov
stos
and
ljmp
in
or
jns
insb
lods
pop
outsb
ret
push
cmp
and
cltd
inc
cmp
ds
nop
cli
rcll
inc
add
adc
fists
sbb
mov
pop
lea
sub
loope
fst
adc
jne
xor
jg
jl
mov
or
and
ret
stos
mov
out
inc
gs
adc
xor
inc
inc
in
xor
cmp
or
je
bound
dec
fimull
hlt
push
inc
cli
icebp
cmpsl
dec
out
xchg
add
xor
stc
ljmp
pop
push
mov
xchg
mov
cmp
into
sbb
jno
mov
iret
pushf
loop
xchg
xchg
popl
push
dec
adc
lret
push
pop
push
jne
loopne
insb
stos
mov
loop
jge
lcall
out
push
pop
insb
sub
into
inc
adc
test
aaa
fstpt
mov
outsl
mov
cmpsb
stos
cmp
mov
xlat
xchg
cmp
test
lea
bnd
rcll
cs
sub
rolb
and
inc
aaa
xor
push
sub
or
pop
push
dec
mov
popa
jne
sahf
cmp
sub
fistpl
sbb
lret
pushf
mov
mov
adc
cmpsb
xor
in
mov
xor
addl
xchg
test
stos
cmp
pop
sbb
scas
xchg
daa
lock
stos
cmpsb
push
sbb
ret
stc
loope
loop
jecxz
sahf
xor
popf
andb
mov
jecxz
cmp
add
imul
in
adc
sub
lds
adc
mov
test
xchg
mov
mov
scas
mov
adc
adc
test
in
lret
push
cli
adc
cmpb
lds
jl
mulb
xor
scas
mov
dec
xor
pop
cmpsb
lock
mov
mov
adc
adc
or
int3
sbb
cmpsl
insl
jns
lret
pop
mov
mov
sbb
or
jge
adcb
ss
shl
xchg
xchg
jae
je
adc
in
xchg
fs
inc
jne
push
inc
out
fnstcw
cmpsb
mov
and
in
push
sub
inc
xor
push
std
xor
adc
pop
aam
sub
in
pop
repz
movsb
xchg
mov
mov
outsb
sub
sbb
mov
std
jecxz
add
xlat
pop
adc
sti
mov
jmp
or
push
pop
loopne
and
jb
xlat
cmp
fsts
filds
clc
inc
cmp
sbb
imul
push
jp
inc
rclb
fidivl
sbb
lret
pop
lea
mov
outsl
inc
push
cld
fists
frstor
mov
fsubl
inc
fsubrs
cs
fsubrl
dec
hlt
call
lret
or
int
cmpsb
stos
ret
scas
lods
pop
out
rorl
fwait
je
push
push
vsubss
fstps
sti
push
sbb
pushf
movsl
sbb
fs
mov
lods
aas
jne
cli
inc
inc
jge
out
and
jl
mov
in
cltd
jl
jp
jnp
inc
stos
sbb
push
or
lock
add
fmull
sbb
jae
cmpsb
ror
push
mov
in
js
mov
out
xchg
addr16
push
mov
in
cmc
cld
push
pop
sub
push
out
mov
nopl
mov
jecxz
inc
clc
cmp
cld
inc
ds
out
mov
hlt
std
shlb
and
sub
test
jbe
ss
push
imul
push
fld
mov
loop
sub
int3
lock
push
or
dec
xchg
mov
push
push
mov
lods
or
pushf
jle
ret
loopne
nop
cmpb
pop
les
mov
enter
insl
int
lret
inc
jle
push
pusha
aam
mov
mov
les
sbb
mov
insl
sub
fmuls
in
mov
es
addl
xlat
add
test
xchg
and
xchg
pop
or
std
add
push
inc
and
sub
lds
pop
push
test
cld
pop
add
xor
sbb
test
cmp
jae
mov
stc
jp
iret
or
aaa
repnz
pop
push
iret
jecxz
icebp
sarl
fwait
xor
pushf
dec
repnz
dec
aas
pop
ds
inc
cs
ss
pop
and
cmp
push
imul
xor
enter
fcmovnu
mov
sarl
cmp
rcl
cmp
loop
adc
mov
dec
lods
ss
xor
add
jg
jbe
movsl
dec
mov
mov
mov
js
mov
jbe
push
pop
add
or
cmp
cwtl
fidivl
gs
cwtl
sbb
enter
es
fcmove
test
inc
lock
mov
mov
ret
mov
and
and
xor
inc
aam
sub
xchg
xchg
aad
adc
and
xor
lods
daa
cmp
icebp
mov
inc
mov
lahf
mov
cwtl
ret
movsb
and
imul
xchg
adc
dec
test
addb
adc
push
cmp
enter
cmpsb
in
adc
sbb
lret
push
mov
in
decb
xchg
imul
mov
dec
enter
add
outsb
xor
mov
gs
fnstsw
adc
jge
test
push
xor
mov
pop
mov
inc
in
icebp
mov
xor
filds
aam
ja,pn
push
mov
shll
test
daa
fsubs
rcrl
adc
outsb
lock
lock
push
pop
jne
out
unpckhpd
stos
xchg
push
jnp
and
add
pusha
lds
or
adc
das
dec
popa
mov
push
inc
popa
out
call
push
push
jl
xchg
cmp
and
pop
sub
xor
add
sbb
mov
and
xchg
mov
sbb
ret
shll
jp
dec
movsl
and
inc
jns
cmp
push
fimull
inc
aad
ficomps
ljmp
scas
aad
loope
jecxz
push
in
mov
cmp
jecxz
jecxz
mov
insb
es
mov
clc
out
into
mov
cli
pop
add
gs
movsl
into
negl
sub
xor
cmp
dec
jg
hlt
cld
add
sub
inc
mov
mov
sub
cmpsb
aad
outsl
pushl
dec
jnp
outsb
mov
sub
lea
in
inc
cli
fidivl
fmull
mov
inc
xor
in
pop
xor
clc
dec
fxam
xchg
shlb
sub
xor
mov
xchg
aam
fstpt
out
mov
pushf
inc
add
insl
nop
adc
loope
inc
jo
jge
jmp
js
adc
xchg
push
push
cltd
pop
inc
aas
mov
int3
or
repz
push
adc
fisubrs
xor
xor
mov
sub
sbb
lret
repz
mov
daa
in
sbb
rorl
jno
insl
int
lret
ret
pop
bound
dec
jp
cmp
repz
push
adc
jne
bound
clc
adc
pop
popa
push
sub
scas
push
in
int
fsubl
dec
call
jbe
dec
xlat
mov
bound
movsl
xchg
mov
ljmp
test
xchg
out
dec
iret
push
mov
mul
mov
xor
fsubrl
sahf
dec
adc
mov
mov
pop
xchg
sti
pop
scas
mov
sbb
insb
mov
sbb
shrl
test
ds
je
or
dec
xchg
test
xor
ljmp
pop
pop
ja,pn
js
add
imul
mov
adc
mov
pop
insl
enter
push
mov
mov
inc
push
popf
dec
cmp
je
add
push
xor
test
imul
test
xchg
js
jge
xor
mov
and
loop
jno
adc
xor
mov
cmp
lret
and
sub
cli
and
out
xchg
shll
xchg
shlb
ret
sub
imul
stos
xchg
add
add
scas
cs
push
inc
pop
fildll
push
fdivl
es
test
iret
imul
mov
popf
and
outsb
mov
jbe
push
shr
aam
stc
out
cmc
call
scas
sahf
dec
inc
test
data16
adc
imul
movsl
pop
and
rolb
mov
pop
in
mov
adc
inc
xchg
lds
adc
jle
rcrl
cmp
dec
or
stos
add
bound
and
test
push
jno
shll
dec
inc
sahf
sub
fnsave
cmpl
add
sub
sub
push
mov
es
and
push
xor
jo
sub
icebp
mov
push
mov
jne
cwtl
repnz
adc
cld
sbb
cmp
fsubp
xor
lret
xchg
and
pop
pop
cmp
sbb
sti
sar
sub
roll
cli
rcr
mov
jp
jle
lcall
pop
dec
je
dec
pop
ret
out
aad
dec
cmpsb
and
js
clc
mov
jb
scas
sub
adc
shll
fcomp
fcoml
dec
xchg
or
icebp
pop
cmc
mov
imul
push
xchg
jmp
mov
cmp
aad
jle
lods
sub
or
jo
pop
pop
lock
movsl
and
les
les
inc
dec
pop
pop
test
mov
flds
add
lock
mulb
adcb
mov
es
or
leave
shrl
addr16
imul
shlb
push
mov
mov
mov
cmpsl
ljmp
imul
jmp
adc
lret
pop
xor
push
xchg
jl
cmc
in
jne
and
dec
or
adc
dec
insl
daa
lret
mov
fwait
sti
dec
int3
push
pop
imul
adcb
test
dec
test
ljmp
xchg
das
clc
inc
aam
add
in
mov
xchg
repz
lret
mov
and
imul
mov
inc
ficomps
aaa
add
movd
push
pushf
notb
cmp
lods
sub
and
dec
mov
fs
xlat
insl
nop
hlt
add
mov
add
cli
nop
in
cmp
mov
scas
inc
fs
mov
rorb
rcrl
xor
lret
pop
cmp
inc
xchg
lahf
jns
lock
mov
dec
inc
xor
sahf
dec
loopne
mov
sbb
lret
lret
icebp
ficoms
test
mov
and
dec
mov
imull
sub
and
push
xchg
and
inc
sbb
xchg
push
in
add
inc
mov
hlt
adc
out
mov
int3
add
pop
pop
xchg
shll
pop
or
fdivs
push
mull
cmp
xchg
test
or
sub
jne
xchg
je
lds
roll
test
dec
lret
xchg
das
repz
xor
xchg
push
jno
out
xchg
or
pop
xor
repz
ds
cmc
adc
btc
pop
lret
jae
pop
sbb
push
es
pop
vmaxss
xchg
lret
xor
sbb
xlat
dec
xchg
arpl
add
aad
les
data16
cwtl
imul
lea
cwtl
push
ret
xchg
mov
jo
ljmp
mov
std
add
lahf
icebp
test
inc
call
jnp
push
fisubrl
mov
push
and
fildll
sti
in
fisubrs
xchg
pop
aaa
adc
pop
int3
popa
popf
mov
xor
or
cwtl
and
mov
sub
out
imul
xorb
shl
enter
lret
in
mov
pop
pop
mov
sbb
cmpsb
pop
aam
js
notl
lods
stc
cmp
lods
push
mov
jnp
loopne
mov
xchg
mov
gs
addr16
aaa
clc
loop
int
push
xchg
scas
aas
aas
xor
es
push
push
sbb
fxch
mov
mov
ss
mov
mov
testb
ljmp
mov
arpl
std
loopne
ljmp
mov
push
xchg
adc
popf
inc
jbe
stc
pop
mov
xor
addl
jge
sub
cmp
call
lahf
shll
insl
sarl
ljmp
into
jo
gs
aaa
xchg
pop
cmpsb
pop
cmpsb
test
jns
nop
enter
adc
sbb
iret
mov
adc
pop
pop
ds
inc
adc
sbb
cmc
ret
adc
cmp
ret
jecxz
scas
mov
cmpsl
lea
sahf
js
cmc
dec
mov
push
dec
push
daa
sbb
pop
cmpsl
aam
xor
adcl
popa
shll
stc
mov
xchg
push
xchg
sti
je
sub
call
stc
push
insl
scas
mov
fadd
jg
out
dec
xchg
xor
das
cmc
xor
repnz
xchg
fmulp
xor
mov
das
jp
dec
add
mov
jno
inc
mov
test
call
fwait
inc
test
cmp
int3
out
add
lea
xor
cmp
push
cmp
in
or
mov
and
mov
das
mov
and
hlt
or
loopne
jnp
jle
jge
pusha
inc
mov
daa
and
pop
std
mov
cmp
sbb
cwtl
aam
mov
stc
push
fadds
jne
dec
fldt
addb
dec
icebp
imul
cld
xor
into
jg
dec
ret
xor
cltd
sbb
lret
adc
pminsw
lock
cmp
fcomps
cmp
fidivrl
es
xchg
adc
mov
rcr
xchg
lahf
cwtl
sbb
lods
pop
jmp
ffreep
lock
fisttpll
jno
xchg
cs
and
shlb
int3
js
jns
mov
hlt
fwait
scas
les
pushf
add
mov
or
cmp
incl
xor
push
push
xchg
adc
mov
mov
sub
add
xchg
lea
in
ret
in
push
pop
decb
and
shrb
gs
aam
js
mov
jb
cmpsb
mov
rcrb
mov
mov
lods
insl
pop
lods
int
movsb
mov
and
test
clc
dec
pop
xchg
inc
mov
jge
jp
stos
inc
cmp
out
jb
scas
ret
mov
div
mov
jge
xchg
gs
dec
mov
mov
fabs
xor
dec
add
push
inc
mov
ljmp
sahf
repz
in
stos
loopne
test
adc
or
xlat
pop
fisttps
push
inc
sbb
jmp
stc
popf
data16
jge
mov
sub
push
push
in
push
repnz
lock
jl
or
in
add
push
mov
fs
and
sbbl
mov
and
ja
mov
mov
sub
inc
sahf
icebp
fwait
pop
in
push
test
iret
dec
push
xchg
dec
cmp
enter
bound
lods
call
inc
addr16
and
repz
push
jp
ret
mov
inc
fstpt
mov
mov
data16
add
xorb
adcl
lds
jmp
out
inc
jnp
push
cmpsl
push
out
mov
cmc
cli
lods
notb
inc
pop
out
jnp
sbb
or
and
mov
call
cmp
int
mov
sbb
movsb
testb
sbb
dec
es
adc
enter
mov
inc
add
in
sbb
enter
mov
jge
andl
jae
push
loop
mov
popa
jl
js
xor
xor
cmpsb
mov
das
add
fwait
pushf
push
es
mov
out
fadd
jb
or
test
or
or
mov
jns
mov
movsb
add
mov
inc
addr16
adc
scas
xchg
push
fs
sahf
movsb
xchg
xchg
xor
aad
sti
pop
add
dec
scas
pushf
stc
scas
dec
imul
jmp
dec
jns
xor
aaa
and
add
mov
notb
sub
push
adc
sub
mov
cmp
sti
push
cmpsb
ss
das
mov
xchg
fsubrp
add
mov
mov
push
pop
mov
cld
or
repnz
lock
daa
mov
pop
push
xchg
mov
cmp
shl
clc
pop
xor
gs
cmp
lret
cmp
cmc
dec
movsb
jl
sbb
ret
jecxz
mov
mov
cmp
fdivr
xchg
ss
clc
inc
cli
mov
fwait
scas
push
daa
push
and
fs
sub
push
je
lcall
inc
cli
lcall
jle
jmp
loope
out
sahf
sbb
gs
mov
xor
imul
ljmp
sub
dec
pop
imul
outsb
jp
fs
jmp
pop
cmp
ss
mov
and
pop
in
cmpsl
sti
xchg
push
insl
addr16
out
cmp
adc
cmp
push
cmp
and
jno
fimuls
dec
stc
cmp
das
jno
stc
push
clc
push
or
sbb
mov
cmpsl
in
stos
loop
cmp
pop
jge
arpl
xor
iret
and
xchg
jmp
dec
xorl
mov
mov
mov
dec
mov
int
cmp
pop
mov
pop
mov
and
fmuls
cwtl
xor
iret
or
cltd
scas
lock
cld
mov
lahf
add
sub
lret
pop
or
sarb
mov
and
shll
sub
cmp
popf
xor
data16
sbb
ret
mov
or
inc
xorb
or
mov
cli
push
push
inc
sub
insl
mov
jecxz
push
test
in
pop
push
pushf
lds
mov
dec
js
xchg
sub
mov
out
and
std
aad
dec
mov
xchg
dec
lea
orl
sbb
out
mov
mov
jno
mov
cmp
sbb
in
mov
lcall
sbb
aad
cld
sbb
out
testb
jb
scas
pop
cmp
enter
fwait
xchg
shll
or
xchg
sbb
mov
movsl
lds
mov
ror
xor
loope
pop
mov
daa
xchg
mov
jb
or
jle
fistpl
sbb
out
jo
sar
mov
test
cltd
jae
lock
jge
lds
add
shr
shrl
sbb
sbb
and
pop
jle
inc
adc
and
daa
sbb
cmp
jae
mov
icebp
xorb
out
int3
xchg
xchg
pusha
fcmovnb
out
loope
shrb
pop
pop
inc
lods
pushf
jmp
int
lret
mov
lcall
stos
mov
pop
outsl
call
push
jne
imul
sahf
push
movsb
lea
pop
fistpl
pop
sub
xchg
out
pop
test
js
out
std
jo
jbe
xchg
inc
push
xchg
inc
pop
cmp
mov
gs
sbb
sub
add
sub
pop
cmpsb
xor
cmp
sub
pop
mov
or
push
imul
mov
push
jge
andb
jle
mov
add
stc
jl
cltd
sub
pop
out
xchg
jnp
adc
inc
push
mov
add
mov
cmc
dec
hlt
nop
aas
xlat
pop
loopne
lods
jae
or
inc
idivb
test
test
ret
sub
xlat
fcomps
call
leave
lret
enter
lea
test
in
and
in
mov
dec
fiadds
or
lods
std
pop
cwtl
les
ljmp
fwait
insb
sub
and
mov
lock
mov
nop
popf
inc
sbb
mov
aad
enter
cmp
in
cmp
std
mov
in
lea
mov
iret
js
icebp
scas
out
xchg
mov
in
imul
jle
pushf
aam
pop
jp
and
pop
sarl
stos
sbb
push
int
es
dec
mov
mov
iret
mov
fidivrl
inc
repnz
sahf
mov
out
dec
cmpsb
sub
ljmp
lcall
lcall
test
sub
test
sbb
js
nop
cwtl
popa
out
in
aad
and
jo
mov
addl
test
inc
sub
mov
xchg
dec
mov
pushf
xor
cwtl
gs
movsb
cmp
adc
cmp
mov
push
rolb
push
jno
sbb
jmp
outsl
sbb
lods
bswap
and
jo
imul
add
loopne
int3
pushf
in
rorb
imul
lcall
fdivrs
mov
stc
add
daa
pop
rorb
int
mov
jmp
aas
cltd
sub
fadds
arpl
inc
push
lods
test
push
addr16
stc
iret
sti
test
arpl
sarl
add
iret
daa
xor
out
shll
jae
pop
lds
inc
sbb
jbe
inc
add
stc
sti
xorb
in
cmpsl
dec
lods
stos
cmp
inc
pop
xor
add
and
mov
cld
subl
add
les
aaa
and
lcall
adc
mov
mov
fs
inc
ds
testl
or
scas
add
cli
rcll
test
lahf
mov
mov
sub
test
xor
sbbb
mov
scas
xchg
jle
xchg
cmp
sub
std
xor
imul
sbb
mov
lcall
mov
sbb
js
gs
hlt
push
lret
insl
psrlq
sub
push
sub
mov
negb
dec
add
lret
mov
mov
pop
xchg
nopl
call
xchg
mov
or
xchg
adc
mov
fildll
adc
push
cmp
jmp
cmp
sbb
pop
mov
mov
sbb
inc
rcrb
fdivrs
inc
shrl
cmp
subl
frstor
icebp
shlb
div
dec
or
std
cmpl
sbb
mov
sbb
push
sub
sub
ficomps
out
inc
repnz
and
rcr
xchg
cmc
pop
push
loop
xchg
fdivs
inc
lock
push
aam
cs
adc
xchg
xorl
orl
mov
xor
add
enter
push
and
push
repnz
mov
in
add
scas
loope
ret
or
mov
pushf
pushaw
call
mov
dec
push
push
rcrl
dec
inc
xor
nop
push
repz
movsb
mov
shrb
outsl
lods
imul
aaa
aas
inc
pop
push
push
pop
fists
pop
cmp
push
dec
xor
lods
daa
fcmovbe
iret
xor
mov
cmpsl
mov
fs
xlat
jecxz
mov
dec
mov
cmp
fiaddl
or
pop
out
popa
sub
addl
mov
dec
mov
cmp
push
loope
arpl
das
js
repnz
insb
cli
lret
bound
mov
std
sub
mov
xchg
cmpsl
ror
rcrl
out
jg
test
jge
ret
fimull
jge
outsb
ret
in
or
mov
test
mov
pop
cltd
xorl
inc
shlb
inc
les
fisubs
add
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
jmp
inc
nop
jl
rolb
mov
add
addl
xchg
and
cwtl
js
movsl
fimull
pop
icebp
popa
enter
pop
mov
add
into
add
adc
seta
xor
rolb
xchg
movsl
out
add
mov
mov
lret
call
loope
movsb
jne
push
out
in
inc
and
mov
in
mov
ss
inc
fdivl
ds
sub
adc
call
push
sbb
int3
adcb
or
dec
movsb
jno
insb
dec
cwtl
bswap
enter
hlt
fstpl
add
and
mov
sbbl
fstps
shl
lods
repnz
sbb
outsl
mov
outsl
mov
jg
push
push
insb
inc
lret
pop
push
fnstsw
in
cltd
xor
mov
lret
test
or
add
lock
inc
cmp
je
mov
iret
arpl
or
insl
add
pop
adc
icebp
or
bound
cmpsb
dec
das
pop
addr16
rorl
iret
lock
shl
stc
add
and
arpl
xchg
test
mov
lds
clc
jnp
add
movb
xor
mov
scas
and
subb
mov
cmp
test
dec
subl
nop
jmp
stc
imul
xor
jne
sti
or
pusha
mov
dec
jae
dec
into
fnstcw
sahf
lock
into
adcl
xchg
sbb
jl
cs
push
test
ret
inc
scas
lret
mov
rcrb
iret
rclb
pop
inc
xorl
mov
ljmp
icebp
dec
lods
in
int
jns
repnz
sbb
icebp
jl
adc
ljmp
lahf
jns
xchg
xor
shrb
rorl
or
sbb
aaa
cltd
scas
test
sub
int
xor
inc
repz
icebp
adc
cmpb
mov
push
fcomps
push
vrsqrtss
leave
push
mov
data16
mov
xor
sbb
js
data16
iret
sti
enter
xchg
out
mov
cmpsb
dec
push
fisubl
cmp
loop
mov
add
inc
in
into
dec
adc
sub
lahf
int
outsl
xchg
insl
dec
push
nop
sbb
out
dec
xor
push
push
ja
inc
xchg
int3
mov
addr16
mov
jns
hlt
xchg
push
out
je
xchg
or
out
mov
mov
dec
lods
mov
sub
inc
mov
int
sbb
mov
inc
lret
sbb
dec
add
add
lds
loope
test
lock
cld
popf
xchg
data16
xchg
mov
lds
outsl
cmp
pop
jnp
jno
js
lcall
sbb
jmp
or
pop
sbbb
and
sbb
aaa
fcomps
shrl
sub
fnstenv
loop
xacquire
mov
les
adc
lret
bound
call
mov
sbb
push
out
and
pop
xor
mov
xchg
in
jnp
cmpsl
xchg
in
lret
xchg
orl
add
das
inc
and
int
sahf
sub
pop
push
dec
xor
adc
dec
dec
test
cmp
cmpl
mov
inc
mov
and
aam
movsl
and
mov
and
add
lds
sub
xchg
mov
fldl
dec
adc
or
sbb
js
ret
dec
test
jo
movsl
and
adc
cwtl
inc
dec
aaa
mov
mov
daa
xlat
outsl
jb
dec
ret
push
out
jp
es
mov
or
rcll
in
cld
inc
dec
or
xchg
icebp
nop
sbb
xor
arpl
cmpsb
orb
pop
xor
dec
sahf
mov
mov
mov
lea
lret
fs
mulb
es
test
dec
and
mov
inc
inc
testl
dec
cmpl
pop
cmc
lret
leave
xor
mov
scas
out
push
int
lcall
jnp
add
test
pop
aam
lcall
xchg
mov
sbb
scas
stc
divl
dec
push
je
ja
lds
xchg
leave
cmp
cmp
gs
ja
popa
cmp
sahf
jg
popaw
je
jo
fdivs
add
push
loop
testl
and
out
dec
pop
sub
push
pop
push
rol
xchg
inc
mov
mov
push
xor
lret
cmp
in
scas
test
add
rorb
pop
stc
imul
mov
popa
or
out
sub
pop
dec
add
add
or
lret
stos
out
push
stos
xor
push
mov
xchg
sub
bound
cmp
sbb
pop
fstpt
ljmp
popa
mov
dec
mov
pusha
into
xorl
cmpb
add
jge
mov
mov
dec
rcrl
jmp
adc
xor
inc
pop
sbb
out
insl
or
lret
jle
je
aaa
int3
xor
xchg
inc
push
jno
mov
add
fisubrs
push
lea
xor
add
aas
mov
jbe
inc
add
js
pop
inc
fs
and
out
mov
mov
iret
sbb
das
push
jle
int3
sub
stc
pop
hlt
test
flds
mov
sbb
inc
mov
out
pop
frstor
sahf
call
sub
jmp
mov
inc
mov
pop
rcll
xchg
loopne
inc
mov
out
mov
push
ja
ljmp
or
lret
mov
adc
push
std
enter
fs
out
push
jb
ljmp
mov
mov
mov
sbb
cmp
lods
inc
xor
adc
cs
pop
fs
mov
lret
cmp
xor
bound
arpl
out
xchg
test
mov
add
jno
mov
mull
adc
lea
out
push
mov
arpl
lret
es
push
mov
outsl
div
and
pop
ret
mov
repz
and
mov
popa
and
and
push
or
add
push
mulb
scas
adc
push
popf
cwtl
jmp
int
lret
xlat
pop
in
cmp
rcll
adc
xchg
pop
popa
jmp
jno,pn
clc
xor
add
xchg
inc
rorb
fdivrl
dec
fsubr
cltd
mov
ljmp
push
xor
mov
cmpl
mov
dec
leave
mov
subb
cmc
cmp
jbe
push
mov
outsl
push
xorb
loopne
ret
or
dec
into
repz
mov
das
pusha
lahf
adc
in
mov
cmpsb
dec
inc
add
and
xlat
lods
lock
rcrb
xchg
dec
div
clc
cmpsw
std
pop
xchg
pop
push
pop
jnp
sbb
xchg
mov
mov
mull
outsb
das
stos
pop
jge
mov
das
iret
xor
repz
pop
mov
add
mov
adc
mov
lods
fists
outsl
icebp
sahf
pop
push
sbb
cmpsl
icebp
inc
and
adc
or
or
pop
js
mov
rclb
push
loopne
adc
test
lock
pop
adc
dec
mov
out
stc
adc
add
xchg
pop
imulb
push
or
or
ficoml
cmp
cmp
jns
mov
xchg
es
repnz
xchg
fbld
mov
jnp
gs
push
ljmp
cwtl
sbb
pushl
xchg
push
push
loop
xchg
addr16
mov
popf
pop
loop
aad
test
adc
or
adc
std
sbb
adc
psubw
addb
and
fucomp
pop
inc
movsb
push
leave
inc
xchg
stc
jl
shll
orb
cmpsl
icebp
lock
daa
adc
cmp
aaa
call
mov
add
push
cmp
lds
cli
push
or
cmp
mov
push
or
push
fstpt
leave
mov
das
or
pop
xchg
jbe
lret
pop
inc
ja
rcr
mov
jmp
ljmp
xchg
aam
cmpsb
mov
jg
adc
fnstenv
ficompl
int
call
xchg
sbb
mov
cld
shl
insl
ret
xor
fbstp
cli
or
mov
push
roll
mov
jbe
fsubrp
shrl
in
inc
jl
push
outsb
es
lods
dec
fcompl
mov
rolb
cmp
cmp
jl
mov
nop
pop
fcoml
or
jae
cmpsl
loop
das
push
je
loopne
inc
xchg
out
or
mov
mov
push
xor
pop
movsb
jp
sub
scas
ret
dec
and
push
mov
lret
xchg
mov
pop
enter
push
xchg
xchg
repz
pushf
adc
and
into
lods
add
and
popf
sbb
adc
jns
sub
outsb
notb
dec
test
das
sub
mov
test
add
pop
mov
xchg
sub
inc
es
and
cmp
inc
push
mov
xchg
jle
mov
sub
push
loope
enter
and
mov
xlat
xchg
mov
pop
jecxz
imul
loop
fidivl
sahf
adc
adc
jb
dec
int3
dec
dec
dec
sub
subl
adc
aam
mov
addb
fs
ret
negb
lods
movl
aaa
lahf
or
fdivrs
sbb
mov
xlat
mov
outsl
fs
out
ds
leave
ret
insb
inc
sub
repz
pusha
pop
ret
mov
mov
sub
fidivl
xor
sbb
cmpsl
mov
shlb
imul
movups
hlt
cvtps2pd
pushf
sti
sub
test
push
fisubl
inc
pop
inc
mov
arpl
scas
pop
pop
data16
outsb
cmp
pop
cwtl
pop
push
sahf
jb
cwtl
adc
dec
sbb
nop
dec
cmpb
xchg
stos
push
jno
xchg
in
cmc
pushf
jge
xchg
cmp
faddl
insb
mov
call
clc
lods
iret
subl
ds
inc
jae
pushf
xor
mov
adc
arpl
cmp
data16
inc
and
rclb
cmpsl
and
push
scas
out
jae
sbb
dec
loop
jmp
int3
jge
mov
cmpsb
ret
fldl
rolw
push
js
stc
cmc
cld
inc
sub
mov
dec
mov
iret
notb
andb
ds
ja
pop
dec
stos
mov
in
ss
pop
fwait
subl
adc
jne
cmp
lods
rclb
inc
push
cmp
lea
je
or
dec
push
das
je
mov
rorl
or
dec
imul
jne
cmovbe
in
cli
cmpsl
imulb
iret
call
mov
push
fdivr
data16
shll
gs
shrl
mov
mull
inc
outsb
sub
mov
jp
lods
jge
pop
and
dec
fildll
xchg
jp
fbstp
jmp
subl
jge
sub
cwtl
inc
mov
lcall
inc
sbb
scas
lds
pop
sub
cmp
pop
daa
sahf
sub
push
movsb
xchg
aaa
pop
insb
faddl
or
jno
sub
mov
ja
fbstp
jo
in
shlb
xor
push
dec
clc
popa
scas
std
cmpsb
xchg
pop
xor
scas
insb
outsb
sbb
ret
inc
rcll
adc
xchg
out
dec
roll
rclb
inc
mov
sar
iret
test
adc
lods
add
addr16
roll
sbb
xor
data16
mov
stc
xchg
jmp
xchg
mov
stos
rcrb
push
aad
add
pop
xchg
or
mov
mov
fcoms
fwait
nop
stc
aam
fstpt
in
fdivrl
out
jle
dec
mov
outsl
mov
add
xor
pusha
push
ds
xlat
rcl
jb
xchg
dec
inc
in
out
sbb
jecxz
jae
cs
movsb
inc
imul
shl
les
ja
lods
mov
out
jmp
cs
std
lcall
out
repz
outsb
loop
dec
and
push
test
push
lods
fnsave
xchg
repnz
or
push
jle,pt
mov
pop
iret
mov
pop
push
hlt
pop
inc
jmp
add
out
aas
arpl
adc
dec
push
sbb
adc
mov
fnstcw
nop
jne
mov
and
or
popa
js
iret
out
push
xchg
das
xchg
icebp
add
sub
inc
sbb
movsb
dec
out
iret
cmp
or
test
loope
xor
pop
push
data16
in
mov
in
idiv
jmp
or
clc
cmp
hlt
dec
sarl
dec
sbb
loop
dec
outsl
add
cmp
bts
mov
repnz
sbb
sub
pop
ss
mov
fdivs
cmc
fidivl
lret
jb
cwtl
lcall
shlb
rcl
jp
mov
jne
add
adc
pop
ja
out
testb
popa
mov
hlt
das
pop
outsb
xor
je
loope
xchg
popf
add
dec
nop
xchg
xchg
loop
jo
sbb
arpl
cmp
adc
jmp
mov
out
adc
dec
pop
aad
pop
mov
or
sbb
lods
mov
mov
loop
dec
mov
sub
idiv
dec
fisubl
shlb
notl
popf
loopne
push
mov
fwait
sbb
pop
inc
xor
fldt
or
roll
insl
and
clc
xor
cwtl
or
dec
movsl
cld
in
in
push
imul
ret
fistps
cwtl
inc
cmp
lock
int
lds
adc
mov
lods
ljmp
scas
daa
outsb
jecxz
mov
inc
adc
mov
imul
mov
jne
cmpsb
int3
dec
xchg
test
sti
cmpsb
dec
cld
inc
cli
add
push
fbld
loopne
into
xor
jg
xchg
adc
push
mov
sbbl
shlb
add
test
sbb
jo
mov
mov
jns
mov
mov
lret
cld
mov
mov
dec
mov
sbb
sub
jo
lahf
sahf
sbb
adc
popa
xchg
ja
movsb
dec
xlat
fiadds
mov
xor
pushf
jle
das
pop
add
cld
jmp
aad
les
jp
pop
insl
inc
stc
fs
fwait
sub
in
dec
scas
test
sub
cmp
dec
inc
ficompl
push
sbb
push
pushf
cmp
push
pop
fmul
mov
xor
push
xor
push
popf
or
cmpsl
dec
in
inc
lea
adc
insl
rep
adc
mov
addr16
xchg
in
and
dec
dec
sub
arpl
sbb
lods
add
sti
inc
aam
call
loopne
movsb
jnp
jl
xchg
pop
push
fsubs
enter
pop
imul
rol
and
dec
icebp
bound
pop
js
data16
sbb
out
or
in
sbb
cmp
cmp
dec
and
int3
test
mov
hlt
sbb
sti
jp
cmpsb
or
mov
mov
add
test
in
in
je
aas
out
fldcw
jbe
or
or
lret
fdivl
ret
xchg
out
aas
pop
cmp
inc
mov
dec
fimull
and
jno
or
mov
mov
pop
adc
cmc
test
jecxz
std
in
mov
fwait
lods
iret
mov
outsb
cmpsl
stc
out
test
cmp
aas
out
addr16
out
pop
das
lret
xchg
push
adc
ljmp
push
es
in
xchg
sbb
dec
xor
mov
je
ss
mov
xchg
iret
cmp
out
and
jle
xor
rcll
cmp
add
mov
cmp
jle
test
mov
sub
fcomps
daa
pushl
sub
mov
ljmp
leave
aaa
lds
sarl
cwtl
call
or
add
pop
xchg
mov
add
cmp
mov
adc
fcoms
pop
cmp
shlb
test
ret
mov
cmp
xor
cmp
sbbl
push
adc
les
fistpl
xor
div
pusha
addb
lahf
fcmovne
cmp
mov
inc
cmc
outsl
popa
jp
ja
je
add
mov
jl
inc
fisubrs
cmpsl
movsw
fptan
add
lods
jp
fisubrl
adc
js
lret
out
mov
lock
sub
xor
cmp
test
push
rorb
mov
pushf
mov
jge
xor
fisubrl
das
xor
mov
and
jo
adc
inc
arpl
jbe
addr16
stos
xchg
clc
push
sahf
arpl
xor
and
aas
pop
and
adc
pop
subl
arpl
std
sbb
scas
mov
data16
fsubs
sbb
sbb
dec
inc
add
les
ret
mov
inc
pop
mov
nop
fdivrl
out
jg
sahf
shlb
movsb
xor
subb
scas
fsubrs
jne
lods
xor
mov
fnstenv
mov
lret
adcl
in
push
sub
test
ret
stc
inc
int3
aam
ja
data16
inc
mov
jl
lahf
lcall
std
pop
push
cmp
enter
xchg
aas
pop
xor
cmp
adc
mov
sbb
inc
cmc
and
adc
push
and
es
xchg
dec
out
pop
outsb
jns
pop
leave
mov
pop
pop
test
insl
cwtl
lahf
notb
jns
cwtl
and
rcrl
sub
mov
jl
fstpt
pop
push
test
lret
ds
ds
and
daa
fbld
cs
push
int
push
outsb
loop
xor
out
ret
add
sbb
mov
fcom
out
inc
out
dec
adcb
inc
xor
sbb
sbb
xor
imul
xchg
jmp
aas
sbbb
mov
pop
ds
jno
mov
adc
scas
js
jmp
lea
into
sbb
sub
xor
mov
stc
xlat
xor
adc
dec
sbb
outsb
pop
notl
mov
add
cmp
mov
push
mov
push
pop
mov
xor
sub
andb
sbb
imul
std
mov
inc
mov
lret
dec
movb
cmpsl
dec
xor
cld
bound
mov
in
stos
inc
mov
in
jle
pop
add
jnp
mov
and
pop
sbb
cmpb
xorb
jg
cmp
insl
cmc
and
pusha
adc
aad
add
pop
inc
lods
ja
cmp
pop
sub
clc
nop
icebp
fisttps
and
shll
imul
mov
arpl
adc
inc
and
push
repnz
pop
cmp
mov
leave
add
jae
sti
mov
sbb
pop
jnp
mov
test
int3
or
push
push
lea
add
mov
sbb
test
add
push
push
jb
jmp
jge
sbbb
lcall
jae
jae
inc
insb
mov
stos
es
inc
pop
fcoms
insb
pop
into
mov
mov
mov
popf
pop
pop
dec
mov
sub
cmp
std
stos
lods
xchg
adc
cmpsb
jno
adc
js
mov
dec
lds
loop
inc
jae
xor
mov
movsl
es
inc
or
xor
inc
jo
adc
adc
popf
and
imul
mov
popa
cmp
lods
dec
in
sahf
cmp
mov
jg
fdivrs
insb
imul
cmpsb
enter
sbbb
mov
sets
imul
jle
inc
jbe
cmp
pushf
inc
in
out
pslld
push
mov
xchg
outsl
mov
jg
sub
dec
mov
pop
xchg
hlt
or
sub
out
jnp
mov
test
or
mov
jno
add
outsl
ja
mov
jbe
jno
in
test
sub
xchg
lret
scas
sub
gs
jae
mov
frstor
and
lea
push
cli
xchg
or
je
xchg
int
mov
hlt
fsubs
push
pop
cmp
jle
insb
lret
loop
int
cmp
mov
std
or
mov
rorl
dec
movsb
stc
jbe
ficoml
repnz
push
cwtl
rorb
mov
iret
add
sbb
xor
ljmp
jne
xchg
iret
stos
movsb
sbb
xor
das
jne
add
jno
add
lret
xchg
inc
xchg
pop
or
sub
sub
loope
enter
jle
cmpsl
mov
cmp
mov
call
mov
xlat
sub
lahf
pop
xor
push
push
icebp
adc
sbb
out
jmp
ja
outsl
scas
and
pusha
loopne
scas
sub
cmp
stos
out
mov
dec
repnz
and
cmp
les
out
fnclex
xchg
cwtl
outsw
adc
das
inc
aas
xor
into
pop
cmp
out
push
cmpsl
mov
fwait
subl
shll
sub
out
jb
pop
gs
dec
jl
int3
or
pop
add
adc
cli
in
pop
es
pop
frstor
leave
mov
cmp
mov
imul
inc
mov
gs
push
cmpsb
pushf
push
inc
outsb
pop
leave
jge
lea
lcall
push
fs
and
enter
in
adc
inc
fnsave
lret
push
push
fwait
xor
mov
push
mov
and
mov
push
ljmp
cmp
mov
aas
popa
mov
adc
inc
xor
pop
or
rolb
pop
in
push
lods
ja
dec
divb
dec
mov
out
or
and
mov
push
std
push
inc
and
ftst
mov
movsl
psllq
je
adc
push
or
aas
pop
inc
ret
nop
out
lea
mov
adc
popa
repz
stc
mov
lds
cmp
rorb
lcall
loope
mov
xor
cld
mov
inc
in
fsubs
pop
sbb
jle
mov
mov
mov
and
out
mov
dec
sub
daa
aad
outsb
lock
add
icebp
pop
mov
mov
repnz
sbb
or
xlat
mov
mov
jecxz
in
dec
pusha
pop
ljmp
int
push
and
aam
jge
cs
add
adcl
dec
jmp
and
addl
bound
pop
push
ds
leave
mov
imul
daa
mov
andl
xorl
cmp
jne
xor
jle
push
fadds
enter
mov
scas
xchg
or
jge
aas
out
lock
fists
ja
mov
inc
fdivl
stos
xchg
cmpsb
jb
rcl
incl
or
mov
push
les
in
outsb
stc
add
sub
and
sub
cmp
push
int3
sbb
push
xor
shrb
inc
imull
push
lret
sbb
and
pop
inc
addr16
repnz
pop
ds
sbb
loopne
test
add
adc
or
int3
jl
sbb
mov
lcall
sbb
add
lock
sub
xor
mov
mov
in
pop
jmp
jge
mov
rorb
add
cwtl
mov
iret
out
clc
pop
pop
add
mov
sub
inc
inc
xchg
out
ja
jge
aaa
lcall
push
xorb
xchg
xor
cmc
shl
jmp
cmp
fnstenv
out
jbe
in
xchg
mov
pop
add
inc
jp
push
or
mov
hlt
inc
lds
nop
shrl
cmpsl
cltd
add
ljmp
in
dec
mov
popf
test
dec
mov
ds
call
movsb
sub
iret
popf
cmpsb
cmp
ds
sbbl
out
xor
sti
sbb
mov
pusha
dec
lcall
xor
into
adc
push
insl
lock
or
inc
mov
jge
push
push
test
loope
xchg
das
adc
sub
fstl
adc
lods
pusha
and
cltd
and
xlat
insl
hlt
fcompl
arpl
ljmp
xchg
mov
fbld
xchg
fdivl
pop
push
jg
push
pop
lock
insb
push
jb
fimuls
cmpsb
inc
scas
outsl
inc
jmp
arpl
imulb
imul
sub
andl
and
cli
test
push
adc
xor
xor
out
jbe
dec
lock
movsb
inc
jo
cmpb
push
pop
orb
xlat
cmc
fs
rcll
sub
xor
leave
movsl
int
fincstp
idivb
in
dec
ds
das
out
ficompl
out
stos
mov
lcall
jge
nop
fwait
sbb
sub
xchg
sub
aas
push
out
push
xchg
insl
ret
mov
hlt
in
out
push
inc
push
push
jle
test
icebp
rclb
lods
repnz
xchg
int
test
mov
mov
dec
or
dec
movsl
xchg
sbb
or
std
jae
pop
divl
scas
ds
adc
xor
adc
mov
add
push
mov
mov
sti
dec
pop
outsl
arpl
push
sub
sub
mov
sub
test
pop
push
scas
icebp
mov
stc
adc
inc
imul
test
jbe
dec
cld
insl
fldt
mov
aad
push
push
sub
aas
lret
or
dec
setl
adc
hlt
aaa
jne
adc
call
loop
and
mov
mov
sahf
mov
shrb
movsl
pop
mov
xor
in
shl
dec
or
pop
inc
push
int3
inc
lea
jae
and
add
cwtl
jae
loop
sub
pop
mov
and
sahf
mov
inc
add
adc
mov
ja
xchg
lret
xchg
ss
loopne
or
mov
xchg
cmp
mov
or
push
dec
mov
movsb
bound
movsl
sub
arpl
jge
out
ljmp
aad
jl
fnstsw
aas
cld
cmc
or
xchg
jae
je
insb
mov
push
scas
jge
out
or
stos
dec
add
push
subl
adc
pop
imul
xchg
pop
mov
loopne
inc
leave
mov
outsb
xchg
xchg
cli
dec
push
cmpsl
ljmp
fisttps
jo
xchg
aam
setb
mov
add
xchg
xchg
jle
jbe
add
mov
push
lcall
imul
pop
loope
adc
pusha
dec
jge
fisttpll
repnz
mov
dec
lea
sub
test
xchg
sbb
iret
or
xlat
lods
ret
cmp
inc
pop
cmp
cmp
ljmp
pop
cmc
shll
mov
cmp
stos
gs
js
sub
pop
mov
in
sbb
pop
test
jmp
ficomps
stos
lods
jge
mov
xchg
inc
pop
xor
pop
inc
jno
lahf
bnd
mov
icebp
dec
movsb
adc
dec
cltd
xor
and
inc
xchg
mov
pop
adc
aam
and
lea
subl
pop
pop
cltd
sti
cmp
shr
sub
and
mov
test
jle
icebp
lret
sub
add
pop
mov
cmpsl
scas
paddsw
adcb
lret
repnz
imul
lods
imul
mov
imul
push
daa
adc
mov
mov
or
sub
and
leave
fs
aam
xor
repnz
jo
notb
dec
insl
xchg
mull
call
roll
xor
dec
inc
pop
dec
jp
cs
out
enter
dec
ds
movsl
cltd
or
aaa
jne
dec
add
cwtl
sub
in
and
add
int3
cmp
ret
mov
add
inc
jns
push
je
out
mov
cmp
pop
dec
lds
std
imul
xlat
pop
inc
jb
inc
cmp
dec
test
xchg
pop
adc
jp
mov
imul
les
sbb
push
push
add
leave
mov
inc
or
inc
or
add
cmpsb
enter
jmp
in
pop
and
xchg
mov
test
cmp
sub
pop
adc
rcrl
cmp
push
les
jae
inc
or
mov
mov
mov
pop
scas
dec
loop
adc
jns
je
data16
cmp
jp
dec
pop
rolb
jp
or
pop
je
insb
add
cmpsl
dec
movsb
mov
iret
lret
popa
xor
std
xor
or
jne
dec
inc
jnp
or
cwtl
cmp
insb
mov
jae
push
daa
cmpsb
xchg
and
mov
popa
inc
movl
jle
cld
cmpl
push
in
mov
pop
hlt
mov
mov
dec
cmpsl
push
mov
sub
das
xor
jecxz
adc
cs
jge
cmp
mov
push
aas
cmc
push
lods
and
push
mov
movb
test
pop
xchg
test
gs
push
add
sub
sbb
push
aad
jp
sbb
loope
push
fisttps
addr16
in
cmp
push
ret
cltd
andb
stos
pop
fadd
push
mov
or
ret
ljmp
clc
or
lea
insb
sbb
lret
frstor
stos
mov
in
arpl
mov
loop,pt
inc
sbb
add
hlt
cmp
outsl
mov
adc
xchg
cltd
push
cmp
cltd
push
sbb
xlat
xchg
out
repnz
cwtl
sbb
push
inc
scas
call
movsl
push
cmp
fsub
push
cmpsb
add
mov
sbb
push
insb
cmp
popa
fmulp
jne
out
or
inc
xchg
sbb
sti
adc
xor
cld
mov
inc
push
mov
mov
test
into
movsl
shl
inc
loopne
test
data16
and
imul
js
cmp
pop
adc
sub
repz
jae
fldl
daa
mov
leave
cmp
leave
inc
push
das
in
dec
adc
sbbb
jle
pop
cmp
mov
pop
cmp
xor
jle
mov
int
out
sub
jmp
lret
xor
mov
mov
iret
or
ja
cs
adc
lds
pop
movsb
lret
jp
xchg
flds
pop
cli
mov
in
daa
sarb
cmc
mov
mov
xchg
mov
xlat
mov
cmp
and
sub
cmp
push
ljmp
rorb
stc
in
jb
jno
dec
aaa
adc
xchg
mov
dec
shlb
sub
push
movsb
in
shrl
push
enter
test
xor
cli
js
lock
dec
or
test
sbb
and
mov
push
adc
ds
mov
divl
inc
mov
jo
int3
mov
mov
cmp
sub
sahf
pop
push
push
dec
or
pop
ljmp
scas
jmp
jnp
icebp
fsub
mov
sbb
mov
jne
int3
imul
repnz
subl
mov
or
dec
aam
adc
inc
stc
mov
leave
shll
sbb
adc
int3
lahf
dec
or
icebp
gs
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
jmp
test
addb
loopne
lahf
dec
pop
cmp
andl
pop
mov
sbb
fs
test
fidivrs
mov
inc
int
xor
pop
cmp
fwait
popa
and
enter
aas
cwtl
mov
xor
mov
in
xchg
pushf
add
fmuls
rcll
fstpt
leave
pop
dec
adc
ljmp
jb
nop
push
in
bswap
jo
add
cmp
popa
fidivrl
out
add
xchg
enter
enter
jo
xor
fistl
xlat
sbb
mov
mov
jb
mov
movsl
loopne
mov
sbb
leave
sti
dec
out
pop
sbb
dec
pop
inc
ja
lock
shr
loope
pop
addb
je
ret
or
inc
pop
js
enter
pop
jo
and
fsubrl
mov
inc
sub
icebp
mov
jecxz
push
mov
xchg
jb
jmp
and
outsb
and
icebp
lret
jbe
mov
pop
stos
dec
insl
leave
call
fcoms
sub
movlhps
hlt
add
nop
je
jb
jmp
sbb
or
inc
arpl
jp
xor
imul
mov
test
insb
pop
inc
int3
or
pop
shl
dec
test
jp
jle
jp
cwtl
loopne
push
cmp
repnz
mov
or
cmp
ds
js
mov
outsb
push
mov
jns
cwtl
pop
iretw
out
jp
xlat
jns
mov
imul
insl
adc
iret
cmpsl
js
mov
or
mov
mov
adc
ss
or
shrl
ljmp
shrl
sub
sbbl
sarl
xchg
es
sub
fs
push
mov
mov
sbb
or
xchg
out
dec
lret
test
and
fnstcw
jae
push
mov
in
ja
repz
arpl
jo
push
sahf
add
pushf
push
adc
mov
cmp
inc
imul
cltd
cwtl
cmpsb
dec
fisttps
jp
dec
adc
adc
mov
jbe
bound
sub
inc
mov
cmc
sub
cmp
ficomps
dec
rolb
stos
cli
lods
mov
sbb
xchg
pop
imull
cmp
sbb
lods
pop
faddp
xchg
nop
and
shl
xchg
ss
aas
loope
sahf
sbbb
jae
xchg
mov
push
mov
sbb
adc
pushf
xchg
mov
loopne
lret
pop
push
mov
push
cmp
in
fldl
sub
mov
outsl
mov
xchg
mov
inc
inc
notl
les
inc
pop
inc
dec
inc
jmp
scas
mov
mov
xor
push
dec
mov
popf
xlat
and
lcall
faddl
imul
sahf
jno
outsb
sahf
inc
out
push
jmp
je
push
aad
push
pop
das
cs
mov
lahf
insl
xchg
mov
or
ds
dec
or
cwtl
imul
sbb
jno
cmp
out
jp
lea
fsub
lock
adc
inc
jnp
icebp
outsl
insb
mov
jecxz
sbb
frstor
pop
out
int
dec
adc
sbb
cmp
and
jl
adc
pop
fsubs
pop
jbe
mov
pop
mov
imul
cmp
insb
jbe
rcr
repz
xlat
mov
mov
pop
cmp
mov
pop
aam
sub
or
pop
add
stc
ds
in
inc
test
hlt
stos
leave
mov
mov
loope
out
adcb
ss
pusha
sub
in
xor
jle
and
out
mov
fs
aas
inc
xor
xchg
mov
fmuls
mov
sbb
lret
mov
adc
insl
push
scas
dec
add
inc
mov
aas
push
xchg
dec
imul
test
mov
testb
das
std
mov
add
int
dec
push
or
dec
mov
jo
push
xchg
cltd
pop
sub
out
sub
shll
sbb
sub
inc
xchg
aaa
in
dec
add
stos
dec
sub
fcoml
dec
add
adc
mov
fnsave
lea
lock
cwtl
add
dec
xor
outsl
loop
add
int
push
fidivrl
es
adc
jb
jno
inc
jmp
dec
mov
lods
xor
leave
push
scas
sbb
sarl
xchg
hlt
jg
pop
pop
add
imul
pop
xchg
insb
repnz
cltd
xor
xchg
lods
cmp
scas
stos
cmp
jo
push
divb
out
jmp
int
xor
add
test
xchg
push
dec
sbb
aam
invd
das
loopne
setne
jb
dec
js
adc
adc
pop
pop
scas
and
sbb
gs
fs
pusha
push
dec
cli
pop
out
sbb
add
xchg
sub
xchg
enter
xor
int
add
jmp
hlt
push
inc
pop
dec
push
jge
dec
jo
out
sti
pop
xor
and
call
pop
mov
mov
xor
mov
dec
lods
adc
mov
aam
mov
sti
xor
lock
fdivp
fildl
add
fnstcw
cmp
movsb
adc
insl
jo
in
lcall
std
cmp
and
mov
mov
mov
xchg
and
and
jmp
fwait
or
out
insl
xchg
or
push
sbb
pushf
fwait
and
add
jns
mov
xchg
cmc
xchg
mov
dec
jbe
jmp
mov
mov
dec
pop
pop
enter
and
add
addr16
and
aaa
push
test
mov
pop
jp
xchg
push
pusha
sub
lret
inc
sub
add
xchg
pop
popa
mov
pop
or
xchg
dec
aad
out
movsb
mov
adcb
push
pop
or
add
lret
hlt
notl
pop
sub
lcall
ds
loopne
clc
pop
jno
in
dec
nop
mov
data16
lret
inc
fisttpll
std
inc
int
inc
stc
cmpsb
push
std
mov
loop
jecxz
bound
es
pop
jns
repz
pop
add
push
push
les
insb
xchg
mov
adc
xchg
mov
jge
jle
sub
xchg
sbb
dec
push
push
rcrl
and
mov
sub
test
mov
test
mov
mov
scas
mov
cmp
fs
clc
shrb
hlt
mov
mov
push
mov
xchg
lcall
mull
adc
es
repz
push
mov
popf
ds
adc
sbb
lock
lods
xchg
sub
dec
adc
fadds
insl
mov
scas
sbb
push
rcrl
add
mov
jecxz
and
fwait
jno
les
fs
in
hlt
and
ss
dec
push
push
iret
arpl
fstpl
mov
or
insb
popa
adc
out
scas
dec
mov
dec
adc
cmc
jmp
xor
fdivl
mov
aam
jecxz
inc
ficoml
pusha
cmpb
loop
lods
pop
jp
imul
aaa
mov
mov
imul
push
aas
insb
mov
movsb
inc
xchg
adc
ja
sarl
dec
dec
in
push
adc
jb
add
dec
negb
into
insb
stos
add
cmp
mov
stos
adc
cld
fs
push
aaa
test
stos
dec
into
int3
divb
pop
stos
jg
mov
dec
jp
in
adc
jmp
mov
test
dec
pop
cwtl
mov
adc
hlt
xchg
lock
into
stc
lods
xlat
push
rcl
sbb
and
out
cmpsl
loop
add
scas
mov
stc
addl
movsl
lea
testb
pop
unpckhps
jecxz
pusha
xchg
cwtl
cmp
lahf
jge
je
fdivp
or
aaa
jg
jo
push
jno
es
das
jne
test
or
inc
xor
mov
int
lret
xchg
test
or
xchg
adc
fsts
xor
ljmp
cwtl
sbb
mov
shl
aam
call
jecxz
mov
cmp
xor
sbb
lret
inc
mov
pop
push
sub
iret
and
enterw
movsl
adc
inc
xchg
xchg
nop
int
xor
in
xor
in
insl
dec
test
loop
pop
lds
cmp
pop
pop
mov
sub
dec
and
out
sbb
push
out
adc
push
pop
adc
pop
stos
add
jb
in
cmpsb
xchg
mov
or
push
cs
dec
iret
in
xor
lret
mov
adc
int
xchg
jno
dec
adc
mov
movsb
pop
lret
inc
mov
add
mov
aam
mov
jmp
sbb
sbb
xchg
ret
fidivrs
push
dec
gs
popf
jo
jl
fcompl
pop
cmp
pop
xchg
mov
sub
bound
inc
sub
adc
mov
pop
mov
ss
pop
pop
xor
cmpsl
xchg
and
dec
adc
loopne
shrl
shll
test
dec
and
push
jnp
frstor
test
dec
xchg
pushf
dec
call
push
shl
lret
push
setbe
popf
push
xor
ss
mov
int
sbb
push
mov
and
shr
sub
mov
jp
cltd
dec
inc
pop
mov
icebp
js
lods
nop
addr16
adc
pushf
fwait
add
xor
loope,pt
push
andl
clc
push
pop
divb
lahf
ljmp
and
lret
pusha
dec
aad
fstpl
dec
lock
lret
in
xor
in
sub
sub
loopne
aaa
sbb
leave
test
jne
dec
cld
stos
adc
ds
cmpsb
jns
ds
ljmp
lds
sarb
mov
or
sub
jae
push
das
inc
sahf
cld
imull
push
add
jne
in
xchg
in
inc
loopne
mov
ljmp
test
pushf
aad
xor
out
fadd
lock
call
scas
lea
mov
add
out
mov
pop
pop
or
es
aam
aam
insl
push
icebp
inc
loope
iret
movsb
dec
jmp
ljmp
loope
inc
adcl
dec
or
jecxz
adc
inc
jno
xor
mov
mov
xor
adc
insl
adc
mov
xchg
sbb
nop
add
cmp
iret
or
inc
pop
mov
pop
xchg
pop
push
jge
xchg
gs
adc
inc
dec
inc
clc
add
jnp
jle
or
fmul
out
leave
xor
mov
lock
sub
mov
addr16
add
adc
adc
loope
lret
jl
add
popa
pop
sarb
cmpsb
pop
stos
clc
sarb
js
lea
jno
adc
jl
into
leave
ja
sarb
scas
cmp
repnz
stc
pusha
aam
xchg
shl
adc
xor
mov
iret
push
cmpsb
xor
inc
insb
iret
dec
daa
test
cmp
push
mov
iret
add
daa
insb
jb
scas
jns
sub
dec
adc
fisubl
hlt
hlt
loopne
and
mov
mov
jns
add
cmp
imul
xchg
ja
and
in
out
push
fiaddl
jnp
aas
push
mov
and
pop
clc
xor
dec
dec
insl
rorb
inc
repnz
mov
popf
xchg
xchg
movsl
jns
push
push
push
mov
xor
jecxz
or
les
mov
push
mov
cmp
push
xchg
or
push
aad
out
ror
popa
enter
ss
jle
mov
adc
int
not
xchg
add
mov
sahf
iret
dec
scas
cmp
lcall
sub
adc
adc
aaa
and
loopne
cli
mov
outsl
in
push
mov
xchg
xor
inc
lods
mov
ret
shlb
sar
sub
rcl
jmp
push
add
test
imul
cli
ljmp
cmp
popa
push
enter
orl
ja
pop
gs
clc
inc
int3
test
inc
outsl
xchg
jg
add
mov
into
inc
mov
cmc
pop
dec
inc
mov
addr16
inc
inc
icebp
xchg
pop
fsubl
xor
jns
orb
sbb
pushf
or
call
subl
mov
bound
shll
ret
add
iret
and
out
ret
enter
out
add
fisubs
jnp
and
mov
aad
mov
clc
lock
sbb
jle
hlt
sbb
push
inc
lods
stc
pop
pop
mov
aaa
pop
pop
adc
lret
push
add
cmpl
sbb
lods
testl
shlb
pop
cld
std
xor
or
xor
lea
addb
dec
addr16
pop
cwtl
fsub
dec
fcoml
cld
push
ret
imul
sbb
inc
sbb
aaa
pmaddwd
cltd
cmp
lods
cld
int3
push
add
outsl
sarl
xor
dec
mov
scas
mov
push
inc
pop
mov
lahf
cmc
push
xchg
adcb
insb
xor
cld
popa
xchg
out
or
jae
mov
cmp
sbb
dec
lahf
mov
cmp
jge
lods
das
aas
and
shr
roll
push
sbbb
dec
cmp
jae
cs
pop
dec
pop
mov
inc
shll
aad
pop
and
add
imul
int3
mov
popa
rcrb
in
cmpsl
int3
cltd
mov
das
jge
in
adc
mov
dec
stc
iret
push
movsb
stos
and
iret
or
add
add
cld
cmp
por
lods
xor
cli
xor
and
movsl
popf
and
lret
stos
lret
mov
movsb
push
data16
xchg
shrl
idivb
lea
fsubrl
lods
fildll
nop
fwait
pop
and
repnz
add
pop
out
stos
mov
mov
mov
jns
leave
aas
mov
cmpsl
dec
daa
inc
lahf
mov
sbb
repz
shlb
movsl
outsl
cmpsb
cmp
xlat
ret
and
jle
shl
in
movsl
mov
pop
mov
mov
cmp
sbbb
outsb
mov
shr
mov
mov
lret
test
mov
rcrb
sbb
mov
push
out
adc
mov
loop
jge
pop
lds
inc
bound
cmp
imul
pop
out
mov
xchg
jne
push
pop
cmc
adc
xchg
mov
adc
mov
dec
andb
call
add
mov
out
pop
jne
push
mov
into
push
test
cwtl
mov
mov
xchg
jmp
xor
add
add
xchg
xchg
jb
es
xorl
sub
lret
sub
pop
gs
aam
outsl
nop
stc
xor
mov
jmp
or
lods
out
push
jo
jno
sbb
pop
andl
ret
out
xchg
sbb
sbb
or
mov
push
mov
popf
fistl
mov
stc
xor
pop
mov
cltd
sbb
xor
jne
mov
inc
aad
in
jmp
daa
out
fstl
jnp
push
je
testl
nop
lret
xchg
jp
dec
test
push
inc
cmpsb
inc
aad
fisttpl
mov
lods
mov
inc
mov
mov
cmpsl
jg
imulb
sub
ds
divb
movsb
fistps
xchg
lds
rol
filds
cwtl
inc
fbld
push
push
mov
pushf
rcrb
movsl
popa
sub
fwait
stos
arpl
pushf
mov
jg
insb
add
cld
test
sbb
dec
mov
ss
mov
xor
jne
popf
jg
cld
subl
daa
pop
movsl
addr16
popf
ljmp
mov
push
out
sbb
outsl
sbbb
mov
les
sbb
push
jb
adc
fldcw
cmp
adc
dec
push
sbb
xchg
popa
in
xchg
inc
cs
dec
xlat
jo
loopne
cld
jg
fs
xchg
push
repz
push
addl
xchg
xchg
adc
data16
mov
in
xchg
jp
sbb
xor
add
push
cmp
mov
repz
xor
mov
adc
cs
add
shl
sbb
sub
rcrb
adc
int
adc
pushf
inc
scas
aad
lock
jno
call
sub
xor
jmp
repnz
cmpsb
jnp
jp
fwait
pop
mov
inc
push
pop
pop
lcall
aad
stos
and
pop
lret
or
cs
xchg
out
shll
in
and
ss
test
bound
dec
mov
movsb
shrl
jb
inc
jne
aaa
jmp
call
insl
outsb
das
jb
xlat
das
sbb
out
xchg
repz
in
pusha
mov
out
repnz
test
xor
pop
push
add
lods
sub
add
inc
cmp
lock
lret
mov
add
scas
adc
imul
adc
add
pop
leave
pop
movsl
and
add
sub
mov
out
dec
mov
mov
cmp
cmp
rcll
dec
cs
dec
ds
insl
fpatan
nop
stc
in
dec
sahf
mov
cmpsb
fsubl
les
arpl
mov
cmp
outsl
jg
inc
cli
cmp
int
xchg
repz
jne
sbb
push
lea
or
dec
and
pop
cmp
insb
cs
stc
jle
das
mov
mov
cwtl
std
fmul
dec
jl
fildl
mov
and
mov
addl
xorb
int3
or
inc
dec
movsb
hlt
mov
imul
test
arpl
cmp
int3
mov
sub
adc
or
mov
push
jbe
ror
and
lods
ljmp
stc
or
sbb
mov
sahf
adc
jecxz
sbb
in
insl
out
adc
movsb
xor
mov
subl
pop
mov
mov
insl
mov
mov
mov
or
arpl
sub
lea
push
test
mov
jmp
jp
xlat
or
xchg
lock
cmpsl
orl
add
cmpsb
fwait
and
add
cmc
jge
pop
and
ret
add
cmp
test
xlat
mov
push
push
mov
push
nop
sub
fmuls
test
and
jb
popa
fcoms
mov
or
push
addl
adc
mov
icebp
xor
add
or
aam
pop
jo
sbb
or
mov
lcall
sbb
cltd
into
mov
xorb
and
xor
jae
lret
lahf
loop
xor
cmp
pop
jns
ja
mov
fwait
in
adc
pop
cmp
jle
mov
outsl
enter
ljmp
gs
mov
pop
pop
xchg
mov
pop
inc
outsb
mov
or
sbb
sbb
hlt
fdivl
scas
lret
negl
js
xor
and
pop
pop
loop
cmpsb
cmp
cld
orb
cmpsl
std
push
in
insl
push
mov
stos
lods
jb
sbb
xchg
test
mov
jo
xchg
jo
mov
call
mov
adc
push
arpl
sbb
inc
lock
notl
lock
mov
pop
inc
sub
adc
adc
int3
out
jp
movl
divl
or
adc
push
lds
rclb
push
or
lds
fmulp
in
nop
in
icebp
jg
fisttpl
aaa
mov
push
jae
push
bound
and
push
aas
sbb
cmp
repnz
sbb
mov
xchg
lcall
mov
add
icebp
lods
iret
cmpsl
fs
stos
push
xor
inc
loop
mov
jge
fbstp
mov
mov
inc
out
sub
aaa
xchg
scas
ds
cmp
jecxz
stos
fisttps
fsubs
xor
sbb
imulb
sbbb
pand
or
mov
movsl
push
ja
ret
sbb
xchg
fs
fisttps
in
out
inc
repnz
mov
pop
jno
loop
movb
push
push
add
les
dec
dec
sbb
dec
add
xchg
je
fiadds
test
mov
negb
adc
pop
pop
mov
notl
cmc
aas
jo
add
ret
jp
xchg
push
add
addr16
cld
inc
pushf
pop
and
out
push
stos
int3
sub
xor
inc
fstp
push
mov
cmp
out
push
cmp
jp
sub
adc
xorb
repz
incl
aam
aam
lret
pop
mov
dec
enter
adc
xlat
iret
mov
jl
jle
pushf
aas
mov
sub
dec
jbe
adc
push
js
aam
js
inc
cld
mov
adc
addr16
imul
jle
int3
mov
lock
add
call
mov
or
pusha
in
and
xor
jg
xchg
pop
pop
pop
les
dec
push
lods
mov
insl
data16
push
jmp
pop
jnp
lds
dec
lahf
dec
pop
sub
loop
push
adc
std
repz
cld
jae
jo
repnz
push
xchg
aad
cltd
inc
xchg
ret
loope
test
cmp
inc
xchg
cmp
cmp
mov
sbb
inc
fists
or
test
popf
das
cmp
inc
pop
hlt
jne
jecxz
add
mov
stc
outsb
popf
cmp
iret
mov
inc
stos
mov
testb
xor
mov
leave
fsub
lods
or
jne
push
push
popa
cmp
in
leave
mov
or
mov
sti
test
lds
push
lock
cmp
pop
out
fucomi
icebp
jns
lea
or
sbb
mov
stos
aam
pop
pusha
outsb
repnz
adc
insb
push
int3
pop
aas
rolb
out
int
and
add
cmc
xchg
mov
jl
imul
cli
xchg
xchg
rcll
popa
out
xor
fsubl
adc
stos
clc
cli
add
std
lcall
ss
js
jg
mov
lds
jg
cmp
mov
sbb
mov
je
cmpsb
stc
fsubs
fdivl
push
inc
mov
cmp
and
std
jo
adc
sahf
fwait
sbb
popf
test
test
sahf
insl
mov
nop
adc
leave
mov
cltd
ds
mov
and
fcmovbe
mov
xchg
push
enter
add
ja
add
and
cmp
jne
mov
or
movq
stos
jl
xchg
inc
sarb
ret
clc
pop
imul
adc
sysret
add
lods
shrl
mov
push
push
push
or
cs
cmp
inc
data16
icebp
mov
les
out
mov
mov
mov
mov
int
adcb
fstps
mov
popl
pop
jmp
pavgw
popa
add
paddw
out
test
push
aad
mov
xor
lods
push
sub
mull
mov
adc
push
ret
in
jle
enter
jo
jbe
mov
xchg
daa
jno
lea
dec
mov
pop
lds
dec
dec
adc
insb
repz
fldl
sub
aad
ljmp
stc
xchg
mov
dec
inc
cmp
mov
inc
cmp
and
std
cmp
int3
sub
aad
aaa
push
mov
cmpsb
or
adc
das
movsb
pop
movsl
loope
pop
inc
xor
incl
adc
jmp
ret
into
pop
or
push
inc
into
adc
xlat
jmp
adc
scas
cmp
fcomi
or
ret
mov
sub
add
kmovw
lock
in
mov
fadds
in
dec
scas
sub
and
in
inc
push
and
fidivrl
mov
inc
mov
adcl
adc
mov
add
and
inc
inc
xchg
pop
dec
sbb
mov
sbb
mov
fs
jecxz
stos
and
xor
pusha
mov
testl
mov
sti
in
push
and
sahf
dec
inc
adc
mov
push
push
mov
fists
out
sbb
stc
cs
mov
xchg
cs
or
test
pop
int
test
rorl
test
cmpsb
lahf
and
in
mov
aad
insb
mov
mov
mov
cmpsl
inc
insb
outsl
or
xor
sub
add
pop
loop
mov
pushf
or
cwtd
jmp
je
cmp
dec
loop
mov
jo
or
into
jns
add
stos
mov
cmpsl
pop
or
adc
cmpsb
cmc
adc
loope
cltd
out
stos
iret
xchg
adc
filds
sub
cmp
inc
push
xor
movsb
adc
insl
mov
repnz
pop
mov
scas
xchg
or
mov
mov
loop
jno
mov
inc
loop
mov
ja
iret
jmp
jno
mov
adc
adc
gs
pushf
mov
cmc
outsb
dec
push
mov
iret
sub
sub
push
insb
leave
push
into
inc
push
pusha
loope
les
scas
inc
aad
fsubr
add
cld
pop
icebp
push
ret
push
mov
mov
loope
aam
stc
xor
jl
pushf
sahf
mov
test
mov
bound
cmp
lock
add
les
push
xchg
out
pop
dec
pop
pop
cmc
sub
cmpsl
push
and
lds
fwait
dec
aad
aas
sahf
clc
sub
pop
daa
push
scas
pop
jbe
stos
roll
xor
icebp
repz
aas
or
cmp
cmpsb
add
cmp
mov
push
mov
sub
sarb
inc
push
loopne
inc
xlat
aam
dec
arpl
out
xor
inc
lcall
pop
pop
sub
inc
cmp
mov
xchg
or
stc
dec
or
aaa
mov
aaa
in
sbb
popf
ret
lea
and
outsl
push
sbb
cmp
rcrb
push
adc
dec
adc
aas
sti
and
sti
mov
or
jp
dec
scas
scas
mov
in
push
in
jae
icebp
adc
push
fidivrs
dec
ss
jno
stos
adc
jecxz
xchg
repnz
jmp
xchg
mov
push
pop
sahf
cld
imul
test
xor
popa
and
icebp
jns
fwait
je
insl
push
jne
or
and
fists
negb
push
in
and
popf
cli
mov
pop
and
int3
data16
insl
inc
adc
lea
mov
iret
in
sub
jns
jno
shll
ljmp
js
xchg
cld
or
aas
sti
jae
dec
addb
arpl
cli
jb
int
lods
test
mov
mov
subl
repz
loope
call
lock
push
sub
loope
movsl
outsb
sub
xchg
dec
fstl
inc
push
ja
pop
cmpsl
and
push
lock
in
icebp
aam
test
xchg
inc
inc
xor
sahf
dec
and
or
into
adc
aaa
movsb
or
cmpsl
jge
into
jmp
sub
xor
mov
loopne
ja
stos
jmp
and
movsb
ss
nop
push
loopne
cltd
sub
or
lret
lret
jo
scas
icebp
shrl
sbb
or
pop
cs
test
es
dec
jecxz
mov
xor
or
test
mov
inc
add
int
fcompl
in
shrl
ljmp
lret
ss
lds
cs
aam
lret
test
pusha
inc
mov
rorb
fldl2t
or
cmpsl
pop
stos
xchg
xor
pop
dec
enter
inc
add
inc
mov
xchg
rol
out
or
pop
add
dec
aam
in
pushf
addr16
push
sub
cmp
sbbb
je
js
push
sbb
pop
dec
rcrb
mov
or
bound
ret
stos
pusha
cmpsb
sbb
jno
hlt
sub
in
or
push
lret
cmpsl
add
mov
mov
push
xchg
outsl
pop
stc
outsb
xchg
cmpsl
mov
jbe
pushf
cmpsb
je
call
cmp
dec
ficoms
mov
xchg
mov
push
or
sarb
sbb
testb
dec
icebp
sti
push
jecxz
cmc
mov
xor
nopl
dec
push
icebp
push
ret
xchg
lock
push
repz
repz
xchg
aaa
loopne
pop
push
out
xor
dec
mov
cld
inc
push
repnz
xchg
mov
mov
frstor
cmp
out
xor
fst
lods
ljmp
sbb
jge
mov
cmp
out
mov
mov
adc
mov
sub
mov
mov
push
xor
mov
jp
xor
add
jl
mov
lods
push
les
loop
push
sub
dec
xchg
fildll
mov
into
call
xchg
mov
add
popa
sbb
sbb
mov
xor
sarb
int
adc
or
mov
mov
xlat
xorl
incb
xchg
cltd
xchg
mov
stos
cmp
into
sbb
add
loope
sahf
jle
jbe
insb
test
sti
mov
mov
and
fst
jg
sub
mov
mov
lock
addr16
shrb
scas
jp
arpl
hlt
push
cmpsb
out
sub
pop
jg
addr16
cli
pop
call
push
jge
mov
in
or
mov
push
adc
cwtl
es
mov
or
jmp
test
es
adcb
aas
inc
popl
fcmovb
adc
js
and
pop
sbb
cwtl
mov
mov
xchg
lods
pop
xor
push
mov
add
inc
aaa
adc
andb
clc
rcll
dec
sahf
pop
jnp
mov
das
pop
xchg
mov
mov
add
movsl
pop
iret
loope
xchg
mov
push
add
mov
xchg
cmp
or
or
mov
dec
jmp
call
rcrb
gs
fildl
dec
adc
popf
sar
push
pop
jl
ds
repz
out
xchg
test
push
mov
into
cmp
sbb
dec
loop
fisubrs
ret
mov
fldl
pop
scas
cmp
jno
lcall
cmp
aad
dec
jo
sti
sub
sbb
push
jo
xor
ja
add
sbbl
mov
repz
hlt
loopne
xor
lods
pushf
cmp
dec
clc
leave
sarl
fsubrl
into
out
testb
xor
cmp
or
sarb
pop
addr16
dec
push
pop
push
inc
adc
inc
movsb
loop
push
push
fwait
inc
jmp
pop
push
js
push
add
andl
mov
xlat
adc
aad
xor
scas
and
xchg
loopne
jp
jno
or
scas
xchg
pop
lock
cmp
outsl
nop
int
js
sub
add
arpl
or
sub
push
and
mov
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
jmp
or
mov
hlt
jne
loope
bnd
adc
addl
mov
and
sbb
jnp
ss
dec
mov
nop
adc
adc
int3
dec
mov
cmpsb
add
mov
lret
shrl
rorl
adc
and
lcall
mov
push
mov
fstpl
inc
sub
popa
push
scas
sbb
testl
or
push
je
xor
cli
jnp
mov
pop
rcrb
aaa
jg
inc
out
jo
sub
idiv
ds
cmp
add
rclb
ficoms
mov
stc
rcrb
mov
sub
xchg
jo
dec
push
mov
addr16
mov
xorl
sbb
call
pop
jo
cli
lock
inc
xchg
fldcw
in
mov
loope
push
sarb
lds
subl
addb
out
xchg
outsl
jmp
sub
mov
push
andl
add
dec
adc
pop
fiaddl
lcall
movsl
push
inc
push
jge
mov
push
dec
adc
xchg
and
push
and
popf
cmpb
add
roll
imul
les
test
and
bound
mov
jbe
sub
in
jne
dec
mov
inc
movsb
aaa
repz
sti
push
jecxz
cmp
in
leave
data16
aas
lea
pushf
and
cmp
shlb
sub
rcrl
fisubrs
mov
roll
sub
lods
cmp
ss
cmp
xor
movsb
pusha
sub
testl
mov
outsl
inc
mov
insb
insb
pop
mov
ds
out
xor
dec
lahf
sti
xor
repz
xchg
push
hlt
stos
test
subb
mov
ret
out
push
lcall
xor
sbb
push
fsubrs
adc
ret
leave
repnz
leave
dec
adc
sbb
rcl
sahf
xor
outsb
cmp
aad
and
push
push
inc
mov
inc
xor
or
std
enter
cmpsl
jmp
mov
sub
sarb
sub
dec
fs
pop
and
push
cmp
jnp
and
and
mov
notb
test
ds
imul
mov
or
adc
dec
add
xor
lcall
cmp
loopne
iret
shl
push
pop
cmp
ja
inc
jmp
arpl
stos
in
sbb
rcll
dec
or
add
sub
cmpsb
jecxz
xchg
scas
rcr
pop
push
scas
xor
cmp
inc
mov
stos
cwtl
and
mov
ret
xor
mov
and
xor
inc
inc
add
add
cmc
inc
arpl
in
sub
ljmp
or
pop
dec
add
or
pop
xchg
ror
xchg
add
loope
js
adcb
mov
cs
dec
test
xor
mov
mov
test
push
inc
mov
rol
pop
mov
pusha
bts
pop
add
mov
and
nop
sub
out
cmp
jg
sbb
pop
xor
in
addb
rcll
sub
movb
rolb
insl
out
dec
adc
lea
lods
jmp
stos
mov
xchg
push
movsl
je
imull
push
cmpsl
mov
out
outsl
inc
inc
sub
fsubs
test
mov
test
sub
loop
out
in
lods
mov
jmp
dec
iret
jnp
iret
jecxz
inc
mov
movsb
mov
or
and
push
inc
inc
ret
repz
mov
cmp
cld
ficomps
sub
lret
je
out
mov
sbb
cmp
ljmp
loopne
scas
test
cmpsl
lock
aas
mov
movsb
adc
popf
out
mov
fs
xchg
dec
inc
cmp
lret
into
std
and
mov
cwtl
sub
mov
popf
jno
and
ret
add
dec
mov
jmp
push
dec
cwtl
cmp
sub
hlt
pop
adc
fsubs
mov
cwtl
or
rolb
and
addr16
cmp
mov
xchg
adc
rorb
rolb
cli
adc
pop
inc
adc
addr16
cmpl
movsl
sti
lcall
js
push
mov
sbb
mov
loop
sbb
loop
push
imul
js
push
aam
xchg
roll
lock
cmp
int
push
push
dec
xor
shl
xchg
pop
inc
arpl
dec
sub
adc
fs
mov
lds
or
sbb
nop
and
pop
mov
jno
sbb
jne
dec
les
fs
mov
imulb
pop
loop
call
mov
cld
adc
xor
popf
popa
xchg
stos
mov
into
in
in
insl
xor
cltd
pop
pop
sub
test
xchg
shrb
nop
imul
or
lahf
pop
sub
xor
je
gs
call
ret
popf
adc
lret
ret
fiaddl
xchg
jmp
repnz
cmp
mov
popf
pop
in
je
cmp
stos
lods
adcb
dec
lret
or
aam
push
and
repnz
pop
movsl
cmp
decl
jns
xchg
pop
in
inc
les
jae
mov
les
es
popf
ret
mov
lcall
mov
test
out
pop
das
ret
jnp
sarb
pop
imul
fdivs
sti
sti
loopne
lret
xchg
aam
sti
je
je
insb
inc
cs
das
pushl
jo
sbb
jge
xchg
das
add
mov
fnstenv
and
and
rolb
dec
fisubl
or
popf
push
in
out
sti
push
mull
lahf
xor
aad
push
push
lahf
pop
sub
mov
lods
sub
es
out
mov
pop
shlb
testl
aad
mov
xchg
xchg
inc
inc
inc
xlat
sub
stos
pop
lret
sbb
scas
and
scas
push
adc
movsl
pop
adc
mov
js
std
es
push
fimull
xchg
jg
stos
adc
mov
insl
xor
movsb
scas
dec
leave
inc
out
sub
jbe
dec
cmp
cwtl
or
push
pop
pop
or
repz
push
inc
aas
push
iret
addb
jae
sub
je
int
cmp
out
dec
pop
jb
cmp
jo
push
and
lds
push
sahf
daa
jns
mov
movb
or
les
js
nop
dec
dec
pop
cmpsl
sbb
loopne
mov
adc
in
mov
add
pop
cmpsl
inc
sub
sbb
xchg
mov
or
shlb
es
lods
mov
mov
mov
leave
push
fstps
mov
mov
ljmp
in
loopne
dec
pusha
xchg
hlt
jg
test
dec
cmp
adc
decb
mov
xor
iret
movsl
xlat
push
and
sub
in
pop
sahf
mov
add
cmp
lahf
imul
mov
push
pop
jp
test
xchg
jecxz
std
jb
mov
mov
lds
push
subl
std
sub
adc
je
xchg
mov
insl
mull
mov
adc
fisubl
cltd
push
std
push
rol
cmp
jae
aas
add
push
test
ljmp
sbb
cs
add
sbb
aas
jo
dec
sbb
test
xchg
cmp
mov
xor
popf
inc
insb
jp
rcr
mov
cmp
sub
lods
ret
mov
pop
pop
mov
test
pop
movsb
or
push
xor
dec
repz
scas
push
cli
add
mov
jmp
outsl
mov
add
or
leave
nop
movsl
jge
jle
xchg
xchg
xor
shll
mov
dec
jecxz
sbb
imul
cmp
mov
fildl
dec
in
push
jae
xchg
pop
sub
pop
jp
jle
inc
adc
xor
mov
lea
push
scas
xor
stc
push
or
paddsb
pop
xchg
sbbb
dec
int3
in
inc
adc
in
pusha
sbb
inc
iret
sbb
out
test
test
jne
into
lods
jae
pop
sbb
test
fnstenv
lahf
jecxz
add
add
xor
or
sbb
or
popa
pop
sub
loopne
add
dec
xchg
test
inc
lock
in
and
xor
js
aaa
jge
test
test
inc
pop
adc
es
push
shlb
sub
xor
shlb
pop
fwait
push
sbb
xchg
fmull
xor
stos
and
sub
movsb
or
addr16
test
push
movsl
int3
push
aas
inc
jp
push
stos
inc
mov
shl
push
push
repz
inc
clc
leave
pop
jb
cmc
mov
add
and
sub
scas
pop
cmp
bound
mov
adc
gs
push
cmpsb
das
mov
mov
loop
mov
ss
push
sbb
add
jmp
xchg
idivl
fadd
inc
xor
clc
js,pn
mov
addr16
aam
push
mov
iret
std
or
loop
mov
inc
mov
bswap
mov
sub
mov
lds
test
push
test
cwtl
test
jb
daa
outsb
mov
cmp
aad
add
mov
aam
dec
rcrl
into
gs
and
adc
or
fstpt
lea
pop
fisttpll
mov
inc
insb
out
mov
cmp
mov
pushf
sbb
aad
mov
mov
out
lods
ja
rorl
sbb
xor
xlat
xchg
push
jns
pop
xchg
jns
xchg
scas
pusha
mov
push
pminsw
push
push
ja
push
mov
loope
ret
or
cmp
pop
fsubs
pop
add
adc
cli
aas
popf
xor
loopne
jbe
fndisi(8087
dec
jno
jmp
pop
cmp
sub
arpl
push
adc
sbbb
pusha
cmp
stc
mov
mov
inc
mov
push
push
and
mov
shl
sub
xchg
push
push
fwait
pop
fstl
dec
out
mov
push
and
xchg
jle
add
jae
scas
mov
sub
pop
and
cmpsl
call
mov
mov
add
dec
aam
out
cmp
dec
xchg
dec
rclb
stos
dec
pop
and
int3
inc
xchg
cwtl
out
ret
fimuls
xor
and
enter
ret
mov
and
pop
jo
adc
test
mov
shl
xor
adc
push
mov
mov
sbb
and
xchg
pop
mov
dec
jp
add
inc
adc
dec
scas
push
and
xchg
mov
push
or
and
in
out
cwtl
sub
mov
stos
call
ret
xor
sub
divl
loopne
jecxz
inc
fnstsw
loopne
call
inc
pop
or
push
jns
and
sbbb
lcall
and
xchg
sub
bound
xor
dec
test
lcall
sbb
cmpsb
pop
or
xchg
sub
outsl
inc
push
imul
mov
lret
adc
arpl
cltd
dec
aaa
subb
adc
push
ret
cltd
xchg
sarb
lds
lcall
mov
loop
adc
inc
inc
sarl
cli
and
sub
inc
sbb
push
pop
mov
xlat
jns,pt
fildl
inc
dec
mov
aad
fbld
iret
sub
gs
and
mov
hlt
jge
pop
xchg
mov
push
ja
pop
xchg
dec
cmp
cmpsl
push
inc
dec
pop
xchg
push
popf
cmp
fadds
sarl
cwtl
fisttpll
jecxz
inc
xor
popf
mov
and
enter
push
daa
mov
mov
pusha
ret
xor
pop
sbb
push
sti
aam
sahf
adc
dec
sub
pop
sti
mov
mov
lock
ret
rcrl
stos
call
lahf
mov
mov
nop
icebp
push
cmp
imul
or
mov
add
push
sub
mov
enter
push
pop
gs
aaa
jmp
add
push
push
push
xchg
dec
lods
push
mov
inc
shrl
jne
lcall
and
nop
setle
in
dec
es
int
cld
and
outsl
ja
jne
push
add
rorl
mov
test
inc
mov
cmc
mov
fwait
sub
mov
test
fcmovnu
icebp
in
mov
clc
stos
sub
xor
in
and
mov
mov
sub
fisubl
fisubl
rcll
mov
ret
mov
in
adc
mov
daa
push
add
out
mov
adcb
cmp
stos
pop
rcll
fwait
and
nop
pop
icebp
jns
or
aam
icebp
adc
in
sbb
jl
cltd
inc
inc
cltd
lea
xchg
pop
mov
xchg
lahf
adc
sbb
mov
lock
out
pop
lea
test
movsb
out
dec
fwait
nop
loope
or
dec
ljmp
xor
iret
or
test
sbb
xchg
inc
inc
clc
mov
cmpsl
mov
and
sub
adc
lock
or
sbb
dec
jmp
leave
dec
cld
int3
pop
sahf
stc
mov
mov
sub
mov
fwait
inc
or
adc
cwtl
les
cmovns
jl
out
gs
iret
cld
sbb
pop
out
ds
push
test
pop
add
sbb
test
sub
cli
mov
xrelease
mov
cmp
cmp
leave
stos
into
adc
and
addr16
jno
xchg
mov
jo
aas
add
xchg
add
or
cmpb
ljmp
scas
inc
mov
cmp
movsb
sub
sbb
xchg
xor
fidivs
and
in
adc
cmp
sub
pop
mov
pop
jne
lcall
xchg
movsb
xchg
mov
shlb
stos
rorl
mov
hlt
inc
mov
jns
outsl
jle
stos
push
fs
aas
or
or
or
cmc
mov
push
pop
ret
mov
add
mov
dec
mov
ljmp
jne
or
dec
sarb
dec
or
loope
lds
jecxz
ds
stc
dec
jo
jo
movsb
js
jp
pop
test
rolb
das
push
pop
cmc
sbb
shl
jno
lods
into
inc
inc
pop
cmp
imul
xlat
inc
gs
mov
xchg
in
out
sub
lret
dec
mov
adc
pusha
shl
imul
addr16
in
fisubrl
aam
sub
jbe
rcr
mov
xor
dec
add
adc
cmp
stc
orb
jno
or
sbb
cmc
ret
push
shr
push
pop
inc
shl
cmp
fsubrl
or
xchg
mov
into
push
test
jmp
pop
ret
arpl
dec
sbb
sti
sbb
push
ja
adc
pop
dec
inc
add
je
icebp
aam
fs
jecxz
xchg
popa
pop
jle
push
sahf
jnp
xchg
pop
roll
and
mov
lods
push
nop
stos
out
sbb
in
imul
pop
mov
jbe
or
push
shl
popf
mov
mov
add
pop
leave
push
and
hlt
movsb
mov
mov
mov
inc
push
call
dec
cli
into
out
lods
arpl
jo
sbb
movsl
into
xor
nop
repz
popa
sbb
or
mov
sub
out
mov
int3
xchg
popa
imul
push
sti
sub
or
jno
clc
mov
daa
push
jne
xchg
inc
cmpsl
in
scas
add
mov
popa
mov
movsl
je
pop
push
jmp
and
cmpsl
dec
xchg
and
mov
xor
lods
test
pop
push
or
mov
sbb
je
mov
mov
lds
pop
repnz
or
mov
and
mov
aam
movsl
aam
mov
shrb
lret
imul
mov
pop
mov
xor
std
cmp
arpl
aam
test
adc
mov
jne
in
es
sub
mov
inc
cs
fmuls
das
repz
leave
in
pop
loope
jne
clc
sbb
mov
dec
adc
pop
out
mov
ret
pop
clc
add
mov
insb
sub
out
fwait
dec
stos
pop
lds
subb
sub
ret
test
dec
leave
scas
dec
fimull
jge
popf
add
push
add
and
jno
leave
dec
cmp
pop
insl
jb
shl
loopne
inc
sbb
int3
cmp
sub
lods
xchg
sub
pop
adc
inc
test
push
mov
inc
mov
int3
dec
stos
push
into
insb
adcl
pop
inc
xor
lods
out
pop
fldl
mov
or
jne
fdivrl
and
pop
push
cli
add
adc
push
mov
fdivrl
leave
sbb
sti
mov
popf
inc
adc
jns
hlt
out
pusha
and
fsubl
scas
shlb
shrl
fimull
adc
add
cmpsb
loopne
jno
jo
cmpsl
push
push
mov
mov
in
gs
mov
outsb
movsb
pop
add
aad
dec
sub
mov
pop
es
pop
prefetcht1
es
sti
push
mov
int3
mov
outsl
iret
jnp
xor
inc
jno
aam
jnp
xchg
pop
dec
popf
and
mov
iret
or
inc
pop
dec
xlat
push
pop
test
inc
mov
sbb
and
cmp
in
fisttpl
jmp
ljmp
push
idivb
pop
in
sub
sub
inc
or
and
lret
pop
das
mov
xchg
xchg
out
js
push
adc
bound
fidivs
push
adc
cs
xor
push
cmp
mov
xchg
dec
cmp
jne
arpl
das
xchg
lret
fildll
ds
decl
hlt
lock
repnz
test
sbb
inc
push
or
dec
pushf
sub
xor
sub
pop
lcall
test
loopne
mov
cmpsl
adc
fbstp
mov
data16
jg,pn
cmp
xor
cmovl
or
imul
into
dec
aaa
adc
dec
adc
insb
push
pop
fildl
mov
cld
das
loopne
aas
sbb
mov
adc
mov
test
data16
sbbb
xchg
xchg
or
lret
imulb
push
imulb
xor
mov
andl
pop
xchg
mov
mov
mov
mov
nop
push
out
lret
mov
add
mov
push
lret
mov
jg
dec
inc
sbb
adc
adc
inc
xchg
cwtl
shll
add
ret
adc
negb
fisubrs
inc
out
jmp
mov
stos
in
jo
lret
movsl
clc
dec
cmp
mov
out
cmp
imul
in
out
jno
cltd
mov
je
or
push
pusha
mov
fldenv
sub
pop
mov
mov
adcl
mov
add
cmp
sub
sbb
push
xchg
xor
or
inc
or
adcl
dec
int3
mov
push
ja
and
push
xor
insl
mov
scas
mov
lret
jb
int3
sub
fwait
daa
mov
push
test
or
jecxz
inc
lret
inc
fidivrs
push
scas
stos
lds
imul
out
mov
push
orb
inc
add
enter
xor
push
xchg
xchg
or
not
cmpsb
ficomps
rorb
dec
jo
adc
cwtl
ss
repnz
scas
adc
adc
dec
xlat
mov
sbb
shlb
dec
jecxz
fcmove
xchg
jnp
fistpl
cmp
mov
add
xchg
jecxz
sub
imul
loope
loop
es
orb
adc
xor
dec
inc
xchg
in
iret
pop
cmp
xchg
fmuls
mov
adc
push
lods
jae
clc
add
loop
pusha
and
xlat
rcll
das
adc
nop
jne
inc
add
jecxz
lcall
xchg
arpl
nop
xchg
inc
xor
jne
dec
or
mov
inc
rorl
pusha
shll
ret
leave
je
sub
xchg
stc
inc
enter
sbb
js
insl
in
or
dec
insb
inc
jmp
sbbl
sub
aad
aas
jne
scas
jno
mov
mov
or
inc
mov
or
in
sbb
popa
xor
lret
jbe
scas
mov
xchg
mov
pop
sub
cmp
lock
ret
hlt
scas
daa
sarl
mov
jb
push
mov
out
sarl
pop
inc
mov
push
mov
lock
adc
out
mov
cwtl
je
inc
add
xchg
loop
aas
jo
aam
or
daa
sahf
cmp
mov
ljmp
jnp
cmp
cmpsl
cltd
xor
mov
mov
mov
cli
adc
push
xchg
xor
insl
cltd
pop
push
add
xchg
aas
pop
or
psrlq
lea
decb
je
ja
xor
xchg
jge
nop
adc
lahf
stc
insb
jnp
mov
xor
loope
outsb
push
mov
ret
loop
loop
cmp
sti
dec
test
xor
loope
xchg
fcmovne
sub
push
pop
xor
stos
xchg
mov
fnstsw
scas
add
jae
adc
mov
add
mov
cmc
xchg
add
jg
repnz
mov
cmp
sub
aad
dec
inc
scas
pop
cmp
int
push
ja
xor
xchg
mov
outsl
in
xor
into
cmp
xchg
mov
xor
roll
les
or
fdivrl
stc
mov
movsl
adc
jge
ljmp
lods
pushf
in
rcrl
push
pusha
xchg
shll
mov
stc
mov
aas
mov
hlt
stos
pop
movsl
loope
int
push
bound
fwait
and
and
sub
pop
aam
popf
jnp
movb
cmp
fs
inc
sbb
pop
inc
sbb
or
adc
and
ret
push
sbb
push
shll
mov
add
and
hlt
call
ljmp
ret
pop
mov
mov
jle
jb
sbb
jl
bound
dec
mov
cmp
xchg
sub
clc
dec
jp
cmpsl
cli
sahf
notb
pop
jne
imul
mov
pop
or
jae
sarl
fsubrp
mov
rcrl
insl
and
aam
in
stos
nop
out
cld
out
aas
push
jo
mov
adc
aaa
lock
rclb
pop
xchg
add
jle
xchg
jne
subb
mov
jne
pop
jno
mov
test
adc
push
out
mov
sbb
adc
jb
or
cmp
push
fcmovu
xchg
sub
or
lods
shl
dec
add
andl
adc
and
push
cmp
push
inc
cmp
lahf
lods
inc
aaa
jne
out
adc
fs
mov
dec
daa
pop
jns
xor
inc
dec
test
fdivl
add
jno
lcall
add
out
outsb
inc
cmpsl
fcmovu
aam
inc
push
iret
andb
repnz
clc
mov
cmpsl
js
rcll
inc
pushf
addr16
inc
lds
in
xor
sub
nop
out
sub
adc
mov
mov
repz
mov
cs
fs
sbb
jb
inc
or
jo
jo
cs
fcomps
adc
mov
fs
lcall
stos
cmpsl
es
repz
xor
or
insb
mov
adc
xchg
aam
test
sbb
cs
lret
jecxz
shl
ret
mov
add
in
dec
inc
sbb
or
inc
adc
hlt
dec
bound
dec
or
addr16
pusha
lods
shl
xor
in
aad
lahf
inc
cmp
jne
out
sarl
ja
sti
mov
rcrl
loope
lahf
xchg
stos
aam
jnp
mov
inc
jnp
xor
xor
rcrb
ret
mov
addl
cli
pusha
sub
and
fsub
adc
and
mov
ljmp
rcrb
lea
dec
into
imul
jg
insb
ja
mov
hlt
pop
sbb
shrb
ja
pop
lcall
arpl
dec
ljmp
dec
in
cmpsb
lcall
or
jg
ds
sub
jnp
jg,pn
jb
inc
mov
push
shlb
cs
jle
jl
mov
ret
div
nop
pop
push
rclb
and
push
push
cli
xchg
popa
jae
mov
sub
mov
and
imul
push
pop
scas
push
dec
andb
ret
cmp
cmpsl
cmp
mov
imul
in
xor
cltd
push
push
xor
cltd
je
jno
cmp
and
scas
repz
leave
cwtl
popf
or
shrl
push
adc
flds
mov
jno
jno
push
outsl
popa
int3
xor
cld
dec
add
mov
mov
mov
jae
das
ret
sbb
js
jle
cwtl
inc
jne
xor
fadds
lds
leave
jb
xchg
out
popf
std
leave
and
movb
enter
jb
mov
mov
nop
cmpsl
incl
cld
repnz
mov
sarl
int3
push
push
lods
imul
push
mov
out
mov
mov
or
enter
mov
pop
jl
xchg
test
mov
pop
mov
dec
inc
xchg
outsb
push
in
imul
inc
or
faddl
add
and
xor
xchg
movsl
je
jge
jo
lock
jmp
sbb
add
push
sub
in
rcrb
arpl
jle
mov
stos
dec
cmp
inc
in
cmp
mulb
mov
imul
lds
aaa
or
mov
or
jg
dec
mov
pop
es
sub
cmp
mov
fs
int
cmp
xchg
cmc
mov
in
pop
sub
out
stos
push
jp
rcl
and
imulb
test
adc
arpl
sarl
sbb
push
xchg
es
jb
mov
scas
push
cmp
sub
xchg
stos
icebp
jge
cmpsl
adc
leave
orb
enter
cmp
adc
sub
outsb
fstps
add
sbb
scas
mov
jl
push
out
or
sub
xchg
sti
test
outsb
sbb
ljmp
ret
pop
loop
inc
jp
cmp
adc
enter
cmpsl
imul
fwait
sbb
fcom
iret
xor
movsl
test
add
add
fisubs
mov
xor
mov
int
pusha
sahf
pop
pop
or
cmp
cmp
mov
cmpsl
dec
std
stc
push
sub
push
xor
hlt
lods
stos
ljmp
mov
sbb
outsb
in
push
jge
push
sarb
adc
aaa
out
pop
dec
stos
mov
sub
mulb
icebp
push
loope,pt
into
imul
xchg
repz
roll
or
ret
cmp
fisubrl
inc
adc
je
or
sub
lcall
push
fs
fistps
mov
insb
xlat
push
inc
xor
mov
add
fstl
cmc
and
repz
out
jnp
out
dec
or
mov
or
fldt
call
mov
inc
lock
adc
or
jbe
insl
cmp
xchg
xchg
mov
pop
data16
loope
dec
clc
bound
xor
xlat
or
fwait
sub
cs
or
sarl
jbe
dec
je
push
jge
add
aaa
pop
lock
and
or
cmpsl
jae
ds
loope
inc
cmc
out
inc
out
mov
mov
xlat
and
mov
rcrl
ja
das
aam
pop
push
or
je
mov
daa
push
pop
std
lods
push
mov
nop
shll
lcall
push
fisttpl
dec
in
or
and
pop
mov
insb
sbb
mov
pop
xor
mov
data16
pop
nop
ret
inc
sub
adc
push
aas
inc
subl
cli
or
cld
push
andl
in
pop
int
imul
cmc
ja
adc
insb
mov
gs
dec
mov
enter
jle
or
sub
or
fldenv
je
xchg
movsl
les
cmc
cmp
shr
sub
inc
bound
lret
adc
cwtl
mov
in
and
out
lock
aad
loopne
rcrb
outsl
leave
adc
repz
mov
inc
imull
xor
popa
enter
xorl
scas
rorb
mov
pop
pop
lret
leave
inc
adc
fcomps
mov
jb
call
in
jae
push
inc
int
mov
ss
stos
nop
xor
repz
sbb
mov
and
xor
out
out
data16
jno
xor
ds
or
out
cmc
arpl
adc
enter
cmc
sub
and
cs
mov
xor
sbb
sub
bound
push
repnz
mov
mov
xchg
test
push
jg
loopne
out
or
dec
daa
xor
jecxz
xor
sahf
in
add
and
mull
aaa
fistpl
addb
out
movsl
mov
hlt
inc
dec
shlb
or
jge
cmp
sbb
shll
mov
xchg
or
fsubrp
adc
push
dec
bound
rcl
xor
adc
push
data16
and
adc
mov
aam
stc
xor
push
ja
jae
pusha
or
mov
insl
sub
jecxz
pop
imul
dec
sbb
sahf
hlt
xchg
outsl
xchg
lods
subps
sub
mov
mov
xor
popf
xor
int
ret
es
adc
lcall
inc
test
sbb
add
icebp
or
xor
jne
repz
push
sbb
push
popf
push
test
lahf
xchg
sub
mov
and
rcll
mov
outsb
jg
xor
xchg
mov
xchg
jae
popf
enter
icebp
out
cld
push
sbb
pop
call
lret
ret
idiv
fidivrl
cmpsl
push
testb
bound
insl
shlb
test
lea
cmp
adc
aas
les
fs
idivl
fisubrs
out
push
js
cmc
insl
add
sub
hlt
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
andl
xor
sbbl
inc
ret
push
mov
sub
movzwl
sbb
movl
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
jmp
mov
orl
push
xor
xor
or
mov
mov
xor
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
pushl
call
jmp
mov
subl
test
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
subl
mov
adcl
xor
add
mov
mov
and
mov
adcl
mov
xorl
xor
add
decl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
movzwl
or
add
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
add
mov
sbbl
sub
adcl
lea
incl
xor
xor
cmp
movl
je
mov
xor
add
movl
cmp
jne
xorl
pushl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
jmp
sub
mov
pop
add
dec
scas
xor
addl
and
pop
mov
leave
fimull
push
mov
div
aad
pushf
pop
dec
and
xchg
push
mov
imul
mov
xchg
call
imul
jl
movsb
idiv
cmpsb
xor
out
mov
fdivs
jo
sarb
add
inc
cmpsb
shll
cmc
aas
in
mov
dec
into
pop
rorl
xor
int3
add
stc
pushf
daa
in
movsb
jmp
jge
mov
jbe
mov
fldl
xchg
adc
push
sbb
js
sub
loope
mov
sub
sbb
inc
js
mov
rcrl
ja
jo
test
sub
xchg
mov
mov
inc
sub
pop
cmp
mov
aam
jno
pusha
shl
add
in
mov
adc
xor
aas
mov
push
jae
lock
cs
insb
or
inc
jo
imul
in
addr16
arpl
push
mov
call
jle
jmp
inc
lahf
cwtl
std
xor
out
fcmovb
add
iret
fimuls
jge
xchg
fisttps
jno
xor
in
pushf
mov
outsb
xchg
lock
or
insl
arpl
or
test
fwait
mov
shl
mov
mov
js
dec
cmp
aas
xor
xor
xchg
sub
bound
jb
cltd
cwtl
jbe
in
cwtl
scas
mov
xchg
sbb
mov
jbe
shll
mov
dec
sub
les
addb
std
outsl
lock
xor
movsb
push
mov
sbb
xchg
push
jno
das
push
pop
xor
and
icebp
bts
jae
pop
iret
pop
adc
xor
imul
xchg
lods
lret
adc
fnstcw
dec
das
pushf
mov
iret
test
fcoms
cmp
mov
les
add
fsts
push
popf
sbb
call
and
rolb
arpl
mov
inc
out
in
fcoms
loopne
mov
sbb
dec
out
dec
xor
cld
xlat
std
fdivrs
jbe
sbb
or
mov
jmp
xor
rcl
lds
cld
sti
out
scas
aaa
push
popa
xor
pop
loope
mov
mov
push
adc
out
jecxz
xor
addl
les
inc
loopne
out
movsl
aaa
add
xchg
cs
inc
rcrl
mov
and
lcall
decb
jno
xchg
pop
add
mov
shl
in
in
aam
jge
dec
cli
cmp
jmp
lds
inc
into
dec
add
inc
and
dec
ja
flds
cmp
and
out
nop
sbb
and
into
shlb
mov
idiv
fsubrs
xor
adcl
jmp
inc
aaa
jmp
int
xchg
out
in
or
lea
inc
scas
xor
in
sbb
cmp
test
pop
leave
xchg
mov
test
jb
mov
sbb
sub
xchg
push
mov
lahf
fs
xlat
jae
mov
dec
repnz
pop
in
cwtl
lea
mov
adcb
sti
faddl
adc
das
in
insb
movsl
mov
scas
sub
xchg
xchg
xor
add
and
pop
xorb
sbb
dec
inc
stos
sti
xchg
inc
pop
pop
int
adcl
and
pop
pop
fwait
and
inc
mov
loopnew
push
inc
dec
arpl
fisubl
mov
adc
push
ret
mov
cmpsl
frstor
inc
push
sbbb
cmp
int
cmpsl
iret
or
mov
out
cld
outsb
jmp
repnz
stos
push
dec
in
lea
push
test
xor
cmp
and
movl
dec
fnstenv
cli
movaps
add
in
enter
test
je
or
sbb
mov
loop
ja
rcrb
mov
and
xchg
or
or
in
lock
inc
inc
mov
sbb
ljmp
sbb
aas
mov
imul
push
in
js
aaa
cmp
add
movsl
clc
ret
lds
insl
mov
pop
adc
dec
inc
scas
out
push
adc
adc
jl
and
pop
xchg
mov
fcomps
dec
in
outsl
inc
punpckldq
lahf
lret
jp
lds
or
dec
lock
cltd
cmp
xor
lock
mov
xor
adc
sub
adc
xchg
mov
push
dec
jle
in
inc
sbb
cli
int
lods
jns
adcl
mov
adc
cltd
push
xor
std
outsb
or
aaa
stos
fbstp
xor
ljmp
add
or
into
cs
lods
ffreep
inc
mov
incb
jae
inc
shl
mov
jecxz
add
cwtl
sub
int3
ficompl
inc
mov
test
sub
insl
mov
mov
sbbb
jle
lea
inc
aam
fistps
es
push
push
sub
ss
imul
call
or
js
inc
aam
loopne
iret
ja
inc
mov
divb
xor
imul
cmpsl
mov
or
lods
mov
mov
jecxz
cmp
dec
andb
add
xor
outsl
test
add
mov
push
lods
fs
int3
jg
icebp
into
mov
es
stos
xchg
out
mov
xchg
ja
or
mov
rcr
push
leave
std
pop
lods
rolb
loope
rcrb
rol
jo
inc
out
jle
into
inc
add
mov
mov
in
flds
cld
das
or
cmpsl
std
loop
int
mov
sahf
cmp
test
add
cmp
out
and
push
adc
jbe
inc
out
sub
shrl
scas
push
inc
push
js
cmc
or
aaa
out
clc
popf
mov
fnstenv
es
out
pop
sbb
mov
mov
outsb
add
js
idivl
outsl
mov
cmpl
push
pop
push
mov
mov
mov
pop
mov
push
cs
mov
notb
dec
loopne
nop
mov
ret
add
jle
mov
in
adc
das
lcall
ljmp
mov
sbb
es
dec
mov
push
jmp
jns
sbb
repz
mov
and
sbb
dec
leave
lds
movsb
ret
push
dec
dec
cmp
jmp
cmpsb
push
xchg
inc
sbb
sbb
popa
push
xor
popa
ret
ljmp
aas
push
fildll
sub
cmp
mov
adc
fstps
pop
xor
and
xlat
dec
jae
or
scas
iret
cmpsb
push
in
push
adc
sti
js
adc
pop
and
loopne
cwtl
jle
outsl
scas
movsb
int3
in
push
jnp
jg
std
fidivs
xlat
sbb
push
pop
cmpsl
test
xchg
push
push
xor
fmuls
in
jecxz
and
nop
lcall
or
sub
lret
scas
fdivl
dec
in
std
cmp
ss
mov
inc
jb
pop
cmovo
scas
scas
jb
stc
stc
mov
int
out
sbb
or
xor
mov
les
xlat
test
inc
insb
adcl
mov
mov
add
add
jmp
pushf
out
push
pop
outsl
insb
lea
ficoml
pop
dec
dec
loope
in
mov
mov
mov
mov
cmp
int
sub
or
adc
sbb
inc
pop
test
mov
ret
aaa
push
outsb
jp
pop
or
jg
inc
enter
lods
adc
loop
std
mov
cmp
adc
xor
and
dec
mov
test
sarb
or
sub
cmp
out
xor
cmpsb
jb
lods
xlat
xchg
movsl
bound
out
or
xchg
mov
inc
adc
ret
mov
out
xchg
icebp
push
lret
ja
sbb
add
and
test
push
push
imulb
mov
mov
jno
cld
ljmp
test
pop
push
test
add
and
xchg
out
addr16
ljmp
outsl
mov
cmp
and
add
stos
out
pop
push
testb
iret
icebp
mov
ds
pushf
orl
andl
pop
test
sahf
lret
cmpsl
sub
iret
ret
ja
or
push
cmp
mov
call
in
cwtl
push
lret
sbb
xor
iret
mov
cli
mov
dec
xchg
rolb
test
fldenv
inc
scas
stos
call
stos
jns
mov
pop
cmc
pop
push
mov
test
cmp
cmpl
pop
xchg
mov
flds
sbb
and
movsb
into
inc
inc
aaa
rorl
data16
in
mov
or
mov
or
push
sarb
aaa
mov
and
notb
rclb
add
aaa
shlb
pop
loop
push
mov
cs
dec
mov
aam
sahf
xchg
inc
jge
stc
sbb
enter
test
clc
lock
gs
mov
sub
test
test
std
loope
cltd
xorb
pop
push
inc
lcall
loop
lods
jb
push
add
shlb
mov
sbbl
shrb
int
test
and
leave
dec
aad
pushf
mov
insl
sbb
addb
mov
leave
push
xor
test
and
hlt
xor
cli
push
aad
push
sub
cmp
jo
dec
leave
scas
jbe
ss
outsl
out
mov
push
lret
inc
nop
adc
cmp
lcall
xor
test
jbe
mov
add
into
aad
dec
mov
push
xor
nop
repz
pop
das
push
in
add
fistps
out
add
ja
mov
xchg
popa
in
sub
and
insl
sarl
xor
sbb
call
mov
xchg
xchg
mov
mov
push
outsl
lock
xchg
dec
arpl
mov
fiadds
add
out
fnsave
sub
lea
and
inc
add
nop
cmpsb
fcompl
jmp
test
insl
clc
push
or
and
add
mov
fsubs
iret
mov
inc
jno
cwtl
mov
loope
pop
add
jmp
pop
outsb
loopne
xorb
lds
filds
add
cmp
movsl
jmp
inc
inc
dec
xor
movsl
or
test
sbb
in
dec
loopne
lods
sbb
sahf
add
out
roll
das
subl
push
cmpsb
loopne
jecxz
shll
pop
sub
in
loopne
call
adc
enter
xchg
data16
arpl
xorb
xchg
cmpsl
xchg
faddp
jg
cli
add
loope
fcmovnu
and
add
and
loopne
je
pop
repnz
jbe
ja
push
imul
xchg
mov
popl
stc
test
sbb
into
fwait
push
test
test
xlat
mul
cmpsl
sbb
lods
iret
movsl
cld
xlat
popa
cmpsl
xlat
jo
adc
pop
rcrl
dec
push
std
xchg
lret
cmp
fidivl
in
outsl
inc
lahf
mov
loopne
jbe
add
bswap
test
pushf
fs
push
add
cmp
hlt
lods
retw
jmp
mov
xor
loopne
cmpsl
cs
jp
into
lods
cmp
cli
pop
adcb
pop
dec
sarl
pop
loope
sbb
xorl
xchg
ret
aad
rcrb
jo
out
outsb
sub
sub
mov
push
cmpb
test
or
jb
rep
sbb
fwait
xchg
subl
testl
out
in
arpl
mov
shll
orl
add
ficomps
jnp
outsb
jmp
xor
sub
mov
icebp
aas
bound
and
jg
ss
xchg
stos
addr16
sbb
cmp
lods
pop
cmpsl
dec
ret
aas
inc
dec
aas
xor
inc
pop
jge,pn
sti
ss
cwtl
xchg
inc
pusha
adc
push
int
jge
inc
call
jbe
outsb
add
sbb
into
into
cmc
lcall
pushf
push
inc
mov
xchg
adc
mov
shll
pop
shl
cld
inc
imull
or
scas
lds
push
mov
sbb
loope
push
push
pop
pusha
xor
and
enter
cmc
repz
outsl
mov
aad
stos
xchg
push
hlt
ljmp
mov
or
xorl
jb
xor
nop
mov
sub
pop
iret
jmp
push
pop
jle
inc
repnz
imul
sarb
fs
test
add
idivb
sub
hlt
sbb
rorl
push
and
push
fmull
and
mov
mov
lcall
cmpsb
int
test
es
sbb
adc
ljmp
test
push
mov
aas
gs
pop
out
movsl
test
loopne
movsb
loop
bound
int
in
jge
daa
mov
js
leave
imul
lcall
stos
xor
push
xor
push
fwait
pop
xor
mov
ret
xchg
adc
adc
and
shr
es
push
out
pop
sub
push
and
mov
stos
test
cmp
dec
inc
stos
and
or
cmpsl
jb
xchg
push
or
jmp
mov
aad
fdivr
scas
push
cmp
std
and
mov
or
leave
testl
push
into
jl
ja
inc
add
shlb
repz
stos
daa
pop
aam
push
xchg
pop
or
cmc
das
fimuls
adcl
in
stos
and
xor
add
adc
pop
test
xchg
mov
inc
fimull
push
aaa
pop
adc
push
mov
repnz
push
inc
adc
dec
in
into
cmp
add
bsf
ds
icebp
push
cli
mov
aad
add
jecxz
adc
test
xchg
shll
lahf
add
pop
inc
adc
idivb
sar
pusha
jnp
out
push
imul
fildll
dec
adc
xchg
add
pop
enter
je
lcall
ret
xchg
xor
sbb
jb
adc
mov
mov
mov
jne
mov
sbb
sub
int
scas
mov
inc
outsl
push
les
pop
jns
popf
pop
mov
test
adc
rolb
adc
jo
aam
dec
es
xchg
repnz
jo
sti
push
jle
sub
cmp
xchg
mov
xchg
dec
popa
cmp
loope
pop
mov
into
dec
push
fiaddl
aam
lds
dec
mov
ss
xlat
sbb
or
mov
mov
shrb
sbbl
dec
jo
xor
in
mov
pop
mov
push
pop
scas
pop
dec
fisttpl
clc
popa
movsl
pop
imul
and
cmp
add
loope
pop
pushf
sbb
test
jmp
subl
adc
pop
lods
sub
xor
jmp
stos
pop
jg
incl
loopne
mov
cmp
ret
and
and
insl
inc
dec
stos
pop
or
lcall
jne
fisubrl
lea
pushf
or
gs
insl
xor
call
jge
pop
dec
or
sbb
mov
insl
pop
je
xor
pusha
cltd
icebp
sbb
jae
aas
imul
ret
iret
xlat
hlt
aad
fdivs
gs
xor
in
sbb
andl
lods
or
dec
fs
mov
pop
mov
lea
ds
mov
and
daa
pop
or
push
icebp
scas
lahf
cwtl
cmpb
xlat
cmp
adc
or
les
mov
cltd
sbb
jne
sbb
aam
ds
daa
mov
sub
jno
sbb
push
cld
inc
xor
mov
popa
not
clc
pop
jle
adcb
adc
xchg
iret
fs
fsubrs
xchg
dec
daa
and
stc
xchg
ja
mov
mov
or
fdiv
push
jl
das
loop
xor
push
pop
push
cmc
int3
or
out
lods
movsb
popa
jno
mov
and
and
ja
mov
leave
jae
jnp
out
or
ja
call
rcr
mov
leave
mov
cmp
pop
mov
dec
mov
jae
pusha
mov
sub
icebp
adc
imul
scas
addr16
adc
mov
xchg
xor
cld
out
cld
sub
mov
push
sbb
lahf
add
mov
mov
push
sub
mov
mov
mov
fdivrl
sahf
loopne
jae
wbinvd
int3
les
push
cmp
aas
es
xor
xchg
push
jmp
push
dec
inc
imul
out
or
sarl
int
or
inc
sbb
xchg
pop
dec
repnz
adc
movl
call
dec
icebp
hlt
push
outsb
add
cmp
jg
dec
xor
mov
dec
adc
jns
aas
nop
or
mov
mov
call
int
sub
outsb
mov
fnsave
arpl
test
pop
lea
leave
mov
stos
mov
inc
jo
es
stos
sbb
jle
idivb
sbb
stos
pop
mov
adc
clc
sbb
jg
adc
fucom
jae
add
loopne
fstps
pop
sub
lock
movsb
arpl
mov
popa
jb
and
adc
or
push
lret
mov
lock
jge
sub
push
mov
or
inc
xor
jo
loope
jge
lahf
aam
mov
or
jb
sbb
push
je
nop
mov
or
mov
es
inc
jae
xorb
rcrb
push
movsb
fisttpl
nop
shlb
ja
add
lahf
jno
in
xchg
lret
out
fsubrl
xor
incb
xchg
aam
and
into
aad
push
fstps
shlb
dec
cmp
inc
test
or
pop
mov
iret
flds
testl
add
addb
mov
xchg
xchg
test
xchg
cmp
movsb
add
aam
sbb
mov
mov
mov
or
jno
dec
adc
mov
out
shl
xor
aaa
mov
lea
or
dec
xor
imul
sbb
popa
cmp
push
fsubl
lret
jle
popf
popf
xchg
xchg
jmp
xchg
popa
mov
ret
rcrl
push
mov
inc
jmp
xlat
and
mov
je
lea
iret
int3
cmp
stos
cmp
cmpsb
xchg
mov
ss
jno
in
std
shlb
cli
sbb
adcb
arpl
fs
push
push
sbb
in
mov
mov
fstpt
pop
inc
cwtl
cmp
repz
mov
scas
jae
cmp
repnz
scas
mov
or
pop
or
push
cmp
mov
jmp
pop
mov
sbb
icebp
loope
lret
cmp
andb
loop
iret
repz
sub
push
subb
fcmovbe
aad
mov
push
out
icebp
xchg
adc
cs
or
imul
sti
out
sub
pop
add
testb
js
add
inc
sub
xlat
sub
dec
jo
inc
subb
add
push
add
jbe
inc
fsubrl
pop
rolb
jne
shr
ja
cld
test
jle
cmp
inc
iret
shl
ror
repnz
add
popa
int
inc
xchg
and
lahf
add
or
je
xor
jl
xchg
pusha
inc
xchg
popa
dec
aaa
test
sub
scas
aaa
inc
mov
popf
pop
sarl
imul
or
test
aad
push
out
cmp
xlat
cltd
rcrb
les
in
xor
jne
mov
jecxz
push
imul
iret
add
pop
jmp
cmp
jmp
ja
stc
mov
xor
mov
xor
jmp
movsl
enter
lods
lods
jne
push
or
fimull
xchg
pushf
int
pop
mov
mov
xlat
add
pop
popa
leave
mov
xor
sub
dec
push
cltd
push
and
neg
repz
push
lock
add
lea
daa
rcrb
xchg
push
or
cmp
lcall
xchg
lss
pushf
xchg
ret
pusha
jmp
popa
in
loope
xor
or
push
or
add
mov
inc
mov
push
out
xchg
xchg
stos
mov
adc
insl
jnp
mov
push
es
repz
xor
xor
fidivs
jnp
jecxz
mov
sbb
cmp
xchg
pushf
outsl
xchg
fwait
lea
shll
or
and
lahf
fldcw
pop
fwait
mov
aam
pop
cmpb
movsl
push
stc
xchg
shll
insb
mov
inc
mov
xor
xchg
xchg
fcoml
shrl
jle
sub
sub
sbb
stc
aaa
fstps
stc
mov
push
test
xchg
test
leave
sbb
mov
popf
imul
call
mov
cmpsl
pop
rorb
dec
out
adc
cmpsl
xchg
ja
add
stos
lds
mov
test
xchg
daa
mov
inc
add
nop
sbb
mov
das
test
movsl
in
in
sbb
pop
or
or
or
xchg
mov
xor
out
in
pop
xchg
ret
outsl
mov
pop
add
or
adc
scas
dec
jp
push
inc
fisttpl
and
insb
xor
or
lds
xorb
sahf
adc
jp
icebp
sub
pop
aas
dec
mov
imul
in
inc
jecxz
aad
ret
jecxz
inc
sbb
mov
sbb
sub
and
repnz
jl
mov
sti
mov
mov
repnz
sub
ljmp
subl
dec
mov
jp
push
sub
push
dec
jecxz
icebp
add
inc
shlb
mov
jbe
mov
xchg
pop
pop
rcr
lea
cmp
ds
cmp
outsb
pop
dec
push
cmp
sub
inc
cmp
mov
sbb
mov
push
lret
or
bound
mul
jb
leave
adc
das
ljmp
add
mov
inc
fbstp
pop
sbb
ret
add
ss
xchg
mov
pushf
movsb
imul
xlat
sbb
mov
pop
lds
or
mov
dec
adc
outsb
xchg
fwait
dec
insb
inc
and
negb
sub
mov
daa
push
movsl
std
ss
inc
ret
and
jmp
pop
dec
stos
call
jae
xlat
dec
rolb
sub
push
dec
stos
xchg
jecxz
xorl
xchg
jae
pop
out
stos
lcall
pushf
dec
push
push
inc
dec
or
push
jg
std
cmpsl
mov
xlat
push
add
popa
lea
mov
out
xchg
popa
jmp
xchg
lcall
and
mov
mov
enter
enter
xor
sub
into
mov
pop
mov
lret
adc
daa
add
outsb
pop
ret
lods
push
insb
mov
int
fiadds
or
push
adc
or
mov
in
xlat
test
fwait
int
popf
pop
js
lahf
jb
mov
scas
sub
lods
or
add
xchg
ds
gs
pop
cmp
push
mov
rolb
insl
and
mov
dec
shl
inc
cmpsl
push
in
lret
sbb
scas
test
movsl
ss
notb
add
cmp
xor
pop
rolb
rol
ret
lret
test
aaa
jne
les
push
cmp
imul
sbb
stos
negb
scas
cmpl
push
mov
icebp
popa
adc
loope
ret
xchg
popf
xor
inc
inc
fidivrl
ret
lcall
ret
dec
leave
mov
jne
js
fisubrs
sub
xchg
adcl
imul
sbb
add
push
or
ds
pop
movsl
adc
gs
inc
stos
lcall
push
dec
mov
sbb
dec
fnstenv
ds
lea
and
test
es
icebp
pusha
or
and
and
lock
stos
sub
outsl
rcrb
iret
cltd
push
inc
push
iret
sbb
or
stc
int3
out
filds
xchg
imul
adc
int
dec
pop
pop
or
mov
aas
push
pop
loop
lods
es
add
pop
xchg
imul
movsb
loope
jle
mov
loope
dec
dec
jl
into
sbb
rcrb
or
mov
push
add
jnp
jae
pop
lock
sbb
xor
mov
aaa
scas
hlt
sub
test
push
and
sbb
loopne
imul
inc
leave
jno
cmp
loopne
cmp
pop
cs
sub
in
xor
xor
xor
test
pop
pushf
leave
xchg
scas
add
stos
cmpsb
xchg
pop
jp
xor
xor
push
into
push
jg
stos
push
cmp
mov
or
sbb
mov
dec
xor
data16
push
mov
testb
lds
leave
test
les
or
iret
jmp
das
adc
sub
cwtl
mov
loop
dec
adc
jg
jge
repnz
jp
call
andl
mov
cmc
mov
shrl
sub
ss
movsb
scas
mov
jnp
es
lds
jecxz
lcall
and
fists
mov
fcomps
ret
cli
jns
in
aas
ret
fistl
adcb
dec
xor
insl
ss
dec
xchg
jl,pt
pop
and
loop
dec
mov
enter
dec
cmpsb
sbb
sub
inc
inc
and
push
inc
cmpl
jp
jno
int
lods
mov
fwait
jb
shrl
push
scas
mov
cli
xor
or
enter
mov
hlt
jno
jo
repnz
or
sbb
or
push
int3
out
mov
sbb
add
iret
pop
sti
adc
sub
aaa
cmp
ret
scas
add
or
addr16
scas
push
add
mov
shrl
sbb
mov
ljmp
xor
jmp
dec
leave
jo
testl
sub
jmp
jno
mov
jae
mov
mov
inc
inc
sub
cmp
aad
in
add
sbb
aaa
rcl
push
inc
xor
stos
outsl
ljmp
sti
rcrb
sub
ret
cmc
movsb
dec
lahf
insl
lock
out
fisubl
mov
rcr
fimull
mov
insb
adc
add
cli
inc
loope
mov
sub
daa
jmp
fnclex
pushf
jno
cmp
jae
mov
xor
or
or
cmp
jp
mov
pop
call
fnstenv
shll
mov
out
int
fimull
jmp
or
cmp
shll
adc
fcoms
jge
push
inc
mov
sub
mov
ds
xor
push
xchg
jns
xor
jp
dec
loop
pop
das
or
sub
out
clc
mov
xchg
jmp
dec
outsb
sbb
int3
decl
out
cmp
mov
scas
test
mov
cld
lock
addb
push
sbb
in
adc
jg
popf
out
stc
dec
ja
popa
and
cmp
fmul
inc
pop
push
add
push
repnz
fld
cmp
mov
xchg
js
inc
jb
dec
test
scas
ds
cmp
xlat
test
fwait
dec
or
cld
leave
jecxz
stc
sbbb
inc
andl
cmp
or
xor
sub
mov
or
les
mov
jge
mov
into
dec
pop
or
fs
lea
jmp
aaa
sbbl
daa
in
jnp
xchg
in
das
outsl
inc
cmc
lods
mov
popa
xchg
es
nop
data16
pop
sbb
ljmp
sbb
in
mull
xor
rolb
into
and
pop
xor
stos
ljmp
mov
mov
sub
add
fidivrs
dec
repnz
mov
stc
shll
ljmp
fdivr
data16
cwtl
mov
loop
fsts
push
pop
pop
dec
test
lods
in
and
mov
dec
adc
mov
gs
xchg
inc
xchg
insl
into
cmpsl
lds
sbb
pop
cwtl
mov
js
mov
mov
ucomiss
insl
insb
fldcw
ds
scas
sub
fs
xchg
iret
jne
jns
leave
push
cmp
test
frstor
lret
inc
cmpsl
outsl
sub
loope
mov
fiaddl
add
xor
push
mov
xor
add
lock
out
pop
and
push
adc
pop
movsl
mov
icebp
or
cmp
lods
jb
sub
sub
sbb
mov
dec
stos
lret
dec
cld
mov
repz
add
lods
or
push
js
cmp
sub
dec
mov
jmp
add
or
cmp
jns
dec
loopne
xor
int3
pop
gs
push
dec
test
fidivrl
pop
imul
mov
xor
jp
shl
push
in
out
add
fcom
lea
stc
sub
ds
mov
out
add
sub
mov
andb
adc
stos
shl
arpl
nop
jbe
inc
xor
rolb
cmp
orl
dec
dec
clc
cli
mov
inc
pop
mov
inc
sub
xchg
mov
into
jbe
cmpsb
scas
adc
addb
xchg
push
jne
sbb
aam
fcoms
out
das
pushf
push
aas
je
cmp
pop
daa
stc
test
and
xchg
movsl
cmpsb
xor
dec
bound
dec
leave
jg
shlb
repnz
xor
roll
lds
sbb
adc
add
sub
mov
mov
and
adc
inc
data16
jg
xor
lret
jne
ds
cwtl
jnp
cmpl
mov
loopne
loopne
movsb
sbb
xchg
fs
jne
pusha
mov
loopne
jmp
mov
sub
or
jp
sbbl
rcl
inc
mov
gs
xor
or
fdivl
je
xchg
movsl
cmpsl
inc
cmpsl
neg
jge
mov
jle
push
test
rol
lea
xorl
sbb
cli
in
mov
push
or
loope
seta
xlat
jle
pop
sbb
in
mov
add
aam
les
in
test
dec
xchg
inc
push
push
mov
stos
clc
cmpsb
push
pushf
mov
int3
or
fstps
sub
fisttps
or
mov
mov
lahf
loopne
movb
out
inc
add
mov
add
sbb
add
enter
insb
add
xorl
pushl
pushl
call
sub
jmp
scas
cltd
and
add
cwtl
int
in
repnz
addl
mov
xchg
es
jmp
data16
mulb
inc
push
and
lock
jno
daa
push
xor
push
aad
push
adc
sarl
in
out
sbb
push
and
scas
inc
orl
push
push
pop
pop
jnp
mov
jo
jge
rcl
dec
leave
bound
and
sti
ja
rcrl
dec
imul
das
cwtl
sbb
xchg
adc
inc
lods
cmp
inc
aam
add
xor
mov
repz
jge
mov
pop
cmpsb
jne
insl
hlt
mov
cmp
test
dec
mov
cmp
push
xchg
shrl
int
add
mov
rcrl
inc
or
push
mov
test
fcomps
sub
in
cmpsl
push
jecxz
pop
mov
pop
push
daa
lahf
scas
or
jns
adc
push
sub
inc
addr16
daa
xchg
cmp
les
adcl
out
pop
testl
rol
xor
push
sahf
mov
daa
incb
inc
popf
pop
mov
fcom
push
inc
xchg
xchg
push
push
mov
push
cld
stos
mov
fs
rcrl
add
and
jge
enter
insb
xor
lahf
orl
xor
hlt
xchg
jo
loop
clc
das
hlt
cwtl
mov
pop
sub
sbb
jg
cmp
js
stc
jp
cmp
jl
mov
ljmp
out
pop
addr16
popa
adc
pop
stc
js
shrl
pop
and
or
mov
daa
fs
add
xor
cmp
lret
or
outsl
xchg
pop
popa
aas
movsl
inc
addb
mov
aaa
lcall
aam
nop
mov
sbb
sub
mov
dec
mov
pop
into
jmp
aaa
or
dec
sub
or
xchg
xchg
insb
scas
dec
outsb
hlt
les
pop
push
stos
fimuls
cmpsl
jo
jp
lock
sbb
jl
cmp
push
outsl
push
imul
imul
mov
mov
daa
cmp
and
fisttps
xlat
push
or
pop
mov
add
jl
xor
mov
repz
dec
or
jge
inc
shll
push
and
push
dec
add
push
sbb
cmc
pop
jle
ljmp
mov
add
jecxz
sahf
into
popf
fmuls
ss
push
repnz
sub
or
xor
add
mov
mov
dec
call
gs
and
lret
cld
sub
cmp
fdivl
push
nop
sub
and
pop
repz
xor
lods
sbb
cli
push
shlb
nopl
inc
cmp
mov
hlt
push
jmp
inc
cs
mov
cli
dec
movsb
sub
cwtl
mov
mov
ja
jecxz
cld
or
stos
mov
lret
outsb
roll
stos
sub
inc
mov
sbb
mov
mov
jbe
inc
jg
mov
fiadds
lea
jb
nop
xchg
dec
xchg
push
adc
ret
add
sbb
cvtpi2ps
mov
inc
mov
push
ss
lea
inc
mov
in
ljmp
xorb
out
or
and
jae
cmp
aad
jae
jg
in
and
mov
andl
mov
lret
adc
dec
icebp
ds
test
daa
js
imull
mov
addr16
pop
fs
pop
dec
jge
push
pmullw
test
pop
jb
dec
daa
imul
xor
pusha
arpl
inc
pop
fcoml
test
push
add
sbb
pushf
or
in
mov
hlt
outsb
movsb
add
loop
cmc
jne
cmpl
jl
or
arpl
or
jne
arpl
lahf
ljmp
stos
cmp
push
or
enter
add
mov
inc
and
in
clc
mov
xchg
dec
mov
inc
into
mov
pop
push
imulb
hlt
pop
aam
xchg
push
inc
push
jae
mov
loop
jg
stos
xor
inc
dec
pop
xchg
jmp
lahf
fbld
fnstenv
adc
or
nop
aaa
fnsave
cmpsl
hlt
inc
mov
jb
xchg
jns
std
lods
hlt
mov
pop
push
jne
lahf
push
xchg
xchg
lret
pusha
fsubs
insl
push
das
fnstcw
out
out
lcall
pop
sbb
cmp
inc
fs
push
sarl
ds
test
adcb
je
jmp
inc
mov
out
cmpsb
rolb
out
nop
cli
movsl
data16
outsb
mov
stc
jmp
or
shll
cmp
outsb
adc
adcl
fldenv
mov
xlat
sub
lcall
mov
mov
lcall
pop
jecxz
mov
inc
jecxz
rorl
lret
pop
sub
xor
inc
or
pop
adc
mov
mov
das
in
add
dec
imul
aas
jb,pt
xor
out
das
pop
lret
stos
inc
adc
nop
inc
jnp
std
fcmovb
pop
aam
cmpsb
mov
leave
add
and
cmp
in
cli
mov
lret
lock
arpl
loopne
pop
sti
add
dec
filds
dec
mov
mov
pop
notb
inc
jg
test
bound
dec
mov
or
loopne
adc
movsl
adc
mov
add
aas
fbld
sub
fadds
stos
add
fsubl
mov
lds
or
arpl
add
into
cmpsb
cmp
adc
and
popa
pop
loop
sbb
inc
sbb
rcll
ss
pop
jne
mov
test
test
mov
dec
out
and
movsl
bound
pop
jnp
in
cmpb
in
xor
push
std
sti
dec
das
mov
sub
dec
fdivl
popa
dec
xor
shl
lret
into
loope
fcomps
int3
into
or
jno
fs
lea
mov
je
cmpb
clc
xchg
push
jae
jbe
outsb
ljmp
pop
xchg
push
fiaddl
andb
inc
mov
aaa
lock
es
mov
or
xor
mov
push
es
push
bound
fnsave
add
rcr
lcall
xchg
ss
inc
movsb
or
xchg
shll
inc
popf
stc
sbb
push
ja
in
bound
in
daa
js
leave
cld
or
mov
xchg
into
jg
pop
mov
popa
stos
jle
jecxz
movsb
and
neg
shlb
cmc
mov
sbb
mov
subb
repz
hlt
adc
and
pop
jle
icebp
bound
pop
shrl
sbb
nopl
cmp
cmp
icebp
xchg
xor
or
aad
std
fmul
pop
pop
fadd
and
mov
pop
inc
pop
adc
or
dec
pushf
xchg
jp
xchg
je
mov
hlt
lcall
or
test
dec
pop
stc
adc
les
outsl
ja
or
int
cmpsb
pusha
mov
xchg
xor
pushf
push
loop
imul
inc
xchg
mov
inc
ret
dec
or
aad
and
xchg
movsb
fidivs
fsts
int
pop
push
shll
jp
xor
insl
pushl
cmpsb
sbb
int
test
loop
lods
lret
stos
and
adc
call
sub
adc
je
mov
cwtl
idiv
jl
nop
mov
or
sub
sti
ret
sub
inc
mov
pop
int3
inc
ret
lcall
or
subb
xchg
or
arpl
into
xchg
sbb
insl
popl
and
and
out
sub
pop
jb
lret
sbb
lds
or
or
aaa
std
jb
jo
loopne
subb
pop
loop
lods
stos
js
adc
test
stc
lret
push
pop
mov
shll
inc
in
arpl
xor
shl
sub
xchg
inc
push
out
or
mov
xlat
ja
fadds
pusha
dec
adc
dec
mov
orb
adc
push
adc
js
or
lea
lret
xchg
and
cmp
sub
jecxz
mov
dec
int3
mov
adc
mov
add
adc
fwait
or
sub
add
mov
aam
inc
pop
jmp
xchg
jns
pop
fadds
mov
shll
inc
push
and
std
iret
xor
mov
mov
mov
aas
sbb
mov
test
inc
sub
in
insl
lret
scas
push
enter
fistps
sub
mov
cmp
pop
and
adc
jecxz
leave
jmp
outsl
lds
inc
cmp
xchg
cmp
sub
cmc
jne
and
out
popa
mov
cmp
and
ja
mov
mov
adc
mov
sub
push
mov
inc
jmp
enter
scas
lahf
dec
loope
jo
add
xchg
push
push
adc
ljmp
insb
imul
inc
add
sub
das
addr16
pop
outsb
add
pop
enter
scas
fcomps
scas
and
lret
xchg
sub
jno
xchg
mov
fimull
mov
je
scas
push
mov
fsub
test
jne
aad
rolb
sub
imul
xchg
fadd
xlat
xchg
jp
mov
pop
and
jno
sbb
jg
js
icebp
mov
std
fistpll
rcl
jnp
iret
and
outsl
nop
aaa
loope
lcall
pop
jecxz
cld
xchg
dec
adc
addr16
jmp
push
int
add
pop
mov
int3
mov
mov
pcmpgtd
lock
sbb
and
lods
insl
in
movsb
push
out
jp
sub
mov
sarl
scas
pop
cmp
pop
scas
sub
jl
loopne
arpl
mov
lock
jb
push
cmc
clc
and
sarl
pop
mov
imul
mov
fidivs
push
fldt
pop
data16
int
mov
fistps
scas
repnz
fdivrp
cmc
jecxz
pop
dec
mov
or
xor
add
data16
call
adc
dec
xor
daa
shlb
inc
mov
xchg
fisubl
imul
test
imul
std
sbb
pop
jnp
pop
ja
ds
ds
cli
mov
cmp
leave
loop
adc
fstpl
xchg
out
testl
mov
mov
std
mov
xchg
add
shl
ficoml
ja
xchg
shrl
lds
ja
push
and
jmp
jnp
mov
fdiv
icebp
jmp
cld
lret
xchg
ja
aam
mov
xchg
lcall
repnz
outsl
and
repnz
or
xchg
xchg
leave
andb
or
pusha
sub
shl
clc
in
out
cld
jl
jae
addr16
mov
jae
lret
repz
bound
sbb
dec
std
ss
push
and
add
fidivrl
jmp
test
clc
mov
insl
iret
mov
fs
notb
imul
sub
outsb
divb
push
aaa
sbb
mov
pushf
in
xor
lods
inc
nop
outsl
insl
jae
movsb
ja
push
pop
fsubs
shrl
in
mov
std
loope
std
ljmp
js
jg
insb
test
test
in
imul
out
fldenv
out
mov
adc
inc
jne
pop
xchg
or
je
xchg
xchg
arpl
dec
sarb
xchg
mov
aaa
sbb
inc
cmc
push
add
in
pop
in
pushf
inc
cltd
and
loope
icebp
in
cmp
sub
lea
sbb
ja
sub
mov
mov
ds
cltd
outsb
mov
mov
mov
inc
dec
outsw
pop
mov
mul
cmpb
cmp
in
lea
xchg
insb
loopne
dec
cli
sbb
push
aaa
xor
pop
xchg
daa
jb
xchg
fmulp
fisttps
inc
mov
movsb
sbb
push
pop
xor
imul
or
push
inc
call
shl
mov
add
and
lods
test
rorl
lods
or
jns
jnp
adc
add
mov
xor
mov
and
xchg
inc
mov
leave
icebp
out
cmc
stc
cmpl
xchg
xor
bound
and
jnp
xchg
fs
dec
out
lods
mov
or
push
test
push
jno
enter
mov
daa
inc
clc
pop
fistl
xor
mov
stos
mov
sbb
pop
add
xchg
arpl
cmp
add
popa
cmp
test
movsb
push
dec
jae
jns
sub
push
jg
adc
mov
mov
and
cld
sub
add
mov
cmp
lea
shl
mov
pop
sahf
pop
xor
pop
xchg
insb
call
pop
insb
or
pop
popf
or
js
rorb
sub
das
in
lcall
arpl
xchg
stos
js
dec
stos
xchg
and
dec
or
jge
push
test
pop
das
and
jle
sbb
fisttpl
test
add
xchg
adc
pop
sbb
sbb
sbb
notb
mov
lods
inc
daa
mov
mov
je
ljmp
and
mov
dec
cmp
or
je
icebp
call
iret
pop
push
int3
bound
rorl
mov
cmp
stos
push
scas
ret
mov
insb
mov
adcb
pop
stos
xchg
sahf
stos
repz
sbb
mov
mov
ror
xor
ljmp
pop
lcall
cmp
insb
xchg
jg
fsubl
enter
add
sahf
gs
jmp
adc
es
or
adc
add
mov
popa
mov
xlat
dec
or
sbb
xchg
nop
jae
out
sub
negl
inc
outsl
add
jecxz
sub
dec
dec
lea
out
pop
movsb
or
cmp
xchg
xchg
cmp
ja
mov
cwtl
and
fstps
pop
dec
cmc
int
fmull
lea
cmp
movsb
imul
je
xchg
dec
push
test
push
loop
xchg
mov
lods
sub
mov
cmp
sub
push
cmp
xor
mov
fistps
mov
cmc
in
jno
mov
push
sub
xchg
adc
adc
mov
push
mov
push
stos
nop
test
icebp
add
add
icebp
stos
repnz
jmp
mov
or
inc
jno
xchg
lea
cmp
xchg
enter
add
test
pop
enter
test
gs
or
ja
mov
mov
cmp
enter
scas
adc
push
add
cmp
ljmp
sub
jbe
pop
or
mov
insl
jl
inc
dec
scas
xor
enter
xchg
pusha
sbb
sub
in
and
push
leave
stos
sbb
xlat
fcmovnu
mov
bound
pop
popa
sub
pop
xchg
pop
push
cmp
fisttps
std
mov
xchg
mov
lret
jle
mov
xor
xchg
lret
mov
pop
into
mov
dec
sub
adc
repz
lret
iret
xchg
jo
mov
adc
sub
aaa
push
cmpsl
sub
pcmpgtw
movsb
adc
cltd
in
or
sbbl
aam
dec
xor
push
pop
mov
fs
mov
mov
jl
xor
push
jbe
ss
add
test
push
adc
cmpsl
mov
add
or
jmp
add
mov
xchg
push
adc
cmp
lods
scas
subb
add
lcall
les
fisubs
nop
mov
dec
push
int
adc
stc
push
mov
loopne
cli
das
pop
adc
sub
sub
mov
or
jbe
popa
push
jmp
lcall
fs
popa
push
pop
test
cmpsl
xchg
xchg
scas
xchg
jmp
repz
movsb
out
add
pop
cmp
lea
xchg
in
sub
or
ret
sbb
xchg
es
arpl
xor
pushf
mov
enter
fsubrp
int
cmp
cltd
stos
ret
xor
mov
push
jo
aaa
adc
rcll
or
movsl
call
push
nop
mov
xor
sbb
inc
test
add
adc
xchg
mov
out
imul
jmp
es
push
sbb
lret
push
out
inc
or
rol
or
push
add
xchg
shlb
pop
sbb
aas
test
jmp
sbb
in
movnti
imul
jb
nop
adc
popa
repz
inc
jns
jmp
xorl
inc
xor
sbbl
sti
push
mov
xchg
es
push
test
adc
push
xchg
stos
jle
ret
xchg
jb
pop
jecxz
xor
mov
dec
sub
test
ret
arpl
add
in
cmp
mov
inc
pop
mov
ja
sbb
rcll
sbb
lret
loope
test
push
adc
bound
sbb
in
jl
inc
mov
and
push
push
xchg
cwtl
mov
sbb
and
out
cltd
jb
mov
pop
jbe
sbb
mov
jp
sbb
ljmp
mov
into
lds
ljmp
jl
sub
and
push
sbb
setge
cwtl
xor
jmp
sbbb
rcl
arpl
stos
push
pushl
dec
sarb
in
sti
pusha
jno
push
into
add
or
push
hlt
xlat
sub
jb
into
cmp
lods
pushf
shl
push
cwtl
mov
enter
dec
ret
imul
or
mov
push
xor
icebp
loope
inc
jecxz
jmp
jnp
inc
sti
mov
mov
bound
mov
cmc
jmp
stc
or
xor
pop
jl
outsb
sbb
jbe
mov
pop
jg
xor
je
bound
sub
gs
mov
and
lea
push
dec
inc
aas
fwait
rolb
stc
mov
mov
mov
rcrl
cmp
out
sbb
inc
cmpsl
pop
loopne
mov
filds
sub
arpl
dec
xor
and
cmp
stos
cmp
mov
cs
pop
and
xorl
aad
mov
test
sub
or
pop
push
sbb
and
les
stos
sbb
jo
push
adc
rcl
jecxz
cli
je
shld
adc
push
call
ret
jp
cmpsb
test
xor
iret
data16
and
dec
jns
push
cmpb
imul
inc
sub
lock
or
ja
je
or
inc
jle
sub
and
or
push
subl
in
arpl
out
rcr
and
mov
jge
jecxz
sahf
mov
xor
aam
lods
inc
sbb
lods
test
out
push
inc
jecxz
mov
iret
sub
cwtl
into
fs
add
jmp
cmp
sbb
ficoml
hlt
jno
sbb
gs
test
mov
pop
mov
pop
adc
push
and
or
das
movsl
ffreep
iret
in
repz
popa
cmpsl
lock
inc
inc
sub
outsb
mov
not
leave
adc
jp
xchg
push
add
pop
int
out
push
cmp
insl
mov
inc
or
push
push
or
inc
push
stc
fsubl
rcl
pop
xchg
mov
andb
push
push
stc
js
in
in
dec
inc
push
out
ret
pusha
clc
cltd
jge
mov
scas
adc
adc
cmp
cltd
pusha
lahf
xor
push
and
sti
sub
loope
lahf
mov
pop
or
movsb
movsb
lret
mov
xor
addb
xchg
pusha
jecxz
int3
cmc
pop
xor
gs
repz
push
xor
and
fistpll
inc
pop
xchg
jae
lret
sub
push
nop
pop
sub
and
out
sub
rorl
cmp
jb
mov
push
jp
add
push
and
loopne
movsb
push
sub
sti
pop
mov
sbb
jns
iret
pop
imull
lahf
mov
jb
sub
iret
xor
mov
cmp
stos
mov
stos
leave
je
insl
pushf
out
jns
idivb
clc
out
push
sub
adc
fidivrl
mov
mov
inc
dec
jg
ljmp
jb
mov
test
in
hlt
ds
stc
mov
pop
mov
push
and
mov
mov
stos
xlat
es
rclb
lea
cmp
xor
ret
jne
mov
xchg
insb
push
sub
ret
xor
mov
xor
repnz
and
push
adc
stc
and
cli
stos
push
push
and
cmp
jno
pop
popa
shll
lret
cmp
sub
in
dec
inc
or
stos
and
push
cld
test
bound
mov
in
push
aad
insl
movsl
daa
xor
lods
loop
daa
ja
push
or
pusha
pop
mov
test
push
jge
stos
mov
data16
imul
test
icebp
jnp
scas
mov
gs
pop
rorl
cld
lods
inc
dec
repz
popf
std
clts
int
hlt
outsl
iret
fsubl
dec
mov
push
mov
xor
xchg
mov
dec
orb
pusha
push
les
pop
shrb
xor
cld
fmuls
lea
dec
mov
scas
cld
cmc
push
gs
cmp
inc
sbb
jecxz
dec
repz
mov
lock
add
lods
xchg
add
shll
cmc
test
jg
pop
xrelease
push
lea
dec
stos
cld
cmp
popf
in
or
imul
mov
loopne
jo
lods
adc
and
popa
sbb
loope
out
add
jl
push
dec
or
mov
push
mov
xchg
jl
or
cmp
and
in
dec
xor
sbb
icebp
pop
adc
mov
push
cmp
mov
arpl
ja
in
xlat
jg
rorb
sbb
cmp
imul
hlt
mov
bound
fdiv
mov
mov
mov
mov
movsl
sub
mov
inc
push
ds
ljmp
xor
dec
in
loope
ds
sbb
repz
icebp
pop
inc
xchg
or
aas
cld
push
shll
cltd
mov
sub
pop
push
or
cmpsl
mov
push
inc
pop
rorl
xor
das
aaa
mov
inc
add
std
je
mov
test
mov
jp
repnz
xlat
sbbl
call
xchg
clc
outsb
pushf
arpl
xor
and
sbb
test
ss
add
out
stos
repz
pusha
xchg
inc
fidivrs
cmp
jbe
sysexit
aad
mov
int3
jno
negl
sti
xor
fs
inc
lea
stos
fucomip
pop
pop
cmp
mov
lods
mov
fdivs
outsb
pop
and
mov
hlt
stos
and
xchg
xlat
cmc
bound
jno
push
pusha
in
mov
test
in
mov
andb
ja
fnstsw
or
lds
mov
pop
cs
cwtl
cmp
test
fwait
push
stc
mov
mov
repz
and
cmc
or
hlt
stc
sbb
shll
shl
ss
out
sub
add
pop
mov
xchg
mov
pop
fs
mov
testl
stos
ja
imul
push
mov
pusha
int
inc
ljmp
sub
adc
daa
push
das
ljmp
cmp
inc
ret
inc
adc
popa
fwait
int3
in
xor
adc
pop
inc
sub
arpl
xchg
xor
pop
pushf
iret
jae
es
mov
mov
decl
sahf
jmp
test
jg
mov
movsl
xchg
subb
dec
sub
fsts
lret
subb
cmp
sbb
arpl
out
push
mov
cli
inc
in
jg
and
jne
dec
int
mov
stos
imul
sahf
icebp
aaa
xchg
cmp
ss
data16
dec
dec
dec
pop
mov
xor
cmpl
in
jns
jbe
push
jl
notl
mov
int3
shlb
push
mov
xchg
mov
mov
in
daa
aad
adc
mov
push
mov
sbb
lret
dec
mov
rorl
imul
int
mov
pop
push
cli
gs
hlt
pop
subps
or
inc
out
cmp
and
or
hlt
mov
imul
loopne
leave
pop
in
xor
mov
clc
cmp
lret
fcomip
out
add
push
or
pop
loopne
nop
xchg
insl
decb
loope
add
inc
xchg
aam
fisttpl
mov
adc
aam
fs
pop
insb
in
loopne
lea
mov
adc
hlt
mov
jl
in
arpl
movsb
in
inc
hlt
sbb
js
jp
mov
loop
mov
fisubs
xor
cmp
dec
jo
pop
adc
popf
mov
dec
mov
mov
mov
scas
sub
mov
gs
mov
iret
scas
mov
xchg
aad
pushf
cmp
or
nop
movsl
mov
mov
pop
mov
sub
mov
add
mov
add
inc
sbb
xor
popa
insl
push
add
jo
add
roll
pop
adc
notl
jnp
loope
lret
pop
sub
push
hlt
dec
outsb
xchg
pop
pop
or
pop
stc
cmp
cmpsb
int
shrl
fwait
dec
dec
cmp
jo
pusha
es
enter
jmp
rcl
pop
data16
into
dec
fwait
leave
popa
push
and
adc
scas
inc
jl
outsb
xchg
mov
adc
bound
pop
or
pop
loope
jno
insl
cmp
test
mov
jmp
xorl
sahf
cld
add
adc
iret
adc
or
fiaddl
outsl
aad
fcompl
insb
ljmp
andl
ret
cmp
andb
iret
pushf
ret
push
stc
push
jmp
xchg
push
sub
ds
jge
and
repnz
jb
cmp
lods
mov
shrl
and
stos
add
inc
adc
movsl
xchg
bound
jge
aam
daa
fists
cmpsb
push
lret
ds
enter
lcall
mov
mov
hlt
mov
fs
std
push
add
js
push
mov
jp
into
mov
cmp
addb
scas
sub
jae
loope
pop
stos
cmpl
mov
loop
sbb
xor
sub
fwait
pop
sub
ljmp
adc
push
insb
cmp
sbb
pusha
xchg
repnz
fistpll
jge
mov
loopne
adc
push
sbb
jbe
push
lcall
cs
xchg
cmp
cmp
mov
inc
lea
fadd
sub
add
test
movsb
pop
xor
vmulpd
inc
fimull
pop
jbe
in
inc
daa
inc
jns
lods
and
cmp
xchg
mov
repnz
xchg
mov
and
ret
pushf
fcomip
sub
adc
bound
adc
push
cmp
dec
inc
ficoml
push
xchg
or
loope
into
sub
dec
xor
out
cmp
mov
mov
insl
xchg
pushf
jl
mov
sub
xor
fsubl
add
xchg
xor
pushf
xor
xor
add
jl
and
jp
test
dec
decl
iret
sbb
addr16
cmp
xchg
jp
lret
pop
lock
das
mov
into
test
rcrl
aas
xor
cs
and
sbb
inc
popf
mov
inc
and
mov
mov
xor
jns
sub
jmp
mov
movsb
inc
cs
push
add
xchg
xchg
cmp
or
mov
lahf
out
jmp
orl
outsl
xchg
push
cmc
xor
adc
add
fcomip
cltd
ficoml
jo
push
movsl
inc
mov
jne
mov
mov
inc
in
mov
scas
imul
adc
adc
sbb
cwtl
ficoml
or
dec
in
mov
stos
int
bound
insl
pop
cmpsl
mov
jge
push
push
shll
mov
in
cmp
outsl
fcmovb
outsb
cmp
adc
inc
out
pushf
push
gs
jae
test
push
pop
ds
fldl
mov
ss
jp
int
cld
and
sub
mov
fstl
push
mov
xor
cmp
inc
xor
hlt
push
sub
testl
int
jp
lcall
push
and
shrl
aaa
in
and
add
jbe
imul
jle
outsb
mov
pusha
mov
imul
pushf
nop
fstps
add
or
mov
imull
cs
xor
shl
aas
out
or
mov
shlb
push
rcrb
enter
pop
xchg
xchg
xchg
xchg
pop
out
add
repnz
cli
cli
iret
xlat
test
inc
call
test
stc
repnz
xchg
jno
data16
lds
push
cmp
cwtl
int3
cmp
jno
sub
cmpsb
pop
xchg
sbb
imul
ljmp
movsb
je
dec
sub
fbstp
data16
pop
pusha
js
mov
add
xor
lret
lahf
clc
xor
stos
fidivl
in
push
mov
xchg
jmp
ja
faddl
fucompp
add
mov
dec
add
cmp
sub
out
ret
inc
pop
fistps
enter
shrl
lea
loope
movsb
push
adc
test
nop
repz
enter
add
stos
cmp
jle
dec
clc
pop
out
sbb
or
pushl
in
int
rcr
int3
xlat
jnp
in
pusha
dec
pop
mov
das
or
aas
or
xor
repnz
js
sbb
fwait
loope
sbb
insb
sbb
ret
mov
clc
test
pop
inc
push
nop
ret
ljmp
or
insb
xchg
inc
inc
fwait
dec
jae
out
mov
shrb
inc
xor
inc
adc
inc
rorl
mov
xchg
call
sub
xlat
cmp
imul
push
paddd
enter
aaa
ja
push
fidivl
imul
dec
out
test
je
cmp
out
mov
jg
mov
jecxz
push
or
clc
jecxz
sti
inc
test
lret
fwait
lret
out
lret
pop
xchg
add
ret
stos
icebp
inc
sbb
mov
fisubrs
cmp
cs
pop
cltd
push
les
cmpsb
sub
jmp
leave
cmp
pop
jge
leave
dec
int
or
sub
lock
and
incb
xor
sub
addl
stc
lcall
loope
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
mov
subl
xor
xorl
add
movl
cmp
je
xor
mov
xor
mov
mov
mov
xor
or
xor
mov
xorl
add
mov
mov
and
mov
mov
adcl
add
xorl
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
jmp
or
inc
mov
insl
mov
jno
addl
es
test
lods
mov
test
testb
push
scas
lcall
fidivs
add
xchg
inc
gs
in
jmp
lock
mov
lret
mov
mov
popa
mov
imulb
adcl
addr16
js
jnp
into
or
xchg
adcb
push
lds
lea
dec
mov
out
xor
clc
add
scas
sbb
adc
sbb
call
cmpsl
repz
fdivs
jae
sub
mov
sbb
scas
test
dec
movsb
test
push
adc
pop
mov
dec
dec
mull
std
xor
jg
rorl
insb
lret
sub
xchg
popa
or
ja
xchg
bound
jle
inc
jl
push
repnz
mov
cli
mov
test
adc
xchg
mov
push
ja
push
jmp
add
cmpb
out
enter
sarl
dec
or
cmc
dec
jecxz
add
int3
jmp
sub
enter
jbe
mov
xchg
ljmp
jbe
inc
and
in
mov
xchg
or
push
addl
jno
out
sbb
lret
dec
mov
jo
inc
push
adc
adc
push
loope
in
jecxz
fstps
sub
pop
nop
fwait
lret
mov
ret
jnp
sbb
push
repnz
cmp
dec
cmp
shlb
push
ret
or
psrlq
cmp
fisttps
daa
fadds
mov
jae
sahf
dec
sbbl
adc
sub
in
subb
repnz
iret
xchg
jno
add
adc
fisttpl
fdivl
mov
mov
or
addr16
loope
pusha
cmc
mov
in
js
and
mov
adc
subl
cmp
imul
jmp
or
cmp
loopne
adc
hlt
jg
std
dec
insb
out
sub
sbb
mov
and
sub
cmc
outsb
addr16
movsl
push
std
mov
mov
leave
pop
insl
movsl
add
ja
out
push
outsb
push
pop
xchg
ret
out
dec
mov
jno
mov
stc
push
pushf
inc
sbb
sbb
test
fcoml
divl
dec
repz
dec
xchg
outsl
flds
adc
mov
inc
inc
jo
inc
sub
pop
imul
int3
mov
sub
bnd
push
stos
mov
lock
mov
repz
jb
outsb
adc
das
pop
jecxz
outsb
les
jl
aaa
add
fistpl
pop
sbb
pop
xor
fs
push
lock
mov
pop
pop
shrb
outsl
push
cmp
pop
insb
jnp
pop
xchg
add
sbb
xchg
mov
out
mov
push
sahf
pop
sbb
mov
std
push
aam
sti
push
xchg
int3
dec
inc
xchg
lds
mov
seta
ret
sbb
iret
vxorps
test
push
jo
loope
test
add
jbe
dec
shl
pushf
adc
aaa
repnz
pop
dec
or
add
aad
and
push
xor
sub
xchg
mov
shlb
pop
mov
pusha
imul
sarl
fdivs
adc
shrb
sahf
mov
push
fisubrs
gs
push
fucomi
dec
dec
shlb
cmp
ret
les
arpl
jl
pushf
sbb
js
xor
fwait
xlat
leave
push
sbb
enter
push
rcrl
xor
cmpsb
add
jle
into
dec
xor
in
int
nop
test
pop
jmp
popa
lds
or
fsts
decl
xchg
inc
xchg
mov
mov
hlt
xor
in
mov
jbe
pop
cltd
ja
jg
push
inc
inc
clc
pop
in
jb
cmp
mov
cli
xchg
jp,pn
add
and
mov
dec
sbb
filds
rolb
stos
mov
jmp
jne
pop
push
jno
sbb
pop
test
sbb
punpcklwd
sub
push
cmp
mov
mov
stc
sub
cmp
adc
push
xchg
mov
leave
add
add
mov
movsl
dec
lock
pop
xchg
pop
jecxz
push
stos
xor
in
lods
loop
mov
dec
fstpl
cmp
pop
cwtl
pusha
cld
dec
xchg
inc
aad
inc
pushf
xor
xor
lahf
sbb
shrl
fs
adc
jnp
xor
jnp
enter
call
stos
push
popf
fisubl
pop
jns
fdivrs
cmp
pop
clc
and
mov
aas
popf
add
and
fsts
dec
sti
xor
cld
jno
mov
sbb
movsl
push
mov
push
sub
pop
cmp
fldt
dec
push
arpl
cmp
mov
repz
mov
cmpsl
test
jecxz
jle
repz
insl
rcrl
in
mov
cmp
icebp
mov
ss
mov
mov
icebp
mov
sbb
pop
inc
loope
jmp
cli
mov
repnz
xchg
bound
mov
mov
int3
sbb
cmpsl
jge
in
imul
popa
loop
adc
das
outsb
lods
xlat
sub
fsubr
dec
scas
push
cmpsl
iret
pop
jno
adcb
sbb
sub
xchg
jb
es
rorl
jns
enter
stc
sahf
daa
stc
cmpsl
shrb
imull
rsm
mov
divl
int3
shrb
lock
rcrl
daa
adc
lods
dec
lds
jge
cs
test
add
mov
outsb
sub
jo
fldcw
rcrl
movb
xor
dec
xor
pusha
test
stos
in
inc
ss
into
push
add
inc
loope
js
popf
or
out
push
xor
rcr
inc
mov
cld
int3
sub
ror
mov
mov
ret
cmp
push
or
cmp
inc
dec
cmp
fs
test
mov
test
adc
mov
xlat
pop
sbb
inc
cmc
scas
and
sbb
mov
inc
sub
add
into
pop
sbb
cmpsl
or
jge
push
cmc
lds
pop
mov
not
clc
cmp
and
mov
inc
shlb
loop
loopne
iret
mov
mov
insl
fs
jp
pop
testl
adc
pop
test
js
adcl
ss
jnp
push
push
imul
shl
aas
out
movsl
sub
inc
xchg
cld
xlat
loopne
and
mov
dec
lds
mov
adc
ds
call
mov
mov
imul
dec
es
sub
or
fldlg2
fdivl
adc
mov
push
pop
mov
loopne
xor
jae
imul
sub
mov
cmpsl
out
loope
cmp
xchg
sub
cld
out
add
js
scas
xor
sbb
xor
push
cmp
int3
fidivrs
std
add
sbb
inc
push
arpl
bound
pop
jno
je
pushf
inc
and
and
js
insb
mov
arpl
push
dec
loope
add
in
inc
dec
stos
add
js
bound
movsl
xlat
jmp
les
int
stos
sbb
and
pop
int3
mov
inc
and
mov
cmpsl
mov
movsb
adc
fisttpll
or
cld
sar
mov
mov
sbb
fidivs
sbb
fs
or
jmp
xor
push
mov
cmpsb
adc
push
pop
scas
push
pop
gs
stos
int
ljmp
fnstsw
add
push
cltd
insb
jge
popa
jbe
or
cmp
rcrl
jbe
cld
xchg
sbbl
cmpsl
sbb
fldenv
std
jge
xor
loopew
scas
pop
mov
mov
or
loopne
fld
lea
cli
int
shrb
fdivs
add
pop
popf
adc
ffreep
in
jl
cmp
and
outsb
sar
fildll
dec
int
js
or
data16
mov
xchg
push
jmp
stc
out
inc
push
mov
mov
data16
fistps
adcl
sbb
mov
push
call
dec
mov
nop
jecxz
jmp
inc
data16
or
pop
xorl
test
or
dec
xorb
jae
in
lock
fdivs
mov
lret
pop
xchg
nop
loopne
xor
add
pop
mov
mov
fnstenv
mov
add
sbb
popa
push
sub
test
ret
add
push
adc
inc
mov
adc
jmp
jmp
add
in
xorl
repnz
add
sbb
dec
lret
les
test
cwtl
or
fcmovbe
mov
dec
cltd
cmc
pop
mov
add
push
pusha
xlat
movsb
dec
or
imul
jns
lods
psrlq
sub
scas
sbb
outsb
imul
aad
jmp
mov
or
js
mov
shll
add
inc
insl
fcmovnu
into
or
mov
adc
in
adc
sub
cmp
xor
jp
test
orb
inc
or
addb
pop
xlat
das
mov
jb
leave
shl
shrl
mov
xchg
cltd
xchg
or
mov
add
cmc
add
insb
stos
push
push
mov
xlat
cmp
sub
movsl
test
jp
push
inc
or
xorb
xor
fnstenv
xchg
mov
sub
and
dec
adc
mov
pop
mov
mov
lods
enter
cmp
xlat
mov
scas
stc
mov
sbb
cmp
test
cltd
scas
jecxz
cmp
pop
adc
pusha
mov
jecxz
jmp
mov
jo
sbb
ja
mov
insb
dec
popf
outsb
xchg
cmp
fidivrl
dec
daa
test
jecxz
fsts
outsl
xchg
push
enter
dec
add
cmpsb
xorl
xor
pop
sbb
ss
push
jns
in
insb
hlt
rorl
imul
dec
adc
inc
mov
push
iret
xchg
push
add
out
dec
jb
inc
jg
enter
fisttps
ja
xchg
aam
xor
dec
mov
pop
inc
inc
in
cmp
mov
icebp
adc
test
rcrl
sbb
sub
or
enter
notb
dec
mov
inc
aas
mov
stos
gs
mov
xchg
adc
jae
lea
dec
js
clc
gs
push
out
dec
sub
andl
test
pop
cld
add
aaa
fistl
jo
fdivs
cmp
jo
sbb
or
test
pop
call
jge
sbb
xchg
add
jle
sub
and
inc
push
inc
add
inc
lds
xchg
subl
inc
pusha
add
ret
mov
andb
dec
sub
in
out
out
cmp
push
mov
cld
adc
push
mov
mov
adcb
xor
xor
aaa
fwait
dec
push
add
filds
leave
jmp
pusha
out
fcoms
jne
loop
aaa
sub
mov
fprem1
cmp
cmpl
xor
xor
xor
test
daa
sarb
mov
jg
pop
cmpsl
imul
cmpl
das
cmp
outsb
dec
mov
repnz
add
ss
pusha
jbe
outsl
or
dec
inc
call
das
test
adc
sbb
inc
dec
add
jnp
xor
iret
ret
pop
adc
cmc
adc
shll
mov
stos
or
inc
stos
lods
mov
add
mov
xchg
push
aam
stc
roll
dec
jge
add
int
add
aam
imul
shlb
jp
test
arpl
inc
dec
test
ja
xchg
jmp
aas
sbb
mov
jle
sbb
mov
add
jg
mov
repz
imul
gs
jns
xor
sahf
cmp
cmp
pop
ret
fstp
movsb
cmp
adc
sbb
js
rorb
mov
pand
push
es
rcll
xlat
into
mov
in
in
enter
lods
mov
xor
shl
cmp
pop
sbb
shrl
xchg
loope
sub
ss
mov
in
pop
dec
cmp
fimull
inc
xor
and
cwtl
adc
je
cwtl
add
dec
cmp
jle
push
cmp
inc
adc
sub
loopne
repnz
jecxz
fwait
push
lea
fnstcw
inc
aad
add
xchg
test
push
lahf
jle
clc
mov
stos
scas
sub
jae
adc
and
lea
push
cmpsl
pop
sub
xchg
push
xchg
stc
imul
jmp
mov
int
and
and
jge
mov
push
f2xm1
mov
sub
popf
adc
dec
jns
dec
out
in
in
imul
cmp
scas
pop
fwait
add
sub
fiadds
or
xlat
mov
movsb
xchg
push
sub
or
je
pusha
add
loope
scas
push
testb
xchg
xor
dec
jp
sub
fidivl
lock
hlt
inc
xlat
js
arpl
out
mov
jmp
mov
mov
pop
pusha
movsl
in
push
pop
push
xor
or
mov
cmp
mov
jecxz
stc
mov
into
jl
dec
mov
gs
jl,pt
xor
loope
xchg
xor
leave
je
cltd
pop
push
pop
ljmp
lock
jae
fists
adc
jno
mov
js
shll
test
in
mul
decl
xor
pop
test
inc
movsb
adc
xor
jo
shll
outsl
stos
add
sbb
push
push
jecxz
ss
jnp
cmpsl
imul
xchg
in
movsl
aaa
xor
jb
push
mov
sbb
mulb
xlat
imul
fidivl
push
mov
mov
xchg
add
or
mov
test
inc
push
dec
pop
dec
inc
inc
nop
mov
test
and
jbe
int
inc
pop
scas
nop
shrl
fisubrl
xchg
add
mov
ret
fcoms
mov
dec
cmp
cwtl
xchg
popf
mov
lcall
inc
outsl
int3
push
mov
lret
mov
punpckldq
outsb
cltd
push
sbb
rcrb
mov
cmp
lret
imul
lea
fcom
ret
add
sbb
fwait
jb
in
fs
fimull
sarl
jle
in
push
lret
mov
popf
sub
xchg
andb
xchg
xchg
jmp
add
inc
sahf
mov
pusha
ss
cltd
lods
push
mov
ret
sub
xor
push
xchg
jb
cmp
mov
aas
sbb
push
mov
js
test
cmp
jb
das
sbb
add
xorl
pop
rolb
rol
subb
das
mov
and
int
mov
inc
into
daa
out
inc
dec
shll
or
mov
jecxz
bound
mov
lret
shr
jbe
ja
pop
push
jns
inc
pop
aas
or
mov
pop
mov
mov
mov
in
xchg
imul
dec
nop
aad
xchg
loop
sub
and
jmp
push
mov
test
mov
sub
int3
scas
subb
push
pop
push
mov
shlb
scas
and
test
push
mov
enter
inc
xorb
sbb
andl
xchg
jp
xchg
mov
push
movsl
mov
cmpsl
out
scas
test
aaa
or
inc
in
or
lods
test
cmpsb
xchg
sbb
mov
push
loope
jns
lods
mov
imul
mov
lret
das
outsl
cltd
imul
mov
mov
jno
adc
lds
inc
mov
pop
data16
push
fcompl
adc
fimuls
mov
xchg
arpl
sbb
or
arpl
inc
push
addb
fidivl
xchg
int
cmp
es
and
in
or
push
nop
mov
pslld
and
pop
push
scas
inc
stos
pop
repnz
inc
pusha
insb
or
cltd
std
cmpsl
mov
cmpsb
or
in
imul
xchg
pop
dec
aad
arpl
sahf
mov
mov
stos
adc
in
cmp
xchg
jmp
pop
mov
stos
add
sti
or
sub
std
dec
adc
gs
dec
aad
out
lcall
sbb
xor
fstpt
loope
push
mov
mov
pop
lods
mov
scas
repz
and
sbb
jp
adc
jl
les
popa
loop
into
sbb
add
insl
imul
sub
cwtl
cmpsb
dec
dec
mov
xchg
or
nop
loopne
xchg
mov
dec
icebp
test
cs
in
xchg
or
inc
and
jl
lahf
or
orb
les
inc
rclb
push
hlt
adc
xor
test
adc
repnz
and
daa
std
push
dec
sti
sti
out
test
repz
cld
fdivrl
xor
lret
daa
jl
rcrb
shl
adc
lods
or
sub
mov
and
mov
lock
jmp
and
mov
pop
aaa
fcmove
or
push
sub
dec
add
rcll
das
jo
pop
clc
cmp
cmp
testb
icebp
js
test
pop
dec
mov
pop
mov
mov
aad
stos
gs
lret
mov
ret
or
or
mov
gs
mov
mov
jmp
aad
mov
jnp
aas
das
test
nop
nop
sub
sbb
pop
loope
mov
cltd
cmpsb
nop
pop
and
xchg
hlt
inc
add
test
pop
fisubl
jge
in
stos
int3
or
push
mov
ficompl
repnz
mov
pop
cwtl
mov
cwtl
mov
ficompl
iret
int3
cld
arpl
gs
out
and
sti
sub
ret
mov
add
test
pop
ds
sarb
dec
or
cwtl
dec
pop
mov
popf
cltd
cmp
add
push
sub
sub
fldcw
and
out
add
scas
das
adc
imull
in
lret
cmpxchg
call
lods
loop
aam
xchg
addr16
and
sub
lods
loope
pop
jle
ds
ror
pop
int
dec
pop
stc
adc
fcoms
fistl
cmp
and
imul
stc
int
test
call
jecxz
push
outsl
or
and
cmp
dec
rolb
aas
or
pop
xchg
xchg
imul
xor
pop
add
imul
fldt
test
pop
sub
das
int
xorl
andl
inc
inc
fdiv
adc
cmpb
mov
mov
sbb
push
movsb
lret
mov
xchg
and
test
mov
sub
in
mov
dec
sub
hlt
jg
stos
inc
jns
popw
ret
adc
out
aam
push
jo
cmc
out
lods
je
dec
push
movsb
fcoml
repz
js
push
shrb
sub
pushf
aam
inc
pop
mov
xlat
out
xchg
lds
pop
mov
sbb
je
cmpsl
popa
jp
mov
push
add
adc
pop
sbb
xchg
adc
and
xchg
rclb
fst
sub
jno
dec
mov
jge
insb
lcall
lods
mov
xchg
stos
jbe
inc
and
cwtl
adc
mov
rclb
sar
cmpsb
fmuls
pop
xor
loopne
daa
fsubs
mov
inc
lds
jle
push
mov
sbb
push
pop
arpl
sbb
or
jmp
call
adcl
mov
out
jb
fwait
sahf
loope
test
mov
movsl
imul
push
lahf
out
mov
or
sub
bound
sbb
xchg
or
dec
test
js
inc
adc
cmp
lock
mov
xchg
jecxz
lock
inc
stos
dec
sahf
sarb
divb
int3
fcoml
in
jns
mov
out
mov
xlat
xchg
mov
lea
or
mov
sub
sub
out
mov
clc
bound
jae
mov
mov
arpl
cmp
and
cwtl
jmp
sahf
leave
inc
cwtl
dec
mov
mov
repnz
andb
push
ja
lahf
pop
ret
sbb
xchg
jno
lea
jne
cli
pop
test
rcl
mov
jae
aam
loopne
fsubs
adc
adcb
rorl
inc
mov
adc
mov
cmp
pop
sub
stos
inc
arpl
and
push
jp
xchg
xor
cmp
push
dec
and
jno
cmp
dec
sub
or
adc
por
or
pop
dec
dec
fsts
xchg
adcb
shll
popl
mov
jbe
fmuls
xlat
pop
add
sbb
dec
xor
iret
fcmovnu
aas
cltd
ss
cmpsl
je
push
dec
mov
sub
and
js
les
push
jmp
sbb
cmp
inc
out
and
sbb
xchg
xor
push
jns
mov
adc
and
add
daa
or
cmp
test
lock
fidivs
sahf
xchg
mov
xchg
push
add
test
adc
mov
fisttps
sbb
fadd
sub
int
sub
mov
cwtl
jp
jle
das
dec
leave
mov
push
add
push
lret
loop
aas
sub
sbb
movsb
hlt
andb
dec
das
pop
push
rcrl
lods
sti
pop
js,pn
push
mov
test
xor
int
in
jo
jo
xchg
js
mov
mov
add
ficoml
pop
sub
lret
sarb
xchg
add
shr
neg
add
test
hlt
push
push
adc
fistps
shll
ret
or
xchg
sqrtps
out
fcmovu
xlat
add
rcll
cmp
xchg
iret
mov
sub
inc
jg
mov
addl
mov
enter
mov
jns
adc
sbb
stos
dec
outsb
and
cli
cmp
add
loopne
add
dec
ret
das
mov
sub
aad
in
in
sbb
popf
jnp
mov
sarb
in
es
sti
jecxz
into
shlb
stos
push
cmp
adc
fwait
popa
loop
fsubrs
xlat
fst
pop
fimull
daa
jns
push
loop
add
inc
mov
sbb
pop
pop
sbbb
push
xor
sub
dec
in
xchg
stc
xor
test
int
pop
mov
test
mov
sub
and
call
push
mov
rol
movsl
cmpsl
xchg
shlb
sbb
enter
stos
pop
pop
inc
adc
data16
cli
or
icebp
pop
popf
cmp
fimuls
mov
adc
jne
jl
or
lea
adc
and
int3
push
dec
sti
fnstenv
pop
les
dec
adc
pop
adc
add
int3
ficoms
shlb
push
call
sahf
mov
jge
enter
aas
jns
int3
xchg
es
cmp
fdivr
out
aam
adc
adc
or
test
pop
jb
and
pop
pandn
insb
jbe
mov
inc
daa
mov
clc
add
jae
out
int
aam
sub
inc
xchg
or
aas
xor
data16
mov
sahf
stc
dec
mov
rcl
adc
popa
xchg
add
xchg
adcl
dec
xor
lods
sub
mov
scas
adc
mov
fnstenv
xor
xchg
mov
dec
mov
and
xchg
es
jge
ret
add
std
fcompl
cmpsl
mov
cmp
push
fsts
push
xchg
insl
dec
or
in
movsb
andl
loop
and
insl
int3
push
call
xchg
cmc
fcoms
inc
fwait
push
lds
jns
ja
xlat
test
loop
add
sub
sbb
mov
inc
lahf
mov
fimull
or
sbb
cld
hlt
nop
mov
push
mulb
testl
cmovge
xchg
icebp
arpl
sbb
test
mov
xor
sub
and
in
jl
cmp
rolb
sub
mov
dec
ja
add
xlat
lcall
cld
jge
movq
lods
and
rcll
sbbb
push
sbb
shrl
push
clc
shl
arpl
xor
inc
das
dec
sub
shrl
lock
inc
push
mov
repnz
dec
rclb
jmp
add
mov
mov
xor
mov
jg
jb
mov
sbb
push
xor
mov
mov
inc
jge
jbe
test
popf
out
xchg
sar
inc
sti
and
dec
lods
sbb
in
sbb
mov
mov
sub
xlat
inc
leave
jle
sbb
cmp
xor
jb
mov
loope
dec
sbb
and
jo
leave
xor
adc
inc
push
sub
mov
scas
rorb
testl
or
popa
jp
adc
dec
adc
sub
mov
je
sub
jge
mov
push
xchg
mov
lcall
xchg
movsb
stc
aas
xchg
pop
push
lods
subb
xchg
and
bound
movsl
negl
lods
xchg
sbbl
mov
sbb
add
int
pop
sbb
sub
scas
mov
pop
mov
cmp
gs
lret
mov
cmovne
int
push
pop
jge
push
cmp
sbb
rclb
nop
imul
mov
jl
mov
mov
cmpb
shlb
lods
push
sbb
dec
jmp
sbb
xor
push
fdivs
cmp
sbb
xchg
jbe
push
nop
cmc
repz
ja
out
and
cmpsb
jae
and
sub
xchg
pop
adc
xchg
push
in
cmpsl
xchg
subl
in
test
xor
push
cmp
dec
in
popa
gs
xor
clc
in
ret
sbb
jne
test
push
loope
or
inc
sub
adc
dec
repz
mov
out
int3
jae
ljmp
jae
pop
loopne
jl
jae
sub
loopne
call
loop
cmpsb
xchg
sbb
ja
popf
lgs
fisubl
scas
popf
or
fs
xchg
pop
dec
fiaddl
xchg
xor
mov
sbb
jnp
andl
and
ret
xor
jne
push
orl
mov
shr
mov
mov
mov
fst
sub
pop
push
or
imul
fisttpll
jl
or
call
add
idivl
dec
sub
xchg
cmc
push
fs
ret
mov
or
clc
ret
cltd
xor
cs
andb
repz
cmpsl
add
ljmp
lds
jmp
aam
inc
inc
sbb
mov
pop
cmp
ficoml
pusha
jp
rcll
inc
movsb
jns
pushf
iret
fcom
jge
insb
lds
sub
mov
cld
mov
mov
dec
mov
push
mov
push
mov
dec
fdivs
cld
lds
xchg
push
into
inc
jecxz
pop
mov
xorl
adcb
cltd
lea
jo
sarb
test
test
stos
jmp
or
add
cltd
test
loopne
xchg
dec
das
add
call
in
xchg
adc
iret
out
add
xchg
test
push
cwtl
mov
mov
cltd
ror
lods
pusha
mov
or
insl
inc
int3
jns
mov
cmp
mov
adc
sahf
xchg
xchg
inc
repz
sahf
cwtl
fildl
fcoms
xchg
sahf
mov
mov
and
hlt
ret
fcmovb
pop
pusha
clc
jnp
inc
pop
and
ljmp
lods
outsb
out
or
jecxz
dec
dec
in
scas
add
mov
ss
pop
push
jo
xor
inc
sub
js
dec
jo
cmp
loope
push
xor
out
pop
sub
dec
dec
int3
jg
lcall
push
or
lcall
shll
sbb
cltd
adc
adc
pop
mov
call
adc
xor
xchg
sbb
mov
aas
scas
jmp
pusha
xchg
and
hlt
inc
shll
push
aam
pop
jne
into
sbb
mov
sub
inc
popf
cwtl
add
cmpb
lret
dec
cld
stos
jl
faddl
shlb
fnsave
std
or
xor
add
xchg
adc
test
jl
push
fsubp
out
sub
test
inc
push
js
es
mov
in
outsb
aam
dec
sub
sbb
or
fsubrs
lock
fcmovnb
in
push
imul
pop
movsl
mov
add
xchg
cld
test
jbe
dec
movsl
jl
cwtl
mov
mov
pop
shll
cli
dec
ljmp
push
push
fisubrl
or
faddl
cmpsb
std
fildll
dec
cmp
adc
lret
out
and
mov
jno
mov
cmp
les
test
mov
sbb
stos
jecxz
test
mov
sub
mov
xchg
fwait
cs
repnz
sbb
test
push
mov
mov
cmp
daa
sub
sbb
ret
test
and
es
pop
mov
in
sti
sbb
mov
or
add
mov
inc
push
inc
hlt
or
std
fsubrl
pop
ss
loopne
adc
out
mov
mov
mov
iret
adc
ret
rcrl
stos
loop
lcall
leave
das
insl
sbb
dec
cmp
gs
popf
scas
pop
lcall
repz
and
in
fcmove
stos
lods
xchg
cmp
in
movsb
icebp
jo
data16
xchg
lods
scas
gs
aas
push
aam
in
mov
cmp
pop
fdivr
pop
aas
mov
aam
or
movsb
mov
shrb
push
xor
adc
push
pusha
xor
std
aaa
dec
sub
aas
stc
cmp
xor
test
divb
lcall
subl
mov
inc
ficompl
shl
add
fidivrl
mov
add
and
push
and
xchg
insb
addl
cmp
int
in
in
imul
add
out
ss
mov
in
shrl
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
jmp
mov
loope
addb
es
jnp
rclb
addl
pop
popf
andb
cmp
mov
int
pminub
ljmp
popf
fistps
inc
popa
jecxz
lods
mov
jecxz
lods
jle
jp
cmp
fistpll
xor
shl
mov
add
test
pusha
jmp
cltd
cmpsl
jb
out
sub
scas
lret
imul
xor
outsb
adc
jp
fldcw
xchg
and
xchg
int
cmp
mov
mov
jle
jg
mov
or
outsb
push
mov
movsl
nop
push
jl
in
sub
sub
mov
and
inc
and
pop
jge
ret
pop
pop
sub
repz
pusha
aas
xor
loop
cmp
push
repnz
adcl
mov
cs
inc
dec
jmp
add
mov
sub
inc
loopne
xor
out
imul
or
or
aad
jmp
sbb
push
inc
push
push
push
inc
je
push
out
xchg
test
sbb
and
push
pop
mov
pop
mov
add
pushf
fdivs
in
ja
pop
fadds
out
mov
leave
mov
fwait
iret
cld
test
test
call
sahf
inc
jp
fnstenv
sarb
in
xchg
jne
mov
sbb
jns
mov
jmp
add
dec
movsb
jnp
mov
dec
adc
test
cmc
cmpsl
sti
pushf
push
and
sbb
mov
shll
jp
adc
ss
pop
icebp
cmpsl
lds
out
pusha
cmc
lret
cmpsl
gs
pop
lret
outsb
into
mov
jle
pop
mov
and
push
lock
outsb
xor
lods
sub
ror
cs
xchg
rcl
lods
mov
nop
adc
lret
xchg
arpl
xchg
addr16
push
sub
pop
inc
outsb
sub
mov
lock
pop
and
insb
fldt
int3
jb
stos
lock
xchg
or
jmp
cs
mov
pop
test
adc
ja
filds
fs
add
sbb
mov
or
inc
inc
rcrl
pop
mov
daa
lock
inc
gs
add
imul
or
test
negb
int3
leave
dec
xchg
imul
and
pushf
fistl
adc
ret
aas
sbb
xorl
iret
lock
jmp
push
hlt
fisubrl
cmp
inc
mov
test
mov
push
inc
imul
movsb
movl
push
xor
jns
sbb
xchg
lret
loopne
lret
sti
mov
or
incb
xchg
sub
push
or
adc
dec
mov
and
jb
push
xchg
adc
dec
or
mov
mov
pop
add
stos
iret
jp
gs
push
mov
inc
leave
inc
enter
scas
mov
rorb
push
les
jl
mov
cmpsl
mov
lods
add
cmpsb
xchg
inc
xor
insl
push
in
jae
mov
inc
in
movsb
pop
mov
jae
int
mov
cld
dec
mov
int
cltd
ficompl
loopne
ja
lds
je
pop
ret
pop
test
arpl
insb
jge
pop
movsl
cmp
push
testb
dec
shll
push
push
inc
lods
shll
imul
xor
inc
push
push
sahf
and
inc
call
xor
aaa
lret
enter
es
jp
xor
aad
sbb
xchg
ss
fcoms
sbb
nop
ljmp
enter
jecxz
xor
xor
mov
or
dec
dec
repz
add
push
icebp
rcr
mov
fstpt
sub
imul
adc
or
ss
mov
movsl
ja
or
repnz
adc
enter
daa
iret
outsb
pop
cmp
sar
iret
iret
scas
fnstcw
push
cmp
cmpsb
negb
std
jae
out
pop
popf
push
cmp
shlb
mov
inc
aad
xchg
mov
movsl
call
hlt
xchg
pop
outsb
out
dec
push
push
push
fcomps
out
subl
insl
ja
stos
inc
aam
out
mov
cmp
dec
sahf
push
jmp
test
lock
adc
arpl
jbe
and
push
arpl
push
mov
cmpsl
jnp
call
iret
cmp
jp
adc
or
fiadds
dec
popf
push
xor
inc
loop,pt
sub
mov
dec
fldt
and
sbb
cld
mov
sbb
lds
add
push
mov
pushf
ja
hlt
mov
sub
mov
lcall
rclb
imul
rolb
lock
out
out
xlat
xor
lods
iret
xchg
push
sbb
adc
arpl
pop
es
mov
mov
popf
ds
mov
xchg
jns
lcall
sbb
gs
dec
cs
pop
rol
cld
divl
sub
js
mov
mov
cmpsb
or
adc
inc
mov
jne
mov
xchg
mov
xchg
adc
adc
push
je
push
rorl
je
fwait
mov
cmc
ds
jle
loop
jae
adc
push
pushf
xor
les
cmpsb
mov
movsb
outsl
jle
aaa
clc
xor
push
mov
mov
mov
clc
lods
mov
in
xlat
stos
and
cmp
test
lods
jb
mov
pop
mov
mov
das
imull
mov
pushl
sbbl
add
or
imul
daa
das
mov
inc
lret
mov
cmp
gs
test
std
je
pushf
and
sarl
movsb
imul
lea
mov
push
and
mov
cmp
inc
icebp
loopne
rorb
loopne
cmp
lea
push
cmp
jle
dec
inc
fimuls
std
adc
out
fwait
stos
popa
dec
push
xchg
mov
lcall
aad
jb
or
mov
mov
adc
mov
cli
outsb
mov
jns
loop
mov
push
adc
pusha
xchg
mov
into
pop
das
rcrb
cmp
mov
mov
stos
push
push
lds
out
adc
mov
repz
sbb
sbb
cltd
loope
jo
inc
sbb
aad
and
lea
adc
and
xor
jecxz
pop
sbb
push
cmp
xor
jns
mov
movsb
jns
movsb
push
repz
add
lahf
adc
sbb
pop
mov
mov
xchg
sbb
insb
ja
jne
add
dec
push
push
pop
ss
mov
subb
sbb
xchg
scas
jne
in
push
lods
add
fs
ds
shrb
cmpsb
and
pop
sbb
es
sbb
ror
push
loopne
in
pop
jle
enter
insb
mov
cmpsb
or
out
lret
mov
cmc
cmpsl
and
sbb
js
jecxz
into
mov
outsb
sbb
sub
push
js
mov
mov
repz
repnz
pop
scas
sbb
int
pop
cmp
adcl
test
jle
addr16
push
mov
cmp
adc
je
cmpsb
push
test
inc
cmp
add
shrl
xlat
and
pusha
filds
sbb
mov
lods
fiaddl
xchg
ret
and
xorb
and
jg
sbb
fimuls
int
cmp
cmp
fs
nop
mov
imul
dec
mov
sub
rolb
mov
or
fdiv
sbb
adc
outsb
push
dec
mov
sub
lret
push
fists
nop
sbb
and
bound
std
mov
mov
mov
pop
and
test
repnz
cmp
mov
scas
dec
pop
xchg
jl
scas
jg
dec
jno
aaa
in
push
sbbb
mov
jmp
cmc
jbe
stos
ret
out
popf
cwtl
insb
mov
lahf
mov
jle
and
dec
imul
test
js
cmpl
pop
stos
lcall
jo
cmp
lcall
and
jmp
notl
inc
cmp
cmp
imul
cwtl
stc
add
mov
add
clc
out
in
xchg
or
movsl
out
or
enter
mov
mov
mov
shll
push
mov
insl
jb
adc
test
lret
in
andl
mov
and
das
sbbb
inc
gs
icebp
mov
push
add
jl
push
insb
fs
fwait
xchg
adc
xor
pop
lret
dec
daa
ss
arpl
pushf
xchg
and
mov
sbb
loopne
adc
push
mov
pop
movsl
rol
inc
stos
loopne
sar
xchg
mov
lds
cmc
push
aam
fildl
cwtl
mov
fdivrl
cmp
sub
jb
or
outsb
jge
fwait
ret
mov
xor
xchg
pop
ljmp
loop
cmp
mov
and
fwait
lea
jbe
cmp
fmul
std
lock
xchg
enter
imul
cmpb
rcrl
sbb
sub
in
aas
inc
insb
dec
cmp
jp
test
or
movsl
cwtl
shll
or
aaa
sbb
dec
cltd
xchg
sti
jb
and
sti
je
dec
pop
imul
inc
mov
add
jmp
push
adc
mov
adc
xor
out
icebp
das
adc
mov
xor
push
fcoml
mov
daa
mov
xchg
push
movsl
sahf
and
loopne
stos
and
shll
xchg
add
mov
xchg
out
dec
lods
filds
cmpsb
orl
xor
inc
sbb
and
or
test
and
dec
adc
adc
lret
rcr
stos
jo
neg
jnp
and
movsl
add
daa
pop
mov
jmp
mov
mov
mov
pop
shll
gs
cmovle
and
sub
cmc
in
or
dec
xadd
mov
clc
mov
or
jb
stos
lods
sbb
add
orb
mov
adc
rcl
lret
call
orb
xchg
sbb
mov
mov
or
sbb
shrb
fwait
mov
imul
nop
ja
and
out
push
or
scas
inc
adc
test
or
fisttps
loope
xchg
jp
sbb
data16
sbb
mov
popf
cmc
lret
xor
fbld
ror
popf
icebp
ret
into
add
fnstsw
pop
addl
into
push
lods
push
push
lods
jle
loop
dec
xchg
jmp
pop
scas
out
movlps
pusha
sub
push
shrb
lcall
xchg
jmp
adc
loopne
mov
sbb
fs
je
add
test
fimuls
cmp
and
push
cltd
in
loope
cmc
dec
fisttpl
xchg
and
sahf
sbb
shl
fs
dec
pop
loope
cmp
jnp
ja
xchg
xor
cli
fiaddl
gs
mov
and
cmpsl
sbb
sbb
adc
mov
xchg
xor
xchg
lods
or
iret
xchg
sti
adc
pop
mov
mov
hlt
dec
int
fwait
cli
fwait
inc
lahf
mov
push
add
dec
pop
ljmp
mov
push
or
fs
mov
stc
or
fwait
pop
test
hlt
pop
adc
mov
jb
pop
sub
icebp
out
xor
xor
or
sbb
aaa
test
in
jge
xchg
mov
push
add
mov
mov
sbb
lcall
cmp
inc
loope
xor
cmpb
add
adc
push
xchg
xchg
add
mov
int3
push
pop
jne
jle
xchg
sub
push
mov
pushf
arpl
mov
mov
cmp
xchg
jmp
js
imul
inc
testl
lret
out
mov
rcll
dec
push
psrlq
sarb
fldl2t
sub
push
mov
lds
jle
adc
inc
inc
loopne
loop
int3
add
out
imul
xchg
mov
push
mov
fcmovb
into
rcll
push
mov
pop
inc
pusha
outsb
sahf
iret
inc
mov
cmpsb
in
bound
js
pop
dec
xchg
cmp
xor
sub
jg
pop
and
add
stos
xchg
lds
jb
xchg
cs
jge
incb
aam
imul
adc
lret
cli
rcl
ljmp
test
sbb
mov
xor
add
xchg
mov
ret
lods
les
mov
mov
std
mov
sahf
cmpsl
or
lret
out
push
jno
imul
aam
lret
mov
xchg
inc
dec
xor
sbb
jge
and
sub
add
pop
dec
je
pop
adc
sub
or
jae
or
or
es
or
push
daa
bound
rolb
fsubrl
scas
arpl
hlt
es
and
mov
xchg
lahf
sbb
pop
cli
cwtl
add
mov
xor
pop
push
sbb
cmp
or
sar
outsb
lret
push
and
add
test
sarl
sub
mov
push
fimuls
outsl
scas
pop
mov
push
sbb
jnp
ret
cmpsb
lods
js
sub
mov
cmpsl
cmpsl
mov
dec
inc
jge
adc
or
jo
xor
push
jecxz
shrl
add
mov
push
pop
lret
mov
lds
in
cwtl
dec
rcl
in
lea
pop
sub
xchg
or
xchg
adc
or
cmp
bound
mov
divb
movsl
jno
dec
mov
dec
ret
repnz
into
xchg
sub
addr16
mov
out
lock
lcall
sahf
out
repz
add
mov
xchg
push
mov
lret
add
xchg
xchg
cmp
mov
ljmp
out
mov
fsubrp
cld
cmpsl
sahf
not
mulb
cmp
inc
mov
mov
sbb
leave
dec
pop
adc
scas
mov
sti
push
jb
push
mov
mov
inc
sbb
jle
jl
ljmp
lods
stc
xlat
pushf
mov
and
shlb
test
sarl
cwtl
mov
or
dec
inc
sbb
sarl
stc
pop
pop
leave
and
lods
call
add
pop
xchg
andl
aaa
pusha
add
ret
test
daa
clc
inc
fld
cmp
and
mov
cmpsl
xor
mov
add
push
addl
ja
and
lahf
pushf
pop
cmp
and
aad
shl
add
cmc
pop
sbb
and
push
xchg
jp
stos
test
cmp
mov
cmp
loopne
orl
out
and
out
in
outsb
inc
dec
fstp
mov
pusha
cld
or
cmp
mov
add
dec
inc
xchg
jo
movsb
push
push
sbb
inc
and
lcall
push
stos
test
pop
insb
stos
jle
sub
sbbb
outsl
cli
or
pop
xor
out
lea
adc
pop
data16
xchg
xor
mov
mull
xchg
xchg
and
sub
sbb
arpl
sarb
mov
test
call
jno
push
ret
repz
test
daa
leave
lret
iret
dec
test
cld
mov
inc
jns
jp
cmpsl
shlb
mov
adc
out
and
push
sbb
and
cmp
xchg
dec
test
xor
xlat
mov
cltd
stos
jnp
pop
shll
cmp
xchg
fcoml
jl
in
cmpsl
mov
inc
mov
ret
lods
lahf
cmp
roll
lods
cmp
int
movsb
push
mov
gs
je
push
imul
sub
and
hlt
pcmpgtw
ja
mov
adc
jo
sti
mov
cmpsb
sbb
cmp
xor
inc
movsb
mov
insb
xchg
jmp
xor
mov
push
shll
push
nop
jb
mov
test
jge
fwait
mov
insl
inc
inc
imul
xchg
pop
sub
mov
push
jp
loope
lods
xchg
lods
xchg
ljmp
inc
mov
ret
and
ds
mov
frstor
mov
dec
jb
push
scas
fiaddl
mov
add
nop
insb
mov
bound
add
cltd
push
test
or
roll
mov
and
push
inc
xchg
sub
cli
adc
ljmp
xor
cmp
in
mov
mov
add
pushf
cmpb
fwait
pop
push
xor
cwtl
outsb
rcrl
or
inc
iret
push
shrl
lret
aas
out
or
add
and
mov
scas
test
inc
mov
call
shlb
loopne
rolb
ds
jno
cltd
movsl
js
or
dec
cmpsl
dec
jge
imul
out
and
xchg
sub
int3
cmp
and
cli
loope
cmpb
data16
ds
or
add
adc
adc
mov
mov
pop
pop
adc
gs
pop
rcrb
clc
push
sub
sub
push
xor
ds
inc
dec
and
in
sbb
add
and
xchg
push
adc
fdiv
lds
mov
in
xchg
lock
cmc
pop
daa
xchg
fmulp
adc
fwait
adc
icebp
sbb
jmp
jg
ljmp
test
or
cli
inc
and
add
push
sbb
or
out
cwtl
pop
ljmp
xchg
test
dec
std
in
pop
push
sbb
out
ss
pop
stos
or
les
iret
jge
xchg
dec
sub
xchg
inc
mov
lcall
or
ret
inc
mov
int3
jb
sub
ljmp
imul
mov
mov
in
insb
fwait
push
in
ficoms
and
push
adcb
fs
cmpsl
mov
shrb
mov
fsubrl
push
mov
push
jno
xchg
xchg
pop
push
lahf
push
pushf
ljmp
mov
push
xchg
ljmp
mov
popf
add
jo
lods
mov
hlt
cmp
fldenv
pusha
sti
inc
outsb
jecxz
sub
fsts
fsub
mov
dec
movsb
push
fiaddl
mov
fwait
inc
sub
xchg
test
cwtl
xor
pop
xchg
mov
daa
data16
enter
push
cltd
lods
movsb
or
xlat
xor
mov
nop
lea
into
cmp
sbbl
out
data16
test
pop
mov
jl
stc
pop
xchg
int3
sarb
push
jno
xchg
je
sub
cmpsl
sub
test
jge
jg
test
jae
dec
shlb
sub
int
push
mov
pop
mov
jb
xor
int3
jo
in
aad
out
push
xlat
cmp
xchg
and
cmpsl
adc
loop,pn
in
jns
or
cmp
mov
cmpsb
pop
adc
or
pop
push
fmuls
mov
rcl
cmp
mov
or
insb
and
jmp
jbe
outsb
mov
mov
mov
fldl
pop
inc
push
mov
leave
movsl
push
gs
dec
lret
ss
xchg
cltd
push
addr16
mov
or
jp
scas
data16
das
ss
rcr
lea
push
jg
dec
mov
xchg
popf
lods
push
sbb
or
or
dec
inc
mov
int3
es
lret
cs
lea
bound
dec
xlat
jmp
fstpt
xchg
in
cmpsl
ret
mov
leave
mov
scas
lea
rolb
inc
cltd
sbb
add
outsl
ljmp
or
lock
mov
cwtl
aaa
and
dec
arpl
dec
dec
push
adc
xchg
dec
lods
out
pusha
pop
fbstp
test
aaa
mov
sbb
cld
or
add
xchg
cmp
std
and
dec
mov
push
pusha
sbb
bts
dec
aas
push
jo
iret
pop
sub
lock
cmp
fldenv
mov
leave
xchg
adc
cmp
pop
cmp
pop
popl
lods
dec
pop
mov
insl
jmp
jge
dec
dec
es
pop
dec
test
mov
fwait
or
outsl
mov
mov
out
test
sub
shl
jns
add
cmpsl
cltd
cmp
lods
rorb
mov
sub
pop
bnd
dec
mov
push
mov
movsb
push
out
cli
xchg
dec
mov
pusha
testl
mov
adc
push
mov
movsb
jns
jle
mov
lret
fnstsw
arpl
or
jg
lcall
pop
push
movsl
mov
cwtl
stos
jo
daa
out
test
push
pusha
jnp
cmp
xchg
push
dec
out
sarb
push
push
dec
jno
inc
cmp
adc
call
xor
xchg
xchg
jmp
push
das
mov
jg
jno
dec
mov
mov
pusha
mov
nop
jp
jnp
fstl
popa
sahf
mov
sahf
daa
insb
mov
daa
mov
pop
test
xchg
or
or
mov
cs
mov
xorl
cld
mov
mov
clc
movsl
adc
nop
aaa
sar
adc
push
jno
jbe
mov
jb
es
cmp
stos
or
pushf
inc
inc
pusha
inc
lret
clc
or
sbb
jmp
jb
popf
mov
xchg
and
mov
cli
outsb
or
cmc
outsb
lods
sahf
mov
inc
adc
add
xor
call
cs
sbb
shl
pop
stos
mov
jge
xchg
pop
hlt
sub
cmp
jmp
xchg
or
push
or
fisubl
in
ret
ss
jecxz
in
mov
xchg
test
push
repnz
push
fidivrs
sub
lcall
stc
int
les
mov
cld
sub
idiv
mov
push
push
pop
fs
out
jnp
push
in
data16
inc
das
and
push
or
jmp
jns
jne
mov
pop
add
jmp
sub
mov
and
sub
inc
push
mov
insl
pop
dec
out
pop
out
out
sahf
imul
aad
xchg
stc
ja
je
cli
cld
iret
cmc
xor
or
jl
ss
push
cs
pop
inc
int3
dec
sbb
pop
mov
loop
cmc
outsb
outsl
mov
xchg
mov
rclb
sbb
add
sub
pop
push
test
adc
dec
xchg
jae
sbb
push
sbb
mov
cltd
jns
lahf
fidivl
mov
lea
fildll
int3
mov
sub
aad
cmp
fimull
jns
inc
mov
pop
pop
iret
repnz
ss
jg
mov
rorl
jno
sahf
mov
ret
in
sbb
ljmp
mov
push
and
cwtl
shr
insb
outsl
xchg
fisttpll
adc
sub
lret
pop
orb
xor
jb
adc
cmpsb
addr16
lods
aas
lcall
frstpm(287
or
add
enter
or
movsl
out
jle
dec
pop
sub
sti
mov
fwait
adc
mov
lcall
jb
cmp
sub
adc
shl
mov
dec
scas
ja
aas
clc
fs
add
pop
push
cwtl
loopne
adc
loop
jmp
out
test
and
pop
in
xchg
js
mov
jnp
fistps
and
cwtl
mov
mov
inc
lods
mov
sub
cmp
shlb
div
std
inc
sarl
and
divb
inc
or
mov
xchg
or
adc
lcall
out
loopne
jg
jge
inc
xchg
push
mov
aas
push
out
cli
lds
insl
ja
and
add
pop
rolb
mov
add
popa
jp
cmpsb
xor
mov
in
xchg
xor
jbe
fistps
xchg
dec
sbb
outsl
aas
xchg
testl
xchg
jno
sahf
ret
movsl
std
cmp
scas
inc
fwait
ljmp
xchg
enter
push
ja
or
imul
fs
mov
sub
in
das
jns
sahf
xor
cmp
push
outsb
leave
add
cwtl
icebp
rorb
negl
loopne
loopne
jmp
insl
movsl
dec
neg
andb
adc
movsb
jg
and
outsl
jae
cld
fnstcw
mov
into
lcall
imul
jo
or
mov
stos
ja
jle
int3
and
jae
js
push
add
mov
mov
mov
ret
sub
fnstsw
mov
inc
and
mov
pop
or
test
mov
pushf
jns
inc
rclb
pop
and
adc
test
xor
aaa
sbb
movsl
mov
jnp
jl
mov
sub
nop
stos
add
xchg
into
fdivp
out
idiv
fcmovnu
fwait
js
xchg
or
jecxz
jae
leave
in
xchg
and
lret
dec
push
sub
les
arpl
jns
inc
movsl
sahf
mov
arpl
jp
pop
stos
sbb
out
mov
mov
scas
mov
int
and
icebp
xlat
dec
arpl
cli
push
cmp
lret
cmp
sub
xchg
ds
sub
fcomps
lds
push
cli
imul
std
jge
stos
loop
sub
aam
and
call
neg
pushl
sti
mov
clc
fs
icebp
int3
jp
jge
lahf
ljmp
sbb
cmc
mov
pop
fisubs
aas
in
xchg
inc
into
sahf
push
push
xorl
es
in
inc
lahf
xor
mov
dec
pop
mov
add
sbb
pop
cmc
pop
std
pop
call
stc
mov
rclb
adc
test
adc
ja
aaa
inc
pop
push
cmp
or
mov
mov
push
lock
mov
add
xlat
xchg
cmp
std
jmp
lahf
adc
mov
idiv
xchg
ljmp
cmc
dec
xor
imul
pop
mov
aad
push
test
xor
inc
cmc
xchg
test
divl
pop
sub
stos
orb
adc
push
imul
and
xchg
and
mov
adc
cmp
sub
rdpmc
int
push
xchg
dec
mov
leave
cmp
ret
iret
or
sbb
sub
jmp
adc
jecxz
or
icebp
int
dec
test
adc
xchg
xor
std
lea
cld
mov
xlat
add
inc
ret
sub
mov
gs
add
push
addr16
subl
xchg
es
fldt
jnp
icebp
xor
xor
js
movb
mov
sub
or
mov
sub
out
and
jmp
dec
jne
push
jbe
pushf
lock
rol
in
mov
stos
scas
inc
sub
mov
mov
test
fcomip
cmc
pop
pop
jbe
xchg
cltd
inc
stos
jno
inc
shlb
test
dec
scas
in
out
mov
jno
shrb
mov
divb
int3
ljmp
pop
push
js
shll
xchg
les
mov
jns
pushf
lock
push
mov
lods
jmp
lcall
add
imul
push
cmp
or
rcl
or
fidivrl
scas
mov
mov
lods
out
sub
ret
mov
push
and
add
shrb
in
imul
mov
icebp
inc
test
xchg
cmpsb
xor
leave
xor
shlb
jnp
lods
ss
push
testb
cmp
in
add
dec
das
fdivs
mov
fdivrs
cmp
cmp
fisubrs
outsb
cmp
mov
je
dec
mov
add
dec
lea
cld
jne
sbb
and
lea
cmc
jb
xchg
jg
mov
pop
faddl
repnz
jo
jne
sbb
cmp
insb
cli
mov
push
lods
lea
ljmp
mov
mov
sbb
fiaddl
pop
out
mull
fidivs
sbb
jns
mov
or
cs
popf
xchg
cmp
mov
cwtl
mov
sbb
xchg
inc
add
lret
pop
cmp
cmp
jge
or
or
enter
inc
clc
les
cwtl
lods
fwait
or
pop
pusha
pop
mov
cmpsl
loop
cld
inc
push
sub
push
fsub
sub
stos
addb
mov
inc
xor
ja
out
aam
lea
hlt
repz
jbe
dec
in
ret
repnz
dec
sbbb
scas
and
sub
push
and
inc
sahf
call
xchg
lds
jnp
jg
xchg
outsb
into
pop
pop
dec
mov
mov
inc
or
cltd
dec
into
and
loop
test
loop
jo
push
cmp
stc
mov
xor
std
aad
mov
lods
adc
cmp
gs
in
inc
out
hlt
in
pushf
jbe
or
out
xchg
push
cli
outsl
test
divl
out
and
rorl
jmp
mov
sub
or
out
cwtl
aad
mov
jae
loope
or
xor
pusha
mov
xchg
shr
cmp
lea
sbb
cs
mov
dec
movsb
shlb
sub
arpl
jns
scas
cmc
test
push
push
mov
adc
dec
dec
je
add
xchg
mov
lock
outsl
out
or
rclb
in
outsb
adc
outsl
push
clc
dec
adc
gs
out
dec
ds
fcomp
shr
rcr
sub
sbb
outsl
ljmp
fsubl
icebp
or
outsb
or
pop
lds
lods
mov
mov
push
mov
xchg
test
mov
dec
inc
loopne
mov
mov
push
or
push
cmp
jns
popf
mov
imul
add
ret
sahf
lahf
loope
jnp
fisubl
sub
inc
gs
inc
inc
stc
mov
mov
shlb
cmp
sbb
sub
sbb
and
fdivr
out
mov
lcall
and
ret
xor
or
out
test
mov
lock
sub
sub
jb
bound
jle
mov
inc
push
adc
repz
dec
mov
dec
jle
inc
pop
cld
inc
jge
or
mul
fcoml
sub
pop
push
or
adc
gs
pusha
in
pusha
mov
pop
add
sti
fcmove
adcb
push
into
fbld
push
push
ljmp
cli
push
dec
in
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
mov
adc
mov
xor
subl
add
mov
movzbl
sub
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
add
mov
adcl
xor
mov
adcl
add
movzwl
sub
mov
movb
sbb
lea
mov
mov
sbbl
mov
xor
xorl
inc
andl
mov
add
movl
addl
push
movl
mov
push
mov
mov
sub
or
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
addl
add
movl
jmp
mov
addl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbbl
add
addl
movzwl
xorl
mov
sbb
mov
movzwl
orl
xor
add
movzwl
mov
mov
movl
inc
mov
mov
movl
cmp
movl
jne
or
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
mov
sub
xor
and
add
adcl
mov
mov
xor
add
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
mov
mov
adcl
mov
xor
xor
add
mov
mov
mov
je
mov
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
adcl
xor
sub
subl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
or
mov
xorl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
imul
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
or
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
xor
mov
sbb
mov
add
mov
movl
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
lea
adcl
mov
mov
neg
mov
sub
add
mov
mov
mov
and
mov
xor
movl
add
jne
jmp
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
sub
xor
xor
sub
mov
subl
mov
mov
movl
xor
andl
xor
sub
orl
sub
xorl
xor
movl
mov
mov
movl
mov
jmp
andl
xor
or
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
adcl
xor
addl
xor
sbbl
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
inc
arpl
and
xchg
sahf
pushf
ja
mov
movsl
xchg
mov
jl
cmp
pusha
movsb
popa
lock
sbb
ret
ljmp
dec
outsb
pop
adc
adc
pop
add
je
and
mov
adc
test
cmpsl
fisubs
cmp
subl
and
stos
fbld
leave
stc
addl
push
xchg
mov
sub
and
cmp
loopne
stc
insb
sahf
in
test
rcr
in
sbb
inc
jnp
pop
outsb
dec
mov
std
in
dec
mov
cld
popf
sbb
sub
pop
lret
add
out
mov
inc
insl
mov
scas
je
push
loope
outsb
sbb
inc
js
fcmove
cmpsb
mov
push
pop
xchg
push
xchg
fsubrs
fnstcw
outsl
les
push
je
and
or
les
clc
push
in
insb
int3
daa
insl
add
xchg
andl
call
ret
xor
adc
in
fwait
lcall
mov
inc
add
rcrb
hlt
or
lret
inc
inc
fstpt
aaa
mov
ljmp
movsb
je
or
inc
mov
jp
aas
fadds
push
push
pop
xlat
lods
fdivs
push
jecxz
jno
dec
cs
testb
cs
out
fldl
daa
adc
rclb
inc
push
insb
push
adc
xor
lds
sbb
or
stos
jae
lret
cmp
push
push
cwtl
ss
out
xchg
fists
xchg
inc
dec
bound
les
repz
adc
adc
fdivs
fucom
gs
and
and
dec
sbb
lods
xor
and
or
cmp
xor
dec
leave
int3
jbe
pushf
mov
pop
mulb
and
les
stc
outsb
xchg
fsubrs
xchg
shrl
ret
ss
mov
adc
insl
fucom
js
push
addl
cwtl
into
fnsave
subb
fwait
cmp
or
stos
mov
pop
xor
dec
mov
es
scas
inc
sbb
push
cmp
stc
loopne
jecxz
aas
in
push
adc
rcll
sbb
mov
fmull
addl
jbe
add
mov
pop
test
pop
push
adc
mov
outsb
ret
adc
jmp
sbb
dec
icebp
enter
push
shrb
push
decb
cmp
nop
mov
in
out
ja
cmpsl
rolb
xchg
int
push
jnp
fsubrs
xchg
inc
cmp
sub
notb
add
push
cld
aaa
mov
xchg
cmpsb
sbb
test
cmp
adc
lock
sub
cmpsl
addr16
roll
xor
aaa
sahf
int3
hlt
pop
in
enter
or
ret
sub
push
mov
inc
jo
push
add
pop
inc
mov
lret
xchg
jmp
pop
mov
arpl
scas
sub
pop
repnz
cmp
mov
loopne
inc
aad
jno
imul
sbb
mov
push
and
jmp
dec
int
pop
cld
xchg
mov
daa
call
and
insb
jmp
popa
loopne
mov
xor
cmp
shll
add
fmull
cmc
cmp
lcall
xor
dec
sub
daa
mov
jmp
test
test
out
xchg
cs
dec
aad
jmp
enter
jecxz
or
jle
sar
cwtl
jo
mov
pusha
adc
cmpsb
push
pop
push
ret
cmp
ret
add
mov
sub
jne
inc
xorl
fsts
or
inc
mov
jmp
pop
xchg
adc
adc
sarl
loop
test
adc
fildll
lret
sub
mov
je
jno
rorb
dec
sub
lcall
sbb
xchg
and
jbe
bound
dec
stos
repz
fwait
cmp
pushf
jmp
bound
xchg
add
stc
mov
mov
mov
lds
push
fldcw
xchg
sub
mov
mov
insl
add
mov
sub
lret
push
adc
fadds
sub
test
or
xor
insb
sub
shl
ja
ds
cmp
mov
and
pop
sub
push
mov
hlt
push
or
sbb
cmpl
mov
or
imul
xlat
pop
outsl
cltd
dec
pop
in
lods
pop
push
push
ja
into
ljmp
mov
ret
fwait
xor
cmp
adc
ret
or
adc
out
mov
movb
sub
adc
xchg
out
mov
add
les
rorl
add
movsb
fcmovne
mull
xchg
push
inc
fs
xchg
and
movsb
xchg
or
enter
xchg
mov
out
je
rorl
mov
fidivrs
pop
push
out
pop
sti
aas
outsl
div
int3
fmull
add
insl
sbb
mov
dec
inc
push
mov
shr
or
cltd
jnp
cltd
push
dec
push
mov
mov
sbb
mov
mov
je
sti
cwtl
outsb
cmpl
add
inc
divl
ljmp
je
pop
fnstcw
addr16
dec
cmp
mov
and
sbb
mov
test
push
inc
xor
pop
fs
jns
jne
pshufw
clc
jne
or
or
pop
jae
aaa
push
mov
mov
stos
bnd
test
inc
cmc
clc
dec
fdivrl
loopne
jge
lret
aas
push
shl
stos
pop
mov
sub
or
movsb
gs
or
das
add
jb
mov
loopne
or
into
inc
iret
pushf
inc
push
sub
adc
mov
data16
mov
pop
shll
stos
arpl
mov
clc
mov
fwait
adc
lahf
cmp
aad
inc
sysenter
adc
xadd
dec
xchg
push
out
arpl
sbb
pusha
add
mov
inc
std
mov
add
mov
in
in
push
je
jmp
out
scas
add
jb
jg
lods
outsb
sbb
jmp
pop
test
jmp
test
ss
jg
sbb
xor
mov
enter
imul
mov
pop
cmp
dec
ficomps
xchg
push
adc
xor
lock
in
fstp
or
mov
dec
xchg
out
mov
mov
sub
inc
loop
sub
sbb
cltd
xchg
sub
iret
and
dec
xchg
mov
jns
in
mov
xor
in
inc
popf
mov
movsb
daa
daa
fs
or
pop
sub
sahf
dec
sub
xor
push
mov
in
pushf
call
and
psubusb
inc
inc
jae
mov
enter
test
jg
push
push
mov
xchg
lock
or
pop
sbb
mov
in
mov
adc
dec
aam
scas
sbb
sarb
push
adc
add
shrb
mov
mov
sub
rorl
test
fsub
mov
mov
call
or
insl
mov
insb
outsl
sub
cltd
pop
sarl
ljmp
dec
push
js
daa
xchg
and
fidivs
xchg
pop
jl
leave
cmp
movsb
cmp
pop
pop
or
bound
cmp
mov
into
fs
xchg
xor
pusha
addl
movsb
push
fimull
mov
push
sbb
jae
xchg
fildl
fnstenv
xchg
sub
mov
mov
cmc
inc
int3
xor
mov
jge
and
in
lea
or
ljmp
mov
lea
movsb
pop
cmpsb
es
pop
leave
imull
or
test
shrb
add
mov
insb
add
mov
pop
mov
lods
repz
popa
pop
sbb
ds
bound
xchg
mov
sbb
push
sbb
icebp
mov
or
call
sbb
fdivs
pop
jmp
pop
bound
int
push
ret
movsl
iret
add
scas
lock
sti
popa
adc
lea
out
mov
dec
repz
or
jl
cmp
fs
out
inc
icebp
sub
sbb
decb
shll
bound
aad
inc
loop
orl
js
lret
je
push
mov
das
fs
cld
cmpsb
mov
or
dec
scas
das
pop
cmp
cwtl
cmc
popf
scas
movsb
pop
jns
fxch
cli
inc
and
mov
cwtl
les
inc
ror
add
insb
or
cmpb
sahf
inc
push
fsubrl
daa
mov
mov
mov
cltd
add
add
xchg
jo
pop
sahf
add
and
int3
mov
loope
push
jno
sti
mov
push
and
cmp
push
add
fwait
sub
insl
out
and
push
mov
xor
lds
pushf
pop
and
xlat
outsl
sub
sbb
sbb
mov
xchg
xchg
push
cmpsl
sub
cmpsb
test
lods
lret
xchg
aam
mov
popa
pushf
fstl
mov
adc
jp
cmp
sti
outsl
stos
stos
aaa
add
adc
enter
xor
push
xlat
fsts
sbb
stos
mov
inc
int3
and
inc
lock
mov
iret
mov
xchg
add
rcl
and
xchg
xor
adc
mov
cmp
sarl
add
or
mov
push
or
movsl
out
loopne
dec
and
ja
ret
arpl
imul
inc
and
loope
jecxz
out
sbb
mov
lret
shrb
dec
and
push
popf
jbe
into
jl
or
imul
shl
dec
das
cmp
jl
sub
movl
sub
je
push
in
sarl
lcall
andl
lods
insl
sbb
cmc
mov
mov
dec
pop
scas
in
js
mov
xor
shlb
mov
add
sahf
push
out
outsb
pop
sbb
mov
sub
in
pusha
int
aad
sti
cmpl
or
jns
pop
push
loop
fstl
or
inc
jo
inc
cmpsl
inc
mov
jecxz
xor
xchg
cld
js
jp
jmp
sbb
sbb
andb
fs
xchg
sbb
rcr
or
or
or
fwait
int
cmp
cli
inc
out
shll
into
fmuls
mov
or
test
int3
mov
scas
lret
lock
fwait
xor
jb
cli
xchg
adc
push
or
cwtl
lcall
mov
dec
stc
aad
repz
push
ret
cmpsb
scas
mov
movsl
inc
inc
out
loope
push
push
jmp
dec
stos
gs
data16
jmp
inc
filds
dec
push
sarb
andb
sti
pop
and
dec
push
rcl
cmp
push
add
mov
and
outsb
cmpsb
stos
jnp
or
add
jb
add
imul
pushf
loopne
jne
cltd
call
jmp
stc
push
fadds
movsl
mov
loope
jne
aad
mov
sub
or
dec
pop
pop
pop
pop
stos
daa
scas
aam
sub
fbld
sub
xor
inc
dec
add
dec
mov
ss
das
loope
repnz
jp
jae
lods
sbb
rorl
enter
push
add
xlat
add
in
sti
xor
data16
mov
adc
addr16
test
rcrl
adc
mov
mov
roll
jl
jmp
int
out
inc
pop
jne
xchg
addl
gs
addr16
stc
add
fwait
add
mov
pop
ljmp
in
loopne
les
stos
pushf
loope
das
fistps
mov
out
xchg
add
jnp
and
lods
out
xor
fisttpll
pop
mov
fsubs
daa
mov
addr16
inc
ss
movb
add
lret
bound
xchg
push
and
cmp
adc
and
inc
in
jb
pushf
gs
sahf
and
adc
pushf
sub
les
test
xor
stc
scas
cmp
mov
cwtl
std
movb
mov
xor
or
and
push
xchg
fistl
push
out
bound
outsb
out
jno
cltd
fldl
shll
mov
repnz
xor
cmp
jge
inc
pop
scas
xchg
lahf
push
aad
pusha
lret
out
aaa
jle
and
and
into
scas
fisttpll
call
adc
scas
iret
mov
leave
roll
out
mov
cmp
ja
xchg
insb
jb
mov
leave
ljmp
fsubp
mov
fnsave
jge
fildll
jp
lods
sub
add
push
les
push
fbld
dec
cmp
dec
mov
sub
cltd
mov
cltd
mov
adc
mov
popa
shll
stos
and
popf
sub
mov
mov
das
mov
xor
mov
dec
mov
fwait
xlat
fldcw
mov
das
and
sbb
mov
fstl
push
negl
lcall
pop
imul
data16
gs
cmp
shl
push
aam
sahf
insl
or
testb
pop
inc
mov
icebp
iret
subb
cli
dec
cmp
xchg
xor
into
xor
test
sub
pop
xchg
adc
sub
int
inc
in
in
xchg
and
icebp
mov
mov
pop
jne
add
icebp
popf
imul
mov
inc
xor
dec
lret
push
push
sbb
xchg
mov
pushf
xor
add
adcl
push
xchg
jle
mov
lahf
and
and
fucomp
ja
fdivl
or
mov
pop
cli
lock
inc
repz
lds
rcll
xchg
dec
xchg
sbb
test
mov
pop
pop
or
sub
loope
xchg
cmpb
mov
adc
cmp
mov
aam
pop
js
dec
cmp
icebp
sti
cs
xorb
adc
test
jl
mov
movsb
cwtl
mov
ljmp
cmc
cmp
scas
stos
cmp
sbb
dec
stc
out
mov
mov
shl
xchg
les
dec
lods
jp
sbb
xor
dec
sahf
inc
mov
xor
pop
cmp
add
lahf
sub
outsl
jns
push
out
sub
xor
or
orb
mov
xchg
lds
mov
clc
xor
insl
jo
adc
pop
push
and
push
jae
movsb
stos
xchg
mov
mov
dec
mov
mov
jne
dec
mov
pop
inc
sub
ss
mov
pop
lds
xor
sahf
sub
pop
sti
repnz
jae
mov
push
lcall
mov
dec
in
xor
test
imull
pop
push
sbb
jp
sub
in
jns
push
shll
mov
or
jb
cmpsb
in
hlt
jl
std
and
jne
dec
mov
sbb
push
fistps
aaa
push
mov
aam
push
xor
mov
leave
inc
add
inc
mov
xchg
lea
adc
mov
insl
mov
pop
dec
cmp
xchg
push
scas
cmp
push
mov
adc
dec
or
jbe
add
ja
out
aad
sti
rcrl
add
cmp
out
in
sbb
test
mov
repz
and
cs
pop
mov
dec
scas
shl
or
ja
mov
pop
outsl
xchg
push
repz
push
fabs
lahf
mov
push
leave
jo
push
int3
test
pop
sub
mov
ja
cld
push
mov
hlt
pop
xchg
jecxz
jne
adc
mov
out
xchg
mov
adc
sahf
xor
cld
daa
dec
lahf
out
sbb
scas
xor
fistpll
sub
pop
stos
and
bound
jecxz
push
pop
push
addr16
push
cmp
sub
pop
mov
outsl
sub
dec
aam
xchg
or
jmp
inc
lret
or
std
mov
daa
in
or
and
mov
adc
sub
cmp
pop
test
lods
or
cli
xor
rcl
cmovb
hlt
jle
data16
leave
inc
xchg
int
insl
or
push
cmc
add
out
aaa
push
mov
pop
out
fs
jns
xor
sbb
mov
adc
imul
pop
iret
or
pop
incl
imul
popa
or
test
arpl
or
mov
shrb
xchg
loop
insl
mov
add
xorb
add
jl
ds
xor
outsl
dec
or
jne
fidivrl
lock
rcrb
mov
jl
jns
insl
scas
les
out
xchg
and
and
push
dec
clc
ficomps
sub
js
push
ret
pop
lret
cmpl
jno
aas
pop
dec
clc
test
sarb
into
add
jno
andb
jmp
fisubl
fists
adc
arpl
dec
xchg
mov
int
pop
jo
jae
scas
shr
pop
dec
sbb
push
dec
popf
pop
inc
pop
cld
fwait
andl
jmp
rclb
lods
imul
dec
ja
xchg
or
mov
loopne
or
jae
pop
lock
lcall
testb
pop
sub
subb
xchg
icebp
jno
cmpl
mov
into
push
push
pushf
or
insl
fbld
mov
sub
insl
mov
mov
test
cmc
xchg
xor
add
mov
xchg
jo
mov
scas
mov
mov
ds
xlat
cmc
lock
fisttpll
cltd
jp
jo
jb
bound
add
sbbb
adc
sbb
xor
jns
mov
repz
jb
insb
sub
les
jbe
add
add
and
jp
outsb
in
push
inc
jp
jg
mov
inc
mov
sti
jae
dec
jbe
lahf
popf
ss
subl
inc
test
add
addr16
push
jmp
add
sub
inc
push
insl
push
lret
cmc
rolb
negb
pop
daa
mov
aas
shlb
push
mov
mov
rorb
je
outsw
push
imul
xor
dec
lea
js
push
insb
mov
pop
xor
js
cwtl
jp
push
fs
pop
dec
sarl
or
int
fstl
or
jo
js
cmp
xchg
addr16
and
inc
inc
mov
hlt
pushf
sahf
pop
xlat
jg
scas
lods
xor
inc
loop
sub
or
fmulp
in
imul
test
shr
iret
ljmp
sub
lret
mov
lret
cmp
fldt
jno
cltd
in
xlat
mov
jbe
nop
mov
jg
popf
mov
stc
push
pop
cmp
in
pop
dec
ds
imul
aam
in
stos
xor
sub
lahf
xchg
inc
arpl
push
adc
add
push
add
push
movsl
and
xorb
adc
jl
bound
cmc
scas
aad
push
stos
push
or
and
mov
arpl
movsl
xchg
das
testl
cli
mov
shrb
aad
jne
add
rcll
pusha
enter
xchg
ja
nop
jne
test
xchg
cmc
scas
and
add
mov
imul
or
add
arpl
test
cmp
or
mov
pop
leave
xor
jnp
cmp
push
aam
std
dec
pop
push
pusha
enter
mov
adcb
mov
mov
fwait
jg
test
sbb
lret
lds
mov
cld
iret
push
dec
push
mov
in
pop
pop
pop
or
out
xchg
sbb
inc
and
xchg
bound
jmp
dec
dec
mov
sub
cmpsl
mov
lods
popa
or
enter
stc
sub
test
das
xchg
inc
xlat
xchg
cmp
mov
fisubrs
inc
mov
mov
xchg
pop
notb
xor
and
push
push
bound
push
push
hlt
jp
mov
cmp
lds
jecxz
sbb
and
xor
lods
test
int3
dec
into
stc
cs
in
jp
stos
pop
js
std
and
scas
pop
pushf
ljmp
or
mov
cmp
adc
pop
or
cltd
lds
sub
push
sub
test
xor
sub
jns
lods
je
lret
and
mov
jl
sub
sbb
mov
js
ljmp
add
xor
or
pop
add
sbb
mov
and
popa
mov
enter
popf
shl
and
pushf
xchg
cli
inc
dec
aad
lds
push
adc
lds
or
fstpt
lods
aad
repnz
dec
add
sub
aad
jbe
dec
fmulp
or
add
jp
mov
inc
jnp
rcrl
xor
jns
push
jnp
xchg
icebp
push
fcmovnu
std
mov
and
adc
das
sub
repz
jbe
cwtl
mov
xchg
stos
sbb
sahf
aas
sahf
lret
icebp
data16
mov
call
es
push
dec
sub
das
mov
pop
aam
iret
icebp
cld
les
adcb
and
adc
das
int3
push
pushf
adc
jnp
les
xor
adc
in
sbb
cmpsl
pop
inc
movsb
repz
sub
js
pop
loopne
and
stos
sbb
pop
sbb
rcrb
mov
arpl
xchg
push
dec
hlt
dec
or
pop
notl
sbb
jge
in
dec
pop
add
xor
out
xor
cmp
nop
jbe
pop
jae
outsb
cli
inc
add
lahf
jbe
loopne
sub
add
enter
push
cmp
je
out
fdivs
and
jno
xchg
xor
test
mov
repz
pop
imul
sar
inc
imul
inc
pop
xchg
and
cli
mov
cmp
dec
imul
jo
push
cmp
push
cs
cmp
in
push
adc
nop
cld
push
xorl
or
sbb
cmp
jnp
mov
cltd
jae
or
inc
lods
xchg
jge
push
pop
in
dec
insb
push
dec
xchg
aad
sub
hlt
push
dec
out
test
orl
dec
or
in
outsl
shll
jns
jns
dec
lods
mov
out
push
mov
aad
fiadds
faddl
in
push
add
sti
icebp
push
into
mov
adc
lods
test
sub
and
add
sbb
andl
dec
cmp
dec
jo
out
xor
cmp
adc
out
push
mov
repz
xchg
xchg
or
mov
mov
add
fnsave
in
pusha
fisttpl
mov
sub
in
jg
movsl
pop
test
cmpsb
adc
inc
jg
mov
mov
xchg
sub
push
daa
jle
or
inc
and
xor
sub
aaa
fildll
fdivrs
mov
cltd
leave
outsl
sub
push
das
sub
adc
ss
cs
es
dec
and
ljmp
pusha
frstor
add
fadds
leave
inc
inc
or
leave
lods
call
add
dec
hlt
fstpt
sti
inc
fwait
and
pop
fwait
mov
ljmp
or
or
ja
xor
or
push
dec
mov
cmp
xchg
sbb
xlat
hlt
cs
pop
shr
pop
jecxz
push
pop
mov
daa
enter
notl
ja
bound
xchg
ss
bound
orb
lahf
sahf
jns
adcb
lds
mov
jns
and
es
jl
into
insb
xchg
pop
cmp
lcall
shlb
daa
in
test
test
add
jmp
rcll
in
nop
mov
sbb
xor
aad
lcall
shr
mov
arpl
mov
jo
pop
xor
adc
fistl
add
and
pop
dec
cmpsl
addr16
jmp
movsl
lods
and
add
hlt
fninit
adc
push
cltd
fwait
test
aas
mov
out
add
inc
scas
adc
nop
movsl
mov
inc
mov
xor
dec
testl
fsts
add
ret
nop
pop
dec
int
aam
jbe
xor
inc
xchg
loop
into
bound
and
jge
test
roll
mov
dec
sti
cld
mov
scas
sbb
nop
leave
mov
mov
xchg
xor
addr16
in
or
add
mov
fs
loope
data16
mov
or
cvtpi2ps
enter
ljmp
test
push
popa
in
pop
mov
repz
rolb
call
lock
iret
sbb
cmp
imul
push
movsb
push
pop
adc
mov
test
mov
jp
lods
cwtl
lds
nop
mov
fsubs
push
cli
mov
adc
fwait
inc
mov
or
cmp
pusha
out
shlb
testl
push
or
lahf
ret
dec
sub
stc
sbb
ss
lods
mov
mov
neg
cli
mov
xchg
addr16
jmp
mov
cmpsb
outsl
mov
sti
xchg
jo
bound
hlt
shlb
ljmp
or
shrl
adc
lcall
dec
push
out
out
popf
mov
je
mov
adc
pushf
mov
lods
inc
sbb
mov
sub
int3
jp
xchg
outsl
inc
pop
pushf
xchg
imul
xchg
mov
push
pop
jae
xchg
sahf
push
push
int3
pop
aam
fisttpl
or
and
mov
mov
xchg
sub
adc
lock
xlat
push
fsub
xchg
xchg
sbb
mov
lods
and
imul
or
inc
push
pop
push
or
mov
aas
mov
xchg
lods
xchg
xchg
add
mov
xchg
adc
xor
mov
cmp
mov
pop
add
popf
fwait
mov
sahf
iret
out
push
xchg
cs
dec
jmp
icebp
mov
popa
rclb
adc
addr16
in
lds
fisttpl
loope
push
repz
iret
and
scas
and
inc
in
and
outsb
enter
push
mov
int3
ficoml
mov
mov
or
mov
stos
insl
out
test
out
je
pop
sahf
jp
add
xchg
mov
xchg
and
push
lret
enter
xor
inc
inc
pushf
es
xor
push
ret
sub
mov
push
adc
xchg
ficompl
shlb
cltd
punpckhdq
push
or
test
inc
push
pushf
in
clc
push
dec
mov
jb
adc
andl
jo
pop
push
data16
cwtl
fmul
adc
adc
pop
cmpsl
pop
int
mov
mov
push
sbb
movhlps
inc
adc
das
jae
pop
jge
pushl
push
push
mov
pushf
add
pop
inc
imulb
push
fcoms
test
lret
jl
ret
jmp
dec
sub
mov
adc
dec
sub
outsl
fnsave
or
ds
pop
inc
inc
imul
mov
mov
incl
movsl
mov
pusha
sahf
push
mov
cmpl
fstl
cmp
push
xchg
push
xchg
or
scas
pop
dec
pmulhw
sbb
adc
jns
rclb
call
pop
adc
mov
addr16
movsb
dec
adc
cwtl
shl
arpl
inc
cli
popf
addr16
imul
cmp
sti
mov
xchg
push
pushf
mov
pop
test
mov
pop
in
insl
fiaddl
cld
jnp
mov
dec
add
sarb
fwait
add
jo
daa
ja
mov
es
out
inc
push
testl
adc
xor
imul
gs
pusha
xchg
cmp
sub
mov
lret
int3
clc
test
call
std
and
push
je
pop
xchg
fs
dec
pop
out
jb
add
jecxz
movsb
mov
xchg
sub
mov
lcall
rorl
mov
arpl
and
add
inc
outsl
push
xchg
imul
bound
imul
xchg
xchg
jle
inc
adc
pop
cwtl
cli
scas
setg
sbb
lea
rolb
pushf
movsb
sub
ret
movsl
es
xchg
data16
sub
pop
aad
and
mov
mov
into
or
out
mov
sbb
push
jecxz,pn
lret
and
mov
sbb
stc
cmp
sti
imul
inc
pop
test
int3
mov
sub
jbe
aam
sarl
outsl
int
fildll
gs
aad
or
xor
out
mov
and
mov
test
lods
addr16
mov
stc
ret
lcall
xchg
dec
jg
lret
cmp
and
imul
lods
or
movsl
icebp
and
loope
mov
push
push
add
call
bound
mov
mov
sbb
push
aaa
gs
xor
mov
inc
inc
push
lret
popf
jle
shlb
mov
inc
mov
jne
inc
out
jbe
or
jp
adc
mov
je
or
pushl
in
dec
ja
lods
imul
or
fstp
jg
inc
pop
or
jb
inc
out
mov
subl
mov
sub
and
lds
mov
add
adc
mulb
lret
in
push
jmp
lea
adc
mov
in
cwtl
pminsw
jp
sbb
les
ret
ja
add
fldcw
xlat
cwtl
xchg
repnz
xchg
out
hlt
xchg
xchg
sub
filds
adc
jmp
dec
mov
mov
xchg
jae
push
ret
push
mov
lcall
and
jbe
subl
rorl
subb
flds
push
and
loop
scas
jae
push
insl
adc
cwtl
in
stos
stos
int
pop
inc
dec
cmp
push
cmpsb
jecxz
test
insl
mov
daa
adc
fmuls
inc
pop
cmp
or
mov
into
outsb
lods
js
cmp
js
lods
sub
cmp
mov
lods
movsl
repz
enter
jne
and
jmp
ret
mov
orl
jae
loope
push
in
jbe
fnstenv
adc
jnp
jbe
pop
into
roll
imul
xor
movsb
rolb
xor
mov
nop
lret
dec
lea
mov
sub
out
pop
mov
xchg
mov
and
jns
in
movb
sub
inc
push
lahf
iret
add
lds
insl
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
jmp
test
pop
sahf
andl
fidivs
cmpsb
sub
cmp
mov
aas
or
push
into
inc
mov
push
push
push
cmp
fwait
mov
insb
sub
je
push
fstpt
push
jmp
xchg
cmpsl
push
adc
int3
mulb
cmpsl
jmp
sub
rorb
fsubs
push
xlat
jp
cmp
jg
adc
mov
push
test
dec
push
ret
dec
pop
or
mov
jg
adc
mov
popa
pop
icebp
xchg
jno
mov
lcall
pop
mov
aad
out
rol
sub
out
repz
lea
push
add
lds
mov
in
das
out
mov
pop
int
dec
ljmp
movsb
bound
and
inc
and
cli
repnz
mov
mov
xchg
jmp
and
or
xor
push
nop
jl
add
insb
and
xchg
jbe
sbb
jl
ja
mov
jnp
sahf
inc
and
gs
push
dec
into
mov
dec
test
mov
cmc
and
insl
mov
cmp
cmp
cmpsl
dec
loop
adc
mov
xorb
rol
jl
dec
pop
incb
and
mov
sbb
dec
sub
fisubrs
ljmp
fisttpll
cmpsl
adc
dec
aaa
mov
mulb
xchg
movsb
xchg
fnstcw
and
inc
int3
cmp
iret
fadd
js
xchg
rol
mov
dec
cld
or
pop
add
dec
mov
das
lret
xor
orl
adc
xchg
cmp
outsb
hlt
aad
or
jne
int3
icebp
xchg
cmpsl
pop
pop
dec
out
dec
inc
mov
mov
orb
adc
push
movsl
xlat
sub
xchg
dec
xor
iret
sbb
and
pop
jge
cmpsl
addr16
movsb
fldenv
push
xchg
lea
repz
fidivrl
inc
call
push
mov
jne
in
jmp
xchg
pop
mov
adc
dec
jmp
push
adc
push
and
xor
adc
aam
mul
das
mov
ljmp
dec
sbb
xchg
inc
test
es
xor
out
or
push
push
je
cmp
fwait
test
mov
mov
inc
mov
mov
iret
ffreep
out
int
inc
pop
add
fsubrp
in
xchg
ja
outsb
popa
sub
lret
ret
mov
xchg
popf
jg
sbb
cmp
das
sub
pop
mov
clc
fmuls
rorl
out
inc
jne
arpl
jle
cld
repz
xchg
lock
movswl
xor
cmpb
test
int
inc
clc
out
mov
xchg
mov
test
jl
into
and
hlt
insl
xchg
push
mov
jp
inc
int
jno
mov
lret
push
pop
loop
aad
sbb
jg
jo
xor
hlt
xor
lock
inc
pop
rcr
push
or
jae
insl
data16
add
ret
xor
mov
fimuls
push
loopne
rol
xor
mov
push
rolb
into
xchg
adc
mov
clc
mov
bts
nop
lods
outsl
and
loopew,pn
cmp
push
loopne
add
aad
loopne
sahf
and
sub
lods
scas
and
pop
xor
push
sub
daa
or
cmpsl
aad
mov
cmp
les
aas
fstp
test
xchg
jno
lods
add
cld
xor
mov
cwtl
dec
shrl
rcll
adc
jge
or
mov
pop
imul
neg
mov
cmp
push
pop
ror
cltd
enter
pop
lds
enter
xor
jle
or
es
ja
aaa
ja
orl
sbb
pop
and
scas
loope
les
push
sub
lret
push
cmpsb
fisttpl
ljmp
add
xor
sub
loop
es
pop
arpl
pop
or
repz
cmp
int
adc
mov
xor
cli
push
mov
cmpl
or
and
adc
cwtl
bound
adc
addr16
cmp
sub
stc
jecxz
xor
push
adcl
lret
popf
nop
mov
xchg
arpl
fdivrs
and
fidivl
out
cmp
xor
jo
fildl
sbb
xchg
or
mov
adc
push
sbb
lcall
cmpsl
jno
stos
fildl
stc
sbb
testb
xor
sub
add
xchg
mov
aam
sub
pop
flds
addr16
mov
mov
js
cltd
mov
dec
mov
adc
dec
mov
movsb
rcll
js
daa
add
bound
pop
mulb
mov
repz
xor
loop
jbe
in
arpl
sbb
dec
pushf
andb
lcall
stos
lahf
mov
lds
repz
je
notl
rcrl
das
inc
pop
mov
mov
popf
jne
sbb
cli
push
hlt
js
pop
cltd
out
add
test
pop
out
xchg
fs
and
push
stc
mov
jo
mov
ret
push
arpl
push
fists
mov
jle
sub
xor
outsb
sub
arpl
mov
lock
insl
out
popf
pop
mov
iret
out
mov
dec
mov
cmpsb
iret
sbb
movsb
imul
inc
or
mov
pop
pop
rclb
mov
bound
add
lea
push
pusha
jl
ja
jl
mov
fisttps
stc
sbb
pop
sarb
xchg
jmp
loop
pusha
mov
pop
jbe
and
insl
cmpsl
dec
ret
and
xchg
push
daa
mov
xor
push
pusha
ss
cmp
add
pop
movb
mov
aas
adc
mov
cmpsl
xchg
or
dec
ret
mov
ljmp
xchg
inc
or
cmp
push
mov
ljmp
cmc
jns
adc
mov
rcr
stos
dec
ja
leave
mov
ss
or
pushf
jbe
lret
mov
jg
or
aas
xchg
std
push
pop
xor
jp
and
mov
notb
clc
insl
jb
incl
stc
popa
cmp
lahf
mov
jnp
mov
mov
in
xor
push
bound
adc
dec
test
loopne
fldl
cmp
sub
and
jg
mov
ficoms
mov
out
sbb
sbbl
xor
notb
adc
mov
xorb
dec
adc
gs
jmp
mov
ss
push
pop
sbb
xchg
or
inc
pop
cltd
mov
fcomip
push
test
adc
rorl
push
add
mov
orl
mov
mov
pop
mov
lods
mov
adc
cs
jge
add
js
fldl
sbb
mov
cmp
ret
push
pop
mov
psrad
mov
xchg
adc
lret
insl
push
stos
movl
mov
insb
movsb
mov
inc
call
inc
xor
ss
mov
sbb
into
inc
sbb
mov
es
push
mov
or
dec
pop
pop
cmp
das
aaa
mov
pop
pop
imul
in
dec
pop
fistpl
xchg
push
rorl
or
aas
repnz
mov
cwtl
xchg
test
inc
push
jg
and
or
xor
nop
inc
or
jp
sbb
mov
inc
and
mov
cmp
and
xor
sub
and
mov
adc
jbe
jl
cmp
sbb
xchg
ljmp
into
ja
movsb
dec
aaa
push
pop
pop
popa
cmp
imul
iret
arpl
mov
stos
mov
fmul
xchg
jns
insb
adc
inc
stos
jg
sub
add
and
cmp
and
mull
sbb
js
sbb
mov
sub
and
jl
clc
pop
loop
or
sti
cmp
inc
cmp
inc
popa
aam
dec
mov
jne
and
les
xor
xor
pusha
cmp
push
mov
test
lcall
iret
int3
adc
and
adc
push
aam
or
xchg
loopne
cmp
arpl
ret
push
inc
out
lods
cmp
lds
shlb
ret
pop
mov
movsb
mov
inc
in
scas
sbb
movw
inc
mov
xor
jo
mov
loop
in
sbb
fstpt
lret
mov
out
cmp
cmpsb
mov
ret
pusha
in
addr16
cmp
sub
jb
cmp
inc
pushf
rorb
lahf
mov
in
inc
loopne
repnz
push
je
notrack
or
sbb
mov
mov
lds
rcl
aaa
jge
mov
scas
cmpsb
dec
jecxz
xchg
lret
mov
je
loope
adc
out
fiaddl
mov
out
decb
stos
call
sub
jecxz
movsl
jbe
push
pop
in
mov
hlt
push
insb
fmul
jbe
xor
popa
out
and
push
mov
sti
cltd
adc
mov
xchg
repnz
in
mov
xchg
push
mov
push
push
sbb
xor
sub
clc
sub
test
inc
aas
cli
cmp
lods
and
push
iret
outsb
notl
and
daa
mov
popf
popa
pop
inc
and
daa
pop
jp
cli
lock
adc
xchg
xchg
addr16
jmp
and
das
and
enter
add
jp
fcomip
or
flds
xchg
mov
mov
mov
ss
mov
jbe
pop
arpl
dec
into
sbbb
rcl
imul
ret
int3
int
add
cs
push
sbb
inc
pop
add
inc
iret
movsb
popa
into
shr
imul
insl
mov
jg
add
mov
rorb
dec
pop
cmpl
mov
push
jp
pop
push
repz
jmp
mov
mov
mov
inc
orl
jne
pop
push
out
ds
sub
cmpsb
add
idiv
iret
mov
fildll
sarl
aad
fs
loopne
cmp
aas
sbb
and
jbe
cld
jb
push
jle
gs
call
test
cmp
xchg
out
or
cmpsl
jbe
inc
test
pusha
sbb
cltd
adc
mov
sbb
jae
xor
pop
negb
scas
adc
or
out
push
mov
xchg
cltd
sub
scas
push
sbb
sbb
dec
int
mov
dec
cmp
dec
add
ljmp
inc
pop
aas
faddl
lret
mov
nop
cmp
or
jecxz
and
ror
imul
cmpps
inc
sti
ljmp
pop
pop
out
jbe
dec
jle
adc
imul
mov
mov
mov
ss
xchg
cmpsb
sub
mov
xchg
cmpsl
cli
gs
out
xchg
jnp
popf
lds
cld
inc
and
aam
pop
mov
test
jecxz
lret
out
aad
or
mov
jnp
dec
push
shl
lods
push
inc
cmp
call
fldcw
je
fistpll
movsb
jno
ret
fsubrs
pop
pop
or
or
pop
stos
dec
lea
pop
pop
out
pop
mov
jp
or
ljmp
icebp
nop
add
sub
shrb
mov
inc
iret
in
std
leave
ficompl
ds
jbe
rorl
scas
mov
jle
xor
push
jno
mov
loope
jmp
xor
sbb
xchg
lcall
aas
adc
and
mov
dec
scas
sti
cmp
mov
sbb
mov
repz
mov
out
in
and
fcomps
test
push
lds
mov
mov
bound
in
test
call
call
out
mov
push
cltd
sti
data16
mov
js
pop
fmuls
push
decl
js
adc
xchg
test
mov
fndisi(8087
dec
dec
pop
xchg
or
or
push
and
les
sbb
dec
mov
add
dec
jno
out
or
inc
aas
ret
mov
xchg
testl
ss
cmp
popl
pop
mov
cmp
sub
pushf
dec
arpl
push
test
inc
sbb
mov
push
push
adc
lds
es
xor
push
cmp
out
call
lea
xor
xlat
or
cmp
mov
ror
les
popa
loop
and
xor
mov
lods
xchg
sbb
cmpsl
and
mov
push
dec
roll
adc
sub
and
inc
or
push
shr
and
mov
jne
imul
and
dec
rorl
pop
scas
push
add
push
sbbb
jle
inc
mov
xor
lcall
test
lahf
xor
jl
movsb
shrl
fcmovu
in
or
mov
rcr
xchg
ficoms
xchg
icebp
sbb
loope
and
push
sub
lods
imulb
jmp
call
and
fbld
mov
je
inc
cmc
add
scas
in
jge
mov
cwtl
cmp
fnstcw
int3
fs
xor
fwait
sub
sub
xchg
arpl
loope
mov
push
pushf
lret
add
iret
lret
and
jp
scas
mov
maxps
jns
jg
and
jmp
sbb
pop
sbb
mov
dec
jns
sbb
movsl
dec
xchg
mov
icebp
sbb
fldcw
cmp
mov
xchg
fwait
xchg
cwtl
mov
mov
test
test
xor
xchg
sub
enter
outsb
xor
jp
adc
add
addr16
sbbb
xor
bound
inc
mov
es
out
vpextrw
lds
addr16
add
nop
mov
daa
sti
out
mov
sbb
clc
hlt
and
push
stos
cmc
inc
pushf
mov
arpl
mov
pop
jl
ja
enter
or
aaa
stc
aaa
sbb
push
sbb
dec
jb
adc
mov
mov
lret
add
and
fwait
xor
out
lcall
iret
mov
dec
flds
pop
lahf
dec
sbb
popa
mov
or
mov
jmp
add
push
sub
and
or
jnp
movsl
dec
or
arpl
dec
fists
test
cmpsl
dec
pop
adc
dec
pop
dec
pop
cmpsl
enter
jle
repnz
xchg
xchg
xchg
xor
xchg
ljmp
and
ret
xor
icebp
or
sbb
sahf
addb
and
pop
pop
push
rcrb
cmpsb
shrl
lcall
mov
adc
popa
push
fwait
scas
mov
mov
out
lahf
jl
and
and
xor
sbb
sbb
cmp
xchg
pop
clc
xlat
into
mov
jb
mov
fsubl
test
lcall
push
xchg
dec
and
jmp
outsb
aas
arpl
ficoml
and
int3
pop
jmp
sbb
cmp
mov
jge
inc
out
pushf
mov
cmp
cs
jae
adc
push
mov
jecxz
lret
repnz
sub
loopne
mov
pop
je
out
xchg
dec
loopne
adc
xchg
push
add
jb
xor
jo
repnz
int3
jnp
imul
mov
mov
call
xchg
stos
cmpsb
mov
inc
das
add
xor
adc
jp
cmp
pop
fsub
mov
dec
inc
inc
push
pop
lret
xchg
fsubrl
inc
xor
cmc
xchg
pop
or
inc
lret
xchg
in
xor
mov
cmp
push
loope
mov
mov
andb
flds
in
jnp
cli
fdivrp
push
sbb
fildl
mov
cli
aam
jmp
sbb
rcrb
das
cmp
test
add
hlt
cmpb
sti
jecxz
sub
test
mov
sbb
lods
push
adc
xchg
aaa
xor
lods
mov
dec
dec
xchg
icebp
les
nop
int3
jo
test
inc
sbb
fsub
dec
or
lcall
or
mov
and
ss
lods
dec
out
in
cmc
dec
or
fistps
pop
jbe
sbb
adc
inc
ljmp
dec
stc
jmp
xor
mov
bound
cs
repnz
pop
rolb
iret
push
xchg
fbstp
scas
sub
rolb
nop
lret
adc
cmp
mov
jnp
test
repnz
inc
mov
aam
in
in
inc
adc
inc
repz
mov
shr
into
imul
jg
fsts
sarb
movsb
fmuls
or
outsb
xor
lret
cld
sub
jb
pop
lods
or
arpl
cld
inc
sub
push
insl
std
mov
inc
iret
aas
or
jo
addr16
stos
dec
dec
das
jae
popa
js
mov
dec
mov
fadds
pop
add
jge
dec
mov
xchg
repnz
jmp
dec
sbb
lock
sbb
jae
add
inc
xchg
and
movsl
sbb
ja
push
push
rcrb
pushl
jecxz
jo
inc
sbb
mov
fdivr
mov
push
adc
push
pop
mov
out
lds
or
lret
push
push
mov
sub
mov
add
inc
dec
and
orl
in
jmp
push
je
mov
aad
mov
mov
push
shlb
and
mov
jg
fdivrs
cmpsb
xchg
mov
jo
hlt
and
out
int
push
and
sub
pop
enter
pop
arpl
xchg
clc
lret
dec
and
clc
dec
inc
lret
lods
cmp
push
arpl
pop
bound
xor
adc
adc
clc
xor
inc
xchg
dec
jl
xlat
mov
test
bound
mov
cmp
jo
stos
ficompl
cmpsb
cltd
push
add
ucomiss
ret
jge
or
sbb
cmpsl
inc
dec
ficomps
pop
push
cmc
data16
jp
aam
movsb
mov
pop
mov
rcrl
mov
jmp
jp
jo
movsb
or
lret
push
cld
clc
pop
add
inc
fs
imul
movsb
out
pushf
scas
dec
sub
jg
sub
mov
or
mov
shrb
nop
adc
push
jle
add
add
dec
cmp
inc
push
push
nop
in
jb
pop
call
outsb
pop
daa
jb
or
xchg
sbb
andl
negb
aad
dec
ljmp
pop
out
dec
in
cmp
add
xchg
sub
fbstp
out
add
icebp
xor
sub
jp
push
sbb
outsb
inc
push
jmp
xchg
mov
push
fldt
xchg
jae
inc
add
out
sub
xchg
mov
je
sarl
mov
stc
loop
ficomps
subl
or
and
jnp
int3
adc
xchg
shl
mov
jae
stos
outsl
das
into
popa
rcrl
xchg
lret
cld
aam
pop
lods
or
pushf
adc
out
cmp
push
out
loopne
jle
inc
fmuls
frstor
jecxz
in
test
loope
mov
mov
mov
popl
ss
mov
roll
int
xchg
jmp
push
mov
out
ds
es
leave
adc
lods
inc
popf
scas
test
sub
hlt
add
enter
repnz
cmp
jae
mov
in
xor
enter
in
sub
in
mov
ljmp
pop
sub
pop
pop
dec
outsl
jo
loop
inc
inc
flds
mov
or
jns
mov
out
loop
lock
int3
xchg
mov
shll
mov
rcrl
lret
or
pop
jle
push
or
loope
sbb
pop
aad
shl
xchg
xchg
dec
xchg
shl
or
pop
push
adc
dec
sub
lahf
popf
sbb
stos
ror
mov
in
cli
test
lods
aam
push
sub
push
push
nop
adc
pop
pop
jae
sub
mov
mov
cmp
cmp
pop
jmp
cwtl
add
sti
add
mov
xchg
xchg
out
andl
cli
mov
push
ds
pop
mov
fadd
enter
adc
adc
je
jmp
push
loopne
xchg
or
repz
push
mov
jg
add
lods
cwtl
aas
jae
mov
and
out
pop
cmp
sbb
bound
in
pushf
lea
push
pushf
mov
repnz
movsb
repz
bound
and
cmc
ds
or
pop
mov
nop
adc
push
ja
xorl
out
pmullw
jg,pn
je
add
rcr
pop
jns
inc
insb
cli
adc
movsb
imul
popa
xchg
dec
lret
jo
push
adc
jo
sarl
cltd
call
imul
inc
mov
and
repz
imul
inc
push
and
pop
mov
xchg
hlt
shlb
addr16
daa
jp
jo
push
xor
shrb
cs
add
stos
fxch
xchg
lds
insl
xchg
jmp
je
sbb
popf
mov
mov
fsub
jno
xor
stos
inc
cli
xor
mov
js
or
xchg
push
mov
pusha
xor
xlat
in
cmp
filds
dec
in
je
ret
xchg
scas
mov
dec
jg
and
mov
test
cmp
and
idivl
push
pop
mov
mov
sbb
xor
int
fsubrs
inc
jnp
scas
adc
pop
clc
lcall
jmp
or
xchg
aaa
jnp
jl
in
ss
push
jmp
jbe
inc
gs
ret
cvtps2pi
clc
cltd
inc
adcl
dec
js
enter
iret
inc
test
xchg
pop
xchg
xchg
cli
sbb
push
and
sbb
popf
test
xchg
rcr
aas
leave
ss
mov
cwtl
bound
into
gs
lcall
hlt
testl
adc
out
xchg
inc
in
jns
fisubrl
pop
imul
cmpsl
push
ds
jno
test
fisttps
ljmp
push
stos
inc
inc
add
scas
sar
mov
mov
mov
sbb
fucomi
jle
push
mov
xor
sub
call
enter
pop
and
or
and
outsb
xchg
fnsave
adc
sbb
das
mov
je
addb
ljmp
cs
icebp
fdivs
fstps
dec
fstl
pusha
pop
and
out
fimuls
mov
xlat
cs
mov
js
jg
aas
cmp
add
mov
push
ds
pop
push
pusha
test
sbb
jle
cmp
clc
push
xchg
std
je
ret
inc
js
or
pop
push
movsl
test
push
in
inc
bound
hlt
testl
pop
cmp
jge
lret
ret
mov
xchg
es
shlb
je
dec
cmp
jle
pop
xchg
daa
arpl
fisubl
ja
inc
push
add
insl
xlat
test
clc
or
lds
jg
aas
pop
push
mov
cmpsb
enter
or
ds
in
jns
roll
dec
test
mov
clc
and
pushf
bound
test
shll
mov
bound
js
or
arpl
leave
jae
push
popf
call
push
cwtl
inc
lods
xor
std
pop
fldt
ror
imul
fwait
xchg
xchg
int
lods
aam
xchg
xchg
jns
push
je
dec
in
jmp
out
call
rolb
fistps
sbb
scas
xor
ja
and
test
adc
arpl
and
aaa
mov
repz
mov
test
je
lea
sub
sar
lods
mov
inc
lock
sbbl
mov
test
mov
nop
push
add
or
dec
cwtl
xchg
sbb
sbb
mov
mov
lret
hlt
xor
inc
fcomi
jae
rol
inc
add
and
push
mov
mov
out
cmp
add
popf
hlt
mov
cmp
loop
in
sub
movsl
movsb
xor
data16
jp
inc
sub
stos
xchg
cmc
rol
hlt
outsb
add
ret
mov
leavew
and
sub
sub
pop
sub
push
mov
arpl
out
jne
cmp
push
xlat
cmpl
add
pop
movsl
xor
xor
and
jmp
mov
cmp
cmpb
das
fiaddl
iret
sub
or
in
sub
add
popl
and
adc
add
fs
in
mov
out
shl
ficoml
and
ds
popl
das
mov
mov
mov
xor
loop
mov
sub
add
xor
movsl
fiaddl
pop
or
insl
stc
mov
gs
std
and
push
movsl
mov
fists
ret
les
pusha
aaa
je
mov
shrb
jnp
addl
mov
jp
notb
add
xor
adc
arpl
sbb
lock
daa
aaa
mov
push
arpl
or
adc
shl
iret
push
cmpsb
dec
out
addl
fstpt
iret
gs
and
movsb
adc
sub
pcmpeqd
or
pop
mov
sub
xor
jno
dec
stos
ds
test
fdivs
fmull
jmp
sbb
mov
inc
dec
xchg
sub
inc
mov
test
sub
adc
dec
jge
jns
add
or
or
jmp
sub
mov
fildll
mov
iret
std
mov
add
enter
call
hlt
pop
hlt
xchg
push
jnp
stos
sti
decl
mov
stc
push
ljmp
pop
mov
outsl
mov
aam
js
enter
push
xlat
cmp
dec
ret
xorb
in
mov
fwait
test
out
mov
fsub
sbb
cmp
xchg
stos
test
cmp
xor
jle
cwtl
jae
push
les
push
fiaddl
inc
fstpt
push
mov
in
sub
xor
mov
jnp
cmpsl
mov
dec
mov
xor
sbb
adc
je
xor
sbb
movsb
inc
and
les
dec
loopne
aam
dec
test
cld
arpl
mov
sti
cltd
mov
stos
loop
jb
ljmp
mov
cmp
push
cmp
int
imul
lods
imul
movsl
lea
jle
push
fstpt
cs
pushf
das
out
inc
and
jo
xchg
repz
xchg
or
add
sbb
in
lcall
jmp
mov
sbb
test
das
test
insb
dec
or
hlt
in
inc
mov
stos
stos
fisubl
lock
sub
adc
pop
cld
push
mov
scas
outsl
pop
data16
xchg
mov
outsb
xchg
icebp
fildl
das
mov
and
js
outsb
loopne
aas
jl
mov
sub
lods
js
lcall
into
pop
xchg
and
xchg
pushf
cmpsb
push
xchg
movsb
cs
jg
lret
add
jmp
push
movsb
sbb
adc
lret
adc
inc
movsb
lds
adc
fdivp
gs
add
and
sahf
mov
inc
arpl
into
movsl
sub
sub
out
inc
and
and
roll
jp
in
push
leave
shll
dec
cmpsl
sbb
ds
das
fsts
out
and
pop
cmpxchg
mov
cmp
fwait
out
xor
mov
stos
in
and
or
xorb
jp
push
push
divl
and
sub
ljmp
inc
imul
inc
mov
movsb
push
shrb
inc
cmp
xchg
rcll
cmc
xor
jb
in
xor
movsl
xor
lret
repz
dec
repnz
mov
and
sub
pop
stos
mov
xor
lea
js
punpckhdq
push
mov
xor
scas
adc
pop
add
pop
dec
hlt
stos
jne
addr16
adc
adc
xchg
test
dec
les
dec
and
mov
push
lcall
jg
dec
popf
push
inc
cmp
lods
mov
pushf
pop
sahf
stos
jp
outsl
cmp
pop
test
std
lcall
pop
cmpsl
stc
pop
dec
inc
rorb
mov
push
test
dec
pop
xor
lret
imulb
add
and
test
stos
dec
ret
in
mov
pand
stc
dec
mov
out
dec
sbb
repnz
scas
es
sahf
mov
sbb
cs
mov
pop
adc
imul
xchg
leave
stos
outsb
nop
shl
popf
inc
xchg
out
mov
xor
add
xchg
aad
sti
and
dec
lret
mov
outsb
mov
push
ret
jp
dec
clc
call
out
xor
out
and
std
orps
fidivrl
ret
push
es
out
jmp
test
cmp
mov
inc
xchg
add
into
and
fstps
mov
test
adc
lods
cmp
pop
mov
pop
push
ljmp
hlt
inc
dec
sub
shrb
insl
dec
int3
ds
adc
movsb
cltd
lret
ja
sub
cmp
in
pop
daa
mov
mov
mov
mov
cmp
rcr
ret
addr16
dec
jle
mov
xor
or
int3
pop
cmp
push
jns
xchg
sub
adc
or
pop
out
cmpsb
inc
ffreep
movl
mov
into
jne
cmp
mov
shll
sub
ljmp
xor
enter
and
inc
mov
fidivs
jle
xchg
clc
js
jecxz
sahf
out
pop
add
push
scas
cmc
js
bswap
pop
mov
aad
dec
xor
ljmp
mov
xchg
mov
fcoms
push
cmpl
sbb
hlt
xor
push
mov
pop
push
pop
subb
push
sub
pushf
into
arpl
addr16
scas
cld
sbb
ja
push
xlat
mov
divb
push
jne
mov
push
in
dec
shrb
xchg
xchg
pop
cld
mov
mov
leave
sub
std
sbb
pop
mov
lcall
and
insl
aas
push
leave
adc
mov
out
or
jae
push
aas
push
and
call
iret
jle
out
popa
inc
push
imul
rcrb
es
adc
inc
xchg
bound
dec
pop
bswap
xor
lods
inc
jge
or
sbb
lods
xorl
mov
gs
int3
sub
iret
hlt
sub
or
push
mull
cld
push
scas
fdivrs
push
sub
and
enter
pop
pop
mov
and
clc
lock
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
adc
jl
mov
bound
icebp
insl
jle
sbb
addl
outsb
in
sub
hlt
cltd
cmp
adc
dec
jns
xor
movsl
add
cli
fists
xor
in
aam
or
xor
xchg
das
roll
pop
ret
std
leave
mov
call
out
out
xlat
insl
mov
mov
aas
push
adc
icebp
inc
pop
daa
sarb
fadds
outsb
outsb
orl
add
scas
pmulhw
sub
cmp
vpslld
lcall
mov
loop
or
add
testl
and
daa
pop
or
add
mov
xchg
cld
inc
jge
cwtl
xor
add
inc
or
push
cmp
jle
and
imul
mov
mov
mov
jl
addb
fwait
mov
div
dec
mov
fwait
pop
mov
test
nop
pop
mov
out
addl
call
and
mov
das
xchg
adc
xor
adc
stos
inc
iret
jmp
or
fwait
add
jge
scas
lret
lea
cmp
cmpsl
pusha
jbe
mov
dec
pop
cltd
mov
lds
negb
in
in
subl
sti
mov
scas
fldcw
fldl
loope
jg
add
push
ss
fcomip
pop
xchg
sub
popf
lock
mov
sbb
xor
and
add
leave
fs
in
test
sahf
nop
int3
sbb
xor
jb
xor
flds
pop
cmpsb
or
cmpsb
movsl
ss
jns
fcom
pop
into
lea
cmp
mov
lret
subb
inc
inc
into
fcoms
subb
jg
outsb
lret
pop
cmc
sub
mov
inc
fmull
mov
sbb
andl
xchg
data16
push
les
xchg
cmc
push
movmskps
out
iret
lcall
lcall
sub
mov
jns
scas
fstpt
ret
out
xchg
pop
repz
xchg
sbb
repz
fldt
mov
negl
clc
std
sbb
adc
push
sbb
stc
lock
cmp
sub
pop
or
cwtl
test
sub
aaa
xchg
mov
mov
aam
loopne
jle
rcrl
xor
add
fs
xor
jecxz
and
clc
std
fyl2x
mov
loope
adc
shlb
aaa
sub
or
clc
jb
nop
mov
bound
je
cwtl
jns
adc
cmpb
push
aam
divb
cmp
daa
inc
call
xchg
cltd
aad
les
xor
mov
sbb
out
cmp
enter
jmp
jo
mov
rorl
aam
mov
lret
mov
mov
popa
testl
pop
xchg
sbb
jne
fidivl
addr16
sbb
pushf
push
or
xchg
add
repnz
cmp
mov
mov
inc
out
in
pop
or
mov
sbb
movsl
xor
jno
aaa
inc
aam
inc
or
xlat
cltd
pop
xor
test
lret
lret
xchg
push
movsl
pop
mov
outsb
subb
jae
pushf
jl
es
mov
lahf
push
iret
sbb
pop
jp
pop
iret
pusha
mov
dec
push
dec
loope
lock
mov
repnz
nop
mov
ds
adc
cmp
lock
outsl
mov
stc
cld
and
cmpsb
idiv
xor
popf
popf
mov
cwtl
dec
dec
mov
lock
cwtl
xchg
out
xchg
repz
sub
push
cs
pop
test
and
je
daa
jecxz
je
lret
jmp
mov
fnstcw
mov
pop
sub
in
lds
jecxz
sub
fsubrs
dec
or
add
cmp
imul
test
mov
fadd
test
call
pop
pop
outsl
scas
or
clc
loop
pop
mov
cmp
jle
xchg
push
ret
aaa
test
rorl
nop
mov
xchg
test
pop
fisubrl
mov
call
and
aam
xchg
sub
sbbb
xor
into
cltd
adc
jbe
in
and
andb
mov
xchg
insl
fs
pushf
stos
push
dec
insl
mov
and
adc
testb
mov
or
mov
clc
ret
mov
lock
inc
out
rcll
hlt
hlt
inc
xor
sti
push
jp
aaa
int
push
cld
jbe
repz
inc
inc
mov
pop
and
sbb
cmp
pop
inc
mov
or
sbbb
sbb
fistps
sbb
je
jb
inc
shrb
sbb
pop
mov
ja
jno
sub
adc
in
or
vmread
or
adc
scas
sub
dec
je
jno
jno
mull
les
xchg
cmp
push
aas
pop
add
test
pop
out
cmp
fucomip
and
pushf
adc
adc
mov
pop
xor
out
xlat
inc
mov
push
pop
add
sti
in
add
imul
ficoms
jle
das
aam
cmp
and
negl
inc
adc
std
xor
pop
mov
inc
cltd
pop
lock
cmp
mov
arpl
push
clc
add
ja
sub
adc
ret
cmc
cmpsb
sbb
push
cli
aad
rcrb
cld
cmp
cs
inc
ficoms
ret
pop
jmp
inc
addb
dec
xchg
jmp
popf
xor
roll
jbe
dec
fwait
rorl
in
push
cltd
aad
fisttpl
cmpsl
jle
sahf
push
mov
jge
call
loop
test
sbb
sbb
pop
xchg
inc
lahf
sub
xchg
cli
mov
dec
sti
call
cwtl
jp
sub
filds
in
or
subb
push
mov
ljmp
in
mov
xor
xchg
je
xor
mov
jmp
icebp
mov
out
add
xchg
lock
bnd
cmp
into
cmpsb
jnp
mov
mov
and
shlb
aam
xchg
out
push
aad
push
ja
sbb
cld
lods
fstpt
mov
sbb
in
push
push
or
loopne
popl
jle
test
sbbb
sbb
insb
cmpsb
ret
or
out
jb
dec
push
inc
xor
loop
addl
inc
mov
pop
into
inc
or
xor
pop
movsb
fxch
lea
mull
xchg
sbb
mov
jbe
std
or
inc
ss
adcl
push
push
adc
inc
aaa
jg
and
cmp
cmp
pop
xor
pop
and
fwait
push
sub
jb
add
stc
xchg
mov
mov
fstps
jbe
jnp
movsb
mov
stc
fs
cmp
add
xor
les
aas
enter
sbb
sub
sbb
pushf
dec
push
add
mov
int3
repz
add
hlt
imul
fildl
in
mov
ret
xchg
bound
divb
sahf
push
testl
mov
add
rorl
stos
cmpl
pop
clc
sbb
arpl
les
adc
insl
xor
mov
pop
scas
mov
lds
insl
cs
jns
adc
movsb
pop
sbb
jecxz
xlat
mov
sub
fwait
enter
pop
jae,pt
lret
fwait
int3
sbb
xor
dec
js
daa
push
sbb
scas
xchg
int3
insb
fdivs
ljmp
cmp
les
pop
jno
mov
addr16
lret
dec
sbb
ds
xor
and
push
push
cmpsl
insb
insl
xor
sbb
add
or
aad
test
pushaw
mov
test
fcmovne
pop
repnz
fists
shrl
and
cmp
or
punpckldq
xchg
adc
push
xor
mov
ret
pop
movsb
and
sub
jge
and
jp
test
sbb
cmpl
jns
push
in
inc
xchg
in
xor
jl
and
xchg
loop
jle,pn
xchg
cs
repz
mov
adc
xchg
lcall
jle
clc
xchg
pop
xchg
cld
in
xchg
inc
lds
adc
xchg
and
push
jnp
push
ss
pop
mov
push
pop
fs
mov
iret
es
fcompl
push
aas
lret
xchg
jmp
lcall
xor
xchg
dec
iret
or
andb
mov
pop
scas
data16
orl
adc
inc
fyl2xp1
into
in
nop
mov
mov
ds
cld
cmp
scas
dec
dec
mov
and
in
cmp
xchg
cmp
int
mov
mov
data16
into
iret
dec
mov
shl
std
mov
jo
pop
jne
notl
decl
call
pop
add
lds
inc
pusha
cmp
jmp
fildl
fisubl
popa
sbb
pop
je
mov
adc
aad
inc
ret
aas
cli
pop
cmpsb
jecxz
mov
test
imul
xchg
bound
mov
fisubl
lcall
lcall
add
outsb
sbb
inc
inc
ja
int3
sbb
and
rcr
pop
cmpsb
xchg
call
rorb
insl
adc
push
mov
pop
push
test
sahf
xor
push
test
repz
xchg
cmp
pop
out
mov
push
daa
or
sub
fldenv
es
aaa
jo
enter
and
xchg
imul
dec
xchg
stos
leave
and
aam
sub
jnp
add
int
sbb
imul
je
inc
jle
sub
ret
dec
mov
dec
lds
push
mov
sub
dec
mov
mov
cmp
mov
xorl
mov
fidivrs
xchg
pop
std
pop
xor
inc
fadds
sahf
sbb
mov
lahf
sbb
lods
inc
inc
and
scas
sub
das
jbe
das
cmpsl
cwtl
repnz
shll
sub
cmc
out
popa
int
sbb
cmp
and
cmp
xor
subl
ss
enter
loop
adc
dec
push
in
cmp
and
dec
push
dec
ss
mov
in
test
add
fmull
sbb
hlt
push
les
mov
paddusw
jecxz
mov
insb
jmp
xorb
test
addl
fistpl
and
push
inc
jno
mov
or
mov
pop
dec
sbb
xchg
into
dec
clc
test
inc
daa
dec
jge
data16
test
std
enter
push
or
stc
mov
pop
fs
xchg
mov
xor
pop
enter
out
dec
mov
addr16
gs
cs
pop
push
or
sbb
lods
pop
mov
push
jb
mov
dec
aam
hlt
jle
leave
or
stos
cli
push
sub
arpl
adcb
fcoms
outsl
mov
shlb
push
aad
adc
sbbl
mov
iret
dec
xor
fdivrs
sub
sti
push
in
popf
aam
pop
fs
hlt
adc
cltd
add
outsl
flds
jne
push
xorl
cmp
daa
push
xor
mov
clc
sub
out
lcall
int
jo
test
fwait
cmp
sbb
xor
bound
cmp
mov
cmp
mov
lods
xor
iret
fidivrs
lahf
scas
ret
gs
jge
push
mov
cmp
pusha
mov
arpl
roll
in
sbb
hlt
pop
mov
and
pusha
inc
push
dec
insb
lock
pop
movsb
je
test
cmp
scas
scas
imul
push
sbb
mov
jb
mov
mov
leave
inc
mov
and
in
adc
or
mov
in
hlt
mov
xchg
jne
sub
inc
xorl
shrl
add
mov
jae
mov
dec
aas
cmp
loopne
test
shll
xor
fcoms
sbb
ds
stc
xlat
test
insl
jne
push
shll
sbb
cwtl
jb
pop
sbb
lods
popa
jo
inc
sbb
ljmp
cmp
xor
and
movsb
imul
dec
mov
or
sub
mov
mov
ds
push
cld
sub
mov
xor
int3
and
pop
les
andl
out
daa
cmp
imul
dec
push
and
in
repnz
in
lea
xor
outsb
cmpsb
add
punpcklwd
dec
mov
push
pop
push
testb
aad
lret
mov
sub
xor
nop
fucom
clc
mov
push
pop
pusha
mov
insl
pop
enter
jne
jle
dec
pop
ljmp
push
jne
cmc
ret
push
movsl
hlt
or
repz
aas
mov
repz
repz
int3
xchg
testb
pop
movsb
jne
out
fs
repz
fwait
push
mov
stos
pop
lods
dec
jp
jae
inc
cmp
push
int3
jle
nop
int3
dec
push
les
data16
outsb
out
test
or
pop
add
cmp
pop
imul
xlat
bound
jnp
xor
add
mov
lods
lret
mov
add
outsb
xor
imul
fwait
mov
sub
in
jmp
ficoms
testl
aas
scas
cwtl
sub
cli
or
xchg
push
dec
inc
shlb
mov
or
imul
fisttpl
mov
imul
fisttps
cmpsl
mov
fsubrl
push
outsb
xchg
bound
dec
xchg
ficompl
loopne
aaa
dec
mov
inc
sub
jo
add
imul
sub
lret
mov
shrb
pushf
mov
pop
insl
mov
push
fidivrl
rol
iret
adc
lahf
push
stos
mov
stos
xor
notb
jnp
addl
std
fadd
mov
mov
cli
xchg
and
fbld
xor
inc
insb
sbb
push
cmpsl
xor
or
xchg
jle
dec
and
or
cli
mov
addr16
rcr
rcrl
mov
dec
xor
pop
gs
pop
mov
sbb
hlt
pop
xlat
je
mov
push
popa
and
inc
orl
into
add
mov
and
add
insb
dec
iret
orl
test
xchg
insl
lds
test
push
cmpsl
mov
es
and
jmp
push
xchg
lahf
or
sbb
dec
loope
data16
lds
mov
lahf
pop
fwait
rorl
add
pop
push
jmp
nop
dec
mov
ljmp
inc
sbb
insb
sbb
xchg
xchg
mov
mov
stos
push
cmp
dec
or
fsts
mov
jp
dec
rcrl
and
lret
aaa
mov
jmp
mov
xchg
repz
call
rep
pop
inc
into
xchg
or
dec
dec
inc
call
cmpsl
out
loop
loop
sub
add
sub
nop
fldcw
cld
and
cmp
andl
mov
jb
push
sub
iret
lods
adc
cmp
testb
or
mov
inc
mov
jo
rcll
xor
xor
cli
stos
and
outsl
outsl
scas
mov
mov
ret
xor
out
repz
les
lods
sbb
xchg
xchg
push
cmp
push
jbe
rolb
xchg
cmp
test
sub
mov
xchg
inc
jp
push
loopne
insl
adc
jg
xchg
addl
sub
arpl
pushl
repz
inc
sub
mov
fstl
cmp
adc
fcomps
mov
scas
sbb
or
mov
pop
adc
imul
aaa
aam
imul
push
inc
fldcw
out
arpl
inc
sub
cmp
jno
xchg
xchg
mov
xchg
imul
and
xchg
int
cld
pop
ss
and
pop
lret
cmp
shlb
dec
sub
out
imul
or
jo
adc
out
cmc
sub
mov
shll
jno
xchg
cmpsb
lret
or
mov
xor
push
mov
insb
adc
xchg
or
or
sub
jp
je
hlt
cmp
mov
jnp
cmp
in
je
mov
adc
inc
loop
mov
iret
dec
lods
jo
push
adc
mov
mov
popf
testl
inc
push
sub
ss
xlat
pop
dec
pop
cmp
push
jp
leave
or
int3
rcll
jo
jns
lcall
cmpsl
cmc
xchg
lea
xor
sbb
sub
bound
adcl
aad
xor
dec
divb
out
push
jg
shl
aad
in
add
loope
lahf
lods
test
cmp
cmp
mov
jo
int3
mov
dec
inc
mov
jecxz
inc
dec
adc
adc
cwtl
or
xor
subl
mov
mov
mov
insb
sbb
cmpsb
ljmp
jg,pt
jno
shlb
imul
fcomi
jnp
fcom
push
mov
lcall
sbb
mov
aaa
out
imul
pop
mov
cmp
stos
lds
jmp
pop
cmp
ret
fcomip
ffree
sbb
xor
xchg
sbb
mov
das
cmpsb
mov
les
cwtl
imul
or
mov
push
jmp
outsl
cld
and
scas
xor
dec
int3
cmp
addr16
or
push
jo
mov
jle
sub
addb
jnp
out
scas
xchg
stos
mov
push
mov
xor
sub
adc
out
int
sub
fs
out
test
xchg
test
sarb
push
gs
inc
pop
add
jo
xchg
outsl
rol
lea
inc
push
divb
mov
dec
xor
std
mov
cs
pop
add
inc
dec
movzwl
pusha
cltd
mov
popf
push
imul
inc
inc
add
mov
les
jecxz
popf
gs
push
pop
jge
cltd
enter
push
mov
cli
mov
int
jp
ret
jnp
jmp
push
mov
fidivl
movsl
and
add
mov
sti
push
mov
xor
aam
movsl
arpl
aam
out
bound
cs
xor
ljmp
mov
lret
sbb
loopne
sbb
fistpll
iret
lods
aaa
sbbb
mov
or
and
sbb
subl
in
inc
mov
mov
cs
lret
push
test
divl
jg
cmpsl
stos
scas
ret
push
in
jno
loope
pmaddwd
ljmp
fcmovbe
fwait
imul
arpl
inc
mov
add
mov
dec
cmp
xlat
jecxz
out
cmpsb
mov
cmp
fstpl
iret
push
fdiv
lock
in
xor
scas
fildll
repnz
pop
adc
enter
mov
fwait
push
notb
sbb
mov
lock
mov
push
lea
imul
lret
pop
aam
out
les
cmc
popa
jae
jb
ret
and
pusha
aaa
popf
xchg
or
sbb
call
rclb
mov
sub
imul
shlb
dec
adc
fisttpll
scas
mov
jl
outsl
push
lods
inc
sbb
adc
cmpsl
lahf
mov
loopne
fdivr
movsb
sarb
xchg
std
in
cmpsb
mov
icebp
mov
xor
jg
push
loopne
imul
or
push
hlt
rcl
mov
mov
js
add
pop
ds
cld
dec
cmpsl
and
sbb
fwait
test
cmp
dec
lret
xchg
mov
imul
mov
popf
push
cmpsb
xchg
cltd
pop
push
sysret
pop
adcb
sub
sbb
test
fcomp
loope
gs
daa
clc
xchg
and
jo
scas
stc
push
mov
mov
dec
xchg
pop
jnp
andb
pop
fsubr
mov
pop
subb
sbb
fmull
cmp
mov
xchg
pop
inc
lcall
xor
push
dec
sarb
or
imul
lahf
inc
dec
xchg
jecxz
in
sub
dec
gs
add
mov
test
pop
sarb
cli
jle
sub
mov
sar
and
notb
inc
mov
fcomps
or
adc
pop
enter
je
xorb
aaa
mov
inc
int3
int
dec
push
scas
pusha
adc
jmp
jle
push
push
sub
fmull
push
sub
sub
dec
adc
lea
test
xchg
xchg
xchg
jbe
lods
lods
adc
pop
pop
leave
repnz
fstpt
les
fistps
mov
enter
repnz
aam
add
shll
cmpsb
xchg
aas
fdivp
and
sbb
inc
fcomip
inc
mov
jge
outsb
lea
icebp
outsb
stos
lods
mov
sti
out
aaa
xor
xlat
xchg
inc
sbb
shll
ficoml
jp
test
xchg
xchg
cmp
mov
iret
lds
cmp
loope
loop
and
adc
push
mov
sbbb
sbb
jbe
scas
adc
mov
lods
inc
pmullw
movaps
cmp
std
fs
mov
into
roll
adc
sub
pop
fidivl
mov
add
sub
ljmp
stos
in
clc
inc
lods
in
test
cli
sahf
adc
fisubrs
add
mov
fildl
incl
fstp
cs
xlat
mov
xchg
loope
jns
sub
mov
xor
sub
jge
mov
shl
pop
sbb
and
aas
pop
and
mov
push
jmp
test
and
jne
xlat
sti
push
pop
into
loope
mov
movsl
adc
pushf
lret
lret
wbinvd
imul
push
and
add
sub
aas
outsb
pop
std
cmp
stos
out
std
fs
pop
stc
and
aas
pop
insl
cwtl
push
add
lret
fsubrl
inc
add
test
jbe
negb
fnop
loopne
into
std
test
mov
stc
cs
or
shrb
dec
push
dec
xchg
xor
or
mov
pop
out
popa
out
mov
or
pop
or
fidivl
fwait
test
jnp
mov
repnz
pusha
xchg
push
push
loop
mov
mov
rol
jb
cmpsl
ljmp
fs
dec
sbb
xchg
adc
popf
sti
jo
adc
add
sbb
sti
shlb
je
hlt
aam
adc
iret
adc
outsb
testb
test
pushf
jecxz
mov
inc
ds
cmc
cmc
mov
push
int3
inc
mov
testb
pushf
popa
lds
sbb
push
nop
notb
and
loopne
jo
push
rcrl
mov
add
ret
sub
in
aas
xor
sbb
dec
and
and
int
lock
addr16
inc
test
movsl
inc
xor
in
jo
mov
dec
mov
sbb
mov
nop
inc
std
cmp
les
inc
in
ljmp
enter
shll
mov
xchg
jg
and
fisubrl
into
shlb
lcall
sub
and
xchg
addr16
nop
cli
mov
lock
rclb
pop
dec
aas
or
sub
xor
aad
hlt
test
push
fxtract
cmp
adc
add
dec
inc
lock
mov
addps
and
icebp
jp
adc
leave
repnz
dec
mov
sti
shll
xor
loop
cwtl
scas
lds
cmp
inc
scas
pop
lsl
out
sub
xor
frstpm(287
out
pop
icebp
xorb
jns
xlat
inc
inc
aaa
or
cwtl
jge
mov
inc
jl
mov
sahf
leave
adc
scas
push
sbb
pusha
loop
and
push
mov
mov
test
movsl
popa
cli
cmp
lret
jb
sbb
rolb
cmovs
sbbl
lret
mov
test
add
test
and
repz
xor
pop
mov
lcall
jno
push
adc
cld
xor
xlat
test
cmpsb
icebp
cwtl
cli
lea
adc
sub
pop
rorb
pushf
jns
push
js
xchg
mov
pop
pushf
adc
and
adc
arpl
out
test
push
cld
lock
pop
movsl
cmp
in
push
stc
inc
das
cltd
bound
xchg
sbb
clc
cmp
loopne
out
or
fldt
in
add
cmpsb
aad
mov
xchg
ds
adc
push
push
mov
popf
out
adc
mov
sub
rorb
je
insl
arpl
ret
dec
xor
outsl
loop
pop
xor
or
push
nop
xor
xor
sub
out
xchg
cmp
in
incb
adc
pop
mov
lea
adc
jmp
loopne
je
addr16
mov
ds
xchg
rclb
popf
sub
mov
test
add
adc
xchg
xchg
sti
sub
movsb
outsl
pop
cmp
test
xlat
int3
inc
sbb
mov
xchg
jle
inc
loope
stc
mov
push
popa
cmp
mov
icebp
pop
bound
aad
inc
jge
xchg
xchg
ss
ret
sub
or
pop
or
add
xchg
inc
and
lret
stc
adc
mov
and
jge
rcrl
jge
xchg
pushf
je
cmc
repz
push
xor
dec
jb
je
cld
lahf
cli
in
mov
sti
xor
sbb
loopne
push
pop
mov
shlb
das
dec
iret
push
ret
jo
fiaddl
dec
sbb
fs
jbe
sub
adc
lahf
push
dec
mov
test
add
outsb
scas
xor
test
cmpsb
push
sub
int
aam
testb
cmp
ss
sbb
iret
mov
shrl
idiv
popf
out
mov
add
xor
pushw
or
aas
les
inc
xchg
cmp
push
mov
and
nop
outsl
push
loope
adc
pop
les
cmp
push
push
insl
and
mov
mov
or
out
ss
pop
jnp
mov
std
adc
pop
je
mov
sarl
inc
or
push
and
gs
mov
ja
push
mov
fdiv
cmc
inc
mov
pushf
jle
fisttps
sbb
int3
mov
mov
pop
cmp
fstl
repnz
mov
in
mov
icebp
call
add
lods
cmc
ljmp
adc
insb
jg
stos
arpl
cmp
test
xlat
es
xchg
mov
test
push
bound
test
xor
mov
scas
mov
out
popa
or
scas
pop
mov
cmp
mov
hlt
fidivs
movsl
or
in
dec
xlat
add
data16
or
push
inc
cmp
out
add
fldcw
push
cli
sahf
adc
cmp
cmp
out
mov
movsl
inc
mov
imul
cmp
ret
pop
sbb
fs
sti
mov
xchg
mov
icebp
mov
xor
lahf
add
mov
call
popf
and
subb
aaa
arpl
and
test
scas
adc
pop
and
push
jle
pop
addr16
adc
jae
pop
mov
mov
pop
sbb
testl
mov
jle
xchg
pop
inc
dec
inc
pop
clc
call
shrb
out
rol
pop
cmp
or
add
arpl
add
mov
ja
lds
dec
push
mov
xchg
cmc
push
xlat
inc
xor
and
pop
xchg
or
xor
sub
pop
dec
dec
aas
cwtl
leave
fadd
jmp
test
and
jae
and
faddl
jb
adc
and
jecxz
or
repz
lret
sbb
mov
in
hlt
dec
jl
cmp
cmc
mov
xchg
lods
xchg
cltd
test
mov
es
sub
push
orb
push
pop
jno
adc
outsl
out
and
cmp
movsb
ja
xor
add
loop
and
lea
push
rcrl
xor
jge
sahf
inc
cmc
in
rolb
cs
fsubr
jecxz
out
pop
sbb
pop
mov
outsb
inc
or
sbb
dec
push
cmp
mov
loop
ss
scas
arpl
out
cmp
stc
adc
push
outsl
movsl
sub
jne
cmp
xor
mov
xchg
inc
fiaddl
fisttpll
test
inc
stos
adc
pop
or
or
jp
cmpb
push
cmpsb
inc
je
jle
push
mov
adc
lret
push
arpl
mov
add
adc
mov
in
or
push
pop
xor
add
jg
cld
out
sbb
faddl
out
mov
and
jmp
shl
sti
fistl
in
xchg
mov
dec
or
lahf
jle
or
or
mov
loope
nop
fsts
mov
push
mov
add
nop
and
and
add
and
xchg
testl
shrl
mov
pop
sbb
ret
andb
sub
push
mov
aaa
push
jb
inc
data16
sarb
popf
shrl
xor
pop
push
cmp
jecxz
cmp
add
push
insl
es
pusha
and
subb
ja
pop
push
gs
fstpl
cmp
pop
lret
adc
jmp
icebp
js
pop
arpl
dec
addr16
cmovns
dec
lock
pop
jmp
pop
test
add
pop
xor
lds
fucompp
jno
stc
mov
sbb
or
xchg
cld
pop
dec
add
aad
pushf
pop
and
test
gs
jno
pop
cld
add
sbb
dec
dec
push
mov
cmp
pop
pop
pusha
jecxz
shrl
nop
sub
fs
mov
cltd
cmc
mov
fdivrl
pop
sar
ljmp
xor
cltd
fiadds
pop
mov
inc
test
pop
gs
mov
pop
pop
stos
shll
inc
xchg
rorl
ljmp
push
pop
mov
sbbl
int
inc
fmull
daa
dec
or
jae
dec
nop
jmp
adc
jge
lcall
sbb
inc
out
sbb
adc
test
into
cwtl
sar
in
mov
adc
cmpsl
outsb
add
daa
into
inc
pop
test
mov
pop
lds
daa
rcl
leave
pop
add
inc
dec
subb
cs
dec
push
and
pop
push
pusha
testb
fimuls
xchg
add
sbb
test
ret
push
add
scas
rorl
or
cwtl
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
test
jl
out
mov
sti
loopne
pmuludq
in
clc
jl
cmp
lret
mov
out
dec
leave
jmp
jle
cmp
jge
loope
jg
lock
xlat
push
fisubrs
in
cwtl
fwait
or
push
dec
jbe
xor
popl
mov
push
fnsave
adc
sbb
sub
push
add
ret
pop
adc
cmpsl
in
gs
stos
xor
hlt
cmpl
sbb
sbbb
adcl
xor
dec
mov
xchg
jmp
aas
lcall
std
cmpsl
fwait
and
fdivs
scas
test
lret
or
xor
jmp
rclb
je
cwtl
jo
mov
inc
xchg
test
xorl
lahf
outsb
cmpl
movsb
outsb
mov
stos
ss
gs
pusha
jo
out
sbb
outsb
aam
push
sbb
xor
andb
push
sub
jmp
or
aaa
cmp
adc
test
outsl
mov
mov
dec
cli
aad
xor
or
push
xchg
push
ljmp
les
adc
add
cli
mov
sbb
inc
aad
xchg
test
outsl
jnp
js
gs
out
out
pop
lahf
sbb
jne
adc
add
adc
sbb
fs
sahf
cmp
dec
in
jne
mov
jecxz
fs
push
inc
mov
loope
push
icebp
push
or
cmc
xchg
lret
stos
xchg
inc
pop
cltd
pop
jb
js
orl
sub
notl
popf
pop
out
mov
sbb
pop
insl
stos
mov
mov
out
jae
or
in
cmp
jbe
test
mov
dec
push
xorl
fnstcw
add
jbe
in
pop
push
sub
inc
mov
jae
divb
xchg
add
aas
push
outsb
jle
or
imul
leave
xor
es
scas
in
sti
inc
inc
dec
cmp
daa
mul
mov
pop
jne
jge
ficomps
int
std
sub
mov
adc
xchg
inc
sbb
xorl
mov
push
sbb
dec
pop
test
push
jl
vaddsubpd
gs
repz
fwait
inc
test
fnstsw
mov
lahf
jle
in
mov
outsb
rclb
inc
in
sarl
subb
sub
mov
jbe
pop
push
mov
fsubrs
inc
adc
cmp
push
in
mov
gs
or
cmp
or
xchg
mov
fadds
addl
push
push
lods
and
rcll
jns
xor
cmp
mov
dec
inc
mov
cmpb
sbb
jns
jg
cld
scas
adc
xor
inc
push
mov
shlb
or
addr16
xchg
out
sbb
cmc
aas
sub
lahf
lcall
mov
inc
sbb
popa
call
jl
pop
enter
pop
movsl
and
mov
ret
xor
pushl
cmpl
pop
cs
outsl
jmp
in
lret
aaa
mov
inc
push
call
std
inc
hlt
push
pop
and
daa
cwtl
lea
push
mov
add
scas
adc
jmp
iret
shll
jno
dec
push
lcall
mov
addr16
mov
lahf
scas
icebp
pop
push
sub
rolb
push
dec
push
sub
mov
ljmp
ds
out
dec
cmp
sub
dec
adc
imul
xchg
dec
js
mov
test
incb
test
pop
mov
test
jecxz
mov
cs
adc
jno
mov
and
mov
dec
flds
sbb
adc
popf
insb
sahf
jecxz
add
pop
je
cmp
aam
sti
cli
sti
lods
dec
and
rcrl
sbb
inc
es
mov
rorb
test
inc
xchg
push
lahf
pushf
sbb
jns
push
roll
push
int
jo
repz
std
xchg
and
jg
cmpsb
xchg
jmp
fnstsw
out
cmp
decl
fadds
and
adc
push
jb,pt
xchg
sahf
repz
clc
cmpsl
mov
cwtl
sti
loop
leave
sub
and
clc
mov
sub
jp
shld
out
and
scas
das
inc
movsb
push
aam
repnz
dec
sub
out
nop
cmpsl
jne
sar
sub
stos
pusha
lret
dec
pop
movsl
mov
push
inc
pop
adc
mov
jge
jg
cli
mov
in
shrb
push
inc
call
lcall
sti
jnp
or
add
ljmp
popf
inc
pop
in
and
mov
adc
xchg
adc
xor
xchg
mov
fldt
xchg
cmp
push
pop
mov
ja
call
pushf
das
ds
repnz
cmp
lea
jl
xchg
xchg
into
movsl
adc
movsl
sbb
jp
lods
mov
adc
xor
xchg
out
dec
iret
imul
xor
mov
insb
xor
pop
mov
xlat
adc
sbb
inc
adc
cmpsl
lea
hlt
data16
js
push
cmpl
lds
push
fwait
fwait
sub
daa
sub
imul
call
idiv
or
call
fcoml
shll
sahf
jo
push
add
push
add
cwtl
mov
out
jae
stc
inc
ret
addr16
jb
sub
mov
lahf
or
sub
and
or
int3
lcall
lods
out
test
sbb
cmp
sbb
xor
aad
add
mov
es
adc
mov
lods
dec
adc
jmp
arpl
stc
fsubrl
mov
in
push
xchg
mov
int3
movsb
mov
jns
les
and
arpl
mov
into
sub
loope
dec
in
xchg
imul
xor
adc
mov
mov
test
sub
shl
sub
js
cld
and
or
or
pop
pop
es
shlb
push
xchg
imul
sub
jg
pop
sbb
jbe
xor
xchg
mov
pop
imull
add
jno
mov
pop
mov
dec
orb
mov
xchg
mov
out
jp
adc
jg
imul
jnp
popf
cmp
push
aad
out
xchg
mov
or
xchg
cmp
xchg
jle
fmuls
and
shlb
lcall
push
out
sub
test
sbb
jb
hlt
and
dec
mov
inc
xchg
popl
decb
mov
inc
and
out
adc
add
xchg
ss
mov
mov
mov
daa
add
aaa
mov
pushf
mov
stos
js
mov
sbb
mov
lock
arpl
push
mov
or
stc
inc
jl
pusha
jbe
push
jae
dec
sub
in
ja
sbb
stos
popa
test
ds
loop
rolb
or
add
repz
mov
gs
add
xchg
add
cmpsl
pop
cwtl
and
add
push
sub
movsb
aam
push
sarl
stos
adcb
sti
das
jnp
and
int
add
or
pop
xor
jb
adc
inc
mov
or
test
das
sub
mov
cmp
mov
xchg
mov
push
ja
push
add
add
icebp
fwait
xor
or
in
pusha
lret
dec
loop
lahf
adc
lods
mov
icebp
in
pop
inc
aaa
and
jae
outsb
inc
dec
insl
mov
sbb
imul
add
push
and
pop
out
push
leave
jecxz
orl
jge
inc
lret
ss
inc
rcll
inc
ret
repz
push
mov
jmp
imul
mov
inc
pop
fsts
mulb
and
int
js
cltd
mov
mov
cmp
imul
out
mov
lahf
jmp
pop
push
fmuls
or
pop
push
jno
movsl
shlb
ss
pop
add
call
add
add
je
ds
lds
jno
insb
je
adc
push
push
stos
adc
sbb
sbb
out
dec
aaa
or
int
push
jns
pushf
add
push
mov
pop
aaa
adc
inc
push
inc
sub
out
mov
xchg
popa
pop
push
sbb
inc
decl
xchg
rolb
inc
subl
push
add
xor
pop
or
idivb
dec
xchg
std
loope
and
lahf
mov
aaa
subl
push
pop
inc
call
xchg
xchg
xor
inc
jns
fsubs
mov
mov
notb
adc
dec
add
push
sbb
dec
fs
xor
jle
jb
loop
mov
out
stos
sub
shrb
xor
pop
pop
lahf
cs
jl
and
mov
pop
pop
adc
jp
cmp
pop
cld
push
int3
push
jnp
pop
adc
shlb
roll
stos
or
sbb
add
insl
fs
and
enter
and
cmp
mulb
hlt
sbb
lret
mov
xchg
loopne
or
mov
addb
mov
fstpt
adc
outsb
jle
lds
imul
xor
or
xor
lock
pop
inc
inc
lcall
cmp
les
sbb
aad
aam
or
xchg
clc
sub
push
shll
shl
jle
cmpsl
xor
ret
and
dec
mov
test
aad
or
inc
int
mov
cmpsl
jg
test
jbe
cmp
scas
jecxz
sub
mov
mov
xor
loopne
cmp
ljmp
push
push
or
lret
test
and
je
loopne
imul
int
dec
repnz
jg
or
sbb
push
mov
imul
xor
sub
subl
sbbb
filds
xchg
jno
roll
xchg
push
adcb
add
fnstcw
negb
test
arpl
int3
adc
push
addr16
bound
mov
pop
std
fidivrs
push
xchg
lret
jo
sub
outsb
pop
inc
fmul
lahf
jne
push
ret
jg
dec
addr16
stos
jmp
or
cli
mov
mov
rorl
std
cli
adc
xor
sti
push
mov
rep
mov
push
jne
mov
cmp
in
aaa
test
lods
outsb
mov
xchg
movsb
aaa
or
aaa
jnp
jns
sbb
cmp
or
push
test
addl
mov
clc
and
pop
call
cmpsl
rclb
inc
cwtl
jmp
and
stc
dec
xchg
pop
mov
test
addr16
outsb
sub
inc
int3
into
pop
scas
pop
jl
loop
add
sbb
popf
mov
sbb
xchg
rol
push
insl
mov
xchg
jne
fdivl
mov
fsubrs
imul
mov
inc
pop
jg,pn
imul
std
cmpsb
in
pop
es
push
mov
push
js
in
inc
pop
imul
push
outsb
inc
je
je
lock
mov
ret
xor
incb
int3
scas
fnsave
xlat
push
jge
enter
mov
in
leave
gs
insb
mov
mov
pusha
push
jecxz
xor
xchg
mov
insl
mov
cmc
inc
inc
in
roll
and
lods
mov
mov
sahf
mov
mov
push
loopne
std
cli
repnz
les
sub
call
stos
fistpl
mov
sbb
popf
add
sbb
push
fwait
push
inc
mov
es
sbb
push
xor
lds
pop
in
push
mov
mov
push
add
pop
mov
jmp
fwait
xchg
push
ret
fdiv
xchg
addr16
cmpsl
cmpsl
pusha
adc
fiadds
cs
je
pop
les
enter
lret
es
jg
and
mov
aaa
lock
addr16
cmpsb
icebp
mov
icebp
mov
or
mov
dec
pushl
cmp
xchg
or
movsb
clc
push
xor
daa
or
cmp
js
jno,pn
lahf
mov
pop
mov
push
adc
aas
movsl
adcl
or
pusha
ficoml
push
mov
je
jbe
fsubrl
mov
or
repz
add
jl
xchg
sub
mov
mov
jb
sahf
inc
and
cmp
xor
insb
sti
inc
pop
push
mov
sbb
aam
sbb
adc
out
push
jmp
mov
dec
lcall
jecxz
cmpl
test
rolb
out
pop
in
xor
push
adc
mov
aad
xor
cwtl
mov
mov
jbe
pop
push
sarl
xchg
cmp
faddp
jecxz
hlt
mov
das
adc
hlt
inc
cmp
in
mov
jne
imul
andl
lret
jnp
cwtl
ss
adcb
lahf
rep
mov
xlat
arpl
and
adc
sahf
adc
push
cmp
dec
mov
mov
cmpsb
adc
inc
insb
stos
addr16
cmpsb
jnp
dec
notb
sbb
mov
aam
shll
jmp
and
sbb
out
cmovns
mov
mov
jp
cmp
xor
push
jp
push
mov
sti
inc
push
mov
jecxz
cwtl
push
cmp
inc
cmpl
xchg
into
sar
or
jns
movsb
popa
jns
add
dec
inc
mov
xor
callw
fwait
je
iret
adc
sahf
sub
jle
sar
test
cld
aam
cwtl
jnp
sbb
mov
inc
out
or
adc
cmp
imul
inc
nop
nop
cmpsb
lods
pushf
les
jae
insl
cmp
and
adc
xchg
mov
cmc
fcomps
scas
ret
ret
dec
mov
lret
mov
movsb
lds
pop
popa
mov
and
and
sub
loopne
sub
pop
gs
sahf
lods
aad
in
sub
aad
pusha
cmp
loopne
out
dec
dec
dec
or
cmp
icebp
outsl
xchg
mov
pop
loopne
lods
mov
cmp
sbb
dec
lods
shll
mov
xchg
aam
jge
out
xor
sbb
cld
xor
sar
rorb
ficoms
push
dec
pop
fbstp
aas
rcrb
jo
popa
in
lcall
jecxz
ljmp
inc
dec
cmp
cmp
scas
enter
mov
push
leave
insl
xchg
mov
pop
jno
jbe
enter
push
shl
lock
imul
arpl
mov
rolb
xor
and
xchg
mov
xchg
xor
jno
dec
leave
ret
jno
jg
cld
into
imul
xchg
movsl
xlat
andb
divl
mov
adc
daa
mov
movsl
in
sbb
test
sbb
sbb
inc
cmp
fsubrl
dec
fs
negl
shlb
adc
orb
out
jb
call
xor
in
xor
in
pop
rcrl
out
enter
inc
int
in
orb
hlt
push
sbb
andb
jb
loope
push
push
fists
sub
xchg
fs
mov
inc
jl
ja
mov
stos
dec
loop
cmpsl
rcrb
je
leave
jmp
push
inc
and
lock
int
addl
push
jg
pop
out
clc
mov
addb
addr16
sub
stos
iret
lods
push
int
add
and
decl
mov
xchg
cmp
and
mov
xchg
sub
shlb
cmpsb
mov
add
mov
xorps
jmp
das
adc
xor
imul
and
ret
fists
stc
movsl
fwait
and
mov
in
and
je,pt
add
push
or
xor
pop
or
in
adc
shr
imul
cltd
cmp
add
aas
dec
and
pop
cmpsl
in
mov
jo
mov
adc
in
int3
push
mov
dec
popf
mov
aas
stc
jmp
sbb
lock
push
das
jae
into
fmuls
xchg
jge
lcall
loope
cmp
sub
push
jnp
fstp
mov
add
and
xchg
push
xor
fstp
jecxz
fists
into
enter
mov
mov
inc
adc
stos
ljmp
cli
loop
arpl
mov
faddl
loop
xor
xchg
lea
and
nop
fmul
push
dec
into
sahf
xchg
orl
cmp
or
mov
mov
mov
xchg
lods
push
aam
jmp
jmp
sub
sbb
cmc
xchg
jecxz
pop
in
aam
sub
lret
ja
stos
push
jae
js
xlat
xchg
cmc
fstl
jge
mov
and
inc
outsl
adc
out
jne
xor
jno
mov
cwtl
adc
out
cmpsb
out
in
ret
xchg
and
pushf
insl
and
xor
push
enter
push
stos
lcall
jbe
jns
inc
pusha
and
pop
ds
xor
cmp
push
push
adc
mov
ds
or
ljmp
popa
lcall
stc
mov
inc
mov
mov
test
call
inc
inc
dec
cwtl
fstps
mov
xor
test
ds
fwait
stos
xchg
int3
push
es
push
sti
je
xchg
xchg
dec
inc
adc
mov
insl
arpl
test
iret
lcall
notb
xor
ds
mov
pushf
test
ret
mov
js
lods
daa
push
or
xchg
add
aas
xchg
insl
aas
clc
and
xchg
idivl
ret
xchg
adc
xor
add
cmpb
stc
push
out
cmpsl
clc
adc
sbb
xchg
xor
dec
push
sahf
cmp
ret
das
mov
imul
mov
xchg
pop
push
jo
push
fs
mov
sub
loop,pt
test
dec
cltd
sti
sub
adc
mov
jecxz
push
push
pop
jae
inc
mov
xor
dec
xchg
mov
and
test
add
divb
bound
pop
push
mov
adc
andnps
cmp
inc
add
movsb
push
icebp
call
adc
sub
adc
sub
hlt
movsb
sbb
lods
das
pop
xchg
adc
out
test
test
mov
jae
and
cmpsl
rcrl
std
adc
ds
loopne
leave
sub
xor
sahf
ss
mov
mov
cmp
cmp
mov
faddp
or
ss
sti
mov
add
xchg
adc
test
mov
stos
push
jbe
mov
cmp
push
repz
aas
cs
xor
ret
add
dec
sbb
or
mov
jecxz
mov
out
push
xlat
adc
pop
repz
and
cmc
shlb
enter
mov
inc
lret
bound
or
out
insb
daa
outsb
es
imul
or
push
xchg
push
dec
and
lret
test
sbb
cmp
push
lock
sub
lret
inc
ja
inc
arpl
punpcklwd
dec
and
fstl
jl
add
jb
sub
fyl2x
lock
adc
movsb
push
cltd
cli
mov
xor
int
cmpb
mov
int3
adc
cmp
int3
mov
inc
jne
scas
test
pop
mov
or
inc
loopne
out
lcall
loopne
push
shll
ljmp
pop
dec
movsl
mov
or
shll
addr16
xor
cmp
es
ret
repnz
mov
push
addr16
mov
add
inc
or
pushf
sub
sub
xlat
mov
aas
nop
xchg
int3
mov
push
pop
jb
adc
daa
and
ret
leave
repnz
insb
cwtl
stos
lods
xchg
mov
cli
lock
sub
add
mov
fldl
daa
lahf
xchg
push
divl
bswap
cwtl
add
mov
inc
ljmp
adcb
ret
gs
adc
nop
and
add
fcmove
decl
pop
jbe
inc
fisttps
mov
pop
sahf
fs
sub
sub
jnp
jg
ja
and
testl
pop
adc
xchg
push
xor
mov
iret
mov
and
pop
out
or
negb
push
sub
jecxz
jo
mov
je
push
push
loopne
and
sbb
xor
aam
out
jne
xchg
mov
test
int3
adc
sub
add
mov
in
ja
fsubl
jo
in
mov
imul
sahf
push
sbb
or
inc
mov
xlat
sbb
and
negb
bnd
add
loope
popa
jae
mov
pop
outsl
adcb
inc
sbb
fdivs
xor
sbb
roll
and
jp
dec
pusha
jae
dec
hlt
adc
or
add
ljmp
test
imul
pop
sub
pop
lock
bt
jo
cli
ljmp
add
or
sub
pop
sbb
shr
pop
mov
scas
sbb
rclb
sub
cmp
inc
xchg
scas
loop
jge
cmp
in
mov
xor
xchg
das
lcall
fildl
outsb
adc
mull
xchg
mov
pop
scas
cmp
sub
js
push
jg
xor
loop
sbb
ja
push
aas
popf
and
push
sbb
sub
cmp
pop
sbb
ret
and
or
push
dec
in
mov
ds
into
jo
mov
pop
loope
subb
mov
mov
inc
xchg
adc
fbstp
sbb
add
out
inc
je
rcrl
dec
adc
bound
xor
out
and
or
and
mov
mov
add
jns
adc
push
xorb
outsl
push
rolb
ret
lds
lods
or
sbb
andb
mov
cmp
ficompl
and
ss
dec
pop
lcall
dec
outsb
fwait
inc
orb
jge
pop
inc
mov
mov
daa
dec
mov
mov
in
adc
dec
fnstsw
outsl
rcrl
or
scas
dec
mov
xor
and
dec
inc
setl
popa
lds
cmp
cmpsb
or
sbb
ss
push
aaa
inc
dec
mov
and
xchg
gs
add
pop
orb
insl
ss
mov
psrlq
xor
mov
je
push
cmpsb
push
cmp
shll
cli
aas
adcl
test
insb
push
adc
ret
jnp
xor
std
bswap
out
popa
pop
or
inc
fisubs
mov
es
loope
mov
rorb
stos
in
lods
andl
std
xor
nop
lea
repz
test
out
mov
pusha
in
push
or
and
and
stos
cltd
mov
loop
mov
mov
xchg
hlt
enter
fdivrl
in
rorb
movsb
pop
int
sbb
popa
pop
xor
push
xor
into
mov
mov
pop
and
data16
jp
mov
cs
cmp
xor
and
xchg
sub
out
cmp
mov
pop
testl
xlat
ljmp
push
mov
es
inc
jmp
repnz
jecxz
sbbb
mov
int3
and
jbe
insl
xchg
xor
mov
loopne
dec
pop
jl
lock
popf
push
jecxz
in
adc
call
imul
jb
gs
and
popf
js
popa
fiadds
movsl
les
push
pop
jo
jmp
mov
ret
dec
je
insl
test
ljmp
cs
aaa
adc
js
and
pop
xchg
inc
adc
and
jl
sub
jecxz
pop
sahf
cmpsb
cmp
shl
jne
lcall
out
cwtl
loope
jmp
jecxz
xor
and
dec
mov
cltd
pop
cmc
idivl
add
inc
mov
and
sbb
inc
pop
sbb
adc
js
xchg
clc
fcoml
data16
pmulhuw
inc
xchg
imul
jg
mov
in
test
jns
adc
cli
xchg
jne
xor
lock
aam
xchg
or
es
insb
loopne
out
or
mov
jno
ljmp
lods
add
adc
cs
jmp
fsubr
and
ret
cmp
xchg
jmp
into
cmp
mov
sub
jbe
add
decb
and
addr16
jnp
je
ja
loope
pop
dec
in
fwait
js
pop
xchg
jno
sbb
movsl
repz
dec
xor
shl
push
xor
lds
inc
imul
mov
lahf
rolb
pushf
sub
push
pop
push
pop
fptan
pop
imul
pop
inc
inc
pusha
sub
mov
into
adc
xor
test
jne
es
xor
mov
incb
shrl
and
ja
mov
sbb
sub
les
les
mov
bound
and
test
lock
pop
imulb
push
xchg
sarl
mov
dec
sbb
inc
insl
dec
das
daa
add
fsubs
int3
insb
cli
out
divb
imulb
jl
xchg
test
in
les
lock
jne
add
cmpsb
mov
repz
or
movsb
jle
in
xor
sub
and
cmpl
dec
lcall
leave
scas
stos
aam
in
mull
cmpsl
lods
hlt
xchg
ss
cli
addr16
aam
inc
xor
inc
sbb
inc
into
add
setg
xor
mov
out
jno
mov
cmp
in
push
fadds
cmc
pop
xchg
pop
int
lods
dec
shl
movsl
sub
xchg
push
sub
add
add
mov
enter
push
dec
bound
fmull
mov
and
fisttpl
int3
cmp
push
xchg
je
mov
scas
mov
popf
mov
lods
xor
pop
xchg
jo
add
add
int
out
mov
out
int
mov
mov
push
and
scas
fmull
and
fwait
sub
pop
pushf
xchg
sti
sbb
movsb
shrl
add
jns
lock
or
xchg
imul
nop
dec
ss
je
mov
out
dec
mov
call
pusha
pop
dec
insl
xchg
xchg
sub
sti
pop
pop
lahf
stc
popf
fildll
repz
int
inc
add
mov
sahf
insb
fcmovu
inc
movsb
mov
pop
pop
pusha
hlt
xor
mov
mov
call
push
cmp
jbe
mov
inc
lods
test
cmp
jnp
cs
push
movsl
mov
jle
jecxz
and
lods
inc
pop
xor
and
mov
lahf
sbb
xchg
shr
je
stos
les
cli
lcall
aas
add
dec
clc
mov
mov
subl
add
fwait
je
push
orl
bound
cmp
lret
jo
mov
mov
jmp
mov
push
push
cs
jle
mov
pop
mov
icebp
xchg
or
push
mov
sub
dec
arpl
mov
jg
int
mov
loopne
test
data16
pusha
loope
pop
dec
or
jae
mov
shll
es
or
sahf
dec
dec
cmpsl
xor
div
and
push
sbb
je
fdivr
imul
cs
outsl
sbb
push
xchg
ds
lret
jle
xchg
mov
cmc
rcll
sbb
call
xchg
pop
mov
addb
addr16
mov
gs
insb
mov
test
fldz
imul
add
pop
cmc
cmc
xchg
jge
ljmp
into
test
push
mov
sti
xchg
popf
in
push
sbb
add
push
push
dec
push
jae
ficoms
add
adc
inc
andl
xchg
jp
add
fildl
into
ret
out
pushf
and
lods
jne
dec
daa
xchg
loop
orl
jmp
mov
out
or
mov
inc
pop
add
add
or
cmpl
loop
lea
lock
mov
mov
pop
imul
mov
pop
push
mov
jecxz
shlb
pop
pop
cmpsl
inc
xchg
lock
daa
aad
test
sub
xchg
mov
lret
xlat
repnz
xchg
mov
movsl
stos
aas
xchg
insb
leave
nop
int3
push
sbb
insb
add
enter
mov
jbe
adc
out
mov
lea
subl
lock
popf
mov
ja
and
loope
pop
pop
jl
mov
or
rolb
dec
in
mov
cmp
popf
and
leave
inc
leave
mov
test
into
clc
out
inc
and
inc
xlat
sbb
push
popa
out
in
pop
les
pushf
in
mov
mov
test
jge
mov
int3
xor
int
sbb
out
bound
in
addr16
inc
add
inc
enter
ret
mov
xor
cld
and
test
ja
pop
clc
mov
sahf
lock
iret
int
movsb
and
jle
mov
push
scas
sub
xchg
xlat
jnp
push
dec
xor
xor
fwait
in
sti
pop
nop
das
xlat
gs
mov
mov
mov
shlb
movsb
inc
pop
add
outsb
ds
and
popf
cmpsl
push
lods
jnp
fbstp
dec
lds
or
jne
call
loop
dec
pop
icebp
push
inc
xchg
loop
hlt
aam
sbbb
mul
fadds
mov
aam
push
pushf
inc
or
test
int3
mov
scas
jecxz
push
dec
inc
aaa
pop
mov
dec
pusha
or
push
sub
jg
mov
mov
sbb
pop
cld
in
pop
rol
ljmp
push
push
mov
push
xchg
out
cmp
and
lahf
dec
sbb
mov
int
or
stc
cmc
cmp
add
insl
mov
xor
pushf
popa
sbb
adc
daa
out
push
andb
push
push
jnp
push
imul
xor
jo
fcomp
lahf
mov
in
mov
cs
in
push
fyl2x
out
cli
ja
inc
int
push
shlb
out
push
inc
sub
cmpl
scas
adc
cwtl
push
mov
mov
dec
repnz
jns
sbb
call
xchg
lea
xor
mov
jae
sub
iret
xor
test
mov
gs
jmp
jmp
adc
xchg
je
lret
push
sbb
cmp
mov
enter
in
hlt
mov
sub
out
xor
out
mov
inc
sbb
inc
xchg
dec
cmp
sub
dec
pop
ja
xlat
out
and
loopne
cmp
lahf
xor
push
arpl
xor
mov
movsl
mov
loope,pt
mov
pop
loopne
adc
mov
add
mov
outsb
aad
sub
fucom
pop
adc
mov
test
in
repz
or
cwtl
clc
fs
pop
and
add
or
in
nop
cmp
repnz
fstpt
pop
addl
into
xor
mov
mov
lods
push
test
ss
nop
sub
aad
push
mov
divb
push
into
mov
ret
jb
mov
inc
imul
mov
add
mov
mov
int
rcrl
enter
rcll
cld
call
sub
sahf
daa
out
pop
jbe
popa
les
dec
lea
ret
call
out
ss
cmp
andl
cmpsl
aad
data16
lcall
rcll
sub
les
mov
xchg
jl
cmpsb
mov
test
xor
sbb
fistpll
mov
xlat
or
call
pop
pop
xchg
sahf
int
and
and
xchg
jnp
loopne
jecxz
gs
in
push
pop
adc
loopne
push
aad
adc
mov
xchg
cmp
adc
ret
sbb
pop
insb
sub
js
push
in
in
jmp
mov
bound
jmp
mov
pop
sqrtps
sub
hlt
mov
into
rcrb
xchg
sub
xchg
test
repnz
push
test
jle
or
xor
xchg
arpl
sub
dec
xor
sbb
subb
xor
mov
push
jno
lahf
popf
mov
xchg
in
fwait
aam
mov
inc
add
cs
sahf
out
insl
inc
mov
jg
int3
ffree
addr16
xchg
inc
imul
jl
pushf
rcl
rol
xchg
xchg
cmp
cltd
xchg
dec
xor
inc
dec
jno
inc
cmp
push
js
movsl
mov
jns
pushf
push
xor
lcall
mov
mov
dec
add
mov
mov
mov
adc
mov
sbb
add
inc
sarb
lret
mov
inc
stc
popf
aad
fldl
clc
dec
and
cmpsb
pusha
imulb
jb
aas
sbb
or
add
setp
insl
rcrl
outsb
jae
and
mov
aam
data16
cmc
sbb
mov
mov
scas
lods
mov
or
in
int
mov
xor
mov
lds
stos
test
sbb
stos
cwtl
in
rcrl
js
outsl
lcall
adc
addr16
xchg
mov
mov
clc
leave
xchg
ficoms
imul
into
adc
pop
test
insl
cmp
or
cmp
sahf
sub
add
mov
dec
dec
and
cmc
xchg
mov
add
push
xchg
sbb
add
pop
or
adc
mov
outsl
sbb
pop
loope
xor
pop
jb
in
or
scas
push
add
arpl
jp
jg
mov
cld
lea
xor
jg
sub
repnz
lock
cmc
call
cs
xlat
sbb
out
popf
aas
jp
in
sub
insb
or
es
xchg
cmpsb
pop
sub
dec
jae
testl
lods
call
inc
sub
cltd
movl
jl
dec
fbld
pop
rcl
jmp
or
shr
cmp
push
and
je
push
and
clc
sarl
fstl
sarl
cmp
aad
cld
repnz
dec
leave
sbb
outsb
stos
int3
fistps
cld
adc
mov
pop
enter
arpl
fs
cmp
jnp
test
jge
sub
outsb
push
cli
and
and
sub
jb
jle
inc
xchg
mov
ret
fsubrs
repz
xchg
mov
xor
js
fs
cmp
into
jno,pn
jne
aad
inc
adc
xor
scas
xchg
push
scas
sbb
fimuls
jmp
lret
mov
jo
into
js
data16
insb
push
sbb
out
xor
xchg
jmp
pop
fsubrl
pop
inc
shll
bound
jns
add
inc
imul
ja
mov
lods
dec
mov
jo
pop
cmove
dec
ja
add
pushl
pop
add
jecxz
adc
cmp
nop
ljmp
xor
inc
pop
sbb
iret
cld
dec
xlat
mov
ret
and
popf
lds
xor
pop
leave
jg
push
test
push
in
cmp
ror
loope
jnp
addr16
inc
jno
xor
cmp
popf
cmpsl
xor
fdiv
addr16
cmp
adc
dec
clc
loope
add
inc
mov
cmp
data16
mov
inc
inc
jl
xlat
add
popa
xorb
loop
cmp
adc
cmp
cmpsb
lods
test
xor
movsl
pop
jecxz
in
inc
mov
mov
push
orl
sub
xor
or
out
mov
iret
call
mov
mov
xchg
test
or
jnp
subl
xchg
mov
adc
mov
xor
mov
mov
lahf
call
mov
xchg
cmpsb
push
push
sub
es
shrl
or
pop
sub
xor
jg
lcall
push
pop
xor
js
sbb
or
movsl
xchg
xchg
loopne
lret
idivb
fwait
push
push
sbb
loop
inc
loope
mov
aam
cli
jbe
jno
jp
push
and
push
arpl
or
inc
mov
jmp
mov
pop
mov
dec
fnstcw
cmpsb
sbbl
rol
sub
dec
and
out
cmc
dec
mov
or
push
je
arpl
sbbb
test
out
pusha
pop
in
mov
negl
lock
and
adc
and
jns
or
test
fistl
lds
test
push
jle
mov
mov
mov
jmp
and
push
mov
or
push
loope
int
fmull
mov
and
mov
jne
lcall
jne
lds
sbb
push
inc
mov
sub
pop
jne
imul
xchg
jmp
xlat
sarb
push
mov
inc
sub
dec
xor
jns
add
rcrl
xchg
cmp
push
rcr
push
cld
clc
lods
and
mov
sbb
mov
dec
sub
pusha
test
adc
sbb
scas
mov
push
in
or
inc
mov
mov
insl
stos
push
fucomip
mov
int
add
sbb
ret
hlt
sub
leave
pop
lea
xchg
and
rcr
movsl
sbb
add
ja
sub
push
pop
sbb
bound
out
and
and
fistl
pop
mov
pop
sbb
ret
cli
jg
inc
movsl
out
mov
add
mull
rcrb
hlt
adc
cld
xchg
or
mov
test
push
push
out
rolb
mov
and
and
and
sub
bnd
xchg
cmp
gs
repnz
sbb
jbe
xchg
pop
ficoml
push
pop
xchg
sti
scas
push
clc
push
fwait
repz
je
add
cmpsl
dec
shll
out
or
call
jo
mov
xor
mov
xchg
push
jb
addb
inc
push
out
insl
mov
jmp
imul
and
and
popa
incb
cmp
mov
sub
mov
popf
ret
movsl
ds
mov
in
add
in
repz
int3
out
fistps
rcrb
sub
fwait
shll
mov
icebp
or
inc
mov
lds
mov
js
ljmp
dec
aaa
std
or
push
mov
cld
orb
repnz
mov
addr16
mov
cmpsb
enter
das
add
jbe
pop
fistps
and
data16
adc
mov
pop
and
cld
adc
mov
dec
inc
jecxz
adc
push
jp
mov
fdivl
dec
or
cmpsl
fwait
sbb
bound
out
arpl
add
push
xor
data16
mov
imul
sbb
outsl
and
mov
cmpsb
sarb
or
and
lds
inc
stc
addr16
xlat
cld
xchg
sahf
movsl
flds
mov
les
test
rcl
pop
cmp
in
jl
int
sti
hlt
push
dec
shlb
inc
xchg
mov
pop
outsl
jmp
ret
icebp
push
shr
cmove
fbld
inc
stos
xchg
inc
jge
adc
mov
fimuls
insb
clc
mov
lahf
push
pusha
xor
addr16
jbe
push
push
pushf
fildll
inc
std
aas
test
dec
mov
mov
orl
cmp
int
popf
test
xchg
mov
push
and
enter
daa
jmp
mov
and
pop
dec
lret
outsl
push
scas
sbb
aad
sbb
push
es
mov
sbbb
jb
dec
sbb
cs
int
cmpsb
jne
les
xchg
pop
add
adc
sub
xor
add
cmc
test
out
movb
mov
adc
jecxz
or
dec
and
idivl
sub
jnp
mov
xor
dec
hlt
mov
jae
inc
jp
pop
adc
sarb
subl
scas
and
jae
push
mov
adc
or
pop
cmp
rcl
cmpsl
sub
add
cmpb
cld
loope
fs
imul
inc
push
cmp
xchg
sub
call
orb
out
push
insl
and
or
shll
imull
pop
adc
fs
ret
ja
ss
das
pop
lock
or
ljmp
sarl
pop
pop
adc
lods
xchg
pop
fadds
sub
cmp
sahf
cmp
mov
enter
mov
push
lock
jle
lock
xchg
gs
pusha
enter
push
mov
inc
or
add
lret
cmp
les
sarl
sbb
sub
lcall
adc
loope
push
xorb
jo
rcrl
sbbb
jl
rolb
or
xchg
enter
movsl
push
adc
xchg
or
loopne
test
aam
push
cmp
pop
jae
pop
xchg
xchg
dec
movsb
lock
imulb
xchg
out
nop
cmp
mov
popa
adc
add
dec
repz
jb
lea
cltd
scas
das
pop
addb
das
mov
sub
mov
xor
dec
cmc
out
hlt
xchg
mov
sub
dec
push
loope
jbe
cmpsb
stos
or
into
aad
in
dec
movsl
fidivs
ret
mov
outsb
push
and
pxor
and
add
lret
nop
dec
xor
mov
icebp
cmp
xchg
and
cmp
sbb
cmp
mov
push
lcall
xchg
xchg
sub
xchg
es
rolb
push
inc
call
or
stos
leave
imul
add
out
stos
dec
pop
add
mov
notb
dec
sbb
ja
int
add
int3
lret
rclb
hlt
push
jp
mov
add
mov
lret
scas
mov
out
lret
movsb
fwait
out
ljmp
pop
pop
cmp
addr16
cltd
int3
or
sub
mov
sbb
mov
or
and
aam
inc
leave
sbb
sub
jo
xchg
gs
cmp
cmp
xchg
push
jae
sub
inc
in
imul
leave
add
mov
imul
in
js
mov
mov
sub
pop
in
jb
mov
jp
jge
test
dec
ljmp
std
mov
cmpb
pop
enter
or
insb
das
sub
je
mov
imul
je
stos
insb
sub
js
dec
xor
repnz
outsl
insb
lea
out
outsl
mov
sahf
fbstp
push
cmc
btc
mov
dec
rcrb
and
mov
test
mov
cmp
nop
xor
out
lods
push
add
dec
cmpsb
pop
push
push
bound
mov
mov
push
subl
jl
cltd
inc
cmc
inc
pop
jp
inc
sub
scas
decb
les
mov
nop
data16
inc
cmpsb
lahf
imul
inc
adc
test
mov
cmc
cmc
pop
in
icebp
mov
push
add
lods
cli
sbb
pop
mov
or
in
adc
push
js
push
out
xchg
sarb
aam
mov
nop
push
ret
shll
push
adc
subl
add
js
cmp
icebp
jl
jns
popa
xor
push
mov
fcomi
xchg
aas
cld
enter
mov
int
lcall
mov
repnz
inc
imul
insl
or
pop
fisttpll
pop
arpl
mov
mov
mov
xor
mov
mov
adc
aad
dec
or
adc
imul
test
mov
orl
cmp
pop
test
adc
add
lods
stos
jmp
cld
cs
push
hlt
sbb
in
addr16
pop
push
test
sti
inc
neg
faddp
lret
test
pop
sti
imul
stc
clc
xor
decl
cmpsl
jnp
inc
scas
inc
cwtl
clc
or
add
clc
fwait
out
fimuls
mov
or
adc
xchg
or
leave
push
push
lods
xlat
cltd
in
cmpsb
mov
and
xlat
das
lds
lahf
sub
mov
and
xchg
hlt
mov
into
testb
and
sti
mov
repz
push
jbe
pop
jp
jnp
mov
clc
jge
pop
sbb
jecxz
xchg
adc
dec
or
mov
inc
sub
add
repnz
lods
push
jge
idivb
or
imul
lret
repnz
loopne
orl
cmp
cmp
sbb
lods
sbb
subl
dec
sbb
das
mov
sub
xor
hlt
mov
push
sub
jl
lds
sbb
loop
in
iret
insb
xchg
out
jbe
mov
cmpb
and
mov
fsubr
int3
ja
aas
inc
hlt
jnp
inc
shl
sti
cmp
bound
mov
jp
sub
push
cmc
arpl
sub
out
mov
aam
push
mov
push
lahf
inc
aam
xor
lret
jmp
mov
outsb
cmpsl
mov
hlt
out
sbb
int
jl
xchg
or
out
ret
push
int
cmp
sbb
mov
outsb
gs
dec
pop
xor
sbb
add
ret
mov
cmp
xor
push
hlt
cmp
out
cld
repz
mov
jg
mov
adc
sbb
mov
popf
bnd
sbb
imul
loopne
punpcklwd
aam
arpl
cmp
mov
pop
clc
clc
inc
fadd
insl
shll
orl
enter
push
fsubr
xor
sub
aaa
pop
sub
jg
adc
fdivrl
push
cmp
mov
and
loopne
xor
jbe
xchg
xchg
aad
inc
movsb
fildll
sarl
mov
add
aad
lret
adc
rcrb
adcb
inc
mov
fwait
push
mov
seto
or
sbb
lahf
lea
mov
mov
adc
mov
sub
pop
sbb
pop
and
out
pop
adc
pop
xchg
push
mov
add
repz
into
pop
ss
out
pushf
and
jae
ja
mov
roll
imul
call
jmp
adc
jmp
xchg
pop
inc
jnp
and
mov
scas
in
adc
sub
idivb
and
mov
ds
jb,pn
notl
dec
dec
xchg
cmp
mov
pop
inc
jge
icebp
jg
rorl
dec
mov
xchg
mov
xchg
je
rolb
imul
stos
xchg
xor
sbb
or
push
push
loopne
mov
or
mov
fbld
jmp
push
mov
clc
mov
inc
rolb
sbb
mov
mov
pop
int3
pushf
mov
aaa
add
gs
pop
pop
pop
pushl
adc
sahf
into
pop
ds
ljmp
xchg
imul
dec
inc
sbb
imulb
rcrl
sub
ljmp
scas
aas
daa
test
push
int3
jb
or
cli
and
cmpb
lods
mov
call
ficomps
rcll
mov
mov
xor
shl
pusha
sarb
mov
push
mov
cmp
push
mov
shlb
jmp
jmp
push
cli
rorb
jl
dec
cwtl
adc
push
adc
jp
mov
in
mov
dec
pop
daa
adc
shrb
test
and
jle
pop
lds
sbb
pushf
xchg
nop
cmp
sahf
add
dec
lock
or
xchg
movsb
cli
imul
mov
push
jecxz
cmp
and
cmpsb
pop
mov
loop
push
fidivs
es
add
cltd
sahf
repz
test
imul
icebp
xor
enter
repnz
insl
mov
xor
dec
adc
xchg
mov
jno
out
in
les
xchg
cld
int
and
call
sti
jp
push
call
and
movsl
clc
gs
sub
lods
pop
or
jge
cmp
pop
and
ja
ret
pop
add
dec
rcrl
mov
mov
pop
xor
push
dec
and
out
shrb
xlat
adc
and
mov
jo
lods
lea
or
ja
loopne
fnstsw
jno
mov
sub
es
aam
test
or
xchg
addl
mov
jbe
cld
pop
mov
add
push
jmp
stc
sti
cmp
adc
ds
cmpsb
sub
sub
imul
shrb
mov
sub
add
xchg
fdiv
int3
dec
adc
jmp
xchg
cmpl
xchg
push
popw
into
clc
loop
mov
hlt
and
pcmpgtw
pushf
dec
fmuls
inc
lret
cmc
inc
fs
icebp
sti
and
test
shll
jg
data16
xchg
dec
dec
ret
imul
xlat
fsubs
jg
mov
imul
inc
xchg
jge
popf
pusha
pop
cmp
mov
push
mov
xor
movsb
out
push
jmp
out
xor
inc
and
and
lret
mov
cmp
cmp
sub
repz
add
cmpsl
sarb
sub
sti
test
mov
subb
in
shrb
push
or
mulb
mov
push
stos
loope
sbb
repz
mov
mov
data16
into
test
idivb
inc
hlt
cmp
fisttpll
inc
out
pushf
out
je
ljmp
rcrl
ja
test
push
sbb
stos
or
dec
cmpsb
sbb
mov
pop
flds
mov
nop
push
jnp
push
outsb
xor
shrl
xchg
inc
in
mov
lret
enter
push
jl
adc
inc
cmpsl
xchg
jle
adc
aam
sub
cmp
pop
mov
adc
pop
xor
rorb
lcall
xchg
mov
inc
and
test
fcmovne
out
lods
imul
mov
rorb
lahf
xor
fstpt
xchg
testb
pop
ljmp
dec
adc
daa
jl
add
fisttps
push
xor
xor
jmp
xor
mov
fnop
jge
loope
mov
insb
bound
mov
js
jne
addl
dec
call
pop
popf
and
addb
mov
pop
mov
xchg
cmp
cld
lds
jno
js
fldcw
lods
mov
xchg
jnp,pt
adc
add
dec
push
mov
sarw
lods
testl
fisubrl
or
das
dec
enter
and
stos
push
test
fidivrl
pusha
xor
jbe
sub
xchg
stos
xor
mov
push
jo
mov
pop
add
or
lcall
aam
cltd
cld
jbe
das
and
xor
jge
and
iret
ret
icebp
ss
std
or
imul
pop
test
or
les
es
dec
adc
jmp
cltd
jmp
sub
xchg
adc
jno
decl
test
sahf
stc
pop
and
inc
int3
ja
cmpsl
scas
pop
dec
inc
stc
sub
shrl
inc
outsb
lahf
sti
mov
jp
xchg
adc
js
icebp
xor
jnp
dec
fnstcw
insl
rcrb
pusha
dec
push
pushf
push
lods
xchg
push
and
push
enter
movsb
cld
cmp
iret
int3
aam
es
test
shlb
sub
xor
dec
stc
sub
icebp
rcll
add
cld
xlat
enter
test
insb
ret
dec
inc
enter
push
push
dec
cmp
push
jl
paddq
xor
jmp
mov
or
out
into
psubusw
pop
adc
pop
push
dec
out
push
sub
pop
imul
cwtl
mov
lret
add
jge
lcall
mov
xor
clc
jb
xor
jecxz
imul
in
cmp
shrl
mov
cmp
fistps
test
inc
mov
mov
out
fdivrp
jl
xchg
push
push
xchg
and
loope
mov
aad
lret
cmp
xchg
movsb
mov
jle
jge
je
sub
mov
test
pop
sub
sub
push
adc
mov
push
mov
call
loopne
iret
push
adcl
popa
cli
cld
fdivl
inc
negb
and
ja
jno
jg
notl
jbe
js
adc
sub
into
cmc
push
pop
mov
mov
inc
xor
or
aad
cmp
sub
popa
daa
cmpsl
xor
push
push
add
sarb
imul
mov
jmp
aad
jo
or
movsb
cld
je
mov
dec
jecxz
xchg
call
push
scas
imulb
sahf
popf
inc
pop
mov
adc
mov
fildl
cmp
mov
fisubrs
ffree
xor
add
jno
mov
mov
pop
mov
fwait
or
repnz
jmp
pushf
sub
push
add
or
inc
adc
incb
fcom
icebp
push
stos
cmpb
nop
jno
jae
xchg
fs
xorb
clc
insb
lret
jns
inc
mov
xor
lock
daa
push
mov
cli
scas
pop
jae
cltd
jae
jge
mov
data16
imulb
imul
iret
sub
daa
xchg
adc
lods
fcoms
scas
xchg
xchg
cmp
sub
mov
ja
fisubrs
insl
mov
aas
lcall
mov
inc
dec
inc
and
cmp
mov
ret
jp
sahf
shr
lcall
or
cmp
dec
adc
jp
pusha
std
repnz
xchg
shlb
test
cmpb
adc
add
call
in
scas
in
fcoms
mov
and
mov
pop
outsl
in
xor
push
jp
pop
addr16
xchg
mov
sahf
insl
sti
mov
inc
mov
lods
insb
int3
pop
pop
xchg
sbb
sub
aas
jle
ffreep
mov
js
sbb
sarb
jge
xor
push
loope
mov
fwait
sub
fmul
out
test
mov
gs
jo
shrl
sub
fs
cmc
push
mov
neg
insb
jb
jmp
ficompl
adc
and
jae
mov
adc
push
arpl
inc
std
jp
incl
pop
stc
add
hlt
pop
daa
xorb
xor
sub
adc
imul
int3
repz
aam
xchg
stc
mov
mov
dec
sbb
mov
mov
sub
adc
adc
cmp
xchg
mov
xchg
xchg
daa
cld
dec
cli
mov
ja
mov
std
mov
stos
repnz
pop
pop
mov
cmp
xchg
sbb
jns
enter
aas
ret
enter
ret
inc
or
push
ljmp
divl
dec
je
pop
aaa
ss
inc
ret
xor
cmp
rclb
lcall
and
or
lock
cli
cmp
or
or
insb
cmp
adc
xchg
sbb
sbb
shlb
xor
dec
adc
adc
mov
dec
cmp
mov
cltd
push
pop
push
mov
dec
mov
dec
cs
bound
mov
fucomip
and
xor
fcomps
dec
clc
lds
xchg
push
stos
insb
sub
dec
mov
fsubrl
bound
push
adc
lods
andb
add
pop
popf
loope
adc
aam
lret
xchg
out
lods
mov
shr
dec
inc
incl
jge
lcall
lret
pop
imul
inc
adc
adc
or
push
in
sub
hlt
xchg
mov
inc
mov
gs
sub
lahf
mov
insb
jno
xchg
mov
into
mov
int
mov
add
nop
cmp
xchg
mov
adc
and
jae
jmp
adc
arpl
sahf
sub
push
dec
pop
mov
mov
fwait
xchg
test
fisttpll
mov
mov
fldcw
into
mov
pop
or
mov
pop
rorl
imul
or
in
pop
mov
gs
pop
aas
push
mov
dec
mov
icebp
mov
and
jbe
clc
mov
xlat
loop
in
rorb
jecxz
add
cmp
jle
mov
mov
xor
pop
pop
adc
das
lods
mov
bound
mov
mov
xorb
inc
insb
outsl
cmp
push
pop
sbb
jno
es
push
add
test
and
movsb
push
outsl
push
push
push
push
fwait
imul
data16
cltd
mov
jae
mov
pop
aam
gs
xchg
adc
call
xchg
xor
aas
sbb
xor
jge
mov
mov
inc
sbb
fldenv
mov
mov
enter
cmc
ljmp
mov
iret
or
inc
push
icebp
pusha
nop
rcrl
bound
xlat
je
scas
iret
pop
std
xor
mov
cli
cmp
mov
les
dec
xchg
jl
jae
test
mov
je
sbbl
sub
cmp
scas
sub
jo
mov
out
in
mov
outsb
xchg
jge
pusha
jb
jg
adc
fwait
or
mov
fwait
xchg
fdivp
loop
push
fs
addr16
and
mov
or
sahf
sbb
bound
clc
or
sbb
mov
fcomi
loope
addb
gs
adc
sbbb
and
xchg
sbb
jle
push
jle
in
xor
scas
filds
adc
adc
mov
lahf
inc
mov
enter
cld
pop
jb
divl
es
inc
inc
jo
pushf
mov
cmp
stc
shlb
jne
out
add
cmp
filds
xchg
add
addl
andl
push
jne
das
mov
push
aam
mov
popf
ret
jl
popf
jne
aad
addr16
inc
and
fistl
fs
xlat
fstpl
add
mov
mov
pusha
xchg
pop
cld
push
movsl
int
dec
push
stos
add
sti
cmp
adc
inc
clc
sub
iret
fsubrl
pop
mov
jb
rolb
sbb
adc
in
adc
cmpsl
mov
inc
fwait
test
fwait
out
daa
sbb
pop
pop
jmp
push
mov
cmp
in
fisttps
sub
pop
dec
lods
add
xchg
roll
aaa
mov
add
das
loop
push
jge
fcomps
aaa
push
push
cmp
insb
mov
clc
setl
lcall
ss
test
cmp
mov
add
out
dec
daa
sarb
rcll
mov
add
shrb
negb
jnp
sbb
loop
ret
fsubrl
xlat
add
clc
std
push
push
daa
adc
cmp
adc
orl
enter
rcrl
mov
jnp
dec
lcall
sub
cltd
jge
out
pop
ljmp
nop
fnstsw
icebp
push
sbb
jp
mov
mov
xor
xchg
cmp
cmp
mov
cmpsl
fs
mov
fstp
push
sub
push
das
insb
in
sahf
adc
mov
testb
jmp
fcmovnu
test
mov
inc
pop
jno
jge
rcll
lds
add
loope
shll
mov
cmp
cmc
sub
push
leave
ljmp
or
jo
cli
push
xor
fs
mov
sub
in
and
hlt
jle
cltd
test
adc
and
inc
les
jmp
loope
jb
fwait
cmpsb
outsl
imul
or
push
imul
pop
pushf
js
repz
clc
aam
aas
lods
or
pop
jecxz
stos
xor
prefetcht1
cmc
push
jae
roll
pop
xchg
mov
mov
je
cli
or
xchg
cwtl
popa
mov
pop
mov
fcmovnbe
jae
pop
aas
hlt
mov
pusha
push
sub
ljmp
cmp
rcl
subb
cmp
daa
sahf
jae
clc
and
sub
adc
or
scas
mov
mov
inc
and
sbb
bound
jp
lock
mov
icebp
jns
mov
xor
jl
test
mov
movsb
sub
scas
xor
xor
out
push
imull
jb
aam
pop
mov
jl
jnp
mov
popf
lds
push
sub
sti
addr16
inc
push
test
add
xchg
shl
scas
lock
shr
stos
aas
sbb
cld
mov
dec
mov
fsub
mov
jl
dec
hlt
sbb
clc
stc
lret
in
xchg
jp
inc
dec
lds
idivl
add
lds
add
xchg
push
lret
in
sub
add
mov
or
ljmp
outsb
scas
jno
xchg
add
mov
jae
push
sub
xchg
pop
push
lret
push
mov
test
adc
jmp
loopw
callw
cli
addb
cmc
iret
and
mov
mov
jne
dec
adc
cmp
aas
hlt
mov
fdivrl
xchg
mov
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
fistpll
lcall
or
cltd
pop
imul
rcrl
and
gs
mov
je
push
cwtl
jg
decb
push
fdivrp
pop
mov
ljmp
sub
jns
sbb
add
xchg
mov
mov
outsl
push
icebp
pop
sbb
pop
sub
dec
dec
dec
cmp
mov
fistpll
mov
mov
xlat
loopne
inc
push
pop
fnsave
roll
xchg
int
xchg
rcrb
push
icebp
xchg
movsb
add
fs
roll
push
lods
cwtl
mov
test
repz
and
gs
cli
je
mov
cmpsb
pop
inc
mov
xor
rorb
inc
jmp
fs
or
icebp
int3
or
gs
clc
pop
jge
mov
subl
in
jmp
adc
cld
mov
stos
mov
adc
dec
adc
xor
int3
dec
clc
adc
test
jecxz
push
inc
outsb
outsb
shlb
dec
sub
decl
insb
loop
jnp
lods
sbb
adc
lret
mov
mull
adc
pop
push
cli
jmp
cwtl
stos
stc
shl
xchg
inc
orl
xor
xchg
cmc
jae
loop
sbb
pop
xor
inc
pop
mov
cltd
hlt
mov
mov
lahf
xor
inc
or
inc
xor
inc
mov
cmp
add
push
sbb
lods
xor
cmpsl
std
or
or
inc
sbb
int
adc
outsl
daa
dec
adc
movsl
cmp
sbb
dec
inc
rorl
dec
stc
mov
sub
cmp
movsl
cld
adc
and
ss
jg
pop
mov
mov
ss
lock
outsl
xlat
sub
sbb
test
mov
das
and
insb
pop
sub
popf
fldenv
neg
add
jmp
push
xchg
rcrb
sub
cmp
sub
add
or
test
jle
xor
shrb
mov
lcall
sbb
mov
xor
xor
sbb
mov
test
lahf
mov
xor
cmp
add
in
arpl
loop
pushf
int3
out
orb
mov
mov
insl
test
lds
push
push
adc
pushf
aas
in
cld
lods
inc
jmp
ret
xchg
cmpsl
cmpb
lret
push
mov
lret
cmp
shll
inc
xchg
or
xchg
mov
js
scas
jmp
imul
lock
push
outsb
mov
lret
nop
das
dec
aaa
jmp
push
nop
aas
sbb
mov
sbb
int
xor
cmpsb
push
hlt
xchg
fwait
or
xchg
movsl
loop
test
xchg
leave
and
sub
xchg
int
jbe
test
lock
out
add
scas
lock
int
mov
sbb
test
mov
lock
push
ror
ss
inc
sbb
mov
jle
add
mov
xchg
leave
frstor
push
lods
nop
addr16
movsb
roll
xor
cwtl
mov
inc
lods
loop
leave
pop
mov
in
movsb
inc
xchg
dec
aam
decb
jns
sahf
pushf
stos
loopne
cmp
pop
cmp
add
in
xlat
pusha
std
mov
lds
les
dec
fldenv
cmp
lods
pop
fsts
cld
jae
and
pop
arpl
push
movsl
js
cmc
and
lods
ret
lea
sbb
and
fisubl
jno
movl
xor
cmp
mov
cmp
incl
inc
lahf
pop
iretw
push
mov
lahf
ds
adc
cmp
dec
xor
je
add
push
cltd
inc
mov
or
xchg
fbstp
push
sahf
test
adc
sbb
add
test
cld
in
scas
or
xor
ret
cmc
fstpt
inc
push
mov
cs
push
push
rcll
dec
leave
mov
sbb
rcr
sbb
add
test
std
cmp
cmp
scas
test
pop
xor
sbb
pop
xor
lock
xchg
push
dec
xchg
mov
stc
dec
leave
push
cmp
cs
pop
sahf
int
loop
and
cmc
xorb
cmpl
loopne
adc
push
aad
xor
fcom
mov
fimull
pop
into
hlt
jle
arpl
es
cmp
stos
in
push
daa
imul
xor
addr16
xor
cmpsl
mov
insb
add
sbb
add
jp
sbb
dec
addr16
xchg
mov
iret
fldl
in
mov
daa
or
xchg
arpl
aas
popa
xorl
or
cmc
jecxz
add
test
ret
pusha
ret
pop
push
mov
shlb
fdiv
and
and
daa
scas
mov
data16
mov
int
or
xchg
xchg
pushf
jp
sbb
mov
clc
ret
sbb
mov
mov
lret
das
loop
in
scas
sub
lods
cmpsl
test
js
sbb
les
adc
jae
hlt
clc
cmp
hlt
loop
mov
sub
jb
mov
das
or
xchg
ret
dec
in
inc
cmp
insl
lcall
jo
in
inc
fisttps
frstor
xchg
lret
xor
scas
stc
sbb
push
lret
and
cs
sarb
nop
cmp
jbe
and
lods
lock
aad
sub
fistpl
sbb
scas
aam
sbb
insl
mov
or
outsl
sbb
inc
jle
clc
stos
add
sbb
js
loope
xor
fstps
std
fidivs
aad
sbb
xor
sub
push
fldl
inc
out
jl
mov
iret
xchg
frstor
daa
loop
pusha
loope
adc
or
cs
imul
push
imul
ret
bound
ja
dec
sub
fcoml
pop
fcomi
mov
push
push
sub
cmp
push
sahf
jg
out
sbb
mov
adc
dec
out
mov
icebp
sahf
call
xor
jmp
into
test
or
dec
mov
push
int
jo
pusha
xor
cmp
scas
int3
fildll
push
sbb
lret
rol
add
sbb
test
js
jns
inc
fdivrs
pop
aad
sub
cmp
add
cmpsl
lret
aad
pop
stos
aas
outsl
push
sub
mov
test
or
push
aaa
dec
add
mov
xlat
mov
cmpsl
mov
iret
fcmove
fcmovb
test
dec
hlt
and
pusha
mov
push
mov
insb
sbb
lret
xor
and
pop
push
push
xchg
xchg
inc
fimuls
jnp
jle
jge
add
imul
add
mov
jle
mov
fsubrl
jo
jle
rolb
dec
jne
loopne
dec
and
leave
aaa
adc
dec
ret
out
stos
test
scas
ds
pop
xor
icebp
call
sub
adc
adc
or
pop
loop
jl
inc
xor
xchg
pop
adc
test
xchg
repnz
add
push
ss
and
adc
or
fildll
mov
test
inc
cltd
nop
cld
jne
dec
xchg
sarb
popa
mov
pusha
mov
xor
sbb
aas
add
lods
je
out
and
fs
das
xor
push
fldlg2
movsb
mov
dec
xchg
rcrb
sub
push
xrelease
mov
cmpsb
sub
fstp
sti
pop
pop
inc
inc
aas
cli
loope
push
scas
movsl
je
or
sub
insb
or
adc
jae
cmp
clc
xor
aas
addr16
lods
sub
fcoms
orb
in
enter
pop
push
lahf
pushf
outsb
jp
test
fmulp
mov
les
push
sub
data16
dec
and
jb
pop
scas
cwtl
and
or
xor
and
xchg
cmp
outsl
inc
adc
xchg
push
adc
outsb
out
inc
shl
push
cmp
dec
scas
cli
aad
fiadds
cmp
push
jmp
aad
roll
or
jle
incl
add
jecxz
jnp
mov
fs
pushf
jmp
ret
test
stos
jns
push
adc
push
and
arpl
scas
xchg
and
ret
dec
adc
repnz
and
mov
lret
ljmp
cmpsl
jo
subb
or
jg
jle
bnd
adc
cli
inc
mov
pushf
insl
mov
pop
lods
inc
adc
mov
imul
out
mov
iret
push
sub
push
xchg
dec
data16
ja
push
xor
xor
loope
and
cmp
scas
fstpl
les
xor
dec
pop
adc
mov
je
mov
aas
lret
mov
mov
lods
sti
sub
out
call
jno
mov
xchg
mov
xor
cmp
xchg
or
jge
das
ss
ret
jnp
ret
mov
or
cmpb
movsl
mov
xchg
mov
xor
mov
sbb
testb
stos
add
cmpsl
ds
in
lahf
jg
xchg
repz
in
push
sbb
into
inc
lods
mov
into
rcrb
mov
add
mov
pusha
icebp
cld
inc
adc
lret
je
fstl
hlt
and
add
jnp
nop
adc
lods
inc
xchg
xor
and
out
jmp
mov
fcmovu
xchg
cmp
outsb
or
jmp
xchg
jb
test
shl
dec
in
cmp
outsb
inc
mov
cmp
inc
sahf
std
mov
ds
fcompl
adc
or
dec
popa
sub
xchg
cmp
jl
inc
imul
movsb
leave
or
push
xchg
push
shr
mov
sbb
pusha
jecxz
xor
fs
dec
aas
add
lods
aaa
inc
sbb
sbb
insl
mov
cs
lods
cld
mov
add
enter
or
xchg
loope
push
push
imul
pop
xchg
and
ljmp
addr16
fldenv
xchg
or
popa
mov
cmp
adc
cs
dec
pop
mov
mov
cwtl
es
jae
sbb
dec
inc
sub
pop
mov
aad
xchg
sbb
out
ds
push
sahf
cmp
sub
pusha
pop
push
cmp
cmp
sbb
repz
mov
or
xor
adc
pop
clc
cltd
outsl
loopne
in
cmc
fdivrl
inc
mov
cmpsl
rcl
jg
add
shrl
insb
and
dec
mov
push
mov
iret
jecxz
adc
pushw
push
enter
push
fistl
sbb
jo
cmpxchg
flds
sub
or
test
cmp
ret
jecxz
jp
sbb
hlt
mov
push
mov
aaa
xchg
dec
test
pop
ret
lea
jmp
pushl
outsw
push
orl
pop
daa
fcompl
cmp
icebp
test
lods
adc
aad
cmpsl
pop
in
push
test
hlt
mov
test
jns
fdivrl
fwait
mov
push
rcll
pop
lcall
cmp
lret
cli
adc
iret
push
add
into
insl
add
mov
xchg
movsb
rcr
cmp
or
lods
xchg
sub
xchg
mov
or
sbb
out
pop
xor
loop
fucomip
add
out
jnp
jp
jnp
xchg
xor
adc
sahf
pop
adc
push
sbb
mov
in
adc
int3
into
loop
aam
rcrl
adc
aad
testl
leave
mov
stos
pop
fadd
and
or
iret
pop
xchg
inc
dec
lahf
mov
sarl
repz
popa
sarl
cmp
or
mov
cmp
pop
pop
cmp
dec
divb
jecxz
inc
push
insl
in
push
sub
mov
fsts
ret
push
xor
mov
inc
add
std
xor
fimull
mov
mov
in
imul
push
sbb
mov
dec
xor
lahf
lcall
sub
loope
and
insl
xor
aas
aas
push
daa
add
loopne
fisubrl
popa
jne
jno
cmp
mov
movsb
sub
mov
lock
sbb
sub
push
mov
pushf
lds
jmp
or
jo
mov
push
mov
aas
dec
popa
ds
jmp
or
lahf
jno
aas
dec
xor
lret
push
mov
mov
jecxz
js
mov
pop
add
ret
sub
and
in
mov
stos
lret
sar
fbld
cmp
mov
ljmp
jbe
leave
or
inc
cmp
inc
mov
mov
fsubl
pop
outsl
js
xor
dec
sbb
cmp
adc
fs
movswl
xor
clc
cmc
and
ret
pop
aad
movnti
add
and
xor
repz
lds
or
in
pop
arpl
icebp
fcomps
inc
popf
pushf
mov
mov
or
inc
mov
sbb
shlb
jnp
adc
enter
icebp
movb
scas
fcomps
pop
fwait
and
sahf
js
sti
or
stos
sti
pop
mov
and
lret
or
gs
ss
mov
pop
dec
es
stc
push
sbb
sub
cmpsl
and
sbbl
push
test
adc
fisttpll
call
out
das
mov
jae
bswap
fidivs
mov
add
sbb
or
jg
jbe
mov
js
in
ficomps
mov
mov
popl
jmp
pop
cmp
mov
cmp
fadd
dec
sbb
adcb
ret
mov
mov
xchg
outsb
xor
add
xchg
subb
into
mov
pushl
mov
fstp
stos
xchg
mov
push
idivb
ljmp
xor
dec
movsl
adc
mov
int3
inc
fwait
inc
notb
daa
sub
daa
jle
mov
loopne
or
cmp
rorl
sbb
cmp
leave
andl
sbb
pop
xor
test
out
insl
sbb
sarb
mov
ret
lods
imul
mov
jmp
arpl
cmpsb
addr16
sub
cmp
jbe
jp
mov
in
xchg
mov
adc
sbb
jmp
call
ficompl
xchg
aaa
insb
add
imul
scas
aas
adc
cmp
pop
push
jl
push
repz
cli
add
mov
mov
test
aam
sahf
sbb
sbb
and
mov
push
cltd
and
into
stc
enter
lcall
sbbl
mov
cmpl
insl
xchg
es
std
pushf
or
sub
cwtl
adc
lret
cmp
aam
data16
test
sti
test
sarb
aad
push
jbe
icebp
dec
outsb
outsl
fsubrl
pop
testb
sub
inc
repnz
pusha
pop
sub
sbbb
jnp
inc
jl
or
cltd
xchg
sub
adc
aad
jbe
cmp
jp
mov
imul
or
js
mov
cmp
cmc
decb
int3
add
test
dec
fsubl
mov
or
or
jae
das
pop
das
cltd
lret
sahf
movsb
add
test
and
mov
push
ljmp
ret
cmpb
lahf
cwtl
ret
imul
ja
negl
xor
or
mov
fistl
test
loope
sahf
call
jb
sbb
mov
int
hlt
aas
ja
sbb
pop
and
push
inc
lods
mov
cmp
out
ret
sbbb
lods
bound
mov
enter
xchg
fildll
out
cmp
mov
test
xor
pop
in
cmpsb
push
int
push
push
jne
mov
int3
xchg
xor
clc
icebp
push
cmpb
mov
mov
aam
pushf
icebp
cmp
mov
icebp
cmc
fstpt
push
inc
mov
jb
jbe
in
xor
push
ljmp
ljmp
inc
push
adc
sbb
inc
jo
mov
aas
xor
jne
push
fidivl
xchg
mov
xchg
test
xchg
adc
push
cmpsl
test
rorl
mov
sti
mov
sub
inc
mulb
int
lock
divb
ret
int
cmp
push
xor
fwait
jecxz
fidivrl
daa
jecxz
pushf
addr16
push
xchg
stc
xchg
test
mov
pop
pop
pop
outsb
sahf
sbb
test
sub
addr16
in
das
sbb
adc
cli
call
jmp
mov
push
dec
inc
movsl
jb
mulb
inc
pop
xor
lods
sub
mov
repz
daa
ret
outsb
adc
xor
push
mov
lret
push
mov
sbb
sbb
and
mov
es
testl
out
fiadds
dec
loop
shlb
xchg
std
stos
pop
push
inc
fiadds
mov
pop
mov
jmp
push
pop
repz
or
and
dec
ja
or
sbb
pushf
add
mov
icebp
mov
push
lock
int3
lock
jmp
and
xchg
lock
clc
test
lock
fs
imul
sub
ret
mov
addr16
adc
ss
fadds
imul
pop
adc
mov
sub
and
ret
in
cmp
push
lods
sub
inc
jl
lods
cmc
mov
pop
adc
les
xchg
inc
mov
test
dec
xchg
mov
addr16
bound
imulb
cs
pop
mov
rorl
xchg
loop
adc
ss
fwait
mov
out
addr16
lret
and
fcmovnu
cli
sub
mov
xchg
sub
jo
movsb
cmp
scas
adcb
mov
repnz
or
sahf
and
and
mov
in
pop
jne
aam
add
mov
xchg
test
mov
cmc
std
push
xor
cmp
xor
mov
insb
jmp
out
das
dec
in
sub
cltd
lcall
popf
mov
push
mov
jnp
sub
sub
mov
lahf
xchg
sub
cli
push
add
or
jae
dec
bound
sbb
iret
fwait
xchg
jbe
jns
cmp
pop
mov
lods
imul
mov
inc
popa
xor
insl
mov
sub
mov
add
dec
lahf
push
std
pop
mov
inc
sub
mov
xchg
arpl
pop
jno
dec
popa
jbe
divb
mov
shlb
rcll
pop
mov
jo
mov
movsb
pop
ja
out
xor
pop
inc
movb
outsb
jmp
xchg
mov
addl
xchg
jecxz
std
gs
lret
ljmp
mov
loop
jo
sti
pop
cmp
cs
lods
idiv
stos
push
cmp
lock
aaa
mov
ja
adc
cmp
push
dec
sbb
sbbl
or
mov
out
push
jge
push
push
dec
mov
mov
xchg
call
xlat
into
inc
fiadds
jb
rcrl
nop
shll
call
rcr
pushl
lods
pop
or
and
mov
negl
stos
or
mov
xor
rcrl
or
ja
ret
test
loopne
cmp
lds
es
aaa
xchg
inc
out
push
add
enter
xchg
sub
ret
xor
pop
xor
jae
aaa
xor
test
inc
mov
push
adc
and
jno
adc
sbbl
sahf
mov
pop
leave
xor
push
shll
sbb
lds
repnz
js
rcrl
xor
and
out
adc
sbb
scas
test
cmp
shlb
lret
js
jmp
out
hlt
popf
es
push
xchg
test
sti
test
pop
pushw
cmpsb
and
loopne
les
fsubrl
add
inc
daa
addb
pop
sbb
sub
mov
out
ds
or
pusha
stc
mov
hlt
sbb
je
jne
fnstcw
roll
orl
inc
pop
bound
lds
jnp
divl
cmp
xchg
daa
loopne
mov
lahf
sti
xchg
push
jecxz
mull
push
add
pop
pusha
enter
sbb
aas
shll
pop
aad
push
shl
xor
loop
lods
xchg
ds
sub
mov
add
pushf
stc
pusha
repnz
in
stos
push
lds
loope
adc
mov
jne
adc
push
pop
cld
mov
cmp
js
and
stos
popa
cmpsb
pop
mov
inc
mov
fistpl
ja
aam
popf
cltd
push
push
fisttps
push
push
shrb
push
xchg
loope
mov
dec
mov
cld
cld
in
ficoml
in
sbb
out
xchg
rolb
jno
and
or
pop
jne
inc
outsb
stos
dec
push
mul
mov
inc
and
pop
jle
addl
cmp
inc
popf
xchg
xor
xchg
lcall
in
mov
inc
subl
jno
mov
adc
mov
shll
add
pop
add
mov
out
pop
testl
hlt
lds
mov
std
repz
stc
arpl
orl
cli
cmp
push
jbe
mov
jg
mov
pop
sub
push
cmp
pop
call
loopne
pushf
or
pop
das
imul
icebp
jecxz
push
and
xchg
lret
pop
mov
mov
cld
cmp
xor
out
repnz
repz
ja
inc
jg
out
lcall
filds
adc
ret
xchg
sbb
cs
js
add
push
pop
jb
lds
dec
cmp
sub
add
mov
add
xor
ret
lods
inc
das
repnz
push
in
into
iret
dec
dec
cmp
xchg
sub
dec
fcmovb
out
add
sbb
push
arpl
sub
pop
or
push
push
stos
test
lock
push
xchg
ds
dec
out
cs
push
mov
push
aas
inc
orb
jne
or
xor
out
or
cmpsl
sbb
xchg
mov
in
adc
push
loopne
push
insb
stc
lods
mov
push
sar
ds
mov
cs
rclb
imul
mov
or
mov
mov
jp
loop
xor
lret
push
inc
les
jp
test
shlb
repz
sub
imul
inc
and
push
push
xchg
and
mov
pop
shr
mov
mov
push
or
or
test
mov
mov
adc
sub
orl
jo
inc
lcall
add
sbb
push
and
loop
test
cmp
ds
and
mov
lahf
xorl
mulb
comiss
inc
mov
mov
mov
dec
and
xchg
xor
mov
jge
leave
pop
loope
xorl
cmp
jl
lods
insl
aam
inc
mov
xlat
data16
lret
push
jecxz
lcall
movb
mov
mov
cmp
sti
and
jmp
mov
cld
mov
mov
xchg
pop
sarb
xchg
cwtl
mov
rorb
lods
popl
pop
cmp
stc
push
adc
std
inc
xchg
pop
adc
into
sub
xchg
mov
out
scas
in
dec
adc
cltd
scas
cmp
fs
sbb
aas
dec
adc
push
cmp
inc
sbb
mov
mov
pop
sbb
or
and
inc
xchg
adc
push
xchg
cmpsb
mov
xchg
negb
mov
mov
adc
dec
sub
ss
push
push
pusha
fidivrl
push
call
push
clc
push
es
and
popa
movsl
outsl
jnp
mov
cli
pop
daa
ret
js
es
cmp
add
cmp
mov
xchg
pop
pusha
or
push
sub
adc
cwtl
stos
mov
jae
mov
pop
fmul
sarb
or
and
fimull
dec
or
add
jge
popa
ret
push
jno
add
jns
sbbl
popa
cs
subb
loope
lock
cwtl
cwtl
cmovo
jecxz
fstps
dec
shll
push
iret
push
jmp
sub
xor
in
mov
repz
out
out
mov
and
scas
push
jl
aaa
add
gs
fstps
add
add
sub
movsl
xor
scas
lret
cltd
fs
or
mov
add
or
inc
out
mov
mov
push
ret
outsb
fdivr
leave
rcr
dec
in
ffreep
dec
pop
jle
and
sar
xor
lods
iret
ret
out
inc
mov
pop
sub
dec
adc
jo
push
sbb
mov
ljmp
shll
pop
stos
pop
das
jno
and
jmp
int3
add
jmp
fcmove
sbb
out
sbbl
outsb
inc
sub
sbb
daa
pop
stos
and
ja
fildll
stc
or
mov
xlat
push
cmpsb
mov
cmp
add
inc
dec
sub
cltd
sbb
jno
push
ja
cld
dec
or
scas
orb
dec
loop
xchg
stos
jecxz
inc
daa
cs
cmp
mov
pop
xor
idiv
inc
ljmp
je
add
ja
scas
ret
pop
daa
lods
jbe
xor
add
std
or
mov
bound
jg
push
sbb
call
push
mov
adc
sub
xchg
in
das
fld
fildl
and
jne
sar
ljmp
sbb
adc
add
nop
pop
or
insb
mov
outsb
mov
mov
xchg
adc
push
adc
mov
in
xchg
inc
out
add
sub
sub
cmc
sub
lea
pop
dec
sti
mov
and
sub
lods
jb
add
or
orl
push
mov
xlat
in
dec
jb
and
push
fldenv
mov
andb
stos
fdiv
popa
mov
fbld
fisubrs
or
pop
popf
adc
dec
out
xchg
enter
call
mov
mov
fldcw
movsl
ljmp
mov
adc
mov
or
mov
test
fsubl
enter
mov
scas
mov
aad
mov
xor
pop
fidivrl
int
pop
inc
popf
sub
jg
mov
nop
push
fisttpl
cmp
ds
sahf
and
movsl
sub
mov
mov
dec
scas
sub
mov
pop
stos
nop
xchg
pop
cmpsb
add
lods
mull
sbb
lea
fwait
mov
test
insb
mov
js
negl
std
or
jne
lea
cmp
xor
and
fstpt
loop
mov
xor
jmp
daa
sub
inc
add
or
dec
rorl
dec
adc
cmp
xchg
sbb
pop
inc
je
mov
cwtl
idivl
sub
out
mov
push
xchg
out
jbe
ret
inc
outsl
sbb
test
ror
hlt
mov
xchg
inc
push
jp
xchg
sbb
mov
sbb
push
mov
jbe
clc
ret
xlat
sub
mov
xchg
dec
or
push
and
notl
sbb
jl
hlt
mov
jp
push
adc
push
mov
cmp
adc
xchg
adc
lods
repnz
out
xchg
mov
ret
clc
hlt
rolb
testl
rolb
sub
out
fiadds
mov
dec
stc
push
mov
notb
pop
in
mov
sbbl
rcr
leave
movsb
sbb
sahf
addl
dec
push
cmp
arpl
jmp
call
stos
outsl
sub
clc
aaa
pop
subl
add
pop
sub
sbb
dec
pop
icebp
jmp
call
in
or
or
push
inc
nop
jno
push
push
jecxz
xchg
jns
mov
cmpsl
pop
dec
std
xlat
dec
push
xchg
sti
mov
dec
jb
jge
pop
flds
pop
stos
xchg
subl
mov
fdivrs
mov
test
inc
mov
mov
out
lret
fs
sbbb
mov
pop
mov
adc
add
mov
xor
popa
fmul
push
add
jg
scas
stc
cmpsb
xchg
fimuls
cmp
sub
std
cmp
loop
mov
cmp
pop
inc
lods
test
and
xor
sbb
xchg
imul
sub
dec
clc
push
fwait
jmp
rcrb
cmp
mov
jbe
testl
fdivs
inc
add
dec
dec
jmp
stos
cwtl
add
sub
cmp
add
inc
fdivs
aad
mov
es
mov
pop
dec
js
jbe
int3
imul
and
por
mov
scas
hlt
test
shll
jns
aaa
xchg
subl
xchg
xor
adc
pop
adc
outsb
lret
jl
test
iret
fs
jl
xchg
inc
and
incb
mov
pop
pop
mov
roll
mov
pop
sbb
jp
andb
push
pop
iret
insl
lods
outsb
fmul
or
add
pusha
test
or
pop
out
sub
dec
mov
cmp
and
repz
jno
test
iret
inc
adc
mov
mov
xlat
sbb
jae
jne
ljmp
daa
push
insl
jl
sub
add
into
dec
mov
jns
stos
add
dec
add
dec
sub
xor
stos
lahf
pusha
cmp
pop
cltd
mov
sbb
xchg
negl
pop
out
jmp
stos
je
push
lods
inc
lods
nop
mov
add
adc
rcrl
push
addl
adc
push
ss
das
xchg
and
and
fistps
js
push
mov
push
enter
movsl
pop
loopne
repnz
adc
popa
cmp
sarl
xchg
andl
in
mov
out
sub
addr16
and
jl
andb
fcoml
mov
int
pop
std
sti
movsl
pusha
daa
inc
pushf
aam
outsl
aas
or
stc
push
movsl
rcrb
iret
into
test
push
inc
jne
sbb
mov
mov
xor
push
mov
push
xor
outsl
xchg
stos
mov
int
push
dec
xchg
mov
add
xor
push
push
les
nop
lock
call
push
mov
stos
scas
dec
mov
inc
and
adc
jmp
mov
cs
pop
aas
pop
jno
sub
stos
fbld
inc
push
enter
iret
fldenv
cmp
mov
pop
adc
xchg
cwtl
pop
cltd
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
movl
sbb
movl
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
mov
movl
sub
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
jmp
mov
xlat
and
mov
js
mov
xchg
sub
xchg
jl
inc
jb
subl
imul
lahf
jo
jne
mov
sti
fsubrp
mov
add
cmpsb
add
fcoms
dec
nop
into
in
call
popa
xchg
mov
scas
xchg
andl
leave
outsl
jecxz
sub
xchg
jo
push
sbb
sub
adc
sub
push
mov
out
mov
lock
loop
or
and
imul
mov
test
inc
ret
sbb
dec
repnz
jb
push
or
jnp
in
lret
mov
mov
repz
add
mov
mov
insb
xchg
mov
push
jmp
out
rol
push
sub
mov
pop
lods
stos
lea
call
stos
mov
iret
jns
xor
pop
loopne
into
mov
or
sub
es
push
xchg
outsl
sbb
into
test
ss
lea
insb
or
inc
push
in
pop
mov
int
push
add
add
test
push
jmp
jne
push
int
adc
mov
orl
std
cmpsl
clc
mov
xor
andl
sbb
outsl
stos
in
inc
imul
repz
mov
xor
jno
inc
fisubrs
ret
mov
xor
adcl
ss
adc
jecxz
jge
dec
je
or
jns
mov
stos
mov
movsl
push
jmp
flds
and
push
or
push
adc
rcrl
and
cmp
dec
shll
fidivrs
xorl
ficomps
ja
rolb
addr16
lods
xor
aas
jbe
cmp
cmp
jns
xlat
pop
mov
subb
mov
jb
sarl
ret
popa
lock
fwait
imul
stos
dec
jmp
sub
push
mov
mov
jb
adc
sbb
sti
je
cli
rolb
mov
sbb
jp
pop
cmp
jo
push
shlb
je
divl
outsb
cmp
andl
sbb
int
stc
imul
iret
adc
outsb
es
loope
mov
aaa
iret
popf
add
sub
xchg
push
movsl
xor
mov
add
dec
mov
jl
jne
push
dec
add
loope
cmpsb
xchg
mov
int
push
aaa
mov
and
push
mov
jg
push
or
cltd
mov
mov
jle
cs
adc
inc
jbe
cmp
fucom
iret
mov
test
inc
jge
mov
popa
push
inc
loope
outsb
jno
jo
ret
sub
sahf
jmp
inc
pop
lahf
es
cmc
insl
xor
dec
dec
mov
mov
outsb
daa
aam
adc
cmp
shlb
xor
aas
clc
stos
sti
add
mov
ss
dec
call
xlat
jmp
test
xchg
jl
testb
mov
enter
pop
jb
rol
push
sub
jbe
out
or
mov
mov
push
xchg
push
ret
xchg
jge,pn
and
in
sbb
jle
push
mov
or
adc
aas
cmpsl
mov
ljmp
addr16
sub
out
or
mov
add
je
es
pusha
jae
testl
iret
into
cmp
dec
mov
push
out
push
xorl
mov
jecxz
arpl
pop
mov
dec
in
out
xchg
decb
test
mov
mov
inc
inc
test
add
lock
adc
test
fidivrs
test
jg
pop
pop
aas
and
mov
sub
xor
fcomps
pop
int
jo
sbb
dec
les
mov
mov
mov
fs
dec
addb
sub
pop
fstl
nop
inc
addr16
push
xor
loope
push
jl
iret
sub
lcall
loop
stos
jp
sub
insl
and
ficoml
mov
add
mov
inc
into
or
dec
outsb
sbb
pop
loope
mov
push
lds
mov
mov
add
stc
notb
pop
xchg
pop
nop
pop
adcb
add
repz
enter
xor
imul
popa
jl
sbb
adc
jb
scas
add
push
dec
push
fstpt
cld
movsl
bound
mov
fsubrl
hlt
test
xchg
outsl
std
or
hlt
inc
jmp
inc
rolb
ss
fcmovb
mov
adc
fisttps
or
inc
into
ficoml
push
cmp
add
aaa
jo
int
enter
cmpsb
popf
int3
ds
jo
or
pop
mov
sub
jp
and
sahf
rolb
xlat
inc
outsb
out
xor
sbb
sarl
cmp
or
lcall
xor
out
add
es
jb
out
mov
jle
jns
aam
inc
out
in
inc
push
jo
mov
cmpsl
ss
cmc
bound
lret
jp
xchg
subb
adc
imul
pop
hlt
int
pusha
hlt
add
ret
shr
xor
je
xchg
mov
inc
fs
fstpt
loop
ficoml
mov
mov
add
mov
aas
lock
jnp
scas
iret
ret
hlt
mov
and
loope
ds
mov
push
xchg
xor
pop
adc
add
sub
xor
xchg
mov
gs
idivb
outsl
sub
ret
inc
pop
stos
xchg
xchg
fs
movsb
cmp
iret
jb
test
adc
sbb
jmp
nop
movl
add
cld
das
mov
loop
push
movl
repnz
push
nop
mov
and
mov
into
iret
les
sub
and
lds
xchg
pop
test
xor
mov
cmp
xchg
adc
mov
cmp
shrb
mov
cmp
lret
popf
les
xchg
stos
cli
jo
mov
mov
pavgw
xchg
repnz
sub
aas
or
pop
shlb
cmp
dec
loope
out
mov
mov
or
jecxz
lahf
pop
loopne
pop
inc
addr16
push
loop
orb
movsl
xor
rclb
loopne
jmp
icebp
mov
cmp
outsl
jecxz
jo
cs
push
dec
fwait
pop
enter
cmp
or
rcll
mov
sahf
ret
sbb
stc
bound
pushf
out
jns
mov
das
pop
inc
pop
adc
andl
aad
rcl
xchg
pop
movsl
dec
sbb
mov
lret
fwait
dec
push
or
mov
push
mov
push
popf
and
testb
add
jg
cmp
push
js
push
sub
mov
imul
inc
xor
fmuls
roll
pushf
daa
xchg
cmp
jp
inc
shl
fs
ss
inc
test
fs
xor
mov
jns
sub
push
leave
mov
mov
repz
jecxz
mov
or
xor
das
pop
mov
mov
sahf
mov
fidivs
movsb
pop
inc
ss
add
cmp
repnz
shlb
fdiv
cmpb
jge
aas
push
mov
mov
xchg
out
out
ficoml
ret
xchg
shrb
sub
mov
mov
and
push
inc
xor
pop
inc
out
mov
adcl
xor
inc
xor
lock
xor
dec
inc
dec
jp
xor
popf
mov
mov
mov
data16
pushf
push
pushf
push
cmc
enter
push
pop
repz
fwait
ja
in
jbe
mov
xchg
xorb
lods
cltd
adc
adc
shlb
leave
inc
out
xchg
push
adc
lret
jb
ja
lods
mov
adc
gs
fwait
ljmp
xor
fistps
push
clc
rolb
cmp
add
repnz
dec
je
jnp
lds
mov
popf
test
pop
cli
int
cli
mov
add
xchg
daa
in
imul
cmp
push
or
jo
shrb
pop
loopne
cli
push
dec
adc
or
loop
mov
das
mov
lods
add
aaa
pop
ljmp
push
repz
orb
ds
inc
lock
lock
lods
dec
fs
xor
stc
ficomps
push
int3
stos
stos
jmp
int
mov
enter
sub
pop
adc
scas
imul
loopne
mov
xor
xor
and
cmp
or
sti
in
out
xor
dec
hlt
and
push
xchg
xor
fsubs
xchg
jecxz
pushf
mov
xor
cmp
sarl
loopne
push
mov
jecxz
ds
mov
xchg
dec
push
adc
daa
lret
into
jmp
sub
daa
fidivrl
mov
incb
jg
sub
push
ds
sub
mov
jae
mov
out
lret
mov
daa
loop
add
icebp
add
loop
stos
xor
jmp
push
iret
movsb
pop
test
pop
and
ret
stc
and
aam
mov
jg
jecxz
sub
lahf
sbb
pusha
jno
dec
cmpsl
es
adc
mov
pop
jne
lds
jge
aaa
cld
out
inc
push
rolb
push
add
adc
je
or
xchg
and
pusha
dec
jns
out
fidivl
xchg
shll
stos
xor
sbb
sbb
push
mov
nop
mov
push
cmp
lea
xor
or
dec
in
roll
mov
cmp
sub
fistl
stos
scas
arpl
add
pop
test
icebp
loop
push
popa
repz
in
sbb
icebp
das
jno
orl
pop
mov
mov
adc
stos
nopl
fmull
cwtl
lret
imul
jo
push
lret
or
loopne
fsubr
dec
or
push
out
sbb
mov
cltd
out
jp
push
lcall
insl
push
cs
into
dec
mov
push
mov
into
ds
ljmp
pushf
outsb
pop
bound
push
jg
in
sbb
and
mov
mov
or
xor
cmp
mov
xchg
sbb
test
test
popf
frstor
push
mov
jge
sub
jg
int3
lods
mov
loopne
jns
xor
ret
dec
std
xchg
and
inc
mov
lock
outsb
das
or
inc
sub
outsb
dec
shll
pop
or
call
movsb
daa
jno
mov
into
mov
jmp
js
cmpxchg
fnstsw
jnp
cmc
push
hlt
stos
mov
into
and
test
lcall
xchg
scas
loope
mov
test
push
in
push
hlt
jecxz
andb
pop
xchg
out
or
pop
rcrb
movsl
inc
das
push
aas
ret
mov
stos
xor
or
add
into
test
xchg
jge
jo
dec
sub
mov
cmp
dec
dec
sub
ds
loop
push
push
mov
loope
inc
push
add
adc
rol
inc
xchg
sub
inc
into
loop
adc
inc
js
jae
loopne
and
sub
and
or
aad
cmc
test
je
cmp
loope
popf
pop
cmp
mov
jmp
lods
repz
std
gs
pop
xchg
mov
loop
xchg
in
and
sbb
div
aas
fsts
pop
or
fdivl
dec
and
cmpsl
ror
mov
insb
mov
mov
jno
and
rcr
inc
aas
std
int3
fsubl
out
daa
jne
dec
outsl
test
cltd
dec
jge
dec
dec
pusha
mov
lods
adc
stos
lahf
xchg
shll
mov
bound
fcompl
shr
pop
mov
int3
outsb
out
adc
dec
in
push
lock
aas
cltd
and
ss
andl
inc
add
insl
pop
xchg
push
mov
mul
outsl
fs
mov
into
adc
popa
inc
arpl
rolb
mov
aaa
cmpl
cmpsl
loope
xchg
mov
or
movsb
push
rcr
mov
rcrl
subb
ja
sti
sbb
dec
aas
imul
inc
movb
popf
repnz
lds
sbb
loope
or
out
cmp
pusha
scas
mov
push
les
mov
sub
sbb
fsubrp
inc
inc
aad
call
mov
mov
popf
xchg
adc
fsubrs
pop
js
adc
dec
dec
cmp
lds
pop
pusha
movsb
fsts
fld
sbb
mov
adc
cmpsb
add
int3
pusha
push
push
jmp
xchg
in
pop
adc
pop
pop
iret
daa
je
popw
out
jp
popa
pop
out
xor
adc
fiaddl
cmp
int3
add
scas
xchg
jne
push
sbb
xlat
xor
imul
shl
sbb
mov
jo,pt
xlat
cmc
and
addr16
out
leave
insl
mov
loopne
insl
pop
fildll
stos
dec
or
fisttpl
daa
add
lret
jmp
ja
dec
and
insb
filds
pop
jne
cli
mov
mov
pushf
xchg
sub
xchg
into
xchg
lret
dec
test
jl
cmp
popa
inc
sbbl
imul
mov
cmpb
dec
out
fnstcw
mov
or
jecxz
jae
sub
mov
lret
cmp
test
inc
jo
insb
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jb
movl
lea
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
movl
andl
xor
xor
inc
mov
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jb
lea
xor
mov
or
mov
and
mov
movl
mov
xor
subl
add
mov
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
sub
push
sub
mov
mov
mov
mov
xor
or
mov
adcl
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
add
sub
xor
mov
andl
add
push
movl
adc
movzbl
adc
mov
xor
xor
cmp
jne
cmp
movl
jne
push
jmp
mov
xor
adcl
add
movl
xor
xorl
add
adc
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
add
mov
movzwl
xor
xor
addl
add
mov
mov
mov
xor
add
xorl
imul
movl
mov
subl
xor
adcl
add
movl
cmp
movl
mov
je
mov
subl
add
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
addl
push
movl
push
push
xor
adcl
push
sbbl
push
andl
push
call
orl
mov
andl
lea
push
movl
push
call
movl
cmp
movl
je
xor
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jb
mov
push
lea
addl
push
adcl
push
subl
push
push
sbbl
call
adcl
imul
movl
cmp
movl
jne
lea
subl
push
push
call
movl
cmp
movl
jne
pushl
push
andl
call
movzbl
and
mov
sub
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
lea
add
mov
lea
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
sub
mov
mov
movzwl
adc
mov
xor
orl
mov
movl
add
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
mov
subl
xor
add
sbbl
mov
xor
mov
adcl
xor
addl
add
mov
movzwl
sub
mov
mov
andl
xor
add
orl
mov
sbb
mov
mov
xorl
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
mov
mov
subl
movl
mov
movl
decl
mov
xorl
xor
sbbl
add
movl
jmp
lea
push
addl
push
call
cmp
movl
jne
push
subl
lea
push
sbbl
push
subl
push
addl
push
call
imul
cmp
movl
jne
adcl
lea
xorl
push
push
call
movl
cmp
movl
jne
mov
mov
xor
addl
lea
adcl
push
mov
orl
xor
lea
push
xorl
mov
pushl
andl
call
mov
mov
xor
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
xor
adcl
add
mov
sbb
mov
mov
xor
movl
lea
mov
movl
cmp
movl
jbe
adc
mov
add
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
mov
sub
xor
mov
adcl
lea
sbbl
mov
lea
mov
lea
push
subl
push
call
cmp
movl
jne
push
subl
lea
xorl
push
push
addl
push
adcl
push
call
movl
imul
movl
cmp
jne
lea
andl
push
adcl
push
xorl
call
movl
cmp
movl
jne
orl
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
mov
mov
or
movl
add
mov
movzbl
adc
push
or
mov
xor
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
call
mov
dec
mov
jmp
mov
adcl
push
adcl
mov
addl
add
movl
cmp
movl
je
mov
adc
mov
mov
xor
sbbl
xor
add
xorl
add
movl
adc
sbbl
xor
adcl
mov
push
dec
xor
xor
mov
mov
and
mov
add
adc
movl
xor
incl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
adcl
movsbl
adc
mov
andl
sub
mov
addl
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
push
mov
mov
movl
movl
push
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
dec
jns
add
add
add
add
xor
add
and
add
inc
add
add
add
push
push
inc
push
adc
push
lock
inc
fildl
call
pop
out
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
