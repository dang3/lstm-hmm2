mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
jbe
loop
nopl
jmp
mov
ffree
shll
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
sbb
cmpsl
jmp
mov
lds
jno
daa
imul
ljmp
jb
mov
in
jl
addr16
mov
or
sub
add
pop
ja
dec
pop
lea
sti
hlt
sarb
xchg
and
push
jge
jne
mov
push
and
pop
insl
inc
imul
lods
ret
daa
cmpsb
mov
mov
test
aas
jl
cmp
sub
cmpsl
push
jle
cwtl
stc
xchg
add
pop
sub
add
inc
ret
inc
fneni(8087
push
inc
shlb
push
xchg
xor
negb
es
lock
das
lcall
xchg
in
imul
push
push
sti
cmp
leave
pusha
pop
lret
fs
jecxz
or
movsl
cmpl
scas
pop
pop
icebp
das
and
ss
jbe
subb
or
jle
insb
movsb
add
sbb
outsl
sub
mov
cmpsb
mov
lea
jg
add
mov
scas
push
arpl
push
add
dec
or
insb
std
add
xchg
dec
pusha
pushf
mov
lret
lds
dec
add
fmull
stc
rcll
or
fucomip
mov
cli
dec
jp
cmc
sub
xchg
pop
push
sbb
sub
bnd
mov
repz
in
jmp
jno
pusha
clc
iret
xchg
rcrl
jecxz
cmp
xor
popa
dec
in
jmp
rcr
sub
push
push
xchg
dec
cmp
sub
adcl
orb
test
mov
in
mov
lret
sub
js
loope
jecxz
icebp
in
scas
push
add
leave
ds
dec
lahf
sub
push
pop
stc
jnp
leave
sti
add
imul
xchg
lcall
faddp
xchg
cmp
push
cmpsl
movsl
mov
cmp
jecxz
dec
mov
adc
pop
mov
jmp
daa
in
aas
insb
fs
mov
inc
sldt
out
jno
ss
pop
fiadds
and
and
daa
or
sub
out
in
mov
insl
repnz
iret
hlt
pushf
xchg
stc
dec
ja
sub
and
inc
movsl
shrb
das
jl
xchg
outsb
push
dec
inc
shrb
sub
and
imul
pop
mov
or
in
jg
fwait
out
je
loope
push
lea
loope
ret
std
mov
loope
mov
data16
sbb
dec
or
dec
pop
mov
mulb
ja
adc
lds
shl
mov
insl
dec
mov
in
add
pusha
cltd
mov
bound
add
stos
icebp
xchg
and
jns
mov
faddl
loop
sub
pusha
out
lret
xlat
inc
out
sbb
add
ss
adc
xchg
and
fwait
cmpsb
inc
imul
popa
xchg
jb
addb
sbb
push
ds
andb
push
aam
mov
enter
cmp
inc
mov
das
add
lret
push
lea
or
in
mov
sti
popa
jl
and
movsb
pop
arpl
outsl
lods
jge
adc
jmp
fdivr
push
jle
in
pusha
lret
push
pop
add
jmp
cwtl
push
push
sbb
jle
adc
dec
scas
in
shll
enter
cmp
push
lahf
test
mul
lcall
scas
mov
loope
push
arpl
out
add
xchg
pusha
clc
add
mov
movsb
xchg
add
negl
xor
sbb
sahf
mov
icebp
es
or
adc
scas
xor
cmp
lcall
sbb
xor
dec
stos
jecxz
or
cmp
orb
xchg
aas
push
lods
jle
dec
mov
sub
adc
push
cltd
push
cli
adc
enter
cmp
add
mov
jmp
cmp
cwtl
rcll
pop
push
cmp
lret
cmpb
push
cmp
stos
xchg
xchg
mov
and
clc
mov
pop
out
push
aaa
fwait
mov
iret
mov
and
xchg
mov
ret
push
cltd
mov
add
ds
jbe
into
mov
jmp
fildll
push
lea
stos
push
lods
cmp
mov
mov
dec
arpl
and
sub
lahf
in
test
push
jbe
push
aaa
adc
mov
add
out
int
pusha
aad
in
ja
fdivrs
push
sar
in
push
jg
cmpsl
daa
fstps
outsb
jbe
mov
xchg
fs
inc
sub
lret
push
cmp
jecxz
xor
mov
lret
test
xor
loope
rcrl
and
push
jo
adc
dec
lret
pop
rcrl
jne
jbe
imull
mov
lcall
or
mov
xchg
mov
dec
xchg
cld
das
dec
mov
xchg
mov
mov
out
pop
in
pop
xchg
add
and
fincstp
mov
adc
scas
insl
pop
or
push
js
sub
lahf
popl
jmp
adc
xchg
ret
pop
lea
xor
test
and
test
push
cmp
sub
xchg
inc
pusha
adc
sti
repnz
aas
flds
inc
mov
inc
mov
in
sub
nop
movl
scas
jl
push
in
imul
and
lret
push
movsb
cs
test
in
mov
not
js
loop
call
xchg
push
jle
inc
lock
sub
mov
lret
test
fs
cld
mov
fildll
push
sbb
test
gs
cli
inc
jmp
or
addr16
call
leave
cltd
lcall
cmpsb
lea
sahf
push
movsl
daa
int
cmc
mov
mov
lcall
lods
sbb
shl
sti
mov
jbe
call
out
mov
mov
cmp
mov
sbb
mov
xchg
dec
nop
lret
test
push
and
push
jae
cmp
out
mov
mov
icebp
in
hlt
outsb
pop
cld
dec
push
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
in
inc
test
sbb
mov
adc
jne
ds
loope
call
mov
inc
mov
aad
andb
push
xchg
loop
jecxz
pop
inc
add
and
adc
dec
inc
popa
aad
iret
dec
xchg
jge
in
cmpb
push
push
sub
and
jl
dec
insl
ljmp
addr16
test
loop
loop
lret
jns
dec
lret
or
in
cltd
push
mov
pushf
add
sbb
or
cmp
in
inc
inc
cmpsl
or
jl
cld
xchg
and
mov
and
jo
pushl
xchg
sbb
adc
aas
in
sub
in
cmp
add
mov
pop
outsb
call
sti
out
mov
add
aam
jns,pn
mov
pop
enter
loop
in
mov
xchg
cmp
sbb
cmc
lock
lock
add
add
mov
or
out
sbb
mov
ja
popf
lods
call
fstpt
or
das
cmp
or
cmpsl
andb
cli
aas
movsl
out
inc
stc
xor
in
pusha
les
mov
addl
adc
inc
out
jno
outsb
mov
lock
add
or
arpl
pop
leave
cmpsb
pop
mov
push
sub
cli
sub
lret
push
fwait
mov
xchg
leave
push
mov
xor
or
mov
inc
adc
mov
mov
cwtl
sub
inc
add
mov
pop
es
shlb
mov
popl
ljmp
xchg
in
cs
fsubrp
fistpl
inc
sub
shll
jno
cmp
push
xchg
pushl
pop
mov
cmpsb
jb
sahf
scas
shl
cmp
push
cltd
dec
sbbb
cmpsl
out
jnp
hlt
cmpsb
ffree
aad
jg
in
ds
cmp
push
cld
fs
fdiv
cwtl
adc
xor
sub
out
mov
je
cwtl
and
sbb
sub
sbb
add
adc
mov
adc
lods
fwait
xor
xchg
adcb
mov
ss
lcall
push
xchg
mov
les
popa
cmp
jns
dec
adcb
mov
shll
and
xchg
std
dec
ret
add
sub
lea
add
in
jle
inc
and
aaa
imul
es
ret
outsb
bound
sbbl
pop
adc
cmp
enter
aaa
add
and
mov
stos
int
mov
popa
xor
popf
cmp
or
test
sbb
jb
inc
mov
lahf
hlt
xor
inc
outsl
sti
jo
daa
xchg
jns
das
push
mov
stos
ljmp
dec
mov
loope
adc
enter
mov
or
sbb
xchg
stos
jl
shrl
dec
repnz
jge
enter
add
pop
stc
mov
jp
lahf
lret
dec
mov
xchg
xor
jle
movsb
icebp
addr16
das
cltd
push
lcall
popf
mov
xor
and
enter
sti
insb
sub
loopne
sub
xor
mov
jbe
push
sbbb
xlat
push
or
xchg
cmp
loop
push
call
je
shlb
push
adc
push
out
lret
sbb
lods
pop
push
xor
lret
in
sub
cmp
pop
sbb
jo
sti
es
loopne
hlt
mov
inc
add
jl
push
int
pop
les
les
scas
sbb
jnp
xor
inc
mov
mov
icebp
mov
std
cli
sbb
shll
xchg
fwait
daa
jge
jmp
mov
mov
xor
ja
xlat
flds
test
jne
push
sub
or
cmp
mov
icebp
adc
push
mov
mov
bound
mov
dec
loope
pop
xchg
jne
int3
loopne
xlat
inc
outsl
mov
imul
fnstcw
push
inc
les
add
dec
repz
mov
jb
outsl
loopne
or
adc
pop
inc
imul
xlat
mov
inc
dec
add
push
subl
ret
push
sub
and
add
icebp
hlt
mov
and
inc
ja
mov
lods
insb
cmp
aad
mov
push
inc
enter
ret
sub
shrl
and
dec
jns
xchg
ror
xchg
pop
push
dec
cwtl
adc
pop
shrl
addl
aam
int
mov
sbb
push
push
push
dec
sub
data16
jle
mov
ss
xchg
adc
pop
lea
je
cmp
aaa
xor
mov
pop
add
dec
mov
arpl
test
mov
xchg
fs
push
stos
dec
push
test
lea
loope
pop
mov
imul
mov
and
add
sahf
jmp
fcoms
inc
or
inc
mov
sbb
cltd
push
movsb
pop
pop
cmpsb
enter
cmp
ret
bound
lods
cld
inc
and
pop
push
pop
mov
dec
cmp
add
or
cmpsb
fiadds
movsl
add
testl
inc
test
jbe
mov
imul
xor
push
xor
outsl
shll
dec
lahf
ja
push
cld
and
and
cmp
hlt
fsubl
xchg
add
push
xchg
scas
sti
adc
je
pop
jecxz
pop
std
loopne
push
incb
sbb
int
movsl
rorb
mov
xor
das
mov
stos
mov
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
movups
push
sahf
ss
fadd
inc
xchg
cmp
push
xchg
stos
pushw
adc
cld
pushf
mov
cld
xchg
and
cs
jb
shl
cmc
sub
mov
cmp
lock
push
mov
mov
sub
push
mov
icebp
push
add
insl
subl
gs
addl
xor
xlat
and
jnp
xchg
fsubs
cmp
lret
arpl
sbb
insl
add
pushf
in
xchg
and
pop
int3
shr
popa
xor
inc
jge
sbb
push
dec
or
push
scas
stos
roll
or
mov
shll
xchg
mov
adc
jp
dec
jno
in
cmpb
mov
adc
push
out
mov
fdivl
mov
mov
pushf
mov
fs
jle
cli
clc
inc
lret
jae
js
cmovg
sahf
test
push
insl
int
or
xchg
cmc
adc
push
inc
push
mov
cmpsb
aaa
movsl
addl
or
jge
out
mov
mov
xor
push
shrb
lds
and
inc
jle
std
xchg
movsl
xadd
fnclex
pop
or
repnz
fidivrs
mov
mov
rcr
fnsave
mov
call
jo
jo
sub
test
mov
outsl
adc
fisubrl
and
leave
or
or
nop
mov
and
pusha
xchg
test
sub
aad
in
sbb
sub
test
mov
test
pop
mov
pop
mov
pop
lea
aas
and
pop
sahf
jp
jmp
adc
pop
xor
xchg
fs
or
sbb
adc
mov
mov
fisubs
mov
addr16
sbb
jg
fnstcw
cmp
idivl
fs
pop
es
mov
fldcw
xor
cltd
and
jo
into
push
xchg
mov
cltd
insl
xchg
inc
mov
sbb
xor
lcall
add
fidivrs
mov
lods
xchg
pushw
sbb
in
add
or
xchg
rolb
and
xchg
pop
divb
sarl
mov
into
sub
popf
sub
mov
mov
fs
or
add
pusha
sbb
insb
arpl
call
scas
add
dec
pop
test
test
jne
in
sub
lds
fnstenv
lcall
jle
mov
mov
fidivl
movsb
test
sub
and
dec
cld
shll
sub
shrl
lret
adc
and
inc
sbb
push
mov
xor
ss
pop
add
cmp
ret
ret
mov
ss
mov
aaa
stos
adc
cmp
roll
push
mov
xor
decl
cmp
sbb
xchg
add
and
cmp
xor
dec
sahf
mov
pushl
xchg
out
test
nop
cli
rcrl
push
sub
jg
daa
mov
popf
daa
insl
repnz
xchg
dec
adc
xchg
or
negb
stos
ss
dec
stc
lret
sub
dec
fdivl
xor
mov
movsl
aaa
out
adc
in
clc
les
mov
cld
ret
cs
sub
xor
jns
stos
lret
rcrb
mov
loop
shl
or
jle
out
mov
mov
xorb
testl
pop
in
adc
xchg
sub
repz
mov
aaa
push
in
lahf
into
sub
sub
mov
ljmp
xlat
add
cmp
test
xor
xchg
je
adc
lds
add
psubsb
or
andl
or
or
loope,pt
cmp
iret
sub
cmpsb
mov
addr16
push
or
mov
or
lea
and
hlt
faddl
fsubr
aas
cli
out
xchg
push
ret
and
xchg
imulb
insl
mov
jnp
pop
lds
rorb
sbb
sbb
adcl
cwtl
lcall
mov
jb
sub
mov
xchg
jmp
lret
inc
jns
sbb
test
mov
fiaddl
xlat
mov
jno
adc
inc
or
xchg
mov
sbb
push
icebp
mov
inc
cld
sub
and
mov
sbb
inc
mov
cltd
ja
xchg
sbb
loope
ret
movsb
xor
jecxz
xchg
add
inc
ss
stos
mov
xor
jecxz
mov
jecxz
xlat
stc
pop
call
lea
dec
mov
push
push
jle
pushf
sub
aad
or
push
push
pop
aaa
xchg
mov
push
jge
test
or
and
cltd
xor
xor
add
jmp
ret
test
dec
cmpsl
mov
jle
in
loope
add
fstl
int3
or
xchg
adc
push
or
mov
sbb
xchg
cmp
mov
cmpsb
cmp
clc
mov
jge
dec
mov
and
icebp
in
outsb
jg
sub
mov
outsb
repz
lock
push
mov
das
sbb
out
stc
enter
jb
jmp
jno
out
sti
mov
filds
insl
or
enter
fsubl
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
xor
xchg
fimuls
pinsrw
lsl
cs
cmp
mov
pop
mov
or
lods
cmp
shrb
popf
arpl
in
push
bound
push
pop
das
jns
in
pushf
ret
push
jne
push
add
aaa
push
xchg
push
nop
fcmovnbe
pop
pop
repnz
xlat
js
enter
imul
hlt
mov
and
shrl
fcmovne
sbb
imul
loope
pop
cltd
cmp
cmpsl
push
mov
cmp
pop
fsubl
test
add
push
inc
movsl
jmp
test
cmp
lcall
pusha
je
pop
push
and
dec
out
pop
xchg
aaa
test
or
push
int
ret
mov
lea
sub
push
mov
sbb
dec
ds
rcr
movsb
inc
ret
and
in
jg
js
adc
fcomi
xlat
lods
iret
xchg
push
in
jmp
sub
test
dec
ss
scas
jo
push
add
mov
lcall
pop
and
pop
movsb
enter
rcr
sbb
and
and
mov
rclb
push
aaa
cmpsb
pop
pop
bound
sahf
adc
sbb
adc
rcrl
pop
push
add
sbb
jl
int3
mov
pop
add
pop
sbb
int3
inc
and
pop
mov
aam
ss
adc
mov
push
and
into
jmp
mov
out
movsb
cld
rorl
std
pop
in
bound
fstpl
mov
sub
or
push
cli
stc
scas
xchg
enter
cmp
repz
stos
insl
scas
xor
jo
push
mov
orl
fmuls
mov
scas
outsb
jmp
icebp
mov
repz
movsbl
add
mov
lea
test
daa
test
imul
ljmp
adc
pusha
nop
sub
mov
test
out
out
pop
and
mov
fsubrs
sbb
or
adcl
enter
jge
stos
sbb
bnd
push
sub
or
sbbb
xor
mov
fs
cmp
ds
push
sbbb
shlb
pop
dec
fcompl
sub
cli
push
ret
scas
jns
in
mov
push
mov
xor
loope
pop
aad
or
adc
sub
push
adc
jg
dec
movsb
fadds
stos
cmp
leave
lret
adc
jae
mov
enter
leave
pop
out
xchg
mov
inc
adc
push
jno
insb
rorl
mov
jns
inc
cld
fmull
out
negb
aaa
xor
jle
push
and
shll
js
jns
cmp
sahf
xor
outsb
mov
aam
pusha
leave
pop
xchg
mov
shrl
inc
mov
insb
in
pusha
fs
cmp
pop
jns
pop
mov
pop
and
iret
ret
jno
cltd
add
xchg
outsl
xor
js
mov
dec
push
aad
inc
rcrl
mov
mov
fsubrs
mov
ljmp
lods
cs
rcrl
movsb
sbb
jecxz
dec
mov
addl
orb
jns
xlat
mov
pop
jbe
into
lret
push
test
fnsave
mov
aas
jp
imul
pop
inc
push
pop
inc
pusha
cmp
mov
xor
inc
bound
mov
ljmp
fnsave
insl
popa
dec
mov
pop
inc
mov
ret
lea
ljmp
iret
shl
lret
inc
pop
push
mov
and
cmp
cmpsl
mov
js
push
popa
dec
outsb
mov
sub
push
jecxz
and
cmp
push
dec
inc
add
sbb
in
pop
jne
fwait
push
sahf
xor
arpl
fldt
cmp
movsl
pusha
push
push
add
pushf
sarl
mov
xchg
idivl
mov
call
dec
in
cmpsb
out
inc
adc
ljmp
cmp
dec
repnz
xor
add
nop
push
addl
pushf
scas
push
xchg
inc
mov
mov
mov
in
insl
push
jns
lods
xchg
pop
rorb
repnz
inc
dec
cld
stos
adc
lret
inc
add
sbb
adc
or
mov
popa
and
push
mov
das
icebp
jae
mov
ss
divb
pushf
daa
mov
inc
call
adcl
dec
decb
push
pop
pop
fwait
out
lcall
outsl
push
adc
jg
and
aas
and
aam
sbb
xlat
fcompl
out
fisttpl
loop
and
das
cmp
jae
imul
in
fmulp
dec
ds
lret
lods
adc
pop
gs
jae
or
outsb
lret
insb
dec
je
out
push
enter
dec
outsb
pop
test
clc
and
add
int
fwait
inc
add
mov
adc
out
sbb
mov
adc
dec
mov
mov
ja
outsb
in
cmp
xchg
xchg
and
jmp
test
pop
lret
add
in
sub
repz
ja
dec
push
dec
jle
lcall
jae
loop
out
inc
xchg
insb
imull
cmp
js
cmc
mov
adc
or
dec
pushf
ljmp
sub
cli
enter
inc
pop
mov
and
psrad
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
jno
xchg
cmp
pinsrw
shufps
and
inc
xchg
fwait
mov
push
jge
xor
mov
loope
push
or
div
mov
sub
data16
ljmp
mov
mov
int
outsl
adc
mov
repnz
add
and
jo
ret
sti
jnp
xor
daa
addr16
daa
sti
in
cmc
mov
jle
outsl
adc
mov
add
call
push
test
out
cmp
mov
mulb
outsl
mov
mov
push
jns
roll
mov
fnstenv
jl
cmpsl
dec
mov
xor
ret
dec
cmc
sub
enter
jg
and
mov
add
ret
xchg
popf
repz
mov
jbe
dec
and
inc
jbe
arpl
mov
pop
cs
movsl
je
ret
in
decb
stos
adc
mov
popf
sbb
cs
xor
lahf
push
fcom
imul
mov
cwtl
in
dec
sub
cmp
cmp
mov
mov
cmp
ds
hlt
sbbb
in
test
movsb
xchg
loope
pop
test
es
or
idivl
and
sub
es
shlb
xchg
ljmp
loope
mov
or
pusha
push
lret
jge
dec
out
jge
int3
shrl
sub
bound
and
fldlg2
enter
in
adc
mov
mov
dec
xor
cmp
push
lret
test
sbb
rcpps
pop
ss
test
pusha
xor
jno
adc
push
aad
mov
lods
jne
cmp
cmp
or
insb
inc
popa
sbb
shlb
std
loop
loop
mov
ja
jns
xchg
pop
lahf
xor
dec
inc
mov
cmp
mov
subl
addr16
jle
add
or
jecxz
lret
pop
inc
cmpsb
in
push
xor
adc
out
insb
outsl
push
push
pop
loopne
mov
pop
movsl
cmpb
cwtl
fmuls
or
inc
xor
rorb
enter
xchg
xchg
rcrl
jmp
shlb
mov
fstps
push
imul
xlat
inc
sahf
or
insl
jae
movsl
pop
cmp
mov
outsb
mov
test
adc
popa
push
mov
dec
cmp
mov
xchg
sbb
lret
add
push
inc
cmp
pop
ja
in
ficoms
loopne
push
push
js
aas
lock
cmp
pop
pop
repnz
test
ret
sbb
nop
jg
push
or
js
sarl
scas
fidivs
pop
lods
aam
push
jnp
test
jle
je
and
add
pop
dec
mov
in
negl
test
cli
mov
inc
ja
mov
imulb
mov
sahf
mov
loopne
pop
inc
cmpsl
clc
out
je
xor
xor
daa
pop
dec
lea
mov
add
jl
popa
es
mov
aam
xchg
ja
xchg
test
sub
xorb
cmp
sbb
icebp
loopne
fwait
cmp
pop
shrb
pop
mov
xchg
outsl
test
mov
loopne
or
pop
shlb
scas
cmp
sub
or
std
std
insl
sub
lds
nop
imul
dec
daa
jge
rcl
in
fst
pusha
call
ja
clc
jns
xchg
movsb
push
jb
pop
add
pop
and
lods
stos
adc
sub
pop
mov
sbb
push
or
and
test
push
cmp
cmpsb
or
and
xlat
mov
add
dec
xorl
xchg
cmp
test
fucomp
mov
xchg
pop
inc
xchg
or
add
cmp
cli
dec
dec
mov
mov
cmp
push
icebp
jecxz
adc
je
mov
aam
pop
inc
mov
adc
push
jns
or
test
mov
cld
in
movsb
jmp
cmp
int3
aad
sti
mov
lods
call
dec
xchg
mov
mov
mov
jecxz
int3
mov
dec
pop
loope
aas
dec
out
jge
mov
aam
roll
add
cmp
inc
into
outsl
xor
sub
stos
daa
mov
xchg
pop
mov
pop
in
push
iret
dec
add
loopne
sbb
push
inc
jmp
js,pt
mov
push
je
sub
and
adc
pop
push
push
insl
out
and
lods
adc
jp
bound
dec
dec
mov
mov
test
arpl
xor
jl
jns
and
sbbb
mov
xchg
movl
in
lock
fstpt
mov
fidivrl
fcmovu
push
cld
jns
inc
jmp
scas
das
xor
sbb
or
or
aas
mov
jp
pusha
faddl
xchg
sub
fwait
ss
mov
cmpsb
outsl
mov
stc
add
push
insb
mov
es
xchg
movsb
in
pusha
mov
push
xor
dec
or
push
jg
jae
jns
arpl
cmp
sub
pop
notb
aam
adc
nop
inc
sti
lahf
scas
into
sub
les
push
pop
faddp
arpl
out
adcb
aaa
hlt
scas
push
pop
and
es
or
ljmp
andb
movsl
lret
lret
mov
iret
adc
jmp
sub
dec
nopl
xchg
dec
lret
in
add
mov
lods
leave
xchg
add
cwtl
pop
adc
xor
push
cli
gs
es
ret
pop
fsubs
mov
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
xchg
mov
les
setg
outsl
or
in
inc
adc
outsl
adc
repnz
add
shlb
insl
imul
inc
and
pop
add
adc
add
push
mov
shll
xchg
jo
ficomps
inc
dec
aas
fisttpll
clc
jnp
daa
mov
dec
inc
jp
mov
sti
test
ljmp
iret
ffree
iret
jg
sbb
mov
sbb
hlt
dec
adc
pop
lret
outsb
lods
out
pop
dec
inc
and
mov
jmp
add
mov
ja
mov
ja
cmc
aam
icebp
jmp
dec
lods
xchg
cmp
insl
std
fists
leave
fldl
mov
dec
sbb
lds
jmp
mov
negl
out
push
icebp
mov
fcoms
mov
dec
cmp
mov
cmp
orl
fstps
adc
ret
xor
jno
inc
mov
inc
mov
lahf
pop
mov
jno
dec
xchg
inc
mov
inc
addr16
or
push
js
and
mov
jae
mov
or
sbb
cmp
shlb
mov
push
movsl
push
mov
das
or
xchg
loopne
out
loope
inc
sbb
jb
loop
out
shl
mov
mov
mov
mov
stos
test
add
mov
mov
test
sbb
incl
mov
jo
bnd
or
shll
and
iret
lret
fnstsw
push
pushf
repnz
push
scas
sbb
or
hlt
test
jne
clc
repz
int
mov
mov
in
xchg
out
xor
std
add
dec
push
loope,pn
fimull
fcoml
pop
or
cmpsb
dec
xor
or
into
mov
xchg
aaa
and
jns
ljmp
ljmp
mov
lea
or
cli
mov
push
fsubl
sbb
push
jb
mov
mov
fldt
lods
mov
les
int3
add
je
insb
mov
mov
xchg
add
or
or
aad
scas
imul
inc
mov
fisttps
sti
or
insb
inc
adc
xchg
nop
sub
mov
in
insb
ss
mov
stc
pop
and
stc
in
push
shrl
xor
lahf
push
stos
adc
rcrl
pop
stmxcsr
popa
push
punpcklwd
jbe
cmp
cmc
bound
xchg
inc
pop
out
xchg
jge
loop
cmp
sahf
xchg
mov
xchg
shll
mov
loopne
push
out
and
loopne
jns
pop
cltd
cmpsl
adc
lods
adc
add
scas
les
add
dec
add
inc
jl
sbb
pop
scas
les
jbe
notl
pushl
push
mov
adc
push
int3
in
dec
push
add
cwtl
inc
insb
jne
cmp
daa
xlat
sbb
test
pop
pop
sub
sub
pop
cmp
pop
xchg
fdiv
jne
imul
imul
or
jo
adc
push
mov
mov
cmp
outsb
pop
daa
and
pop
sub
xor
mov
imul
out
push
or
or
not
insl
add
arpl
stos
out
in
cmpsb
out
and
mov
add
adc
dec
jnp
out
data16
xor
or
loope
popa
push
pusha
scas
dec
push
mov
sbb
adc
aaa
mov
pop
and
popf
inc
icebp
mov
dec
repz
lods
cmpsl
push
jns
cmp
and
repnz
repnz
outsb
jne
sbb
adc
mov
fistl
mov
jo
mov
test
jns
out
pop
add
push
addr16
cli
sub
fcompl
cmpl
pop
in
cwtl
call
mov
add
push
add
sti
sub
mov
fisubl
add
out
out
stos
cmp
cmp
int
pop
shll
and
call
rcr
sbb
ror
mov
insl
push
gs
repz
aaa
xchg
sbbl
and
cmpb
popa
jne
roll
xor
xchg
mov
rorl
jg
divb
cmpb
lods
dec
mov
jp
pop
shl
enter
push
cli
mov
or
add
xchg
push
inc
push
out
clc
lods
add
cltd
inc
sti
jnp
out
enter
stc
notl
mov
dec
aad
bound
lods
xor
fs
push
jns
mov
pop
adc
mov
and
call
cmp
arpl
lcall
mov
jmp
or
jge
loop
sub
fs
xchg
sysenter
cmp
rcrb
or
xchg
cmp
lods
jmp
adc
jo
int3
sbb
mov
push
fst
pop
mov
inc
enter
jmp
inc
cmpb
adc
jo
fisubs
xchg
rorl
out
aaa
addr16
mov
xor
jnp
adcb
xlat
test
leave
inc
mov
jno
test
inc
and
ss
sub
out
mov
lock
add
adc
inc
shlb
icebp
loopne
cwtl
sbb
push
lock
out
imul
sbb
push
fucomp
fsubrl
pop
xchg
and
cmp
in
movsl
push
pop
iret
sbb
nop
sbb
repz
dec
push
sbb
mov
rcrl
or
ret
in
imul
in
das
push
mov
jle
mov
sub
mov
pusha
jge
repz
cmc
jmp
xchg
bound
cmp
stc
add
mov
jl
imul
inc
stc
cmp
ret
jbe
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
hlt
arpl
les
pinsrw
das
fcoms
ja
cmpsb
mov
pop
pop
lods
sub
jns
shlb
jmp
mov
jge
insb
pushf
mov
push
hlt
ja
pop
push
cmp
mov
aam
not
clc
ret
cmpb
xor
outsl
sub
sbb
cmp
loopne
mov
std
push
fdiv
mov
cmp
xchg
cmp
or
xchg
jg
jge
xlat
mov
js
insl
cmp
pusha
mov
divb
fstp
idivl
pushf
or
sarl
xchg
lahf
dec
mov
or
ds
push
popa
pop
ss
enter
loope
adc
pop
inc
orl
arpl
bound
add
addr16
mov
jne
adc
ficoml
ss
sub
popa
pop
fildl
sbb
rcrb
nop
mov
push
fwait
scas
popa
cmp
adc
test
cmp
pop
out
loopne
fwait
xor
xchg
cmpsb
xor
std
lods
xor
ljmp
xchg
test
outsl
adc
push
std
stc
and
adc
mov
mov
popa
es
sbb
cmp
lock
xchg
aam
repnz
addr16
jge
adc
jp
jg
sarl
push
jp
pop
push
xchg
dec
lea
xchg
jb
xchg
dec
fcomi
mov
call
push
jbe
cld
sub
lea
pushf
mov
pop
or
cmp
sub
mov
ret
orb
fcoms
sub
xchg
adc
orb
mov
out
or
mov
faddl
insl
jno
out
sub
push
aad
shlb
or
out
jl
pusha
shll
cwtl
movl
dec
push
adcb
mov
xchg
stos
lea
xorb
push
mov
jo
add
mov
push
adc
xchg
daa
sub
es
push
cmp
mov
mov
scas
popf
mov
inc
push
pop
pop
mov
fcmovnb
cmp
scas
xor
push
icebp
inc
inc
sub
nop
hlt
xor
mov
pusha
jle
cmp
xchg
or
and
sbb
jno
push
push
arpl
aaa
pushf
and
push
mov
xchg
stos
lcall
f2xm1
into
js
adc
xor
inc
jne
push
enter
pop
pusha
push
sub
fwait
dec
icebp
je
sub
jo
lcall
andl
rcll
mov
xor
push
xor
jmp
xor
cmp
icebp
push
cmpsl
lds
mov
mov
add
stc
rclb
and
or
repz
sub
sti
xchg
in
enter
fs
push
insb
cmp
in
out
nop
adc
or
in
fwait
add
fldcw
les
pushf
sbb
or
dec
jno
idivb
lcall
popf
int3
adc
mov
push
test
mov
sub
xchg
dec
jp
push
pushf
ror
mov
inc
sub
aas
dec
sbb
push
cli
mov
or
stos
loop
mov
mov
mov
ljmp
data16
sbb
and
cwtl
lahf
out
pop
call
arpl
int3
int3
out
jb
inc
xchg
push
mov
dec
popf
cltd
inc
ficoms
pop
cmpsb
dec
pop
inc
andb
cmp
mov
add
rorl
inc
sub
cmp
mov
aam
sbb
mov
mov
addb
xchg
js
dec
into
push
mov
fwait
sub
fs
dec
jge
jnp
mov
xchg
popa
sbb
sbb
pusha
push
cld
jp
lock
push
hlt
fwait
jl
mov
push
xor
stos
cmpsb
pop
lret
rorl
loop
sar
pop
sbb
xchg
add
call
mov
popf
push
scas
je
xor
sub
inc
stc
push
insl
stos
pusha
dec
inc
insb
stos
pusha
and
inc
xchg
adc
popa
mov
mov
ljmp
sbb
jge
mov
out
jnp
lods
inc
mov
adc
fisubrs
and
and
imul
adc
cmc
je
clc
scas
cmp
dec
cli
xor
enter
pop
xor
in
lds
push
movsl
jns
shll
xlat
lock
sahf
or
sub
sub
adc
dec
ljmp
mov
jo
mov
sub
sub
mov
jbe
or
popf
sarb
jge
and
es
mov
xor
dec
out
pop
xchg
adc
rcll
push
adc
mov
sub
cmpsb
repnz
push
mov
xlat
test
test
mov
jno
inc
and
add
insl
and
lahf
movsl
push
xadd
mov
pop
mov
pop
cmpsb
or
icebp
pop
insb
int
gs
ret
ja
int3
cmpl
out
jecxz
ja
sbb
ret
sbb
inc
mov
out
int3
aas
loop
sbb
imul
loop
adc
jo
add
sbbb
cmc
jne
das
lret
sti
and
leave
adcb
in
lods
sbb
sahf
pop
xchg
sub
pop
loope
sahf
into
or
orb
lea
mov
jae
clc
push
jp
jmp
add
adc
outsb
cmp
dec
sbb
push
add
ret
pop
pop
ret
ret
adc
and
push
add
lret
mov
jge
or
add
sub
adc
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
adc
jb
data16
pinsrw
psrlw
sbb
loopne
jl
filds
jle
cmpsl
lahf
js
mov
mov
pop
mov
adc
pop
jnp
daa
cltd
or
test
xor
andb
aam
lret
pop
push
movsb
mov
aaa
pop
xor
out
mov
cmpsl
lret
jecxz
jp,pn
outsb
mov
loope
or
or
fsubs
cmc
inc
pop
sbb
or
jmp
aaa
xlat
mov
lret
in
inc
sub
test
fnsetpm(287
das
sbb
xlat
in
scas
xor
inc
mov
and
mov
sub
jp
jle
xchg
lock
sahf
push
lcall
cmc
cltd
sti
scas
sub
adc
xor
or
mov
pusha
data16
push
std
inc
scas
inc
xchg
out
inc
insb
repz
mov
inc
xchg
mov
inc
and
sbb
add
jae
adc
sub
cmp
push
sbbb
jne
xorl
pcmpeqd
mov
loope
pop
bound
inc
and
ja
ret
push
jg
add
int
shl
pop
push
xor
nop
cs
and
fucom
orl
inc
cs
cwtl
mov
dec
in
gs
inc
mov
aaa
test
loopne
xor
lods
mov
jo
js
sarl
push
cmp
dec
int3
in
inc
bound
rorl
inc
sub
icebp
lea
lret
pushl
mov
lahf
ficomps
push
sbb
pusha
pop
cmp
les
push
dec
lret
cli
push
movsb
scas
test
fisttpl
imulb
outsb
xor
mov
adc
into
out
aad
push
or
push
xchg
in
in
mov
jne
cmpsb
mov
orb
lcall
push
mov
mov
add
add
psubsb
addl
dec
adc
jo
popa
lahf
jge
push
loope
pop
xchg
xchg
xor
andb
shrl
sbb
ss
mov
inc
push
scas
or
mov
pop
je
stc
daa
setne
xlat
popa
sub
mov
movsl
lret
pop
fiadds
sbb
lret
mov
add
jnp
dec
xchg
cs
popa
pop
sbb
cmp
bound
loop
imul
sub
pop
and
ljmp
pop
cmp
ret
jge
pop
or
mov
mov
xor
notb
fstpl
jb
xchg
adc
adc
mov
hlt
push
xchg
fwait
inc
sahf
xor
pop
adc
mov
sbb
movsb
push
xchg
xor
in
sub
arpl
xor
pop
lret
and
jnp
push
test
cmp
shlb
mov
mov
ljmp
movsl
lods
daa
inc
dec
out
fnstenv
push
mov
jne
shll
ds
and
adc
stc
cmp
add
or
adc
adc
loopne
lahf
and
sbb
cmp
fstps
mov
adc
adc
pop
inc
inc
inc
push
sarb
pop
aam
test
add
test
movsb
push
aaa
cwtl
mov
ret
cmp
or
sbb
mov
or
mov
push
cli
xchg
sahf
jae
and
pop
aad
cli
xchg
inc
inc
pop
add
mov
loopne
test
js
inc
or
push
jne
mov
xchg
push
pusha
call
cmp
adc
mov
clc
in
inc
pop
pop
adc
into
xlat
dec
inc
fbld
mov
hlt
xor
dec
test
xchg
call
inc
add
sarl
aas
mov
add
sbb
pop
lock
push
loopne
fs
int3
jp
mov
mov
or
inc
jle
cmp
dec
call
sahf
pop
shrb
cmp
sub
ud1
mov
xor
aad
jo
daa
daa
sbb
insl
lahf
int
pusha
and
xchg
push
in
jle
mov
repz
pop
sbb
mov
fnsave
adc
and
inc
sub
scas
xorl
enter
outsl
fisubrl
mov
mov
and
enter
sub
push
jo
sub
jl
jns
adc
sbb
mov
sti
clc
fwait
xchg
in
mov
stos
loop
pop
hlt
or
into
jmp
add
shll
movsl
mov
rcll
decl
xchg
mov
pop
fcoms
cmpsl
mov
ret
mov
mov
pop
movsb
jle
sub
sbb
inc
fistpll
ds
jno
aas
mov
jae
addr16
icebp
loope
subb
cmp
pop
mov
cld
push
test
inc
pop
push
inc
out
cmp
add
and
loop
sub
jmp
fistl
leave
enter
cmp
pop
shr
stc
mov
mov
aam
and
xchg
add
pop
repz
andb
xor
mov
pop
sbb
add
insl
sub
lret
icebp
inc
jge
andl
jg
pop
pop
sahf
xorb
and
fcmovb
push
xor
rcrb
pop
push
std
dec
addb
push
outsl
imul
aad
adc
and
mov
fistpl
push
sbb
or
nop
andb
cmp
into
cmc
sbb
lds
dec
dec
push
jle
push
mov
cmpsb
fdivl
fs
mov
push
data16
xchg
adc
dec
add
addr16
jg
cwtl
adc
jno
lea
dec
out
jg
push
aad
dec
lret
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
inc
or
lgs
xchg
push
xchg
ret
and
adc
or
test
ja
lcall
mov
js
pop
es
loopne
addr16
jecxz
stc
aas
dec
inc
add
pushf
icebp
sahf
call
adc
fisubl
loope
inc
mov
xor
push
mov
adc
rcll
rcrl
cmp
xchg
xor
lods
loop
into
mov
inc
jg
mov
sub
push
push
jne
popf
xchg
mov
subl
test
pushf
loop
ja
icebp
or
fistps
imul
cmp
sub
add
or
push
pop
xor
pop
jae
add
add
fldenv
jbe
push
repnz
sti
out
jae
mov
jmp
xor
sub
iret
mov
inc
lods
sbbl
fdivs
xor
in
push
sbb
sbb
aaa
test
fmull
andb
sub
lcall
sbb
jb
movsb
push
pop
pop
cmp
rcrl
outsl
popf
shlb
jcxz
mov
ljmp
adc
add
aas
movsl
push
mov
gs
popf
pop
xor
imul
pop
add
test
enter
push
jg
dec
sub
adc
ds
dec
sahf
dec
adc
pop
and
iret
mov
int3
mov
mov
add
jns
xchg
stc
cmp
and
jno
mov
mov
repz
xchg
mov
idivl
xchg
cmpsl
dec
pushf
insb
inc
sbb
loopne
pop
mov
andb
test
sbb
repz
cs
push
mov
xor
mov
push
bswap
insl
outsb
pop
cld
mov
adc
mov
mull
mov
lret
in
mov
xchg
mov
nop
pop
aad
out
aad
jp
into
arpl
cmp
mov
divl
mov
in
mov
adc
add
inc
or
cli
inc
aas
cld
lods
jb
and
mov
jno
pushf
out
add
mov
sbb
mov
cmpb
sub
push
dec
mov
stos
sbb
stos
mov
xchg
add
push
mov
fisttpll
pause
push
and
and
push
adc
int3
add
sbb
adc
or
repz
into
fcomps
dec
in
push
and
push
mov
rcl
outsl
neg
inc
stos
lods
in
imul
pop
xchg
sbb
mov
jecxz
xchg
jne
jnp
cmpsb
ss
mov
sub
inc
xchg
ret
movsl
movsl
ret
ficomps
sub
mov
push
fldenv
push
fimull
push
lock
push
lods
pop
sub
stos
mov
les
sub
inc
push
rorb
arpl
mov
rclb
and
jg
and
loopne
pop
addr16
mov
xchg
jmp
mov
jmp
es
clc
cmp
jl
into
sub
cli
mov
inc
mov
fcmovne
cmpsb
std
mov
xor
inc
push
or
lods
sub
push
cltd
fwait
lahf
insb
and
std
pop
inc
mov
or
into
inc
push
enter
mov
add
mov
adc
scas
or
push
jp
and
enter
ja
outsl
sub
insl
mov
add
inc
xchg
cs
scas
jno
cmp
jl
push
sub
or
cmp
mov
push
inc
iret
lret
sbb
sarl
pusha
dec
int
and
mov
test
ljmp
stos
leave
gs
shll
outsb
push
xchg
aad
xchg
aaa
and
push
dec
xchg
xlat
ja
neg
xlat
hlt
inc
insb
adc
fidivl
sub
mov
pop
push
shlb
push
scas
jb
ret
xchg
rorl
xorl
adc
pushf
aaa
lahf
add
xchg
mov
sub
sub
pop
dec
xchg
mov
inc
int3
sar
cltd
mov
xchg
inc
sub
rcrl
ljmp
xchg
movsl
xor
in
adc
arpl
jg
xchg
cmp
cmpl
adc
ret
pop
fdivrp
push
int3
fidivrs
xchg
into
inc
jnp
call
cmp
test
push
pusha
cmp
test
mov
xor
imul
xchg
std
fistps
or
pushf
pop
lods
pop
inc
ss
dec
cmpsl
xor
xor
jne
dec
inc
dec
sbb
cmp
clc
sub
adc
scas
lret
or
xchg
mull
pop
es
mov
add
jg
fdivrs
xor
jb
pop
xchg
mov
jae
fs
xor
popl
xchg
push
push
sahf
mov
cld
ljmp
lea
mov
test
jae
movsl
stc
xor
push
xchg
sbb
js
imul
orl
xchg
sbb
sti
stos
out
inc
mov
loope
mov
cmpsl
jmp
or
push
and
pop
arpl
push
imul
sub
dec
lahf
or
pop
test
cli
mov
pop
sbb
sub
fsubp
pop
add
inc
test
stc
loopne
adc
inc
add
inc
push
rcr
mov
out
mov
mov
out
hlt
mov
gs
jmp
push
sbb
adc
jno
mov
xor
sub
mov
jo
iret
cs
mov
sahf
inc
push
repnz
notl
jnp
mov
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
hlt
xchg
jl
mov
add
bswap
mov
adc
std
or
pop
push
imul
pop
mov
clc
js
pop
repnz
mov
mov
sahf
addr16
sub
or
xor
push
fistps
movsl
ficoms
fnsave
aaa
addl
push
std
shlb
inc
mov
pop
jg
add
add
or
aam
out
mul
cmpsl
outsl
andb
hlt
fidivs
jns
pop
add
or
push
push
xchg
mov
xor
mov
xchg
jae
mov
mov
mov
jge
pop
movsl
jnp
mov
and
mov
outsl
push
jmp
jne
repnz
pop
add
rcrl
xchg
inc
jo
fsincos
dec
and
aas
insb
push
mov
xchg
jl
ljmp
jbe
imul
adc
cmp
mov
push
xlat
mov
mov
inc
mov
mov
xor
cmp
mov
sub
lahf
mov
sub
leave
cmpsl
movhps
aas
sahf
dec
jae
mov
clc
adc
add
add
shll
or
pop
and
fwait
std
mov
mov
or
repnz
loope
rorl
imul
jge
push
adc
inc
pop
rorb
mov
xor
ret
mov
mov
outsl
shll
dec
mov
pop
sahf
add
popf
jne
cmp
mov
ret
les
xchg
mov
mov
loopne
sahf
cld
mov
xchg
inc
xorb
and
push
cld
jnp
push
dec
jns
int
ja
push
in
push
pushf
add
lret
mov
adc
mov
sub
das
and
fildll
pop
jl
nop
mov
mov
repz
pop
dec
fdivl
jl
std
dec
pop
daa
push
es
repz
repz
insb
inc
sub
call
jno
mov
push
test
cmp
fiaddl
jecxz
push
push
pop
jbe
mov
add
xor
dec
pop
hlt
mov
out
jle
push
out
mov
je
and
xor
jmp
lods
mov
pop
les
es
and
mov
loop
bound
jb
pop
add
mov
insl
lcall
push
lea
imul
push
mov
push
loop
push
ficomps
enter
in
fwait
push
pusha
pop
push
sbb
xchg
dec
push
and
aad
mov
xchg
mov
cmp
add
sub
aas
mov
aam
mov
adc
xor
mov
dec
xchg
push
test
jb
jl
xor
cmpsl
xlat
das
mov
in
cmp
andb
mov
stos
ja
jb
jge
dec
dec
jbe
jg
inc
jmp
ficoms
fwait
xchg
xchg
loopne
addl
or
idivb
pop
sub
mov
inc
bound
ret
cld
dec
outsb
dec
add
inc
jbe
fisttpl
decb
or
xor
or
arpl
and
inc
sbb
pop
cmp
insb
dec
mov
shlb
loopne
jmp
pop
test
fwait
imul
xchg
cmpsb
arpl
lcall
mov
das
out
pushf
sbb
xor
outsb
aaa
jnp
and
iret
and
iret
out
cmp
in
out
and
test
push
icebp
dec
dec
push
mov
std
adc
jmp
pop
xor
int3
or
pushf
mov
push
sub
lahf
dec
push
xlat
cmpsb
mov
jb
and
dec
pop
enter
outsl
cmpsl
stos
cmp
call
adc
int3
daa
arpl
sbbl
in
jo
negl
dec
push
incb
imul
js
fcomp
daa
movsb
je
add
sub
in
loope
jb
imul
loope
xor
rcr
push
jae
ljmp
jp
mov
outsb
mov
addps
xlat
pop
mov
xchg
movd
popa
roll
or
mov
cmp
dec
and
scas
sbb
mov
or
pop
lcall
test
adc
outsl
push
xchg
pop
sbb
adc
dec
fdivrl
ret
outsl
and
mov
gs
jl
xchg
stos
xchg
js
pop
adc
push
leave
fs
iret
xchg
lahf
mov
push
inc
repz
mov
pop
or
insb
cmpsl
faddl
cmp
ficoml
xchg
mov
jp
stc
pop
clc
in
xchg
dec
out
outsb
jns
jae
es
aad
rorb
ja
dec
and
cmp
icebp
cmpsl
push
aam
or
leave
out
imul
adc
cmp
popf
or
iret
sub
xchg
sarb
or
in
fyl2xp1
push
movsl
outsl
add
xchg
test
in
fs
lahf
es
or
lret
gs
jge
sahf
mov
in
int3
ja
sub
cmp
mov
pushl
add
loope
aaa
push
cmc
lods
cmp
fiaddl
and
shlb
jno
pop
rolb
scas
and
dec
add
imul
sbb
lods
into
int3
add
inc
push
stos
pop
sbb
cld
ss
sbb
sbb
inc
push
sub
mov
sbb
mov
sub
shl
mov
mov
xchg
stos
out
mov
xchg
addl
or
push
inc
cld
je
nop
rolb
jp
lds
jg
mov
jmp
psrlq
dec
mov
xchg
jns
push
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
rolb
pinsrw
movd
sub
aad
or
or
add
test
jne
ret
negb
adc
xorl
aas
or
sbb
inc
pop
inc
push
push
dec
lcall
mov
jle
pop
dec
jae
adc
mov
out
and
inc
push
lock
xlat
jmp
or
pop
inc
lret
ja
out
sbb
mov
sbb
mov
jle
or
repz
mov
ljmp
jno
or
scas
lock
iret
adc
loop
mov
fs
mov
dec
repz
push
pop
test
lahf
fldl
cmp
mov
push
adc
mov
adc
cmp
inc
push
lods
scas
push
dec
push
cld
data16
add
dec
pop
fstpt
loope
and
xor
jp
cs
sarl
lcall
in
mov
adcl
jno
outsl
fbld
test
dec
xchg
push
out
fwait
xor
add
popa
jns
ss
cmpb
dec
out
mov
clc
sub
into
mov
pop
lds
pop
push
jne
push
or
icebp
cs
push
clc
fisubl
or
cmp
mov
out
aad
lret
sbb
xchg
jo
inc
push
sbb
fldenv
sahf
pop
cld
incl
adc
fdivl
je
arpl
stos
popf
dec
or
fistl
xor
insb
ja
test
xchg
pushf
sub
lds
pushf
push
mov
xor
adc
pop
pop
orl
add
cmpsl
fsubs
adc
jecxz
dec
dec
sub
add
xchg
and
xchg
mov
push
push
xlat
or
and
sub
sbbb
sbb
sarl
cmc
or
or
lods
ja
sub
pop
fs
je
fnstenv
and
movsl
lock
mov
mov
inc
jb
aaa
or
pop
sti
insb
cmp
jg
lret
xor
mov
adcl
push
jb
aas
subb
je
sbb
inc
lret
aam
mov
add
and
popa
je
mov
cmp
mov
mov
rclb
sbb
jmp
mov
aad
cmp
repz
sahf
mov
or
je
dec
pop
sub
push
nop
cmp
adc
mov
ja
gs
dec
js
xchg
mov
mov
and
les
outsb
out
push
dec
ss
leave
inc
mov
ss
icebp
inc
clc
inc
leave
mov
fsubs
mov
stos
and
das
cmp
jl
pop
leave
dec
lds
bnd
ret
aad
mov
out
aas
in
xchg
pop
stos
addr16
mov
int
cli
repnz
xor
lahf
loop
mov
insl
cmpsb
testb
clc
out
popa
mov
into
sbb
jb
icebp
xchg
mov
out
push
xor
mov
testb
into
orb
cmp
sbb
mov
ss
fstps
add
cmp
es
and
jl
stos
leave
dec
clc
pop
in
lcall
push
inc
dec
xchg
out
fsub
fldcw
mov
cwtl
mov
dec
cli
jle
mov
dec
int3
lret
cmp
push
outsb
movsb
and
sbb
xor
mov
inc
incb
cmpsb
jno
inc
or
pop
mov
adc
pop
sub
cltd
popf
mov
int3
pop
rol
xchg
mov
int
pop
pop
mov
mov
ljmp
cld
add
repz
in
mov
push
add
lock
mov
movsb
add
or
out
dec
loop
adc
pop
dec
pusha
mov
cmpsb
jbe
in
scas
push
add
mov
out
rcr
sub
fbld
push
clc
adc
jg
in
push
sti
pop
cmp
fmull
gs
loop
fcomps
mov
or
mov
pop
icebp
xchg
mov
add
xchg
sub
es
ret
inc
stos
xor
cmp
push
dec
mov
dec
fsubrs
subl
and
xor
sub
sub
mov
sub
mov
sbb
cmp
lcall
movq
sub
arpl
xchg
outsb
data16
push
shrl
out
xchg
mov
jecxz
out
mov
fnsave
sbb
ret
push
push
xchg
pop
push
mov
xchg
mov
sub
cmpb
add
lcall
ss
xor
ljmp
and
leave
lret
dec
push
inc
sub
icebp
cmp
inc
jg
cmc
ljmp
dec
jno
or
lds
mov
mov
jae
data16
fcomip
pop
cmpsl
orb
pop
out
push
sahf
js
out
xchg
sub
sub
mov
dec
jno
push
into
pop
stc
add
jns
mov
push
les
or
push
jbe
jne
gs
mov
mov
cs
ret
sbb
jge
push
and
out
cmpsb
jb
push
das
scas
xor
pusha
xchg
aam
pop
mov
loop
addr16
add
sub
and
ret
mov
fs
add
jecxz
das
push
dec
inc
lcall
insb
out
sti
scas
test
cld
sahf
out
pop
cld
inc
lods
das
xchg
mov
fs
testb
xchg
sbb
adc
jns
aaa
push
fidivl
data16
sub
or
loopne
or
push
iret
fs
adc
dec
movsl
sbb
add
xor
jo
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
data16
js
js
add
cwtl
in
inc
push
scas
enter
add
pusha
or
inc
dec
out
fnstcw
test
notl
sbb
inc
fsubrs
cmpl
dec
pop
jge
cmpsl
or
add
pusha
jae
mov
rclb
jle
ret
push
mov
jno
ljmp
cmp
iret
pop
aam
sarb
popa
ret
adcl
or
mov
dec
imul
imul
out
insb
push
test
int
or
out
mov
xchg
mov
outsl
dec
mov
push
int3
lcall
mov
xorb
cmp
sar
push
mov
test
xchg
pop
sahf
fmuls
insl
pop
inc
add
cmc
test
mov
jp
icebp
mov
cli
pop
lods
jae
imul
out
cmpsb
xrelease
popf
dec
jle
jecxz
pop
xchg
xchg
dec
ss
inc
fst
enter
movlps
add
lret
pushf
xchg
pop
mov
mov
and
out
mov
mov
mov
pop
lret
jbe
pushf
pop
pop
cmp
inc
or
ss
dec
and
add
cmc
aad
insl
in
xchg
dec
stos
mov
dec
aad
fmul
scas
mov
jns
mov
mov
cli
in
pop
and
inc
jmp
les
ret
scas
in
or
inc
daa
test
outsb
outsb
popf
or
xor
xor
movsb
mov
pop
loop
sbb
imul
iretw
ss
daa
lahf
mov
into
ror
jp
mov
pushf
mov
call
ljmp
cs
xchg
mov
sahf
pop
call
push
div
add
inc
shr
fdivrs
push
adc
sbb
roll
pop
int3
cmp
push
test
dec
pushf
sbb
pop
loopne
mov
popf
and
out
outsb
lea
mov
dec
arpl
data16
cmp
cmpsb
cmp
loop
jb
add
adc
push
je
mov
dec
loope
xor
jge
sti
addr16
hlt
mov
in
scas
adc
imul
lret
cli
jle
add
sbbl
fs
out
addr16
push
or
or
push
int3
mov
aaa
mov
shl
mov
sarb
mov
xchg
imul
inc
int3
xor
data16
lods
adc
bound
mov
test
in
cld
adcb
popa
iret
movsb
and
mov
repz
repz
jmp
fsubs
add
jmp
fcoms
or
jb
daa
mov
es
xor
mov
test
fdivl
and
ljmp
setp
inc
adc
and
dec
ss
sbb
add
jnp
aas
pop
cmp
dec
adc
out
shll
push
std
test
or
popa
lods
shll
into
cs
mov
int3
imul
push
in
in
lcall
push
aad
rclb
fwait
movsl
or
dec
dec
xor
rorb
adc
xchg
leave
xchg
mov
cmc
sub
iret
imul
mov
mov
pop
inc
ljmp
push
jbe
or
add
rorb
cmpsb
mov
inc
cltd
add
lock
mov
leave
xchg
inc
add
in
aaa
xor
push
js
outsb
pusha
popa
pop
out
jg
inc
mov
adc
push
push
hlt
adc
pop
sbb
scas
arpl
xchg
xchg
jmp
xchg
jbe
popa
push
stc
stos
sbb
hlt
mov
mov
mov
cwtl
cmp
pushf
sub
jp
cmc
mov
jno
lcall
insl
add
adc
ss
fsubr
daa
push
sahf
ja
loop
pop
jg
mov
neg
jecxz
adc
dec
mov
and
adc
add
cmc
adc
outsb
pop
jo
lea
fxch
xor
push
add
scas
mov
pushl
dec
push
adc
or
mov
xor
mov
roll
push
mov
lcall
dec
clc
sbb
stc
sub
dec
xchg
mov
jbe
icebp
push
mov
push
xor
cmp
addr16
movsb
sbb
aas
sbb
add
fsubrs
mov
test
xchg
cmpsb
dec
push
movsb
mov
popa
in
push
les
mov
pop
push
cwtl
test
nop
int3
inc
jae
inc
cmp
cmpsb
push
and
push
mov
ss
or
movsb
test
popa
fcompl
add
aam
movsl
test
jo
in
sub
lret
jb
cmpsl
test
xlat
add
es
enter
sub
jp
xlat
xorl
mov
jecxz
test
cli
jbe
arpl
bndstx
pop
adc
imul
shlb
xchg
cmpsb
dec
in
aad
push
and
insl
mov
pop
add
jbe
add
xor
adc
fidivrs
push
pop
xchg
jns
repnz
mov
invd
mov
and
loope
div
push
or
jb
je
jecxz
stos
outsb
pop
out
push
cld
pop
loopne
add
lcall
push
xchg
imul
xchg
rol
bound
or
pop
jg
in
in
add
cmp
sbb
sub
xchg
decl
jbe
cmp
mov
fstps
cmc
dec
jmp
or
xor
sub
rorl
int
add
dec
imul
test
push
push
rcll
rolb
cli
dec
fcomip
fldl
icebp
add
jg
push
jns
cld
data16
cmpb
mov
out
cmp
lea
xchg
dec
sub
mov
dec
mov
sub
push
in
pop
out
cmp
icebp
je
test
testb
mov
das
std
lcall
ja
dec
fbld
pushf
cwtl
adc
sub
scas
sbb
mov
push
or
bound
sub
jge
jg
push
popf
pop
push
pop
jmp
lret
dec
cmpsl
and
mov
jno
or
std
mov
or
mov
lret
icebp
jmp
lahf
test
xor
fists
xchg
and
mov
jbe
fadd
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
pop
inc
repz
rsqrtps
ror
cltd
pop
cltd
dec
sbb
lret
pop
dec
cs
jl
sub
cmc
mov
push
ljmp
mov
mov
sbb
jb
lds
daa
mov
out
cli
cmp
sar
stc
and
loopne
sub
ds
sub
jle
scas
or
sub
jecxz
out
pop
adc
adc
mov
addr16
out
inc
stos
xor
mov
cmpsl
mov
sub
out
xchg
subb
inc
adcb
dec
mov
pop
xchg
les
mov
adc
sahf
outsb
sub
mov
imul
shrl
fildll
add
cmpsb
testl
mov
popf
es
dec
call
scas
pop
push
pop
roll
shll
imul
push
dec
mov
pop
or
push
aam
lret
and
inc
mov
fnstsw
pop
in
mov
jb
mov
push
push
nop
rclb
jo
subl
int
push
mov
dec
sbb
xor
xor
lahf
cmpsl
test
out
je
jnp
stos
xor
testl
push
orl
pminub
fistl
pop
dec
add
and
popf
call
jg
in
out
xor
push
data16
std
loope
repz
aad
bound
dec
push
adc
adc
xchg
or
rorb
adcb
imulb
popa
mov
xchg
pop
xlat
dec
cmp
pop
pusha
fptan
push
incb
push
pop
mov
sub
jne
into
fwait
ds
arpl
inc
inc
jb
aas
cmc
stos
mov
sbb
mov
add
sub
fs
pop
cs
sbbl
divw
cmp
mov
gs
xchg
sbb
andb
xchg
gs
xor
imul
ljmp
jo
cmp
xchg
dec
push
in
hlt
test
out
xor
adc
cwtl
xor
mov
fbstp
out
aam
push
xlat
mov
imul
jl
add
or
ja
jno
mov
ret
jge
repnz
sub
daa
fwait
pop
push
lea
and
xchg
cmp
cli
sub
mov
adc
sbb
ds
in
fldcw
lea
ss
repz
push
shlb
add
mov
and
adc
jmp
push
es
pop
ja
jnp
daa
mov
sub
test
ss
push
xor
xchg
xchg
adc
push
out
dec
testb
addb
push
outsl
movb
rorb
sbb
or
jg
cli
inc
jl
dec
in
sti
test
sbb
imul
cmp
push
sbb
inc
mov
mov
imul
mov
inc
enter
cmp
aas
mov
enter
sbb
int
push
cwtl
add
mov
mov
mov
pop
inc
and
jecxz
hlt
loope
cmp
stc
lcall
sub
out
pop
xchg
cs
sti
mov
mov
dec
sbb
inc
xchg
xchg
sbb
ret
je
add
pop
notl
and
leave
push
mov
inc
jge
sarl
ret
cmc
cld
pxor
mov
xchg
rcl
lcall
iret
sbb
mov
sti
das
push
jg
sahf
jo
insl
pusha
or
sub
vpunpckhdq
mov
add
sub
dec
fs
movsb
in
mov
inc
cmp
cwtl
mov
pop
int
jl
mov
or
test
pop
cs
mov
cmp
out
mov
dec
and
in
fsubrp
dec
and
imul
mov
jle
sbb
pop
xchg
sar
pop
clc
pop
pusha
int
daa
adc
xor
arpl
sti
add
add
push
mov
out
jne
loop
or
std
es
xor
out
cmpsb
les
pushf
cmp
or
sub
aaa
rorl
rcr
push
xchg
outsl
aam
test
loopne
call
jle
sub
mov
pop
jmp
add
add
fisubl
mov
and
cmp
mov
cmp
adc
iret
int3
pop
jmp
stos
mov
or
jl
nop
lcall
stos
cltd
cltd
insl
or
sbb
test
pop
adc
popa
mov
xchg
adc
adc
sbb
dec
cmp
scas
out
sub
lret
push
cs
adc
push
imul
test
movnti
das
fcomps
dec
xchg
lea
xchg
sbb
adc
pushf
push
mov
pop
aad
jmp
pop
mov
xchg
xchg
sbb
add
jl
dec
push
and
inc
sub
push
lcall
mov
cld
call
outsb
mov
xchg
push
movsb
add
fsubs
fbld
sbb
jle
sub
dec
fsubl
stos
sbbb
orl
fstpl
aas
add
cmpsl
or
in
lret
stos
push
pop
fildll
sub
cmpsb
push
adc
pop
stc
pop
pop
cmp
mov
in
xor
and
leave
adc
nop
add
xlat
fwait
jp
push
decb
xchg
inc
mov
mov
pushf
scas
mov
arpl
jmp
sbb
adc
pop
add
out
clc
inc
aad
ljmp
push
mov
rcrl
testl
pop
stos
aad
sbb
pusha
or
rolb
loop
ss
inc
scas
rclb
sub
sahf
mov
xchg
xchg
dec
sub
cwtl
sub
in
jno
inc
mov
sti
gs
sub
cmp
mov
jecxz
mov
mov
push
jae
clc
xchg
popa
dec
dec
cmp
adc
xchg
add
push
sub
cltd
and
push
push
fninit
adc
mov
inc
cmc
iret
inc
jne
and
cmpb
repnz
pop
fnstcw
inc
pop
ret
pop
xchg
lods
xchg
mov
mov
inc
into
repnz
cmp
mov
cld
sbb
jae
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
jp
mov
add
xor
xlat
pop
mov
cmpb
cmc
xchg
dec
into
dec
out
dec
or
in
fisttps
inc
push
das
jmp
mov
xchg
add
add
mov
neg
or
and
movb
jnp
or
pop
mov
sub
jg
neg
pop
popa
jo,pt
fstl
pop
insl
inc
mov
sbb
push
lret
sarl
ds
aas
jbe
add
daa
imul
je
mov
adc
sbb
sub
dec
ficoml
fcmovnu
cmpsl
pushf
outsl
jbe
pminsw
sti
and
lods
mov
cwtl
fwait
dec
inc
inc
jl
std
out
dec
cmp
xlat
or
pop
jae
adc
mov
push
adc
mov
popf
adc
in
mov
add
adc
jae
fsub
lahf
mov
jo
xchg
pop
sbb
flds
sbb
popf
inc
adc
push
jmp
vsubsd
test
or
mov
shrl
shr
icebp
add
push
inc
mov
aad
sbb
xor
jl
sub
dec
out
iret
in
push
aas
clc
jl
or
out
xor
inc
das
mov
outsl
sub
mov
push
shlb
fldt
cmp
fs
mov
mov
ljmp
mov
outsb
sbb
pop
cwtl
ss
pop
outsb
jp
sbb
mov
dec
push
push
fcmovb
push
movsl
gs
sbb
mov
cld
dec
ljmp
xchg
xchg
shll
test
inc
pop
and
push
cmpsl
or
mov
sbb
sbb
cmc
arpl
add
inc
rcll
das
shll
das
mov
sti
mov
sahf
mov
push
xor
aam
lret
lcall
lret
pusha
daa
sbb
xor
sbb
ds
in
out
cld
aad
fildl
frstor
add
stos
mov
push
ja
nop
jo
ss
mov
ds
addr16
das
stos
call
ret
add
imul
addl
mov
dec
mov
and
daa
in
inc
sub
pop
sub
jb
frstor
int
mov
dec
xor
jecxz
dec
test
lods
imul
ret
pop
cmp
sbb
push
pushf
mov
adc
pcmpgtw
enter
push
loope
insb
inc
lret
xor
xchg
xor
in
add
sbb
inc
ret
dec
jb
rolb
inc
andb
fcomi
insl
iret
stos
shlb
jae
mov
pop
jnp
aas
or
data16
sbb
mov
pop
xchg
jo
insb
cmp
add
jb
xor
cmp
daa
ret
push
mov
insb
pop
andl
cmp
xchg
notb
cmpsl
push
imul
push
cli
and
dec
mov
stc
add
fldcw
xchg
push
and
push
aam
mov
out
dec
or
or
dec
or
out
push
or
fwait
push
mov
cltd
pop
test
pop
inc
jns
xchg
addb
mov
loope
mov
movsb
pop
or
fdivr
pop
xor
pusha
push
or
stos
mov
cmp
out
inc
mov
repz
movsb
xchg
or
mov
xor
sbb
push
mov
or
mov
ja
cmpsb
andl
mov
int
pop
xor
mov
push
mov
or
aam
and
mov
adc
mov
scas
rol
inc
stos
data16
cmp
lcall
fwait
push
push
stos
incb
leave
add
fmuls
les
inc
sub
cltd
xchg
rcll
push
daa
mov
mov
mov
jecxz
lods
je
pop
xchg
jnp
icebp
dec
sub
scas
jae
std
xor
and
pop
mov
movsl
arpl
ja
std
dec
fwait
mov
sti
push
lahf
jl
jmp
sub
cmp
test
into
inc
ret
push
push
mul
imulb
mov
das
adc
pop
jbe
out
dec
cmp
outsb
test
push
insb
aas
roll
mov
push
fistpll
pushf
adc
xor
sub
es
test
jne
mov
movb
lock
jecxz
xlat
es
cmp
in
mov
aas
insl
repnz
cmp
loopne
ret
push
pop
int3
rcr
cmc
outsb
ljmp
filds
jns
pushf
sahf
lret
push
mov
mov
mov
outsb
bound
leave
enter
cmp
fldcw
mov
mov
adc
cld
in
jl
pop
int3
dec
cld
sbbb
cmpsb
push
xchg
lret
pushf
shll
push
push
pushf
push
pop
std
push
xchg
cmpsb
test
mov
daa
aas
mov
mov
inc
fsubl
sub
cmp
mov
push
cmp
xor
pop
ror
repz
in
inc
scas
and
arpl
pop
int
movsb
loope
sbb
cmp
push
inc
or
sbb
and
push
push
dec
and
add
std
and
and
shll
mov
arpl
mov
jae
mov
sbb
push
sbb
lcall
or
out
test
add
fildl
loopne
in
sbb
stc
sti
dec
push
push
iret
idivl
lret
imul
out
les
out
popa
enter
loop
movsb
pop
int3
mov
shr
and
pop
cltd
jge
roll
rorl
sti
adc
sub
add
sbb
xchg
or
xor
pusha
pop
dec
lods
xor
bnd
pop
jmp
pop
jmp
hlt
sbb
push
mov
in
pushf
dec
aam
pop
clc
idivb
jns
mov
fsubrs
fmuls
bsf
xor
push
sub
push
mov
sub
and
pusha
js
enter
pop
pop
js
or
lret
or
fs
push
mov
xor
xor
push
test
xlat
jno
sahf
pop
pushl
insl
sub
mov
dec
or
mov
dec
pop
imul
mov
mov
and
and
sub
or
ret
push
push
outsb
fldl
andb
loop
out
mov
pop
adc
loopne
jns
scas
adc
scas
xchg
sar
mov
or
sbb
mov
sti
pop
shrl
gs
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
and
push
mov
add
jg
arpl
xchg
mov
shll
inc
enter
push
fildll
bound
push
add
inc
daa
sti
xorl
sub
test
mov
in
jg
pop
loopne
lcall
sub
das
dec
push
test
das
sub
inc
sub
mull
imul
xchg
sbb
sub
push
dec
insb
mov
das
rcr
repz
pusha
call
fildll
stos
gs
scas
mov
cmp
ret
mov
ljmp
mov
dec
imul
test
stc
push
ss
std
dec
test
pop
call
shll
rorb
push
in
jg
sarl
hlt
movsl
pop
adc
or
fwait
bound
add
testb
sti
test
jle
pop
ja
fistpll
movsb
int
and
sbb
mov
repnz
ljmp
les
xchg
and
pop
sub
lods
mov
push
pop
xor
cwtl
loope
mov
aad
inc
push
int
sti
or
push
movsb
xchg
loope
or
sbb
mov
mov
negl
xor
sbb
test
jne
fsub
scas
stc
addb
cmp
out
addr16
or
sub
loop
pushf
mov
ljmp
cs
cmp
testb
ds
lret
push
popa
loopne
mov
pop
movsl
pop
mov
and
adc
xchg
stc
mov
xchg
push
xor
lds
loope
enter
outsb
mov
std
inc
xchg
push
cmp
xchg
mov
lods
or
leave
pusha
xchg
ficompl
js
mov
mov
mov
pop
out
mov
adc
mov
xchg
in
fldl
cmp
dec
xor
aad
fistpll
cmp
sahf
sbb
jle
mov
push
data16
shrb
lds
divl
mov
add
icebp
jmp
mov
scas
incb
sbb
test
mov
mul
fldenv
push
jl
cmp
ss
sysret
mov
mov
xor
adc
jmp
jae
xor
insb
out
and
fs
sbb
mov
and
cmp
jb
sahf
xchg
adc
xchg
fcmove
out
je
sti
shrb
push
pop
inc
xchg
mov
movsl
pop
leave
shlb
scas
lods
in
mov
xchg
loop
sub
loope
fwait
cwtl
sahf
mov
xlat
dec
pop
inc
push
inc
js
bound
push
or
notl
clc
ja
pop
mov
cwtl
popa
xor
ds
bound
pusha
pop
push
mov
cmp
out
test
xchg
popfw
inc
pop
inc
subl
out
sti
inc
mov
xor
mov
xor
cmp
test
sbb
mov
mov
ja
adcl
jmp
shrb
stos
fsubrl
mov
test
sbb
xchg
std
or
std
icebp
bound
aas
clc
mov
repnz
outsb
andb
push
cmp
xchg
jl
mov
adc
hlt
sar
or
enter
jo
aas
xchg
mov
sub
stos
popa
xchg
jecxz
in
push
cmpsl
hlt
sbb
pop
scas
mov
dec
xchg
fucomip
ja
shrl
ror
jmp
mov
rorb
ror
clc
cmpsb
pop
xchg
mov
lds
push
ljmp
push
aad
stos
or
and
xor
jecxz
mov
ret
pop
jnp
mov
mov
loope
cmpsl
add
insl
not
test
movsb
add
in
loope
icebp
inc
fldl
mov
ds
test
imull
inc
andb
testl
dec
push
pop
rorl
cmp
mov
adc
push
pop
mov
enter
cmp
cmp
and
lahf
inc
cmp
inc
mov
cmp
mov
cmp
sub
xchg
fucomip
adc
pop
cwtl
pop
loope
cmp
cs
inc
fldl
mov
loope
push
push
in
enter
test
rorb
dec
xchg
das
and
notl
aas
scas
lahf
sbb
xchg
shl
loope
enter
xchg
xor
cmp
orl
mov
rsm
es
jmp
adc
rcrb
adc
mov
lea
cltd
sub
mov
mov
mov
sbbl
jbe
xor
xor
dec
and
fbld
in
std
add
outsb
dec
mov
adc
or
aad
mov
fisttpl
xorl
lock
dec
jp
pop
push
jae
pop
push
dec
outsb
push
adc
popa
mov
cltd
cmpsb
push
cli
mov
mov
inc
or
xchg
es
mov
subb
push
mov
pop
test
inc
push
fmuls
cmpsl
dec
pusha
add
xchg
std
sub
push
sti
jl
adc
int3
shlb
or
stos
pushf
dec
stc
nop
sbb
repz
dec
cltd
rcrb
sub
pop
add
push
jbe
fs
inc
loop
outsl
sub
rorl
cmp
jbe
test
push
xor
out
mov
out
mov
jb
xchg
pop
movsl
or
inc
insb
add
inc
mov
lods
jne
notb
std
std
sti
and
mov
lahf
lds
lcall
loopne
stos
arpl
lock
mov
shlb
enter
jne
pusha
icebp
adc
loope
push
aas
imul
inc
xchg
inc
in
dec
int3
inc
add
lods
pop
xor
cmpsb
jbe
sbbb
sahf
and
adc
mov
loopne
aad
mov
loopne
jmp
test
cs
or
mov
ficoms
aaa
das
jns
xchg
iret
adc
push
stos
sbb
test
xlat
push
pop
in
jns
cmp
pop
mov
jl
xchg
stc
push
pushf
stc
ret
psrlw
ja
loope
loop
js
push
scas
pop
pop
mov
sbb
add
cld
push
ljmp
push
and
stc
leave
sbb
inc
fisttps
stos
icebp
int3
dec
scas
mov
ja
movsl
int
push
mov
out
push
adc
jo
sub
fwait
jnp
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
adc
xchg
push
add
insl
mov
lds
and
test
mov
repnz
xor
jecxz
xchg
jbe
popf
out
out
jae
and
dec
std
int
sub
test
lods
sub
cmpsb
jmp
mov
fildl
add
and
inc
xchg
stc
cwtl
lret
in
sbb
cmpsl
loope
cmp
dec
aaa
cli
jecxz
gs
shrl
push
jg
pop
and
in
mov
movsb
pop
std
lcall
xchg
movsl
es
std
dec
nop
push
adc
sarb
xchg
out
mulps
flds
mov
dec
int
pop
mov
ja
aam
sbb
mov
and
sub
jae
bound
das
push
bnd
xchg
ljmp
imul
les
out
xor
test
addr16
pop
lcall
ja
add
hlt
inc
cmp
jg
inc
mov
mov
push
add
jle
adc
add
jae
push
pop
xor
leave
dec
dec
icebp
push
rolb
adc
gs
mov
add
mov
ret
lcall
mov
jb
xchg
loopne
sarl
out
sbb
and
adc
fstl
loop
shll
int3
add
dec
dec
jmp
cmp
or
movsl
pop
test
out
adc
add
ficomps
stos
pop
stc
pop
push
dec
daa
out
popa
mov
jae
lret
xchg
mov
sbb
inc
mov
leave
jno
sbb
stc
in
push
sub
fistps
cs
push
ret
adc
aas
push
repz
pop
orl
repnz
fsubrl
xor
jnp
sub
inc
add
sbb
xchg
and
call
fmull
popa
ret
dec
insl
mov
lcall
stos
add
dec
adc
pusha
xchg
jle
insb
xchg
pusha
cmpsl
ss
bound
mov
rorl
call
loope
jbe
cld
dec
lds
push
out
sahf
lods
aas
jns
xchg
cs
xchg
popf
aad
mov
push
in
jp
out
or
inc
cs
mov
mov
or
dec
dec
stos
aas
xchg
inc
xchg
sbb
cmpsl
pop
clc
or
daa
lret
sahf
outsb
inc
cmpsl
fstps
sbb
cs
shlb
ds
sbb
xchg
push
xchg
push
ja
aas
xor
aaa
gs
push
leave
cwtl
das
or
daa
ds
sbb
pop
dec
adc
cwtl
cwtl
pop
mov
mov
push
insl
ss
jge
aaa
cwtl
dec
lret
lcall
jne
lods
jne
adc
sbb
jnp
xchg
out
das
neg
cld
mov
outsb
cmp
mov
iret
push
icebp
into
jle
adc
xor
xchg
push
or
pop
out
sub
inc
inc
cmp
push
loop
idiv
fs
xor
orb
cmp
jg
cli
pop
es
dec
std
jmp
mov
mov
mov
int
sub
inc
inc
sub
jle
inc
sub
cmp
pop
fwait
lds
inc
jle
dec
shll
in
sbb
dec
in
jl
stc
mov
popf
xlat
lcall
ja
xor
cwtl
pusha
inc
cwtl
xchg
push
sub
outsb
lea
insl
ret
fstl
movsb
mov
mulb
mov
iret
inc
pop
lahf
cmp
or
es
into
lock
add
dec
xor
aam
fmull
testl
cmpsl
xorb
xchg
xor
jmp
loope
xchg
aad
fidivrs
jbe
mov
dec
outsl
cmp
dec
mov
push
mov
or
and
notl
fnstenv
scas
cmp
popa
jg
lea
ljmp
pop
mov
jb
sbbb
ljmp
les
add
lret
add
push
push
scas
movsb
cli
sbb
jb
mov
imul
or
addl
loope
push
pop
or
jae
idivb
cmpsl
jnp
shrl
xchg
jno
in
arpl
ficompl
bound
dec
jae
inc
sar
int
gs
stos
js
out
push
mov
cli
inc
cltd
or
dec
int3
leave
mov
leave
adc
iret
loopne
shrl
fwait
orb
xchg
and
push
int
mov
sbb
insl
stos
fiaddl
shrb
cmpsb
mov
mov
mov
fistl
add
hlt
mov
jbe
pop
jne
mov
scas
push
aam
jns
hlt
sti
push
adcl
xchg
es
jbe
jo
xlat
jno
sub
xor
sbb
xlat
xchg
clc
dec
leave
add
cli
sbb
cmp
cmp
out
add
fld1
xor
ror
test
pop
mov
sarl
sub
mov
sbb
test
iret
cmc
adc
int
mov
mov
xor
push
sub
lods
out
repz
mov
pop
jge
cltd
in
test
scas
add
or
scas
pop
jecxz
and
pop
stos
and
mov
mov
jmp
lahf
mov
adc
adc
pcmpeqd
ljmp
push
or
push
sbb
cmp
and
popf
addl
ja
cmp
pop
std
bnd
pop
xchg
sti
repnz
mov
pop
fs
xchg
sbb
mov
mov
jns
xchg
xchg
fwait
icebp
inc
adc
push
loopne
sbb
into
xchg
xor
sarb
adc
popa
push
mov
insl
inc
inc
sub
and
mov
in
or
popf
sar
in
cmp
stc
lock
sub
adc
dec
cmc
xchg
mov
cld
pop
push
xlat
and
and
out
cmpsl
xchg
xorl
xlat
sti
addr16
mov
gs
jns
mov
aam
clc
push
and
lods
push
int3
stos
cmp
jbe
in
dec
xor
pop
sub
cmp
out
inc
add
movsl
loopne
cmp
fnstenv
fs
xchg
js
push
add
sub
addr16
sti
jnp
cmp
xor
ja
push
adc
call
and
sbb
xchg
in
mov
adc
mov
mov
jle
imul
repnz
dec
arpl
rcrb
repz
test
fs
pop
js
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
arpl
inc
add
aaa
xor
and
aas
xchg
enter
pop
aas
cmpsb
repz
jp
fdivl
bound
popf
outsb
hlt
imul
cwtl
clc
xchg
addr16
add
fmull
add
sti
ljmp
sbb
add
cmp
xchg
mull
xchg
mov
mov
mov
pop
mov
out
push
cmpsl
mov
sahf
mov
and
imull
mov
cli
test
push
pop
mov
xchg
add
fnstsw
sar
add
mov
push
or
std
pop
dec
jae
sbb
fcomps
pushf
ret
movups
pop
je
pop
mov
gs
fwait
nop
dec
jmp
adc
pop
or
aas
scas
mov
sbb
add
ljmp
in
movsl
jo
rorb
aam
adc
pop
mov
inc
jecxz
xchg
stos
push
xchg
into
add
push
sbb
xchg
add
repnz
push
pop
mov
cmp
rcrl
loop
sub
mov
and
mov
pop
stos
sub
ret
das
and
pop
xchg
push
xor
setno
jecxz
jo
jnp
lods
xchg
xor
push
pop
out
cs
int3
cmp
xlat
into
cmp
dec
shrl
dec
rolb
daa
sbb
shlb
adc
adc
aam
fcmovu
adc
xlat
inc
adc
adc
mov
lds
pusha
xchg
test
ja
aas
pop
nop
mov
lods
xchg
loopne
dec
push
mov
jp
mov
cld
xchg
loopne
into
xchg
xchg
enter
sub
fsubr
xchg
out
pop
arpl
mov
daa
pop
mov
mov
pop
movsl
or
arpl
nop
cmp
dec
insl
xchg
nop
jmp
data16
push
fistps
scas
xchg
cmc
push
xchg
jne
bound
inc
fmuls
les
in
cmp
addr16
sarl
and
ss
daa
xor
je
mov
xor
sbb
aas
mov
pop
iret
jne
popa
xchg
enter
cwtl
es
cmpsl
push
pop
fdivl
ficoml
inc
mov
xor
mov
cmp
sbb
mov
int
pop
mov
inc
inc
ret
mov
xor
out
fs
cli
rcrl
in
adc
jns
stos
xor
mov
inc
mov
aam
or
push
scas
dec
push
mov
xor
xchg
pop
movsb
adc
popa
xor
cmp
es
dec
inc
inc
shll
paddusw
dec
or
sbb
fistps
adc
lret
adc
push
dec
les
cld
xchg
enter
out
and
stos
dec
jg
aad
add
add
inc
sub
or
jp
inc
sub
add
push
cmp
mov
dec
pop
cld
fiaddl
xor
ret
fs
es
push
loop
out
lcall
add
jae
daa
adc
mov
dec
ja
in
rorb
sub
jmp
xor
push
lock
pop
andb
sarb
cmp
sbb
pop
dec
xchg
test
mov
sbb
xchg
dec
pushf
cld
movsb
adc
imul
sub
mov
dec
push
mov
mov
jb
push
cmpsl
adc
fstps
lret
inc
stos
sti
jns
mov
dec
testb
inc
insl
in
or
shrl
lcall
jg
mov
pop
ds
dec
add
hlt
mov
lods
push
cld
jp
insl
pop
test
and
pop
xchg
or
and
in
dec
pop
and
cwtl
dec
xchg
insl
notb
push
inc
sub
cmp
xor
imull
mov
in
call
xchg
lcall
push
xor
subl
xchg
int
ret
mov
cli
es
icebp
fdivs
pop
mov
pop
cltd
lds
shr
cltd
fnstsw
inc
hlt
dec
insb
sub
jg
xor
sbb
pop
xchg
aad
fldl
imul
sbb
sbb
cmp
push
mov
mov
iret
in
shlb
and
xchg
mov
or
es
pop
mov
jo
loope
add
push
sub
ss
pop
dec
out
xchg
mov
push
jge
lahf
sub
sub
leave
mov
jbe
sbb
pop
test
dec
inc
adc
pop
push
dec
mov
test
sub
arpl
jmp
lret
in
cmp
adc
sbb
adc
jmp
lds
imul
jnp
movsl
lahf
adc
fdivrs
mov
aad
add
jp
fisttpll
test
lea
andl
pusha
mov
sbb
fdivrl
test
shll
lods
dec
and
adc
rorb
leave
fdivs
int3
aad
or
inc
push
stos
lret
xchg
out
xchg
enter
push
dec
std
jl
stos
adc
jle
scas
mov
dec
xchg
push
mov
add
ss
dec
lcall
int3
xor
arpl
notl
aam
inc
outsl
in
mov
inc
dec
mov
scas
jle
imul
push
fdivrs
sbb
pop
jno
arpl
inc
test
push
add
jns
mov
and
sub
rcrl
movsl
dec
sub
rorl
pop
sbb
into
jg
out
inc
imul
pop
insl
sbb
push
cmp
inc
pusha
outsl
sbbb
push
mov
cmpsb
pop
push
outsb
dec
dec
xlat
pop
mov
clc
mov
xchg
push
js
das
sbb
in
mov
sbb
or
push
cli
push
ss
pop
push
and
adc
sbb
jno
inc
cmp
jle
xchg
rorb
in
mov
jb
jb
push
push
rol
dec
mov
jno
mov
mov
fisttpll
ret
sbb
enter
xchg
inc
in
xor
aaa
loop
cmpsl
dec
shr
ret
mov
fadd
xchg
xor
pop
popf
out
push
mov
cwtl
and
pop
bnd
push
out
sbbl
mov
test
shrl
leave
xchg
outsl
and
bound
adc
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
pop
clc
aaa
outsb
pop
in
and
or
sbb
mov
cmovae
jns
addr16
or
push
in
add
pop
in
mov
out
mov
mov
lods
mov
out
sbb
inc
cwtl
push
aas
mov
in
lcall
adc
shrb
fwait
aaa
xor
movsb
jl
pop
movsl
mov
or
cld
sub
mov
ss
xchg
inc
xor
imul
pusha
sbbl
mov
decb
add
nop
cmpsl
adc
mov
scas
adc
ja
mov
sbb
lret
in
xor
lods
mov
pop
push
retw
mov
out
pop
divb
jle
push
out
dec
mov
dec
mov
mov
imul
outsb
enter
fwait
push
fwait
xchg
fs
xlat
push
std
pop
ja
iret
mov
aam
jle
rorb
stos
mov
dec
orb
loopne
mov
adc
xchg
push
gs
lea
loope
mov
and
cmp
addr16
loopne
lods
mov
cmc
sub
lods
xchg
jae
es
popf
leave
sub
clc
pop
mov
mov
insl
sbb
dec
and
ret
sub
or
mov
dec
cmp
adc
push
push
sbbl
test
add
movsb
jg
sub
add
dec
dec
mov
push
mov
imul
out
mov
inc
and
orb
push
loop
loop
arpl
out
sbb
mov
cmp
ljmp
sbb
jmp
mov
cvtpi2ps
shlb
pop
rorl
cmp
push
adc
jbe
rol
adc
fxch
or
loope
int
mov
mov
xchg
andb
mov
aaa
rorb
pusha
ja
ficompl
data16
into
stos
ljmp
sbb
sbb
xchg
movsl
js
je
xchg
movsl
icebp
mov
cli
sahf
pop
pop
jo
stos
pop
jno
arpl
and
and
inc
sbb
and
xchg
pop
data16
mov
push
inc
inc
pop
mov
movsl
aas
push
aaa
int
lds
pop
aad
push
push
push
add
sub
out
ret
jl
mov
dec
int
cmp
outsb
repnz
pop
cld
outsl
push
popa
jne
or
push
out
xchg
cld
inc
scas
bound
inc
sub
divl
stos
cmc
out
les
xor
nop
push
imul
push
outsb
in
sbb
movsb
xchg
mov
xchg
jno
jmp
out
pop
mov
mov
cmpsb
repnz
pop
jns
frstor
adc
inc
lcall
fcomp
xchg
push
inc
bound
fadds
rcrl
shrb
ja
testl
sahf
loopne
or
jp
xlat
fwait
popa
xchg
int
repnz
cli
lods
and
pusha
adc
jecxz
push
repz
inc
testb
shlb
sub
mov
loop
push
dec
and
imul
xor
push
jo
movb
rcr
cmp
and
lods
enter
stos
jnp
out
pop
adc
les
iret
fisubl
xchg
aad
cmp
jge
leave
mov
popa
jno
aas
outsl
mov
adc
fdivl
scas
ljmp
adc
cmpsl
fwait
ret
jge
add
push
outsb
xchg
xchg
adc
stos
outsb
data16
int3
in
pop
cli
or
inc
in
bound
jge
subb
data16
and
aaa
ret
loope
ds
loope
enter
or
out
mov
lret
popa
add
jmp
push
push
sbb
xchg
mov
inc
sub
sbb
sahf
jne
outsl
mov
outsl
push
mov
mov
jecxz
lock
inc
mov
xlat
xor
cmp
push
es
subl
leave
pop
repnz
popa
scas
ret
test
leave
sbb
ret
leave
mov
aaa
add
fmull
or
in
not
leave
or
test
lds
daa
and
iret
or
pushf
outsb
push
sbb
lods
aam
cmp
or
lods
cmp
xchg
push
jb
data16
push
xchg
xor
fsubrs
sub
mov
mov
inc
scas
stos
lcall
mov
lahf
testl
mov
mov
loopne
cmp
test
add
nop
push
inc
xor
ficoml
mov
cmp
lcall
sub
fildll
pop
sarl
es
jo
in
push
dec
ss
jecxz
dec
push
fdiv
add
jne
or
sub
cmp
je
cmp
pushf
add
inc
cmp
pop
movsl
cwtl
shlb
pop
ds
sub
ds
dec
stos
movsb
xor
insb
xchg
or
mov
xor
inc
dec
mov
jle
fs
jle
xchg
xchg
jge
negl
inc
dec
xor
push
test
sti
pop
push
inc
cmp
xchg
hlt
js
into
test
mov
outsl
jnp
add
popf
pop
sarl
push
or
pop
xchg
or
andl
lods
movsb
push
jg
in
xchg
jmp
xchg
push
es
pop
sbb
mov
mov
shl
int
aaa
ss
jno
mov
xchg
xchg
andl
cli
je
js
mov
pusha
sbb
mov
stos
mov
dec
add
movsl
xor
clc
popf
mov
mov
ljmp
pop
lods
scas
xchg
das
ret
lods
mov
test
push
inc
ret
cld
dec
jg
push
xchg
inc
cmp
aam
pop
push
mov
jns
xchg
adc
jo
icebp
in
push
lods
push
dec
mov
test
ret
and
mov
pop
sub
cmpl
xchg
cwtl
cmc
ficompl
add
sbb
pop
les
fxch
mov
xor
not
rolb
stos
inc
lock
push
jae
sbb
mov
ss
movsl
add
movsl
fwait
andb
mov
aaa
lea
addr16
add
fldl
addr16
out
sbb
jmp
add
nop
cmp
push
out
mov
je
push
pop
rsm
mov
lcall
fwait
lret
sahf
mov
hlt
inc
in
xor
jne
inc
ss
pop
fcmove
lcall
jl
js
jbe
fsubr
pusha
mov
jns
insb
testl
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
add
push
push
mov
mov
addr16
xchg
mov
rcl
out
mov
cmp
in
pop
fadds
loope
inc
xchg
pop
cltd
loop
clc
inc
xchg
pop
out
bnd
push
inc
test
movsb
dec
les
cmpsb
aam
lods
lea
push
je
pop
xchg
das
cmp
imul
mov
test
jmp
cmp
dec
sarl
repz
sub
add
adc
adc
adc
push
in
gs
clc
adc
dec
jecxz
jg
dec
dec
inc
dec
test
lret
cmc
imul
push
test
icebp
fiaddl
mov
aad
cld
jnp
push
shl
pop
inc
cli
push
lea
inc
sub
gs
iret
cmc
xchg
lods
xchg
mov
jmp
jl
adc
loopne
ljmp
add
ds
push
imul
mov
int3
imulb
and
cmp
cmp
lcall
mov
push
fdivrs
fwait
jmp
test
lahf
in
adc
aaa
call
sub
sub
xlat
adc
and
ljmp
lret
mov
imul
xlat
or
pop
push
push
lret
leave
mov
mov
divb
jmp
adc
arpl
jne
leave
iret
xchg
xor
call
mov
fwait
sbb
ret
insb
mov
repz
dec
pop
pop
jl
stos
mov
xchg
cmpsb
rcll
cltd
leave
incb
adc
repz
adc
mov
mov
mov
jle
outsb
push
xchg
scas
sbb
sbb
dec
fcoms
pop
clc
sub
dec
nop
mov
js
and
das
gs
add
xchg
jne
jo
xor
repnz
pop
sahf
idivl
xor
mov
push
lods
out
cmp
sti
push
inc
adc
mov
push
cmp
stos
mov
sbb
cmp
in
dec
enter
ljmp
jg
mov
cltd
cmc
in
enter
jno
insb
gs
dec
adc
xchg
arpl
outsb
fisubl
mov
aad
shl
sub
std
jg
ficompl
cmc
stos
xor
out
mov
xor
sub
cmp
cs
pop
push
mov
movsb
aad
xchg
sbb
cmp
add
jo
sbb
fcoml
jns
ja
mov
inc
and
out
pusha
in
repz
mov
inc
sbb
pop
mov
add
inc
mov
pop
mov
ret
mov
sbb
pop
ret
lods
cld
shrb
dec
or
inc
inc
loope
xchg
jle
mov
xchg
and
ret
cs
push
or
fsub
adc
rorb
push
es
lret
rcrb
push
push
roll
or
icebp
pop
push
inc
insb
subl
jb
adc
pop
pushf
ror
push
faddp
mov
jne
ret
sbb
push
in
push
jp
stos
jbe
in
stos
pop
cmp
ss
push
jne
xchg
sub
jmp
mov
cmp
repz
andb
pop
stos
imul
jnp
and
jnp
push
pop
or
ja
arpl
sbb
jmp
fwait
jge
sbb
jle
add
push
shll
mov
lods
mov
mov
mov
imul
jle
sub
lock
inc
and
mov
xchg
lahf
fimuls
pop
fwait
pushf
or
out
cltd
adc
cmp
into
loope,pt
push
icebp
dec
insl
mov
add
xorb
inc
push
add
sub
lret
mov
sahf
pusha
fists
or
fldenv
aaa
lods
and
add
rclb
and
lret
jp
into
xchg
stc
mov
adc
in
loope
out
pop
lods
icebp
push
and
xor
cmp
popa
xor
mov
adc
loop
mov
mov
shll
mov
xchg
call
or
xchg
stos
test
mov
mov
sbb
jno
sub
lea
jne
mov
inc
pop
mov
mov
jg
movl
jnp
imul
dec
das
imul
mov
je
xor
mov
xchg
add
std
sub
arpl
loopne
inc
sbb
pop
inc
stc
movsb
mov
fs
imul
pop
es
push
xchg
and
jo
push
lea
or
fnsave
jle
adc
xor
adc
les
add
lods
and
bound
out
stc
mov
daa
mov
sbb
cmp
mov
lods
in
adc
in
push
arpl
push
loope
inc
ret
loope
sbb
lods
roll
push
cmpsl
mov
outsb
sbb
aas
es
mov
push
add
les
jbe
push
shrb
data16
in
push
lods
adc
sti
into
les
dec
push
mov
cli
xor
ljmp
mov
lret
ret
mov
dec
adc
jle
inc
loope
adc
pop
xchg
nop
fisubrs
xor
rorb
adc
mov
push
inc
outsl
mov
mov
daa
jecxz
dec
sub
xchg
fisubrs
js
imul
icebp
sahf
xchg
loop
xchg
shll
mov
les
in
cltd
call
les
inc
cmp
xor
data16
mov
outsl
mov
jg
jne
clc
test
sti
mov
mov
in
mov
sar
sub
pop
pop
pop
and
mov
orb
outsb
xor
push
adcl
xchg
pop
mov
push
aaa
aas
jno
lea
push
scas
movsb
push
sub
inc
adc
sbb
das
push
movsl
jo
stos
pushf
push
nop
call
ja
mov
fs
adcb
cmp
dec
cmp
ss
mov
rorl
je
sti
adc
sub
xchg
jle
inc
mov
cs
lods
mov
lods
adc
insl
mov
int
cs
in
sbb
mov
inc
jb
stc
lahf
fwait
fstpt
mov
jne
mov
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
mov
add
ret
adc
int3
or
xchg
aad
arpl
xchg
mov
mov
mov
aaa
dec
xchg
lock
inc
scas
jo
lret
mov
scas
jb
or
pop
add
icebp
jns
repnz
xchg
adc
out
mov
aas
inc
mov
jmp
mov
add
mov
and
mov
inc
xchg
stos
sub
push
outsl
pusha
jo
xor
mov
test
mov
cmp
push
or
enter
iret
retw
xchg
push
cmp
ss
imul
inc
dec
sub
xchg
mov
in
ljmp
lret
adc
fisubl
sbb
push
mov
movl
popf
test
adc
in
js
lods
subl
add
or
push
mov
push
clc
inc
aas
xchg
and
adc
push
add
lock
movsl
cmp
cmp
arpl
div
jl
sub
nop
xor
lds
cwtl
mov
or
jl
mov
adc
and
dec
sbb
sub
xor
xlat
adc
dec
pop
push
add
cmove
mov
pop
bound
lods
xchg
push
mov
or
mov
andl
adc
add
jbe
repz
clc
ljmp
or
out
das
jl
adc
das
fcomps
xchg
mov
das
lret
mov
add
mov
xchg
mov
std
sub
imul
lret
inc
and
mov
rcll
aad
inc
mov
jp
rorl
or
fwait
jp
popf
ljmp
mov
jecxz
lahf
scas
jl
cmp
stos
mov
test
push
adc
add
mov
sub
jae
jmp
fwait
stos
arpl
mov
in
xchg
lea
jle
in
jnp
cmpsl
cmpl
push
fldt
cmp
push
scas
adc
mov
addl
xlat
pusha
ror
dec
aam
inc
cld
sbb
cmp
jmp
mov
mov
push
loope
or
pop
loop
xchg
or
sbb
jae
push
into
sahf
or
jnp
js
push
adc
sub
sbb
adc
outsl
fidivl
push
mov
jno
gs
icebp
mov
aam
adc
dec
mov
xor
push
dec
pop
jo
mov
xor
mov
in
jbe
in
cwtl
sarl
inc
scas
paddusb
mov
jbe
xchg
mov
gs
and
jne
add
mov
xor
cmp
mov
and
jb
testl
pop
dec
test
jp,pn
clc
pusha
hlt
cwtl
push
js
fisubrl
mov
fmuls
jmp
inc
pop
mov
mov
mov
cmpl
fwait
fs
imul
shlb
inc
mov
aam
icebp
push
push
and
push
mov
cmc
adc
cmc
setne
jae
emms
lds
out
cmp
sahf
add
mov
pop
aam
sbb
mov
cli
jae
pop
dec
adc
rclb
adc
xchg
and
jo
insb
adc
fiaddl
or
aad
mov
jne
mov
hlt
in
adc
or
pop
dec
rcll
cmp
dec
mov
mov
push
in
stos
es
cmpsb
add
and
movsb
cmc
loope
mov
in
jnp
bndldx
sti
jnp
jecxz
cmp
mov
add
push
lds
movsb
test
adc
hlt
ljmp
cltd
sub
or
cmp
pop
pop
shrl
mov
test
loopne
and
and
and
cmp
pop
mov
into
or
cmp
inc
hlt
and
pop
arpl
cmpsb
xchg
jge
loopne
cmp
cld
std
lret
popa
xchg
xchg
xor
adc
add
mov
daa
add
ss
adc
outsb
scas
out
icebp
lcall
hlt
xchg
mov
sahf
push
mov
js
clc
insl
ds
xchg
push
xchg
loop
jl
hlt
lret
inc
flds
rclb
mov
jnp
hlt
push
xor
stc
push
int3
jg
test
add
pop
dec
inc
mov
dec
add
sbbb
in
cmpsl
mov
mov
outsl
stos
insb
fcmove
push
mov
add
add
mov
jp
rcr
xchg
jle
sbb
mov
cmpl
jns
dec
lcall
insb
in
loopne
add
int
pop
repnz
pop
test
xor
insb
loop
sub
popl
cmp
mov
pop
cmp
sub
mov
dec
inc
mov
lret
push
xor
fistl
int3
xchg
mov
divb
aam
fstp
pop
mov
pushf
dec
mov
insb
cs
pop
cmp
shlb
lahf
mov
mov
sub
call
bound
xor
movsl
rolb
inc
sahf
xor
jmp
movsb
je
ret
xchg
js
mov
mov
and
dec
xor
fidivs
xor
dec
adc
test
inc
mov
pop
subl
cmc
test
jae
testl
and
jno
mov
aam
popf
aad
sbb
and
ds
outsb
daa
insl
leave
mov
add
pop
sub
cmc
xor
mov
cld
lret
ss
push
push
add
sub
bound
and
inc
es
int3
sbb
jo
jge
cmp
fimuls
inc
add
dec
or
pmuludq
rcrl
xor
add
sbb
clc
fcmove
dec
xor
punpckhdq
sbb
mov
mov
call
fldl
ds
repz
test
leave
testl
mov
mov
in
cmc
ret
cltd
jo
cltd
inc
dec
xchg
inc
lret
inc
dec
push
mov
dec
icebp
cmpl
xchg
jp
out
mov
xchg
cmpsb
or
mov
iret
fwait
mov
and
repz
ja
inc
test
inc
adc
pop
xrelease
scas
inc
mov
xchg
mov
mov
arpl
mov
mov
sub
insb
sahf
cmp
repnz
sbb
or
dec
repz
pop
int3
jmp
inc
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
add
add
add
sbb
test
mov
pop
aaa
fldt
imul
push
push
sbb
int
xchg
notl
addr16
xchg
mov
int
inc
xchg
mov
pop
cmp
inc
dec
nop
pop
sbb
push
gs
cwtl
cmpsl
add
in
cs
je
xor
std
lcall
pop
xchg
dec
cli
filds
adc
xor
loope
lea
and
testb
pop
xchg
mov
hlt
push
nop
shl
out
in
adc
je
and
xor
arpl
dec
jb
push
lods
aam
sub
push
test
lahf
cld
outsl
jge
into
mov
mov
lret
iret
lock
rcrl
sbb
nop
and
dec
xor
out
push
and
cld
or
lock
cmp
ret
jmp
sub
and
xchg
add
inc
xchg
je
sub
jle
xchg
xor
sub
loopne
out
sub
std
and
push
pop
rcrb
lea
mov
out
push
in
fdivp
scas
dec
xor
inc
jle
std
lds
push
jns
mov
pop
in
andb
mov
pop
adc
int
ja
mov
push
xor
pop
adc
lods
pop
or
xchg
in
or
outsb
inc
outsl
jl
rclb
push
pop
sbb
inc
pop
dec
adc
mov
push
cmp
push
fisubrs
push
dec
in
xchg
cmp
js
ja
cmp
add
push
dec
addr16
xchg
xchg
mov
mov
fs
mov
push
subl
sub
push
stc
int
fmul
inc
sbb
std
test
ljmp
mov
mov
ret
in
ja
sbb
pop
jne
sbb
or
and
cmp
xchg
out
mov
pop
sbb
mov
iret
out
js
and
lret
add
aam
or
cmpsl
inc
ja
imul
sbb
xor
insl
bound
data16
mov
cmp
shll
into
cmpsl
aam
pusha
xchg
pop
test
or
sti
imul
notl
cmpsb
iret
insb
mov
pop
not
lret
mov
dec
mov
mov
jecxz
or
push
mov
jns
jbe
mov
cmp
xor
psubd
push
add
mov
xor
pop
scas
pop
das
outsl
cmp
cmp
cmpl
popa
mov
lods
nop
je
sbbb
out
adc
adc
pushf
adc
or
pop
ja
aaa
test
movsl
push
push
je
pop
push
je
aas
int3
sbbb
stos
cmpsl
test
loop
jno
in
pcmpgtd
in
in
xchg
out
pop
lods
cmp
xor
out
and
inc
mov
pop
lcall
lea
xchg
dec
stos
test
in
lock
aaa
out
insb
jns
test
pop
lods
aas
jp
lds
test
pushf
or
add
fsubl
pop
fsubrs
inc
mov
adc
movsl
mov
out
jns
lea
mov
nop/reserved
inc
mov
mov
popl
nop
dec
sbb
inc
jbe
fidivs
shlb
cmpb
das
lahf
sahf
dec
ret
call
push
ss
orl
pop
leave
sbb
int3
cmp
jnp
or
inc
shrl
fbstp
push
push
int
mov
insl
mov
mov
cmpsb
repz
cwtl
pop
int3
movb
inc
fmull
lcall
test
fdivrs
and
call
mov
insb
dec
sub
lock
cmp
lock
mov
test
xor
mov
test
xchg
cmp
stc
push
mov
xchg
cmp
mull
sbb
daa
addl
rcrb
lock
mov
dec
push
std
pop
das
xchg
loope
lods
test
inc
sub
jmp
mov
popa
data16
push
shrb
std
in
call
add
pop
mov
ss
test
hlt
inc
sbb
jae
cmp
inc
sti
mov
out
jge
or
mov
insl
pop
arpl
outsl
fsub
or
jno
dec
dec
data16
cmp
pusha
xchg
jmp
dec
mov
push
andl
sahf
push
ror
push
lret
in
popl
bound
xor
add
push
add
lret
pushf
mov
pop
mov
push
adc
push
or
mov
inc
pop
mov
iret
clc
fisttpl
ud2
mov
out
pop
sahf
inc
mov
push
pop
pushf
test
push
lcall
pop
ljmp
sbb
ret
dec
push
es
cmp
push
lret
mov
cmp
pop
mov
mov
fwait
pop
idiv
mov
pop
ss
das
rclb
test
sbb
dec
shlb
testb
push
mov
mov
xchg
and
imul
lock
jne
fistps
cltd
cmp
and
movsb
dec
inc
je
cmpsb
xchg
pop
fsubrs
loope
shrl
cmp
clc
xor
pop
or
xor
cmc
add
scas
xor
sbb
insl
ds
or
lahf
push
cmp
xchg
adc
or
sbb
push
sub
shl
or
cmp
das
pop
jne
fsubrs
sub
sbb
inc
cmp
cmp
or
pop
add
cmp
cltd
leave
push
lahf
mov
imul
and
std
ja
loope
add
test
xlat
fs
xchg
imul
pusha
xchg
adc
pop
mov
mov
adc
or
and
sbb
call
push
jne
div
mov
mov
jp
sbb
mov
cwtl
in
test
push
std
or
and
mov
das
hlt
jne
sti
subl
gs
mov
ss
loopne
mov
ret
cmp
jl
adc
lret
and
push
std
stc
outsl
jns
push
xlat
lods
mov
pop
sbb
sbb
bound
fadds
movsb
xor
push
add
pop
cmpsl
add
inc
mov
add
cmp
aad
mov
adc
push
jno
xlat
fs
dec
mov
jg
and
and
les
push
xlat
sbb
pushf
mov
scas
xchg
scas
and
test
cmpb
out
out
in
scas
cmp
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
mov
call
cvtps2pi
push
jmp
push
sti
add
cmpsl
in
mov
int
cmp
stos
xor
mov
and
fildll
mov
out
mov
pop
add
cli
sbb
outsl
jns
push
sub
and
fisttpll
add
mov
stc
imul
lods
sbb
push
fdivl
xchg
sahf
scas
outsb
sub
test
pop
shlb
xchg
mov
aaa
hlt
ds
mov
test
inc
xchg
push
jnp
mov
mov
ret
popa
adcb
push
std
or
je
and
loop
ss
mov
inc
out
cltd
pop
add
mov
icebp
mov
add
fwait
pop
out
mov
sbb
leave
lea
sbb
inc
out
push
mov
push
repnz
enter
mov
arpl
fstl
mov
cmp
fidivrs
pop
mov
aad
jmp
mov
mov
xor
repz
das
sarl
fsubrp
nop
les
rclb
push
sbb
ret
inc
or
cld
lods
bound
imul
push
pop
sbb
int
mov
add
outsl
lock
cmp
in
add
rolb
ror
movsl
stos
fstpl
xchg
mov
add
sbb
rol
xchg
loop
fwait
push
mov
fldl2t
xor
fstpt
ror
adc
push
mov
cs
fcmovbe
mov
jns
test
daa
ss
fstpt
insb
dec
push
mov
call
push
sbb
push
jo
stos
lea
inc
mov
fsubrs
dec
daa
pop
rcrb
push
fadd
out
loope
std
call
push
mov
push
push
xchg
lods
dec
cmp
testb
leave
outsl
xchg
xchg
lea
xorb
imul
inc
adc
popa
in
mov
movsl
dec
addb
cmpsl
pop
aam
pusha
stos
aam
pop
lea
adc
cmp
out
test
notl
mov
xchg
xchg
and
cmpsb
adc
jae
into
xlat
or
adc
adc
fidivrs
mov
pop
imul
cmp
add
add
sub
mov
mov
sub
inc
and
repz
or
test
je
pushf
loop
jecxz
cmp
std
and
jmp
mov
leave
bound
pop
aam
inc
sub
ficompl
clc
xlat
push
adc
jo
lods
sub
rcl
dec
push
pop
push
mov
sub
mov
mov
movsl
add
mov
cli
loop
stc
push
outsb
mov
xor
in
sbb
jnp
lea
jo
mov
jnp
adc
loope
jae
in
sub
xchg
mov
lods
mov
xchg
cmc
push
or
aas
pop
clc
lret
inc
pop
mov
pop
sbb
mov
jae
push
call
pop
mov
dec
mov
mov
jnp
cwtl
mov
dec
ds
xchg
mov
pop
mov
xorl
jae
dec
ja
mov
int
adc
jae
jae
push
or
addr16
aad
pushf
xchg
mov
xchg
div
pushw
call
cmp
push
sbbb
add
ret
int3
xor
dec
sbb
sub
inc
lock
and
mov
and
addr16
daa
ret
push
out
out
mov
jmp
push
mov
inc
mov
cmp
bound
movsb
or
mov
xchg
xor
jmp
inc
push
add
out
daa
pop
push
mov
sbbb
out
add
mov
imul
push
aad
mov
imul
jne
call
xchg
push
xchg
dec
xchg
mov
fs
dec
push
ficomps
stos
mull
daa
pop
sub
gs
cmp
pop
pushf
cmc
add
push
and
and
fsubrp
in
mov
lcall
xlat
cmp
mov
push
out
jle
mov
xor
insb
and
and
stos
daa
cld
shl
mov
push
int
testl
xlat
mov
dec
sbb
int3
dec
leave
mov
decl
int
mov
int3
stos
sarb
push
mov
mov
cmc
xor
mov
das
sbb
mov
ss
repnz
mov
cs
mov
add
mov
lds
lret
cmpsl
lahf
mov
and
mov
icebp
shll
movsl
add
test
xchg
test
cli
lret
cmp
mov
je
adcl
icebp
xchg
push
jle
into
loope
adc
mov
les
sbb
sbb
mov
jmp
add
cmp
mov
subl
dec
jecxz
dec
aad
rcrl
out
fisttpll
sbb
je
stc
aaa
sub
sarl
add
xchg
movsl
cmp
rcrb
xchg
xchg
inc
inc
or
jbe
fwait
adc
push
fistl
xchg
inc
mov
push
leave
mov
pop
fstpt
dec
std
cmp
bound
cmp
or
or
adc
aad
adc
add
rcll
and
pop
stos
sbb
int3
imul
mov
mov
mov
pop
repnz
xlat
fcoml
mov
push
movsb
loop
fsubl
dec
xchg
jle
push
repnz
lods
addr16
std
repz
insl
insb
out
inc
ljmp
fucom
sti
mov
roll
pop
and
or
pop
inc
inc
mov
test
sbb
ja
jae
mov
jno
ret
cmp
clc
jge
xor
dec
mov
mov
add
cwtl
lahf
xchg
xor
cwtl
add
int
test
pusha
cmp
pop
fcmovbe
mov
and
mov
insb
pop
add
js
cltd
dec
pop
mov
stos
leave
movq
jmp
shlb
jecxz
adc
cmc
imul
ljmp
icebp
add
pop
fstps
mov
insl
cmp
call
push
inc
inc
test
and
jae,pn
mov
sub
imul
and
add
xchg
lret
out
in
hlt
sub
into
cmp
into
orb
loope
pop
sahf
data16
inc
sub
cmpsl
lret
dec
xor
arpl
xchg
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
nopl
cmp
imul
aam
lods
aam
insb
into
sub
adc
jo
arpl
or
rcrb
cld
mov
sbb
ficoml
daa
pop
cli
lret
cmp
push
sbb
outsb
icebp
push
xchg
loopne
jbe
das
aad
and
outsl
mov
stos
mov
incl
test
test
js
orb
or
xchg
xchg
sarl
push
and
aas
lcall
enter
sub
or
insb
fidivrl
mov
ljmp
cmp
test
dec
mov
xchg
dec
xchg
jb
andl
push
adcl
clc
pop
push
ljmp
iret
xchg
and
popf
fcompl
jg
xchg
ret
cmpsl
dec
idiv
fst
push
fnstcw
stos
xchg
movswl
cmp
cmp
jge
in
mov
jb
mov
sub
or
out
sub
mov
jo
mov
into
sbb
mov
rorl
push
test
dec
in
sarl
pop
loop
mov
jno
lds
push
imul
sub
push
sub
ja
popf
testl
inc
mov
cld
xlat
pop
das
mov
inc
mov
cmp
repz
mov
movb
bound
loopne
xor
shll
enter
es
push
xchg
addb
inc
pop
insl
adc
pop
dec
and
xchg
lds
adc
iret
lods
mov
dec
jbe
testb
or
arpl
pop
lods
test
and
stos
test
pop
repnz
inc
xlat
mov
push
and
pop
sub
adc
push
and
mov
jnp
adcb
adc
sbb
push
shlb
push
inc
mov
cmp
outsl
fdiv
and
xchg
mov
fidivl
xchg
jle
inc
shlb
cmp
xchg
mov
je
mov
push
push
cli
adc
pusha
add
xor
sbb
or
aad
xchg
push
jmp
push
fdivp
add
ss
inc
pop
push
and
push
sub
add
dec
testb
add
sbb
pop
mov
jns
pop
ret
pushf
loopne
sub
mov
pop
adc
mov
or
xorl
pop
fcoml
aaa
sub
jne
sbb
push
aas
das
cmpsl
mov
cli
add
mov
inc
xchg
scas
daa
sbb
shll
es
fwait
dec
push
dec
adc
subl
sti
mov
stos
sub
push
scas
adc
iret
sub
and
push
inc
xchg
cltd
popf
in
loop
stos
mov
push
insb
cld
mov
or
ds
in
sbb
mov
jge
js
jo
inc
bound
popa
leave
inc
lea
and
cmp
add
add
mov
pusha
jbe
sti
in
sbb
test
stos
sub
pop
add
fldcw
iret
dec
pop
das
shl
push
pop
xor
in
nop
sub
and
pop
fs
jecxz
push
cmp
imul
jbe
outsl
push
mov
pusha
or
mov
mov
adc
lcall
inc
jnp
pop
mov
fidivs
mov
push
jbe
and
jnp
xchg
in
sahf
stos
adc
rcr
cmpl
jb
cmpsb
insl
add
enter
lret
pushf
adc
cmp
lods
dec
add
xor
xlat
pop
xchg
roll
sbbb
aaa
outsb
ret
cmpsl
insb
xlat
mov
lea
sub
mov
cmp
orl
and
jne
cmpb
push
inc
jle
adc
shl
xor
cmp
test
jno
scas
mov
add
cwtl
sbb
ret
mov
in
in
push
add
in
push
and
push
push
fisubs
jnp
lcall
ret
xor
fcoml
and
cmp
inc
outsl
fildll
jg
mov
push
fwait
shll
mov
xchg
loopne
add
and
sbb
dec
loope
imul
cs
iret
mov
pop
push
or
cld
jle
mov
jbe
push
mov
add
outsb
push
sbb
aas
mov
push
dec
mov
cmc
inc
jmp
dec
dec
xchg
dec
in
out
popl
test
fstps
xor
loopne
int
fs
mov
mov
push
pop
dec
mov
adc
sbb
popa
fistpl
aad
arpl
ret
lret
jg
xorl
xchg
jle
cmp
sbb
lock
inc
xor
hlt
ja
mov
mov
lods
movsb
add
cmpsb
pop
movsb
push
mov
es
fldpi
mov
jecxz
add
inc
xchg
adcl
pop
push
or
stos
push
call
pop
mov
or
dec
cmp
insl
outsl
xchg
and
jb
adc
lret
les
addr16
cld
sbb
push
movsb
adcl
and
and
sub
sub
fstpl
mov
scas
les
add
in
push
jmp
dec
lds
shll
xchg
push
into
pusha
sbb
test
ret
mov
push
sub
add
sti
dec
jb
or
pop
xchg
ja
fstpl
push
out
into
es
clc
insl
jae
int3
out
inc
inc
mov
call
std
shlb
inc
sub
stos
cmp
ret
jbe
std
lret
lret
mov
inc
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
add
xchg
loope
invd
add
ud1
cmp
gs
or
mov
imul
mov
das
psubd
pop
aas
jmp
icebp
fstps
shll
jne
in
aaa
dec
adcb
rcll
mov
fs
xchg
jae,pn
das
adc
dec
jmp
and
jae
repz
xor
fwait
lahf
xchg
push
popf
shll
sti
or
leave
pop
lods
in
out
das
adc
mov
push
dec
repz
lds
negb
stos
jge
ljmp
lahf
jl
daa
xchg
cmc
push
inc
adc
fidivrs
jbe
es
bswap
pop
add
addr16
insb
ret
leave
js
and
rcrl
xor
mov
pop
sbb
out
outsb
fcomp
shrb
imul
mov
imulb
lea
jge
imul
les
in
mov
dec
mov
cmp
insl
mov
xchg
push
bound
add
mov
cwtl
stos
out
movq
mov
jno
fldt
mov
pop
pop
dec
loop
mov
adc
test
into
dec
incb
out
jp
push
fimull
sbb
addr16
outsl
fwait
lret
outsl
dec
xchg
les
jno
pop
or
jp
pop
lock
adc
outsb
and
pop
mov
ficomps
test
mov
inc
loop
inc
popa
adc
adc
gs
xlat
jp
xchg
mov
jmp
jp
ror
cs
and
adc
push
mov
loop
ds
jge
out
std
add
stc
shl
out
cmp
rcll
test
lds
mov
or
ret
mov
xor
idivb
std
out
xor
mov
dec
lret
in
fistl
push
scas
and
cmp
loop
inc
in
cmp
pop
sub
jecxz
iret
sbb
enter
mov
mov
xchg
pop
subb
cmp
inc
popf
ja
mov
sahf
mov
movsl
jbe
icebp
dec
shll
xor
and
push
sub
mov
shll
incl
aad
ret
pop
push
ret
out
jne
insb
sub
dec
xor
adc
cmpsb
inc
daa
ret
jl
lret
adc
sbb
addr16
popa
jbe
pop
sub
shl
push
sti
imul
pop
adc
js
loopne
mov
mov
xor
cmp
push
pop
dec
dec
sbb
pop
sbb
imul
in
sub
xor
pop
mov
ret
mov
out
decl
fdivr
mov
movsb
call
jb
push
stos
std
iret
jbe
inc
out
jle
test
sbb
xor
or
andl
xchg
push
mov
push
add
inc
setle
enter
sbb
fcmovnb
in
xchg
and
add
sbb
inc
or
sahf
xlat
mov
mov
pop
pop
filds
add
out
rolb
jnp
ljmp
jbe
cs
pop
out
mov
int3
fdivl
inc
pop
pop
mov
jp
mov
ret
mov
jmp
incb
jno
jnp
popa
jo
test
insb
jb
arpl
pop
push
repnz
push
lret
xchg
cwtl
adc
hlt
iret
pop
subb
outsb
xchg
loope
xchg
inc
add
gs
dec
cmpsl
jbe
cwtl
cmp
xchg
in
adc
cmp
insl
js
jmp
or
inc
loope
mov
cmp
add
sbb
test
sahf
daa
std
xchg
cli
sbb
pop
out
mov
adc
adc
push
or
jae
cmpsl
push
mov
insl
notl
mov
cmp
and
js
les
xor
cmp
lock
gs
outsb
mov
dec
lret
nop
out
shr
sub
call
jae
xchg
jne
inc
movsb
fs
fs
pop
xchg
sbb
out
lds
lcall
adc
test
gs
mov
notb
divb
lahf
or
insl
sarl
pop
std
loopne
push
das
xor
and
pop
aas
push
lret
mov
aad
into
push
test
scas
popf
and
int3
aam
push
or
mov
mov
mov
add
jns
mov
out
sbb
jg,pn
mov
xorb
sub
push
aam
fmulp
fildl
jnp
xchg
jne
push
jae
inc
pop
dec
push
mov
gs
es
imul
es
mov
jnp
jecxz
imul
test
mov
ror
adc
lds
mov
dec
pop
push
fldl
xchg
pushf
mov
push
orl
xor
adc
cmp
adc
ret
stc
sbb
in
mov
jg
aam
imull
add
xor
test
mov
xchg
sbb
hlt
jo
mov
push
insl
adc
push
cmpsb
out
fcmovne
xor
sbb
add
ror
pop
pop
pushf
icebp
cmp
or
sub
mov
shrb
dec
add
sub
mov
repz
les
test
mov
push
inc
add
mov
sub
fidivs
bnd
add
mov
xor
add
int3
enter
push
sub
sbb
mov
mov
push
mov
push
sbb
jno
sbb
mov
mov
add
inc
out
loopne
addr16
scas
pop
aad
cwtl
outsl
jmp
jge
test
adc
lahf
cmp
adc
ljmp
dec
outsb
shlb
imul
xor
mov
pusha
dec
jb
pushf
fmul
idiv
push
xchg
adc
jo
mov
jecxz
push
call
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
test
mov
invd
add
pavgw
in
jp
pop
loope
loop
dec
loopne
int3
push
jmp
dec
inc
repz
xchg
std
iret
xchg
jp
cltd
insb
out
addr16
pop
shl
es
jns
mov
sahf
fsubrl
leave
cli
push
cmc
lea
movsb
fdivrl
in
in
pop
lret
sub
mov
fimuls
rcrb
inc
mov
stos
inc
ficompl
mov
and
add
adc
mov
loop
cmp
mov
push
push
out
jge
sbb
mov
ss
ret
iret
or
pushf
imul
sti
mov
data16
jl
movsb
mov
repnz
xor
into
or
jo
pop
mov
scas
mov
movsb
sub
adc
shr
adc
orl
in
into
out
or
out
stc
test
pop
es
lods
test
lret
mov
xlat
mov
and
out
xor
lea
dec
pop
dec
aad
inc
stc
cmp
movsb
ret
imul
adc
incl
inc
adc
repz
push
push
clc
mull
or
shrb
pop
pusha
cmp
stos
fldcw
inc
jo
inc
push
push
repnz
sub
inc
test
add
jb
out
loop
aaa
cmp
mov
inc
in
jnp
test
xchg
mul
xchg
std
pop
sbb
nop
addr16
jge
loop
dec
flds
stc
xchg
int
call
cld
insl
mov
outsb
out
shl
mov
enter
xor
jbe
xchg
cmp
mov
push
int
mov
mov
add
mull
inc
mov
add
iret
adc
jle
jecxz
sub
int
pop
popa
inc
mov
popa
shrl
sbb
push
test
dec
and
mov
jle
lods
add
and
mov
aad
mov
mov
mov
sbb
sbbl
mov
imulb
xor
push
jmp
jno
out
xchg
dec
lret
pop
subb
mov
or
les
push
jp
push
sti
sbb
pop
cmp
sti
mov
test
stc
arpl
test
lds
pop
mov
xchg
jle
jne
cmp
pop
mov
out
and
mov
movsb
mov
add
ljmp
lcall
push
shlb
xchg
pop
mov
movsl
clc
or
mov
xor
jle
test
and
clc
mov
push
stos
dec
ja
insl
roll
dec
pop
gs
loop
sub
xchg
mov
cmpb
add
cwtl
mov
popa
mov
inc
xor
subb
mov
jb
cmpsl
jnp
hlt
mov
aad
sbb
pusha
jle
jae
repnz
inc
add
cli
push
adc
leave
mov
cltd
clc
inc
test
rol
mov
jg
dec
mov
movsl
adc
in
cmp
add
stc
jmp
pop
inc
sub
ljmp
pop
and
adc
dec
fisubrs
mov
cmp
jns
pop
scas
imul
je
xchg
adc
or
add
repnz
scas
or
cwtl
lret
pushf
cmp
lahf
and
dec
es
and
divl
ror
rol
dec
inc
inc
mov
js
add
lods
hlt
mov
loopne
jns
and
hlt
popa
data16
xor
rorl
inc
xchg
and
dec
shl
rolb
js
pop
mov
xchg
jb
aaa
cmp
mov
loope
jl
mov
adc
repz
bound
cmp
and
cs
or
loopne
pop
addr16
xchg
inc
push
movsb
clc
cmp
lock
dec
les
lahf
inc
into
cli
into
cmpsb
cmp
dec
bound
jge
dec
push
xlat
ja
sahf
rorl
fsts
jno
xor
aaa
pop
shr
call
and
lods
lret
cmp
cmp
mov
cmpb
lret
mov
rolb
dec
dec
cltd
inc
mov
pop
pop
je
push
std
leave
push
xchg
out
sti
cmp
pop
test
add
mov
mov
dec
push
xchg
jno
dec
ljmp
add
pop
data16
ret
mov
hlt
lods
pop
pushf
or
cmp
in
xchg
adc
xchg
adc
clc
mov
sub
xor
scas
cwtl
test
lods
cmp
lret
popa
xchg
jl
mov
adc
aad
push
pop
cmp
cmp
add
cmpsl
call
loop
rol
ds
outsl
or
jb
push
es
into
adc
pop
lock
mov
call
and
jg
aas
xchg
push
sbb
and
jbe
scas
jp,pt
aas
bound
mov
add
mov
addb
xlat
xchg
movsl
pop
mov
mov
es
in
add
mov
rclb
into
push
mov
scas
adc
cmpsb
mov
push
sub
repz
js
add
cwtl
lahf
scas
sub
inc
xchg
repz
popa
mov
sbb
loopne
les
sub
mov
pushf
or
mov
dec
jns
cltd
jecxz
mov
xor
jp
jnp
jecxz
push
mov
fstl
pop
je
push
mov
sti
repnz
cmp
sbb
adc
icebp
xorl
jne
arpl
lret
adc
cli
push
push
sbb
jb
insb
dec
and
sub
aaa
push
enter
cmp
inc
pop
cmp
push
adc
pop
in
lahf
lods
fwait
add
jmp
loop
push
adc
jbe
xor
call
adc
inc
push
mov
js
cli
pop
sbb
adcb
data16
in
and
loopne
in
out
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
jg
loope
lahf
mov
inc
ds
cmpsb
and
xchg
outsb
adc
int
dec
mov
rcrl
mov
push
adc
pop
pop
xchg
mov
sub
cwtl
ljmp
shll
testl
iret
int
cmpl
stos
dec
add
jnp
push
and
aas
or
jmp
inc
ljmp
clc
cwtl
dec
dec
hlt
pop
adc
scas
lea
mov
aad
xor
or
cld
xchg
add
mov
aad
ret
jns
mov
clc
push
lahf
and
and
inc
movsl
mov
ljmp
popf
pop
icebp
inc
inc
aad
xor
sarb
ljmp
jo
rclb
xlat
jo
imul
mov
or
push
fsubrs
insb
fcomps
mov
loope
rcl
test
fisubl
shll
adc
jns
loop
shll
push
movsl
xchg
mov
adc
mov
dec
push
xchg
and
loope
in
and
mov
ds
movsb
idiv
inc
ss
jnp
sahf
xchg
loope
mov
adc
loopne
in
fwait
loope
in
movsl
mov
inc
jecxz
pusha
sti
arpl
dec
add
push
mov
fwait
mov
inc
jo
imulb
jae
mov
cmp
cmp
ja
push
xor
cmp
inc
pop
push
fadds
add
cltd
pushf
fidivs
push
sub
push
lcall
dec
cmpl
repz
jl
dec
or
adc
sub
inc
xchg
mov
mov
dec
mov
mov
mov
and
cmpsl
lock
filds
and
pop
ffreep
stc
jecxz
ss
outsb
xchg
cld
out
test
jp
cmp
sub
movsl
popf
fiaddl
pop
mov
inc
outsl
shrl
shll
xchg
aad
cwtl
xor
adc
out
std
addr16
hlt
pop
loope
inc
push
mov
ljmp
mov
mov
movsb
cld
mov
mov
cli
adc
ljmp
adc
cmp
or
add
bnd
xchg
or
jl
lret
repz
mov
cmp
mov
push
xor
pop
outsl
fiaddl
jne
test
pop
and
je
add
dec
adc
mov
or
dec
inc
mov
pop
int
dec
sbb
pop
inc
sbb
pop
jle
fcmovnbe
lcall
ja
push
nop
mov
imul
jae
xlat
insl
leave
cmp
clc
mov
sahf
jecxz
das
xchg
ljmp
jnp
mov
mov
outsl
cmp
icebp
mov
pop
mov
jl
cmp
adc
sub
pushf
jp
pushf
xchg
repz
les
adc
call
inc
and
push
sbb
fucom
mov
jecxz
enter
insl
aas
dec
mov
push
fsubl
rcl
sbb
jmp
popf
mov
ss
adc
repnz
ja
and
repz
mov
cmc
ja
inc
push
loope
jl
enter
dec
cltd
cs
mov
popa
push
cmpsb
lcall
outsl
or
push
movsl
shll
pop
and
lea
mov
mov
add
cmp
push
cmp
xor
cmp
inc
test
xor
arpl
idivb
lea
mov
scas
pop
inc
cmp
mov
sub
int
mov
imul
xchg
jg
in
push
mov
dec
xor
imul
adc
add
mov
or
lods
adc
pop
in
xlat
push
mov
mov
loop
jecxz
mov
pop
mov
stos
cmp
and
jbe
adc
mov
jno
sub
int
pop
decb
mov
scas
mov
lods
fsubrl
ljmp
cmp
add
sbb
call
add
in
push
pop
sub
sbb
out
push
jmp
add
mov
lock
mov
mov
cmp
or
gs
lds
imul
incb
pop
enter
jge
pusha
and
and
adc
mov
mov
lgs
out
idivl
lock
in
ret
data16
icebp
pop
enter
add
leave
outsb
xchg
xchg
inc
stc
popf
mov
mov
dec
fisttpll
movsl
add
popf
popl
sarl
jl
inc
orl
xchg
lods
push
push
adc
mov
arpl
add
mov
cmp
div
add
sub
add
xor
xchg
mov
adc
lret
push
push
push
jmp
fstps
aad
sub
cmp
aam
xor
xchg
dec
dec
mov
dec
mov
pop
mov
stos
sub
or
test
sub
stc
adc
and
or
push
test
stos
loopne
dec
insb
popa
popa
outsb
sub
std
ret
arpl
rolb
in
stos
sub
ret
addr16
sub
inc
or
and
enter
jnp
xlat
cwtl
int
and
stos
adc
mov
je
movsb
ds
push
fcomps
push
aas
inc
sti
les
xor
add
mov
loop
popf
dec
jbe
stc
adc
aas
ljmp
lock
les
stc
xchg
add
fwait
jb
sub
sub
shrb
inc
loope
insb
xchg
std
jno
dec
enter
shr
mov
pop
xor
inc
mov
pop
fcompl
movsl
sbb
xchg
adc
or
shlb
mov
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
and
invd
add
packssdw
outsb
mov
sbb
lea
nop
cmpsb
cs
scas
dec
add
repnz
and
mov
lahf
xchg
inc
inc
sar
lcall
ret
call
hlt
push
fucomi
push
mov
adc
sarl
jnp
repz
mov
mov
roll
push
sti
ret
shll
jns
pop
ficomps
mov
pop
outsl
in
movsb
fwait
or
push
xor
pop
or
ja
lret
dec
mov
aas
jae
xchg
repz
mov
jp
mov
sbb
ret
xor
fiadds
out
add
sbb
mov
mov
mov
lret
lods
aas
xor
mov
cld
stos
xchg
lock
cld
mov
mov
push
outsl
mov
xor
jmp
and
cmp
fneni(8087
pop
and
cmp
leave
inc
adc
mov
pop
xchg
cmp
mov
popf
jnp
sbb
mov
ja
bound
lcall
in
inc
je
insb
in
mov
cmp
cli
mov
pop
rclb
fwait
mov
neg
andl
pop
push
dec
push
lds
addr16
adc
pop
ljmp
pop
imul
cmc
mov
jne
je
push
out
in
pop
loopne
jno
inc
imul
mov
imul
push
out
mov
test
inc
jle
mov
ss
cmp
sarl
pop
in
dec
loopne
ret
rolb
push
jno
and
fadds
pop
aam
push
and
mov
cs
pop
mov
enter
mov
dec
lret
jge
adc
movsb
fidivrs
xchg
add
mov
sub
mov
pop
or
jne
lret
mov
decb
pop
cld
movsl
nop
sbb
adc
xor
and
shl
sub
mov
push
xor
mov
mov
rcrl
scas
and
xchg
or
mov
std
mov
dec
adc
mov
sbb
ret
sub
xchg
inc
inc
bound
sub
out
data16
bound
rolb
push
repz
mov
fisttpll
ss
pop
mov
or
jmp
inc
mov
push
or
xchg
jg
mov
cmp
repz
push
or
jae
pushl
pusha
jecxz
jp
mov
inc
js
es
je
xorl
cs
sbb
ret
ret
into
lcall
inc
push
lods
or
fistl
cli
movsl
mov
iret
sub
repnz
mov
inc
pop
cmpsl
iret
ds
dec
jae
cmpxchg
in
in
push
push
test
pop
fcmovu
xchg
or
pop
stos
dec
leave
repz
in
xor
fadd
mov
popf
out
fs
fs
inc
push
stc
adc
out
cmp
mov
inc
ljmp
cs
loopne
out
dec
cltd
adc
lret
fs
mov
in
dec
repnz
cld
mov
popa
sbb
imul
xor
mov
jbe
mov
js
inc
movsb
xor
in
push
cltd
jnp
and
mov
xchg
or
xor
add
icebp
inc
imul
dec
mov
fisubl
xor
cmp
clc
jnp
jne
or
mov
into
xchg
lcall
mov
aaa
or
cmpsl
or
scas
jb
cmp
inc
inc
adc
mov
stc
out
inc
push
imul
mov
xchg
cmpb
in
into
lods
cmp
sbb
xchg
mov
icebp
fisttpl
std
sub
or
es
mov
ret
inc
jbe
and
sahf
mov
cmp
popf
std
dec
mov
test
pop
xorb
mov
int
js
out
cmp
xor
ss
add
loop
ss
dec
mov
enter
push
dec
adc
cmp
pop
lds
es
repz
popa
fbld
in
xchg
lcall
scas
cmc
xor
or
jae
rcrb
lcall
jp
mov
pusha
repnz
add
inc
xlat
outsb
mov
xchg
into
or
mov
jge
xor
cmpsl
push
insb
adc
mov
cmp
jecxz
mov
shld
insb
fsubs
int3
adc
das
mov
push
push
push
jae
mov
jl
fs
mov
add
add
mov
jb
and
sahf
leave
jnp
jbe
inc
es
inc
cmpb
adc
je
outsl
in
mov
mov
das
fs
pop
sub
xor
enter
dec
push
call
lock
loopne
loopne
cmpsb
lea
pop
pop
xchg
push
lea
push
mov
mov
jg
cmp
enter
or
rol
jl
cld
mov
jno
and
jno
stos
dec
arpl
pusha
and
ds
jbe
sbb
ret
mov
jge
xor
aaa
int
loope
xlat
xchg
jecxz
lahf
xchg
push
mov
test
sbb
enter
cmp
movhps
and
sub
sub
mov
pop
andb
pushf
addr16
push
dec
push
cmp
in
jmp
push
aam
aas
sti
bound
es
cmp
xchg
fdiv
sub
stc
sub
xlat
les
insb
push
bound
cmc
sbb
push
js
movsb
pop
xor
cmp
inc
fistpl
push
in
mov
test
dec
in
filds
ret
add
add
xchg
inc
sbb
push
fisubl
xchg
xchg
movsb
add
mov
inc
nop
or
adc
jmp
loop
idiv
jmp
mov
xchg
mov
jnp
scas
popf
invd
add
unpcklps
popf
lods
loope
sbb
jo
adc
sti
mov
sbb
lret
push
lods
lret
mov
cmp
mov
sub
add
pop
gs
test
lds
or
loopne
and
pop
in
jecxz
lret
pop
test
xchg
outsl
int3
loopne
sahf
add
sub
sbb
imul
aam
and
add
inc
jecxz
sarl
jp
jecxz
bound
shlb
fisttpll
xchg
leave
xor
inc
mov
mov
lds
sbb
fwait
ljmp
in
dec
cmp
data16
sbb
ret
hlt
fistl
cmp
pusha
loope
xchg
xchg
xchg
bound
jp
loopne
aam
pop
imul
popf
add
int
and
or
repnz
cmp
orl
add
js
jge
imul
pop
and
repnz
hlt
add
stos
mov
insl
stos
cmp
into
ja
dec
dec
sti
stc
out
gs
mov
fdivrs
pushf
decb
cs
or
jmp
pop
insl
insb
mov
sbb
and
dec
mov
mov
xor
mov
jo
pop
nop
mov
and
in
adc
cmp
arpl
mov
sahf
orb
and
sub
fstpl
popf
pop
xchg
scas
inc
pop
pop
cli
rorb
rorb
mov
jo
pop
aam
mov
jae
add
or
sahf
xor
push
sub
outsb
aam
dec
push
popw
or
mov
xlat
cmp
cld
jne
push
mov
fwait
int
sbb
pop
mov
sbb
lock
mov
aad
jecxz
insb
inc
fimuls
xor
mov
add
arpl
outsb
jle
and
push
lods
sbb
jo
imul
addr16
int
and
shlb
lret
jb
scas
mov
jns
arpl
mov
add
negb
pop
xor
mov
stos
aas
lret
add
xor
sbb
add
jno
arpl
sbb
loope
lahf
sbb
repnz
mov
dec
ja
icebp
or
mov
insb
mov
add
pop
std
cmp
in
js
rolb
rorl
xchg
sti
lcall
jmp
ret
sbb
out
mov
iret
lea
jmp
pop
lods
andl
iret
lds
orl
icebp
fisubl
movb
out
add
inc
mov
cmp
adcl
mov
mov
jl
lcall
jmp
pop
testb
jbe
xor
popa
mov
aas
adc
lods
and
dec
fwait
xchg
in
mov
sbb
sarl
adc
mov
push
mov
jge
fsubr
in
loopne
mov
insb
int3
leave
or
clc
fildll
jnp
pop
pop
scas
adc
inc
aaa
ljmp
xlat
repnz
outsl
pop
movsl
sub
cmc
push
mov
stc
jl
rclb
std
lahf
test
sub
out
jecxz
inc
fidivl
xchg
je
xor
mov
add
adc
pop
repnz
insb
icebp
sub
lret
outsl
jle
les
push
lods
jp
sbb
xchg
imul
lods
push
xchg
test
cwtl
dec
and
and
das
sub
lret
sub
and
sbb
dec
pop
test
lret
xor
xchg
outsl
into
xlat
or
jo
test
je
jo
pop
cmp
sub
int3
sub
ds
stos
jge
dec
push
in
push
pop
hlt
sub
push
cltd
lds
rorb
xor
cwtl
dec
lea
mov
outsb
inc
stc
mov
push
outsb
ss
test
shrl
add
dec
mov
orl
idivl
push
fsubr
sub
xchg
movsb
or
cmpsb
jne
push
mov
jnp
in
orl
call
test
ds
cmp
cmp
sbb
sbb
sbbl
inc
lahf
push
adc
adc
ret
loopne
pop
cmpsb
and
lcall
stos
movsb
or
and
call
testb
mov
mov
jns
adc
sub
outsb
jge
pop
dec
int
sub
or
aaa
jecxz
addr16
sub
fucomp
icebp
jns
sbb
ljmp
jb
js
fs
fnclex
inc
xor
adc
sbb
inc
add
test
push
lods
lds
cltd
sbb
int3
test
sbb
cmp
sub
rolb
jae
xor
inc
and
test
push
and
lret
dec
mov
dec
cmp
mov
mov
cmp
cmpsb
int3
test
dec
popf
jle
cld
idivb
test
stos
push
inc
lret
and
or
call
sub
aad
mov
in
enter
dec
out
data16
cmp
xor
jae
inc
mov
adc
aam
vmovdqu
rolb
add
call
repnz
fst
sti
clc
cmp
outsl
fstps
sbb
cmpsl
call
fwait
aad
pop
daa
xor
loope
cwtl
out
lea
ja
addr16
mov
fildl
stos
dec
sub
and
popf
xor
xor
jmp
icebp
adc
xchg
loopne
sahf
xchg
sahf
inc
leave
inc
dec
scas
daa
fsubrl
insb
loope
aas
and
ss
push
dec
jmp
bound
add
dec
xor
lret
into
in
ds
out
cmp
and
cmp
shrb
subb
mov
lods
outsl
cmpsl
aam
pop
lahf
jo
out
lcall
lock
aas
xchg
cmc
pop
mov
outsb
jns
sub
xor
insl
imul
mov
das
sbb
imul
dec
insl
int3
enter
and
inc
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
mov
add
xstore-rng
cmpsl
outsl
hlt
or
push
mov
mov
rcll
mov
pop
mov
lcall
sbb
fcom
test
inc
pop
pop
in
mov
pop
fiadds
pop
xor
das
cli
adc
xchg
bound
mov
xchg
jnp
or
leave
int3
es
les
dec
jns
scas
add
jbe
pop
dec
jo
xchg
mov
loopne
sbbl
loope
xor
les
mov
out
push
cmp
in
sarb
xor
mov
outsl
push
xor
xchg
ret
add
movsb
imul
sbb
and
loopne
adc
push
test
or
clc
push
push
je
add
jb
js
jo
pop
sbb
pop
cmc
and
loopne
xorl
dec
neg
inc
mov
js
add
les
std
dec
mov
aam
or
lods
lods
xchg
push
mov
mov
inc
jnp
mov
mov
cmpl
fcompl
cmp
add
mov
cmp
mov
xor
data16
xor
scas
pop
sub
mov
out
repz
sbb
in
aad
test
lcall
and
cmp
mull
dec
pop
mov
jae
cs
gs
xchg
xor
das
mov
xor
scas
lret
repnz
mov
scas
pop
sub
dec
rcl
call
or
sahf
mov
sbb
jle
push
mov
dec
scas
mov
xlat
adc
lods
sbb
lods
sub
mov
ror
pop
repnz
push
mov
inc
insb
or
aad
mov
test
dec
jp
cmpsl
inc
mov
and
jge
cmp
call
xor
outsl
mov
push
or
push
mov
int3
push
rcrb
cmpsl
mov
xchg
add
pop
or
fbstp
das
cmp
loop
in
popa
imul
sub
out
bnd
mov
cmpsl
inc
mov
jo
add
fsubrs
cwtl
push
sub
ss
mov
jp
xchg
sbb
addr16
push
xchg
andl
fstpt
pop
push
jae
pusha
div
sub
mov
addr16
adc
sbb
mull
fcmovnu
pop
data16
jns
rcrb
sarl
adc
imul
xchg
clc
push
push
sbb
inc
sti
std
aad
dec
in
jmp
xorb
adc
dec
std
bound
xchg
pop
stos
pop
pop
shr
imul
or
mov
stos
adc
add
loop
adc
cli
xor
dec
subl
insb
fabs
andl
cmp
andl
push
nopl
imul
xchg
mov
cli
popf
adc
sbb
jns
xlat
mov
ret
adc
push
sub
pop
ds
sti
les
daa
movsb
sub
out
xchg
cld
add
cmc
cltd
scas
hlt
iret
jge
jg
or
mov
jnp
mov
lea
cwtl
in
test
subb
mov
fdivrl
sti
cwtl
mov
inc
jae
or
push
xchg
pop
mov
jnp
jns
add
subl
outsl
addl
es
cmc
je
rcrl
test
popa
xchg
daa
mov
xor
out
repnz
cmp
aam
sbb
ret
dec
ret
and
add
dec
sbb
ss
dec
inc
xchg
inc
movsl
adc
xor
push
add
push
sahf
fldenv
mov
addr16
xor
or
loop
je
repz
cmp
stc
jbe
inc
mov
sub
std
push
movl
dec
mov
mov
push
lds
pop
push
aaa
push
orb
mov
in
mov
adc
cmp
mov
and
or
adc
mov
sbb
or
aas
addr16
je
push
cmp
fistps
sub
push
loopne
in
mov
loope
lock
mov
inc
outsb
jae
or
cwtl
stc
data16
jno
popf
mov
nop
jne
fs
jne
mov
pop
scas
mov
hlt
or
stos
mov
jne
in
pop
out
push
mov
xchg
fldl
cmp
bound
pop
jp
pop
hlt
icebp
std
cmc
add
jecxz
out
stos
nop
inc
inc
push
dec
hlt
fnstenv
sub
scas
fwait
mov
adc
push
fildll
jae
filds
out
cmp
xor
out
xchg
dec
adc
les
notb
dec
xor
sbb
mov
lret
mov
lret
outsl
add
enter
and
mov
and
nop
inc
fnstcw
jle
mov
fcmovnu
jp
mov
or
insb
data16
rep
xor
sbb
cmp
imul
inc
imul
xor
sub
add
into
cmp
jle
sub
out
inc
outsb
push
fs
pushf
sbb
xor
or
movsl
cmc
outsb
adc
je
jp
sbb
add
stos
clc
jbe
dec
rcrb
mov
xchg
pop
fcoms
and
insl
adcl
jbe
out
movsbl
lret
xchg
push
jg
pop
aaa
stos
pop
icebp
jle
xchg
nop
sub
pop
ficompl
int
dec
int3
add
inc
loop
jae
lea
dec
push
lcall
outsb
jge
test
and
popa
cwtl
and
ret
push
sbb
pop
rcrb
lret
sub
je
lods
shlb
inc
bound
mov
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
div
dec
mov
add
setnp
pminsw
scas
sub
mov
std
xchg
mov
fildl
repnz
or
mov
mov
stc
sbb
pusha
mov
add
push
imul
sahf
enter
mov
sub
subl
pop
xchg
or
mov
out
inc
fwait
push
lahf
incb
dec
mov
mov
insb
mov
or
mov
cli
fsubrp
sub
cmp
sahf
outsl
sbb
jle
push
stos
dec
mov
xor
test
psubd
push
adc
int
jge
push
aam
mov
push
push
ss
imul
sarb
movsb
test
inc
fisubl
inc
cld
stos
inc
scas
mov
lahf
adc
mov
fbld
sbb
cmp
mov
cmp
rorl
sbb
jae
inc
jl
shl
imul
popl
int
cmp
lret
cmp
push
orb
inc
push
mov
dec
mov
mov
sarb
fistpll
insl
adc
loopne
xchg
gs
in
add
out
in
sbb
pushl
out
pop
out
fiadds
dec
xchg
mov
jle
decl
jns
mov
nop
adc
mov
adc
inc
inc
cmp
jmp
mov
mov
mov
inc
insl
lret
xlat
daa
mov
shlb
inc
loopne
sbb
ret
sub
lret
xchg
imul
mov
add
sarl
dec
sarb
push
and
dec
inc
pop
out
add
sti
fs
inc
mov
jmp
pop
and
into
das
cmpsb
adc
jecxz
cmp
repz
push
adc
ja
xchg
mov
stos
fldenv
add
je
or
test
mov
leave
xor
inc
cmpsl
subb
adc
push
out
lahf
pop
xchg
je
out
out
inc
gs
mov
in
aam
outsb
fcmovnb
ss
jle
mov
negb
push
push
fdivs
dec
push
aam
data16
loopne
lcall
xor
and
and
sarb
dec
movsb
push
xchg
and
jge
or
repnz
and
lret
mov
push
popa
mov
or
push
pop
loope
and
push
push
push
xchg
push
imul
push
lea
pop
test
inc
or
jl
jae
jge
cwtl
mov
popa
or
jmp
icebp
push
xor
addr16
lods
mov
fnstcw
mov
in
das
daa
js
ja
mov
outsb
xchg
sub
xchg
loope
test
out
outsl
fdivrp
lods
fucom
loopne
lods
adc
mov
imul
lods
pop
jb,pn
mov
test
insb
push
xor
sbb
in
repnz
shl
inc
sar
push
mov
nop
and
in
push
leave
mov
ror
push
or
sbb
ja
clc
pop
push
or
push
push
loope
ret
add
jb
jp
stos
and
mov
jne
mov
dec
fwait
movsl
ret
lret
or
xchg
ficomps
cmp
and
rorl
dec
jge
les
push
xchg
and
scas
inc
xlat
xor
loop
ret
pop
xor
lahf
sub
movsl
pop
imul
pop
mov
mov
stc
lret
shlb
mov
fsubl
cmp
mov
pusha
cmp
or
sbb
xchg
add
add
xchg
sub
mov
arpl
inc
fisubrl
cltd
mov
sbb
aad
add
pop
sub
xor
and
inc
pop
jmp
lea
outsb
std
aaa
jns
add
mov
int
lds
mov
xor
pushw
inc
dec
push
or
aad
cmp
int3
les
pop
or
mov
add
das
jmp
repnz
mov
cli
inc
cmp
sbb
fiaddl
sbb
pushf
insb
insb
push
ja
stos
inc
xchg
scas
popa
dec
add
xchg
daa
cmp
inc
aam
mov
dec
out
mov
adc
aas
shrl
divb
dec
add
lcall
cmpsb
mov
and
int
dec
cld
aas
fidivrl
jle
js
movsl
test
mov
pop
pop
jae
mov
loope
sbb
dec
stc
cmpsl
and
add
mov
cmpsl
leave
hlt
push
xorl
cmp
mov
mov
repz
pop
hlt
mov
imul
roll
mov
scas
xchg
inc
inc
scas
mov
sub
mov
clc
iret
or
je
adc
xchg
int
pop
pop
cltd
pop
outsb
cli
mov
rcrb
inc
shl
cmp
in
lds
fucomip
cmpsl
hlt
xchg
mov
mov
sbb
loop
in
jnp
cmp
add
pop
push
enter
bound
repz
cli
pop
mov
sbb
scas
jb
aas
inc
movsb
test
les
inc
aam
mov
rorb
mov
inc
xor
mov
cmp
adc
sub
imul
inc
lea
cmpsl
or
or
cmp
jle
insb
test
aas
std
sub
into
test
les
xor
add
mov
mov
scas
loop
mov
jp
mov
shr
or
mov
xchg
dec
imul
jno
rcl
push
xchg
adc
daa
out
fsubl
add
fwait
inc
jl
sub
rolb
imul
add
cmpl
push
in
mov
aas
in
loop
cmp
jle
out
mov
dec
cmp
cmp
or
outsb
inc
jno
mov
push
inc
aaa
mov
xor
and
or
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
test
or
lar
pop
cmp
add
pop
pushf
sahf
mov
pop
inc
arpl
xchg
jb
ret
jo
addl
xchg
sub
aad
push
pusha
mov
stos
jb
mov
push
in
repz
out
mov
mov
fistpl
xor
mov
pop
adc
mov
repz
ror
in
dec
and
call
jmp
rclb
out
rorb
push
pop
adc
das
dec
in
aad
sti
adc
in
and
mov
mov
mov
jne
pop
mov
adc
dec
xchg
fs
popf
jbe
sbb
sbb
push
fdivl
adc
pop
insl
loop
cmc
das
cmp
pmuludq
sar
mov
push
rcl
add
cld
repnz
sbb
mov
mov
stos
jbe
wrmsr
cs
mov
jge
add
cmp
fmul
in
and
xchg
inc
pop
jge
mov
stc
fldenv
or
ss
push
popa
movsb
jl
push
dec
stos
cld
pushf
test
iret
fs
pop
mov
jbe
hlt
xchg
out
jmp
mov
add
push
push
sahf
push
dec
lds
lret
cmp
push
adc
ret
pop
push
cmp
mov
xor
cltd
pop
js
orl
or
add
mov
mov
je
jmp
add
inc
hlt
repz
stc
add
mov
xchg
xchg
dec
pop
pop
mov
cli
sbb
vmovdqu
js
mov
adc
jecxz
inc
jbe
test
and
call
int3
cmp
adc
stc
cli
pop
rorb
jns
sbb
fs
imul
out
xchg
xchg
add
inc
pop
cmp
aaa
xlat
pmulhw
call
xor
test
mov
mov
jbe
mov
cmpsb
es
nop
push
test
ret
sbb
inc
or
into
mov
daa
pop
mov
outsb
repz
pop
hlt
pop
xchg
stos
out
mov
bound
push
adc
pop
sub
je
in
cmp
adc
or
xor
or
movsl
aaa
cli
or
pop
push
mov
popa
jge
jbe
jmp
loop
sbb
push
xlat
dec
sub
xchg
xchg
add
cmpsb
lods
cmp
outsl
sub
ljmp
mov
enter
and
je
jl
mov
mul
lret
daa
push
arpl
pushl
lods
mov
cmp
loop
xlat
jno
mov
sub
aas
push
dec
pusha
cmp
insl
adc
push
mov
and
cwtl
mov
xchg
maxps
cltd
rcrl
adc
loop
add
test
mov
xchg
loopne
xor
inc
pop
add
rorb
cmpsl
sti
inc
pusha
push
ljmp
loop
add
ljmp
icebp
add
cmp
jno
sub
cltd
mov
icebp
sub
mov
jo
cld
stos
loop
hlt
mov
dec
shr
subl
cld
fs
mov
pop
call
xor
and
les
cmp
imul
mov
popf
xchg
sti
and
xlat
jl
into
mov
sti
mov
pop
test
vmread
cwtl
popf
nop
xor
dec
jecxz
push
outsb
xor
loopne
imul
mov
ja
jbe
insl
je
call
cmpsl
mov
push
sbb
lcall
mov
cmp
ficomps
jae
or
orl
jo
in
add
arpl
sahf
push
jmp
mov
test
out
sub
mull
lock
imul
subl
sub
imul
ljmp
mov
clc
jb
rorl
jbe
pop
in
pop
or
andb
push
mov
icebp
loopne
pop
leave
mov
xor
sbb
ss
outsb
popa
or
inc
mov
outsl
adc
dec
xor
push
xchg
mov
notl
ja
aaa
and
imul
or
dec
jl
mov
sbb
adc
cmp
and
and
jl
jne
mov
and
fistpll
mov
scas
dec
xchg
push
fidivrs
adc
pop
xor
jbe
out
adc
cmp
inc
push
sbb
add
cs
and
aas
push
inc
aad
in
jecxz
jns
imull
adc
push
scas
fisttpll
mov
sahf
movsb
mov
repnz
into
push
xchg
lea
lods
add
ss
mov
movsb
jne
xchg
je
xlat
dec
mov
hlt
orl
mov
inc
jp
lods
sub
loop
imul
adc
or
and
aaa
pop
arpl
pop
stos
mov
jmp
xchg
call
jns
addr16
and
addr16
pushf
sbb
icebp
jne
push
dec
xchg
jns
outsl
xchg
fldl
mov
js
xor
xchg
xor
lret
dec
sub
insl
out
lods
push
repnz
jl
mov
or
xchg
jp
lret
mov
jg
or
xchg
stos
int
jnp
mov
mull
sti
movsb
push
imul
fldt
inc
push
call
insl
stos
call
test
mov
push
or
mov
jae
lahf
cmp
call
inc
dec
faddl
mov
push
add
cmp
push
xor
push
jns
fwait
fs
dec
sar
pop
sbb
aaa
insl
enter
mov
lcall
jno
rorl
mov
mov
push
cmc
pop
movsb
mov
cmpsb
mov
cmp
add
sahf
cwtl
inc
daa
or
sub
sbb
mov
xor
das
xchg
dec
or
mov
out
out
sbb
mov
sbb
outsl
jmp
outsl
repz
pop
ja
test
add
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
setp
dec
or
int3
fsts
aas
jl
shll
out
adcb
into
cwtl
sbb
inc
mov
ds
minps
sbb
mov
or
dec
lcall
sub
push
sub
sbb
aas
xor
mul
lret
xchg
notb
test
ss
or
pop
sbbb
cmp
mov
push
mov
sbb
sbb
add
leave
xchg
push
scas
aad
xlat
pusha
int3
sub
jl
idiv
mov
loope
mov
and
push
inc
rorl
fsubrs
cmp
cmpb
sbb
jbe
inc
aam
test
and
push
and
push
adc
pop
lods
or
cmp
jo
mov
stos
aad
stos
in
cmp
jae
mov
dec
cmpsb
pop
sub
xlat
and
mov
das
out
in
inc
repz
add
mov
mov
jb
cmp
add
ret
or
lret
rcll
shr
pushf
adc
les
lret
sub
lock
decb
sarb
add
pop
arpl
or
cmp
or
dec
jmp
inc
lcall
fdivl
or
in
pop
mov
lods
sbb
push
je
xor
adc
dec
sub
into
int3
stos
std
arpl
cld
mov
jb
aaa
jmp
shrl
and
sarb
mov
arpl
mov
lcall
jno
cltd
sub
push
negl
mov
push
clc
testb
and
stos
fimuls
rorl
mov
xor
out
int3
aas
imul
lcall
data16
pop
or
dec
out
pop
imul
cwtl
leave
aad
sti
into
dec
test
arpl
sub
mov
dec
ret
movsb
cmp
jge
xchg
and
dec
xchg
mov
inc
lock
filds
dec
hlt
xchg
cmp
xchg
inc
adc
je
shrl
pop
int
sbbl
xor
lret
es
outsb
push
xor
jnp
nop
popf
out
aam
cmpsb
inc
jecxz
shrb
and
lret
pushf
sti
lret
test
sbb
fdivl
ja
push
mov
arpl
das
or
lahf
mov
lds
fcoml
mov
jmp
mov
sub
dec
je
mov
jnp
mov
mov
jg
mull
fstl
sbb
inc
or
test
jo
aad
pop
jmp
mov
and
inc
icebp
mov
jp
lahf
test
jge
pop
jecxz
es
add
mov
mov
and
cmp
add
inc
pushf
ja
jle
scas
jmp
dec
jecxz
jmp
out
loop
mov
test
pop
ds
add
xorl
ds
xor
push
mov
ud0
test
shl
pop
jo
xor
aas
enter
iret
repz
push
decb
lcall
stc
cmp
mov
cmp
es
fdivrl
mov
inc
test
push
inc
push
imul
lods
repnz
or
sub
leave
nop
enter
adc
push
cvtps2pi
je
aam
xchg
mov
in
mov
jnp
outsl
inc
push
movsl
lret
mov
rcrb
jnp
movsb
sti
pop
movsl
aam
ret
fmul
mov
out
xor
or
into
aam
ljmp
jg
movq
scas
andl
lds
imul
xchg
lret
sahf
xchg
or
fdiv
sub
cmpsl
push
bound
inc
xor
out
mov
es
adc
sbb
push
call
push
fst
xor
movsl
jp
loopne
sub
jne
xchg
jl
and
jae,pn
in
inc
xlat
inc
pop
leave
ret
and
ljmp
or
jnp
sbb
sbb
out
mov
cli
jne
sub
das
xchg
je
xchg
and
lret
cmp
mov
cmc
mov
mov
cmp
pop
pushf
inc
std
mov
mov
daa
dec
mov
arpl
or
mov
jno
sbb
dec
cmp
cmp
jae
xchg
xchg
jecxz
hlt
into
test
push
push
iret
mov
inc
in
cmc
jle
mov
inc
cmc
cltd
adc
in
cmp
aad
jbe
lods
push
inc
lret
gs
bound
mov
xor
xchg
cld
inc
mov
dec
iret
loop
dec
sahf
cltd
dec
or
cmp
push
xor
sti
pop
inc
mov
inc
ss
pop
mov
push
jns
into
jnp
repz
xor
inc
mov
mov
mov
shll
nop
mov
out
sahf
decb
into
push
clc
push
mov
mov
lea
orb
enter
negb
mov
inc
push
mov
xchg
movsb
scas
fdivr
decl
imul
dec
pop
enter
ja
shlb
mov
mov
cmp
dec
cld
outsb
mov
lret
xor
xor
cmp
sub
inc
mov
pop
loope
nop
pusha
cmp
cvtdq2ps
jge
cmp
fistpl
imul
mov
and
dec
push
fwait
loopne
js
imul
sub
scas
out
test
dec
sub
sub
mov
jnp
jbe
out
loope
push
test
loopne
lock
je
fwait
into
repz
and
mov
outsb
leave
push
ja
test
imul
cmc
xlat
mov
adc
out
sub
popa
xor
flds
mov
mov
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
sub
invd
add
cmpxchg
test
cmpl
and
xchg
dec
xor
fwait
and
loopne
sub
pop
subb
addr16
or
sub
ret
fldt
lea
push
imull
imul
push
scas
movsb
adc
out
cmp
fcom
xor
mov
xor
dec
mov
push
mov
test
ds
and
cmp
cmp
test
and
lea
or
push
pop
popf
leave
ss
shrb
adc
push
sub
push
lret
add
push
xchg
das
cmp
xchg
leave
sub
inc
adc
adc
loop
in
outsl
sub
scas
pop
into
aas
or
mov
ret
repnz
dec
incb
mov
andb
cmp
mov
jo
pushl
inc
scas
adc
fmull
xchg
ret
or
andb
dec
jnp
aad
push
push
push
jl
xchg
mov
add
leave
adc
fcmovu
jle
lods
cmp
mov
pusha
std
into
idiv
jae
and
aad
pop
mov
lds
add
xchg
inc
jp
or
je
incb
add
jl
outsb
mov
pop
push
sub
push
pop
push
lret
cmp
ljmp
dec
xchg
sbb
sbb
call
lcall
mov
popa
cmp
mov
push
repz
adc
stc
lds
xchg
inc
add
inc
or
or
cmp
int
pop
pushf
and
dec
ja
add
push
cli
ret
hlt
or
fbstp
mov
mov
fcomip
inc
insb
test
mov
push
repnz
sbb
cmp
pop
adc
aaa
and
pop
pop
xchg
inc
dec
ss
out
mov
adc
ss
mov
mov
scas
add
lods
shrb
dec
pop
cmp
push
pop
fmuls
add
jo
repz
std
in
mov
pop
shll
push
in
movsl
in
jbe
xchg
cmpsb
pusha
xchg
xchg
jge
sbb
mov
arpl
ss
jge
adc
lods
xchg
into
inc
xchg
imul
int3
insb
mov
hlt
jp
mov
adc
sub
mov
and
jno
jne
nop
movsl
ljmp
je
out
ret
ja
push
dec
jnp
and
int
xchg
or
lea
inc
adc
sarb
insl
outsl
mov
lcall
push
jp
jne
cmpsb
out
cmc
ficompl
fdivs
das
aam
xor
cmpsl
sub
mov
adc
pushf
or
bound
push
iret
cmp
arpl
push
cld
std
add
imul
loop
rcll
les
inc
mov
jne
out
inc
and
adc
loope
in
adc
or
xchg
mov
mov
int
cltd
cmpsl
mov
fwait
test
lret
mov
andl
sbb
fs
mov
fdiv
ja
ljmp
push
rclb
fiadds
jp
dec
mov
in
daa
shlb
mov
xchg
in
int
pop
popf
cmp
add
stc
lock
fcoms
cmp
test
and
outsl
push
xchg
sub
or
insb
sti
pop
fstpl
push
out
fwait
cmp
xor
dec
call
test
xor
dec
lret
xor
adc
mov
mov
lret
stos
jno
xchg
testl
pop
repz
adc
cmp
pop
mov
and
leave
adcb
sub
pop
sub
testb
ds
adc
imul
fcoms
aas
ret
cmp
cmp
add
ja
xor
rcl
insl
add
dec
sub
push
popf
icebp
pop
jns
inc
inc
cmp
jns
mov
and
mov
pop
push
add
bound
popa
cli
lds
pop
das
stos
mov
cmp
dec
xchg
xchg
xchg
sbb
rcrl
jno
jnp
mov
out
rcrb
push
mov
test
xchg
xchg
jne
mov
cs
push
fwait
int3
in
and
cmp
pop
in
jle
movsl
mov
xorb
nop
lods
push
push
mov
scas
jbe
dec
and
pop
mov
adc
sub
jecxz
sarb
jo
jecxz
test
jns
add
jno
add
outsl
js
addr16
mov
sahf
lea
push
push
jnp
loop
addr16
push
repnz
xchg
test
xchg
inc
pop
aam
insb
into
movsl
mov
mov
xchg
shr
js
cltd
pop
adc
or
dec
daa
xor
pop
mov
or
movaps
dec
sahf
and
cmp
dec
sub
xor
xchg
mov
jecxz
call
mov
test
dec
fwait
imulb
xor
inc
push
jle
mov
push
stc
repz
cmp
pop
jne
into
or
dec
idivb
xchg
icebp
jle
shl
pushf
dec
push
mov
mov
pop
addr16
repz
dec
fcmovnu
sahf
test
xlat
mov
xorb
ret
dec
lock
dec
xor
andb
sti
push
and
jb
adc
fiadds
sbb
xor
mov
mov
mov
je
lds
mov
movsb
incl
mov
mov
push
hlt
xor
fstl
pop
fs
push
fstl
jns
rcl
xchg
stos
xor
and
imul
or
ror
pop
hlt
inc
cld
jbe
sbb
fisttps
or
cmp
sub
pop
jae
pushf
sahf
rol
adc
popa
lds
out
pop
mov
cs
repnz
xor
add
je
mov
jnp
mov
std
fdivrl
and
or
stc
ja
jle
rol
mov
add
das
es
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
mov
dec
invd
add
cmovns
in
ja
scas
in
arpl
ljmp
sarb
outsb
stc
stos
cwtl
push
mov
stc
push
jecxz
sarl
xchg
stos
dec
loop
cs
jle
dec
lahf
pop
cli
ljmp
xchg
xchg
out
cmp
mov
xor
cli
arpl
sub
scas
xor
popa
sarb
cli
out
repnz
daa
and
mov
mov
add
nop
es
or
xor
and
lcall
shlb
pop
shlb
mov
loope
push
add
sbb
jno
mov
aam
mov
repnz
mov
movsl
xor
inc
mov
loope
mov
or
in
sbb
lahf
jge
popa
scas
pop
mov
push
icebp
inc
lea
data16
mov
daa
enter
pop
xchg
cmp
push
mov
test
andl
test
dec
dec
mov
in
fcom
xchg
ljmp
loopne
and
fnsave
mov
pop
mov
jbe
loope
leave
pop
jg
lods
sbb
dec
imul
mov
cwtl
or
push
shr
jge
xor
or
mov
add
add
cmpsl
sub
outsl
into
xor
inc
pop
arpl
sbb
cwtl
mov
lahf
push
mov
call
mov
arpl
xchg
mov
pop
out
xchg
push
stos
mov
popa
test
lcall
sbb
arpl
push
fldcw
inc
adc
adc
sbb
xor
iret
in
aaa
out
mov
mov
jb
lds
add
push
and
notb
dec
xchg
aam
jl
cmp
in
je
pop
and
test
sbb
jge
cmp
lea
mov
mov
xor
subb
dec
mov
xchg
je
pusha
adc
stos
cmp
adc
jle
scas
push
sub
lea
add
out
sahf
mov
inc
ret
mov
je
xor
stc
fnstcw
cmp
test
sbb
lock
mov
out
push
out
jo
sub
in
fmul
sarb
xorb
mov
mov
sub
stc
dec
push
pop
and
mov
pop
subb
adc
dec
push
xchg
cmp
jne
fsubrl
into
pop
mov
lods
clc
push
inc
scas
in
aam
and
pop
mov
lock
out
sub
pop
push
push
jns
mov
mov
cmp
pop
sub
jb
cs
xchg
adc
jns
clc
aad
and
mov
jno
push
pop
arpl
inc
pop
iret
call
push
into
decb
pop
xchg
sub
pop
inc
cmpsl
push
mov
inc
ds
sahf
ror
push
jns
xlat
cpuid
sbb
push
ds
cli
cmpb
mov
in
int
push
aam
mov
rorl
adcl
add
xchg
ljmp
or
dec
sbb
pop
outsb
in
aam
cli
mov
icebp
jecxz
rcl
jns
enter
scas
push
mov
jmp
mov
in
mov
push
push
sub
pop
popa
fimuls
mov
adc
xchg
push
cmc
adc
mov
dec
jecxz
popf
pop
dec
cs
inc
pop
inc
stos
xlat
rep
outsb
in
jb
lahf
xlat
push
and
adc
jecxz
xor
xchg
push
std
popa
cltd
out
push
das
mov
cmc
dec
dec
mov
mov
push
sar
rcll
add
testb
leave
or
inc
movsb
mov
pop
mov
icebp
mov
or
roll
iret
ja
mov
sub
pop
rorl
lods
arpl
adc
cltd
inc
mov
cmp
stos
ja
mov
outsl
pop
fcompl
mov
mov
mov
scas
inc
fldenv
xchg
or
dec
lock
mov
pusha
ret
xor
into
arpl
stc
jmp
ffreep
cmp
clc
lret
in
int3
pop
pop
push
lcall
hlt
push
pop
or
sbb
xchg
push
out
lods
ljmp
push
adc
bound
js
mov
fs
push
jmp
push
orl
cmpsb
inc
ds
gs
scas
inc
jo
je
decb
jns
sti
inc
lahf
mov
pop
idiv
pop
sub
or
bnd
into
ret
push
mov
dec
stc
mov
jle
mov
sub
inc
in
add
lret
jmp
adc
mov
mov
fistpll
lret
mov
jb
repnz
mov
into
in
not
mov
test
jmp
jnp
jns
lods
inc
add
jnp
cltd
xlat
testb
or
loopne
les
xchg
fbstp
inc
mov
lock
mov
push
fwait
out
adc
inc
jns
scas
pushf
lods
frstor
faddl
out
out
xchg
pusha
xor
shlb
ds
aas
stos
xchg
xchg
fucomi
test
call
adc
jp
sub
xor
ja
jmp
jbe
cmpsb
add
push
push
adc
bound
das
mov
and
xor
and
movsb
xor
jg
faddl
jbe
rorb
mov
lods
daa
mov
pop
int3
in
jle
lock
mov
mov
loope
adcb
xor
pop
out
add
mov
out
cmp
rcrb
enter
bound
dec
fidivl
outsl
xchg
ja
push
outsb
add
jo
leave
lcall
mov
ja
scas
insl
daa
cmpsb
lock
aas
push
jp
lret
and
std
pop
movsl
mov
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
cmovl
iret
cli
lea
mov
sbb
movsl
vsubps
loopne
sbb
insl
popf
sub
mov
repnz
dec
sbb
cmp
and
mov
pop
inc
sub
mov
cmpsb
dec
pop
repz
push
sbb
push
inc
jl
fadd
push
ret
mov
mov
pop
fstpt
jae
das
dec
dec
shrb
aaa
repnz
add
add
and
mov
adc
out
or
data16
inc
add
and
ja
xor
pop
jo
cmp
rorb
test
in
pop
jns
pop
frstor
arpl
xchg
movq
adc
xor
hlt
loop
movsb
lods
icebp
cmp
in
lahf
add
mov
mov
lahf
xchg
sbb
mov
xchg
lcall
test
idivl
inc
sub
mov
in
adc
stc
out
mov
cmp
xchg
divl
push
xor
xor
sbb
test
or
add
call
and
adcb
mov
and
sbb
pop
push
and
xor
xlat
bound
out
jmp
dec
adc
adc
cmp
daa
aaa
mov
imul
test
bound
jbe
jmp
xor
gs
gs
xor
dec
out
add
por
push
insb
jnp
push
movl
pusha
bnd
into
sub
cld
in
mov
lret
scas
adc
dec
xchg
je
push
adc
int
mov
je
mov
cmpsb
mov
ljmp
hlt
cli
mov
test
sahf
cltd
jbe
sarb
mov
jb
inc
test
lret
sub
and
lea
inc
movq
clc
lock
or
inc
xor
jb
push
mov
pop
cwtl
hlt
les
out
sbb
adc
pop
cmp
cld
mov
dec
cwtl
icebp
jns
test
lret
fsubl
dec
test
dec
xor
adc
sbb
aas
in
lock
scas
jb
fdivs
mov
popf
xchg
sbb
push
imul
lcall
mov
and
xorb
push
not
mov
cvtdq2ps
or
and
dec
cmp
jnp
or
xor
adc
out
xor
sahf
inc
lods
scas
sub
testb
sub
out
dec
mov
imull
or
fildl
xchg
cwtl
shrb
xor
adc
mov
hlt
dec
repnz
mov
repz
mov
pop
add
mov
pop
and
add
dec
mov
mov
std
loop
or
and
cmpsl
jae
jg
inc
flds
mov
inc
mov
into
scas
pop
cmc
or
xchg
mov
mov
stos
into
push
cld
stc
add
push
mov
jmp
adc
sti
int
mov
shlb
iret
push
sbb
jl
and
lahf
repnz
adc
jle
inc
pop
cmpb
div
repnz
out
gs
ljmp
jg
mov
ds
sub
adc
movsl
hlt
daa
mov
sahf
and
or
add
cmp
lret
adc
dec
sahf
mov
xchg
jle,pt
in
stos
dec
sub
xchg
fadd
pop
bound
xchg
inc
adc
roll
xor
pushf
in
scas
les
add
or
push
xor
and
push
pop
jae
enter
dec
jmp
test
xorl
fldl
leave
sub
inc
and
out
inc
movsl
sub
and
dec
jb
mov
jge
clc
sbbl
subl
xchg
or
mov
inc
lds
sysexit
pop
inc
sti
cmp
fs
add
inc
test
sbb
dec
arpl
jb
xor
repnz
jbe
int
pop
cmp
dec
jmp
sbb
pop
cwtl
fnsave
jle
xchg
sahf
aad
popa
test
mov
xor
mov
mov
imul
aaa
cs
loopne
inc
and
out
scas
int
nop
pop
fcomps
sti
push
outsb
push
mov
mov
add
dec
inc
pop
push
cwtl
and
cmp
mov
mov
out
dec
xchg
cltd
push
enter
cltd
idiv
add
sbb
call
add
stos
rcl
xorl
lea
xchg
out
mov
test
outsl
scas
sub
mov
std
mov
std
test
xchg
pop
mov
cmp
negb
xor
dec
pushf
mov
jns
out
dec
sete
ret
fdivrp
jae
nop
or
xor
jno
xchg
mov
lds
shl
and
mov
xchg
inc
push
in
push
xor
aaa
je
add
mov
mov
int3
mov
sbb
mov
repnz
push
push
stc
cmc
out
bswap
push
dec
xchg
adc
xor
ja
mov
repnz
sbb
inc
int
jl
jmp
pop
scas
subl
scas
and
nop
imul
bound
shl
dec
popa
lods
test
sahf
push
pop
mov
mov
jp
jg
rcll
ficomps
in
into
cmpsl
scas
out
sub
int3
sbb
movsb
inc
dec
pop
sbb
sar
test
push
dec
mov
jmp
add
mov
fbld
cltd
jmp
insl
test
cmp
xor
inc
insb
jge
or
dec
mov
push
push
pop
out
and
push
fwait
data16
les
or
pop
lret
loopne
ss
jne
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
fsubrs
invd
add
cmovge
cli
in
aas
mov
jecxz
mov
lahf
push
int3
xchg
inc
scas
aaa
out
mov
mov
push
repz
cwtl
xor
outsl
or
dec
daa
idivb
push
scas
pop
dec
add
repnz
scas
mov
push
or
or
add
xor
shrl
sbb
push
push
lds
push
add
pop
in
jmp
lods
test
xchg
test
rolb
int
inc
cmp
orb
xchg
popf
divb
lods
mov
imul
rcll
add
push
sahf
lret
lds
xor
sub
fldcw
pushl
mov
leave
std
fdivrp
ja
cmp
xchg
lock
cmp
adcl
dec
fs
lods
jmp
fs
mov
mov
pop
mov
xchg
fdivrp
cmp
inc
sbb
xor
or
popa
sbb
mov
add
sub
adc
bound
loop
jb
mov
add
lds
push
jns
dec
daa
cmp
shrl
arpl
jecxz
psubusb
sbb
push
test
sub
jno
fsub
in
xchg
and
cmp
and
inc
adc
pop
mov
sbb
xchg
gs
xlat
mov
sbb
dec
push
fisubs
cmc
mov
loop
mov
push
clc
sub
fiadds
xchg
jmp
add
fnstenv
and
push
ja
outsb
loope
jb
sub
loope
leave
incb
add
mov
jne
daa
loope
std
and
aas
test
inc
inc
clc
imul
je
push
sub
and
cmc
push
push
adcl
jnp
xor
mov
push
lock
pop
mov
pop
lahf
mov
cmp
mov
popa
jo
cmpsb
cld
pop
mov
mov
inc
or
sub
enter
hlt
xor
sbb
xlat
add
jns
jns
mov
inc
out
pop
test
dec
mov
insl
sahf
icebp
clc
dec
pop
dec
mov
sbb
or
jmp
loopne
fistpll
pusha
test
shll
leave
test
cmc
fstpl
mov
in
cmp
xor
mov
or
pop
push
pop
mov
movsb
ss
xor
ja
add
push
lods
dec
mov
ret
inc
jle
jge
es
loop
aas
in
xchg
pop
mov
mov
push
js
fsubp
pushf
out
loop
pop
jge
inc
js
inc
loope
cmp
aaa
dec
fadd
jns
outsl
sbbb
roll
faddl
pop
std
pushf
dec
or
and
jae
inc
out
out
les
out
cmpsl
je
cwtl
and
out
test
cwtl
imul
repz
mov
testb
xchg
test
sbb
xlat
jmp
jg
or
shll
jae
into
mov
divl
jge
xor
mov
xchg
mov
lea
mov
imul
in
push
xchg
cmpsl
imul
rorl
outsb
dec
sbb
lahf
in
imul
xor
int
stos
enter
jmp
xchg
cmp
icebp
mov
aad
out
in
cmpsl
mov
inc
pop
fsubrl
mov
pop
push
jge
std
sti
and
mov
clc
imul
pushf
stc
add
push
xor
ljmp
adc
mov
ret
mov
daa
jmp
rcrb
testl
ss
xchg
push
mov
push
sub
jmp
loopne
popa
iret
lods
scas
fistps
lods
jae
dec
popf
sub
jno
adc
lods
das
imulb
xchg
xor
rclb
or
fsubr
int3
mov
fwait
inc
lea
int
aam
add
pop
jge
or
and
jne
lcall
std
jmp
jnp
sub
ficompl
pop
ret
sub
xchg
out
push
rorb
push
sbb
jb
movsb
mov
mov
popf
sti
ret
jmp
and
sbb
movb
add
xor
mov
dec
std
sbb
push
mov
xor
cltd
lds
pushf
out
outsb
pop
sub
jp
cmp
js
aam
ror
or
aaa
cwtl
imul
or
out
or
js
and
jecxz
push
add
das
jno
pop
adc
fcom
out
xchg
jns
into
test
jno
jg
sbb
or
xor
loope
push
jle
enter
mov
fdivrp
sub
lea
movsl
jne
sbb
and
sub
cmp
ret
sub
xchg
je
add
add
or
in
outsl
dec
mov
out
sti
aam
push
sub
mov
mull
push
adc
lock
lret
lahf
adc
rcrl
pop
shlb
nop
cmc
stos
mov
test
dec
or
add
ljmp
cmpl
jle
or
xchg
xchg
mov
xor
repz
sub
leave
push
orl
dec
or
cs
out
in
xor
mov
inc
insb
or
mov
les
aam
dec
dec
sbb
movsl
mov
cs
xorb
adc
push
cltd
adc
shlb
mov
mov
into
pop
pusha
mov
pushf
and
sbb
addb
cmpsl
vmovhps
dec
sbb
xchg
clc
inc
rcrl
iret
je
test
mov
dec
pusha
les
mov
stos
sbb
addr16
xlat
gs
mov
pop
ret
shrb
arpl
lods
mov
cmpb
ret
out
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
cmc
dec
out
mov
paddsw
rorb
ret
nop
movsb
mov
nop
loop
inc
fldl
xor
testl
addr16
leave
movsl
inc
lret
pop
clc
mov
adc
cmp
push
insb
sahf
lret
je
push
enter
out
fwait
repz
cmpsb
jne
mov
es
push
mov
iret
call
xchg
and
and
scas
pop
or
popa
dec
sub
shrb
jae
mov
std
or
inc
mov
add
sub
lret
je
and
cld
adc
add
lret
mov
adc
or
inc
jp
in
push
mov
dec
lea
es
cmpsb
cmp
imul
push
and
sub
fistpl
mov
jnp
shll
fldt
cmp
xor
rclb
mov
mov
int
push
orb
aad
push
jb
fwait
addr16
repz
cmp
gs
lret
xchg
pop
xor
cmp
test
aas
movsb
ret
jle
inc
mov
popa
dec
test
test
sbb
jle
adc
in
sub
out
mov
and
stos
std
mov
jno
pop
mov
mov
jnp
mov
in
shrb
push
imul
xor
pop
int
in
pop
mov
inc
mov
outsb
dec
fistpl
jl
sahf
sub
aam
xchg
out
dec
add
adc
jns
clc
lods
dec
aas
pop
and
lock
int3
sbb
loopne
jo
xor
push
and
addr16
ret
nop
and
seta
or
push
inc
adc
add
mov
xchg
add
inc
dec
popf
movsl
aas
loope
mov
or
shr
stos
dec
cmc
cwtl
stos
mov
xorb
je
xchg
jg
notl
mov
adc
xchg
scas
ja
cs
sub
sbb
jl
sub
pop
cmp
and
pop
cmp
jne
pop
mov
cmp
push
rorl
inc
clc
push
mov
fisttpll
dec
in
fldcw
and
test
or
xor
sub
and
sti
pusha
mov
sbb
decl
pop
pop
push
mov
cwtl
clc
push
xor
sbb
or
arpl
fadds
mov
aas
sub
sub
test
flds
test
mov
add
out
xorl
leave
lcall
orl
int
pop
jne
mov
aaa
ret
push
insb
xor
or
testl
es
pop
adc
or
add
cmpsb
add
lret
loopne
js
pop
or
xor
jp
leave
sub
or
dec
xlat
inc
call
clc
inc
cwtl
mov
xor
repz
mov
sub
mov
fstl
ds
sub
jp
mov
ds
dec
mov
fbld
fs
sbb
and
jle
dec
fisubrs
aaa
adc
or
or
mov
jg
notl
xchg
rcrb
insl
loopne
lret
test
negb
sbb
lea
fs
pop
popf
testb
sti
dec
jo
adc
lods
ret
or
ficoml
push
pop
jge
les
pop
int3
into
cmpsb
cmc
sbb
sbb
sub
ds
out
fs
cltd
es
xrelease
dec
xchg
outsl
xchg
arpl
sub
fdivl
xchg
adc
inc
stos
rol
push
mov
mov
in
shlb
mov
push
stc
adc
adc
repz
cmp
jmp
pop
push
cmp
iret
lods
outsl
mov
repnz
test
mov
loop
mov
scas
mov
pop
mov
jge
jb
xchg
popf
xchg
movsl
scas
sahf
icebp
ljmp
adc
fisubrl
or
pop
insl
and
sub
or
in
out
cmp
dec
adcb
and
mov
fwait
jge
loop
lret
inc
and
sbbb
adc
ss
cli
shll
ja
adc
mov
mov
js
repz
dec
fs
push
sbb
push
in
in
daa
jle
mov
orl
stos
jb
xor
xchg
inc
in
imul
cmp
shlb
add
pop
mov
nop
mov
outsb
sbb
pop
pop
fwait
mov
fists
sub
dec
mov
imul
mov
cmp
add
lock
scas
push
jbe
mov
xchg
ret
jp
adc
decl
stos
lret
xchg
jg
xor
or
sbb
xlat
aad
sbb
movsb
loope
xchg
stos
les
mulb
cli
dec
aad
add
xor
dec
je
js
movsl
and
mov
adc
pusha
call
lods
fld
push
loop
add
xchg
fidivl
stc
sub
divb
lock
mov
jge
pop
xchg
lcall
or
cwtl
movsb
xchg
ret
ja
test
adcl
jl
outsl
mov
icebp
mov
pop
xchg
push
fstl
jp
std
stos
xchg
mov
xor
in
aas
xchg
mov
lcall
aaa
fsubrl
mov
mov
dec
idivl
mov
add
inc
adc
jl
in
std
pop
inc
mov
push
add
mov
sarb
jae
iret
lea
shl
addr16
shlb
dec
dec
inc
jnp
lock
adc
jb
xor
mov
jae,pn
push
into
sub
out
pop
js
decb
push
adc
fwait
lahf
les
jbe
flds
repnz
push
mov
in
in
loopne
pop
or
pop
cld
jo
mov
mov
or
clc
dec
pop
aas
in
enter
jl
mov
dec
jo
in
insb
or
and
in
add
jno
iret
sub
mov
js
pop
or
and
sbb
ljmp
push
adc
pop
cmc
xchg
sbb
push
in
pop
sub
movsl
jmp
jo
inc
jecxz
mov
inc
pusha
push
pushf
test
pop
lea
inc
fistps
scas
lret
test
sub
sbb
add
add
or
dec
cmp
rcll
mov
mov
int3
rorb
shrl
sbb
cs
sbb
cmp
jecxz
xchg
cmc
inc
cwtl
shlb
lahf
jg
in
xchg
jmp
xor
int
int3
insb
push
clc
mov
cmpsl
imul
subb
xor
js
xlat
call
test
adc
pop
inc
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
jnp
xchg
sbb
mov
bsf
mov
fidivs
imul
dec
lods
test
jecxz
pushf
bound
lret
sub
repz
mov
out
fistps
and
mov
xchg
test
add
jbe
loopne
cmp
sbbl
mov
test
push
icebp
xor
push
ljmp
stos
mov
xchg
xor
loop
mov
sbb
in
ljmp
add
add
out
out
lahf
push
push
sar
cmc
scas
leave
and
jg
into
xchg
jl
mov
stc
call
xor
hlt
fmulp
push
jge
push
ret
push
push
or
sub
lea
shl
and
out
addr16
mov
xor
cmc
xor
call
jle
push
int3
xlat
in
mov
in
in
dec
stos
mov
xor
stos
jg
lcall
or
jo
dec
or
lods
je
sbb
std
mov
lods
inc
std
or
mov
ja
jp
cmpsl
inc
daa
bound
cld
dec
fdivrl
push
pushf
xor
inc
fiaddl
xchg
push
stos
stos
jb
inc
or
je
jg
sti
outsl
jns
ljmp
xchg
xchg
cld
xchg
mov
insb
jae
shll
call
adc
lds
mov
cmp
sbb
mov
xchg
push
bound
fsts
cmpsb
sahf
in
stos
jl
jne
ljmp
add
es
nop
out
pop
cmp
cltd
cmc
hlt
push
out
mov
pop
aad
pusha
dec
test
sbbl
addr16
icebp
lea
and
rcrl
sub
stc
sub
sub
inc
pop
xor
inc
in
loop
fs
ds
cmp
xor
mov
stos
add
aad
xlat
divl
fnstenv
or
dec
fdivs
in
cwtl
add
sbbl
pop
leave
jne
sub
out
in
gs
push
mov
test
fidivrs
and
dec
mov
push
add
arpl
imul
faddl
sub
cli
xor
dec
aaa
mov
lods
out
cmp
repnz
jnp
adc
xor
dec
cbtw
lea
outsl
idivl
clc
xor
inc
mov
xchg
and
sub
outsl
adc
dec
xor
jecxz
aas
pop
mov
xor
inc
fstpt
dec
or
push
pop
adc
pop
out
in
cs
xlat
xchg
cmp
and
cmp
jnp
xor
mov
or
addr16
inc
movsl
xlat
mov
or
jl
adc
into
sbb
mov
fmulp
pushf
jl
pop
loop
int
dec
into
mov
popf
jp
int
wbinvd
jmp
stc
cmp
mov
sbb
push
int3
scas
push
dec
inc
push
shl
mov
cmp
mov
mov
xchg
in
leave
ret
sub
mov
dec
mov
pop
rclb
das
dec
or
push
rorb
stos
pusha
pushf
cmp
cmc
stos
add
and
push
mov
in
inc
push
push
ret
sbb
das
sub
cmp
ret
aaa
cli
xor
inc
fiadds
or
js
or
pop
lods
ss
idiv
sub
notl
scas
mov
sti
sbb
and
dec
test
mov
add
pop
repz
ret
sub
mov
cmpsb
je
imul
outsl
in
sub
jno
jns
jno
and
out
lock
mov
sbb
pop
repz
sti
dec
dec
mov
mov
or
rep
jg
es
test
push
call
jmp
add
push
inc
loopne
sub
cmp
mov
testb
jns
insl
in
xor
out
stos
add
les
lahf
push
pop
ret
int
cld
ret
jge
call
cmc
loop
mov
je
cli
add
pop
add
mov
cmpl
shr
inc
lods
push
or
lods
mov
cmp
pusha
sarb
add
push
push
fsubs
xor
cmc
test
jo
cmpsb
mov
aaa
cwtl
or
inc
stos
xor
inc
imul
inc
sbb
int
push
stc
rolb
lcall
mov
mov
or
cmpsl
pop
xor
xchg
in
outsl
pop
mov
and
xchg
jbe
jns
dec
pop
sub
inc
jbe
andl
adc
push
inc
push
fadd
in
cld
imul
fdivrs
mov
loope
mov
sub
cltd
mov
adcl
cli
stos
leave
xchg
movsl
jecxz
mov
lock
cmp
aas
shlb
fs
fistl
inc
xor
popf
adc
xor
jnp
iret
mov
aad
lahf
cmp
ljmp
outsl
mov
mov
std
repz
mov
xor
pop
inc
push
movsl
fistpll
push
aad
jp
jge
mov
jmp
sti
lret
pop
pop
sub
pop
enter
and
out
js
or
mov
popa
mov
pop
insl
cmp
scas
pop
add
adc
bound
sub
sub
rolb
sbb
push
lods
ret
inc
mov
xor
pusha
push
jmp
and
roll
rcl
dec
push
sar
movsl
aas
push
cmp
xor
mov
adc
xchg
and
pop
inc
sbb
and
fcmovnu
mov
icebp
push
xlat
insb
sbb
xorb
push
repz
xchg
cmpsl
pop
test
or
mov
cli
movsb
mov
cmpsb
cmp
xor
rcr
mov
lret
cmp
icebp
xor
jo
and
bound
movsl
test
outsb
mov
movsl
out
cltd
dec
das
cwtl
sarl
or
repz
mov
jo
cmpsl
push
dec
push
mov
loop
or
or
cmc
adc
and
fidivrs
push
arpl
jmp
jle,pn
xchg
lcall
inc
in
jae
xor
lret
dec
push
bound
pusha
mov
fs
dec
insb
mov
and
xor
pop
xchg
xchg
jecxz
bound
test
sub
cltd
pop
lods
mov
cmp
pop
jecxz
cli
add
into
loope
mov
mov
mov
pop
in
adc
enter
lock
test
mov
andl
fldenv
jnp
insb
xchg
loop
and
rcr
jae
push
push
imul
divl
aad
xor
enter
cld
orl
cmp
arpl
pop
scas
xchg
js
cmp
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
inc
cwtl
push
mov
and
lea
dec
gs
xchg
cmp
and
mov
xchg
outsl
lret
add
leave
xchg
hlt
jne
jne
jo
xor
jmp
mov
xor
outsb
ljmp
xor
out
jmp
and
repz
sti
int
xchg
push
mov
rorl
movsl
insl
add
adc
sbb
dec
testl
jae
sbb
sub
cmp
cwtl
lret
xor
push
dec
lds
aad
xchg
xchg
fwait
add
movsb
iret
xchg
cmc
movsb
imul
js
inc
jg
cmp
aam
data16
mov
sbb
dec
and
cmp
out
sub
push
lret
mov
sub
xchg
xor
xchg
cmp
stos
cmp
xchg
sbb
pop
mov
pop
loope
pop
stos
mov
icebp
and
imul
jne
mov
push
stc
pop
nop
stos
mov
jno
push
cmp
sub
jne
bound
lock
faddp
add
bound
add
in
dec
pop
mov
mov
loopw
cmpsb
fcoms
icebp
xlat
fdivl
pop
pushf
sbb
xchg
enter
in
std
in
fbld
lods
enter
sbb
rclb
jnp
test
ret
outsl
stos
lcall
adc
add
dec
out
orb
lret
xchg
ss
aad
lret
out
clc
inc
pusha
xor
xchg
mov
lods
in
std
dec
inc
rorb
pop
jb
cld
rol
dec
js
jl
pop
sub
inc
cs
filds
cmc
shl
dec
pop
call
mov
enter
add
nop
into
jno
popa
jmp
loopne
dec
fcmovb
mov
idiv
cmpsb
push
sub
pop
cmpsl
pushf
xchg
fwait
pop
add
in
or
cmpb
scas
push
mov
mov
mov
push
jmp
xor
sahf
mov
mov
shll
mov
push
mov
xchg
mov
or
hlt
mov
imul
movsl
add
call
lds
orl
xchg
mov
pop
ss
mov
lock
in
stc
or
push
xor
push
int3
mov
sub
sti
pop
test
enter
xchg
test
sub
mov
mull
mov
inc
dec
add
clc
and
pop
mov
dec
roll
mov
push
inc
and
test
push
or
cmpl
ljmp
fnstenv
shll
shrl
into
jae
nop
popa
cmp
lret
hlt
or
sub
movsb
pop
dec
scas
data16
mov
outsl
test
je
xorb
mov
divb
popf
inc
lret
fdiv
xchg
adc
and
daa
mov
loop
lock
ficompl
movsl
jp
jge
movsb
add
cmp
push
dec
push
pop
cs
lods
add
mov
xor
cmp
mov
aas
push
ret
sbb
iret
jno
js
xchg
mov
ret
aam
mov
mov
loop
notl
sub
dec
test
jns
lcall
stc
and
push
inc
push
lds
dec
daa
call
test
cmp
pop
aad
test
adc
sub
aaa
cmc
faddl
pop
and
loope
sub
push
mov
cli
jecxz
loop
out
jo
dec
dec
mov
cld
mov
in
mov
mov
mov
mov
sub
sti
mov
arpl
or
mov
loop
sarl
call
std
jle
xchg
inc
out
les
dec
mov
mov
inc
xchg
inc
add
divl
outsb
imul
or
mov
mov
test
lret
pop
dec
cld
push
fisttps
push
insl
fldcw
loop
jg
fwait
jnp
dec
cmpsb
mov
cli
xchg
rclb
jl
xrelease
insl
les
sbb
sbb
sbb
shlb
loopne
xchg
and
jae
sbb
leave
fmuls
gs
lahf
fs
mov
pusha
divl
cmc
fwait
clc
add
stos
push
adc
xchg
lods
rcll
pop
inc
roll
dec
sbb
jbe
out
xor
rcrl
leave
test
js
ja
test
adc
jmp
xor
xor
pusha
outsb
sub
add
jns
xchg
mov
std
inc
mov
aaa
jbe
aad
mov
pushf
push
inc
xor
sub
cmpsb
jne
sub
add
fwait
sub
mov
int
insl
stc
mov
lret
mov
aas
jmp
imul
push
add
push
mov
mull
and
xchg
lock
mov
dec
jns
inc
gs
cmpsl
cmp
fdivs
pop
cs
cmc
popf
pop
dec
aam
jb
std
jnp
or
mov
pusha
iret
xchg
sub
add
outsl
push
stos
inc
cmpsb
dec
daa
push
pop
push
js
imul
add
mov
lret
mov
xor
mov
xchg
adc
outsl
mov
mov
subb
xlat
movsb
push
ret
cs
mov
movsl
std
mov
dec
cmp
inc
xlat
dec
out
js
lcall
mov
sub
lods
adc
push
sbb
push
inc
or
inc
mov
pop
push
es
push
cli
jmp
mov
sahf
cld
cmpsl
gs
stos
pusha
in
add
stos
test
mov
loopne
jo
movsb
mov
lds
xchg
push
gs
lea
insl
mov
movsl
xchg
xchg
js
add
movzbl
jnp
pop
xor
jnp
idivl
bound
add
dec
dec
or
mov
cmp
loope
mov
test
xor
cmp
scas
lret
movsl
mov
mov
dec
dec
sub
cwtl
out
adc
movsl
gs
es
mov
or
in
ret
dec
add
outsb
insb
push
push
cmp
les
sbb
mov
jge
repz
ss
sub
movsl
pop
pop
and
and
pop
sbb
nop
popa
dec
shlb
lods
out
addr16
add
mov
icebp
push
pop
xchg
and
push
pusha
pop
sub
xor
arpl
in
xchg
and
xor
adc
ret
sub
sbb
test
xor
fmul
sub
arpl
pop
adc
push
fimuls
insb
cmc
xchg
popf
and
inc
stc
insb
je
cmovae
cmpsb
shlb
nop
push
fists
mov
lea
pop
inc
imul
inc
pop
filds
insb
lods
stos
inc
and
push
push
setle
mov
xlat
sub
sahf
jge
adc
adc
int3
test
jmp
into
add
or
mov
notl
mov
pfrcpit2
jb
mov
mov
sub
cmpsl
test
jbe
and
aaa
adc
aad
in
std
push
jp
daa
push
inc
lods
and
adc
pushf
icebp
sbb
pop
loopne
mov
mov
insb
rorl
xor
bound
push
lcall
adc
inc
das
inc
sub
sbb
sbb
std
inc
adc
pop
push
das
shlb
out
mov
gs
add
inc
adc
mov
sub
mov
adc
push
ret
repz
jmp
sub
mov
jg
push
cmp
mov
outsl
outsb
jg
fisttpl
cmp
int
sbb
mov
pushf
cmp
mov
dec
arpl
pusha
outsb
pop
frstor
addr16
mov
imul
lods
and
je
adc
lods
movsl
movsb
jb
lret
sbbb
pop
add
xor
adc
lds
jne
outsl
mov
dec
sbb
xlat
dec
sbb
jle
imul
xor
sbbb
sub
rolb
fisttpll
das
sbb
inc
mov
xorb
fisubrs
jno
ret
push
movb
pop
push
in
pop
stc
and
dec
adc
shl
lret
lret
mov
mov
gs
sub
test
out
jmp
pop
pop
push
call
inc
loopne
push
repnz
out
ss
mov
sbb
mov
les
pushf
dec
mov
and
add
mov
pop
mov
sub
int3
in
rcrl
mov
pop
adcl
fstpt
xor
imul
gs
movsl
cmp
pop
sub
stc
cmp
push
in
lcall
lret
adc
adc
push
jecxz
inc
jo
in
inc
fstps
xor
mov
pop
inc
jo
dec
push
pusha
mov
add
dec
xor
mov
push
out
push
or
or
jle
jbe
movsb
xor
mov
fs
sbb
push
imul
mov
xchg
xchg
loope
sbb
push
dec
push
jbe
mov
xor
stc
and
add
cmpb
aad
xchg
and
mov
jge
out
push
scas
and
imul
int3
sub
push
jo
inc
ret
mov
test
add
in
leave
les
pop
pop
adc
sbb
mov
testl
aas
add
jno
push
fs
adc
cmc
test
mov
cmc
std
adc
daa
out
out
xor
andb
outsb
cltd
mov
and
aad
call
jno
dec
push
mov
push
jecxz
mov
and
jmp
pop
clc
push
push
push
aad
mov
ret
xchg
cwtl
les
je
divps
in
xlat
ljmp
jns
cmp
mov
movsl
lahf
xchg
scas
xchg
movsl
arpl
pop
stc
and
cmp
rcrb
or
inc
lahf
dec
xchg
lea
add
ja
call
inc
popa
pop
into
repnz
popa
pop
inc
push
xor
pop
push
jmp
fsubl
pop
xor
pop
ja
in
test
and
fwait
aad
mov
mov
jmp
push
fs
lea
dec
notb
cmc
iret
loopne
mov
loopne
mov
and
sbb
pop
in
push
repz
xor
shr
adcb
pop
mov
popf
in
pop
sahf
stos
adc
pop
out
pop
inc
adc
or
ds
push
mov
adc
jae
movl
push
sbb
fcmovbe
xor
addr16
push
jae
sarl
add
xchg
movsl
cmc
pushf
xchg
jmp
sbb
mov
inc
daa
movsb
pop
daa
sub
scas
ljmp
xlat
xlat
aad
in
mov
xorl
and
push
frndint
lods
mov
shlb
test
adc
dec
outsb
pop
aad
shrb
or
movsl
sub
add
sub
xlat
nop
cmpsl
notl
xchg
sbb
adc
std
idivb
jno
addl
cltd
sti
lret
dec
fwait
test
ret
ret
ds
add
das
add
mov
mov
aas
or
bound
xchg
xchg
dec
test
test
xor
xor
push
jb
push
xchg
cmpl
mov
xor
jp
pop
test
or
cwtl
inc
cmpb
push
js
inc
lock
lods
xchg
jle
add
rorb
push
xor
sub
mov
leave
sbb
pop
cmp
fisubrs
ficompl
or
pushf
xchg
ss
pop
jle
jle
js
pop
outsl
xchg
fwait
sbb
rcrb
or
shlb
call
mov
bound
shl
gs
push
jg
cmpsb
cli
bound
fstpl
bound
popl
nop
push
push
sub
push
insb
fistpl
cs
test
jg
test
xchg
insl
pop
xchg
push
rorb
mov
add
fwait
out
add
mov
dec
dec
outsl
adc
cltd
mov
fnstsw
adc
int3
ss
hlt
cltd
out
outsb
test
int
ret
cmpsb
jl
rclb
insl
ret
sbb
sbb
inc
mov
repnz
dec
test
lret
das
aam
jae
mov
sbb
push
ret
and
inc
cmp
movsl
push
or
das
xchg
int3
cmpsl
mov
push
popf
enter
data16
fcmovnb
push
cli
add
ljmp
or
push
out
push
dec
pop
or
pop
lea
mov
out
jmp
arpl
loop
repz
jle
shll
mov
inc
test
adc
jp
xor
inc
aam
lret
fisttpll
fcmovnu
dec
and
shl
insb
movsb
adc
xor
cmp
mov
xchg
fldt
cmpsl
push
mov
ljmp
cmp
std
adc
mov
mov
sbb
loope
je
test
iret
int
sub
outsl
rcl
aaa
lahf
lds
idiv
add
add
loop
lcall
movsb
inc
out
cmc
xor
int3
push
mov
or
xlat
jp
and
stc
scas
sbb
jo
adcb
xchg
out
or
mov
int
fnstsw
xor
add
add
enter
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
xchg
sub
daa
in
adc
and
dec
addb
dec
fsub
fwait
pop
pusha
mov
xor
filds
lret
add
cmc
movsl
push
mov
jle
cltd
inc
dec
xchg
push
sub
jnp
lock
loop
test
pop
popf
jno
je
ja
repnz
testb
sbb
stos
jae
mov
add
sub
shrd
out
mov
or
mov
dec
or
fsubr
dec
dec
inc
jge
adc
cmpsl
fimuls
ljmp
out
loopne
pusha
je
in
addr16
jle
mov
mov
lea
cli
cmp
or
sbb
mov
mov
xlat
jo
mov
test
outsl
jmp
jecxz
inc
mov
push
enter
sbb
jecxz
lods
jl
addl
push
fisubs
xchg
xchg
test
jmp
fistpl
rolb
les
es
mov
and
xchg
mov
scas
push
fcmovbe
mov
mov
sub
fcomip
sarb
adc
std
xchg
jnp
inc
cmc
sub
pusha
rcll
shr
stos
dec
stos
out
das
jmp
sti
dec
jge
pop
jle
mov
sub
inc
pop
inc
arpl
adc
push
push
pop
fistl
fistpl
enter
or
pop
push
aam
sbb
jp
repz
mov
dec
test
mov
mov
sbb
in
inc
or
iret
aam
sbb
xor
rclb
arpl
test
popa
inc
xor
pop
imul
dec
inc
pop
leave
push
shr
fildll
daa
xor
in
movsb
cmp
in
scas
jmp
sbb
and
popa
pop
loope
dec
repz
inc
xor
in
and
dec
inc
repnz
xchg
dec
iret
addl
mov
js
mov
scas
aad
pusha
adc
sbb
inc
add
pushf
out
pushw
xchg
je
shlb
test
and
lret
cs
mov
sbb
cmp
test
loopne
fldenv
cmp
push
cmp
xor
les
mov
addl
in
push
xchg
and
test
fisttpll
sbb
fldl
je
lds
clc
sbb
xchg
add
ror
aaa
lods
sti
push
push
push
pop
cmpsl
out
and
test
outsb
out
icebp
test
mov
adc
call
and
xchg
or
push
mov
loop
lods
test
ljmp
mov
mov
rcll
dec
in
fildll
fdivp
xchg
sahf
cmp
dec
inc
outsl
in
test
mov
lcall
fldt
rcrb
pop
into
inc
imulb
loop
sahf
mov
rorl
repz
jae
in
js
add
pop
in
movsb
jg
cmp
cmp
sbb
sub
mov
test
movnti
push
inc
jecxz
sub
gs
fimull
andb
lods
dec
adc
fwait
ljmp
jmp
jmp
lds
int3
lret
jb
and
jmp
xor
insl
bound
mov
mov
xchg
or
cmc
jbe
shl
add
sti
pop
push
xchg
inc
in
ficoml
daa
test
movsl
jg
inc
mov
out
mov
or
sbb
scas
inc
cmp
repnz
mov
xchg
sbb
push
lea
fs
out
popf
jb
scas
out
orb
in
stc
subb
pop
cmp
adc
mov
sbb
jne
inc
mov
xor
xor
pusha
test
loope
jnp
pop
lock
mov
push
in
lock
mov
call
in
add
push
jo
test
jmp
push
gs
fsubrs
insl
adc
rcrl
pop
xor
test
push
push
dec
xchg
push
cltd
xchg
or
mov
mov
push
add
sbb
inc
fisubrs
dec
xchg
mov
dec
pusha
and
xchg
or
adc
sub
cmp
sbbl
pop
cmp
push
gs
mov
or
outsb
notl
out
jecxz
inc
bnd
add
mov
jo
test
nop
pop
movsl
mov
pop
jno
sbb
lods
push
or
fs
mov
sbb
or
add
mov
rolb
in
jb
sbb
popa
out
lcall
ja
int
jp
mov
in
jo
sub
mov
cmpb
outsl
bnd
aam
cs
mov
repz
enter
fcoms
xchg
out
leave
push
jecxz
mov
xchg
mov
daa
xlat
jne
cmp
gs
pop
loopne
xchg
mov
cld
jle
aad
mov
xor
pop
mov
shlb
std
loopne
das
pop
test
lods
mov
inc
mov
mov
repnz
je
rol
stc
adc
xor
movsl
adc
xorl
sub
mov
and
cltd
sbb
or
sub
sub
mov
add
gs
cltd
jp
push
data16
sbb
adc
adc
dec
sbbb
dec
sarb
push
lds
sbb
lret
je
lcall
mov
sbb
pop
clc
call
aaa
or
inc
xor
fmull
insb
pop
or
loope
mov
sbb
popf
popa
dec
mov
add
mov
xchg
arpl
xchg
daa
pop
ds
enter
pop
inc
xchg
je
loope
test
lret
mov
clc
cmp
scas
cli
out
cli
aas
test
or
es
aam
xchg
sarl
in
or
jmp
sbb
pop
cmp
adc
push
jg
into
cmpsl
adc
adc
test
lret
iret
push
or
and
imul
mov
sbb
mov
cmp
out
ficoml
sbb
adc
repz
jecxz
push
push
ljmp
repz
fs
cwtl
cmp
das
dec
cmp
add
stc
aam
cld
aas
fnstcw
cld
fwait
aas
dec
out
rorb
fs
cmp
aam
loopne
int
fidivrl
enter
and
dec
cmp
aas
adc
lods
cmpsb
cmp
test
into
ret
popf
sbb
test
mov
shl
pop
rorl
repz
dec
test
cli
lds
sub
add
push
jae
test
sahf
outsl
cmp
mov
mov
xor
jae,pt
int3
sbbb
xchg
out
or
pop
pop
mov
push
xchg
push
in
jns
repz
jge
pop
aam
jle,pn
int3
mov
adc
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
ljmp
mov
cmovb
xchg
in
inc
sub
iret
loop
mov
xor
sbb
xor
push
xchg
call
xchg
shlb
lds
pop
outsl
out
nop
ds
mov
fnstcw
cld
jnp
mov
shll
leave
jo
adc
push
cltd
aaa
out
loop
sub
js
stos
add
dec
jae
lcall
jno
inc
xlat
pushf
cmpsl
pushf
xor
iret
xchg
lock
xor
ds
or
sbb
negb
dec
sbb
stos
cwtl
jmp
rorl
mov
adc
mov
dec
das
fs
sbb
push
je
dec
mov
mov
jne
mov
sub
add
adc
cmp
cwtl
int
cmp
stos
je
xchg
xchg
cmp
out
xchg
jp
mov
aas
xchg
hlt
cmp
dec
mov
sub
pop
stc
xor
leave
add
cmp
icebp
loope
dec
or
push
fiaddl
je
xchg
mov
xor
emms
notl
cli
imul
push
pop
jb
fisttpll
pop
into
ds
cli
mov
dec
lods
push
inc
daa
loop
cmpsb
mov
stos
push
daa
imul
mov
scas
pop
icebp
nop
mov
sbb
out
int3
mov
jb
iret
ret
jns
pop
into
mov
xchg
sub
leave
popf
inc
loop
lods
add
negl
mov
aad
nop
cmp
rorb
xchg
aas
cmp
sub
pop
dec
xor
sbb
push
push
ljmp
loop
les
fldl2e
icebp
sub
arpl
and
mov
or
lods
stos
mov
adc
mov
lret
push
sub
cmc
jl
mov
push
dec
jge
xchg
daa
mov
sub
shlb
xlat
adc
jge
mov
jae
pop
push
rorl
push
rcrb
cld
and
repz
cmp
mov
scas
cmc
loop
outsb
dec
pop
sub
movsl
xchg
fdivr
fdecstp
mov
inc
inc
add
and
xlat
lret
pop
and
int3
fs
xlat
iret
sub
cmpsb
push
jnp
cmp
sarb
aas
pop
cltd
lds
cmp
push
int
adc
inc
cmp
hlt
repnz
mov
inc
adc
cmpb
jmp
in
cmp
mov
pop
add
xorb
cli
dec
pop
xor
cmpsl
mov
add
mov
mov
scas
pusha
imulb
xor
roll
inc
mov
cmp
mov
outsb
xchg
jne
xlat
jb
sub
adc
loop
out
rclb
and
sbb
mov
mov
sbb
aam
push
popa
pop
pop
pushf
dec
push
jge
jg
sbb
addb
or
sbb
test
lock
lds
nop
incl
shll
cmp
stos
cmc
fistps
and
pop
cmp
es
fmul
dec
arpl
add
xchg
aas
aad
pushl
aad
mov
cltd
stc
xor
adc
jge
push
lret
cmp
andb
lret
in
imul
ds
lret
mov
push
call
loope
push
enter
xorl
hlt
or
cmp
inc
pop
push
stc
pop
mov
int3
imul
adc
inc
pcmpgtw
lock
push
jb
add
addr16
in
ljmp
cmp
sbb
mov
popf
fisttps
pop
out
add
jb
leave
pop
hlt
pushf
inc
sub
push
loopne
repz
cmc
loope
fcoml
xlat
xchg
rclb
dec
repz
cmpb
in
ss
mov
pop
mov
sbb
jne
push
sbb
shll
jp
jg
int3
mov
xchg
movsb
sbb
sbb
lahf
movsb
mov
movsl
push
mov
dec
sub
int
dec
mov
mov
dec
inc
ret
cltd
dec
sub
add
scas
pop
pop
adc
out
mov
push
push
adc
lret
cmpb
push
mov
dec
stos
mov
adc
mov
cmp
mov
andb
push
repz
mov
je
mov
vmovaps
shr
jg
pop
movsb
sub
xchg
imul
inc
mov
pop
sub
jo
movsb
popf
and
inc
ret
and
sbb
jmp
push
dec
rcl
mov
jns
fsubrl
mov
xor
clc
clc
sbb
sbb
in
xchg
out
mov
and
add
loop
mov
add
jo
inc
bound
test
mov
jge
inc
pusha
aam
xor
xor
pop
xor
mov
sub
pop
jecxz
inc
pop
mov
mov
xor
dec
jb
jb
adc
enter
sub
mov
cmpb
arpl
add
fsubl
or
cmc
jp
cwtl
jge
mov
dec
sbb
fistpll
inc
jo
add
pushf
mov
dec
sub
jo
in
aad
push
loope
pop
cli
shrl
cmpsl
fs
mov
jae
jg
push
sub
add
pop
fmull
jle
cmp
xchg
fiadds
sub
push
add
in
mov
aaa
ja
fnsave
adc
and
dec
and
inc
aam
lahf
pop
mov
mov
js
mov
adc
incl
mov
and
lods
lcall
cmp
jle
inc
enter
clc
out
repz
xor
mov
lret
loopne
sub
lret
lcall
push
insb
mov
sbbb
dec
call
mov
mov
popa
outsb
jae
cmp
dec
repz
sbb
push
ret
daa
shll
add
lea
icebp
mov
stc
dec
pop
xchg
stos
ljmp
jo
mov
mov
cmpsl
les
push
rcrl
les
xor
xchg
jbe
mov
jae
pop
scas
cltd
push
int3
or
sub
jb
xor
dec
inc
adcb
mov
fstpl
pop
bound
xor
aam
cmpsl
mov
sub
push
aas
sub
and
mov
jo
add
inc
inc
adc
lods
inc
hlt
push
or
mov
out
cli
jns
cltd
mov
sbb
lea
sar
fcompl
dec
mov
mov
jbe
mov
dec
jnp
imul
sbb
sbb
sbb
icebp
mov
xchg
inc
jle
lret
cmpsl
orb
pop
add
dec
into
std
in
stos
clc
sub
aaa
scas
ret
xlat
mov
and
dec
or
repnz
ds
cmp
shl
jae
add
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
ss
xchg
inc
int3
adc
and
push
push
pop
dec
popa
scas
xchg
sbb
cmp
enter
cmp
imul
pop
jge
cmc
inc
repz
inc
add
adc
or
jne
sub
xlat
movsl
nop
mov
pop
loop
pop
xchg
mov
adc
pop
cmp
cmpsb
out
gs
subb
xchg
xchg
jnp
and
adc
inc
fisttps
adc
ljmp
or
test
mov
lea
rcr
xor
scas
xchg
add
test
bound
bndldx
outsl
leave
xchg
and
rorl
mov
pop
test
sub
icebp
dec
les
push
dec
movsb
add
add
inc
test
xor
lret
loopnew
pop
lcall
std
sbb
ss
lea
and
mov
popf
sub
or
mov
hlt
fisubs
sarl
pop
lods
loop
jmp
stos
pop
stc
jb
mov
dec
movsl
stos
mov
test
sarl
mov
xchg
es
ror
cmp
std
cs
out
mov
xor
lods
daa
out
jae
jge
pop
insb
iret
fistpll
pushf
shrl
cmpsb
xlat
stc
cwtl
sub
andb
mov
iret
dec
popf
xchg
in
and
cmp
push
je
push
ficoml
shll
and
xchg
pusha
xor
lods
addr16
mov
push
ret
in
insl
inc
movsl
mov
ret
dec
iret
mov
imul
call
adc
mov
or
push
xor
dec
push
fldl
xchg
add
repnz
xchg
or
add
in
sbb
mov
enter
xor
inc
push
xchg
inc
adc
mov
inc
das
sbb
xchg
aaa
insl
cmp
inc
pushf
jecxz
popa
inc
pushf
popa
xchg
fcoms
sub
clc
shlb
mov
sub
stos
in
add
out
pop
mov
sbb
les
sub
sub
sbb
mov
subb
outsb
xor
test
ljmp
cmpl
adcb
cld
jb
pop
mov
cmpsb
mov
inc
pusha
int3
xchg
add
push
scas
enter
xorl
jo
aad
pop
sbb
jbe
call
lods
lahf
rcr
mov
nop
std
stos
ret
fisubs
xor
push
outsb
enter
pop
xor
insl
sbbl
pop
sti
dec
dec
aam
out
int3
add
in
subl
sbb
cmp
push
dec
fucomi
sbb
mov
mov
cmp
icebp
xchg
test
cmpsl
int
lret
sub
cmp
jge
lret
cmc
and
xchg
scas
jg
outsb
icebp
push
into
pop
add
jbe
xchg
rolb
mov
imul
fmulp
ficoml
test
or
fwait
lcall
out
sub
js
mov
imul
xchg
loopne
je
mov
xchg
lea
test
les
sbb
sbb
mov
adc
out
jae
aam
repz
adc
jns
sub
outsl
add
sar
xchg
lret
xchg
int
fdivl
add
cmp
test
push
pop
rorb
test
sub
aam
pop
movsb
daa
mov
push
stos
mov
cmp
push
cmc
mov
fnstcw
rcrb
inc
jecxz
fcmovne
jge
pop
insl
or
xchg
lahf
in
jle
mov
cwtl
push
fildll
push
dec
push
cmp
xchg
lret
push
pop
jle
jge
aas
jb
dec
dec
or
cld
push
xor
enter
sub
mov
sahf
pop
adc
lods
mov
sbb
ja
push
pop
test
xor
adc
shrb
push
pop
mov
in
mov
adc
jl
inc
mov
cmp
cld
mov
leave
dec
xchg
movsb
or
xchg
xor
sub
or
inc
dec
or
push
outsl
cld
xor
push
sub
mov
mov
mov
or
jno
movsl
jg
adc
in
shrl
push
fstpl
adc
pop
mov
mov
xor
mov
xor
mov
jmp
dec
cmpsb
insl
ss
pushf
fsub
insl
rep
shlb
or
sbb
jbe
xor
std
lock
rcl
pop
cmpsl
in
push
xchg
lock
and
push
les
lret
je
mov
mov
pop
pop
int
sub
add
push
sar
mov
call
dec
in
mov
lods
call
lahf
leave
in
loopne
sti
push
sahf
je
shll
sahf
inc
fists
jp
jb
cwtl
addr16
test
or
lea
cmp
insl
jne
inc
movsl
or
enter
add
loope
pop
or
or
mov
sbb
mov
jno
mov
fidivs
or
repnz
jge
inc
repz
xorb
push
sub
ret
mov
mov
divl
inc
div
xchg
popf
enter
lods
jno
mov
jno
mov
pusha
in
icebp
jne
xor
in
xchg
push
nop
or
jmp
testb
push
xor
sahf
or
scas
pop
popa
pop
out
inc
cld
xchg
lock
stc
shrl
pop
push
jnp
push
mov
outsw
adc
add
ja
sub
test
pop
scas
leave
push
in
sbb
adc
push
push
fldenv
push
jne
popf
in
push
scas
mov
push
fsubrp
pop
mov
xor
xchg
repz
mov
sbb
sbb
mov
add
int3
dec
in
mov
pop
loope
mov
movsl
mov
outsb
inc
loope
hlt
mov
sub
xorl
add
sub
inc
imul
sahf
std
xchg
testb
subb
clc
push
and
jae
in
std
mov
test
daa
and
inc
push
mov
sub
daa
mov
mov
cmp
hlt
dec
sub
cli
std
hlt
in
fisttpl
pop
test
mov
sub
rorl
aaa
xchg
sub
push
mov
mov
add
jno
mov
sub
pop
cmp
fisttpll
sub
lods
pop
and
pop
leave
mov
mov
xchg
bound
in
push
repnz
ficoms
aad
call
mov
aaa
or
pop
adc
in
sub
ret
xlat
sbb
push
push
sub
ljmp
es
aam
in
shlb
jecxz
lcall
push
add
cmp
pop
jge
adc
mov
imulb
mov
test
cmp
sbb
addb
pop
dec
xor
div
shrb
cltd
movsl
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
pfrcpit2
mov
cmp
rcrb
insl
xchg
sbb
iret
or
rcrl
sub
popf
aad
icebp
pop
push
mov
insl
push
pop
push
es
mov
add
and
int
idiv
and
sub
jle
pop
mov
insb
ljmp
xor
addr16
sahf
in
ds
mov
icebp
cmpsb
inc
xor
into
jns
rep
push
inc
mov
jbe
mov
lret
pop
jne
dec
xor
or
dec
fiadds
add
bound
mov
pop
cmc
rorb
adc
xor
out
mov
inc
cmpsl
insb
pop
adc
xchg
fldenv
insl
cmp
leave
push
inc
pop
add
lcall
sub
ss
scas
push
les
aad
nop
and
pop
and
jmp
lds
cs
jbe
gs
inc
pop
fidivl
xchg
repnz
jle
daa
push
pop
mov
out
popf
fidivrl
mov
pop
popa
and
or
sti
sub
push
cli
xor
in
fistps
adc
rolb
inc
out
push
arpl
jp
mov
rcll
out
push
mov
bound
sbb
jp
sub
or
and
add
int3
add
mov
shr
shlb
scas
cmp
out
movb
jl
mov
and
mov
pop
insb
cmpsl
bnd
roll
or
aas
sti
mov
cltd
loop
test
push
mov
inc
test
sbb
mov
lea
daa
cltd
stc
sbb
xchg
xchg
fsts
jmp
pop
aaa
in
popa
call
scas
out
sub
fstl
and
stc
rorb
jae
enter
jg
and
mov
sbb
mov
xchg
les
mov
mov
xor
jmp
int3
jmp
ret
pop
jl
ret
cs
cmp
adcl
mov
xor
sbb
insb
sbb
dec
xor
movsb
lds
push
dec
push
adc
xor
cmpb
mov
daa
cld
jp
icebp
out
sbb
sub
inc
imul
iret
xor
shlb
cwtl
mov
xor
push
js
fstl
sbb
mov
jmp
lock
and
push
lret
je
jbe
addr16
ss
sbb
and
push
cmp
xor
cwtl
xor
and
imul
mov
cmc
mov
and
or
stc
add
jge
movsb
loopne
fwait
or
jae
xchg
les
outsb
movsb
ror
push
pushf
pop
push
nop
xorl
add
dec
sbb
and
jb
aam
sahf
mov
lahf
mov
lret
mov
aam
mov
or
stc
cwtl
dec
mov
sub
inc
add
xchg
cmp
sbb
jo
lret
iret
dec
xor
stc
mov
sbbb
sarb
stos
dec
mov
call
subb
mov
fcmovne
movsb
clc
push
xchg
inc
idivl
xchg
pop
imul
push
in
mov
stc
outsb
fwait
jl
adc
movsb
inc
das
sub
fwait
xor
jnp
push
cli
in
dec
cmc
test
jl
or
js
sub
into
arpl
imul
mov
or
cld
je
adc
inc
inc
out
cmp
lret
loop
mov
dec
push
fcoms
imul
mov
dec
mov
cmp
lock
jg
mov
mov
iret
ja
xchg
xchg
xchg
mov
push
jge
xchg
fimuls
fstps
adc
mov
sbb
out
les
std
jne
inc
imull
addr16
xchg
dec
sahf
aas
outsb
aad
and
mov
sub
xchg
push
out
push
jb
cmpb
sbb
data16
mov
jl
push
in
andb
sub
lods
mov
mov
adc
lret
mov
cmpsl
faddl
cltd
out
xchg
push
movsl
or
movsl
stos
jns
sbb
jnp
fsubr
fcoms
push
in
xor
push
mov
cmp
aas
dec
jno
lahf
stc
cld
ret
fadd
imul
mov
mov
testl
adc
bnd
test
stos
inc
push
inc
dec
sbb
xchg
jmp
jmp
pop
fistpl
fwait
arpl
dec
test
lret
cmp
in
jge
mov
push
jbe
add
lods
daa
pop
inc
sbb
hlt
sarl
mov
cltd
lmsw
es
mov
mov
or
cmpsb
lea
je
int
je
or
addr16
or
or
fbstp
add
movsl
iret
pop
pop
popf
scas
sbbb
stc
dec
adc
cli
mov
loope
mov
out
adc
or
xchg
out
push
and
pop
jns
push
scas
ds
push
lds
pop
movsb
xor
jmp
inc
mov
jns
mov
cs
add
sahf
lret
pop
fmuls
push
cmp
mov
sahf
lret
mov
sub
or
pop
cmp
sub
mov
in
mov
mov
xchg
and
xchg
mov
xor
pop
popa
inc
dec
enter
add
push
daa
jno
jecxz
ja
out
mov
iret
aas
into
in
mov
adc
push
add
adc
out
cli
sti
jl
aaa
dec
loop
sub
pop
mov
sti
xchg
outsl
sbb
movsb
in
ret
jnp
mov
dec
jmp
mov
xor
dec
adc
jbe
ja
test
movsb
gs
lock
cmp
and
sbb
fimuls
dec
dec
std
cli
popa
inc
sub
ret
scas
iret
inc
push
test
sbb
in
mov
xchg
xor
sub
push
or
add
rcl
and
lret
adc
dec
xor
test
mov
fimull
dec
mov
daa
or
lock
xchg
std
mov
fiadds
xchg
xchg
sbb
rcr
inc
pop
xchg
adc
fcmovb
fcompl
outsb
xchg
pop
rdpmc
out
pop
mov
sbb
call
mov
adc
repnz
mov
lcall
push
stc
jo
les
jae
sub
dec
shlb
jg
fs
cmp
leave
bound
mov
insb
mov
movsl
mov
push
cwtl
icebp
nop
and
mov
mov
das
in
fmuls
loop
ficoms
jecxz
mov
icebp
mov
and
and
jmp
jne
add
subl
xchg
mov
mov
adc
and
xchg
xchg
or
repnz
mov
sbb
out
scas
xchg
lret
sub
je
in
cmp
hlt
iret
lret
insl
dec
push
bound
cmp
inc
in
mov
repnz
loopne
and
push
ss
jle
fs
jae
subl
shlb
in
sahf
ljmp
xchg
cmpsl
orb
pop
in
push
shr
and
fidivs
imul
mov
push
mov
mov
out
xchg
inc
lcall
in
bswap
push
out
out
rolb
aad
mov
pop
jnp
imulb
xorb
pushf
in
lret
push
lods
sub
and
std
mov
gs
fcoms
push
mov
ljmp
and
fadd
fucomip
aaa
pop
shll
int3
mov
jecxz
cli
push
lods
dec
or
gs
pop
lahf
push
pop
mov
xchg
frstor
notl
test
sarb
aam
fisubs
inc
insl
int
cmp
shl
xchg
pop
sub
mov
icebp
push
insl
sbbb
or
jbe
push
test
es
pop
mov
lret
jnp
mov
movsb
pop
pop
int3
into
adc
mov
movsl
das
ds
xor
add
inc
or
orl
adc
pop
cmp
popa
pop
jge
loop
fisubl
xchg
mov
rcrl
jb
mov
xchg
sub
ds
dec
mov
jo
or
cmc
sub
sub
cmp
xchg
jbe
es
mov
mov
push
sbb
and
gs
mov
or
jns
cmp
ss
push
in
jg
pop
add
rcrl
enter
mov
mov
bound
test
sar
gs
loop
jno
xor
jle
sbb
pop
lea
adc
cli
xchg
dec
and
popw
lret
fdivs
lock
lods
out
mov
lods
adc
adc
and
cmp
dec
leave
hlt
xor
fs
push
mov
pop
mov
ficomps
imul
xor
push
push
pop
sub
out
xchg
outsl
pop
push
and
ljmp
push
outsl
ds
pop
lock
xor
sbb
lds
and
dec
popa
mov
fdivrl
hlt
shl
cli
in
mov
xchg
xchg
jns
fwait
cli
call
sub
mov
mov
mov
push
jne
mov
clc
mov
fst
test
dec
repnz
push
fcmovnbe
rcrb
pop
cld
aaa
icebp
mov
mov
xchg
jae
int
jg
ret
aaa
push
movsl
cli
mov
outsb
neg
or
pop
pushf
arpl
mov
dec
push
aam
fwait
jno
ss
cmp
and
cmp
adc
rcr
or
mov
pusha
hlt
add
lea
cmp
pshufw
xchg
xor
jnp
aas
or
push
daa
pushf
loope
adc
and
enter
lret
sarb
repz
xor
js
lods
aam
sub
out
sbb
test
adc
outsb
push
ret
aam
ret
mov
decl
ret
push
mov
aaa
jo
push
ret
inc
mov
addl
lock
and
rol
dec
jl
ja
push
test
sbb
mov
int
xor
imul
dec
je
cmp
in
adc
loopne
pcmpeqw
lret
inc
out
push
push
inc
leave
es
repz
es
fldl
or
cld
jl
fimuls
mov
mov
and
lea
fs
jno
mov
mov
orl
add
push
cld
sbb
imul
icebp
imul
fistpl
push
outsb
or
imul
jno
cmpsl
push
loop
pop
pop
pop
ret
jne
test
xor
mov
xchg
or
dec
xchg
xor
out
ret
cld
cld
mov
andl
cmpsb
icebp
xchg
xor
lret
popf
push
jbe
xlat
jnp
xlat
call
inc
sub
insb
pop
mov
loopne
jne
and
jnp
loop
pop
call
or
adc
rcrb
push
insl
push
jg
or
pop
leave
xchg
mov
mov
in
aam
cltd
cmp
dec
outsl
xlat
cltd
mov
xchg
out
ljmp
sarl
inc
imul
and
adc
cmc
test
loopne
jbe
push
add
xor
scas
fsts
call
push
dec
notl
les
icebp
cs
add
loop
call
pop
test
fsubrl
adc
rorb
lods
push
push
mov
bound
cmp
mov
mov
jle
loope
push
pop
and
mov
xorb
clc
and
aaa
xor
mov
pop
cmp
inc
jg
mov
call
and
adc
fstps
loopne
jno
pop
cmp
sub
xor
pop
sbb
mov
jb
jno
mov
pop
pop
aam
insl
sub
mov
jp
sbb
int
shl
fneni(8087
je
sbb
and
in
popa
gs
xchg
test
xchg
push
and
pop
in
daa
lods
jno
or
fsubr
inc
lds
jnp
cmp
call
xor
sub
inc
stc
imul
loope
movsb
inc
test
sbb
ficomps
cmp
xlat
stos
or
ret
xor
outsb
xor
adc
test
pop
mov
stos
dec
cmp
das
movsl
mov
push
cmc
mov
lods
jecxz
repnz
aad
xchg
mov
gs
push
out
jnp
xlat
sbb
add
loop
dec
mov
imul
cli
fsubl
inc
outsl
scas
mov
inc
fwait
sbb
fsubs
jae
dec
pop
xchg
movsb
push
ret
repnz
iret
fistl
dec
xchg
pop
loopne
mov
sahf
pop
scas
push
mov
sub
sub
or
jo
inc
xchg
cmp
lret
or
cmpb
adc
int
jl
inc
sarb
cmc
clc
fsub
dec
xlat
mov
mov
dec
fs
mov
jbe
dec
or
repz
mov
pop
lahf
push
xchg
int3
pop
stos
push
sbb
or
rcrl
gs
das
cli
and
into
lock
popf
pop
out
xchg
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
sbbl
js
adc
and
iret
add
inc
inc
es
fs
jle
les
xlat
sub
pop
push
lea
or
pop
std
cmc
mov
sub
cmpb
xor
push
sub
jbe
cmp
xchg
out
in
jl
sbb
int
insl
das
sub
push
jo
aas
pop
aaa
cmc
mov
pop
dec
xor
fstl
cmpsl
dec
mov
adc
xchg
cmp
adcl
pop
cmp
add
int
fidivl
and
cltd
push
mov
je
loopne
cmp
inc
mov
shlb
js
loopne
testl
jae
cmp
and
into
cmc
mov
fcoms
aas
mov
dec
add
dec
call
cmpsb
sub
pop
mov
stos
std
hlt
add
jo
cmp
mov
shlb
ret
pop
lea
into
testl
sub
arpl
sub
imul
insl
stos
xor
sti
lods
xchg
cmp
inc
push
int
shlb
les
mov
pop
push
inc
aas
notb
pop
iret
or
inc
add
push
jne
cmpsb
mov
cmp
mov
dec
sub
cwtl
cs
pop
movsl
fst
jp
mov
faddp
enter
xchg
das
insl
test
xchg
addr16
push
inc
andl
mov
or
dec
movsl
out
mov
sub
enter
cld
mov
iret
test
inc
addr16
xchg
push
pop
cmpsl
or
ss
jnp
int
pop
xor
pop
or
lahf
xchg
ljmp
xchg
jecxz
mov
fsubrs
xchg
push
psubsb
jne
ret
inc
sahf
stos
dec
adc
lds
or
insb
out
and
in
cltd
nop
stos
cmpsb
mov
or
loope
movsl
sahf
inc
lcall
shrl
mov
popf
rorl
xchg
xchg
sub
imul
out
cmp
addr16
xchg
ffreep
inc
mov
gs
mov
cmp
cmp
cmp
and
dec
mov
stos
dec
test
dec
xchg
cli
or
xchg
hlt
std
nop
fs
or
cmp
mov
sub
mov
aad
in
jno
and
fwait
ljmp
dec
mov
xchg
cmc
inc
lods
inc
and
pop
jmp
cmp
adc
lds
push
push
xchg
sbb
sub
add
mov
sbb
or
xchg
arpl
popf
dec
outsb
addr16
and
push
mov
jns
lods
sub
sti
sbb
cwtl
mov
mov
shl
ja
sbb
mov
pushf
sahf
sbb
out
push
mov
psrld
fiadds
push
cmpsl
xchg
mov
fistps
pop
add
fdivrs
sbb
pop
dec
fmuls
xor
pop
pop
mov
sbb
adc
sub
cld
rcll
mov
jmp
fildll
pop
jg
arpl
mov
outsl
out
and
mov
sbb
cmp
pop
mov
les
push
inc
andb
mov
loope
cmc
test
xor
xlat
outsl
shlb
mov
and
mov
bound
fistl
movsl
add
sub
aam
adc
dec
sbb
pop
add
dec
pop
std
adcl
mov
fldcw
sahf
fldenv
hlt
mov
xchg
or
dec
mov
jae
inc
ss
lods
xchg
xchg
enter
repnz
mov
rcll
adc
iret
dec
mov
bound
xor
jae
arpl
or
cmp
jns
sbb
xor
inc
shl
xchg
movsl
inc
add
imul
pop
mov
add
movsb
insb
add
adc
scas
cmp
mov
shl
clc
aas
push
or
xorl
enter
gs
push
xor
pop
push
sbb
inc
dec
xchg
shlb
mov
xor
fnstsw
and
push
xchg
ja
xor
and
mov
test
fwait
or
stos
jmp
or
xor
pop
fiadds
mov
fisubrs
into
sub
add
pusha
ljmp
jecxz
cmp
mov
xor
data16
lret
xor
adc
cltd
ds
push
sub
cmpb
dec
push
xor
dec
mov
lahf
aas
in
xchg
pop
adcl
lock
mov
xchg
sub
sahf
xchg
mov
xchg
adc
in
lods
aaa
js
inc
dec
test
sub
jg
stos
out
imul
inc
pop
loope
aas
scas
into
fcmovbe
fisttpll
sbb
rcrb
dec
ror
rclb
int3
pop
pop
stos
push
xchg
inc
arpl
inc
mov
shl
cwtl
cld
pop
push
mov
mov
idivb
out
shll
and
out
ss
mov
add
out
push
test
dec
add
push
mov
xchg
jl
adc
filds
cmp
mov
jecxz
subb
test
loop
call
loope
pop
push
push
lahf
fcmovu
pop
aaa
and
add
mov
or
stc
fldl
outsb
add
dec
call
push
xor
add
icebp
sbb
fwait
aad
aad
pop
mov
cmp
push
aas
inc
loopne
fsubs
jae
das
fistl
or
in
push
int3
jo
jae
subb
mov
in
or
and
xchg
leave
sbb
cmp
out
sbb
repz
xorl
lods
enter
xchg
jge
inc
paddsw
dec
mov
mov
es
insb
sahf
or
dec
addr16
and
dec
xchg
lcall
das
add
add
mov
cli
fcoml
ret
loope
test
out
insb
mov
xor
pop
jno
xor
jns
mov
mov
arpl
aam
jns
jp
mov
pop
dec
cmc
dec
mov
dec
mov
aas
add
mov
sub
in
hlt
shr
inc
js
clc
xchg
jmp
rorl
scas
shlb
jl
gs
mov
cmpsl
loope
fdivl
push
sub
sbb
or
pop
pop
sub
pusha
aaa
enter
or
cmc
stos
xchg
sbb
call
iret
mov
lds
cmpsb
pop
mov
mov
dec
or
adc
mov
pop
sbb
mov
sahf
mov
push
movsl
arpl
push
pop
jmp
jb
pusha
out
adc
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
test
and
fcomps
shlb
dec
leave
pop
mov
cmpsl
sub
jbe
cmpsb
pop
fdivp
push
orb
push
add
hlt
iret
enter
cli
divl
mov
in
pop
cmp
lahf
jne
mov
inc
in
aaa
adc
jnp
mov
add
imull
mov
xchg
sti
std
stos
mov
cs
mov
sar
lock
arpl
rolb
xor
ja
pusha
in
icebp
jne
cmp
pop
add
test
icebp
dec
movsb
mov
roll
ljmp
jnp
rcr
arpl
push
push
inc
outsl
out
push
ret
int3
pop
ss
push
les
mov
inc
cltd
mov
jp
jp
inc
jnp
and
jecxz
movsb
nop
xchg
sub
push
push
jl
stos
mov
jp
sti
lret
xchg
jns
mov
lods
pusha
dec
ss
aas
adc
es
test
and
fistps
mov
mov
repz
shll
icebp
dec
loope
adc
lret
stc
push
fisubrl
into
cmp
mov
ds
pushf
add
rolb
dec
int
aam
testb
mov
push
rclb
jg
loop
inc
cmp
inc
rol
push
adc
sbb
mov
add
cmp
cmp
inc
mov
insb
outsl
addl
lahf
sar
loopne
push
and
aas
insl
push
pop
es
fwait
jb
mov
dec
cmp
cmp
sub
push
dec
lcall
jmp
or
sbb
push
jle
es
mov
into
int3
mov
shrl
and
mov
xor
pop
inc
mov
cmpsl
or
aam
repnz
push
mov
or
ret
cmp
mov
adc
add
jle
int3
ret
fsubl
mov
xchg
adc
ret
add
lods
les
xlat
cmp
and
jmp
popf
insb
int3
popa
mov
push
out
pop
push
daa
dec
decb
mov
add
xor
push
data16
rcl
sbb
adc
jecxz
orb
loope
jbe
out
fsts
push
gs
loop
jmp
mov
leave
leave
mov
add
lods
hlt
leave
in
lods
sub
mov
xlat
imull
ffree
mov
mov
adc
dec
mov
sub
rclb
call
clc
in
ficomps
dec
pop
sbb
test
out
int
sbb
xchg
adc
or
xor
loop
xor
add
rcr
daa
or
xor
mov
adc
test
and
cs
loop
jg
jmp
pop
cmp
dec
mov
pop
pop
dec
adc
jae
adcl
push
pop
insl
dec
or
mov
xor
int3
inc
cmp
call
repz
stc
das
cmp
inc
add
lcall
cmp
lret
insl
add
dec
ljmp
mov
cmp
mov
fistl
aas
hlt
pop
xchg
lret
sub
sbb
jns
outsb
adc
inc
inc
ret
mov
or
adc
jbe
sbb
dec
pop
frstor
push
jns
push
mov
into
fsts
cli
outsl
scas
pop
sub
aaa
es
cmp
mov
loopne
cmpsl
in
jecxz
imul
mov
mov
sbb
push
cmp
pop
adc
mov
jmp
and
dec
lods
sbb
adc
adc
xchg
cmc
cld
hlt
xor
sub
fs
mov
cmpsb
mov
and
imul
xchg
mov
sub
dec
xor
test
mov
sbb
test
cmp
sbb
in
dec
push
or
mov
lret
push
mov
jmp
jmp
rorl
clc
ds
nop
scas
xchg
jg
mov
adc
push
jmp
imul
adc
flds
fiadds
jmp
push
dec
jbe
xor
data16
push
and
jns
es
xchg
movb
xchg
xchg
pop
shll
ret
push
jle
jns
mov
inc
push
test
jg
jge
cs
mov
popa
cmpsb
or
fiadds
dec
mov
out
sbb
sub
imul
sbb
addr16
cmp
xor
cltd
aad
js
sti
addl
test
xor
lds
push
xor
inc
fistpll
lea
jle
cltd
or
repz
int
insl
push
leave
imulb
jbe
mov
mov
pop
xchg
lea
movsb
or
lods
sahf
jnp
xchg
daa
rclb
push
in
add
scas
data16
fwait
jno
xor
ljmp
sti
repnz
lock
int3
inc
frstor
adc
gs
mov
add
iret
xor
mov
jbe
xchg
jecxz
call
fstps
xor
jge
push
jbe
mov
repz
jmp
and
dec
mov
xchg
icebp
mov
jmp
push
popa
movsb
adc
push
cmp
inc
sub
pop
cmp
negb
adc
out
mov
scas
and
push
movsb
fiaddl
std
nop
cmp
repz
add
iret
in
mulb
cmp
std
ret
loop
jns
outsl
into
out
push
enter
sahf
loop
clc
nop
mov
cmc
xchg
inc
and
pop
into
dec
es
fs
data16
push
xor
mov
dec
insb
inc
inc
jb
pop
fstps
dec
ret
inc
mov
mov
fisttps
push
xchg
scas
aad
sub
xchg
pop
cwtl
push
cli
or
xchg
outsl
mov
roll
rcrl
mov
pop
aad
adc
es
inc
rclb
insl
inc
or
pushw
test
sbb
mov
int
dec
enter
push
int3
incl
clc
mov
cmp
pusha
jmp
mov
lahf
push
pop
xchg
imul
pop
cmp
or
mov
cmp
std
test
decl
fstpl
sub
hlt
dec
jl
xchg
aas
sahf
lret
jnp
jp
or
jo
cmp
clc
hlt
ds
xor
adc
test
pusha
cmc
fimull
into
test
rorb
dec
sar
jmp
enter
hlt
xchg
lret
mov
jl
cmp
mov
mov
xor
pop
and
aad
std
mov
mov
leave
jns
and
jge
stos
cld
fmul
in
fiaddl
out
xchg
fcom
xor
jge
repnz
inc
lock
call
inc
jns
cmp
dec
or
jns
mov
mov
inc
cmp
dec
xor
dec
je
jne
icebp
loop
int
push
jmp
sbb
push
adc
xchg
int3
xchg
inc
pusha
push
cwtl
nop
adc
and
dec
jge
or
jge
in
stc
xor
push
cmp
mov
xor
jp
outsb
pop
push
pop
add
push
or
sbb
bound
scas
dec
ja
push
push
fbld
insb
pop
add
scas
rcrb
xchg
jb
push
add
jle
cmpl
xchg
movsb
pop
push
imul
mov
cltd
out
aaa
sbb
inc
mov
rolb
sbb
insb
mov
mov
cwtl
mov
pop
mov
lods
pop
jno
rcll
push
xor
fwait
lret
xchg
mov
call
paddusb
loope
push
adc
inc
pushf
and
mov
int
mov
or
mov
mov
fildl
jb
mov
mov
pop
dec
xchg
movsb
mov
enter
xchg
js
sub
clc
mov
ror
mov
adc
cmp
mov
loope
pushl
sarb
rcr
enter
mov
test
stc
int3
rorl
cmp
jg
jp
mov
sbb
xor
fistpll
test
je
in
aas
or
dec
in
pop
lcall
mov
xchg
add
hlt
mov
and
cld
pop
mov
ror
sti
mov
xor
scas
cmp
das
sub
pushf
cmp
mov
xor
xor
arpl
xlat
push
inc
les
pop
cmc
mov
adc
out
mov
insb
or
mov
imul
cs
subl
xchg
xchg
fdivl
mov
pusha
pop
fstl
inc
mov
or
in
adc
mov
movsl
jl
dec
cmp
fwait
sti
mov
sub
adc
dec
pushf
aas
cwtl
and
repz
mov
dec
imul
push
dec
push
jl
cld
dec
mov
push
ret
pushf
aad
sub
jge
xchg
dec
jne
jb
mov
cmp
add
movsb
mov
aam
inc
dec
cltd
xor
nop
jo
jo
imul
aad
dec
scas
cmp
mov
mov
push
cmp
aad
dec
pusha
loopne
dec
jp
mov
xchg
mov
or
pushl
pushf
or
out
movl
pusha
sarl
repnz
mov
dec
jo
or
adc
mov
nop
ficompl
js
js
mov
insb
xchg
nop
sub
cmp
pop
sbb
mov
int
dec
xchg
push
mov
rorb
dec
cmpsb
sahf
mov
and
lds
stc
scas
pop
jo
pop
and
pop
imul
inc
mov
and
jge
popa
mov
xor
mov
popf
cmp
sbb
out
push
adcb
jle
push
mov
out
adc
fwait
sub
xor
push
loop
dec
ret
movl
xchg
test
or
mov
daa
jno
popf
jo
cmp
xor
xor
sub
pop
lods
mov
out
mov
pop
cmp
xor
xor
ja
shlb
fstps
mov
xchg
or
sbb
dec
leave
js
xchg
ljmp
jge
inc
and
std
faddp
outsl
movsw
test
xor
cmp
mov
hlt
pop
jns
push
lods
cmp
in
imul
sbb
pop
mov
das
jmp
mov
lret
jp
lods
lock
fs
into
push
inc
lret
jnp
xchg
dec
jmp
ret
push
cmpsl
inc
fisubs
into
cmpsl
mov
ljmp
mov
lods
mov
cmp
xor
rclb
cmp
enter
cli
dec
mov
hlt
in
bound
out
sbb
scas
mov
sub
pop
push
je
pop
jl
lret
lret
xor
je
test
jmp
out
pop
jmp
cmp
push
push
jmp
dec
mov
cltd
ja
fwait
lea
cmpsl
aad
push
lahf
ret
add
xchg
mov
sub
jo
les
in
xchg
dec
aas
mov
pop
cmpsb
aam
jno
fcmovne
inc
jbe
mov
and
repnz
and
pop
sub
cmc
jge
or
ret
push
mov
push
push
push
stos
xor
or
hlt
in
push
loop
mov
test
fists
aad
stos
lods
mov
jle
push
rsm
imul
and
lcall
sub
fimull
scas
in
push
mov
sarb
inc
push
mov
iret
divl
xchg
or
mov
insb
and
les
mov
xlat
pop
push
imull
or
mov
adc
jbe
xlat
inc
pop
adc
bound
mov
mov
or
stc
jne
es
push
ret
cmpsb
out
mov
xor
lea
xchg
and
add
aaa
ret
dec
cmp
sub
add
push
cld
shll
adc
jns
adcl
mov
loope
mov
dec
mov
inc
outsl
jno
jg
inc
jns
pop
add
out
push
iret
lea
lahf
or
lcall
push
in
push
aas
scas
into
xor
lock
addr16
and
dec
push
cmp
mov
sbb
mov
jns
mov
mov
sub
fmull
jge
shlb
movsb
push
ss
mov
cmp
movsl
addr16
push
pop
test
mov
movsl
xchg
or
jg
addr16
xchg
mov
mov
test
ret
jl
sbb
cltd
xor
xchg
or
data16
ror
adcl
cmp
inc
test
mov
cld
cltd
in
jg
sub
in
imul
sbb
push
xor
xchg
icebp
xor
cmp
js
test
ja
adc
xor
pushf
pop
sarb
xor
nop
inc
popf
scas
mov
push
addr16
out
or
lock
mov
dec
out
jg
cld
shll
pop
subb
repnz
inc
lock
dec
mov
mov
mov
sbb
push
stos
mov
test
add
negl
mov
jmp
xor
shrl
loope
in
jmp
sub
popf
ljmp
ljmp
enter
pop
mov
jnp
lahf
sbb
out
sbb
ret
sbb
aad
push
lods
or
mov
lret
aad
cmp
in
loop
mov
dec
xorl
sti
ss
insl
push
loope
test
es
icebp
pushf
sahf
rorl
das
pop
bound
inc
jl
jle
jge
mov
movsb
sbb
jmp
inc
pop
push
dec
stos
aas
ret
test
clc
popf
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
hlt
fs
xchg
add
repz
stc
fwait
sub
stc
xchg
xchg
jecxz
fadds
xor
mov
in
and
mov
sub
xchg
sahf
or
xlat
lret
ret
push
push
bnd
push
fwait
outsb
aas
push
and
jp
sbb
sub
and
pop
mov
ja
push
mov
icebp
inc
bnd
xor
dec
mov
dec
mov
add
push
hlt
jbe
shl
imul
and
adc
jno
popa
xchg
sarl
mov
pop
jnp
jne
push
jnp
pop
push
movsl
fsubr
adc
shll
add
fmuls
fsubrl
enter
push
int
outsb
cltd
or
in
add
mov
stos
bound
inc
push
adc
jo
cli
int
push
mov
lods
dec
dec
sub
sbb
test
pop
xor
jae
mov
notl
jo
xor
pop
and
fmul
sub
loopne
dec
mov
jp
leave
jge
sub
or
cmpl
fildll
shrb
adc
stos
int3
add
xchg
ret
push
cvttps2pi
jge
repnz
inc
and
orb
pushf
dec
dec
inc
xor
lret
lea
sahf
xchg
ss
movl
mov
push
clc
add
sbb
repnz
popf
mov
sbb
or
and
scas
lret
pushf
add
dec
lcall
lods
push
dec
and
lret
cmpsl
outsb
xchg
loop
adc
mov
lret
pop
xchg
dec
fmul
adc
jae
in
sbbl
hlt
push
rorl
icebp
and
mov
inc
add
daa
inc
ret
xor
int3
pop
adc
xchg
jg
adc
jnp
jg
push
pushf
aam
push
ljmp
sub
add
ja
pop
cs
or
fbld
pop
daa
fstpl
mov
dec
imul
mov
pushf
xlat
inc
hlt
sarb
xorb
gs
inc
in
mov
je
lds
push
and
incb
imul
mov
idivl
sahf
xchg
cs
or
cmp
pop
int3
cs
std
sbb
gs
mov
sbb
pusha
mov
xor
mov
cmp
nop
cmpsl
ret
mov
mov
mov
sub
sbb
adc
lods
lcall
das
cmp
mull
je
sbb
sbb
ja
jo
or
cltd
mov
inc
push
mov
incl
lahf
icebp
pop
push
cmc
push
insl
or
dec
dec
and
cli
or
jmp
push
addl
into
shrb
iret
mov
cmpsl
add
cmpsb
fnstsw
outsb
js
mov
pop
add
fucomp
adcl
iret
mov
cmp
mov
negl
in
sbb
stc
call
xor
or
insb
stos
dec
jo
aas
das
in
push
stc
ret
lret
lock
cmp
add
test
fdivl
jmp
push
orl
push
push
idivl
subb
push
adc
or
xchg
movsb
ret
or
shl
out
mov
pop
outsl
mov
pop
or
lea
scas
add
sub
mov
ret
mov
cmp
jl
sub
and
filds
pop
fucomip
inc
push
ret
and
mov
and
into
push
and
fwait
and
ljmp
imul
mov
or
add
mov
fs
in
xchg
into
aas
push
ret
push
fnstcw
cld
xchg
jne
negb
out
mov
loop
jbe
sub
xchg
repz
daa
mov
imul
int
insb
sbb
mov
lock
hlt
pop
es
mov
sbb
ss
out
pop
imulb
or
in
gs
cmc
and
mov
cmp
fld
fidivs
or
stos
jo
push
repnz
dec
aad
add
sbb
iret
inc
dec
xor
rolb
dec
jg
es
int
in
xor
es
in
in
or
xor
or
xchg
mov
sahf
sub
aas
shl
cmp
daa
hlt
cmpb
dec
push
test
push
sbbb
addr16
pop
fdivrl
fcmovnb
inc
movsl
cmp
xchg
adc
in
notl
loopne
test
push
pop
push
outsb
dec
push
mov
fcompl
and
cwtl
cmp
orb
xchg
adc
cmc
pop
bound
gs
sbb
jge
mov
jge
adc
enter
insb
lea
cwtl
and
pop
cmp
data16
scas
lret
aas
sbb
jmp
mov
jno
lahf
je
hlt
inc
outsb
daa
push
or
stc
in
cmpsl
mov
dec
fs
scas
pusha
xor
fsub
dec
in
add
xlat
push
fsubrp
pop
rcrl
popf
in
flds
cmp
movsl
ficompl
popa
cli
out
mov
sbb
enter
or
inc
jb
ljmp
dec
mov
mov
repnz
fscale
and
in
movsb
mov
adc
les
jmp
fsubrl
pop
into
jno
das
add
ja
rol
lret
jne
xor
unpckhps
mov
xor
xchg
pop
fisubrl
adc
jecxz
je
xlat
jne
inc
scas
mov
mov
hlt
addr16
iret
dec
or
jle
add
int
push
ss
adc
or
adc
fs
int3
mov
add
cmp
or
ljmp
aaa
xchg
cld
mov
out
mov
xor
fstl
int
pop
or
shrl
insb
outsb
in
rol
mov
fistpl
cmp
adc
in
pushf
mov
jo
add
push
fs
pop
and
das
adc
les
mov
cmpsb
clc
movsb
ret
and
xor
sub
pop
adc
lret
mov
adc
xor
dec
sub
je
pop
arpl
mov
xlat
loope
out
pusha
mov
pushf
dec
test
cltd
mov
lret
push
fidivrs
pushf
aad
mov
dec
call
lds
repnz
cmp
mov
insl
add
pop
test
lods
add
ret
mov
movsb
lret
cwtl
ja
xor
mov
ds
jb
pop
pop
mov
add
mov
adc
pop
or
mov
pop
adc
imul
xorb
sub
shll
dec
and
das
and
iret
popf
addr16
inc
loope
insl
dec
repnz
aam
lahf
lea
or
cmp
sti
fdivrs
out
ja
add
jmp
mov
adc
sub
js
cltd
mov
inc
repz
rclb
pop
add
add
lock
jg
xor
xlat
ret
mov
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
iret
repz
sbb
jno
lock
ljmp
pop
inc
test
dec
or
movswl
insl
inc
movsb
jns
pop
fs
lahf
out
pop
pop
pop
push
rcrl
xor
aaa
pop
jg
push
call
popf
xlat
add
xchg
in
pop
and
shl
push
push
and
data16
mov
or
xor
das
jle
popfw
push
and
xchg
sub
and
jo
sbb
mov
not
jae
inc
cmpb
xchg
icebp
cwtl
xchg
js
push
xchg
push
loop
mov
xchg
fiadds
mov
outsb
in
cmp
cmpsl
sub
adc
jl
push
mov
loop
fcompl
fimuls
xchg
dec
rclb
sub
sbb
insb
test
out
movsl
in
inc
scas
ja
ss
shll
adc
daa
in
mov
add
xor
addl
cmp
dec
lock
jmp
iret
data16
xchg
mov
ficomps
mov
and
insl
ljmp
shrb
aad
shll
shr
pop
in
nop
mov
cli
adc
cmp
push
jecxz
cmc
shlb
adc
mov
imull
xor
in
xchg
and
jae
out
mov
out
leave
aas
jecxz
shlb
lret
sub
data16
daa
adc
aas
mov
lcall
xchg
sbb
clc
adc
mull
loopne
shrb
xchg
inc
inc
leave
xchg
loop
pop
in
xchg
mov
or
shlb
mov
push
and
js
pop
in
xchg
or
cmp
dec
lock
ss
dec
xchg
push
cltd
shl
shlb
pop
aaa
push
xchg
dec
xchg
mov
je
xor
jp
pop
shll
inc
xor
add
test
ds
jmp
cltd
xchg
xor
lret
mov
jl
or
cwtl
add
mov
or
addr16
lea
lahf
adc
ja
aam
cmp
sub
imul
xor
nop
push
iret
cld
push
fwait
js
inc
shll
lds
shll
push
inc
jno
loopne
stos
lock
mov
rol
dec
shrb
xchg
fdiv
js
inc
mov
add
mov
mov
jl
in
pop
lret
xlat
fbld
jno
push
shlb
mov
clc
xor
dec
mov
fcomps
scas
scas
aas
cmp
xorl
fs
jb
inc
add
icebp
add
inc
outsl
aam
fnstenv
pop
dec
ret
mov
pop
xchg
push
push
mov
push
dec
sahf
ret
shl
jb
int
fs
and
sti
sub
pop
mov
inc
add
sub
or
or
xor
movsl
cmp
mov
in
jo
inc
repnz
add
xchg
ret
fmull
pop
gs
imul
add
mov
lahf
shlb
pop
pop
mov
dec
adc
lcall
sbb
bound
and
or
and
es
cwtl
mov
xchg
push
insl
cs
in
repz
mov
jecxz
inc
pop
cmpsb
ficoms
push
inc
xlat
fstpt
jl
call
xor
dec
dec
loopne
mov
andb
cld
jns
fidivl
jnp
xor
or
xor
int
xchg
mov
adc
dec
test
dec
rol
lcall
aad
cwtl
push
jb
loopne
js
or
push
mov
mov
cmpsw
xchg
mov
test
shl
xlat
sub
mov
ret
xchg
mov
into
in
pushf
adc
xchg
call
mov
jg
and
or
sbb
dec
mov
push
shll
and
sub
rcrb
in
pop
aam
sub
mov
fsubs
aad
das
ficomps
or
mov
and
test
jmp
jb
cmp
mov
fs
enter
stos
push
cmp
push
std
insb
das
adc
cmpsl
xchg
je
cmp
mov
icebp
or
adcl
cli
outsl
or
cs
mov
xchg
jb
xchg
jno
mov
insb
mov
mov
and
enter
pop
sarb
andl
jecxz
add
jg
pop
sbb
jbe
popa
lds
cmpsb
push
in
mov
push
push
loop
push
xchg
sub
mov
scas
pushf
insb
xor
fmull
test
add
incb
sub
mov
arpl
jno
scas
repnz
dec
fnstcw
push
repz
mov
dec
loopne
js
test
xor
jp
fdivs
sub
sbb
cmp
cwtl
out
addl
loop
cmpsb
rclb
dec
shrb
mov
add
clc
or
and
mov
movl
or
int3
sbb
inc
gs
stc
in
out
lahf
cmp
jno
stos
std
inc
addb
adc
cmp
fisubl
outsl
xchg
aas
pop
adc
jecxz
add
xor
sti
mov
out
push
adc
and
test
mov
jno
push
stc
jno
cmp
adc
ja,pt
xchg
in
bound
inc
and
loopne
aad
test
rcll
sti
fs
jp
orb
inc
mov
jmp
outsb
pop
mov
pop
cmp
pop
mov
pushl
xor
scas
xchg
inc
sahf
outsb
sub
insb
arpl
inc
lods
das
jns
mov
lds
mov
pop
add
dec
push
xchg
xchg
cld
test
inc
out
jp
ljmp
cs
aam
sub
sub
sarl
in
mov
stos
jmp
fsts
inc
pop
pop
sbb
out
js
dec
jo
and
inc
or
inc
scas
jb
sbb
dec
cmp
and
lds
jmp
xor
sub
pop
mov
arpl
and
jno
movsl
std
and
mov
jecxz
stos
add
xchg
aad
int3
jle
mov
push
es
add
sub
adc
push
sub
iret
fldl
add
push
dec
bnd
sub
loopne
ficompl
fsubrl
movsl
mov
jno
lock
scas
jb
sub
and
imul
jno
jnp
add
sarl
push
pushf
push
xchg
xchg
sbb
push
repz
xchg
add
inc
jo
daa
pop
fdiv
cmp
push
cltd
xor
dec
mov
lock
and
and
sub
dec
sub
popw
xor
scas
les
movsl
jno
inc
js
push
xchg
xchg
jge
fldl
push
cltd
ss
psubsb
lahf
xor
cmp
mov
dec
pop
sub
std
pop
in
iret
ret
xor
daa
outsb
cld
jl
fs
daa
xchg
inc
icebp
push
ss
ds
stc
cmp
pop
es
scas
nop
mov
iret
xchg
data16
mov
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
loope
out
xchg
adc
addl
jmp
leave
sbb
push
lret
adc
hlt
mov
or
xor
pop
jnp
push
and
pop
xor
std
loope
and
mov
cmpsl
lea
adc
and
seto
js
cltd
aad
out
daa
testl
lea
cld
pusha
add
push
and
scas
mov
or
leave
mov
xor
push
add
and
cmp
hlt
sub
fs
repz
cmp
mov
es
mov
shll
jno
push
dec
cld
pop
cli
loop
mov
pop
adc
ret
adc
push
and
loop
mov
xor
into
xor
push
int3
add
call
pop
xor
dec
and
sub
jno
out
repnz
stc
adc
jge
test
push
es
jb
clc
push
repz
jmp
or
repnz
or
out
push
push
cmc
jnp
sub
dec
pop
subps
int
cmpsl
or
cs
lods
sub
push
xor
mov
rcrl
icebp
test
aas
mov
sar
pop
add
testb
mov
push
mov
dec
cld
mov
fidivrs
cltd
cmp
xchg
inc
pop
xchg
outsl
test
hlt
andl
sar
loop
mov
movsb
and
push
sub
inc
pop
dec
xchg
and
cmp
leave
mov
testb
nop
xchg
in
dec
mov
rclb
jne
adc
aad
xlat
arpl
xor
cwtl
mov
inc
lahf
dec
mov
push
mov
icebp
jb
xchg
mov
arpl
push
adc
inc
xchg
rcr
ror
jmp
mov
in
cli
and
push
mov
das
dec
orb
sbb
jb
js
push
test
adc
or
mov
fcmovne
mov
subb
dec
pop
lret
out
cmp
push
andb
daa
push
xchg
jae
dec
sbb
cmp
and
sbb
and
push
out
adc
in
addr16
fwait
daa
push
mov
mov
mov
int
icebp
call
inc
lock
cmp
mov
mov
sahf
xchg
out
and
ss
cld
add
add
pop
fwait
mov
mov
cld
mov
sti
xor
shll
adc
test
xor
cmp
aam
mov
inc
sub
mov
add
ds
adc
leave
xchg
mov
test
sarl
test
cmpsb
rorb
push
mov
xor
xchg
or
push
test
mov
dec
arpl
test
xchg
adc
sbb
pop
je
jo
mov
pushf
pop
seto
sbb
inc
ss
orl
aas
xchg
mov
dec
test
rcll
int3
cmc
daa
push
cltd
movb
sar
mov
and
dec
rep
fisubrs
xchg
sub
mov
adc
cld
sub
adc
andl
loop
push
lea
ss
push
insb
pop
ss
pop
jo
stos
push
add
push
test
mov
pop
rolb
js
jns
mov
aad
fwait
xchg
out
ja
xor
inc
mov
pop
sub
clc
mov
jle
mov
dec
mov
inc
push
jg
cmp
ret
inc
test
sbb
mov
sub
cmpsl
or
mov
fcomi
dec
jle
idivb
mov
pop
mov
dec
pop
fwait
cmpl
cwtl
xor
dec
lcall
inc
aas
pop
dec
cs
mov
stc
fdivl
cmp
clc
ret
xchg
ljmp
repnz
imul
push
dec
or
inc
loope
xchg
loope
mov
loop
xchg
cli
pop
fdivrs
fsubrl
jecxz
jo
add
and
pushf
push
add
sti
ret
aam
mov
xor
inc
ja
aas
mov
mov
jb
repz
mov
fsubrp
fistl
icebp
daa
andl
push
les
mov
push
jle
xchg
xor
into
pop
xchg
push
rcrb
xchg
in
bound
push
jne
sub
bound
inc
clc
lret
jns
popf
xchg
lods
rcll
cld
popa
inc
or
pop
add
add
lock
stos
stos
gs
shr
xor
cmp
and
testb
subl
icebp
scas
dec
pop
mov
jg
lds
outsb
lds
aaa
jl
fcmovu
adc
hlt
adc
scas
aam
lcall
mov
mov
in
and
xchg
sbb
orb
jge
sbb
inc
jge
cmpsb
jg
cmp
jbe
push
je
rcrb
fnstcw
pop
mov
mov
fmulp
loope
testb
in
shlb
dec
rclb
adc
pushf
push
call
push
popa
sbb
fwait
sub
push
test
fimull
lock
cmp
mov
jecxz
cmp
add
push
bound
mov
jle
sbb
lahf
jp
push
jo
je
pop
repz
push
push
push
das
bound
push
mov
out
jb
or
add
inc
jmp
jl
bnd
iret
es
mov
lret
sub
iret
sub
addb
daa
jge
sub
enter
sub
jge
vandps
or
mov
psrlq
in
mov
loopne
ss
mov
cmp
sub
ret
pop
addl
jno
dec
in
push
mov
xor
gs
adc
mov
orb
or
inc
sbb
or
xchg
cwtl
push
inc
mov
mov
popf
mov
mov
add
scas
test
dec
mov
mov
jg
push
mov
push
enter
pop
stos
dec
add
mov
xor
aam
push
adc
dec
arpl
lcall
jmp
in
fisttps
sub
movb
leave
out
mov
movsl
jg
pop
les
nop
sarl
xor
out
xor
mov
jle
nop
in
popf
sbb
repz
sbb
pusha
enter
shlb
mov
dec
push
movsb
pop
sbb
sub
cli
ret
out
adc
addl
and
mov
enter
push
adc
movsl
icebp
sbb
mov
aaa
call
mov
ret
je
ret
mov
pop
xorl
pop
in
jns
cmp
xchg
adc
out
hlt
imul
sub
rorb
fistpl
mov
lret
in
jo
inc
mov
cld
sbb
imul
sbb
nop
mov
xchg
imul
dec
pop
push
push
xchg
pop
xor
clc
lret
pop
sbb
push
sti
negb
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
cwtl
push
mov
add
pop
mov
push
add
js
and
or
rol
fs
lds
filds
imul
pop
lcall
or
xchg
jecxz
das
cmpsl
fsubl
retw
mov
adc
aam
inc
in
aas
arpl
mov
mov
cwtl
mov
mov
inc
divb
js
add
pop
push
jae
jmp
test
inc
push
xor
sbb
pavgb
pop
mov
pop
dec
inc
inc
sbb
psubsb
into
xchg
cmp
je
lea
pop
add
push
rolb
addr16
pop
sub
popf
rolb
out
arpl
jne
push
xchg
adc
pop
sub
push
fimuls
lods
jp
ljmp
jmp
sahf
sbb
loop
rclb
repnz
divb
in
xchg
xor
sti
rorl
cltd
test
nop
lret
cmp
push
add
cmpsl
test
or
pop
pusha
mov
xchg
test
sbb
popf
out
cmp
inc
inc
xor
enter
or
mov
or
adc
testb
std
add
jo
mov
mov
out
sbb
adc
out
mov
enter
negl
xlat
call
test
std
rcrl
clc
mov
lea
int3
mov
std
cmp
fcmovne
stc
shl
pop
xor
mov
adc
scas
add
sub
mov
jne
sub
in
sub
dec
push
lahf
or
shlb
mov
je
test
and
inc
push
inc
pop
adc
push
clc
insb
mov
sub
mov
inc
into
fsubr
jnp
jmp
into
cmp
xchg
out
fs
sbb
adc
sbb
xlat
popl
inc
or
call
sub
sub
mov
in
bound
pop
dec
inc
and
rcll
test
lods
arpl
adc
push
inc
sub
mov
ss
lds
cmpsb
addr16
inc
xchg
fmuls
push
lea
ret
jmp
jno
lods
jg
imul
addb
and
inc
andl
add
pop
mov
sbb
sbb
jl
shrl
call
inc
add
mov
mov
or
add
insb
pop
pop
subb
mov
mov
int
mov
fwait
mov
adc
incl
add
stos
sahf
lea
mov
lcall
adc
imul
rclb
mov
mov
jp
movsb
xchg
xchg
push
gs
cmp
jno
fdivr
inc
sti
inc
jg
mov
jne
add
push
sub
dec
fldcw
sub
mov
rcrb
adc
and
bound
mov
mov
js
dec
fwait
adc
stc
push
and
add
test
inc
pop
nop
sbb
push
int
push
xlat
dec
jl
testl
ret
push
roll
push
loop
xor
int
sub
call
shl
push
xlat
scas
push
jecxz
mov
sub
mov
fisubrl
das
inc
or
mov
cltd
and
mov
and
mov
lods
pop
out
push
mov
ljmp
out
out
std
scas
pop
ss
out
or
inc
dec
xchg
cwtl
fcmovb
repz
xchg
cld
sahf
jne
orl
mov
xlat
push
sub
hlt
lcall
xchg
jp
into
in
inc
test
lods
fwait
addl
in
sbb
pop
mov
shll
cltd
push
insb
jnp
cmp
or
nop
push
inc
add
xor
pushf
sbb
repnz
je
clc
pop
subb
and
ret
es
mov
dec
lods
dec
inc
mov
adc
mov
gs
cltd
jle
add
mov
mov
sub
add
xchg
xchg
sbb
mov
jp
popa
push
je
add
insb
inc
int
dec
in
push
pop
add
popa
jp
inc
lahf
mov
lahf
cwtl
adc
xor
sahf
adc
jmp
mov
jb
adc
sub
shl
and
movsb
out
mov
pop
mov
orb
and
cmp
mov
je
movsl
mov
mov
shll
stos
mov
js
nop
cmc
mov
aad
mov
sub
sub
test
sub
or
push
in
mov
mov
mov
loope
mov
ds
mov
popfw
aad
mov
and
and
rolb
mov
pushf
clc
mov
mov
xor
xor
dec
testl
roll
test
mov
test
ss
int3
fcompl
repnz
pushf
ror
mov
or
out
aas
adc
repnz
mov
scas
sbb
fcmovnu
sti
and
pusha
inc
fcoms
roll
dec
test
clc
lahf
jg
sub
repz
xchg
sbb
and
dec
rcrb
cmpsl
mov
jecxz
lahf
pop
mov
adc
xchg
mov
outsl
lret
arpl
xchg
je
sbb
enter
popa
mov
push
xchg
xor
xchg
rorb
or
mov
clc
cmp
jae
lcall
cltd
xchg
xchg
outsb
std
daa
sbb
into
bound
sahf
mov
add
fisttpl
test
cmp
shl
push
mov
push
cwtl
xor
arpl
imul
push
lds
jno
loope
push
addb
mov
neg
pmulhw
pusha
pop
pop
adc
xor
mov
pop
lahf
das
mov
and
icebp
loope
adc
stos
lock
test
sbb
cmp
add
cmc
add
dec
adc
jne
pop
std
and
sbb
repz
test
dec
sub
mov
or
adc
lcall
mov
bound
dec
or
inc
xchg
xor
in
push
loope
movsb
outsl
jno
out
sbb
mov
lods
lret
frstor
and
je
pop
cmpsb
lods
test
jae
add
push
mov
adc
mov
push
jp
fnstcw
sbb
bound
arpl
push
aaa
jge
mov
inc
je
lret
aad
dec
insb
sbb
cltd
pop
pop
sub
xor
sbb
popa
in
sbb
pop
pop
aam
aad
mov
ss
adc
lea
or
pop
lock
leave
das
xchg
shl
push
add
repz
fildl
jp
sub
push
jo
push
mov
in
xchg
hlt
mov
mov
insl
les
daa
gs
imul
jmp
mov
pop
test
fidivrs
lret
jp
sub
pop
jg
enter
hlt
mov
adc
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
pop
lods
stos
lcall
test
popf
jg
cld
shl
insb
mov
ficoml
mov
popf
xchg
mov
mov
mov
cmp
and
mov
jp
arpl
lock
in
repz
or
or
push
jmp
adc
mov
sahf
or
mov
movl
shr
push
cmp
mov
mov
xchg
cmp
pop
jb
dec
insb
sbb
nop
das
mov
clc
mov
jmp
or
test
mov
jo
sbbb
cmp
mov
scas
shll
mov
push
hlt
jmp
ret
dec
jns
xlat
repnz
fadd
xchg
loope
jecxz
notl
xor
mov
lret
mov
mov
daa
jmp
push
outsb
dec
sti
xchg
lahf
xchg
shll
pop
push
cwtl
jg
orl
shrl
pushf
not
cli
bound
sbb
into
fprem1
inc
sub
outsl
sbb
std
out
inc
adc
mov
push
jmp
scas
aam
add
or
in
fstpl
add
sbb
shlb
fucomip
loop
loop
jmp
sbb
jecxz
or
pop
push
push
push
xchg
insb
and
fld
push
sbb
add
jg
movsl
pop
mov
sub
push
jle
sub
in
push
pop
loop
hlt
inc
dec
icebp
inc
jge
shll
inc
cltd
lret
shl
addr16
mov
sub
stc
pop
leave
inc
inc
inc
out
mov
add
frstor
add
adc
repnz
movsb
pop
or
mov
ss
xchg
cmp
mov
pop
push
mov
adc
outsl
fs
lea
or
push
jnp
je
cmpsl
pop
in
dec
or
push
push
pop
inc
movb
cmpsb
dec
inc
test
cli
and
pop
fstl
cs
sbb
fidivs
sahf
or
mov
inc
sbb
popf
push
xchg
cli
ljmp
pop
je
pop
std
sub
jnp
push
lock
mov
inc
sub
mov
and
xor
ljmp
dec
jle
fdivs
or
mov
sbb
push
notb
pop
and
aad
enter
lods
adc
jnp
pop
arpl
dec
cmp
xchg
sub
ret
push
xor
cwtl
jl
aas
mov
push
fwait
adc
cmp
imul
cmpsb
das
faddl
jmp
cmpl
lock
repz
dec
out
imul
movsb
sub
push
pop
das
jo
add
mov
stos
in
pop
add
sbbl
xchg
notl
push
out
popf
xchg
pop
std
subl
arpl
outsb
sub
fisubl
lods
push
mov
imul
fsubr
add
out
fidivl
mov
pcmpeqb
es
push
pop
inc
subl
sbb
jae
inc
mov
andl
mov
loopne
add
ss
fcomps
jmp
cmp
out
clc
fisttpl
insl
push
sub
stos
add
add
out
roll
mov
movsl
into
jae
or
sbb
xchg
mov
or
pusha
adc
outsl
sub
insb
fnstsw
movsl
enter
push
je
dec
imulb
scas
pop
cmpsl
aas
mov
adc
es
aam
jl
mov
scas
lahf
icebp
lret
mov
mov
in
mov
inc
pop
add
aas
pop
push
xchg
cmpsb
sbb
and
adc
pop
dec
sahf
fnstenv
jecxz
cwtl
xor
stc
push
cwtl
xchg
out
mov
fisubs
and
js
push
frstor
xor
sbb
insl
inc
aad
inc
shl
mov
cmp
or
ficoml
mov
mov
xchg
les
out
or
sbb
xchg
pop
out
les
test
xor
mov
cld
sbb
fxtract
mov
shl
cmc
sub
inc
loopne
sbb
and
or
or
fmul
pop
push
jp
sbb
push
sti
xchg
shll
or
and
xorl
jae
push
jnp
leave
fs
inc
enter
push
pop
cli
sub
inc
xor
jns
test
cmp
xor
sbb
xor
adc
inc
mov
int3
xor
xor
dec
pop
mov
xchg
and
in
push
push
mov
mov
int
jmp
fsubrl
mov
ret
sahf
mov
popa
mov
pop
cmp
mov
xor
in
pop
shrb
movsb
call
repnz
or
mov
cmp
push
addr16
lcall
xchg
std
mov
jge
inc
lds
dec
jae
and
or
adc
gs
mov
bound
adc
xchg
sub
inc
jecxz
jbe
cmp
icebp
mov
leave
in
popf
movsl
frstor
mov
sbb
pop
ja
lods
inc
jmp
out
or
jle
sub
add
cmp
out
jno
adc
xchg
lods
push
pop
dec
jmp
cvtps2pd
mov
push
dec
repnz
sbb
incl
pop
ljmp
arpl
fisubs
in
mov
loopne
xchg
mov
inc
lods
sub
xchg
mov
mov
mov
enter
pushf
das
jmp
inc
sub
call
int3
js
add
stos
fidivrl
xor
push
mov
insl
popa
bound
out
xchg
pop
ja
sub
lds
cmpsb
faddl
call
sub
mov
sbb
mov
in
xor
mov
adc
int3
xorl
push
inc
dec
sbb
and
into
jns
das
add
sbb
xchg
mov
movsb
pop
jmp
sub
lock
mov
out
aam
pop
and
in
loope
fsts
cmp
push
dec
sahf
mov
jne
or
orb
sbb
clc
push
pop
and
out
scas
adc
xor
cmpsl
dec
adc
inc
xlat
or
mov
push
insl
in
mov
cmc
jecxz
xor
ja
enter
icebp
mov
mov
aaa
xchg
lods
jno
arpl
pop
movsb
ljmp
jmp
sbb
adc
xchg
ss
push
push
shlb
add
cwtl
test
clc
hlt
sbb
testb
adc
dec
cmp
add
sub
int
mov
fcompl
adc
xchg
mov
mov
pushf
dec
sbb
repz
cmp
jp
inc
xor
pop
adcl
clc
loopne
mov
mov
testl
aad
pop
pop
insl
inc
scas
std
icebp
push
mov
fwait
mov
dec
fldt
dec
mov
cmp
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
lods
push
lods
xchg
loope
adc
addl
or
and
add
mov
pop
mov
pushf
inc
fadds
cmp
mov
mov
add
getsec
nop
jmp
cmp
adc
hlt
mov
mov
sub
mov
xchg
sahf
ljmp
dec
xorb
xchg
mov
std
dec
int
cmp
or
push
fcoml
mov
sbb
nop
push
sti
push
add
jbe
or
ret
sub
mov
jmp
inc
add
mov
shlb
aas
enter
pop
fnsave
clc
lea
loopne
arpl
cmp
lods
aaa
pop
inc
nop
lea
flds
adc
cli
jns
mov
cmp
push
pop
leave
push
sbb
push
rcrb
inc
adc
mov
push
add
mov
pop
cmp
push
mov
xchg
dec
nop
jbe
push
jg
xchg
mov
lods
test
movsl
dec
jns
sub
ja
sub
test
jb
push
repz
lret
pop
mov
pop
mov
mov
push
call
lahf
aas
fcoml
inc
add
nop
xor
mov
aad
mov
pop
push
xor
mov
ds
out
out
repnz
subl
xchg
test
mov
bound
test
daa
sbb
xor
pop
add
mov
rol
pop
es
test
cmp
mov
jmp
pop
sub
xor
mov
and
mov
and
inc
dec
push
lds
xor
inc
mov
mov
add
enter
popf
mov
or
cli
add
leave
insl
cmp
inc
popf
cmc
inc
jno
sub
xor
repnz
ja
or
repz
pusha
das
bound
aad
xchg
sbb
cmpsl
je
add
add
push
loopne
cwtl
enter
out
ret
test
lahf
cwtl
or
imul
xchg
jge
dec
shl
dec
xchg
mov
mov
or
mov
mov
mov
pop
icebp
dec
and
in
push
dec
and
das
xchg
aad
push
and
clc
and
rol
mov
test
sbb
lret
js
mov
inc
dec
pop
faddl
loopne
inc
sbb
incb
jne
lods
addr16
mov
js
sbb
stos
imul
jns
jge
testl
dec
insb
mov
push
outsl
ficomps
enter
in
sbb
sar
mov
xor
subl
xlat
ficoml
out
jne
call
fwait
cli
jo
hlt
shrl
test
inc
push
sub
jb
push
push
fcomp
cld
shll
xchg
cmp
xchg
sub
idiv
lahf
les
mov
movsl
pop
inc
push
xchg
ret
sbb
int3
pop
mov
add
pop
push
adc
fdivs
cld
inc
lods
jno
je
push
int3
mov
popf
pusha
sbb
cmp
bound
add
mov
lods
imul
les
mov
js
jg
js
mov
lds
mov
test
icebp
push
jb
cli
cmpsb
pop
push
pop
jae
dec
sbb
push
int3
dec
and
pop
xchg
pop
sbb
add
cmp
fisttpl
jns
stos
jge
mov
or
dec
pop
imul
fstl
dec
mov
ljmp
imul
scas
gs
call
and
movsb
lods
stos
std
inc
fstpt
adc
sub
xchg
push
test
xchg
mov
arpl
out
inc
ds
mov
jno
add
bound
and
test
movsb
in
push
in
xchg
cmc
ret
mov
sti
ja
fwait
cmc
popl
push
xor
push
fcom
nop
mov
lock
jg
ret
repz
shr
in
bound
fwait
push
into
jecxz
push
lcall
push
hlt
aam
lds
arpl
movsb
loop
fsin
andl
aam
inc
or
mov
fdivr
test
imul
cmp
xchg
inc
adc
xor
add
adc
xor
or
mov
sbb
shll
shlb
jb
adc
lret
int3
test
mov
loopne
and
jae
shll
add
scas
cmp
or
jnp
dec
sahf
sbb
sahf
fistl
xchg
test
imul
fs
xchg
jo
xor
lods
xchg
dec
adc
loop
pusha
pop
add
adcb
jmp
incl
add
mov
stos
ja
push
stc
lods
arpl
lahf
sub
mov
fbld
push
je
dec
into
add
ficoms
outsb
jl
in
pop
and
jp
ret
or
inc
inc
pop
jg
rcl
cmpsl
lret
rcrb
mov
mov
fadds
shrl
cmpsl
movsb
repnz
sub
imulb
adc
mov
xor
pusha
pop
xor
arpl
je
mov
es
int3
xor
fldt
imul
popf
cwtl
xchg
dec
push
popa
pop
insb
sbb
les
lds
cmp
jae
aam
out
xchg
es
stc
cmp
sahf
mov
insb
jmp
or
testl
out
push
pop
xchg
mov
jmp
imull
adc
scas
ret
ss
sub
pop
out
inc
int3
mov
adc
cmp
cmc
mov
loope
imul
or
and
sub
leave
jl
incl
cmp
sub
and
icebp
ss
cwtl
mov
mov
jmp
mov
sbb
in
mov
jecxz
scas
jge
loopne
out
scas
pop
enter
sub
aas
ja
xchg
cmp
mov
xorb
shl
frstor
adc
testb
inc
adc
lock
clc
cmpsb
xchg
int
mov
xlat
in
mov
push
xchg
iret
xchg
out
test
mov
aas
and
test
stos
fsts
in
sub
add
xor
mov
jmp
ss
mov
jno
and
loop
cmovb
stc
in
jae
push
loope
lods
bound
jmp
dec
mov
test
or
mov
negl
jge
mov
cwtl
sub
and
or
mov
scas
xlat
push
sbb
or
mov
ljmp
inc
mov
adc
add
shl
mov
xlat
jmp
mov
lock
stos
leave
xor
cli
lods
adc
mov
dec
dec
mov
xor
push
and
sub
clc
pop
jno
xchg
test
jnp
test
xchg
and
adc
sbb
iret
sbb
jb
fimuls
pop
fsts
xor
or
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
inc
push
mov
inc
xlat
cmp
sub
nop
mov
fldenv
dec
loopne
inc
outsb
adc
addr16
sahf
pushf
stos
pop
jle
inc
mov
push
addl
in
push
mov
xchg
scas
repnz
fisubl
cmpsb
xlat
movsb
sub
fwait
mov
popa
sub
imul
xchg
jo
push
adc
mov
cmp
test
adc
adc
jl
jne
jae
andb
or
inc
add
or
xor
or
adc
jle
sbb
shll
pop
or
mov
cmp
test
enter
jno
xchg
int3
test
aad
rclb
fldl
xchg
inc
lahf
sbb
and
cli
pop
gs
adcl
test
clc
js
mov
imul
mov
xchg
sbb
gs
push
mov
pop
cs
sbb
mov
leave
mov
js
in
xchg
mov
sub
cmp
inc
xchg
out
mov
or
inc
jns
test
das
xor
rorl
mov
sbb
push
sbb
jl
call
out
inc
in
je
cmp
mov
std
dec
cwtl
jl
jns
movsl
mov
repz
in
jmp
pop
cmovae
les
jae
adc
arpl
dec
popa
scas
cmp
pop
add
lret
jo
mov
adc
push
inc
stos
adc
mov
cld
ljmp
xor
jecxz
mov
or
pop
fsubr
sahf
negb
orl
mov
into
mov
mov
outsl
sub
inc
test
fidivrl
sbb
xchg
fists
dec
and
mov
dec
sub
push
jge
in
adc
xor
lahf
test
mov
add
and
iret
insl
jle
fnstcw
repnz
shrb
xchg
add
and
sahf
dec
fs
shl
push
xlat
cld
addr16
xor
rcll
ds
rcl
stos
pop
mov
fldt
xor
imulb
jp
cltd
mov
sti
adc
sub
cli
cmp
cmp
xchg
rorb
out
dec
into
sti
sub
mov
fcmovb
mov
fnsave
fistpl
rolb
pop
pop
xchg
das
inc
sub
mov
dec
add
lods
mov
pop
xchg
mov
int3
pop
mov
add
push
fs
enter
and
sbb
push
mov
jle
cld
push
push
jmp
inc
cmpsl
daa
fisubrl
iret
xor
test
push
xchg
or
push
sub
movsl
int3
rol
es
or
dec
lods
int
iret
sub
mov
mov
sbb
jg
xor
adc
lock
sbbl
mov
add
mov
sbb
arpl
xchg
cmp
sub
fwait
js
or
outsb
xchg
xor
push
adc
push
xchg
into
xlat
adc
jns
push
add
adc
push
push
mov
mov
cmp
pop
pop
push
mov
cmp
insb
and
inc
mov
cmp
lock
fwait
jbe
or
add
in
adc
xchg
imul
cmp
fcmovnbe
test
imul
je
repnz
adc
repnz
ret
mov
aaa
or
add
repnz
cmp
inc
lods
jg
loop
sub
push
mov
mov
sub
or
pusha
popf
inc
sbb
dec
inc
dec
mov
arpl
or
sub
fs
stos
das
inc
aaa
out
push
arpl
pop
dec
outsl
mov
rcrl
rcrl
ret
fs
pop
insl
outsb
pop
outsl
inc
int3
imul
ss
icebp
lahf
xchg
mov
mov
lds
sbb
adc
shl
mov
push
adc
xor
fmuls
in
lea
jl
push
fisubs
mov
lds
jns
xchg
mov
mov
xchg
imulb
das
and
sbb
ret
and
sub
pop
loop
daa
adc
das
mov
movsl
loope
dec
mov
cmp
pop
or
lretw
sar
fiaddl
dec
ficomps
ror
or
xor
ljmp
inc
push
pop
pop
sbb
repz
in
fcmovb
lret
xor
push
push
sti
stos
stos
lds
inc
ret
dec
fwait
dec
add
mov
xor
dec
sub
push
sti
nop
lea
add
arpl
rclb
xchg
dec
shr
jae
xor
dec
aad
jecxz
mov
mov
jne
mov
jo
test
push
loopne
pop
outsl
lcall
adcl
xor
adc
inc
xchg
pop
mov
push
jmp
aas
add
int3
inc
imull
sahf
or
cmp
pushl
lods
out
pop
mov
je
pop
pushf
in
and
or
cmp
adc
inc
push
push
loopne
inc
xor
pop
aaa
test
or
jb
pop
mov
in
sbb
adc
cmp
xchg
jle
mov
xchg
lcall
sbb
cmp
fwait
mov
mov
cmp
and
int3
inc
sbb
lret
andl
test
push
cmpsl
mov
dec
divb
movsb
nop
mov
jno
lds
mull
pop
mov
pop
fiadds
inc
xrelease
pop
jp
xchg
or
fisubl
sahf
sbb
out
push
dec
add
clc
mov
out
jnp
cmp
loope
cmp
pop
ds
and
adc
xchg
imul
pop
les
dec
and
mov
mov
mov
mov
mov
xor
shlb
int3
mov
incb
int
mov
test
ret
enter
js
and
rcrl
mov
xchg
outsl
pop
fstps
clc
add
sbb
imul
jne
roll
and
lret
add
sub
mov
and
iret
je
movsb
jns
mov
test
stos
mov
rcrl
cmpsb
dec
test
xchg
mov
stos
fiadds
jae
and
andl
mov
daa
int3
push
dec
inc
in
or
xchg
lcall
dec
sub
test
pop
dec
fsqrt
jne
dec
fnstsw
mov
sub
mov
xor
jmp
xchg
decl
nop
lea
lahf
sbb
stos
jne
movsb
test
dec
sbb
loop
xor
sbb
pop
leave
xchg
and
mov
inc
fimuls
loopne
shlb
and
jae
inc
mov
addr16
adc
in
outsl
cmp
push
pop
xchg
stos
hlt
mov
mov
mov
jb
cmp
xchg
jle
mov
mov
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
adcl
adc
jno
jo
xchg
mov
push
std
aam
mov
mov
and
mov
jb
jecxz
mov
adc
nop
push
cmc
stos
xor
sub
push
ss
jle
mov
mov
sub
shlb
int3
nop
add
xor
aas
sub
add
stos
jg
mov
pop
icebp
push
add
xchg
push
mov
pop
push
test
add
and
mov
xchg
jb
mov
jno
mov
testb
mov
popf
sub
push
mov
imul
insl
xor
xor
imul
cltd
call
push
stos
mov
xor
lods
jl
jne
mov
mov
repz
insl
imul
add
les
daa
aam
pop
cmpsb
jns
dec
fs
pop
mov
jno
inc
push
enter
cmp
sub
pop
stos
xchg
pusha
pusha
or
ret
add
enter
mov
imul
fadds
push
int3
lds
stc
sbb
dec
mov
in
loope
dec
jp
pop
and
std
jns
sahf
aaa
mov
mov
jne
pop
mov
fsts
or
add
sbb
shrb
test
inc
sbb
ret
cmp
inc
mov
adc
adc
and
repnz
insb
shrl
cmp
sbb
mov
jne
cmp
inc
das
jb
out
bound
in
adc
sbbl
mov
ljmp
shll
mov
in
mov
and
push
cmp
xchg
xor
shrb
mov
xlat
cmp
sub
das
jns
in
addr16
jno
sbb
insb
mov
ret
mov
in
mov
inc
test
jb
jge
sub
scas
inc
push
jno
xchg
cmp
int3
paddsw
cmp
ret
imul
int
inc
push
and
pop
rcr
or
fdivr
sbb
loopne
sub
jne
xlat
loop
pusha
shrl
addr16
popf
and
sti
mov
rcr
cmc
mov
lods
out
imulb
insl
sbb
jns
insb
aad
xor
push
fisubl
push
lret
dec
cwtl
sti
int3
and
call
adc
mov
mov
mov
bndldx
sub
int
mov
gs
in
mov
pop
in
aas
std
mov
push
add
arpl
jge
pop
push
mov
arpl
or
dec
ds
sub
xor
std
push
sub
leave
insb
and
shlb
mov
xchg
int
inc
aas
repnz
cmc
aaa
bound
cmp
sti
aaa
push
mov
xchg
and
cmpsb
repnz
cs
adc
mov
js
icebp
enter
lahf
dec
clc
or
add
push
inc
adc
cli
adc
lea
mov
mov
test
sbb
das
addb
mov
sub
imul
pop
scas
dec
insb
dec
dec
sub
add
rol
dec
or
mov
add
push
femms
fs
jmp
cmp
test
pop
xchg
pop
xchg
adc
les
jecxz
roll
adc
ljmp
rcrl
adc
ficoml
cwtl
sbb
bound
mov
jae
pop
rcll
xor
pop
or
mov
xor
pop
outsl
inc
fistps
cmp
mov
out
stos
sub
hlt
or
test
pop
mov
cmp
cmp
adc
hlt
inc
jl
cmpsb
dec
mov
cmp
and
cli
pop
mov
mov
in
cli
mov
pop
push
repnz
jae
adc
pop
jno
cld
lret
daa
sahf
push
inc
mov
adc
push
cmpsl
rclb
jb
push
arpl
or
add
out
xchg
out
dec
dec
ret
mov
mov
pusha
sub
mov
inc
leave
mov
mov
in
push
icebp
xchg
cmpsl
xlat
push
mov
push
insb
sub
xchg
push
mov
mov
push
imul
push
mov
pop
jno
test
adcb
dec
shll
jbe
or
mov
out
les
popf
add
jecxz
or
or
push
loop
inc
jb
add
jns
cmpsl
sbb
ljmp
jb
sub
jne
jns
je
sahf
mov
es
jno
iret
jecxz
cltd
mov
nop
dec
add
sbb
inc
pop
cmp
push
stos
inc
mov
test
lea
xchg
mov
push
ja
out
fsts
les
shr
pop
dec
and
jg
sarb
out
incl
sub
cmp
add
popf
xchg
fcompl
imul
fnstenv
pop
or
jge
jns
scas
ds
fnstenv
dec
xchg
in
lahf
mov
sub
gs
lret
add
cmp
int3
aad
xchg
leave
les
mov
sub
insb
add
ja
out
sub
and
or
jns
adc
jle
sub
in
cmc
shll
scas
add
push
ret
movsl
idivl
adc
mov
imul
ljmp
fcos
jmp
sbb
pop
mov
inc
xlat
pop
mov
hlt
or
arpl
push
and
test
sahf
ds
fistl
pop
gs
sbb
or
mov
popa
js
sbb
sbb
or
sub
lock
jg
je
ret
mov
inc
out
xlat
daa
fdivs
xchg
inc
hlt
ret
pop
test
fwait
insb
shlb
xchg
repz
jbe
mov
popf
push
inc
lret
mov
xchg
push
lea
js
sub
xor
pop
hlt
stos
out
xor
loope
sub
shll
cmp
mov
or
and
push
pop
in
dec
pop
repz
mov
ja
fwait
arpl
repz
mov
or
jnp
cmp
xchg
out
pop
pop
dec
insb
movsb
mov
sub
mov
inc
pusha
lds
and
lods
lahf
push
iret
mov
lods
lea
mov
pop
or
push
in
cmc
lret
fstpl
cmp
popf
inc
xchg
sbb
daa
cltd
dec
push
bound
push
rol
sbb
mov
pop
pushf
inc
insb
movsl
iret
cmp
call
inc
jnp
pop
push
out
or
xor
xchg
data16
fdivs
dec
pop
lahf
push
adc
daa
popa
int
xchg
fildl
test
xor
jp
bound
push
or
ss
push
dec
adcl
insl
cmp
mov
ljmp
nop
and
mov
or
or
jne
push
shrl
cmp
jmp
push
inc
push
or
xor
aad
filds
loope
or
or
jno
mov
add
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xor
push
pop
cli
adc
push
adc
packuswb
pop
mov
sti
scas
xchg
dec
gs
or
mov
adc
sti
mull
testb
out
cmpl
int3
pop
mov
and
cmp
pop
adc
push
mov
xor
fildl
loope
mov
push
cmp
adc
mov
adc
jmp
xchg
ss
repz
sbb
xchg
or
adc
lods
stc
and
or
incb
and
push
rcrb
mov
fldl2t
out
push
sbb
orl
lds
jne
cmp
xlat
push
fcomip
xor
outsb
xchg
or
adc
cmc
push
scas
sti
mov
dec
jmp
mov
loop
sbb
lcall
xchg
mov
nop
out
adc
dec
mov
jl
nop
test
daa
jo
in
mov
cld
xchg
push
js
scas
xor
sub
jnp
add
add
in
aaa
nop
cmpsl
popf
jge
gs
aam
fisubl
xorb
gs
mov
xchg
mov
inc
cmc
xor
xchg
loope
nop
dec
stos
mov
shrb
xor
xor
jmp
inc
xor
outsb
push
fwait
mulb
mov
xchg
dec
lret
test
dec
int
pop
out
adc
jmp
sub
popf
dec
xor
loopne
aas
cmp
fstps
add
gs
pop
in
nop
cmc
push
pop
mov
lcall
leave
mov
push
out
sub
and
jae
jb
xchg
flds
sbb
aad
xor
ficompl
ret
inc
or
cmp
aad
jmp
jg
mov
mov
enter
decl
call
cmp
add
xchg
add
add
adc
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
