push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
adc
jo
in
jo
rcl
aad
ror
rol
pop
push
add
pop
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
sub
mov
lods
sbb
pop
repz
repnz
repz
ret
outsb
mov
aad
mov
cmc
shll
push
rsm
add
icebp
inc
fstps
lret
mov
xchg
ret
into
jne
or
xor
jecxz
stos
dec
xchg
loope
jns
dec
pop
and
daa
shll
imul
pop
std
sub
push
inc
and
gs
xchg
pusha
adcb
xchg
fcompl
je
jno
iret
xor
in
cmc
jnp
scas
sbb
mov
push
sub
in
or
xor
add
inc
pop
mov
xchg
xchg
xchg
test
mov
imul
mov
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
or
jg
scas
pop
sub
outsb
mov
push
hlt
int
pop
add
int
imul
shl
mov
xchg
and
fmuls
push
in
jecxz
cltd
rcrb
shlb
dec
out
je
mov
test
adc
sbb
mov
je
jne
add
call
mov
mov
or
pop
inc
and
rcl
in
sbb
data16
and
sub
xor
lods
das
jae
adc
fstps
mov
push
lahf
cmp
scas
pusha
dec
mov
mov
sti
movsl
push
popf
in
inc
xchg
jmp
jno
xor
in
rcll
cmp
ss
mov
imul
mov
out
leave
pop
sub
cmp
cs
pop
int
or
or
inc
sub
xor
je
mov
fwait
mov
out
cmp
xchg
jb
clc
jns
inc
sbb
dec
movsb
cmp
jecxz
roll
cmp
jge
push
push
or
or
sbb
xor
addr16
and
add
fldl
push
lret
ret
loop
jp
ss
mov
mov
ret
sub
outsb
fs
jmp
movsb
xor
dec
cwtl
movsl
xchg
or
cmpsb
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
fcomps
dec
jle
jo
jg
jo
xchg
imul
fsub
adc
push
jmp
orl
cmp
cs
push
mov
bound
adc
movsb
push
in
dec
fildll
ss
dec
test
shl
push
and
sub
andb
loope
enter
inc
es
pop
repnz
dec
pushf
or
and
add
mov
pop
cli
xor
sub
sub
sbb
aam
call
push
sti
addr16
scas
sub
loopne
xor
lcall
xchg
ds
inc
cmp
mov
pushf
push
dec
fwait
and
aaa
int3
nop
or
push
int3
scas
cmp
mov
inc
mov
mov
adc
into
sbb
scas
loope
xlat
ret
lods
shll
add
mov
int3
test
ss
popf
fwait
aaa
xor
sub
mov
pop
pop
sbb
subl
bound
adc
mov
imul
push
and
rcll
inc
cwtl
popf
or
bound
xchg
add
dec
repz
notl
xor
push
mov
scas
xor
xchg
cmpb
ss
in
mov
popa
mov
mov
lods
jle
sti
push
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
fadds
fistpll
jl
jo
jg
jo
add
push
pop
mov
push
ret
scas
cli
insl
jmp
pop
std
shrl
sub
sub
push
outsb
lret
enter
sarb
sbb
ds
and
outsl
mov
lods
popa
xchg
dec
addr16
jge
and
cmp
insl
cmpsl
mov
mov
lods
repnz
mov
outsb
leave
pop
adc
push
int
test
cmp
test
push
mov
sahf
daa
flds
popa
das
fisttpl
cmpsl
pop
dec
and
mov
push
cmp
aam
push
jo
fistpll
adc
add
idiv
push
and
dec
mov
jb
mov
sbb
mov
xchg
leave
fbld
mov
les
imull
shlb
jns
or
mov
push
lea
insl
mov
push
fdivrl
iret
shlb
rorb
popf
dec
subb
mov
jne
mov
xchg
jo
adc
setle
jl
fdivrs
stos
xchg
ljmp
adc
adc
fisubrs
pop
andb
stos
mov
shlb
pop
cmpsl
sbbb
and
pusha
cld
mov
push
adc
cwtl
sbb
lods
subl
dec
pop
inc
fidivl
add
test
pop
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
mov
jnp
jo
jge
jo
push
dec
andb
jne
test
roll
inc
gs
pop
jl
xchg
mov
mov
and
or
outsb
loope
fistpl
and
xor
adcb
mov
cmp
out
mov
andl
pop
ret
mov
or
cmpsb
jb
imull
cmp
lds
cmp
mov
xor
jecxz
dec
xchg
aad
lock
or
mov
scas
mov
push
mov
jo
pop
jnp
ljmp
int3
mov
out
and
dec
imulb
stos
je
test
das
cwtl
cld
and
cmp
dec
push
mov
pop
test
jge
andl
mov
test
fimull
push
out
out
mov
popf
sarl
insb
popf
outsb
insl
arpl
xchg
sbb
dec
mov
rcr
cmp
inc
mov
push
loopne
dec
les
insb
out
push
and
xor
outsl
rcll
fistpll
push
sub
fldpi
lds
jge
pop
stos
pop
mov
jle
jl
icebp
cmp
lods
add
adc
push
test
push
push
hlt
cmc
repz
mov
rorl
adc
or
ss
dec
mov
test
clc
sub
repz
mov
int
lret
fistl
loopne
mov
pusha
lahf
mov
mov
and
pop
div
sub
inc
xor
sub
sti
shl
add
popf
test
shrl
push
out
push
jl
xchg
mov
jge
pop
into
aam
movsb
xchg
mov
xchg
int3
in
xor
stos
and
push
fdivl
cmp
pop
rorw
arpl
push
movsl
jle
lcall
sub
iret
cwtl
and
mov
shrl
dec
lcall
pop
mov
and
stc
fsubr
push
outsl
gs
lock
test
jno
cmp
ja
andl
mov
sub
mov
mov
mov
sub
pushf
subl
xchg
dec
ret
push
stc
lahf
ss
adc
jbe
sarl
pop
stos
and
out
mov
lcall
sub
in
mov
pop
mov
inc
nop
xor
adc
insb
filds
scas
and
cmp
ffreep
lahf
adc
push
adc
mov
or
xchg
add
sub
loop
adc
inc
sbb
xchg
in
das
and
xor
inc
shr
fwait
inc
dec
jle
xor
das
sbb
or
add
loopnew
data16
repz
sbbl
dec
ljmp
add
fdivs
push
sbb
imul
xor
adc
mov
mov
int3
add
push
int
loopne
out
mov
rol
xor
push
in
inc
and
popf
cli
xor
fucomi
stc
jle
or
pop
sbb
lret
lock
xchg
add
adc
popa
sahf
jle,pn
jbe
add
insl
cltd
scas
in
shrb
xor
pushf
arpl
rorl
push
icebp
jae
sbb
cltd
nop
push
mov
adc
push
jl
xchg
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
sahf
xchg
cmp
jo
jge
jo
ficoms
lods
push
and
pop
stc
not
mov
sarl
mov
cmp
aaa
and
ljmp
sub
jmp
pop
popf
pop
push
stos
popa
jl
imul
xchg
push
aam
outsl
aas
add
adc
sub
mov
push
into
or
jge
sub
pushf
test
movsb
jae
in
dec
out
stc
pop
int3
xchg
sbb
pop
xchg
insb
pop
xchg
test
test
testb
lock
leave
sub
dec
std
fsubrs
cltd
xor
gs
mov
movsb
xchg
cwtl
cwtl
imul
stos
xchg
cmp
lahf
in
in
cmp
and
inc
mov
int3
mov
pop
sbb
dec
xor
cltd
lea
movsb
sti
movsb
or
xchg
xor
dec
mov
iret
aam
mov
mov
mov
out
adc
mov
push
mov
clc
sbb
nop
addr16
jb
aas
pop
jnp,pt
mov
je
lahf
adc
lods
lret
sub
mov
jg
fstpl
in
outsl
hlt
add
push
bound
jecxz
mov
dec
mov
jne
and
xchg
clc
jo
test
insb
xlat
add
add
test
gs
frstpm(287
push
dec
and
xchg
jbe
les
pop
xchg
out
idiv
lahf
dec
push
jne
cld
xchg
in
lock
xor
add
shll
xchg
push
dec
push
enter
cld
xor
xchg
enter
insb
outsl
cltd
xor
pop
push
sub
inc
js
cltd
mov
icebp
rcrl
sarb
lds
inc
aad
fwait
lods
pusha
or
loopne
push
push
imull
sbb
lods
mulb
inc
negl
cmp
loope
push
cmp
push
mov
jge
daa
mov
imul
pop
push
sub
jo
and
ret
dec
jne
cmp
jo
mov
js
push
jl
stos
cltd
clc
adc
lock
je
enter
mov
cli
dec
arpl
inc
xlat
cmc
jecxz
mov
or
pusha
xchg
mov
cs
addr16
push
mov
push
andb
movsl
xchg
push
pop
fisubl
push
xor
xor
mov
sub
mov
and
testl
loop
push
into
mov
lods
imul
inc
arpl
or
js
mov
scas
dec
adc
push
sub
pop
in
push
shrb
nop
mov
add
gs
jns
adc
movsb
fisttpl
mov
ret
adc
test
pop
push
cmp
scas
push
adc
int3
mov
out
or
jg
dec
pop
adc
dec
test
xor
test
add
sbb
in
and
mov
jle
xchg
leave
bound
adc
sahf
sub
pop
or
push
cwtl
outsl
pop
add
dec
testb
rcll
jp
or
push
push
push
adc
mov
lret
pop
clc
sub
adc
jmp
lret
and
shll
sub
lret
adc
push
scas
sub
cmp
in
fisttpl
adc
mov
xchg
xlat
js
cld
bswap
mov
sub
faddl
mov
pop
lea
int
decl
jo
lds
xchg
imul
test
mov
mov
sub
sti
cmp
mov
test
inc
add
daa
inc
add
mov
add
in
lock
mov
push
scas
int3
cmpsl
lahf
inc
aaa
pushf
push
add
jo
jge
jo
dec
push
das
out
sti
push
rorb
out
leave
jge
mov
mov
int3
test
out
ja
sbb
adcl
mov
lcall
mov
or
jne
xchg
mov
fstp
ret
test
je
out
xor
cltd
mov
xchg
sub
push
xchg
addb
in
push
cld
rcl
mov
xor
cltd
push
sub
ja
pop
add
imul
sbb
decb
sub
xchg
jbe
dec
and
xchg
pop
popf
fwait
mov
mov
xchg
pop
nop
dec
pop
push
xor
push
dec
shlb
insl
inc
jp
xchg
scas
pushf
adc
xchg
cmp
sub
test
pop
in
xchg
loope
dec
sub
mov
lock
xchg
lret
aam
jp
loope
lahf
popa
aam
pop
push
sbbb
cmp
pop
jae
push
cmp
fldl
and
adc
mov
mov
cmp
jle
in
jo
jge
mov
ljmp
cmp
rcrl
mov
cmp
push
out
call
lods
add
js
cld
jmp
movsb
repz
imul
ss
neg
sahf
sub
in
mov
out
dec
pop
ret
addr16
and
push
popf
cwtl
lea
push
xor
in
fdivrs
lcall
pushf
xor
test
addr16
pushf
outsb
movb
add
xchg
out
inc
jae
jo
nop
in
mov
cmpsl
xor
cmpsl
push
in
aas
jae
xchg
insl
add
call
mov
and
pop
into
adc
jle
xchg
pushl
adc
movsb
mov
pop
std
cmp
fs
scas
pusha
cs
cwtl
stos
sti
cs
aaa
sbb
int3
and
inc
jl
in
test
xchg
jp
movsl
ljmp
pop
dec
dec
fs
sbb
imul
mov
test
popa
je
push
imull
add
jnp
xchg
popf
or
mov
mov
mov
mov
mov
les
dec
dec
and
dec
pop
icebp
dec
test
cld
pop
jne
ficoml
pusha
ss
icebp
xchg
xlat
loopne
sub
jne
and
gs
ret
inc
fcmovu
std
mov
push
push
stos
cmp
out
xor
cli
incb
sti
xchg
cli
push
xor
mov
mov
inc
push
nop
jnp
cli
push
add
sarl
rclb
jno
imul
push
pop
xchg
dec
mov
imul
mov
or
adc
shl
rcll
mov
and
add
cltd
pushfw
std
popa
sti
mov
insl
outsb
aas
inc
pop
xor
rcrb
pop
push
loop
jnp
adc
jmp
mov
pop
cmc
repnz
fistpl
xor
xchg
les
negl
icebp
imul
je
loop
decl
decb
jns
aad
fnstenv
push
pop
jb
ret
movsb
jb
adc
mov
lret
cmp
xchg
fimuls
lds
jno
shll
movsl
push
xor
add
cli
mov
aas
sub
std
add
xchg
data16
dec
enter
cli
ficoms
jmp
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
push
ss
push
add
xchg
jge
jo
dec
fdivrs
jns
bound
mov
cmpsl
fs
mov
jmp
sahf
lds
ja
mov
test
cmpsb
aad
insl
dec
aam
stc
pop
sarb
or
test
ret
xchg
sbb
lods
or
xchg
pop
insb
mov
or
inc
sub
stos
pop
pop
sbb
cmp
out
out
cmp
pop
mov
xor
push
jb
lcall
daa
inc
dec
in
bound
adc
pusha
dec
out
mov
je
xchg
push
mov
je
test
fldt
aaa
and
push
or
roll
dec
ss
mov
xor
pop
stos
lahf
pop
pop
mov
xchg
xchg
xchg
pop
insl
jo
add
std
loope
dec
adc
fwait
mov
or
out
lds
jno
fistps
rolb
out
fcompl
mov
or
mov
mov
sub
mov
in
jne
cmp
aam
sysexit
sbb
leave
and
xchg
insb
xchg
jp
std
cmp
fcmovb
arpl
xchg
jbe
inc
jmp
ret
lret
or
pop
repz
aaa
pushf
xor
imul
push
rcrl
dec
cmp
adc
int
push
movsl
fcomps
lret
iret
xor
or
mov
pop
sub
ret
xchg
inc
cld
lock
cltd
pop
jecxz
xchg
imul
xor
and
adc
jae
test
xor
shr
hlt
xorb
stc
cmpb
lea
sub
sbb
in
aas
add
sub
xchg
xlat
mov
iret
xor
cmpsb
mov
adc
mov
cs
cmp
xor
add
sbb
and
rcll
add
inc
and
out
dec
data16
or
mov
ja
out
ljmp
sbb
lret
sbb
out
fistpll
inc
insl
mov
pop
mov
push
lret
xor
pop
mov
clc
cwtl
cli
push
fbld
pop
test
xor
adc
mov
or
out
cld
lret
ficompl
jle
push
test
in
subb
pusha
icebp
mov
push
test
outsl
mov
dec
lock
and
pop
sbb
fwait
ss
mov
xor
pop
jp
imul
pushl
scas
cli
cs
lahf
fbstp
iret
bound
mov
testb
aas
pop
test
gs
push
push
pop
xchg
add
imul
fsubl
xchg
jmp
cmp
sbb
inc
movsb
out
mov
test
inc
adc
jecxz
xchg
ret
pop
test
loope
loope
adc
daa
pop
jne
push
xor
dec
and
lock
or
dec
shlb
jae
jl
fisubrl
ljmp
push
rolb
ss
shll
movsb
mov
xchg
pop
jno
mov
jns
shll
clc
dec
imul
add
jecxz
stos
xor
push
jmp
outsb
adc
pop
xor
pop
and
cmp
jg
test
inc
xchg
stos
mov
lds
fwait
and
int
into
sbb
add
pop
push
add
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
xchg
cmp
xchg
jge
jo
xorb
loop
fists
push
cmc
cmp
push
add
rcrb
and
call
or
mov
pop
repz
fdiv
cwtl
enter
cmp
js
scas
mov
imul
add
dec
and
jo
and
xchg
rol
jmp
and
lods
clc
mov
hlt
pushf
cmp
es
push
loope
inc
call
mov
imul
push
cwtl
mov
mov
lods
or
shrl
xchg
into
xchg
push
dec
scas
xchg
jae
inc
imul
xchg
push
inc
xchg
jl
lods
mov
push
jge
mov
sti
sahf
aam
xor
in
ja
pop
xor
inc
mov
mov
and
jecxz
sti
jle
insl
dec
fstpt
rcrb
adcb
xchg
cmp
popa
clc
in
orl
aam
dec
lret
and
ret
push
out
aam
inc
pop
ja
popa
mov
mov
xchg
xchg
cmp
lcall
jns
es
push
int
xchg
or
test
sahf
cmpsb
js
jb
xor
xor
into
into
jmp
dec
mov
movsl
add
jne
mov
stos
stc
adcl
sbb
dec
popa
imul
push
pop
adcb
fbstp
ror
jb
stc
daa
add
stos
push
mov
hlt
out
sahf
xchg
xchg
subl
pushf
shr
jg
stos
daa
xor
jo
mov
ss
mov
lods
stos
xor
jo
cwtl
xchg
clc
insb
push
jmp
inc
into
test
push
sbb
negb
aam
pop
cmp
sbb
adc
mov
xchg
lret
fisubrl
mov
sub
xchg
ss
cmp
cmc
xor
loopne
movsl
inc
sahf
mov
inc
xchg
insl
push
push
cmpl
mov
sbb
ss
inc
aas
out
cmpsb
ret
mov
xor
mov
fcoms
call
mov
mov
cmp
icebp
and
loope
iret
sbb
mov
fistpl
and
es
mov
dec
mov
dec
mov
arpl
mov
cmpsl
cltd
add
stc
ret
aas
aad
and
or
push
jecxz
neg
xchg
xchg
scas
cmp
and
hlt
pop
xor
lahf
pop
fwait
icebp
hlt
cmp
dec
dec
xchg
mov
pop
insb
daa
cwtl
push
enter
xor
mov
nop
fistpll
push
outsl
cmpsl
jp
mov
cmp
xchg
in
decb
dec
push
jb
loope
dec
inc
or
sarb
inc
lods
adc
dec
mov
dec
bound
cli
add
ja
imul
test
fcomi
or
pop
mov
dec
stos
sub
jp
jns
push
adc
ficomps
pop
ljmp
faddp
lock
int
test
sbb
push
inc
mov
int
jmp
mov
iret
test
push
xchg
jno
xchg
int3
loope
and
lds
rcl
dec
sbb
loop
sub
lret
cld
stc
in
inc
sub
jbe
les
sub
pop
mov
data16
push
frstor
mul
cltd
fs
cld
jmp
cs
loopne
in
jnp
jmp
pop
insb
push
loope
or
xchg
jge
jo
into
mov
mov
popf
sbb
xchg
xchg
cmpsl
xchg
aad
subb
push
cmp
out
xchg
je
mov
repnz
dec
bound
and
in
jbe
icebp
cmp
mov
je
in
insl
and
mov
rorl
in
xchg
push
adc
dec
sub
jne,pt
sbbl
mov
movsl
mov
xor
jl
aas
cmp
lods
clc
pop
leave
jg
decl
and
outsb
mov
pusha
xor
push
fwait
push
add
push
lods
aad
int3
rolb
pop
or
or
lret
xor
mov
iret
pop
push
pop
mov
into
or
dec
jae
int
sbb
jnp
insb
jl
sub
add
jp
icebp
inc
in
dec
dec
aad
dec
ret
cwtl
jae
lahf
lods
ficoml
adc
jge
jp
mov
add
cmp
mov
out
mov
outsb
cmp
mov
ret
sub
aaa
rorl
adc
fistpll
push
dec
decl
js
dec
dec
and
lods
or
loop
ss
jae
mov
sarb
xlat
sti
test
xchg
lods
cwtl
push
sbb
xor
aam
int3
pushf
add
jge
cli
xadd
pop
and
lds
cld
mov
dec
ja
mov
in
mov
sub
faddl
mov
push
push
sub
jne
mov
sub
stc
pop
xor
adc
jl
test
lret
push
xchg
addb
cmp
jns
pushw
inc
aaa
xor
fisttpl
pop
xlat
dec
fdivrl
inc
sub
test
loop
mov
jne
mov
adc
mov
inc
nop
ret
mov
inc
inc
push
push
aam
sub
jl
in
insl
mov
ret
ror
adc
rcrl
add
and
jns
loop
aas
leave
lods
xchg
out
and
filds
movsb
test
iret
daa
inc
jmp
dec
add
inc
ret
mov
pop
out
push
test
insb
dec
orl
les
mov
dec
push
ja
sub
mov
cmpsl
adc
inc
mov
rol
adc
clc
jg
js
mov
sub
repz
cmp
std
shrl
mov
mov
lret
cmpsb
mov
dec
pusha
xor
sahf
jg
pop
ret
mov
xor
push
jae
fcomps
pop
mov
ds
int
repz
rcrl
xor
shrb
or
pop
cmp
xor
pop
aas
adc
or
dec
and
scas
test
lret
mov
or
mov
pushf
pusha
or
jg
test
mov
call
rcll
xchg
popl
int3
inc
sahf
mov
push
pop
sbb
call
mov
test
jno
and
imul
sbb
aaa
jb
add
mov
mov
test
scas
mov
test
lahf
dec
dec
sbb
or
jp
mov
inc
gs
or
adc
dec
or
inc
into
iret
or
adc
or
sbb
fsub
jmp
popf
xor
jmp
data16
in
int3
jne
popa
jno
imul
push
ds
jo
mov
mov
ret
jge
daa
cmp
or
push
enter
scas
xchg
xor
fidivrl
push
sahf
shlb
sbb
frstor
ds
cwtl
cli
ja
push
adc
iret
pop
or
push
out
ss
fmul
aas
mov
xlat
test
push
and
lds
cltd
mov
xor
aas
popf
push
mov
lea
or
ret
dec
int
mov
cld
addr16
int
es
cmpsl
push
push
cmpsl
dec
inc
add
mov
rcll
mov
loopne
aad
adc
fiaddl
cld
add
cmp
jle
pop
sbb
mov
mov
rcll
pop
shll
pop
jb
insb
mov
mov
cltd
mov
push
test
pop
push
sti
pop
xor
leave
int
or
push
xchg
fsubrs
out
dec
mov
test
test
test
das
dec
arpl
or
push
jbe
inc
cli
das
enter
mov
enter
mov
ljmp
jp
cmp
inc
std
inc
int3
fsubrl
mov
jbe
mov
dec
and
mov
fdivrl
inc
mov
and
xchg
lret
loop
inc
in
leave
clc
mov
mov
jmp
fmul
aas
push
push
pop
add
hlt
rorl
ss
and
ljmp
imul
add
fistps
aas
pop
ret
inc
sbb
loop
out
fwait
mov
stos
cmpsl
aad
dec
int3
repz
pop
mov
lret
cld
in
and
testb
inc
sahf
jmp
aas
std
jmp
sbb
aaa
mov
push
lret
enter
push
jge
mov
sbb
addr16
je
pop
push
cs
push
rol
cmpsl
add
jmp
and
in
mov
cmp
into
notb
push
jae
popf
and
sub
xchg
scas
in
loop
aad
mov
mov
cld
nop
pop
popa
rorl
lods
pop
stos
and
call
sbb
loopne
int
aad
dec
test
adc
into
mov
loop
sub
ret
jno
jae
in
adc
jne
or
cmc
dec
lahf
adc
mov
cmp
scas
insb
imul
cmp
pop
mov
dec
fldt
add
mov
stos
int
iret
roll
push
outsb
leave
sbb
sti
sub
xor
pop
and
ljmp
repz
icebp
out
mov
negb
jge
cmpsl
pushw
sub
addl
jno
push
xchg
aad
adc
xor
mov
jecxz
sbb
inc
test
mov
xchg
push
ds
ja
adc
pop
hlt
out
aas
arpl
pop
in
jbe
stc
dec
cltd
stos
or
mov
into
jb
push
pop
sub
ja
sbb
popf
push
jmp
mov
push
xchg
hlt
inc
mov
cmp
call
cli
mov
fwait
and
jae
out
dec
and
mov
loop
cmp
add
in
mov
mov
dec
xchg
xor
and
xor
lret
cltd
sbb
leave
mov
sub
jo
mov
mov
decb
cli
mov
jmp
jle
mov
xchg
icebp
repz
fldl
jo
jge
jo
jo
and
xor
cmp
and
arpl
mov
test
movsl
rcr
flds
cmpl
fidivrl
push
cld
inc
insl
les
push
jo
orl
repz
jno
pusha
and
sarb
out
sbb
les
mov
dec
jno
xchg
mov
cmpsb
inc
pop
shlb
or
ljmp
sub
xchg
push
jb
add
xchg
pop
xor
jge
push
cmp
and
mov
sub
push
jle
dec
mov
inc
adc
cs
pop
fstpt
mov
out
push
sbb
dec
mov
out
repz
arpl
sub
xchg
fsubs
sbb
adc
xchg
pop
jb
lcall
insb
inc
ss
dec
jnp
movsl
in
jo
lods
jecxz
add
xor
dec
push
std
leave
pushf
jmp
pop
add
cli
insb
mov
xchg
in
sub
rolb
cmpsl
into
cmp
mov
in
mov
pop
cmpsl
push
nop
icebp
cmpsb
frstor
mov
adc
jns
fsubr
adc
dec
cwtl
outsl
inc
and
outsb
add
rcl
cmpsl
pop
jns
aam
cmp
test
adc
sbb
xor
gs
gs
inc
push
je
add
jb
dec
or
push
call
adc
and
lods
xor
pop
cmc
dec
jl
dec
push
or
adc
push
sub
push
repz
or
cwtl
pop
xchg
mov
in
stos
sahf
movsb
and
jb
sub
test
inc
jmp
adc
cli
or
add
pop
mov
fsubrs
mov
sub
and
loope
and
or
notb
xlat
sbb
sahf
notb
or
addb
sahf
in
in
clc
sti
shlb
std
pop
outsb
add
fwait
adc
inc
jecxz
xchg
push
daa
mov
popa
fildll
aad
mov
adc
adc
jecxz
mov
adc
pop
xor
lcall
cmp
inc
pop
push
das
and
shll
sti
sub
shlb
in
mov
push
xor
jb
sahf
int
or
mov
scas
pop
dec
cmp
cmpsl
adc
pop
pop
stc
pusha
psllq
xlat
out
xchg
mov
xor
add
outsl
cmp
sti
frstor
mov
cmpsl
mov
adc
nop
mov
subl
sub
bound
push
xchg
pop
out
ds
mov
jg
jne
dec
push
mov
mov
sahf
loope
data16
or
mov
nop
cmp
stos
xchg
icebp
pop
dec
orl
shlb
test
cmp
aas
jo
aas
xor
cltd
pop
adc
outsb
cld
push
nop
xchg
mov
sub
sub
loope
or
mov
in
loope
and
in
push
enter
lahf
lea
pushf
je
mov
call
mov
lods
dec
mov
js
cwtl
lods
mov
cs
mov
mov
fbstp
lahf
outsb
cmp
test
jl
idivb
and
push
pop
and
out
sub
shrb
xor
dec
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
mov
jo
sbb
jo
addb
jle
push
out
add
mov
insl
in
cmpsb
icebp
adc
push
and
cli
xor
negb
fsubrp
push
imul
lods
les
aam
inc
shl
dec
pop
out
jns
mov
mov
mov
popl
loopne
xchg
and
mov
xchg
icebp
add
add
dec
mov
aas
cld
jl
pop
mov
cmpsb
sarl
clc
mov
push
mov
les
mov
mov
loopne
push
scas
lea
adc
ret
and
pop
cli
mov
xchg
xchg
and
and
cld
sbb
and
insl
xchg
cltd
dec
mov
loopne
fsubl
xchg
sub
pusha
dec
push
mov
out
iret
xchg
imul
add
jae
sub
lahf
pusha
lods
aam
and
jmp
push
push
mov
scas
cli
sbb
inc
sarl
push
lret
sbb
sbbb
loope
mov
add
push
shr
lock
pop
fidivrl
fldcw
outsl
push
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
mov
sbb
jo
mov
out
xchg
rorl
sbbb
fstpt
mov
inc
loop
mov
movsb
mov
mov
push
and
fmul
xchg
test
divb
and
add
repz
or
pop
shrl
push
push
lods
bound
and
and
jne
inc
sbb
ljmp
mov
clc
test
sub
aas
fldl
mov
cmp
js
cld
repz
std
add
mov
pop
ds
aad
jp
mov
push
pop
mov
aas
movsb
scas
mov
mov
mov
xlat
jae
inc
sub
jno
dec
mov
or
mov
mov
or
ds
test
push
mov
xor
jae
pop
stos
xor
ja
sub
or
aad
int
xlat
jb
sbb
sbb
cs
add
mov
mov
push
test
add
movb
imul
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
pop
cld
pop
pop
mov
jg
jo
into
outsl
push
bound
add
cli
loopne
mov
lahf
data16
andb
mov
sub
insl
mov
mov
jg
jo
and
inc
and
push
inc
icebp
and
outsl
pop
cmp
jae
dec
pop
sbb
lods
inc
int
insb
pop
in
ss
xchg
adc
dec
mov
and
sbb
jb
cli
clc
sar
xchg
sbb
jo
jbe
js
add
inc
mov
cwtl
adc
or
and
ljmp
ret
aad
pop
xorb
push
lea
cmc
mov
lds
pop
int3
data16
or
push
jns
inc
cmc
mov
hlt
in
push
mov
xor
cmovle
imul
int
popf
mov
and
mov
loop
dec
sub
adc
mov
lea
test
or
test
imul
add
fwait
push
lea
scas
pop
fcompl
xor
xchg
rorb
test
xchg
outsb
test
cltd
jae
jno
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
rol
xchg
jo
jg
jo
mov
adc
add
mov
pusha
mov
inc
mov
pushf
out
inc
pop
mov
int
mov
mov
sub
mov
mov
mov
jbe
mov
movsb
cwtl
clc
add
in
cmp
loop
ds
xor
jno
mov
xor
sahf
push
cmp
leave
adc
mov
sub
loop
mov
aam
aad
add
nop
out
sbb
mov
xchg
loope
push
cmpsb
or
cs
inc
daa
rol
add
clc
loopne
iret
adc
push
cwtl
rcll
mov
lcall
adc
or
jo
rcrl
shlb
xor
sub
or
sbb
dec
stos
hlt
cmp
rolb
xor
sub
clc
lcall
inc
mov
icebp
and
mov
es
rcll
jg
popf
lret
xlat
or
icebp
jmp
adc
stc
mov
or
scas
push
xor
xor
rcrl
inc
clc
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
insl
leave
jo
dec
mov
addr16
mov
push
lahf
movsb
pop
cmp
repnz
cmp
movups
jbe
or
inc
lcall
add
je
rcrb
scas
movsb
insl
mov
xor
stos
mov
les
jge
dec
cmp
or
sub
dec
das
scas
mov
enter
push
in
jnp
sub
xlat
and
inc
notl
sbb
orl
outsl
test
adc
into
hlt
adc
jp
lds
fstpt
xchg
push
xchg
jge
dec
shld
push
sub
cli
fisubl
push
dec
mov
hlt
mov
out
xor
dec
mov
xchg
mov
pop
leave
imul
xchg
mov
pop
cli
add
jecxz
mov
sub
xchg
pop
fistpll
les
xor
inc
aaa
mov
fisubl
lea
lcall
jg
gs
add
mov
mov
xor
add
jmp
ffree
adcb
mov
pop
xor
jo
sbb
jo
aam
mov
jge
sub
ljmp
mov
cwtl
fadd
stc
ss
loop
nop
pop
icebp
sbb
imul
in
shr
fdivl
idiv
mov
add
addl
sub
xchg
mov
ds
jo
icebp
enter
pop
out
pop
fdivrp
jg
in
inc
xor
movq
mov
inc
mov
xchg
push
test
jmp
dec
mov
jmp
adc
xchg
add
addr16
jae
mov
cs
leave
lahf
dec
sbb
sbb
cmpsl
sti
dec
aam
push
imul
sbb
ret
sub
push
mov
push
mov
scas
or
mov
pop
mov
jl
test
orb
std
adc
lock
add
arpl
pop
cmp
xchg
push
mov
or
jbe
adc
dec
mov
cmp
hlt
jmp
loop
test
sbb
sti
rclb
xchg
lods
jl
or
jmp
dec
lock
pop
pop
jle
adc
pop
push
mov
or
add
cmp
je
mov
mov
jmp
scas
or
repz
test
ror
pushf
lahf
out
daa
jo
sbb
jo
stos
lcall
sub
je
or
inc
loopne
ljmp
clc
aam
addr16
add
pop
je
push
jg
pop
inc
rclb
pusha
xor
mov
testl
ljmp
adc
test
pop
fwait
stos
jno
mov
pop
in
addb
cmpsb
iret
mov
lds
adc
ds
adc
fldt
movsl
push
ret
or
les
mov
xor
es
pop
out
hlt
test
lods
hlt
popf
mov
sahf
pop
ret
in
outsl
push
mov
and
jp
mov
imul
stos
call
das
add
aaa
cmpsl
push
pop
adcl
movsb
mov
cli
xchg
cmp
mov
and
sets
push
bound
adc
int
mov
fcmovu
mov
push
fisubrl
mov
call
fucomi
mov
sub
leave
lods
or
sbb
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
add
mov
sbb
jo
mov
push
jg
jbe
mov
movsl
inc
mov
fidivs
mov
js
pusha
pop
pop
aad
sbb
test
fiaddl
in
and
xlat
adc
cmp
pop
add
xchg
rolb
mov
sub
xchg
mov
das
pushf
push
int3
fdivrl
sbb
push
pop
fstl
pop
stos
cwtl
outsl
jno
add
xchg
lret
push
movb
sti
dec
repnz
aam
push
lock
mov
mov
std
dec
or
cmp
movsb
mov
or
or
mov
inc
cmp
cmp
lahf
inc
in
es
outsl
mov
clc
outsb
mov
fisubrl
cmp
add
sub
out
inc
int
pop
popf
hlt
jmp
les
jno
xchg
cmpsl
stc
addr16
cmpsl
mov
and
mov
push
loopne
and
out
xchg
fsubrl
je
fsincos
push
inc
loope
aas
test
sahf
fdivrl
clc
adc
aas
xor
fs
ja
mov
add
into
insl
push
mov
rorl
adc
roll
cmp
jmp
mov
gs
nop
sbb
repz
jo
insl
xor
push
fisttpl
aas
xor
jmp
pop
jge
mov
popa
pop
ret
mov
pop
jnp
sub
cld
js
xor
inc
mov
xor
dec
pop
xlat
movsb
pop
mov
adc
pop
push
push
or
adc
hlt
ja
mov
dec
pop
lahf
out
adc
fstpt
sti
dec
insl
in
mov
jge
inc
inc
imul
and
mov
rcll
cmpsb
test
outsb
into
add
xor
xchg
repz
push
fdivrs
adc
out
fisubs
call
sub
inc
jl
push
ret
test
std
xor
adc
lods
mov
mov
cs
fnstsw
xor
dec
xchg
lods
mov
inc
or
cmp
or
popf
fwait
xor
pop
shrb
call
pusha
subl
push
mov
out
adc
mov
push
mov
jae,pn
push
shlb
mul
jae
jae
ja
push
mov
jno
sbb
jmp
in
dec
cmp
fwait
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
leave
xchg
fstl
jo
jg
jo
mov
xchg
paddsb
pusha
cli
inc
leave
pop
je
and
cmp
lret
mov
andl
mov
hlt
dec
bound
cmp
lret
cmp
pop
fists
fidivs
mov
shrl
pop
mov
lret
add
shlb
cwtl
dec
dec
mov
lock
add
movsb
sti
cli
xor
sbb
or
cmp
cltd
mov
add
mov
push
mov
adcl
lea
mov
push
adc
sahf
pop
es
mov
mov
sbb
aas
lret
or
daa
dec
stos
jbe
mov
push
and
add
mov
ljmp
pop
jp
mov
add
mov
sub
ret
test
push
and
cmp
cmp
int3
sbb
mov
inc
fiaddl
lret
lret
rep
adc
push
adcl
fisubrs
mov
jo
repz
cmp
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
lret
imul
insl
push
push
es
sahf
sbb
pop
pusha
repz
subb
jle
mov
test
inc
cmp
pcmpeqw
mov
popf
andb
dec
adc
inc
xchg
popf
dec
xor
cmp
cli
mov
mov
adcl
xchg
bswap
xchg
scas
dec
mov
mov
iret
push
pop
dec
in
and
hlt
xchg
nop
daa
lds
icebp
xchg
sbb
out
adc
pop
sub
cmp
push
popf
or
sbb
call
popf
out
or
sub
cwtl
in
jno
nop
mov
js
fisttpl
sub
cwtl
shlb
arpl
cmpsl
adc
das
inc
sbb
mov
pop
mov
add
test
es
jmp
inc
mov
pusha
pop
jns
int3
mov
loop
in
mov
jbe
xlat
test
dec
out
cli
inc
leave
lock
jae
add
neg
outsl
xor
shlb
inc
pop
inc
mov
inc
sahf
xchg
addl
call
jmp
jmp
cmp
xor
sarl
cld
xor
or
and
sbb
jo
ret
xor
xlat
pop
cmp
lret
push
cwtl
sub
mov
jl
stos
addl
pop
stos
loopne
loopne
push
or
in
jmp
in
js
nop
adc
cmpsb
iret
sub
pop
mov
sbb
clc
int
mov
adc
rclb
or
pop
dec
mov
stos
xchg
bswap
push
insl
leave
pop
xchg
mov
aad
popl
cmp
pop
mov
mov
stos
leave
xchg
iret
pop
sub
shrl
xchg
pop
jae
fdivr
js
or
mov
mov
cwtl
add
jge
cs
mov
ljmp
or
push
add
cltd
xor
imul
jae
dec
cmp
lods
testb
adc
or
lahf
xor
stos
xor
repz
pop
cmp
fimull
in
icebp
call
jg
nop
cmp
or
dec
jbe
sbb
xlat
xor
cmp
jl
aad
dec
test
insl
lahf
jb
out
stc
mov
jl
xchg
pop
mov
cmp
xlat
scas
sub
lock
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
sub
dec
or
xchg
sub
or
dec
mov
movsb
aas
pop
fistpll
mov
sbb
das
jo
jle
ja
sahf
insb
popa
mov
sub
xchg
shl
sti
inc
mov
mov
inc
fwait
xchg
add
imul
or
or
sbb
es
div
xor
pop
pushf
sahf
scas
add
and
add
pop
std
cmpsb
imul
push
mov
test
jns
xchg
mov
icebp
jno
push
arpl
in
fisttps
enter
add
xacquire
imul
mov
fidivl
pop
inc
fnstcw
cmpsl
push
movsb
inc
xor
mov
or
and
jle
mov
into
popa
adc
jnp
xacquire
add
adc
mov
or
adcl
sbb
mov
outsl
jle
lret
lahf
pop
sbb
pop
xchg
ja
inc
shlb
test
pop
dec
dec
inc
ficoml
sub
mov
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
lea
cmc
hlt
das
jo
fnstcw
jo
xchg
sub
jo
jl
inc
test
fwait
sbb
movsb
jno
or
adcb
fld
enter
mov
inc
inc
lea
clc
pop
xchg
movsl
loopne
adc
mov
cmp
push
pop
and
or
push
ljmp
xchg
es
mov
sbb
sub
xchg
movsb
ret
sbbl
mov
idivl
or
pop
cmp
jae
push
mov
rolb
lds
loopne
cltd
add
dec
pop
mov
mov
push
jne
xor
add
stos
push
adc
adc
inc
call
pop
sub
pop
mov
mov
insb
mov
popa
ret
in
push
xchg
jb
rorb
ds
adc
cmp
adc
movsb
in
xor
push
repz
aaa
inc
hlt
pop
lret
das
nop
scas
or
dec
jns,pn
movsl
inc
testl
rcrb
sbb
lds
aam
icebp
fcmovnb
push
jle
call
jb
lahf
jno
out
test
dec
rol
dec
int
or
xor
push
adcl
xor
insl
aas
int3
mov
mov
nop
aam
imul
adc
das
in
lahf
in
dec
std
imul
jb
inc
ret
ljmp
sub
imul
mov
mov
in
aam
leave
and
fimuls
mov
icebp
pop
aaa
mov
push
pop
and
stos
and
pop
mov
in
mov
or
push
mov
pop
xor
sub
adc
and
rclb
sti
xor
jl
cmpsl
push
jns
cwtl
enter
inc
xchg
arpl
push
mov
ljmp
ljmp
pop
push
stc
push
fstps
iret
jge
hlt
xchg
outsl
in
or
mov
and
cmpsl
int3
xchg
out
jbe
mov
jmp
daa
sbb
lcall
test
stos
sub
insb
or
adc
ror
mov
inc
pop
out
push
mov
mov
jns
pop
or
testl
jo
mov
ret
inc
test
and
mov
adc
mov
icebp
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
sbb
popf
pop
sub
jo
cli
mov
lret
xor
push
or
notl
pop
pop
repnz
inc
fdivrs
aas
imul
icebp
mov
test
mov
dec
ja
ret
mov
fildl
je
jmp
dec
pop
jne
dec
repz
cli
push
shlb
xor
cmpsl
imul
cltd
mov
test
add
add
and
inc
push
mov
xchg
push
cmp
push
xor
fmull
xor
out
hlt
cmpsb
xchg
mov
jae
fs
nop
push
mov
loopne
sbb
nop
addr16
sub
ja
add
cmp
push
shll
xor
push
push
sarl
insl
xchg
inc
pop
call
adc
lahf
xchg
jno
inc
cmp
mov
pop
mov
xor
lcall
dec
icebp
test
cmp
test
data16
xchg
stc
test
jne
shll
loope
incb
xchg
push
xor
mov
and
sti
js
sub
or
sub
add
lods
fadd
addr16
into
mov
sbb
sahf
sbb
adc
push
or
pop
mov
inc
stos
iret
loop
cmc
add
push
inc
rorl
sub
push
mulb
movsl
movsb
cmpsb
btr
ja
sub
mov
cli
or
call
dec
sbb
out
sbb
add
pop
push
cmc
jg
fwait
mov
push
add
mov
leave
lods
xor
dec
js
insb
shlb
xchg
ljmp
movsl
adc
xchg
mov
movsb
mov
mov
xor
out
movsl
hlt
pop
shrl
cld
cmp
jo
stos
or
pop
or
mov
jb
mov
xor
push
cmpsb
idivb
add
imul
pushf
fldenv
add
and
lods
sbb
sar
and
inc
xchg
jbe
nop
aam
adc
xchg
sbb
and
int3
imul
icebp
ljmp
mov
dec
loope
xor
pop
and
int
mov
lcall
ljmp
leave
rorl
pop
mov
mov
inc
mov
outsb
pop
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
andl
push
xorl
out
ss
cmp
test
and
cs
adc
bound
adc
push
test
insl
insb
out
xchg
mov
or
jl
or
cmp
in
loope
jp
sbbb
daa
pop
sbb
mov
or
mov
outsb
sti
inc
call
lea
mov
sbb
sub
and
test
mov
scas
jbe
ja
sahf
or
fwait
pop
fadd
mov
push
scas
mov
lcall
sbb
arpl
inc
std
mov
or
sbb
jmp
stos
adcl
cmp
push
inc
xor
sahf
sbb
add
xlat
push
movsl
jmp
sbb
xchg
insb
cmp
hlt
mov
stc
js
sbb
loopne
fildl
jmp
cmpl
push
fisubl
and
cwtl
lods
pop
icebp
and
jecxz
cltd
jnp
data16
iret
jp
ljmp
xor
repz
mov
jecxz
push
popa
sub
fidivrl
mov
sbb
sub
push
je
pop
and
outsl
js
ja
push
rcrb
xchg
or
insb
pushf
mov
lcall
jp
push
xchg
repz
dec
daa
or
scas
test
mov
xchg
aam
out
sub
mov
cmp
add
insb
xor
push
fadds
rorl
aas
loop
sbb
mov
sbb
rcrl
mov
and
inc
push
xor
fwait
iret
lahf
mov
push
xlat
inc
and
dec
scas
pop
stc
movsl
decl
jg
rcrl
enter
arpl
mov
mov
pop
movsl
jecxz
mov
xor
loop
jbe
imul
call
and
pop
jle
dec
sbb
icebp
and
xchg
into
sbb
nop
push
jp
pushf
sub
fisttps
dec
insb
ss
scas
std
shll
fucomp
mov
je
push
mov
push
outsb
jge
loop
jl
mov
das
ret
scas
jmp
cmp
sbb
xor
cmpsb
rorl
out
mov
lret
sbb
dec
shll
jl
jl
test
add
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
outsl
scas
sub
les
jo
cmpb
xchg
sarb
xchg
pop
xchg
int
cltd
inc
mov
aas
xchg
mov
arpl
int
jl
mov
push
mov
rclb
xor
push
inc
call
aam
xchg
lods
ja
jl
mov
xchg
jmp
jl
movsl
fldcw
jle
cmc
loopne
ret
dec
push
out
pop
mov
arpl
add
hlt
in
fptan
sarl
cmp
dec
pop
insl
jbe
jne
xlat
hlt
stc
hlt
movsb
popf
pop
loopne
in
lret
mov
sub
sahf
mov
cmpsl
pop
add
push
sub
push
sbb
fisubs
push
outsb
mov
pusha
or
add
xchg
decb
rcll
add
or
es
mov
clc
subl
imul
xchg
in
mov
mov
inc
aaa
cli
mov
dec
jae
or
insl
pop
loop
cmp
lods
sarb
sub
je
imul
and
or
jo
mov
in
outsl
push
xchg
rcll
call
rolb
mov
and
inc
call
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
iret
push
sub
jo
les
jo
sub
sbb
inc
dec
imul
sbbl
cmp
xlat
inc
jmp
and
mov
lock
addl
daa
roll
lret
pushf
mov
inc
push
scas
jnp
or
pop
sub
shl
add
imul
jp
add
jno
xor
inc
push
mov
adc
aaa
sbb
adc
xchg
fstpl
jl
jl,pt
jbe
or
pop
mov
in
mov
fsubr
out
jle
dec
or
jge
fistps
cmp
adc
into
xor
call
clc
or
gs
inc
jg
loop
inc
leave
mov
dec
pop
push
or
fidivl
rorb
mov
es
test
add
pushf
rcll
push
fwait
and
mov
adc
shlb
mov
dec
push
and
adc
loope
cld
and
fwait
inc
sahf
nop
ret
subb
mov
out
push
mov
fmuls
mov
repnz
jmp
dec
hlt
fsubrs
lea
xlat
ss
dec
mov
inc
or
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
arpl
xor
jo
sub
scas
loop
aam
sar
shll
mov
pop
push
dec
mov
xor
inc
pop
inc
and
lret
repz
jns
cwtl
inc
mov
stc
add
imul
sub
mov
mov
adc
and
imul
dec
add
push
lcall
pop
stos
lock
mov
cmp
pusha
pop
xor
dec
xor
cmp
fucomi
sub
cmp
dec
cmp
jno
sti
test
or
pop
adc
inc
sub
loope
hlt
call
push
dec
loop
rcl
addr16
lahf
dec
ja
add
add
jecxz
xlat
or
push
push
xor
lret
dec
mov
imul
dec
in
inc
mov
cmp
cpuid
clc
adc
jbe
or
jle
or
into
ret
in
and
adc
out
jae
stos
js
xor
sbb
jb
rcrl
das
xor
pusha
sub
aas
jnp
scas
sti
xor
lret
call
std
insl
push
cli
or
filds
hlt
push
jbe
out
rclb
and
add
ret
icebp
sub
sub
outsb
cmpsb
inc
pop
iret
inc
popf
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
sub
cmpsb
fisttpl
jge
jo
dec
loope
mov
dec
push
and
loopne
xchg
jbe
jle
loope
daa
fnsave
fcompl
call
cmp
adc
imul
fldcw
xchg
fists
xor
jo
ror
inc
mov
jecxz
sub
sub
test
pop
jo
adc
movsl
rorl
xor
xchg
lods
sbb
test
inc
je
sarl
push
or
xor
outsb
mov
subl
divb
fisubl
sahf
sti
repz
mov
lods
stc
adcl
cs
mov
jns
adc
cltd
jne
loope
lods
rol
adc
add
mov
inc
sbb
xchg
mov
sbb
lret
loop
fnstenv
jp
lret
pop
inc
mov
popf
adc
and
mov
mov
stc
repnz
inc
inc
add
ss
pop
push
call
aam
mov
and
mov
dec
push
xchg
sub
test
js
aaa
jnp
pop
mov
aad
lea
xchg
mov
cmc
xchg
aam
fstpt
cwtl
sbb
dec
sarl
jecxz
pop
pop
out
cmp
add
out
adc
push
xor
mov
push
aas
mov
js
add
daa
xchg
push
out
test
mov
inc
lods
pop
pop
fistpll
in
std
sbb
aaa
les
add
clc
fsubl
mov
bound
mov
iret
jns
pushf
addr16
push
cmpsl
push
jbe
mov
push
sbb
push
cmp
sahf
in
stos
dec
mov
fmull
hlt
gs
push
sbb
mov
testl
lret
jae
lret
sbb
popf
or
or
dec
nop
cld
sbb
jle
xchg
xchg
push
cltd
ljmp
loopne
pop
jne
mov
das
je
filds
leave
adc
xor
mov
rorl
test
push
loopne
movl
ljmpw
xchg
imul
stos
in
shll
andl
test
imul
cli
icebp
adc
or
and
pushf
cmp
dec
pusha
sub
mov
lods
in
and
cmp
mov
adc
pop
push
jle
pop
dec
out
pushl
ds
sbb
gs
aas
sub
popf
es
mov
mov
add
or
or
jne
scas
push
xor
ss
cmc
mov
inc
mov
rol
mov
adcb
mov
add
mov
out
push
mov
adc
aam
add
cmpl
xchg
xchg
leave
roll
loopne
xchg
fisttpll
pusha
je
std
jecxz
adc
push
sub
jo
in
pop
jo
rol
shlb
pop
add
into
je
inc
xor
push
fistps
dec
xlat
jmp
in
inc
shrl
mov
adc
cs
add
andl
add
jmp
xchg
test
xchg
jno
xchg
js
jb
aad
mov
jge
jo
ret
push
clc
call
cmp
mov
mov
jns
jecxz
mov
jmp
dec
iret
mov
inc
pop
xchg
add
jmp
fsubs
into
xor
in
push
xor
lods
xor
pop
outsl
dec
out
ffree
scas
sub
or
addr16
pop
pop
lods
push
aad
sbb
jg
or
stc
ja
in
pop
pop
dec
mov
fwait
out
mov
stc
cmp
push
loop
dec
jmp
loopne
push
sbbl
insb
call
mov
push
lock
les
dec
inc
push
push
xchg
aas
repz
mov
push
or
mov
jg
and
jmp
push
pop
xchg
testl
js
ffree
sub
jle
repnz
sub
inc
push
or
push
fcomps
inc
jb
shll
scas
xor
push
repz
push
gs
data16
mov
sub
and
adc
inc
dec
in
outsb
lods
xchg
mov
std
loope
outsl
cmp
dec
sbbb
xchg
mov
imul
mov
sub
cmp
xor
lcall
std
mov
cmp
in
xchg
pop
adc
and
repnz
or
int
xchg
ds
push
mov
repnz
xlat
aas
das
or
push
adc
repz
mov
mov
js
out
sbb
and
lods
dec
popa
jp
sub
imul
dec
xchg
mov
sbb
rcll
and
es
mov
div
inc
pop
out
xor
push
pop
lds
adcb
scas
or
cli
movsb
push
dec
shlb
aad
push
inc
inc
iret
xchg
movb
inc
pop
popa
inc
ljmp
xor
and
push
into
arpl
loope
out
outsb
jmp
outsb
jns
xchg
daa
push
out
repz
adc
push
std
pop
sahf
scas
in
jmp
aaa
leave
add
aam
and
sub
lcall
xchg
pushf
jnp
repnz
xchg
rorb
mov
sbb
inc
jns
xchg
sub
xor
outsl
or
push
xor
in
rcll
insb
xchg
add
pop
sub
xor
jno
pop
xchg
in
imul
push
adc
pop
cmp
int3
adcl
cmp
lea
xchg
jmp
adc
push
pop
mov
add
and
cmp
and
and
mov
ja
sbb
jne
xor
jb
add
out
cmc
movsb
scas
stos
call
outsl
inc
stos
push
dec
xchg
cwtl
fucomip
cmp
xchg
mov
xor
stos
divb
and
add
imul
out
and
roll
mov
add
ljmp
in
jmp
cmp
xchg
stc
push
fidivrl
lahf
inc
jmp
xor
loope
mov
cwtl
fs
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
ffreep
jecxz
sti
imul
jo
jge
jo
loope
mov
repnz
lea
data16
imull
xor
cmp
xchg
push
and
and
jnp
sbb
test
cmpsl
daa
mov
inc
das
xchg
les
pop
imul
das
jge
xor
push
cmpb
imul
repnz
hlt
test
les
cmc
das
and
inc
aad
lcall
cmpsb
sbb
iret
sub
push
xchg
into
std
add
and
ja
pusha
inc
xorb
xlat
push
leave
test
test
xchg
fwait
add
cmp
or
test
scas
idivb
push
xchg
cltd
adcl
lods
aas
mov
js
dec
lea
cmp
pop
cmpsb
add
add
pop
sub
cmpsl
push
test
movsb
inc
call
test
jno
lret
mov
push
mov
sbb
add
jne
push
mov
xchg
jb
mov
jge
les
daa
jae
inc
ror
lock
jns
mov
mov
insb
out
shlb
push
or
jmp
inc
jmp
int
pop
into
lock
and
movsb
icebp
dec
mov
cmpsl
lea
cli
jle
lock
pop
push
shl
jle
test
mov
sub
push
je
rcrb
pop
outsl
in
push
fcoms
addb
je
int3
ror
ret
xchg
add
std
mov
mov
insb
std
cli
cmc
cmp
push
mov
sub
dec
and
testb
fcmovne
call
dec
sub
sub
cmpsl
dec
sub
or
lds
mov
or
popf
loop
pop
inc
and
inc
sti
or
mov
decl
xchg
cmp
mov
movsb
or
mov
loop
pop
and
pop
rorb
into
rcll
inc
outsl
in
mov
mov
cmp
je
frstor
mov
mov
or
push
mov
and
jns
push
je
and
adc
mov
mov
jne
fdivl
pop
hlt
dec
mov
jns
fstpt
mov
jmp
sahf
jp
add
adcb
fdivs
subb
stos
adc
xor
in
jbe
dec
xchg
test
popl
cmp
jl
push
roll
dec
jmp
xchg
out
mov
outsb
fs
test
xor
fldcw
data16
inc
adc
jg
fimuls
cmp
push
in
dec
imul
daa
mov
addr16
mov
into
mov
and
orl
pop
shlb
sub
rclb
fxam
ret
out
sahf
cmp
mov
mov
and
mov
xor
ss
push
push
mov
sbb
insl
xchg
pop
add
repnz
roll
inc
mov
mov
cmc
jbe
jo
or
test
movl
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
cltd
dec
fimuls
sbb
jo
and
jo
cs
cmpsb
mov
mov
imul
sub
daa
test
push
cmpl
adc
jno
scas
and
movsb
fsub
jnp
repnz
pop
sbb
pop
mov
cmp
mul
daa
sbb
jne
inc
and
movsl
cmp
movsb
mov
js
mov
inc
mov
sti
das
push
xor
mov
sbb
lock
jge
xor
cmp
xchg
add
add
std
inc
mov
les
jbe
ret
lds
je
mov
cmp
pop
iret
mov
out
inc
ja
in
adc
mov
jne
aas
sahf
mov
aas
popf
xchg
in
or
cvtps2pi
mov
cmpsb
fdiv
push
cmpsb
mov
mov
cli
adc
adc
clc
or
cmpsl
cmpsl
and
inc
fwait
dec
lcall
jp
and
out
mov
pop
cmpsb
xor
xor
imulb
loop
aaa
fisubrl
cwtl
pop
lods
adc
jl
cld
pop
inc
into
inc
movsl
daa
inc
adc
xor
jno
sbb
icebp
sbb
add
rorl
fistpll
jno
sub
lret
cmp
nop
leave
inc
stos
imul
cltd
or
and
inc
aam
fstps
mov
adc
scas
incl
inc
std
sbb
pusha
add
xchg
mov
jbe
andl
jb
push
shlb
int3
int3
dec
jno
xor
sti
ja
dec
inc
in
shlb
stos
add
mov
insl
adc
decb
pop
push
cli
nop
iret
push
mov
add
ja
faddp
fbstp
loop
dec
daa
mov
ret
add
iret
insl
inc
push
add
out
call
les
xor
int
inc
icebp
in
pop
jno
inc
vphaddwq
loop
mov
cmpsl
cmpsl
dec
lcall
push
xor
mov
rcrb
les
cmpsl
adc
enter
in
sahf
sbb
inc
lahf
mov
inc
fnstcw
mov
out
mov
mov
out
sbb
ret
and
mov
test
in
insl
lret
adc
xor
mov
cmpl
pop
repz
imul
fs
lea
aam
cmp
jecxz
lcall
test
insb
lahf
dec
pop
cltd
fsubs
stos
pop
aad
add
xor
loope
sbb
ret
xor
in
cmpb
push
nop
ja
shr
push
or
jo
ja
fs
and
popf
push
mov
sbb
jnp
popl
or
dec
fst
mov
jecxz
loope
inc
sub
out
aaa
and
pop
popa
sbb
in
cmp
daa
sub
orb
mov
mov
in
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
push
jo
jge
jo
cltd
fcmovnbe
xor
iret
pop
adc
mov
arpl
or
int
xchg
popa
or
cmp
test
rcrl
arpl
and
popa
dec
subl
arpl
outsb
loop
lds
jle
js
loop
imul
data16
daa
push
outsb
pop
lock
push
and
lds
adc
push
sub
pushf
pushf
lret
dec
test
add
pushf
cmp
test
adc
ljmp
jge
jbe
dec
repnz
push
jae
sub
das
sbb
lods
inc
loop
add
and
push
mov
dec
lahf
push
sub
out
subl
mov
in
aam
pop
aaa
dec
test
xchg
xchg
test
leave
movsl
pop
dec
fmull
and
shl
mov
adc
fimull
xchg
test
fildll
outsb
frstor
or
inc
sub
arpl
pushw
int3
and
pop
jg
ficoml
ja
xor
in
insl
enter
negl
mov
repnz
pushf
fldenv
cmpsb
or
push
arpl
nop
add
bound
popa
stos
int3
pop
ficompl
out
daa
adc
jno
jg
jg
adc
movsbl
or
dec
adc
pop
sbb
xorl
xchg
cmp
cmpsl
or
das
jo
in
pop
pushf
adc
and
xlat
inc
sub
xchg
fnstsw
or
dec
cltd
lods
sbb
push
mov
rcll
out
mov
add
leave
xorl
xchg
or
adc
xchg
outsl
jb
std
movsb
rcrl
push
lcall
jae
push
push
mov
add
or
adc
enter
inc
sarl
adc
xchg
aas
shrb
imulb
mov
and
sub
repnz
iret
fistpll
orl
lods
cmc
call
jae
test
cmp
adc
nop
ficoml
and
push
xchg
inc
loop
pop
loope
push
xchg
adc
adc
mov
fsubs
mov
cltd
and
into
or
les
dec
clc
and
xchg
xor
aad
sub
cltd
push
inc
sbb
or
mov
jae
push
fwait
bound
mov
inc
or
xchg
jb
pop
xchg
dec
jge
ret
and
sahf
loopne
jno
fs
hlt
jns
jg
jbe
ret
xchg
aam
popf
dec
sbbl
out
pop
fists
cs
mov
push
sub
out
mov
hlt
or
add
sbb
adc
addr16
adc
adcl
mov
mov
and
push
jl
dec
int
js
loope
jp
jl
popf
mov
xchg
jns
in
daa
sub
sti
sbbb
outsb
cmp
mov
call
or
push
inc
mov
in
xchg
inc
in
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
pop
aam
ret
aad
mov
mov
jbe
rorl
mov
mov
dec
dec
dec
pop
and
inc
add
jnp
pop
inc
jno
out
sub
xchg
mov
inc
data16
dec
sbbb
pop
loop
stos
incb
inc
shll
lods
in
lods
mov
sahf
in
pop
mov
out
ljmp
jnp
test
mov
mov
rcrl
add
movsb
jg
outsl
pushf
in
pop
shll
pop
repnz
sbb
sbb
scas
xchg
pop
xchg
xchg
out
pop
add
into
cmp
fidivrs
fwait
or
rcr
mov
inc
movsl
imul
pop
fsubrl
fldenv
out
or
nop
push
test
rcrl
fnstcw
mul
insl
or
icebp
jp
pop
shl
sub
dec
mov
mov
inc
or
jg
jle
aam
mov
addr16
mov
jecxz
add
dec
test
fstp
jl,pt
in
repz
aas
xor
xchg
cmp
xlat
jmp
aad
pop
xchg
mov
ret
mov
sbb
lahf
add
in
jno
mov
xor
push
jno
int
and
mov
xor
cmpsl
or
xchg
out
hlt
jle
push
push
movsb
test
adc
clc
arpl
enter
cmp
ret
push
data16
jne
lock
sub
getsec
pop
add
adc
cwtl
mov
adc
cwtl
jle
sahf
fscale
mov
inc
jl
pop
push
cld
pop
mov
in
sub
lret
rolb
test
or
and
sbb
inc
lahf
int3
cmp
sub
jmp
aas
and
bound
adc
mov
rcl
cltd
test
mov
mov
xchg
xor
rcrl
pusha
ja
pop
rcrb
jecxz
add
in
sub
icebp
dec
adc
xchg
out
sahf
fisubs
fildll
das
pop
xchg
mov
and
mov
rclb
pop
testl
adc
sbb
aad
stc
push
cli
fst
or
rcrb
sub
iret
cmc
sbb
cmpsl
pushf
sbb
xor
outsb
pop
sbb
cmpsl
or
cwtl
xchg
adcb
fisttpll
rcrl
dec
mov
dec
jge
roll
sbb
int3
xchg
test
xchg
adc
lock
fsub
dec
sub
pop
cmp
fwait
cmpl
outsb
mov
sahf
inc
push
test
out
mov
xor
in
dec
hlt
mov
push
in
sbb
adc
inc
rorb
je
xorb
fsubrs
and
push
lea
xchg
push
cmp
sbb
or
xchg
jle
imul
scas
push
xor
je
in
fidivs
push
lods
lcall
jg
imul
sbb
mov
sub
dec
in
loop
push
cmpl
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
lods
shl
arpl
jge
jo
add
in
cmpsl
mov
addl
pusha
cwtl
fstpl
and
pop
push
mov
fwait
loopne
push
sti
inc
in
movsb
and
mov
cmp
push
jp
xor
ficoms
rorb
dec
sub
jg
xchg
outsb
repz
mov
lcall
jecxz
or
test
pop
xchg
add
nop
aad
sbb
cmpsl
dec
imul
pop
mov
cmp
sub
xchg
pop
and
test
loopne
mov
xlat
dec
into
scas
dec
sbb
fstpt
mov
sub
rcl
mov
outsb
out
mov
sub
mov
repnz
in
mov
sub
lods
repz
jbe
mov
mov
mov
jge
adc
push
add
inc
push
enter
ret
lea
shll
adc
mov
pop
cmp
push
push
sahf
inc
loope
mov
mov
dec
xlat
andl
in
push
xor
and
cmc
je
das
out
leave
std
adc
xchg
mov
out
sbb
jle
test
mov
inc
aam
dec
leave
push
dec
pop
pop
imul
sub
push
xor
cltd
das
iret
bound
ficomps
shr
clc
je
pop
pop
divps
mov
or
insb
push
ljmp
dec
cld
xchg
aam
rcrb
mov
repz
sbb
jnp
ljmp
test
mov
mov
in
adc
or
push
test
jns
mov
xor
pop
mov
adc
fwait
adc
adc
and
mov
cmp
out
pop
ret
les
lods
into
cmp
loop
lods
imul
fidivrl
lret
loopne
and
and
out
or
and
out
loop
cmp
test
mov
mov
jae
ss
xchg
test
xchg
ret
sbbb
cltd
sbb
sub
mov
lcall
nop
cltd
mov
jno
int3
push
adc
add
into
and
cld
mov
sbb
stos
adc
test
aam
test
sub
daa
pop
jbe
icebp
int
or
and
xchg
aad
test
outsb
pop
mov
jp
pop
mov
jnp
mov
dec
cmc
scas
sti
mov
rorl
sub
and
or
xor
pop
mov
push
movzwl
jle
adc
out
mov
inc
sub
push
int3
push
icebp
test
inc
in
add
cmpsl
pop
add
dec
mov
cmp
or
orb
jne
adc
and
imul
lods
aas
or
and
adc
and
fwait
push
and
nop
jb
aad
sbb
lret
hlt
push
in
and
dec
xrelease
and
sbb
and
shll
mov
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
mov
into
jo
imul
adc
xor
dec
jl
lea
cmp
adc
adc
push
iret
mov
dec
mov
cmp
inc
xor
bound
hlt
test
test
xor
dec
mov
cmp
adc
adc
ret
pop
popf
or
lock
mov
mov
mov
xchg
or
pop
push
pop
dec
sbb
aam
stc
and
adc
cmp
and
mov
jns
or
jne
mov
add
jl
push
js
sbb
mov
loopne
xchg
push
rolb
sub
sub
sbb
xor
cmp
lea
insb
std
xor
pop
popa
jb
sub
rorb
iret
push
sti
push
sbb
push
ret
pop
push
enter
add
adc
sti
rcl
jne
push
jmp
xchg
or
jae
fwait
sub
xchg
inc
lds
into
in
push
sub
xor
push
mov
pop
jecxz
cmc
jae
data16
fcomip
sub
imul
dec
mov
sbb
orps
and
lahf
sub
xchg
sub
dec
pop
and
stc
sti
aam
ja
lods
dec
add
xchg
sub
fidivrl
in
sti
add
push
inc
sarl
pop
fistps
push
pop
cmp
mov
in
mov
lods
pop
ffree
shl
mov
jmp
and
aaa
mov
pop
fldenv
jl
out
mov
lea
jbe
jo
ret
inc
shr
pop
out
mov
loopne
dec
pop
dec
mov
loopne
inc
sbb
test
lret
fildll
mov
lret
mov
xor
xor
lds
enter
pop
add
pop
cmpsb
in
iret
shrb
push
out
lret
sbb
adc
mov
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
xchg
fcoml
jo
jg
jo
loope
or
sub
or
push
or
lock
popf
sbb
cltd
mov
insb
les
popf
cmpb
testl
xor
adc
gs
push
mov
push
cmp
bound
push
sti
fwait
mov
push
sub
xchg
jne
jno
mov
in
xor
movsl
xlat
sub
subl
inc
and
pop
imul
cmpsl
xchg
cwtl
lret
sub
aas
pop
testl
jnp
push
add
jp
lahf
out
loopne
push
rol
popa
nop
or
arpl
mov
imul
hlt
fidivrs
mov
xchg
and
cmc
mov
sbb
je
cltd
push
mov
icebp
nop
dec
idivb
stos
sbb
mov
pop
clc
clc
mov
imul
inc
shlb
scas
add
cmp
int3
out
mov
and
rorl
sub
push
mov
loopne,pn
inc
and
daa
in
and
les
pushf
ficoms
sbbl
inc
loopne
sbb
repz
ljmp
add
inc
bound
dec
std
inc
xor
add
dec
inc
mov
inc
fst
mov
and
sub
leave
inc
repz
popa
pop
cwtl
jle
sub
outsl
int
jl
insl
xlat
xor
cs
stc
dec
int3
enter
call
cmp
and
outsb
jl
push
and
imul
jge
push
push
or
jge
and
out
push
cmp
sahf
and
cmpsl
push
xor
scas
repnz
inc
lahf
xchg
sbb
add
sbb
xchg
push
fisttpl
dec
mov
adc
inc
les
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
adc
jo
jg
jo
dec
cs
clc
jae
sub
call
mov
idivb
push
xor
adc
mov
mov
fstpl
inc
add
das
sub
scas
cld
jge
ficoml
nop
testb
cli
aaa
fdivs
mov
cmp
jecxz
xor
lds
sahf
sti
aas
test
out
adc
mov
mov
dec
test
fwait
cwtl
xchg
std
push
cs
das
xor
mov
mov
std
mov
dec
mov
aaa
repnz
or
push
jge
daa
subl
loope
aam
pop
les
dec
push
lret
in
int
push
adc
shlb
mov
cs
jne
int3
dec
jno
fwait
push
gs
sub
jmp
jo
into
inc
icebp
hlt
popl
dec
mov
add
stos
inc
stos
inc
fldenv
or
lea
cmp
adc
out
mov
cmc
sahf
int
jmp
adc
cmpsl
push
ficomps
mov
incl
mov
cmpsl
lret
clc
xor
cmp
or
andb
add
jecxz
shr
jge
sub
pop
cmc
inc
test
or
cmp
xor
mov
dec
adc
pminub
stos
cmp
jp
adc
dec
cwtl
push
push
into
mov
fsub
adc
sub
inc
fsubrp
orl
push
xchg
mov
push
adc
inc
mov
add
mov
xchg
xorl
and
into
clc
add
clc
jb
cmp
pop
insl
push
jg
add
mov
movsb
inc
loope
clc
flds
sub
stc
push
xchg
mov
xor
scas
jb
lods
addb
add
adc
int3
ss
rorb
test
add
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
push
aam
fadds
jo
imul
mov
push
aas
movsl
jne
xor
or
pop
jmp
rol
fcmovnb
iret
lahf
fsubp
aam
rcrl
out
and
stos
out
mov
repnz
cld
cwtl
neg
xlat
scas
aas
daa
push
or
aaa
int3
mov
lods
inc
xchg
push
lcall
dec
mov
dec
in
cmp
dec
lret
imul
data16
cwtl
ds
popa
push
mov
iret
je
pop
mov
mov
stos
xchg
pop
or
into
call
sub
repnz
push
mov
mov
mov
scas
pop
adc
xor
adc
lcall
and
in
les
lret
fnstsw
inc
aas
push
pop
jmp
add
icebp
cmp
xchg
mov
adc
adc
test
lods
mov
push
clc
enter
cmc
cmpb
adc
cmpsl
adc
push
mov
hlt
loope
sbb
sub
pop
and
lods
sti
jecxz
add
aas
mov
dec
dec
pop
pop
adc
jecxz
mov
push
sahf
ffreep
jae
aad
in
in
subb
push
cmp
xchg
enter
lea
cmc
xchg
jo
ror
or
fwait
inc
sbb
das
pusha
stos
mov
pushf
push
cmp
subl
repz
adc
scas
mov
mov
push
daa
lock
or
mov
dec
jns
xor
push
roll
fstpt
jl
imul
cld
aad
jg
lods
sub
jnp
hlt
or
insl
and
aam
add
push
sbb
fcmovu
or
xor
lods
call
jae
aad
lock
cld
out
inc
rcrb
shlb
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
sbb
jo
imul
mov
aad
aaa
jg
call
mov
cmp
aaa
and
dec
xor
mov
inc
mov
sub
or
pcmpgtw
rolb
jmp
mov
inc
insb
int
xchg
dec
sub
shll
out
adc
push
push
xchg
scas
loopne
adc
mov
xchg
jae
loop
sbb
sub
rol
pushf
test
out
negb
push
dec
mov
daa
add
sbb
inc
std
scas
push
movsl
cmp
dec
pop
stos
adc
jbe
outsb
in
fdivs
cmpsl
test
hlt
add
mov
ja
enter
or
pop
aaa
dec
mov
xor
lods
or
rcl
es
fisttpl
cmpsb
sub
enter
mov
into
mov
adc
call
outsb
sbb
sub
add
adc
adc
jg
push
repz
xor
pop
pusha
sarb
sbb
and
jns
stos
mov
hlt
mov
or
mov
pop
push
xchg
xchg
or
mov
lea
loop
mov
insb
ss
das
bound
xor
int
lds
ds
out
outsb
in
jg
mov
addl
sub
cs
mov
inc
push
xchg
frstor
lahf
pop
ret
mov
negl
mov
xor
mov
push
loop
lahf
stos
mov
sti
xor
dec
les
rcrb
adc
mov
or
and
sub
pop
pop
out
sub
sub
pusha
aas
xor
pop
clc
sub
adc
fcmovne
sub
mov
xchg
test
push
movsl
adc
adc
xchg
jbe
adcb
stos
jbe
xchg
sbb
xchg
and
subb
add
lds
add
push
cs
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
or
or
jo
jg
jo
add
pop
ds
ja
fsubp
in
mov
mov
push
jmp
je
test
jg
out
xchg
shr
iret
xor
out
xor
mov
xchg
vpsrlw
push
push
mov
hlt
setle
mov
sbb
int
sub
scas
mov
rorl
stc
mov
loopne
or
add
xchg
pop
into
jecxz
jmp
fdivrl
mov
fwait
enter
leave
lret
int3
sub
iret
shll
pushf
sbb
enter
pop
insb
loope
enter
fmull
mov
ficomps
or
push
pushl
in
aam
mov
bound
mov
add
push
insl
shll
inc
mov
mov
rolb
sti
xchg
icebp
pop
sub
xor
mov
lds
frstor
ds
sub
mov
pusha
cmp
lret
ds
push
cmp
xchg
enter
adc
fsubs
jmp
cmpsb
je
jne
test
test
adc
out
add
hlt
inc
lods
inc
cmp
or
pushf
and
and
call
sahf
lock
push
jno
out
cli
inc
popa
test
and
pop
aad
push
sub
int3
iret
pop
popf
test
call
outsb
cwtl
in
int3
push
fisttpll
dec
xchg
arpl
adc
movsb
jge
cli
cltd
in
push
int3
test
movsb
push
adc
jbe
push
iret
xchg
push
dec
sbb
sub
sub
mov
mov
enter
adc
mov
mov
pop
call
sti
arpl
lds
jb
mov
xor
cmc
mov
push
xchg
mov
xchg
sbb
sub
sbb
xor
movsb
sub
lods
or
push
lea
inc
inc
push
and
push
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
sahf
mov
jg
jo
add
movsl
mov
mov
dec
adc
inc
test
inc
xchg
dec
inc
mov
out
or
dec
fsubp
and
rcrl
gs
push
mov
inc
int3
jb
push
sahf
sub
shrl
ja
sbb
sub
bnd
cmp
jmp
je
sarl
rcr
nop
pop
inc
and
mov
ds
mov
sub
outsl
xchg
leave
scas
push
hlt
jns
jno
lods
pop
les
hlt
mov
pusha
mov
add
shll
scas
movsb
stos
jnp
cmp
outsb
pusha
push
jp
lret
mov
fimull
mov
test
xor
ret
ja
das
sbb
inc
frstor
pop
shll
adcl
or
push
mov
xor
add
jecxz
test
inc
mov
enter
pop
cmp
dec
fistl
loope
jo
jbe
jno
dec
and
sub
mov
xchg
clc
dec
jle
mov
hlt
inc
notb
and
cmp
dec
cmp
push
ds
pop
lahf
xor
inc
push
and
mov
jg
push
sti
sti
loop
flds
mov
cmp
and
sarl
mov
jno
push
fdivrp
shlb
pop
adc
iret
xlat
mov
push
pop
cmp
sbbb
shll
or
adc
mov
ret
out
xchg
adc
fmull
iret
inc
mov
jo
in
cmc
loop
cmp
cmpsl
ljmp
xor
std
or
lods
dec
insl
sahf
mov
adc
sbb
sbb
pop
sbb
mov
inc
scas
inc
dec
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
sbbl
lcall
jo
sbb
or
jns
inc
add
pop
ljmp
je
es
adc
dec
xor
xchg
push
mov
dec
xchg
mov
insb
vpackuswb
cld
test
cs
add
clc
mov
aaa
mov
call
fsubrl
stc
aas
xchg
xor
addr16
es
inc
clc
cltd
test
push
aam
add
lods
and
dec
jle
fs
adc
stos
cmpsb
add
popf
jno
fnstsw
push
sbb
sbb
cmc
push
std
xchg
pop
ret
xor
clc
sbb
pop
mov
jo
insb
xor
inc
scas
jno
cmp
pop
out
and
or
pusha
stc
fidivl
mov
xor
sbb
pop
hlt
loop
mov
adc
fwait
rcl
into
mov
jmp
fisubl
mov
mov
inc
or
and
lock
or
add
in
pop
cmp
aaa
cwtl
dec
mov
pop
stos
leave
stos
arpl
and
adc
addr16
xor
lcall
push
lock
mov
pusha
sub
mov
cltd
push
outsb
loopne
movsl
xchg
popf
mov
out
mov
repz
ret
sub
mov
xchg
cs
rol
or
pushf
or
pop
adc
pop
push
pushf
add
mov
push
subb
sbb
adc
test
mov
mov
dec
xchg
xor
add
je
outsb
insl
sub
je
xchg
sti
es
xor
mov
aaa
aas
test
cltd
lahf
push
lea
inc
pop
dec
lret
mov
inc
or
inc
jo
stos
mov
pop
jnp
pop
mov
sbb
xorb
popa
fdivl
ja
rorl
aam
lea
in
mov
push
dec
mov
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
xor
fidivs
imul
negl
cmp
jl
push
cmp
bound
push
sbb
addr16
inc
pushf
xchg
cltd
stc
in
pusha
dec
pop
jl
ja
inc
sub
push
pop
sub
ffree
cmp
jnp
mov
inc
mov
dec
lret
test
mov
iret
outsb
mov
jo
add
fnstsw
cmpl
sub
mov
repnz
push
xlat
enter
and
ljmp
jb
pop
xlat
jmp
push
cltd
pop
mulb
mov
decb
and
mov
adcl
jbe
leave
push
pop
push
dec
fsubs
adcl
insb
nop
mov
arpl
enter
jb
cmpsl
jge
cmp
pop
xor
fistps
fnstenv
jl
neg
inc
imul
push
push
sub
jg
jmp
adc
sub
push
loope
push
lods
pop
in
iret
xchg
data16
xor
icebp
mov
xchg
lds
fidivrs
cwtl
rcrl
jno
jbe
scas
insl
cmp
test
test
cmp
adc
frstor
xchg
lock
mov
lcall
dec
inc
fsub
xlat
pop
sbb
jae
movsl
sub
jmp
xchg
push
in
push
or
imulb
shlb
or
adc
clc
popa
mov
in
push
fwait
push
xchg
insb
dec
fistpll
sti
mov
shl
sbb
mov
movsb
int
rcrb
pop
or
cmpl
lret
popa
sub
ret
fsubrs
cmpsl
es
je
sbb
mov
insl
ret
out
mov
jecxz
cmp
pop
or
dec
lret
mov
js
test
and
in
cld
scas
mov
adc
mov
sbb
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
arpl
loope
mov
jo
imul
cmpsl
adc
lods
xor
mov
mov
xchg
das
and
xor
jo
or
sbb
xchg
add
pusha
outsb
add
bound
in
test
push
fcmovnb
cmp
push
lock
adc
lahf
das
mov
mov
xchg
cli
jae
push
hlt
ljmp
gs
mov
mov
arpl
push
mov
rcll
add
inc
fnsave
pop
lods
push
sub
test
xchg
movsb
arpl
test
lods
cltd
les
pop
ficompl
loop
sub
or
and
das
xchg
sbb
pop
pop
or
inc
js
xchg
dec
aam
mov
stos
enter
sbbb
test
loope
stos
sub
pop
xchg
aam
cmc
fisttpll
and
shll
mov
lods
in
pusha
jne
add
sbb
mov
mov
adc
mov
aad
jns
pop
lret
cmp
shl
std
pop
adc
repz
and
decl
sub
aas
jnp
mov
mov
jmp
rolb
loopne
and
pop
out
mov
ret
das
jmp
cmpsb
arpl
outsb
in
clc
clc
movsl
add
aam
sahf
pop
jb
inc
xlat
mov
add
jle
mov
negl
and
and
ss
push
mov
or
mov
mov
push
pusha
add
mov
aam
push
das
enter
sub
ret
popf
std
mov
push
mov
call
push
push
mov
jge
mov
int3
xchg
in
adc
mov
xor
lahf
addb
cmp
sbb
jecxz
int3
fldcw
rclb
jmp
sbb
inc
sbb
jmp
loopne
lods
add
jmp
sbbb
cltd
js
mov
mov
fidivl
imul
int3
fwait
rorl
add
in
adc
and
data16
mov
imul
xlat
jle
es
mov
iret
inc
xlat
xor
mov
into
or
lcall
fsubr
mov
jecxz
push
int3
xchg
xlat
xor
out
jb
push
popa
mov
xchg
imul
mov
imul
call
add
pop
test
addl
cmc
out
popf
jnp
mov
mov
jno
dec
imul
mov
inc
cmp
jnp
test
out
imul
xlat
int
pop
mov
outsl
clc
inc
mov
pusha
adc
add
daa
xlat
scas
ficompl
pusha
cmpsl
push
popf
pop
cmp
jmp
mov
add
repnz
add
into
shlb
sbb
je
inc
xchg
mov
jno
enter
popf
cmc
in
call
lods
jae
fbstp
rcl
xchg
cwtl
pmulhw
daa
loopne
out
fs
sbbb
push
sub
inc
fidivl
cmpsl
pop
rcl
push
mov
pop
mov
sbb
sti
ds
sbb
mov
push
fmull
add
stos
pminsw
cmpsl
jbe
jmp
popf
out
xchg
popf
fnstcw
fs
or
add
push
xor
sbb
popf
mov
js
inc
adc
and
sbb
test
js
fwait
xchg
popf
ret
cmp
xor
xor
push
aaa
lcall
xor
xchg
sbb
int
push
xchg
ret
fwait
jp
pop
fisubl
jmp
daa
mov
or
jne
jo
imul
jmp
clc
icebp
mov
icebp
ficompl
adc
jo
jg
jo
push
dec
into
mov
pop
inc
shlb
lahf
sub
call
xlat
fnstenv
pop
jbe
sbb
fcoms
ss
aad
push
push
inc
mov
sti
aas
daa
pushf
inc
sbb
dec
lahf
fmuls
insb
add
mov
or
jns
adc
and
mov
lret
or
fldl
cmp
xor
enter
test
pop
lods
nop
or
xor
imul
imul
pop
movsb
clc
les
dec
or
mov
cmp
sub
sub
add
adc
gs
push
dec
or
jo
mov
inc
leave
into
cmp
faddl
testb
test
cld
push
pusha
pop
mov
arpl
movsl
sub
pop
dec
mov
mov
inc
add
mov
mov
push
cmp
push
mov
sbb
mov
lods
pop
stos
jp
pop
aad
mov
loope
lea
scas
mov
jnp
ds
xlat
mov
testb
rorl
jmp
arpl
loop
in
xchg
insb
jg
jbe
insl
cmp
jo
push
stc
idiv
iret
add
rolb
add
cltd
and
add
popa
fisubs
int
jne
imull
or
in
sti
movsl
inc
cmp
test
add
rcll
inc
out
stos
rcl
das
pushf
popa
push
test
call
push
aaa
stc
jp
pop
in
dec
jl
fs
or
xor
sbb
and
cld
inc
sti
inc
or
add
pop
arpl
cmpsl
pop
cmp
repz
aad
out
mov
in
popa
mov
outsl
add
into
leave
adc
enter
loope
dec
inc
mov
xor
out
jae
mov
push
in
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
mull
adc
imul
mov
adc
add
push
in
and
or
out
mov
mov
push
xchg
sub
lea
mov
push
jns
mov
fsubs
ja
dec
mov
inc
mov
push
xorb
aas
scas
fisubs
cmp
sub
lret
pushf
add
setle
roll
mov
xchg
jecxz
cmp
ret
mov
pop
rorl
xchg
icebp
ss
mov
popf
and
pop
stc
pop
lds
bound
jno
into
int3
lods
int
jp
pushf
jo
aaa
mov
inc
aaa
sub
pop
mov
dec
sbb
adc
push
pop
and
mov
xor
dec
lret
jo
cmp
dec
jmp
xor
iret
adc
cmc
sbb
push
dec
mov
xor
jne
xchg
shlb
cmp
and
sti
insl
int
test
mov
hlt
ret
leave
ss
cld
mov
jge
and
mov
pusha
pop
dec
pop
daa
inc
push
inc
lcall
cld
ficompl
sahf
sahf
mov
ss
loop
dec
inc
dec
int
fwait
sbb
mov
in
mov
xchg
jno
xchg
cmp
scas
jo
aad
xchg
je
out
cmp
test
and
out
movsb
inc
xlat
xlat
add
push
or
dec
mov
push
jp
dec
shll
sbb
push
lret
mov
inc
adc
sbb
push
les
jg
sub
cltd
dec
or
mov
les
nop
push
ljmp
mov
ficompl
clc
mov
into
negl
loope
mov
xor
dec
mov
mov
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
clc
mov
loopne
jo
imul
or
push
jle
cld
in
xor
mov
push
sbb
xor
mov
out
mov
xchg
in
fwait
push
insl
inc
cmp
pusha
into
jnp
or
rclb
mov
pusha
enter
inc
sahf
scas
xchg
and
aas
mov
mov
add
jae
xor
xor
mov
add
sub
xchg
sub
jb
xchg
and
divl
sbb
mov
add
cmc
push
cmp
mov
pushf
pusha
xor
fdivrl
std
ljmp
and
in
xchg
jno
jb
sbb
in
popf
and
push
sahf
mov
pop
fdivrl
pop
mov
add
cmp
fldt
fwait
sbb
dec
ds
and
sbb
js
mov
loopne
dec
je
movb
fcmovnbe
in
clc
out
mov
pop
pop
jae
inc
out
popa
push
push
xchg
push
push
sbb
adc
pop
popa
adc
mov
pop
test
jne
cmp
loopne
push
movsl
dec
rcll
dec
js
int3
xchg
lock
push
push
mov
fs
fisttps
inc
xchg
sbb
inc
mov
dec
mov
lock
mov
mov
cmp
or
push
jmpw
inc
mov
mov
or
jb
addr16
sahf
in
xchg
add
arpl
popf
jb
xor
pop
cvttps2pi
push
testl
cwtl
jb
pop
or
pop
sbb
sub
mov
pop
adc
mov
shrl
push
push
rcrl
mov
aad
mov
inc
inc
ds
jnp
push
cmpsb
jp
and
clc
jbe
ret
cmp
xor
xchg
add
imul
mov
mov
mov
fdivl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
loop
jo
jg
jo
test
adc
mov
push
push
mov
pop
ljmp
xor
out
xchg
push
mov
and
jg
inc
ss
sub
or
notl
jecxz
dec
scas
and
mov
fwait
push
loop
loop
xor
cmp
push
mov
insb
cmc
sbb
punpckldq
in
hlt
icebp
call
ja
in
jnp
shl
pushf
sub
xorb
test
jmp
or
hlt
and
bound
dec
lds
cmp
xlat
nop
pop
jne
sub
push
push
jmp
lcall
dec
ss
jnp
push
in
std
stos
push
hlt
shr
sahf
jmp
mov
push
mov
xchg
rcrl
enter
data16
mov
xor
push
mov
push
or
xor
push
test
out
sbb
cmpsl
cmpsl
mov
cmpsb
cli
jnp
fcomi
rclb
movsb
xor
adc
cmp
jmp
jb
sti
sub
enter
mov
adc
pop
adc
sbb
rcl
outsl
es
repnz
pop
inc
inc
iret
mov
sub
adcb
jecxz
jmp
loop
and
inc
call
jle
lcall
or
lcall
xchg
outsb
add
das
xchg
das
xchg
movsl
ss
idivl
or
sahf
imul
pop
mov
mov
push
pop
pop
sbb
jp
jge
mov
pop
push
pop
sbb
lret
imul
filds
sub
int3
xchg
imul
pop
cmp
mov
push
dec
pop
repz
mov
ja
xor
hlt
js
fildll
mov
test
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
jecxz
outsb
shl
jo
xchg
jg
jo
xchg
xchg
jmp
mov
popf
add
inc
dec
leave
hlt
rol
das
jnp
rcl
sbb
sbb
dec
std
inc
or
xchg
shr
and
sub
and
in
pop
cmp
inc
cmp
loop
inc
sbb
inc
xchg
mov
ret
lods
popa
fists
enter
std
jbe
test
or
sub
scas
xor
xchg
sub
fildl
popf
mov
fs
loope
jp
js
loopne
pop
jae
or
add
mov
lret
mov
dec
les
cmpsb
mov
aam
faddl
cli
movsb
xchg
ficomps
jg
sub
add
stos
and
movsb
loop
pop
and
lods
int
cmpsb
mov
inc
dec
daa
fldt
xchg
scas
lret
cmp
in
push
dec
add
push
xchg
dec
push
leave
push
pop
jl
mov
ljmpw
inc
das
lods
cmp
mov
lods
lcall
adc
xchg
sti
test
dec
pusha
inc
sbb
inc
xor
jne
sahf
sub
scas
daa
leave
aad
stos
sbb
inc
lcall
xchg
push
arpl
jmp
lret
push
filds
lahf
xchg
add
aas
insb
jmp
loopne
outsb
adc
jge
lods
and
cwtl
dec
adc
inc
jp
popa
add
cltd
push
push
rolb
mov
imul
pop
or
add
add
mov
hlt
or
bound
jo
jg
jo
adc
ss
push
lret
mov
xchg
push
pop
je
xchg
lcall
idivb
adc
iret
mov
test
dec
loope
aad
sub
mov
cld
not
aas
mov
cmp
adc
cmp
and
lods
ss
cmp
sahf
mov
loopne
nop
and
xor
pop
pusha
andl
negb
call
jnp
orb
add
xchg
sbb
imul
dec
dec
icebp
leave
sbb
jbe
cmpsl
mov
mov
into
popa
jmp
les
and
iret
xchg
inc
push
aad
adcb
bound
pop
divb
dec
xor
in
add
adc
rorl
enter
loop
mov
stos
pusha
es
fs
mov
rorb
jnp
shrl
push
lret
outsl
out
cs
cli
jae
stos
push
ror
insb
push
or
arpl
in
cmp
rcll
and
je
add
inc
mov
mov
mov
popa
cmp
inc
aam
xchg
ss
ror
popa
xchg
paddb
lcall
jle
jp
push
mov
jp
lcall
sub
lds
jno
fnstcw
aam
dec
mov
adc
sub
adc
mov
test
aas
sub
inc
std
mov
push
test
xor
pushf
jb
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
les
mov
jo
xchg
jg
jo
push
pop
cmp
add
push
xchg
dec
ret
movsl
xor
loope
cmp
push
adc
sub
xor
mov
push
push
fwait
cmpsl
mov
pusha
pop
outsb
fimull
or
push
add
je
add
sub
lret
mov
rcl
xor
call
stos
xor
int
and
ss
fs
sbb
push
shl
imul
mov
addl
mov
lret
stc
dec
notl
add
xchg
or
in
fbld
cs
or
sti
pop
sub
pushf
xor
jne
repz
je
sti
fprem1
in
push
push
int
sbbb
clc
jb
cmpl
mov
sub
sbb
xchg
out
adc
jmp
popa
push
stos
test
cmp
jno
inc
popa
stos
add
cs
in
rol
push
sub
jge
sub
std
hlt
in
sbb
cmc
fistps
pop
movsl
test
and
fcmovbe
out
xchg
loop
xchg
or
cmp
out
xor
jge
lea
ss
and
pop
xchg
mov
or
jle
cmpsl
cs
mov
xor
ljmp
mov
add
jg
mov
fiaddl
incb
out
dec
adc
mov
icebp
mov
repnz
add
cmp
fisttpll
fnstenv
add
sahf
dec
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
adc
insb
andl
jg
jo
push
movsb
sub
ret
ret
sub
dec
inc
in
pop
pop
lods
jb
stc
popf
jb
mov
in
les
ret
test
cmp
movb
xor
adc
mov
enter
divl
out
fmull
lahf
pop
dec
fs
arpl
add
mov
xor
out
bound
inc
scas
rcrb
jl
popf
inc
xor
leave
pop
mov
xor
and
ljmp
out
jbe
rorb
loop
lcall
adc
or
sbb
sti
dec
jo
sbb
lcall
loope
xchg
jb
dec
inc
imul
inc
and
pop
dec
or
popa
mov
test
xchg
into
jecxz
bound
lret
daa
or
mov
mov
pop
cmpsb
dec
stc
mov
sub
push
lahf
jae
fucomip
jmp
mov
hlt
repnz
mov
mov
xchg
add
sub
mov
call
jl
sbb
call
push
inc
sub
and
outsb
dec
lret
and
loopne
sbb
adc
es
repnz
cld
fisttps
cmpsb
jae
data16
adc
iret
mov
insb
cmp
mov
mov
push
pop
nop
cwtl
mov
out
ret
faddp
sbb
outsl
int
pop
mov
movsb
loopne
loope
inc
add
mov
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
sub
mov
ljmp
test
in
scas
lcall
sub
inc
push
pop
push
jno
push
push
jbe
int3
jnp
dec
xchg
notb
mov
rcrb
cmp
sub
std
or
fwait
push
xchg
sbb
lret
push
mov
ficoms
enter
popf
xlat
bound
call
in
jo
add
inc
fadds
mov
out
sarb
xlat
sub
scas
or
scas
movsl
data16
es
scas
test
jp
ss
popa
pushf
aaa
icebp
ja
sbb
imul
lea
xchg
aas
fldenv
push
lock
out
or
mov
jle
out
imul
mov
xor
push
mov
mov
and
fs
flds
rclb
mov
addr16
inc
ds
rcll
gs
shll
xor
ss
fldenv
fmul
sub
pop
lret
js
mov
ret
xor
sub
and
cmp
movsl
imul
shl
mov
mov
lods
mov
pop
adc
inc
push
push
sbb
push
inc
ret
sti
lods
and
test
int
mov
pop
jecxz
cli
sbb
dec
xchg
aad
cmpsb
inc
push
dec
rcrl
or
ljmp
sbb
and
cs
mov
clc
sbb
add
arpl
and
mov
sbb
pop
adc
adc
pop
cmp
lds
mov
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
repnz
add
fucomi
jo
xchg
jg
jo
xchg
or
stc
out
shlb
out
push
mov
fnstcw
jge
aaa
and
ficomps
cli
sbb
xchg
push
ror
xchg
pop
adc
xor
stc
cltd
xchg
scas
stos
inc
mov
in
push
pop
or
and
enter
int3
mov
jmp
mov
loopne
pop
adc
sbb
pop
ljmp
inc
push
mov
sub
call
sbb
repz
imul
rorb
xchg
mov
test
push
cmp
mov
divb
mov
push
xor
aaa
sub
mov
aas
das
xchg
mov
xchg
pop
aam
popa
pushf
insl
mov
pop
int
sarl
test
sti
ja
cltd
jl
negl
lret
add
dec
and
cltd
in
cmp
pop
int3
mov
and
sbb
fmull
stc
push
jle
inc
mov
cli
mulb
jb
test
ljmp
add
scas
adc
push
out
dec
mov
mov
lret
lea
aad
adc
adc
mov
pop
push
inc
in
clc
or
mov
jne
gs
int
lahf
pusha
divl
nop
mov
add
mov
cld
test
aaa
test
stos
out
mov
outsl
jns
mov
push
add
push
popl
push
lods
cmc
jae
inc
pop
add
cld
out
idiv
xchg
testb
jbe
rorb
add
mov
icebp
in
icebp
mov
push
pop
xchg
data16
jo
xchg
jg
jo
cmp
pushf
and
push
jle
or
sub
xchg
dec
loopne
mov
sbb
fcmovb
xlat
cmc
loope
mov
adc
hlt
adc
mov
loope
orl
mov
sub
cmc
sub
mov
cmpsl
push
jle
imull
stos
movsbl
cmp
ds
leave
dec
cli
mov
stos
out
mov
jmp
lds
shrb
mov
inc
jno
jo
icebp
mov
sbbb
push
and
out
mov
loopne
xor
loope
inc
and
mov
gs
adc
into
push
cmp
shrl
adc
sbb
or
pop
ret
jecxz
xor
movsl
dec
xchg
les
test
ljmp
mov
repnz
xchg
mov
xchg
les
sbb
cli
xorb
int3
cli
push
rorl
popf
pop
js
insl
cwtl
or
mov
movsl
test
cmc
and
movsb
and
in
mov
xor
inc
lea
lods
bound
adc
lds
popf
xchg
cld
sbb
mov
add
or
adc
fdivrl
mov
lods
jp
repz
adc
std
repnz
imul
pop
cmp
cmp
and
mov
mov
mov
dec
jb
push
repnz
jg
push
mov
ret
mov
in
lea
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
aad
mov
xchg
jg
jo
push
pop
rcrl
inc
pop
push
mov
sti
mov
adc
and
and
or
inc
pop
adc
sbb
pop
push
jecxz
daa
xor
mov
in
fs
inc
dec
pop
test
rclb
ss
cmp
xchg
in
cmp
and
inc
cmc
sbb
xchg
jne
pushf
cwtl
sbb
mov
sbb
push
dec
out
xor
fwait
cmpsb
andl
pusha
shll
push
sbb
pop
adc
and
out
repz
mov
cwtl
bound
mov
es
sti
xor
jo
pushf
js
arpl
mov
fistl
xor
or
rorb
test
loope
lahf
mov
aas
xchg
adc
mov
sub
pop
cmp
hlt
xchg
cltd
mov
out
xor
push
jle
sub
push
push
popa
loop
and
daa
xchg
or
leave
adc
outsl
jno
stos
xchg
rcrb
dec
mov
test
std
mov
pop
dec
iret
cmp
call
out
xor
or
pop
mull
mov
in
push
fidivrl
sub
cltd
lods
jge
test
std
or
add
je
hlt
das
out
sbb
jnp
push
mov
int3
xchg
xchg
dec
pop
loop
cmp
lods
sub
xchg
xor
sub
int3
pop
xchg
xchg
fucomip
mov
xchg
cmp
add
iret
or
xchg
xchg
xor
mov
jmp
frndint
std
imul
mov
xor
lock
sub
jo
xchg
jg
jo
mov
gs
in
cwtl
lcall
jge
pop
xor
aas
jb
push
xchg
cltd
mov
push
pop
adc
sbb
sbb
mov
dec
aas
aam
movsb
iret
push
mov
mov
loope
xor
mov
xchg
dec
orl
jns
cltd
sub
leave
test
std
lods
mov
mov
push
xlat
out
daa
fstpt
inc
push
push
add
mov
adc
jl
mov
int
ds
mov
pop
sub
dec
xor
and
ret
xchg
mov
mov
mov
jns
sbb
aas
lahf
jns
mov
loopne
and
hlt
in
ret
adc
call
aaa
sub
push
dec
fnstcw
sbb
testl
add
aam
mov
xchg
mov
inc
test
out
adc
xlat
or
and
jmp
out
pop
dec
imul
dec
in
add
call
and
or
sub
add
jle
mov
rcll
add
mov
sub
out
lods
test
jns
into
sbb
sbb
sarb
fdiv
fiaddl
inc
out
pusha
inc
push
ret
push
aam
cli
in
mov
dec
jl
jnp
xchg
cmp
iret
xlat
dec
push
rep
mov
adc
shlb
or
push
fistps
test
add
add
jmp
hlt
sbb
rep
cmp
aaa
or
rorb
jo
jg
jo
or
push
dec
jge
arpl
aad
cmp
add
xchg
push
add
dec
sbb
scas
test
mov
jno
lcall
bound
adc
sbb
adc
sub
fcmovne
data16
cmp
dec
xor
xchg
pusha
les
imul
nop
sti
out
adc
out
test
cltd
repnz
pushf
movsl
pop
or
inc
and
imul
mov
mov
stos
xchg
ljmp
loope
out
aam
dec
rorb
call
pusha
cltd
dec
enter
stos
call
in
xor
push
lods
mov
rorb
js
adc
add
inc
lret
leave
mov
adc
aas
lahf
movl
clc
insl
mov
andb
sub
pop
sahf
mov
repnz
mov
inc
sub
and
les
ljmp
sarb
ss
cwtl
xor
xor
mov
fnstsw
or
das
in
mov
jle
out
ds
mov
std
inc
lret
mov
mov
jmp
cmpsl
inc
dec
cmp
test
push
xor
ja
ja
fistpl
sbb
aas
pop
arpl
jb
mov
sub
add
adc
xchg
adc
ficomps
addb
xor
xor
add
xchg
push
repz
aam
outsl
fldcw
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
icebp
and
jg
jo
cmc
push
movsb
add
daa
jp
or
xchg
inc
xor
pop
cmp
and
pop
sarb
insb
push
in
lahf
ss
mov
pop
lods
lret
push
dec
dec
lds
icebp
in
xchg
sub
mov
jno
jle
shrl
mov
xchg
mov
sbb
mov
adc
fidivrs
imul
inc
aam
xchg
gs
dec
mov
mov
add
movb
lret
pop
sub
pop
sbb
fcomps
rcll
dec
sar
out
dec
inc
push
jo
je
inc
pop
jno
fdiv
scas
pop
pop
mov
sub
sbb
adc
jle
movsl
push
adc
jo
inc
dec
loope
jns
add
aad
dec
lods
inc
aad
sbbl
ret
pop
cwtl
inc
movsl
call
sbb
filds
mov
and
out
iret
cmp
mov
xor
and
xor
mov
dec
dec
out
es
pushf
icebp
push
dec
test
pop
mov
hlt
jmp
test
adc
jo
mov
or
cwtl
pop
aaa
aam
pop
int
in
inc
in
cld
stos
pop
cwtl
xchg
ds
mov
mov
and
jl
loope
jnp
mov
outsb
jle
aaa
push
xchg
mov
xchg
arpl
jbe
jge
loop
add
cwtl
stos
mov
imul
aam
sub
xchg
movsl
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
lret
dec
cmpsb
add
dec
xchg
sbb
dec
push
outsl
pop
mov
in
loopne
adc
sbb
js
adc
loope
push
je
cmp
xchg
shll
jns
adc
sub
out
jl
test
mov
aas
std
or
xchg
dec
adc
cmpsl
fldt
inc
mov
mov
das
arpl
xor
and
mov
push
int3
mov
lock
lcall
mov
inc
int3
imul
jmp
inc
jl
lds
lods
cwtl
adc
frstor
pop
mov
dec
int
sbb
adcl
push
std
xor
xor
sbb
insl
fisubrl
push
and
cltd
jnp
cmpsl
sub
mov
xchg
ds
xor
clc
popa
lahf
addr16
sub
ljmp
leave
dec
jl
push
sahf
dec
insb
scas
clc
jbe
dec
jne
rorl
leave
jb
insb
or
jle
pop
jae
std
xor
outsb
rcll
xchg
cmp
daa
push
cmp
call
loopne
sub
mov
vpcomuw
movsl
mov
pop
dec
mov
aad
imulb
sahf
cli
inc
std
xor
jnp
jne
push
mov
test
pushf
rolb
add
nop
mov
loop
cmp
fimull
or
adc
push
pushf
push
pop
push
out
js
nop
cld
flds
pop
or
or
dec
mov
mov
pop
fistpll
iret
sub
int
xchg
dec
das
pop
iret
jle
xor
pop
pusha
xor
mov
pop
loope
nop
or
mov
xchg
fdivrs
rcr
cs
cli
outsb
mov
in
cwtl
cld
push
mov
test
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
jg
ja
cld
jo
jb
jo
mov
sbb
add
inc
mov
mov
jb
sub
fs
sbb
movsb
fs
mov
insb
xor
scas
mov
pop
sbbb
in
xchg
pop
mov
mov
cmpsl
lcall
mov
out
and
rclb
scas
fs
cwtl
inc
arpl
xor
jl
pusha
sbb
mov
add
push
incb
ficoml
and
cld
dec
xchg
fildl
push
dec
mov
ss
push
in
mov
pop
cwtl
push
jmp
fucomp
pop
rcrb
test
cmp
pop
movsb
inc
cmp
dec
mov
ja
aam
and
mov
add
sub
repnz
push
mov
ja
and
test
movsb
ljmp
insl
jns,pt
inc
movsl
cmp
sub
lcall
or
sbb
fistl
mov
notl
out
xor
in
in
cwtl
movsl
sbb
mov
mov
mov
cmpsb
or
pusha
jmp
xor
lcall
jge
sahf
stc
andl
dec
add
cmp
shl
push
fcom
pushf
adc
enter
bound
jbe
and
jecxz
cmp
add
add
xchg
pop
mov
ret
repnz
call
xchg
sbb
lcall
sar
jmp
jno
mov
cmp
iret
mov
mov
mov
or
sbbl
out
popa
jbe
lahf
nop
mov
daa
inc
cmpsb
inc
rorb
sub
push
adc
mov
cmc
jb
out
test
jae
adc
lcall
leave
xlat
aam
loopne
inc
notl
test
dec
insb
out
out
mov
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
xchg
jns
cli
jo
jb
jo
test
in
out
mov
mov
push
outsl
mov
inc
adc
pushf
mov
push
fidivrs
int3
push
ljmp
subb
mov
xchg
aas
ficompl
addr16
mov
push
sbb
movsb
mov
sub
lret
mov
aam
test
movl
imul
leave
mov
pop
sub
and
cmp
cmpb
xchg
jp
jne
mov
pop
mov
cli
jg
fistl
popa
je
cwtl
and
dec
xchg
push
xchg
ljmp
lods
das
lret
scas
mov
movsl
add
mov
push
rorl
cmp
adc
ficompl
popf
sbb
lea
subl
mov
repz
cmc
sub
push
push
xchg
dec
cwtl
xor
cld
adc
mov
fcmovnbe
xchg
mov
outsl
outsl
add
pop
lods
dec
push
dec
push
cmp
rorl
and
das
js
or
lahf
cmp
and
sbb
mov
inc
jns
addr16
aad
mov
outsl
cs
in
xchg
outsb
call
xchg
pop
dec
lds
cwtl
sahf
sbb
scas
ja
movhps
pop
push
arpl
mov
inc
ret
xor
cmpb
fcomi
inc
jmp
adc
mov
mulb
jns
mov
inc
jae
push
pop
int
in
out
jns
sub
icebp
ds
shlb
int
test
xlat
or
add
cmpsl
push
push
and
in
jae
push
or
lahf
dec
mov
mov
sub
add
lock
ret
addr16
shl
cwtl
and
add
pop
loope
sti
xor
push
sub
push
aad
clc
leave
add
dec
dec
js
cmpb
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
cs
jo
jg
jo
xor
cmp
enter
scas
nop
fidivrl
aam
std
aad
in
xchg
pop
mov
rcrb
cmp
dec
lret
aam
add
sbb
insb
push
adc
das
jge
cmp
push
ffreep
push
pop
cmpsl
pusha
sub
je
add
jne
push
sahf
pusha
in
sarl
dec
mov
jne
call
cmp
in
xor
jno
dec
and
roll
adc
mov
sahf
stos
adc
pop
add
movsl
js
jl
repnz
mov
mov
pop
rsm
mov
mov
push
cmpsl
jg
repnz
je
popf
mov
inc
movsl
out
popf
cs
and
pushf
push
in
hlt
cmc
fldenv
clc
or
fs
ss
mulb
in
les
xor
loopne
das
xchg
enter
enter
gs
test
repz
leave
shlb
sub
xchg
outsl
dec
pop
es
pusha
inc
pop
cmp
add
mov
push
cmp
test
push
inc
das
jns
dec
push
addr16
mov
mov
push
mov
dec
add
sahf
mov
das
in
mov
jge
data16
out
cmp
nop
push
push
repnz
subl
daa
inc
add
sub
or
pop
inc
pop
pop
xor
cmpsl
in
clc
xlat
push
adcb
pop
pop
add
xchg
or
sbb
jno
push
repnz
in
or
or
sbb
and
in
add
sbb
sub
push
popa
hlt
or
shll
aam
pop
aad
into
or
mov
in
add
push
daa
push
add
inc
fistps
sub
ret
jmp
or
jmp
jnp
xchg
les
sub
sub
jo
jb
jo
stc
cmpsl
inc
cmp
arpl
bound
inc
dec
sub
int
inc
clc
and
sahf
xor
and
aas
push
pop
xlat
fsubs
clc
vpaddsw
and
and
fwait
in
cmp
cmc
int3
fucomi
cmp
cwtl
mov
out
xchg
rcrb
jmp
int3
clc
add
cmp
shlb
mov
insl
add
out
xchg
pop
addr16
repz
xchg
es
dec
cmp
xchg
sbb
popf
cli
testb
popa
mov
or
sbb
adc
or
test
push
into
dec
inc
or
fisttpll
js
cmpsl
movsb
push
mov
loope
add
clc
adc
xchg
xchg
div
int
xor
dec
into
dec
psllw
lret
fistpll
inc
fistl
mov
aaa
arpl
pop
push
lea
mov
cmp
jmp
fbld
aas
add
fldcw
push
sbb
lret
mov
fidivl
push
mov
frstor
add
inc
adc
pushf
icebp
movsl
dec
aaa
loop
push
ljmp
inc
shrb
neg
or
stos
jbe
shlb
insb
add
cmp
rorb
in
insl
mov
xor
sarb
bound
or
subb
das
std
outsl
adc
stos
or
lods
pop
and
sbb
jbe
in
inc
mov
outsb
pop
les
enter
sbb
adc
jecxz
and
mov
sbb
or
andl
leave
jbe
data16
mov
ljmp
add
sti
scas
inc
or
mov
lcall
icebp
dec
jmp
les
sub
pop
daa
push
mov
lds
add
or
pushl
insl
mov
sbb
push
in
cmpsl
rcll
xchg
sub
jp
add
add
int
pop
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
ror
mov
jo
jle
jo
mov
rcll
dec
sbb
cmp
sub
and
jbe
aaa
popa
shrb
repz
fnstenv
loope
enter
sbb
xchg
cli
mov
movsl
dec
out
push
dec
aam
insl
leave
adc
mov
dec
fsubr
cmp
mov
mov
push
mov
xchg
test
sbb
dec
or
imul
cmpsb
sahf
insl
popa
xor
push
shl
bound
push
pop
lods
push
in
rolb
push
push
jl
sbb
stos
mov
push
jge
imull
inc
jo
cmp
movsb
and
jl
repz
lea
es
outsl
pop
sbb
test
and
and
test
add
add
and
jecxz
inc
lods
cld
testl
lret
adcb
testb
bound
mov
rclb
mov
cmpsl
cmp
mov
add
ljmp
imul
roll
test
xlat
or
add
pop
push
mov
into
fs
mov
sub
jmp
cwtl
dec
sbb
enter
out
cmp
mov
adc
lds
enter
sahf
dec
sbb
sarl
ljmp
mov
call
sbb
cltd
out
outsl
lret
xor
push
sub
fidivrl
inc
jo
and
int3
rcrb
dec
test
sub
jp
dec
out
pop
stc
inc
out
cmpsb
faddl
xor
sbb
out
xor
sub
ret
cmp
addr16
faddp
xchg
add
int
pop
xor
fiadds
adc
push
cmp
inc
push
lock
sbb
ret
push
sub
test
ret
cmp
rcll
mov
xchg
mov
fcompl
push
mov
push
pop
pop
stos
pop
push
imul
mov
fimull
shl
rcrb
sub
adc
adc
repz
inc
fdivrl
cmp
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
out
xor
jo
jle
jo
dec
ret
mov
dec
stc
xchg
mov
xchg
sbb
cmp
or
mov
mov
in
insb
movb
mov
subl
stos
dec
push
sub
fbld
xlat
sub
jge
xor
mov
add
xor
fs
out
sub
mov
mov
imul
xor
insb
adc
jnp
inc
insl
adc
mov
pop
out
ret
js
push
aas
scas
ficomps
mov
rorl
lea
aaa
xchg
cmp
int
or
or
jle
je
push
cmpsb
jo
mov
dec
repz
add
push
shrl
lods
cs
popf
pop
test
lods
ljmp
pop
and
pop
mov
in
pop
inc
push
inc
popf
out
lret
out
add
lret
sbb
inc
xchg
insb
imul
sar
jnp
add
fcmovu
mov
hlt
xor
in
inc
cmc
or
add
stos
mov
pop
add
push
cmp
int
jne
jl
lds
pop
adc
mov
fcoml
push
push
into
xchg
jmp
xchg
xchg
rolb
cmp
das
cld
add
mov
stc
rorb
push
adc
lods
ja
add
cmp
sbb
test
int
inc
negl
push
lods
nop
imul
fildll
mov
ds
bound
mov
outsl
lret
fwait
mov
jae
dec
add
push
ret
es
les
push
dec
int3
adc
aad
jb
imul
in
cmc
push
js
iret
loopne
ret
and
subb
icebp
adc
push
jecxz
push
hlt
mov
xor
mov
sti
and
mov
mov
stc
inc
mov
pop
or
stos
stos
out
addr16
mov
xchg
inc
add
sbb
jne
es
cmp
jb
mov
sbb
xor
adc
jne
mov
dec
dec
xor
add
inc
out
stos
gs
shll
xor
sti
sbb
ret
add
add
and
dec
xchg
cltd
scas
movsl
xorb
jle
jo
inc
push
pop
aam
ss
add
and
pop
mov
jmp
mov
add
xchg
jl
outsl
fisubrl
xchg
movsl
negl
cli
sbb
into
roll
mov
adcl
inc
repnz
push
ror
lret
pusha
pop
aad
push
lret
inc
ret
mov
sub
mov
pop
frstor
mov
jo
push
jnp
mov
sbb
sub
inc
inc
das
in
xchg
dec
pop
lret
mov
pop
mov
and
test
dec
into
push
cld
add
dec
xor
mov
sbb
ficomps
mov
cmp
in
push
sbb
dec
dec
js
stos
sub
jmp
push
mov
int
out
int3
scas
jae
and
and
add
xchg
jl
jns
lahf
lods
dec
push
sbb
jb
mov
std
mov
enter
fucomp
jae
into
push
adc
movsb
cmp
mov
adc
rol
cmp
xchg
hlt
and
test
xchg
sub
push
fsubrs
dec
push
xchg
adc
test
add
mov
enter
pop
insb
imul
lret
push
sbb
mov
fdivl
mov
or
les
or
dec
inc
jo
mov
mov
cmp
cmp
stos
mov
inc
test
in
dec
pop
dec
fistpl
int
pop
out
mov
pop
dec
push
mov
addl
dec
inc
ret
ret
jae
ret
xchg
daa
cmc
mov
lea
sti
push
orl
ds
and
and
fsubrp
adc
cmp
loope
xor
add
mov
push
xlat
nop
gs
mov
mov
imul
mov
pop
mov
movsb
pop
cmpsl
fdivrp
jo
nop
jno
cmpsl
iret
stos
arpl
inc
dec
push
dec
cltd
sub
decb
dec
push
xchg
mov
int3
jne
cmpsb
sbb
cmp
dec
mul
icebp
inc
adc
cmp
cmp
pop
inc
push
popl
stos
jmp
push
dec
mov
jg
pop
xor
fdivs
frstor
int
cmpsl
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
xchg
idivl
jo
dec
jge
jo
inc
je
fnsave
dec
sbb
dec
jmp
add
mov
fwait
mov
add
cmpsb
cmp
shl
mov
jns
sti
push
mov
test
data16
adc
popf
mov
sub
imul
or
hlt
les
rolb
test
jp
or
xchg
std
mov
jbe
fnsave
ficoml
xchg
std
inc
stos
cmpsb
inc
sbb
std
pusha
repnz
addr16
dec
pop
jae
js
mov
xchg
fwait
xchg
or
fnstsw
les
jecxz
dec
mov
dec
adc
test
fisubl
xor
imul
add
xor
xor
test
imul
sub
add
pop
add
fbld
sub
mov
sti
adc
inc
push
xchg
inc
inc
jl
cmc
stos
in
leave
jno
fistl
in
test
gs
cli
int3
mov
mov
xor
add
cmp
add
pop
ret
and
push
bound
mov
inc
cs
xor
loopne
push
push
mov
xorb
jbe
sub
jecxz
in
rorb
fs
cltd
mov
or
ret
hlt
stos
cwtl
push
daa
pop
test
lock
cmpsb
das
cmc
mov
mov
stc
adc
adc
xor
out
add
add
daa
int
pop
roll
mov
cmp
call
stc
mov
ja
hlt
popf
pop
mov
adc
test
jns
scas
xor
loop
or
ljmp
push
dec
xlat
fistps
sub
inc
sti
int
adc
mov
fbstp
mov
int
roll
mov
jmp
dec
pop
repnz
sbb
daa
mov
mov
aam
and
jmp
mov
stos
push
mov
jns
mov
mov
mov
shr
mov
cmp
adc
bound
xchg
xchg
or
nop
mov
adc
mov
ja
add
mulb
and
fistl
cmp
or
loope
pop
dec
xchg
shll
dec
or
pop
add
mov
sahf
and
ror
lret
cmp
in
out
movsb
int3
mov
ja
fsubs
sub
aad
pop
add
test
repz
scas
jae
pop
fcom
and
popa
dec
dec
xchg
ja
xor
insb
mov
repz
push
pop
sub
cmpsl
sti
notl
inc
push
jecxz
or
jp
pop
rol
enter
int3
sti
xor
mov
xchg
mov
mov
sbb
adcl
dec
mov
inc
pusha
in
movsb
rol
sbb
scas
pop
jne
cmp
pop
push
mov
sub
enter
hlt
add
ja
fmulp
sub
mov
sub
dec
cli
sbbl
mov
jne
inc
and
mov
dec
mov
inc
dec
cmp
push
jbe
or
ja
mov
sbb
mov
jge
roll
stc
cli
movsb
fsts
and
push
gs
jmp
arpl
mov
test
add
mov
cmp
loop
stos
sub
cmc
mov
inc
out
sub
cs
out
inc
xor
dec
stc
push
out
std
es
push
dec
adc
add
shl
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
test
push
mov
dec
jge
jo
mov
addr16
xor
andl
not
fchs
mov
out
mov
popa
and
jle
xor
xor
pop
jge
rcr
xor
dec
stos
jo
icebp
enter
lods
inc
and
cmp
aam
dec
cmpsl
sbb
loope
mov
jmp
and
int3
push
aaa
pop
out
xchg
punpckhbw
mov
leave
mov
sbbb
test
dec
xchg
pushl
inc
jbe
push
dec
in
push
jmp
sarb
clc
in
mov
stos
adc
cmp
pushf
inc
sbb
mov
call
xor
sysexit
inc
in
int
sbb
mov
bound
iret
xchg
xor
movb
xchg
sti
pop
imulb
mov
or
imul
jp
lret
movsl
xchg
or
cld
mov
lret
jp
pop
jl
add
jns
adc
test
pushl
and
int
fidivrs
xor
xor
mov
or
xchg
jg
ja
sub
lock
rorb
icebp
out
add
out
mov
out
outsl
push
jns
and
idivl
js
arpl
out
cs
cmc
fstpl
jg
cmp
dec
fbld
je
pop
mov
ret
repz
dec
dec
dec
pushf
xlat
sbb
int3
xchg
hlt
mov
fsubrp
push
xor
mov
imulb
stc
ret
jae
enter
sbb
sbb
aam
roll
scas
in
xchg
push
and
lea
fiadds
cwtl
sbb
fbld
clc
pop
dec
xor
mov
jno
inc
adc
jmp
sti
xor
les
les
inc
ja
sub
jle
or
pusha
iret
in
cwtl
pop
dec
pop
mov
out
div
notl
mov
pop
mov
test
cltd
xchg
iret
leave
data16
ds
addb
loope
and
push
pop
loop
dec
les
mov
aam
cmpl
mov
leave
mov
pop
scas
ja
mov
jb
pusha
sub
cs
mov
es
addr16
mov
and
dec
sub
cld
cltd
out
pusha
in
iret
jnp
adc
xor
push
push
jle
adc
das
or
aam
add
push
subb
repz
sbb
int
add
jmp
ret
stc
mov
pop
or
repz
repz
cmp
out
mov
cltd
lahf
flds
push
cli
in
cs
add
call
int3
push
aam
cwtl
test
mov
push
fdivr
jge
std
push
stos
mov
testl
call
mulb
and
jg
in
xchg
hlt
pop
jle
in
repz
and
add
jns
cltd
xchg
lea
daa
in
leave
push
in
push
rcrl
shlb
jae
mov
cmpsb
xchg
testl
adc
add
add
xchg
and
cmpsl
outsb
test
sbb
div
and
pop
xor
add
repz
aad
int
mov
aas
adcl
push
faddl
sbb
cmc
mov
adc
test
aaa
jno
stc
cs
mov
jb
fsubrl
xchg
xlat
in
adc
repz
jmp
icebp
rcrb
mov
mov
cmp
or
or
out
push
mov
mov
aaa
add
fsubrs
dec
jge
cs
or
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
idivb
mov
jge
jo
in
mov
add
hlt
push
jbe
lock
mov
push
dec
enter
jp
dec
xor
cwtl
push
jle
jnp
into
jl
out
pop
andl
push
test
addl
xor
push
addr16
cmpsb
mov
sahf
mov
pop
sbb
imul
push
loopne
test
dec
push
in
aad
mov
sbb
jo
inc
mov
xchg
testb
in
xchg
mov
call
or
sub
orps
mov
cmpsb
test
add
push
xchg
imul
xchg
std
jg
mov
dec
rorb
xor
and
mov
jnp
icebp
sbb
data16
in
pop
push
aad
add
test
cmp
aad
and
mov
push
orb
push
ret
adc
mov
clc
call
in
mov
adc
test
nop
push
cwtl
ret
pop
cmc
ret
sub
cmc
cmp
add
test
rcrb
insb
rclb
adc
push
ds
sub
sbb
push
lods
movsl
push
in
sbb
push
xor
lds
fstpt
int3
pop
mov
aam
mov
jmp
fiadds
jmp
inc
data16
mov
repnz
enter
aaa
xor
lds
in
push
fwait
mov
sbb
jmp
dec
shl
inc
push
cli
inc
inc
xchg
mov
dec
rcl
push
and
mov
push
adc
add
adc
cmp
mov
lods
push
js
repz
repnz
pop
loopne
lods
sub
pop
and
jg
jge
and
pop
ror
cmp
icebp
sbb
xor
ret
dec
mov
movsb
add
sbb
add
and
inc
adc
icebp
mov
pusha
pop
mov
int
mov
stc
push
push
pop
cmpsb
and
adc
aam
aad
push
roll
mov
cmp
cmp
adc
scas
test
mov
jp
push
test
pop
push
mov
jg
dec
jbe
mov
push
mov
adc
add
and
or
mov
lret
popa
jp
jge
mov
pop
and
and
or
jmp
jecxz
int3
lahf
xor
bound
cmp
imul
notb
cmp
orl
sub
mov
fcompl
fidivl
or
mov
sbbl
lret
sti
cmp
or
ret
jp
mov
test
inc
xor
scas
ljmp
imul
loope
and
cmp
fwait
mov
jge
pop
jo
shlb
jnp
pop
inc
fisttpll
ds
mov
xchg
rcll
pop
add
filds
mov
xchg
sbb
test
jmp
lds
pusha
outsb
sahf
iret
outsl
sub
and
jge
loop
ljmp
lcall
fs
packsswb
lods
lret
shlb
adc
jns
dec
dec
dec
push
lret
out
jae
mov
add
sub
das
inc
xor
and
mov
and
lods
pop
jl
popa
pusha
int
aas
test
or
xchg
xor
pop
ror
mov
inc
sbb
jae
or
cmp
mov
jl
jl
out
xlat
sbb
xchg
sub
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
out
stc
xchg
jo
dec
jge
jo
xor
sbb
cmp
sub
or
daa
popf
mov
sub
jp
fistpll
fwait
xor
jecxz
push
lods
repz
loop
sarb
cmp
sbb
inc
inc
pop
push
xchg
pop
inc
lods
mov
or
aam
inc
and
add
inc
pop
roll
lock
xor
or
cmc
std
xor
ljmp
sub
icebp
jg
cmp
gs
xchg
cmp
xor
fidivs
sbb
dec
push
lods
dec
bound
mov
fsts
idivb
loopne,pn
sbb
in
xchg
mov
aam
lret
mov
js
fucomi
mov
inc
mov
outsl
fstl
or
shl
imul
popa
xor
pop
jb
mov
int
pop
mov
std
scas
das
mov
dec
outsb
fstpl
dec
and
in
jge
ret
subl
xlat
jnp
std
sbb
icebp
pop
mov
dec
repnz
inc
scas
mov
mov
cmc
pop
pop
mov
adc
lods
fcomi
push
inc
aas
adc
fstl
mov
sbb
add
into
cwtl
mov
cmpsb
sbb
xchg
pusha
mov
cld
add
nopl
arpl
adc
pop
daa
loopne
mov
sbb
adc
dec
adc
outsl
jge
sub
fstpt
das
mov
scas
xchg
ja
lock
xor
cmp
adc
lods
pop
rorl
cs
out
push
mov
sbb
imul
test
sub
fldt
jne
addr16
jne
enter
leave
ss
scas
lret
lcall
inc
mov
int3
int3
rclb
subl
or
out
aam
shlb
sbbb
mov
pop
adc
mov
idivb
jae
mov
push
test
ficomps
xor
mov
leave
jbe
es
aad
inc
loopne
ljmp
jge
mov
out
jge
mov
inc
ljmp
cmp
out
jne
adc
jnp
les
cmp
pop
lret
push
icebp
jne
in
push
ret
aam
adc
rep
clc
sbb
aam
addr16
adc
or
adc
jle
lcall
aaa
rorb
movsl
push
out
add
cmp
dec
fsubs
daa
je
dec
add
sbb
out
or
icebp
adc
pop
clc
call
cld
push
clc
cld
out
pop
cmpsl
mov
pop
inc
xchg
xchg
scas
dec
xorl
cwtl
sub
clc
in
jbe
mov
das
and
rcll
lret
repnz
mov
in
enter
lret
sbb
movsl
mov
dec
xor
arpl
inc
and
shrb
sub
jnp
mov
jl
cmp
inc
rorb
dec
sub
jne
adc
mov
pop
iret
sbb
insl
sbb
les
fmuls
dec
sub
and
mov
pop
pop
add
cltd
loopne
pop
sbb
loope
mov
stos
shr
xchg
adc
arpl
push
adc
int
movsb
mov
and
lds
push
lahf
sub
inc
aad
jle
into
mov
ret
inc
and
bound
mov
jmp
pop
lds
add
xor
aam
xchg
int3
push
mov
sub
add
call
sbb
add
mov
add
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
cmp
sahf
jo
dec
jge
jo
ret
dec
fdivrp
inc
dec
fmull
out
pushf
xchg
xchg
xor
imul
cwtl
push
jb
movsl
sti
stos
push
or
xchg
ljmp
mov
aas
decb
sbb
cmpsb
push
jns
mov
push
mov
xor
mov
icebp
sub
xor
test
add
sub
mov
ret
sbb
sarl
lods
jp
mov
pop
and
inc
imul
jp
xor
ja
ret
int3
push
out
mov
loop
daa
cmp
cmpsl
mov
and
jns
stos
xor
popf
pop
enter
movsl
mov
imul
pop
aaa
mov
popa
ds
faddl
and
pop
int3
push
pop
mov
mov
fs
lock
or
test
xor
jb
std
push
pop
mov
ficomps
xor
sbb
cmpsb
dec
mov
mov
cltd
fucomip
repnz
call
jnp
xor
fs
mov
and
movsl
adc
and
mov
fsubrs
jmp
jg
mov
sbb
shlb
pop
dec
jb
sub
rdtsc
pushf
adc
cmp
mov
adc
cwtl
loope
in
nop
movsl
xchg
scas
out
cmpsb
andl
outsb
or
cmp
pop
add
das
xchg
inc
mov
fs
push
jbe
or
push
lret
mov
xor
mov
push
popf
or
sti
arpl
sub
sbb
int
je
aam
scas
push
fisttps
sbb
ret
xor
add
jnp
lock
cli
lea
add
cmp
mov
flds
adc
or
inc
addb
sub
fcomps
xchg
inc
jp
lea
adc
in
sub
cmp
mov
jne
mov
sub
std
lret
jae
ss
and
mov
add
jne
jbe
mov
fnstsw
movsb
cld
xchg
mov
inc
subb
push
lahf
frstor
adc
aaa
icebp
in
and
push
add
lar
cmpsb
push
sub
dec
add
push
in
cmpsb
mov
hlt
cmp
adc
push
push
add
pop
shl
mov
lds
dec
adc
dec
push
sbb
or
add
aam
push
or
push
sbb
inc
sbb
xor
lods
jle
sub
test
sub
mov
xor
mov
ficompl
jmp
mov
ret
ljmp
inc
ret
ljmp
xor
cmp
pop
pushf
rorl
mov
jno
ss
fwait
push
outsl
das
xor
jecxz
jnp
or
jg
test
dec
mov
ja
pop
call
rcrl
lcall
pushf
mov
pop
js
sahf
dec
cmp
sub
enter
inc
mov
stos
rolb
into
dec
test
cwtl
mov
rclb
mov
jns
xor
push
pop
pop
add
data16
fs
aad
cmpsb
aam
nop
loope
add
mov
lock
movsb
pusha
mov
aaa
dec
push
push
jmp
xor
push
fs
add
lods
pop
int3
popf
dec
jno
sub
lcall
push
xor
cmc
jns
push
xchg
iret
xchg
mov
shll
loope
jge
mov
adc
xchg
mov
cmp
loope
jecxz
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fcmove
and
sub
jo
mov
shll
xchg
dec
push
cmp
stos
sbb
pushf
hlt
or
sbb
insb
cmp
dec
jne
or
das
push
loop
pusha
pop
imul
pusha
adc
stc
jg
int
inc
xor
cmc
popf
mov
sar
cld
jno
push
scas
push
scas
inc
jne
aaa
mov
arpl
cmp
add
sbb
pop
jecxz
rcrl
sub
test
call
daa
cwtl
insb
stc
push
pop
sbbl
or
jbe
push
cmp
ds
sub
faddl
inc
adc
arpl
dec
imul
jns
or
pop
les
sysenter
push
inc
or
fisttpl
in
cmp
mov
loop
xor
dec
jp
inc
pop
insb
jno
clc
or
int
jo
mov
shlb
push
inc
add
aad
shrb
add
inc
into
pop
repz
pop
push
mulb
movsb
xchg
push
nop
pushf
loope
sub
iret
mov
aas
fldenv
enter
mov
or
lds
add
adc
stc
cld
xchg
jo
jle
adc
mov
or
cld
sarb
popf
mov
iret
add
lods
test
mov
mov
mov
mov
rol
call
xchg
mov
xlat
and
cli
divb
xlat
push
je
pop
mov
lods
xchg
popa
mov
das
mov
loop
stc
cmp
add
add
inc
push
fisubl
dec
push
cwtl
lcall
mov
jge
out
lea
push
jg
mov
nop
jmp
out
mov
mov
hlt
lret
in
jo
pmaxsw
pop
fnstsw
jnp
aaa
out
fistl
repz
adc
inc
push
mov
int
mov
cmp
in
add
cltd
ret
dec
aam
andb
mov
test
and
popf
xchg
popa
or
mov
push
mov
pop
ret
lock
adc
adc
inc
or
and
cmp
fnstenv
ffreep
inc
cmpb
xor
mov
cmp
push
jl
pop
jae
adc
or
push
sti
mov
sti
int
pusha
data16
jge
mov
repz
popa
mov
push
xchg
pop
push
js
xchg
movsb
ss
jl
mov
test
js
insb
mov
sbb
mov
stos
pop
test
call
xchg
cltd
sub
xchg
clc
dec
iret
rorl
repz
dec
and
xchg
lcall
jle
lret
inc
ficoml
pop
xchg
pop
fistpl
adc
push
or
mov
and
xchg
dec
test
ss
int3
inc
cmpsl
adc
call
xlat
mov
das
and
mov
in
hlt
cmpsb
adc
scas
inc
imul
pop
leave
dec
pop
mov
push
jle
mov
mov
lds
and
sbb
sbb
daa
loope
inc
mov
out
xchg
fs
fidivrl
rol
test
mov
bound
dec
mov
daa
jge
negl
or
lret
mov
loopne
cmpb
in
subb
mov
adc
fidivs
les
rorl
aad
outsl
sub
mov
fsubrs
out
lcall
iret
pop
pop
out
push
add
inc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
sub
jo
dec
jge
jo
dec
je
mov
mov
ret
subb
jne
jg
pop
dec
ret
xchg
ds
mov
or
ds
sbb
daa
je
std
push
and
push
bound
sbb
repz
adc
push
adc
sub
pushf
xor
in
jnp
jge
jns
jns
cmp
cmp
cmc
adc
jmp
lahf
insl
sub
aas
sbb
aad
cmc
js
pop
popf
orl
arpl
repnz
inc
clc
cmp
adc
sub
mov
popl
push
les
andb
mov
jge
sbb
and
mov
fsub
arpl
adc
in
movsl
out
in
jne
cmp
popf
mov
add
sub
inc
sbb
mov
lcall
jle
dec
js
in
int
add
repnz
testl
jl
push
pop
pusha
das
mov
popa
pop
dec
cmp
int
pop
insl
lcall
sbb
jecxz
xchg
pushl
mov
cmp
ja
push
addw
xorl
aaa
jmp
pusha
idivb
jp
inc
mov
ret
jmp
loopne
xchg
push
nop
and
add
sahf
jmp
dec
adc
lea
mov
fstl
scas
or
test
test
iret
nop
stc
sbb
cli
dec
pop
or
jecxz
xor
mov
add
jno
enter
adc
movsb
scas
fwait
and
les
add
mov
mov
xor
ja
sbb
aam
or
cwtl
hlt
pop
cmc
push
inc
xlat
xor
push
mov
mov
jmp
cs
mov
aaa
mov
lock
scas
jo
or
imul
jl
sub
inc
and
test
or
mov
mov
ljmp
in
pushf
or
cmpsb
jmp
inc
dec
icebp
adc
rep
out
jb
shlb
ja
mov
or
adc
dec
push
es
fcomi
sub
es
xchg
into
std
inc
jns
push
or
test
jp
pop
loope
int
xchg
dec
xor
sub
mov
frstor
lret
repnz
data16
out
xor
repnz
inc
mov
push
int
mov
dec
stos
movl
movsl
push
sbb
std
pop
bound
repz
xor
test
mov
push
pop
in
fiaddl
mov
sbb
fiaddl
repz
pusha
movsb
or
pop
xor
sbb
mov
pop
jbe
add
push
pop
leave
fistl
mov
mov
xor
mov
mov
pop
movsb
fcmovu
pop
pop
ret
aam
push
xor
dec
aas
sbb
pop
sbb
insl
mov
jne
mov
cmp
pop
jl
xor
inc
sbb
sub
push
xchg
pusha
stos
aaa
addr16
fdivr
cmp
pop
insl
fistl
aad
cmp
les
adc
add
xor
cmp
xor
xchg
addr16
scas
leave
add
fmul
push
and
pop
mov
and
adcl
sub
fstpt
jmp
push
shlb
pop
jmp
ret
jns
cmc
jno
mov
stos
push
ret
cwtl
arpl
sbb
cltd
push
mov
into
repz
arpl
addr16
pop
sub
ss
cmp
dec
and
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
addr16
pop
mov
jo
adc
mov
sub
and
loopne
dec
pop
idiv
movl
mov
adc
mov
insb
sbb
pop
clc
adc
mov
int3
test
mov
popf
xlat
sub
pop
cmp
icebp
lods
insb
test
push
mov
pop
push
cltd
mov
push
push
fwait
dec
lock
mov
test
mov
addr16
lahf
int
nop
gs
ja
jl
and
hlt
loop
das
shrb
pop
or
add
jecxz
jl
lds
adcb
mov
add
sti
sbb
jnp
roll
jl
adcb
adc
adc
push
mov
aas
js
xor
sti
inc
push
mov
fisttpll
mov
xchg
sbb
mov
out
xlat
cmpsl
lds
pop
inc
push
rorb
mov
push
add
cmp
jno
es
in
dec
lret
dec
ret
jbe
inc
jp
shl
shrl
enter
mov
fwait
push
sub
pop
lock
imul
cld
popa
xchg
xor
dec
xor
pushw
mov
push
add
dec
popf
decl
outsl
cmpsl
xor
dec
dec
mov
cli
cmpsl
adcb
insb
jbe
xchg
sahf
repz
loope
mov
mov
xchg
insl
popf
adc
mov
popf
jecxz
cmpsb
add
test
rolb
jns
push
test
mov
inc
lods
push
js
sbb
insl
push
fldlg2
inc
repz
mov
int
push
push
std
pop
mov
jbe
push
sub
mov
xlat
dec
push
and
and
imulb
mov
and
mov
and
out
push
mov
sub
sbb
xor
push
je
pusha
adc
adc
mov
cs
aad
inc
outsb
cwtl
cs
into
xchg
clc
dec
ret
push
push
movsb
or
mov
push
push
and
hlt
push
sti
mov
adc
loope
jae
push
dec
push
mov
in
mov
jb
jmp
mov
jb
sbbl
mov
mov
iret
sarl
push
in
sub
mov
je
cmp
out
and
imul
dec
push
sbb
push
cwtl
test
add
add
test
subb
dec
outsb
fbstp
jmp
js
sti
xor
mov
lret
lcall
decb
jge
adc
mov
hlt
sbb
or
xchg
out
cmp
out
mov
sub
rcrl
hlt
icebp
jle
push
lods
lahf
aas
into
inc
in
inc
lahf
gs
cli
mov
jge
xchg
mov
scas
hlt
test
inc
sarb
mov
or
sbb
cmp
in
into
cvtdq2ps
or
adc
out
jge
mov
mov
xchg
inc
sbb
cmp
fisttpll
mov
out
jge
xor
adc
xchg
pop
adc
inc
out
mov
adc
push
loope
insl
mov
adc
xchg
mov
push
cmp
sub
gs
inc
adc
push
cld
push
ret
pop
cwtl
jl
mov
mov
mov
aaa
stc
xor
aad
pop
or
xor
or
mov
mov
add
pop
pusha
addr16
ds
sbb
mov
fsubs
cmpsb
cs
mov
push
in
pop
insb
mov
mov
mov
mov
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
scas
jo
dec
jge
jo
lock
outsl
movsl
insl
jmp
inc
in
mov
arpl
sub
xor
test
orl
xor
or
sub
outsb
int
popa
fs
sahf
cmp
aaa
mov
mov
lret
mov
pop
cmp
adc
testb
popl
mov
push
aaa
adc
shr
mov
in
loop
mov
push
rol
or
xor
jb
decl
push
sub
xchg
in
fnsave
int3
data16
adc
cmp
outsl
loop
lds
divb
or
mov
lahf
je
push
cmpsl
subl
gs
pop
mov
mov
mov
and
add
jno
mov
bound
ret
stos
mov
aad
loop
subb
cmc
loop
add
and
fucomp
inc
inc
or
jo
cmpsb
es
push
xchg
sub
or
in
inc
and
and
push
stos
jae
dec
insb
stos
jae
jmp
jge
outsl
mov
mov
loope
ds
aad
sbb
cmpsb
xchg
adc
push
andb
sbb
or
sbb
xor
inc
push
xor
mov
sub
dec
bound
dec
xchg
ret
dec
and
fcmovnb
in
or
adc
leave
mov
pop
nop
enter
sub
ds
sbbl
int3
add
cmovl
test
test
dec
loop
adc
sahf
int
sbb
mov
loope
cmc
jmp
xor
add
push
jbe
movsl
add
cwtl
outsb
jbe
and
mov
push
insb
adc
mov
push
sbb
jg
sbb
sti
pop
lcall
mov
mov
mov
stos
dec
mov
jge
je
mov
aaa
jbe
pop
stos
pop
cmpsb
pusha
dec
cwtl
sbb
scas
lret
jle
pop
jge
add
xorl
xchg
add
cli
rcrl
scas
mov
mov
shl
or
test
pop
js
xor
xlat
jl
adc
sub
out
cmp
test
add
jp
rorb
lods
repz
pop
rolb
sbb
dec
out
mov
jb
xchg
jnp
push
movsl
test
mov
cs
jmp
dec
daa
imul
jmp
repz
daa
scas
scas
das
pop
jg
gs
inc
leave
lods
add
rclb
cmpl
pop
rcr
sub
addr16
pop
mov
and
nop
pop
and
xchg
add
xchg
andb
push
adc
shll
cmp
sti
mov
and
jo
pushf
mov
lods
jo
in
or
adc
push
fisubl
xchg
jb
push
and
outsb
cwtl
mov
lcall
sbb
into
xor
adcb
xchg
out
mov
arpl
mov
and
dec
xor
adc
jl
mov
pop
sub
sub
xchg
or
cmp
cmp
into
sub
sbbl
scas
fildll
mov
and
repnz
cld
sti
notl
repz
insl
mov
sti
negl
stc
xchg
les
fisubl
cld
mov
push
push
mov
pushf
out
lret
sbb
mov
shld
mov
stos
stos
addr16
pop
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
mov
out
stos
jo
dec
jge
jo
frstor
mull
add
imul
mov
dec
in
adc
mov
out
cwtl
inc
outsb
stos
cmc
sub
xchg
stos
pop
jmp
das
pop
xchg
addr16
mov
jp
xchg
jmp
rcr
outsb
push
mov
popa
push
in
and
divl
sbb
sbb
iret
insl
push
je
push
and
movsb
ljmp
or
mov
adc
testb
mov
mov
shl
push
fnstsw
cltd
push
ret
in
cwtl
add
add
jne
sub
scas
push
loopne
mov
inc
jg
jmp
out
sahf
mov
addr16
lret
js
xchg
inc
scas
in
loopne
mov
pop
push
pop
lock
push
addr16
mov
movsb
mov
idivb
nop
faddl
outsl
push
es
mov
outsl
dec
pop
aam
testl
bound
sub
sarb
push
popa
jge
outsb
mov
dec
in
rcll
iret
and
scas
push
outsl
mov
mov
and
imul
add
add
int
sbb
fisttps
and
jp
sarb
sub
cli
pop
cmp
fcomps
push
cld
dec
dec
popf
xchg
sti
jg
cmp
in
lret
bound
push
mov
movl
fucom
lea
dec
test
push
lods
push
mov
dec
stc
cmpsl
dec
iret
sub
ss
lock
lock
xor
mov
or
imul
popf
test
mov
inc
scas
and
pop
outsl
and
rcrb
xor
scas
xchg
cs
cmp
mov
in
addr16
fwait
pop
rorb
and
insl
jnp
lea
ret
jle
cwtl
inc
cmp
cld
jmp
and
lds
dec
lret
add
xchg
cltd
arpl
mov
ret
or
jmp
cmp
rclb
ljmp
movsl
cmp
sub
cvtps2pd
ja
mov
push
fwait
mov
add
or
push
add
rorb
adcl
je
lret
xchg
pop
and
test
out
ret
inc
lods
adc
fldt
inc
and
outsb
push
sbb
mov
jl
test
jmp
fnstsw
jns
ret
and
dec
loope
mov
subb
out
xor
adc
mov
pop
cmp
je
dec
lods
pop
add
mov
add
pop
adc
add
push
lods
pop
int
roll
call
cs
pushf
cmp
call
cmp
mov
cmc
sbb
lods
pop
or
xchg
sub
out
in
mov
dec
mov
repnz
mov
sbb
or
and
cmpsb
cmc
push
test
jecxz
push
sub
push
imul
push
xchg
test
movsl
mov
outsl
sub
pop
movsb
fnsave
scas
int3
sub
in
int
xor
or
lods
aaa
pop
lcall
aad
dec
sub
js
mov
jmp
ret
mov
inc
insb
adc
out
outsl
mov
inc
xor
insb
pop
pop
movsb
scas
xchg
pop
aaa
and
xor
aam
xchg
and
loop
imul
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
sub
push
push
fdivs
jo
xchg
gs
dec
push
lcall
test
fcomip
and
sub
xor
fisubrl
dec
loop
mul
icebp
xor
xchg
jmp
fadd
adc
sub
je
outsl
je
out
inc
push
lea
cmpsb
push
adc
lret
xchg
or
inc
push
pop
pop
mov
jmp
sbbl
test
adc
in
vpunpckhqdq
fisubs
addr16
mov
mov
mov
cli
movsb
push
cltd
or
push
mov
test
cmp
jmp
aas
sbb
mov
or
pop
mov
push
leave
adc
xor
fdivs
xchg
loope
mov
mov
popa
xor
mov
push
push
sahf
out
xor
rcrb
pop
pop
out
scas
int3
out
or
enter
movsl
sbb
push
ss
loop
fmull
or
into
outsl
mov
jmp
repz
and
sub
popa
pop
arpl
xchg
xchg
adc
mov
mov
add
cmpsb
fnsave
pop
fsubp
aaa
nop
or
icebp
cmp
hlt
cltd
sar
adc
push
add
icebp
cmc
aaa
dec
and
stos
adc
or
call
mov
fdivrs
sbb
lcall
mov
lods
sub
push
ljmp
lret
jp
in
gs
ret
inc
leave
and
dec
sub
or
lret
or
and
stos
fsubp
xchg
cmp
insl
loope
or
leave
stos
jnp
cmpsb
push
outsl
js
jne
int3
adc
dec
es
loop
sub
cmpsb
rorb
sbb
mov
xchg
aad
sarb
and
mov
inc
pop
mov
fistpll
mull
subl
xchg
xor
mov
cld
ja
test
cmpsl
add
jnp
sarb
stc
xchg
test
sbb
test
repnz
add
mov
pop
push
int
or
js
jg
pop
shrb
mov
cli
mov
shlb
lods
cmp
sbb
jecxz
add
test
mov
sub
jnp
and
data16
orb
sub
push
mov
es
and
pop
andb
cli
push
sahf
scas
cltd
add
js
mov
sub
pushf
je
sub
jae
push
dec
and
dec
cmpl
lahf
and
je
ret
push
enter
jle
xchg
mulb
in
js
faddp
mov
arpl
frstor
iret
xor
sbb
mov
and
inc
pop
repnz
xchg
jno
in
dec
jns
pop
mov
pushf
sbb
gs
sub
and
pop
outsb
insl
mov
cmpsb
int
dec
jae
leave
add
int
sbb
inc
or
lock
testb
test
test
xor
and
inc
loop
ljmp
data16
out
cli
stc
pop
pop
inc
xchg
movsb
jecxz
inc
inc
dec
fcomp
fisttps
cld
jno
dec
stos
sbb
cld
sbb
cmp
stc
or
push
cmp
add
add
out
je
in
mov
je
push
mov
das
or
ds
in
sbb
jne
xor
stos
fadds
fistpll
push
sub
test
test
push
mov
dec
add
dec
jl
sub
adc
sahf
repnz
pop
xchg
cld
sbb
rcrl
and
push
and
push
push
add
mov
test
or
test
enter
add
add
or
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
pop
inc
and
dec
jge
jo
sbb
aam
insl
enter
arpl
imul
dec
sbb
or
dec
pop
mov
lcall
loopne
jle
lcall
push
inc
repz
mov
xchg
rorb
inc
push
or
insb
in
or
test
or
adc
xor
cld
jecxz
xor
mov
sbb
mov
push
xchg
lcall
mov
sbb
or
repz
add
cmc
mov
enter
push
mov
lods
inc
dec
pop
inc
rcrb
jle
loopne
mov
inc
inc
fstp
adc
sub
mov
xchg
fwait
xchg
push
lods
test
testl
inc
in
jmp
ljmp
pop
push
iret
push
sub
inc
push
mov
pop
inc
fisubrl
xchg
mov
cmp
push
fs
sbb
loope
gs
adc
adc
jmp
rorl
in
mov
into
bound
cmpsb
fwait
adc
aas
mov
movsb
pop
pop
xchg
test
pushw
movsb
add
dec
bound
das
push
mov
imul
loopne
jl
sub
xchg
fidivrs
xchg
iret
stc
jno
fisubrl
outsl
into
sbb
in
dec
inc
fldenv
das
mov
push
pusha
adc
cmpl
push
icebp
stc
sub
add
inc
jo
jp
xor
mov
jp
and
lea
sbb
sar
push
or
hlt
mov
push
sub
daa
jg
xchg
jne
adc
mov
mov
fiaddl
mov
sbb
gs
mov
sub
adcb
adc
imul
lret
addr16
dec
pop
add
mov
push
or
fisubrs
mov
lds
push
into
xlat
psubq
pop
push
in
mov
ss
mov
dec
out
cltd
mov
bound
addr16
addb
ret
insl
mov
stc
pop
cmc
push
adc
arpl
dec
add
scas
in
push
rcr
jbe
xchg
xchg
data16
push
adc
arpl
push
jbe
imul
arpl
mov
mov
adc
or
popf
or
push
jg
mov
cli
jg
add
movsb
sti
dec
jnp
cmp
repz
inc
mov
arpl
arpl
push
and
sub
aaa
daa
adc
or
xor
notl
sub
pop
adc
add
add
cmpsb
mov
mov
inc
dec
cmpsl
cmp
mov
fnstsw
stos
cli
into
xchg
xchg
and
pusha
out
sti
sub
hlt
cltd
inc
mov
dec
stos
dec
inc
xor
pop
pop
js
rcll
or
jp
and
stos
push
and
jg
mov
sahf
rolb
mov
daa
outsb
into
stos
rcr
jl
jmp
neg
testb
mov
int3
pop
aam
inc
or
mov
outsl
jno
add
aas
cmp
pushf
stos
dec
pop
insb
add
insl
fidivrs
mov
pop
subl
push
jle
test
cld
jb
inc
clc
js
inc
rcrl
push
hlt
js
fcomp
xor
xchg
popf
mov
adc
pop
test
or
mov
mov
lret
outsb
sarl
sbb
inc
or
cmp
outsl
popfw
pop
dec
push
cld
jmp
sbb
jmp
pop
jnp
sub
cmp
sub
aas
ficoms
mov
rcl
in
movsl
test
je
mov
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
sub
and
or
jo
xor
pop
popf
sub
aas
add
xlat
dec
ss
lcall
fimull
hlt
ja
inc
mov
add
cmpsb
daa
xchg
or
inc
aam
jecxz
jl
jae
jb
add
test
jb
fmull
mov
jp
or
test
lret
cmp
cli
pop
mov
xchg
and
pop
in
push
sti
sbb
mov
cs
sub
fwait
mov
mov
dec
icebp
xchg
dec
movl
mov
add
pop
fwait
mov
xchg
mov
xchg
mov
jp
add
add
ja
daa
imul
cld
adc
hlt
xchg
sub
test
and
sub
dec
pop
sbb
cli
sub
jmp
mov
dec
and
scas
mov
inc
mov
xor
dec
adc
loopne
int3
pusha
jge
mov
mov
loopne
iret
push
mov
insb
mov
call
in
inc
push
xchg
or
test
icebp
or
inc
and
mov
sub
cmp
inc
loop
cmp
inc
xchg
sub
push
push
pop
test
es
mov
adc
aam
rorl
jecxz
mov
push
hlt
sarb
not
cmp
jle
into
dec
imul
push
mov
imul
divb
scas
push
test
push
hlt
lret
push
mov
iret
lcall
and
sti
add
pop
out
xlat
jp
in
in
xor
sub
sbb
les
pop
std
into
in
sar
mov
sub
lds
pop
xchg
mov
iret
push
inc
pop
cmpsl
adc
xor
push
icebp
and
sbb
orl
dec
push
pop
push
mov
dec
dec
loope
mov
pop
lahf
sbb
call
dec
xor
xchg
cwtl
mov
xor
and
repz
insb
movsb
jl
jg
fmuls
notl
xor
pop
arpl
in
jo
pop
add
out
xchg
jmp
lret
dec
add
cmpsl
sahf
test
jp
imulb
adc
add
inc
int3
push
pushf
dec
adc
incl
pop
dec
gs
out
sbb
arpl
pusha
xchg
cmc
mov
cld
loop
cmp
subb
insb
pushf
cli
mov
jp
rcll
test
fsts
fstpt
sbb
outsl
or
mov
and
aas
inc
add
imul
and
fsubp
xor
lret
mov
subl
je
push
push
scas
sub
shl
stos
es
lock
bound
cmp
sbb
mov
jge
ret
cmp
jmp
loopne
iret
into
jp
pop
push
stc
lock
mov
jne
push
mov
shll
lret
add
push
pop
int3
repnz
and
insb
add
std
dec
inc
dec
jg
mov
jo
mov
aaa
mov
andl
fs
push
scas
cmp
sub
fstps
das
pop
mov
xchg
sub
outsl
mov
sub
test
daa
fadd
in
lret
lcall
insl
jb
es
dec
xchg
xor
jmp
aaa
lea
in
mov
cs
cld
jl
mov
sub
fwait
adc
xchg
dec
sub
mov
add
sti
push
and
push
repz
push
pop
dec
dec
cmp
push
mov
jnp
ljmp
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
mov
sub
arpl
jo
xchg
mov
cwtl
cmp
inc
cli
shll
aas
enter
lods
ljmp
lret
insl
jge
jb
push
nop
inc
shll
cld
shrl
sub
jp
divb
dec
out
mov
push
sti
fwait
inc
inc
dec
xchg
inc
out
jns
out
sbb
das
sub
mov
cmpsb
fsubs
or
dec
adc
mov
out
lcall
std
shlb
ret
add
pop
lret
in
inc
push
aas
movsl
pop
sbb
das
jno
sbb
pop
pop
push
add
sub
inc
mov
cmp
mov
xchg
test
sub
sbb
mov
dec
lods
mov
mov
shrl
mov
mov
adc
stos
repnz
adc
adc
sub
bound
in
and
inc
call
jno
inc
cmc
push
sbb
jae
adc
out
aam
imul
xchg
adc
xchg
sbb
lret
frstor
rolb
mov
out
mov
mov
mov
out
in
mov
add
push
cmpsb
lods
sti
loop
or
andl
int3
std
xlat
rcr
sti
dec
adc
roll
icebp
cmc
lds
sub
addr16
add
xchg
xchg
les
arpl
inc
dec
shlb
aam
mov
enter
testl
iret
sub
test
and
inc
fsubrs
push
mov
jmp
push
push
jae
xchg
out
pusha
repz
cmp
jmp
in
fld
loopne
loope
inc
clc
fdivs
pop
sbb
adc
lods
cmc
xchg
or
mov
test
ffree
jnp
mov
pop
inc
mov
test
icebp
push
pop
sub
clc
mov
nop
jecxz
cmp
ss
je
sbb
add
out
jae
mov
jnp
movaps
sub
outsl
clc
loopne
in
idivb
andl
test
test
sti
insl
xchg
jp
es
pop
and
lret
lods
dec
imul
nop
jmp
pusha
xchg
ss
mov
sbbl
mov
popf
pushf
je
xchg
pop
adc
ljmp
cmpsb
cmp
or
out
lahf
dec
ds
das
jo
sbb
xchg
in
add
or
or
int3
push
lahf
test
inc
cmp
mov
mov
clc
cmp
sub
or
add
pop
cmp
jnp
fnstenv
ljmp
cmp
hlt
in
pop
shrl
pop
jo
shrb
pop
lds
insl
pop
ljmp
xchg
xchg
mov
cmc
movsb
movsb
mov
aaa
int
mov
in
and
sub
xor
mov
aaa
xchg
lahf
sbb
push
dec
decl
inc
push
lret
push
xchg
into
out
or
xchg
lds
jecxz
imul
cmp
scas
mov
mov
pop
or
xchg
mov
xchg
mov
adc
loope
call
cmp
push
rcrb
xchg
loop
cmpsb
mov
add
or
xor
mov
scas
jmp
je
leave
les
inc
and
lods
or
into
and
repz
test
add
ss
mov
jmp
js
or
into
xchg
jae
pop
sahf
inc
insl
mov
sbb
out
ja
pop
push
fdivrs
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
dec
sub
and
cmp
loope
dec
scas
fwait
sub
mov
pop
cs
ja
das
xor
jmp
imul
movsb
or
test
sbb
enter
xchg
jl
pop
lret
mov
test
lcall
fisubrl
daa
pusha
loop
pop
faddl
inc
aam
nop
pushf
aad
je
mov
addr16
cltd
lcall
mov
ds
cmpsl
or
pop
je
test
pop
mov
jmp
cmp
loop
jns
int3
dec
into
cld
push
jp
mov
mov
cmp
mov
lock
push
ja
lea
repz
or
loope
and
inc
fdivrl
neg
test
inc
push
add
mov
repz
xor
das
push
pop
mov
jb
int
pushf
test
cmp
sarb
jge
sub
cltd
pusha
dec
add
xor
loopne
jbe
xor
fs
push
mov
es
in
out
outsl
jne
imul
mov
aas
out
xchg
cmpsb
xchg
inc
movsb
lret
sbb
ja
cwtl
testb
pop
jae
mov
loopne
and
bound
adc
sub
daa
lcall
jge
push
and
xor
jae
das
bound
repz
mov
mov
adc
adc
popf
adc
gs
cmp
daa
out
xchg
xor
mov
jp
iret
cs
xchg
jmp
cltd
push
fwait
xchg
jge
ja
rolb
xor
dec
je
and
imulb
stc
movsl
inc
sbb
cwtl
ret
pop
lahf
subl
pop
xchg
pop
dec
xor
mov
sub
jg
or
or
lahf
ret
mov
adc
jle
mov
mov
sbb
and
mov
aam
sbb
inc
dec
adc
sbb
xor
jo
push
inc
test
pop
jge
fstpt
inc
mov
shl
pavgw
pop
int
enter
ja
pusha
popf
in
gs
cwtl
xchg
jge
sub
ljmp
aam
adc
aam
inc
insb
push
shr
mov
push
dec
mov
lods
cli
in
or
iret
pop
mov
jmp
mov
xor
jns
sahf
pushf
jl
pop
aaa
aaa
or
add
inc
mov
leave
fisubs
aas
jg
mov
xor
fs
pop
ds
popa
cmc
pop
push
mov
mov
sub
push
xor
inc
bound
mov
pop
jnp
test
inc
out
inc
test
iret
mov
jnp
add
add
int3
add
rcr
sbb
push
push
call
stc
mov
pop
pop
sub
outsl
fwait
sbb
or
jnp
fcompl
jno
push
daa
in
adc
orb
push
scas
or
popf
dec
outsl
fistpll
jp
xchg
inc
adcl
testb
pop
rorl
fs
js
pusha
push
icebp
fcmovbe
int3
or
sbb
insb
ja
pop
push
enter
sarb
xchg
lods
xchg
test
std
mov
enter
test
or
in
outsl
xorl
pop
push
scas
ljmp
xor
jnp
cli
imul
pop
mov
push
pop
cltd
in
jnp
sub
cmc
pop
jl
and
inc
aad
cltd
insb
loope
push
dec
popa
push
outsb
das
add
pop
adc
add
insb
xchg
out
cmp
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
sbb
daa
xchg
inc
jo
dec
jge
jo
lret
mov
jecxz
das
repnz
mov
mov
add
sbb
rclb
in
lea
decb
xor
xchg
mov
inc
enter
insl
push
mov
jae
jne
outsl
scas
arpl
push
hlt
sub
pop
popf
jne
push
adc
aad
mov
sub
or
jbe
mov
clc
orl
hlt
pop
cltd
mov
or
hlt
outsb
inc
shld
addr16
call
les
cmpsl
call
jae
adc
xor
and
push
xor
fcompl
in
das
mov
cmp
hlt
xchg
les
into
enter
jnp
xchg
jne
cli
push
pop
xor
lahf
ljmp
cmp
or
mov
sarb
das
add
lds
and
aam
mov
xchg
pop
lahf
cltd
push
test
adc
repnz
adc
xor
pop
ja
fsubr
fldl
mov
push
sub
hlt
jae
movsb
pop
push
adc
icebp
ds
mov
adc
pusha
fisubrl
in
das
xor
sub
sbb
nop
and
mov
js
inc
push
fstpl
pcmpeqw
mov
outsb
sub
popf
add
fcoml
xor
push
sbb
ret
sub
jno
and
loop
xlat
push
cld
mov
mov
lahf
adc
mov
pop
filds
cmpb
xchg
mov
fstl
xor
or
movsl
scas
pop
lods
xchg
mov
dec
dec
ffree
cmp
push
cmp
mov
imul
loope
mov
mov
mov
jl
out
jmp
inc
push
div
pop
sub
xor
pop
and
mov
movsb
les
push
jnp
sbb
sbb
jg
mov
cwtl
dec
mov
loopne
dec
scas
push
cmp
hlt
insl
mov
xor
je
stos
les
test
add
mov
mov
ds
mov
repnz
adc
jl
fnsave
das
or
imull
adc
imul
into
mov
jno
popf
xchg
fwait
lcall
sbb
aam
fwait
or
add
dec
sub
in
inc
cmpl
lods
dec
jbe
pop
addr16
push
add
rcl
and
mov
inc
dec
adc
lods
jnp
sti
sub
mov
lahf
or
jp
lods
daa
or
in
test
add
sub
clc
sub
mov
repz
adc
fdivl
push
cltd
dec
pop
adc
imul
test
clc
js
insb
fisubrl
mov
fcompl
pop
mov
ss
mov
jno
imul
sbb
cmpsb
xor
stos
push
aam
call
es
mov
sub
mov
push
out
mov
pop
outsl
in
lret
jp
jnp
mov
adc
shlb
xchg
sub
or
mov
ja
mov
and
jge
or
adcb
sahf
dec
shll
jb
and
test
adc
clc
repz
roll
sub
test
xchg
adc
mov
mov
inc
cmc
cmp
and
sub
push
push
inc
dec
mov
cmp
or
icebp
dec
lods
std
mov
movsl
pop
xchg
adc
jmp
aas
lods
xchg
mov
mov
test
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
rcrb
aam
inc
jo
dec
jge
jo
in
mov
or
mov
pop
dec
and
pushf
or
jl
jle
ljmp
xchg
leave
xor
lods
out
mov
dec
mov
fnstsw
cmp
not
movsl
aas
faddl
popfw
push
sarw
imul
stc
adc
ds
push
fnstcw
stos
imul
mov
dec
mov
ja
ficompl
pushf
outsb
mov
movsb
out
lret
mov
xor
out
jmp
inc
add
repz
or
cwtl
in
iret
lods
test
enter
xor
inc
lret
and
in
lea
xchg
pop
dec
cs
mov
fisttpl
scas
repnz
cmp
xchg
add
std
loopne
inc
xlat
jae
mov
push
xor
outsl
cmp
shrl
fldt
aaa
into
push
shr
adc
or
nop
movsb
scas
je
xor
sub
neg
add
test
dec
fcmovnb
fisubl
fnstsw
inc
subb
lds
xor
jp
and
adc
rolb
jno
mov
imul
push
test
bound
insb
enter
out
les
dec
jo
xor
push
movsl
jge
aad
push
outsb
pop
jns
inc
mov
xchg
jne
push
sub
and
jne
inc
scas
jbe
hlt
cmpps
imul
int
fbld
arpl
push
cmp
punpckhbw
rorl
insl
adc
je
push
dec
repnz
nop
pushf
cli
mov
enter
fcoml
ret
push
cs
or
or
out
repnz
adc
mov
adc
cltd
xorl
clc
outsb
out
in
adc
jp
fstps
arpl
mov
pop
stos
push
mov
jle
bound
xchg
or
mov
aad
repz
add
fistpl
jae
icebp
into
sbb
mov
dec
add
pop
in
inc
scas
fs
cmp
cmpl
sbb
xchg
jmp
stc
pop
aam
fdivrs
aaa
cmp
roll
cmp
test
out
mov
je
push
inc
xchg
mov
out
jo
mov
jne
les
push
popa
icebp
push
mov
outsb
push
mov
xor
jnp
and
sti
inc
push
ljmp
add
pop
adc
test
cli
fisttpl
or
lds
inc
fisttps
les
xor
xor
test
in
mov
xorl
lods
mov
sbb
jl
xchg
push
rcl
mov
js
xor
pop
or
popf
shrl
mov
push
dec
mov
shrb
loope
divl
add
pop
jnp
loopne
jp
mov
aam
mov
iret
stos
andl
ficoms
stc
daa
xchg
and
pop
adc
sub
out
stos
push
in
pusha
xchg
mov
pop
cmpsb
jns
arpl
and
adc
jmp
pop
push
int3
into
gs
lock
fs
xchg
ds
mov
jmp
sub
push
add
fiadds
in
loope
xor
popa
popf
jg
mov
int
xchg
outsb
mov
pusha
inc
popf
xchg
aam
push
push
pop
fiadds
fwait
cmpsl
insb
or
xor
xor
add
jo
push
xlat
mov
and
stc
lods
in
push
jnp
jns
nop
in
pop
pop
xor
lods
insl
cmp
sbb
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
out
dec
jo
dec
jge
jo
xchg
mov
aam
pop
pop
ds
pop
mov
mov
repnz
movsl
mov
sti
lea
in
test
fimuls
cmc
or
addb
xchg
cli
sub
sub
out
add
mov
imul
jbe
movsl
data16
aaa
pop
or
mov
mov
mov
es
xchg
cmpsb
xchg
jns
addl
mov
ljmp
jg
push
push
xor
pop
mov
enter
mov
callw
xor
inc
mov
lcall
lock
cmp
mov
jns
or
sbb
push
jnp
in
mov
xor
mov
popa
js
mov
ljmp
loope
gs
cmp
in
fwait
pop
fcmovnb
sbb
push
ja
adcl
pop
in
leave
mov
dec
out
xor
mov
cmp
pop
fsubrl
and
pop
outsl
mov
jg
imull
mov
pop
sti
lcall
push
cmp
dec
in
aaa
cwtl
aas
and
andb
mov
and
movsb
cmp
cmp
fdiv
inc
in
mov
loope
mov
sbbb
sbb
clc
ret
div
icebp
insl
mov
aad
dec
mov
adc
insl
add
in
or
inc
std
je
cmp
push
cmc
jne
mov
mov
cli
sub
das
push
jne
mov
xchg
or
mov
adcl
mov
xchg
or
jmp
imul
or
test
scas
dec
push
mov
lods
js
mov
mov
aas
adc
jmp
movsl
call
inc
fisubrl
aaa
xor
shrl
jo
out
daa
cmp
je
ror
push
xchg
pushf
or
cltd
jb
test
inc
mov
pop
stc
scas
in
lods
subb
es
sbb
pop
js
pop
jmp
in
xchg
icebp
stc
cli
jp
adc
aam
mov
add
jl
adc
lods
xchg
jmp
or
cld
lock
xor
imull
fcoms
or
das
push
adc
or
psraw
mov
test
adc
fcomps
push
cmc
pop
jo
or
arpl
mov
lods
xchg
nop
xor
add
and
mov
call
fsubl
fsub
push
adc
out
add
test
cmp
movsl
fadds
popa
xchg
inc
repz
adc
jo
sbb
push
mov
adc
pop
mov
push
mov
mov
xor
nop
test
in
add
arpl
clc
mov
adc
aad
daa
stos
nop
jb
mov
sub
push
jbe
and
icebp
fdivrs
push
mov
cmp
xchg
mov
addr16
and
pop
sub
mov
out
mov
or
out
dec
pop
insb
aas
cmp
mov
jbe
pop
jno
fcmovne
test
pushf
add
sub
mov
sub
sarl
ss
dec
mov
fwait
jno
lods
lahf
loopne
stos
test
bt
shrb
dec
mov
inc
pop
xchg
divb
mov
insb
sub
cmp
scas
rorl
roll
std
or
adc
add
mov
fimull
adc
xor
dec
mov
mov
and
dec
pop
addb
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
adc
adc
jo
jge
jo
sub
sbb
pop
ja
mov
mov
xlat
lds
sbb
iret
fisttpl
or
mov
mov
shr
sbb
clc
ljmp
jbe
pop
and
aas
out
sub
loopne
movsl
je
xchg
shll
popf
mov
subb
int3
cmp
adc
dec
sti
push
pop
sub
mov
repnz
dec
jns
ror
push
xor
dec
mov
lea
movb
fs
lret
scas
and
jnp
test
mov
or
orl
incl
mov
ljmp
adc
adcb
or
add
cmp
jl
and
mov
add
cmp
sbb
push
sbb
sub
insb
sbb
stc
inc
ja
fdivl
cmp
push
push
pop
lods
addr16
scas
pop
fstpt
pop
popa
jns
cmp
lea
push
jecxz
in
das
rcrb
xchg
xor
ja,pn
call
sbb
mov
mov
mov
jnp
in
adc
and
sbb
out
lock
int3
leave
sub
lds
xor
mov
jne
lods
sbbl
hlt
pusha
adc
dec
loope
pop
xor
arpl
jmp
xchg
fs
in
and
stos
sub
aas
in
push
fbstp
sbb
pmaxub
idivl
or
and
inc
in
or
aad
dec
adc
adc
jge
aaa
inc
outsl
pop
pushl
add
dec
dec
scas
cmp
pop
mov
cmp
inc
xchg
insl
mov
int
lcallw
mov
push
repz
push
inc
and
cmp
aas
jge
popa
adc
xchg
mov
mov
fucomi
test
cmp
and
lods
lds
push
es
or
push
jnp
pop
inc
out
mov
mov
call
leave
movsl
mov
shlb
lods
dec
stos
or
jg
cmp
dec
rclb
xchg
push
push
sti
movsb
xchg
xor
cmp
pop
pop
dec
mov
out
adc
gs
cmp
je
fdivrl
stos
out
mov
dec
push
cmp
scas
outsl
xchg
sub
loop
xchg
adc
rcrl
dec
jle
cmp
shl
insl
mov
jb
xchg
sub
xor
ficoml
scas
add
decl
sti
out
sbb
mov
popf
xchg
in
leave
daa
dec
pop
cmpl
lret
lret
cld
mov
test
jae
cmp
rcr
mov
scas
mov
data16
cs
bound
clc
lods
mov
xchg
mov
push
add
jmp
jns
dec
stos
stos
sahf
lods
xor
push
das
sbb
pop
mov
sbb
imul
outsl
out
cmp
mov
and
adc
test
pop
lret
sub
fstl
rclb
mov
sbb
adc
pop
sbb
movsl
xchg
xchg
bound
stc
aas
xor
mov
lcall
repnz
jecxz
jp
hlt
adc
fistpl
pop
lret
sarb
mov
push
xor
push
and
mov
sub
out
mov
out
repz
inc
jne
mov
mov
pop
das
int3
jg,pt
aam
jg
cmp
cmp
push
dec
stos
fidivrs
lcall
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
