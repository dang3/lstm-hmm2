push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
aaa
adc
adc
adc
adc
adc
lea
push
xor
sub
lods
cld
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
popa
mov
neg
and
enter
or
imul
ds
lds
mov
int
dec
repnz
test
push
push
jle
adc
cmp
mov
xchg
aad
cmpsl
xchg
mov
jge
ljmp
mov
xchg
inc
add
out
mov
adc
je
test
mov
jp
cmpsl
sub
popf
cmpsb
divb
popa
in
xchg
adc
mov
mov
leave
push
add
push
or
jne
aaa
nop
fwait
andb
cmp
aam
pop
lahf
jo
inc
test
ljmp
sbb
and
dec
cmpsl
push
iret
sbb
lcall
jecxz
mov
mov
push
popa
push
movsl
jl
int3
aad
popf
mov
ss
outsb
jnp
lods
xor
mov
les
bound
pop
sub
addr16
lahf
xchg
xor
gs
rolb
adc
pop
icebp
test
out
mov
sahf
xor
push
jge
insb
or
cli
pusha
add
push
rcll
clc
and
mov
inc
icebp
cmp
jno
add
mov
dec
inc
add
shl
std
notb
aaa
and
xchg
add
cmp
push
sub
aam
jge
sbb
inc
cmp
mov
leave
pop
aam
fldl
mov
lods
inc
mov
aad
jp,pt
mov
add
inc
sbb
movsl
jae
shrb
lods
leave
cmp
test
fistps
outsb
or
insb
icebp
push
xchg
daa
lcall
dec
cmp
or
fs
xchg
fnstcw
stc
adc
jne
jecxz
lahf
fcmovnb
cli
lret
mov
insl
mov
push
dec
sbb
cmp
push
outsb
out
xchg
aas
dec
jns
xor
mov
repnz
sbb
add
and
call
push
test
stc
aad
aam
pop
inc
fldt
and
dec
repz
imul
mov
cmp
rcll
loopne
xchg
cmp
cmpsl
jo
pop
repnz
xchg
mov
or
mov
in
popl
mov
mov
stc
out
mov
scas
cmp
sub
add
mov
cli
adc
mov
sub
jp
fiadds
shlb
jecxz
add
mov
mov
mov
out
xor
jno
mov
test
insl
jnp
test
rolb
lods
dec
pop
xor
pop
lods
lret
fists
xchg
shll
add
mov
jle
dec
or
mov
cmp
nop
mov
push
clc
leave
out
xor
imul
inc
and
pop
ljmp
add
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
sub
int
adc
int
adc
loopne
push
xor
shrb
cld
mov
push
inc
mov
add
inc
das
fs
test
cmpsb
mov
insb
xor
dec
mov
and
clc
pop
in
sbbl
pop
adc
adc
sahf
call
pop
jge
xorl
xor
mov
lods
imul
sub
orl
sti
add
sti
lret
or
scas
out
cmp
mov
es
roll
sub
scas
or
test
adc
mov
mov
popf
ds
loope
test
cmp
mov
push
and
adc
push
and
xor
int
cmp
test
jg
rcll
enter
xchg
lret
xor
shl
and
jge
fiadds
lock
sti
int
push
inc
xor
lret
jne
ljmp
or
dec
xchg
fistpll
cmp
aaa
cmp
imull
ljmp
frstor
icebp
movsb
in
dec
jecxz
add
insb
push
pop
test
cmpsl
or
mov
int3
jp
dec
mov
lods
lret
insl
test
mov
testl
movb
inc
movsb
xor
inc
xor
mov
dec
clc
call
imul
adc
jno
hlt
or
divl
jb
mov
jns
mov
aas
dec
mov
push
mov
test
sub
icebp
xor
cmova
daa
push
sbb
sbb
jno
sub
sbb
push
je
jmp
test
push
je
in
insl
lock
incb
insl
mov
insb
popa
out
dec
test
push
xchg
mov
mov
pusha
out
pop
shrb
movsl
xor
cmpb
js
push
insb
xchg
lods
adc
cmc
jnp
xchg
les
push
jge
xchg
inc
lahf
or
and
cmp
mov
testb
call
fwait
xor
mov
pop
fnstcw
aad
add
ljmp
sub
int
cmp
mov
iret
cmp
arpl
sub
cmpsl
and
idivl
ja
fiaddl
inc
mov
adc
iret
sub
sbbb
sbb
jo
mov
or
adc
mov
inc
cmp
sub
or
rcrb
sub
popa
push
xor
xor
out
jmp
mov
fadds
adc
dec
push
add
pop
ds
jno
pop
mov
jge
stc
or
stos
scas
or
idivb
aam
sbb
notl
cli
shlb
sub
shrb
jp
xchg
mov
jge
pusha
mov
and
cmp
mov
push
lds
rcrl
xchg
fmuls
push
mov
mov
push
mov
mov
xchg
jg
pop
hlt
push
sub
call
and
jbe
ja
adc
mov
outsb
jno
aad
pop
test
inc
push
fdivrs
and
mov
outsl
pop
ds
pop
push
inc
int
push
andl
cmpsb
inc
out
jecxz
pop
inc
cmp
cmp
cmp
mov
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
decl
jle
orb
adc
adc
adc
cmp
jge
add
inc
xchg
je
push
iret
call
fstl
rcl
mov
outsl
iret
lahf
fwait
stos
mov
pop
sbb
inc
out
gs
movsb
sbb
scas
aas
push
xchg
mov
int3
ds
jbe
and
test
gs
lcall
clc
lods
adc
pop
out
test
and
pop
call
loope
xchg
ret
mov
mov
ss
in
add
test
jmp
sti
bnd
mov
and
jb
dec
inc
pop
sub
in
mov
out
shl
out
sub
js
sti
cmp
fcoms
pop
mov
std
cwtl
ds
imul
mov
adc
es
sbbl
jg
adc
mov
cli
push
popf
loope
test
out
and
gs
xor
push
mov
scas
or
popa
pop
or
inc
lods
push
cmp
gs
arpl
inc
insb
outsl
mov
or
call
dec
ret
sbb
push
sub
in
sarl
into
ljmp
out
loopne
out
fiadds
lock
xchg
push
sbb
jle
xor
pushf
pop
sarl
aam
mov
stos
es
sub
jmp
les
aaa
mov
shlb
cmp
pop
sub
stos
icebp
xor
add
idivl
cmpl
into
xchg
mov
sarb
add
and
insb
and
xchg
lds
mov
xchg
or
or
cmp
pop
xchg
add
and
in
imul
dec
mov
ja
popf
xchg
movsb
outsb
xchg
mov
jmp
and
push
addb
adcb
mov
clc
fs
adc
ret
repz
dec
leave
inc
je
sbb
dec
pop
xchg
pop
pop
fsubl
lahf
lcall
inc
jge
add
cltd
jl
xor
xchg
pusha
shlb
sub
mov
pusha
cmovns
xchg
xchg
sbb
xchg
aad
and
inc
jg
inc
dec
nop
les
les
or
dec
cli
mov
loopne
int3
addb
enter
push
iret
and
push
test
lods
test
in
test
call
pop
jmp
gs
fistpl
daa
fnstcw
loope
leave
jno
push
jmp
pop
jbe
cmc
mov
xlat
dec
lods
adc
outsl
in
xor
mov
mov
mov
pop
movsl
out
xchg
ja
fucomp
sub
inc
push
jo
stos
push
in
insl
lret
dec
or
xchg
inc
sbb
adc
xor
in
bound
and
stos
cld
icebp
mov
sbb
push
repz
mov
jl
std
sbb
sbb
jo
jae
inc
pop
addr16
push
insl
xor
ja
mov
aam
mov
sbb
mov
loop
push
insl
aas
add
jl
mov
push
inc
xchg
stos
cmp
jns
dec
or
shlb
sub
jecxz
mov
mov
sti
insb
sbb
or
add
stos
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
cwtl
adc
ljmp
leave
lods
cmp
sbb
aaa
or
push
cmc
lcall
dec
mov
pop
push
insb
jg
xor
in
cmp
fsubr
xchg
andb
popf
fnstenv
loopne
popf
xchg
imul
mov
shlb
jo
incb
data16
pop
les
xchg
jp
scas
fcoml
jns
or
adc
adc
mov
insb
daa
sub
enter
loop
les
pop
outsb
pop
sbb
jae
jmp
jp
ss
inc
pop
add
fsubs
hlt
jg
push
lahf
int3
int
jb
or
mov
lods
stos
xchg
push
mov
cmp
add
lret
rcrl
mov
int
in
out
xor
mov
outsl
or
mov
mov
cltd
push
cmpsl
ret
inc
mov
mov
xchg
mov
stos
ret
push
xchg
pop
lods
pop
aas
inc
pop
jae
mov
mul
phsubsw
bound
ljmp
add
add
in
xchg
ljmp
or
data16
add
stos
loopne
or
mov
mov
jp
fdivr
adc
xchg
lea
mov
lret
rolb
fisubrl
test
iret
sub
cli
add
imul
pop
lret
jo
in
mov
in
test
dec
inc
pop
push
dec
and
incb
pusha
push
ljmp
adc
jae
or
pop
dec
pusha
data16
xchg
push
lcall
mov
enter
pop
mov
cmp
inc
pop
pop
aam
mov
ss
lcall
push
xchg
pushf
cmp
add
loop
or
pop
leave
std
pusha
in
stos
sub
repnz
into
mov
out
mov
out
test
lret
inc
xchg
js
add
dec
not
push
test
daa
jnp
inc
and
shlb
pop
div
sarl
pushf
pop
xor
shll
ds
adc
cltd
mov
imull
cwtl
test
sbb
or
ss
mov
dec
insb
out
in
dec
mov
sub
add
mov
adc
jg
lea
jge
jo
out
test
hlt
jb
test
or
inc
mov
xor
jnp
subl
lahf
repz
das
cmc
daa
clc
and
sub
outsl
ss
add
orb
clc
mov
push
sarl
lods
push
sbb
andb
andb
cld
push
rcr
loop
test
test
cmpl
fidivs
adc
dec
in
add
inc
aaa
out
cmpsl
sbb
inc
addr16
popa
jge
xorl
sub
sbb
aad
jno
rorb
xchg
div
shll
jp
icebp
mov
pop
aad
dec
outsb
popf
icebp
int
mov
addr16
cmp
mov
addl
push
cltd
enter
and
nop
out
mov
hlt
mov
mov
and
enter
cmp
addr16
cmp
push
xchg
imul
and
test
xor
and
sub
sahf
test
imul
movsl
and
loop
and
pop
shll
xor
clc
scas
loop
lcall
or
mull
imul
std
imul
push
fidivs
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
mov
push
notl
adc
adc
adc
icebp
pop
insl
into
and
rclb
call
jmp
subb
subb
les
pop
cmp
loopne
push
sti
stos
pop
mov
lret
mov
or
push
insl
push
dec
int3
push
xchg
xchg
shrl
xor
fistpll
mov
add
icebp
mov
pop
add
out
stos
mov
mov
mov
sbb
stc
stos
jb
pop
pop
jecxz
jne
and
ret
sub
and
xchg
sub
jnp
jmp
mov
xlat
loop
fcoml
mov
fdivrl
pop
sbb
xor
imul
scas
lods
inc
or
jp
push
add
aam
inc
mov
mov
jnp
stc
push
xchg
imulb
shl
rcl
addr16
and
mov
add
subb
dec
fstl
and
mov
sub
rorb
shrl
push
push
popf
push
push
sub
inc
test
jp
or
add
mov
rcl
dec
or
adc
scas
cmp
add
shl
pop
pop
pop
rol
stos
test
int3
iret
jo
outsl
cli
mov
jo
sbb
outsb
clc
sub
ffree
mov
xchg
mov
xor
push
and
push
fs
cmc
ds
sbb
ljmp
aaa
sub
xchg
cmpsl
out
mov
inc
sbb
mov
add
mov
rcll
fwait
fs
pop
inc
sbb
mov
add
lds
or
sub
xchg
lods
ret
sahf
xchg
ret
push
xchg
mov
insl
or
pushf
addb
xor
jg
or
popf
xlat
sbb
and
adc
cmpsb
xor
out
inc
shll
outsb
push
fwait
scas
ljmp
xor
cltd
stos
add
xlat
adc
fldl2e
xchg
pushf
push
xchg
sub
mov
ja
mov
enter
mov
cmc
cmp
bound
lods
add
adc
addl
out
ja
adc
cwtl
out
pushw
adc
mov
popf
pop
jg
dec
cmc
dec
adc
fwait
sub
jecxz
sub
or
inc
xchg
out
inc
out
push
and
or
jae
mov
mov
lcall
sub
mov
inc
inc
mov
es
sub
sub
sub
leave
imul
inc
mov
cmp
or
lods
push
fdivrp
fdivrs
ljmp
je
sub
xchg
mov
out
stos
inc
lret
xchg
mov
filds
xor
aaa
jp
xchg
or
xor
mov
or
and
pop
icebp
xor
outsl
lcall
dec
fsubs
divl
ficomps
push
and
pop
sarb
pop
loop
mov
je
inc
or
xchg
cwtl
enter
sti
mov
mov
sub
cld
xchg
xchg
test
push
inc
addb
aaa
es
inc
popf
cmpsl
je
sar
fs
shl
insl
loope
inc
dec
push
cltd
sub
in
inc
dec
sbb
and
test
or
out
jge
cmpsb
cwtl
je
aas
jns
in
add
in
mov
mov
cmpsb
cmp
outsl
cmp
xor
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
imul
js
out
adc
int
adc
jns
sub
inc
cmp
test
bound
imul
shr
mov
pop
jmp
mov
loopne
into
mov
stos
ds
sub
nop
xchg
ret
shrl
in
movsl
lahf
in
inc
inc
popf
shrl
xor
imul
aad
mov
pusha
xchg
lea
jg
and
int
push
or
lret
xchg
test
xor
adc
sub
adc
cmp
push
repz
mov
mov
popa
cmpsb
inc
xor
repz
in
cmpl
pop
pop
mov
repnz
inc
xchg
xlat
mov
insl
iret
dec
sub
inc
xchg
adc
fstpt
adc
insb
adc
inc
rorb
cmpsl
push
out
rolb
not
je
scas
dec
cwtl
test
mov
js
sbb
jg
imull
sbb
xor
dec
cmp
xor
test
pop
and
jb
ja
mov
xor
xchg
push
xchg
mov
aas
mov
xchg
push
mov
sub
stos
out
jae
mov
cmp
in
dec
sub
xor
jne
or
jne
inc
enter
mov
cld
jmp
test
pop
js
cmp
xor
mov
sbb
xor
test
mov
clc
xchg
xchg
push
stc
mov
in
and
mov
insb
xor
movsb
clc
or
sti
lea
orb
inc
dec
mov
roll
in
insl
rclb
mov
adc
inc
fsubr
stos
pop
jmp
inc
cmp
pop
pop
imul
arpl
arpl
xchg
lcall
jmp
cmp
xchg
cmp
mov
push
xor
pushf
pop
aam
gs
push
popa
notb
adc
adcb
jno
int
decl
in
jl
mov
imul
je
push
sbb
push
jmp
imul
xor
jno
sbb
xorb
ja
stos
inc
add
int3
rcrl
js
loopne
mov
and
lret
scas
pushf
pop
pop
push
xchg
mov
cmpsb
pop
stc
sahf
sbb
cmp
aad
push
fmul
push
sub
or
cmpsl
loope
mov
lock
or
test
lea
jge
test
out
out
adc
adc
sub
xchg
rclb
cs
add
lods
sbb
xorl
jne
popf
jno
loop
xchg
inc
lods
cmp
cmp
jmp
mov
in
je
lea
and
scas
cmp
neg
mov
add
shlb
or
rcrb
lea
mov
xchg
dec
add
aas
inc
imul
add
jbe
insb
dec
int
jl
jno
in
mov
jge
jle
bound
les
adcb
mov
xchg
mov
pop
pop
inc
mov
mov
add
push
shll
addr16
sub
ds
loop
jns
jb
aam
in
cmpsb
cmp
and
into
shlb
insl
stos
dec
adc
push
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
ja
fidivrl
int
adc
movsl
add
mov
jl
sbb
jns
lahf
pop
aad
aad
sub
xchg
fmuls
pop
arpl
loop
push
in
loopne
daa
jmp
mov
adc
jae
jnp
arpl
or
mov
push
pushf
aas
xchg
jo
fsub
out
jmp
stos
flds
lret
ss
cmc
and
mov
pop
loope
hlt
stos
mov
cmp
mov
nop
dec
filds
jmp
ljmp
cltd
sbbl
xor
nop
xchg
in
mov
int
or
test
xchg
scas
xchg
mov
push
xor
in
ds
and
inc
dec
xchg
int3
xlat
mov
cmp
test
pop
ss
cmp
lods
mov
data16
loopne
pop
xchg
mov
sub
fmull
movsl
add
scas
fcoml
fnstcw
jbe
je
jns
subb
push
stc
add
mov
dec
pop
pop
mov
pop
xchg
mov
pop
lods
out
inc
rcl
xor
inc
imul
mov
addr16
sub
mov
incb
sbb
sub
cld
mov
mov
pop
outsb
pop
arpl
ds
rclb
aam
xchg
and
movsb
mov
mov
dec
pop
push
fists
xchg
and
js
mov
sbbl
fcmove
mov
pop
or
xchg
mov
rorb
push
es
mov
movsl
sarl
xchg
rcrb
or
ja
sbbb
mov
xchg
adc
sbb
mov
add
ret
enter
dec
jg
lcall
cld
mov
mov
in
repnz
cltd
and
mov
lcall
and
cli
push
rcr
loopne
or
add
pop
jns
jge
pushf
inc
hlt
rcll
adc
ud1
fldt
test
lea
ja
jecxz
pop
cmpsl
stc
adc
loop
adc
lods
std
push
cmp
xor
sbb
pop
pop
push
mov
dec
xchg
jmp
pop
push
and
cmpsb
lds
inc
icebp
mov
mov
call
lret
inc
aaa
xor
test
sbb
cli
fistpl
mov
inc
inc
dec
xor
jp
out
pop
je
cli
push
je
sbb
or
pop
jns
and
in
add
pop
pop
dec
push
sbb
add
out
cmpl
arpl
and
rolb
push
and
dec
adc
aam
mov
loopne
push
insb
mov
xchg
xchg
push
shlb
in
cltd
and
divl
pop
ljmp
pop
or
push
lods
jne
sbb
in
dec
imul
pusha
in
cmpsb
fsubr
fcmovb
cli
ss
icebp
mov
insb
sub
add
test
hlt
mov
push
dec
jg
movsl
pop
enter
in
ss
mov
xchg
inc
push
sub
fstps
fmull
and
xchg
xchg
gs
and
shrb
adc
ds
ja
std
sbb
mov
subb
aad
pop
out
sbb
mov
test
sbb
or
call
pop
xor
jne
insb
fstps
pop
aam
or
fcomi
sbb
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
cmp
bound
out
adc
adc
adc
sti
lods
jge
xchg
les
xorb
add
sbb
pop
add
fsubrs
idivb
call
adc
mov
repnz
mov
in
adc
pop
push
mov
adc
stc
adc
and
ss
mov
xchg
test
pop
add
push
inc
std
xor
repz
jno
in
in
aaa
das
jno
cmp
js
add
inc
movsb
sahf
inc
movsb
mov
sbb
cwtl
sti
xlat
jmp
aam
fimuls
add
shlb
pop
loop
jp
fcoml
mov
iret
repz
imul
xchg
call
xchg
in
xor
and
push
int3
or
stos
or
cmp
aaa
jbe
push
sbb
icebp
mov
inc
outsb
push
adc
and
movsb
pop
push
shrb
xchg
sub
sbb
insb
jo
jge
rclb
std
mov
cmp
inc
cs
lock
sbb
in
sbb
js,pn
dec
cli
dec
and
ljmp
es
adc
mov
out
fnstenv
cmp
lods
jb
sub
popf
sahf
pop
jo
mov
xchg
push
pushf
js
imul
xor
mov
inc
dec
inc
cmpsb
pushf
and
fsubrs
fwait
xchg
insl
hlt
pop
test
aam
rolb
push
pop
ficompl
lods
sbbb
cwtl
pop
xchg
dec
add
inc
adc
add
popa
and
out
imul
sub
sbb
dec
dec
push
cmp
mov
into
and
ffreep
lahf
std
pusha
ja
push
mov
fmuls
gs
mov
call
arpl
jnp
jecxz
push
ret
rol
mov
cmp
scas
cs
cmpsb
popa
scas
dec
mov
cmp
dec
dec
jmp
push
outsb
in
sub
mov
std
lods
sbb
out
mov
mulb
dec
data16
sub
jne
cmpsb
nop
dec
popf
xchg
xchg
sbb
adc
mov
sbb
fldenv
cmp
push
ret
hlt
xabort
fs
ret
cmp
popa
add
and
in
out
xchg
add
jp
and
pop
sbb
in
and
movsl
push
inc
fnstenv
xorl
imul
rcr
xchg
insb
fdivrs
pop
fldenv
sub
inc
jns
mov
mov
test
out
push
mov
jg
lret
std
ljmp
push
mov
sbb
cmp
sbb
cmpsb
in
insl
fimull
test
imul
sbb
pop
gs
mov
jecxz
jae
aam
out
das
rcll
pushf
and
add
ret
inc
imul
call
clc
add
jecxz
xor
into
lahf
mov
icebp
xchg
dec
repnz
ret
sbbl
fstpl
cld
pop
cmp
jmp
ret
sbb
jl
std
inc
push
sub
and
mov
cmp
xchg
cmp
scas
daa
adc
push
rorl
shlb
cmpsl
nop
int3
jo
mov
jno
sub
xchg
shl
and
in
lods
cmpb
lods
add
imul
cmc
xchg
mov
leave
mov
bound
inc
fisttps
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
lret
js
ficoms
adc
adc
adc
enter
push
or
jecxz
cmp
adc
dec
or
aas
add
repnz
pushf
add
es
dec
cmp
mov
dec
cs
addr16
popf
cmp
cli
ror
push
xchg
jbe
jle
jo
fsubrl
jne
and
xchg
ja
lods
mov
dec
lret
roll
cmp
and
xchg
mov
jg
incl
push
or
pop
aaa
sbb
cmc
ja
call
push
push
rolb
jno
in
fstl
lret
insb
and
ret
in
mov
mov
xor
ja
les
outsb
push
cmp
fbld
mov
and
sbb
inc
repnz
aam
in
mov
sahf
or
sbb
stc
mov
and
xchg
sbb
into
subl
fistps
pop
push
inc
rorl
inc
into
call
dec
push
sub
adc
test
and
and
sub
shlb
xor
js
mov
jne
dec
fsub
cwtl
ds
add
les
xor
dec
in
mov
pusha
mov
iret
std
push
mov
sub
nop
mov
jp
ja
lock
fstpl
push
push
inc
push
int3
jg
push
test
std
mov
mov
insb
rol
fs
push
inc
pop
int
jno
mov
daa
mov
and
xchg
sub
add
fwait
imul
es
test
stos
and
fldcw
nop
jnp
mov
imul
add
int
sbb
into
or
inc
rolb
pop
xchg
ds
jne
adc
lods
mov
clc
push
xchg
lret
push
push
insb
sub
pop
lret
lret
and
fisubl
clc
movsb
ds
mov
ds
add
push
sahf
jo
pop
sahf
or
mov
fs
xor
mov
pop
lods
ret
subb
jmp
and
pop
xchg
xor
subb
push
and
jp
jge
inc
dec
xchg
push
stos
fstpl
repz
fildl
xchg
test
aam
jno
out
jno
fldenv
sbb
cmpsb
into
lret
add
jecxz
mov
rcr
xor
push
xchg
push
xor
mov
std
add
or
jmp
ljmp
popf
les
sub
push
les
roll
sub
outsb
gs
ljmp
pop
push
mov
nop
ret
das
jl
or
cmp
int3
in
test
add
or
push
pop
xorb
cmp
out
and
shlb
testl
mov
ja
cltd
adc
sbb
sahf
push
mov
cmpsb
adc
push
sbb
jnp
mov
js
jp
daa
mov
sti
push
cmp
mov
test
jbe
das
fwait
add
fbld
clc
addb
fcmovb
add
push
add
mov
out
push
int3
dec
xchg
inc
out
xor
imul
add
jmp
adc
xchg
mov
mov
sub
inc
aas
and
out
pop
test
int3
pop
xor
in
push
sahf
cli
shr
mov
mov
shl
jmp
fmuls
sbb
mov
idivl
aam
adc
adc
adc
ja
sbb
mov
add
sbb
xchg
sub
repnz
cmp
hlt
dec
mov
mov
mov
clc
adc
mov
repz
leave
ds
lds
sub
repnz
int3
sbb
push
xchg
movsb
jmp
sub
inc
push
pop
and
mov
sbb
orb
ljmp
add
push
test
push
inc
ds
mov
aas
adc
dec
sub
mov
xchg
pop
outsb
and
mov
pop
sbb
test
ret
jle
daa
mov
data16
mov
add
in
cmp
lods
inc
movsl
inc
sbb
subl
cwtd
mov
sbb
xchg
pop
faddl
inc
sti
sbb
dec
or
add
in
roll
pushf
lods
lcall
mov
inc
push
mov
cmp
or
add
enter
test
pop
xor
fisttpll
cs
cmp
mov
mov
pop
xchg
es
push
movsl
mov
mov
int3
pop
inc
push
lods
mov
sub
xchg
fnstenv
mov
js
negb
inc
pop
push
cld
outsb
pusha
ja
popa
add
imul
dec
push
stos
jne
fsubl
and
pop
pop
lea
mull
loopne
push
test
clc
mov
xchg
inc
rcll
jmp
outsl
out
sbb
mov
add
pop
mov
push
les
outsl
bound
inc
cmp
push
imul
lahf
inc
mov
mov
pop
mov
add
scas
cltd
fcmovb
movl
ja
lods
icebp
sub
dec
inc
ss
sbb
aas
rcl
inc
hlt
lahf
dec
or
hlt
sar
das
mov
jecxz
pop
jns
dec
aad
inc
fisubrl
fcmovu
adc
dec
mov
loop
sub
add
mov
ljmp
dec
rcrl
jno
addr16
addr16
xor
lcall
xor
mov
pop
adc
fildll
je
cmp
jbe
lods
imul
iret
xchg
out
cmp
jbe
add
xchg
xchg
icebp
or
stos
pop
lret
xchg
cmp
ficomps
dec
inc
add
sub
dec
or
outsl
lcall
shlb
cmp
cmp
mov
dec
imul
jge
xor
lcall
inc
push
and
out
push
pop
xor
jl
push
jb
xor
scas
rclb
sbb
jae
popa
mov
jecxz
sub
lds
arpl
pop
push
or
sahf
jle
dec
xor
test
xor
repnz
nop
jecxz
das
adc
mov
sub
xchg
pop
js
sti
cltd
push
dec
test
sub
aas
rorl
xchg
mov
js
xor
outsl
test
add
fcmovu
mov
jge
int
xchg
enter
inc
ret
or
mov
in
mov
movsb
push
enter
ret
mov
xchg
add
pop
push
popf
jno
dec
fstpt
jg
jbe
push
push
pop
ret
clc
subl
sub
or
mov
adc
sub
or
and
xchg
pusha
call
popa
mov
lcall
or
and
stc
push
lahf
pop
repz
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
clc
mov
int
adc
cld
imul
or
xor
fisttpl
jns
sahf
pusha
add
and
mov
xlat
scas
mov
and
mov
adc
outsl
xchg
sub
push
push
add
data16
pop
negl
cmpsb
jmp
xrelease
jns
adc
out
xor
jle
mov
mov
pop
pop
and
dec
sbb
and
cmc
push
cmp
dec
sbb
jbe
psraw
mov
shl
pop
outsl
cmp
sub
imul
ds
mov
cmp
pop
dec
mov
stos
mov
adc
jo
loope
std
jns
test
adc
pop
out
or
dec
jmp
xchg
das
imul
ljmp
nop
incl
aad
pop
leave
pushl
push
adc
adc
xchg
or
sbb
mov
push
inc
icebp
xchg
fbstp
lods
xor
mov
xchg
mov
jb
jge
imul
mov
leave
jmp
test
dec
mov
cmp
scas
mov
mov
mov
adc
xchg
jae
jecxz
dec
loope
repz
std
inc
lret
xchg
sub
or
imull
shll
add
aas
insb
das
cmp
dec
addl
mov
outsb
adc
pop
xchg
sarl
movsb
xchg
mov
js
mov
int
add
xchg
pop
sbbb
shlb
push
sti
sbb
adc
push
mov
jmp
sti
pop
ds
and
and
filds
das
xchg
sahf
and
fstpt
dec
je
ja
cvtdq2ps
jb
push
cmp
or
sbb
adc
fisttps
dec
jp
stos
mov
in
ret
cmp
movsb
mov
insb
dec
mov
arpl
int
pop
pop
dec
mov
mov
xchg
push
scas
jne
dec
and
aas
cmpsl
arpl
cmp
push
adc
xchg
into
mov
cmp
mov
shrl
arpl
pop
inc
xor
mov
pop
stos
sbb
push
icebp
push
sub
mov
rcr
inc
or
lds
and
fdivp
loope
inc
add
jge
fsubrp
ja
push
ss
add
xor
mov
outsl
xor
lahf
jo
dec
push
and
aas
mov
insb
lea
adc
pop
and
cwtl
mov
adc
int
js
rorb
sub
jae
in
xor
and
outsb
add
aas
fwait
aas
mov
push
inc
lret
andb
mov
orb
subl
adc
dec
sub
push
loopne
xor
test
sahf
shlb
lcall
mov
xchg
ds
test
pop
shll
in
pop
sub
fsubr
cmpsb
outsl
cmp
insl
push
mov
aas
mov
jmp
pop
add
js
rcll
xchg
sub
popa
inc
fists
cmp
pop
cwtl
mov
jmp
call
dec
scas
js
outsb
test
movsl
inc
sbb
or
call
dec
loopne
cltd
jo
psllq
sub
inc
cmp
push
cld
repz
jno
fs
outsb
mov
pop
and
ljmp
adc
rorb
ret
cld
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
lret
shll
int
adc
divl
popa
jbe
popa
adc
and
pop
add
lret
ds
and
sbb
repz
push
lods
dec
sub
mull
dec
fwait
scas
popf
clc
cld
jns
sub
iret
mov
adc
outsb
xor
test
fnsave
imul
inc
add
ljmp
aaa
mov
outsb
mov
sub
ret
jmp
test
ja
or
dec
popf
scas
sub
mov
fcomi
shrl
mov
stos
cmpsb
xorb
lret
adc
lahf
lods
std
sub
pop
cltd
sbb
push
and
adc
push
cmp
nop
lret
dec
adc
lods
or
inc
fst
movsl
test
fsts
mov
adc
xchg
dec
sub
push
and
insl
mov
rcll
sbb
adc
pop
lcall
sti
sub
push
mulb
mov
mov
jge
pop
jns
mov
imul
mov
outsl
push
xchg
in
mov
in
add
adc
add
sub
movsb
and
add
mov
pop
jb
xor
mov
or
mov
fiadds
and
xor
sub
clc
call
xchg
orb
loope
mov
mov
xchg
outsl
dec
push
add
dec
in
jae
inc
lret
in
sahf
popa
cmp
push
add
add
movsb
enter
cmp
icebp
xchg
pop
jge
and
addr16
cmp
push
cmp
mov
sbb
ds
fldl
push
rorl
sub
movsb
inc
dec
out
pop
mov
adcb
jae
lds
mov
cmc
and
mov
popa
jp
aaa
xchg
iret
jno
std
mov
jecxz
loopne
aad
push
int
lods
popa
push
int
sar
sbb
ds
out
mov
decb
or
mov
jecxz
cltd
sub
pushl
scas
scas
test
cs
andb
xor
mov
jns
sbb
shrb
mov
jge
jecxz
lret
add
arpl
sub
add
dec
lods
xor
jl
push
push
jb
nop
mov
das
fistps
fmul
rcrb
std
mov
dec
sti
mov
test
fst
enter
ss
in
mov
insb
jl
mov
push
daa
gs
movsl
xchg
push
pop
outsl
lahf
and
push
aam
ror
push
out
push
fcmovnb
nop
fisttpll
scas
mov
stos
lea
in
gs
pusha
and
mov
push
in
pop
cmp
mov
sbb
mov
fmull
inc
mov
fsubrp
iret
addr16
push
fcoms
jo
ret
jge
add
lock
loopne
sarl
push
dec
popf
in
pop
mov
icebp
in
mov
sub
dec
pop
in
xchg
sub
ds
data16
pop
or
add
lods
xchg
clc
xchg
lahf
mov
pop
mov
lea
cmp
inc
int
add
mov
xchg
adc
mov
xlat
das
add
xchg
push
xor
inc
cs
int
fcmove
or
fidivs
adc
mov
imulb
cmpsl
add
cmp
adc
push
clc
aaa
fsubrp
lds
jno
dec
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
cltd
dec
add
int
adc
push
adc
cli
and
mov
in
pop
mov
loope
and
mov
mov
gs
and
movsb
xor
sub
test
xlat
pop
popa
test
mov
add
and
fiadds
inc
repnz
or
jnp
into
pop
in
loope
xchg
jb
fidivrs
out
inc
lea
shl
jle
inc
gs
seto
lret
add
push
dec
xchg
in
scas
icebp
mov
or
subl
notl
xchg
shlb
xchg
mov
sbb
aas
pushf
aam
pop
jae
test
stos
loop
fimuls
push
pop
dec
jne
sub
inc
mov
pop
mov
jp
aam
add
sbb
subl
cmp
dec
std
sti
pop
cmp
lahf
mov
imul
jae
cmp
jle
popf
loope
jecxz
and
js
call
pop
cmp
orl
pop
dec
fcom
rolb
cmp
cmp
jp
hlt
adc
imul
popa
cmp
jnp
cs
mov
jns
mov
movsb
push
sub
pop
dec
add
push
ja
je
ret
repz
dec
jecxz
sbb
scas
ljmp
xor
push
xor
push
mov
push
xor
test
stc
add
rorl
in
jmp
cmp
jmp
adc
hlt
pop
insl
mov
test
mov
jecxz
fists
or
int
hlt
andps
call
xor
pushf
or
push
and
xchg
mov
add
in
inc
push
insb
es
gs
insb
sub
inc
jns
xor
jecxz
xorb
rorl
cs
jl
cmp
cwtl
pop
aad
mov
cmp
data16
mov
dec
push
push
add
adc
pop
jae
shll
sbb
dec
stos
test
add
icebp
decb
aad
mov
adc
sbb
popa
xchg
mov
mov
xor
repnz
push
scas
pop
adc
out
addb
sub
adc
and
dec
push
outsb
jle
cs
jo
loopne
dec
scas
mov
push
pop
scas
pop
or
jmp
lock
sub
ret
inc
pop
sti
cli
jg
mov
mov
cmp
std
sti
inc
lock
cmp
adc
movsb
jbe
cmpsb
xor
mov
lea
dec
fs
pushf
arpl
ret
cmp
mov
and
rcr
out
inc
dec
sub
sbb
pusha
jge
xchg
inc
int
inc
test
mov
mov
int
jle
fcompl
int
scas
xchg
xchg
icebp
mov
inc
out
mov
out
clc
push
jb
mov
mov
mov
adc
stos
outsb
loope
adc
dec
outsl
fdivs
mov
test
fistl
les
pop
or
add
cmp
push
js
jp
fistps
jecxz
adc
inc
mov
inc
mov
sti
push
inc
fwait
sub
mov
leave
inc
xchg
sbb
xchg
lcall
adc
jnp
ljmp
lcall
adc
and
lret
cld
jge
or
and
cmp
sub
inc
jae
inc
rorl
cmp
mov
add
cmp
or
ret
sar
pushl
in
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
and
mov
adc
repnz
ficoms
lret
jmp
fstl
or
rclb
dec
inc
js
push
nop
jp
aad
movsl
test
push
mov
loope
enter
pop
sub
dec
xchg
les
ja
aas
lods
jmp
or
xlat
mov
xor
xor
arpl
xchg
std
outsb
mov
and
sbb
jge
movb
sbb
xor
mov
push
loop,pn
lock
push
test
adc
in
push
decb
jecxz
jne
pop
dec
das
sbb
and
popa
ffreep
cltd
mov
movsl
mov
jne
pop
leave
dec
sbb
in
xorl
xor
int
into
jae
fcomps
lret
pushf
lahf
shufps
pusha
mov
fsub
or
pop
outsl
lds
rcrl
popf
xchg
xchg
add
mov
push
stc
mov
sub
mov
adcb
xor
cmp
xchg
test
jge
sub
scas
js
ljmp
frstor
mov
mov
fdivs
fnstcw
outsb
imull
pop
pop
jmp
rcl
insl
pop
xlat
icebp
jge
sub
add
or
push
xchg
lock
test
xor
or
rclb
jo
out
out
icebp
jns
xchg
insl
or
pop
sub
xlat
lods
pusha
popf
adc
pop
repz
mov
inc
mov
rcrl
adc
sahf
imul
fwait
jae
in
es
mov
lock
xor
sbb
push
jo
iret
push
pop
repz
xor
sti
dec
sar
int3
in
push
lret
adc
jg
jbe
int
adc
adc
scas
orb
pop
add
imul
sbb
popl
inc
xor
sbb
mov
cmc
and
dec
out
jo
inc
or
in
mov
in
jo
ljmp
in
xchg
cld
adc
or
test
aaa
sti
inc
push
mov
test
jl
xor
ud0
and
pop
repz
mov
fsubs
xchg
cmp
fistps
inc
out
loop
leave
jl
roll
jns
or
jg
pusha
stos
dec
mov
cltd
out
pop
sarb
xor
push
and
loope
ss
add
xor
dec
jecxz
call
nop
lock
les
xlat
mov
in
xor
push
fisubs
pop
sub
xor
dec
or
ret
in
mov
xor
data16
scas
jnp
add
mov
js
xor
pop
dec
push
loopne
pop
add
xchg
sbb
or
inc
sub
loopne
fwait
and
push
mov
in
sub
in
rorl
out
jg
fwait
mov
test
jl
inc
and
xlat
adc
ljmp
mov
sbb
movsl
shrl
movsl
xor
xor
cmp
mov
cmp
pop
sub
push
jo
mov
dec
cmp
fadds
ds
cmpsb
mov
insb
sarb
pop
mov
data16
test
fs
mov
daa
push
jl
std
popa
or
js
push
addb
inc
sbb
fldl
pusha
stos
js
cwtl
sub
sbb
insl
stc
pop
add
in
adc
jno
loop
jge
les
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
push
loope
insb
pop
mov
adc
adc
adc
ret
das
ss
dec
sahf
fdiv
int
scas
jg
sub
stc
jle
mov
dec
lea
jp
sahf
arpl
pop
aas
pop
adc
adc
dec
lcall
loop
xchg
cmp
into
pop
mul
jmp
fnstenv
int3
adc
mov
sti
cld
jnp
jecxz
fcmovnb
pop
jp
fsubrs
adc
jb
lahf
add
inc
adc
sbbb
into
inc
jmp
stos
fldcw
outsb
xchg
adc
out
and
pop
xor
test
pop
push
cli
xchg
repz
cmp
mov
or
pop
pop
mov
popl
je
icebp
leave
nop
xchg
cmp
mov
pop
xor
jb
notl
adcl
stos
in
fcomps
mov
jb
icebp
sbb
adc
ja
jnp
xchg
dec
fcoms
mov
pop
sub
out
dec
and
repnz
in
jb
ja,pt
push
rcl
lods
inc
in
js
dec
ljmp
rcrb
daa
aaa
jl
fcompl
mov
repnz
aad
push
mov
jne
sub
xchg
test
int
push
jno
adc
cmpb
sti
ret
xor
in
jns
push
push
lds
insl
lods
out
aas
mov
test
ret
imul
lods
cmp
inc
popl
jge
jl
jg
push
mov
push
fistl
push
jle
push
xchg
imull
and
lea
in
xrelease
adc
pop
cmp
popa
jae
mov
sub
mov
lds
daa
or
test
jp
fisubs
movsl
es
enter
jg
pop
sub
cltd
xor
or
movl
and
and
inc
or
or
jns
call
aaa
fdivr
pop
frstor
xlat
mov
enter
addr16
gs
repz
rcl
hlt
lods
faddl
cs
loopne
jne
int3
add
in
insb
out
in
out
adc
pop
out
xchg
lahf
hlt
pop
fwait
jl
arpl
inc
push
mov
push
aas
jo
jae
enter
cmp
mov
mov
pop
push
inc
andl
pop
cld
sub
xchg
js
ljmp
push
fst
xor
movsl
lcall
jbe
mov
repz
push
dec
sub
mov
dec
stos
sub
into
sub
dec
ror
and
andb
iret
jae
sbb
outsl
sub
or
inc
ja
pop
mov
xchg
lret
or
cmp
mov
add
sahf
xchg
adc
pushf
enter
ret
lods
movsl
lds
xor
cli
in
xchg
jle
sub
and
add
jge
int
jl
std
iret
push
or
icebp
pop
arpl
imul
leave
pop
leave
and
dec
jmp
movsb
out
push
push
dec
in
cmpsl
outsb
aad
push
sarb
mov
popa
add
shlb
mov
xor
or
fildll
cmp
and
adc
out
mov
inc
leave
jg
les
or
aaa
or
imul
xorl
inc
clc
add
lcall
test
sbb
lret
pop
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
stos
and
test
adc
adc
adc
jl
pop
popf
mov
aam
into
cmp
lds
mov
ret
sbb
test
add
cmp
std
dec
fwait
xor
fcmovbe
out
push
fisubs
std
cmp
xchg
repnz
loop
icebp
jno
mov
pop
xor
pop
repz
stc
fcmovne
mov
jb
add
xchg
dec
pop
enter
mov
jno
sarb
and
adc
in
shlb
mov
dec
and
cld
mul
fs
mov
ret
push
notl
push
adc
fisubrl
pop
mov
divl
mov
sub
push
cmpl
add
das
xchg
push
jle
mov
mov
mov
push
or
xor
mov
mov
imul
jno
adc
and
outsl
mov
xchg
fisubrs
jo
xchg
jmp
mov
mov
pop
push
sub
or
test
add
fistps
add
call
lods
into
movsl
test
iret
jg
arpl
push
insb
mov
xchg
adc
pop
xor
es
scas
push
adc
xchg
shll
imul
push
mov
mov
adc
ja
int
test
mov
jbe
loop
insl
dec
lea
insb
xor
push
mov
xchg
popf
inc
pop
jge
in
mov
mov
loope
and
cmpsb
arpl
cmp
push
adc
or
mov
das
insl
jmp
iret
mov
jg
mov
jl
int3
enter
jle
stos
push
push
pushf
cmp
xchg
mov
cltd
push
sub
stos
dec
test
in
sub
mov
pop
dec
ljmp
xchg
and
leave
jge
mov
or
push
inc
sub
sarb
mov
mov
jle
xor
mov
pop
xor
xchg
in
gs
ljmp
pusha
sti
cli
sahf
xchg
jnp
call
fldenv
mov
insl
out
xchg
pop
xor
add
fstpl
negl
jl
cs
push
lret
push
adcl
mov
xchg
in
xchg
ret
xchg
arpl
ret
push
fcompp
fstps
fdivrs
ret
cmp
aaa
adc
es
jge
imul
sub
sbb
xchg
ret
push
cmp
rolb
xchg
test
pop
in
mov
jno
jne
jo
daa
mov
xchg
movsb
cmp
mov
int3
cli
pop
inc
loop
sub
mov
sbb
movl
out
xchg
sub
int3
test
sbb
or
cli
cmp
xchg
test
xchg
adc
div
xor
and
outsb
inc
lahf
repnz
jl
leave
cmpsl
scas
stos
pop
cbtw
cmpsl
cld
fldcw
rcl
mov
inc
repnz
or
loop
xchg
mov
sti
or
jns
pop
pop
cmp
test
inc
or
dec
jl
mov
cmc
xchg
add
mov
rcrl
test
daa
inc
push
cld
js
xor
and
pop
inc
out
xor
rorb
aad
jecxz
and
lods
xor
pushl
insl
inc
sub
pop
repnz
mov
iret
nop
and
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
je
mov
adc
adc
adc
jl
bound
adc
xchg
sbb
and
ror
lds
jae
out
add
lock
jle
cmp
sub
or
test
lret
sbb
inc
sahf
rcrl
sub
cmp
mov
in
inc
jp
cmpl
call
ret
add
iret
push
sub
or
push
imull
pop
dec
fnstenv
jns
or
imul
jnp
hlt
inc
das
js
sub
inc
ret
int3
cmpsl
stc
xor
xchg
out
add
sub
mov
or
or
jno
mulb
lods
andl
in
rcrb
lret
xchg
es
cmp
push
ljmp
fstpl
aaa
in
je
cmp
adc
cwtl
inc
in
xchg
daa
lods
push
lret
fs
or
or
test
outsl
mov
lds
sub
inc
mov
mov
cmpsl
mov
inc
sbb
cltd
cmp
cld
mov
mov
mov
js
mov
add
sbb
mul
lods
gs
jg
pop
addr16
cwtl
xor
rorl
out
and
jmp
int3
push
push
jbe
jo
es
dec
mov
xchg
cli
inc
jae
sbb
push
imul
mov
je
stos
adc
test
out
fucomi
negl
jo
sbb
mov
push
sarl
pop
push
jp
sub
lret
dec
daa
push
ds
pop
shll
shlb
mov
pop
testb
stos
les
jp
mov
cmp
movsl
movsl
movsb
mov
jmp
icebp
test
clc
push
les
in
test
cli
outsl
js
and
jnp
add
bound
insb
mov
dec
clc
test
fcomp
jo
dec
es
jge
xchg
add
mov
adc
fsubl
lock
leave
mov
inc
stc
loope
out
mov
add
mov
mov
aam
mov
jecxz
mov
mov
loop
es
fwait
cltd
dec
push
mov
sbb
jl
fcompl
ret
pop
sti
or
sub
dec
jbe
insl
xchg
xorl
sub
repz
in
pop
sbb
cwtl
gs
mov
jbe
mov
dec
pusha
fwait
sub
add
imul
jmp
inc
and
repnz
rorb
int3
das
or
pushf
hlt
pop
mov
push
fldcw
ja
fnsave
out
jp
inc
ficompl
push
cwtl
testb
sahf
mov
cmp
lret
sbb
push
mov
cmp
mov
adc
ss
loope
aaa
mov
adc
add
sbb
adc
outsl
push
and
test
scas
xchg
dec
in
repz
ret
pop
mov
outsl
in
popa
ss
add
call
add
aad
pop
xor
imul
xchg
mov
cmp
mov
cmpsb
jne
mov
inc
inc
mov
les
xor
pusha
inc
jno
ljmp
dec
mov
push
shl
stos
fstl
loopne
cmp
xchg
loope
jbe
cmp
or
arpl
bound
test
or
movsl
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
xchg
ss
sub
adc
adc
hlt
mov
sub
inc
mov
or
enter
je
clc
lods
push
push
shr
leave
aaa
leave
jnp
ret
push
lods
test
mov
pop
and
sahf
clc
scas
adc
mov
fnsave
push
shrb
mov
cld
and
adc
pop
cmpsl
es
aaa
dec
out
jl
stos
adc
xchg
cli
int
cltd
dec
mov
push
cmpsl
inc
mov
je
in
adc
cmpsb
jecxz
scas
mov
lds
stos
mov
and
repnz
aas
sub
dec
inc
inc
rcl
mov
test
sub
pop
mov
das
or
shll
jo
in
ror
rclb
add
push
and
imulb
adc
int3
jne
dec
adcl
push
pop
arpl
mov
das
or
lret
cmp
ret
sub
push
jg
push
jp
testb
shlb
pop
ds
fucomi
push
cmp
faddp
shrl
dec
daa
mov
adc
inc
mov
push
xor
adc
aas
cmpsb
pop
sbb
cmp
adc
inc
dec
dec
in
idivb
cmc
jg
loopne
fnsave
cmpsl
icebp
jg
sub
je
sbb
nop
cmpb
and
jbe
add
xor
popa
cmp
dec
lds
out
stos
in
lds
lods
out
dec
test
pop
fistpl
mov
sbb
mov
rorl
movsb
dec
mov
cld
mov
dec
inc
mov
sbb
adc
xchg
subl
push
in
clc
mov
ss
push
out
mov
fmull
mov
add
adcl
rclb
daa
inc
add
ljmp
cwtl
xor
fs
test
xor
mov
adc
dec
mov
in
outsl
mov
cmpsl
je
jmp
aaa
inc
js
inc
dec
jno
dec
int3
mov
push
push
clc
gs
dec
xor
xor
ficompl
cld
mov
inc
inc
cli
push
ja
dec
test
stos
jp
movsb
jo
jb
sbb
in
dec
cmp
sub
cltd
incl
hlt
xchg
dec
lahf
inc
icebp
daa
imul
daa
lahf
or
inc
loopne
and
pop
adcb
pop
inc
cmpsb
and
push
iret
push
xor
dec
shr
stc
add
mov
fs
push
xchg
push
stos
sbb
xchg
mov
jle
nop
pop
mov
je
fcmovbe
mov
mov
lcall
outsl
dec
ror
mov
out
lock
mov
aaa
cwtl
push
inc
jae
stc
loop
neg
sbb
test
out
fs
push
push
insl
popf
shll
add
call
sub
stos
cs
outsb
push
jne
dec
fprem
adc
setbe
mov
jge
movswl
xchg
sbb
xchg
rolb
adc
mov
aam
fwait
in
push
fsubl
sbb
xor
mov
and
xlat
int
addr16
jbe
addr16
jo
int
cmp
fucomip
imul
ljmp
jo
add
cld
frstor
sbb
dec
popf
xor
ds
xor
adc
or
adc
and
mov
pop
cmpsb
icebp
stc
jb
rorb
stc
or
sub
cmpsl
fildll
faddp
add
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
shrb
pop
cmp
dec
sbb
mov
mov
out
mov
push
mulb
xchg
jns
add
xorl
xor
mov
push
xchg
push
mov
sbb
ja
insb
leave
pop
hlt
in
add
sub
mov
stos
test
sub
jb
add
out
iret
add
movsb
ficompl
loop
pop
or
pop
mov
insb
cmpsl
push
or
in
movsb
mov
xor
mov
adc
ds
or
xor
xchg
adc
stc
xor
pop
mov
testl
mov
es
jb
mov
xchg
pop
mov
call
cltd
lret
hlt
add
int
jo
mov
push
and
loop
in
mov
push
mov
push
adc
cmpsb
lods
xor
iret
fwait
into
out
dec
pushf
repz
sbb
loope
sub
pop
jo
testl
mov
dec
stos
adc
pop
mov
mov
out
mov
int
test
call
and
cmp
dec
cltd
sahf
ret
fstps
test
mov
daa
add
je
mov
xchg
stc
xor
mov
adc
ficomps
clc
in
xchg
push
mov
push
add
outsl
jg
bound
fwait
hlt
inc
outsb
jl
iret
cli
dec
mov
xor
xchg
add
les
pop
nop
push
jnp
adc
inc
je
std
or
push
xlat
or
sub
ja
jne
push
and
xor
jmp
ret
lds
mov
cmpsb
insl
jno
mov
pop
ret
popf
cmp
jp
pop
aad
loop
xchg
jne
jnp
jecxz
nop
sub
lea
jg
arpl
cmp
sub
out
orb
in
call
mov
ret
cmpsb
sub
pop
push
roll
shr
or
sub
popa
push
lret
repz
nop
mov
cmp
mov
mov
sbb
mov
outsb
xor
fldenv
xchg
pushf
int3
inc
fwait
dec
fst
pop
rclb
cmpsl
push
cltd
push
hlt
add
pop
out
inc
xchg
adc
dec
pushl
jbe
and
lcall
jge
jecxz
imul
pushf
xor
test
and
mov
xor
rcrl
mov
adc
hlt
jo
fbstp
movsl
xor
push
es
mov
or
mov
jne
cmp
and
jns
xor
jmp
daa
cmp
cwtl
rorb
test
shll
mov
pushf
daa
ljmp
adc
inc
pop
movsb
lods
pusha
in
and
insl
push
cs
flds
xchg
dec
outsb
fcmovb
mov
mov
jl
mov
jno
scas
negb
jmp
inc
cmp
scas
sub
adc
sbb
jno
or
cmp
cmp
jo
loope
jbe
testb
mov
in
and
in
out
js
popa
divl
lock
cmp
fldt
jmp
addr16
mov
jle
clc
dec
imul
and
pop
mov
inc
jp
mov
add
cmp
mov
ret
aam
aam
inc
es
or
add
sbb
sti
xchg
cmpsl
insl
xchg
ret
cmpsb
mov
popf
push
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
lcall
adc
adc
add
out
neg
and
enter
cmp
ja
pusha
mov
hlt
fistl
inc
lret
push
lods
clc
xchg
daa
stos
pop
sbb
inc
out
adc
xchg
or
dec
xchg
aad
fisubrl
xchg
jb
mov
add
cmp
lret
jmp
movsl
leave
xchg
gs
popa
inc
dec
lahf
das
fcompl
mov
xchg
add
sub
icebp
hlt
add
pop
jp
popf
fsubrl
xor
add
repnz
lcall
push
mov
dec
adc
lahf
pop
call
ljmp
sub
movsl
xor
adc
xor
lret
mov
mov
adc
enter
jnp
pop
jp
xchg
and
mov
out
aas
push
popf
popa
popl
fdivr
dec
xchg
mov
retw
xorb
mov
xlat
sahf
or
enter
push
add
and
xchg
push
push
lods
test
cmp
cmpsl
pusha
mov
out
out
js
stos
xor
xchg
lock
dec
or
daa
mov
or
mov
push
sub
xchg
xchg
mov
mov
scas
negb
push
mov
pushf
mov
negb
sbb
push
fs
mov
and
test
mov
movsb
push
clc
daa
stos
sub
push
js
dec
xchg
cwtl
xlat
pop
cwtl
dec
jne
jnp
mov
aam
or
imul
mov
xor
cwtl
fsubl
test
js
shl
roll
mov
mov
bound
lods
mov
imul
pandn
int
xchg
outsl
push
mov
lret
jl
fcomps
rolb
add
xchg
inc
pusha
and
fsin
mov
jne
popl
jbe
adc
xor
fmul
scas
add
push
xor
pop
aam
mov
popa
cmp
imull
xor
enter
push
insl
xchg
pop
jmp
inc
sahf
mov
or
push
incl
cmp
imul
add
mov
popa
inc
xchg
test
inc
rolb
fdivs
add
out
mov
cs
mov
inc
sub
adc
jg
pushf
stc
adc
mov
push
and
shll
shrl
call
jbe
adc
addr16
mov
mov
lods
pushf
mov
push
movsb
adc
lods
mov
add
xor
push
push
push
roll
inc
xchg
push
std
mull
mov
pop
sub
imul
sbb
das
push
ret
test
movsb
jo
popa
jne
sbbl
inc
out
sbb
fs
mov
lea
mov
testl
shll
mov
fcmovu
loop
jmp
pop
or
je
test
mov
pop
jmp
jecxz
aam
pop
js
das
mov
add
popa
fcoms
jae,pt
push
test
dec
and
push
insl
rorl
test
idiv
sub
inc
imull
inc
fs
shlb
mov
fucomp
jg
stc
mov
lea
and
cs
shrl
shlb
enter
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
cmp
adc
int
adc
enter
push
mov
xchg
ficompl
push
dec
dec
xor
add
jg
mov
iret
repz
outsb
ljmp
test
adc
test
add
pusha
aam
sbb
adcl
imul
and
xlat
pop
test
dec
and
in
enter
xchg
mov
cwtl
std
imul
ret
repnz
aas
fucomi
jecxz
out
popa
mov
insl
mov
cmp
mov
sub
xorl
xor
jno
fucomp
shll
cmp
mov
jns
cld
loop
cli
adc
xchg
and
xchg
fidivrl
mov
and
int
mov
inc
sahf
push
js
stc
ds
fs
mov
subl
add
incb
test
push
inc
cmp
cmpsl
xchg
push
dec
or
pop
push
xor
fwait
jecxz
dec
loop
lret
mov
cmp
enter
push
add
xor
inc
mov
sub
das
insb
push
push
lea
sbb
shrl
ret
sbb
xchg
mov
pop
sub
add
push
out
cli
and
mov
xorb
xchg
lock
mov
outsl
cmc
adc
push
push
or
lahf
xor
sbb
add
shl
test
add
xchg
add
iret
or
mov
sbb
fmull
dec
dec
mov
scas
sub
inc
pop
dec
rcrl
inc
mov
jae
push
ficoml
or
mov
ror
and
mov
add
leave
add
mov
stc
lock
push
stos
pop
movsb
dec
sub
pop
out
push
imul
mov
dec
shlb
xor
leave
mov
fisttpll
int
sbb
adc
push
ret
mov
jge
or
stos
mov
push
xlat
lea
xchg
push
loop
xchg
pop
sbb
pop
push
dec
and
xor
inc
js
loop
and
mov
mov
sbb
scas
or
push
out
add
sub
lcall
sub
xchg
adc
add
add
pop
mov
stos
dec
scas
or
lcall
out
mov
pop
xor
xchg
mov
pop
cmp
xchg
stc
mov
std
push
cltd
push
sbb
mov
js
mov
mov
jge
adc
xor
shrb
xchg
addr16
push
lret
dec
rolb
sbb
dec
xor
sub
mov
cmc
gs
fstl
xor
add
jns
push
xchg
xor
push
nop
loop
mov
cmpsb
xor
dec
daa
std
cs
mov
pop
mov
lds
out
or
inc
dec
cmpsl
jb
inc
push
add
pop
pop
sbb
rcrl
mov
repz
add
lahf
test
test
mov
rcl
xchg
sti
lds
pop
or
mov
mov
clc
cld
jo
repnz
pusha
inc
mov
pop
xor
movsb
pop
popf
adc
fsubs
fldcw
sbb
jno
jmp
stos
inc
stos
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
pop
js
insb
push
jl
adc
adc
adc
mov
add
scas
fisttps
cmp
xorb
adc
ret
pop
pop
in
jg
in
push
push
add
insb
push
push
fildl
xchg
dec
lods
push
cmpsb
push
cltd
adc
or
or
mov
daa
fisubl
sbb
shrl
and
lahf
cmp
cwtl
pusha
pop
sbb
inc
aad
add
add
jo
sbb
sub
cli
lret
hlt
adc
xchg
jp
mov
faddl
data16
inc
mov
push
fsub
jp
mov
lret
push
sbb
insl
or
mov
mov
les
mov
shrb
xchg
sbb
popa
int
insb
shr
or
out
fs
add
subb
lea
add
xor
dec
jg
jg
sbb
loopne
or
mov
rcrl
pop
and
orb
xor
clc
cmp
pop
xor
ret
shrl
enter
paddq
mov
addb
push
inc
int3
push
scas
bound
xchg
ljmp
mov
push
repnz
dec
dec
outsl
repz
js
xchg
xchg
push
xchg
xor
scas
dec
sub
mov
fisubrs
push
ret
lods
ret
out
movsl
adc
or
movsb
pushf
das
cmpsl
adc
jo
and
inc
notb
fwait
add
cltd
push
out
mov
dec
inc
ja
nop
lock
push
insb
bound
jle
push
jmp
notl
inc
mov
sbb
mov
imul
das
shrb
pop
pusha
push
mov
ret
mov
pushf
out
and
dec
aam
rcrl
pop
data16
es
mov
jmp
lahf
out
dec
xor
push
xor
mov
sbb
lods
push
insl
xchg
add
fadds
lock
sub
jo
sti
mov
xlat
fisubrl
xchg
shlb
shrb
fildll
imul
nop
cmp
xchg
xchg
mov
pop
sub
push
mov
test
icebp
jl
adc
push
lahf
xor
into
popl
or
jp
mov
push
push
xor
xor
inc
cmpsl
stos
xlat
je
movsb
mov
out
popa
outsb
sub
mov
and
std
stos
sub
nop
jne
aaa
mov
rcrb
leave
add
inc
dec
je
jg
xor
fsts
sbb
imul
cmp
out
or
addr16
popf
cltd
pop
cmpsl
inc
test
icebp
sbb
aam
in
cmp
push
sarb
jnp
repz
shll
scas
mov
imul
pushf
adc
dec
aam
fdivr
cmp
adc
xor
jge
dec
jmp
jbe
shr
pop
mov
or
inc
dec
in
imul
enter
mov
push
ja
stos
jle
pop
push
in
or
fstps
lcall
sar
xchg
scas
jno
out
sub
mov
add
mov
jmp
cmp
clc
out
repnz
adc
push
jns
fdivs
fwait
pop
ja
lods
sbb
mov
addb
stos
mov
mov
xchg
xchg
xor
push
sub
pop
mov
xchg
pusha
add
out
mov
cmp
mov
xchg
adc
cmp
or
inc
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
sar
sti
jle
je
adc
adc
adc
iret
xchg
pop
inc
in
lret
sub
aad
pop
cmp
cmc
jns
sarl
xchg
scas
out
jg
lea
add
pop
mov
push
mov
cmc
dec
pop
push
insb
xor
sbb
jg
pop
jns
push
imulb
sub
push
pop
mov
out
inc
cwtl
or
shlb
imul
decl
push
enter
jns
popf
scas
js
arpl
aas
jne
loope
fs
lahf
imul
mov
lods
leave
lods
insl
aam
and
clc
push
mov
pop
xlat
addr16
leave
xor
rolb
div
adc
inc
xchg
sbb
sbb
rolb
xchg
adc
loopne
mov
cwtl
lock
cwtl
fisubl
out
mov
xchg
or
xor
jge
dec
inc
mov
jns
xchg
iret
ret
cmp
popa
scas
imul
jne
pop
push
mov
in
pushf
dec
cld
js
loope
or
sti
xchg
lds
add
pop
pop
inc
rorl
les
push
or
xchg
sbb
cmp
scas
mov
neg
jne
mov
jmp
xabort
fldcw
lds
cmp
push
fistps
inc
test
shl
cmpb
jno
out
push
lods
movsb
jns
push
ja
out
test
mov
imul
scas
push
push
fimull
adc
sti
mov
sub
rcll
pop
mov
loope
sti
cmp
in
rcl
xchg
js
xchg
push
push
xor
pop
mov
insb
fistl
mov
rorb
add
sbb
push
insb
aas
rol
bnd
sbb
pop
pop
std
mov
test
xchg
insb
pop
sub
xor
sti
pop
inc
out
add
ja
mov
fs
testb
popf
mov
fs
int3
adc
sub
mov
push
cmpsl
inc
aad
cmpsl
movsl
daa
and
repz
pushf
mov
mov
xor
test
xchg
dec
jle
jle
daa
mov
pop
insl
jg
aas
pop
call
aad
mov
add
outsb
dec
push
aaa
sbb
pop
pop
jle
stos
jb
or
and
mov
test
test
enter
xor
mov
mov
fisubs
sbb
xor
stc
cmpsb
nop
out
mov
call
rclb
testl
dec
push
jno
xchg
daa
or
lds
adc
pop
mov
xchg
push
adc
lcall
adc
cmc
sbb
sub
mov
icebp
fwait
lock
pop
movsb
fistps
ss
shll
cwtl
scas
scas
and
xor
mov
aas
jne
mov
mov
std
mov
subl
icebp
leave
sbb
add
jp,pn
mov
or
out
mov
sbb
jmp
js
mov
sub
pop
call
mov
test
dec
mov
cmpsl
fs
stos
sub
sbb
add
adc
test
loope
pushf
fistpll
mov
fnstenv
jge
cmp
mov
inc
jno
mov
fcoml
movsl
push
mov
adc
shrd
jmp
ja
jle
sub
xchg
mov
in
test
jno
adc
int
adc
sbb
mov
outsl
enter
xor
js
fmulp
out
sub
in
lods
mov
adc
push
pop
scas
cmpsb
ss
xlat
leave
movsb
dec
faddl
jae
loopne
mov
cs
mov
loope
fldt
xchg
sbb
mov
mov
mov
in
mov
mov
adc
mov
dec
das
je
push
je
js
push
jo
pop
repz
leave
push
cwtl
enter
inc
jnp
fcoms
cmc
push
roll
ds
sub
mov
add
or
ret
clc
ds
mov
mov
loope
stc
lahf
bound
push
daa
mov
sbb
mov
push
sbb
and
xor
shll
cmp
xchg
jno
cmp
lods
or
cmpsl
lock
sub
enter
iret
add
jno
in
test
sbb
push
into
inc
fistpll
enter
push
xlat
and
xor
ficoml
sbb
inc
hlt
lret
jnp
cmovne
pop
add
dec
cli
cltd
cmpsb
xchg
xchg
push
mov
outsl
adc
dec
aad
pop
aad
out
xor
mov
fsubl
scas
add
or
in
movsb
xor
pushf
fcompl
sub
add
imul
orl
mov
mov
insl
jo
test
shrb
ret
dec
cmp
repz
adc
pop
enter
inc
sbb
leave
lcall
mov
call
mov
push
xchg
cmpb
insl
jne
cmp
sub
filds
insl
ja
jmp
mov
loopne
ja
fcmovbe
inc
mov
pop
adc
cli
sbb
and
roll
pusha
cmp
inc
mov
mov
scas
and
sub
popf
aaa
test
outsb
sbb
lods
pop
mov
dec
das
mov
shrb
xchg
lea
xlat
add
mov
enter
rep
and
mov
sub
popa
adc
movsb
jns
xor
inc
xor
sbb
imul
pop
sub
aam
push
sahf
stos
xor
adc
or
sti
lahf
daa
sub
das
lret
test
pusha
mov
xor
aaa
mov
pop
or
jecxz
add
test
cmp
cmp
mov
movsb
pop
loope
enter
jae
test
push
js
dec
dec
inc
dec
add
sbb
dec
test
mov
loopne
jmp
push
fsubrs
sahf
jmp
mov
test
fcompl
je
mov
sbb
cbtw
mov
xchg
mov
sti
stos
push
inc
in
xor
movsl
lods
xchg
call
enter
lret
lcall
movsb
lret
shll
sti
rcl
xor
xor
adc
gs
insl
sub
jg
jp
sub
aas
xlat
out
fcmovbe
mov
insb
add
lods
mov
add
pop
cmp
stos
inc
xor
jns
mov
insl
pushf
shrb
out
dec
cmp
cli
test
pop
leave
enter
ret
xchg
scas
inc
adc
sbb
push
xor
dec
rcl
add
lods
lock
xchg
add
rclb
sbb
add
out
push
js
cmp
add
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
sub
insb
and
adc
int
adc
jp
xor
cmc
xchg
push
jbe
in
dec
sub
push
loop
sub
pop
loopne
fdivl
xchg
cld
test
cltd
xchg
lds
or
jg
dec
lret
pop
or
jnp
addr16
sti
lret
je
push
lahf
lcall
jns
adc
lods
push
test
icebp
dec
mov
iret
pop
loop
pop
and
adc
and
mov
pop
je
arpl
aad
pop
sahf
out
nop
or
jbe
or
jne
ss
pop
inc
setns
mov
pop
decl
je
cmp
rcrl
test
xchg
and
orb
ret
enter
out
adc
cmpsb
and
xchg
cmpsb
loop
lret
or
jnp
movsb
ret
xorb
mov
and
xchg
pop
lahf
mov
sbbb
in
adc
push
xor
jge
testb
aaa
ss
mov
cmp
cmp
cltd
inc
loope
sub
lods
cmp
add
enter
xchg
insl
pusha
std
push
shrl
hlt
pusha
push
push
pop
mov
rol
js
xor
mov
mov
xor
ljmp
jb
inc
mov
add
push
pop
adc
movsl
push
out
and
idiv
adc
lahf
aas
nop
xor
push
aad
test
sbb
scas
popf
hlt
xor
or
scas
imul
bound
jge
xchg
lret
mov
pop
sbb
sub
and
jb
mov
fstpl
push
stc
xchg
mov
mov
ficoms
daa
dec
jg
pop
nop
enter
push
ds
mov
hlt
aad
call
mov
xchg
mov
xor
cmovns
adc
fnstcw
shl
stos
repz
jecxz
sbb
leave
or
push
xor
inc
jae
ffreep
push
xor
jp
fnsave
ljmp
push
shrl
jne
cmpsl
movsb
sbb
mov
jae
push
out
shll
lcall
loope
mov
pushf
out
lret
incl
cmp
pusha
std
jp
out
test
in
mov
call
mov
pop
stos
rolb
and
add
inc
mov
push
pop
jne
sbb
pop
and
js
push
and
sbb
sub
sbb
pop
jne
pop
arpl
addb
pop
jle
idiv
arpl
xor
jg
sbbb
jb
icebp
flds
int3
pop
mov
leave
and
cmpsl
leave
sub
push
mov
pop
mov
call
les
add
cmp
xchg
cmp
xor
xor
divb
ja
and
adc
les
addl
add
push
xchg
not
std
sbb
aam
in
add
inc
arpl
cli
enter
add
xor
hlt
pop
sub
sub
scas
fisttpl
out
mov
mov
xlat
scas
inc
lret
xchg
and
outsl
mov
lds
jle
sbb
mov
movsl
sar
cmp
push
or
scas
push
mov
xorl
out
roll
push
cmp
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
mov
adc
push
adc
adc
sub
or
and
sbb
hlt
xchg
inc
mov
movsb
inc
inc
fistpll
inc
aaa
mov
sub
arpl
push
cmpsl
idivb
call
inc
xor
mov
lods
les
mov
loop
pusha
movsb
aad
or
push
sub
lea
sbb
loope
insb
dec
cld
add
mov
cmpl
push
jmp
adc
dec
add
add
jge
aam
mull
mov
jns
shr
add
xor
or
stos
testl
xor
aam
sbb
shl
mov
xor
sub
scas
loopne
aad
fst
rorb
lret
xchg
inc
adc
push
cld
scas
xlat
call
jns
loope
inc
insl
sbb
fidivrs
xchg
jmp
sbb
aam
adc
ds
rol
jp
hlt
add
inc
mov
and
ficoml
mov
inc
push
mov
loop
mov
mov
push
es
ret
fs
sbb
popf
push
jle
ja
shll
out
dec
int
add
dec
jge
mov
cmp
in
lods
xchg
mov
sub
int3
pop
cmp
pop
sarb
jmp
mov
mov
adc
test
mov
or
leave
mov
scas
out
jge,pt
sbb
lock
mov
push
je
cmp
loopne
xchg
jge
adc
es
lock
mov
cmp
dec
loopne
ret
andb
rorl
add
mov
int
stc
int3
xlat
psubd
ret
lods
cmp
cmp
test
inc
stos
or
lods
call
out
popf
mov
xchg
jns
and
xchg
mov
xchg
mov
and
adc
push
aas
aas
mov
cli
mov
test
mov
mov
inc
fdivs
pop
pop
or
sbb
ret
inc
inc
mov
fdivrp
ds
shl
sahf
les
adc
stos
movsl
and
xor
jmp
sub
inc
fwait
mov
xchg
pushf
xchg
inc
ss
push
enter
mov
popa
push
xlat
je
sbb
shll
cmp
test
jne
push
fistpl
repz
popa
xor
ja
ds
mov
imul
mov
jne
popa
dec
or
ret
lret
add
js
test
hlt
sbb
push
dec
scas
jg
into
sub
mov
movl
shr
pop
clc
int3
negl
hlt
mov
xchg
cmp
sahf
push
arpl
rcrl
rcrb
push
aaa
lret
adc
mov
sbb
test
dec
or
stc
add
lods
xor
ret
xchg
bnd
cmp
cld
sbb
das
out
mov
or
adc
jno
rcr
or
fiaddl
shrl
lret
fs
cmp
and
jl
xchg
pop
jmp
xchg
add
roll
xchg
fisubs
scas
jbe
mov
cli
sub
dec
icebp
nop
lret
pop
inc
loop
out
pop
xlat
add
add
das
or
jne
dec
add
dec
push
lds
sbb
aas
cld
xchg
outsb
enter
clc
insb
in
cld
lret
mov
mov
sub
cmp
inc
out
mov
shl
cmpsb
movsl
mov
sbb
push
xchg
cmp
out
std
mov
lock
and
sti
js
adc
cmp
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
imul
adc
adc
adc
loope
dec
inc
test
insb
scas
inc
mov
mov
incb
orl
lcall
in
sbb
adc
icebp
fs
aas
xchg
daa
mov
xor
hlt
xchg
adc
pop
lret
mov
mov
stos
les
adc
mov
stos
out
lds
cmp
inc
nop
add
sbb
mov
adc
xor
popf
test
iret
fwait
jle
mov
or
sbb
ficoml
cmpsl
adc
in
hlt
mov
in
pusha
jb
xchg
in
or
and
inc
xor
lret
adc
out
andl
pop
cmp
push
add
lds
out
fidivs
int
sub
rorb
xchg
jmp
pop
or
sub
or
cld
inc
clc
aas
imul
test
inc
inc
daa
sub
add
and
out
lea
in
mov
cmpsl
int
andl
lods
mov
cli
out
arpl
lret
dec
fldcw
xchg
cmpsl
sub
dec
fadds
in
ror
push
jge
mov
lock
mov
push
loopne
push
sub
jno
fwait
lcall
add
stc
lret
aad
inc
mov
xchg
pusha
jmp
pop
pop
int3
pop
out
sbb
cmp
addr16
push
cmp
xchg
lcall
jmp
test
imul
xor
pop
xchg
mov
movsb
andl
cmp
repz
outsl
xchg
mov
int3
mov
cmp
push
mov
out
and
das
add
div
imul
mov
lods
rcr
and
mov
stc
nop
jg
nop
dec
sub
aas
inc
loope
dec
inc
jb
sub
rclb
iret
jecxz
ds
cmp
outsb
pop
sbb
into
or
fcmovb
in
adc
cwtl
dec
enter
cli
popa
leave
push
mov
jp
xor
fsubrp
mov
mov
mov
pop
je
or
sbb
inc
xor
ljmp
je
xchg
add
push
adc
int3
cmp
jge
mov
dec
loopne
lcall
cld
add
adc
es
out
imul
and
mov
cld
insl
mov
cmp
mov
mov
scas
fidivl
sbb
popf
fists
add
cli
pop
addr16
xor
inc
test
mov
sbb
fldt
pop
dec
ljmp
cltd
andb
test
idivb
pushw
nop
jnp
adc
and
call
lahf
cli
jmp
enter
add
mov
jecxz
iret
inc
fwait
sbb
sarb
test
mov
scas
stos
enter
inc
mov
jle
icebp
cmpsl
call
mov
divb
fdivs
pop
or
dec
ret
nop
enter
leave
std
mov
pop
or
cltd
cmp
leave
sahf
rcl
mov
push
xor
dec
nop
mov
mov
jnp
adc
les
ss
int
testb
mov
inc
mov
inc
and
dec
loop
push
mov
and
push
xchg
sub
ret
adc
mov
lret
out
mov
mov
cmp
jg
mov
addl
fwait
leave
sub
div
xchg
mov
cld
jecxz
inc
fcompl
or
jmp
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
mov
insb
xor
adc
adc
adc
pop
ret
das
movsl
hlt
push
cli
jbe
cltd
lods
scas
cmp
scas
mov
xor
add
loope
mov
imul
mov
jns
shr
loop
data16
jmp
xchg
aam
adc
cmp
sbb
in
and
scas
push
mov
jle
and
lea
add
stos
mov
addr16
rorb
rorb
scas
inc
push
cltd
mov
ss
dec
out
insl
mov
push
outsl
push
or
mov
inc
repnz
sar
pop
into
mov
out
popf
pushf
xor
jmp
xchg
adc
fisttpll
cs
xchg
sub
cmpb
in
xor
xchg
imul
pop
cltd
cmp
stos
jns
mov
cmp
fldl
mov
enter
jl
repz
and
fsts
mov
push
daa
int3
xor
iret
add
pop
pop
inc
sbbb
cltd
cwtl
data16
push
xchg
mov
lods
xor
inc
or
sbb
fcoms
jae
ret
into
outsl
cmpsb
push
ljmp
push
dec
cmp
lret
dec
movsb
scas
push
mov
push
pop
cmp
mov
push
xor
xor
lods
outsl
push
mov
jg
das
push
call
cmp
movsl
and
call
iret
jb
inc
into
adc
xchg
imul
aad
mov
mov
shlb
jle
rorl
adc
scas
in
rcll
mov
mov
dec
fistps
clc
fsubrl
movsb
mov
fistl
lret
mov
or
jmp
inc
and
into
rorb
outsl
into
and
movsb
push
insl
js
gs
adc
push
xchg
cmp
add
xchg
das
mov
push
scas
lds
inc
push
push
cmc
xchg
add
dec
mov
and
cltd
jge
adc
enter
xor
xchg
aas
cmp
daa
jg
inc
insb
jbe
sbb
pushf
inc
pop
rorl
xchg
xor
sbb
cmc
jbe
outsl
push
mov
outsl
adc
push
cmp
stc
mov
add
adc
in
pop
mov
pop
rcr
mov
jg
or
push
cli
jo
add
push
push
xchg
je
fmul
cld
sbb
mov
cmp
and
in
push
jo
scas
mov
mov
divl
mov
add
lds
cli
shlb
and
movsl
addr16
mov
xor
stos
inc
cs
subb
mov
xchg
adc
inc
or
stc
cmp
or
stos
add
xchg
pop
aas
es
aam
incb
xor
xor
iret
push
dec
nop
shlb
add
pushf
mov
mov
or
jnp
decl
shll
adc
cmp
adc
push
xor
pop
jns
fsubl
aaa
xchg
inc
les
nop
fdiv
inc
pop
mov
sbb
jle
ss
jmp
aaa
in
lods
cltd
out
mov
das
jmp
outsb
inc
push
cmpsl
dec
xlat
stos
adc
sub
or
jge
sub
imul
mov
clc
loopne
and
nop
or
mov
inc
adc
mov
pusha
pop
in
add
jae
xchg
cli
lds
jge
aas
pop
xor
mov
pop
xor
mov
jnp
jge
scas
lock
dec
xchg
pop
xchg
push
and
mov
sbb
jg
jns
rcll
cmpsb
mov
xor
jge
popf
jne
ret
mov
imul
dec
mov
inc
mov
ja
hlt
iret
push
arpl
jno
dec
xor
cmp
ret
outsb
sub
mov
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
hlt
and
inc
dec
adc
xor
adc
jmp
pop
jl
push
cmc
adc
jno
stc
pop
jg
jle
mov
xor
imulb
push
cmp
pop
aad
mov
xlat
fdivl
cs
fcom
jo
movsl
jp
in
aas
cmp
imul
jecxz
icebp
fmull
pop
out
mov
jbe
or
rclb
daa
sub
sub
cmp
test
lea
or
sahf
andb
add
test
sbb
add
cmp
adc
mov
mov
ljmp
hlt
cmp
hlt
mov
iret
or
xor
adc
lret
fucomip
stos
push
jp
or
addl
sbb
xor
push
sub
repnz
arpl
push
cmp
repnz
xorb
and
adc
jo
mov
cmp
jge
js
mov
add
aad
cmp
fistpll
cmp
aaa
cli
mov
les
inc
sbb
pop
arpl
dec
call
jns
icebp
popf
cs
lea
cmp
out
xchg
mov
inc
lret
adc
jl
jnp
inc
fsubs
pop
test
pop
mov
jmp
icebp
sub
stos
mov
inc
stos
aad
pushf
pusha
stc
sbb
xor
xor
pop
mov
xchg
out
inc
xlat
jbe
xchg
std
inc
push
adc
sub
aam
sbb
mov
xchg
mov
sub
xchg
push
mov
shll
daa
popa
mov
hlt
shll
jecxz
popf
mov
popa
jno
ss
and
jo
das
add
mov
adc
popf
mov
and
mov
push
inc
xchg
xchg
pop
inc
ss
jnp
fcomps
inc
ret
pop
shr
bound
jp
subl
push
rcr
stos
xor
js
scas
add
add
push
popa
sub
aas
jp
mov
jae
adc
xchg
xchg
jl
jg
arpl
pop
imull
add
xchg
xlat
push
mov
lcall
jae
jnp
inc
or
cmp
repz
out
arpl
mov
sub
les
adc
cmp
pop
shr
loop
inc
mov
sahf
lret
test
push
ror
mov
cmc
test
ret
scas
out
mov
out
push
push
mov
fmull
inc
jmp
xchg
out
mov
pop
mov
cmc
dec
sarl
dec
ret
xchg
icebp
mov
mov
out
insb
pop
fcomp
sub
sbb
adc
jb
push
and
mov
or
inc
ret
jmp
test
dec
inc
xorb
xor
mov
icebp
outsl
int3
sub
mov
scas
jns
cmp
fisubrl
mov
cmpsb
imul
pushf
pause
in
cs
lcall
or
sbb
sub
imul
ret
in
mov
les
add
xchg
push
aas
sbb
in
inc
cmp
cmp
dec
cmp
xchg
es
mov
push
fsubr
enter
and
mov
jmp
mov
insb
jb
shll
jp
leave
cmc
arpl
imul
jo,pt
ret
inc
insb
add
sarl
loopne
ja
xor
lods
xor
cmpsb
fcmovnu
jge
loope
jbe
repnz
mov
or
inc
dec
icebp
sub
rorl
js
mov
adc
fs
dec
push
hlt
leave
scas
loope
iret
push
sbb
jns
loopne
add
xchg
sahf
sub
cmp
xor
sbb
hlt
mov
mov
inc
xor
sub
stc
mov
sub
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
add
fistpl
pop
jo
xchg
mov
enter
xchg
sbb
dec
pop
mov
fnstsw
and
cmp
aad
andb
jne
fsts
mov
inc
cld
cmpxchg
push
mov
or
leave
xchg
repnz
and
add
mov
mov
sub
mov
lahf
adc
in
add
inc
clc
jns
or
repnz
cmp
pop
daa
sbb
inc
jmp
or
xlat
lds
jno
push
push
or
cmp
jo
xlat
add
adc
sub
out
sbb
dec
pushl
rol
jns
das
mov
push
jb
push
cwtl
sbb
adc
cwtl
aad
sub
lds
dec
fcoms
pop
cld
stos
cmp
push
pushf
jns
dec
jne
push
or
push
mov
test
mov
and
pop
ja
mov
push
adc
adc
jmp
xor
add
sub
repz
pop
das
jg
adc
push
or
clc
lods
test
shll
out
push
outsl
cmp
sbb
xchg
addr16
dec
enter
call
lahf
in
push
test
fisttpl
mov
push
xchg
xlat
jmp
cli
mov
cmpsb
ret
cmc
xchg
jnp
outsl
pop
mov
xor
arpl
aaa
cld
xchg
mov
sub
add
ret
inc
and
out
outsb
insl
in
add
dec
push
push
xor
push
pop
cmc
mov
jno
mov
sahf
out
push
test
jo
mov
mov
inc
in
cmp
adc
jmp
mov
repz
inc
pop
push
adc
fcom
pop
iret
mov
cmp
or
push
jo
jnp
add
imul
push
or
aaa
dec
ret
lods
das
dec
mov
int
xchg
xchg
fs
mov
outsl
ds
sbb
arpl
mov
adc
adc
leave
stos
push
jp
ja
mov
push
rcll
enter
inc
lds
adc
out
lahf
ds
sbb
ret
inc
and
int
stc
outsl
aam
or
jns
jg
dec
js
dec
mov
push
add
dec
adc
data16
stc
ret
out
push
xor
sti
aam
jecxz
jnp
mov
jmp
push
testb
lret
movsb
jl
nop
jecxz
or
icebp
and
mov
pop
data16
dec
aad
add
fiadds
jae
addr16
xor
out
ss
das
fistpll
movsl
into
mov
pop
sub
fstpt
sbb
loopne
test
cwtl
test
fnop
sti
xor
lcall
add
cmpsl
cmp
imul
mov
jne
mov
mov
in
mov
cmp
push
daa
mov
hlt
mov
test
pop
cmp
cwtl
push
out
fildl
mov
mov
mov
pushl
adc
aas
and
xor
jnp
lahf
aas
xchg
test
jno
xor
sub
test
imul
movsb
ret
adc
inc
push
adc
outsl
lahf
mov
mov
xor
push
inc
and
ljmp
fs
cmp
or
xor
mov
jecxz
push
add
fcomps
xchg
xchg
imul
cmpsl
mul
xchg
pop
pop
call
leave
pop
psraw
mov
adc
out
mov
stos
pop
insl
cmc
js
jge
cld
add
adc
push
inc
or
in
dec
mov
and
cmpsl
bound
cs
idivb
xor
inc
mov
and
jno
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
adc
adc
adc
adc
push
loopne
push
cmp
cs
or
outsb
stc
int3
gs
mov
fistps
test
mov
aaa
dec
mov
mov
hlt
dec
repnz
mov
loopne
mov
or
lds
xchg
dec
mov
mov
adc
mov
add
shll
pop
mov
ret
pop
push
loope
jne
popf
mov
xchg
fwait
fs
shll
push
lods
lock
cs
jb
jbe
pusha
mov
fs
dec
jmp
rcrl
lock
mov
sub
cmp
scas
out
inc
inc
xchg
aas
fcmovu
push
mov
gs
dec
mov
insl
jns
dec
test
mov
pop
pop
sub
inc
pushf
sub
and
cmp
outsb
cld
xchg
sbb
jl
jns
jp
mov
fimuls
mov
xor
push
out
popf
icebp
popf
adc
test
imul
rcll
cmc
or
rclb
dec
mov
in
ds
pop
pop
es
aad
sub
pop
insl
mov
dec
and
repz
mov
cmp
inc
push
mov
addb
imul
mov
push
adc
pop
mov
sahf
add
loopne
rcrb
icebp
and
mov
orps
andb
shlb
sub
jo
sbb
add
cmp
stc
push
cmp
stc
mov
push
push
fbstp
adc
lret
adc
mov
inc
inc
shlb
clc
mov
mov
push
mov
sbb
jne
dec
mov
clc
call
push
test
shrl
cmpsl
fsub
push
pop
sub
jmp
shr
fistpl
dec
push
repz
jle
fdecstp
pop
inc
push
xchg
pushf
mov
pop
jmp
push
pop
neg
scas
push
in
in
sub
sub
fdivrs
add
lcall
xor
pop
das
nopl
or
dec
push
test
not
xchg
imulb
jno
and
xor
jb
push
sub
add
in
lret
dec
fs
push
scas
sbb
pop
push
and
jg
mov
shrb
jae
cmc
cmpsb
push
repz
adc
cmc
adc
cmpsl
rcrb
loope
adc
xor
fldl
inc
rcl
mov
cmp
dec
orl
mov
or
mov
in
jns
sub
lock
idivl
subl
push
sub
imul
outsb
mov
cmpsb
pop
adc
dec
push
notb
dec
push
jmp
aad
js
jnp
call
popa
sub
mov
add
jg
fs
popf
mov
mov
sar
push
add
dec
ja
pop
pushf
dec
andb
mov
repz
cmp
jmp
cmp
cwtl
push
xlat
lahf
pop
xor
jle
xor
andl
iret
shrl
movsb
add
testl
pop
dec
or
jne
sarb
add
ljmp
push
jne
push
or
aam
call
mov
lods
das
test
and
xchg
xor
int
nop
sbb
cli
push
cmp
sub
cwtl
lahf
mov
decb
mov
aad
push
shrb
or
cltd
lea
xchg
stc
and
dec
dec
int3
and
xchg
call
fdivrl
sbb
ret
add
dec
fdivp
mov
pop
ja
mov
es
xor
cltd
insb
movsl
call
cmp
in
pusha
push
dec
lock
xchg
call
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
xor
fcomps
xor
or
jno
fmuls
in
jg
xchg
in
jo
repz
adc
cmp
dec
repz
iret
and
pop
or
jno
or
pop
add
int
les
xor
adc
dec
dec
sub
scas
loopne
add
or
outsb
dec
pop
cwtl
or
ss
sub
and
popa
jo
adc
inc
je
adc
les
int
mov
mov
cltd
jge
andb
mov
mov
sbb
pop
push
aam
xlat
mov
sub
gs
mov
mov
lods
inc
sbb
dec
pop
xor
popa
out
mov
fdivr
jns
mov
push
dec
pop
decl
addr16
cltd
sub
push
adc
outsl
push
push
push
clc
movsb
test
adc
cmp
mov
pop
cmpsl
repz
imul
inc
mov
call
mov
out
shrb
mov
lcall
loope
in
inc
add
shrl
lods
insl
mov
pop
sub
loop
mov
jmp
jb,pt
dec
repz
jle
cltd
in
or
dec
insl
push
xchg
fcoml
je
ret
push
movb
mov
cwtl
jl
add
xchg
mov
push
jg
push
xor
and
iret
mov
lahf
ds
xorb
int3
adc
xchg
enter
loop
inc
popf
mov
adc
aaa
sub
push
scas
out
pusha
push
inc
mov
test
mov
rcrl
shlb
scas
ja
inc
xor
dec
xor
clc
xor
add
sub
push
or
xlat
push
sub
mov
sbb
and
mov
setno
cmp
js
xor
test
adc
jl
cmp
push
mov
and
xor
pop
out
ret
jbe
out
mov
xchg
xor
adc
movsb
andl
cld
or
nop
mov
mov
call
aam
fs
fwait
mov
mov
mov
dec
rclb
insb
dec
jl
mov
fsubrl
or
jle
sti
cwtl
xchg
and
mov
mov
mov
fwait
mov
lret
mov
test
and
aam
dec
dec
incl
fiaddl
jecxz
sarb
cmp
repz
xor
mov
mov
mov
push
mov
sub
or
cwtl
add
push
icebp
fsubrl
je
gs
sti
movsb
leave
dec
sbb
adc
ds
mov
inc
push
orb
inc
push
in
out
adc
dec
dec
jae
pop
cmp
inc
cmp
sub
mov
cmp
dec
xchg
mov
mov
into
cltd
and
outsb
push
dec
stos
call
pop
push
lcall
mov
into
fnsave
outsb
push
xor
stos
inc
push
es
out
nop
push
pop
pop
insl
sub
push
lret
add
push
pop
mov
and
inc
xor
add
xor
fsubr
fimull
pop
add
or
add
add
in
xor
xchg
pop
mov
mov
out
add
mov
mov
fs
add
movsb
sti
jle
clc
xor
fidivrl
dec
test
mov
add
movsb
mov
dec
pop
loop
out
pop
sahf
adc
or
stc
movsb
push
data16
mov
mov
xor
fsts
test
add
mov
rolb
xor
jmp
mov
popa
lcall
leave
xor
xor
adc
fcoms
pushf
sbb
jmp
mov
aas
aaa
xchg
stos
in
jmp
and
mov
jl
xor
nop
push
loop
cmp
negl
dec
push
sbb
mov
sti
jns
and
fimuls
dec
mov
repnz
cmc
and
jne
xchg
lret
pop
cmp
mov
cmpsb
loop
mov
or
fnsetpm(287
mov
dec
fdiv
clc
add
cmpsl
insb
mov
lret
adc
or
lret
int
jmp
jno
ja
aas
lock
ret
out
rclb
fwait
mov
jge
mov
loop
ror
or
je
jno
sbb
inc
fldt
xlat
sbb
out
divb
mov
sarl
outsl
sbb
push
xchg
jecxz
inc
push
call
jl
jp
jae
jmp
call
je
jp
mov
add
add
jno
mov
insb
divl
adc
icebp
add
mov
inc
dec
ret
mov
shll
iret
add
add
lahf
lret
test
cmp
jp
lret
in
push
sti
push
idivb
sub
fcmovnbe
ret
ss
cli
or
imul
repz
mov
push
negb
xchg
mov
xchg
inc
inc
jnp
push
and
jo
push
add
enter
push
dec
sbb
fistps
cmove
and
lods
test
jo
popa
jo
into
sub
cmc
sub
mov
mov
cmp
add
or
shrl
xchg
pop
or
pop
add
gs
aaa
mov
gs
inc
lahf
xchg
ret
rolb
aas
inc
add
pop
push
mov
add
pushf
and
aaa
aas
bound
mov
cmp
aas
mov
cmc
sub
mul
dec
xor
pop
std
pop
pop
dec
xchg
ret
pop
mov
int
ja
dec
add
add
clc
stc
pusha
pop
sti
add
add
das
mov
mov
jl
dec
and
sbb
iret
insb
cmp
ds
cld
mov
data16
add
adc
dec
push
ret
fsubrs
push
ret
je
jmp
js
or
mov
lea
xchg
or
jp
pop
jno
cmovl
daa
fsubl
mov
dec
push
rcl
sub
mov
add
cmp
cmp
add
push
dec
xor
or
mov
dec
add
jmp
es
and
lcall
inc
andb
ljmp
adc
push
pop
pop
jae
lret
fwait
rclb
pop
xchg
sbb
repz
xor
hlt
das
dec
and
jg
arpl
or
dec
outsl
test
dec
mov
inc
popa
popa
cmp
lret
xchg
mov
cmpsl
inc
push
cmp
pop
and
in
mov
mov
mov
and
mov
rcrb
sub
mov
dec
sub
cltd
and
add
dec
imul
push
pop
push
in
loopne
aam
push
mov
scas
fbstp
mov
push
rcrl
sbbb
data16
pop
add
adc
shll
cmp
jb
imull
sbb
adc
jnp
test
push
jbe
mov
sti
mov
mov
adc
mov
or
scas
add
cmp
push
faddl
je
lods
jae
dec
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
shll
and
adc
movlps
shll
leave
test
outsl
inc
lock
push
mov
shlb
add
mov
into
jge
jle
xor
iret
add
mov
mov
sub
std
fdivs
fdecstp
insb
fsubrs
lret
addb
pusha
out
or
xchg
xchg
add
pop
cmp
pop
leave
xchg
push
into
mov
inc
mov
mov
test
lods
int3
lret
stos
mov
pusha
adc
jae
sahf
or
mov
cmp
push
xchg
and
mov
push
mov
pop
mov
xchg
push
je
mov
or
dec
das
lods
or
cmp
xchg
and
stos
decb
xchg
gs
sbb
das
aam
or
call
add
ja
div
push
out
orb
mov
and
dec
mov
mov
imulb
pop
or
dec
cmp
add
add
cmp
push
push
std
mov
in
pop
cltd
int3
sbb
sbb
stos
xchg
cmp
mov
add
iret
repnz
outsl
cmp
popa
or
andb
bound
shll
cli
xchg
cwtl
inc
insl
jmp
ret
inc
add
out
cmp
mov
aad
loopne
sub
sbb
ds
push
aam
add
lods
fcompl
decl
mov
sbb
mov
mov
pusha
xor
inc
ja
mov
fnstenv
cli
cmpsb
jb
inc
xchg
clc
dec
aam
or
sbb
repnz
std
pop
outsb
aam
xor
add
push
out
fs
cmp
inc
or
dec
movsb
push
mov
dec
testl
dec
bound
rolb
adc
int
sbb
or
scas
push
repz
xor
fdivrl
in
outsb
inc
mov
cmp
lcall
xchg
insb
jg
sub
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
mov
sbb
adc
movlps
sub
call
sbbl
imul
sbb
scas
jne
cmp
sub
or
aam
pop
push
inc
nop
jno
cmp
mov
dec
inc
stc
add
popf
pop
xchg
cmp
cmpsb
add
mov
or
ret
mov
popf
sbb
shrl
inc
dec
das
add
lcall
sub
outsl
mov
gs
icebp
les
call
dec
cmp
int3
xchg
fldl
sbb
adc
lcall
push
faddp
sahf
cs
into
mov
insl
xchg
and
out
inc
mov
lahf
inc
or
xlat
xchg
xchg
jne
cmc
sbb
fadd
add
inc
inc
std
jp
add
or
subl
cmp
repz
inc
or
insb
jmp
in
scas
movsl
int
and
mov
cld
or
ret
cmp
sbb
aam
xor
and
loop
add
push
push
inc
jmp
xor
fwait
mov
fdivrs
loop
add
ss
clc
aaa
xor
shll
mov
mov
lcall
or
mov
cmp
sbb
push
jns
lock
in
dec
adcb
shlb
jp
sbb
mov
scas
negb
jmp
test
push
push
jge
scas
jno
aaa
xchg
mov
jge
cmp
adc
pop
in
mov
jl
push
ret
adc
aas
jnp
xor
rolb
adc
push
bound
loope
xchg
js
cld
jb
jbe
mov
adcl
mov
push
lret
cltd
stos
ret
jbe
testl
faddl
faddl
aas
aad
mov
push
adc
sbb
leave
iret
cmp
mov
xlat
xorb
aad
ficoml
cmp
int3
jge
lgs
push
shrb
cld
jbe
push
or
push
cmp
int3
jg
pop
popf
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
push
ss
pop
sbb
adc
movlps
and
sbb
fimull
push
lods
adc
jmp
xor
sbb
jge
cli
pusha
shll
cmp
pop
lret
push
adcl
js
outsl
out
loopne
and
lea
jo
stos
pop
jne
lahf
lret
pop
nop
ficoml
cmpsb
pop
mov
add
mov
dec
xchg
in
lds
mov
push
or
clc
int3
cmp
roll
push
ror
jns
es
dec
scas
jecxz
add
rcrl
out
ja
pop
test
xchg
repnz
std
mov
pop
ljmp
mov
xor
mov
adc
mov
sub
loopne
push
movsb
outsb
clc
mov
lods
fbstp
mov
arpl
mov
dec
or
adc
xlat
sbb
clc
roll
adc
jmp
es
fdiv
cs
or
int3
jmp
movsl
mov
cs
fbld
push
rcll
outsb
xlat
mov
jge
rol
pop
mov
cmp
xor
pop
push
mov
push
ret
in
jle
fs
test
int
lahf
or
mov
icebp
enter
mov
xchg
in
pusha
push
mov
inc
push
sub
mov
push
scas
daa
in
orl
fistpll
adc
and
stc
cmc
insl
pop
pop
loopne
sub
push
ja
mov
mov
add
lahf
pop
aas
loop
xor
adc
lahf
xor
xchg
cmpsl
mov
xchg
outsl
jnp
sub
pop
dec
sbb
aas
xor
mov
ljmp
int3
mov
rcrl
hlt
aas
and
enter
aad
pop
movsl
inc
lods
repnz
decb
imul
xor
int
out
inc
daa
adc
adc
movsb
push
adc
inc
idivb
ret
mov
inc
jmp
jp
inc
stc
mov
pop
subb
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
fidivs
and
movlps
cmpb
sbb
cvtdq2ps
das
xlat
je
pop
rcr
repnz
push
mov
bound
mov
pop
daa
mov
sbb
popf
sub
add
dec
sub
xchg
imul
mov
push
outsb
push
jl
adc
xchg
pop
jmp
xchg
insb
stos
mov
les
cmp
js
xchg
mov
cs
pop
and
mov
push
adc
cmc
and
fldl
mov
xor
daa
push
push
cmp
incl
loope
cmp
dec
pop
xchg
in
adc
jne
ficomps
jo
sub
and
xchg
enter
adc
xchg
xor
lcall
cmpsb
mov
fidivrs
cmp
push
mov
jae
or
outsl
cmp
jl
push
lods
loopne
insb
out
lock
aaa
cmpsl
push
inc
insb
push
dec
fucomi
das
test
repnz
test
daa
shr
pop
out
sub
pop
das
and
ss
andl
xchg
push
and
pusha
loope
mov
mov
mov
jle
mov
jmp
lret
cmc
and
inc
bnd
jg
inc
jge
lock
or
inc
jl
mov
sub
out
arpl
fadds
cmp
cmp
lcall
inc
add
xor
orb
mov
aad
inc
rclb
sub
lret
iret
pop
dec
lea
std
adc
inc
pop
mov
movsl
xchg
add
int
loop
scas
xor
sub
ja
mov
cmpsb
mov
adc
cmc
mov
add
fcoml
push
push
or
dec
mov
jmp
popf
mov
xor
out
imul
cmp
inc
jae
add
pusha
mov
mov
bnd
test
popf
out
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
xor
in
adc
adc
movlps
scas
jb
loopne
test
in
hlt
je
or
jp
pop
hlt
add
int3
fistpl
pop
imul
cmp
popf
mov
mov
icebp
stc
sar
jo
stos
jg
stc
cltd
repz
adc
cmpsl
push
dec
ror
or
jnp,pn
imul
loopne
mov
fucomip
dec
mov
loop
lret
arpl
scas
mov
fcoml
mov
ret
jnp
int3
fwait
mov
or
adc
loope
push
in
pop
cld
or
push
in
insl
and
sub
jg
sub
cmpsb
inc
fwait
dec
jle
mov
addb
icebp
push
xor
inc
sarl
shrl
mov
adc
std
or
xchg
jl
mov
lods
dec
repnz
sahf
and
mul
loope
int
push
ljmp
mov
jae
hlt
les
adcl
pop
flds
inc
mov
pop
lahf
ds
xchg
pop
addl
or
cmc
mov
stos
loope
lcall
lcall
pop
in
add
seta
push
mov
xchg
push
dec
jg
xor
mov
or
push
sub
stos
idivl
ljmp
xchg
pop
xor
push
and
daa
gs
jp
cld
jbe
cmp
dec
loop
adc
mov
jle
add
js
leave
mov
test
addb
pusha
pop
xchg
sub
leave
sbb
jmp
xchg
inc
jge
in
add
add
mov
add
xchg
dec
aam
fcomps
lods
mov
and
push
imul
pop
insl
lcall
inc
daa
stc
mov
test
push
adc
cmp
loopne
rep
adc
fisttps
mov
inc
scas
push
push
and
jp
test
dec
rcll
cs
lcall
rcll
and
pop
int3
push
test
call
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
loope
in
sbb
mov
mov
or
out
pop
cmp
std
push
pop
pop
xor
in
loope
adc
mov
out
enter
xchg
loope
sbb
ds
movsl
dec
nop
fstl
lods
xchg
xchg
dec
shlb
in
movsl
int
push
mov
mov
push
shlb
shr
adc
xor
jno
push
pop
xor
dec
sub
mov
daa
cltd
jl
testl
shrl
push
xchg
inc
jmp
xor
xchg
pop
sub
cld
push
or
shl
inc
out
inc
and
mov
pushf
adc
jg
mov
outsl
mov
lods
call
mov
jl
add
outsb
fsubrp
mov
dec
mov
imul
push
adc
sub
dec
mov
gs
mov
lock
aaa
dec
mov
add
sti
loope
nop
imul
jb
out
mov
imul
dec
xchg
jge
xchg
push
xor
and
mov
push
stc
mov
push
sahf
xorb
out
push
idivb
push
ret
jbe
xchg
lcall
mov
cld
outsl
addr16
dec
adc
jmp
ud0
and
hlt
push
ret
pop
dec
cmp
and
lret
fs
inc
das
mov
jmp
jp
and
cmp
aaa
xchg
adc
push
ret
pusha
loopne
popa
push
or
add
dec
mov
imul
xor
adc
cld
scas
xor
xchg
cmc
in
inc
jmp
std
icebp
adc
jmp
sbb
pop
out
xor
or
shrb
add
mov
push
stc
test
mov
jnp
mov
ret
ret
aam
xorl
adc
push
lods
stc
mov
inc
frstor
sub
sbb
sbb
imul
loop
push
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
adc
push
or
adc
movlps
stc
jmp
pop
sbb
mov
pop
dec
inc
mov
aad
cwtl
in
jle
adc
xor
mov
sti
xchg
pop
in
loop
mov
sbb
movsb
dec
push
loope
stos
imul
or
cmp
stos
push
dec
pop
xchg
push
push
dec
test
loopne
dec
dec
leave
leave
push
cmpsl
das
sub
inc
sub
add
test
adc
mov
xchg
test
add
sti
lret
ret
mov
mov
jo
add
outsb
loope
imul
fs
push
jmp
out
in
mov
les
lcall
cltd
and
dec
je
negb
xchg
push
xchg
inc
loop
mov
mov
fistpll
int3
fcoms
pop
mov
std
adc
ret
data16
sub
mov
push
shrl
movsb
sbb
adc
mov
movsb
movsb
bound
xlat
sahf
mov
cmp
dec
dec
cltd
xchg
xor
pushf
daa
adcl
add
cmp
test
push
lahf
and
imul
push
adc
jg
mov
pop
fwait
push
in
sbb
mov
adc
lock
mov
test
xor
repnz
dec
arpl
cmpsl
xchg
add
leave
and
xchg
mov
in
jne
into
gs
pop
adc
ret
xor
inc
dec
or
pop
les
mov
js
out
and
ret
dec
cmpsl
rolb
test
ja
mov
ds
push
or
lea
mov
outsb
jle
enter
cmp
mov
xor
aas
nop
fisubl
addb
leave
jl
pop
xchg
or
loope
test
pop
ret
mov
jae
jns
pop
adc
mov
lret
sub
add
and
inc
xchg
add
orl
das
adc
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
addr16
call
mov
sbb
setp
xchg
fisubrl
orb
mov
arpl
fcoms
out
sbb
and
ljmp
push
mov
cld
add
jge
dec
sbb
adc
and
jp
cs
ret
arpl
mov
mov
fiadds
push
inc
aam
sbb
adc
cmp
jge
lahf
mov
aad
pop
push
jle
cmc
jnp
sbb
lahf
cmp
or
or
sub
inc
es
mov
aad
test
bnd
jbe
jne
daa
cmp
sbb
sti
adc
icebp
xchg
outsb
sbb
pop
sbb
pop
repnz
mov
pusha
rcll
dec
xlat
sub
add
cs
repz
sub
mov
mov
sar
out
push
mov
mull
push
arpl
xor
in
jle
xchg
mulb
mov
jl
jnp
cs
or
push
lret
xchg
push
xchg
mov
jo
sub
xor
shrl
mov
adc
lcall
mull
popa
add
xor
out
into
ds
pop
push
lcall
mov
mov
outsl
sub
int3
push
pop
gs
hlt
pusha
mov
dec
cmc
mov
aaa
add
or
stos
gs
movsb
clc
mov
ss
ljmp
pop
and
sub
jmp
lea
nop
sub
in
call
jns
jmp
push
fldpi
push
pop
xchg
xor
scas
mov
dec
mov
iret
mov
and
outsl
cltd
aad
mov
lahf
shl
scas
mov
aaa
mov
push
mov
std
pop
add
jo
add
loope
cld
jge
sbb
repnz
adc
push
sbb
repz
xor
push
add
fsubp
add
inc
es
mov
dec
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
mov
imul
in
adc
xchg
adcl
cmp
movsl
cmc
sub
aas
test
cs
or
out
es
fwait
inc
mov
nop
dec
data16
cli
fistpll
push
sub
je
mov
push
lock
dec
ljmp
cmpl
test
sbb
mov
or
mov
xor
fnstcw
mov
in
lret
push
and
mov
das
mov
enter
jbe
aas
pop
mov
xchg
sbb
clc
gs
loop,pn
xchg
mov
bound
notl
adc
popf
mulb
call
adc
dec
inc
and
lds
xor
outsl
and
pop
fisttps
push
aam
ss
add
js
xchg
jle
shl
hlt
mov
mov
inc
sbb
sub
add
stos
test
mov
jnp
or
repz
add
enter
cmpsl
stos
in
into
dec
push
inc
jae
adc
clc
jmp
jecxz
stos
push
gs
repnz
xchg
nop
add
or
rcll
cmp
jg
or
ficompl
add
cld
mov
stos
mov
mov
incl
push
sbb
pop
and
xchg
pop
lods
add
mov
imul
and
pusha
out
pop
inc
lret
test
pop
stos
sub
aas
lahf
ds
add
inc
inc
sbb
mov
sub
mov
add
por
push
jnp
pop
xchg
stos
insb
pop
xchg
xor
pop
fldenv
sbbl
add
ret
fisttps
stos
icebp
xor
loop
or
idivl
jne
push
sbb
xchg
mov
sub
or
inc
push
fldl
pusha
push
xor
fwait
push
sbb
dec
mov
cmc
cmp
insl
mov
addb
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
mov
adc
fmull
adc
xor
mov
test
movsl
jno
mov
xchg
sahf
jnp
enter
daa
adc
add
adc
add
shlb
decl
adc
sub
jge
lock
andb
fdivrs
scas
sar
daa
insb
std
leave
and
pop
push
mov
lret
lods
or
cld
imul
xchg
ret
cmpsb
push
fwait
mov
iret
adc
lods
adc
mov
xchg
das
pushf
sbb
subb
insl
or
add
mov
cmovg
sti
jo
cmpsb
add
pop
xchg
cmpsl
cmpsl
sbb
gs
lcall
scas
mov
xor
sub
mov
xor
leave
imul
insb
cli
mov
shrb
add
and
mov
mov
nop
sub
cmp
xchg
xchg
push
inc
nop
imul
and
xor
pop
aaa
movsb
push
loopne
out
jbe
hlt
ljmp
xchg
xchg
orb
jl
pop
bound
jmp
call
stc
in
jns
dec
and
vmread
push
insl
xor
and
xrelease
inc
sub
push
pop
les
repz
clc
or
stc
and
xchg
jne
pop
jns
add
out
into
lods
xlat
cmp
insl
mov
repz
icebp
mov
sbb
dec
scas
xlat
cmp
in
clc
or
enter
jmp
das
xchg
in
movl
push
add
gs
mov
adc
arpl
add
xchg
cmp
stc
lods
cmp
cs
scas
scas
push
das
jns
inc
orb
rcll
scas
sub
dec
jp
ss
repz
out
adc
popf
pop
inc
push
push
jg
cmp
jae
mov
cltd
pop
je
les
pop
inc
test
and
insl
sub
cmp
cmpb
test
rorb
sbb
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
mov
adc
fmull
adc
adc
pop
fists
cmp
das
insb
push
jb
mov
fwait
test
push
lds
lret
xchg
je
dec
mov
and
ret
cmp
lods
adc
and
test
icebp
pushf
repnz
and
je
mov
jns
pop
loop
mov
add
fidivrl
or
fcoms
stc
mov
aaa
xchg
sbb
mov
mov
divl
dec
mov
mov
fistpll
ret
cs
push
lcall
sbb
cltd
push
mov
scas
push
femms
insb
jnp
jmp
sbb
fs
lret
dec
mov
pop
mov
or
push
jo
add
in
mov
jge
adc
pop
push
sub
xchg
outsl
inc
xchg
xchg
mov
inc
inc
loop
push
pop
adc
xchg
pop
inc
pop
and
push
sbb
aam
arpl
icebp
stos
int3
cld
xor
sbb
cmc
out
dec
dec
jno
xchg
or
addr16
sbb
xchg
jcxz
stos
lahf
pop
out
add
lahf
imul
xchg
mov
cmc
scas
cmpsb
mov
push
stc
mov
or
push
push
mov
pop
adc
mov
xchg
or
adc
inc
pop
jo
push
dec
xor
notb
push
lret
cmp
jns
or
iret
mov
push
fwait
rcll
push
xchg
test
add
mov
enter
movsb
js
sbb
jecxz
cmpsw
xor
stos
pop
enter
movsb
inc
push
inc
add
stc
adc
fcoml
lock
divl
test
ja
fxch
xlat
mulb
pop
je
xlat
xchg
xor
lods
fldcw
jnp
cld
adc
call
dec
dec
shrl
shrb
leave
shll
scas
cmp
cmp
jae
ffreep
aaa
xor
or
bound
out
inc
mov
test
bound
sbb
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
pop
leave
inc
stos
notb
adc
movlps
dec
adc
out
dec
in
add
popf
jae
addr16
jp
mov
add
dec
xchg
insl
jne
pop
push
and
in
std
and
mov
int3
adc
sbb
fcmovnb
lret
mov
xchg
test
jmp
sbb
sbb
in
or
pusha
nop
add
or
fmuls
mov
mov
jne
add
mov
mov
mov
sti
fldl
jl
mov
sub
std
cmpsl
adc
jae
insb
sub
repz
inc
ret
sub
roll
inc
adc
cmpsb
sar
jmp
jl
mov
cld
mov
push
mov
mov
divl
clc
pop
insb
orb
sgdtl
pop
sbb
aaa
mov
pop
fbstp
and
push
out
push
and
cmp
push
shlb
mov
sub
es
sbb
adc
ljmp
lret
jg
je
pop
cmpsl
icebp
jns
test
cmpsb
sub
pop
movsb
out
and
das
popf
mov
pusha
mov
mov
fs
jne
cmp
jno
insl
pop
sub
outsb
lock
lea
jge
mov
bound
dec
dec
enter
xchg
call
dec
stos
add
mov
stos
out
outsb
dec
xchg
movsl
or
ffreep
jge
jb
subl
pop
xchg
call
mov
mov
and
dec
jg
insl
sahf
in
jb
pop
inc
jmp
sbb
push
inc
xor
pop
and
stos
inc
push
aad
inc
adc
imulb
in
data16
aad
ret
inc
jnp
aaa
es
dec
lcall
out
mov
pop
paddb
fcoms
xchg
paddq
fmull
cmp
jecxz
push
push
pop
push
pusha
jge
mov
add
push
lret
popa
jecxz
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
mov
xlat
xchg
mov
xor
scas
jl
add
cmp
dec
jecxz
decb
repnz
mov
jmp
aad
mov
jecxz
in
push
ret
js
mov
pop
call
pop
jge
push
mov
jne
and
dec
jnp
jmp
pop
data16
and
cmp
mov
and
idivb
lock
xorl
scas
and
lcall
or
sub
rolb
pusha
subb
ret
jns
ret
lea
xlat
inc
add
test
mov
jo
cmp
add
nop
pop
movzbl
pop
inc
inc
pop
mov
jmp
outsl
repnz
xchg
jg
mov
push
jp
arpl
movsl
out
or
loope
xchg
jno
lcall
insb
mov
rorb
cmp
cmc
jecxz
xchg
sub
inc
xor
push
enter
add
fadds
fimuls
push
fstl
rcr
inc
mov
inc
adc
inc
xchg
sahf
push
xor
sbb
mov
pop
loop
daa
mov
cmp
jno
adc
lods
inc
mov
sub
fs
insl
inc
sbb
adcb
in
jns
out
adc
mov
sbb
cmp
rorl
cmp
ficomps
cwtl
movsl
adc
lea
rcrl
dec
sub
shll
int
ret
cmp
fisubs
cmp
mov
out
jle
jmp
orl
bound
jl
mov
negb
jb
insb
scas
out
dec
repz
andl
mov
jle
fimuls
orl
cltd
xchg
mov
bnd
jecxz
xor
mov
incl
xor
cli
test
mov
sbb
pop
dec
inc
loopne
and
pop
and
imul
jae
push
sub
lods
ss
inc
sub
adc
jno
sarl
icebp
push
aas
push
jno
mov
loop
cmc
dec
jno
push
test
test
mov
lock
xchg
push
jne
push
arpl
fwait
jle
test
or
pushf
test
inc
add
xor
dec
cld
fcoms
push
gs
call
push
std
lock
std
mov
mov
in
push
or
mov
push
jmp
ds
jnp
cmp
enter
mov
push
test
cmpsb
call
cmp
in
adc
das
inc
sarl
in
adc
into
iret
cld
rorb
or
mov
pop
mov
into
adc
add
int
inc
or
mov
lahf
lods
mov
dec
dec
loop
push
sub
in
orl
aad
xchg
cld
jno
cwtl
xchg
inc
inc
jg
clc
gs
fadds
and
js
lods
mov
adc
popa
dec
mov
bnd
imul
gs
ds
xor
mov
leave
and
fiaddl
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
mov
adc
jo
adc
jb
mov
or
dec
bound
mov
mov
outsb
add
lods
sub
sarl
es
push
punpckhdq
shll
lret
dec
and
inc
fmuls
or
imul
add
mov
mov
push
shll
ror
push
sti
mov
mov
sar
iret
in
lods
in
xchg
xchg
mov
mov
cmpsl
stos
clc
mov
push
cli
xchg
movsb
xchg
fwait
mul
add
clc
cmpsl
imul
aaa
push
jno
insl
inc
ds
mov
mov
loope
sti
je
outsl
add
outsl
add
jb
inc
lret
cmp
or
mulb
lea
mov
loop
push
dec
int
divps
mov
sahf
mov
fildll
xor
push
adc
jne
into
push
mov
sarb
pushf
mov
and
pop
jns
and
inc
arpl
test
cmc
xor
insl
push
xorps
xchg
mov
aam
cmp
test
cmp
mov
int3
movzbl
mov
inc
adc
inc
push
pop
or
nop
nop
iret
dec
or
mov
aaa
jp
mov
aaa
std
xchg
xchg
pop
lahf
xorl
ss
cmp
enter
lods
add
sub
mov
fisubrs
add
push
cltd
das
xchg
mov
sub
in
add
je
sub
outsl
mov
jae
aas
jmp
pusha
jl
movsl
xlat
cld
das
push
call
popf
gs
or
cmp
psadbw
jns
cltd
jne
dec
fs
mov
jg
and
test
jnp
mov
cwtl
adc
inc
shrl
sahf
add
loop
cmp
xor
pop
std
jo
xchg
pop
fs
jno
test
xchg
iret
pop
movsl
aas
inc
in
cltd
push
jl
lods
fsub
lahf
mov
into
adcl
mov
sub
xlat
out
fcoms
pop
lcall
loopne
xor
inc
push
aad
ss
mov
into
mov
loope
cs
xor
jge
in
mov
add
add
add
filds
mov
movsl
popa
mov
rcrl
out
lods
js
aaa
inc
adc
mov
fcompl
jo
push
scas
shrb
ja
mov
int
pop
idiv
mov
into
mov
jp
mov
les
add
mov
mov
cmpsl
andl
inc
sub
sbb
or
out
inc
pop
mov
xchg
scas
push
push
dec
xor
icebp
xchg
scas
pushf
pop
lahf
add
out
bound
gs
push
adc
dec
movsb
and
dec
int
inc
adc
hlt
out
stos
sbb
mov
cmpsb
insl
pop
mov
cwtl
sub
adc
xchg
lods
pop
movsb
xlat
pop
xchg
ljmp
and
push
mov
mov
xor
mov
sub
xor
add
dec
xor
add
add
out
adc
out
and
jecxz
sbb
mov
mov
xor
vmread
adc
loope
ret
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
push
adc
fists
adc
adc
xor
sbb
test
shll
pop
pop
adc
dec
pop
add
and
ret
imul
test
ja
adc
push
cmovp
or
and
lods
inc
xor
fisttpll
in
xchg
push
adc
xchg
and
mov
fldcw
cmp
fsts
int
fmuls
dec
jp
and
push
cld
inc
push
pop
loope
dec
or
xchg
xchg
aaa
in
jg
mov
sbb
add
lret
mov
push
pop
and
inc
scas
or
das
xchg
stc
loop
ljmp
shlb
inc
and
and
aaa
pop
rcll
ljmp
mov
lret
add
sbb
sahf
jecxz
or
fisttps
cmpsl
sub
cmp
lods
mov
cwtl
mov
and
in
sar
in
lods
scas
jp
aad
xor
jae
mov
cs
aad
dec
sub
xor
inc
shll
push
xor
sub
movsl
stos
xchg
or
fwait
icebp
xchg
jns
sbb
jns
push
call
push
push
insl
aad
add
cld
jecxz
mov
dec
xor
adc
data16
fisubrs
mov
les
adcl
sqrtps
mov
into
inc
cli
iret
ret
pop
and
xchg
mov
in
pop
movsb
adc
js
sub
mov
sbb
and
sub
inc
movsl
loop
rcll
adc
push
jg
jbe
xchg
xchg
mov
pop
pop
daa
mov
insl
xlat
mov
jns
out
lret
bound
pop
rcll
push
repz
jbe
gs
pop
andb
push
xchg
ds
add
loop
pop
jg
adc
and
dec
in
movsl
jae
call
jle
mov
or
call
cmpsb
inc
pushf
das
mov
add
movl
pop
jecxz
push
push
orl
mov
sbb
test
pop
inc
cmp
movsb
out
out
imul
test
push
mov
pop
divb
sbb
cmp
hlt
xorl
in
dec
loopne
in
hlt
push
or
xchg
adc
sbb
cmp
xlat
ljmp
push
jge
adc
pop
mov
or
push
in
inc
je
push
cltd
mov
scas
or
cmp
mov
xor
mov
dec
pop
lods
xor
jne
fs
push
rclb
or
jno
sbb
cmp
imul
inc
ds
jno
xlat
add
pushl
ficomps
or
aam
adc
out
jnp
mov
push
in
add
lods
push
add
mov
data16
sbb
test
mov
mov
cmp
shlb
jp
mov
movsl
aam
out
mov
and
xor
push
in
pop
jle
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
dec
fdivrs
jo
adc
inc
stc
ljmp
fstps
cli
aas
dec
add
movsl
dec
js
adc
sub
push
popf
lret
mov
sarl
inc
rorl
lcall
repz
xchg
cmp
and
in
fldl
push
push
mov
stc
movsl
adc
sub
mov
or
or
pop
lcall
inc
mov
adc
mov
popa
sub
mov
sub
add
jne
xchg
inc
scas
push
sbb
std
les
cmp
push
xor
shl
push
nop
push
std
adc
pop
inc
test
mov
ret
add
sub
xor
imul
inc
mov
sub
loope
and
insb
and
leave
cmc
pop
fidivrs
insb
and
jae
test
mov
ds
mov
or
push
sbb
bound
mov
push
jp
mov
or
sbb
scas
iret
leave
in
mov
insb
mov
xchg
lock
or
shl
inc
lret
sbb
addl
sbb
xchg
add
and
push
sahf
test
sbb
jne
pop
mov
pop
dec
das
xor
imul
mov
shlb
jle
adc
lret
shll
add
stc
ja
sahf
inc
sbb
sahf
pop
sub
cmp
push
push
cli
dec
ss
loopne
cmpsl
adcb
or
dec
inc
push
ficoml
test
ss
and
mov
mov
scas
push
lods
pop
add
sub
aaa
xchg
je
mov
ret
stos
or
and
fldcw
ror
nop
sahf
adc
xor
and
ds
mov
test
pop
add
sub
cmp
cwtl
mov
iret
popa
fsubrl
in
xchg
adc
add
push
imul
testl
adc
cld
mov
pop
insb
push
test
inc
shll
sarl
add
scas
mov
sub
dec
aam
es
push
cld
fs
jbe
pushf
mov
dec
sahf
mov
ret
push
xchg
or
jo
sbb
fimull
mov
lcall
repz
fsubp
and
cmpsl
or
fistpll
mov
inc
push
jo
mov
adc
aam
add
and
enter
mov
dec
adc
pop
rcr
clc
cmp
inc
xchg
cmp
pusha
cli
dec
mov
test
sti
pop
pop
xchg
inc
mov
push
push
cmp
in
ss
pop
sub
out
int
or
mov
mov
popl
jmp
int
dec
dec
repnz
subl
and
or
cmp
xor
test
stos
mov
loopne
ret
mov
subb
xchg
push
dec
cmp
rcl
push
inc
mov
insb
xchg
xor
push
mulw
cmp
and
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
pop
mov
jle
aad
adc
adc
or
out
bnd
adc
lcall
les
adc
xchg
in
and
subb
push
icebp
orl
push
dec
mov
test
xchg
jns
subb
push
lods
add
fcomi
dec
aaa
out
repz
xchg
aas
mov
std
hlt
out
test
outsb
pop
jo
test
cmp
pushf
sahf
lock
xlat
test
loop
lock
push
js
addl
jl
sub
jg
lcall
test
cmp
xchg
push
jle
adc
mov
loopne
xchg
mov
std
inc
push
test
jl
mov
repnz
dec
out
pop
sub
sbb
add
into
imul
mov
push
fisubrs
js
negb
cwtl
xlat
aam
pop
mov
ss
mov
sub
add
shlb
shrb
inc
inc
icebp
mulb
js
mov
or
cmc
pop
les
inc
adc
push
cmpsb
push
lret
aam
dec
cmp
push
mov
xor
testb
inc
pop
sub
mov
jbe
adc
jmp
jns
popa
fsubs
pop
mov
mov
call
test
lret
stos
jecxz
sub
sahf
pushf
fwait
sub
jne
or
pop
hlt
imul
and
fldcw
imul
test
cltd
xchg
mov
pusha
dec
pop
sbb
les
aam
mov
dec
jnp
push
stos
daa
loopne
fldl
or
aas
iret
inc
sub
jne
mov
adc
push
out
dec
jmp
push
jl
cmp
lea
inc
rcr
call
adc
fimull
add
xchg
pop
jl
test
dec
mov
lahf
ja
divps
lret
dec
add
lret
push
mov
jl
outsl
pop
and
mov
pop
push
and
cs
insb
mov
push
pop
test
adc
inc
fidivs
cmp
mov
or
bound
dec
cli
addl
pop
mov
inc
fisttpl
adcl
inc
lret
in
jno
fistpll
adc
fistl
movsl
out
flds
fsubrs
lret
test
sti
les
jg
rcl
mov
push
jge
jb
push
add
in
jne
pop
inc
loope
test
mov
sarl
dec
aam
mov
inc
xchg
test
cmc
std
push
inc
out
or
out
xor
jb
and
push
or
jae
dec
std
sub
in
mov
loope
adc
in
mov
cmp
bound
add
pop
aaa
dec
pop
hlt
hlt
aaa
fadds
fnstsw
fmuls
outsb
rep
int
frstor
scas
inc
push
sub
cmp
mov
test
aaa
xor
sbb
test
cmp
mov
xor
dec
inc
lock
add
into
mov
sub
imul
xchg
js
int3
pop
lcall
jp
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
cs
jle
lret
adc
jo
adc
cmpb
stc
pop
xchg
jb
repnz
out
inc
stc
inc
cld
dec
stc
movsl
pop
inc
sbb
jmp
add
adc
fs
dec
push
shrb
sub
stos
fldl
pushf
dec
cmp
lahf
psubusw
pop
mov
stc
xor
cmp
movsl
xchg
outsb
stos
lds
cwtl
push
fwait
and
cmp
stos
and
testb
and
rolb
push
inc
jbe
push
and
jle
inc
xor
mov
sub
ret
imul
push
jl
and
mov
imul
movsb
in
nop
push
out
or
sub
push
test
jg
lret
xor
mov
fnstsw
mov
mov
cld
jbe
test
negb
enter
stos
ficoms
insl
shll
insl
out
mov
popf
cmpsb
jecxz
cmp
call
cmp
mov
dec
sti
mov
mov
mov
mov
mov
jecxz
jg
add
mov
and
loope
mov
fcmovnb
fsubr
fldenv
out
ret
lds
movsl
shll
cvttps2pi
lea
in
test
cli
or
push
push
test
sub
mov
jb
orl
inc
andnps
orl
inc
fnstcw
adc
into
scas
outsb
arpl
addb
dec
push
dec
dec
mov
das
fstpl
push
and
fwait
xchg
add
push
and
fidivrs
and
sub
adc
or
lea
jge
sbb
dec
mov
nop
mov
push
shlb
or
dec
sbb
test
call
push
lret
fstps
jo
add
and
mov
dec
push
outsl
xchg
mov
pop
inc
push
jb
sub
or
mov
push
aam
mov
xchg
cltd
dec
fcmovbe
fadds
cmp
test
roll
fsub
lea
enter
sbb
sahf
loopne
pusha
sub
lea
nop
cmp
insb
sbb
aas
stc
pop
jnp
cmc
popf
out
mov
not
into
call
dec
jo
pop
mov
dec
hlt
mov
in
sub
jb
imul
inc
push
scas
out
sub
incb
outsb
in
clc
popa
sarl
mov
xchg
sub
push
clc
sub
test
adc
aad
fdivp
add
sbb
enter
dec
repz
out
icebp
xchg
std
mov
cmpsl
movsb
push
lcall
or
cmp
or
push
lock
data16
pop
ja
loop
outsb
mov
dec
je
and
aam
push
mov
int3
leave
addr16
inc
aad
in
das
mov
lret
neg
push
sbb
subb
pop
sub
data16
cmp
mov
lahf
jmp
pop
out
test
mov
lods
sbb
inc
popf
sbb
jo
jb
xchg
scas
dec
sub
bound
pop
adc
cwtl
xchg
out
enter
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
enter
ss
jnp
fcompl
lods
mov
lret
push
js
mov
cli
imul
insb
or
ja
xchg
cmpsb
out
xchg
push
scas
sbb
dec
and
xor
mov
pusha
mov
xchg
out
inc
or
pusha
push
sbb
les
out
ret
ret
aas
faddp
out
int3
sub
outsb
xchg
jnp
dec
stos
add
xchg
fildll
sub
iret
mov
lock
xchg
or
ds
int
xchg
movsb
push
sub
or
jl
push
cld
mov
int3
xor
inc
outsl
inc
cmpb
stos
jb
jne
fcomps
xchg
cmpsb
cld
fcomi
xchg
and
out
push
sbb
inc
arpl
lahf
aam
roll
sti
ljmp
dec
cmp
sti
mov
mov
inc
jb
js
jbe
dec
push
mov
cmpsl
inc
and
fisubs
push
sbb
xchg
jle
and
sub
sub
xor
dec
std
xchg
fsubs
ljmp
cwtl
ljmp
fsubl
xor
imul
xorb
sub
mov
mov
jmp
add
sub
lahf
ja
pushf
mov
push
xchg
mov
push
jecxz
dec
in
popl
popf
scas
inc
dec
adc
pusha
sub
leave
or
inc
pushf
adc
mov
shll
pop
test
xor
adc
sahf
sbb
ficoml
gs
pop
inc
fcomp
repnz
and
out
push
sbb
loopne
imul
test
cltd
and
or
iret
and
cmp
insb
pop
addr16
xchg
pop
cmpsl
pop
pop
xor
inc
xor
in
xchg
aad
lods
in
push
adc
int
adc
pop
rcrl
push
imul
js
adc
popa
in
repz
sahf
lcall
in
or
or
push
jge
mov
faddl
lret
sbb
sbb
xchg
xchg
mov
xor
adc
jb
imul
inc
call
cltd
jmp
pop
rcrl
pop
xor
js
xor
or
add
mov
lds
aaa
sub
out
rcll
mov
cltd
mov
cmp
mov
mov
mov
lock
call
lret
das
mov
or
and
add
sub
cmp
divl
dec
pop
xor
xor
xchg
pop
lock
pusha
iret
mov
sub
imul
js
cmp
mov
daa
pop
push
shl
aaa
in
test
jp
decb
xchg
ret
sbb
insb
sahf
add
sbb
aad
frstor
dec
pop
movsl
fwait
sub
xchg
stos
mov
adc
push
inc
add
mov
xor
xchg
jg
cmp
push
ja
xchg
daa
dec
mov
ret
sahf
lret
test
sub
ja
rol
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
jg
ret
rcll
jo
adc
cmpsl
cmpsb
mov
mov
lahf
cltd
xchg
lods
push
dec
xor
arpl
rcrb
dec
cld
add
adc
pop
xchg
xor
sub
data16
mov
mov
leave
mov
ljmp
cmp
push
cmp
incl
dec
push
and
push
daa
ja
jnp
xor
xor
lock
inc
test
lcall
jbe
or
cmpsb
ficoml
addr16
pop
xor
aam
push
mov
ret
pop
scas
adc
cmp
or
xlat
lcall
cmp
lahf
sub
mov
ds
loope
xchg
js
lods
arpl
mov
xchg
movsb
xchg
repz
mov
cmp
popa
sub
push
mov
jmp
and
in
dec
or
daa
mov
jle
movsb
mov
and
lock
ja
imul
push
push
lahf
iret
repnz
add
xchg
pushf
test
jbe
pushf
jnp,pt
hlt
stc
pushf
fildl
stos
mov
mov
mov
aas
inc
fldl
fnclex
stc
jo
repz
and
cltd
in
int3
push
fwait
pusha
mov
push
cmp
add
xor
pop
pop
rclb
outsl
push
dec
stc
out
loope
sub
in
push
cmp
cmp
inc
pop
pop
ja
xchg
addb
mov
fld
fmul
pop
jmp
mov
adc
inc
lret
pop
xor
fisttpl
ret
outsl
jle
imul
cltd
rcrb
addl
stos
or
push
dec
stos
mov
fbstp
cmpsl
jg
push
add
mov
aaa
insl
fisubrs
shl
mov
add
insl
mov
es
cs
into
fwait
repnz
and
jp
cmp
test
adc
add
xchg
dec
jno
xchg
stos
sub
sarl
pop
mov
gs
in
inc
imul
outsl
fwait
cli
push
or
push
ret
mov
inc
pop
inc
std
sbb
mov
lret
es
inc
pop
call
jle
cmp
lret
loope
popa
es
xchg
push
aas
cmp
add
add
daa
aaa
rcrl
inc
ficoms
mov
mov
push
jmp
lock
repz
mov
lea
popa
lret
std
sbb
dec
or
ss
insl
rorl
jp
fmuls
jg
adc
subl
cmp
push
cmp
pop
imul
xlat
sub
ja
push
stos
sbb
incb
push
push
xorl
inc
xor
movsb
ja
xchg
pop
scas
adc
pop
fs
sub
pushf
aas
shrl
pusha
mov
xor
out
daa
pop
dec
mov
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
and
mov
adc
adc
and
dec
xor
mov
push
sub
cmc
inc
dec
mov
push
mov
and
leave
int3
xor
out
scas
push
dec
xchg
dec
leave
aas
outsb
push
repnz
cmpsb
or
imul
dec
movsl
cmpsl
push
aas
cmpsl
sahf
xor
arpl
out
insl
xchg
out
mov
lds
sbb
jnp
in
ret
ja
adc
xor
xchg
negl
lret
push
pop
mov
or
push
cmp
fs
add
jno
data16
push
jle
sbb
dec
jge
test
daa
bound
loopne
xor
in
lcall
arpl
mov
xor
out
ljmp
andb
rorb
sti
mov
mov
push
adc
pop
inc
push
add
outsb
mov
aas
xchg
push
cmp
pop
ljmp
xor
xlat
add
loope
addl
stos
cs
push
lcall
divb
mov
jg
ja
mov
mov
and
fdivl
cmpsl
push
arpl
pop
adc
xor
jmp
pop
aas
gs
mov
stos
sub
dec
inc
sbb
movsb
arpl
rorl
mov
push
mov
stc
mov
xor
pop
les
rcrl
mov
cmpsl
cmp
xor
mov
pop
out
push
dec
jg
cltd
rep
aam
negl
sub
popf
mov
cld
out
lret
pop
stc
add
call
lcall
cld
cli
mov
ret
scas
pop
and
sbb
mov
push
dec
push
scas
or
mov
nop
push
or
xchg
xor
sbb
lahf
fdivs
jecxz
push
xor
ja
pop
insl
aad
pop
dec
add
out
sbb
or
xlat
or
stos
daa
aaa
fdivr
in
fsubs
in
cmc
or
test
xlat
in
cwtl
fwait
adc
aad
sbb
sti
fucom
xor
das
rcr
xlat
xor
imul
pusha
addr16
inc
mov
movsl
dec
test
stos
mov
fstp
pop
jmp
mov
mov
xchg
outsb
push
test
repnz
push
jecxz
divl
cltd
das
scas
bound
fimull
fwait
call
nop/reserved
add
pop
nop
mov
das
inc
std
inc
dec
mov
ljmp
shll
jl
shrl
cmpsl
mov
imul
adc
jns
jne
push
xor
mov
subl
inc
mov
xchg
jmp
mov
xor
fldcw
mov
and
rclb
icebp
jecxz
sub
test
pop
lcall
cmpsb
outsl
jp
sub
adc
in
dec
sti
subl
sub
or
jmp
ret
push
jo
insb
roll
dec
sbb
mov
cmp
push
test
mov
mov
fidivrl
sbb
mov
ss
cmp
inc
or
xor
sub
xchg
lea
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
and
pop
mov
dec
pop
fsub
lods
dec
inc
adc
inc
jge
stc
test
lods
call
add
xor
movsb
xchg
int
mov
nop
push
pop
push
push
and
sub
or
mov
das
cmpsw
in
and
pop
ficoml
jg
xchg
xor
mov
xchg
mov
mov
mov
fcoml
mov
rclb
icebp
fcmovbe
dec
sahf
mov
fwait
dec
cmpsl
jg
movsl
sarl
mov
repz
sub
mov
mull
mov
or
cmp
pop
mov
pop
out
sbb
cs
test
mov
pop
jbe
mov
pop
pop
dec
pop
in
out
test
jbe
pop
xchg
scas
cli
sub
lods
loopne
out
pop
pop
add
fisttpll
cltd
in
pop
out
cmpsb
outsb
xchg
dec
push
mov
es
filds
hlt
loop
shlb
jno
incl
or
std
arpl
jmp
adc
inc
repz
ficoms
cmp
mov
sbb
and
icebp
orb
jno
ja
sbb
aad
div
ds
add
sbb
loop
and
inc
scas
jmp
jnp
pop
jecxz
jne
test
lret
cltd
xchg
enter
sub
mov
cmc
cmp
daa
test
mov
xchg
dec
int3
adc
mov
sub
fdivrl
scas
sub
aad
sub
pop
call
mov
aam
mov
insl
mov
push
dec
clts
insb
sti
cld
sub
iret
je
sub
pop
stc
outsl
in
dec
bound
push
ret
inc
sbb
shll
repnz
jl
fisttpl
out
les
ja
sarb
mov
into
adcb
or
pop
aad
pop
push
push
cmp
push
xchg
cmc
jl
sbb
decb
push
lahf
std
push
das
inc
sub
out
push
push
popa
nop
or
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
pop
adc
adc
sub
jo
add
test
call
clc
xor
mov
ret
mov
lds
mov
dec
mov
cmp
imul
ljmp
xchg
aad
xchg
dec
arpl
gs
and
xlat
out
jmp
dec
sbb
mov
jp
mov
sub
mov
jge
stc
or
ror
mov
push
roll
lcall
xchg
daa
sbb
sti
dec
fsubs
mov
push
fcmovb
mov
jae
repz
lods
in
or
and
sbb
test
inc
and
in
dec
add
push
fnsave
aas
mov
dec
mov
mov
xchg
jnp
xor
dec
xchg
ds
add
lods
pushf
mov
push
popf
iret
sti
test
dec
cmpsl
ljmp
iret
test
stos
jae
jmp
xor
sbb
push
lock
jns
in
lret
out
out
inc
cmpsl
add
imul
pop
mov
pop
add
add
push
lods
test
loop
mov
sbb
sub
sub
lods
in
mov
jecxz
lds
fsts
ret
icebp
enter
jo
fcoms
pop
xor
icebp
mov
ljmp
je
and
rorl
xchg
arpl
jmp
jmp
jns
push
ficoml
ljmp
inc
xchg
or
pop
scas
negb
lods
incl
ss
or
pop
cli
adc
sub
jl
adc
pushf
sub
pushf
jns
mov
xcrypt-cbc
cmpsl
push
xor
sarb
push
out
lods
ficoms
fstpl
xlat
dec
or
in
popa
cmpsb
and
jmp
mov
movb
push
std
cmpb
sti
cmp
shufps
insb
sbb
or
shrl
into
mov
or
lret
pop
cli
ds
pop
mov
inc
xchg
mov
repnz
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
in
lods
mov
adc
push
testb
xchg
push
enter
neg
dec
sub
clc
dec
cs
faddl
mov
ja
push
mov
fstpt
adc
add
cmpsb
mov
jecxz
or
or
jge
daa
aaa
icebp
test
xchg
dec
pop
les
cmp
mov
xor
mov
pop
ficomps
cli
leave
push
int3
sbbl
sbb
jb
xor
pop
lds
popf
add
fdivrs
stos
and
xor
lea
mov
xor
xchg
pop
xchg
jne
pusha
pushf
or
jns
mov
sbb
cmp
and
jns
push
sbb
inc
lea
lods
xor
pop
xor
stos
jge
or
xchg
out
push
adc
out
cld
and
push
mov
pop
je
dec
cmp
sbb
popa
pop
je
lods
stos
push
fisubs
out
sub
sub
sbb
imul
or
xchg
cmp
or
test
out
fwait
ret
pushf
int
and
mov
or
vminss
sub
push
dec
popf
int
jb
dec
mov
xor
das
fwait
inc
popl
out
sub
mov
mov
mov
data16
into
fcmove
das
rcl
pop
push
xor
dec
iret
ret
ret
rcrl
es
xchg
add
pop
mov
pop
jne
js
pusha
call
mov
push
inc
divb
imul
xchg
xchg
sub
and
sbb
sub
or
scas
cwtl
lock
push
sbb
pop
popf
push
addl
ljmp
push
jns
cmp
call
enter
add
pop
cmp
sbb
mov
push
sbb
in
jb
pop
jecxz
ljmp
out
lcall
je
lret
adc
js
aaa
popa
das
bound
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
or
mov
stos
movlps
clc
iret
pop
loop
mov
fdivp
in
das
imul
into
sti
stos
ljmp
mov
adc
xor
sbb
aam
adc
sub
mov
into
and
adc
outsb
fidivs
xchg
stos
mov
popa
movsl
out
pop
push
xor
pop
sub
popf
aad
pop
jmp
push
jmp
cmp
sbb
jne
cmpsl
mov
pop
stos
jl
sbb
sti
in
inc
test
aaa
jmp
es
adc
lea
mov
outsl
fcmovne
sbb
test
ja
inc
into
movsl
leave
ret
fidivs
inc
int
jg
aam
pop
dec
inc
out
xor
mov
cmp
add
mov
pop
repz
pop
in
das
rcll
push
xor
dec
or
std
cmpsl
scas
pop
cli
movsl
xor
ljmp
icebp
stc
inc
xor
push
stc
fwait
and
popf
sti
cltd
push
pop
xor
int
mov
fcomps
dec
push
notb
sub
jne
cltd
mov
and
jae
and
lods
pop
jmp
adc
mov
mov
or
xchg
outsb
and
es
popf
xor
xchg
in
xor
ret
adc
loop
cmpsl
push
xchg
pop
cmpsl
mov
sarl
enter
aaa
jl
orl
adc
jge
dec
ret
ret
das
add
push
mov
es
lods
sbb
mov
dec
pushl
test
loopne
jl
cltd
or
into
push
in
pop
jl
clc
mov
shlb
subb
push
pop
push
mov
dec
jecxz
add
rcll
inc
filds
sub
std
out
ret
mov
subb
pusha
daa
xchg
or
ljmp
cmp
xor
jb
int
dec
or
cld
push
adc
aam
ss
scas
insb
shlb
int3
fsubrp
insl
xchg
xor
test
bound
loop
push
cld
outsb
fwait
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cltd
mov
push
lahf
adc
stos
movlps
push
or
sbb
pop
out
lods
xor
repz
jns
push
and
pop
sub
testl
ja
sub
fs
adcb
push
jl
gs
jne
cli
sbb
loopne
mov
aad
ret
pop
hlt
lret
jo
mov
imul
addr16
jge
test
mov
and
cmp
xor
xchg
lret
mov
stc
pop
sub
sbb
mov
rcll
add
scas
addl
sub
pop
rcrl
inc
outsb
inc
cmpsb
je
shll
int
mov
lret
mov
mov
fucomi
inc
xchg
jmp
inc
jnp
mov
fwait
das
movaps
movsb
jmp
mov
pop
shll
enter
cwtl
pop
push
stos
mov
jns
pop
outsl
lods
adc
mov
jo
lea
dec
sbb
pop
sbb
ss
mov
mov
xchg
cltd
sarb
movsl
enter
lock
mov
pop
out
loope
and
jo
push
ljmp
mov
in
pop
and
pop
add
pextrw
or
lcall
aaa
lods
jp
xchg
hlt
rclb
cmc
lret
inc
outsl
lahf
out
sub
gs
pop
fdivrl
push
adc
sbb
enter
inc
mov
fsubl
mov
repz
add
pop
icebp
mov
cmpsb
xor
and
subl
cmp
xchg
cmp
scas
mov
inc
and
aaa
roll
adc
xchg
call
cmpsb
pop
inc
inc
pushl
js
js
call
xchg
or
xor
pop
mov
inc
pop
leave
pop
xchg
push
stos
mov
push
aam
ds
jge
add
popf
xchg
jmp
mov
xor
roll
add
cmp
sub
xchg
adc
cmp
lea
in
xchg
pop
imul
sub
xchg
pop
xor
mov
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
roll
xchg
mov
rcrl
xchg
inc
lret
ja
or
rolb
mov
ss
or
fiadds
push
and
dec
repnz
fistpll
daa
into
daa
xor
ds
xchg
dec
pop
mov
sbbl
stos
test
sub
sar
or
xchg
out
test
les
pop
repz
cli
xchg
sti
sti
xchg
outsb
cli
test
cwtl
lods
mov
pushl
mov
pop
cmpl
rcr
pop
jne
orl
push
lea
xchg
mov
jns
push
xchg
push
jo
mov
adc
sbbl
sub
mov
repz
mov
mov
mov
mov
xor
push
int3
cld
push
repz
roll
lahf
xchg
adc
jecxz
adc
pop
dec
ja
adc
sub
sbb
mov
cmpsb
pop
cwtl
mov
push
lcall
sub
and
orl
mov
cmp
sub
mov
lock
nop
repz
fdiv
repz
loope
push
mov
out
out
pushf
adc
pop
push
pop
mov
aad
add
mov
repz
pop
sahf
push
subl
mov
xchg
and
cmpsb
lret
pop
stos
mov
sbb
loope
out
or
fdivr
fs
cs
add
mov
sub
mov
loope
dec
scas
cmp
scas
mov
mov
mov
fcompl
call
inc
jno
jo
leave
dec
lods
mov
arpl
adc
xchg
jo
adc
out
pop
repnz
or
sub
or
test
sbb
ds
mov
adc
hlt
ja
ret
jne
fwait
mov
ret
cmp
std
adc
in
out
or
cmpb
inc
mov
clc
dec
push
push
cmp
lds
orb
cmp
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
xchg
jb
inc
dec
inc
dec
push
or
mov
out
incl
sub
shrb
pop
frstor
aad
mov
hlt
popf
or
mov
bound
jno
xor
dec
and
add
mov
addb
or
cwtl
test
cs
mov
jmp
mov
lret
jb
xor
inc
xor
les
xchg
push
je
rorl
ret
sub
inc
add
ret
int3
jns
popf
or
mov
pop
mov
aam
sbb
aam
mov
mov
insl
adc
mov
out
jne
nop
xlat
adc
cmpsb
js
stos
loopne
push
movsb
dec
shll
dec
mov
inc
stos
test
inc
popl
addl
inc
movsl
mov
fmul
xor
sbb
push
dec
test
pushf
mov
loope
or
cli
rorl
jb
mov
bound
jmp
lea
adc
sbb
rorb
push
jmp
out
hlt
int3
pop
ja
or
or
lcall
ret
or
lods
das
add
icebp
sub
mov
inc
pop
sti
ljmp
push
dec
xor
xor
inc
sti
outsb
rclb
adc
add
pop
push
enter
push
xchg
xchg
stos
jle
aaa
inc
ret
call
or
mov
in
adc
andb
cli
mov
sahf
xchg
xchg
xlat
fs
repz
orb
push
pushf
mov
icebp
sbb
leave
shl
xchg
pusha
jle
inc
hlt
mov
cs
jno
sbb
sbb
sub
cli
lock
mov
jp
ret
mov
push
arpl
es
mov
jg
add
mov
sbb
test
loope
sub
inc
pop
mov
mov
mov
push
push
mov
into
sub
std
xor
rcll
push
outsb
adc
adc
cmpsb
push
lds
add
test
lea
cmp
aaa
add
mov
xor
pop
or
mov
pusha
jle
push
jne
xchg
sub
dec
ja
mov
sbb
jns
int3
xchg
scas
in
add
xchg
rcrb
ds
test
mov
outsb
sbb
shlb
adc
imul
in
arpl
add
jg
mov
push
lahf
stos
es
dec
dec
or
xor
icebp
outsb
into
notl
add
sub
sub
pop
and
mov
dec
pop
call
sbb
je
imul
sub
xor
adcb
mov
stos
fs
dec
movsb
xchg
fidivl
cmp
jmp
adc
sbb
stos
ret
stos
dec
mov
sbb
faddp
icebp
cmpsb
jno
jo
sub
add
mov
jge
dec
into
jne
and
cmp
pop
lea
add
jl
enter
cmp
in
add
pop
into
add
dec
jne
rcrl
xor
pop
adc
lds
stc
pop
mov
test
hlt
in
jge
mov
mov
cld
sbb
sub
lret
push
push
xlat
adc
jmp
mov
xor
outsb
mov
xchg
inc
mov
add
lods
mov
int
mov
xchg
or
popa
pop
jmp
cmp
sbb
stos
cmp
mov
inc
push
xor
rclb
frstor
mov
sbb
sahf
xor
mov
ja
sbb
dec
inc
dec
stc
ret
int3
in
lods
shlb
int
lcall
cvtps2pi
int3
mov
lods
xor
sub
xchg
cli
inc
dec
sbb
mov
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
adc
adc
adc
adc
out
pushf
loop
mov
lods
out
adc
ret
fsub
jg
movsl
xor
lds
add
inc
push
mov
int
jb
push
std
test
jmp
cmp
flds
movsl
loopne
mov
call
sub
xchg
ljmp
mov
xor
jne
std
jp
inc
movsb
adc
sbb
mov
push
movsb
in
push
pop
push
mov
lret
cwtl
or
inc
adc
repz
jge
adc
mov
push
and
sub
mov
test
jne
subl
pop
into
ja,pt
je
mov
mov
das
pop
sub
or
mov
mov
or
lahf
repnz
or
push
cs
cmp
shlb
sahf
pop
xchg
cli
dec
mov
dec
or
add
in
cmp
ret
mov
in
mov
scas
push
es
add
add
sbb
cs
dec
adc
pop
jle
popf
inc
mov
and
lds
xchg
pop
jecxz
sub
jge
inc
test
addb
pop
dec
jae
std
dec
add
lret
push
fs
adc
push
and
jl
jns
sarb
nop
inc
std
fdivs
pop
jbe
into
bswap
sbb
aad
jl
and
fs
mov
jae
mov
addr16
dec
es
inc
outsb
jne
mov
fnstsw
iret
mov
outsl
and
xor
xor
sbb
lret
push
jl
mov
lock
xor
lea
push
outsl
pop
jo
push
fiadds
or
mov
jb
loope
xor
inc
xlat
test
mov
dec
loopne
mov
out
ja
xor
mov
je
movsb
jnp
sbb
outsb
loopne
je
xchg
sub
mov
cmp
xor
jo
insl
mov
xor
sub
ret
lret
in
jl
or
out
js
push
imul
jae
jmp
jb
shrl
dec
jne
cmp
mov
lcall
xrelease
leave
lea
jno
adc
jno
out
sub
repnz
mov
repnz
cltd
sub
push
inc
pushf
pusha
rcl
ds
cmpsb
inc
dec
js
fstpl
ja
add
jmp
pop
lahf
xorl
movsl
cwtl
aas
cmp
push
in
add
sub
dec
jne
pop
ljmp
mov
cmp
push
add
mov
pop
adc
nop
inc
mov
dec
inc
cwtl
fmuls
cmc
xchg
inc
mov
sbb
mov
out
adc
xor
push
xor
cs
aaa
mov
xchg
movsb
xor
xchg
orb
xor
jne
mov
imul
addb
out
mov
xchg
into
mov
push
mov
push
adc
inc
mov
lahf
cli
jne
cmpsb
xor
test
pop
fbld
sbb
mov
in
ffreep
in
xor
test
inc
sub
or
xor
or
add
pop
ds
out
in
repz
fisttpl
fsubrp
pop
aaa
adc
adc
push
cmc
ja
add
aam
into
fsubrp
pop
xor
jnp
inc
jecxz
inc
mov
xlat
push
test
jae
xor
push
ficoms
ds
mov
cli
lcall
xchg
ja
in
add
out
inc
xor
mov
and
jg
add
loop
dec
inc
xorb
push
popf
out
lret
mov
das
enter
in
jbe
xchg
call
xor
test
stos
adc
cmp
imul
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
nop
or
push
mov
adc
movlps
jmp
ret
jbe
dec
loope
sbbl
lock
cmp
mov
outsl
insl
clc
and
roll
mov
jle
arpl
pushf
cmp
shlb
test
mov
and
push
ja
aam
pusha
cwtl
fnstcw
and
sub
add
fisubrs
inc
adc
loopne
push
push
xchg
mov
jg
scas
mov
push
fs
or
jg
xor
popa
push
inc
in
dec
ja
in
mov
jnp
mov
mov
jb
cs
push
dec
xchg
push
mov
xchg
mov
fdivr
adc
xor
jmp
dec
outsl
jge
scas
daa
out
packsswb
icebp
mov
dec
jno
cs
inc
sbb
adc
mov
mov
out
lcall
and
clc
dec
cwtl
mov
aaa
inc
and
int3
loop
dec
fadd
push
xchg
inc
sbb
mov
leave
pop
inc
xor
ja
loopne
push
dec
mov
pop
sbb
adcb
int
xor
aaa
push
ljmp
inc
jae
push
addl
ret
add
shll
loop
enter
add
xchg
inc
aaa
sbb
add
icebp
mov
aam
cmpsl
pop
das
or
adc
sub
xor
sub
orl
jne
mov
and
xor
aad
push
or
dec
mov
xchg
fldenv
inc
mov
daa
andb
xchg
cmp
dec
mov
xchg
xchg
loopne
pop
mov
dec
xchg
mov
or
push
jl
pop
aam
out
jge,pt
mov
loop
push
sub
mov
push
cmp
push
pop
addr16
rcrb
xchg
pop
rcrl
gs
mov
or
clc
mov
lds
je
inc
into
add
test
iret
out
int3
roll
mov
insl
aad
movaps
std
clc
les
fisttpl
rclb
shrl
inc
mov
ret
hlt
rcrb
pop
lods
lea
in
gs
loopne
out
push
jo
leave
test
cmpsl
mov
outsl
mov
sbb
adcb
and
xchg
push
ret
rcl
pop
dec
out
adc
aad
xor
mov
pop
pop
leave
push
shll
test
adc
jae
les
sbb
inc
mov
testl
addb
xchg
cmpb
int
and
fstpl
jbe
hlt
imul
sub
sahf
test
inc
aaa
hlt
add
mov
dec
sub
inc
push
pushf
imul
pop
fsubs
hlt
add
xchg
jge
adc
aam
fldenv
cmp
cli
popa
dec
xchg
cmp
dec
enter
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
jg
push
ljmp
sub
mov
jle
pop
rolb
test
in
sbb
shrb
pop
or
mov
sbb
loopne
popa
sub
adc
add
fildll
add
fbstp
loopne
xchg
xchg
test
adc
data16
test
push
test
push
lret
mov
out
push
sub
mov
repz
sub
pushf
jbe
add
jecxz
lock
add
jbe
xlat
dec
cmpsl
dec
add
mov
into
in
ficomps
xor
lds
fwait
rcrb
jb
or
mov
sub
jbe
lahf
pusha
sarl
cmp
into
xor
mov
pushf
out
stc
mov
es
clc
add
in
mov
pop
xchg
cmpb
mov
ret
or
and
fwait
dec
into
aaa
mov
or
inc
dec
inc
xchg
les
lret
push
push
neg
push
adc
lods
cmpsb
ret
loope
cltd
movntps
mov
mov
xchg
stos
adc
xor
or
call
sbb
mov
cmp
cmpsl
out
xlat
in
mov
mov
imul
pop
xchg
mov
pop
int3
pop
mov
push
outsl
cwtl
jl
adc
dec
add
mov
lods
pop
inc
leave
inc
push
inc
or
adc
in
pop
jbe
ss
and
adc
outsl
test
and
sbb
xchg
cmpsb
mov
insb
push
push
js
mov
sbbl
andb
adc
add
imul
vcvtdq2ps
imul
fistpll
clc
jle
lret
jns
loope
nopl
jne
jmp
movsb
inc
sahf
or
sub
add
inc
pop
out
mov
imul
clc
cmpsb
ror
out
or
int3
cmp
or
fistl
ja,pt
jae
jo
mov
mov
mov
pusha
adc
mov
sbb
dec
xchg
in
cld
lcall
pop
jp
arpl
pop
and
call
mov
in
leave
adc
call
lock
pop
xor
imul
push
test
cli
sbb
mov
pop
sbbl
aad
pop
lea
inc
dec
adc
mov
sbb
test
jmp
into
mov
test
sub
adc
outsb
mov
cltd
sub
enter
or
in
adc
cmc
add
lods
jb
inc
leave
xorb
adc
movb
xchg
repnz
adc
subb
outsl
shlb
adc
mov
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
lret
jge
adc
movlps
pop
in
xor
pminsw
or
lds
sub
in
pop
jle
movsl
dec
xchg
add
adc
cmp
mov
in
enter
push
inc
sub
push
lret
movsl
jge
cmpsl
jne
cli
jbe
mov
sti
xor
repnz
out
inc
inc
adcb
jo
pop
push
insl
mov
pop
dec
xchg
jo
fstps
jno
add
mov
and
fwait
inc
sbb
clc
into
and
mov
stos
sbb
sbb
dec
dec
jmp
jecxz
xor
outsb
push
pop
jnp
outsb
lods
enter
imull
vandps
imul
mov
add
js
pop
repz
ljmp
dec
rorl
sub
sahf
sbbb
pop
or
dec
mov
dec
clc
xchg
xchg
and
repz
jae
pop
fmul
inc
mov
popa
xor
lahf
sbb
sbb
roll
test
sbb
out
or
add
mov
mov
sbbb
jmp
out
lret
pop
jg
dec
inc
in
sbb
lods
das
cmpsb
pop
dec
lea
xor
xlat
jmp
daa
in
or
or
ficomps
test
shl
lahf
jne
cmc
xor
daa
cmp
fwait
adc
ja
sbb
fsubl
xlat
jbe
adc
cmp
and
rcr
into
mov
mov
leave
mov
out
adc
imul
jne
or
scas
addr16
mov
mov
mov
pop
ja
lock
xchg
mov
mov
inc
or
cltd
jp
dec
out
arpl
fbld
xchg
sahf
js
mov
sti
gs
mov
out
jns
addr16
icebp
sub
jo
aam
pop
jg
ljmp
mov
jns
movsb
cs
decb
hlt
ds
cwtl
cli
sahf
and
lods
add
cmp
inc
jo
cmp
mov
push
testl
outsl
push
push
dec
jne
xor
ret
cmp
pop
sbb
push
cltd
add
jb
pop
pushf
pop
cmp
cmp
and
insb
lock
jg
inc
adc
sub
push
ret
je
int3
sub
arpl
loope
das
out
xchg
ficompl
test
push
aaa
ret
cli
aas
and
push
mov
dec
or
rorb
je
imull
test
mov
jne
mov
ljmp
cmp
addl
mov
aad
hlt
xor
dec
insb
ja
outsl
in
pop
test
push
pop
jo
cld
jl
scas
scas
mov
xor
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
test
pop
jae
adc
sahf
add
inc
mov
test
pop
xor
ret
inc
ljmp
fwait
lds
sbb
in
idivb
mov
xor
or
imul
mov
mov
in
inc
jne
xchg
bound
or
or
mov
rorb
jmp
addr16
inc
cmp
jns
cmp
dec
inc
lods
lea
mov
cli
adc
ss
ss
fisttpll
shl
xchg
loope
mov
jns
iret
ds
stos
push
adc
xor
xlat
in
sbb
fildll
leave
sbb
scas
gs
out
lods
sbb
scas
aad
mov
or
push
dec
test
lcall
and
fistpl
push
repnz
imul
mov
fcompl
repnz
mov
imul
call
rorb
mov
and
adc
je
mov
push
adcb
int
insb
out
frstor
sub
outsb
mov
push
ja
je
scas
cmpsl
jmp
aad
inc
sti
pop
add
jmp
bnd
sub
or
mov
add
push
jns
jb
jmp
cld
mov
out
inc
int
scas
xor
pusha
loopne
fnstcw
push
scas
ret
sub
lahf
ljmp
ret
int
icebp
jnp
xchg
jg
mov
dec
shr
lret
aad
into
sub
push
rolb
pop
in
and
and
int
addr16
mov
cmp
cmp
icebp
mov
pushf
adc
cmp
int
dec
mov
mov
es
mov
sub
xchg
and
ja
xchg
loope
jmp
mov
xchg
fmul
push
pushf
leave
cmp
fbld
les
cld
dec
out
mov
je
or
dec
push
mov
cmp
mov
inc
aad
add
out
jge
cwtl
add
das
xor
ret
cli
divb
aad
out
fldenv
aas
push
sub
sub
add
stc
cwtl
mov
jmp
das
adc
mov
daa
cld
push
jle
into
jo
mov
test
sbb
mov
dec
cltd
test
clc
ljmp
push
push
addr16
mov
jp
pop
sub
rorl
inc
xor
mov
xlat
out
inc
inc
pop
dec
ficomps
mov
dec
ret
inc
or
sbb
mov
cvtpi2ps
adc
icebp
out
roll
mov
inc
fwait
and
and
dec
xchg
pop
mov
iret
lret
in
addr16
enter
mov
repnz
xchg
add
stos
jecxz
jecxz
add
lock
jge
or
call
fnsave
decl
jle
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
push
inc
ljmp
sub
xor
inc
jbe
lods
push
repnz
les
test
dec
sahf
pushf
or
addb
fldenv
jle
sub
loope
aas
int
sarl
cmp
sbb
mov
adc
xor
or
push
adc
pop
sub
add
movsb
jmp
test
outsl
xor
dec
add
mov
shrb
int3
pop
mov
push
aas
sub
sbb
xor
stos
xchg
sbb
int3
out
outsl
fsubrp
test
in
mov
inc
es
lds
mov
std
mov
mov
fdivrs
mov
mov
lds
mov
aam
mov
pop
pop
nop
lret
in
jg
and
icebp
jmp
dec
and
inc
xchg
cmp
fnstcw
ljmp
decl
mov
dec
inc
data16
dec
jmp
fsubrs
pop
adc
mov
mov
popf
ret
dec
movsb
mov
adc
out
sahf
test
mov
into
shl
lret
and
scas
jae
sub
inc
adc
ror
rcll
add
sub
ds
inc
fsubrs
cli
cmp
into
and
cli
push
mov
push
adc
test
fisubl
push
mov
jb,pn
out
sbb
fs
addb
stos
cmc
pusha
in
movsb
and
inc
mov
mov
outsb
sub
pop
xor
cmpsl
mov
js
faddl
aad
sbbl
js
mov
xchg
and
repnz
in
inc
popf
in
dec
jge
cltd
inc
inc
ret
mov
adc
lock
lods
dec
jecxz
adc
mov
jo
mov
mov
fsts
mov
pop
fldl
push
cmp
pop
or
mov
je
cmc
jno
mov
xchg
pushf
sarl
insb
in
mov
mov
mov
popa
gs
cmpsl
sbb
test
push
and
jg
sbb
or
mov
cmp
test
add
fdivl
aas
jp
pop
mov
les
mov
adc
dec
sub
movsl
shlb
arpl
jge
cmc
dec
or
push
mov
pushf
pop
aas
xor
rcrl
push
xchg
pop
pop
xor
mov
mov
test
dec
out
cmp
shr
popa
jns
xchg
and
sbb
test
out
aam
dec
sub
and
rorl
push
push
adc
or
or
adc
xchg
push
loope
inc
push
cmp
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
cmp
adc
mov
fsubrp
mov
mov
inc
pop
mov
adc
inc
sarb
in
call
negl
subl
mov
jno
lahf
pop
sub
orl
out
or
into
inc
xchg
xlat
into
in
mov
sbb
lea
and
js
in
pop
jnp
pusha
adc
mov
adc
or
cmp
lods
aas
in
xor
xor
shll
push
mov
or
iret
jo
int
bound
ss
cmp
mov
imul
insb
popf
and
jae
adc
mov
xchg
inc
fs
xchg
std
and
pop
push
add
in
or
cmpsl
lcall
push
mov
std
or
subb
xor
ss
mov
xor
adc
sarb
fsubs
cs
out
or
and
lods
daa
mov
fldenv
pop
insb
add
jge
sub
inc
jge
rcll
clc
jle,pt
lret
js
shrl
xchg
sub
adc
out
mov
cmp
xchg
mov
jns
mov
into
insb
mov
ja
pop
sbb
fldl
push
push
jno
or
cmp
cmpsb
loopne
mov
mov
or
mov
push
push
gs
cs
mov
mov
addl
pop
adc
loope
cmp
mov
pop
dec
ret
jp
lcall
movsb
lahf
jg
insl
jecxz
std
aas
cmc
adc
and
les
adc
aam
rcrb
inc
mov
push
dec
ljmp
mov
pop
imul
jbe
and
shl
cmp
data16
add
inc
mov
subb
xchg
dec
mov
rcrl
subb
insb
jle
shll
push
mov
add
clc
mov
add
adc
ret
dec
xlat
sti
xor
ficoms
push
rolb
xor
mov
cltd
ds
xor
push
inc
sahf
in
fnsetpm(287
aaa
push
add
mov
into
nop
dec
leave
xlat
data16
adc
push
sbb
push
ret
nop
adc
and
js
cmp
pop
xchg
inc
aad
test
inc
int3
xchg
dec
mov
cmp
pop
cmp
adc
test
fwait
jno
push
mov
jne
push
cmc
push
rolb
fs
ljmp
outsl
aas
pop
sub
push
adc
fmul
fldl
mov
cmp
push
xchg
sub
pop
sub
dec
push
mov
jbe
pop
pop
xor
gs
loopne
imul
cmp
jno
cmp
pop
lock
dec
or
and
push
out
rorb
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
lret
sbb
test
arpl
mov
dec
mov
cmpsb
dec
sarl
sbb
int3
outsb
sub
cmp
push
rcrl
notl
imul
fwait
mov
cmp
and
mov
pop
test
lock
sbb
ret
xchg
cltd
pop
and
mov
or
xchg
jne
mov
dec
bound
pop
dec
inc
popf
xchg
lcall
lock
jecxz
sar
sub
or
bound
rorb
pop
mov
leave
imul
pop
push
pop
xchg
mov
inc
scas
nopl
or
mov
sahf
loope
add
cwtl
and
lds
pusha
in
in
jp
inc
aad
addl
jle
clc
fwait
jge
push
push
push
mov
jns
call
add
cmpsl
adc
pusha
inc
jge
add
jbe
std
sub
nop
ljmp
mov
or
stos
push
mov
push
movb
stc
cmp
mov
ret
xchg
out
lea
cmp
ja
sarl
aas
fs
lds
mov
xchg
push
cmpsl
scas
lock
sbb
daa
mov
lods
repnz
xchg
add
rorb
into
loopne
daa
inc
cmp
add
fcomi
movsl
sbb
xchg
push
shll
les
out
push
xor
sbb
aas
jne
mov
xlat
fcmovbe
and
mov
ror
ljmp
fisubrs
aaa
inc
mov
cmp
test
mov
mov
cmp
stc
gs
std
repnz
js
xor
test
jbe
mov
add
int
dec
inc
jae
fwait
xchg
std
pushf
adc
int
out
repz
or
and
fisubs
jno
pop
adc
sti
aaa
fs
mov
xchg
std
jae
dec
aaa
xchg
je
pop
jb
imul
add
outsl
andl
mov
dec
push
pop
or
push
sbb
mov
jne
movsl
paddusb
data16
popf
pusha
hlt
fbstp
inc
mov
pop
les
sti
mov
pop
jb
mov
inc
sub
xchg
dec
test
cmpl
jecxz
out
shr
loope
outsl
test
push
xchg
or
test
ss
dec
xchg
adc
sub
sbb
jg
push
or
pop
push
iret
sbb
insl
out
or
outsl
pop
das
ret
xchg
cs
loope
arpl
mov
add
inc
add
lcall
aaa
jecxz
mov
mov
sub
out
adc
xchg
decl
rcll
sbb
and
pop
test
adc
lcall
jge
enter
hlt
int
aaa
les
push
repz
out
dec
fisttpll
loopne
push
inc
pushf
add
pop
gs
test
outsb
mov
and
inc
add
mov
leave
push
iret
cmc
adc
test
stos
test
mov
sub
jnp
ja
mov
arpl
adc
cmp
fwait
outsb
test
or
push
lods
ja
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
arpl
stos
inc
pop
adc
jp
adc
pop
dec
jbe
ret
sub
jo
xchg
cmc
clc
sarb
sub
add
stos
test
pop
cmp
mov
cmp
add
xchg
fmul
xchg
adc
in
and
jno
or
aaa
xchg
jge
imul
dec
cmp
loopne
jb
jo
cmp
fwait
aad
inc
sbb
dec
mov
mov
call
cmp
inc
neg
mov
sti
test
lock
stos
insl
jmp
jno
xchg
daa
xlat
xchg
fs
cltd
ds
loop
add
adc
push
dec
xchg
data16
cmp
cmp
jae
shl
mov
cmpsl
add
aaa
lret
push
xor
pop
mov
mov
lods
adc
jne
rcll
mov
cmp
stos
mov
inc
sti
mov
pop
lahf
imull
daa
out
xlat
lret
sarl
jg
stc
dec
jl
push
mov
pop
cmp
mov
popf
sbb
daa
fisubrs
xor
jl
adc
bound
pop
cmp
inc
cmp
aam
push
call
jmp
repz
adc
xor
xchg
leave
push
idiv
imul
add
jbe,pn
push
add
leave
inc
add
mov
jns
add
jnp
stos
cmpsl
add
mov
push
push
mov
gs
add
xlat
add
sbb
jge
dec
xor
cmp
cmpsl
aas
sti
mov
shrl
push
popf
ficompl
push
add
or
jmp
mov
mov
andl
mov
push
out
adc
cs
adc
daa
xor
bound
cmp
mov
jmp
insl
jo
xor
in
fwait
sub
and
test
mov
leave
rcl
dec
cmp
rcl
insb
daa
ljmp
mov
add
into
jb
xorl
jb
fnstsw
jne
mov
jp
mov
xlat
addr16
push
add
fnstenv
cmpsb
arpl
pushf
mov
cmp
or
jmp
pushf
add
jae
jl
pop
xchg
sbb
lods
sub
jecxz
xor
xchg
imul
sbbb
mov
or
out
xor
mov
int3
incl
movsl
lods
mov
lret
mov
adc
or
mov
jp
push
ds
xchg
pop
mov
jae
mov
mov
xchg
lods
add
lret
mulb
jnp
outsl
mov
mov
ja
outsl
scas
rorb
cmp
mov
cmp
and
add
fldenv
mov
xor
test
aad
decl
jae
movsl
add
lret
mov
mov
adc
loop
mov
inc
fdivrs
ret
add
in
test
sbb
push
aad
ja
arpl
mov
push
pop
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
cld
dec
or
adc
adc
mov
push
ljmp
sub
mov
adc
leave
test
loope
mov
rcll
and
add
dec
pushf
aaa
jns
inc
cmp
jge
push
cmp
outsb
sub
test
sti
jecxz
cs
fidivrs
push
lret
mov
lods
push
or
enter
outsb
hlt
xor
add
and
and
in
sub
shl
xor
xchg
jg
mov
xlat
enter
int
jne
inc
mov
ljmp
jbe
mov
gs
adc
cli
rcll
imul
enter
out
add
or
leave
fisttpll
inc
lret
xchg
mov
mov
or
dec
es
adc
gs
jmp
sub
daa
jl
mov
fcompl
sbb
sbb
inc
mov
sub
ror
or
and
dec
add
jo
ss
xor
sub
or
inc
push
sub
push
sbb
inc
or
cs
mov
xchg
sub
outsb
roll
ja
inc
or
in
dec
ljmp
sub
adc
mov
pop
fistpl
pop
out
mov
out
ficoml
or
loop
adc
jbe
shll
xchg
dec
mov
addr16
iret
inc
jns
add
imul
cmpsb
jl
inc
outsb
inc
jne
add
or
lea
out
arpl
adc
ljmp
jle
sarb
pop
jmp
xchg
and
ret
hlt
and
rolb
add
mov
jp
pusha
xchg
add
inc
push
int
frstor
add
sbb
test
repnz
aam
push
hlt
lds
or
out
sub
insb
jnp
mov
lret
les
lret
sti
xorl
leave
inc
xchg
subl
mov
stos
mov
sub
pop
inc
addl
push
jns
shll
leave
xor
push
sbb
jns
adc
and
cld
add
push
add
push
inc
cmp
add
dec
clc
repnz
imul
outsb
cwtl
cld
jle
sub
test
enter
imul
jns
inc
and
pop
push
bound
out
pop
shr
sbb
pusha
test
lret
and
mov
test
push
adc
mov
push
xchg
rcl
inc
sub
ja
dec
mov
int3
add
outsb
xor
movsb
mov
imul
sbb
cmp
lret
mov
pop
lret
dec
fcoms
out
roll
push
mov
popf
mov
cmp
add
sub
mov
aam
cmp
sbb
dec
sar
lcall
fs
or
pop
or
mov
rorb
add
clc
mov
cmp
scas
mov
mov
mov
mov
cli
pushf
loopne
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
js
push
adc
jp
adc
inc
lds
loope
mov
ja
mov
and
insb
cmp
mov
stos
inc
mov
mov
push
mov
dec
sub
clc
movsb
pop
mov
cmp
add
rcrb
xchg
jle
xlat
cmpsb
mov
nopl
shrl
jb
lahf
arpl
push
inc
mov
and
stos
or
subl
xchg
cmc
or
ja
movsb
dec
loopne
pop
xor
mov
xor
inc
orb
fs
inc
daa
adc
jns
pop
ds
mov
push
cmp
stos
popa
lods
push
cmp
mov
inc
jne
pop
cmp
push
imul
aam
cmp
imul
lds
clc
sbbl
push
push
or
into
and
push
mov
leave
js
aas
mov
mov
jl
xor
sbb
fs
rcpps
dec
inc
and
pop
testl
and
push
icebp
push
inc
mov
mov
data16
shl
mov
xor
or
push
sub
inc
push
mov
std
test
int
cmp
mov
xchg
jns
pusha
adc
mov
fcomi
dec
mov
mov
xchg
sahf
movsl
push
jns
or
lret
mov
stos
gs
je
iret
pop
mov
mov
cmpsb
inc
sbb
repnz
xchg
add
push
sub
shl
int3
mov
jmp
sbb
cld
xor
fs
sahf
sbb
lcall
adc
in
sti
pop
js
ljmp
in
stc
sahf
pop
sub
fldenv
sbb
cmp
leave
push
notb
jne
xor
popa
dec
aaa
enter
pop
sbb
or
xchg
xchg
xchg
and
adc
adc
stos
loop
test
lock
test
gs
popf
aas
or
xchg
add
daa
mov
cmpsl
mov
dec
leave
inc
pop
or
aad
push
mov
mov
inc
dec
in
ds
lcall
gs
cmp
int3
ja
cmp
icebp
cmpsl
out
fiadds
xchg
insb
aas
fmul
lahf
and
pop
negb
loop
inc
push
cmp
sti
pop
jo
mov
cmp
push
idivb
mov
cwtl
lcall
adc
jge
scas
push
jno
jns
les
xchg
int
ja
rorb
push
push
push
jge,pt
repnz
xchg
inc
sbb
dec
test
jo
fcmovnu
insb
in
sub
dec
adc
xchg
pop
loopne
repz
or
es
in
mov
repz
fdivrl
aad
es
xor
pop
mov
jg
mov
adc
dec
aad
mov
dec
sahf
loop
pop
push
mov
imul
cmp
fwait
adc
mov
in
mov
mov
inc
jmp
int
mov
jge
aaa
cmpsl
lfs
cmp
cmp
cmp
adc
pop
fwait
addr16
stos
in
sub
and
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
mov
adc
lea
adc
lret
xor
imul
stos
lahf
dec
loope
das
mov
mov
lret
inc
pop
cmp
pop
pop
sbbl
sub
jbe
pop
jbe
inc
leave
jge
div
icebp
lea
ret
jnp
shll
imul
bound
sbb
mov
inc
add
adc
xor
push
push
pop
jno
cmp
sub
insl
fdivs
push
cwtl
jl
cmc
cltd
sbb
jb
roll
addl
mov
mov
mov
dec
mov
stos
pop
push
jno
push
lea
stc
adcl
or
push
addr16
cmp
call
lea
fstpt
mov
gs
daa
loopne
and
add
popa
push
insb
icebp
cld
aam
je
stc
xor
shrl
mov
jge
mov
test
rcrb
sti
bound
jp
sahf
aam
or
in
aad
stos
ss
in
dec
loop
fnstenv
sub
add
cmp
push
add
lds
xlat
pop
loop
adc
dec
daa
outsb
int
rcll
push
lods
xchg
jl
fsts
jle
incl
adc
outsb
adc
int
inc
sub
xor
pop
je
pop
int
fistl
xchg
inc
mov
sarb
loope
xchg
ss
push
jne
hlt
rorl
bound
sub
xor
pop
inc
ret
mov
xchg
and
xorb
mov
push
aas
xchg
cmp
ds
jbe
mov
enter
adc
mov
repz
xor
hlt
inc
aas
jne
add
adc
pusha
fidivs
mov
lods
sub
lea
hlt
push
popa
sub
mov
dec
cmpsl
enter
mov
lods
nop
dec
and
scas
cmpsb
jne
xor
mov
dec
lret
ss
cmp
ds
xchg
jnp
dec
int
leave
cmpb
cmp
push
ljmp
inc
push
popa
cmp
rcl
cwtl
jmp
xor
fisttps
fsubs
das
dec
addl
mov
cmp
les
and
pop
xchg
inc
add
sbb
push
sub
mov
add
dec
dec
test
pop
sbb
jne
hlt
xchg
imul
sub
sub
cltd
mov
out
push
js
lock
pop
pop
push
jge
sbb
jg
xchg
je
sbb
or
aas
mov
out
and
cmp
mov
adc
adc
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
mov
dec
and
dec
pop
push
inc
jbe
rcl
inc
sub
inc
iret
jp
leave
fucom
sbb
xor
push
jmp
lret
xlat
das
imul
mov
and
jbe
pop
cmp
or
in
pop
jb
cmpsb
adc
adc
fs
jno
sub
shrl
jecxz
imul
adc
xchg
mov
mov
dec
push
mov
jb
incl
jns
sbb
cmc
inc
dec
dec
fwait
pop
cli
push
loop
cmp
imul
adc
mov
pop
stos
sbb
mull
out
sahf
lret
jno
and
loope
test
sarb
stos
jp
or
ret
mov
lcall
lock
ret
cmp
sahf
jge
dec
fdivrp
lahf
addr16
repz
aas
rclb
call
adc
fsubrs
xchg
inc
clc
mov
sti
jge
out
pop
orb
movsl
in
cmc
mov
add
call
pop
cmp
cmp
jg
mov
loope
sub
xchg
pop
pusha
inc
fisttps
pop
mov
jle
test
setbe
push
mov
mov
and
sahf
cmp
pusha
mov
push
dec
in
idivb
push
adc
ss
adc
ror
rorb
addr16
and
sbb
sbb
fbstp
mov
cmpsb
pop
andb
shl
xlat
ret
and
es
push
pop
dec
mov
sti
xchg
dec
push
in
aas
mov
clc
push
jbe
jbe
mov
scas
lods
mov
scas
and
les
inc
out
xor
mov
or
rcrl
mull
jmp
xchg
sarl
std
sub
arpl
mov
push
gs
lea
xchg
dec
test
ficoml
cmp
xor
push
pop
inc
hlt
test
mov
jle
pop
lock
clc
sub
inc
rorl
mov
out
mov
adc
mov
shl
sarb
popa
insl
xchg
cmp
or
xchg
into
int3
jns
xor
xlat
xchg
jmp
aas
sub
dec
in
lahf
stos
aad
push
inc
subps
mov
movsb
enter
xchg
movsl
std
adc
ror
lret
in
pop
jecxz
sarl
or
clc
lcall
stos
rolb
jg
cs
clc
sti
sbb
or
add
daa
push
addr16
ret
sbb
add
pop
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
ljmp
push
aaa
and
mov
testb
in
fucomp
sub
imul
or
pop
pop
jae
mov
in
out
mov
nop
aaa
mov
ror
and
ds
test
lods
push
jge
mov
out
cmpsl
aas
scas
lcall
inc
testb
ds
jnp
jecxz
fs
or
sbb
js
cli
inc
outsb
shlb
or
out
popa
cmp
lret
pop
rcrl
outsl
rcr
add
pop
mov
pop
push
stos
iret
mov
movsb
popf
xlat
ds
addb
cmp
in
les
mov
aaa
cmc
pusha
sub
dec
loope
int3
xchg
les
addr16
sub
cmpsl
push
sbb
sub
aad
lds
push
mov
or
jge
outsb
pop
scas
aas
xchg
add
scas
data16
push
daa
out
data16
cmovne
negl
je
dec
and
xchg
mov
outsl
adc
lahf
xor
imul
cmp
call
ja
add
cmp
pop
pop
stos
scas
dec
cmp
mov
fwait
cltd
pop
cmpsb
push
cmpl
jecxz
mov
mov
out
aas
fisttps
or
movsb
imul
mov
jl
mov
cmc
pop
hlt
jne
xchg
or
mov
push
inc
addb
xchg
mov
shlb
fcoml
test
lcall
xor
ret
mov
adc
imul
sub
pop
cwtl
cmpsb
mov
lahf
jb
pop
inc
lds
push
test
xlat
mov
jae
adc
pop
cltd
mov
add
int
mov
mov
outsb
xchg
loop
xlat
xor
jmp
mov
sti
push
mov
cli
push
mov
add
jbe
sub
pop
sub
jmp
shrl
ret
sub
nop
xor
sarb
sub
jge
mov
orb
pop
and
mov
sub
ja
sub
push
enter
in
insl
mov
jle
xchg
nop
jns
imulb
pop
adc
and
rol
repnz
loope
test
mov
ds
inc
outsb
dec
mov
loope
sub
fmul
iret
iret
inc
int3
pusha
mov
dec
lods
je
enter
imul
and
or
jnp
out
push
mov
in
cwtl
mov
js
inc
sti
mov
repnz
ja
cltd
push
pop
push
sti
repnz
jecxz
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
mov
adc
lea
adc
adc
sbb
repnz
or
testb
pop
push
jmp
test
xor
cmp
sahf
pop
cmc
das
inc
jg
pop
and
jb
test
je
jmp
notb
inc
add
jle
enter
fstl
icebp
sbb
sbb
into
push
jae
adc
push
push
mov
imul
pop
mov
xchg
dec
out
add
jo
cmpsl
pop
pop
pop
scas
loope
ret
inc
shlb
pushf
xchg
out
pop
repz
scas
xor
sbb
pushf
xor
ret
inc
jno
popa
mov
pop
insb
loopne
ds
inc
hlt
or
out
inc
pop
mov
scas
inc
test
shlb
mov
or
xlat
pushf
leave
mov
mov
sbb
roll
mov
gs
mov
and
out
roll
clc
fisubrl
sbb
bound
divb
pop
mov
cltd
loope
jbe
mov
sbb
push
push
scas
nop
ds
arpl
mov
das
daa
js
lock
push
xchg
xlat
cmp
sti
push
add
fsubl
out
mov
mov
scas
and
ret
icebp
cmp
clc
stc
lahf
ljmp
icebp
xchg
addr16
imul
mov
lret
enter
inc
cmc
inc
mov
lcall
jmp
push
pop
xchg
or
ljmp
xchg
in
jge
jbe
sub
add
lret
in
or
aad
fs
repz
outsb
cmp
shll
pop
fs
cld
mov
pusha
and
jg
adc
mov
pop
sbb
in
adcb
lods
hlt
pushf
sar
rcr
shlb
push
sbb
aaa
push
pop
adc
ret
mov
push
push
xchg
push
cli
das
fldcw
cwtl
jbe
mov
arpl
inc
movsb
xor
adc
xchg
adc
and
sbb
mov
push
push
popa
mov
add
jnp
mov
idivl
jmp
mov
subl
xor
clc
sub
inc
scas
add
inc
stos
mov
cmp
mov
inc
inc
xchg
add
neg
sbb
mov
sub
pop
ffreep
je
int
rcrb
cltd
jle
mov
sub
popa
clc
repz
xchg
mov
jne
lcall
and
je
xor
imul
dec
cmp
cmpsl
push
stos
sbb
testb
cwtl
js
push
mov
in
push
mov
cmp
push
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
pusha
jmp
inc
xor
adc
ljmp
xchg
mov
jl
lods
out
lea
push
adc
push
popf
xchg
lahf
push
mov
push
shll
mov
cli
cwtl
push
jle
sbb
fcmovb
ja
pushf
or
pop
sub
jo
adc
inc
jo
push
lahf
jo
sbb
pop
xchg
and
testl
cmp
int3
sub
rcll
xchg
sbb
dec
xor
insl
xor
sub
lret
sbb
and
sahf
lock
call
arpl
or
aas
lret
sub
jl
in
add
fs
ficompl
mov
loop
jae
add
push
or
movsl
mov
fists
adc
push
mov
clts
xor
aad
pop
xor
bound
mov
ss
rol
cmpsl
in
out
mov
test
inc
cmp
in
dec
mov
xchg
cmp
xor
into
mov
push
into
and
add
xor
cwtl
dec
popf
xchg
loopne
xchg
add
push
scas
xchg
leave
cmc
sub
fdiv
fldl
xor
push
les
xor
xor
mov
test
jl
outsl
stos
ja
mov
lahf
arpl
scas
mov
es
jp
inc
data16
nop
test
inc
sbb
ficompl
fsubs
xchg
popf
jno
insb
mov
insb
mov
jl
in
pop
pop
fisubrl
lock
mov
pop
push
push
mov
cmp
je
jnp
pop
pop
and
repnz
adc
jg
repz
mov
dec
dec
shll
push
fisttpll
repz
fmull
dec
and
push
ret
jo
and
idivb
mov
cwtl
mov
andb
jne
cmc
fisubl
mov
scas
mov
xchg
push
cmpb
iret
push
cwtl
test
jmp
jmp
es
fmull
je
outsb
mov
push
lret
inc
sub
xlat
nop
fcoms
xchg
sbb
cmpsb
int3
int3
or
xor
shll
cs
js
jae
dec
jo
adc
mov
push
mov
out
pop
pop
adc
test
js
loopne
xor
push
jb
mov
lret
mov
and
movsl
imull
int3
mov
inc
nop
add
popa
pmulhuw
dec
push
pushf
adc
add
enter
xor
mov
adc
in
les
dec
pop
into
xchg
loop
sbb
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
jbe
insb
mov
movlps
jmp
xor
mov
andl
lahf
loope
mov
sbb
sub
je
ret
lcall
out
cmp
push
insl
arpl
and
in
or
dec
stc
add
pop
das
out
je
push
notl
dec
xor
inc
cwtl
xor
mov
stos
sub
xchg
cli
data16
adc
in
push
push
lret
fstpt
jle
ss
das
or
xorl
sbb
arpl
sahf
cwtl
sbb
out
xorb
rorb
pushf
aad
clc
pop
loop
mov
add
addl
hlt
rcrl
dec
mov
xchg
mov
sti
push
ljmp
sub
movsl
lods
xor
xor
mov
sbb
sbb
mov
jmp
xchg
psllq
rclb
push
sbb
repz
aam
test
cmp
cs
sarb
mov
in
push
push
sti
rcr
jl
mov
in
in
lods
int3
dec
jns
inc
add
lcall
incl
sahf
cmp
dec
notl
sub
xchg
cmp
call
pop
mov
cli
clc
subl
ret
test
xchg
in
data16
push
inc
in
adc
hlt
les
inc
push
insb
add
jp
sbb
shlb
mov
test
jg
mov
cs
repz
and
jae
nop
fsubp
out
gs
inc
adc
out
cmp
das
push
daa
mov
hlt
pop
fidivrl
cmp
add
iret
ret
pop
inc
mov
xor
insl
lods
inc
add
xchg
jmp
sti
std
pop
xchg
std
addr16
push
pop
pusha
es
or
idivl
mov
ret
fisttpl
sbb
inc
test
lahf
pop
test
xor
shrl
ret
push
out
aaa
xor
xchg
xchg
into
jecxz
jp
fimull
mov
dec
ret
cli
jp
cmp
test
addb
jle
lcall
xchg
popa
call
mov
hlt
jmp
push
enter
xchg
cmp
mov
mov
dec
fs
je
mov
cmp
mov
stos
pop
jno
lock
stc
pop
test
divl
ds
mov
jno
popa
ljmp
or
cmp
pop
inc
jne
mov
pop
ja
mov
xlat
xchg
sbb
adc
fwait
pop
sbb
lret
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
sub
js
daa
adc
lea
adc
sbb
sbb
jnp
rolb
cmc
mov
cmp
movsl
push
adc
cmp
mov
popf
and
cmpsb
sub
jb
cs
dec
and
repz
cmpsb
xor
scas
in
pop
into
int
lock
clc
mov
cmpsl
shll
rcrl
xchg
pop
mov
xor
xor
or
out
inc
push
mov
xchg
inc
xor
or
popa
add
and
sbb
dec
add
push
test
mov
xor
int
sbb
jnp
jmp
icebp
or
daa
jns
inc
pop
call
jne
dec
pop
cs
jns
dec
sbbl
testb
rol
fs
ja
sbb
in
sbbb
pop
or
mov
or
cmc
mov
and
push
pushf
mov
or
test
out
push
movsl
dec
stc
iret
add
cmp
andl
dec
pop
stos
cmp
aad
fs
xchg
rol
cmp
stos
in
sub
or
lea
adc
sbb
dec
sahf
xchg
or
pop
xchg
xor
and
xchg
or
in
fsts
cltd
or
fists
xorl
imul
dec
mov
mov
xchg
xchg
rcl
in
fisttpll
into
mov
xor
aad
jbe
pcmpgtw
sub
inc
fwait
inc
rolb
int
cmpb
jo
and
scas
xchg
test
js
fsub
pop
jnp
fidivrs
jp
and
adc
xchg
ja
mov
insb
std
stos
jne
rcr
and
add
xchg
roll
xor
add
ljmp
jmp
out
adc
sbb
adc
fcoml
insb
dec
enter
dec
gs
add
mov
mov
xlat
pop
push
shll
xchg
fwait
adc
scas
or
inc
pop
mov
mov
pop
clc
test
push
mov
roll
shl
jge,pn
pop
ret
push
pop
mov
mov
mov
jmp
arpl
mov
fsubr
jb
mov
jmp
rolb
insb
lea
cmp
stos
out
pop
jecxz
test
jo
mov
pop
lret
dec
pop
insl
adc
mov
mov
pop
xchg
fwait
or
js
movsb
push
mov
dec
or
lcall
jle
inc
sub
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
or
loopne
call
pop
xchg
cmc
pop
divl
lea
sub
jmp
mov
jge
xchg
movsl
xchg
das
call
push
outsb
jecxz
nop
ss
push
or
sti
xchg
repz
rorb
daa
gs
push
inc
xor
xchg
xorb
stc
xor
sub
pop
repz
pop
testl
jno
dec
sti
cmp
lret
adc
aam
lret
mov
cmp
das
inc
pop
lret
mov
jmp
mov
ficompl
mov
leave
int
push
cs
imul
int3
push
sub
das
in
jg
sbb
xchg
insb
sbb
fs
sub
daa
loope
js
outsb
mov
imul
subb
mov
jnp
cs
cwtl
xor
std
shll
pop
das
push
inc
out
pop
pop
out
mov
shrb
arpl
mov
mov
mov
btc
fistpll
test
xchg
jb
mov
push
in
mov
xchg
jmp
add
add
mov
push
mov
in
add
cmc
shlb
jmp
or
shlb
xchg
lahf
dec
filds
push
inc
xor
pop
mull
mov
sahf
imul
cli
out
in
xchg
jge
dec
xor
inc
loop
sysret
mov
inc
test
or
jae
mov
std
lcall
aad
push
sub
lret
sahf
jae
xchg
push
shl
cmpsb
xchg
stos
xchg
movl
fcompl
cmp
cmp
je
sub
mulb
mov
pop
jbe
sbb
mov
xor
dec
mov
stos
inc
cmp
add
jmp
mov
xor
adc
cs
mov
mov
in
popa
mov
fiaddl
jb
xchg
sub
fwait
mov
push
xchg
pop
stc
jns
aad
sub
jl
sahf
xor
jo
jl
in
and
xor
stos
mov
lcall
insl
sbb
fstps
std
cmp
jp
jae
push
pushf
mov
dec
push
sbb
test
fdivrp
jp
testb
fdiv
mov
push
xchg
andl
lods
test
dec
mov
xor
dec
mov
xor
push
out
push
jecxz
mov
inc
cmp
nop
mov
mov
jbe
movsb
gs
xor
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
into
lods
push
sbb
adc
out
push
xor
pop
push
rdrand
mov
mov
loop
fstpt
adc
cmpb
bound
add
pop
imul
sbb
xor
andb
sahf
pop
mov
fistps
fwait
inc
call
cmp
mov
xchg
cli
or
jl
jmp
loopne
cmp
mov
lret
bound
das
dec
loopne
loope
mov
jl
and
add
xor
out
or
loope
inc
sub
sub
lahf
int
mov
mov
pop
and
sbb
add
inc
push
push
sbb
sbb
xchg
cmpsb
xchg
cmpsb
movsl
imul
icebp
dec
push
mov
mov
cwtl
jno
inc
loopne
jns
or
loopne
add
bound
inc
and
repz
bound
xor
sub
jo
sub
sub
xchg
lret
xor
nop
mov
xor
xchg
lcall
repnz
shr
call
out
pusha
cmpsl
aaa
sti
push
les
repz
cmpsl
scas
sbb
inc
in
arpl
fcmovne
cmp
enter
test
or
mov
cmp
xor
inc
cs
shr
xor
int3
iret
loope
cwtl
push
lds
sub
pop
fcoms
xchg
mov
xor
mov
pop
in
mov
push
pop
jo
shlb
out
scas
add
sbbl
xlat
pushf
test
cmpsb
mov
xchg
xchg
dec
outsb
push
mulb
push
div
sbb
fnsave
ss
pop
loopne
mov
loop
mov
push
jnp
movsb
or
fistpll
pop
idiv
jbe
or
push
and
iret
xchg
std
xlat
out
and
sbb
push
cmpl
mov
jecxz
sbb
js
aam
dec
cmp
sub
aas
fldenv
inc
leave
cmp
pop
and
out
out
xchg
sbbl
aam
pop
and
push
pop
pop
dec
sbb
mov
adc
or
pop
notl
mov
jb,pn
fs
subb
cmpsb
mov
ljmp
xchg
aaa
xchg
lahf
sub
mov
in
mov
adc
aad
xchg
lret
test
xchg
cltd
sub
jns
dec
clc
inc
lods
or
jns
mov
and
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
outsl
inc
in
nop
sbb
adc
cmpsb
out
sbb
sub
in
int
cmp
xor
adc
rorb
repnz
test
add
ja
jb
pop
dec
cmp
adc
test
jbe
fldl
js
mov
and
mov
mov
xchg
or
add
sub
cmp
push
push
in
cmpsb
and
sub
daa
les
cmp
ret
sbb
jge
test
dec
popf
or
adc
fs
das
int3
rcll
mov
div
push
ror
jnp
and
mov
mov
sarl
sti
test
imul
mov
test
jmp
jnp
repz
rcll
mov
repz
pop
jbe
xlat
repz
stos
xor
out
in
test
xchg
add
in
fstps
xchg
push
pop
jle
fisttpl
fwait
loope
adc
fldenv
lea
fwait
add
dec
pusha
pop
jecxz
ja
cmp
inc
les
clc
mov
xor
scas
jl
jle
mov
das
adc
pop
adc
pop
aad
sub
imul
shrl
add
les
jecxz
addr16
pop
int
frstor
mov
decl
ljmp
sti
out
loop
out
push
jb
loope
outsb
jbe
adc
repz
pushf
dec
push
dec
fcoml
xchg
popa
pop
stos
leave
and
fwait
and
testl
or
dec
in
mov
mov
cltd
mov
dec
in
pusha
test
push
movsl
mov
jnp
or
add
jb
dec
ja
push
das
loop
dec
or
cltd
shrb
push
repnz
push
dec
cltd
add
mov
push
adc
popf
xchg
xor
jp
dec
in
inc
inc
jmp
das
ret
divb
scas
pop
jns
dec
and
lea
pop
out
mov
mov
and
movsb
jmp
jns
xchg
gs
in
leave
stc
sti
icebp
dec
cwtl
outsb
push
jle
out
pop
sub
fildll
sti
loopne
mov
fisttpll
jmp
pop
sub
loopne
mov
mov
repnz
mov
adc
out
jg
adc
inc
dec
cmp
push
sub
inc
divb
push
mov
cmp
cwtl
sub
inc
cmp
lods
lds
jle
dec
push
xchg
jl
push
cmp
inc
outsb
and
pushf
or
and
cltd
mov
mov
cmp
das
scas
jb
fwait
jnp
and
and
xlat
mov
addr16
xor
addl
inc
loop
stos
jno
das
adc
leave
mov
mov
out
push
loop
shll
mov
scas
mov
das
stos
push
pop
xchg
jmp
adc
cmpsl
aaa
aaa
xor
je
dec
xchg
inc
test
fsubrl
mov
adc
xchg
push
in
jns
les
sbb
or
rcl
sbb
in
cmpsl
movsl
fisubl
mov
dec
mov
cmpb
add
jbe
stos
loop
testb
or
cmpsb
sahf
and
cmc
shrl
cmc
jl
mov
jl
inc
ret
mov
xchg
push
mov
jae
sub
xchg
xchg
mov
out
push
loop
mov
cwtl
push
push
aaa
shll
mov
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
or
adc
adc
add
sbb
or
ret
mov
push
adc
nop
sbb
cmc
test
xchg
xchg
add
dec
sub
push
add
outsl
mov
jg
je
cmc
addb
aam
das
jnp
mov
bnd
xchg
jb
mov
xchg
ja
jne
pop
pushf
xchg
mov
cmpsl
repnz
xor
add
mov
add
iret
inc
mov
jmp
push
lock
out
popa
cli
ljmp
xchg
test
pushf
loop
and
loope
cli
es
mov
add
push
xor
xlat
cmpsl
sbb
jne
fcoms
push
fiadds
roll
imul
mov
in
out
in
repz
push
scas
add
outsl
mov
ds
pop
stos
dec
pop
aad
arpl
inc
dec
dec
decb
call
shl
pop
shll
push
cmp
pop
dec
pop
ds
out
cmp
lret
xchg
xor
mov
and
sub
mov
inc
mov
in
aaa
pop
and
jl
enter
in
mov
xchg
sbb
jmp
cli
or
mov
ficompl
out
add
xor
dec
divb
ss
sub
xlat
and
dec
ret
push
lret
mov
lret
call
bound
mov
xchg
xchg
sbb
les
sub
mov
lods
sub
push
mulb
lds
xchg
mov
mov
std
sub
mov
sarl
cmc
mov
add
push
mov
mov
mov
inc
call
push
test
xchg
xor
arpl
lods
xchg
mov
sub
mov
outsl
rcll
jo
test
sub
lods
mov
add
int3
push
jecxz
push
decb
test
push
mov
fnstsw
push
popa
jmp
lret
mov
xchg
jno
pusha
add
fsub
jecxz
push
aas
lods
loopne
xor
into
gs
das
aaa
out
push
mov
ffreep
cltd
add
cmc
push
xor
sbbb
in
adcl
inc
xchg
mov
outsb
test
outsb
ret
mov
lods
paddd
lea
call
insb
pushf
sub
and
into
shr
cmp
in
mov
push
inc
jle
xor
cmp
clc
inc
and
out
test
xor
out
mov
mov
xchg
mov
ds
outsb
mov
xchg
mov
sbb
mov
int3
mov
xor
xor
outsl
adc
dec
lds
sar
into
stc
xchg
fldl
scas
push
repz
ret
push
fildl
or
sbb
mov
shll
pop
push
mov
popa
dec
sbb
loop
lret
mov
into
dec
pop
add
jge
xor
or
sbbb
daa
inc
push
fadds
push
imul
xor
aam
jmp
fadd
test
push
stos
jb
test
shrl
movsl
imul
mov
incl
and
jg
pop
sti
imul
push
push
cmp
les
dec
je
jl
push
and
cmp
sbb
lret
xchg
test
outsl
or
pop
add
ss
mov
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
stos
filds
adc
adc
addr16
das
add
push
pop
inc
cs
add
adc
xchg
idivb
fidivrl
inc
movsb
jg
fldt
bound
and
mov
enter
push
je
inc
sub
pop
xchg
bound
sub
xor
insl
mov
push
lahf
outsl
int3
imul
test
mov
jbe
xchg
cmpb
add
dec
int
pusha
add
imul
sub
imul
mov
fdivl
jl
pusha
lret
mov
mov
cld
daa
adc
je
enter
call
pop
xchg
cli
fldl
imul
mov
loope
mov
mov
orb
outsl
jl
call
and
in
mov
xor
addr16
pop
loopne
push
imul
or
cmp
outsl
repnz
mov
cmp
outsl
jne
jns
scas
insl
fimull
mov
and
nop
jg
mov
nop
sub
inc
sub
sub
ret
adc
ret
mov
xor
dec
jg
in
xchg
lds
sub
lea
push
cli
xor
lock
inc
mov
out
popf
hlt
ss
jae
xchg
jae
cmc
outsb
ret
into
popl
popf
fcomps
mov
lret
adcl
lods
mov
sti
test
shl
mov
mov
hlt
std
testl
xor
in
mov
add
fimuls
lock
arpl
jge
xchg
stc
pop
lds
pop
addr16
push
ja
push
inc
and
xchg
mov
daa
rcrb
outsl
push
mov
jmp
sbb
or
insl
vmptrld
sub
add
push
lods
scas
rolb
cli
rclb
or
mov
cld
lret
dec
subl
push
rcll
fimull
sbb
fstpl
pop
pop
push
loope,pt
cmp
ret
mov
inc
cmc
aad
dec
out
mov
cwtl
mov
cld
push
dec
and
fdivrs
cmp
pop
cld
push
add
aaa
mov
xchg
jecxz
mov
insl
fdivrs
xor
sub
cmp
dec
or
cmp
fnstsw
js
sub
push
cmp
hlt
mov
xchg
loope
mov
pop
xchg
test
int3
inc
xchg
aad
inc
or
in
xor
push
xchg
fnstcw
lahf
sub
bound
cmpsb
sub
lea
add
aas
sbb
out
ds
jg
mov
inc
mov
adc
movsl
mov
push
pop
daa
enter
add
xor
push
mov
repz
mov
and
in
data16
sbb
aaa
jle
xor
and
dec
xchg
add
pop
pop
loopne
pop
rcrl
add
ds
or
or
push
push
xchg
mov
xchg
rcl
and
insb
frstor
cmp
mov
dec
cmc
add
fistps
movb
or
dec
jns
jns
pop
push
sub
jp
iret
stc
mov
out
cltd
sbb
popa
inc
xchg
enter
daa
imul
sub
insb
scas
push
mov
jle
mov
scas
cmpsb
aaa
jno
xchg
adc
pusha
lret
xor
adc
xchg
or
rcr
xchg
push
cmpsl
xor
in
mov
pop
cmp
daa
frstor
jle
pop
shlb
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
xchg
push
xor
xchg
movlps
lock
mov
pop
mov
mov
shlb
ja
dec
jno
flds
xchg
and
lods
hlt
loope
sbb
mov
jns
pop
fldenv
pop
xor
pop
scas
lods
fs
shrl
jnp
outsb
inc
aam
arpl
add
pop
xor
jnp
std
scas
or
add
xchg
test
pop
inc
std
mov
or
stos
xchg
push
dec
lcall
xor
bound
addl
addr16
sbb
add
into
and
stc
fistpll
cltd
mov
lret
add
inc
sti
call
and
les
lcall
jno
in
lret
aad
sub
mov
fmull
js
enter
jo
dec
call
icebp
addb
sarl
stc
leave
imul
jo
xor
jp
adc
pop
jo
int3
jae
jmp
mov
rcrb
mov
nop
je
js
xor
lahf
fimuls
xor
loope
or
inc
sti
call
mov
add
cmpsb
or
arpl
ret
push
mov
xor
cmp
cld
test
add
jmp
mov
fwait
pop
xchg
pop
mov
ficoms
jge
jne
mov
sahf
jo
jecxz
xchg
xorb
push
mov
clc
std
jle
and
fcoms
out
pop
dec
mov
mov
fisubrl
mov
int
sub
in
add
dec
sbb
adc
sahf
scas
data16
lret
add
mov
mov
push
aas
xchg
sbb
jae
leave
lds
mov
pop
out
xchg
data16
hlt
sub
pop
inc
je
repnz
and
jmp
lods
push
jnp
xchg
ja
pop
or
bound
pusha
adc
arpl
test
inc
cmp
jae
clc
mov
push
jns
mov
stos
and
jle
leave
inc
mov
inc
add
lret
icebp
inc
xchg
arpl
add
leave
jb
jp
jno
cmp
sbb
add
inc
call
xchg
inc
xorl
and
sub
jns
adc
out
loopne
xor
lods
repnz
mov
adc
cs
leave
jno
repnz
or
subb
aad
push
inc
stc
outsb
movsb
sbbl
push
js
inc
jle
pop
mov
jnp
mov
das
aaa
or
shrb
push
loop
jp
sub
mov
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
loope
mov
xchg
movlps
xchg
das
dec
call
mov
mov
sbb
or
jmp
es
dec
mov
mov
xchg
xor
or
push
imul
leave
into
sbb
fstpt
push
insl
jne
push
fidivl
jmp
inc
fistl
push
jb
xchg
test
insl
pop
ds
int3
cltd
xor
negb
mov
sbb
jecxz
adc
out
outsb
push
fucomip
ljmp
arpl
xchg
push
imul
in
inc
testb
mov
pop
add
in
scas
rcl
into
add
imul
dec
mov
xor
mov
add
inc
adc
add
jl
call
dec
cltd
xchg
push
arpl
cmp
adc
xor
mov
les
jns
inc
ljmp
cmpsl
jmp
gs
xchg
imul
cmp
sti
xor
cli
aam
xor
cld
pop
xchg
push
iret
dec
mov
mov
xchg
jno
sub
jmp
jbe
mov
out
push
fdivs
xchg
jge
jae
push
jmp
mov
dec
lret
pop
or
sti
jl
jmp
hlt
inc
cmc
loope
popa
adc
fadds
popf
dec
insb
in
test
aam
ss
lcall
roll
xchg
mov
cwtl
pop
addl
enter
adc
dec
out
pop
mov
mov
in
push
jl
sub
stos
jb
or
out
addb
mov
sbb
loopne
cwtl
hlt
leave
cmp
lock
out
data16
mov
dec
push
pop
jle
cmpsb
addr16
inc
cltd
and
test
out
dec
jo
jmp
or
xchg
aam
rorb
sbb
jge
hlt
xor
inc
testb
ss
jge
mov
clc
cmp
dec
mov
cmpsb
ret
and
mov
movsb
repz
pop
dec
mov
inc
rclb
mov
ss
jp
dec
in
cld
incb
mov
mov
jbe
imul
in
jmp
je
cltd
lcall
mov
sbb
cmp
fadds
shlw
sbb
sbb
aaa
nop
xor
and
mov
in
ds
out
xor
and
or
fnstenv
xor
scas
dec
insb
frstor
imul
movsl
xchg
stc
roll
in
sbb
pop
gs
scas
adc
popa
cmpsb
cs
lods
dec
int
roll
add
mov
mov
sbb
add
rol
push
ljmp
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
and
adc
sbb
sbb
popa
push
aas
pop
mov
into
sarb
mov
cmp
data16
in
inc
fsubrs
mov
test
imul
insl
or
pop
popa
and
lret
push
inc
in
push
sub
mov
movsl
jo
xor
rcr
lds
mov
cmp
mov
cld
mov
push
push
add
mov
cmp
cld
aam
xor
pop
inc
pop
shll
sub
or
pusha
loope
and
mov
cmp
out
outsb
push
arpl
dec
insl
cs
xor
add
in
mov
insb
jb
push
cld
insb
xor
in
subb
movsl
sarl
xchg
push
xchg
xor
movsb
pop
fldcw
in
cmp
fmuls
jp
flds
mov
fiaddl
aaa
xchg
js
cmp
push
jo
fdiv
addr16
negb
sub
cmp
or
fistl
push
stos
sub
mov
xor
or
and
int
notl
xchg
add
mov
in
insb
scas
push
leave
je
mov
push
adc
stc
cmp
neg
cmp
inc
aad
cwtl
xchg
dec
movsb
fcmovu
rorb
outsb
push
adc
movsl
adc
mov
pop
das
xchg
push
cltd
inc
fimull
inc
shll
mov
sub
xor
inc
insb
mov
sub
cmp
fdivrl
xchg
insl
movsl
es
fs
sbb
pop
mov
push
addr16
movsb
je
fidivs
shrb
cltd
mov
outsl
mov
cltd
jbe
stos
aam
or
xchg
sub
fistpll
fmul
std
cmpsb
ss
cmpsb
cld
addr16
adc
pop
xor
xchg
cmpsl
xor
pusha
loope
dec
movsb
rorl
mov
in
dec
xchg
sub
mov
jo
icebp
add
fcmovnb
mov
out
test
fstl
push
cld
pop
sub
or
xchg
mov
jae
or
xor
cmp
ljmp
popa
or
test
les
iret
cmp
addl
in
fwait
shll
dec
push
xchg
or
ljmp
dec
stos
imull
in
xchg
lret
add
mov
pop
fwait
and
aaa
shlb
repnz
shl
movsl
xor
dec
dec
mov
out
sub
test
nop
in
mov
cmpsl
push
popa
add
out
jbe
mov
rcrb
mov
sbb
in
ss
add
mov
lds
pop
call
add
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
icebp
push
mov
xchg
movlps
shlb
and
adc
mulb
outsl
and
cmp
daa
mov
or
jp
std
jle
adc
cmp
and
fisubrl
cvtpi2ps
xlat
mov
int3
inc
mov
pop
push
nop
ljmp
jns
fsubrl
test
add
xlat
push
sub
push
dec
js
and
cwtl
pop
xorl
aaa
add
pop
mov
ss
fildl
sti
sbb
push
dec
in
cwtl
test
inc
add
shll
cli
bound
or
pop
popa
shll
sbb
loopne
add
aaa
mov
daa
jle
das
fsubp
loopne
std
shlb
imul
xchg
inc
rcrl
pop
js
das
pop
mov
mov
call
cmpsb
in
sbb
mov
and
enter
jg
adc
in
adc
jno
cs
jne
stc
push
xchg
mov
ljmp
mov
addr16
push
pop
add
inc
jbe
std
xchg
pop
sub
sub
xor
mov
xchg
clc
mov
xchg
lret
fmulp
jbe
std
ret
ja
pop
out
ja
jle
cmp
pop
mov
and
xor
outsb
push
imul
mov
xrelease
std
movsl
or
dec
aaa
jo
add
inc
imul
cmpsb
mov
std
and
fs
mov
and
fs
lret
inc
or
popf
testl
xor
xor
subb
sahf
push
sbb
xchg
or
out
ja
add
add
sbb
in
inc
das
jno
mov
inc
or
out
inc
jg
or
push
icebp
cmp
movb
cmpsb
pop
jecxz
jge
push
mov
mov
pop
add
sbb
push
stc
sbb
in
ret
push
xchg
pop
and
xchg
lods
sbb
into
sbb
jns
inc
rep
pop
pop
pop
dec
mov
xchg
movsl
sbb
adc
cld
lea
inc
cmpsl
out
insb
mov
push
jl
insl
mov
loope
pop
xor
add
leave
popa
dec
fs
mov
insb
jb
cltd
lret
push
sub
push
and
push
or
adc
enter
xor
add
shll
jne
sub
pushf
add
mov
mov
mov
cmp
dec
aas
mov
jmp
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
xchg
mov
adc
adc
pop
sbb
loop
push
jmp
into
cmp
nop
mov
repz
cmpl
mov
add
enter
nop
jb
dec
dec
cs
push
jmp
add
mov
mov
sub
into
js
ret
pop
xchg
lahf
test
mov
inc
inc
dec
dec
fidivl
test
shll
in
jb
roll
jnp
out
jns
mov
ja
pop
frstor
push
mov
jl
mov
ja
sbb
cmc
jne
dec
pop
xor
adc
stos
inc
cmpsb
xor
stc
inc
pop
shll
fsubr
mov
fxch
push
movsb
fcoms
mov
jl
loope
and
dec
push
jbe
xchg
mov
jp
inc
pop
nop
mov
xchg
fcomi
leave
pusha
imul
jno
or
cli
add
and
xchg
xchg
adc
fimuls
add
push
imul
sarl
fbld
mov
sbb
rolb
mov
add
sbb
fcompl
mov
adc
cwtl
clc
sub
xor
xchg
and
or
leave
cmp
cmpsb
jns
jmp
in
sub
dec
add
add
test
loopne
adc
mov
push
and
sub
icebp
cld
mov
jp
sbb
imul
jge
cli
or
insb
jno
lret
test
dec
and
iret
push
inc
xchg
hlt
xchg
adc
inc
xchg
push
lds
mov
sub
xor
in
add
sbb
sbbl
adc
sar
add
add
add
subb
pusha
push
mov
int3
pop
ret
mov
pop
adc
mov
outsb
push
fwait
push
adc
mov
ljmp
ds
inc
ja
cmp
cwtl
clc
clc
leave
jle
cld
mov
mov
sbb
cmp
into
js
scas
mov
mov
shll
add
jmp
idivb
je
xlat
aam
syscall
pop
aaa
push
popf
fld
jmp
or
sub
mov
int
xor
lahf
int3
hlt
adc
mull
lds
cmp
or
push
xchg
scas
mov
xchg
sbb
xor
cmp
add
or
inc
push
xchg
jb
test
mov
mov
mov
inc
adc
push
or
daa
ljmp
pop
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
enter
add
adc
adc
pop
in
rorl
xor
jne
xchg
xor
aaa
add
push
imul
xchg
out
loope
pop
push
inc
jmp
cmp
data16
sub
push
neg
pop
out
pop
aad
or
fistpll
sbb
fisttpll
push
mov
xor
push
loopne
stc
out
xchg
lods
mov
ja
fsubs
fs
inc
insb
jns
push
lea
and
in
shlb
ljmp
mov
dec
cmp
fmuls
daa
pushf
fwait
test
xchg
mov
xorb
mov
rcll
xchg
inc
mov
pop
mov
je
xchg
dec
test
hlt
push
cmp
sbb
adc
pop
shl
and
mov
lret
movq
mov
fnstenv
stos
xor
mov
inc
or
push
pop
test
addr16
xor
mov
mov
sbb
movsl
lock
nop
outsb
ljmp
in
push
and
cmc
dec
sub
hlt
insl
sarb
xchg
aam
dec
mov
sbb
popf
dec
cmp
or
sub
stos
fxch
mov
pusha
or
insb
adc
std
cmp
mov
pop
adc
clc
mov
xorl
jnp
int3
xchg
orb
xchg
jg
and
cmp
lods
lds
lods
cmp
push
mov
popl
iret
adc
cltd
pop
mov
fdivrs
cmp
loope
inc
stos
sub
and
loope
adc
jo
adc
aas
leave
xorl
movsl
sub
loope
or
mov
iret
and
inc
pop
sub
pusha
xchg
sahf
jecxz
or
mov
in
sub
adc
loopne,pn
out
jge
fadd
adc
xchg
cmp
fwait
mov
rorl
cmp
lcall
fdivrs
inc
or
sbb
pop
lahf
push
jb
daa
insl
push
dec
mov
icebp
leave
out
pop
lret
mov
hlt
or
or
imul
mov
mov
ljmp
adc
fmull
cmp
xchg
xchg
xchg
cmpsl
call
inc
pop
out
push
add
mov
in
loope
popf
pusha
repnz
cmp
bound
jnp
xorl
iret
add
pop
xor
fisubl
out
and
mov
mov
mov
mulb
js
add
jne
addr16
pop
rolb
xor
in
pusha
popf
enter
repz
lock
inc
testb
aas
popf
addr16
pop
ds
mov
xchg
pop
add
call
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
jae
sub
jnp
adc
adc
lret
mov
mov
mov
mov
xchg
xor
rorl
pop
stos
jecxz
cltd
ja
jns
inc
ljmp
int
pop
lock
pop
lds
stos
mov
mov
bnd
aaa
add
add
mov
xor
jmp
inc
xlat
sbb
int3
sbb
jae
push
cld
jle
jl
lea
daa
or
dec
fcomi
imul
xor
cmp
sbb
jg
pop
dec
cmp
leave
push
sti
sub
mov
mov
stos
add
pushf
iret
push
ja
mov
sahf
dec
xor
and
test
cltd
cli
in
movsl
mov
jg
cmp
fistpl
inc
les
mov
in
xlat
out
xor
mov
xchg
cmp
popl
jp
imul
aas
icebp
push
call
dec
mov
jnp
push
pop
or
btc
mov
xchg
mov
mov
xchg
movsb
es
sbb
cmc
or
jo
push
push
ret
inc
inc
or
into
mov
mov
mov
adc
rolb
ja
sbb
repnz
scas
orb
xor
or
lahf
ljmp
js
stos
std
adc
hlt
cmpsb
xchg
adc
and
movsb
add
push
jl
jno
adc
mov
iret
aam
cmova
sbb
push
ret
bnd
mov
cli
fcomi
movsb
xchg
pop
test
inc
sbb
mov
mov
jge
xor
mov
xor
daa
sahf
int3
sahf
add
or
loopne
mov
int
nop
inc
inc
xchg
je
dec
xor
mov
dec
je
loopne
and
sbb
jmp
lea
push
jge
aas
or
jne
lods
and
mov
cmp
mov
xor
jmp
repz
mov
je
rcrb
xlat
xchg
or
mov
lods
jo
and
jno
mov
movsl
cs
ret
xchg
mov
out
pop
or
addr16
lahf
jle
adc
dec
int
xchg
sub
das
outsb
clc
addr16
fistps
xor
lock
daa
and
and
insb
sbb
sub
pop
inc
mov
mov
repz
or
or
mov
and
push
sbbl
negl
mov
push
mov
fbld
jge
loope
clc
mov
mov
pop
cmc
jb
push
dec
lock
jp
inc
sbb
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
stos
ficoms
adc
loop
sbb
push
inc
je
push
sbb
add
stc
arpl
mov
xor
jno
stos
xlat
cmpsl
xor
clc
mov
mov
inc
mov
mov
cmp
jnp
insb
insb
insb
cmpsl
cli
jg,pt
movsb
popf
xchg
mov
pushf
pop
leave
jo
add
jns,pt
adc
dec
jo
out
push
cld
outsl
sub
xchg
pop
das
aad
lea
dec
cmp
add
fidivl
std
cmp
push
daa
xor
mov
cmp
push
lock
mov
jno
xor
sub
ds
and
jae
fnstcw
gs
adc
out
pop
rclb
rcll
insb
inc
sahf
and
andb
xor
adc
shr
add
jp
xor
inc
add
mov
and
mov
and
ret
or
and
mov
jecxz
pop
mov
aaa
aad
popf
sti
dec
mov
push
idivb
adc
push
shrb
iret
jae
test
xchg
clc
adc
and
pop
aam
adc
adc
out
pop
fs
loop
ret
insl
leave
dec
or
dec
xchg
push
fcmovu
fisubrs
test
stos
adc
jb
movsl
in
std
in
sbb
mov
sahf
or
fsubs
std
push
cli
sti
fwait
pop
imul
or
jl
add
xor
ljmp
xor
rclb
sbb
call
lock
push
notl
sarb
inc
pushf
mov
loop
pop
dec
mov
mov
mov
setge
xlat
in
into
xlat
mov
push
popf
cs
sahf
pop
xor
lods
out
repnz
pop
add
fwait
xor
scas
fwait
mov
lea
sbb
mov
push
movsl
popl
sub
mov
clc
stos
add
xchg
xor
fs
aad
adc
in
mov
cmc
adc
xchg
mov
in
mov
cmp
in
mov
fdivr
rcrl
mov
outsl
mov
scas
push
cmp
in
mov
lods
nop
pop
clc
lea
sahf
or
cltd
jo
xchg
out
ljmp
and
test
dec
fstl
gs
insb
imul
call
dec
movsb
jg
sbb
stos
jle
sub
in
adc
mov
xor
in
mov
enter
test
pop
lods
popf
push
push
xchg
lcall
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
push
or
adc
adc
push
mov
fisttpll
cmc
add
mov
imul
mov
outsl
pop
sbb
stos
or
cmp
ja
add
faddl
fwait
push
push
insb
or
jp
leave
jmp
dec
jge
test
and
xor
xchg
dec
dec
jne
push
pop
shrb
xor
lcall
sub
cmp
js
outsb
mov
mov
clc
adc
clc
ds
or
test
popa
xor
cs
lods
inc
sub
iret
jp
imul
jg
popa
stos
pop
add
xchg
sbb
dec
test
pmaddwd
into
pop
xchg
and
in
ja
jge
addr16
lds
or
push
jo
push
movsb
ds
sbb
jecxz
adc
aas
pop
ja
icebp
aad
out
dec
dec
lds
and
push
dec
stc
xor
int
xlat
adc
xor
cmp
in
cmp
les
push
lods
jg
push
mov
hlt
pop
xlat
jge
mov
pop
icebp
ss
sbb
push
xlat
das
sarl
cs
rcrb
sub
pop
lea
dec
shll
add
xchg
outsb
fcompl
and
inc
pop
loope
push
and
inc
lahf
push
adc
in
shlb
xor
stos
pushl
imul
insb
push
das
push
jns
sahf
mov
push
or
mov
add
xorb
cmp
cmp
cmove
jo
xchg
mov
pop
mov
xchg
mov
in
movsb
test
out
push
push
jnp
leave
repnz
imul
inc
mov
adc
jnp
ljmp
pop
mov
in
push
dec
neg
jl
addr16
les
ss
ret
mov
lods
test
rorl
daa
outsb
sahf
lret
ja
fnsave
inc
loope
clc
lds
pop
xlat
dec
insl
or
scas
jl
mov
or
sahf
ror
sahf
leave
pop
dec
mov
mov
push
push
loop
adc
pop
xchg
push
cmp
push
xchg
or
cwtl
inc
in
add
xchg
xchg
hlt
arpl
stc
cmc
mov
xchg
test
push
icebp
stos
mov
stc
mov
bound
out
rcll
pop
push
mov
fnclex
hlt
fldl
adc
rep
mov
inc
imul
mov
and
fxch
jp
fcmovnu
sbb
mov
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
jmp
sub
lcall
or
aaa
fwait
shll
lahf
cld
pushf
mov
cmp
icebp
int
es
aam
mov
divb
jb
lret
sub
aam
daa
or
ret
scas
lret
les
add
int3
fnstsw
adc
adc
add
cmp
mov
lahf
mov
jne
je
and
das
push
pop
cli
aad
hlt
fcoml
xchg
cmc
xlat
repnz
sbbl
dec
mov
test
push
subl
jp
jne
pop
sbb
xlat
jns
mov
cmpsb
inc
jle
lahf
mov
or
jg
and
or
cmpsl
mov
sbb
add
jl
das
testl
sbb
negl
mov
jne
sub
insl
in
popa
mov
in
mov
sbb
in
mov
and
xchg
xchg
aad
js
mov
insl
and
aad
in
lret
cmpsl
inc
push
xlat
jg
pop
mov
jns
lret
and
ret
loopne
sbb
jae
inc
int
into
mov
sti
mov
xchg
add
push
and
ja
dec
icebp
sub
pop
sbb
out
incb
leave
les
es
icebp
mov
lea
add
dec
push
cmp
mov
into
fsubl
mov
test
pop
loop
mov
sbb
xor
push
jle
std
xchg
out
repnz
mov
inc
or
rcr
pop
mov
sub
and
mov
pop
inc
dec
sbb
arpl
das
inc
test
dec
jp
aas
fs
adc
insl
pop
cmp
ja
pop
popa
cmp
imul
sub
add
cmp
clc
fs
lret
sub
aad
adc
jbe
gs
repz
in
mov
imul
jecxz
adc
xor
lock
repnz
test
loop
mov
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
cld
pusha
js
into
adc
adc
push
or
xor
sbb
lods
mov
in
sbb
test
ljmp
mov
in
test
mov
leave
loopne
clc
scas
mov
jo
sbb
sahf
cmp
sub
mov
fwait
jecxz
arpl
add
movsl
popf
push
jmp
loopne
jns
mov
movsl
or
shrb
push
and
sar
xchg
sub
test
dec
adc
and
jo
shlb
aaa
sahf
adcb
mov
movsl
in
xchg
jnp
fldl
jl
ffree
xchg
data16
fs
shll
and
sbb
sub
pushf
pusha
lea
pop
mov
enter
add
test
dec
sub
sub
xor
sub
jmp
shll
xor
sub
test
jnp
cmp
fnstsw
test
sub
cmp
daa
mov
mov
in
daa
pop
push
jmp
mov
xchg
lahf
mov
jnp
lods
and
xor
adc
out
sbbl
adc
int
pop
ja
cmp
fldenv
and
cmpsl
dec
int3
int3
sbb
jge
jmp
imul
pusha
fcmove
lock
adc
cltd
js
adc
dec
outsl
loope
shll
test
divb
fwait
movsb
iret
xlat
enter
mov
pop
adc
roll
sbb
pop
mov
shl
mov
aas
xor
xchg
sarb
jbe
adc
pop
xchg
pop
push
xchg
repz
jle
add
popf
mov
jp
and
add
adc
push
cmpl
stos
lcall
scas
jno
cs
sti
insb
pop
repnz
mov
outsb
adc
push
ret
pop
outsb
subb
nop
and
iret
inc
cmp
addr16
test
and
sbb
cmp
xchg
mov
push
mov
mov
decl
or
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
jp
icebp
stos
lret
enter
iret
and
orl
sbb
lock
mov
repnz
adc
fcoms
push
nop
push
and
mov
outsb
jo
inc
sbb
daa
inc
insl
fsubrl
cmp
dec
lcall
push
adc
popf
ljmp
mov
stc
push
mov
ffree
jno
cmpsb
fisttpl
jg
push
and
jl
push
iret
pusha
sbb
std
jl
cmp
xchg
jmp
orb
jmp
mov
movl
push
mov
pop
scas
jmp
and
push
je
loope
pop
idivl
push
mov
push
movsl
pop
aaa
mov
shll
popf
repnz
mov
jecxz
inc
pushw
xchg
pop
outsl
imul
inc
jge
cmpl
adc
in
cmpsl
aaa
xor
jge
jecxz
jbe
inc
leave
push
lea
leave
xchg
mov
cli
leave
jo
pop
or
push
in
shl
test
pop
dec
insl
inc
outsb
adc
inc
sbb
lea
aad
jmp
daa
std
lret
aam
inc
cmp
push
and
dec
sarb
orb
lret
mov
add
sti
mov
mov
in
mov
jo
cmpb
push
mov
fsubl
cmp
jb
push
fiadds
or
push
mov
push
xchg
push
inc
in
inc
in
sub
push
vaddpd
enter
dec
fbld
mov
stos
pop
mov
insb
push
sub
int
daa
in
sub
into
inc
cli
mov
xor
adc
lret
aad
dec
stos
outsl
scas
inc
mov
push
sarl
adc
push
mov
in
push
and
imul
das
push
add
cmovo
xor
js
sbb
ljmp
xchg
repz
mov
pusha
mov
fisttpll
xchg
test
shrl
and
adc
mov
lea
insb
cmp
pop
gs
ret
and
test
cmp
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
testl
enter
jo
inc
call
pop
test
push
mov
or
sub
mov
mov
push
sub
or
push
jge
lea
jae
lods
pop
int
sti
dec
ret
sub
lret
test
mov
and
pop
sub
mov
out
xor
in
push
sub
std
shlb
jo
call
mov
aam
fists
dec
pop
sti
push
repz
cmpb
iret
fistps
cmpsb
xorl
add
adc
mov
test
lds
out
pop
test
rol
ljmp
pushf
rcrb
sbbb
mov
pop
mov
or
in
iret
xor
out
mov
xchg
adc
mov
xchg
jnp
sbb
add
stos
out
ret
das
xchg
sub
pop
mov
mov
jl
loop
lds
movsb
inc
jb
pop
pop
dec
and
xor
cwtl
adc
sub
adc
test
into
push
andb
popl
or
popf
in
or
insb
adc
jp
daa
dec
stos
mov
int3
push
adc
out
xchg
bndldx
cmp
jo
pop
pop
sbb
jb
mov
fistl
push
sbb
cltd
or
shlb
lahf
shrl
inc
fidivs
sub
jmp
inc
pop
sbb
cmc
outsb
push
repnz
push
iret
fbstp
les
pop
and
cmpsb
test
mov
fdivrs
mov
repz
mov
xor
push
mov
pop
mov
mov
pop
test
and
adc
jp
loopne
or
mov
push
pop
ret
jns
fisubl
in
lock
pop
stos
popf
mov
mov
arpl
mov
xor
outsb
inc
mov
arpl
xor
sbbb
and
jmp
dec
shufps
cmp
test
mov
mov
push
ror
jp
add
lcall
jo
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
lret
punpckhdq
ret
enter
jp
sbb
inc
pop
inc
or
xor
sub
pop
and
aam
mov
push
cld
ret
xchg
bsr
xchg
jbe
ljmp
loop
and
jecxz
into
mov
push
ja
mov
inc
inc
les
cli
aad
es
nop
ret
push
outsb
callw
mov
inc
dec
jp
outsb
xor
add
jg
sbb
aad
push
ret
or
mov
push
pop
cli
jmp
add
mov
ja
pop
mov
jmp
sbb
out
lret
xor
adcb
lea
and
sub
movsb
mov
inc
mov
int3
inc
outsl
mov
gs
cmc
push
pop
arpl
xor
mov
pop
dec
xchg
hlt
cmp
nop
pushf
jp
std
out
jae
lock
xor
sub
loop
imul
in
lahf
fdivrs
jle
jnp
add
ficoms
adc
push
call
push
das
lea
xchg
pop
sbb
mov
cltd
push
dec
sarl
out
cmpsb
mov
mov
mov
inc
fnstcw
mov
ss
push
ret
wbinvd
inc
adc
xchg
cmp
dec
or
dec
mov
mov
sbb
xchg
adc
add
push
dec
inc
out
test
loopne
mov
mov
jo
iret
out
int
xchg
test
cmp
aad
add
or
dec
aam
ret
ret
mov
mov
sbb
mov
pop
notb
add
fldt
xor
xchg
add
ret
pusha
add
xorl
mov
mov
sti
mov
hlt
inc
and
mov
mov
mov
imull
dec
rcrb
jbe
jmp
push
mov
jb
adc
in
inc
lods
xchg
les
dec
jl
mov
shl
rcrl
sbb
jne
or
ljmp
adc
inc
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
sub
jle
mov
adc
leave
js
out
mov
pop
xchg
and
sub
jns
cmp
xor
subl
orl
hlt
push
jmp
shlb
mov
movb
add
adc
loop
xchg
xor
sub
adcl
adc
pop
lahf
jns
sahf
movsl
in
cmp
stos
cmp
sbb
out
jmp
or
jecxz
fwait
daa
ljmp
push
and
xchg
sbb
ja
dec
ret
push
adc
and
pop
mov
ds
pop
and
sub
jno
lret
mov
mov
add
or
imul
cwtl
cmc
add
mov
cmp
or
pop
rorl
mov
lret
xor
inc
cmp
sub
sbb
lcall
aaa
std
jmp
jp
imul
hlt
mov
dec
and
push
rsm
inc
popa
push
inc
dec
mov
cmp
dec
mov
pop
adc
push
pop
loop
and
sub
hlt
ret
test
aad
scas
in
pop
pop
xor
and
loope
hlt
inc
icebp
add
jae
jecxz
mov
cmp
fdivrl
pop
into
adc
insb
mov
dec
fsub
mov
mov
jg
mov
add
fcoml
lds
les
pop
xchg
and
adc
jl
cld
sub
sbb
jnp
or
xchg
popf
xchg
sub
mov
dec
lods
out
xlat
push
xchg
mov
cld
push
cmp
sarb
xchg
mov
dec
shl
xor
cmpsl
popf
jmp
pushf
xchg
jno
outsb
aas
adc
movsb
fiadds
sub
scas
lcall
pop
sub
hlt
lret
xchg
aas
mov
loopne
jno
inc
xchg
xchg
add
jmp
adcl
js
ret
and
adc
inc
jbe
nop
pop
test
xchg
mov
incl
testb
adc
test
or
inc
add
adc
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
mov
xor
adc
pop
add
loop
das
loope
cwtl
mov
call
int
adc
shrb
shl
cwtl
lcall
push
lret
jne
in
mov
xor
fnstenv
add
pop
mov
ljmp
sahf
mov
addr16
in
mov
sbb
cmp
js
mov
pop
xchg
gs
scas
test
xchg
addl
cmp
ja
jle
lods
in
cwtl
int3
mov
lds
scas
pop
lea
xchg
dec
xor
pop
movsl
fwait
sbb
ja
push
and
push
cwtl
cwtl
outsb
jp
jecxz
add
jb
gs
pop
sbb
jmp
mov
sub
lock
lahf
clc
lods
pushl
idiv
cwtl
int
sub
hlt
and
jle
jb
outsb
lcall
in
out
aaa
cmp
lcall
jl
mov
xchg
cmpsb
pushf
mov
mov
pop
lock
and
mov
sarl
push
mov
push
call
scas
rcr
add
rcr
stos
jp
mov
hlt
outsb
fwait
sbb
repnz
lods
daa
fidivrs
add
dec
and
hlt
mov
dec
pop
ja
xchg
pusha
add
add
inc
jae
lcall
sti
ret
mov
fs
inc
out
repz
fiaddl
imul
adc
jo
inc
mov
ret
movsl
cwtl
and
jg
xchg
mov
stos
aas
loope
sbb
addr16
xchg
mov
mov
or
imul
mov
pop
mov
out
mov
mov
mov
sbb
jne
jno
into
stc
shlb
mov
fnsave
aas
int3
into
sub
inc
sti
or
lcall
jbe
fstp
ret
mov
aam
mov
rep
dec
lret
ss
or
fcoml
xor
lock
sarl
iret
push
or
imul
push
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
pushf
es
mov
adc
movlps
test
call
out
outsb
loop
or
xor
push
aad
ret
or
sbb
push
mov
gs
pop
sti
adc
movsb
mov
mov
inc
fs
push
cwtl
or
adc
cmp
xchg
mov
ljmp
lahf
inc
imul
mov
add
into
xchg
daa
das
insl
sti
lock
mov
cmp
inc
cltd
insb
mov
xchg
ret
xor
jecxz
or
imul
hlt
aam
cs
cld
outsb
mov
mov
sub
jb
std
sbb
and
and
sub
roll
mov
divb
fsubrl
push
js
dec
addb
jo
inc
sbb
dec
clc
sar
jb
jle
daa
add
shll
adc
add
adc
inc
or
xchg
dec
neg
das
adc
mov
mov
loop
fcoms
jne
addl
add
add
shlb
scas
fs
xchg
aas
sarb
repnz
mov
dec
push
das
sub
xor
xlat
aam
jo
mov
cmp
sub
adc
outsl
hlt
jg
ret
xchg
stos
jmp
dec
repz
dec
fmuls
jns
dec
out
mov
add
data16
decb
cmp
push
loope
dec
arpl
mov
cs
in
sti
mov
in
pop
cmpsl
test
cmpsb
mov
xorl
dec
jae
pop
adc
push
inc
sbb
inc
repnz
pop
inc
mov
loopne
aad
mov
in
idivl
enter
and
pushf
jnp
and
mov
dec
sub
repnz
into
xor
sub
decl
or
pop
in
jns
jecxz
aam
fs
jmp
fisubl
daa
ss
insl
mov
ret
cmpb
loope
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
fstpt
punpckhdq
movlps
cmp
sbb
or
mov
scas
jbe
pop
add
jp
fimuls
test
xor
movsw
pop
jle
rolb
les
cmpsl
rolb
pop
out
and
in
dec
mov
ret
dec
clc
inc
loop
inc
cltd
and
aas
scas
push
out
and
add
xchg
xchg
xor
js
push
jecxz
std
add
aam
imul
jmp
pushf
sbb
into
pushf
imul
inc
jno
ds
xchg
and
repz
lods
sbb
pop
push
setge
xchg
popa
or
and
stos
insb
adc
cs
push
mov
outsb
jp
mov
cltd
xchg
or
and
add
push
and
mov
into
sbb
mov
outsl
jae
xor
insb
sti
iret
cld
rorl
inc
ficomps
lock
cmp
dec
test
outsl
enter
lcall
lods
push
push
push
dec
cmovne
sti
dec
cltd
bound
push
add
xchg
jmp
ja
stc
sub
inc
movsb
jecxz
ss
sbb
test
cmpl
mov
into
imul
test
xlat
mov
loope
aam
sbb
sbb
lret
inc
push
dec
movsl
cmpl
or
insl
clc
popf
and
jmp
shr
dec
mov
lods
out
inc
outsl
pop
test
movsl
ja
mov
cs
jp
xor
push
pop
lcall
push
xorb
outsl
pop
mov
pop
int
adc
cmp
add
aam
dec
pushf
mov
sbb
jl
test
subl
ja
shl
hlt
push
xlat
ds
push
nop/reserved
rcrb
sbb
push
leave
dec
cmpsb
je
push
popf
mov
shll
repz
push
xchg
add
out
negb
pop
insl
je
mov
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
and
jo
dec
test
adc
movlps
sbb
repnz
jbe
mov
pop
addb
mov
xor
out
cwtl
cmp
mov
cld
xor
cmp
movsl
inc
stos
push
shld
xchg
rcll
cmp
xchg
inc
and
cwtl
mov
sarb
data16
std
pusha
pop
aam
stos
addr16
mov
loope
mov
pop
pop
out
faddp
inc
pop
repnz
cmp
mov
adc
ja
iret
js
push
fstps
mov
push
xchg
pop
mov
cwtl
incl
pop
into
fistpll
and
sub
jmp
test
pusha
or
lret
loopne
out
inc
sbb
stc
push
lods
or
fmul
mov
arpl
mov
mov
fbld
repz
iret
into
xor
push
cld
jns
mov
imul
jp,pt
xchg
daa
mov
jae
dec
mov
ds
dec
cmp
lods
pop
push
push
sbb
ljmp
ret
imul
pop
out
clc
push
mov
cmpsb
stos
and
lods
xor
insb
sbb
rorb
leave
cmpl
fsubl
lock
jle
in
inc
mov
jns
xchg
arpl
or
test
cli
clc
push
and
lods
aam
subl
movsb
mov
mov
adc
ret
push
add
push
xor
or
repnz
push
data16
cli
xor
insl
outsb
in
addr16
pop
xchg
pop
insb
inc
and
xchg
pop
jbe
and
xchg
enter
pop
rolb
xchg
imul
push
fucompp
sbb
dec
sbb
push
lods
mov
mov
jno
mov
jae
push
stos
lret
jo
pop
inc
cs
and
sbbl
and
lock
mov
dec
or
cs
fdivr
add
fstpt
push
xchg
sub
mov
or
jae
sbb
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
adc
add
adc
out
push
sub
repnz
cld
ret
mov
mov
mov
push
pop
jbe
sub
jb
lret
sub
mov
fiaddl
std
mov
jecxz
mov
aaa
xor
mov
scas
daa
adc
stos
nop
xchg
js
jnp
movl
fcompl
lods
add
dec
lret
dec
lret
icebp
mov
jne
inc
sarl
outsb
xchg
jl
fisttpll
and
jl
sbb
mov
in
mov
and
adc
xchg
or
fidivrl
adc
inc
scas
cwtl
sub
cli
gs
outsb
ds
in
movsb
xchg
nop
adc
mov
xchg
mov
mov
push
fucomi
sub
xchg
xchg
sbb
and
cwtl
push
push
mov
push
push
inc
lock
stc
dec
cmp
jp
sbb
dec
xor
inc
ds
xchg
xor
mov
xchg
push
inc
hlt
xchg
mov
fcomps
lods
lcall
aaa
dec
dec
jae
mov
fstpl
jo
clc
repz
mov
mov
jo
mov
push
lret
mov
dec
adc
in
pop
fmull
add
pop
sub
add
lret
je
mov
iret
out
arpl
or
out
and
lods
or
nop
sub
lds
push
mov
pop
pop
shl
mov
push
or
adcb
aas
mov
xchg
dec
lds
dec
pop
add
insl
negb
cli
mov
aad
add
xchg
inc
dec
mov
rol
mov
dec
xchg
inc
pop
pushf
insl
cs
sbb
inc
stc
mov
mov
inc
pushf
jnp
push
leave
ds
sbb
push
stos
mov
addr16
cltd
iret
cmpsl
lcall
jbe
mov
stc
pushf
notb
ja
dec
daa
jns
sti
das
inc
xor
add
xchg
fnsave
and
xchg
mov
mov
aas
or
scas
in
test
and
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
jecxz
lods
mov
adc
adc
in
sub
dec
xchg
mov
out
dec
mov
mov
cmpsl
push
xchg
push
sti
movsb
fisubrl
fldt
sbb
or
and
add
inc
cwtl
jmp
cmp
aam
jbe
push
outsb
sub
inc
std
pushf
push
pop
in
xchg
inc
inc
ficoms
xchg
enter
mulb
and
subb
mov
cltd
and
xlat
fnstcw
add
dec
pop
ficoms
or
loopne
ljmp
cwtl
or
in
out
pop
mov
ret
lods
or
je
rorl
ret
imul
in
jnp
out
push
lret
daa
into
xchg
movsb
or
cmpsb
lock
mov
lods
mov
dec
mov
icebp
insb
cmp
inc
adc
push
sub
pop
jmp
xor
pop
cli
jmp
xor
shrl
dec
xor
lcall
inc
mov
mov
add
dec
das
ret
jno
and
push
jae
into
adc
test
iret
mov
mov
iret
fimull
sub
stos
pushf
js
ja
jge
pop
jp
adc
jp
push
je
cs
data16
lcall
xor
jns
mov
test
les
pop
dec
ja
inc
push
mov
lds
pop
dec
add
jae
add
adc
nop
outsl
adc
outsl
inc
sub
dec
xor
fadd
fidivs
cmc
ds
cmp
jg
cltd
mov
adc
push
adc
mov
ret
repz
push
adc
inc
aam
inc
cmp
jp
insb
enter
sub
out
pop
mov
ja
mov
test
cld
mov
xor
in
xorl
mov
fildll
add
movsl
push
push
mov
jne
in
lds
push
lret
aas
movsb
jo
hlt
push
rclw
aaa
test
pop
ss
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
jle
pushf
adc
adc
daa
xchg
mov
sub
xchg
mov
mov
inc
aas
repnz
mov
outsl
call
jle
inc
dec
out
mov
scas
movsl
out
add
add
dec
mov
lea
divl
ss
rcr
and
mov
leave
rorl
and
adc
sahf
and
add
std
xlat
ret
push
xor
popf
loope
fsubrs
mov
push
xchg
movsl
dec
repnz
std
adc
dec
mov
loopne
mov
sbb
push
stc
pop
aam
push
mov
xchg
pop
push
sbb
movsl
xor
cltd
mov
cmp
lahf
and
int
jne
fcomps
jmp
push
pop
cmpsb
jmp
sub
add
mov
std
jl
fildll
dec
dec
pop
xlat
out
mov
jnp
xor
das
test
inc
mov
xchg
pushf
xor
out
sbb
jns
sbb
cmpsl
mov
xor
jp
insb
and
cmp
or
cmpsb
sub
push
push
orb
add
inc
pop
mov
lret
mov
insb
add
hlt
mov
adc
cmp
jecxz
fdivr
ja
shr
daa
cmpsb
int3
mov
gs
jmp
insb
dec
movsbl
sub
mov
dec
adc
pop
jp
mov
add
out
neg
enter
mov
push
dec
push
xchg
pop
cmp
and
mov
mov
lods
lcall
mov
scas
inc
aam
push
mov
jne
inc
pop
or
incb
sbb
popa
mov
gs
push
test
xchg
mov
add
mov
push
and
mov
clc
sub
push
lret
cmp
push
sub
sbb
jno
or
ds
pop
pop
add
sub
or
xchg
xchg
into
shrb
rcrl
imul
push
dec
inc
add
loop
cmc
push
aaa
sahf
pop
mov
xor
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
mov
adc
movlps
out
adc
mov
xchg
and
rcrl
xchg
push
test
negl
push
gs
dec
mov
out
inc
and
sbb
sub
inc
insb
push
push
clc
mov
jl
jecxz
outsb
jne,pt
mov
out
scas
xchg
loope
mov
aas
mov
cmp
data16
xchg
sub
xchg
lret
cmp
pop
orl
movsl
dec
pop
cmp
add
iret
andl
std
dec
adc
mov
xlat
mov
push
ja
sbb
cwtl
imulb
mov
mov
lea
adc
fldcw
mov
xlat
mov
sub
add
sub
imul
out
lock
movsl
xor
movsl
mov
add
popf
inc
les
jg
push
lea
jge
jmp
sub
shrl
xor
dec
loop
mov
xor
cs
add
xor
or
push
push
loopne
std
cmp
or
pop
push
jns
cmpsl
lahf
sbb
push
fisubrs
clc
mov
movsl
outsb
imul
lock
hlt
sahf
stos
les
dec
mov
mov
call
sbb
pop
dec
clc
or
push
aaa
dec
fdivs
push
int
ljmp
in
push
iret
mov
lods
pop
xor
outsb
cmp
dec
cltd
mov
shlb
sti
sbb
test
pop
mov
pop
mov
xor
lahf
sbb
enter
cli
add
das
mov
sub
pop
pop
enter
inc
cwtl
jle
fs
shlb
dec
xor
popf
sub
mov
adc
sub
mov
ja
das
sbb
xor
mov
dec
mov
inc
cmp
mov
xchg
popaw
xor
jg
addr16
cmp
adc
mov
jno
push
and
sub
xor
or
mov
xor
adc
call
loop
pop
add
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
inc
stc
jle
xchg
adc
adc
scas
sub
js
test
jp
xchg
aam
cwtl
stos
or
sbbl
imul
mov
push
push
push
push
enter
cmp
jns
roll
test
decb
ficoml
mov
fists
pop
push
fdivrs
xchg
lods
nop
sub
gs
out
dec
enter
or
inc
pop
pop
das
test
sub
cmp
cs
and
shll
jle
sbb
mov
cmp
inc
adc
imul
or
in
mov
or
repnz
mov
jns
add
lods
cmp
movsl
in
inc
sub
jg
in
pop
inc
icebp
push
hlt
into
pushf
sbb
bound
mov
cmp
pop
adc
adc
jno
xlat
inc
xor
cmp
pop
and
pop
and
mov
scas
cmpsl
test
int3
mov
mov
mov
rcll
out
jl
lret
or
sub
mov
in
jns
jo
mov
test
mov
push
sub
mov
aam
fstps
and
roll
mov
cltd
mov
movsl
dec
hlt
xor
imul
push
outsl
jl
push
sbb
std
pop
sarl
imul
cmp
mov
or
jae
ret
loope
stos
push
inc
mov
iret
popf
mov
cltd
popa
xchg
stos
popa
fs
imul
sub
or
mov
test
pop
and
mov
mov
mov
push
and
jo
or
adc
jge
cmp
add
xor
int
ret
aaa
in
les
pop
fildl
mull
test
add
dec
or
sbb
mov
out
or
mov
jns
cli
out
or
cs
cmp
insl
xchg
add
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
jp
mov
enter
addr16
ljmp
std
stos
dec
add
int3
insl
push
push
mov
and
push
jecxz
push
mov
fs
das
push
push
js
push
pop
jg
lods
aam
xchg
jns
insb
out
mov
cltd
ds
jge
ljmp
mov
xchg
xor
push
stos
in
shlb
jp
fs
insl
hlt
jno
pop
imul
loope
or
push
and
xor
les
jbe
mov
xchg
jp
jle
ja
jp
xchg
in
fists
dec
movsl
jecxz
int
enter
ret
inc
mov
xor
mov
imul
fstl
mov
sbb
hlt
mov
repz
movsb
rorb
icebp
sbb
jecxz
push
sahf
dec
adc
call
cltd
fimull
and
pop
mov
fbld
ror
cld
mov
shlb
nop
out
mov
push
or
leave
fdivrp
push
dec
adc
pop
inc
xor
mov
adc
pop
enter
inc
add
pop
sub
subb
xchg
xchg
jp
call
scas
call
out
or
dec
mov
outsl
jmp
adc
push
jmp
lock
iret
inc
ss
nop
lods
jge
or
dec
test
je
xchg
pop
cmp
push
ljmp
imulb
bound
jmp
jbe
add
lret
sahf
pop
repnz
gs
xor
pop
sti
fistpll
sahf
addr16
nopl
sbb
int3
ds
sbb
jno
out
inc
negl
dec
or
add
push
mov
xor
cwtl
inc
dec
push
fs
xchg
fcompl
movsl
dec
out
and
nop
fidivs
pop
ficoms
aad
sbb
insl
lods
mov
adc
lods
enter
bound
mov
mov
xchg
inc
cmpsl
pop
sbb
xchg
inc
cmp
into
enter
repz
aas
pop
jle
or
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
dec
pop
cmpb
movlps
call
loopne
cmp
xchg
mov
fisubrl
test
and
clc
leave
xor
jle
add
repnz
and
add
data16
cli
or
mov
mov
adc
imul
push
push
sar
xor
pusha
ret
and
in
es
dec
dec
js
popf
jne
or
bnd
fdivrs
pop
dec
mov
aad
test
cltd
lahf
outsl
dec
push
jno
insl
and
movsl
out
and
xchg
mov
bound
mov
inc
inc
xchg
dec
repz
int3
sub
jo
jo
das
push
inc
out
sbb
inc
mov
cwtl
lahf
iret
stc
icebp
rcl
jle
in
lret
mov
ret
adc
stos
jecxz
push
shll
bts
imul
das
xchg
movsl
popa
ret
clc
scas
es
out
out
or
push
iret
dec
rclb
add
pusha
test
mov
push
movzwl
mov
add
arpl
sub
stos
roll
cmp
mov
lods
pop
loopne
mov
mov
dec
cmpsl
cmp
cli
rorl
cmp
cmc
imul
dec
sbb
push
loopne
sbb
into
cmp
mov
cmpsb
sub
sbb
into
jg
ficompl
fwait
popa
int
mov
popa
enter
mov
movsb
inc
in
out
xchg
and
cld
enter
sbb
push
test
push
add
cmp
insb
in
stos
jecxz
mov
ret
ljmp
adc
pop
cmpsb
ljmp
test
std
hlt
adc
or
pop
jno
adc
pop
sbb
dec
neg
xchg
jmp
push
ja
jg
or
sbb
pop
dec
xchg
es
jnp
sub
push
aam
inc
jbe
lea
mov
jb
les
pushl
lret
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
xchg
int
mov
fimull
ficomps
pop
xchg
xor
mov
out
scas
inc
and
sbbl
xchg
inc
fisubrs
and
aaa
dec
mov
nop
aaa
aad
ret
mov
sub
mov
or
mov
or
xchg
stc
fcoms
sbb
adc
mov
inc
popa
ja
sub
jle
push
xchg
inc
pushf
jmp
jl
mov
adc
push
dec
cwtl
out
sbb
fsubrl
jg
cmpsl
or
lret
jge
or
mov
lret
cltd
imul
pop
mov
mov
popa
sti
subb
outsb
cli
dec
or
int3
out
sbb
push
mov
dec
test
xor
jecxz
and
pop
cmpsl
pop
cmp
adc
fcmovne
and
cmp
mov
imul
sbb
add
push
push
cmp
sbb
jne
cmp
in
scas
test
push
jg
xchg
rorl
or
inc
inc
sbb
adc
pop
sahf
and
call
movsb
cld
cmp
xor
xlat
sub
pusha
jg
roll
sbb
out
and
in
scas
int
dec
pop
jb
push
pop
sub
dec
jo
movsl
repnz
push
insl
dec
les
jg
cmp
mov
sbb
push
rcrb
or
sub
test
movsl
sbb
insl
scas
ret
adc
subl
and
lods
mov
in
sahf
inc
sub
cmp
lock
push
daa
nop
cmpsb
cmp
jae
mov
in
outsb
jo
mov
cmp
push
cmp
push
clc
dec
test
lret
sub
add
cmp
aas
mov
pop
cwtl
lret
sbb
out
dec
outsl
mov
push
jp
ja
in
xchg
repz
xor
mov
mov
out
lods
stos
test
aaa
gs
mov
sub
add
dec
and
sub
and
daa
icebp
dec
xchg
ljmp
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
stos
sub
jle
xchg
adc
stos
mov
cmp
mov
test
hlt
cld
fsts
jae
push
out
mov
test
les
ja
mov
cld
adc
sbb
sbb
icebp
and
xor
xor
int
in
cmp
mov
insb
test
mov
xor
ficomps
aam
pop
dec
inc
loop
cmc
mov
adc
inc
dec
pop
jae
out
push
std
pop
and
jmp
push
sub
xchg
in
mov
cwtl
cwtd
cli
stos
hlt
and
inc
ss
adcl
int3
jmp
vhsubpd
adc
addr16
inc
lret
outsb
arpl
mov
adc
and
int
insb
add
dec
sbb
out
cmp
sets
lret
ds
sbb
movsb
call
push
int3
lds
jp
cmp
xchg
xor
popa
mov
pushf
add
sub
mov
push
inc
pop
sbb
sub
lret
mov
mov
test
jecxz
sub
pop
mov
push
outsb
dec
leave
xchg
outsl
sbb
or
loopne
inc
lds
pop
add
lds
push
jecxz
aaa
sub
sbb
xchg
adc
add
and
mov
pushf
pusha
xor
jno
xor
popa
es
hlt
clc
mov
inc
sti
in
fists
es
push
and
mov
pop
in
test
sbb
test
aaa
dec
mov
imul
pushf
aas
lahf
pop
add
lret
sbb
enterw
pop
inc
les
jl
push
aaa
push
fnsave
add
jae
stc
out
or
sti
dec
out
rorl
rcll
push
cmpsb
repz
jbe
lds
or
int
push
pop
adc
xor
lahf
dec
shll
testl
push
pop
pop
inc
rcr
cltd
gs
xchg
in
mov
cli
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
mulb
push
adcb
ljmp
cmp
andb
sahf
popa
jp
and
lea
das
test
cmp
xchg
jg
insl
xor
inc
pop
xchg
xchg
mov
xor
iret
fsts
sbb
cmp
clc
mov
loopne
dec
fmull
outsb
imul
xor
sbb
adc
adc
push
mov
das
pop
cmp
dec
orl
les
int3
clc
sbb
loope
mov
or
adc
test
jle
fnstenv
sbb
sub
sbb
sbb
paddw
in
test
pop
rcrl
mov
jle
repz
and
mov
fstpl
clc
sub
jg
pop
inc
dec
sahf
shlb
xorl
das
sti
xchg
mov
cmp
loop
mov
lods
divb
pop
mov
adc
mov
lods
sti
lea
xor
scas
pop
jne
aad
insl
insb
jecxz
mov
divl
hlt
push
sbb
push
scas
daa
jecxz
and
and
mov
and
addr16
inc
iret
cmp
mov
jg
push
shl
dec
adc
dec
dec
pusha
cmp
sahf
jo
aam
stc
push
push
sbb
xor
das
jo
stos
xchg
xchg
adc
sarb
push
xchg
minps
outsl
mov
mov
sbb
sub
cli
in
movsl
push
sbb
cmp
shll
inc
pop
inc
test
adc
pop
popa
shlb
jnp
movsl
push
pop
sub
ret
incl
mov
xor
orb
das
jb
mov
pop
xor
stos
nop
ret
push
mov
xor
sub
push
sar
pop
sti
nop
nop
inc
out
pop
cltd
sbb
inc
dec
sub
ret
sub
or
push
in
sub
clc
fistpll
add
xchg
mov
and
pop
sub
repz
push
xchg
cld
roll
dec
sub
pop
xchg
ss
mov
outsb
roll
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
test
push
js
adc
movlps
mov
cmp
clc
or
lret
movsb
lcall
in
int
adc
add
sub
lcall
or
xchg
cmp
ret
mov
sbb
push
ds
inc
add
movsb
dec
cmpsl
dec
mov
cmp
cmp
cmp
aam
inc
adc
add
jno
add
int3
enter
fs
movsl
sub
movsb
pop
stc
pop
mov
mov
movlps
mov
pop
int
scas
pop
sub
adc
cltd
sub
and
jo
lods
sbb
jmp
cmpsl
sub
notb
cltd
jecxz
or
dec
enter
in
pop
jecxz
fmull
xor
mov
pop
je
cmpsb
scas
pop
cs
xchg
and
cmc
test
xchg
jb
ja
pop
dec
sahf
xor
loopne
in
fisttpl
shl
call
mov
push
mov
dec
shlb
and
nop
xchg
lock
mov
xchg
aam
lock
fisttpll
rcrl
and
jns
xor
sub
sub
insl
dec
cmpl
adc
push
sub
push
mov
jne
lahf
jbe
and
cmc
jns
and
call
sbb
out
arpl
adc
sub
roll
push
in
mov
adc
in
hlt
jnp
push
jae
shrl
in
repnz
je
mov
mov
iret
js
or
add
aas
subb
ss
data16
pop
adc
dec
xchg
mov
rcrb
mov
push
scas
aam
out
stos
inc
mov
lret
sbb
inc
sbbb
xor
jnp
lea
fwait
adc
cmp
pop
cmp
or
jmp
std
adc
rclb
popa
int
pushf
imul
jge
jo
dec
enter
loop
dec
mov
int
push
mov
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
dec
int3
lods
mov
movlps
jo
dec
xor
arpl
lret
xchg
jecxz
jge
jns
imul
cmpsb
in
fcompl
inc
daa
jmp
xchg
adc
cld
dec
sub
mov
in
cmp
ret
stos
sbb
mov
in
not
push
and
outsb
cmp
add
ret
fadds
mov
dec
inc
jb
subl
dec
stos
inc
mov
pusha
jge
fcoml
push
mov
cmpl
ficoms
cmp
mov
adc
ss
stos
imulb
jae
cmp
push
mov
repnz
lret
in
loopne
icebp
pop
pop
mov
test
pop
in
push
and
fsubr
addr16
decl
mulb
out
cmpsb
loope
adc
mov
test
xchg
lahf
out
ja
fwait
jb
std
mov
cmc
dec
mov
cvtdq2ps
pushl
mov
jo
leave
push
iret
jp
shlb
sub
xorb
clc
imul
scas
and
and
add
push
xchg
xchg
mov
mov
mov
dec
scas
mov
jmp
out
dec
pusha
stc
dec
out
xchg
fadds
mov
test
jae
in
es
arpl
fistpl
lds
imul
loop
pop
push
iret
inc
xorl
lods
movsl
cmc
mov
mov
xchg
xchg
loop
shll
pop
aaa
sbb
push
pop
jno
test
mov
iret
xorl
mov
pop
bound
push
subb
adc
in
loope
lea
outsl
cmpsb
adc
mov
fstpl
cmp
add
sub
mov
xchg
pop
lcall
and
pop
mov
aaa
sbb
inc
mov
shlb
adc
jl
data16
stos
fdivrl
inc
pop
leave
push
dec
mov
imul
out
mov
or
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
fwait
jb
jb
adc
adc
cmp
hlt
dec
mov
push
icebp
push
xlat
bound
cmp
iret
pause
pop
pop
cli
aas
repnz
inc
inc
mov
ss
mov
pushf
jp
jp
xor
fadds
jg
pop
ljmp
or
in
sub
cmc
cltd
mov
inc
mov
add
paddb
insb
stos
imul
pushf
rclb
fadds
push
scas
push
mov
shrb
test
imul
pop
cmp
jae
push
inc
mov
mov
sarb
movsb
push
adc
sbb
shlb
iret
jb
sub
jle
add
ja
rcll
adc
inc
dec
lahf
aas
cwtl
mov
and
stos
inc
add
mov
mov
rolb
rorl
dec
es
or
push
fs
jg
inc
push
mov
lea
push
pop
outsb
or
sub
sbb
ljmp
or
mov
add
mov
loopne
or
or
jno
xor
fistl
daa
xchg
inc
data16
dec
push
lods
or
dec
inc
mov
popa
nop
xchg
and
pusha
negb
inc
lret
movsb
imul
xor
fists
cmc
vcvtsi2sdl
cmc
outsb
rcr
out
int3
repz
notb
in
mov
shrb
addr16
add
scas
sub
sbb
and
dec
lock
roll
loop
sti
adc
push
jnp
mov
int3
or
inc
test
and
iret
adc
xchg
mov
sbbl
je
mov
sub
pop
jo
dec
pop
fldl
in
stos
shll
pop
push
xchg
std
lret
lds
mov
in
inc
push
adc
pop
dec
xchg
adc
dec
into
ror
aaa
xlat
inc
jg
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
push
loopne
insb
es
adc
adc
sub
fmul
fwait
add
add
pop
cmp
mov
outsl
cmp
fldz
mov
add
inc
mov
loope
dec
mov
jecxz
into
pop
jbe
cmp
fnsave
cmp
in
pop
adc
in
inc
call
stos
lods
inc
dec
dec
sbb
mov
std
fwait
or
pushf
aam
jge
test
jl
fwait
inc
push
dec
push
jl
mov
int
pop
push
xchg
fdivrs
add
test
cmp
enter
mov
mov
bound
mov
or
mov
loop
lds
and
cmp
ret
jnp
mov
fsts
jne
je
sbb
rol
jnp
pushl
lods
xchg
mov
xor
lods
nop
pop
fiaddl
in
add
adc
pop
mov
addr16
xor
add
outsb
dec
imul
pop
scas
jl
xor
cmp
fcmovnu
mov
cmpsb
dec
addr16
push
call
jno
sub
inc
cmpl
push
dec
jg
inc
pop
insb
ficomps
ret
mov
lret
sbb
push
pop
dec
and
pop
inc
mov
sbb
xchg
sub
adc
loope
cmp
dec
xor
xchg
xlat
scas
clc
out
xchg
test
cmpsl
popa
arpl
xchg
movl
and
rorb
in
mov
mov
out
stos
adc
cli
arpl
xchg
fwait
into
aas
fmull
aad
push
sub
sub
add
jae
dec
jl
dec
mov
in
lock
inc
nop
add
xlat
inc
rcl
int3
fsubr
rcrl
inc
and
xchg
out
in
jne
mov
jg
test
adc
mov
lahf
mov
nop
in
aam
pop
out
sbb
js
cmp
cmc
call
syscall
push
lods
mov
adcl
mov
push
pop
cmpl
mov
sbb
mov
and
cli
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
mov
push
adc
mov
inc
ror
sbb
test
int3
iret
and
cmpsb
lcall
stos
push
xchg
add
test
test
pop
xor
inc
mov
dec
jecxz
xlat
out
shrb
loop
mov
xor
insb
aad
out
outsl
jge
add
or
adc
and
sub
repz
inc
repnz
mov
push
fmull
mov
and
lock
jmp
mov
jb
dec
and
push
fbld
adc
lret
pop
push
jnp
push
push
rorb
xor
stc
sub
mov
lea
subl
and
sbb
jmp
in
inc
fstl
and
fsubrl
mov
aam
mov
push
lret
lock
shll
aam
dec
nop
cmp
daa
mov
add
jecxz
or
outsl
ret
shr
jecxz
dec
xor
pop
shl
mov
sbb
pusha
pushf
shr
aad
pushf
in
jns
movsb
outsb
sub
out
out
mov
and
js
popa
movsl
cwtl
nop
pop
xlat
sub
and
and
scas
push
inc
fwait
adc
lods
dec
adc
imul
sub
repz
add
jge
cmp
mov
add
mov
js
mov
fldt
dec
jecxz
jbe
push
xchg
sbb
cmc
xchg
dec
and
mov
mov
iret
dec
popa
jnp
mov
icebp
lret
mov
lods
push
scas
sbb
or
ds
fsts
xchg
cmp
sbb
jecxz
filds
push
sahf
mov
inc
add
adc
sub
aas
out
leave
jae
mov
mov
pop
xchg
mov
jp
shll
cld
mov
rol
fildl
dec
or
adc
dec
aaa
push
sbb
clc
mov
icebp
xor
jl
jnp
sbb
ja
xchg
fs
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
xor
lea
enter
or
sbb
out
lods
sub
xchg
sub
pusha
cld
xchg
sahf
sbb
adcb
mov
loopne
ja
dec
push
push
aas
jecxz
icebp
adc
pop
sub
int3
xchg
aaa
rcrb
scas
int
shr
add
test
mov
fldenv
mov
inc
mov
fistps
je
lds
int
je
fcoms
mov
ret
jne
add
loope
pop
mov
jmp
cli
rcr
dec
dec
jle
xor
mov
fnstcw
lods
push
xchg
std
mov
pop
jo
loop
or
mov
lahf
jbe
pop
inc
push
dec
jne
aaa
pop
bound
cld
mov
in
adc
lea
cmp
adc
sbb
je
lret
xchg
out
sahf
push
fwait
std
adc
fwait
andb
pop
aam
cltd
sbb
jl
pushf
mov
mov
pop
jp
gs
cmpsl
insb
jmp
ror
or
les
dec
jbe
mov
xor
leave
pop
enter
sub
adc
ljmp
fildll
pop
xor
inc
cmp
push
andl
mov
add
pop
mov
fimull
xlat
mov
sub
mov
push
loopne
sbb
xchg
fdivrl
inc
mov
adc
xchg
fwait
in
imul
sti
lcall
xor
sub
into
dec
push
push
mov
push
psraw
mov
xor
dec
adc
scas
popa
jne
call
sub
ret
pop
push
mov
dec
jno
adc
adc
mov
mov
jb
xor
mov
fwait
mov
jb
out
mov
xchg
push
loop
xchg
mulb
cmp
add
cld
jb
sahf
repnz
mov
loop
mov
jnp
bound
pop
iret
and
push
push
test
xchg
cwtl
jmp
and
sub
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sbb
daa
divl
test
pop
hlt
xchg
pop
sub
int3
jo
outsb
fcmovnbe
xor
subb
int
mov
mov
and
imul
sbb
arpl
divb
nop
stc
rorb
push
movsb
enter
or
mov
sbb
mov
xor
jge
sbb
xchg
lret
loopne
sbb
cld
fdivr
add
lret
mov
stos
and
in
jo
dec
loop
mov
push
nop
rcrb
mov
cmpsb
cmp
loopne
movsb
or
dec
adc
xor
or
sbb
in
sub
in
xor
mov
sbb
inc
call
sub
adc
sti
pop
jns
inc
out
shlb
out
icebp
mov
scas
loope
mov
adc
xor
cld
dec
jnp
js
lcall
push
imul
cmp
cmc
pusha
rcrl
insb
adc
sbb
or
sub
stc
movsl
mov
xchg
mov
inc
inc
mov
bound
ficoms
push
xchg
loop
pop
mov
loopne
pop
mov
call
push
adc
rcl
pusha
mov
lret
pop
dec
into
pop
es
cmp
ret
imul
cltd
test
push
int
jbe
fstps
inc
ljmp
arpl
pop
sub
addr16
sbb
popa
add
roll
cmc
hlt
mov
add
sahf
xchg
inc
mov
in
fisttpl
out
xchg
add
jns
loopne
sbb
mov
jns
cmp
cmp
push
das
cmp
addr16
cmp
pop
loope
fsubrp
dec
adc
push
jl
inc
jecxz
loopne
in
pop
pop
std
rcrl
mov
or
adc
sbb
mov
mov
lret
mov
test
cmp
es
loope
out
push
jne
mov
push
dec
insl
rol
in
movsl
or
mov
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
push
mov
cmc
pop
adc
adc
adc
xor
nop
sub
arpl
fdivl
punpckhwd
in
popf
mov
test
aad
add
add
sub
cmpsb
and
decl
pop
repnz
mov
sbb
fcmovnbe
loopne
aas
or
pop
rcll
enter
outsl
clc
insl
movsb
pop
lahf
mov
xor
jb
cmpsl
add
mov
cmp
leave
sti
sbb
xchg
cmp
shlb
xor
and
sbb
outsb
or
loopne
es
enter
sbb
out
add
outsl
or
inc
movsb
dec
jp
in
mov
xchg
les
test
imul
jp
dec
xlat
aad
adc
mov
fs
xor
mov
fisubrl
pop
xor
cmp
scas
cmc
arpl
imul
roll
movsb
mov
lcall
lods
in
out
ret
pop
lahf
pop
cmpsb
insl
or
fs
nopl
outsl
adc
jo
mov
jb
leave
mov
xor
and
fs
pop
lret
fistps
stos
lret
lods
jno
and
insl
out
int3
adc
movsb
xchg
jns
pop
push
pop
lahf
push
ss
sbb
movaps
jae
or
nop
out
pop
pop
jmp
mov
sbb
adc
cld
mul
cwtl
push
mov
in
loopne
pop
dec
inc
shl
xchg
imul
rcrl
jbe
xlat
cld
inc
jne
out
sti
pushf
mov
jg
out
sahf
xor
push
jnp
jnp
jbe
dec
fldcw
xchg
int
ficoml
ret
ds
gs
push
push
push
mov
xchg
out
xor
in
pop
fwait
xchg
sub
push
xor
mov
and
inc
sub
mov
iret
mov
outsb
dec
int
cwtl
aas
jb
enter
dec
ret
add
sub
dec
shll
inc
lea
pop
sbb
jmp
adc
add
mov
jecxz
ss
mov
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
push
sarb
pop
adc
adc
push
iret
out
in
cmc
insb
add
dec
push
adc
fidivrs
push
cli
scas
ja
mov
inc
and
outsl
lret
mov
add
or
cmp
jmp
out
sbb
sub
or
push
sub
fiadds
cmp
push
mov
add
xchg
lods
ret
ficoms
add
mov
mov
adc
lahf
inc
mov
pop
xrelease
aaa
push
inc
add
test
and
pop
lcall
mov
sub
hlt
aaa
or
mov
mov
xchg
in
imul
dec
iret
xchg
out
hlt
cmc
pmaxub
xchg
fwait
dec
cmc
es
mov
adc
pop
adcb
jle
jno
sbb
mov
in
add
inc
dec
jge
push
mov
popf
fnstcw
add
insl
pop
push
fistpl
popf
jmp
lahf
or
push
inc
jmp
adc
scas
scas
repz
fsts
sub
movsl
sub
lret
icebp
popf
jae
xchg
inc
lcall
mov
push
popa
sub
cs
stc
arpl
test
cmp
jns
dec
ror
or
mov
lret
sbb
xchg
mov
push
pop
push
popa
out
iret
pusha
jp
arpl
aad
mov
or
pop
mov
jo
cmp
shlb
pusha
cmp
aaa
fbstp
and
cmp
hlt
das
jp
lods
dec
cwtl
sub
and
push
in
pop
mov
jle
mov
ret
xlat
xchg
sbb
mov
dec
shr
or
sub
or
int3
cmpsl
in
iret
xor
xor
jne
leave
dec
pop
pushf
outsb
fldenv
xrstors
jmp
add
pusha
test
mov
ret
ss
jns
mov
xor
jns
and
movsb
lods
mov
or
or
push
jno
push
pop
daa
and
sarb
mov
imul
xlat
cwtl
mov
adcb
mov
dec
scas
add
rcl
dec
popl
pop
sbb
or
mov
sbb
sub
loop
xor
movsb
movsl
fidivrl
sub
cmp
iret
lods
xchg
jmp
sbb
ucomiss
arpl
dec
mov
cli
aam
dec
ret
sub
shlb
movsb
imul
rolb
out
into
popf
cmpsl
and
add
fiadds
fsts
pop
lock
xchg
or
cli
lea
bound
cmp
jecxz
sti
in
push
mov
out
rclb
mov
sarl
rorb
insl
fidivrs
mov
mov
out
sbb
ljmp
sarb
jae
rclb
cld
lahf
jne
jmp
ficoml
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
lods
push
adc
adc
xor
xchg
jno
fstpl
sbb
mul
pop
loope
and
adc
cmpl
sub
es
sub
sub
xor
cmc
pop
mov
sti
es
jae
imul
cmpsl
das
xor
mov
mov
test
outsl
mov
in
add
cmc
add
adc
pop
leave
loop
fnstsw
sbb
dec
xchg
jb
fidivrs
jo
test
arpl
stos
dec
sub
cmp
xchg
mov
push
sub
in
jg
pop
fs
mov
fldenv
push
in
test
lret
inc
out
mov
mov
push
and
les
cmpsb
xchg
sub
adc
adc
ljmp
pop
xchg
cmp
aaa
push
sbb
movsb
xor
ret
faddp
jmp
xchg
test
jno
pop
push
push
mov
add
sub
push
test
pop
sbb
ss
mov
mov
or
add
mov
movsl
dec
lahf
mov
and
subps
sub
out
loope
cmpsb
adc
inc
push
inc
cli
aaa
or
ljmp
mov
fs
cltd
fldz
add
mulb
cmc
mov
lahf
xor
inc
loop
xlat
and
and
ret
movsb
pop
call
movb
fs
mov
xlat
ficoms
test
inc
cltd
mov
in
enter
ds
andb
dec
push
jns
push
lea
pop
dec
out
arpl
into
mov
ss
jns
mov
mov
and
aad
dec
ljmp
das
adc
scas
push
sahf
dec
sub
cmpsb
jo
and
leave
ret
into
push
xchg
sbb
and
jno
insl
addl
clc
movsb
mov
push
repnz
fdiv
pop
or
aas
sti
jb
cli
xchg
fistpl
movsb
inc
jb
mov
pop
xor
mov
icebp
push
pushw
add
lds
inc
mov
add
adc
je
lods
mov
mov
sub
jg
jle
push
inc
mov
mov
les
imul
lea
jmp
call
out
shrb
mov
les
mov
nop
clc
mov
pusha
les
dec
mov
ret
pop
mov
int
dec
jmp
outsb
in
iret
jl
out
mov
test
push
inc
mov
mov
or
sbb
cmp
insl
adc
mov
enter
or
addr16
aad
jbe
cmp
loop
xor
mov
xchg
int
lea
cmp
push
es
test
shr
stc
pop
and
outsl
out
lods
fldcw
ja
push
add
lock
shll
adc
movsb
ja
lret
xchg
push
sti
pop
inc
das
push
mov
xchg
pop
stc
xchg
jns
stc
sub
mov
mov
popa
divb
mov
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
