push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
and
mov
cmp
cs
nop
mov
adc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
mov
sub
mov
push
mov
inc
add
inc
add
xor
repnz
mov
dec
insl
stos
lahf
lret
add
lock
sbb
into
pop
pop
cmp
push
inc
inc
and
mov
xlat
jl
pushf
movsl
movsb
or
xor
imul
push
rol
sahf
stos
mov
fs
fcoml
xor
rorb
out
in
movsb
dec
shlb
shrb
adc
dec
scas
add
popa
sahf
push
popa
in
sub
push
push
push
xchg
xor
dec
push
test
stc
andb
jo
pop
jnp
not
mov
lea
cmp
xor
insb
ljmp
aas
rcll
outsb
fcompl
mov
mov
xchg
imul
jne
test
lret
cmp
mov
pusha
sbb
xchg
mov
sub
fadds
or
scas
mov
xor
add
arpl
lea
jp
movaps
iret
out
adc
or
mov
mov
jne
lock
cwtl
dec
stos
mov
pop
jecxz
test
bound
sub
mov
adc
xchg
lds
outsb
ss
mov
movsl
sub
mov
outsl
lcall
test
add
out
add
mov
das
les
in
mov
xchg
lds
xor
jl
fbld
push
cmc
movsl
scas
adc
fwait
inc
in
mov
js
je
out
popl
flds
icebp
jae
mov
mov
test
or
sbb
test
cmpsb
jge
cmovo
mov
jae
or
outsl
jb
out
std
push
pop
test
out
mov
in
icebp
push
mov
push
jo
push
lods
rorl
sti
sbb
push
movsb
cs
mov
sub
pop
mulb
cmp
or
or
sub
jno
fstpl
jle
pop
repz
jle
mov
dec
xlat
push
inc
stc
repz
movl
and
inc
mov
xlat
and
xchg
xor
insb
cmpsb
out
push
out
push
pop
pushf
cmp
and
fnsave
mov
in
imul
mov
insl
clc
pop
or
adc
int3
popa
add
add
jecxz
xchg
mov
aad
mov
cmp
add
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
jo
jno
jnp
mov
inc
jb
lret
add
xchg
fnop
dec
stos
call
mov
popa
lds
xlat
je
sti
sti
shll
cmpsl
int
add
aad
icebp
sub
subl
shl
mov
jg
rcrb
cwtl
pusha
testb
aaa
in
xchg
lds
fsts
dec
int3
ja
outsb
mov
pushf
nop
cli
jne
cmpsb
mov
jb
mov
test
or
lods
jb
js
jbe
xchg
cmc
lods
mov
fs
sbb
nop
imul
int3
ja
mov
jge
and
ret
xchg
fcompl
movsb
adc
push
xchg
inc
js
sbb
lods
and
outsb
hlt
fisttpll
test
orl
push
and
push
dec
fcmovbe
hlt
sub
add
xor
cltd
into
xchg
xor
cli
push
pop
sbb
imul
add
mov
pop
fsts
inc
cld
leave
popf
jecxz
ret
mov
test
mov
int
cs
push
ljmp
sub
xor
mov
mov
sub
cmp
aam
insl
xchg
cmp
jne
add
cs
inc
xchg
rol
push
clc
lods
lahf
dec
add
ret
enter
data16
stos
push
imul
xor
sbb
or
sub
in
push
pop
out
inc
xlat
or
add
faddl
pop
xor
push
jns
xchg
jmp
daa
popa
nop
jne
fwait
push
mov
in
or
adc
mov
pop
dec
jmp
mov
dec
jns
shrb
xor
push
mov
repz
xorl
xchg
ds
out
loopne
cmpb
scas
repz
jae
or
test
loope
push
mov
jle
fs
push
ret
sub
mov
nop
cwtl
mov
or
mov
push
dec
jbe
inc
xchg
inc
int
xlat
mov
sub
cs
gs
mov
scas
aam
lea
js
xor
es
inc
in
sahf
or
mov
dec
sahf
adc
mov
imul
cs
das
sub
dec
jne
call
loopne
pop
dec
fidivrl
out
pop
xchg
test
jbe
adc
and
inc
mov
js
pop
or
aas
sti
xor
mov
call
jno
push
sbbb
mov
out
stc
mov
ljmp
cld
in
add
iret
aam
movsl
divl
je
dec
cmp
into
div
sub
mulb
xor
mov
aam
jnp
pop
pop
movsb
or
fsubrl
push
testb
test
dec
jp
dec
and
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
mov
int3
pop
es
jl
mov
xchg
sub
mov
lds
mov
stc
sbb
cmp
leave
shll
mov
inc
and
xchg
cmp
mov
mov
loop
xor
rcll
ds
lahf
adcb
mov
loope
enter
aad
jmp
sahf
leave
add
or
adc
mov
or
cmpsb
data16
adc
shrl
stos
out
fcoms
or
subl
xchg
orb
push
mov
mov
sbb
mov
cli
out
lret
mov
dec
or
stc
sub
sbb
mov
and
xchg
mov
fldt
daa
lret
out
mov
xchg
sbb
jbe
push
ficompl
test
fldt
push
jb
int
ficoml
inc
xchg
pop
xorb
in
cmp
jne
ret
cmpb
in
mov
scas
loope
stc
cmp
jge
stc
push
enter
xorb
aad
mov
minps
bound
iret
xchg
popl
sbb
into
insb
xchg
fildl
push
mov
popfw
xlat
push
push
std
addl
ret
dec
pop
mov
mov
mov
lahf
inc
bswap
push
int3
jae
mov
lahf
push
dec
scas
stos
sbb
adc
jns
jp
into
xor
dec
in
movsl
les
jno
in
movsl
xor
popf
pop
push
mov
sub
stc
push
pop
and
mov
ret
mov
mov
out
popa
insb
add
mov
cmpsl
pop
sbb
mov
mov
test
jge
jp
aaa
test
pushf
jbe
cmpsl
popa
cmp
nop
mov
xor
imul
cld
cmpsl
lahf
mov
movsl
pop
lahf
jp
je
pop
lahf
fnsave
pop
das
test
push
les
jg
add
lds
lret
ja
gs
out
mov
inc
jg
xchg
pop
out
ss
jne
loope
push
ret
nop
pushf
aam
xor
push
ds
push
repnz
fidivrl
jl
fmull
mov
push
insb
jmp
lcall
test
pop
xor
addr16
inc
cmpl
out
xor
aad
popf
test
jle
cltd
loope
pop
fwait
mulb
push
pop
xchg
ret
shlb
xor
push
pop
mov
cmp
into
mov
pushf
data16
or
adc
in
andb
sbb
mov
sar
movsl
test
inc
dec
cs
add
repnz
gs
jb
mov
dec
jnp
shrl
repnz
xchg
adcl
add
mov
inc
add
lods
rolb
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
pop
mov
sbb
and
sbb
loope
fisubs
add
ret
dec
loopne
mov
ljmp
int
inc
mov
out
lret
xchg
pop
divb
fnstenv
xchg
push
push
arpl
push
hlt
push
or
mov
call
or
movl
add
xchg
and
dec
mov
out
inc
adc
hlt
push
push
cwtl
xchg
fidivl
sbb
mov
aam
jb
mov
cs
cmpsb
int3
lret
push
push
cld
mov
dec
inc
decl
mov
shrl
roll
aam
aaa
cltd
imul
jae
or
sbb
xchg
cmp
in
adc
arpl
cwtl
iret
leave
ret
and
mov
orb
ss
mov
ret
lea
cmp
adc
ror
lods
fwait
mov
aaa
rcrb
stc
pop
outsb
cmp
push
lods
adc
sub
clc
test
push
imul
jge
movsb
cmp
mov
mov
loop
das
cmc
idivb
cmp
cmp
inc
shll
mov
out
out
adc
sub
addr16
out
xchg
cmp
lahf
mov
jns
lahf
mov
fs
mov
inc
imul
push
ret
aam
repnz
hlt
xor
sub
clc
sbb
inc
dec
pop
loopne
shlb
push
or
xor
pop
shll
add
sbb
xchg
inc
iret
push
and
rorl
sbb
lret
sub
cmp
xchg
sbb
mov
mov
xchg
add
xchg
push
fld
inc
inc
sbb
xor
xchg
incl
mov
adc
stos
add
or
add
jns
lret
mov
jecxz
push
mov
mov
push
mov
insb
addr16
shll
xchg
addb
mov
decl
mov
pusha
mov
dec
adc
add
xchg
and
push
mov
sub
das
gs
pop
stos
jmp
or
adc
je
push
jnp
pop
movsl
lea
lods
ret
clc
xchg
ja
or
or
test
ret
inc
insl
sbb
lret
cmpsl
jp
scas
enter
lods
nop
cmp
shlb
jb
mov
cmp
inc
xchg
fistpl
mov
dec
sub
sub
shll
xchg
in
sub
cmp
push
dec
imull
push
sarb
jle
arpl
test
xor
pop
pop
cmpsl
mov
xchg
and
das
call
cmp
adc
cmp
cs
sub
xchg
sub
xchg
out
dec
jmp
dec
pop
push
in
jle
mov
divb
gs
js
mov
jecxz
add
inc
hlt
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
sub
jae
cmp
sbb
and
sbb
mov
mov
cmp
dec
add
jbe
aaa
mov
jmp
push
frstor
cld
imul
shl
jo
sub
sti
adc
mov
adc
add
fwait
jmp
out
ja
movsb
and
aam
xchg
data16
mov
mov
int
pop
cmpsl
cwtl
lahf
je
adc
andb
sbb
push
cmp
mov
loopne
jno
jmp
mov
nop
mov
xchg
cmp
xor
jg
sub
imul
jbe
cmp
insl
mov
pop
jb
repz
adc
pop
inc
push
inc
dec
pop
lcall
mov
dec
shll
cwtl
cmc
js
xchg
fwait
add
negb
std
inc
sbb
push
add
xchg
loop
xchg
add
repnz
sbb
mov
jb
and
xor
sahf
lock
pop
adc
pusha
sbb
jge
mov
add
insl
pop
pextrw
add
pusha
sub
ficompl
pop
push
mov
je
ret
xor
ss
adc
cmpsl
mov
lret
leave
xchg
clc
fildl
xlat
cmc
xchg
int3
sub
mov
andb
xor
sbb
mov
mov
cmpsb
sahf
sbb
pop
push
push
mov
mov
cmp
xor
mov
stc
pop
and
push
cmp
pop
out
inc
lods
adc
dec
cmp
fcoms
inc
lock
jmp
loop
pop
fsubl
adc
in
sbb
repz
mov
sub
push
push
dec
test
rolb
inc
push
pushf
pop
add
mov
aas
addb
jns
repnz
scas
leave
jecxz
sub
nop
xor
mov
mov
sub
iret
sbb
cmpsl
pop
pop
push
shll
cmp
xor
cltd
hlt
xchg
xchg
cmp
add
ja
cmp
addr16
lea
movsb
mov
mov
push
sub
and
jecxz
cmpsb
add
add
loopne
mov
jmp
call
pop
pop
inc
loope
adc
out
bound
gs
cmp
rcrb
cmp
and
mov
mov
sub
push
rorl
pop
xor
jmp
clc
lds
pushf
xlat
xchg
and
data16
dec
adc
out
xchg
add
dec
lcall
sbb
xchg
adc
ficompl
xor
in
xchg
pusha
add
mov
dec
cmp
pop
or
mov
push
adc
stos
fnstenv
pop
xlat
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
sbb
mov
and
sbb
pop
sti
loope
or
adc
sbb
and
xchg
sbb
std
dec
pop
jecxz
sub
mov
push
mov
mov
sbb
pop
sub
in
sti
mov
movsl
jns
add
pop
enter
mov
mov
xlat
in
shl
orb
or
icebp
jno
pop
lock
jbe
lds
dec
or
sti
mov
jnp
repnz
rep
lahf
add
das
adc
xor
repnz
mov
add
xchg
add
cmc
lods
in
ljmp
jge
xchg
and
mov
iret
pop
lods
xor
rcrl
add
cmpsl
jge
fs
gs
add
and
fbstp
sub
mov
jnp
inc
mov
popa
imul
lea
cmovae
das
stos
outsb
adc
pop
in
int
mov
inc
pop
orl
lods
mov
jmp
out
in
or
sbb
stos
test
ret
fsubrs
repz
das
adc
mov
gs
rcll
arpl
dec
dec
or
xchg
jmp
sbb
cmp
lods
and
mov
mov
popa
sahf
dec
test
or
jl
dec
sarb
xchg
into
ljmp
dec
xchg
adc
add
xchg
lret
mov
mov
icebp
and
outsb
pop
cmp
clc
insl
mov
sub
ret
je
push
mov
xor
sub
pop
dec
push
ret
ja
daa
sub
mov
in
lcall
ja
ss
xchg
ljmp
ret
jns
pop
pop
and
jb
xchg
clc
loopne
jl
sbb
cmpsb
leavew
adc
arpl
mov
lods
add
mov
out
fcmove
cmp
iret
mov
and
sarl
mov
lret
mov
add
pop
loop
mov
lock
or
fsubrl
jg
mov
push
push
sbbb
xchg
sub
inc
inc
dec
loop
push
push
fsubs
into
sub
test
test
aam
ljmp
lods
ficoml
sarl
jbe
push
lcall
inc
add
movsl
mov
mov
mov
imul
daa
ja
xchg
fwait
jl
push
mov
lds
mov
fildll
std
cltd
mov
xor
or
outsb
das
add
mov
bound
jno
sbb
xor
inc
or
xor
mov
lods
sub
adcl
push
inc
loope
repz
cmp
adcl
mov
xor
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
mov
sbb
and
sbb
sar
cs
lea
out
or
jns
ss
mov
mov
iret
subb
loope
scas
ljmp
inc
jmp
es
les
inc
stos
push
test
dec
test
push
pop
xor
xor
inc
dec
out
aas
sub
or
jge
sarl
popf
data16
xor
push
nop
je
leave
scas
add
or
mov
xchg
push
outsb
int
mov
std
add
push
lock
jle
pushl
lret
test
stos
push
hlt
fstpl
adc
and
xor
mov
mov
ljmp
pop
push
es
aas
fwait
push
lods
test
aam
fcompl
pop
pop
cmpsb
xor
mov
fldl
cmp
lret
mov
and
xchg
scas
dec
mov
sbbb
mov
faddl
js
dec
jbe
js
inc
add
iret
xchg
inc
pop
clc
pop
mov
aad
mov
jnp
push
inc
ja
js
outsl
push
ljmp
sbb
das
mov
shll
push
sub
dec
cwtl
push
jnp
jp
mov
jo
lds
outsb
mov
sarl
enter
shll
ds
push
dec
xor
jnp
pusha
inc
sub
jbe
jb
jb
cmp
daa
mov
ret
dec
mov
insl
push
jb
ret
xchg
pop
push
and
out
cmp
mov
inc
out
decl
test
addr16
or
sti
outsb
push
jmp
adc
add
push
xor
lods
xchg
mov
lret
dec
dec
jne
fsubr
and
gs
jle
orb
repnz
int3
push
jge
jecxz
out
xchg
aaa
iret
pop
ret
push
lea
mov
jg
pop
jp
inc
repz
sub
aam
mov
orl
xor
loope
push
loope
inc
in
mov
jp
cvttps2pi
adc
movsb
in
in
inc
push
cmpsl
mov
out
jae
push
cmp
daa
enter
mov
cmpsb
xchg
stc
shll
or
ljmp
mov
in
jg
stc
jmp
push
mov
sbb
jne
jg
movsb
cli
hlt
cld
scas
sbb
pop
xchg
scas
xchg
cmp
pop
mov
in
or
mov
xchg
xor
or
adc
lret
daa
push
sub
xor
cmp
outsl
into
cwtl
lods
mov
fimull
mov
iret
or
dec
push
mov
cld
popa
in
mov
xlat
dec
mul
sub
lods
and
ss
push
xchg
fidivs
rclb
js
les
mov
xor
hlt
push
pop
cltd
out
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
and
sbb
adc
sbb
ret
lock
xchg
pop
cmpsb
jmp
hlt
clc
popl
add
adc
adc
and
mov
xor
and
push
lret
and
add
mov
cli
jmp
dec
push
xor
in
dec
das
adc
sub
test
sbb
pop
rclb
inc
repz
ss
ss
lea
sub
lea
jle
lret
repz
inc
int
lock
sub
cmp
sbb
sub
lea
mov
inc
andl
mov
cmpsl
jmp
dec
int
fisubrl
xlat
test
mov
lds
test
push
push
and
mov
sbb
and
jno
addl
jp
jp
iret
mov
std
xchg
cmp
cmpl
add
mov
iret
fsubl
jmp
cld
cs
add
sbb
or
push
mov
sub
pop
inc
dec
in
sub
icebp
mov
in
xchg
dec
push
mov
sbb
push
nop
dec
outsl
nop
mov
test
mov
aas
cld
mov
lods
scas
xchg
test
outsl
pop
xor
xor
scas
aaa
mov
push
mov
pop
arpl
and
xchg
cli
and
arpl
icebp
out
in
pop
inc
cwtl
popa
lret
xor
repnz
js
mov
push
hlt
adc
mov
ss
xor
pop
jns
stos
ss
and
adc
pusha
ss
mov
push
pop
in
leave
mov
gs
ret
mov
ljmp
stc
push
les
ret
pop
insb
loopne
adc
add
add
add
lret
leave
call
mov
sbb
jle
repnz
jnp
cmp
sbb
orb
cmpl
fs
inc
jbe
mov
cli
or
inc
cmpsl
xor
cmp
lods
pop
inc
cld
inc
dec
and
add
dec
or
push
xor
mov
fsubr
leave
insl
jmp
pop
inc
xor
ret
mov
add
jle
ds
add
std
fwait
and
mov
add
push
cmp
mov
mov
mov
lret
mov
push
cmp
push
mov
xor
leave
xchg
and
je
test
add
mov
ja
shll
js
jg
fimuls
push
fxch
mov
xor
pop
cmc
insl
dec
cmp
push
movsb
xchg
sub
ret
cmp
push
arpl
add
jo
push
sub
mov
movsl
or
cmp
sub
xor
subl
sub
or
mov
loopne
dec
jl
es
sahf
push
enter
dec
in
lods
enter
add
add
push
push
push
mov
in
repnz
jmp
sbb
adc
sbb
sbb
nop
mov
jl
push
jl
sub
sub
jnp
pop
add
cmp
ja
mov
inc
mov
stos
push
lret
cmpsb
ljmp
fistpll
mov
xchg
push
xor
cmc
sahf
insb
pop
pop
aas
dec
repz
shrl
xchg
loop
in
aas
inc
mov
xor
pushf
fstl
jg
gs
pop
mov
lret
shrl
fsub
jbe
loope
insb
insl
arpl
pop
xchg
pop
sbb
fsubr
cmp
mov
sub
lods
mov
insb
ds
cld
scas
push
inc
push
mov
stos
mov
add
or
ljmp
out
push
fdivrl
ret
jb
lret
popa
hlt
lods
push
gs
cmp
dec
ss
inc
cld
imul
push
test
aam
fwait
inc
or
jnp
sti
and
mov
cwtl
sub
mov
inc
arpl
xor
mov
pusha
out
and
add
dec
sub
push
mov
and
std
inc
cld
test
loop
inc
ja
jge
dec
icebp
ds
inc
lret
movsl
add
mov
test
imul
pop
jb
lret
sbb
jg
adc
push
jb
fnstsw
ret
in
dec
inc
mov
leave
add
add
jp
xor
or
stc
out
add
cwtl
xor
cmp
frstor
cmp
push
shlb
sti
stos
sbbb
in
cld
in
push
and
mov
xor
fimull
mov
inc
popa
mov
cmc
pop
out
out
jo
or
lret
dec
push
out
sub
cmpsl
test
popa
test
lret
pop
sti
mov
pop
jbe
and
pop
movsb
icebp
sbb
push
add
jb
das
bnd
rcrl
cltd
mov
lahf
xchg
adc
mov
test
adc
je
out
jo
inc
xchg
xor
and
mov
push
outsb
js
enter
jae
push
sub
pop
add
clc
cmp
repnz
push
cwtl
cmpsl
sub
aaa
xlat
xor
add
shll
stc
aad
xor
mov
xchg
cmove
mov
fsubl
mov
jl
add
cmpsb
mov
lds
adc
and
sbb
and
out
xchg
sub
jnp
xchg
sbb
fcmovnb
sbb
sbb
mov
dec
loopne
es
jmp
cmp
insl
jnp
scas
mov
mov
test
pop
loope
mov
cmpsl
bound
fldl
mov
or
idivb
cwtl
add
jmp
sub
mov
mov
jg
jnp
popa
add
dec
mov
inc
mov
pop
xor
repnz
sbb
mov
dec
jne
sub
xor
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
int3
mov
sbb
adc
sbb
adc
loopne
stos
adcl
dec
fucomi
movsl
lahf
call
outsb
in
cmp
jmp
leave
mov
adc
and
andl
rclb
pop
nop
sbb
lods
shll
out
scas
leave
mov
sbb
lock
sub
loope
mov
aaa
jle
push
addl
daa
cmp
aaa
dec
dec
and
loopne
sbb
adc
mov
push
mov
pop
mov
aaa
pop
cltd
and
ljmp
or
jl
adc
in
in
in
mov
jmp
mov
inc
mov
outsb
popf
pop
xor
mov
push
mov
mov
cli
dec
movsl
outsl
ret
sub
mov
testl
push
xor
mov
lock
inc
leave
lret
xor
push
hlt
push
les
roll
cwtd
jbe
pop
fidivs
pop
lods
or
push
adc
mov
mov
and
ds
xchg
push
cmc
fstps
mov
clc
mov
jns
push
and
shll
adc
xor
mov
cwtl
sti
mov
aaa
xchg
stc
int3
xchg
or
push
xchg
sub
rcll
push
jo
jl
test
xor
out
sbb
sub
fidivrl
adc
ror
imul
xor
jo
jne
fldl
and
mov
fnstenv
pop
mov
popa
inc
sbb
leave
xchg
pushf
xchg
inc
inc
stos
adc
test
adc
dec
fldt
out
repz
cmp
cmp
pushf
cli
sub
cmp
cmp
adc
icebp
dec
jmp
push
test
sbb
jmp
popa
iret
pop
fnstcw
bnd
add
stos
repnz
adc
or
cltd
mov
loope
andb
cli
pop
mov
lock
pop
jge
xchg
stos
into
popl
in
hlt
push
pushf
insl
in
data16
sbb
aas
jne
xor
push
xchg
cwtl
jb
jmp
xor
inc
mov
negb
sub
or
adc
movsl
imul
cmpsb
movsb
mov
mov
pop
jecxz
sub
lods
sub
mov
push
rcrb
inc
sti
jge
cmpsl
dec
sbb
sbb
and
or
fwait
neg
or
lods
lea
xchg
insb
sbb
dec
and
push
sbb
xchg
js
stos
mov
mov
into
xor
rcll
ret
call
sub
cmpsb
jge
and
ret
or
add
add
les
or
xchg
pop
loope
push
adc
sbb
loop
stc
xchg
mov
dec
jg
adc
inc
xor
in
fs
xor
push
cmpsb
lods
jp
pop
hlt
in
jnp
arpl
fucomp
sbb
push
filds
dec
sbb
xor
jecxz
jmp
pop
and
stos
loopne
in
xlat
push
or
shll
pop
push
jnp
add
adc
dec
pop
fistl
pusha
add
mov
js
pop
jg
lock
dec
sbb
add
nop
mov
dec
data16
je
mulb
clc
aas
mov
mov
xchg
fidivl
and
push
shlb
mov
lea
jmp
mov
inc
out
lods
dec
cmc
insl
cwtl
pop
stos
cmpsb
aas
rorl
mov
push
add
dec
fisubrl
xchg
call
jge
ja
jg
and
insb
loope
dec
jg
movl
xor
ja
inc
lret
pusha
xchg
sbb
into
inc
xchg
push
jge
insl
roll
stc
xorl
inc
in
xlat
movsl
dec
jnp
idivb
cmp
fistpl
pop
push
cmp
push
xchg
mov
pop
push
xor
mov
lret
imul
fst
call
mov
orb
cmp
mov
jmp
xlat
cmp
jmp
inc
scas
xchg
js
std
cmp
loopne
push
aam
pop
out
lock
orl
fistps
or
sti
enter
in
test
pop
cmp
xchg
push
je
lahf
or
popf
pop
js
mov
mov
aad
iret
ljmp
imul
std
cmpb
xchg
loopne
pop
rcll
mov
fs
js
mov
xor
add
adc
aad
jecxz
int3
inc
xlat
loope
adc
test
ja
and
test
jmp
aaa
xlat
dec
push
push
stos
stos
cmpl
sub
fimuls
std
add
pusha
test
in
outsl
in
push
xor
pusha
xbegin
aad
fcmovne
daa
arpl
outsl
jp
aam
hlt
data16
mov
sbb
xchg
dec
push
cwtl
nop
out
aaa
xchg
or
dec
loop
imul
mov
into
jb
mov
stc
jne
push
dec
mov
in
imul
fcoms
loop
jae
jecxz
cmp
iret
lret
in
movsl
xchg
mov
icebp
jle
inc
xchg
and
mov
xchg
push
out
dec
insb
add
jmp
mov
push
mov
xor
cld
inc
xchg
leave
out
mull
in
gs
mov
scas
movsb
add
and
push
roll
arpl
push
stos
add
push
es
and
xchg
lcall
dec
pop
aad
les
orl
push
dec
mov
jle
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
push
push
xor
inc
adc
mov
mov
pop
sbb
in
sbb
lret
lea
lods
iret
mov
and
idiv
sti
pop
pop
sub
cld
jne
and
stos
int
mov
iret
fadds
push
mov
imul
push
imul
scas
mov
push
aad
mov
cs
jne
xor
sbbb
jle
lods
jmp
movsb
dec
nop
mov
out
sbbb
sahf
mov
mov
adc
hlt
out
imul
stos
jbe
and
icebp
jmp
fbstp
jb
rorb
ds
fiadds
fdivl
js
pop
addr16
or
sub
aas
xor
stos
xchg
enter
mov
mov
cmc
push
int
mov
in
cwtl
xorl
mov
in
adc
loopne
mov
cltd
pusha
sub
mov
sbb
sub
aam
in
addr16
sub
pop
std
jns
or
mov
jbe
jmp
mov
pop
frstor
and
push
lret
sub
gs
stos
lock
in
out
jl
ja
cmc
push
mov
lahf
movsl
adc
sub
and
pop
les
or
enter
aas
cmc
jb
sub
and
and
pushf
jo
mov
lds
sub
push
jno
adc
jmp
cmp
add
aam
push
mov
sbb
test
inc
cmp
dec
mov
jo
push
out
mov
pop
and
mov
ds
rolb
stos
xchg
adc
sub
jb
movsl
lret
mov
add
mov
roll
pop
dec
enter
mov
loope
jb
adcb
iret
nop
js
mov
call
rorb
sub
mov
mov
pop
sar
xchg
test
in
out
and
mov
arpl
pop
mov
jns
jbe
pop
mov
enter
call
sub
cmp
xchg
sub
enter
cli
xchg
pop
js
scas
xchg
bound
sub
sahf
ja
xchg
daa
jnp
fs
push
add
dec
outsl
mov
sbb
es
lock
dec
imul
mov
loope
add
jae
pop
mov
loop
inc
jg
out
dec
cmp
xchg
xchg
or
push
cmp
ret
add
pop
dec
movsl
jg
cmp
repz
mov
pop
lods
fstps
adc
js
pop
out
outsb
data16
adc
jno
lock
xor
adc
and
shll
jg
sub
cmp
lret
pop
ss
not
es
and
xor
divb
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
jp
sarl
adc
sbb
pop
add
cmovns
pop
jle
jecxz
cs
xor
cmp
mov
jne
mov
mov
pop
mov
test
push
adc
popl
mov
jl
xor
inc
xlat
xor
jecxz
lods
sahf
push
int
enter
mov
fisttpll
ja
rcrb
stc
je
mov
repnz
adc
loopne
mov
pop
jle
pop
mov
mov
stos
xor
cs
dec
mov
jmp
insl
jg
cli
rorb
movhps
icebp
push
shll
popa
jmp
adc
dec
mov
dec
add
cmp
sti
roll
test
adc
mov
adc
mov
int
ret
cs
adc
es
fbstp
scas
int
dec
fnstenv
jae
je
loope
mov
jae
xlat
sub
adc
jp
mov
pop
add
dec
loop
iret
arpl
sahf
cmc
mov
pop
in
inc
test
out
std
mov
outsb
mov
cld
jg
mov
mov
outsb
mov
test
pop
test
ljmp
outsb
xchg
std
enter
in
sahf
push
sub
xchg
stc
insl
push
popa
punpckldq
and
dec
rcrb
imul
mov
cmc
jecxz
mov
sub
out
adc
lods
mov
je
xor
aaa
cli
push
adcl
push
pop
pop
cmc
movsl
sub
fisttpl
adcb
leave
shrb
dec
mov
cld
stos
imul
bound
mov
jmp
call
and
xor
mov
and
icebp
rcrl
icebp
ja
inc
jmp
cmp
adc
xchg
jl
sbbl
push
xor
stos
mov
aam
les
xchg
ret
call
stc
cmpsb
and
xchg
jo
push
into
repz
cwtl
lcall
lret
jns
add
dec
scas
cli
fcmovnu
out
std
jb
pop
sbb
roll
jg
std
sahf
out
sti
and
lea
mov
mov
mov
add
xchg
aaa
sub
aad
and
mov
mov
in
mov
inc
xchg
iret
mov
fwait
inc
pop
loope
push
sbb
jb
test
in
jp
jae
xor
ret
pop
xchg
mov
je
xor
jns
adc
enter
or
add
or
pop
fwait
dec
push
push
sbb
ja
es
vpunpcklwd
pushf
fdivr
adc
xorl
cmpsl
mov
iret
add
pusha
xchg
mov
add
push
scas
shrl
das
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
push
dec
lds
sbb
and
sbb
sub
je
ret
lods
mov
scas
fists
xlat
jecxz
xor
ljmp
sbbb
pop
and
subb
push
pop
mov
enter
ds
push
int3
mov
cmpsl
inc
leave
lahf
dec
sub
sbb
nop
outsb
nop
outsb
xchg
jmp
ljmp
cmc
roll
sar
cmpsb
mov
pop
ja
out
mov
jno
insb
ss
add
leave
ror
xchg
xchg
and
lret
inc
daa
jno
mov
lea
cmp
insl
mov
icebp
jl
nop
sub
cmc
js
out
xor
dec
and
sub
scas
or
pop
xor
imul
fldl
xorl
in
xchg
pop
aaa
addr16
loop
sub
cltd
imul
jle
test
inc
fisubs
ret
push
pop
sub
loopne
ss
in
lret
inc
out
mov
pushf
imul
rcl
add
in
dec
ret
or
adc
inc
and
faddp
sarl
push
pop
inc
inc
sahf
movsb
fldcw
mov
dec
es
movsb
dec
jge
lods
jmp
push
hlt
adc
push
and
pusha
xor
or
pop
pop
mov
ret
mov
adc
lret
out
imul
add
mov
in
sub
data16
mov
jbe
and
cmp
sub
leave
fsubl
xchg
inc
ret
aas
xor
adc
nop
repz
das
lods
and
repz
add
test
or
out
pop
sub
cmp
aas
clc
inc
push
lds
pmulhuw
adc
sbb
pop
in
inc
roll
sbb
or
pop
mov
pop
out
imul
out
in
sahf
pushf
lea
sbb
dec
out
fucomp
sahf
add
rcrb
adc
mov
lods
daa
aaa
cmpsb
sbb
data16
lods
cwtl
jmp
sahf
stc
xor
sar
jne
imul
sbb
ds
mov
stc
mov
in
cld
mov
inc
sub
mov
arpl
dec
or
mov
push
sbb
repnz
jg
jp
jbe
hlt
decb
adc
xor
adc
jecxz
mov
inc
cmp
xchg
cmc
sub
or
gs
cmp
minps
nop
xorb
jne
out
sahf
stos
mov
mov
mov
mov
push
enter
and
mov
lcallw
hlt
pusha
jbe
ret
mov
or
addl
lods
fbld
xchg
adc
add
sbb
sbb
daa
stos
hlt
mov
push
cltd
sub
adc
cmp
and
stos
cmp
xchg
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
in
mov
and
sbb
pop
clc
pop
jae
call
insl
cmp
loope
js
iret
pop
stos
sarl
cmpsl
lahf
jns
cmp
in
dec
cli
mov
fnstcw
inc
repz
mov
icebp
mov
sbb
cmp
popf
aas
lods
adc
adc
fs
pusha
cltd
jbe
out
sub
mov
insb
sub
fisttpll
fildl
frndint
hlt
jnp
mov
sbb
mov
mov
pop
or
adc
mov
jne
cmpsb
mov
insl
xchg
lea
outsb
push
int3
mov
popf
cltd
jmp
jno
push
jmp
add
add
dec
adc
inc
inc
in
inc
aad
and
test
stos
aaa
mov
inc
jno,pn
add
fucom
mov
aas
cmpb
push
stos
push
cmpsb
and
inc
mov
xor
testl
or
jecxz
aad
scas
mov
fs
mov
mov
fxch
add
mov
call
lock
dec
jg
daa
lret
mov
mov
iret
pop
sarl
adc
mov
push
mov
mov
inc
bound
jmp
push
pop
mov
cmp
or
fmull
or
lret
pop
icebp
sub
sbb
jns
bound
jg
pusha
mov
cmp
daa
dec
xor
sbb
mov
mov
push
leave
repnz
cmc
ds
xor
bound
jae
mov
jno
test
dec
negb
rcrb
dec
mov
inc
stos
or
mov
icebp
outsl
pushf
jge
push
sbb
idivb
das
or
fsubp
xchg
adc
enter
lret
jne
mov
scas
pop
jecxz
and
jbe
mov
ss
gs
aas
repnz
xchg
out
mov
faddl
pop
je
jbe
stos
jmp
mov
xchg
mov
sub
in
pop
loope
sub
out
jecxz
sub
or
outsb
cmp
jge
jo
adcl
cmp
imul
xor
and
fsubs
fisubs
or
loope
insl
popf
test
stos
ret
add
or
adc
mov
cmp
cmc
and
popa
cmp
pop
or
cmp
iret
push
jp
mov
sbb
stos
xor
rorb
pop
dec
and
ret
movsb
mov
call
pop
into
js
fs
stos
call
mov
stos
xor
cmpsl
fs
mov
in
lods
xchg
es
rorl
and
daa
out
int
cwtl
repnz
push
lcall
sub
push
push
inc
push
jge
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
xor
nop
rcrl
and
sbb
pop
cmc
xchg
jns
jns
dec
push
sbb
enter
fxch
in
dec
lahf
das
out
push
out
sub
jb
and
add
and
icebp
sub
lea
pop
stc
loop
adc
adc
scas
lock
icebp
out
or
or
ss
out
fists
lret
add
outsb
jmp
inc
mulb
dec
xchg
in
les
add
or
mov
cmp
pop
jb
aas
cmp
pop
jp
mov
arpl
pop
bound
cmp
cmp
push
into
cli
shll
scas
dec
jmp
fcomip
mov
and
fcmovu
mov
xor
pop
pop
outsb
clc
fisubs
push
adc
jge
aad
fucom
dec
mov
int
adc
aas
js
outsb
dec
popa
adc
fbstp
dec
subl
push
cmp
shlb
sbb
xor
imul
mov
test
fisubs
adc
rcll
mov
dec
sbb
cmp
mov
add
lcall
add
sbb
or
popa
and
mov
cmp
mov
xchg
sub
fistpl
sbb
sub
adc
insb
fistpl
inc
sub
inc
stc
test
ficoms
inc
or
ds
ss
push
hlt
pop
gs
add
gs
aas
in
les
push
fdivrl
pushf
xor
jl
xor
jns
andb
sbb
cmpsb
dec
mov
jae
in
xor
add
xchg
lret
stc
ret
and
and
rcr
dec
js
adc
bound
cwtl
sub
je
scas
and
out
mov
or
mov
sahf
pushf
sub
int3
push
aam
add
jge
adcb
dec
push
imul
lock
mov
lcall
mov
rcll
mov
nop
dec
std
out
xchg
scas
mov
fistpll
adc
mov
mov
or
mov
inc
cwtl
gs
nop
pop
fwait
int
adc
mov
dec
push
sti
xchg
adc
mov
lods
mov
push
leave
out
sbb
and
cmp
shl
inc
fwait
mov
push
lods
in
cltd
mov
hlt
push
shlb
fcmovu
mov
jno
outsl
sub
xor
xchg
or
out
or
mov
movsb
xchg
push
ja
movsl
xchg
mov
jb,pn
sti
jg
push
sti
mov
jmp
aad
clc
insl
daa
xor
sub
js
in
xchg
or
push
lret
sub
cmc
gs
jge
push
movsb
lea
push
jns
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
pop
mov
rcll
rorl
shl
lods
sub
sbb
int
in
pop
inc
adcl
push
les
insl
je
xor
bound
lea
xchg
loopne
rcrb
in
and
push
pop
xchg
stos
add
cmp
rorb
imul
sti
inc
jne
or
rorl
subb
cmp
movsb
out
and
testb
mov
jecxz
popa
pop
jno
shlb
cltd
stos
adc
pop
repz
gs
jge
test
pusha
cwtl
sub
iret
popa
es
std
push
add
jmp
loope
lret
mov
add
dec
mov
sub
add
in
mov
add
xor
lahf
ljmp
popf
jbe
xchg
cld
lahf
ret
std
mov
dec
xor
aas
or
je
sbb
cld
mov
inc
hlt
scas
vpmaxub
shlb
cmp
enter
divb
mov
pusha
sbb
sub
dec
and
lock
push
in
push
rolb
jl
push
lock
repz
es
add
cld
push
int
popa
jnp
ret
dec
cld
dec
cmpsl
cmp
not
adc
pushf
dec
imul
jae
ffree
add
cmp
mov
mov
sbb
dec
inc
xor
adc
cld
test
pop
sbb
pop
sub
in
pop
add
movsl
outsl
icebp
xchg
pusha
loop
and
mov
jbe
mov
mov
pop
jg
adc
bound
mov
mov
es
pushf
ss
or
jmp
nop
fdivr
xchg
xor
loope
jo
add
movsb
add
cmp
mov
leave
add
xchg
mov
loopne
stc
jecxz
in
daa
leave
and
mov
aad
xchg
pop
sbb
mov
loop,pt
push
leave
and
ret
cmp
mov
ljmp
lahf
shl
fdivrl
mov
ljmp
fucom
bound
push
nop
ret
aas
addb
inc
pop
dec
repnz
cmp
test
sub
push
push
jnp
sub
test
sbb
ret
push
addr16
sbb
cltd
sub
inc
xor
nop
push
mov
pop
inc
and
nop
or
mov
cltd
xchg
in
push
mov
jle
dec
sub
loopne
mov
shll
lahf
or
add
adc
push
scas
push
mov
xchg
sub
push
mov
popa
rolb
dec
sub
push
int3
mov
pop
subl
inc
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
lcall
and
sbb
pop
fsub
rcrb
inc
fcmovnbe
mov
clc
bound
and
ret
fidivrs
sahf
or
aam
xor
cli
sbb
cmp
pop
xor
dec
sbb
dec
stos
movsl
idivl
adc
dec
icebp
adc
xchg
fs
aam
jno
ds
aaa
sahf
aaa
adc
in
ss
push
mov
cmp
fwait
xor
ds
in
pop
xor
mov
jmp
jge
mov
or
inc
or
je
ljmp
sbb
call
xor
and
loop
in
sub
bound
sbb
icebp
mov
cld
lret
dec
add
les
dec
loopne
lock
add
icebp
cmp
fdivrl
mov
pop
jecxz
lret
sbb
aad
inc
lea
flds
rolb
lret
add
lds
mov
push
mov
aas
clc
adc
ss
fisttps
fs
addr16
mov
xchg
pop
pop
jmp
add
push
mov
negl
cmp
jnp
fsub
sub
fmuls
push
mov
stos
fwait
and
inc
push
in
int
out
mov
insb
cli
lahf
xor
shll
std
jg
dec
sub
cmp
fwait
xchg
xor
andl
test
jbe
xchg
fisubl
sahf
fsubl
scas
out
ss
jl
sub
fwait
aas
xor
arpl
mov
xor
dec
outsl
mov
scas
sub
aaa
pusha
sub
test
ja
mov
xchg
xor
out
fcmove
pop
push
test
fisttps
cld
daa
or
jg
pop
addb
rcrb
and
and
ljmp
daa
mov
scas
dec
test
call
pop
mov
addr16
push
add
arpl
jae
repz
das
xchg
sbb
and
loope
mov
mov
xor
mov
pop
sbb
jbe
and
ret
dec
push
sbb
fidivrl
mov
lret
fisubrl
push
aam
jl
cmp
and
cmpsb
enter
pop
rol
out
movsb
in
xlat
add
push
dec
sub
orl
xor
clc
cmpl
sub
aas
mov
and
cmpsb
loop
lds
insl
movsb
adc
jle
push
dec
roll
in
push
jmp
xchg
dec
cmp
adc
in
les
mov
xchg
out
in
dec
mov
inc
xorb
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
xor
ss
std
cmc
cmp
or
in
adc
mov
stos
mov
pusha
jl
push
gs
pop
mov
push
inc
lahf
decl
gs
push
xlat
and
aas
insl
fcom
adc
inc
xchg
adc
je
xchg
add
push
cmpxchg
lods
in
and
cmpsl
cmp
movsl
cmp
adc
frstor
pop
fnstcw
mov
mov
cli
ds
aas
dec
inc
fwait
repz
sub
push
mov
es
lahf
pusha
lea
mov
in
push
cwtl
pop
add
ret
jecxz
push
test
mov
movsl
xlat
call
mov
out
fstl
insl
xchg
sbb
xchg
xchg
scas
lods
out
jo
cmpsb
jno
inc
add
rcrb
jb
in
adc
dec
cmp
adc
xlat
mov
add
cmp
cltd
mov
stos
mov
aaa
aam
or
sbbl
leave
jge
call
mov
outsl
cmp
loopne
cmp
sub
cmp
xchg
pop
hlt
jp
xchg
pop
les
dec
shll
test
adc
and
push
mov
jae
inc
sbb
cwtl
lods
mov
gs
shrl
out
xlat
pushf
out
mov
pop
cmp
imul
or
and
out
push
xchg
adc
sub
out
rolb
pop
pusha
icebp
jns
subl
mov
in
les
pusha
imul
xor
adc
out
mov
jge
fisttps
mov
hlt
stos
mov
std
adc
nop
int3
aas
clc
popf
bound
imul
xor
test
pop
sar
lahf
xchg
dec
and
adc
xchg
popa
cmpsb
js
sbb
cmpsl
dec
in
inc
cmp
and
data16
stc
sub
inc
mov
out
in
or
add
sbb
sbb
jbe
dec
lcall
mov
mov
mov
xor
mov
rolb
add
xchg
add
pop
pop
sahf
out
adc
or
dec
xchg
rcll
je
loopne
jl
push
out
add
lods
dec
mov
popa
hlt
push
loop
loopne
or
mov
dec
aaa
pop
insb
cs
push
push
xchg
adc
mov
push
sbb
lahf
dec
sub
cli
push
mov
in
or
les
push
dec
sub
adc
jg
dec
loop
jecxz
fwait
mov
shr
dec
xchg
sbb
mov
sub
call
mov
rorl
stos
rcr
and
sub
sti
imul
cltd
sbb
add
inc
push
pushf
jb
lock
or
mov
xchg
cltd
call
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
mov
sbb
and
sbb
cmp
int
mov
cs
in
push
jmp
into
shrl
mov
or
lock
lods
push
adc
xor
sub
arpl
je
adc
cvtss2si
arpl
xchg
cld
movsl
lock
sti
sbb
hlt
lahf
pop
nop
mov
xchg
js
stc
pop
mov
and
push
inc
dec
sub
dec
cs
jb
rcrl
xchg
or
int
add
jmp
test
sarl
fsubrl
repnz
int
pop
lock
out
jmp
lcall
movsb
fiadds
lahf
inc
push
adc
cwtl
and
xchg
pop
jae
jns
push
fistpl
es
mov
add
xchg
pop
outsl
jecxz
stos
and
jg
mov
add
das
bound
sbb
test
pop
dec
mov
sbb
jle
test
xchg
sbb
std
ficomps
mov
ds
jge
cmc
push
in
dec
aad
cmpsb
icebp
sahf
mov
dec
xchg
faddl
lcall
xor
inc
push
add
popf
mov
inc
cmp
jne
mov
or
bound
lret
dec
cwtl
das
movsb
jns
mov
sub
lret
daa
dec
sti
push
jb
mov
mov
out
cmp
in
jecxz
imul
sti
xchg
and
loope
dec
pop
aaa
mov
xlat
mov
jmp
dec
cmp
je
daa
jbe
and
lret
mov
pop
fcomi
aad
or
mov
pop
pop
push
stos
rol
clc
rcl
pop
mov
je
imul
les
or
out
pop
aad
fs
ret
shlb
inc
out
test
cmp
cwtl
popf
inc
or
sbb
sbb
mov
adc
xchg
add
xor
scas
cmp
sti
push
lds
xchg
mov
jae
scas
inc
sbb
pop
jg
xchg
adc
push
xchg
addl
insb
jmp
push
insl
fistl
xor
mov
fidivs
mov
out
pop
lock
adc
mov
test
icebp
std
push
add
cmp
pusha
adc
and
sub
push
mov
jo
inc
push
ja
fisubs
jmp
add
scas
pop
pop
mov
xchg
or
jmp
filds
push
xchg
sti
je
loop
in
stos
or
dec
add
xor
xor
and
pusha
xchg
add
cwtl
testl
in
adc
pop
fwait
pop
xchg
je
cmp
bound
fld
test
jmp
sbb
mov
pop
inc
pop
addr16
ret
inc
outsb
ljmp
xchg
rcrl
adc
das
inc
movsl
adc
mov
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
xor
and
sbb
lea
push
xorb
push
add
sarb
or
cmc
jae
mov
adc
add
push
das
outsb
clc
lods
es
sarl
stos
shl
popa
xchg
inc
insb
in
fldenv
pushf
pop
dec
xor
js
cli
dec
lret
mov
pop
inc
ret
mov
sub
sbb
mov
and
div
adc
xor
push
pop
cmpsl
xchg
std
add
inc
into
xchg
out
lods
divl
add
jg
and
mov
cmp
pushf
jl
out
scas
adc
test
add
les
in
jl
lock
std
lods
add
iret
jl
and
sub
mov
mov
loopne
xor
aas
jmp
imul
fscale
aam
pop
cmp
orl
daa
adc
idivb
dec
insb
jo
jb
gs
fsts
inc
icebp
cmp
clc
bound
sub
xor
mov
shrl
stos
fdiv
hlt
into
lcall
cld
movb
sti
jne
dec
mov
push
inc
sbb
and
xor
pop
les
lock
aas
mov
cwtl
rol
xchg
sbb
or
mov
adc
or
out
incl
imul
insl
sarb
and
xchg
fsubrs
fxch
sbb
cmpsb
and
xchg
sahf
mov
cld
pop
addr16
lahf
pop
jno
fwait
and
push
mov
cwtl
pop
sub
mov
fdivrp
mov
hlt
sub
into
fldl2t
sub
enter
adc
push
and
pop
je
aad
outsb
jge
mov
dec
xchg
mov
js
cmp
xor
jp
ja
stc
shlb
popl
cmp
popf
negb
mov
xor
aam
daa
jno
mov
cmp
lcall
jp
jp
in
fwait
push
iret
and
sbb
pushf
lds
jb
pop
jns
push
out
fsubrp
pop
mov
adc
pop
imul
or
mov
sbb
ljmp
pop
xor
sbb
jg
and
loope
nop
xchg
imul
inc
cmpsb
es
jae
sub
jmp
rcll
add
adc
xlat
call
and
into
sahf
arpl
jecxz
xchg
movsl
fldcw
iret
and
add
sbb
aad
repnz
cmpsb
nop
jmp
pusha
loopne
shl
iret
mov
addb
sbb
ror
das
scas
std
movsb
leave
and
push
dec
mov
data16
push
cmp
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
cmp
popf
sbb
and
sbb
mov
mov
out
decl
sub
aaa
test
test
pop
jae
inc
sbb
mov
ret
sub
sbb
pop
out
idivl
mov
adc
xor
int3
dec
popf
out
mov
adc
test
insl
adc
push
mov
aam
mov
scas
mov
popa
int3
ds
adc
shl
cli
ja
or
and
cld
cmp
stc
es
filds
hlt
es
sub
hlt
or
dec
movsb
in
clc
cld
insl
sbb
pop
jno
xchg
jno
push
enter
iret
fsub
aad
leave
pushf
inc
lock
cmp
jecxz
jmp
sub
in
in
pop
mov
xchg
mov
jo
mov
and
in
jno
push
in
xor
shl
lcall
push
fldt
enter
jbe
test
dec
lods
mov
inc
out
icebp
sbb
outsl
pop
fldenv
test
popf
xchg
fnstsw
mov
jbe
mov
iret
orb
jns
pop
or
mov
or
imul
mov
dec
jae
mov
jae
sbb
fdivs
pusha
insl
xchg
xor
or
dec
icebp
in
js
xlat
or
sbb
lret
lds
fcoml
or
iret
cli
dec
or
popf
ret
imul
in
mov
inc
out
sbb
leave
pop
test
daa
jne
imul
dec
mov
inc
push
push
inc
jno
movsl
sub
loop
dec
mov
lcall
or
outsb
add
js
sahf
pop
jno
pusha
push
push
jbe
shrl
mov
mov
dec
fisttpl
sub
dec
mov
test
je
push
lret
stos
xlat
or
shrb
mov
xlat
cmp
in
test
mov
cwtl
push
xchg
jae
pushf
xchg
mov
jne
inc
jmp
rol
repz
outsb
cli
ror
sbb
mov
xor
test
cs
push
in
xchg
xchg
pop
and
enter
mov
jmp
sbb
jg
xchg
add
sub
sub
xchg
out
jns
js
insl
jnp
adc
add
int3
and
nop
mov
adc
mov
insb
jle
push
and
inc
dec
jg
mov
mov
pop
sbb
xchg
sbb
or
lret
mov
sub
cmpsl
loopne
dec
leave
dec
call
insb
sub
cmp
jle
mov
or
mov
bnd
insb
jnp
std
into
dec
ror
xchg
inc
sbb
sahf
cwtl
xor
dec
ret
in
cmpsl
insl
adc
adc
adc
push
clc
ja
xchg
adc
mov
mov
insb
push
sub
add
mov
add
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jle
xchg
sbb
and
sbb
push
out
stc
sbb
push
pusha
rcll
outsb
aad
sbb
mov
sbb
inc
repnz
push
ficoml
scas
cmp
push
jnp
lods
stc
lock
loopne
jae
stc
pop
jle
push
jle
not
jb
ja
dec
add
out
cmp
cmc
push
sahf
push
test
fmul
test
in
aas
lcall
add
imul
jnp
je
mov
mov
push
js
add
cmp
and
faddl
mov
js
mov
sub
pop
das
adc
cmc
test
mov
out
test
insb
lcall
loope
in
or
mov
jnp
xchg
mov
scas
push
mov
loopne
jl
push
dec
fcoml
aam
sti
xchg
push
dec
stc
jne
orb
or
out
roll
test
repnz
lods
repnz
aas
sub
mov
dec
pop
jmp
mov
and
cmp
sbb
fsubrs
fnstcw
add
sbb
movsb
int
outsl
jmp
xorb
sbb
icebp
andb
stc
add
sti
lret
push
inc
push
inc
mov
stos
outsl
ja
mov
mov
mov
xchg
aaa
inc
dec
inc
popf
cmpsl
xor
cli
and
add
xor
mov
push
popa
inc
in
lds
add
loop
fadds
adc
sbb
cmp
popf
in
aad
test
add
das
lret
inc
mov
jae
rorb
dec
das
jo
and
fildl
stc
inc
dec
out
gs
push
cwtl
rorl
jbe
adc
mov
push
inc
sub
sbb
aaa
sbb
stos
pusha
jb
cwtl
ja
in
mov
push
lods
sub
add
shrb
cmp
neg
ret
clc
dec
sbb
sbb
mov
fwait
mov
add
out
aaa
pop
jbe
insb
push
in
cmpsb
cli
fistl
loopne
stos
or
ret
ret
xor
inc
cli
icebp
call
pop
push
sbb
sub
call
in
aas
sub
add
adcb
iret
rcll
int
adc
fstpl
fmull
sub
mov
cwtl
imul
cmp
or
sbb
dec
or
out
push
rcr
mov
dec
xchg
adc
dec
enter
sub
xor
ror
pop
sbb
fwait
jle
aas
push
push
test
mov
jno
push
mov
sub
roll
or
inc
rclb
xlat
fildl
out
dec
out
mov
lret
pop
call
xorl
mov
jns
dec
or
push
iret
sbb
mov
mov
data16
mov
push
inc
and
xor
outsl
shrl
fbld
xor
shl
jmp
cmp
sbb
push
push
out
push
sbb
sbb
and
sbb
dec
stos
das
xorl
push
sbb
xor
cmp
ror
xlat
outsl
dec
push
int
lcall
adc
cmc
cmp
fwait
loope
sbb
adcb
fildll
jle
loop
pop
rclb
push
cmp
jle
inc
ss
pop
and
and
push
xchg
add
pop
jmp
mov
scas
cmp
insb
mov
sub
aad
lcall
xchg
ja
sub
in
inc
or
leave
fsubrs
punpckldq
movsb
push
inc
inc
out
jp
push
pop
data16
inc
xchg
or
pand
sub
sub
fildll
push
lock
mov
cwtl
repz
add
into
mov
lret
int
add
mov
js
lea
jns
mov
adcb
xchg
enter
inc
mov
xchg
push
fcmovne
je
xchg
fcomps
fcomps
cmp
fs
inc
jmp
sub
popa
jae,pt
mul
inc
movsl
mov
mov
mov
sbb
out
js
pop
mov
std
shrb
push
inc
or
jns
lret
push
inc
pop
push
inc
xor
push
dec
cld
sub
sub
xchg
adc
lods
lods
pop
es
out
bound
cmp
ss
and
out
aam
out
cmp
lods
testl
mov
out
inc
bound
mov
and
sbb
xchg
pop
push
repz
ret
mov
popa
cmp
pop
jecxz
cmp
inc
jno
orl
sbb
sub
lahf
fnstcw
push
mov
loopne
iret
inc
sbb
jns
scas
dec
test
cmp
ljmp
push
dec
pop
mov
arpl
fisubs
bnd
js
jne
inc
scas
aam
jmp
jne
and
data16
lcall
rolb
into
or
les
mov
mov
movsb
cmp
mov
loope
xchg
out
pop
cmc
push
jmp
lea
repz
cmp
mov
stos
mov
imul
pop
fisttps
jnp
test
mov
cmpsl
enter
cmp
mov
imul
mov
jne
or
out
sub
lret
hlt
fldenv
xchg
adc
js
hlt
clc
and
int
arpl
jp
sbb
mov
jmp
xlat
pop
mov
and
fwait
in
pop
or
mov
outsb
and
dec
xor
lret
rorb
insb
stos
and
das
out
test
xchg
jmp
popa
adc
test
sub
sbb
cmpsl
fmuls
cmp
das
inc
pop
out
int
out
mov
not
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
fsubs
xor
add
mov
shlb
jbe
pop
inc
ret
ss
outsb
mov
jmp
inc
adc
sub
ljmp
lret
pop
into
lds
pop
sahf
and
add
stc
lds
and
pusha
sbb
mov
cltd
jle
adc
mov
ret
sqrtps
mov
xor
dec
jb
add
or
lret
ds
push
shrl
lock
mov
mov
mov
int
cld
sbb
mov
jb
mov
enter
xchg
icebp
add
sub
pop
in
fisttpll
adc
sub
sbbb
popa
sbbb
xor
jle
out
ret
jnp
xchg
mov
loopne
and
xor
out
arpl
lcall
imul
add
push
int
jae
dec
jno
pop
lret
xchg
mov
adc
push
incl
jnp
mov
push
stos
movhlps
or
mov
pop
jge
mov
mov
scas
mov
push
scas
add
loope
jae
les
lahf
jecxz
or
hlt
add
outsl
cmp
dec
test
xchg
lock
inc
scas
in
pop
pop
test
push
xor
mov
adc
mov
inc
ret
out
xorb
push
sbb
in
and
aad
mov
jge
add
xchg
pop
aad
enter
xchg
sbb
stos
rorb
int3
lret
sbb
insl
out
lret
push
das
test
into
aas
or
pop
push
mov
out
and
loopne
push
sub
push
lcall
or
fwait
inc
aaa
jns
xor
mov
mov
sbb
imul
or
in
or
inc
xchg
push
lock
push
pop
mov
into
push
push
das
mov
clc
mov
dec
sub
mov
push
dec
mov
fcoms
aam
mov
movsb
pop
dec
dec
gs
cwtl
push
mov
sti
and
xorl
mov
xchg
sti
push
jo
jge
lret
adc
dec
mov
jecxz
xor
and
jp
fisttps
mov
inc
popa
push
mov
bsr
xchg
xlat
xchg
push
pop
mov
adc
sub
loope
xchg
push
loop,pn
adc
push
push
das
add
cmpsb
loope
out
lock
jge
mov
dec
ja
int3
cld
mov
dec
sub
and
dec
lds
mov
mov
push
ljmp
inc
sub
mov
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
push
push
jle
test
sbb
adc
sbb
idiv
or
mov
negl
xchg
sub
jne
nop
add
aaa
bound
in
in
sbb
mov
and
movsb
leave
stos
mov
mov
add
jl
loopne
rcl
dec
sbb
cmp
pop
sbb
mov
push
mov
xor
lods
shlb
push
push
mov
mov
push
out
or
test
cli
and
ljmp
in
bound
or
sub
pop
xor
ljmp
sbb
ret
jbe
icebp
lods
mov
ss
lret
js
vshufps
mov
out
or
test
cmp
les
sarl
jno
rorb
loope
scas
hlt
inc
lahf
cli
loope
push
fs
call
lahf
pop
rorb
mov
mov
adc
jg
adc
std
jbe
inc
sbb
out
and
push
push
mov
cmpsl
cwtl
inc
jne
push
push
out
ljmp
ljmp
adc
sub
xor
jecxz
sub
cwtl
lock
dec
loope
fcompl
sbbb
mov
pushf
stos
imull
in
jg
or
loope
rcrl
xor
jmp
pop
xchg
imul
sbb
aad
sub
lock
sub
or
sub
or
arpl
fmull
mov
xchg
lods
jns
dec
mov
out
cmpsb
es
mov
mov
xor
cwtl
orb
or
dec
mov
in
pop
inc
loope
in
in
ds
insl
jae
jp
pop
loope
jno
jae
jge
sbb
stos
and
movsl
nop
aas
xor
xchg
mov
dec
and
sbb
insb
mov
mov
gs
or
inc
in
jecxz
add
iret
push
fcompl
loope
push
mov
cmp
loope
rcr
out
lahf
and
out
and
cli
pusha
ljmp
iret
enter
ss
cmp
inc
pop
lret
push
icebp
mov
cvtpi2ps
ret
dec
mov
fadds
jle
daa
test
jno
jg
int3
movsl
mov
aad
xchg
jg
cmp
int
rcll
test
cmp
jae
and
sub
pop
sbb
je
mov
shll
fldl
sub
jge
mov
enter
jbe
xchg
stc
dec
aad
or
popa
gs
rcll
jl
popf
popf
push
pop
popf
andb
and
stc
aaa
push
aaa
push
push
mov
divl
je
lcall
shll
loopne
pop
out
xchg
add
andl
inc
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
push
jg
sbb
adc
sbb
xchg
es
mov
push
icebp
cltd
push
pop
stos
stos
std
sbb
popa
lcall
and
mov
mov
icebp
out
pop
pop
inc
outsb
lods
mov
mov
lods
mov
rcl
ret
loope
sbb
lea
or
test
in
sub
mov
mov
pop
and
scas
lods
xor
dec
ljmp
or
pop
mov
cmp
pop
scas
cmp
stc
ficoms
fmull
cmp
std
inc
jb
test
push
or
cmp
pop
stos
dec
fcomp
mov
mov
adc
mov
cld
pop
scas
lcall
push
lds
andb
movsl
xchg
cmp
lret
mov
jne
neg
push
cmp
and
sti
jle
push
dec
ret
das
int
jae
xor
mov
cmp
mov
int
into
outsl
push
sub
push
movsb
shr
outsb
aam
movsb
xchg
scas
add
mov
mov
mov
in
aaa
fwait
push
add
cmp
add
xor
jb
into
inc
push
imul
xlat
push
push
xchg
loope
call
out
clc
cltd
shlb
fstpt
test
jp
jo
ret
pop
jle
xlat
sbb
xchg
mov
mov
movsl
mov
push
in
sbb
sub
je
mov
int
shll
sti
push
popl
pop
sub
data16
std
aaa
dec
mov
aas
sub
je
dec
xchg
or
cmp
stos
aad
cmp
dec
add
adc
stos
sbb
xor
xor
out
dec
sbb
adcb
cwtl
dec
sub
inc
push
out
cld
movsl
jecxz
and
mov
repz
stc
sahf
imull
sub
pop
jno
cld
push
insb
in
push
loopne
or
mov
and
mov
cmpsb
mov
jg
loopne
adc
push
sbb
and
stos
inc
sahf
cmp
sahf
adc
lret
jae
adc
push
mov
sbb
in
imul
or
mov
bnd
mov
push
outsb
dec
ljmp
lcall
inc
aaa
mov
shrl
jns
inc
dec
enter
int3
lods
dec
sub
loopne
pop
mov
scas
add
cmp
testl
mov
and
adc
inc
push
xchg
mov
andb
inc
xchg
cld
mov
aas
pop
jnp
mov
mov
sub
push
or
ds
cmp
jb
or
or
inc
imul
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
outsl
sub
sbb
adc
sbb
xchg
xchg
lds
mov
ja
sbbl
fwait
jp
sub
pop
inc
or
andl
dec
xchg
push
mov
scas
push
out
int3
mov
push
sub
js
and
lds
sti
cs
push
fstl
in
dec
pop
and
sub
out
mov
cmp
jbe
test
enter
xchg
lret
mov
cld
lret
fs
mov
mov
stos
js
or
stos
push
out
lret
pop
mov
xchg
imul
mov
inc
insb
scas
jmp
sti
divb
or
sub
xor
add
pop
stc
std
pop
and
push
scas
adc
sub
pop
scas
inc
xor
sub
ror
lret
test
das
dec
clc
adc
inc
xor
movsl
cwtl
xchg
insb
push
jecxz
add
lahf
in
iret
cltd
dec
jp
loop
dec
scas
pop
or
ret
xor
dec
lret
pop
nop
adc
out
sti
or
pop
sub
xchg
lahf
scas
vmread
dec
fcmovbe
out
add
lock
fstpt
fdivp
test
les
push
pmaxub
cmp
xor
fwait
push
jle
lcall
push
jge
xchg
add
orb
rol
int
gs
sbb
xchg
add
rcrb
adc
and
adc
xchg
push
jbe
add
lret
arpl
push
decl
push
lods
jb
cmc
push
testl
mov
dec
adc
xor
xchg
pop
push
mov
ds
sbb
cmpsl
mov
sbb
inc
cwtl
cs
dec
sub
repnz
lret
adc
dec
cmp
aaa
dec
cmp
stos
scas
movsl
mov
and
out
shr
lret
sbb
ret
sub
cmc
mov
into
or
adc
push
fwait
and
mov
out
xchg
and
cmp
push
lea
mov
cld
lods
outsl
idivb
sbb
push
fists
add
je
dec
cmp
sbb
repz
adc
gs
cwtl
add
mov
push
push
shlb
mov
fldcw
test
idiv
lret
mov
in
cs
dec
sbb
mull
pop
insl
int
cmp
hlt
int
testl
sbbb
inc
arpl
ds
fucomp
xor
bswap
gs
movsl
dec
mov
popa
mov
xchg
mov
lret
inc
add
pop
das
mov
fs
sbbl
fs
adc
and
loope
addr16
aas
and
cmp
or
inc
bound
mov
push
in
lods
sbb
fsubr
clc
jns
les
nop
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
cmp
jo
or
xor
inc
sbb
enter
dec
mov
outsl
les
inc
enter
loope
mov
adc
cmp
imul
jge
loope
sbb
pop
inc
movsl
sbb
pop
fsubrp
jns
in
add
and
mov
mov
ret
loopne
mov
int
out
sysenter
or
jns
cmp
icebp
orl
iret
inc
sub
divb
repnz
mov
nop
xchg
mov
and
fistl
fwait
jg
sub
xchg
gs
dec
mov
gs
inc
sbb
cs
ret
adc
cltd
mov
pop
push
mov
out
lea
cmp
xchg
es
mov
xor
xor
popa
lock
repz
roll
pop
scas
xor
ds
stc
outsb
pop
into
jecxz
insb
and
inc
filds
dec
pop
mov
les
inc
mov
adc
and
dec
popa
inc
fisttpll
movsb
outsl
adc
push
add
jo
lret
lock
cmp
call
ja
xor
stc
mov
outsl
add
xchg
in
mov
lret
cmc
inc
and
lret
das
xchg
jp
out
js
or
in
enter
sbb
notb
jge
je
xor
cld
adc
stos
testb
xchg
push
push
nop
mov
push
lods
or
mov
lods
or
sbb
cmpl
or
xor
lcall
pop
push
adc
lea
aad
ljmp
movb
jo
mov
insb
mov
pusha
jp
jmp
or
icebp
out
push
mov
xor
sub
add
inc
incb
mov
push
and
push
jmp
dec
xor
or
das
sbb
pusha
xor
popl
mov
insl
out
dec
ljmp
jne
scas
rclb
or
inc
in
xchg
cmpsb
mov
inc
sarl
insb
lods
mov
imull
mov
in
in
sbb
sbb
jecxz
xchg
cmp
aas
test
movsb
pmulhw
and
js
pop
ret
jns
xor
ret
xchg
stc
push
push
cmc
sub
sbb
popa
xlat
leave
add
cmpsl
test
cli
jp
test
leave
ret
ja
aad
sbb
inc
pop
xor
sbb
mov
mov
icebp
in
jbe
out
adc
mov
mov
xorb
call
test
repz
lcall
call
mov
push
lahf
xchg
jne
cld
jp
adc
and
out
fmull
icebp
cmc
int
sti
mov
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
pop
mov
sbb
and
sbb
rcr
cmpsb
cmpsl
pop
dec
shrl
das
repnz
insl
jbe
jns
clc
aad
gs
xchg
lret
jmp
jb
and
add
popa
stc
sub
pop
notl
ret
jp
cmpsb
lods
xchg
mov
sub
nop
cmpsl
lret
mov
out
push
or
std
test
mov
stos
in
xor
xchg
mov
push
lcall
jbe
in
push
push
shrl
popf
scas
jbe
jb
sbb
std
xchg
jb
movsl
repnz
sbb
scas
out
into
xchg
cmc
mov
ja
adc
xor
pop
and
sbb
mov
cld
cld
sti
leave
loope
frstor
imul
test
push
sub
mov
sbb
cld
lret
pushf
pop
cmp
bound
shll
mov
enter
mov
mov
or
push
mov
cmpsb
cli
xor
adc
ja
int3
cmp
daa
arpl
cwtl
and
add
inc
xchg
roll
fs
mov
xchg
or
daa
in
imul
decb
fidivrs
mov
cs
es
cmp
repz
sub
xchg
add
ficoml
jo
mov
dec
das
sbb
out
iret
sti
scas
lahf
mov
or
test
jl
jle
xchg
stos
out
xchg
fwait
dec
jle
push
clc
pop
fisubrl
das
loop
sub
dec
add
jae
jle
lahf
imul
add
fmull
or
push
sbb
mov
jle
lds
loop
or
jmp
nop
ss
es
loopne
or
cmp
int3
sub
outsb
repz
loope
jbe
sbb
arpl
mov
mov
ret
pop
mov
push
int
cmp
test
pop
mov
push
lods
xor
mov
jecxz
das
lahf
fnsave
mov
stos
nop
or
es
stc
clc
dec
jge
les
or
sub
push
sarl
sbb
push
fisubs
sub
push
mov
mov
imul
xchg
je
mov
push
nop
lcall
mov
cmp
adc
lcall
shlb
sub
shll
jb
iret
movsb
xor
sub
loope
icebp
dec
fstl
lds
xchg
mov
out
cltd
xchg
cmpsb
insl
mov
fs
outsb
call
cmp
and
mov
cmp
mov
xor
jp
movsl
mov
ficomps
imul
adc
dec
ffreep
in
pop
mov
mov
mov
pop
repz
mov
xchg
push
insl
mov
daa
pop
mov
dec
mov
pusha
shrd
shr
shr
jmp
and
push
sbb
push
add
sbb
adc
sbb
mov
jge
mov
stc
cmp
jnp
in
into
icebp
cwtl
fists
popf
movsb
cmp
inc
push
dec
inc
les
fstpt
imul
xchg
inc
xchg
imul
cwtl
movsb
pop
mov
mov
mov
lcall
rolb
lcall
call
sbb
cmp
mov
or
cmpsl
lret
loope
fnstsw
icebp
xor
mov
and
mov
push
xchg
pop
lcall
notb
fidivrl
push
add
sbb
and
inc
cmp
and
rcrl
mov
nop
pushf
out
push
negl
xor
add
pop
cmpb
mov
sub
inc
push
xchg
jae
call
fistl
mov
lret
repz
call
gs
add
mov
loop
movb
pavgb
out
add
and
lahf
sub
cs
in
clc
lret
and
mov
mov
aas
pop
testl
cmpb
xor
ds
jge
clc
mov
lds
pop
aaa
into
mov
lods
movsb
push
sbb
dec
sub
sahf
test
aam
std
sub
int3
lahf
pop
int
loop
ja
sub
mov
sub
jle
stos
or
daa
inc
and
nop
jmp
jmp
dec
ja
call
jge
cmp
test
cmp
leave
sub
jl
and
jnp
ljmp
jae
mov
pusha
pop
or
std
ficoms
pop
lods
pop
and
sub
int3
lahf
push
aaa
jge
push
inc
leave
aam
mov
pop
jns
push
xor
fwait
mov
mov
mov
std
fnstsw
cmpsl
mov
lret
xor
arpl
mov
pop
xchg
push
mov
push
dec
inc
out
sub
or
add
ljmp
cmp
sbb
dec
in
dec
push
clc
loop
mov
test
push
jg
push
cmp
push
adc
je
andl
mov
xchg
mov
cmp
pusha
push
out
add
xchg
iret
and
pop
mov
and
pop
lods
mov
cmpsl
add
mov
fstpt
or
jnp
jle
xor
jp
fadds
aas
test
fwait
sarl
jecxz
mov
in
add
cmc
mov
call
mov
pop
testl
ret
push
sbb
cmp
inc
out
push
lret
and
and
mov
add
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
mov
adc
sbb
adc
sbb
sub
xlat
push
jnp
fiaddl
rcrl
push
xlat
inc
movsb
fsubs
mov
inc
push
pop
sub
jmp
push
push
jae
xor
in
lret
sti
fsubrs
test
mov
sahf
sbb
hlt
dec
xor
mov
lahf
inc
sub
mov
lds
inc
insb
into
sbb
dec
hlt
out
sahf
mov
sbb
mov
notb
stc
xor
sbb
push
or
lea
dec
jle
test
jae
jno
jmp
cmp
push
cmp
dec
test
scas
jbe
mov
adcb
rorl
cmp
or
insb
add
mov
inc
add
push
stos
movsl
les
mov
sbb
cmc
das
insb
insb
push
mov
out
fcoms
jecxz
out
inc
push
hlt
sbb
leave
out
aad
push
ret
ja
dec
aaa
mov
dec
and
and
mov
lret
push
jnp
mov
mov
jo
in
xchg
add
adc
add
mov
jae
pusha
subb
iret
xor
fwait
cmp
inc
inc
inc
adc
push
jb
mov
adc
jle
sbb
jb
and
mov
xchg
or
cmp
stos
stos
dec
cld
test
mov
stc
cmpsl
sbb
lea
cwtl
cmpsl
adc
lret
mov
mov
sub
add
je
iret
ljmp
pop
mov
arpl
ret
push
mov
ret
clc
shlb
mov
movsb
mov
popfw
push
adc
movsl
mov
leave
mov
in
out
mov
xor
inc
ja
dec
insb
cld
mov
mov
mov
test
cmp
int3
mov
pop
mov
push
sbb
ret
xor
lods
xor
pusha
lods
fmull
cmpsb
out
out
arpl
out
jnp
ja
mov
and
and
push
xchg
sbb
inc
movsb
andb
mov
into
enter
jmp
movsl
push
js
ja
sahf
pop
push
loope
push
inc
test
adc
mov
lock
das
xor
arpl
add
sub
popa
iret
lcall
pop
jbe
cmp
push
mov
mov
lods
push
cli
sbb
mov
and
push
jmp
arpl
sahf
fisttpll
out
inc
pop
jns
push
fwait
sub
mov
nop
ljmp
pop
fsubrp
dec
cmp
dec
bound
adc
arpl
int3
add
lock
adc
out
enter
xor
int3
in
add
push
out
pushf
xchg
std
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
jp
jo
pop
sbb
and
sbb
fsubrs
cs
aas
frstor
mov
pushf
cmp
pop
aas
push
adc
push
enter
inc
mov
fldenv
popf
inc
jae
and
jns
sub
lea
mov
sbb
jns
in
dec
insl
pop
adc
and
dec
das
idivb
repnz
mov
call
add
inc
push
pop
mov
cmp
sbb
ficompl
adc
sub
dec
push
fldenv
data16
dec
sub
and
sbb
jge
pop
out
call
inc
push
mov
notb
sahf
jle
loope
push
lods
stos
jp
mov
hlt
mov
push
pop
adc
scas
inc
jl
jecxz
push
sub
lods
ror
rcrl
sbb
insl
mov
in
sti
mov
loopne
scas
movb
mov
mov
inc
ja
outsb
mov
movb
mov
or
nop
inc
or
mov
aas
pop
push
sbb
cmpsb
sub
push
cwtl
cmp
xchg
xor
adc
das
adc
and
iret
popf
mov
xor
test
loope
in
pop
mov
stos
jo
xor
mov
push
jne
mov
into
es
cmp
pop
shr
or
adc
push
ss
push
xlat
pop
lods
xor
mov
push
stos
fs
mov
fildl
insb
mov
dec
cli
mov
fcmove
icebp
xchg
jbe
out
mov
mov
in
repnz
mov
mov
setns
xor
ss
push
dec
ret
nop
std
aas
dec
insb
push
femms
cmpsl
sbb
pushf
int
shl
add
xor
bound
fidivl
mov
xchg
jmp
ljmp
ja
pop
pop
xor
sub
aas
mov
lcall
jae
jno
shlb
xor
jge
ss
rcll
outsb
adc
jp
adc
sub
orb
cmp
and
xlat
xor
dec
adc
shr
shll
mov
insl
sti
sbb
xchg
xor
fimuls
pop
cmp
and
ds
add
jg
js
movsl
or
in
push
rcrl
gs
mov
push
cmpsb
aam
movsb
xchg
mov
orl
jl
push
pop
inc
push
in
pop
sbb
ret
shll
lret
dec
mov
jb
aam
sti
mov
lock
or
bnd
push
mov
mov
jns
repz
dec
xor
out
cmp
in
add
adc
adc
js
ljmp
pushf
sbbb
xor
je
dec
add
mov
add
inc
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
mov
outsl
xchg
into
sti
sbb
call
jne
sub
jbe
fstps
and
out
push
es
mov
lods
addb
adcb
xor
mov
or
cmpsb
ss
sub
shrl
xchg
rcrb
das
pop
cltd
push
sbb
cmp
orb
mov
dec
jecxz
fldt
roll
pop
imul
ss
jge
pop
jne
test
and
xchg
inc
je
jno
iret
cmp
inc
popa
mov
push
ret
sbb
fidivl
and
inc
and
xlat
add
dec
push
vpand
and
ja
or
lock
or
mov
and
push
add
xchg
sahf
add
addb
or
mov
xchg
cmp
test
les
cmp
scas
or
jne
mul
inc
stos
or
push
jecxz
adc
addr16
ja
cltd
dec
mov
mov
xorl
bound
stc
cltd
test
xor
mov
inc
mov
cmpsb
inc
mov
sbb
pop
fcoml
xor
cltd
xor
mov
push
xor
pop
xor
xor
enter
jns
out
sbb
shrb
lock
mov
rcrl
lods
xor
add
adc
movl
cld
fsubl
ss
push
xor
dec
or
xchg
lock
cld
out
or
mov
push
inc
sub
mov
cmpsl
mov
inc
sbb
sti
ret
add
bnd
das
in
outsl
mov
out
rcr
mov
or
add
mov
test
inc
aas
cmc
popf
push
dec
push
mov
pushf
test
or
negb
cmc
dec
xor
cmp
push
and
jae
push
adc
mov
loopne
xchg
pop
push
add
repnz
mov
sbb
jns
push
in
mov
jecxz
inc
in
outsb
mov
sbb
jno
lahf
in
sar
ss
andl
data16
ret
mov
and
mulb
pop
mov
lock
sti
jge
arpl
scas
mov
xchg
dec
xorl
cmp
and
fnstenv
sub
sub
xchg
push
mov
je
jmp
mov
sub
xchg
mov
lods
sbb
lahf
sarl
fcmovu
decb
leave
imul
leave
mov
scas
mov
push
dec
cs
je
adc
scas
sbb
xchg
dec
movsb
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
lret
adc
mov
or
push
xor
arpl
or
mov
sahf
jo
cltd
push
cmpsb
inc
push
mov
xor
loope
xor
fadd
out
psrlw
adc
dec
xor
xchg
xchg
or
xlat
ficompl
push
and
rcll
in
call
adc
lcall
and
out
cwtl
iret
aad
cmp
mov
jmp
into
sbb
and
mov
sub
loopne
sbb
in
add
test
cmp
mov
nop
sub
in
push
enter
dec
add
pushf
scas
pusha
mov
out
mov
inc
cmp
movsb
jp
inc
lea
xor
pushf
ljmp
push
aas
mov
and
sub
fs
push
loop
add
xor
xchg
pop
cmp
je
cmp
fcmovnu
sti
sbbb
mov
negb
cmpsb
and
cmp
stos
ljmp
fisttps
movsb
cmp
test
std
push
pop
ret
loope
mov
cld
lahf
jb
mov
test
push
and
push
jns
cs
out
testl
popa
div
insb
sbb
ret
test
sbb
push
cmp
add
hlt
pop
cmp
daa
and
xchg
jp
daa
cmp
add
inc
adc
stos
cmovge
push
popa
push
push
fisttps
sarb
mov
or
out
push
push
push
inc
mov
and
cmp
addr16
cltd
jl
jae
fadd
mov
pop
lret
inc
ds
dec
shl
shlb
dec
sahf
es
fisubrl
lahf
mov
fdivrs
dec
jge
xchg
xlat
sub
sbb
push
in
push
cmp
imull
in
dec
jo
in
sub
outsb
jle
add
cmp
push
push
xchg
js
mov
mov
cmp
or
cmp
push
bound
in
scas
div
xchg
xor
jmp
cmp
fwait
mov
mov
scas
push
adc
dec
lahf
inc
call
loope
or
add
or
push
sarl
adc
add
fnstcw
mov
in
shlb
data16
pop
pushf
xchg
mov
test
xor
pop
jbe
repnz
adc
aam
stos
pop
or
mov
dec
mov
push
jle
ljmp
add
cmp
enter
cltd
or
sub
jns
or
inc
mov
cs
push
loopne
fidivrl
call
push
std
pop
add
test
xchg
cmc
jge
dec
pop
mov
push
jmp
jns
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
filds
xor
sbb
adc
sbb
inc
mov
sarb
ljmp
out
xchg
sahf
cmp
jbe
in
sbb
lea
lds
jecxz
xor
popf
and
sub
loope
mov
rcll
and
bound
mov
push
testl
cmpb
xchg
pop
mov
mov
jl
insb
dec
or
jmp
hlt
and
test
xchg
push
xchg
test
or
xor
ljmp
mov
mov
pusha
cmpsb
add
fbstp
rcrl
mov
mov
fidivrs
roll
xchg
shl
jmp
jnp
lahf
fists
out
shrb
div
scas
cmp
cmp
vxorps
fimull
adc
test
sahf
pushf
fs
std
stc
add
rorb
cmpsl
test
jno
jle
cwtl
and
jp
inc
inc
dec
aam
fnop
add
add
xchg
aam
flds
push
push
je
dec
aad
ret
aam
data16
js
or
repz
mov
repnz
cmp
mov
cmpsb
out
pusha
push
and
loopne
lret
adc
cli
mov
nop
adc
mov
or
sub
sbb
mov
dec
mov
inc
lds
pop
pop
push
mov
xchg
add
xchg
and
stos
lret
xchg
les
fs
lret
or
sbb
stos
out
mov
pop
sbb
sub
mov
sub
jae
sbb
and
js
outsb
xchg
or
pop
pop
pop
test
push
mov
inc
cltd
les
jg
dec
adc
pop
gs
mov
or
js
stc
add
jle
rcll
push
movsl
repz
ss
mov
daa
fcom
cmp
cwtl
and
xor
mov
in
aam
dec
ret
mov
mov
int3
testb
or
mov
lcall
stos
cmpl
fsubrl
add
rorl
push
repnz
neg
xchg
add
mov
pop
ss
xchg
adc
subl
inc
pop
and
movsl
pop
faddl
inc
pop
shlb
addr16
xchg
icebp
or
xchg
or
inc
cmp
mov
test
in
lret
imul
into
pushf
xor
xchg
sub
in
movsb
test
loopne
or
cmp
push
mov
sub
mov
push
inc
inc
and
fbld
mov
inc
lret
sbb
cmp
push
xor
fwait
in
not
sbb
imulb
push
inc
jae
scas
fdivl
push
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
fwait
dec
xchg
mov
add
sbb
jns
cli
fisttps
fcmovb
scas
or
lea
int
jbe
insb
pop
inc
mov
sub
cld
shlb
rcl
shl
and
or
loop
repz
pop
mov
cltd
std
xchg
mov
inc
pushf
sub
pop
psrad
mull
add
lods
ficompl
or
fld
nop
xlat
fs
sahf
rdrand
out
or
enter
xchg
push
pop
adc
push
jns
mov
cmpl
mov
into
mov
push
add
notl
and
push
xor
mov
pop
dec
mov
ret
outsl
xor
or
movzbl
bound
or
ret
lcall
inc
push
fimuls
xor
cs
cld
mov
pop
jle
scas
pop
jl
push
jne
sub
and
outsl
lea
mov
rcl
mov
xchg
mov
push
lods
ror
adc
add
jle
rcll
xor
stc
adc
cs
rcll
sub
pop
lods
je
cmpsb
lcall
test
stc
out
jae
arpl
cli
fsubp
pop
xchg
fidivs
pop
imul
xor
dec
or
into
cltd
sbb
mov
jp
mov
pop
jno
inc
fdivrl
enter
cld
push
pop
jns
jb
repz
pop
test
push
jmp
fiaddl
lcall
insb
out
rorl
imul
xor
jae
imul
adc
push
cmp
mov
mov
push
push
inc
clc
cmpsb
hlt
xor
add
aam
rorb
mov
imul
cmp
cwtl
mov
inc
pop
pop
pminub
jecxz
adc
dec
movsb
mov
push
xchg
sub
ja
insb
out
sbb
jmp
cli
les
jno
mov
pop
imul
call
stos
pop
inc
scas
dec
push
or
push
fldenv
jae
arpl
out
addb
add
fistpl
aaa
jle
negb
jge
in
dec
lcall
lcall
fbld
popa
push
popf
adc
sub
clc
push
insl
adc
mov
push
jle
adc
and
mov
lahf
jne
stos
and
push
cmp
arpl
xchg
inc
jmp
std
push
cld
dec
push
aas
mov
mov
insl
xchg
stos
aas
std
sbb
lock
scas
les
ja
shlb
sub
lock
xor
fmuls
dec
icebp
mov
jmp
scas
dec
cmc
sti
outsb
in
subb
sti
dec
sahf
pop
push
jnp
test
lods
and
out
in
sub
pop
in
cld
cs
rorl
aam
inc
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
xor
xchg
mov
add
sbb
push
testb
push
pop
gs
aas
movsl
push
ror
mov
mov
sub
mov
lret
mov
xchg
ret
das
jmp
gs
int3
and
and
xchg
push
inc
jbe
pop
repnz
add
je
adc
lcall
jnp
dec
aam
lcall
xlat
push
cmp
call
dec
das
pop
mov
mov
or
stos
scas
jp
push
add
adc
jmp
lahf
jnp
pop
lret
bound
insl
jb
movsb
push
into
rcrb
movsb
repnz
mov
or
mov
sbb
add
daa
adc
out
sar
test
adc
std
and
cmp
xor
jle
jl
movsl
or
pop
data16
shr
sbb
jle,pt
add
xchg
clc
aad
insb
int
mov
sbb
scas
mov
fcomip
mov
outsb
dec
adc
xor
mov
aaa
out
test
in
sti
mov
inc
mov
pop
push
cli
cmp
icebp
xchg
push
daa
insl
jmp
cmc
shrl
cmp
jno
sti
rolb
pop
dec
in
repz
repz
add
mov
inc
xor
out
mov
and
insb
jbe
xchg
add
pop
cld
push
push
cmp
pop
jno
xor
lea
xchg
dec
fidivs
sbb
mov
xchg
int3
mov
mov
pop
ds
dec
xor
sahf
adc
pop
ljmp
jbe
cmpsl
inc
adc
rcrl
pop
scas
add
xor
aam
aad
mov
cltd
insb
mov
cmp
std
and
in
sbb
jmp
outsl
int
jg
int
jbe
jmp
dec
fnsave
cs
enter
or
inc
and
lds
mov
imul
fbstp
je
faddl
data16
out
push
fstpl
popf
popf
loopne
loope
add
jle
popl
xchg
mov
sahf
or
inc
mov
ret
insl
loope
jno
rcrl
mov
push
push
daa
fiaddl
dec
sub
lds
cwtl
pushf
and
mov
inc
or
push
shll
sbb
imul
inc
sbb
and
mov
inc
aas
mov
mov
jns
rcl
mov
cmpl
jb
aaa
hlt
xor
leave
or
adc
lret
mov
push
jg
pop
lds
leave
or
jge
pop
outsb
adc
shrl
pop
shrb
mov
cmc
nop
xor
inc
push
pop
pop
iret
jne
hlt
nop
jno
pop
das
loop
dec
mov
dec
or
test
jge
add
inc
add
dec
bound
loopne
push
addb
leave
push
and
ja
cmp
mov
xchg
adc
stos
xchg
adc
mov
stos
out
hlt
jnp
sbb
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
loope
jo
aaa
sbb
add
sbb
inc
inc
in
lock
dec
dec
jnp
mov
xor
push
fnstenv
xchg
sub
or
scas
pusha
jle
dec
xchg
xor
jg
out
ds
mov
test
mov
inc
sub
mov
push
cmp
xchg
fwait
mov
out
jmp
aas
mov
or
flds
ret
sub
out
mov
nop
xchg
sbb
push
and
test
xchg
xor
mov
cmpsl
lret
and
ljmp
shll
cvttps2pi
lods
or
jo
stos
xor
roll
sarl
mov
jmp
add
sub
mov
imul
outsl
inc
push
sub
int3
inc
out
scas
data16
sahf
mov
jae
out
lea
repnz
adcb
out
mov
mov
add
lahf
jl
jo
in
xlat
cwtl
out
mov
gs
cmp
test
push
mov
out
outsb
test
mov
in
sub
cmp
mov
cmpsl
enter
push
outsb
mov
movsl
cmp
cmp
dec
ret
xlat
jp
and
fistl
pop
movsl
cltd
addl
push
ficoml
ret
cmp
jns
fwait
inc
jmp
cmpb
std
pop
jl
xchg
or
mov
xchg
jbe
int
dec
fisubrl
das
lret
out
mov
pushfw
push
lods
xchg
xor
dec
push
ficomps
fstps
jge
lods
sub
cmp
nop
pop
insl
jnp
jb
shll
push
shlb
or
pop
adc
loope
push
cmpsb
cmc
jb
mov
sbb
daa
mov
or
lcall
cmp
in
int3
outsl
fildl
add
jns
and
pop
aaa
dec
dec
aad
int3
cmp
xchg
pushf
push
or
pop
in
aas
mov
scas
iret
pop
loopne
idiv
mov
daa
pop
lret
loopne
mov
leave
mov
adc
push
ljmp
xchg
int3
cltd
pop
cmp
bound
pop
push
xor
push
mov
mov
into
sahf
mov
or
xchg
jbe
mov
push
fistl
pop
cmp
shl
gs
in
push
data16
cmp
in
jg
cmpsb
xchg
add
xor
adc
adc
mov
pushf
push
or
ds
push
or
add
pop
xchg
jmp
mov
sahf
int
xchg
movsb
sbb
popf
iret
enter
dec
cltd
filds
inc
insl
cmp
repz
mov
sub
cld
dec
int
insl
add
push
mov
push
lret
add
test
pop
lret
je
cmpsl
jecxz
push
add
cmp
imul
int
imul
sahf
or
fcoml
pop
cmpsb
addr16
aad
das
scas
movsl
cmp
in
mov
pop
mov
push
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
lds
sbb
add
sbb
mov
loopne
dec
pushf
jnp
inc
dec
mov
ret
xor
out
inc
in
cltd
nop
pop
mov
cmp
jle
xor
mov
dec
stc
dec
mov
icebp
push
and
std
mov
xlat
ss
cs
or
shlb
push
imul
addr16
jnp
jbe
inc
adc
pop
sti
inc
inc
mov
popf
mov
pop
inc
stc
int
or
pop
jb
outsl
js
and
jo
repz
lcall
pop
orl
clc
aas
cwtl
add
es
push
inc
and
sbb
xchg
mov
aaa
arpl
fisubs
jb
add
cmp
xchg
lds
jp
rcll
cmp
mov
scas
mov
mov
shll
cmpb
push
sub
loop
sarb
out
imul
cwtl
mov
xchg
arpl
fs
jae
mov
mov
rcrl
lea
sbb
push
call
mov
or
cmc
pop
mov
push
imul
jne
loope
jbe
jmp
mov
subl
loopne
jge
movsl
shll
inc
and
shlb
cmp
sub
mov
loope
push
mov
rcrl
in
je
sbb
ficoms
xor
in
inc
cmpsb
popa
pop
fwait
mov
cmp
testl
lahf
mov
mov
jnp
add
ds
outsb
rclb
add
js
inc
imul
adc
shll
jl
sub
sbb
mov
test
push
into
push
inc
cld
mov
sbb
mov
adc
shl
ja
das
mov
punpcklwd
inc
pop
push
push
lret
jge
insb
out
aaa
leave
dec
xchg
sbb
pop
mov
xlat
inc
sti
sti
ret
outsb
add
hlt
sbb
mov
push
test
jmp
push
lcall
dec
add
imul
jecxz
pop
push
ror
xchg
shr
push
insb
adc
mov
cmpsl
aam
stos
sub
push
xchg
in
outsb
fsincos
jle
push
pop
push
popfw
shrb
popa
es
push
pop
shll
mov
push
in
outsb
cmp
test
imul
mov
pushf
mov
adc
sbb
adc
pop
inc
mov
mov
cmp
dec
les
ja
xchg
rcrl
in
push
lret
mov
cli
jne
loop
test
jmp
and
js
fld
adc
mov
lcall
insl
es
mov
push
fistpl
sbbl
mov
repnz
or
test
xor
cli
fbstp
jg
or
stos
ds
adcl
jae
jle
mov
push
xor
sub
call
pusha
jp
push
lock
jl
add
sub
add
add
push
sbb
ja
sarl
mov
adc
sbb
les
inc
mov
xchg
out
push
sub
mov
scas
xchg
xchg
insl
xor
fiaddl
adc
sub
rcrb
test
inc
jle
sub
shll
pop
aaa
outsl
xchg
push
ds
jo
or
sub
inc
jecxz
fdivr
fisttps
filds
gs
pop
pop
cmpsb
inc
push
dec
xor
test
xor
push
add
xchg
stos
cmp
lret
mov
negb
icebp
jno
es
or
push
dec
fidivl
div
popa
sahf
fs
lods
imul
fmul
test
arpl
aas
test
push
or
and
mov
fwait
xchg
in
fbld
inc
inc
out
paddd
movsl
sub
imul
xchg
dec
and
fsubrs
fistps
rcrb
arpl
sub
add
dec
stos
in
out
shl
push
popf
sub
sub
push
scas
or
cwtl
jae
scas
or
stc
fbstp
inc
jnp
add
ret
mov
js
sub
aad
rorl
adc
mov
push
shll
jno
xor
xchg
insl
cltd
lods
cmc
popf
cmc
scas
xorb
jne
outsb
inc
mov
xchg
dec
jb
add
jne
adc
test
jns
fnstsw
mov
and
inc
bound
cmpsl
and
jnp
cmp
imul
lods
sar
inc
adc
xor
sbb
mov
ja
push
xchg
loopne
nop
lret
js
stos
jp
stos
std
test
ss
cmp
pop
cltd
out
cld
sbb
pop
cmp
adc
negl
jb
or
inc
cmp
add
jecxz
sbb
lock
out
cwtl
jge
sub
mov
inc
cmp
and
pushf
push
jno
jbe
sub
mov
sub
add
or
inc
xor
in
pop
call
sub
mov
in
xchg
pop
and
mov
int3
mov
insl
stos
lods
cwtl
enter
addb
xchg
jb
jle
cmpl
pop
pop
adc
adc
sarl
inc
push
sbbl
bound
cmp
inc
inc
movsb
push
repnz
cmp
sbb
sub
inc
mov
push
nop
sub
pop
mov
inc
mov
popa
add
mov
fldt
fmuls
push
jle
ret
inc
and
je
mov
mulb
mov
mov
pushf
xlat
arpl
pop
push
imul
inc
icebp
popw
int
hlt
and
xchg
xchg
sbb
out
aam
stc
push
fcoml
mov
jns
sub
cmc
sbb
jle
rcl
js
sbb
lea
repnz
cmp
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
daa
stos
mov
adc
sbb
movsl
push
daa
adc
mov
aam
data16
push
stc
mov
jns
cmpl
push
scas
cmp
pop
cs
movsb
inc
mov
cmp
jno
xchg
xchg
cmpsb
idivb
xchg
jl
andl
mov
insl
pop
xorb
push
cmp
or
mov
bound
hlt
ret
sub
call
fsubrs
popf
outsl
xor
out
jle
fsubrl
gs
or
ljmp
lahf
xor
cmpsb
sub
iret
inc
jno
fisttpll
stos
push
loope
sub
or
adcl
and
inc
int
or
jl
adc
hlt
testl
add
xchg
sbbl
pop
add
or
mov
iret
add
push
jl
scas
sub
xchg
test
jne
and
scas
cwtl
iret
mov
movsl
sar
push
out
aaa
fs
repnz
add
pop
movsb
xchg
add
stc
pop
lahf
xor
cmpsb
iret
psrlw
mov
test
lods
push
aam
shl
inc
ret
mov
mov
paddusb
je
sti
aad
movsb
aad
in
cmc
jmp
dec
add
pop
movsb
sub
dec
mov
iret
sbb
je
in
jmp
insl
cwtl
jl
nop
mov
xchg
nop
adc
cmp
ss
loop
clc
and
stos
jno
iret
add
lret
add
pop
push
mov
sbb
lods
mov
insb
push
cmp
rorb
jl
dec
jecxz
adc
push
and
ljmp
subl
fisubrl
out
pop
and
lahf
push
push
jmp
push
subb
lcall
shl
inc
loop
sbb
pop
dec
mov
lock
insl
lret
mov
mov
lret
jnp
push
jo
dec
jecxz
shll
inc
cmp
out
dec
cmpl
ja
cmpsl
pop
test
add
aaa
sbb
sub
cwtl
mov
xor
outsb
dec
enter
mov
xchg
mov
adc
jnp
adc
adc
ret
ret
adc
insb
out
mov
xchg
aad
out
enter
jge
jg
mov
cmpl
jle
insl
sub
ror
outsb
mov
loope
mov
lods
roll
inc
addr16
gs
cmp
cmp
cld
or
call
cli
mov
mov
popf
pop
lds
push
imul
call
pop
and
push
fcomps
dec
ljmp
out
testl
fnop
testb
add
or
test
adc
int3
sbb
pop
or
or
inc
sbb
popa
lods
cmp
add
les
pop
mov
fnstsw
out
aad
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
int
mov
add
sbb
pop
push
push
filds
pop
jmp
cltd
mov
cmp
ret
jge
push
cmpb
sbb
mov
push
cmp
mov
mov
cmpsl
cmp
ja
push
cmpsl
pusha
mov
imul
in
adc
inc
sbb
leave
cs
subb
cs
movsb
shrb
xchg
pop
inc
sbb
mov
pop
pop
cld
mov
xor
sbb
sar
inc
insb
xchg
jl
sub
sbb
enter
push
outsb
pop
xor
sbb
dec
mov
mov
mov
sbb
pop
adc
inc
mov
mov
aas
jecxz
mov
rolb
jb
or
cmp
pop
sbb
sub
dec
or
mov
int
shll
mov
xchg
fwait
pop
bound
iret
fidivrl
cmp
pop
xor
xor
dec
adc
push
jle
aam
lret
mov
add
aam
cmp
inc
ds
add
inc
fs
shlb
cltd
pop
mov
inc
jnp
fcom
lahf
xor
mov
js
xchg
dec
or
mov
sbb
mov
add
mov
mov
popf
pop
adc
and
repnz
popa
or
dec
nop
sarl
fildll
pop
jno
and
sub
dec
xor
pop
mov
stc
push
lds
jne
shl
mov
hlt
sbb
sahf
mov
add
sti
movsl
loope
subl
jge
dec
xor
mov
test
mov
cs
stos
ret
jle
dec
add
sub
inc
jmp
inc
ds
push
cmp
jmp
push
dec
inc
jo
push
rorl
sbb
or
pop
lods
mov
cs
lds
mov
fldlg2
in
mov
cmpsb
mov
add
hlt
aam
or
mov
or
jp
cmp
push
cwtl
adc
sub
les
insl
test
pop
ficomps
pop
lahf
or
imul
cmc
daa
outsb
cmp
and
test
jno
ljmp
jno
jle
dec
hlt
xor
push
repnz
fs
cmp
std
jp
xor
test
sub
rcrl
in
dec
stc
shlb
ds
cltd
xor
std
pop
shlb
pop
fstl
mov
inc
lods
iret
xchg
pop
cmpsl
es
push
fisubs
jno
cmpl
xchg
adc
fildl
cld
mov
and
adc
or
cmpsl
inc
out
xchg
add
in
xor
dec
js
aas
dec
mov
pop
sbb
inc
sub
outsl
xor
cs
xchg
and
adc
repz
orl
sub
decb
mov
xchg
mov
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
stos
jo
sbb
add
sbb
jmp
inc
fwait
sbb
int
dec
or
pushf
pop
lds
shll
in
or
pop
lcall
hlt
popa
adc
and
mov
adc
pop
mov
leave
loop
cmp
pop
das
xor
inc
cmpsl
pop
pop
push
adc
jmp
lock
xchg
pop
add
jo
adc
cmp
jnp
dec
shll
mov
movsl
and
insl
sar
push
repz
inc
cmpsb
mov
mov
lahf
sub
insb
or
fmuls
pop
js
lods
out
cmp
and
and
aas
mov
mov
arpl
pushf
mov
dec
inc
lret
and
sbb
lods
pushf
fidivs
hlt
jg
pop
sbbb
daa
lcall
nop
aad
xor
xor
push
in
mov
aas
sbb
movsl
mov
push
cmp
stos
mov
pop
imul
push
xchg
jmp
mov
leave
pop
and
fldenv
cwtl
loopne
adc
mov
popl
adc
add
and
dec
insl
sbb
or
dec
inc
lock
pop
and
dec
add
xchg
cmc
aad
cmpsb
push
mov
or
std
sbb
jne
fwait
mov
and
or
inc
lea
xor
jns
in
push
fsubrs
addr16
add
sahf
adc
fs
sti
in
mov
cmp
aaa
out
inc
xchg
jl
bound
jmp
mov
mov
enter
jge
push
movl
adc
clc
leave
hlt
insl
dec
inc
sbb
stos
dec
cmp
cmp
out
test
sbb
xchg
adc
or
jg
jb
add
fbstp
ja
xchg
xor
sub
lock
fisttps
adc
cmp
shl
sti
cltd
xorl
loope
cmp
pop
sub
jecxz
push
repz
stos
imul
imul
jo
sar
or
lret
mov
dec
sbb
repz
shr
push
lds
lahf
mov
cmc
sub
xchg
mov
mov
loopne
xor
inc
adc
add
repz
mov
mov
pop
in
jmp
pop
scas
mov
fsubs
jmp
mov
imul
mov
lret
ds
out
pushf
inc
jecxz
add
loopne
popf
mov
andl
jmp
daa
or
push
xor
lret
loope
cli
stc
sub
lahf
rolb
dec
pop
jnp
push
xor
mov
dec
push
jl
iret
pop
jl
scas
ja
fs
pop
aam
mov
or
repnz
andb
clc
lret
xchg
cld
loopne
cmp
movsb
sbb
pop
insl
or
xor
pop
fs
bt
mov
push
enter
jno
mov
add
add
loop
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
cmp
adc
sbb
adc
sbb
stos
lret
shl
loope
pop
sti
jmp
jns
xchg
adc
mov
cmp
xchg
jns
icebp
add
dec
in
in
push
and
jbe
push
rorl
cmp
push
aam
mov
push
arpl
xchg
xor
cmc
cmpsl
nop
invd
pop
jl
pusha
rcrb
add
lock
dec
mov
cs
xor
push
jb
arpl
sbb
or
xchg
jge
inc
fisubl
ret
stos
clc
mov
xchg
sub
cmpsl
inc
or
cmp
sbb
sub
in
pop
adc
and
pop
adc
addb
gs
mov
mov
int
test
icebp
fsubl
jno
pop
arpl
loopne
in
inc
lods
cmpsb
test
fsubs
add
bound
xchg
push
repnz
mov
out
and
je
jmp
fwait
dec
arpl
fucomp
sarb
pop
push
inc
inc
dec
jecxz
jl
jg
add
shll
or
scas
out
inc
sahf
pop
pop
xor
cmp
ds
inc
pop
or
leave
aas
cld
outsb
pop
movsl
pop
adc
lret
outsb
out
cmp
pushf
add
inc
adc
mov
inc
lret
and
popa
insb
and
fwait
jb
rolb
es
inc
mov
xlat
loope
fmull
stos
fldt
repz
jg
adc
pop
arpl
cs
add
je
outsb
xchg
or
popa
xor
les
cmp
js
outsb
mov
mov
out
push
enter
mov
bound
push
cltd
push
repnz
pop
js
mov
ret
dec
out
shr
int3
xchg
xor
mov
push
inc
inc
rcll
lcall
push
test
stos
mov
push
shr
call
cmc
stc
stos
xor
jne
enter
push
rcll
daa
imul
mov
dec
cmp
je
bswap
dec
jmp
enter
shr
add
arpl
arpl
mov
cmp
xchg
imul
rolb
cmp
out
fwait
mov
nop
cmp
jne
push
add
daa
decb
ljmp
lds
jecxz
icebp
ja
out
insb
jno
mov
pop
aaa
test
push
pop
mov
jp
mov
cmp
ret
shlb
add
cmp
xor
jbe
jle
in
or
push
insl
dec
adc
inc
cmp
mov
push
push
inc
adc
out
ljmp
dec
fcoml
filds
js
fcomp
mov
sahf
in
adc
std
sub
orl
push
xchg
ss
xchg
in
es
jmp
dec
add
rol
adc
mov
loop
scas
adc
xchg
adc
adc
pusha
jo
cmpsl
insb
cmpsb
mov
and
add
inc
fimuls
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
cld
mov
inc
or
sbb
jg
jl
push
mov
dec
mov
xchg
xorb
or
mov
sti
notl
andb
aas
aad
jmp
xchg
clc
push
je
sub
nop
lret
cmpsb
loope
fimull
stc
xor
adc
and
mov
jg
mov
adc
adc
mov
stos
aaa
ss
mov
sbb
add
idivl
in
mov
xchg
cmp
pop
sti
cld
leave
testl
lret
jmp
xor
shrb
popf
xor
out
pop
dec
fwait
push
ret
je
push
pop
movsb
or
stc
cli
mov
call
pop
test
mov
fwait
in
pop
xchg
push
xor
mov
push
scas
xchg
inc
popf
pop
sarb
xor
lock
movsb
das
adc
int3
mov
jl
xchg
test
push
mov
cmp
push
pop
cmc
cltd
pop
jns
daa
inc
xchg
out
xchg
push
mov
mov
sbb
ljmp
inc
sti
insb
dec
adc
adc
push
xrelease
dec
xchg
cmp
iret
js
inc
arpl
ret
xchg
call
loope
jne
adc
es
push
sub
rorb
sbb
gs
in
jne
pusha
mov
vucomisd
test
xor
iret
nop
int
fistl
push
popa
xor
fldenv
insb
scas
repnz
jecxz
or
sbb
adc
in
loope
xchg
arpl
xchg
push
es
icebp
out
cmp
andb
subb
sub
flds
add
pop
fldt
or
push
and
or
jl
imul
dec
inc
lret
mov
jmp
imul
clc
into
mov
es
dec
sub
inc
gs
push
jle
stc
cwtl
cmp
scas
stos
idiv
fs
je
push
insl
test
mov
ja
jl
mov
lock
mov
and
push
loopne
inc
cmpsl
inc
repz
out
inc
inc
mov
lret
pop
pop
fiaddl
lcall
mov
enter
and
xor
fisttpl
add
mov
add
and
and
in
inc
js
aas
mov
sti
mov
loope
add
adc
nop
lret
sbb
sbb
cwtl
xor
scas
push
nop
loope
adc
sub
push
das
popa
imul
jo
adc
cmp
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
pusha
fstpt
pop
sbb
test
sbb
mov
daa
stc
push
sbb
dec
jb
fsubs
xchg
mov
jnp
fidivrs
jne
adc
test
add
cmc
mov
jnp
hlt
loop
add
push
out
mov
nop
inc
sub
and
adc
xorl
ljmp
mov
imul
adc
add
pop
mov
fcmovnb
es
adc
xlat
mov
mov
dec
cmp
inc
and
mov
sub
out
inc
clc
jbe
or
push
push
pop
push
ss
cmc
lds
cmpsl
sub
or
out
in
dec
sbb
mov
sub
mov
sub
adc
mov
cmp
xchg
imul
sahf
sub
pop
stos
imul
cmp
mov
or
dec
jo
or
pop
ret
xor
dec
ss
jbe
or
sbb
xchg
jbe
or
pop
imul
cmp
xchg
int
sti
add
adc
repnz
std
jns
repz
xchg
inc
loopne
jb
and
insb
in
cltd
outsb
stc
adc
test
leave
andl
aad
inc
mov
shrl
cltd
xchg
mov
xor
leave
xor
lock
sub
pop
sbb
adc
mov
pop
mov
pop
cmpsb
pop
push
movsb
mov
push
inc
iret
out
lods
xchg
fwait
orb
int3
inc
loope
jp
lods
push
push
sahf
shll
mov
jo
mov
shlb
ds
stos
jecxz
push
repnz
fadd
cmp
cltd
dec
das
fmuls
cltd
and
sub
add
cmc
mov
xor
lock
jae
fwait
aas
cmp
mov
inc
mov
cmp
adc
shrb
shrl
pop
mov
aaa
sub
arpl
je
arpl
aaa
stos
mov
or
clc
int3
adc
or
pop
popf
xor
cmp
enter
cmpsl
shl
or
jnp
repnz
sbb
or
data16
fcoml
pusha
cmpsb
push
xchg
sub
shll
fisttpll
into
mov
out
push
daa
mov
and
into
sbb
cs
xchg
dec
stos
punpckhdq
fcmovnb
cmpsl
cwtl
lret
xor
xor
cmpsl
outsb
outsb
stos
mov
cltd
iret
stos
inc
stos
stc
sti
movsl
jmp
fcomp
mov
aad
sub
fdiv
cli
std
adc
outsl
mov
lea
roll
inc
adc
push
imul
je
mov
jecxz
std
in
clc
adc
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
add
sbb
test
sbb
mov
or
test
shlb
dec
movsb
lock
sarb
flds
nop
test
dec
out
iret
aas
inc
xor
test
xor
loop
aas
cmp
clc
enter
mov
cmp
aas
sub
dec
dec
repnz
iret
cltd
sahf
jns
sbb
movsb
and
dec
aaa
insb
icebp
in
std
cwtl
cld
lret
cwtl
xor
mov
pop
pushf
jne
jge
movsb
and
mov
xchg
loopne
subb
or
jae
sub
cs
lea
adc
lret
in
ss
aad
out
xchg
cmp
negb
mov
sub
popa
data16
rcl
ja
cmp
cmpsb
jae
mov
fldcw
test
in
and
xchg
ret
clc
mov
pop
push
and
sbb
pop
jmp
test
notl
push
sbb
xor
mov
fisubrl
sbb
scas
xchg
mov
aas
je
dec
jmp
sub
push
jmp
inc
leave
arpl
xchg
mov
in
xor
fldl2t
mov
adc
shrl
fnsave
adc
jns
xchg
xor
inc
sbb
sub
das
jo
xchg
mov
or
pop
and
fnsave
repnz
adc
push
insl
data16
mov
das
es
inc
and
mov
and
pushf
hlt
mov
cmpsl
push
data16
xchg
mov
jb
inc
and
pushf
xlat
stos
push
jmp
adc
mov
xchg
sbb
cmp
jne
gs
lret
clc
outsb
punpcklbw
aam
jmp
shll
inc
cmovbe
rol
fs
addr16
jg
cmp
lds
or
jo
xchg
push
lods
xor
push
enter
xchg
mov
xchg
sub
pushf
movsl
pushf
cmp
nop
pop
jp
and
bound
clc
mov
jge
xchg
out
insl
xchg
mov
cmp
pop
xor
stc
xchg
xchg
pop
push
dec
adc
subb
jecxz
dec
pop
jae
popf
arpl
push
icebp
outsl
scas
push
mov
pusha
add
xchg
mov
das
out
push
ficoms
mov
int3
mov
xlat
push
pushf
mov
test
xchg
sarb
add
fs
inc
mov
inc
dec
mov
and
iret
jno
add
pop
xchg
mov
jnp
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
mov
lock
sbb
test
sbb
pop
lcall
sub
mov
add
fmull
xchg
pushf
sbb
xchg
je
cltd
dec
sub
int3
push
add
lds
fldl
xchg
cmc
mov
pop
repnz
or
xchg
mov
lret
sub
push
fucomp
iret
mov
repz
jmp
inc
std
jbe
repz
decl
test
ljmp
leave
ja
sbb
cmp
mov
and
int
mov
addr16
mov
or
mov
inc
inc
cmc
xchg
insl
icebp
or
mov
mov
jne
fcomps
scas
es
and
sub
addr16
lea
leave
mov
jge
call
pop
andl
test
jo
and
call
inc
xor
ret
stos
loopne
sub
sub
add
mov
negb
xchg
lods
ror
and
sbb
pop
and
scas
rcl
push
das
inc
xchg
stos
insb
loopne
sbb
aaa
fistpll
push
dec
sub
xor
rorl
sbb
jno
pop
mov
xorb
repnz
jnp
repz
outsb
jg
cmp
mov
pop
test
movsb
mov
xor
xchg
les
dec
ljmp
xchg
lods
xor
lcall
dec
push
and
push
xor
jne
ss
mov
mov
lods
or
mov
mov
adc
fdivrs
jne
mov
cmp
je
cmp
and
sbb
mov
jbe
xchg
jno
sbb
fcmovbe
arpl
sub
fdivs
add
inc
xor
inc
inc
dec
push
pop
xor
mov
rclb
fadd
push
push
pop
scas
or
xor
mov
xchg
xor
inc
add
xor
inc
pop
push
test
dec
out
inc
mov
out
adc
imul
mov
pop
and
incb
xchg
jne
loop
das
int3
lods
xor
rcl
lcall
cmpsb
dec
add
in
icebp
sbb
push
push
clc
push
cmc
mov
lock
sar
or
xor
inc
out
sbb
test
xchg
push
jge
lahf
scas
and
incb
add
fstps
ret
xor
fwait
outsb
xchg
and
sub
add
imul
andl
add
int
mov
inc
sub
add
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
lcall
sbb
push
xor
pop
popa
jb
or
aam
add
addr16
gs
sahf
adc
or
in
and
inc
sub
mov
pop
in
dec
xor
fldenv
lods
mov
cmp
and
fnstenv
mov
sub
cmp
inc
cmp
mov
jecxz
scas
or
xor
in
sarb
xchg
or
mov
xor
cld
les
push
and
push
cltd
sbb
xor
sbb
lret
jnp
add
or
loop
cmpsl
pop
lock
and
cmp
out
jne
test
adc
stc
mov
ficomps
imull
dec
mov
mov
int3
mov
add
push
inc
mov
xor
adc
les
shrl
ret
loop
aad
ret
sbb
jmp
cmp
adc
pop
test
repz
and
lock
mov
jg
cmp
mov
aam
pop
lahf
aad
and
mov
gs
mov
pop
pop
lahf
mov
sar
sti
pop
popa
xor
dec
push
popf
out
imulb
test
mov
pop
negl
push
mov
ret
stc
addl
mov
and
or
test
xorb
in
inc
or
cmc
cmp
dec
dec
int3
jp
mov
mov
seto
mov
loope
dec
in
shrb
xchg
out
push
and
jne
sbb
insb
cld
pop
xchg
fdivr
sbb
mov
loope
push
add
lret
mov
in
loopne
les
dec
sahf
mov
cmp
pushf
imul
repnz
out
pop
dec
xchg
into
cmpsb
xchg
je
loope
int
jnp
or
imul
outsb
pop
add
les
cli
inc
add
push
repnz
adc
cmp
push
popf
pop
sub
push
mov
clc
fiadds
mov
stos
enter
icebp
add
pop
clc
pusha
test
sbb
or
dec
sub
out
adc
ljmp
hlt
leave
xchg
jle
push
push
pop
imul
jl
pop
lret
add
mov
scas
enter
mov
inc
pop
test
jnp
loopne
sub
xlat
sbbb
enter
inc
xchg
xorl
xchg
dec
call
pop
movsl
sub
pop
out
xor
imul
or
scas
mov
inc
xor
movl
movl
jmp
aas
mov
mov
dec
mov
sub
test
sbb
leave
inc
dec
daa
pop
out
mov
sbb
fidivrs
xchg
mov
orb
iret
or
push
pop
and
iret
pop
fsubs
mov
test
dec
add
or
mov
push
int
roll
scas
inc
sahf
test
pop
imul
xor
lret
mov
orb
dec
cmpsb
mov
data16
mov
or
lret
jge
cmp
dec
stos
cmp
inc
roll
ds
addr16
jmp
push
mov
mov
lret
dec
pop
call
jbe
inc
pop
xchg
sub
fldt
jnp
xor
cmp
lret
mov
loope
xchg
adc
sub
jge
add
dec
clc
or
add
push
cmpsb
mov
fisubl
sbb
mov
adc
or
scas
popf
addr16
ficompl
xchg
sub
negb
insb
mov
lcall
inc
jne
int
add
cmpsl
jl
out
aam
inc
sbb
ljmp
rcrl
into
fistps
arpl
bound
pop
sbb
mov
bound
and
cmpsl
ja
sub
lea
push
xor
push
mov
jb
jg
cltd
push
ds
and
jb
xchg
add
rol
pop
mov
repnz
mov
es
addr16
inc
outsb
cwtl
cltd
sbb
fs
sub
call
lahf
ror
and
mov
stos
xchg
dec
jge
fidivl
mov
adc
in
jbe
jbe
subb
sub
mov
mov
lret
lock
js
lcall
mov
jp
mov
adc
imul
sbbb
sub
das
pushf
pop
inc
cmpsb
mov
adc
mov
or
imul
or
mov
out
mov
fimull
cld
lods
pop
xor
daa
lahf
imull
repnz
mov
inc
mov
nop
je
xchg
pop
pop
inc
jnp
mov
sbb
ss
insb
xchg
out
mov
or
sbb
stc
jp
out
cmc
xor
mov
adc
jmp
push
add
inc
ss
or
scas
or
jg
inc
xor
add
dec
out
cmc
cmp
in
inc
mov
and
lods
sbb
xorl
add
cmpsl
sbb
nop
out
out
sbb
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
movsb
xchg
mov
test
sbb
pop
sub
fbstp
fistps
insl
jns
scas
pop
and
decb
lods
adc
fwait
daa
rolb
ffree
cmc
dec
repz
rorb
popf
les
std
sbb
cmpb
mov
nop
sahf
stos
adcl
push
add
inc
pop
out
mov
scas
and
and
add
add
fwait
dec
inc
or
dec
mov
and
stos
test
inc
les
add
nop
inc
push
daa
ret
dec
nop
inc
mov
test
sub
cli
insl
mov
xor
insb
cmp
test
push
lods
lods
sub
std
test
pushf
icebp
test
pusha
cwtl
insl
sub
icebp
jmp
xchg
jecxz
inc
dec
jb
mov
adc
insb
es
pop
and
sbb
call
repnz
icebp
imul
insl
lcall
and
pusha
sub
fstpl
scas
add
das
or
dec
mov
les
mov
repnz
and
sbb
enter
pop
rcrl
fdiv
in
hlt
xchg
gs
stos
xlat
sub
sbb
mov
int
mov
jp
jg
ss
pop
orb
test
clc
dec
jle
mov
jp
rol
adc
pop
mov
fstps
push
ret
or
mov
cli
sub
icebp
sub
and
call
cmp
fldln2
dec
and
sar
sahf
pop
lds
jge
in
xor
mov
aas
gs
inc
fs
cmp
fcoms
das
lahf
jecxz
jo
movsl
sbb
lock
out
inc
cli
das
nop
aad
mov
and
fs
inc
rcrb
int
mov
push
leave
aaa
dec
push
xorb
std
mov
int3
lods
aaa
outsb
pusha
mov
jnp
jo
sub
mov
int3
mov
lds
push
imul
lcall
cltd
shll
jg
fcmovnu
mov
cmp
repnz
adc
inc
sahf
add
or
sar
add
pop
and
test
in
test
add
cmp
dec
sub
mov
add
cwtl
sbb
jp
mov
fsubr
out
cmp
xchg
xchg
test
push
sub
jb
dec
shr
imul
stc
jbe
pop
jl
pop
xchg
mov
or
shll
test
push
es
xlat
rcrl
hlt
mov
ss
les
int3
nop
mov
shlb
mov
ss
cmp
call
stos
fmull
jae
shll
les
rolb
add
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
mov
sbb
test
sbb
pop
lret
in
testl
pop
nop
outsl
cmp
nop
rolb
test
icebp
xchg
ljmp
pop
cmp
sub
test
xor
scas
push
inc
sar
xchg
pop
sub
mov
inc
movsb
mov
inc
dec
cmp
je
mov
fists
mov
outsb
sti
add
add
and
fwait
dec
lds
aad
jmp
cmp
ret
pop
xchg
push
enter
daa
lcall
adc
dec
nop
sub
jecxz
cmpsb
in
rcll
cmp
iret
jnp
cld
mov
bound
popf
loop
popf
bnd
add
dec
leave
xlat
into
je
dec
int
leave
lods
fcmovnu
sbb
mov
and
or
adc
dec
or
jl
mov
jno
lret
push
push
add
jo
push
push
std
or
cmp
lret
dec
adc
mov
into
int3
cmpsb
and
push
mov
bound
ja
aaa
xchg
inc
adc
pop
orl
or
sub
sub
inc
jecxz
jle
mov
fsubs
fildll
mov
inc
push
in
push
adc
nop
addb
lea
add
mov
mov
sub
xor
push
movsl
daa
xlat
dec
js
mov
mov
daa
daa
sub
fisubrl
jle
cmp
push
enter
adc
mov
pop
addr16
int3
loopne
push
push
fdivrl
xchg
push
pusha
pusha
aas
fildll
shrb
sbb
sbb
andb
repz
push
out
stc
lret
icebp
jmp
mov
dec
add
mov
jmp
mov
pop
int
fidivrl
inc
mov
mov
push
ret
repz
jmp
inc
jno
cmp
xchg
adc
in
and
mov
xchg
insb
and
push
push
mov
and
add
cli
sub
push
ss
fs
stos
push
mov
jae
jmp
cld
xor
js
pop
sahf
sbb
inc
cmpsl
sti
fcoml
frstor
fisubrs
lahf
sbb
fsubrs
lcall
test
lcall
inc
jmp
jp
imul
mov
fsubrl
lret
push
fidivs
rcll
xchg
push
mov
flds
test
out
mov
mov
sub
arpl
neg
sbb
adc
ret
scas
loope
dec
mov
add
rorl
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
push
loopne
sbb
sub
sub
movsb
sbb
adc
pusha
push
cmp
mov
clc
and
push
scas
pop
lret
sbbb
movsb
lds
imul
std
idiv
push
xchg
fwait
adc
lret
enter
leave
mov
push
out
andb
inc
push
inc
imul
inc
xlat
xor
sarb
std
popa
push
push
jg
xchg
pop
sub
out
out
call
leave
mov
xor
dec
in
sub
sti
gs
leave
adc
jno
fwait
pop
pop
sub
push
pop
xchg
sub
test
cmpsl
jb
sahf
or
fldl
loop
das
pop
ja
lret
xchg
inc
dec
stos
mov
daa
repz
jp
inc
and
dec
lret
dec
popl
rcrb
fisttps
sub
cmp
xchg
pop
js
stos
out
jb
shl
xor
call
popf
rorl
jno
lret
cmp
ss
lods
leave
xchg
cwtl
mov
xlat
adc
test
jg
ja
repnz
mov
cmc
push
sbb
mov
out
popf
dec
loope
mov
cmp
cs
jnp
outsl
mov
int3
das
jnp
fsubp
in
icebp
jo
inc
push
push
daa
cli
push
outsb
xchg
jmp
test
pop
enter
ljmp
cmp
sub
jg
addr16
cs
aas
cltd
jl
xor
or
mov
aad
xchg
pop
dec
inc
insl
pop
addb
sbb
es
xchg
inc
inc
cltd
and
rep
test
fistl
xor
or
xchg
sbb
loope
mov
js
push
adc
mov
aam
ss
ss
popf
jmp
iret
fnstenv
or
adc
sub
adc
lods
in
pop
xchg
inc
mov
aas
arpl
lahf
fiadds
stos
in
cmpsl
inc
xlat
push
and
inc
cwtl
outsl
adc
inc
andl
stos
jl
and
mov
imul
inc
imul
xchg
pop
cmp
dec
shll
pop
cmp
jecxz
mov
mov
jmp
scas
cmp
xchg
mov
or
jge
ret
push
jmp
xor
jno
xchg
inc
push
int3
mov
jb
into
add
rolb
push
jmp
mov
jg
dec
dec
in
stos
dec
add
popf
cmp
rcl
pop
push
repz
cs
mov
xchg
lock
add
push
dec
xor
scas
sub
inc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
sbb
sbb
adc
sbb
push
pop
divb
into
arpl
ljmpw
rep
pop
push
in
movsb
mov
les
jne
jecxz
sub
dec
jno
jne
clc
sub
aad
test
inc
cmp
push
push
pushf
cmp
sbb
incb
push
cmpsb
sbb
mov
iret
or
or
arpl
push
jmp
std
addr16
lahf
lcall
aas
jge
mov
shrl
out
stos
sbb
leave
push
xor
movsl
push
cmp
shlb
dec
pop
push
mov
stc
ss
cld
push
fcmovu
cmp
mov
addr16
insl
dec
sti
and
push
or
test
icebp
xor
outsb
sbb
and
loope
test
cltd
lods
mov
push
icebp
sahf
xchg
push
mov
mov
cmp
fwait
test
jo
aam
outsb
sub
push
xor
int
lods
leave
addl
jmp
cli
mov
fsubp
imul
jecxz
cmpsb
aad
dec
lret
int
les
push
push
sarl
fcomps
rcrb
dec
sub
ret
cld
call
sbb
mov
or
movsl
aas
pop
push
mov
xchg
in
push
shrl
pop
inc
lods
gs
xchg
subl
out
jno
insb
daa
lods
jge
add
sbb
ja
out
jp
mov
cmc
mov
inc
mov
jne
xchg
push
pop
pop
mov
imul
movsl
mov
arpl
jle
push
cli
xchg
or
and
sub
aas
test
stc
orl
mov
in
or
jmp
iret
fwait
mov
xlat
loop
data16
mov
xchg
nop
and
jecxz
mov
adc
dec
and
push
test
push
dec
push
jg
sub
lret
xor
divl
orl
fmull
push
mov
out
xchg
ds
aas
imul
lea
ljmp
inc
lahf
test
jns
and
fucomi
imul
and
out
dec
sbbl
lods
outsb
mov
aaa
pop
loop
mov
out
mov
bound
js
jnp
xor
cld
xor
test
lret
inc
sub
pop
jnp
mov
ljmp
mov
xor
lods
pop
daa
add
loope
ja
rcrl
iret
gs
or
mov
movsl
inc
mov
and
popa
cmp
jecxz
fsubr
mov
leave
dec
popa
xor
sub
mov
inc
aas
pop
adc
dec
push
mov
ret
adcb
rorb
jmp
sbb
or
mov
xchg
lds
cmp
xchg
rorl
sahf
cmpb
jle
sbb
call
pop
sbb
call
test
mov
pop
in
xor
xchg
in
cmp
adc
sbb
popf
xorps
ret
ret
adc
cmp
and
jo
dec
sub
cld
lods
mov
xchg
push
icebp
fldl
pop
clc
mov
aam
mov
gs
or
popa
add
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
daa
or
aam
sbb
adc
sbb
and
dec
rcrl
test
in
inc
xor
xor
xchg
popa
sub
sub
or
adc
int
adc
jg
arpl
insl
or
cld
cmpsb
clc
enter
add
imul
push
and
mov
cmp
jne
lcall
inc
cltd
lret
xchg
adc
cmpsb
loope
imul
call
cmpsb
and
push
xchg
jg
adc
xchg
test
add
inc
or
or
test
lock
xchg
xchg
and
adc
rclb
mov
scas
xchg
xchg
fcomi
movsb
and
cmpsl
leave
push
sub
and
hlt
cmovb
mov
notb
cmp
mov
mov
std
imul
popf
sbb
data16
push
dec
adcb
jae
aam
or
mov
xchg
add
cltd
mov
or
jae
mov
sbb
test
cmpsb
and
add
push
mov
pop
mov
icebp
bound
push
int3
pop
jne
adc
mov
inc
xchg
dec
ffreep
pop
push
hlt
pushf
out
mov
int
lea
daa
pop
mov
es
xor
xchg
das
inc
sub
int
lcall
dec
add
insb
pop
add
rcrl
dec
dec
add
jno
insl
outsl
xor
into
mov
nop
and
xorl
fdivrl
jp
fadds
dec
movsb
xor
adc
lahf
xchg
mov
popf
sub
inc
loop
shrl
addr16
inc
inc
jno
testl
je
inc
repz
jo
int3
iret
loopne
cltd
out
rorl
insb
pop
cli
jle
inc
pop
mov
out
ror
xor
cmp
lods
adc
mov
push
repnz
test
adc
mov
cmpsl
and
sbb
push
mov
xchg
out
mov
mov
or
cwtl
outsb
inc
and
mov
pop
xchg
mov
aas
arpl
aas
pop
ja
out
pop
out
insl
std
sub
sub
sub
enter
int
cmp
jne
addr16
or
popf
js
sahf
pushf
nop
add
mov
pop
mov
mov
std
clc
notl
push
push
xor
add
xchg
jecxz
cmp
pop
or
mov
fwait
jg
mov
dec
adcl
xchg
mov
pushf
arpl
imul
sub
dec
add
inc
lock
data16
inc
cmp
xchg
dec
sbb
pop
cwtl
xchg
mov
pushl
repnz
mov
arpl
inc
dec
cmp
dec
out
xchg
xchg
jg
popf
ljmp
movsb
inc
mov
iret
mov
cmp
mov
lret
push
arpl
aam
daa
cmp
insb
pop
cmp
push
movsb
insl
mov
dec
lods
bnd
icebp
mov
pop
pop
jmp
pop
daa
mov
sti
and
in
xchg
xor
out
rcrb
fcoml
insl
cmp
out
xchg
sub
xor
pop
cmp
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
add
psraw
sti
mov
ljmp
xchg
push
jge
movsl
leave
lods
mulb
in
fwait
cmp
or
js
js
psrlw
je
jae
pop
in
loopne
add
mov
repz
cmp
je
and
mov
cld
cmp
mov
mov
pop
and
mov
aas
push
stos
xchg
push
loopne
mov
jb
loope
pushf
cmc
fidivrs
hlt
fistpl
lods
in
movsb
push
sarb
xor
mov
aaa
repz
pop
loop
push
sbb
xor
push
fnsave
shll
inc
shrb
dec
hlt
sub
test
js
les
xor
sub
push
jnp
dec
out
stos
dec
popl
add
mov
lea
aas
sbb
insb
mov
test
xor
or
cmp
fwait
xchg
orl
in
mov
dec
loopne
rcll
xor
push
movsb
out
jbe
addr16
fxam
xchg
or
xlat
push
xor
lds
pop
inc
or
mov
cmpsl
mov
sub
dec
lods
jmp
inc
cmpsl
out
insl
xor
nop
push
int3
shll
mov
mov
imul
inc
out
cmp
cmp
dec
movb
je
xor
les
decb
cmpsb
scas
in
sbb
cmp
fstpt
aas
xor
xchg
syscall
sbb
sub
mov
addl
push
insl
test
scas
jg
popa
jge
cmp
pusha
pop
adc
stos
mov
jg
fisubrs
out
daa
jmp
jge
cmp
outsb
icebp
das
adc
and
sub
std
push
mov
mov
fs
adc
dec
mov
adc
xchg
stc
repz
les
lret
repz
cltd
out
dec
sub
add
inc
lahf
push
rol
ret
popf
dec
jo
jl
xor
mov
fwait
loopne
push
ret
out
movups
xlat
dec
in
mov
int
sti
iret
dec
jo
dec
mov
xor
hlt
movsb
jmp
lcall
div
xchg
dec
ja
test
adc
mov
popf
mov
stos
rcll
ss
xchg
lock
ret
call
cltd
mov
lret
and
jae
shl
pop
loope
mov
jge
mov
cmpl
nop
and
cmp
or
outsl
cmpsb
mov
out
in
sbbb
mov
loop
mov
hlt
jb
insl
inc
out
testl
fcom
mov
popa
cltd
cmp
cmp
cmpsb
in
sbbl
inc
or
pop
aam
fwait
or
cmp
bound
mov
mov
pop
jb
xchg
pop
dec
mov
adc
sbb
loope
aad
jp
imul
icebp
lret
dec
dec
sub
lods
cmpsl
popa
sub
repz
aad
jg
xchg
inc
jne
aas
inc
sbb
push
lcall
jb
sbb
mov
es
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
and
push
sbb
xor
sbb
push
xor
aas
xor
xor
mov
add
sbb
or
push
sbb
xchg
push
in
shlb
repnz
mov
stos
mov
push
shl
in
xor
imul
int
add
and
mov
or
mov
out
cmp
lcall
mov
lds
dec
adc
ss
dec
and
jg
arpl
lret
pop
mov
mov
mov
int
inc
int3
sub
roll
jnp
insl
add
pop
xchg
add
iret
sbb
ljmp
lahf
sbb
mov
movsb
cmc
mov
iret
dec
fdiv
clc
pop
pop
cmp
repnz
dec
leave
loopne
inc
sti
dec
mov
mov
test
int
pushf
mov
dec
cs
shll
lret
cld
sub
sbb
xchg
sbb
xchg
das
jo
push
out
xor
jb
jbe
sbb
cmpsb
test
jb
sub
sub
or
mov
enter
js
inc
cmp
sub
xor
cmc
push
cmp
or
push
sti
push
jecxz
scas
aad
dec
or
lcall
pop
add
push
adc
sbb
orb
movsl
out
movsb
inc
incl
sub
lret
rcrl
lcall
pop
les
mov
scas
shlb
mov
dec
xchg
pop
sub
jmp
adc
hlt
dec
stos
test
loope
push
insl
jecxz
pusha
adc
cmp
or
xchg
cmp
cmp
push
jmp
sahf
mov
cltd
jecxz
jmp
mov
arpl
ljmp
fnop
out
xchg
mov
push
and
cmc
mov
and
adc
xchg
frstor
es
pop
push
popa
mov
insl
pop
insl
mov
push
ds
ficoml
mov
adc
repnz
or
es
sbb
cld
adc
sbb
jns
lcall
shll
fisttpl
inc
pop
add
test
mov
lods
pop
nop
fcomps
popf
xchg
ret
cmp
dec
out
and
icebp
aad
add
push
fwait
out
pop
mov
fstpt
sub
add
cmc
dec
mov
mov
jb
dec
push
scas
nop
movl
stos
xchg
loope
js
fwait
out
mov
or
sahf
scas
push
aas
jmp
inc
adc
mov
sub
and
repnz
push
push
mov
pop
xchg
inc
leave
cmp
shll
sbb
sbb
out
and
fs
or
std
daa
jo
jg
adc
jno
sahf
jo
jle
inc
dec
cmpsl
or
push
sbb
pop
lods
jg
mov
call
pop
nop
aam
rcl
add
movsl
xchg
add
jecxz
push
inc
movsb
jg
pop
imul
add
pushf
xchg
insb
addr16
rorl
jecxz
mov
push
inc
jne
sbb
nop
call
push
push
rolb
mov
adc
and
dec
ret
jns
lods
gs
xchg
mov
scas
les
dec
cld
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
scas
iret
jo
mov
sbb
xchg
inc
jmp
ljmp
add
mov
dec
mov
scas
imulb
loope
cmp
cmpsb
mov
fwait
cmc
mov
sbb
add
push
xor
repnz
std
jmp
dec
mov
push
jg
clc
call
aad
adc
and
jg
jmp
sub
cs
xchg
cmp
and
cli
adc
ljmp
cltd
dec
and
dec
adcb
pop
cmp
or
scas
insb
in
shll
adc
push
sbb
pop
push
xchg
jge
icebp
dec
ss
test
cs
cmp
ss
jg
es
dec
dec
inc
call
push
and
arpl
xchg
cmp
xlat
xchg
xchg
mov
test
or
fsubs
cmp
loope
jmp
iret
adc
xchg
xor
mov
pop
sub
lds
js
xor
mov
jge
push
fistps
adc
mov
neg
mov
jmp
push
sbb
xor
adc
cmc
lret
shr
cli
push
icebp
pop
ja
dec
mov
jecxz
mov
mov
and
or
dec
lcall
lret
or
lods
les
mov
movsl
rcrb
ret
adc
cli
pop
test
jo
mov
pop
and
fucomp
jecxz
dec
mov
xlat
sti
je
loop
add
ss
pusha
sti
xchg
xchg
mov
jecxz
xchg
sbb
push
mov
in
and
test
push
mov
fmuls
dec
push
cmp
and
js
pop
inc
inc
mov
jae
sub
cmpsb
test
dec
int
out
lods
mov
dec
daa
lods
lahf
dec
mov
popa
mov
aad
test
xor
in
mov
rolb
adc
or
xor
add
filds
es
mov
or
into
shrb
sarl
lret
jge
xchg
xchg
loopne
shll
jns
mov
xchg
mov
mov
fsubl
mulb
lods
xchg
pop
pusha
jmp
ret
movsl
int3
adc
push
enter
enter
shll
fisubrs
xor
mov
lahf
push
aas
movsl
test
mov
push
push
daa
mov
cmc
les
jmp
incb
call
mov
dec
shr
out
mov
fsubrp
mov
mov
lock
add
imul
sti
or
xor
sub
jle
and
xor
shl
scas
cld
faddl
rolb
mov
mov
adc
cmp
cmp
clc
outsl
notb
add
lea
pushf
mov
and
lods
push
mov
pop
inc
pop
or
orl
pop
cli
bound
shlb
mov
push
add
jl
insb
shlb
test
cltd
pop
stc
cmp
lcall
data16
adc
test
xchg
and
cmp
sub
decl
and
fadds
sbb
push
inc
pop
imul
hlt
adc
in
mov
popa
repz
aas
pop
repnz
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
sbb
xor
sbb
jmp
xchg
ss
or
mov
outsb
jg
adc
adc
sub
or
add
popa
push
push
leave
mov
mov
inc
dec
xor
adc
mov
mov
rolb
popf
cmpsb
or
pop
aam
push
into
dec
mov
cmp
shlb
pop
push
adcb
mov
pop
inc
lock
pushf
push
xlat
out
jle
jge
xor
mov
and
mov
and
cmpsb
in
mov
pop
inc
dec
xor
cmp
ror
pop
lods
mov
pop
test
jbe
and
cmc
inc
add
repz
inc
jbe
fidivrl
mov
movsb
rdtsc
sub
sub
xor
mov
add
mov
inc
jns
sbb
sbb
jge
out
pop
jecxz
fistpl
leave
xor
inc
mov
lahf
mov
data16
pop
adc
cmp
inc
push
movsl
cmp
xchg
adc
adc
push
in
jl
push
mov
and
bound
pusha
xchg
ds
cmpsb
cmpsb
mov
aas
cwtl
mov
mov
pop
daa
lock
mov
push
xor
aad
cwtl
repnz
adc
orb
sbbb
sarb
cmp
mov
push
add
les
mov
nop
sbb
test
test
mov
fisubrs
mov
mov
push
sarb
loop
scas
push
insl
xor
sub
sub
fsubs
sarb
mov
hlt
inc
inc
fs
xchg
insb
subb
out
add
jnp
sub
imul
or
add
dec
ror
sub
ljmp
daa
adc
les
xor
movsl
cmp
cmpsl
popf
jmp
xor
aam
xchg
push
jmp
ret
pop
sub
mov
rolb
pop
scas
xchg
fs
jne
out
mov
mov
jle
or
sub
pop
mov
push
or
mov
inc
movsb
stc
fcomi
sub
es
pop
sbb
sbb
adc
or
mov
mov
cmp
jecxz
sub
cmp
aam
dec
mov
pop
dec
rorb
in
jne
xor
or
cmpsb
cmc
in
fdivrl
repnz
pusha
outsb
lahf
sbb
in
outsl
xchg
ret
mov
lret
jb
sbb
sub
push
adc
lods
xchg
sub
lret
icebp
cld
jae
rcrl
fsubrs
or
es
mov
ja
test
ss
in
jbe
cmpsb
notl
icebp
sbb
hlt
or
xor
les
rep
xor
mov
pop
and
test
and
sbb
sbb
cmp
lods
outsb
movsl
dec
sub
xchg
or
fld
cltd
jmp
jne
movsl
mov
test
xchg
pop
or
lea
faddp
das
jnp
sbb
cmp
add
sbb
dec
mov
inc
gs
outsb
xor
cmc
inc
cmp
lea
scas
adc
cmc
xchg
add
data16
out
adc
jge
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
dec
cli
mov
xor
sbb
clc
add
lea
and
test
cs
dec
lea
xor
lahf
mov
rcl
pop
push
jbe
test
sbb
pop
std
mov
jmp
mov
jp
sbb
cmp
in
or
ret
movsb
std
push
bound
pop
ds
xchg
jecxz
js
scas
mov
subb
bound
pushf
test
daa
jge
push
scas
in
insb
or
mov
push
add
test
mov
stc
cmp
add
mov
mov
sub
out
bnd
add
mov
jge
xchg
andl
int3
push
cmp
lods
fidivrs
ja
mov
jmp
out
add
cmpsl
test
stc
popf
sub
mov
pop
outsb
and
lds
jne
mov
maskmovq
mull
dec
in
cmp
mov
test
cmp
mov
dec
out
adc
sub
outsl
sub
mov
rorl
js
movsl
fisubrl
fiaddl
xchg
or
inc
lret
pop
cmpsb
pop
into
lcall
sbb
vminsd
lahf
cmpsl
dec
test
mov
dec
lock
mov
mov
jb
and
jecxz
push
and
sti
mov
cmp
pop
inc
mov
jmp
adc
dec
sub
inc
mov
add
sbb
outsb
insl
jp
aad
cmp
pop
inc
psrlq
out
testl
shll
add
rolb
repnz
xchg
sbb
mov
add
sbb
cmp
shrl
or
pop
cmp
out
aad
jl
sbbl
cmc
in
inc
pop
adc
push
xlat
add
cli
mov
mov
mov
ja
in
vandnps
scas
int3
or
sub
or
fisubrl
aad
cmp
cmp
pop
insl
and
repnz
cmpsb
imul
mov
pop
stc
daa
repnz
jns
repnz
popa
cmpsb
jb
mov
fisubrl
cmp
push
push
and
leave
fwait
inc
mov
sbb
iret
stos
xchg
es
jecxz
loop
stos
mov
mov
mov
add
pusha
jp
loopne
fnstenv
jg
call
loopne
nop
sbbb
fnstsw
and
mov
jl
movsl
push
jbe
inc
neg
mov
cld
jo
add
in
imul
or
add
subb
orb
fwait
xor
or
in
cmc
sbb
negb
cmp
push
pop
push
xlat
mov
push
inc
jnp
es
testb
add
dec
pop
mov
xchg
loop
out
in
je
xor
push
mov
mov
mov
lods
mov
jge
dec
pop
inc
or
rclb
dec
js
icebp
mov
inc
sub
popa
rcrl
je
inc
imul
mov
les
loop
and
idiv
fisttps
fdivs
data16
lods
and
lahf
mov
arpl
cmp
into
stos
jne
dec
jo
rorl
dec
jae
cmp
add
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
lahf
pop
xor
sbb
in
es
or
mov
jmp
and
sbb
scas
inc
nop
rorl
outsl
xchg
jecxz
in
adc
arpl
inc
in
loope
jg
jp
jge
sbb
push
outsb
ljmp
adc
pop
fisubs
add
jp
iret
jno
out
inc
inc
scas
cwtl
jge
xor
sub
dec
stos
push
inc
mov
imul
stos
add
sub
xor
lret
cwtl
test
sub
jp
das
xchg
je
pop
jb
fnsave
int
ds
xchg
jnp
cmp
and
mov
push
roll
test
ret
jne
push
es
xor
xchg
cli
push
or
xchg
cwtl
std
into
gs
xchg
or
out
jae
aaa
int
adc
stos
cltd
loope
insb
push
add
xor
imul
mov
add
scas
cmp
xchg
cmp
loopne
jbe
iret
cmp
test
mov
mov
scas
loopne
adc
dec
mov
les
cmp
fstpt
xchg
out
xchg
cld
dec
inc
std
jae
cld
lock
mov
mov
les
inc
imul
sti
sub
aaa
aam
jo
fstpt
ja
pushf
mov
es
sahf
addr16
mov
rorb
scas
sbb
pusha
jge
mov
jo
lods
insl
outsl
mov
mov
add
cmp
daa
pop
adc
dec
mov
mov
sub
dec
addr16
int3
or
gs
fidivl
inc
pop
fs
les
mov
dec
sbb
add
push
aam
in
or
in
lds
sub
jb
lret
bound
dec
mov
adc
stos
ljmp
mov
xor
pop
outsb
mov
or
mov
cmpsl
xchg
cmpsb
inc
loopne
sub
in
mov
int3
jne
mov
xchg
nop
outsl
das
fisubs
scas
subl
sub
fsub
dec
data16
add
rcrb
daa
mov
push
or
cmp
into
jne
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
notl
loopne
push
call
jo
add
in
in
mov
push
fldl
pop
out
lods
out
fiadds
cld
test
cmp
popa
mov
jl
mov
mov
xchg
adc
mov
je
pop
pop
mov
mov
sub
or
stos
cli
and
adc
inc
xchg
les
mov
xchg
mov
or
lds
daa
push
jecxz
xchg
jp
ret
mov
fnstcw
test
cmp
in
add
push
lea
mov
pop
mov
mov
js
dec
movb
sti
out
pop
in
data16
jbe
fcomps
lret
xchg
das
pop
sahf
mov
mov
ds
adc
mov
mov
mov
clc
aam
imul
mov
aaa
adc
xchg
jb
sbb
scas
ds
sbb
rolb
scas
lock
adcb
mov
enter
push
xchg
cmp
popf
decl
ror
pop
cli
outsb
cmpsb
sub
mov
cmp
xorb
push
mov
or
shlb
lds
push
adcb
sbb
sbb
lods
mov
jne
mov
and
mov
mov
fdivs
mov
lret
outsb
mov
fildll
es
enter
pop
mov
mov
clc
dec
pop
sbb
iret
stos
or
add
loop
test
stc
and
mov
cmp
sbb
adc
bound
enter
sub
sbb
pop
xchg
lret
sub
cs
pop
int3
fists
dec
stos
ret
sub
mov
sub
cmp
cmp
aam
adc
dec
jg
push
sub
out
mov
sbb
push
gs
in
dec
inc
cmp
iret
test
sbb
xchg
or
icebp
int
or
stos
lret
call
push
lock
push
jmp
sub
and
jb
push
stos
xchg
in
repnz
mov
sbb
into
mov
enter
in
lods
insl
out
jmp
test
xchg
mov
xor
test
out
cld
and
out
les
int3
xlat
xor
nop
dec
inc
inc
or
adc
ret
in
and
and
outsl
and
iret
or
daa
mov
loopne
addr16
sbbb
push
inc
andb
xchg
mov
push
adc
mov
sub
popl
call
scas
and
jl
mov
jbe
adc
popl
jle
xor
xor
cld
dec
or
fdivl
out
cmp
mov
lea
jno
cmp
pop
lret
pop
lret
mov
daa
notb
xchg
fcmovbe
mov
stc
nop
lock
mov
xchg
adcb
ret
mov
and
mov
lcall
xchg
ror
sbb
cmp
or
and
mov
pop
xor
jbe
icebp
ret
cmc
mov
loope
fisubl
add
not
sub
mov
mov
rcr
std
pop
loop
xchg
mov
rorl
or
cmp
into
mov
cmp
xlat
shl
xor
inc
sub
in
mov
jg
aad
sbb
jl
cmp
fucomip
xor
rcrb
insl
in
sub
sbb
adc
stc
xchg
mov
or
repz
out
mull
or
aad
dec
add
stos
in
and
cmpsb
mov
push
or
gs
lahf
out
or
les
shrl
loope
push
dec
gs
cli
fdecstp
fs
leave
jmp
sbb
inc
vmread
pop
mov
int
push
mov
cmp
fisubs
shlb
adc
cmc
or
in
nop
push
imul
out
rcll
adc
fisubrs
pop
jg
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
nop
fstpt
pushf
sbb
test
std
daa
stc
sbb
add
sbb
fisttpl
imul
jmp
stos
mov
or
and
cmp
xor
es
mov
pop
scas
cmpsb
sub
dec
lock
movsl
in
mov
sub
add
xorl
mov
imul
mov
mov
movsb
je
pop
jge
sub
inc
push
sbb
lods
in
or
das
shlb
cmc
inc
ss
mov
mov
xlat
push
call
cld
add
leave
iret
cld
sub
cltd
mov
cmpsb
scas
sub
mov
std
lods
imul
loopne
dec
and
mov
scas
mov
sbb
mov
loopne
lret
mov
jbe
ret
and
dec
jg
cmp
clc
pop
sbb
ds
cld
mov
or
and
cmp
xor
sub
push
mov
jno
out
iret
sahf
xor
inc
jecxz
adc
xlat
lods
mov
adc
add
nop/reserved
cmp
mov
xlat
pop
mov
or
loope
or
adc
jbe
sbb
icebp
add
dec
jb
push
sbb
call
cwtl
jne
jnp
sti
les
push
xchg
jg
outsl
jl
rcr
roll
adcl
shrl
dec
lods
jecxz
loopne
nop
mov
repz
xor
inc
mov
pop
add
cmp
enter
popf
in
inc
cmpsl
or
push
mov
das
insb
mov
sti
insb
call
adc
sbb
xchg
into
iret
sti
mov
jp
out
sbb
and
or
test
and
mov
insb
out
add
push
mov
mov
pop
sub
lock
mov
push
scas
dec
lods
add
mov
jmp
test
sbb
lret
loop
xchg
or
arpl
popa
int
stos
fucomp
jmp
push
and
lock
popa
add
xchg
cmp
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
jl
mov
test
shrb
in
lods
dec
lret
insb
popa
sub
cwtl
cwtl
bnd
push
mov
sbb
data16
xor
and
add
arpl
mov
bound
mov
cltd
or
scas
sub
cmc
test
insl
jmp
into
mov
mov
sarb
sahf
sbb
adc
add
cmp
enter
jmp
mov
mov
mov
testb
out
pusha
sbb
sbb
adc
push
es
fsubs
test
dec
jae
push
lcall
in
mov
cli
push
cmp
push
std
into
inc
sub
outsb
sbb
fstpt
loop
ficoml
ret
cmp
imul
inc
sub
cli
pop
icebp
daa
xchg
mov
ljmp
in
nop
cmc
jno
and
mov
aaa
push
ret
pop
jge
into
bound
and
mov
cmpsl
shlb
pop
or
fisubrl
arpl
aaa
roll
xchg
mov
pop
popf
div
aas
dec
mov
and
addr16
sbb
in
cmc
xor
arpl
cmp
loop
xor
cmp
cmpsl
pop
or
stc
sub
sbb
insb
cmc
aad
popf
subb
fisubs
andb
mov
jecxz
and
inc
out
ljmp
sbb
push
out
fs
jg
cwtl
je
insb
mov
xchg
mov
call
outsl
testb
aaa
lret
rorb
mov
adc
mov
call
loopne
or
in
xor
dec
in
cmc
sub
and
in
adc
xchg
or
movsl
xchg
dec
jg
out
dec
mov
pop
rclb
fimuls
cmp
push
mov
cmp
test
cmp
repnz
jo
jg
rcll
lods
pop
lret
and
xchg
mov
or
jp
and
pand
inc
arpl
pushf
lds
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
in
push
stos
shr
sbb
test
insb
popf
gs
out
push
lret
int3
or
pop
sbb
cmp
fs
xchg
add
lret
jle
push
shl
es
pop
test
loopne
pop
inc
sub
test
sahf
je
mov
icebp
and
repnz
add
sub
stos
lock
sub
inc
cld
jnp
cmp
popf
cli
mov
mov
ljmp
outsb
jmp
xchg
int
xchg
stc
ljmp
dec
mov
cmpl
imul
pop
in
xchg
push
fsts
bound
in
xlat
mov
xor
xor
pop
push
insl
fistpl
pushf
popa
insl
push
testb
mov
xchg
sub
mov
out
fistpll
pop
jo
pop
aad
daa
rol
adc
mov
lretw
out
fstpt
jb
dec
loopne
lsl
jmp
stos
dec
in
or
mov
pop
mov
test
mov
xor
cltd
std
add
in
in
cmpsb
outsl
push
push
push
das
clc
adc
stos
das
inc
mov
loopne
jmp
push
fnstenv
fldt
adc
and
cmp
xor
xchg
popf
jp,pn
imul
lds
clc
mov
test
ret
fisubs
and
lcall
sub
add
mov
icebp
js
test
cmp
mov
mov
aaa
mov
sub
andl
sub
lds
xchg
jbe
test
sub
das
mov
iret
xchg
xor
ja
push
test
inc
mov
add
sbb
sbb
pop
mov
push
dec
outsb
enter
sbb
cltd
call
and
shrd
cmp
lods
add
inc
dec
shr
into
or
add
mov
add
inc
inc
push
les
icebp
mov
xor
or
jmp
push
and
mov
stos
pop
nop
sbb
test
outsl
inc
sub
mov
inc
test
dec
pop
pusha
loopne
xchg
out
lock
pop
lret
dec
add
mov
xchg
cmpsl
pop
mov
pushf
shrb
fidivl
sbb
cmp
sahf
xchg
mov
jo
and
mov
ds
xchg
jmp
bound
ljmp
shlb
push
sbb
cmc
in
fsqrt
mov
mul
push
add
enter
sub
cld
adc
inc
mul
mov
dec
xchg
cltd
gs
mov
ja
orl
pop
inc
add
fnstsw
push
inc
xor
mov
lods
dec
jl
and
hlt
lret
cmc
loop
pop
cmpsb
ja
test
mov
jne
xchg
aas
xor
jl
fchs
mov
scas
push
lea
pusha
inc
test
mov
fnstcw
xlat
ss
xchg
mov
data16
ret
jae
mov
dec
and
mov
fsubrl
fsts
imul
push
popf
aas
in
xorb
repz
pop
pop
rcl
test
inc
jno
xor
cltd
jp
cmp
mov
cs
mov
ret
test
sbb
loop
inc
push
ds
mov
mov
mov
iret
dec
pop
mov
inc
cmp
insb
aam
cs
push
add
stos
jo
iret
jge
lcallw
lahf
sub
shrw
mov
out
js
imul
push
test
popf
adc
push
xchg
push
in
dec
adc
xchg
bound
outsb
xchg
fsubr
mov
sbb
movsb
ljmp
repnz
xor
and
jmp
xchg
sbb
push
outsb
pop
cmp
int3
jns
dec
adc
pop
es
ljmp
sub
daa
sbb
icebp
dec
leave
ficoml
push
mov
ss
in
jbe
jb
out
xchg
lock
popl
sbb
sub
lods
aam
mov
inc
cmp
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
addr16
test
or
test
sub
data16
sahf
pop
cmp
in
inc
and
sub
adc
fdivrs
and
sbb
mov
test
outsl
nop
int
xor
insl
lahf
into
popa
dec
mov
insb
pop
mov
push
xor
out
bound
mov
bound
xchg
mov
lret
mov
outsb
cmp
negl
test
cli
out
loope
add
arpl
push
or
fsubs
das
fcmovbe
jnp
push
dec
sbb
pop
test
sub
mov
mov
nop
push
cli
cmp
push
push
ret
in
adc
lcall
fidivrl
jne
jg
jle
pop
add
xchg
call
movsb
lcall
sbb
mov
scas
and
and
jns
mov
popl
mov
xor
cmp
adc
push
test
outsb
call
in
jge
fiadds
stos
movsb
int3
inc
mov
imul
das
sbb
mov
in
insl
inc
xchg
dec
inc
imul
cmp
mov
cmp
js
test
mov
pusha
mov
push
out
int
fs
sub
cmp
xor
and
ja
popa
adc
in
jl
jg
aam
sbb
cmpsb
sub
pushf
or
leave
lods
icebp
push
lock
sub
movsb
inc
push
mov
mov
cmp
iret
mov
adc
scas
scas
sub
outsb
and
jge
fisttpl
or
notl
adc
adc
xor
addr16
ja
ljmp
mov
jle,pt
xchg
and
fwait
adc
into
lock
jno
push
mov
or
lods
aam
cmpsl
and
js
push
and
into
mov
imul
cmpsl
xor
cmp
aaa
jb
in
jno
dec
aas
cmp
pop
roll
mov
insl
push
xchg
add
std
arpl
add
xchg
std
and
push
push
xor
cmp
xor
jno
scas
adc
or
lods
js
inc
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jl
xchg
sbb
sbb
das
cmc
int3
loopne
cli
mov
dec
and
add
sarl
mov
cltd
js
adc
inc
cmpsl
popl
into
lret
aas
repnz
sub
loope
jbe
sub
imul
dec
sub
loopne
adc
jl
test
cmp
call
popa
push
popa
loope
sbb
adc
xor
in
mov
arpl
pop
fsts
mov
aaa
into
out
lret
xor
add
inc
mov
ret
pushf
sbb
clc
subb
push
scas
pop
daa
cmp
fistps
ficomps
lock
insb
mov
sbb
adc
jmp
stos
push
mov
or
out
pop
imul
add
xor
and
jne
cmpsl
int3
sub
push
mov
addr16
and
lock
and
aas
pusha
or
add
mov
adc
or
mov
push
cmp
fs
data16
jecxz
in
push
sub
jbe
scas
cwtl
ret
xchg
daa
and
test
push
push
jno
arpl
push
arpl
lret
mov
xchg
sub
test
push
cs
loop
xchg
outsb
cmp
pushf
adc
push
andb
movsb
les
pop
cmpb
mov
rcr
loop
and
fs
int3
push
mov
sub
mov
jbe
sbb
add
loope
in
sub
inc
mov
ffreep
adc
inc
daa
push
rcrb
xlat
inc
in
enter
lret
xchg
push
mov
pop
sub
arpl
mul
dec
repz
popa
sbb
fisttps
push
mov
sub
adc
sbb
imul
rclb
lea
or
ds
xor
xchg
ror
jae
sbb
lret
iret
out
adc
cmp
pop
xchg
in
push
clc
cmc
push
int
mov
insb
push
insb
xchg
fldt
scas
and
loop
xor
loopne
std
repz
and
rcrl
xor
xor
adc
cmp
mov
lret
adc
loopne
sub
in
aad
mov
add
jmp
jno
scas
xchg
test
loope
pop
inc
jecxz
les
cmp
stc
jmp
pop
test
mov
xor
mov
mov
imul
into
loop
outsb
mov
or
or
pop
stos
aad
cmp
pop
add
dec
cltd
fisubrl
gs
mov
add
lret
dec
cmp
das
cs
jp
pop
mov
cld
adc
shl
cmp
mov
xchg
stos
xor
fsubr
pop
cmpsl
ret
jnp
sub
push
andl
in
adc
xor
inc
jns
gs
mov
dec
jno
xchg
push
es
mov
and
leave
push
icebp
inc
and
sbbl
movl
jmp
into
jne
inc
sbb
pop
clc
push
jge
fadds
sbb
cmp
popf
das
int3
daa
loope
mov
inc
cltd
jns
stos
loopne
cmove
xor
lds
movsb
shlb
xchg
mov
push
ljmp
jg
mov
jnp
adc
mov
filds
enter
dec
sub
jo
inc
fstpt
fdivl
pop
scas
jg
orl
mov
push
out
mov
jbe
jb
int
cli
loop
add
pop
push
pushf
jbe
mov
pop
pop
xchg
adc
push
scas
add
sbb
sahf
mov
mov
lods
xor
xchg
jo
cmp
push
push
loope
aad
xlat
xchg
test
fcmovnbe
fcoml
jg
in
in
dec
icebp
xchg
decb
int3
in
pop
add
lock
adc
stc
fs
aaa
mov
ret
adcl
or
cwtl
sub
rolb
shlb
jb
sub
ss
jp
mov
xor
aad
sbb
aas
mov
pushf
aaa
dec
out
in
cmp
jno
cwtl
adc
jmp
imul
lods
add
cmpb
aad
jp
mov
fnstsw
call
xor
lock
stc
loope
imul
adc
insl
cltd
scas
dec
and
lods
test
pushf
sub
jg
enter
jnp
jae
sub
mov
pop
sub
das
cmp
out
out
lea
sbb
incl
popa
scas
mov
cmp
stc
xchg
outsl
jecxz
out
fdiv
pop
cmp
sub
cs
jp
adc
imul
call
je
cmpsl
addl
stos
ljmp
push
nop
or
invd
dec
out
lret
andl
insb
aad
fwait
test
push
repnz
scas
or
repnz
jns
or
xor
adc
cmp
cmp
sbb
in
enter
add
test
inc
mov
mov
in
dec
add
out
pusha
aad
sub
hlt
jecxz
ljmp
and
dec
lcall
sbb
or
and
mov
lret
mov
outsb
hlt
mov
stos
leave
stos
std
lds
cmpsb
cltd
dec
mov
inc
gs
imul
arpl
xor
fildl
fstps
mov
jns
cld
ss
lods
mov
sti
adc
aad
cmpl
jb
push
pop
dec
into
push
rol
in
mov
ds
xchg
dec
pushl
lods
add
and
idivb
in
fwait
sbb
fs
cld
sahf
cmp
aam
adc
js
push
rcll
imul
scas
jmp
mov
dec
lock
jp
dec
clc
mov
movsl
into
imul
movsl
cwtl
scas
movsb
sub
ss
sbb
xchg
xchg
mov
add
out
push
jp
jl
leave
dec
mov
lods
clc
int
adc
dec
mov
cwtl
pop
mov
mov
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
dec
std
dec
fbld
pop
add
jbe
icebp
sub
jns
call
and
testb
stos
jmp
or
xor
xchg
imul
cmpsl
jl
fmull
and
fldenv
hlt
mov
sub
sub
call
mov
loope
sub
movsb
mov
and
add
stos
fsubrl
adc
lock
ss
popf
ret
ret
xchg
stc
sbb
or
add
or
lods
enter
call
and
cli
sbb
cli
mov
dec
push
mov
pop
stc
push
jl
jne
ljmp
sbb
out
sub
ja
and
enter
and
and
cmp
mov
push
mov
mov
adc
mov
jp
inc
xor
mov
pop
push
aas
pop
imul
rcrb
pushf
aaa
and
lods
ret
pusha
ss
cli
aaa
sub
inc
cmc
fistpl
or
push
mov
xor
out
pusha
mov
sub
lret
add
mov
jl
jp
sbb
call
mov
cwtl
cmp
lock
push
movsl
mov
loop
testb
mov
fsts
cmp
or
fldt
ss
push
pop
nop
xchg
out
fimull
xor
nop
inc
add
cltd
adc
mov
inc
sahf
mov
add
xchg
push
adc
ds
cmp
pop
out
lahf
sub
push
add
cmp
add
rcll
pop
popa
or
xchg
cmpsl
lods
jae
adc
fwait
xor
enter
scas
dec
and
mov
enter
lret
fisttpll
add
sbb
push
push
test
add
lods
or
daa
mov
rorl
int
aas
mov
sbb
clc
fnstenv
and
push
ja
mov
movsl
or
movsb
xcrypt-cfb
cmpsl
mov
and
adc
lret
ja
mov
pop
lock
mov
mov
lock
pop
enter
lods
mov
cmpsb
sub
pop
jmp
cli
rcrl
outsl
push
enter
cmp
lcall
pop
jbe
cwtl
cli
jg
rorb
mov
xor
test
lss
cmp
jge
out
xor
int3
inc
pop
jns
aam
mov
pop
dec
mov
scas
fists
add
sbb
aam
push
jle
or
aaa
leave
cltd
hlt
int3
test
test
pop
dec
pusha
and
pop
mov
mov
mov
xor
in
xchg
cmpsl
lcall
leave
popa
lods
mov
xor
sbb
sbb
or
enter
xchg
inc
pop
xchg
add
ss
xor
dec
push
sbb
in
lret
pop
sti
mov
jg
out
mov
sbb
jl
pop
pop
insb
lcall
pop
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
lock
mov
and
aam
loope
sub
jmp
sbb
fs
rcrb
or
adc
lods
push
sub
inc
pop
dec
stc
fmuls
add
xchg
cld
aaa
pop
mov
outsb
xchg
push
and
cmpsb
push
sub
cmpsl
out
imul
popa
lods
stos
dec
in
enter
pop
movsb
andb
mov
imul
inc
or
adc
mov
out
in
les
mov
jle
pop
add
xchg
ljmp
xor
mov
in
xchg
je
arpl
dec
aas
in
inc
mov
mov
fcoms
inc
pop
pop
cmp
xchg
mov
sahf
rcrl
mov
faddl
mov
hlt
jmp
popa
jg
cmp
or
xlat
movsb
cmp
inc
movb
adc
lods
decl
es
and
or
jno
add
adcb
mov
xrelease
les
sbbl
push
xchg
mov
nop
fiadds
dec
fs
mov
jge
mov
or
jbe
sti
mov
ljmp
dec
adc
das
or
dec
aam
stos
push
inc
xchg
cmp
stos
pushf
mov
mov
and
sti
mov
aas
cmpl
pop
cmp
out
or
std
aad
xchg
bound
xchg
sub
es
loopne
popa
loop
inc
xchg
xor
mov
mov
push
xchg
mov
push
ljmp
ja
iret
mov
jnp
loopne
inc
cld
ja
cmp
int
les
sub
shll
out
rcrl
jg
inc
in
lock
mov
nop
pop
xchg
fs
inc
ds
xchg
test
out
cmpsb
addb
fildll
push
loope
inc
popa
pop
out
outsb
cs
add
xchg
mov
sub
pop
mov
xchg
sub
cld
jl
call
cmpsl
cmpsl
cmpsl
data16
stc
xchg
filds
dec
push
push
js
mov
mov
stos
enter
pop
jp
or
push
mov
xchg
pushf
mov
add
mov
pop
or
lods
out
jp
sub
mov
mov
int3
inc
or
fs
pushf
popf
in
jle
push
sarb
ficoml
lahf
fs
mov
insb
jle
and
sub
stc
inc
call
sahf
int3
out
cmp
cmpl
arpl
aad
push
and
push
push
ss
jae
jl
enter
insb
adc
outsb
call
cmc
mov
test
dec
jb
xchg
inc
test
push
pop
mov
loopne
mov
aaa
add
mov
vfrczsd
add
enter
inc
jbe
icebp
xchg
lods
dec
fdivs
and
xchg
push
insl
xor
aas
push
jnp
mov
arpl
repnz
or
pop
mov
es
dec
or
cmp
add
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
lea
sbb
sbb
daa
adc
cs
inc
mov
aas
dec
scas
ja
bound
pop
adc
mov
add
test
cltd
gs
mov
rorl
std
aaa
fidivs
movl
inc
inc
enter
or
mov
push
outsb
xchg
adcb
or
adc
or
fs
repz
bt
pop
outsl
xchg
mov
inc
pop
mov
fistl
cwtl
call
add
or
push
ja
push
jnp
divb
std
sbb
or
out
cmc
mov
mov
mov
std
lcall
sub
inc
and
pushf
les
ljmp
xor
mov
movsl
icebp
pop
aaa
fmuls
adcl
hlt
adc
cmc
cmp
inc
adcl
mov
mov
cmc
sub
loope
loop
xor
sbb
lock
jp
leave
repz
pop
sub
mov
dec
dec
jge
lea
call
std
movsb
xor
ret
scas
lods
int3
push
sub
js
pop
jle
sub
push
outsl
fcoml
adc
stos
les
es
dec
cmp
mov
dec
inc
and
ds
jecxz
mull
dec
ret
mov
stos
lock
xchg
adc
ss
fnsave
cmp
mov
xor
or
hlt
pop
std
icebp
or
fwait
push
shll
mov
iret
mov
xchg
sub
lahf
and
fdiv
out
mov
push
or
xchg
xchg
shrl
dec
nop
sbb
push
mov
mov
add
leave
aas
lcall
and
sti
inc
mov
sarl
js
hlt
add
mov
lock
dec
ds
mov
test
xchg
loopne
pop
or
sub
mov
and
sbb
int
push
lea
sub
gs
in
int3
or
mov
cmpsb
es
xlat
hlt
jae
cmpl
xchg
lcall
movsl
mov
dec
insl
stc
data16
pop
xchg
ret
push
stc
movsl
popa
cmp
mov
rcl
popf
cwtl
lds
subb
and
imul
cmp
cltd
adc
fwait
pushf
push
loopne
or
mov
pop
pop
lret
stos
lahf
not
aaa
xchg
sarl
inc
dec
lods
popf
outsl
dec
daa
pop
aaa
daa
xchg
sub
fs
add
fnstsw
and
dec
test
imul
jecxz
sahf
cmp
pop
push
inc
es
shrb
movb
rolb
jb
repnz
shrl
dec
aaa
dec
push
sbb
std
daa
inc
das
aad
imul
call
das
push
push
jne
fwait
pop
out
test
insb
subl
pop
mov
pop
out
ljmp
fsts
int3
cmp
pop
add
mov
cmpsb
jnp
mov
add
xchg
cwtl
push
pop
sar
mov
orl
mov
icebp
hlt
mov
nop
jge
fwait
outsb
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
shll
mov
data16
jns
sbb
fldenv
xor
dec
mov
std
enter
jmp
shl
pop
popa
and
sahf
aas
adc
pusha
out
xor
or
ret
scas
decb
jno
sbb
in
ret
in
jmp
rcrb
mov
push
cltd
in
mov
lret
lds
cmpsl
push
pop
lret
lret
imul
inc
mov
out
stos
popf
inc
insl
aaa
xchg
aas
mov
fisubrs
xchg
nop
mov
dec
cmpsl
cmp
jne
lea
in
cmp
outsb
outsl
jmp
cltd
or
dec
in
jecxz
inc
dec
mull
in
adc
xchg
add
repz
adc
xor
cmp
fmull
enter
mov
jo
pop
sar
lret
lods
cmp
cmpsb
cmp
lret
es
mov
jl
nop
stc
or
inc
lret
loopne
push
sub
out
sti
push
mov
dec
mov
or
push
fldenv
outsb
inc
scas
lods
cmp
mov
enter
gs
inc
imulb
stos
call
jge
xchg
fdivl
pop
sbb
push
push
adc
push
xchg
inc
fdivrs
lret
sub
xchg
jecxz
add
stos
pushf
lods
stos
xchg
jo
mov
ljmp
out
filds
jne
popa
jo
ss
sbb
incl
repz
ret
out
in
fs
jp
dec
xor
mov
inc
push
sbb
idivl
addb
add
imul
push
sub
pop
cs
notl
daa
sbb
lret
int
sarl
outsb
inc
ss
in
fwait
imul
ret
xchg
cmpsb
jo
stos
dec
icebp
outsl
std
fs
push
dec
pop
jge
repnz
or
and
sbb
int3
mov
fmull
dec
mov
bound
or
xchg
rolb
les
adc
mov
repnz
adc
into
mov
dec
shlb
out
pop
ja
dec
out
push
cwtl
push
rcr
lahf
push
pop
adc
divl
cmp
add
fs
pop
add
lahf
or
call
cmp
pop
pop
loop
mov
adc
lcall
cli
test
test
mov
inc
add
inc
shlb
cwtl
test
lods
lahf
aas
or
cmpsb
mov
adc
inc
jae
sbb
repnz
mov
pop
add
ret
jp
fcoml
sbb
loopne
mov
call
js
inc
lret
int3
xchg
pop
ljmp
jnp
adc
push
out
jbe
mov
lods
mov
jns
notb
dec
mov
iret
sub
shlb
mov
fists
les
scas
dec
out
jbe
repz
push
faddp
inc
aaa
js
roll
inc
scas
dec
popa
sbb
sub
cmp
arpl
aad
in
aas
add
lret
test
movsb
nop
mov
mov
mov
int
mov
pop
xchg
popl
test
enter
dec
sbb
add
mov
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
daa
jno
mov
pop
sbb
jns
sbb
mov
das
jne
arpl
xchg
lods
nop
cmp
das
cs
jne
ret
stc
push
xchg
ret
jno
notb
popw
outsl
or
imul
lock
test
add
cmp
lds
data16
loop
sbb
pop
adc
xchg
inc
push
out
decl
in
sub
mov
xchg
and
addr16
jecxz
scas
test
out
leave
mov
dec
cmp
lret
or
lods
mov
in
dec
aas
ret
push
aam
sub
jmp
and
outsl
js
test
fstps
stc
xchg
adc
push
xor
adc
lods
jg
mov
sarb
lret
insl
mov
push
imul
inc
pop
lock
andl
xchg
out
or
jge
add
dec
and
cmp
dec
insb
jns
loopne
mov
dec
shll
movsb
push
add
outsl
push
mov
pop
and
and
iret
call
jle
add
dec
je,pt
sbb
stos
or
fpatan
mov
bound
hlt
adc
inc
and
inc
dec
in
fstp
imul
dec
sub
dec
push
imul
inc
push
mov
or
loopne
cli
cmpsb
call
xor
repz
jl
dec
orb
cwtl
xor
mov
pushl
into
repz
aam
loopne
cmp
sub
sub
sub
sub
mov
push
setg
cmp
jmp
test
cmp
in
dec
es
cltd
ficompl
jbe
test
popf
ficoms
push
cmp
mov
adc
ja
mov
ja
add
fmull
or
icebp
scas
cltd
lret
dec
popf
jg
sub
loop
pop
std
mov
aas
cld
loopne
clc
sti
not
pop
cmp
mov
push
hlt
pop
cmp
addr16
rcrl
mov
dec
call
push
sbb
cltd
fsubr
icebp
cltd
ljmp
inc
or
xor
mov
lock
rdpmc
aas
enter
mov
dec
out
in
jecxz
ja
and
jp
jbe
aas
pop
jge
test
pop
xchg
cli
aam
jecxz
xor
ret
out
push
mov
fistl
repnz
pop
pop
mov
pop
sub
test
aad
or
insl
push
mov
jns
fimuls
lds
sub
push
xor
mov
jl
push
xor
sub
adc
scas
lods
push
sbb
jae
mov
mov
cmc
gs
xor
and
push
sub
dec
dec
jae
pop
pop
push
scas
inc
ds
lds
xchg
jp
sub
xor
sub
push
lret
nop
jg
mov
shrl
mov
int
xchg
add
outsb
add
hlt
jge
or
int3
mov
shlb
ljmp
push
sub
shlb
outsb
xor
dec
pop
xchg
cltd
js
adc
push
mov
stc
movsl
mov
rolb
sti
dec
mov
jle
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
sahf
cltd
mov
je
sbb
leave
inc
adc
jbe
push
sbb
mov
push
pusha
mov
dec
jecxz
enter
sbb
or
test
cltd
cltd
rep
mov
pop
or
call
aam
shl
and
stos
push
dec
push
fcmovnu
xor
jmp
pusha
aas
jae,pt
test
out
and
popf
mov
or
lret
popa
ret
pop
cmp
gs
sarb
sub
rcrb
cmp
fstpt
xchg
daa
lea
out
and
pop
mov
test
adc
rolb
cmp
pop
aaa
jg
push
in
and
andl
out
and
stc
mov
outsl
xchg
or
jb
ret
sbb
xchg
jle
adc
mov
call
mov
incl
lock
cmpsl
das
pop
inc
jb
inc
stos
pop
mov
push
icebp
in
pop
push
pushf
leave
out
fsubl
adcb
dec
pop
or
and
rclb
mov
mov
into
sub
cli
outsl
pop
sbb
rcrl
jmp
mov
pop
mov
pop
aad
and
xchg
sarl
sbb
pushaw
or
test
lahf
inc
into
add
xrelease
mov
ds
cmc
les
or
or
or
int
sbb
mov
push
xchg
xchg
call
inc
pop
jne
rclb
xor
movb
mov
sub
int3
leave
sub
adc
movsb
hlt
sarb
aad
insl
orl
clc
mov
xor
gs
xchg
jb
lcall
dec
lock
mov
rol
pop
fwait
inc
inc
clc
ret
mull
cmp
loopne
inc
test
test
inc
stos
dec
jns
pop
in
sarl
popf
jp
inc
outsl
rol
xor
adc
aaa
loope
enter
hlt
push
ret
or
push
push
ffree
pop
cmp
pop
mov
dec
movsl
push
mov
dec
pop
mov
dec
test
or
insb
popf
movsb
push
and
mov
repnz
out
xchg
test
push
and
jns
xchg
adc
pop
xor
jo
jge
xor
inc
loopne
test
mov
or
or
xchg
dec
ret
push
and
mov
push
cs
mov
imul
mov
xor
shlb
repz
mov
and
imul
pmuludq
sbb
dec
cmp
hlt
pop
add
pop
ret
ss
aad
pop
mov
lcall
inc
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
mov
sbb
and
sbb
rcr
shlb
pusha
xchg
xchg
stos
and
sub
xor
push
mov
mov
mov
push
sbb
mov
jo
popf
or
fcmovnu
mov
xchg
daa
pop
repz
aas
and
cmp
clc
sub
fwait
rolb
sbb
fmulp
aaa
xor
sub
fldt
inc
mov
adc
xor
aaa
insl
cmp
xchg
inc
sub
add
cmpsb
out
xlat
es
enter
mov
pusha
iret
aas
and
cs
icebp
imul
lds
pop
hlt
daa
pushf
add
outsl
adc
xchg
dec
sarb
cltd
lea
cmc
pusha
lea
cmp
test
mull
dec
shl
pop
aaa
test
xlat
or
jmp
aaa
push
cmc
push
add
xchg
mov
mov
inc
psraw
std
rolb
cmp
xor
push
icebp
imulb
loope
dec
cmc
ss
test
call
jns
cmc
iret
in
xor
test
outsb
ret
incb
inc
sub
sub
jmp
inc
mov
pop
push
sbb
outsb
cs
je
insb
ds
jl
repz
in
arpl
pop
jmp
sahf
or
fldl
xor
and
sbb
jle
test
cwtl
fstpt
rolb
das
outsl
jo
pushf
mov
cmp
push
pop
cmp
sbb
xor
mov
test
in
sub
lcall
sub
lret
jae
loopne
adc
cmp
mov
cmpl
cwtl
je
add
mov
add
loop
sahf
sub
inc
cmp
jge
popw
dec
mov
inc
jl
ret
fucomip
lea
subl
mov
in
push
sub
or
incb
jle
dec
dec
cmc
dec
sub
pop
aas
jno
sub
jp
xor
test
data16
ret
cltd
add
fsts
cs
adc
fstpl
and
adc
add
aad
or
xchg
inc
cld
mov
inc
inc
or
sbb
test
xchg
pop
ljmp
jns
xlat
mov
xchg
loope
enter
addr16
daa
bound
out
and
sub
pop
sar
mov
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
push
jo
dec
sbb
scas
adc
sbb
push
xor
popf
sbb
add
mov
pop
fistpl
ja
or
sahf
rorl
andl
sbb
fsts
mov
jle
push
mov
pop
sbb
push
push
dec
in
pusha
leave
fsub
mov
xor
mov
inc
dec
jmp
out
dec
aam
xor
xchg
sbb
mov
into
pop
sti
jmp
add
ficoms
xchg
roll
jne
js
arpl
and
jo
fxtract
rcl
out
jne
je
popf
fucomp
push
pop
sbb
mov
adc
push
arpl
xlat
pop
push
popa
movl
cmp
lods
jmp
sahf
push
xchg
imul
or
push
mov
movsb
and
icebp
pop
mov
cwtl
or
scas
mov
jb
pop
inc
fidivl
cmp
insl
enter
and
fisubs
shlb
lock
fldenv
insb
xchg
addr16
out
inc
and
in
xchg
adc
aad
mov
mov
dec
out
mov
sahf
sti
xchg
pushf
xchg
cmpsl
mov
stos
icebp
js
adc
adc
dec
imul
mov
mov
popa
mov
mov
push
cs
mov
push
pop
fdiv
addr16
jbe
cmc
mov
xchg
int
stc
adc
mov
jbe
inc
cmp
cmp
push
cmp
aad
clc
cld
imul
sarb
notl
adc
stos
cmp
loopne
sbb
shll
push
loop
lcall
insb
cmpsl
xchg
cmp
setp
addr16
pushf
add
lods
cli
addr16
in
xor
fcoml
lcall
mov
jnp
enter
ds
mov
push
les
das
pop
add
xchg
fistps
bound
lret
sbb
cmp
repz
mov
cmp
aam
or
and
icebp
pop
pop
js
mov
iret
mov
subl
mov
and
and
xchg
dec
mov
xchg
es
sub
xchg
cmpsl
es
test
lds
ljmp
lds
test
add
out
xchg
out
push
push
pop
push
shr
jb
fnstsw
pop
stos
jge
icebp
out
xor
sahf
mov
jge
negb
ljmp
fwait
in
dec
imul
pop
xchg
ret
mov
mov
jae
inc
or
fisubs
es
es
inc
xor
int
clc
imul
fldl
popa
ljmp
mov
jne
mov
mov
je
dec
je
mov
xor
lret
dec
aas
test
mov
out
xor
mov
mov
mov
test
pop
add
bound
adc
pop
mov
cltd
clc
cmp
jbe
pop
xor
movsl
push
imul
and
loopne
jmp
pushf
sbb
lcall
roll
cmp
mov
mov
xor
sidtl
cmp
subl
in
inc
mov
dec
and
sub
jg
imul
mov
andl
or
cmc
push
and
pop
push
bound
or
aas
dec
cmp
sub
scas
xchg
and
xchg
sarl
insb
out
in
out
xlat
add
mov
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
ret
adc
sbb
mov
stc
pop
sbb
xchg
mov
or
ficomps
mov
cs
call
add
ljmp
ret
clc
mov
sbb
loop
add
cmp
dec
inc
push
add
mov
lds
popa
xor
je
scas
jecxz
add
jge
cmpsl
pusha
mov
hlt
xor
in
pop
sbb
in
sbb
or
jno
mov
jmp
mov
mov
test
xchg
fmull
shrb
xchg
mov
adc
hlt
out
addb
and
cli
rcll
out
test
inc
add
in
cmp
mov
shll
push
jnp
xor
sub
ret
lods
dec
push
xchg
test
popa
xchg
adcb
adc
sbb
adc
add
nop
adc
out
addr16
mov
mov
fcoml
ljmp
jmp
scas
jmp
xchg
sbb
aam
add
mov
lret
sub
xchg
loope
idiv
push
fbstp
pop
adc
fdivrl
jae
adc
stos
xorl
in
fstl
xchg
pop
pop
mov
pop
sbb
aad
cs
inc
and
sahf
dec
test
movsl
xor
clc
cltd
push
or
push
lods
mov
or
and
sbb
loopne
aad
jmp
lahf
cld
mov
and
inc
xor
and
sub
add
or
movsb
call
daa
inc
cli
cmp
les
nop
mov
xchg
jbe
inc
das
movsl
sbb
rolb
sarb
mov
or
jl
aas
pop
je
dec
xor
sbb
xorl
jle
sub
mov
and
shll
and
mov
orb
stos
aam
jno
lock
aaa
scas
pop
sbb
or
xlat
pop
outsl
xchg
push
out
mov
loop
fwait
mov
jge
cmpb
call
aad
call
sub
jmp
pop
icebp
test
xchg
xchg
adc
leave
mov
mov
inc
inc
mov
xor
imul
lds
sbb
rcrb
test
mov
shr
mov
mov
mov
vpsubb
lret
mov
adc
clc
std
pushf
and
jnp,pn
adc
inc
adc
mov
pop
movsl
loopne
sub
outsb
pop
rorl
mov
lock
sbb
stos
sub
mov
adc
adc
ret
gs
mov
imul
int3
push
stc
add
cli
imul
ret
xor
sub
inc
cmp
fdivrp
les
add
dec
lock
mov
inc
mov
jne
cmp
inc
call
ja
jp
fsubrl
cmp
icebp
nop
addr16
dec
loopne
push
xor
push
leave
mull
ljmp
imul
int3
push
adc
dec
mov
loope
fisubrl
lds
and
mov
add
inc
mov
out
sub
sub
cmp
xor
push
adc
testb
or
pushf
lcall
cmc
jo
pop
mov
cmp
add
aaa
sub
xor
pushl
les
jae
or
aaa
add
and
dec
pop
add
repz
add
call
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
outsb
xorl
or
xor
inc
ja
test
insb
jne
mov
adc
mov
je
stc
ljmp
sbb
lret
sub
and
add
mov
push
push
pop
outsl
xchg
mov
es
stc
mov
dec
lods
repz
dec
push
fs
daa
xor
push
and
and
int
pop
dec
inc
pushf
iret
lds
ret
dec
lret
fsubr
fs
ljmp
arpl
xor
xchg
mov
js
adc
pop
aam
in
test
aaa
inc
cld
adc
xor
or
in
inc
mov
jmp
ja
xor
pop
pop
jp
and
mov
iret
dec
in
and
jg
cmp
cmc
dec
imul
and
sub
dec
negb
pop
lcall
outsb
mov
dec
xchg
inc
loop
scas
jbe
lcall
shlb
mov
pop
cmp
lret
xchg
dec
je
jb
imull
fiaddl
ds
gs
adc
addr16
stc
mov
pusha
pop
push
and
pop
xor
push
andb
aas
adc
aam
mov
mov
stos
js
ret
mov
and
inc
mov
in
push
mov
push
inc
popa
mov
notl
xchg
addl
cmp
jle
movsb
repnz
push
push
bnd
ss
xchg
jns
test
popf
ror
sub
std
pop
jns
pop
add
insb
mov
popf
or
sbb
rcrl
inc
add
mov
dec
scas
cmp
maskmovq
notl
idivb
xchg
dec
pop
insl
mov
xchg
push
pop
test
push
pushf
jle
shl
cld
push
pop
in
lea
xorb
or
xchg
lret
cmp
cli
insl
stc
add
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
xchg
push
fistpll
cmp
sbb
adc
sbb
inc
imul
jl
out
push
lods
push
ret
pop
pop
inc
push
jecxz
xor
data16
fnstsw
dec
vaddsubps
sub
aam
add
hlt
push
stos
adc
mov
push
xchg
or
jl
int
mov
movsl
xor
movb
xor
sbb
pop
mov
and
and
popf
cli
jmp
sub
push
lds
shlb
and
push
imulb
test
pop
fdivl
in
rclb
idiv
jb
rcrl
shrl
xor
test
cmp
mov
int
cmpsb
fucomp
and
test
jb
jg
into
xchg
stc
cmp
mov
inc
call
fcomps
mov
mov
cltd
mov
add
or
enter
dec
imul
ret
das
cmp
xlat
mov
leave
lcall
fildll
or
jae
iret
sbb
punpcklbw
jmp
and
daa
popa
push
aaa
popf
popf
sub
outsl
xchg
ljmp
jmp
push
mov
jae
test
movsl
sti
and
sub
xor
cltd
pop
fsubrl
push
in
in
sub
cmc
sub
outsb
xchg
add
cmp
pop
jnp
mov
push
mov
test
jo
push
in
push
sti
sub
aaa
sahf
fstl
loopne
add
mov
dec
mov
clc
mov
pop
call
sub
stos
jo
mov
jae
into
sub
xor
cmc
jbe
mov
cmp
popa
loop
into
and
mov
out
sti
cs
sub
inc
jae
jecxz
pop
jge
and
sub
scas
nop
adc
call
lret
jge
inc
int
cmp
and
lahf
in
mov
jecxz
xlat
mov
adcl
mov
add
frstor
rorb
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
rclb
sbb
notb
sbb
mov
lret
inc
adcb
mov
daa
data16
icebp
inc
insl
mov
out
mov
jl
rol
push
pop
repnz
sub
stos
imul
jb
ljmp
mov
jnp
fsubrs
shrb
lahf
ror
inc
sub
or
add
sbb
mov
pop
jo
out
sub
ds
in
aad
repnz
mov
jo
gs
mov
and
dec
es
mov
div
imul
add
and
fldenv
dec
je
push
mov
jnp
jo
jnp
daa
mov
cmpsb
scas
push
stos
in
mov
push
push
mov
aaa
test
sbb
jnp
adc
cwtl
jg
sub
xacquire
insb
popf
mov
inc
xor
popf
stos
cld
adc
imul
push
sub
adc
mov
xlat
mov
adc
aas
jne
into
inc
mov
mov
repz
pop
int
mov
inc
push
mov
int3
mov
mov
xchg
mov
xchg
lret
jecxz
inc
pusha
movsl
sbb
pop
mov
and
cltd
xchg
in
or
flds
nop
sbb
sbb
sbb
clc
pop
and
sbb
cmp
xchg
stos
xchg
xor
movsb
push
iret
leave
int
lcall
roll
aaa
sub
das
icebp
sub
out
in
sub
lcall
loopne
push
xor
and
pop
lret
inc
or
sbb
dec
mov
andl
sub
popw
xlat
repz
aaa
cwtl
push
ret
xchg
and
mov
mov
std
ss
pop
mov
rcll
or
add
jecxz
mov
call
mov
mov
pop
lcall
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
outsl
add
test
xor
sbb
inc
xor
movsb
test
and
mov
int3
lret
inc
mov
mov
out
std
aam
mov
sub
cmp
enter
jns
mov
jnp
jno
ret
dec
mov
mov
cmpsl
stos
pop
xlat
loope
imul
push
in
inc
fsubl
lahf
std
mov
sahf
in
jg
fsubrp
lret
sti
inc
daa
popa
jne
mov
scas
mov
push
pop
dec
cmp
cwtl
jae
arpl
or
cld
push
push
sub
mov
and
cmp
movsl
les
je
das
cmp
scas
mov
lret
cmp
cmp
ja
dec
xchg
mov
out
cmp
xchg
cmc
push
sahf
js
and
and
out
mov
int3
pop
inc
inc
sbb
mov
mov
fdivrl
pop
daa
push
ss
hlt
iret
es
test
mov
lret
xor
xchg
sbb
push
fucomip
mov
xchg
dec
cli
insb
mov
sub
shll
inc
mov
loope
push
ljmp
les
sbb
sub
jle
sbb
mov
cld
or
lock
push
dec
add
pusha
lods
xchg
sub
fsqrt
in
dec
ret
inc
out
fiadds
inc
mov
xor
mov
mov
xor
aam
and
jno
frstor
xchg
cmp
mov
adc
ret
cmp
xchg
xchg
fimull
movsb
jb
js
cmp
inc
inc
dec
movsl
adc
hlt
xor
cs
jno
inc
pop
into
in
clc
repz
xchg
push
xchg
outsl
xor
inc
daa
mov
adc
mov
pop
mov
mov
mov
cmp
vpminub
inc
popa
rep
push
add
push
push
adc
jmp
jbe
push
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
out
xor
out
sbb
maskmovq
mull
xchg
add
mov
sub
out
and
mov
or
mov
pushf
dec
push
cmpl
cs
dec
hlt
mov
aad
or
fadd
xchg
pop
xor
lock
daa
add
fisttpl
fs
repz
jno
dec
mov
les
fldcw
add
lret
hlt
outsb
ret
scas
sti
out
add
std
test
rol
les
out
ret
stos
xchg
mov
jb
data16
dec
out
call
shl
pop
jno
lcall
scas
push
jae
sbb
scas
mov
fdivrl
nop
shl
sarb
sbb
lret
xorb
out
outsl
dec
lret
out
dec
pop
ret
shr
xchg
das
fs
push
loope
cs
mov
fldt
gs
mov
lret
shll
mov
cmpsb
cmp
mov
arpl
negb
mov
fimuls
icebp
cmp
lock
adc
movsl
jl
shlb
pusha
adc
sbb
add
imul
test
inc
pop
push
jecxz
iret
push
mov
mov
add
popf
orb
daa
lea
push
out
mov
lcall
shlb
cmp
add
mov
mov
lret
sub
xchg
push
mov
xchg
in
inc
addr16
dec
cli
imul
loop
ret
lds
fisubl
cmp
xor
scas
mov
push
adc
mov
or
mov
inc
add
test
dec
inc
ficompl
scas
gs
inc
dec
mov
call
sub
out
leave
stos
push
sbb
enter
stc
inc
jae
mov
arpl
mov
shr
and
stos
addl
fistl
xor
push
pusha
scas
imul
adc
add
add
and
dec
mov
push
out
fcompl
ljmp
sbb
notb
sbb
outsb
testb
lods
test
mov
sbb
outsl
adc
divl
mov
sub
push
pop
clc
xchg
bound
mov
pop
mov
mov
mov
xor
fs
int
mov
aas
push
cltd
inc
pop
repnz
in
in
outsb
loop
mov
adc
xor
out
dec
enter
sbbl
sbb
lods
shlb
stos
pop
mov
pop
mov
or
ret
and
repnz
pop
add
call
add
aas
push
and
arpl
ljmpw
cmp
jne
xor
cltd
ds
cltd
xor
mov
and
leave
mov
insb
cs
jo
push
les
inc
ljmp
push
pop
pop
js
sub
popa
xchg
xchg
fnstenv
jae
and
lock
push
adc
or
push
aad
fs
and
scas
cmpsb
fs
cli
add
daa
jmp
mov
sub
sub
xor
in
add
cmp
mov
mov
xchg
sbb
adc
int
sub
sbb
jbe
js
and
sub
mov
inc
sbbb
nop
ja
add
lock
loope
cmpsl
xlat
fs
aaa
rorl
mov
pop
sti
cld
or
jnp
fidivrs
adc
jnp
xchg
gs
mov
dec
mov
add
negl
xchg
js
insl
inc
addl
icebp
dec
and
mov
into
mov
mov
cmp
stos
arpl
popa
sahf
add
add
mov
jmp
dec
inc
add
pushf
icebp
add
or
and
fsubs
mov
jb
add
mov
jne
mov
mov
test
lcall
arpl
mov
fdivs
fldl
sub
dec
jns
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
insb
mulb
mov
mov
lret
inc
mov
push
addr16
test
cmp
dec
sub
int
xor
xchg
dec
sarl
xchg
pusha
rolb
sub
leave
sbb
mov
pop
gs
cld
jp
enter
loop
sbb
shlb
mov
mov
xchg
pop
int3
inc
and
subb
ja
jns
bound
notl
adc
lahf
xchg
cmp
mov
push
movsb
cld
cmp
fadds
and
repz
jge
and
lahf
cmp
cli
cs
push
mov
sub
cmp
in
insb
repnz
les
rclb
mov
sbb
cwtl
jne
daa
push
pop
ds
data16
lods
add
push
add
stos
insb
shrl
mov
mov
push
in
and
ljmp
xchg
stos
push
jmp
cld
inc
jbe
in
xor
cmpsb
cmp
ss
jl
xchg
stos
lahf
or
xor
dec
insl
dec
or
ffreep
mov
sub
idivb
popa
pop
inc
fs
gs
push
pop
sbb
insb
jo
scas
push
dec
nop
lahf
stc
xchg
aam
push
add
adc
sub
xchg
mov
pusha
or
ficompl
mov
dec
cli
pop
pop
sub
push
pop
mov
xchg
fdivrs
push
push
mov
cmp
cwtl
mov
scas
mov
xchg
jl
fsubs
mull
repnz
pop
sbbl
repz
mov
leave
mov
jg
ljmp
icebp
mov
pop
mov
push
les
xchg
add
or
insl
mov
dec
inc
aad
mov
ret
mov
lahf
je
mov
enter
push
movsb
movsl
jae
fildl
mov
sbb
inc
dec
enter
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xor
es
leave
repz
fs
into
movb
outsb
xor
dec
ficoms
jg
xor
mov
jle
outsb
jne
cmc
push
pop
arpl
imul
and
stc
and
rclb
bound
movsl
dec
sbb
outsl
out
in
jb
add
cmpsl
mov
mov
mov
dec
movsb
inc
cld
inc
add
push
sbb
notb
pushf
std
fldenv
movl
pusha
scas
adc
lahf
sarb
repz
adc
ret
sbb
stos
test
flds
jnp
mov
in
cmp
inc
mov
and
inc
xchg
cmpsb
sub
mov
push
int
outsb
pop
lahf
and
das
cmp
sub
gs
pop
push
mov
rorb
loop
call
sub
ret
sub
jmp
push
daa
and
dec
inc
out
nop
ffreep
xor
fstpt
fsubrl
adc
ja
adc
in
andl
testl
lock
leave
add
pop
mov
mov
cmp
and
idiv
add
dec
pop
jl
pusha
add
lea
pop
gs
fists
push
enter
out
fs
jle
sub
sub
pushf
adc
push
outsl
jge
or
out
jae
leave
mov
frstor
loop
repnz
sarl
sbb
dec
mov
push
scas
sbb
les
add
aas
shrl
and
xlat
sbb
pop
ljmp
mov
addr16
ss
mov
push
outsb
mov
call
imul
lret
pusha
adc
adc
icebp
pop
or
aad
or
xor
mov
popa
push
jg
out
dec
imul
add
push
cld
adc
loop
fdivs
dec
pop
jae
sti
int3
lcall
add
jecxz
xchg
mov
xchg
push
ret
lahf
pop
push
push
call
test
in
adc
out
into
mov
push
or
push
mov
xor
je
jbe
push
xor
aam
rcrl
push
int3
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
mov
sbb
pop
adc
sbb
lret
stc
xor
mov
jns
lahf
mov
add
or
xor
inc
mov
push
cmpl
stc
movsb
ret
hlt
pop
ja
cmpb
push
movsb
dec
adc
outsl
push
mov
push
imull
mov
test
cwtl
inc
insb
es
jbe
in
jns
mov
pushf
sub
push
dec
jmp
stos
test
arpl
cmp
insl
lret
test
std
mov
xchg
mov
dec
clc
aad
and
push
out
ret
loope
sti
jae
mov
xchg
aas
or
loop
jnp
ljmp
add
int3
mov
call
outsb
cmp
aam
icebp
sub
rcl
dec
xchg
cmpl
scas
mov
fldcw
dec
sbb
je
fsubrl
pushf
notb
clc
adc
add
or
jb
bound
jge
xorb
mov
aas
dec
and
or
test
sti
inc
lret
xlat
xor
push
repz
mov
les
push
loope
push
sbb
push
jne
jns
xchg
sahf
pop
mov
dec
outsb
jae
adc
sub
mov
jno
jp
or
add
cmc
inc
inc
pop
pop
pop
push
lahf
lods
inc
dec
xor
inc
cmp
adc
mov
sbb
cmpsl
movsb
aam
aas
add
std
jno
push
pop
nop
ficomps
repnz
xchg
ror
mov
pop
sub
in
sub
or
int3
repnz
clc
fldt
stc
or
pop
aam
dec
seta
jnp
divb
mov
jne
test
pop
icebp
fs
popf
sub
cmpsb
xor
ret
es
cmp
lea
stos
mov
mov
xchg
addr16
pop
jns
and
je
arpl
sbb
adc
repnz
dec
in
and
add
std
cltd
mov
fsubs
sub
out
and
std
sbb
mov
call
adc
mov
movsb
xchg
xchg
or
enter
dec
or
repz
adc
sub
imul
popa
in
mov
add
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
push
sbb
sbb
adc
sbb
popf
aad
out
mov
xor
mov
xor
fsubrs
adc
jecxz
out
sahf
push
sbb
lods
xchg
mov
call
mov
jg
xor
xor
inc
dec
cmpsb
cmc
lea
subl
jl
pop
add
xor
dec
cmp
and
xor
jle
fidivs
lock
lret
addr16
sub
lcall
add
in
cmp
pop
mov
sub
int
in
inc
push
sarl
dec
ret
push
gs
in
js
cmc
fistpll
stos
pop
int
and
cmpsb
lods
lret
dec
clc
je
inc
popa
sahf
xor
mov
cmpsl
std
dec
stos
pop
pop
fidivs
fstl
rorb
mov
mov
lcall
shlb
jmp
in
dec
pop
sub
jno
push
in
pop
cs
dec
clc
sub
dec
sub
and
mov
stos
push
mov
add
jo
and
cltd
jg
sub
sbb
cmc
add
adc
ss
mov
ljmp
clc
aaa
popa
stos
adc
clc
adc
addl
inc
and
or
inc
xor
sti
mov
xor
orl
stos
test
mov
jbe
lcall
mov
icebp
in
int3
aad
pop
loopne
pop
fnstsw
mov
incb
mov
pop
push
xor
cmp
xlat
mov
mov
scas
inc
sub
xchg
and
push
mov
xchg
in
inc
add
inc
adc
in
cmp
adc
pop
pushf
int
cmpl
inc
jns
jmp
mov
stos
or
push
movsb
dec
add
dec
call
sarb
int3
repz
in
or
data16
sbb
xor
push
loop
dec
lcall
std
fidivs
data16
hlt
mov
inc
or
je
jmp
mov
out
lea
inc
xchg
sbb
cwtl
xchg
push
or
or
xor
jns
shrb
xchg
mov
out
or
mov
cmpl
xchg
orb
nop
movl
clc
lea
xchg
push
xchg
mov
movsb
add
cs
sbb
dec
dec
out
mov
pushf
jmp
xor
adc
js
pop
mov
xchg
jae
iret
and
or
sbbl
scas
outsb
pop
clc
jno
cmp
mov
fcomps
jo
mov
push
repz
fsubp
xor
call
insb
xor
ret
insl
jne
push
or
pop
add
hlt
xchg
pop
inc
pop
in
dec
leave
pushf
rorb
cmp
xor
imul
fwait
inc
mov
aas
xor
lret
cwtl
xor
outsl
insb
pop
mov
xor
dec
cli
mov
std
push
jb
mov
lea
icebp
int3
jmp
dec
repnz
lret
adc
mov
stc
or
movsb
sbb
xor
mov
iret
rclb
lods
les
inc
inc
xchg
aad
xor
xchg
inc
ret
add
bound
shl
jl
sub
arpl
inc
xor
ret
js
push
push
repz
sbb
sub
in
lods
xor
movsl
mov
cmp
add
icebp
adc
add
add
scas
enter
addl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
pop
daa
stos
inc
adc
sbb
adc
sbb
mov
xchg
cmc
or
sub
push
dec
daa
jl
adc
dec
andl
clc
or
out
fadd
xor
stc
ret
mov
jb
adc
mov
test
add
cmpsl
push
push
out
cs
ficoml
fsubrs
adc
les
jp
outsb
xchg
popa
push
clc
jp
push
sahf
cmc
dec
aad
hlt
aam
dec
push
xor
xchg
cwtl
cmpsl
lock
push
leave
inc
inc
push
out
call
dec
popf
mov
inc
popf
sbb
dec
sbb
fistpll
sub
mov
sbbl
jns
dec
frstor
or
loop
mov
mov
pop
push
outsb
faddp
inc
out
cmp
jbe
loopne
add
adc
mov
jo
pop
out
dec
add
pop
mov
mov
lret
add
pusha
shrb
test
in
inc
bound
or
repnz
loopne
notb
or
ss
repnz
stos
mov
fistps
rcrl
inc
sbb
pusha
pop
out
xchg
inc
fdivrs
pushf
iret
push
negl
pop
pushf
push
jne
or
je
xlat
sbb
scas
leave
enter
mov
ret
or
loopne
lds
addb
jbe
push
jns
shl
or
add
jmp
ja
cltd
call
mov
pusha
push
push
aaa
mov
imul
repz
ljmp
call
shll
imul
mov
cmpsl
mov
loope
push
xor
rclb
loopne
jmp
mov
lods
push
xchg
lods
out
int3
jne
and
test
push
leave
lcall
mov
sbb
leave
push
dec
lock
jno
mov
pop
sahf
cltd
jg
push
shrl
movsb
xchg
and
push
mov
jns
dec
leave
dec
out
inc
imul
cs
mov
lock
popa
push
sub
negb
int3
cmpsb
pop
enter
lods
sahf
mov
rolb
add
push
inc
push
adc
or
mov
or
push
js
pop
ret
mov
jb
mov
push
jle
stc
and
jecxz
xchg
xlat
das
sub
xor
leave
iret
dec
fdivrs
inc
fstl
sbb
std
pop
mov
xor
add
mov
and
int3
bound
mov
movsl
mov
cmpsb
in
mov
rcrb
jbe
cmp
mov
ja
out
out
sti
arpl
mov
sbb
xor
and
adc
and
cld
mov
sbb
ss
test
loopne
cmp
mov
push
je
addr16
add
jb
adc
in
mov
sarb
add
and
and
jecxz
add
jge
stc
jbe
lods
jnp
inc
je
mov
ljmp
inc
add
cmp
adc
adc
insb
push
push
mov
jae
mov
scas
lods
fldpi
mov
popl
rolb
ret
int
jae
dec
mov
jo
inc
sbb
add
xchg
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
pop
cmpl
sbb
adc
sbb
push
fdivrp
or
push
fsubrs
pop
xor
imul
xor
insl
scas
mov
repz
push
mov
sub
stc
cmc
aas
das
dec
ljmp
imul
mov
dec
js
insb
and
icebp
jle
push
pop
test
test
shrb
and
int3
pop
push
and
xchg
sbb
push
jne
lods
fists
mov
inc
outsl
mov
jbe
test
or
jg
std
imull
rclb
push
rcrl
ss
add
sbb
fdiv
sbb
test
pushf
and
js
shlb
inc
jg
adc
loop
rol
ja
sub
scas
cmp
lea
sub
test
mov
cmp
sbb
mov
js
cli
sub
jbe
jg
sbb
outsl
mov
mov
push
lods
mov
mov
in
sub
mov
ret
movsl
out
xor
mov
pop
lcall
jne
call
pop
mov
call
imul
data16
mov
or
lret
scas
pop
lret
ss
push
imul
push
mov
lock
sub
and
inc
adc
outsb
insb
sarl
loope
cmp
cmpsl
test
sub
call
imul
pop
inc
cmp
xor
cltd
cs
ljmp
xor
bound
xchg
fs
lret
and
mov
sub
out
dec
mov
hlt
jae,pt
call
adc
in
jnp
dec
insl
movsb
and
push
mov
or
and
inc
rcrb
pop
pop
jecxz
iret
sbb
pop
mov
add
idiv
stc
xchg
pushf
jbe
pushf
cmpsb
pop
fisttpll
inc
mov
push
js
mov
mov
mov
mov
push
in
xchg
mov
xor
add
add
jg
push
mov
js
dec
inc
ret
bound
dec
je
sti
pop
aam
arpl
clc
jb
nop
sub
dec
enter
mov
xchg
cmp
mov
repnz
lcall
mov
stos
adc
and
movsb
lock
arpl
dec
sub
inc
mov
fidivrl
cli
mov
jns
cmpb
rclb
lret
push
popa
sbb
fnstenv
cmpsb
jns
sub
dec
xor
fcompl
test
mov
push
fsubrp
insb
xchg
add
push
out
lods
xor
filds
cmp
push
dec
nop
out
std
push
push
sbbl
mov
mov
push
mov
mov
mov
mov
dec
popf
lcall
lcall
mov
cs
push
xchg
pop
cmc
add
and
jle
dec
pop
inc
call
pushf
out
sub
lcall
test
cmp
stos
popa
jl
xchg
inc
andl
lods
es
push
mov
negb
scas
clc
pop
pop
push
inc
pop
roll
xor
jle
adc
shl
xor
cld
aaa
lods
hlt
xlat
cltd
pop
sbb
lea
cli
mov
fisubrs
push
mov
lock
sub
ss
scas
cmpl
je
sbb
sub
push
addb
pushf
add
add
mov
push
in
xor
cmp
sbb
adc
sbb
xlat
cmp
mov
or
rcr
rorb
mov
das
loop
push
mull
mov
dec
sub
icebp
mov
inc
jne
mov
daa
sub
add
inc
dec
inc
push
frstor
mov
gs
sub
fsqrt
push
idivl
cmp
cmc
xrelease
cli
in
dec
push
jbe
mov
mov
mov
mov
js
mov
pop
xlat
outsb
loopne
test
mov
mov
lret
addb
sahf
fucomi
jbe
out
scas
stos
pop
test
imul
lahf
adc
mov
daa
mov
and
sub
jne
arpl
xor
test
fstps
and
dec
in
fs
push
or
sub
aaa
sahf
std
insb
daa
adc
imul
cmpsl
xchg
sbb
mov
aaa
aam
cld
xchg
hlt
sbb
test
sub
or
mov
int3
out
pushf
inc
into
and
cmp
pop
sbb
xor
aad
inc
pop
sub
out
inc
jg
inc
inc
sbb
das
jno
push
jo
pop
fadds
dec
hlt
dec
mov
aas
dec
xor
bnd
mov
pop
test
adc
mov
imul
inc
shlb
xlat
shrl
mov
mov
rcrb
dec
es
dec
push
mov
or
mov
mov
sub
fnsave
sbb
in
rcl
add
test
adc
or
iret
in
mov
lock
jecxz
movsb
in
in
out
push
out
prefetcht0
cmp
push
enter
mov
add
leave
les
dec
rcrl
hlt
pop
arpl
stc
in
pop
pop
dec
adc
insl
je
push
ljmp
sbb
jae
or
xlat
jmp
jge
fisubs
xchg
jb
loopne
ftst
inc
xchg
push
mov
movl
or
pop
pop
jmp
sarb
imul
clc
adc
jne
nop
sub
ficomps
test
or
repnz
mov
cmp
sbb
shlb
test
inc
cltd
prefetch
xor
adc
cmp
jmp
das
mov
aaa
push
negb
xchg
ds
mov
add
stos
sub
shlb
dec
pop
ja
cwtl
mov
sub
inc
mov
js
xor
rcrb
leave
sub
mov
shrd
xchg
mov
push
jb
imulb
inc
add
xor
mov
mov
js
pop
xor
aam
xchg
pop
mov
ret
mov
or
push
mov
mov
cs
jnp
mov
shll
test
repnz
loop
add
jbe
jnp
cmp
loopne
inc
fidivrs
xchg
fmuls
pusha
sub
ds
aas
pop
ljmp
in
std
loope
dec
jnp
js
sub
int
dec
pushf
and
push
jg
dec
add
ds
ret
stos
add
data16
mov
mov
xchg
mov
cmp
popa
sub
mov
punpckhwd
pop
outsl
or
xchg
mov
mov
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
pop
xchg
es
lock
icebp
in
and
pop
out
or
and
jne
test
jl
test
lret
aas
loop
clc
addr16
aad
cmpsb
xor
sub
jl
das
dec
rclb
mov
imul
inc
dec
lds
std
clc
aam
in
stos
mov
mov
and
pop
mulb
mov
loope
xchg
fcoms
xor
or
pop
push
scas
addr16
dec
lods
push
jno
mov
js
lret
jnp
mov
mov
iret
cwtl
out
cld
fisubl
mov
jge
or
testb
fsubs
pop
lods
in
and
aas
int3
xor
jp
add
lahf
sbb
xchg
imul
pop
test
xchg
nop
or
iret
fdivrp
or
clc
push
mov
xor
iret
push
inc
arpl
lret
jmp
adc
bound
and
sbbb
push
push
ja
stc
mov
dec
enter
rol
loope
ja
xor
cmp
dec
mov
jae
notl
sbb
mov
cld
mov
rcr
push
pop
sti
add
push
xchg
mov
std
cs
xchg
dec
mov
push
data16
ja
mov
fildll
pop
or
in
in
inc
pop
jns
ljmpw
pop
push
lds
push
ss
xor
jno
daa
aaa
test
xlat
sub
inc
inc
adc
adc
pop
mov
cmpsb
stc
xchg
push
std
imul
stc
sbb
clc
divb
shll
sbb
inc
mov
aam
out
lret
jae
jge
pop
mov
call
cmp
ret
test
call
cmp
inc
add
add
les
and
or
dec
lahf
popa
cltd
jge
jnp
rorb
inc
jge
mov
sbbb
sub
imul
xchg
je
push
call
dec
mov
flds
imul
out
into
pop
mov
sahf
mov
pushf
cs
dec
icebp
sub
mov
outsl
xor
ds
loopne
popa
add
in
ss
mov
stos
test
into
enter
insb
mov
push
adc
push
dec
mov
mov
divl
cmp
cmpb
addl
cltd
in
mov
cmc
xchg
sbbb
pop
int3
add
mov
inc
jl
and
sub
arpl
xchg
outsb
out
hlt
push
push
cmp
mov
scas
and
inc
xchg
popa
jge
add
adcb
mov
sbb
cmpsb
inc
sahf
xor
insl
mov
cmp
and
jb
mov
enter
xchg
mov
mov
xchg
fdivl
push
xor
and
scas
stc
mov
aas
sub
ljmp
aam
mov
push
negl
mov
jo
mov
jle
push
sarb
js
ljmp
push
and
das
adc
ret
mov
mov
xchg
mov
out
ja
jno
nop
popa
xor
lret
sbb
out
and
adc
sub
sub
arpl
pop
and
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
xor
push
sbb
adc
sbb
xchg
fidivs
mov
jmp
negb
in
dec
mov
flds
loopne
dec
jmp
add
sbb
rclb
push
sbb
push
addr16
aaa
dec
sub
hlt
xchg
loop
and
in
ljmp
lds
outsl
in
fdivrp
and
jbe
jnp
addl
test
hlt
pop
call
mov
sti
sbb
push
mov
mov
and
out
imul
xchg
push
mov
sub
sbb
cwtl
popl
sub
js
nop
movsl
sahf
stos
mov
sub
xor
lods
mov
mov
cwtl
outsl
ficomps
stc
ljmp
hlt
roll
mov
and
ror
dec
adc
out
push
push
mov
sarl
jb
out
mov
jg
pop
push
lock
imul
stc
out
in
inc
mov
testb
mov
dec
push
dec
or
test
lahf
xchg
sbb
fs
mov
cli
dec
leave
stc
push
and
adc
dec
std
insb
iret
adc
bound
adc
lret
out
pop
and
pop
mov
dec
dec
jmp
or
pushf
cwtl
push
or
mov
and
test
int
lcall
lcall
cmp
jnp
insl
xor
jno
xor
sbb
add
pop
cmp
bnd
rolb
cmp
mov
addl
sub
push
movsb
js
mov
cmp
rorl
test
and
pop
mov
or
jbe
es
and
fimull
sub
lahf
jnp
insl
push
in
inc
std
cmp
mov
sub
lcall
clc
clc
or
enter
inc
or
sbb
dec
std
in
adc
push
aas
sbb
js
mov
fsubs
and
iret
mov
sub
cmpsb
cmc
cltd
leave
pop
adc
mov
ss
aaa
lahf
adc
test
mov
xor
pop
cmp
fldenv
adc
cmp
xchg
mov
sbb
in
sub
nop
push
mov
js
push
pop
scas
push
or
xchg
loope
loop
test
gs
test
dec
mov
daa
xchg
mov
xor
xorl
fisttpll
cmpsl
lea
bound
adcl
pop
arpl
iret
pop
sbb
jns
stos
dec
xor
xchg
xor
ret
or
fwait
in
sbb
outsb
les
loopne
test
fistps
dec
sahf
ret
ret
insb
add
adc
push
mov
fstps
push
popf
addl
inc
fcmovu
dec
jnp
cld
cmp
mov
mov
or
pop
pop
push
lods
dec
cmp
repnz
hlt
mov
adc
jecxz
stos
cmovp
inc
adc
mulb
sub
das
inc
fistps
mov
movsl
cmp
cmp
into
mov
adc
popf
mov
xchg
mov
bound
add
cmp
inc
pusha
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
loop
sub
cmp
outsb
push
in
movsb
cmp
mov
test
outsb
outsl
or
xchg
daa
cmp
pop
ja
lods
mov
cld
push
or
adc
and
das
push
adc
sub
ret
adc
sbb
mov
push
addr16
mov
or
cmc
xor
pop
test
mov
jnp
mov
out
mov
cli
dec
loop
fisttps
fildl
loope
inc
jge
nop
dec
cmp
sarl
aad
mov
mov
or
mov
sub
cmp
out
loopne
mov
add
pop
xchg
icebp
xor
or
dec
and
outsl
or
cmp
in
dec
xchg
les
out
imul
adc
sbb
mov
xchg
sahf
scas
cmpsb
inc
dec
push
in
int
inc
mov
fmul
pop
add
repz
repz
mov
inc
mov
cmp
pop
notb
mov
scas
lods
int3
sbb
test
into
pop
icebp
mov
into
mov
fsubrl
jnp
add
negb
cld
dec
shll
repnz
xor
jmp
lcall
js
movhps
scas
fisubrs
in
cltd
push
fs
movsb
and
add
pop
gs
jp
adc
ds
mov
scas
xor
aas
mov
call
fdivr
xchg
aaa
je
or
fisttpll
mov
xchg
insb
xor
ja
js
shlb
mov
xor
mov
es
test
or
mov
in
add
inc
jno
jb
or
scas
push
das
inc
lock
mov
xor
pop
in
and
popf
in
sub
test
fbstp
rcll
cmp
push
aam
imul
push
or
mov
rorb
das
mov
loop
rcr
sbb
sbb
push
cmp
fdivrp
outsb
cwtl
imul
jne
fmul
loopne
daa
cs
jne
mov
icebp
or
std
or
xorb
in
sbb
fistpl
sub
lret
mov
inc
mov
add
sbb
fsubrp
or
in
call
jae
xchg
jmp
mov
pop
dec
loop
mov
stos
mov
rolb
jmp
sub
inc
ret
out
pop
push
data16
and
out
imul
imul
lds
shlb
subb
mov
mov
rclb
push
sbb
sub
sti
fidivs
repz
enter
cmc
mov
push
outsb
cmpb
cwtl
mov
sbb
or
daa
ret
or
fnsave
into
ret
xor
sub
stos
and
push
in
mov
xchg
and
add
int
movl
push
sbb
adc
out
shrd
xchg
bound
pop
xor
pusha
xchg
sub
or
push
mov
ret
xor
clc
mov
jae
dec
and
sbb
lret
outsb
aad
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
addr16
push
jmp
sbb
xchg
es
cmp
insb
and
jmp
nop
lahf
xlat
aas
cmp
cld
push
or
mov
jp
notb
jnp
stos
outsl
pop
scas
sbb
out
ficomps
xchg
imul
xor
lock
mov
add
mov
ja
inc
xchg
aaa
xchg
sub
scas
or
popf
int3
scas
jl
imul
xorl
inc
xchg
pop
adc
mov
arpl
lret
sarl
xchg
jmp
cli
pop
inc
mov
into
push
jb
mov
das
dec
sbb
daa
out
mov
cs
test
in
sti
jo
lock
adc
xor
leave
pop
sbb
lcall
je
stc
cmp
std
push
sbb
jmp
mov
loop
and
xabort
mov
push
xor
jnp
orb
push
adc
sbb
stos
inc
lcall
adc
and
addl
push
or
pushf
je
adc
dec
push
pop
cmp
xor
clc
mov
test
cmpsl
ss
cwtl
test
ja
inc
pushf
dec
inc
push
inc
sbb
sbb
pushf
mov
shrb
xchg
repnz
ficoml
sbb
jg
daa
int
inc
out
dec
sahf
sub
cmp
and
cwtl
popa
repz
scas
in
xchg
add
fdivrp
das
adc
add
stc
je
stc
sub
jg
out
push
or
sbb
lret
jne
push
sub
insl
and
add
sub
mov
push
push
inc
in
shrl
and
cmc
in
and
dec
sahf
xor
xchg
ss
dec
lret
loopne
fnstcw
cmp
dec
out
lock
xor
inc
ljmp
and
mov
cmc
addr16
imul
int
shrl
add
pop
cmp
lret
push
sub
aad
ja
popa
and
data16
sar
bsr
sbb
lods
pusha
jle
xchg
mov
jae
or
push
sub
push
jns
out
es
mov
or
lods
push
scas
aad
in
in
xchg
out
sarb
sti
push
sbb
test
fnclex
outsl
mov
sbb
and
push
or
dec
fcompl
mov
jnp
popf
call
insl
std
mov
jecxz
jle
mov
mov
insb
jl
cmpsb
incl
xor
dec
add
xchg
inc
mov
pop
aaa
mov
push
xchg
pusha
outsb
scas
dec
int3
outsl
and
fwait
inc
xorb
out
lret
inc
stos
xor
jmp
and
inc
jle
jae
incl
stc
pop
ds
cmp
add
rcrl
nop
jp
dec
cld
sub
inc
jecxz
jp
data16
aad
fs
scas
in
rcrb
cmp
jle
or
orl
gs
fisttpll
jne
mov
in
pop
hlt
fisttpll
enter
dec
mov
cmp
lret
scas
rorb
es
loop
sbb
loopne
sti
push
mov
mov
lea
js
adc
lock
xchg
lods
test
shlb
ret
xor
lret
repnz
add
or
mov
mov
jb
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
sub
sbb
sbb
push
test
sub
xor
or
in
sbb
jle
xor
in
js
jo
or
sub
stos
pop
fsub
insl
jo
add
call
enter
xchg
pop
pop
push
in
mov
rol
push
test
scas
mov
mov
adc
movsl
mov
jecxz
mov
cli
ja
call
imul
aad
es
mov
std
push
aad
xor
stos
sub
int
mov
sbb
loope
andl
xchg
xchg
aaa
inc
pop
mov
jl
stos
mov
arpl
pop
fs
jae
or
insb
mov
ret
jg
lret
xchg
add
outsb
nop
iret
xchg
movsl
push
mov
imul
adc
mov
sub
jbe
dec
or
sbb
inc
daa
push
jb
add
cmp
adc
and
sub
lcall
and
pop
decl
dec
loop
out
scas
nop
jp
inc
shrb
push
mov
mov
pop
test
jb
and
decb
sbb
inc
das
in
xor
fwait
cmp
pop
push
orb
push
lret
leave
sar
nop
jb
hlt
int3
xorl
negb
or
fbld
fldl
jbe
or
pop
mov
bound
das
roll
adc
std
dec
loop
sbb
in
sbb
xor
enter
and
pop
xchg
adc
nop
lea
add
sbb
sbbl
scas
push
dec
cmp
andl
lock
adc
sub
push
repz
push
mov
push
repnz
push
push
push
and
jne
into
sub
dec
rorl
scas
cld
pop
cmpsb
jg
lods
ja
pop
and
dec
mov
imul
sbb
push
inc
sbb
sub
int3
xlat
push
fstps
dec
and
pop
pusha
lret
jge
sbb
mov
aad
or
pop
arpl
mov
push
mov
jmp
sub
call
add
cld
mov
addl
sbb
and
fidivrs
push
in
arpl
mov
in
les
int3
sub
mov
cld
cmpsl
mov
repz
add
dec
stos
adc
lcall
jg
pop
sbbb
cld
push
repz
sub
outsl
xor
adc
scas
push
arpl
mov
jo
fildll
fildl
adc
xor
in
cmpsb
popf
negl
jbe
in
push
inc
mov
jae
int3
ds
inc
jp
lods
and
icebp
lea
insb
imul
and
popa
xor
ljmp
movsb
xor
inc
jns
adc
addl
fisubrs
andl
aam
mov
xchg
add
dec
scas
dec
xor
call
adc
insl
mov
rol
lret
jg
std
imull
outsb
addr16
pushf
movsl
cwtl
pop
inc
dec
push
mov
in
stc
or
fidivl
cmp
add
dec
and
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
fistl
sbb
adc
sbb
mov
rclb
dec
into
xchg
mov
dec
les
stos
lock
in
iret
push
sar
in
shr
inc
gs
push
jmp
sbb
es
in
pop
lods
cmpsl
or
lock
idivl
jb
push
cmp
scas
xor
filds
iret
xchg
stc
lahf
push
int
cmp
insb
and
jp
mov
jb
loop
idivb
sahf
inc
fisubrs
sub
dec
leave
pop
jns
in
jecxz
add
das
aas
inc
xchg
insl
in
divl
mov
clc
arpl
pop
jl
xchg
lock
xor
xor
mov
outsb
aad
xchg
divb
sti
mov
das
mov
jl
loopne
xchg
movsb
shll
push
jecxz
outsl
pusha
lcall
icebp
inc
pop
stos
addr16
out
mov
mov
xchg
mov
je
lock
jg
into
cmp
jae
fcoml
xchg
sub
and
pop
fdivl
push
jmp
shr
jne
xor
in
repz
cmp
loope
jo
fcom
movsl
je
test
mov
ja
jbe
lods
xor
icebp
add
ret
arpl
and
ficompl
jae
out
push
ljmp
hlt
dec
cs
pushf
fnstenv
xchg
push
cltd
les
dec
add
xlat
mov
ss
dec
lods
mov
push
lods
or
fsubrl
negb
add
pop
jl
inc
iret
addr16
xor
roll
in
repz
nop
aas
pop
hlt
and
push
pop
ret
out
sbbb
fldenv
mov
mov
dec
outsl
push
nop
add
rcl
sbb
insl
sbb
fidivl
and
lea
clc
pop
sbb
mov
lahf
mov
mov
adc
in
mov
mov
repnz
add
out
jb
xor
push
cmp
outsb
inc
cmc
sbb
jbe
iret
pop
int
inc
mov
push
mov
cmp
pop
pop
faddp
xor
je
fisubrs
in
or
jp
cltd
outsb
jne
mov
aam
in
movsb
pop
pop
inc
inc
xlat
jmp
shlb
shrl
mov
sub
sbb
jmp
addb
repz
fldl
and
push
lods
add
jb
xchg
sahf
inc
insl
ljmp
xor
andb
xlat
mov
jge
add
xchg
int3
out
lea
pusha
frstor
fs
and
std
popf
cmp
sub
icebp
das
cmpsb
fidivs
arpl
jne
ret
imul
mov
testl
adc
ret
roll
cmp
mov
js
fbld
mov
push
mov
imul
xor
subl
cmp
pop
xor
cmpsb
jae
xor
fists
push
mov
cli
rcrb
repnz
adc
xchg
mov
or
adc
gs
mov
jo
sbb
int3
push
icebp
ja
or
fidivl
mov
lahf
popa
pusha
in
fs
int
fstps
cmp
cltd
xchg
cmpsb
jecxz
or
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
shl
jae
inc
rcll
sbb
adc
sbb
je
fisubs
push
pop
in
or
sub
xlat
inc
bound
fmuls
testb
lahf
js
in
nop
jmp
ret
cmp
out
push
jg
xchg
jge
arpl
cmp
aas
add
or
mov
pop
fildll
leave
pop
fcoms
mov
jecxz
inc
stos
push
push
cmp
adc
add
mov
xchg
sahf
and
sbb
into
fwait
movsb
sbb
lret
or
sbb
ret
and
pop
ret
in
adc
aas
lcall
imul
lahf
and
xor
pop
outsb
lock
gs
faddp
insb
pop
pop
outsl
mov
fnstsw
das
aas
loope
push
insl
ja
jle
mov
test
inc
cmp
in
lea
hlt
xor
repnz
popa
cld
not
push
cmpsl
lahf
pop
cltd
cmp
xor
test
jae
add
sbbb
xchg
push
dec
or
scas
mov
adc
sarb
enter
test
jg
fadd
out
data16
imul
add
cmpsb
nop
cs
sahf
or
cmp
pop
rorb
push
mov
lret
xor
xchg
adc
ror
push
arpl
insb
push
outsb
rolb
push
ja
push
jle
xchg
push
mov
mov
subb
and
lock
loopne
lods
push
test
outsb
jg
ja
bound
ret
je
iret
lods
in
mov
dec
push
inc
or
jecxz
push
cmp
mov
fists
cmc
sarl
loope
dec
or
push
cld
mov
mov
dec
push
les
push
mov
orb
pop
jnp
mov
shrl
std
mov
aaa
and
push
mov
fisubl
pop
les
jnp
xchg
data16
faddl
icebp
ss
notl
jb
mov
inc
mov
dec
lds
dec
push
ret
scas
xchg
pushf
cmp
out
adc
imul
dec
aas
adc
insl
lea
pushf
lret
iret
push
sub
jl
nop
in
push
cwtl
hlt
call
cmp
insb
cs
and
push
xchg
xor
loopne
in
movsl
pop
cwtl
dec
bound
test
inc
sbb
mov
or
cmpsb
iret
jle
xor
gs
js
in
out
sub
clc
sbb
popf
into
pop
insl
jge
rorb
dec
cmp
xchg
dec
les
xor
inc
xlat
aam
jno
pop
add
decb
sub
xchg
lds
adc
jne
stos
push
inc
dec
pcmpgtb
mov
add
stc
xor
push
pushf
jnp
out
aaa
pop
cwtl
faddl
push
mov
movb
cwtl
out
ret
sub
sahf
and
test
out
cltd
lahf
mov
int
mov
insb
mov
adc
jle
imul
mov
pop
out
sbb
stos
lock
sbb
std
fcoms
adc
vmwrite
mov
lods
mov
sub
jb
fstpl
dec
int
and
push
pop
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
arpl
inc
int
sbb
adc
sbb
xchg
fmulp
dec
in
outsl
cmp
and
pop
out
and
out
or
sbb
cmp
rcl
mov
fiaddl
add
push
lcall
pop
add
pushl
jp
pop
push
lods
adc
sub
xchg
mov
and
pop
xchg
aaa
rolb
insl
aam
scas
push
or
xchg
add
lret
mov
dec
stos
incb
js
sub
add
xchg
movsb
lods
adc
pop
mov
xor
lods
les
jl
jbe
imul
inc
mov
mov
mov
sbb
xchg
mov
lcall
or
dec
dec
inc
filds
jle
mov
jno
or
or
xacquire
and
scas
inc
leave
test
cld
cmp
push
testb
cwtl
mov
cmp
fs
orb
and
movsl
mov
jns
inc
js
xchg
push
jnp
mov
mov
outsl
xor
inc
cmp
cmp
cmpsl
fwait
pop
pop
xor
mov
mov
push
jg
xor
jbe
into
test
xchg
std
mov
cmp
hlt
cmc
scas
jge
adc
aad
out
lock
mov
jae
sahf
mov
xorb
fwait
js
and
sub
mov
and
fnstsw
ds
dec
dec
push
mov
sub
test
jb
mov
movsb
cltd
mov
pop
pop
mov
mov
mov
lahf
mov
xor
add
or
mov
sti
fnsave
lahf
rol
jnp
ss
aaa
add
fldl
mov
sbbb
jle
ret
repnz
add
mov
and
push
loopne
pop
or
lods
pusha
mov
and
repz
dec
cmc
dec
pop
movsb
mov
iret
in
mov
xor
das
cld
inc
adc
and
mov
sub
xchg
jae
sti
and
jp
cmp
into
popf
addr16
inc
fistl
int3
mov
inc
lret
in
sti
jle
push
enter
cmpsb
addl
push
push
loope
outsb
imul
shll
out
iret
jne
jg
xchg
cmp
cli
xor
cs
popa
sub
jg
popf
pushf
insb
inc
sub
movsl
aad
sahf
arpl
sbb
in
jb
and
inc
loopne
jecxz
xchg
jno
mov
out
cld
and
repnz
sbb
ss
mov
mov
dec
sub
ljmp
movsb
or
es
or
ja
jge
loop
dec
adc
out
in
mov
add
push
sub
pushf
gs
inc
pop
pop
jmp
imul
pop
mov
mov
fs
push
aam
jge
push
mov
test
addr16
outsl
jo
dec
dec
xchg
subb
rcrb
ds
arpl
pop
cmc
mov
notl
jle
lret
sub
mov
push
xor
xchg
sti
mov
and
mov
daa
cwtl
fwait
sbb
xchg
movsl
dec
fnstenv
rorb
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
add
mov
sbb
sbb
pop
stos
lods
clc
pop
andl
mov
rol
push
arpl
out
xchg
fwait
or
pusha
add
dec
lret
push
inc
dec
lahf
mov
repnz
push
push
jno
mov
mov
enter
push
xor
repz
les
push
dec
adc
test
in
sti
ljmp
xchg
out
fucomi
out
stc
sub
mov
gs
leave
ss
fldcw
mov
and
scas
xor
pop
lret
pop
xorps
sbbl
and
lea
ret
push
gs
and
sbb
in
les
xchg
xor
and
loop
sub
pusha
jae
jo
xor
jnp
inc
dec
jns
into
mov
out
sub
mov
sbb
leave
push
jmp
in
mov
lret
mov
xchg
lahf
movsb
pop
cmp
popa
sub
xchg
icebp
lods
aam
leave
mov
lret
mov
push
out
cwtl
inc
xlat
jl
or
test
rcll
sub
xor
fists
into
push
add
add
mov
sahf
lock
shll
and
iret
ljmp
in
sbb
xchg
js
pop
push
rcrb
or
ret
adc
xor
pop
push
inc
shlb
dec
ljmp
jne
add
movsl
xchg
test
rorl
mov
add
dec
roll
mov
mov
or
dec
iret
inc
es
std
jae
lahf
std
inc
mov
xchg
popa
nop
push
int
fdiv
pop
lea
std
pop
ret
adcl
in
or
jns
jmp
sub
into
cmp
mov
movsl
sub
outsl
pusha
sbb
aas
jns
cmc
dec
cmpsb
inc
rclb
push
clc
cli
xchg
andb
inc
sbb
pop
mov
dec
push
leave
daa
idiv
int
flds
in
aam
xlat
pop
in
popf
test
insb
mov
sub
xor
jmp
imul
and
lahf
cmpsl
push
sbb
imul
push
push
jb
fadds
fstpt
bound
or
mov
test
out
addr16
sti
or
out
jg
mov
lahf
mov
iret
inc
sub
mov
sbb
adc
jne
in
mov
daa
insb
cmp
inc
jp
loop
xor
mov
lds
add
out
mov
test
fdivrl
cmp
mov
lea
inc
xlat
loope
and
es
mov
test
scas
hlt
insl
pop
outsb
sbb
push
fidivrl
ss
ja
aaa
std
add
mov
int3
mov
lods
xchg
jp
pushf
insb
cltd
push
imul
jle
push
pop
ret
pop
sub
push
push
mov
arpl
lock
cmpb
stc
xchg
out
aad
mov
cmp
fbstp
neg
push
in
or
loope
aas
cs
outsl
mov
cmp
stos
sbb
mov
sub
sahf
push
cmc
pop
jg
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
stos
inc
mov
sbb
sbb
ja
jb
xor
mov
mov
jmp
mov
rorb
mov
gs
mov
les
and
sbb
ficoms
pop
fwait
xchg
adc
fidivs
sub
push
ss
lret
inc
js
adc
xor
imul
xchg
cmpsl
cld
add
dec
rolb
stos
push
lahf
jne
stc
fnstcw
xchg
int3
cmp
adc
fcmovnu
xchg
out
dec
roll
mov
mov
ret
repnz
in
arpl
or
inc
fnstenv
cmp
cmp
jg
mov
pusha
mov
pop
cld
inc
adc
sbb
jle
mov
inc
fmuls
das
mov
clc
bound
ja
hlt
dec
mov
out
jae
pop
jp
add
mov
or
sbb
sub
or
pop
dec
add
xchg
into
idiv
mov
loop
and
scas
mov
sbb
mov
mov
fnsave
or
std
mov
daa
andl
xchg
push
je
cmp
mov
fdivs
sub
cwtl
lds
test
ljmp
fisubl
lret
mov
pop
mov
loopne
loopne
cmpb
pop
xchg
mov
not
and
push
mov
mov
sub
iret
testb
xor
sbb
lahf
loopne
sub
fwait
shr
pushf
loope
das
cmpsl
int
outsl
add
xor
clc
sub
clc
aaa
push
mov
insb
fsubrp
xchg
sub
sub
in
jae
daa
mov
rcrl
xchg
lret
push
rorb
test
sub
incb
fistpll
cmp
fs
pop
imull
bound
pop
mov
hlt
push
loop
inc
jge
xchg
dec
cmpsb
inc
sub
lret
jp
data16
sub
nop
divb
and
or
aaa
cmp
fistps
adc
aad
fsubrl
rcrb
sub
sbb
int3
inc
sbb
push
dec
jl
test
nop
jge
mov
mov
dec
sbb
pop
call
dec
jl
in
idivl
or
imul
js
sti
int
cmpsb
mov
lret
mov
loopne
clc
xchg
jno
mov
arpl
adc
push
inc
mov
xchg
std
push
cli
jnp
dec
cmpsb
cmc
pushf
lret
stos
mov
adc
scas
scas
cmp
mov
pop
das
mov
add
jo
rcrl
movsb
mov
ljmp
rclb
xor
jp
and
pop
cmpsb
scas
jl
leave
icebp
jns
cld
int3
cmp
aad
and
out
ret
repnz
addr16
imull
xchg
in
xor
sbb
pop
test
push
loopne
dec
nop
shrb
sbb
loopne
ds
add
push
aas
pop
sbb
sbb
mov
daa
xchg
sub
jmp
sub
lds
pop
or
mov
inc
inc
aam
sbb
add
xchg
push
out
shll
xchg
arpl
mov
int
xrelease
push
xchg
push
outsl
test
xchg
adcb
sahf
pop
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
pop
add
add
jo
pop
nop
sbbb
loopne
mov
adc
jnp
cltd
sub
ljmp
xor
ljmp
imul
push
divb
mov
jle
adc
shlb
mov
sbb
dec
fnsave
fwait
outsl
leave
sub
xor
sbb
imul
hlt
xor
out
jle
test
fimull
ds
mov
push
inc
fcompl
cwtl
cwtl
dec
mov
mov
rcr
in
ds
out
push
mov
int3
jg
pop
sbb
pusha
fs
lods
imul
push
mov
add
pop
jae
mov
push
or
jo
mov
pop
push
pushf
in
adc
push
sub
testl
insb
sbb
ja
stos
adc
daa
xchg
jae
lret
mov
sbb
movsl
cli
enter
mov
or
push
hlt
jbe
and
aaa
inc
adc
into
ljmp
mov
adc
xchg
xchg
out
ficoms
int3
stc
je
sbb
xchg
out
ret
movsl
mov
testl
aas
lods
push
xlat
out
bound
insb
popf
ds
sub
and
mov
xor
cli
push
inc
gs
insb
inc
or
jecxz
lret
adc
add
sbb
sub
sbb
add
mov
in
enter
aas
clc
mov
pop
push
push
pushl
rcr
add
or
mov
popf
sbb
xchg
mov
mov
daa
aaa
mov
pop
aad
daa
jns
adc
xor
inc
ja
mov
mov
shll
sbb
sbb
fwait
inc
jp
mov
fnsave
daa
xchg
roll
in
sub
adc
cmp
push
lds
mov
pop
scas
push
shlb
leave
iret
push
int3
xchg
push
mov
or
cltd
mov
js
sub
adc
imul
in
ss
xchg
fildl
pop
loopne
fucomi
push
xchg
sub
cmpsb
inc
or
and
jle
ds
lret
rcl
or
xor
jg
mov
ds
push
or
and
imul
test
cli
loope
lahf
daa
lea
jo
loop
repz
fdivrs
jae
pushf
in
subb
or
dec
and
mov
fsubs
xor
xor
jl
inc
mov
imulb
stos
sub
loope
mov
inc
cli
lcall
cmp
ds
bound
out
sub
cs
dec
dec
lret
jae
adc
pushf
test
jno
repz
pop
mov
xor
xchg
mov
fisttps
mov
pop
cmp
nop
jecxz
outsb
rcll
ljmp
jne
cmpsb
test
test
daa
sarl
fwait
inc
cmpsl
ds
mov
xchg
sbb
sub
cmc
pop
jns
mov
outsb
lods
cmp
movsb
flds
stc
jo
movsl
mov
push
pop
lods
cltd
std
out
inc
dec
clc
jmp
or
xchg
xor
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
xor
push
xchg
xor
lods
sub
std
scas
dec
mov
lock
jl
add
dec
add
cmc
inc
mov
xor
shlb
arpl
fmuls
out
cmp
and
pop
and
xchg
xchg
imul
xchg
in
inc
call
jnp
popf
lock
movsb
hlt
pop
jne
outsb
scas
add
add
sub
repnz
push
cmpsl
jmp
cltd
jp
in
push
inc
scas
int
lea
push
xchg
adc
inc
loop
test
test
mov
jb
add
mov
pop
push
inc
dec
add
movsl
dec
fs
leave
cltd
mov
sub
sub
xchg
and
popf
js
xor
push
fwait
mov
pop
mov
sub
repz
fimuls
jno
sti
popf
fs
popf
jecxz
xor
imul
mov
outsb
jge
inc
mov
gs
enter
out
out
xchg
mov
lds
xor
inc
mov
sbb
insl
inc
insl
cmpsl
outsb
shll
divb
leave
push
pop
push
into
out
bound
loopne
orl
adc
gs
roll
mov
dec
inc
lcall
movsl
lds
push
push
pusha
iret
dec
push
in
pushl
popf
cmpsl
push
scas
jo
stos
in
aam
inc
shlb
mov
sarl
stos
addb
mov
rclb
pop
mov
or
lock
cmpl
mov
scas
out
push
es
mov
pop
adc
xchg
sbb
test
jmp
xchg
sahf
icebp
ret
xor
xor
out
jecxz
les
rcrl
test
ds
fidivl
sbb
rol
data16
into
ljmp
je
cld
mov
xlat
stos
std
rorl
aam
es
jge
sub
push
xchg
jg
dec
aaa
or
ret
sahf
mov
loop
mov
cs
jg
fcomps
outsb
adc
push
push
push
movsb
out
fwait
movsb
push
add
sbb
stc
sub
int3
mov
push
shl
jp
add
imul
movsl
inc
mov
aam
cmc
inc
out
jnp
test
sub
rclb
addb
std
cmpsl
and
inc
add
outsl
loop
outsl
arpl
jb
mov
ret
popa
push
or
loop
sbb
dec
pop
xchg
mov
loope
popa
jl
adc
xor
mov
loope
fstps
test
jp
add
inc
cmc
in
stos
pop
in
and
inc
addl
in
mov
push
mov
inc
inc
testb
inc
jmp
jbe
outsb
fldenv
inc
mov
jle
push
jmp
and
out
xchg
out
inc
cltd
mov
int
cli
dec
subb
aaa
scas
pop
cwtl
movsl
inc
movl
adc
lret
int
fdivrs
mov
push
xchg
xchg
rcrl
testl
orb
out
sbb
sbb
mov
lods
lods
sub
rorb
leave
push
addr16
cmp
ja
mov
adc
sub
sbb
pop
or
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
xor
mov
sbb
adc
sbb
xchg
mov
das
cmp
pop
inc
add
scas
imul
and
adc
adcb
xchg
bound
test
imul
ret
das
bnd
push
hlt
jmp
lret
add
lret
mov
or
fcomps
or
xchg
pop
repz
sub
stc
fs
and
or
xor
sub
mov
std
lahf
call
shlb
lds
cli
insl
xor
nop
lahf
not
pop
lret
das
hlt
sarb
lgs
adc
pop
and
add
pop
les
imul
xchg
f2xm1
add
mov
sahf
dec
ss
or
repz
sbb
popa
je
jmp
cs
dec
movd
push
icebp
call
jg
pop
push
imul
inc
leave
std
test
jnp
push
adcl
imulb
jmp
pop
enter
lock
pop
jge
js
lods
outsl
dec
and
mov
lods
jae
or
lods
add
sarb
sbb
inc
sbb
adc
jge
shrl
and
sub
fldcw
push
mov
or
roll
or
cmp
lahf
mov
mov
arpl
push
imul
jp
movsl
xor
pop
push
sub
lock
sub
mov
flds
add
sbb
sti
hlt
aad
sbb
adc
add
imul
xor
xchg
ds
scas
or
nop
scas
mov
or
xchg
sub
arpl
mov
pop
stos
pop
mov
test
xor
xchg
aam
mov
rcrl
mov
dec
jecxz
add
fs
fsubl
test
js
mov
mov
xchg
lock
aaa
push
and
lods
and
je
mov
jp
mov
jl
pop
jecxz
mov
popa
scas
jnp
mov
jnp
nop
add
jae
dec
mov
insb
cmpsb
sbb
lock
add
fcompl
push
sarl
xchg
shlb
cs
push
adc
iret
shl
loop
fcomps
add
scas
das
xchg
fstps
adc
push
xchg
lret
pop
jmp
les
mov
cs
cmp
push
les
iret
cli
cltd
inc
loop
adcl
or
inc
mov
inc
cmp
cmpsb
sbb
cwtl
lods
pop
shrb
popa
pop
push
ja
jecxz
xor
jmp
adc
adc
jge
pop
and
fstl
mov
adc
cld
sbbl
jae
imul
inc
jmp
push
dec
dec
fsubrl
xchg
or
mov
inc
sahf
out
xor
notb
fadds
imul
mov
sbb
pop
xchg
inc
sbb
inc
xor
outsl
cli
sub
sub
fsubl
xor
or
sub
fldl2e
inc
lds
sahf
cmp
jecxz
pop
in
sbb
mov
popf
cmp
jae
rorb
movsb
in
and
aad
add
jne
fxch
jp
test
ret
loope
xchg
les
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
jae
add
and
sbb
pop
mov
clc
lods
mov
inc
rolb
xor
cmpsb
shlb
mov
clc
push
ror
mov
xor
mov
lret
fsubrl
sbb
iret
jbe
push
mov
imul
ret
ja
stos
cli
sub
scas
shlb
mov
aaa
dec
nop
jg
out
cmc
loop
js
adcb
in
dec
cmp
mov
pop
inc
fldenv
roll
dec
insb
xor
cmp
orb
cli
out
in
ds
inc
xchg
and
lods
jmp
mov
mov
mov
pop
mov
cmp
arpl
pop
xor
adc
or
pop
pop
dec
and
mov
sbb
jle
jns
mov
fldcw
push
not
test
cltd
sbb
je
jp
push
mulb
push
and
jns
out
dec
pop
into
adc
in
push
adcl
into
fsubrp
xor
sbb
xorl
push
sbb
adc
mov
mov
push
test
ljmp
sub
aam
icebp
or
das
in
cmp
inc
mov
push
and
push
popa
decb
and
cltd
jle
mov
sysexit
mov
or
movsl
loop
cmpsl
jnp
fucom
pusha
js
push
dec
pop
mov
lret
sti
lret
inc
rclb
and
mov
sbb
nop
lock
test
insl
test
aaa
int
pop
xor
out
icebp
sbb
outsl
inc
js
jbe
pushf
enter
inc
pop
out
daa
jg
int
cmp
xchg
cmp
push
push
adc
cmp
aas
in
mov
sbb
inc
enter
std
mov
nop
and
pop
roll
add
pushf
mov
mov
push
stos
jae
fsub
shll
xor
inc
pop
inc
std
aaa
inc
into
loopne
push
adc
jnp
add
scas
pushf
sub
iret
xor
pop
mov
inc
in
ds
outsb
mov
or
gs
faddl
sbb
lock
movsb
and
mov
mov
add
loop
fstpt
imul
xor
mov
and
cwtl
arpl
shlb
pop
push
and
jns
les
lods
fidivs
les
inc
cmpsl
iret
cmp
xor
cmp
add
pop
add
inc
sub
fbld
cmc
flds
test
dec
mov
enter
mov
dec
subl
pusha
cmpsb
sahf
cmp
push
call
leave
pop
xchg
daa
iret
je
xor
sub
test
or
sbb
loop
gs
mov
push
insl
sub
cmpb
into
out
ds
call
loopne
pop
push
cmc
cmp
imul
pop
cmpsb
xchg
sarl
jp
fldt
jno
push
cmp
ficompl
mov
gs
jle
subl
fimuls
inc
fbld
push
lret
out
movb
push
xchg
popa
mov
pop
test
cmp
adc
push
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
push
out
mov
and
sbb
sub
ja
rorl
pop
andl
lcall
xchg
inc
mov
sbb
mov
sbb
cmp
out
cmp
add
mov
iret
or
pop
jae
xor
ss
xchg
fadds
xchg
add
jle
dec
xor
sbb
xor
scas
push
sbb
add
push
ja
repnz
sub
sbb
scas
iret
xor
aas
mov
inc
arpl
sarb
xor
imul
push
addr16
das
pop
inc
mov
fs
jp
mov
sarb
cmp
xchg
jg
push
pusha
adc
push
imul
xlat
lret
sbb
pop
lock
xchg
pop
push
xchg
xor
ss
popa
outsb
or
mov
dec
and
nop
sub
add
mov
xor
and
cmpsl
imul
mov
sub
push
fmull
les
mov
int
aam
sub
mov
xor
adcb
les
mov
jno
and
dec
daa
cs
pusha
lds
ja
lret
cs
push
dec
add
imul
adc
inc
or
in
jo
enter
sbb
and
push
lret
out
pop
mov
jge
in
inc
push
mov
test
dec
fldcw
hlt
loope
in
shlb
fwait
insl
and
test
xchg
mov
in
push
jle
stos
out
cmpsl
sbb
adc
mov
push
cmp
fdiv
inc
dec
iret
sbb
mov
cmpsl
pusha
cmp
inc
cli
fs
bound
gs
sbb
inc
insl
cmp
cmc
mov
test
pop
sbb
jecxz
cwtl
loope
push
or
lods
push
out
add
push
ss
jecxz
outsb
cs
adc
fimull
ljmp
push
mov
mov
cmp
jmp
aas
repz
jns
fldcw
adc
sbb
nop
jmp
xchg
jge
xor
dec
sbbl
mov
repz
andl
ljmp
pop
es
and
enter
out
inc
cmp
fdivr
mov
xchg
mov
and
mov
das
sub
pop
adc
adc
sahf
rorb
ja
repz
jbe
push
cmovle
push
xor
pushf
mov
popf
inc
mov
pop
test
repz
inc
fnsave
sub
and
addl
dec
inc
mov
test
cmp
push
std
xchg
or
call
inc
xlat
into
jge
sub
jmp
pop
outsb
outsl
lret
push
and
popa
out
mov
mov
pop
outsl
fdivs
shll
repz
xchg
mov
cmc
jbe
jmp
mov
add
aaa
lea
add
jmp
in
cmp
filds
mov
cmpl
popf
rorl
enter
xchg
stos
add
jns
outsl
or
cmp
lods
lret
mov
mov
sbbl
pop
repnz
outsl
loop
mov
pop
rcr
xchg
inc
movups
jns
jo
pop
mov
int
andb
add
add
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
sub
jl
xchg
push
sbb
adc
sbb
mov
out
and
jb
pop
adc
out
ljmp
adc
adc
imul
loope
repnz
pop
or
clc
pop
or
scas
adcb
cli
inc
icebp
repz
jmp
orl
negb
cmc
jno
inc
inc
push
sub
addb
mov
pusha
daa
jbe
mov
negb
lods
test
cmpsl
cld
xor
mov
dec
fwait
inc
cwtl
mov
sub
mov
cmpsl
cltd
sbb
inc
fwait
jno
cltd
mov
sbb
and
call
pop
and
stos
movsb
or
mov
jecxz
mov
mov
out
sub
cmp
cld
inc
jns
shlb
push
sahf
mov
cmp
cmpb
fimull
pop
test
push
sti
or
mov
cld
iret
dec
mov
in
and
mov
jecxz
jno
jmp
fs
xchg
sub
dec
mov
sub
add
out
xor
dec
loope
test
hlt
mov
cmpsl
add
outsl
imul
lods
cmpb
ljmp
or
cmp
fnstcw
add
adc
inc
mov
mov
mov
pop
and
cmp
int3
sub
dec
cmpsb
in
adc
aad
js
out
iret
dec
mov
repz
ja
or
popw
pop
cmpsb
ret
jne
jo
xchg
push
enter
inc
xchg
roll
into
icebp
xor
push
std
in
mov
or
movsb
ljmp
xor
repz
repnz
mov
sbb
mov
xlat
sbb
sub
jnp
mov
push
jge
iret
push
sub
jg
pop
les
and
jb
fisubl
cli
and
call
or
stos
cs
xlat
in
lock
jnp
sbb
leave
jne
es
jle
pop
pushf
stc
gs
aad
inc
neg
ja
je
mov
mov
mov
adc
aam
aad
pop
movsl
mov
mov
ret
stc
jp
sbb
push
das
inc
sub
pop
jae
int
in
mov
xor
pop
sub
push
jo
xor
inc
mov
cld
pop
pop
imul
mov
add
lahf
pusha
xlat
inc
xchg
mov
test
sarb
sub
push
jg
lcall
pop
mov
inc
loop
mov
roll
nop
xor
mov
pushf
and
iret
pop
mov
xchg
push
dec
sub
mov
popa
push
cmpsl
or
cmpsl
sbb
inc
dec
pop
push
dec
pop
add
fbstp
pop
dec
pop
fisubrs
mov
fdivr
xchg
mov
add
mov
lret
fildl
push
popf
shrl
mov
scas
pop
mov
mov
loop
adc
xor
or
inc
inc
jb
gs
cmc
mov
sub
jnp
mov
add
aas
repz
mov
push
inc
out
jnp
and
cmpsb
sub
xchg
loop
ds
jbe
test
mov
pushf
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
fldcw
stos
outsl
lea
sbb
adc
sbb
test
sub
cmc
mov
ret
pop
out
movsb
aam
xor
lcall
mov
and
adc
fwait
cmp
je
add
cmpsl
ret
imul
cs
inc
stc
mov
mov
and
mov
sbb
popa
inc
jl
shll
ljmp
mov
or
outsb
pop
jno
rorb
add
push
or
adc
sub
xor
or
xor
icebp
add
and
mov
das
ret
push
addr16
add
pop
fsubs
sub
cmp
mov
inc
add
inc
fnsave
ret
sbb
in
popa
cmpsb
push
mov
pop
jnp
rclb
sarl
aas
cmp
fs
popf
push
sahf
iret
daa
pop
jecxz
inc
xor
sti
fimull
mov
movb
xchg
nop
lock
int
ret
nop
xchg
int3
xorb
aaa
dec
cmp
add
mov
int
int
in
jmp
pop
cmp
loope
dec
sahf
bswap
sub
pop
jns
in
inc
xor
lret
movsb
jb
or
test
out
call
lret
ret
sub
sbb
cmp
push
and
jmp
subl
stos
test
pop
jl
pop
mov
arpl
es
int
shlb
sub
lds
filds
lea
stos
lret
jns
subl
faddl
outsl
int3
cmp
inc
in
push
fstpl
cwtl
lea
fsub
push
outsl
leave
dec
mov
imul
mov
rolb
adc
lock
mov
in
fwait
shl
test
data16
jb
leave
ss
je
add
popa
les
push
inc
mov
insl
scas
stos
add
int3
bound
lock
xchg
sarb
shll
push
jg
ds
addr16
xor
dec
dec
pop
mov
shrl
xchg
xchg
ja
sbb
cmp
in
jmp
fcoml
test
jae
popf
or
push
ljmp
lahf
lea
fs
in
es
rolb
in
in
int
mov
mov
adc
xor
jo
inc
pushl
das
fldcw
call
inc
xchg
insl
jecxz
test
xor
mov
xchg
add
out
fildll
out
testl
jno
dec
aad
sub
mov
aaa
mov
js
push
and
aaa
dec
pushf
inc
sub
jge
and
fwait
jno
pop
cmp
mov
loope
push
loop
and
nop
loope
loopne
fsubl
pusha
fwait
test
mov
push
xchg
inc
jle
inc
pop
cmp
stos
jmp
je
fs
into
ja
jns
and
jmp
cltd
fistpl
push
fcoml
add
inc
cltd
pop
jae
xchg
inc
addps
and
and
inc
pusha
loope
lea
mov
lods
sbb
jmp
jb
popa
insl
in
sub
fisubrl
pop
stos
mov
jge
imul
std
push
sbb
fs
hlt
lea
cmp
mov
sbb
jns
add
pop
lcall
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
shl
sbb
and
sbb
mov
or
loop
lods
or
ret
adc
movsb
mov
incb
push
das
insl
jecxz
pusha
repnz
pop
and
xchg
cs
in
jecxz
dec
mov
xchg
pop
arpl
jnp
in
sub
daa
mov
inc
adc
sbb
int
dec
shll
sub
pop
mov
mov
data16
jo
call
nop
push
test
filds
mov
mov
and
fsubrp
cmpsb
into
cli
jb
pop
inc
xchg
sbb
push
pushf
lods
mov
insl
int
stos
shr
cmp
or
push
sub
addl
loop
cmp
push
or
cmp
enter
push
pop
popf
bound
cmpsb
ret
jae,pt
xor
and
adc
inc
sbbb
and
ljmp
mov
jle
outsb
divl
divl
lods
stos
push
stos
sbb
mov
pop
dec
mov
sub
shlb
mov
jnp
fsubrs
mov
mov
arpl
and
leave
enter
ja
lock
xor
out
push
xor
scas
cmp
push
mov
adc
inc
sub
pusha
mov
enter
lret
scas
dec
sarl
pushl
jns
dec
insb
lods
jl
fisubs
test
test
fisttpl
jp
movsb
test
xchg
ljmp
test
and
push
repnz
or
fsts
inc
lea
xchg
push
leave
jno
and
xchg
cmp
test
mov
ret
pop
sub
mov
andl
rol
cmpsl
outsb
sub
and
mov
movsl
adc
pop
inc
mov
xor
mov
std
arpl
cmpsl
push
aad
or
mov
push
xchg
imull
sub
shll
inc
mov
int
pushf
xchg
xchg
jno
out
sahf
frstor
and
in
xchg
nop
clc
inc
mov
adc
ret
int3
ljmp
jno
xchg
ljmp
cmp
mov
pop
cs
xchg
jge
mov
rcll
outsb
jl
mov
cld
inc
jmp
push
adc
mov
lods
dec
stc
mov
jg
cmp
scas
les
sbb
xchg
xchg
sbb
push
push
jae
pop
movd
or
mov
adc
push
shll
jo
repz
lret
shrb
cmp
adc
decl
pushf
xchg
sub
cwtl
dec
out
loop
push
jp
add
adc
sub
int
sbb
in
and
sub
daa
sub
test
pop
mov
or
repz
pop
loop
inc
cld
repz
adcb
cmp
mov
sbb
in
imul
jle
pop
imul
add
push
mov
lahf
stc
mov
loope
jg
and
js
cs
mov
sub
fistl
jmp
in
pop
cwtl
pop
xorl
ja
divl
dec
jbe
sbb
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
dec
jle
jg
sbb
adc
sbb
fdiv
stos
xchg
stos
add
movsb
cmp
dec
xchg
adc
add
lret
adc
js
loop
bound
mov
jbe
ror
pop
dec
pop
pop
dec
or
stos
pop
insl
imul
adc
dec
xchg
pop
sub
dec
bnd
inc
je
lret
imul
and
fs
fs
icebp
pop
dec
adc
sub
dec
lret
mov
inc
rolb
repz
mov
insl
ret
loope
in
out
aad
lret
in
mov
into
xchg
cmp
cmp
scas
fstl
mov
pop
movl
xor
mov
testl
data16
pop
pop
andb
cltd
jmp
sbb
and
push
or
sub
lds
nop
hlt
and
mov
push
xchg
insb
cmpsl
mov
cltd
and
cmp
shlb
cmc
cmp
add
inc
mov
in
mov
cmp
mov
loopne
mov
jae
mov
out
out
jle
fadds
or
repz
imul
mov
repnz
adc
jae
loopne
inc
mov
mov
dec
std
adc
sahf
stc
nop
sub
subb
div
mov
ljmp
add
jp
stc
pop
adc
mov
xchg
enter
mov
pop
pop
cmp
fistl
xor
xor
enter
insl
xor
subb
mov
jecxz
jle
xlat
push
push
inc
cltd
mov
xchg
popf
cmp
movsb
stos
or
outsl
dec
lods
dec
pop
push
inc
cmpl
repnz
dec
push
sub
daa
cmc
xor
adc
ss
push
mov
aam
dec
jne
sahf
push
mov
xchg
js
add
addr16
and
test
xor
adc
stos
add
sbb
or
inc
and
xor
jl
mov
pop
cwtl
stos
cwtl
inc
ret
repnz
push
pop
fdivrp
xchg
ret
cmp
cmp
orl
leave
int3
xor
push
jg
seta
cmpsl
stos
sahf
es
dec
outsb
lods
mov
pop
scas
adc
mov
addr16
and
mov
into
stos
hlt
sbb
shld
shl
add
iret
outsb
or
out
aas
and
mov
add
das
dec
lret
fnstsw
divb
mov
inc
sahf
jle
pop
pop
sarb
inc
push
lea
sbb
scas
imul
cmp
cmpsl
dec
pop
enter
sub
in
lds
mov
or
in
testb
jecxz
or
cmpsl
mov
dec
dec
xlat
push
mov
xchg
in
xchg
pushf
dec
mov
sbbl
pop
mov
push
mov
or
or
popa
lock
stos
dec
sub
in
ss
inc
dec
shrl
jle
mov
pop
ret
je
or
jb
aad
inc
cwtl
scas
mov
or
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
jns
sbb
adc
sbb
pop
das
and
lods
adc
jno
xlat
enter
mov
andw
clc
mov
inc
insb
sub
or
or
jl
xchg
push
or
sub
pop
mov
jae
push
or
aad
movsl
lcall
shr
push
xchg
push
es
ds
inc
mov
push
inc
ret
xchg
mov
lret
idivl
xchg
jge
and
test
cmp
out
dec
sub
es
movsb
sbb
shlb
cmpb
or
and
test
sub
push
lahf
dec
lods
lret
loop
xchg
sbb
push
mov
sbb
loopne
or
cltd
xor
and
out
cmpsb
adc
loop
pop
sub
negb
add
fwait
outsb
lret
xchg
or
fisubrs
int3
mov
mov
push
repz
ljmp
call
shll
icebp
lds
dec
cltd
arpl
ljmp
jg
call
sarb
adc
dec
add
lods
sbb
or
or
pop
and
fucomi
mov
call
xor
rorb
test
sub
scas
lods
push
mov
cmpsl
fimuls
lahf
adc
cmpsl
add
add
add
cs
jb
pop
xor
push
dec
imull
xchg
inc
sub
push
fs
call
ret
sub
inc
or
or
mov
inc
adc
shll
xor
pop
cltd
push
push
add
pop
sti
into
stos
jl
out
sub
rolb
loop
arpl
repnz
adc
sbb
popa
or
add
cmp
pushf
mov
shlb
ja
dec
test
pusha
cmp
sub
test
mov
adc
jb
pop
mov
hlt
clc
mov
and
mov
sbb
jbe
jg
shrb
or
hlt
repnz
xchg
repz
mulb
dec
cld
aaa
xor
pop
dec
test
out
sbb
cmp
vpcomuw
andl
ficompl
or
shrb
std
xor
inc
dec
cmp
sbb
push
mov
movb
in
push
sub
sahf
jnp
or
xlat
inc
adc
xor
subl
push
aas
cmp
adc
cmp
iret
mov
dec
sub
adc
and
insb
or
aad
or
std
ffree
mov
push
add
xchg
nop
push
mov
mov
jg
outsl
and
ficomps
shll
xorb
pop
shll
insl
mov
imul
jno
xor
or
in
or
xchg
xchg
aam
mov
add
add
mov
mov
sarb
subl
inc
les
fwait
mov
push
cs
outsl
cmp
lods
inc
jo
inc
rcrb
sahf
movsb
repz
test
jmp
aam
jl
enter
cmp
cmp
pop
in
fldenv
cmpsl
xor
mov
shrb
test
xchg
inc
push
mov
mov
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
xlat
mov
push
sbb
adc
sbb
int
jecxz
cmpsl
pusha
cltd
lock
or
cmc
outsb
lock
sub
mov
daa
outsl
adc
dec
sahf
dec
mov
test
leave
loopne
mov
dec
or
mov
push
in
sub
sbb
movsb
jno
pop
fidivl
xchg
scas
dec
insb
jo
ja
inc
push
dec
xchg
jbe
adc
cld
cmp
test
sub
test
cld
or
adc
fs
adc
fbld
jg
setl
lods
mov
into
dec
cmp
xlat
mov
test
add
in
movsb
sbb
sahf
or
xor
dec
push
jne
mov
mov
cltd
lock
hlt
and
int
in
call
sti
xchg
cmpsb
and
mov
fs
add
stos
jmp
and
mov
adc
pop
jb
das
je
cli
mov
mov
pop
in
shlb
sub
aaa
sbb
xchg
xchg
imul
push
pushf
dec
xchg
jp
jnp
dec
ljmp
test
fimull
adc
movsl
inc
inc
mov
mov
repz
lahf
push
cmp
sti
ja
arpl
cwtl
xor
push
lds
xor
ja
jno
or
leave
fsubr
push
call
xchg
test
dec
mov
lods
fwait
and
repz
pop
stc
jo
mov
pop
scas
rcrb
xchg
or
mov
rcrl
gs
mov
outsb
push
pop
sbb
arpl
push
mov
push
dec
lds
inc
pop
pop
bnd
pop
ljmp
movsl
daa
fidivl
fbld
outsb
sbb
xchg
jecxz
xor
data16
insb
imul
mov
mov
inc
dec
cmc
imul
or
push
mov
jmp
ja
cwtl
sbb
jmp
mov
mov
inc
es
pop
enter
mov
sbb
pushf
loopne
sub
adc
and
jge
sbb
xchg
sub
repz
enter
pop
ss
push
mov
aaa
int
test
mov
out
daa
sbb
sahf
inc
mov
mov
push
xor
jmp
mov
sbb
inc
sbb
outsl
icebp
jmp
dec
out
in
aad
icebp
loop
mov
sub
ljmp
add
mov
divl
mov
xorl
sub
xor
call
jmp
inc
or
out
push
adc
test
cs
pop
aaa
jecxz
lcall
push
adc
adc
xchg
cld
xchg
icebp
pop
push
int3
add
mov
pop
aam
or
ja
inc
pop
lea
out
out
leave
int3
leave
loope
or
jmp
pop
mov
outsl
dec
pop
cmpsb
jb
stos
data16
sbb
lret
push
mov
jmp
into
mov
sbb
data16
or
lock
into
dec
pusha
add
insb
lea
hlt
movhps
pop
mov
sub
cmpb
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
jge
mov
and
sbb
ror
imul
call
rorl
inc
inc
mov
ja
add
aas
push
popa
pushf
cmp
sub
movl
sbb
pop
xor
inc
adc
mov
jns
push
rcrb
adc
jbe
lods
and
inc
popf
add
pop
fsubl
add
mov
int3
aam
cs
and
popf
mov
mov
adc
loope
stos
xor
add
dec
fld
test
stc
les
push
dec
xor
jbe
cmp
lds
mov
add
add
je
sbb
xor
xor
sub
stc
mov
sbb
outsb
imul
inc
inc
cld
mov
pavgb
popf
xor
push
lock
subb
gs
fidivrs
and
mov
daa
ret
in
test
jns
mov
sub
xchg
pushf
adc
and
mov
mov
or
xor
xchg
push
pop
aam
lret
jl
xlat
testb
cmp
dec
jnp
scas
cmpsl
fwait
inc
add
or
sbb
push
push
dec
mov
push
push
pushf
cmp
dec
mov
sbb
in
inc
xchg
aad
xchg
jnp
mov
iret
pop
in
sub
sbb
leave
shl
sbb
mov
xchg
cs
push
mul
cltd
push
mov
mov
and
inc
xchg
lods
xchg
cmpsb
repnz
jns
cmp
into
cmpsl
adc
repz
mov
in
push
inc
repz
mov
stos
cmp
notl
std
sbb
jp
mov
push
cmp
jg
pop
fbld
inc
adc
mov
clc
jae
aas
pop
sub
add
adc
lret
inc
pop
mov
pop
fistl
fucomp
outsb
cmpb
je
scas
mov
mov
das
bound
mov
jbe
shl
outsl
jbe
sub
add
xor
lahf
ret
sahf
xlat
xchg
add
xchg
dec
mov
sbb
ljmp
call
imul
fisubl
pop
inc
scas
ret
mov
out
ja
pop
cmp
inc
fcoml
pop
aas
pop
jg
ret
cmpsl
xor
je
cmp
or
call
pop
or
mov
ljmp
mov
mov
cmp
pushf
jo
jo
fcoml
rclb
in
pop
mov
dec
push
scas
lret
dec
mov
lahf
movsb
loopne
add
jbe
jo
jge
pop
pop
xchg
insl
adc
xchg
icebp
lret
jmp
es
fucomi
cmp
mov
das
nop
mov
fidivs
stos
ljmp
or
outsl
cmp
mov
es
mov
dec
sub
pushf
mov
into
fmull
popf
fistpll
int3
mov
cmp
ret
int
or
push
int
pop
pop
cwtl
xchg
mov
sbb
movsb
lods
stc
xor
mov
aas
ljmpw
lock
out
rorb
dec
bound
push
jl
test
xchg
scas
jg
jmp
push
mov
mov
rorb
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
call
arpl
sbb
adc
sbb
xchg
es
pop
inc
xchg
hlt
lret
sub
mov
adc
and
ret
aas
in
push
cmp
pop
push
sub
sbb
jno
movsb
mov
out
ljmp
cwtl
test
sbb
sbb
inc
clc
hlt
test
cmp
das
es
sbb
ss
lea
add
rol
movsb
inc
bound
jl
or
rcll
leave
jbe
xchg
scas
and
xchg
sub
fcmovnb
rclb
mov
jns
pop
into
or
enter
out
neg
and
pop
xorb
sbb
or
or
fnsave
pusha
jge
dec
jo
pop
cmpsb
or
mov
aam
jne
inc
sbb
stos
ljmp
push
jne
jae
xor
sub
push
pop
imul
or
mov
or
or
dec
jle
push
call
xor
mov
or
lahf
cwtl
cmp
cmp
je
lea
int3
mov
int3
xor
mov
sub
xchg
mov
decb
notb
inc
pop
test
mov
out
cmove
cwtl
push
es
xchg
int3
and
and
dec
aas
dec
out
lcall
arpl
add
jb
gs
sahf
cmpsb
pop
lods
xchg
scas
adc
cs
pop
data16
test
lea
mov
xlat
xchg
arpl
push
clc
jno
xor
int
adc
sarb
mov
sub
push
sti
gs
lock
pop
pop
dec
inc
fdivp
adc
pusha
js
pop
pop
xor
dec
lret
push
hlt
out
adc
enter
out
dec
and
jne
scas
std
add
or
push
js
out
push
sbb
adcb
pop
mov
xor
cmpsb
xor
jg
lds
jo
jg
call
fadd
daa
sti
mov
aam
cmpsb
inc
pop
nop
mov
popa
scas
push
xor
test
mov
mov
out
movsb
adc
jmp
sahf
push
mov
push
stc
cmpsb
dec
cmp
sub
cmp
aam
fsubrs
lahf
mov
add
sarl
repnz
dec
ljmp
cld
add
and
pop
shll
add
mov
cs
cmp
sub
dec
mov
movsb
xchg
push
gs
or
xchg
sbb
push
sub
add
xchg
push
inc
sub
lcall
xor
ret
out
add
xor
push
pop
ss
notl
mov
inc
and
cwtl
push
cs
mov
fucomp
rorb
loopw
into
into
jnp
leave
fldenv
std
add
cli
mov
mov
in
sti
in
adc
push
fwait
xchg
mov
cwtl
xor
rolb
inc
mov
adc
or
aas
repz
fisttpl
repnz
and
jmp
dec
lods
mov
cmpsl
pop
or
add
cmp
push
andl
or
shlb
and
mov
add
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
or
jle
pop
push
sbb
adc
sbb
in
stc
jae
pop
clc
test
add
jge
pop
ret
add
aaa
fildl
loop
movsl
movsb
xchg
ret
jge
in
mov
out
jecxz
aaa
std
sub
pop
jb
or
negb
adc
push
add
imul
nop
lea
mov
fimull
mov
ficoml
pop
test
sub
fsts
sahf
addl
es
fistps
mov
insl
emms
xchg
lcall
push
fs
xor
pop
test
imul
fcmovu
rol
fistpll
or
cmpsl
cmc
fldcw
xchg
flds
mov
xor
lret
imul
mov
inc
jno
lods
sbb
push
int3
inc
stos
outsb
inc
incl
loope
popa
into
sahf
xchg
out
fisttps
sub
jl
adc
push
or
add
out
ret
xchg
sbb
cmc
xchg
iret
mov
or
push
cmp
arpl
inc
pop
sub
scas
cmpsl
test
icebp
mov
cmp
or
pop
xchg
movsl
vmovsd
push
cltd
mov
mov
or
insb
lds
cmp
dec
mov
sub
xor
in
lock
push
dec
pop
test
sbb
adc
jecxz
xchg
jns
sub
add
adc
rcrl
or
icebp
add
arpl
sub
dec
js
int3
jns
je
int3
mov
or
jbe
rcl
cmp
and
adc
mov
xchg
push
nop
in
mov
mov
xchg
push
mov
rcl
cld
jecxz
or
sub
add
rcr
mov
pushf
lods
xchg
push
xor
mov
jno
stc
pop
das
pop
ret
repz
aas
add
mov
sbb
push
or
dec
add
popf
in
pusha
int
inc
clc
mov
pop
mov
fldl
mov
pop
add
add
xor
mov
cmp
movsb
xor
pop
lods
std
ret
jne
out
sbb
mov
jae
mov
xchg
scas
mov
test
leave
div
xchg
pop
cmp
dec
inc
sbb
out
lcall
mov
pop
sbb
pusha
outsl
imul
xchg
xchg
xchg
fimull
adc
cltd
xchg
arpl
ret
imulb
orl
or
je
out
aaa
xlat
dec
mov
push
test
ret
sbb
ret
call
stos
mov
mov
movq
and
jne
cli
std
scas
push
aam
and
jle
jp
push
pop
cmpsl
cs
jmp
in
lds
call
add
jmp
es
inc
sub
and
jecxz
int3
and
cmpsl
fstpt
mov
lret
xor
dec
imul
mov
xchg
inc
xor
mov
sbb
lods
mov
cmp
bound
pushf
jl
das
and
jge
mov
mov
and
jbe
or
stos
not
rorl
pop
test
popf
pop
pop
roll
sbb
cmp
add
xlat
clc
dec
repnz
mov
call
add
stos
cmpsb
decl
lea
test
incl
lret
call
test
std
decl
shlb
add
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
push
lea
push
push
sbb
adc
sbb
test
cs
cmp
and
add
lods
jle
push
test
pop
sub
pop
scas
mov
sahf
mov
loopne
bound
test
cmpsl
pop
pop
sahf
leave
sbb
lcall
leave
cmpsb
jp
mov
repz
lods
addr16
jg
cmp
lret
push
cmp
sub
dec
addr16
inc
or
xchg
fdivl
aam
adc
hlt
ja
les
imul
mov
clc
cmpsb
mov
stc
cs
push
or
pop
sub
loopne
fdivp
push
pop
xchg
icebp
addr16
sub
iret
out
sub
lea
roll
pop
sub
jo
movsl
movsl
add
fnstenv
sti
jo
out
mov
ljmp
adc
lea
std
test
dec
pop
imul
mov
negl
adc
fcomps
dec
cmpsl
inc
inc
pushf
cmp
in
xchg
call
test
scas
fidivrl
idivb
pop
ret
or
cmp
xchg
out
adc
adc
mov
adc
rorb
clc
mov
in
sbb
xorl
dec
mov
pop
add
and
test
push
sbb
xlat
testb
or
cmc
jp
inc
leave
push
es
or
lods
jb
cmpsl
inc
push
js
pandn
pop
les
adc
ss
mov
leave
mov
out
mov
mov
xchg
sahf
adc
sub
fldl
fisubrs
jno
test
xor
aad
inc
mov
sti
lret
mov
sar
inc
stos
out
fwait
in
and
jl
cmp
sahf
xor
dec
jb
test
subl
push
aas
aaa
test
jp
sbb
scas
cwtl
aaa
pop
gs
inc
ficompl
jge
aad
mov
xchg
fidivrs
int
lret
shlb
or
andl
idivl
mov
in
cltd
xor
or
dec
xorb
sub
jns
lret
jne
sbb
test
jae
in
inc
mov
repnz
cli
clc
mov
jo
or
push
push
xor
push
dec
iret
outsl
insb
int
mov
fwait
js
sti
imul
cmp
call
fs
into
cld
in
scas
lods
mov
xchg
inc
or
sbb
notb
cmp
out
clc
jno
mov
jbe
pushf
fdiv
xchg
adcb
mov
cmpsl
cwtl
add
addb
mov
jmp
ss
lret
shrl
jg
or
loop
jecxz
xor
inc
out
stos
ljmp
mov
fcmovbe
iret
scas
scas
mov
cwtl
push
movsb
push
dec
mov
test
mov
aas
outsl
loope
loop
lcall
mov
jnp
sub
jmp
push
in
dec
data16
mov
pusha
mov
out
stos
shll
xchg
sub
test
xchg
mov
mov
and
mov
pop
sahf
test
das
push
iret
cmpsl
lods
and
mov
imul
decb
push
loope
sbb
stc
sbb
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
jno
jo
dec
push
sbb
adc
sbb
sub
fcoms
lahf
jecxz
fldcw
int3
xchg
insl
lcall
lods
or
ja
xlat
cmpsb
aaa
push
mov
out
and
stos
shlb
xchg
pop
inc
xor
js
xchg
loope
jl
es
inc
jmp
push
mov
into
repz
es
xor
xlat
movsb
xchg
adc
iret
xchg
cmp
xor
fistps
scas
mov
pushf
inc
cmpsb
push
xchg
rcrl
and
sub
lret
pop
insl
mov
cmp
cmpsb
add
jmp
inc
push
dec
xchg
outsl
aad
mov
mov
dec
jl
cmp
push
xor
push
sbb
test
movsb
lds
xor
lcall
arpl
in
cmp
mov
adc
push
loopne
pop
cmc
popf
inc
leave
or
pop
push
bound
in
pcmpeqb
cltd
xor
sbb
int
mov
jbe
mov
push
and
xchg
fwait
pop
mov
mov
shr
std
xor
and
out
into
or
inc
jbe
addr16
xor
mov
mov
mov
loope
jge
movsb
sahf
sbb
test
shll
pop
pop
insl
sbb
decb
and
fidivrs
cltd
inc
cmp
cs
xchg
icebp
cmpsl
xchg
outsl
inc
in
dec
in
mov
scas
rolb
jae
stos
xor
mov
and
add
and
cmp
pop
jno
jl
jp
xchg
mov
imul
cmp
cwtl
pop
cmp
mov
dec
jbe
mov
icebp
sub
mov
test
insb
dec
arpl
cmp
dec
adc
and
adc
sahf
cmp
jns
jae
es
and
sbb
jg
mov
enter
vpackuswb
loop
lret
data16
jecxz
arpl
fmuls
rorb
cltd
adc
lcall
aas
jb
jecxz
jle
push
or
addl
mov
imul
push
insb
js
mov
in
xor
mov
push
lods
xor
cmp
bound
pop
out
push
sarl
imul
stos
xor
xchg
xchg
aam
cmp
iret
mov
mov
mov
inc
mov
pushf
stos
aad
push
test
data16
sbb
imulb
cs
and
or
loop
mov
sbb
mov
xchg
inc
or
ret
inc
add
js
pop
fmuls
inc
imul
and
cs
xor
inc
leave
mov
lcall
sar
aad
add
or
enter
push
pop
jp
andl
push
adc
addl
push
xor
or
sub
imull
aad
mov
mov
dec
mov
shrl
adc
mov
pusha
outsl
insb
lret
or
or
xchg
push
std
call
aad
mov
sub
lret
jno
mov
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
pop
aas
mov
and
sbb
roll
negb
pop
int3
lock
dec
cltd
pop
int
cmp
jne
lret
aaa
push
jle
push
insb
insb
xchg
push
sti
dec
test
push
cltd
and
sub
sbb
in
dec
pop
xor
rorb
int3
inc
jle
loopne
dec
pop
stos
pushf
repnz
cld
push
ficoml
sbb
mov
jns
fiaddl
nop
dec
cmc
ss
lea
inc
and
test
in
cltd
cmp
jl
xchg
inc
inc
rclb
or
xchg
fs
sub
imul
add
and
ja
mov
je
mov
mov
pusha
stc
into
jno
push
addb
jge
insb
stos
cmp
mulps
inc
pop
cmp
lcall
ja
mov
in
mov
mov
shlb
push
adc
cltd
jbe
popf
xor
popf
xor
sar
xchg
mov
dec
ret
movl
in
xor
cld
out
xor
jp
sbb
sbb
mov
dec
push
push
and
mov
adc
cs
js
js
jle
mov
ret
sbb
and
out
mov
xor
jecxz
inc
jne
daa
fdivp
js
repz
jecxz
lahf
in
mov
jge
fstps
or
fs
push
mov
in
mov
adc
insb
shll
jbe
adc
mov
aam
test
ja
cmc
aas
xor
sbb
cli
popa
jl
cmpsl
rclb
movsb
xor
sbbl
push
cmp
or
div
hlt
cltd
movsl
pop
les
sbb
mov
xor
xor
mov
inc
into
push
sbb
fiaddl
sub
sub
fdivrs
scas
aaa
sub
in
fldz
lret
stos
inc
das
jl
stc
enter
popa
mov
xchg
mov
dec
xchg
dec
aaa
add
inc
xor
add
mov
pop
inc
adc
mov
stos
loopne
mov
or
clc
in
mov
cmpsb
decb
or
mov
cli
push
jg
test
pop
or
add
subl
push
push
jmp
xchg
stos
les
arpl
or
pop
aad
cmpsb
rcrl
jnp
mov
ja
push
shrb
addr16
outsb
aaa
bound
shl
sbb
xor
mov
jl
std
ret
call
xchg
rcr
pop
test
mov
jle
jecxz
lcall
in
jno
cvtps2pi
inc
push
loopne
xor
jle
jne
sub
mov
cmp
add
loope
xlat
push
sbb
jnp
fcoml
sbb
jge
xor
mov
or
xor
out
in
xchg
movsl
in
and
xchg
dec
in
pop
jae
ret
movsb
mov
mov
ret
shr
inc
out
subl
xor
and
push
ljmp
lahf
adc
inc
pop
inc
std
push
inc
test
sub
nop
jle
lods
sub
mov
jns
push
dec
push
adcl
into
sbb
pop
aam
fucom
or
mov
sbb
sahf
dec
pop
mov
movsl
xchg
mov
loopne
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
or
jbe
mov
mov
clc
add
pop
test
inc
ds
jl
mov
xchg
push
xor
or
xor
lea
loopne
sbbb
jmp
pop
add
mov
js
in
scas
jecxz
push
test
adc
xchg
mov
mov
stos
mov
sti
add
sub
cld
lea
iret
or
mov
loope
stos
das
mov
icebp
cmp
pop
sub
flds
imul
lods
xorb
xor
mov
fidivs
push
mull
dec
loop
repz
in
addb
test
inc
xchg
jns
mov
int3
clc
adcl
mov
and
push
cmp
push
sbb
movsb
popa
popa
dec
jmp
sbb
add
lods
inc
leave
mov
imul
sub
jg
xchg
nop
leave
paddw
cs
sub
dec
sbb
pop
mov
lock
enter
orb
rep
mov
cmp
daa
cmp
dec
stos
sub
scas
dec
fbld
aas
cs
fsubl
jns
inc
aas
cmp
add
fldln2
push
jecxz
dec
inc
mov
mov
lahf
pop
fcoms
add
lods
mov
fsubrl
mov
rcrl
lcall
inc
adc
and
push
bound
xor
xor
or
lods
es
mov
jnp
leave
pop
lock
loop,pt
cmc
cwtl
popa
fwait
push
jecxz
fadds
and
mov
jg
add
and
jne
xchg
jne
jle
imul
jle
arpl
test
mov
jge
sbb
or
fcmovnb
cmpsb
dec
jg
loopne
sbb
out
stos
pop
jecxz
lds
jbe
push
test
je
sbb
jb
scas
add
sub
mov
test
test
scas
aas
outsl
jo
fsubl
push
fidivrs
outsl
or
mov
lock
fcmove
int3
mov
fisubrs
sub
xchg
ret
push
pop
jo
xchg
in
push
jb
iret
addr16
inc
push
sub
iret
or
lcall
je
movsl
xchg
scas
mov
iret
mov
push
repnz
cmp
add
aad
jbe
xchg
xchg
ret
cmc
mov
mov
inc
aas
pop
dec
out
pop
mov
sub
cmp
movsl
xchg
in
mov
mov
cwtl
daa
xchg
nop
dec
sub
mov
pop
cs
push
xchg
pop
insb
movsb
xchg
popl
fbld
in
aaa
dec
pop
aad
inc
mov
sub
jb
lahf
in
xor
xchg
jno
outsb
lea
mov
cmp
gs
jne
xor
loop
adc
xchg
mov
and
jl
xchg
lret
arpl
xor
xchg
mov
fists
mov
mov
iret
in
stos
fstpl
xor
fidivl
adc
mov
int3
je
imul
mov
add
mov
test
push
dec
ret
adc
mov
cmp
push
xor
push
xchg
fidivl
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
and
sbb
loopne
pop
clc
mov
mov
leave
mov
in
mov
js
jns
push
imul
jge
stc
add
dec
ja
push
cli
cli
xchg
xorl
in
insl
mov
dec
ds
inc
pop
dec
push
mov
lret
ret
cmp
popa
cmp
daa
fwait
loop
xlat
ret
aas
es
lds
and
sbb
dec
js
and
mov
repz
lock
aaa
int
shrb
movsb
cwtl
pop
rolb
enter
sub
sbb
sbb
mov
mov
xlat
cmpsb
inc
mov
ss
or
xchg
daa
mov
aad
xor
mov
mov
or
lret
ljmp
adcl
jno
and
test
fidivl
lds
stos
inc
aaa
mov
lods
add
add
repz
scas
xchg
jl
xor
sbb
mov
popa
xor
pop
xchg
push
sbb
sub
xchg
sahf
xchg
sti
mov
rorb
nop
sbb
or
or
and
cmpsl
std
or
sbb
push
loop
mov
pusha
je
stos
jp
mov
inc
pop
insl
push
sbb
cwtl
xorb
loope
int3
lock
xchg
sub
xor
rclb
lods
in
hlt
imul
popf
fisttpl
dec
nop
mov
in
scas
movsb
pusha
inc
jo
movsb
ljmp
adc
aaa
les
sbb
push
inc
xchg
dec
jg,pt
dec
mov
sti
inc
xchg
scas
mov
sbb
pop
int
add
cli
test
cmp
ja
sbb
enter
and
add
dec
out
sbb
sahf
cmpsl
add
stc
lea
cld
enter
pop
setl
int3
lret
push
jge
add
sarl
lcall
inc
js
cmp
fidivrs
lock
lahf
push
movsb
push
pushw
repz
in
adc
push
sbb
pop
or
mov
add
out
jo
sbb
sub
rcrl
mov
insb
pop
lds
ret
push
scas
stos
push
mov
mov
mov
sub
aam
pusha
jmp
sub
aam
xchg
sub
pop
adcl
test
sub
shrb
inc
push
cs
rcl
fisttps
pop
push
mov
dec
mov
add
push
sub
sub
loopne
xor
les
in
pop
inc
in
xchg
arpl
lods
sub
insb
arpl
sbb
and
dec
pop
dec
lods
adc
js
sbb
inc
arpl
into
outsb
and
sub
sub
xchg
dec
inc
pop
xchg
xchg
pop
cmp
popf
shl
pop
or
push
stos
repz
mov
adc
popf
mov
mul
and
pop
sbb
sub
mov
ss
cli
push
xor
pop
mov
shrb
inc
shr
lahf
sub
pushf
test
inc
je
add
mov
adc
shlb
mov
std
lods
gs
dec
mov
cmp
jge
roll
mov
mov
mov
icebp
ljmp
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
mov
jl
xor
sbb
adc
sbb
add
jno
fstl
mov
in
adc
jae
daa
sub
inc
leave
mov
shll
ja
jno
mov
push
into
cmpsl
xchg
sub
sub
mov
push
js
clc
push
je
ss
repnz
jb
adc
or
xor
pop
call
mov
sub
inc
push
pop
cmp
xchg
fistps
mov
popf
cmp
aam
jg
sbb
fwait
dec
out
xor
xor
insl
das
jnp
mov
and
xchg
xchg
mov
sbb
xchg
push
pusha
lods
cli
jmp
mov
mov
dec
jb
in
jno
mov
mov
xor
mov
sarl
pop
mov
dec
sub
jle
ss
inc
loop
hlt
pop
cmpsl
fnclex
fisttpll
aaa
mov
stc
adc
popa
xor
mov
sub
inc
sub
xor
je
cmp
adc
aam
sub
or
pop
imulb
cli
jb
gs
dec
pop
ja
test
mov
js
xorb
sbbb
pushl
js
out
pop
ljmp
ret
divb
cmp
push
cmp
les
and
add
in
in
out
inc
fnstsw
sbb
lock
loopne
ret
sbb
jns
dec
cwtl
mov
lds
mov
push
dec
fnstenv
and
shlb
xor
rcll
fdivp
or
mov
mov
and
ss
mov
aam
sub
inc
loop
xchg
push
fwait
jne
jmp
test
ret
ds
mov
icebp
iret
imul
sub
xor
cmp
fdivl
sub
push
push
cmp
imull
clc
negb
pop
mov
mov
outsl
clc
andb
mov
rorl
loope
ds
subb
adc
in
mov
prefetch
insl
rorl
inc
mov
or
push
hlt
aad
push
xlat
movsl
loopne
push
cmpsl
inc
mov
lret
dec
cld
jno
ljmp
rcrb
mov
jb
scas
icebp
jge
insl
repnz
test
out
jne
gs
lods
jmp
sbb
pop
mov
jb
cmp
icebp
jbe
lret
loopne
or
dec
push
bound
into
pop
sahf
mov
lahf
mov
or
inc
adc
sbbb
ficoml
xchg
sub
fcmovbe
jge
push
hlt
fsubl
add
jne
imull
ret
out
sbb
xlat
push
ja
xchg
sahf
aad
std
push
pop
lret
jb
adc
je
adc
cmp
rorl
pop
xchg
je
add
fadd
mov
xchg
aad
sub
push
xor
call
iret
sarl
mov
scas
ficoml
lods
pop
imul
into
nop
sbb
mulb
push
sub
test
cli
movsb
popf
in
cwtl
push
cmpsb
mov
loope
mov
adc
pusha
xchg
shrl
fs
cmpsb
dec
repnz
into
ja
into
inc
nop
jne
lret
pop
outsb
movsl
les
shl
cmp
xchg
cwtl
sbb
cmp
inc
daa
lock
adc
rcrl
mov
mov
add
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
fnstsw
sub
sbb
adc
sbb
and
stc
fstpt
cmp
jle
fimuls
push
inc
adc
ljmp
push
cltd
daa
dec
int3
xchg
loop
pop
loopne
addr16
pop
sub
xorl
leave
pushf
insl
push
in
shlb
cli
pop
lahf
jecxz
lods
insb
frstor
decl
pop
jo
add
lret
xor
jnp
into
adcb
inc
xchg
inc
sub
shrb
sbb
cmp
inc
mov
mov
inc
add
jecxz
movsb
lret
iret
cmp
sbb
push
dec
fsubrl
leave
jne
int3
loope
mov
aam
inc
lret
in
xor
adc
cmp
data16
xlat
rcrb
div
mov
and
pop
jge
fwait
test
or
jae
mov
mov
nop
cmp
arpl
sbb
loopne
jmp
sub
mov
test
aam
cs
in
out
dec
loope
dec
push
test
fstp
pop
ljmp
pop
clc
push
sarb
xchg
xor
pusha
mov
push
dec
jne
cwtl
jb
mov
stos
mov
adc
sarl
mov
push
push
fstl
divb
mov
roll
pop
enter
jp
sub
cmpsb
and
cmp
push
pop
mov
mov
dec
repnz
push
fs
test
js
mov
lods
xchg
mov
or
lret
icebp
xchg
mov
push
push
test
xchg
inc
cwtl
jb
cmpb
fs
inc
sti
mov
xchg
mov
out
lods
jo
and
sbb
inc
adc
xor
ljmp
mov
dec
push
in
mov
push
dec
mov
test
fidivrl
push
xchg
cmp
aam
adcb
into
mov
outsb
pop
sahf
outsb
push
mov
mov
insl
pop
daa
mov
sbb
push
in
mov
fisttpll
pop
or
and
addr16
mov
mov
and
mov
mov
repz
jle
outsb
ja
adc
mov
ret
pop
mov
fs
pop
and
or
nop
shr
push
movsl
pop
cmp
call
std
mov
mov
xlat
pop
repz
mov
push
xor
jl
sbb
mov
js
pop
inc
mov
aam
fcomip
mov
in
xor
sbb
or
cld
je
clc
fstpt
js
mov
sbb
shrl
pushf
loop
ss
into
ret
in
pop
mov
pop
inc
jmp
sub
jecxz
rclb
dec
mov
sahf
idivb
je
movsl
outsl
pop
cli
add
or
loopne
sbb
call
dec
popf
pop
inc
bound
push
pushw
or
or
push
in
jb
data16
xchg
push
std
inc
xor
mov
jns
cmp
adc
add
pop
pop
fwait
lahf
std
out
jb
mov
xchg
data16
mov
cmp
jge
js
and
faddl
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
jecxz
add
adc
sbb
out
rorl
mov
pop
push
push
mov
sbb
stc
mov
cmp
fldt
inc
dec
movsb
adc
sub
rcl
xchg
out
xchg
pop
std
les
push
sub
mov
lock
or
mov
push
fwait
push
add
jge
lcall
andl
hlt
mov
mov
scas
pop
mov
sbb
hlt
scas
mov
loope
fisttps
es
gs
mov
cmc
add
push
pop
jae
dec
lret
lods
int
mov
ss
inc
mov
jmp
sbb
sub
popf
dec
test
mov
mov
or
leave
cmpsb
jmp
xchg
jnp
xchg
enter
push
aaa
jns
pop
add
jb
cli
pop
xchg
outsl
lret
hlt
xor
jmp
out
mov
sarb
xor
xor
ret
cmp
cmp
das
mov
lea
or
jne
rcll
fisttpll
hlt
rcl
inc
dec
in
and
cmp
daa
push
fisttpl
test
mov
jnp
sub
add
adc
adc
iret
aaa
pop
and
xor
in
les
and
sbb
sbb
or
outsl
mov
push
insl
lahf
lds
das
xchg
rcrl
cmp
push
push
stos
dec
lcall
and
xchg
jb
dec
call
mov
pop
xchg
inc
lea
lret
jl
xor
sbb
lds
aad
sub
or
out
push
sbb
cltd
stos
xor
push
mov
mov
fmul
mov
pop
ffreep
les
fstpt
sub
dec
dec
cmpsb
rcr
repz
dec
sbb
jp
pop
stos
in
dec
xlat
dec
call
inc
outsl
daa
or
dec
push
pop
stc
pop
out
les
jo
xchg
dec
bound
popf
mov
ja
jge
add
adc
int
scas
outsb
lahf
ss
pop
xchg
jbe
dec
fidivrs
loope
jmp
lea
or
cmp
clc
mov
dec
jne
dec
gs
xor
mov
mov
outsb
sub
push
xchg
mov
dec
in
jg
das
mov
es
dec
jp
jmp
stc
test
inc
cmp
fistps
mov
insl
mov
dec
lock
cmp
mov
in
lods
aaa
cld
fstps
cltd
aad
addb
or
jmp
xchg
lock
repnz
cmpsb
cmp
rcrb
std
push
jg
xor
or
sub
jle
dec
mov
nop
xchg
in
shlb
mov
jmp
lds
mov
daa
mov
dec
fisubrs
sbb
popa
mov
adc
ret
inc
push
mov
scas
fs
pop
dec
ds
push
xor
jp
inc
and
test
js
movsb
mov
loope
popf
jae
in
push
std
sbb
push
jns
scas
push
js
stos
cmpl
aaa
fstps
cmp
test
shlb
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
sub
push
sbb
adc
sbb
jmp
mov
inc
cbtw
in
ds
or
jp
mov
sub
dec
nop
std
pop
push
nop
mov
inc
inc
xor
push
lock
pop
mov
cmp
jmp
rorl
clc
xchg
addr16
pushf
and
in
lcall
xchg
test
mov
xchg
in
sbb
sarl
sbb
addr16
lcall
ljmp
clc
dec
mov
mov
clc
ret
lret
lods
pop
mov
cli
mov
adc
je
iret
fnstcw
aaa
leave
xor
insl
add
sub
out
test
jb
sub
nop
push
xor
inc
daa
cmp
iret
jb
xchg
leave
rorb
xor
jmp
fsubrs
jmp
sub
cmp
mov
in
scas
inc
shll
xchg
int3
sub
dec
loope
loope
cmpl
and
inc
jle
and
inc
test
loop
xor
aaa
or
xor
inc
cs
xchg
aam
int3
test
lods
shrb
xchg
shl
push
add
cmpsl
les
orl
inc
xor
cmpsb
loop
or
cmc
jg,pn
cmpsl
xor
sbb
rorl
int
out
mov
dec
push
lock
jae
xchg
shrb
sbb
and
sub
xor
ljmp
iret
mov
enter
mov
in
push
mov
insb
push
movsl
and
inc
cmp
out
insb
or
pushaw
adc
add
add
sub
fimuls
into
mov
cmp
rcrb
out
pop
mov
popf
hlt
lret
mov
les
mov
sbb
push
inc
push
sti
xlat
jg
call
imul
xchg
add
bnd
push
popa
push
or
jno
mov
pop
call
cmpsb
imul
int3
pop
test
sti
or
gs
mov
cli
fsubrs
test
icebp
xchg
dec
jne
icebp
insb
jnp
jge
and
sub
test
push
or
mov
cmp
fsubs
in
cld
jae
nop
cs
ds
push
fs
jmp
mov
mov
dec
clc
push
pop
sub
aas
repz
lret
inc
inc
sub
mov
pop
xchg
mov
adc
push
mov
fwait
xchg
push
push
cli
pop
fnop
xchg
add
xor
sbbl
mov
inc
lcall
xor
inc
dec
rorl
rorb
ljmp
dec
and
lods
xor
ds
cmp
push
rorl
rcrl
in
fwait
jb
fstl
jl
xchg
cmp
loope
out
pop
push
daa
aas
jns
adc
sub
jmp
sub
mov
leave
jns
add
addl
jns
dec
lahf
out
sti
push
push
test
mov
mov
lret
movsl
xor
scas
das
add
std
rorl
sahf
rclb
inc
sub
xchg
push
leave
mov
cwtl
daa
dec
pop
lds
mov
xor
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
pop
push
sbb
adc
sbb
stos
xor
shll
adc
or
mov
out
fbld
add
mov
clc
inc
fldcw
sti
scas
mov
aad
decb
inc
adc
jmp
cwtl
ret
ljmp
clc
jp
xchg
mov
or
inc
clc
sysenter
dec
incl
ja
mov
jg
add
bound
sbb
dec
ja
cmpsb
imul
jbe
movsl
outsl
fs
int3
scas
loopne
fdivr
mov
lea
fprem1
in
or
pop
sub
add
mov
jg
insb
in
frstor
push
sbb
mov
out
repz
sbb
jbe
lret
pop
xchg
jp
sahf
pop
sbb
dec
aaa
or
pushf
lret
dec
mov
and
out
add
or
dec
pop
cmp
cld
insb
lock
mov
stos
inc
pusha
xor
push
shrb
popa
ds
mov
pop
scas
loope
imul
pop
imul
push
aas
in
dec
bound
jo
test
ljmp
xor
lahf
push
cmp
cmp
movsl
aad
idivl
lock
cmp
ss
pop
vmaxps
jmp
or
mov
sub
sub
call
xchg
xlat
mov
shr
scas
sub
xchg
sbb
idivb
sbb
jae
cmp
bound
push
movd
mov
mov
jmp
insl
ret
mov
jbe
add
imul
add
bound
mov
cmpsb
lds
in
dec
mov
iret
dec
sbb
sti
bound
lods
outsl
leave
add
pushf
inc
sub
or
mov
aam
popa
ljmp
mov
mov
mov
cld
pavgw
popa
pop
sahf
aam
xchg
xor
jbe
jecxz
mov
dec
ret
rcrl
movsl
and
cmp
lods
aaa
push
add
push
and
xchg
and
xor
push
or
das
add
mov
pop
lcall
jle
test
dec
and
push
and
add
adc
daa
mov
js
fisubrl
mov
jns
mulb
call
pop
xchg
sbb
call
add
or
adc
mov
fwait
push
mov
jp
je
dec
and
int3
or
xchg
pop
mov
dec
mov
add
push
jae
push
and
dec
push
and
ja
ds
js
es
divl
scas
test
ja
ljmp
aam
out
int
mov
lods
mov
aad
sbb
bound
sub
adc
mov
std
lods
scas
xchg
ja
imul
lahf
loop
xchg
dec
sub
js
add
mov
pop
add
add
sub
adc
aam
lret
outsb
mov
mov
adc
pop
icebp
cmp
cmpsl
es
lods
nop
shrl
decl
shlb
dec
mov
sub
std
xlat
or
lods
cmpsb
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
pusha
inc
push
adc
sbb
sbb
outsb
ds
lret
xor
cwtl
jge
dec
out
movsb
js
cmp
adc
in
inc
pop
sub
cwtl
pusha
pop
sahf
mov
repnz
mov
pushf
ret
es
clc
pop
aad
xor
push
push
pop
test
insb
aaa
mov
push
push
les
mov
daa
pusha
dec
lahf
js
pop
movsb
mov
jne,pn
shl
cld
or
mov
mov
sbb
call
rcrb
adc
sbb
mov
adc
add
inc
jl
sub
sbb
ds
jbe
lods
or
int3
mov
mov
mov
mov
fldenv
cmpsl
xchg
jmp
push
addr16
stos
dec
dec
lea
fwait
in
inc
or
sti
stos
xchg
jg
mov
cmpsl
cmp
popa
sbbb
rorb
pusha
push
push
inc
sub
shlb
gs
xchg
in
jmp
lods
loope
insb
in
xlat
ja
adc
aam
mov
and
lds
sbb
test
dec
loopne
out
xchg
imul
sbb
mov
pushw
pop
xor
roll
sbb
adc
lcall
pop
and
test
call
push
adc
lds
push
cmc
int
sbb
sbb
mov
xchg
ret
jb
fistpl
push
jp
cmp
outsl
stos
dec
fwait
pop
enter
inc
fbld
aas
pop
scas
or
clc
pop
ret
sbb
fsubl
imul
ds
jb
out
mov
fs
jg
jp
inc
mov
test
add
jmp
loopne
test
mov
mov
cmp
shrb
nop
lret
arpl
push
lret
add
sbb
and
cmp
in
jmp
push
addb
mov
push
es
push
fdivrs
mov
add
psrlw
loop
cmp
xor
cmpsl
out
aam
mov
xor
mov
mov
gs
sbb
fists
mov
sub
mov
in
std
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
nop
addl
mov
add
in
add
xchg
xchg
add
add
addl
add
add
mov
add
add
add
add
add
add
fadds
add
add
add
xchg
add
faddl
add
add
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
les
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
fsubl
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
dec
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
pop
es
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
les
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
adc
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
inc
and
add
sub
add
add
scas
lcall
das
dec
add
cmp
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
xchg
addl
sahf
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
push
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
test
add
add
mov
add
lods
test
add
test
add
test
add
test
add
test
add
add
and
add
xchg
add
add
pop
xchg
add
add
jle
add
add
add
lahf
add
addb
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
push
add
jp
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
mov
add
add
add
orb
add
mov
add
add
fimuls
add
decb
add
mov
add
add
inc
mov
add
add
add
jp
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
add
add
push
mov
add
mov
add
add
push
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
mov
add
les
add
in
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
