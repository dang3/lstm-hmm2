push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
sbb
bound
sbb
bound
xor
cmp
jns
jbe
dec
cmpsb
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
addl
xlat
adc
cmpsl
icebp
iret
xchg
ljmp
outsl
out
cld
ret
into
cmp
xchg
sbb
orb
mov
loopne
gs
push
xchg
jecxz
lret
pusha
sub
jns
testl
push
icebp
fcompl
movsl
mov
mov
push
decb
fiaddl
push
lret
jge
test
cmpsl
cmp
xchg
mov
in
cs
out
rorl
movsl
imul
xchg
cmpsb
jl
or
test
test
push
rcll
loope
and
aas
movsl
xor
dec
xor
mov
dec
movsb
jno
sbbb
sub
adc
cmpsb
sti
ja
fdivrl
movsb
movsb
mov
and
or
adc
add
les
jno
or
std
inc
jo
divl
mov
adc
dec
mov
push
aas
and
test
mov
xchg
leave
bound
pop
sbb
push
jns
fimuls
lret
jl
cmp
mov
add
push
fildll
js
xchg
cmp
jne
clc
divl
push
clc
adc
pop
mov
pop
dec
jecxz
sub
inc
xchg
dec
in
dec
pop
mov
cmp
mov
hlt
pop
lret
outsl
fsubs
stos
arpl
or
push
lcall
mov
rorl
imul
xchg
clc
jmp
test
lcall
imul
arpl
decl
push
jno
jecxz
xorl
xchg
lahf
dec
in
in
mov
lcall
push
jno
test
sbb
push
adc
jns
ret
les
ss
js
popf
jns
bound
fs
shl
cmp
in
rorl
rorl
hlt
inc
rolb
fistpl
das
mov
jge
mov
in
vpsubd
mov
push
imul
or
cmp
cmpl
pop
push
or
lret
xchg
sbb
std
scas
cmp
sub
lcall
je
jae
inc
mov
ljmp
xor
xor
fisttpll
jns
idivb
inc
add
cltd
dec
cmp
outsl
ds
ss
cmp
adc
jnp,pn
das
add
mov
outsb
sti
repnz
ljmp
stc
aam
mov
repnz
mov
add
out
xchg
push
sbb
xchg
mov
test
pop
cld
lods
cwtl
shr
jl
outsb
lods
push
xchg
adc
mov
mov
and
in
jp
xchg
mov
mull
pop
sub
or
std
and
adc
lret
arpl
aad
cmp
push
adc
and
inc
push
mov
dec
cltd
sub
adc
push
je
lret
push
in
in
jne
adc
adc
pop
pop
out
repnz
add
cwtl
mov
mov
sub
cltd
aaa
pushf
add
push
jl
int
or
dec
sub
dec
xchg
jbe
divl
faddp
insb
pop
mov
adc
push
aad
push
pusha
arpl
dec
cld
aas
sahf
out
fs
ret
cmp
in
aaa
lcall
fstp
fldenv
sub
or
mov
movsb
clc
addr16
push
xchg
arpl
inc
rcll
mov
stc
and
pop
mov
pop
fiaddl
dec
dec
add
gs
adc
xchg
out
push
jbe
insb
pushf
mov
out
or
adc
jmp
ret
or
xor
ret
cmp
jnp
push
add
cmp
flds
xor
imul
shlb
cmp
push
jnp
out
jecxz
sub
cmp
mov
fcoml
or
imulb
mov
clc
mov
pop
jb
js
aad
hlt
dec
add
add
inc
mov
rclb
adc
jecxz
cld
fnstsw
adc
push
lret
mov
mul
xchg
stos
mov
pusha
lods
push
cltd
in
push
xor
lret
cmp
inc
jle
outsb
movsb
jbe
sbb
inc
adc
add
push
adc
adc
outsl
imul
das
fnstcw
neg
and
or
push
push
push
aas
push
jo,pn
adc
stc
mov
int3
push
or
cld
daa
sbb
jbe
mov
andb
stos
mov
dec
xor
rorl
ret
push
xor
jmp
and
sbb
data16
adc
pop
inc
mov
outsb
mov
xchg
xchg
mull
testb
add
bound
sub
xor
bound
adc
pusha
repz
add
push
test
jg
xor
stc
lcall
or
or
icebp
adc
hlt
xsavec
rolb
dec
xor
ja
cmp
pop
test
sbb
subb
aad
sahf
push
loopne
lret
ss
xor
in
clc
mov
jg,pt
fiadds
pop
addr16
adc
pop
mov
push
xchg
xor
mov
cmpsl
out
cli
xchg
fldt
das
add
arpl
mov
frstor
fsub
push
add
add
dec
imul
inc
lret
gs
gs
imul
adc
cmp
push
test
pop
jg
sbbl
test
jecxz
pop
into
outsl
lods
mov
dec
xor
fldl
lods
rorl
imul
mov
loopne
inc
adc
test
jns
sub
das
fimuls
inc
hlt
push
jbe
ljmp
popf
es
xlat
push
inc
mov
pop
arpl
les
sahf
lret
dec
rclb
mov
cmp
mov
inc
js
push
gs
push
data16
fdivs
pop
and
test
into
rorl
stc
adc
sbb
inc
in
or
movsl
mov
jbe
xchg
outsb
shlb
adc
bnd
les
sub
jnp
std
int
cmpsl
and
gs
inc
and
adc
ficomps
mov
inc
inc
cs
jecxz
test
jne
mov
push
push
pop
or
pop
fldenv
daa
dec
or
or
sti
jae
mov
dec
fucomi
pop
nop
jmp
adc
out
clc
jo
scas
outsl
insb
pop
xor
and
aas
push
jp
pop
cmc
cmp
int
pop
push
push
cmc
ja
lods
cmp
pop
sbb
addr16
sub
inc
out
push
fcoms
mov
lcall
sub
dec
cmpsb
xor
into
aaa
xchg
and
lahf
int
sub
mov
mov
and
mov
lock
arpl
lahf
pop
repnz
out
jns
mov
jno
xchg
lods
xor
sbb
dec
sub
ja
mov
jb
sbb
repnz
out
jecxz
and
dec
sbb
dec
cmpb
lods
mov
cs
sbb
sbb
fcmovnbe
addr16
mov
sub
negb
shr
push
mov
mov
sbb
ret
into
orb
test
out
or
pusha
push
sub
mov
stos
pop
fdivl
imul
sub
arpl
arpl
popf
loope
or
adc
outsb
sub
dec
and
mov
je
out
add
das
cmovs
pop
add
pushf
mov
jmp
xchg
movsl
jnp
lret
mov
mov
xlat
in
ret
pop
icebp
mov
jb
fstp
cmpsb
pop
push
sub
sti
lahf
lsl
dec
pop
out
jl
movsl
sub
stos
std
pop
pusha
inc
jle
cmp
stc
sub
mov
imul
aaa
popa
lahf
jecxz
add
lcall
lahf
rcll
push
dec
in
lea
pushf
jae
fnstenv
or
dec
fldenv
test
xchg
mov
pop
and
and
shr
dec
rclb
outsb
sbb
inc
test
xchg
add
inc
pusha
int
inc
xchg
mov
xor
ja
xor
incl
sbb
dec
hlt
aaa
scas
hlt
xchg
div
jg
dec
mov
mov
jb
adc
push
dec
jnp
pop
outsl
jp
push
pusha
pop
fldt
cmp
adc
cmp
cmpl
pop
add
xchg
or
inc
inc
mov
cmp
int
inc
adc
cli
mov
or
loope
les
fsubr
lock
ds
cmp
pop
scas
fsub
xor
dec
mov
pushf
add
into
mov
scas
out
cltd
push
aas
bswap
out
mov
inc
pop
test
pusha
xchg
add
xchg
adc
inc
push
cmpsb
gs
fiaddl
std
pushf
jge
push
sub
mov
add
cmpsl
popf
insb
mov
jl
push
push
in
cwtl
dec
mov
mov
fptan
loope
sub
adc
cs
pop
or
ss
pushf
xchg
movsb
stos
pop
pushf
cli
incl
or
mov
ficomps
xchg
push
pushf
jp
imul
mov
pop
push
cmp
sahf
push
shrb
pop
pcmpeqb
jp
add
cmc
mov
cmp
ljmp
jecxz
mov
mov
mov
push
cmp
jae
subl
in
out
int3
add
les
pop
mov
call
mov
jle
mov
fwait
shlb
sub
and
push
pop
sbb
adc
fnsave
adc
push
lods
int3
pop
adc
dec
and
shl
rcrb
mov
test
ficomps
nop
cs
or
outsb
loopne
push
xchg
in
or
push
adc
jno
fs
lea
mov
nop
pop
sahf
jmp
xchg
out
filds
iret
sub
fcomi
ja
mov
mov
push
das
push
pop
jae
cmpsb
call
aad
cmp
daa
test
orb
inc
icebp
xor
sbb
inc
jne
ret
mov
lock
daa
lcall
mov
vmovapd
xchg
sbb
roll
lods
ljmp
dec
xor
rorb
js
divl
adc
cmc
adc
cld
push
mov
hlt
pop
push
inc
sub
pop
pop
shrl
cmp
jecxz
std
pop
dec
das
jbe
mov
sarb
and
or
aas
js
add
fbld
cs
shll
ja
fdivr
push
xchg
enter
add
mov
icebp
mov
in
mov
in
nop
mov
push
xchg
cmp
loopne
cmp
add
xchg
jle
xchg
cmc
mov
mov
outsl
mov
sbbb
fistps
cmp
adc
insl
cmp
aam
nop
sbb
pusha
leave
mov
iret
or
fists
jge
int
aam
adc
clc
jbe
cli
fs
hlt
jns
lret
xchg
scas
mov
icebp
add
dec
notb
in
or
iret
mov
xor
mov
pop
cmp
aas
push
pusha
and
arpl
push
in
mov
jle
push
fimull
fldt
xor
xchg
or
pusha
and
add
sbb
loope
or
adc
sbb
hlt
rcrl
call
test
or
mov
cli
lcall
push
int3
out
xchg
mov
decb
in
pop
cmp
aam
cmpsb
mov
jo
cmc
cs
inc
daa
mov
not
inc
rolb
inc
andl
loopne
sub
ljmp
gs
inc
sub
lea
pop
xor
lea
aaa
xlat
sahf
fidivl
lock
sub
pop
hlt
or
ljmp
fimuls
mov
hlt
jbe
push
xor
lock
imul
pusha
inc
scas
and
pop
mov
lahf
imul
cmp
cwtl
outsl
cwtl
repz
xor
or
rolb
insb
mov
shrl
js
push
push
xor
pop
pop
sbb
jbe
insl
ss
mov
sub
cwtl
popa
inc
dec
jge
insb
jnp
dec
ficoms
insl
mov
mov
pop
adc
dec
mov
dec
and
inc
xchg
jecxz
mov
xor
mov
jl
enter
xlat
xchg
jl
out
and
cmp
push
xor
loop
arpl
add
orb
mov
push
add
push
jbe
in
cwtl
adc
shlb
mov
ficoml
sbb
and
xchg
pop
pop
mov
pop
andb
stc
int3
aam
mov
call
pop
loope
adc
xor
push
add
mov
xor
ss
pop
sub
xor
scas
stos
sub
mov
dec
xor
cmc
dec
dec
rcrl
cmp
jo
adc
jl
xchg
shrb
mov
gs
jno
push
rcrb
cmp
cld
mov
jmp
mov
adc
stos
inc
mov
mov
jle
scas
aaa
push
adc
je
sbb
inc
mov
mov
and
mov
pop
std
cwtl
mov
test
jecxz
sbb
nop
mov
push
sbb
cmp
xchg
and
scas
jle
push
sub
ja
sbb
or
stos
mov
sar
mov
js
push
mov
ud0
scas
leave
repnz
inc
shrb
push
ret
xor
mov
and
mov
movsl
cmc
xchg
lods
in
out
sahf
out
pusha
mov
cmc
scas
cmpsb
movsb
dec
and
push
out
pop
add
xchg
sub
mov
pop
sub
lret
mov
inc
push
jp
out
or
add
pop
mov
xor
pop
aas
jne
loope
iret
imul
push
in
bound
pop
sub
xchg
add
ljmp
es
adc
add
or
push
push
and
pop
loopne
mov
fistl
fdiv
cli
and
adc
jmp
xor
test
inc
out
jecxz
and
cs
cmc
ja
xchg
lds
lahf
lods
or
xchg
addb
cwtl
mov
adc
mov
adc
lcall
or
mov
sub
inc
imul
rcll
sbb
out
out
jmp
xor
mov
test
mov
xchg
testl
shlb
scas
divl
shll
or
nop
jge,pt
sti
fsubl
in
cmp
or
out
out
loopne
pop
ja
inc
mov
add
push
mov
xchg
hlt
sub
push
outsl
ds
dec
push
push
clc
lret
popf
iret
inc
repz
xor
mov
pop
mov
outsb
pushf
adc
jp
mov
cld
inc
adc
daa
arpl
xor
jecxz
addl
dec
out
test
loopne
xor
out
daa
ret
mov
imul
out
pusha
jl
push
adc
push
push
ret
and
ret
testb
cmc
push
push
ret
out
stos
mov
jg
icebp
repnz
adc
cmp
pop
cmc
mov
pop
sub
icebp
icebp
xor
in
push
pop
imul
inc
stc
mulb
mov
rcrl
mov
mov
aam
call
pop
inc
enter
pop
das
adc
mov
popa
mov
call
pop
fmuls
not
ss
sbb
lcall
pop
js
aad
icebp
pop
sub
pop
mov
xor
aaa
mov
out
mov
cmp
data16
insl
jbe
inc
ror
inc
lahf
pop
pop
popa
icebp
or
dec
fnstsw
ret
xchg
lret
sbb
or
xchg
addl
dec
adc
mov
sub
mov
ljmp
insl
mulb
ljmp
shll
shll
add
jae
pop
pop
fiadds
pcmpgtd
inc
outsb
cmp
adc
pop
lret
test
addl
xor
idiv
push
push
xchg
mov
mov
xchg
pop
push
mov
lahf
push
out
sub
mov
je
cmpsb
mov
dec
xchg
jno
adc
push
mov
mov
stc
cld
andl
in
insl
push
fidivs
mov
aad
mov
add
in
cld
mov
push
sbb
cs
repz
popf
mov
sbb
mov
mov
jne
in
test
and
ret
push
push
add
in
icebp
inc
pop
into
xchg
lods
test
adc
clc
popa
mov
pop
gs
push
and
adcb
dec
sub
jne
mov
xlat
imul
jge
inc
lds
std
pop
jle
rcrb
xor
adc
mov
mov
add
sub
clc
subb
mov
mov
out
lods
movsl
icebp
xchg
and
cli
sub
fistps
xor
mov
and
mov
mov
jp
mov
sub
lock
fdivrl
mov
out
sti
mov
test
pop
das
adc
add
add
cmc
lret
mov
dec
jmp
scas
fcmovbe
mov
out
xor
mov
xchg
cmp
mov
in
push
test
in
mov
push
sahf
addr16
stos
ret
call
hlt
sbb
or
cmp
fwait
jge
push
sbb
inc
int
jp
and
addl
cmp
add
xor
call
std
sbb
push
jnp
xchg
xor
sbb
inc
pop
mov
or
mov
adc
mov
std
sub
mov
test
mov
sti
jecxz
jns
imul
dec
xorl
stos
mov
repnz
insl
cmp
lcall
ljmp
add
sub
fs
xchg
or
pop
mov
mov
shrb
cli
mov
cmpb
loop
push
add
jp
jp
xorl
cwtl
xor
stc
rcll
fcmovbe
xchg
push
lcall
xchg
add
mov
jne
cmp
push
lods
pop
jp
sbb
je
or
add
lret
sbb
jge
leave
stos
mov
and
inc
sub
ret
jo
add
mov
mov
mov
jbe
sub
add
add
pop
xchg
xchg
ss
push
pop
pop
outsb
and
lods
inc
pushl
mov
mov
add
outsl
push
mov
sub
addl
xor
pop
xor
add
shll
pop
xor
in
pusha
arpl
mov
adc
xor
pop
repz
inc
mov
popa
leave
xchg
std
jmp
outsb
xor
cltd
dec
popf
in
cmc
adc
repz
addr16
test
popf
mov
cli
mov
push
add
and
xchg
mov
mov
dec
mov
inc
mov
gs
xor
mov
lret
adc
sbb
xchg
test
or
xchg
fbld
and
cmp
bnd
imul
xchg
jo
cmp
ja
icebp
jno
cltd
insb
xchg
pop
inc
es
sub
cmp
clc
out
out
dec
icebp
jecxz
in
test
sbb
mov
je
in
inc
insb
push
and
sbb
mull
mov
push
mov
shll
cs
push
sub
adc
cmp
test
aas
mov
jo
test
push
mov
dec
and
arpl
xchg
je
imul
xchg
jne
lods
aas
cmpsl
jae
push
or
push
or
sub
ret
xchg
movsl
test
incb
das
lds
mull
into
shrl
mov
xor
adc
xor
xor
mov
aad
aad
aaa
pushf
in
leave
sub
or
add
cwtl
icebp
pop
pop
int
sbb
or
inc
cmc
in
mov
fneni(8087
xor
pop
push
mov
repz
out
add
xor
test
dec
xlat
outsb
sbb
daa
mov
cld
cmp
aas
pushf
lods
xchg
hlt
or
dec
clc
adc
inc
jmp
mov
mov
lea
mov
push
mov
mov
dec
insb
and
sti
int3
push
fldt
mov
outsl
mov
into
in
push
cli
popf
dec
je
xor
data16
shlb
inc
test
mov
imul
rorb
leave
jle
loop
btrl
sub
lock
mov
push
fstpt
stc
and
ret
and
popf
add
jp
jecxz
lods
and
adc
je
test
inc
push
loope
or
xor
ret
pop
repz
inc
xlat
xchg
push
sub
sti
out
mov
lock
push
push
repnz
rorb
dec
push
or
mov
adc
jecxz
mov
iret
inc
ret
addr16
add
xchg
push
inc
lods
movb
and
je
mov
sbbl
jns
stos
stos
add
lock
test
stos
scas
or
sbb
sub
popa
sti
inc
or
inc
daa
jmp
jae
cs
xchg
bound
bound
mov
sub
stc
in
adcl
and
push
repnz
sarl
out
xchg
xor
adc
sub
cmp
adc
jmp
mov
mov
or
loop
icebp
ret
stos
mov
cmp
scas
dec
adc
bound
outsb
jle
idiv
jl
pop
xchg
flds
sub
inc
in
jp
xchg
mov
jle
or
aad
mov
insl
and
aad
push
sbb
cmp
mov
mov
push
aaa
enter
js
and
pushf
push
inc
cli
adc
cmpsb
add
or
ret
push
stos
or
lods
mov
xor
cmpl
push
inc
mov
inc
sti
push
test
adc
pop
cmp
pop
or
shrl
pushl
mov
cmp
mov
and
jnp
add
in
loopne
jmp
insl
ss
add
icebp
mov
xchg
leave
adcl
cli
imull
push
clc
push
stos
push
in
cmc
add
xor
xchg
lds
xchg
std
in
xor
xchg
mov
pop
les
icebp
cli
lds
jbe
sti
xor
mov
sarb
loop
call
insl
xchg
xchg
daa
xchg
mov
xor
pop
push
repz
rcll
mov
fnstenv
and
sbb
outsl
clc
fmull
sub
pusha
pusha
aam
xchg
mov
repz
add
int
in
push
popa
xor
mov
sub
xchg
inc
mov
sbb
mov
outsb
mov
mov
pop
dec
inc
out
dec
sub
dec
test
cmc
sarl
popf
fwait
outsb
pop
mov
adc
test
ljmp
sub
popa
mov
and
push
rcr
inc
jae
stos
cmp
mov
or
sti
inc
pop
pusha
lock
arpl
and
add
ds
jne
addr16
sub
or
adc
sbb
fwait
mov
imul
add
lock
pop
jb
cmp
es
and
int
test
sbb
mov
mov
and
mov
jle
push
jle
jno
or
xchg
out
cmp
push
jmp
mov
outsl
inc
inc
sub
mov
pop
adc
lea
and
pop
test
or
and
inc
cmp
test
dec
lahf
stos
push
sub
mov
or
push
xor
xchg
into
std
xor
into
loopne
and
xchg
adc
hlt
mov
pop
enter
cmpb
sub
adc
loop
mov
call
adc
icebp
jne
sbb
xor
shr
test
xlat
test
jp
shlb
and
pusha
lcall
xor
mov
cmpsl
pop
repnz
sub
xchg
nop
mov
push
xor
cld
inc
repnz
jle
push
imul
push
dec
and
cld
ljmp
ljmp
mov
xor
jae
xchg
mov
bound
pop
xor
sarb
into
mov
enter
outsb
adc
adc
cmp
pop
inc
push
mov
mov
mov
xlat
and
andl
das
cs
mov
cmp
fldcw
xchg
mov
js
pop
xchg
push
loope
std
dec
push
in
xlat
call
push
sbb
sbb
mov
push
lret
push
aaa
das
dec
sbb
out
shlb
stos
jmp
decb
cmp
sbb
fbld
in
or
cmp
xor
lcall
dec
adc
enter
mov
dec
bound
dec
ljmp
out
pushf
movsb
mov
sbb
enter
out
scas
sti
xchg
sbb
pop
cmp
iret
mov
and
aam
jnp
test
lret
xlat
sub
mov
cs
cmpsb
jno
mov
repz
mov
push
lret
aam
cwtl
jecxz
xor
das
iret
pop
or
xchg
mov
or
outsb
mov
pop
adc
mov
add
mov
mov
pop
xchg
test
popl
lds
sahf
inc
and
into
repnz
xchg
out
mov
imul
or
aas
add
push
xchg
adc
ljmp
sub
jmp
in
cld
and
int3
push
xor
inc
ljmp
xchg
lcall
or
cmp
es
ss
sbb
call
out
shrl
cmc
xchg
scas
in
je
xor
add
xorb
xorb
lds
xlat
mov
pop
popf
dec
dec
jl
clc
daa
push
cmc
stos
xchg
into
push
daa
lods
or
fcmovb
movsb
gs
mov
pop
sbb
push
ret
and
lds
sub
inc
rorb
fs
cwtl
out
int
bound
xor
push
dec
dec
xor
xor
and
in
shrl
test
jne
cmc
add
jge
jp
pop
adc
fdivl
push
pop
sbb
and
xor
stos
mov
push
ss
and
cltd
mov
mov
push
xor
dec
mov
ds
pop
mov
dec
add
imul
fnstenv
pushf
icebp
cwtl
fistpl
add
stc
jl
fsub
sbb
aad
pusha
jno
add
faddl
add
cmp
lcall
arpl
jl
cmp
mov
sar
cmc
xor
push
or
loop
jge
fstl
out
scas
jo
clc
add
insb
cltd
jmp
pop
or
fdivrs
jmp
push
lcall
and
loop
mov
cmc
or
push
movsl
sub
scas
inc
pop
lret
ret
mov
movsl
mov
popa
stos
mov
in
xor
mov
or
jp
jb
xchg
jge
lds
sbb
cmpsb
fs
mov
pop
sbb
push
xlat
pop
test
test
std
pop
mov
ja
call
imul
jae
mov
inc
mov
add
lock
lret
xchg
adc
add
mov
out
clc
pop
mov
test
cmp
sti
push
mov
loopne
add
cmp
outsb
aam
push
lahf
mov
cmc
mov
xchg
push
sub
cmpsl
ret
dec
cld
adc
lds
shlb
jae
add
push
cwtl
xchg
popf
orb
jne
imul
les
jp
lods
test
or
js
inc
lods
arpl
mov
cs
lcall
add
testb
bswap
es
push
mov
insb
mov
movsb
sbb
push
jae
sub
xor
cmc
fbstp
jmp
jno
out
ret
xchg
scas
mov
fidivrl
sbb
mov
jl
popa
sbb
out
jnp
pop
mov
mov
fildl
fiaddl
sbb
cmp
pop
push
fisubrs
jns
out
scas
loop
sub
sbb
lock
mov
mov
repz
imul
sub
cwtl
push
xor
sarl
dec
in
lods
cmp
push
iret
push
pop
insb
push
outsl
sahf
pop
adc
nop
pop
ret
lahf
push
inc
fimull
cmp
push
fcoml
outsb
pop
jbe
fnsave
xchg
dec
pop
mov
sti
fsubrs
sar
jmp
scas
xchg
push
xchg
mov
je
iret
int
cmpsl
insb
imul
sub
out
out
mov
xor
push
push
std
pop
mov
nop
jmp
sub
call
mov
dec
xor
or
test
xchg
movsb
popf
subl
cs
cmp
add
loopne
fildl
push
mov
dec
pop
ljmp
mov
mov
stos
lock
xor
in
sbb
mov
popf
mov
and
bound
lods
nop
mov
inc
addl
out
and
out
mov
fisubrl
sub
mov
shr
push
fwait
scas
jl
push
jle
add
xchg
lcall
xchg
inc
sub
shrl
jl
or
mov
pop
mov
iret
or
rorb
cmpsl
outsb
aam
cmpsb
jnp
sbb
leave
mov
pushf
call
clc
fildll
add
decl
aas
cmp
cmp
jno
cmp
rclb
rolb
outsb
repz
add
inc
jecxz
pop
dec
pop
or
in
in
aas
imul
push
push
jge
pop
xchg
scas
xchg
fimull
int
or
and
jg
test
out
loop
shll
inc
bound
pushf
movsl
mov
es
and
adc
sub
lds
das
xor
mov
jae
orb
jg
enter
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
pusha
jnp
sbb
bound
pop
bound
loope
dec
mov
ret
and
cmc
jmp
jo
adc
fidivrl
mov
imul
sbb
stos
xlat
adc
and
rol
ficomps
sarl
out
or
pop
push
pop
popa
mov
jb
aam
mov
into
mov
out
popf
sub
and
push
xor
imul
inc
jb
or
shr
mov
pop
jnp
in
rcrb
std
lock
push
aaa
xor
mulb
imulb
aad
ret
sub
int3
clc
int
push
push
in
arpl
xchg
add
outsl
out
sbb
mov
inc
idivl
pusha
lret
aas
inc
xor
mov
xor
sbbl
push
imul
clc
ljmp
ja
mov
rcrl
ret
add
imul
loopne
dec
jp
lcall
outsl
and
fnsave
cwtl
call
in
push
jns
ljmp
call
cmpsb
jbe
dec
call
xlat
xchg
push
xor
jb
jae
inc
jbe
fistl
mov
adc
pop
xchg
or
sub
in
out
and
je
mov
jmp
push
cs
outsl
xor
shll
add
xor
sahf
sbb
iret
inc
push
ret
mov
addr16
pusha
or
test
daa
dec
add
cmp
inc
in
lret
sub
bound
mov
imul
dec
push
xor
dec
dec
out
popf
shrb
es
test
push
aas
sub
xchg
mov
pop
test
cmp
cwtl
dec
test
and
push
cwtl
lea
jae
adc
mov
out
mov
cmovs
stos
push
xchg
rcrl
insb
les
xor
mov
inc
notb
xchg
mov
daa
mov
andl
loope
cmp
fmuls
jne
cld
mov
iret
imul
push
xor
shll
xchg
aam
mov
fs
lods
xchg
and
roll
dec
cmpsb
test
loope
adc
jns
in
or
inc
loope
dec
sar
push
hlt
xchg
fcmovb
jmp
jp
loop
cmp
pop
push
fnstsw
pop
inc
ds
repz
xchg
push
hlt
pop
push
xchg
rorb
ret
movsb
mov
xor
pop
cwtl
push
xchg
ss
shlb
pusha
jbe
std
pusha
dec
pop
add
pop
imul
testb
adc
mulb
sub
call
test
repz
mulb
nop
jnp
loopne
subl
sbb
int
jnp
jecxz
mov
aas
shl
mov
shr
jg
add
popa
dec
sub
xor
inc
cmp
mov
jmp
jns
pop
jbe
test
lahf
lcall
jmp
leave
xchg
jg
call
xchg
mov
hlt
icebp
xchg
pop
xlat
push
mov
lret
pop
mov
popf
stos
adc
inc
push
cmp
out
out
and
arpl
sbb
leave
movsl
adc
xchg
push
aas
xor
cmc
lea
cwtl
and
sub
mov
push
pusha
pop
lret
cmpsb
inc
jl
jge
fisubl
push
or
sbb
adc
sub
mov
arpl
mov
mov
dec
js
xor
push
or
mov
xchg
lcall
adc
xchg
cld
sbb
aaa
dec
push
sti
xchg
inc
push
inc
pop
jo
sarb
inc
shlb
pop
push
lcall
sub
aam
push
adc
xlat
xchg
push
mov
dec
dec
stos
and
lods
pop
dec
mov
in
testl
xor
aam
cmp
rcll
call
jmp
adc
out
ja
mov
cmp
inc
neg
mov
data16
loope
sbb
ljmp
nop
inc
test
ret
adc
inc
jmp
xchg
test
jnp
cmp
mov
jo
int3
aas
jbe
cmpsb
add
outsl
les
lea
mov
xor
inc
iret
mov
jne
imul
out
roll
jecxz
idivb
cmp
sti
leave
adc
aas
lods
cli
leave
aaa
lret
jle
arpl
and
jl
lock
adc
cli
js
ret
mov
dec
shll
nop
lock
test
xchg
adc
int
lods
cmp
or
popf
stos
sub
insl
shlb
inc
fldcw
push
sub
paddd
inc
jbe
sbb
jo
sbb
and
sar
adc
push
jl
mov
cltd
sbb
pop
sub
inc
dec
push
xchg
push
jle
popa
data16
ret
ds
jmp
rcrl
or
cltd
add
add
fcmovnbe
pop
adc
imulb
jp
sub
inc
iret
jecxz
mov
ljmp
stos
in
ret
inc
test
ret
and
push
xchg
and
in
popa
sbb
stos
jae
xor
fmuls
sbb
mov
push
or
sub
jle
ljmp
push
pop
xchg
out
jnp
in
mov
cs
out
push
jne
das
cli
into
stos
dec
inc
jne
loopne
jo
inc
dec
xor
or
sti
push
addr16
jmp
and
cwtl
int
mov
addr16
dec
pop
push
pop
negb
mov
lcall
out
fimull
mov
xor
loope
jmp
gs
jle
dec
inc
arpl
bound
pop
faddp
aas
idiv
cwtl
lcall
mov
mov
ret
inc
sub
and
mov
lcall
addl
xor
mov
cmpsb
sbb
dec
fadds
adc
ss
cmp
test
push
insb
cwtl
sti
xor
jecxz
or
jmp
cld
mov
add
or
add
test
decb
push
aam
or
adcb
jge
fimuls
repz
cltd
mov
dec
mov
lods
inc
dec
fwait
xor
lcall
adc
mov
xor
pop
icebp
gs
lret
push
jg
stos
lret
pushl
into
sbb
push
fisubrs
stc
pop
arpl
arpl
out
mov
or
ljmp
popf
xor
push
xchg
les
inc
pop
scas
cmpsb
iret
add
and
mov
cmpsb
idivl
popf
push
or
sub
out
cmp
stos
pop
add
stc
sub
push
cmp
adc
or
and
push
mov
dec
je
inc
in
pushl
scas
xchg
sbb
cmp
popa
or
pop
push
mov
imul
test
imul
pop
fistpl
rorb
push
stc
in
cmpsb
inc
mov
push
adc
stos
iret
int3
mov
pop
xchg
mov
cmp
fisubl
ret
mov
pop
daa
test
adc
adc
fwait
adc
stos
sbb
clc
jbe
lods
jae
adc
or
sbb
insb
fwait
and
and
pop
xor
daa
das
mov
xchg
xor
mov
aas
dec
lret
pusha
dec
dec
sub
pop
mov
push
imul
imul
jmp
fcom
or
mov
cwtl
lea
ds
imul
rcll
ret
push
sbb
data16
rol
pop
out
cmpsl
gs
mov
dec
mov
add
movsl
mov
cmp
test
js
loop
cmpsl
cmp
jecxz
mov
fs
std
int
icebp
fbstp
loopne
cmc
stos
daa
lahf
sahf
cmp
das
fisttpll
scas
stos
and
mov
add
shr
jno
add
jle
push
frstor
ds
or
jmp
insl
lret
push
and
pop
pushf
push
jb
bound
add
dec
jp
leave
leave
push
push
hlt
and
dec
outsl
or
test
cmp
lea
pop
mov
fistps
cmc
add
mov
sbb
js
add
adc
sub
icebp
ja
pop
jmp
lods
test
rcr
lcall
mov
push
scas
cli
ja
pushf
jo
or
mov
or
cmc
loope
inc
out
cmp
sub
mov
add
cwtl
inc
into
cmp
inc
popa
in
jp
sub
mov
pushf
icebp
jl
ficoml
pop
bnd
daa
mov
outsb
xchg
outsb
xchg
lds
ljmp
pop
mov
sbbb
push
xchg
fmuls
xor
jno
add
jmp
pop
insl
loopne
xchg
scas
sbb
lods
and
cmp
cltd
mov
xchg
data16
iret
loope
ds
push
and
xchg
cwtl
adc
adc
iret
mov
cld
aad
sbb
out
adc
mov
mov
cmp
mov
jns
and
cli
int3
and
xchg
add
xlat
mov
push
jne
and
popa
xchg
sub
xor
mov
xor
mov
mov
mov
sbb
dec
inc
std
icebp
hlt
sbb
sbb
clc
add
and
sar
fmul
mov
adc
es
dec
jmp
popf
in
ds
ds
insl
inc
arpl
mov
lcall
lcall
scas
mov
inc
sub
movsb
push
outsb
insl
ds
xor
sbb
cli
mov
xor
aam
push
insl
arpl
lahf
nop
fwait
js
jns
mov
lea
es
loopne
xor
jnp
call
bound
or
nop
hlt
inc
push
mul
leave
xchg
sub
inc
lret
or
aam
movsl
addr16
push
jmp
or
cmp
lret
gs
cmp
mov
xor
loop
fcoml
out
mov
je
sub
pop
push
daa
or
ret
call
orl
mov
cmpsb
pop
pop
jmp
out
push
xchg
sbb
popf
jp
mov
je
pop
call
imul
jae
pop
inc
mov
jae
push
jno
xchg
xchg
inc
pop
adc
jns
mov
cmpsl
or
imul
pop
mov
pop
fistps
mov
push
iret
and
xchg
int3
mov
dec
nop
cmc
out
push
repnz
xchg
les
mov
jb
adc
dec
sbbb
cmp
pop
insb
icebp
in
dec
mov
jns
sahf
pop
testl
add
push
pop
dec
push
ljmp
rep
nop
cmp
push
adcl
repz
xor
jnp
shrl
popf
lahf
jo
out
call
adc
in
jle
mov
pop
sbb
mov
pop
push
pop
cmp
andl
popf
hlt
popa
push
ds
pop
pop
pushf
lcall
aam
mov
stc
xchg
fsub
inc
mov
cltd
sbb
bound
in
sub
andl
mov
in
xchg
mov
outsb
jmp
cmpsb
xchg
arpl
ret
add
repz
fcoml
mov
mov
jne
xchg
iret
rorb
repz
mov
jle
or
mov
add
lea
mov
andb
dec
xor
adc
lahf
in
ret
push
rorl
loop
in
push
dec
icebp
xchg
loopne
jb
pop
popf
ljmp
mov
and
sub
xor
jnp
add
nop
pop
push
les
fnstsw
loope
add
rorb
mov
push
arpl
push
jae
scas
push
sub
fwait
mov
outsb
outsl
pop
mov
xchg
adc
push
jl
lds
aaa
lret
movsb
mov
dec
test
dec
jbe,pn
imul
jecxz
cmpxchg8b
cmp
addr16
push
mov
ret
sbb
roll
orl
fwait
mov
sbb
mov
pop
shlb
fs
jecxz
repz
mov
rcll
test
or
mov
and
push
adc
cmpsb
outsl
aam
jmp
jno
xlat
and
mul
lcall
add
lidtl
push
outsb
sub
pop
push
xchg
vpcmpgtb
push
dec
fistpll
stos
out
and
cltd
aas
incl
and
dec
mov
in
loop
cmc
iret
dec
data16
pop
arpl
mov
lods
and
and
jg
push
shll
inc
popw
push
enter
mov
dec
jmp
dec
es
or
insb
pop
outsb
push
and
inc
in
ljmp
rcrb
sahf
xlat
pop
es
not
scas
xor
jno
mov
or
shlb
je
stos
xor
push
add
dec
fst
xchg
jnp
vmwrite
push
push
adcb
js
xor
cmp
mov
jae
loope
xor
out
mov
dec
mov
xchg
adc
jb
xchg
jo
sub
push
adc
fcmovu
mov
pop
lahf
mov
stos
pop
mov
push
repnz
mov
xchg
push
fistpll
pop
cmpsb
and
inc
stos
call
mov
dec
inc
inc
xor
ja
dec
mov
mov
jle
pop
inc
cmp
jno
push
add
std
arpl
and
xor
mov
test
ljmp
mov
icebp
mov
repnz
mov
test
adc
or
cli
push
push
pop
icebp
xlat
push
shrb
jns
shl
pop
jecxz
out
data16
out
mov
push
out
inc
arpl
outsl
xchg
icebp
cld
mov
dec
lods
cwtl
or
xor
mov
ja
jno
fidivs
sbb
fsub
mov
inc
aas
mov
dec
in
inc
push
inc
sub
jl
enter
xor
mov
pop
aam
xchg
push
sbb
push
sbb
pop
outsl
and
xchg
mov
sub
jo
push
repnz
movsb
mov
sbb
xchg
mov
inc
cmpsb
ficoml
repz
mov
pop
fnstenv
cld
dec
inc
ds
das
inc
dec
hlt
dec
xor
pop
mov
aaa
inc
rclb
lea
mov
repz
in
ficomps
push
pop
cltd
js
in
ret
popa
loop
pushf
inc
movsb
mov
mov
mov
xchg
mov
fcmovnb
cwtl
and
inc
adc
incb
cwtl
cld
ja
add
lods
sub
dec
test
xor
adc
inc
fidivrl
fsubp
mov
fdivr
jmp
cmpsb
sub
mov
xor
inc
adc
in
cmpsb
addl
lret
leave
mov
push
lea
mov
in
les
ss
cmc
pop
rorl
iret
pop
ficoms
inc
jl
scas
push
lret
pop
mov
jge
in
dec
mov
push
add
stos
icebp
lret
xchg
mov
fistpll
outsb
cmp
incb
std
add
mov
or
fldcw
clc
sbb
push
xor
jmp
sub
pop
push
xchg
jge
cmp
clc
loop
or
arpl
test
jo
xor
add
and
push
out
shll
or
movsl
hlt
aas
mov
inc
and
or
mov
sbb
xorb
arpl
dec
fdivl
cmpsb
insb
sbbl
aaa
in
add
mov
cs
outsl
test
adc
inc
loope
pop
shll
loop
inc
dec
jge
mov
lods
lahf
dec
add
dec
push
push
xor
imul
inc
mov
fidivl
sub
orl
inc
add
mov
lret
xchg
push
bound
add
jmp
mov
cmp
adc
les
js
cmp
in
subb
sahf
pop
and
xor
mov
pop
jmp
cmp
pushf
fwait
mov
jge
pop
add
mov
imul
dec
mov
mov
dec
mov
test
or
mov
and
dec
scas
jecxz
push
movsl
push
push
dec
movsb
les
sub
push
sbb
cld
adcl
lcall
dec
mull
cmp
cmp
cltd
lds
lret
dec
out
xor
and
fs
dec
add
bound
push
inc
stos
lods
ror
cli
cs
pop
pushf
add
mov
repnz
or
cmc
cmp
adc
xchg
cmp
mov
mov
xor
mov
dec
jmp
sbb
cli
hlt
insb
outsb
jns
pop
loope
jnp
inc
mov
outsl
jns
add
test
arpl
or
push
dec
sub
inc
mov
jle
and
lea
or
sarl
lret
pop
sbb
mov
gs
ss
js
aas
adc
mov
xor
nop
push
mov
cmovb
mov
xchg
insl
xor
vpsubsw
outsl
mov
ja
xor
pop
pop
pop
cmp
out
stos
push
push
decb
js
dec
add
and
mov
adc
pop
fcmovbe
std
jno
sbb
xorb
lcall
pop
arpl
sbb
insb
lock
out
mov
mov
add
lret
mov
mov
rcrl
lea
mov
sub
jbe
sar
jp
adc
xchg
dec
in
push
jecxz
mov
popa
inc
movsb
xchg
sbb
ljmp
dec
xor
roll
scas
push
cld
pop
pop
fcom
iret
sbb
xchg
sahf
jmp
f2xm1
push
and
jp
mov
dec
out
loopne
js
mov
xchg
mov
inc
cmc
mov
shrb
lods
xorb
pusha
jbe
inc
pop
and
je
sub
addl
jle
mov
jecxz
sub
lods
inc
movsl
xchg
lret
jnp
push
mov
sbbb
scas
pop
xor
pushf
mov
scas
jbe
xchg
dec
mov
nop
lahf
mov
cmp
mov
xchg
mov
push
fs
or
inc
mov
cmp
xchg
inc
mov
jb
imul
mov
xor
jecxz
addb
fwait
test
repnz
ss
cltd
cltd
jecxz
ret
push
xor
xlat
in
loop
test
aaa
sbb
popf
dec
in
adc
or
fsub
pop
sbb
fwait
in
xchg
jg
push
stos
stos
mov
sub
jle
aaa
sbb
sbb
dec
xchg
sub
add
fsubrs
xor
dec
lea
fisubrl
clc
sub
mov
jo
popf
movzwl
dec
sbb
cmp
cmpsl
imul
loopne
mov
pop
scas
iret
xchg
sbb
outsl
ja
inc
dec
ret
push
jae
data16
xor
ja
push
das
sub
leave
push
pusha
inc
xor
cwtl
inc
lret
lds
or
lahf
or
out
ss
frstor
and
cld
loope
int
push
jae
pop
addb
outsl
test
and
and
push
xchg
std
ss
enter
adc
mov
mov
loop
add
dec
xor
cmp
aaa
lahf
ret
mov
dec
das
sbb
dec
and
dec
mov
sbb
cs
sbb
pop
pop
clc
inc
lret
mov
std
or
push
xchg
mov
jge
lret
je
jnp
mov
mov
mov
push
lret
jne
cmp
cmp
fstpl
push
add
inc
cwtl
es
xor
mov
fiadds
hlt
mov
cmpsl
sbb
cld
sub
cmp
hlt
adc
push
in
popf
sub
scas
push
leave
stos
aam
movsl
pusha
ds
movsb
lret
pop
addr16
sbb
aam
scas
mov
js
push
test
mov
cli
es
xchg
arpl
xor
dec
aaa
and
push
cmc
loope
in
and
jae
or
mov
sbb
test
or
lea
xor
mov
cmp
push
xchg
xor
in
pop
mov
and
enter
into
lret
push
into
test
pop
mov
dec
call
inc
push
repnz
std
sub
adc
hlt
pusha
and
xor
push
int3
mov
lret
shlb
hlt
mov
or
rcrb
mov
xor
jg
out
aas
push
test
inc
pop
insl
pop
push
imul
sti
jb
mov
mov
pushf
in
dec
or
mov
or
adc
adc
cld
cs
xchg
mov
stos
les
imul
push
cmp
push
nop
sub
mov
push
dec
inc
test
fidivrl
dec
push
pop
dec
mov
out
mov
fwait
and
out
pop
xor
cld
jmp
lcall
adc
fs
cwtl
dec
xor
jns
ret
dec
jae
and
cmp
popf
sub
jno
int
shrl
mov
pop
xor
gs
or
dec
cmp
loopne
lods
mov
sbb
mov
xor
mov
sub
sbb
xor
movsb
scas
cmp
ret
ja
xchg
fwait
mov
mov
mov
xor
ret
fwait
sub
sti
xchg
and
jb,pt
js
in
hlt
inc
scas
push
je
into
cmp
fistpll
push
adc
loopne
ljmp
shl
cld
iret
jb
popf
xor
sahf
or
mov
push
mov
std
scas
mov
jns
jns
sbb
imul
dec
rolb
jmp
sub
les
nop
cld
sahf
stos
cmp
hlt
cmp
mov
mov
and
jmp
addr16
shll
std
insb
fmul
imul
or
icebp
adc
adc
test
pushf
push
and
jo
test
fisttps
adc
shrb
push
xlat
fneni(8087
aaa
aad
into
lods
jmp
or
mov
adc
iret
and
mov
nop
loope
add
test
xor
les
add
inc
push
insl
add
and
and
xchg
ret
jl
xchg
lods
jnp
push
arpl
inc
ror
xor
enter
push
loope
xchg
xchg
int3
ja
inc
jp
jecxz
shrl
cmpsl
pusha
xchg
xlat
or
pop
and
push
loopne
cli
lea
iret
std
enter
push
cmp
lock
lods
jle
mov
push
xchg
pop
mov
fistpll
addb
sahf
test
dec
dec
mov
add
fcmovne
inc
fcmovne
out
mov
adc
jp
xchg
jmp
sbb
mov
push
mov
pop
mov
in
cld
out
pop
cmc
cmp
imul
in
pushf
adc
xlat
shrb
inc
xchg
jne
fld
adc
lds
aaa
test
sarb
or
jbe
cwtl
mov
mov
lcall
xchg
pop
stos
in
push
dec
pop
mov
sub
add
pop
iret
fisttpl
inc
stc
mov
pop
dec
inc
mov
rcrl
arpl
mov
daa
and
nop
gs
pop
pop
cli
cltd
dec
inc
jl
push
mov
and
mov
pop
push
adc
push
dec
or
lods
clc
dec
outsb
shll
arpl
push
test
mov
mov
add
dec
and
cmp
inc
sub
mov
xchg
mov
les
lahf
jne
lds
jg
lret
pop
xor
cmc
mov
inc
out
es
sti
mov
ja
popa
and
lret
mov
sub
mov
in
push
leave
push
mov
aad
mov
test
add
iret
stos
hlt
and
pop
push
mov
lahf
jne
jno
ss
shrl
bound
push
sub
sbb
roll
mov
jns
aaa
out
stos
xchg
movsl
dec
aad
push
mov
scas
loope
pop
andb
mov
mov
inc
mov
push
data16
scas
lods
sbbb
mov
mov
fdivs
in
aaa
adc
ja
mov
xchg
rcr
and
jbe
fbld
pop
push
ja
out
jns
add
jns
and
xlat
repz
or
and
leave
outsl
ja
divb
or
add
ss
sub
add
in
add
mov
or
and
fstl
das
cmp
mov
clc
bound
notb
lahf
hlt
aad
testl
pop
pop
mov
lret
inc
xorb
cmc
jp
mov
cwtl
or
aam
xor
les
or
lods
aam
pop
icebp
sbb
loope
and
lret
jnp
lcall
xchg
sbb
sub
inc
leave
dec
roll
mov
jl
or
mov
into
inc
in
pushf
adc
xchg
ret
mov
xchg
cmp
rorl
mov
nop
dec
rol
add
xor
test
and
mov
sub
pop
cmp
cwtl
pop
mov
push
mov
lods
mov
adc
lods
jne
jmp
hlt
daa
in
scas
hlt
jae
push
pop
mov
inc
push
std
inc
pop
dec
repz
pop
outsl
dec
mov
jg
mov
fldpi
es
cltd
in
repz
lods
inc
cmp
hlt
and
push
out
xchg
inc
mov
mov
xchg
insb
add
rcl
cmp
outsl
in
popa
xor
push
jne
mov
ret
adc
mov
xor
mov
jo
je
sub
jo
mov
push
pushf
mov
lods
aad
jo
in
jnp
xchg
out
add
sub
sub
ljmp
adc
mull
or
sti
popa
sbb
dec
mov
movsb
sbb
div
das
mov
push
and
or
stc
rcrb
lret
sbb
lds
addr16
xor
add
adc
cmp
jmp
pop
jnp
mov
fisubrs
xchg
xor
hlt
sbb
pop
jnp
cmpsl
sbb
test
mov
aaa
pop
jo
add
cwtl
aaa
mov
hlt
mov
rcr
dec
outsl
cmp
in
fnstenv
call
cmpsb
lret
or
std
mov
mov
adcb
xchg
inc
addr16
jl
jns
test
mov
xchg
addr16
ficomps
cmp
fbstp
sbb
pop
repnz
mov
test
mov
lods
scas
test
pop
jno
jbe
jmp
inc
or
adc
or
hlt
flds
and
and
loopne
or
sbb
shrl
ljmp
and
dec
pop
xchg
psubq
mov
imul
incl
rorl
dec
std
jle
add
sbb
pop
addr16
aam
jg
orl
jmp
inc
add
pop
xchg
cmp
adc
sbb
mov
lock
cs
sbb
push
nop
xchg
push
cli
lods
pop
stos
cmp
movsb
mov
push
sbb
cmp
shll
leave
div
lcall
dec
out
add
aas
mov
cmp
jne
jbe
out
jmp
mov
sti
xchg
arpl
lret
leave
pushf
push
dec
and
mov
imul
adc
dec
add
gs
out
cld
push
xor
dec
test
xchg
int3
push
mov
clc
aam
in
sub
mov
sbb
fwait
pop
mov
arpl
jnp
daa
fildll
cmp
clc
push
mov
outsb
and
subb
sbb
sti
sbb
jbe
jl
nop
scas
mov
sti
push
xor
cmp
mov
enter
inc
add
xor
sub
jno
sub
and
xchg
xorb
add
fnop
filds
jmp
sbb
movsb
push
add
push
sub
sbb
sbb
sub
add
xchg
adc
test
fstl
test
out
movsb
dec
jle
add
sub
inc
rol
push
inc
xorl
mov
push
xchg
movsl
fisttps
hlt
addr16
and
xor
mov
sub
cld
imul
sub
mov
sbb
fsubl
adc
push
je
into
fcomp
hlt
mov
pop
in
out
loope
mov
dec
js
mov
js
xlat
jne
adc
dec
mov
mov
xchg
cmp
sbb
mov
fwait
pop
shlb
dec
inc
or
movl
dec
in
pusha
scas
mov
sub
mov
adcl
lahf
mov
into
dec
mov
js
cwtl
popa
push
ss
xchg
popf
push
dec
push
xchg
xor
adc
push
imulb
sbbl
je
pop
enter
mov
xor
push
pop
pushf
sahf
jecxz
sbb
and
xor
push
popa
xchg
mov
les
mov
xchg
and
mov
enter
lret
pop
out
loopne
mov
out
dec
out
mov
aas
andl
and
out
and
or
or
dec
push
push
jp
inc
lcall
or
sub
or
jb
cmpsb
or
xor
test
aad
int3
or
pop
adc
push
pop
pop
fildll
add
sbbl
inc
shlb
pushl
out
xchg
push
pusha
out
outsb
repz
cmp
pop
out
xor
adc
add
adc
iret
js
in
es
jle
pop
lock
imul
mov
ljmp
jne
out
inc
stos
add
pop
test
loope
sbb
mov
fcos
into
sbb
loopne
fbld
in
mov
in
inc
and
jp
lcall
jno
or
pushf
mov
bound
sbb
cmp
cltd
popf
loope
mov
sub
popf
test
inc
scas
jp
icebp
int3
fisubs
scas
jno
lds
jge
les
and
addr16
sub
lds
xor
loop
xchg
mov
cmpsl
push
xchg
outsb
jo
cmp
xor
fcomps
cli
mov
push
push
inc
pusha
out
imul
fs
jmp
pop
mov
pop
lcall
jb
sbb
int3
imul
pop
mov
push
inc
xor
call
shrb
cmp
fwait
cmp
mov
push
insl
or
jbe
test
fimull
pop
mov
pop
inc
dec
aaa
cmpsl
cltd
mov
imul
mov
cmp
push
loop
push
push
mov
inc
pop
movl
dec
out
push
movsb
cmp
inc
das
mov
orb
mov
iret
add
fistps
push
mov
arpl
js
inc
dec
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
repz
bound
add
leave
xor
or
pop
push
cli
mov
cmp
rolb
rol
inc
int3
fwait
and
xchg
mov
or
arpl
mov
fwait
je
or
idiv
and
xchg
in
loop
push
dec
xchg
hlt
gs
add
mov
fwait
stc
push
mov
pop
sbb
jle
stc
xor
mov
xchg
sub
dec
pop
xor
sbb
into
xchg
jo
mov
rep
xor
or
repnz
xchg
jl
sbb
mov
add
fcomps
or
inc
in
mov
inc
es
in
incl
inc
jmp
xchg
aas
push
lahf
mov
jno
jnp
dec
out
addr16
divb
lock
xlat
mov
stc
xchg
movl
repnz
data16
xchg
shlb
inc
push
or
rorb
dec
mov
jbe
ljmp
pop
push
cmp
add
push
push
outsb
jae
inc
fistps
mov
lds
xchg
aaa
dec
ljmp
mov
notl
sarb
ja
and
jp
mov
enter
pop
pop
mov
xchg
sti
cmc
dec
mov
dec
xchg
cmp
dec
jl
mov
fbstp
add
dec
lock
fisttps
cmp
inc
dec
out
mov
aas
pop
dec
mov
sahf
out
inc
xchg
add
ret
movb
jne
nop
sub
fldt
mov
enter
insl
mov
icebp
push
xlat
outsl
fbstp
mov
int
cmp
push
insl
mov
pop
fistl
icebp
outsb
test
and
dec
push
sbb
fwait
inc
mov
adcl
cwtl
adc
enter
insl
sbb
or
sbb
rorb
test
cwtl
movsl
icebp
out
or
and
rcll
jns
jmp
popf
test
push
xor
nop
fmuls
mov
mov
sub
adc
data16
mov
xchg
sub
xor
sub
mov
cmp
dec
push
or
fisubl
cmp
xchg
pop
popf
jno
push
icebp
lods
sub
xchg
jbe
inc
dec
mov
push
xor
push
jle
loopne
imul
adc
mov
aaa
jnp
andl
cld
in
lds
pop
pushf
movsl
sbb
ficompl
enter
mov
cltd
xor
jmp
aad
movsb
cwtl
jno
jb
sbbl
pop
push
dec
stos
lods
into
lds
js
cld
xchg
push
add
mov
sub
lret
out
cmp
pop
out
add
ljmp
pop
call
xor
lods
in
dec
xchg
js
and
enter
xchg
in
xchg
push
ss
sbb
jmp
cmpsl
push
cwtl
fwait
mov
mov
xchg
inc
loope
stc
inc
cmp
fnstenv
mov
nop
push
pop
sub
pop
gs
xchg
xchg
movsb
imulb
inc
mov
sub
pop
sbb
add
fcmove
sbb
push
imul
movsl
fwait
adc
fmuls
into
stc
ds
fadds
fs
lds
fst
stos
call
and
mov
ds
mov
mov
lahf
jo
xchg
adc
sbb
mov
insb
fistpl
int
rorl
cli
push
dec
movsl
inc
jbe
jns
xchg
sahf
sub
test
mov
push
shlb
aam
fiadds
imul
out
push
pop
xor
fs
ror
jno
movb
push
inc
sbb
stos
adc
sub
dec
shld
int
dec
outsb
scas
jb
rorb
loopne
bound
shlb
mov
std
lret
scas
or
imul
je
cli
outsb
mov
sahf
sbb
lea
addr16
addr16
mov
fstl
cmc
adc
das
sti
jbe
sti
hlt
jmp
outsl
mov
xor
mov
push
movsb
mov
cmp
es
inc
and
ja
imul
xchg
mov
aaa
sti
gs
cli
mov
fcoml
sbb
in
adc
dec
push
xchg
and
jne
test
push
xchg
pop
cld
setle
sti
inc
jo
rsm
test
into
push
lcall
xchg
mov
mov
pop
push
dec
xor
mov
mov
jge
mov
adc
dec
push
mov
xor
leave
fwait
sub
dec
test
mov
mov
in
in
jno
mov
outsb
aad
and
sbb
fistpll
inc
shll
and
test
in
loope
mov
lock
lahf
xchg
sbb
mov
repnz
sahf
adc
pushf
ret
ret
out
sub
xor
std
mov
xor
sbb
cmpsb
push
lret
adc
dec
mov
xchg
jae
and
addr16
rcl
cltd
sbb
arpl
fisubrl
fwait
int3
mov
sbb
ljmp
push
xlat
add
movsb
cmp
jg,pn
in
into
dec
shrl
cmp
sub
xchg
lret
mov
push
jl
pop
mov
mov
inc
ja
fs
ja
and
cmp
pop
push
mov
add
xchg
insl
adc
mov
mov
sbb
rolb
jne
cli
cmp
pop
mov
aas
or
mov
dec
popf
mov
aaa
cmpsl
jb
push
push
hlt
xor
add
out
xchg
add
outsl
movsl
std
clc
lods
stos
pushf
test
ficoms
sahf
and
jmp
pop
cmpl
addr16
test
push
push
adc
xor
lods
dec
mov
add
leave
add
xlat
mov
sahf
mov
data16
lcall
pop
add
fcoms
popa
rcll
fiaddl
cmp
push
int
clc
aas
mov
in
sub
xor
lods
jl
pushf
call
ficompl
and
pop
nop
sub
push
mov
ret
gs
mov
adc
push
mov
int3
insl
dec
in
pop
sti
mov
lahf
in
cld
or
inc
mov
insb
cld
sar
mov
testb
outsb
sub
sub
cmp
mov
popa
hlt
mov
imul
mov
fsubrs
fcmovb
into
in
sahf
testl
inc
into
jns
pop
push
subl
call
test
sbb
fwait
test
mov
cld
cwtl
stc
and
adc
ret
xchg
jp
cld
and
imul
sub
xor
dec
aad
mov
rcll
and
call
sub
mov
inc
pushl
mov
inc
lret
dec
jge
stos
mov
pop
repnz
ret
adc
das
dec
fldt
mov
arpl
rcr
mov
xchg
int3
sub
dec
adc
sub
shl
or
int3
mov
fsubrl
lcall
stos
mov
cmp
addr16
pop
xor
stos
push
pop
sarl
movsb
jns
adc
fisubl
xchg
xchg
pop
sbb
cmp
cmp
cltd
enter
cmp
mov
out
xchg
dec
adc
insl
mov
or
inc
inc
leave
mov
and
stc
pop
jp
pop
pop
jns
add
std
loope
xor
pop
inc
pop
cmp
pop
insl
jae
psubw
sub
push
mov
pop
dec
xlat
dec
jne
pop
inc
cltd
xchg
dec
xchg
ret
into
mov
mov
movb
test
xor
xor
insl
ja
sahf
cmp
push
call
rolb
xchg
mov
dec
call
ja
jae
pop
fimuls
lods
inc
cmc
mov
daa
jo
adc
cmp
xor
ror
xchg
inc
or
scas
shl
inc
dec
cmpsb
jp
or
mov
push
mov
mov
push
add
or
pop
shll
jbe
xchg
fldt
sub
push
outsb
iret
xlat
daa
jecxz
add
loop
inc
filds
aas
repz
mov
int
es
adc
mov
data16
das
xor
jmp
push
in
ja
fdivl
and
push
sbb
and
mov
imul
or
and
icebp
and
cs
cld
mov
pop
add
repz
lods
cmp
ret
sbb
add
call
dec
inc
js
out
test
sub
shrb
xchg
push
cltd
pop
repz
xor
and
push
repnz
sub
or
push
cmc
pop
es
cmp
popf
outsl
push
jle
xchg
inc
cwtl
adc
into
orl
push
mov
inc
hlt
shll
push
orl
out
aas
inc
insl
mov
jae
ja
aad
inc
dec
dec
dec
jge
mov
lret
ds
rclb
xor
sahf
jo
add
jmp
sbb
sbb
shrl
test
adc
sti
daa
mov
mov
xchg
pusha
iret
jp
mov
xchg
or
xchg
in
xlat
xchg
fistpll
mov
and
mov
shl
mov
or
insb
div
mov
mov
testb
insb
push
mov
pushf
mov
or
clc
push
rcr
inc
sub
in
mov
cs
mov
out
or
ret
in
aad
and
movsb
push
fimull
sbb
test
sub
clc
adc
xor
ret
ja
xchg
sbb
pop
push
mov
fwait
xor
lret
movsl
popa
imul
loop
xor
test
sub
mov
adc
pop
add
int
fadds
or
dec
loopne
mul
pop
pop
test
or
out
outsl
hlt
xchg
rclb
xchg
repnz
mov
cmc
add
sbb
pop
fnstcw
movsb
xchg
jle
pop
jmp
sub
idivb
cmp
fs
and
insb
shll
rorl
jp
xchg
mov
scas
dec
push
push
stc
je
or
sub
inc
mov
lcall
jb
pop
add
out
mov
or
mov
inc
jne
loope
mov
jle
jle
shlb
lock
dec
add
ljmp
shll
lds
orb
call
pop
lret
ds
arpl
mov
rclb
in
pop
into
sbb
test
cmp
imul
ret
pop
stc
jecxz
jmp
popf
jge
jecxz
xor
lcall
mov
lea
shlb
inc
ja
or
push
sub
dec
inc
mov
fcomps
push
movzbl
dec
int3
popa
jns
sub
sub
out
xor
jmp
test
jecxz
movsb
cli
sahf
xchg
repz
mov
lret
inc
das
sbb
arpl
jmp
rorl
push
xchg
jge
pushf
cld
test
and
decb
sub
pop
idiv
out
mov
lods
nop
dec
das
dec
pop
jnp
movsb
arpl
xlat
or
add
loope
shll
hlt
mov
push
fcomip
cmp
je
shll
sbb
push
inc
jnp
lret
sbb
dec
sbb
jns
dec
out
or
xor
jge
clc
or
loopne
cs
adc
sub
jae
jbe
sub
lcall
outsl
mov
fnstcw
push
pop
jnp
imul
je
into
or
inc
inc
and
lret
test
dec
and
adc
sti
adc
or
push
in
mov
test
xchg
scas
lds
jl
cmc
push
cmp
pusha
add
addr16
xchg
call
cs
cmpsb
pop
pop
stos
pushf
rdtsc
sub
lds
mov
pop
aaa
sti
imul
jmp
subl
adc
std
pop
dec
jbe
mov
pop
cmp
in
dec
pop
adc
daa
int3
sbb
rorl
mov
les
test
imul
bnd
subb
mov
sti
fldt
loopne
xchg
sbb
dec
das
dec
adc
xor
sbb
leave
mov
scas
or
sbbb
push
sub
jae
shll
pop
lods
nop
and
and
fcompl
je
hlt
repnz
test
nop
jno
rorb
push
adc
popf
call
add
jno
out
stos
push
inc
xchg
jle
mov
xchg
dec
outsb
cmc
or
pop
imul
rcrb
push
test
popf
inc
and
stc
test
cmpsb
cmp
out
dec
cltd
ret
pusha
rorb
jnp
stos
lret
out
mov
rcl
shlb
adc
repnz
loope
hlt
fcmovne
insl
xlat
call
test
test
mov
or
mov
shlb
bts
inc
jecxz
and
movsl
add
cwtl
pop
pop
sahf
sub
add
mov
sub
repnz
es
in
add
or
inc
ret
insl
pop
cmp
or
add
push
adc
imul
imul
mov
mov
adc
jg
mov
mov
push
not
add
fistps
outsb
mov
pusha
push
lods
stc
jns
pusha
xchg
iret
dec
push
mov
sub
push
pop
mov
lret
mov
cwtl
push
outsl
dec
cs
dec
aam
adc
cmpsl
pop
pop
sub
data16
sbb
adc
jnp
and
enter
rolb
jbe
lea
es
pop
adc
dec
adc
mov
test
fsts
lds
mov
lret
leave
enter
les
xor
in
test
pop
sub
and
push
out
loop
rcl
jne
ficoml
xchg
push
ret
inc
int3
cmpb
push
or
push
lahf
int3
lret
aaa
in
push
fdivrs
dec
sti
pushf
and
aad
push
mov
dec
cmp
mov
sbb
mov
pop
rclb
aaa
inc
repnz
jg
sub
imulb
jl
pop
subb
sarb
jecxz
ja
mov
and
nop
dec
push
popf
push
jecxz
jmp
dec
xchg
out
out
pop
mov
push
fdivrl
leave
jp
xor
dec
and
add
scas
mov
outsb
or
fiadds
pop
cmp
inc
fmuls
or
bound
fwait
xchg
in
stos
cltd
pop
mov
andb
mov
xor
loop
je
jb
nop
and
fmull
testl
lret
dec
mov
cld
pop
jg
push
hlt
jecxz
aad
xchg
imul
dec
jp
data16
pop
and
cwtl
imul
inc
pop
mov
adc
out
bound
into
jns
add
fstpt
jo
leave
ret
push
stc
out
adc
push
xchg
adc
neg
in
adc
jne
stos
add
cmp
test
shll
out
push
xor
and
sbb
xor
inc
jbe
fs
mov
pop
notb
xchg
mov
and
es
xchg
add
cmp
mov
push
mov
cmc
je
adc
ret
aam
aam
jns
jae
adc
insb
inc
test
bt
push
xor
dec
push
fldcw
subb
cwtl
roll
repz
mov
or
cwtl
repnz
rclb
adc
or
inc
sahf
and
in
shl
or
mov
pop
push
mov
jbe
inc
cmp
inc
int3
in
cmp
mov
adc
xor
dec
in
cmp
addr16
cltd
xchg
pop
das
add
push
fsts
inc
iret
xorb
jge
cli
mov
mov
jbe
sbb
push
xchg
cmpsb
push
andb
pop
movb
pusha
aaa
push
inc
arpl
inc
loop
ret
mov
dec
xchg
mov
not
jne
mov
push
cmp
mov
fisubl
test
inc
push
aad
add
xor
pushf
jo
dec
sub
imul
mov
mov
cmp
or
and
xchg
lcall
xchg
scas
and
popf
cmp
mov
push
inc
inc
cmp
sbb
adc
pop
sub
sub
dec
xchg
dec
or
cmp
xchg
and
mov
xchg
xor
mov
jecxz
inc
ficoms
sub
cmp
mov
sub
add
mov
mov
cmc
fidivrl
cmp
ret
pushf
movlps
sbb
xor
xlat
addr16
clc
pop
into
inc
xchg
or
insb
sbb
sub
mov
or
xchg
add
cmpsb
push
lret
out
lea
push
into
imul
es
into
fwait
xor
loope
add
lods
sub
cmpsb
push
sbb
arpl
fwait
sub
xor
dec
sub
fisubl
fldenv
daa
cmp
mov
shrl
sub
sub
jmp
adc
outsl
pusha
mov
imul
push
and
les
ss
popa
jns
lcall
adc
das
adc
xor
inc
cmpsl
clc
jecxz
or
push
push
fldt
adc
lods
sub
fsubl
mov
stos
jne
mov
arpl
inc
les
mov
or
add
sbbl
pop
pop
cmp
pop
mov
xor
mov
add
int3
sub
loop
std
and
lods
dec
or
jl
shr
stc
xlat
aas
fidivs
popf
xchg
scas
fcom
int3
adc
cmc
jle
jp
push
jns
pop
and
and
cmp
sbb
mov
jle
mov
popa
adc
daa
mov
fxch
sbb
or
or
lods
fldenv
push
in
andb
sub
daa
jecxz
mov
sub
test
outsl
xor
sub
cmpsl
xchg
repnz
sub
mov
pushf
add
push
xor
mov
push
push
push
dec
jns
xchg
cld
and
ret
dec
adc
lahf
movsb
jle
dec
or
addr16
jge
push
adcl
inc
lahf
orl
ljmp
sahf
andb
jnp
ja
and
dec
dec
stos
test
clc
stos
shll
pop
mov
ss
sub
add
cs
sbb
fwait
inc
icebp
lret
sub
fcmove
movsb
in
push
test
int3
inc
dec
mov
jecxz
push
xchg
icebp
or
hlt
cmp
mov
nop
jecxz
mov
push
adc
pop
pop
push
pop
xchg
xchg
int3
iret
add
pop
push
cmp
test
out
gs
pusha
jae
cmp
ret
push
ja
xchg
jo
loop
xor
popa
cmpsl
mov
xchg
pop
sarb
setl
or
xchg
jle
les
jb
xorb
clc
addr16
lahf
loopne
pop
stos
push
outsb
test
push
insb
xor
and
mov
orb
push
xlat
mull
pop
pop
jno
data16
push
push
jg
hlt
les
fcompl
stc
aas
pop
aas
outsb
in
ret
cltd
dec
xchg
jne
nop
or
test
es
lds
cmc
sti
adc
pop
cmp
and
add
out
inc
inc
xchg
lret
rclb
or
jae
sub
pop
stos
lds
clc
push
out
int
test
in
scas
dec
and
in
jp
inc
lcall
sbb
loope
mov
cli
sub
pop
inc
jns
mov
shlb
dec
and
test
cmp
jo
inc
dec
xor
int3
orb
mov
ret
repnz
movsb
jnp
sub
ja
mov
mov
sub
or
cs
mov
orb
or
retw
fsub
insb
jns
push
xchg
scas
and
or
xchg
push
xchg
mov
xchg
fwait
cmp
aam
sbb
sbb
pop
and
mov
adc
test
imul
mov
sar
test
and
add
and
sbb
or
mov
icebp
ret
icebp
pop
or
mov
dec
mov
dec
scas
and
dec
ret
mov
in
fstps
sbb
pop
mov
in
xchg
xlat
lds
push
ret
sbb
scas
outsb
inc
lods
jae
shr
pushf
adc
lods
or
jns
fsubrl
dec
jbe
and
fwait
inc
rcrb
sub
jp
lods
stc
adc
pop
push
stc
shlb
mov
add
add
push
lock
dec
shll
pop
add
sub
jmp
cmp
pop
call
adc
mov
push
xchg
and
push
jnp
mov
sbb
das
adc
stc
adc
add
imul
cwtl
pop
pusha
jns
sbb
lds
or
push
outsb
ficoml
lret
inc
mov
jnp
add
dec
fcmovne
outsb
nop
xor
data16
mov
pop
loope
imul
pop
pop
pop
sbb
sbb
dec
inc
rcll
out
sbb
mov
nop
jmp
inc
dec
push
mov
int
movsl
pop
cmp
xor
mov
int
cmp
fcompl
push
mov
inc
inc
push
push
sar
ja
stos
add
aam
dec
xchg
sbb
movsb
fnstenv
sbb
bound
insb
hlt
or
movl
and
cmp
inc
fsubrs
or
mov
stc
and
addr16
cvtps2pi
mov
rcl
call
push
aad
sub
mov
aad
ret
fsub
pop
and
ds
fldcw
fs
in
push
xor
inc
push
push
jno
sub
sub
jbe
in
cmp
test
loopne
xor
fidivl
add
std
inc
incb
out
nop
mov
stos
scas
dec
xchg
pop
movsb
stos
ja
mov
push
sarb
mov
cs
xchg
inc
int
lea
push
test
fildl
push
stc
pop
ret
jo
cld
cli
loopne
repnz
in
mov
jl
and
subb
movsb
std
mov
xor
cmpsl
std
xchg
lds
or
scas
fsubr
loop
dec
test
pop
xor
movl
mov
push
and
sbb
dec
jo
lods
sub
mov
cmp
sbb
in
loop
mov
aad
das
aas
or
mov
mov
hlt
icebp
xor
adc
xlat
and
stc
jmp
cmc
pop
lods
adc
insb
pushf
stc
jnp
aam
push
movsl
mov
test
fdivp
mov
inc
cmpl
mov
xor
pop
leave
outsb
or
insb
sub
push
pop
xor
jp
and
mov
leave
stos
repz
push
sbb
cmp
fldt
lods
mov
pop
outsl
roll
xchg
outsb
dec
mov
mov
cmc
xor
clc
scas
dec
in
mov
sbb
dec
bound
xor
div
out
mul
negl
inc
fisttpl
ret
cmp
mov
cmp
mov
mov
dec
cld
pusha
or
fcompp
adc
pop
dec
xor
cli
fbld
xchg
inc
roll
sbb
rorl
call
xchg
dec
nop
ja
loope
xchg
xor
test
add
lods
inc
arpl
repz
sub
cltd
sbb
add
mov
lret
enter
aas
test
push
adc
ds
and
test
lock
sbb
shr
adc
add
pop
xlat
test
mov
clc
adc
inc
sbb
cmp
jnp
and
xorl
test
cmc
and
fisubrs
inc
jnp
lea
cltd
notb
sbb
ds
mov
fstl
sbb
dec
mov
cltd
mov
dec
add
fdiv
cmp
roll
xchg
lods
inc
push
dec
popa
inc
dec
scas
inc
loopne
fdivs
push
lds
jo
inc
dec
leave
je
mov
xchg
cwtl
push
loopne
outsl
stos
xlat
push
daa
jb
popa
out
idiv
jae
pop
js
sbb
sbb
loopne
stos
adc
jp
loope
lods
leave
mov
mov
xchg
mov
mov
test
dec
jmp
xlat
sub
pop
lea
popa
push
mov
in
rcr
mov
rcrb
adc
rorb
push
iret
fstpt
add
push
sbb
xchg
mov
push
mov
cwtl
out
and
in
and
xor
sub
mov
jb
or
cmp
in
test
xor
jo
pop
aam
aas
test
dec
shll
add
xchg
and
fnsave
inc
loop
sbb
and
jne
lods
movsl
jecxz
dec
daa
pusha
sbb
and
jnp
mov
xorl
in
xlat
sub
push
push
add
and
pop
pop
and
test
adc
cmc
jne
or
jne
mov
sbb
inc
lret
test
cli
popf
mov
enter
test
mov
xchg
cmpsb
adc
nop
icebp
pop
clc
adc
jne
bswap
testl
inc
jb
into
add
push
cli
cwtl
iret
std
popa
stc
mov
cmp
lock
push
mov
push
mov
jae
inc
xchg
push
das
cmp
les
mov
negl
les
push
test
sub
je
popf
inc
jns
sub
and
lods
pop
sub
mov
ret
rorl
push
sbb
or
and
push
fcoml
push
fwait
push
aaa
aaa
test
adc
lret
mov
cmpl
pop
adc
int3
sub
or
cmp
fcompl
dec
mov
sbb
pop
leave
rolb
stc
cld
add
push
or
cmpl
adc
add
mov
mov
mov
jb
cmp
das
sbb
je
ror
push
bound
mov
mov
cmp
hlt
lock
idivb
inc
sub
or
in
jno
daa
movsl
inc
sub
push
lahf
dec
dec
es
push
lcall
jnp
sbb
cmp
add
sbb
jbe
inc
js
cmc
mulb
fldpi
inc
iret
mov
or
adc
ljmp
push
cmp
inc
movsl
sbb
das
cmp
mov
aas
mov
jbe
int
cwtl
lahf
lahf
sub
mov
push
out
mov
iret
adc
and
scas
pop
lds
lahf
and
fs
fwait
das
mov
imull
int3
mov
popa
scas
xchg
int
cmp
adc
enter
pop
ficoms
stos
add
mov
cmp
mov
fsubs
into
movsb
sbb
push
sbb
sbb
add
lods
pop
xchg
jp
push
xor
pop
push
lea
movsl
sahf
andl
or
mov
xchg
xor
or
fists
inc
ret
mov
push
stos
xchg
cmpb
jno
mov
pushf
pop
fldcw
and
mov
xchg
fidivs
imul
jno
mov
mov
test
pushl
hlt
fwait
push
sbb
inc
or
cmp
faddl
fimull
push
ljmp
andl
cmp
or
add
jl
sarb
mov
outsb
mov
mov
mov
push
mov
push
mov
mov
mov
ss
cmp
iret
icebp
or
fisubrs
xchg
sbb
fs
data16
adc
test
outsb
add
adc
leave
in
mov
daa
inc
push
out
push
stc
stc
rolw
inc
shlb
movsl
adc
cmp
in
mov
scas
out
repnz
das
pop
iret
cmpl
and
push
sbb
stos
pop
int3
lahf
jmp
jmp
enter
push
inc
dec
jg
xchg
sti
mov
cmp
cltd
mov
cmc
pop
inc
lock
das
push
arpl
mov
jne
scas
push
pusha
je
je
cli
xor
in
pop
subb
push
call
mov
and
ja
jg
mov
adc
cmpb
scas
mov
or
add
dec
pop
inc
and
lcall
jo
mov
mov
loope
in
mov
sarb
or
mov
push
pop
vpsrad
cmpsl
mov
cmp
mov
cmp
out
aas
push
sub
and
push
adc
pop
div
imul
adc
sub
xchg
xchg
stc
shll
add
hlt
push
xor
sub
ja
outsl
lock
sub
cld
test
and
and
fwait
test
mov
jecxz
jl
fists
mov
adc
out
call
and
adc
pop
cld
push
das
dec
push
pop
stos
popl
jne
xor
xchg
and
sbb
out
icebp
jbe
test
in
subl
jecxz
pushf
sbb
mov
push
xor
jb
stos
push
adc
xorb
mov
cld
mov
xor
cmpsb
dec
xlat
insb
in
dec
adc
roll
inc
xor
loope
sub
scas
scas
sbb
mov
enter
inc
sbb
mov
aas
jns
add
xchg
sbb
xchg
sub
push
cmp
ret
fdivs
xor
out
inc
xchg
inc
jae
jmp
cld
jmp
outsl
dec
mov
xor
shrl
push
sub
sbb
sub
mov
or
loop
ftst
xchg
pop
mov
dec
mov
xchg
mov
sti
mov
add
jae
xor
jge
push
mov
and
push
adc
push
lock
arpl
std
and
or
sbb
jo,pn
mov
mov
xchg
mov
cmp
and
push
imul
xchg
sbb
dec
orb
call
or
pop
test
cmp
or
jnp
add
cmpsl
fs
je
inc
xlat
mov
shll
cmp
cs
imul
movsb
pushf
adc
das
mov
push
cmp
sbb
ds
dec
xchg
insb
inc
cmp
pop
lock
cmp
hlt
mov
arpl
add
mov
sub
pop
sarb
orb
je
in
into
fs
sti
in
and
lds
test
fistl
and
dec
sub
out
sbb
lahf
aaa
lret
xchg
inc
sbbl
or
or
dec
dec
into
pop
and
pop
jecxz
mov
push
push
test
lcall
sub
iret
push
loope
aas
add
adc
jo
aas
xchg
ficompl
jo
jne
jnp
pop
clc
dec
adc
cmp
lods
mov
fisubrl
cmp
lea
mov
ret
hlt
sbb
fnstcw
shl
inc
push
adc
jg
repz
mov
movsb
inc
mov
jbe
sub
test
data16
dec
movb
push
sub
insl
pop
add
jmp
es
repnz
mov
daa
stc
and
test
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
adc
jnp
sbb
sub
bound
mov
fldt
push
adcl
add
popa
lret
minps
das
fldenv
js
xchg
lds
mov
sbb
insb
mov
out
xchg
push
jbe
nop
push
mov
andb
lcall
xor
imul
ds
mov
ja
sbb
inc
cltd
xchg
popf
adc
mov
sahf
lea
pop
push
in
pop
adc
dec
add
sahf
mov
adcb
lahf
out
sbb
push
shr
ljmp
cmc
or
jg
call
out
and
jns
and
mov
adc
out
icebp
xchg
jecxz
popf
xchg
push
test
ret
ss
sarl
fdivr
mov
movsl
or
mov
push
stos
mov
xchg
popa
sub
push
ficomps
mov
fldl
fmull
or
sub
sbb
out
mov
add
or
test
les
dec
fwait
pop
add
aaa
adc
xchg
xor
cmp
and
out
hlt
in
sbb
push
push
fisubl
jge
imul
jp
stos
fs
xor
ret
or
test
sub
out
mov
fsubl
or
push
pusha
iret
mov
iret
outsb
jno
in
push
mov
mov
mov
loope
repnz
leave
iret
pop
lret
insb
mov
sub
mov
repnz
lds
lret
push
push
pop
ret
repnz
pop
es
push
aaa
mov
adc
pushf
pop
inc
and
jbe
push
jle
mov
adc
and
sub
or
cmp
sub
fiaddl
aad
jo
int
sbb
cmpsb
add
xchg
pop
aad
cli
test
subl
cmpsb
adc
or
adc
ret
lock
sahf
outsb
lds
lods
in
cmp
lcall
pushf
fistpll
adc
adc
repz
inc
inc
jp
push
and
loope
cld
and
je
data16
mov
dec
fsubrp
in
mov
cld
mov
out
mov
inc
mov
iret
push
in
mov
mov
sub
sarl
outsb
pop
lret
dec
sub
and
pop
fstps
lods
es
mov
fldenv
jno
enter
rcr
jns
into
sub
inc
in
cmpsl
and
fidivs
mov
pop
out
repnz
subb
iret
mov
cmpsb
imul
dec
repnz
das
lock
xchg
push
out
mov
mov
gs
push
aas
sub
or
inc
mov
test
xor
stos
lds
repz
popa
cltd
popa
xchg
ja
iret
outsb
cmpsl
xchg
sub
mov
mov
jl
scas
push
icebp
sub
cmp
or
fisubrl
cmp
and
jg
or
and
icebp
ljmp
stc
xchg
call
mov
jbe
shll
jb
jge
mov
pop
push
cmp
hlt
jl
mov
cmp
enter
cmp
sbb
orb
test
push
call
mov
xchg
test
jno
movsl
dec
ja
lods
out
je
jmp
arpl
sahf
mov
mov
pop
loop
and
je
dec
inc
xor
movsb
js
rcrb
cltd
push
fsts
pushl
pop
adc
arpl
xchg
lret
cmp
mov
mov
or
inc
or
push
adc
mull
or
mov
lret
or
or
mov
ljmp
push
push
iret
mov
mov
test
inc
sub
and
adc
fs
test
stos
decl
jno
jmp
repz
push
test
sub
loop
daa
adc
lahf
sbb
mov
call
aas
xchg
into
add
sbb
jle
pop
pop
push
cmp
rclb
xchg
in
bnd
stos
mov
bound
adc
outsb
add
test
ret
scas
testl
arpl
or
mov
push
lahf
ss
movsb
xlat
xor
inc
loop
push
dec
and
adc
xchg
sbb
inc
sbb
xlat
cmp
add
mov
mov
dec
icebp
inc
cli
call
push
mov
scas
fbstp
movsb
inc
movsl
cld
enter
sub
ret
push
dec
push
sub
movsb
cmpl
icebp
pop
mov
gs
pop
mov
lret
push
xor
adc
loope
mov
adc
cmp
xor
cmp
call
dec
push
xchg
shrl
or
fdivrs
cmp
push
xor
mov
insb
xchg
test
inc
inc
add
mov
inc
icebp
leave
mov
repz
mov
dec
mov
adc
aaa
aas
mov
mov
jl
hlt
fldcw
cmp
or
and
jne
push
inc
xlat
pop
push
xchg
sbb
cmp
into
push
out
cli
jge
sub
ja
xchg
lret
pop
add
sbb
add
jno
sub
cmpsb
daa
orl
mov
mov
or
or
mov
cld
mov
stos
scas
mov
cmp
mov
sub
int
dec
punpckhdq
out
jbe
mov
pop
sbb
repz
dec
xor
addr16
dec
mov
xchg
ja
pop
ret
push
imul
fists
xchg
test
pusha
sbb
push
cwtl
inc
dec
adc
aaa
sub
iret
loop
test
cld
xorb
fsubr
enter
or
pop
les
std
andl
popa
repnz
cmc
lock
sub
dec
stos
mov
fsubr
ss
xor
rcrb
lods
lods
aas
sub
and
add
lock
les
xchg
pop
push
mov
add
dec
into
mov
sarl
ljmp
pop
icebp
push
std
and
popf
cli
js
add
sbb
and
data16
push
pop
into
pop
mov
fiadds
arpl
ja
frstors
out
arpl
sti
or
cmp
fisubrs
and
push
inc
fs
loopne
xchg
out
adc
lea
push
pop
inc
mov
packssdw
mov
mov
mov
xchg
test
in
pop
add
clc
mov
inc
lcall
mov
push
enter
pop
pop
aaa
push
sub
lret
add
pop
ds
pause
int
mov
fdivl
jge
inc
xor
push
stc
fdivl
je
scas
xchg
mov
test
or
pusha
sbb
in
dec
hlt
xlat
mov
addr16
ret
pop
sub
in
xchg
and
cmp
mov
lahf
jl
dec
fnsave
bound
and
mov
cmp
je
das
sbb
jno
aas
iret
cmc
jno
in
jae
das
in
adc
pop
jbe
mov
fsts
loope
mov
inc
repnz
vpandn
mov
fbstp
xchg
scas
or
xchg
testl
cli
aad
dec
sbb
pusha
mov
scas
mov
push
jp
or
pop
jge
and
clc
inc
mov
fbstp
data16
push
inc
hlt
or
inc
into
and
jge
lods
xor
es
jle
sbbl
mov
and
adc
cmp
and
stos
orb
cwtl
xchg
mov
cld
lea
dec
push
cmp
adc
pop
cmc
push
and
xor
daa
mov
add
inc
lcall
jl
mov
inc
inc
aad
call
mov
fwait
push
lcall
pop
inc
aaa
cld
cs
in
and
xchg
mov
ret
cmp
dec
pusha
jmp
sbb
mov
lret
ds
es
orl
mov
inc
sbb
mov
les
pop
push
pop
push
sbb
sub
loopne
mov
cmpsb
sarl
jae
jns
shl
cwtl
cmp
insb
out
cmp
xchg
test
lea
dec
xchg
dec
mov
dec
roll
jl
cmp
and
pop
mov
je
jge
adc
pop
jp
cs
test
xchg
push
mov
aad
inc
out
and
jl
js
dec
mov
mov
mov
mov
dec
sbb
xchg
pusha
xchg
ja
sbb
test
dec
leave
data16
xchg
lcall
mov
test
frstor
push
cwtl
and
dec
rcrl
and
test
inc
push
cwtl
mov
push
adc
dec
pusha
add
jno
push
or
les
fldt
ss
mov
or
mov
lock
pop
xor
pusha
test
lock
add
inc
adcb
icebp
jge
or
ret
das
push
pusha
lea
inc
xchg
sub
push
and
int
ss
xchg
jo
sbb
int3
xor
sbb
lods
add
jl
cmp
jne
jmp
cmpsb
arpl
cmp
std
cmp
dec
mov
xchg
and
mov
out
cmp
iret
ret
ficoms
dec
push
in
cltd
jecxz
movsl
lock
cmp
jge
push
jnp
and
popa
cmovnp
sbb
mov
stos
pop
insb
mov
push
test
inc
and
push
mov
sub
je
leave
out
lcall
pop
fistps
out
les
lret
mov
cmp
xchg
xor
push
or
adc
sbb
int3
ds
xor
int
clc
fiaddl
fimull
sbb
pop
out
push
fldenv
inc
jmp
mov
push
test
jp
mov
mov
push
pop
or
push
leave
adc
push
jp
icebp
jne
ficoms
mull
push
mov
sbb
into
in
mov
mov
fs
inc
daa
popa
in
dec
test
rcrl
rcrl
bound
out
mov
jno
sub
mov
in
rcll
jmp
daa
push
push
out
xchg
sub
inc
es
fsub
xchg
push
push
sbb
or
adc
scas
or
mov
and
pushf
or
scas
sbb
sbb
mov
es
scas
shlb
loopne
mov
scas
jle
jbe
aaa
shll
cmc
sbb
loop
sti
push
sar
push
adc
add
add
bound
sbb
stos
cmp
and
mov
pop
dec
mov
outsl
cmp
pushf
ljmp
mov
cmp
lcall
jae
pusha
adc
xlat
mov
pop
adc
rcrl
fsubrl
adc
cmp
pop
mov
cmp
in
daa
inc
js
dec
insb
add
lret
mov
or
lahf
sub
cmp
aad
sub
lds
cmp
mov
sbb
sbbb
test
inc
test
divb
in
jb
push
jno
out
add
imul
orb
cwtl
pop
xor
icebp
jb
orb
or
inc
adc
xchg
outsb
mov
mov
xlat
sbb
je
iret
jle
es
test
xor
pop
add
push
jl
xchg
push
icebp
push
pop
push
xchg
cmp
push
pushf
mull
push
jp
repz
test
das
cmpsb
popf
insb
pop
jp
inc
pop
ret
fstpl
pop
das
stc
mov
pop
sbbb
mov
iret
cmp
xlat
jle
out
daa
je
ret
xlat
stc
pop
or
das
insl
sub
inc
test
pop
cmpsb
sbb
dec
inc
rcll
xchg
cmp
inc
xor
add
andb
or
jbe
in
into
in
xchg
mov
in
cmp
cmpsb
and
pop
inc
aad
addl
negb
fs
ss
inc
rolb
mov
out
fnsave
xchg
mov
loopne
jecxz
fwait
or
cmp
adc
aaa
push
push
rcll
out
or
push
or
push
jmp
adc
add
mov
xor
imul
xchg
repnz
mov
jge
cmp
inc
insb
push
mov
fisubrl
push
add
into
lret
test
dec
shrl
fld
mov
push
adc
jl
adc
add
add
loop
and
xchg
push
xor
adc
add
jnp
cmp
dec
lea
or
icebp
mov
das
dec
shll
mov
mov
nop
or
divb
pop
nop
popf
jmp
in
cmpsl
sbb
mov
aam
sub
popf
inc
gs
xchg
enter
push
rcll
mov
stos
mov
mov
inc
xchg
mov
in
xlat
cwtl
mov
lea
insl
dec
outsl
test
inc
push
lcall
cmpsb
mov
std
negb
divb
stos
add
ss
add
mov
jnp
pop
inc
mov
inc
ret
and
lods
jae
push
mov
bnd
push
sub
pushf
fsubs
test
xor
sub
mov
aam
aam
mov
and
js
orb
shll
dec
push
jl
outsl
sub
mov
or
sub
pop
jns
cmp
xchg
ret
lcall
cmc
jmp
movsl
add
or
pop
fsubrl
jmp
add
mov
lods
cs
std
jmp
jns
dec
cmc
shlw
frstor
inc
push
repz
aaa
and
repnz
sahf
lock
add
jg
call
push
sbb
cmp
inc
or
les
mov
push
jb
push
add
add
mov
adc
aad
outsb
sbb
loope
lea
lahf
andb
rcrb
mov
or
scas
pop
imul
iret
or
adc
or
or
and
lds
sbb
or
adc
ret
adc
test
insl
xchg
xchg
fmuls
pushf
inc
mov
jo
icebp
mov
movsl
jns
xchg
imull
setb
out
push
dec
mov
add
imul
sbb
dec
stos
out
outsl
push
xor
je
adc
add
sbb
mov
movsw
xor
loope
stos
ret
inc
ret
xor
sbb
repz
dec
xchg
lds
and
xor
pop
xchg
rolb
push
jne
push
jmp
in
push
loop
sarb
or
adc
scas
dec
iret
cwtl
jbe
lods
dec
and
inc
idiv
mov
test
cli
add
mov
stos
fstpl
mov
mov
inc
nop
mov
xor
mov
push
cmp
sub
nop
fiaddl
mov
hlt
jno
inc
xlat
sbb
enter
jle
imul
hlt
pop
jecxz
jbe
mov
cli
movsb
cltd
cmpsb
ja
pop
push
test
stos
stos
dec
pop
or
loope
jp
dec
insb
arpl
out
or
test
and
sub
xor
es
bound
jle
xor
int3
scas
pushf
jnp
xlat
sahf
hlt
jg
push
jb
inc
lret
jnp
sbb
xchg
stos
lods
in
clc
aas
mov
inc
das
and
and
xchg
insl
pop
stos
cli
movsb
dec
out
mov
je
stc
cmp
mov
xchg
inc
lea
rcl
mov
mov
jns
push
ret
jl
fnstenv
mov
push
insl
mov
xchg
jl
push
xor
and
adc
add
inc
mov
sub
sti
xchg
mov
lret
addr16
sbb
lahf
fs
scas
sti
mov
sub
outsl
int
push
call
aaa
ja
add
movsl
ljmp
adc
cmpsl
dec
movsb
add
pop
cmp
lcall
pop
mov
sarl
adc
xchg
shlb
loop
repz
pop
int3
pop
outsb
inc
movsb
test
or
aam
fsubs
xchg
inc
mov
jle
scas
sti
push
push
sub
stos
pop
xchg
mov
repz
push
ret
xchg
cmpsb
push
enterw
mov
in
push
arpl
mov
push
pop
jp
adc
fs
adcb
std
xchg
ds
mov
jae
out
pop
ja
mov
dec
mov
ret
jmp
pop
int
adc
js
lret
mov
bound
sbb
movsl
lret
iret
mov
mov
cmp
and
xchg
mov
push
jmp
xor
std
sbb
mov
out
into
pusha
xchg
pop
loope
sub
idivb
mov
imul
adc
outsb
mov
sbb
jg
fisttpl
push
mov
jge
and
push
ja
dec
inc
cmp
mov
ja
jae
fcomps
mov
ljmp
xor
mov
out
test
jg
xorb
test
repnz
cld
aad
adc
pop
mov
xchg
ljmp
sub
xor
and
add
cmp
inc
cltd
jns
mov
mov
addr16
push
or
cmp
xchg
and
bound
push
push
cld
and
sbb
movsl
ret
push
cmp
pop
sbb
dec
rorl
jecxz
aad
fwait
inc
cmp
inc
jge
imul
mov
pop
sbbl
imul
pushf
pop
dec
shl
add
jo
or
mov
es
mov
pop
pop
movsb
sub
adc
mov
ja
scas
inc
or
and
push
out
cmpsl
jle
movsb
sub
jl
pop
test
or
sbb
jmp
and
or
mov
jbe
xor
xchg
cmp
and
ds
in
mov
mov
arpl
mov
adc
and
adc
ret
mov
fildl
adc
out
aaa
pop
jae
aaa
out
inc
test
dec
lods
fnstcw
test
pop
sarb
mov
adcl
fwait
scas
hlt
lret
jg
loope
iret
in
shlb
divl
mov
aam
dec
mov
add
mov
gs
hlt
test
js
pop
int
jo
movsl
inc
test
push
xchg
xor
dec
fs
call
adc
out
and
xor
mov
inc
adcb
test
xchg
jl
mov
mov
daa
int
xchg
xchg
mov
pop
clc
mov
mov
xchg
cmp
cmc
je
dec
inc
push
inc
aad
std
inc
lcall
popf
push
repnz
mov
cwtl
pop
cmpb
xor
mov
addr16
and
sbb
gs
std
cwtl
repz
rorl
out
adc
pop
inc
sub
sub
adc
nop
leave
cmp
sar
pop
shrl
lods
push
mov
xor
shlb
jns
test
fnstenv
jecxz
and
cltd
hlt
fwait
cs
sub
ds
jg
pop
ret
ds
push
fwait
jge
mov
arpl
es
xchg
fwait
xor
or
das
push
xchg
loope
pushf
mov
mov
push
sub
into
pop
dec
das
xchg
sbb
out
mov
adc
jb
out
mov
add
dec
outsl
imul
xchg
repnz
stos
pop
fildl
stos
cs
mov
rcrl
adc
xor
hlt
movsb
out
xchg
es
mov
dec
lcall
outsb
push
sbb
loopne
and
sub
pop
and
sahf
xlat
xor
push
xchg
adc
jno
mov
lret
mov
cld
jae
xor
fs
testb
mov
sbb
add
xor
xchg
lahf
ret
dec
push
and
mov
adc
jo
mov
and
mov
adc
mov
rcll
loop
sbb
lods
sub
cmp
clc
push
add
loope
or
out
xchg
jl
jb
pop
call
imul
xchg
sbbb
xchg
push
mov
data16
pushf
movsl
stc
sahf
orb
bound
cmp
clc
rcrl
and
lods
or
xor
push
inc
cmp
push
das
cmp
mov
push
mov
push
inc
adc
fsubl
flds
pop
push
movsl
out
popa
ljmp
rcrl
inc
xchg
pushf
inc
fldt
sub
mov
cmpsl
in
xor
in
dec
sub
rcl
fists
and
fnstcw
and
adc
mov
push
pop
jno
push
add
xor
lahf
shr
push
or
in
fst
dec
inc
rolb
nop
sbb
icebp
hlt
pop
mov
mov
push
aad
add
into
xlat
mov
dec
ficomps
cmp
shll
mov
bound
cli
out
or
mov
adc
dec
dec
call
push
int
rcll
call
sbb
adc
incb
pop
cld
and
or
push
or
pop
jae
mov
lret
jmp
sbb
dec
xchg
ja
push
mov
cmp
out
sub
pop
pop
mov
hlt
xchg
sub
mov
outsb
mov
xchg
add
movsb
mov
mov
sub
mov
sbb
cmp
pop
lahf
mov
rclb
std
je
mov
loopne
mov
push
stc
push
jp
adc
pop
cmp
push
data16
shrb
cmp
xor
lcall
pop
lahf
in
outsl
push
jb
jmp
or
shlb
jo
stos
aas
mov
shrl
outsb
mov
clc
add
sub
scas
or
aaa
or
stos
xchg
testb
std
arpl
shrb
fnsave
push
cmpsl
stos
inc
inc
dec
pop
out
rep
shrl
mov
add
pushf
jl
rorb
push
daa
lods
xbegin
or
shlb
les
leave
aas
mov
mov
inc
icebp
out
jl
and
push
loop
xchg
xor
mov
jge
decb
ficomps
mov
dec
xor
mov
inc
inc
insl
sub
lcall
xor
xchg
inc
dec
scas
adc
sahf
add
sti
sub
into
lcall
add
mov
sub
es
call
cmp
icebp
repz
mov
in
lret
jle
aad
loop
mov
loope
lea
pop
jne
test
sub
lret
loope
mov
scas
sub
jge
or
add
aam
cmpsl
cld
or
sbb
je
ret
outsl
jb
jle
stos
add
test
jo
pop
out
mov
popf
insb
jge
ret
sbbb
xor
dec
xchg
xchg
cwtl
sti
xchg
dec
in
push
popw
mov
insb
lods
push
test
repz
cmp
gs
sbb
inc
shrb
inc
mov
mov
lahf
loop
cwtl
lods
mov
sub
jecxz
push
or
fucomip
push
cmc
mov
aas
mov
and
mov
enter
mov
and
jg
shlb
mov
push
pop
add
mov
sub
xchg
cmc
pop
cli
dec
inc
push
out
mov
and
movsb
fwait
mov
sbb
mov
loop
outsl
cmp
jno
push
pop
mov
std
cmp
jl
add
loopne
xor
in
jbe
sub
and
pop
js
xor
inc
mov
pop
mov
fidivrs
loope
test
stos
gs
insl
aam
pop
out
sahf
pushf
popf
lcall
adc
fwait
icebp
jne
insb
adc
bound
mov
and
adc
jmp
test
iret
shlb
xor
and
and
mov
cmp
mov
je
insb
sbb
rcl
inc
out
nop
out
pusha
cli
data16
dec
push
nop
cmp
jg
loop
inc
mov
jb
jmp
mov
lret
xor
push
sar
jmp
cmpsb
sbb
pop
xchg
add
mov
adc
cld
fsubp
dec
mov
fisttps
or
fstpt
sti
lahf
xor
jbe
and
cwtl
ljmp
pop
subb
adc
fwait
cmp
push
nop
mov
cmp
out
sub
bound
xlat
mov
leave
cli
add
jns
and
cli
mov
jge
inc
fstps
or
cmp
frstor
mov
cmp
shl
sbb
scas
push
loope
jnp
scas
push
cmp
fs
sub
fidivs
xor
in
inc
fwait
or
jp
pop
and
push
int3
pop
cltd
out
fldl
sbb
scas
loop
xlat
cwtl
mov
inc
insb
push
jb
test
xchg
test
int3
pop
add
xchg
cmp
push
mov
mov
adc
dec
and
or
loope
daa
enter
push
ret
jp
lretw
and
push
sti
or
push
cmc
dec
shl
add
inc
popl
shl
or
jg
enter
jl
adc
es
mov
pop
push
ja
iret
mov
jge
scas
push
jmp
movsb
and
cs
lock
sbb
jo
jns,pn
mov
sub
and
lcall
testb
and
or
fisubrs
sub
movsb
sbb
cmp
push
fs
adc
cmp
cmp
dec
or
push
js
insb
lock
cmp
push
push
adcb
das
insb
stc
mov
xchg
andb
in
jbe
shll
or
or
lret
cmpsb
int3
or
xchg
iret
or
in
push
iret
pop
jae
in
xchg
mov
cmp
outsb
in
sbb
and
inc
lds
cmp
call
mov
sub
icebp
inc
lods
aas
and
ljmp
mov
loope
loop
inc
lahf
dec
cmp
xchg
stos
pushf
dec
xchg
je
sub
sub
sbb
sbb
jnp
mov
imul
xor
push
fs
push
jp
inc
cmp
xor
xor
push
jg
cmp
pop
pop
pop
dec
arpl
jo
cmp
aas
stc
push
out
add
loop
ds
xchg
inc
jno
jb
add
fdivr
jecxz
cmp
pop
test
jnp
out
fisubl
cmp
js
stos
sahf
cmp
lret
add
sbb
sbb
fildll
xor
insl
cmp
mov
xchg
adc
push
call
push
daa
mov
leave
lret
shll
or
mov
fadds
xchg
pushf
fldt
cmp
dec
jno
jb
int
push
sbb
mov
dec
mov
and
cwtl
arpl
dec
pop
push
push
lock
hlt
pusha
sbb
mov
add
push
or
mov
in
jb
iret
fidivrl
ja
jbe
outsl
dec
sub
push
inc
dec
mov
or
mov
pop
insl
dec
imul
ds
out
inc
pushf
adc
imul
pop
ficomps
adc
data16
xor
xor
cld
and
out
notl
arpl
das
into
clc
add
push
and
cltd
fstp
sbb
add
inc
cmp
out
insl
lea
call
ret
xor
jl
mov
add
add
jle
jo
jns
xchg
ror
inc
mov
frstor
or
cs
imul
imul
dec
in
xchg
cli
icebp
adc
adc
ljmp
push
pop
call
pusha
push
add
jecxz
lods
jne
popa
fsubs
dec
sbb
jmp
mov
mov
stos
mov
cltd
ja
or
gs
sub
mov
negl
test
hlt
mov
sub
push
xchg
jae
nop
add
into
int3
idivl
dec
aaa
inc
adc
add
dec
cmpl
rclb
mov
cltd
cmpsl
or
xchg
out
push
and
inc
fistpll
aaa
insw
out
sbb
inc
lds
push
ret
fbld
orb
sti
fsubs
pop
sbb
test
cwtl
std
int3
popf
or
lods
jmp
stc
call
pop
cmp
inc
insl
xchg
dec
or
imul
jo
in
cli
xor
add
stc
cmp
leave
push
int
sbb
add
xchg
or
add
mov
inc
loopne
lods
jge
aaa
lods
das
fcoms
pop
pusha
shll
and
fsin
mov
nop
test
pop
cmc
push
cs
inc
movsl
lcall
and
ljmp
cmp
jp
sub
push
xchg
cmp
mov
pop
xor
das
dec
pushf
and
cmpsb
cltd
mov
inc
into
adc
sbb
cs
xchg
test
push
xchg
mov
js
and
xorl
stc
das
jb
jne
clc
add
xchg
loope
lret
rorl
mov
sahf
mov
add
add
insb
jo
mov
mov
mov
lea
loop
loope
faddl
out
sbb
rcl
xor
push
xor
xor
popf
data16
inc
or
or
xor
out
out
or
mov
push
lods
sbb
mov
cmpb
sahf
adc
rcll
inc
push
cwtl
in
sub
repnz
lods
inc
in
in
scas
adc
mov
xorl
xchg
mov
test
add
sbb
add
daa
and
push
push
or
inc
add
shrb
and
adc
pusha
jge
scas
div
cmc
stc
xor
out
icebp
fcmovnbe
sti
xchg
jge
cmp
out
jns
sti
rorb
adc
dec
xchg
pop
je
jns
adc
mov
jns
and
imul
cltd
dec
mov
and
pop
push
popw
push
mov
aaa
mov
or
sti
cmp
cli
cmp
mov
push
arpl
sbbb
add
sbb
lret
lahf
mov
les
sub
hlt
pop
sbb
pop
add
mull
insb
adc
movsl
out
loop
jo
popf
xchg
add
ret
pop
mov
je
shll
dec
mov
mov
cpuid
shr
pushf
movsb
push
adc
or
mov
sub
cmp
adc
pop
jno
cmp
lret
out
cwtl
or
push
dec
cmp
pop
adc
push
jo,pn
fsubr
xchg
les
cmp
xchg
and
xchg
es
xor
jae
dec
sarb
xor
and
add
pop
mov
or
es
add
jge
xchg
sub
sbb
jge
pushf
xor
pushf
cmc
repnz
scas
cmc
push
cmp
push
inc
cmpsb
pushf
mov
pop
das
jnp
mov
mov
sub
iret
lret
scas
test
test
jp
shlb
popl
add
into
shrl
aad
sar
lret
add
jl
and
push
mov
inc
pushf
insl
loopne
int
addb
pop
push
rorl
sub
sub
add
mov
sti
cmp
stc
lea
test
xchg
ret
ret
mov
adc
xchg
cmc
jno
adc
push
lods
rcl
ja
outsb
mov
in
leave
xor
xor
psrld
movsb
jo
add
xor
xorb
push
mov
test
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
and
lahf
and
jge
std
cmp
add
call
mov
jns
pop
cmp
pop
add
or
cltd
jne
arpl
adc
mov
shrl
dec
xor
sbb
push
mov
data16
sub
sbb
sub
jge
cli
repz
lds
sub
imul
out
sub
xchg
add
adc
pop
shlb
jbe
inc
push
ret
dec
xlat
inc
mov
jp
mov
and
jle
sti
leave
pushf
aad
add
mov
fmull
add
inc
and
adc
add
mov
pop
sub
icebp
sub
xchg
shlb
mov
pop
in
shl
imul
jae
push
dec
in
inc
insl
xchg
adc
push
aad
push
call
mov
addr16
jl
mov
inc
hlt
out
pop
push
mov
sarb
outsb
jmp
jnp
xchg
jne
sbb
scas
jp
xchg
je
mov
mov
loop
test
push
xchg
and
or
xchg
fnstcw
mov
cli
loopne
cmpsl
imul
mov
sahf
and
cld
outsl
jbe
mov
repnz
fwait
scas
and
pushf
mov
clc
jl
daa
inc
hlt
out
cmovg
jle
xchg
xchg
cmpsl
mov
leave
push
mov
add
movsl
fsub
inc
into
mov
js
dec
test
rcll
adc
daa
std
imul
dec
xchg
das
inc
movsb
or
add
push
cmp
and
add
lods
push
leave
mov
or
fiadds
pusha
movsb
and
popf
mov
xchg
dec
sbb
sub
dec
outsl
ficoml
je
out
adc
clc
pop
sub
mov
cmpsb
mov
jnp
jae
inc
aad
mov
push
repnz
scas
mov
xor
ja
jnp
fcompl
inc
fwait
xor
icebp
dec
rclb
inc
loopne
out
sahf
imull
daa
or
sub
out
mov
mov
and
shrb
push
cmp
jle
call
arpl
mov
push
jp
xchg
int
daa
add
fwait
mov
in
bound
sbb
hlt
pop
mov
icebp
cld
jge
mov
jo
out
xchg
pop
or
and
imul
out
mov
test
scas
stos
js
xchg
jmp
mov
sub
or
mov
sbb
and
test
es
add
xor
mov
mov
cs
mov
decb
inc
dec
ljmp
icebp
xchg
mov
adc
cld
sub
out
movsl
or
xchg
push
push
xchg
int
into
jp
xlat
rolb
test
dec
push
or
daa
mov
insb
push
sub
jg
in
pusha
mov
shr
repz
stc
xor
jmp
mov
xchg
shr
xchg
mov
and
mov
pushf
rorl
inc
mov
mov
nop
push
push
arpl
lds
mov
sub
and
adc
inc
jp
inc
inc
sbb
add
add
add
rcrb
cmp
dec
ss
jno
sbb
mov
int3
mov
bound
aas
and
lret
sbb
scas
mov
mov
mov
paddd
sbb
pop
mov
cmpsl
mov
mov
cwtl
adcl
inc
inc
or
int
ret
dec
jns
repnz
push
mov
inc
data16
pop
out
add
scas
dec
inc
out
push
ret
js
cltd
ds
dec
icebp
push
cmp
mov
xchg
outsl
sahf
rclb
add
rorl
fistpl
lcall
lock
fs
filds
mov
and
into
test
lret
push
je
js
xchg
or
cmp
adc
and
test
lods
add
lock
pusha
mov
insb
mov
xchg
rcrb
movsl
push
call
xchg
push
mov
push
xor
aad
cmp
cli
ss
daa
popf
popf
rorl
adc
fdivr
pop
sarb
bound
imul
fs
icebp
pop
mov
sarb
jo
aas
push
sub
cmpb
adc
mov
imul
inc
repnz
mov
inc
cmc
or
mov
nop
pop
imul
mov
ret
jmp
xor
add
aas
or
dec
add
dec
ljmp
push
xor
loopne
dec
rcrl
lds
cmp
push
shlb
testb
pop
jns
inc
mov
cmp
scas
lahf
mov
arpl
sbb
imul
ss
fcmovnbe
sbb
or
push
js
dec
adcl
xchg
xchg
or
mov
mov
add
dec
movsb
pop
repz
jl
push
incl
in
aaa
sub
es
std
add
pop
add
jmp
fisubs
outsl
mov
cltd
mov
mov
sub
push
mov
fwait
cmp
mov
or
add
imull
ret
inc
fwait
add
pushf
std
pop
dec
std
scas
stos
push
loopne
and
in
jno
inc
adc
ss
xchg
fsubp
xor
pop
cmpb
jae
mov
roll
ffreep
lahf
and
and
in
adc
add
je
jns
scas
mov
mov
imul
shlb
pop
aas
loope
loope
add
pop
xor
shr
add
dec
fwait
inc
mov
mov
add
mov
daa
int3
xchg
adc
jbe
jns
popf
stos
lods
out
jle
xchg
cmp
adc
mov
adc
in
out
mov
dec
mov
subb
jnp
xchg
add
mov
aas
mov
push
mov
add
inc
sti
sbb
add
jp
cmp
inc
xor
negb
int3
insb
insl
mov
imul
inc
add
cmp
aas
loopne
mov
dec
imul
imul
mov
iret
addr16
pop
fadds
xchg
sbb
roll
enter
sub
adc
daa
xchg
fistpl
xchg
aad
jo
and
lahf
nopl
adc
in
test
sti
jo
rclb
lods
mov
ret
xchg
mov
mov
mull
lea
je
in
repz
jo
jle
or
dec
dec
je
fst
int3
mov
lds
inc
sub
dec
mov
and
fisttpl
or
fisttps
or
ret
push
sub
insb
inc
dec
lds
adc
test
aas
mov
push
enter
mov
mov
jl
push
pop
rcl
lcall
call
decl
push
xchg
fidivrs
stos
pop
add
popa
and
out
mov
aam
xlat
cmpsl
or
add
mov
leave
in
test
push
lods
inc
jno
mov
movsb
push
pushf
das
shll
es
sbb
int3
fnstcw
leave
xchg
mov
mov
push
push
lea
test
xlat
movl
sbb
cmp
sbbb
mov
repz
test
iret
lahf
mov
dec
movsb
sub
cld
push
mov
sbb
out
jo
inc
leave
lods
jns
adc
mov
lret
rol
xlat
inc
lret
movsl
mov
push
in
dec
sbb
dec
out
movsl
adc
pop
rorb
jae
shrl
cmpsl
insl
sbb
jge
add
aam
push
ss
subb
out
and
dec
mov
fsubrl
cmp
mov
lds
nop
inc
js
cmp
add
fldt
adc
negl
inc
jne
fsubs
test
pop
push
push
jbe
push
test
lahf
fwait
xchg
fld
and
cmp
cmp
call
push
add
ss
jle
leave
xlat
fldcw
testb
jmp
ret
dec
cmp
or
ss
push
dec
or
push
fdivrl
jo
in
jg
imul
aam
int3
gs
adc
xchg
imull
movsb
cltd
cmp
test
add
push
mov
fcmovnbe
mov
jb
mov
movsl
in
add
insl
pop
dec
orl
roll
jbe
add
lcall
mov
jns
cld
pushl
mov
push
xor
push
mov
pop
adc
call
addl
fnstcw
jp
in
pop
iret
dec
ss
dec
rorl
scas
out
cmp
pop
add
mov
pop
push
mov
leave
adc
inc
lods
fs
xchg
popa
xor
insb
cmp
pop
test
insb
fmull
loopne
ret
outsl
rol
jbe
outsb
ja
jg
je
sahf
insb
push
cld
or
test
subl
lock
adc
cmp
jno
out
test
or
sub
rcrb
mov
cs
inc
mov
fwait
loope
dec
ss
push
push
es
pop
sbb
mov
adc
stc
frstor
rorl
inc
or
fistps
loopne
outsl
inc
add
push
push
ja
or
add
inc
jle
shrb
mov
pop
cmc
fwait
call
inc
imul
scas
into
cmp
pop
dec
rcr
jge
adc
pop
test
lods
mov
jmp
add
sbb
jno
stos
adc
lods
and
js
adc
jle
xor
sub
loopne
loop
xchg
inc
aam
divl
leave
xchg
adcl
xor
jbe
test
lahf
sarb
std
test
push
dec
fs
ja
adc
adc
jae
and
jb
push
nop
push
sbb
sahf
test
insl
push
xchg
xchg
inc
icebp
test
inc
fdivp
xor
shr
pop
jne
jno
sub
int3
hlt
pop
loopne
sti
mov
int
sbbl
lock
inc
mov
repnz
loopne
shrl
stc
add
call
repnz
bound
js
cmpsl
enter
fildll
pop
cmp
push
jno
pushfw
div
adc
ss
mov
sub
and
or
cmc
and
rcr
inc
or
int
hlt
rolb
cmp
mov
mov
cmp
jne,pn
inc
sub
loope
int3
lock
adc
mov
xor
cmpsb
ret
push
adc
js
outsb
popf
je
cld
lret
out
scas
sbb
jp
adcb
sbbb
outsl
je
mov
clc
pop
jo
test
push
shll
or
in
inc
idivb
pusha
xlat
mov
mov
push
add
outsb
outsl
in
and
inc
fisttpl
out
rcrb
les
cwtl
rol
lcall
imul
and
out
mov
pop
enter
loopne
mov
xchg
jbe
adc
mov
cwtl
leave
pop
sbb
stos
inc
xor
push
notb
dec
pop
jb
shl
rorl
lods
mov
jle
sti
pop
and
and
push
xchg
roll
mov
ja
std
stos
mov
xchg
xchg
cwtl
addb
or
sub
push
bound
adc
sub
lods
ret
call
inc
lahf
and
das
xchg
fidivrs
lock
rolb
and
stc
mov
mov
xor
inc
jmp
add
push
data16
call
outsb
mov
xor
fidivrl
fwait
pop
int3
cmp
fs
icebp
cmp
outsl
pop
dec
movl
sub
in
mov
adc
dec
fildl
imul
inc
in
pop
add
and
enter
jle
mov
adc
jp
mov
bound
clc
dec
pop
out
adc
les
or
jbe
pusha
mov
mov
shrb
data16
loopne
dec
or
inc
and
lahf
push
sti
das
xchg
or
rclb
lods
fsubr
and
add
inc
push
jne
pushf
lret
xor
mov
sarb
loop
scas
dec
test
fs
sbb
xchg
sub
lods
xchg
or
test
stos
mov
lcall
jmp
pop
into
mov
mov
push
in
movsb
adc
loope
aam
push
fdivs
mov
int
xchg
icebp
jne
gs
movsb
into
sbb
scas
mov
int3
pop
push
pop
out
push
jo
mov
shl
pop
mov
cmpsl
mov
xchg
push
inc
cmp
sbb
das
test
mov
jp
mov
addr16
lea
mov
inc
or
and
std
call
gs
xor
lcall
dec
dec
scas
sarl
push
repnz
adc
dec
xchg
mov
cmpsl
push
sub
popa
dec
mov
dec
and
out
int
dec
xchg
stos
cld
stos
test
mov
out
xor
decl
inc
rcrb
scas
rcll
adc
jns
jmp
out
inc
aad
movsl
sbb
loopne
and
insb
fdivrl
xchg
insl
bound
sub
cs
xchg
js
lret
cmp
adc
pop
or
insb
xorb
jae
pop
jl
arpl
push
dec
jecxz
fdivl
inc
icebp
sbb
mov
pop
or
jle
and
call
add
push
icebp
aas
cmpb
push
int
mov
sub
dec
hlt
imul
xchg
and
mov
sbb
cmp
lcall
mov
pop
aam
sub
daa
movsl
push
xor
pop
push
cmp
sbb
inc
push
or
mov
pop
rol
enter
add
jle
enter
sbb
je
fs
in
sbb
push
cmp
mov
repz
sti
lret
jo
mov
push
ficompl
stos
movsb
mov
push
repnz
insb
xlat
xchg
movsb
mov
mov
incl
movsb
jne
and
scas
in
imulb
dec
enter
pop
pop
lcall
add
ljmp
js
movsbl
push
mov
in
xor
push
push
int
xlat
cmp
in
xchg
aaa
mov
add
mov
xor
aad
adc
dec
dec
cmpsl
sbb
mov
cmp
mov
dec
arpl
jns
jl
adc
mov
adc
and
pushf
out
xor
adc
mov
out
xchg
xlat
inc
movsb
xor
insb
pop
mov
dec
rcrb
fnsave
pop
pop
out
enter
es
insl
xchg
bound
ficompl
jo
loope
jg
fsubs
dec
sub
out
xor
js
xchg
xchg
cmpsb
inc
lock
jno
add
stos
pop
cmpsb
push
jge
pop
push
dec
inc
notb
stc
popf
mov
lret
rcrl
dec
idivl
adc
mov
mov
jge
cmp
jmp
jne
cmp
adcb
les
popf
int
sbb
fistps
mov
repnz
cmp
mov
shlb
adc
mov
pop
or
inc
sbb
cmpsb
arpl
push
imul
mov
testl
sbb
movsl
mov
call
out
pop
out
iret
out
shlb
mov
and
stc
js
ds
gs
leave
sbb
sub
or
cld
test
fsubr
sub
fisubrs
in
sub
iret
arpl
sub
ss
enter
adc
testl
imul
add
or
dec
adc
sbb
scas
mov
sbb
and
test
mov
push
mov
push
faddl
pop
xchg
cmpsb
add
fstl
int3
outsl
ficomps
leave
rcl
jnp
and
xor
int
jle
and
nop
or
mov
push
test
adc
pop
mov
jmp
adc
or
mov
dec
mov
ljmp
aad
aam
xor
mov
mov
test
fucomi
dec
add
arpl
mov
mov
aad
scas
call
jb
sbb
add
push
add
rcr
enter
movsl
test
cmc
pop
add
out
clc
nop
shr
sbb
push
outsl
xor
dec
loop
imul
add
xor
sti
push
cmpsl
insb
and
mov
sub
outsl
pop
cwtl
pop
and
jl
lcall
ljmp
clc
pusha
sbb
les
jmp
jecxz
fisubl
cmp
mov
popa
lea
adc
out
repnz
sbb
push
mov
pop
lock
sub
cs
fbstp
or
cld
cmpsb
xchg
or
nop
sbb
mov
cmc
mov
and
inc
test
inc
dec
stos
insl
lock
sti
ljmp
rolb
pushf
cld
mov
jmp
lahf
pop
loopne
jmp
and
test
cmp
xorl
mov
xor
mov
aam
cmpsb
jg
jbe
sub
inc
ss
in
sub
cs
repnz
sahf
mov
push
dec
and
in
fnstenv
imul
and
or
mov
push
lret
dec
fwait
in
fstpl
lcall
cli
mov
add
push
pop
iret
fwait
mov
lock
mov
dec
add
cs
and
loopne
jg
movl
adc
pop
dec
jecxz
add
and
xchg
adc
fisubrl
jmp
fildll
imul
gs
mov
ds
loopne
pop
dec
push
pop
xchg
sbb
cmpb
pusha
fdivrs
add
mov
cmp
adc
psllq
ds
add
xchg
adc
or
outsl
add
pushf
adc
inc
mov
mov
sbb
gs
or
and
mov
js
cmp
push
add
scas
xor
push
add
into
xchg
fucomp
xchg
mov
lds
in
pop
jge
inc
sub
out
out
in
add
in
or
adc
or
mov
push
cmp
mov
and
out
or
orb
stc
inc
push
fistl
push
repnz
gs
outsl
int3
loop
lods
je
xchg
mov
push
jecxz
iret
xor
or
adc
jecxz
dec
push
push
movsl
rorl
sbb
into
push
sbb
lods
sbb
jmp
jnp
jb
mov
mov
test
jns
call
and
push
scas
jo
loope
mov
cmp
pushf
jo
push
punpckldq
xchg
iret
rorl
sahf
stos
mov
jne
lods
and
bound
stos
xlat
aad
aaa
sti
loopne
leave
or
mov
xchg
inc
out
mov
jns
mov
les
or
adc
xor
scas
inc
xchg
paddw
lods
inc
jmp
aaa
and
lret
mov
xchg
fwait
inc
hlt
aaa
mov
dec
shr
pop
flds
push
outsl
lret
jo
clc
scas
fisttpl
adc
pop
test
sbb
daa
ds
pop
push
out
popl
bswap
sub
lret
insb
add
out
sub
push
mov
iret
loopne
repnz
xor
and
aad
and
jae
cmp
jb
xor
cltd
inc
fs
or
lret
andb
jae
jns
mov
or
pop
ljmp
aas
sbb
es
mov
enter
cmp
sti
lds
clc
fucomp
push
sti
aam
sub
and
mov
divl
ss
arpl
pop
shll
cmp
adc
iret
mov
or
stc
xchg
arpl
stos
mov
mov
popa
pop
adc
test
sbb
shrl
loopne
or
sub
jmp
push
or
jle
xchg
pop
and
cmpsl
sbb
xlat
movsl
and
les
xor
into
mov
pop
decb
add
dec
mov
xchg
in
jb
mov
lds
lock
push
cmpsl
adc
xlat
rclb
cmpsb
cld
shlb
push
imul
xchg
cmp
jge
loopne
mov
sub
lods
cmp
mul
jo
sahf
fwait
mov
xor
shrb
mov
push
hlt
outsl
loope
aas
shlb
sti
xor
cmpsl
clc
mov
lock
mov
adc
jge
dec
sbb
lea
test
std
cmpsl
cmp
jnp
test
lds
stos
mov
and
inc
pop
ja
dec
mov
or
call
push
xlat
arpl
xchg
fs
lock
cmp
stos
lret
xlat
subb
mov
shll
enter
add
testb
mov
addl
in
leave
stos
jns
inc
mov
hlt
inc
mov
xor
push
loop
sub
xor
out
sti
mov
lcall
mov
clc
add
push
sbb
loope
or
popa
inc
sti
jns
nop
mov
fwait
scas
test
sbb
stos
add
cmp
into
dec
repz
sarl
les
das
fs
in
push
outsb
and
add
int
cmp
insb
jl
decl
addr16
aas
jbe
pop
sub
lods
out
inc
shrl
outsl
fstp
xor
movsl
incb
mov
lret
es
xor
and
mov
addb
negb
loope
rcl
fbstp
clc
loope
imul
mov
xchg
mov
sti
mov
les
decl
lods
add
out
pop
sub
fwait
push
pop
je
sub
dec
cmp
cmp
pop
jae
jnp
sub
aaa
dec
cmc
in
popl
fisubrl
hlt
inc
or
ss
cmp
adc
insl
mov
mov
arpl
fs
sti
lahf
push
mov
or
pusha
movsl
jae
add
cwtl
movsb
cltd
in
daa
sbb
sub
mov
int
mov
cmp
push
or
sub
dec
or
mov
js
pop
push
xchg
into
sub
cwtl
mov
sarl
in
add
xor
jg
push
gs
test
push
add
sub
fs
fldl
xor
loop
mov
mov
nop
inc
mov
mov
enter
mov
jge
adcb
clc
dec
sbb
test
add
inc
adc
sbb
imul
mov
sub
loope
xor
ja
pop
lods
pop
xchg
lret
mov
add
data16
shll
adc
ja
pushf
push
dec
and
mov
inc
pop
jnp
lea
pop
decl
inc
xor
pop
and
lcall
fadd
pop
xchg
jle
mov
cmp
and
jecxz
lcall
dec
jb
or
loopne
fcoms
xor
pop
cmp
lods
pop
xor
insl
out
movsl
cmc
lret
into
or
sbb
loop
mov
mov
dec
stc
push
fisubs
imul
aas
mov
test
xor
arpl
sbb
mov
mov
mov
inc
mov
push
ljmp
ret
mov
xor
xor
mov
cmc
lret
push
jmp
lret
sti
stos
movsl
jmp
adc
dec
jg
lods
lret
jle
repz
dec
fs
aaa
imul
add
enter
cmp
imul
pop
fsts
mov
push
xor
mov
inc
ud1
int3
pop
and
xchg
mov
test
repnz
or
xor
and
psubb
in
insb
xchg
repnz
sbb
test
clc
enter
pusha
xor
shrl
jo
out
sub
push
inc
or
or
or
movsl
fwait
mov
xchg
or
and
lcall
xchg
lret
out
lcall
in
clc
inc
stc
sbb
pop
adc
and
inc
ss
mov
fiadds
mov
mov
shlb
daa
or
stos
sub
gs
mov
daa
cmpsb
fimuls
shlb
into
inc
inc
lret
lret
pop
aaa
xchg
push
jge
push
pop
imul
jb
pop
movb
shl
cmpsb
jae
and
dec
in
pop
xlat
daa
out
and
xchg
fmull
or
push
push
push
and
pushf
mov
sbbb
push
mov
cld
jge
movswl
jp
xlat
aam
std
xchg
pop
fidivl
dec
testl
inc
mov
adc
repnz
loope
and
push
add
cmp
xor
stos
outsb
lcall
sti
inc
xor
movsl
dec
xchg
xchg
stos
mov
scas
es
pusha
outsb
ret
xorl
push
call
pusha
push
and
cwtl
cmp
jle
mov
ss
sarb
das
dec
cmp
adc
dec
loop
cmp
pop
xchg
fwait
mov
xchg
pop
add
mov
mov
lahf
dec
mov
loopne
or
in
stos
loope
jl
fildll
pop
sbb
negb
loop
mov
pop
fdivrl
push
mov
je
out
frstor
movl
push
sbb
jnp
pop
jmp
sbb
into
mov
out
push
adc
int3
add
shlb
push
inc
xchg
inc
jecxz
xchg
pop
push
lock
pop
rcrl
cmp
cmc
xchg
hlt
xchg
mov
and
mov
fstpl
stc
addr16
cmc
gs
xor
adc
stos
and
stos
icebp
adc
addr16
mov
test
icebp
inc
js
fmuls
dec
or
in
pop
cmp
pushf
inc
leave
cmpsb
pusha
imull
jno
push
test
pop
andb
dec
xor
sbb
lret
jg
fists
fdivr
adc
shlb
pop
pop
xor
inc
mov
push
pushf
mov
aam
lcallw
adc
pop
nop
inc
ret
test
cld
lea
push
xchg
imul
pop
sbb
mov
xchg
inc
loope
jbe
shlb
lods
jnp
or
fs
jb
stos
and
sub
inc
jno
mov
cmpsl
fnsave
out
std
or
das
add
and
jno
pusha
and
out
aaa
cld
incb
jae
int
in
sahf
cld
or
cmp
or
inc
pusha
xchg
sub
adc
sbb
shrl
sbb
inc
xchg
cli
ja
outsb
pop
push
lock
mov
je
dec
fiadds
jle
cmp
arpl
push
adc
cwtl
xor
xor
mov
outsb
mov
add
stc
push
aas
aaa
or
call
xor
xor
les
sbb
aaa
push
jl
scas
out
insl
popf
ret
dec
jne
mov
mov
ljmp
cs
std
addr16
loope
inc
int
inc
push
adc
mov
sarb
xorl
enter
or
mov
jp
cmpsl
pop
mov
mov
mov
xchg
xchg
dec
jno
pop
rcr
std
or
adc
stos
pop
and
pusha
out
js
add
xlat
iret
mov
pushf
fmull
xchg
aam
sub
pop
adc
xchg
add
fimuls
enter
inc
sbbb
xchg
push
mov
leave
nop
jo
lods
sbb
mov
cltd
lds
or
in
pop
xchg
sub
xchg
and
rolb
dec
and
gs
xchg
lret
movsb
jo
push
insb
dec
jne
dec
shlb
popf
in
loop
stos
enter
in
dec
lahf
pusha
push
aad
add
xlat
fldcw
out
je
cmp
inc
pop
mov
repnz
xchg
fst
into
arpl
fs
sbb
insb
and
xor
pop
push
and
and
pop
inc
sbb
and
push
pop
cld
xchg
sub
push
int
into
fisttpl
movsb
nop
enter
jmp
xor
push
mov
mov
xchg
js
xlat
dec
cmp
xchg
sbb
push
in
inc
iret
fmul
pushl
sub
call
inc
cmpsb
mov
std
lods
incl
notb
cli
mov
mov
add
xchg
mov
outsb
out
add
jmp
imul
loope
lods
mov
xchg
xchg
adc
popf
pop
xchg
out
arpl
dec
aam
sub
int3
ret
inc
mov
in
jno
xchg
jae
shlb
loope
jb
fwait
jnp
movsl
jnp
cwtl
fadds
cs
jbe
cld
fwait
xor
inc
xor
pusha
sub
dec
jo
lcall
cmp
mov
adc
loope
push
and
pop
add
stc
mov
xor
sbb
loopne
jae
push
and
mov
fdivs
mov
loope
cmp
mov
jle
lcall
jle
jmp
jmp
inc
jmp
add
or
sub
insb
adc
and
mov
scas
push
cli
das
es
jl
or
sub
pop
xor
mov
outsb
shlb
aaa
xor
fadd
sbb
fists
sbb
ret
inc
sub
cs
or
xchg
imulb
aam
xchg
fs
xlat
stos
and
lcall
jmp
sub
inc
push
je
lds
popa
out
pop
push
shr
xchg
imull
dec
push
cld
lock
cld
or
push
lds
push
xchg
arpl
data16
int
add
lds
mov
scas
xor
daa
inc
fnsave
sbb
mov
dec
mov
push
repnz
add
adc
test
cli
mov
scas
inc
std
and
and
push
sbb
sbb
int3
orl
outsb
and
sbb
dec
fsubrs
test
adc
xchg
sahf
cmp
pop
push
cmp
sub
sbb
xchg
mov
push
sti
int3
inc
pop
movsb
in
jge
mov
in
add
pop
xor
cmp
cmc
cmpsl
add
pop
push
out
push
clc
or
dec
lret
mov
or
test
pusha
mov
inc
xchg
adcl
jl
or
rorb
out
inc
xchg
loop
push
test
mov
ljmp
push
pop
mov
subb
mov
testl
pushf
cld
sub
mov
lret
mov
mov
fstl
cmp
push
ret
adc
addr16
fidivrl
pop
mov
sub
movsb
in
rorb
pop
mov
and
seta
jns
enter
nop
mov
repz
cld
ja
pop
imul
ret
into
aaa
jg
dec
dec
stc
push
pop
fistps
xor
jmp
inc
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
jge
jne
shlb
hlt
pop
bound
shl
iret
xorl
test
push
xor
andb
push
push
insl
in
cs
fxch
int
aas
data16
push
adc
lods
mov
pop
pop
movsl
inc
adc
lock
sbb
jnp
cmp
and
inc
les
fiaddl
cmp
into
pop
and
mov
and
ret
aam
negb
cwtl
aad
xchg
sub
pop
popa
mov
and
aas
lea
dec
aam
fcoml
dec
rcrl
test
enter
push
jns
mov
jae
pop
test
test
inc
xchg
mov
data16
lds
jne
cmpl
loope
dec
loop
xchg
jae
cmpsb
pusha
xor
cltd
sti
scas
movsb
cli
xchg
aam
bound
jge
fsubs
jno
es
mov
enter
lahf
mov
imul
test
stos
loope
out
mov
shlb
repz
outsb
jg
dec
std
sbb
in
and
repz
out
rolb
hlt
jns
bound
cmp
loope
test
pop
in
mov
lcall
jns,pt
es
or
cmp
cmpsb
movsb
xchg
adc
mov
fadd
rclb
les
push
dec
inc
or
inc
nop
jmp
add
mov
inc
mov
xor
fs
shrb
lods
adc
test
dec
loopne
mov
push
nopl
mov
xchg
push
cmp
jmp
mov
rcrl
xor
inc
pop
cmpsl
mov
gs
mov
jns
test
sub
decb
sub
pop
insl
sub
jb
inc
mov
in
push
sbb
xor
dec
jg
jo
in
ret
or
sbb
mov
xchg
xchg
jp
cmp
movsb
inc
lahf
mov
add
nop
add
jle
lock
arpl
jmp
jae
lods
xchg
popa
adc
dec
outsb
mov
adc
sbb
jae
sti
rol
xchg
out
scas
jne
xacquire
aas
xor
mov
xchg
push
or
jmp
lcall
cmp
insb
shrl
mov
test
push
vpmulhw
test
xor
in
sub
inc
mov
pusha
mov
icebp
out
jb
push
aaa
sub
mov
addr16
dec
cmp
and
hlt
sub
gs
xchg
lret
stc
push
cmp
stos
mov
mov
adc
scas
lret
and
testl
andb
mov
jb
aaa
outsl
in
rolb
in
xorb
and
pop
mov
lcall
or
int3
mov
dec
pop
adc
shlb
adcl
ret
rcrl
fsubrl
mov
push
out
mov
add
cmc
and
les
mov
cmc
test
cmpsl
out
shll
cmp
popa
pop
shlb
mov
mov
jg
xlat
fwait
movsl
and
inc
push
jns
jb
cmpsb
fwait
xchg
add
push
pop
bound
mov
xor
imul
or
mov
mov
xchg
xchg
lock
dec
xor
jno
mov
pop
or
push
es
scas
js
xchg
cmp
fcmovnbe
mov
cmpsb
aad
pop
fidivrs
sbb
lods
cld
add
int3
jmp
rorb
mov
fnsave
fstpt
jae
popf
sub
movsl
stos
mov
xor
fsincos
aas
sbb
inc
add
jae
hlt
or
pop
cmpl
inc
add
cmp
fnclex
shrl
out
orl
sbb
adc
jmp
or
stos
jne
jl
pusha
test
rorb
ds
sti
mov
shll
adcl
mov
pop
das
and
sbbb
nop
xor
jl
mov
and
inc
push
inc
xor
lret
movsl
jge,pt
adc
pop
sti
cmp
xchg
mov
subl
daa
cmp
and
pop
adc
out
sbb
push
pop
xor
daa
sub
xchg
inc
aad
mov
mov
dec
sbb
jae
repz
aas
popf
scas
mov
outsb
xor
push
jbe
insl
roll
std
jle
push
adc
push
pop
cmc
mov
je
jb
mov
jno
imul
imul
jbe
enter
mov
fsubrl
loope
mov
mov
jns
pop
inc
xchg
sbb
loope
je
sub
data16
adc
insb
imul
xchg
mov
push
add
loope
out
xchg
push
sub
cmp
cmp
mov
out
mov
push
dec
jecxz
cmpsb
sub
sbb
js
pop
cmp
mov
dec
inc
sbb
fisubs
push
out
xchg
loop
mov
outsl
mov
test
sbb
sbb
adc
push
frstor
outsl
imul
sub
xchg
cmp
jmp
cs
xlat
push
xchg
test
imul
rcll
mov
js
std
out
pop
mov
subl
mov
adc
pop
lcall
xchg
cmp
xchg
cmp
mov
cli
or
aaa
mov
lret
jbe
ja
add
or
mov
roll
xchg
sub
ret
call
es
or
mov
mulb
fstpt
mov
dec
adc
mov
inc
inc
jnp
xchg
cs
or
stos
cltd
test
out
clc
mov
fistpl
leave
push
push
out
mov
in
imul
into
mov
test
push
mov
or
cwtl
push
subb
movsl
xchg
test
xor
ljmp
inc
xchg
jnp
nop
mov
enter
sub
jle
sub
cmpsl
push
test
ds
subb
sbb
cmp
jb
idiv
fidivrs
sub
jnp
pop
bound
dec
xchg
xchg
and
dec
jecxz
ja
and
adc
adc
pop
out
gs
popa
in
mov
cmpsl
xlat
xor
add
push
dec
cmpl
mov
sbb
pop
or
sbb
mov
xchg
push
push
cld
inc
add
push
daa
dec
int3
adc
pop
jo
daa
gs
lcall
jo
int3
in
cmp
dec
outsl
hlt
pop
jo
mov
cmp
ljmp
or
push
sub
xchg
test
pop
push
lock
imul
in
xlat
call
push
push
push
in
inc
mov
dec
lret
roll
inc
xor
sub
lahf
fwait
or
xor
fistl
adc
pop
mov
pop
dec
adc
push
dec
and
sbb
cmc
cmp
int
inc
mov
adc
pop
jmp
sbb
inc
imul
xor
or
lret
addr16
or
mov
mov
xchg
cmp
pop
inc
dec
cmp
imull
int3
push
imul
cld
adc
add
imul
stc
orl
jp
frstor
or
rol
clc
mov
jo
sar
mov
dec
mov
fcmovnbe
ss
iret
pop
sarb
ja
mov
jb
xchg
roll
xchg
bound
fimuls
ljmp
mov
shll
xchg
mov
or
push
mov
sbb
sub
mov
fldcw
mov
xchg
pop
xor
cltd
jp
fldt
aad
jp
outsl
rcll
push
lret
add
pop
pop
iret
les
jns
scas
cwtl
inc
jae
pushf
push
pop
or
leave
sbb
jge
push
mov
enter
inc
repnz
outsl
xor
cmp
stos
mov
and
dec
fildl
out
test
data16
ficomps
inc
aas
dec
push
or
stos
jo
jo
repz
sub
cmp
adc
adc
jne
gs
divl
iret
inc
lea
pushf
adc
lods
cmp
movsl
nop
fdivp
push
pushf
flds
popf
aaa
call
sub
add
cmpl
out
loopne
xchg
or
out
sub
leave
pop
mov
mov
popf
mov
arpl
push
inc
out
std
mov
aam
xchg
xor
or
js
mov
jo
xor
mov
into
jbe
mov
or
pop
out
ret
cmpsl
ja
adc
or
sbb
mov
in
sbb
mov
jo
fwait
push
jge
ret
in
mov
push
adc
repz
lods
and
jg
bound
addl
enter
dec
push
xor
dec
int3
dec
pop
adc
pop
in
bound
add
cmpl
and
push
scas
outsb
out
out
repz
mov
pop
lea
into
push
test
push
imul
xchg
lret
js
push
add
mov
add
arpl
aas
jno
sbb
bound
push
insb
mov
es
fisubl
lods
in
std
and
popf
jl
xor
jg
and
xchg
out
imul
push
test
push
lcall
adc
pop
or
into
shl
pop
push
movsl
inc
hlt
cwtl
rclb
movsb
aad
xchg
sub
out
in
fildll
xchg
insl
out
fistps
daa
xor
dec
cli
das
push
and
int3
getsec
ja
push
lret
lret
adc
rclb
or
imul
enter
xchg
mov
incb
test
or
out
ret
dec
push
scas
and
mov
stos
adc
and
arpl
mov
bound
test
ljmp
xor
push
pop
mov
mov
jae
insl
bound
and
or
pop
divb
mov
inc
testb
cmp
pushf
push
jecxz
jg
jb
push
jecxz
out
jo
cwtl
cs
lods
aas
les
into
fildll
out
mov
daa
testb
inc
jae
out
xor
fs
ja
cli
lret
repnz
add
xor
push
mov
pop
dec
mov
jnp
enter
andl
std
imul
mov
fs
xor
pop
outsb
mov
das
scas
mov
faddl
leave
out
andl
repz
ds
inc
sarw
pop
movsb
pop
and
movsl
jmp
repnz
ret
shrl
or
mov
push
out
push
sbb
rorb
pushf
int
add
jbe
sbb
cmp
inc
in
adc
cmp
sbb
mov
testb
dec
inc
sahf
ret
lret
inc
jge
in
shrl
sbb
out
push
pushf
lret
shl
mov
xabort
cld
mov
push
scas
out
pop
ficoms
cli
lret
in
sbb
bnd
lea
test
test
loopne
add
mov
or
sbb
jp
dec
jbe
pop
mov
pop
cli
js
bound
iret
sahf
les
ds
js
add
dec
stc
and
enter
call
pop
enter
popf
inc
fcoml
cwtl
adc
cmpsl
pop
push
push
adc
dec
add
addr16
aam
in
hlt
movsl
out
jns
adc
sbb
mov
or
mov
test
stc
jge
test
shl
jae
clc
sbb
es
xchg
fildl
push
in
loopne
js
push
inc
inc
lods
clc
pop
sahf
mov
sub
jle
sbb
mov
lock
add
mov
jae
mov
jg
test
inc
xor
sbbl
iret
lcall
sti
push
gs
sbb
subl
sub
add
and
jmp
in
clc
cmc
rorb
gs
testl
mov
mov
mov
mov
push
hlt
and
in
or
xor
cmp
cmp
loop
jmp
pop
mov
movsb
das
std
jns
lods
mov
adc
add
bsf
ret
sub
fwait
push
out
xor
jge
mov
push
xor
cmp
insl
sbb
ficoms
sub
mov
xor
je
jbe
stos
mov
sub
add
data16
out
sub
xchg
popf
jmp
shr
or
xchg
cmpsl
adc
or
sahf
sbb
pcmpeqb
call
sub
pop
fwait
or
ds
jae
loope
mov
push
xor
jl
fwait
and
mov
dec
in
lcall
data16
out
sub
ret
lahf
repnz
sub
or
or
subb
jmp
mov
ret
dec
push
fimull
sti
ret
cmp
insb
std
fisubs
lcall
testb
xlat
fistl
lock
sbb
cs
test
mov
xor
lea
je
bnd
dec
aad
lcall
fwait
cmc
adc
pop
iret
popa
xchg
pusha
jb
inc
lock
dec
inc
mov
pop
negl
jl
aad
add
and
xchg
aam
outsl
or
fnsave
loopne
mov
test
or
pusha
dec
lods
xchg
dec
fs
xchg
shll
fsubrp
mov
int
gs
mov
pop
sub
sub
jmp
push
filds
cltd
sbb
jbe
inc
out
cmpsl
cmp
arpl
stos
repnz
ljmp
or
cmp
data16
inc
ret
decl
jg
mov
adc
or
insb
dec
insb
sahf
jae
mov
int
fadd
cmp
mov
cli
jle
xor
xchg
sbb
mov
cmp
dec
lret
mov
mov
mov
inc
enter
test
inc
sbb
out
in
mov
and
jle
in
cmp
mov
je
gs
inc
les
lods
push
data16
inc
xor
in
pop
cmp
cmpsl
xchg
ss
and
popa
jge
mov
das
fnstenv
sub
jle
lret
clc
stc
xor
jp
push
out
xor
mov
mov
ljmp
mov
mov
jnp
pop
sub
pusha
xchg
push
mov
cli
aad
xchg
andb
cmpsb
mov
pop
in
inc
mov
jnp
push
push
xlat
cmp
mov
cli
movsb
cmp
mov
insb
mov
negb
push
mov
inc
lahf
cmc
fistpl
shrl
clc
scas
inc
movsb
scas
cmp
sbb
ljmp
aam
ljmp
mov
les
out
ror
mov
push
jg
sub
iret
mov
sbbl
pop
fsubrp
lods
pop
and
dec
lret
mov
sti
dec
cmc
mov
stc
test
cmp
adc
xchg
xchg
jno
jle
iret
lret
das
xorb
pusha
pop
ss
sbb
inc
lret
mov
std
adc
out
push
outsb
pushf
cmpsl
cmpsb
popf
pop
fbstp
outsl
dec
icebp
int
and
loope
mov
scas
out
and
inc
pop
xor
or
clc
mov
ret
sub
sbb
jne
jnp
mov
xor
sbb
les
cmp
adc
jmp
dec
xchg
lock
sbb
lret
popa
testb
mov
jecxz
scas
sub
loopne
push
scas
out
jg
sub
inc
in
sub
imul
mov
xchg
push
lahf
push
ljmp
pop
cld
fbld
aad
mov
and
mov
int3
xor
inc
mov
jbe
mov
daa
stc
inc
cmp
add
dec
cmpsl
mov
repz
jmp
icebp
sub
or
in
dec
dec
stos
lret
xor
ljmp
int
outsb
cs
push
insl
and
mov
jbe
pop
mov
popf
rolb
sbb
popf
scas
pop
movsb
lods
jo
inc
out
enter
gs
inc
mov
push
and
lea
add
iret
adc
testl
sbb
pusha
dec
imul
cld
or
movsl
sub
mov
sbb
loope
cld
fdivrl
add
sbb
scas
xor
mov
shrl
inc
mov
fnsave
incl
xchg
mov
inc
cmp
adc
cmp
int3
movsl
push
movsl
cmp
fdivp
shll
or
jle
xchg
fwait
xchg
mov
rol
inc
mov
sti
je
stc
xchg
mov
jmp
mov
xchg
or
stc
cwtl
cmpsl
cmpsb
jne
sub
jbe
loope
cmp
adc
add
xchg
dec
cmp
addr16
push
lea
inc
push
jae
jno
push
mov
icebp
jmp
jnp
jl
inc
adc
in
and
sub
inc
scas
jo
std
push
cmp
js
arpl
and
subb
fdivs
fstpt
add
stc
dec
xchg
fcoml
jo
cltd
push
jae
cli
movsl
xchg
adc
out
jmp
cltd
psubw
and
push
int3
cmp
pop
xchg
mov
cmp
or
cltd
mov
inc
add
sbb
lock
outsl
loope
test
adc
das
mov
pusha
out
and
pop
outsl
sbb
sub
push
scas
dec
cmp
and
or
ss
mov
dec
push
mov
adc
outsl
mov
daa
in
push
inc
mov
and
jns
adc
bound
loop
xor
cmp
and
and
xor
mov
rcrb
js
mov
push
adc
mov
int3
mov
iret
popa
cmp
sub
push
mov
insl
sub
test
add
push
cld
jg
pop
push
insl
adc
ret
sub
sub
hlt
mov
lea
mov
outsb
mov
loopne
add
and
cmp
inc
sub
or
pop
xchg
addl
xchg
pop
mov
stos
lret
xor
push
test
test
std
test
pop
stos
lcall
movsl
out
decb
shlb
cs
fiaddl
cmp
push
cmp
aad
sub
out
jno
dec
cmp
or
xchg
push
inc
pop
inc
xchg
push
lahf
movsb
pop
jo
aam
and
mov
push
repz
notb
imul
push
dec
cmp
in
inc
scas
or
push
into
and
add
rol
mulb
imul
push
pop
mov
cmp
xor
lds
aad
pop
mov
mov
ja
xor
jne
jl
push
inc
or
cmc
cmp
out
xchg
or
loopne
xchg
mov
imul
xor
jecxz
es
rcrl
and
cs
in
jnp
mov
and
and
lods
jl
mov
and
jge
sub
cmpsb
cmp
or
in
cmp
dec
scas
jnp
xchg
jmp
rcrb
push
loope
out
adc
add
push
push
xchg
in
push
jne
shrd
icebp
cmp
push
cmc
and
inc
and
imul
fisttps
scas
and
push
out
pushl
daa
cmp
push
or
ret
adc
lea
xor
shll
scas
movsl
adc
and
call
cmp
mov
out
xor
sbb
inc
les
jae
dec
cltd
lods
push
mov
jo
aad
mov
das
ret
mov
popfw
stos
and
adc
fistpll
cmpsl
inc
out
sbb
pop
fisttpl
dec
loope
add
out
sub
ja
fbld
mov
pop
lds
int3
imul
fnstenv
xor
repz
add
cwtl
shrl
das
es
subb
imul
cmp
insb
adc
loope
mov
lret
and
testl
jae
or
add
mov
jmp
aaa
jns
cli
stc
inc
dec
test
daa
mov
and
adc
xchg
xor
push
jo
mov
pop
push
fdivrl
pop
jg
mov
jmp
push
outsb
sbb
cld
testl
lods
jbe
mov
lret
mov
push
popf
jbe
into
fldl
dec
icebp
add
stos
xchg
int3
dec
setp
cmpsl
sbbb
or
mov
ljmp
sbb
idiv
jne
adc
jl
das
fildl
out
push
lods
cmp
mov
lcall
xchg
mov
ret
jb
jg
mov
iret
dec
mov
sbb
ret
adcl
push
or
outsl
ss
pop
dec
adc
push
ja
mov
adc
xchg
push
rclb
loope
sbbb
repz
jne
arpl
out
jno
daa
arpl
cmp
shr
sub
pop
jnp
ffree
rclb
scas
int
pop
and
push
dec
loope
mov
std
sahf
gs
pushf
xor
testb
stc
xchg
dec
jmp
pop
sahf
xchg
or
inc
adc
out
sub
into
mov
aas
pop
xchg
jnp
and
fwait
lea
aaa
call
xor
mov
lds
test
mov
mov
mov
cli
lods
popa
loopne
push
rorb
cmp
and
push
jecxz
rorl
sub
jns
jne
push
pop
int
or
jns
xor
inc
adc
bound
loop
mov
test
add
insb
and
ret
ds
pop
hlt
jecxz
jl
fincstp
lea
mov
lods
std
adc
cmc
jno
lods
mov
ficomps
cli
jge
dec
outsb
aaa
lahf
push
xchg
xlat
outsl
push
stos
xor
fcmovbe
shrl
dec
repnz
lock
inc
shrb
or
mov
stos
inc
lea
mov
fimull
je
ret
aam
push
xor
mov
lahf
scas
adc
popl
jb
add
ja
or
cmp
sbb
mov
in
xchg
inc
inc
fistl
inc
pop
inc
in
pushf
and
mov
jbe
jns
scas
inc
sbb
les
inc
sub
xchg
add
xchg
shr
mov
cmp
lret
in
xchg
stos
repnz
loopne
jbe
fs
push
aaa
cmovb
mov
xor
or
mov
in
xor
out
mov
push
adcl
add
xor
mov
jbe
pusha
dec
adc
bound
test
pop
sub
repz
inc
jp
pop
pushl
xchg
pop
mov
sub
add
aaa
sbb
xchg
in
cmp
cmp
mov
into
push
mov
repnz
in
cmp
jb
mov
cs
cmpsl
pop
xor
cli
jp
cmp
inc
stc
xchg
sti
int
aaa
lret
mov
mov
push
outsl
dec
and
pushf
and
pop
mov
std
adc
sbb
lods
mov
mov
mov
fst
xor
xor
int
or
stos
popf
movb
jo
lahf
cli
daa
rolb
mov
pop
cmc
popa
imulb
in
lahf
loope
enter
fcoml
enter
sub
fcomps
mov
scas
outsb
orb
push
fimuls
adc
mov
ja
add
imul
aaa
call
add
ja
inc
add
mov
jmp
xor
sub
sub
pushf
jecxz
cli
xchg
adc
shll
xchg
add
scas
or
xor
pushf
inc
mov
cmp
mov
loop
shrl
xchg
movsb
sahf
lods
cmp
lds
cmc
cmp
sub
cmp
ss
push
xchg
clc
shrl
pop
xchg
mov
pusha
lahf
js
mov
jno
cli
add
aas
jmp
shll
out
movsb
lods
jg
int
mov
mov
ljmp
xlat
movsb
nop
js
jb
xchg
ss
push
lods
ret
fwait
and
fs
push
push
inc
jne
xor
pop
loope,pn
out
and
das
call
in
pop
mov
push
xchg
pusha
cmc
push
lock
fwait
pop
rolb
lock
sub
ja
clc
icebp
cmc
divb
hlt
lods
icebp
push
dec
and
ret
lock
into
pop
js
jecxz
stos
jmp
aas
clc
cmp
das
mov
mov
mov
icebp
pop
adc
int3
push
xchg
fdivrs
jbe
shr
mov
inc
gs
stc
or
test
mov
and
cwtl
dec
add
jnp
fisubrl
jmp
icebp
push
scas
lds
jle
xlat
inc
sub
xor
std
sub
push
lods
push
cmpsb
pop
cmp
push
and
sbb
popa
js
stos
fistps
inc
xor
test
xorb
pop
sbb
add
movb
adc
or
cmp
push
push
in
mov
es
lret
ret
sarl
and
and
push
mov
mov
cmp
cld
sbb
mov
cmp
jo
cmove
add
xor
pop
dec
insl
or
push
ja
sub
lods
aam
jne
loop
and
pop
sub
mov
into
jp
outsb
push
dec
inc
inc
rcll
mov
push
in
test
cmp
xchg
push
dec
xchg
xor
cld
ja
push
jns
mov
mov
test
sbb
out
imul
or
out
lea
sub
mov
pop
xlat
sbb
xor
clc
sub
sbb
cmp
inc
or
pop
test
sbb
out
pop
xor
pop
lcall
insb
cltd
inc
push
xchg
ror
xchg
xor
dec
inc
and
pop
pop
jae
jl
push
jbe
ljmp
pop
sbb
mov
mov
pop
repz
jbe
int
js
orl
mov
in
mov
sti
or
test
pusha
pop
xchg
mov
sbb
jecxz
orps
jl
add
aad
mov
xchg
cmp
cli
push
sbb
subl
clc
out
add
fs
adc
lahf
mov
test
in
push
movb
jl
push
inc
idivb
push
dec
cwtl
pop
loopne
mov
iret
and
mov
dec
mov
and
inc
movsb
fbstp
adc
xchg
inc
mov
ret
jne
popf
mov
mov
es
cmp
cmpsl
lahf
inc
aam
xor
pushf
jmp
push
in
lock
add
mov
outsl
sbb
mov
sahf
sub
push
push
mov
inc
ljmp
jl
push
fldcw
dec
inc
scas
mov
insb
test
aaa
and
leave
push
and
dec
mov
movsl
scas
jg
gs
outsl
push
test
mov
lock
std
cmp
mov
divb
enter
sbb
imul
cwtl
fdivrl
mov
mov
rcrb
idiv
pop
adc
mov
ss
push
mov
mov
and
mov
pop
js
xchg
xchg
repnz
fcoml
dec
mov
jns
leave
test
inc
mov
jmp
mov
or
rclb
icebp
mov
repz
int3
jecxz
repnz
data16
repz
lods
sbb
mov
imul
cmp
idivb
add
pop
dec
movsl
in
xchg
dec
inc
and
add
mov
leave
repnz
aad
mov
scas
push
mov
sbb
jmp
or
scas
sbbb
and
jno
roll
js
bound
cmp
mov
mov
mov
mov
add
outsb
pop
nop
sbbb
push
push
lahf
cmpsl
sub
push
imul
or
out
cmp
int3
push
mov
sbb
inc
inc
xchg
mov
pop
int
jecxz
jle
xchg
fmuls
ret
enter
and
xchg
mov
repnz
pop
jle
jmp
push
jp
outsl
repz
enter
xchg
add
test
adc
xor
inc
sub
dec
ret
mov
sti
popl
enter
sbb
jnp
es
cwtl
insb
adc
mov
pop
cmp
sbb
and
movsb
scas
xchg
mov
xor
loop
push
adc
push
cwtl
outsb
stos
sbb
mov
dec
xor
enter
jne
loope
pop
jle
out
repz
fsubs
insb
sbb
inc
mov
lret
push
adc
lock
fdivp
ficoms
jb
mov
jl
add
mov
imul
dec
xchg
out
mov
pop
addb
mov
js
clc
and
and
mov
xchg
sbb
mov
and
movsb
cmp
dec
icebp
sbb
out
push
cmp
mov
dec
into
adc
loopne
sbb
xchg
mov
jo
xor
cmp
nop
loop
lret
sti
js
dec
mov
mov
lcall
jge
popf
pop
sti
and
fcoml
ret
jb,pt
xor
std
mov
fcmovnb
mov
int3
loope
sub
xor
clc
std
adc
out
lahf
and
std
sub
lcall
pop
cmp
hlt
and
or
or
cli
divb
test
pop
fs
mov
imul
imul
stc
or
daa
mov
call
sbb
dec
ljmp
ss
cmc
mov
ja
sub
cld
cmp
mov
jnp
cli
add
scas
pop
shll
test
and
xor
imul
jae
jg
cs
addr16
mov
jg
inc
lds
cmpb
sbb
and
adc
or
das
shll
cmp
jns
xor
push
rclb
lahf
popf
mov
imul
xchg
jns
mov
test
jecxz
mov
sub
mov
xchg
jo
cltd
sub
lcall
cmp
hlt
sbb
lcall
mov
or
xchg
ret
sarb
xlat
mov
mov
sbb
jge
enter
cmc
leave
lret
push
rcr
pusha
inc
cmp
add
xor
aad
push
rcrl
mov
xor
ja
in
mov
sti
sbb
dec
cmpb
lea
sbb
mov
bound
mov
scas
enter
inc
fistpll
pop
xchg
pop
cmpsb
pop
lods
mov
mov
out
xchg
dec
lret
aaa
sub
and
xchg
mov
ja
jno
lods
push
les
jg
pop
imul
in
cltd
adc
stos
mov
and
lock
dec
or
fwait
pmulhuw
mov
rcrb
not
xchg
int
imul
or
xor
jb
mov
cltd
mov
mov
jnp
jp
pop
test
sbb
mov
pop
xchg
repnz
popa
push
jb
cmpsl
add
lds
xorb
nop
loop
stc
lds
cmp
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
lds
bound
pop
bound
push
jge
xchg
add
sarl
pop
push
orb
js
outsb
test
je
adc
daa
dec
dec
push
inc
jo
ret
dec
mov
fs
loopne
lahf
shlb
cli
push
imul
arpl
pop
mov
jl
popa
sbbl
outsb
mov
int
jp
into
mov
in
mov
hlt
mov
xchg
in
int
and
pop
push
shr
iret
clc
push
arpl
mov
xor
ja
test
mov
pop
cmp
push
int3
mov
daa
iret
mov
pop
push
nop
imul
stos
nop
cmp
jns
or
addr16
pop
lcall
xchg
and
mov
pop
add
arpl
xchg
xchg
leave
fstl
stc
gs
adc
std
jmp
sahf
dec
int
orl
cmp
sub
push
push
cmp
pop
or
shlb
sbb
loop
inc
adc
pop
addr16
cld
push
out
cwtl
in
pop
in
daa
lcall
sub
inc
fmuls
xor
nop
jne
aam
xor
aaa
lret
rol
push
adc
dec
push
in
xchg
in
mov
fwait
jmp
xchg
sbb
adc
out
lcall
adc
outsl
nop
add
rorl
xchg
outsl
cmpsb
and
push
daa
int
jmp
push
leave
lcall
mov
pop
add
mov
inc
lahf
xor
cld
imul
xchg
stos
pop
int
push
pop
cli
lds
add
jecxz
and
xor
sub
pop
cwtl
pop
scas
fcom
xchg
popa
test
adc
mov
in
out
stc
popa
jmp
mov
loop
aad
push
imull
push
jb
into
and
sub
stc
adc
fidivl
push
jmp
mov
and
sbbl
orl
popa
int
js
inc
cmpl
pop
fbld
cmp
dec
and
xchg
test
and
call
xor
cmp
lock
lods
movsl
mov
add
mov
push
in
sti
sahf
xor
add
lods
xor
dec
pop
pop
inc
sub
movsl
out
push
mov
or
xorl
dec
or
fdivl
mov
pop
xlat
roll
or
xchg
sbb
pop
loopne
sub
mov
les
aas
sti
stos
jp
mov
add
inc
outsl
pushf
pop
cmp
fisttpl
fcomp
fcoms
add
pop
and
cmp
or
dec
pop
cltd
imul
cmpsl
lret
mov
cwtl
adc
shrl
xchg
dec
xchg
mov
loopne
xchg
sub
into
and
jmp
push
lods
inc
jge
or
and
and
dec
dec
imul
bound
xchg
sahf
popa
pop
cmp
popa
xchg
mov
mov
pop
mov
popf
sarl
mov
test
mov
jmp
mov
lret
inc
jmp
xchg
xchg
es
add
inc
cmc
jmp
scas
inc
jno
sub
mov
sub
mov
push
jno
push
cmp
nop
xorl
jns
cmp
sub
and
xlat
stc
int
jle
inc
mov
nop
orl
imulb
mov
jns
xchg
lcall
loope
sbb
push
mov
or
loope
add
sbb
addr16
jle
mov
sbb
ljmp
daa
insl
inc
test
xchg
adc
xchg
loopne
sbb
iret
sub
push
leave
test
pop
dec
pop
mov
stc
fwait
pushf
std
inc
fldt
mov
jmp
jmp
and
or
cwtl
add
nop
test
es
ljmp
inc
push
pusha
mov
mov
fsubs
lcall
stc
pop
add
ljmp
xor
pop
sbb
into
fs
or
mov
lock
push
popa
pop
lret
pusha
pushf
cwtl
lcall
stos
nop
cli
fcmovbe
popa
cmp
inc
js
push
daa
mov
push
dec
jle
adc
push
adc
mov
push
fmuls
sub
mov
jg
arpl
mov
add
insb
cwtl
and
xchg
iret
lock
and
sbb
jp
jb
sub
mov
shl
ds
repnz
popf
popa
stos
add
sarl
scas
into
push
loopne
scas
stos
pop
push
lret
dec
aaa
cwtl
inc
sbb
xchg
and
jne
inc
and
xchg
add
mov
ret
addr16
inc
inc
stos
push
dec
xlat
and
es
cmp
stc
iret
faddl
fisubl
xchg
arpl
shrl
xchg
and
or
popa
daa
sbb
out
and
or
cmpsl
xchg
lods
xor
out
sub
pop
xor
add
notb
jmp
xor
sbb
push
sbb
add
arpl
push
push
in
pop
add
push
mov
or
sbb
fistps
outsb
sub
cmp
in
mov
fsubrs
aaa
loop
insl
icebp
cmp
push
sub
add
or
sub
xchg
ret
push
sub
push
mov
imul
xchg
jae
jge
push
gs
nop
xor
or
cli
test
pop
dec
xor
sbb
dec
out
mov
inc
rcll
pop
lds
mov
std
loope
mov
movsb
rsqrtps
fs
jbe
mov
mov
cmp
xlat
sub
sbb
sbb
sbb
sbb
cmc
stc
neg
xchg
repnz
pushf
lcall
xor
inc
fwait
add
add
xchg
fnstcw
pop
add
test
xor
fldcw
sub
aaa
mov
adc
stos
push
ljmp
hlt
shrl
lock
dec
jns
fidivl
push
sti
xchg
in
test
jg
jge
xchg
arpl
icebp
mov
inc
ljmp
gs
clc
dec
jo
stos
mov
lret
push
stos
mov
xchg
push
loope
div
sahf
dec
call
repz
dec
or
mov
sbb
inc
push
insb
adc
lock
xchg
int3
sti
outsb
in
out
daa
in
mov
jb
scas
pop
xor
movsb
test
scas
sbb
mov
inc
icebp
lret
pop
mov
mov
ret
sbb
sbb
fadd
push
dec
dec
ret
jns
scas
adc
xchg
sbb
cmpsl
cs
fistpl
xchg
add
jg
repz
test
sti
das
lea
push
lods
dec
clc
mov
and
arpl
nop
jnp
in
push
sub
mov
retw
push
stos
push
add
jg
idivb
xchg
dec
mov
aad
dec
and
cmp
add
repnz
scas
xchg
sub
jo
fdivl
lock
mov
mov
cmp
dec
sbb
jb
fcmovb
das
in
in
test
mov
cmp
xor
repz
mov
in
lret
add
insl
sbb
cwtl
lcall
push
mov
push
sbb
push
in
ljmp
aaa
mov
in
lahf
cmpb
out
sub
jo
or
mov
mov
rolb
add
mov
out
ret
enter
fisttpl
adc
add
imul
aas
jmp
in
stos
movsb
xchg
fdivl
mov
add
mull
mov
push
push
iret
scas
push
imul
lea
mov
and
adc
cmpsl
or
inc
inc
aad
jns
add
push
inc
mov
loop
cmpsb
mov
std
vcvtps2pd
cs
mov
lods
sbb
xor
inc
popf
bound
outsb
sub
add
scas
popf
data16
arpl
xorl
jae
ljmp
test
sbb
mov
dec
add
mov
clc
xchg
xor
inc
cmp
bound
and
jbe
mov
daa
ljmp
push
mov
pop
sub
test
pmaxsw
pop
jno
push
push
mov
mov
jmp
xchg
in
movb
xlat
mov
mov
into
ret
adc
pop
lcall
pop
ret
cmpsb
popa
push
addr16
test
push
add
xor
push
and
push
leave
add
cmp
push
pop
jne
ljmp
lea
xchg
mov
loop
add
add
dec
out
xor
insl
push
xchg
aaa
setne
cwtl
add
movsl
popa
or
cmp
dec
xchg
push
add
cwtl
test
out
push
inc
xchg
adc
xor
shll
add
out
pop
xchg
into
mov
sub
ljmp
addr16
cmp
in
inc
fs
stc
push
rcrb
push
sbb
pop
mov
test
pop
push
jb
xor
inc
mov
and
mov
std
test
or
push
fs
pop
ffreep
pop
shlb
push
es
sbbb
mov
push
icebp
inc
rcll
insb
adc
push
je
ljmp
sub
dec
mov
mov
cmp
std
std
xor
gs
cmpsb
inc
inc
push
les
push
and
bound
dec
jl
icebp
sar
jne
xchg
movd
or
jge
les
shlb
inc
movsb
pop
mov
add
add
out
fsqrt
push
xchg
jno
jle
push
pop
push
cld
xchg
sub
jp
lahf
in
cltd
pop
int
fiadds
mov
jp
ja
dec
inc
lods
out
mov
mov
cmp
ret
add
jb
addr16
sbb
push
rclb
sahf
popf
mov
ret
pop
insb
xchg
in
add
adc
mov
xchg
loope
test
fildll
and
xchg
stc
adc
jmp
ss
jle
push
pop
jecxz
pusha
jp
fsts
mov
mov
lods
dec
jne
push
pushf
mov
imul
cmp
lods
testb
addr16
insb
shrb
and
pop
shlb
ljmp
stos
pop
leave
add
adc
inc
mov
in
shrb
pop
movsl
cli
pop
stos
stos
pop
or
mov
mov
xchg
imul
xor
lds
sar
xchg
bound
out
cli
sbb
push
stos
xchg
mov
inc
dec
cmpsl
mov
xor
insl
hlt
jne
dec
lcall
lods
lret
stc
xchg
cmpsb
add
push
push
push
push
in
out
pop
add
xor
jno
decb
test
sbb
lea
add
mov
lret
rorl
xchg
es
mov
test
mov
jno
xchg
lcall
dec
and
daa
ret
loopne
jge
clc
xor
ss
pop
mov
fwait
andb
push
loopne
aas
cld
lds
pop
int3
js
mov
mov
lret
into
add
nop
stc
jne
inc
ret
arpl
and
adc
lcall
sbbl
mov
daa
ret
pop
add
pusha
xlat
ficoms
dec
dec
xor
push
inc
outsb
fiaddl
fstpt
test
jecxz
adc
mov
ret
in
cmp
or
inc
add
jnp
loop
or
sub
sub
xchg
and
dec
bnd
icebp
insl
xor
sbb
arpl
clc
ja
daa
dec
jmp
xchg
out
or
jnp
ds
in
in
cli
fdivl
push
lods
scas
pusha
inc
nop
jl
pop
sub
int3
fs
in
add
inc
and
jmp
xchg
xchg
xchg
jne
outsl
xor
iret
dec
testb
mov
xchg
outsb
fidivl
fwait
bswap
arpl
out
dec
push
hlt
add
mov
out
and
nop
dec
dec
in
cmpb
xchg
adc
cs
shrb
test
scas
pushf
lods
push
xor
fdivl
pop
or
sbbb
loopne
push
jne
xor
loopne
mov
sti
popf
daa
sub
lahf
int
sti
push
push
push
cmp
adc
out
ret
mov
push
adc
test
mov
jae
sbb
sarb
xor
hlt
fiadds
mov
cmp
sti
mov
dec
cld
mov
adc
xor
aam
push
cltd
adc
push
push
sub
xchg
fdivrl
and
push
add
push
lret
mov
lds
xor
inc
push
in
dec
or
push
lea
imul
lods
or
stos
es
ficoml
popf
shll
or
movsb
pop
push
mov
aaa
pop
mov
xchg
sbb
xchg
in
in
fdivl
repz
or
aas
adc
sbb
inc
cmp
insb
mov
inc
popa
loop
sbb
xchg
pushf
mov
andl
sbb
lea
imul
add
or
or
xor
xchg
adc
out
fistpll
pop
inc
mov
pop
jecxz
or
jno
adc
repnz
push
mov
xchg
repnz
xor
xchg
mov
mov
add
push
pop
scas
pop
insb
mov
xor
jo
sbb
mov
lret
test
cmc
and
in
cmp
inc
inc
leave
popa
xor
and
int3
fldenv
mov
mov
cmpb
jo
lret
jnp
push
dec
pushf
xor
test
mov
mov
pop
sbb
xor
fnstenv
jmp
mov
mov
out
jne
leave
aaa
xor
mov
mov
in
lock
mov
scas
mov
xor
dec
lea
lret
inc
in
inc
arpl
adc
outsb
ljmp
push
bound
ret
cmpsb
cmpsb
sbb
rcr
lds
dec
insb
jl
iret
mov
dec
jae
scas
pop
push
aam
or
or
push
xchg
pushf
insl
dec
add
xchg
sub
jmp
jnp
pop
push
shrb
shll
ds
aam
sbbl
mov
and
in
sbb
arpl
mov
add
or
loopne
int3
adc
das
lds
cmp
mov
xor
mov
cmp
mov
je
sub
mov
testb
pop
vcomisd
mov
jmp
rorl
imul
pop
call
or
stc
lret
shr
out
ja
or
testb
mov
inc
jl
fisubrs
pop
push
fwait
stos
and
test
aaa
and
xchg
out
sbb
dec
jae
jle
push
lret
pushf
paddw
lods
arpl
out
pop
rcrl
push
mov
jle
push
outsl
and
addr16
sub
dec
repnz
repz
mov
xchg
lds
inc
mov
xlat
inc
pop
fwait
mov
xchg
lcall
adc
test
insl
and
insl
lcall
imul
pop
popa
data16
fnsave
aaa
adc
iret
lds
xor
xchg
jg
sbb
sub
sub
push
mov
cmp
iret
inc
sbb
jo
dec
and
inc
or
jle,pn
fnstsw
push
cltd
xchg
jg
and
out
cld
mov
pop
cli
inc
mov
faddp
xchg
inc
xor
outsl
or
test
jecxz
pusha
popf
movsb
xor
inc
push
jge
xor
jp
adc
mov
in
pop
pop
cmc
cmpsl
jecxz
mov
xor
pop
cwtl
popa
xchg
push
dec
into
mov
inc
sbb
cmp
inc
mov
stos
ret
lahf
fstl
pop
scas
pop
in
mov
xor
mov
dec
es
jmp
mov
or
xor
std
xor
shl
adc
xchg
cmp
push
push
andl
jg
xor
fs
iret
gs
adc
popf
mov
and
fisttps
int3
rorb
shrl
cmpsb
adc
xchg
xchg
mov
pop
sub
cmp
and
lret
add
inc
push
inc
mov
sub
mov
sti
inc
dec
pop
movsb
cmp
ret
pushf
cmpsl
xlat
mov
daa
lahf
pop
sbb
pop
into
fsubrs
test
imulb
inc
cmpl
aaa
jnp
lods
fsincos
loopne
and
daa
xor
pop
pop
sub
lock
and
push
cltd
dec
aam
dec
mov
mov
mov
decb
bound
data16
and
or
adc
sbb
inc
inc
sbb
std
mov
inc
inc
adc
stc
mov
sub
js
mov
push
adc
xor
xchg
dec
sub
imul
add
jbe
test
orb
mov
and
push
pop
es
adc
adc
cli
cmp
push
sub
addr16
adc
ret
mov
mov
pop
pop
inc
test
xchg
lods
xchg
mov
push
mov
jl
sbb
sti
pop
outsl
rcrb
and
bound
call
sub
pop
aam
jecxz
dec
and
jmp
sbb
or
clc
push
jmp
mov
test
inc
inc
les
daa
lcall
gs
dec
popf
arpl
pusha
fiaddl
imul
sahf
movsl
mov
mov
adc
jns
push
dec
xlat
or
xor
movsb
daa
and
fcomps
mov
stc
dec
jge
sub
jge
sub
xor
inc
cwtl
outsb
rcrb
inc
and
clc
jb
jmp
xchg
mov
mov
inc
mov
fdivl
or
fsubs
cmpsl
and
mov
mov
pop
jnp
add
repnz
push
leave
shrl
std
mov
add
repnz
pop
pop
in
inc
test
pop
pop
cltd
xchg
loope
bound
cwtl
jl
pmaddwd
mov
jg
mov
pop
dec
aad
loop
dec
cltd
xor
xor
mov
adc
roll
jle
icebp
lods
pushf
mov
push
or
or
sub
cli
xchg
pop
fcomps
loop
out
test
push
sub
mov
inc
push
pushf
push
jno
sbb
test
pop
lcall
popf
pop
dec
add
mov
sub
sbb
jmp
adc
jg
ret
clc
dec
sbb
test
dec
jl
stos
xchg
or
fldz
or
jge
std
adc
push
mov
ss
inc
mov
insl
sahf
outsl
add
bound
inc
fisttps
test
dec
out
add
cmp
cs
lods
pop
aaa
jp
fidivrl
repnz
xlat
ret
ficompl
sti
xor
fwait
insb
faddl
jle
fdivr
add
int
aad
out
out
iret
outsl
mov
pop
cmp
popa
xlat
loop
sub
push
mov
adc
pandn
pop
std
popa
cmp
push
test
fnstcw
loopne
stos
inc
je
mov
xchg
mov
fisttpl
pusha
jmp
outsb
sub
cmp
jecxz
mov
xchg
sahf
dec
loop
or
sub
aad
scas
dec
xor
pusha
popa
fwait
mov
out
or
ljmp
sub
and
dec
adc
xchg
pop
xor
add
mov
or
push
aaa
divb
movsb
push
stos
in
cmp
adcb
push
ljmp
sub
jle
inc
push
adc
and
inc
into
movsb
inc
adc
stc
sbb
lret
scas
push
hlt
and
aas
jnp
loopne
out
das
out
and
mov
sbb
lret
ret
and
fisttpl
testl
es
jno
ja
pop
pop
sub
inc
xchg
daa
cmp
mov
push
fldcw
cltd
cmpsb
xchg
jmp
into
dec
ss
xchg
enter
das
add
pand
jge
dec
push
ret
inc
insb
xchg
insl
cmpb
ds
into
push
push
enter
pushf
iret
dec
rclb
enter
outsl
xor
addl
movsb
adc
lret
dec
sub
in
adc
mov
jle
push
pushf
into
xchg
ret
int
shl
je
bound
ret
aad
sti
inc
mov
fcmovu
mov
push
add
shll
dec
sbb
stc
push
push
or
aaa
xor
or
jp
imul
icebp
and
cmp
ja
lcall
inc
test
fcmovu
or
cmp
rcll
pop
xchg
jbe
lds
mov
in
or
sti
bound
inc
addr16
sub
out
test
rorl
cmp
xor
repz
rcrb
push
cli
mov
fdivs
mov
lods
mov
sarb
pop
enter
pop
xchg
adc
sub
adc
fildl
push
xchg
inc
data16
stos
orl
mov
adc
aaa
icebp
lods
insb
scas
hlt
mov
push
xorl
and
aas
movsb
das
arpl
mov
lret
popa
inc
int3
pop
sbb
and
add
and
ja
mov
mov
mov
pop
cmpl
rcrb
push
cltd
loopne
sti
jnp
mov
pop
hlt
insb
decb
pusha
movsb
leave
insb
adc
std
sbb
jno
pop
pop
addl
data16
push
pusha
aas
repnz
cmp
push
jmp
sbb
xchg
pop
xor
mov
movsb
jmp
xchg
js
out
std
sub
mov
lret
xor
push
sub
loopne
inc
xchg
lods
dec
or
jmp
test
stos
pop
scas
bound
into
aam
shll
lahf
push
out
cmpsl
pushf
add
mov
fisubrl
loop
enter
loop
and
les
fwait
lret
mov
mov
push
inc
mov
scas
outsb
pop
out
xor
lds
rcrb
xchg
or
sub
aas
jmp
mov
sarl
sub
and
add
mov
rolb
and
jmp
cmc
cld
sahf
sub
imul
out
ret
sbb
and
dec
add
imulb
test
scas
sub
fwait
stos
iret
movsb
xchg
nop
and
cmpsb
insl
and
cmpsb
lods
rorb
test
out
outsb
imul
dec
ret
cmc
inc
mov
jns
pop
imul
imul
cltd
mov
mov
and
push
out
int
mov
cmp
dec
xor
pop
aaa
aam
and
outsl
add
or
call
mov
and
dec
inc
xchg
xor
mov
xchg
fcompl
in
scas
pusha
dec
loop
rcr
fdivrs
jb
and
shlb
mov
mov
test
jb
sbb
sbb
push
push
and
xor
test
aam
out
out
in
gs
inc
adc
mov
test
testl
fmuls
xor
ds
roll
sbb
popa
or
iret
iret
cmp
mov
popaw
in
call
mov
loop
pusha
push
push
jg
idiv
mov
not
js
lret
imul
lcall
mov
adc
pop
mov
addb
repz
insb
dec
xchg
fwait
inc
sahf
mov
jb
aam
jl
push
fs
out
dec
sub
mov
add
adc
sub
pop
mov
mov
clc
pushf
lahf
mov
xchg
add
fimuls
add
push
cmc
mov
cmp
adc
aam
push
xor
aas
mov
leave
mov
out
into
cltd
iret
mov
out
jae
jns
les
stos
add
fisubrl
imul
dec
xchg
mov
jne
fs
aad
in
sbb
adc
ss
pusha
push
jmp
movsl
dec
mov
ficoml
out
jno
jecxz
add
xchg
jp
rcll
out
push
test
outsb
xlat
xchg
xor
mov
pop
mov
movsl
lods
inc
subb
js
jle
mov
push
cmp
fs
pop
pop
imul
inc
stos
jno
adc
pop
mov
test
sub
in
jae
pop
sub
data16
std
fidivs
cmp
add
lea
xchg
dec
arpl
inc
test
sub
mov
jmp
daa
and
add
mov
in
pop
repnz
iret
xor
mov
push
fcoms
rorb
sbb
dec
in
iret
aas
mov
test
stos
lock
outsb
popf
clc
in
xor
bound
jne
or
jbe
roll
into
pop
lea
in
fidivrs
mov
lods
add
jb
pop
xchg
xor
decl
jp
jle
jb
rcrb
and
mov
fwait
or
inc
and
aam
cmp
sbb
and
xor
mov
or
sub
dec
mov
xchg
push
xchg
sub
lahf
movsl
push
dec
mov
inc
sbb
push
sarb
lea
sub
pop
sahf
inc
movsb
sbb
jnp
mov
popf
jno
popa
ret
mov
aam
enter
sti
std
test
sbb
je
adc
or
or
cmp
out
mov
add
xchg
lret
sub
pushf
xor
xchg
lea
mov
xchg
jno
and
mov
pop
inc
enter
and
push
or
inc
clc
adc
add
hlt
hlt
mov
jl
out
shll
mov
dec
jg
push
fsts
inc
mov
mov
test
loop
pop
mov
pop
mov
in
mov
fists
xor
mov
pop
clc
fistps
loope
cld
mov
bswap
out
into
loop
pop
or
mov
xchg
cmp
stc
pop
mov
add
mov
dec
out
xchg
mov
cmpsl
or
mov
stos
into
push
pop
mov
sarl
jo
add
xchg
push
shll
pop
adc
inc
popa
dec
sub
push
push
sbbl
icebp
push
and
test
mov
adc
inc
push
test
adc
gs
push
ss
pop
int3
push
iret
push
hlt
test
nop
insl
shll
mov
push
or
push
and
mov
pop
xor
addb
adc
inc
fcom
filds
sbb
add
mov
insb
jmp
xchg
call
sbb
xor
add
mov
arpl
fwait
enter
fldl
jle
pop
mov
inc
gs
pop
sub
mov
dec
lds
loope
mov
xchg
hlt
xchg
push
sbbl
cmp
fwait
outsb
xchg
ret
movsl
addr16
out
inc
addb
mov
mov
cltd
lret
outsl
xlat
cmp
sahf
push
dec
movsb
cmp
cltd
popa
imul
clc
sub
loop
in
dec
std
fs
dec
daa
mov
cmp
fsubrs
sub
rorl
pop
lock
lock
lret
dec
pop
pop
pushf
jbe
int
int
jle
pop
ljmp
rolb
aas
jae
rcl
adc
lods
and
cmpsb
lods
shll
in
aad
mov
dec
sub
add
stc
repnz
clc
xor
loope
mov
cmpsl
xchg
cmp
push
inc
je
fwait
cltd
adc
lahf
jno
push
mov
mov
pop
pop
or
aad
xchg
outsl
das
mov
push
and
hlt
jmp
in
and
pusha
int
iret
cmp
jmp
jp
imul
test
pop
std
pop
sbb
push
stc
in
mov
ds
inc
das
cmp
adc
add
ds
adc
bound
push
aas
dec
sub
jbe
mov
add
or
sarb
lret
into
rcll
rclb
leave
xchg
lret
adc
dec
pop
adc
mov
test
imul
sbb
test
out
adc
std
adc
ret
hlt
enter
lahf
xor
das
nop
push
in
test
ja
aam
sub
cmpsb
jecxz
add
pop
in
pop
pop
shrl
ds
and
roll
xchg
aas
jne
xor
xchg
lds
cld
xor
pusha
push
dec
sbb
ds
aas
xor
inc
sbb
shl
movsl
push
jns
ss
in
rorb
xchg
sti
lods
shll
imul
xchg
sbb
dec
push
nop
sbb
cmpb
into
push
cmpsl
jb
push
lods
fnstenv
inc
and
bound
aad
mov
push
mov
loope
flds
adc
cmp
push
mov
mov
push
pop
xchg
jae
outsb
sbb
or
rcrl
jae
in
cmp
or
sub
xchg
pop
pop
add
xchg
mov
scas
lret
aaa
inc
and
or
or
mov
in
mov
sbb
push
in
add
std
fnstenv
jbe
fs
insl
test
in
dec
jo
cmp
pop
cmpsl
aaa
xlat
and
int3
ljmp
lcall
pusha
in
mov
xchg
bound
push
in
mov
xor
sbb
cs
sbb
fsubl
leave
in
sub
cld
cmp
scas
and
popa
ret
cwtl
xchg
xchg
or
ds
je
sti
loopne
inc
dec
pop
bnd
popa
xchg
pop
xchg
cltd
rcrb
jb
lahf
push
ljmp
ficoml
xchg
int
addr16
nop
mov
lock
mov
out
mov
loop
inc
jp
mov
and
mov
out
adc
ror
es
aad
cs
bnd
add
cmp
clc
shl
sbb
pop
xchg
jnp
icebp
and
das
in
xchg
dec
sahf
inc
ss
inc
pushf
icebp
push
jb
pop
es
mov
pop
cltd
or
cmpsb
decb
into
mov
in
addl
pop
mov
adcl
fdivrp
push
imul
mov
inc
mov
xchg
fsubl
mov
push
test
and
xor
into
aas
repnz
push
fbld
stc
shlb
and
cmp
pop
and
cmpsl
movsb
ret
adcb
je
cld
pop
xchg
ret
shrb
es
push
mov
lods
jp
mov
cld
sub
pop
stc
test
iret
aaa
mov
std
std
jp
dec
gs
adc
dec
fildl
out
pop
sub
jbe
test
popa
mov
fnsave
leave
aam
inc
inc
icebp
sbb
and
inc
sbb
push
push
push
and
inc
inc
or
sub
jo
ffreep
mov
shr
cmp
scas
cmp
aad
pop
cmp
mov
mov
cmc
lcall
add
xchg
push
icebp
shlb
xor
mov
sarb
addr16
sub
imul
daa
inc
sub
or
jecxz
ja
inc
psubsb
or
push
lcall
push
cmpsl
jae
jg
push
sub
mov
test
imul
je
xor
cmc
push
dec
inc
cmc
in
loope
in
adc
cli
scas
cmpsb
les
clc
cmpsb
das
lock
or
rolb
divl
push
ret
dec
xchg
fnsave
pop
hlt
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
int
test
imul
pop
bound
mov
stos
orb
xchg
fsubr
jnp
cli
ja
popaw
std
jp
test
stos
sti
mov
cmp
push
xor
mov
inc
repz
pop
mov
pop
add
std
mov
ja
out
fdivl
sbb
das
push
mov
xchg
popf
pop
inc
mov
daa
cmp
dec
cld
xchg
insb
inc
adc
inc
scas
add
xchg
stc
sub
out
leave
addb
pop
cld
shll
pop
inc
xchg
sub
aam
adc
jne
mov
mov
adc
and
loope
or
stc
pop
or
ds
test
push
stos
pop
xorl
fiaddl
push
and
xchg
add
sti
mov
mov
mov
into
push
cmpsb
je
sbb
push
dec
data16
push
pop
jo
adc
mov
sahf
dec
jne
stos
loop
mov
pop
shl
enter
out
loopne
insb
sbb
mov
repnz
push
xchg
ret
daa
push
add
les
mov
int
or
je
mov
mov
data16
mov
push
jb
cmpsb
pop
sti
inc
pop
testb
loop
vphsubwd
and
sbb
mov
pusha
mov
sub
inc
or
shlb
std
mov
push
adc
arpl
fstl
mov
dec
push
xor
push
stos
add
out
jb
cmp
inc
test
out
cld
lcall
add
mov
xchg
mov
shll
or
jbe
pop
or
push
cmc
inc
movsb
pushf
imull
movsb
std
sahf
push
mov
xor
push
loope
dec
xchg
and
sub
fdivrp
test
fisttpll
push
mov
gs
cmc
push
cmp
lock
adc
add
or
insb
sbb
add
shrb
xchg
inc
arpl
cltd
jno
mov
inc
pop
pop
loope
cmc
nop
rcrl
rep
out
fcmovne
call
adc
loop
in
test
inc
mov
scas
or
mov
mov
push
lret
adcl
rcrb
outsl
call
aaa
insl
sarb
popf
mov
xor
or
adc
mov
dec
out
and
push
pop
dec
add
mov
push
xorl
jge
xor
jne
sarb
and
shrl
js
xchg
or
daa
fcompl
stos
mov
into
ficoml
sub
cmp
in
mov
adc
mov
lahf
outsl
in
ss
mov
xor
lods
sti
push
jo
and
cltd
cli
outsb
insb
pushf
cwtl
pop
pop
idivb
leave
sbb
push
adc
add
in
outsb
lcall
pop
iret
pop
inc
scas
repz
inc
add
loop
insb
xchg
pop
push
sub
adc
sbb
xchg
dec
or
dec
mov
sbb
dec
xchg
xor
orb
xor
mov
call
mov
xchg
sbb
in
popa
dec
fs
add
dec
push
and
adc
out
dec
jae
adc
rorl
sbb
xchg
stos
cmc
aad
pop
iret
jbe
jg
sub
aam
arpl
mov
mov
xor
inc
pop
push
stos
push
xchg
imul
sbb
pop
sub
jne
pushl
aas
sar
dec
cmp
push
gs
inc
xchg
out
les
sub
movsl
jecxz
repz
in
dec
mov
xchg
stos
in
mov
mov
jecxz
imul
aas
and
out
fbstp
push
cmp
loopne
inc
orb
push
aaa
ss
popa
popf
loope
and
stc
movsl
sub
push
pusha
into
cmp
xchg
in
rolb
xchg
adc
clc
and
fwait
cmp
xor
inc
mov
jne
add
mov
inc
insb
lret
mov
and
xchg
push
mov
outsb
jle
iret
adc
fstl
movsl
cmpsl
xchg
js
fyl2x
push
pop
fsubl
sbb
sub
xchg
mov
or
inc
sbb
inc
fists
mov
mov
mov
aad
jle
jmp
lret
lock
fsubrl
je
xchg
jecxz
add
ficoms
out
add
mov
mov
call
cld
inc
shlb
xchg
cmpsl
mov
and
std
cld
jns
mov
dec
and
roll
je
js
and
std
sub
fdiv
sbb
dec
xchg
mov
sarb
gs
lock
pop
push
xor
movsl
ljmp
and
leave
adc
dec
iret
inc
mov
sub
cltd
inc
lods
aam
and
mov
cmp
sti
pop
in
push
sbb
cmc
xchg
mov
mov
cwtl
mov
pop
mov
push
xchg
jg
mov
jecxz
cmpsb
mov
mov
and
xchg
icebp
jmp
popf
xor
or
cmpsb
pop
lahf
call
lods
test
fwait
dec
push
aad
sbbl
pusha
push
and
xchg
daa
push
mov
leave
lahf
jge
dec
int
les
cltd
mov
jb
out
jmp
ret
fwait
js
loopne
and
cmp
mov
jle
push
push
dec
sbb
js
jb
sbb
test
xor
addr16
dec
and
movsl
or
push
out
addl
imul
jb
xor
popw
add
pop
or
push
int3
insb
jmp
dec
mov
mov
mov
cli
insl
into
out
insb
adc
sti
mov
push
xchg
sarb
dec
test
repz
into
out
sbb
repnz
inc
or
xchg
idivb
sbb
stos
inc
mov
in
xchg
cmp
shll
jecxz
and
pop
xor
out
adc
jle
insb
test
enter
sahf
and
push
ret
push
mov
ss
or
jb
sub
push
imul
adc
sub
inc
jb
push
out
ds
add
adc
or
or
cmp
sbb
sahf
test
dec
add
int
cwtl
push
xor
pop
rolb
push
pop
lods
or
pop
ret
int
adc
xor
jecxz
es
xchg
mov
pop
pusha
mov
hlt
mov
mov
fstp
xor
mov
insb
repz
or
jno
fstpt
mov
enter
outsl
push
inc
fdivrl
pushf
aad
push
test
pop
inc
imul
inc
es
inc
dec
data16
fistps
pop
ja
dec
adc
fsubs
hlt
sbb
xor
jae
cmp
mov
testb
ja
fistpll
ljmp
pop
or
repnz
lahf
jl
lods
mov
mov
clc
sahf
mov
xchg
aam
inc
lahf
lods
sub
scas
sbb
jb
sub
fnstsw
push
xor
sbb
popa
cmp
xor
and
pop
xor
push
out
mov
imul
test
mov
sub
fcmovnb
les
roll
les
clc
jmp
push
jnp
hlt
je
mov
orb
testb
sub
cmp
push
mov
cli
fdivs
xchg
lahf
dec
inc
fwait
movb
fcmovnb
and
mov
and
leave
idiv
jg
movsb
add
cmpsb
sub
into
int3
push
dec
ja
jnp
arpl
push
mov
lds
pop
sbb
or
stc
mov
sub
pushf
cmc
sarl
jl
stos
pop
cmp
dec
xor
jecxz
shlb
jp
cwtl
call
dec
cmp
cmpsl
sub
push
outsb
push
push
sub
inc
mov
push
pop
out
push
pop
add
jb
aam
push
dec
test
aam
imul
addr16
mov
push
test
sbb
enter
dec
mov
rcrl
mov
inc
sub
pop
mov
gs
xchg
icebp
shll
pop
je
xor
xor
test
std
cld
pop
in
sub
inc
shrb
inc
inc
jmp
cmpsl
mov
cmp
dec
inc
and
imul
cs
insl
add
and
add
xor
icebp
xchg
xchg
in
loop
xchg
push
addr16
mov
xchg
xchg
xchg
pop
pop
cmp
add
xor
rorl
pop
jb
shrb
inc
and
std
shrl
in
jecxz
dec
jno
imul
xchg
jecxz
jmp
cmc
cmp
inc
mov
and
jle
cmp
cmp
stos
mov
adc
sbb
jmp
ja
push
jge
add
lcall
xorb
and
sub
sbb
and
aam
push
add
push
outsb
cmp
jns
test
or
push
stos
pop
jg
mov
mov
movsl
imul
andl
xor
pop
outsl
sub
insb
xor
cmpsb
cli
push
pop
fs
rclb
mov
mov
loope
mov
mov
cmp
cwtl
jecxz
icebp
outsl
mov
add
xchg
ret
in
pop
int
lahf
addl
lock
adc
mov
xor
mov
dec
sbb
rolb
mov
and
inc
mov
cmc
pop
push
adc
and
cmpsl
mov
inc
int
pop
std
adc
xor
inc
jae
lods
hlt
movsl
sbb
xchg
sub
cmp
call
loop
into
sbb
mov
out
data16
je
data16
jns
xchg
add
jnp
out
dec
das
sub
mov
mov
stos
inc
or
fldcw
les
mov
xchg
and
out
repnz
lret
add
pop
aaa
push
jle
das
cwtl
loope
aas
pop
bound
pop
pop
in
lds
pop
mov
aam
ja
or
xchg
cltd
fiadds
fs
jns
out
sub
add
js
jo
ficoml
cli
xor
mov
xchg
sub
aaa
jbe
shll
or
cmp
daa
pop
divl
addr16
loopne
xchg
leave
cs
push
push
movsl
je
call
push
cltd
scas
cwtl
aaa
pop
dec
inc
inc
aam
sbb
pushf
leave
into
and
pop
in
out
push
sbb
pusha
std
cmp
and
in
mov
xor
cmp
mov
add
pop
mov
mov
lret
dec
daa
inc
xchg
push
cwtl
in
mov
fnstsw
outsl
and
addr16
stos
loope
push
xorb
movsb
outsl
fists
mov
pusha
sti
icebp
negl
jb
cmp
cmp
imul
xor
mov
add
push
sti
cli
jecxz
bound
add
adc
sub
adc
mov
sub
jl
inc
xor
add
movsl
jae
leave
imul
pandn
or
push
dec
cmc
fidivrl
iret
cmp
inc
je
mov
pop
sub
cmpsl
mov
out
lret
cs
jp
mov
psrad
cli
cwtl
pop
shlb
pop
and
push
imul
scas
inc
inc
mov
fmull
cs
and
mov
fstpt
out
sbb
jle
xchg
sub
cmpsb
sahf
inc
jbe
dec
insb
or
mov
bound
sub
push
cwtl
out
lods
in
ja
and
inc
pop
mov
xor
xchg
js
pop
cwtl
iret
stos
in
adc
ret
cs
loop
mov
cmp
xlat
int
and
xchg
fsubl
push
enter
add
fidivrs
ss
or
dec
loope
adc
sahf
dec
mov
repz
push
xchg
dec
cld
push
mov
mov
push
xchg
mov
mov
push
sub
pop
adc
call
mov
pushf
stc
insl
jmp
mov
cwtl
sti
icebp
popf
xor
outsl
mov
xchg
cmp
pusha
xlat
fadd
in
sbbb
das
mov
cs
clc
xor
pop
jns
out
jne
jb
xor
pop
stos
lods
dec
dec
cli
lods
cmpsl
fldenv
add
ret
repz
and
jp
das
popf
shr
andb
jmp
mov
pop
cmp
cmp
lcall
ret
ret
push
mov
dec
pushf
lock
insb
mov
adc
pop
das
mov
cltd
xor
out
cli
int3
push
mov
mov
adc
pop
stos
icebp
mov
inc
pop
jle
cmp
rclb
sbb
std
pop
cmp
fstp
adc
lods
jp
mov
jl
xor
push
or
inc
jge
xchg
jne
jns
or
push
icebp
push
sbb
adc
lds
lcall
sbb
mov
in
inc
repz
add
add
stos
popa
mov
dec
jo
dec
jnp
mov
in
jae
sub
clc
fbld
rcll
imul
xor
pop
mov
inc
sub
hlt
lcall
sbb
push
mov
inc
xlat
addl
shr
add
mov
mov
jae
lds
out
push
ficomps
inc
mov
jp
pop
subl
cli
push
sub
mov
sub
andb
mov
movsb
add
xor
xchg
test
pop
xor
mov
xorl
loopne
movsl
sbb
dec
cs
add
sbb
ret
daa
sbb
lret
pop
xchg
call
cmp
js
mov
dec
aas
out
repz
xchg
mov
inc
int
mov
xor
lock
inc
and
leave
mov
mov
jne
mov
sub
scas
mov
mov
xor
mov
or
sub
ds
adc
jnp
jge
jnp
ds
loop
out
outsb
je
mulb
filds
adc
dec
test
daa
push
dec
out
fs
in
jne
dec
outsb
push
inc
daa
lock
aad
fisttpl
je
sbb
cmp
and
adc
sbbb
mov
shll
or
mov
pop
adc
lods
cltd
dec
insb
mov
stos
js
xchg
faddp
jp
mov
mov
subl
shr
es
fisttpl
or
es
xchg
xor
adc
mov
dec
sahf
test
aam
repnz
inc
cld
insl
call
mov
mov
mov
or
push
sub
xchg
les
cmp
or
icebp
or
test
cmp
ret
rorl
sbb
pop
les
imul
fsubs
stos
gs
or
mov
add
sbb
icebp
inc
or
sbb
rcll
xchg
fnstcw
push
push
and
xlat
mov
adc
sbb
sbb
push
rcll
or
jae
out
push
addb
pop
pop
addr16
xor
outsl
lret
mov
push
addr16
jle
pop
jnp
std
add
push
cli
or
pop
sbb
faddl
pop
pop
aaa
cld
mov
cmp
xchg
push
call
mov
xlat
push
outsl
fmul
push
mov
fldl
leave
pusha
pop
mov
jbe
into
xor
shll
std
push
in
std
inc
xchg
xlat
insl
push
std
sarb
and
pushf
ret
push
movsb
pop
fsubrl
cmp
or
fmul
pusha
adc
sti
cmpsl
jl
shlb
mov
ja
push
mov
shlb
in
mov
int3
dec
stc
enter
push
cmp
pop
dec
lea
push
xchg
stos
lods
ret
loope
xchg
pop
jo
push
push
ja
mov
fs
sub
push
or
push
movsb
pop
icebp
cmc
les
in
or
dec
sbb
jae
fcmovnbe
ret
sub
push
int
push
sub
loopw
inc
mov
in
push
daa
dec
dec
fwait
lret
inc
in
popa
jecxz
out
xchg
mov
mov
fiadds
jae
mov
xchg
sbb
cltd
jge
mov
mov
mov
out
in
rcr
sub
and
jnp
nop
pop
insb
and
shrb
pop
aad
adc
xchg
xor
cwtl
mov
test
test
add
ret
and
adc
adc
and
xor
add
arpl
mov
out
jecxz
cmp
clc
mov
ret
sbb
push
cli
sbb
mov
push
push
xchg
xchg
mov
lods
jg
in
cltd
test
inc
jne
ror
repz
lock
fistps
sub
jge
and
or
cmp
mov
jl
repz
loopew
adcb
hlt
pop
das
xchg
mov
rolb
jns
inc
xlat
sub
hlt
testb
xchg
cmp
testb
sub
jge
adc
leave
xchg
mov
movsl
mov
jns
int3
push
sub
pop
mov
sbb
and
icebp
and
jo
jo
cmpsb
dec
or
dec
pop
cmp
mov
outsl
int
jbe
dec
jno
xor
and
insl
test
xor
jp
call
push
jmp
cmc
xchg
outsb
push
cmp
out
mov
cmp
mov
cmpsb
lcall
cmc
bound
jb
in
stos
push
fdivrs
jo
add
jecxz
xlat
ja
fucomi
mov
and
cli
cmpsl
test
add
pop
xor
xchg
fcom
lcall
xor
mov
jp
pushf
jl
xchg
jnp
mov
and
adc
jno
jp
or
mov
pop
jle
or
pop
push
dec
pop
pop
inc
pusha
mov
icebp
adcb
ficompl
xchg
sub
mov
mov
daa
xchg
out
aam
dec
mov
inc
lods
int
add
inc
pop
out
lods
pop
mov
pusha
stos
enter
mov
mov
mov
push
adc
push
es
jl
daa
bswap
jo
inc
jg
jp
add
lods
sbb
lock
mov
add
clc
dec
or
outsb
aad
push
sbb
pusha
sub
mov
out
nop
jns
int
cmp
pop
mov
rolb
dec
je
cmp
jb
inc
xor
fs
sub
dec
ja
add
mov
dec
mov
push
sub
mov
mov
insl
ljmp
add
jae
adc
sub
sbb
cmp
sbb
aad
insb
daa
push
gs
lods
or
push
and
fwait
ret
out
xchg
das
rorl
mov
pop
sbb
xchg
mulb
nop
mov
flds
daa
call
inc
mov
sbb
jae
sub
cs
xchg
xor
fsubrs
icebp
int3
push
inc
imul
xor
cmp
int3
loopne
push
lods
add
push
jg
fnstcw
cld
daa
push
and
cmp
dec
xchg
add
xchg
xor
mov
cltd
jle
jg
xchg
ret
inc
lods
mov
movups
pop
cmpsb
ret
or
bnd
push
add
rolb
loope
cli
fdivr
mov
shr
adc
add
adc
xor
mov
mov
mov
push
js
pushl
xor
adc
sbb
xor
xlat
testb
xor
sub
insl
sbb
push
mov
sub
push
and
adc
dec
mov
gs
sbb
xor
mov
ret
jnp
enter
pop
clc
rcrb
push
and
aaa
lods
and
call
ss
clc
or
out
mov
rclb
lock
jle
or
dec
and
push
pop
xor
xchg
arpl
inc
jp
shrb
push
loopne
push
imul
stc
adc
fnsave
and
das
fwait
lahf
cmp
rclb
cmp
xor
jns
sub
std
popf
jnp
xor
sub
mov
and
ljmp
jmp
add
fdiv
cli
out
push
ljmp
into
movsl
aaa
cltd
lret
mov
mov
mov
je
jg
std
loop
mov
out
mov
mov
mov
pop
es
loope
and
xorb
fisttpll
sub
mov
inc
arpl
add
cmpsb
inc
add
xchg
jle
pusha
enter
add
mov
or
and
mov
fwait
cmp
or
lahf
or
cmp
roll
rcll
push
subl
gs
and
adc
stos
push
mov
fdivrs
js
dec
das
mull
jbe
sbb
data16
clc
and
mov
jge
or
xor
out
sub
clc
add
xchg
xor
push
add
sub
pusha
xor
es
lahf
push
lcall
sub
test
add
sbb
xchg
jl
lock
shl
jle,pt
mov
jmp
out
or
mov
xchg
pop
and
jmp
mov
jge
pop
xchg
je
push
push
inc
scas
mov
pop
test
xchg
xchg
loop
mov
icebp
das
jecxz
or
rol
fdivl
mov
mov
sbb
movsb
pop
xchg
mov
xchg
push
pop
mov
addr16
ja
cmpsb
sub
out
and
out
sbb
std
mov
pop
adc
sub
stc
movl
xor
pusha
and
clc
adc
and
sarl
scas
cmp
and
xchg
sbb
mov
movsl
jno
xchg
push
cmp
push
and
enter
jge
fdivl
dec
xchg
jle
adc
pop
movsl
xchg
stos
imul
ret
test
imul
push
outsb
stos
sub
mov
mov
stc
lods
mov
vpsrlw
lock
cmp
sub
fnstsw
mov
ret
jne
call
cmpsl
add
pushf
enter
fcompl
mov
aam
lahf
mov
or
fisttps
das
inc
xor
xchg
sbb
bound
mov
inc
subb
dec
mov
inc
jnp
or
call
xchg
daa
arpl
loop
xlat
or
jmp
outsb
es
sub
lcall
stc
lock
mov
sahf
int3
sbb
fwait
mov
movsl
js
mov
jno
xchg
stos
jle
dec
aas
push
sar
pop
jae
push
cltd
cmc
flds
jbe
into
xchg
rorb
mov
sub
xchg
mov
sbb
mov
sub
sbb
push
xor
lods
jl
sub
push
push
lods
movsb
cmp
mov
pusha
cltd
jmp
fidivs
cli
sbb
aaa
lea
lods
inc
popf
xor
dec
das
dec
add
xchg
shl
lds
adc
shrb
sub
in
push
mov
gs
repz
inc
fidivrs
mov
out
ja
cli
cli
and
mov
xchg
sub
nop
mov
pop
ffree
leave
std
call
jl
jns
scas
pop
sub
jecxz
ret
lods
xchg
rclb
lds
repz
movl
inc
sbb
fstpt
ds
push
mov
and
inc
mov
sub
call
cltd
jge
sub
sysret
sub
shll
cmpsl
js
jmp
icebp
sub
mov
dec
pop
mov
jo
pop
and
dec
cld
in
xchg
outsb
lock
sbb
or
dec
pop
pop
mov
jp
sbbb
sub
sub
das
push
fsubrl
xor
out
ljmp
add
js
bound
adcb
add
fldenv
fwait
rol
xchg
loop
cs
xchg
xchg
lret
pop
pop
out
add
fwait
jae
loopne
fistpll
adc
or
fidivrs
pop
enter
cmpb
hlt
mov
aas
cltd
inc
test
push
aad
clc
cmc
inc
push
push
sahf
fisttps
roll
xchg
xor
mov
ds
mov
leave
mov
push
push
pop
aam
int
pop
in
rcrl
insl
add
jg
push
int3
push
push
js
xchg
sbb
int3
mov
xor
jecxz,pn
or
jg
jmp
jno
jp
mov
xchg
imul
dec
and
xchg
jg
loop
shrb
daa
ret
xchg
inc
enter
rorl
jp,pt
lods
jns
push
fwait
dec
aaa
out
pop
repnz
aas
jns
add
out
xor
xor
je
push
mov
mov
pushf
stos
enter
xor
cmp
test
popa
pop
jg
inc
cltd
dec
stos
sub
aaa
js
xchg
push
push
nop
cltd
les
lods
sbb
lret
adc
or
fstpl
ret
movsl
test
xchg
into
lods
sbb
aam
mov
ss
cmp
mov
psubq
lock
movsl
push
sub
movsb
or
rcrb
lods
mov
dec
cmp
movsl
add
and
je
pushf
les
mov
aaa
addb
out
mov
scas
sbb
add
mov
insl
pop
pop
push
test
inc
pop
mov
ja
mov
and
xchg
test
ret
inc
stos
sub
das
arpl
popf
push
inc
dec
and
push
outsb
cmp
mov
sub
sub
out
js
jae
pop
ljmp
jo
shl
mov
insb
lods
div
pusha
ffreep
jae
sub
sbb
push
or
lock
movsb
mov
and
jb
xchg
or
mov
or
in
lock
cmpsl
sbb
dec
in
pop
decl
xchg
aam
test
push
cmpsb
ficoms
outsb
or
cmp
fs
int3
push
mov
sub
pop
inc
sbb
push
repnz
std
addr16
pop
sub
popa
sbb
sti
outsb
mov
pop
or
adc
pusha
enter
mov
pop
sub
out
and
cltd
xor
adc
push
lahf
mov
jmp
mov
ljmp
jg
pop
dec
inc
dec
mov
pop
inc
cvtdq2ps
cwtl
imul
pop
xchg
loope
mov
leave
sbb
shll
adc
xor
rcrl
jecxz
dec
pop
mov
or
adc
mov
jge
push
lock
push
fcmovb
aad
je
call
ljmp
cmp
mov
xchg
dec
pop
xor
jnp
mov
xor
jecxz
cmc
jge
scas
cmp
test
dec
sub
xchg
mov
sahf
adc
sub
sub
bound
inc
jge
lods
adc
testb
int3
stc
cmc
mov
sbb
lcall
lea
push
xchg
in
pop
ljmp
adc
int3
and
test
cli
hlt
shrb
jb
pushf
fistpl
jbe
xchg
jl
sbb
into
or
xor
cmpsb
leave
jno
outsl
cmp
or
fistpll
fldt
inc
jnp
jnp
cmp
mov
pop
jg
xchg
les
in
rorl
pop
cmp
dec
push
mov
pop
and
mov
ljmp
push
add
out
call
dec
es
jb
aad
ds
out
ja
xor
xchg
and
inc
adc
test
shll
xchg
xchg
lcall
add
cmp
pushf
jge
cmp
rol
lret
mov
ret
loop
inc
aaa
fisttpl
cmp
xchg
inc
xor
rcrb
lods
fsubl
idiv
shlb
aas
jecxz
jl
xchg
test
mov
sbb
iret
movsl
and
adc
push
sbb
enter
pop
inc
push
nop
pop
je
sub
test
cld
mov
mov
add
mov
pusha
xchg
iret
mov
sbb
xchg
testl
jne
dec
imul
jo
cld
iret
stc
nop
cmp
mov
sbb
mov
cmp
bound
sahf
mov
fstps
cltd
cs
xchg
mov
into
inc
out
push
imul
lds
movsb
test
lahf
les
jg
inc
push
push
push
test
sarb
sbb
xchg
push
ljmp
cmpsb
lds
add
xor
xlat
ret
mov
and
stos
dec
xchg
push
add
sub
sub
xor
jne
aam
cli
mov
movsb
adc
call
adcb
fimull
cmp
fs
test
adc
push
xor
or
jg
inc
sub
insb
inc
mov
hlt
nop
pop
punpcklwd
cmp
loopne
sbb
ss
mov
or
stos
mov
nop
push
enter
movntps
add
insb
mov
int3
pop
pop
lods
hlt
dec
mov
andb
push
push
popf
enter
push
and
enter
lret
cmp
pop
cmp
mov
roll
aam
fwait
movsb
jb
mov
cmp
and
int
inc
sbb
pop
in
adc
xlat
in
xor
ret
mov
loope
and
jg
push
fadds
adc
add
xchg
mov
jo
adc
neg
cmpsl
jmp
jo
cmp
popf
outsl
call
data16
lahf
inc
shlb
xor
push
or
push
push
aad
mov
dec
cltd
cmp
hlt
sbb
stos
jbe
orb
outsb
mov
sbb
fistpl
xor
fcomps
cmc
jns
out
or
fwait
add
repnz
jg
xchg
pop
lea
push
andl
vmovsd
mov
cmp
sbb
or
and
and
jp
js
mov
in
cmp
mov
mov
scas
lds
test
sbb
out
dec
xlat
jo
jo
cmpsl
push
lods
imul
sub
push
pop
in
mov
dec
loope
test
jo
clc
sub
mov
pop
jecxz
outsl
mov
stc
cmpsl
xchg
fdivl
pop
pop
mov
xor
enter
jmp
dec
in
xor
ret
pop
xor
pop
enter
or
ljmp
add
inc
lret
test
dec
push
mov
and
push
scas
xchg
sbb
lds
push
mov
mov
stos
mov
jnp
jbe
jo
mov
xchg
daa
ljmp
push
test
adc
outsl
je
cmp
lods
and
mov
cmp
cs
int
sti
ret
and
bound
or
shr
add
fistpl
cs
jecxz
adc
jecxz
inc
push
mov
inc
push
test
jmp
insb
repz
jae
push
mov
cmp
std
mov
je
mov
or
push
cmpl
inc
jnp
push
outsl
shrb
cmpsl
sti
mov
or
sahf
adc
in
mov
in
push
or
dec
jp
dec
out
cs
pop
xchg
cmc
or
push
cld
addl
aaa
lods
in
xor
fcoml
mov
lret
inc
rclb
pop
bound
mov
mov
mov
or
fs
sti
xchg
lds
mov
cmpsl
loopne
pop
les
data16
leave
repz
das
mov
outsb
sub
push
roll
out
es
hlt
adc
lret
jmp
and
aad
mov
das
xor
out
pop
enter
pop
scas
sbb
insb
add
mov
cwtl
inc
push
xchg
outsb
sete
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
iret
bound
pop
bound
push
es
mov
ds
bnd
das
scas
out
in
insb
sub
stos
mov
sub
movb
scas
int
aad
push
add
out
push
mov
mov
jp
stc
dec
mov
leave
sbbl
xchg
aas
xchg
mov
and
inc
inc
cmp
shrl
sub
jp
pop
push
loop
push
int
jo
mov
hlt
cmc
mov
mov
push
cmp
cmp
mov
push
adcl
imulb
push
ret
cmpsl
cmp
repnz
jp
cli
or
shll
jle
adc
pop
jbe
or
xchg
push
lret
fmull
cmp
repz
inc
ret
jnp
push
gs
aad
fistpll
popf
out
sbb
es
es
daa
out
lods
dec
pop
push
cmp
mov
sub
jge
pop
adc
hlt
std
popa
xchg
cmp
cmp
std
imul
cwtl
ja
repz
mov
mov
sbb
jno
lods
shlb
daa
test
daa
rcr
or
push
cmc
push
xchg
mov
sbb
clc
ficoms
fiaddl
xor
xor
mov
popl
mov
hlt
push
xor
sbb
jmp
pop
loop
add
jmp
insl
xlat
push
test
and
xor
ja
xor
loopne
icebp
xchg
test
adc
or
push
push
mov
push
lea
sub
shll
aam
nop
pop
jo
jge
mov
jg
test
pushl
sub
mov
hlt
js
loopne
ss
insl
adc
gs
cmp
testb
inc
jb
inc
clc
mulb
popf
push
shrb
xor
cli
add
arpl
stos
fs
pop
scas
add
xchg
mov
loop
idivb
lock
jmp
sti
push
stos
mov
xor
bound
test
loopne
dec
xlat
fbstp
repnz
sub
ss
popa
mov
jle
xchg
cmp
push
push
inc
push
ss
dec
cmpsb
jnp
in
push
mov
mov
sbb
mov
pop
cmp
xlat
sti
dec
test
and
jae
inc
mov
and
sub
leave
leave
in
and
mov
lock
dec
sbb
and
scas
call
fnstsw
in
xlat
mov
insl
dec
sub
mov
xor
lds
inc
xor
aad
stos
pop
fstps
add
scas
testb
gs
adc
fdivs
inc
xchg
lret
inc
movsb
jns
lods
mov
xchg
das
lock
xchg
ror
je
lods
int
in
jecxz
icebp
lods
pop
mov
pop
inc
lret
cs
add
and
fistps
mov
pop
scas
dec
faddl
push
in
sub
inc
out
xor
mov
mov
mov
test
test
or
mulb
inc
inc
mov
mov
out
loopne
push
popa
gs
clc
mov
pop
mov
std
push
repz
jno
shlb
ja
add
xlat
mov
ret
mov
mov
or
enter
mov
movsb
jge
popf
pusha
jns
ljmp
sub
dec
std
xchg
inc
fxch
jnp
dec
push
clc
push
cmp
push
lds
add
cltd
push
pop
jg
js
sti
bound
cs
les
jno
fsub
mov
lods
cmc
insl
imul
sub
into
pushf
jne
fst
add
sub
jge
repz
in
cwtl
xchg
mov
rorl
jp
insl
jnp
icebp
xchg
mov
and
jbe
pop
inc
pop
orb
xchg
fsubl
lds
sbb
add
mov
xor
pop
lcall
sarb
and
jecxz
daa
aas
inc
jno
lret
cld
jge
dec
filds
cmpsl
or
or
loop
enter
push
mov
loopne
je
dec
inc
mov
les
add
cmc
pop
xchg
add
subb
popa
repz
mov
adcl
xlat
xorb
out
lret
das
sar
add
cmp
jl
ror
inc
push
or
shll
adc
lret
cmp
repnz
add
jo
jecxz
cld
sahf
orb
sub
push
or
cmpsb
fnstsw
int
mov
inc
and
xchg
xlat
scas
push
fisttpl
mov
sbb
or
adc
fisubrl
ds
sarl
dec
jmp
cltd
lods
mov
mov
dec
iret
jl
sbb
sarl
or
pop
lock
aad
dec
jg
sub
pop
lret
lahf
idivb
ds
adc
mov
mov
rcrb
mov
insb
lods
fiadds
data16
pushf
xor
push
test
movsl
push
adc
popf
xchg
push
mov
cmp
inc
pop
cld
cwtl
test
sti
hlt
into
stc
jmp
fs
pop
lods
shr
bound
push
push
out
cmp
pop
mov
mov
pusha
arpl
std
jno
iret
dec
adc
inc
fstps
add
outsl
jl
sti
pop
pushf
mov
fmul
ss
push
sbb
imul
and
xchg
jmp
clc
push
hlt
in
addl
xor
inc
push
add
mov
push
mov
xchg
and
xchg
cwtl
aam
xlat
nop
pushf
mov
test
in
add
das
decb
mov
sub
or
sbb
test
enter
ljmp
cs
adc
lret
out
dec
outsl
mov
enter
pusha
jmp
mov
loop
mov
or
movsb
int
icebp
gs
xor
cmc
aad
mov
mov
js
dec
out
jge
lods
push
mov
pop
mov
pop
mov
inc
mov
inc
push
lea
andb
sub
lods
test
cmp
daa
sbb
pusha
nop
insl
inc
cmp
fwait
xlat
in
mov
std
or
push
adc
imul
xor
add
xchg
push
mov
or
push
lea
in
sahf
in
mov
inc
push
sbb
hlt
dec
adc
mov
popa
dec
mov
dec
mov
push
add
cs
xchg
std
insb
insl
shll
push
enter
cmpsb
xchg
mov
out
inc
int
xchg
push
mov
lret
orb
push
test
loopne
sahf
mov
push
xor
das
fsts
frstor
iret
mov
sub
sub
sbb
fisttpl
int
scas
subl
clc
mov
les
adcl
pop
xor
adc
imul
mov
push
sbb
mov
jo
mull
mov
mov
mov
rol
add
xchg
jb
pop
jno
ljmp
mov
pop
sub
xlat
fwait
or
push
pop
ljmp
outsl
ds
ds
clc
inc
cwtl
inc
mov
dec
pop
sbbb
data16
lods
mov
nop
sbb
inc
test
push
inc
mov
xchg
jl
mov
add
mov
cmp
mov
push
dec
cmpl
mov
xor
xor
leave
cld
rorl
nop
pop
push
out
imul
aam
scas
dec
fldenv
xchg
aam
test
jb
xchg
sti
hlt
lods
cmp
or
insb
cld
scas
and
mov
mov
jnp
daa
pop
sbb
mov
test
pop
fstcw
push
cmpsb
movsl
insl
xchg
les
push
hlt
mov
clc
ret
pop
cmpsb
seta
popa
lret
sbb
imul
pop
inc
and
dec
lds
movsl
ret
adc
pusha
fnstcw
or
clc
mov
out
xlat
add
lahf
rcll
fs
sub
loop
fdivrs
inc
leave
mov
push
dec
cmp
add
popf
sub
jge
or
hlt
xchg
notb
fdivl
pusha
push
add
scas
adc
cld
add
sub
pusha
sub
shll
add
or
leave
dec
enter
xchg
inc
sub
ljmp
shll
add
divb
out
inc
sub
add
pop
pop
mov
sbb
test
inc
jo
lods
imul
mov
addl
in
cld
lcall
out
fwait
mov
and
xor
xchg
push
ficomps
scas
cli
fs
negl
cmp
pusha
aas
cmp
cmp
add
ret
test
les
jmp
lret
out
inc
cwtl
mov
ret
mov
sub
cmp
jns
mov
mov
bound
in
jbe
movzwl
and
add
es
cli
ret
mov
fdivs
and
jge
les
cs
jb
jp
xor
cmc
cmpsl
push
mov
and
insl
das
pop
mov
sbb
xchg
add
js
xchg
loope
mulb
mov
das
jp
pop
add
mov
pop
pop
push
faddl
sub
mov
les
adcb
cmp
jno
inc
xor
pop
test
ds
jecxz
jae
push
adc
sbb
clc
mov
pop
fs
cwtl
pushf
scas
sbb
push
jnp
inc
pushf
mov
cmp
idivb
and
and
lcall
fildl
aad
and
mov
imul
mov
adc
cmp
leave
test
add
jns
ret
mov
dec
pusha
imul
sti
xchg
leave
cmpsb
mov
dec
sbb
mov
pop
stos
inc
mov
loopne
in
sbb
test
xor
je
push
mov
sub
inc
sbb
cmpsl
dec
add
pop
mov
add
xchg
outsl
fnstenv
mov
loop
imul
out
mov
repnz
xor
xchg
movsb
movsl
cs
rcr
jns
testl
shlb
iret
insl
push
cmp
dec
xorb
call
fisubs
out
ljmp
stc
push
test
add
out
sbb
lcall
gs
lods
mov
mov
scas
jge
cmp
fisttps
inc
dec
cmpsl
and
clc
movb
jno
jecxz
jnp
lock
into
movsb
pop
sub
shl
bound
push
jge
xchg
or
cmp
scas
dec
push
push
shr
jle
outsl
pop
icebp
fistl
aam
lcallw
insb
arpl
fs
adc
imul
and
inc
aas
test
enter
test
pop
out
xchg
insl
xchg
push
ja
sbb
cltd
mov
js
shl
mov
loopne
add
add
outsb
and
pop
loopne
pop
popf
jne
push
addr16
imull
mov
mov
push
pop
dec
cwtl
in
mov
rcrb
dec
pop
cli
inc
fnsave
xchg
js
mov
arpl
dec
add
scas
shrl
mov
je
es
inc
fisubrl
add
gs
addr16
outsb
es
xor
mov
add
pop
in
dec
xor
xorb
imul
movsb
movsb
outsb
je
push
ret
sub
sbb
cli
cmpsb
inc
cmp
cmp
test
mov
notb
and
mov
ljmp
test
sub
sbb
mov
inc
rorl
xor
sbb
jmp
cmp
sub
xchg
pop
xchg
jp
je
cmpsb
xchg
or
cs
ret
xchg
test
and
scas
cmpsb
mov
into
pop
incb
lcall
and
notl
sbb
in
mov
jae
mov
xor
push
xchg
dec
inc
sub
in
outsl
test
add
mov
pop
sbb
xchg
ror
movsb
pop
xchg
lea
ljmp
push
es
cmp
sti
hlt
addr16
les
lock
jg
or
fcmovne
adc
repz
jae
xlat
ljmp
lret
cmp
lods
scas
cmp
imul
fisttpl
and
lar
das
jnp
insb
xchg
adc
adc
xorb
xchg
test
pop
repnz
xor
push
arpl
or
ljmp
adc
and
rolb
outsb
and
pop
int3
cmp
mov
loop
imul
call
jo
push
and
stos
add
xchg
jae
cmp
cmp
sbb
loope
arpl
clc
aas
lahf
xchg
sbb
ljmp
lret
cli
out
loopne
pop
add
jbe
inc
sbb
sbb
lret
pop
pop
pop
ljmp
mov
out
bound
mov
inc
subl
lods
mov
mov
mov
pusha
add
ljmp
enter
push
out
pop
mov
cmpsl
jge
pop
mov
ljmp
in
fnstcw
scas
dec
xorl
sbb
jb
pop
cmp
fs
clc
enter
out
in
xchg
xlat
pop
pop
push
pop
mov
sub
in
sbb
cmp
ja
mov
iret
popf
mov
iret
cmpsb
pop
in
or
xor
lds
add
add
dec
hlt
dec
scas
test
in
jmp
and
push
jne
xorb
pop
push
sbb
sub
mov
stc
ljmp
test
sbb
mov
dec
jns
fistl
cmp
arpl
or
dec
add
cmpsl
lock
xchg
mov
adc
mov
cmpsl
sub
push
fdivrs
xchg
cmp
imul
dec
popa
adc
mov
std
dec
jecxz
out
popa
icebp
cmp
test
adc
out
sbb
ja
inc
xor
lods
outsb
lea
inc
jb
in
jbe
sub
push
pop
cmp
jns
daa
pop
push
pushf
jb
add
aaa
adc
call
lcall
adc
nop
sti
lret
push
loop
out
out
dec
stos
or
loopne
dec
jg
roll
push
cli
pop
jmp
jo
fcmovbe
or
cli
fisttpl
inc
rcll
push
add
sarl
push
inc
mov
dec
mov
or
add
arpl
repz
push
sbb
add
in
xor
push
bswap
lea
lods
fadds
es
or
in
lahf
lods
dec
ljmp
and
in
push
pop
out
xchg
fimull
out
in
mov
push
dec
scas
mov
adc
aaa
jmp
sub
jb
sub
push
sti
insl
xchg
out
sbb
stos
xor
push
adc
mov
cmpsb
inc
mull
scas
test
test
movsl
fistpll
pop
and
mov
scas
clc
insl
lret
js
mov
sbb
lcall
push
mov
mov
dec
inc
leave
insl
xorl
push
jns
shl
push
adc
cmp
enter
adcb
shrb
dec
mov
cmpsl
xacquire
jecxz
lret
jmp
cmp
jno
pop
out
sbb
sbb
repz
pop
pop
pop
jb
sub
ljmp
mov
mov
cmp
in
js
and
gs
mov
pop
push
cmp
xlat
repz
rolb
add
pop
ja
dec
sti
sub
mov
gs
sub
repz
add
pushf
adcb
pop
xchg
mov
imul
repz
incl
mov
rorl
in
sbb
jge,pt
popa
imul
sbb
outsl
push
nop
dec
in
ds
push
aas
mov
test
xlat
sub
mov
div
mov
mov
push
js
or
xchg
imul
push
test
dec
scas
cwtl
mov
cmc
cltd
inc
pop
das
arpl
and
inc
fnclex
sub
outsb
pop
cmp
popa
and
dec
pop
scas
lods
and
sarl
int3
inc
shrb
jb
push
out
inc
in
pop
rol
mov
push
cmp
fs
popa
pop
add
adc
mov
xor
dec
add
jge
adc
sub
stc
sahf
ss
test
push
icebp
jb
insl
ftst
mov
push
aad
xchg
add
movsl
test
push
sar
cltd
mov
cs
scas
movsl
test
sbb
ret
and
mov
pop
mov
dec
fsubrs
sub
dec
or
inc
sub
push
xchg
loop
dec
jbe
cmp
xchg
ret
push
scas
push
pop
cmc
and
push
and
cli
jns
scas
sbb
mov
sarb
js
mov
lods
mov
aam
lods
insl
mov
mov
sub
mov
and
cmp
out
xlat
js
lds
jl
les
aas
fs
arpl
cmpsl
in
insl
icebp
mov
adc
jle
pop
and
cmp
and
push
out
fdivrl
mov
ret
pop
pop
test
lret
cltd
das
adc
xor
cli
addr16
push
mov
into
jmp
dec
jge
fiaddl
cmp
or
dec
inc
pop
sti
sub
cmovns
inc
scas
sub
das
pop
pop
mov
insl
stc
icebp
shr
pop
push
sbb
jbe
mov
dec
fcomps
in
and
bswap
jl
push
xchg
adcb
or
out
or
push
data16
shlb
int3
in
push
loope
test
cmp
mov
adc
fs
andl
arpl
fisubs
aas
dec
int
mov
test
fldcw
ret
in
rorb
pop
lahf
push
mov
xor
lods
mov
or
sbb
fildl
and
inc
xlat
je
mov
and
add
and
jl
cmp
or
pop
sbb
fcomps
push
dec
mov
and
orb
xchg
ja
ret
xchg
pop
pusha
jbe
dec
sub
jmp
lods
inc
fcmove
or
mov
mov
pusha
repz
push
fidivrl
cwtl
out
xchg
push
rcrb
mov
cmp
push
rcll
in
xor
xor
lods
pop
mov
cmpsl
mov
jge
cmpb
and
inc
popf
std
aaa
call
mov
das
add
xchg
in
fnstenv
push
ss
out
cwtl
adc
subl
lods
ljmp
jg
mov
arpl
jmp
lret
inc
pop
int3
push
pushf
pushf
jno
roll
icebp
mov
fistps
jge
cmp
xor
lds
repnz
cwtl
jp
notl
dec
sarb
push
aam
xor
fsubp
sub
aaa
lret
dec
repnz
mov
aam
fisubrs
pop
bnd
and
pop
iret
xchg
jo
mov
sarl
and
popf
ret
pop
fistps
fadds
into
jl
imul
test
push
pop
adc
cltd
nop
loope
sub
jmp
mov
das
jmp
or
pop
psubd
lcall
test
out
mov
fwait
rcl
mov
and
pop
mov
jmp
subl
stos
mov
mov
mov
sar
test
inc
gs
in
popf
sub
sub
cmp
sahf
dec
js
rol
add
orb
mov
and
inc
shlb
fsubrs
mov
clc
dec
movsl
fidivs
arpl
sahf
xchg
es
and
inc
mov
sti
nop
mov
mov
inc
mov
adc
out
pop
cmpb
and
mov
xchg
movlps
sarb
mov
out
or
arpl
lods
inc
outsl
xor
int
and
mov
stos
lret
xchg
fnstsw
cmp
lods
cli
iret
and
xchg
and
mov
sti
subb
repz
cld
sub
decl
and
and
lock
jp
pop
nop
mov
sahf
pusha
xor
cmp
in
push
ffree
mov
or
ja
adc
push
cmp
cmp
cltd
int
cmp
stc
fwait
adc
adc
cmpl
cmp
das
jns
dec
test
iret
call
inc
pop
cmp
dec
push
push
and
imul
push
sarb
fcmovnu
and
push
pushf
outsl
add
insb
daa
cmp
negb
test
aas
addb
dec
dec
add
mov
inc
or
scas
add
pop
pusha
mov
iret
mov
hlt
sub
mov
stc
stos
fistpll
test
and
and
out
pushf
cmpsl
pusha
pushf
or
mov
jb
lea
push
dec
movsl
shrl
xchg
enter
add
outsb
nop
lods
mov
add
adc
adc
push
pop
adc
pop
pushf
lret
test
movsl
push
call
icebp
pop
stc
iret
xchg
mov
lcall
fsubrs
jmp
xchg
lods
repz
inc
push
push
in
mov
sub
imul
dec
and
and
xchg
jne
mov
mov
mov
dec
frstor
js
sti
push
dec
repnz
push
mov
mov
flds
pop
mov
xchg
rcrb
or
and
jg
xlat
xchg
and
lods
ds
test
pop
insb
call
fs
insl
dec
scas
movsb
popa
adc
mov
sahf
inc
dec
pop
data16
sub
lds
xlat
jns
mulb
leave
add
mov
fdiv
sub
stos
push
cmp
mov
mov
je
mov
xor
jecxz
popa
adc
out
sahf
les
lahf
mov
pop
and
pusha
pop
cwtl
mov
movsl
pop
pop
psllw
sub
inc
push
repz
xchg
hlt
mov
jl
and
repz
and
aam
xchg
mov
add
mov
jl
add
leave
adc
push
xchg
rcll
test
idivl
or
mov
lds
sahf
rorl
push
xchg
inc
sub
lret
lods
pop
movsb
fwait
pop
scas
inc
xchg
jae
push
add
mov
fs
lods
enter
push
mov
addr16
loopne
shrb
cmp
adc
outsl
pop
fsubs
std
in
dec
inc
fistps
or
icebp
nop
inc
mov
cmp
aad
ja
repnz
mov
mov
xor
aad
shl
test
aad
daa
idivl
icebp
jno
sbb
xchg
push
popa
xchg
push
faddl
lcall
je
into
dec
cmp
loop
jp
cli
and
xlat
or
cmp
lods
jbe
push
cli
lret
scas
fdivl
call
hlt
and
lea
movsl
filds
inc
in
out
into
inc
push
cli
mov
sbb
cmp
push
xor
push
dec
test
xchg
mov
mov
sbb
mov
daa
add
lahf
jle
out
inc
aaa
repnz
dec
push
xor
pop
push
pop
cmp
test
sbb
lret
sub
aas
push
mov
or
jmp
cmpsb
xchg
ret
fs
jne
js
mov
pop
push
pop
inc
add
sbb
push
fwait
stos
sub
adc
aam
dec
push
pusha
add
push
add
push
cmp
fs
mov
aaa
pop
mov
xor
sbb
mov
dec
cmp
lea
fsubs
inc
mov
xor
push
mov
enter
and
das
in
xchg
push
jecxz
fnstcw
mov
addr16
xchg
popa
adc
mull
insb
lea
cmc
lods
mov
adc
mov
fstpl
das
dec
scas
pop
stos
sub
loope
mov
aad
pop
adc
rol
popa
mov
cmp
jl
mov
out
lcall
mov
in
add
or
out
inc
cs
cs
jge
ljmp
push
xor
repz
mov
int3
out
rcl
mov
fsubrs
mov
or
jo
repnz
sarb
fists
xchg
or
cmp
pop
sbb
std
loope
cmp
mov
push
dec
fwait
inc
les
pop
mov
les
ret
mov
nop
faddl
push
out
mov
ja
cs
lcall
adcb
inc
pop
out
lret
orl
xchg
dec
pop
stc
clc
adc
shlb
lods
push
push
sbb
es
sub
push
mov
mov
inc
adc
mov
sbb
dec
xchg
cwtl
inc
lret
cs
cmp
and
out
std
imul
aas
cmp
sbb
pminsw
sahf
int
xor
cmpsl
scas
cli
jmp
mov
xlat
pop
cmp
and
xchg
cmpsb
and
xchg
xor
int
pushf
lods
shl
inc
cmp
adc
xchg
in
inc
inc
in
cli
xchg
dec
lcall
sub
push
mov
push
ds
or
push
pop
not
jl
mov
push
mov
push
cmp
fdivrp
sbb
imul
push
int
sub
pop
daa
mov
shrb
repz
mov
jmp
add
iret
ret
xchg
mov
ret
lahf
sti
add
sbb
jecxz
dec
in
outsl
or
pop
clc
push
nop
pop
mov
mov
sub
jg
jmp
idivb
movsl
sti
push
jnp
push
lock
jno
mov
negb
cltd
jae
push
mov
cmp
inc
cmp
jb
dec
mov
cmp
cs
push
data16
pop
mov
lods
sti
ja
sbb
dec
cmp
shlb
or
cltd
fdivs
jl
retw
cmpsl
inc
adc
fisttps
cmp
cmp
negb
lahf
repz
or
mov
jb
sbb
iret
fcmovnbe
std
mov
nop
das
out
and
cmp
addb
cld
cmpb
mov
cltd
sub
mov
imul
mov
sbb
mov
jle
cmpsl
cmpsl
jle
cwtl
mov
mov
xchg
scas
lahf
shrb
add
xlat
xchg
imul
xchg
sbb
adcl
xchg
and
xchg
pop
in
jo
push
mov
pop
cmpsb
loop
shrl
dec
fdivrs
sbb
jno
cmpsb
mov
icebp
push
loopne
mov
fdivs
shr
fdiv
call
push
inc
cmp
jne
rcrl
and
jle
xchg
add
out
add
jmp
xchg
jno
nop
lahf
and
lret
mov
cmp
fwait
int3
lahf
out
ja
rclb
rcll
jo
push
mov
addr16
jb
test
lock
xchg
and
mov
daa
call
cmpsb
cmc
mov
xor
sub
sub
pushf
test
bound
jb
loope
call
pop
pop
or
lods
imull
ret
jnp
sub
fistl
jg
add
icebp
pop
xchg
xchg
cmp
jne
push
push
popa
mov
icebp
cmp
cwtl
fildl
stos
outsb
mov
add
mov
and
sbb
cli
jnp
in
mov
sub
mov
scas
add
popf
ret
push
fs
mov
xchg
lock
dec
in
test
add
out
lret
jo
outsl
outsb
inc
cmp
push
std
pop
popw
ljmp
mov
push
lods
mov
jnp
cmp
fdivs
pop
aaa
test
mov
jge
xlat
inc
xchg
jno
inc
mov
lret
or
ror
imul
xor
xchg
mov
movsl
hlt
jp
cli
fidivs
inc
js
xchg
neg
xor
fs
cmp
xchg
aas
popa
inc
lahf
mov
or
pop
mov
std
fstps
arpl
jmp
pop
pop
movsl
adc
adc
fstpl
inc
js
in
imul
test
iret
in
je
out
inc
ret
mov
adc
repz
mov
out
mov
jnp
dec
lods
mov
sbb
adcb
pushf
cmp
push
dec
adc
rorl
pushw
or
mov
and
dec
sbb
mov
nop
xchg
sbb
jp
fisubrs
pop
fmul
or
negb
push
gs
push
ja
ljmp
je
test
cmp
pandn
insb
mov
dec
sbb
and
cmpsl
mov
add
cwtl
xor
jle
repz
orps
jne
dec
sbb
out
cmpsl
inc
inc
pop
popf
jnp
add
sub
dec
add
inc
pop
testb
gs
fbstp
stos
xchg
or
cmp
and
out
in
ja
ljmp
rep
ret
mov
cmp
fisubl
ss
inc
push
pop
mov
mov
or
pop
mov
xor
fdivrl
and
ljmp
cmp
inc
fistl
sub
xlat
insb
adc
addr16
dec
shll
mov
mov
lret
jge
jnp
mov
rcrb
xchg
adcl
movsb
sbb
jae
pushl
xor
call
inc
fidivl
add
pop
mov
push
fiadds
lret
lret
cmp
fisttpll
out
mov
xchg
shr
sbb
jo
push
xor
cmp
je
lods
insb
dec
push
clc
add
cmc
sbb
sti
into
sub
arpl
int3
lret
gs
pop
dec
ss
xchg
inc
cmp
and
inc
fdivrs
sub
jmp
pop
idivl
mov
iret
jns
push
lock
subb
add
sbb
scas
fsubs
gs
push
and
arpl
or
or
cwtl
inc
adc
mov
fwait
cmp
neg
mov
dec
mov
push
test
aaa
or
imul
insb
arpl
fs
outsl
ficomps
inc
ret
pop
divl
push
das
jmp
sbb
mov
aad
cmc
mov
push
aad
sbbb
dec
push
and
adc
rcr
mov
test
stos
das
mov
mov
in
jmp
cmpsb
mov
dec
mov
sbb
dec
inc
loopne
scas
aas
sbb
mov
xor
ss
mov
loopne
dec
insb
xor
das
ret
or
dec
movl
and
push
pop
xor
mov
mov
jp
inc
xor
mov
in
cmp
xor
xchg
add
push
shr
out
sub
add
inc
push
sub
insb
movsb
or
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
int
cmpsl
pop
std
and
int
bound
mov
sbb
pop
mov
fiaddl
sub
in
push
scas
jne
xor
mov
ljmp
sub
jo
push
xchg
xchg
sub
ljmp
icebp
out
cld
mov
xor
stos
adc
aas
sub
and
jns
lahf
jmp
ret
rcrl
gs
mov
lcall
adc
or
sahf
fisubrs
adc
aam
mov
mov
shll
sbb
mov
inc
pushf
ret
cld
sub
add
in
dec
in
pop
xchg
push
mov
adc
fucomi
xchg
cmp
cmp
faddl
mov
subb
fdivrl
cld
pusha
mov
test
push
and
icebp
iret
loop
jnp
lock
stc
or
sbb
sub
sbb
inc
mov
add
dec
mov
divb
pop
movsb
jg
out
mov
test
push
sbb
in
pop
or
pushl
inc
lods
subl
outsl
xor
pop
aaa
pop
inc
push
ja
sti
inc
mov
or
push
rclb
int3
adc
shl
xor
pop
ljmp
sub
xor
mov
in
pushf
outsb
mov
sarb
dec
mov
add
insb
fsubs
or
nop
xor
pop
ja
fwait
test
outsl
or
lea
ret
or
and
push
in
outsb
mov
push
inc
push
aaa
inc
in
stc
repz
push
fsubrs
rorl
movsl
stos
stos
push
int3
xor
push
mov
cmpsl
adc
dec
insb
leave
leave
xchg
pop
jg
xor
call
out
sbbb
iret
xor
xor
filds
loopne
out
cmp
aad
dec
pushf
jo
pop
pop
pop
and
xchg
out
xchg
in
jge
mov
push
or
mov
pop
adc
and
pop
bound
stos
std
cmp
icebp
inc
mov
push
lret
dec
pop
out
loopne
insb
pop
adc
xor
push
in
nop
xchg
frstor
xchg
pop
test
movsl
pop
stc
jmp
mov
mov
cmp
pop
cmp
fisttps
out
movsl
xchg
daa
inc
imul
adc
mov
xor
xor
mov
push
inc
mov
loopne
or
pop
push
call
fwait
lea
div
fstps
incb
insb
inc
insl
sub
xlat
or
pop
jecxz
adc
sub
jge
pop
dec
push
fldenv
je
inc
ffree
cmpsl
xor
sub
popa
mov
cmp
jnp
pop
add
jnp
jp
adc
mov
in
inc
stos
jge
adc
mov
stos
pop
or
sar
push
push
push
mov
inc
in
sbb
push
outsb
and
shll
xchg
add
and
fldt
push
mov
mov
pushl
ljmp
push
pusha
inc
ret
mov
mov
into
pop
or
sub
inc
xor
mov
ret
push
stos
insb
clc
lcall
loope
sti
mov
leave
cmp
roll
into
test
mov
ret
inc
cltd
xchg
jecxz
jns
sar
adc
ret
mov
in
jbe
xor
cmp
int
jns
shll
test
xor
and
and
inc
fsubl
rcrl
ja
mov
movsb
iret
cmc
mov
xor
pop
stos
lea
push
fwait
outsl
xchg
jo
mov
hlt
fidivs
ljmp
testb
lcall
mov
das
pop
sub
lahf
cmc
loop
and
js
jge
sub
iret
mov
aaa
xchg
jp
test
xor
mov
xchg
ljmp
add
mov
xchg
in
add
adc
aam
fwait
rcrb
sti
cmp
jno
iret
mov
mov
shr
stos
pop
std
adc
sarb
inc
push
pop
jnp
dec
std
cld
movsl
test
out
in
sbb
pop
push
pop
fwait
adcl
and
adc
lds
aad
popa
pop
lea
out
xchg
add
inc
dec
and
fistpl
xor
cmp
xchg
int3
jg
shrb
mov
cwtl
xorl
outsb
xlat
pop
mov
stos
repnz
je
enter
sbb
cmpsl
cmp
or
jmp
sub
pop
mov
or
push
mov
sbb
inc
dec
jmp
insl
ret
pop
ja
popa
stos
or
adc
pushf
lahf
cmp
das
and
subb
pushf
stc
cmp
rclb
fcompl
rcr
iret
ds
cwtl
lds
in
mov
pop
xor
jp
jl
jbe
add
sbb
enter
mov
int
mov
ds
in
inc
cmp
adc
add
add
pop
lret
or
and
movsb
add
lods
cmpsl
mov
sbb
idivl
add
mov
sub
fwait
addl
es
rorl
aaa
fidivrs
pop
loope
daa
jno
push
loop
dec
sbb
push
and
decb
pop
iret
sbb
ljmp
inc
push
bound
fwait
jmp
fdivrl
leave
std
pushf
add
pop
cld
and
mov
out
mov
aad
cmpsl
mov
adc
sahf
push
nop
push
push
test
and
out
sbb
into
test
and
insb
cwtl
ret
test
ds
sbb
andb
in
dec
adc
or
lret
push
fidivs
mov
aad
mov
orb
inc
sbb
enter
call
jns
and
es
dec
out
lods
cmp
pop
aam
pop
setae
mov
adcb
sbb
cmp
inc
hlt
inc
xchg
pop
pop
pop
adc
pop
add
pop
or
stc
aaa
xor
ljmp
lret
mov
ret
lret
mov
int
in
sbb
jecxz
jg
jg
int
hlt
add
adc
dec
push
arpl
jge
cltd
leave
call
insl
mov
lret
and
stc
push
lea
scas
add
sub
push
movsl
jecxz
mov
mov
jge
or
mov
or
mov
loop
fsub
popf
lahf
mov
sbb
outsl
mov
xlat
sub
outsb
sub
sbb
hlt
mov
das
or
jmp
push
repnz
sbb
aaa
mov
cmp
popf
mov
nop
push
rclb
cmpsb
sbb
fidivs
imul
movl
xor
mov
and
int3
imul
dec
push
sbb
mov
push
shrl
out
fcmovu
lea
sbbl
push
jo
dec
lods
fldt
xchg
iret
pushf
imul
and
inc
int
mov
dec
out
or
jne
stos
rclb
push
xor
shll
imulb
mov
and
xchg
cli
mov
imul
inc
ret
outsl
dec
xchg
repz
add
fisubs
lock
push
mov
negl
fdivl
push
fidivrl
lock
in
mov
cmp
and
iret
pusha
das
clc
adc
mov
pop
adc
loop
repnz
jo
clc
outsb
mov
fldenv
add
cmc
sti
enterw
stc
push
lods
cmp
les
inc
ret
mov
outsl
mov
lods
cltd
adc
out
adc
xchg
pop
test
jbe
fs
add
insb
inc
and
jl
in
push
fidivrl
jle
mov
and
dec
push
repz
fnsetpm(287
je
jo
rorb
pushf
rol
jp
pop
add
push
cmp
xlat
fxch
xchg
push
mov
mov
stos
mov
cmpsl
bound
inc
cwtl
ret
lret
movsl
les
add
xchg
mov
cmp
dec
mov
fstps
filds
cmp
xor
lock
pop
ss
in
sub
enter
std
dec
jns
xor
in
xlat
aad
jg
jge
pop
inc
loop
ljmp
roll
pop
movsl
adc
jp
push
and
jae
push
cmp
cmp
pop
out
shrl
or
xchg
enter
iret
clc
dec
sub
addb
dec
sub
cld
xchg
dec
jl
dec
scas
cltd
pop
hlt
lcall
outsl
cmpsb
mov
movsb
scas
push
fs
xlat
in
sarb
mov
lahf
test
mov
mov
leavew
rcll
test
test
mov
pop
lea
sbbl
scas
gs
roll
sub
fdivrp
sbb
dec
inc
adc
add
in
add
push
iret
mov
xor
mov
jns
into
or
mov
repz
loope
cmp
mov
fmull
inc
sbb
mov
stc
pop
adc
sbb
jl
data16
int
jne
nop
or
orl
mov
mov
outsb
mov
and
add
int3
mov
adc
push
push
adc
mov
adc
xor
movsb
sub
loop
stos
mov
int
mov
mov
fwait
cmp
adc
push
andl
pop
jne
ss
lret
incb
stos
mov
testl
cmpsb
loope
repz
mov
add
adc
out
mov
add
scas
cld
popa
xchg
in
sti
add
movsl
push
repz
lds
and
dec
gs
ret
mov
repz
or
mov
push
cmovp
inc
add
or
dec
inc
sbb
leave
ret
sahf
jg
jle
pop
xchg
jbe
clc
add
pusha
mov
cmp
cmp
call
xor
subb
pop
fiadds
movsb
nop
mov
sti
cmp
cmp
popa
insb
push
push
xchg
test
nop
push
add
and
orl
cld
push
dec
arpl
cmpsl
or
das
mov
sbb
push
stos
xchg
pop
fucomi
dec
jmp
inc
pop
inc
je
cmpsl
outsl
aaa
ret
leave
incb
add
arpl
inc
push
pusha
mov
loop
divb
jmp
hlt
rorl
dec
fadds
imul
sar
add
jp
mov
or
lcall
mov
or
outsb
loope
mov
cltd
dec
mov
lods
push
push
je
ja
push
add
mov
mov
out
mov
pop
fldenv
subl
mov
shlb
xchg
pop
ror
pop
int
outsl
inc
xlat
lcall
or
repnz
mov
hlt
in
aam
fists
mov
add
fiadds
jne
mov
pop
aam
cmc
jg
fisttpll
cmp
out
aaa
mov
xchg
cmp
out
sbbb
sahf
popf
jmp
mov
mov
sbb
dec
incb
add
add
jp
cmp
xchg
inc
clc
sub
mov
out
xor
jb
push
push
repz
inc
sub
das
adc
lahf
inc
inc
mov
mov
cltd
add
adc
in
mov
jecxz
cmp
inc
addr16
push
xchg
xchg
in
sbb
mov
pop
mov
mov
pop
inc
movsl
mov
mov
loopne
jmp
lods
sti
sbb
xor
sub
cs
mov
add
fwait
mov
pushf
out
icebp
mov
cs
jbe
inc
mov
dec
mov
fmull
fidivs
gs
and
dec
and
or
and
lcall
xor
mov
mull
aaa
mov
loopne
push
cmp
ljmp
push
sti
xchg
das
imul
mov
cmpsb
jle
ds
dec
xor
std
xorl
out
repz
fs
mov
mov
insl
hlt
aas
xchg
mov
mov
mov
gs
add
call
lds
pop
cmp
cwtl
aas
jg
push
ret
inc
fcmove
daa
or
xchg
loopne
xorl
cmp
pusha
xor
jnp
jo
dec
pop
push
push
jns
lea
lret
push
jne
lahf
xor
shll
and
cmp
jl
aaa
popf
popf
pop
insb
inc
mov
movsl
push
jae
idivl
icebp
xor
or
add
shll
aas
mov
cmp
dec
jp
mov
dec
push
lcall
and
cmp
aam
mov
inc
std
scas
mov
mov
and
or
stos
movsl
cmp
outsb
les
pop
push
pushf
push
aaa
mov
mov
iret
aam
sbb
dec
cli
popf
xor
ficoms
cmpsl
mov
xchg
xchg
pop
ljmp
ret
scas
stos
push
dec
and
add
cmpsl
pop
fs
sub
out
lods
mov
push
sbb
les
xor
and
jl
adc
mov
mov
test
mov
xchg
mov
adc
push
scas
push
fnstenv
adcb
rcrb
scas
scas
xchg
mov
clc
mov
or
pop
sbb
xor
inc
popa
push
out
mov
sbb
orl
sub
rcl
rcll
insl
xorl
nop
daa
mov
fcomps
inc
int
and
adc
mov
std
pop
fnstenv
cmp
cmp
adc
cmpsb
ret
add
shl
cmp
shl
push
aas
inc
pop
sub
and
mov
in
mov
push
push
cltd
outsb
lods
lods
popa
les
sbbl
out
xchg
aas
pop
adc
or
insb
mov
mov
aaa
xor
fstpl
mov
fs
add
pop
dec
pop
movsl
or
cmpsb
pop
icebp
sti
sub
sti
mov
mov
xorb
imul
inc
dec
mov
xor
andb
jo
outsl
sbb
push
addr16
jno
ffree
ljmp
rol
rcr
xlat
insb
adc
enter
cmc
mov
popf
push
push
mov
ret
mov
daa
cmp
sub
dec
xchg
xor
out
in
pushf
hlt
dec
test
pop
add
enter
xor
push
adc
cli
cs
mov
cmp
mov
shl
in
jle
jno
aaa
test
in
fwait
xorb
cmc
in
mov
out
lds
lods
fucomi
bound
push
sub
mov
insb
sbb
in
mov
cmp
rcl
push
jne
push
hlt
in
or
push
sub
ja
int3
inc
insb
mov
stos
xor
call
inc
cmp
jecxz
aaa
adc
sarl
outsl
mov
sbb
cmp
out
jne
inc
arpl
cmp
lods
mov
outsb
jmp
add
rorb
stc
inc
leave
cwtl
shll
sbb
mov
xor
xchg
out
push
xchg
inc
mov
cwtl
stos
add
pop
mov
stos
push
clc
movsb
xchg
test
fstps
add
fmulp
or
sub
cmp
rorl
mov
outsb
cmp
mov
pop
jns
pop
rol
sub
sarb
ss
xchg
inc
inc
jae
insb
inc
mov
add
sub
out
daa
in
xchg
cmp
push
inc
int3
imul
pushl
xchg
fsubp
cmp
imul
dec
lahf
mov
cmp
mov
pushf
shll
dec
nop
dec
cltd
call
xor
iret
xor
ja
cwtl
iret
or
jno
mov
roll
jnp
orl
addb
outsl
jb
add
fists
pop
mov
leave
xor
ja
mov
pop
iret
dec
lds
std
sub
ja
or
cltd
pop
mov
aaa
mov
js
rorl
inc
popa
pusha
stos
dec
sbb
mov
hlt
push
imul
push
pop
or
mov
mov
cmp
loop
les
mov
out
fidivrs
sysexit
adc
ficoml
add
or
scas
jno
bound
sub
pop
push
and
movsl
scas
aas
ss
jmp
sar
ljmp
fsubl
ss
sahf
scas
push
hlt
pop
fdivrs
adc
inc
vmovd
and
jle
ret
mov
imul
and
and
dec
fsts
insl
dec
out
pop
xchg
adc
add
out
jg
lret
xchg
xchg
mov
xlat
pop
cmpsb
dec
xchg
negl
mov
loope
fnsave
xchg
subb
repnz
pop
sbb
push
movsb
or
jecxz
pop
xorl
gs
test
push
or
push
das
out
inc
sub
repnz
push
idivb
test
pop
xor
cli
xor
mov
cmpl
push
js
push
inc
cmp
sbb
shlb
mov
and
scas
inc
loop
ret
dec
push
cmp
push
jmp
scas
inc
sbb
jmp
xor
sbb
in
rcll
and
add
ret
jmp
shll
aam
stos
rorl
lcall
mov
notb
xor
mov
inc
das
setae
dec
push
mov
jnp
or
pop
incl
pop
cmp
daa
inc
dec
out
xor
testb
pop
dec
xor
lods
inc
shll
mov
push
fdivl
xor
cmp
loope
push
int3
aas
inc
in
movsb
or
dec
ja
arpl
mov
add
sbb
mov
sub
out
movsl
pushl
mov
bound
and
and
inc
popf
out
dec
ds
loopne
dec
push
std
movsl
push
test
mov
xor
movsl
fstpl
mull
incl
pop
call
jbe
xchg
cmpsl
or
bound
mov
dec
cld
je
in
shlb
cmpsl
cmpsb
adc
mov
and
push
pop
leave
and
sbb
fisttpll
sub
push
mov
and
pop
mov
push
lea
dec
mov
call
cs
shll
lods
fcom
jno
inc
jnp
or
mov
mov
and
movsl
iret
pop
adc
int3
push
or
jmp
sub
setbe
push
sbb
adc
dec
push
jne
lods
or
push
sbb
push
enter
pop
add
jae
xchg
jp
jns
xor
push
jnp
insl
dec
cs
or
mov
dec
cmpsl
jg
push
fs
xchg
pop
aam
jge
aam
cld
sub
xchg
cmp
mov
stc
insb
inc
jo
xchg
jle
test
ss
jnp
sbb
mov
pop
test
pop
push
push
jmp
aaa
pop
shlb
push
es
icebp
mov
jecxz
insb
mov
jns
cmp
jecxz
dec
pop
in
sbb
jmp
pop
xor
scas
int
xor
lea
jo
mov
mov
add
mov
jle
cmpsb
hlt
xor
fstpl
call
lds
add
cmp
in
insb
lock
out
sbb
rolb
xchg
lcall
mov
cli
mov
outsb
cs
popa
insb
loop
cmp
loopne
add
push
inc
pop
sbb
xchg
mov
sbb
jo
and
dec
jmp
out
xor
outsl
add
cs
fistl
mov
mov
and
xchg
xchg
loopne
out
add
add
int
xcrypt-cbc
cmpsl
push
sbb
cltd
sahf
popf
jnp
sbb
mov
and
outsb
xor
bound
dec
movsl
pusha
xchg
or
ljmp
pop
sti
insl
mov
aam
aad
mov
xchg
xor
add
add
push
arpl
imul
jg
mov
push
scas
mov
daa
pop
frstor
ds
pop
sub
add
out
cmp
push
aam
mov
leave
xor
add
lret
leave
scas
cmp
and
mov
ss
sahf
rcll
ret
mov
fcmove
xor
shll
xor
frstor
iret
scas
leave
in
jbe
addr16
imul
adc
insl
add
mov
mov
xor
inc
add
xor
push
and
jl
lods
sbb
stc
inc
popl
mov
ss
pop
out
fldenv
in
aaa
sbb
stos
xchg
fdivrl
mov
mov
inc
movsbl
mov
addr16
cmp
mov
and
pusha
or
xchg
fcoml
cmp
loopne
pop
fnclex
mov
pop
xchg
pop
and
push
movsb
lea
sarl
jnp
or
fisubrs
cmp
lret
sbb
push
stos
adc
xchg
jecxz
gs
rorb
mov
dec
jle
xlat
cs
mov
add
jae
iret
push
xor
imul
movl
xchg
loopne
cwtl
mov
sub
cmp
jb
mov
inc
cmp
inc
mov
xchg
aas
sub
xor
push
int
push
push
add
cmp
addr16
xor
pushf
dec
push
sbbb
sub
lcall
adc
cltd
daa
add
and
cmpl
xchg
daa
pop
pop
and
and
mov
rorl
into
repnz
fadd
les
push
je
and
addr16
aaa
lret
pushf
or
adc
mov
xchg
pushf
jnp
cmp
in
aam
fiaddl
mov
and
adc
push
xchg
rolb
cmp
loop
cmc
push
cmp
jne
dec
out
cli
stc
ret
dec
jb
adc
mov
test
dec
sub
cmp
jge
push
scas
and
gs
iret
jb
xor
sbb
out
in
pop
addb
stos
jns
or
mov
add
into
xorb
loope
imul
or
push
inc
mov
push
iret
out
aas
sub
add
fs
adc
sbb
int
test
add
ss
es
jns
cwtl
or
call
cmpb
into
jg
mov
push
pop
sbb
mov
les
jmp
add
or
xchg
sub
outsl
and
push
das
sub
int3
push
sub
push
loopne
or
pop
btc
mov
push
jno
pop
je
shll
aad
adcb
arpl
popf
push
aad
add
push
and
shrl
in
stc
lock
mov
outsb
xchg
lods
push
lret
dec
gs
ret
in
push
jg
sbb
pop
aaa
je
add
mov
nop
xchg
xor
je
aaa
cltd
sbb
mov
mov
stos
sbb
shll
or
jne
jno
mull
jbe
lcall
push
cwtl
cltd
scas
jg
pusha
into
outsb
out
sarl
sbb
sbb
cwtl
sub
imul
pop
mov
xor
or
mov
and
pop
leave
std
scas
xor
mov
mov
xchg
and
stos
jns
mov
dec
jae
or
imul
int3
jo
pop
jns
jmp
pop
lcall
xchg
arpl
fs
int
lock
sbb
mov
sti
and
mov
notb
iret
or
xchg
sarl
xchg
bound
das
xchg
mov
inc
ficomps
rorb
sub
mov
inc
int
rclb
ljmp
lea
mov
hlt
cmp
push
rolb
xchg
jb
or
mov
loopne
popf
cmc
lods
sbb
inc
hlt
clc
xor
push
mov
popa
sbb
sub
repnz
sbb
fildll
adc
aad
insl
aas
fdiv
adc
mov
loopne
jns
and
inc
pusha
push
ret
add
pop
pop
rcll
mov
iret
mov
sar
loope
fidivrs
xchg
push
dec
mov
pop
dec
test
arpl
lds
lret
and
dec
mov
add
mov
js
sub
xlat
add
movsb
cli
stc
push
in
pop
inc
mov
and
xchg
dec
dec
and
cmp
mov
in
pusha
std
jno
std
xchg
lods
dec
repz
sub
imul
jbe
pop
pusha
cmc
insl
dec
pushf
push
mov
mov
in
inc
inc
mov
push
test
push
sbb
pop
mov
xor
loop
and
and
flds
in
stc
jne
jbe
and
xchg
shll
lsl
shlb
scas
shl
in
jnp
subl
stos
dec
call
loopne
xchg
and
fistpl
push
mov
lods
rcrb
adc
imul
jg
pushf
inc
mov
xchg
mov
push
jbe
cmc
mov
mov
dec
daa
jno
dec
xor
out
add
cltd
and
xlat
pusha
jns
adc
mov
movsb
dec
pop
je
inc
dec
notl
and
lds
and
ret
call
cmpsl
test
push
mov
or
aas
mov
rolb
dec
orb
sbb
imull
aam
cltd
inc
adc
shll
mov
loope
into
push
in
insl
insb
xor
jle
cli
push
das
sti
cwtl
push
cmpsb
push
sbb
jp
les
ss
fs
fcompl
data16
add
mov
movsb
jg
mov
sub
das
inc
imul
movb
pop
pop
mov
xor
movq
pop
shr
adc
push
pop
out
adc
mov
xor
das
xor
popa
sub
cmp
stos
pop
imul
shlb
mov
aaa
dec
xor
js
js
sub
ret
mov
leave
mov
sbb
or
fidivl
adc
mov
and
test
adc
xchg
std
test
jge
add
mov
mov
jmp
in
aad
orl
iret
push
out
xchg
test
addl
je
lea
int
jae
into
repz
or
fisttps
ds
int
test
jg
dec
pop
pop
mov
mulb
mov
out
inc
shll
inc
scas
rorl
leave
jb
sub
push
push
aaa
and
push
js
arpl
bound
sbb
inc
test
test
scas
mulb
pop
dec
ljmp
cwtl
ljmp
lret
sub
and
test
jae
sbb
dec
pop
push
cmp
sub
cmp
mov
adc
jbe
jecxz
aas
jg
hlt
mov
in
xchg
push
jbe
xor
mov
jo
xchg
aad
mov
pushf
cld
flds
dec
or
add
mov
fmul
pop
xchg
lock
push
test
dec
mov
sbb
adc
cmp
je
roll
dec
iret
test
lea
dec
inc
mov
xor
mov
mov
mov
push
lret
xor
sub
jns
push
add
loopne
dec
adc
xchg
bound
jno
lahf
mov
and
fidivrl
hlt
xchg
inc
outsl
pusha
cmp
movsl
sti
leave
shrb
ret
adc
outsb
leave
arpl
fcmovbe
xor
xchg
out
add
out
pop
or
aad
out
xor
mov
mov
ficomps
adc
cmp
fistl
hlt
enter
ss
inc
ret
xchg
pop
out
aam
add
gs
or
add
loop
jl
stos
es
mov
add
push
add
push
decl
sub
in
dec
movsl
fcmovnb
cld
jae
test
lret
clc
mov
test
jne
xor
sub
jno
insl
in
sub
lods
or
mov
int
lods
xorb
push
in
ljmp
fs
hlt
push
or
les
ljmp
mov
lret
addr16
push
or
push
pop
xchg
scas
push
cmp
and
xor
sbb
add
jle
pop
das
xor
movsb
test
test
aaa
rcrl
push
jl
inc
and
mov
mov
idivb
outsl
clc
lea
sub
aad
adc
push
push
sub
pop
jle
and
cmp
mov
test
adc
sub
push
adc
pushf
or
xor
into
lret
sub
mov
push
int3
dec
call
xchg
mov
cmp
aam
jecxz
push
repz
nop
femms
test
dec
in
cmp
cmpsl
jo
ljmp
mov
push
dec
jge
dec
dec
stos
mov
imul
cs
inc
jns
testb
xchg
ss
xchg
ds
out
je
mov
lret
in
cmp
dec
sbb
popf
jp
fldt
add
pushf
jns
lret
xchg
and
and
js
inc
js
push
dec
inc
add
mov
xchg
fcoms
pop
arpl
mull
lret
xchg
lea
fldl
mov
push
ljmp
and
fistpl
movsb
and
pop
fwait
mov
sub
or
les
pop
add
xor
sti
sti
negb
pop
out
add
dec
add
sub
fiadds
in
add
lahf
test
and
repnz
cmc
mov
jb
cmpsb
mov
xor
js
push
xor
mov
push
mov
out
cli
cmp
inc
out
jmp
aad
les
xchg
push
testb
mov
mov
xor
dec
fwait
shrb
and
stc
hlt
mov
xchg
jg
aaa
insb
add
cmpsb
pusha
jmp
out
stc
jmp
gs
test
mov
adc
xchg
xchg
cwtl
xchg
jle
cmp
jbe
mov
dec
dec
pop
adc
jecxz
clc
stos
push
mov
dec
xchg
in
push
insb
add
jb
js
push
lods
push
jns
enter
sahf
push
in
push
in
add
jbe
mov
stc
and
pushf
jp
push
sbb
inc
jle
add
shrd
cli
aas
lods
dec
pusha
jecxz
call
dec
imul
lock
jne
or
cmp
shlb
sub
push
adcl
in
or
ret
shll
jae
mov
sbb
popa
rcl
or
xchg
loopne
hlt
lcall
and
adc
mov
mov
mov
sbb
or
adc
fcmovnu
push
in
pop
push
xor
ja
sub
dec
pusha
scas
dec
adc
repnz
jns
mov
jle
cltd
les
inc
ljmp
outsb
daa
or
cmpsb
add
test
cmp
aaa
test
filds
jmp
push
ficompl
iret
test
cwtl
pop
jo
dec
xor
sub
cmpsb
addr16
sbb
mov
sub
push
cld
loop
mov
shrb
mov
push
or
xchg
movsl
pusha
aaa
js
mov
jge
arpl
cld
jmp
dec
xor
sbb
adc
mov
das
cltd
jmp
lock
mov
insl
out
sub
lock
sti
cmp
insb
xor
arpl
push
movsb
icebp
inc
sub
jae
inc
jno
mov
insl
xlat
xlat
push
push
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
dec
dec
add
int
bound
push
push
test
add
scas
sarl
jecxz
rcrb
or
jecxz
cmpl
aad
cmp
sbb
aas
push
shrb
xchg
cmc
xorl
iret
js
mov
pop
cmp
out
int3
xor
and
fisttps
out
js
dec
popf
fpatan
jg
push
mov
aaa
fsubrl
int
sahf
inc
pop
jle
call
mov
aaa
lods
push
sar
or
test
push
dec
add
mov
outsb
mov
stc
bound
out
ret
jge
movb
pop
mov
cmp
pushf
stos
adc
insl
xchg
jp
cmp
adc
ds
adc
fldl
test
mov
and
pop
mov
mov
out
js
jmp
push
inc
inc
dec
ret
xor
scas
idiv
popa
mov
mov
mov
movsb
mov
lcall
fimull
hlt
pusha
lods
mov
fistpl
popa
sbb
mov
andl
mov
push
pop
push
and
movsb
adc
adc
mov
pop
add
pop
call
push
mov
adc
pop
push
push
dec
insl
cmp
pop
dec
xchg
fs
jmp
jbe
mov
xor
pop
popf
test
sbb
aas
aas
popf
imul
mov
mov
push
push
jge
enter
test
xor
jae
xchg
in
adc
lods
jno
pop
pop
aam
xor
push
push
push
int
sub
push
cltd
addr16
mov
fdivr
mov
pop
push
pop
sbb
pop
and
ret
xorb
jmp
out
adc
pop
cli
mov
cmp
push
sti
or
pop
fsubr
loopne
cmp
push
mov
in
ret
and
repz
push
lret
addb
push
push
xor
pop
sti
outsb
lods
inc
cmpsl
out
out
xchg
int3
ret
cmc
in
and
dec
dec
stc
sbbl
pop
imul
add
pop
cli
add
ljmp
push
sarl
or
jle
clc
cmp
mov
cs
outsl
sbb
sub
mov
mov
fsubs
xchg
shlb
dec
sbb
fists
aam
add
subl
mov
mov
jno
leave
sahf
shlb
stos
mov
das
fisubs
fildll
fcomp
sbb
lods
adc
test
repz
jae
movsl
out
je
mov
cmpsb
in
aaa
xchg
faddl
insb
repz
popf
ss
pop
xor
lock
mov
adc
adc
sbb
jmp
pop
mov
aam
inc
and
subb
adc
and
adc
imul
push
loope
jne
testb
pop
aad
fwait
mov
push
arpl
inc
inc
cmp
jnp
adc
adc
les
test
dec
cmp
adc
call
adc
jecxz
mov
sti
aam
jae
leave
pop
inc
mov
or
or
xchg
cmp
les
adc
mov
ffreep
movsl
lea
outsb
test
bound
shrl
daa
inc
imul
call
fldenv
jae
lret
imul
sti
mov
lret
fildll
inc
jecxz
xchg
std
sbb
and
adc
jb
mov
xchg
add
scas
fimull
sbb
je
stos
divb
test
mov
in
test
int
xor
insl
rorb
fiadds
push
jae
js
lret
ret
and
adc
fsubrl
loopne
jnp
gs
push
cmpsl
fmull
out
mov
xchg
subb
or
dec
adc
or
out
or
xchg
or
aad
add
ljmp
xchg
jns
movsl
adc
es
add
gs
dec
nop
sbb
xor
decb
scas
add
pusha
and
dec
pop
insb
aad
mov
shll
shrl
movsl
addb
dec
lret
sti
bound
into
filds
or
gs
imul
and
out
cmpl
dec
insl
stos
dec
scas
int
je
stc
push
mov
out
addb
stc
adc
adcl
insb
pop
ficomps
lds
xor
inc
adc
xor
sbb
and
dec
xor
jle
xor
dec
pushf
shrl
pop
sbb
mov
adc
inc
in
fcmovnb
pop
sbbl
push
popf
pop
jbe
jg
sub
pop
lock
movsl
jnp
ljmp
into
sub
cmp
stc
in
push
das
das
cmp
sbb
ret
inc
rorl
xor
xor
dec
enter
rcr
lret
fs
mov
push
bound
dec
es
pusha
inc
aas
in
lods
clc
faddl
jns
dec
adc
ss
xlat
std
iret
pop
sbb
call
mov
lret
fiaddl
ret
jb
and
jns
cmpsl
add
add
jl
movsl
sahf
out
andl
insl
mov
jns
mov
adc
mov
jmp
cld
xor
sbb
jp
outsb
out
push
insl
pop
cmp
sub
icebp
mov
clc
loopne
shrl
mov
jp
aaa
sbb
mov
in
inc
mov
inc
inc
test
std
push
out
nop
icebp
fsubs
push
adc
sub
lret
pop
dec
std
inc
pop
mov
sbb
rorl
fistpl
lret
push
jp
in
sub
sar
mov
cmp
ret
and
adc
syscall
push
xchg
add
pop
jb
es
repz
jmp
push
inc
push
ficomps
jge
xchg
xor
hlt
xchg
iret
jno
pop
daa
add
xchg
pop
and
push
imul
int
lea
movntps
pop
jnp
inc
mull
and
inc
push
xor
mov
insb
lds
outsb
rclb
xacquire
cmpsb
sbb
sbb
andb
pop
mov
push
pop
test
dec
inc
imul
mov
adc
adc
scas
outsl
cmpsb
and
mov
sub
mov
int
or
int
and
jmp
mov
add
mov
mov
jecxz
outsl
jnp
pop
mov
call
flds
adc
outsb
xchg
jo
xor
pop
sub
dec
push
rcrb
repz
dec
popf
mov
cmp
or
popl
mov
xchg
xor
iret
jmp
push
and
cmp
repnz
push
xor
outsl
out
sbb
mov
or
add
mov
imul
inc
dec
test
fildl
clc
jle
dec
insb
mov
mov
jae
add
lret
cld
loope
mov
cmpsl
add
mov
jnp
sub
loope
fs
mov
out
sarl
sub
fdivl
xchg
mov
test
std
add
movsl
mov
in
sub
xchg
addb
sbb
sub
into
fildll
data16
jg
in
mov
mov
xchg
adc
lea
rcrl
add
das
push
jmp
mov
ja
out
dec
jg
ficompl
push
push
xorl
das
in
dec
ret
push
pusha
jge
adc
adc
cmp
push
or
fidivrs
and
imul
jb
outsl
sbb
cmp
stos
xchg
inc
test
inc
shl
cmpsl
aaa
inc
add
popf
sub
sub
ja
pop
add
add
imul
scas
nop
add
imul
hlt
gs
inc
jne
ljmp
adc
sbb
insb
test
and
cmpsl
hlt
sub
fsts
dec
pop
add
dec
push
cmp
add
imul
test
sub
cmp
and
aas
or
xchg
mov
pusha
pop
out
cmp
and
imul
cmp
push
push
fcomps
push
dec
dec
jecxz
cld
mov
insl
rorb
fcoml
rorl
ret
icebp
pop
lret
jg
fnsave
orl
or
mov
push
ja
lds
jnp
xchg
pop
and
imul
xchg
out
dec
sbbl
loop
mov
cmpl
lock
pop
outsb
je
push
lods
mov
push
ss
jns
inc
aas
or
fsub
add
mov
rcll
lods
dec
mov
shrl
jbe
inc
lahf
popf
jp
push
adc
push
hlt
push
leave
addb
inc
gs
outsb
test
cs
inc
and
push
add
mov
jo
lcall
dec
inc
adc
or
leave
mov
inc
and
adc
jle
stc
lahf
stos
inc
pop
pop
ror
fwait
add
cmpsl
xor
xchg
sub
xor
idivb
xor
add
xor
mov
add
int
call
std
stc
das
cmc
pusha
lods
stc
das
clc
mov
iret
cli
xor
daa
inc
inc
movsl
lahf
jne
add
ret
xor
stos
call
cli
add
pop
cli
test
or
jge
and
adc
testb
push
inc
sub
jecxz
sti
in
and
insb
or
loopne
test
pusha
inc
or
cmp
xor
das
popa
leave
mov
or
dec
push
testl
jbe
aad
int
inc
movsl
dec
or
repz
cmp
rorl
mov
mov
push
mov
les
hlt
ljmp
adc
les
aaa
lods
dec
divb
mov
mov
sub
movsb
mov
ret
or
mov
dec
add
mov
inc
jge
mov
xchg
xchg
addb
rsqrtps
xor
pop
jp
loope
lret
xor
cwtl
loope
mov
lret
out
stos
mov
mov
test
push
vrsqrtss
cwtl
or
mov
sub
in
loope
ds
js
push
sbb
out
sub
lods
xchg
adc
sbb
mov
jno
inc
ja
aad
mov
pop
test
movsl
fld
ror
mov
xchg
sti
inc
and
xchg
fsubrl
aaa
in
push
test
in
and
fdivp
push
into
cmpsl
fs
cmp
fwait
sub
aad
push
das
cmp
or
dec
jmp
mov
push
mov
popa
fmuls
mov
and
arpl
orb
iret
scas
gs
insb
mov
push
adc
jge
in
lock
clc
arpl
iret
rsqrtps
shlb
sbb
icebp
jae
cmp
and
xor
sub
xor
jge
jmp
xchg
mov
lock
push
lock
pop
cltd
and
scas
mov
sbb
dec
hlt
mov
cmpsb
xchg
cmp
push
mov
stos
sub
inc
test
cmpsb
sbb
dec
inc
push
push
sub
sub
hlt
xchg
leave
loope
dec
stos
test
pop
idivb
imul
ret
sbb
test
sbb
add
xor
cmp
jp
cmp
aaa
pop
dec
js
and
fmuls
insb
ret
cld
aad
or
out
sub
lret
nop
inc
lret
test
cld
pop
inc
cmpsl
enter
aam
movb
cmp
add
orl
sub
rcll
cltd
push
and
cmp
pop
imul
ret
les
sbb
stc
cmpsl
dec
loopne
jle
lcall
pop
mov
cmp
lock
mov
push
xlat
pushf
push
push
fwait
in
xor
cs
xchg
dec
repz
aaa
pusha
xor
outsb
cltd
call
dec
mov
ret
push
mov
lock
int
sbb
xchg
jne
sub
or
push
ds
addr16
dec
push
xchg
inc
adc
rcll
inc
les
fcomi
into
int3
cs
adc
dec
jne
repnz
imul
hlt
mov
pop
inc
leave
dec
imul
jmp
sahf
enter
dec
lcall
fcomi
into
mov
cmpsl
rolb
fsts
dec
lret
push
fwait
test
sub
outsl
adc
cmc
pop
mov
dec
sbb
cli
pop
daa
adc
cmp
stos
or
movsb
mov
xor
sub
jo
fneni(8087
fnsave
sbb
jo
adc
nop
or
movsb
ss
push
mov
adc
ficoml
sahf
sar
lcall
iret
mov
icebp
push
aad
mov
imul
out
jecxz
push
aad
jno
popf
cmpsl
dec
mov
adc
insb
not
or
adc
icebp
inc
xorb
mov
inc
bound
or
in
rcl
std
or
arpl
hlt
repz
aam
mov
inc
mov
insb
and
rorb
fs
int
mov
or
testl
jecxz
testb
rolb
aas
jb
mov
adc
ficompl
mov
push
jg
xchg
fsubrl
jle
jmp
inc
inc
cmp
sahf
scas
pop
cmp
xor
jo
shrb
jge
cmp
mov
jg
sub
fisttpll
xchg
jne
in
mov
rolb
mov
mov
and
push
xchg
cs
jge
ret
and
sbb
repnz
push
imul
hlt
mov
sbb
movsb
xorl
sbb
lahf
int3
lods
and
xchg
icebp
mull
dec
xlat
orb
sub
mov
popf
push
lahf
inc
cmp
stc
addr16
push
popl
inc
ror
lock
adc
sbb
fs
sub
in
les
mov
lds
ss
dec
xchg
cmp
xchg
jo
aas
xchg
pushf
jge
in
je
leave
shlb
jmp
daa
sahf
xor
or
notb
sub
xor
sub
lahf
cwtl
inc
scas
xchg
mov
mov
add
jle
roll
mov
pop
in
repnz
lds
shll
mov
and
fcoms
ret
xor
push
push
aad
jge
icebp
idivl
xchg
test
lea
pop
insb
hlt
push
dec
cld
test
das
popf
or
loopne
mov
jg
pop
xchg
ljmp
cmp
call
in
push
dec
rcrb
adc
arpl
mov
mov
dec
lods
adc
cmp
loop
lret
dec
int
xlat
dec
paddw
imul
push
icebp
push
inc
and
xchg
cmp
in
inc
jns
xor
imul
js
scas
mov
or
gs
stos
enter
movsl
xchg
add
dec
rcrl
pushf
inc
or
or
stos
pushf
xchg
fldcw
or
mov
inc
lock
cmc
xchg
insl
jle
pop
pop
mov
push
addr16
sbb
and
pop
sub
jb
mull
adc
cmp
insl
mov
xchg
popf
movsb
pop
sbb
add
push
movb
xchg
sbb
push
mov
arpl
or
ljmp
xorl
mov
test
cmp
out
mov
movsb
or
les
lods
push
mov
push
sahf
jnp
out
jg
test
lea
fisubrl
mov
arpl
out
mov
mov
dec
jae
or
cmp
out
in
arpl
imul
popf
inc
mov
dec
mov
iret
out
lret
xlat
lcall
or
mov
push
cmpb
shll
outsb
xor
dec
adc
outsb
mov
jl
jbe
dec
inc
ret
pop
pushf
stc
enter
daa
jmp
mov
dec
mov
sub
push
rcrl
pop
dec
outsb
sbb
and
daa
rol
pop
test
jae
mov
jmp
ret
mov
clc
pop
cmp
mov
sub
fstl
rcl
cmc
out
mov
pop
repz
pop
dec
cltd
cwtl
int3
sbb
push
mov
mov
inc
pop
imul
je
mov
and
adc
pop
xchg
and
jecxz
inc
lea
sahf
mov
lods
or
rol
mov
mov
stc
lods
push
imul
push
adc
push
push
rcll
and
pusha
icebp
push
add
lret
sbb
add
push
mov
add
in
mov
xchg
fsubl
mov
mov
popa
rcll
stc
sub
ret
jl
xor
jg
ret
sub
sub
jmp
xchg
data16
cmpsl
inc
lea
push
bound
and
xchg
leave
sbb
sbb
stc
out
ljmp
add
xchg
arpl
mov
mov
in
mov
inc
cmp
dec
inc
dec
out
and
add
daa
in
ljmp
aad
sbb
cmp
push
push
cmp
or
movsl
iret
adc
shl
mov
fildl
cmpb
cmp
and
loop
xchg
sbb
cmp
mov
pop
sbbl
sahf
mov
ds
xlat
adc
mov
mov
fiadds
mov
dec
addl
movsl
cmp
cmp
push
jbe
ret
in
lret
xchg
inc
jmp
divl
sbb
fstpt
shll
add
lods
xor
cli
xor
bound
xor
dec
mov
jns
adc
inc
out
sbb
ret
addr16
and
lret
inc
iret
adc
dec
push
lahf
push
xchg
add
sbb
sub
adc
das
ficoms
addl
lret
jbe
cmp
les
sub
test
data16
popa
jmp
dec
gs
int3
adcb
adc
ret
gs
push
icebp
push
adc
pop
pop
stos
icebp
ja
inc
cmpsl
ret
mov
add
arpl
stos
mov
idivl
sbb
jle
ja
nop
ljmp
mov
movsl
cld
je
lahf
xchg
aaa
jge
pop
or
and
cltd
icebp
bound
jmp
adc
pop
mov
fisubrs
pop
xor
outsl
mov
mov
cmp
and
fucomip
and
or
adc
cmp
aad
stos
mov
imul
cltd
jle
test
add
mov
mov
sqrtps
jns
sbb
movsb
test
repz
test
popf
pop
cmp
xchg
xorl
jo
jp
pop
pusha
add
fisttps
imulb
adc
iret
cld
adc
sub
jmp
movsb
fiadds
or
cmc
test
addl
and
push
adc
jl
sbb
les
lret
insl
in
xor
jecxz
adc
add
lock
pop
pop
dec
fldenv
jp
or
xchg
in
lret
and
pop
mov
cmp
dec
cli
imul
fmul
lea
icebp
xchg
pop
test
sbb
jns
cmp
xor
int
and
and
outsb
es
adc
cld
xchg
icebp
stc
add
mov
push
movsb
cmc
or
push
push
js
cmp
mov
mov
out
scas
mov
sbb
mov
cmp
data16
in
ret
jp
lods
mov
pop
shlb
xlat
inc
jle
lret
repz
push
mov
mov
mov
ds
scas
aas
inc
pop
fnstsw
push
push
jge
inc
ror
daa
xor
xchg
scas
or
cmp
and
and
xlat
mov
loop
push
cli
pop
std
sar
in
les
ljmp
xchg
add
ja
pop
jmp
out
pop
or
add
pop
sub
repnz
icebp
lock
orb
inc
or
pop
sbb
lods
fstpt
xor
pop
test
sti
mov
xchg
mov
ljmp
cmpl
push
mov
dec
rcrl
mov
sub
sub
adc
fstpt
mov
adcl
scas
push
repnz
and
mov
sti
mov
popf
movsl
sub
gs
fisubrl
insb
pop
xchg
adc
test
sbb
mov
mov
ret
add
int
pop
pop
arpl
push
push
mov
cmp
fmull
push
pop
mov
mov
ret
test
cmp
or
fistps
int3
leave
testb
cmp
dec
fsubrs
pop
pop
jge
fiadds
test
mov
inc
inc
int3
imul
and
sbb
xor
pop
mov
in
xor
std
imul
nop
xchg
cmp
stos
jns
sti
loop
imul
cmpsb
or
cmp
stos
inc
sbb
pop
cmp
lret
addr16
dec
inc
xchg
xorb
and
clc
das
xchg
into
inc
lea
pop
xor
cmp
or
jno
cli
or
aaa
in
call
inc
das
xchg
nop
mov
sbb
mov
arpl
or
lods
popa
sbb
jle
cmp
xchg
fdivp
out
add
pushf
call
jg
test
xor
fwait
stos
cs
je
sub
pop
pop
mov
jge
jno
mov
pop
push
xchg
fstl
xchg
push
adc
jp
popf
dec
in
into
and
aad
decl
cltd
int3
jae
xor
add
stc
cmpsl
jnp
cmp
imul
jecxz
add
jge
mov
adc
lock
ljmp
je
xor
testl
lods
and
or
pop
mov
push
pop
sub
sbb
dec
push
push
or
push
int3
xchg
mov
mov
loop
and
cmp
dec
dec
adc
mov
xlat
lahf
push
jae
int
adc
std
fucom
xor
or
dec
pop
es
jl
in
xor
pop
and
mov
test
jno
sub
mov
and
loope
push
or
ret
in
and
dec
lahf
cmc
je
shrb
ja
test
cmp
lea
sub
imul
lods
sbb
stos
loope
inc
lret
sub
adc
inc
sbb
icebp
sahf
xchg
add
mov
fadds
push
jecxz
in
or
jo
movsb
cld
fdivs
pop
cmp
addb
sub
push
sub
lods
test
adc
push
jnp
sub
jp
imul
sbb
inc
jns
dec
adc
push
in
xchg
cmc
add
loope
push
lods
ret
jno
xchg
jl
pushf
push
in
shlb
or
inc
icebp
sti
fs
clc
adc
ret
cmc
pop
sbb
mov
cltd
lret
addr16
fbstp
xor
sahf
inc
jge
mov
mov
cltd
dec
or
add
das
or
sbbl
imul
mov
stos
sbb
sbb
call
das
inc
lret
adc
xchg
test
jns
pop
add
out
sbb
xor
ficoml
inc
push
xchg
xchg
enter
test
push
inc
in
movsb
sub
xchg
xor
inc
aas
mov
clc
push
push
das
inc
add
push
ja
negb
and
pusha
xchg
insl
jecxz
mov
mov
flds
or
pop
aad
and
mov
test
jl
outsb
andl
push
dec
pushf
ljmp
adc
daa
adc
sub
mov
mov
cmp
pop
sbb
adc
lds
mov
jmp
nop
dec
mov
mov
cmp
jbe
iret
shl
cmpsl
cmp
icebp
std
int
std
mov
pusha
je
or
sbb
jmp
lds
adc
sbb
ret
inc
out
inc
sbb
mov
mov
fnsave
cmp
xchg
sbb
fwait
cmpsb
pusha
jb
addr16
je
pop
insl
stc
jno
push
cmp
stc
xchg
iret
pushf
ljmp
repz
repnz
cmp
and
sbb
ret
jecxz
mov
adc
dec
out
lods
dec
movsl
fdivl
lds
adc
sub
sbb
cmp
lods
dec
out
pop
xchg
testl
cmpsb
aaa
rclb
rorb
sti
cmp
into
jb
scas
testb
fs
dec
jne
pop
dec
mov
mov
and
fisubrs
xor
lret
stos
mov
lods
repnz
cld
push
insb
lret
je
data16
jno
pop
shll
jmp
mov
jae
cmpsb
mov
ja
mov
imul
mov
popf
xor
in
lods
jb
xchg
pusha
cwtl
add
mov
fidivrl
or
int
or
aam
add
gs
fld
or
aaa
imul
insl
adc
and
pop
fidivrs
adc
pop
pop
dec
ja
fisttpll
stos
xchg
jae
mov
sub
fmul
test
dec
mov
mov
push
in
and
cmp
jmp
jp
xchg
xlat
push
jl
and
mov
mov
dec
cmp
ret
std
xchg
sub
clc
mov
add
leave
idivl
xchg
jo
addr16
lods
push
clc
out
inc
in
xchg
andb
pusha
push
push
lods
js
cld
pop
in
and
sahf
ljmp
sub
xchg
mov
xor
ljmp
stos
fisttps
xchg
xor
pop
cmc
mov
mov
mov
mov
lds
push
rol
in
pusha
mul
stos
dec
or
mov
pop
adc
and
stos
dec
xchg
loop
lods
lret
push
inc
and
add
sahf
push
fldl
xchg
repnz
mov
and
xchg
jg
push
ljmp
sub
aas
movsb
sar
test
stos
jl
add
cwtl
imul
pop
xchg
mov
mov
daa
pop
mov
push
jae
adc
mov
push
je
out
test
xchg
aad
aad
sbb
cmp
mov
popf
cmp
out
pop
stos
into
cmp
in
mov
cmp
cltd
cltd
xchg
subb
mov
jle
ret
dec
pop
pop
decl
in
stos
enter
popf
push
mov
push
sahf
call
inc
fstpt
ss
je
pop
xlat
jae
int
data16
sub
inc
leave
into
ds
leave
into
fsubrl
sub
test
cmp
pop
jmp
movsl
insb
mov
testl
loopne
loope
outsl
pushf
pop
and
ret
and
add
jp
mul
loop
push
sub
cs
je
inc
hlt
inc
ja
pop
mov
jnp
push
sbb
jl
leave
or
shr
jg
mov
ja
movsl
ss
dec
push
jne
xchg
aad
in
inc
mov
lahf
hlt
sbb
pop
cmp
or
pusha
pop
aam
mov
sbb
add
mov
in
jmp
sbbb
mov
loope
scas
push
in
call
push
movsb
stos
mov
inc
data16
xchg
repnz
push
jb
xchg
push
or
pop
inc
and
jo
sti
out
add
dec
int
stc
out
and
icebp
shrb
xlat
stc
mov
sbb
outsl
mov
in
or
inc
dec
or
fadds
pushf
loop
mov
mov
adc
push
lret
push
fs
iret
fidivl
pop
repnz
dec
adc
jle
mov
in
inc
inc
lcall
lahf
negb
in
js
xor
xchg
mov
adc
bound
or
jnp
dec
xor
aas
mov
adc
fsubs
pop
push
test
in
dec
xor
inc
into
sbb
es
jmp
sar
inc
sarb
lods
lahf
js
sbb
dec
inc
mov
mov
in
cmp
xor
mov
mov
in
insb
mov
rorb
es
cmp
push
mov
dec
cmp
repnz
jbe
adc
mov
jg
mov
outsl
jne
aaa
in
sbb
pop
push
lock
les
jb
sbb
or
pop
mov
sarl
scas
loope
fmulp
dec
mov
push
xchg
inc
or
push
fwait
jp
fs
xor
aas
movsb
jae
jbe
mov
loopne
sbb
xchg
and
xchg
aaa
or
loope
loopne
or
or
jnp
fimuls
pop
add
loop
lods
lret
cmc
pop
movsb
sahf
xor
addl
std
push
and
inc
mov
xchg
xchg
repnz
insl
adc
sub
push
vpsubb
mov
aaa
orl
cmpsl
xor
loop
shlb
mov
push
jae
add
ss
lahf
aaa
mov
xchg
lds
jp
pop
inc
fbstp
out
adc
xchg
jmp
imul
cmp
push
mov
inc
cs
and
fs
pop
sbb
aas
cmpsl
ja
jmp
xchg
pop
shrb
lahf
daa
mov
mov
rcrb
pop
push
pushf
popf
stc
or
fcoms
loop
test
out
push
repz
sbb
insb
jno
xchg
ret
idivl
icebp
pop
sarl
or
inc
inc
in
mov
and
stc
test
push
and
nop
push
test
cs
ss
xchg
out
lret
ret
out
xchg
mov
mov
xchg
push
cmp
ret
xchg
add
out
clc
xchg
push
fistpl
fwait
dec
xor
outsb
ret
movsl
and
push
jne
fadd
loopne
clc
push
fdecstp
mov
aas
mov
cmpsl
mov
mov
test
gs
lds
push
js
fldt
sub
dec
aas
or
cmpsl
test
inc
pop
subb
outsl
test
aaa
cmpsl
mov
xchg
mov
pop
enter
inc
add
fidivs
mov
fisubl
sbb
jecxz
loopne
cli
fldl
mov
imul
aaa
dec
and
sub
lea
cwtl
sub
xchg
js
es
sahf
pop
jle
push
aas
mov
aad
push
ja
test
rcll
push
push
dec
popa
in
push
push
adc
int3
pop
ljmp
into
dec
dec
push
orb
or
leave
or
pushf
or
add
push
repz
nop
adc
decb
imul
dec
cmc
jmp
push
or
and
lea
in
pushf
imul
or
aaa
push
push
inc
push
aas
mov
sub
xchg
ja
dec
adc
loopne
imul
xchg
hlt
add
sub
shr
out
xchg
test
push
mov
decl
enter
inc
aam
cli
mull
cli
jb
inc
sbbl
jecxz
mov
jl
arpl
repnz
shlb
dec
jl
aad
jge
pusha
mov
mov
sar
std
popf
js
mov
jo
out
jge
aas
mov
jmp
scas
xchg
adc
movsb
fs
push
aaa
stos
push
ror
and
fmul
inc
jae
dec
pop
and
or
sbb
fmulp
js
xor
out
mov
loop
cmpsb
daa
adc
or
imul
cmpb
xor
aas
and
xchg
and
out
stos
dec
xor
test
imul
cmpsl
jns
popa
inc
imul
mov
clc
aaa
add
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
popf
int3
scas
test
add
fimull
and
jnp
pop
jne
and
icebp
mov
lahf
push
add
cmp
adc
push
jne
pop
mov
imul
push
cmp
mov
cmp
push
and
mov
aas
dec
mov
fildll
jle
jne
fs
jbe
push
xchg
lods
push
les
mov
jl
xchg
std
movswl
cltd
push
mov
sbb
test
jno
out
mov
add
dec
je
aaa
popl
sbb
cltd
push
jb
insb
dec
fadds
add
add
sub
adc
cmp
out
pop
xchg
push
pop
xchg
add
mov
adc
cltd
fwait
sbb
outsl
lea
lret
in
sbb
out
loope
inc
addr16
pop
test
andl
adc
les
pop
xor
lahf
scas
adc
fisubrl
je
cli
inc
cmp
push
mov
lret
mov
sbb
inc
int3
repnz
inc
cwtl
pop
lcall
cmp
sbb
fidivs
int
and
out
push
mov
mov
insb
cltd
sub
movsb
jbe
cs
sbb
sub
xchg
imul
sti
mov
roll
pop
cmp
xchg
repz
add
pop
sub
sub
addb
xchg
add
mov
mov
add
add
fsub
or
push
pop
cmp
insl
pop
scas
std
ret
jno
pushf
mov
aas
pusha
xor
sbb
jnp
ret
in
inc
push
fucomi
stos
aad
les
dec
mov
sbb
loop
push
push
hlt
enter
inc
fwait
mov
popa
fninit
xchg
and
adc
shlb
addl
addb
push
clc
cmc
orb
add
fisttpll
adc
pop
loope
out
and
data16
fdivl
das
and
aam
aam
ljmp
je
push
jnp
jp
xchg
add
pop
add
push
cmc
jb
jg
lret
pop
push
cmp
es
mov
inc
xchg
push
test
into
jns
sub
subl
push
mov
inc
inc
and
sbb
mov
jge
xchg
ret
ja
adc
add
clc
loope
or
jle
cmp
inc
and
pop
lods
jecxz
mov
loopne
push
adc
stos
push
stos
outsl
push
push
push
gs
xor
xor
gs
jbe
pop
mov
and
and
sbb
iret
sarl
and
sbb
jbe
iret
and
xchg
jle
stc
mov
adc
add
add
mov
sti
cmpsl
mov
dec
mov
pop
mov
add
ja
sub
into
mov
or
xchg
push
int
push
adc
mov
xchg
lcall
xchg
or
push
inc
enter
push
mov
cld
jbe
mov
fwait
shlb
lcall
sub
pop
ret
jg
push
iret
push
lods
cmpsl
push
dec
aad
mov
ja
adcl
xchg
inc
push
repz
adc
or
xchg
test
lret
mov
jl
loope
or
mov
mov
js
sbb
shll
dec
in
or
imul
pop
xchg
jae
cli
out
lods
cmp
stc
stc
mov
mov
add
bound
jne
arpl
mull
sub
jmp
shlb
popf
xor
mov
push
movsl
ljmp
es
ret
sbb
lret
out
adc
dec
push
xor
dec
jb
ja
lods
sbb
arpl
rorb
clc
int
xchg
sub
jns
add
xlat
out
insb
add
rclb
fistps
xchg
ss
add
lret
dec
in
fldt
inc
gs
shrb
xchg
lods
sbb
and
addb
mov
sub
jae
add
add
inc
gs
aaa
push
loop
and
add
add
push
push
or
and
mov
add
add
sub
push
cmp
test
mov
mov
mov
xchg
les
daa
adc
repz
push
rorb
sarl
scas
pushaw
lea
dec
addb
shrb
out
iret
dec
dec
idiv
add
jp
pop
out
or
mov
sbb
sbb
pop
mov
pop
inc
insl
xlat
pop
cmp
stos
sub
jle
dec
into
inc
outsl
sbbl
addr16
shll
incb
add
add
sub
das
jle
jg
imul
arpl
add
lods
add
add
pop
orl
scas
nop
pop
pop
add
xlat
and
xchg
mov
in
sub
mov
add
sub
sub
loopne
push
sbbl
push
xchg
setne
lcall
fldl
jle
out
xchg
pushl
inc
repz
xchg
fwait
or
and
and
inc
adc
fsubl
lock
push
mov
xor
add
inc
jb
sbb
mov
jmp
call
dec
dec
ja
out
fisubl
or
pop
fisttpll
cli
inc
sub
jl
sub
add
add
and
mov
mov
sub
sti
stos
add
lods
add
add
adc
js
test
das
aaa
ret
dec
inc
inc
jo
mov
test
cmp
or
pusha
xchg
inc
movsl
out
scas
push
mov
add
mov
pop
sbb
and
dec
push
sbb
xorb
cmp
loopne
push
pop
add
out
enter
mov
ja
push
idiv
inc
cld
mov
cmp
push
pop
jmp
iret
movsl
cs
mov
mov
inc
mov
dec
js
imul
sub
cmp
mov
and
mov
sub
push
xor
jns
cmp
testl
ret
or
ret
lods
sub
mov
ljmp
add
sub
push
mov
mov
mov
jl
push
inc
mov
stc
mov
sbb
mov
and
push
lock
aam
cmc
cltd
mov
loop
js
lea
push
jmp
cmpsb
lock
testl
movsb
and
ds
push
mov
roll
push
call
fsubr
fmulp
popa
xlat
adc
jp
xchg
dec
mov
jae
aad
sub
ja
into
mov
push
fistl
sar
mov
outsl
out
daa
mov
mov
or
std
mov
mov
and
sub
test
jne
divl
les
fld
add
ror
outsl
clc
shlb
lods
add
lods
add
add
push
sti
adc
pop
outsl
jne
lea
xchg
sub
jmp
jge
ja
jmp
jae
jns
and
mov
jne
pop
inc
int
adc
jne
int3
daa
pop
jb
imul
das
movsl
xor
lods
orb
jge
stc
fwait
mov
icebp
mov
xor
mov
into
ljmp
lds
popa
sbb
push
sub
mov
shll
stos
clc
cmc
lods
enter
aaa
aam
in
loope
out
scas
jle
and
into
adc
stos
sub
xchg
mov
loopne
aad
popa
pop
lock
out
repz
mov
ret
in
ljmp
add
add
add
lea
sbb
lods
xchg
mov
test
sbb
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
out
iret
inc
jnp
add
lods
add
add
inc
sahf
cli
mov
or
pinsrw
add
cmpsb
xor
lock
mov
jg
test
or
cmp
mov
hlt
and
arpl
sbb
xor
test
inc
popa
sti
pop
push
adc
dec
into
jmp
in
mov
add
jg
add
dec
test
sbb
ss
rolb
cltd
add
dec
mov
xchg
into
adcl
sub
mov
xlat
dec
dec
adc
insl
test
loope
cs
shlb
adc
inc
or
mov
add
add
mov
push
mov
xlat
push
sbb
js
lods
add
add
out
lcall
jb
test
ja
insl
in
mov
arpl
outsl
fsubl
movsl
sbb
or
jmp
pop
push
out
and
mov
xchg
sbb
sbb
pushf
mov
sub
sub
xor
adc
shl
pop
cmc
pop
dec
or
sub
xchg
add
hlt
test
adc
shll
loopne
push
cmp
test
add
mov
mov
sbb
rolb
sub
scas
test
inc
cmp
push
ret
or
push
and
fwait
sbb
push
mov
jg
ljmp
push
je
xchg
add
lods
add
add
fsubr
sub
fs
inc
pop
mov
pop
test
add
cmpsl
insl
ljmp
mov
fisubs
cmpsl
popf
test
cltd
jb
and
pop
pop
pop
ja
stc
cmp
popf
ljmp
repz
scas
prefetch
jg
inc
scas
fdiv
or
push
sbb
movsl
pop
mov
jo
xor
push
jecxz
pop
mov
mov
inc
push
mov
cwtl
fcoml
fcoms
jmp
lret
cmp
push
cmp
or
xor
cmpsl
fmuls
idiv
das
inc
cmp
cmp
in
fimuls
ljmp
lods
add
add
lret
bound
xor
xchg
cmp
nop
inc
in
push
sti
jmp
or
cmpsl
ret
push
rorb
stos
lahf
ficoml
mov
cmpsl
cmp
push
mov
ss
mov
pop
stos
push
inc
loop
mov
jge
sti
xor
lret
mov
xchg
mov
stc
lea
and
push
jp
cld
pop
xchg
lret
es
cwtl
xchg
adc
mov
mov
lcall
cmpsb
stos
and
movsb
setnp
pop
fcmovu
jbe
push
in
push
mov
mov
movsl
jne
dec
xor
sbb
loopne
cld
js
add
add
mov
sbb
std
negb
sub
add
pop
sub
add
fsubs
les
lcall
push
imul
sbb
sub
sub
pop
push
loop
or
icebp
movsb
sti
out
and
jge
pop
cld
lods
inc
jl
lods
in
jb
mov
pop
loopne
xchg
mov
outsl
sbb
lcall
pop
pusha
shlb
cmp
es
lret
mov
and
mov
dec
lret
lods
jne
aas
mov
push
inc
std
push
aas
adc
xchg
ljmp
pop
imul
mov
adc
loope
nop
enter
push
mov
in
jne
daa
and
mov
mov
fidivl
xchg
mov
scas
fbstp
inc
mov
aad
cltd
add
lods
add
add
mov
in
and
vaesenclast
loop
adc
daa
imul
fwait
adc
sti
jmp
adc
rcr
jo
mov
add
sub
cmp
scas
cmp
cmc
je,pt
daa
pop
je
icebp
insl
out
xchg
push
loope
adc
imul
inc
push
stos
mov
sarb
pushf
rolb
je
ret
mov
inc
ljmp
mov
jmp
fiadds
dec
jbe
add
js
and
mov
js
dec
aad
mov
cld
movsw
std
out
mov
add
add
pop
sub
loop
lcall
icebp
ret
out
paddq
and
movsl
test
imul
ljmp
ss
mov
push
mov
aas
cmp
jno
lcall
adc
sti
mov
movsb
test
add
xchg
sbb
xor
ss
dec
fbld
jmp
xchg
arpl
mov
xor
mov
sub
lea
add
outsl
add
hlt
cld
or
cmpl
or
cs
pop
cmpl
xor
lcall
ljmp
add
add
add
push
add
xor
jb
insl
xor
and
das
fwait
add
lods
add
add
push
xor
xchg
mov
mov
mov
xor
mov
adc
pop
push
clc
cs
xchg
xchg
add
ds
add
mov
push
cli
jne
fs
scas
xchg
xchg
clc
inc
daa
jnp
shl
lods
pop
mov
cs
es
or
mov
mov
jae
imul
cmp
lock
iret
inc
loope
imul
and
in
addr16
lea
xchg
fisubrl
dec
jg
outsl
fdivl
sub
jg
add
mov
xchg
rcll
pop
cmp
add
mov
out
xor
add
lods
add
add
xchg
mov
xchg
outsb
das
mov
sbb
push
sarl
pusha
divl
sbb
bound
jnp
cltd
outsb
cli
mov
ja
in
dec
mov
imul
outsb
imul
mov
sub
lea
sub
lods
lods
mov
pop
lods
cmp
lahf
fildl
clc
nop
das
call
mov
aaa
mov
je
dec
inc
push
arpl
lcall
mov
mov
jg
mov
jmp
imul
loop
or
pop
int3
outsl
inc
inc
loop
adc
jp
js
add
add
mov
jmp
fimull
ds
add
sub
popf
xchg
pushf
xor
inc
cmp
test
and
call
int
push
add
ljmp
sar
aas
ret
pop
mov
pop
out
clc
pushf
jbe
gs
aad
xchg
add
and
aad
mov
xchg
add
cmc
xor
adc
test
aam
pop
icebp
loopne
test
cmp
xchg
repz
shrl
bswap
inc
ret
mov
mov
or
inc
push
stc
stos
jae
inc
add
test
jne
sbb
sub
mov
mov
scas
xchg
sbb
inc
in
lds
add
add
pop
iret
pop
aad
ss
dec
jmp
popf
add
lods
add
add
jl
jp
push
and
paddb
push
ds
xor
push
mov
or
cmc
pop
lcall
test
add
sub
enter
sbb
add
adc
test
cwtl
dec
jbe
std
cmp
daa
lcall
adc
sbb
mov
inc
inc
testl
dec
xchg
and
out
cmp
add
pop
or
cmpsl
sub
ja
jnp
and
push
rclb
sbb
pushw
mov
jns
and
cltd
mov
lahf
rolb
add
add
cld
adc
popf
add
lods
add
add
lods
imul
jbe
jl
ds
sbb
sarl
cs
mov
popa
pusha
inc
xor
push
jns
and
in
notl
pushf
int3
xchg
pop
jne
or
and
cwtl
pop
rclb
inc
insl
das
out
sbb
adc
cmpsl
mov
and
sub
fwait
xchg
xor
out
or
lea
inc
jns
xlat
loopne
mov
lahf
pop
or
dec
pusha
popa
int
or
push
add
dec
push
push
int
stc
jno
and
fstpt
js
adc
and
adc
push
outsb
jae
lret
jle
repz
insl
orl
add
cmp
mov
inc
ljmp
mov
sbb
sub
inc
cmc
and
outsb
adc
pop
mov
add
outsl
add
mov
xor
pop
aas
cmp
push
ficoml
cmp
les
cmpsb
popa
mov
mov
out
aad
inc
loopne
or
mov
or
loope
cmp
sub
pop
lret
mov
mov
imulb
and
sbb
push
leave
jo
in
call
outsb
adc
lcall
fisttps
mov
das
cmc
adc
adc
mov
lds
aaa
lahf
add
lods
add
add
imul
sub
or
cmp
xor
mov
out
js
lock
xchg
daa
pop
adc
cmp
test
mov
jg
xlat
fisttps
xchg
inc
inc
pop
nop
push
loopne
push
sbb
jg
push
mov
clc
and
dec
xor
enter
xor
ss
sbb
jbe
cwtl
movl
lods
push
mov
andb
mov
push
inc
push
es
les
icebp
insb
stc
jne
hlt
dec
jmp
or
xor
fs
aad
inc
dec
lahf
in
cld
dec
inc
mov
mov
push
add
add
add
mov
lock
mov
rcrb
sahf
jecxz
add
lods
add
add
pop
ret
cmp
clc
mov
and
stos
fimuls
push
mov
rcll
xchg
sub
rorl
es
lret
orb
neg
lds
cmc
in
xchg
mov
push
inc
je
pop
movsl
test
jnp
xchg
cmp
jo
adc
sbb
movsl
repnz
ljmp
fcmovnb
or
xor
inc
push
lcall
mov
jle
sbb
push
in
mov
nop
lods
or
outsl
mov
and
adc
mov
das
mov
cmp
popf
int3
add
pop
lahf
rcr
loopne
ds
aam
push
lock
cmc
das
sbb
xchg
iret
imul
add
dec
nop
mov
xchg
add
cmpl
pop
je
lea
push
jmp
test
push
ja
into
xor
cmp
xchg
jmp
sub
mov
fucomp
mov
xchg
stos
pop
test
xchg
scas
in
pop
pop
js
lock
or
ret
das
jbe
inc
xor
jne
int3
adc
test
push
or
xor
in
dec
arpl
out
aam
sahf
fwait
inc
and
std
push
popa
rcr
jmp
sbb
lds
enter
je
xor
cmp
or
std
in
movl
jnp
int
xchg
inc
cmc
sti
fildll
inc
sub
add
lods
add
add
enter
lahf
inc
mov
inc
pop
test
inc
aas
pop
add
and
arpl
sbb
lahf
das
mov
push
cld
dec
scas
dec
imul
cmp
int3
push
in
and
pushf
addr16
hlt
imul
adc
ret
xchg
inc
push
mov
lret
pushf
or
jno
jl
out
aas
daa
cmp
call
jl
push
pusha
dec
sub
movsl
inc
inc
es
push
movsb
out
jle
or
icebp
dec
rcrb
shll
pop
fcomi
es
aam
sub
xchg
xchg
pop
mov
js
leave
ljmp
add
add
add
adc
testl
ret
mov
add
outsb
xchg
ds
aaa
pop
js
mov
sarb
sub
aaa
lods
sahf
add
sbb
inc
pop
lods
jge
dec
jmp
aam
mov
jno
andl
inc
push
mov
lea
push
pop
in
enter
in
test
scas
test
and
popa
sub
movsb
in
adc
je
cmp
sub
inc
aad
or
xchg
or
in
xor
inc
insb
sub
adc
inc
cmp
or
in
shlb
pusha
hlt
inc
xor
jns
sbb
stc
orl
fcoml
daa
push
imul
notl
add
lods
add
add
addr16
pop
xchg
xlat
ret
lret
loopne
mov
jno
in
mov
jecxz
repz
push
push
out
test
stos
dec
ss
out
inc
sahf
inc
nop
or
sub
popf
test
sub
cmp
jp
popf
lahf
ret
clc
xor
pop
sub
sbb
pop
fs
out
pushf
insb
and
fcompl
pop
cmp
test
or
sbb
sbb
not
fwait
cmpsl
aas
imul
mov
sbbl
dec
dec
or
lret
orb
sbb
dec
sbb
arpl
add
jne
jg
clc
cs
push
arpl
add
sub
lret
inc
jbe
popf
mov
mov
xlat
shlb
mov
inc
inc
lock
clc
push
mov
ja
add
push
imul
jbe
xlat
xchg
mov
xchg
xor
stos
pop
jbe
and
es
pop
mov
in
mov
inc
sub
mov
xor
ds
or
test
pop
outsb
int3
xor
aas
mov
xor
pop
or
leave
vmovlpd
cmp
or
lock
or
and
ret
movsb
imul
push
ret
mov
cmpsl
cwtl
inc
icebp
rcll
mov
pop
mov
mulb
or
dec
mov
je
lcall
add
lods
add
add
pusha
call
push
movsl
push
in
or
sahf
mov
add
cltd
inc
mov
jecxz
data16
imul
jae
out
enter
repnz
movl
cld
or
and
imul
sub
rcrb
jmp
nop
dec
mov
fdivrp
fsubr
aas
xor
loope
sbb
ret
jp
push
sbbl
fimuls
mov
std
ja
sbb
data16
ss
in
in
stos
movsl
je
mov
jmp
mov
fbld
xor
fists
dec
mov
xchg
adc
iret
jg
mov
add
add
in
rcrb
mov
pop
mov
jae
pushf
jecxz
dec
mov
pop
test
int
sub
push
xchg
mov
loopne
sti
sbb
dec
adc
mov
idivb
ja
jmp
inc
scas
adc
and
mov
fidivrl
pop
xor
xchg
repnz
movb
in
mov
adc
jnp
out
rcll
inc
adc
mov
out
xor
jecxz
or
jne
push
imul
jne
xchg
divb
xlat
enter
jnp
cs
loopne
das
sub
xchg
fcmovu
fisttps
push
pusha
repnz
mov
add
icebp
push
ret
lods
js
std
mov
xor
movsl
dec
lahf
push
mov
in
or
in
xor
push
add
xchg
iret
fs
xchg
mov
mov
xchg
out
adc
pop
mov
popa
lods
inc
cld
in
inc
mov
and
aas
clc
xor
sub
pop
stos
cmp
push
lea
sbb
jbe
push
rorb
insl
jge
pop
jmp
movsb
inc
insl
test
inc
mov
fs
out
mov
dec
adc
js
push
imul
lahf
arpl
std
jle
out
sbb
mov
lea
add
xchg
sub
jle
xchg
out
mov
fcoms
push
jp
in
int3
hlt
inc
lock
mov
loopne
sub
add
enter
jmp
dec
jns
dec
xor
jae
loopne
cmpsl
push
jb
adc
push
sbb
mov
adc
cld
and
xchg
mov
xlat
push
inc
inc
lret
mov
sub
lret
or
lret
ret
loop
xor
pusha
mov
mov
ss
daa
xchg
mov
fistpl
out
incl
xchg
pop
test
sbb
sub
sbb
and
int
push
jecxz
push
jo
and
cmp
jg
ja
lea
add
mov
out
pusha
push
inc
sub
pusha
aam
jge
dec
sub
jle
mov
sahf
aas
stos
mov
movsb
inc
dec
add
mov
and
cs
dec
pop
lahf
lods
test
maxps
lock
inc
pcmpeqd
xchg
or
clc
jno
push
mov
push
pop
mov
fdivrl
outsl
sbb
daa
xchg
or
push
mov
repnz
out
movsl
push
jl
js
xchg
lahf
insl
cli
mov
sbb
lock
jmp
call
ja
mov
loope
add
lret
int3
pop
xchg
imul
add
add
add
add
popf
aam
fcompl
imul
add
jecxz
xchg
jae
fwait
int
scas
lods
mov
int
stc
jge
movsl
cmp
xor
lods
fdiv
mov
mov
add
add
adc
movsb
aad
cmpsb
push
push
shrb
in
mov
mov
data16
cli
add
or
dec
pop
jae,pt
lods
repnz
inc
add
sub
outsl
push
dec
sbb
mov
add
jae
scas
fcmovne
mov
xchg
xchg
cmp
pop
push
addr16
in
cmp
clc
lret
and
cmp
or
or
nop
imul
adcb
inc
inc
sbb
test
loope
jb
mov
add
add
mov
jbe
hlt
mov
and
cmpsb
pop
enter
popl
add
xor
in
cmc
mov
lods
rclb
enter
sub
ret
add
in
loopne
popf
push
fs
fisttps
jecxz
test
xor
jnp
es
inc
inc
mov
addl
mov
inc
mov
xlat
cmp
and
leave
jbe
dec
shr
sbb
stos
sub
pusha
inc
fimull
js
test
ljmp
dec
mov
call
loopne
in
add
and
jle
add
sbb
scas
cld
enter
xlat
xor
out
xchg
dec
sub
shll
test
cmp
pop
sbbl
ret
add
add
ror
mov
sub
out
out
mov
add
int3
mov
arpl
test
jmp
mov
xchg
add
push
fs
jns
icebp
cmp
loope
icebp
ss
int
sti
insb
aaa
popf
lcall
push
repnz
sub
repz
mov
cli
mov
cmc
lret
notb
enter
ds
jecxz
xor
push
aad
jb
inc
jnp
cmp
fwait
jecxz
enter
nop
sahf
cmpsb
icebp
xchg
leave
and
mov
jecxz
xchg
cmp
pusha
or
jae
sub
mov
nop
test
fsubrs
ss
and
add
add
in
outsb
and
pop
mov
outsl
nop
add
lods
add
add
fadd
jmp
imulb
or
pop
mov
mov
xchg
jnp
jnp
adc
cmp
jecxz
sbb
leave
sub
scas
mov
orb
and
push
dec
mov
call
ds
iret
nop
shl
lods
adc
dec
cmp
aam
sbb
jne
rcrb
dec
je
fst
ljmp
push
jbe
push
das
cwtl
aas
or
inc
mov
adc
and
aas
mov
dec
pop
push
movsl
jge
rclb
les
lds
mov
mov
out
xchg
xchg
js
lea
add
add
mov
and
mov
xchg
add
lods
add
add
addr16
fs
fst
stc
pop
mov
pop
sahf
sbb
fnsave
lcall
mov
and
jae
mull
aad
inc
stc
lcall
cli
mov
mov
jg
aas
loope
jae
push
lea
mov
lea
out
xchg
sti
push
cmp
test
adc
out
push
mov
cli
gs
adc
fs
push
ljmp
mov
ljmp
sbb
dec
sbb
pop
fisubrl
inc
push
movsb
enter
ret
push
cmp
insl
inc
cmpb
add
add
add
add
stc
call
into
inc
mov
out
popf
fisubl
add
lods
add
add
iret
mov
xor
mov
std
stos
add
xchg
push
addl
mov
mov
in
inc
sahf
xlat
subb
and
mov
out
sbb
xchg
inc
jl
test
and
lods
jmp
cmp
push
int
dec
jle
dec
xor
mov
mov
int3
jp
loope
mov
push
into
or
or
push
and
push
das
or
xchg
mov
jne
insl
push
xor
push
sub
cmp
or
lret
stos
xor
pop
test
adc
lret
push
das
and
sub
fisubrs
cwtl
sar
repz
ror
sub
lods
add
add
sti
in
dec
mov
dec
pop
xchg
sbb
xchg
je
pop
popa
in
sti
inc
xor
inc
inc
cld
dec
daa
ljmp
call
fisubrl
imul
dec
or
das
rcrb
cmp
lahf
cmp
pop
xchg
and
push
push
push
inc
in
dec
xchg
mov
add
jg
iret
es
adc
lock
mov
xlat
in
out
stc
roll
fwait
movsl
sahf
mov
or
xchg
addb
pop
mov
pop
insb
iret
fstps
add
dec
aas
int3
sbb
out
loopne
lods
addl
add
out
sbb
cmp
subb
movsb
jno
sbb
mov
push
std
test
fstpt
jecxz
xchg
test
or
stos
and
sbb
add
leave
popf
pop
shll
inc
lods
and
int3
fsubr
std
dec
outsb
sbbb
mov
inc
out
jne
cmpsl
movsl
or
out
sub
repz
inc
test
scas
leave
xor
out
fistps
or
cwtl
sti
lret
ret
ja
xor
ljmp
dec
sbb
iret
in
xor
shll
jl
mov
mov
mov
les
mov
push
test
fildll
xchg
mov
imul
add
add
nop
adc
mov
adc
adc
movsb
cmp
adc
mov
mov
mov
push
xchg
sbb
or
jp
fisttpl
scas
jne
bnd
test
sti
push
leave
dec
or
lds
movsl
orb
mov
std
pop
xchg
sahf
sti
inc
add
xchg
xchg
shrb
test
popf
mov
jnp
inc
push
and
cli
xor
loopne
xor
imul
jne
ja
clc
adc
adc
insb
inc
push
cmp
imul
bound
loop
jnp
movsl
push
sbb
mov
lods
clc
mov
js
adc
fwait
loope
sub
sarb
add
xchg
add
lods
add
add
clc
call
sbb
cmc
in
pop
imul
xchg
xchg
jb
adc
sub
mov
ss
mov
adc
out
jmp
jge
imul
lds
inc
rcll
hlt
movsb
sub
mov
arpl
dec
xlat
fnsave
test
fldcw
xchg
fadds
rorb
popf
ss
inc
jmp
or
fsubrl
xor
repnz
test
or
mov
jp,pn
or
sbb
movsl
lret
es
cmp
pop
fdivl
xchg
mov
and
add
add
divl
dec
cmp
dec
sbb
and
add
lods
xor
sbb
fwait
shr
mov
divb
ss
clc
and
data16
loop
lcall
dec
andb
xor
add
lret
mov
mov
mov
dec
orb
nop
stos
mov
in
ja
adc
movsl
adc
lcall
jmp
clc
jno
aad
inc
and
jne
xor
pop
fadds
rcll
xor
aas
imul
jp
test
sar
in
insl
sbb
fs
jne
adc
dec
mov
std
push
add
xor
popa
inc
dec
cmp
les
ljmp
jle
pop
aas
and
scas
cmp
add
add
arpl
jge
mov
daa
insb
rclb
lods
add
add
cmc
fnstenv
je
pop
adcl
xchg
scas
jmp
test
add
rorb
inc
in
sbb
mov
sbb
stc
pop
mov
pusha
adc
in
pop
lds
pushf
ljmp
pop
aas
sbb
pusha
nop
fdiv
fldl
adc
sbb
rorb
lret
ficoms
add
in
adc
jae
adc
and
enter
xchg
popa
and
inc
and
lock
and
dec
xchg
and
jbe
das
mov
out
push
push
ljmp
aas
popa
adc
inc
pop
test
aaa
lret
push
push
daa
ss
xor
and
dec
mov
add
push
into
popf
mov
sub
or
arpl
lea
arpl
insl
nop
mov
lcall
out
mov
frstor
imul
mov
push
les
daa
mov
lock
lds
imul
gs
xchg
out
push
add
rorb
sti
sbb
adc
clc
cmp
frstor
push
mov
inc
addl
push
mov
fwait
inc
hlt
arpl
ret
shll
and
fdivr
push
ss
mov
add
rcrl
pop
mov
lret
xor
pop
loop
jbe
add
add
out
mul
aaa
cmc
xchg
lcall
jmp
add
lods
add
add
mov
lret
inc
arpl
and
sub
or
gs
imul
out
mov
mov
pop
fidivrl
out
mov
int3
cltd
lods
fimuls
mov
push
sbb
xlat
outsl
mov
out
out
daa
out
cs
or
call
rclb
sub
dec
test
jne,pt
pop
jno
mov
ljmp
test
xor
push
jo
aam
lods
xor
cld
mov
dec
xchg
sbb
pop
fsubrp
mov
into
shlb
sahf
jg
shr
das
xchg
test
sbb
add
add
aad
out
fucomip
ss
cmp
in
out
xchg
movsb
add
lods
add
add
sub
xchg
cmpsl
jge
bswap
mov
test
mov
mulb
andl
mov
imul
popa
js
movsb
fst
test
or
jnp
rorl
mov
add
cmpl
mov
popa
popl
add
stc
push
xchg
or
subb
push
xchg
fistpl
push
pusha
mov
test
rolb
add
scas
das
pop
imul
xchg
xchg
bound
add
cmp
jns
int
push
cltd
xchg
sbb
xor
mov
pusha
adc
add
add
in
cld
fisubrl
sbb
stc
stos
inc
movsl
add
lods
add
add
aad
xchg
out
inc
or
lahf
bound
xchg
sbb
lods
mov
mov
nop
dec
add
add
cli
xchg
mov
push
jo
or
cmp
lds
mov
sub
cmpsb
bound
insb
xchg
ret
fcmovbe
pop
mov
rcl
push
in
rcrl
cmp
push
push
repz
xchg
in
adc
pop
mov
fs
out
jge
or
aas
jle
ljmp
std
dec
mov
iret
lcall
push
dec
loope
aas
push
push
jo
push
cli
sbb
lods
mov
pop
lds
sbb
add
add
push
les
in
lahf
sti
ja
rcll
sub
add
lods
add
add
addr16
fists
jb
ss
movsb
sbbl
fdivr
ss
clc
enter
shrb
mov
fcom
fstps
lcall
jmp
or
sbb
adc
mov
mov
mov
sbb
lds
mov
jb
xchg
cli
push
add
dec
sub
in
jno
enter
lods
je
xor
mov
push
jno
push
mov
jl
xchg
ficoml
cli
sbb
xlat
mov
js
scas
sub
iret
add
jae
mov
add
add
jle
call
cli
lcall
add
lods
add
add
data16
and
inc
out
popa
ja
mov
dec
lock
divb
cmp
imul
jecxz
push
out
aam
lds
mov
ret
es
mov
pushf
mov
test
pop
dec
imul
inc
rcl
aas
ljmp
dec
inc
repnz
inc
jae
xorl
pop
inc
push
fistpll
push
mov
bound
adc
movsl
nop
jno
xor
jg
mov
adc
aas
hlt
add
data16
xchg
or
pop
scas
out
add
xor
and
jae
out
test
sub
sbb
testb
add
test
and
pop
dec
stos
rclb
cmpsl
add
lods
add
add
jnp
mov
fbld
stos
inc
xchg
push
jns
sahf
mov
je
call
dec
inc
scas
dec
test
pop
cwtl
cmp
mov
mov
pop
cltd
mov
adc
test
gs
out
xor
not
out
jb
divb
hlt
iret
je
inc
and
fnstenv
les
mov
add
stc
mov
mov
adc
jmp
cmp
add
int
sarb
lods
stc
adc
jle
push
iret
pop
scas
push
popf
pop
stos
adc
pop
test
cltd
inc
cwtl
push
outsl
mov
jmp
push
fcmovu
in
mov
add
lahf
sub
gs
stc
cli
cwtl
popf
fs
fsubs
push
add
dec
dec
jb
sbb
xlat
mov
xchg
rcl
sub
push
loopne
icebp
rolb
ror
je
or
and
into
mov
ret
sti
adc
sbb
fisubs
xchg
cmp
nop
lret
test
mov
sbb
es
in
add
sub
sbb
fmul
cmc
in
xchg
xchg
jle
push
ja
pop
xchg
push
sub
call
push
push
xor
repz
scas
push
or
fwait
pop
out
dec
jecxz
pop
stc
sbb
inc
jecxz
mov
adc
jb
lahf
test
add
js
inc
push
dec
ljmp
or
and
cmp
pushf
cmp
or
mov
shr
mov
and
rcr
aaa
add
fisubl
pop
shr
adc
push
adc
sarb
imul
add
mov
orl
or
pop
cli
xchg
outsl
iret
test
lds
push
adc
ror
stos
pop
sbbl
pop
adc
xchg
enter
inc
pop
das
mov
cmp
divb
sbb
mov
xlat
das
push
into
xlat
outsb
jle
adc
add
add
mov
icebp
and
in
dec
test
add
jle
inc
or
lcall
cmp
fildl
add
jne
dec
mov
cmpsl
das
cs
lods
rclb
int3
mov
jecxz
pushf
test
push
popf
mov
sub
xor
decl
rclb
out
mov
fwait
sub
cmp
xchg
pop
repz
loop
sub
out
cld
cltd
lret
mov
mov
jb
out
pushf
mov
or
div
mov
push
dec
ret
stc
rclb
fs
cld
jb
stc
bnd
mov
dec
adc
xchg
mov
lock
cmp
mov
ljmp
add
add
add
add
xlat
repz
das
cli
fists
dec
es
cmp
add
lods
add
add
addr16
pop
pop
mov
cltd
imul
xor
mov
and
mov
arpl
aam
jecxz
cwtl
outsb
mov
nop
mov
out
inc
mov
imul
mov
lds
leave
cmpsl
pushf
mov
dec
insb
mov
sub
push
xor
fdivs
iret
or
sbb
cs
push
cmp
test
mov
inc
or
sbb
cwtl
icebp
stos
out
mov
jnp
fs
cmc
jno
lock
pop
in
and
jne
xchg
cli
repnz
cmp
aas
lods
xor
cmp
add
add
mov
push
adc
cwtl
out
neg
jo
stos
add
lods
add
add
jbe
jbe
push
and
sbb
jg
sub
mov
mov
hlt
aad
jne
pop
lcall
adc
add
or
and
mov
ja
sbb
in
jae
scas
mov
xor
or
sub
mov
out
and
das
jbe
sbb
ljmp
pushf
and
fidivl
test
sbb
lock
sbb
ljmp
mov
xor
xor
sbb
clc
mov
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
