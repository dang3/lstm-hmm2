push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
icebp
pop
cld
add
jl
pop
jl
adc
and
popa
pusha
add
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
mov
test
push
daa
repnz
adc
je
mov
lods
add
xchg
repnz
push
xchg
gs
pop
aam
pushf
sbb
dec
dec
mov
lret
push
in
jne
inc
xchg
jb
lea
mov
cmpsl
mov
dec
pop
inc
jge
push
jo
cmp
jno
xchg
dec
in
gs
jae
test
jnp
sub
mov
adc
inc
imul
rcrl
popf
mov
xchg
and
pushf
push
shlb
shrb
lods
lret
stc
xchg
lods
pop
sbb
psubd
pop
in
ret
mov
and
xlat
rorl
sbb
in
out
movsb
pop
dec
rclb
cmpsl
or
test
mov
sahf
inc
test
xchg
xor
ret
xor
push
sbb
cmp
popf
push
jl
call
push
dec
ljmp
adc
or
jb
cmp
mov
sbb
mov
mov
clc
or
aad
sbb
ljmp
mov
popa
sbb
int
mov
lods
stos
xchg
les
cmp
or
loope
movsl
scas
stos
repz
dec
xchg
ret
sahf
jmp
popa
movsb
mov
pop
push
scas
sub
loop
mov
inc
rcrb
das
jge
lahf
inc
js
loopne
dec
lds
and
xchg
inc
test
pop
test
movsl
pop
lea
loope
pop
mov
sahf
or
pop
and
out
pop
int
cs
cmp
data16
inc
xlat
daa
stos
rorb
pop
dec
xchg
loop
mov
xchg
sub
pop
gs
int3
sbb
repnz
and
repnz
pushf
push
xchg
jmp
movsb
lods
bound
jnp
ret
push
sub
push
cmpsl
push
clc
mov
js
imul
push
cmpsl
dec
mov
sbb
ror
ret
mov
out
push
push
test
sahf
faddl
or
cmpl
and
dec
push
mov
xor
mov
aad
pop
pop
insb
push
imul
sbb
aaa
test
xchg
fwait
sbb
out
scas
dec
mov
ja
pop
mov
dec
mov
cmp
mov
cmp
inc
jne
xor
test
mov
jbe
cli
icebp
cmp
stos
mov
aaa
sub
pop
gs
pop
sbb
pop
lock
testb
and
push
call
xor
int3
xor
mov
mov
xor
sub
insb
cmp
mov
sub
imul
scas
and
xchg
loope
cs
sbbb
pusha
fwait
je
adc
adc
into
xchg
cli
rcl
push
in
aas
and
mov
insl
push
mov
cs
pusha
inc
shlb
lea
rcll
push
imul
inc
fldl
les
in
adc
sub
daa
scas
fdivrp
sub
sarl
xchg
cmp
es
stc
jo
call
ljmp
inc
pcmpeqd
xor
test
sub
pop
popa
push
pop
adc
mov
xchg
dec
adc
sbb
adc
push
in
bswap
mov
jb
dec
fcompl
orb
dec
enter
lret
jns
cmp
divl
add
sbbl
in
aad
pop
insb
pop
pop
push
push
cmp
push
in
outsl
jecxz
roll
ret
repnz
inc
push
nop
divb
add
add
mov
inc
sbb
push
icebp
lods
sbb
mov
jns
xchg
add
loope
imul
jb
loop
enter
test
xor
mov
stos
outsb
bound
jno
adc
data16
add
dec
fildll
pop
fs
rcll
test
je
cltd
adc
aaa
xchg
cmc
sub
mov
push
int
mov
stc
jge
out
repz
add
mov
pop
aam
test
ret
push
mov
dec
jae
sbb
push
mov
repz
mov
mov
xchg
jge
xchg
ret
lock
jle
inc
les
adc
test
pop
lcall
jecxz
subl
icebp
sahf
sub
sbb
cmpsl
rcrl
lock
pop
sub
pop
insl
into
pushf
in
and
cmp
pop
dec
inc
or
or
xor
or
xor
adc
push
ljmp
aaa
sbb
inc
mov
leave
xchg
xor
xor
sbb
out
in
mov
xchg
mov
lret
push
jb
mov
mov
ds
outsl
jge
stos
fs
cwtl
jbe
aam
push
cmpsb
test
in
dec
add
test
scas
stos
inc
or
inc
mov
pop
xchg
add
cmc
sbb
jecxz
adc
and
xor
mov
inc
pop
dec
loope
pop
cs
inc
and
mov
call
int
pop
xor
cli
pop
mov
sahf
cs
xlat
push
mov
cmc
push
test
sahf
cmp
stos
pop
call
cmc
aaa
scas
ret
mov
sub
adc
repnz
push
dec
mov
pop
jno
xor
and
xlat
adc
push
fadds
je
jb
mov
enter
sarl
push
sub
inc
jp
arpl
lds
int3
arpl
and
ss
adc
popf
inc
pop
outsb
cltd
aaa
decb
lahf
outsb
or
lahf
sub
test
dec
nop
insb
gs
fistpl
xlat
dec
mov
loope
and
sub
sub
xchg
jecxz
or
imul
ja
inc
or
popf
sub
cmpsl
xchg
ret
inc
jbe
pushf
jb
jnp
mov
mov
jnp
test
pop
lahf
lret
int3
pop
cmp
inc
das
in
pop
mov
shlb
movsb
fdivl
addb
pop
push
cmpb
lcall
aad
int
unpckhps
sbb
fs
shrl
sti
inc
xchg
xchg
iret
jmp
lret
push
jns
and
rcll
sub
repz
pop
sbb
addb
jns
push
and
sub
cmpsb
hlt
fwait
and
pushl
rcl
into
std
and
jnp
mov
fsubl
mov
popa
inc
mov
push
cmpsb
xor
mov
jnp
flds
and
clc
lret
adc
pop
sbbl
rcrl
sti
dec
push
cld
adc
pop
or
aad
push
mov
leave
sbb
adc
jp
and
xor
repz
push
or
faddl
dec
stos
dec
pushaw
or
sub
sub
mov
cmpsb
out
test
hlt
addb
iret
daa
call
neg
inc
rcrb
ds
dec
jl
stos
fwait
fs
loope
popf
xlat
imul
sub
rorl
jno
push
push
push
adc
sub
jecxz
adc
cmp
xchg
xchg
lret
dec
mov
sub
stos
lds
xchg
xor
or
mov
and
out
jno
dec
jno
xchg
inc
andw
dec
fbld
testl
pop
inc
xchg
sub
fadd
and
sbb
bound
fildl
mov
test
push
rolb
addr16
repnz
out
aad
shl
fbstp
rolb
mov
inc
lods
xchg
mov
push
repz
xor
notl
jge
sub
fdivs
cmp
out
fwait
push
lcall
xchg
xchg
cmp
leave
or
loopne
cmpl
cmpsl
sahf
push
shrb
jbe
cmpsl
cmc
das
ret
lcall
mov
push
lods
xor
cwtl
add
dec
mov
inc
outsb
mov
aaa
je
rclb
imul
or
cmp
adc
in
jae
sahf
mov
mov
cmp
fisttps
std
cmpsb
in
xor
je
dec
lods
aam
jge
aad
std
xor
pusha
clc
sti
inc
aam
int3
popa
pop
jae
addr16
sub
aam
inc
push
or
out
lret
cmp
bswap
stc
cmc
cld
dec
gs
loope
sahf
push
loope
jmp
sbb
fidivl
sub
pop
out
xchg
mov
aam
in
daa
into
dec
pushf
fwait
hlt
mov
les
or
test
cmp
dec
inc
sbb
sub
or
push
xchg
rcrb
adcb
xchg
into
sahf
dec
icebp
loope
fadds
push
ret
int
xor
ret
fistl
sub
out
sbbl
jle
add
mov
xor
pop
and
loope
mov
ljmp
adc
pop
adc
out
dec
pop
xchg
je
rclb
je
outsl
in
in
fldt
aam
inc
dec
pop
inc
loop
ja
data16
xchg
pop
loope
inc
push
fisubl
adc
in
mov
aaa
movb
ret
sub
test
cmpsb
inc
test
imul
testl
sarb
pop
ficoml
mov
add
vandnpd
mov
push
sbb
je
dec
ret
sbb
jmp
pop
inc
ret
mov
popf
in
fsubrs
cmpsl
mov
jp
rcrb
inc
popf
cmc
lahf
push
cmp
or
das
ss
add
mov
rcrl
add
gs
fidivs
mov
dec
cmp
and
push
stc
shl
hlt
movsb
xor
sub
icebp
adcb
cltd
push
and
pop
shrb
mov
jp
sbb
ficompl
pop
dec
out
popa
mov
jl
in
mov
and
lret
loop
jge
inc
ret
adc
push
mov
sub
push
scas
pop
xchg
push
sbb
cli
clc
pusha
push
cmp
scas
sar
rcrb
les
les
adc
sbb
add
lds
jp
mov
mov
push
mov
loop
push
mov
pop
les
xchg
or
sbb
call
scas
mov
mov
ja
mov
push
push
jmp
ss
xchg
jns
cwtl
cwtl
push
adc
mov
and
jns
adc
jge
sub
add
rcrl
ljmp
pusha
jbe
jnp
fldl
adc
cltd
mov
inc
jecxz
jle
sub
fmulp
dec
cmc
out
adc
add
movsb
cwtl
mov
mov
push
push
dec
adcb
mov
xor
lahf
mov
sub
arpl
xchg
out
adc
les
hlt
out
push
and
arpl
sbb
loope
shll
sub
jbe
movl
int3
decb
imulb
loopne
mov
cmp
and
orl
mov
jg
dec
mov
movsl
sar
xchg
dec
pop
lods
or
fs
sbb
dec
mov
aad
rolb
mov
pushf
cmp
test
in
xchg
sub
in
dec
sti
cmp
popf
adc
in
jae
lret
arpl
pop
dec
roll
adc
ja
jmp
ja
mov
dec
call
cmpl
movsb
mov
outsl
cmp
andb
jbe
sbb
push
imul
add
and
jo
call
loope
loop
lret
sbb
rol
call
ljmp
out
jbe
icebp
dec
dec
outsl
jne
rol
mov
mov
sub
lahf
and
pusha
mov
jmp
mov
cmp
jbe
popf
ss
push
ficoml
shrl
push
in
dec
popf
das
or
xchg
cmpl
mov
aam
gs
js
xor
mov
jg
push
call
into
ja
sbb
notl
cs
sahf
mov
mov
add
insb
gs
negl
cmp
cltd
cmp
adc
xor
mov
xor
hlt
cwtl
cmpsb
in
cmpsb
push
popa
cmpsb
sbb
cli
lods
dec
imull
or
je
aas
mov
sbb
and
fcomp
pop
sbb
adc
shlb
inc
das
pop
ret
add
lahf
mov
int
sti
into
cmp
sub
daa
imull
shr
inc
cmp
mov
loopne
dec
movsw
inc
cmp
enter
imul
mov
add
jmp
out
inc
jno
add
leave
and
push
stos
int
xchg
out
dec
jns
shll
les
mov
dec
mov
lods
jmp
mov
mov
div
xlat
adcb
iret
dec
movsl
sub
xlat
sbb
fptan
lret
jae
push
push
lcall
clc
pop
mov
mov
ret
insb
jae
bnd
jmp
push
mov
lea
adc
ljmp
mov
jp
mov
mov
lahf
mov
pop
adc
fdivrs
bound
rol
mov
xchg
fwait
mov
shrl
es
sbb
cwtl
addr16
pop
rolb
daa
cwtl
loopne
test
fsubrs
adcl
lret
ljmp
adcl
pop
sub
imul
sahf
inc
movsb
inc
lds
fmull
ret
cmp
dec
jmp
xor
mov
fidivl
dec
xor
rcr
out
push
scas
dec
add
insl
mov
push
stc
std
inc
aam
push
adc
jmp
lods
jecxz
sbb
test
xchg
xor
inc
mov
dec
loope
cmp
and
xchg
cli
mov
or
xor
mov
dec
int3
sub
testl
or
ret
je
xchg
and
or
lahf
mov
jo
or
sub
dec
vdivpd
loope
cmp
inc
je
sbb
scas
jno
xchg
imul
xor
mov
pop
add
testb
lcall
loopne
sub
mov
xlat
adc
mov
jne
jmp
jbe
pop
sbb
mov
cmp
xor
stc
xchg
jno
inc
adcl
pusha
jnp
mov
or
lret
in
and
jb
xchg
stos
bound
jns
add
jle
loopne
add
mov
cmpl
and
pop
inc
test
stc
jle
rcll
divb
dec
and
mov
shlb
mov
add
dec
sub
rcrb
rcll
loope
mov
loopne
shlb
lods
ss
int
aas
into
pop
les
in
dec
lretw
inc
insb
sbb
fnstcw
jbe
fwait
push
lea
inc
lahf
dec
sub
xor
ret
stc
aam
adc
mov
push
adc
testl
mov
pop
mov
add
stos
ljmp
js
lods
lcall
push
sbb
xor
push
xchg
lock
rsm
mov
sbb
dec
inc
or
sti
pop
xchg
icebp
add
pop
xor
xor
iret
lds
add
cmpsb
xchg
mov
inc
shlb
dec
lret
jl
lods
jb
ret
inc
dec
jno
cmp
ss
imul
inc
sbb
iret
cmpsb
xlat
mov
loope
in
xchg
cmp
jo
xor
fisubrl
daa
dec
add
xchg
bound
mov
sbb
jb
cld
pop
mov
and
add
mov
aam
test
cmpsl
sub
jb
movsb
in
xchg
movsb
fildl
cmpsb
call
stos
out
shlb
cmp
dec
cmp
cmpl
rcrb
xchg
into
scas
pop
es
jle
cltd
ja
pop
das
in
outsb
sbb
ja
bound
cli
and
stc
subl
repnz
ljmp
mov
mov
or
pop
mov
pushf
xchg
stos
and
lahf
and
add
lock
jb
mov
or
mov
pop
lahf
lds
movsl
icebp
push
loope
mov
addl
or
push
or
fdivr
xor
inc
xchg
enter
out
sbbl
test
iret
jmp
and
cmp
popa
mov
push
sub
cmp
adc
movsb
repnz
std
inc
xchg
fimull
out
xlat
in
adc
addr16
cmc
dec
lret
insb
pop
push
cld
cmp
add
daa
lods
sub
lods
mov
push
subl
arpl
ffree
and
dec
ljmp
xchg
inc
adc
mov
int3
ficoml
inc
inc
cmc
mov
jge
mov
pop
mov
push
adc
test
test
adc
inc
or
xchg
lea
push
aad
scas
mov
out
sub
movsl
fbld
inc
aam
movl
or
clc
push
arpl
mov
in
out
fnstcw
in
outsl
sub
cli
dec
push
adc
inc
mov
je
lret
dec
arpl
test
mov
pop
pusha
pop
push
fildll
xchg
push
bound
int
cs
adc
cmp
cmp
out
scas
cld
cmc
pop
pop
jo
or
jne
xchg
bound
pop
jecxz
pop
add
or
pusha
data16
jo
repz
inc
or
or
or
sahf
push
inc
adc
adc
pop
dec
inc
pushf
xor
and
in
iret
jle
icebp
rolb
lea
lock
fsubrs
mov
ljmp
stos
sbb
mov
adc
addl
jb
mov
ja
shrb
mov
jecxz
mov
movsl
push
mov
adcb
cmp
pop
xor
mov
jb
dec
mov
fildl
and
push
lock
cmp
addl
cs
jno
mov
test
or
out
sahf
fnstcw
fs
popf
xchg
out
adcb
sbb
or
int
xchg
mov
or
es
cmp
or
and
mov
push
movsb
push
add
ror
outsl
into
out
leave
pop
fisttps
xor
stos
cmpsl
mov
sbb
jmp
inc
pop
insb
add
pop
bound
inc
sbb
cs
sahf
add
xchg
inc
rcrl
cmpsl
xor
xlat
fnsave
cmc
dec
leave
and
add
push
andb
out
pop
mov
push
lea
sbb
cmp
add
mov
adc
jb
lret
xchg
in
out
add
or
and
pushf
les
xchg
xlat
sbb
adc
sub
aad
adc
sbb
jp
adc
inc
mov
dec
jbe
insl
in
and
repz
xlat
movsb
mov
pop
dec
mov
or
xchg
jne
stc
les
mov
bound
pop
and
testb
popf
pop
call
push
mov
jnp
fsubrs
cmpsb
push
popf
mov
jnp
sbb
add
sub
and
int
or
bound
and
dec
in
jnp
sbb
call
and
sub
pusha
dec
pop
das
sub
loope
adc
mov
sahf
or
mov
jae
jnp
pushf
movb
lahf
nop
enter
call
stos
mov
clc
js
iret
sub
lcall
popa
mov
into
iret
push
dec
mov
imul
lcall
jle
jno
or
fwait
jmp
mov
cmpb
je
out
inc
test
push
and
ss
mov
push
adc
loop
pop
fisubrs
cmp
push
mov
and
ss
xchg
cltd
fidivrs
fcmovnb
adc
cli
pop
mov
jae
or
jbe
xchg
imul
iret
cmp
shlb
push
dec
stc
sbb
xor
aaa
ljmp
out
cmc
or
lret
test
js
lahf
loope
xor
in
xor
cmpsb
test
mov
ss
dec
sbb
icebp
add
jne
add
pop
test
push
aaa
pop
shll
xor
jno
push
shll
scas
popf
cmp
and
dec
in
test
test
popf
out
ss
xor
lcall
and
pop
xchg
jo
pop
imul
mov
rcrl
jnp
dec
out
push
sub
xlat
and
xor
rcrl
ret
dec
aam
inc
cmp
or
sub
cmp
divb
xchg
in
roll
mov
test
movsb
add
push
jbe
push
fistpll
loope
vaddsubpd
push
mov
test
inc
sub
mov
pop
cmc
dec
loopne
pop
xchg
lds
xor
mov
pop
test
pusha
mov
push
dec
sbb
es
jo
xor
movsb
mov
imul
dec
add
cmp
add
jg
outsl
cmc
mov
in
pop
adc
mov
sbb
jp
scas
and
out
leave
jbe
int
fisttps
jg
je
pop
or
cs
cmpsl
and
adc
stos
cltd
cli
mov
add
das
int
dec
into
daa
xor
inc
jae
in
add
sti
sbb
lock
xor
jg
aas
divb
sbb
jo
sbb
out
add
mov
jmp
into
jg
xor
imulb
and
xlat
das
shll
iret
push
xchg
cmp
push
xchg
inc
mov
pop
imul
lret
jecxz
int
xchg
sub
inc
add
push
cmp
mov
sub
daa
imul
out
add
insb
or
xlat
cmpsl
enter
ja
addr16
imul
sbb
inc
cmp
es
rclb
xchg
movsb
push
pop
sbb
or
iret
pop
test
out
add
cmp
sub
sbb
push
jns
dec
stos
push
jg
hlt
xchg
jae
bound
push
cmp
scas
pop
int3
imul
insb
cld
fnstcw
inc
mov
dec
stos
push
push
push
vpsllw
sub
push
mov
pusha
dec
mov
ret
adc
and
mov
xchg
mov
cld
scas
mov
movsb
rorb
sub
lahf
loopne
add
inc
imul
lcall
xchg
dec
adc
subl
cltd
pushf
lds
cmp
adcl
jge
out
hlt
push
xor
ljmp
sbb
pop
cmp
dec
mov
jg
pusha
popf
jecxz
xor
call
push
mov
xchg
divl
mov
push
mov
add
ljmp
ret
in
inc
lret
and
cmc
fadds
xchg
das
faddl
push
mov
jmp
mov
push
in
fistpl
mov
mov
cmpsl
loopne
imulb
hlt
popf
jl
sub
cmp
movsb
stos
lds
popf
aad
jecxz
adc
jbe
sarb
mov
mov
sahf
es
es
push
jg
or
call
mov
test
out
aam
jmp
outsl
mov
xor
xchg
popf
pushf
push
pop
mov
xchg
stos
int3
dec
js
dec
inc
sbb
mov
pop
xchg
insb
mov
hlt
in
mov
popa
or
cld
ret
mov
lret
mov
lock
push
cvtpi2ps
data16
ret
add
lods
and
ret
fisttps
iretw
cmpsl
incl
out
mov
aas
cmpsb
pop
jnp
push
or
sub
jl
mov
dec
adc
stos
xchg
dec
pop
sub
mov
xor
repz
push
jo
js
mov
int
stc
fwait
sub
scas
fbld
mov
jl
iret
lods
addb
pop
mov
sub
mov
test
adc
dec
in
and
arpl
mov
cs
or
cltd
and
fwait
pop
sbb
sbb
mov
sbb
fistpll
xor
sbb
mov
fstpt
mov
mov
rcrb
mov
inc
stos
icebp
inc
sbb
outsl
mov
dec
jmp
in
cmpsl
addl
outsl
mov
push
in
clc
in
mov
test
sub
push
pop
inc
ds
and
fsubr
and
mov
into
xchg
jns,pn
mov
lods
lds
pushf
push
fcomps
sub
push
mov
and
pop
orl
sarl
xorb
scas
sbb
in
pop
mov
fildl
sbb
stos
inc
or
pop
and
xlat
jg
pop
repz
inc
sub
insb
mov
cs
lahf
jbe
jl
sub
pop
cltd
pushf
fsubs
and
jb
test
xadd
sbb
shll
sub
sbb
data16
jb
jge
fdiv
jge
insl
outsl
int
test
rol
inc
stos
xchg
test
mov
or
gs
sbb
sbb
dec
adc
mov
mov
xor
push
xor
inc
adc
sbb
bound
pop
inc
push
je
mov
jo
xor
fidivl
pop
jb
rorb
jns
mov
pop
rcll
pop
inc
inc
adc
adc
icebp
pushf
xchg
fucomp
add
ret
leave
add
xor
and
dec
fcmovnbe
pop
int
xchg
ss
mov
or
std
insl
mov
test
fiaddl
cmp
outsb
jno
fwait
pop
in
js
mov
pop
lods
jl
jno
sbb
popa
or
in
push
push
ljmp
xchg
cmc
push
push
faddl
mov
xchg
sbb
dec
leave
arpl
xor
dec
adc
mov
jp
in
jle
repz
mov
mov
std
mov
out
cmpsb
lret
in
sbbb
hlt
and
jecxz
mov
outsl
sbb
sbb
ss
data16
movsl
fisubs
std
dec
ror
push
loopne
test
inc
or
cmp
fwait
xor
aad
mov
xor
cld
jne
adc
add
popa
mov
lret
loopne
push
mov
jg
imul
into
mov
or
jg
and
sub
jns
jle
mov
xor
addl
es
pop
add
pushl
pop
xchg
fstps
popf
xchg
mov
mov
sbb
insl
dec
mov
cltd
clc
sbb
add
in
das
aas
es
mov
js
insb
cmp
cwtl
fwait
add
rorl
pop
adc
and
jg
notb
xchg
dec
fisubl
sub
cwtl
loopne
scas
pop
int
lods
pusha
fwait
jno
ret
cmp
dec
push
push
aas
cs
xlat
outsb
mov
push
and
or
mov
xor
jmp
or
push
and
iret
shlb
or
aam
in
call
cmp
das
mov
lock
mov
or
stc
aas
jne
jl
outsb
fwait
add
jl
jmp
add
stc
xor
mov
mov
sub
dec
dec
loope
rcrl
push
cmp
xlat
popa
pop
shrb
jo
pop
pushf
leave
insb
psubq
aaa
lret
jno
mov
sub
push
outsl
sti
xor
lret
sbb
rorl
mov
inc
sub
sub
or
jne
mov
push
xor
push
dec
mov
ss
jne
adc
cltd
imul
dec
dec
pushf
sbb
nop
sub
fisttpl
xor
pop
mov
mov
jl
imul
jl
mov
leave
mov
xchg
cs
and
jge
hlt
imul
and
int
inc
jb
in
jno
ljmp
jle
fwait
cmp
movsb
repz
out
pusha
mov
lcall
mov
or
cli
in
ret
movl
inc
xor
aas
and
aad
inc
aas
inc
pop
scas
test
push
push
inc
cwtl
push
cmova
push
add
mov
and
lods
push
adc
sbb
xor
in
js
add
xlat
inc
fs
xchg
lahf
xchg
outsb
jl
xchg
arpl
aas
pop
orl
dec
popa
fdivl
movsb
les
icebp
mov
or
pop
mov
jo
push
or
loop
scas
dec
add
cmp
cmc
jmp
sbb
js
pushl
jbe
ret
mov
aad
mov
mov
pop
mov
stos
loopne
cmc
js
xlat
add
xchg
mov
out
and
adc
xchg
push
dec
ljmp
add
fistpll
icebp
dec
gs
pop
dec
fsubrl
std
add
or
push
int
or
jnp
repnz
mov
loope
call
iret
mov
jmp
xor
cmp
es
add
shll
inc
lds
sbb
gs
aam
mov
aaa
enter
jp
int
mov
xchg
clc
in
pusha
push
mov
jns
inc
jns
lahf
std
pop
mov
addr16
or
mov
aaa
jmp
sbb
sub
xor
push
orl
inc
ds
jecxz
loopne
xchg
cmc
movsb
and
sub
aad
mov
jmp
lahf
sahf
loop,pt
mov
push
std
pusha
adc
popf
mov
arpl
add
popa
scas
jne
xchg
mov
push
daa
dec
testl
int3
jns
mov
and
push
inc
mov
or
adc
aad
mov
mov
int3
push
jmp
xor
xchg
add
out
nop
stos
push
ds
xor
ret
call
cmc
rcrb
and
xchg
jno
frstor
mov
roll
repnz
xorb
cmpsb
push
cs
cli
in
pop
out
lret
movsb
push
mov
adc
sub
xchg
mov
dec
pop
dec
andl
ds
mov
pop
clc
push
mov
outsl
add
daa
and
loopne
inc
out
dec
sub
or
mov
test
stc
fs
push
or
adc
es
xchg
mov
push
mov
lcall
dec
lea
dec
nop
mov
and
outsl
loope
outsb
test
inc
lods
xchg
les
and
pushf
stc
add
jae
jmp
jmp
jo
aaa
fbld
mov
and
ret
inc
stos
sbb
in
xchg
sub
inc
inc
les
out
cmp
sbb
mov
mov
mov
js
rcl
out
test
insb
inc
test
mov
sahf
call
xchg
mov
push
inc
popa
xchg
cmp
and
repz
push
cwtl
mov
adc
cli
xor
sbbl
inc
lret
sahf
jp
and
test
xchg
iret
cmpb
jl
fsubrp
jmp
test
sbb
and
lds
jae
pop
pusha
push
fadds
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
push
cmc
in
inc
mov
and
lea
test
cs
xor
mov
pushf
pop
sub
jecxz
rclb
jnp
xchg
sahf
nop
lea
jl
xor
scas
mov
xchg
inc
into
out
adc
inc
adc
insb
pusha
out
scas
loopne
mov
aaa
cwtl
pop
ret
test
add
test
aam
inc
fnstsw
vpshab
rcll
inc
push
andl
addr16
aam
sub
in
fbstp
mov
cmp
jg
lds
pushf
xchg
adc
outsb
and
fidivrl
ror
push
lods
pop
hlt
add
out
test
testl
ljmp
inc
int3
pop
add
and
cmpsl
jmp
jnp
cmpl
fsubrs
testb
stos
pop
cli
scas
mov
jbe
outsl
outsl
xlat
and
pcmpeqb
dec
imul
shl
pop
mov
test
mov
adc
stos
pop
xchg
mov
popa
jae
fnstenv
sahf
test
sbb
aam
scas
pop
or
push
lods
sbb
xor
cmp
jne
inc
inc
adcl
sbb
push
xchg
mov
mov
lret
insb
jmp
jae
xor
leave
push
mov
mov
rcrl
in
js
scas
mov
pop
cmp
jno
sbb
lcall
loop
pop
lds
adc
popf
pushf
cs
pop
leave
push
lods
ret
dec
jae
push
in
mov
pop
or
pop
inc
negl
fildll
into
bswap
je
fcomi
cmpsb
rcrb
add
sbb
iret
lods
adc
mov
jns
add
push
gs
sub
mov
lods
or
cmp
sbb
iret
outsl
cmp
cmpsb
data16
lret
popf
shlb
shlb
xor
push
mov
cmp
mov
in
out
stos
aad
xor
adc
pop
inc
pushf
fbstp
mov
aaa
or
sbb
mov
pop
fldcw
fst
push
sub
dec
inc
sar
cmpsl
fsts
mov
outsb
pop
mov
repnz
xchg
xlat
out
ss
flds
movsl
mov
popa
sbb
dec
out
cld
pop
lock
jmp
scas
push
dec
faddl
cmp
addl
lret
sbb
clc
fnstenv
inc
mov
fadd
push
jecxz
xor
leave
mov
scas
add
mov
scas
mov
jecxz
mov
lock
add
popa
sbb
adc
sahf
xlat
loop
cli
add
sub
pusha
push
daa
into
bound
inc
stos
test
and
jb
jmp
in
and
out
jae
fistl
jmp
mov
subb
mov
test
inc
cmc
push
mov
subl
mov
xchg
dec
dec
inc
das
cmpsb
add
ja
idivb
movsb
dec
lods
inc
fistl
cmp
cmp
rorl
jbe
xchg
adc
je
jno
jno
pop
aaa
sub
xchg
stos
ficomps
dec
cmp
das
stos
xor
dec
sbb
enter
clc
add
fsubrs
or
lods
mov
std
out
sub
icebp
movsb
jnp
js
pop
ljmp
mov
jmp
mull
lods
inc
js
xor
xor
lahf
loopne
imul
loope
in
mov
loop
inc
xchg
les
insb
sti
push
mov
test
inc
and
cmpb
cmp
xchg
mov
ret
dec
mov
fnstcw
jl
sti
sbb
push
scas
sub
inc
xchg
cmp
sub
sub
outsb
jmp
xor
mov
pop
jne
pop
xor
mov
mov
xchg
and
pop
mov
stc
pushf
fdivs
in
shrb
imul
mov
arpl
mov
cmp
popf
jo
or
stc
xor
xor
xchg
and
das
test
stos
scas
std
and
pop
add
pop
cs
mov
or
scas
ds
cltd
pop
xor
shl
xchg
mov
out
mov
adc
jo
mov
fwait
stos
push
loope
mov
jne
mov
mov
repz
out
mov
jmp
sbb
jo
cmpsb
xchg
scas
mov
fildl
mov
inc
cltd
adc
aas
xor
cmc
scas
mov
jnp
jno
pop
cmp
stc
int3
ja
mov
insb
pop
adc
dec
mov
imul
in
push
es
dec
jl
xor
add
neg
push
sti
daa
pop
int
int3
mov
mov
mov
out
mov
nop
and
pop
sub
pushf
in
outsb
ja
test
cld
fmuls
cmp
xchg
div
jg
xorb
sbb
dec
mov
rcrl
pop
and
movsl
in
cmp
rorb
out
shll
push
test
bound
xor
fldenv
sbb
nop
mov
xorb
and
sub
or
rcrl
dec
dec
pushf
stos
cmp
in
shll
mov
bnd
sub
mov
sbb
ret
int3
jo
cmp
xchg
xchg
sub
in
ror
adc
mov
jp
in
jae
xor
xor
divb
jge
jecxz
outsb
and
stc
pushf
stc
jb
stos
push
in
gs
mov
xchg
pop
sbb
push
cmp
fcomi
test
rcll
fsub
jnp
dec
test
in
pusha
xlat
mov
push
xchg
or
jl
xchg
mov
sub
lods
cmp
scas
jns
cs
jl
lods
jmp
int3
lahf
je
in
mov
cmp
and
push
dec
int3
mov
sbb
adc
mov
inc
rorl
popa
pop
stos
test
or
ljmp
pusha
cmp
pushf
adc
dec
mov
jg
sti
jle
clc
ret
push
sub
dec
fsubr
mov
loope
outsb
out
mov
rorb
out
cmc
cmc
mov
fstps
adc
sbb
sbb
inc
mov
adc
test
pop
mov
pop
push
fs
sbb
cmc
mov
mov
jle
cmpsl
xchg
stos
stos
mov
cli
ljmp
enter
mov
movsl
mov
mov
lods
loopne
add
sbb
pop
repnz
jecxz
mov
add
lret
jo
imull
mov
cmp
or
push
lds
mov
loope
jae
and
int3
clc
test
dec
cmp
aas
inc
dec
pop
xor
in
dec
stos
jmp
cmp
shl
repz
xor
lret
adc
xchg
aas
mov
xchg
or
aam
fwait
xor
cltd
popa
mov
adc
pop
and
pushf
pop
cmp
test
sbb
andl
repnz
mov
out
inc
mov
aam
jp
mov
fs
mov
fucom
and
icebp
xchg
jnp
push
test
ljmp
xlat
in
sbb
lods
sbb
jg
inc
nop
pop
das
mov
mov
lret
inc
insb
jns
addl
repz
adc
data16
cmp
cli
mov
xor
dec
add
ja
mov
sbb
or
jnp
dec
mov
add
jp
lahf
sahf
jne
push
cmp
or
andl
xchg
in
popf
add
jg
adc
cwtl
imul
xchg
pop
daa
xchg
shrb
fstpl
mov
loop
or
cmp
sahf
xor
and
xorl
pop
fistl
sbb
xchg
lea
cmp
es
mov
sub
mov
lods
sbb
mov
movsb
push
push
push
pushf
mov
xlat
mov
dec
push
pop
mov
sti
mov
mov
mov
pushf
mov
inc
andb
xor
cwtl
inc
add
or
iret
push
push
call
push
sbb
and
mov
mov
xchg
scas
sub
nop
gs
rcrb
inc
push
repnz
xchg
xchg
cmp
pop
call
jl
insb
repnz
push
addl
outsb
les
cmp
push
xchg
lea
add
int3
shll
mov
ja
mov
int3
insl
cmp
mov
cmp
lcall
xchg
sub
dec
adc
sub
je
pusha
aad
adc
loope
xor
stc
mov
dec
inc
or
sub
push
and
stc
xchg
mov
inc
imul
test
cmp
cmp
mov
sub
int
jle
jge
out
fbstp
repz
ljmp
repnz
add
cmp
movzbl
or
mov
lods
pmulhuw
mov
daa
push
sub
ficomps
fsubl
outsl
inc
daa
gs
leave
clc
insb
dec
shlb
mov
scas
or
int
mov
std
dec
mov
xchg
stc
idiv
push
xchg
in
inc
mov
adc
mov
sahf
test
mov
add
sahf
fldt
push
or
mov
cmp
and
xchg
aaa
push
addr16
js
mov
cltd
pop
push
addr16
jle
lea
xor
in
cmp
push
in
adc
data16
pop
cmp
lcall
fwait
inc
fwait
sbb
or
mov
outsl
add
cmp
aam
add
push
mov
nop
scas
stos
mov
or
in
das
ret
add
inc
mov
lock
in
pop
orl
and
fistpl
test
pop
lar
jbe
or
push
add
pushf
mov
mov
dec
jmp
idivb
xlat
jno
scas
in
pusha
je,pt
adc
shll
fwait
rclb
imul
int3
mov
jbe
imul
inc
repz
fld
lea
sbb
jns
pushf
popa
jbe
mov
mov
fdivrs
adc
or
in
popf
ret
lret
xor
out
xor
cmpsl
inc
call
jecxz
or
faddp
fadd
in
xor
xchg
lock
mov
in
test
fstpl
pop
inc
pushf
mov
inc
stc
mov
leave
lahf
mov
ss
adc
dec
or
std
std
xchg
stc
fistpll
mov
or
adcb
imul
mov
popa
test
iret
and
clc
sub
inc
scas
add
in
movsl
lea
or
gs
in
hlt
push
aad
je
outsb
inc
cmpsb
push
addb
lea
das
roll
sub
pop
pop
in
outsl
ds
movsl
sbb
mov
out
jp
insb
push
loopne
pop
jecxz
push
loope
push
jmp
loop
pop
pop
push
out
clc
xchg
xor
jae
jbe
mov
add
pop
ja
lea
sti
movsl
sti
push
enter
mov
adc
test
and
movsl
mov
std
flds
bound
mov
adcb
add
add
aaa
pop
test
sar
mov
inc
jns
or
sbb
cmp
lret
mov
push
xchg
iret
adc
lahf
mov
fdivrs
scas
stos
mov
sub
mov
testl
in
and
push
dec
je
ss
gs
insb
push
sti
jle
cs
xlat
ss
imull
push
pushf
daa
mov
dec
les
mov
ret
lret
adcb
and
ss
js
movsl
and
sbb
or
xchg
push
xchg
test
push
inc
adc
pop
pop
cmpb
andl
cmp
xor
jmp
mov
jmp
decl
movsb
mov
fs
aad
movsl
xchg
mov
sub
rcll
inc
mov
shll
and
add
adc
xchg
adc
mov
mov
cmp
sbb
and
pop
movb
cmp
adcb
daa
clc
lret
dec
sub
sub
je
mov
lcall
adc
xor
imul
mov
xor
aas
cmpb
pop
addb
xor
out
pop
adc
les
shrb
dec
pop
addr16
lods
sub
or
enter
mov
push
mov
mov
lret
add
mov
hlt
sub
shrl
data16
mov
ret
xchg
rcrl
xchg
ficomps
in
fwait
pop
bound
inc
sub
or
imul
cmp
cld
pop
call
push
lret
mov
outsl
xchg
adc
mov
mov
lods
and
and
xor
push
mov
dec
jnp
out
cmovg
imul
ja
or
push
mov
pop
dec
push
push
inc
test
cltd
test
sub
mov
mov
popa
outsl
jecxz
fcompl
ret
movsb
and
rcrl
push
aad
fs
loopne
mov
jle
std
add
cltd
or
loop
cmp
or
lock
push
rcl
mov
sub
aam
cli
icebp
in
jns
jb
cmp
xchg
mov
xor
jecxz
inc
mov
and
pop
in
hlt
xor
in
jno
stc
cmp
loop
cltd
and
xchg
mov
enter
mov
outsl
or
push
inc
dec
mov
pop
movsl
cmp
adc
add
inc
jbe
nop
mov
sub
mov
dec
ljmp
clc
or
hlt
cs
inc
push
cmp
or
inc
jmp
sahf
push
inc
out
pop
aaa
and
fs
pop
adc
movsb
shll
testb
cmp
pop
loope
push
fistpl
lea
test
pop
fs
lahf
and
icebp
lods
or
out
sub
jp
jmp
test
mov
pusha
outsb
or
movd
xor
cltd
adc
mov
mov
jecxz
dec
sub
out
loope
add
jo
ret
into
jb
mov
xchg
push
cltd
xor
imul
loop
push
xor
out
and
mov
mov
mov
icebp
loop
cmp
cmp
jbe
pop
lods
movsb
gs
enter
cld
pusha
out
sahf
int
sarl
sub
rolb
out
xor
xor
sbb
loop
es
and
aam
ds
push
mov
mov
arpl
sbb
fsts
adc
sbb
jb
ds
and
out
adcl
test
movsb
add
ss
outsb
adc
cmp
popf
xchg
jbe
je
sub
std
and
fisubrl
mov
out
es
inc
jno
fs
mov
cmp
sub
mov
push
xor
cs
aad
in
push
rcll
daa
and
fisubl
insb
je
in
subb
inc
pushf
shll
aam
leave
mov
fisubrs
out
dec
add
out
add
xchg
rcr
mov
jmp
rep
mov
incb
mov
cmc
push
lcall
sub
sbb
adc
mov
sti
cmp
sub
out
mov
rcll
js
lret
dec
int
mov
push
add
push
sub
lods
xchg
mov
xchg
adc
or
mov
or
into
sub
lock
into
or
pop
cmp
ja
inc
adc
xor
scas
adc
popf
pop
ret
test
or
cmp
cs
adc
in
cwtl
loop
bound
push
mov
jecxz
scas
sbb
mov
movl
push
addb
mov
shl
lea
bound
mov
adc
int
adc
test
sbb
cmp
add
dec
aaa
nop
dec
fnstenv
xor
shlb
sub
or
sub
mov
push
jnp
push
popa
nop
das
clc
fwait
add
pop
pop
xor
outsl
lret
out
outsb
in
int
mov
cmp
jmp
pop
jg
in
sahf
fwait
icebp
sti
aas
push
popl
mov
out
ficomps
call
push
jo
mov
lret
or
mov
fisubs
and
sar
pop
dec
add
adcl
sub
cmp
cld
mov
xchg
jbe
pop
clc
mov
mov
call
jmp
out
out
jo
dec
stos
inc
dec
adc
mov
and
rcll
in
cmp
pop
popa
bnd
dec
xlat
xchg
cs
mov
repz
sahf
sub
sar
lahf
fidivl
arpl
pop
stc
xchg
out
sbb
jne
or
lcall
and
fnstsw
fdivs
mov
add
sbb
lret
fwait
xchg
xchg
push
jns
imul
ret
push
insl
cmp
push
aam
push
loop
push
jae
mov
mov
dec
jae
jp
bound
mov
mov
xchg
mov
pop
push
pop
std
cmp
mov
std
fwait
sbb
add
jp
sub
repz
ret
popf
cmpsl
push
ljmp
out
xchg
fdivr
mov
in
add
es
add
mov
cmp
in
or
xor
dec
or
outsb
sub
xor
mov
je
jecxz
dec
outsb
outsl
inc
jae
mov
inc
sub
jnp
push
cmpsl
imul
dec
cwtl
stos
ja
insl
lcall
sub
cmpsb
cwtl
nop
jmp
std
push
ss
mov
es
sbb
adc
mov
or
fistpl
mov
testb
outsb
cwtl
or
imul
aas
pop
jmp
cmc
cltd
fsubs
mov
lods
pop
std
fistpll
mov
jnp
mov
adc
test
dec
fistl
rclb
fildll
sbb
mov
xchg
xchg
push
adc
pusha
inc
xchg
or
sbb
cmpsb
lods
lret
xchg
daa
mov
adc
mov
and
aas
add
sbb
lock
inc
push
ret
inc
add
shrb
out
cmpsl
pop
pop
in
std
mov
lods
jbe
lods
cwtl
es
shrb
push
scas
pushw
fldenv
imul
sub
xchg
dec
jl
adc
xor
ds
sbb
mov
rolb
mov
std
rorb
xchg
pop
push
inc
pop
ja
xchg
mov
sbbb
data16
push
sub
mov
adc
dec
adc
xchg
int
adc
leave
lds
inc
adc
inc
arpl
dec
mov
pop
fidivrs
pusha
and
cmpsb
dec
loop
xchg
nop
push
ret
mov
adc
sti
pop
ss
lock
jp
mov
shl
in
push
push
outsw
add
imul
or
insb
cs
movsl
xlat
mov
push
movsb
jle
frstor
lea
xor
mov
std
pop
or
sub
mov
pusha
add
adc
in
inc
cmp
gs
ret
in
pop
lret
nop
neg
jge
pushf
or
push
push
dec
or
push
sub
sti
call
ret
aas
and
sti
push
and
xor
fbld
sbb
lret
xchg
lret
mov
mov
jb
test
je
nop
pop
push
fwait
mov
stos
lcall
rorb
sarb
lahf
push
sbb
lcall
mov
mov
mov
sti
sub
push
jno
push
cmp
pop
subb
pop
cmpsb
iret
js
cmp
sbb
fmuls
push
cld
cmp
xor
das
jp
jl
push
push
xor
and
daa
xor
xchg
jo
in
or
aam
cld
mov
push
xor
fbstp
cmpsl
xorb
or
dec
cmpsl
fistpl
push
int
sub
stos
sti
outsl
jbe
imul
aas
rclb
roll
or
push
mov
nop
push
mov
das
mov
fsubrp
push
fcom
divb
jb
jo
cwtl
xchg
xchg
push
addr16
daa
adc
cs
aad
add
or
sbb
gs
pop
in
out
or
cs
clc
aad
xchg
pushf
data16
adc
loope
ret
jmp
subb
push
add
and
cltd
and
pop
lds
je
testl
int
ds
sub
mov
int
sarb
scas
push
mov
cmp
or
stc
mov
cltd
arpl
inc
ss
jae
push
enter
aad
aam
ret
pop
outsb
jmp
push
jb
ret
pop
scas
test
fdiv
cmp
lods
push
cli
cmpl
inc
push
mov
iret
jle
orl
add
inc
pop
lea
mov
cmpsl
fsubs
xor
jl
rclb
mov
sub
aaa
fimuls
jo
insl
push
adc
jae
pop
mov
push
jecxz
add
add
pop
xor
test
dec
xor
ja
jl
test
movsl
es
push
aaa
fsubp
in
xchg
push
jno
popa
les
out
jae
and
jno
dec
sbb
jae
sub
add
push
shr
jle
pop
in
xchg
subl
and
jmp
int
std
insb
aam
push
lret
or
jb
lea
cs
out
ret
leave
and
bswap
jb
cmp
fisttps
jb
xor
loopne
jle
xchg
lcall
subb
add
jmp
sahf
push
cltd
pop
pop
xchg
mov
fadds
xchg
pop
jns
in
scas
add
pop
sti
or
xchg
test
cmp
lret
xor
push
dec
sub
loopne
pop
jl
ret
jmp
loope
mov
xor
jnp
ja
mov
ret
bound
lahf
movsb
ja
outsb
xorl
jge
sub
daa
cltd
xchg
ljmp
mov
out
mov
cli
call
xchg
pop
pop
or
clc
xchg
fucomip
push
sbb
jae
jmp
push
jle
orb
jge
ljmp
mov
mov
mov
jg
pop
xor
pop
into
mov
and
cltd
cmp
shll
orb
sar
adc
in
pop
inc
arpl
mov
mov
vcvtsi2ssl
jno
in
adc
mov
aad
fs
and
adc
xlat
mov
mov
cmp
fs
mov
outsl
pushf
pop
pop
cmp
addb
mov
mov
pop
sbb
shrb
or
andb
ds
outsl
into
jns
jecxz
mov
sub
out
ljmp
mov
add
xor
pop
or
sbb
mov
aaa
xor
mov
js
mov
or
fstl
mov
mov
js
ror
mov
sbb
testl
data16
nop
xchg
xchg
cmpsb
lods
xchg
mov
rcl
or
stc
or
xchg
scas
mov
cmpsl
popa
add
mov
jmp
outsl
leave
and
das
stos
mov
outsl
sbb
test
icebp
pop
insl
scas
pop
fdivrp
icebp
shlb
pop
push
mov
lea
mov
pusha
jb
inc
into
adc
sahf
ja
cltd
sbb
xor
xchg
mov
fwait
sub
das
sub
xchg
mov
dec
mov
sub
std
xor
fsts
popf
xor
mov
adc
inc
mov
cmp
or
ret
lret
mov
mov
out
inc
sub
inc
dec
dec
mov
pop
repz
inc
sbb
aaa
lods
ror
mov
testl
loop
add
pop
pop
push
ljmp
jmp
add
push
inc
ret
insl
xchg
int3
jb
les
xor
jns
mov
sbb
mov
das
int3
loop
sarl
and
pop
or
inc
sub
push
xlat
push
scas
out
sub
stos
mov
outsl
popf
dec
mov
ds
mov
mov
mov
icebp
jo
dec
cmc
test
mov
jp
call
xchg
pop
cmp
int3
imul
out
insb
mov
xlat
std
pop
dec
mov
rcr
jo
je
outsb
push
loop
and
inc
adc
dec
jo
movsl
jae
ljmp
pop
test
mov
lods
or
cli
add
mov
lods
into
das
rorl
inc
dec
pop
jmp
stc
mov
adc
lret
cmpsl
out
adc
js
and
xor
insl
mov
jp
insl
cmp
cs
inc
xor
mov
rcrl
sti
xchg
xor
stos
xchg
incl
ss
test
aas
cmc
push
xor
pop
out
cmp
fsts
nopl
sub
mov
cmc
int
pop
xchg
outsb
xchg
mov
daa
movsb
divl
mov
aam
push
sbb
mov
mov
mov
fs
pop
test
adc
push
jmp
mov
cli
cmp
or
into
push
sub
enter
sbb
sbb
mov
aad
hlt
gs
lcall
scas
xchg
push
rcrl
push
add
imul
ljmp
jle
xchg
out
out
cmp
pop
icebp
jecxz
mov
sbb
mov
jnp
and
cmp
fcompl
push
cld
testl
clc
mov
repnz
fcmovne
inc
jnp
sub
test
push
call
dec
int3
pop
sahf
lock
and
xchg
loope
cmp
test
adc
or
cmp
lods
inc
pop
or
mov
mov
insb
lds
jmp
pop
mov
daa
dec
xor
pop
push
dec
jmp
adc
cmp
push
das
lock
jnp
ret
lea
lcall
push
sbb
inc
mov
aas
add
pop
notb
lock
sub
xor
jnp
daa
lods
cmpsb
or
sub
mov
lock
or
push
lret
cmp
data16
pop
and
fs
insl
in
jbe
fisubrs
inc
jle
adc
daa
ja
arpl
jb
nop
sbb
inc
addr16
and
notb
jnp
xlat
cld
pusha
jp
dec
int
cmp
inc
or
pop
out
xor
cmp
dec
jb
push
ds
loopne
mov
jae
lods
push
mov
mov
imull
ret
fisttpll
js
adc
dec
insl
ja
incl
lahf
mov
mov
add
mov
mov
out
inc
cltd
stos
jg
adc
jle
shl
nop
sub
jae
jno
aad
xchg
xchg
shl
cs
out
mov
or
xor
orl
mov
xor
test
fwait
push
enter
sbb
clc
imul
inc
or
test
lret
inc
sbbl
imul
dec
dec
outsb
into
pushf
aam
inc
nop
into
movsb
orl
movsb
jmp
andb
mov
sahf
ja
fmul
dec
mov
popf
repnz
mov
sbb
xchg
push
sarl
lcall
xor
mov
mov
xor
push
fldcw
cltd
pop
rcrb
cmp
test
inc
outsl
jmp
int
push
or
fidivs
xor
cmp
rolb
push
xlat
loopne
push
dec
hlt
movsb
sbb
pop
int3
aad
mov
pop
mov
in
pusha
rcrb
sbb
jmp
enter
pop
jecxz
std
test
jns
xchg
repz
pop
pop
adc
xchg
mov
in
data16
xor
add
aad
in
dec
clc
adc
pop
cli
mov
sub
in
lahf
fisubs
cmp
xchg
movsb
loopne
xlat
mov
insb
sarl
inc
fstp
dec
sbb
add
test
xlat
cmpsl
cmp
mov
cmp
xchg
or
cmpsb
daa
dec
pop
ret
jne
inc
nop
fnstcw
mov
xor
jbe
shrl
push
cmp
cmp
jns
inc
sub
mov
jnp
jno
and
add
mov
jne
inc
pusha
push
xchg
hlt
roll
bound
lcall
adc
sarb
aas
push
mov
xchg
xchg
fistps
lock
mov
sub
fbld
jp
mov
fsts
mov
mov
xchg
xor
mov
cs
insb
stos
aad
mov
aad
fsubrs
pop
push
inc
js
or
xor
outsl
push
mov
mov
xchg
or
adc
pop
mov
push
pop
fstpl
rcl
pusha
mov
lea
jle
sti
test
insl
insb
mov
ret
mov
pop
or
leave
shll
inc
filds
popf
icebp
adc
inc
pop
push
dec
ljmp
mov
bswap
gs
or
int
jnp
pop
mov
lret
nop
pusha
repnz
fiadds
shlb
sub
push
inc
mov
popa
fmull
adc
outsl
stos
decb
xor
mov
xchg
xchg
fs
push
dec
push
xchg
lock
jmp
push
jl
jl
xor
iret
adc
inc
mov
inc
cmp
and
pop
test
or
inc
push
fdivrl
repnz
mul
dec
sub
inc
fildll
popf
push
jb
add
push
xor
jp
pop
popa
and
dec
mov
std
ds
adc
adc
cmp
stos
dec
ret
dec
int
mov
push
jb
adc
mov
cmp
dec
out
and
pop
pop
adc
or
xchg
sbb
negb
push
je
adc
stos
xchg
xor
scas
mov
sub
lret
jmp
test
scas
jecxz
rorl
mov
pop
fwait
inc
adc
stc
push
imulb
and
orl
cld
loope
and
sbb
test
inc
adc
jmp
in
rorb
test
or
fcomps
xor
xorb
adc
pop
mov
sarb
inc
repnz
je
push
stos
fcmovnu
int3
sbb
mov
add
or
add
and
pop
das
inc
fs
push
and
rolb
pusha
loopne
nop
xchg
mov
or
add
adc
sbb
ficoml
andl
call
sbb
mov
je
fsubl
inc
stc
and
loopne
cmp
mov
pusha
pushl
sub
mov
imul
pop
pop
push
cltd
push
shlb
xchg
mov
mov
subl
dec
stos
jnp
jg
ljmp
xchg
inc
popf
mov
nop
sbb
inc
sub
stc
jl
dec
cmp
scas
pusha
aad
or
mov
add
sbb
cltd
lret
fucomp
jge
stc
addr16
jno
adc
loopne
jmp
dec
jmp
mov
cmp
mov
sbb
mov
cmp
pop
jl
mov
xchg
stos
inc
cwtl
or
in
or
mov
stc
outsl
mov
mov
push
arpl
xchg
stos
pop
lahf
ss
dec
dec
incl
mov
popa
inc
dec
fsts
ljmp
jae
add
scas
stos
mov
movsl
loopne
outsb
push
lcall
push
jo
repnz
lahf
pop
movsb
test
imul
jge
mov
add
sub
pop
test
into
mov
rolb
and
cmp
and
lds
mov
daa
and
enter
or
mov
int3
add
adc
lret
push
and
fisubrl
sbb
lods
push
fsts
mov
and
shl
cmp
adc
add
or
test
adc
js
mov
inc
jmp
outsl
jmp
lcall
dec
js
mov
pop
hlt
filds
mov
shrb
insb
das
pop
push
mov
test
add
scas
pop
mov
mov
jg
outsb
es
outsl
sub
cmpsb
mov
push
lcall
ficompl
test
dec
xor
in
pop
lock
rorl
data16
mov
popf
xchg
inc
test
and
jp
nop
fwait
addr16
lcall
jp
dec
sahf
jno
ljmp
fimull
arpl
push
stc
add
cmpsl
les
xchg
shl
ret
outsb
push
xorl
adc
aad
push
pop
and
shrb
mov
int
dec
loop
inc
andl
rcll
fldcw
add
push
dec
mov
push
and
push
int3
outsl
les
push
xchg
jns
enter
push
rorb
push
push
mov
push
pop
hlt
data16
cld
mov
xor
call
push
sarl
or
stos
je
movsl
test
xchg
pop
stos
push
push
scas
add
rolb
push
mov
cli
dec
mov
repnz
xor
mov
mov
mov
scas
push
pop
add
lea
xchg
mov
aas
into
push
leave
add
or
ds
or
add
lret
add
sub
ljmp
or
sub
xorb
aas
dec
cmp
jecxz
iret
jge
dec
loopne
sub
ljmp
adc
stc
xchg
fsts
xor
xor
push
lahf
add
int
iret
iret
loope
mov
add
xor
mov
or
roll
ds
inc
loope
rcrb
push
leave
pop
push
jmp
leave
cmp
mov
mov
enter
mov
sub
push
push
mov
mov
ret
repz
push
xor
dec
mov
lods
add
or
aaa
push
lods
push
loopne
dec
mov
push
and
and
sub
fwait
daa
jns
idivb
pushf
xlat
popa
adc
cmp
xchg
push
jo
das
setns
test
aam
sbb
les
mov
aam
outsl
lret
rcll
fisubs
mov
jp
fisubs
cmp
sbbb
mov
cs
call
das
fnstcw
mov
inc
xor
and
pop
mov
daa
aad
insb
sub
push
daa
inc
add
adc
inc
into
lds
dec
and
ficompl
rcrl
jns
lahf
xchg
out
dec
jno
mov
or
call
or
jns
xor
outsl
push
mov
sbb
xor
clc
gs
scas
mov
test
shlb
mov
sub
std
stc
aaa
pop
lcall
outsb
inc
divl
roll
repz
iret
imul
in
cld
sub
fnstcw
mov
and
jno
jno
xor
jmp
dec
mov
lods
mov
push
mov
xchg
jb
pop
int3
add
adc
in
and
aad
test
mov
xor
sbb
addr16
pushf
repz
dec
fnstenv
sbb
cmp
js
iret
ljmp
push
aad
in
shll
pop
adcb
loopne
xchg
mov
sbb
iret
inc
xchg
xchg
jno
cwtl
nop
adcl
cmp
xchg
lahf
cmc
out
jo
les
fisttps
adc
push
loope
mov
mov
dec
jmp
sub
xchg
jp
sbb
aaa
aaa
dec
inc
ds
jecxz
and
jp
aaa
fidivrl
movsb
sbb
lahf
pushf
sti
aam
pop
rorb
out
mov
sub
mov
sub
sti
sbb
mov
mov
mov
and
imul
loopne
sarb
inc
aam
rcrl
cld
sub
cs
jge
xchg
mov
mov
scas
es
sub
stmxcsr
mov
pop
test
push
nop
cmp
dec
iret
cmpsb
in
outsb
lret
push
push
xchg
cld
les
push
xor
mov
adc
jo
xchg
or
pop
rcrl
mov
jg
lds
jb
cwtl
imulb
call
cmp
cli
add
xchg
push
arpl
dec
jae
lret
lock
test
outsb
fwait
gs
aad
out
cmp
mov
xor
mov
pop
pop
xchg
loop
int3
pop
mov
filds
pop
inc
dec
in
jmp
gs
dec
xor
xchg
sarl
lock
xchg
aaa
data16
lods
test
and
push
stos
pop
inc
in
push
sarl
or
loope
incb
scas
mov
mov
repz
mov
aaa
push
xchg
mov
dec
icebp
out
cmpb
adc
std
adc
stos
out
jmp
fdivrs
mov
jg
cmpsb
pop
das
xchg
je
idiv
scas
jae
imul
ror
sti
push
cmpsb
mov
xchg
mov
xlat
mov
mov
ljmp
add
jle
inc
out
in
cwtl
cltd
data16
int
push
add
test
xchg
and
fldenv
jnp
mov
inc
cmp
pop
sahf
movsb
add
imul
add
outsl
sbb
out
jecxz
jne
inc
std
jg
or
sub
movb
sbb
stc
and
jne
pop
sbb
into
xor
cmp
movsl
mov
loop
popa
jne
lods
add
pop
hlt
imul
jns
sub
cli
in
aaa
shlb
mov
bnd
icebp
dec
dec
aad
and
sbb
shll
fwait
mov
leave
mov
xchg
lock
jbe
lret
sbb
adc
imul
mov
cmp
imul
jb
push
mov
mov
in
mov
pop
scas
cmp
rclb
cmpsb
repz
dec
je
cmpb
mov
mov
push
adc
in
sti
sbb
lock
sbb
push
movsl
mov
pop
adc
push
or
aam
leave
es
add
ficompl
lret
sbb
aam
js
cli
subb
ss
mov
jp
mov
sub
lods
xor
adc
fnstsw
push
jp
jne
jl
inc
fwait
xlat
dec
push
lea
push
aam
popa
sub
xorb
mov
push
sub
ret
xlat
mov
sub
mov
dec
xchg
repnz
rcl
mov
xchg
or
xor
push
xchg
in
insb
in
lcall
add
movsb
xchg
rorb
dec
mov
mov
jb
add
js
addr16
lea
notl
dec
mov
lods
xchg
cmpsb
ss
bnd
icebp
repnz
sbb
in
cmp
cld
imul
sub
adc
push
popa
std
je
das
cmc
push
pop
dec
mov
out
adc
mov
fisubrl
fs
enter
dec
sub
mov
lret
fnstsw
adc
fs
movsb
cld
sub
mov
or
cmc
cmp
pushf
xchg
loopne
cmp
sub
inc
fisubrl
push
in
and
adc
xchg
and
fbstp
mov
jno
xchg
loope
fisttpll
cwtl
out
xlat
aad
mov
mov
in
popfw
adc
xchg
dec
std
push
imul
outsl
fisubrl
sub
loope
fs
add
insb
les
or
roll
flds
in
je
dec
outsb
mov
or
adc
jp
test
or
call
add
das
cltd
pop
fistps
test
test
push
push
cmp
fisttpll
pop
addr16
int3
sarb
insb
xor
das
jns
sub
roll
xchg
sub
test
add
sbb
les
rorl
jg
jo
jne
push
dec
pushf
jg
adc
push
aad
push
xor
pushf
push
incb
pop
fnstsw
cmp
inc
cmp
movsl
test
mov
in
push
out
cmp
popa
andb
ret
dec
cmp
sbb
adc
inc
es
dec
addr16
and
mov
pop
les
xor
mov
jge
add
das
cld
push
pop
lahf
mov
cli
shl
sub
bnd
shlb
sub
dec
imull
jnp
push
jg
adc
and
xor
jo
jle
push
nop
rorb
mov
js
jb
lret
xchg
pusha
xor
sti
mov
adc
mov
data16
mov
insl
into
pop
dec
in
outsb
mov
aad
es
lock
stc
fstl
adc
sbb
push
jae
es
loop
inc
mov
xchg
sbb
inc
in
divb
movsb
pop
mov
jg
and
dec
and
push
sub
pop
mov
fiaddl
mov
mov
push
dec
mov
sbb
fadds
fistpll
adc
or
xchg
in
xchg
inc
movsl
xchg
sbb
out
cmpsb
cmp
dec
adc
push
mov
clc
stos
push
or
lods
mulps
add
lods
in
push
in
outsb
xlat
repz
cmp
adc
pop
loop
inc
fimuls
pushf
xor
jge
es
push
or
ret
push
sti
sbbb
lods
dec
ret
sbb
adc
stos
mov
sub
test
xchg
sub
xchg
sub
test
push
sti
adc
pop
cmp
lds
jmp
and
sub
fstpl
aaa
push
mov
movsl
int3
xor
cmp
les
push
es
jg
cmp
jg
xchg
arpl
ljmp
insb
pop
push
add
movsb
test
push
add
mov
ret
jge
cmpsl
and
imul
out
into
pop
mov
xchg
cmp
rclb
xor
xchg
sbb
mov
cli
aam
ljmp
out
inc
and
xor
stos
shrb
testb
insl
lods
dec
ret
scas
test
mov
jno
add
sub
xor
add
mov
xor
inc
ss
int3
mov
pop
jmp
test
shrb
add
nop
add
add
and
sahf
adc
inc
mov
or
stc
jbe
es
adc
mov
xor
stos
cld
bswap
mov
cmpsb
mov
fstp
mov
inc
rcl
jp
or
addr16
hlt
push
push
ficomps
pusha
decl
mov
sub
jne
mov
and
mov
std
popf
mov
jecxz
sbb
cmp
iret
mov
scas
sbb
fwait
data16
mov
adc
xchg
into
jae
xchg
jne
push
insb
test
subl
inc
mov
cmp
cmp
mov
mov
in
sbb
jecxz
scas
xor
inc
movntps
push
test
cmc
les
inc
cmp
cmp
push
cltd
lods
xchg
sub
push
dec
movsl
dec
adc
jg
fcoms
testb
mov
test
fcompl
push
cli
sbbl
add
pop
or
sub
jmp
test
xor
xchg
data16
mov
jne
and
xchg
add
push
jge
xchg
fcomp
gs
test
lock
es
adc
test
fdiv
pop
inc
or
cli
fbstp
andb
mov
test
push
and
pop
jne
pop
int3
lods
dec
and
cmpsb
xchg
into
inc
movsl
and
xor
mov
adc
pop
push
jge
fs
je
mov
adc
mov
and
test
sub
std
enter
aaa
inc
sbb
cmc
pmaddwd
lds
sbb
movsl
nop
insl
pop
leave
jl
dec
out
xchg
jbe,pt
or
dec
add
adc
aad
adc
sbb
stos
cmp
cmp
aad
out
iret
sub
sbb
xchg
jb
pushf
jae
cmp
testb
lahf
dec
add
dec
popa
repnz
cmp
arpl
pop
test
pop
in
lock
inc
out
clc
xchg
dec
data16
in
push
jp
pop
loop
cmc
negb
mov
push
inc
or
sbb
enter
aam
mov
pushf
sub
mov
cmpb
cli
mov
orb
add
sbb
pop
inc
scas
sub
iret
clc
push
pop
mov
jb
pop
repnz
pop
nop
repz
inc
mov
cmp
mov
test
cmp
out
cld
mov
mov
sarb
addr16
mov
leave
lcall
int3
cli
sbb
mov
jo
adc
jbe
push
mov
aaa
scas
stos
cmpsb
jge
mov
jl
pop
stos
mov
imul
push
arpl
mov
mov
cmp
mov
das
push
movsl
sbb
outsb
pusha
lods
pop
lock
xor
mov
es
or
test
xorl
xchg
mov
orb
lret
mov
loopne
repnz
xor
fsubrs
mov
ljmp
into
sbb
push
std
sub
or
push
sub
pop
test
or
and
mov
adc
mov
daa
ja
push
adc
pop
inc
xor
inc
scas
sub
popa
cwtl
add
int3
leave
jb
dec
das
inc
mov
mov
xchg
flds
fdiv
mov
or
jmp
xchg
mov
jnp
ja
sub
pop
daa
and
add
aad
insb
add
mov
loopne
or
cmc
pop
gs
xor
cmpsb
jg
and
dec
ret
cmpsb
adcb
mov
stos
sbb
out
enter
test
enter
xor
daa
out
insl
ljmp
hlt
int
addr16
test
jo
addb
adc
insl
adc
test
test
mov
mov
ret
pop
xor
push
data16
sub
ficompl
mov
push
mov
push
inc
adc
imul
mov
lods
push
or
stc
push
aas
lea
jl
jg
lock
stos
adc
mov
lret
mov
loopne
nop
fdivrl
cmpsb
sbb
cmp
daa
adc
shlb
sbb
pop
test
cmpl
arpl
aas
ret
mov
das
pop
std
mov
fxch
les
fldt
add
mov
out
scas
mov
cmpsb
movsb
cli
iret
sub
shrl
gs
shrl
sbb
ss
or
xchg
adc
lea
out
dec
jo
ja
sub
icebp
and
fwait
mov
xor
inc
sbb
push
in
push
pop
mov
mov
or
mov
push
not
insb
aad
sub
inc
movsl
dec
je
cltd
jge
mov
movsb
lahf
lret
aaa
lods
mov
leave
jp
hlt
dec
adc
test
sbb
lret
filds
jo
push
mov
xchg
mov
stos
or
addb
xchg
xor
movsl
aas
add
adc
add
js
aam
fbstp
sub
in
inc
pop
clc
mov
bound
cli
xor
std
xchg
add
cmp
mov
xor
enter
fimuls
inc
pop
adc
gs
or
fisttps
mov
sub
cli
jle
data16
arpl
call
jmp
pop
shrl
shr
mov
pop
dec
xor
arpl
adc
mov
mov
cmpsl
and
jge
inc
test
test
xchg
fsts
std
enter
enter
and
je
dec
jbe
ss
test
xchg
push
enter
pushw
adc
lret
rcll
mov
xor
cmc
imul
mov
das
daa
cmpsb
sub
inc
sub
inc
ds
test
push
mov
out
rorl
sub
cmp
push
cmp
fdivrl
dec
push
jae
outsb
jbe
scas
jp
ret
lahf
nop
inc
push
or
push
push
int
push
iret
mov
sub
inc
insl
push
inc
jo
addl
pop
ret
mov
test
add
lahf
mov
add
fwait
push
or
je
mov
mov
mov
outsl
aad
dec
xlat
mov
cmp
cmpsl
loopne
xor
icebp
imul
in
xchg
in
incl
cmpsl
dec
scas
les
gs
fmull
dec
xchg
dec
lcall
sub
push
filds
ljmp
into
inc
fdivrs
push
ds
adc
es
xchg
xor
lea
cltd
test
outsl
enter
dec
rcrl
and
js
xchg
pop
jg
mov
daa
xor
pop
sub
push
and
lahf
cs
shll
and
out
sbbb
sbb
or
in
test
int3
ret
push
test
mov
inc
cmp
nop
pop
add
negl
push
adc
mov
call
dec
es
pop
ljmp
cmp
add
mov
mov
in
mov
mov
mov
mov
xchg
hlt
jae
imul
fstl
dec
stos
ret
fidivs
popf
fsub
push
or
pop
dec
cmp
push
sub
inc
xor
xor
cmp
clc
cli
loop
sbb
fs
lods
scas
mov
mov
mov
adc
sbb
and
pop
xor
popf
and
jg
mov
mov
pushf
int3
gs
and
push
inc
or
shl
add
xor
and
lahf
scas
sahf
cmp
cltd
xor
fsubrs
pop
push
movswl
dec
scas
xor
jle
shl
jl
cmp
mov
fimuls
xchg
jg
xor
sbb
add
jle
jmp
cmpsb
movsl
lods
scas
mov
stos
mov
xor
inc
sbb
sub
je
and
mov
and
faddp
and
mov
ds
jge
cwtl
adc
loopne
xchg
adc
shrl
shlb
lea
insl
mov
andb
mov
mov
mulb
mov
jmp
outsb
scas
test
out
inc
lret
ret
sti
jbe
lds
mov
aaa
sub
lock
mov
or
fisubs
call
inc
add
test
inc
xor
mov
lods
dec
cmp
xchg
dec
cmpsb
mov
adc
mov
push
or
cmc
xor
mov
pushf
sbb
mov
popa
add
adc
inc
inc
addr16
cld
sub
add
daa
pop
fidivs
cs
imul
xor
pop
int3
bound
dec
fincstp
dec
or
test
cmp
xor
adc
adc
mov
mov
mov
enter
push
xchg
sti
dec
in
and
xchg
jl
sub
movsb
js
xchg
inc
mov
cltd
sbb
iret
xchg
fwait
xor
inc
jo
jno
sub
sahf
adc
test
sbb
int3
add
lock
scas
sub
out
inc
shlb
cmp
leave
push
pop
fstpl
cmp
mov
lock
std
xor
fistl
scas
loop
pop
addr16
scas
shlb
xlat
rol
inc
pop
jb
insl
fcoml
pop
jbe
cmp
out
xorl
and
mov
adc
inc
hlt
lcall
in
push
loopne
scas
andl
lcall
nop
sub
outsb
or
mov
ret
mov
and
repnz
filds
fs
adc
inc
pop
dec
not
xchg
cmc
repz
mov
imul
push
fistpll
adc
xchg
adc
and
inc
outsl
or
lcall
stos
jl
arpl
sbb
xor
daa
and
sbb
fs
dec
cli
xchg
std
mov
dec
pop
jne
stos
pushf
xor
fcomip
cmp
lret
push
or
lock
movl
xchg
fidivl
popf
push
ret
jbe
leave
jbe
fldt
lds
and
and
xlat
fstpl
mov
xor
stos
es
cwtl
mov
pop
fidivs
cltd
rcr
pop
shr
dec
in
scas
xor
dec
mov
cmpsl
imul
out
jbe
push
js
sbb
jmp
into
mov
add
lock
ljmp
btr
sub
dec
pop
push
adc
inc
mov
clc
pop
mov
je
pushf
sbb
inc
insb
addl
in
pop
movsb
sbb
shrl
loop
outsl
jbe
jp
pop
push
pop
jnp
push
imul
lea
loope
mov
pop
leave
push
dec
std
insb
sbb
cwtl
sub
jge
pop
sub
push
cmpb
add
int3
daa
scas
sub
insl
xorl
adc
push
mov
xchg
out
arpl
loop
sahf
mov
and
jnp
mov
out
xchg
out
jl
dec
push
push
cmp
mov
repz
push
arpl
std
add
ss
clc
sub
xor
sub
leave
push
mov
mov
test
add
insb
stos
mov
add
pop
fwait
das
imul
fldt
loope
shl
mov
pop
ljmp
push
ss
mov
je
xchg
lock
hlt
mov
push
sbbl
mov
in
push
ljmp
push
xchg
jbe
aad
mov
push
mov
ljmp
fidivrl
push
fbstp
or
cmp
cmpsl
or
or
jne
push
xorb
inc
jle
push
movsl
push
imul
shll
fisubs
hlt
xor
fcoml
sub
mov
xchg
xor
mov
andb
inc
movsb
lret
add
mov
ss
dec
ja
dec
xchg
int
xchg
inc
pop
inc
das
xchg
mov
cmp
push
pop
jnp
sbb
jmp
xchg
adc
xor
inc
dec
movsb
cmc
push
int3
out
add
icebp
and
jbe
dec
sub
dec
mov
inc
push
lds
or
xchg
fstl
sarb
adc
popa
push
pop
pop
push
inc
sub
rcll
icebp
sub
mov
xchg
in
shrb
pop
imul
aam
test
jno
mull
and
inc
mov
mov
jne
mov
stos
mov
in
adc
jnp
test
roll
mov
mov
and
ja
fiadds
lret
addr16
cmp
mov
lock
pusha
call
xor
mov
movsb
loop
adc
inc
pop
mov
cmp
es
mov
test
push
pop
fcoml
pop
add
sbbb
int3
ret
adc
inc
push
xor
stos
in
mov
stos
mov
or
xor
sti
dec
inc
pushf
sahf
jnp
mov
add
or
outsb
push
xor
inc
lahf
push
cmp
in
scas
mov
daa
jmp
lahf
inc
inc
lcall
sarb
cmpsl
sbb
sbb
lret
push
mov
insl
xor
mov
add
xchg
sub
test
es
and
mov
das
popa
out
push
cmp
jno
jo
push
pop
inc
jns
fisubs
dec
idiv
mov
mov
or
mov
jecxz
outsl
mov
xchg
cs
mov
cmp
cli
mov
jmp
add
jo
outsb
aas
mov
dec
push
mov
scas
pop
pop
xor
daa
lds
xchg
cmpsb
xchg
mov
inc
push
jmp
mov
xchg
push
push
inc
jno
or
fs
in
out
lahf
sbb
out
fcmovbe
repnz
test
pop
pop
jbe
lahf
movsb
adc
sub
decb
jb
sbb
fwait
fwait
mov
mov
push
sbb
and
xchg
cs
dec
cs
test
icebp
hlt
outsl
jmp
mov
les
cli
pop
movsl
scas
mov
dec
int3
cmp
out
xor
cli
fcomp
cwtl
mov
adc
inc
insb
xchg
lsl
and
test
dec
lret
sti
push
sahf
das
cmp
adc
loope
mov
mov
xchg
jno
outsl
jle
cmp
pop
jl
xchg
jns
cmp
cs
sub
inc
jle
scas
loopne
dec
ret
push
mov
fdivrl
mov
addr16
pop
inc
mov
fldcw
jo
push
leave
push
sub
inc
loop
pop
iret
int
or
fwait
jns
xchg
sbb
pusha
dec
xchg
and
push
push
hlt
inc
mov
sub
push
adc
push
fs
sti
bound
orl
mov
insl
adc
xlat
inc
jge
movsb
iret
or
fnstsw
mov
ds
sbb
mulb
pusha
cmp
scas
cmpsb
sbb
mov
mov
call
test
lret
pop
mov
sbb
int
push
shl
sub
or
ja
adc
in
add
lea
leave
or
lods
loop
add
jns
lcall
lret
push
dec
push
sub
rcrl
xlat
pop
cli
ljmp
scas
dec
sbbb
cmp
xor
xorb
add
sub
inc
adc
imul
push
shlb
push
loope
mov
or
xchg
jg
jg
mov
fcomp
data16
call
repz
jge
xchg
xor
out
add
inc
mov
enter
pop
or
push
lcall
dec
xchg
lock
adc
push
add
mov
push
dec
xor
fs
mov
lds
adc
pusha
shll
push
pop
pushf
mov
addl
pushf
cmp
pop
mov
fs
and
pop
dec
fwait
jae
adc
aaa
sub
and
mov
dec
mull
leave
fistps
pop
push
cwtl
pusha
xchg
test
push
or
push
jb
or
repz
aaa
fsubrs
mov
out
and
mov
stc
in
sbb
or
jmp
push
mov
int
sbb
pop
inc
xchg
aad
or
dec
sarl
fisubrl
mov
ja
ss
stos
pop
xor
mov
add
shll
pminsw
and
pop
pop
rcrb
jb
jno
sbb
push
pop
popf
and
aaa
iret
sti
lock
out
lock
test
hlt
fistps
fs
dec
jle
imul
cli
icebp
xchg
adc
xchg
ja
lds
mov
mov
adc
popa
outsl
lock
inc
push
lret
movsb
xor
fcomip
test
pop
and
mov
xor
popf
inc
sbb
decb
mov
out
pop
dec
jns
std
inc
or
andb
mov
mov
pusha
mov
xchg
movsl
sti
test
adc
fwait
xchg
loope
into
mov
jbe
jle
into
xchg
mov
inc
push
dec
inc
bound
push
fldenv
sbb
test
mov
sbb
adc
decl
test
mov
cmp
adc
or
and
loop
pop
lods
mov
aam
jbe
dec
pusha
outsl
mov
mov
imul
loop
stc
pop
loop
jge
or
imul
and
cmpsb
xor
fs
sbb
cmpsb
xchg
or
push
stos
push
mov
push
or
insl
testl
cld
test
pop
fstpt
or
mov
ffreep
jg
testl
sub
and
cmpsb
xor
pop
xchg
push
adc
lock
rorb
lea
pop
fmuls
movsl
fcmovnu
add
test
int3
mov
enter
xchg
mov
push
jge
pusha
sub
js
dec
pop
xchg
stos
adc
inc
xor
mov
adc
test
mov
push
or
inc
mov
daa
sub
cmp
jns
movsb
push
inc
pop
insb
lret
inc
add
xor
outsl
ljmp
xor
pop
push
daa
push
enter
adc
xor
lds
lods
push
daa
into
jp
or
popa
gs
or
icebp
movsl
jbe
dec
lcall
jb
aaa
or
mov
adc
adc
cmpsl
fstps
and
ret
test
mov
jns
jae
shll
mov
ret
add
ret
and
cmp
inc
sti
pushf
ret
push
outsl
aad
push
mov
dec
and
sub
cmpsb
mov
mov
inc
xorl
mov
ret
lahf
dec
and
mov
lret
sub
mov
andl
and
int
xchg
pop
jnp
adc
ljmp
sub
nop
xchg
sub
jge
adc
stc
mov
jecxz
jnp
push
cmp
or
or
std
shr
mov
lock
movsb
xor
add
nop
mov
and
inc
ds
jle
inc
pop
xchg
cli
sbb
push
mov
sub
adc
or
dec
in
dec
xor
popl
jo
js
xchg
or
pop
das
push
outsb
in
in
xchg
dec
mov
and
mov
cmp
lods
adc
fcoms
lods
mov
mov
icebp
dec
ret
das
jnp
insb
lods
dec
adc
hlt
cmp
sahf
leave
or
ds
mov
stos
xchg
pop
pushf
mov
ss
stos
inc
push
inc
jmp
sub
jbe
fistpll
push
add
pop
scas
aam
push
icebp
dec
loope
int3
inc
and
inc
jno
int
mov
sbb
push
jmp
test
mov
mov
rorb
mov
cld
jp
mov
dec
xchg
pop
mov
adc
xor
xchg
pop
pop
out
mov
cmp
or
mov
mov
insb
pop
lcall
iret
je
xacquire
sub
scas
fsubl
mov
rcr
pushf
xchg
repz
push
aad
hlt
xor
add
add
add
add
rolb
adc
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
mov
jl
dec
pop
jl
into
loop
fwait
pop
or
sbb
push
cmp
xor
test
jae
cld
push
sub
lods
das
cld
jmp
mov
outsl
add
dec
sub
adc
pop
popf
pop
dec
sbb
mov
cmp
fnsave
sbb
jl
dec
push
repnz
sub
adc
xchg
in
loop
push
in
lcall
sbb
sbb
xor
mov
test
mov
sbb
nop
mov
mov
xchg
and
loop
sub
push
insl
xchg
fidivl
adc
leave
insb
jne
sti
push
shrl
mov
fisubrl
arpl
mov
movsl
adc
insb
clc
ja
mov
scas
int
fwait
mov
pop
dec
clc
popf
mov
push
jmp
mov
or
das
and
xor
sahf
or
pop
sbb
mov
cwtl
push
sub
add
push
pop
jae
add
std
ja
mov
outsl
mov
roll
aad
push
popa
arpl
fiaddl
adcl
jg
mov
mov
xor
push
sarb
dec
xor
add
mov
jo
cmp
cmpsl
mov
or
pop
cmpsl
cld
in
iret
and
aad
fwait
les
insb
mov
push
cli
cltd
pop
fnstenv
adc
popf
data16
les
jae
and
add
scas
sahf
movsl
clc
enter
int3
push
pop
cli
aam
scas
jns
jecxz
ret
test
mov
add
push
and
sub
xorl
repz
xor
sub
mov
xor
loope
mov
addr16
stos
inc
mov
pop
add
add
outsl
dec
out
stos
and
pcmpgtw
pop
mov
lds
negl
hlt
jecxz
outsl
jbe
jl
adc
daa
nop
insb
rorb
and
loop
int
lcall
push
jl
add
sahf
push
test
xor
mov
fistps
repnz
adc
mov
iret
pmuludq
rcll
aaa
call
inc
ja
out
pop
adc
inc
lods
mov
lahf
jno
mov
push
inc
cmpsb
mov
dec
cltd
fldl
loopne
sub
out
push
repz
pop
shlb
sbb
rcll
sbb
imul
std
bound
adc
lods
inc
cmp
jp
and
jbe
xor
mov
in
cmp
sbb
push
cld
fistl
push
and
dec
inc
cwtl
adc
stc
jg
in
les
lahf
imul
jge
arpl
mov
sub
mov
jnp
cmpb
out
stc
shr
mov
arpl
mov
add
mov
pop
inc
xchg
push
je
cmp
or
jp
mov
mov
subl
es
stos
sub
leave
shl
out
ss
es
scas
daa
jmp
or
insb
push
cmc
shr
out
cmc
test
cmp
subl
mov
lock
negb
fsubp
mov
aaa
sbb
mov
cltd
and
or
xchg
inc
jb
mov
aad
xor
sub
sub
add
loop
out
lret
cmp
cs
and
in
and
clc
inc
fnstcw
popf
inc
leave
xchg
scas
leave
incb
in
dec
lahf
pop
loope
out
cmp
push
jmp
out
aam
daa
in
fs
inc
lahf
mov
lahf
mov
jmp
mov
mov
xchg
sub
movsl
arpl
jb
fs
dec
xchg
int
push
popf
adc
mov
iret
enter
xor
lcall
bound
add
sbb
aam
nop
xor
mov
sbb
cs
jmp
mov
xchg
dec
adc
fwait
inc
jno
push
jmp
fbstp
add
xchg
in
aad
rorb
pusha
sarb
pop
dec
scas
ret
int3
xor
cmp
divl
adc
jae
pop
in
and
or
mov
or
into
repz
mov
jge
sbb
push
xchg
loope
mov
push
mov
mov
lods
notl
das
mov
mov
lods
cmc
pop
dec
jmp
push
push
inc
aaa
dec
decb
insl
sbb
ret
stc
ret
mov
andl
sub
cli
adc
pop
cmp
std
push
pop
mov
sbb
int
xor
jne
pop
shrb
popf
leave
jns
dec
and
rorl
push
lret
outsl
mov
and
dec
pop
or
pop
mov
inc
test
loopne
cli
push
adc
aam
dec
push
mov
pop
ret
aaa
adc
jg
cmpl
scas
outsl
aaa
or
xchg
inc
and
sbb
jg
xor
cmp
push
fisubrs
xchg
sbb
xchg
add
mov
adc
mov
sbb
pop
or
call
arpl
xor
cmp
stos
push
xchg
pusha
mov
imul
xor
jbe
mov
mov
js
lret
repnz
mov
push
and
mov
sbb
shrb
mov
sub
push
jmp
pop
or
mov
test
cmpsb
add
add
cmpsb
stos
in
mov
mov
lcall
in
in
gs
lods
ljmp
enter
push
daa
clc
punpckhwd
pushf
push
outsl
cli
add
pop
xor
cld
push
sbb
sub
jle
jbe
cmp
adc
xchg
sub
in
jmp
mov
xchg
sub
imul
jl
mov
sbb
cwtl
inc
cmp
xchg
mov
jae
xor
out
sbb
and
inc
sub
pop
outsb
xor
gs
out
mov
sbb
push
mov
sub
sbb
inc
pop
fsubrs
xchg
jle
and
push
scas
sub
sarl
fiadds
mov
ficoms
fsts
orl
insb
fidivl
scas
dec
dec
sbb
push
ja
repnz
adc
repz
jbe
add
fst
pop
pop
mov
mov
add
lock
sbb
and
xchg
jae
outsw
sbb
push
cmpsb
or
xor
mov
sbb
ret
in
sub
sub
leave
insb
jmp
addl
cmp
mov
or
add
jne
jle
data16
arpl
in
imul
and
fs
xlat
hlt
mov
adc
push
xor
cmpsl
shll
xor
loop
xchg
or
lods
or
out
pop
push
out
sub
sti
test
push
sbb
imul
lods
jno
cmp
lods
push
out
int
lret
add
loope
or
pop
cmp
or
adc
pop
and
aaa
shll
sbb
xchg
dec
mov
repz
out
inc
popa
in
std
push
pop
std
aas
cmc
jo
add
mov
rcl
or
mov
loopne
pop
dec
shll
cmp
cs
aaa
mov
push
lods
adc
rorl
and
bound
scas
into
sub
ret
shr
sbb
mov
mov
outsb
push
lahf
adc
mov
out
push
inc
mov
lock
xlat
ss
cmp
adc
mov
xchg
out
jmp
inc
or
out
sbb
dec
ret
test
int3
popa
dec
stos
pop
sub
into
xchg
and
rcl
push
xchg
jae
inc
mov
cmpsb
pop
xchg
arpl
lds
aas
sbb
add
and
and
xor
xor
and
push
adc
push
push
push
cmpsl
sub
lret
pop
shl
mov
push
push
or
jnp
pop
shlb
dec
cmpl
inc
test
std
test
jno
fimull
popf
pop
test
sub
pushf
jbe
adc
sahf
sub
divb
pushf
xchg
xchg
in
out
sub
scas
adc
xchg
jne
pop
xchg
nopl
mov
xchg
ficoml
fs
mov
pop
cltd
in
mov
out
mov
icebp
sahf
or
xorl
pushf
fdivl
xor
rolb
lahf
fmull
lock
lods
push
xchg
push
popf
test
lahf
cmpsb
test
push
and
jmp
movsb
pusha
in
pop
xor
xchg
mov
imul
mov
push
sahf
test
lods
jl
mov
dec
popa
lds
xor
or
dec
jmp
jge
incl
push
mov
fwait
pushf
lea
sbb
xor
cwtl
inc
roll
stos
sub
cmpsb
mov
dec
pop
cmpsl
xadd
sbb
sbb
xor
sub
or
pop
aaa
xchg
xchg
fsubrs
fldcw
pop
and
xchg
cmp
andl
lcall
aam
inc
fcoml
nop
nop
test
lahf
fsubl
pop
repz
fimuls
enter
mov
lcall
jge
cmpsb
insl
sub
ljmp
adc
ds
movsl
out
hlt
pop
lds
add
jecxz
mov
aam
pop
cmp
cwtl
dec
shlb
mov
das
and
leave
xor
test
jne
cmc
xchg
popa
push
cmp
int3
icebp
jmp
cmpsl
xchg
popf
jne
push
inc
mov
dec
and
add
out
add
popf
push
arpl
faddl
push
cmp
mov
int3
lahf
push
lret
sbb
sbb
orb
pop
daa
mov
xchg
fidivrl
cltd
cs
dec
adc
push
cmp
jle
mov
xchg
test
jnp
inc
push
xor
pop
ja
xchg
lcall
xor
mov
pusha
jg
xlat
jbe
cli
pop
lea
repnz
pop
mov
mov
cmp
mov
or
jo
cmp
mov
in
sub
sahf
gs
int3
or
xor
pop
pop
inc
out
sub
sub
jo
loop
ss
xor
cld
fidivs
lods
enter
sub
data16
cmp
shlb
sarb
sub
jle
and
cmc
ljmp
decl
inc
mov
dec
push
dec
add
es
pop
xorb
sub
clc
mov
ljmp
push
push
sahf
xor
pop
dec
clc
inc
je
arpl
sarl
popa
ljmp
sti
xchg
shlb
cmpsl
jmp
push
aas
pop
push
stos
mov
mov
mov
xchg
andb
mov
mov
mov
jae
xor
lods
cmc
mov
lret
add
mov
popa
push
xchg
cmp
mov
testb
fwait
dec
push
mov
fsub
adc
mov
lcall
mov
sahf
push
push
mov
mov
loop
sbb
test
or
pop
push
jge
mov
and
pop
cmpsb
mov
push
stos
pop
ljmp
cmpsl
xchg
push
dec
jl
pop
cmp
shl
push
inc
fcomps
cmp
sub
dec
out
add
lock
ret
movsb
pop
movsb
sub
jae
xlat
jp
mov
sbb
scas
lret
dec
ret
jge
mov
arpl
rcl
cmp
lods
sub
out
mov
cs
add
aam
xchg
dec
cmp
nop
lods
sbb
jo
dec
int3
and
in
inc
aaa
loope
into
push
xlat
pop
loope
outsl
dec
push
ljmp
push
in
data16
insl
or
jae
daa
push
jne
js
repnz
nop
push
movsb
movsl
fimull
and
mov
rolb
mov
lods
xor
dec
and
cmpsb
enter
les
movsl
push
dec
jo
sub
sub
subb
fwait
push
cmp
mov
loope
xchg
push
mov
rcll
xchg
sti
clc
pop
cs
add
pop
pop
mov
add
rolb
imul
rcrl
test
lods
test
dec
pushf
dec
daa
push
mov
mov
xchg
mov
adc
je
das
sub
mov
add
aad
int3
mull
cmp
pushf
icebp
inc
adc
mov
cmc
pop
int3
insb
hlt
mov
inc
dec
je
xor
or
sbb
flds
shrb
sar
mov
sbbl
fprem
push
or
jl
les
mov
call
xor
push
or
cli
scas
xchg
adcb
mov
in
repz
fwait
orb
xor
push
push
add
sahf
imul
shll
cld
inc
cmp
mov
mov
cli
fmull
bnd
inc
dec
mov
sbb
pop
mov
and
fiadds
lret
loope
cmp
add
mov
pop
jge
mov
imul
mov
mov
mov
xor
es
xor
jo
aam
bound
ljmp
addr16
add
movsb
and
adc
in
dec
ret
dec
rolb
xchg
in
mov
into
xor
lea
fbld
inc
jbe
mov
add
int
imul
scas
fsubrp
inc
lret
mov
dec
ficoml
add
jg
inc
std
scas
das
outsb
jge
xchg
and
hlt
dec
repnz
mov
xorl
cs
pop
std
imul
insl
shrb
mov
pop
sub
icebp
cli
xchg
fnstsw
ud0
or
repnz
dec
lods
mov
and
adc
notb
inc
filds
pop
xor
push
pop
loop
stos
mov
js
push
popa
into
jg
pop
lods
stc
mov
lret
sbb
nop
std
push
and
push
jae
xchg
jg
and
pop
adc
jo
outsl
push
push
inc
je
sbb
lahf
ljmp
jecxz
rol
aaa
sub
arpl
xor
fs
add
fistps
or
bound
mov
das
mov
test
xchg
jg
lock
mov
imul
and
and
pop
mov
sub
shll
test
hlt
das
fisubrs
cmp
and
pop
pop
dec
mov
jno
ds
shll
push
and
outsb
xchg
loop
xorl
stos
test
addl
mov
or
inc
xlat
inc
or
push
cmc
mov
lods
push
loope
popa
in
add
fsubr
out
dec
stos
pop
mov
xchg
mov
jb
adc
sbb
sub
mov
scas
out
mov
add
pop
jge
call
cmp
lods
pop
mov
incb
lods
jno
fnstcw
push
sub
aaa
in
jb
push
stos
xchg
mov
push
mov
imul
in
add
jno
movsb
clc
sbb
insb
push
sub
ja
push
xchg
pop
adc
mov
jo
test
aaa
das
sbb
xchg
jp
pop
push
and
dec
into
imul
sbb
mov
hlt
pop
ljmp
lock
arpl
gs
idivb
sarl
add
fdivs
aad
in
int3
adc
lea
inc
mov
jp
xchg
mov
sbb
mov
or
je
movsb
push
int3
cltd
in
in
rcrb
dec
ret
pushf
push
in
pop
dec
or
mov
jg
cmp
and
pop
cld
scas
dec
cmp
jae
cs
aas
mov
test
hlt
xacquire
sub
call
jmp
outsb
lret
mov
push
loop
push
xor
iret
cmp
mov
xchg
pop
lret
inc
or
insl
push
pop
push
insb
loopne
add
stos
scas
cwtl
stc
insb
mov
add
pop
sbb
jg
push
push
dec
cmp
jbe
in
leave
outsl
ja
sbb
pop
or
push
xchg
xor
jne
pushf
push
dec
xor
mov
out
lret
rolb
dec
mov
xchg
out
xchg
push
xor
dec
div
popf
or
cmpsb
les
inc
dec
pop
pop
jp
test
cmpsb
outsl
jge
push
cmp
xor
cmp
mov
jbe
add
fisttps
ljmp
pop
sub
xor
stc
popf
sti
jne
or
sti
mov
mov
jno
loope
shl
cmc
mov
shll
ss
ficompl
sbb
clc
push
adc
dec
daa
jmp
pop
jmp
push
inc
sub
mov
push
call
and
sbb
or
arpl
popf
jb
cmp
pop
cli
jae
mov
lcall
push
cmp
xchg
rcr
xchg
dec
insb
mov
sahf
orl
cmp
adc
push
push
mov
popa
sub
add
cmp
shl
sti
test
push
add
jle
je
mov
jecxz
pushf
iret
mov
cli
pop
sub
pop
cli
scas
adc
xor
sbb
mov
adc
bound
push
xchg
leave
xchg
cmp
mov
ret
xor
xlat
cmc
pop
cmpsb
ja
idivb
test
bound
or
mov
or
out
movsb
decb
sbb
pop
fisttps
cltd
je
pop
js
or
popf
xchg
mov
lock
ds
xchg
aas
cmp
out
lahf
inc
dec
jmp
fwait
loope
movsl
xor
push
push
daa
sbb
pop
or
sub
aam
and
inc
adc
xchg
xor
xor
fsts
std
lea
loopne
jbe
and
xchg
mov
xchg
inc
mov
rcl
ja
push
shll
decb
in
jmp
sti
popa
mov
dec
movsl
xlat
frstor
mov
ret
adc
ljmp
leave
sub
jecxz
or
xchg
nop
mov
fsts
pop
jnp
and
fadds
repnz
or
inc
push
nop
mov
call
pusha
aad
jns
ret
or
into
test
or
aam
fldenv
mov
scas
mov
mov
divl
pop
pop
stc
out
out
jae
data16
jbe
and
ret
push
xchg
sub
mov
adc
daa
dec
lea
sub
insb
push
inc
dec
push
push
lea
or
scas
decl
dec
inc
mov
aas
jmp
sbb
push
mov
push
mov
rdpmc
jae
or
push
lahf
mov
push
dec
inc
jns
xor
ss
fcmovb
fwait
ret
test
xor
fildll
addl
imul
mov
loopne
sbb
mov
fisubl
dec
pushf
lods
pop
stc
gs
out
mov
leave
xor
mov
jg
xchg
lahf
cmpsl
inc
testl
jecxz
xchg
mov
inc
mov
inc
cmc
loopne
pop
xchg
mov
shlb
xchg
mov
mov
ljmp
cwtl
push
mov
lahf
ljmp
inc
lcall
imul
adc
push
mov
cmp
cmp
sbb
jg
jne
xor
pushf
icebp
jne
lods
jnp
imul
clc
sbb
xchg
test
or
or
shlb
cmp
mov
mov
sbb
jns
pop
and
mov
mov
jb
and
sahf
cmp
mov
ss
iret
and
sarb
jle
dec
or
sbb
loop
stc
nop
xchg
aas
cmpb
push
bound
insl
test
xchg
xchg
lock
and
xor
jge
arpl
les
mov
fbstp
test
gs
out
lea
push
pop
sbb
xchg
movsb
push
mov
rorb
dec
pop
xorb
in
pop
and
mov
push
mov
iret
inc
cmp
xchg
jmp
xchg
or
pop
pop
sbb
xor
cmpsb
data16
sti
mov
addb
sbb
cmp
daa
jne
inc
rolb
orb
aaa
cmpsb
push
cwtl
xchg
sbb
sub
sbb
loop
mov
pop
loope
mov
stos
cmp
mov
or
in
jb
fsts
scas
fsubs
fnstenv
movsb
push
cld
xchg
push
pop
adc
sub
nop
out
mov
mov
xchg
or
cmp
icebp
sbb
cmpsl
pusha
inc
or
imul
inc
xor
das
sar
sbb
stos
xor
je
dec
movsl
dec
in
fs
pushf
dec
push
arpl
imul
sti
sbb
popa
imul
xchg
fidivrs
bound
clc
jbe
pop
xor
mov
lods
jmp
fmuls
mov
add
sbb
sub
xor
sbb
inc
mov
adc
int3
sbb
cmc
cmp
inc
cltd
loope
addr16
mov
mov
push
inc
js
cmp
xor
jns
inc
inc
daa
lahf
sbb
hlt
mov
cmc
test
ficomps
xchg
add
sbb
mov
sub
or
in
cmp
mov
mov
adc
jecxz
and
test
ret
insl
dec
aas
jg
mov
xor
pusha
jbe
cli
dec
arpl
in
mov
addl
cmpsl
or
and
mov
imul
pop
bound
enter
xchg
jb
inc
sub
mov
push
jo
dec
jns
rorl
add
adc
mov
mov
frstor
rcrb
push
clc
and
cmc
dec
out
mov
lahf
jns
cmc
push
mov
mov
push
add
push
add
inc
xchg
xchg
push
daa
and
sub
cmpsl
inc
repz
fsubrl
popf
jge
mov
add
adc
xchg
lods
int3
xor
inc
in
jno
xchg
inc
bound
sbb
push
and
adc
sub
add
sbb
dec
dec
les
and
jecxz
and
mov
xchg
pop
fs
xor
adc
push
aad
mov
pop
stos
mov
loop
popa
pop
add
sahf
push
adc
adc
dec
mov
adc
jl
mov
cmp
stc
and
mov
pop
cmp
sahf
lods
hlt
fwait
ja
sbb
packssdw
xor
mov
or
inc
call
dec
jge
xor
jae
fcmovu
test
or
or
stos
lahf
cmp
push
in
pop
flds
cs
xor
test
es
cmpsb
dec
push
mov
popa
fidivrl
push
cmp
repnz
test
je
cmp
mov
jp
loope
andl
ret
lahf
aad
sbb
dec
pop
push
repz
imul
lret
push
mov
dec
add
mov
bound
mov
cmp
scas
mov
outsb
imul
cmp
fldl
call
push
out
call
sub
inc
adc
subb
loope
repz
negb
jmp
outsb
imul
mov
cmpsb
fstpt
xlat
xor
movsl
adc
sbb
mov
mov
dec
bound
mov
pop
push
bound
mov
sub
es
repz
lret
xor
push
out
ret
jge
push
repz
inc
dec
ljmp
sbb
and
jno
daa
icebp
pushf
cld
pop
out
cvttps2pi
jo
push
mov
inc
mov
cmc
and
outsb
adc
mov
xchg
push
push
xor
jb
cmp
test
xor
rcll
xlat
push
nop
enter
ret
jecxz
cmp
and
pop
cmpb
pop
adc
outsl
roll
movsb
lret
arpl
xchg
jg
testb
mov
xor
mov
adc
sbb
mov
js
test
inc
iret
hlt
popf
movsl
je
insb
mov
out
hlt
out
push
or
rolb
mov
inc
sbb
cmovnp
movsl
or
jnp
insb
pop
les
and
inc
stc
pusha
outsl
bound
dec
sahf
add
xorb
lret
insb
punpcklbw
hlt
outsl
jae
icebp
xchg
or
push
push
pop
ja
mov
aam
inc
popf
jbe
lahf
jnp
push
in
lcall
cmp
inc
in
insl
stos
cmp
shll
cmp
jns
and
movsb
xor
bnd
fcmovnbe
daa
pushf
loope
or
add
incl
jmp
scas
sbb
loopne
and
push
xor
inc
ss
inc
into
jo
xchg
jns
mov
mov
mov
popf
js
ja
xor
xchg
cmp
dec
push
cmp
lods
rorb
sub
fs
cltd
xor
adc
jecxz
push
addr16
cmpsw
cmovae
outsl
pop
dec
lods
aaa
shll
adcl
or
sub
filds
out
and
add
xchg
cwtl
insl
fwait
mov
arpl
enter
lds
mov
lret
mov
xor
mov
mov
or
fnstcw
repz
mov
and
adc
xchg
push
pop
xchg
std
sbb
popa
dec
adc
das
into
add
cmp
push
pusha
test
mov
xor
inc
sbb
mov
inc
cltd
insl
or
mov
add
cmp
in
xor
inc
dec
dec
test
negl
jno
inc
into
push
adc
push
push
repz
sbb
jg
mov
arpl
out
xor
outsl
fsts
fcompl
mov
inc
ljmp
lds
mov
pushf
jb
shlb
dec
cli
pop
xchg
and
arpl
scas
xor
in
cmp
jnp
jge
mov
inc
outsb
std
es
mov
imul
jae
push
pop
sahf
test
stc
pop
inc
call
sbb
cmp
jmp
sbb
addr16
sti
inc
xor
jb
cwtl
mov
lea
cld
prefetch
or
aam
sar
cmp
enter
mov
cmpsb
mov
outsb
clc
add
add
pop
dec
inc
pop
xrelease
xchg
sbb
cld
imul
sbb
mov
ljmp
outsl
fldt
outsb
test
imul
xor
mov
mov
pop
push
cmp
cmp
aad
imull
stos
stos
ret
scas
bound
rcll
shr
mov
pop
out
clc
mov
mov
xchg
test
mov
jg
mov
pop
popf
dec
insl
pushf
loop
jnp
push
lods
les
ret
inc
lea
xchg
ss
mov
mov
xchg
push
out
sbb
and
and
and
daa
ja
inc
sub
lds
mov
lds
repnz
call
push
push
cmc
loop
shlb
stos
insl
inc
and
dec
inc
stos
sub
xor
add
cmpl
imul
xor
mov
jg
mov
sbb
pop
add
dec
xchg
out
xchg
into
push
xor
stc
out
jb
adc
push
pop
jmp
mov
pop
je
into
daa
in
rolb
inc
add
mov
int3
lock
inc
sahf
and
in
ljmp
incl
fisubrs
xor
jle
pop
aam
imul
xchg
dec
mov
stos
fildll
mov
xor
ud0
mov
cmp
mov
fists
xor
mov
dec
sbb
add
cmc
lahf
jae
and
out
je
xor
jno
jg
loope
popf
lret
add
pop
mov
mov
aaa
mov
flds
int3
add
sti
stc
out
sub
imul
add
sbb
mov
pushf
pop
push
stos
les
cmp
stos
adc
icebp
iret
nop
jne
les
into
pop
mov
mov
pop
mov
push
sti
xchg
repnz
sbb
sbb
mov
xchg
jge
xor
in
fsubl
pop
mov
enter
std
xlat
xor
sti
jae
mov
out
dec
fsub
mov
xchg
dec
movsl
jge
mov
sub
pop
mov
push
pop
cmp
and
jp
testb
dec
ljmp
mov
mov
popf
or
dec
sti
inc
xchg
push
xor
popf
cmp
cld
lds
jb
sub
aas
inc
div
mov
test
lds
mov
cmpl
mov
push
adc
pop
inc
push
stos
mov
insb
jnp
out
push
cmpsl
sub
pop
mov
in
xchg
rcrb
mov
jl
xor
shrb
add
mov
push
sar
jmp
jbe
insl
mov
inc
jns
ret
jno
xor
in
mov
test
inc
rorl
pop
insl
pop
stc
lods
out
mov
mov
xchg
ds
push
je
sub
subl
pushl
mov
inc
and
cmova
xchg
jne
adc
sub
test
out
scas
push
jmp
jmp
shl
inc
mov
dec
lea
jnp
jae
pop
mov
mov
in
jge
cmp
stos
std
gs
call
icebp
aaa
cmpsl
xor
lods
std
sbb
loop
push
dec
sub
test
addb
xor
ret
mov
iret
sti
and
mov
outsb
xor
push
mov
repnz
icebp
mov
inc
xchg
jmp
push
mov
out
sbb
cltd
pop
call
jb
and
movsl
jb
mov
jmp
inc
inc
test
call
or
push
jae
push
adc
xchg
cld
fstpl
mov
mov
cmpsl
fucom
mov
mov
jmp
inc
das
jge
add
pop
xchg
das
decb
rclb
popl
rorl
mov
roll
or
scas
mov
jno
add
std
xchg
pop
cmp
dec
sti
dec
inc
loopne
mov
movsl
mov
dec
ss
pop
sub
fcmovbe
cmp
jecxz
dec
outsl
jmp
dec
jmp
mov
sub
ret
push
or
jge
nop
adc
mov
ss
sbb
popf
sbbl
cmp
dec
dec
call
fidivrl
clc
nop
xor
loopne
mov
xor
pop
cmp
aaa
into
orl
sbb
aas
xor
dec
lock
lods
sub
mov
mov
scas
push
and
insb
push
cmp
mov
inc
or
cltd
mov
pop
dec
jb
je
or
lret
cmp
arpl
adc
mov
addr16
jl
inc
or
pop
cld
pop
ror
push
test
iret
loop
rcl
mov
mov
outsb
mov
insl
and
push
pop
iret
xor
push
inc
pop
push
add
shrl
lcall
push
gs
jmp
out
sub
es
mov
pavgw
cmp
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
out
mov
mov
pop
jl
loop
mov
stc
and
pop
cmp
jne
jo
lret
cmp
add
add
add
mov
outsl
sar
fcomi
mov
sbb
jp
mov
cmpsb
xor
stos
rorl
ret
mov
test
mov
mov
xor
popf
xchg
mov
xor
xchg
sub
arpl
stos
inc
sbb
jmp
imul
pusha
mov
inc
adc
mov
lods
mov
bound
inc
sub
sarb
popa
mov
add
sti
pop
ja
int
test
add
xor
popf
mov
jnp
push
cmp
fmul
or
das
adc
xchg
jb
inc
aaa
clc
out
fisubrl
lock
jmp
mov
lock
call
jno
jb
daa
push
test
push
xchg
push
or
repnz
rcll
clc
and
lods
cvtps2pi
inc
inc
imul
shll
and
pop
jmp
push
add
pusha
jb
pop
mov
xchg
sti
pushf
mov
inc
insb
fsubs
xor
xchg
movsb
nop
dec
xor
jg
int3
adcb
lcall
inc
push
adc
fcoml
push
xchg
sub
mov
pop
pop
cmp
ds
pushf
cli
lcall
or
je
pop
jns
jge
shlb
fildl
jb
xorl
push
sub
pop
data16
rclb
je
xorl
cmp
rolb
jns
sahf
aam
scas
xor
fldcw
push
call
sbb
cltd
pusha
sti
sti
andl
jle
and
ret
rcrl
xor
adc
and
repz
mov
mov
sub
cmp
test
inc
pop
rcll
sub
rcrl
dec
jbe
push
adc
cltd
popa
imul
iret
push
and
ds
mov
sbb
out
aam
mov
push
fstpt
cs
ret
xor
dec
bound
out
mov
int3
inc
cwtl
lret
mov
arpl
mov
fisubrs
pop
mov
movsb
pop
outsl
push
in
mov
ljmp
push
je
cmp
jo
mov
fiaddl
push
addr16
xor
scas
adc
push
sbb
aaa
mov
daa
jne
nop
push
inc
dec
inc
lret
mov
mov
bound
out
jnp
mov
imul
imul
int
test
push
fsub
popa
or
push
faddp
out
mov
repnz
add
pop
xor
dec
imul
popa
mov
repnz
mov
repz
push
push
loope
mov
out
sahf
vpunpcklbw
imul
push
adc
xor
mov
and
daa
cld
in
inc
enter
cmc
ljmp
jp
into
cmp
adc
mov
loop
mov
pop
sub
jecxz
jo
mov
mov
push
and
xchg
push
enter
jle
or
inc
sbb
xchg
sbb
jl
call
xchg
fcoml
xchg
enter
dec
pusha
ret
add
jne
xchg
cmp
arpl
inc
sbb
jne
repnz
push
and
xchg
sbb
inc
es
sub
mov
push
scas
rorl
xor
push
and
mov
jmp
dec
fisubl
das
jbe
popa
jb
insb
pop
xchg
iret
jnp
jae
pushf
cmc
dec
add
push
push
mov
loope
xor
push
cmpsl
xor
insl
pop
mov
imul
shlb
xor
sbb
xor
dec
mov
out
mov
imul
sbb
adc
pop
sub
loope
sahf
add
mov
int3
sub
and
mov
push
clc
imul
jnp
je
je
std
inc
adc
ret
or
push
movsb
sti
and
mov
shrl
ja
xor
clc
mov
add
mov
mov
cmpsb
stos
sub
jmp
inc
xchg
mov
insl
js
test
test
leave
mov
ja
insl
cmpsb
push
or
cmpb
mov
pop
and
push
loope
inc
xor
push
jp
cmp
mov
xchg
rorl
xlat
inc
pop
scas
imul
dec
in
cmpsl
rorl
out
test
lahf
leave
nop
subb
sbb
inc
xlat
clc
das
in
addr16
sbb
adc
push
xor
dec
dec
and
rol
lock
lret
push
and
jbe
call
je
mov
mov
pop
fstps
lods
lahf
inc
ret
cmp
inc
add
stc
fnstcw
push
and
in
hlt
out
cmp
repnz
mov
icebp
pop
jo
add
in
int3
scas
sub
sub
sbb
cmp
jne
sub
cmpsl
and
gs
pusha
pop
gs
push
lret
mov
sub
pop
push
imul
jge
and
cmpsl
adc
sbb
jge
scas
sub
cli
les
lods
push
jmp
add
popa
das
cmp
push
scas
fdivr
decl
or
cld
dec
mov
loopne
adc
push
cmp
adc
fsts
lea
jb
jecxz
dec
leave
sbb
int
jl
dec
add
out
ret
adc
movsl
sub
mov
cmpsl
mov
xchg
mov
mov
cmp
and
jle
icebp
addl
adc
jo
sbb
xchg
mov
jo
cmp
fs
out
mov
jg
rolb
mov
popf
adc
pop
repnz
pop
mov
inc
daa
or
pop
iret
mov
jbe
push
shll
mov
jecxz
fsubrs
xchg
push
and
sahf
addr16
xorb
in
test
add
ss
aas
call
mov
xor
dec
cwtl
jne
sub
mov
sbb
fisubs
add
adc
outsl
mov
adc
and
sbb
or
movl
insl
add
out
mov
xor
cmp
repz
or
imul
xor
test
lcall
std
aam
mov
mov
add
cmp
inc
lods
test
lods
xchg
inc
outsb
add
xchg
adcb
popa
in
sub
mov
mov
div
jle
imul
pop
sahf
pop
sbb
cld
and
cltd
inc
inc
mov
or
enter
mov
push
pop
or
fwait
xor
cmc
pop
out
roll
imul
sbb
or
add
popa
push
xchg
jae
xlat
cmp
pusha
andb
nop
in
sub
inc
jge
xor
adc
sub
lods
addr16
loopne
cmpb
pusha
std
out
in
mov
dec
into
cmp
mov
fmull
mov
scas
sub
jns
cmp
mov
jno
out
stos
test
mov
mov
dec
mov
mov
sub
ljmp
xor
int
add
fldl
ficoms
push
aam
sbb
push
xor
arpl
cltd
push
adc
mov
lret
es
int
jnp
mov
jp
rorb
insl
mov
dec
sahf
dec
xchg
sbb
aam
and
imul
dec
sahf
jl
or
pushf
mov
movsl
dec
leave
mov
enter
cmp
jg
sub
pop
cmp
push
xchg
fs
push
jmp
pop
jmp
push
shrb
divl
inc
xchg
jl
jae
inc
mov
fimuls
xchg
addl
int3
adc
in
into
lahf
in
adc
xor
test
pop
mov
sbb
mov
fstpl
sbb
add
xchg
fists
jmp
ds
inc
mov
pop
pop
mov
out
stos
faddl
repz
mov
out
lock
mov
out
mov
mov
jmp
rolb
pop
xlat
push
cltd
sub
daa
jb
fcomps
out
fldl2t
ja
mov
iret
or
fdivr
les
push
push
sarl
cmp
jmp
mov
dec
stos
xor
inc
iret
and
jnp
rcr
loopne
cmp
jmp
mov
mov
cld
mov
mov
outsb
push
dec
rolb
sbb
cmp
jo
cli
mov
mov
mov
sahf
xchg
nop
pushf
mov
dec
jl
pop
cmp
movsb
mov
xor
sub
mov
fwait
sbb
and
fsub
sub
adc
sbb
out
add
adc
sbb
push
or
push
sbb
imul
push
inc
cmc
loope
mov
cmp
or
sub
mov
sub
ss
sbb
adc
jmp
xor
int3
cwtl
push
xchg
jecxz
push
or
ds
cwtl
scas
mov
push
mov
nop
add
aaa
stos
mov
sub
je
stos
nop
fcmovu
add
pop
adc
popa
pushf
hlt
mov
inc
mov
test
sub
cmc
xchg
and
aad
adc
lea
cmp
mov
test
mov
adc
pop
add
pushf
jmp
fistl
add
mov
shr
scas
ret
xchg
call
test
jns
pop
data16
fmuls
lret
adc
test
or
addr16
mov
dec
mov
out
jae
leave
adc
shrd
lcall
push
inc
pushf
cmp
push
call
mov
push
cmp
insb
mov
aas
bound
addb
xchg
lcall
jae
into
inc
movzbl
dec
or
cmpsb
leave
dec
dec
clc
sbb
mov
push
bndstx
mov
icebp
jg
loope
or
mov
xor
mov
or
aaa
shrb
ds
ret
pop
cmpb
jnp
lds
add
and
incl
and
imul
sbb
jge
stc
sbb
jne
icebp
sub
jno
jo
push
sbb
add
sub
aam
xor
inc
mov
dec
stos
push
sbb
test
cmpsl
cmp
xchg
adc
jae
sub
cli
push
mov
xor
add
jne
mov
test
pop
jne
mov
adc
mov
jb
mov
cmp
inc
mov
mov
repnz
sar
xor
sub
push
dec
popf
int
daa
jl
push
inc
sub
jge
xchg
push
cld
push
mov
pop
push
aaa
push
cmpl
mov
xor
push
nop
mov
adc
scas
inc
rcll
push
pushf
push
xchg
jne
xchg
dec
jl
movsb
mov
fdivl
fsubp
lahf
pop
call
xchg
inc
fldcw
xchg
jp
dec
sbb
pop
aas
jmp
ret
loop
lret
mov
push
cmp
out
dec
iret
in
jns
arpl
adc
mov
sbb
mov
xor
mov
xor
pop
inc
es
outsb
dec
ds
jne
test
icebp
ret
and
int
mov
add
fisubrs
imul
shll
movups
hlt
pop
adc
pop
orl
pop
movsl
xchg
mov
add
les
inc
pushf
fbstp
and
jmp
lods
sbb
lods
push
in
xor
dec
mov
inc
gs
add
in
and
fwait
loop
std
addl
cld
dec
loopne
jmp
popa
mov
push
jno,pn
mov
xchg
inc
xchg
out
xor
jl
jns
mov
jno
stos
dec
btc
or
jne
scas
sahf
xlat
lods
into
inc
insb
sbb
stos
cltd
xchg
jo
jmp
xchg
sub
xchg
fsts
mov
mov
je
pop
jb
xchg
test
int
adc
inc
or
test
and
addr16
pop
and
test
ficoml
mov
rcr
data16
test
mov
and
sbb
pop
fstl
hlt
outsb
scas
fcoml
adc
mov
sbb
mov
cmpsb
adc
and
daa
in
cmpsl
add
movsl
enter
ret
ljmp
jge
cmp
adc
test
pop
xchg
or
adc
mov
inc
push
xchg
leave
push
ret
gs
cltd
pop
and
lock
sub
add
mov
test
shlb
inc
pop
jbe
in
insb
sub
mov
sti
adc
es
aam
push
clc
jge
push
mov
lcall
jmp
mov
dec
cwtl
or
into
xchg
aas
jl
push
add
and
push
call
xchg
xchg
and
in
lret
jmp
push
inc
cmc
je
jmp
scas
and
mov
add
roll
and
sbb
adcb
stos
cwtl
mov
sub
in
cltd
fidivrs
push
mov
mul
fxch
loop
adc
mov
cmp
leave
or
cmpsl
adc
addl
add
jno
cmp
cld
mov
xchg
and
hlt
or
in
cmp
lods
gs
inc
push
test
xchg
pop
inc
loop
punpcklwd
xlat
dec
sbb
das
mov
stos
cmp
pop
xchg
push
sub
pop
out
addr16
inc
sub
shrb
mov
loopne
repnz
pop
jno
cmp
mov
stc
sbb
std
lods
into
stos
icebp
aad
ret
movsl
xchg
jae
loope
popf
test
insl
mov
mov
jl
mov
xor
adcl
xchg
and
jecxz
iret
nop
or
in
rol
jne
leave
xor
mov
sarl
inc
push
cwtl
movsb
dec
pop
cmp
arpl
or
fcmovu
lock
mov
in
lcall
in
subl
lds
mov
ja
pop
movsl
xor
mov
loopne
dec
mov
mov
out
daa
jae
push
inc
pop
pop
mov
dec
mov
cltd
add
xchg
arpl
dec
popa
mov
inc
int3
fdiv
push
cmc
popf
push
movsb
push
mov
ret
add
push
pop
xor
stos
and
lods
and
dec
add
vmread
adc
add
es
and
pop
out
mov
fcmovne
mov
aad
mov
je
and
jb
inc
pop
jmp
leave
jae
pop
jae
sbb
dec
pop
mov
cli
adc
mov
push
sbb
bound
pop
int3
ret
mov
sub
popa
movsl
sti
mov
movl
xchg
mov
dec
sub
cltd
pop
push
inc
mov
ja
iret
in
adc
jo
xchg
repnz
lret
push
jnp
adc
imul
mov
or
mov
jne
loop
int3
cmp
leave
enter
ja
cmc
cmpsl
pushf
sahf
or
inc
inc
pop
dec
in
xorl
xchg
out
imul
sub
arpl
sbb
bnd
out
pop
sbb
bnd
jmp
popf
xchg
cltd
ljmp
xor
add
nop
ficoml
add
inc
out
into
xchg
push
cmp
xlat
or
stos
icebp
test
adc
sar
mov
rol
addr16
std
mulb
gs
cmc
adc
dec
dec
inc
imul
aad
jo
inc
dec
push
add
jnp
sti
pop
jno
and
inc
mov
adc
insb
es
and
test
jo
xor
and
insb
fidivrl
iret
movsl
cld
push
push
mov
test
sub
cmp
xor
pop
sub
push
xchg
cld
sub
pushf
pop
xlat
je
movsl
incb
mov
enter
aad
loope
jbe
xchg
cli
insb
add
jbe
mov
cmp
into
sbb
push
movsb
pop
jle
test
xor
mov
jmp
mov
xchg
jg
add
adc
add
mov
pop
sbb
pop
xchg
repnz
mov
aad
pop
xor
fidivs
sub
movsl
cli
xchg
xor
jmp
cmpsl
inc
add
add
xchg
test
stos
cmc
mov
leave
push
add
pop
jle
pop
mov
sbb
pop
adc
push
hlt
sub
scas
jne
dec
add
xchg
xor
jns
out
mov
pop
fs
ror
call
cltd
int3
bndstx
cmc
pop
inc
stos
inc
popf
push
xchg
subl
das
nop
xchg
lcall
push
push
dec
vpmulhuw
adc
rolb
add
shrb
addr16
fcoms
scas
incb
sub
repnz
repnz
scas
outsb
xlat
push
movsl
add
test
cmp
push
xor
or
xor
dec
mov
push
adc
add
sub
mov
push
insb
repz
test
mov
xchg
inc
cmpsb
push
in
jecxz
dec
mov
cld
pop
stos
pop
push
imul
pop
and
push
fadds
subb
ds
pop
xor
repz
push
insb
xor
test
rolb
dec
lods
cmpsb
adc
popf
popf
dec
in
scas
add
mov
and
ret
dec
movsb
fdivl
xlat
mov
fdivrl
xchg
xchg
push
imul
pushf
xor
scas
jne
jns
cwtl
jns
into
je
xlat
and
mov
jne
or
mov
sti
sahf
test
add
push
inc
push
rcr
daa
push
xor
cmpsl
repnz
jo
cmp
lret
rclb
ret
lods
mov
adc
repnz
pushf
cltd
xchg
mov
insb
xlat
push
adc
imul
scas
jmp
jns
dec
js
mov
sahf
xlat
in
add
mov
imul
int
jns
push
adc
sbb
cmp
sbb
adc
jp
insl
fisubl
jnp
and
icebp
rol
idiv
scas
push
pop
jl
dec
cltd
mov
test
subb
mov
hlt
mov
adc
rcrl
sbb
xor
adc
mov
xor
jae
add
adc
mov
adc
into
jge
ja
mov
sub
lret
cmp
int3
or
xchg
fcos
mov
and
into
mov
fucomp
ror
adc
inc
mov
dec
push
xor
sub
push
imul
sub
dec
push
xchg
mov
cld
and
mov
cmp
push
addr16
fbstp
sub
sub
cltd
dec
cmp
inc
inc
test
lret
cmp
inc
push
sbb
loope
flds
pop
pop
in
mov
pop
mov
push
or
imul
and
pop
and
test
mov
in
mov
push
cltd
mov
scas
fs
out
cmp
dec
add
and
test
cmp
mov
push
jmp
sbb
shrl
jecxz
or
jb
sbb
cmc
fisttps
sti
pop
push
push
decl
sbb
xchg
sub
ret
dec
add
in
movsb
mov
daa
push
jo
fldl
push
sbb
jg
inc
insb
inc
and
jecxz
adc
inc
sti
or
sub
inc
push
addr16
pop
mov
sub
pop
std
pop
jl
rol
push
pop
ret
or
add
hlt
cmp
mov
outsl
arpl
and
fs
cmpsb
nop
cmp
jo
out
rcrl
jbe
cmp
jno
inc
cmpsl
pavgb
and
xor
xchg
xchg
mov
addr16
sbb
jg
xor
pop
dec
stos
aaa
test
lretw
mov
push
das
mov
add
xchg
mov
sub
ss
mov
mov
test
daa
pop
or
mov
or
xchg
stc
mov
mov
sub
fmull
sub
mov
jo
pop
stos
mov
dec
xor
fistpll
inc
xor
mov
out
or
mov
mov
shr
push
cld
stos
adc
in
inc
daa
jbe
dec
jb
mov
cmp
aas
jne
out
cmp
shr
ret
xchg
mov
ss
adc
pop
int
arpl
movsb
out
xchg
mov
lods
orb
dec
xchg
xchg
jg
mov
fldln2
insl
push
push
incb
test
jmp
push
rol
mov
sbb
xadd
inc
repz
ljmp
pop
repz
mov
adc
loop
jge
imul
sbb
data16
pop
fyl2x
js
sbb
jg
insl
icebp
out
movsl
push
cld
loop
mov
mov
imul
aas
cmpsb
inc
mov
imul
je
fidivl
dec
sbb
mov
mov
pushf
mov
cmpsl
mov
bound
test
repz
mov
sbb
call
cs
mov
mov
adc
popf
clc
pusha
and
lahf
sbb
sbb
int
jb
stos
xchg
cmpl
dec
jnp
andl
push
and
call
fsubrs
sub
push
cmp
mov
es
hlt
push
or
sub
lock
in
sub
cmc
mov
jo
cmp
and
mov
jno
into
in
mov
cmp
mov
popa
std
aam
inc
jecxz
mov
cltd
jne
loope
fidivrs
psubusb
dec
sub
sbb
mov
call
les
sbb
scas
inc
pop
mov
cmp
out
repnz
push
or
loope
ja
add
movsb
lods
inc
cld
cwtl
push
jae
xchg
sub
std
fwait
jae
cmp
andb
or
sahf
inc
sbb
pop
imul
mov
lcall
or
leave
movl
xlat
ja
xchg
xchg
pop
sub
dec
cmpsl
int
aam
mov
jge
out
es
mov
and
mov
stc
mov
test
leave
gs
sbb
ds
loop
xchg
jnp
sbbl
cmp
or
add
arpl
fcoms
arpl
fnstenv
dec
and
ret
mov
mov
adc
push
adc
pop
fistpll
rcrb
lods
loope
cs
jb
icebp
dec
inc
xor
rorb
insb
or
sarl
sub
mov
fisubl
jecxz
lret
pop
inc
sub
adc
or
loop
addb
sub
and
push
push
fidivrs
inc
adc
shlb
lea
ss
xchg
xchg
xchg
mov
nop
and
xor
dec
or
fwait
dec
adcb
decb
adc
lds
in
ret
in
sub
mov
jae
dec
xchg
outsb
jge
xchg
aas
arpl
sbb
mov
cs
jbe
xor
dec
inc
cld
add
jns
xchg
mov
push
pushf
mov
xchg
sub
xchg
mov
inc
dec
sti
hlt
mov
and
cmp
cmpsb
jmp
insb
xchg
fldl
in
pop
jge
stos
and
jp
pop
into
mov
adc
test
pop
inc
mov
push
add
jnp
jge
mov
je
cli
jecxz
nop
imul
jae
fldl
aad
dec
fnstenv
add
mov
inc
movb
adc
mov
sub
lcall
jg
add
es
addb
add
outsb
jb
cmp
sub
inc
inc
inc
mov
cmp
mov
bound
mov
loop
add
sbb
incb
mov
and
jg
mov
mov
mov
mov
mov
sbb
fbstp
add
and
pop
test
call
jno
and
mov
lret
es
outsl
rclb
cwtl
ja
pop
lcall
iret
insl
insb
loop
int
incb
cmp
xchg
jae
std
mov
out
shll
cwtl
jo
jbe
sub
rcrb
sub
loope
ds
mov
ljmp
xchg
mov
adc
scas
xchg
sbb
in
loop
mov
pop
fadd
mov
jge
fldl
lods
mov
cmp
idivl
in
and
jp
xlat
pushf
out
lock
xchg
pop
and
out
fnstenv
pop
mov
popa
ret
test
adc
cmp
cmp
xor
lcall
stos
pusha
loop
adc
enter
jmp
out
xor
dec
lcall
cmp
clc
add
jl
jecxz
jmp
pop
jle
mov
loopne
push
adc
adc
dec
fcomip
andb
or
push
or
hlt
lret
popf
xchg
push
in
push
cltd
mov
adc
pop
cvtdq2ps
outsb
sub
jno
das
daa
or
mov
dec
sub
ds
adc
arpl
nop
add
out
jo
xor
cltd
pop
pop
cmp
sub
xlat
xchg
shlw
add
lock
lahf
test
imul
sub
add
push
cmp
mov
fsubs
mov
cmp
sub
jle
cmp
pushf
sbb
dec
int3
in
gs
mov
inc
cmp
enter
jne
adc
imul
lock
push
dec
jl
inc
pushf
push
test
mov
stos
jae
sub
pop
cmc
or
leave
xchg
enter
inc
addb
sub
cmp
rolb
scas
cmp
mov
or
loopne
lock
xchg
into
inc
inc
addb
or
mov
mov
push
or
xchg
fcoml
jnp
sahf
shlb
mov
pushf
mov
daa
lock
lcall
test
push
xor
test
je
push
jle
call
xchg
jno
sahf
sahf
xchg
sub
test
xchg
scas
loopne
mov
pop
sbb
dec
pop
xchg
and
bound
aas
outsb
mov
sti
fs
sti
jecxz
jb
lods
sub
movsl
stos
cltd
jmp
aam
cmpsb
xchg
nop
push
inc
inc
call
imul
fsub
hlt
std
push
xor
ret
daa
stos
and
add
sub
pop
out
pop
mov
xor
inc
in
andb
mov
cmp
mov
add
sub
scas
fmull
jl
push
js
call
call
outsl
add
rcrb
cli
fsubs
cli
push
fwait
repz
push
pop
and
or
ljmp
sbb
add
jmp
jb
dec
cli
xchg
jnp
add
inc
pop
dec
ret
out
mov
xchg
in
stos
loopne
inc
repnz
cmp
hlt
or
push
sbb
pop
enter
and
rolb
cmp
push
lahf
fistpll
inc
ja
lret
cmpsl
adc
or
mov
loopne
xorb
das
and
shll
lods
mov
test
imul
inc
mov
sub
inc
insb
dec
in
movsl
movsb
inc
rol
xor
fidivl
movsb
in
les
xchg
sbb
push
dec
lea
lods
push
fsub
cld
fidivl
ljmp
jecxz
mov
jmp
xor
pop
push
jne
jo
pop
not
inc
jne
loopne
jb
xchg
jns
lds
je
mov
sub
mov
out
xchg
xchg
xchg
fiaddl
jp
and
je
jmp
pop
popa
mov
iret
out
fcompl
sbb
sbb
sub
cmp
or
movsb
ret
icebp
aad
jb
or
jecxz
xchg
mov
or
sub
rorb
and
sub
ljmp
in
icebp
dec
out
jb
xchg
xchg
daa
es
dec
das
pop
pusha
fistps
addr16
fistpl
cmpsl
adc
sahf
enter
push
pop
cs
lock
lret
or
dec
ja
jo
dec
pop
sub
adc
mov
out
mov
xor
subb
mov
je
je
xor
inc
push
jbe
xchg
nop
mov
push
sub
pop
xchg
push
out
jle
flds
enter
out
out
push
jne
loopne
mov
adc
popa
inc
sub
cs
iret
in
xor
sahf
cmp
into
inc
pushf
jmp
imul
int
sub
rcll
pop
lret
nop
out
fcompl
out
int
mov
mov
filds
xchg
xchg
nop
ss
cmp
popa
mov
cmp
mov
pop
pop
lcall
jnp
mov
fimull
dec
jo
cmp
pop
test
leave
add
pop
lret
push
andb
mov
mov
in
fsubl
lret
insl
in
xchg
jnp
mov
popa
inc
mov
pushf
cmp
and
xchg
mov
cmp
dec
dec
test
pop
mov
mov
mov
cmp
jnp
mov
lahf
jecxz
mov
cmp
lods
sbb
fmull
adc
mov
mov
stos
aaa
push
xor
mov
adc
movsb
loop
ja
pop
and
add
add
mov
lret
xor
lea
pop
and
mov
inc
call
add
insb
push
repz
cltd
jge
inc
lret
and
ds
test
ss
and
mov
cltd
pop
stos
push
mov
dec
insl
push
push
adc
dec
pop
and
mov
jmp
dec
repz
sub
stos
mov
sub
sbb
push
cmp
sub
pop
cmpsl
xor
adcl
push
nop
sub
ret
movsl
or
mov
fistpll
xchg
xor
flds
int3
mov
popf
cmc
and
ret
sbb
ja
push
sub
insl
ret
cmpsb
fldt
cli
adc
je
mov
push
movsb
adc
lahf
mov
cwtl
jne
lea
scas
fwait
dec
jle
lock
jne
sahf
cmp
mov
lock
cs
in
dec
in
sub
cmp
das
popf
imul
and
inc
xchg
in
sahf
jae
in
rcrb
jle
imul
dec
jbe
ret
push
js
es
lock
mov
jle
xor
add
idiv
pop
mov
mov
push
jne
dec
popa
inc
jmp
js
sbb
mov
sbb
bound
scas
xchg
stos
cwtl
cmp
cmpsb
ret
int3
mov
mov
xchg
aam
imul
enter
sbbl
pop
dec
fsubl
dec
shl
add
pop
and
cmpsb
sbb
jge,pt
incb
inc
push
sub
mov
adc
jecxz
pop
xlat
sbb
lahf
and
xchg
xchg
ja
sub
xor
mov
adc
shlb
pop
adc
and
jp
or
xchg
je
fcom
cltd
jg
sub
jae
imul
je
js
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
pop
fisttpl
jl
pop
jl
and
sub
jge
mov
pop
and
int
jecxz
jo
pop
add
pop
jp
mov
aad
fdivl
push
jo
xor
sbb
cmp
jge
out
sbb
ficompl
push
sub
xchg
fldl
aaa
aas
or
inc
data16
sub
dec
call
mov
addb
cmpsl
movsb
jmp
arpl
pop
int
int3
cmc
cmpsb
in
js
pop
loop
push
add
xor
cmp
out
mov
xlat
sub
sbb
into
dec
jp
xor
stc
dec
adc
add
push
cmc
popf
lahf
ficoms
imul
pop
cld
outsl
int3
push
jle
mov
sub
stc
testb
test
fwait
ds
cmp
push
insb
je
mov
sbb
pop
mov
pop
lods
mov
dec
aaa
mov
and
lea
sahf
scas
pop
je
inc
lods
cld
das
jmp
outsb
add
dec
lret
fs
rep
push
add
je
call
addr16
sbb
decb
lds
lds
hlt
js
or
test
popa
imul
sbb
inc
rcrb
lea
daa
inc
repnz
jae
or
jmp
pop
inc
jne
mov
fimuls
push
sbb
add
sbb
mov
cmp
inc
cmpb
xchg
inc
add
xchg
or
enter
xchg
test
xor
push
xor
jb
js
js
scas
gs
loop
inc
xchg
adc
and
addr16
fldl
out
cltd
loop
out
call
ret
xchg
sahf
xchg
and
mov
sub
adc
or
jg
or
jmp
mov
pop
xchg
jp
xchg
sarb
mov
int3
xlat
lea
roll
mov
call
mov
mov
test
jno
orb
push
dec
pop
mov
mov
and
dec
inc
fwait
or
pop
loop
or
xchg
aad
dec
fcomip
dec
mov
fbld
add
dec
mov
mov
inc
xchg
or
adc
insl
pop
sub
mov
push
in
int3
pop
imul
fsubl
mov
sbbl
and
add
push
and
sbb
ficoml
xor
mov
shll
aad
nop
gs
pop
push
jb
inc
dec
cmp
repz
fwait
push
arpl
dec
hlt
test
cmp
cmp
cmpsb
popa
scas
pop
mov
negb
std
sbb
gs
jno
mov
mov
aam
test
fldt
test
mov
loopne
sub
andb
testb
sti
mov
add
sub
sar
jbe
stos
jg
push
pop
cwtl
jecxz
xchg
inc
mov
xchg
jp
out
movsb
cmpsb
sbb
test
lock
shl
mov
xor
loope
cmp
aad
lds
cmpsb
pop
fisubrs
in
pop
xor
cmc
jle
and
pop
enter
cld
dec
xchg
pop
sti
push
push
mov
popa
ja
pop
orb
and
add
mov
pop
jge
xchg
dec
dec
add
iret
add
mov
in
xchg
clc
lahf
mov
fisttpll
mov
sub
jmp
iret
dec
xor
imul
stos
lcall
in
jl
add
hlt
inc
jb
stos
movsb
std
or
or
in
cmpsl
mov
add
stc
add
sub
pushf
cmc
adc
xchg
adc
into
mov
test
cld
iret
push
jg
and
mov
mov
push
stos
fcmove
aas
int
adc
outsb
sbb
mov
out
adc
mov
mov
negb
jo
jae
add
pusha
cmpsb
push
cmp
iret
mov
dec
scas
repnz
push
push
xor
loopne
repnz
adc
ss
xchg
cmp
push
mov
adc
wrmsr
push
cmpl
mov
jbe
out
outsl
jne,pt
icebp
js
lahf
adc
mov
mov
enter
mov
pop
mov
jmp
xor
mov
leave
stos
cmp
out
dec
xor
inc
cli
xor
ja
cs
ss
fidivl
les
xchg
enter
push
inc
lcall
xor
sub
pop
push
test
movsb
or
jp
or
sbb
xor
mov
inc
or
pop
inc
ret
scas
mov
data16
push
cmpsb
push
out
out
cmp
fs
mov
sbb
es
scas
dec
rcll
jnp
inc
mov
leave
cmp
movsl
jnp
cli
jbe
jecxz
xor
push
addl
ja
or
fbstp
push
addr16
inc
dec
add
lret
jno
sub
in
cmp
popf
repz
mov
mov
xor
je
xchg
mov
add
or
scas
inc
in
mov
mov
and
dec
imul
pop
movsb
test
insb
inc
ret
cmc
shl
inc
out
and
pop
jl
fnop
inc
fldl
jno
roll
or
dec
mov
cmpsl
pop
cmp
adc
or
pop
xor
cli
xlat
test
repnz
xchg
push
mov
and
aad
xchg
loope
in
pop
notl
xchg
sahf
push
adc
out
xor
hlt
jno
repz
nop
lds
fstps
mov
ds
jbe
stc
lret
daa
fwait
xor
stos
daa
mov
pop
std
leave
adc
jno
xchg
and
lock
xchg
xor
jne
cmpsl
ret
pop
pop
pop
dec
das
aad
movsl
fldt
sahf
out
pop
mov
and
jmp
cmc
movsb
daa
addr16
cmp
sti
stos
xchg
sub
lahf
sbb
enter
add
leave
int3
and
push
push
sub
rclb
mov
sti
idiv
out
or
lahf
cmpsl
mov
jnp
gs
mov
sarl
movsl
mov
xor
cld
es
inc
adc
inc
push
enter
lock
repnz
lcall
jl
jb
das
out
fstpt
clc
popa
push
mov
fwait
out
jl
das
call
or
dec
pushf
int
jmp
or
xor
addr16
xchg
fistpl
or
and
dec
loop
call
pop
ret
cmpsb
or
xchg
dec
push
xchg
testl
dec
pop
stos
cld
or
lock
test
dec
adc
lods
adc
int3
stos
mov
das
enter
ljmp
push
mov
dec
push
mov
jo
out
cmpsl
test
rcrl
sti
mov
addb
andl
cmp
add
mov
stos
pushf
mov
clc
adc
push
or
push
xor
iret
sbb
mov
sub
inc
shl
iret
into
or
sahf
pop
pop
dec
xchg
mov
sahf
mov
inc
push
jp
movsl
xor
cmc
xchg
pop
ljmp
std
movsb
aad
idivb
testb
out
fsub
fldenv
je
xchg
sub
mov
or
xor
jae
push
mov
lock
lea
scas
pop
rclb
cld
xchg
push
shufps
cmp
pop
cmp
mov
in
cs
pop
in
push
sub
clc
or
aam
pop
out
popl
mov
inc
mov
aam
pop
pop
sti
insb
push
pop
test
jo
enter
les
pop
pop
lcall
add
adc
jecxz
jno
jno
dec
arpl
shlb
or
test
loop
inc
shlb
sub
inc
daa
pop
mov
je
mov
mov
es
push
pop
in
push
repnz
and
or
and
xchg
xor
mov
or
pop
pop
enter
test
pop
scas
insb
out
test
and
arpl
mov
mulb
mov
lds
pop
add
xor
cld
push
jno
cmp
mov
xor
lahf
jg
jbe
jl
hlt
push
jge
sbb
imul
insb
pushf
es
sbb
or
dec
adc
es
dec
lahf
adc
jg
sahf
fistps
popa
adc
xor
test
inc
inc
into
or
nop
mov
xor
or
and
sub
or
adc
adc
and
xlat
cltd
aas
stc
outsb
push
sbb
xor
sub
sarl
jecxz
dec
dec
loopne
lret
pop
in
jecxz
push
mov
hlt
and
mov
push
das
jnp
push
or
xchg
cmp
and
cmp
arpl
pop
inc
add
clc
mov
xor
addr16
pop
sarl
push
xor
adc
cmp
lea
bound
push
push
mov
or
and
pop
daa
popf
faddl
insb
arpl
sub
repnz
fcmovu
sbb
outsb
pop
fwait
repz
xchg
sub
daa
cs
xchg
inc
das
test
push
xor
sbb
xchg
fisubs
lods
jbe
mov
in
push
adc
dec
popa
shrl
and
call
lock
pop
rol
movsb
cmp
push
jmp
mov
jmp
enter
rcll
lcall
inc
jno
fwait
enter
jbe
in
fcmove
jge
test
xchg
cmp
cs
mov
cs
sahf
xchg
pop
call
push
out
mov
lret
lock
std
mov
fldt
loopne
adc
adc
cmp
idivb
and
mov
loop
test
or
es
add
mov
xchg
mov
mov
adc
xchg
jl
adc
mov
pandn
fwait
mov
shll
loope
inc
lds
adc
cmp
jo
jle
sbb
xorl
stc
popa
xor
inc
loopne
cwtl
push
outsl
popf
inc
aam
popa
popa
cmp
pop
int
or
cmpsb
cld
adc
aad
sbb
xchg
push
mov
inc
cwtl
rcrb
push
lock
aad
sti
sub
iret
into
add
push
xchg
sbb
adc
jge
outsb
ljmp
fstl
dec
push
bound
mov
jbe
dec
call
fwait
xchg
repnz
int3
push
imul
jle
insl
fcmovu
fs
fistps
xor
scas
xchg
repnz
push
frstpm(287
cmpsb
mov
negb
push
mov
imul
jo
pop
push
movsb
and
rorl
imull
into
mov
aad
imul
xor
adcb
nop
add
mov
push
ss
pop
fstps
fists
add
pop
cmp
or
push
iret
stos
out
jmp
xchg
adc
adc
xor
and
imul
aas
adc
dec
add
stos
pop
xchg
xchg
out
sub
adc
xchg
pop
mov
jecxz
xor
and
mov
jge
pop
push
adc
mov
adc
xchg
push
stos
xor
mov
push
mov
mov
std
or
ss
repnz
sub
out
subb
sbb
xchg
push
or
negb
aaa
in
pop
fsubl
ja
mov
mov
aam
sub
les
cmp
nop
hlt
or
lods
pop
jns
pusha
inc
cmp
enter
idivb
pop
push
xor
pop
das
js
test
arpl
stos
pop
pushf
ret
cmpsb
call
adc
das
fistl
ss
push
sbb
sbb
rolb
outsb
mov
dec
test
sbb
hlt
in
xor
shlb
test
push
pop
ret
bound
insl
mov
sbb
jo
pusha
xchg
push
add
cli
rcll
mov
ficomps
adc
fdivrl
enter
out
popa
repz
push
cmp
ja
dec
pop
push
shl
out
adc
insb
jle
pusha
lds
insb
int
inc
psrlq
scas
std
test
mov
push
dec
fs
inc
or
and
or
and
xor
inc
mov
inc
sub
insb
repnz
add
lcall
testb
enter
fstpl
aaa
sti
loopne
xchg
and
dec
inc
jo
repz
mov
ss
mov
jmp
lock
shrb
ja
shlb
jae
inc
movsb
xchg
inc
inc
je
xchg
mov
int3
pop
mov
adc
rolb
sub
test
mov
ja
mov
mov
clc
mov
xchg
and
mov
lods
dec
sub
movsb
dec
lea
mov
adc
addr16
mov
mov
dec
mov
xor
call
cmp
cwtl
sahf
sub
mov
clc
adc
mov
inc
xlat
push
jl
jb
jecxz
jno
in
leave
mov
and
loope
or
inc
fwait
jl
mov
or
pop
inc
mov
xlat
and
adc
ret
fdivr
sbb
push
dec
xchg
or
sub
sub
cmp
adc
scas
cs
xchg
mov
ljmp
or
pop
and
mov
icebp
pop
cmp
aaa
not
imul
std
and
jle
ss
fbld
mov
mov
jg
cli
mov
aad
pop
xchg
sub
sub
mov
lret
inc
xor
stos
je
add
mov
xadd
call
inc
sub
push
push
ret
xor
mov
mov
lds
insb
xor
cmc
lock
dec
sub
jo
xor
sbb
fnstenv
pop
inc
addb
and
mov
push
xor
mov
arpl
pop
sbb
pop
andl
mov
fistps
out
xchg
movsb
stos
fnstenv
lods
in
xchg
add
jecxz
iret
lahf
out
jns
inc
sbb
out
mov
sbb
insb
dec
and
pop
push
cwtl
loopne
ret
das
frstor
stc
repnz
xorb
xchg
jg
arpl
cmp
adc
ds
mov
fcoml
lods
mov
popf
dec
cmp
push
fisubl
cmp
mov
xor
mov
test
mov
das
ret
or
dec
sbb
sub
out
and
lcall
rorb
push
jae
xchg
pop
stc
stos
and
cmp
lahf
ret
out
mov
jns
insl
imul
test
xchg
cltd
mulb
test
sub
sbb
cmpb
mov
mov
loopne
loop
or
xor
and
int
cmp
std
mov
mov
cld
sub
std
jp
pop
inc
jno
gs
fimull
inc
push
mov
in
int
inc
mov
outsb
xchg
imul
adc
xlat
sbb
arpl
and
arpl
js
rcrb
pop
xchg
jmp
mov
leave
outsb
mov
adc
inc
xchg
mull
hlt
push
out
addr16
outsl
mov
jbe
xor
lahf
jl
inc
push
mov
aad
mov
adc
and
lea
imul
bound
das
mov
jp
movsb
and
ss
mov
fildl
icebp
js
mov
add
dec
adc
in
adc
pop
pop
pop
cmp
inc
xor
call
daa
lods
mov
xchg
push
add
in
jno
inc
mov
sub
je
mov
in
stos
test
adc
sbb
mov
pop
xor
xchg
mov
xchg
scas
out
jge
mov
les
and
xchg
xchg
fwait
xchg
cs
aaa
mov
daa
push
and
aad
scas
inc
clc
push
out
add
adc
test
clc
into
loopne
and
ret
jbe
lds
adc
int3
ja
sbb
mov
push
xlat
outsb
test
sbb
adc
sub
push
shrl
mov
push
divl
push
adc
push
or
sbb
mov
sti
mov
pop
popf
in
cmp
mov
sti
mov
sarb
not
xchg
pop
pushf
mov
cmp
adc
testl
cmc
test
int
add
jmp
sbb
cmp
aas
outsb
mov
int3
addr16
lock
inc
in
push
and
mov
inc
stc
sbb
inc
or
add
out
jg
sbb
fnstsw
xorb
or
mov
inc
pop
outsl
aad
in
cmp
inc
or
xor
in
fnstcw
ret
jge
fstpl
mov
sbb
aam
jp
lods
inc
sbb
sbb
add
and
or
and
xchg
xor
and
adc
enter
xlat
call
or
xchg
out
decl
mov
mov
mov
arpl
rcll
inc
sti
sub
mov
push
fldt
cltd
cmp
fsubl
jno
xchg
aaa
mov
pop
fmul
cmpsb
dec
hlt
xchg
repz
push
jp
lret
push
add
lea
test
xor
fcmovne
lcall
out
loopne
sub
cs
mov
mov
or
iret
inc
cld
in
jg
cmpsb
sbb
ret
test
jnp
dec
lods
and
aad
fwait
cmp
iret
loopne
lret
lock
jbe
pop
push
mov
add
hlt
dec
xor
dec
xchg
loope
idivb
test
movb
lods
popa
int3
or
mov
push
push
sub
outsb
jl
sub
lods
lcall
loopne
insb
adc
scas
and
je
cld
mov
popf
outsb
jle
fimuls
movsl
rcll
mov
cmp
int3
test
push
xchg
ds
jmp
repz
repnz
mov
addr16
cwtl
call
inc
sub
adc
fsubrs
lea
test
push
adc
dec
pop
add
fcmovbe
mov
push
pop
mov
mov
mov
inc
outsb
out
cltd
test
push
aas
sahf
mov
sbb
outsb
cld
pop
xchg
mov
pop
negl
mov
bts
bound
icebp
xlat
jns
pop
rcl
sbb
lahf
shll
pop
push
or
scas
out
mov
mov
sbb
ss
popa
and
enter
lods
ret
inc
sbb
inc
jno
scas
jl
lods
push
popa
icebp
push
sub
pop
icebp
cltd
imul
in
gs
mov
in
addr16
mov
outsb
loope
sahf
mov
push
insl
daa
shlb
pusha
xchg
or
pop
sbb
mov
pusha
jge
je
mov
push
ss
add
pushf
cmc
xor
cmpsl
addl
icebp
into
xchg
xchg
xor
scas
aam
cs
aaa
stos
push
add
pop
imul
mov
icebp
inc
out
mov
cmc
sbb
inc
test
mov
loope
test
sbb
ret
or
push
cmpsl
push
insb
ficompl
pop
iret
ljmp
pop
imul
in
das
fiaddl
add
bound
ja
add
ja
out
pop
push
mov
xchg
pushl
dec
push
adc
into
jnp
or
pushl
inc
divb
data16
addr16
ljmp
mov
mov
add
adc
jmp
cmpsb
push
fisubl
cwtl
or
inc
ret
pop
fldl
repnz
adcb
dec
push
mov
scas
cltd
rcl
and
movb
jbe
dec
aad
addb
pop
lret
aaa
sub
movsb
mov
jns
add
in
cmp
cmc
or
test
les
gs
pop
js
and
xchg
outsl
push
jl
enter
pop
sahf
leave
mov
push
mov
outsb
push
insb
mov
es
clc
add
or
mov
je
pop
cmpsl
pop
and
inc
mul
mov
cltd
iret
test
xchg
out
jl
mov
xchg
outsl
cmp
ss
cmpsb
lea
xchg
fnsave
push
lods
repz
fimuls
inc
inc
repz
and
fmull
and
mov
push
out
jecxz
icebp
je
or
or
sahf
xchg
fmuls
pop
push
jp
cmpsl
mov
mov
xchg
je
cld
shll
push
or
int
clc
js
lea
cltd
jnp
roll
mov
pop
mov
or
dec
addr16
pop
aaa
nop
inc
addb
fwait
adc
orl
jle
iret
stc
xlat
jmp
inc
daa
pop
daa
add
add
leave
or
in
cli
mov
clc
ds
addr16
sbb
in
xchg
in
loop
popa
xor
rol
je
pop
repz
mov
jae
dec
gs
das
xor
inc
cmp
imul
add
or
lcall
repnz
notb
mov
repz
mov
ret
cltd
dec
stc
stc
cs
aam
jl
mov
and
scas
cli
cmp
jae
xor
push
ds
das
and
test
outsb
in
and
inc
call
cli
cmc
mov
fbld
dec
push
les
or
int
pop
inc
mov
outsl
pusha
sbb
sub
dec
or
add
enter
inc
rorb
aam
sahf
fcoms
lahf
mov
and
inc
jb
mov
xor
jl
fsubrs
loop
fwait
adc
mov
add
xlat
sub
pusha
and
xchg
add
rol
scas
imul
test
imull
ljmp
sbb
fwait
int3
in
leave
sub
mov
inc
into
and
dec
in
add
cmp
mov
mov
mov
pop
adc
mov
pop
imul
jmp
mov
out
add
adc
movsl
xchg
or
and
pop
mov
cmpl
push
ret
lock
push
jl
dec
in
sbb
stos
inc
std
loope
xchg
and
sub
sub
inc
mov
inc
and
jle
popa
push
enter
dec
ja
scas
cmpsb
mov
mov
xor
mov
xchg
out
jnp
sbb
xor
in
push
and
enter
xchg
imul
cmp
fstps
repz
adc
in
in
jo
ret
mov
xchg
mov
adc
dec
xor
movsl
int3
mov
jnp
arpl
mov
das
xor
dec
mov
lock
shll
add
push
cld
cmpsl
mov
cmp
jb
pop
cmp
fcmove
ljmp
addr16
jle
fs
repnz
adc
jg
jmp
pop
fcmovnu
sbb
xor
outsl
dec
add
add
aaa
enter
sub
jl
push
jbe
cmp
mov
outsb
xchg
cmpl
cmp
xchg
jge
sub
fsts
rcrl
aaa
pop
mov
mov
mov
rol
rorl
pop
das
xor
in
sbb
ljmp
sub
mov
fcomp
adc
adc
cmp
lds
jge
xor
aas
mov
mov
xchg
jbe
mov
std
and
push
dec
imull
cmp
add
xchg
mov
dec
sub
cmp
adc
dec
inc
movsb
cmp
stos
jne
mov
aaa
sbb
loop
and
gs
push
xlat
repz
std
sahf
mov
outsl
xlat
cmp
xor
mov
push
pop
add
test
sub
dec
add
mov
fnstenv
outsb
push
jge
xchg
in
xchg
push
shrb
mov
xchg
push
push
and
stc
xchg
test
out
push
loop
xor
bound
mov
xor
in
imul
imul
int
cmp
push
ss
push
int3
jge
and
mov
dec
outsb
movsl
jle
xor
outsl
jp
outsb
shl
sub
idiv
add
and
inc
inc
dec
cwtl
sbb
mov
mov
es
outsb
test
aam
pop
ljmp
cmp
pop
sbb
mov
mov
data16
xchg
cmp
pop
pop
add
js
or
mov
test
add
mov
inc
mov
sub
push
or
add
mov
and
ljmp
sbb
jg
imul
ss
push
inc
int
sar
xor
inc
or
loop
leavew
and
mov
fdivrs
aas
cmovb
dec
push
lret
push
push
daa
cli
lock
sub
mov
mov
imul
xor
aaa
stos
xchg
outsl
popa
fiaddl
paddb
jo
dec
mov
ucomiss
push
andb
cwtl
loope
mov
movsl
fiaddl
jno
cmpl
rorb
push
cmp
mov
mov
stc
ret
lret
and
adc
mov
jg
pusha
popf
insl
cmpsl
xchg
pop
mov
mov
and
cmc
xchg
movsl
out
push
shlb
jg
pusha
out
mov
sub
jno
fbstp
jo
mov
jmp
fldcw
mov
pop
lahf
xlat
into
jae
aam
fdivrl
xchg
imul
or
pop
dec
lock
dec
inc
les
mov
pop
shl
lret
mov
mov
test
mov
mov
out
aad
jnp
stos
cmpl
dec
jmp
ja
xchg
jmp
inc
bt
sbb
cmp
sbb
and
fistpl
and
cmp
aad
push
imul
push
push
test
stos
mov
ret
or
mov
rolb
xchg
dec
jno
fists
outsl
fldcw
cmp
jecxz
sarb
insb
insb
and
mov
pop
push
lret
mov
sub
dec
or
cmpsb
nop
cmp
push
negb
sub
test
mov
jle
jno
pop
aam
dec
cmpsl
jbe
sbbb
cli
leave
in
lods
incl
in
mov
mov
test
std
lds
dec
mov
inc
pop
cmp
sub
jb
push
and
dec
push
jl
adc
hlt
cmc
mov
bound
outsl
sahf
push
pop
inc
pop
repnz
stc
xorb
jae
cs
shr
xchg
cmp
push
sti
lcall
pop
lods
jno
cwtl
mov
pop
sub
loop
jnp
add
and
int
push
add
out
adc
dec
pop
ret
add
mov
ss
add
cmp
cld
and
push
test
add
mov
lret
push
and
fs
sbbb
lock
loop
fimuls
push
aaa
mov
data16
je
push
andl
repz
mov
stos
mov
xchg
imul
adc
cwtl
loopne
gs
hlt
jl
jnp
add
ss
test
adc
cmpsb
xchg
and
or
adc
inc
mov
mov
out
jbe
stos
fsubs
dec
add
xorb
aaa
fwait
int
popa
ror
subb
call
js
arpl
repz
dec
xchg
aaa
jmp
pop
cwtl
xchg
pop
ss
shlb
cmp
out
mov
retw
stos
int3
sti
daa
jne
dec
ja
push
jnp
mov
imul
mov
dec
mov
sahf
and
inc
mov
fisubs
or
loopne
cmc
xlat
fisttpll
popf
andl
jle
mov
xchg
shlb
outsb
adc
jbe
roll
jge,pt
dec
push
jle
cwtl
test
push
roll
jne
mov
shl
dec
aaa
lock
mov
push
xor
and
inc
mov
cmp
adc
mov
pop
lret
scas
adc
jno
repz
mov
rcll
cmp
stos
rcll
cmp
sbb
pop
sarb
aam
repnz
pusha
cmp
in
pop
mov
xor
bound
imul
xor
sbb
xor
into
test
inc
mov
popa
pusha
popf
bound
xor
push
sbb
cmovle
movsl
lret
and
enter
add
add
jl
xor
movsb
mov
outsb
xchg
mov
sti
aad
cmp
push
aaa
repnz
int3
mov
mov
popa
dec
ljmp
rorb
clc
sbb
push
mov
mov
fnstsw
sahf
clc
add
or
and
scas
jecxz
rcl
mov
push
push
fsubp
ds
xlat
jmp
and
or
fidivs
lret
fisttps
jns
adc
sti
cmpsl
adc
jp
xchg
shll
lret
push
loop
xor
popf
sub
nop
mov
ret
call
mov
ret
scas
and
mov
jae
push
jecxz
push
inc
xchg
xor
cmp
negb
fmull
rcl
dec
mov
push
and
imul
popf
xchg
outsb
jo
rorb
test
pop
or
pushf
imul
inc
ja
pop
pop
bnd
outsb
jns
push
lahf
in
mov
scas
add
scas
shll
push
test
testl
push
mov
push
xor
mov
mov
int
out
cwtl
add
sbb
fcmovbe
push
outsb
adc
rorl
pop
js
sub
sbb
aam
push
jbe
adc
cmpsb
cmp
out
outsl
dec
mov
movsl
pop
pop
in
and
inc
btc
inc
pop
daa
push
dec
cli
imul
and
out
cmp
cmc
fst
je
xchg
ds
pop
in
cwtl
push
rolb
aam
or
popf
lcall
dec
mov
pusha
nop
inc
cmpl
movsl
inc
mov
pop
push
movntq
addb
outsb
pop
test
jno
inc
mov
mov
mov
sbb
sbb
mov
cmp
inc
dec
lds
jle
mov
out
cwtl
movsl
sbb
xor
add
neg
fnstcw
sbb
or
add
aaa
mov
xor
arpl
testb
leave
mov
sub
push
sub
jo
repz
push
sub
dec
incb
inc
test
add
std
inc
xlat
push
dec
sbb
xor
mov
push
cmp
inc
aas
pop
fs
jmp
jo,pt
nop
inc
jno
push
add
adc
mov
pushf
inc
adc
lea
aad
sbb
lret
jmp
jae
cmc
arpl
push
in
int3
add
inc
mov
push
mov
sub
ffree
or
mov
jnp
pop
dec
cli
rolb
adc
pop
inc
call
arpl
push
rorl
xchg
cmc
in
sarb
sti
scas
mov
add
lods
rclb
leave
pop
xchg
test
pop
gs
xchg
test
lock
mov
or
mov
inc
iret
sar
jnp
add
adc
icebp
add
dec
adc
notl
mov
mov
add
inc
and
add
adc
cmp
add
add
push
add
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
jecxz
sbb
inc
scas
jl
inc
pop
jl
adc
rorl
mov
inc
outsl
into
inc
xchg
xchg
test
aam
cmp
push
ljmp
pop
cmpl
negl
xchg
int
add
adc
add
mov
das
in
rorl
push
andl
insb
xchg
pminsw
and
mov
push
inc
cmp
jecxz
out
sub
cwtl
stc
adc
mov
mov
or
sub
add
inc
aad
aam
cmpsl
xchg
xchg
stc
inc
pop
mov
gs
or
mov
jbe
mov
lock
orb
ret
mov
rep
dec
sub
aaa
and
push
pop
scas
adc
or
fisubrl
and
lahf
lret
xchg
push
sub
repnz
aaa
mov
xlat
xor
js
test
cltd
jns
add
andl
cmp
jb
pop
cmpsl
popa
lock
jo
mov
insb
sbb
fistpll
hlt
jp
iret
or
and
icebp
mov
popf
out
sub
shrl
divb
mov
test
mov
pop
push
gs
out
das
pop
stos
lcall
push
dec
sbb
out
jg
mov
dec
out
dec
pop
data16
mov
inc
pusha
adc
scas
repz
sub
test
mov
js
in
push
iret
ret
pushfw
mov
pop
stos
leave
or
movsl
jns
dec
jb
aas
cs
mov
lcall
push
fiadds
xlat
pop
or
xchg
int3
popf
jb
iret
scas
ss
shll
mov
popa
pushf
sahf
lret
lods
es
mov
adc
push
mov
jg
mov
fsubs
xor
mov
adc
test
aaa
stos
mov
add
enter
push
out
xchg
ss
mov
and
add
pop
mov
xchg
adc
pop
and
xor
out
adc
sub
xchg
jmp
fisubs
fildll
loop
loope
cld
pop
mov
bound
adc
imul
or
jmp
out
mov
add
push
imul
fidivrs
add
sahf
mov
lea
push
inc
popl
sbb
dec
maxps
into
out
addr16
hlt
pop
lock
aas
loopne
cmp
fs
cld
aad
cmp
mov
clc
loope
pusha
loope
xor
cmp
inc
inc
and
pop
stc
into
jge
xchg
mov
or
xchg
hlt
xor
arpl
sub
mov
mov
aam
push
sub
xchg
jp
cmpsb
push
arpl
stos
mov
orl
in
push
cmp
add
les
push
clc
mov
mov
xor
ljmp
mov
xor
xor
sti
cmpsb
cmpsl
aam
cmpl
dec
mov
in
ljmp
pushf
sbb
mull
inc
lret
fsts
popf
stos
sbb
repz
enter
mov
push
mov
mov
jne
inc
adc
dec
cmp
xlat
mov
inc
aas
in
icebp
sub
sub
lea
mov
and
popf
mov
and
push
daa
push
pop
jbe
popf
dec
inc
cwtl
mov
mov
push
lret
fsubrl
jb
and
test
ficomps
sub
ds
sbb
pusha
jp
pop
movsl
cmp
xor
cmp
aas
pusha
aas
mov
adc
lret
jnp
pop
mov
or
push
jle
xor
sbb
scas
jns
xor
repnz
cli
dec
mov
test
xlat
ljmp
jp
jge
cmp
cld
adc
pop
imul
sti
and
aad
jns
mov
insl
jne
inc
push
movsb
sbb
pop
mov
subw
mov
pop
lea
and
rcl
outsl
pop
xchg
or
mov
xchg
mov
fstps
cmp
jb
dec
insl
adc
sbb
sarb
or
insb
jle
jo
cmp
push
jl
mov
lods
aaa
dec
cmp
cld
cltd
pop
scas
dec
add
sarl
stos
sub
ror
fwait
mulb
ret
push
dec
xlat
imul
out
jbe,pn
mov
in
push
gs
scas
dec
inc
sbb
pop
repnz
adc
cld
test
push
aaa
push
cmp
jmpw
xor
mov
push
push
xchg
mov
push
repnz
ljmp
popf
push
std
outsb
cmpsl
inc
arpl
int
movsl
in
ljmp
aad
rcrb
rcll
xor
mov
fadds
imul
sbbb
ljmp
pop
andb
mov
or
hlt
sbb
fimuls
inc
pop
imul
mov
ljmp
adc
ja
push
icebp
std
xor
subl
cmp
mov
push
jno
adcl
je
out
popf
es
in
fildl
lahf
sub
bound
mov
xchg
pop
rolb
mov
mov
movsb
lcall
adc
dec
or
insl
push
loope
adcb
outsb
es
xlat
cltd
lock
xor
rolb
mov
je
js
jns
outsl
mov
cld
pop
xor
loopne
jmp
lahf
pop
mov
xor
jecxz
jns
mov
xchg
or
lock
out
and
sub
lret
inc
add
xor
out
xchg
fwait
xchg
and
es
mov
sub
arpl
jne
mov
lret
stos
adc
add
leave
pop
cmp
add
add
scas
aad
les
shrb
adc
dec
mov
mov
jp
subl
and
int3
repnz
mov
mov
loope
cli
add
mov
pop
sbb
mov
mov
dec
dec
call
js
inc
push
or
pop
inc
cmp
jae
adc
outsl
jg
mov
cmc
repnz
sub
sar
adcl
mov
mov
pop
inc
fwait
xor
fcomps
mov
mov
sbbb
jl
or
add
lea
pop
xor
es
dec
xor
ja
pop
std
stos
mov
add
test
lcall
mov
sub
push
sub
sub
imul
das
mov
incl
add
daa
cmp
out
stc
in
xlat
fidivrl
inc
sub
push
jns
and
pop
push
mov
or
xor
out
sbb
pushf
aam
cmc
mov
lods
fisubl
into
test
jae
mov
pop
ficompl
inc
mov
or
gs
mov
outsl
ss
cmc
xchg
jmp
and
outsb
push
sahf
push
fwait
loope
addr16
loop
ljmp
inc
pop
jmp
dec
bnd
cmpsb
std
jl
hlt
mov
jmp
scas
inc
inc
sub
xchg
pop
cld
ja
loopne
daa
and
add
push
sub
xchg
in
leave
out
test
push
xchg
mov
icebp
fmulp
fisttpl
add
dec
testb
repz
bound
add
inc
js
pop
aad
cmc
roll
sbb
movsl
ret
bnd
dec
movsb
fwait
cmpsl
xchg
dec
lcall
cmp
jnp
repnz
jo,pt
fs
mov
sbbl
adcb
rclb
inc
stc
add
inc
cs
mov
mov
dec
mov
inc
jge
repz
lock
xor
inc
and
aas
inc
sub
xchg
mov
imul
fisubrl
xor
ror
jbe
mov
jnp
fsubl
jnp
cmp
ds
inc
lock
std
push
mov
xor
xorb
sar
out
xor
int3
pop
xor
push
dec
stos
mov
es
fsubs
push
mov
or
ret
stos
cli
clc
xchg
push
jp
iret
pop
pushf
insl
sbb
jg
sub
out
xchg
ds
psllw
sbb
mov
push
jns
mov
xchg
lock
or
mov
ds
int
cmova
ret
fprem1
fcmove
out
fstpl
inc
dec
push
lea
icebp
dec
incb
push
sub
js
out
dec
jns
out
mov
fbstp
popa
aas
stos
sub
lock
jnp
icebp
xchg
into
in
mov
inc
sbb
cmp
mov
jb
xor
cmp
test
incl
adc
xchg
push
adc
arpl
icebp
jo
call
inc
pop
sbb
lret
jo
movsb
mov
mov
xchg
aas
mov
sbb
inc
xchg
jo
pop
push
jmp
pop
lock
add
ss
add
adc
jae
sahf
or
ret
mov
inc
fs
out
or
leave
inc
mov
popf
pop
and
lret
pop
outsb
jp
sub
stc
mov
mov
add
add
repnz
hlt
loope
mov
lret
inc
mov
lahf
shlb
int
mov
sub
cld
add
in
push
insl
stos
ret
sti
iret
call
sti
ljmp
sub
jo
add
sub
filds
int
inc
faddl
ret
aas
xchg
jl
sbb
loopne
and
aam
imul
les
mov
fidivrl
test
sar
sub
call
inc
jb
aam
pop
shrl
pusha
ret
fiadds
xorb
push
out
or
mov
sbb
push
dec
dec
jmp
inc
jo
sbb
push
add
std
stc
mov
bound
add
cs
jnp
pop
sbb
xchg
out
cmp
adc
jns
orl
push
addl
nop
xor
cmc
outsb
jg
dec
mov
jmp
adc
clc
sub
je
in
adc
lcall
mov
leave
mov
cmpsl
ljmp
fnstcw
adc
push
decb
call
lret
add
add
push
xor
dec
push
int
pop
mov
mov
sbb
adc
xor
addl
test
ret
in
push
dec
imul
cmp
gs
ret
pop
mov
rolb
jae
jl
mov
adc
xor
lds
hlt
fs
sub
cmpsb
or
sub
sub
cmp
rorb
fucom
lods
fs
mov
sub
ss
or
gs
xor
cli
insb
cmp
mov
sahf
popa
push
add
shlb
mov
enter
stos
ss
xchg
fcmovb
jecxz
sahf
pop
jo
cmpb
inc
push
insb
ss
sub
scas
sub
outsb
sti
mov
addr16
mov
mov
insl
mov
and
xor
call
dec
out
sbb
mov
pushf
cmpb
aas
push
test
int3
aaa
in
pushf
sub
xor
scas
sahf
nop
outsb
cld
fwait
adc
nop
jp
lock
xor
imul
add
mov
xchg
inc
mov
test
das
data16
fs
add
sub
mov
jno
mov
xchg
pop
sbb
stos
inc
shlb
int
pop
xchg
add
sti
fildll
pop
lods
ret
push
rcr
in
stc
mov
mov
dec
mov
ds
scas
add
aam
ret
je
mov
imul
fisubs
adc
aas
add
enter
sbb
psubb
stc
test
dec
hlt
mov
mov
jge
test
clc
mov
dec
and
mov
or
xor
leave
and
mov
scas
pop
sub
clc
cli
fwait
pushf
push
scas
pop
dec
sub
and
push
jg,pt
shrb
loop
scas
mov
mov
lcall
enter
or
loope
mov
adc
stos
sub
aam
mov
cmpsl
inc
mov
test
mov
negb
mov
adc
popf
xchg
inc
mov
jle
mov
push
push
nop
pushf
push
jecxz
into
inc
jb
outsl
popf
mov
cmp
shl
leave
pop
out
ret
mov
xor
inc
adc
mov
mov
lods
inc
pop
jle
mov
mov
movsb
sub
testl
jmp
ret
enter
xor
mov
maskmovq
idivl
fidivl
popf
push
stos
dec
cmpb
jne
insl
or
sub
rclb
imul
fadds
mov
pop
jge
inc
xchg
xchg
out
rolb
fwait
ljmp
pop
call
scas
pop
ret
adc
dec
sbb
mov
or
jg
or
int3
jae
ret
pop
bound
jmp
mov
repz
adc
mov
arpl
scas
and
mov
std
test
jl
cli
jne
sar
mov
lret
loopne
cmp
das
mov
push
xchg
int
mov
push
xchg
mov
inc
ficoml
in
add
add
push
lods
jae
aaa
outsl
cmp
movsb
mov
inc
mov
xlat
aas
sarb
add
mov
mov
fnstenv
sub
sbb
xor
stos
dec
bound
cmp
dec
cmp
ja
jae
jno
jne
ds
sub
xor
std
insb
insl
arpl
into
movsb
jno
push
xlat
mov
pop
mov
cmp
and
xor
repz
in
popa
xchg
add
cmp
push
repnz
scas
dec
pop
in
xor
popa
mov
pushf
jp
mov
sbb
mov
mov
jecxz
cmpsb
or
inc
mov
scas
sub
xor
shr
bound
sub
pop
cltd
loope
insl
mov
popl
sbb
or
into
les
stc
push
xlat
aam
adc
mov
mov
sbb
sbb
sub
and
ret
iret
add
mov
mov
mov
ret
movsl
xor
jae
insl
add
jmp
clc
sets
popa
lret
push
in
pop
test
sub
add
sub
enter
pop
pop
push
push
insb
mov
sbb
js
pop
jns
and
dec
inc
scas
cmpsl
fistps
in
pop
repnz
and
pop
fildl
out
pop
adc
xlat
jmp
scas
mov
inc
out
movsl
sub
das
fwait
fs
lret
sbb
aas
pop
cmp
inc
lds
int
aaa
mov
push
lret
cli
into
push
adc
gs
sbb
in
les
adc
ficoml
in
adc
lock
xor
aas
sbb
or
aad
divw
sbb
lods
dec
ficoms
test
fistl
std
pop
cmpsb
mov
movsl
mov
jae
arpl
mov
inc
or
cmc
lds
adc
mov
pop
pop
jo
sbb
out
mov
iret
imul
sbb
adcb
add
and
fistpl
pop
jne
add
inc
push
div
bound
inc
loopne
adcl
sub
pop
arpl
mov
pop
mov
scas
call
push
ljmp
mov
mov
push
cmpsb
mov
out
fwait
mov
sbb
fdivl
or
rorb
dec
gs
push
popa
std
xchg
mov
lea
shrl
mov
or
popa
push
adc
sub
xor
hlt
in
popa
mov
cwtl
pop
jbe
sbb
les
jp
mov
int3
movsb
cmp
mov
mov
mov
fcoml
inc
stos
cltd
cmp
jmp
sarb
jle
inc
loope
dec
loopne
fs
xor
outsl
jnp
je
push
pop
rcr
mov
sti
cmp
and
lret
ds
cmp
repnz
sahf
adc
mov
inc
outsb
mov
xchg
dec
jecxz
not
fwait
lock
pop
lock
int3
sub
mov
mov
mov
push
insb
andl
inc
test
dec
cmp
aad
cmp
adc
bound
xor
add
int
test
push
push
mov
dec
jecxz
push
out
fistpll
dec
jg
subb
testb
push
pop
sub
push
data16
sarb
nop
and
xchg
out
hlt
cmp
es
xchg
and
adc
mov
stos
pop
push
pushf
enter
add
sbb
imul
aam
adc
stos
or
add
push
pop
and
notb
push
aas
int3
loopne
int3
in
rorb
jl
mov
loope
push
push
into
ja
ficompl
xor
add
inc
sbb
adc
pop
add
or
arpl
das
repnz
sub
das
xchg
pop
fldlg2
lret
fidivl
mov
pop
xchg
mov
adc
add
leave
xor
inc
outsl
jo
ljmp
lods
icebp
sbb
cmp
in
loop
mov
jnp
mov
pop
cltd
pop
loopne
ja
lock
imul
test
shlb
jp
outsb
pop
mov
loop
outsl
mov
inc
push
pop
sub
jl
enter
fsubl
std
mov
sti
std
pmaxub
or
xor
fadds
mov
jl
popa
iret
or
mov
dec
mov
or
mov
lahf
inc
push
and
xchg
or
add
fldl
insl
test
js
mov
push
cmpsb
in
loope
fwait
aam
push
popf
std
pop
ret
sub
jge
sbb
sbb
adc
pusha
cmp
rcrl
pop
int3
divl
pop
sub
sub
addl
les
ret
addl
mov
in
push
ljmp
das
pop
pop
std
aas
add
push
mov
cmp
mov
pop
fs
mov
or
push
push
lahf
ljmp
cmp
rcr
xlat
mov
mov
testl
push
push
ret
xor
fstpl
push
jg
pushf
pop
xor
mov
mov
mov
pop
add
xor
les
popa
out
jb
popa
or
addr16
sub
int
mov
popa
mov
out
cwtl
sbb
icebp
enter
ss
fst
pop
aaa
call
jae
jmp
add
push
jnp
mov
add
test
lahf
leave
and
test
je
fnstcw
into
dec
push
pop
in
xlat
loope
rcr
ljmp
leave
out
push
pop
jnp
pushf
ret
xchg
jnp
and
daa
mov
cwtl
lahf
aas
int3
pop
cld
add
xor
push
add
imul
cmp
fidivl
fisubl
out
cld
pop
mov
stos
movzbl
loopne
adc
push
or
lcall
nop
sbb
sahf
mov
std
inc
and
mov
add
lock
adc
jmp
aas
push
mov
push
cmc
dec
sbb
cli
cmp
hlt
add
in
jno
iret
cmp
test
cmovl
xchg
int
jbe
mov
ret
lret
loopne
add
sub
rcrl
popa
sbb
mov
ret
ds
jge
rcl
cmp
xchg
movsl
inc
mov
adcb
mov
pop
fdivrl
mov
mov
adcb
xlat
pop
pop
sub
adcl
add
adc
hlt
test
mov
stos
mov
push
jo
push
xor
xor
mov
xlat
lds
push
movsl
xchg
jmp
clc
pusha
popa
cs
ljmp
inc
and
addb
or
mov
mov
jecxz
mov
pop
dec
loop
sbb
fcmovnbe
jns
push
loopne
stc
dec
test
ror
addl
int3
add
loope
jecxz
mov
lods
rol
imull
mov
xchg
movb
test
stos
scas
pop
mov
jnp
js
mov
std
idiv
aas
jno
pop
outsb
xchg
in
sbb
xor
dec
xlat
dec
xor
add
lret
or
ret
mov
jecxz
stos
push
int
inc
push
pop
push
out
cwtl
sbb
xor
and
mov
inc
mov
or
call
jnp
loop
js
test
cmp
push
and
add
jne
jne
mov
mov
aas
or
pushf
std
stc
xchg
pop
pop
and
aaa
mov
and
mov
pop
cmpl
daa
in
xchg
push
pop
mull
hlt
test
xor
lret
cmp
pop
mov
and
mov
hlt
pushf
enter
fdivrl
hlt
xchg
inc
out
add
das
sbb
movsl
inc
lret
dec
subl
cmp
dec
add
cwtl
popa
enter
and
fcoml
hlt
enter
dec
mov
stos
inc
jmp
jecxz
pop
add
mov
insb
negb
ss
push
or
dec
jp
mov
loopne
xor
faddl
sbb
jae
sub
and
dec
gs
and
inc
imul
clc
pop
test
lret
xor
out
xchg
mov
xchg
imul
lods
roll
cmp
or
ss
dec
loope
lea
fldcw
mov
sbb
or
or
out
adc
lods
cmp
jns
jo
sarb
add
repnz
xchg
sbbb
es
sti
aad
xchg
inc
sbb
nop
fsubs
cmpsl
dec
test
bnd
rclb
imul
dec
cmc
xor
dec
es
sub
mov
pop
sub
xor
cmp
sbb
pop
mov
pop
cmp
mov
in
jg
ret
bound
lea
cwtl
dec
aaa
sti
hlt
adc
pop
sarl
mov
data16
outsl
jno
jmp
stos
into
imul
repnz
inc
sub
push
dec
inc
dec
bts
sub
shl
mov
leave
int
fcmove
mov
jo
das
cli
jp
mov
add
scas
divb
cs
cld
lods
addr16
pop
jle
je
std
leave
movq
push
xor
lods
cmp
xchg
fistpl
dec
mov
adc
push
pop
ret
outsb
inc
daa
add
das
loopne
or
xrelease
push
mov
es
mov
mov
sbb
xchg
aas
loop
data16
int3
dec
mov
add
or
arpl
js
test
adc
ret
shl
inc
add
fimull
xor
pusha
dec
fildl
popf
outsb
out
movsb
pop
scas
mov
ljmp
fstpl
fstps
jg
jg
fdivrs
push
out
jge
stc
or
out
cmp
sub
dec
pop
xlat
sbbl
sbb
test
and
test
mov
adc
dec
jb
inc
je
jbe
fimuls
fcompl
and
hlt
adc
adc
inc
stc
sti
mov
pop
xchg
mov
sbbb
ficoml
out
out
jb
aas
mov
int3
sbb
sub
ret
push
lods
jg
outsb
enter
out
mov
hlt
enter
lods
sub
inc
rclb
xor
jne
sub
in
je
pop
leave
sub
movsl
cli
mov
dec
and
or
xor
loop,pn
jnp
xlat
sbbb
sbb
push
adc
cmp
fadds
pop
inc
push
or
daa
cmp
and
xchg
push
cld
rcrl
xor
pop
cs
inc
subb
or
adcb
fbld
dec
inc
shrb
mov
popa
jne
cmp
mov
adc
inc
xchg
and
movsb
decl
js
jmp
dec
ret
cmpb
mov
andb
jle
icebp
push
stos
push
aaa
mov
enter
xor
pop
lock
dec
in
and
mov
xchg
push
mov
xor
jno
fistpl
xchg
or
jg
mov
add
mov
pop
sub
mov
push
sbb
jo
push
insb
bnd
in
out
mov
lcall
cmp
daa
cmp
xor
loopne
dec
push
mov
cmp
mov
sti
inc
adc
adc
and
cltd
or
gs
push
sbb
mov
add
pop
outsl
sub
and
push
pop
cmc
jge
mov
mov
inc
aaa
frstor
add
add
popf
pop
push
and
adc
call
cmp
mov
cltd
rolb
pop
faddl
push
mov
pusha
pop
push
cmpsb
cmp
out
jecxz
cmp
xchg
scas
and
dec
outsb
dec
and
cmp
int
adc
xchg
popf
adc
lret
and
inc
push
push
pop
and
loopne
loopne
fidivs
test
and
mov
lcall
sbb
lds
idiv
jge
test
jle
imul
rol
out
lcall
xor
lods
xchg
sub
adc
loop
cmc
rclb
xchg
fdivr
dec
push
popl
call
xchg
inc
jecxz
jno
mov
adc
push
repz
cltd
in
inc
in
sub
push
adc
mulb
outsb
sub
cmpsb
sbb
ljmp
repnz
ret
lahf
loope
push
lock
clc
dec
imul
mov
aad
add
jb
cwtl
push
scas
cmpsb
je
popa
dec
aam
cmp
sub
loop
mov
fdivs
dec
aad
fwait
repnz
push
xor
popa
std
xor
sub
aas
divb
and
clc
or
sbb
mov
shll
jmp
fucomip
add
jbe
loopne
jb
push
mov
sub
cmc
cwtl
shrb
jae
scas
ss
add
add
jo
lret
sbb
cmp
je
inc
loope
mov
push
scas
shll
ljmp
inc
sub
loope
cmpsb
fmull
cwtl
push
or
mov
sub
repz
cli
cmp
add
xlat
mov
push
in
jo
fcoms
mov
lock
xor
jno
add
stos
jne
sarl
mov
loopne
test
pop
push
es
add
insb
test
cld
roll
ficomps
jmp
cld
mov
leave
jg
xchg
push
ret
lahf
inc
cli
fmull
jbe
push
test
es
inc
mov
enter
mov
mov
sbb
add
je
or
mov
jecxz
cltd
les
hlt
fucomp
mov
fnstsw
js
test
lcall
dec
add
cld
lock
push
jecxz
add
out
mov
movsl
cmpsl
xor
push
xor
jo
adc
test
js
dec
dec
or
clc
sti
push
lock
mov
dec
dec
jne
insl
insb
pop
movb
ss
je
push
lcall
dec
xchg
sbb
add
cmpsl
add
xor
inc
mov
stos
sbb
daa
mov
inc
in
xor
xchg
mov
pop
daa
cmp
out
dec
xchg
push
mov
aas
xchg
sarl
sbb
mov
xlat
push
xor
pusha
cltd
ss
inc
lea
cmp
decb
jne
add
sub
xlat
cmp
enter
xor
in
aam
stc
pusha
and
movntq
mov
iret
cmpsb
xor
mov
cmp
mov
leave
jo
cmp
xor
add
out
sub
mov
cmpsl
push
pop
fnstenv
cltd
ljmp
cld
mov
push
jo
arpl
imul
push
cmpsl
inc
xor
and
outsb
lea
ficoms
roll
stc
mov
ljmp
sbb
fstpl
mov
mov
sbb
mov
insb
xor
movsb
nop
daa
pop
negl
add
int
and
movsl
jg
pop
or
mov
arpl
orb
xchg
mov
xor
dec
repnz
mov
xchg
or
or
mov
cmp
mov
add
push
lock
cmp
push
sbb
mov
out
adc
jne
ss
push
ljmp
jno
adc
leave
fcomps
mov
ret
insl
mov
das
fs
repz
and
clc
in
roll
push
sbb
fbstp
mov
mov
cli
sarl
movsl
mov
push
mov
sub
fmuls
xchg
lods
mov
sbb
xchg
cmp
add
mov
push
adc
xlat
rcr
int3
sub
inc
jne
adc
das
and
fwait
adc
jns
xor
ljmp
mov
mov
cmc
stos
push
xor
sub
out
xlat
lds
jo
orl
mov
xchg
mov
mov
in
mov
popa
pop
add
inc
or
mov
add
jmp
add
cwtl
xor
je
adc
sub
dec
in
cli
xchg
xchg
mov
inc
mov
in
fdivrl
sarl
into
jbe
data16
fdivrs
pushf
ret
inc
jmp
and
pop
ss
lret
dec
mov
movq
inc
and
sub
jmp
dec
cmp
bound
push
sub
pop
lea
int
out
cltd
adcl
cmp
add
adc
sbb
inc
insb
mov
push
das
adc
jmp
cmp
sub
in
loope
loope
gs
pusha
mov
fdivs
inc
hlt
sbb
xchg
popf
jo
arpl
jge
and
shr
in
stos
adc
out
in
mov
or
cli
stos
xorl
notl
outsb
mov
addl
xor
repz
out
movsl
jbe
or
lock
pop
jmp
leave
push
xchg
dec
loopne
xchg
inc
insl
and
push
push
out
push
mov
testl
iret
dec
sbb
repnz
push
sbb
pop
ret
ficoms
push
fldenv
mov
dec
and
xchg
jp
lock
pop
icebp
ret
cmp
push
jns
jl
rolw
jmp
mov
sub
push
sbb
rcr
les
nop
cld
mov
xor
dec
int
and
test
sbbb
rcll
bnd
cvtpi2ps
aaa
popf
dec
addb
ficomps
out
out
std
push
out
lret
or
pushf
mov
jns
lock
mov
in
adc
out
ds
ss
mov
dec
jno
in
rorb
out
xchg
dec
test
cld
mov
and
sbb
jae
pop
dec
mov
out
mov
popf
sbb
scas
in
cs
aad
mov
cli
pop
xor
xchg
ret
or
pushf
inc
outsb
adc
syscall
aas
add
cltd
ficoml
pop
cmpsl
imul
cmpsb
icebp
cmc
push
mov
lds
mov
scas
mov
popf
dec
shrb
cmp
es
hlt
pop
inc
adc
icebp
add
inc
test
repz
and
dec
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
or
test
jl
inc
pop
jl
cli
xchg
outsb
stos
in
imul
movl
lds
cli
ljmp
fwait
ret
jbe
imul
test
mov
jp
push
enter
dec
in
ret
jl
sbb
mov
or
jmp
jge
data16
and
jecxz
out
lea
push
shll
fwait
cmc
push
xchg
sbb
xchg
xchg
ds
fbld
out
les
jae
mov
sti
cmp
shll
and
and
cmpsl
inc
dec
push
mov
aas
ja
mov
jmp
stos
lods
arpl
mov
pop
mov
ja
call
jle
loope
outsl
scas
dec
decl
hlt
xchg
cmpsb
mov
mov
icebp
and
fwait
or
mov
cld
dec
pop
ljmp
repz
outsl
fwait
xchg
out
jg
outsb
popf
lods
xchg
jp
or
lds
xor
int3
cmpsl
mov
lds
pop
mov
test
cmp
out
jb
loopne
xchg
mov
or
rolb
test
inc
in
xor
sbb
repnz
adc
rclb
insl
mov
sub
rcrb
enter
jmp
cmp
mov
sbb
arpl
dec
inc
data16
aad
lods
cmp
xchg
jns
std
xlat
repnz
push
jbe
lods
mov
sub
cmp
pop
mov
sarl
jne
insb
jbe
rcr
incl
pop
adc
xorb
push
jno
imul
dec
mov
add
fwait
adc
dec
adcb
xor
push
pusha
jo
jns
shlb
add
or
int
xchg
push
push
out
add
arpl
pop
pop
cmc
cmp
jbe
leave
rep
pop
pop
movsb
dec
testl
push
aaa
mov
pop
mov
jp
repz
sub
dec
jmp
test
inc
cltd
sub
dec
push
cmc
pop
div
addr16
xor
jl
fwait
enter
push
sbb
inc
jo
lods
aaa
cmpsl
cmp
lock
mov
xchg
xor
insl
mov
or
xchg
mov
in
daa
sbb
clc
int3
lods
push
cmp
je
cli
add
jb
je
mov
and
sub
movsb
insb
add
xor
mov
adc
xchg
xlat
push
ljmp
outsl
and
mov
arpl
adc
fldl
push
xor
mov
fdivrs
sub
fs
rol
lret
dec
jnp
bound
xchg
add
push
xor
enter
push
xchg
cmpsb
sbb
push
jecxz
int
ja
lods
movsb
lret
xor
adc
adcl
movsb
add
adc
and
push
push
test
popa
jmp
sbb
mov
push
pop
inc
sti
enter
ss
dec
push
jmp
jl
ds
adc
inc
imul
repz
xchg
not
mov
sbb
loop
inc
sub
in
loopne
data16
xor
mov
mov
subb
sub
test
xchg
call
dec
fwait
mov
rcr
adc
test
sarl
ficompl
clc
fistl
jb
mov
sub
xchg
or
adc
mov
push
sbbb
inc
jge
mov
mov
dec
mov
inc
aaa
dec
shr
cmp
insl
fnstcw
cmpsl
sub
popl
fists
sbb
lods
test
push
out
lods
lcall
cmp
mov
pop
loop
mov
rcrb
dec
popa
pop
enter
movsb
mov
cmc
jecxz
push
in
pop
mov
ret
jbe
or
add
xor
adc
fisttpll
out
push
insl
notl
int
stc
int3
cmp
outsb
in
aaa
mov
cmp
xchg
pusha
dec
lahf
ja
mov
outsl
ret
ret
inc
dec
xchg
dec
pop
xor
adc
rcrl
ret
cli
and
insl
mov
popf
mov
inc
lret
imul
xor
and
sahf
cmp
sub
nop
jno
pop
test
inc
jns
xchg
shl
dec
cli
mov
dec
pop
out
inc
mov
es
std
imul
and
adc
xchg
xlat
out
nop
sbb
lock
imul
mov
ljmp
das
hlt
push
pop
or
adc
cmp
inc
jae
repz
sbb
pop
outsl
push
lcall
dec
mov
scas
or
shll
iret
iret
push
or
cmpsl
test
add
mov
testb
sbb
stc
dec
or
sub
push
lcall
outsb
and
mov
lcall
ja
or
shlb
cld
xchg
cmpsb
lret
sub
cld
xor
cltd
iret
cmc
jno
inc
out
xlat
arpl
inc
mov
xor
mov
add
add
sti
mov
out
push
fisubrs
cli
test
cmp
inc
and
xchg
stc
cltd
push
in
sbb
mov
in
adc
push
xor
mov
stc
aad
test
jmp
into
adc
daa
fwait
int3
leave
out
pushf
jno
outsl
inc
xor
add
xor
shlb
sarb
push
mov
loopne
pushf
scas
out
or
stos
rcl
push
lret
icebp
sub
stos
inc
mov
mov
pop
xchg
xchg
addr16
pusha
and
insb
cmovs
jmp
dec
push
mov
scas
ret
aad
sbb
mov
scas
mov
push
stos
lcall
xchg
mov
icebp
orl
push
std
fwait
movsl
bndldx
cmpsb
xchg
cld
andb
push
test
sub
mov
mov
pop
jne
stos
jbe
je
dec
lods
dec
and
cld
rcrb
xchg
mov
and
fsubrs
out
xchg
xchg
outsl
in
das
xchg
push
mov
sbb
mov
or
enter
pop
mov
jle
inc
in
pop
hlt
and
loope
jbe
fisubrs
jge
aas
lods
adc
and
jbe
jno
push
icebp
imul
mov
inc
imull
pop
add
push
add
xor
subl
adc
mov
movntq
xchg
jge
daa
das
mov
mov
add
dec
lcall
xchg
test
outsl
push
xchg
lds
xor
jecxz
movsb
ljmp
cli
pop
mov
jp
sar
pop
sahf
pop
out
in
inc
add
add
int
ljmp
and
or
movsb
mul
push
pop
loope
pushf
lock
in
sbb
jl
sub
cmp
shll
mov
mov
cmp
loope
add
mov
hlt
xchg
scas
sub
mov
xor
jge
sahf
jo
idivl
fildl
xor
dec
out
sub
std
loope
cmc
jl
lret
adc
outsl
cmp
ja
add
movl
dec
dec
inc
dec
bswap
xor
push
pusha
repz
adc
adc
mov
jmp
stos
scas
cmp
jnp
push
pop
sarb
mov
dec
mov
insl
jno
cmpsl
gs
jmp
push
inc
mov
daa
lcall
cmp
mov
xchg
lods
add
imul
lds
xchg
popa
out
lea
sahf
sub
xchg
mov
or
cmc
cvtpi2ps
cwtl
xchg
push
sbb
ret
ffreep
jo
mov
add
xlat
pop
pop
mov
repnz
mov
mov
test
xchg
decb
xor
mov
mov
movsl
std
cmp
mov
or
ss
or
fiadds
dec
es
lahf
pop
jnp
xchg
and
lods
icebp
int3
enter
addr16
inc
out
sbb
push
pop
dec
pop
push
mov
jle
mov
loop
cmpsl
jmp
or
lea
test
and
rorb
mov
jp
xchg
fidivl
mov
adc
sbb
xor
ret
cmpsb
aam
jo
and
jge
gs
xchg
mov
mov
pushl
xor
or
movsb
sbbl
fstpt
xor
imul
add
lds
sbb
inc
mov
inc
hlt
mov
jge
mov
cmp
cmp
add
mov
and
xor
rclb
jbe
pop
dec
jmp
or
cmp
and
lcall
pop
xor
aas
cmpsl
cltd
fistps
cld
sbb
push
push
out
fwait
push
arpl
scas
mov
ds
xchg
pop
pop
ja
cmpsl
jl
loope
loope
rorl
xor
jg
js
pop
inc
mov
or
sub
pop
test
sub
subl
inc
push
lods
fs
andb
adc
inc
pop
int
sbb
aad
inc
sbbl
mov
lahf
jg
cwtl
jg
xchg
fcmovu
sbb
inc
cmp
inc
insl
fucomp
sbb
xor
das
sub
ss
mov
dec
pminub
test
jbe
push
mov
sbb
js
lods
lods
cmp
pop
inc
jmp
scas
mov
lahf
sub
adc
subb
push
jns
lahf
push
push
or
sbb
add
stos
mull
cmc
cmp
lret
fisttpl
test
out
js
and
inc
mov
mov
jp
test
or
test
sbb
aad
xor
pop
xor
jge
lret
test
loopne
mov
inc
test
leave
fmull
imul
shlb
mov
cmp
aad
sub
inc
xor
out
shrb
out
mov
sti
gs
mov
scas
lret
mov
stos
add
pop
dec
mov
jne
das
cmovbe
push
xchg
mov
mov
jne
inc
jge
lods
pop
sbb
sbb
jp
ret
pop
jmp
adc
loope
pushaw
cli
call
adcl
push
dec
fcoml
jbe
add
mov
fdivrp
ucomiss
mov
adc
and
and
push
cmp
sub
xchg
dec
xchg
xor
mov
insb
pop
loop
arpl
and
sahf
add
sbb
cmpl
rcl
cmc
mov
aas
jns
lret
cmp
jns
in
dec
jae
inc
rolb
jns
adc
push
push
sti
int3
jns
fwait
push
out
adc
xchg
iret
jbe
cmp
ret
jbe
ljmp
sub
inc
frstor
cmp
sub
movsb
sub
mov
cltd
cmp
stos
int
cmp
repz
mov
xor
sub
sar
loopne
jp
in
adc
ds
and
cmp
jg
daa
inc
push
xchg
loope
jbe
bnd
test
sub
clc
enter
mov
shl
leave
aam
mov
adc
mov
xchg
popa
arpl
pop
repz
mov
add
loopne
jmp
add
lret
loop
pop
dec
mov
iret
rcrb
aas
loop
addb
add
mov
insb
fwait
inc
sbb
inc
cmp
cmp
mov
adc
jbe
fsincos
out
ss
inc
sahf
pushf
add
inc
and
push
mov
pop
fucom
shrb
shr
dec
cwtl
and
pushf
mov
cmpb
lds
out
mov
adc
add
xorl
ficoms
xchg
je
push
and
push
mov
popa
mov
xchg
bound
mov
out
fs
pop
xchg
jge
jbe
ljmp
ja
adc
aas
dec
xchg
jge
leave
incl
cwtl
sbb
jecxz
out
shlb
pushf
movb
mov
jp
sub
call
test
pop
xor
xchg
movsl
xlat
mov
jno
adc
aam
xlat
push
inc
ret
in
pop
iret
pop
pop
or
xchg
in
dec
insb
ficompl
out
fwait
mov
out
jg
push
and
popf
fldenv
jne
sbb
jno
js
inc
fsubp
cmpsl
push
xor
lods
stos
xchg
xor
or
mov
jp
rcrb
add
inc
dec
nop
xor
sbb
or
mov
iret
sub
loopne
xchg
shrl
push
xor
push
push
cmp
push
mov
jne
add
sti
hlt
inc
sub
inc
push
out
mov
cmc
add
jnp
fcomip
test
ljmp
dec
sbbb
and
in
ss
lret
mov
mov
lds
xchg
ja
pushl
sbb
dec
push
mov
cmp
fidivl
mov
xchg
jb
xchg
jmp
lea
mov
sub
xor
lods
xor
push
jae
pop
jb
mov
pop
mov
pushf
and
dec
daa
and
aas
jle
test
pop
jmp
imul
cltd
mov
jmp
xchg
notl
mov
jp
jne
jno
or
push
rcrb
and
icebp
inc
popa
addl
nop
dec
xor
insb
push
sbb
pop
fidivrs
scas
test
sbb
aas
dec
nop
mov
cli
jb
fstl
inc
mov
repnz
adc
add
ret
lock
fs
pop
fwait
ljmp
or
cli
add
fcmovbe
xchg
inc
jmp
in
addl
setae
xor
shll
adc
outsl
iret
cli
stos
sbb
push
xor
pop
xchg
in
roll
xor
popa
mov
pop
mov
dec
mov
jnp
sbb
ja
test
xchg
in
orb
lea
jp
jl
push
push
adc
test
loop
lea
fwait
mov
mov
int
pop
ret
or
fsub
adc
in
negl
stos
in
ljmp
sbb
ficoms
sti
and
push
ret
pop
cwtl
push
test
xor
inc
xor
rcll
lds
enter
jg
dec
scas
xchg
outsl
sub
imul
testb
popf
jo
int3
dec
ret
pop
sti
test
jle
dec
push
nop
cli
dec
or
sub
mov
xchg
push
out
dec
mov
mov
and
dec
movsl
ljmp
dec
in
and
ret
sbb
hlt
push
pop
test
xor
clc
test
leave
pushf
fists
lahf
push
or
pushf
test
cli
mov
and
xchg
mov
ss
outsb
fildl
stos
add
add
js
icebp
out
into
mov
inc
mov
hlt
ret
adc
test
inc
push
jecxz
fisttpll
mov
iret
repz
add
jns
and
xor
outsl
mov
pop
lret
pop
sbb
sub
daa
and
sbbl
pop
int
cltd
repz
mov
fdivrl
cld
push
faddl
push
js
flds
test
roll
or
jg
xor
aaa
inc
shlb
popa
std
xor
pop
sbbl
add
xchg
call
inc
jae
lahf
jle
or
push
and
add
les
ffree
aaa
mov
adc
or
push
push
enter
and
loopne
outsb
adc
and
fs
sti
sub
sub
xor
dec
rcrl
rolb
jge
push
push
test
vunpckhpd
cwtl
inc
push
xchg
dec
loop,pt
and
jp
mov
jno
jmp
js
cmp
jns
cmp
hlt
fdivrp
inc
dec
or
popa
mov
stos
sbb
and
jne
pop
ss
adc
leave
ds
adc
or
or
dec
loop
shlb
test
xlat
jecxz
in
int
data16
jbe
inc
jp
adc
test
add
daa
dec
test
js
scas
int3
or
arpl
mov
fwait
insb
mov
lds
push
inc
jo
call
popf
adc
scas
mov
or
xchg
pop
dec
pop
sub
stos
cmc
divb
mov
dec
pop
pushf
xchg
pop
sub
out
repnz
in
stc
dec
add
xchg
push
sbb
es
inc
aam
fisubrs
cmpl
xor
pop
inc
sub
dec
add
iret
pop
adc
ret
or
push
cmp
rcll
pop
iret
xor
push
pop
lret
outsb
shrb
sbb
ljmp
add
cmc
xchg
mov
push
dec
sbb
sbb
in
jle
sbb
fmuls
xor
in
cmp
xor
push
into
aam
cmp
fwait
mov
jecxz
into
in
fiaddl
mov
nop
push
jno
test
aas
xchg
iret
loopne
outsb
mov
xchg
jle
mov
xchg
jo
pop
test
add
jmp
jg
mov
xchg
xor
shrl
sbb
push
sub
pop
into
pop
sbb
add
in
stos
sub
xor
sti
push
dec
push
and
test
adc
inc
or
mov
xchg
mov
add
pop
sbb
dec
pop
incl
jbe
arpl
pop
fisttpl
dec
test
xchg
insl
xchg
mov
rcl
insb
loope
or
sarb
cmpsb
add
nop
xchg
popf
gs
sbb
in
mov
lret
insb
xor
rcrl
mov
xor
jle
jnp
daa
movsl
add
pop
ja
add
das
cwtl
and
pop
inc
fdivrp
jb
cmc
xchg
mov
aaa
add
aad
loopne
jbe
pop
sub
sbb
test
cmp
mov
imul
sub
push
cmp
pop
dec
aas
xchg
aad
clc
in
add
mov
push
pop
adc
pop
lock
or
lds
sahf
fisttpll
out
push
insl
mov
imul
add
pop
mov
push
sarl
loopne
push
sub
pop
jge
cwtl
jae
sbb
sub
popw
xor
in
jae
fs
mov
adcl
pop
ljmp
sbb
prefetcht2
xchg
and
mov
ret
daa
adc
cld
inc
mov
sbb
jp,pn
scas
add
jbe
push
jmp
ret
push
xlat
adc
jne
pop
adc
pop
adc
add
and
movsb
adc
int3
cmpsl
inc
es
daa
out
pop
mov
andl
xor
mov
push
lahf
ret
out
xchg
fistl
scas
cmp
fcmovbe
rcll
dec
sub
loope
bound
popa
push
outsl
mov
dec
mov
enter
push
adc
ja
add
stc
loopne
in
or
cs
shlb
lods
fwait
sub
mov
popf
gs
cmpsl
data16
jl
iret
fcomps
lcall
or
cltd
dec
sub
popf
inc
jge
cld
pop
xchg
hlt
xor
les
dec
cmp
xor
mov
mov
inc
ror
xor
pop
adc
pop
cmpsl
les
dec
push
cmp
push
aaa
and
rorl
and
dec
mov
jmp
mov
int3
push
add
jle
pop
nop
call
push
mov
out
lcall
jae
adc
and
dec
cmp
xchg
push
stos
mov
and
fwait
imul
fisttpl
mov
or
dec
cmp
in
and
int3
pop
push
out
pop
imul
imul
xor
pop
add
sbb
int3
cld
cmp
mov
jg
cmp
enter
test
jp
push
mov
inc
mov
xor
and
xchg
pop
adc
xor
andb
cld
out
in
addr16
outsl
dec
mov
in
ret
lock
pop
mov
push
orl
adc
xchg
sub
stos
xchg
inc
push
mulb
jbe
mov
xlat
or
or
jmp
mov
push
jmp
adcl
xor
cmpsb
popa
test
int3
lahf
xor
jle
cld
dec
out
jo
sbb
mov
sbb
cs
std
cmp
scas
sbb
or
inc
add
cwtl
mov
call
mov
cmp
movsb
rcrb
inc
arpl
int
data16
dec
add
lock
lds
mov
out
push
lock
fs
dec
adc
out
nop
negl
out
enter
and
jle
or
lock
mov
and
adc
add
cmc
cltd
jbe
fmuls
mov
dec
lea
jne
inc
icebp
mov
mov
adc
sahf
jecxz
push
stc
sbb
and
arpl
repz
ret
pop
dec
inc
jb
xchg
outsb
mov
imull
pop
push
mov
pop
or
insl
ret
dec
cmp
popa
es
cld
popa
cmpsl
xor
jp
or
lea
and
in
cmpsb
rcl
into
mov
or
lods
inc
push
cs
ja
fdivrs
xchg
push
sub
mov
sahf
inc
shl
insb
dec
lock
xor
inc
jno
loop
leave
call
xor
dec
mov
popa
into
mov
mov
sbb
inc
push
push
push
mov
repz
jne
cmp
lods
call
sar
add
xchg
lret
add
sub
and
negl
jnp
mov
sarl
into
mov
scas
mov
sti
push
mov
aam
je
clc
and
shrl
push
add
iret
sbb
jbe
push
xor
sbb
dec
int3
popa
test
rclb
into
add
mov
idivl
jae
xchg
inc
push
mov
dec
mov
mov
fimuls
icebp
lods
out
loopne
pushf
cwtl
fdivr
mov
inc
lahf
add
hlt
cmp
daa
out
mov
or
int3
cmp
or
sbb
cmp
in
push
inc
arpl
xchg
fnstenv
mov
sub
mov
and
mov
out
mov
inc
add
inc
outsb
loop
inc
daa
fstpt
les
push
sbb
pop
lock
popa
and
les
inc
push
repnz
mov
mov
mov
mov
hlt
cmp
data16
xor
rorl
aas
das
mov
in
hlt
xchg
insl
fsubs
lds
mov
pop
repz
insl
fdivr
decb
pop
shll
adc
loop
dec
xchg
push
cwtl
cmp
xchg
js
js
fcompl
jne
call
xor
sbb
dec
jp
gs
sub
mov
stos
fistl
iret
or
or
push
pop
inc
mov
and
mov
sbb
jb
aaa
insl
lret
arpl
mov
repnz
xor
cli
adc
push
dec
pushf
jbe
and
jp
subb
aas
cmpsb
adc
sbb
enter
in
ret
das
ja
arpl
mov
outsl
jbe
ror
push
adc
into
sbb
rcl
fcompl
add
lods
mov
shll
lea
cltd
sti
jecxz
mov
push
or
or
jecxz
inc
dec
lea
push
bnd
inc
xchg
cwtl
out
add
pop
xor
in
xor
sub
sti
imul
jb
pop
lods
adc
push
out
pop
ss
in
scas
mov
and
int3
in
fwait
cmp
mov
pop
jecxz
fidivrs
cld
adcb
fiadds
stos
imul
sub
xchg
add
fisubrl
mov
aam
push
add
dec
adc
add
in
mov
sahf
adc
inc
mov
cmp
inc
xchg
stos
mov
dec
jg
or
aam
divl
jne
clc
push
sbb
out
mov
sbb
pop
daa
in
sbb
stos
in
push
enter
cltd
in
mov
fxch
subb
inc
sbb
sbbl
xlat
inc
cmp
mov
filds
fcomip
pop
loope
jl
dec
and
jo
push
jbe
aad
and
test
je
gs
fs
jae
jle
ret
sbbb
fistpll
icebp
pop
scas
sub
cmpsl
lea
stos
adc
repz
pop
xlat
adc
cmp
push
shl
xchg
divl
sub
dec
jne
xchg
cmp
iret
push
xor
cli
adc
shrb
cmp
pushf
cmpb
add
aaa
ficomps
cmc
scas
and
gs
inc
cmp
outsb
cs
jns
ret
push
xchg
sub
movsl
adc
ss
push
push
stos
xchg
je
push
js
lds
pop
push
sub
mov
std
and
jp
or
fdivrp
data16
adc
enter
popa
lds
xchg
stos
movsb
mov
and
jo
arpl
les
pushl
sub
mov
jl
add
xchg
lcall
mov
or
mov
sub
test
popf
lret
pop
decl
push
out
int3
ret
pop
pop
ds
add
test
fmull
and
push
leave
loop
xchg
mov
dec
or
dec
movsl
scas
or
xor
or
cld
nop
mov
and
pusha
add
bnd
fistpll
push
pop
cmp
repz
incb
xor
sbb
in
inc
cmpsl
aaa
or
sar
les
and
test
dec
cmp
in
push
popf
or
cmp
subl
or
pop
cmp
inc
mov
pop
into
xchg
jmp
adc
xor
rorl
pop
nop
jp
cs
in
jne
xor
dec
mov
and
pop
aad
ret
pop
mov
ret
cmp
mov
ss
test
dec
hlt
lds
popa
add
or
push
mov
dec
mov
mov
notb
ficompl
movsb
or
mov
or
xor
xor
loope
rcrb
out
jp
pusha
stos
sbb
sub
scas
rcl
js
rcll
fs
sbb
fstpt
xchg
jae
inc
inc
cmp
arpl
fidivs
std
mov
jmp
mov
jg
jae
jle
add
pop
jbe
lds
push
or
cs
iret
ret
lods
xorb
mov
imulb
jb
xor
inc
pushf
adc
sbb
imul
ficomps
in
insb
pop
sarb
jo
mov
scas
fcomi
leave
inc
mov
lds
xchg
dec
scas
lea
pop
cmpsb
xchg
add
lods
adc
out
dec
shl
add
adc
scas
test
outsb
inc
hlt
xorl
nop
add
sbb
sbb
loopne
push
hlt
sub
mov
mov
scas
sub
cmp
sub
xchg
or
rcll
sub
rcr
xchg
cs
and
dec
cmpsb
dec
jbe
push
cmpsb
icebp
mov
cmpsb
pop
test
jecxz
testl
mov
sbb
test
mov
insb
jp
aaa
fcmove
mov
cmp
xchg
sbb
aas
pop
popf
scas
lods
das
add
add
popf
imul
lret
cmp
clc
scas
adc
mov
xchg
mov
mov
push
sti
cmc
int3
fwait
out
out
cmp
fnstsw
aad
ret
mov
in
jl
jmp
test
bound
pop
jns
cmp
insb
inc
jge
pop
xchg
outsb
outsl
jno
ficoml
push
fisttpl
lret
fsubs
js
enter
xor
lret
mov
lcall
mov
inc
mov
mov
xor
mov
pop
loop
jno
mov
lock
xchg
push
mov
push
sar
mov
fisttps
pop
sbb
js
mov
push
jo
or
lret
sahf
adcl
sub
adc
jne
pusha
in
imul
push
popf
popa
or
pop
sarb
int
repnz
mov
mov
sbb
jl
pusha
jge
das
aas
mov
pusha
enter
push
or
push
das
fwait
push
cwtl
lods
jne
mov
arpl
push
mov
int
push
sbb
stos
and
fsts
das
les
popa
lcall
std
iret
dec
xor
lahf
add
pop
scas
xchg
mov
imul
test
arpl
or
sbb
mov
pop
and
pop
sahf
lea
and
psllw
mov
loope
mov
add
stos
mov
sbb
push
cli
add
jl
pop
xchg
loop
adc
xchg
lock
shlb
popf
add
adc
pop
inc
xchg
jno
insb
pop
sbb
rcl
jle
cmp
loopne
fidivrs
add
pop
sbb
fnstenv
hlt
cmp
push
rcrb
or
repz
inc
fwait
in
pushf
jl
loopne
mov
dec
imul
out
clc
lds
mov
js
pop
nop
add
dec
popf
movsb
jge
xor
gs
mov
negb
ret
adc
jno
pushf
ss
cmpsb
push
jb
dec
push
xor
jnp
pop
test
mov
icebp
in
dec
adc
ljmp
add
cmp
adc
mov
and
enter
mov
mov
mov
xor
jge
dec
pop
dec
inc
clc
mov
sub
movsb
mov
popa
push
stos
pop
adc
aad
push
push
js
pop
mov
jno
jle
push
aad
push
push
enter
iret
sbb
test
push
add
mov
movlps
js
xchg
stos
and
cvtdq2ps
mov
data16
outsb
mov
mov
mov
push
add
stc
mov
lds
test
sub
scas
repnz
cmp
loopne
shrl
out
inc
jmp
inc
loope
jecxz
push
aaa
imul
je,pn
mov
aaa
dec
adc
mov
push
aas
jge
mov
push
das
in
ds
jp
leave
fwait
xchg
out
push
pushf
cwtl
sub
or
sbb
imul
lret
xchg
cld
sbb
call
repz
inc
xor
push
loope
cmpsl
push
xchg
fwait
loop
jb
and
push
mov
roll
lret
lock
int3
mov
and
adc
stc
jg
outsl
lcall
jo
rclb
push
sbb
jl
int
stc
loopne
mov
leave
dec
data16
out
subl
fwait
test
pop
xchg
xchg
popf
jnp
xor
add
test
es
cmp
mov
cli
dec
lcall
mov
bound
mov
aad
jae
rcll
and
pop
cmp
inc
js
jnp
mov
cmp
das
lock
sub
xor
jmp
jge
push
xor
pop
iret
in
lods
scas
dec
push
mov
je
jg
fmull
xchg
push
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
stc
addr16
xor
cmpb
fdivl
ljmp
mov
pop
lret
test
xchg
aas
mov
and
fimuls
out
popf
addb
push
lds
jmp
cli
insb
shrb
xchg
push
adc
mov
mov
jmp
push
inc
in
daa
mov
rclb
mov
scas
or
pcmpgtd
and
repnz
mov
loopne
pushf
mov
jp
sahf
rcrl
xor
add
jbe
mov
jo
scas
fistl
xchg
and
testb
test
aas
cmp
push
cmp
pop
dec
mov
mov
and
lret
jo
pop
fcoml
stos
movd
xchg
jnp
jecxz
gs
dec
roll
outsb
test
mov
mov
dec
lods
rolb
push
lcall
aas
xchg
stos
ffree
xor
sbb
in
rcrb
adc
jp
int3
jmp
pop
pop
cltd
ja
push
setnp
ret
ds
adc
xchg
inc
adc
jns
loop
mov
xor
imul
mov
sub
xor
mov
mov
and
mov
scas
sar
dec
xor
out
mov
test
std
sbb
loopne
pop
sub
jne
test
jbe
jle
inc
sub
cmp
outsl
inc
test
mov
fbstp
xor
daa
sti
lods
ds
or
inc
cltd
ret
std
fucomi
lea
inc
adc
lods
inc
mov
test
push
add
adc
and
sub
adc
mov
imul
mov
or
fcomp
repnz
push
mov
or
pusha
mov
xchg
push
je
xchg
aas
popa
shr
lods
clc
les
fsubrl
out
xor
stc
inc
push
sbb
lahf
sahf
rolb
mov
sarb
sub
iret
or
movb
xor
and
jge
dec
mov
shl
test
and
add
loopne
mov
imul
mov
mov
mov
cld
testl
add
rcrl
add
jae
sahf
xchg
jl
daa
and
repz
pop
popf
bound
andb
or
mov
jg
jge
je
ret
and
les
mov
cmp
outsl
fnstenv
outsl
imul
repnz
fiaddl
mov
js
sub
mov
in
mov
pop
mov
outsl
xor
xor
scas
push
lods
addr16
sbb
stc
in
orl
add
ds
cli
shlb
xchg
stos
mov
daa
inc
les
fmul
sbb
push
mov
mov
pop
cmp
fistpll
rorl
lret
ja
dec
pushl
cmpsl
dec
mov
mov
clc
int
les
jne
mov
sbbl
testl
int3
roll
je
clc
mov
test
inc
bound
notb
inc
inc
pop
mov
pop
sbb
in
xorb
jmp
and
shl
ja
in
fidivrs
inc
shrl
mov
popa
sbb
pusha
adc
or
ss
aas
aad
sahf
test
mov
mov
mov
mov
enter
int
addr16
jecxz
bound
mov
callw
test
fsubrl
jg
dec
out
inc
mov
cmpsl
imul
js
mov
mov
rcrl
rcrb
add
mov
dec
inc
in
cmp
imul
sub
jnp
xorl
push
add
adc
cltd
outsl
add
and
mov
sbb
push
pop
cmpsl
outsb
sbb
fs
fyl2xp1
inc
addr16
and
pushl
sbb
jo
xor
or
jle
xchg
jmp
adc
mov
int
in
ja
xor
sub
xor
dec
out
inc
cltd
pushl
bound
into
scas
mov
orb
fwait
aad
push
gs
jmp
popf
sbb
and
dec
addr16
xor
dec
sub
mov
sahf
xor
adc
lds
in
push
sbb
sbb
xor
adc
sbb
mov
pop
or
mov
xchg
xchg
cmp
mov
sub
js
mov
adcl
mov
xor
add
adc
push
icebp
scas
xor
arpl
pop
sub
faddp
lea
outsb
es
jg
imul
pushf
push
add
hlt
or
lret
fucomip
mov
imul
test
dec
fisubs
cmp
jbe
shlb
and
repnz
inc
in
int3
cli
jmp
xchg
int3
pop
fs
cmpb
pop
iret
pop
xchg
xchg
dec
and
stc
arpl
push
ficoml
and
mov
mov
inc
js
push
xor
aad
inc
lods
inc
jl
xchg
xchg
in
inc
lock
mov
and
push
jo
es
mov
scas
lods
in
outsl
scas
clc
or
mov
xlat
fwait
mov
lret
sub
add
fwait
adc
sbb
enter
cmp
jb
add
sub
cltd
mov
inc
pop
and
fwait
out
inc
sbb
sbb
jb
xchg
outsl
pop
or
xor
mov
inc
mov
sub
scas
adc
pop
movl
xor
fstpl
or
mov
or
loope
test
in
inc
ds
sub
mov
adc
jmp
inc
outsb
mov
xchg
ss
rcll
shlb
and
jno
and
mov
nop
daa
sbb
inc
data16
notb
cmp
or
mov
test
pop
into
or
sbb
cli
lea
ret
popa
dec
sarb
jae
dec
stc
pop
clc
mov
adc
xchg
push
inc
inc
mov
popa
mov
pop
or
jns
push
pushf
mov
mov
push
rorb
lahf
std
mov
push
push
xchg
inc
pop
leave
inc
or
stc
stos
into
arpl
sbb
sbb
sti
fsts
lret
cs
jmp
push
out
jbe
and
out
mov
jbe
jmp
lahf
push
sahf
loop
enter
jbe
stos
ss
out
push
mov
bound
movsl
pop
mov
ds
or
and
ret
jle
ret
push
inc
and
xchg
cmpsl
int3
int3
into
aaa
sub
sbb
jo
lahf
adc
fidivrl
cs
push
pop
or
add
and
xor
jne
leave
xor
ljmp
lods
mov
inc
pop
mov
sbb
call
popf
mov
mov
cmp
fdivrp
and
sbb
lock
ret
popa
aas
mov
mov
jo
iret
adc
inc
inc
sbbl
jmp
xchg
add
xor
rcrl
enter
lahf
rorl
dec
sbb
and
jne
aad
sbb
in
add
xor
xchg
imul
or
jb
mov
popa
push
out
xor
cli
and
mov
dec
imulb
push
out
add
mov
pop
sbb
aas
es
cmp
shlb
in
popa
inc
jle
pop
insl
dec
ds
xchg
sub
test
stos
rol
cmp
je
lea
jl
fwait
lock
mov
jge
jae
hlt
or
jp
outsl
sub
jno
sub
sbb
cs
ljmp
mov
adc
ja
pop
mov
inc
rcrl
sbb
insl
xor
mov
inc
or
dec
pop
ret
punpcklbw
daa
sub
or
stos
adc
push
addr16
shl
sarl
lea
xchg
hlt
call
addl
movsl
mov
jne
and
repz
jns
sub
mov
pop
cmpb
aam
insb
mov
xchg
cmpsb
mov
xchg
jmp
and
push
pop
adc
stos
icebp
inc
mov
into
popa
fistl
pop
mov
adc
movsb
fsubr
or
ret
inc
dec
in
fcom
fnstsw
dec
int
inc
jno
outsl
jecxz
pop
jmp
and
mov
pusha
sub
mov
sbb
mov
rorl
xchg
decl
fs
iret
adc
into
jae
and
pop
jmp
in
arpl
sub
xor
test
fs
ret
inc
mov
pop
xor
xchg
pop
sbb
jne
inc
xorl
cmp
js
sahf
xor
jp
jmp
cmpsl
addl
lock
xor
xor
lods
and
es
pop
sbb
inc
mov
pop
jae
and
xor
jbe
xchg
xor
mov
fstpt
lods
pop
jb
mov
mov
test
xorl
and
mov
outsb
mov
test
inc
cmp
cmpsl
mov
dec
iret
mov
cmpsb
scas
sbb
arpl
clc
rcrb
jecxz
jno
ficomps
into
dec
insl
mov
test
in
pusha
popf
push
push
std
mov
mov
and
fdivrs
dec
sbb
mul
pop
fiadds
aad
cli
out
mov
cmp
mov
fscale
mov
in
loope
cmc
jecxz
mov
push
fdivr
std
mov
in
imul
in
pop
out
or
mov
lret
xchg
dec
aam
or
insb
add
pop
call
into
push
shld
outsb
push
and
addr16
test
js
or
adc
aam
jecxz
in
test
dec
nop
ror
in
stos
add
mov
test
push
in
mov
push
adc
mov
push
sub
or
ret
cmp
cli
in
shl
clc
sub
xor
int3
push
fisttpll
xlat
test
pop
jg
lock
sub
out
popf
jae
mov
repnz
aam
sbb
xchg
inc
cmc
mov
lods
scas
push
push
dec
lahf
shlb
enter
cmp
in
and
mov
mov
cmpsl
shl
inc
pop
add
push
pop
xor
dec
and
cmp
cmp
sbb
call
lret
insl
or
aas
fbld
adc
mov
adc
mov
adc
jmp
pop
ror
nop
or
sub
dec
mov
add
loop
add
stos
addb
jmp
outsb
flds
fisttpl
xchg
int
jno
inc
lcall
xchg
push
jecxz
jo
aam
push
or
mov
pop
mov
jns
stc
lods
call
sahf
xor
testl
pop
lret
sbb
rcll
push
jle
adc
add
pop
pop
daa
mov
pop
pop
mov
fs
fs
sbb
loop
lods
inc
xchg
xlat
jns
sbb
jge
dec
or
inc
inc
cmc
push
nop
pop
lock
insl
xchg
shl
mov
sbb
inc
cld
jp
idivb
xchg
or
fs
repnz
push
icebp
loop
dec
cmc
adc
hlt
pop
pop
leave
lea
pop
dec
xor
jp
hlt
arpl
mov
mov
mov
add
jmp
in
fwait
clc
sbb
jnp
das
mov
cmp
outsl
leave
xchg
push
lock
iret
daa
dec
mov
femms
cmp
in
lds
dec
inc
test
cmp
out
push
dec
out
iret
inc
mov
jl
cltd
jp
inc
jle
lret
jle
jb
and
lret
aam
mov
add
xchg
movsb
movsl
sbb
pop
cmp
fdivrp
cs
test
notl
stos
xchg
shrb
pop
push
loopne
sub
adc
into
push
xchg
mov
adcb
jle
stos
out
popf
lahf
test
push
js
stos
add
stos
sbb
fldl
les
jb
mov
ficoms
test
mov
add
cmpsl
imulb
inc
lds
mov
adc
cmp
sub
in
loop
loope
movsb
adc
test
dec
cmp
mov
jbe
push
lds
pop
sub
std
lret
iret
loop
aam
out
cmp
andl
xchg
jecxz
stos
es
mov
in
xchg
aam
sub
mov
or
loopne
sbb
shl
shl
push
push
nop
fstpt
sub
flds
and
js
sub
out
test
fimuls
pop
lods
test
cmp
jmp
push
jbe
lret
add
jnp
dec
rcrl
lret
pop
popa
push
push
cmp
push
adc
scas
add
movsb
mov
leave
sub
mov
push
shlb
and
cltd
mov
shll
xor
inc
mov
and
cmp
jl
jbe
bound
dec
lods
or
je
mov
jne
mov
test
insb
cltd
addr16
inc
call
aam
inc
dec
cmp
dec
xchg
aas
das
fisubrl
enter
sti
lock
sbb
je
jl
jg
mov
push
jnp
jge
mov
movsb
test
or
and
dec
lods
leave
incl
dec
mov
jnp
pusha
xchg
xor
ret
xlat
mov
ret
jge
movsl
jnp
pop
xor
orl
into
mov
cmp
sub
pop
hlt
adc
xchg
inc
push
std
mov
in
stos
sar
mull
es
pusha
das
push
jg
jl
ds
mov
imul
pop
lds
icebp
sbb
dec
aad
mov
push
mov
flds
inc
inc
push
jle
int
jp
insl
movsb
xor
dec
lahf
out
jecxz
xor
test
pop
xchg
inc
and
lods
lea
pop
cmovne
jl
mov
ja
mov
icebp
cmpsl
es
or
gs
je
inc
pop
xchg
aas
in
or
leave
mov
push
popf
mov
loope
jmp
lret
gs
mov
test
pop
mov
fld
ficomps
jns
insb
jmp
aam
sahf
jae
dec
dec
shrl
sbb
fdivp
sahf
ss
inc
dec
mov
out
fwait
sahf
xor
popf
xor
push
cwtl
add
stos
fnstsw
sub
cmp
loop
out
test
iret
or
lock
push
mov
or
aad
mov
push
in
imul
jge
lret
divl
js
push
inc
repnz
sbb
inc
repz
addr16
gs
fildll
iret
and
xchg
dec
ficomps
movsb
xchg
mov
mov
adc
cmpsb
cmp
and
fcmovnbe
fcom
cwtl
ficoml
stos
add
mov
pop
jge
jmp
mov
fstpl
jge
ss
jbe
jmp
popa
push
push
jno
add
push
inc
int3
mov
and
xchg
and
lds
sti
pop
and
aam
jnp
mov
add
and
jbe
ss
jb
popa
ss
add
push
xchg
push
lods
xor
inc
es
pop
insb
mov
popf
rol
or
jnp
lds
sahf
sbb
cmpb
inc
inc
lahf
add
jle
add
push
fisubrs
xor
loop
pop
pusha
mov
in
mov
insl
push
inc
push
movsl
pop
inc
adc
mov
add
outsl
clc
mov
insl
xchg
aaa
jp
cmc
adc
es
cmp
dec
or
loop
daa
idivl
stos
mov
aam
fcoms
dec
lock
inc
cld
int3
imull
movsl
mov
mov
mov
sbb
divl
pop
into
in
or
fldt
xchg
and
mov
pop
mov
scas
cmp
push
nop
inc
clc
lea
dec
out
mov
sub
mov
mov
and
and
adc
fxam
add
int
loopne
cvtps2pi
out
dec
push
adc
fsubl
jns
sarl
push
pusha
adc
ucomiss
cs
loop
mov
frstor
aam
push
inc
adc
mov
arpl
jbe
xchg
cmp
inc
mov
loope
mov
and
mov
fcmovb
pusha
jo
or
push
arpl
aam
cmp
or
fisubrl
into
push
or
cs
push
push
jbe
ljmp
adc
mov
adc
mov
sahf
mov
fisttps
and
pop
push
imul
sub
adc
or
inc
arpl
es
clc
pop
pop
repz
dec
outsl
mov
jmp
sub
cld
shll
mov
inc
xor
adc
jnp
jne
lahf
js
fsubs
addr16
das
orl
xlat
stos
mov
lods
ffreep
nop
xchg
pusha
les
xchg
out
stos
fnstsw
out
push
shll
nop
loop
popa
pop
ret
inc
and
in
gs
mov
xorb
shr
in
pop
mov
mov
jmp
gs
push
sbb
fstl
out
sbb
rcrb
inc
adc
shll
mov
jne
out
mov
dec
mov
lock
or
shrb
jp
ja
mov
jnp
mov
or
push
mov
loope
jecxz
jge
push
loopne
js
jg
jmp
mov
xchg
mov
test
dec
mull
sbb
pop
cmpsl
clc
sbb
or
lahf
cmp
test
jmp
and
frstor
out
pause
ret
outsb
or
scas
add
jno
hlt
arpl
movsl
sub
in
pop
xchg
mov
mov
xchg
ret
jecxz
jno
inc
in
loope
push
in
inc
mov
pusha
jne
sti
mov
cs
cld
xor
mov
mov
pop
cmp
sub
sbb
pop
rolb
mov
repz
rcll
mul
cmpb
jbe
and
andl
in
into
adc
adc
subb
mov
pop
inc
push
ja
stc
call
insb
pop
pop
xor
push
mov
bound
add
mov
push
in
dec
pop
xchg
arpl
ja
std
push
iret
mov
xchg
dec
cmpsl
stos
mov
cltd
mov
aaa
jns
add
pop
mov
cltd
add
adc
ds
cwtl
and
sub
cmp
mov
cltd
jmp
pop
mov
cmp
jmp
divb
cmpb
fdiv
sbb
fwait
mov
xchg
repnz
fmuls
pop
insl
sub
lods
pushf
js
clc
loopne
mov
xor
pop
rcll
and
std
into
jnp
push
push
cmpsb
std
movsb
jne
and
push
push
mov
or
lahf
insl
imul
sub
adc
cmpl
ss
aaa
mov
xchg
pop
out
adc
sbb
push
shll
push
outsb
pushaw
andb
jbe
xchg
je
xchg
sub
loope
fs
cmp
xchg
adc
jno
popf
ljmp
fmull
jge
sbb
sbb
push
push
xchg
xor
mov
shll
lods
sbb
rcrb
xchg
mov
xor
andl
and
aam
in
in
repz
maskmovq
imull
dec
mov
je
mov
adc
cli
mov
and
mov
cmp
cwtl
out
mov
cmp
adc
push
jnp
pop
pushf
sbb
pop
jp
xor
push
out
xchg
outsb
jmp
jbe
add
sti
pop
jmp
xchg
adc
stos
inc
fistpll
and
cmp
adc
sbb
pop
out
cmp
or
fildll
mov
lods
popf
divl
jle
mov
icebp
ss
xchg
inc
jmp
dec
pop
mov
fwait
jb
jmp
pop
jns
ret
pop
popa
jl
mov
push
mov
mov
push
dec
jbe
aam
outsb
mov
pop
jbe
jecxz
mov
mov
aad
add
pop
mov
scas
fadd
add
and
std
jb
cld
scas
rcr
shl
mov
iret
ds
sub
jmp
xor
jns
push
pushf
aad
dec
aaa
inc
sub
stc
popf
sarl
add
or
and
ja
inc
jo
das
notl
sahf
ret
mov
imul
imul
xor
jo
pushf
stc
fsubl
mov
inc
adc
aas
bound
scas
das
fdivrp
leave
aaa
cwtl
mov
inc
inc
mov
ljmp
movsl
add
popf
sub
jns
jne
or
mov
adc
mov
in
jnp
cmp
ljmp
or
lods
repz
push
ljmp
cmp
mov
lret
pop
sbb
gs
bnd
dec
les
push
push
scas
sub
mov
mov
push
push
jle
jno
adc
nop
mov
hlt
adc
repz
cwtl
fldl
sar
sti
jne
mov
add
xor
add
adc
xchg
pop
icebp
repz
or
cmp
test
jmp
sub
sti
lcall
inc
cmp
inc
add
outsb
dec
repz
ret
ret
cmp
imul
faddp
cwtl
dec
pop
or
js
xchg
stos
jmp
jmp
sub
mov
xchg
nop
jne
xchg
aaa
dec
adc
ret
pop
mov
aam
popf
push
ja
push
fiadds
cld
push
or
sbb
jae
cmp
cmp
movsl
adc
aas
cmp
dec
shlb
cmp
jp
xor
outsl
mov
sbb
movsb
popl
xor
mov
shrl
pop
push
adc
xchg
pushf
out
and
mov
cmp
mov
mov
fdivs
fstps
jae
mov
out
dec
cmp
jbe
lods
sar
stos
out
arpl
xorl
repnz
dec
jmp
pop
test
outsb
mov
mov
cmp
mov
imul
mov
insb
rcrb
mulb
push
gs
sbb
rol
and
ss
das
in
fiaddl
cmp
ljmp
and
in
filds
cmp
mov
sbb
ljmp
lret
mov
int
pop
jnp
imul
and
nop
sbb
iret
int3
popa
mov
cmpsb
xchg
add
out
pushf
add
cli
movsl
dec
xor
in
popa
inc
ss
adc
xchg
aas
pop
pushf
stos
xchg
addl
dec
movups
push
mov
mov
fstpt
imul
fsubrs
pop
sbb
fwait
mov
stos
mov
nop
jae
nop
cmpsl
jecxz
das
xchg
pop
sub
aad
sarb
xor
pop
cwtl
les
fisttpl
mov
inc
push
mov
rolb
out
mov
xor
inc
int
stos
mov
xchg
stos
shll
and
cld
sub
andl
ja
mov
lods
jo
and
cmpsb
mov
jne
clc
jge
push
out
and
xchg
jae
add
out
push
sar
sbb
addr16
insb
mov
ficomps
divl
bswap
into
mov
mov
cli
fwait
pop
movsb
mov
jo
out
dec
jg
dec
xchg
push
jl
pop
add
call
sarl
in
sub
or
lock
pop
test
xor
xor
cld
push
incb
jno
mov
sti
rcl
xchg
mov
xchg
mov
out
les
inc
jmp
inc
data16
ficoms
xor
mov
inc
scas
mov
cli
jnp
loope
bound
mov
push
shrl
dec
and
ret
add
sub
cmp
inc
enter
faddl
mov
hlt
or
mov
pop
xchg
inc
dec
pusha
push
rorb
and
pop
lock
mov
adc
outsl
sub
jnp
xchg
add
add
cmp
xchg
or
mov
adc
test
sahf
inc
sbb
fwait
pop
pop
lret
mov
loope
jne
ds
xor
push
cmp
dec
dec
out
es
leave
pusha
or
pop
jo
clc
lods
mov
adc
add
sub
je
sbb
int3
loope
fs
push
repz
and
mov
jecxz
jae
in
es
pop
mov
sbb
add
cmpsl
mov
arpl
ret
outsb
dec
aad
xchg
jg
ds
fcmovb
je
jmp
or
or
pop
scas
lahf
sbb
jmp
scas
xchg
test
movsl
or
lock
pop
pusha
xchg
imul
ja
or
sbb
in
int
mov
mov
sbb
inc
jns
jne
cmc
cmp
push
je
add
popa
lcall
push
push
loopne
push
dec
sbb
jno
inc
mov
in
mov
movsl
inc
xor
lea
or
xor
jmp
scas
testb
aaa
sbb
lcall
mov
mov
stos
add
gs
out
jg
sub
sbb
jne
dec
mov
xor
inc
ds
outsl
lds
jno
mov
arpl
fwait
lods
inc
cmp
xchg
xor
mov
push
fimull
aaa
xchg
rcl
pop
or
push
scas
mov
inc
test
arpl
add
cmp
ret
out
insb
in
mov
inc
cmpsb
bound
mov
and
mov
call
test
push
pop
mov
orb
mov
xchg
rcrl
dec
mov
imul
sbb
adc
ja
shrl
xchg
enter
sti
sub
add
sbb
sbb
xchg
pop
mov
test
rcrl
jl
and
jecxz
lock
mov
scas
and
xchg
xchg
adc
push
incl
and
cmc
adc
fldl
rol
dec
add
xchg
ja,pt
popf
adc
aaa
adc
sbb
int
add
ffree
push
pop
cld
mov
push
ret
imul
sbb
mov
lods
inc
or
mov
arpl
sub
outsb
lods
or
cmp
aam
scas
mov
data16
mov
inc
and
daa
pushl
adc
pop
loopne
dec
cli
mov
clc
or
je
jbe
and
insb
xchg
jge
push
and
pop
adc
and
movsb
pop
iret
arpl
adc
popa
stc
xchg
inc
aaa
je
inc
call
jmp
cmpsb
fcmovnu
aas
mov
xchg
nop
mov
jle
clc
sub
cmpsl
pop
xor
enter
mov
les
jge
sbb
mov
test
loopne
in
stc
mov
popf
cmp
insb
dec
fwait
mov
pop
mov
mov
int3
rolb
lods
or
fwait
cmc
push
test
jp
push
sub
lret
int
pushf
popf
out
jmp
mov
pop
shr
fldl
popa
adc
jbe
dec
push
int
dec
hlt
pop
and
xchg
aaa
dec
into
je
xchg
repz
xchg
sbb
xchg
shll
pop
xchg
cmp
pushf
mov
jmp
es
sbb
dec
data16
lcall
nop
rolb
pop
or
fcmovnb
pop
adc
inc
loope
xchg
ficomps
andl
into
loopne
jnp
fwait
jge
ret
lods
xchg
sbb
push
push
xchg
mov
loope
mov
aam
or
jbe
aaa
mov
cmp
mov
scas
mov
mov
mov
push
stos
push
or
fdivrs
je
push
es
push
and
mov
mov
pop
pushf
int3
shrl
scas
xchg
test
xchg
insb
jg
mov
push
adc
and
jl
inc
pop
sub
mov
or
cmp
push
pushf
rolb
add
arpl
mov
push
jbe
mov
data16
push
inc
inc
arpl
loop
xor
cld
jmp
mov
aad
bound
push
sub
dec
hlt
aas
xor
add
lret
mov
inc
xchg
enter
mov
daa
repz
imul
std
mov
das
fisubs
dec
jmp
js
mov
out
popa
sbb
pushf
mov
rorb
iret
push
push
insl
in
shll
ror
bound
fdivrp
shr
scas
adc
jae
xchg
push
fcoml
pop
sbb
pop
or
movsb
pop
and
data16
inc
aaa
mov
mov
push
push
and
sbbl
xor
xchg
cwtl
mov
push
dec
mov
jnp
adc
pop
and
outsl
cmp
inc
addr16
inc
imul
ljmp
loop
mov
insl
mov
adc
jl
xchg
mov
setl
add
add
lret
jbe
int3
add
aas
nop
jg
out
in
cmp
sbb
ja
push
sbb
mov
hlt
adc
cmp
out
mov
lods
sub
in
fwait
rorb
cmpsb
mov
mov
in
stos
mov
or
push
and
jge
cld
and
xchg
shll
fs
fdivrl
cmp
lahf
jl
inc
mov
lods
movsl
shr
out
outsl
jecxz
imul
paddsw
add
icebp
movsl
pusha
xor
dec
popa
push
push
arpl
aad
into
xor
mov
ds
sub
in
fcoml
cli
jecxz
inc
ret
loope
lret
pop
mov
sahf
pop
xchg
mov
cmp
idivl
lcall
or
jae
xlat
mov
fneni(8087
ds
int3
xor
or
jge
test
icebp
cmp
xor
fidivs
sub
jne
adc
inc
add
push
xor
or
xchg
daa
mov
leave
mov
pop
pop
loopne
add
inc
adc
or
aas
or
push
xchg
imul
pop
cmpsl
sbb
das
fstpt
jae
lcall
add
mov
shl
jle
es
xchg
push
dec
dec
sbb
shlb
inc
mov
enter
jne
dec
inc
sub
aas
jae
cmp
ja
xor
leave
push
jbe
fwait
stos
out
cs
rorl
inc
adc
xor
lods
xchg
inc
sbb
loop
xchg
nop
push
pop
in
dec
lods
sub
adc
xlat
lcall
jno
int3
pushf
pushf
mov
cmp
sub
hlt
mov
pushf
xor
cltd
adc
sub
push
sub
into
or
jp
sbb
outsb
test
pop
mov
cld
sbb
in
mov
test
pop
push
lahf
movb
ret
and
xor
xor
push
dec
mov
daa
mov
fs
out
imul
cmp
lods
fdivrs
hlt
inc
dec
pop
stos
mov
idivl
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
push
out
xchg
int3
xor
inc
pop
jl
jnp
mov
ljmp
cwtl
ss
or
push
jmp
inc
ja
js
push
mov
call
jae
xor
sub
mov
roll
jmp
fldenv
and
push
movsl
cmp
or
sbb
enter
or
loopne
das
fildll
sbb
mov
sti
lahf
stc
adc
inc
mov
sub
ret
lret
and
cmp
out
mov
in
int
sbb
hlt
scas
xchg
repz
inc
jmp
push
cmc
clc
dec
mov
jne
sbb
and
mov
mov
rcrl
in
push
push
jns
out
mov
pop
enter
scas
mov
cmp
cmp
cmp
fidivs
mov
mov
mov
or
fnstsw
cmpb
orl
push
fidivrs
xorl
jno
adc
add
js
xlat
ss
cmc
fnsave
xor
pop
push
dec
cmp
cmp
and
lock
cmp
adc
push
lods
or
lea
and
mov
push
xor
or
and
mov
mov
xchg
mov
push
js
xor
mov
jle
xchg
shrb
pusha
inc
leave
into
mov
adc
dec
cmp
pushf
fldt
insl
push
out
push
in
xor
mov
iret
int
lret
xchg
mov
or
and
pushf
adc
gs
stos
xchg
in
ret
inc
xlat
lcall
iret
pushf
nop
sbb
sub
mov
pop
and
add
stos
inc
jae
jl
mov
test
ds
cltd
call
jne
and
icebp
stos
ficompl
cwtl
xorl
push
aaa
xorb
cmc
fs
jmp
sbbb
movsb
popa
xchg
decb
addr16
mov
pop
mov
inc
pop
pop
mov
xor
add
push
imul
cmpsb
mov
cmpsb
jp
push
adc
sub
adc
int
nop
popf
dec
push
sub
mov
sub
cmc
sub
fiaddl
pop
xchg
shrl
sub
pushf
add
cld
jbe
jle
pushf
arpl
pop
fmuls
add
lcall
cmp
loopne
mov
mov
push
jnp
pushf
insl
adc
into
daa
jae
imul
fucomp
insb
mov
sarb
sub
ficoms
add
cltd
fwait
stos
push
mov
mov
pusha
and
mov
nop
push
fdivs
int
or
mov
sbb
jns
clc
adcb
test
out
cmpsl
xchg
mov
xchg
into
push
jne
sbb
cs
test
push
dec
add
loopne
scas
jmp
sarb
hlt
jae
js
fcomip
xor
mov
push
fld
jl
sbb
or
cmpsb
ret
es
pushf
xchg
or
sub
or
mov
test
outsb
call
nop
and
pop
adc
hlt
sub
or
sbb
pop
and
add
mov
imul
jecxz
fiaddl
xlat
push
std
enter
int3
or
jb
and
jbe
sbb
xlat
fmul
cwtl
jbe
or
pushf
mov
fs
je
fst
xor
aaa
cmp
push
stos
inc
sbb
lock
shl
adc
push
cwtl
or
loop
inc
jmp
pop
adc
rclb
fucomp
das
in
mov
jg
mov
insb
mov
pop
lods
adc
mov
push
cmpsl
inc
sbb
add
inc
sbb
fstp
add
xchg
jg
xor
pop
cmp
pop
jo
cmp
push
jmp
push
cli
xchg
dec
imul
mov
loopne
dec
lret
lahf
imulb
jmp
add
fmul
fmul
popa
repz
cmp
incl
mov
mov
test
stos
ret
fildl
int
pop
lret
pusha
in
push
mov
movsb
xor
inc
cmp
call
and
cs
shl
fbld
sub
fisubrs
pop
sub
fs
ja
loope
cmpsb
popf
and
inc
test
pop
inc
sub
arpl
sub
sti
adc
cltd
pop
push
sub
mov
xchg
cli
inc
mov
stc
and
enter
cmp
xlat
lods
into
cmp
ret
or
pusha
in
mov
in
pop
lods
pop
xchg
xchg
dec
jg
jl
loopne
cld
jp
cmp
or
jmp
fwait
cmp
les
cld
jmp
cwtl
and
addb
mov
and
adc
adc
cwtl
dec
ss
jl
loopne
push
xchg
cmp
lret
push
xchg
adc
lock
jp
scas
sbb
add
lock
mov
adc
add
cmpxchg
in
pop
jmp
jmp
je
mov
gs
sub
push
dec
jmp
dec
hlt
jb
pop
and
jmp
jb
hlt
mov
jmp
sbb
mov
jg
cmp
or
mov
jecxz
repnz
mov
inc
ss
sub
stos
in
js
movsl
ljmp
ja
mov
test
xor
cmp
aaa
xchg
cs
lahf
xchg
das
lcall
fmuls
sub
and
xchg
mov
mov
add
lret
shlb
roll
int
push
std
jne
loopne
jg
xchg
add
hlt
mov
pop
fsubl
xchg
ja
pop
jecxz
jge
jno
sbb
pop
nop
jno
xorb
divb
lea
rcrl
pop
lret
push
xchg
mov
mov
pop
sub
mov
ja
pop
xor
cmp
mov
cli
push
jmp
in
rcrl
push
jle
sub
cmp
std
inc
sub
outsl
sbb
jmp
dec
add
add
rcl
inc
cld
mov
cmp
adc
int
js
popf
sbb
xor
mov
sbb
cwtl
adc
or
inc
outsb
xor
push
into
clc
sub
xor
jae
sub
xchg
sub
dec
jnp
jbe
xchg
testb
inc
xor
das
aas
cli
je
cmp
sub
jecxz
mov
call
pop
jne
mov
outsl
lahf
lock
mov
dec
mov
cmpb
add
jl
inc
insb
xor
xchg
aaa
movsl
out
stos
js
ficoml
mov
or
inc
gs
jge
shrb
inc
les
push
jmp
mov
push
sbbb
pop
lahf
aas
stos
sub
pop
fisubrl
push
pusha
add
outsl
xor
popf
cld
out
xchg
imul
xchg
scas
insl
xor
xchg
jb
loop
jo
push
inc
pusha
fmul
xor
inc
stc
cmc
push
mov
cmpsb
dec
push
mov
les
and
lods
sahf
mov
mov
fwait
add
and
inc
repnz
hlt
lea
popa
inc
adc
cmp
lods
mov
jnp
or
pop
call
roll
aaa
fsubr
or
aam
push
mov
sbb
xorb
lahf
es
jge
nop
aam
lods
das
push
pop
clc
push
insb
cmp
sub
cwtl
jne
pop
clc
adc
dec
dec
shlb
pop
ficoms
push
repz
mov
mov
jmp
jg
ljmp
mov
outsb
pop
push
mov
shrl
mov
int
mov
repz
adc
inc
xor
and
and
and
fnstenv
stos
cmp
dec
lret
jg
cmp
mov
mov
cld
call
sub
jbe
cmp
sahf
lods
adc
push
setns
sti
test
pop
shlb
sbb
pop
ret
lcall
cmp
rcll
add
pushf
out
inc
test
push
rorl
cwtl
les
adc
and
xor
jecxz
adc
xor
cmp
int3
sub
push
push
mov
or
andb
cli
inc
in
imul
pop
cmp
stos
add
movsb
rcrb
add
lea
mov
lods
mov
rorb
push
sub
clc
cmp
inc
lcall
jl
sbb
pop
in
stc
sub
je
cmc
popa
pop
andb
mov
ret
xor
jecxz
test
ss
mov
push
nop
mov
and
inc
sti
or
je
int3
std
call
add
cli
ret
std
sbb
inc
xchg
xchg
inc
ja
sub
mov
shrl
cli
addr16
daa
push
jne
mov
loope
test
pop
addl
and
mov
xor
in
movsl
lahf
std
in
lret
push
inc
push
cltd
add
dec
andb
out
inc
and
sbb
sbb
inc
jmp
or
mov
dec
mov
dec
inc
sbb
cmc
rcr
jo
push
lock
xor
push
push
mov
out
inc
repz
daa
in
lock
cli
cmc
pop
test
inc
cmp
mov
add
aas
or
jecxz
mov
bound
sub
jecxz
jae
ror
and
xor
out
sbb
mov
mov
xchg
es
jecxz
lods
and
out
dec
inc
jg
xor
push
sub
jle
pop
add
sub
test
dec
dec
pop
mov
out
loope
iret
bound
mov
fdivr
mov
and
cmpb
fstps
repz
rolb
adc
pop
test
cld
pushf
call
pop
mov
sti
mov
or
mov
shlb
scas
arpl
add
jp
xchg
lods
addl
testb
adc
aam
mov
dec
push
cwtl
iret
fidivl
push
andl
lods
xor
ds
pop
fdivrs
out
mov
stc
scas
mov
pushf
push
cmp
iret
cmp
dec
outsb
xor
pop
data16
test
xchg
add
call
push
mov
fcmovbe
ucomiss
mov
dec
nop
mov
nop
inc
mov
inc
sub
push
push
mov
sbb
decb
int3
pop
mov
fwait
inc
dec
cmc
sub
cwtl
fs
jle
daa
xchg
inc
dec
jmp
cmpl
pop
mov
mov
push
jb
jge
jle
outsl
fwait
lret
das
mov
jbe
adc
pop
jmp
cwtl
jmp
scas
icebp
dec
push
insb
mov
sub
dec
add
clc
adc
addr16
mov
movsl
adc
bound
lret
adc
mov
bnd
outsl
and
adc
scas
aam
cld
adc
xchg
out
push
jo
test
frstor
mov
mov
orl
adc
leave
ficoms
adc
push
movsb
in
inc
xor
fldenv
je
les
fnsave
xorl
popf
lods
lock
push
jmp
cmp
cmpsb
lret
push
roll
lock
test
gs
in
das
xchg
adc
out
push
sub
notb
fs
mov
inc
mov
out
std
call
mov
inc
adc
scas
jae
mov
loopne
lret
mov
fistpll
fnsave
fistps
imul
pop
push
aam
xor
int
jmp
mov
gs
fsubrl
push
dec
addl
inc
sbb
xor
dec
mov
mov
cs
and
add
adc
xchg
mov
jg
adc
sbb
or
sub
adc
push
inc
inc
mov
pop
orl
sub
push
out
insl
mov
push
push
nop
data16
repnz
pop
push
iret
push
lcall
in
xor
fs
sti
sbb
cmp
sti
jle
xlat
cltd
mov
and
rcrb
and
stos
adc
mov
in
out
xor
sub
jecxz
in
inc
orl
push
fistpll
jb
rcr
or
cmp
pop
addr16
cmpsl
dec
xchg
cmpsb
loope
dec
sarb
jne
or
dec
cmp
push
or
mov
jo
mov
jecxz
lcall
mov
xchg
pop
mov
scas
stc
int
and
sbb
cli
mov
fdivrp
jmp
repz
movsl
aam
xchg
and
jecxz
movsl
add
and
out
cmp
xchg
js
jle
push
lea
cmp
out
rcrb
mov
cli
pop
ret
mov
mov
imul
pushf
adc
dec
pop
pop
insl
pop
xor
inc
pusha
add
shl
sbb
xor
sub
cltd
lcall
into
inc
cltd
adc
or
enter
cmp
sub
or
mov
adc
xor
cmp
mov
into
cmp
mov
mov
inc
lahf
lods
inc
xor
sbb
mov
mov
and
cs
pushf
test
cmp
sbb
add
dec
pop
icebp
lock
dec
xchg
xchg
adc
xchg
int3
pop
cwtl
add
xor
stos
cs
cmpsb
xchg
divl
fwait
push
push
pop
xchg
fwait
popa
mov
movsl
outsb
jp
mov
das
push
lret
xchg
push
arpl
mov
into
or
cld
aad
pop
jg
popa
data16
testl
push
call
mov
mov
clc
jae
negl
jb
cld
mov
push
sbb
mov
sahf
jl
mov
and
push
dec
fistpl
sub
incl
ljmp
clc
jnp
cmp
inc
dec
xchg
jmp
repnz
ret
out
add
lods
add
shlb
jge
arpl
add
pop
rorb
into
mov
and
or
xchg
mov
out
mov
shl
sub
or
ds
add
or
adc
and
mov
jno
mov
pop
add
call
iret
test
notb
test
les
jbe
aad
or
lds
xor
push
repnz
jns
pop
stos
das
mov
push
aas
dec
jp
xchg
xchg
ljmp
pop
das
enter
mov
dec
fcoms
adc
xchg
adc
int
adc
sbb
shll
mov
test
hlt
jp
mov
or
mov
mov
cmpsb
ss
fcmovbe
xchg
lods
out
mov
jg
not
push
xor
das
dec
adc
mov
scas
sub
and
mov
cmp
pop
std
ja
xchg
addr16
adc
lock
sbb
jb
dec
cmp
cmp
jo
adc
cltd
movsl
idivl
test
loopne
shrw
xor
lret
test
pop
add
cmp
jecxz
adcb
ficoms
dec
leave
int
jno
inc
cmp
sti
pushf
lcall
cli
mov
push
incb
stc
mov
inc
repz
mov
lods
mov
pusha
ja
ljmp
sub
jmp
mov
ret
ss
pop
jbe
and
fs
test
loop
xchg
cmpsb
xor
mov
and
jo
add
loope
xchg
sbb
int
test
rcrl
dec
jg
out
pop
inc
movl
fisubs
ja
xor
sbb
loop
inc
adc
dec
cmc
xchg
pop
pop
push
sbb
fimull
xchg
out
fwait
movsl
push
enter
fcmovnbe
dec
loop
inc
pop
add
jle
adc
xor
loopne
xchg
ja
fcmovnu
lods
xlat
and
in
adc
mulb
mov
sarb
outsb
sub
stc
mov
push
fs
sbb
adc
ja
rorl
jmp
push
lret
jl
imul
jg
test
call
lods
int3
sbb
sti
scas
inc
pop
inc
je
dec
loopne
test
les
mov
push
mov
pop
cmp
add
repz
or
lret
out
out
jp
jp
lahf
mov
jb
cmp
movsb
stos
leave
push
pop
dec
cmp
mov
mov
fisubs
cmpsb
scas
mov
mov
mov
push
xor
nop
das
push
stos
fcompl
or
xchg
add
das
cmpsl
loopne
xchg
fcoms
fs
or
in
cs
add
cmp
stos
and
cmpsl
push
push
inc
pusha
hlt
cwtl
sub
mov
add
stc
push
mov
xchg
cwtl
dec
mov
sub
cli
xchg
call
mov
test
and
dec
rorl
mov
aas
push
or
inc
cmpsb
mov
mov
mov
jle
sbb
jge
popf
and
scas
jge
lcall
adc
mov
in
and
loope
jae
and
aam
pop
pop
mov
push
add
and
idiv
lahf
add
lds
mov
mov
jno
xor
cli
jo
sbb
imul
negb
dec
fisubrl
insb
push
shrb
push
adc
into
imul
cmc
inc
dec
sub
lods
insb
jmp
mov
cmp
dec
mov
jbe
sbb
xor
fsubr
xor
mov
mov
ret
fdivrp
popl
dec
adc
inc
or
cld
and
popf
jns
cwtl
push
inc
into
imul
ret
fnsave
or
scas
inc
nop
movsl
lods
inc
popf
addr16
into
ja
jmp
mov
jne
sbb
add
hlt
adc
int3
das
imul
addr16
xor
out
mov
or
rcrl
and
lods
lods
cmp
testb
adc
jno
mov
loop
sti
test
pusha
insb
aam
xchg
jbe
ja
cli
adc
xchg
sub
sub
imul
fldcw
pop
iret
ss
mov
sbb
jae
lret
bound
out
addr16
cwtl
adc
and
inc
js
mov
xor
inc
shufps
sbbl
sub
xchg
inc
pop
out
ja
rclb
jbe
push
outsb
nop
sub
lods
lods
idivl
cli
fdiv
inc
aam
stos
jnp
xchg
xchg
or
ret
sub
or
inc
dec
and
sbb
xlat
xor
fcomps
icebp
inc
push
out
mov
sub
roll
mov
cmp
pop
stc
ja
sahf
aam
sbb
pop
dec
cld
iret
pop
data16
xchg
dec
jnp
sahf
push
fidivrs
xchg
mov
stos
sbb
pop
xor
xchg
sub
cld
sbb
scas
jbe
std
adc
add
fwait
out
sbb
bsf
cwtl
sbb
sub
push
test
add
fisubrs
sbb
sbb
int3
aaa
int
and
xor
pop
rolb
fimuls
mov
pop
add
pop
xor
imul
ret
adc
insl
idiv
in
mov
out
sub
in
dec
cmp
or
adc
jmp
jnp
int3
push
scas
sbb
pusha
fs
push
rorb
test
mov
stos
xor
pop
add
sub
mov
jl
mov
push
stc
scas
aam
call
mov
stos
test
cmp
loop
insl
mov
mov
fsubrl
stc
sub
pop
push
test
leave
rorl
jp
adc
fldcw
mov
push
popa
jmp
fstl
sub
andl
aam
pop
push
adc
das
rclb
jo
mov
mov
mov
lods
mov
xchg
adcb
dec
sbb
mov
cli
pop
stc
xchg
xchg
xchg
repz
add
cmc
xchg
or
xchg
fcomps
pop
in
jle
lock
shlb
repz
call
loope
mov
jp
pop
xchg
and
push
mov
daa
addr16
fdivrp
into
mov
dec
divb
jp
arpl
test
lcall
leave
cld
imul
mov
rcrb
jnp
loop
orl
stos
inc
aas
pop
js
mov
out
in
xchg
mov
adc
outsl
dec
push
shll
sub
xor
or
mov
sub
into
lea
pop
xor
icebp
push
es
sbb
mov
int3
sbb
sub
in
xor
cmp
pop
sti
jbe
inc
add
lds
outsl
cs
sub
sbb
mov
xchg
stos
or
and
dec
in
xor
mov
or
subl
lds
lds
lahf
stos
fdivr
filds
sti
leave
pop
bound
pop
jg
add
orb
jmp
pop
pop
mov
aas
shll
or
sub
fwait
xchg
or
lret
std
cld
movsb
adc
data16
hlt
xchg
mov
cld
jno
inc
ret
outsl
mov
je
push
mov
cmp
jns
movsl
pop
dec
jp
cmpsb
lds
and
mov
jge
or
cmpl
mov
xchg
lcall
cmpsl
sbb
mov
sahf
out
cmpsb
popf
aaa
movsl
gs
jecxz
movsl
int3
mov
cld
mov
jne
push
jle
cmc
lods
cmpl
pushf
rcll
inc
rorl
cmc
dec
cmp
popf
mov
int
or
pop
add
shl
jnp
sahf
dec
pop
adc
arpl
cmovbe
xor
es
lock
jg
data16
sbb
mov
jne
jbe
hlt
push
outsl
jmp
fnstenv
xchg
mov
mov
jne
out
ror
lret
loope
out
stc
cwtl
ljmp
rcr
mov
test
add
sub
ss
bound
mov
mov
shr
dec
aad
lods
enter
hlt
sti
sahf
adc
sbb
icebp
into
sbb
jae
push
arpl
mov
repz
pusha
add
lods
mov
lods
in
xor
lret
push
sbb
cmpsl
xor
inc
mov
rclb
jge
lds
pop
imul
jb
mov
shll
roll
sahf
push
shl
call
pop
mov
mov
dec
pop
addr16
add
lods
mov
and
fadds
sbb
pop
adc
adc
inc
dec
pop
sarl
in
stos
mov
daa
push
ret
aam
add
cmp
pushf
aaa
mov
and
cmp
nop
vmovd
add
dec
add
mov
cmp
cmp
outsb
sbb
mov
jns
scas
push
jae
adc
push
test
push
fldenv
arpl
loopne
out
out
push
int3
imul
mov
movl
lods
mov
nop
push
fwait
jge
pop
rcll
sub
jnp
repz
fs
sbb
xlat
fs
inc
call
jo
mov
and
sti
cmpsb
aad
fistpl
mov
sbb
scas
scas
shrb
adc
divl
cmpsb
sbb
xlat
icebp
nop
cmpsb
outsl
ret
add
mov
jns
fsubl
ficompl
aas
xchg
add
cmp
or
inc
sbb
call
aam
inc
stc
inc
xorb
shrl
addb
xor
push
cmp
rcl
pop
shlb
ret
rorl
push
cmc
js
aad
ljmp
aaa
stos
cmp
pop
cmp
bound
sbb
insl
mov
sub
test
add
cwtl
or
xchg
loop
iret
xchg
loope
cmpsl
dec
stos
pop
imul
add
or
or
pop
cmpsl
into
in
sahf
popa
push
push
imul
shll
jge
test
div
adc
clc
inc
pop
or
stos
ficompl
scas
xchg
in
add
and
inc
pop
test
cmc
fbstp
xchg
fistpll
das
jb
shll
push
and
aam
push
fs
ljmp
jae
and
mov
pop
mov
mov
mov
adc
and
jmp
xchg
add
mov
out
cmp
and
or
hlt
int3
sbb
mov
pop
mov
ret
xor
stc
cmp
xor
call
imul
scas
rcr
mov
aam
xlat
add
rorb
ficompl
lahf
test
xchg
cli
lret
stc
arpl
pushf
sbb
ljmp
js
xlat
dec
ficomps
and
push
fisubrl
iret
dec
test
iret
xchg
pop
aam
push
pmulhw
jb
in
ds
mov
dec
fists
stos
ds
out
mov
push
inc
scas
rolb
xchg
test
jbe
jl
test
aas
jle
pop
hlt
outsb
push
or
les
dec
rcrb
push
pushf
adc
mov
leave
jae
push
mov
vrsqrtss
push
dec
mov
fcmove
sbb
or
out
xlat
fcmovne
fadd
iret
push
cmpl
cli
xchg
sahf
lahf
jae
mov
push
mov
cmp
xchg
pushf
ss
lods
aas
sbb
lods
push
loop
add
add
add
cs
jnp
scas
ljmp
xor
mov
inc
sub
push
cli
push
push
mov
mov
loopne
sub
adc
daa
in
arpl
hlt
xchg
imul
fwait
push
sahf
jge
cmp
mov
jmp
lret
pop
mov
lret
mov
pop
repnz
out
mov
pop
fdivrl
les
push
dec
xor
push
cmp
ljmp
dec
cwtl
mov
push
or
mov
xlat
fidivrs
inc
xorl
outsb
repnz
dec
sti
lahf
add
jno
pop
into
ljmp
mov
in
pop
push
cmc
sbb
sub
xchg
outsb
jge
add
mov
cmp
and
js
lcall
push
loop
sbb
mov
rep
gs
dec
divb
inc
in
bound
imul
imull
jl
cmp
xchg
push
jo
xor
out
fsubl
push
push
xorl
push
or
mov
sub
inc
imul
jl
push
sti
cmpsl
cmp
dec
pop
pop
in
scas
outsl
cmp
das
bnd
mov
pushl
inc
in
add
jae
dec
outsb
cmp
stc
fnstenv
xchg
inc
pop
mov
stos
adc
nop
sub
fwait
lahf
pusha
push
jns
jmp
mov
jo
in
add
aad
insb
jle
mov
fdivs
adc
lods
test
pusha
inc
mull
outsb
shlb
mov
or
jno
out
jl
jle
out
mov
sbb
int
adc
mov
push
in
and
pop
adc
mov
add
mov
sub
jle
and
jo
push
out
in
xor
out
xlat
sub
hlt
pop
adc
sbb
and
mov
lret
sub
xlat
cmpsb
scas
test
lret
lods
popf
stc
divl
sub
dec
lahf
cmpsb
and
fsubr
adc
mov
sub
cmpsl
jno
jne
xchg
leave
dec
popa
shrb
cmp
mov
xchg
and
lcall
out
icebp
dec
outsl
aaa
std
pop
out
inc
push
out
lcall
aas
mov
push
cs
lcall
ljmp
jl
jl
negb
sarb
mov
push
int
ss
and
push
push
pop
hlt
int3
sarl
test
dec
dec
push
js
mov
adc
in
in
xor
daa
hlt
fbld
mov
out
lret
mov
sbb
sti
xchg
lahf
testb
mov
dec
imul
inc
fstl
xchg
in
lock
sarb
popf
in
inc
push
mov
cltd
sub
push
inc
push
sbb
lcall
fnsave
ja
mov
fildll
test
push
es
cmp
aaa
cmp
cmp
mov
mov
mov
push
movsb
or
or
lea
cmp
mov
mov
push
cmp
scas
xchg
and
push
leave
hlt
sub
rorl
inc
arpl
pop
dec
xchg
outsb
cmp
hlt
xor
push
shrl
jb
jae
xchg
pop
and
aad
dec
jmp
and
pop
loope
fdivrs
cmp
loop
push
push
add
mov
ffreep
cmp
xchg
mov
push
dec
shrb
out
imul
nop
add
mov
xlat
push
and
addr16
inc
sbb
lods
mov
inc
add
cld
ds
in
sub
mov
inc
shr
fidivrs
and
add
or
roll
mov
les
mov
pop
insl
pop
mov
mov
dec
inc
test
mov
pop
xor
xchg
insl
mov
mov
enter
mov
jnp
cmc
push
xlat
ret
xchg
negb
cmp
cmp
xchg
ret
popl
jg
push
jns
mov
test
inc
roll
rolb
divl
mov
xor
aad
ret
xchg
hlt
pop
sub
inc
scas
dec
pushf
addr16
fcompl
test
bound
lahf
mov
icebp
jns
stos
iret
sub
std
or
in
leave
xchg
test
mov
mov
sub
jl
fldt
test
arpl
out
push
sub
cld
sub
add
push
mov
cmp
dec
shll
out
mov
es
mov
sub
adc
pop
dec
leave
lret
xlat
lcall
mov
sub
xor
lahf
je
iret
pushf
pop
aam
cli
pop
out
jmp
inc
mov
push
xchg
jns
jae
mov
push
adc
shl
lea
inc
mov
xor
mov
clc
adc
jecxz
ret
aad
and
fstps
sub
in
cld
cmc
dec
push
cwtl
imul
push
sbb
arpl
insb
pop
rclb
dec
int
pop
int3
mov
int
mov
idivl
dec
sbbl
js
fwait
sub
sbb
cmp
scas
cmc
sbbl
notl
fcom
shr
call
mov
push
mov
mov
push
mov
and
push
repnz
pop
fwait
aas
stos
mov
es
inc
clc
pop
fildll
cld
mov
inc
lods
inc
sub
aad
pop
cld
sarb
xchg
mov
and
sub
push
sahf
push
out
ljmp
cmp
daa
cvtps2pd
pop
inc
inc
inc
mov
mov
ret
push
xor
cmp
mov
xlat
int
or
pop
mov
add
iret
scas
cmc
sub
and
in
ja
mov
xchg
inc
add
xor
repnz
out
je
shll
push
dec
out
leave
fmuls
aas
cs
imull
sub
fstpt
xchg
hlt
adc
mov
pop
insb
ficompl
loopne
sub
or
add
leave
pop
jb
xchg
dec
fst
das
je
scas
addr16
push
lret
or
push
lds
test
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
push
nop
adc
inc
pop
jl
lock
mov
push
iret
push
xchg
mov
xor
into
xchg
xchg
xchg
xchg
cli
shlb
sbb
movsl
mov
iret
push
test
int
jnp
pop
ror
decb
into
std
aam
push
inc
dec
js
mov
out
popa
xor
xor
daa
lods
xchg
xor
mov
hlt
ja
or
fidivl
adc
or
movsb
fadds
push
ja
push
inc
jp
xchg
push
and
cmp
aad
or
mov
jbe
je
dec
lods
stc
movsl
dec
fildll
dec
push
sbb
jns
push
fdivs
dec
adc
mov
xchg
cmp
fsubr
test
icebp
cmp
mov
nop
dec
arpl
xlat
mov
outsl
stos
sub
rolb
inc
stos
dec
or
adc
pop
adc
popf
sarb
popa
movsl
push
frstor
cmp
push
fs
sub
insl
dec
imul
or
out
lret
mov
ljmp
or
sahf
xchg
fmull
aas
xor
inc
invd
fcom
xchg
pop
jne
mov
adc
fmull
push
fisubs
out
ds
sbb
int
and
out
shll
xor
cmp
sar
inc
shll
mov
in
add
in
mov
imul
xor
or
loope
lea
mov
in
mov
lret
jmp
xlat
std
int
jbe
in
movsl
aam
sbb
lods
pushf
pop
inc
adc
cmpsl
cltd
xchg
lods
fcoml
xchg
sub
add
pop
rcr
adc
mov
sub
sarl
movsb
mov
sarl
and
pop
mov
lock
scas
into
mov
mov
and
fadd
mov
popa
fidivrl
add
addr16
subl
call
xchg
out
cmp
push
pushf
fidivrl
adcl
or
push
test
dec
in
int3
sbb
scas
cli
jmp
mov
jae
wbinvd
adc
and
adc
movsl
mov
cwtl
or
mov
scas
stos
sbb
fs
pop
add
cmp
inc
adcb
sbb
jae
mov
inc
push
pusha
ljmp
js
xchg
int3
vphadduwq
mov
adc
repz
push
cmpsl
sarb
fwait
mov
mov
cmp
scas
adc
dec
in
es
mov
mov
popf
scas
adc
ficoml
xchg
inc
cmp
jo
outsb
mov
pop
adc
clc
cmp
and
fsubs
fmulp
sub
js
fisttpll
pop
icebp
icebp
and
sti
int3
mov
jg
out
cli
xor
push
or
shlb
push
cmpsl
jmp
sbb
leave
xlat
xchg
mov
fstp
mov
fadds
adc
lahf
pop
xlat
lret
daa
jb
jl
outsb
loope
ret
cmc
xchg
sahf
lods
cmpb
cmp
dec
cmp
int3
mov
push
cmpb
inc
mov
rolb
jbe
ss
push
divl
lahf
movsb
cmp
ret
mov
ja
fdivrs
push
shl
cmp
bound
daa
inc
clc
leave
push
add
dec
inc
out
nop
jns
mov
sbb
inc
divl
repz
mov
fcoml
jmp
mov
out
inc
dec
adc
out
int3
insl
sbb
les
leave
popa
mov
imul
mov
in
dec
lock
iret
and
clc
sub
scas
test
daa
pushf
aam
testl
adc
test
sbb
inc
ret
mov
int
inc
cs
push
andb
cmp
jne
in
pop
loopne
xchg
mov
arpl
test
out
push
mov
lret
sbb
push
cwtl
xchg
or
push
or
js
push
addr16
add
inc
pop
cmc
pop
shr
inc
inc
aad
pop
add
arpl
jge
and
loope
xchg
test
test
push
in
mov
fadd
cs
mov
xor
test
mov
pop
xchg
mov
sub
mov
lcall
pop
int3
inc
dec
cmpsb
inc
jo
jg
aaa
movb
mov
push
jne
call
cmpsb
ljmp
inc
mov
mov
inc
or
and
sub
aaa
inc
cltd
fldt
idivb
jae
xorl
stos
test
dec
adc
and
jns
scas
lcall
ja
xor
in
pushf
lods
push
xchg
lds
rorb
bound
inc
fists
inc
rolb
fcmovu
push
dec
mov
mov
or
sbb
into
lret
clc
xor
stos
and
je
loopne
jp
or
sbb
push
fnstenv
mov
aad
stc
sbb
jl
mov
sbb
outsl
inc
js
mov
xchg
aam
mov
push
push
lock
xchg
xor
pop
and
pop
popf
lcall
jb
adc
push
jle
out
sbb
or
jle
xor
roll
xchg
cmp
mov
adc
xchg
or
out
andb
sbb
add
push
xor
jnp
sbb
sub
jnp
scas
out
les
in
insb
mov
movsb
bound
jge
ljmp
lahf
mov
adc
xchg
sbb
push
popa
cli
inc
inc
ss
cli
arpl
test
je
sbb
pop
or
lods
add
out
cmpsb
cmp
dec
fucomi
and
adc
jecxz
mov
icebp
xchg
ficoms
ds
cmpsl
or
pop
mov
call
jae
mov
fcompl
adc
sub
test
sub
movsl
jnp
add
movsb
movsb
xlat
and
fs
decb
xchg
push
out
xlat
enter
int3
stos
mov
aam
pop
mov
dec
sub
in
ret
aam
test
and
adc
lods
lret
mov
repnz
mov
pop
aaa
sub
cmp
loope
outsb
sub
dec
cmp
push
into
imul
fwait
leave
nop
pop
jno
lret
xchg
cmc
push
cmp
mov
xchg
fcmovne
div
inc
or
in
aaa
xorl
insb
or
push
rep
das
mov
shlb
jg
and
xchg
push
xchg
imul
mov
and
cwtl
sub
std
dec
outsl
ljmp
fdivr
xor
cmpsb
adc
xor
adc
out
push
sub
mov
neg
xlat
ja
movb
cmp
xchg
out
shlb
into
and
cmpsb
les
and
mov
repnz
sub
or
push
test
jmp
out
jne
jmp
notl
fucom
in
push
add
out
fldenv
lea
lock
add
pop
and
lods
add
and
cs
leave
xchg
xchg
inc
sub
jmp
mov
push
sbb
repz
test
sahf
mov
hlt
ffree
cmpl
xor
outsb
loope
insb
fdivrs
push
imul
mov
jb
mov
out
lret
pop
cltd
fnstenv
xorb
rcrb
xlat
aam
cltd
cmc
inc
sub
sarb
stos
jns
mov
adc
imul
daa
xchg
inc
jle
fstps
mov
jmp
dec
sbb
jp
and
aaa
mov
lods
add
push
in
cs
cmp
stos
ret
loopne
jbe
cmp
popa
in
xor
or
inc
adc
loope
scas
lahf
sub
push
popaw
das
xorb
aaa
xor
mov
or
push
jbe
cmp
das
or
xorb
std
add
dec
aaa
mov
push
dec
adc
aas
push
inc
andb
xchg
inc
push
shlb
cwtl
call
addr16
loop
and
lahf
incl
dec
rcrb
mov
int
pop
jo
mov
out
xlat
xchg
sbb
inc
adcl
test
sub
popa
cmp
sbb
dec
mov
pop
add
adc
es
or
mov
lret
xor
jp
not
adc
adc
and
mov
xchg
and
sub
test
and
pop
mov
and
xor
push
and
dec
repz
popa
popa
xchg
dec
loop
repnz
stos
stos
push
xor
movsb
and
push
mov
sub
jo
shl
in
or
xor
in
popl
cmp
xlat
imul
ds
in
insb
jmp
inc
or
sub
roll
movsb
sahf
push
sbb
pop
rcr
pop
aas
xor
insl
xchg
leave
fcmovne
jne
aad
push
lahf
not
xchg
lea
add
jecxz
mov
cmp
popa
arpl
test
pop
cmp
xor
sub
dec
arpl
mov
mov
sarb
in
dec
push
loop
jbe
fdivrp
pop
int3
outsb
ss
mov
mov
inc
add
in
mov
jg
sahf
inc
pop
iret
in
sub
mov
cs
mov
ds
xorb
jb
arpl
js
mov
adc
mov
fwait
incb
sub
out
xchg
mov
lret
sub
rcl
add
jmp
cwtl
insb
call
daa
sbbb
loop
sbb
mov
rclb
jnp
lods
xchg
cmp
xchg
data16
jo
lods
push
test
and
iret
jle
mov
scas
xchg
pop
inc
xchg
jae
pop
add
sahf
mov
xorl
pop
mov
pop
or
mov
cmp
imulb
or
icebp
cmp
xchg
mov
das
jg
mov
sbb
pop
jge
xchg
lods
aaa
mul
push
xor
push
lock
data16
xchg
lds
dec
test
insb
add
shr
mov
add
stos
jnp
dec
out
ret
sub
lret
outsb
xchg
in
push
psadbw
scas
sbb
pop
mov
rcrl
mov
mov
inc
cmp
xchg
cmp
enter
add
add
cmp
fsts
loope
mov
aam
movsb
push
jge
jae
xrelease
cwtl
stos
and
es
xchg
mov
pop
pusha
adc
push
mov
pop
mov
mov
mov
and
ljmp
dec
cmc
loop
cmp
int
inc
push
in
push
ret
jns
sbb
or
add
stc
jns
xor
push
sti
jbe
cwtl
cmpsb
push
test
stos
nop
push
lea
rolb
add
cmp
inc
inc
ret
and
das
fwait
xchg
mov
outsb
xchg
mov
aas
ljmp
jge
inc
xor
fisubs
in
jbe
or
or
push
jno
pop
sbb
or
flds
test
mov
mov
xchg
rclb
jne
or
cli
pop
inc
xor
push
sub
das
jp
arpl
xchg
mov
mov
push
stos
lahf
fistpll
mov
sub
data16
pop
insl
mov
mov
add
iret
mov
push
je
aaa
mov
pop
imul
xchg
insb
mov
inc
out
cli
jnp
int
inc
jmp
sbb
xor
lock
popa
lods
jnp
rorb
xor
mov
lret
or
mov
data16
popa
sub
mov
scas
mov
out
andl
jns
mov
jmp
pop
adcl
dec
dec
adcl
add
ja
dec
cmp
movl
push
push
cmc
test
pop
loope
fsubrl
pop
in
mov
jp
adc
sbb
das
call
in
adc
sub
jp
ja
cmc
pop
sbb
inc
clc
xchg
or
cli
inc
pop
or
into
leave
sahf
imul
or
ss
inc
lcall
pop
jne
pop
add
or
jae
jo
cli
insb
or
fbld
cmp
ret
scas
fldenv
loop
mov
fidivl
jno
loop
cli
adc
daa
addr16
sub
es
je
push
mov
sbb
sbb
stos
dec
sub
popf
mov
dec
push
mov
gs
mov
rcrl
stc
adc
lcall
jl
adc
lods
push
mov
dec
and
popa
call
add
loope
mov
sub
sub
cmp
add
ret
adc
jns,pt
ds
pop
mov
adc
sbb
mov
pop
lret
mov
pop
loopne
notl
punpcklbw
xchg
jb
pop
add
adc
hlt
push
fldl
inc
daa
xchg
ljmp
sub
repz
push
aad
xchg
push
and
or
inc
push
pop
lret
or
sbb
mov
or
les
pop
push
inc
xor
lcall
or
cmp
inc
sbb
iret
stos
push
or
sbb
jmp
stc
sub
lea
push
inc
loop
decl
mov
mov
push
loope
mov
pop
jp
and
repnz
shld
sub
iret
mov
pop
cmp
icebp
test
mov
push
mov
adc
dec
mov
mov
mov
sbb
push
sub
movsb
dec
mov
mov
popa
xchg
inc
xchg
sbb
sbb
lods
adc
inc
sub
pop
pusha
mov
mov
clc
mov
imul
and
jl
xchg
arpl
push
test
push
out
inc
sahf
fwait
sub
mov
dec
lea
adc
jl
jp
mov
or
cli
mov
mov
dec
loop
and
addr16
pop
out
icebp
sbb
loope
push
xchg
dec
inc
jp
pop
push
add
pop
cli
push
xor
mov
lret
fiadds
push
lds
mov
jmp
xchg
sbb
ret
sub
cmp
xchg
xchg
addb
loopne
lods
and
aam
jp
cltd
imulb
fdivrs
clc
clc
inc
jecxz
rcr
sbb
cs
mov
adc
add
incb
aas
mov
cmp
fucomp
stc
scas
fists
clc
lods
stos
addr16
ret
mov
mov
jmp
rcr
or
fdivr
leave
jbe
push
faddl
sbb
ret
jb
or
sbb
mov
lea
jle
pop
cmp
jnp
loope
arpl
dec
loop
mov
xor
xor
insb
xor
idivb
loop
add
jl
jno
mov
iret
and
mov
dec
jp
lds
mov
stc
lds
cmp
enter
mov
lcall
cli
sub
adcb
dec
dec
pop
jge
adc
js
inc
pop
mov
loop
xor
and
inc
int3
sub
jne
ljmp
lds
xchg
push
out
mov
stos
stos
es
dec
pop
xchg
pusha
js
dec
xor
daa
sub
push
imul
sub
mov
cli
ds
sub
push
test
sub
scas
inc
hlt
jns
loop
dec
insb
mov
shl
pop
cmp
aad
sahf
int
notl
push
gs
xchg
bound
ds
cmp
jl
sbb
pop
adc
sub
das
out
jne
popf
push
xchg
lods
mov
fsubp
and
sbb
enter
pushf
jnp
popa
push
mov
test
and
ljmp
mov
push
cmpsb
or
sub
jecxz
xor
test
daa
jmp
mov
ss
loopne
cmp
lods
dec
aad
cmc
add
mov
mov
lret
cwtl
cmp
push
pop
mov
int
xchg
jmp
pop
xchg
mov
sub
xor
xchg
xchg
mov
push
jno
dec
pop
into
xor
push
and
push
xchg
sbb
into
inc
cmovno
daa
add
pop
cwtl
in
push
adc
out
test
popf
inc
mov
and
pop
clc
jg
lds
adc
cmpsb
adcb
inc
jl
jle
ds
inc
push
mov
or
xor
xchg
fldenv
lods
icebp
mov
clc
je
inc
xchg
and
std
and
rol
iret
sbb
pop
rol
mov
mov
dec
fwait
xorl
jb
sub
and
mov
stos
mov
sbb
cmc
mov
incb
dec
mov
sub
mov
dec
push
xor
subl
pop
out
ret
fldl
cli
sbb
xor
fistpl
notl
jl
sub
xchg
mov
add
mov
add
push
mov
mov
or
dec
sub
mov
add
fmuls
and
cmp
lods
pushf
enter
push
sbb
push
and
xrelease
clc
ds
loope
mov
cwtl
pusha
adc
loope
dec
stos
fbld
jnp
scas
xchg
enter
dec
mov
inc
pop
mov
pushf
test
sub
lock
jne
imul
mov
pop
dec
test
add
cmp
dec
insb
sub
js
xchg
icebp
push
and
shll
push
jp
xchg
fsubs
int3
mov
ret
jns
jno
cmpsb
inc
test
andl
lea
jae
lods
cmp
adc
daa
pop
dec
pop
add
pop
mov
pushw
popa
shll
pop
pusha
push
hlt
or
repnz
out
dec
dec
int3
jge
jb
addr16
mov
lds
mov
or
pushf
adc
lcall
call
fimuls
jle
adc
ss
cltd
out
push
inc
out
pushl
stos
repz
or
fldl
ja
fucomi
pushf
pop
scas
fdivrl
lret
sub
lods
cmp
cmpsl
and
movsl
fwait
sbb
dec
insl
outsl
aad
in
jnp
mov
and
jmp
sar
cmp
xor
adc
adc
sub
pop
addr16
call
cli
cli
js
bound
ret
notb
dec
jo
push
push
or
inc
jl
lea
jg
xor
xchg
push
je
push
cmp
js
jae
or
sub
jp
jno
cmp
xchg
mov
mov
pusha
jb
dec
xor
aam
jmp
mov
or
mov
mov
pop
in
sbbl
add
cltd
mov
push
adc
out
je
and
and
push
mov
insb
sbb
push
lods
cmp
outsl
bound
push
int3
mov
mov
jg
push
pop
push
mov
fmull
xor
mov
cmp
out
xchg
push
and
sub
push
loope
cli
int3
scas
or
inc
adc
pop
fimuls
pop
stos
mov
jecxz
inc
lret
in
ja
in
jmp
or
push
pushf
mov
jp
cmp
add
pop
test
les
idiv
push
ds
mov
loope
push
push
data16
mov
mov
fs
insb
mov
lret
or
mov
push
or
into
test
sti
loopne
fldl2t
cltd
mov
and
and
enter
xchg
les
movsb
sbb
adc
stos
xchg
jl
icebp
stos
adc
mov
daa
cmpsl
cltd
stc
push
mov
cld
das
cmp
sub
ds
jne
cltd
in
jne
sahf
jl
inc
adc
cmp
xchg
je
sub
jg
push
push
mov
or
fwait
adc
sbb
push
test
xor
dec
insb
ljmp
fs
mov
jle
ds
add
inc
cmp
mov
cmpsb
test
push
ja
imul
or
repz
adc
jb
xor
jge
roll
movsb
add
test
push
icebp
inc
dec
outsl
sub
aam
int
jmp
jecxz
pop
adc
add
orl
fsts
mov
cmpb
repnz
clc
xor
jae
jb
add
jmp
mov
int
sub
sub
mov
push
aam
xchg
add
stos
movsl
push
cltd
jecxz
testb
js
mov
dec
jno
dec
pop
popa
arpl
rcr
leave
nop
and
stc
mov
mov
shr
or
sub
or
les
insb
jecxz
repz
cmc
jecxz
and
repz
fldt
fdivrl
and
cmc
push
jle
sub
pop
cmp
jle
iret
push
aad
nop
popa
jmp
pop
mov
fstpt
lds
ljmp
repnz
or
out
jne
pmovmskb
jb
loop
scas
shll
outsb
das
inc
sub
enter
dec
jecxz
xchg
cmp
outsl
mov
lahf
rorb
sahf
cmp
or
mov
cwtl
or
and
sbb
fidivrl
dec
xchg
xchg
cld
adc
jge
inc
popf
sub
jno
out
aaa
cmp
mov
in
cmp
cmpb
jecxz
jg
nop
add
mov
jae
sbb
sbb
jo
es
sahf
sbb
fcoms
cmpsl
in
cmp
cs
mov
pop
xor
sahf
das
mov
in
les
adc
test
pop
xor
loopne
pop
lret
sbb
imul
adc
out
test
test
insl
mov
imul
out
push
push
or
dec
fidivl
or
dec
test
repnz
dec
aaa
mov
lea
rorb
or
add
fistpl
out
cli
jbe
sub
xchg
scas
sbb
fisubrl
es
int
lahf
jmp
ss
inc
in
in
cltd
ja
jo
pop
jae
xchg
scas
or
mov
add
adc
int3
and
fiadds
push
pop
leave
test
into
pushf
dec
out
movsb
push
jl
jg
inc
push
insl
cld
je
add
push
lcall
and
lds
mov
mov
test
fldcw
pop
jle
jge
jmp
and
inc
cmpsb
add
xchg
xchg
cmp
jb
cs
cmp
stc
notl
jmp
jge
xchg
ja
sbb
lock
jae
and
cmp
add
xor
fsts
stos
out
mov
cmp
push
roll
jmp
fdivrp
sub
xchg
mov
pop
jbe
xlat
test
rcrb
mov
andl
outsb
aaa
push
inc
dec
and
dec
in
repz
flds
and
cmp
test
or
imul
add
or
push
fadd
mov
inc
xor
fistl
push
mov
xchg
mov
jmp
mov
stc
movsb
in
cli
adcb
cli
js
push
cli
sbb
inc
movsl
jb
inc
stos
mov
loope
popf
push
cmpsl
mov
mov
mov
mov
int3
xchg
push
or
das
negb
jmp
lds
mov
hlt
add
sbb
pop
les
addr16
cmp
cwtl
loope
aad
lret
mov
mov
mov
into
mov
sub
insl
fidivl
cs
pop
out
pop
icebp
mov
xchg
ljmp
cmp
lret
jl
xor
push
in
dec
inc
daa
jp
push
jae
mov
mov
cmpsb
push
dec
push
out
das
pop
cltd
in
mov
test
xor
rorl
ja
push
inc
fcmovbe
cmpsl
add
mov
adc
and
lods
jne
jmp
jae
fsubrl
push
push
xchg
mov
imul
xchg
mov
mov
mov
adc
add
sahf
insl
je
xor
repnz
cmp
pop
add
sub
stos
mov
insl
cmp
stos
lea
inc
xchg
inc
jns
outsl
fisubl
lahf
js
int3
mov
push
xchg
and
andl
cltd
mov
add
or
fimull
sbb
mov
or
and
sbb
mov
jb
jnp
iret
gs
mov
mov
out
fldenv
dec
jmp
les
or
je
jnp
push
repz
jle
xchg
pusha
fs
sub
outsl
out
call
sbb
fstpt
or
push
cmpsb
mov
repnz
mov
pop
xor
inc
in
pushl
icebp
loop
adc
mov
jne
das
xor
inc
mov
cmc
arpl
dec
push
push
je
dec
stos
jae
shll
inc
js
mov
in
ret
sub
imul
or
out
inc
aas
xlat
dec
mov
jne
push
insl
out
and
mov
xchg
lods
js
divl
iret
loop
mov
sbb
mov
pop
and
push
dec
ja
add
bound
xchg
sar
js
push
mov
pop
iret
pop
leave
call
je
and
imul
lret
jb
shrl
xorl
das
ret
mov
js
and
add
pop
jmp
adc
shlb
in
scas
das
idivl
mov
addr16
mov
imull
ja
sahf
ljmp
pop
jnp
in
cltd
push
inc
push
outsl
mov
pop
pop
sahf
sahf
test
or
jae
pop
add
mov
rcpps
xor
xchg
sbb
dec
sub
loope
call
cmp
pushf
pushf
jge
imul
cmpl
shrb
neg
clc
lcall
in
push
test
in
shl
xorl
loopne
push
mov
push
pop
cmp
enter
inc
xor
shl
xor
or
push
cmp
addr16
push
lock
popf
mov
mov
adc
add
rcr
arpl
xchg
xchg
push
sub
xchg
dec
push
mov
push
and
cmp
mov
lods
pop
dec
sbbl
ss
dec
test
popf
rorb
mov
adc
jne
popa
xor
enter
xchg
rolb
jo
pop
data16
jne
pop
or
aaa
inc
lds
jmp
push
das
pop
ss
mov
ja
xchg
mov
add
jp
mov
mov
jnp
sbb
dec
xor
push
jnp
jecxz
cmpsl
dec
mov
sbb
insl
fbstp
push
or
jg
addl
jns
adc
mov
pusha
imul
daa
enter
shrl
xor
rclb
sbb
or
or
std
xchg
mov
mov
loop
scas
push
sbb
shll
or
es
test
sub
rcrb
and
hlt
cli
int
sbb
or
shll
xor
loop
ss
ret
fbld
pop
inc
arpl
loopne
add
push
stos
popf
nop
adc
jne
pop
push
mov
jle
jg
jne
add
jecxz
hlt
not
loope
xor
mov
push
stos
mov
lret
xchg
mov
xchg
mov
xchg
pop
jl
mov
ficoms
fsubrl
mov
push
lock
push
xor
or
fs
ret
add
pop
sbb
push
mov
adc
xor
push
dec
or
and
loope
outsb
pop
mov
add
xchg
pop
int3
cli
mov
les
add
pop
rcrb
ljmp
loope
adc
into
jle
mov
lock
and
pop
loope
push
add
dec
mov
cmpsb
sub
loope
fs
dec
cs
and
xchg
rolb
pop
pushf
or
das
mov
mov
push
and
movsl
sahf
inc
or
lcall
pop
insl
shrb
test
insb
mov
mov
sub
cli
cmc
adc
jg
adc
iret
fimull
scas
test
mov
std
add
lods
push
pop
enter
mov
xchg
push
dec
fwait
jmp
subb
sub
aaa
and
lcall
xchg
cwtl
pop
daa
lret
scas
lods
xchg
idivb
movsl
sbb
lahf
je
stos
dec
adc
adc
jmp
repnz
ret
jge,pn
xor
adc
fsubr
rorb
and
fmull
add
jae
pushf
xchg
outsb
mov
dec
and
outsb
in
cli
cli
sarb
sub
mov
dec
mov
xchg
dec
movsl
loop
or
mov
adc
lods
adc
roll
stos
dec
add
push
sbb
mov
shr
lahf
aas
loop
sbb
jnp
out
scas
adc
jecxz
push
jb
ljmp
incb
pop
lods
jno
je
xor
add
adc
sarb
imul
lods
lahf
je
push
shrb
fisttpl
or
dec
adc
lock
mov
adc
dec
fld
cs
repz
push
in
fildl
xchg
aaa
pop
mov
cmovl
push
dec
sbb
pop
pop
cld
sarb
mov
dec
pusha
mov
jle
decl
lods
mov
mov
in
mov
xchg
jb
ja
sub
add
adc
out
insl
push
xchg
nop
fidivs
jg
adc
shrl
pop
lahf
pop
mov
add
call
int3
and
js
mov
gs
lods
pop
inc
test
es
mov
ja
adc
in
lods
push
call
sub
push
xchg
or
sub
pop
arpl
loop
divl
pop
xor
add
je
adcl
or
push
lea
outsb
dec
sbb
lret
fisttpl
aaa
mov
rcl
xor
adc
js
loop
shl
xor
pop
std
bound
and
or
test
cmpb
bswap
lea
shrb
sub
push
shlb
adc
pop
mov
movsb
loope
sbb
jecxz
stos
mov
adc
repnz
imul
rcrl
lret
mov
mov
add
add
ss
insl
into
xor
pop
mov
cmpsb
dec
inc
das
mov
pop
popa
bound
jne
push
xor
inc
push
jne
loop
mov
inc
or
dec
insb
adc
cs
lahf
and
mov
mov
push
int3
push
rcrb
and
mov
lret
enter
dec
aas
push
inc
jge
inc
pop
or
inc
xchg
int
pusha
pop
mov
cltd
loope
mov
ljmp
push
jbe
ljmp
xchg
and
ret
xchg
outsb
add
andl
and
lahf
jb
shlb
inc
mov
sbb
into
cmpb
inc
pop
sub
pop
add
mov
ljmp
add
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
adc
mov
xchg
cmp
scas
sbb
sub
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
imul
addl
std
add
add
xchg
cmpl
fnstenv
aas
gs
push
push
mov
sahf
and
xchg
insl
sub
stos
add
xchg
add
add
std
pop
ja
cmp
fs
pusha
cmp
sub
aam
jle
aam
fcmove
push
add
lea
imul
pop
adc
push
cli
xchg
jno
in
mov
outsl
out
jno
aaa
cmp
in
push
jns
xchg
dec
outsb
fcompl
das
mov
inc
mov
dec
jmp
cmp
fsubs
ds
or
mov
addr16
sub
lock
sub
jo
jl
push
je
cmc
push
cld
mov
cmc
out
or
outsb
mov
and
jecxz
dec
sbb
jl
hlt
jmp
je
adc
flds
jbe
and
dec
xchg
dec
test
test
jns
jmp
enter
pop
mov
repnz
rclb
sub
xor
dec
je
ffree
add
pop
push
pop
or
pop
mov
out
mov
fs
mov
xchg
mov
push
add
sub
pop
jl
mov
sub
push
rcrl
pop
jmp
incl
pop
cld
setl
pop
push
das
ja
aaa
mov
jb
insb
jns
fadds
cltd
jp
xchg
ja
push
inc
int3
out
in
mov
gs
jb
mov
jb
push
stos
push
cmp
dec
xor
subl
rcrl
outsb
imul
sub
fdivl
sub
xchg
in
lock
in
mov
scas
inc
outsl
stos
mov
sbb
mov
or
add
pop
cwtl
fldln2
and
jae
mov
and
data16
add
add
idiv
jg
mulb
mov
add
add
add
pop
and
arpl
jns
nop
shl
int3
dec
lods
sbb
lods
sub
push
cmp
xor
lods
add
cmp
push
test
cmpsl
mov
ljmp
xor
lret
and
loope
mov
mov
cmpsl
arpl
stc
mov
lods
or
iret
mov
sub
jl
insl
push
add
nop
stos
popf
cmp
sbb
pop
dec
test
cmp
sbb
scas
repz
and
lea
jno
popf
dec
hlt
push
jns
xor
sbb
inc
sarb
aaa
insl
sub
pop
int3
nop
sbb
std
notb
push
mov
sahf
shrl
or
rclb
and
and
and
dec
std
or
and
insb
shlb
dec
out
cmp
xchg
out
sbb
int3
call
mov
mov
push
hlt
mov
popf
dec
mov
movsb
fldl2e
test
mov
fimull
popf
jno
imul
ret
pop
scas
cltd
add
vpshlw
inc
mov
push
sbb
in
sti
mov
stos
inc
shrb
adcl
fsubrs
call
fisubs
fstpt
inc
inc
js
jmp
mov
jle
mov
mov
lods
stos
dec
pushf
cmp
and
fistpl
std
pop
sar
popf
mov
mov
or
mov
xchg
pop
filds
aas
push
les
int
sub
lahf
repnz
lcall
movsb
sbb
xchg
jecxz
movsb
outsb
testl
sahf
je
mov
cld
fistl
movsb
aaa
jnp
xchg
fldenv
push
lea
mov
dec
xchg
cmp
mov
jb
mov
popa
cmp
add
add
sbb
pop
std
jg
xchg
mov
add
add
add
xchg
xor
dec
addb
std
mov
and
jne
repnz
xchg
jns
fsubrl
inc
test
lcall
dec
push
lods
popa
dec
jp
arpl
and
push
arpl
sub
int3
mov
sbb
rcl
out
rcll
sbb
sahf
fcmovnu
cmp
or
add
popf
mov
jne
inc
jno
pop
test
pop
clc
mov
leave
sti
nop
scas
jl
cmp
sub
or
mov
sbb
fidivs
mov
inc
add
pop
les
cs
push
push
adc
icebp
inc
add
test
and
mov
jb
testl
dec
in
mov
jno
popf
lock
mov
pop
out
add
jne
mov
sub
pop
cmpsl
add
lds
pop
pop
pop
push
dec
and
add
es
push
loopne
mov
jo
pop
into
lods
andb
nop
jge
cmc
loopne
es
push
inc
scas
push
fnstenv
pop
in
dec
fsubrs
dec
repnz
jl,pt
movb
mov
nop
sahf
dec
inc
dec
mov
adc
mov
js
add
fisttpl
shr
add
stos
scas
mov
sub
loop
cmp
cs
and
push
adc
frstor
push
sbb
mov
in
jne
std
enter
mull
push
or
aad
rclb
out
xchg
clc
push
or
sub
mov
inc
xor
xchg
adc
add
push
lock
xor
jb
inc
es
test
sbb
mov
mov
iret
out
pusha
imul
frstor
push
out
push
std
mov
xchg
lea
jns
sbb
mov
push
rcll
dec
push
rcrl
pop
or
add
add
add
add
add
mov
int
mov
and
mov
add
add
add
xchg
push
cmpsl
cltd
add
dec
out
fucomi
hlt
faddl
inc
sti
loope
and
cwtl
sbb
out
jbe
inc
push
shl
cltd
mov
dec
sbb
fwait
int3
add
icebp
clc
mov
out
or
int
imul
call
sub
mov
jno
ljmp
mov
ficomps
int
sti
daa
xor
push
push
jle
mov
hlt
push
push
shlb
xchg
leave
les
int
adc
stos
push
je
ja
mov
sub
xchg
fistpll
rorl
push
fs
loop
lods
pop
add
sub
lea
sahf
into
mov
adc
mov
mov
pop
push
ja
or
pop
je
mov
ds
fidivl
push
push
xor
mov
ljmp
or
dec
fiaddl
mov
xor
add
jno
xor
or
jnp
pusha
inc
xchg
push
clc
xchg
ror
mov
inc
push
mov
lods
aad
adc
hlt
pop
jno
pop
popa
cmc
scas
sub
push
rorl
inc
repz
nop
sbb
test
in
sub
shll
stos
cmpsb
jbe
insb
imul
cmpsb
cmp
push
loopne
cmpsl
mov
ds
mov
push
std
incl
cli
add
out
xor
jae
rorl
dec
daa
cmp
fistpll
mov
jmp
inc
test
mov
sub
js
mul
jmp
dec
mov
hlt
arpl
sub
xchg
inc
cmc
and
mov
jbe
std
lds
sahf
out
fs
dec
pop
or
sbb
mov
in
dec
mov
xchg
dec
cltd
mov
enter
jecxz
fmul
iret
cmp
pop
add
mov
lret
mov
and
add
add
hlt
mov
std
jl
xor
jg
addl
add
push
cmp
mov
and
mov
add
mov
les
or
out
into
xchg
leave
sbb
insl
add
lcall
jecxz
in
dec
dec
scas
stos
mov
shll
pushf
lock
aaa
push
mov
lods
inc
pop
test
push
imul
mov
fxch
nop
movsl
call
adcl
sbb
les
lcall
sbb
xor
and
js
mov
push
fildl
sbb
pop
gs
xchg
inc
sbb
mov
xchg
xchg
mov
shll
mov
sub
jmp
and
and
addb
sub
mov
xchg
xorb
sub
loope
inc
sbb
std
push
ja
mov
or
bound
loope
stc
jl
mov
mov
nop
push
inc
popf
ficoml
inc
out
cmpsb
aad
lea
inc
push
mov
into
je
lahf
mov
ret
movsl
adc
pop
ljmp
or
shr
jg
repnz
and
cmpsb
dec
stc
xchg
pop
or
push
out
pop
les
fcoml
mov
xor
adc
stc
push
jg
fists
int
pop
ljmp
sub
push
es
in
dec
mov
push
pop
xor
push
popa
iret
fstpt
push
stos
imul
sbb
jmp
in
in
lods
arpl
insl
das
lret
pop
in
cmp
divl
sbb
inc
popf
fiadds
js
push
push
push
insb
out
jle
fsubrp
xchg
out
sbb
clc
add
cmc
out
xchg
cmp
imul
shlb
outsb
dec
mov
cmp
subb
test
popf
add
add
imul
fdivrl
ds
jnp
mov
add
add
add
xchg
sub
pop
mov
pop
outsb
cmp
mov
and
mov
clc
imul
hlt
pop
jecxz
cwtl
cwtl
mov
dec
push
popa
bound
fstl
jg
ss
lock
lods
fidivl
clc
cmp
inc
out
and
inc
mov
inc
repnz
mov
push
movsb
mov
cmpsb
imul
fsubrs
add
dec
ret
aad
xorb
sbb
rolb
mov
xlat
dec
xchg
pop
gs
fcmovnb
push
pushf
clc
lea
lods
cli
rorb
outsl
aas
movsl
int
and
outsb
sbb
aas
sarb
lods
xchg
dec
adc
jmp
pop
dec
sbb
scas
in
xor
cmp
in
cmp
inc
out
dec
mov
mov
lahf
add
cld
cmpsb
cmp
stos
add
ss
or
xchg
fdiv
test
dec
pop
sub
or
add
fidivrs
xchg
stos
sbb
in
adc
pop
sbb
outsl
das
pop
jg
cltd
adc
pop
adc
jmp
cmp
jmp
addr16
jle
or
cmpsb
int3
add
pop
jl
in
sub
or
ss
rcrb
add
lea
in
popa
and
ss
jmp
fistpll
adc
pusha
fwait
and
inc
shlb
nop
cmc
in
scas
jbe
fwait
cmp
mov
pop
push
cmc
mov
sub
sbb
mov
shlb
or
jb
push
loopne
sar
lods
pop
out
int3
rorb
and
or
mov
add
cmp
insl
in
pop
sbb
push
mov
popa
stc
xchg
clc
das
out
in
ud0
mov
aaa
notl
add
add
jg
pop
fstps
testb
add
xor
pop
dec
jnp
popa
or
mov
pop
insb
push
cmp
das
imul
and
lret
dec
jbe
mov
hlt
sti
fisubrl
push
lahf
sub
jo
mov
inc
push
mov
jns
push
add
pop
rclb
or
ret
popa
dec
out
enter
xor
lcall
mov
pop
pop
aas
aam
movsw
fcoml
dec
loop
popa
shrb
dec
repz
fnsave
inc
push
adc
lret
cmp
push
ret
pop
mov
inc
mov
cmp
dec
clc
in
fisttpll
and
in
daa
ljmp
jp
data16
sbb
mov
add
sub
push
repz
adc
jmp
leave
jo
jb
jmp
and
fsubrs
or
cmp
cmp
xchg
fisubrl
out
or
insb
mov
push
imul
mov
push
mov
xor
mov
aam
cli
dec
andb
jge
js
pop
jecxz
jbe
dec
sbb
pop
cmpsl
movsl
std
adc
jp
or
dec
imul
cmc
cwtl
dec
sub
jle
lret
add
mov
mov
adc
and
leave
lock
mov
push
push
out
loope
insl
out
xchg
mov
ret
lcall
divb
push
js
stc
mov
insb
xor
dec
rcrb
stos
adc
cmpsb
xchg
stc
fnstenv
inc
stos
push
mov
cmpsb
in
adc
loope
ffreep
pop
ljmp
mov
or
scas
mov
xor
mov
mov
dec
dec
mov
sbb
add
addr16
stos
repz
jno
aad
out
cwtl
adcl
popf
paddd
fidivl
or
add
std
add
add
movsl
lods
mov
flds
adc
add
out
ret
in
call
lock
xchg
xchg
jb
xchg
mov
cmp
sbb
enter
addr16
xchg
mov
loope
pop
push
loopne
sub
adc
sbb
cmp
mov
outsl
dec
xor
sub
inc
push
mov
in
ss
xchg
scas
iret
imul
rcl
push
gs
stos
pop
pop
sbb
outsb
lods
sbb
adc
jbe
mov
pusha
pop
shrl
dec
xor
out
bswap
stc
hlt
sub
dec
jns
pop
xchg
inc
and
mov
in
mov
lods
repz
jnp
xor
pop
push
dec
push
sbb
out
cmp
test
add
jmp
xchg
sbb
xor
cmp
clc
mov
cmpl
insl
jae
pusha
push
inc
outsl
in
jp
insl
push
dec
inc
repz
movsb
jne
add
insl
mov
pop
cmp
sub
inc
shlb
or
xor
and
pusha
mov
divl
pusha
pop
mov
dec
mov
lahf
dec
fimull
dec
mov
sbb
or
cmc
mov
loop
dec
xorb
out
inc
scas
bound
sub
jmp
cwtl
and
cwtl
pop
xchg
pop
lods
xor
pop
mov
and
mov
andl
pop
lcall
in
sbb
test
ljmp
mov
fwait
xchg
faddl
cmpsl
sub
inc
addl
xor
in
fmull
loope
icebp
inc
data16
imul
jne
add
cmc
sarl
push
fnstcw
push
loopne
jg
call
add
pop
fldt
mov
lret
inc
lret
in
test
aad
sub
cmp
dec
add
add
push
movsb
lea
sub
test
push
sub
xchg
add
std
add
add
add
addb
test
ss
dec
add
std
cmp
stos
loop
jge
lods
fcmovnb
stc
mov
xchg
mov
notl
inc
adc
jo
andl
and
adc
fcompl
pop
inc
mov
ja
dec
rcrb
inc
add
psadbw
push
cmp
cld
in
mov
or
pusha
out
or
lods
xlat
std
ss
adc
xchg
rorb
mov
cmp
in
outsl
lods
loop
pusha
into
popa
lret
pop
cmp
rorl
call
mov
mov
inc
and
dec
lret
push
xlat
imul
add
and
testb
cmp
jl
aad
ret
es
sbb
test
repz
mov
scas
pop
push
sub
cmpsb
pop
outsb
in
push
inc
mov
stos
pushf
xor
jae
jle
cmpsl
cld
ror
inc
popa
pop
inc
loop
int3
ret
sbb
xchg
adc
pop
or
cmpsb
jmp
sahf
dec
lock
pop
dec
jge
push
jp
popl
clc
std
cmp
pop
pop
xchg
iret
push
cmpsb
inc
xchg
movb
in
pushf
add
xor
cmp
repz
shl
test
xlat
sub
and
or
aas
outsb
mov
push
adc
dec
or
xchg
jecxz
arpl
imul
mov
or
mov
daa
or
dec
fisttpll
test
testb
mov
filds
mov
mov
pop
imul
or
inc
mov
jb
cltd
mov
mov
dec
sub
pop
mov
movl
mov
sub
inc
sub
inc
pop
stc
or
inc
or
push
adc
inc
add
add
mov
cmp
popl
mov
mov
add
add
add
out
fcompl
xchg
cld
xchg
pop
dec
xchg
dec
fidivrl
arpl
fcompl
mov
sti
imul
cmp
xchg
nop
push
sbb
repnz
xor
imul
jbe
lods
sbb
stos
xchg
popa
xor
inc
xchg
stos
stos
push
jb
or
negl
idivl
mov
inc
aam
or
inc
jecxz
aaa
pop
mov
icebp
cmp
jl
mov
inc
push
cmp
push
aad
xchg
outsb
inc
jmp
add
hlt
mov
and
sub
cs
sub
idiv
popf
lds
fiaddl
push
ficoml
jno
int
into
lcall
fcoms
test
call
inc
popa
inc
popa
mov
pop
xchg
cmpsl
adc
lret
sub
push
aas
and
adc
sbb
scas
mov
js
push
rorb
dec
test
mov
sub
imulb
inc
out
fisubl
imull
push
and
mov
aam
insl
insb
imul
xor
sub
jle
rcrl
cmc
sahf
sub
pusha
fsubrs
and
aam
sub
pop
add
or
inc
movsb
or
popa
mov
out
jbe
xchg
ret
add
nop
mov
mov
mov
dec
lret
lcall
js
xor
fistl
shl
enter
jo
push
insb
jl
mov
jo
fwait
stc
je
gs
mov
xchg
jmp
sbb
fstp
imul
push
jo
loopne
or
lahf
jns
int3
and
lds
push
shl
mov
mov
lret
in
sbb
cmp
jae
in
in
roll
sub
outsl
pop
stos
inc
add
add
xchg
std
jg
mov
outsb
mov
std
add
add
cli
scas
xchg
imul
call
mov
sbb
aad
push
cli
les
push
outsl
jmp
push
mov
or
lods
inc
xor
dec
into
sbb
xor
mov
into
pop
aam
imulb
pop
mov
syscall
sti
iret
pop
dec
aaa
dec
jnp
lea
bound
outsb
add
iret
cmp
mov
xchg
push
sahf
and
mov
fdivl
dec
mov
in
jge
xchg
or
pop
lods
cmpsb
cmp
gs
mov
jo
ljmp
mov
pop
or
fcomi
mov
cmp
std
mov
mov
test
sti
push
mov
xchg
mov
fwait
cmpsb
xchg
sbb
movsl
pop
or
ret
mov
dec
sub
xor
sub
xchg
jmp
ret
push
loopne
mov
pop
xor
sbb
mov
xchg
sub
xchg
dec
push
insl
stos
or
daa
or
cld
push
mov
xchg
ret
sahf
or
out
out
mov
mov
jle
sbbl
cmp
imul
mov
arpl
outsb
cmp
pop
push
and
addb
add
lds
adc
ja
and
outsl
mov
xor
imul
out
push
cmc
jmp
inc
add
jae
xchg
hlt
mull
leave
rcll
cld
test
lcall
mov
push
or
jns
push
stos
fsubrl
jnp
ja
xor
data16
sbb
push
cwtl
les
mov
movsl
dec
sbb
push
stos
mov
xchg
xchg
hlt
jb
pushf
xor
jo
test
into
mov
mov
add
idiv
iret
rorl
fs
icebp
out
add
std
add
add
enter
mov
xor
lock
jp
inc
inc
or
ror
scas
scas
or
jne
mov
mov
mov
push
sub
outsl
jle
ss
popf
loop
rcll
into
fdivrs
bound
mov
xlat
cltd
add
out
sub
adc
mov
mov
setle
arpl
pushf
lock
aam
mov
dec
xchg
mov
js
dec
dec
in
cmp
out
iret
lock
lcall
inc
dec
inc
pop
inc
imul
jge
adc
test
dec
mov
sarl
jp
fsubrl
pop
jns
inc
and
mov
inc
cmp
mov
xchg
push
mov
imul
in
mov
sub
sub
mov
mov
pushf
sbb
fnsave
insl
movsl
cmpsl
fs
lahf
adc
mov
xor
arpl
pushf
push
jo
mov
pushf
push
inc
mov
inc
xchg
xor
mov
lret
icebp
mov
decb
sub
aas
adc
leave
mov
imul
mov
jle
xorl
repnz
popf
add
jmp
dec
gs
std
stos
push
test
pop
fildl
sahf
push
push
fsubrl
loop
and
inc
pop
mov
mov
dec
ret
and
xchg
fwait
mov
loop
cmp
out
icebp
repnz
cmpsb
push
lret
decl
jne
fisttpl
xchg
imul
xchg
adc
fimull
ret
dec
mov
and
and
mov
lods
lahf
addr16
mov
pop
cwtl
shll
lea
inc
push
push
lea
sub
xchg
scas
movsb
adc
es
fstps
cmpsb
xchg
iret
and
lret
sahf
pop
mov
dec
inc
jge
stos
dec
cwtl
iret
mov
jnp
add
add
ret
mov
ja
or
or
std
add
add
add
inc
push
out
jo
mov
push
loopne
xchg
pusha
dec
lea
imul
in
std
adc
push
push
call
xor
sahf
mov
int
inc
in
test
lea
and
fldenv
inc
lods
push
lods
in
mov
xchg
mov
xor
jae
loopne
pop
cs
jo
pop
or
sbb
std
jno
cmp
scas
je
xor
aaa
pop
shrb
xor
fldenv
xlat
xor
sub
xor
imul
aam
jg
or
xchg
fwait
cld
sti
pminsw
pop
test
aam
mov
or
je
mov
mov
popf
sub
push
lods
mov
xor
out
shll
pop
das
sbb
test
pop
in
pop
or
xchg
inc
cs
cmp
mov
je
shlb
push
movl
lret
add
lret
ret
sarl
inc
cld
cmp
ljmp
xchg
push
cmp
rorb
in
lods
por
pop
shrl
jp
lret
push
push
lcall
cmp
jmp
inc
push
sbb
cmpsb
das
andl
cmp
mov
pop
mov
cli
xor
loope
shr
aad
movsl
repz
ja
cmp
cmp
xor
mov
imul
fs
mov
xchg
xlat
popf
nop
or
fisttps
pushf
imul
fists
xor
out
mov
pop
lahf
add
jmp
adc
repz
icebp
stos
stc
jge
fsubrl
mov
jno
shlb
fwait
imul
decb
leave
push
sbb
xchg
mov
mov
add
add
add
add
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
bnd
fsts
iret
out
lret
dec
push
out
cmpsl
movsl
pop
push
negb
mov
jb
jo
in
call
and
xor
scas
test
inc
lock
xor
lds
stos
dec
jecxz
loopne
adc
xchg
cmp
fcmovnbe
outsl
fisttpll
popf
lock
out
jae
arpl
inc
jns
lahf
pop
rcrb
imul
adc
call
mov
test
mov
and
bound
lods
scas
jge
imul
rolb
mov
imul
ret
mov
mov
cld
int
jno
in
loope
call
jl
arpl
jnp
push
lods
mov
rclb
mov
push
xlat
push
rcrb
daa
stos
sbb
sub
or
pop
sahf
loop
and
int3
pushf
jne
pop
imul
or
aad
loopne
sahf
movsl
jns
cmpsb
adc
dec
or
out
insb
gs
jmp
adc
mov
mov
or
add
and
lret
mov
cmp
add
adc
test
push
cltd
test
imul
pop
cltd
sbb
jb
sti
sub
ss
test
pop
gs
jmp
jg
push
lcall
mov
push
stc
subl
nop
cmp
or
dec
dec
fcompl
bnd
ret
imul
movsl
call
in
mov
jbe
jbe
add
fsubr
mov
in
sti
pop
es
and
cwtl
inc
cmpsl
dec
mov
lock
nop
imul
mov
push
lods
mull
shrb
adc
sbb
scas
dec
mov
push
inc
or
pop
lds
mov
sbb
add
add
push
or
pop
out
repz
fucomp
mov
and
sahf
add
std
add
add
adcb
movsb
mov
test
std
andl
or
decl
xor
sbb
mov
outsb
or
pop
mov
les
push
orl
push
test
je
mov
insl
inc
lea
nop
push
cmp
mov
xor
jp
mov
ds
fistl
inc
inc
and
mov
rcrl
loop
sub
fmul
leave
add
mov
icebp
xor
adc
scas
lock
push
cmp
sbb
das
mov
mov
dec
negb
std
lcall
jbe
cs
sub
inc
loopne
jecxz
pop
mov
sar
in
or
loopne
dec
ds
iret
jo
mov
push
dec
repnz
mov
push
and
je
int
insb
xor
mov
mov
lahf
and
ds
out
dec
mov
hlt
je
mov
or
pop
pop
push
rcrb
mov
fnstcw
sub
and
iret
out
mov
mulb
sbb
in
mov
jo
push
xor
jge
push
pop
mov
sub
hlt
fdivrs
xor
add
lock
lock
add
cmp
or
jns
xchg
loopne
adc
inc
fs
pop
insl
repz
push
inc
test
push
adc
pop
sbb
fmuls
mov
xor
popf
mov
fwait
cmp
leave
gs
popa
ficomps
fidivl
mov
fsubr
test
cmp
jmp
mov
sub
mov
jb
pop
and
jl
iret
cltd
xor
dec
testl
xchg
xchg
lret
xor
pop
jne
es
test
cmc
pop
mov
mov
lahf
inc
sbb
mov
lahf
xor
add
leave
xchg
insl
mov
out
nop
sbb
add
std
add
add
cmp
sub
push
xorl
xchg
iret
mov
jo
jae
mov
jo
clc
sbb
inc
arpl
stc
movsb
inc
sub
or
mov
add
inc
xchg
pop
daa
xchg
in
mov
sbb
cmp
xchg
jp
and
gs
cmp
lods
cwtl
cmp
lea
bound
mov
sbb
sub
outsl
fbld
xor
sub
mov
sub
jb
imul
jl
imul
push
jae
inc
push
sub
xchg
popa
pusha
arpl
cmpl
jb
lods
test
jae
int3
inc
and
mov
call
jno
cmpsb
mov
cmpsl
mov
fidivrs
mov
hlt
jmp
adc
adc
not
push
ret
pop
jae
arpl
pusha
xor
sbb
cmp
xchg
xchg
add
dec
mov
in
inc
test
fisttpll
sub
icebp
adc
dec
pop
push
pop
lret
mov
call
hlt
std
data16
mov
xor
or
out
mov
pushf
fmull
xchg
dec
mov
inc
dec
push
fbstp
jne
push
mov
repnz
dec
and
sbb
int
int
sbb
sbb
ss
pop
int
push
mov
or
int
addr16
mov
cs
mov
push
add
fistpll
push
or
stos
push
lret
jecxz
jmp
cmpsl
sub
repz
jo
out
pop
add
xchg
push
push
pop
cli
jno
rep
daa
mov
inc
iret
fsts
mov
pop
push
lret
imul
int
mov
dec
out
mov
outsl
shrl
scas
fstl
adc
add
ja
idiv
pop
out
cmp
dec
pushf
fsubs
add
adc
insl
lea
push
aaa
lock
add
lock
rcll
idivl
iret
idivb
mov
mov
pop
je
scas
mov
xchg
ss
xchg
dec
mov
inc
dec
xor
pop
pushf
adc
icebp
add
shrl
sub
and
clc
xlat
lret
aaa
adc
outsl
scas
movb
mov
frstor
mov
jmp
inc
inc
inc
jp
mov
ss
add
ds
push
inc
xlat
inc
test
sub
inc
jecxz
push
cmpsb
dec
mov
sbb
push
push
add
add
inc
clc
cli
lds
mov
adc
mov
popa
or
and
xor
test
jl
cmp
add
mov
mov
mov
daa
stos
loop
lret
sub
sub
sub
aaa
stos
je
in
outsb
jp
out
pop
jl
and
fnsave
pop
stc
mov
inc
jmp
into
inc
test
jecxz
mov
mov
jmp
out
add
lret
mov
mov
sbb
das
inc
jmp
jmp
jmp
dec
or
adc
inc
xor
es
cwtl
int
pop
and
xchg
xor
out
std
mov
out
add
xor
insl
mov
pop
addb
mov
ja
clc
fsubl
mov
mov
mul
enter
cmp
ja
sbb
into
sbb
fstps
and
jns
fistpll
es
add
dec
xchg
pop
sub
mov
cmp
push
das
push
xor
and
mov
pop
mov
fcmovbe
lea
cmpsl
fcmovnu
mov
inc
je
popa
jns
sbb
mov
add
add
sti
mov
inc
xlat
add
sub
movsb
add
std
add
add
pop
andl
cmp
pop
ljmp
cmc
sbb
xchg
cmpsl
cmpsb
daa
fmull
or
xchg
inc
mov
js
or
in
ljmp
rolb
add
orb
inc
dec
mov
icebp
pop
in
adc
idiv
aaa
push
xor
mov
out
sub
xlat
mov
adc
ret
xchg
sbb
push
movups
out
shlb
dec
jnp
xchg
or
pusha
inc
and
fists
mov
popf
inc
sub
scas
icebp
xor
pop
jb
jge
aad
int3
decb
aas
sub
xor
add
js
xor
jns
lahf
dec
fdivl
sbb
pop
pushf
sbb
adcl
fdivl
sbb
loope
addl
and
movsl
iret
xor
enter
push
loop
rcr
imulb
and
mov
jb
sti
sbb
xchg
mov
push
xchg
sbb
mov
daa
xchg
out
test
cmp
xchg
inc
inc
jnp
cmc
pop
mov
jmp
fcmovbe
xchg
jecxz
repnz
in
cltd
ret
fisubrs
push
inc
cs
js
aam
js
adc
xchg
inc
aam
pop
and
dec
sti
imul
dec
lds
mov
lock
ud2
fcomi
inc
fxch
dec
test
adc
fstl
mov
movsb
in
push
xchg
mov
mov
xchg
rorl
or
xor
fiaddl
sarl
jge
push
fs
or
add
adc
int3
xor
aaa
xchg
dec
xchg
jne
pusha
mov
gs
insl
adc
stc
sbb
js
lods
mov
xchg
cmp
hlt
das
sub
pop
jbe
pop
shll
mov
aam
sbb
xor
add
xor
sahf
xor
sub
push
pop
dec
shlb
add
rorl
jp
mov
insl
xor
xchg
loope
mov
stos
fldpi
pop
xchg
jne
jnp
mov
lea
push
inc
sub
movsl
mov
pop
or
fwait
cmp
std
pushf
filds
sbb
hlt
mov
in
insl
mov
xchg
into
push
mov
xchg
push
int3
popa
into
push
pop
jae
xchg
shlb
xchg
imul
or
jbe
outsl
dec
pop
xchg
in
cmp
jo
pop
stos
adc
mov
adc
pushf
mov
enter
adc
ljmp
out
or
and
xchg
and
mov
mov
add
inc
std
push
sbb
std
aam
aam
sbb
sub
fcomps
jns
in
shl
sbb
lret
dec
sub
jle
clc
clc
adc
xchg
pop
imul
lcall
sbb
mov
shl
outsb
jmp
rcl
sub
pop
pop
fs
dec
outsb
xchg
repz
adc
ret
pop
addb
adc
out
sbb
fcoml
add
fisubs
aam
cltd
rcll
cmp
cmp
data16
jb
mov
mov
sbbb
xchg
dec
jb
mov
inc
mov
and
cmpsb
cmp
inc
jno
xchg
leave
xchg
push
fisubl
mov
jecxz
mov
mov
mov
push
and
adc
aas
es
dec
idivb
fsubr
pop
pop
or
mov
add
fistps
insl
adc
sub
sub
mov
cmc
jo
mov
imulb
jmp
into
notl
cltd
push
jp
movsl
jne
cli
jo
push
popf
repz
add
in
int3
add
or
enter
loopne
sbb
adc
popa
cmp
xchg
in
mov
sbb
inc
and
dec
mov
add
add
std
in
mov
mov
std
cmp
es
test
add
add
add
icebp
mov
in
sbb
cmp
and
cmp
pop
in
hlt
es
jmp
out
mov
and
sub
adc
pop
bound
mov
imul
mov
lods
in
mov
mov
out
or
jle
nop
fidivrs
push
scas
jb
ret
idiv
fsubrs
push
jl
add
mov
inc
jmp
and
orb
inc
xor
lahf
add
sbb
imull
cmp
sbb
out
xchg
dec
pop
dec
sbb
stos
call
lods
lcall
loope
inc
lock
cmp
jae
mov
sbb
mov
fcmovnu
adc
inc
push
adc
and
incb
or
mov
adc
adc
movd
inc
mov
inc
ret
sarl
lods
mov
xor
sub
or
xor
mov
push
loope
hlt
popa
add
enter
mov
outsl
adc
push
mov
or
add
push
xchg
add
jg
cmp
iret
addr16
xchg
xor
std
scas
xchg
out
jnp
stos
mov
fistpll
dec
xchg
pop
mov
pop
mov
add
lods
fistpl
and
sub
push
mov
jae
mov
mov
shll
jg
pusha
popa
movsb
pop
jb
adc
cmp
jle
out
cmpb
loope
fwait
push
jno
cmpsl
scas
jnp
push
mov
lods
pop
or
inc
lret
push
imul
inc
addr16
inc
mov
and
in
adcb
mov
pushl
inc
in
dec
xorb
nop
rorl
sub
pop
jne
and
xchg
cwtl
or
add
repnz
testb
inc
icebp
adc
add
add
add
popa
dec
jmp
push
adc
out
add
loope
push
icebp
jbe
jns
dec
cli
cmp
sbb
adc
mov
pavgw
cmp
push
sarl
scas
adcl
das
sbb
jg
lods
mov
adc
adc
stc
arpl
jbe
or
daa
popa
pop
dec
jp
add
cmp
adcb
lret
xchg
jmp
test
dec
sbb
sbb
repnz
or
subb
dec
xor
jecxz
push
test
fstpl
dec
adc
gs
mov
jns
shll
int3
pop
pop
inc
mov
sbb
xchg
jnp
hlt
jo
cmc
fwait
push
jp
mov
xchg
es
loopne
lret
mov
test
push
mov
jmp
leave
out
pop
xor
testb
popa
sub
mov
js
fdivrp
xchg
add
sbb
nop
mov
dec
int3
xor
int3
or
loop
mov
outsl
push
andl
cmp
cmp
aaa
sub
lahf
outsl
adc
sbb
data16
call
sbb
fisubrl
cs
cmp
sbbb
add
or
pushf
out
ds
ret
pop
push
cwtl
sarb
mov
mov
push
adc
scas
pop
shl
cmpxchg
rcl
push
inc
push
push
inc
sub
das
mov
pop
testb
aaa
pushl
xchg
mov
testb
loopne
out
aam
cmpb
jge
and
dec
popf
mov
enter
and
rcl
or
nop
addl
cld
imul
jle
test
inc
xchg
and
mov
dec
jnp
mov
fadd
notl
int3
jb
imul
mov
and
add
add
popa
data16
gs
mov
lahf
sahf
dec
push
leave
lods
add
std
add
add
lahf
xchg
loope
adc
sub
jae
aaa
lods
mov
add
ret
clc
mov
adc
mov
mov
mov
xchg
sub
int3
movsl
ret
mov
cmc
movsl
push
or
xchg
cmpsb
and
push
sub
call
and
cmp
dec
inc
xchg
test
psraw
cltd
xlat
jbe
push
xor
xorb
dec
test
lods
push
fistpl
dec
mov
in
rcrl
sbb
or
inc
jne
clc
ret
mov
inc
cltd
mov
idivl
stos
pop
lds
pop
push
mov
push
jae
outsb
loope
and
mov
fcoml
dec
push
cli
cmp
or
pop
mov
inc
mov
mov
pop
cmp
push
outsl
mov
push
cwtl
or
xor
mov
mov
pop
adc
push
dec
xor
and
call
sbb
fcom
aaa
je
sbb
cltd
aas
sub
popa
arpl
ret
push
mov
mov
in
shlb
int
rol
cwtl
or
cli
mov
xor
dec
es
sahf
stos
adc
inc
pop
imul
lock
xchg
mov
lahf
mov
gs
shll
movsl
lods
ljmp
mov
ror
rcrb
xor
xchg
inc
push
cmpl
aam
add
mov
dec
or
pop
movsb
iret
inc
lret
push
loop
mov
cltd
pop
repz
nop
pop
jmp
fstpt
jne
sahf
outsl
jle
jl
dec
sub
imul
imul
lods
sbb
jns
jle
xchg
jae
jg
push
xchg
add
add
cmp
cli
cmp
adc
xchg
jo
outsb
scas
add
std
add
add
and
cmpsb
cmpsl
xor
int3
sub
xchg
jp
outsl
mov
sbb
add
mov
mov
ljmp
stos
and
divb
fcomip
sbb
in
adc
add
and
or
jnp
mov
lret
in
outsb
insb
mov
pop
sbbl
test
iret
mov
cmp
xor
aaa
push
out
aas
add
test
nop
xchg
scas
loope
adc
add
sahf
mull
lds
inc
fnstsw
stos
inc
out
xorb
or
and
bound
xor
push
adcl
or
int
stos
dec
pop
lret
mov
mov
repnz
out
xchg
jo
mov
sub
out
push
cmpsl
into
dec
mov
repz
inc
push
pop
jae
push
mov
jne
aas
adc
inc
je
fimuls
repz
rolb
push
add
repnz
pop
fcmovnb
mov
outsb
jnp
adc
sub
dec
mov
mov
mov
daa
adc
pop
orb
inc
add
jmp
cld
js
aad
sbb
fcompl
or
stos
jae
add
mov
lock
clc
mov
add
insb
dec
lret
pop
mov
pop
call
dec
cmp
jae
adcl
mov
add
nop
sbb
adcb
jmp
stos
out
mov
mov
or
ficompl
fs
ret
daa
fstpl
add
pushf
sub
or
test
dec
scas
rcrb
mov
fwait
in
pop
insl
pop
pop
adc
out
into
cs
mov
push
lea
mov
enter
or
xchg
jbe
inc
lock
pushf
scas
and
popa
jecxz
push
imull
inc
cwtl
xor
mov
push
mov
push
lods
movsb
fists
add
add
add
add
and
push
push
cmp
sbb
add
std
add
add
xchg
inc
aas
mov
or
bound
lods
std
popa
and
orl
or
dec
loop
dec
add
or
shlb
xor
cmp
scas
mov
push
pop
jbe
pusha
mov
cmc
stos
cltd
out
lea
std
sub
int3
mov
adc
xchg
mov
lret
movsl
call
fdivs
div
dec
sub
push
sub
mov
inc
hlt
jns
orb
xchg
in
out
or
lahf
push
dec
cmp
sar
ret
mov
cmp
mov
add
and
sbb
mov
push
test
call
pop
repz
dec
mov
xor
shll
call
or
push
adc
mov
or
xlat
ljmp
lret
fidivs
lahf
in
mov
mov
xchg
aad
ficoms
clc
xchg
daa
sbb
pop
xchg
or
and
inc
xor
and
dec
fucomi
jnp
adc
xlat
mov
mov
adc
add
jnp
xchg
jno
sub
jo
mov
shll
jecxz
jbe
or
xchg
cmpsb
sbb
fidivl
je
mov
jge
aas
cmc
pop
lock
in
dec
fstl
in
sub
push
negb
and
fs
pusha
fcomp
mov
push
cld
xor
jae
into
fildll
sub
cmp
push
ficoms
add
xchg
push
aad
cmp
mov
ljmp
push
sbb
call
pop
test
adc
scas
test
pop
shll
mov
inc
negl
in
push
and
push
pop
add
loopne
lahf
in
aaa
in
fldl
test
mov
xor
aas
sub
fidivrl
addl
loop
and
add
add
add
add
cmp
mov
in
outsb
fs
push
sbb
shlb
add
mov
or
xlat
jp
cwtl
sbb
stc
sub
aam
inc
push
sub
test
cmp
push
or
incb
iret
leave
ret
loope
in
jge
stos
lret
aaa
mov
or
sbb
xchg
xchg
fwait
sub
out
out
pop
nop
loope
inc
arpl
js
mov
cmp
rcrb
sbb
sub
jle
pushf
fs
dec
sbb
loopne
lds
push
idivb
jnp
movsl
test
or
lahf
sub
sbb
inc
jge
and
inc
or
mov
mov
outsl
pop
sub
nop
sysret
sub
iret
les
outsb
inc
subl
and
andl
or
in
fadds
mov
jno
pop
mov
dec
cmp
lea
cmp
sti
xor
fimuls
les
mov
xchg
lret
dec
jge
add
testb
pop
int
icebp
push
inc
pop
out
and
sub
push
mov
imul
mov
pop
lods
mov
pop
out
andb
pop
fs
mov
xchg
shll
mov
cmp
fnstsw
movsl
rcll
shlb
jno
sbb
push
push
xor
mov
scas
fiadds
fwait
dec
fsubr
jne
push
xor
pop
int3
jl
loopne
addr16
sbb
and
imul
xor
loopne
mov
push
ror
sbb
jbe
rcrl
bound
test
shrb
cs
push
iret
adc
lret
push
mov
inc
dec
stos
ja
addl
push
ret
out
dec
sarb
cmp
and
xchg
cmpsb
mov
jg
pop
dec
arpl
shl
cmpsb
push
xlat
add
loopne
not
add
mov
movsb
inc
bound
mov
fwait
add
inc
mov
jb
loop
fistpll
add
add
xlat
out
mov
adc
sbb
push
fucomip
sub
int3
test
mov
lahf
stos
jo
ror
push
dec
shlb
push
sub
inc
leave
xchg
jp
mov
call
lds
andb
add
pop
nop
xor
mov
push
adc
fildl
xchg
pop
fidivrs
ret
xchg
jmp
mov
pop
push
inc
push
cmp
xchg
je
jmp
dec
jle
dec
fistpl
cmpsb
iret
xlat
sbbl
and
mov
pop
mov
cmp
jne
pop
xlat
xchg
mov
jne
lahf
cld
add
inc
in
cmp
jbe
jb
dec
adc
and
sub
and
push
adc
adc
pop
dec
pop
add
loopne
andb
mov
imul
mov
sbb
je
xor
das
xchg
push
dec
insb
dec
xchg
push
push
push
data16
or
daa
lea
popl
ja
cmp
ret
fidivl
in
mov
test
mov
repnz
and
int
mov
iret
scas
fs
xchg
cmpsl
push
adc
repz
cmp
ja
lret
fildl
sbb
cmp
pop
adc
pushf
xchg
notl
daa
mov
popf
jmp
inc
jno
xor
push
adc
dec
add
mov
jge
inc
call
int
sbb
lock
cld
xor
cmp
pop
pop
xchg
mov
addr16
sub
je
repz
mov
ret
sub
hlt
scas
or
sub
cwtl
mov
push
aaa
pop
and
jo
jno,pt
arpl
inc
dec
push
and
pop
repnz
ret
mov
mov
push
add
add
mov
cmp
mov
and
add
std
add
add
mov
inc
dec
bound
push
mov
fdiv
in
jne
stos
inc
loop
or
mov
les
sub
jle
fsubrp
push
je
pop
sub
pop
rorl
fnstsw
scas
jle
out
mov
inc
jg
xor
jae
mov
add
sbb
pop
mov
and
jp
pusha
jecxz
mov
and
imul
inc
adc
leave
cmp
int
fmulp
cltd
in
or
and
or
mov
pushf
mov
fcomp
dec
jl
or
push
cli
in
loopne
repnz
sahf
mov
xchg
orl
fldt
xlat
or
scas
push
jl
es
ss
jb
call
push
ja
push
inc
mov
repnz
dec
ja
js
repnz
daa
pop
xor
pushf
jle
push
push
stc
fisttps
rolb
test
clc
jmp
add
sbb
cli
dec
ror
mov
xor
fldt
xchg
cltd
data16
loope
cmp
lahf
mov
xchg
sarb
fs
jecxz
dec
mov
cld
jl
jo
inc
cmp
xchg
xchg
mov
dec
pushf
outsl
mov
lret
pop
sbb
mov
fdivrs
mov
adc
test
ss
push
pop
fs
lea
es
jne
jne
fsubrs
push
add
sahf
rorl
mov
adc
aas
xchg
push
sbb
hlt
or
sarb
call
or
pop
das
fidivrl
xor
dec
inc
subl
adc
push
pop
lock
out
sub
mov
call
push
jl
xor
out
push
jp
js
xchg
mov
pop
lcall
and
push
cmp
out
and
add
cmp
out
idivl
test
xorl
add
add
add
insl
outsb
aaa
ret
pop
cld
out
lods
lods
lahf
cwtl
inc
ds
imul
ljmp
xor
push
mov
mov
cmp
in
adc
mov
push
mov
adc
movsb
out
sub
pop
testb
movsl
loop
pop
jns
mov
arpl
or
arpl
push
push
mov
and
or
sbb
lahf
call
nop
test
pop
add
lcall
incl
pushf
jecxz
je
cltd
add
lods
movsl
pusha
aaa
xchg
pop
sbb
pop
enter
aas
add
fcmovnbe
fsts
sbb
fucom
adc
arpl
sbb
cli
aas
es
push
jl
or
adc
xor
fwait
jb
sub
jnp
mov
or
mov
inc
es
bound
ss
cmp
mov
sbb
dec
xor
and
jno
jmp
pop
jne
dec
cs
gs
pusha
test
shld
test
sarb
insb
cmpl
ficoms
push
mov
mov
nop
jb
jns
pop
sbb
rorw
fdivs
gs
xor
pop
popf
cmpsb
jmp
cmp
leave
inc
fs
mov
xchg
jo
fs
push
adc
mov
in
pop
jmp
jp
adc
cmp
movsl
in
jecxz
in
xchg
pop
push
lcall
js
loop
rcrb
popf
mov
xor
push
jbe
push
sti
mov
and
mov
mov
mov
add
pusha
mov
mov
loope
fsub
and
imul
lods
rcrl
jecxz
jecxz
mov
xchg
int
cmpsb
popa
in
add
add
sbb
fsin
out
fs
popf
outsb
sar
or
std
add
add
daa
add
lret
fdivs
adc
push
jg
icebp
push
xorl
test
mov
mov
xchg
fstpt
xor
mov
mov
xor
loope
adc
add
repnz
pop
les
std
ficoms
sbb
rcl
push
or
pop
fwait
into
fsub
es
outsb
out
inc
pushf
pop
dec
jp
lahf
idivl
clc
inc
mov
jnp
add
add
cmp
subb
and
mov
test
outsb
or
popf
lret
aam
fs
fwait
sbbl
int
decb
lret
cmp
mov
or
lods
sub
mov
add
pop
dec
sahf
mov
std
lahf
dec
pop
cmp
pop
subb
add
repnz
sbb
jno
sbb
inc
data16
scas
adc
lret
dec
dec
jne
jmp
mov
cmpl
lock
xor
and
xchg
in
sbb
jge
inc
idivb
popa
es
lret
mov
out
sub
mov
sub
cli
mov
repz
pop
pop
outsl
ficoms
aam
cmp
pmulhw
mov
sub
int
loop
adcb
std
cwtl
into
shrl
and
clc
add
mov
into
lret
std
jne
push
in
and
out
inc
mov
das
mov
ds
adc
orl
push
mov
mov
outsl
inc
ror
stc
pop
cmp
iret
repz
mov
dec
dec
insb
movsb
sbb
push
pop
aaa
fdecstp
lock
scas
addr16
scas
lret
inc
stc
fwait
insb
js
es
ljmp
cld
push
movsl
cmpsl
pop
sti
jns
sbbb
call
sbb
sub
push
aad
push
nop
xor
fbld
cmpsb
inc
cmp
dec
jg
add
adc
arpl
sti
adc
jl
dec
dec
loopne
mov
mov
add
test
adc
fcmovnb
fdivrs
cmp
les
pop
mov
pop
mov
int
dec
add
lods
sbbb
mov
xchg
sub
aam
fs
sbb
cmp
jb
inc
sarb
test
pusha
clc
xor
jge
jmp
and
xor
mov
popa
stos
lock
icebp
aas
xchg
jae
imul
xor
andb
sbb
xor
popf
dec
lods
inc
daa
push
add
mov
jo
sahf
insb
idiv
loope
leave
jae
cmp
pop
and
fisubrl
repz
xchg
mov
je
ljmp
mov
aas
fmul
sbb
or
lock
dec
movsb
pop
imul
or
dec
out
sub
push
pop
aas
out
and
out
lds
stos
jno
cmpl
jge
cmp
addr16
jl
jno
inc
dec
mov
add
ret
pop
or
cld
jmp
sub
sti
cmp
sub
sub
testb
add
leave
xor
lcall
test
or
xor
and
sahf
push
mov
jae
inc
aam
aaa
push
xlat
jns
lcall
sub
mov
cltd
rcl
xchg
sarl
inc
test
ret
in
and
push
xlat
jno
mov
cmpsb
lahf
mov
or
aas
lock
in
fisttps
arpl
faddl
jnp
int3
pop
xchg
or
out
fidivrs
mov
mov
ja
dec
inc
fstps
xchg
popf
hlt
xor
mov
pusha
cmpl
pop
vmovss
push
cli
adc
jbe
jecxz
fwait
push
out
lods
jbe
inc
pop
cmp
add
add
add
add
and
xor
sub
fs
mov
add
sbb
arpl
out
cmp
add
push
stc
shrl
lahf
loop
daa
aam
mov
js
mov
test
out
pop
pop
loope
sub
call
enter
mov
lods
xor
test
out
mulb
sub
jo
mov
mov
movsl
add
inc
fcomip
push
lea
adc
xchg
cmpsb
xor
mov
mov
pushf
add
movb
cmpsb
pop
cmp
js
fbstp
ret
decb
mov
dec
cs
add
dec
pop
push
jmp
cmc
aad
mov
pushf
movsl
jno
rclb
loop
and
in
or
stc
jae
shlb
loopne
shll
scas
int3
xchg
and
sub
ret
pop
clc
shrb
fildll
loopne
inc
dec
lea
data16
or
xchg
scas
rorb
xor
scas
lea
fwait
rorb
jnp
jp
in
mov
pop
sti
adc
sti
cmp
cmp
and
pop
lret
jo
stos
pop
addl
dec
lods
mov
das
jb
fwait
lret
mov
mov
das
movsl
mov
push
pop
ljmp
lcall
js
rcl
xchg
add
xor
add
lods
lods
push
dec
push
mov
pop
pop
std
inc
adc
aam
aaa
cmp
push
jecxz
adc
jmp
sbb
test
cmp
popf
sub
xchg
add
stc
aad
sbb
and
mov
imul
sbb
ret
fs
jg
xchg
jns
mov
les
fdivrl
cmpsb
xchg
fidivrs
mov
pop
add
push
adc
decl
mov
aaa
push
sbb
or
mov
adc
outsb
popa
sub
push
push
xchg
mov
add
add
push
jecxz
jg
data16
sbb
jmp
add
std
add
add
xchg
add
ss
lock
ljmp
dec
loop
adc
dec
ret
cwtl
jo
pop
xor
icebp
push
mov
cmp
push
mov
fdivr
in
mov
cmpsl
push
xor
or
movsl
xor
loope
lods
push
cmpsl
mov
jl
jo
ret
and
decb
stc
pop
repnz
cmp
test
jae
cmpsb
cmpsb
and
sub
popa
pop
jno
or
mov
icebp
nop
pop
push
out
jecxz
inc
pop
jmp
jmp
addb
pop
fwait
aad
rorb
inc
dec
pushf
fstpt
gs
sub
sbb
cltd
adc
xchg
mov
xor
adc
mov
and
nop
adc
loope
stos
in
imul
sbb
xor
dec
xchg
add
dec
repnz
adc
xchg
jno
movsl
clc
popf
mov
das
popa
jmp
add
sub
ret
js
jg
dec
lods
fs
movsb
dec
cmp
data16
jp
cmovno
and
sbb
jl
adc
adc
and
xor
cmc
sub
leave
and
aam
out
cs
cwtl
out
and
adc
and
dec
cmpb
pop
mov
push
and
inc
ds
outsl
dec
xchg
fld
mov
cmpsb
cmp
add
cmp
push
or
jmp
inc
push
and
mov
push
test
sahf
in
sbb
das
mov
mov
stos
push
out
add
lods
ror
jns
inc
pop
inc
inc
lods
dec
ret
adc
mov
inc
xchg
pop
jle
das
mov
test
and
jl
mov
pop
clc
or
mov
cltd
es
popf
mov
mov
push
sub
hlt
out
jno
add
into
or
adc
inc
push
pusha
jbe
out
test
stos
jbe
push
sbb
ret
std
add
add
sti
leave
or
or
or
add
ret
mov
sbbl
jnp
sti
dec
cmpsl
add
dec
dec
test
fwait
add
jo
add
dec
shrb
fcomi
popf
xchg
fucomip
aad
pop
cmp
stos
pop
ljmp
out
add
jle
cli
lret
arpl
adc
push
jl
sub
dec
pop
pop
repnz
jge
pop
inc
sub
lds
test
inc
in
ljmp
cmp
in
push
ljmp
xor
lret
cmp
cmp
mov
add
mov
out
pop
mov
mov
xlat
cmp
scas
mulb
mov
mov
jae
push
inc
mov
int3
ret
adc
cmp
dec
sbb
jne
fimuls
mov
sub
cli
inc
in
jg
mov
or
inc
sub
cld
lret
mov
mov
lea
push
shr
or
out
fldz
imulb
fnstsw
xor
dec
xor
xor
rclb
or
sub
into
mov
loop
aam
lea
lds
fsubr
push
fwait
dec
pop
mov
xchg
jp
mov
pop
xorw
inc
dec
mov
mov
iret
dec
jl
mov
das
andl
xchg
lcall
push
lds
lahf
pusha
sub
fs
jg
mov
popf
pop
frstor
cmp
out
out
ja
inc
aaa
dec
jns
or
jo
jecxz
je
ljmp
mov
xor
pusha
xor
in
icebp
mov
pop
sarb
jnp
xchg
sub
pop
sub
loope
mov
push
add
push
sub
fucomip
addr16
fwait
sbb
add
add
sub
std
jnp
inc
cltd
dec
testl
cs
jno
mov
inc
mov
fwait
paddq
pop
stos
or
cltd
xor
imul
jge,pn
mov
jge
mov
dec
push
or
divb
cltd
jle
cmc
mov
loope
sbb
mov
lods
or
inc
sbb
shrb
dec
push
pop
adc
adc
xor
into
xlat
xor
inc
in
mov
cmp
jecxz
repnz
outsb
fstpt
push
lcall
adcb
fs
sbb
roll
rep
leave
and
jns
xorb
test
subl
test
mov
ret
aaa
in
cmpsb
shr
mov
movsl
cltd
sub
scas
loop
dec
repz
test
jns
lret
daa
leave
xchg
test
popa
ret
lret
sub
mov
aaa
sub
dec
je
jne
cmp
out
cs
lea
dec
and
int
pop
adc
mov
inc
dec
jl
xchg
mov
lds
fbld
xor
jmp
jp
mov
mov
jmp
sub
or
lret
jmp
cmc
adc
movsb
push
push
push
loop
cs
xchg
jns
inc
pop
pop
pop
cltd
dec
push
jns
jns
add
sub
add
outsl
cmp
call
sbb
push
dec
xor
sub
inc
inc
mov
in
pop
lods
testb
xchg
dec
pop
jnp
jne
pop
xchg
mov
sub
stc
repz
mov
jmp
mov
in
mov
xchg
cld
mov
adc
rcrl
imul
out
test
sub
add
fs
xor
mull
add
inc
cmpsl
add
mov
rcrl
repnz
cwtl
jl
sbb
testl
add
add
add
insb
sub
outsl
daa
insl
push
addb
cmp
add
std
add
add
inc
jp
gs
jmp
into
mov
mov
xchg
insl
aad
cltd
xchg
addr16
shlb
fmul
xchg
add
data16
or
out
lods
jns
sub
sbb
and
inc
sbb
test
ja
pusha
daa
jno
sbb
test
push
cmp
cmp
inc
cmpsb
or
andl
in
mov
testl
mov
mov
test
mov
psubsb
into
push
mov
sub
insl
or
jae
and
jecxz
mov
or
testl
jl
frstor
outsl
pop
mov
pop
in
dec
icebp
or
bound
pusha
sahf
arpl
cs
adc
rorl
xor
adc
or
or
std
je
aaa
xorb
sub
insl
xchg
outsl
inc
jle
push
ret
mov
fisttpl
xchg
movsb
and
xlat
inc
xchg
adc
xchg
faddl
xorl
mov
xchg
fwait
xor
push
outsl
push
mov
push
movsb
fcompl
dec
scas
in
bnd
in
outsb
dec
jne
movb
xorb
cwtl
addb
adc
cmc
push
xchg
in
fcompl
xorl
dec
adc
mov
pop
std
roll
mov
xlat
aam
mov
cmc
out
sbb
cmp
jae
out
rolb
shrl
mov
push
mov
pop
sti
rcll
push
or
push
jecxz
mov
lret
popa
xor
rcrb
or
cmp
lock
ss
das
lods
mov
push
xlat
mov
inc
in
hlt
out
xchg
push
enter
hlt
mov
mov
pusha
push
xchg
or
add
add
pop
and
mov
out
leave
enter
sbb
lahf
enter
add
add
inc
fs
cwtl
jno
and
and
sti
lods
add
lds
outsb
hlt
jbe
jge
lret
jbe
or
hlt
nop
xchg
dec
imul
mov
outsb
or
jbe
addr16
js
stos
mov
repz
and
xor
cwtl
mov
pop
shrl
mov
xchg
push
std
out
imul
fwait
push
jg
fistpl
or
rclb
imulb
insb
mov
outsl
aam
sbbb
xchg
push
xchg
mov
push
adc
ret
call
cs
jno
push
adc
aas
lret
cmp
aaa
fs
roll
shlb
xchg
jmp
adc
cmp
movsb
aad
sub
mov
sbb
xchg
mov
push
popa
and
scas
mov
xor
scas
pop
sub
fs
push
ljmp
rclb
add
adc
pop
cmc
cmp
mov
lcall
dec
sbb
mov
jmp
add
fisubrl
cmpsl
mov
dec
xchg
arpl
sub
in
insl
out
sbb
dec
and
mov
scas
mov
jnp
sbb
insl
ja
jne
pop
push
out
lock
mov
pop
mov
iret
leave
xchg
pusha
dec
xchg
lret
push
jle
dec
lock
ljmp
es
push
push
mov
out
sbb
aad
aad
test
inc
dec
cmpsl
aam
pop
mov
addr16
into
xchg
int
out
push
push
fdivs
push
lcall
ds
or
sbb
jl
or
mov
std
fidivrl
sub
xorb
or
xchg
cmp
test
jg
mov
cmp
cmp
xchg
sti
cwtl
xor
lods
cmp
fsub
iret
test
lcall
out
add
add
cmp
mov
cmp
out
lret
std
add
add
mov
mov
sub
cli
adc
mov
inc
lcall
js
ret
test
mov
test
sbb
cmp
push
imul
movsl
push
aad
aas
popa
or
push
xchg
das
std
lods
pop
out
das
addr16
mov
sub
pop
and
loop
jp
inc
sbb
int3
daa
in
imul
push
or
lahf
mov
xchg
dec
out
sub
inc
pop
and
ds
into
adc
icebp
sbb
mov
jno
pop
sub
fmull
mov
lods
push
pop
cmp
sbb
xorl
xor
rcr
pop
push
mov
pop
stos
dec
xlat
loope
sub
pop
push
pop
inc
and
mov
xlat
call
mov
push
mov
adc
inc
cli
scas
into
push
imul
mov
push
leave
pop
jns
mov
sub
fucomp
sbb
cmpsl
addr16
cmp
es
shlb
dec
xor
dec
int
aam
sbb
aas
xchg
mov
lock
in
sub
pop
sub
loope
add
aaa
repz
jg
movsb
add
fdivl
or
adc
lods
sbb
sub
push
cmp
cmp
in
cmp
push
adc
enter
arpl
push
sub
or
imul
mov
imul
inc
jnp
mov
inc
outsb
shrl
xchg
call
or
test
stos
call
in
sub
jno
rclb
cs
xor
sub
jb
scas
in
push
sarl
ljmp
mov
ja
mov
ret
outsl
adcl
pop
push
xchg
out
add
jg
lods
lcall
popa
jl
stos
std
mov
adc
add
push
ds
outsb
sbb
aam
dec
pop
outsl
sahf
add
int3
add
std
add
add
xchg
aas
xlat
cmp
int3
out
shrl
outsl
sbb
outsb
call
les
leave
mov
add
loopne
push
xchg
xchg
pop
lods
test
loope
mov
mov
mov
jg
mov
cmc
adc
inc
xchg
adc
fwait
loopne
or
aam
fidivl
jo
and
sbb
pop
mov
push
inc
sub
nop
outsl
insl
push
xor
xchg
sub
sbb
jecxz
mov
pop
rcr
repz
movl
mov
cmp
push
add
xchg
xchg
loop
insl
rclb
dec
cmc
scas
insl
repnz
sahf
mov
xchg
testl
movsb
dec
rorb
xchg
xor
adc
fnstenv
daa
and
iret
cmp
sbbb
cmp
popa
xchg
imul
add
bound
inc
inc
mov
cltd
pop
mov
lret
cmp
sbb
mov
push
xor
pop
lods
add
and
movsl
mov
mov
lea
stos
or
dec
jo
popf
ret
inc
std
xchg
dec
aaa
sub
jbe
dec
inc
dec
mov
dec
test
jl
pop
test
loope
insb
bound
cltd
iret
lods
sub
adc
mov
rcrl
aaa
addr16
pop
push
sti
jmp
subb
inc
xor
cmp
repnz
bound
lahf
sarb
add
inc
add
or
roll
jge
enter
or
sbb
pop
xchg
decb
adc
and
inc
mov
cld
gs
rorb
mov
int3
or
adc
xor
xchg
push
dec
jl
pop
push
dec
cmpsl
adc
adcl
add
add
mov
mov
nop
push
mov
sahf
xchg
into
add
std
add
add
or
add
loope
push
inc
jge
inc
mov
xchg
insb
mov
pop
xchg
or
test
shrb
add
sbb
sub
sbb
aad
xor
sbb
xlat
repz
xor
test
cmp
mov
and
out
adc
mov
pop
sub
arpl
push
sbb
enter
mov
mov
mov
std
and
imul
mov
or
mov
subl
dec
push
xorb
xchg
dec
or
lret
jae
or
movsl
xor
out
jg
pop
dec
scas
movsb
aad
scas
cmp
or
test
add
cs
in
add
add
mov
mov
pop
jmp
xlat
hlt
imul
clc
pop
pop
adc
mov
jne
or
rcrl
je
jmp
and
ficompl
pop
aaa
cmp
fcmovu
add
sbb
outsb
mov
sub
adc
popa
fisttpll
repz
inc
neg
out
hlt
pop
into
inc
das
mov
add
sbb
ret
jno
jl
mov
stos
test
jg
aaa
loop
sub
insb
add
gs
pop
and
mov
shlb
into
or
mov
loop
les
mov
sub
sbb
mov
lret
fisubs
jmp
dec
adc
loope
dec
lahf
xor
loop
inc
cmpsl
sarb
dec
push
adc
xchg
pop
push
or
jecxz
enter
int
sti
inc
xlat
movsl
cmpsb
scas
bound
add
pop
sbb
lea
test
mov
inc
xor
add
mov
in
dec
cmp
outsl
xor
jl
rolb
add
add
add
lods
ja
imulb
inc
dec
xor
push
mov
sub
ror
mov
jnp
fnstenv
shr
cwtl
cwtl
loope
imul
inc
jl
xor
push
jo
lea
aam
fnsave
push
data16
push
or
jnp
xor
sbb
pushf
es
inc
fstps
push
arpl
out
add
mov
sub
mov
mov
int3
push
inc
daa
mov
jl
imull
mov
dec
push
clc
fsubr
adc
pop
sti
adc
js
lcall
sub
dec
hlt
mov
lock
lock
mov
dec
fidivrl
out
inc
test
in
mov
scas
cltd
and
or
call
aas
jle
mov
push
push
jge
ja
andb
adc
fsubrs
or
mov
xor
cli
push
cmp
mov
sub
mov
loope
sub
inc
jle
lahf
inc
inc
mov
das
int
jbe
add
inc
pop
mov
push
insl
loop
movsb
xor
add
sbb
mov
mov
pop
pop
add
mov
pop
fsts
fnstenv
sarl
inc
cmp
inc
sarb
add
das
lea
sbb
hlt
mov
jnp
mov
aad
in
pusha
cmpsb
xchg
push
jg
xor
pop
sbb
jl
jbe
out
lret
scas
test
xchg
es
loop
jle
mov
movsl
xchg
repz
negl
dec
add
arpl
xor
popf
add
lods
int3
inc
cmc
hlt
mov
cmc
mov
inc
in
adc
jno
subl
call
pusha
push
add
xor
mov
sbb
add
stos
jo
dec
cli
fldcw
incb
pop
dec
nop
rolb
add
add
add
pop
jge
jno
insl
or
sbb
push
adc
cmp
test
jo
pop
andl
ret
scas
adcb
mov
dec
data16
mov
or
ja
mov
adc
xchg
pushf
sub
in
push
mov
add
inc
inc
dec
pop
das
and
or
cld
mov
js
adc
filds
cli
dec
push
pop
jne
lods
das
js
jne
les
popf
dec
dec
lahf
add
lahf
insb
jecxz
cld
adc
int3
and
sub
stos
icebp
ret
data16
add
es
push
aaa
subb
sbb
mov
pop
add
cmpsb
push
xor
lds
sahf
xor
mov
insb
dec
or
cmp
jge
mov
sbb
xchg
push
sahf
jb
lret
test
add
push
cmp
xchg
mov
iret
add
or
xchg
jecxz
ja
pop
add
xchg
bound
push
sbb
outsl
popa
xchg
cmp
pop
aaa
daa
xor
jg
out
push
cli
fmull
mov
insl
rol
mov
xlat
addr16
icebp
stos
scas
adc
or
dec
fadd
std
adc
popa
aam
xchg
pop
loop
daa
daa
add
mov
or
add
repz
notl
push
inc
enter
mov
pop
xchg
mov
push
inc
js
stc
sbb
mov
push
mov
hlt
sub
push
push
les
and
shrb
add
jo
fs
push
inc
divl
inc
loope
lds
cs
filds
sub
loop
mov
js
push
stc
outsb
inc
orl
mov
mov
inc
imul
dec
push
dec
lcall
cmpsb
and
fldenv
sbb
outsl
and
cltd
cmp
dec
fistl
loopne
mov
xor
sub
das
inc
push
mov
out
mov
fdivr
xor
dec
xchg
pop
xchg
fxch
push
std
add
add
cli
xor
cmp
jnp
aad
adcb
aad
fwait
pop
mov
and
mov
cmp
push
inc
add
push
push
pushf
std
jno
jmp
por
push
or
sahf
out
jno
mov
jmp
xchg
and
scas
test
or
ljmp
outsb
pop
inc
scas
push
aad
sbb
cs
out
nop
pop
jg
mov
dec
aam
sahf
loop
xor
add
stos
dec
xor
jo
jne
mov
orl
addl
lcall
mov
pop
cmpl
rcr
out
add
jle
jno
repz
daa
mov
jle
push
rcl
mov
ss
adc
push
pop
push
mov
cmp
xor
xchg
cli
ret
mov
je
mov
shlb
inc
repz
xchg
or
xchg
cmp
incl
pushf
adc
mov
cmpsl
adc
xor
mov
pop
shlb
int
repz
or
movq
pop
repnz
lcall
daa
lea
mov
jnp
cli
clc
out
dec
sbb
sub
pop
les
xchg
mov
int
jns
jb
insb
es
sbb
repz
leave
negl
jo
push
fdivs
push
adc
cltd
inc
js
movsl
mov
cmp
je
cmp
or
scas
in
movsb
sbb
lcall
jmp
add
add
ficoms
enter
add
mov
sbb
stc
sbb
es
idivb
notb
mov
fsubrl
mov
aas
adc
movsb
std
jb
es
das
pop
lcall
insl
cmc
or
fcoms
out
incb
add
xchg
jl
cld
decl
or
sub
add
std
add
add
stos
xor
mov
dec
jge
or
jg
and
xchg
push
xor
pop
movsl
inc
jbe
fs
cmp
jb
mov
cmpsl
push
outsb
stos
jecxz
ljmp
ja
bound
enter
add
and
fwait
push
iret
xlat
sahf
jg
fcoms
xor
push
xor
test
lods
pop
push
das
fadds
dec
leave
mov
xchg
mov
rcll
add
lea
dec
js
into
loope
mov
jg
stos
sbb
ljmp
sbb
inc
ljmp
sbb
cmp
cld
xor
fdivrl
adc
repnz
pop
push
sbb
jbe
sbb
pop
ja
das
push
adc
ficompl
dec
mov
cmpsb
ret
roll
and
notb
and
mov
icebp
push
jae
fnstcw
mov
mov
lea
movsl
dec
mov
div
outsl
xor
jbe
mov
les
addr16
cmpsb
cmc
fiadds
je
lret
scas
stc
xchg
pop
xchg
pop
xor
in
pop
pop
jge
inc
sub
jae
fsubrl
jmp
ja
cmpsl
fldcw
fs
repnz
or
sub
jne
in
ret
xchg
mov
mov
out
or
adc
shlb
lret
sub
lret
fcmove
push
inc
in
xchg
xchg
insb
xor
pop
popa
mov
sub
xchg
arpl
test
in
out
mov
pushf
ss
xchg
sub
mov
movsl
xor
pop
mov
mov
jb
and
sub
jb
push
xlat
xchg
lret
push
testb
stos
adc
dec
jmp
popa
rcr
or
xor
sub
jl
repz
xchg
call
lcall
jno
int
imul
push
repz
xchg
fisttpl
bound
add
ret
and
dec
repz
fldt
pop
bound
sbb
add
add
outsl
insb
xchg
or
xchg
lock
hlt
mov
xchg
loope
clc
jne
adc
fnstcw
dec
das
imul
addr16
pushl
mov
enter
lret
mov
or
xchg
mov
lcall
sahf
shlb
test
test
adc
sbbb
jmp
fnsave
mov
inc
out
lods
jns
lret
mov
loope
cmp
mov
push
mov
sbb
and
shrb
xor
ret
ret
lret
mov
insl
sbb
aad
sbb
push
pavgw
imul
cmp
or
mov
popa
popf
push
sub
mov
pop
or
sbb
leave
mov
xchg
fsubrl
loope
stc
fiaddl
mov
fwait
dec
pop
xor
outsb
cmp
inc
shlb
or
hlt
fmuls
jp
daa
mov
fs
sub
jmp
push
mov
sbb
les
push
sbb
xchg
cmc
mov
arpl
addr16
movb
outsl
loop
scas
mul
mov
jae
or
cmp
and
jg
in
cmp
jb
shr
mov
xlat
cmp
jl
or
lock
jg
je
in
lods
cmpsb
lret
sub
orb
aad
jg
sar
pop
fsubr
les
or
cmpsb
xchg
adc
adc
jle
cmp
jne
sub
out
out
js
imul
cmpsb
lret
mov
sbbl
adc
mov
mov
inc
dec
in
por
xchg
mov
xor
push
mov
test
clc
out
jne
stc
call
sub
sbb
cld
lds
js
lret
nop
ret
xor
add
lcall
jnp
push
mov
ret
sub
std
add
add
pop
mov
mov
or
subb
mov
int
dec
ds
mov
addr16
int3
mov
push
ds
jecxz
scas
fsubl
and
or
in
xchg
rclb
add
mov
pushf
das
push
shlb
sub
dec
adc
push
and
mov
aas
pop
push
mov
bound
ja
jb
ret
xor
sub
pop
pop
cld
pop
lds
add
cwtl
movups
push
int
stos
nop
scas
aaa
mov
repz
sub
pop
shrb
int3
sahf
fistpl
or
jmp
out
or
mov
mov
vrsqrtps
pop
icebp
dec
mov
fdivl
pop
clc
leave
and
shrl
pop
fnstenv
rorl
mov
or
adc
out
pop
adc
sahf
pop
das
add
push
mov
and
xorl
out
lds
mov
ret
jae
sub
fsubr
xchg
sbb
ret
cmp
repnz
lret
call
cmpsl
add
dec
cmpsb
outsb
adc
fidivrs
shrb
cmpsb
jecxz
test
or
pusha
loope
dec
xchg
orb
test
pop
mov
mov
addr16
les
cmp
jp
or
mov
popf
and
sub
stos
mov
es
mov
cwtl
imul
jne
in
loopne
xor
fsubp
mov
or
cld
push
loop
mov
and
xor
cli
jbe
push
sarb
in
adc
lcall
lahf
lret
add
sbb
mov
mov
xor
mov
stos
leave
cmp
hlt
add
loopne
add
add
idivl
jg
roll
faddl
add
add
add
dec
es
xlat
and
jo
mov
push
cmp
cmpsb
mov
shll
adc
mulb
jl
xchg
sbb
rcr
inc
jae
notl
ljmp
pop
scas
dec
push
lods
or
pop
pop
pop
mov
mov
leave
sbb
or
test
sub
icebp
sub
jo
popa
sbb
xor
clc
fwait
arpl
out
xchg
ret
lahf
cmp
or
sub
jae
xchg
cmp
aad
int
cmp
ljmp
xchg
repnz
ss
loope
repz
lret
rclb
scas
fdivl
shl
jge
nop
xchg
hlt
mov
inc
fmuls
fpatan
xchg
cmp
add
aam
xchg
test
stos
or
push
lret
stos
iret
cmpsb
repnz
lds
inc
add
cwtl
push
xchg
out
aam
mov
aas
mov
mov
fwait
pusha
inc
test
pushf
sub
test
lods
jp
adc
fistl
je
mov
xchg
shlb
xor
fwait
push
xacquire
or
mov
pop
fdiv
rcl
mov
outsb
lret
lret
mov
push
outsb
mov
out
adc
movsl
xchg
mov
ds
push
inc
in
ret
jle
jno
or
scas
adc
push
mov
cmp
inc
push
popf
sub
push
pop
xor
push
je
mov
pusha
addl
movl
push
movsb
inc
adc
cmp
add
add
or
nop
cltd
push
mov
sbb
lods
and
sbb
dec
subl
test
xchg
lcall
lret
bound
push
mov
mov
movsl
pop
xchg
ljmp
movsb
jecxz
lret
inc
xchg
repnz
push
pop
sbb
adc
add
mov
call
mov
mov
add
std
add
add
es
and
xor
loope
arpl
mov
mov
mov
cmpsl
sti
add
fs
adc
fcoms
jo
ffree
es
out
adc
push
jae
cmpsb
sti
addb
in
adc
sbb
pop
sub
pop
or
loopne
xchg
insb
leave
scas
lahf
dec
xchg
mov
or
mov
inc
data16
xchg
mov
fisubl
in
pop
sub
ljmp
gs
or
popf
aas
lods
pop
pop
mov
and
clc
setae
inc
fstl
mov
xor
pop
mov
jne
shl
dec
mov
inc
dec
inc
xchg
in
xor
fiadds
xor
aam
mov
leave
aad
xchg
xor
sti
icebp
mov
test
mulb
mov
lock
lret
in
outsl
lods
test
movsl
cltd
jbe
pop
and
fsubrl
ret
js
fwait
xchg
inc
jae
add
aaa
in
out
popa
xchg
nop
ss
sbb
mov
out
xor
or
fisubs
insb
cmc
dec
cs
in
mov
popa
xor
xcrypt-ctr
cmpsl
cwtl
repnz
pop
mov
adc
inc
faddl
inc
adc
jl
data16
imul
lahf
inc
jnp
or
and
cmpsb
cmp
sti
arpl
xor
mov
xor
maxps
in
stc
jb
xchg
xor
sbb
out
aas
lcall
cs
adc
adc
jg
and
fsts
frstor
mov
lret
in
or
into
mov
mov
cmpsl
cli
aaa
sbbl
rsqrtps
add
jne
or
add
add
ficompl
mov
aas
mov
add
add
add
or
pop
pop
or
test
ss
xchg
pop
add
or
mov
das
xchg
inc
idivb
mov
insb
or
gs
sbb
shll
mov
jp
cmp
dec
mov
push
jmp
aaa
loope
es
add
idivl
jl,pn
lret
cmp
jmp
cmpsb
jmp
pop
orl
pop
lds
ss
sbb
pop
mov
adc
mov
push
and
mov
mov
push
pop
outsb
sbb
ljmp
or
xor
fsubp
test
push
fnstenv
test
loope
or
std
jno
pop
repnz
mov
sarl
inc
arpl
or
mov
xchg
xorb
fists
out
call
sbb
mov
sti
xchg
leave
mov
cmp
je
jmp
out
jl
push
push
ficompl
enter
testl
stos
scas
ficompl
fld
adc
adc
inc
sahf
dec
jnp
bound
dec
push
je
stos
xchg
mov
hlt
lcall
dec
out
rcl
into
xchg
lods
enter
call
fisttpll
push
sub
inc
scas
shrl
insl
mov
iret
inc
arpl
test
inc
xchg
mov
xchg
fsub
xchg
mov
xor
push
mov
cmovne
push
cmp
hlt
inc
bound
into
dec
jp
push
jo
leave
jns
sbb
scas
inc
gs
jno
sbb
pop
ret
mov
cmp
mov
bound
xchg
pop
xor
lds
and
sbb
test
mov
aaa
and
xchg
cmpsb
mov
push
xlat
mov
xor
arpl
mov
add
mov
and
jno
or
dec
aas
xchg
iret
add
add
pop
sbb
cli
inc
cli
mov
or
adc
add
std
add
add
jo
cmc
xchg
in
test
shrb
jne
bound
dec
push
push
jle
test
out
jecxz
mov
inc
mov
cmc
lods
push
shll
shrl
mov
out
mov
cpuid
fsubs
mov
xchg
dec
cmp
sbb
loop
pop
mov
stos
lds
in
dec
inc
test
fcmove
lahf
add
adc
call
sbb
dec
sti
das
mov
testb
push
jb
cmpl
xor
popa
je
scas
test
inc
dec
int3
jp
mov
in
push
test
adc
add
mov
lret
jno
xor
pop
mov
mov
sbb
dec
out
fmull
jle
int
lret
cltd
pop
and
mov
lea
lahf
sbb
rolb
hlt
or
ret
add
cmp
mov
nop
xchg
scas
cmpsl
cs
mov
mov
xchg
add
imull
xchg
xchg
ljmp
sub
pop
add
mov
mov
lret
and
and
fistl
fldenv
lods
rolb
mov
outsl
aad
aam
clc
iret
mov
mov
adc
pop
pop
aas
loopne
pop
push
xchg
jp
or
pop
mov
fincstp
or
cmp
cmc
push
pop
divb
dec
xchg
jns
jmp
push
hlt
stos
dec
repz
std
mov
pusha
push
push
scas
cmp
stc
add
add
jp
loope
pop
dec
adc
ss
cmc
and
push
mov
insb
mov
sbb
xchg
enter
mov
je
push
push
loop
mov
pop
jl
sbb
rcrb
cwtl
into
and
rcrb
adc
push
inc
outsb
insb
inc
rorl
repz
in
cs
add
add
ja
out
push
lahf
ljmp
add
add
add
sub
adc
mov
jo
outsb
sub
lcall
fdivs
jne
adc
mov
push
pop
jne
inc
mov
pop
stos
push
in
inc
in
test
filds
repz
and
sbb
jmp
stos
shlb
jnp
stos
jbe
xchg
cmpsb
iret
andl
out
adc
or
in
inc
xchg
dec
je
sub
bound
test
sbbb
dec
jo
pop
testl
scas
and
scas
dec
jo
inc
sahf
jp
add
inc
out
xor
popw
cwtl
adc
lea
or
es
frstor
rcl
and
int3
pop
insb
cltd
jecxz
jno
adc
rorl
idivb
jp
xor
jnp
insl
clc
icebp
mov
addl
arpl
int3
pop
iret
mov
or
lret
popa
sbb
imul
out
cmpsb
cmp
hlt
je
dec
and
sar
scas
jne
adc
mov
iret
push
push
jb
int3
fmulp
ss
pop
dec
jl
jle
sub
pop
dec
nop
pop
fldcw
dec
mov
ja
cmp
int3
pop
int3
or
in
shrl
add
int
jno
and
inc
mov
add
sub
pop
adc
fwait
pushl
in
inc
sub
lret
iret
mov
mov
push
ret
cs
dec
push
mov
les
aas
pop
pop
jno
lods
in
in
popf
add
dec
mov
pop
inc
or
pop
es
fdivl
and
push
add
gs
je
insl
jnp
int3
mov
cmpb
pop
inc
mov
adc
cltd
inc
mov
cmp
cli
test
das
mov
loopne
mov
sub
cmpsl
add
add
rcll
jmp
push
add
std
add
add
jns
rcl
test
pop
sub
xor
lods
mov
insl
pop
pop
testb
inc
cmpsl
xchg
nop
inc
lret
dec
movsl
cmp
imul
mov
iret
jbe
lods
xor
inc
pusha
test
sbb
mov
jae
push
push
push
js
in
out
pushf
sbb
repz
push
sbb
decl
push
push
arpl
ret
and
inc
lret
shrb
mov
sub
scas
subb
aaa
jmp
xor
adc
lahf
ja
rcrl
movsb
sub
incl
push
movsb
ljmp
inc
xchg
cld
and
inc
stos
mov
sbb
lcall
and
mov
push
jmp
mov
mov
ror
cmc
jecxz
xor
out
add
cmp
push
or
loope
mov
outsl
mov
mov
push
mov
int
lock
aaa
mov
xchg
dec
mov
push
outsb
adc
or
add
mov
int
jp
push
push
hlt
lret
pop
imulb
ja
pop
pop
icebp
int3
sbb
xchg
sub
out
mov
adc
xchg
outsb
push
inc
into
repnz
cmp
lahf
adc
and
push
in
mov
bound
add
rorl
cmpl
jns
sub
out
into
xchg
mov
jle
ror
mov
adc
arpl
add
add
nop
lock
das
into
jg
mov
rclb
cmp
test
xchg
adc
mov
data16
xor
and
jg
aam
in
dec
mov
fsubr
scas
pop
sub
out
pop
lret
xchg
push
pop
or
xchg
imulb
rcrl
add
iret
negb
mov
pop
imulb
call
add
out
sti
shlb
aad
repnz
sub
inc
fiaddl
dec
jo
stos
jle
out
ret
add
js
and
into
inc
stc
lods
sbb
pop
xor
arpl
lret
insl
jle
cmpsl
popf
jge
xchg
sahf
scas
pushf
int
bound
push
fmull
push
iret
iret
cmc
cmp
xor
mov
or
xchg
push
xor
mov
sbb
adc
ret
sbbl
mov
ja
cmpsb
xchg
f2xm1
or
xor
push
mov
addr16
stos
mov
aam
das
push
inc
xchg
mov
or
out
in
pop
inc
xchg
rcll
sbb
dec
lea
cmpsl
adc
mov
mov
popf
imul
in
aam
icebp
jmp
xchg
or
test
leave
mov
mov
je
rclb
adc
popa
and
mov
mov
inc
jge
in
jne
outsb
or
inc
cmpb
pop
scas
sbb
dec
and
outsb
mov
shll
cmc
mov
stos
xchg
xchg
push
in
mov
loop
insl
sub
xchg
sub
jge
mov
jns
pop
cmpsl
and
adc
loope
and
sahf
jns
pushf
xor
and
jno
mov
enter
sub
jmp
repnz
or
lea
dec
sub
cmpsb
xorl
push
add
pop
mov
xchg
out
ret
sarb
dec
inc
in
aad
cmc
iret
lahf
out
jle
cmpsb
rcll
imul
jns
iret
and
loopne
popf
push
push
and
sub
call
movl
pop
lods
or
int3
negl
jp
testl
je
orb
dec
shl
pop
xor
xor
add
push
push
jnp
outsl
jno
dec
mov
inc
imulb
add
add
add
jg
mov
test
push
cmp
dec
adc
jle
sub
pushf
sub
xchg
int3
jp
sub
mov
fcompl
fisttpl
lea
popa
pop
dec
add
or
pushf
iret
ss
mov
cmp
dec
xor
in
in
dec
sub
pop
jp
mov
mov
dec
in
stc
mov
jge
mov
cmp
sarb
loopne
enter
jmp
mov
jp
lds
or
sub
xor
daa
sbb
mov
ret
rolb
lds
xchg
sbb
cmp
ja
push
rol
mov
repz
pop
mov
insl
pop
xor
sub
std
sahf
or
sbb
addr16
inc
and
in
add
mov
push
cld
in
ja
xchg
cmc
fs
inc
pop
in
mov
or
mov
mov
mov
and
mov
mov
dec
fucomp
mov
rorl
fiaddl
sub
jle
or
popa
mov
daa
lret
loopne
adc
mov
aad
cli
test
scas
dec
jnp
mov
sub
inc
sbb
and
sbb
inc
cmp
aaa
cmp
pop
push
and
test
or
sbb
jge
fistl
mov
jns
insl
test
mov
jp
inc
stos
aad
jnp
push
loope
inc
jbe
inc
pop
mov
mov
cmpsb
push
inc
mov
mov
and
fnsave
sub
mov
inc
dec
cmp
loope
aad
es
lods
lods
stos
jmp
shll
dec
xor
adc
loopne
pop
ds
inc
lahf
pop
icebp
mov
add
xorb
jp
mov
xor
push
mov
mov
or
cltd
enter
mov
stc
popf
push
rcrb
imul
add
dec
imulb
xchg
add
sbb
inc
les
sub
adc
cmp
push
aad
pop
mov
xor
pop
jae
fimull
jb
push
jl
or
out
pop
in
jle
mov
sti
xor
test
rcll
dec
push
push
in
dec
mov
stc
mov
std
dec
test
or
rorb
push
or
movsb
xchg
xchg
ss
mov
fimull
in
cmc
push
daa
push
mov
mov
sahf
pop
ja
mov
leave
cmp
les
test
cli
stc
loope
xchg
mov
out
jle
in
test
scas
test
xchg
or
adc
jecxz
add
cmp
jmp
mov
fstpl
pop
inc
call
add
movsl
insb
aaa
rcl
repnz
daa
sbb
pusha
shll
mov
test
arpl
das
mov
repz
mov
lret
sbb
or
sbb
int3
in
mov
popf
cmp
cli
xor
sub
shlb
push
jno
pop
push
rcl
push
andb
jno
and
aas
fisttpl
shlb
rolb
pushf
mov
pop
inc
enter
leave
lcall
push
jae
subb
leave
rcr
xchg
inc
icebp
jecxz
mov
xor
enter
fwait
std
movsb
aam
dec
add
mov
or
mov
sbb
jl
inc
xlat
mov
xchg
or
xor
mov
pushf
sub
fs
xchg
subb
sbb
sub
pop
out
push
push
sub
stc
jo
xchg
leave
sbb
shlb
loope
fisubs
mov
lock
lods
nop
hlt
jl
mov
jne
or
push
stos
imul
lret
jb
push
inc
pusha
daa
xor
int
add
add
sbb
jge
and
dec
bsf
data16
add
std
add
add
or
mov
dec
cwtl
addr16
js
add
ds
int3
push
jmp
sub
fcomi
mov
scas
cltd
jl
cmp
dec
add
add
test
scas
inc
mov
cmp
cmpsl
mov
xchg
daa
push
add
outsb
push
aas
jle
sub
add
pop
sbb
or
fs
fwait
mov
mov
dec
movsb
pop
les
push
sbbl
pop
cmc
shl
push
cmp
stos
xor
bound
sub
lds
or
ljmp
dec
xor
movsl
lcall
arpl
out
sub
mov
mov
or
daa
out
mov
mov
fstpt
out
movsl
repz
in
pop
xchg
mov
int
fnstcw
rorl
nop
adc
or
mov
mov
aad
lcall
or
xor
stos
pusha
mov
inc
bound
sbb
cltd
and
loopne
pop
or
mov
mov
lahf
lret
shlb
outsl
mov
jae
adc
sub
cmp
pop
popa
loope
push
dec
in
stc
movsb
mov
int
xchg
fs
cwtl
inc
int3
add
pop
push
ljmp
or
data16
les
push
imul
loopne
pop
in
adc
mov
pop
repz
sbb
pop
rol
test
lahf
jmp
pop
cmpsb
jmp
gs
xchg
icebp
inc
mov
push
dec
dec
inc
dec
repnz
add
cmpsl
mov
mov
cmp
add
xor
lret
xor
and
add
in
mov
cmc
xor
iret
fwait
shl
sarb
xchg
lods
popa
add
mov
stos
inc
push
or
lcall
or
pop
mov
addr16
subl
testb
add
roll
pop
arpl
xchg
inc
arpl
add
std
add
add
ss
sub
jns
jno
jnp
mov
mov
xchg
pop
rolb
push
push
xor
iret
mov
aaa
ss
add
mov
pushw
aad
lods
icebp
jge
cmp
scas
jecxz
xor
das
mov
shrb
sti
cld
les
aaa
mov
in
mov
inc
and
jl
mov
mov
or
out
mov
dec
pushf
out
xor
xlat
and
lods
addb
mov
inc
cmp
adc
push
cmp
aad
icebp
hlt
cltd
test
xor
sbb
add
pop
jbe
sub
xor
sbb
mov
jl
cltd
and
mov
clc
ja
dec
inc
jmp
inc
movsl
sbb
lods
cltd
push
xchg
mov
test
dec
and
mov
lret
scas
adc
xlat
rcrb
mov
inc
xchg
ljmp
pop
push
push
mov
in
in
repz
popa
jbe
mov
das
inc
je
mov
inc
es
adc
sub
push
pop
frstpm(287
push
or
pop
cltd
pop
xchg
dec
push
incl
in
fdivr
sub
and
xchg
test
xchg
cs
push
xlat
fistpll
lods
shrb
mov
xor
std
clc
jae
pop
mov
into
xor
jae
jmp
xchg
lcall
leave
cs
mov
sub
cmp
iret
adc
push
jecxz
adc
push
cld
jns
lcall
jecxz
aaa
dec
fbstp
test
clc
dec
pop
add
mov
push
push
jb
shlb
mov
xchg
mov
fs
sarl
lds
out
jae
pop
test
push
cwtl
std
out
adc
sbb
pushf
cli
mov
xchg
out
cltd
lret
inc
pusha
repnz
std
add
add
lret
icebp
nopl
dec
in
ja
in
push
cltd
es
sbb
push
imul
jl
inc
mov
inc
xorb
xor
jecxz
jbe
nop
xor
or
aaa
test
mov
cld
push
push
xor
sub
mov
mov
js
mov
pop
and
sub
cld
punpckhwd
in
cs
shrb
stos
test
mov
orl
lcall
push
pop
loopne
push
or
xor
sbb
adc
ficompl
mov
negb
repz
xchg
or
mov
scas
and
into
adc
pop
loop
pop
sbb
in
mov
push
call
insb
lahf
jbe
ss
aas
or
pop
jns
sarl
mov
cmpsl
lret
pop
imul
loop
cmp
cld
in
gs
lcall
lcall
cwtl
mov
mov
popa
mov
pop
insl
inc
andb
test
push
sbb
aad
fst
push
dec
ss
mov
and
rorl
sub
imul
divb
add
dec
adc
add
movsb
sub
add
push
push
mov
adc
popf
cmp
sub
adc
push
test
push
js
mov
cmp
out
je
insl
add
lds
mov
mov
cmc
xchg
cmp
mov
adc
jno
ds
insl
adc
call
mov
jmp
int
xlat
jl
xchg
mov
lods
push
pop
pop
das
sahf
pop
cwtl
jbe
and
call
lret
movsb
cmpsb
mov
fcmovnbe
inc
sbb
adc
int
int3
and
cmc
mov
fwait
in
insb
dec
cmpsl
add
and
or
add
add
fisubl
and
mov
mov
std
add
add
sarb
or
insb
mov
shl
xor
xchg
arpl
inc
pop
xor
xchg
bound
mov
mov
xchg
xor
add
arpl
nop
and
mov
in
cmp
add
mov
pop
shl
insl
mov
dec
jmp
movsl
pop
xchg
lahf
test
push
dec
push
lret
and
sarb
fbstp
bound
arpl
in
push
push
dec
js
xor
ficompl
sbbb
pop
jbe
jmp
sbb
popa
jp
fisubl
inc
sbb
fdivrs
add
les
or
fld
cmp
fimuls
movsb
push
xor
xorl
mov
nop
sbb
inc
es
stos
dec
sahf
ss
jne
or
mov
int3
popa
std
scas
arpl
and
fisttpl
movlps
pop
stos
stos
leave
inc
mov
xor
mov
filds
jle
imul
in
xchg
xor
ret
jmp
cmp
pushf
or
sbb
jns
xchg
xor
int
add
push
push
cli
fcoms
popa
movb
dec
mov
jg
ficomps
testb
dec
and
aas
dec
fstpl
pop
xchg
sub
sub
mov
mov
scas
jnp
fsubrs
aad
pushf
xchg
fisubl
push
fildll
adc
mov
enter
and
in
pop
or
subb
je
add
int
push
push
insl
in
sbb
pop
lods
xor
in
pop
dec
xchg
inc
inc
stos
pop
imul
push
adc
das
xchg
ds
pop
pop
cli
rolb
lods
std
ljmp
inc
sub
and
pop
pop
push
movl
ret
imul
push
add
add
iret
cmc
sti
pushf
and
push
push
pop
sti
mov
std
add
add
push
mov
rcrb
insb
adc
adc
subl
addr16
inc
shl
test
loope
mov
fimull
push
push
fchs
cmc
inc
mov
sbb
nop
jbe
mov
jmp
cmp
xor
dec
inc
testl
push
pop
mov
sbb
mov
or
jne
arpl
or
add
add
jb
lds
imul
ss
rcr
dec
xchg
pusha
mov
mov
xor
sub
mov
xchg
fldl
push
mov
xor
pop
jnp
xor
ja
popf
fwait
lods
xchg
jp
test
cwtl
cmpb
xor
pop
jp
lcall
xor
cltd
aam
push
jno
xor
xchg
mov
popf
cmpl
movsl
jecxz
or
out
test
sub
in
inc
popa
cs
inc
sub
push
mov
test
or
pop
pop
dec
dec
loopne
push
xor
lret
mov
outsl
arpl
ficompl
pop
popa
lea
in
ss
arpl
mov
loop
xor
mov
push
cmp
jmp
hlt
ja
scas
out
sub
fists
incb
jmp
into
push
out
cld
cmpsl
or
repz
test
inc
mov
not
or
push
je
lea
bnd
cmp
enter
adc
in
in
and
adc
lds
pushf
insl
push
mov
lret
xor
jns
lret
stos
sub
adc
add
adc
add
xor
mov
mov
fcompp
clc
aaa
mov
idivl
or
in
sti
xor
mov
jae
sub
dec
jmp
iret
or
std
cmp
stc
jl
stc
jne
inc
into
lcall
add
in
adc
or
xor
das
xorl
shll
push
xor
lcall
test
adc
jmp
mov
das
push
mov
or
out
gs
loop
cltd
mov
inc
cli
mov
xchg
add
insl
in
pushf
xor
mov
xchg
popl
adcb
ja
mov
rcrb
and
mov
lahf
cmp
mov
push
scas
sti
cli
stos
cli
xchg
stc
out
jecxz
and
inc
push
lret
cld
sbb
lods
dec
shl
sub
cmpsb
sbb
mov
movsb
jne
jle
stos
sbb
hlt
fadds
lahf
jp
inc
push
pop
es
loope
std
fildll
in
or
add
pushf
fwait
daa
xchg
fwait
out
ja
popf
jne
fistpll
jge
std
push
popa
fstps
push
xchg
mov
outsb
pop
pop
lods
pop
pop
adc
xchg
dec
dec
adc
sti
test
out
dec
insl
and
outsl
test
shrl
cmp
dec
mov
mov
cwtl
push
ffree
sub
sub
leave
das
cmovl
pop
push
cli
pusha
loop
adc
aas
bound
out
push
cmpb
lea
and
dec
dec
inc
enter
mov
jmp
repz
fdivs
jnp
or
lock
dec
sahf
pop
pop
loope
push
mov
jns
ss
out
pop
push
cmpb
in
push
iret
pop
push
dec
mov
test
jge
push
or
add
cmp
cli
out
cmp
mov
movl
fdivrs
or
rol
movsl
imul
xchg
cmpsb
add
add
cmp
test
push
cli
add
sbb
add
mov
std
cmp
pop
pop
mov
rcll
.byte
