push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
repz
adc
adc
adc
mov
fisttpl
lds
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
pop
pop
sbb
push
negl
in
enter
mull
mov
mov
outsl
lods
sub
pop
xor
ret
bound
arpl
dec
sub
test
jecxz
pop
mov
and
jmp
jp
lret
cltd
pop
xchg
xchg
pop
testb
ret
sub
xor
and
cmp
xor
pop
jecxz
and
test
mov
and
outsb
jnp
or
or
shlb
leave
aaa
ret
int
movsb
push
jmp
xchg
cld
push
pop
cmp
mov
shlb
mov
lods
lret
cmp
nop
pop
shlb
je
int3
icebp
push
dec
sub
push
inc
jae
rcr
push
jns
sub
jb
mov
sub
mov
xchg
and
push
adc
lods
pop
fsts
cwtl
jbe
inc
jle
jge
xorb
sub
mov
int
lods
inc
enter
jbe
popa
out
jae
stos
je
mov
enter
sub
cmp
jge
jle
cmp
fmul
call
xchg
mov
into
rcrb
jle
dec
idivb
dec
loope
icebp
add
scas
cmpsl
or
sbb
ficoml
es
jbe
divl
mov
aas
or
cmp
pop
lock
xchg
pop
push
mov
imul
int
addb
in
push
push
testb
std
outsb
xor
or
popf
jge
adc
aaa
lods
cltd
add
jo
jmp
inc
pop
and
mov
add
stos
scas
sti
xor
je
fstpl
xchg
in
clc
mov
in
jbe
shr
fmull
xor
in
repnz
or
call
push
aas
in
lods
lods
aam
bound
mov
add
or
repz
ucomiss
push
das
push
fildll
xchg
shlb
adc
jnp
nop
mov
lret
jg
jns
mov
popf
addr16
cmpsb
cmp
push
xor
ret
mov
jnp
or
lods
cltd
cmpsb
add
mov
cmpsb
pop
mov
out
fnstcw
inc
dec
stos
push
mov
mov
mov
jecxz
mov
jmp
mov
and
ss
fstpl
test
std
fwait
iret
dec
add
sub
jge
fs
and
hlt
shrb
loop
insl
sbb
adc
leave
imul
arpl
fnstsw
adc
clc
xor
mov
mov
push
sbb
inc
mov
aam
sbb
cmpsl
in
repz
idivl
daa
aam
push
add
fnstcw
xchg
sahf
in
adc
int
add
adc
sarl
pop
mov
push
push
mov
jmp
jge
mov
pop
data16
inc
and
jns
inc
add
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
out
push
adc
adc
adc
adc
adc
jno
out
fs
adc
cmpsl
lret
in
insl
jp
pushw
pop
pop
xor
ja
scas
rclb
mov
lcall
jp
ficompl
notl
ss
add
icebp
bound
dec
jle
in
xor
lahf
mov
push
mov
jl
lods
or
jle
mov
js
mov
imul
aam
icebp
daa
loope
mov
jbe
rolb
loop
mov
test
jecxz
mov
flds
mov
repnz
sub
sub
or
call
jbe
imul
negb
inc
aaa
mov
inc
pushf
adc
je
bound
inc
inc
pop
jmp
into
cmp
add
dec
jp
and
inc
arpl
mov
mov
icebp
mov
pop
push
inc
xchg
imul
xchg
xor
push
nop
iret
add
fildll
pop
mov
lcall
inc
jmp
push
lret
fistl
je
xor
movb
rcl
popl
stos
sarb
xchg
lret
jl
sub
pop
call
shlb
dec
fcoms
pop
xchg
sub
mov
cmc
adc
jl
inc
xchg
adc
in
popf
push
adc
aam
sub
bound
jbe
lods
pop
mov
jl
testl
jecxz
cmp
fcomp
mov
sub
xchg
repz
or
mov
xchg
pop
dec
push
xor
adc
out
aas
and
push
bound
movsl
xchg
xor
lahf
orb
gs
xor
in
cmc
push
mov
jecxz
jnp
mov
dec
js
sbb
rolb
vcmppd
pop
adcl
xchg
stc
inc
imul
sbb
xchg
leave
dec
ret
cmp
xchg
jns
sub
xchg
push
repz
mov
push
out
pop
imul
lahf
xchg
cmp
adc
xor
xchg
ret
mov
in
push
pop
cmc
dec
daa
push
or
cmp
outsl
pop
or
cmc
jns
fidivrl
push
es
or
xabort
cmp
adc
push
outsb
shrl
repz
not
movsl
call
xchg
rcrl
push
mull
in
test
dec
outsl
push
pop
loopne
pop
or
test
fisubs
out
iret
cwtl
dec
mov
push
and
aam
or
mov
aaa
ds
jmp
xlat
ret
out
lds
mov
cs
lcall
inc
call
inc
mov
mov
add
mov
sub
and
test
insl
loope
stos
lcall
inc
fildl
add
test
fidivs
sub
in
stos
sahf
xchg
nop
or
lock
clc
dec
inc
movsl
test
push
mov
xchg
mov
repz
adc
repz
imul
pop
lods
xlat
aam
enter
cwtl
sub
cld
pop
std
xchg
or
loopne
or
and
push
mov
adc
push
xchg
inc
cmp
mov
dec
inc
aas
push
xor
cmp
faddl
movsl
push
ja
inc
popl
rolb
insb
inc
mov
fcomi
out
scas
sbb
mov
sbb
and
sub
mov
cli
sahf
call
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
arpl
push
or
adc
adc
adc
sahf
in
pop
xor
pop
mov
adc
mov
sub
into
cmp
push
dec
xor
mov
leave
pop
mov
jmp
xlat
sbb
pop
and
std
cmp
fstps
in
gs
scas
int
jp
inc
add
add
mov
dec
add
jg
jp
in
fwait
pop
push
and
nop
fdivl
lcall
rcrl
cmp
out
imulb
or
dec
sti
and
xchg
pop
adc
sahf
cmp
lret
or
es
cmp
adc
outsb
int3
psrlq
pop
out
push
out
push
lea
cmp
ds
js
mov
js
mov
adc
shll
hlt
ret
or
lods
add
iret
push
sbb
ljmp
mov
ljmp
sbb
adc
mov
push
icebp
jmp
enter
loopne
sahf
ret
fdivp
mov
and
in
xchg
jg
ret
xlat
jge
push
mov
shrb
mov
inc
mov
sbb
mov
aaa
insl
lea
push
mov
imul
add
xchg
cmp
lret
mov
dec
dec
pop
out
adc
cmp
rcrl
inc
mov
mov
cs
int3
dec
xor
xor
fstl
pop
push
repz
dec
cmpl
test
jb
adc
leave
cltd
test
rorb
dec
pop
fstpt
imul
sbb
outsb
cmp
xor
cmpsb
mov
fldl
cmpsb
cwtl
cmpsl
sub
xchg
lods
aas
jmp
add
dec
mov
add
movsb
cmp
dec
jo
push
adc
jns
cmp
das
insl
aad
xlat
les
ja
mov
aas
pop
mov
mov
nop
add
leave
cmp
out
cmc
arpl
and
inc
xor
adc
imul
and
in
jo
std
jp
sar
sub
pop
inc
push
daa
dec
xor
fcmovu
xor
mov
mov
rcl
mov
cmc
adc
in
outsb
inc
inc
shlb
mov
sahf
inc
stc
pop
mov
cmpsb
sub
movd
shlb
adc
jl
xor
or
in
sar
mov
mov
ret
jecxz
add
push
repnz
dec
fsubs
test
jp
test
aaa
push
dec
xchg
mov
pop
pop
hlt
pop
subl
gs
out
xor
into
jmp
jge
sub
into
sti
mov
jecxz
enter
fcomps
movsb
sub
pop
inc
loop
fisubl
and
mov
mov
imul
out
outsl
test
mov
cltd
iret
inc
mov
mov
jbe
cmc
sti
and
int
pop
fcmovnbe
mov
jbe
aad
lods
jle
push
inc
leavew
xor
cmp
push
xchg
jo
loop
adc
testb
inc
pop
mov
insb
in
and
pop
pop
dec
mov
cmp
xchg
sub
add
ret
xchg
xor
fwait
xor
adc
inc
push
or
push
orl
mov
aam
cmp
iret
addl
sbb
xchg
dec
outsl
ds
or
outsl
dec
push
nop
cmp
loop
push
popa
pop
xchg
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
mov
jg
aaa
mov
enter
outsb
xchg
adc
stos
addr16
in
xchg
and
push
fwait
mov
pop
add
mov
xchg
cwtl
call
sahf
outsb
data16
push
sti
mov
stos
popa
jp
mov
arpl
pop
and
lret
add
jnp
or
sbb
pop
push
mov
mov
jo
roll
push
jg
orl
adc
sbb
movb
in
lcall
mov
fdivr
xchg
dec
and
std
jbe
fwait
jae
mov
dec
mov
bound
pop
arpl
mov
sbb
xchg
js
cmp
sbb
imul
adc
addr16
pop
leave
enter
fldcw
cmp
aas
sbb
adc
sahf
dec
add
push
sbb
leave
dec
mulb
jmp
cwtl
sbb
mov
nop
or
mov
lock
mov
xchg
icebp
push
ljmp
push
sub
sbb
dec
aam
dec
shlb
addl
stos
in
fisubl
gs
push
outsl
ss
mulb
sub
and
or
lods
mov
jae
inc
int3
and
clc
insb
jg
rcr
and
pop
lods
or
loope
push
and
cwtl
jl
dec
stos
addb
xor
loope
mov
mov
mov
orl
mov
cmp
jae
ret
rorl
dec
in
cmc
adc
cltd
push
dec
dec
lods
adc
mov
mov
mov
mov
xchg
mov
xchg
cmc
and
pop
mov
mov
sub
jmp
pop
push
adc
into
or
test
dec
inc
sbb
pop
cmp
ficompl
sub
jp
jmp
or
mov
sahf
jno
ljmp
fwait
xor
fsts
jns
ret
push
fisubl
ret
jg
subb
lods
divl
sti
in
jbe
in
cmp
xor
dec
and
pop
je
add
int3
sub
daa
mov
cmp
xchg
mov
and
lds
xchg
inc
push
cmp
xor
jnp
daa
jo
shll
roll
mov
insb
lahf
outsl
and
jns
daa
and
inc
push
shl
mov
mov
je
into
iret
int3
push
movsb
enter
or
fdivrl
jbe
or
daa
mov
push
add
cwtl
dec
inc
xchg
hlt
push
inc
or
mov
jmp
sbb
sub
adc
or
es
in
cmp
repz
mov
mov
or
adc
sbb
push
mov
loop
rol
rolb
nop
add
mov
lods
cli
xchg
sub
data16
dec
sbb
in
sbb
shlb
call
inc
scas
inc
pop
stos
into
push
lds
movsl
cmp
sub
push
mov
repnz
in
push
jne
cmp
nop
add
hlt
ss
scas
call
mov
or
outsl
push
xor
xor
mov
xor
in
sbb
cltd
push
push
mov
sarb
add
adc
in
adc
out
imul
and
cmp
xor
aas
aaa
call
adc
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
stc
es
notl
adc
adc
adc
aad
pop
pop
stc
jns
shr
in
sub
js
rcrb
aad
outsl
mov
jnp
dec
jl
xor
add
stc
lret
fnstsw
pop
inc
cwtl
pop
sub
mov
shlb
push
pop
push
dec
dec
pop
push
mov
in
mov
addr16
pop
mov
and
repnz
push
sub
jg
jo
fsub
mov
ficoml
repnz
sbb
popl
sbb
inc
fs
jo
adc
sbb
mov
xchg
rcr
mov
or
sbb
int
inc
mov
out
and
fisttpl
push
sub
inc
mov
add
pop
es
mov
out
mov
daa
adc
jle
call
push
add
push
adc
xor
mov
mov
sub
pop
aas
mov
in
test
test
sbb
rorb
adc
sti
cwtl
mov
mov
jmp
mov
mov
cli
inc
mov
shrl
cmp
repz
adc
pop
stc
setge
ffreep
mov
or
mov
mov
pusha
les
out
mov
cmp
clc
xchg
ds
inc
sub
adc
jp
mov
inc
rcl
jo
sub
jne
stos
cmc
mov
push
dec
mov
mov
popa
iret
test
out
jns
push
les
push
ja
out
xor
gs
mov
mov
and
mov
adc
cmp
sbb
movsb
pop
ja
out
mov
aas
test
mov
fwait
xor
das
icebp
data16
shrl
pop
add
lods
addb
push
cmp
jns
mov
lea
outsl
enter
and
lock
outsl
jmp
mov
adc
lods
sub
mov
stos
jmp
lods
sub
mull
xchg
out
xchg
sbb
rol
or
movsb
jecxz
pop
adc
or
push
das
cli
jns
rclb
lcall
jg
xchg
addr16
mov
push
insb
inc
leave
jne
push
cli
xchg
scas
xchg
in
test
rol
popw
nop
sbb
sbb
ljmp
shl
push
cmpsl
pop
dec
jmp
ret
int
lock
xchg
rcrb
shl
and
aam
repnz
xchg
mov
xchg
hlt
stos
mov
inc
xor
fcoms
pop
bnd
es
jb
jnp
out
add
loopne
into
push
jno
int
sti
iret
aas
rorb
push
mov
enter
int
aad
ficoms
in
inc
pop
cmp
in
xor
sarl
in
movsl
or
sub
cmp
xor
out
xchg
xorb
xadd
mov
jno
push
xchg
scas
shl
dec
cmp
leave
push
inc
in
bnd
mov
adcb
in
push
pop
repnz
mov
cwtl
sbb
mov
pop
out
inc
fiaddl
popf
aam
mov
int
les
push
cmp
das
xchg
cs
aad
mov
test
popf
sti
mov
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
cmp
out
adc
int
adc
sarb
xor
hlt
in
jb
jp
ss
sbb
mov
cltd
fmul
cmp
add
jne
mov
push
xor
jmp
xchg
dec
cltd
mov
scas
and
stc
insb
jne
mov
mov
mov
sbb
imul
in
rcrl
jecxz
cmc
push
xchg
in
stos
iret
xchg
sbb
xlat
mov
dec
call
fisubl
cltd
jle
jo
mov
xor
jb
pop
mov
xor
push
imul
jne
lret
or
test
in
lods
add
xchg
pop
into
in
push
dec
dec
mov
mov
leave
movsl
pop
adc
cmp
jo
jns
mov
adc
mov
into
mov
js
jo
fmull
ja
mov
jge
repnz
ret
add
xchg
dec
insl
xchg
cmp
lret
mov
xor
cmp
push
test
sbb
ljmp
push
adcl
sub
adc
out
inc
jecxz
test
mov
jmp
xchg
xchg
in
enter
jge
xor
adc
jo
mov
mov
loope
fcmovu
stos
lods
movsb
xchg
add
scas
ss
inc
inc
lock
jp
sbb
shlb
and
in
inc
mov
in
out
mov
aaa
jns
daa
add
dec
inc
in
adc
adc
sbb
mov
push
push
inc
iret
cs
call
clc
push
sbb
dec
test
pop
and
test
inc
std
outsb
lret
push
mov
xor
paddsb
test
xlat
add
scas
insl
stos
adc
aaa
daa
clc
das
jg
sbb
sarb
adc
and
dec
xor
sub
rol
dec
stos
push
loope
outsb
push
pop
mov
test
orb
jno
sahf
cld
jle
test
mov
adc
and
inc
lahf
test
xor
xor
lods
daa
xor
mov
pushf
push
xchg
cmp
jp
arpl
pop
imul
rcll
cmc
pop
jle
jle
addl
ljmp
andl
decb
cwtl
jno
fistps
push
repz
test
and
rolb
js
push
pop
push
mov
sbb
add
cmp
dec
xchg
add
sub
push
minps
adc
outsl
mov
pop
sbb
es
xchg
jge
or
pusha
pusha
jecxz
sbb
out
and
fisttps
xor
stc
add
push
outsl
dec
cmp
adc
or
xchg
lea
arpl
fbld
push
lcall
mov
das
cwtl
adc
mov
rclb
out
loope
shlb
and
fwait
push
jge
shlb
mov
inc
dec
cmpsb
arpl
das
fs
and
addr16
sbb
out
jmp
xchg
mov
inc
inc
or
sti
ja
fbld
xor
adc
lods
xchg
js
ljmp
inc
cwtl
dec
jg
aad
xorb
repz
fsubl
testl
mov
int
fildll
push
add
sbb
gs
lret
mov
cli
imul
into
enter
cmp
loopne
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
push
mov
adc
int
adc
ffreep
scas
loopne
mov
push
xor
testl
cli
adc
cmp
enter
fistpll
aas
mov
pop
jecxz
mov
jl
push
mov
xor
arpl
movsl
mov
push
dec
rcll
xor
xor
adc
mov
mov
rorb
xlat
add
jae
xchg
or
jno
pop
xor
popf
es
lahf
jns
or
leave
xchg
imull
dec
mov
xchg
cmc
adc
stc
cld
cwtl
or
lods
jmp
inc
pusha
movsb
sarl
pusha
inc
fsqrt
mov
fcomi
test
orl
sbb
jmp
out
cli
out
or
mov
inc
lahf
pop
inc
lock
sbb
adc
cmp
mov
cmp
xor
sbb
cmp
dec
imul
cs
adc
jle
xchg
push
mov
sbbb
add
dec
mov
xor
lods
cmc
jecxz
rorl
adc
scas
std
add
out
xor
cmp
sbb
mov
dec
lret
scas
sub
inc
out
and
lods
int
xlat
cmp
ret
push
out
in
mull
cmp
jle
cs
pop
sub
dec
outsl
xchg
mov
mov
sub
mov
adc
push
into
xchg
nop
std
lahf
fiaddl
push
outsl
cld
cmp
sbb
push
add
mov
pop
or
out
dec
add
push
fiaddl
fnsave
dec
xor
mov
repz
mov
add
repnz
sub
popa
aad
adc
pop
jno
add
xlat
call
sbb
dec
aas
mov
mov
mov
and
icebp
mov
push
pushf
or
nop
dec
out
add
imul
fdiv
test
push
or
rol
lret
int3
ljmp
jp
das
push
lods
and
in
subl
pop
and
and
ret
mov
xor
cmpsb
pop
cmpsl
mov
or
push
es
add
jne
add
mov
imul
repnz
subb
and
inc
ret
xchg
jl
insl
inc
pushf
ljmp
mov
jg
sub
movsl
in
mov
or
or
daa
mov
mov
and
movsb
shr
cld
outsb
push
or
out
jge
sbb
imul
xchg
aad
mov
dec
loopne
popf
cmp
and
andl
pushf
xor
jmp
test
xchg
add
pop
iret
jp
sbb
add
pop
std
push
in
jbe
pop
and
fsub
mov
pop
pop
shll
mov
mov
nop
lods
sbb
or
mov
sahf
scas
adc
into
dec
mov
mov
sub
lret
cmpsl
lcall
inc
mov
popa
cld
inc
ds
dec
push
adc
mov
imul
jp
mov
pop
inc
ret
scas
sarl
xor
mov
movsl
dec
out
dec
dec
pushf
mov
cs
add
cld
sbb
jnp
pop
test
movsl
aaa
jno
xchg
test
cld
inc
pop
push
add
jg
insb
dec
mov
mov
fists
test
push
xchg
iret
inc
out
stos
xlat
loop
xor
fs
mov
fistps
in
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
sub
out
adc
adc
adc
cmp
dec
xor
into
ret
pop
mov
jge
and
mov
stos
adc
pop
cltd
mov
jno
mov
cwtl
push
pop
cmp
in
testl
cltd
xor
mov
aam
cmp
movl
aam
sbb
adc
cvtdq2ps
lods
sub
js
add
and
jae
push
adc
pop
pop
mov
add
jp
sarl
jmp
movsl
dec
rclb
insb
jp
ret
mov
xor
jg
xchg
inc
pushl
daa
cli
push
jo
mov
rorl
xchg
xchg
les
sub
js
mov
adc
sub
cwtl
jmp
in
pop
xor
rcrb
fstpl
pop
and
mov
lods
icebp
jns
lods
mov
push
adc
sub
push
fdivrs
sbb
hlt
popl
add
or
cmpsl
mov
ret
jecxz
rcll
add
and
cs
and
cmp
cmpsl
adc
aaa
xchg
cmp
dec
inc
mov
adc
or
mov
jl
adc
jl
out
mov
or
xchg
mov
cs
add
jle
into
xchg
clc
add
frstor
xor
bound
jp
jne
xchg
jmp
andb
lret
jp
aad
xor
movsl
fsubrl
rcrb
lods
adc
jne
pushf
xor
je
pop
in
mov
pop
jecxz
sarl
int3
cmp
mov
xchg
call
in
and
and
jo
movsl
cmp
iret
pop
and
test
sar
mov
int3
or
jnp
out
aaa
pop
ret
jnp
mov
jnp
push
ja
mov
inc
loop
imul
test
or
mov
arpl
pusha
test
mov
flds
into
push
daa
pop
sub
mov
out
adc
sbbl
in
pop
loope
test
cmpsl
sbb
out
pop
xor
pop
cmc
lret
in
test
and
xchg
inc
inc
and
pop
or
xchg
xchg
scas
icebp
dec
xor
cmpl
sub
in
mov
push
pop
push
xchg
mov
pop
fs
push
xchg
fldcw
pop
jge
dec
or
les
jb
mov
jmp
scas
inc
inc
xor
xchg
push
lcall
es
cwtl
mov
cmp
push
sbbl
push
test
minps
push
aaa
pop
mov
cmp
aaa
mov
out
cli
in
popf
pop
fwait
dec
mov
movl
mov
pop
xchg
sbb
iret
sti
fsubl
fbld
xchg
xor
or
jnp
or
and
std
addr16
xor
icebp
clc
jg
add
lods
add
cmpb
pop
mov
push
dec
xlat
aaa
push
mov
mov
mov
pop
test
ljmp
dec
idiv
jo
js
sub
push
adc
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
jb
cmc
stos
ficoms
adc
adc
adc
mov
stc
scas
inc
fs
inc
and
jmp
push
and
int3
mov
add
jge
data16
mov
mov
mov
fstps
pop
jg
jmp
mov
jp
jb
xchg
stos
and
or
mov
shrl
pop
mov
rcr
or
out
and
push
or
xchg
add
adc
or
sbb
das
xor
pop
fldt
sub
and
mov
or
int3
clc
or
jo
push
mov
ljmp
fistpll
cmpl
stos
data16
lahf
jmp
jmp
jl
push
out
sbb
sarl
sub
pop
jmp
inc
pop
loope
stos
xchg
and
and
pop
sbb
lret
push
jle
aas
adc
add
add
adc
push
mov
insl
nop
inc
mov
adc
mov
fistpll
sub
xchg
test
ret
imul
inc
dec
sub
mov
ret
loopne
rcrl
lahf
cmc
push
arpl
and
repz
js
sub
loopne
jl
pop
addr16
mov
test
inc
insl
scas
add
addr16
rcll
lock
je
mov
cld
leave
cld
test
mov
push
mov
leave
leave
mov
push
pop
jno
push
pushf
rorb
mov
lret
pop
loope
jae
pop
into
pop
push
std
je
rclb
pop
pusha
lods
lahf
jg
mov
push
addr16
lret
in
xor
addr16
inc
xor
mov
lds
call
fnstenv
aaa
push
ret
cmp
dec
subb
dec
insb
sbb
xchg
fdivrl
sub
sbb
lcall
sbb
sti
push
imul
and
fldl
lea
pushf
lds
jg
cmp
push
mov
pop
test
shrl
loope
adcb
enter
rcr
pop
pop
pop
hlt
fs
inc
pop
xchg
fisttpll
lret
movsl
fidivrl
mov
xor
shrw
imul
inc
lret
mov
xor
repz
mov
inc
push
lret
inc
aas
dec
push
pop
ret
call
fstpl
cmp
jmp
leave
and
xlat
mov
xchg
vmovupd
sub
test
push
test
inc
icebp
or
shrl
ret
cmpsl
imul
js
ret
jns
pushf
cmp
cmp
test
xchg
adc
out
adc
fs
mov
ds
gs
mov
lds
popa
mov
adc
decl
lock
nop
jle
fwait
lock
mov
cmpsl
jecxz
bound
sub
cwtl
data16
pop
push
ret
push
ret
jp
into
xor
nop
pop
mov
inc
xor
mov
add
adc
inc
mov
leave
sbb
inc
sub
loopne
cmp
adc
movsl
fldl
adc
cmpl
jg
jle
cmp
and
push
jle
xor
dec
popa
stc
mov
push
and
and
insl
mov
xor
cmp
int
jecxz
push
sub
add
lcall
jle
jp
loop
inc
fsubrl
das
cmp
xor
jmp
mov
shl
jmp
fmuls
sbb
or
aam
adc
adc
adc
inc
jb
cmp
adc
push
in
mov
cmp
nop
mov
xor
fdiv
jno
popf
sub
out
xchg
sbb
pop
mov
cmp
adc
movsb
aaa
pop
cmp
xor
fstl
pop
mov
jns
nop
mov
icebp
push
movb
or
aas
push
sbb
rcrb
dec
ret
xor
xchg
and
add
jbe
xchg
imull
js
jae
mov
and
xchg
push
pop
xchg
cmc
inc
aad
enter
pop
gs
mov
popl
mov
int
pop
jns
test
sar
jmp
fisubs
and
inc
xlat
inc
or
movb
xor
movsb
addr16
inc
mov
adc
js
push
aas
jb
push
xor
scas
dec
pop
sub
mov
push
js
adc
dec
jne
nop
fwait
xchg
mov
in
cmp
and
stos
ss
es
xchg
adc
stc
cmp
dec
xchg
cmc
push
push
shrb
lahf
int
add
cmpsb
hlt
jae
movsl
pop
mov
cmp
dec
movl
incl
daa
std
mov
sub
adc
xchg
adc
fs
test
sub
loopne
xor
in
push
push
js
push
cmp
andl
insb
adc
rcll
mov
push
push
scas
push
inc
test
into
sub
into
lret
testl
es
stc
outsl
dec
imul
sti
movsl
xchg
pushl
aad
icebp
lret
xchg
lcall
cmp
popf
jne
add
mov
add
inc
cltd
cmpsb
add
fwait
xor
xor
cmp
jecxz
cmp
js
sar
cs
je
dec
mov
das
mov
lea
bound
mov
sahf
pop
push
inc
inc
mov
sbb
xor
std
dec
pop
mov
jl
test
cltd
or
push
int3
xor
pop
mov
and
and
movsb
mov
push
loope
add
popa
loopne
xor
or
xor
cld
out
mov
dec
hlt
xchg
scas
add
xor
loop
xor
adcl
jb
lret
add
push
inc
jp
pushf
mov
or
jbe
pop
cmp
pop
mov
in
or
inc
inc
ret
movsl
inc
inc
into
lcall
and
mov
and
inc
mov
mov
addps
pop
xor
int3
jmp
inc
mov
and
scas
aad
jmp
shlb
push
mov
mov
mov
xchg
xchg
xchg
int
xchg
xor
int
insb
xor
inc
push
adc
add
decl
jge
cmpsb
lods
clc
jns
iret
cmp
xchg
push
mov
or
mov
mov
cmp
xor
shl
test
andl
inc
jno
adc
cli
cli
inc
and
repnz
push
jg
sub
aaa
insb
pushf
fisttps
insl
cmpb
sbb
jecxz
jno
mov
cmp
jg
mov
xchg
popf
mov
test
insl
es
adc
fisttpll
lahf
test
out
fnsave
lods
out
cmpsb
mov
packuswb
dec
and
add
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
movsb
imul
adc
adc
cs
mov
cmp
popf
mov
sbb
dec
mov
pop
sub
lock
push
das
std
adc
push
lret
hlt
xor
int3
mov
imull
shll
adc
mov
inc
mov
dec
addr16
sub
mov
or
test
addr16
jmp
adc
test
xchg
insb
add
addl
mov
inc
xor
test
pop
fidivrs
ja
push
inc
cmpsl
xor
or
ss
adc
mov
es
ljmp
call
mov
jnp
sbb
leave
insl
stc
xor
roll
cmpsl
mov
pushf
popf
mov
inc
xchg
imul
adc
mov
aam
pop
leave
sbb
pop
frstor
dec
outsb
cmp
data16
or
cmp
sbb
pop
adc
inc
insb
ret
mov
insb
adc
push
inc
xchg
pop
loope
ret
aaa
jecxz
lock
dec
hlt
sub
js
mov
rol
push
subb
cmp
aaa
in
in
test
xor
pop
push
dec
sbb
lods
or
aas
push
in
int3
in
rorb
pop
xchg
mov
push
shrd
inc
popa
sbb
add
sbb
or
adc
jg
sbb
aam
xor
scas
inc
xor
and
mov
aam
fistpll
push
adc
nop
scas
xchg
imul
inc
mov
data16
inc
iret
pop
adc
xchg
mov
rcrb
orl
push
jecxz
xchg
adc
fwait
pop
pop
test
and
pop
sub
lret
test
and
xchg
rclb
cmpsb
iret
test
jl
sub
mov
cmp
mov
pop
repz
mov
dec
adc
outsb
mov
mov
dec
mov
daa
jne
sbb
sbb
shlb
pop
mov
es
jle
sub
mov
int
push
nop
mulb
test
std
stc
sbb
push
out
cmp
or
cmp
sahf
jnp
call
inc
mov
mov
fsubrs
add
icebp
push
lret
push
mov
pop
cmc
or
jmp
push
sbb
jge
cmpsb
je
cltd
pop
or
test
pop
mov
mov
pop
aaa
fistpl
sbb
mov
jno
fnsave
outsb
mov
cmc
outsl
and
jp,pt
push
lds
test
or
repz
xchg
test
push
jne
cmp
iret
push
xor
aad
pop
adc
fists
test
data16
cmp
cmpsb
aas
push
pop
aad
push
xchg
or
xor
outsb
lahf
lods
loop
lea
sub
int
jbe
pop
push
jmp
or
out
xchg
sub
mov
or
lcall
test
or
outsl
add
fdivr
mov
lods
push
enter
arpl
sti
adc
sub
addr16
inc
and
lods
pushf
dec
mov
gs
mov
xchg
sbb
push
popf
scas
pop
sbb
jmp
je,pt
leave
cmp
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
sbb
les
adc
adc
adc
lret
jmp
jmp
mov
jo
mov
pop
add
insl
or
xor
or
data16
stc
js
subps
mov
mov
or
scas
jmp
sbb
outsb
outsb
pop
ret
das
lods
or
pop
scas
jle
addr16
push
mov
sbb
inc
aam
pushf
adcl
or
add
cmp
and
push
repz
ret
xor
cwtl
or
loop
inc
xor
movsl
fidivl
jecxz
inc
cmp
andl
pop
mov
movsl
push
scas
pop
pusha
mov
outsb
shl
add
ss
pop
mov
jbe
mov
mov
hlt
xlat
cmp
negb
mov
dec
pop
cltd
std
test
pop
adc
push
outsl
mov
gs
mov
xchg
xorb
cmc
push
sub
outsb
dec
push
mov
lret
addr16
into
lahf
movsb
paddq
dec
scas
pop
ja
ficompl
push
jl
push
pop
fsubrs
add
movsl
and
mov
sbb
cmp
imull
fimull
push
inc
ljmp
imulb
dec
in
divb
inc
add
sub
pop
mov
aad
xchg
push
sbb
insl
add
jnp
pop
or
leave
aam
and
rcll
popf
jns
xor
shrb
push
jno
sub
sti
test
sti
pusha
push
fadd
sbb
je
icebp
fstpl
jae
out
ficoml
dec
je
idivl
cmp
xchg
sub
or
popf
xor
xchg
pop
sub
push
sbb
jns
dec
lock
cmp
sub
add
xchg
fmuls
aas
cmp
push
adc
fiadds
cwtl
jge
repz
push
pop
loopne
int
fisubrs
mov
mov
xchg
dec
mov
repnz
push
push
dec
iret
pop
push
xor
rolb
in
and
int
jbe
roll
or
mov
fidivrl
popa
pop
sub
and
movsb
inc
js
or
mov
or
lds
hlt
arpl
inc
pop
jmp
shl
insb
mov
loop
and
aas
cmp
fneni(8087
xchg
imul
push
ja
inc
dec
jmp
outsb
stos
shll
inc
imul
push
divb
popa
jle
mov
in
xchg
bound
out
sbb
jge
adc
sub
sbb
dec
out
or
mov
nopl
dec
push
sub
sahf
pusha
push
cmp
pop
in
ja
mov
lods
rcrl
sub
add
aas
cmp
pop
call
pop
in
lcall
gs
fnstsw
lahf
loopne
out
adc
mov
insb
daa
aad
bound
mov
fstpl
cmp
repnz
xlat
sahf
push
dec
push
dec
xor
or
sub
shl
push
outsl
and
cmpsb
mov
sbb
test
fisubl
mov
jle
jne
out
test
shl
subb
mull
xor
adc
dec
mov
mov
add
or
cmpsb
and
push
test
dec
cmp
or
push
ficoms
fwait
mov
inc
jl
sti
jg
fldl
mov
idivl
push
pop
inc
popf
ret
cmc
lret
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
cmp
stos
fwait
ret
int
adc
mov
stos
xchg
and
testl
mov
xor
int
jmp
jg
add
mov
cltd
mov
outsl
pushf
test
shr
xchg
or
movsl
cmp
xchg
nop
inc
jbe
arpl
jbe
mov
insl
rcll
cmp
test
aam
push
cld
loop
fldcw
add
xlat
sub
sbb
stos
pop
icebp
cmp
jo
or
inc
inc
test
mov
jecxz
lcall
fsubrs
aam
jecxz
pop
inc
and
jae
jg
aam
mov
stos
xchg
jl
int
adc
or
mov
dec
mov
ret
mov
rorb
jmp
loope
or
stc
jno
sbb
ds
jg
mov
mov
test
divl
push
sbb
push
xlat
inc
mov
and
or
push
popa
mov
push
popa
int
cmp
inc
call
lahf
imul
cmp
cmp
push
fwait
push
fadds
iret
loopne
les
popf
clc
daa
repz
out
fildl
xchg
out
repz
fnsave
fidivl
pop
fldl
sub
je
sbb
inc
movsl
or
scas
clc
mov
or
push
xlat
js
dec
stos
pushf
sahf
inc
call
mov
js
scas
xchg
hlt
out
test
xchg
frstor
inc
test
xchg
ss
cmp
jmp
xor
inc
or
or
int3
enter
mov
pop
jecxz
pusha
dec
out
loopne
jb
fcmovnbe
add
outsb
test
jge
pop
mov
mov
pop
push
inc
push
in
or
gs
fldcw
cmpb
dec
push
push
mov
into
or
test
popa
stc
sti
inc
mov
insl
dec
push
enter
ja
int3
stc
imull
xchg
add
mov
xor
sub
push
mov
cmp
or
in
int
testl
mov
xchg
xor
add
shrl
sbb
adc
loop
add
int
outsb
fldt
or
pop
icebp
jns
xor
push
nop
adc
xchg
loop
sub
lret
loop
jo
mov
movsb
movsb
cmp
and
and
insb
inc
add
mov
mov
scas
jns
or
add
pop
in
cmp
jns
leave
inc
mov
pop
jb
cmpl
aaa
rclb
mov
push
insb
mov
sub
adc
stos
jecxz
and
clc
adc
inc
les
adc
movsb
stos
fisubrl
es
mov
inc
xchg
lea
adc
test
sbb
and
sub
mov
aam
sar
adc
adcl
int
push
bound
and
sahf
pop
add
adc
pop
movsb
loop
dec
adc
pop
hlt
sarl
es
shrl
and
push
test
push
stos
mov
dec
imul
xor
shr
jmp
mov
jg
sub
lahf
jnp
mov
mov
push
daa
popa
push
sbb
lods
nop
mov
sbb
cmp
sub
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
add
int
adc
imul
push
ljmp
and
pop
cwtl
mov
jle
dec
cmp
mov
jne
pop
nop
pop
jne
sti
jnp
dec
add
jle
cmp
loopne
dec
sbb
xor
or
xchg
push
jne
pop
jl
add
jl
push
arpl
mov
stos
enter
stos
nop
sub
jle
pop
cld
jle
pushf
pop
lret
adc
or
gs
sbb
or
and
sbb
adc
faddl
and
and
mov
js
inc
ljmp
jne
and
test
push
sti
outsb
sbb
iret
andl
lds
add
and
stos
cmpsl
lahf
js
ret
pop
adc
mov
xchg
and
xor
je
sarl
jge
sub
pusha
and
cli
sbb
vpmacsdqh
mov
mov
ret
rolb
adc
pop
lfs
outsl
push
inc
sbb
mov
dec
push
jg
hlt
shlb
xchg
lods
push
lock
push
dec
hlt
xchg
jecxz
dec
ret
pop
dec
jmp
pop
and
jp
sbb
push
inc
dec
movsl
mov
add
and
call
xchg
aaa
clc
loope
mov
cmp
jmp
jl
jl
je
pop
jno
mov
or
xchg
int
push
imulb
jnp
fdivl
jbe
mov
les
push
mov
les
mov
pop
push
in
filds
sarb
mov
ljmp
or
ret
adc
sub
mov
cli
mov
mov
gs
cmp
mov
cli
mov
jge
into
dec
pop
insl
sub
mov
xor
pop
mov
adc
or
inc
pop
rclb
and
push
scas
cmpsl
xchg
lahf
mov
leave
fxch
or
push
andl
dec
lods
in
stos
mov
flds
andl
jecxz
mov
dec
push
lahf
push
xchg
enter
mov
loope
sbb
pop
loop
push
mov
sbb
mov
shll
xor
mov
test
fisubrs
shrb
xchg
or
jecxz
jo
loop
ss
mov
ret
push
test
xchg
icebp
mov
dec
addr16
pop
ds
les
inc
xlat
pop
push
ds
lds
shll
repz
scas
aad
xchg
or
adc
xchg
or
mov
mov
pushaw
sub
ss
andb
test
es
sti
ficoml
fprem1
sbb
or
mov
int3
inc
xor
inc
xor
dec
loop
in
or
inc
icebp
pop
pop
jmp
das
dec
sbb
or
popa
adc
scas
xor
add
cs
xchg
rclb
call
mov
jmp
mov
sbb
push
adc
insb
pop
pop
add
or
inc
fisubrs
lahf
and
ret
std
mov
jmp
ret
and
mov
xchg
jbe,pt
sbb
xchg
dec
dec
scas
xor
jnp
pop
adc
xchg
pop
pop
xor
aaa
mov
in
insb
sub
test
cwtl
xchg
sti
jnp
jae
xchg
test
loop
lret
data16
xchg
xlat
lret
or
cmp
pop
lds
inc
sbb
cmp
cmp
jg
adc
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
in
xchg
adc
adc
adc
adc
xor
adcl
sub
loopne
jbe
lret
push
shr
in
fimull
push
jmp
bswap
xchg
jnp
sahf
popa
test
out
and
cltd
stos
cmp
leave
jns
loopne
ret
adc
add
jnp
mov
mov
jl
cmp
adc
pop
orl
cmpsb
aaa
pop
sbb
jbe
clc
aam
addb
xorb
mov
out
into
and
hlt
lods
cmp
push
int3
aaa
push
ds
jo
iret
movsl
pop
dec
sbb
push
mov
add
ret
adc
pop
push
add
insb
mov
fimuls
mov
repz
cmpsb
xor
sub
jmp
gs
push
push
dec
ds
push
cltd
pop
pop
out
popf
xlat
int3
mov
sbb
pop
xchg
sbb
adc
mov
in
adc
icebp
nop
push
xchg
in
je
push
lea
inc
in
sbb
mov
mov
inc
shlb
cmp
or
divl
fsubl
mov
push
out
and
iret
jne
fisubrl
out
mov
lods
or
clc
jne
arpl
push
movsl
lret
in
xchg
mov
or
xchg
dec
push
outsl
test
test
mov
push
in
je
mov
push
xchg
push
loop
sub
test
dec
cmp
xchg
mov
mov
dec
fstpl
sub
das
mov
cmpl
mov
dec
pop
pop
xor
add
cmpsl
cmp
sbb
jge
fdiv
cli
out
stc
orb
sbbl
mov
imul
cltd
rorl
jp
jecxz
pop
dec
push
mov
daa
add
les
xor
mov
xchg
sub
das
adcb
rol
dec
aaa
fs
pop
test
hlt
xchg
aad
ss
jns,pn
lock
cmp
in
nop
test
mov
fidivrl
jne
cmp
cmovae
sbb
cmp
push
inc
push
addl
pop
sbbl
push
ljmp
fdivrl
sti
push
packssdw
add
lret
icebp
push
mov
jns
jle
mov
ja
add
and
pop
ds
dec
enter
xchg
pop
in
imul
popa
dec
andb
push
fwait
ret
bswap
xor
xchg
sub
lock
insl
shll
insb
mov
sti
add
add
or
cltd
sub
aam
push
jle
dec
lret
mov
mov
xor
ret
mov
push
cli
das
rcrl
fwait
sbb
push
stc
push
jns
mov
push
mov
aad
out
push
sbb
das
push
dec
insl
push
notb
imul
pop
stos
sbb
insb
repz
cmp
xor
aam
dec
cmp
jbe
mov
cmp
add
test
int
faddl
mov
ret
jp
fistps
and
stc
hlt
imul
in
mov
cmp
add
dec
cmp
sub
seto
pop
jb
mov
pop
pop
push
fdivrs
jae
notb
test
shrb
sahf
out
test
divb
and
inc
dec
sbb
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
lods
shrl
adc
inc
xor
sahf
outsb
sbb
clc
jmp
aad
lcall
push
icebp
ret
jge
sub
outsl
push
xor
push
test
xor
fucomp
in
sti
lods
or
xchg
pop
out
shrb
arpl
mov
scas
dec
and
addr16
xchg
lds
ret
cmp
shlb
mov
xor
imul
lcall
pop
std
stos
cli
sub
lret
mov
loopne
and
lcall
popf
xchg
fdivl
mov
or
jecxz
scas
push
mov
jg
inc
fmuls
cmpsl
rclb
pop
cwtl
lods
mov
jo
jns
and
inc
adc
inc
fistps
insl
adcl
insl
popf
imul
jl
cmp
cmp
add
leave
or
xor
mov
fcomps
stos
add
hlt
dec
ja
cmp
movsl
repz
and
popf
mov
ljmp
mov
sub
dec
and
lcall
and
adc
mov
bound
aas
pushf
adc
nop
andb
imul
inc
bound
rcl
in
lods
test
sub
popa
aaa
mov
cmp
cmp
out
and
mov
mov
gs
das
mov
mov
push
and
lahf
sbb
loopne
rcrl
dec
ret
fwait
sub
out
fstl
inc
or
mov
and
fs
pusha
xor
push
out
xchg
fstl
adc
roll
dec
jecxz
jg
mov
fs
mov
shrl
mov
mov
and
aaa
dec
dec
push
adc
loopne,pt
aam
insl
inc
mov
xor
sub
and
cmpsb
and
add
in
dec
int
bound
decb
and
ja
mov
and
xor
outsb
lahf
mov
and
rclb
cmc
fnstsw
iret
dec
jbe
nop
mov
adc
add
dec
mov
lea
punpckhdq
sub
mov
xor
cld
mov
xor
adc
aaa
and
cwtl
lret
scas
in
push
mov
pop
jmp
sbb
push
or
push
push
inc
jbe
sub
mov
bound
pop
xlat
push
add
jg
mov
fsubrp
dec
imul
pusha
addr16
cmp
mov
stos
mov
xor
jl
sub
clc
pushf
shrb
repz
and
add
jno
int3
mov
mov
mov
fisttpl
mov
ja
andl
outsb
aam
push
scas
pop
cs
popf
xchg
sbb
ds
sti
lret
cli
mov
push
fadds
mov
jne
or
sbb
adc
xor
lods
mov
dec
std
inc
mov
cs
aam
jnp
or
jp
fnstcw
rcrl
paddsw
mov
stos
stos
or
shlb
sub
sbb
xchg
js
nop
or
jns
xchg
test
and
sub
dec
adc
xor
sti
pop
mov
scas
pop
addr16
mov
jmp
nop
xchg
jge
push
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
pop
pop
sarb
adc
adc
push
pop
loop
mov
push
push
int
in
adc
and
je
inc
in
mov
xchg
sbb
in
jmp
inc
nop
pop
out
xlat
inc
add
cli
fidivs
mull
nop
fcmovnbe
and
shl
xor
outsl
push
jae
or
pushf
imul
call
push
jecxz
and
cld
and
lret
mov
xchg
inc
in
pop
adc
jno
stos
xlat
cmc
sub
in
arpl
in
inc
cld
jno
sub
xchg
pushf
pop
pop
inc
fwait
jecxz
ljmp
jo
hlt
popa
inc
adc
dec
xorb
add
stos
mov
or
enter
dec
add
lcall
lock
and
iret
cwtl
pop
pop
call
outsb
cmp
or
lds
and
fidivl
mov
mov
pop
dec
fdivrl
roll
and
mov
pushf
sbb
mov
std
jb
out
cwtl
dec
into
pop
and
cwtl
out
out
lahf
je
jb
lret
test
adc
jo
scas
aad
mov
jg
jecxz
cs
xor
outsb
sub
aaa
jle
lret
daa
paddusw
out
out
out
add
jmp
push
fs
leave
out
mov
push
scas
inc
mov
push
and
and
inc
or
cwtl
inc
js
mov
lcall
add
jns
cltd
xchg
lret
push
aas
xlat
jmp
jle
shll
mov
sbb
mov
jl
fidivs
adc
cmp
nop
jbe
lcall
fcomi
push
pop
jecxz
testl
bound
sti
pop
jnp
mov
or
je
mov
mov
insb
mov
adc
or
leave
ljmp
test
outsl
add
fcmovnbe
dec
dec
fs
add
nop
das
hlt
pop
xor
divb
jle
js
inc
push
imul
mov
and
in
imul
add
push
outsl
in
pop
das
push
rcrb
xor
cmpsl
mov
clc
add
add
inc
adc
pop
int
and
es
ja
push
sarl
dec
psraw
inc
shld
in
sub
push
mov
pop
or
mov
add
xchg
push
fisubl
mov
and
stc
scas
jb
push
adc
jmp
ficomps
test
in
jecxz
mov
test
push
cmp
rorb
shlb
sbb
push
add
ror
dec
ja
xor
stc
dec
mov
mov
pop
xchg
xor
insb
jg
and
sbb
shl
inc
loope
in
and
insb
mov
ljmp
aam
insl
hlt
lds
mov
xchg
xor
addr16
ljmp
and
outsl
es
mov
fnstenv
or
push
dec
mov
mov
xchg
fs
pop
dec
lock
cld
scas
fsubrs
push
push
movsb
sub
mov
mov
adc
aas
out
call
xorl
mov
mov
sub
cwtl
popa
int
dec
arpl
jge
jo
jge
adc
lcall
imul
rorl
lods
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
cmpsl
int3
lods
sub
adc
adc
mov
test
mov
mov
sbb
hlt
into
pop
inc
rcr
ljmp
add
inc
sbb
jns
shrl
aam
push
in
sbb
inc
dec
cmp
repnz
std
lods
adc
and
xchg
mov
mov
stos
dec
or
mov
repnz
aaa
sbb
test
out
inc
jbe
insl
movsl
pop
arpl
xchg
pop
fisttpll
adc
movsl
js
inc
and
jno
mov
adc
cwtl
pop
cwtl
pop
and
mov
and
or
mov
sbb
pop
nop
scas
loope
and
mov
pusha
adc
cmp
or
pop
dec
scas
aas
cmp
int
mov
pop
es
xchg
sarl
push
call
and
push
ret
lcall
push
popa
pop
cmp
popf
xor
mov
xchg
xor
adcl
and
lret
imul
mov
mov
insl
jns
adc
cld
lea
idivb
fdivr
push
fistps
fcmovnb
into
push
adc
sub
cli
mov
cmpsl
popf
test
push
das
mov
and
jge
mov
jb
mov
jb
pop
iret
cmp
push
inc
jmp
dec
mov
push
sub
lret
sti
ret
in
push
jge
lcall
adc
mul
int
jmp
push
mov
cmp
adc
inc
xor
out
pushf
mov
sub
daa
in
mov
mov
push
sub
shrl
and
and
jmp
sub
popa
mov
mov
shl
aad
je
cld
xchg
mov
lock
lret
lcall
rcrl
mov
mov
lahf
ds
into
lea
push
xchg
jge
mov
int
xor
dec
and
les
inc
mov
inc
mov
popa
xchg
jecxz
adc
lret
sahf
and
iret
out
sbb
adc
les
mov
inc
fidivrs
in
sbbb
lods
mov
and
cmpsb
push
pop
movsl
into
push
xor
adc
ret
shrl
and
loopne
cmp
mov
jne
and
or
andl
iret
cwtl
mov
push
dec
outsl
pop
repnz
shll
std
mov
jmp
push
or
testl
shll
dec
push
fadds
push
in
je
mov
stos
cmpsl
jecxz
fwait
rcll
in
lock
pop
jmp
daa
jae
popa
out
dec
test
cwtl
inc
pop
jecxz
jmp
cmp
iret
sbb
adc
pop
mov
decb
ror
pop
push
icebp
cs
or
fimuls
cmpsb
jae
adc
es
mov
pop
sti
cmpsb
add
cmp
mov
ficomps
fstpl
inc
inc
mov
and
xor
out
mov
add
out
popf
in
pop
int3
push
stc
lret
lret
dec
out
add
sub
fsubs
mov
outsl
mov
jecxz
scas
jno
pop
out
cltd
xchg
ret
sbb
mov
push
cmp
pop
vorps
push
sub
xor
test
mov
out
push
mov
mov
popf
sub
mov
icebp
mov
push
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
mov
call
dec
fxch
xchg
add
fistps
sub
mov
add
outsl
cmp
fdivrs
mov
les
inc
cmp
pop
call
xchg
pop
int
ret
or
lods
or
repz
or
xchg
test
push
in
pop
adc
out
jmp
dec
push
fstps
mov
mov
repnz
xor
xchg
fs
or
loope
call
int
mov
push
mov
jmp
or
pop
addr16
lret
push
mov
repnz
ret
xor
or
out
push
xchg
int
mov
into
dec
cltd
sub
insl
sbb
ljmp
xchg
or
push
es
pop
dec
push
jmp
mov
in
add
xchg
test
outsb
loop
jbe
aam
and
push
mov
insb
ja
jnp
lock
jge
pop
inc
lahf
popa
xchg
jp
es
imul
xor
je
and
jb
cmpsl
add
inc
fidivrl
stc
sbb
sub
shll
les
cmp
nop
out
das
test
fnsave
cmp
push
mov
into
scas
pusha
or
mov
sarl
pop
or
decb
jnp
test
add
popa
sbb
popa
sub
popf
and
mov
out
sbb
and
divps
out
cltd
adc
mov
dec
lea
int3
and
aam
sub
in
sbb
jb
push
leave
movsb
mov
sahf
mov
and
jle
inc
mov
adc
xor
cmp
or
sub
imul
loopne
jnp
in
mov
jae
mov
hlt
int3
dec
inc
shl
or
shrl
icebp
adc
ret
seta
push
mov
lret
call
jge
cmc
mov
jo
dec
jbe
jbe
add
repnz
lds
lahf
mov
mov
push
test
sahf
stos
rclb
mov
mov
fildll
xor
sahf
jge
into
daa
xor
ja
sub
sub
mov
and
das
sub
pop
dec
imulb
mov
or
js
arpl
pop
rclb
mov
in
arpl
push
xor
xor
and
ficomps
decl
out
fnstsw
inc
mov
ljmp
lea
inc
jl
test
pop
add
xor
stc
shll
stos
xchg
dec
outsb
inc
sub
pop
xchg
push
jae
ret
cltd
outsl
cmp
jmp
dec
mov
adc
mov
push
idivl
mov
xor
add
sub
xor
and
xchg
daa
inc
sarl
pop
sbb
movsl
pop
inc
inc
jp
ds
pop
popf
and
pop
movsl
js
faddl
and
out
add
sub
dec
jo
pop
adc
mov
loope
enter
imul
es
leave
add
adc
mov
mov
pop
lahf
xchg
ret
dec
out
inc
out
mov
push
insb
dec
out
outsb
inc
cli
mov
icebp
or
jae
jno
addr16
dec
xor
push
inc
pop
popf
ds
adc
jne
jns
pop
ret
push
out
dec
cmc
mov
ror
scas
inc
xchg
imul
bound
insb
jnp
mov
xchg
fisubl
lret
iret
lods
lret
cltd
insl
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
les
int
adc
or
loop
pushf
jns
sbb
loop
push
xorb
jns
fisttpl
lock
fwait
test
cmp
dec
out
lods
adc
push
sub
stc
xchg
stos
dec
jae,pn
insb
repz
push
mov
xor
sahf
popf
inc
sahf
and
sti
gs
jmp
xchg
push
jnp
clc
test
pop
add
pop
mov
xor
push
stc
cmp
loopne
cli
loop
sbb
mov
push
sub
jmp
xchg
mov
dec
ss
or
icebp
mov
inc
push
and
mov
xor
sub
xchg
pop
adc
push
mov
mov
adc
fistps
push
test
add
lods
pop
mov
lahf
jbe
sbb
push
jmp
jge
pop
dec
call
sub
fmul
xchg
out
lcall
mov
das
mov
in
subb
mov
dec
call
dec
aas
sbb
data16
xchg
xchg
repz
lods
jns
xchg
add
xchg
jp
sbb
sbb
push
xchg
enter
sub
mov
or
pop
xchg
add
ret
jg
lea
testb
jnp
rorl
and
xor
mov
pop
mov
push
mov
icebp
dec
shrl
stc
push
and
psrad
push
xchg
push
jns
or
mov
adc
push
pusha
pop
scas
hlt
arpl
adc
imul
mov
int3
data16
cmpsb
jmp
stc
lods
xchg
or
mov
fbstp
jbe
nop
fwait
jl
inc
push
pop
stos
out
sti
icebp
push
adc
stc
js
neg
sti
ljmp
enter
imul
daa
xor
cmpl
les
scas
testb
sbb
jae
xchg
mov
hlt
adc
cmp
mov
outsb
mov
add
mov
adc
dec
adc
and
ret
shlb
cmp
adc
push
insb
sar
insb
out
popa
mov
loopne
addr16
jge
or
iret
mov
or
jae
test
notl
xchg
mov
jns
ds
adc
mov
aas
das
out
rcrl
testl
inc
jmp
stos
orl
jge
imul
cld
aas
test
hlt
xor
movl
lret
popa
idivb
int3
dec
xor
mov
popf
lods
and
les
out
push
xor
adc
pop
push
push
mov
jge
sbb
inc
dec
les
jl
addr16
call
lea
mov
lock
mov
mov
cmp
shrb
cbtw
jbe
lcall
lds
and
mov
fwait
imul
outsb
pop
mov
hlt
adc
mov
lds
rol
xor
xchg
iret
xor
fs
jp
adc
icebp
mov
xchg
push
call
xchg
enter
adc
lock
in
adc
cld
push
aam
mov
lahf
js
and
xchg
push
mov
dec
sbb
pop
lods
popa
stos
test
jmp
add
inc
inc
xacquire
inc
push
jno
push
aam
aaa
xor
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
mov
mov
adc
adc
adc
test
sub
insb
daa
cmp
xchg
gs
insl
shl
loop
xchg
mov
mov
sbb
xchg
gs
scas
cmp
gs
fcomps
lret
push
fstpt
add
sahf
leave
repz
xor
cmp
push
fwait
aaa
cld
push
ja
test
mov
inc
add
jg
data16
popf
xor
push
test
pushf
shlb
inc
mov
xor
movsb
inc
ds
pop
das
xchg
xor
pop
in
xchg
cmp
bound
scas
cmp
xor
mull
fwait
lret
aam
mov
or
scas
sahf
imul
dec
push
inc
cltd
mov
inc
insb
sets
ret
push
sub
and
fucomp
lods
cwtl
fnstenv
std
hlt
hlt
loop
das
xchg
popf
rdmsr
ss
and
stc
sbb
std
jne
xor
push
mov
fadd
add
sbb
sar
dec
sbb
sbb
mov
mov
mov
ret
stos
dec
in
scas
test
mov
pusha
add
mov
imul
cmpb
sub
adc
jl
adc
cmp
dec
das
pop
dec
outsb
pop
js
sbbl
sub
mov
jl
test
push
andl
std
xor
int3
sbb
stos
dec
mov
pusha
inc
cmpsl
ja
repz
xor
out
ljmp
inc
loop
stos
xlat
xor
jno
loopne
jno
jecxz
sbb
iret
jle
out
fwait
arpl
or
push
popa
scas
and
xor
xchg
mov
fnstcw
push
cli
rorb
add
add
loope
xor
inc
xor
sarb
dec
dec
dec
or
fldenv
push
scas
lahf
andl
or
push
xor
ljmp
jno
push
xchg
fsubrl
mov
insb
dec
shlb
cmpsb
jnp
shll
roll
sub
pop
mov
mov
xchg
push
loopne
pusha
jl
sarb
dec
xchg
mov
ret
adc
sbb
xchg
mov
ficompl
or
push
xor
jb
sub
sub
dec
jno
iret
sub
sbb
pop
pushf
cld
mov
cmp
mov
cltd
mov
js
pushl
fisttps
stc
sbb
loopne
out
ss
or
mov
push
test
xchg
sub
dec
test
dec
loopne
adc
les
adc
sbb
xor
inc
nop
xchg
rorb
ret
jno
inc
mov
adc
popa
jae
cli
push
push
sbb
xchg
and
xchg
std
stos
cltd
jnp
nop
add
or
mov
leave
xchg
or
push
add
push
add
out
ljmp
lcall
pop
push
xor
add
and
or
mov
roll
int3
or
push
adc
fcomi
push
xchg
push
pusha
dec
sub
cmp
aam
adcb
movsl
sbb
xchg
addr16
mov
es
and
pop
push
rorb
inc
frstor
out
addl
leave
xchg
mov
ret
inc
lea
adc
cli
or
cmp
cmpb
std
je
adc
incb
or
push
cmp
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
ss
push
push
jl
adc
adc
adc
lds
lods
test
or
cmp
ror
xchg
sbb
inc
jle
mov
mov
adcl
fnstenv
nop
mov
mov
add
rolb
es
cmp
mov
xchg
push
or
inc
imul
sub
and
ljmp
shr
jle
mov
dec
adcb
test
sti
add
lret
xor
sbb
push
rcrl
push
in
cmp
sub
sti
pushf
fidivl
jbe
sbb
lahf
aam
jg
andl
inc
sarl
inc
push
adc
clc
mov
add
mov
cmp
xchg
mov
fimull
and
or
inc
and
leave
mov
rcrl
pop
and
mov
adc
fisubrs
or
bound
fwait
inc
outsb
repnz
jg
fstps
movsb
repnz
cmpsl
pop
js
sbb
lret
mov
subb
mov
push
adc
pop
lcall
popf
mov
mov
mov
xor
inc
aad
sub
sti
inc
repz
int
xchg
mov
daa
aad
dec
fnstenv
loopne
cs
nop
sub
test
es
daa
fdivrl
imul
std
dec
aam
incb
xchg
adc
mov
je
std
adcb
fnstsw
push
insl
dec
cmp
sub
in
pop
jp
mov
iret
loop
fcompl
xlat
or
mov
cs
test
sub
lock
jmp
dec
mov
loope
xor
flds
xchg
test
or
jo
cwtl
mov
movb
xor
outsb
cmp
xor
cmc
mov
jp
nop
cwtl
ret
lods
sti
popf
push
jmp
out
rclb
push
pop
dec
mov
loope
js
pop
dec
pop
movsl
pop
mov
pop
and
dec
mov
icebp
pop
lret
mov
out
jecxz
es
das
xchg
arpl
push
pop
mov
jl
lock
cmp
out
mov
aas
fmul
push
enter
push
clc
pop
mov
cs
cwtl
repz
ss
push
mov
push
addr16
out
mov
std
stc
cld
call
xor
push
xor
inc
lds
add
psubd
mov
cmp
cmpsb
in
inc
adc
mov
stos
les
jl
cs
ljmp
test
andb
add
pop
xor
inc
jg
add
pop
nopl
pop
jb
adc
jl
fildll
sti
icebp
sub
ljmp
fimuls
pop
add
push
push
sub
and
mov
jno
mov
push
jmp
cltd
lock
mov
pop
pavgb
cltd
sbb
mov
stc
bound
and
adc
popa
test
fldcw
cltd
insb
inc
insb
hlt
adc
insb
mov
lcall
icebp
xlat
mov
and
mov
sub
cmp
mov
mov
andb
pop
scas
push
mov
imul
test
dec
cwtl
call
frstor
sbb
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
mov
mov
int
adc
adc
inc
ljmp
xchg
or
aad
mov
adc
movsb
xor
aad
notb
pop
call
add
pusha
push
loopne
jp
xchg
sbb
sahf
loopne
inc
and
ja
outsb
adc
dec
jmp
xor
lods
or
sbb
inc
pop
scas
push
in
sub
xor
mov
scas
arpl
and
sti
jno
ljmp
dec
ss
jns
pop
jns
andb
idivb
add
cmpsl
les
and
cmpsl
mov
sub
jp
jb
mov
inc
inc
sub
outsl
xor
call
cmp
pop
lods
in
cmpl
adc
and
sarb
stos
test
divl
out
lds
outsb
nop
jne
out
dec
jge
cmp
cwtl
adc
lds
sub
xchg
lahf
stos
mov
je
clc
ret
orb
fst
jg
sbb
lcall
dec
or
lret
push
push
fs
ficompl
pop
mov
sbb
scas
icebp
fs
movl
outsl
js
outsb
push
pop
int
fildl
ja
xchg
out
shll
ljmp
inc
outsb
bound
adc
pop
inc
push
icebp
ss
aas
movsl
jl
shrb
cmp
cmpsb
cmp
xlat
xchg
sti
repnz
sbb
inc
rcrl
jmp
pop
out
dec
fisubrl
jmp
pop
inc
cmpsb
cmpsb
sbb
jb
dec
dec
dec
ror
lret
loope
rcr
shrb
sbb
lcall
pop
add
xchg
es
fmuls
dec
push
push
add
push
push
dec
stos
xchg
ret
push
adc
mov
subl
rclb
repnz
jnp
pop
sbb
jmp
dec
adc
mov
xor
imul
pushf
test
nop
or
add
int3
add
es
dec
test
mov
dec
call
aad
xchg
rcll
mov
xor
push
push
mov
inc
or
xchg
sub
push
scas
mov
xchg
rorl
xlat
fisttps
dec
fmuls
icebp
roll
pop
adc
adc
push
movsl
dec
mov
pop
rcll
cmp
std
xchg
stos
sbb
jmp
mov
subl
addr16
jp
cld
push
or
mov
jge
call
lea
in
dec
ret
sbb
aas
adc
gs
test
test
mov
in
pop
js
or
xchg
mov
xchg
rol
loope
ret
shll
ss
dec
lock
out
mov
add
sbb
inc
outsb
push
push
xchg
das
test
das
mov
shr
mov
orb
sub
sbb
push
sub
pop
and
jmp
sahf
das
cs
mov
and
push
test
sbb
or
mov
cmp
lock
shl
sbb
cwtl
pop
jb
add
adc
dec
stc
out
sub
xor
cmpsb
sbb
mov
jg
ds
xchg
mov
in
and
and
sar
fstpt
jge
xor
cli
mov
mov
cs
xchg
mov
ret
or
and
loopne
inc
sbb
cltd
movsl
loop
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
or
jb
adc
adc
adc
sub
mov
rcr
das
vpsraw
lret
mov
dec
xlat
pop
rclb
or
mov
sti
movsl
enter
bound
jle
ret
sub
out
jns
in
mov
rorb
mov
xchg
push
sub
sub
mov
xchg
shll
es
push
sbb
inc
mov
lea
cmpl
add
inc
test
dec
push
lret
push
xchg
jle
mov
data16
adc
ss
es
jp
cmp
dec
cmp
shll
shll
out
xor
cli
jmp
add
mov
xchg
loope
loop
fsubrl
ss
pop
push
adc
in
lods
mov
pop
sbb
add
push
and
adc
hlt
fmul
mov
popf
fists
in
sbb
out
ja
leave
cmp
pop
pop
xor
add
call
aad
and
ret
fstps
cld
cwtl
dec
cmp
push
lret
and
cmc
dec
popa
or
leave
jg
jno
imul
xchg
lahf
push
subl
daa
cmpsl
sub
fldt
leave
jo
add
sti
orb
popa
out
pushf
mov
imul
pop
ret
mov
mov
or
aad
negb
push
and
jae
into
fs
insl
in
stos
in
jo
lcall
dec
adc
in
pop
in
das
and
pushf
jae
rcrb
gs
out
or
sub
pushf
jle
sbb
add
jnp
out
call
dec
gs
add
in
push
push
and
add
mov
test
mov
shrb
inc
lods
hlt
sbb
mov
mov
or
pop
xchg
nop
mov
dec
aas
or
outsb
xor
push
cmp
mov
jg
cmp
mov
into
adc
inc
stc
lcall
add
jo
inc
std
xchg
pushl
push
clc
mov
out
ss
dec
clc
push
xchg
sahf
sub
inc
dec
cwtl
call
sub
mov
imul
dec
mov
cmpsl
jecxz
insl
sti
push
adc
push
mov
es
jge
rcrb
out
cmp
jne
push
fldl
push
jb
dec
icebp
pop
js
xor
imul
pusha
jb
out
aaa
xchg
jae
dec
stc
aam
test
and
pop
clc
pop
push
bound
dec
mov
cmc
xchg
rorb
fwait
mov
pop
icebp
and
pop
jbe
mov
sbb
pop
xor
xchg
jecxz
push
xchg
inc
mov
sarl
jp
dec
cmp
cmp
jmp
xchg
jp
test
loopne
xor
xchg
dec
sbbb
pop
scas
cmp
scas
or
jge
sarl
in
mov
pop
iret
repz
mov
pop
sub
stos
lahf
bound
push
mov
jne
test
xchg
inc
xchg
stos
mov
or
sub
in
mov
or
scas
fisttps
and
and
sahf
add
sub
adc
lcall
rcl
xor
es
pop
rcll
push
adc
js
out
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
rorb
jle
push
adc
adc
adc
clc
jl
fidivrl
sbb
divl
insl
in
cld
lea
sbb
fst
call
test
pop
ret
sub
xchg
in
notb
sbb
ljmp
sbb
xor
mov
push
or
inc
xchg
rorl
xchg
out
orb
add
mov
fstps
push
inc
xlat
push
fucomip
mov
jo
cmc
xchg
cltd
xchg
in
sbb
and
imul
and
fldcw
jbe
xor
add
insl
jp
stc
sub
mov
insl
mov
mov
sti
fwait
inc
dec
mov
jmp
out
adc
or
cmc
mov
notb
js
mov
in
loopne
push
in
dec
in
pop
fcoms
push
jne
pushf
adc
xor
out
scas
shl
mov
jl
fwait
inc
test
sti
rorl
stos
test
rcrb
clc
stos
int
adc
cmc
lret
add
xor
jne
sub
push
insl
pop
add
mov
lcall
scas
ret
or
shlb
mov
lods
int3
sub
arpl
lods
push
pop
mov
add
ljmp
xchg
movb
inc
decl
push
mov
xlat
inc
das
int
daa
xchg
mov
sub
mov
sbb
sbbb
fdivrs
add
xor
std
mov
cs
lcall
pop
lds
jge
test
adc
adc
stos
out
mov
sbb
pop
dec
or
imul
shrl
ljmp
add
push
gs
shlb
or
mov
jp
or
stos
xchg
roll
xor
fsubs
mov
mov
rep
movb
mov
jg
clc
nop
adc
pusha
fldt
cmp
stc
xor
jmp
mov
add
into
push
and
stos
sbb
dec
push
lcall
addb
fildl
ficomps
sbb
cmpsb
in
dec
pop
jo
or
adc
sbb
adc
push
adc
scas
je
mov
scas
aas
add
dec
mov
cmpsb
mov
xchg
jecxz
testl
xor
inc
bound
fwait
ljmp
dec
orl
cs
sarb
mov
lret
dec
push
not
call
loop
in
es
mov
sbb
addr16
mov
hlt
or
and
xor
outsb
xchg
fadd
sarl
jae
inc
lock
jnp
lret
je
gs
mov
xor
lock
icebp
xlat
arpl
sub
add
movsl
mov
or
push
out
into
cmp
mov
ret
daa
clc
cli
mov
and
fmuls
insl
mov
jg
ljmp
jnp
shrb
jnp
mov
arpl
mov
out
mov
ja
ds
movsb
pop
out
aad
mov
je
mov
pushf
addb
mov
pusha
leave
imul
and
sub
mov
aas
fcompl
mov
mov
cmp
les
lret
jp,pn
mov
adc
push
xor
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
mov
sbb
fisubs
adc
adc
enter
test
sub
sbb
lret
adc
aam
rolb
dec
ds
aam
push
push
xlat
std
xchg
xchg
mov
xchg
sub
xchg
cmpsl
push
xchg
mov
mov
jp
add
test
sbb
inc
mov
insb
cmp
sti
xor
das
ret
push
fimull
test
push
mov
mov
or
je
fsubrl
movsl
or
sbb
push
lods
jecxz
enter
bound
mov
adc
inc
pop
std
scas
add
ret
mov
stos
add
xor
aaa
scas
shr
and
sti
sbb
enter
xchg
aaa
mov
mov
notb
jge
dec
outsb
loop
push
adc
hlt
cmp
mov
sub
cwtl
mov
xchg
bound
mov
cld
mov
inc
fildl
jb
pop
mov
and
add
mov
ja
aaa
rsqrtps
mov
int3
pop
mov
ss
sub
and
das
adc
sub
lcall
ljmp
or
and
inc
loopne
adc
adc
xchg
sub
jge
jbe
maskmovq
mull
adc
xchg
cwtl
and
inc
ret
mov
jno
movsb
stos
ret
sbb
lods
and
pushf
popa
pop
int3
add
xor
ret
pop
popf
je
push
out
push
fidivl
std
sub
orb
mov
jns
xor
outsb
dec
pushf
inc
inc
add
add
lahf
pop
jo
jle
ss
das
mov
jge
inc
fwait
pop
imul
cs
imul
int3
hlt
loopne
push
and
ja
xlat
push
cmp
mov
adc
iret
xor
popf
out
imul
test
into
sbbb
bound
dec
jg
sar
test
push
xor
jle
es
dec
pop
pop
inc
lods
mov
adc
pop
inc
faddp
popa
out
lcall
push
imul
fidivs
xor
fdivrl
test
xchg
ljmp
into
xchg
adc
imul
dec
push
dec
test
add
adc
xchg
andl
sbb
mov
mov
pushf
inc
fnstenv
in
test
jle
mov
xlat
fs
test
or
xchg
mov
movsb
mov
fisttpll
faddl
xchg
or
sub
pop
shrb
daa
mov
adc
lahf
aaa
jmp
push
in
mov
nop
add
or
movzbl
sub
or
js
mov
mulb
pop
int
sti
pop
mov
mov
test
sahf
insb
leave
xor
cli
jae
cs
xchg
loope
sbb
jb
jl
notb
dec
or
orl
rorb
xchg
pop
inc
scas
pop
mov
adc
mov
add
cmpsb
mov
cmp
aam
jmp
cld
out
or
xor
fwait
pop
add
add
bound
stc
fsubrl
push
lret
add
inc
int3
add
lahf
ljmp
jmp
pop
sarb
addl
jnp
or
mov
lods
and
pop
jno
push
repz
aam
clc
call
mov
hlt
push
xor
andb
rcll
jns
lahf
daa
sub
jmp
je
ret
imul
push
and
jecxz
sarb
adc
dec
jo
jmp
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
rcrl
adc
adc
adc
cmp
add
sarb
pop
inc
loop
shlb
adc
lea
and
lds
test
sub
pop
mov
cmp
push
inc
adc
xlat
lock
pop
repnz
push
push
aad
cmpsb
leave
jns
incl
fidivl
xchg
mov
fcoml
and
cmp
jp
inc
fidivrl
pusha
adc
pop
pop
xor
aad
mov
cmp
sarl
in
js
cwtl
xchg
mov
mov
mov
add
pop
cmp
pop
push
loopne
mov
push
push
push
pop
add
adc
sbb
fsubs
mov
pop
jne
or
xchg
enter
add
fidivrl
add
pop
shrb
jbe
mov
push
clc
push
pop
pop
gs
cmp
push
sub
into
cmp
rcr
into
push
sahf
bound
sub
int3
and
aam
enter
ss
inc
popa
sub
nop
aaa
push
mov
cmpsl
cmpb
xchg
imulb
fcompl
shl
push
cmp
push
popf
and
adc
pop
shrl
ss
out
dec
pop
sub
cmpb
jecxz
sub
mov
mov
enter
sub
pop
xor
cmp
mov
mov
cld
push
sbb
add
push
lcall
inc
mov
ror
stc
popf
repz
add
jbe
pop
or
cmp
aad
cmpsl
enterw
rolb
push
xlat
mov
sub
mov
cmp
inc
push
inc
mov
cs
fisttps
inc
mov
jno
fwait
rorl
fsubr
ret
jnp
nop
xchg
push
fisttpll
cld
jae
ret
ret
cmp
dec
or
adc
adc
scas
adc
add
out
into
ss
push
xchg
cmp
xchg
in
or
pop
push
sbb
push
push
push
mov
sub
sbb
pop
stc
sub
pop
jge
mov
or
pop
sub
xor
push
fcompl
xor
push
mov
fdivs
aas
push
mov
adc
jns
inc
pop
and
add
gs
inc
cmp
sub
push
inc
in
or
inc
leave
push
loope
repz
xchg
add
inc
jno
fidivrl
fwait
in
xor
add
mov
idivl
movb
cltd
aas
fisttpll
dec
lods
xor
imul
jle,pt
sbb
jge
xchg
test
lea
lock
and
pusha
je
and
xchg
shll
dec
sahf
mov
std
pop
frstpm(287
jmp
push
fstpl
aam
lods
push
iret
cli
xor
sti
sub
jno
pushf
pop
fistl
mov
cmp
and
pop
dec
or
mov
xor
out
in
mov
push
loope
mov
in
xchg
ja
push
enter
pop
out
repnz
adc
lea
mov
mov
leave
mov
mov
mov
xchg
pop
sbb
popa
add
mov
push
xchg
movsl
in
sbb
push
lcall
jge
dec
pop
lods
and
mov
sahf
mov
mov
add
data16
add
add
pop
loope
mov
ja
lahf
xor
add
ret
cmp
cmp
js
cli
mov
fistps
int3
push
and
inc
mulb
stc
and
es
or
inc
mov
jmp
push
sahf
pop
fimuls
ljmp
lock
adc
insl
fldenv
push
xchg
fcmovbe
loopne
lcall
iret
cwtl
jne
fnstenv
add
cmpsb
jae
dec
das
xchg
fbld
inc
xchg
mov
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
inc
in
jle
push
adc
xor
adc
cmp
push
push
stos
mov
addr16
aaa
jae
test
cmp
xchg
push
movsb
fimuls
xchg
jecxz
dec
shll
mov
lods
mov
cmp
dec
jle
mov
insl
and
lcall
or
inc
testb
add
in
adcl
sub
pop
xor
jb
sahf
aad
mov
lds
aam
shrl
inc
pop
fs
fsubl
dec
inc
and
stc
push
add
sbb
cmp
sti
dec
pop
shrb
es
out
in
push
jecxz
call
fidivl
xchg
sbb
mov
in
xchg
icebp
xorl
pop
lods
pop
loop
and
or
je
aaa
pop
dec
pop
xor
push
std
push
std
mov
and
sub
inc
add
sub
jmp
jmp
data16
mov
popf
jg
outsb
repz
aam
int3
xlat
outsb
negl
cltd
pusha
stos
jl
push
pop
aad
adc
shrl
ret
mov
in
dec
dec
dec
jecxz
and
out
out
cltd
gs
mov
es
dec
fs
dec
pop
punpcklwd
fsubrs
xchg
lea
aam
insb
or
xchg
sub
out
loop
xchg
lods
sub
add
sbb
cmp
test
push
lret
add
hlt
imul
dec
lcall
mov
pop
pop
cwtl
sbb
add
and
mov
jbe
fsubrl
rorl
mov
and
fiadds
std
out
cmp
jg
fwait
add
jb
push
and
pusha
imul
scas
jne
push
xor
fs
mov
mov
jecxz
sub
fmuls
push
mov
jl
and
pop
fisttpll
dec
clc
lea
xor
in
mov
sub
mov
movsl
cmp
mov
sub
mov
dec
popf
and
fcomps
and
cmp
sbb
xchg
sub
adc
or
inc
cld
dec
ret
cltd
scas
arpl
sub
and
insl
push
shrb
nop
repnz
cltd
jnp
lods
int
cmpsb
stc
cmp
sbb
clc
ss
stos
xchg
mov
out
push
out
fs
fists
call
rol
dec
ds
adc
push
outsb
push
ret
jno
clc
cli
mov
fs
mov
adcl
xchg
cmp
add
adc
sbb
shll
out
daa
inc
sub
daa
xchg
cld
mov
icebp
movsl
mov
je
loop
pop
xor
push
out
jb
cmp
jne
stos
test
cmpsl
lods
repz
mov
scas
iret
gs
xchg
sbb
xor
dec
sbb
rcrl
hlt
fistpll
jae
pop
mov
xor
or
cmp
mov
or
sub
cli
cmp
stc
mov
mov
or
add
sub
dec
jecxz
or
add
rorb
inc
pop
cmp
inc
pop
sti
adc
call
mov
outsb
pop
cwtl
sbb
popf
jecxz
inc
repnz
sbb
repz
pop
or
add
push
or
int
lea
vandnpd
cmp
mov
mov
aas
in
out
xchg
mov
cli
jnp
or
cmp
inc
jg
sbb
or
cmp
sti
cmp
jp
jno
dec
jp
icebp
pushf
in
jle
mov
pop
xlat
in
pusha
xchg
js
pusha
aad
fistps
nop
dec
insb
movsl
js
xchg
mov
iret
sub
jo
aaa
fwait
clc
and
bound
pop
dec
clc
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
cltd
pusha
js
dec
adc
xor
adc
mov
ljmp
sti
push
push
sbb
in
fidivrs
jne
mov
sbb
xchg
pop
iret
and
mov
sub
ljmp
jp
push
clc
xor
add
inc
push
sub
mov
push
cmp
mov
xchg
in
push
outsl
adc
fmull
add
into
pop
pop
fstps
mov
xor
imul
andl
insl
mov
push
mov
test
sbb
push
insb
xor
fisubrl
cmp
fs
test
adc
mov
cs
xchg
leave
push
mov
je
lock
mov
test
repnz
lret
sub
outsb
aad
jg
subl
negb
or
aaa
gs
sub
hlt
les
lcall
pop
xchg
cmpsl
xor
nop
test
lods
je
dec
mov
insb
mov
push
cld
lods
jno
js
sub
shll
or
adc
dec
repnz
add
push
fdivs
and
sub
pop
clc
jmp
es
fxch
daa
outsl
adc
push
iret
jbe
jmp
jb
cli
inc
mov
inc
fcomps
jecxz
mov
and
pushf
in
mov
mov
stos
sti
lock
mov
cmc
aam
out
xchg
lock
mov
rclb
add
js
repz
jge
iret
pop
aaa
lock
sti
call
jecxz
mov
or
adc
add
popa
push
imul
jb
movsb
aam
cmp
cs
leave
scas
das
leave
mov
xchg
fidivl
data16
call
mov
mov
in
add
sbb
pop
lods
sti
jp
das
arpl
xchg
sbb
mov
imul
dec
pop
bound
mov
fs
fcompl
pop
mov
pop
jg
out
jmp
rep
stos
aam
sarl
cmpsb
xchg
repnz
mov
lods
bound
cmp
xlat
mov
xchg
lds
in
in
imulb
push
push
inc
into
push
mov
jg
or
sub
jl
mov
pop
xchg
clc
sub
jmp
sbb
outsl
popa
or
sub
pop
in
pushf
mov
fnsave
mov
aas
xchg
cmpsb
mov
hlt
add
adc
mov
test
lcall
icebp
mov
addb
add
add
dec
mov
or
or
cltd
fs
hlt
xlat
in
repz
ret
in
in
dec
pop
xor
jp
cld
add
or
dec
xchg
and
stc
and
mov
sub
shrl
shl
cmp
sahf
loop
add
sbb
jg
rolb
mov
fmull
push
jle
cltd
dec
add
pushl
mov
xchg
pop
xor
outsb
adc
shl
popf
add
fucomp
cs
add
xchg
roll
call
lret
mov
push
mov
jl
loop
dec
and
push
arpl
test
xchg
cwtl
jecxz
mov
fs
xchg
sbb
in
lret
add
dec
inc
inc
xor
shrl
imull
test
or
xor
dec
or
xlat
or
cmp
ret
cmp
mov
ja
incl
das
push
mov
push
pop
cltd
pop
jecxz
lods
sbb
or
and
mov
mulb
inc
add
stc
jbe
lcall
dec
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
loopne
cmp
fwait
or
sbb
pop
popf
fwait
daa
mov
sub
inc
jg
sub
mov
lcall
xor
push
mov
les
sub
cmc
or
mov
xchg
test
shll
push
mov
mov
dec
jl
jb
adc
stc
jecxz
sahf
fidivs
and
pushf
outsb
adcl
mov
push
or
or
frstor
pop
leave
cli
fdivrs
int
clc
push
push
in
je
fistps
jecxz
add
or
adc
test
loopne
iret
iret
pop
dec
jb
rcll
or
xchg
mov
xchg
sub
sahf
out
inc
and
xor
sbb
jecxz
bound
pop
or
inc
add
fildll
xchg
movsl
mov
div
xchg
in
shl
push
xchg
mov
push
or
out
stos
push
mov
mov
pop
jae
fidivs
leave
popa
cld
outsb
cwtl
push
fldenv
test
mov
mov
ret
add
loope
dec
test
cmp
mov
sub
jmp
adc
adc
insl
clc
lock
xchg
mov
out
inc
push
mov
dec
push
cmp
sbb
sub
push
sub
aas
and
imul
mov
push
popf
lea
test
adc
iret
enter
xor
arpl
xor
or
xchg
xchg
add
inc
adc
cmp
pop
lret
push
cld
aas
mov
jge
leave
iret
stos
imul
xchg
lret
dec
cmp
int3
and
mov
cld
fs
lods
ss
mov
loop
push
cmp
fisttpll
jmp
fcomps
or
mov
jle
sub
scas
push
adc
gs
fstpt
cli
push
and
inc
fwait
out
out
lret
cwtl
dec
push
in
push
fidivrs
leave
and
rcrb
shlb
pop
mov
fsubl
icebp
pop
fwait
cmp
xchg
and
aam
mov
jecxz
inc
shl
arpl
xchg
frstor
adc
mov
push
fdivr
push
sbbb
cmp
lock
xor
pop
in
add
cmp
inc
adc
pop
push
cmp
out
jmp
xor
imul
sbb
add
sbb
in
sbb
push
repz
rcr
xlat
fidivrs
cld
push
pop
cld
jae
imul
dec
cmp
mov
jnp
and
insl
dec
xchg
inc
iret
popa
mov
and
shrl
add
test
lods
xchg
mov
jle
push
sub
push
ds
mov
scas
test
fs
cmp
xor
std
cmpsl
mov
cmp
faddl
mov
divl
xchg
mov
adc
lcall
jae
xchg
pop
and
leave
lds
mov
jne
ret
icebp
jl
loop
in
cmpb
pusha
dec
mov
adc
mov
pop
xchg
push
add
jns
inc
mov
jne
push
push
cmp
dec
push
add
mov
add
fstl
out
push
rcll
cmp
movsl
and
int3
jo
mov
fs
cmpsb
sarb
ret
clc
test
mov
and
push
inc
je
sub
scas
pop
imulb
js
dec
pop
or
push
inc
mov
fdiv
std
notl
mov
cmp
out
ret
aam
add
shll
adc
rorl
iret
dec
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
js
jnp
adc
xor
adc
stc
mov
inc
mov
into
cmc
push
test
ret
stc
sbb
sub
jl
out
jg
xor
popf
insl
xchg
or
outsb
lods
lods
aaa
mov
lods
dec
ds
push
jb
and
mov
sbb
xchg
rclb
clc
adcl
fmull
hlt
add
cmp
sub
jmp
push
mov
push
pop
push
xchg
pop
mov
xchg
in
idivl
cs
int3
mov
arpl
xchg
call
cmc
inc
add
es
cmovp
loop
lea
xor
mov
push
into
fnstenv
mov
fdivrs
lea
cmpsb
xor
rcr
insb
cmp
test
insl
jp
orl
movsl
ja
pushf
pop
jg
fwait
iret
sub
dec
lea
mov
pop
stos
aas
je
cmpsl
ror
jg
cmp
pop
dec
rorb
repnz
and
xor
cmp
jle
sub
repz
sbb
jmp
adc
sbb
pushf
movsl
insl
pop
push
sbb
in
push
and
pushf
cmp
rcll
sub
mov
mov
mov
push
sub
and
sbb
fnstenv
stos
shlb
ljmp
cmp
decl
rolb
and
aaa
push
imulb
mov
pusha
add
and
out
push
and
test
sub
lods
push
mov
or
fisubrl
mov
cmpsb
xlat
adc
cmpsl
xchg
outsb
cmp
outsb
push
mov
mov
or
or
fldcw
outsl
jecxz
fwait
adc
das
les
outsb
repz
lock
call
pop
cmp
xchg
insl
ret
xor
stos
aas
xchg
jmp
jns
shll
jnp
dec
arpl
sub
or
in
sti
pop
and
cmp
mov
xchg
dec
jne
mov
jecxz
insl
jle
mov
lret
xlat
jmp
push
mov
xlat
sbb
lahf
dec
shlb
es
lahf
cmpsb
sub
data16
mov
in
flds
fisttpll
fistps
pusha
xor
jecxz
inc
dec
cmp
rcr
add
lds
das
inc
cmpb
sbb
inc
push
fnstsw
lods
jl
ljmp
loop
xchg
pop
jnp
or
icebp
daa
sbb
mov
mov
jl
adc
xor
xchg
pop
inc
adc
xor
js
scas
or
sub
mov
add
push
rolb
in
jge
popa
imul
and
bnd
testb
sub
in
test
fidivl
loopne
in
add
sbb
inc
xor
jg
jl
scas
xor
push
push
test
and
in
inc
mov
jns
mov
sbbl
jecxz
xor
inc
mov
mov
fwait
cmc
jl
xchg
lret
lret
cmpl
adc
and
xor
and
sbb
xchg
scas
js
pop
into
xor
mov
aam
arpl
out
add
pop
leave
addl
les
shlb
xor
loope
lods
icebp
lds
mov
jp
loope
inc
xlat
and
push
add
jmp
sarb
incl
adc
sub
add
adc
out
and
xchg
les
sbb
subl
jmp
mov
jne
pop
cmp
enter
je
push
jne
lds
ljmp
jecxz
push
jb
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
movaps
dec
mov
into
cs
lcall
and
fsubs
cmp
subb
lods
pushf
jnp
or
push
jmp
out
inc
in
out
in
mov
lods
mov
lret
sub
jp
pop
ds
inc
cmp
out
js
sub
mov
mov
mov
add
repz
lahf
sarb
add
insb
jle
adcl
xor
sahf
and
mov
lcall
xchg
inc
and
mov
fsubs
xchg
jg
aaa
inc
mov
sub
push
cmpsl
mov
sub
push
and
cmpsb
push
movsl
or
testl
fimull
fistps
mov
out
jge
popl
dec
cmp
pop
cmp
xchg
test
roll
out
insl
ret
sbbl
fbstp
or
add
lods
into
fidivrs
xlat
pushf
pop
mov
fsubrl
test
fs
push
out
jl
cmp
pop
pushf
xchg
sbb
inc
cmp
sub
sub
out
add
jle
arpl
pop
push
adc
cmp
pop
and
mov
int
and
les
or
adc
jmp
fsts
mov
insb
and
lds
cmp
mov
pop
fstps
icebp
xchg
and
push
int3
cs
test
int3
and
dec
addr16
mov
add
sbb
in
jb
adc
lods
cmp
xchg
ja
hlt
imul
lret
push
gs
outsl
repz
in
xchg
cmpb
add
xchg
mov
lcall
add
inc
push
push
out
out
push
test
and
and
pop
iret
mov
cmp
roll
add
pop
inc
dec
push
jge
dec
or
stos
test
mov
pop
push
fucom
loopne
jbe
xor
xchg
daa
or
mov
std
lock
mov
push
pop
ljmp
adc
mov
test
push
or
fs
xchg
jl
push
icebp
xchg
jae
jp
mov
lahf
xor
pop
pop
aas
out
aad
rclb
out
ret
add
and
ret
mov
push
adc
dec
pop
xchg
cmpsb
inc
stos
rclb
bound
push
jg
inc
push
push
fucom
mov
cwtl
pop
mov
sub
imul
xor
jns
jo
mov
mov
mov
mov
pop
push
mov
out
cmp
xor
cwtl
inc
dec
clc
dec
insb
cmp
adc
or
ret
or
data16
mov
or
test
push
jno
repnz
pop
sti
loop
mov
sbb
dec
mov
dec
xchg
loopne
sbb
jecxz
xchg
xor
mov
addr16
cmp
cmp
dec
sbb
dec
fcmovbe
dec
push
cld
gs
into
imul
jge
mov
dec
xchg
les
imul
xchg
fisttpll
and
pop
mov
push
push
xor
mov
and
test
pop
shrb
mov
pop
repz
outsb
and
sbb
sub
daa
adc
sbb
pop
and
loop
lock
mov
outsb
xor
leave
dec
xchg
in
cltd
dec
cli
mov
pop
push
xchg
xor
imul
outsl
popf
xchg
rcl
cwtl
mov
adc
mov
or
cmp
xor
rolb
xor
jmp
mov
popa
lcall
jg
stos
scas
sub
adc
adc
adc
test
sub
aas
inc
sub
das
mov
movsb
sub
lcall
cmc
adc
jl
addl
loope
mov
cmpsl
sbb
inc
je
clc
ss
or
daa
xor
lods
push
pop
xchg
sbb
or
dec
inc
jb
cmp
jne
decl
cmpl
xchg
jb
push
mov
lods
dec
and
jnp
stc
std
das
push
mov
movsb
and
popa
ret
jmp
adc
push
mov
xlat
and
out
adc
subb
inc
mov
or
dec
fsubrs
pusha
mov
and
push
icebp
mov
dec
in
iret
mov
jns
dec
mov
jle
pop
dec
repnz
mov
cs
adc
test
lock
loop
scas
js
testb
jae
ljmp
mov
out
loope
jmp
push
mov
movl
hlt
pop
rcrl
and
xlat
loopne
mov
decb
cli
outsb
adc
rcrl
xchg
pushf
nop
pusha
shlb
je
sub
cli
dec
cwtl
pop
mov
lar
pop
mov
push
mov
mov
mov
add
push
cli
lahf
jb
sbbl
out
lahf
inc
xchg
rcl
inc
push
lahf
adc
cmpsl
popf
adc
test
pop
dec
pop
sbb
pop
aad
pop
jp
jecxz
push
iret
cmp
es
aaa
dec
repz
lahf
repz
jl
xchg
test
push
mov
repnz
xor
push
xchg
repz
stos
lea
mov
push
push
sub
inc
and
nop
pop
inc
addb
lock
fnstcw
pusha
pop
sub
inc
xchg
adc
aam
shrb
aas
js
inc
rcr
fsubr
fstps
xor
mov
data16
nop
pop
and
inc
push
add
cmpsl
fldt
movsb
popa
mov
mov
xchg
mov
cwtl
push
mov
insb
xlat
lea
sub
in
fld1
jnp
in
ja
imul
pop
jge
es
xor
adc
pop
sbb
jmp
sbb
sub
les
popf
arpl
xchg
and
mov
xor
and
adc
push
dec
cli
out
sbb
or
lret
or
lods
cwtl
cs
inc
ljmp
sbb
adc
mov
loopne
popf
inc
jnp
test
add
test
adc
cmpl
lods
fsubs
movsl
jns
xor
clc
or
cmc
es
jecxz
xchg
bound
int
subb
gs
xchg
adc
mov
sar
add
mov
pop
fucomip
or
sarl
ja
mov
lcall
and
test
dec
mov
add
jb
cmp
sbb
mov
es
sahf
push
jmp
insb
lret
test
and
lcall
xchg
aas
sbb
sbb
lds
imul
xchg
add
cwtl
fistpl
mov
call
pop
and
addr16
in
sub
sub
dec
ret
inc
jo
cmp
push
int
cmp
sub
sti
xor
or
xchg
adc
xlat
mov
cmpsl
mov
rolb
inc
mov
jbe
sub
mov
jmp
mov
inc
xor
sbb
fs
inc
push
pop
mov
ret
into
xchg
fwait
jnp
mov
and
in
ret
mov
aam
aas
xchg
sub
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
inc
and
int
adc
fmull
adc
stc
mov
pop
xchg
sahf
pushf
sub
sub
aam
aad
popf
aaa
sbb
dec
inc
mov
sub
lods
mov
adc
out
xchg
ud1
and
mov
sti
xor
mov
push
xor
pop
xor
ret
daa
add
and
dec
sbb
fbstp
roll
pop
add
fidivs
outsb
push
and
lret
xchg
rcrb
addl
xor
adc
lods
cmpsl
jnp
std
xchg
xor
jg
fcomps
icebp
mov
xchg
or
jno
daa
daa
pop
daa
and
and
adc
or
pshufw
mulb
xchg
mov
nop
and
sahf
jmp
bound
pop
popf
cli
push
pop
int3
popf
lcall
adc
or
or
imul
mov
sub
or
cmc
ja
insl
fmuls
pop
repnz
and
cmpl
nop
push
xlat
fs
scas
push
ficoms
push
nop
cmp
clc
jns
les
aas
push
push
out
cmpsl
pop
bound
out
test
stos
cmp
push
inc
pop
je
not
xor
out
jns
mov
dec
add
mov
add
enter
daa
adc
pop
push
fldl
dec
rcrl
int3
lds
pop
sahf
mov
lods
and
sbb
in
mov
out
push
jp
and
mov
movsl
jl
push
sbb
fisubrl
iret
out
and
jo
aaa
je
cmp
push
cli
jle
subb
shlb
xor
in
jo
mov
mov
bound
outsl
sbb
mov
sbb
movsb
jno
lea
mov
push
or
pop
mov
and
pop
adc
pextrw
pop
insl
lret
imul
mov
xchg
popa
ret
pop
xor
mov
or
xlat
sti
mov
rol
pop
xchg
xorl
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
icebp
dec
test
fmull
adc
outsl
pop
imul
and
lods
mov
dec
jne
cmp
sub
jo
push
lock
aad
bound
ja
mov
testl
xor
lea
mov
xor
jae
xor
push
orb
xchg
xor
leave
lea
in
xchg
add
ss
aas
iret
cmp
bound
add
pop
pushf
or
aam
cld
mov
pop
jo
lods
add
push
subl
cwtl
fcomps
shrb
jecxz
loop
cmc
flds
clc
or
insl
enter
inc
mov
nop
mov
sub
xlat
cltd
mov
xor
cwtl
mov
mov
or
and
ret
add
jno
pop
lods
data16
ljmp
lea
js
imul
lods
mov
shll
js
test
cmpsl
push
pop
xchg
outsl
jge
sub
pop
ds
jge
pusha
xchg
daa
push
add
and
sub
pop
icebp
icebp
inc
out
cmpl
or
rorb
jp
das
aam
test
dec
xor
outsl
pop
lret
outsb
jae
pop
lock
pusha
filds
scas
aaa
mov
xchg
aaa
movsb
or
adc
sub
xchg
shlb
mov
inc
adc
ljmp
sbb
sub
repz
jae
jmp
add
hlt
or
mov
jns
dec
add
stos
pusha
faddp
sub
dec
out
jecxz
lcall
cmpsl
aas
lcall
xor
jb
sbb
outsl
adc
and
push
mov
aas
xchg
push
xchg
data16
jg
mov
sub
pop
xor
es
mov
fdivr
cmp
notl
xchg
add
push
lcall
adc
jp
push
or
js
stc
mov
sub
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
pop
pusha
js
sbb
adc
movlps
stos
dec
or
inc
fnsave
out
std
add
sbb
xor
push
xchg
int
dec
aad
adc
loopne
mov
aad
inc
lods
icebp
lods
jbe
sub
jmp
jmp
push
in
enter
setp
cmpsl
in
hlt
or
xchg
or
mov
xor
movsl
dec
lea
lea
enter
aaa
fdivp
test
pop
xchg
repnz
repnz
or
pop
xchg
inc
inc
fs
jae
add
push
cmp
das
cmc
inc
pop
je
sbb
lock
pop
div
add
notb
jmp
jp
sbb
xchg
pop
in
add
out
std
and
jno
scas
jo
aaa
xchg
dec
pop
xor
adc
mov
out
scas
sub
cmp
add
pop
aaa
bswap
sub
dec
push
add
cmpsl
push
lret
dec
mov
stc
mov
add
into
inc
into
out
cs
dec
sarb
sbb
mov
mov
xchg
movl
push
pop
ds
stc
sahf
lods
add
jno
dec
into
inc
add
mov
xchg
outsb
xchg
into
jge
xchg
jno
js
xor
repnz
cmp
jge
sub
out
inc
inc
insl
into
pop
inc
lahf
mov
jecxz
sub
cwtl
lahf
clc
xor
mov
sbb
shrb
sbb
jl
sbb
sbb
loopne
cld
cmp
and
xchg
inc
js
into
and
sub
pushf
icebp
inc
push
imul
mov
in
sbb
repnz
sbb
sub
shrl
push
xchg
and
outsl
fs
or
rol
mov
mov
mov
ss
dec
cmp
jne
jg
add
in
adc
push
rcrl
ffree
add
mov
mov
mov
pop
mov
clc
and
fstpt
jmp
fwait
mov
jecxz
aaa
adc
in
pop
scas
add
or
mov
ss
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
icebp
in
and
movlps
or
sbb
cmpsl
add
fadd
cld
ret
je
mov
mov
sarl
xor
incl
test
push
pop
in
mov
stos
scas
mov
mov
test
xor
popa
jmp
leave
jnp
fstpt
or
sbb
stc
lods
add
scas
data16
stc
imulb
dec
dec
inc
mov
mov
rcrl
pop
xor
out
mov
repnz
or
mov
int3
and
stos
mov
adc
scas
dec
test
icebp
lds
dec
push
rcr
ret
xor
pop
repnz
ss
cltd
jle
cmp
jp
mov
cs
cmc
fbld
xchg
ds
gs
dec
mov
ds
int
pushf
mov
hlt
rcrb
shl
mov
bound
into
xor
gs
arpl
pop
adc
ficoml
xchg
in
sti
scas
icebp
mov
fists
cmpsl
xor
sbb
rolb
cmp
mov
cld
and
mov
fsts
aam
fiadds
add
or
push
dec
sub
jnp
xchg
inc
mov
jp
into
mov
add
sbb
xor
inc
sbb
xchg
movsb
inc
fcoml
in
add
lret
xchg
testl
in
mov
in
loop
sub
and
sahf
pop
in
or
orb
xchg
filds
fpatan
push
sbbb
ja
adc
push
fcomps
ja
push
in
cmpsl
adc
add
lcall
lret
sub
adc
mov
fnstsw
push
stc
push
mov
jbe
cmp
xor
in
xlat
jmp
add
jo
xor
xchg
mov
addl
js
and
mov
inc
sub
push
mov
and
sbb
lret
daa
inc
jl
xchg
cmpsb
imul
mov
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
stos
les
fmull
adc
idivl
loop
mov
and
lret
int
fiaddl
cmpsb
mov
adc
pop
push
xor
dec
mov
int
xchg
fldcw
sbb
sarl
push
xchg
push
pushf
pop
mov
push
and
cmp
into
fmul
shrb
imul
stos
imull
or
fmul
or
adc
rcrw
cmpsb
addr16
cld
in
pop
jmp
pop
test
je
into
jge
jle
jle
cmc
jl
add
sbb
or
clc
call
ljmp
inc
pop
xor
stc
sub
adc
daa
fs
inc
add
xchg
jp
cltd
push
arpl
les
int
cltd
pop
lcall
pop
cld
mov
outsl
push
xor
scas
dec
mov
xchg
repz
push
adc
push
out
sub
daa
adc
and
mov
push
insb
hlt
fdivrp
xlat
pop
lods
pusha
lock
fsubs
sbb
insl
stos
add
mov
mov
pushf
flds
ret
pop
out
rolb
or
imul
loopne
and
cwtl
xlat
xor
aaa
insb
push
lcall
push
insb
mov
cmp
aam
push
cmp
inc
push
mov
adc
jno
ror
call
mov
jbe
je
pop
fmull
xorl
jae
pop
gs
pop
mov
inc
sub
mov
jl
pop
sbb
xchg
adc
int
lahf
mov
and
in
and
cs
add
jae
mov
hlt
stc
mov
pop
fimull
fists
ja
icebp
dec
lret
add
or
push
add
js
bound
ret
xchg
das
sbb
mov
ds
cs
lahf
ja
or
stos
je
out
xor
insl
xor
mov
test
sbb
xor
mov
mov
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
nopl
ljmp
jb
repnz
mov
cmp
inc
loopne
aad
pop
sahf
or
xchg
push
mov
push
xchg
jl
cmp
add
loope
push
sbb
rcrb
fildl
pop
or
pop
out
cwtl
shlb
xlat
dec
mov
xor
mov
mov
mov
enter
mov
jae
mov
jb
add
lock
push
mov
add
addr16
rcr
push
mov
sbb
das
dec
loop
clc
mov
mov
aam
mov
rcl
daa
repnz
movsb
inc
push
dec
mov
scas
add
adc
inc
aam
mov
mov
sbb
outsl
fmull
xchg
and
jno
and
inc
sbbb
stc
bound
imul
pop
mov
inc
idivl
out
repz
ret
gs
push
repnz
jg
lock
cwtl
js,pn
stos
mov
xor
adc
and
test
and
xor
mov
inc
ds
or
es
xor
mov
sti
shlb
dec
jno
push
xchg
ds
jge
push
or
idiv
adc
cltd
push
jl
mov
aad
push
dec
das
subb
push
jge
notb
or
bound
mov
ja
pop
fadds
je
subl
enter
in
test
decb
cmp
mov
adc
aaa
scas
ss
xor
add
push
or
push
mov
pop
xchg
fcoms
jne
loopne
jo
repz
jl
jle
jno
popa
pusha
js
movsl
mov
sbb
lock
mov
imul
dec
fwait
cmpsl
mov
cs
je
shrl
dec
es
das
mull
repnz
inc
addl
mov
stos
pop
and
mov
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
or
jle
adc
fmull
adc
jp
mov
loope
cmpsb
xorl
inc
jns
mov
jl
push
cwtl
or
xchg
xchg
jno
test
addr16
and
sub
xchg
xchg
push
xchg
cmp
notl
sti
mov
movsl
and
inc
and
ret
inc
test
frstor
int3
jo
push
filds
dec
add
stc
adc
or
inc
rorb
cwtl
xchg
ljmp
out
lret
rcll
cmp
flds
inc
daa
xor
xlat
loopne
push
push
inc
aam
std
mov
sbb
cli
push
ja
fstpl
dec
icebp
orb
sub
push
cmpsl
xchg
shlb
jecxz
push
fadds
ds
out
cmpsl
or
inc
cli
out
jecxz
sub
stos
or
and
out
inc
out
add
rol
cwtl
movsb
xorl
out
xchg
push
pop
sbb
incb
dec
and
movsl
adc
dec
ss
loop
sub
imul
inc
mov
aas
psrlw
adc
clc
pusha
andl
jno
inc
adc
mov
data16
mov
cmp
cmp
cmpsb
es
jnp
in
xor
cmp
xchg
mov
int
fsubrs
les
xlat
sub
xor
jno
sbb
ss
adc
mov
add
jmp
sti
cmpsl
cmp
fcmove
xchg
fs
cmp
adc
popa
popf
inc
fisubrs
hlt
lahf
jl
cmpsl
dec
jmp
es
mov
hlt
ror
es
mov
es
mul
bound
jmp
push
xchg
add
sarb
jge
aas
loopne
or
shr
pushf
xchg
cltd
pop
out
lods
dec
adc
movsl
jb
xchg
mov
jp
cmp
je
mov
pop
leave
push
pop
mov
int3
lret
dec
sbb
xor
jnp
lahf
insl
mov
cmp
movsb
add
and
dec
adc
cmp
and
xor
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
sbb
xchg
and
or
mov
adc
mov
push
jb
sbb
inc
imull
stos
lods
sbb
aad
loopne
mov
xor
test
jle
push
inc
pop
fucom
inc
lea
and
lcall
int3
inc
out
in
mov
nop
testl
or
cs
popf
and
push
inc
xorl
push
mov
xchg
sub
mov
mov
nop
sbb
dec
lock
sarb
jns
popa
jno
and
fnstsw
fldenv
inc
jnp
push
or
xchg
rcll
rorb
cmp
adc
das
mov
lock
lahf
int
enter
inc
pop
stos
pop
pop
loope
mov
rorl
pop
mov
popa
inc
pusha
fistps
jle
push
xor
adc
jle
mov
sahf
rcll
pusha
adc
jns
clc
add
mov
cmp
mov
les
inc
xchg
pop
enter
out
pop
sub
mov
lret
adc
pop
scas
lock
ror
fwait
mov
push
inc
mov
data16
insb
push
pop
xor
adc
fs
pop
hlt
sbb
pusha
dec
and
push
mov
jne
dec
ret
mov
por
sahf
mov
cltd
cmp
cs
mov
es
lcall
dec
inc
jne
pop
stos
popf
jmp
cmp
adc
dec
test
sub
into
inc
jp
std
ret
fmul
es
mulps
jecxz
scas
xchg
xchg
lret
add
ds
or
pop
xchg
scas
scas
pop
inc
push
push
mov
cmc
fdivs
add
or
xorl
fldenv
adc
or
dec
mov
pop
ja
aad
lcall
and
outsb
test
push
lods
jo
push
jg
xchg
sbb
cwtl
scas
mov
push
push
pop
add
movsb
pop
and
push
sbb
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
push
add
adc
jp
or
ss
or
test
adc
jg
ds
lock
lds
jl
jo
lock
test
pop
pop
xor
cmp
add
lods
jb
jne
and
daa
loop
pushw
bswap
push
mov
shll
push
data16
ficoml
mov
in
fs
push
mov
repnz
mov
mov
pop
push
mov
out
jo
pop
sub
cmp
jg
and
cmpsb
cmp
xor
hlt
andb
adc
push
movsb
in
mov
pop
xchg
pop
sub
ret
movsb
jl
sbb
mov
sti
and
dec
cmp
or
in
adc
inc
inc
pop
cmp
lods
data16
shll
sub
adc
adc
cltd
jb
call
or
aam
das
mov
mov
mov
add
stc
jl
add
add
xorb
and
ljmp
xchg
ja
cmpsb
mov
ja
ret
rcrb
sbb
adc
in
xchg
pop
imul
out
xchg
xchg
lea
push
lds
jno
test
jg
movsb
test
fmul
cmp
dec
ds
push
adc
cmp
push
adc
and
inc
mov
or
sbb
sbb
pop
or
je
adc
pop
scas
cmc
stc
jl
mov
cwtl
pop
sbb
add
sbb
gs
rcll
push
hlt
cltd
jo
fisubrs
inc
dec
pop
test
mov
sub
xor
pop
ss
pop
pop
inc
add
push
sub
mov
xchg
xor
fildl
decl
xor
cmp
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
pop
fwait
dec
mov
fmull
adc
aas
ds
call
mov
pop
mov
xchg
jno
sti
pop
repz
sub
clc
pop
push
fldcw
mov
push
leave
fwait
mov
pushf
mov
das
push
cmp
stos
mov
add
incl
repnz
cmp
addr16
xchg
jle
mov
push
popf
pusha
adc
rcrb
dec
popa
sbb
mov
and
lock
mov
mov
mov
insl
sbb
sub
std
sbb
fmulp
nop
or
fmulp
outsb
mov
jg
icebp
dec
test
divl
lret
jae
outsl
sbb
repnz
push
sub
inc
and
popf
mov
loop
inc
and
iret
sti
popa
int3
ss
pop
push
add
sbb
jnp
lret
imul
xchg
dec
and
ss
mov
dec
scas
xor
xlat
jg
std
cmp
orl
pop
jbe
std
leave
sti
enter
rorb
cmp
and
xchg
aaa
lret
sub
insb
test
jge
fiaddl
jg
mov
mov
mov
push
push
aad
xor
mov
inc
xorb
adc
stos
pushf
dec
cwtl
cmp
cmc
add
adc
lahf
repnz
cmp
sbb
pop
sti
dec
push
das
push
out
mov
pop
dec
ret
adc
xor
mov
cld
dec
jecxz
pusha
lcall
push
sub
or
mov
or
xlat
out
fsub
dec
outsl
add
xchg
mov
inc
orl
ret
aad
push
xor
push
pop
fsubs
inc
lcall
sbb
inc
out
fsts
xchg
cmc
test
and
pop
push
cltd
sub
fwait
enter
mov
inc
addr16
inc
xor
aad
or
mov
lcall
pop
mov
mov
outsb
repnz
lahf
jle
sbb
mov
std
bound
cmpsl
or
sbb
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
cli
lret
push
push
cli
adc
fmull
adc
sar
sbb
jno
in
mov
push
push
hlt
xchg
insb
scas
add
jae
dec
cmp
jbe
jmp
lret
mov
adc
ret
inc
cmp
dec
dec
xlat
int
cmp
mov
cmpsb
pop
mov
or
dec
or
and
je
xor
cmpsb
xor
mov
enter
jns
fsts
jbe
push
xor
addb
mov
xor
stos
and
out
stc
vpcmpeqd
sbb
inc
jmp
lret
ja
jb
cmp
push
xchg
scas
imul
cmp
fisttpl
movsl
xchg
test
movb
mov
fsubrl
imull
cmp
hlt
jnp
cmpsb
push
repz
dec
stos
pop
jmp
mov
lea
repz
fdivrs
or
adc
cmp
dec
movsl
cwtl
inc
inc
and
jmp
dec
mov
adc
jnp
jg
call
gs
mov
push
cmp
call
loope
push
jnp
lods
into
fbld
push
jno
popa
xchg
sbb
bound
bound
out
gs
mov
push
push
mov
ss
dec
xor
movsb
icebp
mov
pop
stos
test
push
testb
push
int3
outsl
or
cmc
mov
mov
hlt
and
fdivl
mov
outsb
xor
or
jno
loopne
push
mov
mulb
or
add
into
adcl
jmp
daa
cmc
je
pop
cmpsb
xor
xchg
adc
seta
and
mov
add
and
ret
adc
pop
repz
pop
loopne
dec
scas
aas
clc
push
imul
jns
pushf
cld
addl
arpl
and
lret
and
sbb
out
dec
ret
popa
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
notb
adc
movlps
mov
inc
pop
jecxz
mov
push
push
shl
mov
adc
inc
pop
xor
add
imul
loop
shrb
push
test
adc
icebp
clc
sub
mov
push
inc
mov
fbstp
jo
adc
fiaddl
or
pop
nop
xchg
xchg
mov
push
adc
cmp
ficoms
or
daa
pop
js
popa
add
lods
out
fistl
repz
or
inc
aaa
stc
popa
nop
mov
pop
aam
fistl
and
pop
out
dec
movsb
pop
mov
iret
jge
sbb
lret
in
fwait
sbb
test
sub
rcll
in
cmp
cmp
subb
add
xchg
sub
insb
push
enter
or
xor
hlt
punpckhwd
rorl
sbb
push
arpl
in
stos
sub
insl
lds
ljmpw
sbb
out
test
gs
jno
sbb
inc
xor
xchg
lea
test
loop
test
add
mov
xor
iret
pop
cmp
add
iret
jg
stc
jge
shl
daa
int
repz
cmc
dec
add
loope
cwtl
adc
adc
in
movsb
jle
gs
rcrb
popf
aaa
pop
cmp
cmp
ljmp
jge
ja
adc
pushf
cmp
test
push
jae
and
mov
insb
out
cmp
xchg
mov
jne
push
cwtl
sti
mov
fwait
jnp
mov
cli
lea
dec
jb
sub
push
ret
mov
sub
out
je
int3
rclb
sarl
push
sbb
iret
les
and
mov
dec
push
xor
fisttpll
cmp
cmp
sti
lds
jmp
inc
xchg
fmull
push
push
mov
aas
add
cmp
cmp
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
lret
push
call
mov
cli
in
xor
loopne
data16
xor
pop
sub
in
dec
jg
push
xor
adc
pop
imul
cmp
sti
mov
jne
int
nop
fidivrl
mov
dec
call
xor
js
movsb
mov
xchg
fidivrl
es
mov
dec
test
cs
or
aaa
push
sbb
sub
push
iret
or
adc
jns
popf
mov
pop
mov
mov
test
imul
pop
in
pop
lods
jg
adc
movlps
pop
pop
je
inc
pusha
push
out
xor
lcall
mov
jp
scas
outsb
fistl
cmpsl
lock
inc
mov
jb
lcall
adc
xlat
inc
mov
xor
or
push
in
call
mov
mov
clc
ret
mov
daa
or
cs
notb
bound
push
push
repz
test
cli
adcl
nop
or
das
mov
imul
arpl
sti
mov
pop
dec
enter
daa
ljmp
and
je
pop
ds
or
lock
arpl
add
or
mov
in
and
push
lret
pop
outsb
movsb
jp
jle
call
adc
lds
dec
mov
push
fcoms
push
pop
sbbb
insb
int
jno
mov
stos
mov
pop
ss
test
insb
push
fstpt
inc
mov
mov
popf
addr16
repnz
fdivs
mov
rorb
push
cmp
je
loopne
xlat
add
popf
mov
cmpsl
dec
lret
xor
dec
fsts
pop
pop
inc
shl
icebp
sarb
mov
inc
fwait
jmp
jno
jle
sbb
adc
pop
mov
adc
fadd
mov
out
dec
stos
js
repz
and
loop
xchg
xchg
dec
mov
mov
mov
int
inc
mov
lahf
sahf
loope
push
out
shll
cmpsb
or
pop
out
dec
jmp
pop
shlb
mov
pop
sub
jb
adc
movsb
fcmovnb
cmp
outsl
mov
push
or
sbb
add
adc
sbb
push
int
sub
cwtl
ja
mov
in
sahf
mov
and
lahf
xor
outsl
int
jo
bound
imul
xchg
pop
adc
jb
mov
and
lret
mov
icebp
movups
xor
imul
xlat
pop
lds
scas
popa
icebp
inc
enter
push
lods
jno
scas
xor
cmp
xor
and
push
dec
xchg
add
fnstenv
inc
sbb
cmp
dec
int3
dec
sub
pop
cmp
cmp
push
xchg
and
pop
push
clc
jmp
push
insl
cld
ret
fs
js
pop
leave
dec
pop
xchg
addr16
mov
sub
leave
xor
das
dec
lods
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
pop
in
jle
jmp
adc
sbb
jmp
imul
fisubrl
scas
mov
mov
adc
adc
ror
int3
jbe
aaa
mov
lods
adc
adc
xlat
jp
or
push
hlt
push
dec
enter
add
test
mov
lods
imul
lds
jg
js
sarb
fwait
scas
dec
test
xor
imul
sbb
stos
stos
arpl
and
jle
xor
sti
int
jp
ret
jae
shrb
cltd
sub
jl
push
adc
mov
jecxz
xchg
push
andb
dec
cmpsb
pop
xor
cmp
cmp
pop
adc
mov
std
xchg
hlt
fildl
mov
jb
adc
das
jb
jo
fs
addr16
fwait
jnp
push
mov
sahf
leave
jo
push
ret
test
cmovnp
lea
bnd
sahf
shll
xchg
jl
push
insl
iret
cmp
icebp
xchg
lret
stos
imul
pushf
js
xchg
add
mov
xorb
pop
inc
mov
mov
aam
mov
pop
mull
test
cs
or
mov
pop
adc
cmpsl
bound
pop
pop
pushf
sub
push
xchg
int3
shrb
push
pop
dec
movsb
fdivrl
dec
clc
xchg
mov
mov
cmp
pop
mov
insl
movsb
pop
sub
xor
mov
pushf
adc
testb
lods
int
addr16
xchg
or
int3
lods
cli
push
dec
arpl
or
cmc
insb
arpl
ss
jle
dec
or
lahf
inc
dec
nop
jp
insl
testl
xchg
dec
inc
cmpsb
lret
inc
in
push
fisttpl
inc
aam
xor
and
in
jae
push
xor
sub
pop
jnp
stos
mov
cmpsb
dec
or
or
dec
xchg
lea
and
cmpsb
mov
xchg
outsb
add
test
cwtl
sub
xor
fimuls
jmp
xor
mov
daa
lret
push
pop
leave
jno
mov
jbe
push
fsubl
jecxz
push
adc
lahf
test
lret
fidivrl
ljmp
sbb
out
inc
or
push
into
mov
xorl
dec
mov
sbb
inc
mov
inc
mov
dec
jecxz
aas
inc
add
cmp
cmpsb
gs
sub
mov
push
and
mov
xorb
pop
jle
xchg
pushf
mov
lahf
mov
mov
movb
mov
cmp
in
test
test
iret
pusha
cli
std
mov
in
cld
out
cmpsb
cli
ss
mov
or
sub
mov
lods
push
sbb
pop
in
lods
ljmp
or
mov
inc
mov
inc
mov
fildll
leave
dec
add
in
lahf
add
push
add
aaa
int
lds
add
enter
mov
jecxz
push
aad
lock
cmp
or
lods
jmp
leave
or
aam
or
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
push
and
fists
adc
adc
lret
pop
add
in
pop
adc
push
jle
sub
lds
cwtl
jl
cli
je
sahf
aam
into
arpl
stos
jb
arpl
lods
movsb
cmpsl
mov
es
mov
arpl
dec
jne
lods
push
repnz
cmp
xchg
insb
jno
jp
shrl
outsb
push
lret
sub
jnp
sahf
push
orb
mov
aam
hlt
inc
ljmp
aam
xor
inc
repnz
cltd
je
push
icebp
pop
fsubl
loope
les
adc
dec
and
iret
rorl
and
ljmp
or
incb
test
into
gs
cli
fldenv
lock
fwait
rolb
addr16
rcrb
jmp
xor
rcrb
push
add
inc
adc
dec
jmp
inc
pushf
les
push
and
inc
sbb
push
fstpt
sub
lahf
loop
mov
and
outsl
sarl
rorl
and
dec
ror
dec
jle
in
push
mov
rolb
test
mov
decb
adc
fs
fwait
scas
push
inc
add
adc
dec
push
repz
test
mov
cwtl
push
add
mov
iret
movsb
ljmp
push
jge
out
js
inc
pop
sarb
cmp
int3
pop
push
mov
vmovdqa
jmp
dec
dec
mov
xchg
lods
or
cs
rol
xor
mov
jg
adc
fwait
std
jb
es
stos
inc
rolb
push
cltd
add
pop
inc
es
psadbw
adc
lret
das
adc
imul
and
fcomps
repnz
xchg
jne
mov
nopl
lods
xchg
scas
data16
mov
into
mov
xchg
mov
arpl
lahf
xor
je
mov
scas
aad
cltd
pop
ljmp
pop
in
xchg
inc
pop
and
lods
or
insl
mov
dec
and
pushf
or
cmp
int
mov
stos
lcall
loop
repnz
je
sbb
cwtl
or
vmovd
roll
lods
adc
jecxz
add
mov
jns
push
add
repz
repnz
into
lods
movsl
decl
pop
ljmp
insl
add
mov
pop
sub
and
jo
aas
push
or
mov
out
outsl
dec
jne
pop
into
js
ret
mov
mov
fwait
leave
shl
mov
pushf
dec
data16
mov
mov
and
sbbb
push
dec
imul
adc
loopne
push
scas
sub
or
pop
dec
shr
and
sub
and
dec
rcll
and
add
je
ja
mov
jge
loope
popa
dec
jecxz
mov
test
mov
lcall
int3
sub
adc
scas
cld
shll
pop
push
inc
in
add
mov
mov
ljmp
jne
mov
pop
cmp
lock
ljmp
mov
pop
std
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
xchg
and
inc
fstl
adc
adc
push
in
pop
iret
jb
jecxz
sbb
rclb
cwtl
inc
or
jge
dec
imul
cmp
imul
in
dec
sub
dec
add
daa
bound
lods
sub
add
pop
imul
adc
adc
cmc
jb
add
stos
push
push
sub
pushf
and
inc
repnz
xchg
in
mov
in
andb
mov
popf
out
popl
cs
daa
scas
jnp
pop
push
xor
test
fisttpll
jbe
aas
adc
out
push
call
mov
fdivs
push
sahf
outsl
pusha
loopne
pop
pusha
push
jl
mov
lds
mov
xor
dec
adc
or
in
call
aas
fs
shr
adc
sub
test
roll
sub
mov
les
enter
cs
sub
jo
in
jne
xchg
jecxz
mov
push
xor
popf
cmp
add
push
in
ja
push
inc
cmp
movsb
ja
jl
test
jge
xchg
lock
sbb
stc
imulb
movsb
mov
jmp
or
in
cli
popa
sub
lods
cld
rolb
outsb
incl
and
fisubrl
cld
sbb
adc
hlt
dec
fdivrl
subb
lods
mov
stc
ja
outsl
adc
add
leave
pop
add
stos
xchg
test
fwait
pop
andb
adc
mov
pop
inc
and
test
pop
fisubs
out
adc
rcl
stos
push
rcrl
sbb
jbe
cmpsl
dec
add
out
jg
or
loopne
cmp
or
mov
jle
pop
mov
movzwl
or
and
push
pusha
out
xchg
lock
icebp
xchg
test
mov
cmpsb
cmp
stos
repnz
dec
mov
xor
mov
daa
out
mov
dec
mov
data16
pusha
dec
xor
pop
push
in
pop
push
sub
incb
hlt
xchg
pop
punpcklwd
mov
xchg
mov
mov
xchg
pop
andb
sar
jge
xchg
add
ficoml
rorb
add
mov
mov
das
ficoms
mov
and
nop
test
cmp
daa
fiaddl
push
adc
roll
xchg
adc
mov
movsb
loope
shrb
mov
ret
sbb
dec
pop
lret
inc
cli
movsl
pusha
stos
out
bound
shl
enter
inc
mov
int3
mov
movsw
xor
cmpsl
lea
xlat
mov
lret
daa
cli
shlb
ret
pop
push
jne
xchg
rcll
mov
adc
fmuls
and
xchg
hlt
int
mov
ljmp
cmp
out
call
dec
out
add
fwait
push
test
loope
enter
xor
shll
int3
das
popf
leave
dec
cmp
aad
je
mov
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
dec
push
jl
sahf
aad
adc
adc
stc
fimuls
daa
mov
push
xor
insl
cmp
ret
imul
inc
pop
das
std
pop
fcoms
sub
arpl
dec
dec
lods
into
adc
mov
sbb
jnp
in
sbb
add
mov
xor
stos
xchg
xor
lahf
push
and
scas
in
fimuls
jne
gs
je
sub
ja
xchg
jnp
inc
cmp
cmc
mov
xchg
stc
jecxz
add
mov
mov
inc
jb
cmc
inc
imul
adc
nop
aam
xchg
jo
into
movsb
inc
in
insl
out
mov
jb
fucomp
lock
enter
psllw
stc
scas
push
push
adc
cli
fmull
cwtl
insl
loope
xor
sbb
pop
dec
xchg
scas
xchg
xchg
push
sub
mov
dec
pop
adc
add
adc
adc
iret
adc
movsb
std
cmp
into
push
sub
mov
andl
mov
sub
stos
sbb
negb
daa
dec
aas
xor
mov
pop
jbe
int3
scas
pop
lcall
imul
insl
and
mov
jecxz
sbb
leave
cli
dec
sub
out
sbbl
test
sub
push
loope
jns
push
aad
jno
pop
stos
inc
imul
mov
cli
sbb
inc
jl
xchg
sub
and
xchg
sti
pop
and
mov
sub
popf
and
mov
cltd
loopne
cmp
lock
fstp
loop
adc
call
sub
sarb
dec
pop
mov
push
add
add
xor
adc
sbb
call
cmp
mov
cmp
add
cmp
test
popw
xchg
decb
inc
inc
jp
xchg
or
mov
out
fisttps
nop
or
stc
fnstsw
mov
cwtl
dec
jg
cmpsl
push
push
scas
mov
shrl
dec
fidivrs
pusha
and
inc
cld
sub
cmp
out
cmpsl
arpl
inc
cmp
xchg
cli
adc
inc
dec
loope
div
sub
iret
popl
fmuls
fsubrs
lret
orl
in
jg
sbb
pop
nopl
hlt
insl
xlat
mov
imul
imul
cli
ljmp
or
xchg
adc
fdivrl
ljmp
ja
dec
mov
out
outsl
repz
cmpsl
addr16
add
mov
inc
lahf
addb
sub
cmc
cmp
fwait
xor
shl
pusha
cmp
and
cmpb
and
stc
sbb
sub
pop
int
repnz
inc
sbb
pop
movsl
push
es
xchg
loope
icebp
cmp
mov
xchg
xor
das
mov
mov
lods
sbb
test
test
les
sbb
pop
push
xchg
arpl
xor
scas
or
pusha
clc
jne
sub
pop
rol
pop
xor
cld
test
out
add
add
fidivrs
jb
pop
sbb
cwtl
sbb
xchg
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
dec
xchg
mov
adc
adc
fsts
aas
ret
pushf
ja
mov
imul
dec
aas
fcoml
sub
inc
mov
adc
leave
hlt
mov
adc
aaa
aaa
cltd
stc
and
push
jmp
mov
hlt
dec
cltd
mov
addr16
outsb
inc
push
mov
pop
scas
in
mov
jo
loopne
hlt
and
mov
xchg
cwtl
ss
jno
push
dec
pop
fcoml
jb
mov
call
push
xlat
and
sub
sti
mov
xor
lods
sti
fidivs
adc
inc
and
push
pop
rcrl
movsl
insb
adc
scas
iret
mov
xor
lret
loop
and
cmp
ja
pop
call
data16
dec
scas
into
sbb
sahf
popf
ds
xchg
xor
and
cmpsl
push
enter
movsb
scas
add
xor
in
add
push
push
mov
xor
cs
stc
mov
inc
test
lock
scas
cmp
scas
mov
pop
xor
cltd
clc
xchg
dec
test
aam
add
adc
into
mov
push
or
cli
rorb
jnp
cmc
ficomps
lods
jb
inc
sbb
or
smsw
xchg
xor
sub
adc
pop
mov
add
mov
ja
jns
mov
mov
mov
ja
outsl
repnz
ret
pop
mov
and
jno
inc
mov
leave
push
inc
sahf
outsb
out
scas
subl
sub
sbbb
mov
lcall
adc
cmp
scas
or
xlat
mov
outsl
sbb
sbb
scas
inc
roll
mov
add
movsb
ljmp
xlat
pusha
jnp
mulb
xor
jmp
bound
paddq
or
inc
psubsb
jnp
ret
fsubs
shl
mov
jno
jp
inc
fwait
cmpsb
fbstp
push
push
loope
jo
sub
clc
mov
add
icebp
mov
xorb
cld
add
stos
pushf
in
dec
xlat
ss
adc
and
jne
sbb
fs
cs
into
pop
jns
pop
cmp
das
leave
in
push
mov
lock
jecxz
push
sub
lea
adc
xlat
cwtl
sti
jbe
mov
addr16
push
sub
pop
mov
repz
cwtl
movsl
push
xchg
fs
inc
xchg
dec
sub
imulb
mov
mov
int3
out
jns
in
cmc
mov
dec
dec
fildll
inc
mov
jnp
out
outsl
mov
and
pop
sti
cmc
outsl
negb
inc
adc
jle
add
xor
movsb
mov
mov
repnz
loop
jae
cmp
leave
pop
fisubl
mov
cmpxchg8b
lret
jbe
push
out
inc
icebp
dec
jne
mov
jl
cld
adc
mov
rorl
gs
and
push
das
rcrl
mov
add
pop
lret
push
fldt
lret
cmp
pusha
test
and
dec
dec
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
push
jmp
out
mov
mov
ss
mov
das
jmp
adc
or
nop
mov
adc
std
sub
jmp
lfs
fistpll
aad
mov
addb
sbb
stos
pop
daa
push
inc
adc
int
pop
lcall
rorb
push
aaa
mov
aad
push
lods
insb
inc
jg
notb
sub
inc
jbe
mov
cs
out
jecxz
lahf
bound
mov
xlat
xchg
stos
sbb
inc
lods
jmp
cmp
in
scas
mov
in
dec
jl
and
pop
xchg
cmp
cmp
cmpsb
sbb
jo
mov
or
mov
pop
inc
xchg
jne
stos
fwait
dec
ja
cwtl
xchg
fsts
outsl
lock
xchg
incl
pop
xchg
xchg
add
mov
aaa
adc
add
inc
xor
sbbl
aas
push
dec
daa
add
sub
ja
mov
iret
adc
ja
xor
imul
pushf
sub
aas
les
jae
xchg
leave
je
faddp
mov
ljmp
cmpsb
mov
mov
lods
pushf
pop
js
outsb
movsl
movb
jbe
sbb
in
sbb
mov
js
lods
cmp
push
out
cltd
rclb
xor
mov
in
cmp
mov
pop
adc
sub
mov
out
pop
aaa
mov
imul
and
ret
call
jmp
lret
shlb
add
push
add
popf
cpuid
loop
rolb
dec
push
pop
leave
or
pop
sub
fst
xchg
mov
dec
dec
sar
cld
push
sbb
fsubs
sahf
inc
xchg
dec
pop
mov
out
xchg
mov
mov
aas
xchg
scas
add
pop
cmp
mov
cs
in
addb
lods
in
inc
inc
fisttpl
cmp
lahf
and
subl
xor
push
fists
ljmp
add
xchg
and
jne
sahf
sub
mov
xchg
jge
lahf
lods
scas
push
ljmp
in
adc
fisttpl
mov
mov
addr16
ret
mov
mov
loope
inc
inc
fsts
mov
cli
pop
daa
popf
std
mov
in
mov
push
mov
iret
or
and
dec
iret
mov
mov
in
add
xor
mov
hlt
pop
lret
or
mov
mov
adc
fsubrs
out
jno
xor
xor
mov
cld
dec
scas
fisttps
pop
lret
test
ss
xchg
std
push
mov
out
ficoms
test
bound
iret
out
fmuls
or
adc
les
in
xchg
jae
cmp
outsl
cmc
mov
jns
fs
jg
push
popa
xorl
push
pop
xchg
add
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
test
adc
jo
adc
cltd
xchg
sbb
int3
rclb
add
or
or
cld
gs
mov
and
addr16
mov
mov
out
fmul
or
mov
xchg
aad
movsb
mov
dec
add
repnz
pusha
fistpl
sub
mov
mov
test
and
and
cmp
mov
mov
mov
sbb
call
shll
mov
icebp
div
pop
stos
call
leave
je
shl
push
adc
popf
or
adc
aad
ss
repnz
push
out
dec
push
into
lret
inc
cwtl
call
fwait
stc
add
xchg
scas
js
shrl
cmp
in
inc
movsb
loope
daa
and
in
jmp
push
cmp
cmp
xor
add
mov
add
dec
stos
les
rorb
inc
sub
jg
jg
iret
popw
hlt
fstps
push
mov
test
and
jmp
mov
mov
in
call
fdivrp
scas
push
sbb
inc
cmp
enter
loope
xchg
cwtl
dec
icebp
adc
pop
jle
mov
aas
insb
push
push
es
push
call
scas
push
ret
sbb
jns
mov
notb
hlt
cmpsl
jno
mov
push
dec
lods
mov
sub
and
adc
push
mov
rcrb
lods
mov
test
lods
push
pcmpgtw
xor
push
daa
jo
cmp
adc
jae
ret
dec
mov
adc
adc
stos
stc
cmpsl
fsub
sbb
push
push
add
and
div
imul
jecxz
jmp
inc
scas
or
lock
dec
xchg
sbb
mov
pop
fiaddl
mov
fs
sub
jle
mov
es
mov
cwtl
mov
icebp
movsl
cmp
subl
add
pop
loope
adc
inc
mov
lahf
mov
xlat
enter
sbb
mov
scas
and
sbb
fbstp
repz
adc
lret
and
pop
jno
daa
lea
jg
xchg
adc
add
sbb
movb
sti
stos
xor
in
jo
sti
les
aam
and
loop
fsubrp
xchg
dec
fsubl
push
sahf
xchg
ret
mov
jle
adc
aad
jno
stc
loop
push
imul
mov
sub
shlb
in
jno
jo
mov
lea
xor
test
mov
lret
or
leave
jae
in
fwait
je
mov
mov
pop
push
add
xchg
or
xchg
push
xor
sbb
cli
fbld
scas
into
inc
mov
mov
jae
push
fcoml
test
nop
popf
and
fwait
add
hlt
pop
je
sub
movsb
and
cltd
ret
into
jl
push
or
lods
hlt
outsl
scas
ljmp
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
pop
or
mov
adc
adc
dec
push
lret
das
push
adc
pop
sbb
shrb
mov
and
mov
hlt
adc
int3
scas
xchg
cltd
push
inc
xchg
xchg
mov
push
jle
shll
jle
push
add
adc
jmp
adc
dec
push
fnsave
mov
push
sbbb
cmp
aaa
mov
dec
in
popa
mov
xchg
dec
push
lock
pop
movsl
rorb
cmp
subb
adc
aaa
jge
lret
lock
inc
stc
mov
cltd
test
test
push
scas
idiv
pop
sub
xchg
leave
or
pop
xor
push
enter
inc
cmpsb
xchg
cmp
sbb
sbb
sti
sub
xchg
add
inc
lret
mov
push
test
les
dec
arpl
test
push
jge
andb
out
movsb
inc
stos
push
aas
cmpsb
jmp
jno
fcmovu
dec
test
lret
stos
sub
mov
iret
loope
mov
call
insl
sbb
enter
test
scas
jle
leave
push
clc
loope
stos
push
pop
mov
xor
aaa
push
out
adc
hlt
cmpb
sbb
mov
mov
gs
add
xchg
xchg
lret
pop
sbb
arpl
loopne
cltd
adc
dec
insb
mov
repz
and
mov
shll
push
adc
inc
shrl
fwait
or
fdiv
pop
push
xchg
mov
and
jg
andl
mov
lret
inc
out
std
push
ret
test
mov
xor
sbb
jmp
dec
jg
jb
in
push
xchg
scas
pop
into
loope
inc
dec
mov
sahf
ljmp
fldl
dec
enter
sub
loopne
mov
sbb
or
cmp
test
into
out
movsl
cmp
cltd
test
mov
ror
lock
cmp
xchg
pop
adc
xlat
fnsetpm(287
testb
mov
cltd
cmp
popa
dec
xor
in
dec
xlat
mov
or
push
dec
dec
dec
add
repnz
insl
repz
fimull
lahf
mov
xor
xor
inc
jnp
inc
inc
lcall
lcall
out
mov
pop
popa
int
adc
movsl
fdivrl
pop
into
test
jge
mov
mov
stos
and
jnp
cs
add
or
pop
xor
push
xlat
and
dec
cltd
sarl
scas
dec
pop
mov
inc
pushl
and
jmp
rolb
ror
cmpsl
out
movsb
inc
pop
and
inc
out
dec
std
lcall
xchg
pop
test
shll
jns
push
aam
xor
into
mov
rcr
lgs
xlat
enter
mov
cmpsb
lret
aad
in
fdivs
jno
pop
xchg
jnp,pt
fdivrs
out
mov
and
inc
adc
inc
lcall
add
punpcklbw
lahf
jb
dec
icebp
dec
int3
add
cltd
test
push
jns
or
and
dec
aad
in
jmp
jmp
adc
fsubrs
jbe
push
jecxz
les
decb
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
add
data16
incl
xchg
sbb
sarl
fcmovnb
inc
gs
mov
cmpsl
push
fists
loope
popf
sbb
mov
and
mov
inc
call
ss
inc
jbe
cmpsb
cmp
mov
leave
adc
stc
scas
adc
and
jne
pusha
cld
icebp
jae
negl
frstor
sub
fmull
sti
ja
mov
jmp
cmp
push
fidivs
sbb
mov
pop
add
mov
lret
roll
jge
jmp
cs
not
test
nop
shl
cmpsb
push
mov
jg
cmpsl
pushf
loope
xor
add
sub
mov
cmpsl
add
rol
sahf
jge
out
call
in
cmp
jae
test
cmpsb
leave
mov
aam
mov
cmc
jnp
push
or
mov
and
fcmovnb
pusha
lcall
xchg
hlt
addr16
mov
mov
gs
sub
cwtl
cltd
hlt
jbe
cmp
fisubs
inc
push
pop
mov
adc
mov
dec
aaa
push
mov
enter
das
aas
ja
cmp
dec
inc
scas
das
mov
push
cmpsl
mov
push
mov
push
cwtl
inc
out
xlat
adc
jns
shlb
cld
xchg
rorb
sub
cltd
mov
sbb
mov
lds
xlat
inc
lcall
call
xchg
int3
test
mov
push
xchg
jno
mov
jg
fsubl
jns
test
pop
push
rcr
push
jecxz
aad
jns
lea
call
jmp
jns
in
xchg
pop
test
in
nop
mov
mov
jae
sub
cmp
ret
pop
pop
repz
addr16
out
lods
mov
loop
sub
aas
cmp
fs
xchg
std
sbb
sbb
inc
mov
jecxz
out
mov
fwait
shll
out
inc
pop
pop
sub
jge
outsb
ss
or
push
sbb
jbe
jb
les
dec
jg
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
sbb
lods
imull
adc
pusha
cmp
xor
aas
mov
jbe
outsb
lret
add
js
gs
and
xor
aam
mov
mov
sub
sbb
dec
repnz
sub
or
call
mov
popf
lcall
add
popa
mov
pop
cmpsb
lretw
mov
inc
sub
inc
std
inc
sbb
inc
dec
jns
sub
lret
jnp
fcoml
ret
ret
cli
les
mov
rolb
lds
es
and
xchg
pop
jecxz
int
mov
mov
addb
cmp
jmp
mov
sub
jl
cmp
stc
mov
add
ja
mov
sbb
mov
sahf
and
icebp
push
dec
js
ja
jg
mov
mov
sub
add
sub
pop
enter
push
push
sub
shll
fdivs
test
cmp
dec
and
cmp
nop
jnp
js
lods
add
fwait
mov
fildll
fdivrp
mov
cs
cs
ror
push
adc
mov
enter
cmp
and
rclb
xchg
jl
pusha
jnp
push
enter
faddl
jne
pop
data16
cli
mov
and
xchg
testl
mov
cwtl
bnd
sub
shlb
lea
sub
jae
push
sti
pop
xchg
out
or
sbb
pop
lret
rcrl
sub
pop
sbb
test
pop
add
daa
sub
mov
pop
or
nop
inc
test
arpl
fwait
xchg
inc
loop
stos
jns
mov
cmc
add
jmp
mov
mov
enter
adc
arpl
sbb
xchg
fwait
cmpsl
cmpsb
add
aaa
mov
ss
sub
lock
xor
stc
cmp
int
scas
stc
aas
in
sbb
repz
inc
jle
icebp
fisubs
pop
fnstenv
and
or
mov
repnz
mov
ror
frstor
lea
adc
inc
dec
sbb
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
adc
adc
stos
movlps
loop
mov
pop
jnp
pop
sbb
mov
mov
sub
lods
outsb
cmpsl
lret
adc
adc
xchg
push
jp
in
cld
jno
roll
inc
pop
push
mov
add
test
fdivl
clc
test
test
jo
lcall
pop
mov
push
add
popa
scas
push
ret
dec
in
mov
xor
xor
adc
push
ret
negl
aaa
push
mov
test
push
fucom
mov
sub
xor
mov
xor
inc
sbb
enter
dec
inc
cmp
dec
xchg
mov
scas
test
test
inc
jbe
lcall
xor
sub
add
imul
xor
enter
ds
push
mov
aaa
mov
adc
shl
mov
call
arpl
repnz
push
xor
div
and
add
jge
in
push
cmpsb
and
test
cs
dec
xchg
mov
sub
notl
cmpsb
lds
pop
mov
imul
push
pop
or
or
mov
push
ss
inc
mov
les
sbb
popf
movsb
push
test
out
lahf
xor
ljmp
stc
jae
popa
inc
sti
jle
inc
int3
sub
aas
ret
in
xor
rolb
int
mov
xchg
dec
add
pushf
dec
jg
or
xor
add
test
sub
push
movsb
in
sub
or
stos
sub
mov
sub
hlt
jb
cmp
dec
sbb
inc
scas
push
pop
cmpsl
hlt
jle
pop
lea
mov
rcll
mov
cmp
adc
repz
fisubs
mov
test
inc
and
mov
ljmp
cmp
movsl
test
mov
push
stos
add
pop
xchg
cmc
je
loope
xor
repnz
xchg
xchg
icebp
adc
or
decl
arpl
cmp
idiv
loope
push
xor
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
add
mov
sbb
adc
stos
movlps
scas
or
loop
and
jb
fidivrl
insb
lock
ret
xor
cmpsl
jp
fildll
fnstcw
or
icebp
outsb
jne
aad
lahf
int
or
cld
pop
popa
outsb
adc
dec
jl
push
mov
push
out
mov
xchg
stc
stos
pushf
shlb
adc
xlat
sub
enter
subb
and
das
sbb
pop
filds
mov
scas
fdivl
dec
lret
jmp
loope
lds
jns
jbe
loope
xchg
jmp
sbb
jmp
cmpsl
inc
and
fisubrs
lret
inc
sub
imul
adc
jo
sti
fisubl
or
xchg
mov
stos
mov
or
mov
xor
int
fsubp
fiadds
hlt
push
popa
pcmpgtb
mov
mov
dec
push
xor
into
cmp
hlt
in
scas
pop
push
xlat
mov
xchg
lea
xchg
loopne
test
add
arpl
mov
cmp
inc
inc
pop
xchg
iret
xchg
sbb
xchg
cmp
frstor
rcll
inc
cwtl
popf
cmc
insb
fcomip
cmpsb
jmp
lret
xor
lcall
pop
adc
ror
adc
test
mov
and
cli
sbb
arpl
sub
test
iret
mov
jmp
xchg
incb
cmp
in
xor
popf
loop
test
fs
add
inc
mov
in
lahf
movsb
in
insl
or
inc
daa
ljmp
faddp
or
xor
imul
cmp
pop
lret
daa
loop
movsb
dec
xor
imul
je
idivl
int
stos
addl
int3
lds
push
je
js
cli
scas
test
out
mov
xchg
outsl
add
js
frstor
lret
push
adc
inc
in
push
pop
movl
dec
dec
pop
stos
mov
stos
xor
mov
xchg
push
cmp
clc
or
scas
sub
inc
scas
repz
cmpsl
xlat
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cmp
adc
mov
fsub
add
sub
addb
dec
out
adc
ljmp
jae
inc
mov
cmp
stc
ljmp
movsl
mov
cwtl
shrb
mov
leave
sti
lahf
mov
call
pop
je
mov
enter
pop
in
sub
mov
fcompl
stos
push
repnz
mov
and
iret
scas
xor
and
cmp
jecxz
xchg
jbe
xlat
cli
fsubl
adc
loope
xchg
push
fstps
in
sub
jle
xchg
mov
add
shrb
xor
stos
nop
mov
push
mov
adc
mov
or
pop
sbb
sahf
mov
mov
sbb
xchg
std
inc
mov
rcr
lcall
push
dec
gs
xchg
pop
push
pop
pop
xlat
imul
mov
mov
inc
adc
inc
jb
push
imul
mov
retw
xchg
cmc
xchg
xchg
and
inc
xor
mov
sahf
cmpsl
cmp
in
popf
fldcw
loop
hlt
icebp
stos
add
jp
shrl
jbe
cmp
bnd
std
insl
and
in
hlt
mov
mov
leave
xchg
cmp
out
or
repz
mov
mul
lods
sbb
sbb
add
cmp
leave
int
or
ret
mov
lods
aas
mov
push
sbb
out
inc
jb
cli
movsl
outsl
push
lret
push
cmp
daa
ss
adc
xor
test
clc
inc
pop
mov
xor
pop
shlb
stc
jbe
fwait
inc
nop
cmc
fwait
xchg
dec
cli
cmp
lods
stos
cmp
ljmp
imul
sub
fistl
pop
jmp
dec
bound
xlat
dec
push
scas
out
mov
sti
notb
pop
mov
xchg
mov
decl
mov
push
jbe
nop
pop
sub
jl
rol
jne
daa
fldenv
push
mov
scas
fwait
insb
fsincos
jl
push
inc
add
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
out
movsl
popa
loopne
jns
xchg
lods
push
inc
cmp
xchg
sub
dec
mov
fxch
inc
or
icebp
add
and
dec
mov
mov
jns
pusha
fwait
mov
jns
adc
and
dec
push
or
fldcw
jo
mov
aad
xchg
in
mov
test
ds
mov
lods
ret
ret
jp
pop
into
les
pop
jle
sarb
inc
scas
cmp
mov
test
inc
les
jg
addr16
insb
mov
push
movsl
test
in
jns
cld
in
pmulhuw
jg
mov
aad
and
cmp
stc
jns
mov
adc
bswap
in
test
cld
dec
popf
inc
dec
jle
rcll
out
cmp
jle
xchg
push
int
das
or
mov
jo
add
ds
jge
dec
xlat
jo
jl
incb
lea
cmp
ret
add
ljmp
leave
pop
pusha
ror
dec
cmp
push
stos
lahf
cmc
and
adc
lahf
sub
add
fdivrl
in
lcall
mov
sub
ds
cmovnp
outsb
das
ficompl
or
mov
xor
shll
movsl
daa
arpl
rcrl
rcll
jmp
data16
fs
fcoml
mov
lock
or
sbb
insl
repz
cmpl
dec
and
lods
jno
lea
pushf
push
dec
sti
fucom
sar
jp
pop
pop
xor
sahf
hlt
ss
mov
dec
or
dec
mov
push
nop
push
add
adc
mov
dec
sahf
inc
mov
lods
push
daa
cmp
push
rorl
ja
cltd
data16
insb
insl
fisubrl
or
pop
sbb
mov
mov
cltd
scas
clc
sub
loope
jge
nop
sahf
aaa
xor
pop
cmp
jecxz
jle
jbe
sbb
mov
and
sub
out
xor
or
add
sub
das
out
loope
and
jle
jecxz
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
dec
shl
jecxz
enter
cmpb
out
xlat
push
or
sub
cmc
imul
inc
cmp
cld
push
jae
jbe
xlat
inc
popa
testl
in
scas
ret
jg
shl
je
pushf
lea
add
push
add
push
push
xor
loopne
in
cmp
fimull
xchg
aam
mov
movsb
jnp
xor
jae
inc
aas
mov
push
xchg
jae
mov
mov
loop
push
scas
hlt
inc
je
inc
inc
insl
shll
pop
leave
push
push
cmp
jne
fsubrs
and
rcrl
stos
es
call
jns
fidivs
pusha
cmpsb
push
add
fisttpl
idivb
and
das
scas
out
lods
lahf
push
pop
out
aam
mov
dec
loop
adc
or
inc
or
cltd
scas
insb
out
or
jp
push
loope
xlat
jp
aaa
cmc
add
mov
insb
pop
and
add
out
push
mov
lret
pop
jo
aas
adc
mov
mov
enter
pushf
jecxz
mov
inc
ss
and
mov
jae
in
mov
dec
push
arpl
inc
cwtl
out
sbb
jbe
sahf
dec
lcall
inc
mov
pop
cltd
test
jg
jno
mov
adc
jb
jle
or
mov
test
sti
push
or
pop
out
popa
test
leave
movsl
ljmp
lock
mov
test
mov
cmpl
lds
jne
scas
sahf
mov
xor
popa
jns
lea
inc
xorl
pusha
jae
movsb
xchg
outsb
ds
push
or
ja
outsl
dec
mov
adc
daa
sbb
aad
mov
popa
or
test
lock
je
negb
fwait
jle
mov
pop
push
xchg
test
sbb
push
push
xchg
subl
lahf
push
out
xor
aas
rorl
pop
or
out
push
sbb
mov
mov
sbb
lods
jle
jno
mov
test
add
out
sub
xor
mov
cmc
movsl
fld
sub
andb
jo
sbb
dec
push
bound
sahf
outsb
push
sub
add
pop
push
mov
mov
cltd
insb
mov
frstor
lcall
fistpll
pop
outsb
mov
pop
jo
sbb
pop
xchg
push
out
dec
bound
je
sbb
dec
mov
mov
int
mov
pop
xor
add
daa
imul
shlb
inc
sahf
call
fdivr
daa
mov
scas
clc
mov
scas
add
push
jg
mov
jne
test
ja
shll
adc
iret
mov
xor
xchg
sti
sub
jg
xchg
int3
sub
inc
cltd
pop
movsl
fidivl
xor
repnz
add
iret
out
xchg
pop
adc
stc
jae
scas
mov
jge
jle
pop
push
inc
or
notl
cmpsb
sub
loopne
add
fnstenv
fdivrs
int
xor
push
adc
sbb
adc
mov
lcall
jmp
adc
data16
pop
sbb
xchg
or
fs
xchg
ljmp
jl
xchg
clc
add
xchg
scas
outsb
pop
call
cmp
je
icebp
test
pop
push
sbb
popf
ds
xor
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
mov
stos
loop
adc
pop
adc
adc
into
jae
xchg
insb
add
jmp
mov
outsl
inc
mov
push
sub
mov
pop
les
or
mov
xchg
inc
nop
xchg
jbe
or
add
mov
mov
lds
dec
sahf
js
adc
xchg
dec
mov
fldt
flds
sub
mov
sarl
pop
std
mov
stos
sbb
outsb
push
stos
jo
inc
addr16
test
adc
mov
stos
jo
cmpsb
repz
cwtl
jle
fimuls
enter
or
lock
out
fwait
or
iret
mov
mov
in
mov
sub
inc
pop
test
pop
xor
sub
mov
popa
sar
cs
add
pushf
iret
and
push
jge
mov
xlat
pushf
jecxz
andb
cmp
insl
shrl
and
jmp
or
cltd
inc
jmp
fdivl
dec
xchg
stos
shll
xchg
cwtl
idiv
lock
add
aas
cmp
xchg
fdiv
inc
mov
push
lcall
cld
imulb
and
dec
xchg
cmp
jge
dec
ja
mov
fsubr
or
fcoml
mov
icebp
aad
push
add
xchg
je
xor
outsb
in
push
dec
or
iret
cld
push
cli
pop
outsb
mov
mov
jge
lds
xchg
push
jne
push
mov
cltd
dec
mov
jns
inc
idivb
lahf
loope
repnz
and
push
ficomps
mov
or
ret
mov
shll
bound
fisttpll
lret
stos
fwait
aas
cmpl
mov
shr
pop
mov
or
xchg
test
movb
outsl
rcrb
xchg
fs
insb
int3
sub
into
jnp
inc
add
dec
out
xlat
add
mov
ja
paddusw
mov
xchg
ret
test
dec
dec
pop
es
inc
adc
xchg
movsb
cmpsb
sbb
mov
sbb
xchg
xchg
cli
mov
xor
mov
lods
inc
push
outsl
popa
mov
jno
xchg
and
mov
xchg
ljmp
and
push
scas
dec
mov
sub
mov
ljmp
movsl
imull
pop
sbb
or
mov
std
mov
orl
cwtl
cli
and
dec
fadds
mov
mov
shl
pushf
jle,pn
dec
cmp
sbb
jnp
mov
and
sti
mov
mov
cmpb
add
in
pop
cmpsb
jnp
adc
sbb
mov
cli
test
mov
sub
jno
jae
push
or
bound
cmpsb
dec
insb
sarl
pop
sbb
add
lahf
push
and
or
imul
fwait
mov
imul
mov
adc
jns
xchg
jno
loopne
test
or
fimuls
jb
mov
jae
lock
in
inc
int3
subl
adc
shlb
mov
jae
rcrb
cmp
inc
jae
dec
aad
fistps
in
aas
faddl
arpl
sti
sbb
shlb
or
movsb
cmp
mov
cmc
add
push
cmpsb
pop
outsl
jbe
inc
test
sub
push
leave
ds
repnz
jno
mov
mov
clc
ja
inc
jae
xor
rcr
fbstp
and
push
imul
test
jne
mov
sub
pop
scas
mov
ret
call
mov
fsubr
testb
hlt
fwait
imul
mov
lds
adc
xor
aas
sbb
fstps
dec
pop
jecxz
fsubrs
and
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
mov
mov
adc
movlps
xor
mov
jne
add
jle
mov
sub
rol
mov
add
in
and
pop
xchg
xchg
imul
fld
cmp
les
imul
dec
mov
jle
xor
xchg
dec
popf
ror
and
fimull
adc
stc
and
sti
dec
mov
add
sub
pop
dec
add
jno
shll
and
xchg
xlat
les
xchg
mov
mov
jo
fmul
into
push
dec
lock
les
jl
in
push
int
shlb
or
push
stos
movb
icebp
cmpb
jmp
arpl
push
into
jnp
adc
mov
adc
push
ss
cmp
aad
and
sub
and
cmpsl
scas
push
jns
es
jmp
dec
mov
mov
leave
js
jbe
imul
sub
adc
fdivrl
mov
lea
xor
arpl
xor
insl
ss
inc
lret
pop
call
ja
imul
or
out
adc
xchg
pop
pop
add
adc
sub
or
loope
imul
cmpsl
push
mov
icebp
and
or
adcb
enter
and
cmpsl
insl
xchg
loope
jmp
jb
loopne
out
adc
pop
cmp
clc
jg
adc
fidivl
xchg
and
sub
out
pop
push
or
add
jne
mov
push
push
clc
test
add
cmp
ja
add
mov
xchg
sbb
cmp
mov
add
inc
jmp
push
fcmovne
hlt
pop
inc
sbb
call
sbb
popw
xor
scas
mov
pop
push
popf
add
xor
xchg
sarb
xchg
pop
dec
fiaddl
xchg
xchg
or
and
mov
cmpsl
mov
pop
movsl
push
cs
sbb
jno
fstpt
mov
add
fs
icebp
inc
call
dec
and
popf
sub
std
and
bnd
or
hlt
insl
imul
sub
ret
sbb
xchg
xor
in
push
pop
shlb
or
scas
or
sti
ret
jne
sub
aam
xadd
out
jae
jb
mov
daa
hlt
mov
sti
jecxz
out
fistps
fmul
repz
push
test
rolb
inc
out
push
aad
xor
sbb
lret
insl
clc
aad
decl
jo
pop
or
add
xor
shll
jmp
out
xor
ret
ss
adc
mov
pusha
add
dec
je
and
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
out
clc
xor
dec
outsl
inc
sbbl
mov
psubusw
dec
xlat
out
add
inc
xor
xchg
cmp
into
or
cltd
ud1
and
fwait
jle,pt
xor
adc
lcall
arpl
jne
pop
mov
push
push
dec
cmpb
std
fsubrl
lea
cmp
cld
push
mov
push
cmp
clc
adc
adc
and
pop
jecxz
insb
ljmp
inc
or
fildll
and
lock
into
nop
shll
cmp
mov
filds
pop
mov
mov
lds
into
pop
imul
xchg
and
add
shlb
jle
movsb
cmp
pop
es
rclb
cli
xchg
dec
push
nop
cs
insb
push
mov
test
sbb
mov
xchg
mov
push
push
fistpl
jp
jb
xor
shll
adc
xor
mov
std
mov
sub
pusha
bound
jno
jnp
leave
inc
out
int3
loop
add
scas
pop
lock
outsb
movsb
adc
pop
sbb
sbb
jb
aam
out
mov
sar
shll
jb
xchg
xor
aaa
aas
push
fldl
iret
sbb
cmovbe
insb
jmp
cmpsl
out
icebp
push
push
imulb
movsb
int3
jo
mov
pop
in
insl
sbb
jo
or
movsl
pusha
push
adc
test
mov
cwtl
dec
fldcw
xor
pop
jo
fimuls
or
in
sub
mov
mov
ljmp
loopne
sarb
mov
sti
pop
jb
lcall
fstps
xchg
xchg
fldcw
xchg
lcall
fisttpl
ficoml
sbbl
jl
fninit
and
addl
lret
adc
lret
push
lret
loop
and
aad
sub
mov
inc
mov
pushf
lret
aaa
out
into
inc
fistpl
xlat
mov
std
ror
andb
test
sub
outsb
mov
outsb
loope
mov
jle
adc
inc
cmp
pop
jae
in
out
or
icebp
push
xchg
inc
pop
add
faddl
and
mov
arpl
or
dec
ret
xchg
in
add
cld
mov
xchg
cmp
lods
push
insb
roll
fwait
ror
push
repnz
lcall
test
shl
enter
adc
js
mov
out
push
jp
mov
in
and
mov
cltd
cltd
sbbl
sbb
iret
mov
in
test
mov
mov
mov
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
jmp
add
adc
movlps
sbbl
sbb
je
sub
sub
push
mov
daa
push
adc
push
dec
mov
mov
sti
sbb
gs
sbb
int
jmp
xor
xchg
add
std
jp
fwait
cltd
lods
pop
cli
mov
jne
cmc
jge
jnp
adc
dec
push
add
rorl
cmpsl
scas
jae
loop
orl
arpl
jne
int
insb
or
or
mov
mov
ss
nop
sub
jne
insl
sub
xchg
into
movsl
enter
jge
in
mov
ret
aas
pop
xor
push
jmp
mov
cmp
mov
or
out
xor
xor
xchg
mov
int3
fisubs
pop
inc
orl
xchg
stos
lcall
rolb
call
cmp
orb
adc
cmp
pusha
inc
js
ror
xchg
pusha
adc
scas
mov
popf
mov
inc
addr16
xor
inc
inc
nop
jb
pop
xchg
push
lds
lahf
lcall
sbb
in
and
push
lods
mov
and
dec
sbb
inc
mov
pop
aam
adc
mov
and
jo
mov
out
shll
add
fucomip
jmp
scas
loop
sbb
dec
or
cmp
in
dec
js
jns
cmp
icebp
pusha
ss
and
cmp
ret
xchg
pushf
aad
or
aaa
cltd
js
arpl
push
jns
out
jecxz
rolb
push
lret
mov
lds
lret
fsts
cld
jnp
movsb
jo
mov
cli
sbb
sti
or
pop
mov
and
push
sub
negl
out
les
dec
cmp
sbbl
rorl
jl
xchg
jnp
imul
push
mov
sub
divb
pop
ret
pop
enter
mov
add
dec
jecxz
lret
adc
insb
divb
cmp
mov
or
dec
jb
loope
jmp
jge
jg
into
sbb
ss
push
pushf
ja
mov
int
outsl
sbb
adc
pop
movsl
stc
sahf
inc
test
aaa
in
out
xor
xchg
pop
mov
jl
dec
pusha
lret
push
lods
ja
xchg
jb
inc
xor
sbb
cmp
lea
or
ljmp
add
test
mov
push
imul
sub
push
test
or
pushf
mov
cmc
shll
icebp
jne
lret
xchg
pop
data16
mov
sahf
mov
dec
push
stos
mov
addr16
inc
sbb
stc
stos
subl
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
mov
jae
adc
xchg
push
adc
cmp
mov
add
movsl
notb
mov
inc
outsb
mov
jae
pop
dec
inc
aad
or
sbb
test
sbb
push
and
cmp
pop
sbb
ja
xchg
sub
pop
add
int
lock
lahf
add
out
xchg
mov
aam
test
jl
dec
sbb
cmp
in
add
pop
jno
mov
aas
xor
jmp
jp
hlt
cmp
rclb
pop
jo
mov
mov
mov
jmp
icebp
and
or
nop
add
inc
adc
mov
jp
ret
pop
sbb
int3
cmp
jno
jne
push
sti
scas
mov
pop
xchg
or
iret
pop
ja
mov
push
stc
lock
mov
nop
shlb
movsb
popl
add
test
imul
add
fs
mov
aaa
pop
scas
sub
cmp
stos
test
rcl
and
out
inc
jno
in
mov
je
jbe
sub
fnsave
or
js
movsb
fstl
scas
cmc
lcall
dec
shlb
sbb
inc
int
fs
inc
scas
sub
stc
and
test
inc
ret
decb
mov
adc
dec
sub
hlt
xchg
xchg
dec
outsb
jecxz
dec
arpl
imul
enter
mov
adcb
insl
int
imull
subl
arpl
cmp
add
cltd
outsb
outsb
sbb
mov
mov
xchg
inc
cli
sbb
jnp
jo
in
pop
mov
icebp
jo
pop
pop
outsb
pop
cmpsl
adc
sub
cmpsb
and
ficoms
or
add
push
outsb
popf
gs
int
stc
cs
xor
sbb
push
jbe
jo
pop
stos
push
inc
push
dec
nop
addr16
lods
sti
arpl
sub
and
rclb
jbe
icebp
outsl
add
jnp
mov
or
dec
cmp
or
sbb
push
jg
scas
dec
loopne
ljmp
or
push
lahf
ret
mov
sbb
push
jnp
xor
push
mov
sub
mov
out
cmp
les
pop
cmpsl
loopne
stos
rorl
pop
xor
fdivrs
xor
iret
lods
mov
sbb
or
jno
loop
xor
aad
lcall
push
pop
stos
pop
notl
sahf
incl
xor
mov
dec
push
in
sti
es
pusha
fdivrl
cs
and
jo
mov
loop
stos
test
rorl
shlb
mov
dec
lods
lea
insl
and
nop
mov
cmpsb
and
arpl
sbb
test
xor
xor
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
insb
push
ljmp
iret
seto
push
and
pop
inc
fidivrs
call
js
int
jno
ds
cmp
mov
mov
sub
mov
inc
scas
jno
test
outsl
stos
fwait
arpl
outsl
mov
mov
or
mov
call
mov
into
and
mov
imul
leave
dec
mov
decl
orb
mov
xor
cmc
test
mov
mov
xchg
adc
jp
out
test
inc
hlt
mov
shrl
loop
and
mov
dec
xor
je
fcom
into
push
mov
sub
in
cmc
fildl
cltd
mov
lock
test
mov
push
push
pop
mov
and
and
cltd
xchg
push
pop
jae
mov
popf
xchg
aam
ret
jmp
pop
jo
pop
ret
jno
into
jecxz
movsl
jo
mov
addps
pop
sub
add
pop
sbb
cmpsb
insl
dec
imul
jb
xchg
lret
pop
add
ja
mov
lock
insb
in
push
into
mov
add
sbb
inc
add
mov
add
sbb
fwait
ja
xorb
mov
cwtl
jb
repnz
pop
mov
push
lods
or
cmp
aaa
adc
outsb
or
mul
sarb
jmp
mov
loope
imul
push
mov
adc
cmpsl
pop
dec
es
dec
jp
test
pushf
das
in
dec
lcall
push
daa
inc
ficoml
jmp
pop
push
flds
ja
ss
in
sbb
xchg
in
push
pop
inc
lcall
cmp
add
roll
imul
sub
dec
push
sahf
add
js
pop
xor
or
ret
cmp
pop
nop
mov
lcall
mov
lcall
or
scas
mov
sbb
int3
or
gs
rorb
pop
jbe
in
xchg
push
aam
adc
add
fisubs
std
out
xor
rcll
test
xchg
dec
jg
orl
out
xor
dec
or
mov
mov
xchg
flds
jo
es
mov
xor
js
imul
popf
stc
inc
push
cltd
adc
mov
shr
cmp
gs
fwait
xchg
dec
aas
leave
int3
ficoms
sub
test
pop
sbb
jecxz
mov
shll
int3
push
mov
addr16
mov
cmpsl
sahf
add
jno
adc
xchg
imul
sbb
addl
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
insl
fmul
lods
repz
or
cmp
in
and
dec
mov
fs
ja
xor
lods
and
cli
cli
test
xor
pop
cld
das
fstl
fyl2xp1
fmuls
mov
imul
js
aad
sub
or
cmpl
data16
mov
out
push
xor
rcll
pop
mov
repnz
adc
mov
or
data16
rorb
push
cmp
idivb
add
aaa
lret
in
pop
adc
add
sub
sbb
jl
sub
fldl
int
jns
lret
dec
ret
or
adc
in
sarb
dec
mov
add
inc
pusha
aaa
inc
lds
jae
imul
jbe
jo
sub
add
ret
sahf
or
fdivrs
scas
stc
mov
mov
hlt
leave
inc
add
jg
pop
pop
sub
lahf
or
dec
mov
jmp
insb
rorb
movsb
mov
dec
jecxz
pop
and
shlb
mov
insl
jne
xor
addb
mov
jnp
mov
mov
outsl
rol
push
nop
test
add
sbb
xor
xlat
pop
outsb
push
vpaddd
rcll
dec
dec
jb
jge
iret
xchg
gs
mov
inc
aad
xor
cld
lahf
repz
dec
jmp
inc
in
push
xor
lods
cmp
icebp
sbb
lret
push
mov
lods
xchg
jns
loopne
hlt
fldl
pop
sub
sti
lds
outsb
icebp
lret
es
idivw
stos
adc
xlat
add
xchg
lods
push
loope
pop
pop
pop
jp
jnp
push
out
rclb
xchg
sub
and
loop
adc
in
loopne
sbb
push
add
sahf
jns
and
mov
push
repz
mov
stos
repz
inc
shl
xor
cmpsb
pop
loopne
icebp
jno
jns
ljmp
inc
rcr
movsb
std
mov
std
test
ds
xlat
mov
add
mov
adc
xchg
orb
mov
adc
out
xor
cltd
fists
or
jo
push
pop
pop
xor
ror
scas
cld
jl
jb
dec
xchg
pushf
mov
xorb
cld
jl
pop
mov
mov
add
jne
loopne
lock
imul
mov
mov
sub
cmc
repnz
pop
xor
insb
xor
mov
mov
ds
in
sarb
xlat
movsl
or
loope
js
cmp
lret
lea
jmp
or
pop
pushf
scas
or
jnp
lret
cmp
int
xchg
lea
fidivs
mov
sarb
mov
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
sbb
pop
mov
inc
xor
mov
ret
mov
jge
addr16
jno
out
sbb
mov
mov
aas
sub
mov
stos
rcr
shlb
cmc
sbb
mov
popa
xchg
inc
push
stos
sbb
imul
xor
pop
push
xchg
sbb
dec
outsl
fwait
jns
lods
aam
adc
roll
xor
arpl
mov
aam
es
fsubrs
push
inc
sub
mov
imul
repnz
sub
jg
loopne
fisttpl
push
pushl
cmc
rolb
pop
cltd
enter
sbb
and
sbb
loope
lahf
and
lea
jl
mov
lea
xor
adc
dec
fnstsw
inc
pop
movsl
cmpsb
scas
pop
cmp
add
pop
hlt
mov
sbb
bound
jge
push
mov
sbb
std
out
out
faddl
into
mov
sbb
lods
mov
pop
subb
insl
mov
sub
das
pop
aam
xor
push
mov
pop
aaa
dec
push
rorl
inc
setnp
stos
adc
fildl
mov
jbe
add
mov
enter
mov
adc
lret
mov
jo
xchg
push
adc
cmpsb
push
fwait
mov
and
rcrl
divb
adcb
pushf
enter
das
scas
inc
push
add
cld
add
sarl
cli
mov
aas
dec
or
orb
inc
arpl
lds
jae
cmc
loop
aam
imul
rol
cmpsl
adc
dec
mov
incb
jge
out
lock
sbb
insl
shll
call
xchg
pop
sub
and
cld
sub
iret
jae
jb
cmpsl
scas
enter
in
sarl
imul
inc
icebp
arpl
out
arpl
andl
les
mov
pop
push
xor
jae
mov
jg
jno
repz
mov
aaa
xlat
cmp
rcrb
xor
rcrl
push
sub
cli
je
rcrl
cli
test
cmp
dec
mov
bound
or
or
mov
negb
dec
lea
adc
nop
xor
dec
jbe
cld
adc
and
test
movsb
xor
ror
sub
scas
xchg
push
xor
outsb
jbe
jns
imul
cmpsl
stc
fs
int3
loope
cmp
lahf
stos
popa
add
addb
out
sub
mov
pop
mov
cs
xor
inc
movsb
fisttpll
pop
add
inc
out
daa
mov
or
int
les
int
push
sbbb
adc
sbbl
lods
in
dec
icebp
aas
inc
or
inc
push
cmpsb
adc
loopne
pop
mov
js
mov
adc
add
and
lea
adcb
add
loope
mov
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
cmpsl
add
adc
jp
adc
mov
xchg
mov
enter
xchg
adc
notb
mov
mov
outsl
roll
cmp
or
test
insl
loop
xchg
dec
mov
xor
std
mulb
or
popw
jl
pop
hlt
nop
ret
in
lcall
insl
mov
fsubrl
cmp
xchg
ret
jne
and
mov
arpl
dec
adc
dec
aam
bound
ja
mov
dec
xchg
ficoms
sub
jno
xor
lret
inc
sbb
repnz
imul
andl
inc
insb
xchg
mov
out
arpl
xchg
gs
ljmp
mov
ja
testb
cltd
fldt
movsb
lahf
adc
push
aam
cld
das
dec
outsl
imul
adc
aas
sahf
pop
rorb
dec
sbb
xor
ret
das
mov
je
fwait
ss
cmp
fs
dec
ljmp
imul
je
loope
les
push
jnp
sub
dec
pop
or
and
or
inc
add
push
loope
punpcklwd
int
in
add
mov
popa
rclb
or
and
mov
push
adc
in
cmp
std
ret
sar
jge
inc
out
fsubrl
imul
jb
ret
mov
add
rcrl
rcll
jmp
andl
xchg
sub
and
lods
sbb
bound
andl
pop
ljmp
into
xor
je
popa
jle
pusha
fidivrl
es
xor
cmp
pop
in
in
add
jnp
xchg
call
sbbl
ret
push
cmp
fisttps
iret
dec
mov
out
pusha
ds
cs
fnsave
cmp
les
test
mov
push
pop
jbe
jae
movsb
mov
addl
ss
fcomps
or
xchg
fiadds
sub
xor
xor
and
scas
and
cld
pop
popf
jmp
jge
dec
fistpll
sbb
inc
lods
cmpsb
das
sbb
inc
dec
adc
or
repz
loop
jge
cs
mov
ds
pop
pop
movb
or
jmp
cmp
pop
push
xchg
add
push
test
xchg
mov
cmp
cmp
and
dec
sahf
incb
push
push
movsb
push
mov
lods
mov
hlt
inc
pop
xchg
cmp
loop
sub
add
cmc
cld
cwtl
jb
fs
gs
cmp
mov
jo
push
fs
clc
stc
xchg
mov
mov
iret
jle
sbb
clc
cld
cmc
sbb
fwait
mov
mov
lret
and
sbb
movsl
mov
cmovge
cmpsb
iret
lods
or
enter
movsl
es
es
xchg
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
sub
pop
adc
jp
adc
addb
push
jp
or
push
cmpsb
dec
mov
repnz
ljmp
pop
out
ja
cltd
out
cmpsl
jb
insb
test
bound
cli
aam
xor
fwait
jp
cmp
inc
pop
jg
xor
ds
bound
cmp
mov
jb
repnz
out
test
mov
lret
dec
adc
lahf
sub
adc
mov
cld
cmp
pop
cmp
repnz
js
stos
mov
iret
outsl
pop
push
sub
movsb
mov
inc
test
xchg
out
lret
mov
push
pop
pop
xchg
or
das
sub
or
sti
imul
int3
mov
icebp
fcmovbe
or
xlat
aaa
dec
movsl
sbb
imul
mov
jl
sbb
cmpsl
add
shlb
sub
inc
sbb
push
out
loopne
stc
fistl
jno
jge
jno
in
bound
adc
sarl
xchg
add
in
rcrl
mov
sahf
push
jl
dec
movsl
lock
inc
xchg
jg
jne
adcl
cmp
xor
lahf
mov
and
lock
imul
xor
das
and
pop
mov
push
mov
jb
and
xor
xchg
repz
shll
iret
cmpsl
sbb
dec
pop
test
cmp
adc
pusha
out
cwtl
test
mov
cmp
stos
movsl
test
inc
cltd
jp
cmpsb
add
imul
mov
pop
out
pop
sbbl
mov
orb
cwtl
outsb
add
nop
movsl
and
fidivrl
nop
push
lods
mov
mov
add
cmpsb
cld
sub
cli
adc
shll
stc
pop
popf
in
out
pop
lret
inc
daa
adc
fldenv
cmp
jb
mov
ficompl
sbb
mov
dec
ja
dec
dec
xor
gs
aas
sahf
call
and
dec
cmp
mov
popa
test
xor
sbb
scas
shll
xchg
inc
lds
mov
inc
mov
cmp
mov
push
xchg
adc
mov
push
jne
sub
or
xchg
sub
or
dec
dec
mov
mov
jns
adc
xor
rclb
sahf
mov
inc
bswap
hlt
popa
sbb
sbb
arpl
scas
lock
push
sbb
leave
test
push
xor
mov
mov
addl
push
adc
mov
mov
enter
xor
mov
cli
repz
es
adc
fsubr
stos
mov
mov
push
push
mov
lock
mov
xchg
xor
push
adc
xor
testl
fiadds
inc
pop
push
repz
xchg
mov
icebp
mov
xor
popa
mov
aad
sti
popf
and
mov
popf
sub
cmovge
arpl
pand
popa
test
and
dec
mov
push
aad
push
push
imul
fs
or
xor
mov
and
mov
cmp
iret
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
int3
lods
pop
push
adc
jp
adc
and
mov
ss
xlat
and
pop
xor
jp
push
sbb
int
movl
iret
pop
pop
xor
push
mov
js
mov
inc
xor
mov
mov
fstl
dec
lret
inc
mov
aas
out
lds
mov
lods
ficoms
and
jp
cwtl
pop
leave
or
pop
jecxz
popa
jno
int
decb
mov
adc
xor
sub
in
pop
pop
sar
add
push
mov
loopne
inc
ja
loop
sub
mov
pusha
xor
sbb
jle
sub
insb
push
mov
sub
movsb
out
inc
pop
adc
or
cltd
cld
popf
pushf
fldl
pop
ljmp
int3
loop
lods
cmp
out
cmpsb
out
push
jnp
inc
bound
jecxz
lods
sub
fs
adc
push
jecxz
dec
data16
inc
mov
mov
imul
jg
mov
dec
js
jp
std
push
pop
sbb
inc
mov
pop
cmp
cmpb
cmpl
cmp
or
sbb
mov
jl
popa
gs
sbb
mov
inc
sti
icebp
jae
jne
push
sahf
bound
jne
mov
jl
insb
aaa
pop
jle
addr16
je
lea
mull
popf
and
fadd
or
pop
stos
push
jp
lcall
fiaddl
pusha
pop
fists
xchg
xchg
mov
mov
andl
lods
gs
fwait
mov
sub
xchg
inc
inc
jmp
cltd
pop
jle
test
sahf
mov
test
jae
jb
fcmovne
push
dec
push
lods
repnz
jbe
jnp
mov
xor
mov
jge
add
xor
ret
mov
add
mov
lea
dec
xor
test
daa
rcrl
jecxz
fidivrl
fisubrl
sbb
scas
lcall
addl
pop
xor
lds
sbb
mov
adc
and
and
cld
xchg
icebp
sahf
sub
leave
sbb
lret
push
or
inc
mov
popf
cli
insl
sub
int3
adc
xor
lret
popa
imul
or
pop
je
test
aaa
xchg
xor
pop
jae
je
cmpsl
int
into
dec
jne
popf
jge
daa
insb
sbb
inc
jmp
xchg
out
sub
mov
dec
outsl
push
fstps
add
pushf
ds
push
jg
jle
pop
in
jl
fstpl
sbb
jmp
add
pusha
or
ljmp
or
ret
xor
push
xchg
jae
xchg
adc
outsl
outsb
pop
lret
fcoml
repnz
lock
ljmp
int
es
pop
push
setne
icebp
das
ss
push
push
dec
test
cld
data16
lret
imul
sub
pop
loope
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
out
std
jle
inc
adc
lea
adc
jmp
and
pop
jmp
arpl
or
push
fisubs
mov
ret
sti
cltd
mov
das
mov
adc
pop
add
das
pop
inc
int3
sarb
jns
lret
jb
xor
mov
dec
out
xor
clc
pop
xchg
xor
popf
push
les
out
xchg
inc
jecxz
and
mov
add
push
cli
mov
lahf
lds
cmp
push
cmc
cli
pop
xchg
inc
sbb
cmp
fsubl
push
lods
xchg
jne
cmp
test
cmp
sub
xor
jl
inc
inc
pop
or
pop
push
inc
insb
add
scas
sbb
adc
ja
inc
iret
es
xchg
lret
push
nop
mov
push
imul
add
shlb
dec
dec
lods
imul
pusha
fmull
roll
fmull
and
or
pop
cmp
movsl
fstpl
jo
inc
cwtl
fsts
mov
cmp
fidivrs
sbb
cmp
xchg
inc
addr16
add
mov
rol
sub
mov
mov
stos
inc
loop
ficoms
inc
inc
movsl
and
cmp
cmpsb
pop
out
sbb
stc
out
mov
jne
mov
mov
pop
repz
cmpsb
adc
les
mov
outsb
outsb
outsb
and
inc
dec
xchg
dec
insl
dec
leave
xrelease
loope
pop
dec
enter
test
pop
mov
pop
test
lea
aas
push
test
ret
lahf
xorl
gs
pop
mull
and
xor
lret
lock
ljmp
sub
outsb
dec
mov
jbe
add
xor
add
stos
inc
sbb
mov
mov
cmp
push
xchg
or
sbb
fmull
jecxz
adc
mov
sbb
inc
push
ljmp
mov
pop
add
iret
push
data16
imul
and
mov
jle
push
jmp
fcomps
sbb
sbb
mov
ja
pop
dec
scas
ja
adc
or
or
leave
lahf
dec
xor
xchg
addb
adc
push
fdivp
jecxz
cltd
imul
push
xlat
cltd
aaa
ljmp
rol
loope
pop
mov
dec
push
push
data16
inc
add
lcall
dec
bound
and
clc
pop
mov
imul
fsubl
lods
dec
lahf
xor
ret
sbb
dec
xchg
and
cld
sbb
test
push
call
pop
mov
jp
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
xor
sbb
into
push
cmpb
add
lock
insb
mov
sub
out
leave
inc
xchg
dec
xor
push
out
outsl
loope
add
add
in
mov
xor
outsb
aam
mov
test
cld
test
xchg
jbe
mov
mov
inc
jp
sub
aam
seta
outsl
cmp
or
add
ret
mov
or
cld
or
in
sub
enter
std
sbb
repz
jmp
cwtl
scas
jno
xlat
rcr
jno
jg
or
mov
and
pop
lret
pop
fisubrs
test
test
pop
push
xchg
jge
push
pop
lea
call
fsubrl
lret
leave
mov
iret
mov
rolb
xchg
mov
leave
shrl
and
imul
cmp
cmpsb
pushf
or
aam
js
jmp
aad
dec
mov
mov
das
mov
aad
stos
lock
ja
mov
jne
jp
mov
xchg
pop
mov
div
push
btr
mov
imul
lods
mov
push
push
imul
ficomps
or
out
loope
pop
push
orb
idivb
xchg
fwait
add
into
icebp
jbe
jge
sub
std
sub
fildl
stos
pop
lds
inc
mov
push
add
jns
xor
dec
jae
shll
mov
xchg
dec
sbb
clc
xor
jnp
push
fisttps
sahf
xchg
cmpsb
mov
fwait
out
push
push
xchg
sbb
out
test
mov
repnz
repz
xor
cli
in
add
inc
rcr
cmp
add
pop
xchg
lods
imul
jo
push
mov
dec
mov
mov
inc
push
sbb
nop
mov
mov
add
push
adc
push
fcmovne
loopne
push
inc
movsl
dec
outsl
jl
dec
into
in
push
movsl
jne
out
repz
aad
sbb
mov
xor
pop
js
sub
out
fdivrs
jecxz
fcompl
clc
push
shrb
clc
mov
ljmp
int
mov
fidivrs
or
orb
jle
out
sbbl
and
fwait
and
test
sub
loopne
mov
test
add
jnp
hlt
mov
add
mov
jbe
and
arpl
sbb
jl
sbb
ja
mov
shl
clc
sbb
pop
repnz
data16
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
shrl
call
dec
dec
or
jg
lds
xlat
insb
stc
add
pop
push
out
xchg
shl
in
or
pop
jno
pop
nop
repnz
lea
mov
mov
mov
mov
or
pop
jnp
iret
inc
mov
adc
ljmp
mov
in
and
cmpsl
inc
shll
sarl
cmp
sbb
cmp
iret
pop
xchg
ss
mov
adc
aaa
jle
sbb
insb
inc
fnstsw
stc
jb
pop
sub
and
mov
or
loope
jle
hlt
xchg
ljmp
mov
orb
xor
out
mov
ficoms
rep
rcl
insl
mov
sbb
scas
dec
add
inc
and
or
loopne
jmp
pop
iret
les
xor
mov
pop
ja
arpl
inc
cwtl
dec
adc
jns
pushf
mov
sbb
and
lock
loopne
xlat
ljmp
xchg
scas
inc
adc
cmpsl
lret
cmpsb
xchg
fsubs
pop
xor
outsl
out
mov
pop
mov
scas
fistpll
jg
jg
cmpsl
dec
pop
cwtl
ja
xchg
or
push
rolb
jp
std
popf
into
mov
fucomip
sarl
sbb
xchg
lcall
jge
mov
pop
mov
les
mov
or
xchg
cmp
int
xchg
add
gs
dec
ljmp
push
add
imul
je
mov
jno
out
jae
in
add
sub
adc
lret
cmp
roll
jno
test
pop
mov
jmp
test
subl
hlt
lea
inc
jecxz
andb
pop
adc
cmpsb
mov
sbb
scas
das
rorl
cmp
andb
or
dec
mov
jns
in
arpl
mov
inc
push
loop
gs
jge
sar
inc
and
sub
adc
loopne
inc
xor
mov
xchg
pop
shll
inc
nop
insb
mov
sbb
add
adc
pop
mov
ja
nop
mov
push
gs
jns
push
pop
mov
pop
xor
push
fnstenv
repnz
pop
dec
sbb
icebp
xorl
lahf
arpl
aad
dec
scas
dec
test
roll
mov
clc
je
push
repz
mov
loope
pop
in
cmp
loop
roll
add
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
jb
and
aaa
adc
lea
adc
jno
out
sub
xchg
jg
imul
sbb
lea
sub
inc
push
test
test
jmp
gs
push
mov
adc
sbb
adc
imul
cmc
imul
in
movsl
mov
sti
mov
xchg
cs
add
jbe
dec
or
and
test
imul
maskmovq
idivl
lock
jnp
jbe
sub
in
cmpsl
leave
je
push
iret
sahf
jp
or
push
sahf
inc
movsb
jp
jo
std
dec
jb
mov
lcall
insb
dec
popf
ss
mov
test
jno
or
pop
xor
mov
pop
stos
or
cmp
sbb
cmpsb
mov
je
sub
inc
cld
cmpsl
jne
fnstcw
repnz
ret
mov
xor
jne
push
xchg
sahf
jecxz
jecxz
ds
xchg
cwtl
fs
add
ljmp
and
arpl
dec
add
push
shll
int3
scas
push
cmp
test
rcrb
incb
jmp
mov
push
js
adc
lcall
mov
mull
or
jnp
out
pop
mov
fisubl
mov
sub
and
js
fcmovnb
movsl
cwtl
xchg
outsl
dec
inc
jae
jl
xchg
pushf
lods
push
mul
push
mov
in
outsb
out
jmp
cli
nop
mov
mov
xchg
xchg
mov
lods
cmp
sub
sbb
sbb
and
addl
ret
add
xchg
xchg
loopne
xor
jb
bound
mov
inc
loope
popf
xchg
push
flds
nop
cmp
das
xor
sbb
imul
jp
dec
mov
icebp
pop
sbb
outsl
cltd
out
cmpb
icebp
or
add
or
add
push
mov
loop
push
jmp
sub
inc
xchg
mov
in
inc
mov
scas
out
ret
mov
repnz
sahf
fdivrp
adc
scas
lock
lods
shl
mov
mov
mov
mov
push
sbb
adc
mov
sbb
sbb
lods
dec
leave
add
jo
cmp
pop
cmpsb
cmp
imul
mov
shl
cmp
out
or
clc
aaa
inc
cwtl
aaa
mov
lahf
inc
popf
lods
add
inc
sbb
adc
mul
imul
sti
sbb
xchg
daa
xchg
pop
xor
cmp
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
aam
jle
xor
adc
jp
mov
push
fwait
push
cmp
popf
les
push
add
mov
cld
ss
dec
inc
pushf
cmc
ja
pop
push
test
cmc
jbe
cmp
cmp
and
loope
jge
pop
jno
ret
lret
mov
xor
cmp
notl
insl
xor
mov
inc
push
mov
imul
or
inc
rorl
sub
ret
insb
cmpsb
and
add
mov
aaa
int3
bnd
ds
adc
add
jae
loop
or
add
aaa
push
inc
push
inc
pop
mov
and
xchg
lods
shll
insb
addr16
push
lret
cli
cmp
sbb
lock
sbb
jl
inc
cli
inc
aaa
into
jns
das
outsb
pop
ss
sub
xchg
jo
test
jne
jecxz
std
adc
call
jle
ror
push
pop
inc
pop
fmul
out
dec
shr
pop
outsl
mov
dec
sahf
cmp
cs
cmp
xchg
imul
aas
fwait
loopne
pushl
in
cmp
test
imul
bound
jge
fsubs
adc
xchg
scas
adc
fbstp
mov
push
push
sti
je
jecxz
stos
and
mov
add
mov
mov
mov
push
ret
pop
int3
cltd
popa
push
xchg
cld
cmp
xchg
das
adcl
and
ss
out
std
adc
jo
dec
aaa
xrelease
xchg
cmp
fists
adcl
dec
scas
mov
xchg
xchg
push
pushf
daa
sbb
push
pop
mov
icebp
push
cmpsl
and
xchg
pop
imul
add
es
add
sbb
inc
cmpsb
fidivl
jae
xchg
faddl
jge,pt
adc
mov
insb
jecxz
je
cmpsl
xchg
push
adc
lods
js
shrb
insb
mov
fdivs
push
or
aaa
aas
icebp
daa
xor
xor
xor
iret
sbb
sbb
subb
dec
xchg
movsb
loopne
xchg
lret
or
test
and
in
and
jge
cs
xchg
insb
xor
inc
arpl
cmpsl
lock
cltd
and
fistps
or
mov
dec
stos
mov
sbb
cmp
xor
jns
insb
push
xchg
sarb
xor
shrb
gs
jne
push
iret
fwait
sbb
nop
xor
jp
in
pop
mov
xchg
mov
fistpll
test
loope
movsb
in
inc
fistpll
rcll
ficoms
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
sbb
jle
sub
adc
cmp
out
pushf
out
sub
jge
mov
std
daa
pusha
xchg
mov
nop
aad
add
fiadds
addr16
jle
cld
ljmp
jecxz
fdivrs
insb
push
add
adc
push
dec
sahf
loop
arpl
js
cmp
andb
ja
sarb
xchg
cmp
mov
insb
push
jb
sahf
shrb
repz
mov
adc
jge
ficomps
inc
add
push
pop
cmp
pop
scas
mov
mov
xchg
lods
addr16
jmp
pop
in
jo
dec
std
pop
mov
lods
mov
sub
xchg
cld
inc
fdiv
mov
sbb
add
stos
enter
cmpb
xchg
jmp
xchg
movsl
lret
mov
mov
lcall
ds
loopne
stc
push
cs
imull
add
push
jae
mov
push
push
cmpsb
fstl
mov
inc
into
dec
adc
lcall
mov
dec
pusha
jmp
sti
jnp
dec
out
mov
jl
rolb
mov
scas
jge
mov
insl
xor
lock
sbbb
mov
dec
mov
inc
cmpsb
jp
push
sub
mov
jbe
lret
dec
mov
je
or
dec
add
jp
testl
pop
mov
and
sub
mov
sbb
scas
sub
xor
and
push
stc
ja
xchg
sbb
push
subl
cld
push
lods
and
jg
pop
insl
les
outsb
gs
or
or
test
gs
add
sahf
jne
cmpsb
mov
push
jae
scas
xchg
and
mov
fdivrp
pop
mov
mov
adc
pop
push
or
dec
aad
test
mov
lea
xchg
data16
ror
pop
fistpl
in
ds
hlt
cmpsl
dec
stc
sbb
repz
adc
fcompl
sub
sub
fmull
add
popa
jge
scas
lret
ja
mov
jmp
cmp
shrl
jo
pop
insb
sub
jb
add
pop
shlb
sti
sbb
pushf
and
pushf
imul
fnsave
hlt
mov
pop
pop
loop
and
mov
fisubrs
cmp
inc
es
mov
push
mov
dec
adc
lea
cld
mov
pop
adc
or
js
lahf
xchg
or
dec
or
xor
or
push
add
jmp
and
lods
and
js
insl
les
lea
adc
out
subl
arpl
int
and
cld
dec
mov
daa
lret
les
filds
pop
mov
dec
das
jmp
loop
adc
out
mov
subb
pop
lods
inc
dec
movsl
in
fcoml
subb
cs
mov
sbb
and
cwtl
test
inc
sub
mov
in
jnp
cmpb
loopne
or
mov
pop
pop
xor
or
push
xchg
xchg
lret
lret
cmovs
or
pusha
rol
movsb
or
or
add
add
mov
and
sahf
jge
xchg
sbb
mov
sahf
les
fisttpll
adc
push
popf
dec
fmuls
dec
aas
in
push
out
jl
jl
inc
scas
push
cltd
nopl
cmp
xchg
movsl
mov
pop
push
rol
jp
or
mov
xchg
xor
pop
loop
mov
gs
cmpsl
add
add
sti
subb
repz
shlb
or
jnp
sub
loope
inc
pop
ficompl
mov
xlat
lret
push
icebp
clc
test
mov
and
nop
pop
sbb
pop
je
data16
sub
cli
dec
scas
xorl
sbb
mov
add
jae
jge
in
push
and
cltd
push
sub
sahf
xchg
cwtl
out
ror
xor
into
lods
sub
out
ljmp
dec
ljmp
cmpsl
rorb
fimull
cmp
cli
stc
cmp
push
lods
shlb
inc
pop
jb
mov
insb
push
scas
cmp
push
cmp
movsl
xchg
fs
mov
repz
test
leave
inc
cwtl
push
in
bound
mov
cs
lea
negb
dec
mov
shll
enter
push
mov
imul
mov
out
inc
mov
daa
pop
jle
dec
cmpsb
inc
sti
jecxz
addr16
jp
fists
push
pop
sub
inc
dec
in
adc
pop
mov
sub
add
cmp
cld
lods
sbb
cmp
or
xrelease
popa
xor
test
xchg
xchg
adc
shrl
sbb
pslld
rcr
lods
pop
jp
out
enter
rorb
rcr
jne
mov
jg
mull
loopne
inc
es
or
push
add
fs
and
pop
pop
stc
ret
xor
cmp
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
xchg
push
sbb
jnp
lock
hlt
add
lods
lds
xor
mov
sub
fsubr
pop
fsubrl
out
mov
adc
pop
inc
jne
sub
mov
in
mov
mov
std
nop
in
sbbl
sub
stos
mov
push
jecxz
popa
xor
mov
pop
lret
lahf
fisubrs
rcrb
adc
int3
dec
pop
scas
in
sub
cmpsl
lds
imul
jg
adc
xor
dec
mov
mov
call
dec
int3
pop
fisttps
pusha
cmp
movhps
jg
jne
add
mov
jp
adcl
add
int
cmpsb
aad
jp
jno
andl
fsts
and
lahf
mov
shlb
dec
icebp
jnp
adc
pop
sub
mov
adc
mov
xor
cwtl
jae
insl
call
sub
ret
rorl
repz
push
jecxz
popa
int3
scas
inc
mov
lods
mov
inc
jae
sbb
add
cmp
and
mov
outsb
cmpsb
xchg
xchg
clc
sub
add
mov
and
aad
fimuls
mov
xchg
out
pop
adc
or
mov
dec
lea
rcrl
and
aam
into
aam
outsl
pop
cmp
test
mov
js
and
lock
xchg
mov
sbb
mov
jo
sub
addr16
dec
add
ds
shrb
pop
in
dec
jno
insb
stos
popf
xchg
imul
call
addl
xlat
xor
sub
aad
cmp
mov
jecxz
push
movsb
push
inc
mov
test
pop
lret
repnz
scas
adc
fs
sti
mov
push
inc
pop
cmpl
sub
or
rcr
fistpl
repz
ds
sbb
mov
sub
daa
push
pop
push
repnz
mov
push
dec
jns
fcomps
xor
sarl
into
xor
icebp
pop
add
pop
test
jg
pushf
movsl
aaa
push
jg
xor
sub
arpl
ret
shrb
xchg
cltd
xchg
loop
icebp
jg
xor
sti
cmp
pop
xchg
push
xor
int
sbb
pushf
mov
cltd
daa
data16
movsl
xchg
ja
fidivrs
and
or
leave
dec
and
xchg
test
mov
popf
cmpsb
push
mov
jl
mov
and
pop
sahf
in
sbb
sub
sti
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
inc
stos
push
sbb
adc
add
scas
jne
test
in
fistpll
shl
fstps
mov
push
lahf
cld
loopne
adc
sbb
and
inc
push
neg
xchg
shlb
pop
ret
cli
pop
mov
out
jg
shll
push
adc
lds
sub
mov
mov
loop
xlat
pop
or
push
pop
xor
jecxz
pop
xchg
push
dec
int
pop
xchg
mov
daa
mov
adc
pop
fbld
or
mov
and
les
dec
cli
mov
les
es
pop
add
repnz
jo
or
or
add
leave
push
aam
in
fisubs
sbb
xor
push
repnz
and
repz
daa
cld
lock
jne
sub
xor
lock
pusha
incb
add
out
pop
pop
jno
sahf
js
and
nop
fcomps
pop
filds
iret
outsl
cmpsb
dec
scas
or
pop
mov
aas
aad
pop
push
int3
or
mov
cli
pop
movsl
lahf
iret
lds
cmp
mov
pop
loop
aad
aas
outsb
push
out
mov
movsl
mov
pop
iret
js
pop
cmpsl
pop
aas
div
adc
xchg
test
lock
add
test
push
sub
pop
hlt
in
sbb
dec
push
addr16
and
mov
mov
cli
pop
cmp
mov
lret
jnp
mov
push
into
dec
out
xor
ficoml
loopne
popf
mov
ja
out
int
addr16
notb
mov
xor
and
sub
mov
add
mov
xor
adc
or
loopne
mov
push
call
das
aam
push
sti
outsl
xor
decl
dec
rclb
rcr
mov
js
cmp
test
je
clc
shlb
xchg
aas
pop
push
mov
cld
lahf
fistps
fisubs
movsb
es
push
or
insl
lds
pop
fistl
add
dec
sbb
mov
adc
jle
sbb
xor
push
cwtl
add
push
out
call
repnz
sbb
fstl
out
jae
ret
or
dec
mov
adc
and
inc
mov
rcrb
push
popf
push
js
imulb
lods
or
sbb
outsl
fildll
push
sbb
pop
and
mov
or
fstpt
cmp
xchg
push
mov
adc
push
ret
push
insb
xorb
xor
inc
jle
dec
cmp
js
sahf
adc
daa
cmp
add
dec
add
cmp
pop
xchg
pop
xadd
xchg
sub
jae
cwtl
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
jb
dec
mov
mov
fidivrl
call
les
imul
das
jmp
pop
lret
sbb
mov
cs
jl
pop
das
mov
arpl
addr16
fcmovnb
insb
inc
pop
cltd
lods
mov
mov
or
push
sbb
and
pop
pop
repz
cmp
dec
lret
mov
test
push
and
sbb
in
cld
jg
mov
cli
fisubrs
push
and
dec
out
jbe
dec
inc
or
cmc
push
jbe
fldl
aad
je
out
push
icebp
mov
inc
enter
inc
clc
sbb
lock
nop
aaa
inc
xlat
popf
inc
mov
adc
nop
add
jo
movsb
es
sub
xchg
stc
mov
and
inc
xchg
xchg
or
lock
jle
xchg
daa
xchg
test
aam
mov
jns
lea
aaa
xchg
aam
bound
pop
mov
lea
xchg
xchg
pop
jecxz
push
adc
je
outsl
jge
mov
insb
add
xchg
pop
and
repz
mov
out
xchg
faddp
xor
adc
xor
addr16
mov
cmpsl
fisttpll
mov
test
insl
add
inc
imul
in
sub
imul
pop
cwtl
inc
jmp
test
jne
sbb
dec
dec
fmull
dec
xor
stos
sbb
xor
mov
sbb
mov
es
addr16
clc
add
loopne
adc
in
xor
mov
stc
sub
sbb
and
fdivl
mov
aas
mov
adc
xchg
mov
jmp
jge
dec
mov
pop
fisubrs
sbb
mov
add
divl
mov
repz
sbb
pusha
sbb
int
inc
lahf
lods
bound
xchg
mov
scas
mov
ret
xchg
sub
addl
sahf
in
filds
dec
data16
jl
xchg
or
sbb
jo
aaa
adcb
add
mov
or
outsl
sbb
lcall
scas
xor
inc
out
pop
sbb
addr16
repnz
and
lods
mov
loopne
lds
sub
into
cs
subl
push
mov
test
adc
cmp
mov
popf
idiv
cltd
lret
nop
aas
fwait
push
jl
add
out
incl
dec
jmp
mov
lock
fscale
sub
mov
pop
pushf
mov
in
insl
setae
loopne
mov
sub
dec
ret
in
push
in
popw
inc
in
repz
mov
lret
movsl
addl
mov
and
pop
pusha
sti
xor
add
in
paddb
mov
flds
mov
pop
add
loope
and
test
mov
push
or
loope
adc
pop
fimull
mov
cwtl
adc
jecxz
in
sbb
adc
lea
inc
xchg
ss
lcall
or
xor
andb
adc
add
enter
jne
mov
dec
int3
insb
sbb
xchg
lock
mov
frstor
pop
loopne
jmp
shlb
jle
mov
jp
rcrb
popf
jb
pop
ja
repz
push
leave
sub
shl
jno,pn
aad
or
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
out
out
aaa
unpckhps
mov
xor
or
sub
shll
sub
js
mov
repnz
clc
jecxz,pt
arpl
mov
scas
stos
outsl
pop
out
in
sbb
pop
aas
stos
cmc
pop
mov
xchg
or
xchg
mov
cld
lods
imul
lret
xchg
lods
adc
popa
or
mov
adc
or
dec
pusha
xchg
pop
add
cmp
sub
pop
lret
subb
test
repz
cwtl
fldenv
sahf
notb
lea
pop
stc
je
cmp
sarb
das
jnp
loop
xor
ret
ja
insl
add
outsl
fidivrl
incl
dec
repz
xchg
je
sub
dec
shrb
and
cmpsl
inc
xchg
cmp
bound
scas
in
imul
inc
dec
mov
or
arpl
jl
popa
mov
jb
jl
jp
in
push
mov
pop
enter
imul
sub
sti
test
outsb
cs
out
fcmovnbe
pop
push
sub
lods
out
mov
fisttpl
ret
push
and
sub
mov
jno
fldcw
mov
mov
fmull
in
push
pop
dec
lods
jg
cmp
jne
xor
xor
int3
movb
xor
jno
fisubrl
mov
out
mov
jg
adc
push
daa
jbe
push
in
add
bound
int
jge
inc
nop
mov
pop
stc
mov
call
cli
cmpsb
xlat
mov
xchg
leave
stos
jg
jb
fldenv
push
lret
xchg
subl
dec
jg
adc
cmpsl
sbb
xor
pop
xchg
fistpll
das
add
jne
xchg
xor
hlt
cmp
push
cmp
shll
fdivrs
or
mov
cmp
jp
daa
adc
lahf
jbe
in
aas
mov
xchg
dec
mov
pushf
cld
mov
mov
mov
mov
popf
cmpsl
call
aaa
ljmp
sbb
adc
loopne
lock
bound
dec
cmp
ficomps
sbb
dec
add
add
cmp
push
mov
call
pop
incl
ja
sbb
jle
movsb
xchg
add
test
adc
aad
xor
push
movsb
mov
stos
jae
push
mov
jns
in
ja
jp
test
jns
ss
jns
in
pop
sbb
sbb
sub
lahf
scas
cmp
mov
mov
xchg
scas
popf
xchg
mov
outsb
mov
dec
and
lods
xchg
sbb
aaa
cmp
cld
mov
fnsave
arpl
lret
xchg
fnstsw
clc
jp
lock
push
dec
sbb
adc
aas
or
mov
loop
xlat
scas
push
adc
push
jb
or
aad
add
or
sub
cli
push
cmp
xor
clc
jp
in
ret
stos
jecxz
mov
xor
data16
jne
rorl
mov
mov
call
jle
ja
into
lods
icebp
jg
test
sahf
push
aad
xchg
sbb
shl
sbb
cs
mov
mov
mov
add
or
and
data16
jo
push
imul
imulb
add
fisttpl
fsubrl
addl
mov
cwtl
jmp
loope
decb
test
lcall
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
lods
filds
adc
adc
fisttpll
xor
mov
ret
dec
cltd
xlat
jae
push
por
aad
jle
dec
andb
jg
sahf
subb
mov
mov
jl
in
cmpb
aas
or
mov
dec
in
data16
or
or
stos
adc
out
orb
por
sbb
sbb
xchg
mov
sarb
roll
mov
aam
sti
adc
cmc
push
iret
cs
inc
lods
aas
fstps
jns
push
or
arpl
outsl
andl
inc
xlat
mov
mov
dec
xchg
and
cmp
cmp
pusha
mov
push
mov
shrd
repnz
or
dec
sahf
mov
divb
cli
cmp
sbb
add
rolb
mov
xlat
mull
or
mov
sahf
add
aas
lret
xchg
push
movsl
push
jge
pop
hlt
pop
aad
out
and
sub
or
aad
scas
mov
scas
shrl
mov
cmp
repnz
xchg
xor
mov
mov
add
popf
loope
shlb
insb
mov
dec
lods
push
dec
sbb
or
ds
mov
push
mov
sbb
push
sub
mov
or
insb
loopne
sbb
mov
xor
xor
lahf
jge
push
and
movsb
aad
jmp
sub
pop
xlat
mov
push
push
bound
lods
idivb
arpl
mov
sub
pushf
sbb
arpl
sti
rorl
or
shrl
mov
aas
clc
movsl
or
mov
adc
pop
and
iret
lret
jp
mov
and
cmp
inc
mov
sub
sar
or
leave
jb
dec
dec
jge
jne
push
out
xchg
jecxz
lds
mov
cmp
fs
jae
pop
mov
mov
jae
mov
inc
lret
inc
add
inc
push
push
mov
xchg
or
pop
mov
loope
pop
mov
mov
pop
jg
adc
push
ljmp
movb
push
inc
mov
add
popa
add
int3
dec
insl
jp
stc
in
insl
addr16
andb
sub
and
aam
push
cmp
pop
popa
push
iret
in
xchg
cli
sbb
push
xor
pop
imul
lods
popf
dec
mov
push
pushf
mov
mov
ss
push
insb
pop
stos
xchg
fwait
daa
mov
xor
mov
xchg
push
cli
xchg
movsb
js
adcb
xchg
faddp
push
divb
loop
and
out
lcall
xlat
push
pop
cmp
xlat
stos
mov
push
and
or
orl
adc
jae
fldcw
movsb
lods
jge
push
into
test
or
mov
pop
inc
into
mov
sahf
hlt
or
fstl
mov
in
or
pop
jne
je
xchg
mov
lock
test
cli
push
out
push
or
lds
inc
mov
jae
cli
es
stc
xchg
out
add
repnz
or
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
add
dec
mov
xchg
movlps
xchg
fstpt
and
outsb
outsl
lds
scas
int3
pop
scas
and
push
mov
push
icebp
iret
cli
pop
adc
and
sub
loope
bound
pop
jns
loopne
in
xor
inc
out
imul
pop
mov
mov
pusha
fsub
inc
lods
mov
push
sbb
sbb
aas
call
mov
test
xor
push
pop
mov
mov
imul
sahf
push
negb
sub
sbb
xchg
loope
xor
pushf
jmp
mov
or
and
push
mov
ffree
xchg
pop
xor
andb
sbb
ljmp
xor
mov
fdivrp
rorb
xchg
jl
sbb
add
rcl
and
or
addr16
and
std
std
adc
jbe
and
dec
stos
rcr
and
scas
jb
dec
repnz
cli
mov
int3
int
fsincos
sbb
std
dec
test
add
or
dec
push
mov
repnz
int
sbb
pop
dec
in
mov
out
mov
mov
pushl
xchg
mov
xor
jge
or
das
out
fadds
ret
aaa
jnp
je
lods
pop
lock
cmp
pop
ret
insl
push
out
mov
adc
push
arpl
aad
cli
in
xchg
enter
leave
jo
jle
pop
or
push
das
popaw
inc
pop
cmp
dec
mov
lret
loopne
jnp
mov
mov
addb
jne
fcomps
dec
cmp
jl
aaa
and
pop
daa
loop
roll
in
loope
out
hlt
inc
mov
cmp
push
pop
inc
cmp
arpl
mov
pusha
mov
cmpl
mov
add
push
mov
xlat
mov
mov
cwtl
pop
mov
repnz
mov
xchg
sbb
push
fwait
out
mov
jns
out
mov
hlt
adc
enter
jnp
rcl
dec
orb
enter
stos
popa
lds
push
data16
call
lods
imul
jmp
pop
adcb
dec
fs
xchg
cmp
aam
mov
loop
repnz
mov
lock
mov
xor
or
in
stc
dec
dec
jp
femms
dec
dec
xlat
jecxz
mov
jmp
push
mov
lahf
push
pop
aas
mov
movsl
dec
cltd
jo
ljmp
mov
mov
xchg
jno
in
jg
mov
arpl
into
std
ror
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
sbb
or
adc
adc
push
jb
adc
loopne
out
jl
movb
sbb
xchg
mov
cmp
push
loop
jno
call
xor
xor
pop
out
sub
and
push
ds
mov
inc
inc
enter
jb
ret
out
sbb
sub
aas
pop
xor
lcall
push
push
stos
ss
push
jmp
xchg
popa
imul
jo
xor
xor
pop
cld
inc
cmp
enter
jnp
and
and
xor
fbld
stos
and
xchg
cmpsb
xor
adc
sti
fildl
mov
decl
cmp
xor
pop
xchg
push
inc
je
push
push
dec
stc
icebp
pop
loope
mov
ljmp
lret
repz
hlt
aas
iret
add
stc
or
push
jb
es
imull
inc
pop
and
loope
lcall
pop
jb
les
push
lea
inc
in
je
pop
cmp
push
mov
jl
cmp
push
cmp
jge
int3
lods
adc
add
les
push
dec
fisubs
pop
jp
xor
xor
mov
icebp
and
lods
imulb
mov
insl
mov
mov
sbb
mov
int3
jecxz
lds
pop
add
mov
add
pop
sub
out
cmpsl
pop
ds
mov
mov
sub
add
and
fwait
inc
andl
push
sbb
or
icebp
mov
inc
pop
pop
fmul
cwtl
fucomi
pusha
dec
xor
lods
cli
arpl
ss
inc
sub
inc
xchg
sbb
adc
lret
dec
add
cmpsl
pop
jb
pop
stos
lea
cmp
imul
mov
mov
jne
imul
mov
out
sub
mov
cmp
mov
xor
sbb
mov
mov
cmp
mov
and
notl
adc
int
movsl
aad
stos
or
mov
repnz
pop
lcall
aaa
inc
push
jo
leave
and
enter
nop
jle
mov
mov
xchg
push
pop
fs
pop
mov
bound
jp
pop
in
cmpsb
out
jg
arpl
mov
jg
inc
mov
lods
xlat
inc
lret
xor
push
push
fisttpll
add
stos
addr16
mov
sub
push
lret
dec
cmp
imull
jle
aas
fmuls
mov
pop
arpl
add
rol
jne
inc
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
xchg
sarb
stc
adc
adc
push
loope
lods
mov
lods
jl
add
xchg
daa
sbb
out
cmp
out
repz
pop
push
cmp
aas
xor
cs
pushfw
push
dec
loope
inc
inc
fldenv
adc
mov
push
arpl
cmp
or
fists
and
mov
lret
mov
ret
mov
mov
popa
xor
and
add
test
std
xchg
push
inc
mov
cld
pop
les
and
cmp
rcll
xor
xor
ja
dec
mov
jo
inc
sub
push
sub
add
sbb
add
pusha
fisubs
and
sub
xor
or
or
into
mov
inc
daa
sbb
rclb
mov
fsubrl
mov
xlat
xorb
jle
xor
cmpsl
in
insb
fcoml
dec
sub
pushf
xor
mov
adc
je
sarl
mov
ret
arpl
xchg
sbb
andb
rcr
cltd
ret
pop
stc
pusha
mov
dec
scas
push
and
or
fwait
mov
rorl
mov
mov
lahf
lahf
push
jp
out
add
jp
outsb
add
scas
imul
imul
sbb
pop
cmp
add
sbb
mov
mov
jp
adc
jle
or
frstor
mov
mov
pop
pushf
pop
push
push
lods
mov
cmp
es
jmp
push
sbb
ljmp
cli
cmp
sbb
loopne
dec
jmp
pop
call
or
stos
sti
push
inc
mov
mov
sbb
cs
pop
xchg
jnp
in
dec
rolb
cmp
xor
fsubs
xchg
push
mov
psubq
fwait
stos
jo
inc
dec
fdivr
inc
mov
add
mov
cmp
mov
push
flds
stc
enter
jns
popa
sub
pop
pop
test
inc
shl
outsl
cltd
fdivl
sbb
test
cmp
std
ljmp
flds
es
sub
aam
xchg
jbe
popf
lret
xor
call
adc
mov
imul
pop
dec
stos
dec
mov
and
and
fxch
sub
push
fdivrs
notb
jecxz
mov
lret
cmp
xchg
pop
mov
or
dec
popa
sub
stos
cmp
je
sbb
arpl
test
mov
jge
inc
add
rol
xchg
out
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
add
js
out
adc
adc
fwait
sbb
cmp
and
data16
add
rorb
gs
sub
fucomip
movsb
fucomi
or
mov
adc
stos
jb
dec
cmp
shrb
push
out
gs
mov
les
push
leave
into
leave
fldt
lods
adc
xchg
cltd
inc
aas
or
sbb
mov
push
pop
lret
xor
xchg
inc
into
inc
add
hlt
out
mov
divb
push
xor
mov
negb
scas
inc
xchg
mov
cmp
sbb
add
mov
adc
xor
test
ror
lods
sti
pop
aas
lds
mov
ds
sub
hlt
outsb
pop
cmc
aaa
inc
js
xor
mov
lock
cmpsl
out
push
xchg
mov
ffree
pop
insb
mov
dec
xchg
or
fsubrl
push
or
lock
and
add
ret
xchg
add
push
cmpsb
lcall
push
pusha
adc
pop
jb,pt
cmp
pop
xchg
add
div
inc
mov
in
mov
notl
pop
xlat
or
jnp
sti
or
mov
jp
inc
idiv
or
xchg
test
mov
cwtl
jae
xchg
insl
pop
imul
test
sbb
jp
lret
inc
popf
cwtl
fs
dec
in
and
xlat
mov
les
xchg
int3
mov
stos
push
call
sbb
das
lret
or
pop
cmpsb
push
adc
cmp
das
outsb
mov
sub
mov
cltd
fmuls
fldenv
roll
frstor
int
xchg
dec
xor
push
dec
adc
test
dec
ss
cld
mov
pop
adc
or
sbb
push
cs
mov
shl
out
nop
and
adc
testl
jle
jns
push
cmp
shll
push
pop
leave
ds
daa
ljmp
cs
arpl
lret
fistpll
out
mov
cmpsb
pusha
dec
iret
mov
stos
cmp
add
mov
mov
jne
cmpsl
sbb
lret
sbb
dec
out
mov
or
ret
pop
sbb
dec
cmc
lds
lret
scas
mov
xor
jb
jg
fdivp
jg
test
aas
jns
push
jno
loopne
and
inc
lcall
lret
cmp
loopne
xor
xor
stc
cmp
fwait
xor
push
or
shlb
mov
sti
jns
jl
mov
add
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
sub
adc
sti
cmp
outsb
xchg
lea
aad
mov
xchg
sub
lock
sbb
mov
adc
les
roll
sbb
fsubs
sub
push
shlb
hlt
insb
repz
xor
sti
fstl
xorb
inc
jo
clc
call
push
pop
sbb
addr16
sbb
cs
pop
mov
jbe
stos
pop
popf
sbb
aaa
sti
jns
push
jnp,pt
sbb
mov
sub
cmp
dec
inc
arpl
cmc
xchg
aam
push
sqrtps
dec
rclb
jbe
in
add
mov
mov
push
pop
push
insb
jmp
neg
sbb
aad
dec
adc
arpl
push
add
jbe
and
in
xchg
pop
inc
xchg
cld
or
stos
arpl
xchg
setae
xchg
or
loope
mov
cmp
int
adc
lret
cltd
sbb
cli
add
shrl
int
or
fdivrl
das
cmp
ficoml
cmpsb
mov
inc
sbb
jmp
and
or
mov
popa
clc
mov
stc
xor
jo
ret
mov
pop
jne
push
rcl
filds
xchg
push
aad
mov
iret
pushf
pop
popa
jecxz
iret
test
testb
mov
les
cwtl
cltd
les
stos
push
bsf
mov
dec
adc
mov
movsl
cltd
inc
int
xchg
push
mov
mov
xor
cli
adc
jae
adc
ret
xchg
inc
mov
push
push
and
orl
fisttpll
test
sub
and
out
mov
scas
mov
push
call
roll
or
lcall
or
xchg
frstor
adc
inc
sub
and
add
rcl
adc
or
add
fsubp
lods
sbb
pop
pop
xchg
or
repnz
pop
aas
pop
test
and
addr16
mov
test
bound
pushf
sbb
or
call
nop
or
fiadds
out
push
lock
dec
movl
leave
mov
pop
adc
leave
enter
inc
lret
adc
daa
cmp
iret
adc
int3
es
les
mov
push
repnz
bound
dec
push
les
sbb
inc
pop
push
inc
xor
lods
in
inc
xor
cmp
rclb
mov
pop
xor
outsl
adc
stos
add
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
jp
sti
jle
in
adc
dec
xchg
jno
push
adc
inc
popa
xchg
rorb
xor
add
mov
mov
test
push
out
iret
and
xchg
pop
shrl
xor
mov
into
mov
xorl
jp
es
cmp
mov
mov
dec
push
xor
in
js
imul
pop
lahf
bound
cmc
pop
xorps
rcl
daa
jbe
notb
mov
add
mov
mov
dec
and
dec
test
ret
insl
aaa
inc
outsb
inc
add
jne
rolb
call
sbb
pop
int3
mov
jge
jns
ficompl
pop
into
xlat
push
xor
cmp
and
fmul
xchg
adc
insl
jle
xor
lock
inc
push
popa
xor
sub
stos
mov
addl
mov
mov
out
pop
xchg
nop
xor
sub
aam
push
scas
pop
flds
push
sbb
adc
decb
sub
daa
push
loop
xchg
dec
jg
sbb
xchg
insb
adc
stc
imul
int
xchg
sbb
add
loop
dec
mov
sub
adc
addl
adc
outsb
and
jp
cltd
mov
addr16
fldenv
stos
xchg
ret
scas
shll
stos
mov
jp
enter
clc
jbe
jecxz
jbe
sbb
xchg
lretw
mov
mov
sub
jb
lock
cwtl
cmpsb
rclb
iret
imul
and
mov
add
jmp
mov
inc
or
mov
push
test
lods
or
xor
jnp,pn
xor
or
test
aaa
dec
js
pop
repz
xchg
push
cmp
ret
sbb
insl
cmp
xlat
sub
mov
mov
cmpsl
popa
and
mov
in
sti
pop
add
mov
imul
shrl
rorb
or
push
das
test
fiadds
nop
xchg
dec
frstor
scas
mov
jecxz
cmpsb
dec
jecxz
shll
sahf
shl
push
sahf
mov
pop
bound
xchg
mov
mov
mov
xchg
xchg
call
sbb
inc
lret
sbb
mov
or
jmp
out
or
mov
gs
wbinvd
lahf
adc
aas
sub
add
int3
mov
or
pop
cmp
fs
jg
or
enter
imul
xor
stos
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
sub
jnp
adc
adc
xor
subb
pusha
or
js
out
mov
push
xor
fwait
das
dec
mov
push
mov
testl
xchg
lods
jl
dec
scas
and
xor
je
and
and
mov
in
xor
das
sbb
cs
aas
jge
and
sbb
push
and
lcall
rorl
test
adc
or
lret
jl
jo
cmp
xchg
push
sub
scas
xchg
jae
lcall
loopne
cmp
push
test
adc
push
jmp
loopne
lods
push
adc
sub
inc
xchg
jp
pushf
sbb
pop
lock
gs
or
inc
or
inc
lea
jle
inc
inc
aaa
lret
lock
adc
out
lret
cmp
cmp
inc
gs
sbb
jnp
sbb
pop
mov
mov
mov
push
in
inc
jle
adc
pop
subl
das
dec
dec
in
decl
mov
sahf
loop
and
js
sub
and
scas
dec
jp
sub
cli
sbb
fs
pop
cwtl
ljmp
lcall
add
out
pop
mov
pop
inc
out
jnp
lret
das
or
mov
mov
leave
inc
or
jp
mov
int
stos
cs
or
repnz
int3
add
shrl
mov
call
mov
mov
jle
xchg
pcmpgtw
mov
add
and
adc
mov
lret
rclb
mov
addr16
movsl
adc
insb
sti
imul
push
cmp
add
push
mov
jnp
mov
cwtl
inc
in
cwtl
mov
jne
inc
arpl
cmpsl
mov
ds
notb
adc
sbb
ds
jns
lret
dec
inc
dec
fwait
and
pop
fistl
sahf
insl
imul
sbb
cmovp
nop
fldl
dec
push
test
sub
adc
test
inc
pushf
ljmp
rorb
and
jle
or
or
pop
aas
cmpb
cwtl
ret
sti
inc
out
pop
mov
mov
mov
test
adc
cmp
pop
loope
dec
call
arpl
mov
sbb
sti
sub
push
xchg
xorl
iret
fldenv
test
dec
adc
adc
cs
xchg
inc
and
or
adc
dec
sub
push
shll
jl
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
jb
fildll
mov
jg
pop
jne
jg
inc
sarl
pop
jae
cmpsl
or
or
adc
add
imul
movsb
jnp
adc
ffree
cmp
shlb
push
mov
das
xorb
into
pop
pop
loope
cmp
sbb
cmpl
sub
imul
jle
and
push
sahf
mov
push
dec
adc
cltd
test
sbb
sub
leave
cmpsl
lret
pop
xor
jnp
repz
std
mov
pop
sub
clc
icebp
enter
outsb
popa
movsl
xchg
insb
xchg
outsb
in
pop
push
fidivrs
mov
xor
into
mov
push
jl
sub
pop
aas
lret
adcb
ret
out
adc
adc
cli
push
clc
mov
mov
mov
inc
sub
dec
sbb
xchg
cmp
lock
fildl
or
jns
nop
sbb
fsubl
shr
mov
mov
insb
out
mov
ror
cmpl
inc
scas
mov
pop
stos
or
movsl
or
cwtl
nop
mov
xor
xlat
push
movsl
loope
fdivrl
sahf
stos
inc
out
lret
loopne
jno
sbbl
mov
out
mov
jg
decb
incl
icebp
pop
out
sahf
hlt
lods
push
mov
add
add
loopne
xor
pusha
or
aas
cli
cmp
aas
cmc
int
scas
xchg
les
add
sarl
bound
or
xchg
iret
add
sbb
fists
and
ljmp
fcmovnu
cld
inc
sbb
loopne
pop
jg
decb
js
out
mov
lret
or
jns
inc
lret
mov
test
mov
stos
and
push
lea
test
jge
dec
or
je
inc
imul
outsb
sti
push
or
icebp
aas
adc
xchg
inc
bound
cs
mov
or
scas
mov
and
ret
data16
pop
bound
mov
test
pop
push
xor
add
stos
roll
adc
lods
mov
add
add
rorl
mov
and
int3
pop
stos
sbb
add
int
outsb
icebp
push
stos
jae
xlat
ret
xlat
lea
jo
pop
jl
shll
push
into
jmp
pop
sahf
and
push
bound
sub
fisubs
popf
cmc
adc
xchg
xchg
ret
pop
push
adc
jmp
mov
pop
xchg
mov
out
addr16
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
jne
dec
mov
xchg
movlps
pop
push
ds
jle
dec
push
xchg
outsb
push
or
add
push
cmp
xchg
fs
or
cmpl
sbb
sub
push
pop
pop
inc
mov
subl
jnp
xor
adc
rcrl
popa
call
imul
lahf
xchg
push
cmp
insl
ja,pn
mov
xchg
and
dec
add
jne
sbb
mov
and
sub
xor
clc
movsb
test
xor
add
mov
push
pop
sub
aaa
add
jmp
repz
cmp
inc
mov
xor
mov
xchg
popf
lds
add
or
out
xchg
xchg
mov
cld
push
push
and
mov
xchg
inc
js
hlt
mov
and
ds
sbb
imul
test
sub
mov
cmpsb
loopne
into
sbb
cmc
push
sub
xchg
add
icebp
int3
outsb
xchg
repz
push
enter
add
mov
pop
shlb
sub
adc
into
andl
popf
popf
mov
out
daa
xchg
mov
add
cltd
push
dec
inc
mov
xor
pushf
inc
fsubl
inc
test
jl
jno
les
cmovs
dec
dec
pop
clc
mov
add
sub
fadd
mov
les
sub
jle
mov
xor
es
mov
div
xchg
movntq
xchg
sbb
mov
fwait
jecxz
cli
cmp
inc
pop
dec
movsl
mov
mov
in
jge
add
sahf
jae
mov
pop
mov
daa
fistpl
xchg
pop
movsb
cmpsb
inc
add
adc
sub
jmp
pop
jle
or
mov
mov
xor
arpl
mov
cmp
push
sbb
jbe
push
sub
ud0
sub
or
jnp
lods
push
daa
in
dec
sub
add
push
sbb
ljmp
and
fcmovb
in
fsub
pop
imul
push
mov
mov
xlat
les
ret
push
dec
nop
imul
or
lock
mov
xor
push
neg
outsb
loope
mov
add
loope
int3
xor
scas
cmp
sbb
insl
xor
sbb
sarb
inc
clc
dec
sub
cwtl
mov
sbb
sbb
adc
out
js
dec
inc
jmp
and
cwtl
mov
mov
or
sarl
aam
out
push
mov
repz
xchg
imul
cmp
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
ljmp
inc
xor
into
add
das
arpl
inc
jg
push
pop
dec
loopne
mov
xchg
jmp
call
arpl
mov
inc
push
daa
clc
dec
jecxz
popa
sahf
rcrb
xlat
fildll
std
jle
icebp
cmp
xor
push
mov
data16
pop
or
dec
push
lahf
fcomps
cmp
jge
cmp
and
testb
aas
je
lahf
cmp
daa
aaa
imul
jmp
mov
and
loope
sbb
addb
mov
fsub
mov
adc
inc
mov
jge
xor
adc
outsl
add
cmp
push
inc
and
lds
jge
mov
sbb
push
std
sbb
sti
inc
adc
enter
inc
sub
add
leave
mov
mov
and
push
dec
sub
faddl
or
orl
out
sbb
pop
ss
ret
stos
in
pop
scas
fdivr
clc
shlb
jno
xchg
push
push
popf
xor
stos
cltd
aad
loopne
test
xor
push
out
xor
idivb
loope
aam
inc
lods
orb
xchg
mov
cmpsl
decb
jns
cmp
stos
aad
cmp
sbb
mov
and
add
push
mov
push
pop
fbld
ljmp
sti
add
add
mov
mov
and
mov
xor
add
dec
lret
sub
cmp
or
mov
ja
and
daa
pop
cld
cmp
in
pop
xor
lds
mov
sub
lods
cmpl
divb
iret
dec
sub
xlat
out
nop
cmp
call
nop
or
cmp
push
adc
sub
or
dec
dec
sub
lea
and
scas
xlat
pop
sbb
leave
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
imul
adc
movlps
outsb
loop
xor
xchg
aam
mov
iret
mov
push
imull
lret
add
add
je
sub
dec
pop
div
icebp
aad
lea
mov
setnp
in
mov
shl
popa
pop
jge
add
roll
mov
popf
mov
shrb
xchg
push
aam
sbb
iret
xchg
xchg
mov
int
or
stos
lea
inc
lods
push
ja
mov
jmp
lods
fucom
jbe
sti
xchg
fildll
arpl
stos
mov
push
cwtl
stos
out
lret
jp
jb
or
cmpsb
and
in
insb
cmp
adc
xchg
cmovbe
loopne
arpl
and
xor
stos
jmp
ret
xor
xchg
jne
pandn
std
in
arpl
popa
lret
jnp
pop
test
xor
sub
scas
xchg
inc
cli
subl
jle
sarl
pop
loope
in
aas
loope
fnstcw
xchg
fistpll
mov
insb
lea
inc
push
gs
cld
mov
fs
pop
xor
push
cld
decl
sti
fbld
loope
paddsw
stos
in
ret
pop
xchg
rcll
dec
adc
push
xchg
lret
mov
das
cli
jbe
outsb
mov
mov
pop
int3
xor
repz
stos
jnp
jb
pop
pop
pop
jg
push
push
sbb
inc
inc
mov
cmp
mov
out
fs
pop
ss
mov
jns
pusha
in
mov
pop
mov
and
roll
fcompl
je
and
inc
push
push
pop
addr16
cltd
or
inc
ret
pusha
sub
cmp
bound
sbb
lds
sub
bound
pop
push
into
lds
add
call
sub
es
or
es
mov
and
lock
adc
xor
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
mov
std
jle
lret
enter
bound
xchg
jmp
clc
mov
pushf
dec
xchg
mov
xor
inc
addr16
jo
dec
xlat
push
mov
push
pop
stos
stc
aam
enter
sbb
cmp
pause
cmp
xor
sbb
sub
cmp
cmp
and
jbe
mov
and
jmp
test
mov
int3
sbb
test
cmc
mov
rorl
add
clc
ficoml
push
rorb
lret
lcall
mov
sbb
sbb
imul
cmp
mov
mov
aas
pop
xchg
aaa
push
jb
dec
sub
dec
mov
mov
mov
sub
repz
test
movsb
pop
call
dec
mov
sti
insl
dec
cwtl
sbbb
aas
idivl
stos
lods
pop
daa
and
repz
jp
fldenv
push
xor
mov
or
xchg
and
ja
xchg
add
data16
loopne
pop
adc
sbb
cwtl
mov
bound
in
movsb
xor
sarb
sub
data16
inc
mov
mov
inc
sbb
push
sub
pop
jle
xor
push
scas
adc
jnp
xchg
ds
jl
lods
mov
jmp
test
ss
ja
lods
jmp
mov
cmp
loopne
pop
lods
xorb
cltd
inc
movsb
xchg
das
add
adc
cld
jmp
cwtl
push
add
sub
cmp
out
ror
aaa
outsl
adc
loopne
lret
mov
notl
sar
test
pop
dec
mov
add
imulb
jge
xchg
dec
jne
test
lcall
push
xchg
fdivr
mov
mov
cwtl
popa
test
xchg
aam
pop
aaa
pop
cmpsl
aas
dec
test
es
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
jbe
mov
enter
mov
in
jl
mov
shll
les
addr16
out
mov
rolb
inc
lcall
inc
xchg
rcrl
scas
decl
inc
xor
lret
cmp
pop
pop
xor
call
jp
dec
int
shrb
pop
inc
scas
ret
mov
pushf
scas
scas
jmp
mov
sub
push
or
and
out
cmpsb
mov
mov
fisubs
out
jge
test
cli
clc
add
xchg
rcr
imul
inc
ja
fidivs
pop
repz
insl
sbb
cmpsl
cmp
pop
jg
mov
inc
movsl
mov
cs
jnp
and
hlt
mov
sub
in
sub
lcall
mov
ret
call
fcoms
cmp
mov
jecxz
ljmp
insl
pop
divl
cmp
mov
dec
aam
pop
divl
jns
mov
cmp
pop
pop
sarl
fmull
mov
and
outsb
jns
dec
popf
in
ss
outsl
out
lea
cmp
pop
loop
xor
mov
pusha
mov
mov
stos
cwtl
das
rcrb
dec
sub
lret
fstp
cmc
rorb
lcall
dec
jnp
xchg
jle
lret
insb
mov
jbe
sarb
jmp
loop
add
xchg
inc
jno
adc
stos
imul
lret
stos
gs
scas
sbb
adc
loop
dec
mov
repz
mov
sbb
shr
mov
test
fwait
add
movsl
mov
mov
cmp
loope
sbb
in
pop
dec
aad
enter
movsl
fs
repnz
xchg
sbb
mov
jo
mov
adc
pop
outsb
and
fidivrl
rcll
jb
cmp
lods
dec
xlat
outsb
pop
xor
push
out
daa
loop
lods
sub
cltd
pusha
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
dec
cmp
leave
ret
enter
fsts
xor
xchg
xor
fldl
and
sub
adc
insb
add
stos
dec
xorl
or
das
stc
loop
or
fstl
aam
pop
adc
xchg
xchg
mov
jbe
call
pop
dec
sarb
add
filds
xchg
inc
shlb
push
js
sbb
mov
mov
mov
int
cmp
cltd
push
or
cli
pop
sub
fidivs
scas
pop
repz
ret
outsb
and
in
xlat
loope
or
in
mov
outsl
xchg
scas
test
jo
mov
mov
adc
jns
xchg
aad
lods
jo
cs
fsubrl
ret
stos
cmp
cmc
mov
adc
pusha
movsl
mov
cwtl
push
push
call
sbb
or
pop
add
or
push
xchg
push
sub
mov
pop
pop
mov
jmp
ljmp
iret
dec
pop
mov
das
imul
scas
das
dec
pop
aaa
mov
mov
adc
xchg
cmp
outsl
push
pop
bswap
mov
jp
sub
mov
into
sub
cltd
shl
stos
inc
pop
arpl
mov
fsubr
dec
into
or
push
mov
cltd
jae
mov
sub
or
dec
daa
sub
inc
out
jnp
jle
in
xchg
rcrb
xchg
ds
shrl
add
cmp
push
scas
inc
adc
pandn
pop
xor
test
push
adc
mov
les
out
sahf
pop
mov
push
xlat
fs
js
lds
cmp
adc
xor
rorb
inc
adc
jge
pop
push
scas
jb
xchg
rcrl
pushf
lds
aas
mov
inc
jle
fstps
hlt
cmpsb
mov
leave
mov
cmpsl
out
adc
push
or
dec
movsl
repz
movsl
lcall
pop
adc
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
push
adc
adc
mov
sbb
lock
pushf
int3
fldt
jl
mov
lods
dec
stos
mov
mov
rolb
subl
sahf
or
jo
scas
pop
sbb
data16
gs
ficoms
adc
xor
sbb
pop
inc
std
sbb
or
xor
scas
mov
jmp
mov
iret
jns
or
lods
or
inc
sub
fistps
enter
push
lods
jecxz
cmpsl
shlb
inc
lea
or
mulb
mov
jns
pop
fdivrs
clc
add
shll
icebp
shr
out
out
mov
xor
push
repz
and
clc
cmp
or
sbb
mov
jp
mov
repz
cmpsl
cmp
fcomps
sarl
pusha
arpl
sbb
loop
js
sbb
push
or
enter
mov
das
hlt
fcoml
test
pop
out
dec
rcl
int
in
scas
jb
lahf
dec
in
cmp
insl
push
faddl
xor
sub
outsb
add
dec
gs
inc
cmpsb
lods
xchg
fs
sbb
xchg
xor
lods
xor
gs
mov
dec
sbb
sbb
sub
imul
or
jmp
fxch
movsl
xor
xlat
cmp
sub
gs
sti
loope
pop
jnp
and
adc
lret
xchg
imul
hlt
cmp
cmc
aaa
enterw
pop
out
cmp
lods
leave
mov
out
notl
pop
mov
mov
mov
mov
jnp
mov
pop
int3
or
and
faddl
lds
jmp
pop
pop
jo
std
sub
adc
push
cli
dec
std
dec
cli
lods
lcall
subb
inc
and
stc
aaa
mov
aad
inc
mov
push
lds
imul
dec
repnz
adcl
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
punpckhdq
mov
adc
inc
aam
sbb
jb
xlat
aad
stos
jmp
inc
test
test
dec
pop
sbb
insl
mov
faddl
ficoml
sub
cltd
push
adc
mov
testb
mulb
mov
out
sub
mov
dec
add
mov
repz
inc
nop
xchg
icebp
inc
inc
jae
jge
cld
stc
push
fs
sahf
test
fwait
adc
fistpll
pusha
out
xor
les
adc
lret
cwtl
and
int
shll
jb
xchg
rcrl
lock
cld
xor
andnps
mov
ja
lahf
daa
repnz
push
push
mov
bound
pop
mov
jecxz
stos
outsl
std
std
dec
scas
cmp
xchg
repnz
std
sarl
push
outsb
je
arpl
lods
das
cmp
movsb
mov
xchg
sbb
pop
inc
push
dec
mov
fsts
int3
and
adc
mov
inc
xlat
push
add
add
push
pushl
push
cmp
fcoml
push
mov
inc
popl
xchg
and
inc
mov
mov
je
insl
cltd
sub
test
mov
lock
pushl
nop
lock
mov
ret
add
xor
imul
jg
subb
mov
jl
mov
push
jne
sub
movsb
and
pop
xchg
jg
addl
test
dec
cs
sub
arpl
fnstsw
mov
xchg
lcall
xchg
or
sar
dec
and
cs
jl
out
outsb
push
cmp
pop
push
arpl
sub
mov
cmc
adc
into
cmp
adc
iret
nop
push
jb
push
jmp
pop
mov
stos
out
gs
dec
sbb
sbb
mov
mov
scas
mov
push
mov
movsb
jecxz
out
cmp
push
jge
pop
mov
and
fs
mov
adc
mov
push
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
xchg
push
push
mov
adc
movlps
dec
loope
pop
push
into
dec
dec
stos
pop
testl
call
adc
in
mov
xor
lcall
lea
push
jnp
push
fdecstp
rclb
lret
shrb
push
pop
lret
leave
cwtl
add
dec
cld
fsubrl
add
mov
in
dec
jno
test
inc
rolb
sub
jnp
xor
inc
xchg
push
ljmp
dec
aas
dec
dec
xchg
mov
in
in
jae
lcall
sbb
jle
sub
imul
sub
mov
ss
aad
ficompl
test
or
test
mov
add
mov
mov
scas
orb
addr16
xchg
mov
dec
shrl
lods
push
repnz
push
out
out
in
pop
insl
mov
mov
lret
es
adc
xchg
loopne
push
stc
stos
ret
xchg
cmp
or
mov
movsl
sbb
fnstsw
mov
pop
pop
xor
xlat
jno
jo
lods
xchg
mov
stc
adc
mov
inc
into
mov
add
cmp
push
sub
rep
xor
test
mov
inc
xchg
xchg
push
inc
dec
pop
adc
aas
dec
lods
adcb
insb
inc
xor
mov
mov
mov
sahf
mov
fldenv
rolb
ja
cmp
int3
xchg
scas
xchg
dec
inc
clc
bound
ds
scas
repnz
insl
or
sti
mov
mov
push
inc
mov
jge
cmp
pop
ljmp
ja
jle
inc
xchg
lcall
push
sub
addr16
inc
sbb
adc
jno
punpckhbw
mov
sbb
or
dec
and
mov
jbe
mov
ljmp
add
push
push
inc
xlat
cld
int
clc
in
sbb
push
hlt
adc
subb
push
lret
cli
out
and
push
jge
ret
fwait
and
mov
mov
cmpsl
repz
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
mov
jle,pn
lods
adc
adc
aam
jb
sti
push
arpl
or
call
and
jns
xchg
mov
aam
xor
or
movsb
aas
pop
test
cmp
sbb
xor
xchg
movsl
push
cmpsb
sti
jle
add
fucompp
or
les
test
sub
mov
lret
enter
sub
inc
inc
push
adc
cmp
in
shl
shlb
loop
jne
push
jge
cmp
mov
test
jb
sub
jg
adc
fidivrl
test
jl
push
add
xlat
sub
in
ds
fsts
jno
loopne
mov
xor
xchg
push
lret
xchg
jns
pop
addl
xor
fs
mov
and
inc
data16
xchg
bound
icebp
pushf
fcoms
adc
out
ljmp
in
mov
or
sub
push
cs
loope
adc
add
and
cmp
jg
mov
movsl
pop
xchg
push
cli
dec
xchg
stos
arpl
push
jp
or
push
loop
arpl
loopne
dec
mov
push
cmc
in
popa
xor
pop
lret
nop
sub
inc
sub
enter
stc
fdivs
xor
loope
xor
add
fucomp
inc
jnp
adcb
pop
out
mov
adc
xchg
push
mov
xor
inc
daa
cmpsb
sub
cmp
cmpsb
jb
leave
loope
sbb
push
xor
leave
int
into
aad
sub
mov
jmp
nop
adc
push
mov
aaa
push
int3
xchg
fucomp
mov
repz
pushf
push
inc
or
lods
int
mov
jp
pop
xor
pop
stc
popa
adc
push
or
cmpsb
notl
sub
mov
js
fistps
cmp
mov
mov
jo
jne
mov
dec
ljmp
test
jge
adc
mov
jo
jle
out
cmpsb
fmull
std
lods
add
sbb
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
loope
and
test
adc
movlps
xor
sub
sarl
mov
and
mov
add
lcall
sbb
fdivrp
push
icebp
fmuls
lea
cmp
add
outsb
cltd
inc
push
sarl
dec
push
jge
inc
adc
mov
push
xor
pop
mov
jae
ss
dec
sti
pop
mov
pop
mov
jp
mov
sahf
push
cmpl
jmp
sub
adcb
add
cmp
roll
lds
push
cmp
ljmp
fcomip
dec
push
cmp
iret
into
inc
shl
iret
mov
das
cwtl
mov
adc
dec
loope
dec
mov
or
call
out
adc
cmp
push
test
xchg
mov
outsl
test
test
sbb
aad
sub
dec
mov
adc
xchg
xchg
cmp
pop
hlt
in
adc
movsl
xchg
and
out
daa
call
out
fisubs
push
in
mov
push
mov
xor
mov
popf
pop
call
into
or
scas
xchg
arpl
push
lods
sbb
cmpsb
popf
mov
sub
and
aas
add
mov
sbb
mov
xor
cltd
adc
shl
call
stos
test
inc
add
in
cmpsb
movsb
sbb
sbb
outsb
xor
push
jge
loop
int
in
movsb
jmp
push
aaa
xchg
aam
mov
sbb
xchg
and
test
leave
mov
xchg
xchg
sbb
push
xorb
cli
push
pusha
notb
and
pusha
fcoms
aad
dec
mov
inc
push
mov
cmp
notl
test
push
imul
add
imul
lret
inc
test
jnp
push
stc
lea
out
and
pusha
mov
lds
push
insl
push
or
and
icebp
aaa
mov
lock
sub
mov
mov
outsl
ja
inc
das
pushf
jb
in
js
int3
std
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
sub
lods
add
adc
jle
xor
out
xor
shr
jmp
adc
mov
imul
xor
add
fdivs
pushf
cmp
adc
push
mov
mov
and
icebp
jecxz
mov
aam
movhps
mov
outsb
addr16
cli
scas
ds
shlb
popa
stc
jmp
and
mov
rcll
rcrl
shll
push
lret
inc
and
or
insb
cmpsb
dec
test
push
dec
jne
in
in
xchg
cltd
loopne
jnp
je
leave
cmp
mov
sbb
rorl
std
fbld
inc
jne
jmp
daa
dec
inc
mov
add
xchg
mov
mov
leave
push
fs
outsb
inc
mov
cli
cwtl
loop
mov
jge
test
ret
testb
cmp
in
loope
fldcw
ret
mov
sub
jecxz
dec
rcll
enter
push
adc
jge
mov
pop
push
xorb
mov
cs
jp
daa
outsb
push
out
mov
cmp
mov
daa
shlb
jmp
fld
or
shll
test
xchg
adc
sti
arpl
repz
movsb
das
mov
call
repnz
std
sbb
ror
pop
lock
mov
daa
sbb
pop
and
cmpsl
mov
je
push
jnp
ss
xchg
cld
test
clc
add
je
add
add
cmpsb
xor
xchg
dec
mov
mov
nop
out
jb
mov
dec
lods
jb
mov
fnsave
out
shrb
mov
aam
pop
ffree
mov
sbb
sti
jo
fs
jns
arpl
inc
dec
mov
out
movsb
mov
push
and
mov
outsb
inc
lcall
pusha
sbb
mov
jae
lea
pop
sub
insl
outsb
add
out
mov
or
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
push
ss
mov
adc
adc
in
sbb
clc
out
xchg
mov
test
add
sbb
mov
push
pop
lret
lahf
xchg
push
inc
arpl
mov
adc
xor
das
test
mov
mov
fcmovb
test
pop
das
mov
push
mov
mov
jp
movsl
jbe
cmp
cld
sub
aas
mov
imull
mov
movsl
mov
mov
push
and
adc
cwtl
repz
out
pop
fnstcw
xchg
adcl
cmp
inc
xchg
outsb
insl
nop
outsl
div
sbb
repnz
jbe
dec
xchg
loopne
filds
push
push
sbb
push
mov
orb
mov
mov
add
pop
insb
aas
push
xor
daa
iret
dec
add
xchg
pop
xchg
addb
sti
inc
sti
xchg
pop
enter
adc
sbb
push
cmp
cmpsb
xchg
push
push
jbe
mov
jmp
sub
enter
mulw
push
add
push
jbe
insb
xchg
pop
push
adcb
or
pop
inc
das
mov
fs
push
mov
cmpsl
push
in
das
loope
mov
dec
mov
add
pop
inc
mov
popa
adc
sub
pushf
dec
in
es
jmp
mov
outsl
daa
rorl
dec
push
test
stos
daa
pushf
pop
mov
popa
lcall
xor
shr
jns
test
aad
insl
movsl
mov
pop
movsl
sbb
lcall
xor
outsl
cmpsl
cwtl
enter
data16
mov
test
arpl
mov
jne
out
lods
addr16
push
cmp
std
xor
inc
popa
push
add
add
imul
notb
fsubp
xor
xlat
inc
mov
jg
jnp
push
gs
mulb
outsb
pushf
xlat
sub
jnp
jmp
outsb
ficompl
repz
jl
pop
add
lods
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
adc
push
sub
xchg
das
cli
xchg
xor
mov
ja
fbld
aas
pop
cmp
mov
ja
jecxz
mov
mov
fdivl
movsl
in
arpl
dec
rorl
push
pop
push
in
mov
popa
loopne
xor
and
push
xchg
imul
insl
call
sub
mov
dec
adc
adc
or
lret
push
push
test
fimull
pop
sub
cmp
adc
dec
xchg
lret
ja
add
xor
fisubrs
arpl
cmp
out
sbb
test
hlt
les
add
sub
loopne
movsl
ret
add
lods
ret
sbb
stos
or
enter
xor
fistps
cmpsl
push
mov
shlb
clc
sbb
jbe
and
jb
lret
pop
xchg
or
in
sbb
push
fisttpll
or
lret
push
jo
ljmp
add
xchg
fwait
mov
scas
lock
int
or
sti
mov
push
movsl
and
xlat
test
and
sub
cmp
jbe
mov
mov
mov
xchg
and
icebp
js
sub
popa
dec
sbb
add
cmp
pop
cmp
inc
jge
cmp
and
and
mov
push
das
lds
mov
int3
cld
jle
inc
cmp
cld
out
data16
mov
addl
sub
aas
outsl
std
and
enter
in
rcll
cmp
outsb
inc
sbb
sub
inc
xor
jns
jb
sbb
clc
sub
pop
xor
mov
push
in
das
or
jbe
fst
cld
fcmovbe
imull
test
dec
test
and
ljmp
xchg
andl
sbb
scas
popa
jnp
int
mov
cmp
imul
mov
daa
test
push
subb
or
adc
adc
xor
inc
mov
and
mov
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
hlt
js
sbb
movlps
xchg
push
jnp
mov
inc
mov
cmp
mov
cmp
dec
lock
fs
jnp
pop
jl
popf
dec
sbb
dec
push
push
insl
sub
xor
sub
mov
test
add
sahf
or
add
iret
les
xchg
xlat
ss
movsl
sub
pop
mov
jo
xchg
adc
insl
mov
mov
mov
les
les
js
mov
dec
adc
out
shlb
cvtps2pi
mov
cmp
xchg
sbb
out
orl
push
dec
lret
icebp
negb
and
dec
xor
dec
pusha
push
add
push
sbb
add
call
mov
jne
mov
fstpt
das
lock
and
imul
xchg
test
xchg
sub
movl
push
mov
cmc
cld
jnp
xlat
dec
sbb
roll
cwtl
pop
pop
push
push
xchg
push
mov
or
imul
fs
fcoms
fcmovb
inc
movsl
pushf
dec
mov
arpl
fwait
jmp
outsl
cwtl
and
cmp
cs
adc
lds
xor
ret
lods
pop
imul
inc
xchg
shll
sbb
xchg
xchg
jg
dec
adc
mov
xor
sub
mov
movsl
pusha
rcll
in
cld
fisttpl
and
jp
and
clc
test
adc
pushl
sahf
push
fidivl
adc
xchg
enter
or
push
xlat
cmpsl
mov
outsl
les
xchg
call
mov
jnp
pop
inc
repnz
outsb
into
sub
lds
jmp
aad
and
mov
incb
mov
imul
sahf
aaa
imul
divl
add
cld
movsl
lock
divb
push
cli
push
sahf
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
dec
jp
rclb
adc
or
test
outsl
cmp
sub
jl
cmpb
jne
adc
negl
pop
fcmovu
stos
push
ljmp
jnp
outsb
into
dec
dec
test
xor
add
arpl
xchg
nop
and
push
fmull
and
out
add
pushf
test
fcomps
loopne
pop
cmp
je
adc
cmp
cld
pop
out
lret
xchg
aaa
jp
in
mov
cmp
out
and
aaa
push
popa
fildl
test
std
and
les
outsb
movsl
js
xlat
dec
fimuls
xchg
pusha
push
jne
lretw
xchg
push
loopne
mov
push
xchg
mov
enter
push
repz
inc
mov
ljmp
leave
and
into
mov
cltd
loop
lret
shl
push
clc
mov
jno
mov
jno
mov
push
loope
insb
cli
lock
scas
cmc
xor
mov
sbb
shl
push
cmp
add
daa
cltd
stos
test
sub
lret
xlat
cld
lret
pop
das
cmp
xor
mov
inc
orl
fwait
xchg
lret
fdivl
ss
adc
push
loop
aaa
in
mov
push
mov
jbe
fwait
shlb
rclb
adc
push
sbb
sub
pop
into
hlt
mov
push
mov
aaa
or
in
mov
jmp
pop
fwait
pop
fisubs
daa
scas
in
jl
pop
stos
mov
mov
stos
imul
and
push
add
sarl
mov
xor
orl
mov
adc
stos
sub
loop
rcrl
add
lret
jp
aas
pop
cwtl
ljmp
mov
jmp
adc
push
pusha
movsl
mov
mov
lea
int3
sbb
int
ss
dec
ss
xchg
cltd
hlt
ss
fwait
jl
cmpsl
mov
insl
js
cli
test
cld
sahf
or
push
jae
addb
pop
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
bound
xchg
adc
adc
xor
sbb
jbe
fldenv
fcomi
mov
sub
pusha
sub
movsb
cmpsl
jecxz
jle
jge
pop
cmp
mov
sub
pop
popw
sarb
pusha
cmp
dec
idivb
dec
xor
mov
and
loope
jbe
add
push
add
iret
imul
jne
ret
dec
inc
lret
ds
sbb
sarl
mov
lea
inc
add
movsb
insb
insb
or
pop
cmpsb
jg
pop
outsl
addr16
lcall
adc
push
outsb
jecxz
data16
aas
sbb
lahf
hlt
dec
jbe
push
dec
outsl
jnp
lds
enter
fcomps
lock
stos
mov
outsb
sub
pushf
ds
rcll
pop
jge
fs
insl
mov
hlt
jns
call
mov
mov
cmp
or
enter
neg
ja
sbb
scas
xor
xor
mov
aas
loope
arpl
outsl
xchg
xor
jbe
mov
lea
testb
dec
add
cwtl
fwait
xlat
fiaddl
arpl
mov
iret
add
push
fisttps
mov
aaa
out
adc
movsl
pop
fcomps
adc
lahf
pop
inc
push
fdivrp
add
ret
sbb
insl
popa
enter
cmp
mov
dec
adc
cmpsl
xchg
cmpsl
jmp
les
jecxz
cmpsl
mov
cmp
mov
addr16
lret
fdivrs
inc
mov
stos
mov
xor
and
xor
addr16
scas
in
dec
leave
pop
or
push
shrb
add
adc
loope
dec
xchg
imul
adc
pop
xor
mov
bound
imul
subl
jecxz
pop
cmp
and
arpl
xorl
push
cmp
pop
jp
out
sub
fcmovnu
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
sahf
mov
push
mov
adc
jmp
inc
fwait
mov
xchg
rcr
cmp
mov
push
incl
mov
ljmp
call
scas
jecxz
sub
call
fs
rcl
arpl
nop
fimull
cmpsl
pushf
push
mov
mov
xlat
loopne
or
es
sbb
sarl
jecxz
movsb
push
fbld
pusha
or
int3
pop
dec
es
sub
mov
mov
arpl
ss
lea
lods
lret
aaa
ret
lock
sub
pop
pop
icebp
sub
and
incl
sub
cld
call
out
ja
mov
adc
sbb
inc
js
cmpsb
cmpsb
pop
addr16
in
icebp
out
stos
lods
mov
adc
push
pop
insb
mov
outsb
pop
mov
fwait
stos
and
fildl
lea
addr16
sbb
push
stos
sarl
or
mov
or
mov
or
lea
rcl
push
and
xor
fbstp
jmp
out
andb
push
mov
cs
fs
loopne
or
inc
out
mov
fisttpll
cmp
mov
lea
mov
pop
and
and
mov
das
push
sub
scas
inc
and
or
mov
jmp
mov
dec
mov
fsts
movsb
ds
mov
popf
adc
xor
jns
mulb
push
add
sub
sub
lcall
mov
inc
outsl
xor
jle
mov
test
fsubs
out
push
xchg
mov
push
push
pop
sbb
sub
enter
jno
and
pop
or
push
out
xlat
mov
mov
mov
scas
pop
stc
cmpsb
fcomp
pushf
dec
mov
push
rcrb
jl
mov
out
loop
inc
mov
fimuls
xchg
subb
inc
xchg
fucomp
sub
aad
lods
aaa
dec
testb
mov
je
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
dec
bound
adc
shr
xchg
jl
and
xchg
and
mov
push
imul
jl
mov
scas
sub
pop
push
add
in
call
sub
push
adc
in
inc
inc
push
jg
fcoms
sbb
push
push
jae
jp
or
scas
mov
stc
leave
and
adc
sbb
and
sub
cmp
fs
ret
es
push
inc
adc
clc
fs
cmp
cwtl
imul
pop
xchg
mov
ds
test
loopne
lods
sahf
pop
ret
call
push
mov
dec
pop
xor
sbb
sbb
push
xchg
leave
pop
jno
adc
mov
arpl
cmp
rclb
out
sub
pop
mov
mov
mov
bound
int
aas
in
pop
int
cmp
jg
aad
jo
hlt
mov
clc
dec
inc
aam
add
arpl
or
mov
test
inc
mov
test
inc
inc
movsb
jp
stos
in
xchg
adc
pop
stos
int
pop
xchg
xor
into
or
test
movsb
push
popf
insl
pop
es
loop
das
and
fisubrs
jge
in
lret
mov
mov
mov
out
cmpsl
push
adc
xor
pop
ljmp
mull
mov
mov
push
rclb
test
add
inc
sub
jne
ret
jg
repz
pop
mov
and
jae
adc
mov
lahf
das
sarb
nop
sub
aam
cli
pop
pop
int
bsr
jmp
or
push
or
push
cmp
fbld
mov
shll
cmc
fstpt
adc
mov
mov
test
push
shr
xchg
dec
sbb
or
pop
mov
jbe
iret
test
jns
or
orb
cmpsl
fmull
xchg
push
xchg
xor
addl
sti
jbe
lret
inc
stos
adc
lret
fmuls
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
or
stos
mov
movlps
clc
loopne
sbb
xor
inc
aaa
inc
inc
test
push
or
sub
pop
cmp
ret
cmp
fnstcw
lods
sub
mov
xchg
aad
inc
dec
jno
cmc
in
or
dec
outsb
mov
cmp
rcrb
xchg
in
cwtl
jb
sub
cmp
sti
test
fimuls
rcrl
in
push
add
rolb
sbb
or
jns
test
loop
mov
xchg
push
rcr
mov
mov
pop
in
sub
out
lods
or
xchg
fstpt
pop
sub
push
xchg
ret
pop
sbb
aas
lret
inc
mov
xchg
loop
test
shl
mov
jg
fs
popw
in
cwtl
test
xchg
scas
sti
xchg
cwtl
cmp
add
rorb
jo
ret
mov
scas
test
cld
pop
add
adc
inc
mov
inc
sub
jo
push
int3
scas
sahf
jno
dec
or
inc
fnstcw
push
fdivs
mov
fbld
pop
dec
push
jae
iret
cmp
sahf
add
xchg
mov
jecxz
ds
aam
daa
or
fdivl
es
loopne
add
pop
jl
dec
lods
sbb
add
in
es
push
sbb
lock
outsl
mov
fcom
rclb
imul
idivl
mov
rcll
jbe
sub
lret
insb
jns
xchg
leave
inc
es
mov
or
lret
dec
pop
cltd
push
sahf
jmp
jg
xor
push
mov
adc
sti
pop
sti
aas
lods
stos
inc
mov
push
fdivrp
aam
pop
dec
hlt
sar
je
pop
ljmp
adc
sub
lea
das
or
inc
push
mov
gs
add
dec
mov
pop
xchg
or
rcrb
xor
cmp
xor
and
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
mov
mov
enter
rorb
call
dec
mov
cmpsb
cmpsb
decb
addps
cmc
adc
and
leave
dec
stos
insl
dec
sahf
cmp
or
test
and
lret
inc
push
js
icebp
lcall
pop
push
mov
mov
loop
in
xchg
and
shrl
into
fsubl
lret
out
lods
test
in
adc
xor
and
idivl
mov
lret
addr16
rorl
mov
fidivs
add
aaa
gs
mov
inc
jl
ss
jae
test
rorb
add
sbb
fndisi(8087
jne
fsts
out
mov
subl
mov
mov
jo
xor
fisttpll
adc
xchg
xlat
hlt
or
out
cld
jmp
icebp
or
out
insb
and
into
mov
dec
jo
pop
int3
sub
cmp
pop
adc
outsb
lcall
xor
lcall
fistpl
ret
inc
lret
xorl
adc
aam
ret
je
jge
rolb
dec
sti
sti
subl
inc
adc
lods
sub
xor
dec
lret
adc
rorl
sarb
std
fbld
rorl
push
shlb
xchg
dec
scas
mov
icebp
test
sbb
jne
mov
repz
mov
add
xchg
or
cs
jmp
xchg
insb
test
mov
xor
push
add
push
adc
imul
sbb
jno
int3
test
adc
jl
pop
sbb
xor
mov
fsub
jp
add
in
dec
cmpsb
push
imul
aad
lea
cmc
adc
inc
push
and
jnp
push
jne
mov
mov
dec
inc
loope
mov
jnp
js
xchg
add
mov
sub
push
jno
js
mov
push
dec
in
adc
into
and
push
dec
push
out
push
adc
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
or
mov
enter
adc
popf
loopne
push
mov
int
jb
mov
jne
sub
and
filds
mov
xor
mov
adc
push
mov
loop
fnstcw
cmp
push
loopne
mov
iret
sbb
or
mov
push
ret
mov
int3
inc
jno
pop
sbb
dec
mov
ja
nop
push
enter
and
sbb
rol
xor
imulb
loop
sub
mov
sbb
addr16
and
push
sbb
lock
jge
push
das
in
repz
jecxz
popa
daa
cmpsl
mov
jge
push
and
jne
sahf
sub
add
pop
inc
les
fsts
nop
mov
movsl
out
xchg
sub
pop
pop
xchg
js
push
or
pop
sbb
mov
idiv
movsb
addr16
jns
mov
inc
pop
push
pop
aaa
sbb
ret
ja
inc
aas
sub
xchg
xchg
mov
mov
lds
push
cwtl
call
mov
adc
cmc
sahf
push
xlat
test
dec
dec
popf
inc
repz
sbb
lock
aad
icebp
and
inc
idivb
and
jne
inc
std
pusha
lahf
test
scas
clc
rol
sub
in
push
test
sbb
and
loope
popf
setns
aaa
loop
out
popf
push
mov
push
push
adc
push
sbbb
adc
xchg
dec
jnp
and
mov
and
outsb
add
addr16
cmp
shl
inc
and
fimuls
test
adc
mov
adc
pusha
adc
stc
jge
shlb
jno
aaa
test
rcl
adc
adc
mov
sbb
or
sbb
push
xchg
cmpsb
aam
adc
mov
xlat
mov
cmpsl
jge
mov
push
aad
sub
mov
cli
or
adc
loop
xchg
cmc
dec
inc
cld
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
jns
lods
mov
movlps
pop
iret
push
xor
xor
pop
push
loop
mov
mov
adc
mov
fldt
mov
push
add
xchg
loope
push
push
adc
in
fcmovnb
or
mov
fsubrp
dec
mov
cltd
data16
out
shll
mov
arpl
sub
sbb
int3
lock
or
adc
loopne
fsubrp
out
out
mov
dec
inc
cld
cmpsl
xchg
lahf
ja
dec
pushf
setg
call
jae
lods
xchg
xchg
jae
mov
test
inc
sbb
xor
adc
pop
hlt
lret
push
loope
fwait
push
fs
into
enter
mov
sub
iret
xchg
pop
enter
push
jecxz
inc
data16
push
faddl
aam
jb
es
lea
pop
mov
cli
mov
mov
jp
lds
pop
push
pop
jecxz
lret
mov
sub
aas
out
test
sub
dec
lock
push
sbb
in
jno
std
das
pop
and
andl
jno
and
lock
xor
and
pop
add
mov
lock
mov
mov
bound
lcall
push
les
in
fcoms
push
mov
mov
xchg
sub
ds
int3
cld
outsl
stc
mov
cltd
sub
sub
scas
xor
sbb
sbb
in
push
jl
pop
addr16
dec
data16
repz
in
int
cmp
inc
pop
push
mov
dec
inc
mov
cmp
pop
shr
negl
sbb
adc
lock
cmp
or
mov
dec
xor
repnz
icebp
fnstsw
sti
cmpsb
jmp
inc
xor
sbb
fsts
lea
sbb
adc
push
ss
divb
add
aad
push
sbb
mov
insb
clc
push
mov
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
dec
cmp
jo
adc
movlps
sbb
pop
cld
pop
aam
xor
in
xchg
sarl
jg
xchg
inc
or
and
jle
mov
sbb
in
push
test
rclb
pop
lock
dec
mov
xchg
enter
mov
loopne
sub
dec
movsl
jge
adc
les
add
add
jae
jmp
loope
gs
das
inc
cli
push
arpl
jns
add
jnp
sbb
movsl
mov
push
shll
in
mov
data16
jge
adc
dec
mov
jbe
test
xchg
inc
outsl
pop
fcoms
movzbl
add
sbb
push
test
push
out
nop
lods
xor
sbb
dec
push
stc
push
bnd
mov
mov
ds
shll
decl
mov
or
cwtl
out
adc
or
xchg
enter
cmp
pop
loopne
outsl
in
sahf
push
xchg
adc
add
mov
ds
ljmp
and
roll
cld
leave
jnp
cmp
add
xor
xor
mov
lret
pop
orl
test
mov
orl
jp
mov
sub
aas
jecxz
xchg
or
push
dec
rcll
lods
fmull
cld
dec
stos
movl
rcrb
sbb
pop
data16
jp
adc
arpl
test
add
inc
ret
outsb
lcall
mov
mov
cmp
sbb
pop
stos
out
fdivrs
add
adc
push
popa
bound
dec
sahf
mov
mov
aam
mov
inc
mov
mov
sub
xchg
pop
cli
mov
inc
inc
sub
outsl
pop
das
mov
mov
xlat
int
and
mov
inc
imul
aaa
xor
mov
test
adc
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
lds
test
es
adc
adc
xchg
or
fwait
push
stc
lcall
cmpsb
adcl
push
jle
shll
cli
and
lods
cmc
je
shrb
loopne
lcall
scas
call
mov
pop
loopne
pop
fimull
push
ret
inc
push
inc
cmc
xchg
xchg
stc
mov
push
mov
outsb
mov
addr16
rcrb
cmpl
mov
jnp
jecxz
shlb
test
and
je
repz
iret
mov
lea
repz
mov
and
jbe
pop
lods
adc
xchg
add
repz
ds
mov
lahf
cmp
push
aaa
push
popa
and
cmp
or
dec
mov
mov
xor
sub
cli
adc
dec
in
rcrb
add
movsl
pop
pop
dec
mov
pop
stc
es
js
stc
xlat
and
ds
mov
jne
js
sbb
shl
pop
out
mov
lahf
push
xchg
pop
inc
adc
add
lret
mov
mov
fsubs
test
daa
ret
xorl
add
xorb
or
cli
cmp
mov
movsl
mov
ss
add
jne
mov
sbb
les
inc
pop
pop
inc
insb
push
mov
cmpl
out
ret
xor
ds
in
iret
adcl
stc
pop
mov
and
rorb
dec
adc
sub
mov
clc
loopne
add
sti
jmp
adc
cld
sub
dec
mov
test
rorl
imul
lea
cmp
and
jle
movsl
inc
inc
popf
mov
sub
and
es
outsb
cwtl
int3
in
bound
dec
popa
orl
mov
out
cli
xor
fstps
cltd
bound
test
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
fbld
in
jle
push
adc
sub
aam
xchg
sahf
jp
lea
or
div
pop
xlat
or
sub
in
adc
inc
pop
dec
add
sbb
dec
ret
ret
jae
mov
add
lods
pop
mov
fnstsw
sub
inc
xchg
add
leave
sbb
test
scas
in
sbb
mov
add
add
in
push
push
and
push
xchg
mov
pop
xchg
cmp
mov
pop
jb
in
pop
dec
push
cmp
ucomiss
mov
mov
cs
ljmp
and
adc
add
xchg
xor
mov
mov
adc
gs
pop
push
or
xchg
hlt
enter
leave
dec
das
adc
cmp
inc
clc
aad
pop
mov
mov
fs
lahf
mov
sti
pusha
mov
into
and
jecxz
inc
bound
adc
loopne
nop
fwait
jl
push
push
mov
ss
cltd
sub
push
mov
xchg
dec
xchg
xchg
push
dec
cwtl
test
idivb
lea
int
mov
add
mov
add
xchg
loop
insb
sub
test
scas
jecxz
test
pop
add
jno
rcr
pop
arpl
fmul
aad
dec
mov
xchg
push
and
icebp
aad
pop
stos
add
jno,pn
sarl
or
mov
and
aas
pop
test
daa
and
and
or
mov
roll
or
sti
add
dec
mov
orb
inc
jae
mov
aaa
inc
and
fidivs
jns
loope
inc
inc
xchg
in
cltd
push
cmp
test
data16
repnz
fwait
loope
loopne
push
pop
fistl
inc
movsb
test
xorl
in
push
pop
stos
xor
cwtl
add
out
and
cmp
jmp
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
idivl
fs
adc
inc
jnp
cli
mov
xlat
rorb
push
mov
mov
adc
xchg
out
js
jbe
cmpsb
cmp
push
pop
add
push
stos
sub
mov
scas
in
movb
leave
lea
inc
mov
sbb
sbb
xchg
jl
cmp
imul
sbb
cld
push
jae
inc
jae
sub
mov
push
arpl
jle
push
clc
icebp
outsl
xor
fs
push
jne
sbb
push
mov
fs
test
or
nop
or
pop
loopne
in
mov
xor
lahf
jecxz
mov
or
fptan
insb
push
imul
add
loop
and
jne
pushf
xchg
cmc
mov
lret
js
out
mulb
xor
lret
stos
mov
xchg
lret
imul
std
add
lods
push
jno
or
out
mov
pop
in
aaa
out
sbb
idivl
dec
inc
aad
xchg
xchg
scas
push
mov
mov
daa
jns
xchg
xchg
scas
rorl
xchg
arpl
sub
sub
xchg
push
pusha
adc
pop
aad
test
dec
decl
inc
mov
into
in
inc
cmp
or
xchg
lret
jle
mov
xchg
cmpb
pushf
int
test
fcoms
mov
jmp
add
lea
adc
xlat
fbld
xchg
inc
xor
test
push
pop
js
sti
sub
stos
jb
aad
mov
aam
jae
aas
push
xchg
dec
dec
movsl
out
mov
adc
pop
cmp
jno
mov
lods
das
data16
mov
outsl
pop
or
adc
out
mov
and
fisttps
or
xor
pop
gs
insb
mov
arpl
stc
lods
and
jbe
mov
push
jo
xchg
loope
aam
aas
add
hlt
xchg
fdivl
test
sbb
sub
aas
pop
jbe
jmp
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
add
mov
xor
or
xor
outsl
inc
add
and
je
lret
or
inc
ja
sbb
out
dec
pop
hlt
lcall
pusha
scas
xchg
push
xchg
ficoml
pop
ret
mov
push
lret
ret
icebp
xor
pushf
jae
xor
decb
pop
gs
in
sub
mov
push
pop
push
push
sbb
mov
xor
mov
cli
cli
or
in
repnz
out
dec
dec
test
adc
jg
dec
xlat
sbb
dec
push
lret
pushf
arpl
idivb
jmp
mov
mov
testl
sbb
ret
lcall
adc
lods
imul
imul
aaa
adc
jmp
nop
mov
adc
mov
cli
test
movsl
xchg
xor
inc
sbbb
nop
jg
fstpl
add
mov
addl
jmp
mov
shll
pop
mov
loop
outsb
stos
dec
bt
sti
ss
pop
push
jle
leave
out
mov
or
jge
add
outsb
lahf
xor
mov
mov
xchg
cltd
push
pushf
pop
mov
pop
fdivrs
enter
into
mov
mov
inc
xchg
icebp
push
jmp
imul
stos
sbb
sub
les
cltd
imul
aad
imul
mov
cli
sub
cmp
pusha
xlat
mov
cmp
scas
jne
mov
lock
mov
test
ret
fdivl
or
fwait
jecxz
repz
dec
subl
imul
mov
sub
jae
cmp
push
loopne
mov
add
mov
movsl
iret
lods
inc
add
cmp
out
cmp
and
dec
inc
imul
or
dec
xchg
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
cmp
push
pop
adc
adc
inc
mov
xchg
and
jle
rcll
popf
les
fidivrl
pop
dec
jno
adc
sub
iret
in
ret
cli
test
shrb
mov
aaa
icebp
and
pushf
and
lea
push
mov
pop
xor
jno
xchg
sarl
int3
adcb
jg
cmp
cmp
in
lods
xor
adc
sbb
push
fmuls
dec
xchg
ret
mov
mov
adc
pop
jg
and
sub
or
mov
test
adc
and
in
js
in
xchg
mov
sbb
adc
add
test
sbb
jo
jecxz
data16
jmp
enter
in
lds
sbbl
mov
sub
rsqrtps
rcll
jmp
in
dec
mov
pop
nop
sbb
pop
jnp
lock
negl
pop
scas
pop
inc
lods
popf
stos
fsubs
lret
jne
mov
hlt
jmp
test
inc
pop
mov
sub
dec
sub
sbb
cld
dec
cmp
cmpsb
sbb
push
adc
push
ror
daa
inc
enter
and
int3
cmc
xlat
in
mov
mov
xor
push
pop
jo
test
pop
add
ret
mov
roll
inc
fistpl
mov
jae
enter
test
int
enter
faddp
cltd
mov
or
xchg
cmp
mov
movsl
or
enter
mov
jno
scas
ljmp
sbbb
pop
mov
mov
arpl
xor
rcrb
mov
mov
push
icebp
leave
xor
pushl
cmpsl
pop
cmpsl
cmpsb
add
pop
xor
faddl
andnps
arpl
xor
shrb
inc
and
xchg
mov
clc
and
das
jo
xor
sbbb
xor
inc
or
or
xchg
popf
pop
inc
sbb
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
jp
int3
lods
stos
pop
adc
adc
or
ret
inc
inc
push
arpl
testl
test
xor
iret
sub
gs
jge
push
inc
pop
test
pusha
ret
popf
dec
data16
mov
loopne
stos
push
test
aaa
mov
mov
sub
fimull
mov
test
sub
movsb
adc
hlt
inc
sbb
fisttpl
mov
adc
out
inc
adc
dec
incl
aam
mov
pop
in
or
enter
sbb
stos
movsl
cwtl
out
in
adc
test
aam
xor
sub
pop
or
xor
sub
hlt
push
mov
mov
push
cs
jmp
inc
movl
mov
lcall
mov
cmpsl
addl
js
std
lret
es
cmp
imul
sti
leave
xor
fbld
or
roll
fsubrp
sub
fcmovbe
repnz
int
xor
sub
inc
cmp
push
push
sahf
imul
adc
aas
jp
jmp
push
hlt
lahf
out
and
sbb
mov
gs
hlt
xchg
test
enter
push
in
stc
je
jae
sub
add
es
fistl
sub
fnsave
jns
scas
or
add
dec
mov
xchg
ja
les
or
dec
stc
dec
and
push
add
mov
stos
fisubs
fxam
es
daa
std
push
bound
sub
mov
sahf
mov
in
dec
jae
mov
aaa
call
lret
stos
pop
mov
pop
popf
push
mov
xchg
iret
out
push
lcall
lods
xchg
xchg
and
push
outsb
push
mov
mov
and
js
test
fcmove
xchg
test
in
and
mov
inc
push
jb
push
sbb
outsb
push
daa
pusha
sbb
and
fisttpl
inc
iret
outsb
mov
imul
popa
arpl
loopne
sub
push
in
fisubl
inc
mov
outsb
popa
mov
pop
xchg
xchg
js
fidivl
arpl
ljmp
into
xor
inc
push
aas
dec
mov
or
dec
add
into
mov
cmp
xchg
iret
dec
test
aaa
pushf
stos
or
movsb
in
lds
jne
in
xchg
push
shlb
pop
sahf
testl
jp
lds
mov
sbb
and
in
js
aam
out
cltd
jae
sbb
int3
shrl
push
jb
cmp
mov
pop
or
jns
mov
mov
mov
aad
add
and
inc
jle
lea
mov
add
mov
inc
or
mov
stc
push
jp
jnp
adc
int
sbb
fldt
fisttps
rol
ljmp
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
js
push
adc
adc
and
nop
jno
and
in
add
pop
push
loope
adc
sub
stc
fwait
sar
sbb
test
stc
adc
push
aaa
sbb
mov
mov
xlat
sub
cli
cmp
jg
cwtl
pop
adc
aad
sbb
push
add
xchg
adc
fists
dec
add
addb
rolb
ds
push
scas
pop
fs
lods
push
mov
xchg
bound
or
addl
push
rcll
xchg
test
xor
test
imul
push
movsb
iret
cmp
xor
addr16
les
shlb
enter
pop
adc
dec
popf
inc
cmp
inc
jle
mov
inc
xchg
and
mov
cli
adc
inc
xor
ljmp
pop
test
push
sub
loopne
pop
rcrb
and
stc
mov
aam
sbb
jl
shl
aas
nop
pushf
stos
sub
cwtl
scas
insb
in
xchg
adc
fidivs
jnp
shrb
fldcw
testb
dec
inc
push
bound
call
and
call
jbe
stos
cmp
repnz
xchg
and
mov
pop
aaa
es
cltd
fsubrs
xchg
cmp
or
call
inc
outsl
xchg
mov
or
leave
mov
add
std
bound
mov
add
js
aaa
insb
faddl
jns
fwait
stc
cmp
out
scas
and
mov
fdivr
sahf
in
hlt
push
mov
xor
les
push
add
scas
sbb
cs
pop
or
lock
lods
test
je
pop
fcompp
orb
cmp
fs
pop
jno
clc
jno
mov
mov
push
shll
fs
mov
insb
call
push
push
sub
push
push
aaa
or
mov
loopne
mov
and
and
out
dec
lret
or
jb
jecxz
cmp
mov
jge
jb
orb
jecxz
lret
fimull
popa
pop
push
cld
push
or
movsb
mov
imul
imul
lret
jmp
pushf
adc
subb
pop
mov
int
flds
xor
gs
cmp
push
mov
or
cmp
mov
dec
adc
flds
paddq
test
dec
or
movsl
shl
mov
div
inc
in
or
inc
jg
mov
cmp
fdivs
aas
xor
xchg
leave
push
rcrb
jle
clc
pop
cli
arpl
scas
lods
xor
mov
fcompl
cli
repnz
push
mov
mov
push
mov
mov
iret
sbb
jmp
mov
lock
inc
sti
mov
dec
lods
int3
inc
cmc
jl
xor
scas
add
loop
jns
cs
and
andb
pop
sub
mov
in
adc
addb
sub
xor
mov
pop
movsl
jo
imul
jne
jg
push
fildll
pop
push
loope
and
les
xchg
push
or
xchg
sub
mov
sbb
int
fs
mov
push
add
mov
fs
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
