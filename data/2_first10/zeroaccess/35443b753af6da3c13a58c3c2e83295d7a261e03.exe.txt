push
mov
sub
mov
mov
cmpl
mov
movl
movl
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
push
push
push
call
add
xor
or
adc
mov
adc
movzbl
adc
sbb
orl
xorl
xorl
mov
sub
jmp
mov
cltd
jg
xor
and
mov
jb
dec
cmp
jne
ficoml
and
ret
cmc
fcmovbe
bound
loope
pop
outsl
call
ret
popf
adcb
aaa
ds
mov
adc
fwait
lret
imul
jb
mov
popa
sti
out
aas
imul
das
sub
ret
mov
inc
scas
and
dec
inc
scas
les
fildll
cmp
dec
or
orb
cmpsl
inc
or
mov
mov
inc
mov
imul
and
adc
sub
jnp
cld
jg
mov
cmpsb
push
data16
fadd
aad
jb
mov
pop
into
jl
sti
out
fcmovnu
inc
jecxz
push
call
or
xchg
lods
xchg
loop
jecxz
jbe
or
imul
clc
pop
repz
inc
push
xchg
in
sbb
ds
inc
aad
and
sub
rcrb
xor
imul
mov
cli
mov
int3
dec
fnsave
or
lcall
sub
into
fistpll
cmc
dec
push
int3
cmp
fsubl
lret
popf
cmp
mov
insl
adc
pop
push
arpl
sbb
data16
and
mov
loope
and
sahf
xor
adc
mov
sub
fwait
inc
fcom
jle
or
inc
loopne
push
lss
es
sub
add
xor
popf
cmc
and
inc
iret
pop
sub
inc
mov
mov
in
insb
addr16
jge
push
xchg
loope
lock
push
test
hlt
movsl
mov
fldl
lock
out
dec
cmp
stc
sub
dec
pop
push
ja
js
mov
fldt
clc
test
inc
mov
cmp
das
push
xor
sti
or
mov
icebp
push
push
pop
jge
jb
mov
aam
fwait
add
adc
jnp
std
ljmp
outsl
add
sbb
adc
push
mov
xchg
cmpsb
cmp
pop
push
xor
push
ja
and
cltd
add
fdiv
aaa
or
loop
jnp
pop
cmpsb
fisubrl
sub
ret
insb
scas
push
jecxz
sub
out
or
inc
shlb
clc
imul
mov
pop
sbb
ljmp
add
addb
jge
mov
sbb
movzbl
adc
mov
orl
cmpl
mov
mov
jmp
mov
cmpl
jle
pushl
push
call
sub
add
inc
xor
add
adc
sbb
sbb
adc
orl
mov
sbb
mov
or
mov
movzbl
sbb
mov
sub
mov
sbb
mov
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
push
push
push
push
call
xor
or
adc
xor
and
xor
adc
xor
cmpl
mov
movl
not
movl
jmp
movzwl
cmpl
je
pushl
call
movzwl
add
mov
and
xor
adc
inc
adcl
mov
sub
orl
orl
add
lea
xor
add
add
mov
mov
adc
mov
mov
add
xor
add
mov
sub
add
mov
andl
jmp
das
jp
mov
mov
xchg
sbb
mov
pop
je
pop
jg
idivl
ja
bound
sbb
cmp
xchg
add
jae
enter
xor
js
sbb
and
stos
pop
cld
out
aas
fdivrs
movsl
and
sub
mov
loopne
xchg
nop
adc
pop
iret
pushf
jnp
mov
inc
sub
fisubrl
daa
mov
and
or
test
in
inc
fistpl
jle
lret
lahf
gs
cltd
mov
and
pushf
add
jg
mov
fsubp
popa
lcall
fcompl
dec
rorb
idiv
push
xor
cmp
or
or
ret
out
je
gs
icebp
adc
jecxz
lahf
pop
jmp
ljmp
stos
cltd
push
push
insl
shrl
dec
cld
test
adc
loop
hlt
scas
pop
jecxz
ror
mov
cmpsl
addr16
rcr
hlt
cmpsl
sub
pop
push
ja
mov
notl
pop
pushf
cli
fwait
mov
stos
lds
xchg
inc
mov
pop
scas
sbb
cmp
insb
lret
mov
and
cli
sbb
movsb
mov
in
jb
das
dec
push
pop
stos
das
outsb
outsl
fisttpl
cmp
sti
and
pushf
xchg
pusha
xor
jp
les
cmpsb
lock
dec
adc
daa
cmp
and
sbb
add
mov
or
mov
ds
lret
fwait
les
sbb
mov
jae
adc
jb
sub
loopne
jge
pop
pusha
jle
mov
js
imul
fcoms
xchg
and
ror
sub
jmp
out
lret
xor
add
int
lret
push
mov
pusha
jp
loopne
mov
pusha
iret
imulb
mov
nop
cmpsl
inc
pusha
push
jno
add
pop
lcall
fidivl
enter
repz
insl
jge
movsl
int3
test
sub
js
les
cmpsl
int3
pop
lea
clc
mov
push
or
out
xchg
xor
aaa
xchg
xchg
std
mov
sbb
cmpsl
or
add
xchg
aad
sbb
rcrl
ljmp
out
or
mov
fsubs
icebp
and
jnp
fcmovb
ds
fistl
hlt
cmp
inc
stc
mov
mov
mov
cmpl
mov
mov
mov
jmp
mov
cmpl
jb
push
pushl
call
and
adc
xor
xor
xor
xorl
or
xor
mov
shrd
add
shr
jmp
xchg
cmp
push
mov
daa
cmpl
sarb
mov
jo
add
sub
xchg
sub
push
test
mov
inc
std
inc
mov
xchg
jle
popf
mov
test
dec
in
jnp
fwait
inc
push
dec
cmp
data16
and
add
ljmp
xchg
dec
adcb
pushl
es
jecxz
mov
sbb
movsb
popa
mov
repnz
sbb
xlat
adc
pop
mov
sbb
inc
gs
mov
xchg
adc
inc
jl
jbe
jmp
push
in
and
xchg
and
dec
mov
call
pop
inc
inc
mov
add
xchg
out
xor
mov
outsb
pop
std
lods
loopne
xchg
and
or
or
mov
fisubs
jb
xlat
lock
test
stc
push
fildl
xchg
push
xchg
cli
push
repz
mov
dec
pop
xor
es
arpl
jmp
and
pop
pushf
dec
sti
and
int
lret
gs
jne
cmp
std
mov
sarl
test
sahf
mov
int
xchg
out
push
dec
scas
xchg
inc
aaa
push
ret
pushf
cvtps2pd
mov
pop
jge
lods
sbb
mov
dec
xlat
xchg
sub
sahf
cmp
and
mov
stos
sti
fmul
insl
pop
dec
mov
fidivrl
mov
xor
jae
jnp
xlat
push
inc
xchg
sub
xor
stc
cli
mov
out
out
outsl
and
xor
or
addr16
xchg
xor
xchg
xchg
lock
in
push
arpl
push
sbb
lret
out
fisubrs
iret
push
nop
loop
jns
dec
inc
mov
cmp
hlt
js,pt
cld
mov
divl
sbb
xor
pushf
stos
adc
std
movsb
subb
mov
push
inc
cmc
cmp
les
push
icebp
aaa
pop
xchg
pop
sbb
in
cmc
mov
ficomps
in
lea
leave
adc
or
icebp
test
ss
lods
pop
std
sbb
jg
xor
inc
jecxz
ret
aas
lret
sarl
jns
sub
dec
pop
repnz
in
insl
vorps
dec
stos
movsb
popa
out
jne
sub
cmp
adc
fdivs
insl
pop
in
xchg
mov
mov
lock
or
pop
aaa
test
inc
je
js
pop
and
mov
jno
xor
pushf
xchg
xor
mov
dec
sbb
dec
sbb
adc
mov
xor
orl
xor
subl
or
sub
mov
and
movl
movl
xor
or
sbb
movl
movl
decl
movl
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
je
push
call
xorl
movl
orl
subl
andl
mov
sbb
mov
movl
cmpl
movl
mov
movl
jmp
mov
cmpl
jg
push
push
push
pushl
call
sbb
subl
or
addl
sbb
adc
xorl
movl
cmpl
mov
movl
movl
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
subl
adc
orl
addl
subl
or
movl
subl
movl
movl
movl
sub
movl
or
movl
cmpl
notl
movl
jmp
movzwl
mov
cmpl
jbe
pushl
pushl
pushl
pushl
call
orl
addl
orl
sbb
addl
adcl
movl
dec
movl
sbb
movl
xor
add
mov
and
movl
sub
movl
movl
cmpl
mov
movl
movl
jmp
movl
mov
cmpl
jne
pushl
push
call
xorl
sbbl
and
orl
orl
add
andl
movl
movl
cmpl
movl
movl
jmp
movl
cmpl
jbe
pushl
pushl
push
push
push
call
addl
adc
sbbl
adcl
adcl
movl
cmpl
mov
movl
movl
jmp
movl
cmpl
ja
pushl
pushl
push
call
add
add
sbbl
andl
andl
and
andl
xorl
movzbl
xor
mov
subl
jmp
inc
jb
mov
pushf
pop
add
push
arpl
int
mov
flds
insl
sbb
lret
sbb
mov
out
int3
push
or
inc
repnz
push
dec
sbbb
sarl
inc
mov
fiadds
orl
cmpsl
xchg
mov
mov
and
repnz
sbb
incb
pushf
in
or
mov
pop
jp
xchg
mov
xchg
push
test
sub
dec
sbb
test
pop
jnp
mov
dec
pop
aas
lods
lret
jns
jo
inc
std
mov
call
dec
pop
rolb
adc
add
ljmp
hlt
bound
pusha
sub
adc
cld
pop
add
pop
mov
dec
popa
dec
mov
xor
sub
xchg
push
aam
clc
xlat
cmp
pop
repz
ficompl
xlat
sbb
xor
dec
or
pop
cwtl
hlt
in
das
aad
repz
mov
add
fisubrs
bound
hlt
mov
int
sarl
jnp
xchg
push
push
xrelease
inc
rcrb
call
push
lds
push
test
dec
cltd
fisubrl
sbb
iret
push
adc
jns
es
repz
movsl
jne
jge
es
jg
lds
nop
jle
inc
xchg
rorl
xchg
mov
or
and
les
iret
add
and
xor
pop
add
gs
mov
popf
repnz
xchg
xchg
push
fadds
xor
xchg
or
stos
fistpll
inc
xor
push
mov
mov
xor
or
jmp
cmp
jno
add
sti
push
ret
in
xlat
xchg
add
mov
adc
sbb
pop
lock
adc
pop
jle
repnz
popa
iret
cmp
vmread
outsb
idivb
cmpl
std
mov
jo
loopne
sub
pop
call
jno
lcall
adc
pop
ljmp
lock
push
mov
sub
sbb
fidivs
test
mov
clc
popa
xor
ljmp
in
call
inc
je
insb
pop
jne
iret
adc
cltd
xchg
xchg
fsubp
loopne
loopne
xchg
popf
outsl
in
lea
or
inc
jno
xor
out
lods
inc
or
cmp
add
add
dec
movsb
push
push
push
push
call
xor
mov
mov
cmpl
mov
mov
movl
jmp
mov
cmpl
jl
pushl
call
mov
sbb
xorl
adc
sbb
or
sbb
add
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
push
call
xor
add
adcl
or
adc
subl
and
xor
mov
mov
sub
mov
mov
sub
and
mov
lea
xor
or
mov
sbb
mov
mov
mov
sub
mov
adcl
or
and
movl
mov
addl
or
xorl
xor
cmp
movl
jne
mov
adc
mov
mov
mov
sub
imul
jmp
add
sub
inc
mov
mov
sti
fildll
mov
fwait
or
roll
jg
cmpsb
add
lret
clc
mov
dec
xchg
clc
xchg
inc
add
cmc
insb
fwait
rcrb
xchg
call
adc
push
mov
xor
jne
leave
sub
jmp
daa
jg
xor
add
cs
sub
pop
dec
les
jnp
cmp
jmp
jecxz
jne
pop
dec
mov
mov
lret
inc
add
xorl
gs
or
mov
enter
push
popf
xchg
in
mov
mov
push
sti
mov
pop
out
xchg
push
mov
stc
ljmp
jp
jmp
ret
stos
add
sub
and
sub
xor
test
sub
sbb
jne
fs
int3
in
int3
in
mov
or
or
adc
dec
aas
cli
std
sahf
xchg
or
mov
aas
and
lods
mov
aas
sahf
push
stos
mov
aaa
pop
push
add
cmp
shrl
in
popf
mov
dec
rcll
aas
repnz
rclb
stos
sub
mov
sub
push
mov
fimuls
in
dec
stos
or
jge
push
iret
xchg
mov
or
or
sub
cmp
xor
sarb
xchg
iret
or
pop
mov
mov
add
icebp
sub
out
test
jno
and
pop
into
push
jns
movsl
fcoml
shlb
mov
flds
aad
xor
fmul
hlt
popa
push
rcrl
jo
iret
xchg
pop
fidivl
sahf
call
jne
mov
das
mov
stos
jmp
mov
add
cmp
mov
add
ds
sbb
xchg
sbb
aas
push
and
cltd
scas
jns
insl
insl
cltd
sbb
hlt
xlat
and
mov
movsl
mov
lods
leave
mov
bound
insb
push
cmpsb
pop
fs
cmc
fmull
fs
jp
pop
jno
jmp
fsts
das
cwtl
mov
arpl
push
scas
pop
mov
mov
or
repnz
es
setno
movsb
clc
imul
ret
cmp
xor
push
xchg
cmpsb
popf
mov
xchg
inc
push
gs
xchg
or
ja
fsubl
leave
pop
mov
mov
shrd
addl
shr
andl
mov
andl
mov
subl
shl
xor
xor
or
movl
mov
movl
cmp
jne
cmpl
mov
mov
mov
mov
jmp
movl
movzbl
cmpl
jl
push
call
sub
notl
sbb
sbb
orl
andl
mov
mov
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
call
mov
add
or
add
or
subl
mov
adc
mov
addl
shrd
andl
mov
cmpl
mov
movl
jmp
movl
cmpl
jg
push
pushl
push
call
adc
sbbl
sub
sub
not
and
mov
add
dec
mov
xor
sbbl
shr
xor
mov
movl
xor
or
shl
movzwl
xor
mov
sub
mov
xor
mov
adc
mov
add
mov
add
mov
add
mov
or
mov
neg
shrd
shr
xor
or
mov
add
mov
andl
mov
add
xor
shl
xor
adcl
or
mov
mov
addl
shrd
shr
movzwl
sub
mov
mov
sbb
mov
orl
mov
xorl
xor
xor
sbbl
or
notl
shl
subl
lea
and
mov
notl
mov
movl
shrd
shr
mov
xor
mov
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
push
push
push
call
sub
add
xor
sub
sub
and
movzbl
or
sbb
xor
mov
xor
xor
mov
andl
xor
or
addl
shl
sbbl
imul
xorl
mov
mov
addl
shrd
mov
xor
mov
subl
xor
shr
sbb
mov
movzwl
or
mov
xor
andl
or
orl
shl
andl
sub
movl
mov
mov
cmp
jmp
sbbl
xchg
popf
xchg
mov
jb
or
sarb
fimull
push
out
xchg
lret
push
int
push
and
clc
das
icebp
fsubrp
pop
cmp
mov
xchg
pushf
and
sub
and
jle
sub
fiadds
sbb
jmp
adc
repnz
loope
dec
sahf
arpl
mov
adc
inc
jge
mov
pop
mov
jnp
enter
inc
int
or
aam
push
out
outsl
push
fs
repz
lret
cmp
mov
mov
pop
and
cmp
push
movsb
jecxz
mov
dec
fistps
and
fisubrs
push
les
add
repnz
outsl
mov
xor
xor
leave
shlb
leave
xchg
not
adc
mov
into
mov
pop
test
sti
cwtl
push
ja
rcrb
push
xchg
cmp
lods
movsl
push
pop
fwait
push
cld
fnsave
scas
mov
mov
pop
jp
pop
and
adc
insb
add
movsl
loop
mov
xchg
in
rcr
cli
add
and
cmp
aad
in
push
xor
aam
push
jbe
cli
lahf
xor
jmp
incl
paddq
xor
in
sub
dec
adcl
out
pop
jne
data16
hlt
lret
cmc
jo
pushf
sub
adc
out
cmp
mov
push
sbb
gs
push
mov
fnstsw
mov
mov
sub
test
mov
clc
dec
push
in
loope
gs
movsl
mov
popa
xlat
add
inc
xlat
xchg
insl
cmpsb
pop
nop
push
sti
xor
mov
call
mov
add
cwtl
add
rcrl
test
mov
repz
or
add
cmp
sbb
lds
ret
ds
stc
lea
rcl
pusha
mov
insb
inc
adc
mov
pop
sbb
mov
pop
jne
repnz
ficompl
jl
es
jno
lods
test
stos
jge
das
and
dec
xchg
mov
push
or
ret
xchg
pop
push
in
movsb
js
lcall
repnz
ret
jb
dec
int3
lods
repz
ret
mov
inc
fmuls
outsl
push
mov
add
in
decb
and
aas
add
mov
mov
movl
jg
jmp
pop
sbb
outsl
mov
nop
pushf
jg
fnstsw
mov
outsb
out
and
daa
out
cwtl
pop
out
adc
adc
fwait
xchg
leave
xor
mov
pusha
xchg
mov
std
loope
inc
iret
pop
add
sahf
add
aas
insl
ret
mov
mov
insb
das
adc
jl
jb
bound
jb
jb
jno
xchg
adc
push
hlt
push
enter
pop
fbstp
inc
in
lods
repnz
pop
mov
outsb
jmp
cmp
inc
fdivrs
lret
stos
fisttps
sbb
mov
lock
sahf
dec
loopne
mov
or
aad
jae
xor
int3
or
roll
mov
pop
and
mov
push
outsb
ret
mov
xchg
sahf
xor
mov
jne
lret
push
in
icebp
call
adc
push
add
push
pop
jg
xchg
in
inc
in
lods
or
sahf
mov
sbb
push
js
cld
sbb
repz
add
pop
inc
lret
movsl
jmp
les
iret
rcrb
scas
dec
dec
addr16
enter
fdivs
cmp
out
int3
xor
ds
popa
jae
mov
mov
cmpsl
arpl
mov
adcb
adc
and
inc
fldl
ss
out
pop
jge
out
push
sbb
mov
pop
mov
cmpsl
ljmp
cmp
repz
lds
mov
sub
in
pop
mov
fsubl
lds
push
add
push
lcall
xchg
add
cli
stc
les
push
xor
mov
shrb
sbb
in
pop
mov
xchg
adc
mov
xor
stos
das
movsl
mov
stos
xchg
fs
cmp
xchg
in
mov
dec
fisttpll
inc
dec
testl
xor
popw
pop
add
lret
out
push
subb
ret
sbb
cmc
sbb
sahf
cmpsb
addr16
sbb
leave
in
clc
xorl
in
cli
lret
out
into
add
adc
cwtl
or
mov
cmp
pusha
push
mov
xorl
es
mov
sbb
mov
cltd
fwait
inc
and
lea
jno
mov
lods
roll
movl
jmp
xorl
mov
sbb
jno
aas
pop
xor
mov
dec
inc
dec
mov
cli
cmp
inc
aas
adc
mov
and
pop
add
push
lods
mov
data16
mov
dec
arpl
and
pushf
and
jno
in
jno
mov
es
hlt
mov
pop
xchg
clc
cltd
mov
jmp
fmuls
adc
sbb
gs
sub
lods
aaa
cmc
arpl
clc
cmp
cmc
imul
inc
cmp
sub
lods
xchg
or
sub
xchg
into
jnp
fndisi(8087
les
ss
add
or
rclb
gs
in
insb
push
mov
in
adcl
pop
mov
ljmp
adc
fwait
mov
push
idiv
imul
sti
lahf
mov
inc
cmp
dec
icebp
ret
sub
xor
gs
mov
loope
je
inc
dec
sahf
sbb
fbstp
aas
cltd
push
pop
loop
pop
mov
and
repnz
jns
cmp
inc
jp
mov
jno
mov
jecxz
test
ljmp
lds
mov
and
mov
insb
retw
xchg
pop
pop
into
xlat
fcoml
mov
aam
mov
lods
add
in
inc
scas
negl
aad
xor
mov
hlt
orl
add
scas
popa
fnstsw
sbb
xor
push
nop
inc
jmp
outsl
lcall
mov
mov
push
mov
lret
nop
mov
fwait
mov
jge
push
clc
dec
insb
push
faddl
cmp
inc
pusha
mov
lret
ss
mov
lea
test
pop
xlat
adc
cmpsb
push
enter
ja
lds
ret
in
pop
movsb
sahf
aam
ret
xchg
lock
je
mov
test
and
inc
lea
cltd
lret
add
fdivrs
lcall
jle
lods
jne,pt
js
and
stos
xor
rolb
add
iret
adc
sahf
mov
scas
sbb
xor
adc
fmull
sub
loope
jp
aam
mov
xor
out
push
vsubsd
fwait
aam
mov
dec
loopne
lds
xor
mov
rcrl
dec
sbb
add
jge
xorl
shl
notl
xor
andl
or
shr
cmpl
mov
mov
movl
jmp
mov
cmpl
jg
push
call
sub
adcl
mov
adc
movzbl
xor
mov
mov
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jne
pushl
push
push
call
adcl
neg
mov
mov
sbb
sbbl
movl
mov
addl
mov
mov
orl
shrd
shr
mov
mov
xor
mov
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jbe
pushl
pushl
pushl
push
pushl
pushl
call
subl
sbbl
or
adcl
sub
mov
or
mov
addl
mov
adcl
jmp
cmp
in
jmp
mov
movsl
sti
jecxz
and
dec
jecxz
mov
mov
cmp
and
addr16
pop
jge
pop
jne
flds
dec
push
mov
or
add
ret
popa
sbb
xchg
stc
inc
test
push
add
loopne
cmp
cmp
inc
int3
cs
lods
insb
jle
mov
stc
stc
xchg
call
mov
jp
jmp
dec
mov
mov
mul
or
rcll
mov
and
jmp
push
cmp
pop
mov
mov
addl
xchg
push
pop
mov
xlat
pop
pop
cwtl
loopne
sbb
pop
xorb
test
lret
push
ret
call
lahf
dec
js
add
cli
mov
mov
test
std
add
imul
arpl
add
std
adc
adcl
mov
xor
or
pop
mov
xchg
cmpsl
push
push
inc
hlt
mov
rcr
adc
repz
test
add
mov
inc
adc
cmpsb
stos
xchg
jp
jl
mov
clc
sbb
mov
adc
push
sar
test
jle
call
test
push
mov
arpl
scas
popa
repnz
nop
or
jns
dec
test
mov
dec
bound
xchg
inc
adcb
in
btc
add
mov
inc
fisttpll
imul
fnstcw
add
add
loop
inc
loopne
in
test
xorl
xor
dec
roll
rclb
pop
mov
jge
iret
into
push
add
push
mov
push
inc
jb
jge
and
jno
roll
mov
dec
mov
imulb
xchg
pop
dec
ss
push
mov
mov
es
xor
enter
sub
lcall
aas
imul
ja
jg
xchg
div
mov
sahf
cmc
mov
sbb
out
cmp
sub
aaa
xchg
xchg
jmp
and
jne
scas
or
add
notb
adc
outsb
ss
dec
xchg
or
aam
std
jle
fstps
mov
jnp
fwait
xor
pop
xchg
mov
imul
arpl
es
in
inc
and
lret
outsl
xor
push
in
loop
fwait
inc
mov
inc
mov
aas
add
jmp
out
push
lods
mov
mov
rolb
add
inc
add
push
in
add
arpl
add
loope
imul
addl
sub
movl
jmp
shrd
mov
mov
addl
xor
shl
xor
sbbl
or
shr
cmpl
mov
movl
movl
jmp
movl
cmpl
je
pushl
push
call
movzwl
add
xor
neg
xor
sbb
or
mov
jmp
push
cltd
cmpsb
icebp
lods
cmc
popf
mov
add
mov
or
inc
cwtl
or
scas
lock
xor
lret
dec
cmpsb
jmp
shr
jecxz
mov
test
movsb
aam
imul
xorb
mov
test
push
and
mov
cltd
mov
sbb
cmp
gs
pop
mov
or
adc
fisubrs
push
jae
and
mov
je
sbb
jne,pt
mov
idivb
mov
enter
pop
xor
add
roll
inc
adc
jo
push
aaa
lret
push
imul
mov
cli
push
mov
inc
jae
sarb
dec
iret
insl
inc
inc
add
jl
jl
cmp
cmc
stos
jl
adc
dec
iret
fidivrs
mov
shl
sbb
adc
lcall
repnz
push
aaa
cmc
stc
icebp
inc
dec
bound
aam
stos
testl
loopne
mov
xchg
sub
pop
dec
push
jmp
shll
push
dec
test
int3
or
and
dec
and
ljmp
mov
repz
lods
pop
lea
xchg
and
aam
lock
jb
mov
push
and
jg
adc
inc
jecxz
add
mov
xor
loopne
adc
or
repnz
jmp
jl
sub
pop
mov
adc
inc
cli
jno
push
js
pop
jno
stc
popf
dec
or
dec
stos
fdivr
stos
add
inc
pop
in
push
sub
shrb
pop
iret
jle
bound
push
pop
dec
adc
shrl
hlt
test
out
and
push
adc
or
cli
push
mov
out
mov
mov
mov
add
bound
out
mov
adc
repz
mov
nop
js
jo
adc
fldl
popf
push
push
insl
cltd
clc
mov
sub
sub
js
rclb
iret
push
jle
push
sub
mov
dec
and
xchg
mov
jl
mov
scas
ljmp
xchg
bound
lcall
adc
adc
inc
pop
ret
lds
xchg
add
es
divl
cli
scas
cli
dec
icebp
lret
mov
aas
xchg
ja
leave
das
sbb
scas
mov
push
xor
jne
push
push
xor
sbb
dec
aam
push
add
mov
shrd
addl
shr
or
mov
andl
mov
mov
addl
xor
addl
jmp
pop
dec
dec
jo
je
jae
testl
sti
outsb
lock
mov
mov
inc
xor
mov
sub
mov
sub
adc
cmc
push
push
jae
div
mov
cmpsl
xchg
push
and
mov
loop
push
xor
sbb
xchg
out
push
sub
sbb
jmp
pop
rcrl
fdivl
inc
push
stc
lea
js
xchg
ds
pop
mov
fidivl
lret
loopne
mov
xchg
dec
xchg
int3
push
mov
mov
and
add
loopne
jb
cmp
mov
loope
xchg
rclb
cs
mov
sub
inc
fisubs
into
adc
or
cmp
pop
adc
cmp
shlb
or
or
jecxz
sub
adc
jno
xchg
cmp
mov
mov
cmp
jae
cmp
jo
sbbl
sub
imul
aas
lret
cmp
adc
sbb
rcrb
mov
sarl
aad
push
sbb
add
pop
or
push
pop
stc
mov
je
mov
mov
sub
adc
jmp
fcoms
add
into
push
xchg
xor
mov
into
xchg
jp
clc
and
cmp
jecxz
cmp
das
lret
sbb
mov
mov
pop
sub
and
jno
mov
jns
and
stc
xchg
jg
xchg
inc
icebp
fisubrs
jge
call
stos
mov
mov
aaa
jne
jmp
rclb
and
mov
push
add
xor
lock
mov
lea
mov
push
rorl
fs
repz
movsb
lds
popl
pop
sub
outsb
adc
push
xchg
jp
mov
push
xchg
lea
push
test
ds
ja
mov
adc
cmpsl
je
neg
orl
loopne
and
cmc
jmp
adc
pop
daa
daa
xchg
and
in
xchg
and
cmp
pop
pushl
jge
sbb
mov
sahf
cwtl
lret
mull
ffree
and
xor
mov
jae
or
cwtl
push
jne
cmp
jmp
mov
iret
fidivrl
mov
or
dec
int
in
xchg
stos
mov
das
int3
sub
outsb
js
push
sbb
rorb
push
in
xor
xchg
addl
mov
sbb
or
add
sbb
add
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
push
push
pushl
push
call
xor
or
sbb
mov
sbb
or
subl
mov
mov
or
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
jmp
jecxz
mov
mov
test
xchg
sti
test
mov
mov
aas
pop
cmp
push
adcl
rcrl
jne
out
les
or
mov
gs
adc
mov
loope
outsb
push
mov
pop
or
xchg
dec
dec
movsl
adc
add
fistps
sub
fs
test
add
inc
insl
dec
loopne
mov
mov
loopne
sub
in
jbe
and
test
mov
into
cmp
scas
and
ret
es
and
ds
test
lods
lret
xor
sbb
dec
repnz
movsb
stos
insl
and
clc
fsubr
xchg
bound
xor
into
pusha
add
add
in
and
jbe
adcb
sub
nop
jb
and
mov
lods
xchg
sbb
lret
mov
mov
cmc
dec
mov
cmc
inc
cmp
sub
mov
mov
lods
mov
es
inc
jecxz
mov
mov
and
mov
sti
pushf
mov
cli
call
out
shlb
mov
gs
out
sub
or
ja
xor
call
call
imul
or
js
and
rol
lds
jmp
inc
pop
fstsw
mov
pop
add
push
in
icebp
sbb
push
movsl
mov
push
sbb
xchg
mov
mov
mov
lret
rorl
xchg
hlt
stc
mov
test
cmp
add
pusha
dec
mov
sub
shl
mov
mov
mov
sbb
out
mov
mov
mov
mov
cmp
cmp
fsubs
mov
xchg
push
clc
push
push
mov
es
clc
cmpsb
popa
pushf
pextrw
ja
dec
mov
inc
xchg
pop
cmp
popa
inc
sub
jecxz
dec
stc
xor
push
mov
popf
xor
cwtl
fsubrs
icebp
sahf
shlb
cmc
xchg
xorl
dec
in
jnp
cmc
add
sub
aam
inc
clc
cmp
int
fstpt
xor
or
inc
mov
xor
stos
mov
xlat
minps
xor
lods
enter
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
jmp
in
cli
js
mov
push
or
das
xchg
idivb
mov
sub
ret
xor
inc
inc
or
ss
daa
sub
out
loopne
push
in
xchg
or
jae
cmpsb
lret
cmp
xchg
pop
imul
je
cltd
fcmovnb
pop
ds
xchg
shlb
mov
pop
push
push
stos
mov
int3
imul
push
cmpsl
movups
add
push
and
cmpsl
bound
js
out
in
popa
jecxz
push
and
push
test
in
mov
rcrl
fsubl
sub
xchg
cwtl
add
mov
mov
add
mov
dec
lret
mov
les
xchg
cltd
roll
push
shll
call
mov
shr
pusha
ret
aas
and
jle
jp
les
push
in
mov
add
cmp
pusha
adc
jns
mov
inc
movsl
sahf
push
outsb
mov
pusha
fildll
add
sub
mov
fcompl
jns
cltd
push
mov
pop
xor
cmc
repz
lods
inc
lea
or
mov
ss
leave
lret
push
ds
ss
mov
cmpsb
sub
sub
fsubr
call
adc
push
push
call
loope
pop
xchg
test
out
jbe
pop
jbe
pop
push
pop
jg
les
fidivrs
and
mov
add
mov
or
inc
mov
and
sbb
pop
fdivs
cmp
stc
dec
or
mov
mov
fldln2
lcall
test
ss
cmp
sbb
icebp
push
jp
sarl
lea
ss
mov
cs
cli
sub
sbb
and
dec
ficoml
addr16
dec
cmpsl
idiv
stc
clc
xlat
inc
repz
adc
and
sbb
stos
cwtl
xchg
jae
mov
sub
and
test
dec
jg
jb
mov
insl
adc
jo
ret
nop
inc
out
ret
inc
arpl
decb
repnz
fstpl
mov
test
and
shrl
pop
aad
rorb
fs
pushf
imul
push
mov
cmp
fucomip
outsl
jg
jl
xor
aas
ja
adc
cltd
add
xchg
mov
idivb
xchg
dec
jl
shr
push
pop
ljmp
fnstcw
int
jle
shr
add
xchg
arpl
cli
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
jmp
and
mov
sarb
xor
mov
mov
push
in
fs
movntps
sbb
push
in
pop
mov
fwait
mov
sbb
inc
dec
pop
mov
sbb
push
jb
lds
inc
popf
lods
std
jnp
imul
stos
or
push
push
mov
rcrl
push
les
cmp
test
cmp
inc
lods
std
fisttpl
shll
into
jg
lahf
test
add
sub
pop
xor
push
pusha
das
lret
ficoml
shrd
push
test
lods
ret
mov
and
xchg
cmp
jae
ss
or
adc
inc
arpl
movsl
jno
mov
pop
es
pop
sub
in
sub
adc
cmp
mov
adc
ss
and
cmp
adc
mov
roll
repz
push
imul
dec
sbb
mov
lcall
add
popa
jbe
cmp
mov
cmp
jp
lcall
daa
imul
jmp
and
mov
in
es
popl
loopne
fnstcw
stos
rcrl
jbe
popf
repz
inc
scas
outsl
add
adc
jno
pop
pop
push
push
jns,pn
std
mov
push
adc
sbb
adc
test
and
aad
sahf
add
test
push
and
sbb
inc
aam
adc
subb
add
nop
fldenv
ret
mov
jb
popl
leave
xchg
inc
mov
lods
int3
sbb
shrb
int
imul
cmp
call
loop
push
dec
adc
test
xchg
into
fsubs
sub
pop
ja
clc
imul
jp
pop
mov
aam
fistl
call
push
data16
lcall
daa
push
add
xchg
repnz
jns
sbb
mov
jae
pop
cmpsb
lret
or
ljmp
inc
in
inc
sbb
xchg
add
cmp
mov
jne
xchg
xchg
mov
lahf
pop
mov
jae
mov
fcoms
xorl
or
int3
lret
adc
movsb
push
lds
jbe
stc
into
adc
jle
jb
sbb
js
xchg
sbb
push
in
sub
icebp
ja
mov
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
jmp
push
js
jno
mov
sti
jno
pop
stos
cmp
mov
mov
jnp
add
out
mov
pop
lcall
mov
in
inc
je
pop
movsl
shlb
xor
mov
ficoml
mov
or
mov
decb
pop
fadds
std
inc
rol
int
aaa
fs
adc
inc
pop
xor
addl
mov
and
pop
lods
shlb
flds
xor
ret
sbb
sub
sub
or
scas
sbb
push
and
cs
into
xchg
jb
add
repnz
lock
jbe
sbb
push
sub
daa
test
ss
xor
scas
inc
fwait
div
fmulp
mov
fnstsw
mov
jnp
data16
pop
sbb
xchg
bound
mov
push
mov
pop
mov
rorl
std
fisubl
mov
nop
push
mov
fs
xchg
iret
xor
or
add
sti
mov
gs
hlt
inc
pop
sbb
push
add
scas
or
int
or
out
filds
adc
push
mov
mov
fcom
adc
test
aad
dec
cld
aaa
inc
adc
inc
and
test
sbb
test
adc
lret
out
rcrl
int3
adc
adc
mov
loop
pop
jl
fwait
or
xchg
adc
dec
imul
pop
sahf
push
xlat
rcl
outsl
loop
pop
mov
lret
push
in
ror
add
pop
jno
les
sub
and
fs
imulb
inc
dec
stc
inc
pop
dec
rcrb
outsl
and
fs
jl
shlb
sbb
or
out
mov
outsb
stc
shrl
popa
inc
ljmp
cmc
inc
adc
xor
clc
aam
loop
aad
ja
adc
cmp
mov
mov
rcll
push
jp
inc
imul
or
jae
nop
sar
xchg
cwtl
adc
inc
outsb
insl
mov
pop
xor
fnsetpm(287
mov
cmpsb
addr16
xchg
push
sbb
inc
data16
sbb
mov
leave
jmp
inc
mov
sub
mov
cld
pop
mov
sub
addr16
clc
xchg
in
insl
xor
dec
fsub
push
mov
mov
sbb
sbb
fwait
sbb
adc
aam
mov
outsl
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
jmp
jmp
pop
add
sub
cmp
push
mov
mov
loop
and
dec
xchg
in
and
lret
leave
push
xchg
xchg
or
int
fisttpll
imul
insl
push
pop
loop
jp
hlt
out
pop
mov
cmp
stc
stos
dec
mov
xor
inc
fs
scas
inc
xchg
addr16
loopne
jae
mov
cli
inc
xchg
and
lret
sub
jae
jge
cmp
dec
rcl
xchg
test
dec
lock
stc
push
mov
and
pop
lahf
fcoml
inc
in
jecxz
dec
fsub
fsub
imul
jno
scas
scas
xor
sbb
sbb
inc
das
inc
je
pop
loop
imul
push
mov
nop
cmp
adc
mov
sub
nop
mov
sahf
xchg
xorl
dec
mov
jb
xchg
repnz
xor
and
mov
fbld
mov
arpl
mov
mov
mov
push
imul
out
outsl
pop
mov
movsl
repnz
inc
arpl
rorb
loope
daa
lcall
stc
lcall
out
pop
sub
mov
adc
and
ljmp
add
mov
xchg
addl
lds
pop
test
xor
inc
push
inc
rolb
test
lds
jb
xchg
clc
outsw
inc
or
fimuls
sbb
adc
jecxz
mov
pushf
or
xchg
sahf
push
ja
ret
inc
inc
and
scas
push
bound
mov
mov
add
sbb
pusha
xchg
pop
push
cmp
sbb
lret
adc
int
bound
lcall
jbe
push
xchg
adc
sub
mov
inc
xchg
stc
jne
iret
adc
xchg
fimull
cmp
sti
icebp
add
fdiv
cmp
data16
jl
xchg
dec
sub
ss
bound
outsb
arpl
movaps
test
nop
push
insl
mov
das
push
insb
test
out
xchg
cs
inc
mov
pop
pop
xorl
pop
int3
adc
outsl
adc
inc
pushf
stc
test
or
push
lret
or
sub
or
enter
xlat
subl
insl
lods
leave
out
fdivrl
cltd
sub
movsb
cmp
repz
inc
inc
mov
icebp
cmpsb
mov
push
mov
ljmp
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
jmp
push
push
in
push
jns
in
pop
xor
sbb
or
mov
sbb
loopne
jp
lret
xor
xchg
int3
push
out
push
and
sar
cmp
jl
mov
je
and
out
xchg
popa
sahf
scas
mov
das
adc
jg
insb
xchg
jmp
in
mov
adc
mov
js
cmp
pop
adc
push
add
dec
jg
pushf
out
test
xor
jle
jne
sub
mov
int3
sbb
pop
mov
and
lret
sub
cmp
fs
inc
push
and
jmp
or
adc
lahf
lret
lds
lea
aas
icebp
jp
cld
aad
test
cmp
sub
int3
stos
bound
jb
or
cmp
cltd
cmpsl
cmp
mov
xchg
lds
adcb
adc
jle,pt
ss
sbb
hlt
jne
jmp
push
and
mov
mov
mov
mov
test
jae
int
add
adc
rcrl
jns
enter
imulb
repz
jmp
xchg
ja
dec
lcall
xor
cmp
int3
xchg
je
sarl
xchg
pop
xor
and
fadds
repnz
lea
loope
inc
loope
mov
stc
jmp
fsts
inc
push
out
mov
insb
xchg
push
xor
mov
xor
aaa
push
push
adc
nop
xor
lcall
cmpsb
mov
dec
gs
cmp
lods
sarl
adc
xor
shr
lea
popa
sbb
test
push
cli
adc
aaa
fdivrl
add
std
test
xor
adc
sbb
cmp
push
adc
jle
loope
orl
repnz
xchg
loope
in
fwait
mov
scas
ljmp
inc
inc
xor
in
add
popa
dec
nop
aam
inc
sub
cmpsb
or
syscall
popa
lods
xchg
int
jae
insb
sub
lcall
adc
adc
jmp
scas
pop
inc
or
mull
cmp
cmp
bound
xchg
xchg
test
jecxz
sbbl
outsb
sti
sub
jae
or
fmulp
dec
pop
lods
cmp
sbb
pop
lds
test
push
push
or
jne
dec
call
add
das
ds
fidivs
jmp
add
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
jmp
aas
std
mov
cmp
dec
dec
inc
add
sarb
clc
adc
adc
test
push
mov
aam
ffreep
adc
icebp
xchg
or
lcall
add
lret
inc
in
jle
repz
pop
aad
insl
xor
filds
inc
loop
out
ds
xchg
mov
ljmp
sbb
nop
inc
mov
mov
pop
jns
cmc
adc
je
sbb
lcall
iret
ret
scas
fisubrs
sub
cmpl
push
dec
cltd
and
cmp
pop
hlt
mov
push
mov
rcrl
dec
scas
mov
xlat
fistps
xchg
out
mov
inc
aaa
jb
inc
inc
mov
push
inc
sub
pmulhuw
jno
pushf
stos
test
jg
in
lcall
jge
hlt
xor
fs
cld
cmp
fiadds
js
push
mov
xor
loope
fbstp
xchg
mov
push
icebp
std
push
subb
insl
stos
mov
bound
add
int3
xlat
sub
call
sti
sar
jecxz
mov
dec
jle
pushf
xlat
fs
loopne
inc
test
add
rcll
mov
mov
out
inc
push
pop
insb
ret
pop
insl
xchg
fidivs
subl
pop
dec
mov
sbb
popa
insl
popf
jle
in
fcomp
bound
or
xchg
in
xchg
cltd
stos
and
pop
shrl
int3
jbe
pop
fwait
or
dec
adc
int
jae
jp
jle
xchg
xchg
jne
lods
movsl
cmp
jno
out
hlt
push
jp
mov
inc
jns
push
daa
or
cmp
ror
mov
in
pop
push
adc
adc
mov
cmpsl
icebp
xor
and
popl
sub
and
scas
pop
outsb
push
pop
pop
dec
mov
outsb
ja
mov
jo
dec
pop
mov
int3
mov
ret
jbe
cmp
mov
xchg
xchg
pop
in
pop
or
pop
mov
fists
idiv
dec
lods
or
xor
jbe
fimull
adc
or
pusha
mov
out
xor
outsl
rolb
mov
fsubr
jp
pop
aam
addb
add
aam
lods
scas
push
cmp
jl
imul
insl
jns
xlat
xchg
test
in
sbb
cmc
out
rclb
push
mov
fldcw
xchg
pushf
loopne
ja
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
jmp
fs
das
ja
mov
outsl
aad
inc
les
popa
xor
sbb
mov
sbb
push
and
imul
adc
decl
int3
sub
xchg
xchg
pop
dec
popa
es
sub
mov
pop
call
push
mov
push
inc
lock
mov
int3
adc
jg
lcall
mov
mulb
or
or
mov
xchg
ljmp
repnz
sarl
loopne
mov
mov
inc
sti
push
mov
cmp
out
adc
sahf
sub
std
mov
pushf
popa
pusha
cmpsb
fcoml
mov
xchg
sub
add
mov
and
dec
addl
daa
dec
xchg
inc
fadd
xchg
popf
xchg
lcall
mov
repnz
fidivl
lret
pop
aas
pop
cmp
enter
flds
inc
into
arpl
inc
rcrb
inc
sbb
enter
fs
add
push
sub
sahf
fidivs
xor
enter
add
adc
outsb
cltd
fisubs
mov
dec
aad
mov
les
jnp
jo
xchg
mov
mov
hlt
push
lds
addr16
shlb
and
pop
filds
add
mov
adc
cmc
mov
and
dec
fwait
inc
dec
daa
dec
sub
pushf
jge
and
mov
pop
jnp
pop
xchg
inc
jg
mov
xchg
imul
enter
sub
or
add
dec
push
xor
dec
dec
mov
jbe
loopne
adc
pusha
and
cmc
scas
add
mulb
xor
ret
mov
aam
stos
inc
jmp
dec
push
repnz
ret
and
pop
loop
scas
xor
dec
fnsave
xchg
push
ret
cmp
sbb
push
dec
test
aam
mov
xchg
insb
xchg
lods
sarb
push
repnz
mov
orl
mov
idivl
mov
enter
xchg
shll
nop
cmc
popa
ret
mov
mov
lods
push
fstpt
jecxz
jmp
ret
add
aas
mov
jle
inc
clc
mov
cmp
in
mov
lods
rclb
rorl
outsb
daa
dec
pop
cmp
js
fistps
mov
dec
cs
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
jmp
mov
mov
mov
inc
loope
insl
inc
adc
mov
mov
sub
cmpsl
pop
popa
fsts
dec
stc
dec
mov
popa
and
repz
inc
mov
pop
pop
jno
xchg
test
pop
mov
out
ret
ja
stos
pop
cltd
cmp
and
dec
test
ljmp
mov
ret
int
scas
xchg
sbb
aad
es
adc
ljmp
xchg
scas
inc
pop
cmp
test
in
ret
cmp
enter
cmp
shl
icebp
mov
loop
jo
iret
test
mov
mov
scas
ror
mov
jmp
fwait
and
sub
lea
xchg
rcrl
inc
mov
mov
adc
push
mov
cwtl
xchg
out
xchg
mov
jnp
dec
lret
repz
mov
pop
push
rcl
add
lods
or
add
mov
push
cwtl
inc
pop
add
rolb
lods
xorl
testl
arpl
jg
mov
dec
lods
in
fadd
inc
xor
push
insl
inc
ja
lcall
jbe
push
fisttpll
cwtl
mov
repz
xlat
leave
mov
inc
fldt
jp
push
xchg
cwtl
mov
jmp
in
addr16
adc
stc
scas
sub
mov
push
pop
cs
shl
xchg
cmp
insl
stc
xlat
scas
ficoml
xchg
or
mov
leave
fsubs
insb
int
inc
add
popa
cmc
and
inc
mov
push
adc
fwait
andps
ret
and
jb
daa
or
jg
sbb
daa
mov
push
in
mov
push
in
push
lcall
pop
leave
push
push
aad
lods
in
fistpl
jle
jae
push
loope,pn
sbb
inc
jnp
icebp
inc
inc
ja
pop
mov
lock
xor
inc
out
or
repnz
das
adc
jle
xchg
ror
mov
negb
adc
xchg
dec
sub
xor
mul
or
es
mov
lahf
test
ja
push
push
or
movsl
sbb
std
add
push
fldcw
aad
cs
addr16
aad
inc
xor
mov
mov
lods
stos
add
xlat
jnp
jns
cmp
cmp
xchg
jmp
mov
sarb
xchg
inc
pop
movntq
jne
xor
mov
mov
xor
jmp
enter
xor
fdivrs
xchg
fldenv
xor
ja
and
mov
mov
pop
mov
and
pop
outsb
scas
in
mov
inc
lahf
dec
sub
dec
and
adc
sbb
in
dec
and
cmp
in
aaa
sbb
xchg
addl
loopne
pop
sbb
sbb
push
insb
jno
movsl
inc
sbb
xchg
dec
fcoml
pop
rol
shlb
ffree
mov
leave
jmp
bound
push
xor
xor
jle
sbb
sub
fstpl
xchg
push
push
mov
xor
iret
pop
js
outsb
add
movsl
xchg
xchg
addr16
hlt
pop
jno
fs
mov
xchg
insb
stos
sti
fwait
mov
jl
test
xchg
mov
cltd
push
mov
sbb
xor
pop
lock
add
cltd
int3
cmc
test
lock
cmp
dec
lret
inc
stc
test
iret
push
push
enter
sbb
jbe
ret
lcall
jmp
in
mov
cmp
into
inc
mov
in
cwtl
add
push
inc
lock
and
sbb
jge
push
push
jno
xor
ljmp
subb
rolb
jle
scas
mov
clc
data16
mov
sahf
test
pop
push
and
add
dec
mov
jne
pop
mov
das
mov
cmp
sbb
stc
daa
jmp
cld
dec
push
inc
cld
sahf
adc
dec
xchg
pop
cs
inc
jns
scas
popa
loope
lcall
or
in
addr16
sbb
mov
push
xchg
mulb
imul
jg
sbb
not
pop
dec
lret
adc
xorps
in
popa
inc
rolb
out
clc
mov
xor
scas
stc
test
call
sub
xchg
cltd
out
iret
and
xchg
push
mov
sahf
enter
and
mov
adc
cmp
aaa
lds
das
cs
mov
or
xor
sub
jmp
xchg
mov
fxam
adc
jmp
std
jl
jae
jbe
mov
push
lret
repz
xchg
mov
xchg
shl
test
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
jmp
xchg
cmp
mov
scas
out
cmp
popf
sar
cmp
mov
mov
out
in
gs
adc
je
dec
cwtl
lock
adc
cmpl
loope
cmp
imulb
int
jb
stos
test
add
push
je
gs
dec
adc
popf
xchg
in
cmpsl
das
lods
mov
jbe
lods
inc
jge
xor
add
xchg
std
scas
and
mov
fdivr
push
push
mov
hlt
hlt
out
push
push
das
cltd
xor
ret
jns
sbb
xor
add
lahf
mov
jnp
lret
push
pop
test
lods
lds
pop
xor
aam
fistl
cwtl
push
lds
mov
xchg
adc
xchg
cmp
inc
fldl
clc
std
out
mov
cli
push
and
shrb
movsb
sbb
lcall
gs
movsb
dec
dec
pop
cli
aas
rclb
xor
in
arpl
xlat
xor
xchg
lock
pop
outsb
arpl
or
push
and
or
mov
or
imul
sub
outsl
enter
test
cmp
pop
loopne
xchg
hlt
xor
cmp
hlt
scas
or
mov
push
lock
xor
leave
adc
mov
push
incl
shll
int
add
stos
xor
sti
repz
mov
aas
sub
ja
insb
xor
sub
fnstcw
pop
filds
dec
dec
cmpsl
hlt
jno
pop
and
movsb
and
inc
inc
insl
mov
gs
dec
push
stos
or
xchg
outsl
lea
pop
pop
or
mov
data16
in
repnz
outsb
dec
lahf
xor
stos
mov
dec
fistpll
addr16
mov
adc
orb
xchg
add
lahf
pop
aaa
aas
aas
ja
mov
dec
adc
dec
lret
and
mov
shl
movsb
mov
mov
add
loopne
adc
sbb
pop
pusha
movsl
imul
xor
and
ljmp
mov
bound
lock
aam
adc
aad
repnz
popa
mov
fldt
push
lret
fisubrs
mov
rcr
xor
sbb
mov
pop
or
jbe
push
cld
xor
dec
fsubs
push
or
xchg
loop
movsb
ret
loopne
mov
or
xor
or
xor
xor
mov
mov
jmp
mov
scas
movsb
scas
lods
cltd
cmp
mov
rdtsc
inc
sub
mov
lret
adc
adc
fxch
ja
add
insl
jno
je
int3
sub
popa
jo,pt
imul
cwtl
or
fs
aaa
das
ret
add
jno
dec
daa
mov
jge
popl
stc
arpl
mov
push
popf
repz
mov
addr16
pop
jne
mov
push
arpl
mov
std
bound
ffreep
aam
mov
inc
cltd
pushf
dec
pop
mov
imul
dec
outsb
hlt
scas
daa
xor
pop
pop
push
mov
mov
inc
fsubrl
fs
shrb
sbb
aad
push
cmpb
aad
mov
data16
cmc
fwait
mov
stc
dec
movsb
mov
cs
pusha
mov
fisubrl
cmp
push
divb
lods
inc
and
sub
jle
adc
add
push
push
icebp
lds
lods
test
lea
inc
lahf
lods
popa
pop
cld
jns
mov
out
mov
ja
jbe
and
push
movsb
adc
sbb
mov
mov
outsb
dec
cs
xlat
fnstsw
repnz
stc
iret
fst
adc
cmp
ret
jmp
fcoms
rcr
rclb
int3
push
stc
xchg
imul
mov
jl
push
adc
pusha
adc
adc
jne
enter
hlt
fstl
add
filds
push
adc
mov
sbb
test
test
xchg
mov
sub
pusha
test
fistpll
hlt
cs
mov
push
mov
sar
pop
pushf
pushf
sub
daa
xchg
xor
jo
push
push
and
add
jg
sub
call
inc
stos
jmp
adc
jecxz
pop
into
cltd
outsl
push
das
xchg
pop
fcomi
or
out
lea
sub
mov
lahf
stos
and
push
orl
add
nop
push
imul
andb
or
sbb
das
repz
loop
jl
sub
aam
pop
in
mov
or
dec
hlt
pop
adc
mov
xchg
cs
xchg
cmp
push
jle
jl
sbb
rorb
pop
aaa
arpl
notl
inc
popa
pop
les
int3
mov
int3
xor
lahf
stos
ljmp
fwait
in
dec
pop
and
ja
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
jmp
cltd
add
popf
popf
add
mov
das
pop
cs
mov
mov
scas
and
imul
pushf
mov
popf
mov
pop
xchg
ret
adcl
push
fsubrs
in
cmpsb
rcrb
or
inc
rorl
xchg
push
lahf
lret
out
sbb
jnp
push
jecxz
ds
jmp
testb
pop
push
aaa
sub
and
imul
gs
mov
pop
add
dec
dec
or
mov
ret
pop
lds
cli
xor
push
lcall
pop
divl
lcall
in
test
mov
ds
push
inc
add
cld
fisttpll
insl
mov
sub
aad
xchg
cmp
push
add
mov
outsl
lods
push
dec
test
fisubrs
mov
scas
push
int
std
js
daa
cmp
dec
int3
popa
fcmovnbe
into
sbb
xor
cmpb
add
addr16
cwtl
pop
push
nop
jecxz
sbb
mov
imul
adc
clc
pop
push
inc
adc
jge
push
insl
and
or
outsb
mov
pop
fcompl
mov
das
mov
out
jne
mov
bound
scas
mov
sbb
andb
jnp
sub
add
jns
daa
mov
enter
lods
lea
dec
popf
or
popa
rcrb
mov
pop
sub
push
mov
jae
fildl
add
in
repz
bound
and
push
imul
pop
inc
jecxz
adc
repnz
push
ss
inc
outsb
adc
push
add
bound
pop
inc
push
ja
sti
ja
iret
shlb
add
push
xor
sahf
shr
inc
sbb
xlat
rcll
shlb
jp
popa
fstl
les
icebp
cwtl
cs
mov
push
jecxz
in
notb
and
addl
mov
jbe
insb
popl
push
add
mov
pop
and
scas
mov
sub
lods
or
sub
add
sbb
out
push
mov
dec
arpl
stos
scas
mov
popa
ja
test
mov
xchg
call
lods
and
mov
jo
mov
pop
mov
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jmp
adc
out
or
test
xor
mov
mov
aaa
in
dec
push
xchg
in
add
sbb
movsb
outsb
lock
pop
jecxz
and
xchg
and
inc
mov
push
cli
ss
xlat
inc
mov
adc
mov
mov
and
jp
scas
int
jae
inc
adc
in
incl
sub
ds
mov
dec
mov
xchg
mov
lods
lods
add
out
jmp
mov
call
clc
cmp
mov
fs
push
pop
push
in
mov
rcr
out
inc
int3
lock
mov
sti
loope,pt
pusha
sahf
cmp
xchg
xlat
push
sbb
or
je
mov
loope
stos
inc
ret
and
addr16
out
and
push
mov
in
jb
sbb
inc
stc
pop
fsubs
ds
sub
jb
outsb
mov
shr
fldenv
sub
dec
mov
imull
int
or
hlt
fwait
sub
out
xlat
repnz
xor
jb
lahf
sbb
mov
and
mov
sti
iret
icebp
ret
mov
std
push
sbb
cli
sub
xchg
jecxz
aas
scas
mov
jecxz
cmp
add
mov
cs
mov
mov
loopne
add
stc
cmp
dec
cmc
or
mov
mov
fisttps
sbb
mov
lods
jg
aad
dec
mov
lods
jmp
adcb
jbe
mov
movsl
mov
jge
jo
mov
je
icebp
push
cmc
or
xchg
fstl
mov
icebp
pop
mov
jmp
enter
movb
movsl
xchg
or
push
xor
adc
pusha
pop
movsb
cmp
jg
in
mov
xchg
fst
out
cld
jl
cwtl
adc
cli
popf
sbb
inc
int
pop
call
mov
jmp
sbb
incb
xor
pusha
add
add
nop
xor
mov
ja
sbb
push
push
add
cs
dec
cwtl
clc
aas
or
and
mov
mov
or
je
vfrczss
popf
adc
jae
movl
cmp
jae
addl
shrd
shr
ret
sub
mov
andl
xor
movl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
mov
not
movl
movl
jmp
mov
cmpl
jae
push
push
push
call
add
mov
sub
sbb
movzbl
xor
xorl
negl
push
adc
push
movl
cmpl
mov
mov
notl
jmp
mov
cmpl
jne
push
call
sbbl
movzbl
and
mov
and
addl
sbbl
sub
cmpl
notl
movl
movl
jmp
mov
cmpl
jl
push
pushl
pushl
push
pushl
push
push
call
and
inc
sbbl
movzwl
adc
sbbl
orl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jge
push
push
call
and
mov
mov
sub
and
andl
sbb
mov
and
mov
or
jmp
les
mov
out
bound
js
pushl
cmp
mov
jno
sarb
mov
mov
aas
adc
popf
subb
mov
je
pop
xlat
mov
cmc
cmp
shll
mov
cs
lea
mov
mov
ss
stos
fstpt
pop
mov
in
test
pop
dec
ja
cmpsl
inc
movsb
adc
mov
neg
test
imul
loopne
daa
mov
stos
mov
cwtl
int
pop
iret
lcall
cmpsb
dec
or
adc
inc
mov
push
add
xchg
iret
adc
hlt
fsts
dec
imulb
mov
pop
push
inc
les
popf
and
xor
and
es
ja
inc
sub
lret
push
sub
dec
rclb
pop
fsubrp
push
xor
cltd
inc
xchg
sbb
push
movsl
push
xchg
sub
sbb
jns
xbegin
pop
jo
shrb
aad
sub
fmulp
popa
add
mov
out
lds
outsl
sbb
jns
push
jp
cmpsl
and
and
es
pop
loope
jbe
mov
jnp
adc
mov
rolb
xchg
mov
adc
mov
ja
in
ds
addr16
sub
les
imul
sahf
addr16
insb
sbb
out
test
push
mov
ret
and
push
arpl
sbb
inc
adc
dec
dec
hlt
pushl
pop
jne
mov
gs
hlt
mov
and
mov
mov
cmp
rcl
mov
out
xchg
xchg
or
rorb
aam
inc
sbb
mov
push
push
out
cltd
jp
aaa
or
pop
aad
adc
xchg
sub
or
mov
sbbb
fs
lret
mov
pop
sbb
inc
mov
sbb
insl
in
or
and
cmp
mov
movsb
fwait
andb
xchg
xlat
mov
or
or
add
xor
mov
and
lods
adc
scas
adc
test
adc
jmp
out
data16
mov
ret
mov
cmp
jg
mov
push
mov
icebp
push
repz
clc
mov
popf
mov
sbb
movl
mov
and
movl
andl
mov
adcl
mov
or
decl
and
mov
mov
sub
imul
sub
mov
xor
or
mov
adc
movl
xor
movl
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
je
push
push
pushl
pushl
push
call
and
sub
mov
mov
adc
sub
sbbl
xor
sbb
movl
mov
sub
mov
sbbl
jmp
jmp
sub
sub
xor
fmuls
repz
cmp
mov
sbb
enter
montmul
cmpsb
subl
jle
insl
xchg
pop
adc
mov
nop
sti
loopne
gs
xorb
jmp
inc
lods
dec
sub
jno
pop
insl
mov
jge
mov
idivb
push
fstl
stc
insl
scas
lods
dec
mov
insb
scas
ljmp
icebp
loopne
jmp
jge
jg
popf
cmp
jbe
fidivs
mov
jo
and
push
push
jae
sbb
inc
adc
or
push
daa
mov
jl
inc
rcll
inc
or
movsb
inc
mov
lock
aad
aad
jg
cmp
fs
enter
xor
mov
fstpt
sbb
lcall
add
inc
xor
or
and
test
or
sub
xchg
cmp
movsb
sbb
adc
jmp
pop
negb
jmp
ret
pop
aad
push
cmp
push
sbb
jbe
idivl
mov
gs
xor
test
mov
dec
arpl
lock
sub
jno
or
and
mov
rcl
dec
cmp
cmp
sbb
mov
and
xchg
and
inc
ja
xchg
xorb
out
loope
outsb
insb
dec
aam
popf
and
ds
gs
cs
into
sub
jg
pop
mov
or
mov
mov
sub
fsts
xor
movsb
push
mov
pop
mov
loopne
jmp
sub
or
scas
std
mov
out
mov
shrl
mov
repnz
sbb
dec
incl
fsubrs
mov
addr16
xor
sub
dec
test
jne
loop
in
adc
sub
adc
xor
xor
mov
cmp
xchg
stc
push
lock
test
movsl
loope
lock
mov
jecxz
cmp
jmp
jnp
fs
test
stos
mov
int
xchg
leave
mov
add
sub
outsl
inc
jge
enter
add
sbb
pop
out
sbb
mov
xor
adc
mov
in
sub
data16
mov
xchg
shr
adcl
and
cmpl
movl
movl
movzwl
jmp
movl
mov
cmpl
jg
push
call
add
sub
or
or
xorl
or
movzwl
or
mov
xor
div
mov
xor
sub
mov
div
mov
cmp
je
mov
mov
mov
mov
movzwl
mov
add
mov
and
mov
add
movzwl
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
movzwl
jmp
sub
push
adc
insl
inc
insb
fcom
sti
sub
mov
fwait
sbb
add
sti
push
and
cmp
mov
inc
sub
pop
pop
push
dec
cltd
lret
movsl
lcall
jecxz
or
mov
push
cli
fxch
inc
int
dec
adc
fimull
mov
pop
dec
push
and
pop
dec
shrb
movsb
ss
pop
lahf
shrl
pop
out
jl
pusha
xorb
orb
push
dec
xchg
cwtl
jl
xor
sti
sbb
mov
push
int3
dec
aam
popa
inc
xor
jne
adc
push
addr16
adc
aas
cli
xchg
mov
pop
pop
sbb
arpl
iret
mov
imul
loope
mov
out
movsl
loopne
adc
daa
icebp
sbb
xchg
jae
push
xchg
mov
lea
pop
mov
add
sub
inc
and
xor
aam
shll
popf
js
fnstsw
inc
adc
xlat
js
push
xor
mov
xchg
xchg
xor
adc
xchg
mov
fnsave
stc
inc
cmp
in
push
lcall
aas
out
jmp
loop
add
mov
insb
ret
cmp
fs
lods
stos
lds
out
push
push
lods
ret
xor
mov
push
xlat
mov
lods
negb
xor
jne
enter
mov
outsb
mov
sub
dec
test
jno
pop
mov
sbb
out
into
out
ret
adc
cwtl
fdiv
mov
push
sbb
push
mov
jg
test
addl
or
dec
lea
in
pop
sbb
aam
jp
pop
daa
lcall
push
mov
in
xchg
fcmovbe
pop
addr16
ret
aam
into
xchg
pop
shl
loop
xchg
lret
push
movsl
jns
lret
sub
js
mov
inc
repnz
mov
daa
adc
xor
ret
cmpsb
iret
mov
sub
mov
les
fcoml
std
cli
jl
in
lret
out
mov
aad
inc
mov
jp
mov
xor
cmp
add
clc
jmp
adc
insl
sbb
mov
cs
flds
pop
fwait
xor
mov
inc
xchg
jge
call
push
jg
sbb
add
or
cltd
pop
idiv
mov
cmp
jb
movzbl
mov
imul
and
or
mov
mov
cmp
jne
mov
mov
shrd
shr
mov
jmp
in
movsb
push
mov
cmp
sti
lret
ljmp
stos
mov
mov
sbb
push
sub
mov
outsb
mov
call
mov
imul
push
in
shlb
or
inc
rcll
popa
mov
xlat
jmp
xchg
sub
push
lea
daa
es
mov
in
mov
sub
call
cli
pop
sbb
and
test
sub
outsl
popa
addr16
fiadds
outsb
pop
movsb
hlt
sbb
mov
sbb
and
sub
cmp
sbb
call
xchg
push
or
out
mov
mov
mov
movsl
aaa
mov
leave
fucomi
xchg
mov
mov
rolb
dec
out
fimull
in
pop
mov
daa
add
or
scas
ficoml
out
sub
insl
aas
fs
imul
sub
dec
rorl
add
mov
stos
push
xchg
cmpsl
cmpl
mov
mov
mov
push
call
idivl
mov
adcl
add
call
xchg
sbb
ret
lods
neg
hlt
xor
cmp
dec
aam
gs
jmp
xlat
fisubrl
fistpll
outsl
push
iret
mov
dec
pusha
jae
dec
and
xor
jbe
inc
sub
cwtl
out
sub
insl
cmp
xor
imul
cmpsl
or
out
sub
shl
mov
lock
add
cli
mov
scas
sub
mov
div
push
scas
cmpsl
movsb
fisttpl
xchg
lret
xchg
sbb
mov
push
divb
xor
in
dec
fbld
mov
inc
fs
fistpll
jo
cmpsl
jecxz
icebp
std
adc
daa
inc
push
scas
leave
mov
subb
and
fsub
je
xchg
int
pop
inc
mov
xor
fs
out
xorl
aas
xchg
xchg
mov
cmpsb
sbb
xchg
sbb
outsb
js
add
mov
cmc
cmpb
mov
push
in
aam
mov
sub
mov
jb
mov
cmp
adc
movhps
adc
test
mov
mov
and
addr16
xchg
push
mov
mov
xor
mov
xor
or
mov
mov
mov
shrd
jmp
push
arpl
sbb
cmp
push
mov
mov
sahf
int3
div
mov
xchg
sub
and
add
push
aam
mov
mov
inc
inc
aaa
sub
loop
push
sbb
les
adc
inc
add
icebp
loopw
adc
jno
in
cli
jno
mov
xchg
mov
or
adc
into
xchg
mov
add
jo
dec
pop
or
push
and
in
jbe
sbb
jo
out
adc
sbb
cmp
and
sub
sbb
shlb
rcrb
cltd
inc
sbb
xchg
push
mov
jne
or
add
aam
mov
mov
mov
bound
aam
and
pop
and
adc
loopne,pn
mov
mov
sub
and
hlt
push
fsubrs
pop
sub
push
jg
aaa
adc
adc
inc
jns
dec
sbb
das
add
outsb
or
hlt
inc
ret
xor
mov
push
dec
loop
sahf
mov
add
cmc
repz
and
jb
leave
ja
loopne
jecxz
clc
push
sbb
add
or
cmp
add
shll
int
sbb
push
call
idivl
sub
inc
outsl
xchg
mov
clc
test
stos
jae
frstor
loope
ret
push
nop
mov
into
push
arpl
mov
jg
rcll
xlat
bound
arpl
mov
addb
inc
push
push
or
faddp
pop
stos
cmpl
xchg
xlat
mov
ret
lock
lcall
shl
ja
into
push
fstpl
mov
sbb
loop
repnz
in
pandn
je
push
xchg
arpl
cmp
scas
xchg
cld
lods
fcmovbe
lock
sbb
cmp
in
jl
mov
jge
std
les
loop
sti
xchg
je
shrl
xchg
and
cmp
sbb
inc
std
aaa
dec
in
sbb
or
dec
dec
aam
or
dec
jge
push
dec
inc
pop
ret
inc
adc
add
test
push
je
jp
ds
sbb
insb
leave
inc
cmc
shr
mov
mov
xor
xor
or
mov
movl
movl
mov
shl
mov
mov
sub
jmp
gs
pop
mov
mov
xchg
inc
into
jno
inc
loopne
xor
push
mov
mov
and
jo
or
sbb
pop
sbb
test
daa
ljmp
add
out
iret
cmp
add
pop
les
rcrb
jge
push
mov
sbbb
push
outsl
imul
test
js
lock
sbb
and
ds
pusha
ret
jmp
ret
insb
cmp
movsb
jnp
bswap
sub
aaa
mov
shll
and
aaa
jnp
in
imul
fmull
xchg
xchg
cmpsl
jmp
push
es
mov
hlt
dec
sbb
aam
shll
mov
inc
or
fistl
sub
jae
outsb
push
lods
adc
icebp
mov
inc
inc
aas
sbb
fcompl
or
shll
jbe
vmwrite
mov
jae
jp
loop
rcll
mov
adc
mov
xor
inc
clc
and
mov
cmpsl
outsl
xor
and
dec
std
xchg
add
xchg
into
lret
lea
adc
shll
pop
punpckhwd
xorb
fs
mov
sub
mov
rcr
cltd
int
pop
out
sahf
fiadds
cmp
cwtl
mov
xchg
hlt
add
or
lret
xchg
fwait
andb
test
lcall
jo
cmp
sbb
cmp
mov
fmul
mov
xlat
pop
rol
sub
addr16
xlat
ret
test
mov
jb
je
mov
jo
jbe
push
cmp
pop
fcoms
iret
push
daa
pop
ds
scas
out
aad
or
mov
inc
je
lcall
in
shr
scas
xor
xchg
imul
xor
xlat
jnp
mov
adc
push
mov
push
pusha
mov
insl
mov
sbb
or
jae
mov
movsb
sbb
and
loopne
sbb
arpl
lods
push
jb
xchg
int3
cs
cli
cli
test
pop
loopne
leave
mov
sbb
xor
test
and
mov
push
dec
and
mov
dec
mov
lea
scas
dec
pop
cld
ljmp
into
in
jne
stos
or
mov
xor
into
add
mov
push
mov
push
sbb
push
push
call
mov
mov
jmp
hlt
mov
jae
ja
mov
mov
cmp
push
mov
mov
adc
lock
les
inc
iret
add
sub
jg
xor
jae
jmp
pushf
out
cmp
rcr
ds
mov
jne
xchg
cmpsl
xchg
cwtl
push
daa
sbb
inc
sub
sbb
and
les
outsb
mov
lock
mov
push
popl
pop
or
sti
push
sub
push
call
inc
sbb
enter
dec
xchg
jge,pn
mov
push
into
add
aaa
loop
out
fisttps
clc
stc
and
mov
pop
push
push
add
mov
rcl
daa
mov
add
lret
mov
shlb
xchg
pusha
sbb
js
lahf
jp
popf
and
into
mov
pop
xchg
les
add
mov
inc
jp
push
cld
rcll
xor
dec
std
int
push
jl
xor
dec
aas
jp
ds
push
into
aas
xor
ja
icebp
pushf
arpl
sti
push
or
cwtl
ffree
stos
jae
pop
popf
jae
sub
cld
jle
pop
sarl
xor
xor
cli
fsub
divb
addl
cmp
js
sbb
mov
in
clc
fcomps
push
cmc
daa
mov
sbb
rolb
add
dec
or
xchg
popa
xchg
dec
dec
movsl
cs
add
ds
or
add
and
pop
jae
ret
add
lds
out
bound
movsb
movsb
pushf
cmp
mov
mov
adc
jecxz
bswap
popf
js
pop
rcrl
mov
sub
pop
mov
or
mov
mov
and
mov
mov
clc
add
das
mov
mov
fisubrl
xor
test
add
les
jg
das
pop
mov
pushf
out
push
ret
sub
mov
mov
iret
dec
jle
inc
xchg
rcll
inc
xchg
mov
lods
out
iret
ret
fisubrl
cli
fbld
mov
lea
outsb
dec
lcall
sbb
pop
loop
push
into
insl
add
sbb
or
loopne
xchg
pushl
enter
fwait
imul
cs
nop
pop
cli
mov
inc
psadbw
in
jbe
mov
addl
add
push
or
or
push
push
call
mov
mov
movl
movl
movl
movl
mov
mov
push
add
push
adc
push
push
call
mov
mov
and
and
mov
mov
and
mov
and
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
shl
or
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
sub
xor
add
add
or
push
add
push
movl
movl
movl
movl
mov
mov
mov
xor
and
or
mov
sub
mov
lea
xor
mov
div
mov
mov
push
imul
imul
xor
jmp
lock
lds
dec
sub
add
in
mov
adc
push
jne
add
sub
push
das
imul
pop
cmp
out
sbb
inc
dec
xor
scas
outsb
push
mov
or
and
sbb
je
dec
lcall
dec
adc
mov
mov
sub
adc
sbbb
pop
mov
sarl
or
sbb
cltd
arpl
pusha
testb
int3
insl
pop
rolb
out
xchg
mov
jg
js
mov
jmp
loope
repz
notl
inc
repz
ss
cld
enter
mov
push
or
or
sub
adc
xorl
inc
jmp
sahf
mov
aaa
jno
scas
and
sti
sbb
subb
xchg
rcl
popa
scas
pop
sub
xchg
call
rorl
jns
ja
in
lret
scas
mov
sarl
add
jne
shll
xlat
pop
push
jmp
ds
jp
mov
xchg
xor
lea
jl
daa
cli
stos
lods
xor
dec
xor
enter
jle
cltd
mov
adc
std
sub
push
lods
enter
sub
in
test
loope
insb
cmp
enter
and
lock
xor
sub
add
add
inc
xor
adc
enter
or
xorl
jnp
cwtl
jae
mov
sbb
cmp
sub
xor
sti
mov
sbb
shrb
orl
movsl
lcall
or
add
imulb
cmp
cli
push
in
mov
sub
cwtl
nop
cmpsb
adc
fld
fisubrl
shl
jecxz
insb
adc
lock
and
adc
imul
enter
mov
gs
adc
cmp
sahf
mov
cs
and
sbb
xchg
stos
lds
xchg
and
icebp
fwait
cli
arpl
in
mov
lods
loopne
mov
inc
push
xor
xor
push
pusha
icebp
pop
inc
xchg
dec
loopne
in
or
dec
fistpll
pop
fimull
sbb
push
pop
aam
lea
and
push
cld
adc
cmc
xorb
aam
and
sbb
jae
dec
cmp
or
dec
ja
pop
xchg
icebp
jae
or
lcall
in
sbb
and
stc
jmp
mov
ficoml
ds
dec
push
inc
mov
inc
mov
dec
test
ss
les
push
mov
ljmp
sbb
ja
out
aaa
sti
pop
je
sbb
jg
mov
lea
mov
or
nop
sbb
pop
xor
lods
mov
movsl
div
mov
mov
sub
mov
mov
mov
mov
imul
and
xor
add
xor
add
mov
xor
xor
pop
jmp
ja
scas
test
fldenv
mov
das
sti
fs
mov
inc
push
add
push
cmp
ret
out
pop
push
vpand
mov
inc
adc
sbb
xor
jge
sub
mov
ret
icebp
imul
insl
dec
shrl
adc
and
mulb
or
popf
loop
or
mov
bswap
fs
js
mov
jo
xchg
push
xchg
sub
xchg
leave
dec
shlb
xor
sarl
shl
sbb
insb
and
lahf
aam
jle
bound
lcall
dec
mov
jmp
sub
cltd
xchg
sub
subb
mov
add
cld
clc
cmpl
and
mov
adc
mov
mov
mov
push
ss
mov
jo
jle
xchg
adc
adc
rcrl
cmp
xchg
jne
pop
movsl
out
iret
mov
sbb
call
adc
and
sub
xor
cmp
insl
fistpll
cld
imul
jmp
sti
int
ljmp
mov
and
dec
or
mov
dec
addb
lods
xchg
mov
mov
push
sub
ds
call
dec
fidivl
push
inc
lahf
nop
outsl
xchg
das
fmuls
lock
lock
push
cmc
loopne
rorl
sub
mov
out
mov
pop
mov
mov
dec
xchg
notl
das
sub
push
outsl
je
into
or
jmp
movsl
add
xchg
sub
ret
push
push
or
popa
or
inc
ljmp
fsubrs
mov
and
jle
pop
clc
cmc
xor
xchg
add
sub
das
or
sti
lcall
mov
xchg
movsb
mov
lcall
cli
xor
mov
imul
pop
add
daa
scas
sahf
push
movsl
cmpl
mov
sub
push
sbb
jno
repnz
cmp
sbbb
adc
aas
mov
fisubrs
gs
jg
push
ss
dec
ljmp
fidivs
push
repnz
push
fs
cli
adc
or
mov
pop
add
mov
mov
mov
mov
jle
sub
add
ficoms
add
pop
and
loopne
push
push
test
or
filds
movsb
pop
aam
in
in
lods
push
fs
xchg
addl
inc
xchg
pop
mov
rcl
lcall
pop
adc
fistps
aas
movsb
cli
push
push
pop
cmpsb
pop
xchg
xor
inc
or
insl
mov
inc
icebp
ret
mov
mov
inc
xchg
test
popa
lock
pop
pop
div
mov
shr
imul
sub
xor
cmp
jb
movl
movl
movl
movl
movl
mov
mov
or
mov
or
mov
sub
mov
add
or
mov
mov
add
and
xor
div
mov
xor
xor
or
xor
cmp
jae
push
movl
xor
movl
movl
movl
mov
mov
div
mov
mov
mov
sub
add
imul
xor
jmp
jmp
fdivr
stc
stc
jmp
mov
sbb
cmp
lds
add
xor
push
inc
push
inc
cltd
mov
sti
std
xchg
xor
and
push
ja
pop
aam
or
out
add
ss
pop
adc
int3
jle
lea
in
fiaddl
lcall
lock
add
mov
inc
cmp
adc
ud1
sbb
mov
imul
popa
or
mov
xor
sbb
loopne
push
loopne
add
inc
and
shlb
jl
mov
hlt
jp
push
mov
outsl
or
dec
push
sub
push
mov
xor
std
adc
sahf
outsl
dec
ret
imul
je
sub
ficoms
clc
dec
adc
js
ljmp
mov
mov
shll
adc
in
lret
out
filds
enter
push
std
sbb
popa
loopne
mov
add
enter
pop
inc
loopne
call
ficoml
ja
fldt
pop
shlb
rcrl
sub
jne
movb
jne
mov
insb
inc
repz
stos
push
cmp
cs
xchg
fisttpll
dec
fdiv
in
jmp
cltd
je
lret
push
jmp
pop
cmp
pop
dec
inc
imul
adc
clc
outsb
mov
push
or
loope
repz
push
sbb
pop
cmc
adc
daa
or
sbb
xchg
sub
jle
mov
cmc
out
iret
mov
push
pop
test
nop
sub
mov
movsl
outsl
scas
insb
add
dec
pop
push
aam
dec
push
lahf
dec
clc
add
aas
and
stc
xchg
stos
ficoms
inc
fsubs
sbb
popf
bound
jecxz
and
mov
lock
push
lahf
ss
dec
add
lcall
fs
sub
pusha
dec
ss
andl
mov
out
xchg
mov
ja
jns
xchg
dec
mov
jne
popa
fstpt
cmp
jae
ret
pusha
in
push
test
outsb
push
cli
push
in
inc
push
xchg
loope
and
cmc
test
negb
lret
fsubl
sub
pop
cmp
dec
xor
sahf
or
or
mov
lret
cmp
mov
sbb
lods
xor
jg
rorb
js
daa
div
icebp
dec
pushf
imul
in
clc
add
dec
mov
mov
sub
rol
xchg
lahf
or
orl
out
mov
lret
mov
and
add
sbb
je
add
daa
cli
sbb
push
sub
fistl
mov
push
or
inc
jnp
push
jle
das
fbld
inc
aad
rorb
adc
mov
xor
sub
mov
div
mov
xor
div
mov
imul
mov
mov
sub
mov
mov
mov
mov
mov
jmp
jl
cli
cmp
inc
add
inc
jo
mov
add
or
mov
cwtl
dec
adc
xor
xor
adc
mov
xchg
sub
jmp
js
or
jl
adc
leave
fbstp
in
insb
out
insb
call
sbb
loopne
cmpl
into
in
testl
and
loop
and
adc
mov
dec
lahf
aad
push
mov
mov
addr16
adc
popa
mov
int
adcl
sbb
adc
repnz
fistl
imul
push
dec
jl
adc
mov
in
mov
inc
or
push
pop
leave
bound
dec
adc
ss
roll
daa
insb
push
fnstenv
ret
fs
nop
cmp
jle
into
ljmp
lds
std
pop
and
cmp
xlat
inc
stc
jne
repnz
ds
xchg
out
repnz
fistpl
and
in
jbe
dec
and
mov
mov
aam
int
outsb
sub
lcall
mov
pop
stos
es
outsb
push
adc
in
and
shr
popa
lods
orb
scas
mov
mov
or
push
mov
in
loope,pt
sub
pop
mov
adc
inc
sbb
add
dec
jl
fdivl
jnp
popa
lock
insl
and
push
push
mov
frstor
or
arpl
xchg
std
add
or
sbb
testl
lret
mov
movsb
fcoml
xchg
out
popa
fwait
cmpsb
jl
call
nop
jg
lods
mov
or
xchg
inc
imul
outsl
int
inc
pop
or
shrl
mov
fldl
and
or
test
mov
mov
ficoms
add
mov
subb
sbb
and
icebp
jl
cli
or
pop
cmp
mov
lret
filds
pushf
and
es
in
int
mov
xchg
js
mov
pop
das
add
sbb
jae
outsb
aam
sbb
lcall
jmp
popl
pop
hlt
xchg
mov
sub
inc
ret
push
cmpsl
push
add
sub
out
fstpl
push
mov
inc
lods
test
jbe
arpl
scas
repnz
xor
lods
lret
imulb
outsl
dec
pop
stos
push
aad
sub
aam
ss
imul
mov
es
or
xor
fsub
aam
mov
and
lret
fnstsw
loope
in
fldenv
ds
add
mov
outsl
ret
sti
sub
mulb
cmpsb
jno
cld
and
lahf
mov
mov
scas
push
adc
frstor
push
xlat
and
add
and
mov
xor
imul
mov
jmp
add
mov
mov
das
adc
jno
jb
mov
rorl
inc
popa
int3
cmpsb
aad
xchg
cmp
lods
imul
ja
mov
push
dec
cmpl
xchg
into
sub
push
fisubl
dec
sub
mov
sbb
sarb
sbb
xor
daa
inc
pop
int3
fcomps
or
sub
test
sub
pop
ja
sahf
jecxz
jbe
andb
jmp
fisttpll
test
ret
cmpsb
clc
dec
adc
pop
sub
inc
xchg
pushf
ss
adc
or
xchg
inc
jle
push
push
out
hlt
pop
movsb
call
aam
movntps
fadds
enter
mov
mull
popa
faddl
mov
mov
adc
cmc
loop
test
pop
mov
mov
pop
sub
out
mov
xor
stos
aaa
xor
push
movsb
sub
dec
dec
mov
cwtl
mov
fldenv
fwait
jp
add
arpl
pop
fidivs
stc
stos
add
inc
ficompl
loope
pop
mov
and
mov
sub
call
scas
aas
sub
or
insb
icebp
imul
pop
ds
push
int
pop
dec
aam
int
icebp
mov
or
mov
rolb
rcl
icebp
out
sub
movsb
ss
iret
cmp
jmp
rorb
fwait
cmc
aad
sbb
xchg
js
rcll
icebp
fiaddl
repnz
notb
loop
popl
adc
and
mov
jl
add
push
sti
test
sarb
pop
stos
aas
or
and
cs
inc
insb
popa
sub
cmp
popf
xchg
dec
out
leave
fs
push
cli
insl
push
push
lret
sub
aaa
adc
loop
adcl
sub
addl
mov
xlat
jmp
sbb
cmpl
mov
lock
dec
repnz
pop
std
push
inc
int3
in
jb
inc
jmp
jmp
stos
or
repnz
popf
mov
sub
shlb
and
xchg
aam
mov
sbb
push
mov
pushf
sbbl
fisubl
mov
arpl
out
bt
jns
gs
xor
xchg
and
imull
fimuls
aam
pop
lret
xchg
add
fs
xchg
or
sub
xchg
xchg
inc
cmpsb
inc
mov
test
addr16
clc
cmpsl
xchg
or
cmp
loopne
xchg
orl
out
mov
sbb
push
divb
mov
adc
cli
xor
fbld
lret
std
out
fnstcw
dec
xchg
xchg
aas
rcll
push
dec
insb
jmp
cwtl
pop
nop
mov
add
xchg
mov
aad
sbb
and
pop
pushf
out
dec
mov
mov
jnp
mov
xor
or
dec
jbe
pop
rolb
sub
add
mov
mov
add
and
xor
div
xor
or
xor
cmp
jb
pop
movl
jmp
and
subb
mov
enter
ret
jl
mov
imul
lahf
sbb
loop
push
pop
push
jmp
xor
or
and
dec
aaa
xor
imul
jne
push
jne
push
push
das
pop
and
ljmp
leave
add
cmp
lret
mov
imul
sbb
je
push
jg
sub
cmp
and
leave
adc
dec
inc
push
lock
cmpl
inc
orl
mov
mov
imull
xor
pop
in
mov
add
cmp
lahf
or
adc
add
mov
addr16
mov
lret
push
push
insb
shrb
jmp
xor
sub
cmpsl
shlb
stc
mov
nop
pop
aas
dec
push
mov
sbb
xchg
and
add
mov
sub
jl
aam
fld
pop
pop
addl
push
mov
pop
push
dec
mov
xor
rclb
dec
pop
shll
das
xorb
or
push
jae
neg
imul
push
loopne,pt
call
adc
adc
ss
sbb
inc
pop
out
fcom
shrl
out
imull
fstl
mov
dec
stos
popa
pop
or
clc
jmp
push
pop
fnstenv
jp
icebp
push
xor
cmpsl
mov
mov
insl
dec
pop
cwtl
pop
std
push
sbb
aas
orb
push
sbbl
push
lods
insl
sahf
jp
rcrl
ljmp
xchg
jmp
lock
sub
loope
daa
pmaxub
cmpsl
sub
jnp
rcrl
add
xor
sbbb
mov
in
mov
fldl
mov
out
sbb
mov
aas
pcmpgtw
test
sahf
lds
iret
bound
xorb
and
pop
aad
dec
xchg
add
xchg
dec
xchg
add
and
inc
inc
mov
cmp
pop
or
xchg
stos
fcmovbe
movsl
add
add
ja
adc
pop
xchg
xor
mov
xchg
cmpsb
cld
jno
mov
mov
shrl
push
sbb
fmull
cmp
or
jmp
xor
dec
mov
xchg
cmc
sbb
loop
pushf
mov
add
mov
lcall
aad
dec
sub
aaa
cmp
jns
aaa
cmpsl
arpl
add
pusha
into
bound
pusha
push
int3
jmp
xor
push
mov
or
lret
jmp
ja
sub
pop
cmp
xor
jne
or
mov
hlt
fwait
push
movsb
inc
aam
mov
sub
jl
pushf
push
mov
shlb
fmull
setb
test
sub
cwtl
push
push
ret
mov
push
idivl
push
ror
imul
ss
mov
mov
or
mov
or
add
mov
or
mov
xor
xor
movl
mov
mov
or
imul
mov
mov
imul
xor
xor
or
xor
mov
sub
mov
jmp
mov
sub
sub
scas
out
cmp
jle
mov
shrl
push
mov
push
notb
fadds
es
and
xchg
test
sub
aad
popf
pushf
xchg
jg
test
push
adc
adc
cmp
push
outsb
add
jb
imul
jmp
push
test
lret
orl
shrb
cmp
in
inc
mov
out
dec
jne
test
lds
inc
imul
sub
add
inc
aam
fldcw
push
sub
sub
sub
aad
mov
lret
adc
jns
out
int3
out
shlb
xor
mov
jno
in
jge
cmpsl
push
js
jmp
sub
cltd
faddl
cmp
push
and
jbe
scas
inc
daa
xchg
je
xor
xchg
mov
or
subb
lea
mov
sbb
ja
das
cltd
aaa
ret
fmulp
leave
test
pop
pop
mov
loope
push
fnsave
xchg
push
add
sbb
mov
xor
insl
dec
repnz
test
inc
into
aad
ds
aad
jl
out
ror
add
ficoms
mov
mov
push
daa
add
push
or
lret
add
pop
loop
or
repnz
ret
push
out
mov
and
imulb
lahf
js
stos
dec
add
scas
and
cmp
mov
xchg
outsb
pop
sub
imul
test
and
test
int3
sbb
mov
or
inc
and
jae
sbb
ret
in
sbb
movsl
jp
call
fst
div
pop
jmp
test
cld
dec
fucomi
push
sub
sti
out
inc
xchg
out
lea
cmpsb
addr16
clc
mov
sbb
pop
arpl
shrl
fcmovnb
aam
ror
mov
in
push
jno
pushf
adc
sbb
xchg
mov
lods
lcall
in
adc
push
decl
adc
movsl
scas
icebp
push
sbb
adc
lea
imul
call
mov
and
cli
outsl
cmp
inc
test
test
xor
cld
in
adc
and
mov
jnp
and
je
inc
js
add
push
js
dec
cmpsb
xchg
das
or
adc
adc
jle
inc
jg
xor
dec
mov
mov
push
arpl
movl
icebp
shl
xor
xchg
data16
repz
pop
dec
insb
sub
movb
pop
ja
loopne
enter
push
push
sbb
int
xor
jne
test
lea
xchg
inc
jb
aad
sub
or
adc
cmp
cli
cmp
mov
mov
mov
or
xor
sbb
adc
sub
mov
mov
xor
sub
mov
mov
mov
mov
mov
imul
and
mov
sub
lea
mov
jmp
fnstenv
subb
dec
sbb
adc
std
das
filds
mov
push
sbb
sub
xchg
inc
push
pop
movsl
lcall
or
test
std
adc
pop
lret
add
aam
cmp
mov
sub
lcall
push
jns
mov
data16
fimull
jbe
inc
and
xor
jae
or
mov
lock
or
lcall
xchg
and
fcomps
dec
out
inc
jge
fsubrs
int
push
pop
repz
xchg
and
in
sub
stos
push
dec
push
ljmp
mov
sbb
adc
jle
mov
daa
jge
mov
adc
cs
int
lock
movsl
or
cmp
mov
cmpsb
jns
fisubs
or
jmp
out
xchg
push
shl
hlt
inc
mov
jns
lock
cs
xchg
lret
xchg
pop
hlt
xchg
aas
xor
add
sub
and
xor
cltd
sti
aad
adc
mov
dec
dec
popf
pop
inc
mov
fxam
test
aas
mov
push
inc
loopne
mov
dec
outsb
or
adcl
jae
sbb
fs
sbb
dec
dec
jmp
adc
test
imul
add
push
add
jno
push
imul
mov
mov
sbb
jnp
loop
add
add
inc
push
adc
cmp
push
push
cmp
xchg
xor
push
push
mov
cld
stc
in
sub
mov
pop
or
enter
icebp
int3
ret
jmp
or
imul
or
add
inc
xor
adc
push
or
sbb
xor
inc
ja
push
lahf
xorl
adc
cmp
sub
xor
push
testl
inc
rclb
pushl
std
jg
js
mov
push
shlb
xor
dec
leave
sarl
xchg
out
inc
orb
jnp
xchg
fs
mov
ja
test
push
into
mov
adc
inc
sub
xchg
popf
fwait
inc
push
sbb
dec
add
fxch
jl
cmpsl
cltd
push
cltd
sub
adcl
sub
rolb
adcl
ret
push
sahf
insb
je
testb
dec
mov
repz
inc
push
std
xor
ret
xchg
shufps
shll
pop
iret
dec
or
mov
inc
jg
pop
fcoml
xor
mov
jbe
xor
fbstp
mov
les
test
lahf
in
inc
loope
add
mov
lods
insl
mov
jecxz
mov
lock
fnstcw
push
dec
int
push
and
leave
jle
or
leave
out
pop
test
out
pop
mov
lret
pop
add
sub
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
and
or
mov
mov
or
imul
imul
mov
lea
mov
movl
mov
mov
shr
and
mov
and
xor
div
mov
xor
xor
lea
mov
movl
mov
mov
jmp
movsl
jmp
add
jl
scas
cmp
or
mov
push
mov
lods
cmpb
lret
inc
push
scas
sub
jge
enter
xor
lahf
and
sbb
adc
sbb
xorl
inc
int3
movl
shrb
ss
push
and
jg
xor
stos
push
push
mov
or
jmp
pop
and
ljmp
inc
imul
stos
pop
insl
mov
sbb
sub
call
jl
adc
add
adc
imul
fs
aas
xchg
xchg
leave
or
ret
pop
mov
mov
xchg
jbe
lret
clc
inc
icebp
in
addr16
lahf
xchg
inc
xchg
mov
cmp
lea
cmc
cwtl
push
pop
fimull
lcall
or
add
rclb
sub
inc
cltd
jecxz
cmc
aas
mov
jle
dec
mov
mov
call
jns
jbe
pop
cltd
in
dec
rorb
je
and
cs
xchg
adc
outsb
insl
or
pop
cmp
push
mov
mov
pop
sbb
push
cmp
out
lods
ret
mov
jmp
mov
fsubr
mov
cmpsl
mov
or
or
dec
and
fcomi
xor
pop
jae
pusha
out
xor
pop
pop
ljmp
pop
in
jg
mov
mov
lret
or
mov
mov
fistpl
mov
mov
sti
jmp
jge
sbb
lcall
subl
inc
pop
int3
add
loop
fsts
xchg
loopne
movsb
mov
pop
or
imul
or
add
lcall
xchg
repz
sbb
inc
fbld
stos
push
and
daa
sarl
push
dec
mov
fiaddl
pop
mov
lret
out
mov
icebp
mov
aaa
mov
stc
xchg
lahf
inc
adc
pusha
sbb
xchg
cltd
push
cmp
pop
in
jbe
or
xchg
jns
psubw
insl
ja
sub
and
inc
std
mov
lcall
jmp
nop
cmp
jmp
pop
les
dec
push
push
leave
add
dec
outsl
xchg
mov
inc
rcll
stos
push
pop
cmp
inc
push
movsb
stos
and
into
fstpt
ret
mov
gs
outsl
lcall
out
add
cld
pusha
jmp
std
adc
rclb
mov
loop
das
hlt
adc
pop
mov
fbstp
aam
mov
push
pop
push
incb
outsl
xor
mov
lds
jecxz
jb
out
xor
push
subb
and
test
addr16
inc
pop
jge
inc
inc
les
mov
test
fadds
adc
loopne
daa
enter
sarl
mov
and
in
imull
out
xchg
adc
lods
cmpsl
jae
into
jb
test
test
pop
mov
js
xor
mov
add
mov
xor
and
sub
mov
mov
mov
xor
shr
and
add
mov
mov
mov
imul
mov
sub
and
imul
and
sub
mov
movl
movl
jmp
jne
arpl
ja
jge
in
daa
cmc
cmp
aas
jno
xchg
mov
mov
add
arpl
imul
cltd
daa
adc
xchg
inc
xor
lds
mov
push
or
jmp
stos
pop
pop
sahf
xchg
aas
push
mov
xchg
mov
bound
rclb
sub
add
mov
pop
xor
loope
arpl
xor
pop
xlat
out
push
xorb
adc
addb
idivl
and
outsl
rcrl
add
fistpll
repz
add
inc
sbb
jae
jo
ss
jno
mov
les
pop
adc
lahf
fnstsw
pop
add
lahf
adc
ror
aad
ss
mov
movsb
and
jmp
inc
xlat
push
cld
jp
loop
xchg
loope
fs
xchg
inc
sbb
mov
repnz
std
lret
outsb
loop
mov
sbbl
shll
popf
pop
xchg
cmpsb
mov
inc
mov
jmp
fs
scas
mov
hlt
xchg
pop
pop
xor
mov
xchg
test
cmpsb
lods
lret
xor
xchg
and
loop
lret
adc
xor
cmp
cs
into
ret
pop
lods
mov
out
faddl
movb
fs
xchg
out
xchg
mov
lret
lcall
mov
test
imul
shll
fcom
pusha
and
cmpsb
imul
jbe
ss
movsb
xchg
popa
insb
push
iret
repnz
lods
dec
pop
frstor
pop
mov
xor
mov
std
andl
inc
cmc
insb
pop
xchg
enter
add
or
cmp
xchg
pushf
int
mov
cli
cwtl
mov
fistps
outsl
add
mov
insb
sub
in
mul
aad
jge
icebp
call
mov
xchg
lea
pop
imul
into
lea
push
popa
xchg
jnp
cmp
mov
push
mov
push
inc
leave
jno
jae
fisubs
add
xorl
jmp
mov
fdivrs
jp
adc
ljmp
lret
dec
mov
setp
outsl
or
enter
test
outsl
jbe
xor
xlat
call
outsb
xor
cmp
cli
popa
xchg
and
xchg
arpl
xadd
sar
xor
or
mov
xor
add
ds
xlat
lahf
mov
in
repnz
jl
inc
push
nop
ficoms
outsl
or
push
decb
stos
push
lret
sbb
jge
or
into
inc
pop
fidivrs
inc
xor
jl
outsl
outsb
fsubl
jecxz
inc
iret
mov
out
lds
je
sbb
fdivs
inc
xor
fbstp
data16
cmc
aam
sbb
and
cmp
xchg
sbb
mov
int3
jp
push
enter
stos
loop
jp
pop
and
outsb
xchg
outsb
dec
int3
mov
jp
mov
rol
mov
repz
dec
or
push
push
movsl
imul
fsubrp
adc
sub
mov
mov
and
mov
or
and
mov
sub
mov
sub
mov
sub
mov
movl
mov
jmp
push
jnp
cmpsl
addr16
stos
loopne
sbb
mov
mov
lock
dec
and
xor
dec
cmp
cli
fimull
cld
mov
popf
aad
adc
stos
sub
mov
sbbl
inc
cmp
ja
jp
mov
and
insl
enter
cmpsl
push
sub
cmpsb
xor
jae
inc
pushf
mov
cmpsl
fwait
push
ret
lcall
in
outsb
stos
inc
gs
shll
and
push
xor
sbb
mov
sbb
mov
cwtl
pop
inc
mov
icebp
stos
pop
mov
adc
xchg
test
jb
or
push
cmp
decl
adcl
mov
sub
and
pop
pop
mov
xor
popa
mov
xchg
mov
pop
jne
pop
mov
mov
adc
int3
ret
push
inc
cli
mov
xchg
rclb
movsb
or
stc
icebp
popf
inc
ja
or
or
and
sahf
shll
xchg
out
mov
jmp
int
jecxz
or
dec
sub
outsb
sub
stos
mov
and
adc
cmp
leave
mov
cs
sbb
push
inc
mov
mov
adc
and
out
lock
dec
lret
xchg
enter
jle
add
mov
cmp
dec
push
es
jne
loope
scas
stc
mov
sbb
mov
ja
push
mov
inc
aas
cs
ret
jb
enter
or
or
aam
dec
mov
repnz
xor
and
fists
test
adc
inc
pushf
pop
xor
addl
lcall
push
inc
cmp
xchg
add
jmp
adc
and
inc
scas
aaa
fidivrs
scas
pushf
pop
adc
or
xlat
pop
mov
jno
cmp
insl
cmpsl
inc
or
jbe
nop
or
stos
div
cwtl
lock
or
loope
popa
mov
movsb
and
aaa
lahf
dec
pushf
cmp
dec
sub
sti
push
pop
lds
cmp
ljmp
inc
cmp
cmp
fistl
adc
fsubs
outsl
ja,pt
ljmp
cmp
cmp
fst
xchg
mov
ret
int
sbb
shrb
js
and
mov
mov
cmc
jb
inc
in
cltd
std
push
jb
jmp
test
aam
vmovdqa
push
repz
out
jg
test
inc
and
xor
gs
cmc
les
pop
mov
std
shll
mov
mov
cmc
cltd
or
jp
adc
mov
cmp
push
enter
faddl
test
fsubp
sbb
mov
into
loopne
in
call
fbstp
sbb
mov
call
pop
adc
imulb
repnz
jns
push
lahf
xor
movsb
sarl
pop
mov
or
add
div
mov
sub
mov
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
push
add
push
adc
push
push
call
push
jmp
mov
mov
outsl
pop
fdivrp
or
mov
mov
sbb
jae
jno
add
cmpsl
fwait
sub
in
out
shrb
jno
lods
push
dec
dec
push
mov
pop
add
out
and
mov
push
and
mov
push
testb
and
jg
cwtl
cmc
mov
popa
adcb
daa
add
popf
push
jae
mov
mov
out
mov
loopne
mov
sarl
scas
mov
adc
mov
in
insl
fstl
dec
int
rcrl
jp
dec
aad
test
dec
dec
sub
loopne
and
orb
les
les
adc
cs
cltd
cmp
cld
xchg
sbb
and
sahf
pop
xchg
dec
imul
clc
and
imul
dec
faddp
rcrb
pop
sub
pop
mov
mov
fld
clc
pop
fnstsw
xchg
xabort
rcrl
jb
in
sbb
jae
mov
mov
sub
sub
cwtl
jle
mov
or
dec
mov
mov
outsb
lods
xor
jne
das
sbb
xchg
mov
and
xchg
cmp
jmp
arpl
cmpsb
dec
fs
adc
inc
sub
out
lock
cmp
pop
mov
cmpsb
stc
mov
insl
xorl
cmp
fdivrl
loope
cmpsb
rorb
lret
mov
hlt
xor
roll
push
sbb
cmp
lret
pop
test
mov
pop
inc
and
jmp
inc
jge
push
sub
not
scas
mov
mov
and
jmp
adc
inc
push
push
or
daa
jb
and
adcb
fwait
movsb
add
dec
xchg
loopne
xchg
push
int
idiv
pop
daa
add
sbb
push
inc
imul
aaa
dec
data16
icebp
mov
cmp
jno
dec
cmp
repnz
xorb
and
adc
fdivr
mov
hlt
cmpb
push
sub
mov
out
mov
popf
mov
shll
enter
loop
and
push
push
test
jmp
pop
pop
pop
sub
lods
xor
xor
mov
in
mov
xchg
in
mov
dec
lahf
in
lret
lods
mov
lret
je
mov
and
add
pushf
movsl
es
fiaddl
in
lcall
jns
outsb
jmp
popa
imul
dec
xor
ret
outsb
repz
data16
add
mull
sti
mov
call
das
mov
enter
icebp
out
push
rorb
jb
sub
out
dec
and
add
or
push
in
js
push
sbb
xchg
in
sbb
pop
stos
push
xor
mov
adc
or
ret
ljmp
ja
sbb
dec
mov
lcall
clc
push
fidivrl
mov
inc
push
out
xor
fists
mov
mov
test
add
push
adc
push
push
call
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
xor
div
mov
mov
push
pop
add
and
xor
xor
or
mov
mov
imul
mov
imul
mov
or
xor
div
add
mov
mov
imul
mov
add
xor
mov
xor
lea
push
mov
mov
or
add
push
mov
xor
mov
or
xor
mov
mov
or
xor
add
push
mov
or
lea
call
mov
xor
sub
cmp
jne
mov
mov
or
mov
mov
or
mov
or
lea
lea
push
mov
or
imul
mov
xor
sub
push
add
jmp
dec
xchg
cmp
mov
pop
inc
cmpsl
stc
sar
mov
lds
add
jb
mov
push
push
and
aam
out
xor
jns
push
add
inc
push
mov
or
xor
pop
jns
cs
cwtl
jecxz
out
and
or
cmpsl
adc
jne
or
add
pop
filds
popa
sti
call
mov
data16
hlt
push
inc
adc
push
jg
ds
ret
js
das
or
push
das
lret
dec
stos
pop
hlt
repz
push
xchg
push
ja
push
xor
inc
test
mov
inc
cmp
es
xor
fsubl
daa
movsl
cmpsl
jne
loope
fldl
mov
adc
das
pop
sub
jecxz
sti
lds
xchg
inc
es
xor
inc
pop
out
sti
lods
pop
jae
popf
xchg
setp
repnz
jl
jnp
lods
add
mov
lcall
arpl
sbbl
push
or
cmpsb
jnp
in
pop
add
ror
xor
mov
mov
add
movsl
shlb
dec
inc
pop
sbb
and
pop
imul
mov
jle
ss
cmc
sbb
add
push
dec
cmp
pop
pop
lahf
lea
roll
mov
jnp
loopne
pop
jl
jnp
jp
xchg
popf
dec
addl
mov
ja
lods
fistps
sub
and
or
jp
fmuls
cmp
inc
out
aam
rolb
fs
mov
insb
cmp
jg
ljmp
pusha
lods
push
cmp
mov
stos
cmp
xor
aaa
pop
push
add
jp
fstl
out
jb
test
pop
xchg
cmp
mov
sbb
inc
jns
jbe
scas
add
sub
mov
xchg
es
movsb
push
popf
leave
rcrb
cmc
dec
shll
cmp
mov
shll
test
push
sub
sub
clc
jp
mov
cmp
sub
xor
or
idivb
loop
inc
add
outsb
jb
mov
xchg
mov
cmp
rclb
ret
rorb
jnp
out
lods
gs
pushf
cld
lock
sbb
push
mov
fsubl
xchg
push
push
mov
adc
popa
inc
fisttpll
stos
add
outsl
test
sbb
fsub
inc
lods
sti
sti
cli
vmaxss
pop
icebp
fists
in
imul
lods
mov
adc
mov
mov
xchg
out
cld
adc
and
mov
cwtl
adc
cmp
mov
pushl
mov
mov
pop
lea
pop
repnz
test
inc
adc
push
push
lahf
add
mov
xchg
and
call
lds
dec
push
dec
dec
stc
cmpb
nop
and
xor
cmp
aas
pop
mov
cmc
inc
cwtl
aaa
mov
push
popa
jno
ds
les
ret
sbb
icebp
sub
test
arpl
lods
jno
call
jo
ret
sub
sahf
push
mov
mov
xor
sub
xor
mov
div
mov
mov
sub
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
jmp
aas
or
mov
pop
hlt
mov
add
lds
adc
mov
jne
stos
insb
cld
cmp
push
mov
aaa
ret
cs
sub
test
cmpb
es
imul
xor
imulb
mov
inc
imul
pop
test
sarl
cltd
ret
rcr
mov
bnd
inc
insb
imul
inc
mov
in
jnp
sbb
dec
test
or
inc
jno
or
int
out
pop
test
outsl
fldt
mov
movhps
mov
and
mov
mov
cmp
sbb
scas
cmpsb
cld
sbb
pusha
cwtl
in
jns
inc
popf
andb
jp
dec
hlt
popa
push
jnp
js
jo
popf
fnstcw
cld
push
xchg
leave
jae
scas
xor
cmc
sub
xor
lret
out
rcrl
jns
mov
aaa
dec
cmc
push
gs
data16
push
fiadds
xchg
lcall
es
shll
push
scas
dec
in
rorb
jne
fsubrs
dec
inc
aas
push
invd
lea
push
mov
call
adc
add
idiv
add
les
adc
ficomps
or
mov
stos
lret
cmpsl
inc
cltd
out
divl
stc
xchg
pusha
vpsubusw
ds
call
pop
fsub
mov
xor
jl
ficomps
push
xchg
lahf
inc
mov
xchg
mov
mov
or
in
data16
cmp
mulb
fcomp
outsl
push
pop
xor
push
mov
cltd
lahf
nop
aam
out
cmpsl
jecxz
jg
in
inc
jnp
insl
push
vmaxpd
pusha
and
je
jnp
mov
outsb
stc
push
outsl
mov
loopne
inc
call
imul
mov
pop
add
outsb
stos
fidivl
imul
lods
lret
sbb
mov
jae
fsubr
jbe
pop
pusha
popa
out
aas
test
rcl
pavgw
mov
mov
jae
mov
out
xor
loopne
pop
daa
fimuls
loopne
loopne
push
mov
dec
inc
dec
daa
mov
ficoml
xchg
and
cmp
rcrl
dec
pop
cs
xlat
clc
jno
sti
jae
rorb
test
aad
ljmp
call
dec
fisttpll
mov
dec
divl
shll
lock
js
add
insl
faddl
xlat
subl
push
pop
and
sbb
mov
adc
sbb
ja
rcr
mov
adc
mov
jbe
add
cmp
jecxz
dec
shrb
jne
lock
mov
shlb
sbb
mov
and
inc
push
jae
xchg
js
ljmp
and
inc
lock
lock
aaa
push
pop
xor
xchg
test
inc
push
lahf
push
fwait
push
les
aam
dec
sbb
mov
mov
iret
outsb
dec
fwait
scas
or
cld
jmp
psllw
jno
pop
stos
cmp
mov
mov
or
out
mov
repnz
pusha
sub
inc
outsl
outsl
movsl
clc
fistps
inc
mov
and
jnp
push
pop
movsb
sub
test
int
inc
outsb
stos
push
icebp
mov
sub
sub
in
fisubl
in
xchg
aas
ljmp
sbb
pusha
mov
stos
cmp
xchg
gs
ds
xchg
push
fsubs
and
outsl
jns
movsl
push
jle
jp
shlb
pop
fs
and
stc
shll
push
jbe
pop
or
lret
push
mov
mov
xchg
in
stos
int3
add
mov
pop
jno
pop
dec
xchg
sti
movq
push
mov
cmpsb
pop
mov
mov
push
movsb
or
repnz
lahf
js
cmpsl
int
pusha
fs
mov
jg
test
mov
enter
pop
xor
scas
orl
test
ss
pop
das
inc
gs
xorb
sbb
stc
sbb
imul
add
pop
loop
push
popf
push
adc
lods
orb
movsl
loope
mov
and
fwait
jecxz
inc
push
xchg
xchg
out
sbb
inc
sub
add
add
or
dec
mov
jb
roll
es
cmp
cld
add
subps
and
xchg
clc
cld
jmp
addr16
insl
and
out
enter
out
sbb
ds
je
lcall
fisubl
je
sub
cmp
mov
ljmp
push
xlat
rolb
mov
or
sub
cmp
or
and
iret
stos
insl
mov
insl
mov
adc
addr16
push
jecxz
push
or
in
in
lods
xchg
cmp
sbb
rolb
outsb
out
xchg
mov
inc
aam
cmp
stos
jg
add
ljmp
mov
cli
out
sub
lods
jmp
test
fucom
mov
subl
push
add
mov
int
int3
xchg
aas
inc
xchg
sub
arpl
jbe
push
push
int3
rcrb
movsb
imul
pop
mov
daa
shll
leave
sbb
dec
rclb
mov
jbe
aas
fwait
pop
loope
mov
scas
fistpll
xor
jnp
aaa
mov
xor
sub
dec
shrb
arpl
cmpsl
loope
dec
out
and
cs
sub
mov
popa
add
mov
push
xor
cs
sub
shl
mov
pop
and
std
popa
push
dec
orl
lret
aam
push
loop
in
mov
add
fldcw
sbb
das
adcb
add
mov
push
mov
or
ror
pushf
and
sub
mov
cld
pop
rorl
sub
push
mov
mov
testl
cltd
icebp
mov
rcll
rcl
jnp
lret
mov
and
push
inc
sbb
loope
aam
push
pop
mov
add
jle
mov
daa
lock
mov
pop
xchg
mov
dec
out
stos
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
jmp
lea
mov
mov
pop
inc
jmp
mov
mov
add
and
inc
sbb
add
repz
mov
inc
add
inc
aam
rcr
mov
dec
in
out
mov
adc
stc
cs
sub
xchg
in
lcall
fwait
insl
pushf
jbe
sub
popl
jns
mov
enter
xchg
jbe
stos
pushf
aam
inc
js
xchg
fwait
push
dec
aas
movl
lea
mov
add
inc
dec
nop
add
cs
rcrl
mov
dec
cmpl
mov
subb
fwait
and
ficoms
jne
fsubp
sahf
jmp
adc
adc
cwtl
lahf
xlat
and
add
cmp
dec
xchg
inc
in
mov
jns
dec
mov
lock
push
mov
add
inc
xchg
push
pmaxub
sti
or
pusha
mov
add
adc
lahf
pop
fcoms
xchg
call
adc
ss
push
cs
pop
mov
or
inc
add
std
dec
dec
mov
sti
pop
jae
push
pop
mov
dec
mov
pop
fcomps
and
mov
insb
dec
das
loop
call
je
add
test
mov
dec
shll
enter
mov
stc
mov
jl
and
fdivp
push
xchg
sahf
and
cli
les
cli
push
cwtl
add
mov
lret
shl
testb
cmc
mov
insb
test
aaa
sbbl
ret
jge
addr16
rcll
out
arpl
mov
repz
xchg
rorb
imul
pop
cmp
imul
sbb
mov
push
test
sti
jne
rol
out
and
add
mov
sahf
sub
mov
lock
pushf
sub
enter
out
push
insb
fwait
testl
mov
or
xchg
pop
xchg
add
dec
sub
fidivs
in
in
pop
cmpsb
or
mov
pop
push
out
jp
jg
scas
fistl
shll
in
mov
mov
xorb
xor
xchg
xor
mov
out
cmp
daa
out
jge
mov
or
push
loopne
mov
int
or
loop
push
test
rolb
cmp
test
xor
jb
pop
adcb
icebp
sbb
dec
mov
mov
and
add
nop
mov
out
mov
scas
mov
insl
imul
push
jae
sbb
dec
pop
xor
rcrl
cwtl
jg
in
loopne
push
inc
repnz
imul
jecxz
dec
cmp
lcall
std
pop
sbb
add
adc
fsubrl
push
fs
push
iret
mov
push
stos
dec
xchg
out
in
sti
fwait
jge
add
and
sbb
sbb
xlat
dec
je
fdivrs
or
mov
mov
xchg
imul
or
fcoml
xchg
aam
repz
test
xor
into
repz
dec
pushf
dec
sbb
add
jb
add
dec
cmp
dec
cmp
lret
jno
les
mov
sub
pop
sub
mov
dec
push
xchg
mov
movsl
or
popf
dec
int3
cs
fwait
or
cmp
nop
mov
sbb
loop
pop
mov
sub
lret
xchg
jo,pt
shlb
push
nop
out
mov
xchg
mov
mov
mov
pop
push
adcl
fisttps
xor
std
and
jp
hlt
jecxz
add
mov
dec
loopne
push
push
adc
lods
cli
pop
popa
and
fimull
aad
jge
repz
mov
fcompl
js
rcll
dec
dec
rcll
sbb
jle
ds
call
dec
lret
jb
dec
push
xchg
int3
pop
mov
sbb
mov
jo
out
jecxz
adc
rorl
std
adc
in
test
rorb
mov
add
lret
ret
and
jge
inc
inc
mov
data16
loopne
dec
addr16
jns
ret
push
adc
cmp
jb
loop
mov
mov
ret
and
icebp
jmp
inc
inc
or
mov
mov
xchg
inc
jmp
in
lock
subl
inc
ja
loop
rcrb
shrl
push
fisubl
sub
mov
fwait
aaa
pop
push
xchg
mov
enter
call
cld
mov
push
out
mov
jmp
jecxz
imul
xlat
int3
jb
outsl
clc
mov
sub
sub
loope
push
push
and
sub
xor
jg
pop
adc
cwtl
and
movsl
sub
xchg
out
int3
cltd
mov
cli
sti
fcmovbe
dec
rclb
ss
push
sbb
fs
lret
mov
sbb
and
test
orb
jno
push
into
mov
push
shll
or
mov
dec
adc
inc
mov
or
add
test
or
incl
out
test
scas
or
lcall
pushl
jle
mov
out
hlt
stos
jg
fnsave
repnz
test
xor
popf
adc
pop
sub
insl
shrb
inc
out
movsb
push
sub
not
push
popa
rcrb
sbbl
popa
lea
sub
mov
fwait
mov
loope
add
out
loopne
xor
add
jne
sbb
aaa
lret
xor
dec
mov
and
fwait
mov
push
push
pop
insb
mov
sub
mov
mov
sbb
mov
fisubrs
sahf
adc
nop
dec
js
jns
movsb
dec
jl
mov
mov
or
push
jb
shl
cmp
jge
daa
mov
sbb
xchg
gs
fwait
pop
repz
iret
mov
test
push
adc
pop
in
inc
mov
das
inc
jmp
xor
jo
jns
dec
pop
sub
cmp
fiaddl
sbb
xlat
addb
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
xor
sub
mov
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
mov
jmp
jo
fwait
push
mov
add
outsl
adc
mov
mov
pop
test
pop
loope
xchg
cmp
and
cmp
push
shll
aaa
es
ret
pop
sub
lret
push
jmp
int3
pop
arpl
xchg
inc
sub
aam
fcmovbe
or
mov
push
notl
aam
dec
call
rcrb
testb
mov
mov
add
lock
add
loopne,pn
dec
fs
pop
push
insl
je
jo
stos
sbb
push
mov
ss
push
std
or
cltd
xchg
mov
fadds
xchg
or
stc
jns
nop
int
stos
imul
pop
iret
cmpsl
js
adc
add
mov
js
ljmp
outsl
pop
aad
inc
fimull
and
push
lock
cmp
ret
add
xlat
fadd
fnstcw
inc
pop
push
sbb
rolb
pusha
mov
sbb
js
jmp
and
pop
scas
aas
cltd
fsubr
mov
mov
int3
mov
jecxz
lds
in
xor
fsubl
pop
sub
movsl
jl
and
shll
testl
jp
lcall
imul
cld
fistpl
shrl
xchg
and
jbe
mov
test
fwait
gs
xchg
and
insb
sbb
dec
sbb
pop
lock
daa
fisubrl
xor
sub
test
clts
sub
push
ficoml
in
pop
mov
mov
xchg
test
pop
xchg
pusha
incb
dec
xor
movsl
pop
aas
mov
int3
scas
std
dec
ret
or
call
jnp
inc
data16
cmp
in
rolb
jbe
rcll
sub
pusha
cmovbe
scas
dec
movsl
and
pop
push
and
xor
arpl
lods
insb
rcll
lret
inc
fwait
lahf
fcmovbe
jno
aas
or
inc
in
mov
add
mov
popf
inc
cmp
test
fistpl
cmp
ss
je
cmp
xor
movsl
jae
stos
jae
imul
mov
pop
mov
outsb
mov
jp
mov
sbbb
pop
jmp
insl
dec
add
clc
mov
cmpsl
pop
inc
sbb
lahf
int3
mov
add
mov
imul
ds
stc
sub
dec
dec
mov
inc
inc
inc
push
movsb
std
lods
inc
hlt
xor
dec
push
xchg
cli
das
and
fnstenv
sbbl
lock
lahf
rclb
lret
sbb
das
mov
push
cmpsb
adc
js
sub
fsubl
sarl
std
xor
mov
mov
jne
scas
fstl
mov
lods
aad
jne
mov
aas
mov
push
and
out
lods
pop
push
into
cmpsb
mov
in
adc
jne
sti
lret
loopne
add
mov
int
test
xchg
pop
xor
lods
add
ds
sti
aaa
js
ret
cs
push
sub
cmp
cld
mov
jo
mov
or
mov
mov
stc
dec
sbb
or
mov
fwait
pop
add
sbb
adc
loope
aas
and
xchg
dec
push
paddusb
leave
stos
adc
and
sbb
fwait
pop
pop
nop
cmpsb
dec
mov
dec
sub
pop
jl
sub
inc
rorl
aaa
add
add
xor
and
mov
xor
mov
movl
movl
mov
mov
add
imul
mov
imul
xor
mov
mov
mov
xor
mov
div
push
xor
pop
sub
xor
div
mov
sub
mov
mov
movl
movl
mov
mov
imul
mov
imul
and
mov
mov
movl
mov
sub
or
xor
pop
leave
ret
push
mov
sub
jmp
movsb
sub
clc
mov
mov
inc
fdivrl
outsl
arpl
mov
mov
sbb
dec
aas
jg
jae
sub
pop
scas
mov
mov
out
int3
mov
pop
rcrb
jb
xchg
push
jmp
rolb
adc
mov
cmp
add
adcl
subl
enter
cmp
sbb
icebp
loope
test
xchg
call
jle
cmp
jge
push
push
xchg
or
es
jbe
sub
and
mov
int3
inc
push
mov
xor
inc
sbb
jne
fisubl
or
loop
repnz
scas
xorb
adc
mov
fstpt
cli
and
push
mov
jmp
jge
jbe
sub
data16
adcl
ds
jmp
jmp
ret
out
xchg
shrb
mov
shlb
int
je
cwtl
cmp
enter
out
push
adc
mov
sbb
mov
mov
xchg
insl
popf
cs
ret
cmp
adc
pop
dec
add
es
mov
loope
push
rcr
push
add
mov
in
or
mov
lahf
and
lret
cmp
dec
test
sub
mov
pop
mov
inc
idiv
stos
sti
addr16
mov
insb
mov
je
fwait
ret
lods
ds
mov
mov
add
cld
mov
push
popa
fsubs
push
add
pop
sub
mov
lahf
cmp
pop
xchg
int3
and
xchg
mov
push
jo
inc
ss
cmc
mov
mov
imul
mov
jnp
fs
xchg
je
int
jg
fisubs
cmpb
scas
push
scas
xchg
shlb
sub
iret
jnp
je
push
movsl
aas
jnp
adc
dec
lret
lea
xor
or
movsl
movsb
scas
rclb
sbb
rcrb
or
flds
inc
push
inc
scas
std
mov
test
push
xchg
jo
leave
adc
mov
add
dec
pop
mov
es
shrl
into
add
jmp
jne
sub
mov
add
jmp
pop
sub
je
popf
ss
test
int
int3
add
mov
add
sub
add
mov
and
jbe
mov
xchg
out
sbb
mov
sub
ret
adc
ja
lret
addr16
push
lret
inc
ljmp
sub
ret
push
fisttpll
pop
insl
orb
into
mov
xor
xchg
sbb
daa
rcll
inc
cmp
jno
inc
inc
jo
lret
movsb
push
add
mov
bound
mov
les
je
adc
mov
pop
out
outsl
sub
popa
dec
mov
inc
dec
mov
mov
movsl
cmp
outsb
jbe
lds
pop
mov
pop
xor
pop
int
sbb
daa
pop
movsl
mov
adc
popa
push
stc
inc
and
es
sub
jg
mov
xor
add
subb
test
mov
jg
addr16
sti
jg
xor
rolb
or
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jo
test
lods
mov
mov
add
mov
mov
test
dec
icebp
jp,pt
cltd
pop
int3
sub
out
inc
lods
popa
adcl
jg
fcoml
cmp
mov
aad
jge
pop
ljmp
mov
or
rolb
aad
pop
mov
add
push
inc
add
mov
insl
dec
mov
cmp
mov
movsb
pop
adc
movsb
and
in
daa
sbb
mov
sub
popa
mov
lcall
sbb
insl
int3
daa
pop
push
cmpsl
leave
in
sub
popa
mov
iret
enter
add
frstor
or
enter
cli
testb
inc
jns
hlt
push
stos
xchg
push
sub
rorb
add
aas
scas
or
mov
xor
ret
in
adc
dec
shlb
push
pop
mov
adc
push
mov
sub
lods
inc
aam
push
stos
ja
das
jno
inc
xor
pop
push
jge
or
cmp
xlat
dec
aas
std
or
xchg
scas
das
cmpsb
fldenv
mov
jo
iret
test
sbb
mov
test
add
add
push
icebp
ret
daa
imul
rcr
push
stos
cltd
adc
add
daa
ds
mov
cwtl
jae
sub
or
lods
in
lahf
mov
adc
push
and
cmp
cmc
pop
or
mov
add
shlb
les
lcall
and
and
mov
mov
fistps
cmpsl
xchg
rcrb
loop
pop
add
or
popf
flds
gs
or
loop
lea
fucom
addr16
data16
outsb
repnz
sbb
xchg
push
xchg
icebp
fmulp
adc
push
popa
xchg
lcall
dec
outsl
fimull
test
movsl
out
mov
mov
sub
js
and
movsb
outsl
adc
pop
push
ret
pop
stos
inc
mov
jmp
cld
mov
or
lock
cwtl
pop
iret
out
jo
int3
inc
hlt
mov
outsb
and
mov
sub
pusha
out
in
pushf
idivl
jmp
sbb
mov
and
xchg
pop
hlt
xchg
sbb
clc
clc
orb
test
fcompl
mov
ja
fnstcw
movsl
jg
dec
cwtl
mov
jl
add
push
clc
lret
mov
and
ja
and
sub
or
jecxz
out
pop
loop
stc
fisttps
mov
push
mov
out
inc
shrb
lea
lahf
sbb
popa
repz
nop
jb
pop
mov
pop
mov
jb
int
scas
mov
xor
out
lcall
imul
pop
ljmp
add
jnp
je
xor
mov
mov
push
fwait
repz
iret
roll
dec
stos
or
inc
pop
lret
push
stos
jbe
aas
pop
shr
mov
pop
dec
and
pop
bound
int3
push
sbb
sbb
inc
aad
aaa
pop
push
aaa
xlat
or
adc
cs
std
frstor
xchg
pop
push
inc
push
add
fnsave
fists
push
xchg
iret
sbb
sub
inc
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
xor
xor
add
adc
or
mov
mov
mov
or
add
cltd
jmp
adc
fnstsw
js
xor
pushl
fidivrs
mov
loopne
or
repz
leave
movsb
nop
test
jp
outsl
loopne
movsb
insb
jno
add
pop
jp
jne
pop
sahf
or
fdivs
fcmovnb
out
inc
mov
orl
jae
out
push
add
std
movsb
mov
loope
lahf
nop
pop
mov
daa
xchg
jmp
sub
cmpsb
push
iret
push
lea
sub
cmpb
add
repnz
add
pop
jmp
sbb
jge
mov
mov
mov
lods
pop
js
lcall
fldenv
mov
scas
dec
adc
xchg
jo
repnz
pop
movsl
movl
aas
repnz
and
mov
aam
aaa
insb
arpl
fwait
pop
das
addl
in
stos
repz
sbb
out
adc
ljmp
fwait
cmp
lds
and
subb
sub
inc
or
je
sbb
or
rorb
in
iret
cmp
mov
stc
mov
sbb
test
jge
gs
jnp
aam
aad
sbbb
lret
movsl
mov
lret
stc
cmp
stos
test
lods
int3
sub
pop
mov
andb
sbb
or
cmp
inc
test
mov
or
divl
lods
adc
sbb
mov
pop
mov
sub
cmp
bound
test
stos
lods
in
in
mov
cmp
push
cwtl
in
popa
cmpsb
dec
pop
je
and
ret
daa
jmp
sub
mov
outsb
js
insl
or
inc
pop
notl
push
xchg
in
pop
into
xor
call
repnz
testl
popa
add
push
pop
adc
lods
lcall
inc
or
xor
bound
xor
or
xchg
sub
add
ret
outsb
enter
xor
xchg
stc
pop
mov
dec
cmpsl
ret
add
jne
loopne
pop
outsb
dec
jne
lahf
and
dec
sbb
fwait
jl
test
addr16
shlb
dec
lock
inc
and
xchg
sbb
sti
jbe
push
jne
pop
addr16
push
cmpsl
in
or
mov
push
popf
sbb
insl
push
and
out
sbb
inc
and
inc
push
add
sahf
addr16
loope
stos
ret
sbb
fucomip
rcll
out
xchg
repnz
pop
or
push
addr16
stos
mov
cmpsl
popl
popf
movsl
xor
jb
das
mov
pop
stos
ja
clc
scas
mov
mov
jl
addr16
inc
clc
fisubrs
cli
sbb
scas
scas
mov
lcall
dec
lods
jmp
mov
into
and
movsb
ret
ret
mov
push
dec
mov
xchg
mov
mov
pop
xor
push
mov
aam
in
cs
outsb
imul
mov
mov
mov
push
cmp
and
fisttpll
ror
ljmp
mov
xchg
test
xchg
xchg
cmp
fdivrl
xchg
pusha
xor
xlat
lcall
ljmp
movsb
fstp
in
adcl
cmp
mov
frstor
cmc
dec
mov
dec
test
ja
xlat
adc
jne
cmp
je
mov
mov
add
adc
xor
push
xor
push
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
add
add
jmp
popf
adc
cmp
or
mov
dec
xlat
into
cmp
cmpsb
or
addr16
repnz
test
je
xchg
jo
je
movsl
xchg
or
jno
add
enter
sub
xor
pop
xchg
call
add
mov
sub
test
mov
mov
cli
pop
mov
xchg
xchg
xlat
inc
jns
cmp
aaa
mov
clc
out
pushf
mov
sbb
scas
repnz
fistpl
dec
jmp
and
fisttpll
sbb
jae
push
faddl
mov
sti
dec
pop
mov
or
aas
fimuls
inc
mov
and
jecxz
insb
sbb
adc
clc
lret
ss
pop
je
fwait
ja
es
pop
mov
dec
jb
jnp
xchg
nop
jecxz
xor
push
orb
addb
mov
mov
outsl
shr
ret
jnp
lret
xchg
fistpll
hlt
notb
cmc
les
inc
jae
test
lcall
xor
imul
pushf
xor
xor
mov
pop
js
jne
scas
mov
jp
call
scas
push
xor
call
in
xchg
lods
inc
xor
cmp
mov
push
sub
push
cmp
sahf
xor
inc
out
or
sbb
insl
pop
or
pop
xor
dec
adc
jp
xorb
inc
mov
nop
xchg
pop
popa
pop
insl
fs
jae
xor
inc
in
jl
sbb
lds
xchg
mov
dec
dec
cltd
dec
fists
and
jne
pushf
sbb
rcl
test
inc
mov
mov
push
ret
and
push
xchg
mov
push
push
idivb
movsl
xor
sub
xchg
lcall
call
lcall
rep
fistpll
sub
cmp
mov
decl
jecxz
cmpsb
inc
mov
sub
test
sbb
xor
testb
imul
stos
or
int
rcll
ss
das
hlt
popa
jae
xlat
clc
and
sarb
sti
leave
sbb
cmp
mov
jnp
sbb
cmpsl
pop
mov
and
lods
test
lods
stos
cmp
xor
insb
fstpt
add
jbe
sub
mov
pushf
cltd
in
dec
cs
mov
subps
popf
popf
and
out
sbb
push
push
fwait
repz
ret
inc
mov
xor
aas
jl
mov
int
adc
jbe
testb
inc
mov
xor
xor
adc
orb
lock
ss
lock
shr
lret
jbe
adc
mov
jae
add
fcmovnu
icebp
stc
in
xchg
outsb
out
adc
jbe
dec
add
ja
jo
out
mov
and
mov
and
inc
icebp
or
sar
je
in
int3
ficomps
or
mov
cwtl
in
jmp
pop
jb
push
xchg
sahf
cs
jge
mov
mov
sbb
outsb
or
xchg
lods
in
xchg
call
mov
mov
rorb
insb
xchg
push
mov
leave
sub
dec
outsl
adc
aas
inc
jle
add
fldl
inc
dec
dec
in
mov
xchg
add
adc
mov
xor
mov
lea
xor
mov
mov
jmp
aad
mov
mov
shll
xor
mov
mov
shrl
cmpsl
mov
pop
iret
inc
fdivp
dec
fcmove
xchg
xor
fcoms
mov
addb
dec
lret
sarb
mov
insl
or
lahf
scas
shll
mov
pop
mov
dec
fists
or
push
adc
mov
lods
addl
cwtl
int3
sbb
pop
mov
mov
pop
adc
hlt
insb
ja
pop
mov
sahf
dec
aam
ret
cmp
mov
nop
dec
shll
sbb
in
fsubrs
push
fists
or
loop
insl
sub
xchg
mov
xor
mov
stc
xor
outsb
sub
jle
outsb
mov
out
cltd
bound
or
mov
rolb
je
shrl
mov
sti
cmp
add
jne
pop
stos
int3
test
dec
push
stos
orb
cmpsb
ret
ror
cmpsb
sub
or
and
insb
dec
pop
scas
dec
push
sbb
pop
out
and
test
pop
in
call
cli
es
fcom
mov
lods
fstpt
sahf
movsb
jo
lds
jp
pop
pop
pop
mov
flds
testl
add
aad
sub
ja
mov
sbb
push
jno
or
sbb
aaa
and
sub
aad
mov
inc
mov
xchg
mov
push
fstl
rorl
int
adc
dec
insl
sbb
jl
clc
inc
shrb
xchg
ja
jb
jnp
xchg
ror
lea
mov
cmpsl
and
subb
adc
imul
xor
pop
imul
sbb
fisttpl
push
cmpsb
pop
xchg
rcrl
push
sti
es
insl
pushf
pop
push
dec
stc
nop
fsubl
xchg
or
jmp
mov
or
aad
cmp
sbb
enter
addb
xchg
and
pop
sets
push
lahf
dec
out
aaa
mov
lock
das
je
xchg
cmp
jno
inc
mul
roll
or
mov
mov
nop
adc
lahf
cmp
dec
adc
pop
push
sbb
stos
andl
xlat
pop
xchg
and
mov
enter
movsl
pusha
push
js
in
sbb
mov
pop
mov
outsb
mov
sbb
aas
in
dec
cmp
or
pop
pop
jl
repnz
cmp
daa
add
and
dec
cli
sti
int
int3
mov
cmp
out
lret
lcall
push
rolb
mov
xor
jmp
leave
loopne
loopne
jbe,pt
jb
cltd
lods
sub
fidivrs
xchg
cmp
enter
or
in
out
in
and
shll
cmpsb
cmpsl
mov
fidivl
push
adc
mov
mov
xchg
jmp
je
cmpsb
test
xchg
rcrb
pop
lock
loope
and
sbb
pop
fcoms
lea
pop
icebp
mov
push
xchg
jae
shlb
and
adc
cwtl
mov
xor
sbb
mov
push
pop
cmc
daa
lods
clc
jmp
push
sbb
add
imul
mov
sub
mov
and
sub
lea
mov
mov
xor
jmp
mov
xchg
mov
add
addr16
mov
sbb
cmp
sub
out
movsl
sbb
cmpl
mov
mov
cs
or
mov
cmp
mov
repnz
xchg
repz
arpl
data16
jo
and
shll
push
inc
lret
or
fcomi
sbb
test
push
pop
shlb
add
jb
inc
shlb
test
pushf
cltd
cmp
cli
in
out
pop
adc
xchg
push
jmp
mov
xchg
adc
cwtl
adc
mov
push
fwait
outsl
mov
xor
aas
pop
push
mov
imul
mov
push
aad
rcrl
xor
out
pop
mov
out
mov
outsl
cmpsl
cli
unpcklps
sbb
push
add
pop
cmp
popa
and
add
je
xchg
xchg
mov
mov
mov
rclb
daa
dec
int
in
jae
push
pop
hlt
push
ds
out
xchg
cmpsl
test
addr16
pop
dec
int3
inc
push
mov
inc
test
rclb
test
cmpsb
sbb
xor
leave
nop
testb
and
jge
push
rcll
icebp
bound
rcr
push
push
xchg
in
in
es
cmp
jo
stc
in
data16
fs
jecxz
addr16
cmp
cmp
aam
nop
push
xor
out
mov
movl
jo
sub
lret
or
dec
mov
jbe
ljmp
lea
dec
jl
and
mov
jb
push
lods
inc
cwtl
xchg
add
add
ret
out
mov
subl
iret
stos
cmpsl
or
mov
out
int3
int3
or
xchg
push
cmp
shlb
inc
dec
je,pt
jp
pop
pop
rcrl
mov
pusha
xchg
cs
or
jp
and
cs
push
jg
push
add
sub
scas
pushf
insl
in
pop
and
rorb
fistpl
push
out
sub
xchg
cmpsl
daa
mov
test
inc
movsb
loope
jne
pop
and
pop
add
push
cmp
test
jns
aad
xlat
or
push
clc
test
pop
lods
out
daa
and
adc
sbb
imul
das
dec
je
out
adc
std
movsl
ja,pn
sahf
sub
sbb
cmp
incl
pop
dec
outsb
iret
mov
lret
adc
pop
unpckhps
sbb
pop
insb
xor
and
dec
adc
test
xor
pop
das
jbe
fmulp
dec
or
mov
pop
add
sahf
ror
popa
out
shlb
adc
pop
pop
push
lock
clc
insb
popf
daa
hlt
xor
ret
add
flds
scas
and
mulb
mov
mov
lods
mov
add
cmp
mov
rcrl
adc
lea
outsl
in
push
stos
test
stos
jo
lcall
or
mov
or
fwait
mov
cmp
jae
push
mov
into
add
dec
aad
jl
shr
out
cs
out
sbb
mov
dec
dec
and
fsubs
into
push
scas
jge
xor
mov
dec
dec
xchg
mov
out
gs
jmp
mov
push
xchg
div
push
push
or
sub
xor
add
mov
add
mov
mov
push
push
call
mov
mov
and
mov
and
mov
add
adc
mov
add
mov
adc
xor
cmp
jne
cmp
jne
jmp
popf
fldt
mov
xor
pop
cmc
das
lcall
mov
inc
jge
xor
or
xor
adcb
ja
xor
and
mov
mov
xchg
out
bound
clc
jae
fucomip
jb
or
dec
cmp
cmpsb
stos
cmp
or
gs
lahf
xchg
shlb
stc
lock
rolb
ds
fldt
fucomip
cwtl
movsl
pop
xchg
negb
sub
into
shlb
pop
inc
pushl
cmc
arpl
aaa
add
fs
sub
mov
add
ret
mov
jns
in
pop
add
jecxz
and
ss
js
jae
shll
mov
es
loope
cmp
jp
mov
inc
mov
popa
ficoml
les
xor
arpl
loopne
jg
cwtl
loop
mov
lock
xchg
or
test
xor
sbb
inc
ret
aad
mov
ret
lret
leave
or
int
pop
adc
inc
fs
out
mov
nop
cs
loope
cmp
in
call
call
dec
sbb
jecxz
adc
sti
push
lcall
popf
rep
push
jecxz
roll
add
les
mov
lret
sbb
pop
xor
popa
push
adc
cmp
addr16
cwtl
fisttpll
mov
shll
fisubrl
jne
xchg
loope
stos
fnsave
insb
in
jge
fimull
jb
std
jo
lock
mov
pop
inc
es
out
scas
mov
repz
int
jge
lods
and
mov
loope
mov
lcall
xchg
fidivl
decb
call
mov
lahf
mov
inc
ja
shlb
out
jecxz
pop
adc
dec
fsubs
add
sti
orb
pop
xchg
sbb
cs
jp
and
scas
test
sbb
add
mov
add
cmp
ljmp
sub
lret
pop
xchg
mov
les
aaa
mov
rolb
filds
mov
jno
mov
pusha
imul
adc
adc
pop
ss
push
repz
dec
cmpsl
or
hlt
sarb
jae
loope
jae
sbb
and
popf
ss
xchg
mov
cmpb
and
cbtw
cli
and
push
pop
and
push
dec
push
lds
fstl
notl
or
daa
mov
or
xchg
sahf
ret
cmp
aaa
pop
mov
mov
je
push
pop
add
jge
add
sub
je
rcrb
test
jg
mov
cmp
xor
icebp
adc
lea
popf
inc
push
jbe
insb
ffreep
push
fs
fmull
aad
ror
pop
xor
in
xchg
movsb
sbb
inc
cmc
inc
mov
sbb
pusha
xchg
sbb
repnz
or
inc
jo
rcrl
test
outsb
lods
add
cmp
sti
cltd
or
fnstsw
inc
jmp
movsl
lods
stos
subl
stos
jne
cmpsl
pop
mov
cmpsb
adc
sbb
dec
imul
stos
jp
mov
jge
clc
cmc
adc
enter
dec
lock
sub
mov
sub
mov
xor
div
mov
jmp
addr16
jecxz
ja
mov
inc
and
xor
mov
mov
xchg
mov
loope
jns
loope
mov
inc
leave
cli
fisubs
jp
hlt
movsl
addr16
mov
int
mov
and
mov
push
mov
repnz
push
shll
mov
xor
mov
enter
loope
xchg
das
dec
data16
leave
xchg
push
xor
fstl
fiadds
and
ljmp
sub
add
inc
push
andl
or
popa
jo
inc
pop
js
push
lret
adc
in
stos
add
insl
movsl
stc
dec
call
iret
sub
or
cltd
cs
mull
cwtl
push
mov
aam
out
sahf
in
pop
push
mov
stc
arpl
push
loopne
jmp
shrl
mov
and
xor
dec
mov
xor
cmp
arpl
sbb
adc
cs
add
fistps
xor
mov
mov
mov
lcall
sub
pop
roll
lods
jbe
add
and
jbe
adc
mov
movsb
mov
jge
jl
aam
fwait
andl
mull
dec
xchg
or
and
jnp
push
mov
mov
push
lea
sbb
cmp
stos
in
lret
jmp
shll
inc
mov
out
mov
inc
repz
adc
mov
repz
dec
notb
mov
and
sbb
jecxz
fmuls
in
outsl
mov
shll
mov
inc
ret
mov
push
js
jns
imul
icebp
pusha
mov
addr16
inc
loope
pushf
xlat
pop
xchg
cwtl
popf
xlat
fsubrl
fs
fisttpll
xlat
mov
clc
mov
add
cmp
inc
je,pt
or
mov
clc
inc
pop
out
orl
movsl
sbb
jl
lods
pusha
ficoms
add
mov
sbb
ret
mov
mov
jmp
jo
out
cmpsl
push
jecxz
mov
add
lea
cmp
mov
test
add
fsubl
xor
fdivrs
xor
andb
ss
sbb
cltd
xor
mov
jecxz
mov
enter
aas
push
mov
lahf
xchg
scas
push
jne
xor
mov
imul
and
mov
out
cli
pop
outsb
das
and
arpl
inc
add
arpl
dec
pop
jo
mov
inc
xchg
lea
movsl
mov
xchg
xchg
movsl
iret
pop
stc
scas
ret
dec
push
xor
mov
icebp
add
aas
pop
cld
ljmp
sti
xorl
mov
mov
cmp
xor
test
sbb
xor
cmp
out
ret
test
and
pop
jnp
or
mov
inc
lock
lahf
dec
fwait
xchg
xor
inc
in
sub
dec
pushf
inc
sbb
dec
or
pop
pop
subl
dec
jns
scas
xor
mov
and
cmp
cmp
test
dec
mov
stos
xor
mov
and
push
mov
sbb
popf
fcmove
sar
push
imul
shlb
dec
lods
adc
xchg
mov
mov
push
bound
inc
jae
lcall
and
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
jmp
fs
insb
int3
jl
gs
adc
cmp
or
mov
adc
leave
push
pusha
sub
jg
pop
or
std
insl
jg
pop
mov
sbbb
int3
add
pop
mov
in
fmulp
call
addr16
jle
divl
insl
and
test
and
fcomps
dec
inc
add
sti
mov
inc
stos
xor
jb
xor
mov
xor
ss
in
fisttpll
in
push
repz
cmc
adc
adcl
icebp
push
inc
push
mov
xor
xor
xor
mov
lcall
in
cmp
hlt
ficomps
arpl
add
test
daa
jne
jmp
pop
pop
pop
push
std
mov
jns
inc
aaa
je
xor
pop
mov
mov
lret
cmc
push
mov
sbb
mov
mov
loop
push
push
fnsave
dec
outsb
add
data16
loope
in
out
sbb
outsl
xchg
adc
je
mov
mov
xor
xchg
mov
add
sti
xor
subl
jae
sub
inc
pop
adc
xchg
sahf
jo
mov
mov
pop
pop
adc
or
sahf
sub
jns
pop
lahf
mov
cmp
ficompl
filds
mov
jle
cmp
inc
inc
xor
mov
xchg
add
inc
jge
or
mov
addb
pop
jecxz
add
pop
or
sbb
test
bnd
clc
ud2
sub
push
or
jnp
cmp
mov
inc
rcrl
pushl
xchg
mov
xchg
imul
dec
data16
testb
jne
mov
int
mov
xor
clc
jmp
mov
cwtl
outsl
mov
inc
dec
push
in
pop
pop
rcr
dec
mov
hlt
mov
inc
mov
mov
js
push
jnp
jnp
xchg
pushf
testl
xchg
shll
sahf
test
mov
or
inc
rcl
iret
pop
int3
dec
loop
imul
roll
inc
or
jmp
xchg
sbb
lret
or
cmp
test
cmpsb
lcall
pop
sarb
push
stc
into
sub
test
pop
push
or
cltd
or
push
std
out
fs
in
push
sbb
ds
or
in
test
jl
lret
or
pop
xlat
mov
out
adc
jae
dec
add
jo
into
adc
xchg
faddl
and
push
cli
xchg
adc
aas
insb
add
lahf
ljmp
jmp
jmp
insl
add
cld
and
jg
aas
ja
xor
pop
lods
popf
mov
jle
xor
loop
xchg
stos
sbb
mov
test
xor
pop
mov
fs
push
jmp
mov
sbb
mov
push
xor
and
and
push
push
call
mov
mov
shr
shr
xor
mov
and
mov
xor
and
mov
mov
xor
and
mov
push
push
xor
and
push
push
call
mov
mov
and
and
xor
xor
shld
shl
or
or
xor
xor
mov
mov
mov
mov
mov
sub
mov
sbb
and
and
mov
mov
mov
mov
or
or
add
mov
adc
add
adc
mov
mov
mov
mov
jmp
loop
xor
js
jae
mov
jg
rcll
mov
jmp
inc
fucomi
dec
stc
cmp
gs
aaa
xchg
xor
mov
je
nop
bnd
jg
pop
int
adc
fwait
mov
sub
and
iret
jecxz
mov
cmp
sub
add
sbb
cmp
aam
pop
pop
lahf
out
xchg
imul
cwtl
xchg
mov
cmp
dec
scas
push
add
add
les
mov
or
inc
in
push
les
ror
sarl
add
insb
dec
lcall
and
xchg
xchg
popa
pop
movsb
mov
cmpb
clc
mov
add
jecxz
or
push
movsb
pusha
shrb
cld
fmull
sub
pop
sub
sbb
enter
adc
cmp
pop
pop
mov
out
dec
inc
outsb
sbb
in
int3
sbb
fsts
cwtl
stc
pop
pop
pop
xchg
imul
jbe
inc
cmp
add
es
cmc
sbb
xchg
xchg
testl
or
jbe
sub
pop
jb
inc
push
inc
pop
lcall
fwait
pushf
test
push
orl
cltd
sbb
fcomps
mov
jns
pop
pop
push
dec
ret
scas
inc
sbb
inc
push
cmp
add
xor
dec
enter
or
ja
inc
cld
adc
jl
dec
dec
repz
movb
imul
loopne
and
sahf
test
cmp
fadd
and
in
lahf
and
popa
inc
pop
jg
cli
dec
out
ss
push
sti
aad
daa
leave
fwait
lds
idivl
or
jmp
flds
js
enter
daa
notb
sbb
xchg
mov
ss
fdivl
dec
sbbl
addr16
mov
pop
mov
out
notl
cli
dec
jae
notl
and
dec
pop
sub
pop
lock
lret
lret
cmp
xchg
push
adc
iret
xchg
les
testl
dec
mov
out
lods
dec
xchg
loop
lret
mov
sub
add
or
out
mul
pop
or
dec
fisubrs
adc
std
inc
loop
int
popf
orb
ret
mov
fimuls
inc
xchg
mov
xchg
add
iret
loope
sbb
iret
cmpsb
dec
subl
les
sbb
arpl
imul
push
test
hlt
push
mov
mov
mov
lds
pop
pop
rcl
cmp
fdivs
loope
mov
scas
mov
push
sarb
lds
xlat
stos
adc
test
imul
or
mov
mov
xchg
xchg
addr16
mov
ret
inc
mov
addr16
xchg
das
sbb
test
insl
jmp
mov
gs
adc
mov
inc
test
iret
sbb
xchg
hlt
rcrl
scas
roll
mov
dec
lock
les
or
imul
aad
je
in
test
lods
push
scas
mov
in
std
mov
mov
and
push
jmp
mov
or
mov
test
mov
jbe
mov
mov
dec
dec
jp
fistps
mov
mov
jmp
imulb
sar
jae
test
hlt
jmp
or
xor
jmp
lahf
clc
and
insb
ret
test
mov
adc
addr16
or
xor
lods
push
dec
leave
jno
xor
mov
cltd
inc
push
lcall
dec
mov
xchg
fs
arpl
add
pusha
imul
sub
dec
test
cs
cmpsl
imul
sahf
mov
stos
jae
jno
fiaddl
push
adc
out
nop
rcrl
dec
xchg
adc
xchg
push
cltd
fstps
adc
movsb
outsb
jae
add
shlb
push
lcall
inc
rcrb
out
loope
out
enter
pop
fwait
push
pop
mulb
jge
outsl
mov
fiaddl
or
mov
xor
cmc
add
inc
cltd
push
shl
addr16
xchg
mov
sbb
add
sub
stc
dec
sub
dec
xchg
mov
icebp
in
out
xor
xor
mov
mov
ret
enter
adc
into
cs
out
and
push
ret
xchg
mov
add
mov
out
into
sahf
addr16
push
stos
push
dec
inc
js
mov
and
jae
test
mov
popf
adc
xchg
adc
cmp
pop
aas
clc
icebp
lahf
add
sbb
push
mulb
out
stc
stc
xor
add
add
je
les
xchg
fwait
inc
or
repz
fcoml
in
mov
test
nop
sti
sbb
sbb
scas
pop
jb
xor
rcl
xchg
mov
hlt
mov
icebp
pop
ljmp
insb
push
mov
inc
insb
add
mov
adc
cs
xchg
insb
and
jae
insb
jp
test
mov
pushf
pop
push
cs
loopne
xor
or
out
in
xor
cld
aam
notl
fsts
xor
pop
mov
movsb
pop
push
pushf
add
lods
cmc
gs
sub
insb
jo
js
inc
bound
jl
add
mov
ret
and
clc
xor
loopne
push
fwait
arpl
dec
push
jb
icebp
sub
push
jns
mov
jne
xchg
push
push
es
push
stc
dec
ss
lods
xor
xchg
pushf
fchs
adc
push
addr16
lods
ljmp
pop
sti
cmpsb
jno
xchg
add
mov
into
in
inc
cmp
mov
or
pushf
inc
xchg
cs
mov
int3
push
xor
push
xchg
imul
int
ret
push
jae
inc
nop
addb
jnp
and
mov
hlt
mov
xor
mov
sarb
lcall
dec
mov
sbb
repz
inc
sbb
shll
and
xor
jnp
fadd
es
adc
fsts
les
fdivrl
sahf
lcall
pushf
pop
adc
aas
push
sub
pop
sub
mov
mov
sub
mov
mov
mov
shl
or
xor
xor
inc
shl
add
adc
jmp
pop
loopne
out
cwtl
cmp
insl
inc
sbb
ljmp
lds
add
mov
jnp
mov
add
pop
gs
fs
bound
out
aad
aaa
mov
cmc
ret
xchg
xchg
das
inc
mov
iret
movsl
cli
out
cmp
negl
jbe
in
pop
movsb
and
dec
pushf
and
push
aaa
cmp
xchg
inc
add
xchg
mov
into
mov
icebp
add
test
or
enter
fwait
jp
faddl
xchg
sub
adc
mov
jmp
scas
or
dec
xchg
fisttpll
aam
inc
fsub
jo
jp
fildll
iret
out
outsb
cmp
mov
in
add
popf
xchg
xor
ds
jmp
loopne
fs
movsb
mov
roll
cmp
daa
out
leave
mov
sub
mov
sbb
lcall
cmp
xor
push
jmp
into
cli
das
jg
lcall
js
mov
fstpt
cvttps2pi
or
fucomp
sahf
mov
cld
mov
mov
pop
gs
mov
scas
out
out
pop
adc
shlb
cmp
dec
xchg
neg
aad
mov
insb
xor
sbb
mov
subl
push
pop
sub
jns
notb
cmp
mov
nop
jmp
notb
orps
cmp
cld
cmp
fnstenv
sbb
es
xor
jae
stc
add
or
lret
xorl
dec
jmp
cmp
hlt
outsb
inc
mov
sahf
stos
pop
daa
outsb
mov
jp
mov
in
testl
xchg
add
xor
add
fcomps
movsl
jno
mov
sbb
add
inc
cmp
inc
ja
inc
adc
or
sbb
xor
inc
cltd
es
fldl
movsb
jae
repz
push
sub
dec
arpl
xchg
inc
dec
xor
cmpsb
lahf
loopne
push
jle
cmp
mov
and
popf
push
and
jmp
inc
add
jge
mov
and
mov
dec
xchg
es
lahf
push
push
dec
jno
mov
mov
and
push
nop
aad
lock
cmc
sbb
movsl
sarl
stc
popa
outsb
lret
out
rcrl
dec
push
insl
xchg
insb
dec
xchg
cmp
pop
dec
xor
inc
lcall
jnp
insl
sti
mov
ret
movsl
xor
mov
pop
cwtl
jne
inc
and
rorb
notb
cltd
movsb
dec
jns
lahf
and
push
test
scas
cmp
sub
pop
xlat
frstor
xchg
mov
rclb
scas
push
fdiv
jp
pop
stos
int3
jle
and
jg
jge
cld
es
or
push
sub
test
and
lret
in
sub
mov
ds
cld
or
dec
jge
dec
fdivp
lahf
mov
pop
xchg
out
jns
popf
fnstcw
mov
inc
aaa
es
adcl
jnp
push
pop
or
nop
outsl
sbb
xlat
jns
ljmp
push
xchg
jge
inc
loopne
icebp
mov
mov
mov
and
mov
and
mov
push
xor
add
push
adc
push
push
call
mov
mov
add
adc
or
or
add
adc
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
mov
mov
jmp
mov
mov
jno
loopne
out
cmp
sub
mov
insb
adc
cwtl
xchg
movsb
imul
inc
pop
cmp
pop
jno
aad
in
fcompl
repnz
xor
jbe
loope
jl
hlt
push
movsb
rep
xchg
mov
fmuls
ja
ds
fdivs
and
cmp
push
shlb
loopne
cmpsb
fistl
dec
cwtl
jnp
adc
cli
cmp
lods
ficoms
mov
push
dec
mov
cmp
jge
fcoml
jp
adc
mov
fisubrl
xchg
outsb
sti
les
in
and
inc
mov
adc
push
jbe
je
sbb
aas
mov
mov
inc
cmp
negb
das
sbb
data16
pop
scas
leave
dec
xor
cmp
lea
jle
loopne
sbb
mov
push
xor
test
cwtl
and
js
jmp
faddl
iret
movsb
dec
push
aaa
mov
add
xchg
test
in
jno
dec
cmp
jno
stc
mov
inc
cmpsl
jle
push
cmc
int
adc
xchg
or
mov
and
es
mov
jl
das
add
push
popf
ds
sahf
jo
sub
je
pop
sub
cmp
cli
inc
sarb
test
int3
repz
pop
push
out
xlat
ficomps
fdivrs
ficoms
jae
xor
mov
addr16
and
stc
pusha
rcrb
int3
mov
pop
shlb
xor
xor
add
out
cltd
mov
mov
sbb
pop
mov
call
mov
inc
cs
insb
sbb
sub
xchg
push
dec
rclb
sub
cmp
js
fdivrl
cmp
inc
stc
jecxz
and
dec
aaa
bnd
ds
push
jns
nopl
fmuls
dec
jl
xchg
push
and
aam
scas
add
outsb
lcall
inc
int
aam
jno
mov
sub
pushf
jae
aam
push
sbb
add
or
mov
mov
jno
mov
push
xor
in
mov
mov
push
je
imul
mov
push
jbe
xchg
xchg
ljmp
sbb
cmp
lcall
mov
mov
jns
mov
add
push
pop
decb
in
add
in
mov
mov
into
and
or
mov
inc
jmp
ljmp
jbe
and
mov
inc
add
das
mov
inc
shl
lea
data16
imul
clc
rcrl
and
lret
push
push
mov
push
push
sub
xor
fmul
outsb
js
mov
repz
adc
and
pop
lahf
jecxz
les
cmp
sbb
outsl
pop
add
xor
adc
popf
xchg
test
adc
push
sti
bound
mov
imul
mov
in
ds
xor
push
xor
push
push
push
call
mov
mov
xor
mov
xor
mov
xor
xor
add
mov
adc
pop
mov
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
es
jecxz
jecxz
cmp
xor
mov
mov
mov
aaa
sbb
mov
cmp
push
dec
out
out
jmp
dec
mov
lods
fstpt
std
xor
je
hlt
jne
dec
scas
xor
dec
adc
shl
push
jne
mov
cwtl
mov
sbb
clc
adc
cwtl
clc
out
and
xlat
add
dec
push
jbe
mov
push
dec
ja
inc
xlat
fldl
fiaddl
shll
dec
inc
dec
out
aaa
push
push
push
mov
sbb
sub
outsb
cld
push
data16
rcl
adc
lods
add
mov
mov
nop
pusha
iret
push
stos
cmp
cli
movb
jnp
scas
sub
testl
fcmovu
loopne
xchg
aam
fistpll
stc
sub
dec
sahf
js
lds
mov
jl
cmp
stc
mov
mov
pop
aaa
repz
or
xchg
in
push
add
mov
test
adc
and
mov
dec
inc
pop
les
push
mov
jg
iret
ss
in
xor
xchg
jmp
cmp
out
popf
and
lahf
imul
repnz
movl
xor
add
push
aas
push
test
mov
and
inc
dec
fisttps
xor
inc
pop
mov
mov
mov
cwtl
xor
jno
enter
in
out
pop
in
leave
arpl
jne
jb
xchg
scas
cli
ror
adc
dec
jbe
pop
fs
mov
cmp
dec
mov
ret
mov
ret
push
cmp
ja
mov
xchg
mov
popa
std
pop
add
pop
inc
je
stos
inc
push
push
xchg
inc
mov
adc
cwtl
adc
xchg
divl
rol
and
xor
xchg
notl
je
cwtl
leave
les
lret
sub
fwait
pop
in
xor
lret
test
hlt
xor
add
inc
call
movl
movl
jmp
shl
sahf
aad
xchg
mov
test
test
fsubrs
mov
mov
xchg
loop
pop
xchg
imul
leave
sbb
lds
inc
inc
cmc
out
jl
rorb
jecxz
pop
or
and
popl
jns
test
cs
mov
je
addb
scas
add
xor
stc
and
vmovupd
imul
dec
mov
dec
movsb
fisttpl
jmp
pushf
es
xlat
jg
and
push
in
insl
pusha
orl
or
dec
cmpsl
jge
jl
int3
test
sub
push
dec
or
xchg
negl
shl
xchg
out
sbb
and
mov
rclb
and
repnz
add
push
cmpsl
sub
push
sahf
dec
stos
jl
mov
cmp
dec
jne
pop
or
sbb
rorb
push
jbe
js
jle
xchg
arpl
sub
xchg
cmp
adc
pushf
lret
and
pop
jmp
push
int
gs
insl
xchg
xor
ds
adc
cmp
dec
push
dec
jns
out
dec
sub
xorl
sahf
popf
mov
sahf
push
push
out
xchg
adc
into
leave
or
jmp
sahf
mov
call
in
stos
sbb
lds
fadd
sub
aas
shlb
les
pop
ror
sbb
xlat
js
xchg
inc
jle
inc
push
lcall
addl
pushf
cwtl
adc
and
sub
imull
inc
jne
sahf
xor
sub
dec
dec
push
aam
test
dec
mov
push
adc
aaa
sbb
outsl
mov
js
test
and
xchg
pop
xchg
mov
stos
cmc
dec
push
adc
es
in
movsl
push
sub
cwtl
lock
movsl
ret
int
pushf
outsl
sbb
xor
sbb
scas
mov
addb
add
add
xor
div
mov
xor
and
div
mov
or
jmp
arpl
push
cmp
sbb
mov
out
in
outsl
or
mov
mov
test
adc
aam
aad
lods
fildl
icebp
cmc
mov
mov
cmp
mov
cli
incb
test
mov
sahf
jge
gs
inc
mov
loope
jb
and
inc
inc
out
fldl2e
dec
mov
push
out
cmc
jmp
sub
test
inc
pop
stos
pop
mov
test
out
repnz
jnp
xor
push
push
xor
mov
and
dec
bound
inc
out
push
sub
jne
dec
pusha
in
leave
pop
movsb
or
lock
das
mov
imull
cmp
mov
mov
pop
cmp
add
xor
dec
movsb
out
dec
ljmp
xchg
aas
and
insl
pop
fstps
jae
aam
scas
test
push
xor
stos
sbbl
inc
movsl
add
mov
aam
and
int3
outsb
xor
xchg
ljmp
jno
xor
in
ja
outsb
mov
add
mov
sahf
arpl
lret
cmp
jg
push
sub
or
pop
lret
bound
enter
push
stos
and
xor
jge
aam
push
jae
in
cmpsb
pop
mov
add
pop
enter
mov
cmp
stos
leave
out
mov
cwtl
enter
xchg
push
and
aad
xchg
xchg
daa
push
or
faddl
lret
shl
jp
call
clc
orl
ret
outsb
dec
jne,pn
bound
add
fs
fwait
andb
ret
and
lret
cmp
jb
clc
icebp
push
jbe
jno
and
aad
loop
pop
daa
test
sub
lds
push
cltd
ljmp
dec
push
push
sub
xchg
mov
xchg
out
sub
sbb
push
push
shrb
mov
mov
dec
shll
jle
dec
cmp
pop
shrb
push
mov
ficoms
mov
mov
xor
add
mov
and
sub
mov
imul
mov
sub
cmp
jne
mov
jmp
cmpb
push
inc
mov
outsl
cmp
mov
mov
out
dec
popf
loope
and
sahf
sbb
iretw
push
add
pop
out
aam
mov
stc
jmp
push
movsl
stos
dec
adc
and
sbb
mov
sti
pop
add
adc
fcomip
scas
pop
lret
popf
or
test
lock
stos
mov
or
stos
jle
loop
push
scas
sub
inc
js
stos
mov
add
out
out
into
add
fs
xchg
jne
mov
mov
cmp
es
and
xchg
andl
enter
xchg
jne
add
cmp
negl
shrb
lret
lods
ljmp
outsl
fwait
jge
call
mov
and
leave
divb
in
pusha
adc
mov
mov
inc
xorb
fs
repnz
push
mov
sti
scas
pop
sub
mov
mov
adc
adc
ror
mov
out
xlat
fcoml
inc
mov
cld
mov
shlb
pop
jns
pop
pushf
cmp
sub
pop
ljmp
ror
adc
es
ljmp
adc
lret
sbb
add
subl
addr16
movl
push
add
stos
imul
movsl
mov
add
movl
or
or
shr
outsl
lods
popf
add
cmp
and
dec
dec
adc
add
cmp
outsb
loop
ljmp
xchg
loopne
push
fimuls
in
push
add
imul
or
mov
ljmp
sbb
inc
cmp
push
roll
or
lahf
cmpsl
into
fs
jno
and
add
sub
jb
and
sbb
dec
jb
and
and
mov
testb
mov
mov
in
shrl
mov
and
xchg
popf
sbb
fidivl
call
shlb
mov
inc
mov
jmp
fbld
roll
fnstcw
outsl
imul
mov
pop
and
enter
mov
mov
xor
jle
mov
push
sbbb
imul
xchg
add
and
lods
stos
sbb
push
int3
push
add
lret
aam
lahf
jns
arpl
adc
sub
mov
dec
std
dec
jg
and
movsl
jns
out
test
push
popf
orl
xchg
xor
cli
add
imul
adc
xor
add
mov
sbb
mov
sbb
jg
data16
int3
jp
ljmp
test
ss
sub
inc
xchg
nop
cmp
jo
les
or
dec
fldcw
xor
push
notl
add
jns
out
daa
cmc
lock
cltd
push
mov
js
or
lret
push
enter
cmp
pop
dec
loop
add
jl
pop
inc
ja
pushf
cmpsb
insl
shlb
icebp
out
rorb
loopne
dec
sbb
aaa
mov
test
jecxz
ja
pop
cmpsl
and
mov
loope
inc
jbe
push
mov
mov
loop
mov
aas
mov
lret
jge
es
fcoms
fistpl
negb
enter
aas
test
adc
jmp
sbb
imul
cmc
lcall
inc
fmulp
aas
adc
loop
jb
sbb
sbbl
loopne
mov
jnp
js
adc
ficomps
pushl
scas
lods
aas
pop
loope
jmp
add
sti
sbb
ret
xor
adc
jge
xor
fisubrs
xor
mov
pop
mov
fs
pop
fs
sbb
sbb
push
gs
rclb
shll
mov
push
cmc
xor
xor
sub
outsl
mov
ud2
insl
scas
mov
pop
mov
mull
jecxz
add
loope
sub
lea
jp
mov
adc
and
mov
or
mov
mov
imul
push
jmp
dec
lcall
cmp
xchg
outsl
push
popa
adc
mov
lret
cmp
xor
das
outsl
mov
xorb
jl
push
sti
daa
lods
fnsave
inc
mov
aad
or
in
test
add
push
jo
xchg
mov
or
mov
xchg
js
lret
xor
mov
add
xchg
add
inc
mov
rcrl
xor
or
cmc
imul
lds
push
ja
enter
push
or
push
mov
mov
in
lret
mov
mov
lods
dec
daa
and
out
push
cmpsb
ficomps
pop
ljmp
dec
cwtl
stc
ret
fsubrl
mov
dec
or
sbb
test
mov
movsb
test
jb
mov
in
scas
arpl
repz
inc
mov
jne
movq
dec
mov
xor
test
xchg
movsl
inc
data16
enter
in
sbb
cltd
das
mov
mov
dec
sub
xchg
pop
fadds
imul
call
aaa
into
mov
test
rorl
mov
jns
add
into
push
out
cld
inc
push
inc
outsl
in
imul
pop
leave
insb
mov
adc
mov
das
fnstcw
jnp
fs
mov
nop
jmp
inc
fsubr
sub
inc
cmpsb
rorb
cmp
cmp
mov
icebp
ret
xchg
sub
xchg
repz
notb
aaa
ja
mov
cld
add
jmp
pop
cmp
in
xlat
in
lea
aas
xor
or
xchg
lret
test
dec
push
shl
sub
movb
push
js
push
xchg
pop
ret
hlt
aam
lret
pop
movb
jne
or
adc
jae
out
jle
push
push
insl
push
cmp
jp
sub
je
insl
mov
mov
or
aas
into
pushf
lcall
xchg
inc
addr16
inc
loopne
lock
mov
test
aam
mov
and
mov
or
mov
imul
mov
and
and
mov
shl
mov
jmp
fstps
lods
mov
repz
pop
aam
das
leave
dec
mov
mov
sub
sub
jns
xor
movsl
mov
outsb
and
xor
fsubrl
push
loope
sub
pop
testb
cmp
das
xchg
xchg
jg
stos
movsl
add
or
cs
jne
fisttps
xor
imul
enter
push
pushf
cmc
aaa
and
jnp
push
pop
pusha
loop
cwtl
aas
clc
hlt
xchg
ja
ljmp
sbb
add
dec
std
and
adc
push
jnp
addr16
les
mov
cld
xchg
pop
inc
jl
out
or
out
sbb
mov
mov
jno
dec
mov
mov
sub
push
aas
or
notl
jmp
incb
repz
xchg
lds
adc
ja
dec
xor
mov
addr16
repz
pushf
or
test
push
mov
xchg
gs
fsubs
shlb
fldenv
sub
adc
cmpsb
dec
scas
pop
aad
stc
and
xor
sti
mov
adc
xor
in
pushf
hlt
mov
cwtl
sub
and
lret
cltd
adc
test
dec
adc
mov
push
scas
sub
out
sbb
inc
rcl
call
enter
push
xlat
add
faddl
push
stos
leave
test
or
data16
xor
mov
xchg
test
or
xchg
jmp
sub
cmp
pop
add
inc
mov
jno
aaa
adc
lods
jle,pt
cmp
loopne
iret
jg,pn
xchg
inc
add
xchg
cmp
repnz
shl
xchg
fwait
fwait
insl
lahf
mov
sbb
and
cmpl
mulb
xchg
pop
lock
jb
cmp
jne
shrb
lea
mov
dec
pop
sbb
dec
mov
jmp
loop
sbb
mov
add
jmp
mov
adc
lock
lods
xlat
and
xchg
adc
inc
testb
aas
gs
movb
paddsb
cmp
pop
push
mov
inc
jge
lahf
fisubrl
xchg
shlb
pushf
cmpl
dec
fiadds
or
daa
gs
cmp
ror
test
movsb
push
pop
inc
and
jl
adc
mov
nop
out
add
add
iret
out
insl
xor
mov
fs
addr16
xabort
xchg
stc
cmp
push
inc
inc
test
test
xor
scas
cli
xor
out
mov
nop
pop
pop
cmp
sub
lods
out
or
xchg
adc
cmp
jp
sub
mov
adc
xchg
or
test
lods
mov
jae
jbe
and
inc
js
fwait
pop
pop
scas
mov
sub
or
fidivrs
gs
movsl
shll
hlt
xchg
fsts
mov
adc
ret
ja
and
outsl
add
and
arpl
sahf
insb
pushf
loopne
testb
adc
inc
lea
notb
loopne
pop
add
sub
stos
sub
adc
outsl
pop
int
add
stos
adcl
lods
mov
mov
aas
fwait
or
adc
ljmp
das
subb
add
nop
das
leave
push
push
sub
notb
lcall
or
pop
stc
sbb
mov
xlat
stos
enter
fs
mov
and
out
mov
cmpl
xor
and
add
sarb
sub
mov
push
adc
js
test
lcall
es
and
mov
cmpsb
xchg
imul
pop
jae
xchg
rcrb
cs
pop
add
mov
ja
inc
iret
enter
xchg
mov
jno
lea
add
idiv
incl
enter
mov
mov
or
mov
or
xor
and
mov
add
pop
cmp
je
mov
jmp
mov
mov
sub
mov
sub
mov
or
mov
and
mov
sub
add
jmp
movl
movl
movl
mov
mov
xor
add
mov
jmp
inc
xor
mov
mov
xor
jns
xor
scas
ja
sub
mov
loop
mov
inc
fxch
fcomi
mov
rcrl
loope
xlat
inc
jg
pop
jbe
icebp
lods
pop
outsb
push
add
stc
or
jp
jbe
dec
ret
out
aas
shlb
lods
aad
mov
jecxz
inc
fdivrs
sbb
sbb
xchg
jp
sbb
test
cld
sbbb
aam
call
dec
pop
pop
lock
dec
dec
mov
mov
or
or
cmp
in
inc
adc
add
in
mov
sub
xor
xchg
insb
mov
mov
mov
fists
jmp
jo
adc
jg
es
cld
popa
jo
iret
xor
sbb
nop
xchg
ret
inc
fimull
insl
lahf
pop
xchg
xor
lock
sub
loope
xchg
xchg
into
mov
scas
lret
int
cld
ss
mov
jbe
maskmovq
xlat
aas
ret
xor
inc
ret
andb
and
in
adc
std
xchg
xchg
push
add
mov
jecxz
xchg
add
add
cld
mov
mov
add
dec
outsb
sbb
inc
dec
sti
push
scas
cmpsl
xchg
pop
jnp
imul
lea
cmp
xchg
mov
fs
fwait
jnp
pop
jns
sub
nop
adc
dec
sbb
or
mov
jb
aas
out
pop
mov
imul
add
cmp
test
sarl
lea
test
sub
dec
pop
jne
jle
add
sub
lods
xchg
jg
stos
aad
push
and
xor
jle
pop
xor
and
sub
adc
andl
cmc
cs
filds
jb
sub
loop
pause
push
test
gs
sbb
in
popa
clc
in
sbb
and
test
jo
inc
xor
xor
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
dec
lahf
and
xor
xchg
outsl
dec
sbb
mov
mov
jp
sbb
std
xchg
or
jae
or
push
sub
add
fcompl
iret
and
jle
xor
lods
adc
push
lret
and
inc
inc
stc
andb
lcall
lods
in
jp
aaa
in
pop
mov
mov
and
lcall
jae
mov
loop
and
cmpsb
test
shrb
sub
add
jp
insb
or
xchg
add
cmp
fdiv
adc
sahf
dec
in
pop
cmp
and
mov
int3
mov
mov
mov
pushf
gs
imul
pop
cltd
or
jmp
add
cmp
dec
fldcw
lret
xor
mov
mov
lods
loope
mov
xorl
add
inc
xchg
jecxz
enter
add
out
sub
and
or
adc
popa
sbb
bound
test
inc
icebp
es
push
jmp
adc
pop
xchg
int
imul
test
addb
inc
jmp
mov
adc
mov
jnp
pop
cmp
pop
stos
mov
mov
cmp
rol
dec
lcall
xor
sahf
mov
xchg
or
icebp
jnp
dec
mov
push
lds
sbb
pop
mov
and
sub
in
adc
jne
cld
int3
push
lea
aas
loop
out
out
mov
mov
add
xlat
stos
lds
mov
test
cld
jae
pop
jle
and
inc
test
sbb
lret
pop
jns
adc
sbbl
jne
pop
scas
xor
mov
leave
sti
xchg
or
and
jl
mov
popf
cwtl
sub
jb
int3
push
loop
or
jo
or
cmp
mov
pop
std
add
lods
cs
xor
or
xchg
xor
fsubl
sub
jge
add
shrb
inc
jle
movsl
mov
sbbl
pop
dec
jb
inc
mov
leave
movsl
xchg
push
mov
pop
inc
bt
mov
lods
jbe
add
hlt
add
mov
mov
pop
push
fdivrl
icebp
mov
stos
push
lret
cwtl
repnz
ret
dec
mov
jecxz
and
xchg
stos
popf
lret
pop
loope
incl
lret
shl
adc
cmp
adc
cltd
jle
sbb
sbb
das
sub
shr
sbb
out
cmp
sbb
mov
pop
movb
mov
pusha
and
insl
insl
add
std
sahf
test
and
push
push
ret
in
cmp
cli
xchg
add
mov
xlat
push
scas
shrl
test
outsl
mov
xor
cmpsl
shr
call
pushf
test
push
cmp
pop
sbb
stc
lea
mov
mov
and
push
pop
orl
and
push
jmp
mov
sbbl
mov
pop
sbb
mov
jmp
jl
cmp
lods
pop
adc
mov
lcall
cmp
rcll
pmuludq
cmp
xchg
mov
mov
xchg
mulb
push
or
jns
xchg
fdivl
jo
addr16
adc
inc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
jmp
cli
mov
inc
jge
and
je
sbb
je
cmp
mov
mov
sub
xor
idivb
outsb
ljmp
mov
adc
push
jle
fidivs
jge
sub
je
repz
movsl
enter
mov
pop
mov
les
roll
rcrl
jo
mov
jbe
lea
dec
adc
mov
in
xor
sarl
roll
test
add
cmc
addr16
popa
pushl
sbb
jge
add
test
aas
push
mov
stos
xor
scas
pop
mov
test
mov
mov
adc
mov
or
mov
cmp
cmp
mov
out
or
sub
loopne
lods
pop
data16
out
iret
cld
mov
xor
xchg
aam
or
mov
out
adc
fcoms
or
imul
or
xchg
sub
xor
fdivrl
mov
loope
int
adc
mov
push
or
inc
inc
pop
pop
mov
aad
es
jmp
or
xor
mov
sarb
add
mov
pusha
jno
cmp
popa
push
pop
xor
mov
sbb
dec
and
loope
insb
in
cmp
mov
in
and
in
cwtl
rcll
sbb
loope
es
jle
aaa
or
add
std
leave
leave
mov
ds
rcr
add
fldcw
fdivrs
push
imulb
test
fs
mov
xor
pop
pusha
xchg
dec
movsl
xchg
mov
sbb
popf
out
sbb
dec
lea
ja
cmc
mov
cli
dec
inc
js
xchg
lcall
pop
inc
subb
fdivs
sub
mov
sbb
test
and
idivb
and
jl
dec
or
push
outsl
or
sbb
jg
adc
hlt
inc
mov
pushf
fadd
dec
lret
ret
mov
test
mov
aad
test
xchg
and
mov
jns
and
scas
bound
dec
out
mov
fbld
test
cmp
or
adc
ljmp
outsb
jmp
jne
adc
in
mov
inc
jecxz
mov
call
cwtl
jbe
jo
pop
pushf
cmp
jno
sub
cmpsl
push
or
pop
sbb
and
decb
nop
jmp
cmp
inc
lock
jno
add
inc
in
pop
add
movl
mov
mov
or
sub
or
sub
mov
imul
sub
mov
mov
xor
xor
or
mov
div
mov
xor
push
pop
mov
mov
sub
mov
div
mov
mov
mov
or
sub
or
mov
sub
mov
sub
sub
cmp
ja
mov
mov
add
and
mov
add
mov
sub
mov
sub
mov
mov
mov
jmp
mov
mov
outsl
jno
push
mov
mov
jp
mov
outsl
bt
mov
enter
sbb
leave
sub
es
cmp
and
mull
adc
lods
mov
or
fs
push
sahf
out
dec
lods
inc
cltd
aaa
cmpsl
ffreep
in
cmc
aas
pop
das
dec
push
js
xchg
test
sbb
arpl
es
inc
clc
scas
call
sarb
popf
test
out
mov
cmpsb
enter
sar
inc
and
mov
xor
je
sub
push
daa
sbb
addb
add
aaa
cmpsb
xor
iret
xor
jnp
repnz
dec
inc
cmp
call
nop
sbb
enter
lds
or
sub
xchg
mov
sub
lret
cmp
repnz
inc
pop
jmp
xchg
out
xor
mov
fldt
xor
dec
loope
push
mov
sbb
aam
dec
lods
stc
sbb
mov
ljmp
inc
lret
leave
cmp
inc
cmp
jnp
fs
pop
adc
push
mov
xor
addr16
mov
pop
cmp
fs
cmp
daa
stos
push
mov
mov
iret
mov
aas
test
sub
inc
sub
dec
xchg
out
movsb
xlat
rorl
test
pop
and
jbe
jl
mov
sub
inc
sub
mov
les
dec
jge
mov
mov
push
inc
cmc
fwait
xor
cmp
adc
xchg
into
cmpsb
cmp
aad
clc
popf
push
mov
cwtl
aam
sub
mov
jno
rol
adc
xchg
add
sbb
imul
push
add
jp
adc
jbe
rep
stc
pop
outsl
mov
push
sti
data16
add
lods
push
xchg
mov
sub
push
sub
repnz
push
push
mov
sub
lea
push
pusha
adc
out
mov
mov
add
loop
dec
notl
fwait
inc
cmp
xchg
insl
xor
dec
mov
or
ret
mov
orb
loop
dec
imul
and
out
adc
dec
test
loope
cmp
cmpsb
push
pop
rolb
repz
add
mov
push
out
and
addb
out
push
pop
lret
sub
daa
cmc
aad
js
push
das
mov
cmp
lcall
loopne
lock
mov
and
pop
inc
arpl
sbbb
test
xchg
or
adc
sub
mov
mov
mov
mov
mov
imul
xor
mov
jmp
repnz
mov
ja
add
mov
das
packsswb
mov
and
es
push
mov
fistl
mov
and
call
and
hlt
add
mov
jb
jnp
dec
add
cmc
mov
inc
push
cltd
pushf
ljmp
and
movsb
cwtl
in
ds
add
lea
cltd
pop
into
add
inc
in
scas
pop
shll
sub
popa
stos
or
icebp
inc
and
arpl
mov
cwtl
push
or
cmc
mov
aad
dec
in
or
fstps
lds
repz
pop
cmc
cltd
sub
pop
cmp
pshufw
push
dec
test
fisttps
lods
sbb
loop
jl
icebp
mov
inc
cmp
push
inc
inc
inc
inc
cs
xor
or
fidivl
adc
jle
daa
ja
and
mov
cmp
pop
addb
ret
pop
inc
cmpsb
sub
or
enter
xlat
loopne
push
or
aad
lea
inc
jmp
mov
lds
dec
cmp
div
or
cmp
xchg
push
cmp
inc
xor
adc
jb
mov
push
sarb
cmp
call
dec
jnp
js
aad
pop
sub
jbe
mov
pusha
icebp
cmpl
mov
arpl
mov
stc
imul
push
pop
xchg
rcrb
aaa
mov
adc
and
fisubs
dec
add
xlat
cmp
xchg
arpl
ficomps
push
lods
inc
mov
ds
repz
data16
lods
in
or
sub
ret
or
and
cmp
dec
dec
push
inc
popf
mov
and
xchg
into
ss
lds
mov
jo
outsl
mov
js
out
push
mov
scas
and
scas
pop
mov
push
popa
dec
adc
ret
test
jo
and
mov
jbe
inc
insl
ror
mov
pop
int3
or
push
sub
imul
popf
and
ljmp
jp
jle
call
test
add
pop
out
lock
cwtl
mov
ja
adc
pop
jno
push
jnp
sbbb
addr16
or
je
and
addr16
shlb
daa
imul
lcall
push
push
lea
ficoms
sub
push
and
popf
jno
loop
out
out
mov
mov
outsl
push
mov
xor
mov
div
jmp
ljmp
mov
adc
mov
insl
mov
mov
sub
fcoml
sbb
push
push
sbb
cltd
xor
repz
push
mov
cmpsb
lea
mov
add
pusha
xor
jo
clc
cmpl
mov
vpunpckhwd
orl
add
or
add
arpl
div
insb
loope
in
mov
test
out
sub
xlat
sbb
inc
add
mov
in
cmpsb
cmp
dec
dec
imul
negb
xchg
mov
std
jecxz
nop
xchg
or
fistl
xor
mov
mov
pusha
mul
shlb
roll
pusha
stc
out
jmp
jno
repz
cmpb
jecxz
mov
jl
and
sbb
mov
in
clc
xchg
cmp
mov
xchg
cmpsl
push
mov
out
add
and
out
leave
adc
inc
outsb
test
scas
les
fisubrl
push
popa
adc
jge
stos
out
pop
inc
cmp
push
adc
daa
mov
aam
mov
ss
adc
lods
jp
mov
cmpsl
outsb
mov
cmp
subb
or
and
jle
outsl
sbb
dec
pop
ljmp
movsl
sbb
daa
xor
movsb
add
pop
fiadds
xor
ss
inc
stos
ds
jne
sub
shll
pop
rep
push
enter
push
cwtl
and
jno
sbb
call
sbb
das
std
aad
pushf
leave
fdivrl
iret
ljmp
dec
or
fnstsw
jl
test
int
mov
mov
jbe
test
jae
repnz
inc
shl
cld
push
lret
or
inc
dec
aas
jecxz
xchg
mov
outsl
dec
arpl
out
mov
aaa
aam
outsl
fmuls
cmp
dec
aaa
push
out
jp
and
pcmpeqb
cmp
insb
cmpsb
inc
stos
insl
adc
push
push
test
mov
xchg
enter
out
ds
and
rolb
cmpsl
fidivl
rclb
adc
mov
lods
sbb
test
jb
rcll
idiv
mov
pop
xchg
cmp
jmp
dec
jecxz
and
divl
clc
mov
int
add
push
enter
jo
mov
fidivrs
sub
and
test
jns
mov
aam
mov
xchg
push
out
dec
lea
popf
dec
popa
mov
and
sub
fimuls
fcoms
imul
hlt
imul
xor
xor
push
add
mov
or
mov
div
mov
xor
sub
mov
mov
pop
div
mov
mov
or
sub
or
mov
sub
mov
jmp
adc
inc
xorl
imul
popf
outsl
subb
jns
mov
pop
adc
sbb
fistpll
clc
mov
push
jge
jnp
lea
out
xchg
cmc
bound
mov
jb
inc
ljmp
fistps
jge
pop
ljmp
jae
push
imul
aad
mov
inc
icebp
xlat
mov
cmp
push
movsb
sar
mov
push
sbb
adc
scas
cmp
mov
std
cli
subb
js
dec
sti
mov
movsl
mov
push
out
cmp
mov
aad
cmp
mov
mov
arpl
mov
jecxz
push
xorb
bound
or
test
add
sbb
shrl
or
js
and
pop
movsl
lds
push
mov
dec
xor
sub
inc
or
fdivl
cmp
and
xor
dec
sbb
out
daa
jno
or
das
inc
dec
pop
sti
int3
xor
jp
test
dec
cmp
enter
fnstenv
lret
xchg
and
clc
jl
cmp
or
call
sub
add
into
mov
movsb
icebp
lea
cli
push
call
xor
adc
pop
sub
fwait
aaa
out
out
arpl
push
test
je
cmpsl
arpl
sbb
adc
and
sub
lds
pushf
mov
out
xor
ret
lock
rcrl
xchg
cmp
rcl
cmp
imul
popf
test
sbb
dec
call
frstor
mov
mov
enter
cltd
loope
popa
mov
and
mov
mov
cmp
jge
pushf
leave
int3
lret
lahf
inc
push
test
int
out
mov
inc
jge
js
test
enter
int3
fsubrl
push
sub
psllw
aas
xchg
mov
rcrb
push
out
mov
push
or
mov
arpl
std
xor
mov
fisttps
push
fidivs
iret
es
and
dec
jecxz
sbb
cmp
cmp
inc
lods
or
dec
cmp
sbb
insb
fwait
dec
push
mov
jp
sbb
insl
ret
mov
dec
xchg
ret
push
decb
push
mov
pop
adc
outsb
es
fsubrl
test
add
nop
outsb
mov
dec
add
mov
jno
pop
cmp
popf
xor
mov
cmpsl
dec
popf
add
insb
inc
push
add
jmp
xlat
out
jae
jae
xchg
aaa
xor
imul
les
inc
jns
mov
or
lret
add
cmp
push
loop
add
cmpsb
or
sub
outsb
stos
lret
sub
and
push
je
mov
cmp
test
nop
sub
mov
pop
js
jb
jae
xchg
xor
arpl
scas
cmpsb
fildll
mov
outsl
lods
jl
loopne
jecxz
enter
and
jbe
and
push
or
sbb
and
and
rcll
call
out
pop
xor
dec
mov
adc
cs
xchg
out
int3
fadds
push
jns
jg
mov
and
mov
out
mov
fwait
loopne
mov
pop
sub
dec
adc
hlt
inc
ja
outsb
aam
ljmp
clc
sub
jbe
lock
jbe
pop
nop
pusha
xchg
sbb
imul
mov
cwtl
call
mov
lods
or
pop
scas
dec
xlat
mov
in
add
xchg
cmp
push
out
decl
shll
and
fisubrs
pop
out
mov
sar
mov
movsl
test
loope
mov
pop
rolb
push
cmp
fstpt
enter
pop
jo
jno
jb
testb
popa
sbb
xor
adc
test
shrb
das
or
lods
ja
xlat
add
cmp
push
add
add
ds
mull
sub
cmpsl
out
arpl
add
inc
mov
test
int
popa
jo
mov
jp
arpl
mov
test
xchg
inc
add
push
add
movsbl
cwtl
dec
xor
jg
or
loop
sbb
bnd
inc
enter
hlt
je
lds
mov
or
adc
test
fistl
sahf
adc
push
ja
xor
lock
mov
or
push
test
sbb
xor
ds
insb
jle
pop
inc
lcall
sub
xor
add
and
and
daa
jbe
xor
sbb
push
popa
pop
cmp
adc
jne
sbb
push
and
push
dec
ds
shll
js
dec
pop
mov
mov
push
shll
scas
call
clc
repz
call
orb
enter
jmp
fs
push
jno
add
or
pmaxub
dec
mov
xchg
sbb
arpl
push
bound
dec
clc
rcl
bts
xchg
cmp
scas
mov
adc
aad
ret
int
lret
sub
cmp
jmp
out
cmp
ficompl
push
mov
das
idivb
mov
or
sahf
push
repnz
scas
in
jno
inc
push
aam
ror
fbstp
subl
mov
xorb
jnp
xor
gs
inc
inc
xor
push
fists
into
cld
sub
fnstsw
mov
xor
pushf
fists
mov
dec
sahf
out
dec
test
or
in
push
adc
icebp
inc
imul
aad
mov
or
mov
pop
outsl
fs
leave
int3
inc
mov
or
scas
pop
loopne
out
sub
push
in
jge
fcom
push
inc
aas
lods
mov
sbb
loopne
insb
push
jns
sti
add
pop
mov
adc
jp
sbb
fwait
sub
pop
fs
mov
notb
movlhps
pop
and
or
cltd
jge
cmpsb
sub
and
ret
shrb
in
and
xchg
pop
sbb
jmp
push
inc
fsubrl
xchg
push
xor
imul
or
add
test
adc
ja
inc
sti
aad
repnz
dec
bound
hlt
pop
cld
or
scas
jl
cmp
adc
popa
push
pop
mov
jg
xchg
fistl
jecxz
leave
sbb
aam
cmp
test
pusha
pop
mov
testb
popf
inc
jbe
inc
int
inc
adc
jg
lea
mov
dec
sub
imul
roll
ret
cmp
xchg
add
sbb
scas
or
idiv
subl
shlb
divl
sub
sbb
cmp
dec
dec
mov
in
push
scas
outsl
cmp
fcmovne
jp
push
jnp
nop
notl
jbe
loopne
cli
ljmp
iret
movb
call
push
mov
sbb
xor
xor
and
inc
pop
mov
lods
add
mov
dec
mov
mov
popf
outsb
leave
add
pop
inc
push
push
repz
stos
add
jp
ja
jno
cmpsb
in
or
nop
and
sub
add
lahf
mov
fsts
cmp
mov
out
out
aad
jmp
sub
or
cmp
movsb
stos
out
mov
iret
data16
lods
dec
sbb
gs
jl
xchg
pusha
js
pop
inc
js
inc
jnp
pop
mov
repnz
fwait
xor
push
fidivrl
dec
imul
or
fdivrs
clc
sub
cltd
and
loop
cwtl
test
sbb
mov
jecxz
push
ljmp
hlt
xchg
cmp
mov
jg
shll
pop
jns
pop
xlat
cwtl
mov
xchg
fadds
jl
out
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
and
mov
and
shrd
shr
andl
mov
or
mov
neg
xor
cmpl
movl
mov
movzwl
mov
jmp
mov
mov
cmpl
jg
pushl
pushl
pushl
pushl
call
or
xor
mov
sbb
mov
xor
mov
xor
or
sbb
mov
mov
jmp
lods
cmp
xchg
dec
mov
popf
outsl
movsl
adcb
nop
lds
or
mov
dec
rcl
push
xchg
pop
clc
repnz
cmp
idivb
inc
sarl
mov
mov
pop
adc
fwait
hlt
fbld
rcrl
inc
push
sub
dec
mov
sub
add
clc
je
sbb
int3
int
lret
jp
cmp
pop
fwait
sahf
sbb
idiv
mov
xor
sbb
loop
jg
cltd
les
popa
jp
mov
sub
mov
mov
ret
ja
xor
mov
movsl
clc
out
int3
jg
notb
cmc
daa
cwtl
leave
pop
out
mov
ficompl
orb
and
movsl
testb
lahf
xchg
pop
fldl
icebp
inc
xor
xchg
adc
pop
or
mov
push
stos
call
mov
sub
imul
and
imul
or
scas
or
jge
jl
jmp
ljmp
fcoms
xor
lret
push
enter
jg
enter
in
push
sub
pusha
or
flds
pusha
into
loop
faddl
and
mov
sarl
movsl
sbb
sbb
dec
and
xor
leave
bound
cmp
repz
lods
mov
hlt
pop
inc
sbb
fwait
xchg
cmpsb
adc
rcrl
mov
test
ljmp
dec
fimuls
aaa
int
inc
aaa
xor
aaa
mov
and
cli
shlb
add
sbb
pop
mov
loope
sti
pop
mov
jmp
in
int
dec
push
insl
and
call
test
ror
test
push
bound
stos
mov
or
sub
ss
mov
push
lock
shlb
std
gs
ja
dec
jnp
ret
std
imulb
movsb
xor
aam
arpl
cmp
jnp
xor
add
or
divl
lods
lahf
add
leave
in
fsubl
cld
or
jbe
adc
lds
cmp
das
mov
shlb
into
lret
xlat
pop
insl
into
lahf
gs
test
cmp
and
sub
jbe
roll
xlat
sbb
dec
mov
inc
dec
or
mov
and
push
and
addr16
aas
lods
mov
cmp
cmc
les
fldenv
cmc
sub
mov
popf
pop
mov
jns
push
sub
test
lea
ds
adc
sub
sub
call
add
push
mov
mov
xchg
sub
jl
faddl
movsb
das
or
aad
cmpsl
jnp
sbb
pop
sub
jg
mov
ds
jl
fsubrl
mov
xor
test
pop
rcr
lcall
lock
cmp
fisttps
fbstp
mov
jge
lods
mov
xchg
pop
in
fwait
add
cwtl
add
stc
cmpsl
fmull
cmp
fildll
mov
push
rcrb
scas
jge
sahf
lods
inc
leave
adc
mov
adc
xchg
pextrw
outsb
movl
cmpsb
adc
mov
sub
cli
mov
push
mov
shrd
xor
or
shr
and
mov
mov
xor
mov
xor
add
sub
xor
or
add
mov
mov
mov
sbb
mov
mov
add
mov
mov
xorl
mov
adc
mov
and
mov
mov
adc
shl
xor
addl
shld
mov
adc
shl
mov
mov
sub
or
mov
neg
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jg
push
push
push
call
mov
add
mov
neg
sbb
adcl
xor
add
mov
orl
xor
notl
xor
movl
movl
movl
mov
movl
cmp
jne
movl
cmp
movl
je
cmpl
movl
movl
mov
jmp
movl
movl
cmpl
jg
push
call
subl
sub
xorl
addl
subl
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jne
pushl
call
subl
movl
sub
adcl
adcl
sub
mov
addl
xor
subl
shld
shl
xor
cmpl
mov
mov
jmp
movl
movl
cmpl
jbe
push
call
sub
and
movzwl
add
dec
and
xor
mov
add
or
mov
xor
mov
mov
movl
cmp
movl
jne
movl
cmp
je
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
call
sbb
inc
sub
and
mov
mov
movzwl
add
push
notl
jmp
xor
je
mov
inc
jno
sub
addb
mov
xchg
cmp
icebp
adc
pop
xor
mov
lahf
jns
sub
aam
add
iret
xchg
adc
pop
cmp
inc
dec
aam
sub
lret
in
jp
sarb
pop
iret
push
inc
push
outsb
dec
pushf
xor
repz
scas
jnp
rcll
pop
cmpl
pop
movsl
sbb
jle
cmpsl
xor
out
dec
xchg
enter
jge
fcomps
stos
inc
jl
mov
out
push
or
push
cmp
and
pop
mov
sub
adc
push
enter
sbb
es
xlat
sub
pop
pop
or
jl
push
outsb
push
int3
js
repnz
lret
dec
fisttpll
fnstenv
mov
cmp
je
add
imul
fldcw
cltd
mov
arpl
sbb
pop
mov
scas
lea
adc
jg
mov
icebp
leave
cli
xchg
sete
mov
pop
mov
mov
mov
xlat
lcall
jne
daa
and
inc
add
inc
movb
adc
loop
repz
cmp
push
sub
cli
adc
sub
repnz
cli
add
gs
jb
jle
outsl
cwtl
xchg
sahf
push
jno
cmpsb
insl
sti
lret
dec
dec
push
dec
dec
std
xor
sub
in
mov
add
pop
mov
mov
push
xor
movsb
leave
add
adc
add
pop
or
loop
mov
and
adc
mov
int3
xchg
dec
sarl
push
bound
sub
sub
in
out
mov
movd
push
int
inc
jmp
dec
dec
and
push
lret
jnp
and
loopne
sti
scas
int
stos
shrb
sub
pop
sti
push
or
push
jmp
mov
outsl
loop
cmp
adc
xor
adc
pushf
and
adc
pusha
jns
lret
std
add
ds
ljmp
inc
mov
or
pop
hlt
ficomps
inc
xor
sbb
imul
jne
adc
test
cmpsb
xchg
mov
cltd
pusha
and
mov
jno
jl
js
iret
test
mov
movsl
in
rcr
ret
icebp
inc
fdivs
adc
lods
data16
sahf
add
cmpsb
fsubrl
push
or
mov
push
lea
push
adc
jl
and
ss
cltd
dec
jecxz
xchg
adc
je
mov
test
ret
jge
in
and
test
les
jo
movsb
mov
jp
mov
enter
xor
in
pop
shrl
mov
mov
arpl
dec
gs
or
add
add
loop
rcr
cmp
or
pop
dec
inc
inc
adc
popf
pop
cli
cmp
mov
es
dec
push
pop
lcall
mov
sbb
lahf
or
addr16
xor
xorl
and
sahf
xchg
into
je
aam
add
inc
es
xchg
add
movsl
mov
loope
xor
movzwl
sub
mov
shl
cmpl
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
push
push
push
call
adcl
xor
xor
sbb
sub
mov
mov
sbb
or
mov
xor
mov
sbb
mov
xor
shr
or
sub
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
je
push
pushl
call
neg
xor
xor
add
xor
add
sbbl
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
push
push
pushl
call
xor
sbb
xor
sub
mov
mov
and
mov
push
movzbl
adc
pop
movl
jmp
cmc
outsl
mov
loope
jno
mov
mov
mov
jns
cmp
adc
push
scas
cmpsb
insl
test
mov
movaps
sbb
inc
int
xor
out
pop
jbe
je
stos
pop
mov
stos
fwait
jns
lods
push
pop
icebp
mov
arpl
shlb
jo
iret
dec
sbb
xchg
mov
xchg
add
sti
jbe
lcall
pop
xchg
js
fisttpl
sbb
push
lods
imull
jb
push
xor
jne
mov
stos
dec
int3
push
fisttps
lods
fisttpll
iret
out
jge
out
mov
xchg
gs
sbb
test
fldenv
lock
mov
add
cli
jno
dec
jnp
or
sub
xchg
test
cmp
cmp
add
hlt
dec
xchg
scas
mov
ss
shll
jle
mov
fidivs
inc
aam
adc
cmp
rol
fimull
push
push
dec
xor
sbb
inc
enter
sbb
add
xlat
add
orb
cmp
sbb
insb
fidivs
subb
test
scas
outsb
mov
mov
mov
cmp
clc
js
cmp
dec
movsb
scas
xorl
pushf
sbb
cmpsl
cld
mov
mov
sbb
icebp
sub
sub
adc
sub
repz
push
push
sub
daa
test
jle
mov
js
stc
into
pop
dec
psubq
out
mov
nop
sbb
mov
mov
sbbb
loop
or
in
or
repnz
cmp
dec
fldt
mov
lret
scas
push
mov
dec
sub
inc
mov
sbb
add
jbe
xchg
cli
dec
test
insl
mov
mov
gs
nop
lcall
adc
imul
lcall
mov
sbb
xlat
sub
jecxz
aas
pop
cmp
test
fdiv
adc
roll
fwait
push
in
dec
sti
fsubs
lock
repnz
ja
ja
outsl
addr16
sbb
add
into
bound
rol
pushf
or
xor
cld
stos
daa
dec
lcall
jne
repnz
push
mov
mov
xchg
push
cmp
push
outsl
lcall
sub
push
std
pop
pop
and
xchg
shrb
jge
orl
ret
stc
andb
dec
in
xor
jo
push
dec
mov
aaa
jmp
popa
sbb
call
pop
pop
dec
jmp
lcall
jp
dec
out
cmp
push
cli
push
insb
insl
out
fcmove
addr16
xchg
add
fisubl
stos
cmp
pop
jp
cmp
leave
dec
sub
pusha
jp
jbe
movsl
jne
mulb
inc
ret
jmp
mov
mov
jb
clc
lret
and
mov
sbb
aas
add
mov
test
rolb
jmp
lea
and
test
cmp
adcl
imul
shrl
sbb
lods
and
ja
rclb
outsl
jmp
xchg
pop
inc
or
xchg
shl
mov
add
mov
movzbl
or
lea
cmpl
movl
not
jmp
mov
cmpl
jb
push
pushl
push
push
push
call
sbb
mov
mov
adc
adc
and
adc
neg
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jb
pushl
push
pushl
pushl
call
and
xor
xor
sub
mov
movl
adc
adc
and
mov
mov
xor
add
sub
or
mov
and
mov
xor
adcl
xor
xorl
shr
andl
shl
notl
or
neg
jmp
xchg
or
adc
test
sti
pop
sbb
mov
mov
fsub
dec
dec
xor
sbb
push
jg
mov
test
shll
pop
ja
adc
loope
push
fisubs
nop
pop
loopne
push
cmpsb
mov
push
jo
popf
jb
shr
and
and
xchg
std
add
xchg
and
imul
mov
outsl
fdivr
outsb
push
xchg
jbe
lahf
mov
ficompl
dec
test
or
jbe
jmp
or
mov
inc
or
add
push
inc
add
imul
dec
ds
mov
inc
dec
add
push
out
cmp
cmp
mov
xorb
outsb
rorb
sub
mov
dec
inc
roll
or
testl
cli
cmp
fldl
lret
inc
loope
lahf
fimull
int3
loope
or
pop
adc
sub
test
inc
iret
mov
rcrb
std
push
lret
jl
cmp
je
or
adc
jle
das
inc
pop
xchg
aad
stos
jnp
pop
add
push
xchg
sahf
insb
or
pop
and
inc
dec
popl
out
jecxz
inc
or
leave
jbe
mov
lds
rcrl
adc
dec
or
xchg
xchg
inc
pop
jnp
orl
push
push
inc
pushf
fistpl
xor
mov
insl
push
test
jge
in
cmpsb
mov
daa
xor
mov
add
sbb
push
rclb
xor
dec
pop
fs
sbb
sub
adc
jb
sub
jae
push
popa
mov
or
data16
rol
mov
pop
xor
repz
js
cltd
fmul
out
in
and
mov
fisttps
ret
mov
sahf
or
imul
sbb
dec
ja
leave
iret
rcrl
lcall
mov
xchg
dec
movsb
call
mov
adcl
mov
ss
loope
dec
inc
or
pushf
fsubr
dec
sub
lds
pop
mov
shlb
jne
cmc
jb
dec
push
popf
and
insb
inc
adc
adc
clc
push
or
scas
sarb
mov
in
inc
into
fpatan
ss
adc
push
cltd
jno
jnp
ja
jbe
jnp
sbb
push
addr16
int
inc
and
dec
push
lret
cmp
lea
movsl
jg
pop
roll
stos
je
insb
mov
mov
int3
and
insb
daa
dec
jno
mov
adc
int
stc
mov
pop
mov
popf
mov
sarl
decb
sub
inc
xor
xor
cmp
lea
sbb
push
mov
mov
inc
cmp
ret
sbb
jae
push
lea
dec
dec
cmp
sub
pop
lds
shlb
imul
jne
sbb
xor
inc
test
repz
pop
sub
mov
lar
iret
mov
sbb
mov
out
out
mov
mov
xchg
adc
jno
imul
sbb
nopl
stos
addl
mov
cmp
inc
aam
cmp
add
add
or
add
mov
mov
not
jmp
movl
not
cmpl
jae
push
push
push
push
push
push
call
xor
xor
add
sub
mov
adc
add
or
addl
movl
mov
mov
jmp
xchg
xor
xor
popf
mov
lea
mov
mov
xor
jmp
shlb
test
xor
lds
insl
jecxz
mov
cs
sbb
testb
pop
cmpsb
xor
iret
and
in
add
jae
loope
dec
out
lret
aad
iret
shlb
mov
pop
nop
dec
loopne
sub
cmp
adcl
das
jp
ret
jecxz
scas
and
mov
leave
push
jl
lods
add
push
adc
or
cmp
lock
imul
dec
hlt
insb
insl
cmp
adc
push
jbe
mov
mov
dec
imul
in
fwait
mov
cmp
pusha
mov
mov
fbstp
inc
inc
adc
adc
cmpsb
cli
cli
jmp
push
and
push
in
pusha
ja
xor
mov
dec
xchg
mov
mov
jnp
popa
adcl
stos
mov
mov
cmpsb
lea
adc
pop
stos
dec
mov
mov
push
gs
movb
cwtl
sub
in
in
mov
imul
jmp
xchg
lock
xor
repz
lds
sbb
ljmp
in
mov
fisttps
dec
outsb
call
cmc
hlt
or
mov
adc
outsb
jno
insb
sbb
xchg
fwait
sbbb
lret
dec
cmp
mov
dec
popf
int
sub
xchg
jmp
fwait
movsl
fdivl
fisttpll
loope
rcll
ret
data16
or
repnz
adc
dec
lahf
pop
ret
push
popa
idivb
cli
test
movsb
or
shr
sti
popa
cmp
popl
pushf
adc
popa
shl
and
in
into
inc
in
mul
loop
push
inc
lahf
pop
inc
std
in
xchg
mov
mov
scas
sbb
test
jge
jp
xor
xchg
xor
mov
test
sub
push
xor
adc
int
or
jl
sbb
sub
cmp
adc
int
pop
testl
cmp
cld
nop
fucom
dec
into
mov
imul
sub
pop
push
popw
or
xor
push
mov
push
adc
push
insl
stos
scas
loope
out
jecxz
cld
dec
aaa
add
xor
fiaddl
movl
adc
daa
mov
pop
test
cmp
adc
cmp
dec
loopne
test
sbb
in
jne
push
stos
dec
es
std
nop
add
push
jnp
push
push
mov
lcall
fcomip
and
adc
aaa
outsl
ret
ret
test
add
dec
fisttpll
push
scas
call
cmc
and
in
aam
movb
les
cwtl
cli
and
pushf
enter
aam
notl
xor
leave
mov
pop
dec
ficoms
js
and
jmp
adc
das
inc
adcb
xor
push
xor
cltd
dec
incb
pusha
adc
imul
mov
iret
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
jmp
and
sub
pushf
mov
cmp
mov
mov
add
mov
adc
inc
cmp
push
aaa
sub
push
xchg
pop
rclw
data16
clc
aas
push
sub
push
in
pop
mulb
mov
mov
imul
mov
iret
inc
mov
fnstenv
mov
mov
push
xor
ja
orb
das
or
loop
out
scas
sahf
insb
and
fs
fbstp
mov
fs
imul
mov
xor
call
mov
pop
sbb
pop
pop
fcmovbe
or
jno
jmp
clc
jecxz
out
lods
cli
pop
fdivl
js
out
pop
sbb
into
lret
fcoml
adc
sti
sbb
out
pop
cli
jb
rcl
mov
mov
cmp
lds
inc
pop
lds
js
xor
dec
xchg
testl
xchg
pop
cmp
lret
sub
shll
int
and
fwait
push
mov
ljmp
add
jbe
mov
xor
cld
sbb
mov
mov
les
inc
mov
and
add
test
push
jno
cld
push
and
sub
push
sbb
mov
sti
pop
xchg
sbb
into
jg
mov
mov
push
inc
pop
sbb
xchg
push
and
adc
sbb
push
aas
mov
xlat
mov
cmpsb
jmp
mov
mov
cmpl
push
stos
movsl
fsts
push
push
mov
outsb
add
imul
jl
popf
pop
aad
or
cmp
xor
mov
xchg
in
mov
add
sti
iret
lret
pop
adc
jle
repz
mov
pop
mov
rclb
fnstenv
sub
mov
xlat
xlat
inc
xchg
mov
movsb
js
andb
imul
sbb
xor
rcll
cwtl
xchg
jae
push
mov
outsl
pop
xchg
lds
shl
push
push
sub
and
scas
shll
dec
js
mov
push
mulb
mov
mov
push
daa
push
mov
mov
add
stos
push
fcoml
mov
mov
and
test
icebp
mov
or
shlb
iret
inc
outsl
add
imulb
push
dec
sbb
push
mov
jae
aam
stc
movq
xor
pop
and
push
mov
stc
xor
in
mov
jmp
push
mov
and
lret
push
push
dec
add
xchg
in
aaa
loopne
fmul
cltd
je
aad
fistpll
dec
movsl
or
ja
gs
insb
imul
inc
std
xlat
dec
insb
jl
xchg
xor
mov
repz
mov
enter
pop
dec
sub
cld
sarl
cmp
and
mov
insl
xor
imul
jl
push
sbb
cltd
imull
int3
sub
in
pushf
adc
aad
loop
or
inc
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
jmp
inc
aaa
mov
mov
mov
inc
sbb
sti
add
fsubrl
lods
mov
mov
sbb
pusha
cmp
cmc
int3
push
pop
sub
les
jp
sbb
fstps
push
or
outsb
subb
cmpsl
cmpsl
movsl
xchg
popa
mov
pop
mov
filds
mov
stc
cmp
push
sbb
repz
jb
lds
jl
loopne
push
jnp
inc
lds
ja
pop
stc
ja
test
dec
xor
push
popa
fwait
pusha
dec
push
push
rorb
sub
ja
cld
mov
xchg
mov
mov
movsl
int
add
lock
mov
jle
ds
in
jo
aam
mov
sub
xchg
dec
fidivs
addr16
outsl
xchg
aad
push
loope
adc
jle
mov
jge
jecxz
rclb
push
stos
mov
sarb
and
daa
mov
mov
pop
cmp
push
cmp
jg
push
dec
sahf
pop
in
daa
mov
jo
jo
ficomps
cmpsl
cmp
dec
push
mov
pop
lahf
hlt
icebp
mov
jmp
roll
into
cmpl
inc
push
cs
pop
xor
and
xor
fcomps
inc
or
jp
jae
jp
pop
cld
or
adc
or
or
imul
in
and
cmp
xchg
sti
cs
push
mov
in
jo
fiadds
inc
daa
outsb
xor
sbb
arpl
sub
std
cltd
nop
pop
mov
je
sbb
adc
dec
loopne
xlat
inc
xchg
in
out
mov
jp
mov
pop
ret
popa
adc
or
sahf
mov
jae
xor
inc
js
mov
xor
mov
call
pop
scas
hlt
shlb
lods
adc
pop
negb
fistpl
mov
lcall
or
jl
imul
leave
sarl
adc
mov
int3
lods
add
add
int
das
sub
cmp
sbb
loop
into
ss
insl
jb
mov
mov
lods
push
scas
xor
mov
gs
inc
outsl
mov
mov
pop
movb
push
stos
adc
out
out
out
cmp
dec
push
fcomi
movsl
pop
lret
fstps
inc
jae
dec
inc
jae
dec
insl
sarb
movsb
add
nop
insb
fsts
mov
insb
pop
ret
mov
or
or
xchg
xor
cli
imul
mov
dec
scas
lods
cs
xorl
jne
leave
clc
xor
cmp
repz
lret
fbld
sub
daa
das
cld
fsubrs
cmp
popf
push
mov
test
mov
pop
arpl
pop
xchg
int3
push
movl
daa
push
sbb
mov
fs
jne
add
push
mov
rcrl
dec
cmc
sar
sub
insl
xchg
ds
dec
aas
testl
fwait
cmp
pusha
mov
push
cmpsl
insb
xor
pop
popl
aam
ss
enter
pop
movsb
or
fmull
insl
push
lret
mov
loopne
dec
in
jb
jl
dec
xor
mov
xchg
call
inc
mov
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
jmp
int
adc
cmp
fnstsw
fcoml
jno
scas
mov
mov
and
icebp
lods
or
xor
loopne
dec
fldcw
ljmp
rclb
rorl
repz
sub
fisttpl
push
decb
sahf
lahf
mov
in
mov
inc
xchg
push
jl
xor
sub
loop
mov
sbb
clc
enter
jo
aas
popa
sub
xchg
xchg
sbb
std
push
mov
ret
xchg
jp
add
or
jne
ret
imul
and
fiadds
outsl
out
cmp
mov
xor
adc
or
scas
leave
and
mov
dec
jmp
push
lahf
adc
and
and
inc
mov
inc
cltd
fnsave
daa
mov
orl
and
inc
inc
pop
test
push
aaa
cmpsb
lret
xlat
or
and
jl
jp
mov
call
cmp
push
pop
cmpsb
lahf
je
mov
shr
dec
imul
mov
inc
lock
fwait
pop
pop
dec
lods
mov
inc
jne
cmpsb
mov
mov
cmpsb
out
and
addb
loop
idivl
ds
out
mov
cmpsl
inc
and
test
fs
ss
and
mov
adc
cmp
mov
lock
loopne
mov
data16
dec
and
inc
push
sub
ret
xchg
xchg
and
stc
repz
clc
mov
imul
sbb
inc
roll
jno
das
sbb
inc
xor
push
test
dec
clc
pop
add
mov
arpl
xor
jbe
mov
loope
js
int3
adc
stos
fcom
and
sub
ds
adc
jne
std
mov
xchg
rorb
pushl
vcvtsd2ss
mov
fildl
or
sbb
pop
mov
jecxz
or
ja
cld
hlt
cwtl
jno
push
mulb
test
inc
jnp
mov
andl
lcall
jp
add
xchg
sarl
mov
in
hlt
xchg
xchg
xor
jge
fnstsw
push
fildl
sti
sahf
ret
das
adcl
adc
out
insl
xor
jp
repnz
lahf
cltd
fwait
lcall
push
inc
orb
xor
out
mov
mov
mov
add
xor
lret
jne
pop
or
mov
mov
shr
ret
movsl
pushf
dec
hlt
mov
xor
add
dec
pop
das
or
xchg
cmpl
aam
and
or
jmp
lock
cmp
xchg
jg
into
xor
jns
dec
push
xchg
xchg
xchg
pusha
inc
mov
or
rolb
lods
movsb
idivl
loop
cmp
sub
data16
sti
enter
inc
popf
fildll
inc
fprem1
mov
ljmp
mov
pushf
xchg
pop
hlt
lahf
int
jle
test
sbb
xchg
data16
push
cmp
push
xor
insb
mov
pop
ss
or
loop
mov
inc
mov
jg
push
out
push
sbb
mov
in
out
and
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
jmp
fdivrs
mov
mov
pop
xor
mov
jecxz
push
inc
inc
sbb
and
pop
cmp
or
mov
and
xchg
xchg
xor
cmp
pop
push
xor
push
dec
or
mov
fcmovbe
loopne
popf
das
inc
xchg
mov
xchg
js
imul
or
clc
repnz
clc
loop
stos
jo
test
cmp
icebp
cmpb
mov
mov
or
push
adc
scas
js
mov
xchg
and
jp
hlt
mov
xor
imul
add
shlb
adc
lock
dec
jnp
lret
mov
xchg
push
icebp
repnz
fwait
inc
jnp
mul
dec
sbb
repz
inc
sbb
call
mov
pop
enter
outsl
pop
outsl
jg
jae
xchg
push
push
push
mov
fcompl
fldenv
push
push
mov
cmp
lea
outsl
je
mov
jnp
xor
or
lea
inc
jae
mov
sahf
xchg
push
outsb
mull
pop
imul
cld
inc
rorl
jae
lret
aaa
xchg
dec
movsb
sbb
lock
push
das
mov
mov
jbe
icebp
add
scas
rorl
add
add
jecxz
jp
mov
mov
mov
mov
sub
stos
xor
arpl
mov
stos
cld
add
enter
call
add
mov
sbb
dec
xchg
add
fcmovnbe
mov
jp
cli
sarl
and
mov
sbb
mov
push
fstps
pusha
ret
xorl
mov
repz
jg
dec
loopne
ficoms
xchg
xchg
inc
fcmovb
imul
outsl
mov
fsubrl
shr
and
or
jne
mov
shrl
dec
sahf
mov
xchg
js
xor
ja
push
bound
adc
and
stc
mov
pop
jne
inc
fldenv
adc
jp
loopne
xor
lret
push
inc
sahf
mov
stos
imul
jg
jge,pt
mov
dec
imul
mov
xchg
rcll
adc
mov
inc
jmp
xchg
pop
loopne
lea
je
jbe
fildll
arpl
jae
cmp
xchg
or
lods
pop
dec
push
mov
pusha
mov
roll
push
cmc
hlt
pop
add
push
mov
xor
xor
andl
mov
adc
test
adc
gs
jne
enter
lcall
xor
pop
inc
lcall
mov
cmpsb
je
test
sub
test
aas
mov
xchg
mov
xor
mov
xlat
and
inc
fmull
adc
mov
add
scas
add
bnd
call
mov
cmc
call
call
fs
popf
mov
int3
sub
stc
mov
repnz
repnz
aad
rorb
cmp
xor
lods
roll
shr
xor
mov
mov
xor
or
add
lea
jmp
and
cmp
andb
insb
cmp
push
inc
adc
sarl
loop
adc
insl
push
stc
rorb
sbb
xchg
cltd
jecxz
jne
cmp
popa
push
sbb
ficoms
icebp
in
pop
data16
jo
and
sti
adc
hlt
push
add
dec
inc
mov
jle
mov
push
in
fcmovnbe
aaa
jecxz
push
xchg
add
mov
inc
dec
push
dec
es
xchg
cmp
mov
mov
addl
sub
mov
fistl
adc
cmp
pop
sahf
fcomi
push
aam
lea
sbb
pop
sub
pushw
test
ljmp
mov
mov
fildll
push
das
jmp
jnp
dec
pop
loopne
pminsw
pop
dec
pop
push
addr16
enter
xchg
cs
lods
mov
pop
inc
and
pop
xchg
in
and
shrb
jle
pop
mov
cmp
nop
roll
pop
popf
in
pushf
sbb
scas
mov
push
mov
and
dec
ret
mov
xor
outsb
mov
insb
mov
sub
test
adc
pop
stc
mov
rolb
sbb
lea
cmp
pop
jle
ret
xchg
aam
sti
ret
mov
lock
aaa
xchg
fimull
fcmovnbe
mov
inc
xchg
xchg
adc
pop
and
addr16
lahf
adc
fdivs
sbb
mov
or
stos
jns
push
or
inc
lods
sub
dec
cmp
popa
inc
fistpl
mov
clc
in
and
pushl
cwtd
xlat
mov
rcrb
jmp
idivb
pop
mull
jp
into
xor
pusha
jns
dec
add
sbb
sub
or
js
fsubl
jg
movsb
push
add
leave
xchg
shrl
in
shrl
loopne
inc
clc
rcrl
out
imul
fidivs
cmp
imul
popf
jae
xor
xchg
leave
rclb
into
aad
insl
rcr
push
test
ds
fwait
repz
and
shlb
mov
cwtl
push
inc
xor
pop
push
mov
inc
and
or
mov
or
test
fisubrs
or
popf
mov
inc
push
mov
cltd
fs
test
pop
out
outsl
mov
nop
mov
aam
lock
jecxz
push
loopne
or
fcompl
push
rorb
test
popa
jo
stos
fcmovbe
cmp
xor
imul
or
cmpsl
arpl
xor
mov
xor
push
adc
pop
cmc
xor
push
test
cmp
addr16
inc
adc
jne
pushf
cli
mov
or
sub
cmp
aad
xchg
loop
out
cmp
add
add
in
push
xchg
mov
or
inc
jp
sub
stos
sub
push
pop
popf
mov
repnz
shlb
insl
mov
out
mov
fistpll
xor
insl
push
add
cld
sub
addr16
dec
pop
xchg
or
or
xorl
popf
fsub
mov
push
or
adc
sub
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
fbld
pop
mov
iret
out
jmp
lds
push
mov
ds
pop
insl
or
adc
insl
nop
les
add
add
js
dec
cld
and
mov
into
mov
mov
mov
shrb
dec
fisubrs
clc
fldt
mov
push
push
mov
and
out
jnp
sbb
pop
pop
cmc
out
imul
cmp
cld
mov
push
cmpsb
push
jae
cmp
mov
shl
pop
adc
sti
out
sahf
adcb
scas
lock
aam
lea
xor
mov
ret
lods
test
xchg
push
in
out
or
sub
mov
pusha
and
push
fiadds
addl
je,pn
add
mov
data16
es
add
mul
or
push
pop
insl
fistl
ja
mov
inc
int
and
pushf
outsb
jno
mov
gs
pop
fstpl
push
shrb
fstpl
repnz
inc
pop
mov
sbb
cmp
imul
or
and
dec
stos
jo
dec
outsl
cmp
cmp
adc
sahf
and
xchg
pushf
mov
cmp
sbb
stos
retw
lret
lds
push
mov
inc
cmp
push
xchg
std
lods
mov
or
mov
sbb
adc
icebp
insb
loop
stos
push
js
or
jle
mov
aas
fldenv
push
cmp
pextrw
bound
and
clc
notb
or
in
mov
push
pushf
jo
dec
inc
xor
sti
mov
pop
cmp
mov
cmp
sbb
orl
xor
jmp
or
adc
das
lret
pop
inc
xor
in
xchg
cmp
xorl
cmpsb
iret
or
inc
jg
push
movsl
or
fnstsw
fadd
dec
arpl
sub
aaa
jmp
pop
adc
ja
mov
mov
ds
shrb
or
lret
addr16
mov
outsb
or
cmpsb
outsb
push
loope
push
loopne
pusha
iret
fidivs
outsl
loop
aam
or
incl
cmp
add
sub
test
add
xchg
sub
data16
ret
jmp
push
cmp
dec
jae
ss
xor
in
inc
adc
pop
das
and
js
pushf
outsb
mov
pop
clc
mov
sub
xchg
sbb
stos
xchg
or
cs
sbbl
xchg
sbb
sbb
mov
pop
fnsave
divl
sbb
lods
cmc
sarl
xor
std
and
mov
scas
sbb
pop
jmp
inc
xchg
lea
cmpsb
mov
pop
pop
xor
push
neg
inc
out
jp
inc
inc
push
daa
adc
repnz
insb
icebp
test
cmpsl
ss
enter
mov
roll
ljmp
xor
aas
fucom
jmp
adcl
fs
inc
cli
xor
fbstp
movb
sub
mov
rcll
lea
test
aam
mov
fwait
adc
or
push
mov
mov
push
jmp
cmpsb
inc
push
nop
mov
lods
jl
rcrl
xor
sarl
cltd
fwait
or
lds
test
and
jnp
dec
mov
jp
fiaddl
push
mov
dec
cmp
add
or
sub
pop
sub
je
leave
cli
test
pop
pop
addr16
gs
out
lret
scas
mov
les
mov
or
lret
scas
lea
xchg
inc
subl
mov
out
adc
std
lret
inc
js
mov
xor
inc
xor
daa
in
inc
cmc
cltd
push
mov
daa
icebp
push
pop
and
adc
adc
fsubrl
or
jl
inc
mov
mov
inc
jl
push
cmp
movsl
pop
mov
sbb
out
loope
sub
scas
dec
dec
or
mov
andb
sub
cmp
enter
inc
sub
daa
jl
sti
mov
movsl
push
mov
adc
popa
and
test
mov
adc
jns
xor
movsl
je
sub
fsub
jbe
jl
sub
int3
outsl
pop
js
mov
fsubs
inc
mov
bnd
lock
cmp
xchg
lods
rcll
out
test
mov
loope
fcmovnb
jae
fsubrl
outsl
sub
clc
mov
or
xor
ljmp
mov
or
inc
stos
sbb
int
push
and
sub
inc
xor
mov
jbe
sbb
sar
dec
aas
mov
mov
pop
ss
mov
imul
pop
bound
in
out
paddusb
movlps
mov
push
pop
fistps
sub
lods
xchg
loop
cmp
test
adc
cs
lea
fucom
push
pop
out
mov
call
fists
in
cmp
xlat
std
add
adc
and
fistpll
neg
gs
or
mov
fisubrl
outsb
or
lret
and
inc
cs
repnz
push
inc
bound
xor
push
test
pop
jae
and
roll
dec
fldt
shlb
rolb
ss
adc
test
lock
jmp
in
adc
mov
loope
mov
xchg
xchg
sub
clc
cwtl
dec
xor
add
cmpsb
and
or
subb
pushf
ja
mov
fimull
loope
mov
faddp
xchg
mov
aaa
lock
mov
mov
inc
or
mov
mov
jmp
jb
sub
sub
int
push
sahf
ret
pop
sub
mov
stos
mov
dec
xor
push
es
andb
sub
je
mov
out
dec
in
xchg
sahf
xchg
add
jl
mov
jbe
push
adc
jecxz
xchg
mov
xor
repz
jp
inc
jne
xor
inc
ss
out
sbb
or
test
pop
jne
dec
jne
mov
pop
loop
call
dec
mov
lock
call
jmp
xchg
insl
add
dec
push
pushl
shl
call
lea
push
mov
jmp
imul
xor
inc
aad
mov
jno
and
mov
dec
jle
dec
sbb
dec
sbb
rcr
adc
in
shl
aad
in
imul
xor
test
sub
cmp
div
out
daa
inc
fs
push
mov
xorl
mov
xor
jns,pt
call
mov
mov
or
mov
pop
lock
add
add
sub
jmp
das
ffree
hlt
fldl
mov
ret
mov
cmp
pop
bndstx
call
or
jno
cmpsl
adc
pop
mov
push
stos
popl
lods
test
xor
jl
stos
in
jne
pop
out
das
jmp
pusha
imul
adcb
dec
push
or
rcrl
movsb
cmp
lds
imulb
loop
xlat
jle
lcall
shll
xchg
xchg
lcall
fdiv
ljmp
add
dec
sub
es
mov
dec
std
incl
cs
fwait
jae
scas
push
xchg
nop
outsl
ljmp
je
std
sub
inc
push
test
cmpsb
jmp
mov
aaa
std
xlat
aad
lcall
mov
sbb
lods
dec
adc
mov
flds
sub
and
add
shrb
adc
adc
push
ret
in
pop
lods
ret
and
push
enter
xchg
inc
dec
fsubs
outsl
pop
daa
xchg
mov
or
in
pop
mov
ja
jg
inc
add
dec
push
aaa
sbb
pop
cs
xor
cmc
sub
pop
pusha
shll
fnstsw
cmpl
lea
xor
lret
pop
push
cmpsb
cmp
inc
movaps
int3
and
scas
shl
iret
push
dec
xlat
into
jp
xor
adc
fxch
sahf
hlt
lret
xchg
jbe
loop
inc
in
jbe
std
mov
jno
shl
fs
repnz
and
mov
jmp
jno
mov
mov
xchg
push
iret
popa
sub
aas
inc
sbb
mov
addl
adc
bound
aaa
and
inc
in
xchg
cltd
pop
lahf
je
cltd
or
jb
pop
mov
pusha
jmp
ret
push
loop
repz
in
and
jb
icebp
ret
out
clc
ret
test
jmp
cwtl
or
addr16
and
mov
rol
cmp
cmp
pop
cmp
mov
jmp
mov
xor
or
xchg
nop
scas
add
hlt
fdivr
repnz
xor
fdivrl
or
ljmp
xor
xor
daa
cmpsb
mov
aad
or
add
aas
mov
iret
pop
mov
sbb
mov
or
or
into
add
loope
mov
adc
add
jmp
mov
insb
std
popf
and
push
outsl
lahf
cmp
dec
ficompl
insb
jno
xchg
push
mov
mov
mov
pop
cmpl
lods
enter
add
adc
xor
jmp
mov
cltd
mov
outsl
or
add
nop
lds
or
sbb
outsb
or
mov
jne
mov
mov
and
pop
jo
sub
repnz
lret
lcall
iret
xchg
jns
pop
int3
adc
adc
push
mov
rcrb
scas
popa
cmp
ds
mov
in
mov
les
mov
push
push
enter
sbb
mull
arpl
cwtl
pop
pop
fxam
sahf
in
mov
inc
std
fistl
test
cmpsl
sbb
pop
jg
repz
add
xor
sub
popf
aas
jnp
xchg
arpl
jns
push
in
nop
xchg
out
ficomps
movsb
ljmp
cli
xchg
xor
adc
in
xchg
add
adc
shlb
cltd
pop
mov
inc
popf
loop
mov
lods
add
pusha
pop
insb
mov
fbld
jns
gs
sub
sub
mov
lret
mov
fwait
push
and
push
fdivs
sbb
pop
or
jns
in
ss
fnsave
pop
mov
and
icebp
sarl
sbb
adc
mov
push
insl
leave
push
or
cli
gs
mov
scas
ljmp
dec
popa
push
adc
inc
xchg
or
loopne
negb
cld
jnp
and
sbb
mov
loop
in
mov
pop
cmpsb
popf
insl
aam
aam
mov
stos
scas
scas
cmpsb
sub
aam
sub
push
sub
in
aaa
dec
mov
xchg
test
adc
push
fs
push
jns
push
sarl
pop
inc
dec
or
pop
lret
mov
and
adcb
and
push
aad
outsl
js
jp
mov
sahf
sbb
clc
insb
cmp
nop
adc
pop
out
cmpb
pushl
jecxz
fidivrs
cli
pop
popl
or
outsl
cs
dec
xor
mov
repz
push
arpl
pop
cmc
lods
mov
mov
andb
mov
out
sub
xchg
test
stos
sbb
pop
xchg
and
xor
test
popa
cmp
cmpsl
std
jp
add
jnp
popa
pop
sti
call
ficoml
scas
add
iret
sahf
jl
scas
cltd
test
adc
mov
leave
clc
or
xor
fcoml
xchg
jnp
sub
addr16
mov
adc
fbld
sub
cmpsb
xchg
cli
arpl
sbbl
and
or
test
insb
jg
stc
push
jb,pt
neg
mov
ret
js
stc
push
inc
sub
jecxz
fbld
xchg
or
pusha
dec
mov
inc
cli
sub
hlt
jecxz
xlat
xchg
das
aam
inc
in
sbb
int3
scas
push
mov
push
jecxz,pn
arpl
shlb
loop
pop
repz
mov
adc
hlt
addr16
adc
mov
xchg
jg
test
icebp
addr16
cmp
mov
push
imul
addr16
jbe
mov
lcall
je
pop
js
cmc
out
and
and
pop
movsl
sub
adc
icebp
xchg
dec
sub
ret
fsubs
inc
add
xor
test
add
lock
ficompl
in
xor
rcr
mov
xor
ffreep
mov
sbb
inc
inc
jo
push
dec
in
adc
in
mov
inc
lcall
lods
fistps
xor
sbb
flds
jae
out
jmp
xchg
sub
fdivl
sub
cmp
std
add
adc
cltd
cmp
lret
dec
pop
into
lahf
pop
xor
test
cmp
xor
sahf
jae
mov
sahf
mov
pop
or
adc
add
sar
imull
add
in
mov
int
js
mov
test
lcall
jno
lret
dec
jle
stc
xor
jo
xchg
mov
dec
lods
inc
insl
daa
arpl
cli
cmc
jne
fnstsw
gs
sti
clc
shr
jbe
pop
out
or
push
cmc
lret
clc
ror
jae
fstpt
pop
jmp
jmp
shrl
xor
and
and
mov
and
fidivl
push
test
adc
addr16
cmp
xor
ja
mov
inc
xchg
xchg
dec
fdivs
mov
xchg
cmpsl
inc
aaa
lret
jb
lods
cmc
pop
sub
cli
cmpsb
nop
pop
aas
mov
jae
adcb
sti
testl
pop
cmpsb
test
xchg
sbb
scas
pop
inc
jle
xor
sub
sub
addr16
mov
xor
sub
cmp
xorb
jb
dec
cmpsl
cmp
pop
or
xchg
cmp
std
dec
sub
dec
jns
shrd
orb
rclb
fcomps
inc
sahf
push
pop
mov
push
mov
jne
dec
cmp
filds
xchg
or
ja
xchg
cmp
or
out
mov
cmp
test
xchg
jp
std
push
cmp
aad
xchg
addr16
gs
dec
mov
push
pop
punpckldq
idivb
sub
into
pusha
xchg
in
ss
xchg
adc
mov
fwait
xlat
mov
adc
mov
andl
inc
sbb
dec
push
ja
mov
insl
mov
lods
push
adc
lds
movsl
shlb
test
dec
jo
jae
outsb
adc
xchg
pop
xchg
sub
mov
fs
cs
outsl
int
inc
fstpl
mov
imul
fidivrl
jg
stos
mov
popf
add
lds
xor
mov
sti
add
lret
inc
pop
xchg
jmp
movsl
mov
ss
mov
push
push
push
push
cmp
out
bound
and
xchg
sub
push
and
xorb
popa
xchg
add
fcmovb
shll
or
mov
pop
call
push
add
lea
pop
sub
in
mov
insl
scas
cmpsb
adc
push
lcall
mov
xchg
and
mov
push
out
jmp
jp
adc
jno
inc
ret
xor
mov
add
rcr
and
mov
inc
jmp
xchg
fstl
ret
inc
push
imul
mov
and
sti
inc
push
add
bound
pop
jnp
lods
push
cld
mov
lods
add
in
js
ffreep
loope
call
mov
mov
mov
mov
mov
mov
jmp
scas
int
jge
mov
add
outsl
out
mov
icebp
out
push
in
pop
sub
fidivs
andb
add
test
add
rcll
movsb
mov
or
clc
scas
test
fdivrl
and
ret
lea
scas
mov
inc
fisttpl
imulb
out
lret
hlt
test
cld
in
fcmovu
xlat
mov
or
mov
push
sub
out
ret
add
mov
or
lret
dec
stos
sti
adc
aas
repnz
and
aas
push
cwtl
repnz
push
in
jno
pop
sub
adc
loop
push
and
xlat
pop
out
mov
imul
mov
mov
dec
int3
ret
inc
xchg
jg
dec
das
shll
cs
cmp
fidivrs
fstps
mov
scas
sbb
fisubl
pop
mov
jg
xor
subl
scas
pop
repz
std
push
and
mov
xor
mov
lock
xchg
ficomps
dec
jecxz
ret
and
push
xlat
xchg
adc
sub
in
add
xchg
push
fstpt
cmp
sti
das
popf
jo
cld
adc
and
addb
cltd
fisubrl
or
cmp
mov
adc
cmc
jge
xor
loope
and
aad
mov
jp
dec
mov
stos
mov
inc
jg
pop
or
mov
lock
dec
jb
imul
jo
mov
mov
and
adc
imul
adc
out
mov
sbb
out
cmp
punpcklbw
out
es
push
inc
xchg
lcall
test
push
std
fidivrl
ret
dec
dec
mov
mov
fcoms
stos
inc
jbe
sub
lea
mov
xlat
or
testb
mov
add
jne
aad
ret
jl
repnz
jae
scas
les
ret
mov
ret
rolb
and
mov
adc
inc
push
cwtl
rcrl
filds
sbb
nop
xlat
pusha
out
iret
adc
inc
ja
lock
dec
sar
scas
xorl
adcl
pop
sti
or
repnz
fisubrl
mov
stos
cwtl
xchg
iret
aaa
mov
andb
daa
inc
hlt
add
leave
arpl
call
sahf
add
jl
outsb
mov
inc
and
mov
or
scas
imul
icebp
push
addb
sarb
pop
inc
insl
jne
insl
mov
and
pop
frstor
aas
nop
icebp
lret
clc
rol
jmp
lea
cmp
mov
mov
ret
lods
cmpl
adcl
int3
enter
push
dec
xchg
mov
push
enter
sbb
lahf
inc
in
dec
enter
stos
lods
adc
imul
push
icebp
mov
popa
dec
popl
ret
sbb
test
dec
out
stos
mov
xor
out
popa
xlat
pop
adc
aam
ret
aaa
test
fwait
adc
cmpsb
cmc
cmp
and
mov
ret
test
pushf
mov
xchg
cmp
xchg
popf
rol
mov
xor
cmp
je
jmp
xor
stos
mov
mov
cmp
inc
mov
mov
mov
dec
xchg
sub
jae
aas
ret
pop
jns
leave
lea
fwait
push
add
pop
test
cltd
and
scas
jg
pop
roll
mov
dec
sbbb
test
in
sbb
mov
loop
or
js
mov
pop
fsubrp
xlat
test
push
jae
js
lcall
in
aaa
jl
mov
push
ficompl
js
add
sub
xorb
les
and
jl
mov
and
pop
idivl
cli
movsl
or
es
movsl
aas
dec
fwait
lea
add
hlt
jne
or
push
out
inc
pop
sbb
xchg
lods
and
int
test
adc
in
imul
mov
adcl
hlt
mov
fbstp
les
mov
mov
jno
cltd
jg
adc
or
fldt
xchg
mov
push
add
insb
mov
jg
test
scas
gs
mov
std
mov
dec
mov
push
push
mov
data16
xor
xlat
dec
test
testl
enter
jnp
add
mov
cmp
xchg
mov
or
enter
or
xchg
inc
mov
mov
filds
xchg
or
push
cli
xor
arpl
inc
fwait
sbb
andb
leave
lcall
jmp
adc
arpl
mov
lcall
fs
in
dec
cli
xlat
sub
jbe
mov
mov
mov
outsb
lcall
push
mov
mov
mov
bound
inc
outsb
loopne
cmp
push
push
dec
js
sub
pop
jmp
adc
subb
pop
push
adc
sbb
fs
adcl
outsl
pop
and
cwtl
ljmp
add
add
cmp
dec
nop
pop
aam
lods
jno
pop
adc
inc
add
sar
push
fnstenv
dec
out
mov
and
ret
lret
or
mov
lock
mov
jb
xchg
imul
aam
jle
lods
xorb
fscale
jnp
test
cmp
adc
jb
jae
or
loop
mov
dec
mov
jo
mov
ficompl
movsb
mov
sub
jb
jbe
test
jae
loope
pop
pop
xor
rorb
into
sbb
iret
jg
data16
mov
xor
pop
push
xor
jo
adc
dec
popa
or
mov
inc
pop
adc
scas
in
loope
push
xchg
es
push
add
clc
push
cwtl
fwait
aad
imul
std
mov
xor
mov
xchg
rol
cmp
loop
sub
dec
loope
lea
shrb
add
add
sub
fldcw
or
fucomp
mov
inc
pop
sub
subb
and
aad
cld
xlat
mov
xchg
into
popa
pop
and
inc
loope
add
fcomi
sahf
out
movl
mov
xor
test
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
jmp
fwait
adc
xchg
mov
lahf
xor
adc
push
repnz
loope
cmp
lods
popf
mov
add
jmp
mov
icebp
test
fmuls
push
xor
jp
adc
mov
adc
sub
xchg
std
mov
or
mov
sti
mov
data16
cmp
xchg
sbb
mov
push
divl
aaa
loop
sbb
sbbl
xchg
mov
lock
push
mov
dec
pop
mov
xchg
mov
inc
ss
insb
push
mov
xchg
or
movsb
inc
mov
dec
int
lods
test
lock
jle
mov
sbb
pop
aad
jle
push
dec
pushf
adc
imulb
sub
sub
adc
scas
cltd
repz
in
inc
mov
dec
ficoml
nop
xor
push
inc
popf
inc
scas
sbb
xchg
mov
fisubs
dec
shll
xor
and
fmull
xor
mov
mov
cmp
inc
aad
sub
inc
sarl
hlt
js
lock
xchg
cmp
test
mov
dec
or
sub
repnz
lcall
inc
add
mov
imul
je
jnp
adc
mov
into
cld
fcompl
pop
cmp
push
inc
and
adc
divb
es
gs
mov
and
bound
rcll
mov
jge
adc
sbb
push
or
sub
push
fwait
xchg
jns
xor
inc
jmp
mov
xor
lret
mov
into
sbb
cltd
cmp
inc
icebp
pusha
fs
jns
inc
pusha
and
idiv
xchg
push
cmp
bound
lods
xchg
stos
mov
jmp
and
in
xchg
sbb
pop
dec
sbb
shl
pop
xchg
dec
mov
sbb
out
mov
sbb
adc
jns
mov
stc
dec
xchg
subl
movsl
pusha
push
movups
pop
sbb
pop
fcoml
movsl
out
cmp
xchg
mov
xor
dec
xchg
fwait
test
shl
sarb
pop
and
iret
dec
dec
push
jmp
push
sahf
aaa
push
cs
dec
jg
pop
xchg
inc
mov
cmp
pop
jecxz
cmp
imul
dec
popf
in
xor
and
outsb
lea
frstor
lods
andb
int3
imul
setb
mov
xchg
cmpsl
outsw
jns
sub
fwait
or
xchg
outsb
inc
cs
inc
es
mov
loope
iret
lods
cmp
xor
gs
jno
xor
push
cmp
mov
dec
cmp
scas
or
test
test
ret
jge
pusha
jnp
rorb
pop
cli
and
add
or
add
jl
shrl
mov
popa
scas
dec
xchg
lcall
scas
das
test
xchg
cmpsb
scas
popa
mov
sub
std
mov
outsl
loope
ud2
clc
aam
mov
xchg
xchg
dec
leave
cmp
sbb
adc
sahf
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
jmp
into
or
cmpsb
mov
pop
in
adc
pop
inc
pop
inc
js
sarl
shlb
rcll
ljmp
mov
sbbb
fcomps
cmp
jl
sub
mov
mov
inc
ja
pop
neg
sub
adc
das
push
mov
xchg
dec
push
xchg
push
sbb
mov
push
std
ret
sub
mull
pop
sub
jbe
push
add
inc
pop
aaa
aaa
mov
stc
cli
dec
push
adc
xchg
popf
dec
jl
daa
gs
or
xor
mov
scas
cmp
in
fdiv
jmp
out
sbb
cmpl
push
fdivs
mov
xchg
push
push
in
sti
xchg
adc
aad
popf
jb
es
push
sbb
and
outsl
int3
das
imul
pop
add
cli
inc
outsl
sti
mov
add
jnp
xor
and
xchg
ret
cmp
daa
mov
bound
pushf
in
mov
iret
inc
add
xchg
das
jecxz
popf
sub
insl
scas
dec
sbb
jo
shr
dec
sbb
pop
popa
cli
shl
cmp
jecxz
push
add
pop
pop
add
ds
jg
aam
fnsave
xor
movsb
test
data16
xlat
bound
sbb
dec
andl
rorb
push
dec
dec
jo
mov
mov
jns
push
aam
fldcw
lahf
sbb
cwtl
or
aaa
out
data16
clc
push
adc
imul
sub
pop
xchg
xchg
fisubrl
ret
pop
or
and
in
push
mov
push
test
aam
pop
xor
and
jo
jmp
lret
movsb
jnp
and
cmp
add
push
mov
icebp
pusha
xchg
gs
pop
sbb
das
shll
and
push
add
insb
mov
aam
dec
hlt
lea
mov
rcr
out
mov
add
ret
aaa
in
inc
or
daa
ss
popa
gs
adc
shl
xor
mov
into
xchg
cwtl
dec
shl
add
ud0
mov
pop
lea
sbb
pushf
es
adc
push
push
xorl
loopne
dec
cmp
dec
mov
mov
xlat
push
xor
sbb
jmp
fiaddl
pop
pop
lea
data16
or
pop
xor
mov
adc
mov
dec
xchg
adc
mov
test
pop
jp
jae
outsl
mov
lea
ljmp
inc
mov
or
shll
jmp
pop
jae
mov
pop
dec
xor
jnp
mov
jo
imull
in
movsb
mov
sub
push
out
jmp
add
int3
jecxz
inc
je
jno
mov
fwait
test
das
insb
mov
sub
scas
or
sub
aaa
sbb
rcll
js
mov
lret
pop
inc
dec
ss
xchg
aam
jg
cmc
mov
lret
adc
push
lcall
insb
xchg
das
int3
cmpsl
inc
xor
and
clc
test
mov
pop
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
hlt
aam
mov
and
insl
inc
and
inc
add
mov
bound
inc
stos
pop
pop
xchg
adc
cmp
sbb
fisubrl
das
push
arpl
pop
outsb
movsb
int
outsb
aas
mov
lcall
jmp
inc
mov
ficomps
or
movsb
insb
stos
mov
mov
imul
fstp
out
inc
mov
add
clc
sub
fwait
dec
scas
mov
sbb
dec
int
pusha
test
cmpsb
jae
movsb
xchg
pop
sbb
mov
pop
push
icebp
sar
fdivrs
or
xor
fwait
pop
add
cmpsb
jmp
arpl
cmp
inc
dec
fildll
add
int
loop
pop
fwait
ret
mov
fdivl
mov
ja
and
adc
std
imul
push
outsl
sbb
imul
lea
jecxz
push
repz
lret
and
dec
mov
fdivrs
lea
fisubrs
aad
xchg
sub
dec
addr16
movsl
pop
imul
adc
or
negb
leave
jge
dec
enter
or
adc
sub
xchg
pop
dec
cwtl
sub
add
cltd
ljmp
in
fistps
mov
lock
lret
inc
ret
call
pop
inc
mov
push
push
insb
inc
and
or
mov
dec
mov
faddl
test
mov
adc
loop
push
call
push
mov
sub
ljmp
and
fistpl
out
pop
fistl
in
xchg
stos
jl
hlt
pop
js
dec
xor
cmc
std
not
test
xchg
lds
xor
popf
into
addr16
mov
cmp
insb
nop
loopne
inc
dec
push
add
inc
inc
dec
das
ljmp
fs
call
sti
lret
std
inc
cmp
and
mov
loop
sarb
and
les
out
pop
out
lea
cwtl
pop
mov
cmp
sarb
jns
add
mov
mov
dec
movsl
mov
push
inc
sbb
pop
lea
pop
push
mov
push
insb
pop
inc
cltd
xor
add
xchg
cmp
mov
push
xor
out
push
mov
arpl
sub
je
pop
mov
mov
pop
dec
sub
jo
outsb
pushf
mov
out
jmp
lods
hlt
xor
int
inc
ja
push
fimull
aas
push
movsb
dec
jns
pop
shll
inc
cmpsl
mov
inc
xchg
push
mov
and
fimull
jecxz
shl
test
in
rcr
test
or
popf
ljmp
dec
adc
add
xchg
sub
dec
xor
bound
stc
pop
adc
fcomi
xchg
and
les
loopne
jno
dec
add
test
shll
pop
adc
sub
cli
or
pop
mov
insb
pop
sti
cs
or
adc
or
push
mov
loop
pop
jno
sti
roll
pop
sarb
pop
shll
inc
fcompl
jns
xlat
jmp
xor
sub
pop
stc
out
cmp
lahf
xchg
aam
sub
cmp
mov
cmp
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
not
push
push
sub
mov
orl
or
jne
adc
jmp
enter
lea
popf
pop
cmc
sbbb
sbb
sarl
stc
and
cmpsb
pop
imul
mov
lret
xchg
xor
cld
idiv
fcmovbe
inc
stc
sbb
adc
lods
dec
pop
std
les
ds
jl
mov
sbb
pop
add
scas
adc
fisttpl
add
mov
aad
mov
xor
stos
and
sti
jle
in
test
sahf
sub
ljmp
push
shlb
fisubrs
jp
cli
ss
push
mov
insb
jne
cwtl
mov
and
daa
xchg
push
ss
or
cltd
gs
xor
fnsave
mov
add
sub
pop
jecxz
mov
pop
push
lods
jg
push
sub
sbb
cltd
leave
jp
pusha
inc
sub
mov
pop
bound
xchg
sub
fnstenv
insl
fnstsw
mov
xor
push
mov
lret
and
jnp
adc
out
mov
xor
test
push
subl
mov
jmp
scas
int
jns
push
cmpsl
jecxz
cmp
push
ret
inc
xor
cmpb
mov
cmp
push
mov
jle
cmpsb
mov
pop
subb
into
es
dec
mov
loopne
les
loopne
rcll
loope
xchg
das
leave
jnp
mov
sbb
inc
mov
lods
jge
mov
adc
orl
push
push
aam
cmp
call
xchg
xchg
gs
in
gs
push
lods
dec
fsubr
pop
loop
sbb
push
fwait
cmp
mov
pop
ficompl
test
adc
fs
shrb
fs
mov
pushf
repnz
cmp
mov
pop
mov
pop
mov
push
out
insl
scas
test
test
pop
sbb
lcall
jge
shlb
neg
inc
dec
sub
gs
fs
push
push
mov
fcompl
popa
inc
inc
inc
sahf
pop
dec
icebp
add
nop
test
mov
in
jg
sub
inc
inc
jecxz
or
pop
sahf
sbb
call
jmp
sti
shll
sub
addb
or
sbb
mov
movsb
mov
add
pop
xchg
dec
into
sbb
cs
jne
ljmp
leave
movsb
mov
test
testl
sub
pop
xchg
insb
push
mov
aam
cld
popa
insl
stos
dec
jns
mov
loop
push
dec
and
or
call
xor
xchg
iret
jecxz
mov
fst
mov
push
cmp
dec
rcr
rorb
add
and
sysexit
mov
in
mov
ljmp
loope
cli
mov
sbb
dec
push
and
aas
jp
xchg
pop
das
cmp
adc
test
fisubrl
sub
push
nop
testl
mov
mov
ret
xor
mov
mov
xor
and
div
mov
and
mov
notl
div
pushl
pop
mov
jmp
mov
mov
sub
sub
mov
mov
cmpl
movl
mov
mov
not
jmp
movl
cmpl
ja
push
push
pushl
push
call
sbb
add
xor
mov
sub
orl
sbb
adc
sbb
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
jmp
in
lahf
shrl
sub
outsl
jle
rdtsc
orb
mov
add
cmp
cmp
inc
leave
add
and
cmp
cld
test
pop
cmp
sbb
and
fs
xor
into
sub
adc
sub
xchg
mov
adc
enter
xchg
mov
outsb
xchg
inc
ror
jl
sbb
pusha
test
sti
lods
xorl
nop
insb
mov
ror
inc
lret
lea
jno
mov
int
sub
pop
and
in
adc
aam
xchg
and
mov
cmp
xor
and
stos
and
jmp
sbb
push
inc
cmpsb
push
dec
cmc
lea
stos
and
add
add
sub
jae
aaa
jecxz
and
lret
mov
jge
mov
pop
jge
addr16
sbb
cmc
pop
pop
fidivl
movsl
and
addr16
popa
mov
and
mov
jg
lcall
xor
push
in
and
imul
cmp
push
pop
mov
mov
xchg
jno
sbb
push
unpckhps
dec
sub
jns
orl
sahf
out
push
or
pop
adc
cli
cmpsb
pop
xlat
jle
sub
rolb
loope
data16
repz
fwait
daa
in
jnp
js
aam
xchg
jbe
cmc
sahf
js
pop
xchg
jne
retw
sbb
jle
lret
fbstp
ror
ret
inc
push
lahf
push
sub
pop
adc
out
sbb
pop
sub
add
or
enter
push
push
outsb
cli
bound
jle
mov
fldenv
cmp
fistpl
pop
jg
mov
popa
lock
fidivrl
push
xchg
ljmp
je
fs
and
sahf
push
push
cli
stc
mov
mov
push
je
lods
into
mov
pop
sub
loopne
testb
xchg
mov
mov
cld
mov
fdivl
into
lcall
cwtl
add
loopne
lcall
inc
js
stos
es
sbb
ret
repnz
test
shlb
mov
mov
in
into
hlt
lds
cmc
push
out
in
ficomps
push
pop
in
jle
jmp
sub
sbb
pop
inc
mov
lea
orl
jae
inc
xchg
rorb
daa
add
jge
lea
gs
xchg
mov
fdivrs
out
inc
mov
test
stos
dec
ret
add
xchg
hlt
insb
and
ret
push
add
pop
lcall
sahf
push
pop
negb
add
popf
or
stc
mov
scas
in
pop
sbb
mov
xchg
icebp
bound
dec
mov
mov
repz
inc
or
aad
lock
xchg
mov
out
mov
cmpsb
cld
call
das
mov
clc
inc
jnp
mov
add
inc
mov
mov
pop
je
mov
xchg
or
lods
fisttps
jnp
xchg
ja
outsl
jbe
jge
xchg
add
fldcw
mov
aaa
fcmovbe
or
dec
ret
inc
out
inc
iret
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
or
mov
xor
or
mov
jmp
add
mov
mov
cmpsl
outsl
inc
rorl
sbb
mov
xor
fists
outsl
mov
lret
push
lods
mov
mov
rorl
out
lods
xorb
pop
add
ret
mov
add
int
mov
mov
arpl
cmp
xchg
scas
jae
ss
sub
sub
lods
shlb
imul
mov
jb
xchg
mov
add
dec
subb
pop
mov
pusha
jg
jne
and
in
xorl
mov
lret
lcall
outsl
or
sub
pop
dec
shll
xchg
int
push
mov
pop
js
in
jno
pop
test
int
inc
lods
faddl
pop
cmp
xor
cmpxchg
adc
int3
pop
mov
and
sbb
add
dec
mov
xchg
shl
jmp
shrl
loope
dec
in
cld
into
xchg
push
bound
mov
cmp
jns
loope
cmp
popf
testb
push
lods
mov
addr16
ss
into
cmp
and
mov
out
or
ss
js
pop
test
push
lods
ljmp
cmc
or
aad
and
les
and
cmp
andb
popf
xor
int
jne
sub
das
adc
dec
push
addr16
and
add
and
push
pop
aaa
xchg
ret
int3
into
push
bound
pusha
mov
lcall
pop
sahf
add
in
lods
mov
addr16
pop
nop
fisttpll
jns
fistpll
and
cli
and
fwait
dec
push
mov
imul
cmpl
imul
jo
push
out
outsb
rorl
mov
push
pop
sub
and
out
sub
ja
adc
sub
rolb
lret
subl
popa
fmuls
push
sub
lea
sbb
cmpsb
push
sub
ja
xchg
push
inc
or
dec
xor
cmp
cmp
ja
aam
pop
fcom
bound
loope
gs
popf
rolb
push
dec
dec
fstps
cmpsb
stc
sti
fcmovu
push
mov
movsl
in
test
test
mov
clc
mov
pop
hlt
add
lods
and
push
aam
push
aaa
cmp
push
cmp
inc
mov
cmc
xor
cmpsb
jle
nop
arpl
sub
insl
inc
add
repz
jne
adc
mov
cmc
add
or
ljmp
inc
es
aaa
addb
fstl
jns
cwtl
or
sub
fwait
in
int3
icebp
jge
add
nop
pop
sbb
js
xlat
daa
aaa
hlt
cmp
and
pop
cmpsl
and
cmc
arpl
loope
fisttpll
loope
jo
sub
jnp
push
movsb
pop
adc
xchg
sub
hlt
mov
xor
div
xor
mov
push
add
xor
or
div
pop
mov
sub
mov
and
mov
sub
add
cmp
ja
push
movl
movl
mov
mov
imul
add
imul
mov
xor
xor
mov
sub
mov
mov
xor
push
jmp
jns
filds
dec
std
inc
jno
das
jno
sarl
mov
inc
jns
push
outsb
mov
lcall
arpl
hlt
aaa
repnz
or
xor
mov
ret
add
mov
in
out
pop
mov
sub
push
jns
gs
jge
movsb
js
imul
cmpsb
mov
fdivl
cwtl
stos
jns
or
or
lods
sub
scas
lds
mov
pop
jno
jmp
test
sti
push
dec
fs
jo
lods
and
jg
imul
xchg
xor
xor
pop
mov
imul
sbb
dec
mov
mov
jo
cmp
les
int
popf
pop
cmp
mov
inc
inc
es
mov
mov
jl
add
dec
sbb
in
pop
push
fidivs
cmpsb
scas
adc
dec
fwait
jg
sbb
pop
push
das
lahf
pop
ja
mov
push
or
mov
xor
dec
lcall
lods
in
out
stc
inc
jbe
in
push
sub
cmp
mov
inc
sbb
jp
stos
cmp
ja
push
xchg
inc
cli
fdivs
sbb
iret
aas
fistps
fldl
sahf
aas
lods
loopne
rcrb
pop
sahf
pop
outsb
hlt
movsb
insl
ljmp
cmp
mov
push
sbb
mov
int
insl
popf
or
mov
les
arpl
mov
mov
into
loopne
inc
push
inc
out
ja
insb
cmpps
mov
into
or
mov
xchg
or
dec
jg
jmp
mov
sarb
mov
popa
notl
movsl
dec
repz
sbb
adc
mov
dec
outsl
sub
and
fwait
push
outsb
lods
jg
sub
cmp
add
out
xchg
inc
mov
shll
loope
xor
xor
dec
cmpsl
loope
sbb
imul
lcall
mov
add
inc
repz
cs
fcoms
in
mov
out
in
ret
loope
mov
repz
ljmp
and
fistpll
mov
aam
and
repnz
imul
pushf
aad
or
xchg
pop
dec
pushf
aad
scas
push
sbb
inc
cmp
add
stc
loopne
push
cmpsl
and
rcrl
jbe
in
rcl
movsl
ficoms
aaa
das
pop
popf
sub
cli
lret
inc
ja
je
jns
mov
insb
xor
movsb
lea
fcomps
rolb
pop
mov
imul
lcall
xchg
sbb
push
sbb
test
xor
mov
push
mov
out
popf
dec
mov
stc
divps
lret
dec
adc
icebp
cmpsl
adc
popf
jo
jo
mov
cmp
out
icebp
in
mov
sub
inc
add
cltd
sbb
push
cld
je
and
fsub
insb
or
repnz
out
mov
scas
loopne
stc
sub
icebp
imul
adc
div
mov
mov
push
or
xor
add
lea
mov
mov
mov
mov
mov
xor
add
and
mov
xor
xor
or
mov
add
mov
add
xor
div
xor
mov
or
div
pop
sub
mov
and
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
pushl
jmp
jle
mov
lods
sbb
or
mov
fisubrl
dec
xchg
adc
xchg
sub
push
or
scas
and
adc
popf
jbe
pop
ljmp
cs
mov
mov
xchg
adc
in
je
cmp
push
ret
sub
jmp
pop
insb
adc
popf
in
pop
loope
psllq
stc
ret
dec
call
aaa
jae
push
jb
sub
jge
clc
mov
jbe
mov
adc
mov
imul
jmp
pop
jecxz
push
push
cltd
mov
ds
int
add
sarb
stos
pop
inc
jnp
ja
addr16
in
pop
pusha
mov
out
xor
call
jb
sbb
test
xchg
cwtl
and
and
cmp
mov
cwtl
inc
xchg
aad
lahf
addb
mov
sub
adc
iret
rcll
mov
mov
xchg
sub
stc
sti
mov
xchg
xchg
jecxz
aam
fcompl
and
pop
cli
push
into
movsb
sbb
int3
test
jno
and
jnp
or
inc
mov
pop
ljmp
push
hlt
pop
pop
in
add
xchg
pop
sbb
fists
ljmp
sub
push
popf
in
setp
daa
lret
clc
or
inc
pop
mov
jne
sbb
sub
bound
pop
jbe
or
xor
inc
xchg
push
call
pop
into
cs
cwtl
leave
add
imul
hlt
xor
pop
sbb
sub
cmpsl
jno
in
mov
jo
push
xor
popf
lahf
ret
movsb
mov
mov
stos
push
jg
in
or
or
sub
sbb
xchg
xchg
nop
sub
int
out
cs
pop
sub
xchg
cmc
pop
cli
inc
push
push
mov
sub
in
andb
pop
jl
lds
lea
iret
inc
pop
jns
lds
adc
inc
pushf
es
xlat
mov
popa
call
and
jg
jmp
xor
aad
xchg
cmc
leave
sbb
orb
jne
repz
sub
clc
pop
lods
lcall
mov
repnz
pop
mov
pop
lds
mov
cli
dec
push
mov
je
xor
jmp
mov
xor
pushl
subl
call
cmpl
mov
mov
jmp
not
cmpl
ja
push
call
sbbl
mov
adc
sub
sbb
add
sbbl
or
movl
xor
movl
adc
movl
cmpl
mov
movzbl
mov
movzbl
jmp
not
cmpl
jbe
push
push
push
push
push
push
call
andl
movl
or
add
sub
jmp
dec
mov
insb
mov
jg
dec
xor
sarl
lea
inc
in
lahf
jne
popa
sub
je
pop
push
in
mov
jbe
and
xchg
dec
loope
int
jb
fbld
frstor
or
and
ret
inc
fidivrl
inc
shl
cmp
dec
pop
jecxz
not
dec
add
cmpb
sbb
mov
pop
cmp
dec
jns
lods
dec
or
ds
testl
pusha
int3
add
fildl
cmp
lds
adc
xchg
test
sub
jno
or
mov
add
test
xchg
rorb
jns
push
mov
enter
lahf
xor
sub
fbld
sbb
jle
and
fwait
jb
add
outsb
rol
jmp
outsl
adc
outsb
fs
cmp
mov
lds
inc
push
outsb
mov
insb
lods
insb
int
inc
imul
cld
mov
mov
ret
jne
adc
cmp
and
fcmovb
mov
push
mov
and
cmp
jo
nop
mov
fbld
pop
in
xchg
mov
inc
inc
and
dec
mov
pop
adc
loope
xor
aam
loope
sbb
dec
sbb
push
movsl
add
scas
clc
or
jp
mov
xchg
out
mov
sub
add
add
pop
int3
xchg
movsb
popf
int
mov
icebp
pusha
daa
mov
pop
and
inc
and
adcb
inc
or
dec
je
mov
ljmp
or
not
test
repnz
inc
push
invd
test
adc
insb
les
inc
jmp
insb
inc
leave
and
sbb
dec
mov
clc
imul
pop
xor
xor
sahf
mov
add
mov
adc
and
out
gs
movsb
pop
ret
outsb
pop
xchg
popa
sub
js
xor
dec
cwtl
pop
mov
fstps
sub
sbb
add
sti
mov
or
mov
push
or
out
jge
ret
jg
pop
push
data16
shl
lret
pushf
aaa
xchg
roll
jecxz
jge
mov
inc
mov
jnp
in
mov
mov
and
orl
mov
subl
add
or
addl
mov
adcl
xor
xor
mov
and
movl
movzwl
and
movl
subl
mov
sbb
mov
xor
xor
div
adcl
mov
andl
xor
andl
add
movl
cmp
movl
jne
notl
movl
movl
movl
movl
jmp
push
adcl
push
orl
push
call
orl
dec
movl
jne
movl
cmpl
mov
mov
jmp
mov
movl
cmpl
jle
push
call
or
xor
and
or
adc
mov
sub
mov
sbbl
mov
addl
movl
mov
andl
call
lea
mov
mov
xor
add
sub
imul
lea
or
mov
cmpl
mov
movzbl
mov
jmp
mov
cmpl
jae
pushl
call
movzwl
sbb
mov
decl
neg
adc
sbb
xor
xor
xor
sub
decl
mov
mov
and
mov
mov
cmpl
mov
mov
movzbl
mov
jmp
notl
movl
cmpl
jle
push
push
push
pushl
pushl
call
and
adcl
add
sbb
add
decl
xor
jmp
pop
sti
or
cwtl
cmp
cltd
xchg
pop
inc
jbe
cmpl
test
mov
or
pop
pop
and
imul
adc
mov
xor
cwtl
fsubrl
jns
fwait
jecxz
std
mov
insb
test
leave
xchg
xor
popa
js
xor
lcall
aas
out
jmp
jge
and
or
mov
mov
xor
dec
ret
pop
or
pcmpeqw
jge
sub
mov
jp
jmp
pop
mov
push
inc
sbb
mov
ret
xor
jp
pop
std
push
lods
adc
stos
enter
mov
leave
mov
xchg
and
jp
hlt
movsb
mov
mov
or
cwtl
fwait
sbb
mov
pop
mov
fmuls
in
sub
rol
in
xlat
mov
push
cmpsl
push
xor
testb
cmp
and
mov
pop
dec
in
mull
push
xor
into
rolb
pop
xor
imul
mov
scas
add
jnp
iret
mov
adc
adc
or
cmp
and
nop
xor
mov
fdivl
fwait
or
dec
mov
repz
mov
fs
mov
jb
out
hlt
mov
add
mov
sub
into
dec
outsb
cmp
cwtl
fwait
push
and
std
jge,pn
sbb
sbb
aad
pushf
das
or
in
fwait
inc
cmp
jecxz
and
dec
and
pop
mov
jb
xor
arpl
lcall
cmpsl
mov
or
ljmp
leave
rclb
lds
pop
cmpsb
xchg
xchg
repnz
shl
mov
icebp
arpl
push
imul
aaa
pop
inc
les
lret
mov
add
inc
mov
mov
fsubrl
jnp
lahf
jns
lods
mov
call
scas
pop
mov
xlat
lods
pop
loope
std
mov
adc
mov
shrb
ds
loope
push
and
lahf
add
pop
cmpsb
push
testb
lds
mov
pop
pusha
jbe
sahf
jne
sbb
ss
mov
jmp
mov
bound
addr16
xor
sub
shl
cmpl
not
movl
jmp
movl
movl
cmpl
ja
push
call
adc
xor
xor
or
xor
or
xor
inc
not
xor
cmpl
movl
mov
notl
jmp
movl
movl
cmpl
jne
push
push
call
or
movzbl
add
mov
add
xorl
add
xor
or
sub
sub
orl
mov
xor
xor
sub
sub
shr
cmpl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
call
subl
xor
adc
xor
or
mov
or
mov
movl
mov
or
mov
cmpl
mov
mov
jmp
not
cmpl
ja
pushl
pushl
call
xor
xor
mov
sub
sub
adc
movl
sbb
xor
subl
and
adc
mov
adc
mov
andl
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jg
pushl
call
xor
xorl
mov
or
xorl
adcl
xorl
shrd
cmpl
mov
mov
mov
jmp
mov
movl
cmpl
jge
push
push
pushl
call
or
add
movl
mov
add
mov
sbb
subl
and
shr
and
mov
sbbl
mov
xorl
xor
xor
decl
or
mov
adcl
push
pushl
movl
lea
push
andl
shl
movl
call
lea
push
orl
mov
addl
mov
lea
push
movl
mov
orl
lea
sbbl
mov
adcl
mov
andl
mov
push
call
push
push
pushl
call
sub
mov
cmpl
mov
movl
mov
jmp
movl
mov
cmpl
jae
pushl
push
pushl
call
movzbl
adc
adcl
adc
neg
sub
mov
mov
mov
andl
shr
subl
shl
or
mov
addl
xor
subl
mov
adc
lea
cmpl
notl
movzbl
mov
not
jmp
mov
cmpl
jne
push
push
call
movzwl
add
xor
mov
sub
mov
neg
xor
movzwl
adc
mov
mov
lea
xor
mov
mov
mov
sub
and
mov
movzwl
adc
mov
sub
lea
xor
cmpl
movl
movl
jmp
mov
cmpl
jge
push
push
pushl
push
push
call
sbb
sbb
sub
and
orl
sbb
movl
jmp
std
je
mov
mov
cmp
das
mov
sarl
push
lock
pushf
fmulp
lock
ret
fmul
push
inc
les
push
jnp
sbb
mov
inc
icebp
xor
xor
ss
adc
dec
mov
test
loopne
repnz
or
dec
loopne
repz
sub
int
sbb
clc
std
sarl
add
nop
mov
xchg
nop
adc
lret
data16
sarl
sub
inc
mov
scas
add
jns
cmpsl
push
push
mov
rorb
and
fdiv
dec
imull
idivb
mov
btr
negb
mov
push
xor
cs
fildl
push
sub
lcall
js
sbb
jae
mov
cmp
pusha
xor
sbb
rcl
rcrb
add
push
insb
arpl
repnz
sbb
icebp
in
aam
jnp
xchg
sub
adc
cli
je
cs
pushf
out
cmp
xor
aad
sbb
sahf
sbb
or
or
fldcw
pop
pop
mov
push
dec
sti
or
dec
xchg
sbb
out
iret
cmpsb
xchg
and
adc
fidivs
dec
dec
lods
outsb
pop
ss
jnp
out
cli
xchg
pop
or
aam
or
out
bound
cmpsb
repnz
dec
add
inc
ret
push
testb
fbld
xor
in
in
inc
adc
add
pop
pusha
xor
sbb
lock
mov
insl
enter
xlat
inc
jo
out
fldcw
sahf
dec
ffreep
push
and
xlat
pop
out
fldt
mov
and
das
adcb
fmul
lock
in
pop
jno
sub
jg
mov
or
outsb
stos
dec
leave
mov
dec
mov
arpl
or
and
jnp
pop
mov
dec
cmp
sbb
and
mov
jg
cmp
pop
out
js
sub
dec
pop
inc
jmp
shll
loop
sub
imul
insb
icebp
hlt
loopne
push
sahf
jae
enter
test
push
sbb
pop
or
aaa
ffreep
push
int3
inc
jmp
mov
lods
ret
ss
fldt
popf
fisttpl
movl
and
movl
movl
add
mov
mov
movl
push
subl
push
push
push
subl
call
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jl
pushl
push
call
andl
xor
and
or
xor
or
sbb
add
mov
xor
mov
sub
movl
sbb
cmpl
mov
mov
movl
jmp
mov
cmpl
jae
call
mov
mov
sub
sub
dec
movzwl
add
mov
andl
mov
add
mov
mov
mov
sub
mov
sbb
mov
sub
sbb
or
or
mov
mov
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
push
call
mov
mov
or
mov
or
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
movzwl
mov
add
mov
jmp
std
aas
jge
jge
jge
int3
pop
stos
cmp
mov
mov
or
mov
test
mov
or
inc
out
dec
cmpl
test
dec
mov
adc
add
sahf
sbb
pop
pop
pop
orb
or
sarl
sbb
push
mov
or
add
xor
jae
jo
mov
push
insb
mov
mov
aam
enter
xchg
aad
sbb
push
xor
nop
pushf
mov
into
cmp
in
push
imul
push
add
out
lods
jl
and
add
add
or
xor
xchg
and
jo
pop
pop
xor
rolb
daa
negb
inc
jae
xchg
mov
lahf
test
xchg
shll
push
xchg
adc
sub
add
or
in
fcoml
cmp
sub
sahf
repz
out
lods
dec
mov
shlb
sbb
mov
jge
jae
nop
pushf
pop
cmc
cmp
pop
iret
scas
sarl
pop
sahf
or
dec
push
lret
push
shlb
stos
mov
in
adc
adc
ja
lcall
jg
ret
das
popf
and
xchg
adc
jle
xor
mov
xchg
mov
sub
adc
aaa
dec
pop
int3
cmpsl
or
roll
lea
pop
bound
cli
mov
cmp
mov
or
dec
jg
xchg
leave
lods
push
jl
pop
jno
fwait
sub
nop
or
out
lods
adc
ss
das
jo
cmp
rolb
push
mov
out
pop
orb
jecxz
dec
sub
add
data16
pop
mov
inc
sbb
xchg
test
or
ds
mov
cli
adc
ljmp
push
cltd
add
je
or
cmp
les
ficoms
mov
movsl
jnp
mov
and
push
aaa
pop
ljmp
leave
lods
inc
adc
roll
test
and
pop
cld
outsb
sub
lret
test
add
inc
rcrb
fcompl
out
mov
sbb
inc
in
fxch
sub
out
ret
cld
inc
jo
add
movzwl
push
sub
mov
xor
inc
mov
movzwl
mov
and
movzwl
cltd
idiv
pop
movzwl
cltd
idiv
mov
movzwl
movzwl
and
mov
movzwl
cltd
idiv
mov
cmp
je
mov
mov
jmp
jg
xchg
ret
popl
cmpsb
in
or
mov
sarl
dec
pop
cmp
mov
or
pusha
mov
mov
inc
test
addr16
sbb
mov
push
cmp
adc
mov
inc
int
push
cmc
testl
les
adc
or
mov
lods
addr16
add
jbe
nop
jmp
mov
xchg
iret
jmp
stos
add
cmp
inc
push
movnti
lret
xchg
jo
xor
scas
sub
sub
in
fidivl
push
call
push
sbb
cltd
stos
pop
iret
or
jl
cmp
and
jne
pop
pop
inc
lods
lcall
mov
xchg
add
and
in
xor
out
test
out
sub
push
cmpb
in
shl
jnp
cmp
and
and
mov
xor
xchg
push
and
and
cmc
imul
leave
pop
mov
pop
pop
pop
pop
shr
clc
cmp
loope
pusha
enter
js
jp
mulb
cmp
adc
lret
loope
mov
insl
cmp
cmp
xor
call
pop
in
scas
push
sbb
ja
lcall
push
xor
pusha
cwtl
fsqrt
out
dec
pop
cmpsb
mov
mov
rcll
pop
fmuls
in
cmp
shlb
inc
out
cmp
mov
mov
cmc
insb
mov
adc
pop
sub
mov
inc
aad
jns
out
loop
mov
test
bound
data16
mov
mov
clc
mov
pop
inc
repz
loope
inc
stc
imul
mov
pop
mov
out
xchg
xor
inc
mov
pop
pop
xchg
jecxz
cmp
add
pop
icebp
mov
and
xor
pop
sahf
lcall
fwait
push
dec
mov
xchg
jl
dec
adc
inc
mov
push
rclb
xchg
stos
dec
lods
mov
es
lea
push
inc
ja
cmp
mov
adc
mov
xor
sbb
mov
lahf
leave
sbb
sbb
mov
dec
cmp
or
sti
lock
fcomip
test
jne
out
push
clc
jns
lret
sbb
shr
repz
fidivrs
movsb
roll
xchg
add
add
mov
fwait
in
jno
pop
sbb
mov
mov
jge
mov
je
sub
xchg
xor
xchg
add
popa
and
mov
out
arpl
pop
pop
loop
inc
jo
ret
sarl
and
xorb
or
xchg
cwtl
mov
dec
clc
loope
stos
inc
negl
or
or
push
cmpsb
fsubl
lds
or
in
adc
jmp
int
call
push
mov
mov
or
iret
icebp
je
inc
push
leave
cmp
popa
out
ret
push
xchg
lret
lahf
test
add
fidivs
mov
sbb
mov
or
xchg
rorl
idiv
test
dec
lods
jno
mov
in
push
xchg
pop
cmp
sbb
and
sub
stos
cwtl
adc
xor
pop
or
fsubs
scas
push
int3
xchg
push
das
and
sub
pop
jg
inc
jnp
sarb
insl
sub
mov
enter
pop
jb
popf
not
jae
arpl
xchg
ret
das
int
mov
inc
push
pop
xchg
dec
cli
add
xor
cmp
aam
rorb
or
mov
icebp
mov
cli
push
daa
dec
testb
cmp
cmpsl
jle
cmpl
push
sbb
dec
xor
inc
mov
lods
stc
lock
jge
outsb
adc
js
fsubl
clc
and
add
jg
push
leave
outsb
xor
mov
popa
in
xor
cwtl
jne
pop
out
sub
ja
int
add
xor
out
lea
mov
or
or
xor
xchg
test
outsl
or
adc
stos
add
mov
xchg
dec
push
hlt
ffree
dec
cmpsb
test
cli
jg
mov
xor
jle
enter
add
cli
je
xlat
add
xchg
repz
fstpl
dec
jmp
add
jp
add
ss
sub
out
stos
or
aam
aam
int
stos
test
xchg
shrl
gs
mov
xchg
iret
stos
pop
cwtl
jp
inc
mov
mov
mov
pop
aas
mov
adc
lods
push
dec
and
jbe
mov
mov
mov
xor
jmp
lcall
mov
add
cmp
int
jno
dec
sarl
ret
add
cltd
mov
jmp
xor
jnp
pushf
mov
adc
sbb
mov
push
bound
cmp
dec
push
shrl
push
sbb
shrl
sub
loop
add
adc
and
repz
imulb
and
icebp
jg
lret
mov
jmp
cvttps2pi
in
sbb
sub
mov
lahf
in
clc
or
push
hlt
inc
mov
je
test
mov
into
imul
pmulhuw
fisttpl
xor
mov
into
or
imull
jl
adc
cld
mov
or
loopne
dec
sub
roll
or
inc
cmp
mov
pop
xchg
xchg
jge
pop
scas
hlt
xor
fwait
dec
xor
and
mov
test
jp
adc
xlat
mov
lcall
mov
cmp
cmp
cmp
pop
movsb
adc
sbb
lods
xor
pushf
xlat
bound
fwait
lahf
scas
aad
adc
rorb
mov
jg
inc
cmp
cli
lods
bnd
xor
xor
pop
arpl
lret
xchg
push
push
insl
add
adc
leave
adc
pop
imul
dec
sbb
out
push
lret
fsubrs
enter
cmp
fstp
call
test
fnstenv
mov
lret
cltd
aam
push
dec
xor
pop
into
xchg
jp
int3
dec
nop
xor
mov
loopne
in
dec
pop
push
mov
dec
das
inc
lahf
sbb
notb
add
sbb
loope
mull
movsl
mov
lret
movsb
pop
enter
mov
adc
les
insb
or
xor
fidivs
pop
pop
pop
leave
pop
les
ror
ljmp
push
mov
sub
pop
mov
popl
mov
or
sub
sub
test
push
cmp
and
or
sub
pusha
xchg
push
jl
dec
test
es
mov
mov
mov
dec
sbb
fwait
hlt
sti
bound
push
sbb
outsb
pop
push
or
adc
mov
sub
push
push
repnz
add
inc
pop
into
or
cmpsl
dec
xchg
lea
xchg
add
xor
mov
cmp
jne
cmp
je
jmp
sbb
cmpsl
popf
or
or
sti
dec
dec
sarl
int
add
out
jp
and
push
xchg
or
inc
sti
data16
sbbl
push
addr16
jmp
repz
das
popa
xor
loope
sub
popf
pushf
and
inc
neg
cmpl
lods
ljmp
jecxz
adc
xchg
sbb
lods
enter
mov
ljmp
add
pop
cmp
or
xchg
out
mov
clc
push
sbb
xchg
add
popf
ficompl
inc
push
xchg
icebp
fbstp
in
fildll
rcrb
ret
cmpsl
lds
mov
xor
mov
mov
jae
movl
into
test
imul
ret
fmull
mov
adc
sahf
cs
cmp
xchg
push
cmp
xor
jl
fildl
mov
add
dec
add
mov
jle
adc
adc
shlb
push
shrb
es
xchg
mov
pop
pop
mov
les
int3
bound
popf
addl
out
xor
movd
enter
sub
jge
lret
popa
sub
enter
push
adc
jne
lea
or
js
insb
add
shrd
pop
sbb
pop
insl
int3
enter
cltd
adc
cmp
or
xchg
popf
out
mov
xchg
mov
dec
jo
cmpsl
sbb
mov
adc
fbld
scas
sbb
push
jmp
test
sbb
jmp
pop
enter
in
mov
mov
and
popf
sbb
outsb
cpuid
xchg
mov
leave
stc
mov
scas
lock
inc
pushf
mov
mov
cmc
fsubrl
or
lret
sbb
sub
push
fwait
test
add
and
xchg
xchg
cmp
lahf
ds
fcomps
sub
loope
nop
ljmp
sub
xchg
mov
bt
or
lock
andl
ljmp
jecxz
pop
inc
sar
mov
sub
push
inc
push
test
mov
cmp
jmp
xchg
push
mov
cmp
je
mov
mov
xor
jmp
mov
mov
insl
movsb
sub
add
test
mov
or
mov
aad
mov
add
and
push
cmp
pop
rcll
fadds
pop
rcl
adc
mov
sub
int
scas
jl
out
mov
rcrb
xor
xlat
cmp
arpl
sub
mov
pop
adc
push
xchg
imul
dec
sbb
or
xor
stos
or
jnp
inc
in
pop
mov
loopne
cmp
popf
pop
movsb
shlb
ret
mov
sub
inc
fldl
scas
jns
ja
insb
xchg
push
push
pop
loopne
xor
out
and
mov
jp
rorb
cmp
inc
hlt
xor
jbe
ret
mov
test
pop
xchg
pushf
push
mov
xor
sub
jg
mov
jmp
add
sbb
jp
call
sub
shl
xchg
iret
xor
stc
dec
pusha
lods
js,pt
out
daa
pop
call
fdivl
push
in
sbb
test
and
mov
mov
push
dec
sbb
shr
sbb
or
xchg
mov
test
dec
xor
shrl
stc
mov
popa
inc
icebp
xor
inc
xlat
popa
ljmp
sbb
iret
xlat
xor
cmp
jo
fisubs
aaa
lret
lahf
cmp
mov
sbb
sub
adc
add
loopne
cmp
outsb
sar
ret
push
repnz
cmp
mov
jle
or
inc
cmp
xlat
xor
nop
mov
and
jns
mov
cmpsl
inc
mov
fdivr
cmp
push
inc
adc
cmpsl
mov
cmp
iret
jae
loope
cmpsl
je
adc
sub
xchg
pop
pushf
sahf
mov
adcb
arpl
lock
mov
lds
sahf
and
sub
mov
push
inc
mov
pop
std
and
adc
add
and
test
xchg
test
insl
xchg
cmp
movsb
fcomip
fwait
lods
in
jecxz
lcall
mov
jbe
push
pop
pop
movsb
xlat
add
leave
dec
cmp
mov
push
mov
xchg
sti
testl
bnd
mov
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
jmp
out
mov
mov
data16
jno
pop
sar
and
mov
mov
mov
add
cmpsl
mov
sub
push
fs
adc
sahf
cld
jl
mov
into
add
shlb
lods
popa
addb
xchg
outsl
std
lods
cli
lods
pushf
mov
push
and
mov
fsubl
pop
sbb
pop
das
ds
lods
cmpsb
leave
insb
lods
test
cli
clc
dec
push
pop
jmp
lahf
and
dec
pop
jbe
inc
xor
arpl
jae
iret
adc
stc
inc
pop
mov
jmp
push
jl
pop
aas
stos
push
xor
mulb
pop
and
adc
mov
xchg
ds
or
sti
sbbb
mov
xchg
inc
mov
mov
loopne
test
sub
pushf
xchg
in
adc
aaa
les
mov
mov
out
mov
mov
lcall
jo
mov
jl
outsb
popf
inc
inc
inc
jmp
gs
gs
subb
data16
xchg
push
cmpsl
xlat
je
pop
scas
pop
cld
loop
popa
fists
fwait
sti
imul
mov
ds
add
mov
out
int3
push
pop
aad
test
adc
out
pop
ljmp
xlat
mov
aas
es
in
movsb
push
mov
mov
sbb
arpl
sub
push
shlb
dec
test
sub
fisubrs
jno
int3
mov
jo
lcall
popa
mov
pop
jno
mov
mov
int
sbb
push
das
push
inc
jecxz
or
dec
mov
jl
int
das
je
imul
sub
ror
ret
arpl
out
loope
sbb
imul
in
rol
xchg
pop
cwtl
jl
clc
and
sbb
insb
popa
lret
xlat
dec
xchg
shrl
pushf
notb
clc
xor
push
data16
dec
and
jle
dec
fs
dec
popa
pop
fdiv
adc
repnz
mov
xchg
push
jbe
jno
xchg
nop
clc
lcall
push
lds
mov
jb
pop
in
mov
outsl
pop
xchg
stos
cwtl
push
xor
loop
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
jmp
mov
std
rcrl
mov
xor
pop
sarl
adc
xchg
scas
cmp
sahf
pushf
dec
add
pop
pop
dec
mulb
and
lcall
jne
shl
test
push
mov
scas
pushf
pop
sub
adc
loopne
dec
insl
xchg
rolb
mov
adc
mov
jecxz
or
stc
aas
fwait
data16
rcr
out
cmp
aas
hlt
jge
or
jae
xchg
popa
pusha
out
push
dec
sbb
and
in
add
lret
xchg
cld
fistl
mov
stos
lahf
sub
jb
sbb
cmpb
pop
cmp
push
ljmp
cmpsb
lods
inc
fdivr
mov
in
cmp
popa
shrb
add
jge
dec
jecxz
and
dec
ja
inc
jo
sub
pop
fwait
jnp
push
leave
adc
das
mov
out
cmc
xchg
and
and
rol
sbb
mov
cs
cmpsb
xchg
mov
ljmp
scas
or
cmc
jl
pop
xor
or
jno
ret
test
mov
rol
in
loope
jl
cs
arpl
mov
sbb
pushl
pop
sub
int3
movsl
rorb
jp
push
push
xor
jne
gs
and
inc
pop
push
push
shrl
cmpsl
out
or
xchg
ljmp
and
xchg
test
xor
cmpsl
icebp
dec
xchg
xor
jg
or
and
das
stos
aad
cld
cltd
cli
imul
and
mov
lcall
pusha
xor
adc
bound
jp
test
lock
sbb
enter
add
sarb
movsb
fsubrs
iret
mov
scas
into
jbe
mov
adc
int3
xor
test
popa
pop
xchg
sbbl
repnz
outsl
lds
push
dec
cmp
sti
push
and
fcompl
adc
sub
push
fstl
push
jnp
aad
sub
xchg
fldcw
lods
outsb
jecxz
jle,pt
outsl
ret
push
and
or
shlb
loopne
mov
mov
nop
fidivs
call
sub
fisubl
imul
mov
scas
add
daa
adc
xor
movsb
roll
loopne
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
cmp
insl
scas
mov
or
cmp
bound
mov
arpl
or
jmp
adc
push
outsb
rclb
dec
adc
ret
jg
add
dec
sti
fcomps
andl
or
sbb
pop
out
test
lods
push
mov
xor
es
mov
dec
in
lods
fisttps
push
jnp
xchg
int
mov
ss
std
add
xor
lods
inc
or
or
jg
leave
mov
ljmp
inc
inc
sbb
bound
or
mov
xor
push
xchg
push
leave
jne
pop
jne
out
ret
adc
jae
pop
js
mov
and
es
repnz
roll
aam
iret
adc
lea
dec
jle
scas
mov
scas
daa
sbb
dec
pop
xchg
xor
fcoml
and
dec
sbb
or
sub
pushf
mov
mov
loop
jmp
out
jnp
js
ret
cmpsl
sbb
sbb
int3
subb
mov
adc
mov
dec
sahf
es
imul
pop
or
pusha
rcrb
lock
insl
adc
jge
int3
add
push
adc
sbb
imul
xor
sbb
sub
jo
or
jl
pushf
cmpsl
adcb
test
or
fstps
cs
mov
loop
or
pop
lret
sbb
mov
or
icebp
sahf
mov
out
pop
insl
mov
ljmp
test
pop
in
mov
pop
rcrb
sbb
jno
mov
imul
enter
push
mov
cmpl
lods
ret
shr
xor
sub
mov
and
xor
jb
or
cltd
pop
int3
pop
dec
aam
adc
mov
cmc
jl
aas
cmp
mov
cmp
ud2
or
push
ror
mov
insl
add
pop
cld
stc
fisubrs
ljmp
xchg
es
cltd
imul
test
in
fdivl
add
fstp
mov
push
call
add
mov
xchg
pop
mov
mov
pop
lea
mov
add
stos
pop
inc
sub
sub
sbb
push
popa
inc
mov
into
xor
or
mov
mov
jmp
dec
fistpl
jb
lea
das
mov
jecxz
mov
or
lock
jmp
mov
dec
sub
push
jmp
push
push
xchg
fwait
in
pushf
lahf
lahf
dec
sub
cmpsb
jb
out
int
test
stos
cs
pop
jge
sbb
xchg
ja
fmuls
negl
pushf
cmpsb
jnp
push
mov
sahf
xlat
mov
mov
addr16
jae
lcall
dec
dec
dec
popf
jno
iret
call
test
adc
push
pop
imul
mov
scas
fisubrl
or
dec
pop
inc
add
cmc
mov
in
sub
insb
mov
cmp
sub
ret
aad
into
das
bound
push
jnp
cmp
dec
xlat
fwait
add
jle
rolb
mov
aad
add
andb
sbb
sbb
xor
mov
and
and
sbb
and
mov
push
inc
cmpb
ja
mov
sbb
cmpsl
cmp
lea
jmp
dec
movsl
cld
je
mov
xchg
pop
dec
mov
ljmp
mov
jno
ficompl
ja
mov
sub
adc
mov
test
sbb
imul
adc
cltd
shrl
jge
mov
mov
addl
push
loopne
adc
mov
mov
add
in
ljmp
popa
leave
and
mov
stos
lods
loop
ja
inc
negb
xchg
lcall
add
pop
mov
adc
push
ret
mov
xor
cmc
popa
or
negb
push
mov
xor
add
fcomps
aam
mov
cmc
addr16
loop
icebp
lods
repnz
fildll
pop
pop
cmc
mov
mov
sub
mov
mov
xor
xor
xchg
mov
push
or
lds
add
push
faddp
push
daa
cmpb
xchg
ja
out
ficompl
std
jne
sti
cmp
into
mov
add
test
imul
jl
fisttpl
repz
mov
jmp
lock
pop
cwtl
jmp
xchg
and
cmp
test
and
and
inc
and
or
adc
mov
and
and
or
mov
mov
mov
add
xor
add
xor
cmp
ja
mov
mov
and
sub
add
shr
mov
movl
mov
and
push
xor
pop
div
mov
imul
cmp
je
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
in
je
jge
in
jge
scas
or
enter
test
mov
or
push
xchg
inc
rcll
dec
int3
lea
in
adc
test
mov
jb
or
lods
push
cmp
pop
cmp
mov
jae
lea
inc
bound
shl
ljmp
and
dec
and
sbb
sub
pop
std
mov
test
loopne
fwait
aam
jb
dec
jnp
fdivl
cmc
push
push
mov
dec
shll
jb
clc
dec
and
lea
test
or
es
pop
or
sub
xorl
imull
mov
and
ljmp
pop
pop
fadd
pop
test
les
pushf
mov
dec
push
pop
push
lret
mov
xor
or
inc
fwait
adc
lods
cmp
loopne
pusha
cmp
and
add
in
ret
je
sbb
cli
adc
mov
adc
test
xchg
cmp
cmp
cmp
in
test
ret
inc
imul
addr16
mov
shll
cmp
sbb
sbb
lret
loop
mov
pop
cmpsl
xchg
sti
cwtl
pop
scas
xor
jle
test
dec
and
fdivl
or
push
rclb
mov
mov
lcall
mov
mov
xchg
pop
xchg
and
dec
sbb
cmp
in
clc
std
pop
add
jl
nop
and
jne
sbb
testb
jge
imul
fimull
cwtl
stos
push
push
sti
mov
loopne
lods
cmp
bound
xlat
je
loopne
jbe
in
jle
adc
sbb
pop
dec
dec
in
aad
mov
cwtl
inc
inc
dec
pop
cmp
push
or
shlb
jmp
mov
stos
daa
adc
std
pop
pop
inc
fcompl
mov
xchg
cmp
fmull
pop
out
cmp
pop
arpl
scas
jb
cltd
sub
adcl
mov
pop
inc
mov
fs
add
sub
jo
mov
add
sub
dec
imull
jo
std
mov
add
and
ljmp
push
and
xchg
sbb
push
cmp
sub
or
aad
push
xchg
mov
xchg
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movzwl
jmp
jno
lods
bound
mov
out
scas
push
mov
rcrb
jl
add
icebp
adc
lods
sbb
and
mov
xchg
test
mov
mov
ja
loop
dec
imul
dec
fwait
mov
lock
cltd
pop
or
mov
aam
cmp
mov
ja
or
aad
iret
ljmp
in
rol
rcll
cmp
lcallw
dec
repz
sbb
xor
popf
mov
sub
stc
pop
stos
jmp
lahf
lea
movsb
stos
pop
mov
adc
push
cmp
movsl
mov
sbbb
dec
mov
push
mov
mov
dec
sahf
mulb
testb
push
leave
push
xchg
adc
rcrb
jae
scas
aad
mov
adc
pusha
or
sub
push
mov
lcall
cmp
sub
ret
pop
xchg
sub
dec
pop
cmp
pop
adc
jns
mov
cmpb
xchg
lahf
aaa
ret
cmp
xor
pop
mov
xchg
adc
out
data16
outsl
cwtl
push
jae
into
cmp
push
cmp
mov
and
adc
adc
insl
mov
lea
outsl
push
dec
dec
inc
jle
fsubl
int3
pop
cmp
push
insb
jb
movsl
add
rorb
out
scas
jl
test
pop
inc
or
mov
lods
cmpsl
inc
pop
xchg
cs
pop
test
jle
cld
stos
xchg
push
test
adc
push
push
mov
popf
orb
xchg
sbb
test
fsubrs
sbb
lcall
and
xchg
js
test
mov
int
push
inc
and
loopne
inc
rol
sbb
adc
and
loopne
gs
cmp
fldl
outsl
loope
in
xchg
push
cld
cmpsb
in
mov
shll
mov
sbb
imul
loope
or
sbb
sbb
dec
or
add
test
cmp
jg
sbb
decl
fistl
push
enter
dec
pop
xchg
loope
loopne
mov
push
test
fisubl
or
scas
stos
sbb
rorl
test
inc
push
and
clc
add
aam
icebp
sub
and
mov
xor
mov
imul
mov
sub
mov
add
mov
mov
shr
and
jmp
jbe
popf
test
adc
sti
sbb
sbb
mov
loope
xor
arpl
lret
arpl
aaa
and
push
xchg
mov
dec
gs
lret
adc
xchg
popf
cmpsl
leave
mov
std
add
jle
push
int
test
sbb
or
pop
ror
jge
pusha
iret
mov
mov
sub
mov
lock
js
bound
ss
out
std
mov
xlat
fimuls
sbb
ret
out
lcall
mov
fistpl
adc
push
or
insl
int
jecxz
daa
fs
paddsw
scas
imul
push
movsb
sbb
cmpb
cmpl
jle
das
cli
mov
mov
imul
fldcw
test
loopne
xor
sbb
sti
cltd
xor
jb
es
into
movsb
mov
mov
cmp
test
xchg
fisttps
mov
cmp
dec
in
data16
lds
pop
les
xor
jg
iret
rorb
pop
and
pop
aam
lcall
fstps
xor
jbe
stc
ja
cmp
subb
or
nop
add
ja
pusha
scas
andl
xchg
dec
popf
not
mov
lcall
pop
dec
inc
in
xchg
pushf
jge
lea
or
jne
push
adc
std
imull
fsubrp
add
and
outsb
ficoml
xor
add
ds
in
fwait
jp
stos
mov
xor
sbb
push
sub
or
adc
push
mov
mov
inc
movsb
daa
adc
rcll
int3
subb
out
inc
fcoms
jp
sti
fisttps
repz
xchg
hlt
out
xor
ljmp
inc
dec
cmpsl
inc
add
mov
and
repz
lret
cmp
and
cmp
inc
push
scas
stos
fdivl
lods
fcmovnbe
inc
sbb
fstpl
in
pop
mov
dec
adc
les
fmulp
les
mov
mov
imul
and
push
add
test
push
insb
and
daa
inc
add
enter
daa
inc
add
scas
sarl
xor
mov
cmp
jbe
lea
push
lea
push
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
jmp
inc
cli
add
jno
xor
fildll
cmpl
test
mov
adc
outsb
jge
push
das
les
mov
inc
sti
jne
dec
inc
and
movsb
ljmp
adc
add
or
lret
lcall
sarl
outsl
movsb
pushf
fidivs
inc
into
mov
xchg
loop
sub
mov
cmc
loopne
mov
repz
into
cmp
push
out
test
add
sahf
mov
movsb
pop
xchg
mov
movsl
xchg
and
cmp
lds
xchg
in
xchg
bound
out
jnp
pop
mov
pop
cmp
mov
fcmovnu
test
jb
cmp
mov
subb
inc
adc
pop
cli
dec
mov
and
fsub
rcr
lock
push
ret
in
mov
inc
cmpsb
mov
add
sub
ret
jecxz
jge
dec
adc
or
push
ss
arpl
sbb
push
int
or
mov
fisttps
mov
shll
mov
jnp
scas
mov
shrl
fistpll
popa
adc
adc
adc
gs
xchg
and
xor
mov
je
xor
pop
adc
lahf
push
movsl
or
dec
sbb
inc
notl
jo
inc
in
xchg
xlat
rcr
and
pop
test
cmc
daa
push
outsb
jmp
adc
fildl
inc
fldenv
pushf
into
mov
xor
les
push
cwtl
jnp
test
bound
sub
insb
mov
loopne
cmpsb
pop
ret
fbstp
pop
or
push
jg
repnz
xchg
aam
mov
jnp
inc
mov
pop
andb
xchg
mov
icebp
mov
test
inc
rorb
stos
add
popa
pop
stos
or
mov
shrb
das
outsb
fcomps
adc
clc
push
push
psubw
loopne
shl
out
test
inc
mov
nop
ret
jbe
in
mov
lods
roll
fiaddl
data16
push
mov
pop
scas
push
mov
inc
shrb
mov
pop
imul
and
jne
push
push
aad
and
or
and
inc
mov
jle
call
xchg
push
add
push
mov
out
dec
sub
add
in
ret
jl
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
jmp
mov
ja
mov
mov
push
xor
sarl
std
add
cli
dec
int
cmp
add
shrb
sbb
cmp
lahf
push
insb
in
dec
push
pop
lahf
je
pop
movsb
or
jmp
aaa
stc
repnz
out
lock
pop
call
fs
dec
xchg
mov
mov
adc
sahf
movsl
addr16
jmp
cmc
push
insb
aaa
pusha
loop
xchg
ret
xchg
cmp
cltd
inc
cmp
sub
dec
jne
pop
pop
add
sbb
test
ss
mov
stc
ret
pop
mov
movsb
imul
ss
enter
rclb
dec
repnz
push
loope
push
sbb
xchg
ficoml
inc
mov
xchg
jo
lahf
aad
enter
push
and
xor
out
daa
adc
and
pop
xchg
emms
mov
mov
loopne
ret
dec
ficompl
ds
hlt
fwait
js
stc
or
mov
lock
enter
fpatan
adcb
insb
mov
call
pop
shl
dec
out
push
sub
out
sub
xchg
mov
adc
sub
stos
iret
push
dec
sub
scas
frstor
adc
push
inc
andb
fsts
mov
inc
shr
pop
inc
rolb
pop
or
sti
shrl
ja
jno
lea
xor
cmpsl
arpl
xor
inc
add
pushf
mov
imul
dec
ljmp
lods
sub
add
aas
or
ds
imul
pop
movsb
mov
insl
test
dec
clc
pop
lock
pop
sti
add
sbb
test
xor
sbb
jge
jp
xchg
or
cmc
jle
cltd
scas
adc
cltd
pusha
lahf
sbb
push
xlat
sub
adc
cmpsb
aam
inc
test
repnz
loope
xchg
pop
xorb
dec
psubb
lret
out
es
imul
insb
push
ss
clc
jecxz
xchg
rorb
jnp
cmp
dec
and
xor
and
and
mov
std
xor
xor
mov
add
daa
jae
xchg
xchg
lcall
in
cmp
ljmp
adc
sti
xchg
fsubp
jae
and
jmp
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
jmp
push
sub
stos
scas
sbb
jno
insb
and
jle
mov
mov
insl
or
mov
bound
in
and
or
dec
cmp
orb
daa
mov
adcb
addb
rcl
lret
lock
insl
pop
rcll
xchg
and
xor
addr16
out
in
cli
sbb
and
notl
xchg
add
dec
adc
or
xchg
fisttps
stos
inc
inc
icebp
out
and
pop
fadds
mov
cmp
js
outsb
jg
lret
mov
pop
loope
mov
movsl
in
sub
fistps
inc
mov
aam
sbb
dec
xchg
cld
ret
push
adc
jo
pop
inc
xchg
je
fwait
lret
sub
mov
gs
xchg
es
cli
shlb
pop
and
divb
pushf
xchg
add
jno
adc
cmc
cs
ss
sbb
mov
loope
pop
pushf
mov
int3
aam
jae
sti
nop
test
cmp
pop
popf
lock
rcrb
stos
cmp
inc
mov
jge
lcall
cmp
ljmp
sub
adc
jp
call
dec
mov
ss
or
clc
hlt
pop
jbe
sarl
xchg
nop
fnstcw
adc
mov
sahf
sub
mov
lcall
xchg
or
out
adc
push
stos
loop
xchg
decl
addr16
inc
cmp
aaa
pop
jle
in
jmp
xchg
sbb
push
pop
mov
lret
test
outsl
or
push
out
sbb
frstor
adc
mov
mov
cmp
enter
mov
xchg
mov
push
movhps
jb
lods
jmp
pop
cmp
adc
xor
push
xchg
outsl
push
idivb
push
push
loopw
push
xchg
pop
sbb
ret
mov
in
pop
hlt
test
loopne
inc
lcall
add
lods
mov
mov
cmp
insl
jb
jb
jno
outsl
mov
mov
aaa
loop
dec
sub
loopne
das
dec
lret
jecxz
data16
adc
idivl
sbb
or
es
xchg
loop
mov
push
stos
inc
or
sahf
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
xor
push
push
movzbl
add
mov
push
movl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jg
call
sub
movzwl
or
adc
add
sbb
movzwl
add
movl
mov
add
mov
mov
cmpl
movl
mov
mov
jmp
mov
cmpl
jae
push
push
call
mov
xor
xor
sbb
xor
or
or
sub
and
add
add
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
call
mov
xor
sbb
mov
sub
mov
mov
sub
and
sbb
xor
addl
add
mov
xor
div
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
xor
add
mov
xor
or
sub
imul
sbb
or
sub
subl
not
mov
xor
movl
and
sbb
sub
mov
cmpl
movl
mov
movzbl
jmp
movl
mov
cmpl
jae
pushl
pushl
pushl
call
subl
negl
mov
mov
sbb
and
add
mov
or
movl
movl
and
mov
mov
mov
sub
add
xor
imul
mov
mov
sub
sub
xor
cmpl
movl
movl
movl
not
jmp
movl
cmpl
jge
push
push
pushl
push
push
call
neg
xorl
sbbl
adc
andl
inc
sub
mov
neg
movl
movl
movl
mov
sbbl
mov
xor
mov
sub
mov
xor
xor
cmpl
movl
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
push
call
sbb
subl
andl
sbb
or
xor
mov
imul
sub
mov
sub
adcl
mov
movl
xor
mov
notl
xor
incl
jmp
mov
pushf
xchg
add
cmp
mov
sbb
nop
add
jae
sub
mov
lea
adc
mov
les
adc
pop
lcall
dec
movl
or
pushf
sbb
pushf
push
cwtl
je
and
stos
scas
into
mov
pop
xlat
mov
push
sbb
and
les
test
clc
sbb
nop
and
pop
push
loopne
ss
inc
int3
adc
test
inc
rclb
or
pop
or
add
add
adc
mov
xor
ret
insl
repz
xor
and
add
lret
imul
pusha
jb
sbb
or
mov
pop
or
sbb
cmc
out
xchg
test
frndint
mov
cmp
mov
test
out
ret
in
hlt
jecxz
lret
sub
push
call
inc
fistps
inc
dec
lcall
pop
inc
pusha
repz
and
loopne
adc
adc
sub
dec
fsubs
stos
fwait
dec
nop
and
mov
mov
cltd
pushf
sub
repz
sub
sub
shrb
movsb
push
sbb
dec
shlb
jae
mov
dec
in
fnstenv
fs
movzbl
pop
test
jbe
test
add
mov
adc
xor
push
sub
test
inc
push
jne
jne
jg
lahf
sub
out
and
mov
add
in
mov
int3
nop
lock
lods
jmp
push
dec
or
cmpsl
nop
arpl
jnp
fdivl
push
fs
dec
aaa
lret
push
mov
sbb
cmp
and
pop
lahf
jns
mov
pop
popa
notb
jne
lea
add
dec
or
shll
sub
test
subb
out
fildll
lret
add
sub
stos
sub
lea
xlat
dec
and
icebp
adc
xor
xchg
fnsave
mov
hlt
cs
mov
fistl
popa
adc
out
mov
xchg
xor
cs
pop
sub
lahf
popa
bound
xor
xor
sub
push
pop
fwait
mov
enter
adc
ja
mov
jge
js
aaa
div
mov
xor
mov
adc
mov
subl
mov
xorl
lea
xor
or
adc
mov
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
jle
push
push
call
add
orl
and
sub
mov
mov
add
andl
adc
mov
mov
orl
sub
xor
sbb
imul
add
dec
mov
sub
mov
cmpl
not
mov
mov
mov
jmp
movl
cmpl
jbe
push
call
add
add
movzwl
xor
subl
movl
subl
mov
andl
xor
xor
movzbl
or
jmp
adcl
sbb
mov
outsl
cmp
mov
and
dec
pushf
pop
pop
jae
mov
adc
jae
dec
dec
and
jbe
scas
and
imul
xchg
lods
loope
das
jle
xor
xchg
movlps
xor
cmc
add
shl
adc
lcall
in
test
sbb
js
jecxz
jno
xor
sbb
cmc
push
or
cmc
addb
enter
inc
sub
cmpb
cmp
mov
dec
in
imul
cmp
push
inc
inc
int
mov
enter
mov
pop
aam
imul
into
mov
pop
push
mov
loop
enter
cwtl
cld
mov
in
sbb
jno
inc
stos
cwtl
insb
push
leave
push
pop
loopne
imul
adc
mov
dec
repnz
jno
adc
orl
push
lahf
mov
cmpsb
mov
scas
cmp
jbe
in
arpl
mov
repz
ret
cmp
pop
xor
shrb
incl
into
sti
cmp
stc
cld
push
dec
or
test
add
adc
cmp
js
sub
inc
or
xor
scas
inc
adc
adc
mov
jb
fs
xchg
jmp
mov
mov
and
cld
movsb
lock
mov
push
aaa
imul
fwait
movsl
inc
or
icebp
jl
mov
mov
pop
pop
test
je
test
idivl
scas
das
stc
push
lret
hlt
daa
xor
mov
and
cmpsb
cmc
mov
fnstenvs
subl
sub
rcll
aas
outsl
mov
pop
xchg
and
ja
pusha
dec
dec
gs
and
and
sbb
add
arpl
mov
mov
push
adc
subl
cmpsl
popf
lea
gs
out
jecxz
inc
jb
dec
dec
push
das
jno
lds
mov
adc
dec
pop
stos
mov
outsl
push
test
mov
mov
dec
adc
dec
ds
pop
popa
push
nop
add
xor
mov
arpl
push
or
inc
push
imul
scas
sarl
shlb
add
xchg
stos
jp
jne
jae
repnz
dec
lret
ss
outsl
mov
and
push
and
mov
mov
add
xor
cmpl
movl
mov
not
jmp
movl
cmpl
jb
push
push
call
dec
inc
andl
andl
mov
xor
mov
mov
sbbl
movl
adcl
mov
or
imul
and
mov
sbbl
sub
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
pushl
pushl
call
xorl
not
sbbl
adcl
neg
add
sbbl
mov
andl
imul
add
mov
xorl
and
xor
or
mov
sbb
movl
mov
or
mov
mov
add
mov
addl
xor
subl
div
cmpl
movl
not
jmp
movl
movl
cmpl
jg
push
call
neg
or
add
sub
xor
or
orl
andl
or
mov
sbb
sub
mov
subl
mov
xor
jmp
mov
sbb
mov
cltd
outsl
jb
mov
mov
jns
fldl
in
jne
pusha
dec
xchg
cmp
push
adc
xor
cmp
repnz
dec
les
lret
jne
scas
sub
adc
pusha
aad
add
push
mov
jb
dec
clc
ljmp
mov
jecxz
cmp
shlb
shll
and
jnp
ret
adc
jno
inc
pop
nop
rorb
dec
ret
ja
lods
xchg
scas
sub
fadd
jo
xlat
inc
cmp
mov
push
stos
test
sub
icebp
cs
mov
test
ja
jbe
rcrb
lods
xchg
add
push
iret
pop
fmuls
or
stc
sub
sti
jb
add
push
mov
js
and
cmp
adc
pop
sbb
cli
or
inc
jle
lods
rcll
add
adc
push
lds
aam
pop
fstps
stos
xor
ja
mov
enter
mov
adc
sarl
jmp
or
imul
inc
push
mov
jmp
popf
loop
fldenv
dec
shll
test
jmp
out
mov
cmp
insl
fs
pop
mov
or
pusha
jg
and
jb
jbe
test
jae
mov
jns
adc
ja
lock
imul
rolb
xchg
jbe
push
mov
call
arpl
imull
movsb
push
inc
pop
xor
jg
xor
mov
and
loopne
lock
je
mov
es
std
dec
pop
mov
add
sahf
gs
xchg
mov
cmp
cs
dec
out
xchg
jge
jmp
out
and
sbb
or
xchg
test
es
mov
and
test
pusha
xchg
movsl
hlt
or
push
adc
test
sbb
addr16
ljmp
and
cli
xchg
jb
xlat
xchg
std
sbb
es
add
iret
mov
jbe
outsb
cmpsl
jo
adc
sub
aam
loop
pop
push
cmp
jle
cmp
push
jne
mulb
pop
jae
add
xchg
dec
push
test
test
insl
mov
call
addr16
sub
cmpsb
loope
cmpsl
cwtl
xor
push
xor
cmpl
mov
movl
jmp
movl
cmpl
jb
push
pushl
push
push
call
xor
xorl
mov
or
mov
mov
xor
mov
xorl
adc
dec
xor
push
pop
xorl
div
shr
and
push
cmpl
mov
not
not
jmp
movl
cmpl
ja
push
pushl
pushl
push
call
xor
xor
add
or
sbb
or
cmpl
mov
mov
jmp
mov
mov
cmpl
jl
push
pushl
push
call
xorl
movzwl
add
mov
adc
sub
adc
sbbl
xor
or
mov
xor
pop
sub
mov
movl
mov
or
and
orl
add
cmpl
movl
mov
mov
mov
jmp
mov
cmpl
jge
push
call
orl
andl
xor
xorl
mov
xor
mov
and
mov
sub
neg
mov
adcl
movl
cmpl
movl
movl
jmp
movl
cmpl
jb
pushl
pushl
call
sbb
subl
xor
xor
and
adc
cmpl
movl
mov
not
mov
jmp
movl
not
cmpl
je
pushl
push
push
call
andl
or
xor
and
xorl
or
xor
jmp
sub
aaa
xchg
dec
aas
adc
jne
push
inc
sub
mov
cmp
clc
imul
sti
sbb
and
or
sub
xor
pop
adc
jbe
push
and
adc
cmpsl
push
mov
dec
push
je
das
dec
adc
adcl
out
iret
negb
xchg
sbb
or
dec
sub
xchg
cli
fwait
mov
clc
mov
jnp
scas
xor
xor
push
xor
cmp
push
lret
call
inc
neg
loope
and
fdivrs
lahf
in
pop
inc
jo
lcall
insb
mov
pop
adcl
dec
pop
int3
add
das
lcall
lods
sub
dec
je
adc
call
mov
ljmp
std
mov
aaa
cmp
roll
cmp
mov
in
add
movsb
rcll
xchg
mov
mov
sbb
les
lcall
adc
jnp
inc
jo
push
stos
bound
sbb
pop
dec
adc
inc
jns
jnp
dec
outsb
sbb
push
aas
dec
pop
mov
sti
enter
repz
mov
lds
mov
pop
push
pop
icebp
xchg
ret
rcl
pop
xor
dec
loope
out
stc
ret
in
mov
dec
adc
mov
fidivrl
mov
sub
div
mov
jmp
test
imul
push
js
xor
dec
ret
sti
mov
mov
movsb
cmp
or
mov
jb
xchg
jae
aaa
or
imul
xor
mov
aas
add
insl
push
test
push
loop
and
inc
jbe
cmp
mov
cmc
std
cmpsl
outsl
lret
mov
outsl
lods
dec
fwait
push
mov
dec
fdivr
xorl
or
call
sub
mov
push
out
pop
popw
lahf
aaa
pushf
lods
popl
mov
test
test
out
das
clc
add
clc
jae
das
cli
out
add
jbe
jmp
pop
fmulp
jne
jmp
dec
push
in
and
inc
push
movsb
cmp
out
sub
add
mov
leave
push
push
pop
add
fadd
lcall
in
sahf
adc
xor
mov
inc
out
ljmp
dec
es
inc
hlt
fiaddl
add
xor
xor
mov
sub
imul
movl
cmpl
movl
not
movl
movl
jmp
mov
cmpl
je
push
pushl
push
push
pushl
call
sbb
mov
add
sub
dec
adc
mov
sub
mov
sub
mov
mov
sub
and
mov
add
imul
imul
movl
mov
sub
subl
add
push
call
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
call
xor
or
or
mov
orl
adc
xor
adc
mov
cmpl
not
mov
movzwl
jmp
movzwl
movl
cmpl
jle
push
pushl
push
push
push
push
call
mov
sbb
mov
or
add
or
sbb
and
mov
mov
or
movzwl
or
mov
subl
xor
subl
div
mov
sub
and
cmpl
movl
movl
jmp
movl
movl
cmpl
je
push
pushl
call
sub
xor
mov
or
add
mov
or
decl
add
lea
sub
mov
sbb
movl
movl
sub
mov
mov
xor
mov
xor
cmpl
mov
movl
movl
jmp
movl
cmpl
jne
pushl
push
pushl
pushl
call
xor
add
mov
or
mov
adc
and
xor
sub
add
mov
sub
adc
sub
xor
or
sub
mov
adc
lea
neg
mov
mov
mov
sbb
mov
or
imul
cmpl
movl
movl
movl
jmp
movl
cmpl
je
pushl
call
xor
or
add
adcl
adcl
dec
xor
or
sub
mov
imul
xor
cmpl
mov
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
call
andl
xor
xor
adc
or
or
negl
and
sbbl
mov
sbb
andl
and
cmpl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
call
and
mov
mov
sub
add
subl
add
mov
sub
mov
xor
add
mov
movl
cmpl
movl
mov
notl
mov
jmp
movl
cmpl
jbe
push
push
push
push
push
call
add
or
xor
sbbl
sbb
adc
movl
cmpl
mov
movl
movl
movl
jmp
movl
cmpl
jae
pushl
pushl
push
call
sub
or
sub
and
sub
dec
incl
mov
mov
sub
xor
movl
movl
cmpl
movl
movl
movl
mov
jmp
movl
not
cmpl
jg
push
push
push
call
and
xor
adc
or
sbb
add
mov
sub
mov
mov
xor
xor
xorl
mov
orl
call
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
pushl
pushl
pushl
pushl
call
adcl
orl
or
orl
dec
sbbl
sub
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
jmp
negb
mov
mov
or
and
sarl
push
idivl
pop
xchg
inc
pop
nop
add
lcall
imul
fnclex
test
or
mov
adcl
cmp
into
push
push
mov
push
in
in
outsl
push
popf
lea
cltd
andb
jne
mov
fisttpl
sbb
xor
dec
and
sbbb
xor
xor
test
in
push
repnz
xchg
stc
or
adc
sbbl
mov
jnp
xchg
fisubl
mov
daa
sub
cmp
inc
jbe
pop
dec
in
sbb
bound
mov
ss
mov
sub
das
les
fwait
cmc
fildl
pop
mov
gs
mov
jecxz
shl
ret
jle
sbb
dec
insb
int
dec
cmp
inc
cld
cld
push
push
pop
xorl
pop
mov
int
jg
lock
sbb
mov
scas
push
rorl
xchg
ds
mov
cwtl
ss
jge
mov
insb
jno
mov
mov
insl
faddl
push
loope
test
push
mov
and
inc
add
mov
call
pop
mulb
xor
adc
iret
jecxz
or
ficomps
fsubs
pop
xor
dec
adc
push
cmpsb
not
mov
cmpsb
xorb
sti
insb
aad
test
jbe
pop
popf
jb
lret
jns
mov
cld
cmp
pop
xchg
xlat
mov
sarb
stos
int3
mov
jae
xor
stos
stos
pop
xchg
gs
pop
movsl
mov
pop
pop
xchg
lret
inc
test
aam
dec
push
je
jge
ret
popf
shlb
std
push
xor
push
xchg
popf
js
stc
push
mov
cmp
add
lds
mov
imul
shlb
xchg
mov
stos
mov
push
shrl
jno
dec
mov
lea
in
ret
cld
je
je
movsl
sub
test
mov
jmp
cld
mov
or
lret
push
fmuls
popf
aaa
fldl2e
dec
inc
push
stos
push
out
das
std
dec
cmp
xor
outsl
std
movsb
in
hlt
dec
stos
in
enter
call
in
push
pop
or
outsb
cmpb
inc
push
insl
testb
mov
push
mov
cmp
jne
mov
mov
jmp
mov
or
popf
lea
xor
into
subl
mov
mov
pop
or
mov
aaa
lret
or
das
push
push
imul
addb
add
notb
mov
mov
pop
push
mov
xchg
lock
jae
pop
out
adc
outsb
outsl
and
sbb
ss
mov
adc
mov
lods
inc
xor
lahf
pop
pop
push
sahf
ja
sti
or
test
inc
lods
repnz
pop
dec
popa
xchg
push
adc
cmpsb
cmpsb
add
pop
xor
adc
adc
sbb
and
jno
dec
ds
push
insl
scas
jnp
mov
jno
ja
loop
cs
rcll
or
rcll
push
mov
imul
jbe
js
outsb
repnz
fsubs
aam
fcmovb
cmp
sub
and
add
inc
pop
lcall
xor
nop
repz
daa
aad
sub
rorb
xbegin
adc
fistps
out
ja
mov
and
sub
gs
fisubrs
fildl
repnz
and
mov
jo
addr16
fcom
xlat
lock
inc
pop
mov
out
push
orb
stos
xor
sbb
out
push
inc
xchg
mov
fwait
jb
out
sub
jmp
je
or
aad
pop
push
iret
pop
xchg
add
fcoms
sbb
dec
mov
es
aas
pushf
and
mov
cltd
xchg
mov
mov
xor
mov
cld
and
xchg
fldcw
sub
jae
fidivl
imul
loopne
push
int3
cmp
jg
ss
inc
lock
push
and
adc
pop
fadds
mov
inc
mov
daa
push
dec
imul
jl
pop
pusha
push
and
dec
push
or
cmp
xor
fidivl
sti
push
inc
xlat
fiadds
ficompl
jmp
pop
mov
sbb
loopne
in
pushf
push
imul
cmpsb
clc
sbb
jge
cwtl
lret
inc
push
push
rol
mov
cmpsl
lcall
adc
push
pop
fsubl
and
movsl
test
mov
push
jnp
adc
jle
sahf
rcll
sub
xchg
lds
jbe
mov
xor
mov
jmp
dec
inc
imull
jns
gs
loopne
cmp
mov
sti
adc
sarl
push
or
inc
rorl
test
cli
mov
and
popl
jb
sbb
push
movsb
ljmp
popa
xor
sbb
push
jbe
cmp
add
into
loopne
mov
pop
cmp
mov
les
popf
ficompl
dec
mov
dec
jbe
fiaddl
pop
js
xchg
jge
iret
jmp
movsb
add
out
xchg
ret
sbb
lods
insl
addr16
outsb
movsl
data16
pop
in
cmp
inc
cmc
adc
ret
sbb
add
pop
fmull
jg
in
popa
jne
jbe
jo
add
aas
pop
fwait
mov
in
fcomp
xor
test
pop
mov
adcb
push
int3
insl
imul
cmp
jmp
and
je
cli
fnsave
xchg
and
fwait
push
arpl
ret
clc
popa
insb
jne
jl
jp
fwait
xchg
xchg
push
mov
push
sub
sub
mov
push
push
mov
dec
fwait
testb
jg
inc
xlat
xor
std
stos
xorl
cmp
enter
pop
jne
sbb
mov
xor
xchg
jne
movsb
sbb
ds
out
aaa
outsb
nop
lea
ds
add
jnp
xchg
scas
mov
dec
int3
imul
bnd
pop
imul
adc
and
add
inc
pop
mov
es
sub
in
gs
push
mov
jmp
xor
dec
and
mov
sbb
mov
add
fmuls
pop
fs
loope
lds
cltd
pop
mov
mov
pusha
lret
push
pop
popa
notl
mov
sbb
mov
cmc
sbb
test
mov
lahf
cmp
stc
jg
xor
or
mov
mov
scas
testb
test
push
bound
loop
pushf
mov
popf
push
xchg
dec
test
adc
repz
adc
shlb
cmp
sbb
xor
repz
mov
data16
mov
pop
mov
push
jnp
andb
je
lret
out
adc
ds
outsb
iret
lcall
aad
lahf
in
mov
xor
imul
loop
fstl
test
xor
jb
addr16
mov
cmpsl
es
fcoml
adc
jnp
adc
xchg
dec
pop
call
mov
jmp
push
push
lods
push
lods
mov
push
mov
lock
or
mov
add
mov
add
out
test
sahf
ja
rcrb
and
int3
outsl
and
sbbb
ss
and
jnp
loop
leave
sbb
lcall
ja
xchg
ss
movsb
xchg
sti
add
pop
pop
jae
cmp
movsb
inc
ret
mov
mov
jnp
and
fmuls
xlat
xchg
xlat
stos
sarb
mov
stos
fstl
xrelease
lret
sbb
push
gs
xor
inc
sub
xchg
inc
sahf
and
mov
xor
inc
mov
test
call
sbb
int
fsubl
push
xchg
mov
adc
mov
popf
stos
and
jecxz
sbb
push
sbb
push
dec
cmp
in
inc
fwait
rcl
and
ds
outsl
cmp
inc
es
sbb
sub
sbb
push
mov
in
pop
mov
fwait
xor
test
mov
clc
jp
leave
aad
pop
cltd
cmp
mov
sbb
jne
addps
ds
iret
fnstsw
fdivrl
or
cmpsb
loope,pn
frstor
mull
adcb
sbb
xchg
pop
mov
adc
jmp
shl
xlat
icebp
js
aaa
inc
icebp
adc
ja
add
push
nop
and
imul
mov
jecxz
adc
nop
out
stos
call
shrl
iret
pop
dec
pop
push
fmuls
xchg
sub
outsl
js
cs
repnz
fidivl
and
in
sub
repnz
sbb
push
jp
and
adc
jg
sbb
fsubrs
mov
fsts
dec
or
xchg
movsl
dec
push
fcmovnbe
xor
rcrl
callw
jmp
sub
mov
ret
xchg
push
dec
sbb
mov
dec
mov
fsubl
loopne
clc
ja
imul
pop
push
mov
sbb
outsb
jns
pushf
into
xchg
xchg
sti
mov
xchg
jns
aaa
mov
nop
dec
call
fstl
aad
sub
inc
dec
loope
insl
testb
inc
pop
cmc
add
in
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
jmp
insl
inc
push
in
js
jge
and
aas
xchg
add
sarl
in
pop
xor
in
add
adc
xchg
sub
popf
add
add
jp
inc
mov
or
sbb
jae
sub
xchg
test
and
out
cltd
mov
mov
fcoms
inc
dec
jmp
int
sti
int
outsb
push
jmp
dec
out
nop
repnz
ja
pop
pop
jmp
mov
imulb
andl
xchg
test
pop
cld
mov
inc
enter
xchg
mov
mov
mov
jae
ret
and
inc
cmp
imul
rol
movsl
cltd
mov
test
or
cmp
fs
les
test
cmp
insl
xor
and
je
outsb
mov
adc
dec
ljmp
and
mov
push
stc
in
xchg
jne
mov
test
movb
mov
arpl
cltd
dec
ret
cwtl
aad
pop
les
stc
lcall
subl
mov
scas
insl
inc
xchg
cmc
lods
daa
lahf
aad
add
push
xor
ss
xor
repnz
jno
imul
lahf
loope
paddusw
add
test
jae
sbbl
sub
and
outsb
outsb
push
mov
test
fisttpl
dec
jns
inc
mov
fst
push
xchg
pop
xchg
in
in
out
in
sti
pop
mov
mov
stos
shr
mov
test
cmp
pusha
arpl
mov
ljmp
xchg
jge
pop
xor
mov
sbbb
test
push
stc
insb
inc
mov
lods
pushf
addl
dec
enter
bound
test
hlt
in
lds
adc
and
test
dec
dec
cmpsl
hlt
dec
aas
pop
sbb
das
adc
out
xchg
and
inc
repz
mov
cmc
xchg
dec
xor
push
push
mov
out
mov
ret
ja
into
es
orb
jmp
mov
int
cmp
push
ficompl
or
xchg
dec
push
data16
cs
cmpsb
enter
sbb
jo
push
inc
cmc
unpcklps
adc
decl
decl
inc
add
test
pushl
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
jmp
dec
gs
hlt
addr16
jge
sub
call
mov
xchg
push
pop
push
push
in
xchg
ja
data16
pop
cld
push
insl
int
std
sub
mov
dec
mov
jae
pop
arpl
xlat
flds
lret
push
out
lods
outsb
cwtl
hlt
loop
mov
add
add
push
mov
je
push
push
xor
ret
ret
jae
jle
cmp
xchg
mov
enter
add
test
loopne
jp
repnz
jg
roll
dec
clc
cmp
push
mov
outsb
cld
pushf
or
xchg
adc
or
xchg
jl
inc
mov
push
cmp
dec
int
xchg
loop
lea
mov
rolb
les
imul
cmc
fists
in
enter
mov
stos
pop
cld
or
mov
popf
js
inc
cmpb
outsl
cmp
arpl
cmp
pop
cmp
xchg
dec
push
sahf
pop
mov
test
faddp
cwtl
movsl
int
or
mov
xor
pop
vaddsubpd
imull
out
push
xchg
dec
push
stc
scas
ss
jmp
cmp
add
pop
pop
sahf
fstpt
pop
dec
popf
fcoml
movsl
mov
imul
pop
gs
in
test
jbe
js
jmp
addl
mov
lahf
stc
inc
cld
sub
orb
sbb
mov
pop
not
ret
push
jecxz
cltd
jnp
push
out
add
xlat
xor
sahf
sbb
out
into
mov
xchg
inc
and
dec
jmp
jecxz
mov
data16
push
or
rclb
mov
int
mov
insl
int
aas
dec
mov
or
sub
std
dec
xchg
pop
js
jbe
mov
in
sahf
mov
jmp
mov
test
push
xchg
test
test
lea
mov
nop
pop
push
cltd
mov
lea
shrb
mov
push
xor
mov
sub
and
and
cmpsl
add
sti
aaa
xor
and
loop
adcl
je
sub
mov
in
sarb
cmp
outsl
jae
es
scas
shrb
ret
or
ret
loopne
into
adcl
mov
xorl
out
sbb
and
lods
inc
in
adc
outsb
jb
stos
dec
add
int
pop
bound
adc
sarb
adc
adc
pusha
decl
lock
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
jmp
ret
adc
testb
xor
outsl
hlt
mov
mov
and
sub
bound
mov
rol
add
ret
icebp
fadds
aaa
mov
cwtl
enter
push
sbb
orl
in
inc
dec
xor
mov
mov
mov
mov
loop
sarb
jns
out
int
arpl
out
outsb
push
imul
dec
pop
lds
jnp
mov
jo
add
adc
lea
xor
in
and
ret
loope
jmp
int3
pop
sarb
in
xlat
mov
push
dec
out
aas
mov
add
int
xchg
jne
int
insl
in
xchg
lahf
jbe
decb
mov
or
jns
xchg
rol
fisttps
inc
inc
repnz
sub
dec
mov
jae
cmc
fidivl
adc
mov
outsl
mov
adc
inc
pop
mov
int3
mov
ret
or
je
iret
out
dec
lret
cmpsl
push
into
iret
xor
pop
inc
xchg
mov
push
xor
mov
test
adc
aad
xchg
pop
and
cld
lods
mov
aas
pop
pop
nop
dec
fs
aas
aad
dec
adc
dec
aad
out
popf
sub
xchg
jge
jg
dec
adc
aas
out
cmp
loop
xchg
push
sbbb
imul
inc
popa
sbb
push
mov
ret
inc
rcr
aad
adc
mov
inc
push
cmp
jno
jp
and
xchg
out
addr16
and
sub
pop
sti
or
lahf
out
cmp
stos
rcrl
push
in
cmp
lods
dec
fcmovnb
push
xchg
int
ds
pushf
push
jbe
in
rclb
push
insb
rcr
xor
xor
scas
repz
cltd
lret
divl
sti
leave
aaa
push
notb
adc
in
ja
cld
mov
jbe
sti
call
pushf
mull
mov
sbb
dec
xchg
mov
sub
stos
or
add
stos
adc
cmpsl
test
sbb
adcl
sub
mov
cltd
in
mov
mov
push
add
push
ror
sbb
push
or
adcl
scas
or
pop
ja
dec
pop
fisttpll
or
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
lahf
pop
push
leave
push
mov
jge
lret
das
in
mov
mov
pop
es
aas
add
arpl
xchg
mov
leave
loop
jne
shrl
inc
mov
xchg
fs
dec
subl
push
mov
out
push
nop
cmp
pushf
sbb
jbe
pop
lea
push
jle
insb
fidivl
and
mov
lret
std
aas
imul
xor
and
dec
inc
sbb
and
xor
mov
stos
mov
fists
cmp
push
mov
int
stos
cmpsl
loopne
fdiv
jge
xchg
pusha
add
push
dec
arpl
jo
sub
mov
fbstp
test
add
cmc
int
pusha
out
sbb
inc
push
push
je
jnp
ret
out
movb
and
inc
or
lret
mov
cld
inc
sub
cmpsb
or
xrelease
mov
add
jge
mov
test
jnp
icebp
push
push
jp
add
dec
es
popf
in
lcall
fs
add
outsl
imul
loop
mov
repz
sub
in
cmpsl
fs
mov
adc
jo
imull
pop
xlat
test
push
in
cmp
aad
push
cmp
mov
std
mov
lods
or
fcmovnbe
hlt
test
fwait
int
nop
outsb
imul
jb
cmc
popa
push
mov
mov
lret
pop
dec
cmpsl
aam
rcrl
adcl
adc
sbb
negl
jmp
jo
test
mov
jmp
dec
add
pop
test
imul
cld
imul
push
shl
jb
out
shrl
xchg
mov
repz
inc
int
dec
adc
add
stos
add
cwtl
fimuls
mov
sbb
pop
lds
repz
divl
push
sub
sub
aas
push
pop
xlat
ja
test
xchg
sarl
xchg
sbb
jmp
push
stc
add
mov
cmc
scas
sub
pop
push
jle
cmp
scas
adc
xlat
cmpsl
mov
pop
push
pop
testl
cmp
adc
jae
das
jno
lods
es
fists
add
clc
lahf
in
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
cmp
ljmp
mov
pop
pop
es
mov
cmp
test
vmovq
xlat
pop
aam
jne
xchg
mov
bound
test
cmpsb
inc
cmp
jno
das
add
pop
stos
push
outsl
mov
icebp
rol
sbb
ja
push
push
test
xchg
xor
dec
and
ret
cld
push
fstpt
pushl
cmp
hlt
xchg
jbe
jge
imull
stos
sbb
js
pop
push
sub
xor
dec
pop
fadd
push
xchg
movsl
mov
cli
xor
sbb
xchg
cltd
loopne
test
and
loop
bnd
push
mov
mov
inc
pop
xchg
push
mov
push
jnp
and
fcmovnbe
sub
push
mov
pusha
popf
orl
test
mov
jmp
pop
sub
icebp
icebp
inc
xchg
mov
pushl
rclb
sahf
add
fucomp
sbb
insb
xor
lret
lods
rolb
cltd
mov
dec
pop
imul
and
inc
push
dec
mov
pop
sbb
ffree
adc
mov
jb
repnz
icebp
neg
jne
mov
ja
mov
pop
shrl
push
xchg
arpl
pop
addr16
sub
out
les
add
jne
add
dec
iret
loope
fsubl
pusha
push
pop
test
push
inc
outsb
bound
outsb
dec
in
aam
fiaddl
push
mov
pop
and
sbb
xor
mov
inc
sbb
stos
push
cli
popa
and
and
fwait
das
mov
pop
into
cmp
pop
xor
jno
mov
dec
cmp
sub
inc
mov
xchg
cmp
and
mov
bound
jae
mov
outsb
inc
ret
jge
lcallw
xchg
stos
xchg
jle
dec
push
xchg
aaa
mov
adc
mov
dec
push
xor
dec
sbb
and
push
adc
in
jns
and
in
mov
push
mov
lods
inc
pop
scas
negl
sbb
fiadds
icebp
dec
fwait
push
pop
mov
leave
jl
fsub
mov
shr
cmp
lods
loop
inc
pushf
xor
mov
leave
dec
mov
je
adc
daa
jo
jae
arpl
movsb
push
sbb
pop
adc
sub
jl
bound
xor
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
imul
mov
or
add
imul
mov
xor
mov
lea
jmp
dec
or
popf
lods
scas
mov
push
push
sarl
push
lods
pop
mov
dec
in
into
jl
shrl
mov
bound
cwtl
out
jg
add
roll
dec
cltd
mov
dec
sub
xchg
xchg
fsubr
or
mov
push
jno
outsb
stc
hlt
jb
add
fstpt
sub
test
pop
out
cmp
jno
jae
sbb
test
fidivrs
fwait
xchg
rcl
inc
jle
mov
add
stos
lods
lods
jae
shll
cmp
mov
sbb
jp
lret
sub
jo
hlt
jbe
cli
icebp
inc
test
out
sub
mov
or
lods
je
add
mov
jmp
pop
aad
push
mov
lret
adc
sbb
fwait
xor
bound
pop
mov
cmp
push
ficompl
xchg
dec
popa
ror
mov
les
stos
out
mov
push
fsub
cmp
xor
push
aas
pop
adc
xchg
mov
mov
cmpsl
test
mov
jb
mov
cmp
inc
ds
cltd
cmp
xor
cmp
lahf
inc
cmp
or
sahf
mov
pop
mov
sub
stos
aam
out
xor
pop
mov
add
jl
cmpsb
jnp
loop
ja
inc
lea
insb
dec
inc
inc
idiv
bound
push
stos
test
leave
sub
pop
iret
repz
cmp
cmpb
add
lahf
jns
dec
aas
xchg
sub
mov
mov
nop
in
add
movsl
pop
outsb
push
fdivl
push
xchg
enter
xor
dec
cmp
sbb
dec
cwtl
and
pop
idiv
adc
movsl
lahf
xchg
pop
dec
adc
loope
jns
popf
lds
mov
movl
movl
movl
movl
movl
mov
imul
mov
xor
mov
sub
mov
lea
mov
xor
mov
sub
xor
push
pop
div
mov
and
mov
or
mov
mov
xor
div
mov
or
xor
push
pop
div
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
mov
imul
and
mov
sub
add
mov
or
xor
add
mov
xor
push
pop
div
and
mov
add
or
and
add
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
imul
mov
xor
mov
and
mov
lea
mov
and
mov
sub
mov
imul
mov
xor
add
mov
sub
imul
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
ja
push
call
adc
orl
add
add
or
adcl
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
adcl
subl
cmpl
je
addl
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
movl
jae
shld
shl
ret
neg
mov
adcl
xor
andl
and
shl
ret
xor
xor
ret
