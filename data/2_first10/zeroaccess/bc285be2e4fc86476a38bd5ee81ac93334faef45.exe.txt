push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
mov
bound
pop
bound
xor
cmp
jns
jbe
stc
cmpsb
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
push
fildl
push
adc
movsb
mov
add
jae
inc
sub
cmp
cmp
test
lcall
orb
mov
and
lret
rcll
leave
inc
int3
and
push
je
std
stc
outsb
outsl
xchg
test
jae
movsl
push
pushf
in
in
ja
xor
addl
jb
stos
fndisi(8087
cld
shrl
cmpsl
repz
ret
ret
scas
xor
es
inc
add
aas
in
fcoml
pop
xor
sbb
push
test
cmp
popf
lds
xor
pop
sub
push
dec
ljmp
mov
jge
push
add
out
jmp
aam
push
push
imul
xorl
push
push
outsb
sbb
lcall
add
xor
xchg
fcmovnu
das
sbb
push
add
jmp
or
dec
in
xor
fbld
fistl
fidivrl
rcrb
lock
addr16
inc
ss
cmpsb
int
filds
add
mov
jb
and
adc
mov
clc
pushf
inc
xchg
mov
sub
roll
dec
or
lret
inc
ja
popf
stos
fsubrl
enter
adc
xchg
mov
imul
aad
add
inc
and
and
sub
lea
and
mov
and
mov
cmp
out
mov
rcrb
cmp
movsb
adc
jle
push
adc
clc
or
jno
xor
sub
sub
aam
jge
inc
xor
add
jnp
int
xor
subl
jmp
mov
std
rcrl
sbb
into
sbb
lcall
pop
ret
outsl
dec
fidivrs
fisubrl
and
dec
int
shl
mov
sbb
test
add
jo
in
mov
push
and
jns
outsb
iret
out
pushf
imul
jmp
rorl
enter
pop
aam
lods
jo
adc
stos
and
xchg
fcomi
pop
and
call
mov
iret
mov
repnz
stos
mov
dec
movl
push
je
mov
dec
popf
cltd
add
jno
ljmp
fidivl
dec
adc
xchg
ficompl
aas
xchg
mov
or
arpl
mov
push
push
pop
addl
addr16
push
icebp
jge
sub
mov
fidivrl
add
dec
mov
xlat
or
stos
sbb
shll
dec
and
add
movb
movsl
jo
inc
inc
inc
sub
dec
sbb
leave
loop
pop
loope
inc
sbb
in
cmp
dec
xchg
in
fisttps
sbb
hlt
inc
loop
and
and
mov
dec
jae
dec
hlt
add
stos
pop
test
push
xchg
fiaddl
add
iret
scas
push
lods
inc
shll
cmp
stc
add
inc
inc
xchg
add
add
imul
aad
or
jno
xor
jecxz
test
movsl
leave
repz
test
push
push
sti
idivb
push
ret
cmpb
cmpsl
add
inc
jo
sahf
jnp
outsb
push
jge
loop
and
pop
test
jae
or
pop
nop
dec
sbb
mov
mov
clc
cmp
popa
pop
xchg
icebp
out
mov
mov
or
cmp
pop
fwait
adc
lds
jae
aam
add
jns
das
outsb
and
and
shll
or
jl
cmp
mov
call
loop
in
test
mov
lods
cmp
fldt
in
pop
mov
and
and
adc
test
popf
adc
out
lcall
pop
pop
xchg
and
mov
movsb
cmp
imul
das
cmp
bound
iret
xor
mov
mov
test
mov
and
shrl
xor
mov
cmpsb
test
cwtl
daa
pop
rolb
ljmp
pop
js
adcb
xor
dec
cmpb
push
jg
inc
or
xchg
push
pop
pushf
dec
push
and
pop
pop
scas
adc
rol
push
imul
or
push
cmp
or
testb
imul
and
jmp
pop
add
dec
out
lods
enter
aaa
out
cltd
push
adc
mov
pop
out
insl
div
scas
incb
ret
add
cli
mov
sub
in
cmp
movsb
pop
push
dec
lods
ret
mov
add
lret
out
jb
push
cmp
std
insl
mov
stos
push
ficompl
mov
mov
add
nop
aaa
fdiv
add
adc
fildl
add
mov
pop
gs
repnz
lods
pop
jns
and
jb
push
lret
leave
cmc
lods
outsb
inc
ret
or
fildl
xchg
pop
jno
or
inc
sub
xchg
xchg
or
nop
sub
sub
cmpsl
pop
jae
pop
mov
test
outsl
fisubl
std
inc
dec
inc
or
mov
fiadds
and
push
jns
filds
inc
xchg
push
movsb
and
arpl
push
push
mov
fldl
dec
add
xor
xor
push
aaa
mov
mov
stos
xchg
imul
jg
push
shl
sbb
adc
jae
xorb
jno
mov
pusha
dec
sbb
out
or
inc
int
pop
push
je
push
add
insb
loope
sub
push
sbb
data16
jge
xchg
imul
push
mov
sub
xor
rorl
test
imul
mov
push
inc
cltd
cmp
xor
cmpsl
data16
fisubrl
test
and
bound
xchg
sahf
pushf
sbb
testb
xor
pop
adc
xlat
into
in
mov
push
out
push
jnp
xchg
jecxz
sub
xchg
mov
pop
lret
cwtl
lock
stc
fdivrs
mov
dec
dec
sub
out
test
mov
mov
ret
test
xchg
cs
xor
sbb
leave
sub
inc
jle
leave
test
scas
adc
insb
or
ja
pop
sbb
mov
test
sbb
xchg
addr16
xor
lds
pop
fwait
gs
scas
mov
and
divb
shll
ja
mov
dec
inc
es
nop
nop
mov
pop
ret
aad
call
cwtl
and
jl
sbb
jmp
push
push
cmp
sbb
fistpll
lahf
in
shl
xchg
stos
jl
push
jns
movsb
or
jl
xchg
add
fwait
mov
cmp
lock
test
insl
mov
pop
sbb
repnz
push
das
sbbb
pop
mov
pop
push
adc
sub
les
cmp
lock
or
mov
xor
fidivl
or
inc
inc
xor
jge
je
leave
insb
push
outsb
cmp
xchg
aas
mov
rcrb
and
cli
and
and
inc
pusha
shlb
shl
orl
loope
stos
mov
insb
sub
push
xchg
jmp
add
add
ds
ljmp
pop
xchg
or
test
andb
jge
ljmp
pop
jp
enter
int3
xchg
xor
push
xor
clc
sbb
enter
jecxz
dec
sbb
adc
test
add
pop
xchg
loop
adc
fadds
push
lret
imul
push
imul
ret
cwtl
xchg
mov
movsb
push
add
in
inc
mov
data16
sbb
rcrb
nop
xor
sub
ss
in
lret
push
and
xchg
mov
fstp
mov
or
js
popa
mov
dec
mov
jmp
mov
bound
or
fdivl
add
sub
aas
sbb
int3
cmpsl
sbb
shrl
std
or
mov
outsb
fsubs
jae
add
xor
push
or
ss
aam
arpl
mov
mov
jb
jle
dec
push
daa
dec
or
imul
call
sub
fs
dec
and
into
scas
test
xor
repnz
nop
fbstp
stc
ljmp
outsl
imul
mov
inc
jae
mov
adc
xchg
hlt
inc
xor
pop
push
ret
in
arpl
pop
sub
sarb
loop
data16
fists
jnp
mov
cmpsb
dec
insb
lods
fsubs
lds
lret
mov
adc
outsb
jmp
pop
mov
or
out
add
add
mov
xchg
pop
push
sub
stos
repz
inc
dec
gs
cmpsb
addr16
cmc
push
mov
shll
ja
add
push
mov
loopne
outsl
lea
xchg
mov
and
sti
fmull
dec
cltd
sbb
fdivl
mov
fildll
sbb
js
dec
lods
test
ret
jmp
loop
lock
fnstenv
and
xor
dec
test
xorl
imul
dec
mov
lds
das
mov
xchg
movsb
dec
mov
pop
sbb
xor
dec
cmp
inc
jae
sub
jmp
repz
fimull
sub
inc
stos
xor
shlb
mov
in
push
imul
push
xor
push
test
popf
jg
das
push
add
sub
add
int
push
and
fsts
sbb
jb
add
in
stos
popa
push
pop
cltd
mov
push
jge
add
sub
pushf
xchg
xchg
or
inc
mov
jne
add
fcomps
mov
leave
orb
addl
xchg
push
into
mov
outsl
es
int
xor
pop
mov
test
movsb
cli
add
outsl
mov
lcall
aad
xchg
adc
jnp
cmp
pop
dec
lds
pop
dec
pop
xor
dec
inc
jmp
test
adc
sbb
nop
sti
arpl
xor
pop
enter
out
lods
push
sbb
sbb
out
jno
lcall
xor
pushf
into
adc
dec
mov
jno
sbbl
adc
rorl
dec
movb
popf
outsl
shr
sub
jno
aaa
dec
fcoms
stos
mov
ror
outsl
lds
nop
xor
stos
cmp
mov
das
mov
stos
pop
lods
test
inc
ljmp
test
and
lods
pop
iret
pushf
push
push
mov
or
push
dec
out
fmuls
in
lcall
enter
push
cwtl
add
xchg
test
in
sub
pusha
jno
jb
pop
pop
xor
out
xor
jg
adc
es
imul
inc
mov
mov
lahf
mov
iret
sti
sbb
sar
movsb
sti
xchg
and
push
jmp
dec
hlt
sub
lods
pusha
es
mov
fldl2t
inc
clc
and
loope
sub
or
pop
mov
add
adc
sarl
pop
inc
jno
pop
test
cmp
jg
sti
test
mov
xchg
addr16
stos
fbstp
push
sub
inc
es
pop
or
or
setp
mov
push
inc
add
dec
xlat
adc
cld
or
inc
add
in
push
mov
fiadds
push
out
cmp
popa
scas
movb
out
sti
mov
pop
adc
jne
rcrl
repz
pusha
es
imul
adc
cwtl
roll
call
or
sub
mov
or
push
dec
or
cmpsb
fwait
jg
lret
movsl
xlat
out
sbb
jo
or
xor
aas
je
and
jp
or
call
ficoml
jp
xlat
mov
mov
mov
shrb
ret
cmpb
mov
jo
idivb
xchg
xchg
cwtl
and
addr16
add
xchg
cmp
cmpl
stos
in
cmp
xchg
imul
xchg
ljmp
dec
and
and
aad
push
aad
jmp
into
and
stc
xchg
aas
mov
mov
mov
push
cvttps2pi
jb
mov
movsl
dec
pop
sbb
arpl
add
ror
js
or
xchg
xchg
add
mov
mov
xor
mov
jae
mov
pop
cmp
adc
mov
negl
jnp
out
adc
aam
jo
or
ret
fildl
jne
dec
xor
cmp
das
xchg
fnstenv
js
dec
ret
push
or
std
xchg
ret
push
faddl
js
jge
jecxz
or
or
adcl
mov
jae
xlat
pusha
xor
test
mov
ljmp
nop
mov
sub
cmp
lcall
xlat
xor
ss
add
adc
ds
lods
push
int3
xor
mov
adc
movsl
ds
fnsave
adc
in
pop
ret
sahf
push
mov
cli
and
insl
mov
movsb
xchg
cmp
inc
cmp
add
cs
ja
out
jle
jae
fisttpl
jmp
push
rolb
mov
clc
fwait
out
xlat
jns
sbb
scas
pop
xchg
mov
mov
jb
jb
stos
roll
jmp
mov
push
xchg
addl
fimull
int
aaa
or
stos
pushf
fcomip
push
sub
pop
push
xor
pop
ds
imul
mov
sub
fsubs
shl
fs
dec
and
mov
fucomip
je
push
mov
repz
dec
mov
mov
add
pop
int3
cmc
cmpsl
cmpsb
pop
pushf
loope
dec
push
mov
add
cmpl
dec
jp
cmp
enter
aam
and
add
dec
add
adc
pop
ds
push
test
cmc
xor
movsl
push
mov
or
insb
pop
dec
subb
loopne
movsb
push
pop
or
outsb
hlt
dec
fstps
ret
lea
xor
js
xchg
adc
pop
rol
cs
loopne
sbb
push
insb
shll
mov
loope
push
pop
mov
add
pop
filds
addr16
or
mov
aaa
add
cltd
inc
adc
movsl
mov
repz
xor
testb
mov
push
xorl
lahf
ljmp
pop
fcmovne
pop
addr16
sahf
pushf
int3
in
jnp
test
loopne
es
mov
shrl
mov
jae
das
inc
sbb
out
test
les
xchg
sub
add
sub
inc
cmp
arpl
test
fists
pop
and
jmp
xchg
sub
pop
mov
inc
jmp
out
push
test
mov
call
loopne
ds
je
repz
bnd
aaa
pop
adc
adc
push
rclb
mov
inc
adcl
movsl
dec
xchg
dec
mov
sbb
xor
mov
andb
push
inc
subl
fst
sub
add
jne
sub
imul
xorb
push
pop
sbb
mov
xor
xor
adc
int
xor
bound
mov
sbb
or
xchg
xchg
or
or
jns
cmp
test
mov
cwtl
mov
hlt
add
aas
mov
mov
call
into
xchg
dec
lret
shll
sbb
js
push
or
or
lret
fsubrp
mov
dec
xchg
jno
lds
leave
dec
pop
or
mov
pop
cmp
stc
insb
jae
pop
dec
pusha
daa
ret
dec
paddw
enter
sbb
push
fs
xor
xchg
lds
jecxz,pt
cmpsl
mov
fsts
aas
clc
xchg
fadds
mov
arpl
es
fidivs
cs
and
stc
scas
arpl
adc
mov
popf
mov
fdivrs
cmpsb
mov
mov
add
adc
adc
call
push
mov
add
arpl
adc
out
mov
negl
push
mov
aaa
xchg
cwtl
add
aas
iret
ljmp
or
mov
jle
sbb
ja
jl
popa
or
xchg
out
and
out
popa
mov
popa
arpl
imul
icebp
fwait
sub
push
adcb
aaa
xchg
cld
push
adc
inc
outsb
sub
mov
outsl
js
outsl
adc
and
push
movsl
inc
pop
mov
inc
in
psubb
imul
mov
stos
mov
hlt
daa
je
jbe
or
ja
popf
jmp
lods
mov
add
out
cmpsb
jge
mov
fdivrl
sub
loopne
push
lock
dec
adc
inc
push
or
cwtl
and
xchg
pusha
rcll
or
mov
and
add
mov
loope
mov
and
sbb
call
sub
bound
fstpt
jno
and
or
js
sbb
xor
inc
or
cwtl
les
cli
pop
push
cwtl
mov
inc
ficoms
cmp
or
push
test
in
repnz
cwtl
pop
dec
imul
cmc
aaa
mov
cmp
push
stc
insb
jmp
mov
xchg
orl
addr16
mov
movsb
ja
cmpsl
repnz
dec
sub
fstpt
les
jno
sbb
and
stc
cltd
shll
mov
push
movsb
into
rep
xchg
mov
lods
lock
pusha
push
push
test
mov
push
mov
xor
mov
jg
push
push
xchg
push
sbb
int3
dec
and
sbb
pop
pop
jb
out
pop
xor
pop
pop
mov
add
inc
pushf
xchg
jl
shrb
sbb
mov
sahf
mov
cltd
mov
aam
fidivrs
and
xchg
jb
cld
sbb
arpl
xchg
xor
aam
or
sub
js
cmp
dec
and
add
pop
xor
push
mov
lret
add
fs
pop
sti
les
pop
lods
aas
int
push
imul
in
scas
test
nop
mov
cmp
test
xor
cwtl
jne
stos
xchg
in
adc
fnsave
movsb
or
jnp
stos
icebp
dec
loope
dec
adc
push
and
fdivr
push
cmp
fs
inc
push
jecxz
push
aas
aaa
out
pushf
fiadds
jae
stos
push
push
adc
sarl
mov
sub
lea
mov
jl
mov
loopne
stos
mov
jae
ret
dec
ljmp
add
add
push
pusha
bound
les
xchg
imul
xchg
jle
arpl
xchg
lods
into
cmpl
lea
cmp
push
cmc
cmp
rol
test
pop
sbb
or
call
fistps
cmp
cmp
mov
add
imul
mov
in
xchg
out
mov
mov
sahf
test
rorl
in
mov
and
push
adc
mov
out
cs
fs
pop
cmp
adc
fs
pop
out
mov
mov
adc
cmp
adc
movsb
adc
lea
fcoms
xchg
mov
and
int
sub
inc
mov
sbb
adcl
mov
enter
in
mov
fidivl
push
bnd
pop
je
jecxz
mov
and
shrl
lock
cmp
sahf
addr16
mov
cmp
imul
sarl
or
and
add
pop
and
testl
fstpl
pop
popa
jae
lods
aam
popa
cmp
cmp
cmpsb
dec
scas
mov
dec
pop
lock
fstpt
lahf
mov
and
aad
pop
imul
push
xor
incb
push
jno
fadd
lea
movsl
faddl
mov
add
jno
mul
cmp
pusha
jmp
icebp
or
sbb
lods
mov
or
pop
mov
cltd
push
aaa
push
scas
shrb
loope
test
sub
cmp
lods
lcall
or
push
ljmp
mov
xor
insb
xlat
pop
mov
stc
or
mov
mov
mov
fincstp
pusha
or
bound
in
mov
insl
lret
sbb
divb
sti
popa
and
inc
mov
xchg
outsl
ss
cld
pop
sahf
shrl
das
xchg
jecxz
loop
stos
imul
insl
insl
pop
jmp
pop
mov
inc
ljmp
inc
stos
fwait
dec
arpl
sbb
mov
xor
xor
shll
jle
jns
cwtl
out
ret
setns
imul
or
dec
gs
mov
jge
jl
arpl
movsb
pop
inc
jecxz
pushf
jmp
mov
insb
ljmp
jo
adc
int
push
pop
ljmp
push
loop
call
movzwl
add
pop
xchg
mov
pop
std
sbb
into
scas
mov
add
sub
mov
and
add
mov
sbb
popa
mov
inc
fldenv
sbbb
pusha
sub
push
mov
fsubl
cli
sbb
dec
inc
mov
es
aas
mov
popf
ja
cmp
mov
aaa
adc
aas
cmpsb
test
lock
push
repz
lret
out
add
loop
pinsrw
mov
std
cs
pushf
xchg
xchg
mov
push
in
pusha
test
clc
and
push
mov
and
das
dec
pop
or
lea
jb
addr16
and
dec
push
inc
sbb
insb
leave
sub
hlt
shlb
adc
sbb
out
or
add
data16
or
imul
rcrb
sub
mov
jno
or
enter
xor
out
pop
loopne
testl
int3
jns
sbb
and
mov
das
orb
dec
adc
mov
lods
lea
mov
jge
dec
push
push
in
in
push
inc
sbb
icebp
ja
mov
gs
xor
lock
ret
test
pop
add
pop
xor
lods
mov
ret
das
out
mov
stos
pop
cmpsl
movsl
push
cwtl
in
add
mov
mov
rclb
movsl
lods
sar
int3
dec
or
int3
mov
inc
push
and
pop
add
cmp
push
jbe
pushf
ror
scas
call
ds
cwtl
cmp
adc
pop
imul
jle
shl
cld
out
inc
jmp
push
xchg
sahf
xchg
push
bnd
mov
mov
xchg
jle
lret
inc
flds
mov
and
stos
lock
enter
iret
mov
jnp
pop
sbbl
sub
xor
aaa
ret
stc
pop
push
ret
in
push
outsl
cli
out
es
cmp
sbbb
jno
fdiv
lods
jns
xor
or
cld
adc
dec
pop
iret
leave
and
lahf
and
lea
fcompl
mov
orb
xchg
into
xor
jmp
and
xchg
push
lods
lods
mov
cwtl
mov
das
or
int3
jp
mov
pop
loopew
mov
xchg
scas
aad
push
iret
inc
fmuls
aad
push
subb
cmc
or
lock
dec
mov
jp
cmp
les
cmc
inc
cmp
addr16
sbb
in
jle
push
ja
sbb
ret
test
icebp
testb
add
dec
out
js
addr16
cmp
and
test
jno
xchg
mov
or
jbe
insl
dec
or
xchg
jnp
cs
or
adcl
or
dec
lret
sbb
jl
add
jmp
subl
xorl
ljmp
and
xor
dec
ds
jo
es
pop
rcrb
test
push
xchg
lods
lahf
cwtl
mov
iret
xchg
cltd
or
push
and
ret
pop
jbe
out
sub
test
xchg
lock
mov
xchg
mov
mov
imul
adc
mov
jae
mov
push
fldl
mov
pop
add
out
clc
add
adc
xchg
xorl
mov
clc
and
es
lock
inc
mov
imul
mov
repz
dec
std
mov
subb
pop
fs
and
cmp
cmpb
and
ficompl
pop
mov
mov
mov
ret
sbb
loope
outsb
mov
or
in
pop
scas
push
movsl
divb
jecxz
shl
push
lret
or
sar
jle
or
cmp
div
in
fistl
movsb
cmc
sub
fs
adc
jbe
cld
jnp
sub
sbb
or
mull
dec
andb
xchg
mov
mov
push
jno
shrl
das
shlb
xor
arpl
imul
dec
lods
adc
ja
push
inc
xlat
xchg
cmp
ljmp
out
xchg
mov
jg
pushf
sub
lea
jmp
or
popa
mov
push
xchg
cld
gs
cmp
dec
cmp
ret
lcall
jns
mov
ret
xor
sbb
lock
loop
test
inc
cmpsb
mov
inc
aaa
dec
pop
lret
repz
sarl
sub
dec
xlat
jns
push
fidivrl
iret
rcrb
fidivl
mov
dec
adc
sub
jp
mov
ss
rcll
or
cmp
ret
jecxz
sub
iret
pop
fidivrl
test
mov
xchg
push
and
dec
mov
pop
test
xchg
mov
sub
lock
shlb
rorb
adc
inc
outsl
fwait
scas
repz
xchg
pushw
jecxz
stos
mov
daa
cmp
xchg
xchg
lret
sbb
xor
mov
mov
addr16
fwait
mov
jmp
rcll
jno
xor
sbb
jmp
xchg
adc
into
push
and
jp
rcrb
pop
lods
popa
test
int3
jne
sbb
push
xchg
xor
in
or
xchg
and
sub
sti
into
pop
lcall
lds
je
mov
dec
cmp
pop
push
imul
addr16
push
inc
jp
das
pushl
mov
adc
jno
mov
mov
cmp
pusha
dec
je
iret
outsb
mov
pop
js
jno
test
jge
pop
movsb
mov
jg
and
push
sub
xor
in
stos
push
popa
into
lods
inc
div
arpl
lods
leave
mov
lret
les
arpl
pop
popf
dec
lret
pop
pop
sbb
les
adc
mov
push
sub
mov
jmp
mov
fcomps
push
scas
rorb
test
leave
adc
cld
mov
pop
pop
sub
int3
sbb
mov
std
pushf
int
loope
call
jl
mov
insb
outsl
jns
fs
pop
dec
or
aaa
orps
jmp
sub
dec
inc
movsl
xor
dec
int3
sub
add
push
imul
or
into
fidivrl
xor
aam
sub
xor
test
rcrb
scas
mov
inc
fstps
mov
jmp
pop
mov
loop
sarl
arpl
mov
and
fmull
clc
xchg
xor
popa
push
stc
mov
sub
cmp
lret
nop
popf
lods
mov
mov
sub
xor
insb
xchg
cmp
pop
cwtl
movsb
les
aaa
jmp
cli
inc
cmpsb
inc
sub
xlat
mov
adc
cmp
inc
stos
push
movsl
test
adc
daa
inc
sarb
ljmp
pusha
movsl
pop
popa
jp
cmpb
pop
dec
cmpsl
sbb
lahf
pop
out
out
mov
or
pop
aam
mov
dec
jno
xchg
sub
insb
pop
pop
addr16
aaa
cli
std
popa
cli
data16
std
cli
jl
jno
dec
cmp
jns
insb
jbe
nop
stos
leave
fbstp
fimuls
stc
scas
repz
push
push
outsb
ffree
sbb
cltd
push
cmp
popa
xor
mov
dec
cmp
or
les
push
push
dec
fbstp
int
mov
push
jno
sub
mov
jp
fincstp
mov
loop
mov
pop
dec
cltd
mov
and
sarl
jns
lret
sbb
loop
jo
inc
movsb
mov
iret
mov
shl
and
cwtl
cltd
mov
ror
popa
add
dec
mov
xor
mov
rol
imul
pop
xchg
outsl
pop
pop
mov
mov
js
mov
and
shlb
lds
lahf
adc
outsl
sarl
imul
add
mov
fsubs
and
int3
scas
shrb
incb
inc
mov
aas
adc
adc
je
lcall
int3
mov
in
in
iret
push
mov
dec
mov
inc
xchg
add
sti
test
mov
ja
jae
mov
jmp
int
rclb
in
adc
push
push
ds
mov
xchg
popl
mov
xchg
pop
add
mov
dec
icebp
mov
push
xor
mov
bnd
pop
sar
pop
lcall
inc
outsb
xchg
push
or
adc
stc
adc
loop
push
jge
sbb
add
testb
bound
mov
arpl
in
mov
inc
push
and
movsl
cltd
xor
pusha
clc
inc
aas
das
scas
inc
cmpsb
sti
shll
sbb
push
xor
repnz
lds
jns
in
dec
sbb
lahf
movl
in
mov
ret
pop
clts
mov
in
daa
mov
sbb
dec
and
mov
aam
xchg
sbb
rcrb
push
test
stos
fmull
mov
and
mov
andb
imul
roll
xchg
lret
popf
int3
sti
mov
outsb
je
jg
js
pop
jmp
adc
lahf
cmp
pop
cs
and
nop
ret
fcmove
sbb
mov
nop
pop
inc
cs
orl
jnp
push
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
pop
add
sbb
bound
pop
bound
ja
insl
fdivrs
pop
jge
cmp
xor
test
pop
aad
int
enter
jp
jno
adc
jg
sbb
lcall
outsl
lds
rorl
mov
ja
int3
sub
fs
xor
bound
cltd
mov
test
mov
jecxz
pop
jae
test
xor
xor
dec
outsb
xchg
jp
hlt
sub
pop
lock
cld
jbe
fldenv
cli
popf
std
repnz
jne
pop
add
add
mov
inc
aas
sub
loopne
xchg
lock
jmp
push
daa
jl
cmp
xchg
scas
adc
lret
sti
sbb
int3
test
in
xor
test
aas
or
or
test
popa
outsl
fcmovnbe
lods
repnz
cmp
lods
aas
loopne
push
adc
out
sarl
sub
mov
and
xchg
pushf
and
ss
out
mov
in
and
dec
push
fwait
sub
inc
xor
or
inc
xchg
jmp
hlt
gs
movsb
ljmp
shlb
mov
in
int3
or
into
pop
xor
inc
aad
push
call
sahf
js
mov
and
hlt
adc
push
negb
out
cltd
cmp
xchg
xchg
add
adc
lods
movsl
enter
shll
inc
pop
out
jmp
fwait
das
pop
mov
in
ret
jecxz
push
jl
les
loop
insl
jge
push
insb
sub
outsl
es
cmp
frstpm(287
jecxz
in
cltd
push
and
repz
pop
sub
push
int
jne
lahf
pop
xor
pop
cmpsb
addr16
or
cmpsl
dec
rcll
mov
mov
xchg
dec
and
sti
fists
mov
cmp
out
sub
pop
fldcw
push
sub
push
mov
insl
int3
xchg
mov
aaa
lahf
iret
pushf
push
push
or
orl
cmp
push
add
push
sar
out
push
mov
and
mov
mov
ljmp
mov
cs
push
pusha
adc
adc
jb
sub
jmp
std
cltd
push
xor
push
in
dec
dec
adc
pop
repnz
pop
mov
test
sub
jbe
movsl
cwtl
xor
pushf
xor
mov
addb
arpl
jo
or
rclb
mov
or
aas
es
aas
jae
fisubrs
cld
nop
mov
sbbl
inc
mov
jb
stos
xchg
in
xor
divl
out
into
ret
and
outsb
adc
jle
out
or
in
ficomps
mov
mov
xor
jbe
movhps
mov
add
jo
xchg
mov
adc
add
push
xchg
mov
inc
lret
and
mov
cmp
mov
insl
pop
xor
fwait
jne
ja
stos
mov
jb
xchg
jno
in
in
outsb
push
adc
fistl
insb
dec
xchg
aam
mov
push
sarl
nop
lahf
sub
test
and
fiadds
loop
icebp
cmp
inc
orb
inc
sub
imul
inc
in
push
mov
andl
ss
scas
in
inc
ret
sbbl
and
push
xor
sarl
aas
sub
inc
shlb
clc
xor
inc
dec
sahf
jmp
js
sub
mov
in
test
and
adc
jno
xchg
sti
aam
and
cmp
pop
or
add
andl
and
aas
cmp
fsubr
jp
and
jnp
ss
clc
pop
std
dec
sbb
mov
ja
aam
faddp
pop
pop
rcrb
adc
in
inc
mov
mov
les
mov
mov
xorl
push
dec
out
rcpps
mov
test
push
xor
lcall
divb
xchg
fldl
sub
sub
movsl
ss
mov
cmpsl
or
loopne
mov
mov
jl
adc
jbe
lods
jae
fildl
xor
lcall
pushf
jns
ffree
pop
dec
lret
mov
cmp
mov
cmp
neg
jge
cmp
mov
cmp
mov
lea
jae
pusha
nop
cwtl
movb
sbb
pop
mov
aad
jmp
add
xor
push
xor
xchg
out
lahf
jnp
pop
outsl
fisubl
icebp
cmp
cs
cltd
cmpsl
jl
repnz
mov
pushf
push
inc
jg
dec
adc
push
mov
ss
jbe
cmpl
xor
or
scas
ret
lcall
jge
inc
or
mov
fildl
ss
dec
outsl
and
cmpsl
scas
lcall
popa
jbe
pop
rol
mov
aam
push
pop
mov
or
jle
test
aas
js
adc
xchg
test
mov
push
mov
push
mov
pop
inc
push
pop
bound
fidivrs
xchg
cwtl
pop
pop
imul
jnp
les
std
in
sbb
pusha
or
jne
and
adc
out
fdivl
jbe
and
cmovp
sti
cmp
lods
jp
aaa
gs
mov
aaa
lods
inc
out
push
lret
int3
cmp
cmp
ret
xor
into
das
mov
jae
jmp
adc
cmp
idivl
push
and
pop
and
cwtl
int3
shl
data16
sub
loope
mov
dec
lods
notl
pushf
out
pop
sbb
mov
jbe
imul
cli
mov
lret
dec
dec
jp
repz
leave
stos
cld
int
cld
jmp
fwait
xchg
fdivrs
and
nop
mov
vpackuswb
popa
fadds
ds
mov
pop
into
adc
mov
fcoml
push
and
mov
pop
push
dec
pop
xchg
idivl
push
pop
push
pop
adc
cmp
pushf
fs
sarb
adc
jl
jns
mov
bound
icebp
inc
cmpsb
and
inc
inc
lds
xchg
mov
lret
aas
xlat
fwait
xchg
shrl
jg
push
arpl
push
dec
pushl
fdivrl
xchg
jecxz
mov
enter
bound
popa
jge
mov
sub
in
xlat
into
das
insl
mov
mov
pop
lds
cmpsl
test
adc
fwait
dec
add
mov
sbb
mov
jne
adc
mov
das
xlat
inc
ret
mov
les
into
sti
popf
xor
adc
add
dec
mov
movsb
and
cmp
test
ja
cmc
sub
test
dec
fs
lock
push
xor
inc
or
inc
sbb
test
mov
rcr
js
xchg
mov
repnz
push
push
imul
add
inc
scas
ret
sti
add
inc
insb
pop
jbe
sub
rorl
nop
fsubl
dec
and
mov
negl
pop
mov
je
dec
mov
push
in
movl
xchg
aaa
and
test
cltd
mov
or
adc
fwait
adc
inc
push
dec
int
sti
and
pop
addr16
or
push
mov
cs
imul
shlb
sub
out
data16
add
gs
fcomps
push
int3
int
fcoms
subb
jne
pop
sub
outsl
mov
add
push
push
stc
in
push
mov
dec
mov
add
das
mov
adc
sahf
pop
xchg
cmp
or
imul
mov
movsl
stc
out
xorl
inc
cmp
dec
aam
aaa
pop
decb
push
cmp
in
xchg
dec
xor
pop
xchg
addr16
outsl
jecxz
pop
leave
mov
dec
xchg
mov
loope
loope
outsb
repz
in
xor
inc
pop
int
std
push
xchg
pop
fs
cmp
scas
clc
lods
enter
or
dec
fisubrs
rcrl
adc
pop
xor
cld
cmc
adc
jp
sub
cs
outsb
shrb
mov
loopne
cmp
cmp
je
sub
mov
add
jl
dec
or
xchg
stos
cs
js
mov
rolb
mov
add
mov
push
jle
scas
mov
sbb
add
shr
mov
shl
push
jo
adc
sbb
mov
nop
inc
aad
insb
lods
repz
icebp
sbb
dec
cld
xor
or
cmp
jmp
call
repz
cmp
sbb
cmp
and
addr16
pusha
dec
xor
sub
jmp
imul
mov
pusha
clc
pusha
xchg
stos
xchg
mov
mov
mov
lahf
scas
mov
std
imul
scas
andl
pop
daa
jae
push
outsl
inc
outsl
dec
jmp
icebp
repz
test
imull
mov
out
or
jne
and
jae
movl
bound
iret
and
decl
push
xchg
push
cmp
sbb
stc
cli
and
fldt
fists
test
and
xchg
mov
out
lret
in
loop
iret
int
dec
push
lret
mov
les
insb
or
rclb
lock
jge
lds
xchg
es
mov
xchg
lret
dec
mov
fildll
pushf
or
push
sti
xchg
fmuls
or
adc
sub
rcll
in
in
out
xchg
xlat
add
aam
jge
mov
jno
rorb
inc
and
jno
sbb
int
hlt
in
shlb
into
xchg
and
icebp
ljmp
fisttpll
cmp
inc
lods
out
cmp
call
push
inc
in
and
xchg
sti
inc
xor
clc
shl
cmpsb
add
int3
scas
les
shrb
cmp
inc
imul
cmpsl
mull
sti
cld
dec
dec
dec
jns
ret
or
sbb
mov
xchg
cltd
cmc
mov
aaa
xchg
mov
addb
in
inc
sub
fiaddl
xor
or
mov
ds
rcl
in
icebp
xor
jne
test
and
outsl
fidivl
cmpsl
iret
cld
dec
xchg
int
inc
mov
or
push
rol
outsb
jnp
cmp
ja
add
jb
mov
push
scas
and
sub
mov
mov
inc
les
sub
cltd
adc
inc
repz
jno
jnp
sub
jns,pt
jnp
add
aaa
bound
dec
jbe
mov
jge
adc
enter
mov
mov
test
xchg
and
movsb
xchg
cmp
inc
add
xchg
and
pop
xchg
sbb
add
pop
insl
lea
loopne
mov
pop
insl
pop
mov
ljmp
mov
rcrl
je
mov
in
loopne
mov
rol
push
stos
loope
enter
pop
jge
inc
jg,pt
xor
xor
arpl
js
xchg
add
loopne
es
dec
loope
lods
sub
push
out
lock
mov
and
sbbl
or
ljmp
das
sbb
or
lods
arpl
or
imul
pop
icebp
jmp
pop
roll
pusha
dec
fwait
adc
lods
pop
aas
scas
aas
lcall
or
loop
push
inc
adc
dec
leave
stos
les
pop
sbb
dec
jle
stos
imul
push
daa
arpl
push
dec
inc
adc
test
mov
nop
push
and
sbb
cli
out
pushf
popf
popf
cmp
jmp
outsb
xor
push
bnd
mov
add
aam
cmp
push
jns
fs
add
mov
sti
icebp
adc
add
pop
xchg
rcrb
add
and
test
adc
negl
mov
lea
sub
pop
leave
jno
inc
pop
call
stos
outsl
xchg
push
sahf
out
mov
cmp
jne
leave
or
cmp
ljmp
mov
fnsave
stc
loopne
repnz
cwtl
mov
test
dec
fstps
push
dec
add
ja
std
enter
js
xor
and
ret
or
mov
cwtl
and
shlb
xchg
pop
jns
jl
adc
aad
movsl
out
mov
loope
ds
xor
daa
je
mov
shrb
mov
cmp
push
adc
pop
dec
mov
xor
add
add
jns
loop
insb
jb
cmp
mov
leave
xor
into
lcall
inc
fwait
sbb
push
shl
push
cmp
add
xchg
push
subl
js
mov
lahf
lock
arpl
mov
inc
jg
sahf
int
mov
mov
data16
hlt
pop
sbb
push
icebp
es
clc
ffree
inc
loope
fstps
call
inc
mov
scas
fidivrs
aad
lock
insb
mov
pop
es
sbb
das
dec
jecxz
into
xor
xchg
inc
dec
push
pop
lock
ljmp
mov
mov
sbb
insb
pop
orb
sahf
mov
xor
bound
sbb
in
sbb
cmpsb
or
push
gs
lods
rcr
mov
cmpsl
mov
pop
pop
inc
inc
or
xchg
push
lods
pop
shll
icebp
pop
or
or
push
popa
dec
sub
xchg
leave
fsubr
mov
aam
mov
xor
lahf
int3
adc
cs
mov
test
int3
cwtl
mov
and
fwait
sub
insl
in
rorl
gs
test
xchg
ds
mov
js
jg
push
jne
call
sub
imul
xchg
stos
out
ds
mov
inc
mov
mov
stos
cmp
xchg
test
ficoml
jnp
stos
int3
cwtl
inc
adc
ss
lods
sbb
mov
fsts
dec
fabs
xchg
insl
fistl
sbb
mov
test
and
jne
jne
xor
or
cwtl
bound
les
hlt
int
es
fwait
rorb
addr16
enter
lods
ret
out
mov
adc
movsl
sub
fisubl
in
cmp
in
mov
mov
jo
inc
xchg
inc
into
jno
aas
lea
jae
push
jnp
sbb
iret
xor
jo
xor
loopne
push
mov
movsb
sti
cmpsl
mov
xorb
loope
fs
mov
and
lds
dec
leave
insl
inc
mov
enter
insl
out
mov
out
les
andl
or
push
clc
or
in
ljmp
pop
sub
sbb
sub
lcall
popf
les
xor
push
jle
add
pop
fimuls
dec
or
movsb
je
les
xorl
mov
sbb
sub
cmp
lahf
out
pop
jp
push
pop
fcomi
mov
inc
daa
fs
adc
stc
pop
lcall
movsb
push
adc
sub
or
inc
mov
in
mov
and
dec
cld
jg
mov
jge
aam
dec
push
or
sbb
cmp
sbb
push
fisubl
pop
sbb
in
add
dec
mov
jl
xchg
add
jle
push
and
mov
mov
or
mov
cmp
pop
clc
mov
or
mov
adc
into
jl
adc
out
loope
in
cmp
clc
das
aad
cmp
inc
into
fucom
fsubl
cmp
movsb
push
lods
jbe
mov
and
push
jnp
dec
jne
stos
in
fists
cmc
ffreep
mov
out
jns
lahf
push
icebp
int3
shrl
incl
xor
fld1
enter
jno
bswap
js
insl
sbbl
jns
pop
fmull
call
mov
arpl
cmc
je
into
insb
fiaddl
mov
xchg
sbb
loopne
icebp
push
loop
push
xor
push
cmp
das
pop
lret
int
add
sub
cmc
add
out
inc
stc
cmpsb
inc
sti
stos
xlat
dec
sub
mov
or
xchg
data16
pop
or
popf
sub
cld
cmp
xor
push
and
pop
nop
cltd
loope
mov
sbb
popa
lds
aaa
xor
mov
pop
pop
push
dec
loopne
jl
gs
fsqrt
sti
int
fwait
popf
or
xchg
lcall
mov
jecxz
mov
dec
mov
jae
cmpsl
js
jb
leave
test
fldt
or
sbb
in
mov
push
rcll
xor
fisttpll
cmp
adcb
in
xchg
loope
aaa
sbb
pop
cs
cmp
push
cwtl
jg
xor
mov
cmpsb
daa
push
mov
jecxz
mov
inc
push
cmp
fmuls
push
sbb
or
push
add
lods
inc
xchg
ret
or
cmp
bound
xchg
outsb
ret
jmp
cmp
popa
or
cltd
lods
jp
mov
mov
xchg
mov
fisubrs
pusha
outsl
lret
mov
movsl
mov
jl
clc
or
and
lock
mov
jo,pn
insb
mov
ljmp
hlt
pop
les
mov
loope
fxch
ja
lds
lods
mov
aas
mov
je
inc
xchg
out
repnz
in
dec
dec
movsl
orl
jne
in
add
scas
mov
ljmp
mov
xor
adc
loopne
mul
aam
add
clc
mov
mov
std
ljmp
mov
clc
pop
sbbl
xchg
cld
icebp
rolb
sub
dec
fsubs
ficomps
cwtl
insl
repnz
adc
lret
int3
repz
mov
mov
nop
in
xor
shll
push
sbb
fucomi
xor
pop
push
stc
jl
addb
in
push
xchg
andnps
flds
aad
into
sub
lock
add
inc
mov
std
pop
out
pop
xor
pop
mov
sbb
mov
pop
inc
rorl
mov
adcb
int
les
movsl
fmull
lahf
inc
cli
or
xor
outsb
xchg
daa
and
ret
pop
outsl
scas
sbb
in
ret
xchg
mov
fdivrp
dec
arpl
fsubrs
addr16
cmp
sub
ret
xor
dec
in
cmp
sub
xor
ret
sbb
notb
sub
cmp
jg
pop
sbb
int3
clc
out
jp
pop
pop
js
mov
in
outsb
shlb
inc
or
stc
sub
mov
add
inc
mov
sub
mov
mov
shr
mov
fstpt
out
out
push
add
xor
test
sub
dec
les
mov
aas
lcall
jge
jecxz
push
out
dec
push
mov
or
sub
pop
pop
loope
sbb
inc
scas
cmpsb
mov
in
aaa
mov
mov
mov
mov
mov
push
pop
inc
inc
xor
lahf
cmp
sub
ds
jb
pop
and
movsb
pop
pop
in
adc
stc
xchg
xchg
jg
sbb
sbb
scas
popa
insl
xor
sub
fs
xor
pop
sub
insl
push
in
out
in
notb
cmp
rcll
sbb
icebp
or
add
adc
cltd
ljmp
adc
sub
test
ja
mov
inc
stos
or
pop
mov
inc
ror
arpl
or
mov
js
cmp
push
cmpsl
add
mov
inc
dec
push
and
lcall
lcall
out
cld
fsubrp
mov
adc
dec
and
sti
inc
push
mov
or
pop
fdivp
and
adc
mov
pushf
outsl
xchg
inc
dec
stos
or
sbb
dec
push
mull
cmp
sbb
aam
cmp
sub
xchg
outsb
stos
cs
aam
push
sbb
roll
fbstp
sbb
cltd
stos
push
cmp
stos
jp
mov
ficomps
push
mov
imul
out
inc
jl
cmp
jmp
xchg
push
push
loop
xorb
or
sub
xor
ljmp
dec
imul
sar
mov
xor
movsb
jne
mov
xor
cmpsb
shlb
pop
test
sbb
adc
jmp
mov
std
fdivr
or
in
xchg
stos
aaa
sub
jl
push
jge
ret
icebp
or
xlat
mov
shr
test
mov
lcallw
or
mov
call
jmp
icebp
sbb
gs
cmp
xchg
pop
rorl
paddusb
mov
sar
cs
xchg
lret
jle
or
cmpsb
adc
mov
add
imul
mov
mov
lods
cltd
xchg
cld
cmp
adc
out
xchg
jb
scas
jecxz
enter
mov
xor
repnz
add
nop
in
loope
xchg
cltd
lds
nop
pop
or
inc
pushf
fcomi
push
cli
ss
xchg
push
lahf
in
and
mov
cltd
dec
pop
lcall
dec
cmp
fucomp
fldenv
push
sbb
cwtl
xchg
xor
or
ljmp
mov
dec
ss
popf
pop
mov
inc
sub
pop
mov
push
lret
push
xchg
add
mov
nop
xchg
jp
cmpl
and
out
or
mov
cmp
mov
clc
imul
sbb
fldl
or
fsubrs
mov
arpl
cli
or
sub
sbb
iret
nop
mov
out
mov
shll
pushf
mov
scas
mov
ljmp
cmpsl
mov
std
inc
add
xor
adcl
adc
inc
aad
adc
lcall
mov
arpl
stos
dec
mov
push
inc
or
stos
cmp
xor
shll
test
adc
lcall
xchg
mov
inc
and
pushf
cltd
mov
shrb
pop
popa
inc
mov
sbb
in
xlat
mov
out
pop
cmp
loope
jp
mov
sbb
insb
or
aas
adc
and
mov
fcomps
adc
repnz
shrl
mov
mov
adc
popf
inc
insb
push
pop
fiaddl
and
enter
push
jmp
dec
lahf
fisttps
push
jmp
add
and
ret
daa
push
loopne
xchg
add
sbb
addr16
lods
xor
lods
add
test
faddp
fnstsw
dec
aaa
popa
lcall
iret
mov
pop
pop
xor
addr16
fcoml
imul
xor
xchg
inc
pop
xor
jge
mov
in
pushf
inc
inc
sbb
andb
or
xchg
sbb
es
push
mov
push
les
fdivrl
sub
in
ss
and
lret
jle
xchg
enter
cmc
and
mov
add
out
cs
add
cs
push
add
add
mov
ficomps
jno
mov
mov
mov
aas
inc
fwait
inc
pusha
orl
jl
mov
add
es
dec
stos
loop
das
jnp
push
xor
xor
aas
in
xchg
gs
mov
push
pop
incb
enter
sar
fcoml
cmp
cmp
fistps
scas
push
lcall
ret
test
mov
and
shrb
xlat
sbb
push
or
ret
dec
adc
sahf
and
adc
push
ret
insl
lcall
mov
add
lret
repnz
pushaw
or
xor
repz
lock
jb
test
mov
pushf
push
push
pop
loop
xchg
popa
adc
xchg
push
xchg
cmp
cli
insl
mov
pop
scas
popa
ret
jg
cli
sbb
lret
aas
orl
inc
xor
popf
popf
xor
or
jmp
pop
push
xorl
scas
and
fidivrs
and
mov
int
mov
lods
mov
jp
popa
sahf
leave
cmp
inc
lock
inc
lret
jle
and
cwtl
add
pop
rolb
xor
into
adc
mov
test
inc
mov
test
out
cwtl
nop
adc
fistpll
int3
mov
loope
jl
sti
aas
mov
loope
divb
test
inc
rcrl
roll
das
dec
in
fwait
lahf
out
sbb
leave
ret
mov
cmc
cltd
js
cltd
push
lock
mov
sub
cmp
push
pop
lahf
dec
mov
mov
xor
cmp
lret
or
xor
daa
cmc
aam
lods
inc
jnp
insb
mov
fisttps
fsubl
data16
push
push
repz
out
dec
pop
sub
add
ja
cmp
iret
jge
js
mov
pop
adc
rep
mov
std
jl
xchg
aas
loop
mov
shll
mov
shlb
shrl
cli
imul
ja
loope
adc
mov
xchg
sbb
push
lods
scas
or
sub
lret
push
pop
inc
lods
pop
addr16
sbb
fildll
xor
addr16
mov
cmp
clc
push
push
sarb
mov
push
inc
icebp
push
rolb
and
into
pop
cmp
lret
out
lods
sbb
fcos
addb
add
aaa
dec
cld
and
sub
mov
push
inc
push
popa
nop
pop
inc
bound
das
sahf
lock
fsubs
jne
dec
push
mov
ja
andb
outsb
xchg
into
addr16
cltd
jo
dec
pop
idivb
and
jmp
addb
fcoms
call
xor
dec
daa
mov
push
push
xor
stos
mov
mov
mov
mov
lahf
cmp
fisttps
daa
xorl
lods
and
gs
in
add
hlt
mov
fdivl
out
imul
push
test
mov
push
mov
pop
pop
xor
ja
mov
aam
mov
call
pop
jge
mov
lock
xor
cwtl
inc
inc
fs
subb
fs
inc
lcall
sub
jb
addb
in
lret
pop
jp
pusha
fimull
dec
mov
jmp
sub
or
addr16
inc
nop
rcrb
mov
mov
mov
cmc
add
stc
inc
push
fstl
sbb
nop
ss
jns
xor
mov
stos
mov
dec
ljmp
pop
test
cmc
push
nop
scas
jbe
inc
mov
fsubrl
aad
or
and
xchg
iret
xchg
jbe
pop
scas
das
sub
xor
push
rolb
sbbb
rcll
jno
dec
mov
out
mov
push
dec
cld
mov
mov
pushf
mov
std
pop
lods
xchg
les
fs
out
adc
mov
mov
mul
adc
jg
adc
adc
cmp
rclb
xchg
lea
add
sarl
dec
dec
push
push
fdivs
pushf
fimull
and
outsl
shr
sbb
dec
fcmove
cli
cmp
mov
pop
push
fwait
cltd
cmc
adc
fldcw
ljmp
test
out
mov
mov
sub
push
ror
lahf
cmp
mov
xor
leave
pop
movsl
add
test
and
mov
icebp
inc
mov
out
xor
xor
rcrb
loopne
dec
push
es
sub
jg
cmpb
paddsb
sti
out
rcl
dec
cltd
add
mov
nop
sub
jb
or
lods
jmp
decl
idivb
sbb
adc
dec
pcmpgtd
sub
vpcmpeqb
ja
scas
aam
fcomi
mov
call
sub
jle
add
lcall
push
lret
push
or
divl
in
cmp
dec
cmp
jle
in
xchg
push
dec
mov
cli
hlt
adc
push
mov
sub
inc
mov
lahf
add
xor
push
outsl
sbb
mov
scas
inc
ret
xor
cld
jl
cmc
sub
add
test
adc
aam
fdivs
popf
xchg
jmp
addr16
or
sub
cmp
adc
divl
or
push
add
shrb
ss
xchg
lea
inc
xchg
mov
shll
leave
cmp
push
pop
add
and
sub
push
sub
jmp
jl
idivl
sbb
lods
xor
movsb
mov
jne
pop
add
pop
push
mov
adc
imul
gs
cwtl
jbe
mov
cmpsl
loop
outsb
cltd
push
xor
push
fidivrs
push
fcomi
leave
jmp
rcr
insb
and
fwait
cmp
popa
xor
fsubp
dec
pushf
test
jmp
or
adc
adc
add
loop
rcl
xorb
in
movsb
jb
sahf
in
pop
mov
pusha
inc
es
sub
and
shll
mov
scas
shufps
pop
fcmovbe
fidivrl
inc
sbb
imul
test
cwtl
in
or
mov
sub
loop
adc
jle
inc
pop
cwtl
push
ffree
add
loop
popf
leave
js
jbe
mov
sti
inc
push
fdivrl
pop
test
fcmove
push
pushf
sarb
jne
xor
sti
std
data16
add
inc
js
mov
pusha
icebp
mov
pop
cmp
out
pop
xor
mov
mov
call
in
je
out
push
push
mov
push
or
cs
sbb
lods
lea
fstl
sub
pop
pop
lcall
adc
aad
shlb
pop
dec
outsl
mov
add
clc
pop
lds
addr16
shl
or
jecxz
push
adc
sahf
gs
push
pop
push
mov
add
jb
adc
addl
lea
vunpcklpd
add
ljmp
lret
jp
cmpsl
cld
mov
push
cmp
fimull
lahf
mov
inc
cmp
xchg
xlat
mov
cli
mov
test
mov
push
nop
sbb
or
dec
sbb
dec
sub
ss
mov
outsl
cmp
cmp
jp
pusha
sbb
test
fstps
loopne,pt
pop
addr16
stc
mov
add
decl
adc
jmp
test
mov
in
mov
popa
call
mov
ret
je
cmp
adc
jle
or
xor
jno
seto
andl
jle
repnz
scas
push
mov
sub
test
fistpl
out
sub
and
mov
pop
sub
ds
cmp
fadds
xchg
testl
cs
cld
fisubrl
or
xor
fs
xor
sbb
add
ss
sub
insl
mov
pop
mov
test
mov
sub
faddl
pop
mov
adc
sarl
cmp
js
cmpsl
daa
insb
cmp
xlat
jecxz
gs
arpl
dec
movsb
fwait
stc
cwtl
in
ret
leave
sub
mov
or
mov
and
cmc
adc
xchg
rcrb
cs
loope
and
push
xor
cmp
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
sbb
ret
bound
pop
bound
inc
imul
movsb
fsubs
jae
pop
or
shr
cltd
mov
fs
add
daa
dec
push
cmp
lods
sub
fistl
orl
clc
movsb
cmpsb
mov
rol
pop
call
adc
jle
push
lahf
xchg
ficompl
mov
jno
out
pop
fnstenv
pop
inc
push
inc
pop
mov
cmp
add
clc
push
aad
add
fisttpll
pop
lret
cmp
lahf
mov
mulb
lret
inc
fsubp
mov
scas
dec
xchg
int3
push
punpcklbw
sub
or
mov
cmpb
fwait
shr
dec
and
in
leave
lods
pop
aad
or
mov
jnp
mov
roll
mov
mov
jns
fistps
adc
jl
mov
stos
adc
add
pop
loop
jns
ret
xchg
in
dec
div
inc
add
push
out
cmp
ljmp
imul
sub
dec
xor
or
pop
jae
jnp
popa
in
pop
sbb
xchg
xor
add
sub
fnstenv
bnd
mov
stc
gs
push
iret
pop
test
nop
stc
or
xchg
pop
maskmovq
negl
ret
adc
inc
sub
js
cmp
pop
lret
lret
mov
mov
push
psraw
jmp
xor
jmp
xchg
dec
dec
les
mov
dec
sbb
data16
xor
lahf
js
push
test
mov
js
inc
icebp
cwtl
stos
dec
mov
jns
and
loop
mov
mov
ds
and
dec
in
pusha
out
into
lods
pop
loope
mov
mov
jle
cmp
scas
add
or
dec
sub
fcoms
lods
scas
sub
push
inc
mov
loope
cli
adc
std
sti
xchg
pop
sub
push
pop
out
push
fstpl
xor
in
cmpsl
mov
sub
fs
fdiv
insb
dec
test
repz
test
sti
xor
cmp
xchg
hlt
mov
mov
insl
ds
test
aaa
frstpm(287
sbb
push
push
mov
xchg
sub
inc
or
mov
pop
jbe
test
cmp
and
dec
nop
iret
inc
lret
inc
rcrl
fcom
mov
mov
incb
mov
repnz
sub
xchg
orl
fstps
push
dec
mov
xchg
dec
ficoms
pop
call
leave
aad
and
fldcw
cwtl
adc
out
out
push
and
loope
mov
xorl
jae
cwtl
inc
in
jns
std
popf
xchg
sbb
xor
xor
mov
jecxz
cmp
jae
push
dec
std
sub
mov
ljmp
xchg
adc
insb
xor
mov
adc
sub
shrb
ss
mov
mov
xlat
jge
cmpsb
movsl
sbb
in
loope
scas
adc
xchg
pushf
mov
loop
ja
push
bound
fisubrl
dec
push
mov
mov
dec
cmpsb
cmpb
cwtl
push
or
addb
cmpsb
push
xchg
cmp
ret
push
fcompl
test
jbe
test
fwait
dec
aad
cmp
imul
mov
push
or
mov
mov
bnd
xchg
mov
fnstenv
test
sub
jl
std
into
add
popf
sub
movb
std
test
jecxz
dec
lock
fstps
adc
arpl
jne
mov
mov
sbb
cwtl
cwtl
mov
iret
add
xchg
mov
xor
inc
jecxz
xchg
and
repz
imulb
pop
adc
adc
cmp
pop
cwtl
add
arpl
rcl
pop
movsb
imul
pop
push
xchg
push
push
scas
sahf
outsb
xchg
repz
add
jecxz
mov
data16
xchg
stos
sub
mov
dec
adc
and
test
fimuls
xchg
hlt
les
mov
lock
popf
dec
mov
adc
out
fucomi
aas
out
adc
push
mov
bound
mov
jno
mov
xchg
inc
cmp
cmpsb
add
xor
mov
jle
pusha
insb
jb
mov
rcll
ljmp
aas
lahf
and
cmp
pop
rorb
idiv
addr16
lahf
mov
mov
call
andl
jae
pop
insb
adc
jg
xchg
xchg
push
jnp
adc
add
inc
xlat
fcmove
cld
dec
jno
push
pop
xchg
fsub
push
xchg
pop
scas
sarl
mov
arpl
hlt
mov
inc
loop
jle
js
in
jne
push
jo
cmp
fisubrl
xor
repnz
movb
dec
fsts
pop
and
pop
lret
repnz
push
and
inc
adc
pop
fildll
leave
xchg
icebp
jo
leave
or
cmp
int
jnp
push
jp
cli
or
stc
push
aas
ret
sbb
dec
in
mov
loopne
mov
adc
dec
push
adc
daa
les
xchg
push
xor
mov
xor
mov
pushl
ret
movsl
cli
mov
jg
or
or
nopl
mov
shll
dec
cmp
xchg
jmp
aas
jg
sub
inc
push
mov
lods
outsl
xor
bnd
xchg
loop
pop
popa
push
pusha
xchg
or
mov
xchg
ret
cld
mov
shlb
lcall
jge
pop
or
sub
mov
dec
shl
pop
pop
inc
int
cmc
into
sub
pop
jbe
xor
pop
mov
iret
xor
shll
fisttps
rcr
daa
jp
je
xchg
repz
jbe
xchg
push
ja
inc
inc
sbb
in
sti
ret
push
add
inc
xchg
push
jns
dec
test
adc
popa
add
sub
inc
sub
xor
clc
je
or
shlb
and
orl
insb
push
data16
outsb
mov
mov
test
and
pusha
sbb
lahf
sub
mov
xchg
cmp
test
mov
dec
loop
sbb
sbb
mov
adc
in
fistl
movsb
aam
sar
pop
cmp
nop
xchg
xor
out
inc
aad
sub
shll
push
test
adc
enter
fcomps
jl
sbb
mov
shl
iret
stos
pushf
jb
sub
mov
mov
or
mov
pop
xlat
pop
loop
in
push
jmp
mov
xchg
xchg
xor
in
push
xchg
mov
push
inc
aad
insl
or
xchg
jo
inc
sbb
je
mov
jne
jne
and
jbe
push
lret
pand
dec
and
push
mov
enter
adc
sbb
sbb
cmpsb
fistpl
lods
push
pop
int
fisttps
cli
sbb
pop
fdivrs
icebp
cli
xor
notl
xchg
cltd
dec
arpl
pop
push
pop
push
lods
test
push
mov
in
lmsw
xlat
mov
dec
imul
sbb
mov
pop
notl
or
gs
ja
cs
sbb
scas
pop
jno
push
cmpsb
jle
fs
dec
jno
pop
rorl
iret
mov
or
test
adc
je
cmp
loop
push
iret
jb
test
psubsw
in
popa
bnd
inc
push
sub
stos
push
mov
div
xorl
and
xchg
cld
iret
enter
lods
jecxz
bound
or
sti
shrb
and
mov
mov
xor
mov
rcll
idivb
fwait
mov
into
pusha
test
clc
jle
cmpsb
cld
mov
sahf
push
or
adc
and
dec
or
addr16
add
add
sub
jae
mov
sub
imul
push
idivl
jne
jmp
mov
push
sbb
inc
js
adc
dec
sbb
les
mov
dec
loop
pop
adc
add
das
gs
xchg
xor
cmc
xor
mov
repnz
rcrl
jl
or
in
jno
loop
fists
jo
hlt
loope
or
test
out
xchg
decb
xor
mov
push
aaa
dec
mov
repz
push
in
pop
ljmp
add
lret
push
mov
xchg
clc
jle
in
cmpsb
adc
cmc
mov
dec
pushw
leave
cmp
orb
pop
cmp
cwtl
fnsave
mov
in
xchg
or
dec
js
dec
sarl
ret
sbb
nop
loope
jnp
test
sbb
cmpsl
pop
or
mov
and
sahf
xor
mov
int
cmpsb
ja
adc
loopne
inc
push
pop
and
mov
out
imul
xchg
addl
cmc
lcall
inc
ret
mov
paddq
cmpsl
inc
lret
pop
xor
in
cmc
pop
call
mov
mov
out
mov
sub
xor
fimull
dec
or
jne
pop
push
sarl
mov
pop
push
xchg
test
dec
lea
stos
iret
incb
int3
inc
clc
cmp
das
or
mov
test
jle
repz
pusha
xor
sub
add
cmc
int3
loope
jl
mov
mov
arpl
hlt
lods
loopne
sbb
sbb
aaa
dec
rcr
es
pop
cmp
loopne
imul
pop
je
cmp
mov
pop
sub
cmp
leave
dec
or
lcall
jne
es
cmpsb
or
sub
leave
mov
jbe
xorl
mov
sarl
aam
outsl
pushf
push
nop
enter
add
lret
cmp
movsl
mov
nop
xchg
lret
xor
outsb
adc
add
cmp
mov
adc
push
sbb
inc
jl
ljmp
jae
inc
mov
adc
mov
cmp
sbb
mov
inc
xchg
lret
div
pop
push
mov
dec
jp
les
data16
or
push
movsl
mov
mov
jo
jnp
idivb
rcrl
add
rcll
lea
leave
mov
data16
pop
adc
ret
sti
ds
adc
fcompl
inc
sbb
fstps
xor
pop
call
jae
outsl
jle
pop
shll
ret
jle
xor
dec
bound
xor
fs
inc
pusha
inc
decb
push
stos
testw
sub
sub
es
lods
cltd
dec
inc
push
pushf
push
push
sbb
aas
add
loop
xchg
pop
dec
cmp
xchg
clc
push
pop
bound
in
push
dec
fdivl
bswap
out
call
lock
jno
cld
push
cmp
in
push
or
mov
mov
inc
subl
dec
filds
inc
pusha
mov
inc
testl
ret
lods
mov
or
lods
cld
mov
sub
sbb
push
xchg
sbb
mov
cmpsb
pop
out
pop
repnz
fnstcw
inc
add
or
lods
dec
sub
mov
mov
mov
jle
in
inc
push
and
and
and
inc
cwtl
nop
fxtract
adc
push
cwtl
add
cmpsb
and
push
xchg
pop
pop
or
repnz
mov
sub
arpl
mov
jns
push
push
cmc
jae
cmp
fildl
ffree
in
or
jg
lahf
sbb
sti
and
lds
fdivl
dec
inc
dec
jbe
cmp
rcrb
xor
inc
or
mov
shlb
insl
popf
push
xor
pop
inc
sub
daa
test
mov
cmp
mov
rorb
jnp
jnp
out
xchg
pop
pusha
test
mov
cmp
insb
dec
mov
add
icebp
push
or
cmpsb
mov
or
outsl
push
sahf
aam
psubsb
push
aad
sbb
sti
xor
add
push
das
in
add
stos
jne
loope
add
sbbb
outsl
shrb
int3
jg
divl
inc
dec
jno
sub
sti
icebp
mov
adc
pop
dec
mov
dec
scas
clc
and
jp
mov
data16
pop
in
test
icebp
repnz
dec
stos
push
jp
and
fisubrl
xchg
push
ljmp
popa
shrb
fwait
shlb
jno
leave
dec
jb
inc
push
cmp
dec
mov
test
jnp
cs
lahf
and
dec
xor
xchg
jp
fnsave
mov
adc
or
or
cmpsl
and
cmp
dec
nop
sti
jecxz
leave
test
js
mov
xor
out
jmp
mov
pop
jbe
add
add
shlb
add
or
aad
and
int
test
cmp
repz
mov
dec
subl
jbe
pop
pop
hlt
cli
arpl
sti
adc
pop
daa
aam
pop
ss
jge
test
xchg
add
insb
mov
sub
push
xor
xlat
xchg
cmp
xor
sbb
fwait
bound
sti
inc
imul
xchg
dec
in
loope
test
push
loopne
mov
pop
jnp
repz
or
pop
mov
jo
shll
ret
sub
mov
or
jmp
ret
stos
cmp
fs
imul
jae
push
push
add
sbb
jle
inc
fisttpl
push
dec
dec
fcomps
addr16
or
loopne
dec
cmp
in
sbb
cli
sub
sahf
mov
outsl
movsl
int
shr
out
sbb
or
sbb
stos
sub
xor
jno
add
lcall
es
fidivrl
mov
mov
ss
inc
mov
mov
cli
sarb
arpl
or
mov
into
in
or
cmc
dec
iret
dec
dec
pop
negl
cmc
mov
dec
fistpl
jb
dec
aaa
fisttpll
insl
aam
jmp
daa
xlat
fs
movsb
jne
mov
fs
sbb
iret
sub
sub
push
cmpsb
or
movsl
mov
push
or
cmp
xor
adc
mov
mov
jae
ds
out
orb
jno
and
div
jle
jnp
lock
leave
scas
pushf
mov
xchg
in
cmp
sub
es
mov
aaa
pop
adc
fstps
mov
xor
sub
add
icebp
cltd
push
mov
or
mov
and
mov
mov
or
xchg
lahf
bound
push
call
xchg
movsb
fs
jns
push
inc
xchg
xor
cld
repz
ds
andl
pop
xchg
fldl
inc
and
xor
pop
jge
adcl
fdivrs
mov
push
das
outsl
jb
ss
in
outsb
loopne
mov
cltd
push
cld
cmp
xchg
lock
push
mov
fsubs
test
movsl
insb
sbb
add
sub
fstl
repnz
mov
sub
push
cltd
aas
outsl
cltd
loop
out
ja
pop
test
dec
xlat
mov
add
mov
xchg
fdivl
addps
fiaddl
test
aaa
push
xor
cli
cmp
xchg
sbb
mov
jp
cld
cmc
inc
mov
rcrl
xchg
mov
incl
in
xchg
mov
sbb
mov
dec
in
sahf
push
xchg
jbe
aad
jne
movsl
sub
out
dec
hlt
cli
mov
aas
lods
mov
nop
jno
sub
jbe
dec
jecxz
mov
insb
pusha
xor
cmc
ret
loope
nop
xor
mov
test
mov
push
xchg
loope
xor
mov
test
mov
cwtl
push
out
inc
xor
jg
cmp
fistpll
jno
mov
add
mov
add
gs
adc
xchg
das
sub
mov
lret
call
xlat
or
sbb
pop
dec
sbb
pop
inc
lahf
fildll
push
loop
mov
or
add
pop
aas
cltd
add
sti
sub
shlb
xchg
mov
adc
or
push
adc
daa
mov
fisttps
je
mov
mov
pop
scas
pop
add
jns
sbb
aaa
icebp
adc
mov
dec
imul
add
lock
out
mov
pop
pop
or
mov
in
jp
ljmp
mov
call
mov
mov
incl
test
or
ret
stos
insl
mov
add
push
mov
xchg
sub
mov
cmc
add
add
lcall
cwtl
icebp
pop
test
adc
pop
xchg
notl
out
sub
mov
cmc
subl
lods
stos
xchg
fadd
adc
xor
sub
aam
cs
jmp
add
jns
popf
pshufw
jno
jbe
xor
fidivrl
push
dec
nop
jne
cli
adc
mov
je
enter
aad
and
push
cmp
inc
inc
daa
cmpsl
pop
mov
mov
fcoms
mov
adc
add
pop
adc
pop
pop
jb
dec
and
jne
mov
jecxz
mov
push
xchg
loopne
mov
insb
fld
jno
idivb
pop
lds
mov
adc
mov
aaa
jo
out
std
adc
inc
mov
ror
insl
mov
scas
repnz
das
dec
pop
add
adc
sbb
mov
push
sbb
push
cmc
pop
icebp
push
fs
arpl
outsl
ds
js
bound
xor
adc
adc
jnp
je
sti
add
cmp
sub
cmp
rolb
popf
test
sub
aas
pop
mov
jmp
adc
xchg
lret
lret
mov
inc
roll
pcmpeqd
adc
aaa
sub
imul
aas
test
adc
xchg
pop
push
cld
fisttpll
lret
and
xchg
dec
faddl
push
cmp
into
xor
mov
push
and
sub
inc
jp
mov
test
in
loope
cmp
out
cli
xchg
inc
out
or
pop
mov
das
xchg
inc
out
clc
push
ja
mov
popf
roll
or
jle
push
aad
mov
mov
stc
sub
sbb
ret
or
jae
xor
or
dec
mov
stos
lods
das
cmpsl
std
lret
nop
inc
xchg
test
push
mov
lret
sub
jl
jge
adc
mov
add
push
xchg
xchg
xchg
sar
addr16
std
cmp
cli
add
sbbl
in
cmpb
mov
aas
mov
inc
and
dec
fcoms
inc
cmp
jecxz
int3
xchg
inc
mov
mov
xor
scas
mov
int
mov
inc
mov
adc
daa
fiaddl
and
sbb
rcrb
int
mov
xor
xchg
xchg
pop
jns
movsl
loope
sbb
mov
jecxz
into
dec
xor
push
fists
fwait
movd
and
dec
ja
mov
push
xor
out
and
shlb
ss
rcll
xchg
ljmp
insl
or
and
mov
ret
sbb
mov
es
cmc
jge
lret
loop
pop
push
add
or
lea
bswap
push
mov
pushf
jmp
subl
lret
fwait
sub
test
or
xor
push
pop
inc
adc
push
dec
test
cs
push
sbb
ljmp
les
test
xchg
cli
mov
gs
adc
cmpsb
stos
adc
and
out
add
cld
cmp
test
dec
inc
push
pop
cmpsl
leave
scas
in
xlat
hlt
jae
fnstcw
inc
mov
out
es
stos
sub
dec
cmpsl
mov
mov
fwait
out
jns
sub
mov
or
mov
xchg
mov
aad
stos
pop
push
dec
mov
sbb
inc
into
mov
es
inc
mov
push
jl
adc
aaa
mov
popa
in
testb
pushf
insb
test
cmc
mov
enter
mov
lcall
dec
call
shll
add
and
cltd
inc
fistpll
inc
shlb
mov
shl
push
les
mov
adc
and
in
sub
mov
push
xchg
ffreep
movlps
or
sub
or
mov
xchg
adc
aad
add
fwait
lahf
push
jno
fmulp
lret
fsubrs
lahf
mov
in
imul
mov
out
and
cmp
mov
lret
and
les
cmc
jbe
lcall
dec
ss
outsl
pop
mov
inc
and
jecxz
loope
add
push
pop
mov
daa
out
xor
out
or
mov
jno
inc
mov
xor
pop
cmp
aaa
inc
negl
cmpsb
out
xchg
mov
mov
rolb
shl
mov
cmp
push
movsb
mov
std
enter
cmpl
cmp
fdivs
sahf
loope
lahf
adc
pop
cmp
outsl
inc
aas
cmc
pop
jecxz
lret
mov
lock
mov
inc
in
adc
out
and
addl
xorb
fbstp
stos
gs
fwait
outsb
imul
lret
dec
shrl
lods
or
jbe
lret
out
int3
inc
scas
or
jmp
push
jae
gs
inc
scas
push
icebp
lahf
dec
arpl
mov
pop
rolb
and
cmp
push
xor
mov
les
imul
xchg
ret
cmp
incl
aad
aaa
mov
gs
dec
repz
mov
mov
mov
ret
cmp
cmc
xorl
test
sub
cmc
push
test
bound
loopne
jecxz
inc
inc
lods
std
addb
fwait
out
inc
inc
push
jl
jbe
pop
dec
pop
mov
sbb
sbbl
push
pop
jnp
mov
daa
movhps
stc
cmp
sbb
insb
jne
push
lcall
adc
ja
sti
push
xchg
pop
xor
sbb
daa
pop
adc
and
icebp
fidivl
ja
and
fidivl
movsl
xlat
aaa
in
jmp
sub
push
repnz
insl
std
mov
mov
movsb
mov
int3
xor
cmpb
test
shr
sahf
push
sbb
jge
push
push
xchg
repnz
pop
xchg
push
xchg
adc
xor
pop
xchg
outsb
mov
sub
and
push
out
adc
inc
jae
dec
loop
pop
xchg
or
sysenter
xchg
ret
sarb
xchg
clc
pushf
addr16
pushf
mov
fisttpll
adc
and
xchg
pop
inc
test
add
outsb
sbb
rorl
scas
popf
adc
notl
mov
sub
ret
sbbb
sbb
fnstenv
subl
or
out
je
dec
mov
ret
dec
sbb
or
mov
lods
mov
sbb
xlat
cmp
das
inc
mov
fimull
push
movsl
repz
les
sub
push
push
lcall
jo
fisubrs
pop
fbstp
ljmp
mov
push
outsl
lcall
addb
jg
jg
enter
and
sbb
sub
xchg
ja
xchg
popa
pop
punpckldq
mov
dec
mov
sbb
jo
ret
outsb
data16
lret
dec
and
sbb
sub
mov
mov
repnz
mov
pop
lea
and
cmp
orb
or
sbb
fiadds
pop
pop
push
adc
and
sbb
mov
adc
loopne
cmp
add
push
cmpsl
mov
pop
das
sbb
addr16
mov
jno
clc
cltd
roll
push
imul
xchg
inc
cmp
adc
pusha
cltd
aaa
loope
xor
leave
jecxz
xchg
adc
shrl
dec
inc
sti
ret
jg
in
mov
mov
dec
loop
xchg
pop
jmp
test
cmpsb
aas
sbb
fcoml
jbe
and
cmpsb
lret
shl
pushf
rolb
in
aad
shrl
xchg
imul
inc
into
xor
sub
mov
xlat
push
je
sub
pop
xor
adc
dec
outsb
inc
jle
adc
fxch
loop
es
or
popa
or
repz
addr16
push
sub
xchg
cltd
loop
movsb
decl
test
stos
xor
and
add
push
and
add
push
dec
and
fimuls
push
xor
dec
les
pop
daa
idivl
bound
sub
push
xor
pop
popf
mov
mov
mov
loop
mov
sarb
cld
cmp
push
dec
bound
cmp
cmp
jbe
jp
outsl
and
sbb
add
sbb
add
mov
mov
inc
clc
test
lods
mov
loop
stos
mov
jl
popl
js
inc
adc
loop
adc
jmp
or
cmp
insb
lods
cwtl
ja
cmp
std
movsl
les
xchg
push
add
push
jbe
scas
lods
jno
jge
ja
jno
jbe
mov
mov
xchg
orb
mov
fsubs
lock
xchg
jg
aas
jge
bound
pop
loop
pusha
cld
and
enter
sub
out
sbb
loopne
jo
pop
fdivrs
adc
sub
aam
mov
sbb
cltd
stos
lcall
ja
pop
mov
test
push
stos
nop
cmc
and
neg
faddp
push
clc
pop
jo
push
and
pop
out
pop
add
adc
add
inc
sbb
and
mov
adc
push
jmp
repz
add
jo
stos
js
out
data16
adc
and
dec
mov
fnstsw
sbb
ss
aad
or
gs
push
call
lret
xor
xchg
pop
test
test
xor
fldcw
stc
cltd
testb
pop
mov
xchg
mov
xchg
ljmp
hlt
mov
or
js
xor
les
mov
mov
aad
lret
or
int
xor
and
aad
cltd
jnp
push
inc
xchg
and
cwtl
ret
dec
jb
into
hlt
test
add
push
jns
adc
mov
ret
ret
xlat
aas
pop
push
mov
stc
xor
adc
fisubrl
jl
pop
add
jnp
inc
add
in
lea
lret
inc
xor
mov
rcrl
dec
test
popf
mov
shrb
in
out
xchg
int
and
mulb
lds
sub
rol
lret
cmp
fisubrl
mov
out
scas
repnz
loope
imul
jae
sub
mov
inc
fdivrl
stos
fsubrs
dec
add
lret
xchg
into
out
aas
ret
lret
test
inc
sbb
push
mov
inc
int
cli
fnstenv
mov
lds
ljmp
mov
xor
mov
cmpsl
sub
enter
or
pop
in
testb
pop
pop
lock
sbb
lahf
iret
jno
loopne
jp
cmp
fidivs
loop
sbb
mov
mov
ficomps
xorl
jne
fnstcw
loop
mov
mov
lret
js
iret
loopne
pop
repz
out
ja
mov
mov
cmp
sbb
push
sahf
inc
pop
push
cmp
jo
out
add
out
into
in
jae
and
inc
mov
push
inc
out
xchg
or
or
and
sbb
sbb
ss
jmp
popa
aas
pop
in
sbb
rorl
inc
mov
sub
insl
push
lret
add
and
fimull
shll
rcrb
mov
call
push
xor
pop
out
aad
aaa
cld
and
xchg
stos
mov
fistpl
stc
loop
out
lods
std
inc
loopne
pop
repnz
xchg
add
dec
enter
or
sbbl
sub
dec
imul
out
dec
sbb
add
push
sbb
popf
imul
leave
sahf
inc
jo
adc
hlt
je
mov
das
movsl
or
xchg
mov
fsubr
sbb
nop
lret
loopne
push
and
adc
dec
mov
add
add
aam
add
test
sbbb
mov
push
ljmp
std
xchg
repz
filds
xor
xor
popa
fwait
pop
inc
call
lea
jne
insl
or
sub
lds
inc
call
shll
insb
cs
daa
xorl
bound
idiv
xchg
xchg
sub
insl
cmp
jmp
sbb
popf
jno
inc
jmp
jb
hlt
mov
cmc
nop
pop
mov
lahf
ret
les
push
in
mov
adc
jmp
fisttpl
movsl
test
push
pop
dec
in
neg
mov
daa
inc
imulb
call
xchg
outsb
mov
cmp
aad
imul
xchg
adc
mov
bound
addr16
add
pop
loope
dec
inc
iret
outsb
jne
cmp
hlt
sub
andb
lods
fstps
clc
gs
sbb
mov
xor
and
lea
xchg
jbe
xchg
insl
subl
jnp
icebp
cmpsb
xor
add
or
in
adc
mov
jbe
mov
aad
stc
fistpl
mov
push
inc
dec
xchg
adc
out
dec
lcall
insl
into
xlat
jecxz
daa
mov
stos
add
mov
add
hlt
mov
dec
movsb
and
cmp
ret
aam
mov
pushf
and
lods
ljmp
cmpsb
push
mov
insb
cmc
sub
rolb
out
mov
mov
pop
aad
call
add
xor
shl
ss
fdivrl
sbb
xchg
clc
repnz
inc
lss
cmc
idivb
enter
sbb
ja
ficomps
ficoms
pop
call
adc
jle
stos
loope
int3
andb
lods
add
decb
loop
cmpsb
sahf
sti
pop
ljmp
or
insl
jne
mov
mov
mov
mov
and
jle
fldl
push
pusha
jge
add
cmpsl
pop
cmpsb
iret
add
out
xchg
sub
dec
pop
rol
nop
nop
add
lret
mull
xor
inc
les
mov
mov
imul
daa
mov
pop
in
out
sti
into
jecxz
inc
or
adc
lcall
loop
sbb
jo
cwtl
mov
adc
ss
xchg
dec
mov
inc
movsb
dec
add
jb
iret
mov
aam
pop
jbe
lret
sbb
les
pop
sub
enter
enter
jecxz
scas
xchg
arpl
jg
insl
sbbb
outsl
dec
adc
stc
pop
mov
xor
test
push
bound
addr16
jp
leave
sbb
loop
pop
ja
push
xor
add
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
call
bound
pop
bound
jae
sub
loopne
xor
sub
dec
mov
movsl
loop
arpl
insb
mov
adc
lock
adc
hlt
repz
jbe
das
scas
decb
adcl
out
jne
mov
andb
mov
mov
dec
dec
or
gs
ljmp
fcoml
and
jno
pusha
enter
jmp
push
and
xlat
jecxz
mov
int
les
cld
dec
push
pop
ss
inc
jp
mov
aam
hlt
inc
xlat
push
fcoml
roll
mov
faddl
int3
fstps
fdivl
xor
rclb
mov
or
popf
adc
and
sbb
sarb
sub
addl
in
cs
aaa
clc
sbb
sub
fdivrl
or
and
pop
add
xchg
rcll
call
inc
xor
and
cmc
arpl
aas
rolb
pop
push
sbb
pop
sbb
lret
sahf
aad
sbbl
add
jecxz
aaa
leave
cmpsb
test
shlb
shr
lea
popf
mov
lret
xchg
fsts
js
dec
xor
xchg
add
and
mov
mov
addr16
sbbl
orl
dec
or
scas
rcl
clc
lds
aaa
daa
sbb
fsubp
pop
pop
ret
adc
push
adc
lret
jge
fwait
push
ss
scas
aas
pop
out
push
cltd
in
xchg
fstp
int3
or
add
or
negb
lret
adc
pusha
insb
xor
rorb
mov
and
int3
dec
push
iret
inc
daa
push
cmp
sub
fisttpll
cmp
mov
scas
mov
icebp
mov
or
pop
fidivl
fs
lea
lahf
sti
sbb
fisttps
push
jp
or
inc
adc
icebp
mov
aad
movsl
pop
fnstenv
mov
xor
imul
mov
lret
inc
aas
cmpsb
call
dec
dec
outsb
ja
mov
iret
loopne
lods
push
es
cmp
mov
push
sahf
pop
sahf
int
jge
sub
inc
push
mov
pop
mov
push
mov
dec
faddl
fiaddl
sub
cmp
jecxz
inc
dec
sub
xchg
shl
dec
add
lahf
push
jb
sbb
out
sub
lods
arpl
mov
push
mov
xchg
add
mov
xchg
daa
outsl
hlt
push
call
pop
pop
jnp
js
ds
sbb
out
movb
push
pusha
xor
xchg
adc
jb
aam
stos
mov
stos
adc
mov
iret
nop
jle
inc
leave
mov
pusha
mov
add
mov
insb
jl
cmpsb
dec
and
pop
es
orl
test
push
xor
dec
push
fsubp
mov
and
push
mov
outsl
inc
adcb
cmp
sbb
jge
sahf
jg
mov
cmp
aad
aam
xchg
pop
jns
imul
and
les
xchg
sub
in
inc
mov
xor
inc
add
or
mov
loop
push
mov
jp
cli
fcmovne
frstor
pop
sbb
test
adc
mov
push
adc
mov
mov
jg
mov
jmp
cld
push
mov
pop
repnz
inc
sarb
mov
mov
rcrb
mov
cli
dec
push
xor
bound
pop
test
pop
fwait
idiv
inc
testl
push
sbb
dec
and
addr16
dec
push
and
jl
push
xchg
mov
movsl
mov
loopne
mov
mov
push
mov
insl
and
shr
xor
popf
inc
jmp
iret
lret
loopne
or
push
adc
out
lods
xor
enter
dec
dec
movsbl
mov
mov
pop
jns
and
ja
lods
out
mov
xchg
sub
shll
jb
cli
scas
mov
xchg
ljmp
jmp
push
daa
jge
push
out
out
jb
xor
push
adc
mov
lcall
leave
call
aam
add
movsl
or
jge
rcll
or
dec
repz
stos
cmpsl
mov
or
adc
mov
sbb
popa
xchg
pop
das
nop
mov
pop
ds
inc
sbb
mov
js
jl
mov
cmpsl
sbb
jecxz
push
push
jp
arpl
aam
add
shlb
insl
xchg
pop
jo
in
push
leave
out
jnp
pop
je
cmpsl
inc
movsl
add
cmc
out
mov
mov
xlat
es
fidivl
pop
pop
inc
cmpsl
cli
pop
xor
hlt
sub
inc
push
mov
inc
push
cwtl
lock
xor
mov
lock
mov
pop
lret
pop
fdivrl
add
cmp
pop
sub
jns
js
cmpb
insb
call
gs
shl
pop
and
das
aaa
mov
clc
add
adc
mov
jp
dec
push
add
jae
jge
int3
inc
nop
add
mov
mov
dec
data16
pusha
xlat
cmp
data16
jle
cmc
push
add
xlat
rorl
repz
flds
jnp
push
leave
push
jmp
leave
fstps
inc
fildll
pop
das
inc
pop
je
mov
les
pop
xor
pop
xor
or
or
repnz
movsl
aaa
cmpsb
add
add
out
dec
adc
popf
jp
arpl
xchg
jnp
out
insb
inc
and
in
cmpsb
xchg
inc
dec
std
sahf
inc
or
icebp
add
lcall
xor
mov
or
das
push
inc
lods
gs
cli
js
cmp
mov
mov
outsb
sbb
into
push
stos
and
incl
mov
xchg
cltd
out
cltd
xor
xchg
xchg
ljmp
sbb
fbstp
sbb
adc
int
rep
mov
mov
push
push
jnp
mov
out
fs
das
mull
test
repnz
cmc
stos
push
xchg
mov
or
cwtl
adcb
mov
ja
mov
pushl
adc
enter
add
push
dec
insl
nop
ja
add
outsl
lret
pop
inc
sbb
fadds
stos
and
lock
push
inc
decb
or
dec
mov
push
mov
movsl
test
mov
int3
push
mov
test
dec
sub
mov
scas
pop
xchg
int3
push
test
adc
jb
mov
sub
pushf
sbb
inc
rcrl
push
jg
mov
mov
sti
jp
mov
into
rorb
jae
daa
aam
push
inc
xchg
sahf
ja
mov
cmp
std
lock
pop
repz
adc
ss
cmp
rolb
cli
fcoml
cmpsl
je
insb
rclb
adc
popf
sbb
movsl
xchg
in
cmp
mov
es
das
xchg
lret
cmp
out
mov
lahf
xor
or
pop
push
ficompl
fbld
lea
and
pop
pop
rcrl
push
mov
jp
cmpsl
push
and
jmp
mov
movl
adc
cwtl
out
pop
cmpb
lret
sub
xor
ds
or
orb
iret
je
stos
add
int
je
pop
mov
pop
add
or
xchg
fwait
out
dec
push
mov
mov
xchg
add
pmullw
push
das
mov
cwtl
cli
divb
jne
push
cwtl
ror
adc
jnp
jb
and
sub
or
hlt
mov
mov
mov
repz
fldt
in
fdivr
shr
mov
pop
mov
dec
cmp
int
fnsave
push
mov
or
out
add
in
in
rcrl
fs
mov
movsl
clc
sub
test
add
add
rcll
into
outsb
shlb
sbb
jmp
add
cmc
or
push
cmp
movsl
nop
dec
mov
or
into
inc
adc
mov
inc
pop
out
fisubrs
shr
mov
and
in
pop
mov
push
data16
fninit
stos
pop
push
cltd
mov
sbb
xor
jns
psubd
lock
popa
push
push
mov
pop
xor
jns
mov
dec
dec
pop
fisttps
adc
dec
or
adc
fisubs
push
out
mov
xorl
sbb
push
fistpll
jae
leave
ret
iret
jle
std
ja
outsl
fnstcw
clc
cld
mov
pop
aam
into
outsl
clc
jge
jno
lods
out
mov
add
idivb
jge
sub
insb
mov
cmpsl
js
insb
stos
inc
adc
cs
ja
scas
sub
push
ja
inc
pusha
push
and
xchg
xor
inc
ljmp
mov
stos
imul
mov
jno
outsb
inc
lods
or
xchg
push
or
adc
in
sbb
pop
cmpsb
out
cwtl
cmpsb
pusha
cwtl
fimull
mov
xlat
fnop
lea
push
sbb
orl
mov
sub
cmc
push
and
adc
popa
dec
jge
dec
pop
mov
adc
aaa
test
jle
jbe
xorl
add
lret
adc
jns
mov
dec
adc
ret
and
lcall
mov
xchg
mov
or
inc
cmpsb
mov
in
lea
jb
jecxz
iret
push
push
sub
push
mov
shrl
ret
mov
jmp
mov
pushf
test
shrl
xchg
fsts
loope
adc
clc
adc
ret
notb
jns
seto
inc
xchg
arpl
fwait
jmp
xor
jmp
fwait
rol
ss
mov
std
rorl
adc
jl
clc
test
xor
sub
in
cmpsl
in
and
push
leave
push
cmp
mov
stos
push
pop
adc
add
push
or
push
xor
imul
mov
test
xor
mov
xchg
das
andb
lds
cwtl
cmp
jns
nop
arpl
pop
mov
xchg
jge
popf
daa
cmp
ds
jg
inc
jne
xchg
jecxz
xor
sarb
xchg
pop
cmpsb
stc
push
add
jl
xor
int
jecxz
arpl
fcomip
fldt
stos
push
cmpsl
mov
push
not
jnp
xorl
imul
sarb
scas
push
mov
cmpsb
cmpsb
dec
inc
roll
xchg
outsl
in
cwtl
imul
rorb
dec
jp
lcall
pop
mov
or
adc
je
add
mov
sbb
imul
inc
test
xor
or
js
cmp
add
lds
fs
andl
mov
ljmp
leave
sbb
jnp
pushf
icebp
jmp
jle
jp
fistpl
cmp
and
mov
and
mov
xor
adc
icebp
jecxz
lcall
pop
inc
cmp
inc
inc
ficomps
cmp
orb
mov
xchg
loop
add
mov
mov
fwait
dec
imul
jmp
mov
xor
sub
sbb
xorb
mov
cmp
cmp
xchg
imul
flds
loope
fstpl
cli
push
dec
mov
cmp
fistpll
sub
inc
inc
mov
mov
data16
jns
roll
and
mov
or
mov
in
mov
or
mull
js
xor
cmp
insb
sbb
jbe
clc
cmp
cmpsl
pop
notl
and
fistpl
cmpsb
imul
pushl
xor
repz
push
push
lock
dec
testl
dec
cmp
and
and
outsb
mov
mov
cmpsl
test
outsb
clc
imull
andb
xchg
stos
popf
scas
add
xor
sahf
jg
sbb
test
sbb
pusha
sub
rorb
lahf
ja
jge
add
xchg
icebp
jecxz
imul
aam
call
jo
cmp
lds
push
jb
or
shrl
push
dec
and
push
cmp
aaa
xchg
jmp
pop
jne
xchg
sub
sub
sahf
inc
leave
xchg
jecxz
imul
xchg
pop
dec
xchg
mov
icebp
add
imul
call
fs
pusha
pop
push
xchg
dec
bound
and
movsl
cmpsl
sbb
loop
aad
mov
lret
outsl
mov
andl
dec
fs
xlat
mov
lods
mov
flds
mov
std
out
dec
out
mov
in
int
clc
js
testb
jg
test
loop
mov
cmp
xor
jg
cwtl
repz
mov
push
jecxz
test
test
pusha
or
add
or
popf
adc
out
push
jl
cmpsb
lret
mov
aas
pop
and
sbb
add
bound
push
lret
imul
pop
repz
nop
add
jnp
push
push
js
xchg
or
fwait
cmc
jmp
and
inc
inc
jg
sub
lds
in
std
xchg
add
mov
fidivl
mov
dec
in
xchg
in
sub
inc
lods
jg
xchg
xor
dec
cmp
jp
dec
pushf
rorl
push
outsl
xchg
iret
cmp
pop
sbb
mov
call
fs
lret
xchg
push
adc
xorb
arpl
imul
add
fsubrl
xor
ss
mov
fwait
add
in
adcl
enter
cmp
outsb
fstpt
sub
movsb
push
dec
adc
jle
dec
mov
sbb
scas
adc
cmp
mov
or
out
rcl
push
push
lods
inc
fldt
cmc
pop
jno
rclb
inc
out
xorb
mov
aaa
popa
pop
cmp
mov
movsb
xor
add
ja
xchg
cmp
call
mov
sub
dec
es
sahf
enter
inc
cmp
push
ret
mov
lea
inc
gs
fbld
in
iret
imul
rolb
std
lret
xchg
je
adc
inc
push
jecxz
jle
arpl
stc
jno
mov
add
adc
popf
lock
xchg
scas
inc
xchg
loopne
repnz
mov
lods
lds
push
xchg
add
add
fwait
xchg
and
pop
xchg
bound
and
sub
pop
std
or
fsubl
mov
or
pushf
outsl
mov
stc
cltd
in
or
fs
mov
loope
mov
into
out
mov
jmp
cmpb
iret
mov
push
xchg
stc
sbb
xchg
roll
leave
lods
out
dec
mov
int3
push
lahf
cltd
sbb
add
out
mov
lock
mov
fiadds
inc
dec
into
divl
jmp
pop
clc
jecxz
jle
mov
cmp
cltd
fwait
cli
sahf
xchg
lods
shlb
out
add
inc
mov
jno
fbstp
jle
loope
sub
sub
int
pop
rcrl
rclb
jmp
inc
jae
sub
cmp
xlat
iret
mov
jnp
cmpsl
cmp
rorb
dec
in
mov
sti
pop
mov
pop
xor
stos
sahf
pop
sbb
sbb
xchg
xor
outsl
test
cmp
adc
xor
pop
scas
into
jae
mov
in
imul
jo
inc
push
int
scas
cvttps2pi
nop
mov
les
lds
pop
ror
stos
adc
fsubl
icebp
add
pop
popf
jbe
xchg
in
or
or
loope
jns
xchg
jae
jne
mov
test
pop
rorl
jl
test
adcl
aas
stos
sub
push
or
out
push
ljmp
pushf
sub
xor
stc
sub
pusha
mov
push
push
out
repz
mov
in
imul
dec
out
les
int3
xchg
pop
movsb
jno
repz
std
pop
jge
push
insb
movsl
cwtl
stos
movl
dec
xchg
jno
and
sub
call
fbstp
fs
sti
faddp
push
xchg
mov
mov
mov
jno
jp
add
lock
testb
mov
adc
arpl
mov
out
inc
enter
adc
cmc
inc
into
shrb
testl
int3
xlat
in
movsb
xor
push
adc
push
sbb
lods
mulb
pusha
shl
dec
dec
mov
push
cli
inc
inc
jae
xchg
pop
fwait
addr16
mov
mov
shll
mov
daa
jnp
aam
divl
call
stos
lods
cli
js
xchg
jo
add
and
xchg
imul
negb
adc
or
jg
and
repz
cmc
out
push
cld
shl
xchg
int3
arpl
mov
mov
lods
jmp
adc
mov
mov
sahf
mov
adc
ja
repz
adc
mov
loop
faddl
xor
jp
fwait
adc
daa
or
or
cwtl
fcmovbe
pop
and
cmp
loope
js,pn
add
xor
fs
jbe
cmpsl
call
jmp
call
add
push
ljmp
or
arpl
xchg
scas
pop
cmpsl
adc
pop
add
push
mov
pop
sbb
stos
push
inc
sbb
mov
xor
les
icebp
and
sti
push
dec
jb
iret
or
sbb
orl
jno
push
cmp
in
in
mov
out
pop
mov
scas
xchg
adc
movb
jmp
pop
xor
dec
es
push
test
dec
and
sbb
adc
lods
sub
out
or
xlat
arpl
in
and
dec
mov
lods
xchg
insb
cld
or
inc
and
gs
cld
fs
xchg
sahf
xor
sbb
fldcw
sbb
cmpsl
sub
sub
and
xor
in
mov
mov
mov
xor
mov
mov
mov
lods
jp
sbb
mov
sub
addr16
pop
and
repnz
das
fstpt
xlat
xor
addr16
popf
xor
add
pop
sbb
push
push
test
push
fcmovnbe
mov
cmp
cmp
aam
aad
sarb
nop
lea
scas
lock
inc
movsl
lcall
leave
pop
nop
pop
mov
xchg
jmp
aam
mov
fs
adc
pop
mov
test
xor
dec
mov
jae
paddw
lcall
adc
dec
or
sbb
cs
fdivp
sbb
cmc
ds
sahf
and
mov
scas
sti
adc
dec
jge
push
rcl
xchg
inc
addr16
popa
or
add
add
repz
in
loope
inc
push
test
mov
jno
pushf
push
sub
loop
insb
jb
jp
jbe
ret
xchg
xchg
xchg
sub
pop
in
mov
jl
inc
or
ret
push
scas
jge
and
dec
sti
add
loopne
dec
adc
adc
push
inc
sbb
addl
mov
stc
scas
or
sbb
adc
cmp
sub
leave
mov
pop
mov
xchg
in
test
aaa
xor
sbb
popf
mov
dec
push
or
das
sub
or
or
fisttpl
popa
imul
mov
sbb
mov
xchg
xor
lods
inc
jp
cmpsl
mov
fadd
nop
lods
mov
mov
adcl
inc
mov
repz
roll
cli
add
jl
shrb
sbb
mov
and
repnz
aad
sub
ja
mov
out
xchg
outsb
sub
xchg
and
jmp
mov
test
dec
sbb
imul
or
jo
inc
inc
aam
jle
shrb
add
cs
jae
js
clc
sarl
mov
inc
das
cltd
aaa
idivl
lahf
xor
sub
lock
mov
dec
sahf
test
lea
loope
inc
or
push
outsl
outsb
push
add
push
ficomps
push
lods
sub
retw
lcall
push
add
iret
data16
adcl
jbe
adc
idivb
rcll
mov
xchg
test
sbb
in
lock
outsl
movsl
jge
xchg
gs
sub
subl
call
sub
ret
insb
xor
mov
jns
aad
lods
std
ss
addr16
pusha
mov
cli
lret
movq
sbb
fimuls
dec
hlt
aad
sub
inc
fnsave
addr16
daa
dec
sbb
mov
ja
addr16
mov
nop
into
adc
movsl
in
or
sub
push
push
fmuls
ret
dec
cli
inc
lret
into
mov
push
loop
or
sti
dec
outsl
iret
addr16
mov
fstpl
inc
push
mov
push
sub
rorb
movl
sbb
mov
mov
jp,pt
mov
sahf
sbb
cltd
in
and
adc
xchg
mov
add
add
std
iret
shll
adc
scas
pop
dec
mov
popf
cmp
dec
inc
inc
pop
xor
sub
leave
idivb
mov
push
jne
or
test
rcrl
enter
adc
mov
push
and
lds
dec
je
stc
add
hlt
rorl
lret
mov
inc
js
lcall
ret
pop
pop
lock
jl
sub
fdivs
sbb
mov
nop
ja
flds
cmp
add
mov
addb
mov
int3
xor
fiaddl
nop
bound
aas
mov
dec
cmpsb
add
cmp
mov
pop
lock
adc
jg
mov
inc
in
popf
movsb
push
rclb
lea
pop
lret
ss
pop
mov
movsl
add
or
pop
dec
dec
ja
pop
stos
mov
test
mov
and
dec
stos
pop
dec
std
mov
pop
sti
loop
shll
inc
and
fwait
pop
sbb
stos
fstpt
xlat
push
icebp
repz
scas
mov
adc
inc
dec
or
fisubl
aad
jno
mov
xchg
data16
rol
out
mov
lahf
mov
scas
inc
xchg
rolb
cmp
mov
sub
test
mov
aaa
scas
jmp
jl
xchg
inc
add
ljmp
sub
fnstsw
cs
fbld
fldl
mov
and
or
lret
adc
loop
cmp
testl
dec
cmp
lds
push
into
lods
push
in
push
jle
cld
add
mov
hlt
pop
xchg
mov
mov
bound
aam
ljmp
lods
or
add
xchg
icebp
fsin
es
cmp
mov
cmp
xchg
outsl
lcall
mov
test
imul
sbb
xor
out
and
je
aad
jg
jnp
cli
push
pop
push
mov
xor
push
jecxz
xor
imul
lea
pop
mov
jle
mov
sbb
mov
mov
ret
lret
xor
push
pop
and
fcmove
cmpsb
pop
stos
sahf
cltd
inc
jnp
sti
sub
jb
jbe
push
data16
dec
xchg
dec
sbb
insl
cmp
dec
adc
xor
cmp
pop
fs
push
rcrl
and
movsb
adcb
inc
loop
movsb
ds
aad
push
and
mov
std
mov
xchg
sub
lahf
cmpsb
pushf
ds
sti
mov
in
lret
hlt
int
mov
fwait
inc
cmpsl
adc
jge
xor
roll
inc
add
mov
mov
and
jb
push
cmp
add
mov
add
stos
je
xchg
lahf
jae
bound
xor
rol
aas
mulps
and
test
adc
test
xchg
popa
ds
nop
mov
out
ss
mov
js
push
fadd
pop
inc
inc
push
lea
stos
cmp
push
cld
or
lcall
rorb
fdivs
decb
lock
sbb
sbb
dec
mov
mov
mov
cli
sahf
xlat
or
jae
push
cmpsl
pop
es
push
jne
xchg
xor
cmp
adc
cmpsl
aaa
cmp
jbe
mov
push
scas
mov
outsl
push
inc
push
lock
dec
xchg
bound
subb
fidivl
push
jns
cmp
dec
mov
sbbb
addb
push
addb
pushf
scas
xchg
jb
insb
or
pop
push
push
ret
idivl
jo
popa
gs
mov
dec
sub
xchg
inc
lods
mov
nop
jecxz
cs
mov
enter
mov
and
ret
mov
mov
fwait
push
jg
mov
inc
push
iret
call
ds
mull
sub
and
fbld
hlt
imul
and
xor
imulb
lock
pop
adc
subl
xchg
out
adc
xlat
nop
xchg
in
or
int3
add
pusha
enter
jns
add
call
pop
xor
test
and
into
mov
stos
ficoml
dec
xchg
push
cmp
call
fimull
shlb
adc
enter
dec
jmp
jbe
cwtl
pop
add
cmp
das
mov
test
popf
lret
jecxz
outsb
adc
repnz
xchg
mov
sub
aad
ds
outsb
mov
sub
insl
mov
adc
sarl
add
int
mov
das
sbb
sbbb
popa
sub
sub
aas
mov
add
inc
xchg
fistpll
pop
in
fldcw
cmp
std
fisttps
mov
loopne
xor
js
out
ja
push
and
cwtl
xchg
inc
and
in
stos
popa
jo
push
and
mov
pop
out
fdivr
rorb
mov
mov
loopne
mov
scas
jns
std
daa
fistpll
push
xchg
popf
insl
in
out
hlt
in
pop
mov
add
push
xchg
mov
xchg
into
ljmp
aam
pop
sub
call
sbb
ret
push
add
test
cmp
jle
lock
inc
and
jecxz
mov
or
and
jg
stc
dec
cmp
rclb
or
and
sbb
dec
push
push
fisttpl
pushf
inc
mov
test
ljmp
xor
inc
arpl
cmp
jle
mov
repnz
mov
sbb
iret
mov
and
fidivs
pop
or
rcl
jecxz
fdiv
ret
outsb
jg
xchg
js
cld
cmc
jne
das
jbe
mov
mov
ret
int3
out
stc
mov
fs
jmp
push
lea
pop
insl
sbb
cmp
repz
dec
jp
or
cmp
adc
lods
push
in
aam
mov
movsb
lock
addr16
fs
cmp
test
sub
or
popa
bound
jle
out
cmpsl
cmp
xchg
das
nop
adc
push
call
movsl
stos
jmp
mov
iret
adcl
adc
xor
loope
push
popf
fs
setge
and
pop
cmpsb
mov
mov
pop
jg
adcl
mov
mov
cmpsb
xchg
xchg
xchg
and
into
inc
xor
jnp
jecxz
fsub
adc
stos
dec
int
pop
xchg
sub
test
in
mov
xor
enter
pop
and
pop
addb
sub
out
cmpsl
push
or
inc
or
dec
xor
cmp
roll
lret
xor
mov
aam
and
js
xor
jo
cmp
lock
pop
jo
jno
lea
in
xchg
add
mov
mov
imul
ret
iret
inc
xor
xor
lock
or
pop
mov
arpl
out
ss
fcmovnbe
lahf
mov
sbb
jbe
test
test
sti
mov
pop
mov
cmp
in
adc
pushf
mov
nop
stc
mov
das
jp
fisubrs
sbb
jmp
cs
imul
pop
in
inc
push
mov
cltd
repz
test
ret
or
dec
pop
pop
adc
sub
pop
pop
or
stc
mov
jg
bound
insl
mov
in
sbb
movsb
or
cmp
popa
jno
pop
mov
xlat
sbbb
mov
in
sbb
mov
mov
movsl
cs
shll
fimull
mov
rcrb
in
push
mov
stos
sahf
push
movsb
in
xchg
pop
rcl
and
inc
dec
pop
dec
add
sub
push
adc
push
andb
jg
pop
cmp
fadd
xchg
pop
scas
daa
loopew
add
sub
je
mov
lds
mov
mov
and
outsb
pop
or
mov
in
shlb
or
jl
stc
sahf
f2xm1
adc
addl
xchg
fldt
xor
out
mov
bound
pusha
pop
and
setl
mov
fsubs
cs
cmp
pusha
xor
inc
jmp
sub
cli
jmp
dec
or
cwtl
stos
cmpsb
add
and
push
cs
imul
mov
dec
jp
xor
jge
push
and
js
mov
sbb
cs
sbb
cmp
dec
mov
mov
rcll
fildll
call
push
xchg
sbbl
into
and
mov
push
add
inc
push
ret
rorb
jp
lds
imulb
or
imul
push
insb
pop
sbb
add
cltd
ljmp
xchg
push
pop
adc
dec
dec
adc
in
dec
enter
stc
mov
out
mov
in
xchg
cmp
stos
inc
add
mov
or
sub
adc
mov
mov
sbb
cmp
and
push
mov
sub
icebp
in
jno
push
and
pop
sub
jae
mov
pop
xor
xor
sub
cmp
iret
mov
mov
xchg
std
hlt
add
ss
inc
sbb
or
inc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
aas
andl
bound
mov
out
insb
sbb
es
rcrb
je
inc
jecxz
in
xor
sarl
ret
jne
shll
inc
adc
sbb
cmp
clc
xchg
pop
sub
in
movsl
inc
xor
les
lret
aam
ljmp
sbb
inc
imul
shll
rcrl
mov
adc
mov
clc
divb
mov
repnz
jge
inc
or
pushf
fldcw
imul
dec
xchg
adc
xor
xor
inc
sti
rolb
lahf
mov
push
push
es
sahf
jno
mov
test
or
jecxz
ljmp
test
mov
mov
cmc
stos
push
pop
jle
mov
inc
inc
and
pop
jbe
xor
jae
xor
fscale
mov
loopne
in
mov
push
subb
movd
jb
ret
adc
cmp
sbb
in
aas
inc
cmpl
xchg
insl
arpl
push
dec
popa
pop
cli
movsl
mov
cmp
mov
jb
and
cmp
out
dec
fbstp
xchg
mov
jnp
add
push
jns
aam
nop
fadds
mov
cmp
iret
inc
adc
movl
xor
repnz
dec
mov
jne
add
popf
ljmp
add
dec
insb
cmp
xor
enter
mov
jmp
sbb
aas
ror
stos
clc
fstpl
and
gs
xor
sbb
and
leave
xor
push
jo
mov
push
std
shlb
push
sahf
inc
xor
les
out
inc
sub
adc
imul
mov
aaa
dec
mov
mov
fmuls
mov
and
pop
test
jae
cld
jle
cmc
cwtl
in
sub
fsubrl
mov
pop
sbb
mov
ret
xor
inc
push
addl
xchg
out
xchg
je
les
arpl
mov
add
xor
push
sub
pushf
shll
fistpl
pop
or
call
dec
cmpsl
xor
or
cmp
leave
inc
aas
bnd
push
sub
jno
je
dec
sub
mov
xor
jl
bound
movsb
ljmp
mov
shrb
xor
lret
bound
adc
lock
sahf
xor
pop
insl
jg
inc
add
sub
xor
sahf
push
jb
scas
mov
mov
dec
or
sbb
add
rcll
sbb
and
aas
repnz
fwait
xchg
stos
int3
insl
inc
mov
pop
cwtl
adc
inc
popf
test
int
sbb
stos
push
sub
inc
jns
fidivrs
pop
int3
pop
rcrb
in
out
mov
cli
out
jle
adc
ret
sub
sbb
out
subl
cmpsb
add
adc
inc
sub
hlt
ret
and
cmp
jl
movsb
pop
add
es
xor
and
xchg
imul
inc
jecxz
jnp
jbe
dec
xchg
xchg
imulb
cmc
jnp
les
inc
mov
push
cmp
add
mov
bound
sbb
fsubrl
fld
xchg
xor
sahf
out
or
add
or
cmp
rorl
jnp
xchg
mov
mov
pop
pop
xchg
movsb
filds
sbb
dec
shl
jo
enter
out
mov
mov
mov
int3
test
xor
lcall
adc
mov
pop
popa
mov
adc
mov
jb
fs
sbb
jo
push
arpl
add
jbe
mov
jp
lahf
repnz
adc
scas
inc
in
jp
rcrl
fwait
mov
xor
stc
mov
test
cmp
jge
inc
imulb
mov
sub
int3
int3
pop
outsb
pop
xchg
inc
movsl
jmp
pop
push
gs
xchg
cmpl
cmp
add
cmp
cld
push
jnp
sub
rcr
cmp
and
stos
cltd
mov
repnz
pop
mov
mov
adc
lret
mov
fwait
jecxz
lret
sub
push
out
push
mov
cmp
rol
fnstsw
fdivrl
sbb
or
and
outsl
lret
fsubrp
jl
mov
jbe
push
inc
mov
subl
mov
cmc
outsb
mov
and
push
inc
rorb
or
popl
mov
mov
test
mov
mov
pop
cmp
sub
sarb
xor
xor
data16
in
aam
clc
jo
mov
jmp
dec
push
stos
mov
and
lahf
cwtl
mov
pop
in
push
cmp
int3
inc
std
stos
mov
repz
fists
mov
mov
mov
pop
loope
dec
inc
loope
mov
push
sahf
insb
lods
mov
xchg
xchg
jne
cmp
cmpsb
add
test
stos
ss
notl
or
pushl
mov
pop
jg
lea
aad
aas
sbb
cmp
push
adc
jbe
add
xchg
sbb
and
xchg
xorl
js
test
xchg
jo
imul
jns
fs
jmp
cmp
cli
jbe
dec
scas
jnp
repnz
ret
mov
movsl
lds
or
pop
loope
xchg
dec
lret
jb
xchg
fwait
test
retw
out
xchg
push
gs
lahf
jp
aam
int3
dec
orb
xchg
jle
jnp
jne
outsl
and
push
inc
add
gs
pushf
inc
mov
adc
ret
in
add
pusha
cmc
adc
ret
pop
std
cmp
rolb
or
int3
pop
adc
fnstenv
push
mov
sub
shll
sarb
sub
push
in
lock
in
lea
or
sub
cli
dec
lock
int3
call
test
cmp
stos
mov
aam
pop
ss
xchg
aam
adc
xchg
mov
jmp
mov
xchg
movsb
push
movb
pop
pushf
ds
inc
fwait
sbb
xor
jl
inc
aas
shr
push
inc
dec
mov
or
inc
repz
iret
cmc
push
aam
pop
leave
popa
jg
push
je
sub
jmp
xorl
or
iret
loop
mov
cld
aas
push
sub
cmpsb
loop
out
cmp
test
xlat
shrb
sarb
mov
push
and
dec
addb
je
add
lds
test
sub
adc
adc
and
xchg
mov
arpl
repnz
jno
lods
and
dec
repnz
cltd
add
mov
mov
add
pop
mov
mov
in
inc
dec
sti
jmp
movsb
and
mov
movsw
or
inc
out
add
mov
dec
mov
cmpb
out
mov
adc
mov
and
fwait
insl
push
cmc
mov
adc
fsin
pop
cmp
lahf
cltd
cltd
mov
and
xchg
xchg
cmp
fsubl
mov
and
adc
cmp
push
add
ss
mov
dec
dec
sti
inc
fnstcw
push
movsb
negl
lods
add
adc
sbb
dec
xchg
push
daa
cmp
loope
les
adc
pop
or
inc
push
vpsubsb
cmp
out
push
repnz
mov
mov
popf
cmc
lods
lret
inc
js
out
cmp
add
lods
mov
sahf
ret
movsl
xchg
pop
out
not
adc
enter
std
adc
add
jl
mov
or
sbb
orl
std
stc
cld
dec
pop
decb
adc
aad
sti
pop
adc
ljmp
dec
dec
cmp
push
xchg
in
or
pop
cmp
inc
push
cmp
cmp
and
gs
inc
sbb
mov
and
std
add
and
sbb
mov
stc
dec
inc
subl
mov
xchg
lahf
pop
jle
leave
pop
mov
ret
adc
movaps
or
in
mov
mov
jnp
mov
sbb
pop
push
jp
lds
mov
bound
test
popa
cmp
jl
loope
testb
lds
pop
cmc
sub
cmp
pop
rorl
mov
gs
push
imul
cmpsl
sub
stos
mov
add
xor
xchg
jle
dec
dec
dec
fadds
popa
ljmp
mov
shrl
xor
inc
push
push
fstps
adc
or
fistpll
scas
mov
enter
or
sbb
inc
mov
xchg
jle
mov
lds
fst
aas
or
xchg
rcl
fisubl
popf
call
scas
pop
popf
pop
jo
adc
mov
mov
push
loop
das
sub
jl
pop
push
add
cmp
rorb
mov
insb
inc
lods
push
dec
ljmp
xor
test
jmp
cmp
out
dec
fs
mov
jnp
into
push
fists
stos
in
ds
jnp
mov
ja
cmp
add
out
mov
fninit
adc
pop
aad
icebp
into
bound
jg
sahf
aad
in
pop
sahf
xchg
adc
mov
test
orl
repz
dec
rorl
js
ljmp
movsl
cs
cmpsb
cmp
daa
lock
stos
arpl
pop
test
shll
add
mov
jnp
les
and
arpl
outsb
stc
loopne
icebp
adcb
cwtl
add
mov
cmp
push
xchg
dec
shll
push
nop
jne
lahf
je
mov
movsb
int
or
loop
jo
cmp
push
lods
or
xchg
sub
pop
icebp
imul
ljmp
mov
inc
sahf
jns
test
out
ja
add
adc
jmp
cmp
push
push
movsl
cmp
pusha
nop
lds
adc
clc
paddusb
and
call
repz
push
idiv
loope
mov
xor
and
fadd
mov
aam
int
sbb
movsl
fwait
or
sbb
mov
adcl
pop
cmp
dec
jns
cmp
mov
xchg
lahf
sub
push
inc
mov
hlt
add
mov
xchg
mov
test
pusha
and
movsl
std
test
jge
add
cmp
xor
out
das
adc
cld
fcmove
pop
push
fstl
add
movsl
fisubs
and
sarb
pop
popf
aad
and
jecxz
test
xlat
rcrb
inc
mov
pop
sub
mov
dec
popa
fidivrl
xor
dec
cmp
xor
inc
mov
lea
scas
aad
xor
cltd
and
jp
cmp
iret
adc
jp
mov
xor
rcl
dec
faddl
subb
mov
xor
pusha
lea
rep
repnz
jo
jmp
mov
xchg
shr
jae
add
pushf
test
and
lds
inc
xchg
xor
and
or
and
mov
mov
stos
pop
fwait
jne
jae
push
jbe
lods
add
in
and
jle
mov
mov
cmp
dec
mov
add
inc
or
jb
sub
fildll
das
pop
push
mov
jl
hlt
dec
push
lret
add
fxch
pop
fcmove
insb
out
shrl
push
add
out
mov
imul
push
push
dec
int
das
imul
mov
icebp
scas
repz
push
xchg
insl
sub
in
js
scas
mov
data16
push
dec
fmull
clc
xchg
sbb
xchg
push
out
jno
lock
stos
lea
std
cmp
fiaddl
inc
rcll
dec
cmp
inc
adc
mov
xchg
pop
xor
sbb
cmpl
ds
cmp
or
int3
xchg
jle
in
rcrb
xor
add
push
dec
negl
daa
test
pop
les
lods
xchg
pop
loop
push
aaa
aas
mov
cmp
test
mov
sub
pop
hlt
subl
jo
ret
sbb
lea
lods
jb
stc
pop
mov
call
or
daa
test
loop
das
mov
into
ds
pop
adc
enter
inc
repnz
mov
or
out
xchg
or
push
fisttpl
jle
test
cmp
in
sbb
test
xor
mov
mov
push
or
pop
lret
or
push
pop
adc
hlt
cltd
mov
nop
cmp
shlb
imul
mov
or
mov
cmp
push
sub
pop
ret
pop
mov
push
or
jle
push
dec
js
sti
add
cmpsl
push
jbe
jmp
lea
sbb
in
enter
adc
in
stc
insl
insl
lods
xchg
repz
jnp
test
mov
les
pop
inc
leave
mov
cmpsb
incb
lock
mov
xor
std
pop
icebp
mov
dec
pop
aas
ror
xchg
pop
ficomps
sbb
cmp
cmp
or
mov
mov
mov
xor
xchg
pop
std
movsb
add
bound
sbb
mov
jge
add
sbb
mov
loopne
push
jge
mov
mov
mov
pop
push
lcall
dec
ficoml
add
add
push
imul
or
in
fcoms
lret
push
inc
arpl
pushf
cmp
ja
jns
or
xor
lret
adc
inc
mov
mov
dec
add
add
ret
insl
cmpsl
pushf
mov
stos
shlb
and
popa
jae
cmp
add
inc
lock
sbb
aad
push
or
loope
push
add
dec
dec
in
push
fnstsw
fdiv
inc
cmp
data16
sbb
jge
nop
inc
xchg
sub
add
mov
xchg
xor
add
jmp
xchg
push
insb
scas
fdiv
mov
roll
and
in
mov
xchg
mov
jle
and
jecxz
rclb
sub
push
mov
cmp
dec
dec
xchg
xor
mov
mov
mov
cld
ret
cmp
andb
lea
fwait
inc
dec
inc
jae
fwait
hlt
movsb
fidivrl
popa
push
sbb
sub
nop
lret
cmc
add
jg
lds
add
ret
jb
fldl
addr16
in
stos
mov
cmp
and
leave
js
pop
push
cmpsl
jmp
jp
dec
into
lret
stos
xor
cmpsl
flds
cmp
cmp
popf
fabs
stos
and
mov
xorl
push
xor
inc
fisubrs
loop
mov
xchg
sub
push
out
jge
pop
addr16
pushf
mov
jle
xor
into
out
insb
jmp
pop
lods
adc
aaa
fsubrl
mov
xor
sub
push
mov
mov
fwait
pop
stos
sbb
mov
insb
repz
jno
pop
xlat
icebp
add
sbb
and
sbb
leave
fcomi
les
ret
pcmpeqw
mov
outsl
loopne
push
fstpl
jno
jne
pushf
or
adc
mov
jo
idivl
fdivrs
mov
fsubrp
xor
jge
dec
fnstsw
scas
lret
nop
sbb
repnz
int
aad
inc
les
or
cltd
test
test
movsl
pop
dec
pusha
gs
and
mov
adc
sub
loop
into
dec
push
movsl
lods
rol
pop
orb
shll
sub
pop
rcll
mov
insb
sub
or
lea
ds
add
les
and
repnz
push
fdiv
fdivs
adc
adc
gs
xchg
and
dec
cmc
xchg
push
sbb
cmp
outsl
in
test
mov
add
cmpl
out
in
fimuls
pushf
xor
inc
cmp
scas
loopne
pop
sub
sub
jge
add
in
push
mov
adc
ss
push
fadds
sub
xorl
xchg
lods
jo
subl
test
decl
je
fnstcw
mov
popa
sti
popa
adc
mov
ret
testb
scas
fsubrl
lahf
mov
jbe
mov
daa
cli
pusha
sub
or
rcrl
fdivrl
inc
inc
push
xor
out
push
aaa
dec
gs
loop
push
or
fidivs
lret
mov
xchg
ljmp
inc
out
push
cmp
inc
sti
cmc
pop
pusha
cld
jl
ss
or
sti
push
lds
in
orl
mov
sub
mov
xor
lds
stc
cmp
sbb
in
push
and
dec
scas
xadd
rolb
addr16
insl
mov
or
ja
or
imul
fldt
add
rol
jb
xchg
movsb
dec
in
in
cwtl
sbb
scas
jo
aam
jno
cmp
mull
adc
sub
xor
stc
repnz
fwait
nop
popa
push
movsb
xor
lods
adc
inc
push
ss
call
mov
rcll
nop
fwait
adc
in
push
les
pop
push
push
dec
jecxz
add
popa
les
call
cmp
adc
inc
mov
push
xor
mov
mov
mov
cmp
nop
imul
sti
aas
ret
mov
adc
out
add
jle
push
sbb
adc
arpl
fst
sub
pop
pop
jo
imul
mov
cmc
push
mov
pop
mov
mov
pop
mov
test
cmp
iret
push
jne
inc
call
jecxz
add
adc
jecxz,pn
lods
or
add
loop
or
test
lds
jecxz
xchg
aas
add
push
mov
scas
jo
pop
lods
mov
aam
fnop
insl
mov
lea
out
dec
dec
ficoml
pop
or
ds
pop
lock
cltd
sti
xor
add
addr16
cmpl
xor
clc
add
ljmp
push
mov
cmpsl
mov
cmp
mov
dec
fistl
cmp
shl
icebp
adc
add
cs
ret
daa
orb
inc
push
jns
fisttps
or
adc
lret
jbe
mov
mov
adc
mov
jle
mov
sub
sbbl
lods
xchg
pop
test
inc
dec
jg
xor
sbb
movsl
sbb
stos
leave
pop
out
test
cmpsb
push
pop
or
int3
inc
xor
cmp
repnz
into
les
shl
jbe
inc
lret
xor
stos
xchg
cmp
push
inc
mov
test
stos
mov
dec
jl
aad
pop
mov
mov
add
sbb
push
mov
jmp
inc
mov
ja
sub
movsl
fiaddl
lds
adc
and
mov
fwait
inc
fnstcw
mov
mov
icebp
imul
inc
ljmp
mov
iret
icebp
stos
jno
add
cltd
jmp
lret
jbe
testb
xor
cwtl
mov
and
mov
fldt
lock
xorl
or
fsubs
divb
out
xchg
lahf
js
int3
dec
adc
ret
xor
je
cmp
pop
or
test
add
push
cli
mov
dec
or
jne
popa
int
pusha
cmp
adc
mov
pop
cmp
or
sub
mov
cmpsb
xor
push
xor
ljmp
cmp
iret
enter
dec
loop
test
rcrb
nop
cs
adc
fs
mov
adcl
and
daa
xchg
into
insl
mov
std
xlat
sbb
je
fldcw
sub
and
dec
cmp
stc
push
adc
es
xchg
stos
mov
push
mov
and
popf
inc
sub
lcall
and
jmp
mov
imul
xorl
sub
pop
jmp
cmp
clc
inc
sub
or
mov
push
cmp
xchg
lahf
cmp
cmpsb
lods
mov
cmpsb
ret
cmp
pop
mull
sti
and
popa
jnp
lea
sub
or
loop
xchg
pop
dec
pop
loopne
inc
int3
xchg
inc
xchg
outsb
in
xor
repz
inc
addb
add
es
std
cmpsb
adc
rclb
into
fcomps
das
pop
lods
or
subl
pop
scas
ljmp
insl
push
cltd
lods
imul
inc
shlb
imul
lods
into
inc
ljmp
jp
adc
xchg
repz
add
pop
sub
enter
push
into
mov
xor
sub
adc
push
mov
xor
sti
jmp
inc
inc
bound
out
dec
loope
add
jl
cmp
sub
sbb
push
cmp
mov
lds
in
fimuls
outsb
mov
mov
aas
outsl
mov
scas
hlt
push
sarb
sbb
xchg
jmp
fldenv
sti
push
movsl
das
in
or
jbe
adc
push
in
lea
leave
lret
pusha
xor
push
lods
jmp
adc
je
dec
ud1
sbb
add
cmp
sub
mov
jns
sbb
xor
inc
jb
mov
rcll
aad
cmp
adc
test
popa
pop
inc
dec
cmovs
pop
and
push
pop
cld
ficoml
inc
data16
mov
xchg
jg
adc
cmp
cmpsl
rolb
push
fwait
xor
xchg
mov
addr16
xchg
sbb
cwtl
lods
inc
daa
jle
pop
stos
cld
adc
aam
mov
adc
fisubs
fdivs
stos
xchg
lods
pusha
notl
jo
sub
das
inc
add
push
mov
lods
fdivrp
pop
mov
xor
cmpsb
dec
pop
mov
rolb
mov
stos
add
dec
imull
mov
sarb
int
cmp
push
aad
fdivl
outsb
lahf
mov
push
jbe
decl
test
or
xchg
stos
add
pop
push
mov
sbb
mov
orl
sahf
push
ffree
pop
add
es
imul
xchg
fnstcw
mov
loope
fistpl
cmp
je
and
dec
add
rorb
cli
into
sub
ret
fnsave
and
aam
ljmp
sbb
jo
pop
mov
popf
jg
or
scas
fildll
test
xor
outsb
pop
arpl
sbb
push
jmp
aaa
and
lods
lds
xchg
pushf
or
mov
fimull
cmpsb
jns
loopne
stos
xchg
shlb
les
mov
ret
push
cld
fnstcw
lds
or
xchg
and
cli
cmp
loope
xor
fcoms
cmpsl
xor
and
fisttpl
sbb
sbbb
and
mov
mov
mov
sbbb
lcall
fcomp
loop
inc
sbb
mov
loopne
mov
xor
dec
ja
jbe
push
push
push
mov
daa
adc
mov
push
test
jmp
mov
mov
cmc
adc
dec
insl
inc
or
mov
mov
add
inc
pop
daa
push
xchg
xlat
and
mov
int3
adc
xchg
xchg
out
push
aad
stc
stos
mov
push
xor
je
outsb
dec
out
adc
sti
ss
inc
enter
sti
pop
pop
out
pusha
out
popa
fldenv
nop
and
test
test
outsl
sub
sbb
scas
pop
jmp
out
xchg
dec
adc
mov
jp
inc
add
inc
mov
pushf
sbb
dec
push
xor
xlat
sti
xorl
xor
adc
pop
sbb
gs
imul
notb
mov
sub
sub
nop
fdiv
dec
fs
dec
out
mov
mov
leave
ret
mov
jle
push
or
push
lcall
ficoms
jae
mov
or
sti
or
movsb
sti
sbb
movsb
fistl
shr
out
sub
pop
mov
pop
pop
jae
pop
mov
imul
push
sub
ret
popf
test
les
xchg
lds
mov
fsubrl
mov
xor
xchg
xor
mov
arpl
pop
jbe
or
xchg
sub
add
sbb
xchg
add
leave
ja
ret
es
or
and
out
jo
inc
cli
imul
mov
mov
jbe
add
push
sbb
clc
pop
test
and
and
out
test
mov
push
imul
cld
sbb
call
pop
popf
sub
ljmp
cmpsb
add
mov
mov
movsb
rol
pop
out
imul
pushf
cmp
cli
adcb
xchg
jmp
mov
push
pop
sub
xchg
mov
into
lret
push
orb
loop
push
lods
push
sti
or
ret
ret
or
out
xchg
ja
fidivrl
xor
jecxz
sub
mov
dec
fbstp
cmpsl
adc
jnp
mov
xchg
sub
jl
jle
incl
inc
inc
and
jg
xor
mov
sbb
xchg
or
test
pushf
cmp
rolb
push
repz
scas
ds
dec
loope
sub
xor
aad
dec
sub
xchg
test
inc
jecxz
pop
ret
sub
push
in
aaa
es
push
sti
je
cmp
imul
lahf
imul
lea
por
ret
jge
push
scas
aad
stos
mov
orl
mov
cmp
jb
mov
daa
mov
mov
scas
adc
mov
cmpsl
lea
dec
xor
push
sub
push
mov
mov
ljmp
mov
lods
sti
test
mov
and
mov
cmp
nop
negl
sarl
dec
shll
iret
imull
clc
xor
out
aaa
bound
call
cmpsl
in
lods
into
test
mov
jbe
dec
test
push
ret
enter
or
adc
mov
orb
mov
inc
mov
mov
pop
mov
jmp
and
gs
fdivrl
es
mov
ss
call
lret
aad
test
es
cld
or
mov
inc
jle
jb
mov
cmc
rclb
dec
out
scas
arpl
std
or
out
sti
jno
out
inc
aas
dec
es
mov
inc
fcompl
push
aam
cltd
js
test
in
les
fdivrl
inc
pop
lret
push
push
leave
mov
das
inc
and
fadds
int3
and
orl
mov
mov
pop
push
into
stos
sub
xor
cmp
fisttps
rep
shlb
lods
add
aaa
xchg
sbb
mov
add
repnz
ret
cld
das
lcall
jbe
add
push
ror
or
idiv
out
xchg
push
lea
int
pushf
cmp
cmp
insl
mov
clc
inc
insb
mov
outsb
inc
inc
jb
cmp
lcall
pop
sti
popf
bound
adcl
and
enter
enter
mov
repz
cwtl
adc
or
dec
push
jb
repz
addl
jge
add
xor
fstpt
xchg
and
xchg
adc
or
lret
outsb
push
imul
cli
mov
sub
xlat
sahf
ds
mov
mov
aas
test
xchg
fadds
push
leave
mov
test
xchg
enter
in
fidivrs
lds
pop
jl
push
scas
xlat
push
cmp
es
mov
or
push
adc
push
call
lcall
out
roll
loope
repnz
cli
inc
fst
cltd
jae
ljmp
push
mov
lret
hlt
pop
or
sahf
mov
push
pop
jmp
mov
andb
dec
jns
jecxz
pop
xchg
lret
shrb
push
push
jnp
push
or
mov
push
sub
pop
push
pop
mov
fcoms
call
push
les
loope
scas
insl
clc
sbb
nop
clc
xchg
cmc
stc
push
scas
clc
mov
addb
std
movsb
sahf
pushl
out
stos
xor
test
out
scas
into
or
popa
test
lahf
aam
xlat
inc
fidivrl
mov
xchg
pushf
mov
lods
call
andnps
aam
cmp
mov
pop
insl
pop
fs
and
lock
push
outsl
xchg
test
mov
or
mov
xchg
jbe
sub
pop
xorl
pop
sub
sbb
adc
mov
icebp
or
jb
inc
xorb
add
fsubl
cmp
pop
fcoml
inc
sti
loope
jecxz
cmc
decb
push
lcall
lret
in
mov
jno
ds
call
arpl
jae
dec
lret
xchg
jne
dec
mov
lahf
mov
shll
ret
adc
inc
push
pop
mov
mov
jle
fcmovu
pop
inc
pop
stos
sbbb
lret
cld
decl
push
dec
or
testb
push
outsl
add
imul
mov
mov
mov
xchg
leave
cld
xor
insl
xchg
cmpsb
fs
in
scas
data16
out
out
data16
fstpt
call
mov
dec
scas
test
pop
adc
loop
rcll
and
test
mov
sbb
sub
int3
cmpl
mov
out
sub
out
jne
div
pop
dec
add
in
pusha
insl
rcl
xchg
xor
or
scas
ficoms
sahf
ljmp
stos
loope
je
add
mov
insb
or
push
mov
aaa
push
cmpsb
pop
mov
mov
std
jb
fisttpll
add
sub
xorb
test
inc
xor
cmp
sbb
std
loop
stc
loopne
insl
jo
mov
and
push
mov
outsl
mov
fldcw
pop
lds
aad
lock
jo
aad
fistps
jae,pt
xchg
shrl
lods
or
cmp
addl
adc
out
pop
in
orl
sar
xor
mov
cltd
pusha
ret
fninit
inc
dec
lcall
and
dec
movsl
fstpl
in
xor
call
icebp
mov
sub
loop
xchg
mov
push
xor
call
xchg
inc
pop
lret
push
add
mov
push
sbb
pop
sbb
sub
aam
push
fisubrl
cmp
sbb
mov
xchg
call
jmp
ficompl
out
fisubl
pop
and
repz
cmp
sbb
mov
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
or
out
hlt
pop
bound
popf
mov
mov
push
insb
popf
mov
cmp
xchg
add
jnp
scas
stos
ret
or
idivb
jle
int
mov
scas
mov
xchg
mov
movsb
incl
addr16
dec
rcrb
inc
sbb
sbb
push
cmpsb
pop
sbb
cmpsb
clts
xchg
xchg
dec
jb
pop
out
adc
cli
mov
fcom
sub
test
mov
fldcw
fs
cmpsb
movups
push
or
scas
rclb
add
and
or
push
in
jae
jg
sub
fwait
dec
push
nop
lds
subl
push
push
add
cs
int3
popf
push
inc
dec
mov
xchg
xchg
ret
sarb
dec
mov
and
pop
in
scas
jbe
cltd
fldt
shll
xchg
mov
cld
idivb
loop
into
movsb
mov
cltd
jbe
mov
dec
xchg
mov
es
inc
add
mov
dec
lods
lret
jns
test
xor
inc
test
cld
push
push
mul
adc
xchg
dec
pop
and
cmp
cmp
aad
sub
and
call
loope
inc
lods
mov
and
cmc
nop
mov
ja
adc
std
or
xchg
arpl
xor
push
pop
pusha
xlat
rcrl
and
xchg
aaa
adc
mov
jb
sub
mov
in
sbb
bnd
xchg
xor
push
das
sub
adc
lea
mulb
pop
loop
mov
or
dec
push
out
mov
or
lret
lock
out
cli
sbb
pop
les
lret
loope
adcb
xchg
mov
stos
dec
pop
pop
pushf
in
movsb
push
cmp
sub
lahf
les
sti
ljmp
sbb
cmp
push
into
mov
hlt
loop
mov
push
add
push
fbld
arpl
sti
xchg
sbb
adc
dec
inc
mov
pop
mov
jbe
movb
inc
sbb
testb
adc
dec
pop
jae
gs
pusha
popa
fldt
dec
push
lock
adc
sbb
inc
jnp
shlb
lock
cld
inc
dec
add
push
iret
outsl
sub
mov
or
mov
lcall
mov
cltd
cmp
pop
pusha
fucomi
fstpt
call
arpl
cli
push
mov
dec
movsb
or
add
inc
dec
ds
orl
cmp
adc
mov
jbe
inc
cmc
mov
mov
sarb
mov
fistps
cmp
in
push
lods
nop
cmp
inc
and
cmp
clc
cmp
test
loopne
jns
cmp
rclb
add
imul
ficoms
mov
add
cmc
inc
sub
imul
and
push
in
cmpsl
ja
fnstsw
mov
insb
loop
push
sbb
jb
cmpsl
add
outsb
adc
js
movsb
cmpsb
in
ret
and
push
aam
scas
add
xchg
xor
adc
xor
pusha
dec
or
hlt
mov
push
in
lcall
lods
mov
add
xor
loope
mov
test
flds
test
push
mov
jg
inc
pop
bound
daa
std
div
jl
cwtl
sbb
mov
arpl
or
aad
mov
jge
negl
pop
in
shr
mov
enter
aad
pop
jno
dec
inc
sbb
xlat
sbb
aaa
mov
mov
movsl
enter
sub
adc
xchg
xchg
mov
push
vmulpd
cmp
inc
push
out
fimull
dec
stos
lcall
aas
mov
and
fucomi
rcrl
or
xchg
js
cmp
imul
daa
pminsw
mov
in
xor
mov
fidivrl
ret
pusha
inc
dec
pavgb
mov
jne
shll
cwtl
rorb
pcmpgtb
ljmp
jbe
stos
cmp
ds
and
mov
inc
pop
push
cmp
aad
push
lds
add
fst
lock
xchg
lcall
test
or
dec
adc
fiadds
orl
and
sub
mov
outsl
imul
push
div
add
jecxz
jecxz
js
xchg
int
in
aad
dec
mov
inc
cld
repnz
adc
ljmp
pop
sbb
in
dec
repz
shll
adc
dec
subl
fwait
inc
ds
adc
xchg
adc
movsb
loope
jne
idivl
jecxz
lock
cmp
insl
inc
add
insb
sub
xor
and
fdivl
lea
pop
pop
or
lea
fmul
iret
sbb
add
lahf
test
and
mov
xor
fsubl
inc
dec
sarl
js
xchg
js
pop
and
jg
mov
mov
insl
sub
add
insl
ja
add
je
sti
jge
outsl
mov
pop
repz
mov
repz
shl
insb
lods
mov
int
pop
mov
rclb
movsl
jo
cmp
or
ret
xlat
es
xchg
repz
jmp
daa
sbb
std
cli
and
cmc
insb
stos
add
mov
mov
pop
sbbl
xor
shlb
inc
pop
pop
sbb
xchg
imul
mov
lods
mov
divb
das
rolb
mov
inc
push
js
pop
movsb
and
jg
mov
pushf
push
scas
test
or
jae
sub
dec
inc
cltd
stc
xchg
hlt
jbe
outsb
cmp
jnp
jle
xchg
adc
movsb
push
push
adc
xor
rorb
inc
add
lcall
ljmp
fsub
bound
mov
dec
fidivrl
and
jge
popa
loop
and
sub
xor
call
dec
shrb
inc
sub
mov
add
xor
dec
xlat
insl
movsb
xor
loop
aam
mov
aad
lods
nop
jnp
cmc
repz
dec
push
mov
inc
mov
cmpsb
enter
mov
lret
test
pop
inc
or
imul
cmpsl
dec
sub
test
insb
fucomip
rcrl
mov
sbb
sti
mov
aas
fistps
arpl
fsubrl
ficoml
xor
imul
pusha
mov
fld
jae
popa
inc
jbe
jle
out
das
xor
cli
sbb
insl
cmp
pushf
movsb
fisubrs
out
mov
test
insb
out
adc
dec
mov
lds
dec
out
outsl
inc
dec
push
repnz
xchg
xchg
pop
jg
xor
jp
ljmp
dec
jo
rcrb
and
mov
push
bnd
daa
leave
add
iret
ret
jnp
ljmp
or
and
xchg
bound
loopne
cli
std
int
cmpsl
outsl
pop
ucomiss
push
addr16
cltd
push
insb
movsb
xchg
shr
pop
mov
in
enter
fcmovu
dec
and
xlat
fcoms
add
sti
daa
pusha
adc
mov
std
dec
pusha
sbb
cltd
cmp
and
movsl
dec
sti
mov
dec
aaa
inc
out
mov
rorl
test
mov
add
push
sbb
dec
pop
push
lret
hlt
adc
adc
into
lret
jae
push
in
mov
loopne
ds
mov
lock
ljmp
jne
sub
sarl
cmp
xchg
fucomp
imul
sbb
fcoml
out
in
int
adc
sbb
das
mov
push
dec
cmp
stos
xchg
lret
add
jl
in
and
notl
pop
xor
sub
testl
scas
test
cs
test
rcrl
pop
jne
pop
mov
mov
xor
ss
fmulp
mov
pop
outsb
xchg
mov
stos
jl
mov
sub
sub
sub
lahf
jns
or
ret
inc
sub
mov
xlat
pop
sbbl
sti
iret
mov
sbb
pop
pop
jae
iret
pushf
xchg
movl
stos
add
jns
stc
mov
outsb
loope
in
and
js
dec
xchg
leave
mov
sub
pop
mov
mov
icebp
xor
pop
ljmp
cmp
rorl
jno
mov
mov
out
sbb
xlat
cld
js
bound
push
xor
outsl
test
adc
adc
and
mov
aam
jg
outsl
test
stc
jb
lea
bound
rcrl
rcrl
into
stos
cmp
out
loopne
xchg
lea
inc
insb
push
and
dec
scas
dec
sarb
pop
ficompl
std
shlb
or
pop
jecxz
nop
mov
pop
inc
pop
incl
je
movsb
push
and
xchg
mov
mov
sub
cmc
and
cld
jno
mov
insb
jns
xor
leave
xchg
xchg
xor
xchg
and
lcall
outsb
cltd
xchg
or
js
sub
sbb
std
das
movsl
mov
xchg
mov
mov
xor
xchg
jb
dec
xchg
shlb
mov
mov
push
fdivr
inc
jno
fmull
xchg
mov
in
loop
xchg
cmp
fwait
sub
add
mov
inc
jae
or
or
xchg
inc
rorl
push
sbb
jg
call
fistpll
cmp
mov
sbb
cmc
pmaddwd
xor
pop
xchg
les
push
roll
pusha
push
mov
dec
jae
sti
arpl
cmp
stos
inc
push
push
stos
inc
adc
sub
mov
sbb
aas
sbb
enter
imul
cmp
into
and
sbb
xchg
and
aas
sub
rolb
push
pop
dec
mov
pop
xchg
movaps
or
int3
mov
scas
movsl
notl
push
out
cmp
adc
lock
fidivl
dec
xchg
into
push
jp
outsl
xor
jno
adc
outsb
lret
sub
mov
adc
ficoms
cmp
arpl
and
jp
out
das
cmp
xchg
shlb
pop
sbb
push
mov
rorl
mov
clc
jmp
rcrl
pop
or
add
mov
cmp
das
sub
ss
insl
inc
into
mov
mov
mov
ds
mov
add
aaa
xchg
or
dec
mov
rorb
lods
or
in
fists
and
xor
pop
pushf
mov
and
lret
outsl
das
cltd
daa
pop
ss
push
jecxz
xlat
ljmp
dec
in
xchg
icebp
jbe
pop
dec
icebp
xchg
mov
push
pop
push
push
or
gs
fsubrl
cmp
out
sbb
test
nop
pop
es
mov
jnp
nop
mov
cmp
xor
pop
sub
sub
inc
addr16
fdivrp
repz
cltd
mov
xchg
pop
cmp
roll
dec
loop
or
push
arpl
mov
cmpsl
adc
pop
inc
push
push
ret
leave
iret
aad
out
sub
push
outsb
xor
sahf
pop
mov
or
dec
fs
cmp
pop
sub
push
cwtl
cmpsb
mov
push
push
outsb
mov
mov
cmc
mov
dec
cmpsl
add
or
lea
add
ret
cwtl
add
mov
cmp
add
xchg
pop
jg
sub
jp
pop
lea
movsb
jmp
adc
add
mov
out
push
adc
jmp
mov
stos
mov
dec
sbb
movsl
arpl
xor
lret
addr16
jl
mov
inc
iret
in
push
iret
cmp
lea
push
pushf
xor
xchg
addb
gs
ljmp
or
stc
subl
lret
into
mov
sub
xor
jb
loope
or
pop
sub
pushw
fcmovbe
sar
jbe
xchg
lock
popf
add
or
mov
test
sub
int
loop
lea
fidivl
inc
lods
imul
mov
lock
inc
sahf
icebp
ljmp
stc
or
adc
arpl
in
sbb
sbb
mov
rorb
pusha
es
jmp
pushl
test
xchg
or
inc
test
or
xchg
int
subl
aas
xor
loope
xor
les
inc
lahf
loopne
jmp
popf
add
cli
push
dec
int3
mov
out
ret
mov
movsb
movsl
mov
ljmp
sub
out
jecxz
inc
sub
pusha
fcomi
aad
pusha
mov
scas
push
stos
scas
jb
clc
sub
dec
lcall
test
in
ret
xlat
sub
mov
loopne
movsb
in
inc
hlt
sub
gs
aam
mov
mov
lds
push
sbb
xchg
repnz
and
jo
outsb
cli
cmc
shlb
cmp
push
add
scas
movsl
pop
or
inc
lods
setns
jae
sub
rorb
sbb
ret
mov
rcrb
andl
add
icebp
mov
mov
aaa
push
ljmp
adc
inc
jns
lret
xor
cmc
or
sbb
inc
repnz
test
jmp
test
mov
call
pushw
pop
sub
sub
mov
sbb
test
push
and
add
mov
ret
mov
sub
cmp
pop
aaa
push
int3
mov
stc
fmuls
pop
lahf
rolb
out
es
insl
roll
fdivrs
into
mov
nop
into
aaa
popa
call
jno
pop
push
xchg
sub
xchg
mov
jbe
jmp
sbb
aaa
loop
cmp
sub
imul
and
mov
aad
popa
pop
mov
xlat
cwtl
sub
dec
arpl
and
mov
dec
add
xchg
adc
clc
outsl
pop
dec
es
fmuls
mov
cmp
lret
jne
push
mov
test
sahf
mov
mov
mov
shl
clc
mov
lret
fdivrs
ljmp
mov
lods
pop
pop
jae
daa
test
imul
sub
cmp
cmp
je
frstor
data16
mov
jecxz
es
jne
cmp
or
mov
jecxz
mov
pop
hlt
cmpsb
lea
insl
cmp
sahf
js
or
dec
jl
xorl
jl,pt
outsb
mov
push
and
lods
push
test
jno
in
xchg
aas
mov
daa
out
movsb
mov
scas
mov
add
mov
mov
cmc
scas
jmp
xor
insl
dec
push
daa
jl
inc
pop
xor
cmp
dec
shlb
add
sbb
insl
inc
hlt
pop
and
cmp
cs
pop
insl
stos
xor
in
dec
sbb
dec
or
xor
mov
js
inc
lea
cmpl
xchg
pop
inc
movsl
pop
sub
mov
xlat
push
inc
pop
stc
mov
xor
arpl
jb
xor
xor
xchg
inc
shlb
adc
ja
mov
ficoml
dec
xchg
ret
xchg
adc
sbb
push
outsl
loopne
cmpsb
cmp
sti
mov
pop
pop
lret
pop
sbb
adc
inc
mov
pop
mov
pop
scas
lret
xchg
inc
pop
cmp
mov
fistpl
les
jae
mov
add
pop
mov
xlat
loope
xchg
mov
pop
add
out
bound
jecxz
insl
addl
adc
or
stos
sub
mov
shrl
roll
int
lret
push
imul
inc
fsts
fwait
adcb
loope
fildl
push
lock
xchg
jns
in
pop
mov
test
mov
mov
mov
xlat
lret
test
or
push
pop
popf
xchg
cmp
mov
add
cli
xchg
push
fildl
pushf
jle
cmp
adc
lds
jl
adc
addb
pop
mov
inc
adc
sub
inc
jp
stc
xor
sub
sub
lods
pushf
sub
ret
xor
in
ljmp
in
xchg
or
ljmp
xchg
push
push
shlb
jo
les
cmp
dec
stos
mov
mov
shlb
stos
mov
adc
fwait
push
mov
addl
mov
sbb
pop
inc
aaa
mov
xlat
orl
outsl
test
and
subb
aas
add
std
sti
lods
pop
xor
dec
dec
aad
in
movsl
dec
xchg
imul
jne
xchg
xlat
jbe
and
cmpsl
fnsave
iret
or
out
mov
inc
inc
int3
pop
add
notb
stos
xor
lods
dec
rcrl
addr16
fmul
fsubs
push
ds
add
call
mov
js
xor
dec
in
inc
shl
add
out
std
add
mov
mov
daa
inc
bsr
jno
pop
int3
mov
inc
push
ss
test
aaa
jo
mov
subb
jb
aaa
jae
repnz
cld
or
push
xor
int3
rclb
and
mov
stos
or
adc
into
ss
push
push
pushf
cmp
call
jb
jecxz
dec
xchg
and
jae
cwtl
pop
and
add
mov
clc
pop
nop
and
aaa
scas
out
ss
adc
in
aam
xchg
lret
jno
lods
fwait
xchg
daa
jo
xor
mov
cmpsb
js
cmp
repnz
jns
cmp
dec
or
aaa
mov
push
das
add
and
mov
mov
jl
test
jns
sub
movsb
scas
sub
xchg
ficompl
add
mov
xchg
pop
cmp
jae
mov
pop
lret
mov
sub
int
fsubr
lods
pop
loope
xor
mov
xor
pop
xor
sub
inc
out
mov
fs
add
xor
into
out
insl
cwtl
js
in
push
lods
pop
cli
js
sbb
sub
in
xchg
push
mov
mov
testl
push
int
mov
test
jmp
dec
imul
pop
sahf
mov
cltd
aas
mov
sub
adc
jl
add
push
inc
pop
sbb
dec
sub
push
pop
hlt
xorl
cli
adc
ret
js
pop
dec
dec
pop
push
es
pop
idiv
jbe
sbbb
mov
sub
call
movl
cmp
inc
orb
sub
mov
mov
xor
inc
adc
xor
out
xor
and
xor
clc
dec
jmp
call
insb
push
push
cmpsb
adc
sbb
mov
or
pop
dec
les
pop
lahf
ds
xorps
stc
add
xchg
and
sub
bound
popa
repz
fcmovu
test
test
inc
fimull
jl
mov
out
gs
mov
pop
stos
lret
mov
je
loope
fnstsw
dec
mov
push
push
shlb
aam
xor
push
pop
mov
add
cltd
mov
imul
cmpb
lods
into
jae
adc
repnz
in
out
jo
inc
stos
jmp
orb
mov
scas
outsl
mov
out
pop
out
in
in
xchg
pop
jbe
inc
js
xchg
push
xor
xchg
movsb
pop
mov
les
cmp
cmp
jge
iret
dec
les
aaa
bsr
in
pop
sbb
sbb
push
leave
add
pop
fnstsw
lds
test
dec
fstps
lahf
sbb
fs
in
inc
xor
sbb
fbld
inc
pop
stos
cmpsb
gs
add
into
pop
push
stos
cwtl
clc
loopne
into
popa
mov
in
cmp
pop
in
hlt
shrl
or
testl
aam
xor
mov
and
outsl
or
cmp
push
lret
xchg
inc
into
jl
add
push
push
mov
or
js
mov
popf
ret
fcmovu
adc
inc
push
pop
jbe
jno
mov
inc
rolb
int
jp
loope
pop
outsb
xchg
jne
pop
icebp
lret
fisubrs
in
lods
and
mov
test
popf
fisubl
pusha
add
scas
add
test
or
dec
and
stos
divl
inc
mov
repz
dec
xor
sbb
std
es
pop
sub
sub
call
shlb
pop
lock
lods
test
add
mov
cmpsb
or
mov
or
lret
sbb
mov
adc
icebp
inc
add
ret
clc
or
leave
sar
jbe
xor
xchg
xchg
lret
pop
push
lret
in
test
cmp
sub
cmp
stc
ret
or
sti
ret
fdivs
popa
call
mov
xor
sahf
inc
sub
les
sub
add
xlat
mov
pop
fwait
cmpl
jno
mov
sub
lea
lret
sbb
fwait
dec
mov
in
xchg
addr16
push
pop
dec
dec
int
aam
fs
jp
popf
mov
add
jns
mov
xor
sarb
sub
out
adc
cmpsb
xor
push
test
mov
je
in
adc
orb
push
xor
mov
stos
ss
or
ret
imul
daa
ja
or
inc
and
insl
xor
add
xor
push
lret
sub
mov
iret
pop
scas
xor
shll
leave
and
add
push
testb
aaa
cmpsl
push
aas
xor
loop
fnsave
gs
std
test
js
adc
stos
int
adc
dec
or
dec
xorl
xchg
pop
jnp
sbb
push
scas
sbb
adc
jnp
repnz
push
jns
roll
aas
pop
pop
cmp
cmp
faddp
cmpsl
ljmp
pop
daa
imul
jb
mov
fstp
inc
stos
xchg
pushf
in
inc
mov
inc
test
movb
popf
test
loop
mov
lock
sub
pop
in
push
xor
in
or
inc
pop
pop
in
in
push
fwait
shl
adc
sub
push
adc
or
out
or
lock
sub
mov
and
sub
xchg
jmp
int
cmp
mov
add
mov
sbb
mov
in
or
fs
sti
sbb
jne
insb
mov
pop
mov
pop
sub
imul
xchg
push
fsubl
out
lds
fwait
lods
dec
jp
dec
cli
out
aam
ljmp
out
mov
pop
jno
repnz
xrelease
cmpl
fwait
pop
imul
fwait
icebp
fwait
sbb
sbb
jns
push
add
movsl
dec
negb
imull
iret
sub
insb
jne
cs
mov
mov
pop
mov
shlb
lods
iret
sub
imul
pop
jne
pop
shrb
xor
rorl
stc
xchg
outsl
mov
mov
adc
lea
loop
repnz
ffreep
adc
or
hlt
outsl
sub
stos
or
pushf
dec
outsl
cmpsb
bound
mov
outsl
mov
push
add
movsb
cmp
mov
daa
stos
out
mov
mov
imul
sbb
das
test
rol
xor
and
shrl
xor
pop
xchg
inc
jo
sub
gs
jb
mov
test
xchg
ja
cmp
and
jae
cmp
ja
inc
cmpsl
inc
dec
push
xchg
out
sbb
and
jo
sbb
pop
push
push
adc
mov
paddusw
outsl
lahf
jp
jge
mov
jnp
mov
inc
xlat
sub
popa
jo
test
and
cmp
out
lods
adc
or
mov
jbe
jge
sbb
in
dec
mov
outsb
adc
jecxz
push
and
mov
jp
dec
rolb
or
sbb
movsl
lds
push
adc
movsl
mov
and
call
mov
rorl
and
mov
mov
inc
or
aaa
cltd
add
gs
aam
insl
xchg
int3
fisubl
sub
imul
popa
sarl
lcall
and
icebp
lret
out
test
scas
lret
dec
mov
popa
pop
adc
sarb
sbb
stos
pop
jp
out
sub
out
sub
inc
jo
xchg
ja
pusha
jb
outsl
push
sbb
pop
mov
xchg
adc
xor
repnz
data16
sub
sbb
push
inc
out
fwait
test
std
das
inc
mov
cmp
loop
mov
test
clc
std
dec
add
dec
inc
or
add
pop
sub
sbb
mov
sub
adc
scas
sub
xchg
xor
sbb
adc
in
push
mov
in
add
repnz
adcb
mov
jge
mov
cmp
push
inc
mov
inc
clc
sub
mov
lcall
fcoml
test
xor
imulb
mov
sub
xchg
pop
pop
addl
pop
testl
adc
sahf
jmp
push
stos
sbb
sysenter
adc
inc
sub
inc
xchg
es
pmulhuw
mov
out
push
insb
call
call
and
aas
add
lahf
clc
aad
pop
lret
mov
ljmp
mov
and
loopne
lds
cmpsl
stc
cmc
nop
lcall
jmp
inc
cmpsl
fidivl
cltd
cmpsl
nop
inc
push
imul
sub
icebp
sbb
xor
hlt
pop
fstps
dec
lds
adc
push
inc
sahf
jne
or
testb
pop
add
scas
dec
and
std
outsl
xchg
pop
mov
imul
push
mov
and
xor
dec
repz
pop
in
idiv
data16
adc
and
fs
jnp
jnp
xchg
pop
jmp
cwtl
ljmp
push
cwtl
jg
ljmp
xchg
inc
int
push
cld
mov
xchg
icebp
sub
shrl
xchg
ds
clts
add
mov
cmc
pop
call
xchg
cli
mov
dec
cwtl
hlt
adc
adc
mov
aas
and
mov
mov
cmp
jno
push
or
cmpsl
pop
notb
mov
dec
aam
cmpsl
ficoms
test
jns
sahf
lea
sbb
sbb
insl
test
pand
shrb
hlt
mov
sub
fcomps
out
fidivs
add
scas
aaa
fildll
jne
adc
fdivs
pushf
movsl
mov
movsb
cmp
insl
orb
jecxz
xor
in
test
arpl
shll
in
or
push
pop
push
lods
mov
xor
outsb
cwtl
adc
xchg
shll
mov
jo
movsb
rcl
add
inc
cmp
cmpsb
mov
jmp
shl
mov
jne
lret
outsl
jns
lea
stc
int
fstl
xchg
or
xor
in
xor
pusha
push
or
jne
sub
aad
aaa
jge
dec
rcl
imul
pop
dec
mov
pusha
mov
stos
mov
jbe
rcrb
adc
adc
jmp
and
inc
mov
inc
mov
outsl
in
daa
sbb
rcl
out
das
out
bound
jb
mov
movsl
in
jo
pop
jne
lcall
add
add
data16
add
insb
imul
jmp
into
and
or
jnp
test
mov
sbb
mov
mov
ljmp
sub
flds
cmpsl
xor
fdivrl
scas
out
xchg
out
out
lahf
out
push
ret
adc
je
insb
mov
nop
and
mov
inc
jle
add
sub
mov
les
or
gs
popf
negl
dec
lods
cs
mov
ljmp
lret
sbb
xor
lret
out
sarb
and
repnz
ss
xchg
sahf
andl
das
sub
push
inc
xlat
ljmp
movsb
inc
insl
and
jb
lods
test
notb
sub
pop
mov
xor
adc
stc
pop
lods
jae
cmp
fldenv
insl
loop,pt
inc
push
lods
dec
sbb
sub
das
daa
xchg
xchg
ss
clc
cmp
into
int3
adc
outsb
scas
andb
or
out
notl
ret
rcl
and
mov
xor
std
mov
mov
pop
pop
pushf
add
sbb
cli
add
mov
repz
lcall
stos
or
xchg
cmp
and
or
int3
iret
mov
mov
test
fs
test
sbb
mov
ja
scas
loopne
sub
adc
notb
in
xorl
or
enter
push
decb
fld
imull
and
sbb
cmpxchg
lds
lods
or
push
pop
cmpsl
test
imul
cmpsl
jns
ret
fcmovb
inc
test
shl
scas
loop
out
pusha
cmp
hlt
sub
pop
sbb
adc
lcall
and
ficoml
cmp
mov
cmp
data16
and
aaa
stos
scas
imul
add
add
cmp
inc
xchg
and
jge
cli
test
sbb
stos
lret
cmp
mov
inc
lock
std
xchg
jb
in
sbb
pop
mov
adc
out
aam
in
jne
rol
test
in
das
fstps
sub
mov
xchg
inc
lret
push
lea
lods
push
mov
adc
sub
dec
test
fcomip
mov
add
mov
fsubr
cs
add
mov
stc
xlat
stos
hlt
add
aam
rorl
sbb
pop
or
sbb
in
mov
test
loope
or
push
andb
pop
test
push
or
in
add
cmc
xchg
pop
add
mov
pop
adc
test
das
push
fidivrs
sub
xorb
or
leave
mov
std
test
xlat
push
ja
lahf
inc
inc
andb
mov
mov
mov
je
pop
mov
jecxz
mov
mov
stc
movsl
lcall
dec
in
mov
cmp
cltd
jl
aaa
xchg
jmp
xor
rcrl
mov
xchg
mov
lods
adc
mov
hlt
movsb
stos
lahf
add
mov
push
test
stos
shrl
sub
xchg
nop
iret
or
xchg
ljmp
ss
lods
lret
rolb
mov
push
lods
cmp
rorb
jb
fistpll
or
rorl
xor
xchg
xchg
dec
cmp
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
fcoms
bound
pop
bound
aam
mov
andl
pop
and
mov
pop
fbld
jmp
jecxz
pop
xor
loopne
jecxz
mov
ljmp
and
push
jne
pop
xchg
movsb
xlat
jl
dec
mov
add
cmpsb
mov
aaa
sub
aaa
cmpsb
cli
pushl
mov
movsb
scas
dec
and
mov
mov
lahf
int
sub
mov
ret
out
das
add
pushf
stos
test
or
pop
js
sbbb
xor
int3
jnp
sbb
insl
dec
scas
gs
repz
and
sub
push
push
jne
sub
jmp
cmc
jbe
into
loope
pushf
pop
or
movsb
mov
fsubs
jne
cmp
icebp
aad
jbe
call
xor
cmp
push
add
out
push
push
xchg
aad
stos
dec
ja
sbbb
js
arpl
ss
sbb
push
cmc
aad
adc
fimuls
lret
push
in
add
xor
dec
pusha
inc
or
mov
lock
fcom
mov
cmpsl
mov
xor
lods
icebp
aaa
das
sar
dec
jno
pop
xor
inc
adc
add
push
jno,pt
inc
test
fistpll
int3
inc
mov
rcll
test
aaa
pop
mov
je
daa
in
dec
jmp
jo
dec
push
scas
push
fistps
lock
jno
popl
test
mov
sti
xchg
sarl
mov
push
sbb
pushf
adc
sub
pop
mov
cwtl
ret
push
xchg
in
in
aad
es
shrb
mov
test
test
xchg
jmp
out
iret
out
stc
ja
mov
and
xchg
stc
insb
stos
popf
mov
pop
jne
pop
ret
jp
or
dec
inc
sub
mov
dec
out
jmp
sub
int
sbb
sub
insl
shll
push
loope
shr
mov
sbb
daa
xor
repz
mov
dec
or
sbb
mov
cmp
movsl
lret
fdivl
jnp
push
add
es
ds
cld
rcl
out
mov
adc
xchg
xor
mov
pop
fmull
sbb
adc
push
sbb
out
sbb
stos
cmp
lcall
jb
fldenv
xor
pop
je
lahf
sahf
push
jnp
xchg
inc
or
cmp
dec
mov
aaa
mov
dec
ja
pushf
mov
rorl
pop
jo
les
mov
addr16
cmc
add
sar
mov
scas
push
in
push
adc
lret
mov
in
clc
out
cmc
sbb
mov
ret
popf
mov
dec
cmc
sbb
fs
inc
inc
dec
cmp
push
xchg
inc
mov
lods
push
and
adc
je
clc
jl
nop
fists
cmp
loop
mov
insb
imul
ret
rcrl
insb
fdecstp
pop
std
std
out
xor
sti
pop
add
mov
adc
out
orb
loope
in
lods
fwait
jle
sub
scas
iret
jl
movsl
insb
pop
cmp
xlat
mov
jle
stc
sub
sbb
adc
pop
mov
cmp
bound
shlb
sbb
mov
roll
sub
ja
xor
jo
pushf
sub
shrb
lods
test
fsts
pop
jg
add
jl
mov
jnp
or
or
inc
mov
sub
fsubrp
cmp
xor
daa
dec
mov
dec
adc
push
pop
aad
movsb
outsb
scas
aaa
cmp
sub
sbb
mov
push
pop
inc
clc
adc
neg
pop
jl
jno
outsb
pop
insl
test
pop
adc
icebp
repnz
ss
jmp
mov
cmp
cmp
popa
mov
cld
adc
mov
and
pop
xchg
mov
pushf
lods
mov
out
jl
mov
add
decb
out
imul
arpl
in
jns
cwtl
xlat
lret
mov
movsb
fwait
cmp
ss
cmp
mov
scas
push
jae
add
loopne
popf
in
aad
stos
dec
icebp
jecxz
pushf
imul
aam
mov
fstpt
or
push
out
pop
popf
test
dec
push
mov
insl
xchg
fistpll
out
sti
or
loop
cmpsb
dec
nop
dec
jbe
sbb
cld
pop
and
fcomip
fcoml
add
fnstcw
xchg
cmp
in
test
into
mov
pop
or
or
movsb
fwait
or
fs
imul
shlb
mov
test
mov
mov
pop
push
jns
jg
mov
and
inc
decb
sub
outsb
jno
mov
cli
out
jne
adc
xlat
xchg
sub
mov
in
out
outsb
push
jns
rcll
mov
sbb
mov
test
pop
sbb
outsb
add
lret
fisttpl
lods
jns
sub
xlat
fildll
ljmp
cld
insb
dec
add
adc
adc
xchg
inc
or
xor
inc
popf
cmc
hlt
lret
and
movsb
cmp
push
dec
and
mulb
mov
sbb
pop
push
shlb
imul
cltd
or
int3
sbb
fsubrl
cmp
in
pop
imul
xchg
or
repnz
int
nop
cmp
es
sub
fisttpl
adc
mov
rclb
mov
adcl
stc
pop
in
scas
int3
aas
outsl
mov
insl
ljmp
mov
sbb
rcll
mov
and
fs
xchg
mov
and
movsl
aam
mov
divl
mov
cmp
fistl
cmp
jl
fsubrs
imul
sti
in
ret
mov
leave
out
fists
out
jne
scas
lea
test
hlt
xor
stos
cmc
and
lcall
adc
inc
sbb
js
cmp
push
orb
mov
pusha
dec
aad
xchg
and
cltd
mov
int3
mov
mov
mov
stos
mov
mov
repnz
cltd
push
je
mov
pop
inc
shr
xor
push
cld
bound
jae
out
imul
add
movsl
sub
out
fldcw
lea
lret
push
sub
cmp
mov
clc
pop
push
add
jno
push
xor
push
sub
dec
mov
popa
jp
mov
loope
in
mov
jecxz
pop
mov
push
ret
sub
arpl
lea
fucomp
dec
shrb
nop
xchg
xchg
lods
nop
ljmp
mov
push
mov
aam
notb
sbb
aaa
and
pop
push
inc
inc
cmp
mov
lea
add
push
mov
mov
push
into
jge
out
shll
inc
inc
or
add
mov
lret
ficomps
xlat
mov
andb
aam
js
push
mov
xchg
mov
out
mov
aam
icebp
sti
jb
mov
les
sti
mov
out
mov
xor
xchg
sbb
lods
or
xchg
xchg
enter
push
adc
mov
mov
cmpsb
insb
add
dec
lods
add
lea
cld
cmp
hlt
lret
daa
pop
sub
mov
push
push
push
sahf
cli
in
loop
jmp
push
ret
inc
push
leave
inc
jle
int3
fsubs
hlt
pop
shlb
push
or
or
aam
lcall
aam
xor
loopne
jmp
mov
dec
mov
rcll
jae
mov
adc
add
sbb
or
pop
cmpsl
push
jbe
movsb
fs
or
mov
ds
jge
adc
fdiv
ret
mov
or
inc
mov
mov
pop
sub
dec
movsl
jbe
push
sarb
lds
push
dec
pop
sbb
jp
arpl
adc
xor
fcom
int
inc
jnp
ljmp
aad
and
add
cmp
clc
dec
pop
gs
ss
mov
inc
sub
push
push
pop
popa
mov
test
sbb
jb
into
mov
cmc
js
push
gs
lahf
ds
mov
test
ss
daa
repnz
or
mov
push
jl
lret
enter
adc
or
mov
addr16
roll
out
jae
scas
or
mov
pop
adc
in
jg
mov
push
jnp
loope
cmp
dec
pop
sbb
pop
mov
lcall
pushl
insl
push
sbb
es
sub
fldl
sub
adc
push
add
xor
cld
je
in
xchg
in
loope
cltd
xlat
out
dec
jl
outsb
dec
sarb
dec
sub
pop
mov
mov
cmp
mov
fwait
popa
lods
and
mov
cmc
jmp
mov
fchs
pop
adc
and
inc
cltd
mov
paddusb
cmp
jae
and
mov
mov
xchg
or
pop
mov
pusha
data16
bound
in
jae
xchg
sbb
popa
std
pop
hlt
inc
dec
sub
jo
pop
lret
enter
aam
lret
pop
shll
xchg
pop
xor
dec
out
adc
call
push
cmpb
and
xor
movaps
jmp
mov
sub
sbb
loope
aam
xor
sbb
and
or
mov
mov
push
test
sbb
and
out
test
stc
add
jle
pop
stc
ficomps
test
xor
jno
sahf
aas
xchg
bound
xor
stc
xor
cmp
jp
cmc
fldenv
ffreep
mov
push
sbb
pop
arpl
insl
cmp
xchg
ja
pushf
inc
mov
sbb
in
or
dec
push
or
xchg
xor
loop
push
insl
or
and
pop
fiaddl
jno
cmp
mov
xchg
rol
xchg
pop
jnp
lock
mov
rolb
fs
pop
int3
cmpsb
xchg
jg
sub
dec
mov
fsubs
mov
ret
out
cli
add
dec
js
or
pop
dec
cmovge
imul
or
scas
sbb
int
cld
lods
mov
or
dec
mov
sar
sub
dec
mov
mov
mov
xchg
cmp
cmpsl
xor
sti
popa
das
push
mov
mov
out
popa
mov
out
mov
cs
adc
inc
cmc
movntps
jo
inc
cmc
pushf
push
xchg
mov
fwait
insl
fdivrl
enter
adc
push
pop
popf
adc
dec
xor
mov
fbstp
xlat
xchg
mov
not
inc
popl
push
imul
lret
jecxz
mov
jae
loope
mov
fscale
into
int
push
mov
movhps
repz
mov
leave
into
dec
pop
punpckhwd
lret
out
lahf
xchg
cli
mov
iret
or
mov
leave
push
arpl
ret
dec
and
jnp
scas
inc
sar
mov
cmp
aam
jmp
jae
mov
pop
outsl
sbb
pop
cmpsl
adc
inc
aam
ret
stos
xchg
sbbb
adc
das
xchg
push
sbb
push
lea
fistpl
mov
js
repnz
test
xor
out
es
mov
xchg
ret
dec
or
and
dec
movsb
jecxz
hlt
hlt
xor
fwait
cmp
dec
mov
cmpsb
adc
push
iret
dec
xchg
sub
leave
call
out
mov
stc
cmpsb
mov
fstl
or
into
mov
fsts
sbb
pop
repz
cmp
dec
mov
shll
stos
mov
ret
pop
aam
loope
mov
das
inc
ret
jo
call
jmp
sbb
stos
stos
sub
inc
cmp
jb
out
sub
inc
arpl
mov
add
fcompl
push
inc
data16
enter
jne
cmpsl
push
ret
rolb
lahf
fsubrs
xor
repnz
and
leave
push
aaa
iret
cmp
sbb
cmc
dec
mov
lds
sarb
cmp
nop
jb
sti
enter
mov
dec
inc
lahf
xchg
in
in
stos
out
xchg
and
lock
cmp
sbb
or
pop
pop
notl
pop
dec
dec
leave
lods
jp
outsb
fldcw
imul
jb
sub
in
xchg
ss
mov
adc
sub
test
mov
nop
adc
sub
insl
bsr
icebp
xor
loop
or
and
dec
cmp
cmp
and
sahf
xor
test
cmp
xchg
nop
data16
insb
subb
xchg
adc
iret
or
and
dec
adc
pop
popa
pusha
mov
sahf
push
push
push
pop
out
inc
inc
movsb
loopne
movb
xchg
cmp
jns
xchg
mov
jg
rcl
sbb
xor
lods
mov
sbb
xor
mov
dec
cmpsb
cmp
sub
lds
inc
xchg
lahf
jl
cmp
jmp
add
std
and
xor
fsubl
popa
xchg
jo
jns
iret
xor
cmpsb
jbe
push
xor
fucomip
cwtl
pushf
lret
lods
mov
daa
loope
popf
inc
lods
or
push
stos
nop
xor
ljmp
enter
inc
sqrtps
xlat
mov
lods
mov
pop
ss
pop
or
jne
sahf
movsb
andb
or
and
adc
inc
cmc
mov
aas
pop
and
adcl
insb
aas
xchg
bnd
std
xlat
sub
mov
int
jp
pop
roll
sub
dec
cmp
out
fstpl
mov
std
icebp
push
orl
int3
addr16
pop
xor
loopne
loop
or
out
push
loop
and
adc
sti
mov
fldenv
sub
mov
push
lds
stos
sbb
add
lahf
orb
add
out
and
mov
imul
xchg
jne
imul
pop
push
and
cld
repz
icebp
rclb
mov
push
push
addr16
insb
sub
lods
and
fs
mov
add
adc
ret
xor
scas
add
shrl
lret
outsb
nop
in
cmc
daa
jo
pop
fbstp
leave
mov
lcall
inc
stos
lret
push
or
jp
aam
mov
and
jmp
int
inc
sub
jb
or
or
mov
mov
pop
fstps
xor
arpl
pop
jo
adc
arpl
std
test
int
in
fwait
test
dec
inc
out
lods
or
lret
add
mov
sub
sbb
mov
cs
push
mov
shl
xchg
addb
jge
lds
and
dec
jns
xor
rolb
dec
scas
xor
aaa
dec
pop
scas
out
das
mov
pop
adc
and
dec
jmp
out
lret
dec
sbb
iret
mov
inc
scas
mov
jae
or
xorb
cmc
and
insl
jg
imul
xchg
push
lahf
dec
sub
inc
sub
lcall
jmp
pop
pop
shl
jl
inc
xchg
push
and
cld
in
push
pop
jp
test
xchg
push
cmp
pop
jae
lea
mov
mov
jle
lea
aam
or
bound
js
ja
mov
push
cmc
jnp
je
call
xor
std
pop
outsb
mov
lds
jb
mov
roll
pop
fstps
or
mov
mov
xchg
sbb
sbb
lds
jp
sub
inc
mov
shr
pop
cld
flds
std
testl
xor
mov
mov
data16
mov
pop
test
adc
jae
pusha
cmc
stos
or
cs
xchg
imul
dec
cmp
ficompl
iret
push
in
std
jp
fbstp
rorl
lods
ljmp
sbb
fwait
adc
push
mov
in
mov
mov
test
popf
cltd
push
mov
mov
daa
out
cmpsl
jl
xchg
pushf
int3
xor
dec
sahf
movsl
pop
shll
dec
pop
add
shlb
and
or
sbb
popa
fwait
out
mov
mov
jp
mov
adc
inc
mov
adc
jno
loope
fisubl
push
fistl
push
popa
adc
shrl
jle
out
add
pop
lods
insl
mov
add
shrl
nop
jns
lret
ljmp
or
in
mov
flds
push
add
mov
xorl
cmp
jns
jne
shll
es
fldt
lds
cmp
into
pop
cmc
push
xor
push
lret
into
dec
outsb
jno
add
xor
mov
repz
shl
mov
adc
cltd
inc
in
test
inc
mov
dec
or
dec
xlat
pop
fstps
xchg
push
aaa
jne
in
add
sbb
lcall
inc
enter
js
jne
je
mov
scas
xor
and
mov
mov
sub
mov
jno
or
cmp
pop
mov
add
pop
sti
out
jno
cli
dec
pushf
in
je
out
xchg
addr16
aad
dec
mov
cwtl
adc
add
les
and
pop
ja
es
pop
sbb
pop
inc
orb
and
mov
and
xchg
ret
outsl
scas
lret
fdivr
add
and
jbe
stos
inc
andb
das
push
inc
adcb
roll
hlt
lods
aad
mov
jl
jge
and
jb
out
mov
sbb
cmp
pushf
xchg
inc
mov
je
and
inc
cld
sti
sarl
jno
dec
movaps
test
aaa
pop
movsb
mov
pop
sbb
lahf
xchg
clc
scas
xor
push
push
push
pushf
dec
int
movsl
ds
push
mov
mov
xor
cwtl
inc
push
adc
cld
mov
pop
pusha
or
cmpxchg
orl
subb
and
sub
sub
les
cwtl
mull
cli
inc
mov
les
orb
fmull
cli
std
rolb
xor
aam
inc
adc
test
dec
aad
lcall
dec
xor
sub
jbe
popa
cld
xchg
lock
je
dec
mov
push
push
icebp
sub
mov
mov
adcl
rcrb
adc
push
scas
mov
xor
mov
mov
push
inc
call
mov
js
pop
xor
mov
pusha
or
pop
jecxz
pop
add
loopne
xchg
mov
pusha
mov
add
xchg
lods
xor
in
mov
inc
inc
mov
inc
and
ds
and
xor
mov
add
bound
rcrb
inc
xor
ffree
or
jno
adc
mov
xchg
std
xchg
les
or
clc
sub
ljmp
push
or
cmp
popa
aaa
test
movsl
adc
and
fmul
loope
push
icebp
aas
cld
dec
sub
adc
pushf
popf
sub
shl
inc
movsl
pop
xchg
aaa
mov
push
cmp
loope
push
mov
ret
add
push
lahf
cmc
in
sbb
mov
mov
out
sbb
add
imull
pop
pop
cmc
sbbl
fstpt
adc
fs
stos
dec
pop
mov
inc
pop
popf
shrb
jg
pop
arpl
mov
xor
mov
adc
je
lahf
or
cltd
pop
sbbb
ffree
adc
mov
shlb
mov
mov
add
shrl
sti
sbb
xchg
adc
fimuls
fisttpl
in
push
aaa
stos
sbb
inc
mov
es
rorl
pop
stc
xor
mov
sub
sbb
add
pusha
xor
add
fcmovb
lock
adc
xor
lret
call
enter
movsb
jle
pop
pop
dec
loopne
sub
cli
inc
jmp
cmpsb
lahf
push
pop
dec
inc
adc
inc
in
inc
jmp
cmpl
leave
fs
jae
aam
stc
call
loop
dec
inc
or
mov
lret
fidivrl
insl
or
insb
add
orb
stos
push
ja
ja
js
call
out
dec
mov
in
sub
aad
pop
test
stos
pusha
addr16
add
sub
sub
mov
out
pop
jno
imul
into
aaa
in
push
add
xor
aam
jnp
or
sbb
pop
fistl
inc
in
data16
or
stos
into
nop
adc
and
pop
and
stos
jae
fs
shlb
sub
adc
cmp
clc
nop
cpuid
cltd
in
test
dec
dec
push
ds
leave
mov
test
jns
fidivrl
shl
cwtl
jae
lret
sub
divl
cltd
push
lea
fimuls
mov
inc
jle
aam
dec
and
dec
nop
jmp
gs
orl
shrl
ret
mov
test
rcrb
out
lret
xor
mov
inc
xor
js
mov
stos
jg
pop
int
jecxz
mov
popa
cmp
dec
pop
jb
xor
test
addb
scas
ds
insl
lret
inc
cli
mov
jp
mov
mov
jo
out
fsubrs
jno
and
mov
inc
fmuls
push
xor
cmp
enter
jo
loopne
or
loopne
imul
aad
pop
jl
mov
sbb
xorl
push
cmp
mov
xor
mov
push
orl
test
jb
clc
adc
loope
clc
mov
mov
push
mov
jbe
test
pop
mov
andb
fstps
outsb
cmp
xchg
insb
add
push
add
and
nop
mov
and
mov
jo
jae
fldenv
out
mov
mov
leave
add
mov
les
je
or
adc
push
out
mov
xchg
pop
mov
hlt
mov
and
cmc
fiadds
cld
test
and
cmp
fcmovu
imul
cmp
xchg
jg
xchg
adc
sbb
pop
cmp
jb
jl
mov
pop
ficoml
imul
jae
push
fs
mov
jo
mov
mov
in
cmp
insb
stc
pop
xchg
cmpsl
mov
and
push
xchg
cmpsb
sub
add
or
loop
test
push
jae
dec
xor
into
ljmp
test
cmp
push
cmp
mov
adc
sub
mov
and
push
out
loop
mov
jecxz
xchg
xorl
push
lock
xchg
les
stos
mov
cli
pusha
or
inc
dec
push
push
ret
aam
add
jbe
movsl
mov
cltd
fisubs
jge
cli
cmpsl
popa
mov
sti
pop
je
jp
add
data16
sub
push
cld
jb
loope
leave
frstor
pop
cwtl
inc
ret
out
add
mov
inc
push
out
jo
ja
aaa
fidivl
inc
pop
dec
iret
out
mov
cmpsl
inc
pop
push
cli
clc
add
pop
ss
arpl
pop
pop
sub
pusha
push
adc
test
cmp
add
cmp
and
or
and
xchg
repnz
add
pop
stos
les
mov
pop
cli
xor
je
fsub
aas
lea
in
aam
ljmp
mov
enter
ret
inc
sub
mov
add
int
xchg
mov
push
aam
mov
jp
dec
clc
jge
sbb
inc
push
sysenter
pop
fiadds
test
dec
mov
pop
push
in
jne
push
fiaddl
in
test
cltd
xchg
sbb
mov
or
in
and
lds
push
insl
cs
or
shr
fmull
push
fucomip
clc
jne
cld
sub
sbb
scas
repz
mov
popf
xchg
sbb
adcb
cmp
mov
loopne
inc
xchg
in
or
loope
mov
sahf
rcrl
jns
mov
mov
adc
jbe
sbb
dec
stc
dec
test
sbb
shll
cmp
push
aad
std
pop
jo
push
pusha
push
sbb
mov
sub
loop
and
ljmp
std
push
popf
mov
fistpll
mov
inc
add
rcll
loop
or
out
push
mov
cmp
mov
jg
adc
leave
scas
pop
pop
std
stos
sarb
cmp
xor
xchg
dec
jnp
push
mov
mov
ljmp
add
mov
pop
add
add
xchg
js
xor
sti
ret
sbb
sarb
jg
fbld
jp
addr16
sub
cmp
xor
in
imul
inc
aas
jb
subb
pop
lods
hlt
call
xor
dec
push
add
mov
loope
cmp
push
sub
aaa
call
push
mov
pop
pop
fcomps
xchg
mov
int3
jp
daa
sub
cmpsb
xchg
jge
out
insb
cmp
xor
and
fcmovnbe
cwtl
in
jp
cli
cmp
icebp
push
xlat
fmuls
inc
lods
dec
sbb
mov
loop
sub
rol
int
lret
mov
test
add
xor
and
and
xchg
mov
sub
outsb
leave
rcr
mov
out
sub
pusha
xor
lahf
mov
jbe
in
int
ja
cmpsl
bswap
mov
push
aam
aam
loopne
adc
int3
jge
repnz
or
fldl
xor
mov
outsl
je
dec
push
mov
outsb
loop
jb
inc
test
sub
jecxz
mov
sub
pop
testl
in
std
mov
jnp
cwtl
and
xor
popf
notl
or
les
mov
mov
int
dec
pusha
das
adc
pusha
and
add
add
lods
mov
cmp
mov
inc
dec
mov
push
scas
lret
in
jmp
clc
xor
inc
and
test
pop
mov
scas
and
dec
push
iret
mov
sahf
jge
inc
or
xorb
repnz
adc
lcall
fimull
mov
mov
xor
ret
inc
cmpsb
aaa
mov
iret
push
inc
fcomps
mov
leave
fidivrl
aaa
xor
mov
mov
js,pt
mov
int
fdivs
shll
scas
xchg
sub
add
push
fstl
gs
jl
insl
iret
adc
push
ret
out
and
test
push
mov
jnp
pop
adc
adc
mov
test
in
ret
aam
inc
or
mov
xor
cmc
mov
sbb
add
cmp
or
jmp
stos
sbb
adc
inc
pop
pop
jns
dec
add
push
mov
stos
xchg
adc
iret
mov
imul
leave
fsubr
pop
icebp
dec
orb
ja
pop
jb
and
sub
cmp
jmp
or
rcll
mov
mov
cmp
adc
ret
hlt
add
rol
das
push
push
mov
addr16
add
mov
cmp
and
mov
bound
or
scas
arpl
repnz
inc
xchg
and
jne
div
push
hlt
jns
inc
mov
std
jecxz
pop
shrl
xlat
cmpsl
dec
cltd
add
jg
adc
mov
fsubp
jnp
pushf
fcoms
cmp
sbb
std
cmp
inc
popa
or
lock
adcl
outsl
ret
ja
dec
cwtl
jo
fsts
mov
mov
ret
adc
fimull
nop
rclb
ret
lods
ret
cmpsb
jmp
cmp
or
in
push
clc
add
pmaddwd
jp,pn
jmp
jmp
int3
or
jne
jns
imul
pop
repz
js
xor
xlat
loope
mov
nop
sub
sarl
std
xchg
push
movsb
das
loope
arpl
sbb
mov
sub
push
je
out
push
adc
mov
dec
fs
jmp
out
mov
lcall
push
shlb
lcall
test
push
sbb
mov
aas
xor
jmp
pop
sbb
lods
add
bound
push
or
pop
inc
sti
mov
xor
int
jle
fs
mov
pop
mull
cmpsb
sub
push
aaa
push
mov
lods
or
aam
pop
js
mov
sub
sbb
divb
push
xor
cmp
push
aam
aas
and
adc
outsl
cmp
xchg
sbbb
pop
mov
ret
call
aas
gs
sbb
hlt
outsb
inc
fs
sub
mov
aam
in
jle
jmp
fldl
jl
fldl
mov
jns
cmpsl
add
mov
add
aaa
or
push
ja
adc
adc
sbb
aam
scas
shll
push
ljmp
imul
fldenv
sarb
push
push
mov
pop
or
add
or
daa
add
outsb
sub
fildll
sbb
das
mov
dec
cli
pop
jmp
sub
ss
outsb
mov
in
jbe
push
mov
adcl
stc
push
and
iret
xchg
rclb
pushl
adc
and
out
cs
outsb
dec
test
lds
inc
sti
sub
inc
mov
and
fiadds
rol
cs
jle
mov
jge
loope
jnp
xor
jo
add
adc
imul
mov
mov
pushl
add
xchg
mov
jnp
mov
or
mov
jnp
aad
mov
add
add
dec
repnz
fists
aaa
mov
imul
lcall
shrb
xor
jecxz
jp
cpuid
mov
cld
in
cmpb
mov
ret
test
daa
jp
sbb
xchg
js
add
or
jnp
adc
xor
adc
pop
inc
insl
cmp
pop
mov
or
scas
push
ret
mov
lds
movsl
je
cmp
daa
pusha
loope
add
pop
jl
pop
outsl
lcall
push
dec
push
xor
push
xchg
and
hlt
sub
int3
cmp
push
lret
jecxz
sub
mov
xchg
xor
mov
pop
sub
sub
cmc
and
or
and
lea
dec
test
cmp
idivl
pop
test
and
into
lahf
xor
lcall
xchg
jge
cmp
sbb
faddp
nop
pop
aaa
js
add
ja
call
add
adc
movl
sbb
cmp
in
mov
push
xchg
adc
sub
scas
adc
in
sbb
inc
int
pop
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
inc
mov
imul
pop
bound
fmul
call
loope
push
in
pop
xlat
pushf
enter
cmpsb
xchg
and
add
je
cli
dec
repnz
and
xor
push
and
andps
lods
mov
inc
rorb
loopne
mov
jns
in
hlt
aad
mov
mov
into
pop
sbb
scas
gs
sbb
aas
lahf
imul
clc
int
pop
cmp
aam
push
movsl
dec
inc
push
inc
out
mov
add
adc
dec
dec
fdivs
jbe
pusha
ret
mov
mov
pop
pop
sub
add
insb
popf
xchg
xchg
call
jne
jno
cmp
mulb
iret
dec
xor
mov
repz
repnz
fdivs
into
jge,pn
push
mov
push
movsb
enter
inc
daa
repnz
xchg
pop
int
test
out
sub
sub
dec
repnz
sub
lret
scas
push
aaa
dec
dec
fwait
je
push
loope
xor
loop
cmp
xchg
shll
dec
bound
ljmp
mov
int3
or
sub
cmp
ja
lcall
ja
pop
cmpsb
dec
clc
sbb
xor
cmc
push
push
js
mov
sub
pop
jno
pop
daa
jae
inc
jge
push
add
int
sub
sbb
inc
push
stc
adc
and
add
adc
mov
loop
js
lahf
test
adc
mov
adc
aad
repz
and
push
adc
sub
or
xlat
shll
mov
ja
lret
lods
jne
cmp
inc
enter
popa
loopne
mov
xchg
mov
ficomps
aam
out
icebp
jnp
jp
sub
mov
aas
mov
idiv
cli
mov
lcall
int
les
or
aam
adc
add
loopne
lods
mov
fcomp
mov
lods
lret
std
pop
cmc
mov
out
mov
clc
out
xchg
dec
push
sub
xor
aam
data16
jecxz
pop
int3
xchg
push
repnz
loope
mov
js
add
daa
dec
in
mov
jp
xor
mov
fstpt
fnstenv
testl
cmp
faddl
add
mov
jb
mov
pop
scas
inc
and
push
mov
lea
js
cmpsb
add
lds
xor
push
fcmovnbe
fisubs
pushf
dec
xchg
sbb
cmpsl
mov
push
jecxz
lret
mov
push
dec
loope
adc
mov
inc
cmpl
aas
dec
mov
inc
aam
mov
fsubrl
lret
stc
loop
mov
mov
mov
stc
or
pop
sbb
enter
jnp
insb
jl
arpl
mov
cmc
fstl
sbb
pop
test
or
mov
jmp
dec
sbb
pop
stos
and
shll
mov
pop
clc
int3
xchg
xchg
sti
lahf
sbb
out
sbb
cmp
ds
inc
or
pop
dec
mov
notl
xchg
ljmp
push
mov
or
pop
scas
in
das
mov
inc
hlt
sub
pushf
iret
outsl
mov
movsb
adc
cmpsb
push
cli
cwtl
mov
add
dec
test
mov
enter
mov
jg
ror
dec
ficomps
pusha
dec
dec
pop
pop
je
sub
xor
dec
into
add
push
ss
rorb
cmpsl
jge
and
out
sub
mov
sub
clc
addr16
lret
push
in
ret
popf
push
mov
lret
mov
inc
push
daa
xchg
mov
push
adc
mov
daa
iret
add
div
dec
stos
or
mov
sub
cld
cli
xor
mov
jg
push
adc
daa
pop
fdivrs
adc
out
mov
mov
pushf
ret
call
call
stc
int
mov
stc
mov
daa
icebp
in
arpl
mov
sub
jge
pop
fsubl
xchg
xchg
leave
lea
add
in
add
lcall
enter
movsb
daa
repnz
in
insl
pop
adc
pop
jbe
lret
sub
test
jo
sbb
jae
dec
leave
dec
shrb
fadd
push
pop
and
inc
iret
adc
mov
mov
cmp
out
cli
lods
push
inc
push
stos
mov
stos
gs
mulb
pop
testl
in
sti
mov
sbb
dec
cmp
push
and
cmpsl
roll
mov
pushl
mov
cmc
xor
and
adc
dec
aam
ss
fucomp
aam
mov
loop
adc
scas
aaa
mov
and
stos
aas
push
jmp
jmp
int
sbb
sbb
sbb
xchg
push
rorl
mov
stos
aaa
test
in
mov
test
aam
push
repz
push
insl
jle
xor
pop
dec
call
mov
addr16
aad
mov
ds
mov
je
fiadds
lret
mov
inc
mov
das
mov
loop
call
xchg
leave
and
mov
fistl
jl
imulb
fdivrl
mov
lods
sbb
xchg
or
dec
loope
jb
lods
pop
fildl
push
inc
inc
mov
jo
xchg
xor
fnsave
popf
mov
mov
jbe
cwtl
mov
out
dec
jecxz
cmc
sbb
or
cmp
push
inc
cli
mov
movsl
fidivs
or
cmp
sbb
inc
xchg
arpl
add
push
cmpsb
fmull
cli
inc
jle
orl
jbe
cs
jmp
loop
sub
out
ret
clc
push
sbb
jae
inc
jbe,pt
mov
arpl
adc
or
ljmp
movb
push
lret
repnz
mov
sahf
fldl
jp
mov
iret
int3
adc
xchg
xorl
xor
mov
jl
ret
and
mov
fabs
push
lods
xchg
push
adc
fwait
inc
adc
inc
in
loope
add
es
ljmp
dec
mov
push
loope
mov
push
add
js
loopne
cs
imul
pusha
and
cmc
sub
aad
adc
sbb
repnz
pop
rorb
push
cmpsl
mov
aam
lock
lods
bnd
sbb
hlt
loopne
lret
gs
cmpsl
jmp
inc
push
out
rcl
dec
sbb
aam
jecxz
fstps
mov
pop
icebp
out
adc
stc
lods
xchg
jecxz
jmp
cmp
or
xchg
mov
adc
sub
inc
shll
mov
add
cmp
bnd
lock
aam
and
lods
pop
pop
jmp
aam
dec
mov
adc
sbb
lds
xchg
adc
and
pop
mov
ficompl
xor
clc
xchg
rcll
lahf
sub
fsubrl
xchg
movsl
add
das
or
sbb
xchg
outsb
cmp
adc
dec
iret
addr16
xchg
jg
sbb
test
and
add
sbbb
add
popf
lret
clc
repz
push
cld
or
pushf
mov
sub
fcomip
mov
cmp
sti
sbb
fdivl
in
aaa
xchg
cwtl
push
fldl
leave
aam
push
and
fisubrl
mov
xlat
dec
jl
popa
adc
shll
lds
lods
push
cmc
test
mov
adc
shlb
jb
lods
outsl
mov
inc
adc
aas
int
les
jns
xchg
dec
xor
test
mov
mov
int
insb
stos
out
fsubp
adc
inc
and
xchg
xor
xchg
orl
mov
gs
ljmpw
push
pop
in
outsb
dec
xor
add
gs
clc
cwtl
orb
xchg
and
call
push
push
outsb
sub
jmp
and
push
xchg
lea
sub
dec
mov
push
push
pop
adc
lahf
jo
fucompp
scas
add
jno
iret
xor
jecxz
out
xor
sub
roll
mov
dec
hlt
divps
xchg
push
inc
pop
jno
jo
mov
ds
int3
insl
dec
xchg
xchg
jno
xchg
mov
sbb
enter
inc
rcll
imul
dec
mov
out
popf
mov
inc
iret
dec
pop
mov
cltd
xchg
negb
jns
xchg
mov
or
shll
add
and
pop
and
xchg
jg
push
lds
xor
mov
inc
sbb
arpl
xor
sub
mov
fnstsw
pop
pextrw
and
jmp
loope
sti
lret
xor
mov
outsl
jmp
outsl
push
jg
ja
arpl
xchg
outsl
popa
dec
gs
mov
cmpsb
and
sti
out
or
mov
cwtl
sub
sahf
sbb
in
xchg
and
shll
fldt
dec
js
lock
ret
sbb
stc
xor
sub
clc
subl
stos
mov
dec
movsb
aam
or
or
jns
jg
fmull
xchg
popa
dec
pop
pop
repz
lock
xor
js
adc
or
scas
daa
imul
pop
and
mov
inc
popa
inc
gs
jae
sbb
fdivrs
addr16
push
sahf
sub
inc
imul
mov
nop
sahf
fisubl
jo
imul
mov
or
cltd
mov
adc
adc
popf
stos
sbb
mov
aaa
ret
xor
adc
jp
pop
and
dec
xor
cmp
and
mov
and
pop
sub
pop
mov
aaa
icebp
adc
xchg
or
dec
sbb
inc
mov
inc
addr16
mov
dec
dec
jmp
dec
in
int3
popa
fbstp
xchg
repnz
sub
cmpsl
filds
sbb
add
aas
mov
test
nop
cmpb
push
xchg
cmc
push
bnd
imul
in
insb
nop
fld
incb
lea
jns
in
shrl
pop
ja
cltd
movsb
frstor
es
rcr
sahf
push
ljmp
cwtl
sub
loopne
scas
ret
add
aam
mov
mov
xchg
clc
add
mov
leave
or
addl
clc
adc
inc
das
mov
in
jge
mov
or
mov
mov
push
pop
mov
mov
add
movsl
pop
int
cs
mov
push
mov
cmpsl
jo
xor
arpl
faddl
jbe
jb,pt
imul
mov
inc
shrl
add
add
dec
push
into
rcr
push
call
cli
aas
cmp
stos
js
sbb
xchg
fmuls
mov
xchg
test
wrmsr
andl
lods
mov
dec
or
inc
lock
sbb
aaa
xchg
scas
out
xor
and
adc
arpl
mov
bound
lret
push
pop
push
inc
cld
lret
int
ja
fisttpll
test
xchg
pop
sub
pop
mov
mov
repz
data16
pop
cmp
dec
insl
sub
nop
andl
cmp
jno
cwtl
clc
fstpt
shlb
pushf
clc
btr
arpl
pop
repz
push
xchg
js
mov
iret
jb
sbb
test
cltd
popa
mov
test
or
dec
push
out
mov
lahf
or
pop
pushf
push
dec
test
pop
ret
fcos
xchg
lahf
test
xchg
or
ds
fnsave
aaa
sbbb
mov
and
mov
jge
stos
sub
mov
aad
jg
jl
cmp
mov
dec
and
cmpsb
sti
adc
mov
fwait
inc
mov
shrl
pop
push
jg
clc
subl
test
push
das
push
std
push
inc
mov
ss
dec
data16
bound
cmp
dec
mov
cmp
xor
mov
sub
and
or
inc
sahf
aas
push
scas
mov
nop
mov
fwait
jne
out
inc
sbb
or
movsb
pop
dec
movsb
fldenv
push
cwtl
fnsave
das
shl
mov
mov
cmc
pop
movsb
call
jecxz
fldenv
jle
fdivp
sarl
mov
aam
pop
or
sub
pop
pop
out
mov
pop
push
inc
call
jmp
jecxz
xchg
dec
fldl
sbb
add
sub
lods
ds
clc
imul
loop
mov
pop
ljmp
lcall
fsubl
iret
lahf
cmp
loop
xchg
loope
sub
mov
xor
xlat
fwait
in
in
testl
xor
ret
int3
aam
repz
sub
adc
add
out
mov
push
sbbl
add
jecxz
xchg
std
sbb
push
int3
testb
sarl
popf
xor
js
sbbl
dec
out
jns
int3
xchg
push
mov
loop
add
lret
push
inc
push
xlat
imul
enter
pop
out
sbb
pop
pushf
pushf
subb
loopne
push
jnp
xor
sahf
cmp
filds
rcll
enter
add
xor
and
xchg
xor
mov
imul
loope
mov
inc
sbb
aad
call
out
push
mov
add
ss
inc
mov
pusha
ret
fs
fs
mov
inc
mov
mov
pop
pop
dec
pushl
pop
into
xlat
psraw
rcl
mov
dec
int
mov
mov
outsb
and
shlb
pop
add
and
out
pusha
mov
inc
ds
movsl
mov
dec
dec
repnz
pop
mov
xchg
fidivs
sbbl
mov
fistl
js
je
std
sti
loopne
popf
mov
pop
sub
xchg
pusha
add
mov
int
adc
sbb
addl
mov
sub
add
arpl
xchg
pop
adc
inc
cmp
in
in
fstl
inc
cmp
clc
push
mov
test
insl
iret
dec
jo
add
add
std
sub
mov
cwtl
cmp
movd
sbb
in
cmc
push
and
test
sbb
addl
jl
cmp
fcoml
std
inc
xchg
les
es
mov
xchg
cmp
mov
loop
dec
es
xor
inc
xchg
dec
mov
mov
and
push
adc
loop
mov
sbb
pop
push
or
dec
cld
leave
scas
sti
cmpl
push
sbb
xor
push
shll
js
xchg
xchg
mov
adc
push
xchg
jae
insl
daa
dec
xchg
sub
ret
sti
daa
out
pop
push
inc
imul
loop
add
push
inc
popa
and
push
add
test
outsb
inc
push
push
push
nop
shlb
leave
push
push
es
arpl
fidivrl
out
adc
je
adc
xor
les
adc
xor
jmp
jne
test
lods
loopne
out
test
add
daa
adc
sub
mov
lds
adc
out
popf
stc
add
lret
insl
mov
sub
cmp
mov
fsts
sub
push
push
pop
lcall
clc
cmc
push
pop
xchg
or
out
jne
mov
test
outsl
push
cmpb
fsubrs
es
bswap
ds
inc
xchg
or
fld
hlt
mov
lahf
xchg
dec
push
xchg
jns
cwtl
mov
lret
sahf
imul
imul
jns
mov
pop
std
push
dec
movsb
popf
sarl
mov
or
fwait
jno
pop
xchg
mov
mov
loop
push
in
out
dec
pop
pushf
outsb
or
add
fsubrs
and
mov
cmp
push
push
lcall
repnz
ds
jo
fidivrs
mov
popf
mov
push
pop
adc
pop
xor
popa
and
xchg
cmpsb
fisubl
scas
ret
out
push
das
ljmp
lret
push
or
scas
sbb
mov
adc
lret
sbb
jne
cmpsb
fcoms
fs
sub
adc
mov
inc
sub
or
cmc
jp
xchg
movsl
mov
icebp
sbb
jae
int3
push
test
icebp
shr
mov
filds
or
ljmp
adc
jmp
jmp
push
cmp
jne
in
pop
mov
xor
cmp
cltd
add
in
cmpsl
sub
rclb
xchg
test
negb
movb
jo
mov
adc
enter
push
mov
loopne
in
orl
cmc
xchg
mov
int
xchg
adc
jb
bound
push
jne
test
add
insb
movsl
mul
scas
xor
cli
mov
test
mov
xchg
addl
inc
sbb
imul
lods
ret
out
popf
mov
rolb
ljmp
xchg
sbb
xchg
jmp
or
fistpl
or
cmp
outsl
mov
pop
push
ret
repz
add
adc
sub
into
pop
fstp
dec
ret
pop
mov
jl
mov
test
lret
icebp
ret
lahf
xchg
cli
sbb
adc
loop
sbb
pop
ljmp
dec
pop
pop
shlb
movsl
in
or
xchg
sbb
pusha
test
mov
push
lods
roll
iret
and
rclb
popf
enter
lds
call
in
xlat
aad
loopne
movsl
stc
popf
and
idivl
out
cmp
aam
cmpsb
pushf
jbe
or
mov
pop
enter
jecxz
mov
rol
jecxz
ret
xchg
jmp
and
push
cmc
shl
les
mov
enter
cmp
fistps
pop
ret
out
outsl
jne
inc
into
sub
imul
shrl
jno
je
jge
jno
jb
pusha
inc
scas
fldt
cmpl
test
pusha
lcall
cmp
loop
push
jbe
enter
out
mov
push
outsb
insl
test
pop
jns
cld
jne
fistps
testl
or
xchg
sbb
sbb
jg
rcrl
inc
cmp
pushf
in
inc
jg
ljmp
test
cmp
sarl
sub
or
pushf
push
xor
push
jmp
add
andl
jge
jg
arpl
cmp
orb
sbb
jb
sbb
mov
cmc
cmpb
in
decl
add
pop
jmp
loopne
jae
dec
jl
xchg
pushf
add
dec
fsubrl
and
adc
sbb
ljmp
pop
inc
inc
outsb
jmp
cmp
sbb
mov
jno
popa
xor
and
push
fld1
jbe
push
mov
leave
jl
das
ljmp
mov
cmp
dec
sub
sbb
mov
dec
xor
js
movsb
in
ficoms
jmp
mov
ljmp
iret
sbbl
nop
add
in
rolb
int3
jg
aas
loopne
addr16
xchg
xchg
daa
add
fs
pop
push
outsl
lret
push
dec
fistpll
xchg
pop
xor
hlt
xor
insb
mov
sbb
cltd
cmpsl
les
mov
inc
scas
jb
shr
movsl
int
lret
jns
pushf
xchg
xor
jnp
mov
cld
cli
mov
ret
es
lock
loope
int
mov
xor
icebp
cmpsl
fdivrs
push
js
ja
xlat
sbb
std
inc
das
movsl
mov
push
aaa
or
xor
pop
pusha
repnz
sub
outsb
dec
mov
loopne
outsl
xchg
and
push
xor
jmp
jg
push
xlat
fcmovnbe
lahf
push
cmc
rcrl
mov
xor
andb
iret
in
push
popa
cmp
outsb
andl
xchg
xchg
jns
xchg
mov
enter
dec
jmp
popf
xchg
and
push
faddp
xchg
push
scas
jecxz
lahf
jo
sbb
push
std
mov
orl
xchg
push
dec
and
scas
shl
ss
sbb
imul
push
jae
push
ja
cwtl
jle
xor
lds
xor
repnz
push
andb
sub
xchg
aas
adc
mov
dec
jbe
popa
in
cltd
cwtl
adc
jl
pop
add
les
add
out
icebp
mov
filds
scas
mov
jge
daa
jl
sbb
xor
call
iret
adc
loope
pop
xor
in
mov
insl
xor
daa
daa
lds
daa
js
mov
push
les
out
es
scas
pop
cmp
ja
inc
iret
dec
cmc
jg
daa
stos
mov
pushf
or
xor
fadds
outsb
jle
lcall
push
out
jle
push
push
pop
rolb
push
jmp
repnz
sbb
fstps
out
aaa
add
push
push
add
pop
inc
jl
test
jp
inc
out
incl
cmpsl
jecxz
fisttpl
inc
sub
shr
jecxz
push
cmp
jl
jno
or
jecxz
ss
test
sub
fbstp
data16
dec
pusha
pop
shrb
xchg
mov
pop
mov
sahf
cmp
mov
mov
sbb
and
pop
pop
aas
mov
xchg
adc
in
dec
mov
clc
xchg
jle
pop
mov
pop
addr16
ja
test
sub
push
or
xchg
add
jb
rcrb
xor
add
nop
into
aaa
cmp
fcoms
or
lds
loop
jns
sbb
ficompl
subl
aam
mov
ret
sub
pop
subb
std
jl
push
pop
cs
imulb
ss
out
ret
push
xchg
and
xor
test
inc
jne
add
sti
scas
mov
outsb
fists
sub
addl
add
enter
mov
xor
mov
and
lds
sbbl
dec
das
mov
xchg
icebp
sub
ja
push
cltd
xor
pop
testb
loope
in
jp
enter
insb
push
in
in
lcall
pop
movsb
xor
dec
jge
xor
jo
mov
or
sarl
into
cld
test
out
dec
push
in
sbb
dec
dec
ljmp
fsubrl
push
jge
mov
cmc
xor
push
cli
xlat
cmp
cld
lds
or
xorl
sub
adc
mov
arpl
loopne
and
fcoml
pop
mov
jb
imul
mov
cmp
jbe
lock
add
dec
add
call
loopne
inc
lock
jmp
in
jl
test
push
stc
xor
test
fcmovbe
inc
cmp
pop
cmp
or
popa
daa
mov
ret
test
lcall
clc
ds
push
into
and
or
cld
cmp
mov
jns
stos
dec
pushf
cmpsl
mov
ss
in
stc
lods
jns
in
std
mov
sub
in
and
pushf
xchg
rcrl
mov
in
mov
test
ljmp
cmp
aam
pop
aam
mov
test
or
stos
outsl
popa
push
popa
push
data16
and
jns
adc
cmpb
push
lahf
jge
scas
enter
fisttpll
mov
mov
shll
xchg
arpl
sbb
push
adc
loope
dec
ja
dec
lock
lea
lcall
push
iret
xchg
cmp
fcomps
mov
bound
inc
sahf
mov
lcall
cmpsb
mov
ljmp
dec
pushf
mov
mov
loop
aas
jecxz
xchg
dec
inc
jp
addl
dec
cmpsl
xlat
sub
adc
mov
pop
mov
and
cmp
rcrl
adc
sub
frstor
les
adc
leave
push
push
mov
cmp
scas
mov
dec
gs
idivb
fsubs
xor
in
jns
xchg
jno
xor
fisubs
xchg
cltd
fsubr
or
sbb
xor
xchg
je
jp
mov
daa
cmc
nop
add
iret
inc
mov
fucom
scas
outsl
cmp
mov
mov
pop
out
ljmp
pushf
sub
vdivsd
inc
inc
in
jmp
mov
ja
out
repz
or
stc
lods
arpl
push
popf
push
js
add
in
cmp
jne
lret
push
or
outsl
sbb
hlt
xchg
xchg
mov
sbb
mov
mov
fimull
pop
mov
fwait
mov
repnz
aas
xor
add
repnz
into
iret
push
fwait
inc
hlt
roll
cwtl
mov
adc
popa
dec
xor
xor
or
xchg
dec
fstpl
push
mov
mov
mov
fnsave
inc
cmp
clc
xchg
fmull
jl
mov
into
or
in
sbb
push
fmul
pusha
lcall
loopne
mov
in
and
fwait
bound
push
or
mov
dec
loopne
clc
pusha
cld
push
sub
cmpsb
mov
dec
jge
mov
test
dec
cmp
mov
dec
sti
fimull
daa
out
fnstenv
mov
xchg
sahf
cld
out
or
out
test
ss
mov
sub
push
cmp
cli
sbb
jno
popa
bound
aaa
in
cs
es
lods
outsl
cmp
sbb
mov
or
xchg
push
xor
das
xor
cmp
ja
and
rol
mov
sbbb
fucomp
xchg
repnz
dec
psubb
insl
pop
dec
leave
fdivrs
jle
outsl
cs
loope
testl
lds
xchg
sahf
insl
insl
or
popa
mov
iret
jo
adc
sbb
popa
ja
ffree
dec
shr
xchg
repnz
xlat
sbb
pop
adc
add
dec
push
jb
cmpsl
push
pop
sbb
dec
je
cmp
int
mov
rorl
adc
fistpll
sub
sahf
push
xchg
jnp
ljmp
push
popl
int3
das
sub
mov
pop
enter
rcrb
popa
xchg
jmp
add
push
pop
call
es
in
dec
aad
sub
and
out
push
int
data16
nop
push
inc
inc
outsb
test
or
sbb
out
pop
jge
bound
loope
cmc
mov
and
pop
shlb
xchg
adc
push
popl
aas
pop
leave
adc
pushf
adc
pushf
push
fs
and
cld
mov
add
sti
dec
xor
or
dec
sub
mov
into
and
daa
xchg
lods
jmp
xchg
xor
jo
nop
sar
fcmovu
lret
and
cmp
jl
ficoml
adc
add
andb
xor
fmuls
fwait
shrb
jl
or
push
cltd
lcall
dec
movsb
sahf
push
mov
xor
sbb
lods
add
in
adc
mov
fisttpll
jo
dec
jmp
jl
push
cmp
mov
cltd
pop
sbb
out
icebp
xchg
lds
xchg
rclb
mov
pop
lcall
adc
lret
xchg
jmp
fs
and
jbe
cmp
aas
jmp
lahf
push
cmc
fisttps
popl
inc
iret
in
mov
enter
cwtl
mov
leave
rorl
mov
stos
sbb
sbb
pushf
push
xchg
into
mov
sbb
aad
adcl
or
push
fimull
out
icebp
cwtl
sub
cwtl
sbb
imul
inc
push
sub
clc
pop
jbe
ljmp
or
sbb
mov
jne
push
sbb
cmp
fcom
and
lcall
stos
rcrb
mov
add
loop
mov
fcompl
xchg
sbb
mov
jb
ja
stos
loopne
fstl
shr
jne
jmp
sub
xchg
in
insl
mov
mov
lret
hlt
sub
cmp
lahf
lahf
mov
jge
call
or
jmp
push
out
fldl
xchg
jmp
scas
test
pop
mov
movsb
push
jno
lods
in
mov
movl
add
call
fstpt
pop
jns
mov
inc
out
fwait
or
or
movsl
stc
pop
and
lret
xorb
std
adc
stc
sub
inc
out
xchg
sbb
ret
fs
push
jmp
icebp
clc
loop
inc
ret
pop
int
in
xor
notb
std
lds
mov
imul
cltd
push
or
mov
mov
outsl
fidivs
mov
pushf
dec
or
inc
insb
sbb
lods
jge
mov
dec
or
mov
fisubl
mov
lcall
repz
ret
jno
rcr
aad
test
ror
in
adc
clc
mov
scas
cmpsb
adc
push
and
push
pop
test
adc
and
mov
and
dec
xchg
pop
and
or
adc
in
fisttps
bswap
inc
dec
dec
xor
or
push
pop
mov
jns
dec
fcmovbe
and
pop
add
lods
fsqrt
or
xchg
xorl
lret
sbb
addr16
divb
xor
mov
jl
mov
cmp
add
iret
sbb
and
mov
dec
cmpsb
xchg
inc
lods
push
data16
mov
out
and
mov
mov
adc
xchg
jbe
adc
dec
in
lods
mov
cmp
xchg
fstpl
dec
jb
pop
or
in
mov
mov
add
loope
pushf
push
dec
or
cli
outsl
shrb
ds
fisttps
mov
mov
or
pop
stc
dec
sbb
ffree
pop
sub
and
test
inc
adc
cwtl
pop
push
pop
xorl
or
scas
fcmovne
pop
xchg
and
pop
imul
dec
inc
inc
jl
neg
and
and
cmp
fbld
ja
add
add
jle
xor
nop
dec
std
mov
mov
pop
cmp
lret
jns
xchg
mov
out
jle
dec
movsb
pop
pop
es
pop
sbb
fidivs
mov
arpl
ret
lahf
dec
jmp
mov
sti
out
sbb
rcrb
jb
push
sarb
sahf
cli
mov
std
fsubrl
cld
scas
ds
out
cmp
ds
dec
inc
lock
push
push
mov
fisubrl
inc
scas
negb
mov
push
push
cmpsb
pop
jge
popa
insl
push
or
sub
push
leave
movsb
pop
jp
fs
imul
xor
xchg
adc
jno
in
mov
pushf
and
lret
jp
jbe
sarb
inc
jmp
inc
jb
imul
pop
inc
sbb
lcall
add
fdivrl
rolb
mov
icebp
call
adc
inc
cmp
lea
xor
cmp
outsb
mov
push
push
fptan
sub
enter
dec
add
fsubl
outsb
bound
daa
popf
sub
ss
or
outsb
in
mov
pop
inc
aaa
dec
xchg
cmpl
js
int
xor
gs
lahf
mov
inc
rolb
andb
jp
fiaddl
pop
jp
stos
je
pushf
fstl
and
in
fcomi
inc
int3
pop
lods
lcall
mov
add
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
push
fimuls
pop
bound
and
and
roll
cmp
lcall
xchg
cmp
cltd
sub
mov
jb
test
repnz
movsl
dec
rol
fmuls
addr16
dec
mov
scas
addr16
cli
jb
cmp
push
shll
idivb
inc
xchg
in
test
shl
mov
cmp
xchg
hlt
inc
arpl
mov
pop
andl
xchg
insl
insb
sti
xchg
fsubr
add
adc
pop
xor
and
imul
bound
test
mov
int3
lret
mov
jo
cs
push
stos
stos
pop
dec
xchg
push
dec
cmp
or
xor
mov
lods
and
nop
rol
lds
mov
xchg
loop
into
sub
nop
aaa
jne
repz
divb
lret
sbb
fstl
jne
insb
mov
aaa
stos
sarb
fimull
test
or
add
cs
iret
inc
sbb
push
xchg
je
sub
xor
jns
nop
mov
or
call
sbb
mov
test
call
outsb
mov
fsubrl
cmpsl
or
out
es
xor
dec
jbe
sti
js
xchg
cmpsl
fstpl
ret
push
add
mov
ljmp
clc
xor
mov
fldenv
and
or
push
les
fnstcw
test
jb
or
fcom
pop
in
jbe
imul
test
inc
and
push
jle
add
imul
xor
pusha
js
xchg
cwtl
es
inc
push
addl
imul
ss
jae
je
fidivrs
jae
insb
inc
xor
mov
and
fstl
jmp
dec
test
cwtl
fnstenv
mov
sahf
cmp
daa
xchg
aaa
mov
fwait
or
mov
out
and
and
cmp
arpl
sbb
mov
and
xchg
dec
or
add
mov
stos
pop
xchg
cltd
aad
xlat
fdiv
push
aam
adc
stos
test
inc
inc
pop
or
les
jmp
jle
je
xchg
sti
decl
jmp
xchg
add
ja
cmpsl
and
cld
iret
fwait
mov
pop
icebp
cld
lods
test
sub
and
pop
pop
andps
jle
mov
outsb
repnz
sbb
push
sub
lods
out
aas
mov
or
or
scas
push
inc
cmp
es
leave
push
mov
insb
or
sbbl
out
and
xchg
roll
mov
popa
bound
sub
xor
cmp
or
lds
push
ficoms
add
jne
fadd
cmp
inc
sub
shll
lret
xor
fnstsw
cmp
dec
nop
out
fcmovnb
mov
xor
inc
xor
add
sbb
add
mov
dec
das
pop
fcoms
pop
dec
mov
nop
or
ret
lds
rorl
xchg
inc
cmp
imul
sub
adc
pop
sub
mov
scas
nop
add
xchg
test
or
xor
leave
scas
int
mov
push
loopne
jg
mov
stos
pop
out
jmp
inc
aaa
mov
cs
adc
jne
adc
pop
pop
jp
lds
fists
add
mov
lret
imul
scas
out
mov
jmp
inc
mov
push
pushf
test
push
dec
push
push
ret
pop
jb
repnz
pop
outsl
mov
stc
test
or
pop
adc
add
loopne
inc
mov
adc
mov
jmp
sbb
xor
test
adc
adc
hlt
movsl
in
int
sbb
iret
in
lret
or
lds
insb
data16
pushf
in
lahf
lret
and
jge
xor
mov
pop
jno
dec
mov
push
pop
into
sbb
or
mov
xchg
iret
pushf
xchg
jbe
ret
lahf
add
cmp
adc
loope
sti
insb
popf
mov
cld
adc
in
gs
inc
leave
aam
into
xlat
sbb
inc
mov
dec
sti
into
test
in
arpl
mov
jmp
mov
add
push
cmp
dec
fists
dec
pusha
sarl
mov
jle
in
movsl
mov
outsb
lods
or
push
xchg
sub
jne
adc
inc
mov
fbstp
int
add
xchg
add
aas
hlt
addb
arpl
sbb
jle
push
lea
lods
negb
clc
push
mov
add
cmc
xchg
popf
inc
lock
or
outsl
loop
mov
and
sahf
dec
jecxz
ljmp
ja
jnp
and
lock
lods
lock
ret
cmp
mov
ret
inc
rcr
jnp
test
jp
mov
ja
cmpl
insb
outsl
jmp
es
push
mov
imul
and
cwtl
lahf
add
sub
push
ret
repnz
mov
push
sbb
adc
lahf
rorl
jne
pusha
cwtl
aam
lods
add
imul
lret
and
in
xor
jae
sar
insb
fiaddl
popf
ja
lret
adc
jns
push
xrelease
mov
mov
je
ret
sbbb
push
xor
mov
lret
mov
loope
lahf
les
jnp
inc
fsubrp
outsl
rclb
imul
addr16
shlb
adc
cli
push
mov
cmp
cmp
push
xchg
add
lea
into
push
in
and
adc
push
dec
out
test
adc
xor
cld
sti
and
lcall
movsb
mov
dec
fsts
inc
shll
movsb
pop
mov
inc
lahf
iret
fwait
or
fisttpll
std
into
ds
out
repz
nop
popa
add
rcll
push
xor
sbb
mov
mov
and
push
fdivrl
adcl
fdivl
test
push
mov
jmp
pop
movsl
ds
dec
jge
mov
ficompl
mov
stos
insl
or
push
icebp
push
xor
lret
stos
jge
xor
clc
add
inc
outsl
lret
das
inc
in
out
sub
cmpsl
test
add
ljmp
jne
push
jmp
das
ret
test
icebp
in
gs
iret
movsl
jl
jo
jg
cmp
lcall
je
or
rolb
sub
add
sbb
fstpt
dec
ljmp
dec
mov
out
mov
push
and
shlb
mov
leave
iret
inc
std
jle
xchg
pop
std
xor
incl
in
or
popf
std
scas
insl
clc
data16
out
stos
sub
popa
cwtl
push
lods
lock
inc
inc
xchg
imul
fldenv
lahf
xor
int3
cmp
fsts
xor
fwait
stos
dec
push
sub
mov
lcall
pop
shlb
cli
mov
push
cld
nop
mov
jb
sti
movsl
xchg
mov
imul
lods
sbb
inc
mov
fcoms
mov
shll
fwait
cmp
dec
add
cmpl
mov
sti
call
fbstp
xchg
arpl
xor
jge
in
sub
ss
rcl
sub
mov
loop
int
icebp
cli
pop
ss
cmp
mov
inc
mov
pop
repz
sbb
pusha
fdiv
pop
jae
xor
inc
test
mov
mov
push
daa
movl
jb
add
imul
pushf
mov
and
popa
outsl
mov
mov
add
xor
pop
mov
js
add
jae
ret
mov
sub
xchg
stos
insb
fs
or
rcrl
int3
xchg
mov
mov
pop
xchg
pop
xlat
aam
aad
divl
stos
dec
fdivrl
mov
stos
aas
sub
pop
xchg
cs
mov
jbe
jge
fidivrs
xchg
nop
clc
aad
jmp
jmp
sbb
imul
or
pop
leave
in
mov
sti
in
adc
cmp
cld
mov
inc
jbe
imul
pop
loop
gs
popa
adc
out
aad
cmp
mov
scas
lods
sbb
and
testl
mov
sub
leave
andb
aas
mov
repz
rolb
mov
fmull
xchg
hlt
or
in
mov
js
fstl
pop
xchg
jp
add
jbe
cmpsb
fisubrs
and
jns
add
mov
je
xchg
test
add
pop
cwtl
or
dec
push
repz
bound
xor
out
mull
outsl
sbb
je
sbb
lods
js
repnz
or
outsb
mov
mov
popa
pop
insb
jb
sbb
pop
pop
xor
fmuls
inc
fdivr
dec
stos
popa
fbstp
pop
fsubs
jns
enter
sbb
stos
mov
sub
mov
hlt
jns
aaa
mov
stos
jmp
fdivs
or
mov
imul
icebp
fidivrs
das
add
stc
cwtl
sbb
lock
stos
push
filds
movb
jns
dec
sub
or
in
mov
je
push
sbb
notb
lock
popf
into
loopne
mov
mov
roll
insb
push
jno
and
pop
sub
into
mov
xorl
xor
xchg
lcall
into
int
cmpsl
in
nop
cld
es
faddl
sbbl
dec
cmp
sbb
mov
imul
lods
popa
xchg
push
and
and
bound
sub
jecxz
mov
mov
inc
push
xchg
mov
inc
inc
push
xorl
pop
dec
cmpsl
imul
pop
sub
ss
pushf
gs
inc
cwtl
out
out
movl
scas
push
push
mov
sub
xchg
pop
cmc
aaa
das
bound
push
mov
mov
repz
cwtl
jg
lahf
lahf
xchg
in
sti
test
push
push
imul
xlat
xor
pop
cmp
mov
test
test
push
mov
movl
xchg
lcall
inc
loopne
fbld
lret
mov
pop
inc
push
fwait
ret
sbb
int
mov
adc
fnsave
inc
jg
and
mov
sarl
cmp
xor
mov
jo
sub
repz
add
arpl
add
fwait
pop
popa
pop
outsl
popf
cltd
addr16
sti
loopne
sub
cli
xchg
adc
jp
inc
fwait
dec
adc
imul
mov
fsubrs
daa
outsb
movsl
scas
mov
ret
cmp
ds
shlb
mov
ret
xlat
repnz
add
test
dec
push
stos
pop
sub
ret
fisttpl
loopne
idivw
addb
jno
push
data16
loop
jecxz
cmp
movsl
fidivl
ss
dec
mov
insl
or
clc
popf
pop
add
push
adc
out
add
sub
add
loope
add
andl
mov
adc
mov
inc
add
adc
mov
mov
mov
mov
or
sbb
jp
fs
testl
rol
iret
lods
or
add
dec
lods
xchg
imul
cmp
hlt
push
andl
lcall
pop
xchg
push
icebp
or
mov
sahf
dec
add
icebp
xor
jl
pusha
stc
push
rol
xchg
fisubs
ljmp
lret
mov
xorb
ret
sub
cmp
dec
inc
sub
mov
mov
adcl
out
dec
popf
aam
xchg
adc
out
sahf
inc
pop
and
jl
jg
cmpsb
pusha
push
in
jg
cmp
pop
repnz
or
dec
inc
or
int3
or
lret
in
fbstp
testb
and
aam
jne
push
or
ljmp
mov
stos
cmp
xchg
nop
in
jmp
xchg
xchg
out
sbb
inc
int
adc
inc
rcrl
test
outsb
dec
out
mov
es
pop
mov
push
std
or
ljmp
xchg
sub
push
or
xor
xchg
fwait
shll
adc
xor
lods
fcompl
or
shll
xor
rcrl
inc
xchg
mov
xchg
out
gs
rolb
leave
dec
mov
dec
dec
dec
std
dec
push
or
rcl
js
incl
mov
loop
orl
dec
ret
ficoms
sub
xlat
pop
add
jne
iret
xchg
dec
xchg
rcr
mov
push
xchg
xor
jno
popf
push
rcll
add
push
pop
jmp
jecxz
add
pop
mov
ret
jno
addr16
clc
pop
leave
and
sub
lahf
pop
je
mov
lret
xchg
dec
adc
out
roll
mov
add
cmp
lret
inc
push
fcmovbe
mov
lret
scas
bound
loopne
mov
push
mov
scas
cld
push
popf
aas
and
or
jae
std
jnp
loopne
scas
sub
and
imul
mov
movzbl
neg
repz
dec
xchg
sarb
aam
adc
fwait
jmp
add
ficomps
sub
jl
adc
push
mov
cmc
nop
push
jne
stos
dec
fstpl
pop
pushl
iret
roll
cmp
jmp
les
mov
inc
add
mov
jmp
sub
mov
adc
lds
sbb
testl
cmp
sbb
data16
sbb
cmc
fsubl
bound
cmp
cmpl
movsl
iret
or
mov
push
nop
dec
or
jb
leave
and
lds
jae
pop
adc
rcrb
mov
push
out
aaa
shll
test
sbb
mov
das
ljmp
push
jb
mov
out
push
sbb
jp
shrl
xlat
rcll
xor
cmp
imul
test
cmpsl
vcvtss2si
cli
in
jge
and
call
ljmp
or
add
sub
push
rolb
jge
rcr
dec
mov
sbb
insl
lcall
jae
adc
orb
lahf
imul
push
sbb
sub
lret
sbb
into
js
jmp
in
fisttps
pop
enter
adc
outsl
lods
dec
ds
scas
xchg
lock
mov
sub
pop
push
mov
add
lcall
ret
lret
add
out
addr16
push
push
and
fsubs
loop
stos
pop
jae
outsl
test
push
push
mov
pushf
out
addl
pop
dec
xchg
xchg
inc
jns
js
cmp
mov
push
test
mov
js
inc
fucom
shrl
jmp
cs
push
jl
jns
lea
les
mov
outsl
fldenv
sub
mov
test
xchg
jbe
xor
add
jae
hlt
sub
fldl
lcall
pop
or
xor
in
jg
mov
and
ljmp
into
in
test
test
sub
fs
mov
or
and
xor
hlt
inc
jl
jno
push
and
mov
jl
std
adc
xor
dec
fcmovnu
adc
lret
xor
xchg
inc
es
clc
test
mov
xchg
daa
dec
je
pop
jg
dec
roll
inc
sbb
in
pop
push
in
out
leave
ljmp
loop
or
test
fdivs
cmovle
mov
mov
popf
clc
inc
fstpl
clc
out
sub
sub
jbe
xchg
movsb
mov
pop
fs
popf
sub
cmp
jmp
jle
aad
ret
jmp
je
cmp
ret
push
andl
cwtl
mov
or
xchg
jmp
and
in
pop
cwtl
popf
mov
in
mov
lea
cmp
in
mov
or
jl
xchg
bound
xor
cmp
notb
in
sub
xchg
fildll
adc
jno
push
inc
popf
loope
out
fwait
sbb
jl
fs
jno
fnstcw
dec
mov
test
push
rcr
fcoml
stc
jne
sbb
mov
xchg
cmpsb
inc
aam
imul
mov
and
push
xor
cmpsl
out
cltd
adc
jg
dec
push
mov
cmp
push
add
aam
movl
xor
fwait
cli
jg
sbb
je
push
pop
cld
or
cmc
mov
jae
sub
cmp
inc
mov
sarb
mov
int
mov
add
mov
mov
aam
cltd
mov
or
mov
xchg
inc
cmpsl
push
pop
cmp
mov
mov
mov
hlt
stos
sub
add
movsl
outsl
cltd
bound
ljmp
bound
lcall
xchg
push
adc
or
loope
loopne
mov
les
fmull
mov
mov
and
xor
mov
push
cmp
ret
notb
cmpsb
gs
rorb
cmp
xlat
rclb
and
mov
adc
fwait
into
mov
data16
sbb
xor
fdivrp
mov
jle
push
ja
fs
fists
fadds
jge
adc
jp
fnstenv
inc
cmp
cmc
sahf
test
xor
xchg
pop
jo
adc
and
push
jp
xchg
das
loop
lret
imul
cli
or
sbb
fcoms
bound
loopne
shll
mov
addr16
xchg
std
adc
out
jb
insl
rcll
push
and
fsts
ljmp
lds
or
inc
or
jmp
sub
ds
fidivrs
clc
or
ljmp
jae
add
cltd
inc
aas
mov
test
jnp
iretw
mov
push
sub
or
nop
nop
push
lock
lahf
movb
pop
loop
pop
out
mov
es
mov
push
cmpsl
jne,pn
notb
scas
sbb
xchg
and
cmp
xchg
bound
bound
xchg
dec
rcr
push
ljmp
nop
popa
add
insb
sbb
push
out
imull
test
test
leave
cli
call
mov
add
js
jnp
xchg
inc
inc
lds
sahf
mov
mov
dec
mulb
fidivrs
add
daa
cmp
mov
je
inc
cmpsb
fiaddl
xor
movsb
movsb
popa
jecxz
xor
ret
into
daa
mov
push
xor
adc
xchg
fisttps
popf
stos
test
pop
dec
mov
test
jbe
mov
rclb
fxch
ja
push
das
imul
loopne
in
movsl
xor
push
dec
mov
iret
addl
sbb
repz
or
scas
fbld
sarl
sbb
mov
idivb
adc
and
pop
or
sub
das
jecxz
xor
mov
repz
cs
add
cld
fsts
sbb
lahf
or
and
xor
call
mov
mov
add
imul
in
dec
subb
inc
out
ljmp
mov
lods
lea
aam
aaa
fsubrl
or
push
mov
sbb
pop
icebp
xchg
leave
inc
sbb
imul
into
mov
xchg
js
pop
push
pop
jbe
or
jmp
loopne
sbb
jb
jne
mov
cmpsl
inc
and
mov
xchg
fcoms
push
adc
adcl
mov
lea
mov
add
cmp
jmp
shl
xchg
popf
dec
leave
into
out
jle
sbb
clc
pop
adc
dec
imul
push
je
cmpsb
pop
cmpsb
imul
dec
je
std
pushf
jno
test
lock
fists
mov
jnp
lods
mov
scas
pop
push
sbb
test
lret
cs
dec
in
fsub
ficompl
fidivs
daa
lcall
lret
xor
stos
or
jmp
jmp
or
lods
push
aas
pop
xor
xor
mov
rol
lds
jb
mov
repz
in
je
into
bound
leave
aad
mov
pushf
inc
cmp
jge
xchg
sbbl
cs
dec
les
or
decl
rcrb
inc
out
push
dec
out
pop
or
scas
enter
leave
cmp
adc
or
jns
insb
shrl
mov
lret
inc
pop
in
inc
mov
fistps
movsl
jnp
lahf
dec
outsb
inc
dec
fnstenv
or
bound
ret
in
add
ret
shl
mov
cmpl
ss
lahf
xchg
cli
xchg
lock
pop
daa
sub
int3
cmc
pusha
xchg
jecxz
xor
jmp
cmp
fstpt
inc
cmpsl
pop
into
cwtl
ljmp
pop
pop
mov
jmp
adc
std
or
ret
outsl
and
xor
jmp
lea
fildl
xchg
or
insl
out
sub
push
fucomip
mov
xchg
inc
shlb
jns
or
xor
xorl
repnz
push
lahf
fmul
stos
fs
jge
or
gs
int3
nop
xchg
mov
lret
xor
add
ret
nop
test
push
daa
xlat
scas
add
cmp
xchg
jns
adc
fbstp
call
inc
add
sbb
vcvttss2si
jmp
add
add
xor
jae
je
adc
jno
mov
ja
imul
xchg
aaa
jg
xchg
inc
lahf
inc
sbb
lea
int
ljmp
xor
mov
cmp
bound
lds
lods
mov
sub
mov
addr16
pop
addr16
mov
xlat
push
mov
adc
add
fisttps
repz
or
insl
stos
out
and
pop
pop
sbb
xor
mov
add
ja
push
pop
das
adc
dec
push
les
stc
out
adcb
stos
xchg
ret
mov
cmp
sub
lock
pop
inc
push
mov
repnz
cmp
jg
hlt
int
nop
push
and
sub
fmuls
std
test
dec
loop
adc
cmp
test
inc
js
xorl
mov
mov
cmp
or
cmp
mov
cltd
lods
sahf
rclb
mov
das
push
clc
mov
and
aam
repz
retw
or
sarb
fists
cmp
out
push
and
filds
aas
sbb
ja
nop
insb
sub
sub
dec
sbb
jnp
jae
add
ss
mov
cmp
ss
movsb
out
fs
test
xor
pushf
or
inc
test
xor
pop
popl
mov
pusha
aam
cmp
xor
lcall
or
in
cmp
cmc
sbb
idiv
sti
es
inc
sub
movsl
daa
ds
xchg
xchg
aad
out
inc
cld
and
int3
jecxz
lret
addl
daa
xor
inc
rol
jmp
pop
cmpsl
mov
mov
mov
aas
xor
add
psubusb
outsb
mov
adc
jo
pop
bound
div
xor
add
mov
jg
loope
sub
jne
fs
fwait
movsl
xchg
jbe
enter
jo
ret
push
sbb
push
mov
jecxz
stc
dec
clc
pushf
repz
xchg
mov
movsl
sub
xor
loop
mov
or
jb
adc
popf
arpl
mov
ss
neg
cmpsb
cmp
lahf
insb
mov
inc
inc
fcomps
sbb
push
jge
stos
cmp
mov
jb
hlt
dec
dec
sbb
xor
in
pop
xor
sub
mov
pop
loop
test
push
pusha
adc
imull
ljmp
pop
adcb
pop
sub
js
xor
lock
jne
push
cmp
lcall
movsb
test
xor
cmp
dec
cmc
repnz
cmpsl
int3
adc
sbb
mov
mov
ret
dec
sub
push
jne
inc
orl
insl
adc
push
cmp
iret
in
mov
ljmp
sti
mov
push
mov
pop
sub
test
sar
xor
ret
or
mov
div
data16
mov
and
cmpsl
mov
les
call
mov
in
fnstcw
sub
dec
adcb
int3
push
aad
cltd
pop
js
sbb
or
xchg
pushf
call
jl
nop
mov
test
cmpsb
jmp
cmpsb
pop
fs
repnz
imul
or
sbb
push
les
or
jg
mov
repz
adc
loop
adc
addr16
xor
jecxz
outsl
and
mov
xchg
ficompl
xor
fcompl
and
lods
or
push
mov
mov
outsb
mov
add
sub
push
mov
add
add
fsubs
dec
sbb
pop
jle
inc
inc
stos
jg
push
inc
jo
cmp
mov
cmc
nop
mov
insb
pop
aas
sub
mov
push
or
cli
mov
lock
std
mov
js
loope
adc
mov
loope
lock
call
mov
jb
test
dec
mov
inc
sub
call
cli
scas
fwait
sbb
push
inc
pop
ljmp
pop
lds
or
clc
out
mov
pop
mov
ficompl
jns
lahf
jnp
mov
insl
mov
jmp
aas
scas
dec
dec
and
xor
loope
cmc
sub
cmp
lahf
or
cld
xchg
dec
sub
add
dec
push
add
sub
inc
int
cli
inc
push
jmp
xchg
outsl
cld
xchg
or
lock
push
lods
adc
lds
jecxz
push
mov
mov
dec
dec
mov
pop
adc
add
loopne
jno
imul
pop
ljmp
jge
lods
xor
int
imul
push
lret
cwtl
outsl
sbb
dec
lcall
cli
gs
stc
int3
jge
mov
cwtl
roll
and
aaa
mov
out
mov
sub
sbb
insb
jmp
stos
sbb
cmp
lods
repz
movsl
and
repz
idivl
loopne
popa
out
inc
nop
test
add
stos
lock
fadds
insb
lcall
mov
cs
mov
xchg
mov
cmp
push
shl
jmp
ret
outsl
add
stos
sub
mov
in
sarl
dec
mov
push
push
xchg
adc
add
pusha
in
dec
lret
std
setne
call
test
push
sub
roll
filds
mov
ss
pusha
mov
outsb
aaa
cmp
fs
adc
scas
and
test
orl
ret
rcr
xlat
sbb
stc
andb
lcall
std
out
sbb
fs
imul
inc
mov
in
dec
push
fisttpll
pushf
out
test
dec
dec
movsb
and
into
mov
ja
out
and
push
jo
in
fst
sbbl
dec
mov
test
fnsave
stos
outsb
push
mov
movsl
shll
nop
xchg
loop
push
mov
pusha
sbb
pop
inc
pop
adc
arpl
jb
jp
out
pusha
ret
lret
lret
or
es
mov
cmp
mov
test
or
xchg
orl
xchg
dec
pop
xchg
rorl
dec
inc
inc
xor
adc
fildl
cli
xor
cli
adc
cwtl
mov
stc
and
rcr
lahf
outsl
jnp
mov
inc
nop
mov
xor
ret
jg
jb
pop
popa
mov
xchg
rcrl
adc
ja
jo
aaa
pusha
xor
jmp
sbb
stc
movsb
dec
icebp
xorl
shrb
repnz
or
mov
add
mov
mov
lret
jmp
sbb
or
ljmp
inc
mov
cmp
sbb
out
es
xorl
or
hlt
and
fcompl
cmp
rcl
mov
pop
cwtl
cmc
xlat
sub
int
lret
xchg
incl
add
cmpsl
daa
in
lods
mov
ds
jg
sahf
xor
mov
push
mov
xor
xor
fnsave
push
repz
fcomps
push
mov
jle
xchg
mov
sub
in
push
jo
jns
xchg
fistpll
fbstp
sub
imul
hlt
cld
jmp
cmc
mov
jmp
push
nop
push
fldenv
jbe
lret
lods
out
fbld
push
or
outsb
pusha
rcr
bound
or
addr16
push
push
jnp
add
cmp
movsl
mov
mov
push
cmp
jmp
xlat
add
testb
dec
cmpsb
into
in
inc
mov
cwtl
pop
test
sbb
fistl
inc
add
arpl
add
mov
scas
adc
cmc
or
mov
sub
nop
hlt
add
movl
popf
ror
inc
andl
test
jg
aad
daa
push
bound
adcl
dec
pop
push
push
inc
cmp
jp
cmp
inc
mov
test
pusha
mov
cmpsb
sub
cli
leave
jbe
inc
movsb
mov
adc
pop
add
jne
mov
or
push
xchg
adc
call
loop
cmp
iret
ja
lret
pop
clc
movb
inc
cmp
or
sbb
mov
popf
into
test
das
aam
or
push
ss
sub
movsb
ja
xor
sub
addr16
mov
adc
xchg
nop
test
dec
adc
sub
adcl
or
push
lret
inc
jle
lahf
cmpsb
cmc
test
push
add
mov
gs
gs
pop
and
nop
data16
jns,pt
add
jno
xor
xor
jns
mov
ror
inc
cli
out
xchg
inc
ss
mov
jbe
fmuls
and
jne
ret
mov
dec
inc
or
int
fsubrp
xchg
mov
sub
adc
cmpsl
cmc
xchg
shlb
arpl
mov
pop
mov
pop
iret
or
adc
or
push
movsb
imul
sbbl
inc
push
sbb
loopne
aaa
lock
xchg
mov
jle
adc
jl
add
push
mov
repz
loopne
pop
inc
arpl
insl
jno
xchg
out
test
lods
aad
enter
mov
sub
in
mov
lock
xor
js
mov
jnp
add
add
add
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
arpl
popa
int
bound
shlb
lret
imul
lods
fyl2x
bound
pop
pop
pop
push
ljmp
nop
fcmove
das
mov
pcmpgtw
mov
pop
jl
push
or
sbb
rorb
mov
xchg
jae
xor
idivl
add
pushl
popa
sbb
int
jge
cmp
int3
pop
fyl2xp1
sbb
rep
mov
jmp
and
lods
pusha
ljmp
push
fcompl
hlt
fwait
or
jecxz
xchg
sbb
or
xchg
mov
data16
inc
xor
xchg
insb
xchg
adc
jge
push
xchg
addr16
popf
lea
insl
pop
sahf
jae
outsb
sub
pushf
adc
and
dec
jecxz
icebp
pop
jle
ljmp
loope
xlat
pop
adc
pop
ficomps
popf
pop
mov
cmp
icebp
inc
outsb
mov
mov
bound
mov
xor
xchg
aad
cmp
sub
aas
push
and
out
dec
icebp
inc
pop
cmp
inc
cmp
lock
xchg
shrl
sub
lods
out
aaa
outsb
pop
mov
loope
es
lret
pusha
mov
mov
clc
lret
loope
cmp
arpl
rorb
cmp
fdivrl
adc
inc
das
out
mov
xor
repz
scas
xchg
sbb
sti
aad
cmc
sbb
daa
scas
jo
dec
les
fidivl
filds
push
dec
cmpsb
into
sbb
pop
sbb
adc
xchg
das
out
leave
jbe
les
xor
cltd
stos
scas
xchg
cli
cs
iret
insl
inc
pop
and
push
ds
jmp
pop
mov
and
mov
insb
aas
lahf
adc
repz
mov
lahf
sbb
add
ret
movsb
mov
lret
int3
test
ljmp
xchg
cmc
mov
adc
jg
jl
pop
and
in
xchg
sbb
dec
mov
mov
push
inc
mov
cmp
ret
mov
out
je
data16
push
jecxz
out
cmc
add
mov
adc
or
cmc
xor
mov
adc
movsl
add
popa
cmpsl
sub
xchg
mov
inc
jae
cli
xbegin
mov
cld
imul
xor
jno
xchg
fs
jmp
mov
dec
std
sahf
inc
cli
cmp
imul
sbb
and
in
roll
ret
sub
push
sub
adc
sbb
mov
testl
cmp
test
cltd
std
mov
mov
gs
mov
ja
cli
inc
push
jmp
push
or
push
lcall
stos
rorl
into
inc
fldcw
pop
inc
xchg
mov
jno
sbb
gs
push
mov
mov
mov
loope
icebp
loop
sbb
sub
hlt
ret
cld
cltd
cmp
xor
pop
fimull
std
clc
mov
cmp
ds
std
sbb
in
test
ds
out
inc
test
data16
inc
int
dec
test
sbb
pop
cmpsb
arpl
cli
mov
pop
insb
pop
pusha
shrb
add
stc
pop
dec
adc
rol
or
xor
cmp
or
aaa
mov
inc
loope
mov
xchg
pop
rclb
lds
mov
dec
push
popa
dec
sbb
movl
add
lcall
lds
mov
mov
cmp
ds
add
push
stc
int
pop
push
lds
scas
or
sbb
popa
lock
mov
add
lahf
mov
adc
icebp
pop
inc
xor
ret
jno
push
adc
pop
test
std
cmc
ret
push
fadds
movsb
cld
push
vpmulhw
ljmp
mov
cmp
out
test
lret
ss
fdivl
xor
out
adc
push
sbb
mov
insl
pusha
and
push
add
lret
jb
adc
jno
lahf
mov
out
pop
negb
cmp
mov
sub
or
aas
inc
imul
adc
test
dec
std
push
not
mov
pop
xor
dec
popf
pop
jb
sub
cmpsl
pop
stc
and
and
jbe
push
pop
mov
push
add
aaa
dec
mov
sub
jmp
out
out
pop
jl
mov
sub
jbe
inc
shrb
jp
pop
test
mov
cmp
popa
or
je
enter
rcrl
rorb
insl
aaa
push
stc
arpl
clc
mov
xchg
add
cmpb
testb
add
mov
ljmp
fwait
imul
in
pop
push
push
bnd
cmp
lahf
js
mov
shl
jno
mov
sbb
loop
xor
jb
or
jno
stc
pusha
xorps
aas
mov
jp
push
sbb
imul
lret
jecxz
gs
xor
xor
xor
hlt
xchg
lds
mov
andl
sahf
add
push
fmulp
sbb
in
hlt
xadd
push
cmp
cld
fmul
push
out
idivb
and
dec
in
adc
or
jle
add
icebp
inc
mov
ljmp
out
cmp
not
jb
push
cmpsb
sub
xchg
out
test
fsubrs
js
fisubs
mov
adc
cmp
fisttpl
xchg
push
push
cmp
icebp
dec
nop
je
dec
or
or
inc
push
jp
fs
jne
ficompl
xchg
leave
mov
sahf
sub
ret
mov
mov
xchg
jecxz
or
popa
xchg
pushf
lea
pop
repnz
faddl
addr16
sbb
imul
imul
in
push
cld
fs
sbb
cmp
jg
in
js
sub
jmp
adc
pop
lds
cwtl
push
jo
dec
jecxz
arpl
std
mov
mov
jp
add
pop
out
push
outsb
xchg
int
cld
pop
lods
mov
lock
rcrl
pop
imul
rorb
xor
imulb
in
jo
or
or
cmc
jl
es
push
xorl
push
insb
mov
xor
xchg
fdivrs
cmp
xchg
inc
add
push
add
push
adc
dec
out
jne
inc
or
scas
inc
out
adc
les
negb
xor
fbld
push
fdivr
nop
stos
cmpsb
xor
js
sub
cmp
lcall
sub
les
inc
cwtl
fnstsw
mov
mov
jbe
adc
jg
pop
cmp
add
pop
ret
cmp
testl
mov
push
ret
movsl
dec
mov
add
das
test
cmp
outsb
pop
roll
sbb
cmc
push
inc
int
aad
jno
lahf
mov
gs
fdivp
mov
push
push
sbb
bound
mov
dec
push
repnz
pop
iret
and
ja
test
lret
mov
out
sbb
lds
push
neg
stos
and
scas
push
add
and
pop
lret
out
jno
je
sbb
xor
add
fdivp
movsb
aas
mov
dec
push
push
mov
push
int
shrb
lds
jb
or
mov
add
aad
test
loopne
mov
cmp
imul
mov
rclb
push
mov
jg
das
ret
dec
nop
data16
stos
mov
cmpsl
leave
pop
addr16
inc
cmpsl
adc
test
lahf
jae
pop
fmul
add
push
int3
daa
lret
out
push
lret
push
mov
mov
xor
pop
and
pushf
cld
out
icebp
jo
es
lret
cltd
adc
cmp
push
pop
jle
shll
xor
xor
ljmp
xor
jno
jp
or
jnp
xchg
or
mov
xor
inc
push
das
pop
jle
popa
leave
imul
popa
pop
inc
xchg
xchg
pop
xor
pop
jb
sub
xor
ret
mov
pop
pushf
xor
cmp
mov
fs
fs
adc
xlat
inc
dec
jae
mov
mov
jecxz
pop
insl
rolb
orl
add
lret
movsl
adc
cltd
mov
sub
in
loope
or
aas
inc
test
popf
outsb
push
mov
adc
lods
and
dec
cld
or
cld
push
in
aam
fisttpll
xor
cli
rorl
out
mov
sti
ret
adc
jbe
mov
insb
or
dec
sarb
sbb
jb
repnz
pop
mov
pop
push
inc
push
cmp
mov
push
pop
fisubrl
adc
dec
stc
jp
xchg
divb
pop
int
sbb
jle
lea
xor
aaa
ret
outsb
push
jno
dec
daa
push
icebp
sbb
xor
jae
aam
popl
mov
pop
push
and
mov
fyl2x
jb
mov
aam
dec
ret
orb
xchg
mov
pop
and
xor
sub
test
lret
fdivs
popa
sub
inc
lret
dec
adc
add
pop
mov
sahf
sub
sbb
popf
jge
adc
cmpb
movsl
xor
sbbb
in
sbb
adc
mov
jne
or
or
jp
pop
xchg
in
push
stos
in
or
lods
pop
sbb
adc
mov
push
adc
add
stos
lea
dec
adc
or
xor
adc
addr16
and
and
mov
xchg
add
sbb
adc
loop
mov
mov
and
cltd
out
lds
dec
outsb
loop
sbb
sahf
jo
data16
cmp
push
mov
loope
cmp
push
sahf
pop
int3
or
mov
pop
aaa
mov
cmpl
mov
movsb
jmp
push
jmp
cwtl
lods
add
fdivp
sbb
sub
dec
les
aad
mov
aam
mov
sar
pop
pusha
jno
jmp
scas
pop
int3
outsb
xchg
mov
fwait
inc
and
adc
test
and
inc
lds
rcrb
lahf
sub
pop
push
fcoms
int
and
lret
mov
sub
cmp
scas
sbb
push
xor
mov
stos
clc
mov
xchg
stos
insl
xchg
sub
sti
mov
mulb
fnsave
xor
cmp
sarl
orl
cmp
cmp
aad
repnz
ret
adc
xor
es
xchg
testl
mov
leave
pop
imul
pop
push
lea
dec
out
dec
cmp
push
ja
mov
push
sbb
pop
rolb
movsl
add
enter
dec
pop
dec
psubd
mov
mov
cmpsl
pop
xchg
testw
mov
sub
mov
js
pop
aad
mulb
push
clc
push
inc
sub
adc
subl
gs
call
insl
nop
jnp
jno
add
daa
xchg
lret
imull
ffreep
cmpsl
fucomip
xchg
out
into
xor
sub
xor
mov
mov
and
xchg
or
jne
adc
and
gs
push
icebp
xor
sub
push
insl
and
inc
jg
push
imul
shrb
mov
dec
push
lds
scas
fldenv
stos
ds
dec
pavgw
cwtl
int3
in
jg
push
or
gs
xor
je
loope
jmp
repz
pop
int
lahf
sti
jge
xchg
lret
js
push
adc
or
fstp
in
test
and
addr16
mov
mov
rcrb
and
hlt
mov
mov
xor
xchg
sbb
fsubrl
in
mov
jne
push
icebp
mov
lret
add
sub
push
sti
mov
subb
or
arpl
bound
push
scas
mov
inc
lds
dec
dec
incl
xchg
xor
pop
push
into
pop
into
add
mov
sbb
sar
lock
mov
xchg
sub
and
jno
mov
ret
jp
mov
xchg
jg
mov
mov
jo
add
lods
fldenv
jp
icebp
mov
xor
pop
mov
es
mov
dec
aas
lcall
iret
add
cltd
pop
sbb
push
roll
sti
cmp
stos
mov
or
jle
mov
in
loopne
aas
sahf
adc
mov
lock
xchg
mov
fcmovbe
cmc
movsl
mov
pop
xor
repz
and
mov
roll
lock
ss
sbb
in
mov
jmp
insl
sub
xor
sbb
les
clc
adc
sbb
rcll
data16
sub
and
mov
adc
sbb
add
adc
cwtl
dec
and
mov
in
into
cli
pop
jge
mulb
push
iret
or
pop
or
mov
push
cmpsb
and
insb
push
inc
ret
imul
test
push
popf
cwtl
pop
dec
mov
imul
mov
mov
jno
jmp
pushl
inc
mov
cmpsb
mov
cltd
dec
cli
ret
lcall
adcb
push
sbb
dec
loope
xor
fwait
es
movsl
adc
and
sbb
shrl
mov
pop
jb
addr16
mov
int
lods
mov
inc
or
enter
sti
xchg
icebp
or
insl
loopne
xchg
xchg
cmp
les
adc
push
jo
xor
in
je
pop
cltd
or
movsl
es
lahf
test
pop
pop
and
xchg
lods
and
nop
push
out
fisttps
stc
fstl
mov
mov
mov
lcall
sti
into
mov
jbe
repnz
std
mov
pop
sbb
clc
cmpsb
xor
stc
push
xor
out
push
imul
test
xlat
jecxz
push
inc
mov
mov
insb
out
in
pop
and
mov
gs
in
lock
loopne
repz
cwtl
test
lea
xlat
dec
pop
jb
pop
jne
imul
pop
outsl
ds
mov
dec
adc
ljmp
pop
ss
addl
push
jl
mov
xchg
and
or
mov
sub
mov
addr16
imulb
sahf
sub
or
setbe
daa
rcrb
rcrl
push
test
sbb
popf
pop
sbb
pusha
mov
mov
and
call
lods
mov
fisttps
mov
mov
add
sub
mov
cmp
int
mov
adc
cmp
fisttpll
ret
hlt
test
je
jnp
lds
es
cmp
lock
inc
adc
mov
inc
add
arpl
pop
icebp
ja
cmpsb
cmc
sbbb
sahf
mov
cmp
in
and
sahf
xor
fnstsw
arpl
lret
notl
fisubl
sti
mov
xor
enter
add
mov
fistl
xor
jge
std
sbb
icebp
and
push
sub
mov
mov
pop
xchg
xor
adc
mov
push
imul
iret
inc
into
aaa
dec
mov
shll
fmull
or
lods
outsb
sub
mov
jle
arpl
mov
xchg
scas
ljmp
xchg
out
and
movsb
ret
stos
shr
shll
inc
mov
mov
xchg
pop
lret
cwtl
arpl
int
imul
dec
mov
in
loop
out
loopne
jp
dec
lret
mov
punpckhwd
add
push
stos
insb
out
popa
dec
or
and
push
jg
xor
mov
movsb
loop
filds
cmpsl
jle
add
xor
mov
data16
mov
out
ret
add
jno
or
enter
fiadds
inc
adc
imulb
scas
adc
push
push
push
sub
lds
push
sbb
test
aad
gs
ljmp
in
int
iret
mov
int3
fmuls
xchg
faddl
or
push
and
leave
jl
xchg
dec
movsb
and
push
lds
mov
repnz
shl
in
or
ja
ja
enter
pop
pminub
xor
dec
scas
adc
outsb
dec
sbb
outsl
in
ret
cmc
lods
add
lcall
xchg
jmp
push
cmc
cwtl
test
daa
and
cmp
adc
data16
fwait
lds
xchg
fldl
das
ja
cmp
loopne
in
sbb
out
add
mov
sbb
rclb
pop
xchg
dec
fimuls
sbb
mull
cwtl
push
dec
flds
scas
push
mov
hlt
cmp
cmpl
cwtl
out
lcall
pop
dec
or
in
xor
push
mov
adc
add
scas
jle
xor
cmpsb
inc
inc
mov
push
test
lock
mov
sbb
ds
lret
popf
jnp
aaa
insb
popa
mov
leave
cmpsl
cwtl
push
add
loopne
das
pushf
sub
les
add
cmc
add
mov
test
sti
add
fidivs
imul
cwtl
sub
ret
add
aas
aam
sub
push
pop
add
fmull
sbb
inc
int
rorb
aaa
addr16
fisubl
icebp
lods
cmp
adc
sbb
negb
mov
xor
lcall
or
pop
lahf
jns
test
lahf
stc
mov
xlat
negl
test
cltd
in
aas
fdivrl
icebp
rcrl
and
sahf
shlb
out
inc
fiaddl
aas
int3
cmp
popf
sub
and
imul
cwtl
cmp
ficoml
dec
sarl
icebp
fadd
mov
jb
mov
mov
cmp
leave
scas
push
push
cmpsb
push
imul
inc
dec
js
das
rclb
int
out
xchg
push
push
xchg
pusha
orl
setb
xor
out
push
xchg
pop
inc
js
jae
cmp
setg
sarl
imul
hlt
sub
outsb
mov
and
stos
dec
insl
mov
jg
cmc
push
cwtl
mov
jbe
xchg
mov
push
or
loopne
and
sbb
mov
xor
std
adc
into
fistpl
mov
cld
pop
sub
inc
scas
xor
loop
in
mov
js
das
mov
xchg
mov
sub
into
in
jbe
cmp
stc
outsl
lcall
and
push
cmp
and
int
cmpxchg
sbb
sahf
stc
lahf
lret
cmc
std
lock
and
add
stc
mov
xor
adc
jbe,pn
jae
sub
subb
in
mov
fnstsw
mov
inc
bound
rclb
cmpb
idivl
add
mov
xor
mov
loop
test
dec
cmp
cmc
fisubs
push
mov
mov
or
mov
mov
cmpsl
bound
fdivrl
mov
dec
rorl
sub
cld
into
adc
inc
mov
addb
jns
or
and
pushf
dec
lock
jne
negl
into
dec
loopne
inc
and
jge
inc
adcb
dec
adc
mov
mov
and
enter
or
mov
jl
cmc
jb
xchg
add
int
aam
xchg
sbb
ljmp
jne
and
aad
mov
dec
lret
and
dec
pop
xlat
movsl
pop
mov
adc
xchg
jns
shll
in
mov
adc
pop
jle
mov
mov
pop
shlb
ja
add
cmp
pop
ret
cmp
test
xchg
jl
popa
and
jle
fsubrl
jae
cmpb
mov
jno,pn
xchg
aas
lods
shl
pop
or
cmpsl
adc
push
cmp
xchg
dec
pop
and
dec
jg
lods
inc
adcl
shll
js
cmp
into
cmp
dec
xor
push
xchg
lret
insl
scas
shlb
push
out
inc
fdivl
cmp
aas
lock
int
stc
shlb
fwait
sbb
mov
ret
shlb
mov
les
xchg
cmp
shrl
js
xchg
ror
cli
mov
cltd
push
test
push
inc
push
xchg
out
cmpsb
out
sahf
sub
fnsave
and
into
xchg
xor
enter
fwait
push
xor
dec
inc
push
fcmovnb
inc
sub
add
xchg
stc
pop
sub
dec
cmp
add
faddp
insb
pop
pop
dec
in
jno
pop
push
pop
roll
xchg
and
popa
repnz
mov
ret
sbb
outsb
jne
jo
mov
and
push
push
lods
jo
jae
add
test
xorl
xchg
pop
or
cs
daa
cmpsb
xor
jnp
test
ja,pt
push
inc
dec
adc
adc
xor
or
loope
and
or
jnp
pop
pop
and
mov
ret
and
outsl
aad
push
jp
jecxz
mov
and
adc
dec
xchg
stos
sarb
into
pop
repz
sahf
sub
jl
push
aaa
inc
lods
dec
test
shlw
cmp
push
sti
sar
jb
sub
popa
aad
pop
repnz
xchg
mov
cmp
inc
jl
int3
ficompl
imul
xor
orb
inc
cmp
jns
orl
mov
fsts
push
inc
aaa
leave
rclb
ret
sub
pop
or
and
aam
jecxz
add
dec
mov
jb
mov
or
dec
mov
arpl
sarl
stos
cs
dec
xchg
loope
dec
test
into
inc
xchg
xor
mov
gs
push
loopne
test
and
movl
mov
rcrb
stos
add
sti
jb
cmc
and
cli
lods
inc
cmp
mov
xor
xchg
inc
pusha
mov
in
lods
jl
mov
add
xchg
lahf
fwait
jl
push
loope
ljmp
inc
mov
sbb
lahf
insl
push
loopne
cmp
mov
cmpsl
add
jmp
inc
daa
ja
or
cmp
pop
insl
lahf
lock
mov
add
jl
sbb
pop
movsl
cmp
and
pop
or
stos
bound
dec
aaa
dec
inc
pop
test
fwait
xor
sbbb
test
mov
cmp
mov
dec
std
or
mov
sub
stos
stc
nop
outsl
insb
push
lahf
dec
dec
ret
das
shrl
test
arpl
inc
adc
push
jp
xchg
add
push
pop
pop
fiadds
mov
sub
aam
mov
push
jnp
out
movsl
adc
aaa
jg
mov
movsb
mov
scas
lods
mov
xchg
xor
movsl
mov
xchg
sub
push
mov
aam
sub
cs
adc
cmp
arpl
imul
push
std
add
pushf
ret
dec
clc
lahf
imul
daa
popf
sub
std
mov
xor
xor
cli
imul
push
scas
call
jae
push
inc
jg
push
jno
movsb
clc
movsb
inc
jbe
les
mov
sub
mov
xchg
jl
inc
inc
and
outsb
pop
aaa
and
adc
inc
out
addb
stos
les
filds
aam
jne
repz
ret
lret
pop
stc
mov
inc
stc
mov
push
cmp
sub
in
cltd
jecxz
rol
xor
mov
cmc
adc
pop
or
pop
je
jmp
bound
fiaddl
outsb
call
mov
push
sub
roll
lahf
daa
push
mov
pop
pop
cli
xchg
imul
or
mov
add
mov
pop
dec
nop
out
xchg
gs
inc
and
inc
lea
dec
cmpsb
fcmovnu
mov
or
cmp
xor
pop
or
les
dec
scas
mov
lds
dec
cmp
out
lea
outsb
pop
sbb
add
outsl
pop
sahf
movups
jnp
cmpsl
mov
lret
mov
dec
out
int3
add
lds
mov
push
jo
std
lds
aam
les
dec
les
push
jnp
lcall
and
scas
push
andb
sub
add
add
shrl
inc
je
adc
loopne
and
mov
cmpsb
jl
mov
push
jmp
pop
adc
sbb
and
sbb
subb
or
or
push
adc
outsb
sbb
xchg
jl
mov
arpl
sbb
cmp
stc
out
pop
push
fstpt
cmp
add
sahf
fistl
call
push
or
jne
hlt
xchg
ret
pop
xlat
ss
movsl
sbbb
push
push
sbb
sahf
sbb
adc
xchg
inc
mov
flds
mov
xor
in
and
fwait
icebp
rcrb
dec
xchg
cmp
rorb
repz
in
push
negl
jge
add
aad
fstpl
add
cwtl
inc
jo
pop
pop
mov
mov
jne
cmp
add
mov
nop
and
jae
loopne
cmpsl
and
sahf
add
in
sbb
adc
sti
std
insb
scas
inc
cmp
add
mov
je
mov
mov
idiv
and
jno
cs
ret
stos
ljmp
or
in
addl
js
add
cltd
pop
push
insb
imul
jnp
adc
test
add
push
add
jle
repz
sbb
outsb
ret
divl
mov
lcall
fldl
cmp
roll
insb
xor
sub
push
mov
inc
dec
mov
pusha
adc
hlt
xor
test
sahf
dec
stos
dec
lds
mov
sbb
repz
imul
push
shl
in
or
in
add
jl
jmp
mov
stc
test
repnz
push
pusha
xchg
bound
mov
sub
lea
cmp
lahf
aam
leave
mov
movsb
adc
nop
sub
inc
xchg
loop
pop
mov
sbb
ret
out
inc
and
sub
stc
imul
cmp
or
in
sub
jbe
push
test
movsb
icebp
push
mov
imul
nop
test
inc
dec
mov
das
mov
fldl
pop
and
js
sub
push
pop
jp
imul
xor
sub
pop
sbbl
es
aaa
call
iret
ret
imul
sub
xor
xchg
sbb
and
insb
leave
push
mov
in
out
sub
push
push
pop
out
and
or
cmpb
xchg
pop
or
mov
mov
gs
mov
stos
into
mov
and
add
addr16
test
and
adc
mov
enter
add
aas
and
cmp
aaa
adc
nop
pop
dec
movsb
adc
cltd
fldl2t
sbb
and
cltd
pop
mov
and
int
lret
jbe
aad
lahf
jp
arpl
or
pop
pusha
adc
mov
sbb
mov
push
push
lahf
jmp
je
das
dec
iret
js
pop
add
scas
pop
lcall
mul
mov
sbb
pslld
cmp
test
dec
stos
loopne
add
adc
pop
mov
and
xchg
push
sub
lock
add
sub
xor
repnz
jmp
adc
adc
stos
leave
js
xorl
xor
adc
inc
sar
xor
xlat
xchg
push
sbb
pop
xchg
fwait
inc
mov
inc
stos
aaa
pop
dec
dec
inc
xchg
bound
adc
or
push
xchg
popf
add
js
jb
fsubrp
lods
jge
test
inc
insl
cmp
inc
jge
adc
enter
xchg
adc
std
cs
add
add
repnz
andl
stos
and
shlb
cmpsl
xor
fwait
pop
pop
enter
cmpl
and
jge
decb
sub
mov
in
lahf
jns
sahf
pop
enter
adcb
inc
fbld
pushf
pop
add
xor
jb
pop
and
ss
aaa
inc
fimull
shl
and
scas
es
or
pusha
gs
fnsave
sub
add
xchg
or
ja
mov
sub
mov
xor
clc
mov
ss
test
ret
daa
cmpsb
out
add
loope
ja
sbb
cmp
pop
or
dec
or
lock
mov
cs
xchg
les
add
add
jge
shrb
test
sbb
out
mov
js
call
mov
pop
adc
mov
arpl
fwait
stc
stos
or
loop
lock
je
movsb
pop
das
inc
nop
iret
popa
sbb
jle
or
cmpb
mov
les
xchg
ds
ljmp
jno
jne
inc
jl
imul
mov
pop
mov
mov
mov
idivb
aam
xor
sahf
dec
mov
and
jle
aam
mov
jo
or
push
jae
sub
movsl
jae
in
out
out
mov
or
dec
or
je
fs
mov
out
push
jmp
mov
jns
mov
cli
movsb
adc
aaa
sbb
imull
pop
and
or
js
imul
cmpb
push
shr
loope
xchg
push
mov
imul
and
lret
imul
mov
pop
rcll
cwtl
in
gs
mov
aad
aas
lahf
mov
divl
dec
mov
sbbl
jmp
loope
cmpsb
mov
inc
sbb
pop
stos
cmp
jle
fstps
and
xchg
mov
inc
and
loope
fists
sub
dec
mov
jnp
lods
jl
dec
cmp
in
stc
push
movsb
sub
inc
fmulp
repz
lcall
or
mov
sub
pop
lock
inc
inc
ljmp
fwait
xor
xor
daa
or
out
pop
aad
jp
daa
or
sbb
loope
xchg
loopne
xchg
xor
arpl
les
pop
mov
call
jp
sbb
out
popf
cli
outsl
pop
sbb
and
sub
arpl
or
es
ljmp
mov
fwait
std
dec
add
sti
mov
leave
dec
mov
add
mov
sub
xchg
lret
popf
push
popa
lcall
fwait
mov
cmp
jo
loop
mov
push
fnstcw
jle
jmp
jge
fisubs
int
mov
jecxz
push
ljmp
aad
add
popf
push
xchg
xlat
gs
sbbl
int
lods
pop
sbbl
jns
sub
cmp
add
rolb
cmp
clc
test
in
inc
popa
adc
mov
insl
and
inc
out
xor
movsb
cld
hlt
pop
das
lcall
mov
xor
jmp
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
loopne
add
int
bound
icebp
cwtl
and
add
lods
inc
aad
jle
mov
pop
call
fucompp
pusha
cli
mov
push
jp
nop
ds
mov
or
das
std
bound
rorb
insl
inc
out
mov
rcr
fcmovb
movsb
cmp
insl
sub
ret
mov
pop
xor
not
inc
dec
mov
lods
dec
outsl
add
mov
adc
nop
sub
jbe
dec
shl
stos
cmp
sub
jmp
pop
mov
aaa
andl
inc
pop
inc
out
dec
add
out
adc
repz
int
mov
add
aam
pop
and
ret
daa
dec
adc
js
jnp
cmp
bound
xorb
nop
fbstp
or
das
push
in
jp
push
xor
fiadds
jl
orl
pop
arpl
jae
jno
sub
out
aas
push
loope
xor
ja
sub
push
push
push
icebp
or
sbb
inc
cmpsb
xlat
sbb
pop
stos
pop
and
xlat
push
pop
into
adc
repnz
int
fcmovnbe
xor
in
cmp
sub
testl
mov
sbb
push
iret
sbb
data16
ficompl
fsub
sti
gs
jns
bound
jp
cli
scas
jns
fstps
popl
js
mov
pop
cld
xchg
loop
movsl
hlt
scas
aad
mov
movsb
mov
add
adc
jecxz
xchg
jbe
or
mov
and
in
jp
pop
and
addr16
imul
adc
int3
inc
sbb
scas
pop
icebp
pop
mov
popf
nop
sbb
lea
push
ja
push
daa
out
and
cmp
aam
mov
das
lds
jmp
mov
add
aas
lahf
sbb
mov
sub
mov
mov
sbb
mov
inc
ror
aas
mov
dec
cmpsl
push
sub
pop
mov
aas
shlb
jae
push
add
adc
iret
sub
push
adc
cmpsl
je
rcrl
or
sbb
push
push
cmpl
or
daa
add
add
into
les
xchg
mov
scas
subb
stos
xchg
cmp
and
mov
xchg
jle
pop
mov
and
pop
int3
popa
inc
sbb
cmp
or
xchg
push
testb
pusha
or
mov
adc
xor
int3
out
push
push
mov
push
sub
xchg
and
push
sbb
jne
mov
push
xchg
pop
data16
cmp
and
mov
loope
push
movsl
movsl
mov
leave
mov
xor
dec
cmp
loope
out
jb
adcb
cmpsl
xchg
ds
xchg
scas
dec
pop
jb
xchg
mov
ss
xchg
hlt
ja
mov
lahf
pop
mov
mov
das
mov
and
leave
imul
shll
pop
imul
stos
sub
mov
cli
lea
fiaddl
inc
mov
fwait
lahf
pop
xchg
mov
pop
data16
into
fsubl
rorb
fdivrp
in
inc
adc
xor
dec
pushf
cli
jge
in
lods
adc
dec
xor
mov
ds
sbb
pop
in
sub
fdivl
les
or
movsb
lahf
or
pop
sub
push
add
imul
xor
mov
ja
aaa
pop
lock
cmp
jb
inc
push
adc
daa
aam
inc
mov
push
fsubrs
scas
mov
rolb
nop
in
push
pop
flds
adc
or
iret
mov
fdivrl
in
fidivrs
je
out
sbb
aam
enter
test
das
xor
imul
mov
and
in
imul
pop
push
xor
cwtl
nop
in
mov
fnstsw
cmp
fdivrl
fbstp
adc
mov
fisttpl
or
loop
jecxz
push
xor
iret
bound
ret
data16
inc
cmc
repnz
sbb
aas
push
insb
push
enter
cmp
popf
mov
cltd
repnz
cmp
fidivs
fwait
xchg
sub
add
test
in
and
cmpsb
sbb
rclb
and
adc
sarl
fwait
mov
push
push
mov
inc
mov
mov
mov
in
add
sub
cmc
and
sbb
loop
rclb
flds
sbb
jmp
ds
add
mov
cmp
jg
stos
in
test
sbb
jnp
jmp
ret
mov
inc
das
xchg
sbb
cmp
imul
lods
fnstenv
xchg
repnz
cmp
mov
fmull
outsb
xchg
pop
jbe
scas
jge
insb
xchg
popf
xchg
aas
rcll
sbb
es
jecxz
adc
mov
mov
xchg
xor
into
clc
dec
bound
in
test
iret
xchg
jge
int
sub
test
cmp
sub
sub
xchg
iret
enter
shll
and
or
pop
inc
mov
adc
push
sbb
jge
adc
scas
sahf
pop
inc
or
mov
out
add
inc
ret
xchg
cmp
or
outsb
lea
xchg
and
cmp
add
js
outsb
sbb
jecxz
mov
mov
sarl
jnp
pop
shl
pop
cwtl
mov
sarl
adc
mov
and
xchg
jae
mov
pop
inc
sahf
add
int
sbb
cmp
cmpsb
jle
push
jl
stos
fnstsw
pop
adcl
das
stos
icebp
mov
test
or
jne
sub
imul
sti
jp
add
sbb
pop
pop
lds
stos
test
addl
sub
sbb
jp
add
cltd
ljmp
mov
loope
push
movsb
gs
jo
sbb
popf
mov
mov
inc
pop
or
push
push
mov
fsts
imul
and
cmp
mov
pop
or
in
cli
add
bnd
sbb
test
sbb
push
mov
popa
call
sub
cmpb
push
pop
xor
pop
sub
xchg
push
cmp
inc
xchg
jg
xor
frstor
push
into
jl
fidivl
cmp
lret
jb
jo
movsl
mov
push
pop
mov
mov
adc
add
xchg
stos
xchg
inc
addr16
sti
adc
rclb
push
and
xchg
push
xchg
iret
in
push
cmp
or
xor
jmp
test
sbb
push
into
cs
mov
int3
fdivrs
and
mov
scas
xor
inc
mov
aas
into
fs
mov
icebp
fldcw
push
mov
xor
mov
xor
enter
sub
cld
cmp
pop
push
scas
outsb
jge
add
jl
cmpsb
out
xchg
cli
movsb
pop
lcall
aas
fcmovne
cltd
sbb
popf
imul
fidivrs
sub
mov
jo
ja
pop
stos
cmp
aad
mov
int3
ficompl
shll
push
flds
mov
rcr
pop
js
fistpl
jge
je
addr16
xchg
sarb
or
inc
daa
xchg
mov
xor
test
aad
popf
mov
repz
mov
pop
imul
mov
cmp
icebp
mov
cltd
mov
fildll
sbbb
adc
xor
inc
sti
loope
test
cli
fldl
pop
cmp
in
pop
cld
ljmp
push
pop
xor
cmc
dec
jno
dec
in
cmp
mov
cltd
hlt
lret
push
stos
rclb
aad
xor
movsl
ss
adc
outsb
xor
push
mov
cmp
mov
bound
jne
pop
mov
cmpb
xchg
sbb
iret
pop
int3
in
fcoml
mov
sbb
and
jae
add
push
mov
cmpsb
xor
outsl
fstl
pop
mov
outsb
sub
mov
loope
jp
in
xor
and
xor
add
or
mov
cwtl
test
cmp
ds
cmp
loope
xchg
add
mov
int
jge
mov
fsts
or
in
adc
jmp
cs
jge
stc
dec
push
jnp
and
shl
loopne
fiadds
clc
popf
sahf
jns
in
ret
jbe
dec
iret
addr16
pushf
push
add
add
xor
lds
add
filds
or
adc
popf
xor
jo
ss
sbb
cmpsl
pop
jb
xchg
adc
enter
sub
pop
lcall
or
or
dec
loop
pop
je
mov
push
adc
fldenv
das
nop
bound
push
lret
mov
sbb
insl
push
cltd
and
in
dec
mov
cltd
repnz
or
fwait
cmovno
mov
inc
and
xor
mov
sbb
inc
push
adc
pop
sbb
popf
cltd
add
cmp
sub
sti
xor
dec
jno
mov
insl
shl
sahf
or
sbb
lret
mov
gs
out
inc
sbb
mov
pop
imul
sbb
mov
xor
in
lds
bound
gs
test
loope
cmp
push
xlat
adc
ficompl
add
popa
add
lcall
cmpl
ret
adcl
push
and
loop
xor
loope
addr16
ret
push
roll
loope
in
xchg
lret
es
xorb
push
xchg
lret
pop
and
jle
sub
jmp
repz
or
pop
lret
inc
movsl
and
xor
sub
cmp
xchg
and
adc
leave
repnz
les
mov
push
xacquire
stos
daa
xor
loope
mov
addr16
shrb
ljmp
sub
cmp
outsb
shll
popa
icebp
stc
and
icebp
ja
ja
mov
cmp
lods
ret
jne
out
les
cmp
out
mov
pop
push
mov
jns
xchg
lret
fucom
and
mov
inc
pop
cltd
notb
test
out
fisubrl
popf
nop
adc
popf
push
jmp
or
scas
sahf
inc
fildl
inc
lds
xchg
mov
int
dec
sub
adc
orw
scas
push
leave
xchg
xor
jns
jmp
jle
mov
add
xchg
and
mov
sbb
fsubl
inc
lock
dec
sub
mov
cmp
or
js
xor
js
mov
addr16
out
inc
jbe
sarl
in
jg
movsb
adc
outsl
stos
mov
adc
jg
movsb
jnp
pop
sbb
mov
mov
fwait
push
iret
imul
clc
dec
or
mov
or
inc
dec
jns
cli
add
fnsave
mov
cmp
push
jp
mov
aas
inc
mov
shl
dec
adc
cmpsl
adc
repnz
jbe
pop
test
aad
ljmp
mov
ss
add
shlb
outsb
sub
push
and
xlat
ret
lcall
xor
add
or
mov
push
mov
inc
mov
aas
andl
outsb
test
cmp
rcrl
out
andl
xchg
or
fwait
xor
lods
xchg
xor
stc
push
outsb
sub
sbb
pushf
xchg
nop
sbb
nop
in
movb
pop
sbb
jp
inc
aas
jbe
dec
loope
cmpsl
call
stos
add
js
xchg
mov
cs
loope
scas
insb
and
push
into
or
vandnpd
dec
fiaddl
dec
sub
pop
fidivl
les
push
jns
xorl
sahf
scas
rcll
xor
adc
mov
sahf
dec
sub
icebp
mov
mov
sub
and
faddl
sbb
scas
pop
fisttpll
sbb
add
xchg
sti
orb
in
jbe
cmp
adc
mov
sub
jne
shrl
lock
idivb
push
xor
xchg
daa
pop
xor
push
into
inc
mov
scas
test
adc
aaa
dec
or
sub
int3
ret
out
mov
xor
xchg
les
cmp
push
fwait
or
out
and
push
outsl
adcb
dec
clc
mov
pop
mov
cmovnp
lods
call
orb
and
add
out
push
out
adc
jge
and
fimull
add
fldl
mov
mov
lahf
add
arpl
iret
test
fdivr
pop
push
aad
xchg
enter
fdivs
pop
adc
lret
jns
pushf
sahf
mov
xor
dec
jge
roll
mov
jae
adc
setnp
std
fsubl
cmp
loop
mov
test
add
outsl
aad
shll
and
cmp
ja
andl
insb
add
xor
jno
enter
fs
fwait
dec
mov
cltd
mov
stos
sub
jo
add
mov
addr16
scas
pop
repz
nop
sub
addl
data16
xchg
mov
xor
sti
cld
xor
jecxz
clc
popa
jno
ret
pop
add
xlat
in
dec
adcl
das
cmovns
mov
iret
loope
notl
push
and
adc
pop
sub
sub
pushf
xchg
jp
mov
hlt
ds
pusha
cmpsl
xchg
repz
cmpsb
into
mov
aam
icebp
mov
divb
mov
xchg
mov
dec
inc
mov
pop
fsub
loop,pt
xchg
pop
inc
or
and
loopne
scas
in
inc
and
popf
sti
cmp
jl
push
mov
add
enter
out
lea
or
mov
mov
push
push
mov
cs
cmpsb
roll
jae
insb
movsb
push
sub
adcl
and
push
xorl
aas
and
out
sahf
add
mov
je
xchg
mov
daa
inc
add
push
movsb
pop
sarb
lods
lcall
int3
inc
das
dec
cwtl
pop
push
jae
xchg
test
inc
jge
and
inc
mov
sbbl
push
and
xor
das
les
stos
adcl
aad
pop
inc
xor
adc
out
pop
mov
mov
xor
sbb
and
into
pop
sub
jmp
pop
mov
cmp
xchg
into
movb
rclb
xor
stc
je
and
addb
mov
pop
xor
dec
jo
std
fiaddl
xor
push
shll
adc
ss
add
push
test
leave
and
stos
subl
inc
adc
xchg
or
add
mov
out
aaa
cmp
xchg
add
or
les
mov
pop
nop
adc
and
xor
dec
shrb
pop
jnp
gs
inc
dec
pop
scas
push
pop
movsl
xor
push
adc
xorb
iret
pop
shll
sbb
cmp
out
mov
lods
xchg
addr16
and
sbb
ds
add
test
cli
rcrl
repz
push
test
int3
test
loopne
enter
pop
or
jecxz
inc
xchg
adc
xchg
sub
mov
sbb
fdivrl
aas
lock
or
popa
mov
test
jg
adc
mov
xor
or
ljmp
mov
int3
dec
into
xor
push
pusha
repnz
pop
xor
mov
mov
dec
dec
pop
outsb
mov
cmp
cmp
in
gs
xor
call
mov
mov
push
mov
dec
pushf
jl
xchg
mov
sbb
and
ret
mov
adc
inc
lcall
popa
xchg
cmc
adc
mov
push
gs
mov
popa
scas
lret
push
and
xor
loope
jg
outsl
push
test
lds
pop
adc
and
mov
es
or
js
xchg
not
jge
push
cld
and
sbb
sub
mov
out
mov
or
or
add
and
imul
insb
adc
icebp
nop
jbe
clc
addr16
jmp
push
dec
xor
in
inc
movsl
xchg
add
sub
sti
into
mov
cs
xor
cwtl
int3
xor
pusha
mov
scas
loope
or
xlat
shl
fwait
dec
lods
les
fidivs
outsb
cltd
loope
fiadds
pop
mov
xchg
iret
sbb
and
push
imulb
and
mov
push
shlb
mov
jle
mov
int
sbb
and
jp
mov
dec
repnz
loop
or
out
or
addr16
movsb
lcall
or
in
jmp
mov
adc
int3
xchg
pushf
aaa
idiv
fcomi
cs
jle
test
jge
xchg
jp
nop
inc
ret
movsl
outsb
sbb
adc
and
test
add
cmp
int3
cmp
mov
dec
cmp
xlat
mov
stos
push
push
xlat
mov
inc
mov
ret
les
push
cwtl
push
pop
and
jecxz
ret
clc
rcrl
inc
pop
push
add
cmp
imulb
insl
enter
stc
jno
inc
add
out
dec
dec
inc
add
push
ret
or
lahf
es
aas
test
loopne
mov
ja
pop
andb
or
dec
or
lcall
shrl
xchg
enter
push
xor
lods
mov
pop
in
push
lods
sub
pushf
out
test
inc
xchg
movsl
orl
mov
mov
rolb
stos
imul
mov
push
mov
and
dec
sub
adc
adc
add
notb
std
es
jge
psubusw
or
xchg
ret
mov
test
repz
enter
and
jbe
test
adc
clc
movsl
mov
test
jae
stc
xchg
ljmp
and
mov
testb
xchg
sub
sub
loope
in
fs
mov
push
cli
insl
dec
mov
aad
dec
cmp
push
mov
adc
stos
mov
push
inc
cmp
sbb
fldcw
sub
adc
sahf
int
movsb
lods
sbb
lods
test
decl
popf
and
sub
insb
inc
gs
push
add
xor
sbb
jle
pushf
repz
insl
lret
gs
sbb
ja
xchg
mov
cltd
mov
cmp
or
iret
cmp
cmpl
jae
out
data16
push
cmp
js
mov
popf
push
push
add
sub
insl
cmpsl
xchg
call
push
pushf
popa
aam
cmp
or
shlb
mov
aam
and
movsl
jmp
imul
les
adc
and
in
scas
pushf
and
inc
test
push
out
jp
imul
and
dec
dec
repnz
xchg
lahf
push
ret
mov
mov
push
stc
dec
imul
sbb
scas
mov
jb
dec
add
addb
or
ss
jb
lahf
divl
xchg
fidivrs
sbb
ja
dec
sub
movsb
cltd
dec
test
outsb
scas
fimuls
xchg
fldt
mov
cmp
mov
mov
and
fwait
add
pusha
negl
jns
adc
cltd
xchg
xor
stos
lcall
bound
dec
popa
insl
idivl
push
add
sub
sbb
sub
ret
or
fs
js
sbb
mov
mov
sarl
pop
enter
sbb
sub
outsl
and
pop
dec
ds
xor
jp
push
mov
out
xchg
ficomps
mov
in
outsb
or
mov
cmp
lods
inc
push
in
stc
xchg
push
push
popa
cmp
andnps
mov
jae
cmp
mov
push
jecxz
loop
mov
sarl
movsb
in
jmp
lcall
out
xchg
cmp
xor
pop
sbb
inc
iret
aas
jns
loopne
push
outsb
adc
xchg
xor
xor
stos
sbb
ret
lods
cmp
mov
xchg
dec
mov
mov
mov
pop
fildl
mov
xor
rclb
mov
inc
dec
rolb
sub
mov
sub
std
das
lcall
loop
sub
lret
xchg
sbb
inc
push
add
mov
sahf
mov
test
out
daa
xchg
xchg
jg
je
mulb
sbb
test
dec
rorl
dec
lret
and
and
dec
push
sub
sub
or
arpl
push
movsb
jae
imul
dec
mov
mov
nop
cwtl
addb
cmp
scas
xor
iret
je
jb
dec
jnp
jp
mov
jno
xor
pushf
and
sub
std
add
dec
ss
mov
or
xor
cmp
cli
mov
movsb
or
dec
inc
push
lret
cmp
pop
test
lods
pop
sub
or
cltd
jb
roll
fstps
mov
imul
outsb
fisubs
lea
or
adc
jg
jecxz
sub
adc
mov
dec
mov
inc
inc
jecxz
add
xor
and
js
into
push
xchg
add
imul
jmp
pop
or
or
scas
repnz
and
ret
aas
pop
inc
aam
js
pop
adcb
push
or
xorb
and
pop
add
scas
test
pop
test
call
add
in
lret
lcall
inc
xchg
mov
push
out
mov
js
repnz
xor
test
push
pop
mov
or
out
dec
push
cmp
mov
dec
cmp
sub
push
testl
dec
cld
xor
in
loopne
or
add
mov
mov
jns
out
mov
jb
and
pop
lods
cmpsb
cmp
divb
call
pop
mov
call
in
out
cld
xadd
add
inc
lock
sub
lock
fldcw
and
scas
sub
leave
cmc
loop
lods
outsb
mov
scas
jnp
orb
xchg
shll
mov
in
sar
or
push
popf
xlat
imul
pop
dec
mov
cmp
or
dec
sbb
dec
pop
push
mov
loop
js
add
cs
jnp
sbb
push
mov
imul
in
sbb
push
inc
add
movsl
dec
fmull
aaa
mov
inc
sahf
jmp
ret
push
in
adc
insl
and
imul
pushw
mov
out
mov
mov
sbb
cmp
sub
and
sbb
add
lds
mov
movsb
add
cmpsl
mov
scas
xchg
pop
rorb
nop
add
push
movsl
fbld
les
hlt
clc
push
xor
nop
or
jae
lods
or
imul
rcrb
stc
mov
loope
das
clc
shll
mov
aad
cli
repnz
fwait
pop
xor
dec
and
adc
push
mov
sub
push
rcll
pop
ret
pop
mov
and
mov
rcll
lret
and
adc
adc
dec
sbb
inc
repz
jp
rcr
and
repz
in
sub
rcr
cmc
xchg
and
outsb
lods
in
mov
pop
cmpsl
adc
xor
push
lret
lock
scas
add
sub
insl
stos
fstp
xchg
inc
mov
cmp
jnp
out
mulb
fldenv
jae
xchg
outsb
mov
and
jle,pn
pop
pushf
loope
jle
mov
push
dec
pop
rcll
sub
lret
xchg
jl
test
rorb
add
cs
push
dec
es
loop
icebp
mov
cwtl
loope
int
sub
jo
fbstp
sahf
icebp
fbld
imul
mov
jg
lahf
or
jo
sbb
push
sbb
cmp
orl
int
push
arpl
sub
xor
cmp
xchg
cli
rcr
adc
pop
jle
test
notl
inc
adc
shrb
mov
push
pop
repnz
xchg
addr16
mov
call
inc
adc
cmp
outsb
call
out
xor
pop
inc
ja
push
sub
pop
ficompl
push
test
mov
stos
out
in
les
iret
cmpb
dec
or
mov
sub
loopne
lods
cld
loope
dec
xor
sti
and
push
or
insl
in
dec
xchg
arpl
rcrl
mov
push
nop
fs
cmpsl
mov
ficompl
subl
ds
xor
sub
sub
enter
movsl
pop
cmp
and
lods
mov
dec
pop
lahf
cmc
xchg
stos
mov
dec
loop
call
or
icebp
mov
ss
mov
push
outsb
cltd
jecxz
ret
repnz
xchg
cmpsl
add
iret
add
sub
pop
out
stos
jge
cwtl
pop
xchg
dec
fistl
shl
xor
cld
movsb
mov
aaa
dec
pop
xchg
and
pop
test
jns
insb
adc
fwait
int3
stos
mov
jno
outsb
jbe
dec
mov
adc
pop
hlt
outsb
and
mov
jne
arpl
into
sti
dec
and
cltd
jae
cbtw
fwait
arpl
add
das
xchg
gs
xor
sti
xlat
push
inc
or
pop
scas
fdivs
loopne
inc
mov
sbb
popa
add
xchg
insb
xchg
sbb
int
int
js
rcl
aaa
and
inc
push
or
dec
loopne
stos
jb
sbb
addr16
pushl
mov
sub
pop
jmp
jnp
mov
xor
iret
leave
adc
dec
mov
mov
sub
pop
or
cld
cs
in
mov
push
pushf
mov
insb
sbb
fldcw
push
mov
ja
mov
lret
movsl
sub
mov
sub
xor
pop
mov
pop
loope
xchg
jae
mov
outsl
sahf
test
sbb
push
and
push
push
cld
ret
mov
cld
mov
adc
pop
aas
test
les
inc
sarb
mov
shrl
add
iret
cmp
inc
sbb
jg
pop
sahf
and
or
xor
into
shl
xchg
neg
into
pusha
lock
jl
insl
incl
idivl
push
lods
mov
add
jns
adc
idivl
jno
and
daa
lcall
cmova
push
sbb
mov
push
sahf
push
out
xor
sti
pop
and
cmp
leave
cmp
imul
jecxz
dec
lock
sar
ss
cmpb
cltd
lods
mov
lret
and
shl
jge
pop
xor
push
sub
jecxz
and
inc
pop
cli
popl
add
lret
pop
shr
dec
outsl
push
out
adc
nop
push
fldt
leave
mov
push
movsl
loop
xlat
cmp
mov
cmp
sbb
int3
in
mov
and
insl
add
pop
jnp
mov
into
cmpsb
inc
jge
sbb
and
inc
loop
sub
xchg
cmp
inc
cmp
cmc
loope
mov
pop
fldcw
insb
sbb
in
mov
xchg
and
push
lcall
hlt
in
lods
mov
sbb
nop
ret
push
jl
inc
or
cmp
sbb
cld
dec
mov
sub
fisubl
or
insb
inc
or
cs
gs
daa
add
test
test
mov
xchg
ret
loop
mov
js
movsl
enter
pusha
mov
jb
xor
stc
pcmpgtw
cmpsb
jmp
adc
stos
fwait
lods
push
or
cmp
ud1
jecxz
das
ret
mov
adc
rolb
mov
jbe
addb
ret
imul
add
and
mov
mov
inc
pop
push
jmp
and
jmp
scas
pop
mov
mov
sbb
mov
sbb
fsubrs
pushf
adc
sbb
aam
adc
imul
jae
cli
popf
push
rcll
and
mov
aaa
sub
mov
mov
adc
sbb
xchg
xchg
adc
fstps
dec
insl
test
mov
push
pop
iret
outsl
mov
xchg
aad
inc
push
fwait
lds
fwait
icebp
ficoml
aam
inc
hlt
lret
lcall
mov
inc
mov
dec
pop
test
mov
dec
aaa
push
push
stos
add
adc
ret
xchg
pop
jns
mov
xchg
popf
or
mov
xor
mov
ljmp
sbb
xchg
or
mov
xchg
cmp
cmp
stos
fisubrs
into
in
cmp
add
add
sub
fdivrs
cmp
lock
jne
jno
in
push
std
inc
lret
cmp
ljmp
fnstenv
jnp
ret
add
jl
int3
fstps
xor
adc
rcrl
aaa
call
in
xlat
cmovle
aad
sub
xor
test
pop
fcomps
xchg
jg
scas
mov
inc
pop
loopne
popf
aas
pop
push
fs
lahf
dec
jl
mov
popf
adc
pop
movsb
mov
inc
scas
cmc
cmp
mov
out
iret
mov
test
rcrl
jl
movsl
fs
adc
add
insl
adcb
xor
incl
jo
stos
repnz
int3
adc
pop
int
mov
aam
adc
pushf
pop
in
push
mov
cld
dec
jle
cmp
pop
imul
dec
jns
mov
jb
les
daa
mov
loop
lods
mov
je
sub
lret
not
xchg
pop
jne
js
push
sti
in
push
shlb
into
push
repnz
add
rcll
popa
test
lret
xchg
pop
cmp
mov
cld
shlb
mov
add
inc
inc
jnp
or
mov
xchg
sub
push
pop
cmpsl
xchg
jecxz
je
xchg
add
or
mov
insb
fsubrl
adcb
or
rcl
rolb
sub
pop
scas
mov
and
daa
icebp
clc
aad
jne
mov
enter
mov
push
push
lret
iret
ljmp
in
push
mov
pop
pop
mov
std
sub
lret
push
jnp
aaa
jecxz
adc
jb
out
sbb
inc
les
ja
sti
jl
sub
sbb
pop
loop
repnz
es
in
inc
mov
pushf
push
and
xor
ss
ret
add
mov
subl
mov
and
add
decb
scas
mov
in
adc
in
dec
adc
xchg
lahf
dec
inc
in
xlat
fs
cmpl
dec
sub
fnstcw
lods
add
bound
cwtl
push
clc
push
es
or
es
test
sbb
aam
fwait
inc
icebp
pop
call
add
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
test
scas
add
add
lock
push
ja
add
cmp
adc
stos
push
adc
pop
sub
mov
bound
and
mov
inc
test
stc
lds
dec
insl
cmp
mov
jmp
loopne
or
aam
and
jo
or
popa
push
or
jbe
ds
cld
add
nop
iret
int3
lcall
jmp
mov
mov
subl
and
cmpsb
push
dec
dec
rcll
mov
dec
lahf
push
in
arpl
jp
xchg
hlt
mov
mov
addl
add
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
dec
clc
movl
aad
pop
mov
test
arpl
sbb
sub
ss
mov
call
sti
sub
jp
sarl
lea
cwtl
fistpll
jge
int
cmp
adc
rol
ror
cmp
ja
xchg
lcall
cwtl
sub
fucomip
rol
lods
imul
subb
push
push
push
lods
lds
out
imul
rcrl
scas
in
xchg
test
mov
cld
or
mov
lcall
pop
cs
dec
add
pop
or
and
add
sub
sub
addb
xchg
add
fcom
add
mov
insb
mov
adc
add
mov
ret
pusha
mov
xlat
cld
in
movl
out
pop
es
and
lods
pop
stc
rorb
test
int3
jo
push
xchg
outsl
pop
xorl
xor
sub
inc
sti
pushf
cmc
subl
iret
jmp
mov
subl
sub
cmp
shlb
and
sbb
mov
push
add
dec
xor
sbb
out
or
jmp
ljmp
das
and
aam
aam
ljmp
je
jae
cld
stos
mov
add
add
fsubs
mov
sti
aad
sub
xor
arpl
inc
mov
dec
jecxz
adc
scas
or
mov
sbb
ja
pop
mov
les
and
mov
test
jmp
shll
mov
scas
pop
lds
mov
mov
cmpsl
aad
sub
es
cmp
jge
inc
and
mov
imulb
xor
mov
icebp
rcll
arpl
xor
jmp
add
mov
sti
cmpsl
mov
dec
mov
mov
add
mov
or
sti
mulb
lods
mov
xor
mov
mov
mov
in
push
pop
adc
test
rorb
sub
in
mov
test
shll
sti
das
xor
addr16
xchg
and
mov
fcmovnbe
cwtl
test
inc
and
out
je
cmp
adc
ss
idivl
xchg
in
loope
dec
jns
xor
and
out
mov
pop
mov
jnp
push
popa
ljmp
pop
cmp
and
adc
push
out
add
out
lods
cmp
stc
stc
sub
aam
adc
add
add
clc
pop
sbb
sub
aas
add
inc
dec
je
adc
sbb
sbb
cmp
inc
std
dec
push
sub
jmp
imul
nop
push
add
int3
or
psubusb
push
bound
sar
and
mov
lahf
stos
jg
outsb
jg
jns
jl
xorl
and
sbb
stos
and
xor
add
mov
pop
add
outsl
pusha
and
add
lods
mov
test
cmp
sarl
and
xor
lds
int3
stos
in
cmpsb
xor
add
push
xor
gs
aaa
push
test
add
scas
add
add
mov
pusha
inc
jno
mov
in
in
stos
lret
push
addr16
xchg
add
pop
xchg
lock
lcall
cmc
testl
or
push
pop
mov
ljmp
mov
fnstcw
lret
ret
cwtl
xchg
jmp
xchg
or
mov
decb
lock
lock
mov
mov
xor
xor
sub
sub
dec
or
dec
mov
daa
mov
sub
out
das
adc
outsb
adc
mov
add
sub
das
jle
jg
imul
push
add
int
stos
add
scas
add
add
and
lock
ret
xchg
movsl
outsb
xchg
lds
cmp
outsb
push
lcall
push
in
ret
test
push
dec
imul
sbb
rclb
xor
pop
aaa
lret
inc
mov
and
sub
cmpsb
outsl
loope
push
outsb
lcall
dec
sbb
movsl
pushf
dec
cmp
adcb
int3
mov
bound
lret
push
into
sti
push
xchg
adc
dec
fstl
roll
cmp
jb
add
mov
xchg
cmp
es
out
adc
add
addr16
and
mov
mov
mulb
insl
lods
add
scas
add
add
cmpsb
cmp
xor
arpl
sbb
mov
sub
repz
shlb
jmp
ljmp
lock
shrl
imul
dec
daa
mov
inc
cs
adc
xor
bound
movl
call
out
cmpsl
adc
xor
jmp
enter
lcall
fisttpl
dec
addr16
sti
jg
inc
insl
dec
mov
lcall
lret
xor
push
lods
xchg
call
sub
sbb
pushf
mov
add
add
add
ret
or
ret
lods
sub
mov
movsl
sbb
add
pop
adc
bnd
addr16
and
jnp
and
sbb
test
aam
inc
std
xchg
pop
and
cmc
out
lret
ficoms
push
xchg
jle
pop
xlat
adc
fisttps
mov
push
adc
jo
lds
or
daa
jl
sahf
xchg
gs
mov
xor
aas
sub
movsb
gs
jae
stos
jnp
sub
sarb
imull
insl
addr16
or
dec
inc
ror
push
inc
lods
test
mov
pop
fmul
nop
mov
out
int3
mov
insl
pop
rol
pop
scas
sub
nop
add
fld
add
ror
outsl
clc
shlb
ftst
leave
lods
add
scas
add
add
aas
aas
ljmp
jge
inc
sub
aaa
int3
inc
fldcw
out
arpl
cld
dec
inc
pop
xchg
mov
ds
leave
dec
orl
leave
inc
ljmp
mov
xor
js
dec
or
ss
jmp
ret
aam
inc
xchg
add
aad
xchg
mov
enter
nop
data16
out
mov
into
out
xlat
sbb
les
into
add
in
push
stc
outsb
ret
ja
dec
or
cs
sahf
jmp
ss
shll
dec
hlt
loopne
sub
lds
ret
rcrb
pop
mov
pop
movsl
pop
dec
repnz
popa
pop
lock
out
repz
mov
ret
in
sbb
insl
les
add
adc
cli
and
icebp
push
in
loop
inc
inc
adc
out
or
add
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
loop
push
bound
add
add
mov
test
mov
mov
xchg
push
jle
mov
cmc
lods
mov
loope
out
adc
pop
xchg
push
cltd
push
jnp
orl
jo
ljmp
mov
sbb
sub
fs
mov
orb
mov
test
gs
fdivs
xchg
jge
inc
movsl
cli
mov
or
sbb
in
and
jge
enter
lahf
aaa
jmp
xchg
or
cltd
push
out
jno
lea
sub
outsl
jle
ljmp
ja
adc
outsl
mov
xchg
push
das
sbb
add
mov
push
mov
xlat
push
outsl
or
ja
xchg
add
scas
add
add
sbb
xchg
push
xlat
inc
jb
stos
mov
push
mov
pop
mov
mov
pop
or
sahf
dec
xchg
loope
bsr
or
out
sbb
frstor
gs
and
dec
dec
leave
sti
outsb
cmc
gs
jle
jl
test
cmp
movsl
adc
lret
in
inc
xchg
push
scas
push
xor
sahf
lds
in
scas
mov
xor
jl
push
xor
pop
lahf
mov
aas
aas
fsubr
lret
mov
cwtl
cmpsb
dec
fistpll
cmp
leave
jl
sbb
pop
in
sub
mov
pop
fdiv
or
sbb
xchg
mulps
push
fwait
sbb
mov
pop
repnz
mov
jg
ljmp
push
mov
cwtl
add
scas
add
add
movb
adc
pop
fcoms
incl
sbb
das
pop
push
jge
mov
into
mov
es
repz
std
sbb
repnz
loopne
push
xor
icebp
cltd
xchg
inc
lcall
scas
pop
push
cmp
xor
adc
pop
xchg
mov
jge
mov
js
pop
and
sub
inc
or
addr16
or
psrad
mov
sub
xchg
aas
cmpl
ret
cmpsb
push
dec
mov
or
sbb
out
pop
aas
mov
push
cmc
bound
add
cmp
cmp
in
fimuls
cmp
mov
add
scas
add
add
shlb
pop
and
push
mov
adc
pop
inc
xor
jmp
xlat
in
addps
push
hlt
jb
and
push
jge
pop
faddl
loope
mov
mov
mov
stos
test
les
sti
inc
inc
nop
hlt
shlb
into
cmpl
mov
fbld
cmpsb
popf
and
add
test
mov
add
popf
test
sbb
mov
push
mov
ljmp
jmp
sbb
shrb
pop
fs
sub
leave
into
fdivr
push
fistpll
sldt
fnstenv
std
negb
sub
icebp
negl
add
or
lock
fldcw
xchg
xor
nop
mov
dec
fs
test
inc
jo
inc
mov
lock
mov
xchg
add
and
jl
sti
lret
daa
aam
ficompl
pop
inc
das
xchg
add
cltd
int
adc
addb
mov
test
mov
dec
mov
xor
push
pop
and
xchg
lret
add
mov
pop
mov
icebp
icebp
fsubrl
mov
stc
insl
loope
hlt
pop
jo
cmp
push
daa
sub
test
aas
loope
loopne
fwait
xor
mov
xchg
sub
add
xor
jb
inc
mov
and
lcall
int3
outsb
shlb
jbe
inc
inc
aad
movsl
in
jmp
ljmp
and
mov
shrl
aad
ss
jae
lock
out
xorb
pop
pusha
adc
push
mov
aas
int3
fcmovnb
rcrb
ja
arpl
sahf
sub
fstpt
push
loop
sub
loopne
aad
xor
sbb
int
xor
repnz
push
mov
sbb
stos
dec
sti
out
and
xchg
ljmp
ss
pushf
jbe
ds
ret
sti
or
shlb
stos
iret
sbb
rolb
mov
mov
add
add
dec
in
fwait
scas
fdiv
pop
sub
xor
lcall
xchg
adc
mov
fnstsw
pop
mov
xcrypt-ofb
cmpsl
outsl
ja
push
outsb
loop
sbb
cmc
dec
mov
adc
dec
mov
jmp
adc
addr16
cwtl
fcomps
and
or
add
lret
out
hlt
out
or
add
bound
or
adc
and
cmp
cli
inc
fldcw
mov
test
or
mov
lock
lcall
sub
test
out
ret
mov
push
femms
push
sbb
cmpsb
mov
cmc
loope
add
insl
roll
and
add
push
add
xor
jb
insl
xor
and
outsl
fwait
add
scas
add
add
aad
mov
add
imul
fisubrs
insl
cs
jecxz
and
adc
ret
jne
lea
xlat
cmp
lock
xchg
jmp
repz
test
stc
ret
test
mov
lret
subl
jae
fisttpl
sbb
inc
out
pop
ret
add
or
jp
loop
pop
mov
pop
pop
stos
jns
neg
xor
push
or
mov
xchg
shrb
or
btc
ret
mov
in
dec
adc
push
push
in
sbb
add
cmp
add
mov
out
pushf
cmp
pushf
add
scas
add
add
push
xchg
dec
push
lods
or
sbb
jo
sub
out
and
cmovnp
xchg
dec
call
xchg
pop
or
cmc
pop
xchg
inc
xchg
push
sbb
andb
sub
push
subb
and
jecxz
in
xchg
lahf
and
mov
test
or
imul
jo
lds
adc
sub
bound
push
movsb
and
decb
or
pop
inc
int3
or
daa
add
sbb
add
jmp
repz
fimull
push
test
add
scas
add
add
cmp
cli
or
mov
mov
adc
popa
pop
sbb
mov
ljmp
dec
jmp
mov
inc
imul
imul
icebp
std
faddp
ror
sub
mov
insb
push
dec
outsl
add
xchg
adc
lock
inc
outsb
pop
fistpl
test
mov
stos
jo
jno
lock
or
or
popf
add
xor
sub
data16
add
sti
mov
mov
inc
fsubl
push
popa
sbb
call
pushf
xchg
add
pop
inc
pop
iret
pop
aad
ss
dec
dec
or
jns
add
scas
add
add
dec
pop
sub
out
xchg
inc
scas
pop
test
add
enter
aad
or
mov
push
adc
pop
mov
bound
pop
cld
repnz
sub
sub
xchg
mov
nopl
bound
cmp
pop
inc
popf
fisubl
cltd
mov
movsl
push
lea
and
cmp
pop
test
push
sbb
int3
andl
xor
and
add
fs
insl
pop
jae
out
arpl
mov
addr16
cli
pop
stos
pop
jo
sbb
mov
adc
add
add
add
add
add
cld
mov
sahf
add
scas
add
add
and
cltd
stos
add
inc
push
adc
xchg
pop
jno
pushf
js
dec
push
fisubl
sub
pop
loopne
bound
adc
pop
or
push
punpckhwd
adc
jns,pt
pop
fdivs
jle
loopne
xor
imul
shll
mov
cmp
jl
andl
aaa
push
dec
pop
movsl
jg
test
scas
or
sbb
jl
add
mov
cld
or
mov
cmp
es
idivl
add
push
scas
imul
pop
in
mov
cmp
inc
fwait
or
add
lock
jle
repz
add
sahf
add
scas
add
add
aaa
nop
movl
out
lahf
in
sub
out
jge
fistpl
test
sbb
popa
clc
jbe
repnz
mov
sub
je
jno
sbb
pop
dec
adc
iret
ja
fwait
cmpsb
in
jg
mov
sbb
xchg
mov
fists
cs
popa
inc
adc
xlat
das
push
idivl
mov
loop
insb
adc
outsl
inc
fs
jae
pushf
mov
jns
js
mov
dec
cwtl
in
cld
inc
jne
test
pop
mov
inc
mov
test
pushf
cwtd
fnstsw
inc
inc
adc
mov
xchg
mov
add
add
add
add
adc
adc
mov
lds
sbbl
add
lds
mov
sub
outsb
enter
loop
inc
loop
sub
into
cwtl
dec
loop
aad
cmp
sarb
hlt
xchg
add
cltd
mov
pop
bound
es
hlt
or
pop
inc
aam
sbb
mov
orl
hlt
sbb
repz
cmp
loop
jg
push
imul
adc
scas
pop
repz
or
push
add
inc
push
mov
cmp
out
stc
push
mov
rcl
cmc
lret
mov
sbb
fnstcw
and
xchg
xchg
scas
popf
or
add
cmp
mov
shrb
lret
rdtsc
mov
add
inc
lcall
enter
or
arpl
dec
lcall
mov
jmp
add
cmp
jo
lods
les
dec
sub
xor
mov
pop
out
cli
stos
sahf
out
popf
xchg
loop
mov
sbb
dec
data16
jl
sub
shll
xchg
and
cmp
xchg
out
pop
sub
jne
or
and
push
cmovbe
clc
mov
js
scas
mov
popa
lods
or
ret
insl
xor
stos
cld
inc
push
push
mov
clc
xchg
or
adc
cmp
add
aam
push
lock
cmc
das
sbb
xchg
iret
shrl
aas
fbld
add
testl
or
cmc
and
gs
jae
cld
aas
pop
sub
ds
push
pop
mov
movhps
mov
sbb
lods
scas
mov
pop
setae
sub
pop
movsb
cwtl
insl
or
lds
popa
mov
out
jl
fdivl
repz
jmp
cmpsb
sub
dec
in
loop
aam
das
fadds
movsl
push
pop
test
adc
cmc
fbld
inc
aad
sti
add
sbb
xchg
outsb
cmpsl
dec
jo
mov
paddusb
jp
fs
mov
push
add
int
xchg
inc
cmc
sti
fildll
ss
mov
mov
add
imulb
stos
xchg
mov
fsubrl
imull
idivb
add
mov
movsb
sbb
jbe
fnstsw
lds
ja
sbb
stc
mov
xchg
rorb
pushf
push
cmp
mov
adc
xlat
jae
cwtl
push
out
test
std
test
sbb
movsb
inc
clc
andb
subb
sbb
stos
test
aaa
jns
aas
clc
sub
aaa
jbe
and
pop
inc
xchg
or
xchg
cmpsb
pop
in
imul
push
imul
add
cwtl
sbb
ljmp
call
xchg
mov
and
add
adc
testl
popa
aas
cmp
add
fnsave
sub
lret
movsb
pop
inc
popa
call
adc
xchg
pop
movsb
movl
cltd
aad
adc
movsl
mov
xchg
add
jecxz
mov
ja
cs
sbb
or
dec
mov
cmp
imul
std
stc
jno
in
shll
xchg
in
or
gs
in
arpl
shrl
insb
jne
aas
ret
push
repnz
popa
push
out
jmp
push
adc
mov
add
adc
repnz
call
aad
cmp
adc
inc
imul
jb
andb
add
daa
push
imul
dec
fcompl
aas
jmp
add
add
aas
cmpsl
movsb
and
add
and
xchg
mov
xor
mov
paddsw
sbb
jno
outsb
xor
adc
add
mov
popf
lods
mov
dec
stos
mov
call
fsub
aas
nop
cs
inc
adc
out
sti
data16
pushf
add
les
inc
or
es
popf
mov
cmpsl
add
sbb
js
jmp
loope
jl
lock
loopne
lock
sbb
jge
mov
xchg
sub
adc
fcomps
shl
in
inc
ret
aad
adc
and
popl
cmc
fdivr
push
aam
lahf
addb
add
add
add
add
jne
jg
clc
cs
push
jno
add
scas
add
add
outsl
dec
mov
addr16
out
arpl
dec
adc
fnstsw
data16
sub
and
dec
les
jb
push
ficoml
xchg
or
roll
sbb
mov
inc
stos
dec
xor
popl
int3
or
or
movzwl
mov
out
pop
std
fwait
push
lahf
fld1
xchg
dec
loopne
dec
dec
pop
jbe
sarb
outsb
adc
xor
mov
pop
aad
jno
adc
sub
push
ja
loope
cltd
pop
mov
jns
pop
jne
movsl
gs
mov
pop
push
lods
mov
movsb
push
loopne
test
or
dec
mov
je
lcall
add
scas
add
add
xor
lret
mov
push
xchg
sbb
adc
inc
and
sti
out
pop
pop
add
cmp
out
fbld
cmpsb
xor
pop
mov
cmp
xor
add
imulb
or
dec
fcompl
add
ds
and
fs
and
and
adc
inc
imul
xlat
xchg
cmp
mov
cli
rcrb
and
sub
mov
ljmp
inc
aad
stc
cmp
nop
andl
stos
imul
aaa
arpl
jae
fs
aad
push
es
mov
adc
add
push
mov
mov
xchg
adc
sub
add
scas
add
add
ds
dec
rcl
sbb
xchg
cld
clc
cmc
ss
jne
aad
jb
movsb
push
push
adcl
pop
fwait
rorb
dec
setno
push
ja
mov
out
int
mov
loopne
pop
inc
mov
pop
jbe
add
clc
out
dec
adc
sahf
out
push
pop
lahf
add
dec
sub
std
paddsb
dec
fs
jp
inc
pop
xor
pop
shlb
fidivs
mov
cltd
dec
scas
xchg
pop
adc
jle
ljmp
mov
xchg
sbb
sub
dec
pusha
nop
xor
insb
add
xchg
fcmovu
fisttps
push
dec
push
mov
add
sub
aas
into
inc
int
gs
popf
mov
int3
mov
sti
mov
cmc
fsubl
and
xchg
ret
lods
out
fnstsw
inc
pop
addr16
cs
test
cmc
jle
je
in
aad
popf
out
mov
cmc
add
loopne
loope
mov
jl
daa
daa
ret
mov
out
cmc
xor
xchg
jne
pop
mov
xchg
jnp
hlt
fnstsw
rcl
testl
push
mov
lcall
and
lods
sub
mov
and
jle
or
arpl
inc
mov
in
cmpsb
cmpsb
pop
loopne
call
add
jle
out
sbb
mov
lea
add
sarl
mov
pop
dec
jo
in
push
jle
call
cwtl
pusha
daa
cli
ds
mov
dec
mov
mov
test
mov
loop
int3
or
sub
push
xor
push
aam
or
push
insl
mov
ja
int
je
inc
jae
fnstsw
pop
cmp
push
bound
sbb
ss
mov
cli
sub
test
dec
fcompl
adc
jae
inc
xchg
loope
mov
std
iret
xor
popa
jb
scas
js
cmp
rcll
stos
loope
dec
cmp
xor
hlt
addb
jo
and
cmp
push
shl
xlat
lea
add
orb
xor
aaa
loop
dec
mov
das
dec
sbb
hlt
adc
push
adc
dec
sub
das
test
push
repz
push
cmpsb
arpl
lret
push
or
mov
and
fiadds
add
nop
sbb
pop
leave
mov
pop
push
cli
andb
stos
dec
mov
add
sbb
sti
mov
faddl
xchg
sbb
pop
cmpsb
add
xchg
cld
add
aam
or
xor
mov
dec
sbbb
or
icebp
and
ds
ljmp
add
xchg
nop
ffree
popf
aam
daa
sbb
scas
add
add
mov
ljmp
pop
imul
movsb
dec
loop
fiaddl
mov
into
add
mov
adc
sbb
out
push
add
and
popa
pop
mov
mov
pop
cmp
ljmp
gs
sub
imul
movsb
js
and
jnp
bound
and
jbe
stc
fs
fsubrp
xchg
jb
inc
iret
les
loop
pop
mov
cmp
adc
mov
adcb
xchg
mov
stos
repz
iret
pop
iret
icebp
fisttpl
stc
addr16
fldl
jge
popa
xor
add
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
or
lahf
jge
popl
add
jl
in
or
lahf
movsb
xor
js
push
cmp
jo
cmp
in
add
push
mov
out
xor
loop
cmp
mov
notb
in
mov
div
cmp
mov
jecxz
inc
out
out
add
jbe
enter
sbb
xor
adcl
test
jmp
dec
aaa
movsb
cmp
dec
in
shrl
xor
out
dec
jns
mov
fmull
les
mov
xchg
push
push
sbb
fcmovb
add
xor
into
mov
sub
out
cmpsl
add
loope
add
scas
add
add
addr16
test
outsl
mov
imul
mov
xchg
popa
fildl
sub
xor
notb
pop
mov
inc
ret
xchg
jl
ja,pn
push
xlat
pop
xor
clc
adc
subl
out
fcomps
dec
mov
nop
dec
sti
lret
pop
inc
clc
in
fimuls
into
rclb
stos
dec
xlat
xchg
xor
fdiv
push
stc
negl
or
jge
push
push
lahf
call
aad
jo
idivl
add
sbb
mov
xor
and
add
in
outsb
and
pop
mov
nop
add
scas
add
add
pop
int
inc
test
repz
aas
sub
insl
sbb
mov
bound
cmp
mov
shr
dec
mov
inc
mov
xor
popa
xchg
in
jg
sbb
fcomp
xchg
fwait
or
fstpl
push
cld
cmp
xor
cmp
xchg
cmc
in
cltd
out
fmulp
js
fsubl
call
push
bound
jl
andb
pop
hlt
xchg
jns
and
push
xchg
push
mov
bound
ljmp
lret
cwtl
jb
outsb
cmpsl
push
push
test
push
add
sbb
dec
es
arpl
add
mov
and
sub
scas
add
add
outsl
adc
push
pop
adc
adc
jnp
mov
pop
cmp
jbe
js
mov
xlat
add
fnstcw
les
xor
and
push
icebp
ret
hlt
movsb
insb
shll
adc
xchg
inc
mov
sub
jns
mov
mov
or
cmpsb
push
bound
sub
cmp
pop
nop
dec
js
add
add
pop
aaa
das
ja
js
dec
sti
inc
push
dec
push
xor
jnp
fidivl
loopne
mov
xchg
and
sub
dec
blcfill
in
ljmp
aas
xchg
into
rorb
addb
addl
add
stc
call
into
inc
mov
inc
add
mov
scas
add
add
movsl
pusha
push
push
cwtl
cltd
in
push
push
mov
inc
sti
arpl
push
dec
popf
mov
jge
dec
shrl
mov
lret
and
xor
pop
adc
dec
mov
sub
sub
dec
add
orb
lds
aas
adc
sbb
sbb
or
jb
pusha
push
mov
sub
xor
int3
or
pusha
push
movsl
cmc
subl
nop
loopne
dec
hlt
adc
cmpsb
xchg
pop
or
jne
pop
pop
push
hlt
xor
gs
mov
xor
sti
gs
mov
fisubrs
cwtl
sar
repz
pop
mov
add
cli
test
xchg
push
mov
push
scas
mov
popf
jp
sub
stc
jmp
push
ficompl
or
das
loope
xchg
out
adc
mov
fldcw
out
xchg
mov
adc
fcoml
cmpl
fidivl
push
sti
cmp
lods
mov
cmpsl
push
aad
inc
sub
adc
in
pop
xchg
jecxz
jbe
scas
inc
pop
xor
mov
mov
cmpsb
dec
xchg
sbb
mov
or
and
std
stos
and
insb
gs
cld
mov
pop
stc
pop
and
ffreep
add
inc
stc
fdivs
push
fwait
add
dec
aas
int3
sbb
out
loopne
lods
imul
push
inc
xchg
add
scas
add
add
mov
into
sub
jp
loopne
fwait
test
ret
call
movl
sbb
cmp
cli
mov
cmp
adc
mov
inc
fistps
jo
les
pushf
jp
lret
loope
aam
aaa
mov
jae
push
dec
mov
jl
sbb
push
bound
insl
sbb
mov
test
imulb
push
xor
dec
scas
repnz
add
or
mov
jmp
mov
dec
mov
jl
call
je
cwtl
arpl
dec
scas
inc
out
dec
adc
push
test
fildll
imul
lock
xchg
add
scas
add
add
sub
push
xor
add
movsl
out
rorl
lds
mov
jecxz
insl
mov
stos
ljmp
test
push
adc
adc
cs
sub
mov
ret
out
std
xor
aam
push
sbbl
sbb
rol
les
aam
inc
nop
bound
cltd
and
int3
push
cwtl
ffreep
clc
pushf
std
jge
jp
es
fwait
pmulhw
pop
adc
mov
cwtl
outsb
pop
stc
push
or
int
ret
dec
daa
sub
sbb
aaa
fcmovnu
dec
test
loopne
inc
insb
fisubs
inc
dec
cmc
jns
dec
xchg
xchg
sbb
scas
in
stos
push
mov
fwait
loope
sub
sarb
add
push
add
scas
add
add
negl
fadd
jbe
push
lods
xor
mov
mov
mov
popa
scas
or
xchg
in
mov
sbb
adc
and
jbe
inc
scas
sub
xor
call
lret
cmp
dec
orl
lret
sbb
mov
pop
imul
stos
hlt
call
or
repz
push
cmp
pop
syscall
out
into
dec
ret
out
mov
adc
or
pop
outsl
xlat
push
push
adc
lods
mov
cwtl
pop
push
sub
lret
ret
loop
push
js
mov
fbstp
cltd
das
cltd
stos
mov
add
add
add
add
divl
dec
cmp
dec
lods
cwtl
loop
push
xchg
add
scas
add
add
sub
sbb
shl
mov
lds
mov
stc
addr16
jecxz
xor
dec
nop
xor
in
fwait
sbb
out
test
jo
mov
jge
xor
nop
or
clc
test
negb
dec
insl
mov
loop
rclb
xchg
ss
fcmovne
jb
mov
or
fstpt
out
dec
sbb
shll
push
mov
push
push
push
enter
stos
push
mov
push
mov
jb
rcll
push
out
mov
xor
sti
pop
clc
pop
sbb
pop
ljmp
add
add
add
add
arpl
jge
mov
daa
out
or
call
add
mov
inc
sbb
pop
cli
lea
mov
rcll
push
inc
sbb
push
mov
xchg
inc
jecxz
sub
pop
push
and
lods
sub
cmp
dec
adc
mov
adc
icebp
or
arpl
out
xor
pop
and
xor
jns
cmp
mov
test
inc
in
outsb
ja
cmp
ljmp
cmp
out
scas
outsb
add
fs
cmc
rorb
mov
mov
adc
ja
sbb
pop
pop
sub
hlt
test
mov
repz
jne
push
lods
das
movsl
lock
lahf
outsb
xor
jge
push
es
dec
add
call
add
daa
ss
xor
and
xor
xchg
mov
add
dec
pop
cmpsb
inc
mov
rorb
repz
int3
test
fldcw
dec
pusha
cmc
mov
imul
mov
out
fwait
xorl
push
dec
jg
cs
jle
adc
mov
filds
push
es
mov
lret
daa
aas
aaa
push
stos
and
and
mov
jnp
out
push
mov
adc
out
movsb
inc
push
lock
lret
cmp
movsl
imul
test
ret
jle,pt
mov
cmp
das
sbb
sbb
lret
mov
xor
aam
lds
inc
test
das
mov
arpl
aaa
out
mul
aaa
cmc
xchg
lcall
inc
movsb
add
scas
add
add
cmpxchg
pop
ret
arpl
loop
enter
in
fs
fldt
stos
adc
jbe
jle
sbb
pop
and
data16
into
call
jns
in
ds
repnz
popa
pushf
test
sbbb
sub
pop
add
mov
push
mov
nop
mov
jbe
stc
mov
adc
and
adc
arpl
imul
inc
loopew
pop
mov
adc
dec
fwait
pop
xlat
loope
jo
or
js
outsb
int
cmp
jno
inc
cs
push
fdivl
add
mov
push
cmpl
add
aad
out
fucomip
ss
cmp
out
repnz
add
scas
add
add
jo
jle
pop
addr16
fstl
addr16
and
inc
push
aas
jae
inc
ret
imul
jae
dec
loope
fsubr
aas
cwtl
scas
push
cs
jmp
out
xchg
popf
mov
mov
dec
sub
cltd
mov
aas
pushf
jae
stos
scas
dec
out
add
pop
xor
push
lock
fwait
inc
scas
in
nop
sti
pop
jbe
adc
jnp
mov
mov
repz
mov
out
ret
adc
inc
movsb
mov
clc
arpl
les
jge
int
lahf
fistps
pushw
xchg
jle
fbld
mov
add
loopne
std
leave
pushf
xor
ljmp
add
add
add
in
cld
fisubrl
sbb
cs
mov
add
add
or
lret
mov
ret
and
loopne
adc
or
dec
fsubr
scas
das
jo
mov
aam
xchg
add
orl
rol
call
mov
stos
test
iret
jecxz
fsubrs
add
add
dec
and
dec
cmp
xchg
dec
mov
jbe
sub
jb
and
clc
xchg
adc
jmp
add
add
jg
scas
mov
insl
into
wrmsr
and
jno
mov
and
in
and
test
sub
mov
jl
or
add
cmp
paddsb
nop
rorl
add
scas
add
add
add
adc
out
faddl
inc
lahf
sub
cmp
xor
hlt
mov
sub
out
xor
divl
addb
mov
inc
ret
dec
divl
sub
ret
mov
xlat
mov
or
rcrl
repz
aam
into
lret
add
sbb
jnp
sub
sbb
stc
out
es
push
inc
add
xlat
or
cltd
nop
push
lea
sub
jmp
and
dec
jge
rcrb
sub
add
xchg
cmpl
push
loopne
lcall
add
scas
add
add
cli
xor
popf
or
cwtd
add
mov
mov
push
mov
pop
add
loopne
arpl
mov
mov
repz
mov
pop
fsts
fmull
lcall
icebp
jo
pop
arpl
cmc
hlt
ljmp
icebp
nop
mov
pop
pop
and
pop
stos
scas
mov
xor
xlat
dec
pop
mov
insb
aam
in
mov
fidivl
in
sub
pop
push
or
fldl
and
add
mov
and
dec
pop
rolb
aaa
inc
test
pop
out
pop
xlat
loop
adc
add
add
add
add
fincstp
shl
frstor
pop
dec
mov
pop
outsb
stos
cmpsl
add
scas
add
add
add
shl
das
sub
jle
popa
jne
dec
pop
out
mov
repz
jle
jecxz
pop
xchg
cmpsb
and
rorl
inc
add
push
fistpl
jmp
adc
xchg
mov
mov
pop
sbb
std
dec
push
mov
loope
sub
movsl
repz
xchg
jge
out
dec
aas
in
and
insb
dec
daa
push
bound
mov
repnz
repnz
xchg
fsts
xchg
push
into
enter
ja
mov
pop
and
out
pop
lock
cwtl
add
ss
mov
std
add
outsl
mov
jmp
push
fcmovu
in
mov
add
scas
add
add
inc
lret
scas
pop
inc
popa
mov
aad
pop
loope
negl
enter
ret
or
inc
into
fistl
iret
iret
jbe
fwait
mov
mov
push
pop
fcmovnu
jecxz
push
ss
enter
mov
sub
in
and
shrl
rcrb
jno
add
dec
mov
test
jg
nop
push
je
sahf
mov
iret
jmp
add
adc
jne
ja
negl
notb
sbb
sub
int3
xchg
daa
js
fdivrp
jp
push
out
adc
hlt
jb
out
daa
or
imul
add
stc
sbb
inc
jecxz
mov
icebp
inc
das
popl
test
add
adc
mov
push
xchg
inc
dec
outsb
hlt
andb
cmpsl
xor
pop
dec
cli
mov
in
arpl
cmp
mov
fmulp
or
jno
push
shll
pop
mov
int3
shrl
adc
cmpsb
loop
jae
push
sbb
fcmovnb
lret
ds
jle
xor
or
addr16
sbb
sbb
test
jne
orb
dec
into
gs
aas
loop
out
fimull
mov
rcrb
inc
mov
cmp
ljmp
stos
int
fwait
mov
add
fcmovbe
popf
add
out
mov
xor
xor
mov
mov
icebp
and
cmp
mov
add
scas
add
add
lret
test
call
dec
xlat
fmull
xchg
xchg
gs
adc
xor
gs
pusha
pop
mov
rcrb
lods
xchg
or
adc
adc
popa
mov
iret
jle
pop
jns
dec
popf
push
cmp
pop
mov
data16
mov
xor
les
popa
inc
movsl
push
dec
gs
cli
and
jmp
test
pop
mov
repz
pop
iret
popa
and
push
test
adc
cmc
mov
and
arpl
inc
add
mov
jo
test
add
bound
mov
add
jb
jb
add
adc
repz
das
cli
fists
dec
es
adc
pop
add
scas
add
add
int3
imul
andb
push
std
cld
push
push
xor
rcll
cltd
mov
sub
xchg
cmpb
cwtl
inc
ret
loop
ret
sub
sbb
xor
or
mov
scas
neg
in
pop
testb
lcall
adc
sarl
clc
inc
nop
add
push
mov
popf
xlat
movsb
and
inc
into
sub
and
cmpsb
in
jne
addr16
rolb
in
dec
cmpb
das
mov
rorb
mov
test
mov
add
add
add
add
mov
push
adc
cwtl
out
pop
jge
mov
scas
add
add
push
arpl
mov
xchg
stos
adc
scas
sti
inc
int3
push
dec
sbb
or
int3
cmpsb
lea
add
cmp
aas
add
sub
push
enter
in
xor
cmc
fdivrs
pop
xor
push
inc
inc
jbe
jmp
lret
xchg
pusha
jmp
mov
sbb
int
xchg
in
push
and
push
in
test
repz
xchg
sbb
mov
adc
subl
jge
sub
pop
jge
pop
push
gs
mov
cmc
pop
add
xor
xor
es
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
