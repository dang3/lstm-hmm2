push
mov
sub
mov
mov
xorl
mov
jmp
jnp
jl
js
ja
stos
or
add
or
iret
add
or
outsb
jge
jno
xor
ret
dec
xchg
ss
mov
pop
sbb
push
inc
adc
repnz
ja
mov
repnz
dec
mov
mov
sub
cli
faddl
jne
dec
inc
jno
imul
jge
icebp
cmp
frstor
lods
dec
pop
push
adc
mov
fnstsw
outsb
repz
lods
fcmovb
mov
out
adc
cltd
movsb
fsubr
aad
movsl
sbb
stc
add
push
imul
in
inc
sub
enter
negl
sahf
add
in
in
adc
adc
negl
test
jo
xor
idivb
sbb
ds
stos
clc
addb
enter
mov
in
dec
in
or
add
cld
jp
pop
pop
or
pop
cmc
sahf
pop
or
imul
or
gs
out
cmpb
sbb
in
cltd
es
fwait
mov
sub
push
or
out
adc
out
push
xor
push
push
pop
scas
decb
push
jne
xchg
std
add
cs
ret
mov
cltd
in
je
dec
cwtl
movsl
or
jmp
shr
pop
xor
adc
and
sbb
jmp
fsubrl
cmp
jge
push
fbstp
icebp
sbb
push
or
adc
lods
pushw
jmp
lret
adc
dec
int
jno
movsl
jecxz
push
mov
fadds
or
shlb
pop
mov
insb
adc
mov
inc
lahf
inc
jo
jg
mov
dec
adc
ljmp
cmp
cmpsl
and
sbb
xchg
add
cmp
adc
test
mov
fs
xor
add
push
imul
jmp
mov
outsl
insb
pop
mov
popf
xchg
mov
daa
andl
jns
or
adc
popa
adc
mov
lods
lock
dec
das
jge
les
cld
in
lock
jl
and
aad
and
dec
push
hlt
faddp
mov
fisubl
sahf
in
and
test
jg
sbb
or
stc
rclb
popf
int
sbb
xor
jmp
push
add
push
daa
insl
xor
jecxz
or
push
jge
cmpl
cmc
ja
pop
test
scas
adc
ret
jno
inc
jmp
aad
jb
add
into
arpl
mov
ret
push
es
jp
push
adcl
push
lcall
jne
and
into
fwait
sbb
test
ds
pop
fcompl
test
aam
adc
and
xchg
fsubrl
push
idivl
js
sbb
lods
stc
test
shrl
incl
dec
and
ss
mov
lcall
adc
ret
outsl
iret
dec
adc
shlb
jne
cli
mov
or
xor
inc
aad
shr
in
imul
add
in
cmpb
mov
popf
xchg
mov
ror
sbb
pop
mov
cltd
pushf
add
xor
je
sub
or
in
scas
in
cmpsb
ret
adc
pop
out
jp
mov
mov
pop
repz
stc
mov
adc
push
fildll
add
lock
call
addl
cld
popa
repz
repnz
mov
jno
push
test
push
mov
jg
fs
mov
sub
jbe
push
negb
cmp
clc
pop
enter
movsl
dec
mov
push
inc
cmp
mov
jecxz
loope
or
mov
sub
sub
cmp
inc
mov
loopne
addr16
and
mov
xchg
outsl
in
sbb
lock
mov
jae
sbb
adc
inc
xor
ret
das
sbb
jle
push
jp
jo
lods
mov
iret
jge
sbb
stc
sbb
push
pop
cld
xor
pop
test
adc
mov
sti
sti
mov
popa
inc
dec
jno
mov
inc
rcrb
nop
mov
adc
push
cmpsl
inc
lret
roll
cltd
scas
icebp
xor
and
fdivrs
jns
adc
dec
or
mov
push
push
daa
xchg
into
and
dec
rcl
mov
cmpb
in
xlat
mov
popa
je
xor
mov
xlat
or
adc
mov
or
push
push
fisttpll
and
xchg
xor
stos
mov
inc
push
xlat
lods
decb
dec
dec
xor
ret
mov
jge
and
jns
xor
fdivp
rolb
xor
addl
push
mov
out
repnz
sub
or
sbb
sti
loopne
decw
leave
aad
in
jne
mov
or
sti
jae
js
jmp
xor
std
pop
test
mov
imul
divl
pop
mov
sbb
rcrl
stos
jecxz
push
lock
mov
stc
mov
cmp
lret
mov
mov
inc
adc
shrb
das
dec
je
ret
mov
rol
xchg
pop
inc
push
mov
mov
push
xor
iret
add
or
add
or
mov
shrb
ret
rcll
cmc
cld
jbe
jmp
push
push
loopne
or
and
or
addr16
int3
sti
daa
mov
xchg
aas
out
xor
ds
mov
arpl
adc
adcb
ret
mov
push
mov
test
imul
jl
adc
hlt
aaa
shrb
imul
push
mov
xchg
jmp
lret
push
aas
incl
outsb
adc
push
sub
push
mov
add
cmpb
cmp
lcall
in
dec
adc
stc
ret
cmpb
rcrl
xor
in
mov
cmpl
gs
cmp
out
sti
lock
fs
mov
rolb
adc
inc
pop
dec
loope
push
push
adc
pop
sbb
inc
decb
imul
mov
mov
jb
scas
lahf
test
movsb
hlt
jg
or
cmp
int3
push
mov
aaa
movl
cmp
pop
mov
pop
roll
pop
push
jmp
shlb
test
std
icebp
lret
add
cmovle
push
xchg
data16
jmp
pusha
dec
pop
mov
jnp
pop
cwtl
ret
sbb
mov
hlt
mov
push
push
and
in
sbb
je
dec
pop
data16
xor
es
mov
loop
or
in
dec
mov
add
sub
or
inc
xchg
cmp
cmp
sub
dec
push
jecxz
mov
fstpt
dec
outsl
mov
and
sub
out
mov
mov
dec
adc
or
dec
es
xor
stc
scas
stos
sbb
inc
inc
jnp
shl
ficoml
std
sarb
lret
and
std
aad
adc
das
xchg
wbinvd
out
in
dec
xchg
jb
cli
mov
out
lcall
movsb
jnp
xor
int
add
mov
xchg
lcall
loopne
loopne
xchg
dec
mov
testl
cwtl
or
add
mov
mov
test
rol
jno
imul
out
sbb
std
mov
shll
push
inc
jmp
popf
jle
sbb
cli
mov
sub
xchg
movsb
mov
push
xor
push
rol
pop
daa
sbb
fistps
lret
dec
popf
inc
adc
stos
jmp
mov
mov
or
pop
fs
shrb
push
scas
sub
cmp
pop
inc
add
pushf
sbb
out
push
shrl
inc
pop
jne
xchg
lods
xorl
inc
lods
cwtl
scas
clc
adc
fidivrl
xor
fs
stos
nopl
push
sbb
jecxz
xchg
jne
cmp
sbb
insb
icebp
popl
dec
sbb
outsb
xchg
pop
lods
subl
inc
inc
loop
cmp
into
int
cltd
jno
jb
je
das
sbb
jle
push
mov
jge
mov
pop
sub
push
out
std
xor
test
inc
fisubs
push
outsb
jne
sub
iret
lea
and
cwtl
inc
mov
mov
pop
cmp
push
pop
xchg
mov
jle
call
jo
sbb
loopne
inc
scas
mov
inc
loope
pop
adc
jnp
pop
ja
sbb
cld
gs
scas
test
and
xor
xor
cld
and
jb
push
cli
lock
icebp
cli
mov
dec
add
popa
inc
mov
mov
xlat
idivl
movsb
pop
xchg
jmp
stos
or
push
je
stos
xor
insb
add
into
sub
mov
and
call
xchg
dec
or
lods
clc
das
adc
int
or
jbe
pop
mov
imul
int3
bnd
xor
lea
cmp
mov
out
xchg
mov
adc
jecxz
cmpsb
add
mov
rcrl
ss
adc
data16
sbb
sbb
xor
loopne
mov
sub
inc
mov
daa
fadds
or
mov
ds
or
inc
cmp
test
push
movsb
mov
dec
leave
popa
xchg
mov
add
popa
repz
lcall
scas
sets
jbe
dec
lea
daa
push
ljmp
ljmp
lock
rorl
push
pusha
push
dec
push
loope
or
dec
sub
cmp
loope
fcompl
int3
or
outsl
mov
xor
mov
ficompl
ret
pop
pop
sets
incb
aad
shlb
sbb
insl
dec
xchg
mov
int
scas
std
repnz
rclb
std
stc
test
sub
and
xchg
negl
std
fs
in
jns
das
xchg
outsl
mov
cmp
lea
mov
and
pusha
out
jne
inc
popf
dec
movsl
add
add
cli
cmp
mov
and
push
std
into
or
aad
cmp
out
sub
jge
inc
mov
sbb
mov
xor
jmp
dec
jne
adc
test
xor
or
iret
add
or
loopne
adc
pop
jno
orb
pop
sub
loope
xchg
or
data16
or
xor
and
push
sub
push
xchg
jecxz
fs
lea
add
mov
fsubl
jae
popf
mov
xor
cmp
and
int
push
into
inc
ljmp
pushfw
test
arpl
mov
mov
enter
stos
das
ljmp
add
dec
rol
push
or
ja
negl
hlt
pop
push
push
or
out
popf
aaa
and
sub
xchg
cmp
sbb
bound
daa
add
jae
mov
adc
sub
stos
dec
scas
ljmp
mov
mov
inc
and
or
push
lods
cmp
pop
push
sub
cmp
nop
into
sub
jecxz
dec
push
movsl
iret
pop
sbb
pop
cmp
popa
ret
sahf
scas
sbb
pop
jmp
lods
shr
int3
mov
hlt
into
sub
leave
aam
adc
stc
mov
insl
sub
nop
call
xor
ja
mov
or
push
decb
dec
pop
in
addr16
test
dec
mov
mov
pop
mov
test
sub
lods
xchg
cmp
rorl
sub
test
pusha
loopne
jns
test
inc
stos
pop
lods
aaa
mov
and
or
jecxz
decb
fstpt
cmp
shl
sysret
popa
push
sbb
push
test
out
or
daa
jl
ret
outsb
sub
jmp
and
call
pop
dec
xchg
jno
shll
mov
cmp
and
stos
pop
inc
lcall
out
adc
mov
mov
or
adc
leave
mov
sti
lea
stc
sub
enter
fidivrl
lods
jo
and
mov
nop
jb
sbb
xlat
lods
out
and
out
pushl
ja
cli
inc
cmp
pop
or
jecxz
stc
pop
adc
cmp
xlat
jl
test
js
leave
or
loope
dec
adc
lock
push
in
mov
cmp
jmp
mov
add
int3
fwait
lds
lods
pop
mov
sarb
fs
scas
insb
jae
lahf
cli
add
jmp
loop
lea
fisubrs
les
into
in
cmpsl
or
movsl
jnp
mov
jmp
dec
pop
push
push
clc
or
or
pop
and
aaa
push
ss
stc
lods
lods
negl
stos
fdivs
mov
into
mov
push
jne
scas
pop
jb
mov
stc
pop
mov
daa
popa
hlt
pop
mov
xorb
and
jg
mov
mov
push
mov
pop
mov
cmc
mov
push
xlat
mov
mov
pop
ss
inc
push
pop
mov
jl
movsl
push
xor
pop
lret
scas
sbbl
out
je
mov
add
fadd
xor
sarb
fdivrp
cmc
dec
xchg
jle
and
push
jnp
inc
dec
cli
adc
ss
inc
int
stos
movsb
pop
sbb
pop
xchg
inc
cmpsb
je
lret
enter
push
fadd
fwait
or
push
ret
icebp
xchg
imul
fdivl
xorl
icebp
or
jo
mov
adc
aaa
shlb
jmp
outsb
stc
ffreep
stos
push
popf
mov
dec
int3
mov
pop
inc
jnp
repz
sahf
leave
mov
jl
push
ja
pop
mov
imul
outsb
cmc
test
jbe
jge
lods
lds
sbb
imul
sbb
dec
ret
mov
mov
shlb
ret
pop
mov
inc
mov
aam
popf
dec
and
xchg
mov
mov
mov
add
sbb
lret
sub
mov
dec
addb
inc
lahf
jp
aad
repz
fwait
hlt
maxps
pop
dec
sub
test
arpl
dec
les
int
xor
lahf
sub
mov
sbb
lcall
sahf
idivl
fsincos
or
mov
hlt
add
fdivl
aam
xor
test
dec
sbb
ret
outsl
out
sbb
gs
mov
xor
test
add
and
mov
sub
dec
iret
inc
int
mov
nop
lock
xlat
cld
iret
out
push
mov
lock
shll
lret
jno
ja
mov
jo
int3
bound
mov
inc
ljmp
aam
faddl
cmp
hlt
inc
xor
pop
out
xchg
imul
push
inc
and
push
cmpsl
mov
repz
fsubs
lock
cli
push
xor
push
pop
cwtl
das
cmp
insl
mov
add
adc
clc
ljmp
out
jg
int
in
lret
pop
shl
scas
movb
jnp
jg
push
pusha
test
or
loope
mov
or
adcl
cld
imul
mov
mov
fwait
cmpl
mov
mov
jmp
mov
movzwl
jne
call
xor
sbb
orl
sbb
and
sub
mov
mov
mov
adcl
mov
sub
mov
mov
sbb
cmpl
mov
mov
movl
jmp
movl
movl
jge
pushl
push
push
pushl
call
inc
notl
add
subl
sub
xor
sbbl
mov
orl
orl
xor
lea
mov
mov
sub
mov
adc
mov
orl
add
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
jbe
push
push
push
push
pushl
call
adcl
sbb
negl
and
adc
adc
subl
movl
shrd
xor
shr
cmpl
mov
movl
jmp
movl
jg
call
mov
adc
addl
subl
add
or
addl
and
add
adc
mov
sbb
mov
xor
xor
or
mov
movl
movl
movl
subl
movl
cmpl
movl
movl
jmp
movl
jbe
push
push
call
add
orl
adc
xorl
subl
movl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
push
call
adcl
andl
subl
adcl
addl
sbbl
orl
adc
movl
movl
or
movl
xor
xor
or
mov
movl
movl
movl
movl
cmpl
movl
movl
movl
jmp
movl
jbe
pushl
call
sbb
adcl
sbb
xorl
and
movl
cmpl
movl
movl
jmp
not
jl
pushl
push
pushl
call
sbb
andl
and
addl
sbbl
subl
or
movl
cmpl
mov
movl
mov
jmp
movl
jl
push
call
addl
addl
movl
sbbl
movl
orl
movl
sbb
movl
movzwl
sub
movl
movl
neg
movl
movl
xor
movl
cmpl
movl
movl
jmp
mov
mov
jbe
pushl
call
orl
xorl
or
addl
movl
adcl
and
movl
mov
adcl
shl
mov
adc
mov
mov
adcl
jmp
scas
mov
mov
jno
jne
sub
or
iret
add
or
adc
enter
cmp
ret
int
cltd
lds
jg
ja
or
add
inc
cmp
sub
push
movsb
xchg
lods
pop
inc
push
mov
out
insl
ret
push
lock
in
jns
xor
cmp
mov
push
xor
jnp
or
movups
push
data16
xlat
out
mov
xchg
cltd
into
negl
sarb
jnp
lds
jne
jno
ret
test
xchg
subb
jbe
in
popf
xchg
push
pop
jnp
xchg
lods
lods
dec
xchg
mov
mov
movsb
mov
xchg
xor
scas
cwtl
adc
ffreep
test
or
lret
xchg
lods
mov
mov
xchg
xchg
cltd
and
testb
jp
test
lret
xchg
push
mov
mov
push
cmp
bound
or
test
clc
sti
mov
lock
andb
push
lea
lods
stos
leave
jne
sbb
sti
fwait
jmp
inc
jl
cmpsl
daa
lods
cmp
jnp
jo
sub
or
pop
xorb
aas
jl
jne
inc
cs
or
xchg
popf
ja
and
mov
mov
pop
xor
loop
or
insl
or
jge
mov
push
iret
jecxz
sub
pop
add
test
push
lahf
or
out
lret
mov
or
cmp
fnstcw
in
sahf
xor
nop
loop
lods
aad
gs
cmp
gs
mov
imul
jle
mov
fsubl
adc
int
pop
push
cmpsl
xor
dec
inc
hlt
pop
mov
shlb
sar
jns
add
pushaw
aaa
inc
xchg
adc
jbe
cmpsl
outsl
scas
cmp
lods
xchg
mov
mov
add
movsl
pop
jno
cmp
inc
fs
inc
imul
fstpl
ja
dec
push
ror
sti
push
mov
sahf
fdivrl
fcomip
lret
ss
daa
popf
mov
cmp
fwait
lods
scas
out
push
leave
rcrb
jp
lds
repnz
dec
mov
cmpsb
or
dec
jge
mov
test
sub
mov
and
pop
nop
sbb
pushf
inc
lret
pop
push
imul
inc
mov
or
sbb
xorb
cld
push
mov
les
enter
jbe
lret
mov
in
xlat
dec
or
sbb
push
inc
dec
in
movsl
int3
bound
jecxz
fadds
test
les
xchg
cmp
xor
xchg
in
cld
jbe
sub
cmp
adc
mov
cli
in
xor
gs
ds
inc
pop
das
jnp
daa
xor
rcll
aaa
push
adc
adc
lea
jg
ljmp
pusha
data16
pop
inc
jmp
ss
nop
das
xor
push
push
sbb
fucomi
test
push
sub
in
call
or
imul
add
inc
fnstenv
add
fidivrs
cli
repnz
idiv
js
mov
stos
sahf
lds
dec
cmp
jecxz
outsb
aaa
rcl
add
call
sti
es
pop
mov
es
pop
ret
dec
icebp
xlat
insl
out
scas
subb
pop
cmp
rcr
je
call
mov
jmp
sbb
shl
inc
mov
or
stos
repnz
jbe
popf
in
loop
stc
sarl
pop
jnp
jae
xor
pop
sub
dec
je
lods
daa
mov
inc
lahf
repz
into
inc
cmp
or
out
xor
icebp
inc
popa
xchg
mov
out
or
xchg
mov
stos
clc
lea
repz
es
or
jge
orb
aad
js
cwtl
inc
adc
dec
sbb
lahf
add
push
repnz
repnz
mov
mov
sub
test
aaa
lret
sub
mov
push
mov
mov
cld
dec
dec
ret
rcll
sbb
leave
out
xchg
lea
jge
or
ds
adc
ljmp
inc
mov
cld
je
jp
or
mov
lods
lcall
and
lds
ljmp
out
or
cmp
or
jmp
out
ja
jbe
lcall
sahf
dec
fmuls
loopne
lds
push
sbbl
sbb
fld
out
xchg
ds
mov
push
adc
cmpsb
enter
insb
inc
cld
cmp
add
dec
inc
aam
ds
jge
into
clc
mov
out
mov
mov
jmp
push
or
sbb
and
mov
push
js
lods
and
xor
xor
sbb
cmpsb
cmpsl
loope
aas
xchg
and
xchg
xchg
cs
scas
lods
xor
dec
push
dec
lret
out
push
aam
mov
xchg
push
ss
and
pop
mov
mov
leave
pop
popa
mov
sbb
int3
mov
ss
arpl
scas
dec
pop
out
mov
dec
jecxz
ret
fistpl
out
pop
out
cld
cmp
mov
jbe
lock
es
arpl
inc
sub
fnstsw
mov
push
push
sbbl
push
push
push
call
adc
mov
movl
mov
movzbl
add
xor
jmp
push
xorl
cmpsb
mov
or
iret
add
or
or
cmp
sbb
ja
adc
and
pushf
push
and
or
mov
xor
or
mov
mov
jmp
insl
mov
xor
fwait
push
aad
pusha
mov
pop
sub
mov
jne
arpl
add
ret
pusha
and
pop
inc
lock
call
fwait
mov
popa
inc
ja
fwait
push
fs
sub
icebp
dec
sarb
jl
ds
inc
gs
scas
mov
pushf
stc
sbb
push
sub
scas
add
and
inc
jecxz
xor
xchg
sbb
cmpsl
scas
sbb
xchg
mov
sub
mov
xchg
loopne
push
sbb
jns
cmp
fistpll
scas
add
dec
ret
clc
push
jno
sbb
dec
xchg
addr16
pop
xchg
jo
cmp
rorl
xor
aad
jns
hlt
pop
cmp
dec
ds
into
add
cld
lss
jns
sub
dec
mov
out
ljmp
inc
mov
imul
push
xchg
ss
xchg
loope
adc
loop
add
sbb
add
sub
cmpsl
adc
jmp
adcb
dec
jl
ficomps
gs
or
iret
pop
jmp
jl
fmuls
paddusb
inc
out
sbb
jmp
popf
xor
std
pop
subl
push
push
cli
ret
push
mov
sti
adcb
and
testl
cwtl
lar
inc
cmc
roll
in
mov
adc
or
hlt
mov
mov
mov
lods
cs
lcall
aad
mov
push
pop
aaa
adc
xchg
mov
stc
nop
jae
mov
int
cmp
jp
test
ja
dec
imul
out
mov
mov
dec
andb
dec
or
jg
sbb
iret
leave
jae
js
pop
jns
mov
aam
mov
sbb
add
addl
divl
lea
mov
insl
pop
lcall
lahf
or
subl
in
jmp
sub
testb
imul
mov
in
adc
dec
add
jne
mov
dec
sub
mov
dec
shll
add
ret
or
cmp
dec
fwait
sbbb
push
mov
aaa
ss
dec
lcall
movups
sbb
insl
lret
sub
aad
cmp
orb
js
dec
lret
out
adc
pop
mov
jae
and
imul
inc
mov
les
xchg
pop
mov
dec
out
xchg
imul
loope
into
insb
shrl
dec
movsl
in
xor
stos
dec
cmp
aam
into
and
addr16
leave
rorb
rclb
popa
xor
in
in
cmp
shll
scas
pushf
jb
mov
sarl
stos
xchg
xorb
or
mov
cmp
test
mov
lock
test
gs
decb
xor
pop
popa
in
aad
or
cld
sbb
enter
xchg
pop
sbb
cmp
push
sbb
and
mov
fisttpl
and
test
xor
jo
in
cmp
cmp
jmp
dec
inc
pop
pop
sbb
mov
es
cmp
int
mov
into
xchg
mov
dec
ds
add
dec
fldenv
fwait
testb
mov
ja
fcomi
push
jne
and
cwtl
jge
insl
inc
sbb
mov
aad
out
push
mov
xlat
rcrl
loope
xlat
mov
hlt
shll
cmp
aas
jbe
sub
sbb
pushf
mov
pop
popa
je
pop
dec
pop
into
sub
xchg
xor
out
das
xlat
out
imul
push
push
sub
inc
cld
mov
lret
movsb
lds
cltd
push
aaa
loope
fstpt
out
imul
lcall
pop
cmp
mov
scas
add
mov
xchg
mov
fstps
test
setb
loope
mov
xchg
mov
mov
add
shrl
and
adc
xor
cmpsl
jl
xor
out
cli
xchg
inc
or
stos
mov
push
sbb
arpl
mov
aaa
ret
in
dec
roll
in
cltd
pop
std
add
add
in
xchg
icebp
vmovlpd
testl
dec
lds
shrl
bnd
insb
xchg
adc
jge
jae
sub
hlt
lock
dec
int3
in
rorl
xor
ds
iret
es
je
cmp
add
lea
inc
ja
ret
les
adc
std
andl
loopne
cmp
aam
addr16
mov
inc
lea
cmpsl
cmc
pop
std
push
inc
mov
xor
adc
fcmovne
mov
shlb
mov
ret
jle
outsl
lea
repnz
js
jecxz
mov
pop
lahf
lret
and
mov
mov
sub
adcl
mov
lea
xor
xor
or
jmp
enter
xor
mov
daa
fbld
mov
add
or
addr16
stos
dec
dec
mov
jl
out
lret
mov
xlat
cmp
cmp
subb
test
push
outsl
cmpsb
dec
jp
push
or
test
rcl
in
shlb
sub
imul
cmp
or
out
in
cld
fucomi
imul
mov
push
pop
hlt
or
add
daa
push
adcl
sysexit
sbb
and
push
popf
and
dec
pusha
adc
add
mov
sbb
mov
fbld
cmc
ror
cmp
add
and
jns
loop
es
in
or
incb
in
xchg
pop
call
pop
or
pop
aaa
dec
xchg
aad
out
dec
pop
iret
loope
inc
div
mov
push
cld
in
stos
push
test
orb
repz
int3
in
cmp
mov
and
rcrl
push
les
shll
sub
cmpsl
popf
lods
jl
popf
nop
jge
mov
sub
roll
lock
std
sahf
shlb
test
nop
pop
dec
and
cmpsl
pop
mull
cli
adc
push
int
push
or
sbb
dec
mov
aad
pop
sbbb
or
jns
cmp
add
or
and
enter
cltd
fwait
sarb
xor
inc
sub
lods
imul
leave
pop
mov
xchg
mov
lret
insb
das
dec
repnz
rcrl
dec
test
rol
mov
test
or
cs
dec
adc
stos
lds
loopne
hlt
sub
mov
call
cmp
fs
push
xchg
and
xchg
out
sbb
popf
in
dec
xor
pop
mov
aam
jns
or
in
das
loopne
ljmp
or
les
cld
mov
inc
addb
pushf
shlb
hlt
aas
sarb
in
jne
shll
stc
addr16
mov
pop
ds
add
inc
pop
add
inc
mov
sbb
or
outsb
sbb
or
dec
and
inc
in
js
stc
xchg
mov
dec
mov
mov
out
js
out
dec
and
sbb
or
mov
push
arpl
lea
pop
aaa
sbb
cmp
pusha
add
adc
jns
stos
xor
sub
into
jmp
aam
xor
shl
lods
mov
iret
pop
rclb
cltd
inc
negl
insb
sub
cmpsl
sbb
fdivr
rcrl
mov
or
cld
cltd
sub
das
mov
rcr
les
cs
or
scas
inc
and
xor
mov
jecxz
enter
repnz
shll
mov
or
test
shlw
mov
aad
xor
xchg
xchg
xchg
in
jp
sub
xchg
xchg
test
add
sub
in
mov
jno
cmp
daa
mov
mov
test
and
push
mov
fs
div
push
xchg
test
mov
xchg
xchg
in
mov
lea
sbb
ret
mov
fbld
mov
pusha
arpl
mov
nop
inc
jg
push
sub
cmp
fbld
cs
jb
push
or
or
repz
push
cmp
dec
movsb
add
out
loopne
cwtl
je
aas
dec
cltd
xchg
xchg
push
mov
stc
lret
adc
add
shll
sbb
popf
mov
jge
div
or
fwait
nop
adc
imul
jl
mov
inc
jl
mov
dec
idiv
mov
jg
fs
std
scas
push
jmp
or
mov
or
in
cmpsb
sub
mov
into
in
cmpsb
jp
addb
mov
cmp
or
xor
cltd
ljmp
mov
jl
cwtl
jecxz
nop
add
fsubl
daa
push
in
push
cld
or
ret
sahf
cld
mov
xchg
test
scas
mov
or
pop
insl
fnstcw
and
push
jno
mov
pusha
add
clc
jae
xor
mov
data16
xchg
sub
arpl
je
mov
mov
dec
xchg
jnp
adc
and
and
add
jl
rolb
scas
pop
jecxz
and
pop
popa
loope
popf
sbb
enter
xor
in
daa
jl
ds
pop
lods
sqrtps
dec
sub
je
jb
lcall
add
aaa
and
sub
es
pop
into
jmp
shrl
cmp
call
das
sub
out
loope
in
jae
sbb
pop
pop
mov
add
jno
inc
inc
clc
mov
xor
lret
mov
xor
pop
mov
adc
adc
adc
mov
mov
xchg
and
bound
sti
fcmovbe
test
mov
mov
mov
out
movsb
cmpsb
dec
fcmovne
jno
or
sub
out
pop
ficoml
mov
jle
cltd
sub
pop
rorl
clc
pushf
cs
inc
sub
pop
js
jbe
sbb
inc
in
dec
adc
adc
xchg
adc
pop
mov
mov
or
and
inc
mov
xorl
or
xor
movl
cmp
movl
jne
mov
adc
mov
xor
shrd
adc
jmp
cs
push
loopne
lahf
pop
and
or
jne
int3
or
iret
add
or
clc
add
fisubrl
aad
cmpsl
mov
sbb
movsb
push
xchg
lret
and
xor
int3
sub
add
mov
scas
cs
mov
xor
jno
shr
mov
and
fnstsw
or
ss
pop
jp
movsb
leave
psubusw
sbb
dec
scas
sbb
fsubr
jp
push
sahf
lods
es
fcmove
mov
ljmp
loop
insl
mov
test
cmpsb
pop
sub
jl
cmp
les
xchg
mov
lahf
cmp
das
decb
cmp
jle
enter
mov
dec
xchg
nop
andl
lret
fistpl
mov
add
and
xor
pushf
push
pushf
rorb
push
fdivrl
in
imul
fnstenv
and
xor
sub
adc
and
xor
cmpsb
js
out
jle
in
xchg
lods
mov
ret
hlt
inc
or
push
xor
lock
inc
ds
xchg
popa
or
pop
xor
inc
cltd
and
dec
les
inc
push
or
mov
mov
push
fdivrs
push
dec
cmpsb
test
push
cmp
addr16
add
mov
notl
and
and
push
push
jne
mov
in
mov
xor
jnp
fistps
sub
outsl
push
data16
dec
rorl
mov
push
jmp
fcom
fisttpll
ret
or
fists
lret
addr16
int3
in
ret
jl
int
push
sti
xchg
mov
stos
sahf
aam
inc
rcrl
mov
push
dec
jbe
sbb
sti
jl
pop
inc
outsl
sbb
pushw
mov
add
jmp
cli
movsl
xlat
fwait
icebp
lcall
divl
cmp
cmp
gs
lret
adc
pusha
fcomps
repz
xor
lret
add
test
test
cmc
adcl
xlat
dec
sub
mov
mov
mov
mov
sub
mov
in
mov
inc
das
repnz
imul
mov
cmp
push
pusha
mov
dec
pop
mov
shll
inc
loope
mov
pop
sub
cwtl
sbb
cmp
lahf
jg
or
sub
ror
fiaddl
shll
or
test
adc
mov
mov
cld
lea
arpl
push
aad
mov
addl
es
sahf
dec
cmpsl
dec
inc
push
cmp
cmp
pop
jl
xchg
and
sbbb
in
add
std
inc
mov
pop
push
popf
jecxz
or
pop
movsb
mov
xchg
xchg
adc
lahf
pop
push
inc
imull
jb
rorb
xchg
dec
xor
hlt
xor
rcrb
sub
mov
icebp
dec
sub
sbb
js
mov
call
xlat
mov
cld
fs
cmp
inc
pop
add
jp
pushf
aaa
mov
scas
test
mov
shlb
lcall
filds
push
pop
push
inc
ljmp
sub
test
cmp
push
bound
pop
or
and
mov
pop
mov
add
icebp
jp
outsb
cmp
ss
ss
sbb
jge
out
repz
lock
out
out
push
ds
sbb
fsubs
ja
pop
inc
mov
repnz
jb
push
pop
xor
dec
into
mov
mov
inc
xchg
shl
imul
mov
adc
inc
cmp
cmp
outsb
inc
aaa
ja
cmpl
lcall
popf
mov
or
mov
in
rclb
lret
stos
jmp
add
cltd
movsb
mov
iret
popa
rcll
aaa
lret
enter
jle
adc
int3
in
outsl
and
ret
mov
lock
xor
mov
push
push
sbb
pop
mov
jl
jl
jmpw
mov
push
rdmsr
test
push
les
loop
pop
addb
movsb
outsb
lahf
or
jns
mov
sbb
adcl
push
lods
movsl
int
ss
and
daa
nop
faddl
dec
popf
xor
rcll
test
xchg
inc
pop
roll
mov
imul
jns
movsb
int
sbb
xchg
inc
mov
jge
fcomi
cmp
add
adcb
popa
pop
mov
call
push
or
mov
push
inc
and
jge
dec
lea
mov
sbb
call
int
lret
inc
sarb
icebp
adc
jg
mov
and
mov
cmp
in
adc
push
loopne
push
cmp
adc
sub
out
fnstcw
out
dec
and
cmp
push
push
icebp
aaa
mov
scas
pop
push
mov
cmp
test
sbb
dec
fstpl
pop
ret
sbb
jle
or
imul
adc
xor
arpl
fnsave
aas
cmp
mov
sub
imul
mov
or
mov
shl
adcl
xor
xor
sbbl
or
mov
mov
cmp
jne
or
mov
sbb
mov
cmpl
mov
movl
movl
jmp
mov
jg
pushl
push
pushl
push
pushl
pushl
call
adc
xor
mov
or
adc
and
xor
movzwl
add
mov
mov
add
mov
incl
shrd
negl
mov
mov
and
mov
xor
shr
mov
xor
or
shl
cmpl
mov
mov
mov
movl
jmp
movl
jl
pushl
call
and
andl
sub
orl
sub
mov
subl
mov
mov
xor
add
subl
jmp
xchg
and
inc
xchg
arpl
addr16
or
iret
add
or
mov
sbb
xor
dec
test
testl
xadd
lods
loope
out
inc
mov
iret
inc
sbb
dec
jl
pop
test
cmc
push
in
xor
mov
fisttpll
lcall
je
out
in
lods
ja
inc
fmul
icebp
xor
jb
mov
and
xor
xchg
and
push
rorb
dec
push
jno
cmp
cmpsl
cmp
nop
mov
outsl
sbb
lods
xor
and
inc
mov
or
xchg
push
pusha
out
or
mov
cmpsl
loop
sbb
fdivl
inc
sbb
jno
cmp
lahf
in
test
push
sbb
xor
daa
mov
pop
push
sub
mov
enter
daa
shrb
pushf
jb
nop
out
je
xor
or
test
cmp
subb
fildl
lahf
cmp
ss
test
icebp
hlt
and
jmp
in
mov
sub
xchg
cli
popf
gs
jo
or
test
daa
sbb
push
lods
aam
sbb
repz
dec
fnstcw
mov
dec
repnz
cmpsl
movsb
dec
adc
insl
inc
adcl
mov
clc
push
add
or
roll
or
xlat
pop
cltd
adc
add
jp
lret
iret
jl
dec
jmp
sbb
push
inc
cwtl
inc
mov
push
inc
fcomip
incl
filds
xchg
inc
std
push
fstpl
pop
and
pop
andl
pop
and
or
and
sbb
fistps
mov
xchg
nop
cwtl
xchg
push
adc
clc
lcall
fucomip
cld
jge
mov
pop
mov
cmpsl
xchg
and
jecxz
mov
test
add
inc
xor
nop
fnstenv
mov
gs
int3
cmp
jae
sub
stc
test
iret
pop
xchg
jl
repz
dec
test
cmpsl
mov
cmpsb
push
pop
pop
mov
in
pop
or
mov
out
mov
sbb
fcompl
shr
adc
jb
ret
loopne
cmp
pushw
ja
stc
jae
or
mov
mov
pop
outsb
cmp
jecxz
mov
cmp
test
jno
xor
mov
xor
pusha
pop
sahf
scas
nop
sti
sar
mov
mov
ljmp
jmp
mov
sub
cmp
imul
into
adc
hlt
outsl
lea
ret
sbb
jns
cmc
inc
pop
jecxz
mov
push
fistps
mov
test
jmp
sbb
sub
jb
jmp
mov
dec
jge
fwait
in
or
add
jno
add
pushf
xchg
sub
rcll
in
add
jns
jns
and
stos
sub
int
mov
aaa
sub
xor
cmpsb
sub
sub
adcb
fdiv
jl
sbb
call
and
rolb
sbb
dec
inc
les
lds
dec
and
aam
push
arpl
inc
orb
push
jle
mov
out
int
arpl
mov
aam
aad
xor
ss
mov
ds
ja
mov
and
js
mov
cld
mov
icebp
sti
push
xchg
push
fwait
mov
hlt
loope
and
mov
in
jne
ror
in
and
nop
das
cmpsl
fnstcw
repz
jbe
inc
inc
cmp
jl
inc
inc
and
lds
push
jl
dec
jae
push
cmp
push
lret
cli
movsb
clc
cmpsb
sbb
jae
movsb
test
and
sarb
or
mov
imul
dec
cli
stos
scas
xchg
xadd
insb
fstp
enter
push
rcrl
cltd
loopew
ja
std
outsb
dec
and
xor
ja
inc
lods
mov
adcl
sub
fadd
xor
mov
out
adc
fwait
mov
mov
jno
addl
leave
movsl
xchg
dec
sbb
mov
hlt
pop
push
lret
iret
pushf
fs
into
dec
push
or
cltd
sbb
jbe
cmp
clc
or
add
je
sbb
mov
push
adc
and
aas
cmp
das
addr16
fwait
sub
mov
loope
stc
mov
mov
lcall
sbb
xor
in
outsb
icebp
out
or
xchg
push
movsl
pop
gs
adc
sub
call
aad
es
mov
push
ds
ds
or
fisttps
sub
loope
mov
or
add
pop
lahf
fdivrl
into
pop
and
ja
xchg
add
lret
inc
lcall
mov
je
xor
sbb
mov
xlat
mov
jns
aas
test
lcall
leave
fimuls
mov
sahf
add
adc
xchg
lret
test
mov
fidivrs
shll
imul
mov
pop
push
aad
fidivl
mov
mov
mov
shrd
movzbl
and
mov
shr
andl
mov
xorl
mov
xor
add
jmp
pop
push
mov
mov
pop
adc
sub
fidivl
or
pop
cltd
sub
aas
add
jg
daa
xorl
rcrl
in
jle
ror
dec
push
dec
les
vfmaddpd
and
mov
push
cmpsb
or
lods
roll
orl
fs
or
mov
sub
cltd
clc
test
xchg
test
inc
adc
inc
mov
mov
cmpsb
cli
fbstp
jae
or
test
inc
or
xor
lea
in
sbb
sahf
scas
repz
jne
fldt
pop
lret
out
in
adcb
pop
inc
jno
ficomps
mov
sbb
mov
jns
sbb
mov
jne
xchg
cmp
addl
test
arpl
sbb
fwait
int
jl
dec
popa
jmp
push
bnd
pop
dec
stos
pop
repz
frstor
sub
push
movsl
or
addr16
inc
mov
push
mov
mov
pop
loope
ds
xchg
mov
movsl
bound
rol
dec
adc
xlat
dec
mov
gs
sbb
sub
mov
sub
loopne
jnp
mov
sub
pop
and
cmp
shrb
inc
lods
mov
int
stos
xchg
cwtl
add
jno
jne
pusha
fcoml
adc
pop
jg
stc
enter
cmpsl
inc
stos
sti
pushw
aad
leave
repz
pop
loopne
jnp
cwtl
fcoml
push
lahf
jb
andb
rorb
jno
mov
xchg
pop
and
ljmp
add
xor
or
dec
jp
jae
faddl
jg
adc
aam
push
xchg
xlat
outsb
cwtl
xor
dec
inc
pop
xchg
xor
or
mov
shrl
leave
cmp
xlat
aaa
or
mov
pop
add
pop
and
bound
bound
jno
inc
xor
xor
sub
push
mov
adc
ds
ud2
mov
lea
push
ss
insb
xchg
adc
jo
xchg
pop
loope
jo
jno
mov
lcall
fdivrs
adc
sahf
fistps
negb
cmp
mov
pop
xchg
scas
lea
or
jno
xor
dec
movsl
pushf
fwait
mov
je
icebp
xor
mov
dec
and
jmp
sahf
inc
lods
push
mov
popa
shlb
in
push
loop
imul
jmp
daa
pop
mov
jg
xchg
pop
inc
out
lret
jecxz
mov
cmc
mov
cmp
daa
fs
mov
lret
dec
das
icebp
add
stc
cmp
fdiv
adc
imul
out
cmpsb
jnp
out
out
lcall
jno
or
and
aam
inc
dec
mov
mul
sub
jb
cltd
jmp
movsb
sub
push
je
out
mov
lods
movsl
fcmovb
cltd
bound
cmp
inc
scas
outsb
pop
idivb
cmp
mov
adc
lret
jb
mov
cmp
jns
adc
pop
pop
or
sbb
cmp
pop
mov
mov
bound
add
mov
sub
or
dec
daa
test
ljmp
repz
movsl
push
xor
sbb
out
iret
loop
jg
pushl
fwait
stos
sbb
std
das
mov
or
cwtl
and
imul
push
and
jno
inc
mov
roll
push
cs
popa
mov
ficoms
jl
dec
jbe
imul
and
pop
pop
gs
sub
cli
decl
mov
aaa
pop
fsubl
sbb
out
cmp
pop
sub
pop
popf
mov
sarb
cmpsb
lock
jl
pop
in
pop
or
in
loopne
inc
cwtl
mov
push
push
push
iret
mov
xchg
loope
push
fistps
je
test
outsb
ret
and
sub
imul
adc
jne
dec
sub
popf
popf
or
stos
movsb
ficompl
call
fldenv
mov
pushf
mov
imul
cmp
fwait
xor
adc
fstpl
incl
jne
push
adc
mov
data16
in
mov
mov
cmc
push
insb
jno
lock
add
mov
sti
mov
dec
add
push
cmp
mov
test
xchg
pop
adc
out
sbb
add
loope
xchg
lret
mov
sahf
sbb
cmp
push
push
out
aas
pop
in
cmp
pop
sahf
hlt
inc
pop
xor
jae
sbb
call
stos
adc
xchg
ficomps
out
cs
js
stos
fcmovu
add
bound
jbe
push
repz
lock
cmp
pop
jg
jmp
incl
pop
xchg
data16
sbb
arpl
hlt
aaa
pop
pop
or
add
fld
xchg
imull
mov
cmp
push
cld
outsb
mulb
mov
sub
inc
ds
push
lock
in
xchg
pop
jge
pop
scas
scas
iret
add
mov
add
mov
aam
lea
mov
lock
xor
addl
or
sub
mov
mov
adcl
shrd
shr
andl
mov
cmpl
movzbl
movzwl
not
jmp
mov
movzbl
jb
call
sbbl
or
and
or
xor
add
mov
sub
xor
sub
orl
mov
mov
xor
xor
decl
or
jmp
add
ret
jge
pushf
xchg
mov
fwait
adc
iret
add
or
jl
xor
and
int3
inc
addb
adc
add
daa
or
popa
aas
add
outsb
mov
lods
xchg
movsl
jp
xchg
repz
xchg
and
xchg
jg
jo
pushl
mov
sub
and
rcll
divl
mov
scas
test
arpl
shlb
sbb
cld
cmp
dec
adc
mov
and
jge
inc
mov
jp
jl
jno
jne
dec
push
dec
jl
jns
sbb
jmp
push
pop
cmpsl
es
and
and
pop
push
and
and
xchg
lods
add
adc
je
lds
push
xchg
faddl
jmp
sbb
das
idivb
es
push
js
loope
pop
mov
and
imul
push
gs
dec
adcb
add
lcall
jg
add
pop
cli
push
or
dec
sbb
mov
cmpsl
adc
and
mov
lret
imul
outsb
aam
and
mov
xchg
rclb
mov
imul
fsubrl
vmread
fistl
sub
jle
in
test
outsl
inc
cmp
dec
push
pushf
imul
dec
adc
jnp
sarb
cs
popa
jge
stos
or
jle
shlb
je
jbe
repnz
mov
aam
in
mov
test
les
sbb
call
mov
fwait
push
pop
popf
imul
inc
xor
in
push
push
sti
and
jle
loopne
das
or
add
sub
das
jle
cmpsb
mov
loop
push
mov
xchg
enter
sbb
mov
cmpsl
mov
and
das
je
out
out
dec
xor
push
add
cmpsl
mov
or
addr16
bound
adc
std
cmp
int3
aad
ljmp
adc
lcall
push
mov
xchg
pop
mov
popf
push
xor
sub
and
je
mull
lret
stc
aam
jle
stos
mov
lret
pop
in
xchg
loopne
mov
xor
sub
bound
jmp
cld
pop
fs
nop
jmp
or
cmpsl
sbb
xor
stos
fadd
adc
mov
xchg
pop
movsb
and
xchg
scas
jmp
lcall
mov
xchg
in
test
lods
mov
push
repz
sbb
jmp
cmp
ljmp
fistpl
or
ljmp
dec
fnsave
adc
push
adc
or
out
dec
scas
repnz
test
cltd
pop
dec
sub
pop
or
psubw
mov
out
sub
lods
in
bound
xor
cmp
add
cmp
cmp
and
or
pop
incb
mov
fildll
outsl
fsubrs
cwtl
mov
dec
rorl
lods
in
mov
out
mov
adc
and
push
dec
push
mov
adc
xor
dec
ret
hlt
cmpsb
outsl
pushf
jo
icebp
adc
dec
loop
dec
lret
fs
pop
enter
fdivs
adc
outsl
jp
pop
rolb
hlt
mov
dec
mov
cmp
jo
out
aam
decb
in
test
mov
mov
ror
fucomip
arpl
sbb
int
sub
inc
fs
mov
mov
pop
pop
lcall
jns
xchg
and
jmp
int
jg
mov
push
test
repz
enter
data16
jge
or
popf
dec
daa
in
pop
mov
popa
xchg
scas
xor
inc
adc
xchg
aaa
lcall
fiadds
cltd
icebp
leave
mov
faddl
xor
hlt
int3
aaa
xchg
jae
push
ja
mov
dec
and
add
push
jb
les
in
inc
pop
cmp
mov
pop
lods
fwait
leave
mov
das
push
cmp
xchg
das
xchg
arpl
inc
xor
imul
pop
push
popf
sub
jo
jmp
mov
in
cld
jge
mov
dec
andl
rorl
fcoml
pusha
push
dec
shlb
fstl
lods
sbb
push
popf
mov
xchg
leave
and
dec
cmp
in
out
ja
or
ret
leave
cmpb
mov
and
and
mov
fildl
push
pop
pop
dec
push
mov
mov
adc
out
mov
sbb
nop
or
js
dec
mov
shlb
pop
pop
nop
call
mov
cwtl
lock
mov
in
adc
sub
mov
or
bound
fs
daa
inc
scas
shrl
mov
push
es
inc
cmpsl
hlt
adc
imul
xor
adc
out
and
in
lea
push
nop
cmp
push
xchg
sbbb
pop
mov
lods
adc
subl
lea
xor
mov
mov
adcl
shrd
sbbl
shr
jmp
arpl
and
add
cmp
push
lcall
sahf
sbb
sub
jbe
sbb
ljmp
dec
cmp
sbb
sub
dec
imul
push
mov
jle
repz
gs
mov
add
sbb
cltd
sbb
sub
decb
push
fld
inc
sbb
sub
cli
mov
cmp
idivb
clc
dec
xor
mov
push
lea
jae
xchg
cld
insb
xchg
in
scas
adc
pop
adc
xor
xchg
test
aam
pop
jle
popa
xlat
aad
sahf
inc
jno
cmpsb
xchg
mov
xor
clc
mov
out
xor
stc
inc
mov
scas
dec
lock
or
pop
jmp
sti
mov
and
mov
outsl
inc
mov
cli
xchg
mov
int3
add
rorl
mov
dec
dec
jnp
rolb
dec
sbb
fnstcw
andb
jl
fldt
jne
mov
xlat
xchg
push
xchg
or
sub
jg
jle
mov
mov
add
jae
pop
dec
and
in
cmpsb
xor
jne
loopne
xchg
mov
lret
lods
out
xchg
lock
ret
stos
mov
or
jge,pn
add
cmp
stos
fildll
shll
add
mov
ret
cmp
xor
inc
xchg
mov
popa
aam
filds
xchg
inc
lcall
mov
stc
sub
mov
xchg
xor
jmp
add
rcll
xchg
psllq
cwtl
sbbl
mov
notb
adc
or
ss
outsb
pop
sbb
push
cs
in
xor
enter
in
loop
mov
pop
cmp
imul
inc
int3
mov
icebp
mov
xor
push
lods
push
xchg
cmp
xor
out
dec
test
push
cs
testl
adc
ja
js
in
pop
rcrl
and
iret
push
jno
jmp
add
or
test
fnsave
sbb
dec
inc
sub
mov
dec
leave
cmp
xchg
leave
xor
jne
cmp
sub
subb
ret
lcall
movb
dec
out
out
inc
ss
mov
sub
cs
dec
fsubp
shll
pop
mov
test
dec
pop
dec
inc
clc
or
cmc
stc
dec
rclb
inc
roll
pop
fidivrs
mov
cmpl
ljmp
adc
aas
jne
sbb
repz
sub
or
xchg
push
nop
insl
jp
aad
xchg
mov
and
adc
adc
push
pop
sbb
pmulhw
fcompl
lret
negl
dec
pop
lods
sahf
negb
jge
or
gs
mov
mov
popf
aas
inc
out
jge
popf
pop
aad
lret
mov
popl
cmp
addr16
cld
rcl
not
mov
push
lahf
ja
loopne
clc
mov
adc
lcall
std
adc
pushf
ja
mov
xlat
iret
dec
cmpsl
stos
mov
cmp
and
lods
or
lods
in
pop
scas
cmp
shlb
adc
jmp
cmc
outsl
arpl
outsl
fldz
cmp
imul
es
push
aas
jmp
in
mov
fs
mov
and
in
test
mov
jno
inc
cld
shl
stc
test
push
mulb
test
scas
xor
push
and
xchg
notl
loopne
pop
adc
iret
adc
push
dec
out
cltd
cmp
push
int3
pop
imul
mov
mov
out
into
pop
jge
stc
push
pop
adc
ss
add
xchg
dec
mov
pop
mov
dec
or
mov
add
out
rorb
aad
insb
adc
shrb
push
cmp
sbb
mov
and
push
cmpsl
adc
in
lcall
hlt
pop
push
and
pusha
sbb
pop
dec
jecxz
jo
jae
call
cmc
stos
jle
out
and
fwait
loope
mov
insl
popf
sbb
inc
mov
fdivs
inc
sarl
jl
lods
loopne
sbb
pusha
in
push
rcl
enter
je
stos
jbe
push
mov
cmp
jb
imul
jp
mov
xchg
test
cld
adc
aad
and
outsb
push
mov
mov
pusha
out
push
mov
out
ljmp
ret
out
cmp
out
dec
pop
mov
jae
pop
mov
pop
xorl
cltd
pop
sbb
ds
repz
cli
inc
inc
xor
inc
mov
int
in
or
jae
jnp
mov
repnz
mov
push
repz
lret
adc
jb
pop
jae
xchg
loop
stos
iret
pop
fwait
push
xchg
pop
ret
xchg
nop
sti
push
xchg
aas
cmp
outsb
shl
mov
mov
cmpsl
xchg
and
shlb
xchg
sbb
adc
insb
xchg
push
mov
pusha
mov
inc
mov
je
xchg
cmpsl
xchg
hlt
xor
testl
stos
push
cmp
jne
mov
in
out
add
and
mov
cmpl
mov
movl
jmp
mov
jbe
push
push
pushl
push
pushl
pushl
push
call
mov
mov
sbb
movl
sbbl
adc
mov
or
or
mov
sub
mov
xor
cmpl
mov
not
jmp
movl
movl
je
push
push
call
sub
not
movl
neg
and
movzbl
and
mov
sbbl
xor
adcl
jmp
pop
lea
or
xchg
dec
dec
mov
repnz
or
or
mov
adc
std
mov
jno
scas
test
cltd
sub
js
cwtl
dec
sti
xor
pop
adc
sbb
jnp
loopne
shlb
insb
push
mov
xchg
scas
adc
push
mov
mov
mov
sub
xor
cld
icebp
enter
and
test
mov
and
call
out
ljmp
inc
xchg
mov
sub
pop
sub
push
pushf
mov
lret
cmp
pop
sbb
dec
push
xchg
mov
adc
enter
out
dec
or
push
mov
pop
repz
enter
out
lcall
push
sbb
pop
pop
cmpsl
mov
shll
add
inc
cltd
jae
sbb
or
mov
ljmp
mov
mov
movsb
lock
cmp
push
dec
push
xchg
inc
sub
sbb
lock
inc
jo
hlt
cmp
faddl
cltd
scas
out
mov
sbb
jmp
pop
in
shl
push
inc
dec
ja
xchg
push
mov
loope
ficomps
shrb
xchg
loopne
xchg
cs
or
fucomp
bound
idiv
mov
leave
or
lcall
outsl
lret
jbe
lcall
jmp
out
adc
jno
inc
divl
mov
fisubs
and
jno
daa
js
into
mov
sub
cmpsl
mov
test
xchg
pop
fbstp
rolb
add
lods
pop
cmp
mov
push
add
xor
dec
jo
repnz
or
jb
or
jge
je
inc
inc
pop
xor
jp
or
inc
jns
push
cwtl
mov
lahf
jne
mov
inc
jg
sub
jnp
push
jo
add
jnp
outsl
lods
or
dec
fnsave
bound
mov
ja
adc
cli
popf
and
mov
je
xchg
stc
pop
dec
pushf
inc
or
mov
jle
iret
jbe
roll
ja
aad
adc
shlb
mov
in
stos
in
scas
jne
imul
out
pop
sbb
sbb
inc
mov
ret
scas
adc
lret
dec
dec
mov
icebp
push
pop
push
pop
inc
data16
push
scas
aaa
stos
xor
pop
inc
mov
out
clc
adc
mov
adc
and
mov
xor
movsb
sub
cmp
pop
mov
rcll
cltd
cli
sarl
fistpl
stc
adc
pusha
lods
imul
mov
mov
or
lahf
sbb
inc
sub
stc
pushf
repnz
pop
gs
mov
std
out
mov
loop
pop
lds
add
mov
fistl
dec
mov
xor
test
push
mov
or
and
out
dec
jge
fs
popf
notl
mov
pop
ret
mov
push
push
or
rolb
cmp
orb
add
lcall
or
addl
je
pop
arpl
icebp
nop
inc
inc
sbb
mov
mov
test
xchg
xlat
loope
push
pop
cmp
sbb
inc
mov
and
mov
cli
cmp
mov
jecxz
adcl
adc
dec
add
cli
mov
pop
add
dec
mov
aad
and
or
aas
mov
xor
loop
iret
xchg
lea
fcmovne
ret
mov
push
xchg
cltd
lahf
xor
cmp
sbb
push
out
or
aad
ficomps
scas
sub
pushf
push
and
enter
fs
ja
pusha
cmpsb
sbb
or
loopne
shll
es
dec
jae
push
hlt
aas
xor
mov
fistpll
adc
mov
mov
jecxz
inc
push
es
jo
jne
push
jbe
xchg
add
xor
sub
sub
aaa
jnp
xchg
outsb
mov
and
pop
cmpsb
jmp
in
pushf
xchg
lcall
sub
divl
mov
pop
inc
aaa
ljmp
int
lea
fstpt
mov
jge
fildll
insb
inc
sahf
pop
neg
sbb
and
sub
mov
sub
push
out
das
pop
mov
mov
xchg
or
mov
xor
repz
mov
aas
pop
jp
inc
add
xchg
cmp
xchg
test
aas
jg
les
jmp
sub
or
outsl
sbb
adc
pcmpeqb
ret
ret
ljmp
dec
xor
lretw
push
call
aad
lahf
inc
mov
push
insb
sbb
mov
pop
fists
jmp
push
int
cmp
jno
gs
mov
lds
inc
pop
xchg
mov
incl
xchg
ss
xor
sub
sub
imul
add
xor
imul
test
sbb
popl
orl
mov
or
adcl
shl
imul
cmpl
mov
mov
mov
jmp
movl
jne
pushl
call
and
sub
or
or
xor
mov
and
mov
mov
shrd
sbbl
mov
mov
andl
xor
shr
jmp
mov
adc
and
mov
iret
add
or
xor
sub
pushf
or
ljmp
and
jmp
add
in
test
and
mov
adc
push
xor
mov
ret
adc
mov
push
arpl
pop
lret
mov
lret
fxch
mov
es
rorl
sbb
lret
nop
in
and
sahf
imul
iret
mov
gs
loope
out
and
mov
jbe
aam
and
xor
call
cmp
lcall
xor
jge
or
pop
xor
fwait
jg
mov
movsl
fs
push
inc
mov
dec
and
dec
mov
test
fisubs
jb
xchg
mov
shrb
adc
sub
fists
insl
shl
cmp
xor
add
dec
bound
adc
and
xor
sti
jp
and
pop
cmp
stos
imul
aam
mov
pop
ss
xor
mov
arpl
fildll
imul
mov
fs
inc
fisubrs
roll
fistps
fidivrl
xchg
ficoms
imul
pop
push
sub
jecxz
xor
push
xor
mov
jge
mov
shlb
call
sbbl
sub
iret
and
call
inc
sbb
adc
push
mov
xchg
pop
aam
adc
jbe
repz
mov
cld
lods
jno
sbb
pop
jnp
gs
in
xchg
jge
test
or
sbb
add
push
push
mov
das
ficompl
pusha
cli
test
push
mov
ret
sti
iret
js
imul
xor
and
stos
mov
clc
push
out
fwait
inc
pushf
push
adc
leave
or
jne
push
sub
outsl
inc
subl
jle
rcrb
mov
sbb
jg
add
jl
out
js
aaa
or
orb
popa
enter
cmpb
dec
int3
shlb
pop
loope
jae
dec
faddl
fmull
cs
mov
inc
push
not
cmpsl
mov
jmp
into
rcrb
or
mov
dec
dec
jns
nop
xlat
imul
repnz
push
xchg
push
fcoml
jb
sub
leave
and
jno
inc
hlt
mov
sbb
sbb
std
pop
mov
lcall
cmp
pushf
jp
fbld
js
fidivrl
in
cmp
movsl
je
mov
cmpsb
rclb
aaa
or
push
add
scas
add
shll
push
sub
das
and
iret
mov
inc
pop
aaa
pop
add
incb
and
mov
int3
bound
leave
jmp
lea
daa
xlat
std
mov
lret
mov
inc
dec
sub
testb
or
repnz
xor
repz
dec
pop
ljmp
fstpt
mov
adc
int3
out
in
or
mov
push
adcb
aaa
cmpsl
dec
ret
dec
jns
movsl
inc
fistl
std
or
popf
iret
dec
dec
or
hlt
fwait
dec
or
shll
mov
lret
push
mov
jg
sti
cmp
sbb
lret
sbb
mov
mov
popa
fists
out
xchg
in
pop
insb
hlt
out
insl
adc
inc
jle
push
nop
push
jp
stos
aaa
add
xchg
pop
xchg
jge
add
loopne
imul
push
mov
xchg
or
mov
sbb
shrl
mov
outsl
dec
je
repz
adc
xchg
lahf
loope
test
adc
jge
test
dec
fcoml
psrad
sti
adc
fs
xchg
lds
pop
std
lahf
imul
mov
push
jg
cmp
xchg
stos
push
sub
sub
push
dec
lret
mov
push
enter
leave
dec
fwait
lahf
pop
and
rcrb
cmpsb
jecxz
xor
shrl
movsb
mov
sbb
aaa
xchg
jp
push
push
sarl
outsl
pop
clc
mov
jmp
mov
dec
pop
xor
jne
xor
mov
lahf
push
shll
div
sub
dec
push
sub
sahf
lahf
mov
cmp
mov
fisubrs
pop
dec
outsb
shrb
fldl
lods
adc
adc
cmc
enter
aad
imul
jle
call
insl
xor
push
jmp
push
mov
xchg
pop
outsb
dec
lcall
lea
add
int
or
jnp
xchg
jg
add
sti
mov
loope
pop
inc
loope
stc
xlat
xchg
xchg
leave
cmpl
in
pop
xor
xor
cmp
jo
mov
jns
fsubl
sub
add
push
cmp
sbb
imul
fwait
jo
in
pop
in
mov
xchg
cmp
jle
dec
mov
pusha
jne
ljmp
pop
sub
lods
rcll
out
icebp
fs
ud1
outsb
movsb
dec
sub
fiadds
je
lds
cmp
mov
adc
mov
adcl
xor
andl
or
shl
addl
sub
mov
movl
jmp
cli
and
and
and
adc
ret
mov
pop
mov
mov
iret
add
or
push
or
jg
cmpsl
mov
scas
fisubrs
xor
cli
fistl
sub
inc
scas
jo
mov
add
in
mov
push
lock
xor
ret
dec
mov
mov
jae
jae
add
xchg
pop
fsub
lret
mov
cmp
shlb
data16
mov
inc
outsl
sbb
add
lret
test
hlt
aas
dec
je
dec
test
add
cmp
into
loopne
stos
push
sbb
scas
push
fwait
add
adc
cmp
dec
subl
jbe
aam
or
je
ja
lock
mov
or
adc
imul
shlb
mov
jmp
ja
movsl
push
iret
jmp
jne
jbe
movsl
jecxz
lea
push
inc
mov
sbb
lea
lret
cli
mov
pop
pop
adc
int
test
xchg
std
dec
jns
pop
sbb
mov
xchg
out
es
outsb
or
add
cmp
xor
mov
adc
mov
pop
mov
jbe
rcll
int3
mov
shrb
sbbb
sub
in
test
mov
adc
push
mov
insl
xchg
cmp
mov
xor
nop
pop
add
pop
in
rcr
test
jp
cmp
jo
cmpsl
jle
xlat
dec
addr16
pop
or
mov
adc
add
mov
dec
movsb
mov
mov
xor
cltd
iret
jle
into
jno
mov
inc
jp
daa
outsl
subb
insb
dec
bnd
insb
cmc
lret
jbe
or
mov
pop
sbb
xor
mov
push
out
dec
push
scas
fwait
and
or
orb
ljmp
or
lahf
push
adcb
xor
out
pmaddwd
inc
pop
outsb
cmc
jo
mov
mov
adc
icebp
arpl
inc
nop
loopne
fnsave
mov
outsb
cmpsl
outsl
div
mov
stos
and
sbb
fnstsw
jg
xor
cmpsb
and
test
sbb
and
pop
test
scas
xchg
lret
cwtl
pop
pop
inc
les
sbb
and
and
rcrb
cltd
iret
jmp
adc
fidivs
jp
xchg
cmp
mov
fidivrs
loop
pop
mov
clc
add
and
or
mov
dec
pop
arpl
jo
popf
xor
rolb
mov
and
out
inc
outsl
aaa
xchg
dec
xchg
and
xchg
pop
enter
stos
and
in
and
cmp
cmp
pushf
xlat
scas
xchg
or
in
mov
lea
mov
data16
mov
mov
push
push
adc
out
lods
xchg
pop
fwait
or
test
lods
xor
push
mov
and
push
mov
ret
mov
xor
popf
add
ss
xchg
push
and
in
movsb
icebp
cli
test
adcl
loop
dec
shlb
in
imul
push
movsb
outsl
inc
jp
and
fstp
jo
test
ss
idiv
pop
jecxz
fcmovbe
mov
push
hlt
adc
fwait
mov
inc
and
xchg
mov
xchg
add
cmp
ja
xchg
or
fbstp
ljmp
mov
pushl
and
xor
dec
mov
inc
scas
shl
jmp
dec
lock
sbb
xor
cmpl
loop
sub
repz
or
mov
pop
shr
fsub
aam
stc
leave
jle
jecxz
repnz
mov
loope
cmp
lds
xchg
lods
cmp
sub
sbb
cltd
jg
dec
out
pop
andb
jmp
jl
or
mov
icebp
sub
or
pushf
inc
xchg
cltd
jg
in
loopne
shl
ss
das
sbb
jecxz
call
or
sub
cmp
mov
mov
and
xorb
jno
sbb
in
push
cmp
mov
out
sbb
in
dec
cmp
pop
push
and
imul
enter
push
and
sti
add
xchg
mov
sbb
push
insl
jge
inc
fnstcw
xchg
jnp
sub
ret
lods
adc
int
movsl
or
xlat
scas
icebp
subb
push
pop
repz
iret
xchg
pop
mov
and
jb
add
ss
add
lcall
xor
mov
shll
jl
addl
lret
rcll
popa
mov
cmp
cmp
xor
and
test
push
sbb
sbb
in
add
dec
dec
dec
xchg
pop
scas
stos
inc
addr16
push
ss
mov
int3
mov
push
sub
fidivs
cmp
jns
mov
test
lcall
out
test
out
cmp
inc
mov
mov
mov
std
lds
sti
aad
mov
mov
mov
pop
mov
into
insl
adcb
adc
mov
fucom
add
jne
mov
sbb
in
cmpsb
push
mov
jg
mov
mov
shrd
orl
mov
mov
xor
shl
xor
movl
or
adcl
shr
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
andl
sbb
xor
sub
sub
adc
mov
sub
mov
xor
mov
cmpl
mov
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
sub
mov
sbb
mov
adc
and
mov
sbb
dec
or
mov
jmp
test
aaa
push
insb
add
cmp
add
or
test
insl
shrl
clc
inc
mov
repz
jp
loopne
lret
dec
mov
push
out
jno
loopne
adc
popf
add
dec
inc
push
mov
push
lcall
aas
rclb
sti
jl
or
aas
ret
enter
or
or
and
sub
cmc
mov
mov
fmuls
mov
in
nop
or
stos
ss
cmp
fdiv
jg
mov
and
repz
xchg
mov
dec
sti
cli
xchg
and
mov
and
dec
scas
insb
cmc
call
jne
sbb
sbb
enter
aaa
test
inc
repz
cld
std
fdivs
stos
popa
dec
aam
daa
pop
dec
fsubr
dec
jecxz
movb
test
jl
mov
xchg
lea
fs
movsb
stc
cmp
pop
xchg
pop
aas
mov
fs
adc
sub
enter
mov
mov
mov
aas
test
inc
mov
outsl
adc
push
leave
pop
or
dec
jbe
jge
mov
repz
push
repz
add
push
mov
iret
fadds
sbb
push
mov
sbb
pushl
lods
push
push
sub
jp
pop
repnz
xchg
add
pop
or
decb
push
outsb
imul
lock
adc
add
lret
adc
outsl
xchg
xor
add
ja
mov
push
cwtl
dec
adcb
aam
fwait
dec
dec
imul
jg
cld
in
dec
lods
cmpsb
fildl
repz
subl
daa
aad
xchg
xor
les
mov
imul
mov
cmp
or
ljmp
adc
mov
les
in
xor
out
ficompl
inc
addb
dec
and
cmp
jge
xchg
sbb
js
ret
loope
sbb
xchg
jge
jmp
mov
push
aaa
xor
jae
cmpsb
mov
mov
lret
dec
fcoms
imul
pop
cmp
push
push
outsb
shrb
xchg
in
fwait
xor
mov
cmpsl
jle
call
js
jle
test
push
mov
fnop
std
xor
pusha
fsubr
dec
stos
int3
jnp
mov
jne
cmp
mov
jmp
in
jge
adc
add
lahf
jge
or
jne
es
movsb
lds
popf
ja
inc
movl
ret
jp
push
jns
pop
fimuls
outsb
add
repz
pop
mov
adcl
add
mov
test
adc
movsb
adc
or
xorb
imul
mov
mov
xchg
cltd
mov
add
jno
int3
cmp
fsubrl
shlb
and
xchg
cmp
xor
stos
addr16
xor
inc
and
lcall
mov
xor
lret
add
mov
mov
push
add
icebp
cmp
or
xor
dec
inc
mov
mov
pop
shlb
jmp
test
cmp
xchg
xor
sub
sub
pusha
fidivrs
aaa
add
inc
fimull
adc
lret
or
fwait
xchg
out
out
mov
jg
push
cmpsb
and
stc
xchg
xor
cmp
mov
inc
fcomi
shl
sti
pop
int
clc
clc
pop
outsb
sbb
jle
stc
push
stc
jl
rolb
add
sub
mov
sbb
cmp
xchg
push
loop
pop
repz
jns
inc
outsl
ret
mov
sbb
stos
cs
or
hlt
pop
scas
mov
xor
mov
lret
cmpb
fsubrl
pop
fnsave
jl
arpl
push
in
jae
xchg
and
mov
clc
loopne
in
inc
sti
xchg
lods
pop
cmpsb
xor
pop
scas
pushf
iret
jecxz
jmp
pushfw
je
sub
sbb
call
stc
sti
aam
and
das
jae
pop
add
fisubs
pop
mov
popf
cli
popf
mov
loopne
bound
ds
loopne
mov
sbb
popf
jne
mov
arpl
in
and
scas
imul
sahf
out
sbb
imul
call
insl
arpl
mov
mov
clc
inc
cmp
mov
lcall
cmp
adc
popa
mov
out
push
cmp
cli
fstpl
sbb
mov
add
dec
lds
das
pop
lock
push
cli
lahf
stc
sti
test
lret
cmp
mov
inc
clc
mov
xchg
or
or
cli
sub
jmp
dec
addr16
cmp
and
inc
cld
pop
dec
insl
test
sub
and
fs
sbb
xor
dec
lea
inc
into
divb
and
cmp
and
cmp
mov
lret
inc
xor
and
in
push
mov
roll
andl
shr
mov
adc
mov
xorl
mov
xorl
mov
subl
jmp
sbb
daa
sbb
cmpsl
fisubrl
or
add
or
jle
adc
or
mov
arpl
stos
stos
popa
ljmp
lods
mov
pcmpeqw
ss
push
inc
mov
lahf
enter
adc
loopne
sahf
mul
add
add
fbld
cmpsl
aam
dec
lock
mov
sbb
iret
shll
mov
aas
mov
lahf
cmpsl
jp
repnz
jecxz
push
scas
cs
fmull
dec
stos
repz
push
cs
pop
push
fs
sbb
out
insl
pop
ret
adc
pop
stc
lahf
cmpsl
and
shl
and
int3
pop
mov
mov
jb
jp
fadds
pusha
mov
push
loope
inc
int
and
imul
xlat
aam
xchg
jb
jle
scas
call
push
gs
adc
jecxz
in
push
fwait
nop
adc
jnp
lods
inc
dec
sub
rorl
adc
cmp
aad
lret
cmp
xchg
sbb
and
mov
std
rorl
insb
iret
iret
push
loopne
loopne
jmp
mov
lret
pusha
fldenv
dec
adc
sbb
arpl
stos
bound
scas
xor
cmp
daa
xlat
aam
mov
push
aas
icebp
shl
xchg
sbb
mov
jo
inc
push
stc
mov
or
popf
inc
add
pop
jge
int3
xor
rolb
std
pop
fs
push
fstpl
push
in
sbb
push
rorb
sbbb
inc
fnstenv
pop
movsl
mov
dec
jl
roll
sbb
cld
dec
dec
dec
loope
lea
test
test
cmp
and
push
incb
in
or
xor
out
loopne
sbb
jmp
imul
imul
xor
lods
mov
ss
outsl
inc
cmc
pusha
ja
call
out
xchg
scas
pop
loope
dec
push
push
mov
call
sbb
sub
jecxz
xor
jmp
fldt
pop
pop
mov
repnz
dec
xor
or
pop
shrl
shrb
ret
into
aaa
mov
mov
push
mov
and
orl
in
mov
push
lret
or
ret
pop
xor
rclb
mov
mov
movsl
in
out
cs
popa
push
in
sub
daa
pop
sub
cld
sbb
mov
jnp
mov
repz
dec
inc
fs
mov
pop
jmp
aaa
lret
in
inc
stc
or
inc
into
adc
sbb
dec
or
adc
ret
lret
lret
add
enter
adc
push
or
mov
loop
push
add
jmp
sbb
inc
sbb
jl
cmp
out
cmc
pop
and
or
mov
enter
mov
movsl
test
add
insb
mov
mov
mov
jbe
movl
lret
sbb
sbb
out
pop
psubusb
cmpsl
pop
xlat
inc
xor
bound
xchg
xchg
out
aaa
in
xchg
inc
out
insb
icebp
or
out
movsb
shrl
imul
adc
jo
adc
add
cmpsl
lcall
sarl
mov
mov
bound
js
int3
in
stc
add
movsl
push
xchg
mov
loop
mov
or
xchg
pop
push
xor
mov
push
dec
pop
mov
jnp
sbb
out
push
mov
fmuls
push
loope
xchg
inc
pop
loopne
cmc
push
stc
xchg
sub
jle
test
bound
add
ret
js
jne
adc
lds
fcoml
xor
les
mov
lods
mov
jmp
mov
je
mov
mov
jg
pop
inc
dec
jne
idivl
fiaddl
push
mov
repz
lea
push
adc
mov
add
cmp
stos
xchg
mov
xchg
xchg
repz
sbb
cmp
xchg
xchg
pop
cltd
pop
xor
aaa
sub
xchg
jp
xchg
scas
stos
inc
cmc
jbe
popl
dec
jg
xchg
in
pop
pop
or
inc
sub
sbb
sbb
adc
pop
fwait
or
sbb
out
pop
sub
cmp
sbb
popa
inc
lds
pop
fs
push
es
stos
shrl
jno,pt
jg
bound
lock
dec
insb
push
mov
scas
loop
jbe
fldcw
add
push
nop
or
adc
cmp
xchg
roll
sahf
out
and
lods
mov
mov
sub
incl
xor
push
mov
add
repz
jp
pop
lahf
sar
icebp
cmp
dec
cltd
mov
stos
add
popa
xor
xor
fdivrl
jne
outsb
dec
test
les
and
sub
push
in
and
loope
es
lods
adc
adc
sarb
fwait
outsl
fs
xchg
mov
jne
in
in
add
push
or
sahf
adc
in
xor
lds
add
rorb
push
in
loope
adcl
imul
sub
movl
jmp
mov
add
mov
shrd
orl
mov
mov
addl
xor
shl
xorl
xor
xorl
or
shr
mov
mov
mov
cmpl
mov
movzbl
jmp
movl
jle
pushl
push
push
call
sbbl
or
sbb
orl
sbbl
mov
sub
mov
mov
xor
add
mov
shrd
shr
and
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
call
and
sbb
xor
add
xor
add
sub
or
add
sub
xor
or
add
mov
xorl
mov
add
mov
sub
mov
andl
xor
orl
xor
or
shl
add
sub
add
movzbl
sbb
mov
xor
add
mov
sub
and
mov
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
adc
sbb
sbb
xor
xorl
mov
sub
mov
and
cmpl
movl
mov
mov
mov
jmp
movl
movl
jge
pushl
pushl
call
orl
sub
adc
sub
andl
addl
shrd
cmpl
mov
movl
movl
jmp
mov
ja
pushl
push
call
movzbl
sub
mov
orl
and
add
and
mov
xor
adc
and
shr
mov
mov
orl
xor
xorl
shl
cmpl
movl
movl
jmp
movl
movl
jb
push
push
pushl
call
sbb
not
add
andl
incl
adcl
xor
or
mov
or
movl
mov
cmpl
mov
not
jmp
mov
jbe
pushl
pushl
push
call
mov
sbb
dec
xorl
xor
sbb
add
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
push
push
pushl
push
call
not
or
and
mov
mov
sub
sub
movl
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
push
loop
inc
pop
inc
sbb
jae
cmp
stos
pop
or
iret
add
or
ret
adc
ja
shrb
cmp
mov
out
popf
jp
xor
ja
sub
ficompl
jns
inc
cmp
outsb
ds
out
sbb
push
pop
jbe
push
inc
xor
clc
pop
sub
xchg
lock
inc
je
jmp
fistps
loop
test
rcrl
ss
and
mov
imul
in
pop
lds
pop
mov
adc
fimull
mov
pop
jecxz
clc
jns
xchg
gs
adc
inc
pop
push
or
pop
ljmp
adc
jae
out
in
pusha
mov
xchg
push
cmp
cs
mov
push
addb
add
sbb
dec
lds
jp
insb
cltd
pop
xchg
or
insb
xor
dec
inc
clc
out
jl
neg
mul
iret
insb
pop
cmpsb
scas
pop
adc
sub
sbb
lock
pop
push
pop
inc
cmc
into
jbe
or
repz
jns
xchg
mov
out
mull
sti
cmovae
sub
popf
and
int3
mov
js
std
inc
xlat
sub
lret
adc
ss
jbe
and
testb
out
cs
das
add
shl
sbb
or
mov
mov
iret
out
mov
xor
hlt
leave
fisttpl
xchg
rclb
push
mov
add
adc
sar
sub
loopne
sbb
pop
out
jns
fadds
hlt
loop
stc
xor
jno
test
mov
fwait
sub
dec
and
fldt
inc
xor
cmp
in
subb
xor
scas
movb
cmp
mov
xor
inc
test
test
shlb
loop
or
ss
icebp
and
inc
pushf
rcr
or
cmp
sbb
outsl
fmuls
outsl
cmp
pop
cltd
testl
pop
ljmp
cmp
cwtl
mov
mov
shrb
js
sub
jl
movsb
lods
gs
cmpsl
cmp
fsubrp
cltd
cmp
js
cli
xlat
mov
cs
sub
hlt
int
pop
xor
push
xlat
push
cmp
out
push
ret
mov
sbb
mov
dec
daa
sub
xlat
jp
lcall
inc
enter
adc
sbb
xor
pop
sub
repnz
and
or
adc
sahf
into
jne
leave
imul
sarb
xchg
lcall
fisubs
rcrb
pop
and
cli
pop
cld
cmp
push
popf
stos
in
pop
cmpsl
popf
mov
pop
mov
xchg
cmpsb
into
jmp
lods
dec
adc
xchg
jecxz
nop
leave
es
fstpt
out
xchg
outsl
pop
rcrl
jo
push
out
adc
cwtl
rorl
shrb
cmp
sar
inc
addb
and
ja
sbb
adc
mov
fisttps
subb
sub
decl
inc
dec
xchg
xchg
cs
or
inc
push
fdivr
pop
push
sbb
aam
push
lds
mov
dec
mov
and
arpl
out
xor
sbb
jle
pop
sub
mov
pop
push
or
adc
xlat
push
stos
mov
cld
frstor
pop
jb
or
in
mov
arpl
dec
mov
call
test
stos
fisttpl
scas
cwtl
pop
popa
mov
cld
lods
inc
inc
addl
jno
pushf
inc
stos
rorb
ficoml
mov
xorl
and
mov
cmp
stos
daa
mov
jp
inc
xor
jb
enter
jecxz
pop
aam
aad
out
adc
aad
lahf
outsb
enter
xchg
cmp
test
mov
sub
ret
clc
nop
xlat
jae
jecxz
xchg
test
test
cwtl
pop
mov
mov
mov
sub
cmc
sti
fstl
ficoms
or
jo
hlt
jge
roll
pop
or
adc
adc
adc
mov
fwait
popf
addr16
pop
add
sub
fdivrp
stos
pop
in
cltd
out
xchg
shlb
nop
mov
push
call
mov
xchg
ja
pop
in
cltd
cmp
jp
jge
jge
inc
dec
les
sbb
or
and
inc
test
dec
in
call
fnstenv
sbb
cwtl
mov
dec
inc
js
popa
pusha
adc
sbb
inc
dec
ja
mov
sub
push
test
stc
mov
adc
dec
mov
sub
xchg
repnz
and
ljmp
or
gs
or
xor
mov
arpl
pusha
stc
dec
jnp
and
outsb
jecxz
stos
fimull
xchg
mov
dec
pop
cmpsb
push
cli
out
je
leave
ret
int
fisttps
fs
xchg
lahf
sbb
jl
push
popa
mov
ljmp
or
out
cmp
std
iret
cmp
leave
jbe
nop
pop
xchg
inc
mov
stc
sub
pop
pop
fcoml
daa
shll
xchg
aaa
pop
in
cmp
add
ret
mov
outsb
outsl
jbe
lods
fstpl
sahf
xchg
lea
lahf
orl
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
jmp
lods
loop
repz
cld
insl
cmpsl
mov
pop
or
iret
add
or
lock
xchg
and
scas
and
lea
imulb
inc
lahf
adc
pop
mov
cmc
mov
pop
lods
xor
xor
or
into
xor
lods
out
inc
jne
shll
dec
out
les
movsl
bound
lds
lahf
cmc
cmpsl
lock
and
fxch
loop
xchg
movsb
add
push
mov
in
lcall
inc
shrb
out
xor
xchg
push
xor
in
mov
popa
xchg
imul
mov
mov
mov
push
adc
or
imul
mov
and
xchg
dec
cmp
jp
imul
lock
jg
xchg
jb
lds
push
inc
mov
adc
mov
ss
mov
mov
insb
out
jae
pop
stos
pop
clc
pop
test
inc
sbb
push
dec
mov
mov
adc
push
lods
out
outsb
ret
int
pop
inc
jmp
push
and
lret
ja
fistps
inc
lock
xor
aad
or
pusha
push
dec
cmpsl
cmpsb
mov
inc
push
adc
pop
dec
pop
scas
scas
pop
and
push
adc
out
jns
fcoms
aad
cmpl
dec
in
or
loopne
iret
pop
cwtl
or
xchg
add
jbe
ret
xchg
jge
mov
stc
fwait
sub
mov
aaa
and
mov
std
mov
pop
enter
daa
xor
mov
imul
dec
push
lock
insl
pop
test
movsl
loopne
add
test
hlt
cmp
xor
fidivrs
jae
push
inc
dec
int
xchg
ja
loop
cmc
adc
jo
outsl
xor
lahf
push
les
sbb
frstor
cwtl
sti
sbb
sub
stc
mov
xor
test
loopne
mov
stos
pop
ja
sub
lods
add
in
inc
pop
insl
popa
dec
xor
in
and
adc
fists
enter
das
insl
out
xor
ret
pop
nop
shrb
iret
rolb
mov
xor
lock
ja
inc
icebp
or
push
ffree
jno
push
mov
inc
addr16
aam
negb
add
and
inc
xchg
mov
xchg
icebp
mov
xchg
repnz
cmp
dec
and
pushf
push
mov
lods
fsubl
stos
add
aas
aad
jne
xor
inc
pop
and
and
add
cmp
push
lret
mov
inc
shr
add
or
daa
lret
cmp
adc
std
std
es
sahf
andb
stc
sbb
insl
or
pop
pop
sub
sbb
das
lret
arpl
int
jecxz
iret
rcrl
ret
imul
repnz
sbb
jb
dec
pop
stos
and
shr
xchg
test
loop
jno
lahf
add
out
push
stc
or
jno
mov
mov
add
mov
mov
inc
jle
aad
addr16
aaa
push
xor
ficomps
dec
push
mov
lahf
out
testl
lcall
xlat
arpl
push
in
and
mov
push
bound
jns
push
xor
cmp
sahf
lcall
lods
andb
gs
stos
inc
sub
mov
lods
ret
int3
lahf
jmp
sub
mov
in
jb
cmp
loop
sub
es
sub
aaa
pop
orl
lret
icebp
xchg
mov
adc
push
iret
xlat
and
push
mov
lods
ja
cmp
int3
cmpsl
imul
arpl
test
pop
test
add
das
mov
daa
jno
pop
ret
add
push
incb
aas
jle
mov
sub
xchg
add
int
sbb
sub
les
cmpsl
xchg
fldenv
and
fmuls
sbb
cltd
shll
rcll
jl
hlt
inc
pop
sub
ds
lahf
sete
adc
rcll
cld
inc
hlt
add
or
jno
imul
cwtl
add
or
or
mov
add
and
je,pt
lock
popa
mov
cmp
sub
mov
mov
dec
addr16
xchg
push
xchg
dec
jle
scas
or
fisubrs
dec
jo
mov
clc
cltd
sahf
repnz
clc
repz
mov
movsb
gs
xor
popa
inc
cs
mov
ss
clc
fs
pop
in
or
cmp
push
test
sub
aam
dec
js
fistpl
data16
cmp
cmp
xchg
daa
inc
in
std
mov
loop
lret
push
dec
cli
cli
sbb
jb
xlat
adc
fdivrp
or
stos
lret
cli
and
jae
sub
mov
and
add
xor
xchg
sbb
xchg
pushf
out
stos
aas
shll
call
add
pushf
add
fcmovu
stos
mov
mov
das
or
mov
jmp
imul
lock
dec
mov
xchg
mov
mov
addr16
sarb
cmpsl
sbbb
sub
or
shll
xor
jg
insb
xor
jmp
mov
xorb
xchg
pop
adcb
sub
mov
iret
add
or
sub
or
repnz
in
mov
jb
fadd
repz
lods
sahf
jecxz
mov
xor
lds
push
cltd
mov
pop
int
pop
test
stc
jno
outsb
cmp
jmp
ret
in
cwtl
push
mov
fiadds
cmp
sahf
mov
jnp
scas
xchg
pop
dec
mov
mov
lea
jl
sub
dec
add
movsb
push
lods
inc
pop
adc
mov
enter
fldenv
outsb
and
sub
popa
bound
mov
inc
cltd
mov
dec
lods
add
flds
cld
sub
adc
and
sahf
enter
cmp
add
inc
sbb
adc
rolb
and
fwait
aas
inc
inc
push
out
add
mov
scas
cmp
and
mov
lock
pop
dec
push
inc
in
adc
lods
data16
mov
aas
lock
mov
outsl
push
iret
push
movsb
fisttpll
mov
adc
psrlq
and
and
xchg
jb
mov
pushf
adc
pop
push
stos
inc
cwtl
test
in
test
push
mov
sub
fsubrl
enter
in
add
xorb
sti
push
xorb
leave
adc
in
mov
stos
minps
dec
adc
movl
mov
cmp
sub
sbb
mov
mov
enter
or
arpl
ljmp
add
add
test
xor
out
sub
or
dec
push
dec
leave
pop
mov
xchg
sub
pop
add
push
sub
out
inc
lods
and
outsl
sub
repnz
das
leave
mov
push
addr16
pop
sbb
cmp
dec
incb
sub
push
popf
xchg
imul
addr16
add
mov
loope
sub
insb
jg
idivb
adc
inc
jbe
dec
bound
fwait
sub
jp
mov
push
xchg
mov
pop
mov
or
out
xor
jle
xchg
imul
mov
mov
mov
jge
jae
push
mov
jns
out
inc
or
mov
push
jecxz
cmp
sub
icebp
push
push
iret
or
dec
mov
push
dec
ret
test
lret
or
repnz
icebp
cmp
mov
jge
fs
sbb
dec
jl
outsb
inc
jne
call
dec
cmp
lahf
jo
adc
stos
xchg
push
enter
jecxz
dec
data16
push
xchg
loop
in
daa
push
test
outsl
pop
je
push
fsubrs
mov
cmp
mov
jnp
pop
sbb
sub
xchg
push
cltd
adc
dec
test
pop
and
dec
xchg
dec
lods
sub
sbb
pcmpeqd
push
repnz
sbb
stos
aas
jo
mov
jle
mov
jecxz
jnp
iret
mov
into
xor
dec
push
shll
jge
fnsave
fsts
mov
sub
das
fbld
cli
add
mov
repnz
aam
sbb
fcoms
lock
inc
push
xchg
out
mov
int
sub
bound
or
pop
test
aaa
outsl
dec
bound
mov
jp
icebp
adc
pop
imul
sub
outsl
push
adc
bound
lods
adc
aad
aaa
loope
fcmovu
es
into
adc
add
shll
push
stos
sti
loope
jb
lcall
mov
dec
adc
or
adc
mov
daa
test
out
stos
adc
push
and
mov
push
das
test
ss
int3
in
mov
in
dec
sbb
mov
imul
andl
out
dec
in
mov
xor
lcall
push
lea
xorl
pushf
ja
dec
mov
das
sti
test
in
fwait
push
cmc
stc
dec
int
jg
in
mov
ds
dec
xor
cld
cmp
jl
test
leave
pop
jge
sub
sbb
imul
mov
loopne
rolb
test
sub
orb
movsb
insl
ret
and
ss
into
loop
mov
cli
jno
inc
pop
stos
mov
adc
test
les
movsl
stos
jbe
repnz
and
in
stos
pop
scas
dec
cmpsb
adc
jno
outsl
or
ljmp
xor
addl
ds
fsubrs
cmp
and
adc
push
mov
imul
cmp
cmpsl
out
xchg
scas
jge
inc
or
pop
push
and
xchg
dec
mov
in
fs
jge
jle
mov
add
mov
jl
lods
xor
dec
out
adc
insb
and
cmp
and
mov
adc
sub
gs
mov
leave
adcb
mov
mov
xor
cs
pop
mov
pop
push
xlat
imul
add
push
lock
stc
arpl
push
leave
mov
loope
pop
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
jmp
and
imul
nop
push
mov
mov
or
iret
add
or
shrb
mov
mov
mov
clc
xorb
mov
ljmp
loopne
xor
sahf
xchg
inc
dec
mov
or
lock
dec
fwait
cs
loop
push
mov
sbb
mov
fs
add
jno
dec
pushf
and
sbb
mov
push
sbb
pop
pop
mov
lret
jmp
or
loopne
xchg
mov
shlb
jno
shl
popa
rorb
pop
fisttpll
inc
adc
lock
dec
out
shl
cmp
shrb
outsl
lods
hlt
mov
rol
fdivrl
xor
dec
enter
mov
dec
xchg
sub
or
mov
rol
pusha
lods
adc
roll
mov
push
push
push
js
pushw
xor
lcall
cld
sbb
lock
jp
inc
jmp
jne
adc
js
pop
cmc
lods
xor
inc
scas
add
js
or
outsb
pusha
sub
movsb
mov
xorb
ret
add
inc
loop
dec
pop
fiadds
lods
xchg
in
dec
loopne
dec
vhaddpd
les
shll
sub
sub
stc
and
les
xchg
dec
adc
in
mov
cmp
adc
xor
sub
mov
lret
int
xor
orl
push
icebp
adc
jb
push
xchg
sub
mov
dec
sbb
lret
xchg
js
out
stc
aad
bound
dec
repnz
mov
pop
jnp
push
add
outsl
add
lea
out
sahf
rol
enter
lods
ja
sub
test
and
lds
call
push
std
movsb
lahf
ds
pop
lods
mov
test
cmp
add
adcb
movsb
les
inc
mov
aad
in
into
cmp
dec
addr16
mov
test
add
cs
add
in
cld
mov
bound
stos
movsl
adc
sub
movsl
je
stc
in
xchg
jb
sub
popf
jns
cld
cld
mov
xchg
je
mov
sub
mov
es
movsl
mov
add
mov
xchg
in
and
into
xchg
inc
xchg
push
jecxz
mov
testb
rolb
jbe
shl
data16
jge
call
push
mov
and
xchg
iret
xchg
sbb
push
sub
mov
ret
jle
mov
jo
pop
or
adc
loopne
iret
mov
push
xchg
inc
push
add
pop
sbb
fadds
jge
movsl
or
xor
lea
cmp
cmp
push
out
cli
lds
movsb
xor
add
sbb
test
adc
hlt
insb
lahf
in
adc
xor
pop
icebp
loopne
xchg
adc
push
arpl
mov
xchg
pop
rcll
int3
repz
mov
lcall
pop
mov
popa
xchg
jo
stos
stc
fs
jp
jae
push
or
ja
pop
xchg
ficoml
pusha
pushf
test
mov
xchg
push
movsb
cmp
and
add
pop
mov
sar
insl
mov
jle
add
push
fildll
cmp
int
and
sbb
add
jmp
js
xlat
enter
mov
mov
or
cmp
scas
jo
aam
xor
jle
and
inc
les
loop
mov
push
outsl
dec
adc
mov
aaa
scas
aas
int3
jl
and
pop
rcl
add
testl
loop
xor
add
aad
add
mov
pop
insl
outsb
data16
mov
adc
mov
cmp
cmp
ss
inc
loopne
aad
mov
or
fadd
jnp
cltd
xchg
jb
xchg
mov
lds
lock
in
xor
movsl
sti
sub
das
jnp
test
sarb
inc
das
dec
rolb
xchg
mov
lds
lret
add
xchg
pop
adc
imul
pop
jns
sub
xchg
stos
push
stos
cmpl
push
inc
mov
mov
ds
fisttpll
insl
call
and
xchg
adc
pop
push
and
ljmp
fwait
mov
or
xor
fisubrs
or
mov
pop
xchg
xor
aaa
jmp
notb
lret
aas
fdivs
inc
repnz
lret
xor
js
cltd
fstpl
push
xchg
xor
movsb
stos
pop
addb
shl
xchg
out
popa
cmpsb
xchg
pop
lahf
lods
jno
lahf
fs
aaa
fimull
scas
stos
in
fstps
enter
imulb
inc
inc
mov
call
clc
inc
push
cmc
mov
imul
inc
ret
jmp
xchg
push
add
test
push
es
inc
repz
jl
iret
in
or
rcr
out
in
ret
adc
xchg
in
std
fs
test
push
and
icebp
lret
push
pusha
xorb
ret
mov
inc
int3
jmp
imul
pop
lock
pop
pop
aad
mov
cmc
ja
xchg
sub
or
add
or
mov
stos
stc
mov
xchg
and
sbb
nop
cmp
jb
rclb
xor
mov
sub
ret
inc
push
out
inc
ljmp
adc
mov
dec
pop
cs
xor
test
jl
sahf
test
fs
jg
inc
aam
imul
jb
lea
lret
or
add
mov
test
lret
adc
mov
dec
cltd
loopne
loop
jge
cmc
stos
sti
mov
loopne
pop
rclb
jnp
jno
cmp
das
push
rcl
adc
sub
enter
mov
mov
inc
outsb
xchg
push
clc
pop
sbb
pop
cltd
pop
sub
fistpll
ret
adc
pop
out
sbb
idivl
aam
rolb
mov
mov
mov
mov
lods
cmp
stos
jmp
dec
jns
jnp
xchg
jl
mov
xchg
cwtl
in
adc
sbb
lds
iret
xor
jae
and
xor
add
dec
cmp
xchg
pop
and
dec
pop
dec
dec
insl
xor
mov
js
ss
sahf
test
jne
mov
dec
jns
fsts
nop
loope
es
push
clc
fcmovu
in
inc
cmp
push
pop
jmp
in
fwait
sarl
sbb
jne
xor
xor
ja
push
loope
bound
int
das
mov
fcmovb
cwtl
pop
jecxz
lods
push
cmp
fsubrs
pushl
pop
cmp
das
cmp
mov
lds
xchg
and
add
push
in
xchg
xchg
fs
xchg
cmc
iret
dec
sub
jb
xchg
mov
jae
mov
icebp
out
xorl
inc
in
xor
cmp
insl
jl
dec
mov
ficoms
cltd
jnp
inc
test
pop
cmp
pop
pop
faddl
enter
lods
jmp
xchg
xor
in
xor
mov
aad
mov
outsb
stc
ficomps
add
inc
subb
out
adc
and
bound
insb
push
jmp
xchg
aaa
test
sarl
adc
lcall
pop
xchg
pop
mov
hlt
mov
gs
inc
leave
and
shlb
mov
sahf
push
jns
js
fstl
cmc
xchg
mov
imul
lods
jno
mov
pop
sbb
mov
cmc
ret
in
dec
sbb
in
inc
push
sbb
inc
cmp
xor
sub
mov
xchg
mov
add
mov
cwtl
shll
ss
cltd
add
data16
dec
pop
icebp
cwtl
aaa
sub
lret
rcrb
in
scas
or
test
mov
sub
jmp
mov
insb
fwait
pop
fwait
inc
fnstenv
inc
jge
and
cmc
icebp
in
push
xchg
fwait
dec
cli
mov
mov
add
pop
leave
js
les
inc
jp
lods
or
ljmp
xchg
sar
inc
or
jmp
or
push
cmp
lods
pop
lods
xchg
push
mov
jmp
mov
add
xor
popf
pop
cmpb
cli
repz
jbe
sub
mov
jle
jmp
fmuls
mov
arpl
mov
lahf
gs
sub
pop
add
sbbb
or
loopne
clc
xor
and
adc
mov
mov
scas
pushf
in
add
test
inc
into
jmp
push
jl
jb
mov
sbb
cld
lret
dec
lret
cmp
add
or
out
jno
fdivrs
adcb
pusha
or
cwtl
pop
mov
mov
ss
pop
xchg
dec
xchg
pop
and
hlt
mov
insb
mov
inc
and
inc
sbb
aad
lds
mov
pop
and
xor
mov
sub
sti
in
jle
adc
insb
test
mov
stos
sub
mov
fmulp
hlt
jl
lock
xchg
fisubrs
test
in
inc
je
mov
out
addl
mov
mov
push
cli
test
das
mov
call
lods
fwait
pusha
outsb
dec
jno
mov
pop
sti
outsb
repz
call
ss
pop
in
lret
add
es
test
rol
hlt
stc
pusha
adc
ror
hlt
xor
dec
shlb
stos
rorl
lcall
rol
adc
sbb
inc
movsl
cmp
lahf
cltd
test
insb
decb
dec
fmul
jmp
or
shll
xchg
outsb
xchg
add
mov
or
dec
cs
jp
and
aaa
dec
scas
xor
lcall
push
pop
and
sbb
sub
mov
andb
jmp
and
lcall
inc
xchg
insl
fcomps
xor
fstps
xchg
sub
iret
std
or
sub
sbb
lods
stos
pop
inc
aaa
in
jbe
imul
dec
in
lcall
daa
dec
push
xchg
jecxz
cwtl
test
hlt
mov
imull
lock
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
lcall
pop
jp
ljmp
or
iret
add
or
outsl
sub
iret
sahf
cwtl
out
and
out
jnp
fdivl
ds
mov
shll
aad
lds
dec
adc
cltd
aad
xor
cmp
cwtl
enter
add
or
push
cmp
dec
mov
push
pop
jae
xor
mov
mov
ret
sub
cld
mov
inc
inc
or
cld
bound
jnp
push
sbb
lods
sbb
mov
stos
cmc
inc
jbe
lret
idivl
inc
stc
mov
out
lcall
aaa
out
in
icebp
adc
loope
lahf
sub
gs
mov
lret
divb
cltd
mov
jle
adc
mov
mov
adcl
aaa
jb
and
cmp
cmc
lds
sub
xchg
repz
inc
repnz
fbld
fdivrs
mov
pop
mov
adc
cmpsb
adc
or
dec
add
aas
push
mov
mov
fisubl
in
test
call
push
mov
xchg
push
aad
pop
jge
jle
into
dec
ljmp
jecxz
xchg
xor
or
aas
sub
dec
popf
out
ljmp
testb
dec
inc
fsubl
pop
mov
cmp
imul
jmp
mov
repnz
adc
dec
lods
aas
ret
hlt
add
jle
push
mov
add
jmp
pop
mov
movsb
xor
addl
and
dec
sar
movsb
jle
ljmp
inc
mov
enter
pop
mov
pop
sbbb
insb
imul
rcll
loop
and
inc
stos
out
sbb
jp
jbe
ds
push
pop
adc
fstl
xchg
stc
movswl
xchg
xor
into
jecxz
mov
jne
dec
arpl
push
fcompl
int
inc
lds
fs
adc
fwait
mov
cmp
out
pop
sbb
in
and
xor
pop
or
inc
out
test
cmpsb
iret
adc
or
imul
xchg
not
fcomp
inc
mov
push
int
push
in
mov
imul
mov
scas
movsb
mov
mov
aaa
jmp
and
bound
mov
cmp
add
add
adc
sub
xchg
pop
cmp
push
dec
add
push
and
shr
inc
cmp
loope
aam
fwait
add
rcrl
lcall
inc
fsubrs
or
dec
sbb
addl
aam
and
ljmp
lods
xchg
inc
loop
inc
repz
sbb
sub
pop
repnz
dec
push
ss
in
clc
pop
lahf
aas
loop
in
and
clc
notb
ret
inc
sbb
pop
inc
adc
mov
or
jnp
data16
pusha
sub
mov
jecxz
pop
push
sub
cmp
jecxz
in
xadd
pop
xchg
cld
xlat
pusha
cwtl
jmp
adc
das
push
idiv
push
inc
mov
stos
adc
movsb
enter
cmp
aaa
pop
dec
fistps
imul
outsl
les
insl
mov
daa
jp
sbb
sub
je
sub
fnsave
mov
and
lahf
and
xchg
lahf
out
mov
pop
pop
out
movsl
fnstsw
loop
mov
divl
jno
cs
imul
in
mov
ljmp
iret
and
rolb
es
lods
jns
jns
fnsave
cmpsl
int3
pop
sub
push
jne
aad
lret
sar
shl
or
enter
cmp
add
das
push
jno
int3
jae
push
addl
imul
ret
pop
cltd
push
inc
cmp
jmp
adc
jl
xchg
add
mov
sti
pop
lds
adc
inc
insl
or
std
les
icebp
pop
add
test
and
lea
mov
dec
rcr
std
sub
cmpsb
xchg
out
out
out
sahf
lret
mov
dec
stos
inc
add
push
sbb
xchg
lods
outsl
lcall
jg
call
das
int
add
mov
xchg
ficoml
jno
inc
in
adc
dec
orl
les
mov
test
or
in
sub
xchg
adc
mov
or
enter
sbb
push
or
leave
push
add
std
hlt
or
mov
insb
out
sbb
mov
dec
jl
shl
stos
imul
pop
lcall
leave
xchg
mov
int3
mov
adc
jno
and
test
lods
aas
xchg
add
lahf
push
jo
into
xchg
xor
sbb
mov
inc
adc
xchg
cmp
dec
push
and
pop
cmp
sahf
mov
ljmp
mov
pop
xchg
icebp
inc
nop
int3
fldcw
mov
cli
cmpsb
fstl
add
mov
xor
notl
in
adc
in
and
in
xor
xchg
test
shl
mov
xor
or
mov
mov
add
mov
jmp
mov
mov
std
jmp
mov
or
add
or
stos
loope
dec
out
xchg
push
jge
das
inc
stos
fldl
in
push
scas
icebp
das
inc
sbb
jo
mov
push
shrl
pop
or
dec
cmp
fisubs
imul
cli
test
insb
pop
jmp
jmp
lods
add
push
scas
jns
push
lret
iret
mov
int
int3
mov
sub
adc
jno
jl,pt
mov
sbb
dec
adc
xor
out
or
cmpsb
mov
pushf
sub
loopne
orb
ret
psubusw
sub
push
fnsave
je
aas
fnsave
pop
rclb
adc
mov
and
sub
xor
and
in
int3
jmp
arpl
pop
iret
jno
stos
divb
jne
test
lods
rcl
das
repnz
mov
jp
fisubl
dec
ljmp
dec
mov
mov
jb
mov
call
cmp
or
mov
lahf
sar
push
gs
sbb
or
pop
push
mov
rclb
loopne
pop
inc
out
xchg
fnstcw
call
or
cltd
push
cs
sbbb
mov
out
in
shrb
mov
and
and
cmp
push
xor
and
dec
push
or
mov
ljmp
mov
mov
js
pop
mov
sbb
notb
mov
repz
adc
das
fidivs
in
xchg
push
scas
nop
cltd
leave
push
mov
push
mov
div
mov
or
cs
shlb
rcll
mov
push
subl
in
jg
sbb
cmp
jnp
jno
dec
rolb
cmp
and
push
out
icebp
sub
js
mov
mov
scas
dec
fwait
fwait
xor
clc
subb
rolb
incl
cmpsl
mulb
fnstcw
push
sbb
xor
mov
outsl
mov
adc
mov
nop
pop
test
icebp
xor
jmp
jae
mov
mov
mov
adc
repz
leave
popf
xor
add
or
mov
in
icebp
shll
mov
inc
push
andb
sbb
std
push
mov
pop
sahf
stc
pop
in
mov
mov
cld
or
call
mov
in
dec
incb
loopne
fistpl
insb
mov
ret
pop
imul
push
xlat
xor
fidivrs
dec
jmp
push
push
sarl
lods
fsubs
sub
mov
inc
cmp
push
out
pop
lahf
test
pop
cmpsb
pop
adc
rcll
loope
xlat
imul
sub
out
cltd
pop
sbb
hlt
xor
push
push
mov
rolb
inc
je
add
add
xchg
jne
inc
dec
inc
fisubl
jb
test
in
pop
call
pusha
pop
lcall
xor
and
fs
cmpsb
scas
rcll
inc
add
int
addr16
test
jae
xchg
lret
lea
xor
rcll
fstl
loopne
pop
jne
dec
inc
sbb
jne
jl
dec
mov
or
push
sbb
mov
testl
lock
push
andl
in
iret
push
in
push
shl
sti
adc
icebp
sbb
xor
or
lock
js
rclb
xor
stos
jg
adc
bound
pusha
cltd
bound
mov
test
outsb
jecxz
push
pop
in
dec
push
push
sbb
ficompl
jo
inc
xlat
loopne
push
add
sbb
mov
fwait
aam
pop
jns
xor
ja
xchg
cmpps
int
imul
xchg
fcomip
mov
mov
jl
push
sub
xchg
mov
jmp
movsl
mov
dec
cmc
pop
and
mov
and
ror
lods
out
fsubrl
movsl
push
and
push
int3
push
and
xchg
xchg
pop
mov
jmp
xor
mov
je
pop
in
push
xchg
adc
or
adc
jne
jecxz
andl
cld
je
add
out
js
inc
mov
sbbl
cltd
or
loop,pn
repz
adc
cmp
push
or
mov
ret
push
push
cmc
pop
push
push
shll
xor
push
xchg
push
icebp
dec
aaa
xchg
lahf
clc
xor
insl
dec
inc
ja
lods
xor
adc
ret
pushf
bound
inc
push
in
lret
pusha
push
aad
mov
loopne
or
cs
daa
add
mov
sti
mov
les
cld
out
push
bound
mov
imul
loope
jecxz
gs
pop
xor
subl
andb
stc
sbb
mov
pop
mov
inc
pop
pop
pop
fnstenv
push
push
mov
shrd
shr
mov
jmp
rorl
test
out
out
inc
pop
cli
mov
or
or
add
or
inc
xchg
mov
jnp
or
sub
push
nop
movsl
push
sti
xchg
lahf
idivb
add
xchg
fcmovnb
scas
xchg
lret
ficomps
movsb
inc
insl
shll
inc
cltd
or
mov
xchg
xchg
cs
adc
jns
andb
pushf
inc
icebp
adc
pop
dec
pushf
ret
mov
push
push
xor
jo
add
dec
xchg
stos
adc
cmpsb
mov
sbb
adc
mov
shl
bound
jnp
cmp
and
push
pop
mov
pop
jle
xor
mov
faddl
mov
mov
popa
push
aam
push
ror
pop
pop
int
lods
fwait
mov
inc
xor
call
movsb
fisubrl
push
lret
aad
cwtl
push
stos
jle
leave
cmp
lret
maskmovq
mov
push
pop
xlat
mov
mov
aas
ja
or
jg
jb
sub
mov
sbb
add
lret
lret
or
cmp
push
cs
pop
dec
clc
jg
mov
stos
jp
int
jns
mov
call
lods
pushf
add
imul
add
cmp
and
mov
jne
jle
loop
add
push
pop
insb
cmc
dec
not
arpl
scas
lods
pop
in
adc
jmp
inc
orb
outsb
or
rcrl
lea
stos
xchg
icebp
add
imul
in
addr16
jmp
cs
aas
xchg
and
sub
and
test
hlt
aad
lods
popf
test
mov
adc
mov
addb
leave
jle
aas
movsl
lret
mov
push
in
in
xor
add
sub
cmp
adc
cmpsl
jg
and
rcrl
xchg
mov
fs
aam
push
cmp
or
ret
xor
jp
in
dec
jbe
mov
out
aas
imul
jl
sbb
mov
or
divb
pop
filds
mov
aas
adc
mov
pop
adc
aam
xor
rcl
and
inc
rorl
pop
stos
imul
or
call
gs
hlt
lods
dec
mov
jae
add
aaa
inc
and
adc
add
and
mov
mov
add
dec
andl
dec
xor
movsl
sub
mov
or
push
push
enter
rcr
xor
jmp
add
push
imul
pop
adc
pop
lcall
cwtl
enter
push
or
sub
int
rol
lret
into
scas
sub
jecxz
mov
adc
cmp
cmp
scas
adc
mov
jne
mov
cli
loop
cmpsl
insl
ficoms
cmp
lcall
jno
mov
dec
mov
icebp
shll
test
push
stos
imul
std
mov
push
clc
sbb
mov
aas
pop
lret
outsl
es
sub
pop
repnz
stc
lods
ja
inc
cmp
stos
lds
inc
mov
add
mov
lcall
scas
push
jp
jle
leave
push
cs
add
loope
jae
aam
pop
mov
cmp
push
push
shl
ss
sub
leave
mov
in
or
mov
xor
or
add
xchg
add
imul
shll
cmc
push
stos
push
mov
inc
fdecstp
in
mov
in
sarb
lds
incb
loopne
orl
lea
push
fbstp
in
xchg
pop
ds
inc
mov
dec
mov
cmp
jne
sti
insb
fs
in
test
cmp
push
xor
lock
push
inc
inc
or
push
out
and
ret
subb
addps
aam
push
ss
mov
movsl
jp
addr16
shll
jmp
push
daa
adc
inc
out
insl
gs
mov
fsubrs
and
push
cmpsl
pop
loope
es
pop
mov
inc
push
xor
gs
cmp
or
bound
or
mov
dec
hlt
mov
movsl
incl
jns
sbb
adc
add
adc
aas
and
add
rcrl
pminub
xor
leave
sbb
cmc
sahf
mov
xor
pusha
jp
and
addr16
test
xchg
pop
ret
loope
out
repnz
movsb
std
pinsrw
orl
in
bswap
out
jo
cltd
cmpsb
test
jmp
int
mov
mov
lahf
pop
mov
inc
mov
inc
and
push
jbe
fucomp
dec
sub
out
enter
or
mov
push
int
xor
inc
xchg
jo
int3
movsb
pop
clc
cmpl
push
ss
inc
sub
cmpsb
int3
sti
sbb
fdiv
pop
dec
mov
es
adc
imul
cmp
jne
mov
jo
mov
pop
lret
andb
mov
pop
bound
lcall
mov
mov
add
pavgb
aaa
mov
push
pop
mov
xchg
xor
out
jo
pop
int3
ljmp
sbb
popa
aad
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
inc
push
pop
cmp
aas
and
jne
stos
cmpsl
jp
or
iret
add
or
imul
lahf
cmp
popf
xorb
pop
push
add
jb
outsl
jae
arpl
aas
inc
jo
fists
and
popa
inc
in
mov
sbb
mov
dec
into
push
pop
xor
cmpsb
pushl
ret
loop
bswap
or
adc
cmp
out
push
add
lahf
gs
xchg
xor
pop
test
dec
sub
popf
fildll
inc
fwait
lret
sub
loop
sub
adc
xchg
cmp
aad
mov
or
sub
sbb
push
aad
xchg
jns
nop
jge
syscall
test
mov
mov
int3
push
ret
call
or
mov
iret
mov
xadd
ja
xor
iret
pop
adc
push
push
aas
stos
inc
out
mov
push
in
or
jno
add
pushf
and
out
dec
mov
mov
in
and
pop
inc
dec
fnstcw
fistl
sub
je
pop
adc
mov
popf
outsl
pop
jno
jl
jmp
push
test
imul
push
iret
pop
or
and
iret
clc
gs
imulb
cmp
lret
mov
pop
push
or
mov
add
enter
call
rol
sarb
lock
jmp
dec
data16
stos
pop
pop
mov
dec
jae
lret
shr
ds
or
jle
add
add
lret
js
inc
sbb
cmpsb
mov
add
mov
ja
xchg
pop
sbb
mov
jl
ds
jnp
jne
jl
sbb
push
xchg
ljmp
cltd
jns
inc
lea
ljmp
pop
sbb
mov
mov
loop
cmp
mov
sub
insb
jmp
push
xchg
ljmp
mov
icebp
fsubrl
mov
mov
popa
xor
fisubl
loop
and
sbb
popf
mov
lods
int
ficoms
jl
aam
jle
dec
push
in
rcr
jb
inc
cwtl
imul
push
add
loope
push
imul
shll
xchg
cmpsb
sub
mov
out
add
xchg
leave
adc
xchg
out
cmp
gs
popa
push
das
mov
fnstenv
mov
imul
fmul
fiaddl
push
sub
jne
and
add
sti
pop
pop
mov
mov
movsb
fdivl
cmp
in
or
ret
lea
scas
cmp
and
adc
mov
ljmp
push
xchg
aas
out
mov
jmp
clc
mov
popf
mov
in
cmc
dec
xlat
xchg
lods
cmp
add
xchg
mov
inc
sbb
sahf
pop
daa
aas
xchg
cmp
mov
lret
mov
jne
fs
hlt
and
pop
jmp
push
add
mov
cs
ficompl
aam
adc
lods
push
mov
imul
jbe
data16
arpl
sbb
mov
je
test
mov
jmp
aas
jle
pop
inc
ret
dec
rol
rcrl
adc
and
push
lods
mov
stos
in
pop
mov
inc
mov
dec
stc
std
pop
mov
call
cmp
mov
pop
pop
andb
push
and
xchg
inc
mov
adcb
dec
dec
lock
pushf
gs
aas
jns
xchg
pop
jl
mov
aaa
je
aad
add
mov
test
mov
sub
adc
test
inc
iret
xchg
out
fnsave
jae
movsl
pusha
dec
push
add
mov
rcll
sahf
push
and
cwtl
sub
sbb
mov
adc
test
and
rol
push
aaa
andl
push
cmc
cs
inc
pop
mov
inc
xchg
and
mov
mull
je
xchg
ja
ds
rcrb
push
cmp
sbb
add
sub
mov
cmc
call
incb
xchg
stc
cwtl
xor
xchg
mov
fdivrs
ficompl
arpl
sahf
sbb
inc
push
out
inc
jbe
and
jb
push
incb
jecxz
pop
stc
fadd
sub
mov
inc
imul
xchg
dec
std
mov
cltd
pop
repnz
pop
pop
imul
mov
fsub
lcall
clc
dec
and
out
push
adc
outsb
daa
push
std
fmull
movsb
icebp
enter
jne
sbb
sbb
pop
sbb
fwait
mov
stc
lcall
mov
fldl
shrl
imul
sbb
pop
lret
ret
push
dec
dec
out
mov
lahf
jp
js
push
cmc
jg
call
sbb
sbb
and
popf
aaa
int3
fwait
sbb
mov
xor
shll
bound
cmpsb
mov
clc
sub
aam
in
jge
cs
dec
nop
sbb
lods
insb
jns
js
jle
xor
add
or
shlb
xor
jns
jno
pop
in
out
lods
movsl
iret
jnp
jb
add
out
cli
shll
test
jmp
rorb
ret
adc
loope
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
jmp
sbb
pop
adc
mov
je
mov
repnz
iret
add
or
xchg
cld
inc
call
ds
cmp
push
and
add
out
in
int
sbb
nop
testb
ficompl
aam
adc
dec
dec
sbb
add
inc
in
mov
adc
xchg
mov
stos
aaa
out
sbb
pop
push
inc
mov
jmp
out
aaa
add
cmpsb
jae
and
push
popf
call
dec
lock
stos
pop
push
mov
vminpd
cwtl
rol
push
in
dec
xchg
cmp
into
fidivrs
sbb
push
sti
movsb
scas
imul
cld
cmpsl
inc
std
into
imul
pusha
stc
jb
pop
inc
lea
push
jge
dec
arpl
mov
jp
pop
push
jae
gs
mov
in
mov
ret
push
ss
mov
enter
aam
scas
xor
in
clc
test
jle
cmpsb
cmp
xchg
ds
stos
cmpsl
xor
mov
lahf
fstpt
sbb
xor
movsb
bound
jle
pop
jnp
lret
cmp
adc
cmp
insl
cld
inc
loopne
mov
fcompl
sbb
data16
outsl
in
ljmp
in
pop
xor
std
or
in
xchg
push
mov
jb
pop
or
push
pop
dec
out
pop
jp
sub
cwtl
jge
test
lods
sub
scas
iret
mov
or
scas
mov
dec
dec
out
test
sub
sbb
aad
xor
mov
mov
and
mov
xchg
cmp
or
push
rolb
rorb
cmpsb
xor
lret
xor
mov
xorb
mov
sbbl
push
mov
in
mov
add
sahf
pop
push
stc
dec
addr16
jne
add
sbb
jmp
sar
xchg
ret
dec
faddp
inc
push
mov
jo
rcll
jns
or
inc
push
cld
inc
push
sbb
mov
pusha
das
add
push
leave
or
sub
inc
dec
loopne
lods
cs
bound
sbb
mov
cmpl
flds
rcl
sbb
stos
push
ljmp
adc
test
mov
pop
imulb
daa
mov
pop
dec
aam
shr
xor
jno
ja
jno
cltd
cmp
insb
daa
cltd
insb
jns
mov
jmp
mov
push
cmpsl
fwait
jne
adc
jp
pusha
sbb
notb
fldl
xor
push
xchg
sbbb
sbb
lods
jg
shlb
push
cmp
inc
cmp
add
insb
aas
fidivrs
lcall
cmpsb
lods
icebp
dec
xor
dec
fs
in
dec
in
sahf
outsb
mov
xchg
stos
jl
xor
std
jecxz
mov
or
mov
pushf
inc
call
rcrb
mov
imull
mov
mov
lahf
mov
loop
js
push
jp
stc
push
addr16
jb
insb
or
outsb
xor
cmc
repnz
pop
jp
int
xchg
aam
ds
cs
adc
fiadds
xor
stc
xlat
cmp
sbb
lods
inc
sbb
mov
pushf
frstor
pop
pop
repnz
mov
mov
jnp
jecxz
ret
inc
push
je
cli
fst
adc
mov
push
sbb
mov
nopl
pop
jg
sub
jno
jl
repnz
sarl
jl
xchg
dec
sub
mov
aas
dec
jno
imul
out
lods
dec
icebp
jl
test
mov
rolb
mov
je
fwait
std
jne
jp
shlb
arpl
and
scas
cmp
jle
add
std
aaa
sarl
aas
leave
xor
loope
and
dec
sbb
jo
dec
xor
pushf
clc
into
fmull
sbb
imul
add
das
and
int
lahf
sbb
inc
push
inc
ss
mov
mov
sbb
mov
dec
loopne
adc
mov
mov
jge
insl
mov
mov
jbe
pop
push
movsl
jg
in
xlat
jecxz
mov
insw
and
lcall
scas
pop
push
ret
nop
bound
push
bound
cmpsb
into
pusha
push
xchg
gs
push
mov
mov
sbb
fstps
lock
mov
jecxz
jno
mov
sbb
sbb
ljmp
dec
loop
fsubl
mov
sahf
dec
adc
stos
movsl
sub
inc
scas
add
xchg
lds
loopne
sbb
repnz
ss
test
shlb
inc
les
rolb
pushf
inc
dec
ljmp
pushf
mov
inc
ret
adc
jmp
jp,pt
push
add
fnstcw
shrb
mov
mov
mov
in
dec
mov
mov
xor
mov
xchg
jae
insl
cmp
push
les
xchg
mov
cmp
bound
ja
ficoms
outsl
push
and
sub
cmc
inc
sub
and
repz
test
sbb
or
mov
mov
xor
or
mov
mov
shrd
shr
jmp
and
stos
push
scas
adc
xor
cmpsl
imul
or
iret
add
or
mov
icebp
xor
inc
jecxz
pop
cmp
out
or
outsl
pop
outsl
cs
notl
mov
sbb
cli
test
mov
push
roll
test
lock
imul
xchg
ret
xchg
roll
stos
fs
test
lods
or
mov
mov
push
mov
sub
sbb
orb
pushf
add
push
push
outsl
mov
pop
aad
adc
cmpb
imul
int3
add
xchg
jae
dec
popa
xchg
pop
sbb
cli
xlat
and
adc
pop
add
testl
jle
xchg
pushf
dec
movsb
fidivrl
sbb
or
test
or
cmp
lds
cmp
mov
cmpsl
ss
inc
mov
fsubr
xor
mov
jp
push
push
icebp
es
push
dec
ds
notl
sbb
push
pop
mov
pop
or
xchg
repz
insb
xor
adc
lahf
scas
cli
mov
cmpsb
push
fsubs
out
mov
jle
sub
out
mov
jecxz
push
jnp
cmp
inc
inc
outsb
idivb
mov
jle
out
or
loop
test
pop
sbb
int
push
insl
dec
flds
lock
xor
jle
pop
pop
mov
sub
add
push
pop
cmp
pop
cmp
stc
or
loop
mov
mov
sub
cs
dec
cmp
call
pushf
repz
jmp
and
lahf
push
test
ds
repz
cltd
pop
jl
inc
adc
xor
jnp
sub
lret
or
or
addr16
mov
xchg
daa
jbe
das
into
xor
dec
cltd
imulb
imul
cmp
dec
sbb
and
mov
repnz
mov
or
jns
mov
les
enter
pop
cmp
js
dec
mov
jns
pop
mov
cwtl
aaa
dec
cmp
adc
aas
sbb
fcomip
add
les
mov
cmpsl
inc
cmp
dec
repz
inc
lock
in
repz
rclb
pop
repz
imul
adc
cmp
popf
xchg
outsb
xor
xchg
sub
push
push
add
dec
push
jmp
and
dec
pop
pop
gs
daa
lret
dec
sbbl
push
dec
jmp
rclb
pop
repz
je
adc
mov
sbb
sbb
aaa
push
mov
jne
xor
fdivrl
insl
sti
dec
add
add
xchg
sub
mov
inc
mov
lds
ror
sub
fisubs
lret
int3
pop
cltd
cli
les
jp
dec
je
jg
mov
test
mov
in
add
sub
jmp
dec
and
mov
dec
mov
mov
lret
sbb
inc
incl
aad
push
js
jle
arpl
filds
mov
inc
add
dec
cli
fldcw
test
cmpsb
inc
jns
mov
sbb
out
stc
inc
or
insl
bnd
aas
xlat
or
dec
mov
sub
sbb
std
rcrb
in
mov
fidivs
pop
and
dec
and
out
lods
jle
dec
psadbw
push
rorb
sbb
insb
int3
xchg
jae
jno
mov
push
mov
pmaxsw
pop
jl
jnp
inc
dec
mov
inc
mov
sub
push
mov
bound
stos
or
xchg
decb
hlt
or
arpl
fbstp
adc
xor
sub
sub
jbe
inc
sbb
xchg
xor
fldl
and
mov
jbe
sbb
mov
in
sbb
pop
xchg
data16
inc
mov
jp
cmp
mov
pop
lret
leave
adc
mov
dec
fcomi
dec
sahf
je
inc
and
push
or
cwtl
and
mov
test
fnstenv
pop
xchg
jb
daa
pop
mov
ja
outsb
sbb
mov
mov
add
xor
dec
iret
and
out
arpl
ds
pop
loope
push
stos
push
jb
cli
sub
sbb
shld
sub
and
jmp
ret
dec
stos
add
inc
out
dec
lcall
out
imul
inc
pop
jecxz
into
ret
scas
mov
mov
or
inc
inc
movsb
jo
adc
inc
push
sbb
push
xor
push
mov
adc
jne
lea
stos
insb
roll
mov
std
adc
and
pop
out
mov
and
movsb
sbb
sub
push
xchg
lgs
pop
jg
mov
cs
outsl
lock
cmp
sahf
loope
fnsave
jbe
lds
int
bound
cwtl
stos
ja
cmp
xor
lcall
sarl
or
rorl
int
gs
pop
lahf
mov
pop
push
jo
push
jno
jmp
jl
mov
and
stc
mov
or
movsb
push
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
clc
clc
dec
xlat
dec
adc
mov
lods
or
add
or
pop
pop
jecxz
jl
mov
test
rorb
pop
dec
into
rclb
sti
shlb
insb
or
bound
lcall
pusha
nop
jae
fstl
repz
inc
xchg
sub
roll
cmp
add
daa
loopne
mov
inc
aam
out
jl
push
mov
adc
or
jle
fstpl
mov
or
cld
jmp
subl
roll
scas
jne
ja
xchg
fwait
sbbl
cmpsb
adc
in
adc
jnp
pop
sub
lea
jl
jl
or
add
jp
dec
mov
adc
jnp
outsl
aas
and
or
inc
sbb
pop
movsb
jne
mov
adc
push
cmpsl
mov
cmp
jo
or
es
pop
movsb
out
xor
mov
add
popa
testb
jg
in
adcl
jle
xlat
mov
pushf
jb
pusha
pop
xor
sbb
bnd
and
mov
xor
test
mov
into
mov
mov
xchg
xor
push
adc
pop
mov
add
scas
out
cmpsl
add
push
xchg
or
cmp
mov
roll
lcall
scas
in
pop
mov
cld
repnz
enter
sar
lods
push
mov
dec
cwtl
xor
fscale
fs
fmul
loope
mov
mov
inc
or
out
pop
loope
jo
mov
mov
mov
adc
xor
lcall
mov
out
and
fs
xchg
cli
es
stos
add
cmp
mov
or
jnp
push
mov
jmp
push
mov
cmp
imul
sub
ret
les
or
movl
imul
push
pushf
int3
pop
jp
pop
mov
xchg
test
aad
dec
inc
sbb
out
add
dec
lret
xchg
adc
mov
or
xchg
jne
mov
sarl
push
sahf
xor
shll
je
push
xchg
lret
adc
popa
cmp
testb
shr
jno
dec
int
daa
stc
mov
push
mov
xchg
ja
jg
fsubl
push
mov
adc
cmc
jp
iret
push
inc
lcall
mov
xchg
push
arpl
mov
dec
mov
aad
push
mov
les
shlb
xchg
in
xor
and
inc
icebp
out
lret
xor
add
jl
mov
out
mov
lods
add
or
fnsave
push
mov
fistps
xchg
push
in
outsl
sarb
jae
mov
pop
xchg
mov
push
addr16
and
mov
cmp
int3
iret
adc
jecxz
adc
aas
mov
fwait
mov
inc
pop
ja
xor
lret
hlt
and
adc
lcall
sub
lret
ljmp
and
lods
in
mov
leave
xchg
sub
inc
sahf
push
test
xchg
push
push
sub
jo
in
mov
xchg
fwait
movsl
jbe
xor
jecxz
sub
pop
int
push
add
into
or
int3
mov
cli
sbb
sbb
fcmovnu
pop
mov
jno
jecxz
jp
jbe
jne
jp
iret
fwait
sar
pop
fists
and
xor
sbb
in
lea
andb
jg
sub
jmp
fwait
pop
jne
in
jnp
and
xor
xlat
dec
into
mov
cmpsl
or
test
pop
or
fisubl
cli
adc
xor
sub
out
sahf
mov
shrb
cltd
inc
bound
mov
pop
or
test
ds
or
jg
sbbb
outsb
aam
lea
mov
inc
mov
inc
test
xchg
add
xlat
cmp
into
ljmp
xchg
add
push
mov
or
inc
xchg
mov
mov
or
movsb
inc
in
cmp
in
cmp
mov
movsl
xchg
int3
mov
or
inc
xchg
xor
out
sar
mov
mov
je
xchg
mov
pop
and
jle
test
mov
xrelease
loope
les
jp
jno
into
inc
lret
repnz
sbb
push
ss
mov
adc
popa
inc
test
nop
leave
insl
incl
loopne
mov
push
push
sbb
sbb
lahf
hlt
lock
xor
mov
pop
cmpsb
sub
adc
gs
adc
loopne
pop
add
js
cmp
sbb
xchg
cli
bound
mov
sbb
sub
rolb
dec
imul
fbld
add
test
dec
arpl
movsb
ds
addl
in
cmpsb
mov
mov
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
jmp
jne
lcall
imul
jne
rorl
or
add
or
jne
fldenv
jge
out
addr16
insb
in
sbb
mov
push
xor
inc
mov
andl
or
lds
sbb
push
sbb
pop
pusha
jnp
and
mov
dec
mov
shll
mov
pushf
nop
lock
dec
fimuls
xchg
add
jecxz
xchg
ss
es
mov
add
or
int3
add
lea
add
jge
jmp
lock
mov
xchg
push
xchg
xchg
ja
mov
out
pop
pop
pop
jae
imul
jns
jnp
mov
lcall
jnp
aaa
clc
jae
pop
push
jbe
iret
cmp
mov
mov
clc
cltd
pop
or
iret
sarl
sbb
push
enter
push
jle
aam
mov
push
xchg
in
cmc
into
test
leave
cmp
jo
push
cwtl
sbb
push
gs
inc
outsl
push
jb
and
push
imulb
mov
cmp
add
mov
orl
xor
adc
scas
std
leave
push
and
xchg
rcrb
aas
jno
sub
out
adc
mov
lods
mov
mov
xor
loop
arpl
push
in
or
adc
mov
fisubrs
and
lea
jae
pop
lret
add
incb
ds
ficompl
or
stos
fcmovu
imul
adc
jp
orps
ret
jp
and
inc
rcr
sbb
loope
aas
push
das
ret
sub
leave
dec
lret
dec
gs
or
leave
lret
stc
jno
outsl
pop
jo
popa
mov
es
cmp
popa
scas
xchg
faddl
fmull
jo
loope
dec
pop
cmp
fwait
daa
rorb
push
xor
mov
xlat
mov
add
ret
imul
fs
call
push
fucomi
or
inc
mov
pop
xorl
or
pop
repz
fwait
add
iret
add
cmpsl
subl
enter
out
and
mov
push
inc
fisubs
sub
leave
arpl
sbb
fwait
stos
in
push
jmp
inc
lods
sbb
cmp
into
inc
test
lea
xchg
pop
insl
push
in
addr16
dec
ud0
ja
or
jge
xorl
inc
sarb
in
das
out
jns
bound
dec
push
push
and
subb
and
mov
pop
push
add
sti
loopne
sbb
in
iret
das
lods
pop
mov
cmp
fucomp
jnp
jg
cli
ds
and
mov
dec
jg
mov
push
mov
ja
test
mov
inc
add
xor
daa
and
add
ja
les
inc
mov
jae
addr16
cmp
xchg
hlt
sub
in
pop
adc
es
call
cmp
or
and
rcrb
inc
lret
out
mov
nop
mov
rorb
daa
out
je
mov
pop
mov
xchg
xchg
xchg
fstps
mov
mov
xor
in
stos
in
faddl
and
pop
ljmp
test
lcall
fstps
addb
and
mov
int3
movsb
or
push
xor
pop
mov
or
insl
adc
jo
jo
xchg
cmp
dec
aam
pop
aad
loope
jg
cmp
or
dec
cmp
bnd
ljmp
mov
mov
push
lcall
clc
flds
imull
cs
xor
push
push
mov
sbb
call
cmp
add
cmp
adc
aas
cld
pop
sub
cmp
aam
lret
sahf
push
dec
pop
sub
stos
sbb
jno
mov
scas
aas
hlt
inc
push
js
shrl
mov
jmp
inc
add
dec
lahf
xchg
repnz
xlat
and
movsl
fsubr
mov
adc
or
and
shl
xchg
sahf
mov
xor
adc
sbb
out
divl
push
ret
mov
jmp
or
imul
pushf
xchg
sub
rcrb
or
push
xchg
mov
sub
or
loop
ret
push
lods
mov
mov
sub
push
aad
lds
lds
lcall
in
mov
dec
adc
in
pushf
mov
decb
sub
insl
jge
gs
dec
jl
out
movsl
ljmp
xchg
lods
mov
aaa
pop
test
cmpsb
rorb
loope
sbb
in
pop
jo
and
test
dec
ficomps
sbb
pusha
lea
enter
rcrl
xchg
lret
mov
mov
cmpsb
iret
aad
xchg
dec
imul
push
mov
xor
cmpsl
jl
lock
push
test
inc
imul
jmp
add
xchg
repz
mulb
dec
arpl
iret
or
iret
add
or
add
stc
insl
push
nop
insl
cmpl
loope
add
jl
inc
insb
add
in
lods
adc
test
adc
pushf
out
cmp
fwait
test
adc
out
push
mov
jne
push
mov
in
add
subl
jns
push
lea
push
push
lret
adc
sbbb
mov
push
sete
adc
and
or
mov
shr
stc
mov
cmp
xchg
test
jae
fcmove
clc
jmp
scas
pop
mov
stos
push
cmp
fldenv
outsl
or
adc
imul
pop
push
in
jo
lret
insl
shl
dec
sbb
xor
xchg
cltd
enter
movsb
jmp
fs
es
mov
push
push
mov
fucomi
das
stos
lods
mov
lret
notl
dec
mov
xor
test
pusha
lea
mov
xchg
pop
scas
mov
sbb
pop
push
out
pop
jmp
pop
fmuls
push
or
xor
in
fpatan
and
incl
dec
xchg
loope
cld
dec
mov
adc
lods
pushf
aaa
cmp
mov
insb
shlb
fwait
cmp
mov
ljmp
movsb
xchg
add
xor
leave
sarl
jo
inc
out
sub
mov
lds
out
out
pop
cli
aad
lea
jmp
sbb
stos
xchg
xor
mov
lret
sbb
xorb
shll
sub
int
iret
cld
cli
int
leave
xchg
enter
jl
push
and
mov
rorb
adc
scas
sti
xor
sti
in
push
cmc
or
sbb
add
or
sbb
negb
test
mov
cmc
lret
mov
pop
mov
dec
ret
pop
sahf
xchg
clc
sbb
pop
dec
sbb
int
jg
sbb
mov
inc
cmp
mov
in
jp
lock
ss
lcall
dec
fcoml
mov
mov
and
xlat
xor
cmp
xor
add
repz
add
test
aad
ret
jb
popf
xlat
adc
and
cmp
jno
fisttpl
push
pop
mov
cld
sub
pop
dec
mov
jmp
je
sub
gs
sub
pop
lds
fstpl
insl
mov
xor
jmp
adc
cmpb
and
scas
xchg
jae
xchg
mov
mov
pop
inc
outsl
sub
cs
mov
dec
or
sbb
xor
cltd
fildl
fstl
mov
xchg
int3
mov
mov
xchg
mov
rorl
in
xchg
inc
out
pop
pop
jle
iret
xlat
rorl
pusha
adc
roll
jbe
push
hlt
out
in
icebp
jbe
shll
stos
fadd
xlat
inc
lods
mov
fidivl
and
pop
cmp
or
mov
add
jecxz
out
xchg
out
cmp
push
or
jg
push
xor
jo
daa
pop
addb
imul
jecxz
fimull
pop
stos
das
dec
cmp
dec
push
stos
pop
addr16
sarb
push
lock
jecxz
bswap
ror
stos
movsb
xchg
sub
nop
test
push
iret
shlb
sub
sbb
mov
mov
cld
clc
mov
cmp
div
aaa
movsb
ret
xchg
pop
les
out
sbb
hlt
push
fidivrs
add
push
lods
fisubl
sbb
xor
movsb
lcall
pop
mov
ja
jmp
test
sub
leave
jle
ja
and
mulb
div
mov
int
and
insb
add
mov
push
adc
jl
xchg
cmp
cmpsb
inc
fisubrl
sub
or
xchg
inc
movsb
cmp
bound
add
push
fsubrl
inc
mov
xor
dec
out
fistl
mov
cmp
add
idiv
jl
decl
mov
mov
ret
sbb
vmwrite
fstps
loopne
or
ds
add
lret
inc
in
add
push
fstpt
aas
dec
sub
adc
add
fldl
add
pop
fsubl
test
xor
adc
mov
int
icebp
xor
xchg
jno
add
adc
inc
mov
or
cmp
lds
subb
jle
popf
fiadds
pop
adc
movl
xchg
mov
push
enter
out
mov
and
popa
sahf
jbe
cmc
js
ja
lods
xchg
lods
daa
cmp
loop
clc
subl
mov
jl
and
jecxz
stc
push
into
pop
subb
loopne
inc
pop
std
hlt
push
mov
xchg
fmuls
dec
mov
mov
mov
imul
cmc
fisubrs
mov
neg
lret
jmp
pop
mov
xlat
dec
mov
mov
adc
push
add
shlb
rol
push
xor
mov
mov
jmp
jge
inc
pop
pop
push
cld
mov
and
or
add
or
int3
adc
daa
leave
cs
and
incl
sub
mov
stos
scas
cmp
pop
jne
jbe
mov
in
wrmsr
mov
adc
adc
push
sub
inc
pop
add
push
xor
shll
mov
cmc
xchg
js
jnp
jl
mov
inc
cmp
xor
test
push
ljmp
cmpsl
mov
and
xchg
pop
sub
insl
cltd
jne
jbe
push
lret
xor
sub
cs
test
mov
ja
and
mov
xor
test
lods
push
jmp
push
stc
mov
push
dec
sub
and
js
xor
js
inc
sbb
ljmp
imul
fadd
cmpsl
outsl
sti
xchg
repnz
fwait
sub
or
stos
aam
in
insb
popa
add
sub
shl
cmpsl
xor
addr16
test
mov
sub
mov
dec
or
in
adc
sub
hlt
into
dec
or
shrb
sbb
stc
inc
inc
int
sub
xchg
jecxz
je
mov
or
push
pop
loop
ret
adc
and
cmc
lods
push
clc
or
push
push
js
scas
sbb
sub
repnz
push
rorl
sbb
std
pop
push
and
cmp
lods
add
adc
dec
sbb
aaa
dec
and
sbb
pop
clc
jl
push
mov
inc
jb
fs
add
inc
fisubrs
and
jae
or
mov
push
pop
xchg
leave
hlt
and
lcall
ret
or
xlat
dec
push
xor
stos
or
test
loop
xchg
jg
in
mov
xchg
jbe
fucom
pop
pop
loop
xlat
inc
dec
out
mov
sbbl
fsts
pusha
ret
jle
dec
and
add
cli
and
mov
inc
outsl
pop
push
repz
push
jne
repz
adc
jmp
mov
push
adc
cmp
adc
inc
lcall
sbb
sbb
test
insb
enter
movups
icebp
clc
adc
cmp
sub
pop
xor
fs
lcall
cmp
bound
ds
mov
fisttpl
and
and
cmpsl
shl
aas
stc
and
dec
xchg
inc
jns
fnstcw
test
mov
lea
xor
mov
sti
jp
pop
insl
dec
ss
or
andb
lods
ds
scas
outsb
ljmp
insb
mov
or
or
dec
ret
pusha
pushf
out
push
jmp
xchg
mov
and
inc
in
and
loopne
push
loope
in
xchg
sbb
shll
mov
test
jle
dec
add
aaa
sbb
mov
push
sbbb
lea
aam
out
dec
imul
inc
xor
rep
out
xchg
out
xchg
mov
in
sbb
xchg
test
std
sub
fdiv
sbb
sbbb
iret
mov
lods
and
test
jbe
xchg
mov
imul
mov
mov
scas
mov
aaa
and
icebp
xchg
mov
pop
in
sbb
fxch
push
cmpsl
xchg
scas
pop
lcall
dec
je
jecxz
sarl
sarb
xchg
ret
sub
aas
or
test
jecxz
lock
jl
jb
dec
add
push
outsb
pop
inc
mov
ret
xor
out
pop
aam
enter
or
out
inc
xor
sti
sbb
dec
inc
push
lea
push
jnp
mov
in
mov
pop
scas
cmp
cmp
and
nop
cmpxchg
je
stos
and
dec
cs
enter
idiv
xor
test
adc
push
std
fdiv
mov
insb
cli
mov
jae
inc
mov
cltd
stos
sub
xchg
bnd
push
icebp
push
addr16
sbb
pop
insl
pop
xchg
scas
in
mov
out
std
mov
sbb
ret
cmc
sbb
pop
cmp
or
test
xchg
ljmp
adc
addps
push
dec
js
sbb
outsb
add
push
int
data16
or
mov
add
mov
or
sahf
add
inc
inc
push
lods
gs
dec
sbbl
xor
inc
xchg
jp
fidivl
adc
vhsubpd
test
adcl
cmc
roll
push
xchg
popf
or
sub
inc
mov
test
popf
pop
movsb
lahf
daa
inc
orb
or
add
lahf
lret
sub
popf
outsl
ds
stc
mov
fwait
pop
pushf
cli
leave
pushf
xchg
cmp
jge,pt
mov
push
xchg
pop
mov
or
pop
xchg
sub
ds
jo
jp
test
add
push
sbb
daa
jmp
add
sbb
dec
cmp
mov
mov
or
pop
shr
mov
enter
enter
mov
push
inc
mov
mov
xchg
outsb
shll
ficoml
mov
and
in
add
xchg
add
jae
push
mov
fwait
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
jmp
popa
jb
clc
xchg
pop
and
push
pop
jne
or
xchg
mov
or
add
or
hlt
push
sub
pusha
lock
lock
inc
xchg
lods
addb
cmc
xchg
sub
mov
imul
or
fimull
mov
pop
imul
lret
incl
icebp
ret
jo
mov
mov
fisubrs
jno
fidivs
xchg
mov
out
cld
loop
int
loop
sbb
cld
addb
jge
xor
pop
cmp
seta
cs
mov
fcoml
and
addr16
mov
lcall
and
pop
test
inc
das
ret
movsb
mov
aam
sahf
cmp
loopne
jmp
mov
mov
mov
xlat
cwtl
stos
adc
pop
mov
fiaddl
and
and
dec
hlt
inc
adc
jle
and
mov
mov
xchg
xor
adc
pop
mov
or
out
sbb
xor
mov
and
lds
lods
add
mov
dec
mov
fwait
cmp
movsl
push
xor
movsb
loope
cmp
sub
lods
adc
jle
xchg
into
mov
adc
cltd
cmp
push
xor
fdivs
cmp
stos
inc
fs
adc
ret
divl
adc
test
mov
in
adc
cs
or
dec
xchg
push
xchg
sub
push
dec
mov
jno
loop
or
dec
mov
add
popa
mov
into
pushf
aad
xchg
mov
cmpsb
in
mov
xchg
xchg
or
pusha
adc
sub
jae
shl
pop
iret
or
add
pusha
or
dec
mov
rcrl
je
aas
fwait
cmp
jg
stos
loope
xor
add
adc
dec
inc
jmp
dec
outsb
xchg
iret
push
sahf
stos
repnz
subl
rclb
mov
stos
repnz
pop
push
aaa
push
lret
jmp
sti
pop
int3
pop
sbb
and
cltd
aad
add
add
mov
cmpsb
and
scas
mov
addl
mov
outsl
stos
dec
mov
mov
sub
inc
push
jns
sbb
mov
lds
std
xchg
xchg
mov
insl
xor
xchg
xor
inc
jp
and
add
push
enter
push
sub
sub
pushf
scas
ja
icebp
dec
sbb
aaa
cmp
lret
mov
movsl
outsl
mov
mov
call
inc
movsb
pop
dec
xor
aam
imul
mov
mov
enter
adc
jle
cltd
mov
loop
dec
push
xor
icebp
mov
sub
xlat
es
xor
mov
lcall
sbb
cmp
jns
imul
je
pop
jle
cmp
push
adc
mov
enter
mov
or
mov
xchg
xor
jecxz
mov
pushf
imul
cmpsb
adc
lcall
js
sbb
aad
mov
jecxz
andl
push
gs
add
outsl
xorl
shll
ret
xchg
mov
ss
test
dec
mov
fildll
pop
sub
push
imul
test
rorb
xlat
repz
inc
jae
stos
pop
mov
xchg
loope
and
cmp
outsl
lret
les
jnp
fnsave
or
or
scas
insb
mov
sbb
call
push
or
pop
daa
push
dec
push
mov
out
jmp
enter
mov
mov
int
test
call
sbb
xorb
adc
and
mov
imul
cltd
idiv
push
push
fadd
xor
sahf
mov
popa
add
addl
or
or
loopne
xchg
or
ss
outsl
and
popf
mov
inc
cmp
arpl
repnz
sbb
mov
out
sub
scas
jb
ret
add
add
data16
popa
or
fs
sti
mov
shrl
outsl
xchg
xorb
jle
stos
sub
fs
orb
imul
daa
dec
mov
jae
dec
popa
mov
push
orb
pop
mov
leave
test
jge
mov
adc
push
fwait
mov
leave
xchg
cmp
fiaddl
fcomps
push
out
pop
add
shlb
push
or
push
mov
and
mov
xchg
sti
out
mov
mul
aam
dec
in
mov
cmp
mov
aad
pop
es
sbb
es
stos
and
popa
gs
and
das
jno
rcl
fisubl
xchg
mov
lds
cmpsb
cmp
shlb
adc
mov
pusha
xchg
repnz
cld
scas
xchg
daa
repnz
mov
add
sub
jge
cmpl
jns
fdivp
dec
xor
push
sub
xor
cmp
push
adc
inc
adc
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
jmp
outsl
or
shll
xchg
daa
ja
sbb
cmpsl
jp
mov
dec
mov
or
xchg
push
inc
pop
scas
test
mov
movsb
scas
ljmp
add
cld
adc
mov
mov
icebp
push
or
imul
xor
int
pop
cmp
cmpl
push
xchg
xchg
mov
bound
inc
fucomp
push
mov
shll
inc
push
scas
incb
dec
loop
es
xor
cli
mov
insl
data16
insl
cmpl
pushf
mov
add
xchg
ret
xchg
in
dec
mov
imul
mov
xorl
adc
mov
sub
mov
mov
xor
xor
in
xlat
out
and
add
test
sbb
add
jae
inc
addb
cli
loopne
inc
int3
jnp
pop
outsl
push
mov
dec
xchg
faddl
addr16
push
push
dec
pop
insb
mov
std
push
pop
xchg
and
addr16
fcomi
inc
imulb
hlt
inc
mov
out
pop
ffree
fs
inc
mov
je
aad
or
bound
outsb
mov
pushf
inc
pop
mov
cmp
cltd
or
cld
cmp
add
lcall
int
dec
dec
stos
push
ficompl
mov
out
sub
xchg
add
enter
mov
cwtl
out
jbe
js
mov
sub
mov
loope
cmp
jo
dec
vsqrtps
inc
push
and
push
idivl
push
or
or
shrb
inc
xchg
fstp
pop
subl
mov
dec
sub
vmulss
dec
adcb
gs
mov
or
lahf
outsb
fwait
dec
xorl
mov
cmp
mov
pop
popa
sbb
xchg
imul
jne
push
sbb
stos
addl
xor
outsb
mov
sub
or
xor
aam
mov
cmp
and
sub
pop
jecxz
fisubrl
sub
fwait
push
outsl
xor
xchg
push
mov
cld
sub
jecxz
dec
outsl
cltd
inc
repz
movsl
xor
inc
fsubp
cld
or
insl
cli
jnp
push
mov
mov
mov
ret
push
test
push
rol
inc
scas
adcl
test
mov
jb
mov
sbb
clc
out
inc
jmp
mov
cmp
inc
or
add
pop
mov
or
push
outsb
mov
or
popa
mov
mov
and
lret
clc
sbb
mov
in
lea
mov
ja
imul
stos
push
jbe
mov
in
lock
jo
inc
mov
mov
mov
sub
rolb
push
mov
jl
addr16
arpl
sub
dec
mov
mov
mov
leave
xchg
in
pop
xchg
into
and
int
mov
inc
fdivl
sti
jno
sbb
add
in
insb
ja
lret
out
jg
dec
xchg
lcall
jne
lock
out
jbe
call
lea
inc
lcall
mov
mov
mov
insl
and
sti
xchg
arpl
sub
jne
xor
aas
mov
lea
rcl
movsb
les
mov
mov
or
sar
mov
push
adc
inc
sub
repz
iret
mov
aad
adc
cmpsb
popa
rclb
inc
repz
mov
and
xlat
out
imul
roll
add
mov
shlb
xchg
xor
outsl
xlat
pop
sub
mov
stc
hlt
mov
cmpsb
inc
int3
fwait
cmp
jl
dec
enter
dec
movsl
xlat
sahf
cmpsl
dec
adc
sub
push
dec
int3
jle
enter
lret
mov
fcoms
mov
addr16
imul
pop
sbb
and
leave
cmp
push
jo
cs
jecxz
mov
clc
push
lea
dec
sbb
stos
dec
sbb
sub
cld
xchg
xchg
jno
fsubrl
out
sub
insb
push
xchg
push
mov
jge
fcomi
inc
adc
inc
cmc
enter
out
dec
decl
fdivrs
das
xor
xor
xchg
and
jno
mov
adc
pusha
xchg
sti
inc
les
fdivrs
adc
outsb
addr16
cmp
push
fsubrl
call
mov
mov
lret
fnstsw
xchg
push
cmp
push
sub
into
and
push
xchg
push
inc
imul
in
jmp
or
cltd
inc
push
pop
mov
fs
and
push
addb
and
loopne
int3
pop
pop
jb
adcb
fdivl
mov
js
add
fnsave
inc
xor
push
insl
cmp
je
negb
inc
xchg
popa
push
ds
mov
fcomp
fimull
adc
fidivrl
test
xchg
add
adc
jb
leave
inc
mov
out
call
pop
xor
ret
in
ja
idivb
shlb
rorl
mov
jmp
in
cld
adc
daa
xlat
pop
pop
stc
push
mov
setge
or
add
or
movsl
fcmovnbe
movsl
cmc
xchg
fildl
mov
and
jae
inc
push
cmp
cwtl
sub
xchg
fsubr
in
and
leave
add
jl
enter
sti
aas
adc
gs
sub
popa
jl
pusha
sbb
add
adc
push
lds
outsb
mul
or
out
das
ds
inc
clc
repz
xchg
xlat
dec
fsubrl
mov
jge
adc
mov
cmp
xchg
in
dec
mov
mov
add
pop
aas
out
hlt
arpl
cmpsb
lea
add
or
sti
idiv
arpl
xor
mov
push
mov
call
sti
cmp
xchg
jl
mov
or
push
rclb
aam
adc
cmp
in
cltd
mov
ret
idivl
mov
repz
cmp
popa
jmp
jp
inc
rorb
mov
sub
inc
sbb
or
mov
cmp
mov
ja
pop
pushf
out
jb
xchg
jbe
lods
push
outsb
fsub
push
mov
imul
enter
je
cltd
mov
mov
push
out
cmp
or
xchg
cltd
pop
mov
push
cld
movsb
mov
xchg
pop
cmpsl
xchg
insl
and
subb
mov
xchg
xor
sbb
sbb
lcall
stos
clc
jb
ja
out
cmp
mulb
rorb
addr16
and
push
cmp
jecxz
mov
mov
mov
into
xchg
stc
sub
dec
push
scas
jle
icebp
loope
ret
pop
jmp
out
ljmp
insl
jp
pop
ds
ljmp
inc
or
push
shlb
arpl
cmp
xchg
cmp
lock
lds
cmp
int
and
jmp
add
sbb
popf
pop
xchg
mov
push
mov
pop
push
fcoms
adc
outsb
leave
sub
aas
mov
call
push
fldl
sub
addr16
call
outsl
push
stos
cltd
push
sub
push
fstl
xchg
sub
ret
out
xor
adc
push
outsl
scas
add
xor
aas
inc
andb
adc
enter
aam
cmpsl
fsubr
movsl
fmuls
inc
mulb
sub
cmpsl
std
push
popf
out
outsl
or
push
xchg
adc
lods
jno
popf
lret
jecxz
fucomi
sbb
pop
mov
das
push
cmp
icebp
xchg
test
xchg
inc
dec
and
mov
mov
add
lret
bound
rorb
lret
mov
gs
or
cmc
repz
movsb
jo
cwtd
mov
mov
jo
sub
add
dec
aaa
inc
cmp
les
mov
insl
jnp
xchg
loope
push
mov
pop
ss
clc
mov
enter
cmp
sahf
lahf
xchg
mov
mov
and
mov
dec
mov
xor
inc
mov
mov
jmp
push
addr16
ss
mov
sbb
xchg
or
add
ljmp
jmp
movsl
mov
cli
inc
lcall
cmpsl
addl
mov
gs
dec
mov
jge
push
out
fisubrs
aaa
in
addb
mov
rorl
xchg
or
push
fbld
movsl
int3
dec
ljmp
and
or
outsb
add
xchg
pop
negb
insb
pop
push
mov
or
aam
mov
scas
insl
fs
push
shl
int3
dec
outsb
icebp
js
mov
add
shll
push
adc
xchg
jecxz
pop
repz
inc
sbb
in
stos
pop
mov
outsl
test
fisttpl
cwtl
inc
mov
mov
xor
push
in
push
cmp
es
sub
in
sub
mov
jp
ret
and
pop
pushf
lock
push
in
nop
pop
jo
fbld
adc
adc
popa
mov
and
insl
inc
in
xor
outsl
add
cmpsl
outsl
shrl
push
or
cld
xchg
pop
in
sbb
or
cmpsb
inc
mov
sub
sbb
fnstenv
mov
cmp
std
es
sub
sub
scas
push
mov
cmp
mov
xor
std
insl
cmp
shll
ljmp
aam
imul
sbb
xor
fucom
dec
cmp
lods
jne
jne
adc
divl
pop
bound
dec
lret
jns
ja
clc
rcr
add
mov
leave
in
and
out
mov
pusha
adc
xor
pop
add
push
or
mull
loop
outsl
sbb
xor
aam
cmp
mov
int
aad
fisttpl
push
sub
jns
stos
mov
xor
adc
cli
dec
mov
jp
sahf
pusha
pushf
jne
cmpsb
adc
inc
mov
push
outsb
ficompl
fwait
pop
cmp
pushf
inc
rcll
jle
or
add
xor
shr
mov
xor
shl
jmp
sbb
adc
mov
and
popa
lds
or
push
dec
cmpsl
sub
push
xor
lea
mov
cmp
ss
aam
sbbl
loopne
jmp
cmp
mov
jne
out
ret
or
sbb
push
pop
and
jbe
adc
push
repnz
fidivrl
or
lock
adc
inc
mov
jne
icebp
or
xorl
inc
sbb
andb
pop
mov
and
test
inc
das
out
xchg
sarl
xchg
push
xor
and
jge
call
divl
add
push
dec
lea
xlat
in
divb
cltd
roll
or
pop
cld
lods
cmp
jno
inc
outsl
lea
lahf
loope
fcoms
in
adc
mov
in
out
sbbb
adc
sub
popf
and
mov
mov
loop
dec
push
and
jns
aam
push
sbb
add
bound
jecxz
fnsave
in
xchg
imul
jl
push
pusha
adc
xor
dec
cmp
inc
mov
ja
jmp
push
shrb
popa
xor
dec
out
pushf
int3
and
nop
xor
adc
lahf
lahf
sarl
test
roll
adc
test
in
loope
push
dec
pop
mov
scas
das
push
pop
jne
and
subl
cmp
lahf
mov
mov
adc
insb
outsb
in
xchg
lock
aaa
jge
outsb
or
bound
mov
xor
jbe
xor
jp
negl
jmp
sbb
out
out
mov
jno
aas
mov
cmp
cwtl
pop
mov
iret
push
test
dec
add
or
cltd
fdivrl
mov
xchg
sub
stos
scas
or
jbe
jb
mov
ljmp
jae
mov
jg
dec
in
jecxz
les
fstpt
lds
mov
shlb
ljmp
movsl
std
dec
test
ss
add
jnp
in
sub
pop
push
fisubrs
dec
aam
sbb
popa
pop
push
pop
popa
sti
shlb
adc
orb
mov
hlt
sbb
cld
sahf
shrb
stc
lahf
push
sub
mov
stc
push
rorl
jp
nop
dec
sub
sti
xchg
jns
add
mov
xchg
popf
loope
push
or
out
sbb
addl
jecxz
std
clc
repnz
push
mov
daa
in
add
mov
push
mov
xor
xorw
icebp
stc
push
xchg
and
mov
xchg
popf
stc
pop
sub
daa
push
adc
popf
jo
in
push
push
inc
sub
sub
cmpsb
mov
out
fldl
lret
xchg
flds
nop
jl
scas
pop
jnp
mov
xchg
mov
addl
aam
sbb
push
shr
cmp
mov
subl
les
xorb
or
bnd
in
and
fildl
pop
pop
js
cmp
and
dec
jns
or
das
loope
dec
test
into
pop
mov
pop
int
adc
test
loopne
cltd
and
adcb
push
or
xchg
or
xorb
loopne
stos
cmp
push
ret
lret
add
mov
aam
pusha
int
imul
push
es
divl
dec
cwtl
data16
cmp
mov
or
jb
in
cmc
rcrl
adc
dec
fimull
lock
dec
fsubl
push
inc
mov
std
mov
jae
sub
adc
popf
mov
add
leave
adc
das
cmc
inc
and
push
fstpl
loop
repz
aad
sahf
jl
inc
push
and
xchg
mov
jg
repz
cltd
push
es
sbb
movsb
add
sbb
and
push
and
out
sarl
stc
out
mov
ret
adc
js
push
mov
into
loope
mov
mov
xlat
mov
mov
adc
dec
add
pop
xchg
pop
in
sub
ret
xor
mov
xchg
fdivrs
add
addr16
mov
and
jns
jp
jbe
push
sahf
pop
xchg
fwait
sti
push
xchg
rolb
outsb
push
pop
adc
scas
dec
xchg
int
loope
jb
clc
pushf
int3
mov
pop
daa
mov
out
pushf
int3
cltd
fucomip
mov
aam
mov
test
std
cmc
pop
jae
xor
dec
sbb
sbb
cltd
cmp
mov
andb
push
push
mov
mov
lds
jnp
adc
mov
rolb
adc
subl
cmp
mov
js
mov
dec
lods
xchg
mov
popa
add
add
jno
or
test
popa
in
cmp
ljmp
repnz
pop
mov
sbb
lock
call
sub
inc
push
dec
pop
inc
sbb
aam
cmp
inc
xor
or
mov
in
stos
outsl
test
ljmp
scas
jl
stc
xchg
dec
xor
xchg
pusha
cld
sti
ljmp
and
mov
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
jmp
add
cmp
adc
sti
add
jnp
jl
or
iret
add
or
adc
xchg
movsb
sbb
in
in
fildl
mov
ljmp
outsb
ficompl
int
jno
push
sub
aam
call
fsubs
xor
rol
fiaddl
mov
in
ljmp
shll
out
addb
mov
int3
sbb
xchg
shlb
clc
scas
fcomp
outsb
mov
sbbb
inc
cld
sub
push
gs
sbb
cwtl
rorl
push
call
jmp
lds
jg
inc
adc
daa
inc
adcl
sub
jno
lret
cmpsb
push
sub
fwait
mov
divb
aad
fdivrs
mov
cmp
cmp
loop
or
jbe
in
sbb
jnp
sbb
sbb
push
insl
adcl
inc
sbb
out
js
xchg
outsb
movsl
ljmp
push
inc
bound
inc
xor
jmp
aaa
adc
jg
push
xor
loopne
repnz
call
adc
and
cmp
test
lods
in
mov
inc
or
js
repnz
adc
pop
loopnew
loope
lcall
adc
jne
loope
lds
sbb
mov
xchg
mov
jbe
cmp
pop
sbb
cmp
shrl
jnp
adc
ja
dec
inc
sbb
sahf
mov
sti
ds
test
inc
inc
sbb
mov
or
mov
scas
ljmp
pop
push
cmpl
outsb
push
mov
pop
fwait
xlat
nop
popa
lahf
mov
sarb
fdivs
fcompl
bound
push
jp
push
mov
subb
pushf
sub
cmp
fnsave
push
fldenv
icebp
pop
cld
sub
sbb
add
mov
sbb
push
and
std
enter
incl
movsl
gs
lcall
test
xorl
outsl
jmp
out
push
fwait
mov
mov
sbb
in
pop
cmp
jb
es
fnstsw
loop
adc
or
jmp
mov
aas
push
and
adc
pusha
xor
cwtl
xor
data16
xor
add
dec
std
out
dec
in
repnz
lods
std
adc
bound
ficompl
loop
cmpb
mov
mov
adc
sbbb
js
jmp
dec
pop
cli
add
aad
cmp
mov
test
push
mov
mov
aam
fcmovnu
mov
mov
pop
icebp
int3
xor
sbb
xor
adc
dec
aam
imul
fimuls
cmpsl
and
rcrb
inc
in
jecxz
imulb
sbb
aad
mov
in
cmpb
loope
push
xorb
imul
mov
insl
sahf
out
dec
in
lea
imulb
cmp
out
dec
mov
mov
jp
hlt
incb
add
sti
cmpl
je
shlb
push
dec
push
fisubrs
and
popa
popa
cmp
movsb
imul
pop
sub
popf
and
lock
push
push
cmp
pop
clc
sahf
sbb
lcall
cwtl
test
mov
xchg
cmpsl
sti
sub
je
pushf
adc
enter
outsl
pop
or
inc
shlb
xor
imul
mov
roll
jno
add
pop
xor
jl
lds
xchg
cmp
pop
sbb
xchg
dec
shr
in
mov
xor
mov
xchg
push
mov
ja
adc
enter
lret
dec
xchg
ss
push
mov
mov
leave
adc
jle
repz
push
adc
cmp
pushl
mov
aad
or
sahf
pop
stc
test
pop
rol
xor
cltd
or
jns
imulb
sbb
mov
out
inc
sbb
test
les
mov
mov
mov
lods
xchg
ret
adc
loope
fnstenv
in
arpl
int
fcoml
nop
and
fistpl
pop
subb
and
call
test
and
jecxz
sbb
movsl
xchg
enter
test
pushw
sbb
fcmovnbe
loope
xchg
lods
popf
ret
mov
xchg
lock
sti
push
repnz
outsb
lret
stos
clc
cli
jg
adc
ljmp
into
sbb
insb
xor
inc
cmpsb
jmp
mov
jns
pusha
icebp
inc
pop
gs
sbb
dec
clc
jp
stc
inc
mov
in
lock
sbb
pop
cmp
lds
lods
cwtl
leave
and
adc
insl
jp
lahf
icebp
in
sbb
test
add
push
je
hlt
mov
xor
test
add
adcb
push
js
push
fsts
and
in
test
je
in
dec
insl
shlb
push
xchg
mov
hlt
mov
es
mov
adc
mov
inc
cwtl
popa
xchg
jae
leave
pop
insb
cmpsb
in
je
rorb
sub
dec
test
adc
add
orb
xor
xor
jmp
stos
ret
and
rorl
icebp
jge
cmpsl
xor
or
add
or
loop
cwtl
mov
jnp
in
mov
xchg
in
es
out
or
jbe
mov
shl
mov
adc
jbe
outsb
xor
cltd
xchg
aad
int
out
mov
stc
ret
jns
cltd
int
push
pop
adc
scas
cmpsl
test
jnp
mov
mov
cmp
fwait
iret
jno
inc
mov
stc
nop
jl
add
in
mov
out
lahf
fisubs
dec
inc
das
pop
jno,pn
stos
jns
lods
ret
push
iret
test
out
outsb
test
movsl
add
cmovae
adc
loop
nop
in
mov
push
fidivs
nop
jmp
pop
das
dec
jle
inc
inc
ds
pcmpgtb
popf
xor
aas
push
jo
sbb
ret
pop
in
out
mov
inc
cld
cmp
lret
loop
stc
in
in
mov
int
popf
gs
jle
sub
adc
pop
jno
dec
cmpsl
sub
jo
push
movsl
scas
adc
add
nop
jle
ljmp
pushf
stos
push
gs
popf
mov
adc
jns
jp
loopne
insl
rorb
ljmp
cmp
pop
jns
push
sbb
push
test
cmp
imul
ja
lods
js
sub
push
dec
pop
js
repnz
pop
cmp
pop
mov
std
in
sub
jge
jbe
out
push
in
add
cli
mov
into
out
xor
call
mov
lahf
mov
cmp
sti
adc
push
jne
jecxz
inc
pop
addl
cs
dec
jnp
push
push
add
dec
js
inc
test
idivl
pusha
dec
lock
or
fwait
inc
mov
ja
push
cmp
test
lahf
loope
mov
pop
jp
das
es
fsubrs
ja
int3
sub
jg
in
shrl
xchg
or
bndldx
jnp
insl
adc
clc
out
notb
mov
call
sub
cmp
add
std
leave
or
gs
mov
sub
sub
or
or
pop
movb
mov
out
inc
sahf
sar
clc
std
stos
mov
in
push
or
divl
hlt
dec
mov
sbb
cs
movb
xchg
pop
xor
lret
out
pusha
ss
fnstcw
sbb
adcb
adc
dec
in
pop
xchg
pop
adc
mov
call
repz
mov
push
add
push
cmp
and
mov
jmp
stos
inc
inc
and
jno
lds
or
imul
add
sub
or
loopne
adc
sub
gs
jo
xchg
jnp
fwait
aam
fnstenv
mov
popa
adc
aad
lcall
jae
int3
jg
test
and
in
lret
xchg
cmp
or
pop
jbe
xchg
push
hlt
out
cmpsl
fwait
nop
mov
cmp
scas
clc
ss
rcrb
pop
jmp
xchg
inc
jo
lret
mov
fdiv
dec
and
mov
sub
popf
aam
xchg
cli
je
cmp
sbb
pop
adc
cld
pop
add
cli
ss
pop
sub
popa
into
mov
scas
loop
icebp
pop
imul
xor
cmp
in
iret
cmp
push
or
sarl
enter
xchg
sub
inc
jne
inc
mov
outsb
xor
outsb
adc
adc
stos
ja
jmp
lea
mov
dec
xchg
aad
out
cmpsb
or
jnp
addl
jmp
inc
xchg
cmp
xor
sub
daa
and
xor
lcall
int
sub
fdivrs
push
cmp
mov
jl
pop
mov
cmc
mov
fldl
insl
inc
push
out
test
jge
ret
mov
inc
mov
es
jo
xor
xchg
enter
iret
out
lods
pop
aad
xor
test
cmp
mul
inc
mov
mov
push
cmovae
pop
fwait
iret
mov
lret
sub
shll
fstpt
cmc
fildll
jae
adc
ja
push
movsl
jmp
flds
lret
loope
in
ret
mov
adc
sti
push
mov
xor
and
push
xor
jp
push
or
imul
jmp
or
mov
daa
arpl
mov
xchg
dec
outsl
cmpsl
push
sub
lret
jae
cmp
xor
cli
jns
mov
scas
dec
inc
call
cmp
push
out
in
dec
ror
dec
jmp
inc
lahf
dec
int
push
or
ds
sbb
sti
cmp
xor
cmp
out
icebp
xchg
jo
add
push
pop
and
xlat
hlt
push
dec
hlt
sub
addr16
jns
out
sbb
ret
mov
push
mov
or
jmp
cmp
and
pop
cld
push
dec
mov
inc
std
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
jmp
lea
xchg
enter
cmc
gs
clc
imul
or
gs
jecxz
xchg
inc
jbe
push
dec
cmc
fdiv
popa
lcall
jb
orb
and
scas
roll
data16
imul
jbe
shrb
jns
adc
cmp
sarl
ret
jl
xchg
orb
cmc
pop
leave
es
loope
jp
sub
adc
cwtl
mov
fisttps
jle
xor
and
add
adc
not
cmp
psubq
dec
int
clc
lret
fs
js
popa
and
rcrb
push
enter
aaa
xor
test
ljmp
outsb
lea
push
cmp
adc
popa
insb
pop
hlt
fistpl
repz
jb
jmp
cmp
mov
dec
adcl
pop
jo
add
jg
test
aad
roll
pop
sub
jle
cmp
orb
rorb
mov
icebp
mov
dec
aas
mov
dec
stc
aas
int
fiaddl
xchg
xorps
hlt
ljmp
mov
hlt
std
test
jno,pn
stos
movsl
mov
std
add
jo
nop
push
icebp
jbe
inc
xlat
sub
xchg
clc
popf
inc
ficoms
jl
push
sbb
repnz
cld
inc
aam
pop
xor
insl
pop
lret
mov
xchg
es
loope
add
cmc
mov
enter
cmpsb
dec
cmp
jmp
cld
sbb
ss
or
bound
pop
dec
push
mov
mov
jno
mov
popa
enter
cwtl
add
pop
dec
lret
or
out
call
mov
mov
stos
push
fs
mov
loope
mov
or
lods
cld
insl
lret
mov
push
adc
and
mov
mov
leave
ljmp
dec
add
sub
jo
sub
mov
xchg
daa
ret
testb
outsb
sub
inc
xor
jns
sub
add
xor
rcrl
add
adc
cld
fstpl
sbb
loop
push
mov
cwtl
mov
pop
call
jnp
jbe
cmc
xchg
cmpsl
stos
hlt
pop
nop
xchg
inc
dec
jno
xor
pop
push
pop
and
mov
fists
icebp
in
adcb
out
adc
mov
adc
lock
or
pop
dec
cmpsb
xchg
mov
lahf
sbb
aad
data16
scas
dec
ds
cmc
mov
push
clc
testb
xlat
bound
movsb
jle
dec
and
jecxz
cwtl
add
shll
jl
lds
scas
sbb
xlat
cwtl
pop
movsl
imul
mov
cmp
out
cli
out
adcl
int
mov
int
jae
cmpsb
popa
fildll
mov
adc
into
roll
inc
repz
hlt
and
pop
movsl
cmp
rcr
and
stos
and
out
jns
loope
aaa
push
xchg
or
andl
or
xchg
fidivrs
push
mov
xchg
loop
xchg
lods
jns
fnstenv
or
rcll
mov
dec
push
fs
inc
xorl
leave
mov
inc
dec
cmc
jl
sahf
or
lahf
mov
stos
imul
aas
push
dec
add
out
adc
inc
jae
mov
xor
cmc
add
inc
repnz
js
sbb
mov
jp
adc
cmp
dec
mov
pop
lahf
sub
jg
cli
adc
sbb
popf
mov
push
imul
std
push
xchg
scas
jbe
xor
cmp
insl
test
cmp
cmp
pop
jmp
cmp
or
icebp
or
add
outsb
mov
ret
jbe
das
inc
ss
or
pop
dec
popa
jle
xor
sahf
jo
sti
mov
lea
adc
mov
add
pop
mov
inc
pop
xor
stos
pusha
jmp
push
out
gs
mov
inc
int3
lods
xor
add
cwtl
push
mov
fs
aad
fsubrl
mov
outsl
fcoml
xor
in
sub
push
mov
or
loope
test
jnp
push
pop
push
cld
negw
in
gs
mov
inc
add
int3
push
shrb
add
and
jae
in
cmpsl
dec
and
inc
sub
outsl
push
js
lahf
loop
jne
in
outsb
das
push
mov
test
popf
test
sbb
pop
iret
pop
hlt
pop
dec
dec
xchg
pop
add
xchg
ret
lcall
ja
pop
pop
xchg
and
data16
xchg
cld
mov
stos
loope
orl
xor
push
mov
dec
cli
xor
or
rdmsr
push
push
jmp
xchg
imul
std
arpl
outsb
add
pusha
ja
repnz
mov
ss
enter
pop
std
imul
loopne
jb
rorl
jmp
pop
mov
insl
ss
cs
dec
scas
sub
mov
push
push
push
call
shld
mov
xor
or
mov
mov
jmp
ja
popf
adcl
pop
fisubrs
clc
mov
scas
or
iret
add
or
stos
pop
loope
fs
inc
sub
push
lahf
jnp
push
ja
jecxz
pop
cli
lods
jns
jg
je
jns
int
sub
xchg
pop
sub
add
xor
int3
test
imul
sbb
mov
lret
push
sbb
jmp
insl
ds
mov
mov
and
add
movsb
icebp
loop
ret
adc
in
insl
jne
dec
daa
xchg
adc
xor
pop
mov
xor
fildll
subl
loope
xchg
jmp
cmp
rcr
test
mov
dec
iret
pop
push
adc
add
adcl
adc
mov
mov
jl
arpl
in
imul
arpl
sub
insb
movsl
pop
inc
jl
stos
sbb
scas
lods
push
into
and
nop
pop
not
in
or
mov
andl
inc
mov
cld
int3
inc
dec
xor
adcb
push
outsl
js
in
add
sub
mov
xorl
imul
fcoml
push
xchg
or
faddl
clc
loopne
push
arpl
inc
les
push
dec
jne
lds
adc
in
arpl
pop
or
lret
or
mov
mov
xor
xlat
inc
ja
pusha
adc
mov
fst
dec
hlt
movsb
lret
icebp
inc
lahf
loopne
push
adc
push
fsubr
jle
xorb
mov
jp
fbstp
lods
sub
adc
mov
jle
or
mov
sub
loopne
pop
inc
out
cmpsb
stos
cmp
mov
gs
sub
mov
mov
mov
lods
stos
shlb
sbb
rorb
out
dec
jae
fistpl
mov
out
pop
xor
mov
clc
aaa
ret
sbb
arpl
jae
and
lahf
js
dec
subb
into
xchg
or
sbb
es
sbb
sub
mov
mov
xor
jge
imul
scas
sub
mov
push
bound
push
jmp
dec
jmp
mov
aaa
daa
lock
cmp
sbb
sar
es
sub
and
loop
notb
pop
lock
ds
divb
out
cld
daa
dec
iret
adc
rcll
sbb
scas
in
lahf
inc
xchg
jb
pushf
aas
std
pop
jo
jnp
fcompl
push
add
std
and
mov
test
sti
rorb
stos
lret
jbe
sbb
ret
inc
jmp
inc
ret
sbb
pop
jno
and
mov
enter
dec
or
jno
lahf
sbb
push
cs
imul
dec
sub
dec
mov
fs
mov
mov
mov
insl
mov
push
add
pop
int3
xlat
neg
adc
aam
mov
sub
and
shl
stc
cmpsb
pop
xor
push
add
xor
mov
rcl
or
jnp
jb
cmp
cmp
push
outsb
and
js
popf
scas
mov
push
jno
out
dec
mov
xchg
sub
push
js
xor
push
loop
mov
push
pop
dec
sbb
inc
in
aad
out
and
int3
hlt
rolb
mov
das
movsb
incb
je
mov
and
push
sub
js
adc
jb
or
push
xor
adc
mov
loopne
sbb
or
adc
adc
insl
ss
xchg
mov
jl
mov
inc
mov
decl
or
add
pop
and
fwait
lret
cmp
jbe
shl
enter
insb
jmp
enter
push
jle
stos
pop
jp
test
push
cmp
inc
xlat
addr16
lahf
adc
in
xlat
outsl
scas
mov
mov
mov
dec
test
cs
adc
cld
into
mov
inc
fs
add
mov
sbb
and
jge
jmp
dec
and
stc
xchg
test
jmp
stos
adc
mov
fiaddl
adc
outsb
in
inc
xchg
repnz
sbb
jno
test
rcrl
sub
adc
repnz
push
mov
lods
add
shrb
mov
push
or
int
ljmp
loope
mov
mov
jl
shl
mov
dec
loop
sub
xlat
sahf
mov
or
lret
ret
push
lods
mov
sub
cli
sub
or
lcall
jmp
ret
mov
shrl
mov
jne
xor
cld
sub
dec
mov
xor
xor
test
std
push
cmpsb
mov
and
sbb
test
fimuls
lods
ljmp
inc
data16
mov
push
leave
xchg
inc
cmpb
push
jb
mov
popa
test
add
mov
mov
adc
add
cmp
rolb
shll
and
jb
aam
aam
out
lret
mov
repz
push
dec
cmp
xchg
loop
or
arpl
lods
mov
daa
inc
scas
jnp
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
jmp
pop
and
aaa
out
adc
and
fnstenv
pop
or
iret
add
or
xchg
cmpb
enter
lcall
lea
lea
pop
mov
iret
stc
sbb
xchg
cmc
lds
xchg
cmpsl
fidivrl
mov
dec
fcompl
jl
mov
xor
sub
cmp
mov
or
int3
adc
pop
in
xchg
mov
aad
das
xchg
jle
push
fs
jno
push
inc
mov
insl
cwtl
lds
lcall
sbb
and
pusha
push
std
xlat
or
or
push
pop
pop
or
aad
sub
cmpsb
jae
sub
sbb
adc
aam
sbb
sti
jno
insb
jns
adc
mov
mov
xor
xchg
data16
in
out
fwait
or
pushf
out
mov
dec
or
push
mov
cmp
sub
xchg
outsb
inc
xor
or
dec
ja
aad
mov
inc
out
jnp
push
and
pop
aad
mov
aad
xchg
and
cmpsl
add
divl
jae
call
xchg
not
fwait
jae
rorb
cmc
cmpsl
sarl
clc
clc
rcll
cli
sar
loop
addr16
mov
mov
xchg
jnp
lahf
push
jl
xor
dec
inc
mov
in
push
jle
dec
or
cmp
add
jbe
icebp
push
pusha
jb
and
mov
ljmp
inc
in
dec
sbb
push
pop
mov
and
dec
mov
ficomps
sub
jge
sub
adc
lahf
out
daa
test
pop
ror
jne
xor
jno
add
dec
push
ffree
ja
pshufw
cld
jmp
ss
mov
xchg
push
or
sub
push
mov
and
xor
jg
xchg
arpl
hlt
dec
inc
sarl
mov
mov
lret
xchg
popa
pop
loop
xchg
out
cs
repnz
ret
pop
mov
push
out
jp
cmc
sbb
and
inc
inc
cltd
push
fsubp
and
dec
imul
xchg
shl
inc
and
or
push
sub
ror
shlb
lcall
pop
icebp
push
loope
xorb
push
xchg
or
popa
cmp
pusha
inc
xchg
popf
inc
int
das
cmpsb
repnz
inc
xor
icebp
jge
data16
inc
pop
iret
ja
mov
xor
inc
cs
dec
xlat
loope
sub
das
out
mov
sbb
sbb
push
and
imul
dec
cltd
sbb
rcrb
lods
dec
mov
insl
mov
inc
adc
mov
int3
js
mov
sub
mov
pop
mov
out
and
lods
pop
jb
fs
mov
jne
xor
mov
fadds
pop
cs
jnp
arpl
mov
adc
cwtl
or
imul
arpl
lcall
mov
inc
add
sub
repz
stc
or
in
enter
ficompl
std
fisttpl
das
dec
imul
lods
ret
imul
lock
jnp
xor
mov
sti
push
sub
cs
shll
pop
dec
icebp
test
adc
pop
adcb
iret
iret
xchg
ror
sahf
pop
scas
dec
add
pusha
adc
inc
jnp
test
cmc
cmp
xor
fcom
fs
mov
push
inc
xchg
pop
sti
jge
int3
je
leave
mov
or
lret
lret
and
jnp
sar
jge
mov
cmp
ss
mov
dec
mov
adc
sbbb
pop
stos
andb
push
and
lods
leave
cmp
test
push
add
sub
nop
xchg
lahf
or
and
fistl
xchg
in
scas
cwtl
sub
int3
fdivl
mov
call
jl
ljmp
mov
or
xchg
xor
mov
push
sub
lcall
out
rorb
cmp
push
in
inc
addr16
shll
jnp
dec
xchg
pushf
ret
jb
xchg
pop
pusha
sbb
inc
and
jne
mov
movsb
aaa
pop
outsl
jno
mov
mov
dec
xchg
daa
lods
dec
xor
dec
test
and
loop
es
fildl
mov
rclb
xchg
pop
pop
cltd
xlat
nop
mov
jg
arpl
mov
add
stos
xchg
loop
xlat
mov
pop
push
fwait
jge
mov
mov
pop
xlat
dec
and
xor
paddq
test
ffreep
sbb
aas
inc
fisubl
pop
mov
cmp
mov
add
test
aaa
popf
pop
sub
lret
sub
sbb
sbbb
fdivrs
cmp
out
mov
sbb
das
enter
dec
xchg
mov
scas
pmulhw
fistpl
out
dec
add
xor
lods
mov
add
insb
outsb
pop
mov
xchg
nop
jecxz
xor
mov
xorb
mov
mov
xchg
cmp
xchg
hlt
dec
loopne
mov
mov
mov
mov
sbb
or
push
cmpsl
xor
dec
sub
movsb
inc
arpl
add
inc
aad
aad
dec
xchg
mulb
dec
or
iret
add
or
outsl
push
sub
bnd
and
jno
int
xor
or
sbb
push
sbb
dec
lea
dec
cmp
jg
call
imull
jl,pn
fs
sub
sub
sub
idivb
and
into
mov
inc
gs
shr
nop
int3
mov
cli
icebp
testl
scas
out
mov
push
mov
jge
dec
mov
rorl
add
or
sti
jns
daa
xchg
push
loopne
ljmp
mov
orb
loope
outsb
sbb
lea
aas
and
sbb
out
sti
pop
cmpsb
inc
jnp
pop
stos
add
inc
or
inc
aas
jns
shr
jo
nop
iret
testb
sbb
xchg
xor
push
and
dec
insb
mov
pop
test
dec
xchg
dec
outsl
ret
icebp
sub
aaa
inc
xor
jmp
pop
aaa
lcall
out
push
fmul
lret
int3
sub
jl
sarl
fstpl
in
aam
lret
outsl
mov
insb
inc
lock
cmp
and
jecxz
adc
test
mov
fcoml
jecxz
pop
in
adcb
dec
push
stos
adc
pusha
clc
push
jo
push
jle
aam
push
addl
loop
into
sahf
hlt
and
or
int
mov
jb
sbb
cwtl
jecxz
lcall
scas
test
aam
pushf
call
push
xchg
iret
dec
in
jae
aas
mov
dec
xor
lods
sub
mov
nop
jae
cli
jno
jg
mov
int3
cmp
in
and
inc
lahf
dec
inc
mov
and
mov
xchg
lea
loopne
pop
cmp
mov
sub
fimuls
mov
add
negl
stos
hlt
or
mov
scas
sbb
or
xchg
inc
daa
adc
int
call
popl
lock
je
pop
orb
push
xor
sub
pushf
outsb
inc
imulb
ret
and
add
mov
mov
inc
loop
fwait
mov
shll
jecxz
xor
loopne
mov
ds
inc
sub
sub
cs
add
mull
xchg
and
xchg
mov
pushf
or
cmp
pop
add
push
loop
movsl
mov
xor
mov
mov
or
push
add
and
jge
cmp
jns
dec
loope
push
jmp
cltd
push
test
aas
mov
movsl
pop
add
jae
fs
dec
push
mov
sub
xor
xor
arpl
popf
int
scas
jnp
aad
sbbl
es
mov
jae
and
cmp
mov
and
jb
dec
pop
jns
xchg
inc
hlt
dec
clc
mov
and
scas
jno
je
and
fiaddl
in
out
repnz
adc
rcrl
orl
jl
pop
xlat
and
add
dec
mov
repz
push
push
mov
daa
cmp
ficoml
cmp
fmull
je
sahf
add
stc
jno
jecxz
inc
out
jb
jle
mov
sbb
sbb
sub
out
jl
push
sub
stos
sahf
xchg
arpl
xor
push
push
ljmp
daa
lcall
cmp
arpl
loop
xchg
fadds
xchg
mov
jb
push
mov
neg
ret
fstps
aaa
stc
cmpsl
movsl
repnz
mov
jecxz
outsl
dec
or
call
mov
pop
lahf
es
sbb
mov
jl
and
in
nop
push
test
and
push
pop
sub
jg
xor
out
sti
add
mov
pop
dec
arpl
pop
jae
frstor
mov
sub
lcall
bound
jnp
push
imul
cmp
sbb
js
scas
pop
pop
fadds
imul
cld
xchg
mov
insb
dec
jl
pop
lcall
and
dec
sub
mov
mov
or
or
orl
add
mov
or
out
pop
rcr
pushf
lret
mov
and
pop
sbb
lret
jns
pop
push
add
xchg
sti
cs
popa
push
shll
inc
mov
inc
xchg
mov
pop
stc
clc
inc
xchg
jmp
ret
mov
popa
imul
xor
xchg
cmpsb
mov
inc
je
call
and
mov
in
fmul
rcrb
outsb
sbb
push
rcrb
out
clc
and
and
xchg
lcall
mov
push
push
sbb
cmp
adc
test
call
adc
mov
lds
jo
ds
add
fs
nop
lods
adc
push
mov
jge
sub
pop
shlb
or
jae
cmc
adc
out
jg
shl
das
fsubl
dec
loopne
adc
mov
es
and
and
mov
xchg
test
rcll
pop
jae
shlb
scas
push
push
xchg
addr16
cmp
lret
stc
and
jnp
mov
leave
mov
in
nop
ror
inc
je
fcomi
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
jmp
push
pop
sub
das
and
in
mov
inc
or
iret
add
or
leave
fisubl
jbe
and
adc
jge
jne
push
and
and
mov
bound
sub
test
in
arpl
mov
dec
inc
mov
pop
mov
xor
call
cmpb
scas
inc
xlat
cld
add
jl
xchg
std
mov
sub
mov
push
and
sbb
ja
push
push
pushf
out
or
add
rcll
sub
cmp
movsl
in
pop
aad
rcrb
gs
inc
iret
jb
nop
lret
pusha
loope
jne
mov
loope
sub
mov
gs
push
rcl
pop
mov
mov
ljmp
and
sbb
push
popl
inc
dec
dec
dec
xor
mov
scas
movsw
xlat
mov
outsb
shlb
inc
push
sub
add
fwait
xchg
xchg
xor
add
cmp
sub
cs
xor
shrb
sbb
leave
jl
jg
xor
mov
dec
aas
mov
xchg
into
mov
dec
cs
lea
mov
repz
cltd
cmp
popa
jle
adc
fisttpll
and
or
fsubs
mov
rcll
test
aas
mov
inc
shll
int3
mov
xchg
inc
or
cwtl
leave
cwtl
mov
mov
xorl
in
mov
mov
leave
pop
dec
fldenv
push
mov
repnz
jae
push
scas
outsb
insl
mov
scas
dec
xor
pop
xor
out
adc
testl
fwait
es
mov
imul
icebp
push
sbb
es
lods
in
or
std
sahf
xchg
popf
fldt
push
push
mov
fbld
adc
inc
dec
cld
insb
sbb
xchg
dec
sbb
out
fldcw
test
es
shll
call
jns
ds
sub
mov
ficomps
jge
out
lock
imul
lock
int
mov
xchg
insb
andb
enter
add
scas
xor
ret
lahf
inc
jb
sar
sbb
sub
mov
sbb
xchg
mov
mov
mov
daa
xor
ja
inc
clc
sub
frstor
es
push
add
push
enter
ja
lods
dec
ljmp
and
das
mov
jmp
das
ljmp
dec
in
das
or
add
cmpsl
add
pop
lret
sub
pushf
dec
lret
adcb
xor
jo
shll
mov
popl
sahf
mov
pop
inc
sbb
popa
xor
sarb
loopne
outsb
sbb
es
sahf
rcr
jmp
inc
imul
rcr
pop
in
xchg
add
sub
inc
cmpsl
and
ret
dec
mov
dec
xchg
sahf
mov
daa
dec
or
out
data16
gs
test
cmp
divb
jb
mov
pusha
sub
mov
popf
out
or
dec
dec
sub
arpl
xchg
xchg
es
mov
sbbl
and
and
sbb
mov
add
iret
xor
mov
int
sbb
mov
scas
cmp
lea
pop
std
dec
movsb
lds
fstl
cmp
jb
std
addr16
out
and
jmp
lock
mov
or
insl
repz
adc
jp
mov
add
nop
inc
iret
das
iret
or
cs
inc
rcll
pop
addl
adc
xor
jmp
sbb
inc
cmp
ds
mov
out
push
mov
push
push
push
mov
xchg
add
aas
push
cltd
xchg
data16
dec
inc
mov
dec
mov
jb
lds
xchg
mov
fwait
dec
aaa
lods
inc
dec
pop
cli
sbb
mov
mov
je
roll
call
mov
stos
leave
and
int
cmp
int3
out
inc
sbb
scas
in
gs
and
out
or
sbb
sbb
filds
xchg
dec
insb
jnp
dec
cmp
pop
push
fs
cmp
pop
pop
cli
test
js
and
xchg
push
jo
ret
sub
add
fcoml
push
scas
sub
add
int3
xchg
pop
push
push
sbb
fildll
xorb
cmpsl
unpckhps
push
scas
inc
add
inc
mov
mov
inc
ja
das
pop
jnp
jns
mov
rolb
and
mov
fisttps
repz
arpl
xchg
mov
fdivp
dec
xor
pop
pop
movsl
push
shl
add
pop
sbb
out
inc
lahf
pop
test
out
cmp
in
push
fsubrs
xor
insl
imul
pop
movl
mov
test
rolb
data16
lret
add
mov
push
lock
shr
mov
mov
xor
jmp
xor
addb
mov
jne
push
jns
xchg
xor
or
add
or
sub
or
rep
inc
mov
scas
lods
repz
inc
mov
fisubl
jle
or
xchg
pop
inc
mov
mov
or
lods
jle
and
mov
mov
lahf
clc
or
into
test
mov
pushl
and
orb
cwtl
jne
out
xchg
incb
jae
stc
push
test
pusha
test
inc
adcb
pop
movsb
es
sbb
loopne
pop
dec
fbstp
cwtl
stc
fldt
lahf
ret
loopne
data16
sahf
inc
push
mov
mov
mov
mov
stc
xchg
sahf
fucom
repz
loope
xchg
loopne
jnp
mov
shrl
push
ss
adc
inc
dec
lcall
mov
iret
and
imul
cmp
fldl
pop
test
pop
stc
or
add
dec
and
nop
inc
mov
push
aaa
fst
fiaddl
add
add
add
sahf
and
or
mov
jl
pop
xor
add
lods
mov
pop
fsub
lds
pop
jle
sahf
xchg
insb
hlt
nop
adc
dec
dec
mov
push
ljmp
scas
jge
mov
sbb
mov
jno
in
xchg
js
stos
or
out
lock
ret
aad
dec
shll
loopne
lret
insb
test
cld
repnz
xor
sbb
mov
push
or
inc
pop
cmp
sti
std
loope
mov
jg
incb
repz
add
sarl
xchg
cltd
sub
rcl
and
dec
push
test
xchg
push
pop
adc
test
jbe
out
inc
je
dec
dec
popf
pusha
inc
pop
ljmp
mov
scas
fmuls
arpl
cmp
xlat
xchg
or
mov
mov
and
pop
fcmovne
cmp
mov
sarb
std
jge
jecxz
adc
adc
mov
not
adc
jle
sbb
or
and
iret
call
pusha
sub
sub
jae
rorl
ficoml
pop
xchg
loop
nop
dec
jg
scas
popf
jp
jbe
and
mov
pop
jle
sbb
xchg
sbb
sbb
cli
rorl
and
clc
sahf
pop
dec
popf
mov
sub
test
cmpsl
aas
push
movl
int3
in
out
loop
xor
stos
scas
test
icebp
sub
fdivs
inc
addr16
pushf
mov
adc
adc
loop
jns
daa
push
sbb
mov
sbb
and
inc
jo
mov
clc
ret
ljmp
mov
test
aam
dec
mov
fcompl
stos
in
movsb
sbb
mov
adc
push
cli
rorl
mov
mov
mov
and
adc
jle
out
xchg
das
xor
repz
cli
cwtl
sbb
xchg
out
xor
rorb
aas
or
es
mov
repnz
or
lds
push
mov
insb
stos
in
sub
push
shl
dec
adc
mov
inc
nop
daa
loope
jne
cld
cli
jo
daa
pusha
push
mov
jle
nop
xchg
xchg
pop
mov
or
clc
mov
rcll
sarb
jp
jmp
loope
push
fbld
mov
lahf
push
mov
iret
imul
xchg
loop
push
in
ds
cmp
ret
out
sbb
aaa
pop
idivl
push
and
jp
pushf
pop
jle
mov
fstpl
ret
loop
daa
fistpl
sbb
cld
es
add
les
xorl
addb
incl
dec
dec
push
pop
out
pop
ja
fs
loopne
bound
bound
cmp
clc
repz
fwait
je
clc
imul
aaa
rcrl
sbb
bnd
jle
hlt
mov
mov
int3
add
push
pushf
lahf
xchg
mov
add
stos
pusha
jae
fld
pop
xchg
in
push
mov
push
or
cmpsl
scas
addr16
jnp
lret
out
cmp
jecxz
xchg
loope
dec
outsl
int
repz
push
pop
pop
or
push
mov
rolb
sbb
out
icebp
lcall
setbe
jmp
mov
arpl
into
out
or
shlb
test
jmp
test
inc
ja
rcrb
mov
push
scas
test
sahf
xor
and
cmp
fbstp
push
cmpsl
repz
push
xor
xor
fistl
vpminsw
cmc
sbb
xchg
or
fs
shrb
inc
mov
sarb
adc
mov
mov
lret
xorb
test
lods
fcmovnu
fs
insb
lret
xor
xor
mov
pop
scas
jne
xor
std
das
nop
lods
add
jns
and
jmp
shlb
mov
ficompl
ret
fmuls
adc
lods
filds
jne
pusha
stos
pop
cmp
adc
push
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
fbstp
mov
xor
and
ds
addr16
sbb
sub
or
fbld
fstpt
xchg
pop
in
xor
add
stos
test
mov
mov
mov
pop
mov
sbb
insb
jg
adcb
xchg
scas
aad
popa
inc
inc
into
mov
push
insl
repnz
pop
and
int3
stc
adc
rorl
jbe
lahf
imul
test
popa
std
in
mov
stc
adc
adc
andb
mov
mull
fcompl
cld
mov
sti
dec
add
or
jmp
insl
mov
lock
outsl
and
jae
dec
cmp
sub
addr16
jp
or
xorb
test
pusha
pop
dec
frstor
jns
in
mov
mov
cmpsb
ljmp
popf
addr16
aaa
jg
jg
add
bound
mov
mov
mov
fmull
sub
push
jg
jb
lret
inc
insl
cld
addr16
push
adc
cmp
push
sbb
js
add
repnz
sub
mov
lret
inc
int
fimull
jae
test
lahf
stos
pop
test
xchg
in
pusha
add
push
sbb
ret
sbb
imul
hlt
and
mov
inc
xor
aaa
adc
popf
in
pop
mov
adc
lods
clc
push
popa
xchg
mov
xchg
jae
lods
cmp
mov
jno
dec
aam
xchg
popl
mov
jge
ss
pop
popf
pop
jae
xchg
and
insl
jae
stos
cs
sub
push
lcall
ss
mov
imul
sub
ds
mov
sub
push
lcall
fucomp
xor
dec
lds
and
leave
lods
pop
es
mov
sbb
leave
stos
lds
xor
mov
ret
push
rcrl
in
xor
loop
inc
or
mov
push
insl
mov
fimull
mov
push
adc
inc
xchg
sbb
repz
adc
int3
std
xor
mov
adc
ja
fdivs
pop
jge
mov
mov
fistpll
lds
inc
test
pop
and
sbb
add
dec
or
push
cmp
out
xor
nop
cmpsb
add
es
lea
and
cmc
movb
mov
lret
aam
movsl
sbb
insb
scas
into
mov
in
pop
scas
call
sbb
dec
lret
inc
adc
lods
shll
cmpsb
pusha
mov
pop
fnstenv
mov
mov
in
mov
add
push
or
mov
clc
ds
sarl
mov
lock
addb
mov
popf
mov
push
add
or
sbb
lock
fprem
sub
movsb
fcoml
push
or
les
imull
aas
daa
and
push
cmp
inc
popa
dec
jo
mov
adc
fidivs
xchg
js
or
jle
out
fisubrs
iret
cmpsb
push
ds
pop
add
iret
xchg
popf
sub
pop
out
jno
xchg
fsts
xor
es
xchg
push
mov
movl
mov
inc
movsb
movsl
xchg
cmp
fbld
xor
cmc
cmpsl
arpl
sbb
ficomps
std
lcall
mov
mov
ret
push
mov
pop
sbb
mov
push
cmp
cmc
leave
in
push
pusha
scas
pop
divps
push
adc
and
fiadds
int3
lretw
mov
in
mov
imul
out
dec
sbb
cld
addb
popa
addr16
dec
je
mov
mov
clc
pop
lcall
gs
mov
das
icebp
xor
mov
mov
movsl
mov
and
cmp
arpl
xlat
movsl
shll
xor
stos
sbb
movsb
jo
or
mov
repnz
addr16
and
cmp
inc
sbb
cmpsb
push
roll
fisttpll
fwait
add
scas
mov
xor
sbb
mov
popf
dec
sbb
inc
lds
sbb
rep
cmp
xchg
cmc
stos
repz
xchg
jo
shll
push
pop
mov
or
mov
fidivl
shlb
adc
cmp
and
xor
popf
insb
dec
dec
push
cmpsl
jae
fldt
cwtl
int3
mov
cmp
jmp
test
or
idiv
lret
cli
lcall
mov
inc
cwtl
xchg
repz
fwait
inc
lea
sbb
pop
fcomip
movsl
lock
movsl
loopne
fs
es
dec
loop
cmpsb
xchg
pop
push
std
mov
insb
sahf
dec
push
mov
xor
jmp
rcl
popf
out
sbb
inc
inc
adc
in
xor
jg
jle
int
dec
mov
in
and
scas
stc
aaa
call
mov
add
mov
dec
xor
xchg
jge
and
cld
xor
cmp
stos
aam
jl
lods
sbb
xchg
push
testl
rolb
xlat
iret
jne
sub
lcall
adc
or
and
rorb
ret
add
or
mov
jmp
pop
idiv
insb
push
addr16
clc
fiaddl
mov
add
or
iret
add
or
jmp
mov
cs
xor
sub
cmpsb
sbb
sub
pop
inc
jmp
or
jno
push
push
sahf
push
repz
pop
xchg
cmp
cld
out
dec
adc
sub
sbb
mov
fisubs
test
je
mov
insl
inc
inc
fmull
cmp
test
xchg
jge
and
cli
loope
icebp
nop
es
imul
mov
push
mov
lret
jg
push
dec
rorl
bound
xor
leave
dec
jnp
inc
mov
jecxz
and
push
push
stos
cmp
jno
mov
lcall
jne
arpl
iret
add
addr16
subl
cmp
dec
push
repnz
bound
js
orb
sti
clc
cmpsb
bound
imul
cli
cmp
jb
adc
mov
mov
mov
cwtl
repnz
push
jp
mov
push
cli
push
ret
jmp
js
and
movsb
inc
out
hlt
inc
jne
and
mov
cltd
mov
fwait
ss
fistpll
mov
call
xor
adc
add
adc
xlat
cmc
add
xor
xor
inc
mov
fisubrl
cmp
out
xor
mov
and
fistps
jnp
rcrb
sub
adcl
scas
and
or
je
dec
push
clc
mov
stc
andb
repnz
jb
repnz
xchg
ret
hlt
je
xchg
fadds
out
nop
fwait
push
rolb
add
subb
inc
in
sti
mov
sub
jl
dec
ret
dec
cltd
adc
inc
dec
and
pop
mov
sub
pushf
mov
rolb
inc
dec
adc
int3
clc
test
add
out
sbb
sub
cmc
ja
inc
pop
sti
jmp
imul
lds
aam
std
xorl
das
imul
mov
into
lods
mov
out
push
jno
or
cli
rcll
xorl
dec
pop
repnz
mov
push
adc
pop
push
xchg
cmp
sub
imul
shll
xor
cld
adc
or
mov
add
add
and
lock
xchg
rclb
and
lea
add
aad
sub
lahf
adc
push
lea
outsl
mov
lcall
jo
subb
dec
and
sti
int
push
inc
adc
cs
adc
in
sub
or
xchg
ror
and
pop
negl
dec
scas
shl
mov
sub
or
loop
xchg
jne
sub
aam
mov
mov
jo
push
call
xchg
xchg
in
pusha
xchg
jge
pop
test
repz
sbb
gs
inc
int3
inc
mov
adc
pop
and
sbb
movsl
inc
cmp
cmpsb
fiaddl
mov
xchg
fnstenv
mov
test
adc
push
cmp
and
mov
loopne
jge
or
mov
xchg
push
adc
xchg
mov
cmp
push
shll
cmp
jg
push
lock
imul
pop
decb
sub
sub
sti
rcrl
int
fistl
je
fimull
aaa
lea
mov
adc
nop
push
or
or
sub
push
adc
adc
or
gs
push
std
test
add
inc
push
es
xor
int
jb
rolb
pop
rcrl
and
lahf
dec
sbb
and
xchg
push
jg
sbb
fdivp
add
mov
outsb
adc
outsb
pop
loope
lret
jle
out
mov
adc
lret
aaa
mov
sbb
pop
mov
movsb
mov
insb
push
movsl
xchg
cmp
pop
test
jnp
int
cmp
mov
test
int3
mov
mov
and
adc
mov
and
push
jle
mov
jns
mov
ja
add
cmp
xor
pop
sub
jle
ret
fcmovne
push
std
dec
filds
sbb
mov
pop
pusha
push
icebp
in
fs
int3
xor
mov
mull
fisubs
push
mov
mov
add
out
pop
pop
dec
nop
jno
test
push
cwtl
aaa
jno
mov
rcll
addl
lds
dec
sbb
loope
cmp
jecxz
inc
mov
inc
out
mov
movsl
xchg
mov
mov
sub
clc
enter
mov
mov
aaa
dec
mov
scas
daa
fstl
out
mov
dec
push
dec
jae
movsl
sub
fxrstor
jg
mov
faddp
nop
mov
sbb
enter
adc
rolb
ds
das
cwtl
cmp
pop
pop
push
lret
and
and
shlb
mov
ja
pop
or
addb
cmp
xchg
out
sub
lock
imul
cmpb
push
dec
adc
jne
add
dec
add
dec
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
jmp
or
pop
mov
dec
jne
inc
iret
addr16
adc
or
add
or
mov
loopne
jmp
mov
cmp
dec
aaa
mov
push
repz
xchg
or
mov
or
dec
cs
and
enter
flds
push
xor
dec
or
xor
xor
push
mov
mov
jp
mov
jge
jmp
mov
mov
or
xchg
lods
jmp
inc
mov
add
leave
lahf
ja
bound
mov
ret
add
push
out
sub
scas
das
inc
pop
and
add
sub
lds
add
mov
ja
cmpsl
cld
xchg
push
jge
jb
adcl
adc
xchg
mov
outsl
jb
sti
rorb
and
dec
add
rcll
mov
out
aam
mov
mov
xchg
lret
mov
bound
cmp
out
jmp
int
push
jle
cmp
dec
inc
stos
mov
push
fwait
cmp
movsb
sub
push
imul
test
pop
sub
push
icebp
mov
jge
mov
cmpsb
flds
inc
fwait
jle
outsb
into
cmp
sbb
add
push
imulb
ljmp
xchg
clc
xor
in
in
leave
xor
cmpl
push
pop
jmp
movsl
lret
loope
repz
mov
sarl
mov
push
xchg
push
push
push
mov
push
es
test
loopne
sub
and
popf
test
cmp
jmp
insl
imul
jmp
push
shlb
jnp
sti
dec
ret
mov
int
mov
dec
stc
int3
leave
jbe
mov
adc
push
scas
push
insb
lea
sub
ja
lods
or
push
aad
bound
test
sub
fsubp
outsl
lods
ss
cmp
and
insb
xor
insb
daa
and
push
push
orb
pop
xchg
mov
adc
fbstp
fsubr
pop
or
fdivrp
ja
mov
mov
pop
and
mov
test
push
out
incb
pop
mov
mov
subl
cmp
out
dec
mov
push
xlat
jl
push
inc
leave
mov
fdivr
xchg
call
or
in
push
dec
sub
cltd
mov
lds
nop
sbb
mov
test
jecxz
or
fisubrl
jge
pop
int
divb
jae
data16
push
leave
xor
pop
add
sub
movl
mov
mov
cld
mov
stos
push
es
push
dec
and
lock
pop
movnti
in
and
test
outsl
or
cmp
es
dec
jb
adc
inc
clts
sub
repnz
iret
pop
mov
rclb
sbb
cmp
sbb
mov
arpl
in
xor
test
mov
jne
or
dec
sub
inc
sbb
mov
pand
cli
mov
daa
pop
push
cmp
call
out
insl
cmp
pop
std
popa
sub
sub
push
ss
dec
lea
je
push
lcall
add
mov
jecxz
jge
pusha
sbbl
out
mov
rcrl
or
hlt
xchg
xchg
repz
pop
pop
inc
xchg
adc
pop
adc
inc
scas
mov
push
inc
or
movsb
jl
pop
mov
pop
push
mov
dec
xor
add
loopne
dec
lds
data16
int3
and
cmc
lods
xchg
rol
fcmovnbe
cmp
xlat
pop
sarb
call
shlb
or
xchg
or
or
dec
jecxz
mov
push
xor
rorb
or
xchg
push
pop
mov
jmp
mov
fsubs
add
push
andb
cmp
loopnew
push
pop
xchg
add
aaa
icebp
idivb
xchg
mov
cmp
mov
ret
mov
add
outsb
pushl
test
jb
jg
lock
lret
xchg
jge
jne
stos
or
pop
leave
inc
and
stc
add
mov
push
push
nop
mov
cwtl
inc
cmp
inc
lods
les
pop
icebp
pop
daa
mov
lds
pushf
adc
outsb
and
or
jle
lea
das
sub
xor
jo
jno
lahf
or
je
cmpb
mov
testb
push
or
fldl2t
jne
mov
mov
cmp
popa
xchg
inc
std
je
push
pop
js
and
cmp
xor
stos
loop
outsl
dec
dec
popa
push
cmp
dec
xlat
nop
inc
sahf
mov
inc
ret
notl
dec
pop
cmp
dec
iret
lret
fwait
call
jnp
mov
fidivrs
xor
imul
pop
fwait
clc
mov
js
andl
addb
pusha
xchg
lahf
loopne
mov
sbb
mov
stos
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
fbstp
xchg
scas
cmc
xor
mov
ud2
or
add
or
sbb
aad
gs
lret
push
sub
xor
mov
adc
xchg
cmpsl
push
shll
jle
outsb
xor
xchg
vucomisd
loope
das
andb
push
repnz
fwait
push
out
cltd
jl
xlat
pop
fldlg2
and
out
lods
shlb
sbb
test
push
jp
das
mov
xor
sbb
cmp
pop
jo
cltd
fwait
xor
int3
and
jmp
loopne
mov
add
fldt
lock
aaa
das
xchg
outsl
mov
sub
cmp
mov
stos
fists
push
add
inc
jg
mov
pusha
test
or
adcb
mov
daa
arpl
cmp
push
lcall
repz
daa
dec
outsl
mov
add
in
mov
test
add
cmpsl
jl
push
mov
pop
fnstcw
push
add
push
jge
pop
dec
cwtl
nop
pop
or
data16
and
inc
imulb
and
cmp
or
and
inc
mov
gs
int
dec
cs
cmpsl
pop
pop
mov
inc
mov
and
out
call
or
add
arpl
cwtl
jle
lods
mov
pop
inc
pushf
lock
lcall
push
mov
fldenv
jbe
jge
mulb
gs
jae
cmp
imul
je
adc
push
mov
inc
add
mov
add
cwtl
lods
ja
movsl
iret
xlat
adc
mov
adc
mov
sbb
xchg
adc
cmp
push
ljmp
test
jl
jne
fimull
sbb
xlat
xchg
popa
pop
adc
add
cltd
pop
out
or
daa
adc
pop
sub
xchg
xlat
lret
insb
fsubrs
jns
mov
inc
jmp
sub
imul
adc
loop
mov
cli
inc
lcall
xor
fimuls
fstl
in
adc
pop
jno
js
push
and
add
sub
rcrb
cmp
mov
testl
addb
xlat
leave
stos
xor
sub
add
mov
mov
inc
add
xchg
mov
aad
sbb
mov
cmpsb
imull
aaa
mov
xchg
scas
sbb
mov
aad
test
push
std
faddl
repnz
sarb
sub
cmpsl
dec
push
outsb
clc
insb
dec
dec
and
jg
aad
repz
roll
aas
shll
outsl
adc
jno
mov
lcall
inc
rolb
insl
sub
roll
fildl
fistpll
jnp
or
sbb
stc
and
repz
jge
sub
pop
jmp
pop
mov
mov
ret
mov
push
cmp
lahf
divl
or
loopne
lret
into
scas
cmp
ljmp
pop
call
xchg
fucomi
jle
jae
gs
mov
popf
mov
jecxz
push
sub
mov
arpl
inc
xchg
push
ret
mov
out
inc
enter
popa
in
mov
mov
test
cwtl
jno
or
outsl
xchg
cmp
mov
cld
pop
loope
or
in
leave
cld
pushf
repnz
iret
bsf
push
adc
mov
mov
movsb
mov
scas
push
out
pushf
sbb
dec
daa
out
xor
addr16
enter
loopne
dec
in
dec
pop
lcall
jae
pop
out
and
jmp
addr16
mov
loopne
out
jle
enter
insb
jecxz
xchg
nop
jle
lret
adc
or
xchg
fwait
xchg
das
in
jae
mov
sbb
icebp
lods
add
jae
outsb
andl
xor
xorl
fwait
rcr
mov
inc
pushl
mov
push
pop
dec
nop
into
test
add
cmp
push
mov
push
outsb
stos
or
int3
into
insl
fsubrp
dec
ss
or
ljmp
or
arpl
pop
mov
mov
jo
push
out
test
cmp
cli
sbb
and
mov
hlt
adc
and
lahf
and
and
push
and
or
dec
or
xor
push
test
push
scas
dec
mov
mov
imul
aam
jne
cli
push
pop
cmp
push
sub
xchg
pop
out
inc
push
mov
outsb
arpl
mov
mov
xchg
stos
adc
pop
inc
lods
pop
add
or
lahf
mov
lds
ss
ret
cli
out
cmp
sarb
scas
sub
sub
daa
add
sbb
push
jmp
jp
ror
add
lahf
push
fnstsw
mov
popa
addr16
pop
cmp
out
imul
stos
sbb
or
scas
fistpll
xor
jle
pop
pop
lods
enter
pop
cmp
add
das
mov
les
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
jmp
cmc
adc
jne
int
arpl
pushl
xor
or
iret
add
or
iret
push
jecxz
mov
mov
sbb
jne
int3
int3
fxch
addr16
in
shlb
pushf
insl
xchg
or
pop
xor
mov
mov
add
dec
stos
outsb
daa
sahf
leave
sti
repnz
movsl
test
lods
out
push
js
pusha
out
or
sub
xor
mov
movsb
push
into
shlb
ss
jmp
inc
pop
push
push
mov
add
fadd
and
push
sbb
dec
inc
mov
outsb
jmp
shll
and
call
cmp
scas
cmpsb
fcomi
popa
dec
sbb
fdivrs
movsb
inc
shrl
test
mov
sub
push
mov
sbb
fwait
pop
push
ds
pop
call
adcb
or
movsl
inc
and
les
jl
popf
mov
push
mov
cmp
mov
stos
fwait
out
fists
dec
popf
cld
data16
push
out
jge
sub
outsb
into
mov
push
add
lods
inc
in
stos
jno
and
or
mov
mov
add
sbb
push
pop
test
cmp
adc
inc
xor
fdiv
xchg
push
pop
pop
cltd
push
insl
std
repnz
mov
and
in
pop
xor
bnd
xor
jno
fdivrs
es
mov
cmp
test
stos
data16
nop
and
loopne
xchg
sbb
mov
dec
insb
pop
cmpsb
ljmp
mov
pop
repnz
mov
fcmovbe
aas
movsb
lret
testl
add
lods
dec
push
pop
add
lods
mov
in
stos
xchg
test
js
push
in
mov
sbb
loopne
aam
imul
add
jle
mov
add
adc
aas
xor
pop
cmp
mov
mov
jb
lea
sub
xor
insb
out
xchg
jle
pop
mov
rcrl
into
outsl
push
push
dec
inc
mulb
es
jo
lds
mov
mov
pop
aad
int3
mov
xchg
inc
push
test
stc
pop
push
rorb
lret
sbb
sub
je
and
pop
pop
rolb
ljmp
or
add
out
inc
mov
stos
addr16
in
jne
mov
nop
fcoms
sbb
xor
insl
cmp
fisttpl
int
xchg
pusha
rorb
pop
adc
sub
dec
fbld
mull
mov
jmp
repnz
adc
add
daa
inc
xchg
sbb
fimuls
and
jecxz
pusha
add
imul
outsl
shll
xor
cmp
xchg
adc
aaa
adc
lock
mov
fistpl
sub
gs
xchg
jno
or
pop
daa
lods
pusha
ja
es
inc
sbb
cmc
dec
out
mov
mov
adc
mov
dec
ffree
aam
inc
sub
ficoml
enter
inc
in
repz
sub
adc
insb
sub
arpl
dec
mov
push
je
mov
mov
xor
nop
test
popl
movsl
inc
xchg
movsb
dec
sbb
jmp
mov
mov
in
pusha
ja
xchg
fbld
sbb
or
cmpsl
push
mov
iret
mov
stc
sbb
xchg
adc
lcall
sub
sbb
stos
and
ljmp
mov
sub
aad
in
scas
jmp
in
sbb
or
jns
push
push
jle
repz
out
jg
pusha
add
dec
jg
stos
lret
andl
sub
push
movsl
in
ja
pop
scas
push
sarl
scas
loopne
subl
and
push
mov
push
pop
inc
aaa
mov
and
fwait
push
sar
mov
push
dec
cmp
pop
loopne
add
cmp
add
inc
xchg
cmpsb
and
fsubs
xor
fstpl
fsubrs
mov
xor
sti
enter
dec
push
call
ss
mov
fldenv
inc
aam
mov
mov
stc
std
jno
idivl
repnz
dec
mov
repz
or
fdiv
push
in
xor
mov
or
out
xlat
add
sbb
mov
negb
mov
or
into
andb
cmp
push
movsl
pop
sub
add
lret
pop
add
or
call
test
stc
test
or
mov
in
gs
mov
daa
pop
sbbl
jnp
xchg
xor
or
movsl
aas
xchg
dec
cmp
nop
xchg
popa
xchg
test
mov
push
repz
or
xlat
mov
and
push
mov
fdiv
mov
jbe
test
or
scas
sti
xchg
adc
inc
add
xchg
or
lea
and
cmp
jl
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
jmp
cli
jae
xchg
test
fwait
adc
aad
out
or
iret
add
or
or
lret
loope
shrb
sahf
sub
push
or
ljmp
inc
rorb
mov
xor
inc
lret
adc
pop
enter
out
lock
cltd
sti
call
push
das
jne
mov
ficomps
out
lods
jmp
int3
mov
pop
out
pushf
cmc
mov
and
mov
out
xor
mov
xchg
sti
into
pop
xor
lds
xchg
dec
mov
movsl
repz
push
sbb
aas
lea
nop
dec
inc
nop
inc
scas
das
sahf
dec
rcll
stos
push
dec
xor
pop
inc
jle
cld
insl
inc
outsb
mov
sub
xchg
test
popa
addr16
aam
stc
sub
movb
xchg
fisubl
mov
addl
outsb
pop
rclb
or
or
cmp
cmpsb
aam
pop
out
notb
and
mov
int3
pop
push
mov
push
nop
loopne
add
or
inc
fstps
jnp
enter
dec
test
rorb
scas
fiadds
pushf
sbb
jecxz
mov
jl
push
iret
imul
mov
mov
or
adc
iret
xor
fs
xor
and
cmpsl
cs
sbb
mov
xor
jne
dec
pop
jo
test
sbb
adc
mov
sbbb
aam
inc
pop
adc
mov
sub
cmpsl
push
lret
cltd
pop
mov
shrb
push
push
push
jge
pop
loopne
filds
and
negb
and
flds
data16
lret
xlat
push
out
in
repz
mov
and
pop
xchg
js
xchg
adc
xchg
jae
and
popa
outsl
inc
pop
pop
mov
sahf
rol
outsl
leave
dec
add
mov
jne
cmp
push
fcompl
shll
insb
movl
in
daa
cmpsl
das
mov
pushl
xor
jecxz
test
rcrb
enter
fnstsw
xchg
and
mov
adc
xchg
dec
enter
add
and
ljmp
jle
push
jne
repnz
icebp
or
fstps
pop
jns
fsubrp
mov
add
subl
out
xor
aad
add
add
bound
ret
mov
cmp
pop
inc
pushf
out
hlt
jg
mov
adc
mov
adc
call
add
pop
dec
pop
mov
pop
pusha
aad
popa
mov
xchg
mov
pop
sti
xor
in
mov
xor
push
in
mov
sub
inc
imul
push
stos
icebp
faddl
dec
mov
xchg
dec
pop
lods
sbb
clc
lods
int
xlat
inc
mov
jno
push
push
jnp
sti
into
push
lahf
mov
add
jne
push
or
fcmovb
mov
pop
adc
hlt
mov
mull
lods
notl
popf
xchg
lcall
sub
outsb
sub
mov
push
cmpsb
mov
jo
addl
call
xor
js
pop
cmp
mov
mov
fucomp
cmp
popf
rolb
sti
mov
pop
adc
pop
sub
fnstsw
stc
iret
mov
cs
popf
xchg
mov
dec
faddl
add
das
mov
mov
hlt
inc
dec
sub
push
add
sub
in
lret
aam
pushf
repz
std
pop
repnz
mov
test
in
int3
bound
in
push
pusha
push
sbb
lret
popf
iret
add
lret
jno
mov
mov
inc
test
xorl
push
ds
push
xchg
jl
mov
push
mov
xorl
out
je
fiadds
sbb
std
mov
and
lods
adcl
xchg
sub
cmc
mov
dec
add
mov
movsl
sbb
icebp
inc
cmpsl
movsl
filds
scas
pop
stos
shrl
rorl
sbb
mov
xlat
xchg
ss
mov
ret
lods
xor
xor
dec
popa
mov
andb
out
and
push
inc
ds
cwtl
pop
outsl
xchg
mov
inc
popa
xor
push
es
dec
enter
negb
sub
or
call
scas
out
out
fdivrs
rep
enter
sub
mov
stos
cmp
pop
pop
ficompl
add
call
addr16
movb
jns
mov
push
adc
fdiv
inc
xchg
push
push
xlat
pop
fwait
jge
test
test
xchg
leave
icebp
xchg
sbbb
sti
push
adc
leave
xor
and
sub
mov
jp
outsl
sub
call
xchg
lods
push
mov
push
and
adc
arpl
pop
push
fwait
out
mov
test
imul
cmp
or
xchg
popa
xchg
adc
jns
dec
pusha
mov
subb
ror
cmp
inc
mov
ja
xor
dec
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
adc
dec
aas
cmp
mov
pushf
hlt
popa
mov
or
iret
add
or
sub
sub
sbb
add
jnp
std
sti
mov
cli
push
les
mov
lods
fs
xbegin
jle
shrl
ds
into
enter
push
adc
push
cmp
jb
adc
pop
xchg
and
push
test
mov
lods
aad
ret
and
idivl
mov
jg
vmwrite
data16
mov
jns
and
in
xor
inc
xlat
jns
push
inc
sbb
push
mov
push
and
rcrb
push
or
shrb
out
add
aam
inc
cmp
imul
adc
stc
loope
daa
push
ret
or
ss
addr16
jb
int3
mov
cmp
mov
mov
adc
cmp
addr16
mov
in
cmp
out
sbb
pusha
sbb
pop
mulb
outsb
fs
in
mov
movsl
add
xchg
and
in
mov
movsb
inc
xchg
rorl
push
cwtl
sbb
fcoml
mov
mov
xor
xchg
add
ret
mov
addr16
and
cmp
xor
ret
mov
jns
and
mov
stos
push
into
mov
pop
push
scas
pop
inc
inc
xchg
mov
test
test
jbe
movsb
xor
in
imul
ficoms
enter
xchg
rorl
pop
hlt
jg
outsl
push
and
lret
dec
or
divl
or
adc
xor
pop
dec
out
and
xchg
mov
imul
outsb
push
inc
mov
cmp
in
xchg
pop
mov
fnstsw
mov
sbb
ja
jg
les
jno
int
pushf
inc
dec
out
inc
jae
xor
pop
into
cmp
cmp
add
lret
or
popa
push
xchg
pop
sbb
or
inc
jno
cmp
lods
ljmp
insl
mov
pop
popf
mov
icebp
sarl
clc
out
adc
xchg
push
jbe
ret
rcll
adc
fstps
dec
jg
sti
popf
lea
mov
xor
sub
aaa
jns
fisubrs
aaa
xchg
cld
mov
xor
push
loopne
xchg
std
mov
sub
or
hlt
das
lret
movsb
mov
xchg
nop
or
mov
in
sub
int3
or
out
lods
dec
cmpb
cmp
int3
lret
xor
loopne
sahf
dec
cmpsb
push
outsl
cltd
sbb
repnz
std
xchg
or
addl
scas
cwtl
movsl
mov
out
adc
adc
jl
add
mov
popf
jmp
aas
lock
xchg
mov
outsb
lret
mov
pop
aas
int
pop
les
xchg
ror
pop
xchg
aaa
pop
sub
mov
sub
jnp
loope
sti
pop
xor
adcl
shrl
push
int3
add
xchg
cmpsl
or
push
int3
mov
sbb
jecxz
jle
xchg
or
inc
sbb
cli
shll
in
cmp
jg
inc
decb
inc
pop
inc
mull
test
and
mov
dec
pop
mov
dec
jb
jbe
out
mov
cmp
and
shrl
and
push
jno
cld
sbb
mov
mov
sub
jmp
add
mov
imul
aad
xor
and
inc
pop
jmp
dec
dec
fistps
jbe
jl
mov
mov
ljmp
rcrl
sbb
and
mov
pop
mov
in
rclb
mov
repnz
sub
test
mov
les
pop
sbb
dec
cmc
push
jmp
dec
popf
sub
sbb
lahf
mov
cwtl
inc
mov
and
lret
in
mov
add
push
icebp
pusha
lods
leave
inc
mov
inc
in
in
xchg
pushf
push
into
cmp
sbb
push
pop
or
jmp
jbe
cmpsl
jle
hlt
inc
cs
in
cwtl
insl
dec
adc
mov
inc
rcrb
adc
std
and
sti
outsb
sahf
fs
addr16
fxch
fcmovbe
and
lahf
popa
test
or
or
inc
sbb
inc
xchg
lods
xor
rcrl
sbb
sbb
into
call
push
pop
lods
add
int
int3
push
dec
dec
sub
and
ficomps
adc
outsl
jl
jb
in
inc
xchg
cmp
lret
out
or
popa
push
add
out
xor
aad
push
mov
cmpsl
mov
mov
add
clc
inc
insb
sahf
mov
mov
push
and
lahf
pusha
push
mov
data16
mov
pop
mov
xor
lea
iret
jmp
cld
sub
cltd
sub
xor
adc
jmp
and
mov
lret
or
icebp
jle,pt
sbb
pusha
and
insb
out
int
fucomp
sbb
fadds
mov
in
stos
or
leave
insb
outsb
addr16
jbe
clc
fs
mov
das
jns
arpl
sub
std
inc
dec
cmpsl
mov
mov
fldl
xchg
add
stos
stos
jnp
mov
stos
sub
inc
rcrl
das
es
ljmp
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
es
bound
and
aas
mov
fucomip
mov
fmull
or
add
or
dec
leave
fidivl
adc
push
movsl
insl
pushf
and
daa
jp
mov
and
add
mov
cmp
repnz
jbe
jmp
or
movsl
push
movsb
xor
lcall
mov
fmul
adc
mov
pop
pop
push
mov
sub
fistps
jb
push
or
push
pop
jb
and
cmp
in
push
divl
lods
es
push
push
lods
js
or
mov
mov
orl
mov
jns
leave
sub
addb
xor
jecxz
jb
sub
mov
aad
pop
jle
inc
mov
cs
movsb
push
mov
mov
shll
sbb
xchg
xor
jae
movsb
test
mov
aad
sub
rclb
faddl
mov
sub
enter
adc
inc
push
and
inc
sbb
ret
and
lods
dec
mov
aad
sbbl
or
cmp
out
fimull
mov
mov
int
testb
std
nop
decl
test
sub
out
vaddpd
stos
dec
lds
add
pop
scas
hlt
inc
xchg
add
push
cmp
cli
dec
jmp
mull
aad
js
test
sub
pushf
sahf
mov
daa
mul
inc
sub
jl
push
test
mov
fcmovbe
jns
loope
es
insb
mov
jns
fwait
sbb
cli
push
xor
cltd
int3
repz
out
insb
cltd
mulb
fistl
pop
jne
jmp
adc
je
mov
cld
into
mov
sub
jecxz
mov
shll
inc
popf
ror
and
lods
idivb
or
mov
shrl
cwtl
shr
in
cmp
dec
pop
add
cld
pop
adc
ret
lods
mov
pushf
rorb
push
aaa
movsb
pop
jne
pop
movsl
lret
add
add
data16
dec
mov
repnz
pushf
push
rcll
cmpsb
add
lds
pop
sbb
adc
push
add
pop
roll
mov
add
lcall
dec
and
or
pushl
mov
or
push
push
jg
mov
inc
cmc
pop
jns
pusha
mov
push
scas
icebp
mov
sbb
jg
pop
gs
sub
sbb
add
aaa
repz
outsl
add
loop
ret
xor
call
fidivs
pop
ficompl
bound
iret
test
xchg
mov
stos
mov
adc
insb
or
inc
cmc
add
inc
cmp
xorb
jmp
adc
les
and
gs
std
xchg
xor
xor
xor
in
aas
dec
mov
pop
rclb
adcl
imul
dec
icebp
mov
mov
xchg
ss
addr16
stos
xlat
jbe
test
sbb
fistps
jo
popa
cmp
out
rorb
jecxz
and
or
sti
mov
sbb
mov
cmpsb
jnp
mov
scas
out
es
jno
adc
sbb
stc
call
stos
xor
xor
mov
pop
jg
inc
mov
xchg
or
aam
xchg
lret
jo
cmp
add
xchg
xchg
xor
sahf
mov
pop
lret
cmp
mov
dec
lods
pop
mov
mov
into
mov
out
sbb
enter
in
mov
jo
decl
adcb
xchg
dec
repnz
and
loop
test
adc
mov
cmc
and
ja
faddl
inc
xor
inc
cwtl
fisubl
or
test
loopne
inc
bnd
iret
inc
add
fistpl
js
inc
subb
cmp
sub
aas
xchg
dec
pop
xor
mov
andl
mov
mov
movsb
ret
fistps
scas
jl
std
lret
das
adc
sub
or
inc
call
insb
ret
lock
addr16
cmp
stos
cmp
pusha
fs
repnz
insb
pop
outsl
or
cs
loope
push
out
add
fisubrl
icebp
test
mov
pushf
pop
int
dec
push
les
jbe
movb
adc
test
std
stos
inc
or
in
adc
pop
pop
pusha
call
cmp
lret
mov
inc
cli
or
dec
sub
push
xchg
push
push
mov
inc
sti
xor
inc
pop
lea
cmp
sti
jmp
stc
data16
shll
xor
stos
xchg
mov
aad
push
scas
sub
xchg
es
popf
scas
or
hlt
lahf
mov
call
dec
push
pusha
ja
xchg
popa
mov
out
addr16
sub
inc
jl
daa
pop
mov
pop
adc
ficomps
add
cmpb
jl
xor
or
mov
jmp
test
sbb
mov
mov
les
or
add
or
sub
and
ret
ficompl
std
xor
ret
xor
lods
cmpsl
scas
inc
aam
pusha
or
cmpsl
cmp
lahf
xchg
lret
jns
cmp
dec
adc
dec
cmc
xchg
mov
loope
jae
movsl
fidivl
push
pop
mov
jge
jecxz
les
dec
test
adc
mov
repz
fwait
inc
ret
das
div
ss
inc
repnz
push
or
xchg
leave
test
and
sti
mov
jnp
cld
dec
cld
ja
xchg
mov
movsb
xor
adc
ljmp
mov
push
dec
in
mov
test
imul
in
push
outsb
jmp
mov
mov
cltd
jbe
outsb
ficoms
fstpl
xchg
jnp
push
das
mov
enter
popf
imul
repz
mov
loop
dec
push
mov
lea
mov
xor
jmp
sub
mov
loop
loop
xchg
cltd
int3
lds
icebp
das
jle
and
jb
negb
pop
pop
mov
pop
outsl
jg
mov
inc
int
jp
inc
inc
mov
mov
test
sbb
enter
xor
jle
jnp
sub
add
insl
lcall
xchg
xchg
hlt
push
mov
mov
es
cmpsb
pop
jg
sbb
mov
pop
push
push
out
mov
jnp
pop
sbbl
dec
fdivs
mov
xor
mov
push
adc
lods
adc
stos
test
push
inc
sub
dec
push
xor
stos
jnp
insb
fwait
lds
inc
mov
cmp
pop
bound
les
adc
test
mov
and
stos
adc
push
jo
mov
inc
mov
jmp
and
dec
cmp
jbe
icebp
lds
adcb
repz
stos
int3
leave
sti
xor
and
jne
dec
faddp
mov
into
xchg
sbb
fiaddl
movsb
arpl
mov
gs
mov
jg
mov
xchg
mov
pop
enter
push
push
bound
bound
daa
cmp
xor
test
test
cmp
les
iret
jp
xchg
adc
insl
jnp
mov
mov
repnz
push
and
and
out
outsb
leave
das
insl
jnp
arpl
rorl
inc
into
inc
pop
loop
jnp
mov
out
jns
stos
mov
adc
and
clc
jae
push
out
sbb
repz
int
out
fs
pop
mov
inc
popf
fiaddl
push
sahf
add
sbbb
popf
lods
popa
pop
repnz
add
pop
jmp
rorb
imul
xor
sub
mov
pop
or
add
in
fmull
xor
lcall
push
sbb
xchg
bound
ffreep
mov
clc
xor
mov
xor
in
in
clc
fs
mov
cmp
add
pop
outsl
mov
mov
imulb
or
mov
insl
fs
in
cmc
pop
popf
sahf
adc
adc
in
icebp
sahf
inc
mov
jno
std
call
into
iret
sbb
inc
add
movsl
push
mov
and
loope
inc
bound
mov
and
xchg
stos
aam
xchg
fiadds
cmp
jge
pusha
arpl
out
mov
inc
mov
enter
jae
mov
cmp
add
les
aas
aas
add
leave
and
jne
shl
inc
push
xor
xor
aaa
xchg
push
and
test
test
fnstenv
mov
repz
jae
mov
mov
sub
inc
adc
cmpsl
outsb
imul
xchg
jg
and
je
leave
and
inc
jae
jl
ror
repz
and
out
sub
adc
mov
fcomip
pop
pop
xchg
cmp
cmp
nop
mov
or
dec
pushf
add
pushf
xchg
in
cld
add
popf
push
xor
adc
sub
mov
sti
repz
xor
mov
loop
mov
mulb
or
adc
jb
xor
cmp
xor
rcr
and
hlt
cmp
pusha
lods
mov
sub
push
xchg
sti
pop
jmp
or
fs
stos
ljmp
mov
adcl
in
adc
dec
jb
out
jmp
pop
fdivr
fisubl
cmc
xchg
icebp
add
js
and
insb
add
ljmp
inc
xor
ret
daa
int
lret
pop
add
loope
mov
mov
lods
fcoms
pushl
shr
loopne
leave
xchg
cmp
aad
pop
adc
cli
sub
or
or
dec
cli
out
fdivrs
mov
pop
repz
dec
xor
stos
not
and
jl
sub
in
dec
sti
sbb
sub
jno
and
fs
or
cmp
imul
into
and
inc
jne
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
jmp
popa
das
xchg
inc
xchg
aaa
push
das
pusha
dec
pop
and
mov
or
lret
mov
lret
je
dec
insb
adc
push
push
loope
lea
or
into
cmp
mull
ret
sahf
cmp
mov
cwtl
out
sahf
adc
hlt
xorb
mov
jbe
ds
jecxz
jno
or
inc
jp
mov
lcall
cwtl
mov
push
sub
lcall
xor
mov
lds
and
andl
pop
roll
jle
fstpt
scas
mov
push
sbb
sub
mov
jp
pop
sub
push
dec
push
inc
cmp
jle
mov
jl
lret
std
xchg
imul
leave
jae
add
jmp
mov
cwtl
fistps
repz
mov
push
sbb
mov
dec
mov
xor
in
dec
jne
lods
push
inc
mov
movsb
dec
mov
insl
ds
mov
aad
and
rcr
nop
xor
xor
lods
movsb
fsubp
leave
jmp
cld
adc
xor
js
jp
negb
sub
loope
or
scas
es
jg
or
cmp
stos
lahf
out
ror
or
movsb
cmp
or
mov
jns
xchg
add
int
mov
add
adc
dec
inc
cmp
inc
pushf
mov
pop
pop
dec
sbb
outsl
fcoms
mov
std
out
jbe
iret
cmp
push
pushf
fidivrl
pop
add
adc
xlat
jge
fists
gs
pop
lcall
ror
in
out
cmp
sub
pop
imul
and
rolb
push
jb
mov
cmp
clc
mov
scas
jno
jg
icebp
fiadds
bound
sub
dec
stc
lock
add
mov
cwtl
add
mov
dec
iret
ljmp
pop
out
xchg
mov
push
jnp
jmp
imul
mov
mov
stos
dec
mov
lods
enter
add
or
rorb
das
scas
mov
lods
loope
adc
cmp
stc
sbb
cli
adc
dec
out
add
ficomps
xchg
xchg
imull
push
lock
cmp
mov
mov
push
pop
inc
inc
push
rcll
imul
cli
cmp
ja
pop
inc
repnz
and
jno
xlat
or
pop
add
lock
sub
cltd
in
cmpsb
cli
mov
cwtl
xabort
pop
popf
lret
cmp
iret
cld
stc
push
mov
les
pop
dec
in
inc
cmp
jmp
push
sub
inc
and
pop
xchg
ficoml
mov
into
cmpsl
pop
fdivrs
jg
inc
mov
mov
or
daa
aas
cmpsl
iret
dec
cs
stos
jl
sub
arpl
les
mov
jmp
cmp
sti
dec
xor
les
dec
movsb
aam
shll
jnp
or
repnz
mov
add
pop
sub
clc
rcrb
aad
scas
insb
je
testb
mov
cmp
or
popf
push
push
sub
or
and
aam
pop
test
push
xchg
mov
mov
and
jmp
mov
in
repz
lds
bound
xlat
gs
sbb
mov
xor
fdivl
mov
inc
push
push
mov
push
jmp
cli
dec
jg
faddl
js
push
inc
push
inc
shrl
mov
or
xor
inc
mov
sahf
and
jl
mov
inc
inc
mov
xchg
sbb
sbbb
push
dec
arpl
lds
mov
repz
adc
cmpl
inc
push
stos
pop
xor
roll
cmp
dec
stos
pop
or
dec
ja
xchg
pop
aaa
jg
jno
mov
sbb
and
jae
lahf
pusha
lahf
loope
mov
sub
js
imul
pop
ljmp
test
scas
jmp
stos
lret
ja
hlt
pop
mov
dec
jmp
mov
cmpsl
xor
pop
sbb
sbb
jne
sub
in
pop
mov
pop
cmpsb
adc
mov
and
sub
adc
out
pop
int
aaa
orl
dec
andb
ljmp
xor
inc
js
clc
push
arpl
jno
loope
cwtl
xor
stc
inc
jae
movl
cmp
movl
jae
andl
shrd
movl
shr
ret
subl
mov
xor
and
shr
ret
jmp
aam
in
xchg
push
adc
hlt
popa
and
addr16
mov
or
xor
pushf
lret
push
pop
dec
test
cli
jmp
out
xor
repz
jnp
fwait
mov
call
gs
adc
or
stos
pop
sub
dec
mov
mov
fstps
sub
jae
subb
cmpsl
add
aam
dec
jecxz
sub
pop
shrb
xor
jecxz
test
leave
cmp
or
and
in
mov
enter
xchg
test
leave
imul
adc
lcall
mov
cmp
dec
in
popf
xor
mov
push
repz
lret
mov
ret
adc
out
aaa
xchg
mov
lock
or
in
cmp
int
push
dec
iret
push
es
repz
adc
arpl
push
add
fimuls
in
scas
lcall
rcr
xchg
inc
orl
std
or
xor
and
mov
adc
adc
mov
dec
iret
mov
pop
clc
adc
adc
insl
and
push
sub
or
jg
iret
out
subl
and
jmp
test
orb
test
inc
xchg
das
cwtl
out
ret
add
mov
fnstsw
ljmp
mov
xor
xchg
mov
pushf
cmpsl
cmp
fidivrl
or
inc
xor
xchg
fidivrl
adc
xchg
mov
pop
je
xor
pop
mov
xor
lods
xchg
arpl
loope
dec
scas
test
sti
xor
leave
xor
cli
lret
pop
into
cs
cmpsb
mov
sbb
sti
push
scas
mov
icebp
inc
or
or
mov
adc
rcl
scas
pop
daa
sub
shlb
imul
bound
popa
inc
jecxz
in
adc
mov
repnz
sub
sub
insl
filds
fcompl
xlat
lahf
insb
mov
add
outsl
sbb
cmp
mov
mov
arpl
imul
fdivrl
cs
xchg
jo
mov
in
dec
mov
jle
jp
roll
pop
jne
scas
xchg
cltd
adc
ret
movsl
scas
adc
mov
loop
jns
cmpsl
sbb
cs
dec
sahf
addr16
push
ss
fisubrs
movsl
arpl
push
or
cmp
cld
jmp
sub
xchg
and
mov
shrl
adc
pop
aam
xchg
dec
fbstp
js
pop
adc
adc
notl
jle
mov
xchg
das
stos
cltd
xchg
inc
fcompl
sbb
adc
insb
mov
cmpsl
jmp
das
jb
loope
pop
mov
mov
or
mov
xchg
add
mov
loopne
pop
fmulp
aas
pusha
lods
and
jae
imul
mov
outsb
mov
into
sub
out
mov
fdiv
jge
test
jbe
push
add
loop
repz
repz
movsb
or
push
arpl
stos
faddl
xchg
lods
mov
push
push
aaa
lods
pop
mov
lret
and
and
xlat
mov
mov
and
mov
ficompl
sub
insb
lret
sbb
bound
dec
mov
fcmove
repnz
int
fsubrl
xor
pop
dec
stc
fbstp
adc
popa
lahf
jle
jmp
mov
rcrb
aas
or
hlt
push
pop
adc
cltd
cmp
subl
ficoms
fwait
insl
loopne
sub
enter
fbstp
or
push
add
je
jbe
dec
add
fwait
je
mov
mov
sti
in
adc
fsubp
imul
sbb
int
shlb
xchg
inc
negl
adc
les
xor
sti
dec
jne
daa
push
sarb
dec
in
xlat
dec
pop
adc
cld
and
movsb
sub
imul
clc
jns
mov
xor
testb
mov
add
call
add
loop
lock
add
sarl
stos
mov
add
sbb
mov
in
fistl
call
mov
dec
cmpsb
popf
dec
dec
sub
push
inc
shll
loopne
negl
dec
xchg
pop
jb
stc
das
mov
mov
mov
aas
push
push
mov
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
mov
movl
jl
push
call
orl
xorl
add
sub
movzbl
sub
mov
sbbl
movl
mov
mov
jmp
lret
xchg
stos
ds
xor
jge
or
aad
or
daa
cmp
cmpsl
pop
outsb
xchg
lods
les
imul
inc
add
je
in
lods
imul
pop
mov
or
repz
xchg
push
fnstsw
es
mov
repz
cmp
in
dec
mov
dec
cmp
insl
cmp
push
les
jl
add
fisubs
out
cmpsb
cmp
int3
in
jmp
sahf
mov
push
cmpsb
lahf
cld
shrb
mov
push
or
cltd
or
cmpsb
ret
sbb
lret
orb
enter
testl
mov
negl
mov
mov
adc
cmp
call
dec
pop
imul
ss
xor
lcall
in
cmp
js
push
push
lret
cwtl
loop
std
filds
call
xchg
sub
cltd
add
jle
inc
enter
nop
lock
hlt
rorb
pop
mov
movsl
imul
add
mov
sub
pop
test
rclb
sbb
jp
into
insb
ret
lock
test
cmp
fisubl
rolb
or
popa
xchg
and
inc
arpl
adc
or
mov
push
jp
xchg
push
cltd
and
and
in
or
mov
dec
cmc
test
and
icebp
repnz
je
cs
add
cmc
lock
leave
fxch
sbb
pop
lcall
adc
jecxz
ret
add
push
dec
lods
movsb
adc
dec
repnz
fcomp
sub
test
negl
je
jg
movl
add
pusha
repz
in
jge
push
out
push
and
mov
pop
xchg
std
mov
imul
xchg
lods
pop
sub
shll
test
hlt
sub
adc
pop
dec
xor
dec
gs
in
pop
fidivs
inc
mov
adcl
lock
pop
jl
jmp
lea
call
push
jns
mov
pop
cmpsl
mov
sub
repz
sbb
pop
lret
push
push
push
dec
cli
xchg
xlat
inc
mov
xchg
aam
lea
test
or
jle
std
adcb
cmp
icebp
add
jp
mov
movsb
dec
je
lods
add
outsl
dec
sahf
dec
mov
cld
popa
cmp
call
cmp
into
add
push
int3
pushf
mov
inc
flds
ss
scas
sub
xchg
mov
mov
cld
pop
mov
repz
rolb
dec
dec
insl
fucomip
rcr
push
addl
or
minps
jge
mov
add
scas
and
mov
inc
mov
leave
push
adc
popf
or
std
adc
lahf
scas
frstor
imul
jmp
bound
in
cli
mov
je
out
enter
nop
adc
xor
stc
aas
scas
add
pop
daa
into
dec
dec
push
shll
jp
jno
stc
fsubrs
iret
xchg
repnz
pop
pop
sub
xor
adc
mov
and
add
xchg
lods
add
imul
repnz
mov
es
outsb
loop
sub
insl
pushf
ret
ljmp
mov
andb
mov
mov
jbe
adc
mov
pushf
ret
in
dec
push
adc
movsl
mov
loope
jmp
sub
test
ds
xor
jne
xor
xchg
inc
push
fisubrl
mov
inc
jns
pushf
aas
aad
and
cmp
dec
push
xorl
stc
hlt
xor
sbb
fldcw
add
addr16
test
or
mov
mov
cwtl
int3
or
das
and
bound
jae
scas
xlat
adc
repnz
pop
jb
insl
lock
test
enter
push
jmp
fbld
aad
push
and
aaa
inc
subb
imul
push
pop
addr16
fimuls
xlat
movsl
and
test
dec
add
xchg
pop
scas
mov
out
xor
sbb
movl
cmpl
mov
mov
movzbl
jmp
movl
jae
pushl
push
pushl
pushl
call
xor
add
mov
sub
sub
sub
and
andl
adc
sub
adc
mov
adc
movl
cmpl
mov
mov
jmp
mov
jl
pushl
push
pushl
push
call
add
mov
mov
sub
add
or
sub
or
movzbl
or
movl
cmpl
mov
movl
movl
jmp
mov
jb
call
inc
and
mov
sub
mov
or
xor
add
adc
movl
adc
movl
or
movl
and
movl
mov
and
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
push
pushl
call
mov
and
sub
inc
xor
adc
movl
mov
sub
mov
mov
sub
push
notl
mov
mov
sbb
mov
mov
push
push
adcl
push
sbbl
push
call
cmpl
movl
mov
jmp
notl
jbe
push
push
push
call
movl
movl
andl
incl
mov
and
xor
xor
mov
sub
add
mov
mov
xor
adcl
and
cmpl
mov
movl
mov
mov
jmp
movl
jb
pushl
call
sbbl
negl
orl
adc
movzbl
sub
xor
and
movzwl
add
and
or
mov
cmpl
movl
mov
jmp
movl
mov
je
call
xor
xor
xor
or
sub
add
xor
neg
addl
sub
adcl
and
andl
mov
adc
movl
cmpl
mov
not
movl
jmp
mov
jbe
push
call
xor
xor
xor
xor
orl
notl
xor
movl
movl
movl
mov
mov
jmp
ja
sub
pop
push
pop
inc
push
test
dec
jne
mov
or
add
or
push
fsts
mov
les
rcrl
pop
scas
jp
mov
ds
mulb
cmpsb
cmpsb
das
bound
xor
pop
test
rolb
divb
sub
aam
in
push
jle
add
in
and
inc
mov
xorl
push
lret
xchg
aaa
fwait
push
jno
into
insl
jmp
popf
ret
fbld
adc
fcmovb
mov
cmc
cld
lods
lcall
adc
adc
jne
add
pop
pop
adc
jnp
movsl
xchg
adc
clc
pop
jno
jns
outsl
aam
daa
pop
movsb
into
enter
pop
lods
out
test
scas
adc
pop
stos
add
ret
push
xchg
cmp
jno
cmp
mov
les
mov
repnz
jmp
jb
cmp
jmp
mov
in
cmc
jo
adc
push
std
inc
push
xor
jb
dec
jp
leave
test
jmp
nop
pop
pusha
scas
xchg
add
insl
dec
push
inc
dec
cmpsb
incw
rolb
outsb
mov
aad
mov
mov
sar
add
rcr
enter
fs
adc
aad
jge
inc
stos
add
iret
sub
stos
sti
das
in
flds
lcall
jmp
fmuls
shlb
cltd
dec
ja
push
testb
cli
mov
inc
inc
mov
mov
cmp
enter
dec
ss
cmp
in
or
mov
daa
in
arpl
lret
jl
ss
shrb
or
cmp
leave
cld
pop
jae
cmp
into
jno
adc
pop
cli
cmc
mov
xlat
cmc
fildll
stos
jns
shll
in
sbb
push
and
bound
outsl
roll
pushf
imul
fbld
movsl
in
xor
mov
pusha
fdivrs
pop
xor
push
imul
loope
lods
popl
and
mov
push
gs
shl
and
adc
xor
or
lods
pop
or
test
gs
xchg
dec
rcll
jnp
popa
popa
push
mov
out
dec
mov
xor
out
sysret
popa
jne
sub
sub
sub
lock
popf
pop
and
xchg
mov
outsl
rcl
subb
jo
pop
incb
shl
xchg
cld
inc
movb
or
pop
dec
pop
sub
mov
rcr
xchg
cmc
cmpsl
cmp
rol
adc
sbb
mov
inc
into
rclb
mov
in
mov
inc
nop
lahf
mov
mov
push
or
sub
xchg
mov
mov
aad
cld
adc
enter
insl
push
mov
dec
sbbl
std
xchg
mov
dec
inc
push
ljmp
jne
push
cmc
push
loopne
xlat
inc
jae
in
imul
push
xchg
idivl
mov
pop
or
dec
in
add
pusha
inc
es
or
in
fnstcw
lcall
push
popa
add
sub
jp
push
jb
stc
insl
into
adc
into
adc
jne
pop
mov
or
stc
jbe
mov
js
out
cmpsl
inc
pusha
idivb
mov
push
stos
rcll
aaa
inc
cmp
clc
sahf
mov
in
stos
mov
in
sbb
push
jo
sub
lock
jecxz
pop
js
push
push
ret
loope
mov
lea
sbb
cltd
mov
dec
in
sub
adc
xchg
loope
pop
pop
and
nop
ss
stc
mov
mov
mov
push
cmp
add
mov
outsb
xchg
or
cmp
or
dec
push
push
sub
movsl
pop
dec
mov
scas
call
mov
loope
xlat
ds
pop
mov
mov
sahf
aam
repnz
out
clc
dec
in
or
pop
mov
in
jle,pt
xchg
dec
in
xlat
push
lock
cmp
xor
mov
inc
call
mov
xchg
lea
add
mov
sbb
cmp
sbb
repnz
pop
and
jle
cmp
or
push
loopne
jne
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
jmp
int
jmp
xchg
add
push
jne
test
or
add
or
push
fstps
into
adc
cmc
js
xchg
push
jge
mov
ret
push
mov
pop
jns
orb
scas
xchg
inc
test
lcall
add
out
pop
mov
fcmovne
push
jmp
jmp
sub
mov
lods
push
aad
xchg
pop
pop
push
das
sub
inc
or
mov
add
or
cltd
jge
cld
lret
sbb
lods
xor
ficomps
xor
push
inc
fst
stos
mov
rclb
cli
pop
pop
lds
repz
xchg
lock
cltd
dec
loop
fldenv
insl
pop
add
push
outsb
jg
dec
xor
fsubl
sub
stc
or
cmp
add
pop
ficoml
andb
sbb
add
add
imul
cmpsb
ss
mov
in
mull
andl
pop
jne
adc
and
in
pusha
mov
lds
push
pop
cmp
lds
fcoml
mov
pop
int
xor
ja
daa
add
idiv
stc
in
iret
sub
adc
jge
ljmp
dec
or
in
or
mov
cmp
lret
add
or
in
or
shl
lret
mov
out
xor
jmp
ret
lea
push
xchg
lret
add
fbld
js
in
stos
inc
loop
iret
dec
add
dec
test
pusha
cmpsl
out
dec
jg
negb
outsl
int3
pop
add
jnp
cwtl
push
out
lods
adcl
mov
push
xor
scas
arpl
push
aam
loopne
psubsb
mov
adc
fcoml
sahf
imul
loop
jp
jne
mov
push
leave
inc
cli
pop
inc
loop
aas
pop
mov
inc
imul
out
repz
sbb
inc
mov
mov
lret
push
insl
fcomps
xor
jecxz
and
xchg
cmp
sahf
lret
add
call
pop
push
mov
int3
dec
mov
cmp
mov
push
cmpsb
jo
mov
stos
data16
pop
scas
call
sbb
cmp
jle
sbb
or
mov
ja
or
dec
adc
sbb
or
je
xchg
mov
icebp
cmc
roll
bound
leave
ret
js
pop
mov
jl
jecxz
pushf
pop
pop
push
aam
sub
jo
push
cld
xlat
jns
mov
lods
out
jg
in
mov
xchg
dec
out
adc
rcrl
sbb
mov
popa
cmp
push
pop
xchg
xchg
sub
inc
pop
jg
shll
lret
les
mov
inc
jmp
loop
jg
mov
mov
jb
js
sub
fistpl
add
out
mov
pop
es
mov
pop
and
sub
pop
rsm
rclb
sub
in
hlt
icebp
adc
sbb
clc
ret
mov
adc
scas
sbb
call
out
scas
add
lock
addr16
js
lcall
fists
stc
dec
out
rclb
rcrb
ret
fildl
xor
imul
imul
add
jae
cmp
push
aas
xor
repnz
add
fbld
stos
add
cltd
cs
out
jge
adc
inc
mov
xor
mov
jle
dec
sbb
lea
mov
jp
and
inc
mov
jle
cltd
cmc
xchg
jb
outsl
int3
jo
jmp
loope
pop
in
inc
mov
pop
js
push
jbe
xchg
mov
movsl
inc
repz
cmc
shrl
sbb
ljmp
fimuls
faddl
xor
mov
pop
sub
xlat
imul
popf
int3
jae
mov
std
pusha
call
ret
dec
and
fbld
hlt
lcall
cmp
jmp
inc
mov
inc
push
ss
sahf
mov
cmc
mov
je
xchg
push
push
cmp
mov
push
imul
aaa
mov
mov
add
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
jmp
pop
xor
dec
movsl
sbb
pop
imul
or
aad
or
testl
jle
movsb
push
cltd
iret
into
and
cmp
iret
jbe
sbb
adc
mov
inc
shll
sub
xor
rcl
jmp
inc
stos
fwait
sub
xlat
clc
jo
mov
inc
sbbb
and
popf
repz
in
jb
test
and
sub
popa
shlb
bound
inc
out
cmpsb
std
push
push
mov
sahf
fiadds
adc
xchg
push
mov
ljmp
pop
aam
cmp
mov
mov
imul
cmpsb
out
inc
loope
sbb
adc
xchg
sub
sbb
mov
sahf
cmp
mov
test
out
pop
adc
adc
push
push
pop
js
xchg
mov
pop
data16
faddl
jge
pop
push
mov
push
ljmp
jecxz
fucomi
xor
mov
nop
jl
or
sahf
inc
dec
lret
jl
or
imul
aam
adc
int3
lea
and
add
cmc
idiv
icebp
rolb
adc
xchg
push
out
in
dec
das
dec
jl
stos
test
jp
mov
mov
aad
dec
mov
repz
js
dec
scas
pop
mov
dec
out
mov
je
into
add
fwait
stc
mov
jno
sub
sub
fldl
jg
inc
dec
dec
mov
sub
out
and
lods
inc
dec
lret
and
pop
jb
mov
outsb
mov
inc
in
or
repnz
pop
pop
ret
mov
cwtl
out
add
and
es
fwait
pop
cmc
je
loope
mov
inc
mov
mov
in
push
pop
xor
pop
cmc
dec
add
xchg
and
call
testb
into
xor
pop
data16
mov
jno
dec
stos
dec
scas
aam
sbb
arpl
pop
adc
xchg
int3
jg
sbb
outsl
or
cld
cld
pop
push
loop
add
fldt
jbe
push
jae
lds
loopne,pt
adc
lahf
sub
fcmovbe
sbb
test
xchg
and
pop
vcvtsd2ss
repz
test
xchg
js
ret
stos
cmp
xchg
mov
push
cmp
shll
cmpsb
fdivs
and
enter
xorl
fs
xor
xor
adc
xchg
repz
push
fisttpl
shrl
call
negl
ss
inc
cmp
cmp
popf
sub
add
call
jnp
cmp
pop
push
movsb
bound
vandpd
pop
jno
sub
loop
mov
mov
pop
inc
daa
sbb
test
out
jne
pop
and
mov
mov
lods
mov
adc
int3
inc
mov
and
cmp
rcrb
repz
pop
arpl
inc
dec
pop
adc
inc
dec
push
je
idivb
in
dec
jb
mov
ds
mov
js
lods
mov
and
mov
gs
dec
icebp
mov
pop
and
lret
mov
jmp
neg
mov
mov
and
jmp
or
nop
into
and
out
add
cmp
aad
inc
in
ja
bound
push
scas
shll
pop
mov
ficoml
sbb
stos
out
dec
push
popf
jo
mov
and
out
sub
cmpsl
and
push
jg
inc
push
movsb
push
jge
lods
xchg
das
mov
add
inc
js
pop
xchg
cmp
inc
or
stos
in
gs
jecxz
mov
call
adc
dec
repz
std
adc
push
in
mov
xor
cmp
sub
xlat
push
push
sub
outsl
pop
out
jmp
shrl
icebp
js
std
int
sub
daa
in
cs
xchg
sub
scas
shlb
mov
sahf
aaa
inc
xor
mov
stos
out
lock
lds
push
push
add
daa
pop
mov
cmc
xchg
mov
mov
push
jmp
mov
mov
leave
sbb
mov
cmc
jge
add
xorb
scas
pop
xor
aaa
data16
aas
push
jmp
sub
out
sbb
xchg
pop
rol
mov
ds
mov
mov
or
add
or
enter
loop
mov
inc
outsb
in
iret
loop
cmpsl
lock
add
in
or
push
or
cmpsb
cmp
mov
mov
int
adc
push
adc
shlb
ljmp
adc
inc
sahf
push
jnp
sub
aad
pop
xchg
ljmp
mov
std
ljmp
aaa
ljmp
aaa
rcr
orl
mov
inc
std
mov
pusha
pop
dec
xchg
cmp
shrl
sti
aad
dec
dec
cmpsl
jle
jge
or
nop
sahf
push
dec
adc
out
push
stos
scas
cmpsl
inc
addr16
enter
pop
jno
or
repnz
test
mull
test
mov
dec
cmp
or
mov
int3
jnp
pop
cmpsb
mov
push
mov
mov
lret
mov
dec
fdivrs
in
loop
ret
and
sub
mov
hlt
scas
push
into
mov
xchg
and
aam
in
std
xor
mov
out
in
add
inc
in
jg
addr16
mov
mov
dec
arpl
xchg
stos
push
ret
jmp
xchg
sbb
out
filds
adcb
and
out
out
xchg
inc
aaa
loope
fucomip
call
jae
fisubrl
test
pop
in
and
fisubrl
cmp
xchg
int
in
out
addb
push
mov
mov
mov
inc
dec
test
sahf
push
mov
inc
setb
xor
adc
popa
and
mov
loopne
jecxz
add
test
sbb
scas
pop
fldt
or
popf
cltd
pop
dec
jbe
int3
or
and
negl
imul
push
int3
cs
stos
loope
push
in
dec
out
sub
jno
arpl
cmpl
sbb
mov
popf
push
and
fwait
mov
mov
sub
arpl
lock
and
inc
pcmpeqw
in
pop
mov
pop
lahf
ss
cmp
lcall
pop
out
pop
jns
pop
mov
sarl
sub
outsb
outsb
dec
cli
imul
or
sub
aaa
sar
add
and
adc
sub
lds
test
push
xor
add
cs
jnp
xor
cld
sub
pop
sub
ss
mov
ja
insb
dec
add
dec
xchg
mov
insl
add
mov
push
daa
mov
shlb
inc
hlt
test
or
test
mov
shll
and
ljmp
mov
ja
movsb
lahf
xor
fwait
or
test
imul
inc
pop
loope
mov
dec
mov
sbb
push
pop
addr16
rcll
cmp
out
inc
pop
mov
cmp
mov
addr16
cmp
pop
pop
mov
cltd
lods
stc
inc
pop
pop
das
out
dec
xchg
lea
pusha
sbb
sub
mov
shl
callw
insl
and
add
mov
fsub
popa
test
pop
dec
icebp
jb
jbe
orl
adc
push
mov
xor
push
rclb
ja
cmp
lret
loopne
cmp
shll
sti
inc
das
aam
insb
jmp
cmc
enter
and
fisubrs
push
xor
jbe
hlt
loop
das
xchg
inc
sub
scas
push
mov
adc
lods
add
mov
js,pt
sub
jmp
out
aam
fdivs
xchg
or
pop
pop
call
push
pop
adc
inc
lds
fisubs
xlat
push
push
add
scas
test
push
cmp
sbb
frstor
push
lods
jno
push
and
sbb
sarb
cmp
std
icebp
sub
icebp
sub
pop
xor
mov
fdivr
mov
and
cmp
enter
mull
stc
divb
inc
push
shlb
dec
inc
push
ljmp
mov
cmp
repnz
mov
add
add
jmp
xchg
inc
ja
mov
push
cmp
mov
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
jmp
jecxz
pop
mov
xor
add
lods
test
or
add
or
jg
fsub
out
call
lret
and
inc
insl
leave
rorl
jecxz
mov
filds
cmp
dec
pop
push
sti
and
pop
xchg
cmpsb
mov
daa
xchg
loop
fwait
push
test
pop
mov
aas
cld
adc
xlat
xchg
mov
outsb
cmp
in
data16
ljmp
roll
lea
test
aad
push
sbb
dec
das
pop
testl
adc
shlb
hlt
mov
jae
fistpl
pop
mov
inc
das
mov
mov
mov
push
mov
mov
push
subb
and
cmp
stc
ja
rcrb
je
dec
gs
addps
cs
cmp
push
jle
cmp
outsb
jmp
inc
lret
popf
adc
or
jbe
cmp
mov
adc
xlat
sbb
aam
rcl
sub
or
fisttpll
and
sbb
test
push
xchg
imull
mov
outsb
scas
and
popf
mov
xlat
sbb
pushf
pop
es
pop
cmp
push
aaa
jmp
loop,pt
into
stos
stc
xlat
push
ret
fildll
sti
mov
cld
inc
lods
daa
adc
xchg
mov
xor
push
ss
pop
push
sti
nop
lods
mov
mov
inc
outsb
mov
insb
pop
xchg
lds
cmp
testl
int3
sbb
jg
and
mov
scas
push
lret
inc
test
mov
je
add
pop
and
mov
out
aam
ljmp
push
das
mov
test
dec
sti
xchg
push
sub
cmp
data16
mov
jp
lea
fsubl
loopne
pusha
inc
cmc
mov
pop
out
js
popa
mov
leave
pop
add
xchg
dec
jp
xor
in
das
sub
or
inc
lock
clc
and
repz
adc
push
mov
loop
mov
das
jp
insl
sub
inc
push
sbb
add
mov
cmp
nop
lret
pop
mov
imul
fsts
sbb
mov
adcl
xchg
and
sbb
out
add
mov
roll
sub
sub
sub
pop
aad
inc
adc
cmp
cwtl
fxch
adc
fscale
subb
pop
pop
es
int3
iret
pop
gs
movsl
insl
cmp
mov
jbe
shrb
out
sbb
or
daa
adc
pop
or
adc
adc
xor
xchg
sbb
xchg
xchg
pop
jl
push
mov
jle
or
fldt
in
sbb
mov
call
lret
pop
sbb
fsubs
adc
pop
test
in
jge
test
test
lock
mov
dec
repnz
inc
and
mov
into
jbe
ret
cld
nop
nop
or
popf
movsl
shll
cmp
sbbl
mov
outsl
cs
pop
int3
and
fadds
movsb
sub
out
jge
gs
fsubrs
jns
cwtl
ret
inc
xchg
and
cmp
cmp
mov
lock
lret
dec
mov
mov
aam
inc
xor
xor
add
jno
cld
incb
scas
inc
pop
cmpb
xor
jp
sbb
popf
mov
dec
and
ret
mov
inc
jecxz
test
xor
sub
dec
mov
pop
stos
aad
mov
nop
fcomps
lcall
enter
out
insl
imul
inc
push
into
cmp
loop
cmpsl
xor
jmp
sbb
sti
pop
adc
clc
out
xlat
jl
sub
and
mov
mov
push
pusha
mov
rcl
pop
push
dec
fwait
std
xchg
jo
rorb
xchg
sarb
jb
fisubs
sahf
shl
sub
pop
fnstenv
rcr
or
rorb
aaa
add
icebp
mov
mov
les
insl
cmp
lods
add
and
in
sti
jbe
fwait
jne
adc
insb
out
shlb
testl
fldl
adc
scas
jge
dec
dec
push
pop
jmp
dec
mov
jecxz
push
cltd
dec
mov
in
inc
lret
pop
loope
xor
inc
rorb
push
js
add
push
add
call
xor
jmp
repz
mov
adc
lret
dec
addr16
xchg
outsl
cmpsl
push
or
aad
or
jge
mov
fidivrl
cltd
cmp
fmull
mov
jg
dec
popa
mov
cwtl
cmp
jl
ss
mov
pop
mov
sub
call
jge
jecxz
mov
shr
inc
jmp
xor
sub
mov
jle
and
lea
lahf
dec
ss
popa
or
inc
notl
jle
cmp
es
ss
cmc
mov
mov
subb
std
js
xor
sub
lods
jnp
and
gs
popa
mov
or
mov
sbb
and
pop
mov
outsb
outsb
das
inc
adc
xor
popa
xchg
xchg
inc
xchg
mov
movsl
lret
arpl
inc
imul
xchg
pop
and
add
sub
push
xchg
pop
add
insb
and
sub
lret
or
fs
jbe
andb
xchg
rcrl
pop
pushf
or
in
leave
ficoml
inc
adc
mov
mov
sbb
shl
pop
fcmovnbe
xor
fnsave
jecxz
sub
xor
rcrl
cmpsl
lret
jns
or
outsb
das
or
scas
jmp
mov
mov
jg
adc
sbb
movsl
jno
sbb
mov
in
ror
or
cmp
mov
scas
jle
fwait
or
iret
cmp
call
loope
push
xchg
pop
out
das
mulb
ss
jne
decl
test
sub
bound
cmc
mov
in
scas
mov
movsb
mov
test
sub
pop
mov
xor
or
push
inc
aas
dec
mov
dec
std
and
add
out
adc
lods
fs
inc
adc
and
push
stos
inc
aam
sbb
or
push
add
jmp
xchg
jl
push
xchg
into
mov
xchg
mov
cmc
push
or
xchg
fsubrs
loope
pop
int
xor
mov
ja
loop
ljmp
adc
cmpsl
in
sub
dec
and
and
mov
pop
addl
xor
pusha
mov
lret
dec
loop
jnp
sti
iret
lock
lods
hlt
cwtl
xchg
and
sbb
mov
fbstp
in
icebp
fnstsw
lods
in
cmp
pop
cmc
clc
xchg
into
xor
sbb
add
movsl
inc
movsl
mov
andl
jns
mov
leave
xor
push
gs
imul
sti
ret
in
adc
loopne
mov
push
andb
xchg
add
ficoms
push
imul
jne
jl
add
imul
cltd
std
fldcw
sbb
dec
mov
int3
cwtl
mov
pop
mov
mov
or
cmpb
or
mov
dec
mov
and
ds
dec
pop
mov
in
scas
loopne
rorb
movsb
sti
push
lahf
loope
int
rcrb
push
les
mov
push
and
sbb
xchg
rclb
addr16
mov
add
neg
push
sub
jno
in
sbb
pop
lds
jl
shlb
dec
mov
add
std
mov
cmc
pop
cltd
pop
or
idivl
xlat
sbb
sub
inc
push
cmp
jg
adc
xor
mov
cmpsb
mov
mov
xchg
loopne
ret
insl
add
and
xchg
mov
es
jne
cwtl
outsl
scas
jo
xor
daa
mov
sub
adc
xlat
fcmovne
sbb
loope
add
std
pop
nop
insl
sti
sub
jnp
push
xchg
jl
jge
imul
stos
hlt
add
lds
and
pop
pusha
divl
cmpsl
pop
jecxz
mov
mov
enter
js
inc
test
addr16
out
mov
xor
push
and
xchg
shl
mov
shlb
or
add
loop
call
sbb
or
clc
loopne
mov
bound
pop
cmp
insl
cmp
pop
in
es
xchg
mov
cmc
jmp
repz
xchg
repnz
ret
gs
inc
cli
push
sub
dec
jns
lods
inc
inc
inc
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
jno
pop
jno
addr16
or
add
or
fisubs
jmp
in
pop
pop
pop
cmc
clc
sahf
mov
xor
xchg
xchg
lock
out
je
adc
cmp
jmp
call
gs
pop
cwtl
jp
leave
ret
push
mov
fistpll
aam
das
cmp
and
mov
jbe
mov
mov
repz
lods
into
out
xchg
and
xchg
rcll
cmp
mov
in
jmp
aaa
sbb
std
jae
cmp
rcrl
xchg
loop
push
bswap
ds
jg
inc
addr16
jg
mov
mov
shrl
int3
ja
mov
in
mov
pop
sub
fbstp
jle
push
jno
imul
jg
pop
cmp
xor
loop
inc
mov
scas
push
pop
sub
test
in
cs
lret
ret
and
jl
push
subb
stos
into
test
pop
lret
shll
mov
add
push
lahf
inc
jb
shr
cli
pop
xchg
mov
inc
fiadds
sub
aam
jp
push
lret
add
inc
dec
cmp
adc
cmovb
and
movsb
mov
mov
pop
int
stos
addb
sub
push
testb
xor
add
in
add
and
cmp
adc
add
jnp
and
movsl
push
mov
hlt
or
sub
xor
mov
adcb
or
dec
adc
leave
jecxz
aas
pop
popa
mov
lahf
cmp
aaa
xor
jp
shlb
jo
cmpsb
fs
cmp
into
or
out
call
jp
mov
or
hlt
inc
mov
pushf
aaa
shrb
inc
cld
mov
add
outsb
xchg
push
or
xor
fcoms
lahf
xor
push
lock
pop
xchg
in
jo
inc
pop
push
cmovp
sub
aam
int
jb
xchg
and
pop
mov
pushf
pop
mov
lcallw
xorb
inc
push
push
adc
mov
orb
cmp
cmc
push
push
add
fiadds
pop
jnp
mov
dec
in
pushf
dec
push
xor
in
mov
lods
sub
sti
or
je
aad
clc
jbe
xchg
mov
pushf
movsl
sahf
stc
jle
sub
push
mov
fs
push
xlat
jmp
sbbb
xor
and
int
xchg
div
cmc
outsl
movsl
out
in
fistl
lods
shl
sar
ret
arpl
sti
je
dec
sub
out
pushf
notl
es
xlat
lock
rcrb
jb
sub
mov
pop
add
jge
adc
cld
mov
scas
jmp
push
cmp
in
or
jg
mov
scas
sub
lret
movsb
mov
popa
mov
mov
ljmp
in
clc
push
call
loope
and
adc
out
push
sub
or
xchg
lds
lods
cmpsl
cmpsb
test
outsl
repz
in
ja
in
xor
cli
lock
es
lods
xor
shr
gs
sbb
push
pop
xchg
into
out
sub
nop
jae
cli
shlb
int3
mov
shl
aaa
pop
inc
cmpsl
jg
imul
and
dec
aaa
push
pop
es
movl
insl
movsl
sbb
sub
jno
insl
mov
imul
adc
movsl
cmp
cltd
adcb
mov
cmp
in
in
ja
adc
aad
aam
sbb
dec
push
or
mov
out
loope
mov
mov
xchg
pop
sbb
mov
xchg
cmpsl
bound
push
sub
xchg
inc
adc
and
mov
cmp
fmuls
js
insl
loop
pop
xor
cmp
call
in
sub
cmp
lret
sbb
adc
mov
xor
nop
insb
add
sub
cmp
mov
cli
imul
into
pop
xchg
into
mov
es
call
xor
inc
jge
imulb
stos
jns
sub
add
ds
iret
loop
xchg
sub
xchg
lea
push
ret
pop
dec
stos
fbstp
jge
lods
cmp
push
int3
loop
xor
inc
mov
pop
xchg
xor
mov
shrd
shl
mov
mov
xor
shr
mov
jmp
fucomi
js
js
fists
mov
mov
bnd
or
add
or
pop
sub
sahf
fcompl
cltd
jmp
push
ret
mov
pop
stos
xchg
fbstp
pop
sub
jne
mov
dec
mov
push
inc
into
mov
jmp
in
shlb
mov
push
mov
stc
or
cmpb
scas
pop
ja
add
popf
mov
pop
cltd
and
loop
adc
icebp
adc
or
jb
mov
xchg
xor
imul
inc
and
mov
lds
out
ljmp
and
in
add
popf
leave
pop
xor
cmpsl
es
outsb
add
fs
pop
imul
adc
pop
or
mov
adc
cmp
jnp
push
sbb
push
aad
xor
bound
sub
hlt
ds
or
ret
or
dec
sbb
ret
pop
adc
andl
pop
imul
jge
or
hlt
inc
dec
aaa
sti
push
mov
cli
aaa
jo
out
xchg
sbb
jp
push
test
js
test
das
mov
or
sar
pop
je
and
out
cmc
ret
xor
pop
dec
aam
and
addr16
pop
inc
div
popa
pop
cltd
frstor
mov
add
repz
imul
add
and
jecxz
int3
jle
jp
jecxz
or
bound
inc
sbb
adc
adc
shrb
lret
lahf
mov
int3
cmpsb
test
dec
jmp
mov
sbb
jae
fidivs
xchg
mov
add
add
and
insl
lahf
pop
cmpsb
outsl
ljmp
pop
sub
fwait
les
pushf
add
pop
cmp
xchg
js
or
in
movsl
pop
cwtl
scas
shrb
mov
pop
or
jbe
dec
pop
fildl
shr
scas
inc
lahf
jmp
sbb
lock
push
rorb
pop
jmp
mov
xor
pop
jno
inc
in
sub
fucomp
ljmp
lock
mov
daa
pop
fcmovu
mov
sub
ret
nop
out
out
xor
jb
mov
push
push
shlb
lcall
mov
xor
inc
mov
dec
ret
pop
test
in
mov
pushf
inc
dec
test
jmp
scas
mov
pop
insl
fstpl
test
mov
push
jecxz
pop
orps
mov
in
dec
mov
scas
or
adc
movsl
outsb
cmc
inc
jbe
je
ja
loop
lock
xor
mov
sub
push
mov
dec
pop
in
push
ret
std
aaa
pop
pop
add
mov
inc
xchg
in
and
dec
fisttpll
int
test
outsb
add
lods
inc
pop
or
mov
add
jmp
xor
aam
jecxz
imul
cmc
outsl
add
addr16
lcall
fistps
out
into
mov
mov
cmp
dec
shl
push
inc
xor
jb
pop
out
push
mov
xchg
rorb
pop
ja
in
sub
mov
popa
ret
dec
pop
es
inc
inc
add
jns
insb
mov
pop
xchg
xor
pop
loope
jmp
inc
jb
and
cmpb
sub
sbb
cmpsb
adc
cmpsb
int3
xchg
dec
cwtl
cmp
aam
aas
jbe
test
aaa
cmp
out
jnp
and
enter
lock
imul
testl
mov
push
outsl
jg
and
pop
pop
ljmp
mov
xchg
imul
fcomi
ficoml
dec
fmul
std
mov
test
mov
lcall
jns,pt
das
xor
jg
xchg
jp
inc
sub
mov
mov
hlt
xorb
dec
popf
sub
dec
adc
cmpsl
scas
dec
add
mov
jno
push
jns
testb
dec
sbb
mov
pop
popf
mov
cmpsb
ds
mov
aas
and
and
outsb
mov
cld
mov
jp
insb
pop
sub
outsl
popa
xor
sub
rclb
mov
or
sbb
sub
fwait
sbb
mov
mov
imul
ds
ds
aas
gs
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
jmp
add
popf
mov
in
pop
addr16
sbbb
pop
or
aad
or
or
adc
sub
mov
sub
add
rorb
aam
add
lds
out
sub
cs
lock
aad
cmp
les
testl
das
pop
cld
lahf
jge
pop
movsl
or
push
inc
in
lea
mov
ficompl
pop
and
hlt
push
mov
aad
pop
pushf
clc
mov
push
mov
adc
xchg
sub
jecxz
ss
outsb
in
sub
int3
ss
into
cmp
imul
or
sub
sbb
dec
xor
push
movl
insl
pop
push
sub
outsb
sub
mov
stos
test
mov
mov
mov
adc
xchg
in
mov
enter
stos
xor
lock
imul
push
jo
mov
push
pusha
mov
test
add
inc
and
push
push
sub
mov
pushf
jno
jge
movsl
mov
pop
mov
scas
lcall
add
xor
bound
mov
imul
sti
and
and
inc
lds
inc
cmp
pop
jg
out
xlat
xor
push
lock
lahf
repz
dec
mov
sub
xchg
dec
ds
test
push
jg
push
les
sub
in
sarl
xchg
mov
pop
lods
test
fsubrl
add
adc
or
loop
sbb
in
outsl
ror
movsl
xchg
inc
pop
sub
mov
rcrl
mov
inc
repz
mov
xor
pop
add
mov
or
inc
adcb
jae
out
int
mov
adc
icebp
cmp
scas
sub
paddusb
push
sahf
mov
mov
xor
xor
ja
rolb
lods
mov
mov
xor
pop
dec
ss
mov
andb
pop
xor
sub
xor
push
fwait
and
sbbl
sub
jecxz
xchg
push
in
icebp
pop
or
push
loop
jae
push
cmc
xor
testl
sbb
add
lret
inc
or
ljmp
mov
gs
clc
adc
lahf
in
or
and
in
movsb
jle
cld
lds
sub
inc
sub
std
jae
outsl
popf
pop
cmp
sub
fldcw
pop
popf
stos
fwait
inc
dec
push
gs
jae
jecxz
clc
outsb
xacquire
and
mov
jb
fdivr
cld
adc
data16
and
inc
mov
call
mov
loopne
adc
pop
loopne
bound
mov
mov
lods
pushf
mull
jle
out
test
dec
pusha
loop
imul
fadds
repnz
sub
ret
repz
dec
ljmp
push
or
ret
int3
pushf
cmpsb
pop
js
in
pop
mov
sub
push
mov
cmp
inc
lock
xor
mov
mov
js
xchg
xchg
sbb
call
xchg
hlt
jmp
xchg
xor
int3
cmpsb
in
repz
fcmovnbe
sub
lcall
sub
xchg
imul
test
insb
stos
call
mov
shrb
push
xchg
and
stc
pusha
fdivs
fs
in
stos
xor
jl
mov
test
and
dec
adc
push
sbb
daa
int3
dec
scas
adc
fstl
mov
push
lea
mov
jno
cmpsb
ljmp
cmp
cld
dec
std
adc
pop
lea
insb
loopne
cltd
xor
imul
dec
cwtl
dec
mov
cmp
jo
cwtl
jbe
mov
pop
ret
loop
jl
sarb
xchg
cwtl
divl
xor
insl
dec
lret
shrl
imul
bound
daa
inc
popa
addb
scas
add
fstpl
or
fmull
fistps
and
std
out
push
jnp
fnstenv
test
jnp
cmp
into
jnp
js
fisttpl
add
inc
std
xchg
movb
movb
mov
movzbl
mov
movzbl
shl
jmp
loopne
jg
pop
xor
fnsave
cwtl
xorl
dec
cs
or
sub
popa
add
inc
daa
pop
movsl
add
aam
xor
pushf
frstor
xor
dec
pop
call
jle
cmc
jb
xor
sahf
lods
insl
mov
icebp
or
jecxz
jmp
xor
lock
push
adc
push
push
loop
lret
push
push
daa
mov
lds
subl
in
hlt
jo
cmpsl
cmp
leave
sub
or
movsb
pop
lea
mov
mov
test
pop
mov
xor
push
or
mov
loope
mov
add
jp
fistl
enter
lods
pop
cmc
sahf
sbb
dec
inc
cli
fs
mov
fcoml
adc
jl
fidivs
lea
imul
jnp
loopne
fnsave
out
mov
xor
test
push
push
roll
add
cltd
xchg
mov
in
mov
cmp
test
ds
xor
ficoms
js
mov
repz
out
scas
or
test
fstps
xlat
nop
hlt
and
sbb
or
adc
nop
jns
or
cmp
stos
hlt
cmp
push
or
bound
or
adc
mov
xchg
rorl
dec
and
repz
jnp
xlat
popa
sbb
mov
mov
mov
mov
out
rcrl
shlw
lods
push
or
int3
mull
or
shlb
cmc
enter
in
outsb
pop
lea
xchg
xchg
testl
sub
outsb
nop
sbb
arpl
mov
mov
cmpb
xor
add
pusha
push
xor
stc
orb
sbb
xor
lahf
xor
jp
xchg
in
and
xlat
loop
lea
loopne
add
mov
data16
jns
fbstp
ja
mov
imul
pop
ret
and
repz
hlt
in
mov
xchg
lret
daa
aad
xchg
fwait
pop
sub
ss
cmp
jnp
inc
ja
enter
ljmp
mov
insl
adcb
in
mov
andl
shlb
fbld
push
lock
push
jnp
roll
and
xor
jp
pop
fs
xchg
lods
aaa
testb
mov
scas
int
mov
jl
lock
cmpsl
test
aas
cltd
and
rolb
shrl
test
in
test
or
test
ds
pop
insb
xchg
pop
pop
sbb
mov
nop
push
gs
mov
jns
sahf
dec
enter
jl
addl
fistl
push
mov
jl
mov
mov
aas
sbb
xor
jmp
repnz
mov
inc
jo
inc
add
adc
dec
pop
push
hlt
les
add
lea
adc
aas
shl
fucom
mov
das
out
jmp
insb
inc
xor
repz
add
inc
enter
mov
mov
stc
mov
cltd
repz
dec
cmp
pop
xor
xchg
loop
sbb
adc
jno
push
inc
fsubl
jmp
inc
stc
jbe
into
out
jae
jne
push
icebp
bound
sub
mov
xchg
and
popf
mov
xchg
call
push
inc
test
xor
mov
jne
adc
push
lea
imul
mov
sbb
mov
jle
pop
xor
test
and
jecxz
cltd
sub
and
sahf
adc
movsl
xor
add
jae
cmp
sbb
pop
jnp
cs
fistl
xchg
add
das
inc
in
xor
lcall
iret
jp
add
repnz
out
arpl
jno
pop
decb
in
fstl
iret
adc
lret
in
movsb
in
jb
jno
imul
movsl
icebp
or
pop
add
add
fbstp
or
repnz
mov
pusha
inc
inc
pushf
mov
dec
ficomps
pop
lret
cs
repz
enter
xchg
mov
cmp
scas
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
jmp
push
adc
pop
xlat
sub
mov
xchg
test
aad
or
pop
sub
in
xorl
data16
adc
pushf
cmp
int3
test
popa
xchg
cmp
iret
jp
outsb
sbb
pushf
lahf
insb
inc
jbe
leave
mov
imul
fisubl
mov
pop
inc
mov
sub
or
gs
je
xor
popf
mov
hlt
jns
push
adc
jecxz
ret
cmp
js
sub
ds
inc
mov
push
repnz
mov
nop
lds
xchg
dec
pushf
push
mov
pushf
loope
mov
pop
add
sub
inc
in
hlt
int
ss
hlt
xor
aam
push
in
sbb
outsl
out
and
sarl
shrb
mov
mov
dec
jo
jnp
lcall
mov
dec
jmp
cmp
test
cmp
xchg
lcall
adc
xor
loope
daa
inc
loop
xchg
or
cwtl
les
and
mov
mov
or
inc
pop
cmp
or
adc
ret
fsubp
mov
movsb
daa
push
mov
mov
xlat
pop
andl
mov
add
ljmp
push
push
dec
push
jg
xor
ret
mov
sarl
adc
lahf
dec
insb
pop
movsb
sahf
mov
lcall
fcompl
fcoms
mov
mov
bound
lock
inc
sub
pushf
lahf
es
mov
fistpll
lahf
jp
imul
mov
or
inc
mov
hlt
pusha
cmpsl
out
out
cs
cmpsl
adc
jo
into
cs
pop
and
iret
mov
sti
mov
outsb
addr16
jne
lds
dec
inc
lea
aam
jb
xlat
loope
popa
aas
imul
push
fldcw
xchg
cmp
jo
cltd
ja
adc
je
pop
push
ja
mov
mov
jl
sbb
cmpsb
data16
test
ljmp
in
shr
fstps
jp
xor
faddl
xor
aad
insb
cltd
xchg
ds
and
ljmp
pushf
popf
leave
push
ret
add
jg
mov
adc
mov
gs
icebp
je
add
ret
iret
dec
les
jecxz
fidivrs
or
mov
and
rol
pop
and
dec
adc
mov
sar
test
mov
outsl
aaa
popf
push
lea
testb
adc
out
dec
push
jnp
leave
jae
mov
lea
pop
mov
mov
test
pusha
pop
mov
dec
add
xchg
push
adc
pop
cmp
orl
addb
inc
xor
stos
mov
or
or
arpl
stos
in
jl
fiadds
pop
xchg
xchg
add
jl
mov
pop
icebp
addr16
push
cmp
push
cmp
aad
and
inc
mov
xchg
mov
cmpsl
push
inc
das
int3
jg
mov
xlat
roll
mov
test
pusha
push
mov
xchg
lret
dec
scas
mov
ret
mov
in
xchg
cs
mov
and
pushf
icebp
lret
pop
in
lret
push
fildll
test
add
outsb
and
cmp
sarb
imul
pop
xor
push
lcall
bound
nop
push
and
jns
outsl
dec
inc
cmpsl
jge
or
repz
pop
mov
call
or
cmpsb
and
pop
push
repz
popa
les
and
js
ja
and
add
rorl
mov
adc
ficompl
add
fiaddl
sub
push
push
adcl
dec
mov
aaa
fmulp
stos
call
add
xlat
add
sbb
es
stos
in
lock
sub
inc
cmp
mov
repz
jp
subl
and
xchg
cmp
cmp
cmp
mov
test
adc
mov
push
mov
gs
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
jmp
sbb
inc
daa
inc
pop
and
lahf
adc
mov
aad
or
lds
jmp
rolb
mov
inc
lods
popf
xchg
jge
loop
xchg
outsl
data16
cmpb
shrl
jecxz
fldl
daa
pop
scas
jbe
jl
inc
adc
fs
aaa
or
cli
outsl
sbb
iret
inc
mov
iret
and
push
adc
sbb
pop
test
bound
jp
pop
xchg
inc
pop
or
roll
fwait
rorl
and
pop
das
movsb
das
jle
decl
adc
inc
mov
sbb
sub
mov
add
push
cmpsl
xor
sbb
aad
mov
inc
push
lock
mov
dec
jae
dec
push
mov
push
add
in
mov
sub
hlt
loopne
shll
jb
push
shr
or
add
sub
sahf
and
ret
lods
dec
cmp
inc
ficoms
addl
xchg
aad
mov
or
push
mov
jp
loop
out
push
ss
mov
mov
insl
popf
cli
sub
adc
jge
adc
call
push
cmpsb
xchg
add
inc
push
pushf
xor
arpl
or
fs
cld
mov
mov
fmull
ss
insb
xchg
shr
mov
es
les
mov
mov
lods
or
xchg
sbb
int
insl
es
leave
test
adc
inc
out
sub
fisttpl
fnstcw
lods
xor
mov
xchg
in
xchg
or
push
out
mov
ss
mulb
out
iret
popa
inc
sbb
shld
hlt
fucom
fistpl
fldl
ss
test
bound
sbb
jno
mov
ds
scas
or
in
cmc
lret
cmp
cwtl
push
clc
dec
loopne
les
pop
scas
lea
fwait
mov
arpl
xor
lcall
rolb
nop
xor
and
cmp
jnp
mov
mov
push
jbe
aaa
xlat
mov
into
repz
sbb
push
mov
push
or
test
mov
cmp
loop
mov
daa
int
inc
sbbb
test
das
pop
popa
bound
xor
dec
inc
popf
imulb
lahf
fdivrl
cltd
xchg
mov
and
xchg
sub
push
xchg
in
outsb
jecxz
inc
mov
int
sbb
adc
scas
lcall
push
icebp
xor
pop
js
mov
xchg
call
ljmp
mov
push
mov
dec
pop
push
and
jo
jmp
cmp
mov
sub
icebp
iret
or
movsl
movsl
pop
jb
push
loop
lods
out
sahf
or
push
sbb
push
call
xor
mov
insb
das
je
aad
sbb
mov
jmp
movsl
in
loope
adc
xlat
mov
aam
jnp
data16
inc
adc
push
cs
out
stos
pop
jns
push
push
pop
stc
cmpsl
dec
ss
jnp
sahf
dec
dec
sti
leave
daa
cmpsl
popa
adc
xor
jne
jae
fcomp
bound
xchg
scas
stos
adc
enter
jecxz
pop
iret
sub
mov
push
cwtl
mov
push
loopne
rcrl
sbb
push
pushf
xchg
sbb
pop
sub
aad
loop
add
in
in
aas
or
and
push
icebp
aad
in
xchg
xor
lea
mov
mov
lret
insl
js
xchg
in
xchg
fldt
cmp
and
daa
cmpsb
fiaddl
jae
inc
int
jnp
neg
aas
sbb
jb
push
inc
push
faddl
pop
push
cwtl
dec
cmp
sbb
xor
sbb
aad
insl
outsb
daa
jmp
sbb
xchg
xor
and
insl
push
rclb
xor
cmpsb
cmpb
mov
mov
push
and
fisubl
mov
jp
inc
ss
dec
cmp
inc
inc
xchg
inc
mov
std
mov
popa
mov
into
movsl
ret
pop
ret
adcl
and
iret
mov
mov
xchg
xor
xchg
sub
adc
pop
data16
and
xor
adc
popa
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
jmp
xlat
js
ret
push
pop
stc
xchg
jns
push
pop
addr16
or
mov
or
push
test
adc
jl
cmp
mov
insb
fimull
or
test
adc
fisubrl
lahf
int
outsl
jl
stos
cltd
cli
or
adc
xor
mov
insl
sbb
xchg
iret
cmpsl
dec
pop
and
std
fs
ljmp
inc
and
jmp
cmp
int
mov
push
aam
mov
shll
loopne
mov
mov
xchg
es
mov
mov
cmpsb
int
and
enter
xor
jle
jge
fwait
adc
iret
sbb
pop
loop
jbe
nop
ljmp
inc
pop
cwtl
xor
daa
push
sbb
loopne
dec
rolb
scas
repz
jns
adc
mov
push
cmpsb
sbb
ret
cltd
jb
mov
sti
leave
mov
rorl
xor
add
dec
int
fisubrl
mov
push
or
push
push
add
fwait
sub
es
aas
adc
iret
fisubs
sbb
call
mov
cli
mov
pop
cmp
mov
mov
es
sbb
add
cmp
pop
ljmp
mov
cltd
stc
fyl2xp1
and
push
pop
lret
push
cltd
xlat
popa
mov
lcall
clc
xchg
and
push
fwait
cltd
push
aam
pop
das
loopne
push
sub
fsqrt
mov
orl
xchg
in
dec
mov
pop
inc
or
mov
push
fucom
adc
jno
scas
fcomps
mov
addl
push
or
fnclex
adc
cmpsl
xchg
jp
adc
pop
testl
notb
pop
mov
inc
inc
test
in
pop
push
into
and
inc
cmp
sbb
mov
inc
mov
mov
cmpsb
test
cld
fisubl
xchg
mov
cmpsb
mov
push
pop
fisubrs
mov
stos
cmp
inc
into
sbbl
les
adc
or
lret
cmp
dec
ja
sub
outsb
aam
in
xchg
push
xchg
sub
cmpsl
pop
push
in
test
sbb
xor
aad
sub
pop
pop
sahf
addr16
adc
insl
push
dec
test
call
pop
imul
sahf
or
adc
mov
inc
dec
xor
jmp
out
xor
xchg
inc
sub
jb
sub
jmp
data16
push
adc
sub
cmpsb
out
inc
imul
add
das
int
cmp
xor
notl
inc
xchg
out
xlat
add
push
stc
lcall
stos
adc
xor
pop
mov
mov
aam
or
sbb
add
loope
lcall
je
dec
mov
push
les
outsl
mov
subl
out
add
dec
imul
test
sbb
loop
ss
in
inc
push
mov
int
mov
jae
push
or
lods
ret
push
js
dec
aaa
pop
pushf
mov
xor
imul
sub
fcoms
sbb
or
sbbl
cmpsl
lret
xlat
lcall
jge
or
xchg
xchg
adc
sub
jne
in
pushf
push
and
test
sbb
outsl
or
jb
fs
das
test
fwait
cwtl
cmp
dec
out
lea
cmp
dec
int3
cld
packssdw
frstor
test
pop
fdivs
aad
or
cmp
scas
inc
inc
cmpsl
gs
xchg
clc
push
repz
mov
xor
addb
stc
or
add
fcoms
aam
xchg
mov
mov
in
in
inc
das
jnp
lock
mov
mov
int3
shlb
movb
lcall
pop
scas
xor
sarb
push
shl
hlt
push
mov
mov
movsl
mov
cmp
insb
movsb
sarl
adc
push
cmp
mov
js
mov
fmul
call
mov
aaa
pop
std
add
leave
mov
add
outsl
mov
inc
in
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
jmp
fadd
mulb
xchg
sbb
aaa
dec
jno,pt
add
mov
or
xchg
jb
or
push
repz
or
or
mov
ret
pop
xchg
pop
push
repnz
cmp
xchg
pushf
jmp
push
xor
fisubs
mov
mov
cli
jmp
jg
pop
and
aas
jge
int
mov
or
fdivs
mov
aam
aam
pop
pop
ficoml
dec
mov
out
in
push
call
push
std
dec
ljmp
pop
lcall
inc
test
push
dec
xchg
scas
stc
shl
xchg
or
push
sahf
ja
das
and
stos
into
mov
mov
std
das
push
addr16
iret
ds
scas
jbe
or
out
xor
sub
sahf
das
adc
outsl
mov
and
sti
lds
arpl
jl
jl
pop
test
push
add
push
xchg
shlb
into
adc
pop
leave
mov
test
rcrb
pop
jmp
lcall
stos
cwtl
dec
decb
lods
and
mov
aas
xchg
hlt
daa
mov
dec
loope
shrl
sbb
xor
pushf
mov
push
inc
nop
pushw
and
or
adc
sti
sbb
or
lret
ret
jae
insb
cmpsl
into
add
cmp
mov
fidivrs
jmp
adc
lods
cmp
push
dec
outsb
mov
cld
push
sub
sbb
lahf
pop
pop
iret
mov
movsb
pop
sub
jne
mov
idivl
xor
ret
sbb
stc
orb
lret
cmp
out
adc
dec
adc
aad
add
add
and
add
pop
add
sub
push
lods
xor
mov
out
mov
cmp
test
pop
int
mov
hlt
ljmp
xor
shrb
and
cs
outsl
jne
imul
je
pop
push
jno
or
movsl
outsl
sbb
adc
popa
xchg
inc
int3
lea
insl
sbb
stos
mov
pop
push
je
inc
dec
negl
repnz
mov
out
dec
mov
cmp
insb
mov
hlt
mov
sarb
jp
jge
call
pusha
js
int3
and
pusha
push
push
xlat
jbe
andl
xor
rol
sbb
nop
mov
xchg
popa
je
stos
dec
xor
sbb
aaa
mov
xchg
jge
mov
sbb
std
push
adc
in
arpl
sbb
xor
inc
dec
leave
lods
jns
stos
ss
sbbb
negl
loopne
arpl
mov
dec
testl
cmp
sub
and
sub
and
int
inc
outsl
aad
dec
in
mov
loopne
inc
mov
mov
dec
xor
pop
push
or
clc
out
jne
sub
mov
pusha
inc
sub
cli
loopne
rcrl
popf
or
daa
out
rcrl
int
pop
cmp
lahf
std
sbb
nop
xor
dec
ret
fidivrl
adc
mov
rcrb
pop
mov
popl
and
sbb
and
xor
jg
out
add
pop
xchg
add
call
and
jnp
pop
aam
and
aas
or
imul
cmp
add
dec
ds
sbb
mov
pop
cmpsb
int3
mov
jl
roll
sub
mov
jmp
mov
push
std
lods
clc
push
jmp
xchg
in
int
imul
sub
mov
pop
push
subl
bound
incl
fsubl
mov
test
xchg
xor
add
test
test
jbe
push
lea
loopne
in
inc
ficomps
mov
pop
dec
pop
dec
add
or
cmp
in
sti
cltd
movsb
xchg
mov
xchg
inc
popa
pop
mov
jle
or
popfw
mov
jecxz
icebp
sub
lock
movsb
ror
xor
bound
mov
inc
xchg
clc
and
dec
je
scas
dec
mov
je
sbb
add
imul
scas
jg
mov
xchg
pusha
shrb
mov
mov
push
in
inc
dec
sub
jne
and
ret
incb
xchg
das
iret
imul
jnp
stos
cmp
xchg
jbe
push
pop
jmp
xchg
push
xor
xchg
ja
popa
adc
add
or
test
pop
ja
cs
jbe
sub
push
mov
int
lret
push
insl
and
cld
add
nop
push
pop
ja
mov
jae
aam
fcmovnbe
push
out
jb
mov
push
test
and
jle
data16
pusha
negb
adc
shlb
out
push
sbb
std
push
add
dec
and
jae
or
inc
frstor
sbb
sub
sub
scas
es
cmpsb
xchg
and
push
inc
test
in
mov
adc
int3
and
mov
andl
lahf
shl
std
mov
cmpsl
repnz
cmp
jb
adc
stos
pop
clc
sub
mov
sti
push
ftst
ret
inc
cmc
mov
movsl
outsb
outsl
test
stos
jp
push
mov
mov
sub
jo
jnp
add
cs
add
adc
dec
fwait
or
sbb
test
in
mov
mov
mov
mov
pop
push
push
pop
imul
push
out
in
fidivrs
xchg
jo
mov
pop
jle
ret
cs
adc
sub
xchg
push
daa
push
sub
or
or
loope
mov
pop
pop
imul
push
shl
cli
mov
inc
in
ret
push
add
js
loop
mov
lret
scas
ficomps
push
pop
add
loopne
lcallw
sub
pop
mov
nop
inc
fisubrl
aam
stc
pop
cld
jo
dec
sub
iret
mov
or
lock
cwtl
addr16
es
test
sub
fdivl
pop
dec
dec
mov
and
jbe
dec
mov
shr
dec
sbb
out
fidivs
imul
rclb
inc
pop
pop
xor
cltd
lret
mov
in
js,pt
sbb
cmp
dec
adc
cld
adc
jmp
jb
mul
xorl
iret
cld
iret
in
lods
cmp
pushf
loop
in
in
mov
inc
fmuls
jo,pn
pop
cmpsl
dec
fstl
push
sub
mov
mov
jl
jp
in
pop
pop
mov
mov
xchg
mov
xor
inc
jno
xchg
mov
shrb
add
push
std
mov
js
fistps
scas
or
xor
cmc
mov
jne
cltd
loopne
mov
lea
out
aas
jp
add
les
pop
dec
inc
pop
jmp
bndldx
adc
out
adc
jge
mov
jmp
into
inc
or
push
cli
mov
pop
xchg
movsb
aam
shll
ljmp
out
stc
es
test
loopne
or
addl
es
cmc
xchg
out
cmp
sbbb
xchg
xlat
ret
fiaddl
jae
out
int
pop
popa
and
cmp
or
push
popf
mov
adc
cmp
push
mov
js
popa
ds
jae
adc
xchg
sub
add
jg
fisttpll
mov
jnp
pop
das
sbb
or
pop
and
jle
stc
stc
and
jno
stos
push
xchg
testl
dec
xchg
or
popf
mov
daa
cmpsl
inc
mov
pop
lock
test
arpl
pop
add
mov
push
cmc
add
lret
pop
vshufps
rcrl
or
jg
imul
ss
mov
mov
lcall
hlt
outsb
and
push
popf
push
push
lock
push
pop
nop
roll
sub
shll
lock
mov
cwtl
mov
call
jo
push
test
inc
inc
movsb
imul
sbb
pusha
cmp
pop
enter
pop
jp
xor
add
mov
subb
adc
mov
jle
lcall
in
mov
shll
mov
sti
sbb
adc
mov
ret
aas
or
repz
dec
jp
push
sti
inc
mov
sbb
out
scas
jecxz,pt
outsb
xor
dec
cwtl
out
jnp
push
lods
ja
pop
shll
and
adc
pop
cli
pop
leave
jmp
lahf
mov
push
or
dec
cmp
shrb
stos
inc
push
enter
or
call
scas
inc
add
enter
dec
and
mov
cmp
loopne
inc
faddl
lret
add
dec
iret
sub
fnsave
xchg
lds
mov
or
push
sbb
loop
mov
cmp
aad
mov
pushf
adc
xor
mov
iret
jp
lahf
inc
adc
and
adc
sti
jmp
jmp
adc
inc
mov
pop
jae
cmp
adc
and
testb
loopne
test
pop
mov
data16
inc
inc
xchg
lcall
scas
pop
sbb
xchg
xor
stc
in
loopne
xor
add
aad
mov
push
cmp
xchg
jno
testb
iret
les
jecxz
inc
test
mov
ret
sbb
in
es
movsl
add
lods
mov
jl
dec
mov
jbe
negl
cs
loopne
test
and
cmc
shll
nop
imul
jp
fdivp
fcmove
pop
daa
add
sbb
out
imul
outsl
std
sbb
testl
pop
and
movsl
inc
mov
flds
lock
push
bnd
nop
shlb
mov
insb
insl
mov
add
fsubrp
mov
sbb
mov
xor
cli
cwtl
cmp
sub
adc
ss
dec
push
les
sbb
rclb
nop
cmpb
lea
loope
ret
fst
mov
push
or
mov
out
dec
loop
sbb
add
js
dec
shrb
bound
pop
repz
aam
push
inc
inc
call
and
lods
dec
mov
and
xchg
fwait
xlat
and
add
test
push
mov
lcall
fwait
lret
aas
or
adc
xchg
std
pop
inc
push
push
mov
push
jp
mov
inc
in
sbb
sub
cmp
lahf
cs
clc
xchg
sbb
xor
sub
clc
shll
push
pop
dec
leave
sbb
ja
cmp
js
xchg
aam
sub
das
push
enter
sarl
in
mov
xor
into
pushf
scas
data16
ja
popf
enter
inc
aaa
shl
and
add
mov
pop
cmp
fstps
out
loopne
xlat
data16
pop
subb
mov
pop
je
out
shrb
mov
popa
imul
leave
or
sub
mov
jne
or
popa
and
pop
cmp
add
xor
mov
inc
jae
fwait
sub
fildll
shrb
outsb
adc
sbb
xor
dec
inc
andl
leave
inc
out
sbb
lods
imul
sub
jae
xor
out
inc
mov
repnz
push
cli
mov
jb
dec
mov
test
out
xchg
add
xor
xor
sub
flds
fld
mov
push
subb
adc
xchg
adc
mov
push
pop
jns
fiaddl
and
adc
rcrl
dec
ss
add
sub
push
movsb
lea
add
js
push
ja
mov
test
xchg
notl
repz
adc
or
jo
gs
adc
decl
pop
xchg
es
ret
fcompl
aad
pop
mov
adc
mov
popf
repz
push
mov
sub
pop
fcmovnbe
cmpsb
int3
dec
push
jecxz
xor
setne
in
int
jno
push
call
out
ljmp
dec
cmp
cli
fnsave
mov
test
faddl
sub
sub
and
push
ja
inc
and
or
cmp
push
fnstsw
sub
fisttps
cvtpi2ps
inc
es
les
shll
repnz
cltd
clc
push
in
pop
imul
popf
sbb
xor
mov
in
push
daa
or
enter
and
data16
fbld
cmp
cs
shrl
in
in
and
pop
and
xchg
lea
popf
pop
mov
lcall
call
push
cld
push
shr
pop
xchg
jae
test
sub
cmp
mov
adc
das
sbb
scas
and
sub
add
jne
inc
fadds
inc
clc
icebp
jl
add
lret
add
push
cmp
adc
shll
mov
adc
or
mov
add
out
add
aad
xorl
xchg
loop
hlt
inc
in
rorb
sti
pusha
mov
cld
push
daa
mov
fs
dec
jecxz
pop
out
sbb
pushf
jle
loope
fstpt
orl
mov
or
fnstcw
popl
mov
mov
into
jecxz
and
je
test
and
lock
inc
insl
icebp
cmc
jo
push
push
fisubrs
jns
fiadds
ja
push
jp
fcmovu
int
aas
aas
mov
xor
das
int3
and
dec
jg
fcmovnu
dec
insb
in
arpl
aad
push
mov
pop
movsb
mov
cmpsl
mov
outsb
std
sub
push
pop
mov
inc
fsts
add
xor
xchg
in
popf
ljmp
pop
pusha
and
xchg
incl
pop
testb
inc
in
popf
jle
push
add
nop
arpl
into
leave
aaa
sbb
shlb
aad
repz
js
pusha
add
xor
sbb
aam
mov
adcb
stc
in
imul
xor
xchg
push
rcrl
cmp
rclb
xchg
in
ja
and
cmpsl
xchg
sti
loop
mov
les
or
jmp
jle
punpcklwd
imul
adcl
rclb
sub
mov
add
arpl
adc
adc
add
inc
pop
leave
sbbb
sub
adc
fcoms
push
cmpsb
sub
dec
rcll
sbb
inc
dec
scas
pushf
in
push
mov
pop
pusha
sarl
mov
aam
jne
mov
sbb
iret
cltd
pop
and
push
hlt
int
addr16
mov
adc
mull
pop
call
sub
adc
test
jb
push
mov
cmp
call
and
daa
xchg
mov
dec
mov
int
ljmp
lods
or
xchg
sbb
inc
sub
pop
and
repnz
clc
test
out
mov
lret
add
jmp
aam
pop
ljmp
push
pop
jo
lock
adc
fiaddl
pop
mov
cmp
into
pop
jmp
mov
out
ret
push
mov
pop
out
xlat
stos
test
sbb
xchg
adc
lcall
ljmp
adc
in
dec
mov
mov
jmp
out
or
lret
aaa
daa
mov
ret
dec
or
into
inc
mov
popf
sbb
dec
in
cs
int3
shrb
mov
clc
lahf
mov
inc
sub
pop
sti
fwait
adc
xor
leave
pushf
adcl
lcall
sbb
cmp
mov
outsb
mov
and
ret
testl
push
iret
or
jg
aas
imul
daa
pop
ret
and
mov
lea
xchg
in
pushf
iret
xlat
hlt
cmp
mov
arpl
dec
cmpsl
xlat
xchg
xchg
mov
fildl
mov
les
repnz
in
pop
mov
xchg
testl
jbe
inc
and
mov
out
enter
fldt
mov
mov
call
push
mov
cmpsb
repz
mov
mov
test
adc
dec
mov
xlat
adc
mov
and
ror
add
or
cmpsl
xchg
cmp
ret
dec
xlat
sbb
out
test
clc
lahf
sbb
or
lods
or
add
test
das
pop
pop
inc
xor
ret
mov
sbbb
add
pushf
mov
xchg
ret
cwtl
fisttpl
adc
daa
add
and
out
push
les
mov
push
testl
pushf
sbb
and
imul
les
mov
push
aaa
outsb
and
scas
sub
xlat
cmp
dec
test
fsubr
mov
imul
mov
movl
movl
xor
movl
jmp
sub
fistpl
mov
stc
push
or
mov
or
and
push
adc
mov
cmp
cld
jae
lcall
dec
test
shlb
ret
mov
sbb
aaa
dec
xorl
aam
stos
mov
ljmp
add
jno
aam
push
imul
dec
stos
mov
incl
dec
addr16
adc
or
mov
mov
mov
fiadds
cmp
mov
dec
or
sub
and
bound
mov
push
xchg
adc
dec
out
imul
push
insl
jae
adc
inc
or
mov
call
adc
pop
add
xchg
xchg
mov
xlat
dec
jb
and
inc
insl
arpl
dec
jl
lcall
rolb
mov
add
pop
xchg
icebp
mov
test
mov
ljmp
mov
xchg
and
test
adc
stc
insl
and
dec
adc
pop
pushf
pop
push
sub
dec
data16
clc
inc
add
xchg
adc
mov
jmp
inc
in
roll
roll
addl
std
xlat
in
lods
push
jb
fldenv
rolb
add
sbb
or
js
xor
jecxz
out
and
iret
jae
dec
mov
lret
lahf
mov
push
pop
sub
jge
loop
jle
xchg
xlat
mov
xor
shlb
push
in
inc
cmp
lds
xchg
push
stos
mov
mov
cmp
push
sub
inc
push
xchg
jno
jo
mov
dec
repz
push
jp
xchg
mov
ss
mov
xchg
dec
pop
cltd
sbb
adc
loope
mov
leave
pop
dec
rorb
adc
push
or
dec
or
mov
sbb
ds
or
push
adc
dec
loope
xchg
add
xchg
xor
fdivrs
mov
push
jmp
or
lcall
dec
sub
pop
jne
xor
xchg
fisubrl
sbb
lds
mov
test
or
sahf
pop
hlt
pop
cmpb
in
xchg
cli
cmpsb
xchg
stc
sbb
movsl
jb
test
mov
mov
mov
movsl
roll
js,pn
pop
push
lods
xchg
inc
inc
shrb
loop
sbb
adc
adcl
inc
sbb
push
insb
sbb
push
mov
lods
push
in
movsl
push
cs
or
outsb
mov
jne
jbe
push
sub
bnd
jno
jbe
push
jns
stc
into
scas
mov
push
sub
sub
adc
daa
pop
dec
xor
jg
push
inc
add
in
rclb
shlb
ret
lret
jmp
jg
adc
pushf
or
inc
jns
lds
fldl
dec
cmpsl
mov
dec
jnp
clc
outsl
push
sbb
cli
loop
jp
mov
rcll
sbb
mov
bound
push
push
mov
scas
push
adc
jnp,pn
mov
in
add
cmpsb
nop
mov
iret
mov
outsb
push
out
pop
cmp
mov
imul
addr16
cmp
aas
mov
dec
pop
ljmp
cmp
int3
sarl
aad
movsl
nop
xor
xor
bound
cmp
ds
shlb
dec
dec
sbb
incb
call
and
and
push
cmpsl
sub
mov
pop
mov
js
push
jmp
les
fists
rclb
int3
test
inc
mov
repnz
cmp
sub
shr
jb
iret
sub
jne
pop
xchg
xorb
popa
int3
mov
stos
sbb
and
in
sub
mov
dec
or
xchg
or
or
pop
mov
imulb
repz
xor
push
sub
xchg
jno
ss
loope
mov
mov
jecxz
xlat
cmpsb
aad
xchg
insl
pushf
add
add
sbb
dec
jp
arpl
out
xchg
xor
dec
aaa
loopne
std
and
gs
inc
je
stc
fidivl
sub
inc
or
add
fidivrl
jl
movsb
jno
rcl
ret
mov
dec
adc
movb
and
cmc
or
nop
add
pop
cmp
testl
add
div
mov
xor
mov
div
mov
xor
div
jmp
enter
js
enter
mov
scas
cmpsl
jae
push
or
sub
mov
xchg
mov
xor
cmp
push
pop
fidivs
movsl
xchg
dec
addr16
rcr
mov
dec
imul
jmp
int
sqrtps
pop
fxam
lods
ja
adc
xchg
flds
call
lods
xchg
adc
lock
cmp
xchg
sbb
add
mov
pushf
addr16
insb
mov
xor
aaa
or
sbbl
fidivrl
mov
pop
stc
jmp
shrb
push
push
pushl
pop
jmp
push
sti
jnp
mov
lds
adc
push
addr16
push
jl
iret
and
pop
decw
add
lahf
sub
or
and
mov
inc
dec
js
aas
adc
cmc
cmpsb
cld
in
pop
ds
sahf
add
test
filds
rorb
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
or
xor
or
xor
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
push
pop
sub
mov
mov
sub
mov
add
mov
mov
mov
shl
xor
xor
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
push
adc
xor
xor
shrd
or
shr
or
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
xor
push
push
sub
push
adc
mov
add
mov
not
shrd
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
push
call
orl
mov
and
or
sub
not
shr
mov
mov
adc
xor
movzbl
adc
mov
cmpl
mov
movl
jmp
movl
movl
jb
push
pushl
call
decl
orl
and
andl
xor
add
xor
cmpl
movl
mov
jmp
mov
mov
jae
pushl
push
push
push
pushl
push
call
adc
mov
adc
mov
and
add
xor
or
mov
xorl
mov
shl
cmpl
not
mov
movl
mov
jmp
mov
jge
push
call
sbb
sbb
inc
addl
not
mov
shrd
cmpl
mov
mov
jmp
movzwl
jle
push
pushl
call
xorl
andl
mov
sbb
or
xor
adcl
xor
xor
shr
mov
and
mov
xor
or
orl
mov
cmpl
movl
mov
movl
jmp
movl
jl
push
call
mov
xor
or
adc
adcl
or
cmpl
movl
movl
mov
jmp
mov
jg
push
push
push
push
push
pushl
push
call
mov
sub
mov
subl
and
mov
sub
or
and
mov
xor
or
sub
or
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
add
andl
add
sbb
add
xor
mov
cmpl
movzbl
not
movzwl
movl
jmp
movl
jbe
push
push
push
call
sub
or
mov
or
sub
movl
xor
sbb
mov
mov
adc
mov
mov
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
shl
cmpl
mov
not
jmp
movl
jle
pushl
call
and
sbb
mov
or
sub
xor
or
shld
sub
shl
and
mov
cmpl
mov
mov
movzwl
mov
jmp
movl
movl
jl
push
push
call
sbb
or
mov
and
sbb
mov
mov
sub
mov
mov
negl
mov
subl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
mov
mov
addl
xor
orl
shld
shl
andl
xor
mov
addl
xor
movl
mov
movl
cmp
jne
movl
cmp
movl
je
mov
adcl
mov
movzwl
and
mov
shl
movl
mov
sbbl
xor
shr
incl
or
mov
sbb
mov
sub
mov
mov
or
mov
sub
mov
sbb
push
cmpl
movl
movl
movl
jmp
mov
movl
jne
call
xorl
incl
subl
sbbl
andl
andl
pop
sub
mov
add
adcl
mov
mov
mov
add
lea
mov
xor
mov
sbb
mov
sbbl
xor
xorl
shr
shl
or
mov
movl
mov
mov
subl
xor
shr
shl
adcl
or
push
lea
push
lea
push
call
mov
mov
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
or
mov
mov
jne
mov
mul
ret
push
add
mul
mov
xor
mov
addl
mull
orl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
mov
inc
push
call
pushl
call
test
jg
movl
addl
movl
movl
movl
movl
movl
movl
cmpl
mov
not
movl
mov
jmp
movl
ja
pushl
push
push
call
sub
mov
sub
mov
inc
adc
movzwl
and
sub
mov
mov
mov
cmpl
not
movl
jmp
movl
jne
push
pushl
call
inc
mov
adc
mov
sbbl
movl
adcl
xor
mov
adcl
or
andl
or
subl
add
mov
mov
adc
cmpl
not
mov
mov
movl
jmp
movl
jbe
push
call
xor
inc
sbb
sbbl
inc
xor
xor
mov
add
mov
mov
adc
and
mov
movl
movzbl
add
mov
movl
movl
and
movl
mov
subl
mov
mov
mov
sub
or
mov
mov
andl
push
push
or
or
push
subl
push
call
push
andl
push
push
push
call
mov
mov
mov
movl
cmp
movl
jb
ja
cmp
jbe
cmpl
mov
movl
mov
jmp
movl
jge
pushl
push
pushl
pushl
call
or
sbb
adc
adc
orl
adc
movl
movzbl
xor
movl
mov
movl
movl
or
movl
add
movl
cmpl
mov
movl
mov
movl
jmp
movl
not
jne
push
pushl
call
dec
sbb
adc
adc
notl
add
neg
and
movl
mov
adc
movl
xorl
movl
sub
mov
add
movl
movl
cmpl
not
movzwl
mov
jmp
mov
mov
jbe
push
push
pushl
call
sbbl
and
or
sbb
incl
adcl
movl
mov
mov
or
mov
sbbl
or
orl
sub
sbbl
and
mov
or
xor
add
pushl
mov
sbbl
mov
adcl
add
adcl
xor
div
mov
pushl
adcl
xor
movl
pushl
andl
pushl
or
xorl
mov
andl
or
sbbl
and
sbb
mov
sub
mov
xorl
pushl
mov
or
mov
mov
lea
xor
mov
orl
xor
or
mov
addl
or
pushl
xorl
mov
mov
subl
and
sbbl
div
cmpl
notl
notl
jmp
movl
jge
push
push
pushl
push
push
push
call
adc
sub
xor
adc
addl
sub
mov
movl
add
xor
not
mov
sub
dec
mov
addl
pushl
shr
pushl
pushl
incl
call
add
movl
sub
movl
sbb
mov
mov
andl
xor
div
subl
or
xor
andl
pushl
call
sbb
pushl
xorl
mov
xor
xor
mov
sub
xor
pushl
movl
cmpl
mov
mov
mov
jmp
not
mov
je
call
sbb
add
sub
sbb
adcl
pushl
movl
sbb
mov
mov
andl
or
sub
cmpl
mov
mov
movl
jmp
mov
movl
je
push
call
movzwl
and
mov
and
movzwl
add
xorl
movl
mov
xor
div
orl
xor
orl
pushl
pushl
andl
call
mov
sub
mov
movl
cmpl
mov
movl
mov
jmp
mov
jl
push
call
adc
addl
movzbl
sub
and
add
adc
movl
cmpl
movl
mov
movl
movl
jmp
movl
mov
jb
pushl
push
push
push
pushl
push
call
xor
add
adc
mov
andl
sbb
sub
or
sbb
xor
movl
add
movl
movl
xorl
movl
subl
movl
mov
xorl
mov
sub
sbbl
and
dec
and
add
mov
orl
sub
cmpl
movl
movl
movl
movl
jmp
mov
mov
jbe
push
push
pushl
push
push
call
xorl
adcl
orl
sbb
adcl
sbbl
mov
adc
mov
pushl
sub
mov
mov
lea
push
cmpl
mov
mov
jmp
movl
je
push
push
push
call
adcl
xor
movzbl
or
negl
pop
andl
xor
div
mov
sub
pushl
mov
mov
adc
pushl
movzbl
xor
mov
xorl
pushl
subl
and
sbb
pushl
addl
mov
pushl
xor
and
pushl
movl
mov
sub
decl
pushl
subl
call
mov
mov
sub
and
movl
cmpl
movzbl
mov
jmp
movl
jle
call
add
or
xor
xor
add
orl
andl
not
sbb
movl
cmpl
movzwl
movl
movl
mov
jmp
mov
mov
jae
push
push
pushl
push
pushl
push
push
call
and
sbb
sub
adc
sbbl
sbb
adc
movl
add
movl
mov
mov
adcl
sub
neg
mov
and
subl
mov
adcl
xor
shr
imul
decl
pushl
subl
call
dec
cmp
movl
jne
movl
movl
mov
addl
mov
adcl
movl
sbbl
mov
adcl
call
lea
cmpl
mov
movl
mov
jmp
mov
mov
jle
pushl
call
adc
subl
adc
add
adc
mov
lea
sub
mov
and
mov
dec
mov
sbbl
mov
and
mov
addl
xor
add
shl
shr
xor
xor
mov
sub
xor
or
adc
mov
cmpl
mov
not
mov
mov
jmp
movl
movl
jbe
push
push
push
call
sub
or
sbb
xor
or
sub
mov
mov
mov
mov
cmpl
movl
mov
jmp
mov
mov
jle
push
push
call
sub
adc
mov
xor
xor
sub
xor
xor
not
andl
add
mov
mov
shrd
adcl
shr
mov
cmpl
mov
mov
not
jmp
movl
movl
jg
pushl
call
inc
adc
sub
and
inc
mov
orl
xor
xor
or
sbb
mov
orl
push
andl
pushl
adcl
lea
push
andl
shl
orl
call
sbbl
lea
orl
push
mov
addl
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
subl
push
push
and
movl
movl
cmpl
mov
mov
jmp
notl
mov
jle
push
call
add
adc
adcl
sbb
or
sbb
xor
xor
sbb
movl
movzbl
adc
mov
mov
cmpl
mov
mov
movl
jmp
mov
mov
jb
pushl
pushl
call
xorl
addl
andl
addl
incl
mov
andl
xor
subl
div
imul
adc
mov
subl
xor
and
sub
mov
subl
xor
div
mov
mov
adc
sub
mov
andl
movl
movl
movl
mov
add
add
xor
mov
mov
and
xor
sub
imul
mov
and
sub
notl
mov
movl
cmpl
notl
mov
movl
jmp
movl
mov
jbe
push
push
pushl
call
adc
movzbl
adc
xor
xor
or
mov
sub
or
not
movl
movl
movl
cmpl
mov
movl
notl
movl
jmp
not
movzwl
jg
pushl
push
push
pushl
call
dec
or
mov
mov
sub
sub
movl
adc
adc
mov
imul
sub
mov
cmpl
movl
movl
jmp
movl
jb
push
push
call
or
adcl
xor
and
xor
add
add
cmpl
notl
mov
mov
jmp
movl
movl
jne
call
xor
sbb
andl
mov
mov
or
sbb
and
add
imul
sbb
imul
mov
and
or
negl
mov
addl
xor
mov
mov
and
mov
orl
mov
lea
mov
inc
movl
sbbl
movl
xor
movl
and
mov
cmpl
not
mov
mov
jmp
mov
jae
push
push
pushl
call
movl
movzbl
add
xor
sbbl
inc
xor
orl
mov
movl
or
cmpl
movl
mov
mov
jmp
mov
jge
push
pushl
push
push
call
mov
sbb
mov
dec
negl
add
adcl
adc
xor
add
cmpl
mov
movl
not
mov
jmp
movl
movl
jg
pushl
pushl
call
andl
and
sbb
xor
add
sbb
mov
mov
or
add
xor
or
mov
sub
movl
movl
movl
cmpl
movl
not
jmp
mov
mov
jae
push
push
pushl
call
mov
mov
add
orl
add
add
and
not
movzbl
xor
mov
add
cmpl
notl
movl
mov
jmp
movl
movl
jbe
pushl
pushl
push
push
push
pushl
call
add
add
subl
xor
not
andl
adcl
mov
sbbl
sub
mov
addl
lea
cmpl
movzbl
movl
mov
jmp
movl
jge
push
push
push
push
push
call
sbbl
xorl
add
add
add
mov
sub
or
xor
sub
movl
mov
adc
movl
xor
movl
mov
or
add
adcl
imul
dec
mov
addl
imul
adc
xor
mov
movl
div
cmpl
movl
mov
movl
jmp
movl
mov
je
pushl
call
sbb
addl
xor
addl
xorl
mov
sbb
sub
mov
and
sub
xor
mov
movl
cmpl
notl
mov
jmp
mov
mov
je
pushl
push
push
call
xor
adc
sbb
or
sub
movl
movl
mov
add
mov
xor
div
imul
add
mov
subl
xor
xor
mov
sub
mov
div
xor
orl
mov
movl
or
movl
cmpl
mov
mov
notl
mov
jmp
mov
ja
push
pushl
pushl
pushl
call
and
adc
movzbl
or
addl
mov
or
mov
and
movl
mov
or
mov
orl
sub
shr
andl
sub
mov
imul
mov
andl
and
add
mov
orl
sub
xor
xor
add
mov
mov
adc
movl
orl
movl
xor
mov
movzbl
xor
or
xor
mov
or
or
sub
xor
xor
xor
mov
mov
xorl
movl
sub
movl
add
movl
or
movl
and
movl
movl
cmpl
movl
mov
movl
mov
jmp
movl
mov
jbe
push
pushl
pushl
push
call
mov
or
andl
xorl
andl
mov
mov
add
cmpl
movzbl
notl
jmp
mov
jg
call
xor
or
mov
adc
sbb
xor
sbb
and
or
movl
mov
add
mov
subl
sub
not
mov
addl
imul
or
imul
mov
andl
or
mov
lea
push
call
mov
xor
xor
sbb
mov
mov
cmpl
mov
mov
jmp
movl
jge
pushl
call
xor
or
mov
sub
movzbl
sub
addl
mov
mov
and
movl
movzwl
xor
mov
add
imul
add
and
or
sub
mov
or
mov
xor
add
mov
addl
div
xor
cmpl
movl
mov
mov
jmp
movl
not
jl
push
call
mov
mov
sbb
add
adc
not
sub
add
add
mov
movl
mov
add
movl
xor
movl
movzwl
and
mov
movl
sub
movl
adc
movl
movl
add
movl
mov
and
movl
movl
and
movl
orl
movl
adc
mov
andl
mov
cmpl
notl
mov
movl
jmp
movl
movl
jl
pushl
push
push
push
pushl
pushl
call
orl
sbbl
sub
adc
add
adc
mov
sbb
and
add
sub
mov
xor
xor
sub
xor
sub
cmpl
mov
movl
not
jmp
mov
ja
pushl
push
pushl
push
push
push
push
call
not
xor
xor
or
mov
sub
or
sub
adc
andl
or
imul
sub
mov
incl
lea
mov
mov
mov
xor
mov
subl
mov
sub
mov
sbb
xor
or
add
mov
mov
xor
lea
add
and
mov
sub
adc
add
mov
cmpl
mov
notl
movl
jmp
movl
mov
jne
call
mov
mov
sub
or
sbb
xor
adc
andl
and
movl
cmpl
mov
mov
mov
mov
jmp
movl
mov
jge
pushl
push
push
call
mov
mov
or
subl
sbbl
xor
add
adc
movzwl
sbb
mov
movl
cmpl
movzwl
mov
movzbl
mov
jmp
movzbl
movl
jge
push
push
call
and
sub
mov
adc
adc
xor
movl
movl
mov
sbb
mov
sbb
mov
adcl
xor
adcl
xor
mov
call
mov
adc
mov
or
mov
and
mov
addl
mov
xorl
xor
subl
xor
adcl
mov
call
or
mov
xor
or
add
mov
mov
add
mov
orl
xor
notl
xor
andl
mov
adcl
call
subl
mov
movzwl
add
mov
andl
mov
movzwl
adc
mov
mov
xor
adcl
xor
adcl
mov
subl
mov
or
mov
xorl
mov
andl
mov
adcl
call
mov
or
cmpl
notl
movl
movl
jmp
notl
mov
jae
push
call
xorl
adcl
incl
xorl
addl
sbbl
orl
mov
adcl
or
adcl
push
push
andl
push
subl
push
xorl
call
mov
movl
cmp
jne
movzwl
sbb
mov
adc
mov
addl
xor
sbbl
xor
mov
incl
call
mov
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
call
xor
add
sbb
not
add
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
mov
mov
add
push
xor
push
negl
mov
or
jne
mov
cmpl
movl
mov
mov
movzbl
jmp
mov
jbe
push
call
xorl
movzbl
sbb
movzwl
and
subl
xor
sub
or
mov
cmpl
mov
mov
movl
jmp
mov
notl
jle
push
pushl
call
sbb
decl
addl
sbbl
adcl
or
and
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
cmpl
movl
mov
movl
jmp
movl
movl
ja
pushl
push
pushl
call
xor
or
sbbl
mov
and
mov
xor
sbb
mov
xor
xor
sub
and
add
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
orl
shld
movl
shl
ret
dec
mov
addl
xor
and
shl
ret
xor
xor
ret
