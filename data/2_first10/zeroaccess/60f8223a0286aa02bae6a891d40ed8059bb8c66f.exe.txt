push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
and
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
lahf
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
pop
cmpsb
jae
dec
mov
aad
add
cmp
cmp
mov
jle
inc
inc
pop
int
xchg
addr16
pop
pop
xchg
sbb
notb
sahf
addr16
ficoms
jns
jg
outsb
shrl
adc
adc
mov
add
aam
push
push
fs
and
xchg
lock
cmc
jnp
mov
test
stos
jbe
cmp
cmc
lds
inc
lahf
cmpsl
sub
idivb
xchg
jg
jmp
ja
gs
fstl
out
jbe
mov
test
mov
popa
cmp
cltd
dec
stc
sub
jmp
movsb
fs
cmp
push
adc
mov
dec
pop
mov
dec
das
sbb
stos
jb
add
mov
xchg
repz
dec
pop
or
mov
mov
lods
jmp
stos
push
movsl
out
xchg
lahf
aaa
stos
insl
jle
pushf
sarl
mov
loop
dec
mov
stos
sbb
mov
testl
or
push
dec
outsb
lods
into
and
repnz
xchg
xchg
mov
sahf
lcall
dec
cmp
mov
popa
sub
stos
int
dec
xchg
cmp
add
xor
lods
ficoml
lds
push
pop
cmp
in
jo
call
jp
mov
jmp
clc
icebp
mov
icebp
ficompl
push
pushl
jo
jo
jo
xchg
js
clc
fsubrl
or
inc
xor
pushf
cld
sbb
rcll
notb
mov
xchg
fs
andb
jmp
pop
mov
fucom
sahf
cmp
aaa
pushf
insl
jecxz
push
cmp
add
clc
fidivrs
movsl
imul
xchg
adc
stc
cmp
in
inc
enter
add
jno
cmpsb
push
cs
mov
ficomps
gs
dec
stos
or
into
jl
pop
sbb
xchg
stos
ljmp
xor
jecxz
mov
fwait
adc
push
xchg
arpl
push
jl
adc
nop
mov
inc
mov
adc
push
or
push
jmp
out
mov
add
adc
xor
outsl
rcl
cmp
sub
iret
xor
nop
popf
jmp
lea
mov
jecxz
mov
js
roll
inc
xchg
repnz
push
lea
not
rcr
imul
and
cmpsb
mov
shld
push
push
mov
inc
jle
add
iret
loopne
pop
xchg
dec
test
and
sarb
ss
push
ds
imul
testl
xlat
dec
xchg
in
pop
xchg
xchg
mov
add
add
and
loopne
mov
or
test
ret
pushf
add
aad
cmp
cmpsl
iret
and
mov
ret
popa
add
outsl
cwtl
mov
mov
pop
sub
mov
or
repz
push
shrb
push
jmp
add
sub
mov
out
jmp
cli
aas
add
cmp
cld
loope
test
in
daa
cmp
push
test
mov
in
jp
in
popf
in
sbb
xor
pop
push
mov
test
bound
push
pop
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
fisubl
popf
jo
jo
jo
jo
push
ret
cmp
pop
cmp
xchg
cmp
pop
push
outsb
out
std
into
scas
dec
into
into
rolb
xchg
push
in
in
ja
inc
aas
dec
mov
push
xchg
sbb
cmpsb
adc
mov
mov
xchg
movsl
cli
pusha
mov
mov
out
aaa
or
push
xchg
mov
rclb
lock
jecxz
cli
fwait
int
push
inc
or
int
cld
dec
les
test
notl
push
out
inc
push
aam
ret
jns
scas
ficoms
lea
dec
cmp
mov
bound
ds
xor
cli
cltd
jnp
negb
mov
js
and
clc
call
notb
clc
push
aam
inc
ljmp
or
cs
enter
leave
cmp
dec
inc
jo
popa
loop
in
das
leave
mov
popf
mov
outsl
pop
xor
fmuls
loopne
cmp
or
push
mov
cld
mov
dec
into
lret
xchg
pop
push
xor
mov
mov
sub
test
jns
mov
push
ljmp
ss
jb
inc
xor
adc
icebp
lds
out
in
xor
mov
lds
sub
mov
jo
or
leave
mov
or
xchg
js
mov
pusha
jmp
lret
loope
scas
or
icebp
loope
sbb
cmc
lcall
sbb
cmp
sub
int
sbb
adc
jmp
push
test
mov
cltd
push
iret
jbe
sbb
cmp
test
mov
outsb
jno
mov
xchg
push
lahf
mov
pop
dec
xor
jns
push
mov
fnstenv
imul
mov
adc
sub
sahf
lock
idiv
aaa
adc
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
out
xchg
jo
jo
jo
jo
daa
mov
incb
push
lock
popf
or
out
cmpsb
jecxz
fsub
cmp
and
int3
int
ds
popf
pop
xor
lods
lcall
push
cwtl
loope
adc
out
movsb
and
fisttpl
loope
in
in
std
sub
or
adc
sbb
adc
popa
mov
into
aad
pop
movsl
in
push
mov
xlat
push
xlat
sarb
sub
imul
sbb
jle,pn
punpckhdq
xchg
push
mov
jmp
fdivs
and
push
scas
enter
loope
inc
jbe
xor
outsl
or
or
dec
and
imul
call
push
fdivs
out
rorl
in
mov
mov
prefetch
or
test
rcl
xchg
sub
lods
popa
mov
data16
ret
fadds
mov
sub
lock
push
test
jecxz
inc
pop
mov
mov
dec
mov
negb
negb
data16
inc
jno
push
sbb
ljmp
sub
or
neg
test
out
sbbb
popa
xchg
cmp
ja
cmc
cmp
mov
in
orb
sbbl
mov
add
push
imul
scas
lret
push
sub
lret
or
arpl
adc
jmp
inc
push
mov
loopne
clc
cmp
jb
and
pop
pop
add
int
pop
adc
adc
ret
cmpsb
aam
icebp
and
rcll
pop
inc
adc
leave
mov
imulb
shll
push
mov
rorb
push
das
iret
mov
and
es
pop
xchg
add
pop
loop
push
std
xor
inc
xor
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
xchg
push
push
jo
jo
jo
jo
into
js
or
dec
add
sub
arpl
jmp
mov
pop
in
mov
les
shll
xor
inc
mov
mov
xchg
push
idivl
lcall
daa
inc
mov
out
je
aas
cld
out
repz
lcall
mov
dec
leave
leave
lahf
push
or
mov
or
decb
and
in
ror
fstpl
and
xor
popa
sar
push
xor
mov
xchg
and
xchg
arpl
cmpsl
addr16
cmc
aas
xor
mov
repz
pop
add
cltd
lea
jo
lcall
lret
shlb
add
xor
sarb
mov
sub
or
insl
add
sahf
jo
rcll
shrl
cmp
push
aad
lcall
xchg
mov
jle
in
jp
sub
stc
or
sbb
nop
dec
fsubrl
pop
pop
insl
xchg
les
push
push
xor
fimull
mov
adc
cwtl
sbb
xchg
sbb
out
xor
pop
or
mov
in
mov
pop
inc
sbb
cltd
jne
lods
push
jl
loopne
mov
aam
cmp
inc
test
xchg
push
icebp
js
mov
clc
add
or
addb
pop
inc
aam
sti
and
mov
cs
mov
push
sbb
insl
out
bound
inc
adc
xchg
dec
addr16
sti
add
push
push
insl
adc
insl
and
pop
imul
hlt
xor
icebp
add
inc
lods
jmp
cwtl
add
jg
lea
ficomps
adc
scas
popa
je
and
scas
cmp
sub
int3
shrl
xchg
aas
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
and
push
jo
jo
jo
andb
or
mov
loop
std
fcmovu
into
sbb
sbb
push
dec
mov
les
add
fistl
and
icebp
sub
clc
notb
mov
and
pop
test
adc
mov
pop
lea
adc
dec
add
loop
add
fyl2x
je
inc
sub
push
pop
imul
and
xchg
and
sub
and
movsb
add
dec
or
pop
dec
jae
and
xor
inc
mov
adc
std
test
push
or
xchg
adc
pop
mov
mov
mov
mov
stos
lock
imul
adc
repnz
pushf
aad
popf
test
fidivrs
adcl
repz
les
xor
xchg
scas
pop
sahf
aaa
bound
movsb
loop
jne
push
inc
pop
or
ja
lea
and
mov
inc
cs
and
mov
lods
fwait
pusha
pusha
push
mov
add
stos
std
mov
add
aaa
mov
rolb
mov
inc
rcll
in
mov
pop
ja
std
jg
or
and
inc
movsb
mov
jno
lods
addr16
js
adc
sub
and
inc
mov
nop
nop
repnz
pop
dec
sub
sbb
aad
inc
mov
dec
sub
mov
add
inc
dec
mov
push
into
aam
push
add
outsl
add
sbb
sub
test
rolb
js
push
popf
push
pop
out
xor
mov
lods
sub
dec
dec
cmc
test
push
inc
sub
inc
lret
pushf
aas
cld
sahf
adc
subb
in
sub
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
adcb
fidivl
jo
jo
jo
pop
add
lds
movsb
out
pop
mov
addr16
int
daa
push
decl
pop
pop
fisubl
xor
pop
jmp
inc
pop
add
jle
add
push
jbe
notb
mov
xchg
aaa
fldt
test
out
sub
inc
push
stos
pop
outsb
inc
jl
int3
pop
adcb
lds
les
and
arpl
pop
add
jp
push
sarl
xor
int3
push
pop
push
outsb
jb
fsubrs
ss
in
dec
sbb
xlat
addr16
sub
jecxz
xorl
dec
sahf
and
fidivrs
data16
cmp
sub
inc
out
xor
inc
xlat
mov
mov
pop
movsl
inc
es
jno
std
pop
rcrb
push
push
push
dec
outsb
and
lcall
stos
lret
xchg
popa
in
jbe
fmul
jne
sub
pop
scas
lret
fdivs
lahf
nop
jg
movsb
ret
cli
fidivl
mov
and
mov
and
addr16
imul
scas
or
pop
inc
mov
test
dec
and
cmp
out
push
xor
xchg
ret
fsubr
jno
sbb
test
hlt
push
add
push
xchg
out
shll
xchg
fldenv
call
add
hlt
jnp
out
shll
mov
jp
out
testb
ds
test
cltd
fdivrl
or
sub
les
mov
push
mov
mov
dec
xchg
dec
test
sub
test
push
stos
xchg
mov
repnz
dec
stc
out
cmp
sbb
push
xchg
lods
add
push
stos
mov
std
ret
cli
mov
int3
in
mov
mov
lahf
or
lods
mov
inc
dec
and
frstor
and
adc
xchg
loope
repz
xchg
jecxz
mov
mov
insb
adc
mov
les
or
or
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
loopne,pn
add
jo
jo
out
xchg
mov
cmp
push
je
or
sti
test
insl
lret
dec
movsb
popf
lcall
negb
aad
lret
das
and
popf
adc
jns
outsl
pop
xor
scas
jmp
dec
stos
ret
ret
add
imul
mov
xor
test
pop
test
cwtl
inc
mov
pop
loope
js
pop
stos
jecxz
cmc
xor
cmpsb
dec
and
dec
xchg
dec
jge
jb
add
test
mov
and
push
adc
xchg
pop
push
pop
inc
jge
or
xlat
lods
xor
xor
dec
pop
or
push
jg
lret
int3
mov
idivb
addb
mov
lret
mov
jle
imul
jg
add
out
loopne
jge
adc
negb
fcmove
orl
cmp
add
icebp
jns
mov
cmp
adc
mov
and
jecxz
dec
loop
shrl
fistl
xchg
outsb
dec
mov
mov
jle
bound
or
jns
sub
in
push
push
xchg
dec
faddl
stc
scas
mov
cmp
out
dec
hlt
jo
aas
xchg
jne
pop
cmp
das
mov
cmp
sbb
mov
jno
out
nop
adc
xor
xor
jge
lods
aad
sub
movsl
jmp
dec
push
xchg
pop
filds
fdivl
insb
sbb
les
dec
mov
sbb
shlb
mov
div
out
sbb
dec
push
ret
sbb
cmp
stos
in
cmc
or
lods
dec
bound
call
jmp
lahf
jecxz
incl
mov
js
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
ret
jo
jo
jo
pop
inc
push
dec
cs
adc
mov
sti
mov
lret
in
in
popa
push
push
pop
mov
gs
adc
mov
mov
mov
dec
int3
mov
add
test
cmp
mov
sub
push
fistps
loop
push
add
push
jp
lret
cmovb
hlt
or
mov
nop
fsubl
or
inc
test
adc
test
loopne
add
mov
cld
xchg
inc
xor
dec
or
rcrl
lods
mov
out
shll
jo
jb
popa
mov
in
push
hlt
mov
out
dec
sbb
or
das
jp
sbbl
jp
daa
cmc
lock
cmp
test
cli
lods
dec
push
pop
in
imul
orb
hlt
mov
push
iret
flds
je
fisubrl
sbb
outsb
icebp
das
dec
sbb
xchg
inc
out
or
inc
cmp
cmp
gs
push
add
sbb
lret
dec
mov
xchg
sbb
push
inc
loope
test
enter
adcl
in
jb
pop
loopne
pushf
or
fwait
mov
cmpl
bound
popf
jmp
sub
xchg
fadd
rcrl
outsb
inc
test
out
pop
sub
mov
cltd
test
es
adc
lea
out
pushf
je
out
hlt
sarb
cli
aas
ret
mov
notb
leave
out
stc
jl
rolb
add
push
pop
pushw
lods
dec
lods
dec
or
sub
shrb
sub
movsl
sbb
push
pop
out
pop
mov
add
mov
jo
pop
out
xchg
mov
jno
pushf
xor
adc
cs
cltd
hlt
pusha
imul
in
push
ja
xchg
cmp
je
aaa
hlt
cmp
call
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
pop
pop
push
aaa
mov
and
mov
cmp
repnz
inc
icebp
jecxz
subl
xor
icebp
rclb
push
ss
jb
sti
pusha
and
ret
scas
pop
xor
imul
sub
mov
repnz
aaa
lods
shlb
or
sub
push
mov
mov
and
daa
pop
sub
jns
mov
cmp
ljmp
rcr
ficompl
in
push
jp
andb
adc
cld
cmpsl
add
xchg
xor
insb
jg
push
jge
and
add
add
mov
imul
arpl
mov
in
push
xchg
jp
ret
pop
bound
mov
cmpsb
and
or
outsl
outsl
cs
stc
mov
mov
iret
popf
pushf
sarl
dec
lods
dec
sub
pop
fiadds
mov
cmpsl
ret
jp
stc
pop
jle
lahf
ljmp
out
out
jbe
hlt
scas
jne
xor
pop
dec
in
aam
popaw
leave
xor
ja
lret
icebp
hlt
or
mov
test
jl
xchg
lds
frstor
mov
sbb
clc
dec
int
cli
ljmp
pop
dec
div
fildl
mov
mov
sti
out
adc
dec
sbb
fstp
xor
inc
arpl
lock
or
lods
dec
jmp
std
lret
pop
mov
and
pop
inc
out
push
es
mov
and
test
mov
dec
test
mov
cmp
mov
in
inc
add
mov
in
and
lahf
mov
cmp
pop
movsb
add
xchg
in
fs
in
pop
push
mov
test
xchg
fildl
mov
push
adc
bound
jg
pop
pushf
insl
wbinvd
adc
dec
daa
xchg
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
push
mov
pop
test
dec
ret
push
and
mov
arpl
add
sbb
ja
dec
aam
rol
jg
jnp
fdivrl
sub
popa
mov
lret
dec
adc
cld
aad
std
xor
mov
repnz
test
dec
jno
and
lahf
popf
lcall
dec
or
adc
popa
testl
div
ja
call
inc
adc
into
dec
mov
push
ljmp
ljmp
es
aad
mov
xlat
pop
sbb
sbb
leave
mov
inc
insb
in
mov
movsb
push
out
jb
push
adc
fmuls
cs
repnz
in
xchg
or
sbb
mov
fcompl
xlat
inc
sarb
pop
mov
xor
ss
test
or
lahf
mov
outsb
out
xlat
cmp
mov
cli
ds
push
sub
add
pop
es
into
lock
call
movsl
xor
sar
test
lock
xchg
mov
fucomip
and
dec
shrl
dec
gs
add
adc
in
movsl
mov
add
rorl
rorl
dec
push
popa
push
dec
xorb
ja
sbb
cmp
inc
pop
lea
loope
std
loope
cmp
outsl
and
or
mov
and
dec
pop
xchg
pushf
ja
movsb
push
lods
movsb
sbb
add
dec
stos
lds
out
pop
jbe
pop
andb
push
push
jle
jno
lds
push
sbb
repnz
add
or
mov
adc
ret
sub
sbb
stos
ret
jns
arpl
ss
adc
incb
mov
cmp
mov
sti
push
pop
shrl
leave
insb
pop
rorb
out
pop
xchg
mov
and
ss
sbb
insl
ljmp
test
orl
popf
mov
scas
movsb
arpl
pop
cmpsb
xor
sbb
xchg
imul
add
and
fsubs
mov
push
jne
jp
loop
xor
addr16
loop
shrl
loope
push
ror
jno
aas
pop
jp
mov
imul
mov
and
aas
cmpsb
cwtl
int
rcll
xchg
loopne
sbb
mov
mov
mov
hlt
popf
push
add
cs
out
pop
xchg
fsubl
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
addr16
mov
mov
jle
jo
dec
je
leave
xchg
movl
jle
outsl
adcw
call
fs
aam
or
sub
jne
scas
mov
fs
push
mov
fistl
mov
fiaddl
mov
das
aas
xor
and
shlb
sbb
call
scas
int
test
dec
fmulp
cmpsl
add
inc
insl
xor
sub
mov
jl
xlat
adc
icebp
insb
mov
add
sbb
sbb
cmpsb
cmp
mov
lods
add
popa
adc
dec
outsb
and
cltd
shrb
jnp
flds
mov
sbb
sbb
xchg
lcall
push
mov
or
lahf
xchg
shlb
lods
test
and
xor
imul
cltd
pop
inc
inc
sub
jb
bound
sbb
inc
sub
jg
stos
inc
call
and
ja
add
adc
ret
sub
cmp
lea
jb
push
xchg
aad
push
pop
ljmp
fbld
lods
ds
pop
int
inc
das
jmp
sub
jno
mov
fistpll
jge
mov
rol
dec
lock
jg
stc
adc
pop
subl
jl
sbb
cmc
out
adc
sbb
sbb
push
fwait
adc
adc
adc
push
inc
sarl
js
inc
cmpsb
dec
sbb
mov
or
cmp
jns
inc
pusha
push
xchg
and
xchg
inc
jno
mov
pop
aas
aad
mov
xor
bound
jl
cmp
mov
cmp
mov
sub
cld
push
cli
mull
les
dec
lock
in
jmp
mov
popf
cmpsl
jne
adc
sub
call
push
mov
test
sar
jo
adc
dec
pushf
subl
jmp
sub
and
pop
setl
into
imul
in
rclb
imul
loopne
adc
push
sbb
fdivrl
or
ret
nop
xor
out
add
cmp
mov
or
cld
je
mov
mov
movb
cmp
test
faddl
xchg
jle
popa
push
int
ljmp
cltd
pop
in
pop
cwtl
adcl
jae
jl
jge
imul
inc
xchg
lods
cmp
test
cld
jg
out
repz
mov
mov
xor
add
jmp
fistl
loope
lds
add
test
jo
jle
jo
xchg
xchg
scas
lds
cld
dec
inc
push
into
dec
xchg
fdiv
pop
or
xor
mov
add
loopne
push
loopne
jg
cs
fbld
pusha
mov
add
jnp
dec
ror
test
data16
pop
dec
adc
das
cli
jp
stos
mov
adc
mov
xchg
push
add
push
or
sub
sub
xchg
shlb
jns
es
jg
xchg
pop
pop
jns
sbb
jbe
cld
ret
call
jmpw
das
mov
or
cs
adc
jo
cmp
lods
mov
xchg
inc
xor
je
dec
fisttps
mov
dec
incl
iret
pop
jae
add
pop
push
les
or
xor
mov
adc
pop
and
sahf
xor
mov
iret
pop
clc
cltd
push
mov
adc
mov
addr16
ds
sar
push
jb
mov
mov
loop
and
mov
in
mov
jp
das
pop
sub
fidivs
jne
int
jnp
or
vmwrite
adc
mov
test
dec
push
sub
andb
stc
cmp
and
aam
fldl
push
xor
or
pshufw
push
jae
insb
faddl
push
cmp
mov
add
xchg
cmpsl
mov
dec
cmp
mov
push
aam
fistpll
push
mov
lock
push
sub
cmc
inc
in
outsb
enter
adc
out
or
cli
js
xchg
hlt
lock
orl
mov
aam
sub
cltd
lcall
stos
notb
test
or
push
cmp
lock
dec
add
and
push
mov
inc
ja
xchg
xlat
dec
es
mov
adc
fisttpll
mov
inc
mov
add
mov
sub
jo
shl
pop
in
jmp
call
movsl
sub
lcall
cmp
adc
pop
sub
jmp
mov
mov
imull
fdecstp
and
jge
xchg
adc
fimull
aad
inc
push
rcr
stc
sub
outsb
cs
gs
in
xchg
xchg
adc
and
mov
mov
test
int3
mov
jg
and
sti
rcrl
out
cli
test
jmp
sti
mov
jle
mov
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
jg
dec
cmc
cmp
jo
jle
jo
mov
mov
popa
sahf
xor
adc
cs
add
jnp
push
cmpsb
fidivl
push
imul
out
loopne
aas
adc
arpl
nop
or
in
xlat
in
and
icebp
insb
divl
bound
test
push
pop
icebp
inc
loop
adc
sbb
iret
dec
movsl
push
mov
aas
push
dec
push
sub
int3
daa
jp
divb
pop
fidivrs
dec
sbb
jecxz
pop
add
bound
shrl
aad
in
jmp
or
sbb
adc
jp
fnstsw
pop
ficoms
fsubrl
ljmp
add
jo
adc
dec
sub
aad
adc
mov
jb
jae
cld
and
or
sbb
mov
in
leave
addb
dec
ja
jecxz
pushf
pop
pop
mov
scas
mov
push
ret
cli
mov
daa
mov
fistl
out
inc
and
addb
adc
pop
gs
and
scas
ss
enter
jns
test
jge
stc
xchg
fcoml
cltd
mov
inc
push
das
mov
push
pop
push
jns
jbe
leave
xchg
stos
andb
lcall
pop
adc
sahf
lds
jge
push
inc
inc
mov
lods
and
scas
lret
mov
nop
aam
xchg
pop
lahf
jne
icebp
scas
lock
jb
inc
jecxz
xor
cli
push
movsl
inc
pop
and
int3
lret
jg
shrl
arpl
xor
stc
or
in
cmp
mov
mov
arpl
adc
sahf
and
jbe
lahf
sti
xchg
mov
or
popa
and
pop
xor
pushf
jbe
lret
dec
xchg
mov
push
rcl
cmp
xor
dec
mov
jb
mov
ds
andl
pop
fs
sub
inc
fildll
inc
push
mov
add
sub
fiaddl
xchg
sub
movsl
jb
mov
sub
cmp
ret
popf
fldl
fstpt
arpl
xor
into
push
fucomp
fnstsw
xchg
or
or
add
xlat
inc
push
fnstcw
sbb
or
jno
clc
jge
repnz
cmp
shl
imul
pop
push
pop
repnz
pop
mov
xchg
movb
fwait
xor
movsb
push
in
add
inc
sbb
testb
sub
mov
sti
sti
lods
push
jle
outsl
pop
xlat
loop
jb
xor
cmpsl
imul
bnd
push
xchg
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
push
sahf
js
jo
cmp
add
cmp
loopne
lods
add
xchg
push
js
addr16
xor
pusha
sub
add
mov
inc
pusha
and
stc
adc
dec
mov
sbb
daa
push
in
iret
sub
push
jne
dec
out
xchg
mov
inc
outsb
in
jmp
mov
fistpl
jecxz
jle
sbb
or
mov
jp
sbb
mov
pop
out
mov
add
imul
lods
sbbb
inc
int3
push
pop
cmp
ss
aad
sbb
cmp
es
cmc
pop
fildll
hlt
outsb
outsl
pop
push
lods
sub
jns
sbb
push
and
pushf
xchg
xor
ljmp
sub
push
fnsave
push
testl
scas
jb
fsts
repnz
xchg
orb
movsb
xchg
out
push
lret
fcmovnbe
push
inc
jecxz
push
sbb
ja
xor
adc
xor
push
dec
lret
cmp
outsb
mov
jmp
aad
jno,pt
pop
sbb
sbb
mov
jle
pop
jp
sub
inc
adc
sahf
push
fists
icebp
push
mov
jmp
popf
mov
or
mov
or
lds
or
push
ds
cmp
lcall
adc
insl
cmp
jmp
test
pop
mov
fists
add
xor
push
jb
bound
sti
mov
movl
jl
leave
push
jg
mov
jns
jnp
pop
movsb
xchg
cmp
ja
lcall
test
aaa
call
fcmove
ja
incb
aas
lea
mov
xchg
fsts
mov
sub
into
pop
inc
pop
rolb
mov
aaa
add
jb
adc
ret
cmpsb
dec
add
bound
dec
in
test
pop
sub
mov
shr
out
xchg
xchg
fmuls
cmpsl
xchg
leave
cmpsl
dec
fwait
sbb
sbb
jo
pop
std
aam
cmpsb
aas
xchg
iret
inc
icebp
push
push
rcll
xor
mov
gs
pop
jb
lea
pop
in
sub
mov
popa
mov
sbb
aam
push
xlat
sahf
leave
jp
push
int
aad
pop
out
idivb
out
xchg
push
jb
inc
push
int3
int
push
xchg
sub
notb
adc
xor
lret
aas
les
mov
addb
mov
lea
ljmp
addb
dec
jg
push
hlt
xor
push
and
repnz
inc
adcl
mov
add
jge
cli
mov
sub
out
sbbb
mov
dec
jmp
xor
xor
fisubrl
loopne
in
lods
sub
mov
inc
rcll
pop
push
and
xchg
out
cmpsb
outsb
mov
imul
xor
jmp
sbbb
xchg
mov
mov
push
negb
icebp
jae
js
pop
out
pusha
imul
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
add
jo
cmp
loope
sub
and
nop
dec
xchg
arpl
mov
shr
inc
cwtl
add
loop
cld
adc
cmpsl
lcall
das
out
pop
xor
aam
mov
dec
test
adc
add
mov
test
aad
std
xchg
subl
movsl
roll
inc
pop
inc
inc
lock
div
jne
repz
sbb
andb
movsb
cmp
inc
pop
push
xchg
das
xchg
and
push
frstor
out
pop
and
adc
popf
push
mov
les
dec
mov
push
mov
in
push
cmp
je
ss
jb
sbb
stos
inc
repz
mulb
mov
dec
mov
or
shll
adc
stc
adcl
mov
test
insb
fildl
fs
ja
jae
fsts
mov
test
ret
into
or
pusha
jp
jecxz
ds
adc
insb
js
mov
and
stos
mov
into
pop
testl
fs
mov
into
repz
cmp
popf
mulb
shll
shl
and
dec
cld
test
call
ret
xchg
das
dec
mov
cli
mov
mov
std
jno
je
inc
mov
cmpsl
dec
subb
sbb
repnz
stos
faddl
mov
jne
jecxz
je
outsl
cltd
test
jo
inc
mov
in
jle
sub
sti
rorl
sbb
push
xchg
sub
sbb
xor
lea
stos
movsl
cs
jb
xchg
dec
xor
jl
pop
mov
push
data16
test
out
movsb
mov
sub
stos
mov
xor
dec
push
hlt
mov
cmp
and
clc
out
aam
mov
inc
pop
mov
dec
push
icebp
stos
sub
je
mov
adc
leave
aas
push
xchg
loope
rolb
mov
pop
test
push
cmp
xor
fsubl
pop
lock
cli
mov
mov
mov
popl
insl
sub
mov
aas
lods
adc
xchg
mov
aaa
arpl
or
sub
out
mov
cwtl
mov
jno
cmp
cmp
or
push
inc
sbb
push
mov
sbb
out
xorb
stos
push
dec
jo
dec
unpckhps
mov
aam
sub
mov
dec
adc
inc
mov
sbb
ficompl
or
leave
pop
mov
das
aas
mov
test
xchg
repz
jl
mov
sar
xor
xchg
push
outsl
lods
mov
out
clc
mov
push
movsb
stos
ljmp
ja
jbe
mov
push
insl
xchg
xchg
nop
cmp
xchg
push
cmpsb
sub
rol
mov
push
shlb
adc
mov
add
xchg
push
cmp
xchg
inc
lea
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
lahf
aad
sbb
cmp
cmp
push
out
sbb
int3
repnz
dec
mov
adc
cwtl
cld
call
test
sbb
sbb
dec
lret
cli
loope
mov
out
xchg
add
sub
aad
nop
push
pop
inc
mov
mov
sbb
jg
add
jno
jmp
mov
shll
mov
cltd
pop
dec
dec
pop
add
sbb
sbb
lock
jae
or
mov
aam
push
ret
sub
mov
inc
mov
mov
and
js
sti
icebp
push
mov
xor
jbe
xchg
xchg
lahf
inc
pop
arpl
pushf
xchg
jge
das
out
sbbb
aad
xchg
shlb
shlb
push
insb
adc
cmp
in
jecxz
std
bound
jle
fbld
mov
jnp
jbe
out
fcomps
cwtl
test
inc
loopne
xor
xorl
ljmp
pushf
jb
mov
ljmp
mov
les
cmp
jp
mov
push
xor
cmp
dec
ror
cmpl
and
jae
dec
jmp
or
mov
daa
pop
cwtl
movsb
mov
mov
jbe
cmp
cmp
mov
fs
xchg
add
xchg
out
lods
fists
cli
lds
mov
pushf
aam
xor
lds
rolb
ljmp
aaa
ret
ficomps
inc
les
xor
out
mov
add
cli
jge
punpcklwd
test
cmpsl
lahf
out
imulb
out
mov
ja
ret
outsl
inc
adc
imul
lret
ret
insl
arpl
mov
cmp
mov
inc
adc
jecxz
testl
shll
and
cmp
mov
sbb
cmp
push
fidivl
xorl
ja
cmp
aaa
iret
inc
pop
sub
add
push
insl
dec
dec
icebp
add
push
pop
lahf
in
jb
ja
je
stc
push
pop
in
mov
sbb
mov
clc
cmp
xchg
addr16
decl
cmp
mov
sub
or
lds
mov
jo
mov
cmp
loopne
adc
pop
xchg
pop
jp
mov
stos
sbb
push
jecxz,pn
aad
sarl
mov
xchg
shrl
xchg
daa
xlat
dec
cwtl
out
shrl
add
xchg
and
add
scas
rcrl
ss
incb
in
xor
mov
das
sbb
xor
lcall
aaa
fldcw
outsl
mov
push
and
cmp
sub
repnz
adc
pop
fadd
push
push
adc
or
add
mov
cmp
js
imul
aad
iret
push
gs
pop
lds
ffree
lea
jne
das
mov
sbb
lods
xchg
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
icebp
outsl
or
cmp
or
mov
imul
pop
shl
aas
sbb
mov
movsb
cmpsb
sbb
das
popf
jl
sbb
mov
jmp
divb
xor
inc
lea
das
sbb
jns
cmp
daa
mov
data16
sub
jle
fsubrl
pop
stos
outsl
rolb
sahf
shlb
sub
cmp
mov
test
mov
pop
aad
xchg
xchg
mov
and
xchg
shrl
clc
add
scas
add
inc
pop
add
inc
sbb
sub
out
push
push
sub
pop
add
ret
xchg
fnstcw
sub
dec
mov
add
repnz
lock
dec
sub
inc
and
mov
pop
stos
cmc
xor
sbb
loope
inc
inc
sub
and
in
aas
and
jnp
mov
sbb
jbe
pusha
or
cmp
adc
pop
sahf
push
add
data16
lock
mov
cltd
subb
jne
dec
ds
mov
adc
or
mov
or
loop
pextrw
push
adc
jno
push
imul
ljmp
aad
sbb
or
cmp
mov
neg
lcall
sbb
jmp
popa
inc
mov
in
push
mov
shl
faddl
stc
fdivrl
scas
in
lock
daa
ret
ss
mov
cmpsb
mov
push
xor
hlt
stos
fbld
or
and
push
je
nop
sub
mov
sbb
adc
cmc
sub
pop
fiaddl
cwtl
mov
out
xchg
inc
xchg
lret
data16
lea
pushf
pop
push
xchg
xor
and
inc
test
push
xchg
xchg
adc
repz
jl
and
enter
insl
insl
out
pusha
or
lret
xor
push
jmp
mov
ljmp
mov
sub
aaa
add
test
test
aas
scas
mov
inc
loop
fbld
stos
in
pop
add
xchg
rcrl
fisttpl
sbb
mov
fnsetpm(287
js
mov
fdivrl
popf
popa
aam
ja
pop
icebp
scas
jmp
push
cmpsl
sbb
and
in
mov
cmp
sbb
jae
adc
fiaddl
loope
or
dec
in
mov
xchg
mov
sahf
push
int
mov
sbb
cli
lcall
pusha
and
cmp
test
or
stos
jnp
lret
fisubl
or
mov
orb
mov
js
movl
cmp
int3
and
and
lods
sbb
mov
mov
jg
aam
jb
or
inc
lods
aad
cli
xchg
ds
pop
mov
dec
mov
push
lods
cwtl
push
and
bound
shlb
mov
push
popa
and
cmp
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
xchg
lcall
cmp
xchg
jbe
pop
pop
push
xchg
push
outsl
data16
mov
movsb
sbb
pop
jl
pusha
stos
sbb
das
insl
pop
fldcw
push
sbb
jl
jge
dec
ret
mov
lock
lock
xor
hlt
or
xchg
arpl
std
jne
stos
repz
push
pop
pop
rol
push
ss
push
mov
outsb
inc
jbe
mov
jmp
jl
jae
adc
pop
mov
push
adc
ror
pop
jne
xor
fldenv
test
stos
inc
clc
jnp
dec
add
loopne
subb
ljmp
lret
les
gs
jbe
xchg
jmp
mov
inc
xchg
fdivrs
and
jae
add
cmc
adc
xor
jbe
lcall
jp
jg
in
movsb
cmp
adcl
shlb
call
clc
data16
gs
dec
add
sub
mov
pop
test
insb
loop
xor
inc
pop
sub
pusha
jmp
xor
inc
cmp
lea
test
mov
push
in
mov
movsb
xchg
cmpsb
adc
pslld
push
fwait
insl
push
int3
push
xor
mov
and
into
shl
scas
ret
push
shrb
inc
lcall
jg
fucom
cltd
int
and
and
dec
jl
fwait
in
and
out
aaa
rclb
lret
xor
add
xor
pop
add
cmp
push
pop
popf
test
xchg
imulb
dec
outsb
test
xor
mov
ret
push
push
mov
xor
xchg
inc
mov
repz
sqrtps
push
fdivs
adc
mov
xchg
sbb
mov
jmp
les
mov
sbb
adc
jbe
push
and
movsb
cmp
pop
pop
or
rcrb
mov
sbb
aam
pop
mov
imul
lock
xchg
xor
dec
sub
addl
fidivrl
lea
mov
sahf
cmp
into
add
cld
push
fdivrs
insl
mulb
dec
addr16
and
ds
xor
and
lock
jle
call
dec
dec
insb
ljmp
nop
jmp
push
test
cmp
bound
ret
sahf
imul
mov
fs
cmp
movsl
sbb
lret
mov
push
mov
sbb
das
dec
xchg
mov
loop
lahf
dec
sti
data16
adc
or
adc
or
clc
insb
inc
mov
xor
jnp
call
jg
ret
out
ret
outsb
mov
mov
sar
pop
jp
inc
mov
mov
dec
orb
repz
dec
dec
inc
out
mov
xchg
loope
addr16
out
lods
xchg
mov
dec
sbb
xchg
xchg
mov
rcrb
fbstp
std
mov
mov
sahf
cmp
and
xchg
fdivs
aaa
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
stc
outsb
mov
jo
jge
jo
xor
addr16
mov
adc
xchg
cmp
mov
or
push
mov
xchg
pop
xchg
push
aad
xchg
pop
mov
adc
push
int
or
mov
mov
pop
les
push
xchg
mov
nop
std
jl
mov
sub
imul
pop
ds
jo
andb
addr16
xchg
pusha
mov
clc
fsubs
cmp
mov
mov
mov
pop
pop
shr
test
negb
xchg
mov
outsb
rcr
sub
push
mov
fadds
sbb
push
fsubs
iret
xchg
adcb
shlb
jae
and
fildll
and
mov
xor
jmp
cmp
pop
dec
sbb
mov
sub
mov
push
mov
xor
mov
std
push
mov
icebp
ret
jecxz
jno
rcrl
test
addl
inc
shrb
sahf
mov
add
pop
lea
aaa
in
add
out
lods
dec
out
addr16
push
cmpb
xor
arpl
sub
imul
sbb
ret
add
insb
or
mov
adc
shrl
imul
xchg
mov
pop
or
add
pushl
jns
pop
mov
pop
cmpsb
test
pop
cltd
sti
inc
mov
call
imul
mov
pop
pop
int3
scas
inc
mov
cld
push
sbb
add
push
and
in
add
sti
int3
into
fildll
addl
push
repz
in
adc
mov
push
jnp
lods
and
outsb
int
mov
cmp
add
mov
shrl
mov
ljmp
fcomp
inc
fisubl
xor
mov
std
scas
jg
inc
leave
lahf
xchg
jne
arpl
sbb
xchg
dec
in
ja
in
test
scas
jbe
xor
jb
adc
dec
xchg
test
fiaddl
and
sbb
mov
data16
stc
mov
insl
mov
cli
or
jp
in
gs
fmull
xchg
les
outsl
or
mov
movsb
shrb
repnz
scas
mov
aam
movl
movsb
pop
sub
pop
jle
sbb
std
lahf
into
add
sbb
push
cmpsb
push
insl
xor
jp
sbb
xor
movsl
lods
pushf
test
cmp
jmp
pop
xor
cmp
mov
xchg
repnz
push
mov
dec
cmp
rcrb
cmpsb
mov
push
pop
mov
xchg
inc
push
pop
sbb
std
jae
lahf
or
fcompl
lahf
jns
add
xor
inc
out
pop
hlt
mov
mov
pop
cmp
repnz
pop
shr
and
sub
or
pusha
add
inc
cld
outsb
nop
std
sub
std
xchg
icebp
adc
mov
or
xchg
jge
stc
repnz
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
out
aam
xchg
jo,pn
cmp
rcl
cmp
sub
mov
pop
scas
mov
jns
out
int3
mov
and
mov
hlt
adc
adcb
gs
dec
jg
movsb
jnp
sti
dec
std
in
mov
pop
inc
mov
and
xchg
adc
fwait
cmp
repz
je
dec
dec
fidivs
mov
int
xchg
and
pop
leave
call
jg
or
js
dec
push
je
aad
jns
leave
in
push
xchg
xchg
dec
std
mov
addr16
xor
out
mov
add
xorl
addb
in
mov
mov
sti
xchg
sub
sbb
jle
xchg
mov
dec
cld
add
jno
mov
cmp
pop
sbb
mov
pop
add
leave
test
xchg
movsb
fstl
test
jge
arpl
xchg
push
loope
cmp
xchg
push
jbe
sub
fildll
lcall
sbb
arpl
xorl
ja
dec
dec
inc
in
sub
icebp
push
mov
ja
sbb
dec
shl
adc
out
dec
mov
xchg
out
lods
andb
out
mov
js
ret
mov
sbb
stc
sbb
push
das
push
pop
outsb
mov
and
sti
push
pusha
mov
shrb
mov
icebp
jne
out
fisttpl
cwtl
cli
cwtl
shll
addr16
add
cmp
mov
cmp
add
mov
inc
push
dec
add
in
inc
ret
sub
aaa
lock
pop
bound
jl
push
and
dec
sbb
in
cld
imul
lds
hlt
ret
fwait
jp
je
or
fs
push
add
dec
cmp
stos
adc
dec
sub
fwait
hlt
mov
mov
fcompl
movsb
in
mov
mov
sub
sub
stos
test
jle
add
std
ljmp
cmp
addr16
push
shll
lods
and
adc
pusha
or
iret
push
mov
ret
mov
mov
mov
in
mov
outsb
gs
sahf
add
pushf
and
mov
xor
push
mov
xchg
les
stos
xor
cltd
in
daa
lcall
outsb
mov
add
sbb
jle
pop
call
inc
ja
mov
or
lods
in
nop
testb
mov
scas
dec
dec
lret
sub
bound
push
leave
repnz
inc
in
mov
sub
sub
jle
mov
or
rorl
icebp
fistps
popf
ss
out
dec
mov
dec
push
sub
jge
pop
gs
or
jbe
adc
movb
lret
push
jl
movsb
cmp
cwtl
lahf
mov
pop
sahf
mov
scas
xchg
dec
jne
push
and
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
mov
cmp
jge
rcrb
out
lods
ds
pop
jae
js
test
hlt
xchg
ljmp
and
jge
or
adc
dec
pop
cmpsl
xchg
scas
lcallw
and
mov
and
mov
aas
fs
lahf
jecxz
repz
xchg
xchg
insb
in
pop
rorl
push
cmc
or
sbb
lock
and
pop
or
push
mov
jnp
xchg
leave
cmp
in
cmc
into
mov
jae
loopne
add
ja
add
push
xlat
cmpsl
jle
test
pop
gs
mov
sarb
rcrl
xor
push
mov
aam
or
adc
je
cli
clc
xchg
rorb
adcl
pop
mov
in
mov
mov
sub
push
add
leave
pop
test
cmpsb
ja
or
out
jp
daa
mov
scas
mov
enter
mov
cmp
dec
jl
stc
pop
mov
lods
pop
and
jmp
daa
mov
test
ds
sub
or
push
pop
mov
or
add
mov
test
cmp
jg
jg
movsb
dec
pop
aam
stos
pop
mov
int3
ret
pop
sub
decl
add
clc
cmpsb
dec
cmp
imul
jl
pop
sub
dec
sbb
sub
inc
pop
mov
and
or
mov
push
pop
add
loopne
jge
mov
jo
xor
imul
stc
mov
sub
mov
ds
xchg
stos
xchg
test
sub
arpl
pop
insl
pusha
add
jge
xchg
loope
loopne
cmp
mov
repz
xor
xor
pop
pop
popf
mov
icebp
scas
xchg
arpl
out
lret
xchg
or
cmp
push
test
dec
xlat
and
adc
aaa
in
out
or
cmpsl
das
push
mov
xor
inc
sbb
scas
orl
mov
icebp
inc
lock
addr16
jnp
cmc
push
int3
add
js
popf
mov
pushf
dec
xchg
imul
hlt
int
popa
jl
jbe
repz
push
mov
inc
in
int
data16
in
push
xor
xchg
inc
push
jg
cltd
push
popf
push
int
sbb
sbb
adc
adc
mov
icebp
sbbl
movsb
fsubrp
and
mov
pop
xchg
je
inc
std
mov
fnstenv
xchg
xchg
push
mov
xor
mov
dec
jb
roll
sti
jbe
jmp
pop
pop
sub
dec
mov
mov
jecxz
mov
outsl
into
mov
mov
repz
or
fnstcw
push
push
inc
lahf
ss
ds
test
fcomps
xchg
pushf
sbb
in
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
in
subb
jle
jo
push
mov
adc
cmp
dec
dec
sarb
mov
lahf
xor
in
mov
cmpsl
sbb
lret
sub
data16
into
dec
pop
adc
xor
sbb
movsb
and
insl
leave
das
test
ret
mov
sbb
jmp
cli
rorb
inc
std
mov
jae
add
cmp
enter
mov
mov
outsb
sbb
lods
mov
or
mov
in
stos
fisubrs
pop
out
ljmp
add
mov
jo
pop
or
adc
into
or
jg
dec
adc
dec
fdivrs
fidivl
jne
addl
les
jmp
rolb
inc
popf
or
lcall
xchg
mov
call
adc
push
cli
adc
int3
push
aaa
mov
outsb
js
mov
adc
dec
popa
ret
mov
add
pushf
int
lods
mov
xchg
mov
inc
or
int
leave
daa
hlt
loop
jge
fnstcw
add
loope
mov
dec
pop
or
fnstenv
adcl
jecxz
hlt
lds
sub
filds
cmp
mov
inc
pop
adc
sbb
inc
lock
out
sub
push
jmp
push
xchg
xor
rcl
lahf
xchg
pusha
xor
adc
cmp
sub
fisttpl
aam
mov
les
pop
mov
or
pop
leave
movsb
xchg
dec
push
stos
testb
mov
aas
jo
rorb
loopne
fld
dec
dec
movsl
rorb
cmp
mov
sbb
adc
cli
adc
lcall
jnp
sbb
lea
movsl
shrl
jo
jecxz
pop
popl
decl
icebp
out
ja
or
jns
sbb
push
movsb
xor
repnz
stos
cwtl
iret
lret
int3
push
mov
and
test
add
cmp
movsb
jg
ret
popf
push
mov
fldt
pop
shll
test
xor
dec
insl
dec
xor
or
sbb
outsb
rclb
mov
sub
rcl
dec
jge
push
das
outsl
cmp
das
adc
rorb
fsts
fsubrs
xor
push
push
adc
int3
ljmp
outsb
lret
mov
push
std
inc
add
add
mov
jmp
ja
and
dec
xchg
ds
xor
jo
mov
ljmp
addr16
iret
dec
inc
add
jg
pushf
cmpsb
xlat
push
jne
das
cli
xchg
cmp
movsb
repz
xchg
shl
pop
nop
mov
cli
test
hlt
jbe
cmp
in
xchg
cmc
arpl
addr16
inc
mov
enter
push
mov
not
scas
mov
or
pop
cmp
imul
xchg
cmpsl
mov
cmp
push
js
sub
inc
popa
push
pop
pop
mov
adc
loop
fucomip
push
in
lahf
xchg
mov
fucomip
decl
sub
inc
in
xchg
mov
xor
xchg
lcall
and
stos
cmp
aas
jae
loope
pop
aaa
aas
outsb
inc
pop
jbe
lods
push
sub
fidivrs
jge
in
add
cmc
xorb
lret
sub
insb
and
push
xchg
lret
in
mov
xor
in
cli
pop
mov
mov
fcoms
jns
insl
push
sbb
jp
xor
xor
sarl
pop
scas
daa
lea
aad
scas
fistpll
rol
outsb
imul
dec
xlat
sbb
inc
insb
mov
push
mov
xchg
outsl
insl
inc
inc
fcomip
fcoms
mov
xchg
jns
dec
or
pop
iret
imul
add
cwtl
and
mov
jae
aas
das
stos
or
cmpsl
bound
aas
or
sub
mov
push
mov
cmpsb
mov
or
je
into
push
fcomps
or
mov
lock
movsl
test
mov
mov
pusha
clc
and
ljmp
je
mov
sar
ret
out
pop
sub
inc
enter
xchg
dec
jle
mov
inc
and
imul
sub
lea
xchg
aaa
movsb
fisubl
xchg
push
ret
push
inc
add
mov
fnstcw
and
es
fisubl
in
pop
pusha
push
decl
xor
int
pop
ss
test
sbb
xchg
mov
leave
and
sarl
sarl
dec
fistl
dec
mov
int
es
jle
das
or
scas
movsl
aas
testl
stos
adc
out
adc
std
mov
add
mov
pusha
gs
dec
popf
jmp
and
add
mov
cmpsl
xlat
xchg
pop
stos
sarl
push
sub
insb
cmc
inc
cmp
insb
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
sbb
test
jo
stos
jle
jo
xchg
repnz
inc
sbb
icebp
jnp
and
adc
sbb
pop
insl
inc
dec
adc
xchg
test
push
and
inc
jmp
jle
addr16
arpl
pop
push
out
mov
push
shrl
adc
scas
arpl
mov
pop
bound
mov
xor
test
push
push
dec
aas
sbb
sbb
dec
fiaddl
dec
inc
fisubrs
inc
inc
cmp
sbb
sub
add
shll
test
cmpb
xor
sub
adc
frndint
add
iret
imul
mov
shrl
lahf
mov
rcr
and
fwait
jb
sar
fildll
cmp
pop
mov
inc
rorb
and
es
lret
push
test
mov
ss
imul
mov
sbb
cwtl
movsl
ret
mov
rcrl
mov
lds
xor
out
pop
jl
adc
cli
xlat
pushf
dec
std
inc
mov
ret
shlb
mov
popa
lret
cmp
pushf
sarl
cmp
inc
pop
push
xor
dec
push
mov
jl
push
pop
ficoms
xor
cwtl
dec
sbb
int3
mov
gs
or
call
xor
mov
test
subl
scas
dec
test
cmpb
push
adc
push
nop
dec
loopne
cli
dec
jnp
in
rcrb
lret
pop
and
push
bound
lods
incb
mov
repz
lea
and
insb
test
sub
cmp
and
fdivrl
repz
push
fnsave
xor
mov
icebp
aad
insl
filds
push
aad
cmp
adc
jmp
and
add
jl
jge
loopne
mov
mov
mov
das
xchg
je
mov
popf
popf
dec
ret
imul
xchg
mov
fisttpl
ret
test
mov
orl
xchg
outsl
shl
pop
adc
push
sbb
imul
xor
push
adc
xor
xchg
dec
out
ljmp
fimull
xchg
lods
int
pop
fldt
aas
rcr
or
pop
pop
mov
mov
xchg
push
int3
int3
xchg
push
fstp
sbb
outsl
mov
dec
add
mov
add
jnp
repnz
xchg
in
pusha
inc
in
inc
pop
jae
sub
and
cld
add
ffree
xor
test
mov
xor
adc
pop
sbb
mov
sub
fsubrp
cmp
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
adc
jo
cmpsl
jg
jo
inc
sbb
add
mov
inc
fidivrl
add
pop
arpl
je
addr16
rol
lods
stos
icebp
fidivl
repz
iret
inc
shlb
loope
loopne
scas
adc
es
arpl
mov
and
inc
fnstenv
mov
ss
inc
ss
pop
mov
je
testl
xchg
jmp
lods
rcr
pushaw
in
shlb
adc
xor
xchg
insl
loopne
jo
cmpsl
mov
nop
jbe
push
adc
mov
arpl
jl
das
mov
lds
mov
bound
mov
xchg
fsubrl
add
sbb
jmp
call
cmp
loopne
cmp
int
and
xor
aad
pop
roll
sbb
fwait
mov
shl
into
or
ja
add
hlt
dec
xor
adcl
stos
inc
fildll
xlat
notl
xchg
sbb
jae
cmp
mov
mov
in
cmpsb
jno
addr16
mov
mov
test
jmp
dec
dec
testb
and
pop
cmpsb
popf
loopne
pop
pop
adc
shrb
inc
pop
dec
cmp
pop
cmpsl
out
dec
mov
sti
xchg
pop
sub
inc
xchg
dec
test
repz
fwait
pop
cli
iret
xchg
addr16
bound
inc
jle
leave
push
rcrb
pushf
cwtl
xlat
sub
ljmp
add
stos
jg
test
fadds
jecxz
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
jne
jo,pt
cmpsl
jg
jo
and
push
bswap
adc
gs
sbb
jbe
jne
push
push
push
dec
jge
sti
sub
fstpl
ret
out
aaa
sbb
test
and
xlat
and
xlat
repz
jo
fs
repnz
aad
push
pop
pop
jno
inc
or
gs
int3
mov
cmp
addr16
adc
cmp
and
mov
sbb
adc
and
cmpsb
dec
enter
ljmp
test
cs
inc
mov
or
ss
mov
popa
lret
dec
lods
or
cmp
mov
push
pop
and
imul
lods
and
les
mov
dec
push
lds
push
test
dec
lds
movl
fucomp
or
add
out
arpl
mov
push
xchg
mov
mov
and
inc
rclb
xor
jbe
ret
arpl
inc
jmp
cmpsb
fdivl
or
mov
mov
mov
cld
jecxz
lods
inc
pop
dec
and
jae
mov
add
lock
adc
fdivs
jne,pn
xlat
das
int3
fsubl
testl
sarl
lahf
xor
lahf
call
aad
popf
mov
mov
sbb
push
test
clc
and
sahf
lea
not
inc
jl
sub
ret
bound
fistps
inc
sbb
mov
inc
add
std
inc
add
jae
inc
add
repnz
inc
add
add
add
add
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
clc
leave
jg
mov
jo
jg
jo
xor
sbb
xor
movsl
leave
mov
sub
int
adc
insl
jle
xor
mov
nop
xchg
lea
mov
daa
mov
dec
lret
sahf
out
outsl
lcall
jbe
or
fcompl
cmc
cmc
les
fiaddl
jae
sub
lahf
pop
mov
int
add
xor
and
addb
xor
pop
les
mov
push
mov
or
popf
add
scas
xchg
jb
std
pop
inc
out
sub
repnz
push
jnp
bound
lret
jno
test
mov
xor
movsb
and
jo
pop
push
test
lods
inc
cmc
or
jle
in
cmp
sub
xor
in
push
jmp
jbe
and
cmpsl
das
sub
popa
pop
lock
popf
xchg
call
jb
jl
popf
movsl
arpl
outsl
mov
mov
adc
jo
jg
dec
std
lock
in
mov
cwtl
loop
leave
push
mov
jns
mov
stos
je
fists
popf
mov
jmp
dec
mov
jne
inc
es
ret
xor
xor
test
inc
inc
jae
pusha
lret
int
sub
sbb
aam
sub
xor
test
or
dec
mov
out
cmpsl
pop
sahf
sub
add
mov
sbb
jl
cmc
clc
lods
sti
inc
leave
repnz
mov
mov
out
mov
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
std
inc
loop
jo
xchg
mov
sti
mov
pop
clc
push
pop
or
test
lcall
cli
push
mov
jb
mov
in
into
pop
js
out
sub
push
imul
fwait
and
fadds
std
stc
fnstsw
mov
addr16
sbb
pop
and
or
out
dec
sub
push
mov
xchg
xchg
ret
xchg
pop
mov
lods
jg
or
mov
dec
jge
lea
enter
int3
ror
aam
lea
and
cltd
push
out
xor
ret
fucomp
pop
sub
cltd
pop
daa
lock
shll
mov
sti
and
inc
jg
mov
ss
in
test
idiv
call
push
out
add
loop
xor
mov
sbbl
fcmovne
fnsave
fldl
add
jge
aad
mov
ja
sub
ja
jp
cmpsl
and
xchg
into
add
out
dec
dec
icebp
hlt
cmp
push
outsb
aam
mov
ljmp
test
loop
and
mov
mov
adc
cmp
mov
stos
and
sbb
sti
add
ret
jge
shr
arpl
pop
in
adc
int
insl
les
push
inc
subl
repnz
fs
ljmp
cmpsl
push
sub
xor
add
mov
and
rcrb
cltd
add
out
dec
xchg
pop
int
push
xchg
int
testb
call
mov
pop
data16
pushf
aaa
adc
xchg
mov
addr16
jnp
addb
lods
or
jg
in
loop
sbb
push
mov
dec
cltd
fwait
jmp
int
lret
pop
shrb
mov
xlat
sbb
xor
repz
sbb
jge
sbb
ljmp
push
and
xlat
dec
add
mov
in
adc
decb
push
das
push
mov
pop
imul
mulb
mov
sub
ds
aam
loop
repz
mov
mov
mov
xor
ret
push
cmpsb
mov
jl
lock
hlt
pop
sub
xlat
das
push
xchg
xor
mov
rclb
insb
jmp
mov
test
or
ret
sbb
push
adc
add
sbb
add
and
add
jne
add
jnp
inc
add
jbe
add
gs
inc
add
rorb
inc
or
test
inc
or
xchg
add
sub
test
pushf
or
inc
out
cmp
loop
jo
rorb
jmp
fwait
bound
test
and
xchg
test
mull
cmpsl
pop
je
aaa
jnp
enter
and
or
arpl
and
pop
arpl
pop
lret
cmpsb
push
push
insl
repnz
mov
mov
cli
hlt
add
adc
sbb
in
jb
mov
iret
sti
imul
lret
mov
cmp
fildll
data16
mov
out
daa
in
fidivl
and
sbb
jge
stos
lret
mov
cmc
sahf
mov
jne
iret
fdivrp
or
in
xchg
mov
inc
dec
xchg
rcr
dec
nop
fnstcw
inc
insl
sub
cmpsb
and
ljmp
test
inc
aad
call
loopne
ss
pop
arpl
push
mov
imull
in
out
push
in
add
push
jae
cmp
mov
push
out
add
std
add
dec
std
movsb
scas
lds
and
mov
cli
ds
sub
xorl
scas
xchg
or
in
out
cli
inc
or
mov
and
mov
js
push
dec
addb
mov
fdiv
jg
and
ds
pop
loope
cmp
mov
cmpsb
xor
ljmp
jne
push
sbb
adc
cld
or
mov
fwait
jno
jae
in
les
fistps
and
lcall
div
sbb
shll
adc
test
into
push
or
shlb
lahf
shlb
int
arpl
je
imul
lret
or
int
movsl
xchg
bound
arpl
sub
stos
push
popa
xchg
test
xchg
and
jp
nop
cmp
dec
ja
cwtl
out
inc
test
push
shll
or
lods
mov
cmp
aam
mov
push
mov
cltd
mov
ja
pop
add
cmpb
mov
ret
lret
fdivrp
push
or
test
xchg
pop
cmpsl
xorl
mov
pop
addr16
lods
xor
jecxz
dec
push
sbb
in
cmp
jne
xor
js
mov
mov
daa
mov
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
cmp
push
pop
lds
and
jo
mov
aad
and
lods
inc
inc
lret
std
cmp
int3
jnp
pop
mov
mov
fistps
pop
mov
dec
mov
popa
jmp
pop
cltd
mov
xchg
jo
les
int
fidivrs
xchg
fdivp
lods
and
out
cmp
clc
xlat
xchg
mov
add
mov
scas
or
push
and
jns
scas
nop
and
sub
outsb
pop
fildll
and
movsb
cwtl
jbe
jmp
stos
adc
sub
xor
sarl
cltd
call
xor
aad
sub
loopne
mul
lods
mov
insl
dec
aad
pop
mov
es
in
sahf
cmc
cmpsl
dec
push
mov
cltd
jno
fcmovb
cwtl
mov
mov
jbe
mov
sub
pop
lock
jmp
jmp
in
xor
or
xchg
mov
test
adc
lret
add
add
insl
sbb
popl
xchg
pop
lods
loopne
inc
out
aaa
scas
in
inc
cmp
scas
insl
fmull
mov
pop
loop
popl
add
adc
pop
test
test
rcrl
in
imul
lret
jo
aam
push
xor
dec
into
push
dec
sub
adc
fsubrs
push
aas
outsl
add
xlat
inc
mov
fsubrl
fidivl
jnp
add
in
xor
daa
mov
icebp
std
cli
icebp
cltd
ret
es
mov
lar
mov
arpl
cld
mov
fcom
cltd
movb
movsb
sahf
sub
cmp
push
shll
mov
dec
mov
lods
into
pop
frstor
fimuls
sub
subb
xchg
jbe
push
inc
movsb
jno
dec
push
loope
inc
lret
mov
ds
dec
add
dec
or
mov
add
cmp
pushf
nop
jmp
nop
mov
lods
cmp
cmp
mov
and
inc
sub
cmp
sahf
das
es
dec
mov
rorb
aas
lods
push
xchg
cmp
fwait
in
push
into
cltd
xlat
xchg
lock
xchg
lods
test
pop
daa
cmp
dec
cmp
push
out
in
cmc
mov
mov
jo
fstpl
inc
out
fmull
xor
jle
int3
ret
sub
je
je
adc
push
mov
popa
mov
sbb
imul
out
jge
std
mov
push
fcoml
scas
adc
stc
cli
xor
sub
aas
pop
mov
mov
jno
insl
mov
sbb
lret
sti
xor
pop
sbb
xor
jecxz
dec
and
negl
fxch
push
xchg
or
into
and
sar
mov
repz
sub
mov
xlat
inc
lret
mov
fists
psubq
sub
jge
mov
or
cwtl
push
ret
add
fcoms
add
repnz
inc
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
jl
lahf
mov
jo
daa
sub
loope
imul
dec
mov
jg
jmp
clc
pop
mov
arpl
fisubrl
sarl
jns
cs
fstpl
xchg
insb
and
fmull
cltd
dec
push
cmp
push
es
movsl
je
out
mov
dec
and
inc
out
or
stos
pop
mov
fwait
loope
int3
popa
xchg
addl
mov
sbb
sub
cli
orl
and
dec
addb
dec
stc
sub
cmp
test
les
scas
and
in
xchg
stos
sub
xor
bswap
sbb
mov
push
mov
mov
int
scas
cmpb
mov
pushf
in
lcall
test
add
mov
xchg
ret
jge
pop
mov
xchg
out
push
test
js
es
or
pop
sahf
ror
push
mov
rcl
or
or
icebp
popf
std
inc
mov
add
cli
lods
and
dec
testl
rcr
add
clc
stos
sbb
notl
in
out
push
pop
test
mov
je
insb
imul
jne
sti
push
sub
lahf
push
lock
jne
pop
adc
jecxz
dec
imul
je
jo
and
sub
mov
sbb
xchg
je
incl
popa
dec
pusha
pop
sub
lret
lock
add
pop
daa
and
lret
imul
mov
frstor
aaa
mov
cmp
jmp
mov
dec
dec
lock
ret
lahf
stc
mov
xchg
mov
jg
lahf
enter
adc
mov
inc
adc
aaa
pop
and
inc
insl
sbb
push
mov
jle
xchg
popa
sbb
lock
mov
sub
push
pop
pushf
aas
test
dec
cwtl
in
mov
pop
inc
int
xor
jecxz
stc
jae
fwait
pusha
dec
gs
jbe
sub
jno
cld
dec
jle
sbb
bound
mov
nop
cltd
pop
aam
inc
push
sub
mov
fsubl
ljmp
xchg
shlb
in
lea
cwtl
sbb
lods
cmp
inc
cmpsl
les
mov
lock
mov
adc
enter
xchg
mov
fbstp
cwtl
pop
sub
xchg
enter
pop
mov
std
mov
ret
xchg
dec
or
into
les
lock
pushl
cwtl
mov
jl
cmp
mov
mov
mov
cltd
addl
mov
ret
sarl
loopne
dec
insb
cmp
jle
ja
jae
aas
ljmp
xchg
mov
mov
add
mov
or
push
nop
into
pop
dec
pop
push
xor
ja
ja
mov
out
repz
sub
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
std
in
pop
test
jo
cli
enter
pop
in
jns
or
mov
andb
jne
xor
and
les
cld
pop
cs
in
adc
mov
inc
sbb
push
repz
loop
enter
ret
jle
adc
icebp
jg
push
fsubrl
add
fs
subb
xchg
sarl
add
leave
or
xlat
fcomps
popf
adc
outsl
sbb
mov
movsl
loope
xor
das
push
mov
cmovns
repnz
push
sahf
mov
sub
imul
fsubrl
jb
les
adc
imull
mov
testb
mov
mov
rcrb
jl
add
je
insb
sahf
push
cmp
dec
jno
and
mov
xchg
test
outsl
sarl
sbb
sahf
pop
insl
out
das
negb
outsl
cltd
sbb
popa
mov
push
cmp
out
movsl
int3
xor
adc
js
mov
sahf
test
repnz
add
xor
jp
sub
out
aas
mov
dec
jecxz
mov
inc
aaa
aaa
nop
xor
loope
push
xchg
push
mov
mov
les
mov
gs
jecxz
push
mov
movsl
jo
push
stos
int3
call
push
adc
daa
testl
push
shlb
outsl
push
adc
inc
dec
andl
fidivs
nop
lods
test
lea
cli
les
xchg
dec
cltd
std
hlt
adc
and
les
add
jp
jbe
fmulp
aaa
push
test
add
and
loop
aam
in
out
dec
iret
cmp
inc
cwtl
fldl
push
xlat
jp
imul
cwtl
test
call
shlb
cs
cs
cmp
push
mov
jge
arpl
add
daa
in
imul
cltd
out
iret
sbb
mov
fsubrp
sub
mov
push
lock
mov
and
sub
sub
push
push
dec
sub
mov
lret
and
jp
mov
sahf
jne
pop
cmp
and
daa
xlat
daa
fdivl
mov
and
sub
push
and
cmp
std
cltd
aas
pop
in
outsl
and
into
mov
jnp
and
add
xchg
push
push
xor
mov
sub
jp
fwait
xor
inc
inc
ljmp
icebp
orb
mov
or
out
dec
jl
insb
pushf
add
lock
jl
inc
jp
ljmp
pop
cmp
add
shrl
jmp
xor
or
insb
lds
jle
lock
fbld
cmp
sarb
out
mov
lcall
dec
or
movsl
and
outsl
dec
fnstenv
jbe
adc
xchg
xor
xchg
leave
mov
pop
add
dec
scas
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
cmp
xchg
les
jge
jo
xor
pop
in
push
or
jmp
aas
movl
addb
and
push
clc
jle
adc
mov
mov
add
cltd
xor
or
popf
popf
xchg
cmp
psubd
flds
insl
insl
int3
stc
mov
mov
push
mov
mov
jmp
xchg
mov
stos
call
test
cli
push
loop
mov
mov
pop
shlb
das
pop
cli
dec
in
ret
cltd
scas
jg
mov
es
lods
cmc
insb
imul
lds
lock
or
leave
push
jge
xor
cmpsl
fsubrl
mov
aam
sub
sub
test
or
cmpsb
fisubl
cld
dec
cli
mov
loop
cmc
jno
sbb
faddl
xchg
loop
cmp
adc
shlb
push
unpckhps
pop
int3
inc
push
mov
jl
jno
in
fwait
in
pushf
rcll
vmovntps
scas
hlt
jl
sar
push
test
or
pop
xchg
pop
xchg
sub
push
ret
das
pop
or
testl
pop
inc
inc
sub
mov
in
loopne
inc
cmpsl
loope
cltd
fwait
mov
fs
je
fnstsw
xor
cli
loopne
sbb
adc
negb
jnp
cmp
dec
push
dec
ret
shlb
mov
mov
or
push
popf
out
hlt
adc
and
aaa
imul
mov
dec
push
shl
xor
mov
lea
cwtl
fs
lcall
cltd
fwait
cli
jl
mov
loopne
pop
push
dec
loop
std
lods
jg
es
xchg
pop
inc
rcr
stos
stos
int3
and
repnz
repnz
jo
pop
sahf
xor
cs
mov
clc
mov
cmpsb
xor
sub
push
mov
shrl
nop
adc
xchg
popf
or
push
movb
fcompp
repz
pop
out
int
adc
sub
add
or
enter
dec
addr16
ficomps
push
push
mov
fsubl
in
inc
push
mov
add
mov
mov
ror
jmp
nop
cli
mov
scas
cmp
cltd
pop
int3
fdivrs
cmp
sbbb
rcll
arpl
dec
jle
jnp
jp
or
subl
jl
mov
mov
repnz
add
mov
fisubrs
fidivrl
movsb
dec
mov
loopne
cwtl
aaa
inc
mov
push
xchg
jmp
enter
popa
in
gs
push
and
insb
xor
cmp
popa
pop
dec
push
inc
stos
pop
pcmpeqb
bound
cmpsl
je
push
pop
inc
ficompl
outsl
hlt
test
sahf
push
mov
jbe
or
dec
int
rorb
addr16
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
rclb
xlat
rcll
jo
and
jo
xchg
iret
xchg
sarb
mov
pop
fsubrl
rcrb
push
or
push
pushw
popa
add
frstor
out
cli
in
mov
iret
or
scas
fs
insl
arpl
pop
gs
adc
rol
dec
loopne
cld
xor
add
pop
movb
push
out
jne
cmp
cmpsl
jmp
lret
in
es
pop
jg
inc
sti
stc
pop
mov
inc
xchg
inc
cmp
and
mov
pushf
add
mov
bound
xor
ficomps
les
xorl
mov
aaa
mov
xchg
aas
mov
add
push
inc
sub
ljmp
pop
leave
inc
adc
fs
jnp
jne
je
jp
arpl
scas
ds
inc
push
cmpsl
stos
mov
push
jl
or
jbe
lahf
mov
in
jle
add
into
lret
daa
dec
movsl
aam
hlt
dec
icebp
cli
pop
cli
daa
sub
imul
mov
loopne
hlt
sub
add
ficoms
jnp
ret
je
adc
or
jg
fdivrs
mov
jns
mov
cmp
repnz
xchg
fs
fmuls
push
cli
sub
xor
sbb
or
ja
lods
leave
sbb
out
xor
or
into
push
test
jbe
fnstsw
and
sbb
xor
out
in
call
cmpsb
stc
in
push
and
aad
xor
jns
mov
sub
fadd
ljmp
cmpsl
cmp
lret
iret
mov
lret
dec
adc
inc
push
inc
mov
out
jl
sub
dec
inc
adc
arpl
pop
add
mov
lret
sarb
int
mov
ds
jno
xor
add
dec
inc
mov
lcall
adc
inc
mov
test
in
aad
lods
adc
std
jnp
fcomps
dec
or
mov
inc
add
inc
loopne
jl
test
jle
sbb
and
mov
cmpsb
xlat
sbb
outsl
lods
push
mov
loopne
pop
mov
push
push
bound
jns
fistps
cwtl
mov
mov
popa
cmpsb
pop
sub
push
sub
pop
cmpb
push
mov
adc
cltd
or
mov
ljmp
xchg
and
int
loop
mov
inc
data16
xorps
mov
push
pop
pop
call
insl
pop
add
lcall
adc
cmc
mov
cmpsb
ljmp
cmpsl
push
adc
jns
and
dec
sub
stos
or
aas
sti
lcall
lods
aad
sahf
adc
rcrb
repz
adc
cmpsb
mov
aam
ss
iret
cmpsl
aas
mov
jns
test
fcompl
mov
clc
sti
ds
inc
jle
xor
jp
inc
or
mov
mov
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
sub
sbb
and
jo
push
mov
and
and
cmp
je
xor
jne
das
jne,pn
repnz
jne
arpl
fs
jnp
pop
movsb
sub
mov
push
mov
fisubrs
mov
rcll
nop
ret
lds
test
insl
xchg
les
mov
jbe
pop
cmp
mov
int
repz
mov
in
jmp
stc
xor
xchg
ljmp
in
rcl
add
lahf
xchg
lods
les
into
xlat
dec
int3
push
cld
push
inc
and
xor
aaa
or
cmp
push
mov
es
nop
mov
xchg
mov
movsb
popa
test
pop
xchg
dec
pop
shl
mov
js
adc
fcoml
addb
or
sub
push
mov
fadds
nop
in
dec
fsub
lock
cwtl
int3
or
jb
pushl
neg
ficoml
into
push
jg
insl
xchg
mov
sbb
outsb
xchg
rcrl
mov
insl
add
stos
sub
insl
push
and
mov
sub
aas
imul
sbb
lea
pop
sbb
jmp
jnp
xchg
sti
in
cmp
mov
inc
and
dec
ja
jbe
subl
int3
lret
dec
mov
and
add
int3
jno
les
and
mov
call
fcmovb
xchg
mov
push
addr16
cmp
mov
jbe
lret
iret
popf
inc
sahf
or
call
xor
push
cmp
mov
mov
or
xor
es
mov
pop
nop
dec
enter
cmpb
in
xor
mov
cltd
adc
iret
mov
pop
and
xchg
fistpl
repz
mov
insl
decl
cwtl
mov
scas
into
xchg
cmc
aad
pop
xchg
insl
outsb
out
test
xor
shll
xor
out
lcall
loop
or
sub
inc
jmp
push
mov
and
movsl
mov
fidivs
arpl
aad
cld
gs
imul
or
test
xlat
iret
sub
jecxz
sbb
inc
les
adc
jno
dec
popa
aad
inc
xchg
ds
sti
ds
ja
outsb
lea
aas
daa
test
testl
ds
inc
pusha
imul
lock
xor
adc
sbb
push
adc
cwtl
pop
rcpps
sub
xchg
mov
lahf
add
or
aad
add
popf
mov
push
in
repz
and
adc
mov
xchg
gs
adc
pop
cmpsl
aaa
js
inc
inc
bnd
sbb
bound
pop
jecxz
inc
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
ret
xor
shlb
and
jo
mov
outsl
push
lret
or
cltd
arpl
mov
je
popa
xchg
pop
and
outsb
and
rcrl
push
ret
fimuls
pop
in
imul
into
aaa
mov
mov
xchg
fisttpll
mov
jl
adc
ja
mov
mov
aas
or
movsb
xchg
div
cmp
out
sbb
mov
rcrb
pop
and
inc
shll
add
push
jb
hlt
je
lahf
pop
repz
scas
jns
sub
in
ret
push
inc
jl
cmpsb
jns
sub
call
dec
pop
or
xor
pop
sti
adc
xlat
test
xchg
jp
jge
ffreep
sub
dec
shlb
mov
fsubl
xor
fnstenv
add
pop
inc
push
bound
imul
adc
jmp
in
out
xor
stos
mov
inc
and
dec
sub
and
pop
mov
and
inc
adc
test
jecxz
mov
repz
sub
icebp
and
sbb
jmp
cmp
jnp
scas
nop
fisttpl
js
xchg
lds
out
loop
mov
push
imul
mov
jb
xchg
xchg
test
jmp
lcall
push
shll
inc
mov
mov
jne
test
orl
inc
push
das
fnstenv
or
sbbb
mov
inc
aas
aas
stos
into
pop
repz
cltd
dec
fnstcw
pop
jl
jl
push
stc
aas
sub
adc
mov
mov
inc
fdivrs
insl
in
idivl
and
sbb
xchg
xchg
inc
idivl
pop
sub
loopne
rol
lock
or
test
enter
enter
inc
fbld
jp
outsl
mov
stc
ret
ss
adc
xor
fwait
jnp
into
das
scas
mov
lds
pushf
movsb
mov
inc
adc
loop
aad
pop
test
push
data16
cmp
in
xorb
andb
add
lcall
out
enter
push
lods
es
or
pop
push
jno
dec
inc
cltd
movsl
xchg
jae
scas
fists
into
xchg
ret
lahf
fwait
add
xor
mov
or
lds
cmp
sub
add
or
jns
out
or
push
orb
frstor
and
out
in
addr16
mov
lret
cmp
pop
push
sub
mov
js
repnz
cmp
jg
shrb
dec
lods
jnp
lds
and
or
lods
push
clc
test
popf
fcoml
jns
repz
andb
loope
das
mov
pop
and
and
sbb
sahf
mov
fdivl
push
and
add
enter
movsb
imul
push
shl
dec
mov
mov
cwtl
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
jae
aam
push
inc
push
sub
xchg
mov
fidivs
jbe
cmp
jg
int3
notb
fldenv
jno
push
dec
das
and
adc
and
dec
fucomi
add
sti
inc
rorb
movsb
out
enter
pop
add
xor
lcall
fldenv
aas
in
sahf
jae
and
jo
lods
fstpt
xchg
mov
lods
cmp
push
popf
repz
xchg
pop
push
pop
push
dec
or
jo,pn
push
or
adc
jmp
bnd
jle
in
xchg
add
scas
add
cmc
xor
inc
int
ret
outsl
xchg
cld
test
cli
jg
repnz
jb
in
mov
push
in
mov
das
xchg
adc
stc
adc
lods
cmp
test
rcrb
jmp
pop
fisubrs
sub
pushf
cmp
scas
xorb
mov
fldl
push
jno
pop
fdivs
mov
add
mov
lcall
push
pop
add
addl
out
push
cmc
lods
popa
lret
adc
pop
mov
movups
sub
inc
imul
out
or
rclb
push
into
dec
sub
out
sbb
jb
jne
sbb
not
push
cmp
pop
dec
pusha
mov
xchg
mov
jns
cwtl
sahf
shrl
int
push
dec
push
arpl
les
sub
dec
test
gs
aad
in
int
leave
rorl
rol
in
cmpsb
add
outsb
ret
push
adcb
and
cmp
lds
outsb
in
jmp
xchg
jnp
aam
popa
fwait
data16
push
jne
mov
clc
xchg
dec
aas
mov
sbb
sub
mov
or
pop
jmp
mov
jmp
lret
scas
int3
adc
push
inc
js
mov
jbe
mov
popa
jae
cli
adc
jns
push
shll
data16
add
pop
lock
mov
inc
push
mov
es
sbb
push
add
pop
fs
clc
lods
cmc
idivl
into
cmpsl
push
dec
enter
cmp
pop
pop
ds
addr16
sbb
test
lret
pusha
imull
nop
dec
adc
cwtl
push
dec
inc
insb
sbb
mov
mov
push
les
stos
aam
dec
mov
pop
mov
popf
sbb
add
shrl
lret
je
dec
stos
inc
inc
mov
sarb
sbb
cmp
mov
xlat
adc
js
outsb
dec
push
insb
and
xchg
sbb
lea
dec
and
mov
inc
jne
arpl
dec
repnz
in
in
cmpsb
mul
jecxz
add
popa
and
and
xchg
fstl
push
gs
cmp
and
mov
lret
push
insl
mov
jb
test
in
mov
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
imul
and
jo
and
adc
cmpsl
fidivrl
pop
paddusb
sbb
mov
sub
cmp
stc
dec
xacquire
cmpsb
xor
movb
cmp
pop
mov
pop
lea
xlat
mov
shl
loopne
in
mov
inc
xchg
inc
add
in
xor
hlt
sub
stc
xlat
lret
popa
cld
and
xlat
dec
and
test
rcrl
fbld
adc
lds
orl
pop
mov
xor
ljmp
or
jge
mov
nop
out
stos
cli
enter
mov
stc
idivb
enter
xchg
mov
mov
data16
dec
es
sub
pushl
mov
leave
in
and
jnp
dec
mov
popa
test
inc
mov
push
sti
fisubl
subb
sbb
sub
mov
lock
jmp
popf
inc
pushf
les
int
stos
popf
shl
shlb
lock
xor
repz
pop
movsb
inc
dec
and
mov
push
mov
cmpsb
jno
or
loop
push
pop
enter
and
mov
cmp
dec
jge
nop
scas
pop
shrl
mov
xchg
out
fidivrs
inc
stos
cmp
pop
lcall
sub
lret
mov
rcrb
and
dec
fcmovnbe
stos
push
data16
mov
sub
rorb
mov
loope
jb
pop
int
jecxz
mov
dec
movsb
mov
dec
fwait
movsb
pop
mov
jb
daa
cmp
or
ret
je
inc
pop
iret
dec
xor
push
xchg
mov
mov
inc
enter
cwtl
adc
xchg
test
xor
mov
sbb
insl
imul
lahf
hlt
dec
pop
add
aad
bound
add
arpl
in
addr16
push
insl
aas
dec
pop
movsl
pop
pop
data16
mov
jno
gs
push
push
pop
and
loope
cmp
das
roll
stos
lret
lds
pop
je
pop
loop
cmp
lahf
movsb
jns
cld
fmull
pop
xor
pop
push
bound
ror
call
ret
bound
cmp
sub
lea
xlat
addr16
out
or
loop
jge
sbb
ljmp
mov
mov
lea
inc
mov
pop
loop
xchg
scas
jg
sti
outsb
mov
xor
inc
loop
push
arpl
adc
fnsave
aad
or
adc
faddl
jmp
xor
pop
in
mov
rorb
xchg
jmp
push
pushf
jl
mov
pop
in
cmpb
dec
sbb
or
add
pop
movsl
lods
inc
xor
xchg
adc
mov
push
mov
mov
scas
dec
cmp
popa
lret
push
push
shr
lret
jge
adc
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
ficoml
jo
and
jo
pop
insl
jbe
push
cmp
cmpb
cwtl
shrb
mov
or
repz
jb
je
mov
mov
mov
in
rcrb
push
sbb
cmp
cmp
fstl
adcl
inc
sub
cmp
enter
test
or
and
inc
push
pusha
or
jle
sub
int3
mov
pop
mov
inc
adc
imul
iret
enter
adc
and
adc
imulb
sub
cs
and
nop
pop
sub
mov
lea
mov
dec
cmp
insb
xor
xor
fildll
pop
sbbb
arpl
cmpsl
repnz
lcall
test
xchg
movsb
adc
jns
mov
xor
fimull
aas
divl
mov
popf
inc
aas
mov
imul
add
insl
movsb
sti
jge
mov
out
aam
mov
ds
aad
or
cmpsl
rcrb
mov
test
aas
movsl
push
pop
sub
mov
xor
and
cltd
push
cwtl
cltd
cmp
dec
xchg
xchg
jmp
pop
adc
shrl
push
add
lock
cwtl
jo
push
dec
leave
lahf
push
mov
andl
pop
sbb
mov
sahf
stos
xchg
lcall
or
in
shll
dec
inc
addr16
adc
pushf
mov
push
and
std
out
xchg
mov
mul
jne
ja
pop
xchg
and
lret
or
sbb
movsb
out
scas
test
pop
mov
mov
pop
aam
popa
pushf
cmp
rcrl
cltd
sti
fimuls
mov
sbb
xlat
test
bound
xor
addr16
push
xchg
adc
pushf
ljmp
les
push
inc
dec
es
jae
xchg
push
add
dec
test
loopne
loop
push
jo
xchg
pop
int
xchg
loope
adc
es
out
popa
fisubrl
push
daa
shll
xchg
or
decl
out
inc
das
or
push
ret
lock
addl
pop
inc
xor
jne
fwait
js
and
scas
gs
jb
jo
add
mov
push
jno
mov
xor
sub
lock
and
jp
xor
pop
dec
xchg
int3
xchg
js
and
loope
pop
mov
test
push
push
icebp
fisttpll
rorb
std
add
dec
rolb
adc
ret
inc
lahf
adc
pop
test
jo
shll
inc
xchg
popf
outsb
sub
add
and
and
dec
jecxz
xor
fs
mov
je
movsb
out
shrl
jecxz
jmp
test
xor
pop
fwait
xor
lret
push
cmpxchg
fnstsw
out
mov
out
cltd
ss
inc
dec
lea
mov
push
fs
or
mov
sahf
ret
std
push
xlat
rolb
insl
jmp
pop
dec
aaa
jp
push
lahf
xchg
je
enter
jmp
js
inc
scas
fisttps
icebp
add
add
loope
fldenv
insb
aaa
pushl
lea
jmp
add
out
out
xor
call
push
jns
ja
jo
and
jo
ss
nop
addr16
rclb
subb
scas
test
xor
xchg
sub
xor
pop
jge
sbb
adc
adc
pop
fldt
xlat
or
pushf
pop
jecxz
scas
pop
fistpll
cmp
loopne
sti
or
mov
mov
mov
ja
daa
mov
or
leave
jecxz
mov
das
push
jecxz
cli
add
cs
rcrb
sbb
stos
jbe
rcrb
push
mov
jmp
or
inc
inc
fs
mov
shll
pop
adc
loope
xchg
mov
sub
sti
mov
lods
rcl
add
fistpl
push
adc
stos
arpl
ljmp
mov
pop
pop
sahf
mov
add
xor
push
outsl
xor
addr16
cmp
mov
repnz
adc
xor
nop
jns
iret
rolb
sub
out
fidivrs
cmpsb
jp
adc
and
or
cld
in
inc
dec
repnz
out
mov
popf
int
fidivrs
jge
adc
scas
xor
inc
stos
test
mov
mov
jae
add
sub
or
sahf
dec
cwtl
mov
pop
add
sub
out
mov
sbb
and
lea
jmp
cmp
jo
mov
adc
add
outsl
xchg
xlat
aaa
aam
lds
cli
ljmp
sub
inc
rorb
ljmp
or
idivb
mov
stos
push
push
jl
push
sbb
fdivrl
fwait
pusha
scas
mov
push
aad
jbe
and
lods
nop
popa
andb
ljmp
sub
in
test
sub
jo
mov
xchg
push
cltd
adc
pop
cmc
stc
subl
int
jmp
push
push
mov
shl
pop
pop
mov
popfw
popa
or
ret
sarb
notl
clc
popa
or
ljmp
jecxz
pusha
and
jno
xchg
aad
fistpl
push
push
mov
fsubrl
jge
pop
cwtd
pop
cmp
add
cwtl
mov
leave
cmp
xchg
addb
in
sub
in
mov
and
sub
cmc
fnstenv
lcall
add
push
or
push
out
push
orl
adcl
cli
repz
dec
ret
ss
scas
arpl
insl
mov
loop
rcrb
sbb
out
clc
add
movsl
dec
jp
sbb
inc
insl
lock
and
and
insl
mov
mov
nop
adc
sbb
dec
lock
ss
clc
cs
push
dec
inc
mov
sbb
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
dec
out
daa
loop
jo
jge
jo
out
stc
inc
push
lock
or
inc
xchg
add
int3
ss
shrb
xchg
addl
pop
mov
test
ds
into
aas
popf
jno
fwait
inc
mov
cmp
pop
xor
add
dec
pusha
and
call
stos
jecxz
push
mov
sub
mov
and
imul
xchg
mov
mov
and
insl
daa
sub
cmc
outsl
lock
stos
leave
sbb
ud2
push
je
aaa
mov
and
mov
aad
cs
pop
testl
ret
push
out
cmp
pop
shlb
dec
mov
enter
pushf
and
popf
sub
xchg
xchg
fstl
sti
mov
out
mov
dec
adc
dec
jae
mov
mov
movsb
movntq
sub
pushf
dec
jmp
scas
or
test
xchg
and
in
push
jne
mov
xchg
add
push
fimuls
sbb
jae
out
icebp
inc
push
jnp
push
hlt
adc
mov
mov
cli
xor
xchg
and
dec
mov
shll
xor
ja
mov
movsb
jecxz
ss
jecxz
dec
jnp
popl
jno
xor
inc
dec
aas
nop
cltd
mov
push
mov
add
insb
nop
or
xchg
mov
add
xor
test
test
cmp
add
xor
rol
push
jns
dec
push
ror
aas
mov
std
mov
push
cmp
sub
js
xor
xchg
lret
repnz
movsl
lahf
adc
loope
call
add
out
pop
mov
popf
and
xchg
shlb
sub
sub
or
subl
jae
test
les
shl
add
out
xchg
pop
cs
cmp
aas
xor
roll
cltd
or
jp
push
sub
cld
hlt
push
cmp
cmp
mov
fdiv
pop
cs
push
mov
adc
xor
add
and
push
fisubl
loop
js
test
inc
sub
pop
fs
rcll
or
stos
sub
negb
andb
or
jae
enter
aad
fsubs
std
add
sahf
add
fidivrl
xor
stc
stc
cmpsl
mov
mov
xor
sbb
adc
cmpsb
imul
cli
sbb
inc
sub
pop
out
movsl
orl
fs
xchg
and
in
addr16
je
mov
or
popa
sbb
imul
out
cmp
mov
xchg
out
js
cmp
loope
mov
aaa
mov
push
aad
xor
jp
les
sub
mov
inc
pop
push
mov
shll
out
adc
jae
inc
cmp
inc
call
mov
mov
jmp
out
mov
ja
add
xchg
fsubs
out
jo
and
jo
ds
test
jns
fwait
stos
scas
mov
lods
movsl
je
cmp
outsb
or
loopw
outsl
mov
das
adc
popl
into
or
aaa
inc
or
cmp
roll
add
sub
adc
jge
lock
xor
je
orb
jns
ss
inc
add
pop
enter
pop
adc
pop
pusha
mov
pop
jecxz
mov
dec
and
xor
jge
sub
data16
mov
stc
cwtl
jl
inc
dec
daa
pop
lock
mov
dec
sti
int
cmc
xor
xlat
cltd
jnp
sub
push
loop
test
mov
sbb
lahf
jnp
pop
mov
pop
mov
pop
inc
adc
inc
xor
test
mov
push
pop
mov
xchg
js
add
testb
inc
mov
jnp
inc
loope
adc
jb
mov
or
jns
adc
sahf
add
push
sub
cmp
rclb
sub
inc
vpsrlq
notl
test
mov
lcall
inc
fcoms
cmpsl
and
mov
and
xor
test
mov
sbb
sbb
in
jp
aam
mov
sbb
adc
jns
cmpsl
xchg
pop
push
in
iret
sbb
sbb
jmp
push
pop
pop
aad
mov
hlt
sub
xchg
adc
sbb
and
leave
iret
data16
ja
mov
dec
dec
je
notl
or
shll
push
jmp
outsb
leave
leave
cli
dec
add
dec
roll
outsl
out
into
dec
push
jge
inc
lret
inc
push
pushf
icebp
test
inc
inc
mov
ds
xlat
xchg
xchg
cltd
in
repz
in
stos
test
jmp
stos
xchg
xchg
dec
add
pop
xor
pusha
rorl
inc
dec
stos
ds
mov
clc
and
fisubrs
mov
xchg
mov
push
test
loopne
jle
cmp
icebp
push
arpl
insl
fisttps
inc
popa
int
adc
xor
sub
jge
inc
jl
adcl
fmuls
xor
fsubs
mov
ja
sub
sbb
mov
jmp
je
scas
fdivs
or
xlat
sub
xchg
inc
push
dec
jbe
dec
test
pusha
mov
popf
inc
scas
xor
aam
sub
fabs
lcall
mov
clc
and
and
lahf
sub
icebp
pop
loope
jg
pop
add
xchg
cmp
sbb
rol
pop
and
rorb
inc
cmpsb
add
xor
into
int
dec
mov
jne
push
jb
scas
xchg
ljmp
sub
or
in
push
in
ja
mov
inc
xchg
push
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
in
jo
lahf
jge
jo
jae
test
fisubs
push
sub
mov
xor
pop
rcl
aaa
jne
add
sbb
popa
pop
inc
mov
xchg
imul
push
mov
lods
mov
or
fwait
nop
mov
test
jno
jnp
mov
xchg
dec
add
je
int3
xchg
les
mov
jmp
mov
inc
enter
push
adc
lds
push
mov
cmc
fldenv
or
jle
fsts
sub
into
mov
push
rorb
pop
and
pusha
add
inc
or
mov
nop
sbb
push
pop
rclb
sub
dec
imul
push
loop
jp
test
add
ret
mov
cmpsb
push
jno
xor
in
cwtl
cmp
mov
push
fsts
or
mov
ffreep
lock
mov
arpl
aad
icebp
xchg
rcr
lds
xchg
leave
inc
pop
ss
cld
inc
imul
push
mov
rcr
data16
into
cmc
xor
cmp
in
pop
xchg
addr16
daa
lret
jbe
dec
xor
test
xor
popa
cmpl
leave
faddl
into
pop
xorl
add
in
inc
arpl
inc
ljmp
sub
lahf
jne
sahf
orb
aaa
inc
dec
loop
adc
lcall
fmul
data16
test
cmpsb
popa
jbe
dec
jns
scas
shr
test
lods
jae
cmp
cmp
adc
pop
sahf
stc
lods
adc
inc
inc
cmc
dec
jns
cs
jb
xor
push
dec
push
fldenv
lds
mov
fisttps
test
roll
pop
mov
pop
dec
in
loope
mov
add
xchg
sub
ja
ljmp
ljmp
push
movsl
negl
lret
cmc
stos
mov
aam
cmp
mov
xchg
mov
test
sub
or
iret
add
mov
push
std
in
push
pop
je
or
leave
mov
mov
call
js
xor
inc
rolb
sub
mov
xchg
call
popa
adc
cmp
addr16
xor
dec
xchg
in
in
leave
jae
mov
pop
pop
test
outsb
cltd
mov
popf
adc
mov
jge
sti
mov
add
cwtl
inc
cld
add
mov
lcall
ljmp
mov
mov
xor
push
push
jmp
and
jecxz
in
mov
ljmp
jge
aam
mov
push
cld
pop
dec
aam
xchg
sub
push
scas
sar
dec
add
dec
push
mov
mov
mov
aaa
or
in
fstpt
int
inc
or
xor
fcompl
lods
sarb
rolb
jno
sti
loop
lods
pop
int
pusha
gs
xchg
ljmp
mov
xlat
xchg
xor
sub
pop
in
lret
scas
and
sbb
mov
orb
bound
ja
bnd
cmc
out
sbb
dec
lods
outsb
loop
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
lods
mov
es
jo
lcall
xchg
in
push
dec
adc
shll
sub
cmp
cs
dec
out
repz
aam
in
mov
cmp
hlt
aaa
rcrl
dec
mov
pop
loopne
dec
fwait
js
out
out
lahf
sar
mov
jno
stc
aam
mov
or
push
mov
mov
xor
into
adc
mov
jbe
adc
or
cs
aaa
push
inc
add
xchg
push
push
cmpsb
mov
std
mov
subb
out
and
aam
and
pop
and
daa
jmp
xchg
mov
mov
lahf
fwait
sahf
lods
lret
stos
cmp
mov
mov
test
mov
jno
addr16
loope
movsb
iret
jnp
mov
and
les
inc
jae
sub
pop
dec
xchg
stc
inc
repz
ret
mov
aaa
aam
idivb
stc
stc
cvtpi2ps
push
icebp
push
cmp
xlat
mov
div
push
or
movsl
mov
jno
mov
mov
out
mov
rcrb
or
dec
std
int
out
mov
test
imul
push
movsl
lods
xor
sbbl
insb
mov
sbb
push
dec
sub
mov
and
sbb
stc
lret
add
jne
addr16
ret
nop
add
popa
jne
stc
stc
jbe
adc
push
test
fwait
std
mov
dec
push
fdivrs
add
out
jb
xchg
jae
jl
lods
ffreep
xchg
iret
xchg
xchg
insb
or
fdivp
mov
cmpsl
data16
not
stos
push
andb
jg
push
cmc
insl
sbb
outsl
call
sub
dec
inc
cmp
data16
mov
fs
cli
or
dec
stos
andl
mov
mov
push
int
loopne
inc
in
test
xchg
cmpsl
movsl
out
adc
sbbl
add
mov
enter
and
dec
int3
lahf
mov
adc
sub
pop
mov
xor
fistl
xchg
sbb
add
sub
stos
mov
xlat
dec
popl
roll
aam
push
insl
lret
dec
into
shll
arpl
and
add
inc
pop
adc
cwtl
fisttpll
xor
pop
inc
or
dec
in
xchg
sahf
mov
and
mov
mov
cmp
xor
mov
pop
mov
les
sub
pusha
jo
cmp
xchg
xor
sbb
imul
push
cld
sbb
mov
leave
sbb
insl
flds
stos
xor
xchg
into
or
repnz
loop
and
push
fildl
add
mov
imulb
xor
add
xchg
add
hlt
mov
lea
ret
repz
and
subb
cwtl
adcl
mov
inc
nop
aam
sub
pushf
addr16
ds
mov
sbb
and
mov
fadd
cltd
or
push
add
xchg
outsb
lods
cmpsb
faddl
inc
fdivr
xchg
pop
imul
lods
lods
lcall
xchg
js
pop
sbb
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
loopne
lcall
lahf
jge
jo
in
inc
lcall
xchg
loop
or
and
stc
imul
shll
push
push
xor
fstl
add
outsb
xchg
and
push
in
cwtl
xor
adcl
inc
sbbl
cmpsl
xchg
xchg
inc
xchg
sub
outsb
in
jae
and
add
repnz
mov
dec
int3
leave
cld
and
ficomps
jmp
stos
mov
mov
inc
push
mov
jmp
inc
movsl
enter
pop
ja
cmp
idivl
ffreep
sbbb
lcall
stc
aas
xor
sub
ljmp
dec
sti
std
xchg
sub
int3
pushf
xchg
mov
push
xlat
push
jecxz
mov
test
jae
mov
bound
mov
insb
push
or
repnz
push
imul
cld
decl
out
imul
pop
aad
imul
xchg
mov
dec
mov
sub
mov
pop
jle
push
mov
sbb
leave
jl
fldt
push
xchg
jne
pop
dec
stos
sti
dec
adc
jle
or
outsl
mov
ret
rcr
and
rorl
pop
sbb
inc
adc
call
push
sub
push
and
adc
xchg
test
movsb
sub
xchg
pop
xchg
mov
pop
sub
cmpsl
jecxz
sub
cmp
inc
or
insb
fwait
in
je
imul
push
imul
stos
xchg
loopne
add
sbb
es
pop
and
imul
mov
mov
lahf
cmpsb
mov
adc
in
test
or
cmp
cmp
clc
nop
lds
dec
into
jmp
js
fwait
sahf
pop
jo
dec
lcall
or
dec
pop
fisttpll
incl
pop
in
mov
adc
cmpsl
out
mov
mov
scas
or
pop
repnz
aas
fs
jle
dec
repnz
push
add
xchg
movb
das
dec
lahf
inc
sarb
insl
sahf
and
hlt
sbb
mov
enter
shr
in
push
fdivrs
mov
hlt
inc
dec
and
inc
or
add
adc
inc
add
lcall
enter
cmpsb
xchg
mov
pushf
aaa
in
addb
pop
mov
mov
pop
or
test
and
mov
fld
push
addr16
cmc
sbb
popa
mov
dec
out
xchg
cmpsb
add
cmc
scas
mov
or
xor
ds
faddp
mov
xor
fiaddl
fwait
fwait
sbb
xchg
lahf
ret
xor
cmc
or
jns
push
inc
mov
xorb
loop
nop
xchg
cld
jb
out
dec
scas
fisubrs
jle
fwait
mov
mov
xor
and
xchg
mov
cs
mov
and
daa
pop
pop
lahf
imul
sub
pop
mov
shlb
or
jb
cmp
fnsave
out
sbb
data16
daa
iret
pop
clc
mov
xor
hlt
imul
insl
xchg
mov
pusha
in
cmp
push
imul
inc
sti
outsb
out
mov
pusha
loopne
in
fisubrs
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
out
test
in
jo
lahf
jge
jo
insb
push
fst
pop
push
imul
mov
aaa
mov
mull
ja
fidivrl
out
jns
in
and
push
push
and
jl
jno
push
adc
sbb
mov
or
adc
insl
fwait
inc
xchg
stc
cmp
sbb
push
inc
dec
mov
push
enter
ror
jne
lahf
pop
mov
out
stos
rcrb
push
xchg
call
test
sub
push
xorb
mov
dec
or
je
xchg
pop
stos
inc
xor
lds
aam
inc
fucomi
pop
mov
sbb
dec
lods
push
and
stc
rolb
andl
pop
and
rclb
sbb
xchg
inc
inc
inc
add
xchg
ret
xchg
mov
rsqrtps
inc
pop
push
push
add
cmp
clc
xor
mov
dec
xchg
jae
frstor
add
sub
loopne
int
lds
push
sbbl
mov
push
ret
aas
and
mov
out
push
enter
jbe
jg
push
push
mov
gs
movsl
xchg
popw
jno
sbb
testl
int3
cmp
mov
imul
inc
xor
mov
push
loopne
clc
addr16
push
enter
mov
mov
fistpll
mov
cmp
jbe
popf
pop
pop
aam
outsb
cmp
sub
cmp
or
fs
movsb
xor
clc
pop
lahf
cmpsb
loopne
mov
loopne
mov
xchg
mov
stos
mov
inc
loop
push
jecxz
add
stc
mov
lret
inc
sbb
movsl
jne
or
xor
push
fistl
test
pop
sbb
inc
add
test
loope
and
mov
adc
mov
imul
mulb
jle
push
dec
lods
test
lds
orb
mov
push
ds
arpl
rclb
and
push
or
jno
and
push
sbb
xchg
push
sbbb
sub
push
lds
sbb
or
pop
sbbl
pop
add
movsb
ja
mov
inc
push
filds
mov
adc
or
jg
mov
insl
xor
push
push
shll
scas
movsb
call
aad
jg
inc
fisttps
push
aaa
xor
xor
stos
pop
mov
xchg
out
into
xchg
pop
dec
xchg
popa
lods
pusha
popa
and
mov
mov
into
ljmp
xchg
fisubs
mov
pushf
mov
cmp
cli
dec
jo
ljmp
jns
roll
vpaddq
jns
jl
adc
jg
fucomp
mov
push
dec
lret
xor
jne
xchg
outsl
dec
and
adc
xchg
xlat
pop
dec
mov
fdivrs
jp
xchg
in
pop
pop
js
jecxz
dec
mov
bound
jmp
outsl
push
inc
movsl
fistl
lds
clc
jae
fs
or
jns
xlat
add
into
mov
mov
xchg
mov
fs
repnz
addr16
sbb
mov
in
or
xorb
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
nop
dec
addr16
jo
lahf
jge
jo
push
stc
enter
xor
lret
lds
shrl
add
fwait
inc
insl
xchg
cltd
cld
in
pop
sbb
pop
jnp
adc
loop
out
and
inc
jecxz
mov
cwtl
add
jnp
data16
and
fildl
sbb
mov
pop
lea
or
lret
jnp
out
leave
mov
add
ds
push
scas
xchg
sbb
push
ljmp
lods
sti
push
pusha
dec
sbb
add
leave
sub
cld
nop
testl
push
jge
out
or
inc
lret
adc
jecxz
push
fstl
dec
clc
imul
int
add
fwait
inc
jl
pop
inc
lcall
inc
lret
loopne
fldl
out
or
xor
cwtl
mov
cld
mov
sbb
mov
cld
loop
mov
adc
imul
jbe
push
mov
jno
mov
xor
xchg
jle
stos
xorb
or
mov
ds
inc
xor
jno
push
or
or
cld
cmpsl
outsl
xor
jp
and
jp
adc
aam
push
sar
cmp
pusha
cmp
push
xchg
mov
pop
sub
test
or
jmp
out
outsb
cltd
dec
jae
push
mov
mov
fisttpll
jns
mov
add
dec
sti
clc
cmp
insl
gs
les
xlat
pop
daa
sub
das
in
rclb
call
cli
sbb
flds
sub
shr
pop
mov
outsl
addl
out
cli
xor
mov
jnp
xor
sbb
insb
fisubl
push
jp
pop
je
cmc
push
pop
repz
loope
xchg
ror
push
clc
add
mov
imul
enter
mov
inc
fcompl
sbb
fidivl
mov
fwait
push
scas
rolb
and
in
jb
xchg
jo
pop
fstpl
xor
sbb
jnp
pushf
adc
inc
push
push
mov
cmpsl
pop
jns
popa
ja
mov
and
iret
lar
inc
in
pop
imul
cwtl
outsl
stos
jle
or
and
xchg
dec
outsl
iret
lahf
mov
mov
mov
push
cmpsl
iret
or
dec
inc
sub
adc
cs
shr
icebp
jb
inc
ret
int3
ret
fnstsw
add
ljmp
xchg
xlat
cmp
aam
jg
jp
movsb
add
jo
cmp
dec
inc
adc
mov
cmp
pop
adc
aam
int
insl
cmpsb
in
jle
js
cmp
xor
ljmp
test
inc
sbb
fwait
iret
mov
bound
xchg
sarl
int
pop
xchg
cmpsl
add
xchg
mov
mov
test
mov
cmovs
jle
add
jo
pop
icebp
jne
hlt
arpl
sbb
and
aas
mov
ja
and
rcr
scas
cmp
es
das
mov
xlat
dec
fistpll
cld
xchg
xchg
loopne
notb
sbb
push
jl
paddd
das
outsl
orb
hlt
mov
add
ret
push
stos
mov
add
leave
jbe
xchg
cmp
pop
xor
ja
inc
sub
sub
cmp
pop
pusha
mov
fldenv
pushf
fcmovb
sbb
lret
gs
xor
add
jmp
shlb
sub
lret
xchg
fbld
jge
jo
outsb
mov
or
push
cli
aaa
scas
push
insl
fcoms
inc
cmpsl
sub
mov
pop
loopne
pusha
sub
fucomi
jg
repnz
lret
push
call
andl
sub
or
pop
jge
out
or
xor
test
fldcw
das
or
mov
mov
or
and
push
cmp
ret
stos
es
jg
shr
jae
push
test
inc
mov
fists
xlat
in
add
fwait
xor
mov
or
mov
pop
lds
xchg
mov
std
pop
mov
ret
add
fistps
ss
push
xchg
xchg
and
popf
adc
dec
fldcw
xchg
aam
cmpb
sub
xor
out
imul
mov
ret
dec
mov
inc
into
sbb
or
insb
int3
lea
int3
mov
sbb
inc
in
xchg
sub
mov
lcall
mov
or
lret
cs
jo
jo
pop
mov
outsb
mov
sahf
repz
cmp
jbe
dec
inc
dec
ficoml
mov
mov
pop
in
je
mov
pop
xor
sbb
fistps
dec
es
addr16
jae
out
out
out
fisttps
dec
js
clc
sahf
sbb
out
xor
sti
inc
stc
aas
into
fwait
nop
ret
jno
lret
cmc
dec
mov
push
popf
xorb
add
in
push
test
clc
loopne
repz
sub
nop
lods
test
jb
mov
insb
and
aaa
and
push
test
clc
xchg
cltd
pop
dec
mov
pop
aad
rol
pop
jbe
adc
dec
sbb
cmpsb
pop
cld
dec
dec
in
jbe
addr16
adc
pusha
mov
paddb
mov
cmp
pop
push
scas
clc
scas
cltd
popa
jnp
nop
add
fnsave
jp
mov
jne
lea
mov
repz
out
bnd
add
xchg
jl
mov
sar
test
xor
add
lret
mov
cmpsl
sub
dec
negl
xchg
ret
mov
repz
negb
shrl
cmp
out
or
jo
inc
jmp
xor
xchg
fldenv
jno
jmp
push
loopne
fxrstor
adc
imul
jecxz
adc
add
mov
shr
rorl
outsl
call
mov
call
sub
roll
dec
xchg
xchg
rclb
icebp
xchg
sbb
fcomi
testb
int
bound
jle
push
push
lds
mov
mov
ja
lcall
inc
pop
cmp
cmc
and
xchg
setge
std
arpl
pushf
into
lcall
stos
xor
jnp
imul
pop
pop
and
and
sub
int
fmuls
pop
lea
add
sub
ds
test
lods
out
pop
add
clc
push
push
in
cmc
icebp
mov
push
jbe
jns
inc
out
es
and
dec
les
jg
sub
repnz
cmp
xlat
out
ret
ret
pushf
push
scas
shll
cmp
and
jns
leave
dec
and
fmuls
jge
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
add
adc
xchg
lahf
jge
jo
adcl
cmpsl
outsb
cmpsb
leave
mov
xchg
rorb
fistpl
push
mov
sbb
jno
xor
ss
sarb
cmovns
rcrb
sbb
sub
mov
stc
sbb
jg
mov
ja
and
imul
push
or
push
fwait
loope
insl
jo
lret
add
inc
clc
repz
and
inc
mov
jb
je
sbb
dec
aam
sti
xchg
sub
jb
xor
or
mov
and
dec
rcrl
fs
mov
sti
inc
and
dec
sub
and
sub
adc
mov
mov
jle
add
jo
leave
lods
mov
mov
lea
lahf
sub
mov
adc
mov
adc
sub
gs
fstl
mov
in
std
jl
inc
out
jecxz
int3
clc
mov
cmp
xchg
and
jo
mov
jne
jmp
icebp
pop
and
jbe
mov
push
fdivrp
adcl
andl
add
dec
jmp
shl
mov
movsb
sub
clc
mov
decl
sti
int3
movw
or
push
jns
xchg
cwtl
xorl
sub
shll
js
ret
and
and
insl
call
xor
out
popa
cs
mov
push
dec
cmc
inc
jg,pt
mov
stc
ja
push
sub
xor
ret
jmp
mov
push
pusha
mov
push
push
and
mov
jp
push
push
sub
pop
or
mov
pop
stos
push
loopne
inc
gs
jl
adc
pushl
imul
cmc
jg
jb
nop
hlt
jle
out
jp
push
dec
test
into
add
push
and
jle
mov
std
dec
adc
mov
mov
mov
mov
lahf
rol
sar
movsl
and
push
outsl
loop
fcomip
cmc
mov
outsl
addr16
movb
dec
dec
inc
scas
xchg
push
pop
mov
cmp
pop
adc
xchg
pop
sub
dec
mov
cmp
test
mov
jo
bound
aam
lock
pop
mov
jo
cmp
rolb
loope
jecxz
cmp
jle
leave
inc
dec
iret
das
xlat
pop
inc
pushf
sbb
fiaddl
xor
add
stos
sahf
push
sub
int3
xor
fs
lods
cmp
dec
repnz
idivl
cmp
and
scas
sub
out
pop
add
jge
jmp
dec
lea
lods
inc
push
jmp
loopne
add
nop
push
and
lret
fwait
xchg
xor
mov
mov
out
push
fmuls
cmp
inc
ret
movsl
test
cmc
cmpsb
and
or
mov
mov
pop
sub
aam
mov
out
popa
xchg
push
or
inc
cmpsl
std
jecxz
imul
and
pop
iret
ljmp
push
push
adcb
imul
pop
mov
es
pop
push
cmc
inc
cmp
stos
in
xchg
loopne
sbb
gs
jge
in
xchg
addr16
mov
jmp
sub
mov
fxch
outsb
lods
adc
shrl
push
sub
sub
pop
jne
jo
jp
push
pop
mov
sub
inc
sahf
jmp
xor
mov
loopne
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
cmp
lahf
jge
jo
fcoml
rclb
subb
dec
sbb
lods
mov
push
iret
shll
add
mov
push
fnstenv
dec
add
dec
xor
lods
data16
jl
dec
stc
scas
cmp
dec
xchg
pop
or
imul
jb
fadd
out
sbb
jnp
jle
xor
aaa
fstps
aad
jnp
prefetchw
mov
xchg
cmpsb
sbb
pop
cmp
jbe
aas
cmp
movsl
xlat
pusha
mov
cmp
jbe
push
xchg
adc
and
push
out
xor
push
push
rolb
pop
fs
pop
les
push
xlat
cld
push
js
je
enter
lods
insl
je
clc
push
in
adc
mov
out
aas
shll
xchg
push
popa
cli
adc
ret
dec
adc
push
sub
dec
pop
or
call
aam
stc
add
inc
roll
mov
out
xor
cmp
clc
adc
mov
mov
in
push
shrl
jo
lcall
clc
jae
ja
mov
jmp
sub
scas
lcall
insl
sbb
lock
lret
sub
stc
aam
xlat
sbb
inc
lret
or
dec
lret
out
push
and
in
sub
cwtl
mov
mov
pushf
cmpsb
or
sbb
enter
lea
push
xchg
hlt
add
and
out
lahf
cmp
xor
lea
ret
fbstp
jno
into
lds
pop
pusha
xchg
lods
mov
sub
ljmp
rclb
adc
aaa
mov
js
repz
lcall
ret
inc
add
iret
dec
cmp
add
lds
inc
xchg
jge
pushf
pusha
mov
cli
mov
movsb
and
sub
xchg
mov
xor
xor
sbb
stos
jp
lea
dec
test
sub
and
fcomps
test
adc
outsl
mov
adc
fs
add
std
loope
vpshad
js
push
xchg
mov
push
or
mov
jne
mov
mov
push
lahf
xchg
ja
sbb
insl
das
xchg
mov
testl
add
neg
jb,pn
xlat
in
xchg
in
es
mov
jae
xchg
sbb
sarl
pop
sub
lahf
popa
repnz
jg
daa
sbb
inc
mov
jl
pop
inc
push
fmuls
loop
inc
repz
push
jne
mov
and
cs
clc
in
fmull
in
sbb
cwtl
cli
ds
lock
pushl
loop
mov
jge
popf
test
sbb
cmp
stc
shl
dec
std
cmp
dec
mov
jecxz
out
jg
add
pop
mov
pop
daa
lahf
popa
mov
jns
lcall
js
int
data16
aas
add
sub
lock
mov
mov
pop
or
cmp
mov
lods
insl
fildl
jne
xchg
push
add
gs
pushl
ja
pop
imul
and
test
rcl
or
movsb
out
mov
xchg
movsl
outsb
mov
and
stos
xchg
and
mov
scas
das
test
cltd
cmc
push
fisttpl
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
mov
jo
jge
jo
mov
push
sarl
pop
loopne
pop
fisttpl
imul
out
inc
ljmp
push
inc
xchg
les
ss
add
repnz
nop
cli
pop
add
icebp
inc
sub
ficoml
daa
sub
fisttps
pop
bound
ss
fsub
cmpsl
jno
sbb
adc
add
ds
shll
outsl
test
mov
rorl
xchg
mov
and
sbb
xor
or
scas
inc
add
jp
sub
mov
pop
pop
jb
sub
sti
cmpsb
dec
add
int
push
data16
ljmp
xchg
jl
adc
sbb
or
sub
repnz
cwtl
call
aad
mov
in
adc
flds
xchg
sub
je
add
notl
pop
bound
or
test
cs
cmpb
sbb
adc
testl
cmp
dec
in
dec
jg
cmpsb
push
pop
sub
scas
push
cmp
lcall
fsubrl
out
jno
pop
decl
dec
loope
and
push
gs
xchg
cmp
pop
lods
ds
mov
jge
and
push
pusha
push
xor
sbb
mov
jnp
jns
stc
popf
fpatan
in
mov
roll
jmp
mov
nop
push
sub
and
push
sahf
adc
push
or
jb
push
movsb
xor
xchg
sbb
je
jmp
mov
hlt
sub
ret
push
lret
sub
testl
repz
je
dec
mov
bsr
dec
xchg
sub
outsl
popf
push
or
aam
inc
pop
roll
fdivrl
push
cmp
inc
add
adc
jo
push
push
push
inc
push
cmpsb
lea
add
jge
cmp
mulb
adc
test
mov
jp
xchg
mov
aaa
imul
je
cli
mov
mov
push
popa
repz
lods
lcall
dec
mov
dec
jne
cmpsl
jne
rorl
push
lea
out
pop
adc
mov
lock
push
pop
or
mov
push
ret
out
les
xor
das
and
lods
insb
into
dec
test
sub
lahf
dec
pop
int3
dec
jl
jb
ljmp
cld
pop
lcall
fsub
ja
push
and
jno
lock
cmpsl
cmpsb
pop
mov
xchg
clc
in
add
xchg
mov
popf
addr16
loop
mov
rcrl
stos
push
mov
loope
sub
xor
test
iret
cmp
xchg
inc
popf
inc
lahf
das
loop
test
push
je
stos
out
and
xchg
rcl
repnz
mov
push
jl
call
test
push
mov
push
push
or
divl
movsl
fdivr
in
decb
sahf
ljmp
ds
dec
mov
stos
cmp
divb
add
lock
loope
mov
push
mov
or
sub
insb
fisttpll
jnp
loopne
stos
adc
sbb
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
inc
cmp
jo
jge
jo
test
popf
and
xor
jg
lds
lcall
push
loopne
mov
mov
or
mov
rolb
add
cmc
lahf
inc
xchg
pop
push
sarb
mov
push
mov
int
pop
sarl
push
jp
cld
lret
gs
xchg
pop
fstps
fwait
xor
int
xchg
wbinvd
pop
or
fcomi
sbb
add
movsb
lcall
cmp
ja
and
cmpsl
jb
add
push
and
inc
lock
insl
sbb
mov
sub
in
rcrb
aaa
pushf
add
into
cmp
aad
add
scas
mov
test
push
loopne
cs
aad
fdivrl
loope
xchg
pop
dec
sbb
sbb
bound
inc
dec
pop
sbbb
cmp
cmp
mov
cmp
mov
adc
jno
cmp
adc
insb
mov
or
dec
mov
lcall
xchg
mov
ret
aas
cmp
adc
mov
cld
addr16
bound
and
test
aam
adc
jns
xchg
fadds
jl
sub
test
inc
xor
outsl
dec
xlat
lea
jl
or
or
mov
fildll
inc
jl
mov
dec
mov
push
dec
int
pushl
aaa
into
out
out
mov
push
pop
pop
push
push
mov
xchg
mov
leave
lret
loop
mov
test
mov
sbb
adc
aam
sub
cwtl
sub
push
inc
mov
dec
ds
clc
pushf
xor
enter
jp
mov
movb
pop
imul
aaa
out
and
xor
pushf
enter
sub
pop
inc
jge
stc
js
repz
fdivr
mov
loope
jae
ret
pop
mov
cmp
movsl
fists
imul
mov
arpl
setne
jecxz
and
or
test
xchg
dec
and
into
or
ja
scas
jnp
clts
mov
pusha
push
arpl
and
out
xchg
imul
mov
in
movsl
mov
mov
xor
aas
test
mov
mov
dec
in
iret
int3
cmpsb
jp
inc
rcl
imul
cld
into
pop
pushf
int
rcrl
clc
lea
addb
fcmovnu
ds
xor
xor
ja
clc
ds
sahf
cld
cmp
test
fwait
gs
cld
jg
test
sbb
cmp
or
xchg
test
push
push
and
test
pop
cld
das
pop
add
jae
fsts
sub
leave
cmp
mov
fsubl
ret
sarl
mov
scas
and
icebp
jge
push
outsl
orb
or
test
push
cmpsl
popa
addb
sub
mov
rorl
stc
mov
or
lock
sbb
push
dec
mov
stos
jbe
xor
ljmp
cmc
xchg
or
add
lret
pop
xchg
add
mov
outsb
push
push
movsl
lret
pop
sbb
leave
test
sbb
imul
mov
lock
popa
push
lcall
jge
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
cmp
lahf
jge
jo
jno
dec
or
call
sti
xchg
pop
outsb
imul
popf
in
hlt
and
jg
pop
jbe
rolb
clc
xchg
leave
inc
test
dec
inc
out
xor
add
xchg
or
popa
adc
pop
push
xor
sbb
shll
adcl
jae
lock
pop
out
mov
inc
pop
dec
jns
pop
ja
add
dec
sbb
test
cltd
inc
lret
in
mov
fwait
hlt
cld
movsb
enter
mov
idivb
mov
mov
popf
rorl
outsb
and
cmp
inc
push
inc
xchg
cmpsl
shll
loope
inc
mov
sub
clc
aas
sub
into
and
les
mov
pop
push
pop
ljmp
mov
loopne
xchg
insb
xchg
mov
xchg
popf
das
int
push
cmp
xor
into
push
int3
lock
and
clc
jno
jecxz
jmp
xor
insb
mov
pop
aas
cwtl
and
dec
sti
or
or
aad
xchg
pop
push
inc
outsb
inc
enter
and
or
std
xor
js
loopne
out
mov
sub
cwtl
cmp
inc
nop
enter
stos
mov
jns
inc
mov
loope
push
push
dec
gs
or
xor
mov
add
je
jne
fs
push
inc
xchg
pop
mov
movsl
mov
in
dec
roll
iret
shrb
iret
xchg
mov
pop
mov
xchg
dec
lret
mov
test
mov
inc
fnop
mov
push
enter
sahf
mov
leave
test
aas
push
adc
mov
out
xor
mov
bound
pop
fwait
xlat
iret
subl
push
jns,pt
mov
mov
dec
subl
pop
jbe
pushf
jg
push
add
push
arpl
cmp
lahf
outsb
push
or
imul
sub
lock
ss
aaa
leave
ret
mov
test
out
pop
cmp
arpl
add
mov
sub
mov
cli
divl
jae
scas
mov
pop
add
shlb
out
pop
and
add
xchg
xchg
and
insb
fstpl
jno
aad
mov
mov
mov
cmp
mov
xor
mov
jns
fsubrs
sub
jno
push
jle
dec
cmpsl
loope
sub
mov
pushf
fnsave
xchg
sub
dec
fdivrl
mov
or
decl
mov
sub
lret
divl
cmp
mov
pusha
call
cmp
in
std
mov
fdivl
imul
shl
jbe
les
ss
push
lods
pop
mov
scas
xchg
ljmp
repz
cmp
das
inc
outsb
sti
jno
pop
adc
arpl
aas
mov
jmp
fidivs
sub
push
jbe
push
cmp
adc
sahf
xor
adc
mov
dec
jnp
or
stc
fnstsw
sbb
mov
insb
fsts
js
xchg
out
pop
sub
jmp
lock
pop
test
push
sbb
stos
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
gs
jmp
lahf
jge
jo
fsubrl
lods
push
mov
push
jnp
imul
pop
insl
push
mov
ds
in
xchg
mov
movsl
std
cmpsl
jl
sbb
adcb
hlt
in
pop
rclb
bound
and
mulb
cli
lahf
sbb
loope
pushf
xlat
clc
inc
jmp
addb
iret
outsl
ss
inc
dec
arpl
mov
lods
popf
cmc
orb
push
jecxz
jns
shrl
test
mov
cmp
arpl
and
mov
test
push
sbb
mov
push
aad
mov
andb
addr16
sbbb
cmp
inc
xchg
jmp
inc
cmp
add
sub
cmp
iret
cmp
add
jge
inc
ret
mov
lock
test
xor
jae
ret
or
push
sub
cmpb
jae
xor
sahf
pop
clc
in
mov
icebp
push
adc
and
bound
aas
js
xor
pop
es
push
hlt
jecxz
adc
das
mov
push
xchg
mov
leave
aad
pop
lcall
js
mov
cmp
mov
jne
cmp
pop
in
add
mov
mov
std
je
dec
int3
pop
ljmp
lret
icebp
add
mov
pusha
mov
or
dec
pop
xchg
push
out
sub
adc
sub
je
jmp
scas
sahf
adc
fs
in
int3
jecxz
aad
aas
mov
sbbb
xchg
call
int3
adc
icebp
arpl
sahf
xchg
cmc
jle
pop
movsl
mov
jb
xor
fwait
add
loop
lods
push
aas
cmp
int3
or
push
mov
nop
mov
addr16
mov
rcr
mov
jbe
loope
mov
fwait
or
fs
mov
or
stc
push
pop
xor
shl
jns
ficomps
mov
cmp
dec
ljmp
or
outsb
orl
sub
adc
sti
pop
lahf
add
sahf
lea
testl
adc
add
push
inc
or
fcmovnu
xchg
arpl
xchg
jae
or
test
aam
xchg
add
pushf
mov
divb
pop
push
fwait
movsb
mov
cmp
mov
cmp
int
std
test
and
test
and
inc
inc
cmc
out
test
mov
rolb
sbbb
or
mov
js
cmp
push
add
add
fnstenv
dec
in
and
xchg
pop
sbb
arpl
neg
lahf
mov
sub
ret
mov
sbb
pop
leave
xchg
and
pop
dec
mov
test
insb
repz
push
cmc
jg
in
push
lods
imul
test
sti
aad
in
pusha
dec
mov
xchg
jecxz
sbb
jg
xor
popa
adc
or
cld
pop
les
mov
insb
mov
fiaddl
int3
loop
push
je
cmpsb
or
into
or
aad
out
or
sub
mov
inc
lret
std
push
cmp
lock
sub
xchg
mov
ret
insl
out
xchg
fmulp
mov
into
lock
cmc
fs
aad
sbb
out
dec
popf
jno
xchg
add
mov
neg
movsl
sub
dec
incb
cmpsl
and
xchg
xchg
pop
mov
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
subl
or
jo
aaa
adc
aaa
push
popa
xchg
mov
pop
mov
out
sub
dec
mov
test
outsl
in
mov
inc
clc
enter
shl
xchg
ljmp
mov
adc
mov
mov
mov
imulb
std
xor
repz
mov
dec
push
loope
add
addb
lahf
int3
ds
inc
mov
jbe
xor
in
sbb
lret
xlat
shll
mov
daa
fs
push
xchg
inc
mov
xchg
inc
loop
push
dec
fsubs
out
sahf
cmp
mov
pop
inc
pop
pop
or
push
loope
pop
hlt
fs
inc
mov
in
mov
cwtl
lds
cmp
jns
das
sar
int3
adc
jo
aad
inc
scas
int3
mov
push
jg
ljmp
aad
outsb
jecxz
stos
stc
jo
shl
and
enter
push
addr16
inc
call
lds
dec
into
loopne
fldt
nop
arpl
filds
adc
mov
lds
mov
inc
loope
aas
loopne
mov
js
lcall
add
and
adc
aaa
or
mov
and
pop
cmp
jecxz
and
adc
cmpsb
xor
ss
mov
js
xchg
int3
lcall
mov
sbb
and
test
aas
je
cld
and
popa
movsb
imul
sbb
xor
mov
stos
mov
adc
ja
push
fcmovne
call
mov
adc
insl
lcall
cld
lods
push
mov
fcmovnb
cwtl
roll
pop
xor
popl
clc
arpl
int3
push
test
cmpsl
rorl
ret
cmc
mov
jl
xor
hlt
lods
inc
movsl
jge
lahf
psubb
popf
dec
gs
and
mov
or
fisttps
dec
inc
pop
aad
add
out
pusha
test
pop
ret
call
adc
mov
mov
pushf
sub
movsb
or
pop
cmpsb
xchg
mov
imul
ret
sub
jecxz
or
adc
loop
push
aas
pop
rcrb
lret
subb
mov
mov
rorb
push
jg
add
dec
and
fisttpll
out
xchg
nop
sub
aas
lcall
or
xor
jo
sub
mov
pop
movsl
inc
rcrb
mulb
and
sarl
push
add
inc
dec
in
mov
test
fs
adc
mov
lcall
jne,pt
xor
inc
rolb
insl
inc
das
arpl
mov
pop
push
and
jae
mov
inc
mov
ds
fisttpll
inc
jnp
rclb
cli
test
xchg
mov
out
mov
xchg
aad
jle
push
lret
sub
or
rclb
loope
push
enter
mov
mov
dec
sub
es
sbb
stos
xor
sbb
iret
pop
pop
adc
mov
push
adc
fwait
rcr
pushf
sahf
inc
in
js
push
add
fdivs
ljmp
jb
dec
lea
loopne
push
call
push
xor
bound
daa
xor
mov
lds
adc
and
ror
jmp
hlt
pop
and
int3
sti
sbb
int
js
pop
movsl
push
test
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
call
shrl
jge
jo
cmpsb
cmp
sti
or
push
into
inc
add
fldcw
add
idivb
orb
arpl
sti
xor
cltd
mov
iret
fwait
sub
and
test
lahf
pop
outsb
aad
xchg
or
xor
test
pushf
imul
je
imull
sub
and
cmp
pop
arpl
loop
push
xor
outsl
pop
cmp
call
nop
xchg
add
outsb
dec
mov
mov
outsl
enter
hlt
mov
gs
dec
or
pop
sbbl
inc
lods
cld
notb
loope
jns
pop
mov
and
pop
ja
and
inc
sahf
ret
icebp
shrl
int
into
mov
sbbl
lods
test
pop
addr16
pop
gs
dec
sub
fwait
lret
loop
ljmp
adc
pop
jmp
into
aas
jg
stos
cs
jl
out
jmp
dec
movsb
xor
adc
dec
out
fs
add
pop
add
pop
add
scas
cwtl
jne
push
or
lahf
shll
outsb
or
loope
cmp
sub
jo
iret
fdivrl
out
cwtl
outsb
into
lods
cmp
sub
test
insb
xor
sahf
adc
pop
push
repnz
lds
dec
out
cmp
mov
movl
xchg
int3
dec
push
sahf
bound
mov
mov
jbe
and
sahf
shll
popa
lcall
int
mov
leave
cs
adc
inc
in
rcrb
or
pop
movsb
pusha
dec
push
jl
sbb
dec
adc
push
mov
jle
nop
test
inc
inc
in
js
popa
fisubs
clc
test
mov
push
inc
mov
mov
nop
cltd
into
sbb
fistpll
jnp
and
out
xlat
fimuls
and
adc
adc
loopne
mov
mov
data16
rcll
jnp
sbb
adc
loop
lds
test
pusha
pop
sub
mov
sub
cltd
mov
cmp
iret
stos
xor
push
add
or
lcall
xor
pusha
out
in
ss
ret
mov
hlt
add
jnp
ror
repnz
insb
ja
rcrl
addl
pop
out
int3
mov
xor
and
sub
mov
push
in
or
mov
fdiv
mov
xchg
test
leave
xlat
aad
inc
dec
add
fdivrs
aaa
pop
mov
icebp
ret
cmp
outsb
imul
stos
enter
addb
pop
or
cs
mov
sahf
lea
movsl
aas
imul
inc
icebp
push
fmull
aas
ret
and
xor
lods
pop
adc
clc
mov
push
cmpsb
fidivl
sbb
aad
int3
gs
or
mov
jnp
push
cmc
das
sbb
xor
jo
mov
dec
mov
scas
movsb
fwait
mov
out
aaa
nop
fidivrs
pcmpeqb
inc
sets
xor
push
and
test
xchg
shll
daa
ret
xor
dec
xchg
and
fisttps
loope
setbe
dec
xor
sbb
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
es
leave
cltd
jo
lahf
jge
jo
vpcmpeqw
addr16
push
pop
xcrypt-ctr
cmpsl
sbb
fmull
sub
test
sub
jmp
jne
out
shl
sbb
xchg
mov
mov
divb
je
jg
adc
mov
xor
dec
sahf
cli
fst
sub
in
mov
inc
mov
inc
fs
mov
inc
xchg
push
push
xchg
jecxz
mov
dec
dec
pop
dec
mov
stos
aaa
lods
daa
or
add
in
mov
push
pop
xchg
adc
repnz
adc
push
lcall
test
vmulpd
mov
push
scas
mov
fisubrl
ficompl
dec
adc
dec
fildll
in
sti
jl
into
je
mov
out
fs
adc
mov
pusha
shlb
jns
fucomi
mov
xchg
push
jne
jb
add
stc
add
cmp
pusha
push
push
mov
ljmp
comiss
fnstcw
shlb
jl,pn
xchg
imul
inc
out
jecxz
ret
and
enter
fildll
test
test
fwait
xor
cmp
scas
dec
int
and
mov
xchg
test
ret
jmp
push
pmaxsw
jno
out
ss
fdiv
and
cltd
adc
movsb
lea
rcrb
xchg
lret
push
insl
imul
and
mov
jb
xchg
cli
je
xchg
in
inc
sbb
cltd
mov
addr16
xor
and
xchg
adc
fcompl
lock
mov
sarb
lret
pusha
outsb
outsl
pop
inc
adc
mov
xchg
das
pop
enter
mov
mov
cs
pop
mov
shrb
pop
xchg
inc
xchg
loopne
aam
push
or
in
dec
jg
jle
clc
std
xchg
push
movsb
sbb
stc
loopne
aas
xorl
cmp
pop
ja
iret
cmp
xchg
xor
in
ror
call
nop
test
mov
clc
push
jmp
or
arpl
jns
into
ficoms
out
dec
aaa
lret
xchg
mov
rolb
mov
jae
adc
lock
dec
pop
xchg
mov
mov
jl
mov
scas
jecxz
sub
push
into
sub
jle
popf
shlb
mov
xchg
call
push
adc
xlat
in
mov
inc
mov
adc
mov
push
inc
popa
test
xor
cmpsb
inc
adc
js
or
mov
and
xchg
add
lea
test
push
xchg
call
push
fadd
arpl
and
inc
mov
out
test
sbb
aaa
enter
pop
sbb
inc
jmp
and
mov
jg
xor
popf
jb
dec
and
add
in
sbb
cmpsl
xchg
cs
push
iret
dec
push
cmp
xchg
pushf
testb
insl
xor
mov
mov
cmp
std
inc
push
hlt
sub
push
xor
sbb
mov
or
arpl
ja
sub
inc
inc
pop
jne
sub
fwait
or
imul
add
inc
xchg
add
fsubr
mov
mov
inc
fnstsw
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
add
push
jg
jo
sub
cmp
pop
jmp
jb
test
ds
andb
push
mov
mov
inc
out
or
test
or
mov
mov
mov
hlt
addb
scas
into
dec
adc
data16
mov
rcrb
repz
dec
or
out
in
popa
lea
call
adc
clc
fmuls
aaa
cmpsb
das
push
xor
rcrl
mov
movl
sbb
out
inc
loopne
inc
push
leave
ret
dec
cwtl
sub
or
ss
or
loopne
and
jns
fs
imull
je
shrl
outsl
push
xchg
lock
pusha
push
or
xorps
push
xchg
inc
dec
aam
fstpl
and
in
subl
jno
jb
mov
xor
in
aas
lods
pusha
inc
mov
push
dec
insl
pusha
lret
or
cmp
push
pop
addr16
jb
nop
aad
scas
shl
dec
test
addr16
insl
popf
jnp
push
sub
mov
adc
sbb
xchg
inc
dec
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
pop
cli
sub
cmp
jo
bound
xchg
mov
scas
rolb
pop
pop
cmp
dec
xchg
cmp
cmp
adcl
imul
popf
and
sub
das
and
adc
pop
ljmp
pop
pop
xchg
pop
int
push
lahf
xor
lahf
inc
clc
jo
xor
cmpsb
xchg
xchg
daa
add
in
je
or
sahf
enter
adc
in
test
xchg
dec
sbb
pop
push
sbb
pop
ds
add
call
scas
aaa
push
adc
mov
sti
push
dec
dec
fwait
push
xchg
push
xchg
and
pop
shrb
sub
jns
push
dec
mov
cmpsl
xor
and
cmpxchg8b
sbb
imul
enter
ficoml
jmp
inc
and
das
clc
pop
jge
or
enter
pop
fsubrl
bound
add
cmc
leave
sub
ret
cmp
mov
fists
sub
dec
lahf
inc
sub
xchg
mov
jno
push
jnp
xchg
lods
addl
pop
gs
mov
aas
out
sbb
test
add
lea
mov
jmp
rorl
sbb
adc
mov
jo
ret
pop
lret
data16
push
fidivrs
movsl
and
pop
in
nop
cs
cmp
or
jae
stos
inc
add
mov
test
mov
pop
ficoml
sbb
es
lods
xor
mov
push
popf
jmp
fidivrs
cmc
orb
mov
mov
push
xchg
and
out
scas
xlat
repnz
fsts
arpl
push
xchg
mov
mov
push
mov
hlt
xchg
mov
frstor
std
mov
mov
mov
iret
lods
xor
daa
push
add
mov
dec
insl
aaa
das
in
repnz
sahf
mov
xor
sbb
stc
out
jge
jno
adcb
rcrb
lcall
and
lcall
mov
into
cmp
popw
dec
std
xor
or
repnz
xor
push
pushw
fstpt
loop
mov
insl
cwtl
adc
push
jns
jb
daa
es
sub
cmp
fsts
adc
mov
pop
jle
mov
ret
cli
cld
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
lret
jge
mov
ret
jg
jo
inc
pop
jb
loop
or
test
mov
inc
pop
in
push
jge
inc
sbb
push
scas
js
mov
stc
fmul
push
shrb
add
jae
rcr
mov
arpl
jmp
lcall
scas
jnp
ja
xor
pop
bound
push
fdiv
jp
test
cltd
xchg
lret
mov
imul
or
cmpsl
pop
or
add
mov
push
sub
jge
imulb
in
in
xchg
pop
cmp
jne
jno
push
test
inc
je
cmp
mov
icebp
and
pop
das
ds
xor
jl
push
inc
push
mov
cmpsl
jbe
inc
test
lahf
cli
inc
sub
jg
dec
pushw
shr
add
outsb
pop
push
hlt
mov
sbb
sub
scas
and
arpl
push
dec
mov
dec
jno
or
jno
xlat
mov
std
mov
add
xchg
hlt
adc
stc
lahf
scas
jno
imul
psadbw
pushf
lret
subl
jmp
push
mov
add
sbb
test
ljmp
scas
fistps
add
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
mov
mov
jo
leave
in
and
xchg
jecxz
sub
out
jb
insb
stos
rcrb
and
pop
pusha
in
test
mov
insl
or
mov
mov
mov
adc
sahf
mov
into
lcall
add
out
mov
xchg
mov
xchg
xor
gs
cli
sub
push
sub
xor
lahf
push
lret
jbe
inc
popf
call
xor
cld
add
pop
dec
sub
es
loope
jmp
es
push
pop
fsubs
push
lret
mov
in
and
adc
cmc
adc
dec
mov
cli
faddl
lret
loopne
sbb
das
call
enter
in
enter
push
jnp
cmp
push
shlb
inc
outsb
pop
mov
mov
and
cmpsb
ret
test
rclb
ret
lock
mov
pop
jle
push
dec
xchg
adc
mov
sbb
out
inc
incb
inc
pop
int
repnz
iret
cmpsl
arpl
mov
ficoms
aaa
mov
and
push
push
cld
inc
loope
pop
aam
sar
jae
mov
pop
jno
jbe
pop
xlat
inc
adc
cmp
out
mov
fildl
push
fxch
lahf
mulb
aad
outsb
iret
pop
inc
push
sahf
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
push
ret
scas
jo
ret
jg
jo
lea
mov
stos
in
in
sub
dec
sbb
pop
repnz
pushf
mov
arpl
pop
xchg
fsts
adc
pop
or
or
icebp
dec
mov
mov
inc
mov
mov
lock
shr
out
mov
sbb
jmp
fs
pop
iret
pop
inc
sub
pop
and
sbb
inc
sti
mov
cli
adc
daa
add
and
repnz
movsb
push
outsb
lds
test
scas
icebp
inc
ret
mov
lahf
cli
pop
outsl
sar
pop
aam
inc
enter
flds
xor
rcll
arpl
inc
mov
add
or
stos
negb
mov
xchg
pusha
loopne
cmp
pusha
dec
decl
add
adc
dec
pop
xor
fildll
jbe
imul
adc
cmp
andb
sarl
mov
jno
lods
lea
inc
dec
mov
push
mov
add
fcmovnb
adc
sbb
sub
dec
push
mov
repnz
mov
cmp
sub
add
rsqrtps
or
xor
add
cmpsb
movsl
lret
ret
jp
or
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
ss
sarl
jo
sbb
pop
popf
add
je
sbb
mov
ja
rcrl
xor
push
mov
ss
sub
insb
test
addr16
filds
inc
push
sahf
and
fdivr
xchg
mov
popf
enter
jge
sti
movsb
aaa
int3
pop
popa
mov
xchg
mov
shlb
dec
cmp
add
jne
lahf
test
fsubr
loop
push
les
push
push
ljmp
cltd
adc
jne
adc
ss
pop
insl
out
cmpsl
imul
aam
fldcw
and
xor
inc
jl
mov
lock
bound
gs
dec
imul
push
inc
mov
mov
xchg
jo
cmpsl
push
es
fwait
aam
cwtl
inc
fldcw
xchg
js
outsb
stc
outsb
xchg
mov
stos
mov
pop
add
test
cmpb
adc
xchg
xchg
cwtl
pop
int3
lret
inc
add
fisubrl
push
add
jae
icebp
ds
push
in
adc
daa
dec
dec
adcl
or
insb
jle
fidivrs
push
les
xchg
rol
fcmovnb
mov
mov
adc
mov
add
add
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
in
jge
or
jg
jo
repnz
push
xor
mov
dec
mov
xchg
loopne
xlat
lret
aam
sbb
or
stc
mov
insl
popa
in
aaa
lret
lahf
xor
jb
pop
sbb
scas
daa
addb
ja
orl
push
daa
outsb
cltd
popf
loopne
jmp
sbb
inc
sub
mov
jp
pop
data16
call
ja
aas
jae
jnp
ja
push
outsb
mov
lahf
ljmp
xor
vmwrite
fwait
sbb
jg
mov
movsl
imul
imul
push
lods
cwtl
xchg
enter
ret
fcmovnu
aaa
hlt
sbb
or
add
bound
pop
mov
add
es
fistps
lahf
faddl
dec
and
adc
sbb
mov
repz
fxch
jg
cmpsl
leave
push
repz
outsb
fs
inc
cltd
ret
test
add
pop
push
das
inc
pop
mov
xlat
or
int3
test
push
int3
push
cs
mov
inc
adc
mov
pop
bound
stc
in
stos
xor
mov
stos
aad
inc
adc
pop
push
mov
stos
outsb
lahf
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
mov
js
shrb
jo
or
pusha
mov
sarl
add
pop
inc
sub
mov
cmp
sbb
dec
sub
lret
stos
mov
mov
cmp
mov
lahf
imul
js
jbe
xor
sbb
gs
jns
imul
testl
popf
scas
xchg
nop
mov
push
in
or
pop
stc
stc
mov
inc
inc
flds
pop
mov
pusha
sub
inc
shrl
dec
xor
int
sbb
jecxz
lds
xlat
mov
cmp
lret
inc
jo
push
lds
loop
scas
jle
jne
movsb
push
in
nop
popa
fs
imul
mov
lock
insb
aas
inc
leave
fstl
xchg
cmp
divb
mov
aam
sti
test
dec
hlt
aad
dec
pusha
add
push
pop
icebp
xchg
sbb
scas
xchg
mov
jg
mov
push
fstpt
in
push
hlt
sub
or
aas
aas
orl
orl
and
int3
mov
pop
push
mov
xlat
sub
pop
push
push
pop
dec
bswap
bound
fdivrl
repz
or
add
push
stos
rcrb
fstpl
rorb
scas
cmc
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
stos
jo
ret
jg
jo
testl
sub
inc
xchg
push
and
mov
and
pop
mov
xchg
xchg
pop
imul
mov
in
int
ds
out
mov
mov
inc
xchg
sti
es
imul
je
ret
daa
or
cmp
add
bound
cmp
push
mov
xchg
arpl
pop
add
scas
inc
or
jno
push
pop
out
loop
lahf
movsb
into
mov
inc
push
add
or
pop
cmp
mov
pop
mov
mov
mov
sbb
cmpsb
mov
xchg
push
sahf
mov
inc
mov
or
nop
or
inc
jge
push
stc
cmp
mov
jge
mov
sub
mov
mov
cmp
faddl
inc
mov
cs
mov
jnp
scas
xor
jnp
cmpsb
push
push
adcb
stos
jbe
out
inc
jmp
add
fcompl
jl
add
jnp
sbb
mov
int
cmpsl
inc
add
fwait
test
inc
enter
loope
pop
mov
fsubp
or
call
add
add
pusha
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
sar
arpl
in
jbe
jo
ret
jg
jo
popa
ds
sbb
add
lret
add
fisubs
push
divb
outsb
out
mov
push
adc
mov
in
stos
add
fadds
inc
add
lods
push
mov
imul
out
outsb
popf
pop
pop
out
jg
mov
xor
dec
mov
xor
xchg
ss
jno
push
adc
shrl
sub
sahf
mov
push
imul
inc
push
push
mov
xor
mov
imul
ljmp
rcll
fimuls
push
mov
ja
inc
cmp
in
repnz
cmc
or
inc
mov
xlat
in
fiaddl
xor
and
pop
loopne
or
dec
mov
sbb
mov
out
inc
iret
sub
mov
push
adc
mov
jae
movsl
push
sbb
shl
and
sbb
addb
dec
leave
push
jmp
icebp
or
adc
push
andb
bt
inc
out
jmp
mov
and
aas
enter
test
mull
lods
xor
xlat
nop
and
xchg
lcall
lds
sbb
pop
xor
inc
clc
jmp
inc
gs
icebp
imul
inc
xor
inc
cmp
jo
fs
mov
push
lods
jle
arpl
nop
push
cmp
in
add
pop
mov
xchg
xchg
in
bound
xlat
adc
fldt
mov
adc
std
leave
rolb
mov
cltd
icebp
pop
jmp
sarb
jl
scas
mov
xchg
movsl
andb
bnd
xchg
sub
bound
mov
popa
test
ljmp
mov
sub
stc
adcw
mov
movsl
scas
in
jnp
jl
cld
mov
imulb
jp
pop
leave
cmp
hlt
and
mov
and
push
hlt
enter
mov
mov
sbb
in
js
or
fs
jecxz
sahf
mov
repz
les
xchg
and
add
aaa
imulb
movsb
jge
pop
mov
sub
rcll
aas
clc
ljmp
pop
cmp
mov
lret
stos
mov
pop
das
into
daa
aas
xor
js
xor
loop
shrl
and
xlat
add
mov
mov
jecxz
add
int
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
or
ljmp
jg
jo
mov
shrb
sti
mov
pusha
rsm
insl
add
pop
pushf
jnp
nop
lcall
negb
jle
or
es
mov
cmp
enter
add
mov
test
das
mov
pop
mov
ret
mov
adc
ficoms
loop
xchg
in
fdivs
or
int3
rorl
inc
ds
testl
xchg
es
cmp
xor
and
or
lcall
push
jle
xlat
push
jecxz
cld
fbld
sub
out
mov
push
push
sbb
sbb
push
lds
stos
add
jno
or
sbb
sbb
or
inc
orb
push
pop
rcrl
jbe
negl
xor
movsb
aaa
ret
aam
fimuls
add
jp
mov
and
js
ret
mov
ja
retw
pop
nop
sub
js
je
std
hlt
dec
push
cwtl
jle
push
imul
mov
push
mov
negl
mov
lahf
sarb
fadds
mov
mov
cltd
push
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
mov
jo
mov
test
pop
sub
fadd
add
stos
sbb
xor
jae
push
repz
xor
add
mov
xchg
loop
jge
xchg
adc
stos
xor
pop
scas
jbe
fcomp
pop
stc
xor
ds
sbb
push
addr16
push
orl
movsl
aaa
adc
sub
or
lock
push
out
adc
addr16
lods
pusha
divl
mov
lods
xchg
and
add
mov
jo
pusha
or
lea
jecxz
fisubs
dec
push
cmpb
and
call
or
pop
in
jne
dec
adc
cmp
xor
jo
pop
adc
cmp
int3
mov
push
fdivrl
push
lret
adc
sub
cld
mov
dec
stos
jno
push
mov
dec
mov
cmp
stc
ja
push
pop
lods
sbb
adc
addr16
push
mov
xchg
cmc
stos
hlt
adc
dec
cmc
sbb
arpl
call
stos
lret
jbe
mov
mov
insl
mov
mov
jecxz
ret
cmpl
xchg
das
fs
fs
arpl
sub
mov
dec
xchg
add
jle
in
cld
fadds
sbb
aad
ja
nop
push
jecxz
lods
jns
cmp
and
adc
pop
cltd
jns
xor
and
icebp
mov
or
data16
pop
shrb
imul
test
fmuls
dec
cmp
aaa
test
mov
aas
mov
dec
movsl
in
hlt
movswl
shrb
push
inc
loopne
fisttpll
and
push
push
xchg
bound
pop
rcl
push
xlat
jp
pop
xchg
shr
dec
in
cmpsl
pusha
mov
lcall
in
ficomps
imul
and
push
dec
imul
nop
imul
insb
and
pop
arpl
pop
mov
mov
test
lock
mov
leave
push
rorb
lcall
lock
mov
fsubs
lods
pop
fucomip
fnstsw
or
enter
enter
cmovnp
dec
sti
and
imul
fwait
insb
mov
or
pcmpgtd
mov
jl
adc
sbb
repz
in
sub
adc
and
mov
mov
dec
inc
jb
out
rcrl
sub
fmuls
and
int3
ss
inc
fsubs
mov
inc
push
movsl
lea
mov
add
adc
test
mov
xlat
aas
sahf
mov
ja
xor
stos
fsubr
xor
adc
push
dec
cmp
movsl
mov
pop
pop
push
leave
mov
mov
xchg
bound
inc
in
sarl
jae
mov
mov
in
mov
xchg
arpl
aad
and
mov
and
stos
dec
fcmovnbe
adc
js
rol
lods
imul
cmp
repnz
mov
loope
xchg
leave
dec
sbb
loopne
jmp
inc
iret
repz
jae
mov
mov
push
pop
dec
lods
inc
aam
add
ja
imul
mov
cltd
push
negl
jmp
mov
cli
xor
testb
sahf
jmp
xorb
jo
lcall
jnp
movsl
leave
popl
adc
int3
pop
ss
mov
dec
xor
test
dec
inc
add
and
sub
dec
je
stos
xchg
fs
das
mov
push
ret
sub
mov
icebp
xchg
lcall
cmp
les
xchg
jl
decl
lds
fldl
aam
xchg
adc
lock
mov
jmp
sbb
and
sbb
ljmp
fs
pop
test
or
mov
lds
in
inc
mov
leave
push
inc
into
nop
add
pop
movsb
sbb
mov
leave
bound
aad
sbb
enter
pop
sub
cmp
std
jno
pop
pop
jecxz
cmp
or
gs
push
les
ret
cmp
mov
loope
cmpsl
popf
cmp
mov
inc
stos
adc
push
jns
dec
cld
pop
movsb
je
push
std
into
jg
add
addb
add
ja
pop
mov
rcll
repz
shl
mov
imul
cltd
repnz
push
jmp
xor
jno
jo
sub
or
mov
movsb
jb
scas
imul
jnp
mov
add
outsl
cli
mov
and
xchg
or
push
hlt
pop
aad
xchg
rolb
push
pop
nop
sbb
xor
fsts
call
dec
outsb
dec
sbb
adc
jns
add
lds
and
mov
stc
jecxz
and
test
or
cmp
and
and
outsb
adc
push
push
cmp
or
decl
push
popa
test
movsl
dec
push
push
push
shll
fstl
dec
push
or
xchg
xchg
push
jb
mov
jnp
pop
jecxz
mov
mov
add
fwait
mov
sbb
shrb
pushf
mov
loope
jmp
mov
mulps
loopne
push
mov
xor
iret
jle
adc
jb
mov
test
push
lret
loope
les
xlat
into
or
bound
lods
pop
repz
arpl
adc
lret
mov
sub
test
test
jb
mov
pop
push
es
cmc
sbb
mov
push
je
js
push
fcomps
fsub
test
rcrb
shl
push
jno
leave
mov
cmp
lods
cmp
pop
xchg
add
arpl
adc
enter
test
pushf
mov
jg
scas
out
pusha
xchg
mov
sub
sbb
mov
xor
rorb
push
mov
lcall
repz
aam
mov
add
pop
cmpsl
cmp
fisubs
je
mov
bound
xchg
jmp
adc
dec
aam
jno
stos
loop
or
cs
mov
stos
shll
jl
jg
aas
sub
mov
xlat
push
int3
inc
jbe
pop
push
popa
or
jecxz
test
jmp
and
lds
or
sub
jmp
push
adc
cmp
rclb
in
cwtl
sahf
fs
aam
push
add
push
and
push
mov
cs
jmp
sub
jbe
mov
sbb
dec
ss
inc
cld
xor
or
loopne
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
jp
je
xor
jge
jo
popa
jmp
mov
mov
jo
pop
jae
in
mov
ds
mov
movsl
stc
mov
adc
xchg
add
pop
in
jp
mov
mov
sub
xchg
pusha
les
sub
jp
cmp
xchg
ret
sbb
mov
and
cltd
mov
cmp
adc
pop
imul
mov
jo
push
packsswb
mov
fadds
mov
mov
aaa
insb
xor
dec
test
std
add
sub
ds
mov
sub
mov
jl
sub
bound
in
or
xchg
loope
sub
dec
pop
mov
mov
and
popa
xlat
push
pop
push
cmp
push
and
popf
xlat
lea
cmp
cli
or
call
jo
imul
ret
ror
mov
fistps
jl
mov
jae
add
hlt
in
fists
and
cmp
push
sub
popa
push
fadds
outsb
cmp
stc
pop
lahf
dec
jae
mov
dec
mov
roll
gs
out
aam
int3
sbb
in
jge
jno
inc
or
shll
mov
in
and
test
jae
test
mov
lahf
jno
repnz
inc
fnstenv
fwait
fisttpll
mov
fwait
loop
into
xor
lahf
insl
loopne
sub
fisttps
dec
imul
push
lods
pop
addb
lret
xchg
movsb
fstpt
pop
cmp
jmp
ror
jae
xor
jbe
loop
in
adcb
fnstsw
pushf
nop
nop
imul
cmp
fwait
adc
fnstsw
out
into
test
inc
pop
cmp
add
movsl
shrb
xor
gs
cmp
xchg
xlat
mov
test
jle
daa
or
push
mov
sub
sbb
push
push
push
mov
test
xchg
jg
aam
leave
enter
add
fdivrs
jle
enter
fdivrp
sahf
daa
hlt
sub
or
and
and
outsb
stc
inc
imul
mov
pop
sahf
cmp
sub
dec
pop
push
xchg
lods
test
pop
sbb
push
xchg
add
and
clc
cli
test
aam
push
jle
or
cmpsl
jae
mov
xor
mov
adc
addr16
sbb
lcall
hlt
shlb
xchg
and
mov
aas
aad
aad
xchg
stos
pusha
sbb
cld
ljmp
mov
out
xor
cmp
jae
inc
scas
ret
adc
lods
lret
int
adcl
loope
pop
mov
scas
scas
fsubs
inc
fiaddl
es
enter
sub
lds
sub
rolb
xor
test
lods
xlat
jecxz
or
insb
mov
js
inc
jmp
and
and
leave
adc
out
inc
mov
cmpsb
movsl
imul
sarb
call
bound
xlat
mov
xor
or
mov
fnsave
rcrl
test
test
hlt
and
test
test
ljmp
mov
mov
mov
std
and
adc
and
add
test
inc
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
sub
out
mov
pop
adc
or
mov
lods
xor
sub
sahf
pop
sti
aad
aad
shlb
push
mov
ret
ret
rolb
xchg
std
xchg
pop
cmp
lret
pop
push
sahf
pop
jne
jle
cmp
mov
rorb
mov
int
adcl
dec
outsb
inc
dec
insl
sub
sub
pushf
or
xchg
inc
or
gs
pop
clc
leave
roll
pop
xor
test
xchg
mov
fdivrl
pop
or
jns
repnz
popf
pop
out
stos
out
mov
adc
std
repz
mov
inc
data16
lods
aad
jmp
mov
loop
cmp
fsubl
and
sbb
inc
movsl
loop
int
aad
xorb
addr16
sub
cld
imul
into
mov
rorl
inc
roll
aam
xchg
mov
mov
jb
add
xchg
test
and
rcl
mov
jl
jbe
sbb
sbb
pop
mov
mull
sub
aam
sub
xor
repnz
cmp
fdivl
mov
lahf
sbb
loopne
cs
dec
ja
mov
adc
inc
push
jecxz
and
jne
in
fnstcw
pop
lods
sahf
lock
lahf
inc
mov
rorb
jbe
inc
cmpsb
int3
pop
pop
jnp
inc
ja
iret
and
lds
bound
fisubrl
aas
xor
loope
and
cltd
imul
and
and
shll
xchg
xor
inc
fistps
push
pop
and
add
in
rcrl
xchg
xchg
je
ja
negb
imul
stc
loopne
lds
rcrb
push
cmp
incb
jmp
in
int
out
inc
sub
jmp
std
push
stos
sbb
lret
in
xchg
inc
cwtl
dec
xchg
mov
arpl
push
push
fimull
pop
sub
hlt
adc
mov
mov
ljmp
lret
mov
in
sbb
iret
stos
sbb
das
mov
leave
addr16
push
adc
jp
in
rcrb
pop
icebp
add
mov
pop
sub
dec
mov
loop
inc
cmp
mov
dec
outsb
cmpsb
mov
xchg
cmp
cmp
hlt
ret
fidivs
rorl
jns
rcr
jmp
rcr
inc
rcl
mov
leave
das
cmp
fisubrl
add
insl
mov
adc
mov
cmp
imul
inc
mov
adc
xchg
and
sub
repnz
fs
bound
push
sbb
push
jecxz
inc
rclb
popl
push
pop
jecxz
cmc
mov
jp
push
pop
shrl
inc
ror
sub
icebp
adc
push
add
push
sub
adc
pop
jmp
adc
pop
lret
stc
fwait
ret
mov
dec
sub
push
fisttpll
sub
mov
arpl
pop
in
jnp
push
push
push
cs
movsb
cmp
pushf
mov
mov
sbb
mov
add
jmp
outsl
mov
or
imul
inc
mov
xor
jge
jo
jge
dec
cmp
adc
adc
popf
or
xor
mov
aad
adc
push
xor
mov
xor
push
or
out
jecxz
push
inc
fstps
add
faddp
push
mov
cmp
pop
das
and
adc
cmp
inc
xor
nop
jmp
adc
fadd
or
repnz
rcll
scas
out
jb
mov
shrl
jnp
test
add
lock
fldt
je
dec
arpl
adc
dec
les
fildll
and
sarl
rcr
xor
pop
dec
aam
sbb
stos
xchg
dec
sub
sti
inc
arpl
xchg
ja
aas
mov
xchg
dec
jbe
test
pushf
xchg
lcall
push
int
cmp
cmp
sbb
mov
adc
fisttps
dec
mov
mov
push
sbb
repz
pop
xchg
stos
mov
sub
push
lock
jne
xor
pop
xor
dec
lds
jae
cmp
andb
int
mov
push
xor
xchg
dec
lods
and
inc
hlt
inc
dec
nop
clc
push
sub
repz
push
add
push
shll
sub
int3
inc
xchg
arpl
pop
roll
add
sbb
cmc
int
jecxz
icebp
add
scas
pop
sarl
pop
cmpl
push
sbb
mov
int3
std
js
push
dec
movsb
adc
aas
xchg
and
push
imul
cltd
pushf
lods
in
or
pop
ret
sub
vmulss
outsb
fnstenv
xchg
adc
add
lds
jecxz
icebp
repz
jmp
les
push
add
jp
adcl
icebp
decb
lods
or
inc
aaa
std
dec
pop
js
movsl
adc
ljmp
adc
rorb
jg
mov
pop
jne
jl
mov
mov
add
sbb
push
roll
mov
test
aas
sbb
stos
jnp
lods
push
aas
iret
ret
leave
push
mov
cwtl
roll
dec
out
out
xor
jle
dec
fcom
rcrb
or
int3
fcoml
xchg
test
add
movsb
lret
es
lcall
mov
push
push
cmovno
int
addr16
mov
or
xchg
jne,pn
gs
xchg
je
push
pop
out
xchg
sbb
aaa
and
xlat
xrelease
cmpsl
test
xchg
call
mov
mov
out
sbbb
sbb
mov
jbe
mov
and
mov
fdivl
lahf
pop
into
mov
loop
aad
inc
scas
jg
fcompl
faddl
add
mov
ret
ljmp
bt
mov
test
sub
sub
je
divb
sbb
imul
insb
dec
les
or
icebp
cltd
idivl
repz
jecxz
sahf
jecxz
loope
scas
addr16
cmp
cmp
sbb
or
ffreep
repz
loop
jae
jne
or
mov
daa
ds
fs
pusha
in
jno
jle
lods
add
sbb
jnp
or
enter
sarb
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
mov
ds
jo
pop
jge
jo
sbb
test
push
fisttpll
adc
cs
test
jae
loopne
mov
cld
dec
fcmove
ljmp
or
or
mov
xor
mov
sub
xchg
leave
push
jmp
ja
leave
push
jno
jbe
inc
cmp
fstl
imul
add
jnp
jnp
sbb
mov
sub
inc
jno
negl
mov
jg
push
shll
es
mov
addr16
inc
jae
add
mov
inc
test
sub
xchg
add
jl
sbb
scas
js
dec
aas
popa
sbb
scas
mov
dec
imul
fincstp
scas
adc
scas
out
cmpsl
lock
adc
out
ds
das
addr16
push
clc
pushf
aas
icebp
sub
jns
or
cli
int3
push
jle
into
ficoms
cmp
fdivs
jl
mov
lahf
in
ljmp
imul
xchg
pop
out
inc
fsubrl
clc
push
push
rol
pop
pop
mov
adc
repz
daa
push
pop
cmc
xchg
fildl
xchg
add
ss
popf
mov
lea
into
repnz
test
and
out
daa
or
mov
stc
lods
insb
sbb
jb
fwait
clc
stc
repnz
in
pusha
add
aad
cltd
pop
enter
das
jge
mov
jnp
push
movl
in
outsl
mov
fwait
adc
pop
fwait
loope
bound
fmulp
pop
shll
cmpsl
and
imul
add
mov
and
aad
mov
cltd
inc
lods
jns
xchg
dec
leave
outsb
scas
xor
jmp
scas
mov
jp
dec
dec
push
xchg
adc
lock
in
jo
cmp
mov
push
xchg
mov
sbb
movsl
insb
xor
repz
cmp
mov
xor
inc
aad
sub
xor
inc
xchg
pop
xchg
inc
xor
sarb
ds
cmpsl
ret
xor
pop
mov
add
outsb
push
push
xchg
dec
lret
out
jbe
sbb
stos
pop
lock
inc
repz
dec
and
jecxz
sub
dec
add
inc
push
and
aad
out
inc
xchg
cmp
xchg
dec
xchg
pop
xchg
subl
ret
mov
scas
or
jae
jo
pop
data16
ljmp
data16
push
popf
ret
push
shrw
rorl
xchg
fstpl
and
push
mov
mov
pushl
ret
dec
enter
call
xchg
outsb
int
mov
faddl
adc
fmuls
mov
xchg
icebp
fidivrl
xchg
xor
push
xchg
sbb
push
mov
xchg
pop
scas
push
fstpl
mov
mov
call
xor
push
clc
hlt
cmp
pop
addr16
ret
adc
mov
ljmp
adc
push
adc
xchg
imul
sti
nop
mov
sarl
fisubrs
or
stc
push
ss
inc
xchg
push
or
jno
mov
xor
bound
xor
int3
mov
xor
int
xchg
adc
push
dec
xchg
sub
sbb
jg
sub
cmp
inc
nop
mov
bound
int3
jbe
adc
movsb
dec
pop
movsl
sub
xlat
shlb
push
and
sub
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
je
or
xor
adc
mov
ja
jg
xlat
aad
or
pop
es
mov
and
int
sbb
inc
add
std
popf
in
aaa
xchg
jge
cld
rorb
in
mov
orl
jae
aaa
movsl
mov
sbb
test
ja
sub
mov
push
jmp
jge
jecxz
jno
ss
sbb
mov
push
mov
lds
mov
call
jae
loope
xchg
pop
xchg
shll
in
negl
mov
jl
sbb
mov
cmp
jb
mov
daa
sbb
jecxz
push
push
mov
xor
outsl
pop
dec
out
mov
cmp
adc
xchg
icebp
add
out
or
das
in
or
add
mov
jmp
cmp
pusha
mov
idivl
mov
inc
pop
jnp
test
jmp
jno
xlat
jl
cmp
xchg
ss
test
dec
sbb
lds
adc
loopne
fsubs
xchg
nop
fdivrl
push
scas
and
mov
adc
mov
out
into
mov
mov
adc
xlat
jns
in
mov
ds
dec
or
inc
cld
adc
sbb
dec
js
or
xor
jl
imul
dec
mov
mov
add
sub
hlt
popf
insb
dec
enter
sub
or
push
sub
in
in
xor
cmp
xor
fdivrs
sbb
cmpb
adc
sub
inc
pop
int3
fs
lahf
pop
mov
movsl
popa
add
rorb
mov
in
int3
dec
sar
fs
push
fsub
xchg
mov
cmpl
loope
clc
dec
shl
mov
icebp
push
adc
in
aaa
xor
inc
stc
xor
dec
fistpl
ror
sbb
out
aas
je
in
lods
sub
jne
lret
mov
xor
mov
movsb
aad
daa
stos
adc
imul
jno
in
mov
aad
sub
mov
mov
adc
ret
cmc
cli
loope
or
pusha
fwait
xchg
lods
sub
inc
and
fdivr
xlat
sbb
fldcw
lds
rcrl
daa
and
adc
popw
test
pop
in
pop
xor
fadd
fisubl
lret
into
xchg
jge
dec
out
lahf
adc
xor
or
pop
inc
or
and
clc
das
push
mov
frstor
push
shl
pop
add
lods
popf
push
loope
adc
inc
or
pop
out
mov
push
in
sbbb
mov
iret
or
push
negb
repz
stc
loopne
add
imul
aaa
push
inc
add
popa
adc
pop
xor
loope
scas
nop
mov
xlat
mov
push
lret
stos
popf
push
inc
xchg
push
gs
test
mov
popa
mov
cmp
lea
inc
enter
xchg
bound
test
lahf
sarb
bound
js
mov
imul
cmp
lret
daa
push
fcoml
sub
jns
movsl
pop
ljmp
push
test
push
fistpl
cmpsl
pop
sub
jae
mov
lret
lds
push
mov
in
adc
clc
mov
mov
cmp
jge
add
leave
fldl
imul
inc
cmp
xor
repnz
ja
inc
repnz
nop
and
test
and
out
stos
insb
insb
or
mov
sbb
imul
lcall
cmp
mov
jno
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
or
add
pop
jge
jo
scas
lret
leave
jge
or
sti
mov
cmp
inc
clc
aas
mov
cmp
std
inc
mov
faddl
cmc
shrb
fimull
add
sbb
pop
lds
xchg
inc
dec
xlat
jecxz
stos
fsubrl
mov
repnz
add
push
lahf
inc
adc
xlat
xor
rolb
mov
outsl
xor
repnz
sbb
or
ss
cmc
in
dec
in
daa
push
test
add
adc
sub
xchg
adc
sbb
clc
sub
clc
cmp
pop
nop
js
pop
and
ret
sar
fimull
xor
or
outsl
push
nop
add
add
int
sbb
cmp
push
push
jl
push
cwtl
into
adc
iret
scas
push
lods
lds
dec
pop
sub
mov
je
enter
fldcw
xor
xorb
adcb
fldt
xor
cmp
fldenv
outsl
inc
aam
cmp
or
ds
jg
test
sahf
or
or
pop
xor
xor
xchg
adc
mov
push
daa
cmpsl
jge
aas
pushf
or
mov
ret
data16
sub
push
inc
xor
inc
adc
scas
std
popf
addl
push
push
pop
repz
dec
xorb
lret
out
xchg
ljmp
and
xor
inc
jle
push
mov
mov
cmpsl
insb
push
pop
mov
dec
push
pop
add
cmp
or
pop
jmp
lds
loop
adc
aam
mov
mov
cli
outsb
pop
sbb
inc
cwtl
lock
stc
pop
shr
test
in
push
call
or
adc
push
aad
pop
out
and
movsb
sti
push
pop
pop
mov
test
insb
fnstcw
inc
cmp
test
cs
bound
mov
dec
xchg
fs
stc
jle
cld
dec
into
xlat
xchg
mov
cmp
inc
ret
testl
pop
ret
imul
cld
cli
mov
and
ss
mov
xchg
lret
mov
stos
sar
inc
hlt
xchg
sbb
lret
push
in
dec
push
adc
fdivl
fldl
test
jp
je
aad
mov
or
or
iret
jecxz
pop
scas
mov
scas
push
adc
push
pusha
and
mov
insb
rclb
incb
shr
sbb
sub
inc
int3
add
pop
cli
push
stos
in
adc
cmpsl
sub
ret
data16
mov
shrl
repz
iret
xor
fnsave
popf
push
mov
mov
mov
lods
adc
movsl
add
dec
dec
arpl
xor
jg
inc
pop
dec
inc
lods
loope
sbb
rol
aas
cmc
or
ljmp
xor
ss
test
mov
jg
pop
enter
les
les
aas
in
fisubrs
pop
adc
pop
sahf
xor
mov
ds
aad
mov
xchg
xchg
pop
push
fucomi
xor
jae
test
inc
mov
dec
push
xchg
push
jo
mov
xchg
xchg
jecxz
adc
ljmp
cwtl
adc
sub
push
pop
sub
inc
mov
sahf
dec
jb
cmp
shlb
sub
mov
js
add
imul
shl
pop
pushf
push
add
push
sub
sbb
call
jmp
pop
scas
push
xchg
mov
cmp
xchg
xor
fsubrl
adc
mov
ret
jne
inc
add
jg
add
rol
cli
cld
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
jns
push
jo
pop
jge
jo
xor
adc
mov
jns
mov
imul
sub
stos
inc
aam
mov
xchg
cli
xlat
adc
jmp
paddb
inc
sub
pop
push
xor
push
pop
pop
lcallw
xor
sbb
sahf
clc
lahf
imul
shll
pushf
or
jno
test
mov
loope
lock
sarl
sub
loope
xor
sbb
lea
jnp
mov
jmp
mov
lcall
cmp
and
ds
outsb
sbb
cs
mov
outsl
sbb
pushf
hlt
insl
push
push
repz
nop
dec
adc
iret
sbb
add
pop
out
mov
test
jno
jae
xor
xchg
in
cmp
in
mov
movsl
push
adc
dec
adc
mov
ss
lcall
or
jb
inc
inc
mov
test
mov
adc
xor
pushf
div
sbb
mov
jecxz
enter
xor
testb
mov
popa
or
popa
stos
add
popa
xor
sub
xchg
sbb
xchg
ret
sahf
dec
hlt
jp
fsubs
fmull
or
and
push
jnp
cli
xor
push
inc
test
daa
jp
cmp
sbb
cmc
mov
data16
je
repz
enter
jno
dec
jb
add
movsb
out
mov
xor
add
mov
aaa
or
std
inc
cmpsl
add
pop
pop
jae
outsb
and
jecxz
adc
fwait
dec
jle
sti
cld
pusha
ja
inc
xor
mov
addr16
and
add
inc
je
lods
ficoml
or
push
nop
inc
movsb
mov
mov
pop
mull
cli
bound
or
jo
inc
mov
dec
aaa
inc
ljmp
hlt
icebp
dec
or
cmpsl
clc
mov
jl
negb
movsl
push
cmpsb
rcrb
fldl
roll
div
pop
mov
xor
fwait
adc
cmp
enter
adc
xchg
notb
add
sub
pop
dec
adc
gs
xchg
push
pop
sti
mov
out
pop
lods
xchg
rep
aam
lea
mov
xor
daa
arpl
xchg
dec
rcl
xor
mov
mov
das
lret
dec
xor
jp
dec
aaa
loop
addr16
sbb
inc
loope
in
dec
test
cmpsb
and
lds
rcrb
cld
sbb
ja
lods
loop
aad
push
insl
fs
repz
sbb
cmp
push
or
push
mov
shl
cmpsl
aas
call
mov
movsb
inc
sbb
xchg
xchg
das
mov
aam
push
pop
movsl
scas
sub
sarb
pushf
repz
hlt
jo
fistl
icebp
fcomp
sarb
sbb
rol
dec
stos
jmp
or
call
xor
lcall
nop
lret
push
in
in
xor
mov
dec
inc
repnz
hlt
push
mov
jle
in
in
mov
std
sahf
dec
into
jne
xor
dec
loope
inc
fcmove
test
fisttpl
or
int
lock
and
cmp
or
test
adc
sub
cmpsl
mov
sub
inc
or
in
push
cmp
aas
sbb
or
dec
xor
sub
nop
mov
rol
add
and
xor
addr16
ljmp
sub
bound
leave
mov
fsub
call
jecxz
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
cmc
pop
push
jo
pop
jge
jo
adc
mov
leave
mov
cmp
pop
jae
jne
pop
cmp
fiadds
adc
adc
mov
jns
test
and
std
in
jne
lock
and
or
ljmp
xchg
test
lret
dec
inc
xor
push
jno
fstpl
xchg
and
or
cld
add
aaa
xchg
int
mov
inc
dec
jnp
cli
mov
fiaddl
fs
call
push
je
insb
push
xor
push
popf
jns
mov
add
add
dec
dec
push
push
sahf
add
sub
lcall
xchg
notl
stos
push
std
mov
call
push
loope
sbb
xlat
inc
or
xor
ret
xor
xor
je
jp
les
pop
call
dec
jne
js
lret
adc
out
incb
mov
lods
inc
mov
test
test
fstpt
dec
mov
mov
mov
sub
push
lods
cwtl
push
popf
pop
out
test
shlb
daa
pop
push
jne
cmpsl
push
xchg
ds
inc
pop
je
sub
xchg
mov
dec
jnp
sub
scas
clc
daa
dec
inc
lahf
and
repz
xchg
rcll
cmpsl
sbb
add
dec
adc
ss
notl
test
dec
ret
jbe
add
out
insl
inc
xlat
push
sti
shrl
mov
fisttpl
aam
cld
xor
in
push
inc
pop
jne
mov
mov
fbld
in
dec
sbb
mov
push
ret
cmc
mov
shl
out
ret
sub
add
dec
roll
mov
add
jmp
jae
adc
and
xlat
push
sub
fsts
fs
or
xchg
add
dec
jbe
push
and
push
scas
test
sbbl
adc
jge
mov
sbb
and
pop
mov
inc
cmp
dec
cwtl
adc
add
cmp
ds
inc
out
movsb
mov
pop
inc
xlat
xchg
test
mov
aad
and
cld
stc
dec
stos
push
inc
ret
mov
xlat
sub
add
pop
in
ss
add
push
lea
push
in
sbb
adc
stc
mov
sti
mov
int3
push
fdivr
pop
lret
mov
cmp
popf
ss
test
int
mov
aam
push
addr16
pop
push
or
adc
rol
scas
pop
add
jnp
xlat
inc
clc
xor
cmp
inc
lret
lret
in
aaa
push
dec
int
movsb
sbb
in
pop
test
cmc
pop
cmp
pop
xor
jmp
push
movsb
daa
mov
aam
jnp
mov
cld
mov
aaa
loop
es
push
xchg
dec
xor
je
pop
hlt
fsubrs
inc
movsb
js
test
xchg
jge
ret
pop
popa
inc
inc
adc
sbb
subl
add
xchg
mov
mov
dec
fs
loopne
smsw
push
sub
inc
dec
je
push
and
fwait
adcb
mov
std
mov
test
or
int
pop
sbb
adc
cmp
dec
idiv
lcall
sar
dec
mulb
in
xchg
push
dec
jmp
mov
ljmp
mov
scas
inc
jns
push
outsl
int
jne
clc
mov
es
jmp
das
test
inc
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
icebp
dec
mov
pop
jo
mov
pop
pushf
push
mov
mov
cwtl
pop
fisubrl
idiv
fwait
gs
hlt
cs
test
out
hlt
outsb
popa
test
add
fs
or
out
orb
mov
or
push
mov
or
out
mov
jnp
jns
frstor
sub
sbb
out
mov
mov
out
fucomi
adc
decb
and
sub
jae
jg
inc
sbb
mov
shll
jle
test
and
dec
and
sub
sti
jle
daa
cltd
addr16
xchg
aam
sub
mov
outsl
mov
cmpsl
cwtl
xor
mov
and
push
pop
imul
call
or
cld
sbb
cmp
mov
mov
pop
mov
mov
aaa
cmp
std
mov
dec
mov
jg
mov
hlt
ss
inc
div
outsl
fadd
out
mov
xchg
sub
adc
sub
sub
inc
out
push
push
mov
and
dec
insl
aaa
out
xor
lods
push
orl
jns
shrl
xchg
fstpl
fists
cmpsb
repz
iret
lea
push
movb
inc
cmpsl
sarl
pop
enter
sub
push
out
inc
pop
xor
push
shlb
xchg
subl
das
add
ja
fcmove
daa
movsl
icebp
xchg
add
in
lcall
fwait
pop
xor
xor
xor
test
inc
jnp
adc
ds
xor
push
sbb
dec
lret
mov
inc
out
xchg
sti
leave
testb
or
outsb
push
mov
pop
sahf
sub
ss
test
push
stos
fstl
add
pop
popa
mov
jno
mov
jge
sbb
pop
pop
jbe
and
loopne
rorb
push
jae
andb
pop
xchg
popa
mov
pop
add
popf
mov
and
fnstsw
movsl
cmc
insl
mov
dec
inc
and
fidivs
and
mov
aas
mov
mov
push
fidivrl
es
fwait
sub
xchg
mov
mov
or
loopne
cmpsb
lahf
dec
mov
or
pop
adc
int
inc
out
xchg
push
pop
lock
imul
xchg
int3
addr16
orl
enter
popa
movsb
cmpsl
scas
mov
sub
stos
add
mov
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
in
in
pop
sbb
mov
cmp
ficomps
shlb
push
ds
pushf
inc
cmp
mov
fcmovu
inc
shlb
mov
mov
mov
div
mov
iret
int3
pop
sub
lods
pop
xor
imul
and
mov
add
pop
inc
cmp
adc
jecxz
mov
sbb
cmp
lods
push
xchg
repz
leave
mov
sbb
cli
jge
push
mov
pop
mov
scas
dec
fs
push
cld
dec
jecxz
loop
dec
repnz
jnp
push
mov
adc
out
add
aas
jp
lahf
movq
add
outsb
andb
adc
add
psrld
and
outsb
push
sub
jp
jmp
xchg
in
inc
adc
cs
jnp
lods
jne
xchg
mov
loopne
jne
test
add
jns
add
xlat
fisubrl
andb
adc
sub
xchg
jl
aaa
sub
push
bnd
mov
lds
cmp
pop
jp,pn
mov
and
enter
mov
iret
cmp
dec
cwtl
cmpsl
sbb
push
sub
lret
outsb
push
das
lret
sub
cmp
jp
cmc
fistpll
push
cmp
jno
and
adc
nop
bound
mov
mov
sub
add
sahf
cs
mov
inc
filds
imul
fisubrs
cmpsl
jp
lods
lock
ds
aam
cwtl
mov
jecxz
push
pop
out
fwait
dec
bound
rcl
mov
inc
fsubrl
movl
mov
out
jbe
daa
push
aaa
mov
push
lcall
jp
push
movsb
pop
sti
int
scas
insl
test
inc
mov
pop
stc
sub
or
adc
je
sar
add
mov
out
cmpl
jg
fildll
mov
xchg
fwait
sbb
mov
shrb
push
leave
call
mov
push
stos
xlat
xchg
imul
stos
mov
outsl
mov
loope
lret
push
lcall
sub
mov
outsl
arpl
push
and
outsl
pusha
and
into
ljmp
cld
cmp
loope
leave
fwait
ds
int
movsb
pop
std
aaa
fstp
decl
mov
cwtl
or
sbb
idivb
fs
inc
and
cmp
add
jno
clc
cmc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
andl
mov
mov
je
fcoms
mov
in
and
ficomps
sub
pop
icebp
add
insb
cmp
aaa
fcmovne
xchg
sahf
das
or
scas
cmpsb
stc
movl
aad
popa
xchg
jle
pop
jge
ret
je
xchg
pop
inc
mov
sub
call
lret
mov
jl
call
xor
ja
mulb
mov
imul
sbb
rcl
test
cmp
sbb
adc
fdivl
mov
xchg
adc
xor
test
mov
and
push
or
popa
shl
push
decb
fisubrl
pop
jns
inc
js
xor
and
xchg
dec
push
or
mov
mov
mov
or
dec
adc
jbe
insb
pop
test
mov
sub
cmp
mov
xchg
sub
shrl
or
setne
aam
xchg
adc
fcomi
mov
jp
clc
xchg
mov
addr16
scas
mov
stos
xchg
int
xchg
jg
cmp
inc
ja
movsb
into
rorl
call
inc
out
and
mov
pop
ret
and
stos
fmull
dec
lea
push
stos
sub
je
pop
pop
lock
jbe
nop
sbb
pop
mov
mov
inc
inc
push
xor
pusha
std
inc
pop
jmp
sbb
jb
imul
sbb
repnz
movsb
fldcw
in
loopne
ficoml
add
xor
inc
mov
insl
add
xchg
loop
cmp
inc
xchg
sub
int
dec
aas
and
enter
lahf
sub
call
scas
push
stos
movsb
es
pop
cmp
cs
pop
add
dec
xchg
sbb
mov
lds
push
pop
int3
mov
imul
inc
addl
out
fcomi
xorb
inc
rcll
ficomps
and
aaa
repz
adc
fistl
outsl
lods
in
outsl
xor
inc
movsb
sub
inc
lret
fld1
mov
push
mov
fistpll
test
xchg
sub
out
scas
mov
call
jp
ffree
rcrl
adc
fucomp
mov
inc
sbb
pop
jnp
xor
loop
jo
jo
jns
je
lock
push
sub
xor
lods
sahf
pushl
test
xchg
jle
cli
pop
lcall
jg
shrb
cmpb
mov
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
lock
adc
jo
jle
jo
jnp
test
in
mov
sub
mov
and
mov
add
jno
mov
pop
loope
rclb
femms
insb
movsl
mov
mov
test
js
or
dec
mov
pop
sbbl
jbe
xchg
and
int
dec
mov
mov
push
lcall
mov
test
mov
cli
and
gs
lea
fdivrl
adc
aaa
repz
pop
sahf
cmp
data16
jmp
sub
pop
mov
pusha
mov
sub
fsubs
scas
mov
test
mov
shll
hlt
cmp
jb
addr16
mov
pop
push
inc
outsb
push
daa
sahf
fwait
ja
pop
pushf
jo
cltd
js
subb
adc
pop
pop
pushf
dec
repz
inc
push
dec
inc
cltd
push
adc
lods
add
outsl
dec
sahf
inc
mov
add
call
roll
sarb
test
cs
gs
in
in
fisttpll
pop
les
and
inc
lret
cmpsb
mov
ljmp
xor
inc
mov
adc
lods
push
pop
mov
insl
std
cmpsl
pop
cli
ret
push
dec
or
mov
adcb
and
js
lret
mov
insb
hlt
daa
cltd
imul
stos
push
icebp
jbe
std
jb
lea
clc
cs
fldcw
or
ds
adc
adc
bound
ss
cmp
and
push
cmpsb
ret
xor
movsb
popf
mov
sub
push
outsb
and
loop
sbb
mov
inc
push
push
inc
push
jg
mov
lret
dec
lds
sbb
jbe
mov
jmp
testb
xor
jmp
mov
or
pop
hlt
dec
shl
xor
adc
lods
in
mov
sbb
dec
ds
fcoms
lcall
addb
aad
iret
or
add
addb
pop
inc
jne
adc
test
or
jl
js
push
xor
mov
xor
sbb
xchg
es
jmp
xor
jb
nop
arpl
aaa
das
jns
sub
aaa
fwait
cmp
sbb
js
jmp
inc
push
mov
sub
aas
push
mov
imul
mov
mov
push
inc
cli
outsl
aaa
loopne
cmpsl
bound
bound
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
addr16
fs
mov
stos
adc
ljmp
xchg
adc
adc
ds
and
add
stos
mov
sbb
add
scas
pop
adc
pushf
aam
dec
push
stc
mov
inc
adc
je
leave
xchg
insb
cmp
inc
mov
je
cmp
rcl
mov
mov
dec
mov
lcall
jnp
push
push
sbb
movsb
repz
xor
jo
add
popf
int
insb
shrb
and
cld
repz
lret
inc
sarl
aam
mov
sub
hlt
push
pop
rcrl
stos
add
divb
cld
cs
push
sbb
xor
lret
rorb
bound
popa
mov
pop
xchg
and
or
or
je
mov
adc
hlt
jp
lret
mov
and
dec
outsb
add
push
outsl
or
push
orb
mov
fisttps
mov
movsl
xchg
and
imul
es
stc
jmp
and
sub
test
fbstp
xor
sbb
mov
jae
mov
mov
fdivs
enter
pop
shll
gs
jp
jl
and
fwait
dec
pop
and
mov
dec
sti
add
jne
movsl
out
add
lcall
iret
mov
nop
pop
lock
pop
frstor
popa
or
add
ds
daa
jle
xchg
test
fs
popa
pop
outsl
mov
dec
sub
stos
fistpl
inc
repz
mov
fwait
mov
ljmp
arpl
test
sbb
jns
je
adc
adc
ret
pusha
inc
cmp
pop
aad
mov
sti
shll
adc
lcall
sbb
ljmp
and
pop
mov
stc
repnz
mov
hlt
dec
sbb
divb
xlat
dec
repnz
or
jne
int3
sahf
pop
xchg
cmpsl
pusha
mov
ficompl
fnstenv
iret
stc
adc
add
dec
ljmp
into
sbbl
adc
dec
push
and
icebp
xchg
pop
xchg
ljmp
loope
cmpsl
repz
nop
subl
bound
fistpl
add
mov
xchg
popa
or
xor
adc
push
je
ljmp
mov
lret
xor
push
jmp
pop
std
sub
fstl
push
out
daa
pop
pusha
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
push
jne
cmpsl
mov
jle
jo
dec
push
icebp
mov
sub
mov
adc
clc
pop
out
and
dec
pop
nop
pushf
stos
fmuls
sub
popf
xchg
jp
call
fwait
adcb
icebp
push
dec
test
fidivs
data16
and
xchg
push
mov
mov
add
xadd
push
aaa
xor
mov
mov
repnz
and
shrb
mov
jle
arpl
stos
mov
cmp
rcrb
orl
pop
faddl
xchg
adc
repz
pop
loopne
fbstp
ror
hlt
jo
push
adc
call
jle
mov
dec
daa
jp
icebp
sbb
inc
iret
adc
mov
jle
jns
adc
cmpsl
pop
fstpl
faddp
jne
cmpsl
popf
xchg
jns
xor
jg
ds
xlat
aaa
sti
xchg
cmp
push
out
imulb
inc
stc
push
push
xorl
cwtl
lds
cmpsb
sub
orb
pop
mov
add
aas
loopne
pop
mulb
in
aam
inc
lods
mov
pop
lahf
lods
mov
orb
cld
mov
bound
iret
or
mov
imul
jbe
aam
dec
fs
ret
mov
leave
pop
lea
fmulp
xor
loope
in
xorb
mov
cmp
ljmp
and
pop
in
xor
lods
sti
mov
push
aas
or
mov
cmp
imul
hlt
mov
arpl
fcomps
push
pop
lea
sub
dec
insl
lods
fistpl
mov
mov
inc
or
push
jp
rcrl
test
sbb
call
push
add
data16
fdivrs
out
fsubrs
test
fldl
clc
not
fcomps
mov
pop
inc
add
mov
cmp
xlat
inc
in
mov
adc
cmp
jge
int
gs
movsl
stc
push
loop
rcr
sbb
fucomi
cmp
cmpsl
shrb
out
out
shr
lods
shrl
mov
and
cld
scas
hlt
jo
mov
iret
dec
leave
divps
test
repnz
dec
sahf
loope
xor
inc
std
ds
sbb
repnz
xchg
sbb
das
jmp
arpl
cld
scas
dec
jp
clc
cmp
push
lret
ret
and
out
jecxz
jnp
fldenv
mov
jmp
outsl
adc
lret
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
cmc
in
outsb
jo
mov
in
xchg
mov
mov
in
and
ds
gs
and
fistpll
out
mov
pushf
imul
mov
inc
out
push
sti
push
pop
jmp
addr16
test
mov
arpl
test
sti
xchg
movsb
fstpl
ret
push
add
jo
mov
imulb
call
inc
xchg
insl
enter
out
hlt
psubsw
mov
xchg
jbe
or
jbe
adc
stc
adc
fs
imul
stos
mull
cmp
mulb
mov
xchg
cmp
into
xor
pop
cs
cli
sahf
jecxz
mov
in
pop
out
daa
adc
adc
inc
mov
cwtl
cmc
jmp
jp
sub
pop
cltd
sub
cmp
pop
xorl
sbb
sub
lret
pop
in
out
divb
scas
push
lcall
imul
mov
adc
je
adc
dec
rcl
jp
cmp
dec
lret
xchg
shr
or
dec
push
mulb
out
stos
xor
hlt
dec
sti
call
sti
sbb
cmp
lea
insl
leave
push
jmp
pop
pop
andl
pop
sub
push
std
fwait
sahf
subb
arpl
cmpsb
mov
stc
fsincos
leave
adc
cmpsl
fidivrs
cmp
sti
inc
xor
push
lock
je
ljmp
das
cmp
jnp
dec
pop
sub
out
inc
cmpb
jecxz
stc
testb
cs
jne
sub
pop
fdivrl
lcall
pop
lock
xor
int
cltd
xchg
lods
repz
aam
xor
and
divl
lcall
and
push
std
scas
int3
pusha
dec
dec
or
std
out
and
pop
stc
or
jl
adc
rcrl
xchg
aad
mov
pop
movsb
imul
std
xor
pop
mov
lret
bound
out
mov
pop
or
rcr
mov
mov
aam
adc
sub
jno
jno
sbb
in
cmp
bound
jle
mov
adc
or
lret
shll
shl
shr
add
out
xchg
cmpsb
arpl
add
mov
sub
mov
jno
aam
xchg
dec
mov
cmp
cmp
out
fiaddl
push
std
cld
gs
inc
sub
push
notb
mov
movsb
out
clc
jne
pushl
jmp
and
lods
shrb
in
pop
dec
pop
addr16
jle
jo
mov
aam
negl
sub
jbe
lret
add
inc
xor
repnz
cltd
sub
push
imul
cltd
jne
push
sbb
push
mov
push
call
mov
pop
lea
mov
sahf
rcrl
loopne
fdivrl
cmp
push
mov
mov
mov
jae
test
push
xchg
xchg
adc
or
and
jle
test
rol
dec
adc
jns
sbb
divl
lcall
and
leave
movsb
dec
jmp
insl
cmpsl
arpl
cmp
cmp
sahf
in
lods
out
rcrl
mov
repz
mov
clc
inc
cmp
push
adc
mov
cltd
mov
sbb
adc
repz
push
push
pop
call
sarl
in
xchg
xchg
dec
shlb
movsb
mov
stc
add
add
dec
pusha
test
popf
jb
lods
cmc
fcoml
xchg
jg
fidivl
jo
xorl
push
gs
out
push
fnsetpm(287
outsl
add
mov
in
popa
insl
es
inc
sbb
je
push
fchs
cmp
aaa
add
popf
cmp
cmpsl
adc
xchg
sub
inc
in
stos
cmp
inc
push
xchg
sbb
xor
es
hlt
push
imul
and
or
cli
ds
sbb
stos
std
push
mov
push
ficompl
sarl
xor
lcall
scas
into
ficompl
xlat
enter
das
lods
jp
fdivrs
arpl
add
vshufps
cmp
scas
cmp
pop
aas
scas
inc
lcall
ror
xchg
dec
jae
outsl
lret
es
cs
sbb
mov
mov
iret
adc
insb
ljmp
loop
jno
shlb
outsl
dec
aas
xchg
xchg
push
insb
jne
mov
movsl
mov
mov
push
clc
test
xor
pop
jmp
and
jp
in
adc
dec
fldl
jmp
push
cmp
mov
sub
mov
insb
repz
cmp
and
jg
pop
push
mov
sub
fidivl
mov
lods
test
xor
enter
and
xor
lods
int
jge
mov
test
test
cmp
fisubs
lcall
inc
sub
add
jle
fwait
loopne
mov
ja
jmp
pop
insl
and
xor
insl
jp
or
dec
sbb
out
push
jo
and
mov
loopne
and
fwait
cld
or
aad
adc
repz
push
xlat
mov
push
mov
inc
popa
stc
and
imul
inc
add
mov
push
pop
outsl
inc
aam
cmp
sbb
xchg
stos
push
shrb
pusha
insl
xchg
push
lock
mov
add
ja
addr16
scas
cmp
scas
lcall
xlat
ljmp
inc
push
aad
outsb
mov
std
outsb
subl
or
out
xchg
fistps
test
pusha
ret
lods
add
pop
cltd
out
mov
add
gs
test
test
sahf
xor
jbe
xchg
mov
popf
mov
mov
jmp
jb
dec
xor
popf
push
in
bound
pop
pop
sub
adc
jbe
lods
dec
xor
addr16
or
out
jns
mov
mov
stos
hlt
dec
xchg
sarl
fistl
pop
dec
lea
out
mov
rcrl
and
pop
or
test
add
xor
arpl
shr
inc
insb
jge
or
addr16
lods
fmull
imul
jl
lahf
xorl
lods
xchg
xchg
or
repnz
adc
pop
mov
xor
cmp
ret
push
push
and
out
adc
icebp
call
pop
stos
hlt
in
movsl
sahf
not
sub
push
int
arpl
mov
mov
xchg
mov
arpl
mov
xchg
sahf
adc
mov
inc
sub
leave
sbb
out
xchg
mov
inc
pushf
and
pop
mov
adc
negl
jne
iret
faddl
ret
nop
movsb
movsb
jg
int
mov
fs
scas
mov
dec
jbe
sbb
jne
cmp
mov
jbe
sub
popf
jns
push
and
pop
or
push
cltd
lods
test
dec
fimuls
jle
adc
adc
or
nop
adc
dec
cmp
test
jo
cld
out
mov
loopne
pop
outsb
sbb
shr
push
push
cmp
pop
orb
mov
cwtl
lods
lret
sbb
pop
in
xor
nop
leave
orl
shlb
iret
js
xchg
in
xchg
sbb
dec
insl
push
pushf
out
sbb
pop
jne
jno
flds
bound
loopne
jl
and
mov
adc
mov
pop
pushf
adc
pop
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
pop
adc
jo
mov
imul
xchg
in
mov
jae
sub
pop
cmp
jp
in
shll
aad
jp
lret
ret
roll
inc
loop
mov
xor
out
or
inc
xchg
jmp
cli
cltd
into
inc
dec
mov
je
mov
mov
ds
addl
fdivr
loop
int
adc
mov
xor
mov
leave
pop
or
inc
fwait
scas
jp
pop
lcall
push
aam
lods
sbb
mov
mov
cmp
or
data16
push
enter
mov
and
jno
in
ds
pop
xor
iret
sbb
movsl
or
dec
xor
shlb
push
cld
and
fimuls
ret
stos
cmp
mov
jno
lock
stos
pop
daa
xchg
lahf
imul
es
leave
push
xchg
mov
sbb
push
cmp
insb
shlb
bound
cmp
mov
sbb
mov
push
mov
jno
push
xor
call
loope
in
fldt
inc
sarl
push
jmp
mov
add
inc
or
leave
xor
loop
popf
sti
dec
jg
flds
inc
xchg
mov
mov
xor
in
ret
pop
loop
pop
fistpl
sbb
sbb
push
imul
adc
push
aaa
and
cmp
sbb
pop
fisubl
push
xchg
mov
add
lahf
xor
fidivrs
mov
or
repnz
dec
and
sub
jl
out
fs
cmp
pop
mov
pop
fistl
addr16
in
dec
lret
addl
mov
mov
in
sti
sbb
add
sti
sub
dec
ljmp
push
clc
add
add
fcoml
xchg
stos
aaa
packsswb
xor
ret
idiv
scas
jno
in
pop
add
mov
daa
lea
in
inc
mov
arpl
jns
jo
lret
icebp
mov
mov
add
ljmp
fwait
mov
lahf
aad
test
lds
rcll
cmpsl
pop
or
mov
jg
test
inc
jnp
dec
xchg
mov
popa
ljmp
sub
cwtl
pushf
sbb
adc
xchg
lea
aaa
xchg
incb
jns
sub
leave
add
dec
lea
lcall
push
scas
or
jmp
inc
pop
push
or
jne
fxch
stos
rcrb
adc
or
push
cld
inc
add
add
add
add
or
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
in
cmp
mov
pop
or
hlt
push
xchg
cmp
cmp
push
mov
idivb
xor
add
gs
and
lods
cld
push
ror
movsl
mov
pop
sub
dec
add
add
mov
jmp
xor
imul
jbe
ss
out
add
clc
xor
mov
int3
dec
add
jno
xlat
dec
jp
outsb
gs
sti
mov
or
repnz
cmp
out
sahf
leave
fwait
cmp
or
inc
loop
lods
xchg
pop
adc
inc
mov
mov
ja
inc
mov
sbb
cmp
test
out
cwtl
sub
xchg
add
mov
ds
xchg
cmc
popf
pop
pop
dec
imul
inc
sti
adc
movsl
sub
cmp
std
xor
adc
lock
and
and
shll
fnstcw
xchg
ljmp
add
cmp
xorb
push
insl
pop
push
mov
xor
pop
pop
mov
jle
adc
lock
bound
mov
arpl
add
cmc
stos
push
push
adc
push
sub
cmpsl
mov
push
mov
aas
aad
inc
loope
push
mov
fadds
lret
cmp
cltd
out
mov
mov
call
sbb
dec
jae
inc
rorl
fcoml
fimuls
pop
dec
jae
pop
add
lods
call
fidivrl
jecxz
sub
push
ret
mov
loopne
push
mov
leave
sarl
lock
cmp
inc
add
mov
mov
in
lahf
adc
mov
mov
add
mov
movsb
or
sar
scas
cmp
pop
jmp
jp
arpl
outsb
xlat
or
or
sub
int
cltd
inc
mov
leave
out
fistl
sub
jecxz
xor
mov
arpl
adc
mov
xchg
lret
test
ret
dec
adc
xchg
add
mov
sub
addr16
pop
addb
inc
out
in
ss
aas
or
inc
test
mov
jno
out
pop
xchg
fwait
js
xchg
jo
inc
in
popa
mov
cmp
sbb
xor
cmpl
mov
outsl
adc
mov
pushf
xchg
push
pop
mov
mov
or
pop
scas
movsl
dec
aad
lock
mov
mov
inc
dec
mov
test
in
leave
popa
lea
out
mov
clc
fcoml
jmp
add
jne
call
mov
jmp
ret
sbb
sub
jno
pop
or
cmp
leave
jo
jo
jle
jo
enter
imul
aaa
dec
jo
cmpsl
mov
add
cmc
ljmp
jbe
sub
dec
and
test
xchg
sub
test
push
pop
std
jmp
into
in
fs
rcrl
push
cmpsl
enter
mov
jmp
jge
clc
jbe
mov
into
or
jo
jns
pop
test
lret
add
and
mov
sub
call
mov
inc
ljmp
loopne
lods
pop
daa
hlt
mov
lcall
adc
pushf
xor
push
lret
mov
xor
xchg
or
dec
loopne
out
jnp
les
mov
xchg
rcr
dec
mov
push
mov
gs
lods
leave
push
orb
ret
sbb
pop
pusha
aad
jle
lds
insl
add
sahf
cmp
loopne
push
bound
mov
or
roll
sbb
ds
cmc
and
aad
cwtl
in
cltd
in
imul
jbe
and
lret
jns
dec
iret
stos
inc
and
mov
notb
test
lea
gs
ds
popa
nop
dec
adc
loope
mov
je
push
push
fucomip
lods
xchg
in
sub
jns
jno
mov
push
inc
xchg
nop
mov
cwtl
mov
into
mov
jae
adc
cmp
ds
shll
adc
das
inc
gs
jmp
push
roll
jno
jns
mov
in
das
xchg
pop
scas
sbb
inc
or
adc
cli
xlat
jl
xor
or
or
sti
adc
xor
into
adc
inc
push
rcrb
sub
jno
fsts
jp
idivb
and
shrd
or
cmp
or
push
test
aam
test
mov
out
ficomps
cmp
daa
incb
shlb
push
leave
aaa
daa
fcomps
jge
cmpsb
add
push
lods
inc
push
push
xchg
push
add
cwtl
fistl
ss
xchg
sub
ja
int3
out
les
ja
dec
jb
sbb
or
fnstsw
shll
mov
insb
and
mov
jle
insl
int
jge
mov
mov
scas
add
pop
aam
shlb
arpl
je
mov
jg
mov
jge
fwait
mov
sbb
aas
mov
jecxz
dec
clc
xor
jmp
add
mov
jb
jge
jge
dec
xchg
or
mov
fsts
or
or
test
out
push
mov
jmp
inc
sub
pop
jb
nop
scas
jae
push
inc
pop
mov
test
xor
xchg
in
xchg
dec
daa
sbb
into
push
push
inc
and
and
or
lret
shl
mov
ljmp
and
ljmp
mov
cmpsb
sub
dec
pop
adc
sub
negb
cmp
cmp
fcomps
in
sub
xor
push
inc
or
and
loop
negb
push
pop
push
cmp
test
sti
outsl
cs
test
pop
pop
sub
push
aad
mov
push
repnz
inc
data16
xchg
cwtl
fdivrl
pop
push
inc
cmp
lret
inc
daa
rolb
stos
aaa
stc
test
mov
bswap
aam
fildll
adc
dec
xor
push
cmpsb
rcll
dec
scas
pop
and
pop
xlat
cmpsb
popf
cmpsl
sti
int
lea
sub
lds
test
mov
cld
sub
pusha
add
add
add
mov
jg
mov
insb
adc
lcall
mov
mov
lods
sbb
imul
add
out
mov
pop
pop
inc
pushf
xchg
xor
fwait
cmpsl
cmpsl
lahf
xchg
xchg
push
ja
pop
lcall
jb
movsb
dec
pop
outsb
addb
pushf
ret
xchg
jmp
push
adc
push
or
sbb
xor
test
jg
outsl
pushf
xchg
repnz
jp
and
out
xor
push
dec
add
lahf
dec
aas
sub
add
mov
lahf
inc
loope
pop
mov
inc
mov
inc
insb
mov
jne
dec
dec
mov
xor
jno
mov
or
push
jl
dec
cmp
push
les
jno
pop
je
scas
pop
aad
daa
push
dec
adc
jb
mov
dec
push
cltd
stc
popf
mov
fildl
add
and
ja
inc
add
stos
cld
jnp
mov
dec
dec
mov
jbe
ret
add
pop
and
sub
inc
adcl
arpl
imul
pop
shlb
jl
xchg
cmp
mov
std
xchg
or
cmp
jbe
loop
sbb
shr
sub
and
hlt
adc
in
movq
and
jle
fs
pop
jno
cmpsl
dec
and
lcall
aaa
push
and
lods
loope
popf
add
push
adc
add
mov
and
lock
pop
mov
loopne
xor
enter
add
add
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
cmp
ss
jnp
jo
jle
jo
hlt
pop
pmaxub
sbb
int3
out
dec
rcll
arpl
sbb
sub
or
xor
insl
sbb
daa
aam
out
mov
rorb
adc
pusha
enter
repnz
fnstenv
into
jb
aaa
jae
out
push
dec
icebp
dec
cs
mov
cmc
cld
clc
push
lahf
cmp
mov
cwtl
std
and
out
pop
out
insb
fdivr
repnz
js
mov
and
fs
lret
pop
jmp
and
loope
inc
dec
mov
lahf
loope
cmp
jae
pop
lcall
fmul
mov
sbb
sbb
ja
rcl
mov
lcall
in
lret
outsb
xor
pop
loopne
into
fwait
dec
sub
pop
es
aam
dec
nop
cld
std
daa
arpl
lret
leave
out
xchg
fstpt
push
cli
inc
aas
lds
ret
dec
mov
scas
aad
cmp
push
jle
mov
test
dec
xchg
addr16
aas
test
arpl
xchg
imul
in
mov
es
sub
enter
stos
mov
rorb
rorl
das
cmc
xchg
int3
jne
inc
adc
int3
movsb
jne
jp
sbb
iret
mov
aam
scas
ret
mov
xchg
lea
out
mov
out
add
dec
adc
mov
fists
sbb
dec
ss
pop
lock
loope
ss
or
add
pusha
ret
mov
push
cs
dec
sub
xor
mov
pop
popf
dec
ljmp
sub
push
mov
pushf
mov
pop
outsl
mov
loopne
pop
push
int
sub
mov
dec
dec
pop
lret
sbb
push
pop
cli
test
sub
fidivs
out
loop
add
pop
and
pop
lods
push
sub
pop
mov
push
popa
iret
pop
dec
and
adc
fcomip
cmpsb
outsl
ds
sbb
mov
xchg
adc
push
js
cwtl
iret
xchg
mov
aad
mov
adc
jle
loope
ficoms
arpl
mov
enter
mov
add
pop
and
mov
cmpsb
dec
sbb
in
gs
lret
lret
or
test
repz
jp
adc
dec
sbb
adc
push
into
mov
jmp
scas
push
loopne
or
dec
sub
data16
or
cmp
dec
mov
ds
jge
popa
sbb
scas
lret
sub
push
xor
xchg
inc
cmp
sbb
push
lods
and
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
sub
or
jo
dec
sbb
and
imul
stos
xor
leave
fdivrl
cmpb
mov
jecxz
add
imul
cli
orl
jp
ljmp
sub
popa
cwtl
add
sahf
jp
test
aad
pop
inc
movsb
pop
inc
in
or
xchg
cmp
pop
cmp
cmpsl
mov
jb
push
or
mov
mov
gs
add
xchg
adc
pop
movsb
jae
xor
sub
scas
add
pop
dec
sbb
into
lret
or
xchg
xchg
jbe
scas
pop
mov
lret
stos
nop
xorb
pop
leave
iret
dec
sbb
adc
jb
xor
cmpsb
and
pop
adc
lods
mov
mov
xchg
xor
mov
pop
inc
mov
stos
dec
cli
test
pop
push
xlat
imul
xchg
cli
cwtl
pusha
and
xor
jge
aas
or
cmpsb
and
xchg
lods
outsl
lea
add
jg
dec
push
jle
adc
add
roll
arpl
push
loope
stos
xchg
fldenv
xor
add
imul
pop
jnp
cmp
stos
stos
mov
cmp
jp
int
sbb
inc
fmulp
iret
jo
pushf
scas
adc
out
inc
or
stos
cmpl
lods
push
cmp
inc
or
lcall
add
lods
mov
cmp
jne
mov
out
dec
cmpsb
cmp
xor
mov
es
inc
inc
rcrb
lods
jno
push
jbe
inc
adc
xor
xor
cmp
pop
mov
loopne
lock
and
idiv
jb
popa
xor
loope
stos
jnp
aad
sub
fsts
scas
iret
and
clc
imul
addl
jl
in
and
jle
dec
mul
push
xor
pop
pop
mov
cwtl
adc
outsb
xchg
and
sub
mov
out
add
pop
faddl
pop
incl
mov
inc
pop
inc
cmp
mov
fidivl
addb
gs
cmpsl
mov
test
or
sbb
add
pushf
dec
mov
les
jno
and
shl
out
dec
test
js
push
or
mov
leave
mov
jnp
nop
inc
xchg
call
dec
jae
xchg
lds
push
cmp
insl
xchg
orl
adcl
push
es
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstenv
gs
cmp
add
jo
jp
js
aad
les
mov
lret
stos
call
movsb
add
out
sbb
or
scas
add
pop
xor
loopne,pt
pushf
or
jo
lret
jge
sbb
fiaddl
sub
rolb
add
mov
xor
xchg
dec
push
jg
xor
shlb
mov
mov
pop
xor
orl
jle
nop
repz
adc
jo
jbe
in
test
adc
das
jp
pusha
mov
out
push
scas
xchg
sar
ljmp
addr16
ret
cmp
test
fdivl
fsub
icebp
es
jno
adc
or
xchg
or
inc
mov
ficomps
add
xchg
mov
sub
mov
call
and
out
lcall
int
adc
mov
outsb
fimull
xchg
xor
call
mov
stc
aas
in
loopne
pushf
fnstcw
xor
pop
js
fwait
and
out
inc
adc
aad
loopne
sbb
adc
adc
mov
pop
cmpsb
adcb
cmp
stc
je
mov
dec
xor
mov
ja
je
pop
insb
clc
in
push
dec
iret
stc
pop
int
orb
cmp
pop
out
xchg
jecxz
stos
cs
in
mov
xchg
ss
push
js
jo
push
sbb
loop
into
push
or
das
push
scas
mov
bound
das
push
insl
outsl
xchg
jbe
cli
dec
outsl
add
mov
js
adc
shl
inc
and
push
cs
ficoml
cld
rol
add
dec
and
in
fnstcw
fisttpll
out
mov
sbb
sbb
rcll
insl
add
mov
jnp
ret
je
dec
iret
mov
les
bound
test
sarb
enter
pop
xchg
pop
decb
cmp
in
sbb
fsub
and
lods
addr16
pop
xor
push
sbb
sbb
movsb
popf
mov
cmp
imul
andl
cmp
xlat
test
sub
xchg
mov
fldenv
mov
out
mov
cli
mov
out
add
mov
sbb
repz
and
es
push
fstpl
pop
xchg
popa
fsubr
jl
nop
pop
jae
ret
sub
into
lahf
popa
aad
fisubrs
cs
lretw
xchg
ficompl
cwtl
dec
cmp
push
mov
or
xchg
sbb
lret
clc
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
xlat
fstpt
mov
mov
dec
shl
jnp
pop
push
lds
push
rcrb
and
mov
push
or
mov
dec
je
repz
data16
jbe
push
jnp
xor
popa
dec
nop
dec
lcall
enter
cmp
ds
pop
mov
aaa
fimuls
mov
in
adc
into
and
outsl
xchg
je
dec
dec
xchg
mov
dec
movsl
sbb
jo
lcall
scas
sbb
mov
mov
jg
push
out
lds
fdivl
pop
mov
mov
pop
xor
push
push
shrb
and
adc
scas
inc
xadd
loopne
xlat
add
call
arpl
aaa
inc
pop
push
test
mov
pop
jne
jge
mov
loop
sarl
sar
loopne
ljmp
mov
xorl
loop
test
out
clc
mov
add
lahf
in
fistps
outsl
mov
jp
js
sbb
sahf
adc
lcall
push
jno
ret
ds
sub
jl
mov
scas
push
cld
adc
ret
xchg
movsb
mov
cmp
fsub
lock
and
xor
mov
push
add
mov
ret
sub
loopne
cmc
xor
inc
push
inc
pusha
aam
or
int
jl
sbb
push
fmuls
and
mov
jne
cltd
out
xchg
xorl
mov
mov
mov
jo
pop
cmpsb
mov
mov
adc
fimull
outsl
push
mov
subb
inc
sbb
fistpl
xor
lsl
push
cld
out
cli
xor
lea
das
add
jge
xchg
ljmp
lahf
ficoms
fnstsw
add
lea
das
fucom
sbb
adc
mov
pop
and
sbb
fwait
add
les
loop
and
or
enter
cmpsb
inc
push
call
inc
pop
inc
movsl
pop
sbb
pop
jecxz
cmp
mov
sbb
mov
push
push
cmp
out
sti
jmp
nop
rcrl
push
add
or
xor
sahf
jnp
adc
in
fsubs
sub
add
fidivs
cmp
ficomps
adc
or
cmp
sbb
sbb
adc
bound
cmpsl
adc
mov
insb
push
cmp
inc
mov
cli
ret
sbb
in
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
pop
mov
jg
jg
mov
adc
mov
fists
decb
popf
jle
icebp
scas
or
cld
negb
and
mov
mov
cmc
mov
repz
test
ds
mov
push
out
repz
push
mov
dec
lods
lods
sub
nop
adc
mov
pop
push
inc
xchg
hlt
stos
ljmp
push
cld
add
ret
xchg
cmc
pop
leave
out
vphaddubw
sti
in
jecxz
dec
dec
cmp
call
adc
jno
addr16
xchg
cli
in
jg
push
popf
loop
jg
mov
xor
mov
mov
jns
xchg
lock
lahf
cli
cmpsl
outsl
leave
lods
rcll
iret
cmp
jl
mov
call
enter
inc
mov
or
and
xchg
cmp
push
or
das
loopne
cltd
stc
mov
lock
pushw
jmp
xor
jno
xchg
push
pop
cmpb
xor
or
mov
mov
nopl
leave
in
sub
stos
inc
add
gs
and
leave
ss
shlb
aam
sbb
pop
cmp
aad
aas
mov
jne
adc
mov
out
xchg
push
or
xchg
add
push
mov
pop
ret
and
fimull
dec
mov
popa
adc
inc
js
mov
mov
mov
addr16
sbb
jmp
gs
push
push
bound
adc
add
push
rdmsr
dec
lret
jmp
push
shlb
mov
pop
aas
mov
shll
out
sbb
cld
outsl
lea
test
in
lods
xchg
or
aad
loopne
leave
add
and
push
pushf
stc
mov
xor
cmp
in
jg
cmpb
xor
jmp
push
nop
pushf
push
mov
nop
jne
leave
lahf
popf
test
sub
in
adc
sbb
pop
and
mov
sbb
jecxz
push
adcb
mov
push
testl
shl
cltd
adc
les
das
shll
stos
bound
xchg
mov
lcall
test
dec
xchg
in
mul
das
push
adc
xchg
fsubrp
lods
out
dec
popf
adc
and
fstpt
cmp
pop
inc
ret
sarl
or
xor
pop
jl
pop
dec
inc
mov
sbb
test
je
addr16
movsl
pop
scas
mov
jg
fdivs
inc
scas
fwait
cmp
inc
pop
loopne
push
pop
sbb
mov
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
xor
cmp
mov
pop
icebp
sbb
mov
jg
jge
mov
rorb
mov
les
mov
ret
ret
fcom
daa
or
sti
sarb
ret
mov
into
cmp
fwait
mov
or
push
je
lea
add
mov
mov
or
out
jnp
repz
push
sub
js
or
data16
shlb
push
cmc
cmp
mov
push
mov
mov
mov
mov
or
jb
loop
jo
inc
mov
inc
pop
pop
das
loope
jae
stos
roll
dec
addr16
fmuls
cmp
leave
out
mov
push
sbb
fs
hlt
test
rorl
sub
aaa
lock
or
xchg
pushf
mov
or
cld
sar
or
pop
out
lcall
cmp
mov
loop
sbb
xchg
out
sti
mov
pop
shlb
mov
jnp
add
gs
test
and
test
mov
xchg
push
mov
pop
mov
aas
mov
jno
add
push
fcoml
mov
iret
js
test
mov
sub
jmp
jge
pushf
push
mull
jecxz
sarb
rolb
fldl
int
stos
aas
pop
les
lcall
mov
jno,pn
mov
shrb
sub
jae
add
fidivrs
out
inc
push
pop
enter
les
push
fs
lcall
push
ret
into
xorb
cwtl
add
sbb
push
int
inc
iret
sub
fnsave
adc
xchg
pop
inc
mov
cmp
data16
push
iret
fsubs
xchg
xchg
xor
mov
mov
sar
jnp
xchg
repnz
inc
add
adc
xlat
jne
inc
fucom
not
dec
mov
add
lret
int
sbb
nop
mov
inc
outsl
cmp
jb
mov
sub
loope
mov
xchg
inc
xor
dec
mulb
and
mov
mov
jl
mov
rol
fisttpl
push
ficomps
cmpl
insl
xor
push
enter
or
pop
jp
mov
ljmp
movsb
fidivl
jno
adc
xor
insl
movsb
pop
or
mov
aad
stos
ds
fwait
clc
sbb
add
push
out
fwait
xchg
sbb
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
mov
in
orl
jo
cli
in
push
shlb
incb
adc
xor
nop
xchg
in
push
push
mov
or
dec
icebp
test
call
ljmp
enter
inc
pop
adc
push
sub
push
sbb
hlt
xchg
or
push
out
jmp
jno
inc
mov
rcr
and
add
push
mov
or
xchg
xchg
inc
loope
cmp
icebp
pop
inc
out
push
popf
cs
outsl
cmpsl
inc
sub
cld
in
sub
or
js
mov
pop
dec
mov
hlt
dec
mov
cmp
cmp
shlb
pop
or
inc
xchg
in
jns
lods
inc
movsb
sub
push
out
add
jmp
jne
sbb
jb
pop
sbb
add
mov
outsl
imul
fistps
mov
sar
inc
mov
sar
jge
add
insl
cltd
xor
dec
incb
out
popa
arpl
bound
arpl
pop
int3
in
fdivl
clc
sub
xchg
xor
fistpl
stc
jecxz
mov
cmp
add
sub
out
jb
pop
inc
clc
ja
std
xchg
insl
xlat
pop
xchg
cltd
mov
loopne
lods
mov
inc
push
add
test
xchg
jns
dec
imul
jp
pusha
xchg
pop
les
mov
and
loopne
sbb
dec
mov
xor
and
push
es
xchg
cmpsb
xchg
cmp
inc
orl
pop
sub
sahf
and
cmp
add
lock
lock
dec
cs
cld
mov
pusha
mov
add
decl
mov
cmp
enter
iret
mov
scas
adc
push
ljmp
pusha
into
out
cmp
cmp
sbb
pushf
mov
and
inc
addl
or
pop
or
icebp
mov
lock
das
cs
jae
mov
mov
add
cli
push
arpl
fcmovbe
loope
fidivrs
jmp
sub
cwtl
rolb
jmp
clc
lahf
sahf
loop
mov
jl
jmp
and
lret
push
xor
or
jae
push
sar
shrl
jecxz
subb
adc
cld
push
mov
jle
dec
hlt
mov
fsub
rcll
pop
dec
fidivs
xchg
push
cmp
stos
add
stc
push
inc
and
out
jb
icebp
cs
mov
mov
dec
int3
or
jo
adc
movsb
sar
dec
jb
cmpsb
xor
fdivrl
xchg
dec
and
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
sbb
jo
jle
jo
mov
sbb
stos
hlt
jnp
sbb
push
add
fsts
sbb
out
push
test
or
sub
and
mov
divl
mov
enter
dec
push
xlat
int3
mov
pop
or
es
test
ffreep
div
pusha
cwtl
fcomps
jl
aam
or
call
mov
cld
jne
jbe
or
in
push
fsubrp
es
push
inc
dec
cmp
data16
rcrl
ss
in
in
push
cmp
std
add
ds
mov
jbe
fdivrs
int3
insl
push
sbbb
addr16
mov
lock
cmp
aas
pop
push
aad
inc
cld
int3
addb
cmp
mov
cmp
in
push
jle,pn
add
mov
adc
and
mov
adc
rclb
jle
jle
sbb
in
lea
push
and
mov
aam
repz
test
nop
icebp
sbb
fldlg2
pop
int3
repz
nop
clc
pop
add
xchg
addr16
scas
and
adc
repnz
xchg
ds
inc
aad
fisubs
jg
push
outsb
movsb
jmp
sub
addr16
xor
popf
stos
mov
dec
lcall
lea
inc
movsb
mov
jl
fs
repz
sarl
pop
lock
or
cli
pop
sub
lahf
rcrl
fdivr
sbb
lcall
or
push
jne
in
xchg
out
mov
mov
aam
jecxz
test
in
jmp
or
data16
ljmp
inc
xlat
outsl
jnp
rcl
mov
mov
mov
pop
inc
mov
sub
push
push
xchg
xchg
insl
mov
inc
jmp
subb
gs
fucomip
pusha
inc
sub
dec
lret
js
outsl
jnp
out
adc
add
fstl
and
mov
mov
dec
shrl
jo
inc
shlb
sbb
cwtl
popa
repnz
bound
or
dec
sti
pop
shll
pop
ret
aam
repnz
and
mov
cmp
xchg
ret
mov
sbb
push
mov
and
cmpsl
cmpsb
push
movsb
inc
movsb
call
clc
mov
inc
ret
aam
inc
or
into
lcall
or
adc
das
movsl
inc
mov
stc
in
or
addr16
push
stos
xor
and
data16
adc
push
arpl
sahf
into
or
xor
xor
test
pop
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
cmpb
jg
mov
sahf
mov
ljmp
pop
inc
mov
repz
lods
rcl
sub
sub
or
pop
jns
pop
sbbb
and
jo
mov
inc
in
test
sbb
mov
jnp
mov
inc
add
daa
lock
fnstenv
insb
fidivrl
and
sbb
push
fnstcw
jg
ljmp
fisubl
clc
xchg
xchg
mov
mov
push
adc
jae
ds
adc
call
lret
repnz
hlt
mov
mov
sub
int
xlat
stos
lahf
filds
add
pop
sub
mov
xor
jb
mov
test
cmpsl
rcrl
jns
insl
mov
push
aas
mov
jns
or
cmp
mov
sbb
cli
mov
add
mul
xchg
lret
dec
xchg
adc
das
jmp
push
xor
push
dec
pop
pop
xchg
jbe
cmp
inc
push
cmp
jle
cltd
shl
xchg
cmp
mov
mov
in
mov
bound
inc
sbb
inc
and
and
repnz
dec
bound
pop
add
mov
xchg
fadds
xchg
stos
clc
and
mov
pop
imul
lcall
dec
sti
add
xchg
mov
ss
loop
fcomps
mov
iret
jne
sti
das
pop
aas
repnz
in
inc
cmp
push
add
jae
repnz
sbb
push
mov
mov
inc
mov
sub
stos
jno
mov
add
push
outsb
aaa
cld
clc
pop
cmpsb
pop
cltd
inc
les
pop
lret
cld
cwtl
sbb
add
sbb
stc
and
testb
test
xchg
rol
sub
stos
mov
xchg
sub
mov
out
xor
shll
push
adc
lret
add
inc
sbb
lret
pop
jg
or
dec
and
add
xchg
clc
mov
xchg
mov
outsb
xor
dec
mov
ljmp
xlat
adc
adc
roll
mov
inc
push
cld
cwtl
insb
sahf
and
adc
cmp
es
adc
sbb
adc
stc
es
lods
cmc
jb
pusha
jnp
icebp
sti
mov
nop
push
iret
dec
pop
in
in
into
push
in
add
call
xchg
idivl
inc
mov
stos
cmp
lret
lock
mov
inc
add
and
dec
enter
mov
or
lds
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
data16
adc
mov
arpl
mov
jl
adc
aas
add
ja
mov
or
fimull
data16
inc
mov
sub
ret
xchg
xchg
and
push
add
inc
andb
decb
mov
fistps
sbb
int
cld
shll
mov
xchg
adc
rclb
inc
dec
dec
adc
cmp
adc
loope
sub
lods
es
loop
pop
push
lds
cmp
imul
dec
divl
sbb
lds
add
and
sbb
rcl
dec
loope
roll
frstor
in
stos
lods
faddl
dec
jp
and
push
jno
fstl
int3
jne
mov
das
fisttps
xor
mov
xchg
cmp
pop
push
addr16
imul
xor
adc
and
outsb
xor
adcb
adc
push
icebp
ds
push
int
jns
jb
sbb
cwtl
imul
jns
shll
clc
jl
fldcw
jge
add
lock
jl
out
pop
in
mov
lock
mov
push
pop
xlat
inc
mov
js
in
pop
jmp
jb
sbb
stc
fsubl
push
jg
scas
sti
pop
xchg
sub
dec
lahf
cmp
xor
stc
adc
cltd
or
xor
mov
xor
xchg
scas
xorl
jne
cld
or
clc
push
cltd
in
pusha
jnp
loopne
in
and
aas
xlat
leave
les
loop
inc
cmp
jmp
aam
xor
je
fwait
pusha
add
dec
or
pop
xor
inc
daa
jbe
pushf
inc
cmp
jno
insb
cmp
add
mov
cmp
mov
mov
das
rolb
pop
pmulhw
xor
stos
pop
out
cs
and
mov
mov
pop
scas
call
jge
pop
push
fwait
inc
dec
or
ss
and
data16
dec
out
pop
cmp
mov
insb
cmp
mov
dec
stc
dec
and
aaa
mov
hlt
or
mov
std
faddl
dec
ds
sahf
outsb
lds
xor
int3
cmp
ficompl
dec
sbbl
out
mov
mov
jmp
xchg
xchg
xchg
cli
pop
dec
adc
jg
jecxz
sbb
shrl
jb
orb
xor
mov
neg
insl
stos
aam
push
xchg
ss
adc
cs
jmp
cmc
std
fs
jno
mov
mov
jg
mov
ljmp
pop
popa
aad
add
inc
pop
mov
outsb
fbstp
ljmp
movsl
sahf
ss
int3
pop
insb
jo
add
jg
scas
mov
into
jnp
inc
rolb
mov
cmpsb
fistpl
inc
xlat
lcall
jecxz
mov
add
pop
sbb
hlt
jge
ss
ss
and
loope
mov
jnp
push
mov
cld
aad
mov
push
add
xlat
mov
popf
jmp
mov
cltd
or
push
jl
mov
mov
sub
ljmp
int3
leave
sub
xlat
inc
push
jmp
stos
shrl
int
outsb
lret
add
mov
fwait
mov
outsl
jo
dec
add
out
loop
icebp
pop
aas
sub
jp
cmp
gs
addb
xchg
inc
sbb
ds
pop
xor
test
cmpsb
and
pushf
mov
push
repz
cmp
or
mov
popa
adc
pusha
sahf
jo
sub
mov
mov
xor
inc
shl
pusha
repz
rcll
mov
inc
cmp
into
into
cmp
xchg
stos
sub
sub
hlt
inc
adc
insb
jecxz
orb
mov
popf
push
sbb
imul
out
sbbl
nop
mov
pop
out
ret
mov
mov
ret
enter
or
ljmp
dec
out
cmp
adc
sbb
cld
add
movsb
mov
lret
xchg
daa
mov
push
mov
inc
fwait
pop
mov
push
push
cwtl
and
cmp
pop
inc
andb
test
in
sbb
or
shr
fdivp
sub
pop
inc
or
jno
mov
fs
lcall
mov
dec
mov
movsb
dec
lahf
jecxz
mov
pop
mov
fcoms
inc
cmp
imul
jne
jp
mov
sub
sbb
inc
ljmp
popf
cli
arpl
fcoml
pop
jbe
xor
movsb
adc
push
adc
sbb
inc
or
jne
stc
fstps
jg
push
jbe
adc
push
sub
sub
or
sbb
lods
je
mov
out
mov
out
rcll
mov
add
outsb
inc
insl
push
das
xchg
add
mov
adc
sbb
xchg
jl
xor
jge
mov
shll
outsb
in
movsl
outsl
push
inc
mov
into
jbe
cli
bound
fldenv
xlat
sbb
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
xchg
cmp
jo
jle
jo
stos
icebp
mov
jbe
aaa
inc
jle
imul
imul
cmp
hlt
aad
lods
add
sub
rolb
xchg
fldcw
pop
shrl
mov
enter
mov
test
mov
jb
xor
dec
mov
and
repnz
mov
or
fbld
lret
scas
cmp
movsl
lret
clc
clc
mov
outsb
pop
int
mov
test
sti
sahf
mov
jo
jb
add
roll
or
mov
jno
sbb
repz
mov
test
push
inc
and
push
repz
in
jle
xchg
jo
fiaddl
or
sub
sbb
dec
idivb
imul
jmp
aad
jl
inc
out
out
adc
out
cwtl
and
adc
lock
jle
shl
lock
pop
aas
cmp
push
stos
pushf
adc
andl
mov
orb
imul
or
pop
jo
ljmp
stos
bound
es
test
iret
pop
je
popa
enter
cmc
and
dec
pop
ret
leave
dec
rolb
jg
jp
push
fwait
loop
cmp
sbb
roll
jno
xor
add
mov
or
out
pop
adc
xor
mov
adc
or
gs
movsl
jecxz
add
adc
cmp
clc
and
xor
mov
xor
mov
inc
test
dec
xor
leave
faddp
cmp
cmc
xchg
and
repz
test
pop
cmp
lea
xchg
sub
loope
sbb
pop
dec
push
push
jne
lcall
in
aas
lahf
inc
cmc
xor
sub
sbb
adc
enter
and
fisttps
fsubrl
adc
int
sub
mov
inc
pop
dec
push
jp
mov
lret
test
ret
cmp
mov
imul
insb
lods
xchg
mov
repnz
das
ficoml
mov
stos
or
xchg
test
pusha
arpl
cmc
or
test
decl
push
xchg
xchg
arpl
jbe
mov
sti
mov
sbb
mov
lea
mov
shlb
xchg
loop
mov
mov
inc
pop
inc
xor
ficoml
mov
clc
mov
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
in
pop
sti
aaa
sbb
mov
mov
out
call
int3
lret
dec
je
leave
cmc
subl
dec
cltd
push
or
popa
rcrl
push
fdivrs
xchg
lret
sub
jecxz
adc
popf
js
xchg
inc
test
push
subl
ret
dec
ficoml
cmp
xchg
incl
jbe
test
cmp
jge
xor
nop
push
pop
repnz
pop
push
stc
fists
rcl
adc
push
xchg
shl
cmp
jns
gs
pop
and
jns
push
push
push
imul
addr16
rcrl
scas
xor
out
stos
adc
out
popa
push
xor
loopne
jo
bound
pop
shrb
cmp
jae
aad
movsl
loop
idivl
add
lds
sahf
imul
sbb
adc
jo
and
dec
in
cmp
jb
mov
cmpsb
mov
sub
push
daa
inc
mov
add
adc
sbb
xchg
fmuls
cmp
inc
ss
pop
movsb
in
xchg
dec
or
cli
and
inc
out
fbld
inc
mov
xchg
xchg
mov
sbbb
out
ret
inc
and
inc
add
push
out
enter
test
push
pop
stos
das
adc
adc
jnp
je
sbb
cwtl
pusha
imul
push
popa
fwait
or
loopne
and
cmp
pop
mov
jne
pop
cmp
gs
mov
jne
mov
shll
insb
inc
out
negb
cmp
xchg
fwait
out
addr16
jmp
add
shlb
add
sbbb
jl
outsl
pop
sti
cmp
push
in
sbb
sbb
and
in
inc
test
bnd
loope
pop
cmp
subb
push
adc
loop
fdiv
mov
jns
mov
xchg
inc
jo
outsl
inc
dec
cmp
mov
jo
rolb
xor
ret
fstps
insb
jp
or
call
mov
pop
pop
aas
fnsave
sbb
xor
sbb
out
scas
mov
xchg
cmp
push
add
mov
repz
mov
and
xchg
iret
cmpsl
in
adc
shll
out
movsl
mov
sub
cmp
sbb
xor
jnp
pop
and
scas
push
test
aam
mov
inc
mov
shlb
cmpsb
sbb
movl
pop
out
lcall
jge
enter
mov
mov
mov
cwtl
add
pop
mov
sbb
filds
add
fsubp
stos
mov
insb
leave
pop
sub
sub
jg
mov
mov
shrb
and
lcall
insl
push
gs
cmpsl
sbb
adc
pop
pop
or
inc
mov
pop
mov
and
aad
push
pop
fwait
cli
sbb
notl
dec
mov
fs
adc
out
jb
jns
mov
out
mov
popa
sub
sub
push
movsl
xor
std
or
adc
lret
test
mov
xchg
mov
addr16
xlat
fcmovnu
int
pop
sbb
cmpsl
mov
fcmove
lret
add
and
popa
loope
pusha
and
jmp
ss
ds
xor
outsl
and
push
push
jnp
lods
ljmp
mov
or
insl
ss
jge
sub
and
test
stos
aam
roll
jl
stc
pop
sti
push
idiv
stos
xor
adc
sub
inc
nop
movsl
add
push
inc
mov
loop
ja
mov
das
scas
das
scas
cs
cmp
jb
add
jp
loope
push
add
cld
movsb
les
jbe
jns
mov
dec
loopne
mov
scas
sub
imull
loope
add
pop
sbb
je
mov
and
xor
inc
cli
xor
sti
dec
add
popw
mov
dec
leave
jne
mov
lock
test
enter
fisubl
and
iret
or
arpl
jno
xchg
ret
mov
loop
mov
inc
pop
xchg
mov
dec
andl
pop
ds
pop
jno
jae
out
mov
je
out
inc
add
and
pop
add
jmp
jg
and
add
imul
mov
push
dec
fstps
or
cmp
lahf
call
xor
push
adc
loope
lds
xchg
addr16
add
push
xlat
sbb
out
xor
mov
mov
das
jl
es
sahf
mov
aas
gs
jg
std
jg
aad
inc
xchg
lds
cmp
mov
sti
add
and
cld
push
dec
test
xchg
jns
add
mov
fucomp
inc
cmpsl
or
out
adc
add
pop
mov
and
in
pusha
pushf
mov
mov
xlat
movsb
popf
ret
hlt
push
xor
push
shlb
shrb
addl
test
sti
je
mov
add
cmpsl
or
out
jg
aas
mov
cwtl
pop
setno
sbb
jmp
add
add
cwtl
dec
push
mov
pop
or
lock
cltd
push
jnp
dec
pop
fsubl
xchg
das
pop
outsl
mov
lahf
mov
xchg
pushw
push
pop
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
and
jo
jle
jo
fdivrl
insb
fiadds
xchg
jl
xchg
sbb
hlt
mov
pusha
subl
aam
push
and
notl
pop
movsl
cmp
pop
mov
lock
add
lds
push
call
insl
bndstx
mov
incb
fidivs
jo
xor
jp
and
mov
lahf
jnp
inc
xchg
dec
xchg
mov
sub
xor
adc
or
sbb
inc
adc
dec
jne
cli
push
add
sub
aad
cs
es
mov
lods
jecxz
inc
cmp
jg
sahf
dec
out
pop
icebp
shl
pop
push
inc
xchg
jp
cs
push
cwtl
mov
push
rdpmc
xchg
sbb
jge
cmp
dec
add
sbb
mov
into
pop
push
mov
cltd
push
xchg
sub
stos
xor
loop
aas
jbe
pop
loopne
fldenv
rcr
inc
cmpsb
std
push
int3
jp
sub
scas
cmp
mov
push
xchg
and
movsl
sahf
stos
pop
jge
adcl
scas
xor
aam
sub
cmp
push
leave
das
add
adc
sub
cli
dec
lret
idivb
cmp
ret
adc
xor
sub
add
insl
aas
jns
or
cmp
setne
mov
ficomps
mov
out
inc
in
cmp
xchg
call
jg
sub
sar
jo
ret
daa
in
outsb
lea
mov
shlb
out
inc
add
push
popf
inc
mov
icebp
jge
sub
sub
stos
std
insl
jecxz
xor
fwait
in
fsubrl
adc
sbb
xor
out
mov
adc
mov
inc
jg
out
int3
inc
or
or
bound
int
mov
pop
pmulhuw
mov
aam
in
aas
sub
aaa
shll
mov
test
pop
cmpsb
adc
pusha
cmpsl
lods
and
mov
push
mov
or
add
mov
push
and
sbb
push
push
sub
scas
inc
loope
and
into
shll
cmp
cmp
sbb
in
cmpl
mov
sub
sub
std
or
arpl
test
sbb
movsb
or
jb
aaa
or
dec
mov
jecxz
mov
fdivs
fistpl
pop
mov
and
xchg
sbb
xchg
jge
mov
xchg
jle
adc
dec
and
dec
movsb
push
dec
nop
je
mov
mov
xchg
aaa
sub
lret
xlat
mov
lret
fmuls
xor
mov
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
