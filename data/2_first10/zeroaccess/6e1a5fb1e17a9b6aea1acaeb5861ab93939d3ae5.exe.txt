push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
sarl
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
movsl
pushl
rcrl
das
daa
dec
sub
in
xchg
jne
pop
gs
jb
cmp
push
jb
inc
xor
add
jns
pop
lret
mov
sbb
sbb
mov
loop
mov
xor
aas
jnp
mov
sub
sbb
lret
scas
rorl
or
sahf
xor
and
adc
dec
mov
mov
sub
push
and
outsl
mov
fimuls
fisttpl
xlat
dec
cltd
pop
test
adc
adc
cli
xor
fstl
sbb
repnz
cmp
lock
pop
lcall
mov
sbb
jo
adcb
push
or
xchg
cmc
adc
sub
push
in
imul
outsb
cmc
lds
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
push
rcll
cli
jg
jle
jg
jle
inc
sub
iret
cmpsl
xor
add
outsl
mov
mov
icebp
imul
lds
xchg
adcl
arpl
xchg
stos
xlat
aam
pop
ja
pop
pop
dec
xchg
sbb
stos
xor
xchg
jbe
push
inc
leave
shll
jmp
sbb
cmpl
je
out
pop
daa
fmull
xchg
mov
sar
insl
fdivs
aam
mov
ret
in
gs
and
and
je
mull
test
jmp
inc
adc
adc
ds
leave
mov
das
daa
das
jge
movsb
mov
xor
xor
mov
rcrl
jle
mov
int
popl
aas
add
ss
and
xlat
lea
and
mov
stos
cmp
mov
mov
adc
xlat
add
out
xor
mov
leave
add
adc
xchg
and
scas
or
aas
rorl
cltd
dec
daa
loope
jne
test
xchg
dec
push
dec
xchg
bound
jno
dec
test
and
inc
sar
push
pushf
cmp
leave
jb
jecxz
adc
pop
and
jle
outsb
mov
xchg
xchg
cli
pusha
addr16
sbb
jg
repz
insl
fsub
mov
sbb
pop
imul
mov
inc
je
pushf
fistps
outsb
test
mov
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
fldl
jge
jle
jg
jle
mov
pop
xor
mov
dec
test
sub
loop
push
aas
xor
cmp
je
int3
xchg
jmp
imul
lds
or
pop
lret
scas
xchg
in
cld
mov
aam
dec
aaa
adc
pop
sbb
dec
lcall
dec
add
push
mov
insl
loope
sahf
fidivs
pop
cwtl
push
out
int3
or
jecxz
push
mov
das
xor
dec
subl
test
ljmp
mov
or
dec
adc
jmp
test
mov
shrb
lock
and
cmc
sbb
sub
shr
adc
sarb
call
daa
test
sbb
lahf
jl
gs
gs
sub
xchg
adc
testl
icebp
ret
push
ret
popf
pop
in
or
pop
daa
cmpsb
leave
aam
loope
push
sub
subb
sbb
fsubrl
push
ret
pop
loop
pop
mov
cmp
orl
cwtl
push
mov
pop
jo
inc
sub
out
aaa
cmp
adc
dec
xlat
cmpsl
push
adc
jge
fs
jne
js
xchg
sbb
mov
lock
xchg
es
fcoms
sub
and
mov
clc
shrb
push
mov
push
es
inc
mov
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
pop
jo
jp
jle
jg
jle
sbb
aad
mov
into
jle
xchg
lds
aaa
mov
add
sahf
pushf
mov
lret
sub
lock
test
out
lea
test
pop
lahf
stos
push
hlt
sbb
mov
or
stos
cmpsl
xchg
adc
mov
sbb
pop
out
les
mov
ret
jno
adc
push
addr16
xorl
dec
inc
xor
test
mov
scas
jecxz
int
xor
nop
push
in
ret
jo
push
lret
roll
sub
sbb
cmp
int
sbb
jmp
jns
int3
pop
pop
cmp
in
cmp
jp
push
cmc
push
inc
roll
popa
adc
leave
mov
mov
pop
and
xor
dec
pusha
adc
pop
ljmp
lcall
mov
inc
jg
insl
or
and
out
pop
subl
mov
dec
jg
pop
mov
pop
jno
icebp
movsl
sub
or
cmpsl
ds
xlat
fcomp
lcall
push
add
rcrl
rorb
mov
out
jb
mov
sbb
pop
les
cmpsb
jbe
sbb
movsl
pop
mov
cltd
xchg
mov
mov
pop
xor
push
or
mov
push
cmpsl
cwtl
inc
ljmp
dec
mov
popa
ret
bound
add
add
jmp
push
dec
sti
mov
jle
cli
jg
jle
lds
jl
cmpsl
into
xchg
xchg
mov
xor
ret
sbb
adc
push
pop
pop
fmuls
jne
dec
mov
sub
jl
or
cmc
xor
and
jmp
imul
cmpsb
aad
xchg
inc
push
fwait
inc
or
xchg
enter
pop
repnz
mov
mov
sar
mov
fsubl
adc
lock
sub
ss
and
mov
sbb
out
mov
mov
lock
mov
add
aam
jle
dec
cmpl
inc
sub
and
sti
imul
mov
and
xchg
cmp
and
in
or
mov
into
cmp
pop
into
lret
std
dec
sub
push
and
add
rcl
xor
fdivrs
popa
or
fistpl
xor
add
jp
repz
out
int
test
loope
fstl
mov
adc
jp
mov
pop
aas
call
fstl
loopne
imul
test
aam
mov
lods
jmp
loop
pop
mov
sub
dec
push
sahf
jbe
mov
test
outsb
xchg
sub
bound
adc
pop
icebp
adc
adc
mov
cmp
test
ja
push
mov
fucomi
into
cmpsl
aaa
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
std
add
jns
jns
jle
jg
jle
cmp
push
inc
out
fs
and
sbb
push
pop
outsb
jns
mov
fidivl
fldenv
lcall
sbb
jb
pop
mov
xchg
movsb
aaa
or
imul
cli
and
scas
scas
in
dec
mov
mov
push
not
and
enter
dec
lds
les
cli
xor
cwtl
jno
adc
xor
jae
sar
mov
jp
sbb
or
leave
pop
push
dec
cmpsb
push
mov
cs
lods
aas
imul
dec
loop
pop
push
repnz
mov
mov
scas
sbb
sub
fwait
jae
cld
lret
jg
cmpsb
insl
sbbb
fsubs
andl
imul
scas
or
sub
inc
mov
and
xchg
das
adc
xor
add
sub
mov
mov
shrb
fcmovbe
mov
push
negb
xchg
cmp
cmpsl
mov
mov
shll
repz
int3
push
out
js
fsubr
jb
pusha
repz
lahf
das
pop
outsl
xchg
mov
daa
mov
mov
add
gs
das
dec
lds
mov
nop
aaa
hlt
inc
out
inc
fldenv
add
pusha
fwait
pop
fs
and
test
loope
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
hlt
push
pop
jle
cli
jg
jle
sbb
sbb
adc
cmc
popl
cs
gs
xchg
imul
and
mov
loopne
cmp
out
mov
loop
sbb
jbe
imulb
pop
aad
repz
fdivrs
mov
insb
ds
and
das
scas
dec
add
inc
fdivp
add
lods
push
xchg
sti
mov
pop
xor
sahf
into
repz
out
add
lret
push
adc
dec
pushf
aas
repnz
pop
push
jae
xchg
jns,pn
mov
lahf
or
js
adc
loopne
popa
aam
std
sbb
mov
sub
repnz
fbstp
or
mov
or
jecxz
dec
adc
and
bound
jnp
inc
movsl
inc
cmpsl
popa
fidivrl
jle
into
sbb
popf
and
sub
cmp
ret
repz
pushf
pop
jno
call
hlt
jecxz,pn
add
add
pop
sbb
xchg
jge
push
imul
lahf
push
das
jnp
push
xor
inc
adc
xchg
adc
mov
adc
sub
inc
push
xor
push
mov
scas
rolb
add
xorl
es
add
sbb
inc
dec
mov
mov
push
xchg
loope
xchg
mov
fcmovnb
ret
sub
jg
shll
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
sarb
mov
imul
mov
fwait
rcrl
fidivl
fsubrl
and
cmc
and
pop
imul
push
sbb
xchg
out
sbb
mov
pushf
test
frstor
pop
insl
and
jns
int3
inc
cmpsb
lods
into
icebp
pop
pop
les
popf
outsl
pop
jns
and
fwait
and
test
pop
dec
or
andb
setp
bound
add
jo
cpuid
xchg
or
cmpsb
std
stos
loop
xor
outsb
cmc
adc
orl
pop
lods
sub
adc
call
jbe
inc
in
push
test
mov
repz
rep
mov
ret
or
shll
mov
lret
maxps
pop
clc
sub
cmc
push
adc
mov
ret
push
xchg
rcrl
push
add
mov
pop
jmp
xchg
sub
mov
bound
rorb
mov
jl
inc
sub
test
add
jne
aam
mov
loope
cmp
xchg
repnz
outsb
scas
dec
sbb
in
mov
push
icebp
mov
inc
lret
cwtl
pop
das
mov
test
inc
popa
test
and
push
les
add
aam
imul
or
shrb
mov
mov
pop
ret
scas
xchg
aam
xchg
sbbb
xor
pop
movsb
push
and
adc
push
push
mov
add
jmp
cmc
dec
and
jno
push
mov
mov
xlat
ja
add
cli
jg
jle
inc
cmp
pop
mov
ja
jno
fidivl
cmpsl
dec
pushl
xlat
loope
inc
mov
je
scas
aaa
std
xchg
xlat
jecxz
and
push
inc
cvttps2pi
ja
lods
push
addl
inc
arpl
inc
mov
and
jmp
jno
cmpsl
fdivrl
loope
sti
loop
push
or
or
xchg
jp
fdiv
test
popf
push
xchg
ljmp
sbb
andl
stos
cli
repz
in
push
imul
outsl
add
pop
clc
mov
push
or
test
sbb
mov
sub
mov
icebp
test
cli
pop
and
push
aam
mov
out
das
inc
ret
adc
insl
xchg
mov
xchg
rol
mov
inc
pushf
adc
dec
insl
mov
jle
insb
leave
lret
mov
mov
test
roll
mov
stos
testl
stos
inc
xchg
addr16
pminsw
and
mov
ljmp
jae
and
mov
imul
jne
lods
arpl
lahf
cmp
push
leave
jno
mov
add
and
fwait
sub
lock
cmp
jnp
addr16
iret
addl
push
jae
filds
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
inc
xor
push
lcall
jle
lret
gs
das
ret
addr16
out
je
sarl
xor
loopne
ss
outsl
int3
cmp
mov
dec
ficoml
aas
or
mov
test
outsl
into
ja
or
scas
lds
mov
push
inc
dec
pop
ret
mov
jb
ja
loopne
dec
xchg
xor
push
and
mov
add
mov
jmp
jne
aam
sbb
andb
loope
aaa
xor
inc
sub
and
stos
mov
jecxz
sub
add
test
pop
adc
or
dec
or
adc
scas
jne
xchg
xchg
inc
inc
push
ret
dec
cmp
xor
dec
xchg
cmp
je
scas
mov
mov
mov
push
rorb
or
adc
pop
adc
xlat
call
xlat
and
mov
xorb
mov
stos
and
js
and
test
mov
aas
in
inc
pushf
add
jmp
pop
rcr
mov
dec
mov
lods
mov
lods
loopne
cmp
fnstcw
push
xchg
sbb
mov
mov
negb
pop
xchg
or
subl
push
loop
cwtl
jb
pop
fldl
mov
push
out
insb
in
push
lock
lods
cmp
or
lds
sub
or
pop
dec
insl
add
pop
out
rolb
stc
mov
shl
out
sbb
xchg
mov
jge
int
jb
out
cmpsl
lret
cmp
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
xor
sbb
add
cli
jg
jle
cltd
jp
push
mov
popf
fdivl
cmc
mov
push
es
jb
loope
repnz
outsb
jns
mov
jle
dec
push
fistpl
fldcw
movsb
scas
rclb
aad
push
cmovae
jge
lods
insb
adcl
jo
jle
cmp
xchg
xchg
int
mov
add
and
arpl
adc
push
pop
fimull
mov
cli
hlt
mov
repz
sub
and
je
lods
xor
mov
mov
inc
cmp
jecxz
ljmp
loopne
shlb
sub
out
jne
call
dec
dec
fisttpll
frstor
sub
dec
ds
in
cwtl
mov
pop
or
loope
inc
imul
lret
pushl
cltd
jbe
cmp
enter
loopne
cmp
popa
push
enter
add
mov
pop
mov
cmc
xor
out
sbb
inc
fprem
sbbb
add
popf
push
mov
stc
inc
inc
lods
icebp
data16
mov
lret
scas
or
repnz
int3
icebp
sub
hlt
ja
rcrb
repnz
out
sbb
lods
gs
sbb
xchg
or
push
test
jne
xor
push
and
iret
outsl
push
and
rclb
rcr
decl
mov
subl
sarb
adc
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
xor
andb
jle
inc
stos
or
add
out
mov
pop
fsts
jns
mov
cltd
inc
pop
adc
sbbb
pop
add
stc
divl
jle
push
das
test
lods
daa
inc
push
loop
and
out
es
push
lea
jecxz
orb
fst
movsb
sbb
mov
xlat
inc
out
in
addw
cltd
and
fmull
cmpsl
cmpsb
mov
inc
xchg
pop
imul
js
mov
inc
cmpb
imul
les
int
inc
sbb
mov
inc
lahf
jecxz
push
inc
movq
xor
cltd
mov
inc
test
shlb
inc
mov
lret
xchg
or
xchg
jmp
ret
fadd
fdivr
cmp
popa
mov
or
mov
xor
cli
leave
jns
sub
in
int3
mov
mov
lret
and
jp
and
in
scas
push
xchg
dec
dec
cmc
mov
pop
sbb
lea
lcall
and
mov
sbb
test
xor
icebp
scas
sbb
pop
add
je
lret
or
and
repz
push
arpl
insl
mov
les
fcoms
cmc
pop
out
stos
xor
ljmp
aam
mov
ret
jo
cltd
mov
sub
clc
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
fldl
out
or
jle
jg
jle
pushf
sbb
inc
xor
mov
loop
jae
and
pusha
sahf
lcall
inc
jl
and
push
fwait
imul
cwtl
bound
mov
mov
shlb
popa
sarb
and
pop
sahf
or
daa
ret
jb
sub
cs
lret
rcrl
add
movsl
ficomps
inc
ss
and
repz
insb
xor
repz
mov
jle
out
int3
aam
fucom
pop
sub
sbb
mov
test
mov
jge
dec
lret
pop
or
xchg
add
nop
movsb
inc
pop
dec
add
cltd
sti
aam
mov
imul
movsl
out
es
jo
or
idiv
imull
sbb
sub
sub
ljmp
sbb
mov
imul
and
jg
loopne
call
jp
push
ret
movsb
pop
dec
jp
sbb
sti
jle
into
popa
cmp
push
ljmp
fmulp
outsl
push
ss
cwtl
shrl
xchg
ljmp
push
nop
js
mov
in
insb
cmp
into
dec
negb
aad
fninit
jne
imul
pop
shrl
icebp
sahf
cli
push
test
mov
and
inc
jnp
and
cmp
push
jne
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
or
jle
xor
cmp
leave
sub
mov
lret
sub
or
push
hlt
lret
or
mov
mov
pop
inc
pop
xchg
stos
cmp
push
jg
incb
adc
mov
inc
pop
cmc
out
sbb
cmp
test
or
roll
push
or
les
add
addr16
xlat
xor
arpl
mov
cmp
arpl
add
cwtl
aas
xor
push
shll
jmp
fwait
repz
pop
xchg
scas
mov
mov
add
sti
idivl
jle
and
pop
rcrl
stos
movsl
cmp
aad
xor
mov
in
daa
loop
dec
mov
repnz
std
ret
fadds
je
inc
mov
dec
sbb
adc
pop
push
mov
dec
shrb
fsubr
push
shrl
push
imul
mov
adc
lret
mov
cltd
push
dec
cmp
jb
fdivrs
add
mov
dec
add
mov
pop
ss
add
lock
add
or
ss
cmp
out
push
out
push
cmp
mov
xchg
je
ffreep
loope
inc
sbb
mov
add
push
or
xor
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
in
xchg
push
add
or
cli
jg
jle
call
ss
bound
dec
in
cli
aaa
mov
jp
mov
popa
and
lret
imul
jp
dec
fimull
lahf
xchg
into
orl
mov
sub
pop
in
or
sbb
cs
insl
jae
jno
inc
xor
scas
jb
cwtl
andl
xor
and
mov
mov
movsb
mov
cmp
cmp
loopne
jne
lock
les
mov
xor
xor
adc
sahf
out
scas
jecxz
mov
call
pop
pushf
mov
push
sub
roll
push
mov
in
jbe
int3
sbb
mov
mov
loopne
stc
cmp
ljmp
dec
ss
jmp
xorb
sbb
mov
add
xchg
inc
call
xchg
xor
mov
outsb
repnz
add
pop
sbb
js
inc
call
mov
ficompl
loopne
add
jns
mov
mov
and
insl
add
inc
pop
arpl
je
xor
leave
xor
add
pop
inc
cmp
aas
imul
pop
sahf
or
shrb
xchg
sahf
adc
dec
aad
out
pop
fs
mov
nop
inc
pop
stc
jle
pop
in
push
mov
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
or
cli
jg
jle
filds
jg
or
loope
lds
cmc
pusha
aas
push
out
sbb
xchg
gs
xor
aas
cmp
daa
es
jp
sbb
les
cmp
push
xlat
imul
and
fisubrs
add
repnz
into
popa
and
shrl
pop
testb
sub
xor
mov
ret
in
mov
bound
pop
pop
mov
inc
out
icebp
mov
xchg
xor
popf
jbe
test
xchg
imul
mov
sbbb
fstl
or
out
out
inc
jge
sub
add
xor
dec
loopne
ret
lods
jmp
mov
mov
into
push
inc
or
insb
std
and
or
and
lods
ss
xchg
jmp
shl
loope
and
pop
pop
in
mov
imul
cmp
flds
mov
pushf
fdivrs
mov
pushf
xchg
add
mov
and
mov
in
int3
jg
jmp
hlt
popf
inc
lock
push
js
setb
jmp
std
out
mov
mov
mov
dec
jecxz
rol
loop
sti
inc
and
adc
push
movsb
lcall
mov
mov
xor
frstor
push
and
xor
movsl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
add
jle
jg
jle
xchg
inc
lahf
mov
and
pop
mov
push
mov
adc
cmpb
dec
in
popf
mov
mov
push
sbb
dec
lcall
lcall
xor
ja
pushl
negl
rcl
inc
outsl
jnp
sbb
stos
leave
dec
inc
andnps
in
out
push
stos
sbb
inc
out
scas
xor
xchg
testb
ficoml
lods
loop
test
or
and
sub
int3
mov
jb
loope
fs
addr16
test
frstor
cmpl
cltd
sbb
or
movsb
sub
jbe
das
bndldx
sub
push
loopne
fdivrs
xor
adc
cld
subb
sub
push
mov
sahf
xchg
add
int3
dec
inc
push
ds
mov
sbb
scas
in
xchg
fneni(8087
cli
fildll
rcrb
xor
cmpsb
and
jl
pop
xchg
mov
arpl
cli
lcall
js
pusha
pop
mov
dec
pop
xchg
xchg
cmp
xchg
pop
jl
pop
out
sarb
adc
cmpl
or
fisubs
inc
xor
cmp
jecxz
mov
hlt
lds
pop
shlb
mov
xchg
dec
push
sbb
mov
add
pop
cld
call
mov
mov
add
pop
jmp
add
mov
adcb
out
pop
jle
cli
jg
jle
push
mov
jae
daa
push
or
adcl
stc
jo
adc
inc
and
movsl
mov
push
sbb
or
xchg
loopne
push
or
sbb
inc
test
jmp
rorl
add
inc
ret
mov
xchg
hlt
aad
daa
mov
push
and
loopne
dec
jmp
rolb
inc
lods
fsubrl
mov
mov
cmc
dec
std
movsl
sbb
add
int3
push
sarl
inc
dec
adc
dec
fcomps
xor
subb
add
jbe
cmpsl
mov
jle
lcall
in
mov
iret
pop
cli
xchg
gs
mov
pop
daa
jle
sub
xor
sub
cmpsl
pushf
shl
pop
fiadds
xchg
into
xor
scas
popf
sahf
adc
hlt
fbld
lahf
mov
or
or
into
push
jbe
push
and
pushf
ret
or
enter
pop
pop
mov
stc
fwait
pushf
mov
pushf
js
rcrb
push
xor
mov
fwait
and
add
out
imul
mov
cmp
cmpsl
and
mov
jnp
mov
mov
mov
ror
test
nop
sbb
cltd
xchg
dec
inc
adc
rorb
inc
or
lret
aaa
mov
test
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
adc
adc
jle
xorl
xor
in
push
lret
add
adc
pop
clc
inc
sahf
repz
sub
fnsave
icebp
cmpsl
jmp
roll
ret
xor
push
add
iret
test
push
xor
mov
xchg
xor
inc
addr16
sub
lret
jnp
sub
ljmp
add
cmc
aad
pop
fadd
mov
mov
jmp
stos
adc
inc
repnz
mov
push
mov
dec
lahf
dec
int
and
inc
fsubs
add
add
repz
xchg
or
mov
mov
adc
xchg
ret
dec
insb
pusha
mov
cld
cwtl
lret
cmpsl
int3
mov
mov
jecxz
mov
add
add
adc
dec
into
jle
lock
adc
fdivr
call
fidivl
pop
mov
jp
aad
mov
or
pop
data16
js
out
pop
imul
xor
mov
adc
mov
xor
dec
mov
sbb
movsb
fimull
aad
cmp
push
orb
cld
loope
inc
jg
adc
xchg
sahf
and
movsb
lds
or
cmp
je
orb
sub
add
lods
push
das
orb
pusha
xor
xchg
xchg
xchg
int3
movsl
pop
loop
imul
xchg
xlat
or
adcl
outsb
rcr
pop
or
mov
fadd
rorb
mov
outsl
jp
push
cmp
test
sub
mov
and
sbb
push
and
xchg
xchg
xchg
inc
inc
jae,pn
sub
push
rcl
mov
push
mov
mov
test
add
mov
add
stc
or
mov
loop
push
push
mov
add
mov
jb
sahf
shll
adc
xor
add
xchg
ret
addl
in
stos
adc
cltd
rclb
add
jns
push
jg
mov
mov
push
nop
arpl
mov
fiadds
into
push
dec
and
push
std
or
dec
inc
mov
inc
pop
insb
dec
ret
mov
push
cs
sbb
adc
in
dec
iret
inc
into
dec
rorb
add
dec
fadds
lock
mov
and
sub
test
mov
xchg
push
and
pop
test
cmpsb
sub
mov
rdtsc
das
pusha
adc
movsl
jne
aaa
cwtl
xor
mov
fwait
stos
sub
test
lret
mov
mov
and
iret
push
pop
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
cmp
and
jle
pop
jl
jle
aad
and
cmp
test
sbb
cmpsl
push
rcl
ret
pop
xor
push
insb
stos
mov
or
xor
xchg
outsw
fcompl
scas
push
scas
in
es
scas
mov
jae
mov
addr16
xchg
sbb
mov
xchg
ret
inc
sti
and
xchg
mov
jle
sahf
stos
and
cmpb
jecxz
insl
jb
dec
out
cmpsl
jge
cli
add
inc
mov
xor
rorb
pop
mov
push
jecxz
dec
je
cmp
repz
push
jo
sbbb
push
into
mov
and
fiaddl
fsubs
mov
pop
push
icebp
xchg
hlt
xor
sahf
mov
xor
in
jp
inc
ja
xchg
jle
xor
jae
nop
mov
jp
xchg
or
orl
sub
cwtl
shll
into
dec
jmp
movsl
dec
pop
xor
stos
and
cwtl
sub
fs
xor
orl
inc
pushf
sahf
or
enter
sbb
inc
scas
or
add
dec
mov
cmp
mov
sarb
aad
testb
inc
inc
cvtps2pi
jb
xchg
enter
and
jl
push
neg
or
xor
loop
cmp
out
dec
mov
mov
shlb
sub
mov
xchg
loop
sahf
mov
dec
stc
jbe
sbb
jge
jae
sub
push
mov
sbb
push
movsb
inc
popf
mov
sbb
push
or
lods
out
cmp
icebp
and
fwait
mov
mov
outsb
iret
gs
jl
push
ds
ljmp
arpl
lea
mov
sbb
cmp
inc
fs
pop
outsl
cmc
cmpsb
enter
jmp
xchg
rorl
jg
inc
pop
popf
push
pushf
cltd
and
mov
push
mov
cmp
stos
test
xchg
stc
stc
push
xor
xor
das
mov
fcmovbe
push
jl
movsb
dec
pop
out
xor
mov
orl
stos
pop
cwtl
aad
repz
mov
cmp
mov
nop
out
fldl
aaa
and
xor
fisttps
cmp
push
bnd
cmp
xor
sub
lret
aaa
push
xchg
and
mov
xor
inc
push
add
lret
clc
push
repnz
cmp
adc
push
sahf
adc
jp
mov
and
jb
mov
jp
inc
jp
and
push
ss
orb
arpl
fwait
mov
test
add
popl
outsb
rcr
pop
xor
fwait
xchg
mov
mov
lods
sbb
push
mov
in
dec
jle
push
daa
cld
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
push
clc
or
jle
pop
jl
jle
in
iret
xchg
es
cmc
out
incl
fiaddl
sahf
cmpsl
pop
nop
xor
mov
fdivrl
test
xor
jl
loop
and
enter
mov
mov
sub
mov
rorl
fsubs
inc
push
imul
cmpl
fst
stos
sub
loope
fisttps
pusha
mov
cmpl
faddl
mov
xchg
fsubl
shll
ss
add
mov
mov
repz
enter
inc
dec
and
popf
mov
fistpll
or
xor
loopne
les
lret
shrl
adc
push
xlat
add
cli
pop
ja
cmpl
sbb
push
add
fistps
enter
add
repnz
mov
cli
pop
dec
mov
cltd
add
sub
push
repnz
stos
movsb
sub
push
push
ljmp
lea
daa
adc
mov
ja
sbb
stc
ss
roll
insb
int3
jg
xor
xor
je
rorb
push
sbb
jp
or
xchg
loop
mov
loopne
es
out
sub
jg
sbb
fsubrl
xor
xor
je
push
sbb
jl
in
and
es
rcll
and
add
jbe
and
jb
cmp
sub
xchg
rclb
cmpsl
loope
popf
or
movsl
push
jge
clc
sub
pop
cmp
lods
cmp
push
dec
lret
scas
mov
das
mov
gs
cltd
loop
jae
repz
sbb
es
inc
mov
or
mov
cli
cmp
mov
and
adc
jbe
mov
mov
mov
incl
movsl
cmp
pusha
rcl
rcll
push
repz
loope
out
outsl
push
icebp
clc
mov
imul
mov
fmull
dec
adc
xor
adc
jl
test
cli
pop
jle
fsubrl
or
sbb
icebp
out
inc
lahf
pop
stc
repnz
jae
gs
stos
xchg
fwait
xor
loopne
sahf
mov
pop
ss
mov
or
int
clc
dec
inc
inc
aam
into
outsb
xor
mov
xor
push
cmp
popf
sbb
xchg
iret
xor
jp
out
jl
in
mov
adc
insb
andb
add
mull
inc
lret
rcrb
out
add
fwait
lldt
in
mov
and
jb
push
lods
push
arpl
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
mov
jle
jl
jle
pop
dec
ja
es
pop
sub
es
pop
aaa
lods
hlt
popf
xor
nop
sti
rcrl
call
sbb
fcoms
push
ret
mov
stos
dec
ljmp
imul
pop
mov
in
and
mov
in
push
movsl
add
mov
ljmp
jl
repnz
popa
lds
add
inc
inc
daa
jmp
cmpsb
add
daa
pusha
fwait
inc
xlat
scas
dec
and
lock
leave
aad
dec
aaa
dec
adc
lea
pop
dec
outsl
pushf
mov
and
testl
adc
ret
divl
inc
cmp
in
inc
xor
rcrl
dec
gs
and
jne
push
fisttps
sbb
pop
rcrl
scas
mov
aam
push
xor
mov
cmp
mov
in
jno
or
mov
pop
aas
rcrl
jg
loopne
sarl
je
push
into
dec
out
cltd
sub
xchg
aam
into
mov
adc
xor
leave
subb
adc
test
dec
imul
mov
xchg
adc
xor
xchg
push
lcall
xor
test
iret
cmp
inc
inc
adc
pop
es
adc
push
adc
mov
punpckhdq
add
cli
fmull
test
int
movsb
cmpb
mov
notb
adc
or
and
or
lock
scas
adc
lcall
dec
xor
sar
add
inc
add
out
test
and
mov
bound
mov
and
stos
push
ljmp
scas
or
xchg
test
pop
xor
xlat
jmp
mov
mov
pop
icebp
pop
pop
movsl
inc
sbb
cmp
add
popf
mov
jb
sbb
or
leave
loope
lret
stc
mov
mov
xchg
sbbb
cmp
pop
aas
fst
and
outsb
mov
inc
xchg
icebp
fimuls
movsb
fldcw
mov
int3
dec
in
xorb
xchg
adcb
addr16
mov
mov
in
rol
pop
rorb
adc
pop
hlt
mov
faddl
pop
stc
add
add
stc
les
xor
shlb
sub
jnp
and
movsl
push
push
xor
xor
add
add
add
jae
mov
fisttps
sub
mov
js
fwait
aas
movb
sbb
clc
jmp
add
dec
popa
jno
jne
xor
jle
cs
jl
sbb
pop
jl
jle
cmpl
pop
push
sub
insb
sbb
ret
push
or
xchg
push
pop
outsb
inc
movsl
sub
dec
out
fwait
addr16
dec
inc
ficoml
xor
xchg
roll
dec
sbb
dec
in
int
push
or
sbb
shll
je
and
mov
int3
pop
pop
dec
add
pop
sbb
jge
dec
sbb
pop
pop
or
imul
ja
lds
fstpt
cmp
loop
sub
or
sbb
lock
cwtl
arpl
jge
xlat
mov
or
lret
out
and
pop
out
addl
or
xchg
inc
mov
sub
insb
fidivl
lds
movhlps
clc
mov
das
scas
inc
mov
dec
inc
sbb
aas
fisttps
inc
dec
push
in
xor
push
inc
call
xchg
adc
jle
ret
sbbl
stos
mov
mov
add
xor
daa
lret
and
jl
call
mov
pushf
mov
mov
xor
test
inc
outsl
or
pop
cwtl
in
movsl
sub
rol
enter
sbb
add
dec
and
adc
dec
addr16
xchg
aad
into
adc
shrb
pop
mov
cli
popf
jg
cmp
enter
add
lds
lret
sbb
sub
sub
dec
push
or
and
outsb
and
mov
lods
mov
xor
call
les
push
pop
and
je
inc
pop
enter
arpl
xorl
pop
hlt
fwait
das
imul
adc
xchg
pop
dec
pop
mov
out
sti
dec
sub
pop
xchg
cmp
shll
sbb
std
jno
and
cmp
outsb
mov
add
add
jle
aaa
push
xor
les
xchg
mov
rorb
sub
pop
or
mov
or
and
cmp
cmpsb
into
xchg
adc
mov
mov
jp
fistl
mov
sti
or
pusha
nop
jb
xor
push
xchg
jge
inc
stos
jmp
xor
sub
mov
or
pop
scas
scas
cmp
aam
fucomi
and
sub
loopne
pop
jns
push
scas
lahf
xor
stc
add
adc
cwtl
iret
jmp
call
cld
push
out
and
jl
fdivs
roll
out
repnz
sbb
jne
int3
leave
xor
cmp
pop
cmp
dec
insl
xchg
jnp
daa
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
mov
daa
jle
pop
jl
jle
xchg
ljmp
xor
in
push
jmp
shrl
push
sbb
cmp
pushf
mov
movb
cmp
and
inc
dec
in
sbb
push
xchg
icebp
mov
xchg
into
incl
mov
fsubs
jae
mov
adc
imul
push
mov
or
xchg
inc
hlt
push
shll
pop
jns
ljmp
dec
ret
push
jl
xor
repnz
xchg
int3
sti
and
out
mov
mov
xchg
inc
out
js
lods
lea
inc
mov
xor
dec
test
push
pop
push
adc
xchg
jecxz
cltd
or
add
push
cltd
push
fsts
sahf
shll
mov
addr16
lods
hlt
jb
or
imul
loopne
ret
dec
fsubl
stos
outsb
cltd
test
es
stos
std
aas
pop
inc
lock
test
dec
sbbb
mov
mov
inc
pop
aas
sahf
xor
mov
sti
push
inc
mov
lret
mov
clc
xchg
push
push
jmp
dec
pusha
and
dec
inc
mov
jne
or
in
add
xor
pop
mov
fwait
movsl
fsubrp
inc
popa
in
fwait
insl
es
ds
ljmp
test
sub
sbb
or
scas
lea
dec
idivl
mov
das
dec
rorb
inc
cld
lea
shrb
mov
mov
xchg
jp
int
orl
popf
jne
aad
jp
mov
add
test
ds
insl
dec
imul
inc
lahf
jle
mov
and
fldl
fistl
jl
aam
int3
adc
mov
shlb
outsl
xchg
xor
popf
orb
cmpl
push
arpl
repnz
xor
out
add
sahf
addr16
scas
dec
jle
shl
fsub
pop
test
scas
adc
test
and
jbe
mov
xor
daa
inc
and
cltd
ret
adc
adc
and
xchg
pop
sbb
pop
fs
cmp
mov
or
push
and
pop
mov
push
adc
addb
jae
jp
inc
dec
scas
stos
pop
popf
mov
mov
sahf
out
fsubrl
stc
dec
xorl
xor
leave
fwait
inc
clc
xchg
lahf
shrl
fadds
adc
dec
insl
push
out
sbbb
add
dec
mov
xlat
icebp
in
ficoms
push
movaps
and
push
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
adc
jne
and
pop
jl
jle
push
or
adc
loopne
int
aad
nop
pop
adc
ret
jmp
cmp
push
mov
xchg
mov
mov
pushf
xor
mov
or
dec
test
sub
sub
xor
dec
push
stc
inc
inc
jl
ret
or
icebp
add
aad
data16
pop
xor
cmc
mov
pop
sarl
js
in
cmpsl
push
stos
jnp
cmc
fdivr
dec
mov
insl
push
or
fs
cmp
xor
push
testl
mov
jne
pop
mov
sub
in
cmc
jne
or
daa
aad
into
pop
push
xor
cmp
xchg
scas
gs
out
dec
cmp
push
rcl
pushf
pop
mov
xchg
inc
dec
mov
addr16
js
push
clc
popf
lock
mov
repnz
xor
xor
dec
out
cmp
imul
add
lret
cmp
mov
xchg
sbb
jo
lods
xchg
stos
push
dec
adc
xor
push
out
dec
sub
inc
fwait
adc
jae
push
call
js
xchg
daa
icebp
mov
outsb
mov
pop
pusha
xor
scas
mov
nop
pop
mov
jns
movsl
dec
sub
in
nop
mov
cltd
aam
shll
mov
stos
aaa
lret
pop
pop
iret
jb
push
dec
fst
adc
call
repz
fs
fwait
cld
cld
adc
loopne
mov
cmp
adc
idivl
mov
aaa
out
aas
out
stos
lock
mov
xchg
adc
iret
pushf
rcl
shlb
mov
mov
out
fidivs
lret
add
movl
clc
pop
xchg
push
out
inc
cmp
sbb
cmp
adc
cmp
mov
adc
cmp
push
pop
inc
les
adc
popf
sub
scas
cli
lods
dec
mov
pusha
jne
aam
loop
lret
ss
test
inc
push
shr
lock
das
aaa
mov
adc
clc
cltd
loopne
push
cli
lods
scas
js
cmp
stc
nop
xchg
scas
sbb
insb
fdivs
ret
or
inc
mov
out
and
shlb
rorb
iret
fildll
out
sahf
push
push
xchg
xor
sub
cmp
mov
cmp
adc
ja
sbb
sub
gs
jbe
xchg
les
aas
xchg
loop
shlb
pop
imul
ret
aad
test
int
loope
ror
cmp
inc
mov
test
adc
push
inc
or
sbb
xchg
mov
sub
pop
xor
push
and
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
pop
cmp
mov
jle
pop
jl
jle
mov
inc
ficoml
pop
lods
es
cmpsl
mov
aad
adc
gs
or
js
jecxz
dec
test
push
push
rcrb
xchg
scas
popf
pop
inc
xchg
stos
fwait
adc
jle
fisubrl
dec
or
mov
std
call
jb
in
lods
cmp
mov
mov
loop
sar
jo
dec
add
xlat
or
lcall
dec
push
daa
or
mov
cmp
sbb
mov
fs
loope
mov
outsl
xlat
dec
in
lahf
dec
adc
xchg
mov
add
jns
sub
and
aas
mov
ret
add
sarl
addr16
xchg
bnd
lcall
xchg
sbb
data16
add
sbb
adc
imul
gs
cmp
les
mov
adc
xchg
xlat
xor
sub
mul
sbb
push
repnz
cmp
rcr
jle
mov
sbb
jb
movb
mov
daa
loop
cmp
dec
dec
xor
subl
lret
fld
test
pop
xchg
iret
add
xchg
xchg
jmp
lods
mov
jmp
fs
push
cs
mov
cmpsb
and
adc
pop
js
jg
pop
cmp
jbe
sbb
movsb
or
ret
sbb
xor
pop
sub
ja
mov
into
dec
pop
mov
push
or
testb
dec
adc
stc
cld
test
or
inc
xor
pop
decb
push
adc
add
cmpsb
sbb
pop
fwait
icebp
test
lea
ljmp
ljmp
mov
test
xor
jmp
xor
stos
fstpt
cmp
repz
jnp
adc
mov
mov
loopne
push
testl
jne
xchg
les
ret
add
shr
lods
jl
push
and
fstp
nop
out
loop
mov
or
cli
mov
movsl
jb
pop
cmp
pop
dec
xor
pop
jbe
cmp
out
out
inc
enter
mov
fnsave
insl
pop
std
sbb
or
leave
int3
sub
add
ss
repnz
push
mov
and
jb
xor
out
mov
inc
sbb
or
ret
push
repz
adc
cmp
sub
lret
sbb
or
fimuls
lret
mov
int
cltd
sbb
sbbl
sub
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
mov
sub
jle
jl
jle
inc
mov
pop
inc
sbb
xor
repnz
lret
and
jno
stos
jb
repnz
mov
imul
cltd
cmp
popa
or
or
xchg
popf
out
addr16
into
pop
push
std
mov
dec
mov
and
sbb
sub
fdivs
faddl
test
daa
or
xorb
jbe
mov
mov
fldcw
shlb
dec
adc
inc
clc
xchg
pop
sbb
inc
adc
sbb
xor
lahf
pop
pop
add
enter
aad
sub
jne
jp
xor
cmpsl
xor
xor
imul
xchg
mov
dec
push
cmpsl
dec
adc
mov
push
lock
in
jae
ja
dec
decb
lods
pop
add
imul
pushf
es
outsl
scas
inc
sub
sbb
add
movsb
jb
das
add
adc
cmpsl
inc
ja
aam
jbe
xchg
sarb
jne
sub
jbe
sub
test
inc
cmp
test
test
shl
mov
in
in
idivb
lock
testb
add
lcall
es
mov
mov
loop
stos
fisubrl
ljmp
fdivrs
push
ja
aad
cmp
and
xchg
or
stos
fstl
add
iret
rolb
cs
pop
lahf
adc
hlt
mov
gs
cmp
fsubrl
jg
or
aam
mov
scas
push
cmp
push
push
push
cmp
cltd
mov
jecxz
and
enter
ds
test
mov
hlt
es
iret
dec
into
std
jb
fistl
and
adc
stc
call
mov
lds
or
push
enter
mov
jle
jl
int3
dec
mov
dec
lods
cmp
cmc
mov
mov
dec
das
push
in
daa
add
mov
mov
clc
and
mov
push
inc
xlat
pop
rep
gs
adc
lret
xor
jbe
pop
cmc
or
stc
mov
push
ds
test
enter
jae
test
jle
mov
jle
xor
popa
aaa
fdivr
or
jge
in
fildl
xor
jg
sub
in
int3
aam
dec
adc
dec
pop
or
mov
xlat
test
rorl
fdivl
cli
lret
imul
pusha
clc
cwtl
and
out
out
dec
nop
test
in
outsb
notl
and
imul
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
repz
pop
jl
jle
and
test
mov
stc
jge
je
add
gs
sbb
rolb
jecxz,pn
inc
mov
lcall
xchg
or
push
shll
xor
xchg
jb
mov
mov
adc
add
or
fcmovne
push
sbb
sbb
scas
imul
frstor
dec
shl
push
enter
clc
ds
xchg
std
das
gs
mov
icebp
lods
shlb
jns
enter
jns
sub
xchg
sarb
cmp
cmp
fwait
movl
sub
sar
xor
cwtl
and
test
mov
pop
inc
cli
jns
sub
pop
adc
ljmp
adc
jp
fldl
and
dec
subb
pushl
mov
inc
pop
in
es
fwait
lods
dec
dec
or
xor
mov
leave
xor
push
pop
push
test
fistpl
dec
or
outsb
cmp
xor
and
aad
dec
and
push
mov
cmp
fcoms
or
outsb
and
adc
adc
mov
mov
testb
push
sub
ret
icebp
lcall
jl
jnp
rorl
sbb
adc
testb
jge
mov
lds
push
pop
pop
popf
les
cmp
aam
in
xchg
les
or
fisubrs
pop
mov
or
sbb
in
js
jl
and
dec
fwait
clc
or
cwtl
je
jg
popa
scas
cmp
ljmp
imul
lahf
inc
jno
in
dec
in
sbb
popa
xor
mov
lods
aaa
cli
insl
sbb
js
addl
dec
int3
jp
jge
add
rorl
cmp
push
ficompl
jp
cmc
pop
inc
pop
cli
cmp
or
push
rcrb
ss
mov
cs
nop
mov
push
cmp
and
xchg
dec
adc
jae
xchg
ret
mov
lahf
js
jno
push
rcr
loop
fwait
mov
sbb
inc
cmpl
insb
ljmp
jg
mov
test
sub
adc
adc
movsl
push
pop
xchg
shr
push
in
lea
movsl
in
lock
aas
push
repz
add
fstpl
xchg
out
xchg
and
jae
rclb
imul
jns
stos
call
pop
mov
sub
xchg
pop
jbe
lods
loope
mov
jecxz
push
sub
or
lods
lret
fidivs
fdivrl
into
push
xor
les
dec
xor
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
fs
cmp
jle
sub
jle
pop
aaa
in
cmp
jnp
jle
enter
xlat
cmp
cmp
sub
pop
xchg
xchg
push
pop
mov
inc
pop
insl
inc
add
data16
lret
sbb
mov
mov
xchg
gs
and
cmc
dec
push
dec
rep
xlat
mov
int
sbb
int3
mov
xchg
ja
mov
jns,pt
push
das
outsb
jmp
xor
push
addb
sahf
shrl
rcrb
push
outsb
push
inc
mov
fidivrs
inc
adc
cmp
stc
bound
mov
mov
pop
fnstenv
pop
jmp
push
dec
pop
mov
mov
dec
sti
mov
adc
dec
out
scas
into
das
mov
jo
and
jo
push
push
test
stos
add
gs
fsubs
cltd
mov
xchg
jns
sub
fisubrs
xchg
ds
sbb
lret
jne
or
cs
or
aam
stos
dec
xchg
cld
mov
movsl
cli
mov
sbb
adc
and
movl
daa
cmp
pusha
roll
cmc
stos
mov
jl
mov
mov
stos
push
fldenv
out
pop
test
pop
stc
scas
stc
or
pop
arpl
push
add
mov
fwait
dec
push
sbb
in
into
inc
jl
or
and
repnz
aaa
adc
ljmp
inc
pop
pop
std
aas
cmp
enter
addr16
xor
mov
in
movsb
notl
stc
push
int
ljmp
sub
in
sbb
jnp
sub
sbb
pop
subl
and
pop
movsl
sub
repnz
inc
adc
mov
xor
mov
add
adcl
arpl
cwtl
das
cmp
pop
xchg
cmpsl
jae
xchg
pop
call
inc
sarb
addr16
iret
dec
pop
and
cmp
dec
aas
and
test
and
mov
cwtl
imul
pop
dec
scas
imul
ret
jo
je
pop
xchg
pop
clc
imul
sbb
push
jp
push
out
inc
popa
mov
dec
sbb
push
popf
test
sbb
jle
add
jp
add
fcomps
loop
inc
mov
lock
sub
and
mov
jbe
and
ret
out
stc
dec
rorl
inc
sbbb
inc
adc
or
add
int3
out
inc
rclb
repnz
sbb
roll
jmp
jmp
shr
outsb
mov
mov
bound
andb
daa
mov
sbb
dec
rcr
ret
into
stos
int
cmc
addr16
inc
push
add
xchg
out
int3
sbb
jle
or
mov
fisttpl
mov
pop
ret
loopne
idivl
test
sbb
adc
sti
xor
int3
adc
movsl
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
mov
dec
mov
adc
imul
xchg
movsl
push
mov
jecxz
inc
pop
sbb
push
loope
pop
rcr
inc
insb
xchg
lods
pop
shrl
xchg
jae
std
pop
dec
cmp
lahf
or
mov
and
mul
jae
jp
fs
fbstp
aaa
fnstsw
rcrl
ror
gs
inc
dec
xor
adc
sti
push
cmp
iret
mov
push
dec
cld
inc
or
push
hlt
pop
push
icebp
and
jo
xchg
into
daa
paddusw
dec
fnsave
gs
pop
sub
popa
dec
xorb
cld
lods
scas
movsb
sub
aaa
xchg
mov
out
scas
xchg
pop
ret
jne
pusha
cmp
loopne
stc
mov
js
int
xor
xorl
jge
xchg
xchg
enter
rcll
lcall
lock
andl
aam
mov
cmp
daa
mov
and
test
rcrb
dec
loopne
push
rclb
sbb
sbb
dec
cmp
dec
out
mov
pop
mov
movsb
and
mov
xchg
test
dec
dec
push
mov
test
insl
outsb
jle
ljmp
mov
outsb
cmp
iret
lods
ljmp
xor
jo
or
jb
fs
mov
movsb
add
clc
lret
shlb
push
data16
dec
shrl
jg
adc
or
cwtl
cmp
mov
daa
fisubs
nop
mov
outsb
pushf
ds
pop
fidivs
enter
xor
cmp
lret
loop
ftst
jb
jnp
sub
out
into
fnstcw
xchg
outsb
mov
in
adcb
outsb
mov
aas
das
xor
pop
add
mov
neg
repz
idivb
div
shll
cmp
xchg
sub
add
fsubr
jae
pop
xadd
shr
fucomi
inc
xchg
enter
xchg
popa
ret
and
pushw
adc
data16
pop
or
ret
aam
mov
xchg
int3
sbb
xchg
and
in
xchg
int3
cltd
mov
or
clc
inc
sbb
jne
jb
sarb
roll
mov
out
jne
insb
lcall
pop
mov
outsl
pop
cld
mov
icebp
lock
test
insb
int
jge
adc
outsl
enter
sti
fnstcw
mov
pop
or
cld
enter
sbb
pushl
mov
outsl
sub
cs
insb
add
in
outsl
jge
std
push
push
in
daa
loope
lock
lods
jp
inc
cmpsb
cmp
and
stos
add
mov
jns
and
mov
test
jle
mov
outsb
js
dec
stc
lret
pop
pop
fisttps
pop
in
pop
jl
mov
cs
cld
jecxz
add
inc
inc
inc
sar
enter
push
loope
mov
sub
sub
sbb
xor
neg
jmp
jne
sub
test
test
mov
and
jle
jge
jle
insl
dec
sbb
je
fldl
sub
je
xchg
jle
idivb
or
push
arpl
xchg
push
shl
fisubs
ds
test
add
push
lock
pop
lahf
inc
ja
pop
xor
xchg
add
stos
imul
and
hlt
in
daa
cmpsl
jp
insb
or
sbb
dec
xor
or
loopne
clc
outsb
icebp
mov
fistpl
mov
and
push
movsb
mov
stos
and
or
les
push
jo
stos
test
push
jle
inc
stos
xchg
insb
lods
pop
pusha
jae
push
pop
xor
or
push
sbb
sub
inc
ljmp
out
test
xor
adc
sub
and
pop
adc
jae
dec
hlt
shlb
xchg
int
mov
ret
jnp
outsl
sbb
jb
inc
pushf
mov
fwait
xchg
pop
mov
movsl
std
cmp
xchg
jnp
shrb
adc
in
ds
mov
cwtl
and
push
int
movsl
adc
pop
cmp
jae
aad
int3
cltd
fldt
inc
push
lods
fildl
push
jp
add
out
sahf
xor
cwtl
adc
rolb
adc
jae
in
sti
sbb
icebp
mov
cld
cld
test
add
mov
jnp
in
adc
mov
jp
xchg
mov
dec
push
cld
daa
add
dec
sahf
test
inc
nop
das
pushf
std
adc
mov
scas
dec
movsb
xor
movsl
push
ret
sub
dec
inc
xor
mov
lods
pop
push
push
lds
mov
adc
lods
cli
cli
mov
sti
jg
rcrl
inc
iret
and
sbb
test
xlat
xor
sub
sbb
ljmp
imul
jnp
add
popa
xchg
scas
gs
negl
icebp
filds
je
push
loopne
adc
repz
xor
xor
dec
jae
mov
hlt
out
cs
cmpsl
mov
jno
lret
addr16
add
lddqu
insl
popa
mov
dec
dec
pop
test
iret
mov
add
sar
pop
lret
add
ret
and
jl
xor
insl
in
fcmove
push
fs
jo
jb
loop
repnz
out
sbb
mov
out
clc
fildll
lea
sbb
in
das
imul
adc
or
pop
or
fwait
es
je
int
mov
and
add
xchg
pop
jge
jge
add
push
fisubl
adc
jecxz
call
clc
sbb
jbe
inc
repnz
cli
loop
sbb
int
ja
xor
dec
sahf
call
hlt
leave
nop
sbb
mov
rorl
xor
xor
and
fcompl
daa
mov
pop
xor
orl
int3
pop
in
lahf
sub
adc
sub
cli
cmp
mov
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
inc
xchg
and
sub
jle
jbe
xor
xchg
push
inc
out
call
mov
add
dec
cmp
cmpsb
stc
push
push
sbb
add
or
push
jle
pushf
sbb
adc
stos
pop
mov
sti
cltd
int3
ljmp
fists
jmp
sub
sahf
mov
outsb
outsb
test
jnp
pop
hlt
mov
inc
dec
jecxz
adc
mov
adc
and
lods
xor
cmp
xor
int3
fists
movsl
dec
movb
es
inc
mov
movsl
add
jbe
aas
cwtl
add
aaa
sbbl
testb
lret
mov
mov
add
cmp
mov
cmp
pop
add
subl
sbb
mov
cli
imul
mov
dec
jge
mov
push
jo
push
jo
shll
pop
sbb
push
std
insl
mov
jns
push
fldl
xchg
mov
pop
push
xlat
pop
pmaxub
lret
enter
or
clc
shl
loop
ss
adc
scas
sbb
cmp
inc
std
jno
cmp
xor
jbe
push
cmp
jp
cmp
add
fwait
and
out
mov
fildll
or
aad
sub
push
push
mov
dec
sbb
adc
jns
imul
arpl
pushf
enter
scas
arpl
push
js
test
aaa
dec
aad
adcl
in
add
les
add
lds
mov
aad
popl
fdivr
mov
add
out
and
rorl
cmp
sub
sbb
int
sahf
dec
push
sbb
je
sub
push
rcrb
or
xchg
roll
rclb
das
push
stos
dec
lods
call
test
popa
jl,pn
xchg
fsubl
dec
popf
stos
mov
shrb
xor
pop
or
jae
test
pusha
sbb
imul
movsb
jl
xchg
mov
xor
adc
ljmp
ret
cmp
inc
shr
xor
iret
xchg
bound
mov
enter
jecxz
cli
mov
je
mov
adc
lock
das
scas
fidivrs
ja
cmp
xor
shr
repz
rol
out
data16
stos
rcll
arpl
or
pop
dec
pop
iret
push
xorl
and
in
fwait
mov
cwtl
mov
ljmp
push
aaa
shlb
mov
ficompl
icebp
push
sbb
mov
push
dec
sub
adc
pop
int
and
jne
or
sbb
ret
jmp
aad
outsl
jl
pop
test
repnz
add
adc
ja
popl
fisttpll
mov
int
mov
push
mov
push
enter
adc
sahf
cwtl
ljmp
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
xor
cmp
mov
or
jns
jnp
or
push
iret
shrl
frstor
xchg
and
xchg
fiaddl
sub
or
rorb
xchg
sub
pushf
aam
add
inc
xorb
ret
xchg
xor
ficoml
stc
cmp
dec
negl
cli
outsl
xchg
out
xor
lcall
mov
push
test
sub
mov
dec
int3
cmpsl
mov
mov
out
call
jae
pushf
les
mov
movsb
pop
or
ret
out
lods
xchg
in
stos
int
into
loope
inc
dec
xchg
hlt
ret
push
cmpsl
xor
xorl
mov
lods
jp
mov
mov
nop
je
sub
mov
fs
sbb
mov
xor
jl
mov
ret
mov
fisubrs
sar
mov
pushl
cwtl
adc
dec
cmc
xor
xchg
in
out
mov
add
flds
cmp
xchg
mov
inc
mov
adc
ret
cli
leave
inc
xlat
push
loopne
mov
or
stos
pop
cld
std
xchg
sahf
or
dec
add
add
inc
dec
pusha
lret
fs
adc
insb
repz
pop
mov
mov
lret
pop
into
push
push
outsb
mov
lock
cltd
inc
or
std
and
mov
movsb
jecxz
add
xor
sbb
inc
int3
sbb
mov
addr16
jmp
inc
push
or
pop
lods
xchg
xorb
lds
add
pop
imul
dec
stos
xchg
sahf
xor
imul
pop
jno
inc
mov
pop
lea
sarl
sbb
xchg
ss
add
roll
push
jge
add
rolb
ss
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
push
scas
jl
cmp
mov
inc
cmp
imul
ss
add
int3
push
mov
testl
stc
or
push
inc
or
push
xor
bound
ret
outsb
mov
roll
ret
pop
and
stos
lds
int
mov
leave
ljmp
pop
sarl
dec
jo
xchg
cmp
data16
in
jb
inc
xchg
out
pop
jecxz
icebp
xor
jne
mov
mov
imul
mov
and
push
lods
ret
pop
mov
xlat
xchg
sti
mov
add
repz
sub
push
cltd
hlt
shll
movsb
inc
adc
loop
mov
push
les
stc
gs
pop
push
lret
call
repnz
add
incl
aam
out
mov
gs
pop
cmp
jge
mov
lahf
cmp
mov
xchg
sbb
fiaddl
lahf
jg
mov
int3
test
std
fwait
pop
mov
push
mov
sti
pop
clc
in
ret
repz
js
push
adc
mov
and
cli
sti
xchg
dec
punpckhdq
data16
dec
push
lds
xor
adcb
pop
mov
jbe
push
jne
cvtpi2ps
inc
xchg
push
dec
xor
cli
xchg
inc
cld
test
gs
das
jl
sbb
test
mov
lods
pusha
ds
sti
ja
loop
dec
jno
mov
scas
jno
mov
push
push
pop
pushf
in
xor
push
dec
movsl
int
pop
xor
push
ljmp
mov
fnsave
test
sub
inc
nop
cmp
push
jmp
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
fcmovnbe
jo
add
cwtl
mov
dec
loopne
rorb
dec
insl
movsb
inc
insl
test
sub
movsl
mov
cmp
jle
ja
data16
cmpsl
mov
jle
xchg
or
xchg
nop
icebp
iret
shlb
pop
xor
mov
pop
lods
xor
cmp
gs
lahf
push
je
mov
pusha
lea
cmpsb
inc
aam
mov
pop
dec
jp
push
jne
or
jno
jnp
xlat
add
stos
mov
dec
daa
sub
enter
sub
pop
lret
aaa
push
iret
and
push
pop
ss
jge
icebp
int3
bound
mov
mov
mov
xchg
add
dec
test
sub
mov
sub
inc
dec
scas
dec
mov
in
dec
xlat
rol
mov
subl
cmp
andb
jno
scas
movsl
mov
mov
icebp
mov
or
push
repz
xor
cmp
enter
rcrb
dec
bswap
stos
dec
mov
mov
mov
es
out
daa
jecxz
test
lcall
push
outsb
adc
cmp
pop
and
in
sub
insb
pusha
movq
mov
sbb
out
mov
pushf
fs
outsl
aam
and
sti
aam
push
int
push
jb
rorb
jbe
lret
fwait
dec
sub
leave
fists
sbb
mov
fwait
test
push
sub
xchg
gs
push
jae
imul
int
cmp
popf
cmc
pop
add
mov
repz
mov
out
fdivr
jne
call
test
jmp
and
in
popa
push
lret
xchg
lods
js
add
les
mov
mov
sbbb
lret
fs
or
lods
xchg
lods
dec
sbbl
call
push
lods
adc
adc
sub
lcall
mov
add
sysret
adcb
mov
nop
sub
clc
adc
push
pop
sar
addr16
xchg
and
aad
ds
pop
or
and
dec
rcll
leave
xchg
stc
or
in
xor
mov
or
adc
xchg
add
add
xor
mov
dec
sahf
mov
cmp
push
xchg
fwait
aam
mov
mov
xor
stos
ss
push
xor
rcr
pop
scas
scas
pop
rorl
jge
decl
mov
ss
xchg
pop
pop
pop
xchg
shl
jno
push
arpl
lea
out
dec
xchg
rcr
jecxz
jno
pop
cmp
cmpsl
sub
mov
xchg
push
test
pop
xchg
fwait
dec
out
fbstp
sub
and
notl
aam
adc
iret
mov
mov
fld
push
jns
push
insb
xor
sbb
rol
out
inc
dec
pop
and
adc
sarb
xchg
xchg
adc
sbb
jecxz
ss
push
sarb
daa
loop
movsl
or
inc
hlt
adc
outsl
jle
fiaddl
mov
mov
lock
inc
sbb
fwait
out
lods
in
pop
ret
loop
sarb
jae
mov
xchg
jmp
or
bound
arpl
in
ja
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
inc
in
mov
add
test
in
inc
cmpsl
test
jl,pn
push
jmp
shll
cmp
or
addr16
mov
xchg
pop
fldt
incb
sub
leave
ret
mov
pop
subb
int
push
xchg
roll
rcl
mov
inc
pusha
pop
xlat
xchg
sub
fsub
sbb
push
mov
bound
jmp
mov
stos
test
test
sti
das
out
and
xor
pop
dec
sar
sbb
popa
add
mov
sbb
insl
xor
push
jns
dec
xorb
push
out
out
movsl
adc
mov
dec
lret
lret
and
testb
stc
add
test
divb
jmp
adc
mov
rorl
pusha
or
mov
int3
mov
xchg
xchg
mov
cmpsl
pop
adc
push
out
stos
xor
ja
push
xchg
sub
add
js
mov
and
xchg
add
xchg
outsl
int3
mov
dec
xor
loop
aaa
lret
out
lea
jne
fdivs
add
rclb
imul
add
movsl
jb
xor
sub
cmpsl
adc
push
nop
scas
fsubr
ret
cs
pushl
sub
mov
js
pop
adcl
adc
cmp
iret
and
sub
mov
push
fisttpll
adc
out
or
xor
mov
inc
push
dec
inc
mov
adcl
into
jnp
inc
push
mov
sub
ja
leave
enter
jnp
sub
fidivrs
stc
arpl
out
and
inc
movsl
inc
or
dec
jae
pop
xor
xor
pop
fwait
jge
adc
mov
xor
popa
cmpsb
and
loope
in
fisubl
lock
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
insl
dec
inc
jl
sarb
jl
jle
sti
cwtl
dec
mov
insl
adc
dec
dec
fsts
push
xchg
out
mov
xor
rcr
stos
nop
add
outsb
adc
nop
inc
cld
mov
mov
adc
movb
pop
dec
jo
inc
xor
inc
dec
iret
lret
daa
or
mov
rol
sbb
out
cmpsb
lock
jns
in
andb
xor
adc
or
das
inc
cmp
or
xor
stos
cmp
and
sbb
daa
insb
xchg
jne
xor
push
lcall
lds
pop
mov
arpl
jne
gs
das
and
inc
or
pop
lea
filds
test
int3
mov
into
into
js
adc
mov
mov
repnz
rcrb
mov
push
jae
and
in
mov
stos
xor
xchg
fimuls
cmp
dec
lret
inc
pop
sbb
pop
cltd
sub
xchg
movsl
inc
and
jns
mov
dec
jp
out
sbb
inc
pop
jl
xchg
loopne
aam
mov
add
cwtl
jno
mov
lds
mov
ja
lock
sbb
sub
mov
fs
add
in
aam
cli
adc
fmull
mov
xor
dec
fidivrs
out
mov
jno
dec
pop
jp
inc
xchg
xchg
adc
lcall
inc
cmp
push
xor
js
pop
lock
jle
addr16
and
sbb
mov
jg
hlt
xchg
push
sbb
inc
mov
aam
mov
adc
push
lods
jmp
out
dec
mov
xchg
pop
pop
aam
push
xchg
mov
push
pop
xchg
add
je
jmp
add
or
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
mov
add
jnp
mov
fisttpll
xlat
outsb
jno
adc
mov
hlt
sbb
jno
mov
mov
adc
push
xor
lods
inc
xlat
nop
and
jmp
fidivrl
or
out
ret
adc
sub
push
mov
cltd
adc
pop
cmp
adc
adc
add
addr16
leave
fdivr
push
scas
outsl
dec
mov
imul
rcrb
adc
daa
mov
xchg
or
mov
les
fnstsw
push
ljmp
negl
jg
push
dec
mov
cwtl
mov
shrl
hlt
scas
jo
and
or
das
pop
inc
daa
push
ffreep
mov
add
jp
sti
mov
adc
gs
gs
outsb
jb
add
push
jg
mov
scas
lods
in
inc
pop
fdiv
sub
shl
fidivrl
cltd
dec
jg
loopne
and
cwtl
xchg
lcall
outsb
ss
test
jae
mov
mov
pop
test
scas
lock
xor
imul
loopne
sub
adcb
lds
mov
push
mov
xchg
lods
adc
loopne
popa
add
nop
push
repz
fbld
mov
sbb
data16
sub
lret
xor
xor
lea
push
hlt
or
in
push
mov
jbe
out
dec
jl
push
jg
add
xor
aaa
cmc
jns
cltd
pusha
mov
out
shr
inc
rclb
or
dec
cwtl
out
lods
jae
and
sbb
sub
or
cmc
pop
sub
das
mov
in
fldt
imull
adc
add
mov
shrb
push
sub
bound
test
pop
mov
arpl
into
push
ret
decb
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
shlb
inc
adc
int3
jle
add
cmpsl
pop
push
xor
mov
frstor
xchg
or
dec
add
mov
leave
cltd
jmp
or
dec
xor
xor
loop
adc
iret
pushf
cwtl
pop
aas
xchg
lods
adc
mov
xor
push
lods
ljmp
push
push
jnp
scas
inc
sub
mov
test
mov
gs
lahf
lods
dec
push
xchg
loope
in
and
daa
add
cmp
pop
in
pop
add
jb
pusha
popa
dec
inc
mov
btr
dec
sub
test
xchg
add
addb
jae
push
jge
scas
jecxz
in
xchg
mov
jne
push
out
jo
popf
push
push
js
inc
sub
cwtl
xchg
rcrb
les
push
inc
js
jp
popa
roll
jnp
fcompl
xor
dec
mov
insl
jl
push
imul
int
jmp
lods
push
addr16
jp
jns
sub
jmp
mov
xlat
cmp
jmp
lcall
jnp
mov
xlat
xor
loopne
sub
cmp
jae
mov
outsb
test
cmc
in
mov
mov
cmpl
cmovb
cmp
pop
in
dec
ret
and
adc
js
mov
addr16
cmp
popa
mov
mov
lret
push
pop
jns
aad
inc
sub
inc
popa
add
repnz
mov
insb
pop
outsb
jo
lock
flds
imul
lret
inc
or
loope
les
push
jmp
jb
pushf
pop
pop
cmpsl
std
rcrb
fstpt
push
xor
dec
in
fidivrl
in
jg
mov
movsl
lret
dec
or
push
dec
stos
mov
jb
xchg
and
imul
popf
negl
addr16
arpl
cmp
add
push
sbb
sub
cld
inc
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
fs
and
jle
add
orb
outsl
or
cmp
adc
dec
aas
lret
sahf
loope
loopne
mov
push
test
mov
jl
xor
and
out
dec
adc
jmp
inc
sarl
dec
inc
lock
push
lds
and
int3
add
in
aad
frstor
outsb
inc
mov
lahf
aas
loopne
jge
pushf
xchg
inc
inc
sub
leavew
ja
nop
or
out
jnp
and
xchg
mov
lret
cmpsb
iret
or
push
mov
push
rol
dec
daa
scas
cmp
push
jg
je
shlb
filds
inc
add
adc
hlt
shrb
xchg
bound
add
sti
mov
push
push
adc
stos
int3
jmp
adc
pusha
dec
fnstenv
mov
and
add
mov
maskmovq
imul
data16
mov
in
or
clc
cmp
pop
and
ss
xchg
pop
data16
fstl
push
cmp
loopne
popa
les
scas
loope
sub
inc
dec
or
pop
in
scas
cmp
divl
add
les
dec
outsb
cmp
and
mov
mov
icebp
rclb
sbb
xor
add
cmpb
sub
xchg
lods
xchg
scas
and
xchg
aad
adc
and
fistl
pop
add
xchg
out
xchg
mov
jno
and
sbb
jnp
lods
jmp
outsl
sub
bswap
gs
jnp
gs
aad
pop
add
out
xor
mov
addr16
pop
jns
push
push
popf
cmp
push
xor
fcomps
inc
dec
and
xor
push
or
test
sbb
dec
popa
push
sbb
nop
or
xlat
and
sahf
sbb
loopne
es
fsubr
fldl
mov
cli
std
hlt
jns
rolb
cmp
sub
vmaskmovdqu
shl
jnp
xor
sub
mov
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
ds
int3
in
jle
and
jle
mov
add
pop
or
pop
jp
data16
sbb
sahf
loopne
dec
fidivrs
lret
sbb
stos
pusha
pop
lahf
mov
fisubrl
fstps
jo
leave
add
sbb
sbb
fwait
mov
and
xchg
or
add
lock
ljmp
loopne
jl
xor
scas
xor
pop
pop
sbb
cmp
sbb
fstp
aad
pushf
dec
cmpsl
xchg
adcl
adc
jbe
pop
mov
lret
push
sahf
mov
fcoms
jns
push
cmp
iret
js
stc
xchg
cmp
or
das
nop
xor
pop
rcrb
add
lcall
mov
les
popa
cmpsl
testl
mov
loop
repz
daa
into
xor
push
dec
mov
push
ret
cld
adc
cs
test
sub
int3
pop
mov
test
inc
mov
jne
inc
adc
add
jl
inc
sbb
pop
cmpsl
test
bound
es
mov
xlat
push
fimuls
lods
scas
pop
les
dec
cli
push
fs
fadds
jns
push
stos
maskmovq
imull
sbb
pop
inc
ljmp
lods
inc
lods
push
call
xor
xor
stos
or
mov
add
rdtsc
sub
cmpsb
pop
sub
addb
push
mov
cmp
aam
cli
ficoml
jle
es
in
cmpsb
and
stc
loop
mov
push
sub
cmp
xorl
rolb
nop
orb
cmp
pusha
jle
and
push
loop
xor
daa
adc
mov
aaa
loopne
mov
mov
push
aad
xchg
mov
stos
cmp
pushf
or
jne
push
xchg
adc
pop
mov
pop
or
inc
mov
scas
out
outsb
dec
cmpsl
sbb
popf
cld
jae
push
jmp
mov
and
mov
add
inc
add
outsl
aaa
inc
add
inc
add
add
jg
xor
add
bound
jl
jle
and
cli
in
inc
xor
sbb
fadd
lock
xor
test
sahf
jp
cmpsb
cltd
lahf
ret
pop
mov
pop
clc
movsl
jecxz
fbld
gs
or
xor
nop
xor
sahf
je
adc
push
sti
add
dec
es
rcll
jno
add
xor
xchg
sti
add
jno
std
mov
cmp
push
mov
inc
sbb
into
ljmp
icebp
or
int
insl
loopne
mov
lock
sbb
iret
mov
mov
das
add
mov
or
lahf
sub
push
mov
ss
dec
sbb
in
pop
out
adc
fwait
xchg
mov
sub
int3
sub
add
fldenv
out
push
imul
icebp
mov
mov
mov
xor
or
sub
outsl
jnp
lock
aaa
xor
push
push
gs
jg
sbb
dec
insb
cltd
je
dec
insl
test
icebp
xor
aad
jae
sbb
inc
gs
test
das
pushf
js
ss
mov
and
xor
mov
gs
shlb
mov
ret
shrl
xor
mov
push
push
pop
fldenv
leave
ficomps
xor
rol
shr
mov
cs
mov
lcall
jecxz
loopne
call
mov
insb
scas
loope
xor
nop
cmp
pop
xor
inc
enter
fcomi
out
ret
jne
into
inc
sub
lret
fsubrs
cmp
jne
mov
repnz
lods
into
mov
and
outsb
jae
and
mov
sbb
lahf
mov
or
inc
dec
and
dec
and
data16
mov
jg
cmpsl
push
jl
rcl
jne
movsl
aaa
xor
xchg
jns
sbb
loopne
mov
pop
movsl
jg
cmp
or
iret
push
pop
sbb
xchg
add
push
imul
ffree
lock
ss
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
adc
jl
jle
lahf
addr16
or
mov
pop
mov
int
cwtl
daa
inc
mov
push
inc
push
mov
sbb
add
ljmp
sbb
or
pushf
cltd
pusha
aas
clc
mov
add
jno
fbld
mov
test
cmpsb
and
xchg
mov
call
lcall
cmp
sahf
iret
cmpsl
negb
imul
push
or
arpl
mov
js
xchg
xor
push
jo
push
mov
nop
xchg
mov
es
cmpsb
daa
outsl
jb
pop
enter
cmp
rcrb
mov
iret
int
xchg
xchg
pmaxsw
scas
mov
pop
mov
out
pushf
xchg
popf
dec
int
xchg
int3
aad
fisttpl
sti
jle
pop
andl
outsb
jns
mov
pop
int
inc
loop
add
insl
jno
repnz
bound
push
xchg
mov
cmpsb
lret
dec
movsb
nop
inc
repnz
adc
sar
popf
dec
push
fsubs
mov
shll
cmp
pop
in
push
test
push
jb
insb
loope
divb
scas
jecxz
mov
sub
aaa
pop
pushf
loopne
add
sahf
js
mov
push
daa
xor
lahf
sub
test
xor
fs
int3
xchg
jl
push
mov
mov
gs
pop
stc
or
pop
das
lret
sbb
jae
sti
mov
loope
inc
scas
add
mov
fs
in
push
or
or
in
xorl
sahf
ret
int
dec
ficoml
fldt
stos
scas
jb
lret
inc
lods
dec
mov
jo
jmp
jo
xlat
mov
xor
sbb
out
aam
les
mov
sub
repnz
imul
insl
fld
xchg
bound
mov
add
xchg
lret
sbb
push
dec
sbb
adc
mov
adc
test
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
xchg
jb
mov
sarb
and
jle
mov
out
sub
ljmp
push
inc
xor
test
xor
pop
cmp
jg
push
lods
inc
xor
movsb
pop
addb
xchg
mov
pushf
js
popf
cmpsl
inc
incb
mov
je
push
lock
push
push
rorb
mov
inc
lret
xchg
mov
enter
push
sub
dec
xchg
popf
aas
mov
mov
inc
mov
mov
sub
jmp
clc
jge
into
pop
aam
fimull
jno
aad
mov
test
test
xchg
lds
je
testb
out
inc
mov
repz
jo
adc
into
inc
test
insl
jo
inc
adc
mov
dec
movsbl
and
scas
add
and
sub
fcmovne
cs
jnp
mov
push
xor
pop
pop
mov
jae
push
adc
cltd
cmp
repz
adc
adc
push
and
push
data16
pop
scas
ret
les
iret
sub
cmpsb
mov
cmp
fwait
sub
push
mov
xchg
sbb
mov
lock
jbe
and
int3
mov
pop
nop
mov
mov
ja
mov
jae
adc
neg
inc
mov
out
sbb
dec
fdivl
xchg
push
pop
ror
add
adc
sub
dec
xor
jmp
fnstsw
cmp
xlat
fsts
ja
dec
inc
js
xor
sti
or
das
jbe
pop
adc
or
lret
cmp
pushl
cwtl
xchg
lahf
pop
dec
add
pop
data16
das
mov
lcall
and
dec
test
push
inc
push
lea
inc
mov
cs
or
and
mov
add
mov
xchg
dec
jl
xchg
lcall
push
push
xor
xchg
jo
push
and
push
xor
rcll
in
mov
ror
int3
pushf
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
push
fst
imul
movsb
jo
mov
mov
das
pop
xor
jns
insb
push
sbb
dec
lock
add
addr16
jl
push
imul
jecxz
sbb
mov
stos
mov
pop
push
int
pop
jg
and
dec
mov
sbb
xlat
or
loopne
jns
pop
shl
xchg
ds
sbb
mov
jae
pop
sarl
into
inc
and
scas
mov
mov
bound
hlt
jge
scas
dec
lock
movsb
sti
mov
jne
cmpsb
sbb
js
addr16
or
sbb
js
and
fdivrl
push
pop
lcall
sahf
cli
movsl
not
mov
xchg
lret
in
add
sub
push
jnp
mov
dec
movsb
mov
int3
cmp
pop
stos
xor
fiadds
fildl
push
cltd
push
add
sbb
or
pop
push
out
jns
ret
lcall
push
mov
pop
test
fists
adc
lea
lret
adc
and
into
rcr
mov
cmp
insl
icebp
and
gs
lock
aam
inc
mov
lahf
dec
fwait
xchg
or
sti
add
aas
xchg
and
stos
nop
stc
stos
jne
stc
int3
or
sbb
test
fnsave
sub
pop
repnz
out
pop
sbb
inc
movsl
adc
push
or
and
les
push
inc
out
ja
push
cmc
mov
in
in
fmuls
dec
mov
and
dec
test
subl
test
daa
out
and
jmp
pop
sarb
arpl
loope
into
lcall
pop
mov
and
sahf
sahf
sbb
cmc
add
jb
add
dec
aas
imul
push
insb
xor
scas
icebp
or
stos
popa
insb
dec
lods
xchg
je
fsubr
mov
jnp
lds
mov
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
mov
divb
fistpll
and
jle
mov
pop
jp
sub
mov
cmp
das
repnz
jno
mov
push
cmc
les
hlt
pop
aad
rcll
sti
xor
sub
jmp
cld
into
out
or
mov
scas
adc
add
pop
sub
pop
cli
btsl
mov
pop
dec
pop
stc
test
sub
mov
sub
jno
mov
jle
daa
mov
xchg
pop
or
ja
push
sbb
cmpsb
inc
mov
jecxz
sub
mov
lods
xchg
pusha
fdiv
xorb
lds
push
int3
pop
pop
add
pop
add
inc
out
call
cld
fmul
pushf
jo
add
call
pop
add
pop
lret
cwtl
std
stc
adc
pop
ss
cmp
sub
xor
inc
loope
xchg
loop
rcrb
cwtl
mov
scas
mov
sbb
sub
pusha
lcall
repz
aad
jmp
sahf
or
inc
lods
outsl
lcall
cmp
jo
lret
lods
cmp
xchg
fld
mov
and
rolb
push
cmp
inc
addr16
cmp
sub
ficoms
lods
fs
aaa
or
les
test
in
pop
inc
faddp
rorl
dec
ds
and
mov
inc
push
jl
imul
lds
or
stc
out
in
ret
mov
movsl
add
cmp
repz
std
call
dec
xchg
in
push
flds
adc
fdivrl
xor
shrb
mov
mov
mov
mov
fcoml
sub
mov
mov
cmp
shll
dec
jo
mov
lods
adc
and
inc
jo
add
jns
jle
and
sti
dec
adcl
xchg
fmul
push
or
jle
lret
mov
or
inc
or
jne
jmp
lods
mov
outsb
xorl
pop
cmp
fnstsw
and
jle
cmp
movsl
and
out
lods
repnz
lds
push
leave
mov
cmp
mov
pop
into
cld
jge
xor
sti
sub
inc
xchg
or
dec
mov
out
push
jo
imul
cmp
fistpl
mov
mov
ficoml
inc
dec
jle
repz
ja
mov
jne
jno
adc
fstpt
aas
add
aaa
cmp
outsl
mov
cli
pop
fistl
jmp
adc
mov
xor
jl
xchg
das
inc
lcall
pop
ljmp
iret
mov
sbb
das
aad
add
push
pop
mov
pusha
hlt
cltd
sbb
cltd
pop
icebp
push
lret
and
cld
mov
sub
jg
insl
jo
sbb
loopne
out
mov
or
stc
inc
test
lods
and
adc
and
mov
mov
jno
mov
shrl
imul
xchg
std
lock
scas
xor
enter
cltd
int3
adcb
es
pop
push
enter
xlat
cwtl
mov
sarl
insb
jne
xchg
jae
addb
or
paddsw
pop
sbb
cmp
gs
inc
sbb
mov
notl
movsl
xchg
mov
mov
mov
pop
in
cmp
mov
negb
pop
fwait
jbe
mov
push
fsts
outsb
pop
cmp
outsb
mov
movsl
jg
sub
jne
pop
mov
push
lret
dec
xor
lcall
inc
mov
dec
dec
add
shll
pop
adc
lea
jae
fwait
out
into
and
cmp
push
jl
push
push
jae
inc
imul
adc
arpl
xor
mov
push
lods
jb
adc
mov
loop
xor
adc
cmp
outsl
xchg
dec
push
aam
test
mov
addr16
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
xor
idiv
mov
sub
insl
repnz
xchg
sub
lock
inc
repz
rorb
mov
mov
and
sahf
sbbl
dec
xor
sbb
jp
mov
aas
enter
push
mov
inc
ja
push
and
push
lcall
stc
jns
push
clc
inc
je
cmp
mov
je
cmc
cli
fidivrl
js
cmp
add
leave
mov
xchg
sbbl
mov
xchg
fucom
lahf
dec
nop
stos
and
xchg
outsb
xorb
out
cmp
gs
pop
pop
jae
ret
or
test
xor
jae
outsb
add
xor
or
add
shll
inc
mov
adc
fsts
pop
ja
hlt
add
mov
lods
sbb
insl
push
sbb
jb
pop
push
sahf
and
lar
out
xlat
insb
mov
rorb
xchg
lock
jne
or
push
mov
sub
pop
push
jnp
xor
xor
cmpsb
mov
mov
enter
push
add
xlat
outsl
aam
idivb
adc
repnz
xchg
les
fcoml
out
mov
xchg
outsb
adc
bound
jbe
and
push
xchg
je
sahf
jae
xor
icebp
jb
mov
shr
addr16
sub
iret
cmpsl
sub
jge
inc
cmpsl
stc
jecxz
sub
std
cmp
add
clc
xchg
jle
sbb
mov
ffree
jno
loope
icebp
jmp
jns
jbe
jp
repz
jae
mov
mov
and
repz
and
cmpl
mov
arpl
pop
insb
mov
jle
add
adc
sbb
je
popa
mov
outsb
fsubr
pop
push
add
lcall
loop
mov
subb
addr16
sbb
jne
inc
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
mov
data16
jle
cmp
cwtl
and
sahf
mov
pop
or
jns
bound
push
hlt
in
sbb
shrb
sub
sarb
ljmp
jnp
jmp
call
subb
sbb
push
incl
rcrb
pop
dec
mov
cmpsb
sub
hlt
nop
das
fwait
inc
arpl
xchg
aam
shrl
mov
fsubrs
ds
loop
pop
xchg
sub
shrb
cltd
std
mov
addr16
imul
fs
mov
jl,pt
and
outsl
push
int3
iret
mov
sub
scas
clc
jno
or
scas
xchg
mov
push
sbb
push
push
mov
dec
cmp
add
test
or
mov
sub
or
les
fdivrs
mov
xchg
jecxz
cmp
fbstp
adc
stc
jns
js
dec
cmc
xor
adc
mov
scas
in
and
sub
out
inc
sbb
dec
adc
pop
mov
iret
ret
adc
enter
jg
enter
rcl
ret
sub
sahf
jno
fwait
aam
pop
pusha
cli
cmp
sub
cbtw
lahf
movsl
negb
cmp
cmp
mov
in
insb
mov
push
mov
adc
lcall
inc
js
add
or
cmpsb
adc
dec
cmp
fistl
sbb
lea
jle
cmc
dec
and
orl
adc
fistpl
ror
lds
callw
dec
jbe
in
sbbl
push
fwait
adc
sbb
dec
sub
mov
inc
or
sbb
outsb
sbb
mov
dec
lea
scas
cmp
lods
sbb
xchg
lret
std
icebp
cvtps2pi
jg
inc
ss
mov
clc
cmp
push
movsb
xchg
cli
mov
adc
sub
ja
pop
xchg
test
inc
pop
fistpl
test
popf
push
mov
nop
enter
stos
jne
fadds
ret
stc
mov
aam
int
push
fs
ds
adc
jo
push
sbbl
jmp
lds
popa
mov
fisttpll
jmp
cmp
ss
inc
in
in
and
aaa
or
out
mov
cwtl
adc
loop
jge
sbb
jmp
comiss
cltd
jle
mov
sub
adc
jae
movl
mov
xchg
mov
push
xchg
sbb
mov
and
aas
fcoml
pop
add
sahf
repz
push
mov
and
dec
repz
stc
sbb
jo
mov
stos
dec
clc
sub
push
mov
test
push
jbe
arpl
dec
or
lods
inc
negb
jl
pop
xor
dec
xchg
push
xlat
fiadds
xchg
popa
std
testb
add
fiaddl
xchg
movsl
jp
mov
shlb
xchg
or
rorl
mov
call
sbb
or
pop
loope
aas
sbb
inc
stos
sahf
ret
dec
lahf
and
lahf
mov
lock
mov
addb
out
xor
orb
add
mov
rolb
inc
popf
xchg
fs
push
push
in
inc
mov
adc
and
push
je
xchg
pop
test
jno
loop
dec
cld
mov
or
jne
addl
sarb
insl
mov
inc
outsb
add
pop
call
fisubrl
cs
xor
and
xchg
push
xor
arpl
adc
mov
mov
cli
jl
lods
sub
stos
cltd
push
ror
xor
sbbb
call
pop
add
sbb
jb
pusha
pop
sti
sti
adc
insl
fs
or
adc
sub
cmp
ja
sbb
stos
mov
cwtl
or
mov
pop
cwtl
rcrb
stos
out
push
or
xor
cli
mov
xchg
mov
lret
mov
or
cmp
adc
aam
es
dec
cmp
mov
xchg
daa
pop
das
addr16
sub
fwait
jmp
and
inc
mov
xor
pusha
push
rolb
arpl
pop
mov
push
sbb
sbb
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
shl
ljmp
jle
movsl
inc
aaa
inc
add
xor
adc
push
or
pop
mov
dec
addr16
into
imul
push
mov
mov
les
movsb
pop
sti
fcomps
movsb
nop
test
mov
arpl
insb
rep
xchg
mov
mov
data16
and
xchg
sbb
xchg
xchg
add
inc
jbe
pop
loop
aaa
xor
and
or
sbb
add
jmp
cmc
outsl
xchg
jno
out
lds
push
xchg
daa
pop
and
rcll
cmpsl
fildl
cmp
jle
jle
test
ja
test
adc
xchg
cmpsb
xor
jmp
inc
movsb
pop
shl
stos
daa
fisubs
pop
sbb
jge
jmp
jb
ds
test
and
or
jmp
inc
mov
and
std
loopne
sbb
adc
arpl
cwtl
pop
aas
clc
sbbb
aas
repnz
insb
dec
test
bound
push
pop
xchg
push
xorl
aam
jae
add
fildl
popa
mov
push
pop
push
test
cmpsb
fcomps
fsubp
lret
sub
in
mov
dec
mov
and
dec
icebp
mov
test
fwait
jle
adc
pop
inc
jae
lods
sub
inc
sub
mov
pop
mov
cmpsb
mov
mov
dec
inc
xlat
pusha
dec
inc
mov
ss
cmpsb
pusha
pop
pop
ret
adc
dec
rorl
xor
pop
call
repnz
or
adc
fs
lods
cltd
pop
mov
pop
leave
scas
or
cmp
mov
pusha
out
xchg
cmp
xlat
dec
inc
daa
dec
call
jne
mov
adc
mov
fsubl
leave
ss
push
ds
sbb
lcall
pop
ljmp
push
fwait
sub
and
or
scas
test
cmp
fmulp
fidivrs
fisttpl
jns
roll
add
das
push
lahf
pop
mov
jg
xorl
mov
aam
push
in
stos
jecxz
fsubrs
mov
push
mov
sahf
xchg
int
xchg
mov
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
loope
xor
and
jle
jl
jle
cmpsl
xor
push
xchg
push
mov
loop
ret
in
negb
ret
jo
cmp
mov
cltd
pop
je
push
xor
and
push
cmpsl
fdivs
push
xchg
jmp
repnz
into
xchg
mov
cmp
xchg
loope
jge
scas
les
gs
sbb
mov
mov
xor
add
imul
cmp
cmp
cmp
jne
pop
pusha
dec
inc
cmc
sbb
inc
mov
es
fistl
es
mov
cmpsb
jge
ret
jp
mov
daa
push
stos
daa
or
sbb
or
inc
in
loope
daa
xor
clc
cmpl
adc
xchg
stos
sbb
ficoms
xchg
lret
sub
aas
sahf
push
gs
out
fnstsw
int3
sub
int3
out
jo
jl
leave
imulb
popa
pop
clc
or
sub
imul
cld
lods
sarb
in
and
jne
adc
mov
popf
pushf
movsl
lods
popa
nop
adc
std
adc
xor
sbb
pop
stos
aaa
mov
mov
aad
jecxz
jl
loope
push
popa
fstl
adc
jo
add
lret
mov
push
test
adc
xlat
addr16
mov
pop
adc
out
mov
stc
mov
adc
call
pop
fisttpl
lret
inc
cmp
popf
fs
xor
mov
test
loop
dec
push
xor
sub
cmp
lcall
mov
inc
out
sbb
dec
fldl
repnz
arpl
jno
xchg
xchg
or
mov
push
sbb
repz
cmpb
ret
adc
cmp
adc
sbb
sub
mov
bound
xorb
dec
je
xchg
adc
mov
pushf
shl
cld
test
out
shlb
sbb
cmp
aam
inc
shrb
lods
lods
lock
xchg
xor
mov
je
inc
or
je
shll
cmp
dec
call
jnp
inc
add
add
add
push
add
add
shlb
jnp
inc
add
jnp
inc
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
out
jle
cmp
inc
adc
shl
pop
lock
push
iret
push
mov
repz
stos
xor
arpl
icebp
ret
les
mov
and
clc
xor
fcmovne
xorb
sahf
aas
push
dec
into
inc
scas
loop
bound
sahf
xor
cli
cmp
push
cmp
js
sahf
push
mov
and
pop
dec
dec
scas
minps
rorl
or
mov
mov
insb
sub
adc
jge
push
adc
in
lret
aam
mov
pushf
scas
movsb
xchg
insl
aam
imul
std
dec
pop
fildl
dec
mov
mov
pop
pusha
dec
ficoml
leave
sub
xor
cmc
or
cmpsl
cld
cmpsl
bound
xchg
xchg
push
shrl
lock
adc
mov
out
xor
mov
out
mov
jnp
in
cltd
int
sub
jl
adc
lahf
loopne
ss
xchg
xor
mov
pop
ljmp
adc
push
aad
cmp
jle
fimuls
pushf
sbb
fldl
stos
cld
pop
sub
ss
pop
cli
sbb
push
decb
jno
mov
lock
cld
sbb
or
dec
es
mov
ficompl
leave
fsubs
and
movsb
sbb
arpl
push
fadd
in
sub
decl
adc
jbe
popa
imulb
sbb
xchg
adc
fmull
in
popa
enter
cmp
mov
push
es
add
ds
mov
jae
and
jnp
xchg
push
xor
inc
pop
add
or
jl
add
add
sarl
cmp
xchg
cltd
jne
add
xchg
icebp
lret
jmp
or
jnp
popa
push
data16
mov
pop
pop
sub
push
xlat
jmp
movsl
in
jg
adc
gs
nop
int3
ret
sub
imul
xchg
dec
bound
mov
inc
sbb
ljmp
shr
push
sbb
xchg
mov
incl
insl
imul
pop
lods
sarl
add
jmp
inc
add
test
or
xlat
ss
add
or
add
jne
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
cs
push
in
jle
cmp
xchg
mov
icebp
lahf
fidivl
fstpt
sbbl
loopne
mov
mov
cwtl
xchg
in
hlt
dec
ss
adc
repnz
mov
xor
xchg
mov
adc
enter
push
adc
dec
fisttps
adc
es
lea
push
fstpt
dec
stos
orb
xchg
ljmp
movsl
iret
cmc
inc
inc
movsb
jnp,pn
sahf
std
inc
data16
sbb
call
pusha
mov
ret
sub
ret
es
cmp
cmc
scas
cwtl
xchg
sbb
push
pop
mov
aam
mov
jle
adc
mov
ja
mov
arpl
sub
sub
ljmp
sahf
push
xorl
lea
movsb
hlt
xchg
cmpsb
in
mov
adc
add
int
out
insl
mov
xor
adc
push
rcll
std
jnp
pop
dec
push
jecxz
or
xchg
fildll
icebp
mov
cmp
lods
test
cmp
int
cmpsb
adc
lds
neg
sub
jae
and
shl
sub
insl
sbb
daa
ffree
je
movsb
pop
jb
shrb
xor
sahf
adc
movsl
and
fists
sub
or
ljmp
jmp
sbb
mov
mov
sbb
push
test
stc
jbe
push
aam
mov
push
or
mov
shrb
cmp
jne
jle
mov
cmp
ficompl
push
hlt
ja
idiv
mov
dec
pop
mov
call
es
mov
cmp
cmp
pop
insl
into
mov
es
lret
lods
fxtract
je
push
pop
imul
lret
or
inc
in
adc
adc
pop
add
push
inc
loopne
pop
xchg
nop
test
lods
outsb
and
jne
cltd
shrl
mov
jg
imul
adc
xor
fistps
loope
dec
pop
mov
pusha
jecxz
dec
cmp
mov
and
push
sahf
pop
cmp
push
xchg
add
ljmp
inc
cld
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
dec
or
cmc
shr
jle
cmp
dec
cmp
fidivrs
push
fadd
jne
movsl
xchg
adc
pop
aas
add
shll
fsubrp
push
mov
nop
xchg
jb
add
push
cmc
mov
aas
xchg
push
mov
repnz
or
sbb
add
aaa
out
push
lret
out
sti
mov
push
sub
das
std
jmp
mov
sarb
out
cwtl
iret
pop
repz
scas
push
inc
add
inc
pop
sti
pop
outsl
add
and
lock
and
adc
and
icebp
lds
cmpsl
cmp
mov
push
movsl
sbb
sbbl
jecxz
scas
popa
fs
arpl
cli
lock
pop
cs
iret
enter
add
subb
cwtl
dec
mov
jl
adc
daa
cmpb
mov
add
mov
push
dec
inc
test
jno,pt
fcoms
bound
push
cmp
ret
push
mov
aaa
movsb
inc
test
mov
pop
mov
dec
mov
mov
jns
mov
dec
mov
sub
mov
and
xchg
pop
adc
dec
mov
jl
xchg
mov
xchg
push
and
int
cmp
aas
or
loop
cmp
push
testb
dec
andb
mov
aam
sarb
outsb
bound
nop
insl
xlat
lret
xchg
fcmovnbe
ret
push
mov
xor
jecxz
adcb
mov
push
xor
mov
je
aam
mov
inc
imul
mov
dec
std
cmp
jecxz
gs
ret
xchg
sbb
ret
or
xchg
adc
pop
scas
sub
loopne
call
mov
xchg
pop
rcll
push
mov
dec
fdivrl
xor
and
ss
cmp
mov
xchg
sbb
push
jmp
jb
or
movsl
sahf
mov
cld
divb
jge
mov
and
test
sbb
fnstcw
jecxz
pop
jne
jo
aam
mov
pop
or
jmp
inc
add
je
add
outsl
aaa
inc
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
sbb
pop
or
aam
aad
lock
mov
cmpsl
xor
sub
sub
jp
pop
lret
leave
test
enter
mov
sbb
mov
je
sti
mov
out
lods
cmp
cwtl
rclb
mov
addr16
jp
pop
mov
fimull
ja
pop
imul
mov
jns
or
out
ja
and
bnd
lret
ljmp
pop
adcb
pop
js
sub
stos
dec
popf
lahf
das
cmp
icebp
fistpl
mov
aaa
jmp
adc
popa
mov
dec
in
int3
pop
jmp
fnstenv
addr16
push
xor
into
leave
push
sbb
push
sbb
lea
shr
and
aad
or
pop
mov
and
mov
jle
xor
inc
cmp
iret
sbb
mov
fdivrl
push
push
push
in
mov
xchg
push
sbb
in
and
shll
daa
in
orb
push
adcb
in
sbbb
jnp
jg
mov
sbb
push
and
cmc
and
divl
cmc
cltd
test
stos
icebp
jle
subl
mov
adc
sbb
jg
stos
lods
gs
or
and
stos
push
cld
jno
test
fsts
dec
jbe
push
mov
mov
call
call
adc
aam
mov
int
mov
adc
dec
xor
stc
lods
xor
lods
outsb
add
lods
mov
icebp
ret
add
and
mov
cmpl
repnz
movsb
fdivl
fisubs
in
in
mov
pop
fldcw
xchg
pop
mov
xchg
inc
inc
insb
pop
icebp
rcrb
xchg
add
lret
ss
in
icebp
push
dec
pop
repnz
cmp
sub
aam
mov
popa
cmp
jb
sbb
xor
and
rolb
adc
sbb
inc
sbb
inc
mov
ljmp
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
pop
inc
jg
idivl
cmp
dec
or
pop
sbb
push
gs
push
repnz
push
aas
adc
mov
pop
push
sar
jo
imul
lods
loope
std
stc
mov
mov
sub
xor
or
jg,pt
or
sbb
push
fistl
or
cmp
push
pop
ss
dec
jmp
scas
xor
aam
cmp
stos
mov
mov
mov
daa
imull
adc
sub
insl
inc
lods
xchg
xchg
adc
dec
and
pop
mov
scas
push
push
in
insl
ret
das
in
ret
lcall
adc
pop
incl
call
shlb
lock
cltd
jle
out
aam
jnp
sahf
jecxz
leave
push
xor
cmp
lcall
mov
inc
arpl
inc
or
mov
lcall
and
ss
test
aad
in
clc
lods
xor
rcrl
adc
mov
push
aam
or
rcrl
dec
jae
xchg
adc
loope
or
mov
adc
mov
daa
out
repz
arpl
es
das
xchg
test
inc
scas
mov
xor
rolb
jae
push
aam
test
out
sbbb
in
xlat
jle
addb
rcll
int
xchg
or
dec
addr16
jbe
mov
xlat
inc
jg
pop
das
xchg
leave
repz
jae
loopne
std
sub
sbb
mov
insl
imul
add
test
orl
add
sub
imul
or
cmp
inc
inc
loopne
aaa
adc
ljmp
sbb
jge,pn
fildll
xchg
mov
popa
lret
fsubrl
scas
into
pop
and
loop
nopl
fsincos
sbbb
js
aad
adc
mov
mov
mov
pop
imul
adc
sub
xor
rorb
inc
ret
sbb
stos
in
mov
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
repz
jle
cmp
sbb
out
xchg
js
lods
aaa
inc
movsb
push
inc
sub
pop
mov
adc
stos
xchg
sbb
jne
mov
sahf
gs
push
test
push
aam
xlat
push
sbb
cmp
scas
push
inc
mov
sub
mov
fbld
jecxz
mov
cmc
xor
out
imul
xor
jecxz
outsb
and
std
rorb
mov
pop
mov
mov
mov
jo
dec
mov
out
adc
adc
cwtl
add
or
arpl
dec
out
lret
or
scas
ljmp
aaa
int
xor
fwait
jns
xor
jge
into
outsl
dec
ja
imul
sub
pop
mov
xchg
rclb
mov
repz
mov
mov
cmp
jb
int
lea
mov
lods
mov
fiadds
jbe
xchg
lahf
xor
xor
add
rol
and
popa
inc
xchg
lahf
jne
outsb
mov
xchg
pop
inc
repnz
icebp
xor
int
adc
mov
inc
nop
lret
insb
pop
in
xchg
mov
mov
pop
xchg
or
cmp
mov
hlt
pop
cwtl
sub
and
adc
repz
xchg
aad
adcb
imul
pop
and
stc
xchg
lret
mov
gs
dec
inc
iret
in
cmpsb
sti
and
or
mov
xor
test
pop
std
mov
fldt
test
scas
lea
lods
jl
mov
xchg
push
jecxz
cmp
xchg
cmp
pop
adc
aam
testb
ret
roll
lods
mov
cwtl
arpl
push
and
pop
stc
jecxz
stos
jecxz
and
mov
xchg
fisubrl
fwait
pushf
xchg
inc
mov
cmpb
fwait
push
hlt
inc
repz
mov
push
xchg
sub
jnp
cmpb
cmp
jecxz
out
arpl
sbb
arpl
dec
daa
adc
lods
ret
cmc
mov
xchg
and
sbb
loope
add
iret
cld
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
push
xchg
mov
call
jl
jle
push
pop
mov
xchg
adc
roll
mov
addb
jbe
ret
les
push
push
or
pop
orl
outsl
out
aaa
jp
pop
xor
adc
aad
mov
shll
pop
sub
jmp
mov
fabs
dec
stc
sub
ss
pop
push
jecxz
push
aaa
test
cwtl
fldenv
mov
hlt
cltd
push
mov
push
pop
xlat
cmp
jmp
push
inc
in
lds
mov
mov
leave
aam
mov
adc
mov
cmp
cltd
jmp
fs
fisubrl
pop
pop
add
ds
mov
les
unpcklps
lds
insb
sbb
sbb
in
sub
xchg
aam
dec
mov
adc
fcomip
push
ljmp
jmp
jecxz
or
push
mov
xchg
inc
pop
or
icebp
adc
scas
or
les
cmp
lahf
stos
jmp
add
add
call
test
nop
lods
lret
stos
mov
je
add
mov
and
pop
mov
int3
aaa
sahf
mov
sbb
sub
shlb
test
cli
mov
rorb
rcll
stc
mov
push
jno
lods
imul
sub
add
adc
adc
push
lods
push
inc
es
xchg
je
dec
inc
sti
imulb
push
cli
out
inc
pop
adc
or
inc
imulb
int
fdivr
xor
mov
js
mov
cmp
mov
pusha
inc
es
pop
sbb
sbb
out
lea
push
push
orb
push
or
test
inc
add
sub
les
nop
in
add
inc
aas
stos
mov
into
jl
sbb
mov
rcrb
mov
ljmp
jle
add
lods
loopne
vpsrld
mov
test
inc
xchg
ds
je
lods
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
xchg
nop
cli
mov
jle
cmp
shr
cmp
ja
adc
pop
cltd
pop
stos
call
sub
add
ja
fsave
aaa
das
lock
sarb
inc
mov
jne
xor
push
bound
pop
shrb
cwtl
data16
mov
xchg
push
mov
mov
mov
inc
std
addl
mov
pop
pop
mov
inc
bound
mov
and
call
testl
add
mov
fnstcw
andl
lea
adc
mov
stos
xor
xlat
push
shlb
test
and
andl
push
jno
xor
mov
cld
pusha
push
mov
idivb
fsubrs
aam
imul
push
repz
and
scas
popf
and
xchg
sbb
fwait
jne
sti
mov
inc
dec
dec
fistpll
adc
add
clc
lods
ljmp
ljmp
data16
out
repz
notl
out
inc
dec
hlt
mov
loope
mov
lods
leave
fcmovbe
loop
mov
fmull
add
mov
fst
sub
sbb
gs
jmp
lahf
icebp
mov
movsb
lea
dec
sub
shlb
aas
sub
or
xlat
and
mov
pop
xchg
fstpt
sub
outsb
jmp
sbb
cmp
cli
sbb
hlt
cmpsl
es
insb
sbb
bound
lcall
nop
es
dec
add
lahf
repnz
inc
and
push
lret
mov
xchg
mov
sub
insb
loopne
mov
lret
dec
sub
scas
pop
jns
lock
cmp
mov
and
adcl
mov
in
lcall
cltd
imul
add
lock
xlat
xchg
popa
stos
aad
cmp
pop
into
cmpsb
sub
xchg
fs
push
push
jmp
or
jecxz
mov
rcr
subl
scas
mov
or
add
sbb
int3
clc
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
jbe
jl
jle
cmp
sbb
mov
aas
hlt
and
jmp
stos
mov
popa
sub
icebp
xchg
pop
dec
outsb
mov
xchg
cmp
cmp
sahf
pop
repz
fdivl
add
jo
ja
aaa
pop
loop
les
push
in
cmp
jecxz
sbb
jmp
push
outsl
or
leave
adc
daa
mov
iret
inc
pop
dec
addr16
cmp
mov
clc
cmc
mov
pop
ss
loope
aam
aas
cmp
repz
adc
xchg
mov
sbb
in
nop
pop
out
xor
jle
add
push
adc
xchg
lret
mov
iret
mov
cmp
or
add
inc
cmpsl
sub
nop
in
sbb
ss
dec
pusha
outsl
xor
int
jmp
inc
enter
cmpsl
je
mov
mov
sti
jae
sbb
xor
jnp
shrl
push
lcall
adc
das
or
inc
sbb
mov
insl
or
aaa
sub
fidivrl
push
and
shll
sub
push
ret
mov
call
mov
mov
lods
cwtl
cmp
stos
or
cmpsl
sarb
mov
dec
aam
or
dec
movnti
andl
and
xor
aad
enter
inc
je
jp
inc
ja,pn
sbb
cmp
cltd
popa
mov
cmp
push
cltd
dec
sub
fchs
cmc
lock
lcall
rcl
dec
sub
in
roll
push
pop
jmp
pop
mov
xor
outsl
cli
push
mov
sub
push
jae
scas
repnz
repz
xor
cwtl
xchg
add
mov
mov
jo
push
or
lcall
mov
xchg
mov
add
nop
xor
scas
mov
mov
lods
add
out
jae
jne
movsb
push
dec
rol
mov
add
sub
cltd
lea
and
je
ret
or
add
inc
out
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
les
sti
jle
cmp
cmc
pusha
mov
mov
jnp
movsb
push
sub
sti
or
add
mov
out
cmp
push
jne
cltd
inc
pop
cmp
push
adc
xchg
outsb
jns
dec
je
xchg
andb
xchg
fnstenv
or
or
mov
add
xor
add
mov
loopne
lods
dec
xor
leave
xlat
ret
inc
lret
andb
hlt
sbb
fsubrl
in
int3
sarb
adc
mov
mov
ja
cmpsb
mov
push
iret
cld
fs
mov
sbb
xor
aas
or
dec
std
stc
inc
jae
in
clflush
sub
movsb
fwait
lds
dec
dec
pop
aaa
test
xor
mov
or
pop
int3
aas
add
mov
mov
xchg
sti
jns
lret
push
das
add
in
pop
mov
pop
xchg
pop
cltd
xor
push
data16
push
outsl
cmpsl
sub
loop
cmp
cmp
pushl
fiadds
jmp
xor
push
jecxz
call
cmp
movsb
and
adc
sub
sub
sbb
xor
test
push
movsl
mov
push
mov
lds
or
test
lock
cmp
jecxz
cmc
or
sub
gs
push
dec
sub
icebp
popa
or
jle
sub
jno
insl
add
mov
iret
jnp
push
insl
mov
and
push
jp
xlat
rorb
jo
push
pop
cmp
fs
test
xchg
cmc
fmull
sub
mov
dec
pop
sub
mov
cmp
insl
and
stos
in
sbb
scas
mov
lret
cmp
mov
adc
pop
fidivrs
and
stc
ficoms
out
push
mov
ja
stos
and
or
jg
mov
testb
rcll
jno
icebp
dec
ret
bound
add
push
mov
ja
add
pop
inc
cmp
push
or
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
fildl
jl
jle
dec
aaa
sub
mov
or
cmp
popa
into
lea
popf
and
dec
std
hlt
imul
imul
dec
add
push
lods
or
cltd
sbb
jge
sbb
sbb
xchg
push
fs
or
mov
or
adc
and
xchg
lcall
test
pop
es
sub
dec
negb
and
les
ds
dec
inc
shll
mov
pop
dec
pushf
pop
call
mov
addb
jmp
xor
ds
xchg
push
mov
stc
pop
pop
mov
mov
fwait
addr16
iret
divb
xor
lods
add
push
adcb
pop
jns
xlat
inc
dec
sub
aam
and
addr16
fcomp
fadd
call
inc
push
addr16
pop
or
xchg
test
inc
sbb
and
inc
stc
inc
ljmp
mov
mov
shrl
es
push
stos
cmp
xchg
test
fldt
xchg
in
dec
xchg
push
or
inc
cltd
inc
xor
jg
inc
pop
out
push
fistpl
jp
push
sub
mov
daa
push
ss
out
cmpsb
inc
xor
lds
xchg
stos
and
or
xor
mov
jp
jge
jae
and
adc
xchg
in
mov
push
pusha
dec
lcall
mov
aaa
shrl
data16
into
dec
xor
lock
or
xchg
scas
idiv
insl
and
lret
dec
das
popa
je
fsubs
ss
jb
movsb
sti
add
enter
cmpsb
inc
push
mov
lcall
cmc
lods
scas
iret
pusha
leave
rorb
or
cwtl
outsl
std
or
inc
cmc
push
xrelease
mov
xchg
mov
sbb
leave
adc
adcb
test
mov
int3
push
jno
dec
call
es
and
mov
mov
fldenv
pusha
sub
mov
clc
hlt
jmp
fidivl
inc
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
cmp
dec
xchg
cmp
inc
sbb
cli
sbb
xor
stos
enter
add
sbb
jp
sbb
addr16
mov
pop
stos
daa
rorb
cmp
and
and
jo
lcall
mov
jl
out
inc
scas
xchg
push
sarl
cwtl
in
sub
outsl
pop
shll
push
cmpsb
outsb
add
mov
or
in
mov
dec
push
ja
arpl
pop
mov
or
lods
popa
adc
xchg
jp
ds
mov
scas
lds
and
dec
cltd
mov
add
dec
imul
les
push
aas
mov
cmpl
xor
cmp
jecxz
jmp
fwait
and
int
icebp
add
rcll
jnp
and
pushf
nop
sbb
rcrl
std
xor
or
mov
sub
inc
ljmp
xorl
push
inc
and
cltd
dec
hlt
into
leave
lock
inc
add
jno
loopne
movsb
jle
aaa
icebp
or
rcl
call
fs
movsb
mov
adc
nop
fstpt
jne
mov
xor
jb
daa
push
pop
addr16
setle
or
jae
or
sub
sbb
push
sbb
push
dec
pop
or
push
testb
lock
pop
adc
insl
mov
mov
pop
dec
dec
ret
out
jmp
rcrb
stos
mov
mov
fcmovb
repz
push
xchg
inc
jl
add
jo
adc
fistps
mov
ljmp
lahf
stc
into
inc
mov
xchg
int3
mov
test
iret
test
mov
push
std
jp
sbb
mov
out
leave
test
push
mov
fisttpll
enter
imull
sbb
cmp
mov
adc
lret
add
lahf
inc
pop
adc
addr16
inc
add
mov
mov
movsl
mov
into
inc
xchg
pushf
aam
ret
gs
add
std
cltd
out
sbb
lods
in
push
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcr
mov
adc
jle
cmp
dec
pop
mov
inc
out
sti
cmp
in
data16
mov
and
add
mov
in
cld
dec
in
xor
and
inc
mov
rolb
aaa
mov
push
mov
rcrl
jg
cwtl
sbb
loop
shlb
nop
xor
aas
enter
or
out
jb
out
leave
jbe
fdivl
cmp
loope
add
jo
pop
mov
push
iret
dec
hlt
imul
incb
mov
inc
out
jb
mov
ds
out
mov
pop
cltd
addb
les
pop
sbb
mov
scas
lods
jg
lock
jae
or
push
xchg
mov
lds
and
cmp
negb
xchg
shl
stos
loop
in
negb
dec
jmp
push
cwtl
pusha
pop
arpl
fildll
int3
hlt
push
xor
movsl
mov
std
incl
jbe
mov
in
call
xchg
mov
xor
aam
xchg
mov
test
xlat
jno
xchg
dec
jae
outsl
gs
in
pop
xor
mov
lret
pusha
push
iret
movsb
les
test
les
xchg
rorl
pusha
arpl
out
je
test
add
inc
rorl
mov
cmpsb
inc
xor
dec
ret
xchg
pop
sti
fisttpll
loopne
mov
ds
dec
xchg
iret
rcrb
sub
mov
dec
stos
cmp
iret
movsl
dec
fildll
pop
mov
repz
xor
rcll
lea
repnz
nop
mov
stc
push
test
xchg
inc
pop
jmp
inc
dec
xor
out
insb
inc
jnp
cmp
jo
dec
cs
fs
push
jmp
fs
mov
add
lret
repnz
call
xor
jecxz
ret
pushf
ss
mov
inc
and
rolb
rcll
in
fwait
shlb
leave
sbb
push
sahf
inc
scas
mov
in
lods
pop
shlb
sbb
mov
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
jge
fiadds
jle
outsl
cmp
and
sub
dec
push
mov
mov
mov
loopne
das
inc
je
cmp
out
test
mov
pop
dec
in
mov
adcb
cmp
push
sub
cltd
daa
push
jmp
lret
xchg
or
popa
xor
or
test
testl
pop
call
fsubrl
movsb
add
ljmp
mov
mov
jne
or
pop
xchg
mov
and
arpl
nop
mov
mov
addr16
outsl
out
dec
cli
aam
iret
sub
lahf
mov
cmpsb
insb
xchg
mov
push
mov
push
scas
mov
adc
rolb
jg
xchg
out
test
xor
aas
dec
in
iret
movsb
inc
adc
add
jnp
mov
imul
cmp
icebp
jle
pop
imul
dec
jmp
arpl
xchg
mov
pop
int
pop
fnsave
arpl
xchg
inc
mov
out
push
jmp
fcompl
dec
mov
add
test
gs
es
and
push
and
adc
insb
popl
and
iret
out
add
cmp
or
outsl
adc
push
cmc
mov
incl
and
mov
sbbl
cld
mov
jl
fsts
add
int
and
stos
enter
in
mov
pop
out
jnp
jmp
jg,pt
stos
pop
cmp
push
or
mov
jno
cmpsl
inc
push
les
pop
movb
pop
rcrb
sub
sbb
xlat
fld
and
incl
mov
ret
js
jbe
adcl
and
scas
scas
inc
ret
push
push
fmul
addr16
pop
push
jle
insl
aam
test
andb
xchg
lds
dec
sbb
inc
xor
adc
mov
aaa
dec
daa
inc
test
xchg
test
pop
addb
sub
adc
shr
add
add
mov
cwtl
mov
mov
cmp
or
loopne
mov
cmp
int3
adc
fs
push
xchg
jnp
movsb
jmp
pop
fbld
or
mov
mov
push
xchg
imul
xor
out
sbb
lret
cmc
sarl
and
ret
push
pop
gs
add
xor
pop
or
adc
jmp
mov
xchg
mov
cmp
ror
ret
pop
sbb
or
mov
jle
cmp
pop
push
pop
lret
js
xchg
cltd
sar
xor
xor
xor
cmp
js
or
fimull
sbb
testb
dec
repnz
in
shlb
arpl
xchg
dec
test
popa
jae
and
mov
mov
gs
imul
sbbb
into
push
stos
pop
or
jne
dec
rcl
push
cmpsl
fs
mov
xor
fldt
mov
push
scas
nop
xchg
pop
rcrl
mov
cmp
pop
aad
and
mov
js
and
inc
sbb
pop
mov
aas
cmp
scas
test
cmpsb
arpl
push
pop
sbb
adc
or
cmp
adc
pop
mov
cmc
sbb
loop
fistpl
dec
jbe
push
xchg
mov
inc
sahf
stc
js
mov
in
pop
mov
xchg
sti
sahf
data16
add
jnp
ss
sub
test
subl
mov
int
jle
aam
cmp
jge
popa
mov
xor
mov
jno
add
mov
pop
pusha
cmpsl
in
cli
and
push
pop
sub
loope
loope
rcrb
push
clc
pop
daa
mov
sub
jmp
and
mov
cmpsl
ficoms
add
insl
add
ret
push
popa
add
aas
fcmovnbe
addl
mov
inc
sti
xchg
rcrb
or
lods
dec
jmp
jnp
xor
addr16
pop
cmpl
testb
pop
push
lret
adc
imul
jg
sbb
lahf
in
inc
sbb
ljmp
mov
leave
imul
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
lods
inc
leave
bound
jle
test
test
divl
jnp
lea
lret
out
test
fildl
cmp
sahf
jle
fidivrl
xor
movsl
sbb
test
sahf
aas
xchg
ljmp
lahf
mov
inc
mov
cmc
mov
scas
and
jbe
inc
mov
inc
sbb
jbe
xor
cli
and
adc
xlat
aas
test
loop
inc
mov
loopne
stos
add
in
sahf
and
fs
cli
push
xchg
test
jo
xor
sahf
pop
subl
xor
lret
popa
stos
mov
mov
add
int3
xchg
fldcw
les
fildl
cld
add
jnp
cmp
andb
test
xchg
movsb
nop
mov
jle
jecxz
rcrl
push
sub
loope
sbbl
aas
pop
inc
js
loop
and
xor
into
out
mov
inc
and
push
jbe
out
mov
sti
stos
pop
xor
jmp
xor
js
dec
in
cmp
in
cmpsb
pop
into
and
outsl
pop
int
mov
sar
mov
adc
mov
pop
clc
mov
push
xor
lret
pop
inc
lcall
out
lret
pop
cli
lret
xchg
adc
test
mov
mov
shrl
and
pop
testl
pusha
adc
fidivl
out
in
lds
push
popf
adc
mov
inc
sbb
fmulp
out
jp
fs
test
push
xor
mov
js
incl
dec
or
push
lcall
sub
or
mov
xor
mov
aam
push
lock
movsb
into
lods
cmp
ja
loopne
xchg
bound
xchg
pop
aaa
or
call
mov
push
and
jns
mov
jp
stos
dec
aam
stos
clc
addr16
sub
xchg
iret
dec
repnz
les
push
add
inc
stos
add
pop
xor
pusha
jns
flds
add
push
std
dec
sahf
push
push
add
jge
mov
sub
jle
cmp
mov
loope
dec
dec
fmull
push
cs
adc
out
aam
push
int3
pop
mov
popa
clc
xor
push
in
fstps
mov
fildl
lock
lods
cmp
push
andl
jle
repz
js
pop
pusha
jl
nop
mov
sbb
xor
test
jecxz
xchg
ljmp
mov
je
inc
ds
push
push
mov
or
stos
mov
push
jb
sub
or
pop
jb
bound
inc
psubq
inc
push
jne
xchg
clc
pop
int
cwtl
add
inc
mov
ret
xchg
fs
idiv
pop
jbe
insl
adc
adc
xchg
lea
cli
push
movsl
dec
mov
push
gs
lock
jno
add
repnz
push
mov
in
iret
stos
cmp
sub
sub
cmp
dec
test
stos
sbb
push
repz
mov
rorl
mov
ret
std
push
jp
bound
mov
orb
mov
dec
inc
frstor
jne
jge
jmp
and
into
mov
mov
out
ds
cmpl
test
lret
adc
mov
rcll
das
and
imul
lret
fsub
push
mov
and
inc
inc
cwtl
push
adc
push
dec
xchg
xchg
inc
pop
leave
push
pushf
mov
fimull
ds
xchg
les
daa
xor
inc
push
into
xchg
dec
data16
das
adc
call
pushf
iret
test
cmpsl
or
hlt
fcomp
data16
cmp
fs
or
jne
inc
pop
dec
rorb
adc
test
sahf
lret
and
mov
or
mov
mov
and
lret
stos
dec
lcall
scas
add
cmp
repnz
sub
fsubs
jno
dec
xchg
iret
and
sbb
sub
ljmp
or
fldl
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
push
hlt
jmp
cmp
sbb
sahf
add
mov
pop
test
and
and
or
call
xchg
mov
xchg
addr16
lds
pop
push
rclb
cli
sbb
cmp
mov
jecxz
fwait
jno
rorb
add
xorb
xlat
push
and
lret
sbb
xor
das
xlat
out
icebp
xor
lea
les
outsb
jnp
lret
mov
test
shrb
lods
sub
jge
push
in
inc
ds
sbb
sub
xor
adc
adc
rorb
dec
fucomi
jo
adc
xor
xor
mov
scas
jge
orb
test
negb
push
negl
mull
sahf
pushf
adc
inc
test
scas
push
and
lds
cmp
mov
int
insl
ljmp
pop
add
cmp
sub
cwtl
mov
mov
and
shlb
jo
pop
xor
or
cmp
fcom
fwait
dec
into
sub
cli
aam
jp
sub
adc
push
pop
jae
pop
fnstsw
push
lahf
sbb
pop
movsb
in
fmulp
aad
shll
pusha
dec
in
popf
les
adc
jne
and
mov
sbbl
data16
mov
dec
push
sbb
xchg
cmp
imul
aaa
aam
scas
int3
bound
clc
adc
or
pop
mov
enter
mov
cmc
movsb
sub
push
sbb
or
mov
int
loope
hlt
out
cmp
inc
lahf
sbb
nop
shll
std
pop
call
loop
push
sub
in
movsl
push
mov
xchg
ljmp
push
int3
or
xor
rorl
lods
fstps
cmp
aas
scas
outsl
or
sub
push
or
ljmp
icebp
mov
jecxz
fimuls
movsl
je
arpl
and
out
cltd
dec
mov
loope
loop
les
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
pop
or
xorl
sahf
bound
dec
add
int3
jo
cmc
int
rcrl
stc
ljmp
inc
popa
adc
dec
push
test
add
pop
mov
pop
xchg
sub
push
adc
cmpsl
xor
inc
and
inc
and
cmp
dec
fldcw
ljmp
out
mov
shl
andb
in
jbe
jg
pop
pop
daa
cmp
jns
ret
mov
push
out
xchg
xchg
fs
cli
xor
sbb
fcompp
lcall
out
lahf
dec
lret
xchg
sbb
lods
addr16
xor
jle
or
and
cmp
xchg
inc
cmpsl
loop
subl
jae
or
aas
jg
pop
sub
cmp
pop
lahf
dec
mov
movsb
pusha
cmp
mov
insl
cmpl
aaa
addr16
mov
inc
lcall
mov
int3
jno
sub
aam
popa
push
stos
and
xor
aad
adc
sbb
and
mov
mov
scas
ja
movsl
popa
mov
push
inc
fcoml
mov
fstpl
or
iret
imul
pop
pop
pop
mov
mov
pushl
push
adcl
fidivl
insl
mov
push
push
mov
xlat
ljmp
pusha
clc
cmp
mov
xchg
bound
jg
js
jnp
dec
xor
loop
gs
std
lods
cmpsb
repnz
mov
pop
outsb
fadd
xchg
cltd
fcmovb
fbstp
inc
iret
mov
repz
cmc
test
cmc
call
insb
repnz
cmp
jg
add
shll
mov
push
ret
inc
fwait
and
sub
stos
jg
cmp
fs
pop
push
aaa
aad
xor
imul
dec
mov
popa
fwait
jge
adc
mov
push
inc
aad
fists
imul
jno
movntps
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
or
jp
jle
jl,pt
jle
imul
mov
sub
shrb
mov
adc
sub
xor
popa
cld
imul
movb
fnsave
stos
js
pop
adc
fmulp
mov
loopne
pop
sbb
sahf
add
mov
jae
sahf
mov
fsubrl
imul
xorl
popa
scas
adc
test
icebp
cli
aam
aas
mov
and
push
add
loopne
mov
fmuls
mov
mov
add
fbstp
adc
sbb
jno
mov
mov
and
mov
je
popl
test
clc
test
xchg
inc
data16
xor
fiadds
jo
add
divl
sbb
xor
inc
xchg
sub
jp
lret
and
loop
leave
dec
sbb
or
shl
lea
out
add
xchg
test
push
stos
decb
insl
xor
fwait
iret
lahf
scas
pushf
scas
sub
mov
adc
sti
pop
leave
mov
cltd
sub
cwtl
mov
lds
inc
bound
lret
adc
or
lcall
lret
addb
fdivrs
fisubrl
fcompl
cmc
adc
jb
in
inc
icebp
stos
dec
adc
test
mov
xchg
out
das
js
and
mov
or
cmp
test
pusha
dec
int
cltd
mov
hlt
push
andl
js
sbb
dec
and
push
and
or
pusha
xchg
movsb
jae
dec
lret
fucomip
lcall
ret
lea
cmp
sbb
std
adc
out
pop
arpl
bound
jg
and
xchg
movsl
pop
adc
mov
or
lret
mov
mov
or
pop
pop
rorb
test
xor
jp
aas
lea
aaa
in
pop
add
popf
xor
adc
cs
pusha
in
or
imul
mov
sbb
ret
pop
mov
in
push
clc
sarb
inc
or
cli
and
cmpsb
mov
sbb
scas
xchg
ret
popf
sbb
pop
jg
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
mov
sbb
nop
jle
jl,pt
jle
xchg
push
xlat
mov
ja
xchg
fiadds
dec
inc
sub
fs
jge
adc
adc
testl
icebp
add
dec
sahf
cld
rolb
js
out
cwtl
push
scas
icebp
mov
mov
mov
test
enter
int3
inc
lcall
mov
mov
lea
insb
dec
add
xchg
ljmp
jle
sub
cmp
jne
sub
test
xchg
fsubs
mov
push
in
insb
xchg
scas
or
negb
jecxz
loop
and
sub
push
mov
cmp
fisttpll
icebp
loope
cmpb
ja
rorb
inc
add
inc
and
imul
sub
mov
mov
call
xor
lods
sahf
cmc
xchg
in
clc
mov
inc
ss
mov
jp
push
gs
arpl
dec
cmp
mov
or
xchg
gs
je
jecxz
mov
fmull
pop
and
push
and
inc
in
push
cli
call
aam
enter
orw
imul
bound
add
popf
jbe
push
loop
sarb
inc
popa
mov
popf
scas
in
or
pop
ljmp
call
loop
and
sub
jno
lods
punpckhdq
mov
repz
sub
sbb
push
mov
fmuls
test
add
cmp
xchg
mov
pcmpeqw
mov
loop
mov
jb
inc
repnz
inc
mov
or
imul
push
divb
mov
cs
test
clc
orb
js
jle
leave
xchg
jbe
mov
cwtl
lret
mov
insl
leave
cli
mov
loop
dec
adc
add
imul
enter
in
fnstcw
fcomps
mov
push
sarl
jle
les
add
int3
cli
aaa
scas
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
dec
jae
adc
cmp
dec
dec
jmp
clc
jno
insl
push
sahf
aas
jmp
xorl
jb
clc
or
repz
loope
mov
inc
rorb
pusha
sub
lock
fidivs
fwait
int3
test
xchg
xor
lds
cli
pop
cmpb
mov
aas
dec
push
push
out
lahf
cmp
aam
mov
cmc
inc
xor
mov
pop
or
mov
push
test
lock
jbe
imul
cmp
icebp
mov
scas
mov
pop
adc
in
cs
cmp
addr16
dec
xchg
sub
js
mov
insb
and
lods
sarl
ja
mov
mov
cmp
lods
and
cmpsl
push
pop
outsl
fimuls
lds
sahf
sub
lret
pop
call
jecxz
stos
js
outsl
mov
cmpsl
ret
sti
xor
push
lea
cwtl
aaa
xchg
cmpsb
sub
popf
jnp
push
les
sti
push
jb
sbb
jo
test
scas
mov
ljmp
fisttps
andb
mov
into
sahf
addr16
inc
cmp
pusha
push
outsb
push
inc
mov
enter
xchg
iret
mov
xor
cli
xchg
lea
imull
int
sbb
mov
shrb
sbb
mov
clc
mov
shl
out
xor
shll
dec
testl
inc
shr
push
pop
pop
lods
sub
imul
cld
pop
sub
pop
add
fwait
push
fdivrl
testb
push
xor
stos
xor
add
das
jge
pop
imul
imul
push
xor
dec
gs
cmp
add
push
sbb
jmp
cwtl
add
mov
sbb
pop
sahf
loop
jne
aas
mov
out
pop
aas
out
imul
lcall
gs
or
lods
cli
popa
pop
mov
add
insl
mov
and
push
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
imull
inc
dec
mov
adc
jle
stos
mov
fcompl
dec
fldl
adc
popa
cmp
int
icebp
loop
xchg
mov
addr16
or
icebp
int
gs
popf
shll
cld
and
icebp
jecxz
add
dec
or
ficoml
jbe
es
push
pop
or
scas
push
mov
mov
xlat
stos
test
cmp
pop
fadds
jae
ret
fistpll
mov
test
inc
dec
fimull
dec
xchg
das
imul
fdivs
jnp
loope
pop
int
pop
movsb
fldenv
cwtl
mov
xorb
fcmovb
mov
ljmp
push
lea
dec
dec
mov
sbb
dec
adc
push
lock
scas
sub
and
lret
inc
jl
pop
sahf
into
iret
sti
mov
subb
cwtl
je
pop
lods
fldenv
out
push
jp
xchg
sub
je
lods
add
mov
xchg
lds
stos
mov
test
mov
cli
push
pop
xor
sub
and
subl
push
or
mov
jmp
cmp
shll
xor
stos
aad
vdivpd
jle
pop
jge
loopne
sub
outsl
pop
cmpsl
mov
mov
fdivrl
mov
adc
cwtl
mov
push
outsb
add
into
inc
repnz
fcoms
jecxz
enter
jo
jmp
arpl
lret
pop
adc
xor
and
out
movsl
in
xchg
loope
lock
sbb
jae
je
repnz
push
je
std
add
int3
das
dec
xor
shlb
sub
ret
mov
js
sub
jmp
lods
bound
mov
sub
jge
cmpsb
mov
xchg
or
and
leave
mov
lahf
mov
in
jmp
jae
mov
enter
jbe
mov
fcmovu
xchg
push
or
jp
xor
mov
cmp
pushf
outsb
mov
dec
enter
mov
jno
jp
cld
int3
ljmp
scas
out
rcrb
xor
adc
mov
clc
icebp
xchg
fnsave
leave
xchg
add
xorl
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
mov
mov
jle
jg
jle
sub
mov
hlt
ss
pop
fisubrs
outsb
mov
xchg
sub
mov
pop
add
cld
add
add
insb
in
repnz
xchg
dec
insb
inc
outsl
push
loop
jecxz
push
test
lods
mov
mov
and
mov
insl
pop
pop
push
mov
mov
fcmovne
or
xor
sbb
and
adc
sbb
mov
aam
jecxz
sti
jns
xchg
fcomps
popa
cmp
ds
testl
lret
es
in
mov
sub
out
sbb
adc
mov
sbb
push
adc
xor
ret
xor
pop
jb
xchg
insb
fstpt
pushl
and
xchg
push
es
push
sbb
and
sbb
repz
or
jp
lcall
xlat
sahf
mov
and
push
fcmovbe
out
fwait
push
push
sbb
movl
jns
pop
mov
sahf
mov
xchg
and
repz
push
cmpsl
xchg
sbb
rol
mov
rorl
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
jecxz
mov
push
cwtl
jle
adc
jle
call
orb
push
inc
xchg
imul
ljmp
push
add
scas
add
mov
xor
cmp
insl
jns
mov
daa
daa
xor
into
dec
xor
sub
mov
pop
int3
dec
jno
cmp
dec
std
push
js
mov
or
mov
mov
stc
adc
mov
adc
jecxz
xchg
or
pop
iret
icebp
insl
mov
mov
or
mov
fisubrl
push
lcall
adc
in
add
cld
aas
jge
dec
mov
push
or
adc
fiaddl
ljmp
xchg
or
mov
in
mov
cmp
gs
dec
xchg
jecxz
add
push
mov
test
add
xor
xchg
dec
dec
mov
push
jg
sbb
jae
out
push
jns
and
pop
mov
imul
cmp
fistpll
loope
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
data16
sub
jle
into
sbb
mov
xchg
fsub
xor
fisttpll
mov
sub
js
loopne
pop
xor
lds
add
repnz
mov
arpl
fcmovnbe
and
dec
jecxz
mov
xchg
jnp
xor
insb
subb
popa
sbb
dec
or
cmp
incb
aas
addr16
pop
pop
in
std
push
cmpsb
jg
inc
leave
das
daa
sahf
out
lods
loope
pusha
ljmp
fidivs
jo
sub
cmp
mov
push
mov
mov
pop
xor
xchg
dec
mov
cmpsb
push
es
cmp
arpl
mov
or
shll
mov
push
jle
arpl
cmc
jnp
dec
call
sub
negb
sti
pop
jbe
ds
ret
mov
cli
movswl
movsl
jb
xor
mov
push
pushf
xchg
dec
outsb
aas
jnp
rorl
jno
out
lods
lods
inc
cmp
and
cld
ficompl
mov
xchg
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
xchg
test
lods
or
lea
repnz
outsl
in
xchg
adc
dec
jmp
add
movsl
push
imul
fs
sbb
int
ja
push
ror
into
cmpsb
mov
imul
push
lcall
imul
int
mov
jns
mov
pop
add
adc
mov
hlt
mov
push
sbb
fsubrs
lods
jg
push
fcompl
pop
adc
sub
sbb
loope
fdivl
mov
sub
sbb
out
adc
movsl
jecxz
rol
push
jbe
lahf
cwtl
int
jae
sbb
pop
icebp
push
ret
scas
movsl
mov
adc
dec
jle
add
sbb
dec
xchg
sub
jecxz
test
inc
xor
je
mov
lea
fwait
cmpsl
adc
ljmp
and
aas
xchg
jo
adc
or
push
fwait
daa
jb
cmpsl
mov
add
dec
loop
sub
or
jns
mov
insl
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
xor
jle
jg
jle
jo
in
popf
adcl
fwait
cli
outsl
pop
xor
aaa
dec
repz
std
adc
or
inc
pop
pop
idivl
add
aad
popa
adc
ss
mov
sbb
popf
and
push
fidivrl
pop
add
ja
fists
dec
out
pop
insl
aad
mov
mov
fsub
or
test
or
and
mov
sbb
mov
xor
testb
rcll
fwait
pop
mov
push
dec
push
inc
clc
sbb
mov
jne
test
mov
test
rorb
cmp
pop
add
push
mov
js
mov
addr16
aam
jne
inc
and
xchg
das
mov
ffreep
insb
aas
pushf
jg
lea
xor
lret
and
mov
das
sub
outsb
das
cmpsb
orl
vandpd
addr16
lock
xchg
push
xchg
popa
subb
push
adc
fxch
lret
ds
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
cmp
jg
jle
fildll
push
or
rorl
xchg
inc
aaa
inc
ljmp
fwait
imul
mov
scas
lea
test
mov
add
pop
je
inc
fimuls
popf
inc
imul
js
add
scas
arpl
cmp
jp
jge
pop
sub
jae
sbb
inc
jnp
out
ror
outsb
cmp
mov
lods
imul
inc
lods
mov
iret
cmpsl
xor
xchg
adc
out
pop
inc
pop
cmpsl
or
mov
and
or
dec
sub
sarb
mov
mov
lea
shrb
adc
cmp
test
cltd
sbb
pop
sub
push
scas
xchg
sahf
js
negl
xchg
xchg
lods
test
mov
and
mov
ror
mov
shlb
pop
fbld
mov
cmpsb
insl
xchg
in
je
aaa
fsubrl
addr16
ret
outsb
cltd
jnp
cmpsl
jae
insl
lods
jmp
sbb
push
mov
insb
xchg
pop
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
sub
jle
jg
jle
out
out
mov
push
lahf
dec
rol
js
jb
jbe
int3
movsl
dec
or
sub
cmp
cltd
adc
cmp
in
movsb
lea
sub
mov
pop
cmpb
daa
push
jmp
stos
and
cmp
out
and
ret
push
repnz
cmp
add
push
js
inc
loopne
mov
xlat
ds
cmpsb
in
xchg
ficoms
ss
fsubrs
pop
and
cmp
adc
mov
jecxz
mov
out
and
out
out
aaa
dec
clts
xor
adc
mov
inc
xchg
mov
jge
shrb
inc
stos
pusha
xchg
fsub
outsl
xchg
decl
pop
loope
push
push
sbb
scas
xchg
repnz
not
and
movsl
mov
mov
in
push
sbb
and
mov
or
pusha
aas
mov
fisubrs
cli
fcmovnu
push
iret
in
jmp
icebp
cmp
push
sbb
loop
fisubrl
jge
in
aam
adc
rorl
mov
pop
sub
pop
stc
int3
cmp
jg
loopne
inc
and
xchg
inc
pop
loope
jne
push
out
aas
imul
pop
jl
cmpsl
popl
pop
pop
xchg
lods
dec
cwtl
sbb
pop
cmovb
ss
fimull
lock
data16
enter
syscall
bswap
fists
add
fwait
pop
pop
leave
pop
jb
sbb
pop
xchg
ret
int
daa
inc
or
test
roll
inc
push
sub
mov
mov
jo
emms
add
xchg
pop
gs
mov
pop
inc
orl
in
arpl
ret
shll
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
loopne
mov
add
and
pushf
mov
pop
aad
jecxz
xchg
adc
xlat
cmc
pop
sbbl
cmp
iret
pushf
fwait
dec
call
mov
cwtl
add
nop
mov
xor
outsl
adcl
adc
add
lds
in
lock
repz
outsl
sbb
sti
addr16
add
jns
pop
xlat
adc
pop
ja
xchg
and
or
inc
pop
lods
out
or
pop
sub
cmp
lahf
adc
jle
in
cltd
cmc
jno
jnp
negb
and
mov
f2xm1
jnp
push
jno
xor
sub
ss
out
mov
test
add
or
lods
sbb
pop
aaa
pusha
jns
mov
les
jge
mov
xor
or
cmpsl
icebp
bound
inc
pushf
cltd
xchg
leave
xor
inc
mov
sti
paddsb
cmp
cwtl
inc
pop
add
jns
jo
aaa
mov
adc
adc
je
into
cmp
cs
testb
dec
clc
orl
aam
mov
test
inc
push
pusha
or
inc
push
mov
das
pop
cmp
xchg
sub
xor
sbb
lahf
or
stos
sbbl
xcrypt-ecb
cmpsl
mov
adc
lock
int3
lcall
cmp
mov
xchg
sbb
or
adcb
push
sub
xor
cmpb
and
and
popa
mov
das
add
xchg
sahf
stos
popf
enter
dec
into
sub
mov
add
dec
xor
mov
pop
cmp
leave
testl
arpl
cmp
mov
xchg
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
jno
mov
jle
out
cwtl
mov
into
sbb
jl
dec
fistps
inc
adc
xchg
inc
push
add
aas
cmp
mov
lods
iret
jp
push
mov
lds
dec
xor
leave
xor
loopne
sbb
adc
mov
mov
orb
sti
sub
add
iret
jno
push
mov
or
mov
lret
sbb
es
xchg
inc
dec
cwtl
push
sbb
ds
push
xchg
cmpsb
push
and
sub
xor
mov
inc
insl
lret
insl
test
mov
mov
and
stc
rorb
inc
and
outsb
lods
repnz
aas
xor
stc
cwtl
inc
push
stc
push
pop
xor
push
xchg
mov
loope
xor
xchg
ss
pop
jbe
lds
dec
ljmp
xchg
shrl
mov
movsl
orb
or
and
jns
mov
jns
ds
sahf
iret
jb
scas
push
sub
scas
sub
mov
mov
mov
jmp
or
mov
or
aaa
mov
push
daa
sub
xchg
pop
push
push
imul
jmp
and
jecxz
ss
xor
out
dec
add
sub
push
leave
dec
add
bound
cmpsb
icebp
push
sub
ljmp
lea
dec
subl
mov
in
daa
sub
es
dec
repz
cli
gs
sbb
mov
testl
sbb
and
addl
mov
loopne
ja
sub
in
mov
sbb
dec
fidivrl
sub
jecxz
out
in
adcb
mov
inc
cmc
jo
stc
orb
adc
lcall
repz
jle
push
jp
push
mov
stc
jae
pop
or
sbb
addr16
cmp
lcall
test
pop
dec
inc
push
push
or
mov
sahf
mov
scas
addr16
jp
dec
es
iret
shll
xor
push
into
shll
inc
in
cmp
std
cmp
insl
mov
rcrl
mov
pop
scas
lcall
xchg
push
repnz
jno
add
sbb
mov
xor
cs
sbb
fists
test
add
jl
adc
push
lret
push
repnz
cli
repz
in
pop
arpl
push
xchg
and
jle
aaa
push
or
or
dec
scas
outsl
addr16
outsb
je
enter
cmpl
aam
in
sub
jecxz
push
jg
push
bound
inc
mov
repz
lods
movsb
mov
xor
cmpsl
aaa
inc
add
add
add
leave
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
sub
lods
jle
jl
jle
pop
jns
sti
dec
aad
loopne
push
sub
cmc
pusha
pop
repz
or
data16
sub
mov
ds
dec
nop
aam
add
sbb
fwait
cltd
ss
pop
or
push
inc
add
es
sbb
sbb
ret
sbb
xchg
sub
cmp
push
adc
icebp
cli
movsl
xchg
shrb
mov
sub
sub
sbb
rol
mov
pushf
mov
cmpsb
xchg
pop
sub
sub
push
sbb
pop
lds
int
gs
sbb
or
sub
dec
jbe
fnstenv
pop
jbe
sub
mov
stos
nop
js
pushf
fildll
js
imul
imul
scas
in
sbb
add
and
inc
push
pop
or
in
add
je
push
sub
pop
mov
push
xchg
fldlg2
xor
push
mov
lret
imul
or
xchg
int3
lcall
adc
lahf
imul
adc
call
sub
mov
das
inc
sub
lods
or
sub
cmp
repnz
dec
sti
scas
clc
push
lcall
add
xor
cld
jle
imul
push
sbb
cmp
int
push
cmp
out
test
sub
jns
cmp
mov
adc
inc
imulb
outsb
outsb
sbb
out
xchg
push
mov
or
imul
je
inc
lcall
and
popa
in
cmc
icebp
subl
and
sbb
hlt
mov
mov
dec
push
mov
xor
addr16
jbe
jno
push
outsb
jnp
aam
jns
fisubrs
aam
js
pop
fs
jae
fwait
push
jmp
mov
rcl
lock
fcomps
add
leave
and
xor
dec
ret
cs
xor
sub
xchg
sbb
inc
pushf
arpl
je
inc
loopne
xchg
movsb
ljmp
das
cmc
shrb
pushf
or
sub
inc
bound
add
rclb
xchg
pop
push
add
ret
and
arpl
jo
insb
lret
sub
stc
cmpsl
cs
mov
int3
test
xchg
push
les
xor
je
ret
sbb
cltd
es
int3
jecxz
sbb
loop
jno
pushf
ret
rcrb
or
adc
lahf
push
jns
push
rcr
cli
imul
insb
fmulp
loope
or
sub
or
ljmp
insl
xlat
inc
shrb
lds
jmp
jg
add
jae
jnp
xchg
repnz
mov
mov
fwait
sub
lret
jl
dec
and
lds
xchg
in
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
and
jl
jle
jne
rcrb
cld
sbb
push
incb
cmp
xchg
xchg
pop
pop
popa
mov
push
cmp
jne
mov
roll
test
mov
xor
cmp
test
add
clc
dec
leave
and
cli
mov
mov
inc
sbb
jle
mov
jno
lcall
imul
mov
arpl
or
mov
decl
add
mov
or
dec
adc
sub
jl,pn
xor
test
or
pusha
xchg
push
add
jmp
es
cmp
leave
mov
aas
int
jb
test
nop
jge
jb
or
fldenv
pop
lods
push
idivb
push
incl
push
mov
gs
lret
cmp
xlat
test
arpl
repz
pushf
popf
dec
movlps
sti
shrb
imul
add
out
in
xor
jae
movsb
sub
inc
adc
rdtsc
loop
movsl
popf
mov
sarl
fmuls
pushf
and
outsl
mov
or
cmp
add
cs
not
xchg
sbb
loop
lret
jp
stc
mov
test
mov
pusha
sub
pusha
out
mov
sub
into
sbb
mov
daa
mov
jmp
sahf
mov
mov
sbb
dec
mov
and
int3
mov
mov
lods
xchg
loop
add
adc
cmc
enter
mov
arpl
scas
dec
push
cmp
and
and
jp
xchg
or
js
or
and
jl
jp
ds
mov
push
nop
pop
xchg
push
fisubrl
mov
das
sbb
jno
mov
int
mov
xchg
cmp
push
inc
inc
shlb
xchg
mov
outsl
add
sahf
adc
jg
sbb
mov
push
jge
loope
xlat
lock
insb
insl
xchg
and
insb
pusha
push
in
nop
cli
jg
jae
adc
fistps
mov
sub
push
mov
test
inc
aam
incl
adc
sar
add
dec
cmpb
insl
lea
rcll
dec
or
jo
popf
ret
cmp
jnp
in
sub
adc
fisubrs
andb
shrl
jnp
ret
filds
push
pusha
xor
int
lds
lock
std
add
mov
movb
push
xchg
es
and
je
shlb
rcrb
jnp
rclb
dec
mov
cmp
js
push
das
jecxz
pop
cmp
mov
cmp
cmp
xor
xor
fmul
in
ja
mov
popa
in
and
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
pushf
cmp
jl
jle
icebp
les
aaa
lahf
test
lea
xor
rcrl
pop
mov
bound
lret
add
test
xor
inc
loop
inc
loopne
dec
cmc
sbb
pop
sbb
add
pop
pop
stos
xchg
out
jno
mov
jbe
shrl
in
inc
and
popa
fdivs
pop
xlat
test
add
pop
push
sbb
mov
insl
imul
push
fldt
fdivl
stc
inc
xchg
shll
andl
jb
clc
inc
push
daa
push
cmp
jg
sub
jo
js
lret
adc
inc
xor
ret
dec
icebp
and
xor
push
mov
mov
lea
pop
mov
pushf
cmp
adc
or
mov
pop
lret
xchg
shr
xor
lds
dec
or
push
pop
movsl
jl
jb
mov
dec
icebp
sub
cmpsb
cmpsb
mov
cli
jl
and
lods
push
daa
cld
int
lret
xor
icebp
pop
ror
inc
inc
pop
sub
je
pop
aas
mov
mov
jmp
addb
push
lret
test
cmp
test
cli
pop
or
add
repz
and
stos
je
xor
sbb
mov
sub
enter
xor
push
repz
jp
das
jecxz
adc
mov
xchg
dec
bound
gs
or
nop
test
fdivl
das
aas
inc
jnp
jne
jno
stc
pop
scas
movsb
cmp
jae
out
out
cmp
jo
or
xchg
add
or
push
cs
into
fimull
pop
stos
inc
ljmp
add
incl
idivb
je
arpl
and
xchg
inc
imul
neg
dec
adc
lods
pushf
pop
sbb
mov
fidivl
pop
inc
shll
out
fidivrl
xor
lods
cmp
pop
mov
push
in
pop
repz
insl
lock
pop
int3
mov
cmp
add
sbb
dec
jbe
in
ret
xor
sub
stos
xor
testl
fld
mov
or
sbb
movsl
inc
cwtl
das
outsb
lcall
stos
shrl
mov
push
dec
add
or
stc
das
xor
push
mov
xchg
jns
xchg
mov
test
cld
into
test
mov
flds
mov
dec
push
mov
scas
mov
sub
sbb
xchg
cwtl
xchg
xor
push
gs
pop
dec
xor
mov
jecxz
mov
fiaddl
push
orb
adc
mov
xor
mov
jmp
or
pop
jno
xchg
add
inc
insl
fidivs
jle
and
popf
push
rcrl
cli
and
dec
push
repnz
stos
lret
in
sub
sub
jne
mov
ss
lret
movb
popa
jnp
jns
adc
push
jbe
test
dec
mov
xchg
loope
sub
jge
xchg
loop
andl
jmp
out
pcmpgtw
jo
pushl
cltd
mov
mov
ss
lret
push
jp
ffree
leave
std
add
add
sbb
mov
or
rclb
xchg
test
sbb
js
bound
xchg
pop
pop
xchg
out
inc
mov
xor
int3
xchg
aad
xchg
xchg
call
outsl
add
je
mov
and
mov
or
ret
inc
test
daa
je
xor
jecxz
mov
ficomps
loop
loopne
jns
add
cmpb
cmc
xchg
clc
stos
aaa
stos
cmp
push
imul
je
cmpsb
xchg
adc
in
out
jecxz
mov
les
mov
ds
jbe
lret
pop
add
cmp
mov
or
adc
test
shll
push
or
adc
lea
dec
arpl
roll
jge
call
or
mov
ja
shrb
fdivrl
xchg
inc
push
test
sub
pop
stos
jmp
insb
pop
incl
push
fld
inc
mov
addr16
xor
and
push
loope
add
rcrl
mov
mov
lock
add
xchg
cli
dec
cmp
sbb
push
and
push
insb
in
adc
mov
lea
and
xlat
adc
call
call
test
jecxz
jp
xchg
dec
int
gs
fsubrs
and
shll
insl
pushf
test
mov
cmpsl
jp
ja
sbb
insb
cmp
xchg
mov
mov
or
push
imul
bswap
cli
daa
or
repz
sahf
roll
dec
cmp
ss
fs
cmp
push
rcl
mov
mov
pop
out
mov
rolb
inc
xchg
fdivrp
in
dec
icebp
nop
or
dec
pop
testl
push
scas
fnstenv
sub
and
shlb
pop
pop
dec
bswap
sub
inc
shll
cmpsb
scas
or
sbb
sbb
sbb
jb
movq
cli
pop
inc
loop
push
jno
les
clc
mov
popl
add
add
pop
mov
sbb
mov
and
mov
dec
fsubs
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
cmp
mov
jle
jl
jle
mov
push
test
repnz
jmp
jno
les
mov
or
inc
pop
mov
bound
or
call
inc
outsl
ds
sbb
outsl
sub
jmp
jp
sub
or
and
add
imulb
cmp
sbb
shrb
ljmp
gs
jo
dec
push
ss
aas
inc
xchg
stos
pop
dec
cs
or
cli
data16
jbe
lret
pop
neg
mov
inc
push
dec
sub
pop
xchg
push
dec
loopne
scas
mov
inc
add
and
movsl
pop
enter
jl
ret
push
icebp
jle
ret
sub
cmpsl
mov
fs
push
sub
shl
pop
lods
push
push
orb
mov
fists
push
mov
cmp
or
shlb
cmp
mov
fisubrl
or
cmc
push
cld
mov
cmp
subb
push
mov
iret
push
or
arpl
xchg
out
divl
flds
add
fucomip
aas
stos
fucom
sahf
add
push
paddb
out
push
sub
adc
mov
cmp
sub
pop
mov
dec
cmpsb
ljmp
daa
fstl
inc
rolb
stc
mov
cmp
pop
cltd
fsubr
sub
mov
cmp
ret
fmuls
add
mov
sbb
mov
push
adc
mov
cmp
movsb
xor
xchg
push
adc
enter
jbe
inc
test
add
push
or
gs
jle
stos
daa
xchg
mov
jo
mov
insb
sub
xchg
jecxz
stc
inc
sub
orb
pop
jne
xor
stos
and
adc
mov
add
xor
push
mov
scas
push
mov
push
ss
les
iret
adc
popf
fmull
mov
clc
pop
or
js
pop
push
scas
mov
xchg
shlb
inc
adc
jge
ja
std
adc
lods
jbe
mov
lods
clc
dec
xchg
in
mov
aad
fdiv
je
nop
insb
das
push
cmp
xchg
es
iret
mov
mov
push
stos
and
pusha
lea
mov
xlat
and
push
ret
rep
ret
out
shlb
inc
add
js
loop
test
mov
mov
mov
mov
sbb
aam
out
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
aam
xor
and
add
jle
iret
insl
sub
or
dec
gs
addr16
cmp
rcl
push
sub
dec
jns
test
daa
jg
sarb
jg
jg
arpl
pop
lds
divl
fistpll
pop
or
cmp
jno
shll
mov
out
rorl
xchg
into
or
arpl
jno
lret
js
cltd
xor
daa
xlat
cmp
lods
shlb
jp
lret
add
out
iret
nop
lret
add
mov
in
out
sbb
and
enter
lret
xor
xor
inc
sbbl
and
xchg
jb
imulb
adc
sub
mov
pop
mov
push
gs
movsb
sub
pop
shll
mov
cmovs
jl
cmp
movsl
clc
mov
push
mov
aaa
add
shlb
clc
mov
ss
push
aaa
aas
jns
lds
jg
xchg
xlat
andb
into
fsubl
pop
push
xchg
mov
test
adc
cld
cmp
shrl
jmp
add
int
cmpsl
or
mov
push
pushf
mov
adc
xlat
pop
enter
loop
jo
inc
adc
push
sbbl
xchg
loopne
stos
stos
popa
lahf
insb
push
jecxz
scas
insb
add
std
or
leave
sbb
pushf
mov
cmc
adc
popa
sbb
jno
dec
xor
push
pop
pop
jbe
sbb
lea
aaa
adc
jmp
push
fcoms
mov
cmp
ds
nop
push
nop
and
pop
xor
outsl
push
xor
inc
jno
lcall
es
lret
movsb
mov
xor
aam
rol
sub
xchg
xlat
inc
aaa
fstpl
mov
mov
leave
fdivrl
arpl
scas
cmc
imul
int
push
mov
pushl
xchg
shlb
or
sti
pop
stc
xor
icebp
dec
mov
mov
test
sbb
cmc
add
sub
xor
bndstx
push
jg
push
or
fucomp
in
and
movsb
shlb
js
pusha
daa
fbld
insl
test
loopne
mov
mov
mov
sahf
sbb
xchg
fsubrs
popf
fistl
mov
cltd
push
mov
enter
fimuls
xorl
lret
call
add
mov
xchg
jbe
and
mov
lods
iret
std
sarl
loopne
mov
jg
cmp
jb
sahf
lds
aad
add
jmp
add
fdivl
lock
xchg
pop
and
mov
jle
push
adc
aam
xlat
adc
icebp
mov
movsb
movsb
inc
mov
jle
adc
pushf
sti
or
or
hlt
jge
pop
mov
test
icebp
popa
xlat
mov
jne
mov
dec
mov
fcmovu
xor
movsb
scas
stos
stos
mov
fwait
adc
cmpl
cmp
mov
loopne
xor
enter
xchg
jne
inc
or
stc
mov
cltd
neg
xor
mov
mov
add
xchg
push
pop
sarb
gs
in
xor
subl
jns
cltd
cmc
sbb
or
arpl
in
std
sub
rolb
popa
pop
xor
cwtl
sti
inc
xorl
adc
test
jmp
xor
fists
mov
adc
mov
mov
enter
mov
adc
popf
ss
cmpsb
jmp
mov
faddp
dec
mov
test
or
push
in
fwait
adc
fstp
lahf
fimull
outsl
aas
loopne
addl
dec
and
ret
dec
mov
jbe
out
add
popl
jno
jl
inc
add
cs
dec
outsb
and
cmp
mov
sub
test
mov
mov
sarb
test
mov
int
xchg
mov
push
fnstsw
sub
mov
mov
sub
adc
jle
pop
pop
lea
das
adc
and
or
out
inc
xchg
andl
jl
mov
fucomip
in
dec
in
push
sub
push
or
std
mov
jno
cli
inc
scas
mov
adc
add
mov
mov
xchg
or
jmp
cmpsl
aam
dec
jo
adc
add
and
pop
xchg
or
xchg
lret
mov
mov
xor
js
aad
pop
mull
adc
orps
mov
pusha
scas
sub
sahf
or
mov
or
stos
adc
mov
negl
inc
mov
cmpsb
stos
or
dec
sbb
sahf
pop
jp
sbb
add
add
mov
xchg
mov
sbb
cmp
adc
sbb
adc
xor
push
decl
sub
jecxz
mov
test
repz
std
add
xor
hlt
xor
cmp
popl
xchg
adc
or
sub
mov
jmp
je
push
push
lock
outsb
dec
mov
sti
jmp
jle
scas
jl
jle
call
mov
out
and
adc
mov
insl
int
daa
inc
or
es
or
push
outsb
sub
andl
mov
stos
push
xor
in
icebp
in
jecxz
jns
sbb
int3
ja
mov
loop
mov
cs
add
pop
sbb
std
shll
push
xor
xor
test
jnp
push
xchg
js
cmp
or
or
aad
sti
pop
push
pop
inc
in
pop
mov
inc
ret
mov
fcomps
call
cmp
dec
pop
pop
mov
sub
enter
ret
in
or
push
cmp
cmp
inc
fdivr
pop
addr16
mov
and
aad
sub
lea
jne
lahf
stc
in
scas
test
hlt
jnp
into
and
out
sti
and
aad
pop
push
mov
ja
outsb
dec
jnp
push
xchg
std
ja
push
inc
jg
arpl
gs
arpl
sbb
leave
icebp
js
mov
sbb
popf
xchg
iret
or
mov
and
sbb
fs
or
pusha
or
out
sahf
ja
lea
sub
neg
cs
into
and
adc
inc
mov
stos
sub
mull
les
xor
cmp
ficomps
xchg
stos
mov
pop
jbe
mov
sbb
mov
jae
sub
jmp
aaa
xor
sub
dec
mov
or
inc
test
jg
mov
mov
jno
pop
jns
mov
inc
dec
pop
inc
loopne
mov
or
cmpsb
adc
pop
enter
mov
fistl
inc
into
push
jbe
sub
test
xchg
sahf
inc
aad
mov
sbb
sub
out
iret
lds
cmp
dec
jnp
test
rolb
std
sub
sub
push
aaa
xchg
inc
pop
xchg
orl
lock
out
jge
div
int
in
fsubr
movsl
cmc
jns
cld
jnp
fs
pusha
jo,pt
cmp
repz
mov
daa
inc
sub
repnz
lock
xor
push
roll
add
ja
test
insl
xchg
pop
lret
sbbb
lret
out
lret
repz
and
push
xchg
lret
movups
test
ret
mov
xchg
cmpsl
push
sub
les
add
pop
cltd
mov
inc
cwtl
xchg
mov
mov
gs
xchg
push
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
inc
scas
prefetchnta
jle
jl
jle
shr
pop
int3
bsr
push
pop
mov
mov
enter
std
add
mov
mov
push
cwtl
adc
fs
call
xor
insl
push
inc
mov
pushf
push
lock
jg
xchg
fs
cmp
mov
cmpsl
cmp
stos
sub
imul
fsub
inc
outsb
cmc
arpl
into
cmp
addr16
aad
push
stos
push
imul
inc
and
inc
and
sub
xchg
into
cmp
add
mov
enter
out
lcall
mov
and
cmp
daa
ja
cmpsl
xchg
jne
in
pop
in
out
cmp
push
pop
jae
and
call
inc
repnz
jae
mov
sub
iret
inc
jae
mov
add
inc
xor
les
adc
add
inc
lea
xor
lods
adc
mov
loopne
inc
inc
or
fucom
dec
dec
testb
pop
mov
aam
stos
xchg
mov
mov
add
sbb
lret
jbe
mov
pop
xor
sub
cwtl
jnp
and
ret
int3
daa
cmp
pop
rep
push
clc
adc
xor
outsb
xchg
inc
bound
and
call
in
mov
mov
cs
cmc
jp
fisubrl
mov
sbb
jns
push
xor
lods
fisttps
lretw
lahf
xor
rclb
and
ljmp
test
mov
cmp
gs
mov
inc
stos
in
and
cmpsb
jmp
inc
jle
das
out
add
inc
mov
cmp
movsb
out
inc
ret
stc
loopne
aam
pop
call
sbb
sbb
add
mov
push
adc
jmp
cmp
insb
dec
cmpsb
or
adc
js
pop
int
incl
push
jle
stc
and
mov
push
xor
lds
adc
shrl
sub
cli
mov
ss
mov
lods
cmp
pop
cmp
add
push
add
jp
jecxz
fldt
jle
add
inc
inc
xchg
cltd
imul
aad
cmc
xlat
xor
mov
pop
adc
leave
cmp
sub
inc
push
xchg
inc
stos
sbb
and
ss
aam
ret
test
js
hlt
pop
test
mov
iret
adc
cld
roll
inc
sbb
push
inc
inc
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
sub
jl
inc
jle
scas
jl
jle
adc
add
movsl
mov
sahf
cmc
cmp
push
shll
dec
popf
jmp
add
enter
sub
rol
inc
cld
pop
and
mov
cmp
inc
jne
ds
sbb
add
jp
adc
mov
mov
or
xchg
cmp
or
xchg
mov
push
or
cmpb
stos
mov
jo
pop
iret
imul
pop
sbb
xor
mul
adc
jae
xchg
pop
pop
and
mov
xchg
jmp
inc
mov
mov
or
mov
ret
fisubrs
adc
dec
pop
jae
les
adc
loopne
lret
dec
push
mov
and
dec
xchg
test
inc
rolb
fs
cmp
cmc
lods
push
and
roll
outsl
gs
xchg
jp
push
cs
and
loope
xlat
ss
lret
cli
mov
lock
mov
jg
cmp
fsubs
jbe
negb
mov
int
addl
ret
enter
int3
inc
sbb
mov
push
sub
aas
cltd
mov
into
out
pop
mov
or
out
cmpsl
je
ds
mov
pop
pop
repz
and
jg
gs
jns
add
push
and
rcr
fdiv
jg
cltd
mov
imul
jle
data16
stos
enter
jne
push
sub
int3
add
and
js
cmpsl
into
dec
je
fdivl
mov
push
in
fstpt
lea
dec
es
arpl
dec
pop
pop
pop
xor
fucomip
xor
aad
xchg
lds
mov
mov
imul
movb
push
es
mov
cli
data16
repnz
dec
aam
negb
int3
aas
cmp
and
into
sbb
out
in
idivb
xor
jnp
in
adc
cltd
ds
flds
dec
testl
add
ret
test
add
inc
sbb
xor
inc
sbb
jnp
dec
jne
pop
sub
mov
cltd
lods
xor
ds
jmp
add
inc
jae
sub
jb
push
movsl
push
test
nop
je
jl
pop
adc
pop
das
ret
scas
adcb
or
push
mov
jbe
jle
pop
sub
sbb
jb
adc
jb
or
ror
adc
mov
sub
sub
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
bound
xchg
faddl
jg
jle
stos
sti
add
mov
lret
or
mov
and
xchg
push
popf
sub
mov
jle
xchg
insb
xor
imul
imul
jo
test
das
pop
fcmove
popa
popa
aas
insl
dec
jmp
imul
jbe
repz
dec
pusha
int3
mov
rorl
mov
sub
push
inc
mov
or
dec
jns
push
push
cmp
fsubrl
ss
sbb
adc
and
repz
mov
sub
lods
mov
cmc
sbb
ss
clc
xor
cmp
mov
les
loopne
mov
jecxz
negb
mov
xor
int
sahf
xor
add
lds
inc
dec
test
add
loopne
jl
es
push
addb
lods
mov
mov
pop
ss
sbb
inc
mov
fsts
mov
inc
ret
pusha
inc
and
gs
lds
push
xor
and
dec
jmp
sub
sub
and
jb
sbbb
mov
inc
xchg
xchg
adc
js
or
insb
mov
pushf
cmp
adc
sbb
jmp
repnz
loopne
bound
popf
inc
lahf
sub
in
pop
lock
ss
aas
pop
mov
or
and
loope
pusha
sub
incb
popa
call
bnd
and
jp
push
mov
xlat
mov
out
mov
dec
lahf
push
js
mov
loop
push
mov
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
shrb
jle
jg
jle
push
or
add
loopne
cmp
rcrl
fiaddl
mov
jle
flds
add
shlb
mov
mov
inc
push
arpl
ret
push
cmpb
mov
enter
nop
adc
in
push
dec
pop
mov
stc
sbb
pop
addl
jge
jno
lods
inc
int
cmp
cmpsb
hlt
push
add
push
mov
sbb
lret
mov
movsb
mov
mov
fwait
or
pop
or
and
in
pop
mov
call
sub
xchg
adc
leave
jne
sbb
enter
inc
rcr
movsb
mov
mov
loope
shl
jbe
jno
mov
popf
jb
lods
cmp
pop
xor
andb
xchg
add
mov
pop
cmpsl
dec
adc
fidivrs
lods
decl
in
mov
or
cmpsl
jo
cmc
jg
popa
add
dec
push
test
mov
jnp
imull
test
push
push
mov
clc
inc
add
mov
jns
add
inc
in
fidivrl
inc
xchg
sbb
aaa
ret
mov
jge
xchg
inc
rorl
aam
fcomip
sbb
out
popf
sbb
sub
add
loopne
pop
pop
adc
push
shr
pop
inc
sti
jg
xor
mov
inc
pop
mov
lods
fistpll
mov
out
and
into
jo
or
repz
and
push
and
add
mov
xor
mov
shr
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
divl
mov
add
add
adc
lea
push
cmp
mov
cli
sub
popf
sbb
and
psubusb
call
inc
mov
fldl
les
xchg
insl
test
xorb
add
shlb
daa
fcoms
ret
jge
sbb
mov
addb
jge
fadds
mov
cmpsb
add
mov
inc
repz
dec
in
jno
ss
test
and
mov
int
cmp
daa
outsl
inc
sub
into
push
pop
cmpsb
cmpsl
or
mov
xchg
jo
call
nop
pop
sbb
popa
scas
adc
jl
lret
cmp
jmp
sbbw
sti
adc
cld
or
mov
dec
jnp
cs
loope
ret
shll
sbb
cwtl
das
je
xlat
mov
mov
pop
lcall
test
inc
sub
inc
pop
cmp
xlat
pop
or
in
pop
pop
ficoml
in
jle
lcall
sti
loopne
add
add
add
add
fildll
sbbb
je
mov
pop
xchg
inc
pop
inc
inc
sub
push
jno
rcrb
xor
lods
test
dec
mov
jmp
out
lcall
dec
jecxz
rorl
xor
fwait
mov
lock
pusha
cwtl
mov
sbb
push
sahf
pop
sbb
mov
fists
int
stos
xchg
je
rcll
orb
inc
jo
mov
mov
and
push
mov
outsl
xor
xlat
cmpsl
aad
or
movsb
xchg
cmpsb
pop
or
adc
xchg
sbb
scas
xchg
popa
lret
push
pop
sub
sub
pop
enter
xchg
add
pop
es
popf
pop
jmp
les
testb
je
add
add
repnz
push
mov
je
fcmovnb
ja
mov
repnz
stos
dec
shlb
lods
mov
jns
push
push
lcall
add
add
add
add
mov
push
and
xchg
in
add
add
add
xchg
push
outsl
icebp
xchg
mov
das
cmp
cmc
pop
cmc
mov
movl
es
dec
rolb
sub
sub
mov
ss
imul
hlt
int
pop
fs
mov
scas
gs
add
push
add
jbe
int
inc
pop
mov
test
aaa
bound
rcll
pop
fsub
or
push
sub
mov
mov
dec
fwait
out
fdivrl
pop
inc
mov
pop
call
mov
gs
jle
pop
push
test
mov
jl
es
fimull
push
rcrb
xchg
cs
pop
mov
ret
sbb
sahf
data16
push
out
test
pop
pop
dec
sbb
push
sbb
or
lock
push
push
bound
fldl
pushf
xchg
fistl
or
xor
and
testl
add
add
subl
roll
daa
dec
dec
sbb
aam
add
add
push
add
add
rcll
shr
imul
jno
imul
push
xchg
inc
mov
lods
push
movl
sahf
fs
jmp
stos
push
inc
cmc
pop
or
adc
or
fistpl
sti
push
call
imul
xor
push
outsl
pop
lahf
push
and
adc
cli
add
jbe
in
fisubrl
or
add
sbb
aam
mov
shl
nop
push
mov
jecxz
repz
cwtl
pop
je
inc
js
dec
aas
push
sub
mov
and
int
test
int3
pop
xchg
mov
jno
data16
mov
jge
in
cmp
nop
test
ret
sar
aaa
enter
mov
mov
sbb
jl
or
popa
xchg
sbbl
insl
pop
cld
mov
icebp
loope
daa
mov
movsb
add
int3
jg
ret
pop
icebp
ljmp
pop
jae
or
pop
dec
or
out
dec
in
aad
add
add
fisubrl
pop
adc
pop
scas
sbb
rcr
aam
fimull
and
dec
rcrb
clc
mov
push
and
addr16
mov
mov
inc
inc
jmp
jecxz
and
scas
jecxz
xchg
mov
jg
cltd
insb
mov
cmp
dec
test
insb
sti
insb
stc
push
cmpb
adc
jp
scas
test
int3
ficompl
adc
aas
lcall
scas
int
adc
jecxz
scas
add
pushf
out
mov
rolb
mov
sbb
cwtl
sub
popf
test
pop
adc
and
and
mov
leave
sbb
cld
mov
sub
fs
inc
mov
fldt
lahf
les
xchg
dec
sysenter
repz
je
jae
sub
jle
fstps
out
sub
sub
mov
jg
cmc
insl
cmc
out
lcall
enter
push
add
add
add
mov
fldl
fisubrl
adc
xchg
movl
popa
inc
push
popf
inc
fmull
rcrb
lret
inc
adc
cld
add
xchg
sbb
lods
enter
lds
sti
push
sbb
iret
insl
xchg
ret
imul
adc
lahf
out
lods
cmc
out
mov
lock
repz
sti
sti
cmp
jnp
adc
mov
lods
lcall
mov
mov
sbb
aam
rorb
sbb
mov
mov
add
jns
push
rolb
pop
pusha
ja
sub
ss
sbb
mov
xchg
out
mov
sbb
and
mov
inc
shl
cmp
push
scas
sti
push
pop
test
mov
adc
je
notb
and
repnz
mov
sti
inc
push
inc
and
mov
out
mov
add
bound
adc
push
adc
mov
jbe
je
lock
inc
scas
inc
movsl
and
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
cmpsb
push
or
ds
cli
mov
adc
shl
subl
mov
pop
cmp
jnp
stos
mov
sbb
mov
ret
add
lock
lods
xchg
dec
dec
jl
scas
test
sbb
pop
fisttpl
movsb
addr16
xchg
inc
push
pop
movsb
mov
jbe
ss
js
and
sbb
sub
in
add
testb
mov
imul
in
scas
imul
aas
and
xor
shl
push
dec
pop
sbb
test
sbb
repz
sbb
push
aaa
pop
mov
jne
test
cmp
mov
or
jecxz
je
xchg
mov
xchg
mov
stc
lcall
cmovo
fsubs
sbb
add
fstl
lret
xor
nop
mov
popf
outsl
pop
lds
out
mov
push
adc
je
in
int
rcll
add
add
jle
and
scas
sti
jle
pop
push
pop
movsb
arpl
clc
fadds
add
add
pushf
jmp
jo
push
push
mov
xchg
sti
mov
adc
popa
dec
xchg
sub
jmp
mov
int
dec
ljmp
xchg
js
cltd
cmp
ja
bound
xchg
sub
cs
inc
rclb
jne
lret
add
sub
pop
xor
outsl
mov
movsb
inc
rclb
aas
mov
push
jp
pop
dec
adc
shl
jbe
std
fidivl
pop
je
add
dec
mov
jnp
xor
mov
sub
push
je
add
cli
adcl
fcmovb
adc
jno
jbe
out
popa
push
sub
jl
add
dec
movsl
pop
xlat
into
call
xorb
mov
insl
xchg
sbb
inc
xchg
jne
ds
sub
mov
sub
or
outsl
aas
inc
xor
and
xor
scas
fidivrl
xchg
call
inc
negb
imul
add
add
negl
arpl
in
cld
flds
add
add
call
lods
call
clc
cmpsl
add
shrb
dec
ljmp
leave
stos
push
xor
cmp
jl
popa
xchg
cmp
jae
xor
std
push
add
push
lods
mov
jb
loop
lahf
mov
bnd
add
push
adc
aaa
test
and
aam
inc
sarl
jne
out
fnsave
out
mov
sbb
scas
rolb
in
sub
sbb
and
mov
sbb
sbb
daa
scas
inc
aad
test
xor
push
or
fs
and
dec
dec
xchg
push
fiaddl
and
das
fistpl
dec
xor
dec
das
shll
pusha
fwait
pop
dec
jbe
pusha
adc
add
push
xor
clc
mov
xor
cltd
xor
xor
sbb
xchg
popf
jns
popf
and
xor
add
add
push
jl
jle
insb
out
adc
fildl
add
add
or
jbe
imulb
and
cmp
xor
sbb
jg
popa
ja
sub
and
or
dec
inc
jae
jg
clc
pop
fstp
loope
outsl
lcall
or
loop
push
add
popa
adc
dec
mov
sbb
bound
cmp
pop
push
xchg
dec
jl
jbe
js
cmp
js
and
cmpb
sbbl
mov
stos
ret
dec
test
ja
pop
jb
addb
int
add
pushf
cs
or
cmp
sub
rclb
or
cmp
stc
push
aas
out
jno
mov
and
imul
das
std
add
xor
mov
push
sbb
mov
xchg
pop
xor
out
call
lahf
mov
imul
ljmp
xorl
mov
adc
in
xor
adc
add
add
add
add
lret
and
mulb
subl
adc
push
pop
stos
je
mov
in
jecxz
mov
ss
imul
push
icebp
movsl
insl
cltd
inc
jle
test
mov
sbb
cmp
add
iret
out
pop
mov
rcrl
imul
pop
or
cmc
inc
jno
loop
push
push
das
les
lods
adc
sahf
lret
addr16
jmp
rcrb
or
or
jbe
push
cmp
ficompl
int
mov
minps
popa
out
aam
sbb
daa
insl
xlat
adc
sub
xchg
js
data16
jne
jmp
int3
subl
mov
fisubrs
xor
out
je
adc
mov
lret
stos
imul
push
mov
jbe
mov
out
rclb
push
push
loope
and
add
add
data16
jne
mov
lcall
add
add
add
jns
and
cmp
sub
jae
lcall
notl
test
push
adc
jno
int3
iret
addl
dec
adc
mov
rcrl
and
inc
js
rorb
and
loopne
sub
js
mov
jl
cld
dec
lods
dec
ficoml
jmp
mov
add
hlt
aad
add
jne
push
jge
cmpsl
pop
cltd
sti
aaa
insb
fstl
and
aam
clc
incb
out
icebp
xchg
mov
nop
out
adc
or
adc
gs
imul
push
scas
stc
sbb
mov
emms
xor
mov
xchg
fadds
adc
das
cltd
dec
insb
inc
repnz
lret
lds
aaa
aaa
inc
out
jnp
fcmove
or
and
inc
mov
addr16
scas
sbb
pop
or
pop
loopne
cs
or
popa
addl
add
add
add
jnp
sti
xchg
lahf
mov
jp
or
add
add
add
sub
push
add
loope
xchg
cmp
push
push
stos
aaa
flds
jb
mov
lods
clc
pop
mov
scas
in
cmc
push
std
aad
or
clc
sub
ja
cld
in
lods
jbe
mov
mov
mov
sbb
jecxz
cmp
or
xchg
insl
add
and
cli
sub
push
data16
add
pop
push
mov
std
add
push
test
jbe
xchg
popf
jg
or
push
mov
add
scas
adc
cmpsb
jnp
into
push
das
mov
mov
or
jae
xchg
fistpl
add
pop
popf
dec
cmpsl
xor
sub
jnp
std
enter
xchg
sub
jg
fcomps
mov
mov
stos
cmpsb
lea
ljmp
scas
jmp
or
jp
lcall
ret
push
call
mov
scas
adc
mull
test
mov
sub
pop
sarl
mov
fcoms
filds
add
add
adc
ds
pop
cltd
dec
jno
jno
xor
xchg
fcmovnb
xchg
mov
loop
lcall
aas
mov
pop
jge
pop
sbb
int
inc
lock
ds
in
and
xor
stos
xlat
aaa
nop
or
or
shlb
or
int
mov
sti
push
into
sub
push
leave
lret
mov
outsb
and
pop
test
cwtl
enter
adc
or
pop
push
ret
xchg
lret
gs
and
daa
lods
push
shl
fiaddl
jne
mov
pop
fs
sbb
xor
add
dec
sub
mov
mov
xchg
xchg
inc
xchg
jae
outsl
stos
and
rorl
jo
ret
les
dec
in
cmp
sti
fwait
jo
data16
cltd
cli
gs
jecxz
and
dec
dec
push
sbb
stos
cmp
fcomi
sbb
ds
rclb
add
add
repz
std
repz
inc
int
adc
add
add
add
mov
gs
imul
inc
addb
pusha
xlat
repz
aaa
and
loope
add
add
movsl
lea
inc
adc
pop
cmc
clc
push
cmp
mov
mov
lea
mov
das
popa
movsl
out
sbb
lret
outsl
inc
sbb
loope
sbb
pushl
mov
iret
and
jmp
inc
cmpsb
sti
hlt
sbb
inc
sub
mov
loop
or
cwtl
call
xor
add
lret
dec
nop
xchg
add
xchg
hlt
add
mov
jle
add
jb
into
enter
sti
pop
mov
mov
inc
lea
push
cli
scas
xor
jne
ja
mov
mov
xor
jne
sbbb
mov
mov
dec
icebp
add
lret
shlb
pop
aam
sub
mov
push
lods
push
cmc
push
add
add
lock
cmp
arpl
je
adc
sbb
add
add
add
inc
xor
jg
ja
scas
push
inc
or
cmp
jb
mulb
inc
std
xchg
sub
cmp
cmp
add
sbb
mov
inc
lahf
je
sbb
add
out
mov
pop
adc
sub
fistpl
rorl
adc
xchg
dec
inc
sahf
out
icebp
shll
pslld
or
repnz
or
pop
insl
loop
sbbb
xchg
andb
ss
testl
inc
repnz
fcomps
bswap
pop
adc
or
or
jp
insl
fidivl
js
sbb
sbb
inc
pop
aad
cmp
xorl
push
mov
mov
repnz
push
add
jg
pop
dec
lahf
aaa
ficomps
aaa
rorl
pop
pushf
mov
or
mov
mov
loopne
fnsave
sbb
xor
stos
repnz
outsl
icebp
jae
add
add
mov
mov
aaa
mov
add
add
add
jecxz
add
sbb
into
test
insl
mov
cli
into
dec
hlt
insl
divb
fisttpl
mov
pop
mov
inc
aaa
loope
pop
lock
cld
xor
mov
cwtl
xchg
sbb
shl
mov
pop
sbb
lret
cwtl
push
ret
sbb
clc
cmpsb
dec
push
mov
dec
daa
loopne
stc
aaa
ret
cmp
sub
les
outsl
xchg
out
adc
fiaddl
mov
and
pop
aaa
dec
jecxz
in
enter
loopne
pop
lods
loope
push
xchg
out
in
dec
adc
test
add
sub
ss
test
lret
and
cmp
adc
dec
idivb
lods
aam
add
sub
in
aas
or
bswap
inc
lods
stc
roll
xlat
cmp
pop
enter
and
ror
cmp
dec
push
lret
xor
test
mov
xor
sub
dec
lret
xchg
in
mov
incl
ror
jle
repz
add
add
add
push
cmp
add
inc
pop
std
xor
insb
xor
test
lret
lret
clc
out
aas
xor
xchg
and
cs
add
mov
scas
and
icebp
ljmp
push
jae
mov
bound
jbe
ret
xor
das
mov
scas
sbb
int
test
mov
push
int3
adc
adc
fisttpl
dec
inc
and
fisubl
and
cmp
push
sbb
mov
loopne
mov
mov
jo
in
kunpckbw
xchg
sbb
sub
cmp
mov
mov
dec
jecxz
cmpsl
jp
mov
out
mov
enter
pop
divl
dec
mov
mov
xor
into
addr16
jnp
push
ja
ljmp
int3
sbb
and
adc
xchg
iret
push
xor
xchg
cwtl
push
add
pop
sbb
pop
xchg
pop
inc
mov
in
negl
sub
movsb
sub
adc
add
add
add
lret
and
std
add
inc
pusha
and
int
dec
jecxz
pop
inc
aaa
popf
dec
xor
pop
mov
xorb
adc
cmp
mov
jnp
into
std
mov
or
sub
test
outsl
aam
mov
insl
or
push
imul
popa
push
xor
in
inc
xchg
nop
mov
adc
in
out
xlat
cmp
in
pop
addr16
dec
pushl
je
call
jge
mov
dec
mov
xchg
rol
je
mov
mov
or
ret
sti
ja
shrb
lds
pop
sub
mov
inc
or
push
mov
dec
jo
loope
mov
jnp
push
jmp
mov
rcll
lahf
and
mov
dec
sub
push
xor
fistpll
stc
dec
push
fcoml
in
add
add
inc
dec
test
dec
xchg
lahf
gs
aas
xchg
mulb
jno
and
xor
orb
ret
lods
inc
dec
jno
pop
push
cmp
or
mov
fists
clc
stos
inc
adc
gs
push
cmp
subb
xor
xorb
mov
push
cmp
ljmp
andb
mov
mov
pop
ljmp
shl
mov
mov
ljmp
das
mov
cmpsb
jmp
divl
daa
adc
pushf
shl
in
leave
jbe
ljmp
jns
mov
cld
scas
insb
shll
or
push
pop
mov
dec
push
sub
inc
jae
out
mov
mov
mov
js
xchg
stos
jmp
pop
mov
mov
xor
outsl
outsl
push
dec
sbb
add
add
adc
push
push
push
mov
jae
out
add
add
pop
andl
adc
scas
sub
mov
push
loop
roll
xor
test
sub
leave
jb
inc
std
mov
out
push
subb
cltd
lods
mov
ret
lcall
and
sahf
mov
sbb
pop
aas
leave
dec
in
data16
add
mov
icebp
push
loope
cvtdq2ps
std
push
cmp
lret
jns
cmp
pop
and
fistpll
mov
lds
push
loopne
rol
stos
push
test
lret
push
sbb
pop
cmpsl
pop
dec
add
jp
or
ljmp
fcompl
pop
negb
lock
stos
lcall
fs
mov
xorb
mov
stos
and
aaa
fidivrs
je
inc
ret
and
sub
jbe
push
inc
jp
fildll
lahf
in
subl
jno
out
repnz
add
pop
lcall
les
mov
add
add
or
iret
loope
mov
sbb
pusha
or
rcrb
or
int3
loop
jle
aas
fdivrs
add
in
mov
push
fwait
ss
dec
cld
mov
pop
push
test
dec
icebp
das
imul
rcll
jae
adc
pop
push
ljmp
or
pop
repnz
mov
movsl
lods
cmp
adc
push
scas
test
lods
stc
mov
loop
test
adc
mov
stc
inc
xchg
jo
in
mov
and
jno
lods
add
outsl
xchg
push
dec
jb
mov
pop
pusha
mov
jno
xchg
out
jg
inc
in
push
out
inc
mov
dec
ja
mov
ljmp
sub
rorb
aad
or
mov
mov
xor
pop
jbe
xchg
mov
loop
add
adc
lahf
xchg
scas
cmp
mov
add
add
mov
push
decl
dec
outsl
ds
add
add
fimull
adc
or
in
jno
insl
scas
into
fists
pop
movsb
addr16
frstor
dec
int3
mov
movsl
std
cmp
add
xorl
mov
fcomip
xor
xchg
bound
inc
jbe
std
inc
mov
shlb
mov
xchg
insb
push
outsl
test
in
push
inc
jp
mov
pop
or
fdivrs
jbe
mov
push
and
xchg
rcrb
sub
and
or
xchg
cmp
addb
xchg
std
mov
add
add
push
lret
and
shrb
insb
push
popa
pop
mov
sub
test
xor
negl
add
cmp
cmp
daa
faddp
mov
daa
mov
mov
push
adc
pop
lea
sbb
mov
arpl
add
jmp
in
push
sub
das
cmp
add
add
add
push
sbb
repnz
push
fisubrs
ret
imul
loopne
jae
lahf
jns
and
mov
add
stos
scas
es
std
xchg
xchg
testb
cmp
imul
mov
dec
andb
jo
or
pop
aad
or
jbe
push
sbb
cmpsl
push
sub
xchg
push
in
popf
inc
fildl
ljmp
pop
cmp
rcrb
inc
jbe
int3
dec
jns
sub
xor
andl
stos
xor
cmc
jmp
sbb
lret
or
xchg
in
jl
cmp
inc
out
push
stos
mov
jno
mov
imul
jg
dec
in
stc
out
iret
and
test
outsb
pop
les
fcompl
test
loop
rolb
mov
ja
add
push
out
jns
mov
mov
mov
lock
pop
jns
inc
inc
stos
and
and
mov
lcall
ljmp
mov
popa
jno
or
jnp
xor
push
mov
movsb
mov
in
adc
inc
jno
imul
roll
xchg
bound
xor
jge
cmp
sbbl
daa
scas
and
sub
dec
cltd
out
cmc
and
outsb
mov
xchg
hlt
pusha
movsl
mov
adc
lea
stc
stos
cld
jo
fdivrl
mov
scas
mov
inc
push
lea
or
mov
shl
out
sbb
dec
push
cmpsb
pop
jmp
inc
xchg
aas
push
popa
loopne
push
or
icebp
cmp
fwait
adc
arpl
and
cli
push
push
mov
sbb
pop
jmp
aad
push
imul
scas
aad
cli
mov
aam
cltd
lock
dec
xor
mov
arpl
pusha
jle
ret
jae
in
pop
mov
xor
imul
daa
repz
ror
lock
jnp
xor
xchg
test
add
add
add
mov
test
loopne
leave
cs
mov
fidivrl
aaa
jae
iret
cwtl
push
rcll
mov
mov
or
jno
sub
push
pusha
fmul
cmpsl
mov
pop
ja
jb
and
call
popf
ds
mov
cmp
xchg
sbb
scas
lcall
mov
fbld
fdivrs
push
jbe
ljmp
aad
je
adc
popf
lret
mov
ds
popf
push
jbe
pop
dec
dec
mov
xlat
frstor
mul
mov
xor
out
dec
mov
into
adc
xchg
add
push
std
pushl
lods
mov
pop
int
push
ret
dec
xorl
lret
int3
sbb
and
push
or
loope
movsl
mov
movsl
and
jns
pop
adcb
fnstsw
push
data16
sub
sub
mov
and
repz
fisubs
adc
inc
in
add
add
add
rclb
inc
pop
es
and
xor
fistl
fistps
test
in
ret
inc
dec
adc
addr16
and
mov
hlt
cmc
mov
pusha
sbb
fsubrl
pop
xor
insl
mov
add
jecxz
add
xchg
jae
xchg
sahf
lds
ret
fsincos
add
inc
pop
shlb
dec
jae
shrl
push
mov
sbb
inc
into
and
mov
inc
jne
pusha
stos
mov
stos
fisubrs
nop
into
icebp
movsl
subl
int3
in
repnz
iret
imul
mov
lahf
and
pop
xor
cwtl
lds
jle
pushf
sub
dec
xor
xchg
hlt
and
cli
or
iret
in
mulb
movzwl
js
gs
in
jg
test
inc
rcl
fadds
xchg
fstpl
ja
xor
add
add
out
sbb
fs
insb
dec
in
add
add
add
mov
adc
mov
mov
jecxz
rolb
sbb
pop
clc
clc
mov
pop
aam
jmp
mov
and
inc
stc
rclb
adc
xchg
pop
add
mov
test
pop
out
idiv
xchg
mov
loop
push
ret
push
fsubs
xor
fldl
ds
push
stc
test
imul
das
mov
jns
cmp
cli
notl
xorl
or
pop
cmp
je
in
fsubrl
lock
lds
push
sbb
fwait
test
movsl
xchg
push
out
decb
subl
hlt
ficompl
jge
xor
fimuls
inc
fs
push
and
inc
movsb
lahf
push
and
adc
xlat
shll
xchg
fisubl
push
jne
xor
sbb
xchg
in
push
lret
jmp
and
outsl
mov
outsl
shrl
cmc
scas
sub
mov
dec
out
add
add
add
iret
enter
xchg
enter
pushf
pop
xchg
dec
or
std
cmp
mov
fsubrs
cmovle
sbb
addr16
insl
movsl
sar
out
mov
lods
mov
stc
int
push
outsl
mov
push
hlt
jecxz
hlt
mov
mov
dec
jne
fsubs
add
add
jge
fsubrl
dec
call
mov
subb
aam
jmp
mov
mov
or
cmp
sub
mov
std
sti
dec
adc
popa
add
jp
add
loop
lods
xchg
jp
sbb
inc
lret
lods
adcl
mov
pop
mov
fcomp
int
lods
cmpl
cs
js
and
fdivl
pop
cmp
rorb
stc
shll
out
bound
pop
mov
in
pop
pop
gs
je
cltd
push
jecxz
adc
cli
aad
jnp
sub
xchg
hlt
push
mov
and
scas
std
xchg
movl
add
add
pusha
rorb
cmpsb
mov
movsb
fstl
add
add
add
xor
sbb
test
push
adc
adc
lock
fdivrs
push
lods
lods
pop
push
dec
js
sbb
sub
and
push
lods
cmpsb
cmp
lret
pop
stos
jp
mov
pop
test
jp
xchg
add
fstps
into
mov
jg
inc
imul
lret
mov
xchg
clc
adc
popa
adc
inc
mov
aas
imulb
pop
jle
mov
inc
xor
jne
sbbl
lahf
xlat
outsl
pop
add
mov
std
adc
pop
push
sbb
and
mov
nop
or
gs
push
sarl
pop
jne
mov
xchg
int
jbe
push
test
inc
sbb
jg
mov
mov
arpl
mov
jl
add
dec
stos
dec
cmp
and
push
mov
repz
push
add
add
add
gs
testl
push
stos
call
add
add
dec
xor
xchg
mov
sbb
jnp
mov
ret
sub
sub
je
push
lods
out
xchg
sub
aas
loopne
fstpt
push
fdivrs
enter
dec
lods
push
mov
xor
push
push
daa
and
pop
cmp
adc
xchg
add
xor
lcall
or
jae
and
sub
cmp
mov
and
insb
push
dec
ror
imull
pop
je
sub
inc
inc
ds
sub
mov
leave
mov
adc
push
cwtl
iret
pop
imulb
jp
gs
imul
mov
cmp
cs
iret
in
dec
loopne
leave
inc
mov
mov
ret
xchg
mov
push
idivb
std
xor
insl
and
jg
pop
out
sbb
jl
push
mov
or
test
popf
and
daa
lahf
mov
pop
das
jno
adc
icebp
add
add
add
inc
stos
data16
fcmovbe
pop
iret
adc
lcall
xchg
cwtl
nop
imul
std
dec
pop
aaa
aam
jnp
arpl
push
mov
mov
pop
ss
jge
ret
mov
imulb
arpl
sbb
cmp
mov
add
or
lock
movsb
push
or
inc
xchg
push
mov
add
sahf
xchg
mov
jns
mov
scas
popa
out
cmp
cmp
sub
cltd
ljmp
sahf
test
imul
pop
or
addl
cmpsb
adc
rol
or
bound
dec
xor
add
subb
aam
mull
xchg
jne
or
jmp
std
lods
in
push
dec
fistpll
insl
pop
xchg
popf
rcrl
cmp
out
pop
dec
push
pop
and
sub
and
stos
cmp
mov
mov
mov
lds
xor
add
mov
fucomi
xor
scas
sbbl
add
add
cmpsl
xor
loope
incl
and
xchg
jne
btc
jae
jmp
fwait
xor
and
mov
pop
xchg
xchg
imul
shll
mov
inc
rcl
mov
push
mov
out
shr
mov
and
mov
push
sbb
shr
mov
inc
cwtl
add
in
sub
mov
cli
addr16
or
mov
and
adc
in
mov
ds
pop
or
sbb
xchg
lret
stos
pusha
mov
loopne
in
pop
pop
imul
popf
ret
mov
jp
adc
scas
and
sarl
sbb
clc
xchg
jmp
shll
mov
into
xlat
dec
clc
jle
mov
jmp
shr
mov
jb
popf
xchg
mov
mov
jbe
jbe
push
inc
pop
jns
aas
loopne
sub
imul
pusha
repz
add
add
inc
imul
dec
pop
cmp
cmpl
adc
int3
ret
addr16
mov
sbb
test
movsb
xorb
xchg
or
dec
inc
cmp
xor
dec
rcl
sbb
fwait
inc
sub
aaa
cmpsl
cwtl
dec
icebp
xor
adc
add
adc
mov
sub
rolb
push
mov
mulb
fsincos
sbb
jl
sahf
and
loope
jb
inc
or
mov
mov
jne
std
test
stos
mov
add
add
inc
inc
jmp
mov
addb
imul
and
adc
sbb
jne
sub
test
mov
xor
cmp
lret
push
scas
pusha
cmp
sub
mov
in
adc
sarl
jno
adc
sub
add
add
add
jnp
mov
adc
add
add
inc
sub
scas
or
icebp
xchg
inc
xchg
xor
cmpsl
lret
hlt
mov
jae
cmp
sub
pop
push
outsl
js
add
xchg
or
and
adc
cmp
fcoml
adc
jge
adc
imul
pop
push
mov
mov
mov
sub
mov
push
nop
mov
xor
aad
add
adc
mov
pop
in
xchg
and
xchg
or
mov
mov
add
sbb
das
sbb
in
cmp
pop
adc
sbb
test
popa
or
fs
out
repnz
sbb
xchg
test
add
sbb
xchg
jmp
mov
xchg
pop
addr16
addb
push
hlt
aam
xor
imul
jge
push
pop
jo
cs
or
arpl
add
imul
gs
lret
push
add
add
imul
pop
inc
inc
loop
sub
fs
adc
mov
jecxz
mov
adc
mov
dec
adc
addr16
popf
in
push
xor
jmp
jbe
sahf
or
cmp
test
inc
ret
cs
mov
loope
mov
xchg
dec
sbb
out
in
out
sbb
xchg
sub
xchg
mov
gs
adc
lds
mov
cld
imull
ljmp
push
xor
jb
inc
test
pusha
in
mov
repnz
enter
std
cmpsl
fstl
jbe
testl
push
outsb
ja
xor
arpl
cmc
inc
or
orl
int
gs
mov
inc
jne
shrb
inc
sbb
repz
ret
repz
push
icebp
push
inc
test
and
lea
inc
mov
pushf
xor
mov
adc
add
add
fdiv
mov
loop
mov
testb
add
add
repnz
and
fidivrl
xchg
pusha
clc
inc
insb
pop
sbb
cld
repnz
loope
negb
mov
pop
jmp
inc
pop
mov
push
push
mov
sub
and
push
jne
push
mov
push
inc
imul
inc
rcll
mov
int
dec
sbb
adc
sbb
es
aam
jl
adc
shlb
out
leave
pop
gs
xchg
dec
mov
ja
addr16
sub
inc
sahf
and
shr
mov
and
test
gs
aas
push
pop
jb
imulb
push
lret
xor
jecxz
mov
xchg
pop
icebp
enter
adc
stos
enter
and
xchg
and
lea
je
xor
xchg
insl
ja
in
jmp
fcompl
cmp
loop
neg
ret
pop
shll
add
xchg
or
add
add
mov
fcmove
xor
jo
add
add
add
xchg
cmpsb
pusha
dec
cld
movsb
xlat
inc
ljmp
mov
push
pop
sub
cmpsl
dec
in
xor
push
sbb
adc
sub
outsb
push
or
shrl
out
iret
cmp
fmul
xor
add
aad
xchg
push
fstl
aaa
push
das
or
and
push
arpl
and
test
xor
loopne
out
pop
aam
push
push
clc
xor
pop
or
sar
push
loop
push
mov
pop
mov
cmpsl
jle
xor
adc
inc
pop
mov
sbb
sub
or
addb
scas
mov
jns
pop
int3
scas
rclb
sbb
jnp
sub
inc
mov
sahf
ret
loopne
cwtl
push
mov
push
xor
and
mov
inc
fisubl
incl
xchg
xchg
jmp
imul
lahf
repnz
popa
popa
sub
je
add
add
add
mov
jl
cmpsb
fstps
mov
mov
mov
imul
sbb
xchg
test
repnz
jmp
sbbl
sub
call
sub
or
shr
dec
cmpsl
movsl
cmp
test
dec
std
mov
test
jns
xchg
daa
xor
cmpsb
add
push
sbb
push
adc
push
into
imul
ss
enter
and
jo
jl
mov
sahf
sahf
movsb
fisubrs
enter
cli
dec
sar
jp
and
outsb
xchg
jb
movsl
addb
lahf
int
mov
adc
push
mov
in
imul
push
in
in
jbe
push
xchg
repnz
lods
pusha
dec
or
cld
jnp
aam
dec
decl
popa
loop
outsb
add
or
inc
ret
mov
sbb
mov
aaa
xchg
lods
in
mov
aam
popf
inc
jb
loope
jge
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
jle
cwtl
js
add
add
add
lcall
sub
out
dec
add
js
cmpsl
mov
push
push
fdivr
xchg
loopne
mov
push
pop
stc
aaa
inc
sti
sbb
push
dec
les
pop
lahf
or
fs
xchg
or
aas
dec
jmp
xchg
outsb
std
or
andb
jnp
add
js
adc
mov
sbb
std
adc
mov
or
mov
fimuls
popl
xchg
shrl
jnp
lds
pop
fwait
lret
mov
das
ljmp
add
xor
sbb
push
lahf
xlat
push
adc
lods
sti
jmp
jb
test
fistpll
inc
clc
jbe
xor
or
pop
cmp
xchg
push
cmp
jo
sbb
sub
jbe
and
jo
arpl
popf
movl
test
push
add
fucomi
fwait
dec
xor
nop
lea
mov
add
add
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
cwtl
aam
adc
shrb
mov
cmp
js
sbb
dec
lock
adc
dec
pop
cmp
pusha
in
push
and
jmp
push
add
test
loop
mov
push
pop
jmp
inc
mov
pop
cmp
dec
jb
sbb
sti
sbb
repz
and
adc
adc
xor
add
pop
mov
xlat
jnp
sub
sbb
mov
push
and
push
xor
or
movsb
or
stos
arpl
mov
rcll
insl
push
pop
outsl
sar
push
aad
pop
dec
lret
lret
push
pop
aas
loopne
jbe
mov
imul
xor
cmpsb
xchg
mov
cmp
test
dec
mov
push
fwait
dec
les
adc
adc
cmp
dec
test
gs
or
mov
sbbl
push
cmp
incl
add
add
aam
int
aaa
das
aam
add
dec
cmp
add
add
aas
push
xor
or
loope
push
push
lret
add
dec
in
push
pop
inc
cwtl
test
push
sub
daa
mov
outsb
out
repz
adc
sbb
mov
fisttpl
push
repz
cmpb
mov
lods
pop
and
mov
xor
clc
in
fiaddl
pop
std
add
push
insl
pop
sbb
and
insb
mov
pushf
mov
fs
adc
push
lret
fistl
mov
cmp
sub
arpl
pop
or
fcmovnb
or
adc
mov
and
or
mov
fs
or
sub
aas
cmp
orl
in
sahf
jns
addr16
insb
inc
ds
sub
dec
pusha
daa
lret
jns
pop
cmc
cmp
sbb
cmp
push
mov
pop
shr
pop
adc
aam
push
bound
xchg
mov
add
add
arpl
addr16
sub
fstpl
arpl
add
or
mov
pushf
inc
mov
sub
lret
movsb
xchg
jge
call
roll
cmp
add
arpl
rcl
pop
ret
sbb
jno
jmp
jmp
movsb
mov
aad
sub
and
adc
mov
sub
inc
jge
sub
push
bound
enter
test
xor
cltd
xor
mov
shll
fcoms
adc
leave
pop
xor
inc
test
push
pop
dec
fmul
aam
xor
das
or
inc
inc
jne
stc
imul
cwtl
enter
scas
out
sbb
and
sbb
ja
cltd
fadds
jl
lods
inc
add
xor
and
dec
shll
xlat
frstor
sbb
and
sahf
pop
fcomip
and
xor
out
push
jae
lock
adc
es
push
pop
leave
out
cmp
cmp
pushl
xchg
xor
dec
sbb
data16
add
add
add
sbb
scas
and
into
mov
adc
mov
jb
cmp
cmpb
xchg
or
stos
xchg
sbb
mov
jge
fcompl
mov
scas
pop
mov
xor
nop
jb
pop
push
bound
out
push
cwtl
sub
addl
jb
and
or
push
push
inc
aaa
add
jl
movsl
imul
cltd
inc
dec
addr16
mov
pop
out
and
xor
divb
push
cmp
mov
mov
pop
mov
inc
leave
stos
cmp
inc
adc
pop
pop
lds
pop
and
lea
stos
std
test
nop
lods
call
pop
mov
fstps
dec
pop
cli
ljmp
pushf
in
push
test
mov
dec
jl
pop
push
shlb
bswap
shl
aas
outsl
ret
cltd
not
inc
mov
mov
push
scas
lods
sub
and
add
add
push
scas
mov
in
mov
add
add
xor
xchg
inc
insb
jnp
les
std
movsb
fstpt
iret
rcll
cwtl
lret
and
mov
hlt
jle
pop
rol
out
outsl
sbb
xchg
pop
or
push
cmp
roll
fs
test
xchg
inc
dec
jnp
add
push
jae
add
push
pop
add
mov
and
pop
mov
jnp
fisubrl
push
fisttpll
mov
imul
ljmp
jae
cmp
sub
das
or
out
mov
cmp
mov
mov
popa
jo
adc
movsb
xchg
cmp
ljmp
fisttps
enter
jnp
cmp
dec
mov
pop
or
jnp
inc
ficoms
inc
xchg
in
cmp
cmpb
dec
out
add
jmp
xchg
pusha
mov
movsb
orb
out
aaa
xchg
and
movsl
mov
mov
mov
mov
add
add
jmp
andb
das
xchg
lds
add
fmuls
rcrl
es
mov
fstl
mov
lds
dec
sti
inc
dec
mov
pop
pushl
ss
inc
outsb
push
pop
mov
jno
outsb
call
sbb
dec
loopne
xchg
add
test
sbb
mov
jmp
xchg
es
inc
testl
mov
adc
stos
loopne
loopne
or
repnz
mov
test
or
lds
sbb
push
xchg
pop
fsubs
in
ret
pop
mov
addr16
sti
imul
or
cmpsl
push
sub
cwtl
mov
mov
cltd
add
or
mov
popw
jae
fidivs
pop
jp
repz
push
cmp
inc
jne
mov
mov
je
mov
les
jl
stos
mov
popf
out
ret
pop
mov
add
mov
inc
lret
fdivl
mov
repz
test
add
add
loope
rcl
mov
cmpsl
add
lahf
pop
ds
in
ret
or
pop
negb
push
pop
xor
mov
dec
mov
xor
lret
testl
lcall
and
xchg
loope
push
push
adc
xor
das
add
lahf
xchg
adc
xchg
and
pop
lods
rcl
mov
divl
arpl
adc
or
push
and
loopne
sbb
loopne
xchg
sub
dec
and
push
adc
mov
xlat
xchg
pop
idivl
int
push
mov
test
filds
loopne
xchg
stc
inc
inc
ja
in
outsb
jg
icebp
pop
fwait
iret
sub
adc
mov
xchg
stos
mov
xor
sbb
mov
mov
insl
jae
ja
and
mov
das
test
mov
dec
cmp
fs
add
inc
stc
mov
mov
lods
imul
adc
dec
cwtl
add
add
add
jo
sub
enter
in
pop
push
pop
dec
jnp
fldt
rcr
bnd
push
add
loope
sub
inc
pand
in
mov
idivl
sbb
cmp
xor
sub
push
adc
xor
and
ds
leave
xchg
mov
jmp
xor
aas
push
fmull
test
popf
push
and
movsl
fldl
sbb
add
leave
cmp
fwait
jecxz
and
xchg
xor
sbb
test
mull
inc
rsm
ret
xchg
es
and
mov
out
rorb
xchg
sbb
inc
icebp
pop
cmpb
scas
xchg
adc
js
icebp
data16
cmp
dec
add
mov
or
bound
mov
js
shlb
not
test
mov
aas
fiadds
add
add
mov
cmp
sub
mov
add
add
outsl
ret
in
cmp
mov
mov
imul
push
fs
in
pushf
test
xor
in
loop
inc
or
and
mov
and
fisttps
cmpsb
cmpsb
xor
or
xchg
scas
adc
hlt
cmp
dec
mov
insb
pop
int
jne
mov
scas
mov
sbb
and
add
pop
fistpll
jbe
clc
sub
adc
divb
outsb
xor
jp
mov
hlt
dec
out
sub
sbb
sbb
jno
pusha
jle
push
rcr
add
inc
xchg
or
repnz
idivb
repnz
jp
in
icebp
pop
stos
pop
out
ja
lret
cltd
push
test
adc
ds
cmc
mov
and
inc
repnz
stc
leave
xchg
subb
push
jp
jae
add
shlb
push
xor
pop
in
xchg
enter
push
fbld
sahf
sub
mov
add
add
pop
or
cwtl
mov
ret
out
movsb
in
sbb
sub
sarb
pop
cs
xchg
or
sbb
push
and
push
sarb
and
pop
mov
out
jae
lahf
push
scas
insb
cmc
es
mov
add
outsb
inc
jmp
mov
loopne
and
mov
jl
or
arpl
jp
dec
inc
fcmovnbe
sub
les
lcall
pop
scas
je
dec
rol
adc
dec
shll
dec
sti
xchg
int3
sub
pop
or
lock
dec
dec
fcomps
dec
sbb
xchg
mov
xrelease
mov
mov
push
insb
mov
fistpll
dec
inc
nop
les
jne
pop
mov
pop
add
cmpb
inc
and
jbe
mov
push
xchg
fsub
fs
in
sub
dec
push
mov
fildll
xor
out
dec
jno
add
add
into
fwait
add
mov
pop
movsb
add
add
add
push
push
mov
and
fisttpl
jmp
aaa
in
pop
mov
add
outsl
aas
sub
adc
clc
dec
mov
shll
sub
outsb
sbb
lahf
inc
add
ljmp
in
lods
out
fisubrl
imul
fcompl
ljmp
mov
je
adc
popa
pop
sarb
xchg
inc
fs
in
inc
dec
xchg
test
ja
imul
push
mov
cmc
aaa
cmpsl
sahf
les
xchg
das
lds
mov
jmp
jp
mov
mov
data16
fisubrl
out
mov
imul
pusha
lock
out
subl
ret
imul
les
and
ss
lock
push
shrl
sti
and
mov
xor
pop
aas
bound
dec
and
cmpsl
mov
mov
jge
mov
sbb
cmp
adc
add
xor
mov
pop
sarb
in
cmp
add
add
add
daa
mov
movsl
xchg
xor
sbb
sub
popa
mov
jle
stos
push
in
dec
lret
push
and
mov
movsb
mov
jne
mov
mov
inc
pop
fsubl
cmp
cmc
in
filds
xchg
xchg
ret
lods
out
lret
lahf
sub
adc
in
out
cmpsb
dec
mov
inc
popf
out
inc
dec
les
add
shlb
pop
push
jns
sbb
ret
push
push
scas
sbb
roll
rcrb
or
shl
jae
addr16
rorl
sub
cld
scas
xchg
cmp
fcoml
rclb
out
jo
sub
ss
cmp
and
fisubrl
and
lcall
imul
dec
icebp
xor
cmc
mov
cmc
clc
fwait
test
addl
sub
sbb
mov
mov
ss
data16
mov
add
add
inc
out
aas
mov
rol
bound
lods
push
add
add
add
pushf
mov
stos
push
xchg
fcoml
popa
les
jg
push
mov
lds
js
out
mov
sub
mov
mov
test
fnsave
pop
xor
mov
es
or
mov
or
jb,pn
loope
cmpsl
clc
in
aas
cmp
cmp
mov
add
dec
sbb
cmp
pop
mov
jmp
push
or
cwtl
xchg
pushl
cs
xlat
and
dec
es
jecxz
push
loopne
movsb
subl
add
jp
or
loope
jne
leave
ljmp
jns
push
ret
fwait
outsl
push
inc
lods
ljmp
mov
jbe
mov
movsl
inc
jns
in
out
jns
and
adcb
sub
dec
push
popf
dec
cmp
ds
jae
push
ja
push
mov
lcall
mov
out
pop
jmp
dec
adc
add
add
bnd
dec
leave
and
das
add
add
add
dec
adc
push
xor
jmp
gs
xor
enter
xor
shll
mov
dec
mov
jae
cmpsb
lahf
in
xorb
sahf
jne
push
xchg
lret
ret
or
xchg
mov
cmp
push
mov
sub
pop
ljmp
ljmp
mov
out
lods
xchg
sahf
idivb
divb
mov
or
test
frstor
ret
cltd
inc
arpl
fiadds
mov
mov
mov
push
dec
mov
xor
xchg
test
cld
arpl
cmp
loopne
loopne
lret
add
lods
negb
jbe
in
std
hlt
cwtl
adc
andb
mov
push
imul
rorb
mov
ss
pop
xor
imul
mov
pop
xor
orb
add
add
in
out
ja
filds
adc
add
add
add
ds
inc
sbb
xchg
inc
imul
pop
adc
repz
aam
out
pop
in
cmp
cwtl
add
push
mov
xchg
dec
cmp
movsl
ljmp
mov
mov
ljmp
ds
inc
jg
inc
je
push
ret
insl
mov
pop
and
out
mov
sub
push
in
cli
mov
jo
stos
dec
mov
sub
jae
xchg
jb
inc
and
pushf
or
push
push
ja
mov
xchg
sub
mov
orl
pop
movsb
xchg
and
add
cwtl
imul
xchg
pop
fstpt
and
in
and
mov
mov
jle
adc
js
cld
rolb
push
mov
sub
aam
and
movsb
mov
push
fisubrl
mov
jmp
dec
mov
test
sti
arpl
cmp
incl
add
add
pop
in
inc
push
or
and
xchg
mov
add
add
into
and
loopne
sub
fdivs
mov
or
and
xchg
sbb
loopne
sbb
dec
icebp
dec
push
gs
ret
mov
fwait
push
add
push
fbld
cmpsb
push
mov
mov
arpl
ds
stos
xchg
cli
sahf
lahf
mov
or
push
inc
push
mov
push
mov
jg
mov
push
mov
mov
jno
test
mov
dec
negb
cs
jge
or
js
add
rcrl
dec
add
icebp
mov
xchg
movsb
sbb
add
dec
sub
shrl
das
outsb
and
ret
xor
cwtl
push
mov
les
cmp
cmp
add
xchg
imul
mov
jle
adc
test
mull
jmp
je
add
int
inc
loopne
jb,pn
out
xchg
fsubrl
pop
addr16
cld
xchg
nop
lods
rcrl
test
add
jg
neg
pop
daa
inc
cmp
add
add
add
jmp
jmp
nop
and
xchg
mov
sub
adc
xchg
sti
inc
push
jne
shll
dec
aad
in
ss
adc
int3
clc
sbbl
stos
push
push
push
icebp
xor
loope
imull
loopne
fiadds
stos
iret
mov
push
inc
lret
dec
movsb
jne
dec
cmpsl
lret
imul
pop
pop
xor
rcl
ljmp
retw
mov
sub
adc
test
mov
mov
fnstcw
mov
push
fwait
inc
enter
add
mov
pop
inc
outsl
in
movsb
inc
jmp
pop
mov
aad
adc
test
mov
jg
aaa
mov
dec
loop
movsb
pushf
daa
scas
je
ljmp
mov
jge
popa
dec
movsl
mov
push
gs
roll
inc
push
or
or
mov
rorl
mov
mov
cmp
sti
jg
cmp
je
stos
into
jl
add
add
lds
mov
sbb
rclb
cvtpi2ps
mov
cmpsl
sbb
pop
hlt
mov
jno
jmp
ss
cmp
fwait
sbb
dec
mov
jnp
jecxz
xchg
xor
sbbb
imul
mov
pop
xchg
test
enter
out
loopne
enter
and
cmp
dec
data16
pop
mov
fisubl
adc
fldenv
lods
out
pop
or
and
mov
mov
sub
loopw
cmpsb
fdivp
leave
addb
sub
pop
jle
shrb
sbb
jns
nop
call
imul
das
sbb
bound
cmp
ljmp
imul
in
cmp
movb
nop
cmp
aad
imul
dec
dec
and
dec
stos
or
fsubp
xchg
mov
outsb
in
arpl
into
and
push
scas
aam
jnp
fstp
fcompl
dec
push
sbb
les
add
add
jae
sbb
pop
dec
lret
addb
add
mov
push
aas
sbb
jno
dec
outsl
mov
insl
push
inc
add
sbb
add
stos
das
adc
ss
jo,pt
adc
pop
test
dec
jnp
ror
std
les
pop
mov
pop
cmp
add
xlat
lods
fistl
hlt
add
mov
scas
out
mov
out
insl
ret
int3
adc
test
pop
dec
sub
lods
jbe
loop
sub
arpl
push
daa
add
in
jge
int
jmp
push
std
mov
out
cmp
sbb
xor
je
push
and
sbb
sbb
mov
sub
adc
neg
sub
roll
dec
sarl
cmp
pop
aas
dec
leave
mov
push
popf
sub
fprem
int
xor
cmp
lret
mov
jno
std
outsl
mov
add
cmp
add
add
dec
mov
xor
and
inc
inc
shll
pop
outsb
test
out
mov
cwtl
push
jne
or
adc
add
mul
jecxz
imul
jge
ljmp
into
sub
mov
xchg
jne
jge
movsl
sub
js
dec
nop
mov
adc
mov
aam
mov
jnp
dec
daa
jns
lock
std
pop
mov
iret
in
daa
mov
cltd
test
adc
pushf
test
and
in
outsl
aas
mov
cmpsl
push
into
cmp
push
mov
jae
xchg
mov
xchg
sti
mov
sbb
pop
andb
je
fistpl
call
and
int
loope
mov
pop
daa
pop
loope
ret
ret
push
jge
dec
sbb
movsl
and
inc
movsl
lret
scas
cltd
add
mov
or
pop
movsl
ret
jle
xchg
dec
in
insl
cmp
arpl
bound
mov
lahf
mov
add
add
jmp
fisttpll
add
push
add
add
add
inc
data16
pop
cwtl
loop
mov
dec
iret
pop
sub
subl
xor
loop
cltd
or
in
daa
push
inc
cmp
repz
rcrb
das
cli
xor
leave
jecxz
sahf
es
scas
ljmp
xor
test
push
xor
jecxz
add
xor
or
push
fisubl
push
insl
xor
adc
fistpl
outsb
jno
fmuls
cmp
in
xchg
inc
dec
dec
es
test
cltd
mov
pop
sbb
and
jmp
stc
adc
push
in
ret
cltd
hlt
movsl
mov
jecxz
test
ret
or
faddl
fnsave
pop
test
mov
add
jns
iret
inc
or
adc
into
mov
cli
xchg
jne
jnp
push
or
lret
out
popa
mov
out
mov
call
int
xchg
xor
xchg
lds
rcll
rorb
add
add
add
push
push
popa
sbb
mov
cmpl
mov
orl
lret
loopne
xchg
push
ficoml
jecxz
je
cmpsb
repnz
rcrl
jl
rcll
pop
xor
sub
or
cli
movsb
movsl
jmp
or
dec
cmpsl
aam
rorb
inc
loop
sbb
xchg
mov
and
adc
xor
fsubl
pop
pop
neg
pop
xor
pusha
cwtl
pop
aad
lods
bound
sub
daa
lods
stos
xchg
xor
movsb
lcall
fldcw
sbb
lret
dec
and
inc
dec
stos
xchg
fisttps
les
mov
sub
or
cmp
jecxz
jae
icebp
test
jnp
cmp
add
inc
adc
pop
push
adc
dec
pushf
inc
xor
jmp
mov
aad
add
add
cli
inc
jg
int
xchg
lods
or
add
and
adc
add
add
mov
fmuls
mov
lret
cmpsb
lods
adc
lret
fwait
push
sarl
sbb
sti
decl
and
in
pushf
push
hlt
cld
addr16
jne
jb
fstp
leave
ss
das
imul
aad
lcall
in
cmp
inc
jl
push
test
mov
jnp
mov
dec
mov
mov
ret
je
xor
sub
push
jns
lahf
jecxz
int
xor
push
cmpsl
mov
or
or
pushf
fs
out
add
scas
xchg
movups
mov
cmp
sub
push
fcmovnb
roll
ret
icebp
push
xor
mov
or
push
sub
cld
ret
aam
loopne,pt
nopl
inc
or
lods
sarb
loop
in
mov
loope
xchg
lret
sub
jns
ret
mov
sub
hlt
hlt
add
das
jb
ret
sti
pop
movsl
dec
xchg
xchg
add
add
xchg
std
cmp
jle
fistpll
fiaddl
adc
add
add
out
outsl
mov
jae
add
call
sub
fbld
and
fdivl
xor
pop
cmp
xorl
xchg
xor
imul
pushf
mov
inc
rcrb
dec
xchg
mov
lea
push
sti
add
jbe
ret
jbe
int3
inc
gs
mov
xor
xor
mov
or
xchg
mov
xchg
sbb
cwtl
stc
cli
cwtl
sahf
ja
or
rolb
iret
dec
sub
jne
ror
xchg
cmp
xchg
in
dec
ret
dec
negl
imul
imulb
xorl
jbe
sub
inc
lret
inc
xchg
les
add
add
popf
hlt
sbb
popa
or
push
pusha
insl
not
arpl
popl
montmul
cmpsb
lock
or
addr16
loope
cmp
pop
sbbb
jg
cmp
add
icebp
xor
pop
xchg
xchg
pop
lds
xlat
ficompl
inc
popa
inc
mov
fcoml
add
add
add
and
cltd
aas
sbb
mov
xor
mov
xor
popl
pmullw
dec
loop
dec
or
mov
lods
push
fsts
loopne
test
dec
fwait
ja
dec
jecxz
sbb
mov
jp
int
cld
dec
mov
xchg
lea
xor
scas
sub
sub
and
fcompl
ret
add
data16
call
sbb
push
shl
push
cmpsl
xor
xchg
push
mov
add
mov
pop
enter
sar
out
push
jmp
imulb
leave
jae
ss
out
mov
push
dec
dec
je
fwait
xor
adc
ds
mov
xchg
lock
mov
fsubrl
push
test
fsts
bnd
or
push
fbstp
cmp
in
frstor
pop
sbb
test
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
add
add
add
add
pop
sbb
cli
and
lods
xlat
jne
mov
cmp
int
movsb
test
das
shll
dec
orl
sbbb
xchg
mov
sub
jnp
sbb
and
adc
cli
jl
jecxz
mov
cld
sbb
repz
pop
mov
pop
mov
rolb
fs
add
ret
mov
sbb
es
adc
cmp
and
cmc
sti
mov
shrb
xchg
dec
dec
pop
loope
mov
inc
lds
pop
or
and
push
jbe
mov
inc
jg
rclb
xchg
cmp
xchg
xor
in
ds
mov
int3
adc
cmp
push
sub
test
fidivrs
push
or
imul
sti
insb
cltd
lds
adc
or
dec
sbb
std
sbb
stc
cld
or
movl
add
jmp
push
push
mov
add
pop
movsb
mov
fucomp
and
pushf
mov
pop
cld
sahf
jno
mov
les
push
mov
jge
js
add
rdpmc
lea
pushf
mov
adc
mov
sub
cltd
movsb
xchg
sub
hlt
sahf
idivl
xchg
push
xchg
mov
shl
outsl
push
sbb
sarl
je
jns
pop
ret
or
jmp
push
xor
mov
lock
inc
es
aaa
out
scas
aas
gs
lds
xchg
adc
je
push
xchg
addr16
sbb
mov
clc
cmc
das
inc
inc
mov
ds
xchg
pop
push
xor
dec
pop
mov
rcrl
xchg
test
cmp
pop
lret
pop
adc
adc
jge
cmp
fwait
icebp
fidivl
negl
adc
pop
xchg
cmpsb
gs
jge
call
add
add
test
std
dec
add
insb
cmc
mov
aam
stos
push
sub
icebp
out
data16
ljmp
scas
shll
push
inc
insb
enter
dec
notl
adc
aam
sbbl
pusha
sahf
lahf
xchg
adc
adc
sub
ljmp
mov
imul
iret
push
mov
inc
shlb
stos
xchg
arpl
mov
or
ficompl
ss
xor
xor
ja
test
mov
ja
nop
pop
rolb
push
inc
pop
movsb
or
cltd
movsl
imul
pop
dec
gs
lret
movsl
add
fisubs
xlat
rorl
outsb
imul
mov
aaa
repz
push
jge
adc
insl
js
xchg
and
and
lods
cmp
sub
xor
es
adc
daa
push
jle
mov
add
add
dec
pushl
jns
jae
in
push
add
add
add
loop
je
imul
ss
jge
pop
pop
stos
and
adc
push
jnp
aad
cmp
nop
mov
fnstcw
cmp
pop
mov
sub
lahf
call
iret
inc
xor
adc
into
push
push
out
xchg
push
jb
std
mov
rorb
lret
cmp
mov
dec
jl
jno
jmp
rcrb
adc
cmpsl
in
sub
arpl
cmpl
jecxz
xor
fcomip
mov
cwtl
fwait
xchg
jo
js
or
sub
dec
or
cmp
nop
push
lods
xchg
cld
repnz
out
mov
fimuls
push
out
dec
insl
mov
mov
or
rcl
out
rclb
nop
push
repnz
in
movsl
js
push
push
imul
bound
lahf
or
add
ljmp
jge
js
or
pop
sub
inc
ja
pop
aas
dec
push
mov
add
add
test
jno
scas
fdivr
fldenv
dec
jae
pop
dec
iret
xchg
cmp
cltd
jp
push
xchg
int
icebp
or
inc
jp
cmp
popa
push
jo
out
fcompl
or
clc
imul
ja
cmc
push
add
cmc
ret
mov
inc
pushf
push
cmp
lods
mov
clc
repnz
push
mov
aad
and
sbb
push
stos
jle
loop
pop
out
aaa
sbb
insb
out
push
mov
pop
push
lods
xchg
aaa
stos
dec
adc
xor
out
xchg
xchg
dec
data16
bound
nop
movsl
jbe
pop
jg
inc
and
insb
insl
xlat
cmp
dec
flds
pop
nop
fs
add
inc
xchg
test
mov
xchg
mov
sbb
push
mov
mov
decb
and
cmc
aas
dec
xor
mov
test
data16
mov
add
add
xchg
jae
ja
div
mov
mov
add
add
add
fstpl
imul
dec
add
addl
movsb
adc
and
fcompl
outsl
mov
mov
adc
adc
fwait
rcrl
out
jp
xchg
lahf
and
jp
addl
sbb
dec
shlb
fldlg2
xchg
jl
push
sahf
outsl
arpl
inc
add
jne
mov
and
fisubs
jge
pop
cmc
push
xchg
mov
jns
jge
test
popf
int3
dec
int
inc
out
jecxz
aam
fbld
outsb
aam
imul
stc
add
pop
mov
dec
dec
bound
push
jmp
mov
inc
add
loope
test
dec
sbb
lcall
faddl
mov
xchg
or
leave
xchg
inc
repnz
jno
lahf
sti
pop
inc
pop
out
push
and
jns
cmpb
push
mov
insl
in
pop
mov
test
xor
cli
std
jg
push
pushf
dec
adc
add
add
add
push
cmp
notb
rcr
pop
mov
jp
pop
push
pmaxsw
jg
fisttps
popa
adc
pop
dec
nop
sub
in
paddsw
ficomps
ljmp
push
imul
scas
push
sbb
pop
mov
ret
lret
out
fwait
sahf
addr16
das
push
sti
dec
add
aas
mov
jge
in
or
xchg
pop
notb
fxch
pop
or
xchg
in
add
push
ljmp
push
test
out
jnp
jo
or
into
xchg
mov
dec
and
es
lods
outsb
andb
mov
and
in
out
pop
jp
unpckhps
sbb
push
fs
gs
stos
mov
icebp
jae
jns
or
cld
pop
ffreep
sub
movsl
jle
jae
mov
jp
jns
sbb
fisubrl
push
iret
xor
imul
add
testl
incl
sbb
jne
mov
add
add
das
inc
fiadds
jg
push
in
push
cmp
ret
push
shlb
xor
popa
lods
cmpsb
xchg
loop
adc
mov
or
test
mov
je
test
xchg
dec
popf
mov
aad
pop
add
lret
add
inc
lea
mov
pusha
jg
fildl
addr16
lods
cmp
mov
xchg
pop
arpl
xchg
into
mov
in
enter
pop
jg
mov
mov
sub
rcrl
mov
es
scas
lea
pop
sub
enter
and
ja
xchg
push
dec
sub
cld
sbb
lcall
dec
loope
das
rcl
jns
icebp
lahf
rorl
push
out
popa
je
cli
into
mov
mov
gs
xchg
push
jb
cli
sub
hlt
push
pop
cs
sbb
adc
into
pop
push
sub
mov
int3
imul
sbb
mov
pop
or
testb
cmp
add
add
es
jg
pop
or
xor
xchg
lcall
add
stos
addr16
dec
jno
or
or
pop
push
mov
mov
jo
xchg
and
or
mov
push
sbb
sbb
mov
lret
xor
push
and
lods
inc
sti
jae
or
sub
mov
gs
cmp
pop
xor
fstpt
mov
push
bound
or
in
arpl
cmp
jno
test
arpl
icebp
sbb
push
insb
fadd
out
loop
dec
aam
stc
mov
mov
jbe
lahf
inc
xchg
stc
inc
ss
dec
and
push
enter
add
outsb
mov
fmull
rcl
or
call
into
dec
lahf
movsb
push
push
iret
imul
sbb
aam
xchg
mov
mov
sbb
fiaddl
out
in
xchg
out
sub
push
xchg
out
data16
js
pushf
pop
jmp
int
data16
call
add
or
dec
push
cmp
sbb
add
in
or
pusha
mov
in
fbstp
and
scas
int
jne
dec
xor
es
popf
push
outsb
push
call
dec
ret
js
sbb
loope
jecxz
ret
add
pop
add
lahf
and
shl
or
mov
xchg
scas
pop
test
iret
add
xlat
xor
in
xlat
repz
aam
or
loope
xchg
adc
in
test
cmpsb
jno
add
test
fsubs
or
int3
jo
into
mov
lea
cmp
pop
pop
or
jbe
mov
add
imul
push
pop
lret
outsb
add
mov
cs
jmp
cmp
jbe
jnp
popa
enter
hlt
lcall
pop
cmc
xor
ja
std
jb
test
cmpsb
jno
push
sub
pop
jmp
cmp
daa
sub
inc
xchg
push
xlat
sub
mov
and
add
add
stc
lods
xor
mov
jmp
add
add
lret
xchg
lret
lret
test
insl
out
jmp
push
cmpsb
das
jmp
imul
adc
fcomps
bound
gs
xchg
in
fwait
mov
inc
ljmp
lret
loopne
sti
pusha
es
into
call
in
insb
mov
fsubr
add
pop
into
andb
lock
xor
add
mov
add
cmp
or
outsl
push
cmp
fmulp
sti
das
cmp
xorb
pop
aad
hlt
cmpsb
or
push
fsubrl
subl
xchg
xor
pop
xor
out
mov
sbb
jmp
rclb
mov
mov
and
addb
mov
or
negb
push
insl
jb
and
xchg
es
call
cltd
cs
xchg
push
mov
cmc
arpl
dec
test
xchg
popf
ja
sbb
xchg
fcmovb
dec
sub
aas
jb
cmpsb
ficoms
stos
sbb
call
mov
or
add
add
add
or
out
lcall
mov
fistl
repnz
mov
push
jbe
loope
mov
xor
data16
sbb
fdivl
jb
cli
add
adc
bound
ja
sbb
frstor
pop
in
negb
mov
rcrl
xor
std
jg
daa
xor
outsl
sub
jle
ja
sbb
xchg
mov
add
addl
xchg
shll
scas
ficoml
out
jo
rorl
pop
push
sbb
mov
imulb
fistl
mov
pop
push
std
lock
rcll
aad
sbb
fs
sbb
mov
imul
pop
rcll
mov
adc
icebp
adc
pop
fcomps
mov
sub
in
lods
dec
mov
jmp
mov
or
cs
rol
sbb
cmp
in
jmp
insl
inc
adc
push
xlat
or
add
add
mov
out
stos
jge
or
xor
aas
adc
add
add
add
jl
cmpsl
jb
jmp
cmp
cmp
xor
aaa
loopne
pop
pop
testb
aad
mov
xchg
int3
push
les
movsb
cmp
jmp
sbb
xor
test
iret
shrb
xchg
pop
clc
mov
shl
push
scas
lock
fcmovu
stos
in
cmpsl
test
xchg
pop
data16
dec
mov
or
mov
and
in
mov
jmp
lods
add
xchg
shlb
jle
mov
jo
ret
mov
das
add
je
ja
xor
addr16
int3
mov
arpl
lahf
sub
addr16
out
or
inc
mov
push
jne
ja
or
push
movsb
cmp
xchg
mov
cmp
rcrl
cld
xor
fwait
in
in
outsb
lds
mov
scas
mov
jle
stos
mov
push
icebp
test
xchg
mov
movsl
clc
dec
or
out
xchg
iret
push
aas
xchg
jmp
add
add
add
mov
push
xchg
lcall
call
popf
test
push
loopne
jge
fmulp
dec
cmp
iret
dec
hlt
push
mov
dec
fcoml
mov
or
cld
sub
adc
xchg
insl
dec
cwtl
cmp
test
out
sbb
mov
add
xchg
rorl
inc
jae
push
mov
jmp
inc
js
mov
dec
cmc
xchg
scas
imul
cwtl
sbb
dec
xor
add
in
jno
add
inc
out
mov
mov
inc
xor
jmp
outsb
xor
in
lea
xor
je
pop
cmpsl
dec
cmp
int3
lock
cmp
movl
adc
fwait
loopne
in
jo
mov
sub
jno
fcomi
adc
lret
sub
movsb
jmp
and
dec
inc
scas
rorl
repnz
fwait
cmp
fdivr
adc
add
add
in
add
cmp
out
loope
jns
pop
inc
mov
sbb
add
add
add
sbb
cli
outsb
cld
xchg
in
es
jo
and
inc
lea
inc
in
decl
dec
rclb
dec
add
out
mov
mov
cltd
je
idivl
sbb
push
loope
pop
sub
in
xchg
mov
or
cmp
fcomip
xor
sahf
ret
sbb
loope
xchg
sbb
dec
cmp
mov
push
out
or
dec
pop
add
push
int
ret
call
aad
push
cmpsb
or
push
xchg
fidivl
dec
lods
pop
out
mov
aam
into
ds
cmpsb
adc
rcl
int3
xor
cmc
call
cmp
mov
adc
loope
rcrb
arpl
cmp
addr16
sub
push
dec
xor
popa
xor
jb
in
dec
insb
sbb
icebp
or
aaa
or
cltd
push
xchg
push
pop
xchg
and
mov
pop
test
sbb
sti
push
mov
pop
mov
add
add
add
lods
int
or
mov
adc
pop
jmp
out
jl
add
mov
inc
sbbl
loope
push
mov
jecxz
xchg
and
dec
enter
nop
mov
shrl
scas
or
mov
push
push
fnstsw
mov
fwait
push
cltd
loopne
and
loopne
sbb
pop
mov
push
push
sub
in
ret
push
repz
gs
sub
inc
or
sbb
add
shrw
in
mov
adc
and
mov
fimuls
and
repnz
xchg
xchg
es
dec
bound
dec
idivl
pop
inc
xchg
repz
pop
lahf
out
jns
add
inc
xchg
mov
mov
clc
mov
cld
ss
rcrl
or
gs
fdivs
scas
inc
ja
push
sbb
dec
pop
lcall
repz
mov
or
cmc
call
add
add
jg
cld
ret
add
jg
mov
add
add
jb
scas
inc
mov
pusha
mov
adc
pop
and
jge
inc
mov
mov
push
cli
lahf
xor
push
pusha
mov
sub
ret
mov
js
xor
push
sbb
roll
or
outsl
push
mov
push
push
loop
js
arpl
psubsw
dec
lret
pop
mov
cmp
and
stos
out
je
loope
or
dec
push
add
aad
icebp
mov
xor
mov
xchg
rclb
scas
add
outsb
add
mov
jnp
pop
push
cmp
push
jp,pt
push
push
sti
pop
sahf
push
fisubrl
and
jae
mov
xchg
add
lret
dec
mov
dec
loope
int
mov
adc
sub
jnp
xor
in
and
in
jmp
mov
test
add
ret
mov
iret
mov
or
dec
and
add
add
add
and
pop
and
dec
pop
add
jne
sub
popa
test
lock
dec
dec
or
test
inc
xor
mov
or
comiss
mov
out
out
xchg
pop
cmpsl
mov
mov
pop
xchg
jnp
lcall
sub
inc
adc
ljmp
jns
test
and
mov
jbe
xchg
or
into
mov
xor
movsl
push
or
fld
imul
pop
pop
int
jne
outsl
arpl
cmp
or
cs
cli
sti
jns
mov
sub
sti
ja
jno
dec
jecxz
data16
dec
jne
scas
cli
popf
enter
mov
fwait
mov
add
mov
inc
mov
cmp
xor
adcb
and
loopne
xlat
fs
xor
fsubl
faddl
fldt
mov
leave
into
or
jg
arpl
push
lcall
add
add
mov
push
xchg
fiadds
sarb
fisubrs
or
cmp
fdiv
add
mov
aaa
cmc
mov
cld
mov
lahf
into
push
and
inc
jno
stos
mov
ss
mov
or
js
cmp
pop
into
jmp
and
xchg
repz
pop
sbb
std
je
test
inc
flds
xorb
das
pop
mov
jae
arpl
xor
pusha
outsb
in
mov
mov
cmp
fcompl
aad
and
push
fstl
dec
inc
jp
int
sub
add
out
xor
mov
fadds
push
cli
out
movb
dec
mov
or
cli
sub
loope
xor
imul
clc
in
shrl
xchg
in
imul
insl
cmp
ljmp
jge
lahf
roll
dec
adc
sub
push
xchg
shlb
cli
clc
cli
clc
sarb
sti
mov
sbb
sub
add
add
add
mov
iret
idiv
and
and
cmp
cltd
daa
add
popl
lea
cmpsl
mov
dec
mov
pop
jae
stc
push
insb
sbb
sbb
mov
nop
adc
adc
outsl
ss
jo
pop
mov
orl
xchg
aas
mov
mov
pop
jne
or
jecxz
movb
push
mov
cmc
inc
insb
add
popf
stos
push
mov
mov
cmp
push
push
mov
in
aaa
movsb
iret
clc
outsb
add
cld
int3
inc
scas
sub
mov
clc
push
pop
push
and
out
fldpi
scas
test
je
push
inc
lods
dec
in
mov
clc
scas
int3
xor
xlat
adc
adc
xor
idivl
pop
or
jne
pusha
pusha
cltd
lods
fwait
int
jbe
or
sub
pop
scas
xchg
and
mov
stos
adc
test
in
mov
outsb
out
or
fisubrl
add
add
jnp
out
mov
and
xor
add
add
add
push
cmp
and
pop
ret
into
fwait
mov
inc
cltd
loope
sbb
mov
dec
mov
ret
test
aad
aad
data16
daa
jnp
dec
add
test
cld
jecxz
stos
xchg
subb
shll
inc
repnz
pop
adc
popf
test
int
test
imul
imull
mov
dec
mov
adc
cmpsb
je
leave
iret
jg
pop
js
xchg
or
mov
popa
lds
push
orb
ficoml
dec
or
dec
mov
push
idivl
mov
fisubrs
in
adc
mov
mov
mov
ficoml
jae
sbb
dec
push
jl
aam
popf
idivl
inc
daa
fcompl
jnp
mov
fs
xchg
mov
ret
adc
sub
sub
inc
add
popf
in
fwait
inc
pop
push
sub
xor
sub
add
es
data16
insb
daa
mov
xlat
call
add
add
add
mov
fcoms
test
stos
cmp
clc
loopne
jbe
cmpsl
and
sahf
jle
dec
sub
scas
pop
xor
cmp
shlb
movsb
sub
dec
out
andb
mov
je
lock
mov
in
pop
sbb
mov
jnp
clc
or
iret
jae
jnp
repz
aad
ja
inc
mov
pop
movsl
js
push
rcrb
xor
mov
sub
xchg
xor
testb
xlat
cmp
aad
cmc
clc
cmp
lret
scas
mov
in
adc
add
xlat
inc
call
push
movsl
dec
mov
mov
pop
dec
addr16
jbe
dec
cs
mov
lahf
mov
aad
inc
test
in
sub
mov
sub
rcr
inc
dec
push
xchg
mov
fwait
andl
or
push
imul
push
outsl
xor
mov
mov
leave
jbe
adc
stc
mov
int
mov
pusha
inc
clc
mov
fldcw
add
daa
cmp
add
add
add
outsl
xorl
add
popa
lea
xchg
je
ds
cwtl
cmp
mov
jb
cmpsb
mull
enter
sbb
cmp
mov
xchg
lea
movb
adc
cwtl
inc
xchg
mov
sbb
rclb
and
pop
dec
adc
mov
and
mov
and
xchg
es
popf
sbb
push
sub
cmp
jl
lret
sub
out
and
mov
arpl
sbb
xor
inc
adc
adc
ficoms
xchg
adc
fisttps
sub
inc
add
sub
xchg
je
mov
pop
dec
cmp
jns
pop
pop
or
mov
lods
insl
pop
and
mov
inc
pop
gs
mov
mov
sbb
add
add
and
push
sti
cmpsl
enter
pop
dec
sbb
cmp
add
add
add
divl
and
ret
ss
fbstp
stc
daa
lods
xor
jb
stc
aad
fnstcw
lretw
loope
inc
icebp
adc
cmp
fmul
mov
pop
mov
mov
ds
jb
dec
nop
repz
mov
and
sub
mov
into
mov
fdivs
into
fnstenv
mov
fldenv
or
gs
sbb
add
inc
mov
fsubrs
stos
sub
lock
dec
scas
adc
movsb
or
loope
loope
mov
in
idivl
add
push
mov
push
rcrb
fs
inc
adc
out
in
dec
cli
int3
fstpt
notl
popa
sub
inc
mov
imul
pop
inc
test
sti
stos
addr16
jnp
insl
test
aad
xchg
jge
add
clc
sbb
inc
sbb
lret
dec
mov
xchg
add
mov
or
dec
xor
lahf
push
and
std
mov
dec
push
repnz
cmpsb
inc
sub
add
add
jmp
and
add
add
test
cmp
sar
mov
xor
sub
or
dec
je
movsb
in
ds
inc
push
out
lcall
imull
insl
lcall
push
mov
mov
xchg
mov
das
sahf
sub
sbb
pop
int3
sbb
jo
xor
pop
xchg
jbe
and
enter
and
lahf
stos
sti
mov
popa
sub
jl
jb
rclb
sub
sbb
shlb
inc
mov
jp
jle
test
imul
push
dec
sbb
xchg
pop
jae
push
ret
mov
push
dec
orl
sbb
in
shlb
scas
loope
adc
cmp
mov
pop
cmp
popf
hlt
pop
lods
mov
cmp
inc
not
push
cmp
dec
jl
and
sbb
sahf
test
pop
jge
cli
lret
mov
cmc
enter
add
and
jecxz
and
lcall
add
add
add
mov
jl
xor
sub
or
clc
call
and
sti
sbb
cld
push
jle
es
setns
hlt
xor
mov
into
movsb
cmp
dec
or
leave
push
pop
add
icebp
or
lods
inc
adc
or
out
das
add
stos
mov
dec
or
xor
bound
jmp
mov
add
add
mov
in
in
rclb
rorl
jne
push
jmp
adc
cmp
push
fdivrl
cmp
or
xchg
fwait
imul
add
ret
lea
push
push
ljmp
add
ret
cltd
shrl
or
cld
adc
dec
pop
jnp
sub
imul
sbb
loopne
imulb
sti
xor
cmpl
jne
sarl
add
fiaddl
ret
ficomps
cmp
lahf
cs
ret
inc
dec
add
add
add
xchg
outsb
mov
cld
pusha
inc
xchg
icebp
and
add
fldlg2
enter
fisubl
scas
pop
rol
repz
scas
mov
data16
inc
ret
loopne
fbld
sbb
cs
and
adc
loop
cmc
xor
xchg
insb
inc
dec
fcomps
push
jbe
mov
cmp
cli
hlt
mov
mov
mov
mov
add
pop
push
pop
jo,pt
cltd
outsl
inc
cmp
pop
mov
and
xchg
push
mov
and
xor
shlb
cs
int3
pop
mov
jns
xchg
add
mov
repz
or
sahf
xchg
xchg
jbe
insb
shll
mov
add
push
std
push
inc
sub
daa
jne
jae
mov
or
stos
jo
aaa
in
pop
jb
call
imull
mov
jle
leave
or
andl
add
arpl
ja
sub
add
iret
cltd
dec
das
add
add
add
mov
out
cli
add
fldt
xchg
fdivl
xchg
lock
xor
arpl
icebp
stos
in
jl
mov
popa
aas
or
outsl
or
dec
jmp
pop
aad
insb
loop
or
mov
mov
mov
lret
lods
in
mov
inc
into
mov
es
inc
jl
sub
cltd
pop
imul
stc
and
adc
adc
pop
arpl
mov
and
ss
jg
stc
mov
xor
push
push
dec
std
jmp
loopne
lods
mov
jo
jge
dec
mov
xor
cld
cmc
sbbb
push
lcall
idiv
jge
pop
rorb
sub
mov
fwait
sub
out
dec
test
icebp
cmp
jae
ljmp
psadbw
insb
pop
maskmovq
sub
xchg
scas
lock
mov
or
mov
sbb
add
add
stos
ret
mov
xor
mov
pop
loopne
push
push
xchg
in
leave
pop
and
loope
push
sub
sub
loope
jecxz
iret
or
mov
out
mov
sbb
xlat
test
push
divb
push
xchg
iret
cmp
push
test
in
pop
mull
xor
mov
mov
add
pop
rcll
outsl
xchg
and
add
sbb
mov
andb
xchg
or
shrb
and
out
in
xchg
outsl
fwait
or
lods
popa
ret
cmp
andb
xchg
mov
es
clc
dec
push
or
in
adc
sub
jnp
pusha
ja
dec
int
loopne
sbbl
jnp
gs
fadds
out
dec
cmc
xchg
pop
and
xorb
enter
pushf
notl
test
leave
int
mov
cmc
jbe
lcall
call
push
adc
add
sub
sti
pop
jge
neg
hlt
add
or
add
add
test
and
out
in
jecxz
sarb
push
sub
mov
insl
ds
leave
mov
mov
idiv
insb
test
fucomip
out
inc
push
sahf
mov
xchg
imul
or
test
inc
js
or
ret
je
sbb
xor
out
inc
push
lea
push
loopne
sub
or
jp
cmp
mov
imul
cmp
sbb
and
pop
jns
test
pop
sti
shll
outsb
je
inc
pop
pop
push
out
jecxz
xor
imul
mov
nop
ret
rclb
pop
sub
arpl
imul
xchg
xchg
movsl
stos
mov
sbb
arpl
loope
or
xchg
fs
fidivs
jbe
mov
adc
mov
adc
cmp
pushf
dec
push
lcall
outsl
in
testl
cltd
pusha
cltd
fsub
std
in
popf
in
stc
jmp
mov
adc
pop
xor
add
add
jb
push
xchg
in
in
or
orb
pop
dec
cmp
inc
ss
loop
shrl
hlt
addl
lea
mov
ficomps
ds
test
mov
outsb
fcoml
sti
mov
in
cmpsb
and
pushl
adc
repnz
xchg
and
jnp
jmp
mov
mov
adc
dec
jno
testl
mov
mov
xchg
xor
leave
pop
mov
mov
add
sbbb
mov
cltd
add
mov
xor
push
sub
mov
xor
inc
roll
mov
pusha
push
mov
mov
imull
adc
sahf
dec
jl
je
scas
mov
bound
and
cwtl
mov
cmp
dec
je
xlat
and
and
mov
ja
out
jge
in
sbb
shlb
pop
lea
add
add
jp
jnp
sti
xchg
jle
jp
lods
jno
pop
push
pop
xor
add
add
xchg
movsb
mov
xchg
addb
fists
sub
jns
jno
aad
nop
push
push
fistl
lret
leave
jecxz
jp
cs
cwtl
or
pop
xlat
jae
xchg
js
xchg
mov
enter
outsl
addr16
popf
sub
push
pop
lahf
lods
aas
cwtl
mov
call
out
out
adc
lret
aaa
push
repz
out
fimull
je
clc
xchg
mov
sbb
cmpsl
or
mov
dec
sahf
dec
xorps
and
filds
adc
fstpl
sub
lds
scas
sbb
or
faddl
rcrl
movsl
pop
push
mov
shlb
mov
out
neg
inc
frstor
das
mov
movsb
mov
adcl
dec
sub
add
jecxz
pop
nop
jo
out
mov
push
sti
decb
mov
ret
add
add
add
lock
jae
in
cmp
fisubrs
inc
lock
and
sub
ds
xchg
adc
das
mov
mov
mov
dec
les
inc
repnz
push
adc
xor
push
fnstsw
sub
inc
sti
cmp
out
lret
movsl
push
ret
dec
jbe
add
stos
mov
ret
fs
dec
jg
xlat
sarl
dec
mov
int
push
minps
cld
ljmp
dec
lcall
jo
popl
and
test
sub
repz
dec
idivl
inc
pop
loope
mov
adc
jb
ljmp
lock
lcall
mov
push
loope
xchg
cmp
jg
hlt
and
ss
out
out
and
sub
xor
iret
rol
mov
xchg
sbb
adc
les
push
ret
cmp
xor
hlt
cmp
test
add
add
pop
ret
cs
adc
mov
mov
xlat
dec
inc
cmpsb
insl
pop
ss
movsl
shl
sbb
test
push
mov
xor
and
jge
fsubrs
xchg
daa
js
aam
dec
cltd
js
js
clc
xchg
dec
add
xchg
push
frstor
sub
adc
data16
inc
sbb
clc
pop
orb
sbb
dec
xor
dec
int
lcall
sbbl
mov
rcl
daa
and
popf
aaa
rclb
jae
out
jge
xor
adc
or
mov
sahf
mov
push
and
test
sub
push
adc
pushf
rcll
pop
fst
cmpsb
xchg
aad
repz
stos
xor
repz
adc
push
and
pusha
mov
cmp
lret
icebp
dec
ss
pop
add
mov
jmp
daa
sbbl
outsl
dec
testb
add
incb
ljmp
int
jns
push
add
add
xlat
or
decl
test
jno
in
add
jo
or
shrl
or
negl
mov
sbb
mov
jmp
xchg
repz
ljmp
fwait
adc
add
popa
jle
movsl
mov
inc
dec
orl
pop
push
std
mov
xchg
push
shlb
mov
xchg
call
push
or
movsl
mov
data16
movsb
cmp
adc
outsl
dec
cltd
popa
adc
ret
pop
or
stos
mov
test
sbb
sbb
mov
in
sbb
mov
add
xor
movsl
daa
mov
rorl
and
jb
out
out
inc
push
das
mov
or
cld
dec
push
mov
loope
mov
jo
scas
fldl
pop
test
pop
je
mov
jge
je
push
add
divb
rclb
nop
lcall
aaa
add
add
add
ret
aas
cmp
movsb
mov
outsl
cmp
mov
loop
lcall
and
cmp
cmc
mov
adc
fisubs
add
rolb
outsl
test
fsubs
cs
dec
sahf
sbb
jnp
adc
mov
jp
lret
test
das
push
sar
jns
dec
cmp
inc
pop
hlt
test
sbb
mov
mov
or
ljmp
inc
das
jae
gs
xor
pop
xchg
mov
xchg
fbstp
loop
jl
stc
jno
das
sub
add
pop
cmp
inc
test
add
iret
cmp
scas
lret
or
push
jmp
pop
sub
sbb
sti
and
loopne
mov
aas
int3
mov
mov
cli
jbe
ret
clc
or
stos
mov
cmpsb
and
add
jl
dec
jbe
idivl
or
push
add
jo
add
add
add
mov
pop
xor
cwtl
jae
cmp
lret
aam
enter
ret
pop
ljmp
mov
cld
mov
sbb
xor
pop
insb
mov
adc
xor
and
js
mov
inc
aam
mov
jmp
sub
cmc
push
and
dec
lahf
sarb
xchg
add
xchg
jg
jno
or
or
shll
dec
inc
out
jnp
mov
mov
push
repz
sub
jl
and
clc
subl
mov
ljmp
gs
xchg
push
cmp
out
lret
or
pop
pop
mov
or
jb
dec
outsb
aaa
xor
shll
mov
or
outsb
mov
xchg
sub
out
movsl
pop
and
outsb
sub
stos
fs
jmp
leave
aas
into
sti
adc
add
add
stc
and
dec
clc
cli
cmp
out
out
mov
rorl
pop
adc
loope
sbb
rcr
imul
std
cmp
sbb
pop
into
mov
sbb
test
out
shll
mov
dec
fimuls
ret
add
test
leave
jecxz
sub
pushf
shlb
lcall
push
mov
jmp
scas
std
das
fwait
xlat
repnz
shlb
and
ss
inc
and
lahf
jb
insb
mov
movsl
cwtl
out
mov
addl
xor
rorl
jo
cltd
idivb
mov
popa
add
dec
test
jbe
sbb
in
pop
inc
dec
int
inc
enter
cld
jmp
xchg
jge
shlb
jle
cwtl
cmp
ljmp
jno
and
mov
lea
jbe
je
mov
movsl
jmp
cmp
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
imul
cmp
add
add
aas
pop
push
outsl
mov
mov
bound
adc
inc
dec
add
repnz
inc
hlt
fisttpl
insb
fdivr
push
shlb
xor
mov
iret
cmp
cs
iret
mov
jl
ljmp
mov
sub
xor
aam
pop
lcall
sbb
lret
pop
jl
mul
add
cmp
pop
mov
loop
pop
rcl
in
fists
inc
scas
jns
mov
or
rcrb
sbb
mov
inc
sbb
push
push
mov
repz
push
adc
xchg
insb
std
push
inc
sub
cmpb
test
stos
inc
jb
xor
fcmove
popa
sbb
dec
cltd
repnz
fimull
movsb
mov
mov
jmp
jae
sub
push
push
xchg
push
xchg
push
pop
cli
into
ffreep
inc
mov
sbb
int
fildl
add
add
cmp
movsb
push
sbb
sahf
pop
add
add
add
int
inc
jnp
sarl
fwait
jecxz
push
ds
xchg
stc
pop
out
push
cmp
sub
sbb
jmp
movsl
negl
push
xor
and
jno
fisttpl
and
push
std
dec
mov
cmp
jg
pusha
test
mov
jp
cmp
gs
cmp
jg
test
movsl
iret
es
and
stos
pusha
pop
nop
imulb
or
mov
iret
popf
loopne
imul
mov
lods
inc
adc
cwtl
mov
inc
aam
mov
xchg
lods
int3
jb
addr16
mov
stos
out
inc
sbb
call
pop
stc
inc
push
xchg
jo
shlb
sub
cmp
shrl
les
pop
mov
addl
insl
xchg
or
test
cli
bound
iret
out
sarb
cmp
xor
repz
mov
add
add
adc
jmp
dec
push
loopne
cmp
add
add
cwtl
mov
addr16
jl
dec
jle
mov
jnp
aas
sbb
outsl
mov
mov
fbstp
into
in
xchg
pop
enter
xor
out
les
aam
int3
push
fidivrs
jl
push
dec
mov
push
or
mov
inc
inc
mov
adc
push
dec
mov
daa
test
push
xor
outsb
fs
imul
mov
mov
mov
fisttpl
mov
push
push
push
test
pusha
or
cmp
insb
shrb
mov
movaps
sub
jbe
repz
mov
adc
mov
push
lds
ficoms
fs
repz
jns
lcall
sbb
mov
xchg
cmp
sub
xchg
mov
rcrb
push
in
loopne
cmp
add
inc
in
pop
repz
dec
xor
xchg
and
push
and
and
das
cmp
lods
repz
mov
mov
add
add
add
in
sbb
jnp
das
ja
pop
lods
mov
bound
mov
push
testb
jo
ror
daa
je
jb
cwtl
cli
call
loop
cltd
scas
mov
scas
push
pop
mov
rcl
insl
xchg
cmp
fdivs
and
bound
push
inc
loope
xor
cmp
mulb
lret
out
and
jp
fidivrl
sub
stc
jno
xchg
adc
jno
mov
or
aad
and
push
pop
shrb
jno
push
ja
mov
cmp
xchg
sarl
sbb
xchg
rcl
ljmp
fcmovnbe
push
stc
pop
mov
pop
xor
shr
dec
pop
mov
out
mov
jbe
push
imul
add
add
adc
icebp
cmp
jle
or
in
jl
xchg
pop
adc
mov
push
add
add
add
daa
push
cld
push
std
jmp
dec
push
addr16
mov
add
add
add
cmp
xor
push
loop
xchg
or
pop
stos
mov
loop
lret
sbbl
or
add
out
sub
cmpsl
mov
xchg
cs
sub
push
xchg
mov
pop
lock
mov
and
jb
pop
stos
mov
stos
push
inc
jne
and
test
cmp
lcall
cmp
xchg
enter
xchg
cmp
fstpl
mov
outsb
or
cmp
imul
mov
ljmp
pop
pop
sbb
dec
out
xorl
mov
adc
mov
jg
xor
and
hlt
xchg
scas
inc
rcrl
leave
or
inc
mov
imul
aas
mov
test
lods
or
fistps
jns
xor
arpl
cmpsb
inc
or
cmp
add
add
add
sbb
dec
push
out
aad
push
loope
outsb
mov
add
add
add
mov
jg
jl
cmp
sbb
mov
dec
add
and
sbb
les
ret
mov
pop
adc
je
lahf
in
or
fnstenv
xchg
sbb
fidivl
sbb
pop
stc
and
les
sub
repz
mov
mov
aad
in
or
mov
jbe
stc
mov
lahf
and
jg
cmp
inc
lods
sbb
mov
divb
stos
sti
mov
shlb
lcall
aaa
dec
push
iret
or
and
bound
outsl
inc
adc
and
mov
fxch
lret
int
outsl
adc
popf
adc
ljmp
fisttps
dec
add
stos
and
shlb
mov
stc
jae
sub
add
stos
add
push
mov
or
je
nop
nop
inc
add
add
add
outsl
das
mov
mov
popf
fstpt
inc
mov
inc
dec
adc
ret
test
jb
into
xor
sub
das
pusha
arpl
add
test
xor
sub
jnp
movsb
add
xor
xor
mov
mov
scas
push
cwtl
push
adc
xchg
call
bound
enter
lcall
push
lods
pcmpgtb
movsb
jno
aad
and
movsl
lock
aad
xor
xor
jmp
sti
push
mov
push
test
addr16
cmp
fs
sub
dec
loopne
xchg
push
mov
xor
xor
aam
mov
enter
sub
test
and
xor
mov
jnp
mov
adc
divl
les
and
pop
pushf
sub
das
xchg
jns
jo
pop
jns
int3
jg
lret
int
sarl
add
add
jg
xchg
orl
pop
xchg
inc
add
add
add
repz
pop
bswap
pop
leave
inc
mov
push
out
cwtl
ljmp
xchg
out
popa
fcoml
inc
rcrb
cmc
cwtl
add
pop
pusha
sub
cmp
test
test
jge
insb
fsubs
adc
mov
in
mov
inc
lds
and
pop
sub
push
push
jno
push
movsb
test
add
xchg
ret
fiadds
scas
and
xor
mov
xchg
cwtl
xor
fimull
test
outsb
xchg
loop
orl
inc
pop
sub
jmp
mov
cmp
sahf
inc
call
cmc
notl
fs
cmp
rcrl
scas
sub
in
iret
cmpsl
loop
lret
scas
push
or
pop
or
movsb
out
popa
ret
sub
push
push
adc
and
ds
or
dec
pop
fcomps
adc
sbb
mov
shlb
jo
adc
fldt
add
add
push
dec
lret
jmp
imul
aaa
je
xor
add
add
imul
xchg
cmpsl
bswap
outsb
inc
ret
ljmp
imull
ljmp
lods
int
rol
iret
mov
push
cmp
loope
repz
sub
cmc
xlat
mov
xchg
rol
cmp
pop
mov
add
dec
mov
push
andl
or
push
lahf
cmp
adc
mov
push
and
sbb
cmp
loop
ss
sahf
lds
xor
das
movups
bound
lret
inc
add
fdivrl
mov
int
pop
xchg
adc
sub
xorb
adc
xchg
add
mov
loopne
iret
dec
mov
xor
pop
and
mov
and
and
out
cltd
lock
sti
inc
pop
fsubs
jae
mov
mov
movsb
das
shlb
stc
and
xorb
int3
jge
out
xchg
dec
dec
lds
or
xchg
jp
in
cs
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
cld
xor
add
int3
je
xor
repnz
lcall
adc
fidivrs
sbbl
push
ds
arpl
inc
out
mov
jnp
or
and
fs
scas
lcall
and
cmp
stc
mov
fadds
outsb
sti
ja
into
pop
pop
scas
fildl
or
ljmp
xor
pop
outsl
xchg
lods
mov
jno
and
not
pop
lret
jb
aaa
inc
or
pop
enter
mov
or
mov
push
add
incb
sub
leave
out
push
out
push
mov
jle
loope
cwtl
sub
pop
push
adc
sub
jp
sahf
jb
pop
adc
fldcw
xchg
pushf
jb
adc
lds
mov
sysret
add
shlb
out
mov
or
subl
insb
aaa
sbb
pop
or
ja
add
add
jns
xor
jg
orl
inc
add
add
add
fwait
pop
push
jno
cmc
adc
ja
cmc
inc
mov
mov
add
adc
pop
jns
inc
outsb
adc
sbb
jbe
stos
pop
sub
mov
mov
in
popf
dec
sub
jg
mov
cmpsb
fs
push
xchg
sbb
mov
mov
sti
ret
add
xchg
cmp
or
xor
decl
movsb
mov
or
rorl
mov
mov
insl
push
flds
cmpxchg
jns
fbld
jle
mov
jl
ds
push
lret
mov
pop
adc
cmp
mov
fs
cmc
sahf
push
mov
dec
cmp
fstpt
xchg
rol
ds
pop
pop
mov
fdivs
rclb
lock
clc
sub
lcall
xor
sub
adc
push
add
push
mov
push
sub
sbb
leave
js
ret
jg
decl
rol
sbb
push
jp
inc
add
add
add
mov
jne
mov
add
out
pop
mov
fld
imul
xchg
aas
mov
in
pop
xor
ljmp
cmp
sub
mov
stos
incl
lcall
inc
adc
cs
jmp
and
call
nop
dec
ret
in
std
clc
xor
in
or
push
out
jp
cmp
subl
call
int
shrl
and
or
fs
xchg
cmp
sub
addr16
mov
pop
test
sbb
hlt
adc
push
movsb
push
sbb
jge
mov
cmp
push
insb
jb
pusha
jno
xchg
and
jo
mov
pop
mov
mov
jge
js
lcall
dec
loopne
sub
push
imul
xchg
adc
mov
out
aad
xchg
and
inc
add
add
add
loop
cld
test
imul
clc
stos
rol
jge
sahf
pop
adc
fldl2t
pop
or
daa
inc
push
das
mov
cwtl
rcll
jno
dec
cwtl
scas
mov
xlat
lret
push
insb
adc
dec
mov
adc
sub
shr
mov
jg
iret
jnp
bnd
sub
imul
ss
fidivs
inc
xor
pop
sub
js
loopne
je
jg
call
sbbl
jae
stc
push
jl
pushf
outsl
pop
in
lcall
cmp
inc
lret
cmp
or
addr16
cwtl
add
and
mov
inc
int
ret
pop
insb
mov
pop
into
add
xchg
shrl
mov
cmc
mov
add
add
jno
cmpsb
je
push
idivb
leave
xchg
dec
aas
xchg
jae
and
mov
lahf
popf
sub
sbb
inc
icebp
hlt
gs
dec
adc
sets
add
fisubs
mov
test
sub
mov
gs
loope
xlat
pop
cmp
lods
lods
ret
xchg
enter
subb
mov
cmc
push
iret
jp
cmp
out
push
stc
outsl
push
pop
jge
push
ja
in
or
stos
mov
sub
sbb
cmc
imul
aaa
or
xchg
lret
ja
jbe
push
add
test
iret
scas
repz
movsb
sub
and
movsb
bound
les
cs
sbbb
leave
out
movsb
push
jl
push
xlat
mov
xchg
mov
ds
clc
push
jle
sub
pusha
insl
sbb
aas
rep
loope
sti
sbbb
dec
jge
shl
jmp
cld
lret
push
icebp
loop
rcrl
pop
fstl
icebp
push
insb
pop
repnz
push
xchg
call
shll
and
cs
scas
inc
add
aas
gs
pop
repnz
dec
add
add
add
jo
ja
fyl2xp1
mov
mov
xchg
mov
adc
fcoml
xorb
and
lea
xlat
mov
fs
push
inc
andl
adc
push
clc
int3
pop
or
xchg
repz
pop
and
xchg
je
inc
ds
movsb
dec
mov
gs
sub
ret
mov
sub
add
xor
jo
cmp
roll
or
mov
sbb
daa
push
xchg
mov
mov
imul
out
inc
xchg
cmp
jns
mov
inc
fstps
icebp
or
mov
adc
call
pop
xchg
stos
xor
xor
mov
insb
xchg
lds
outsl
push
jb
insl
iret
stos
inc
arpl
mov
fisttps
int
sti
mov
cmpsl
lods
gs
mov
push
pop
dec
in
add
add
add
out
fisttpll
lock
int3
sti
mov
add
add
add
out
aad
jnp
sub
loop
sbb
mov
adc
add
outsb
sbb
jns
adc
das
sub
insl
fisttpl
pop
push
pop
outsb
std
xchg
fstl
inc
lahf
pop
test
xchg
push
cmpsl
out
add
shll
inc
fdivl
cmp
add
dec
or
jge
shl
xor
add
stos
imull
sub
std
xor
or
insb
out
inc
bound
clc
and
mov
ss
fists
aam
vpmadcswd
fucomp
data16
cwtl
or
test
or
or
lock
fmuls
xchg
xor
ret
fwait
push
in
sbb
fstl
ss
pop
cld
enter
jnp
test
daa
aaa
das
mov
adc
mov
in
test
xor
cmp
mov
add
mov
ljmp
add
add
add
lds
mov
mov
xor
adc
xchg
sbb
cmp
adc
push
lock
and
fldl
jne
push
lcall
sbb
push
fisubrl
hlt
adc
pop
mov
ret
sub
jae
insb
pop
add
mov
outsl
pop
hlt
cmpsl
cmpsb
aaa
xor
fsubs
adc
sub
pop
mov
loop
pushf
dec
loop
mov
pop
cmp
adc
mov
rclb
callw
sbb
or
pop
out
add
cmc
push
or
sbb
ret
cmpsb
and
push
idiv
lret
add
push
inc
aam
pop
popa
lock
sarl
stos
movsl
inc
sub
sub
mov
mov
gs
xchg
inc
xchg
movsb
outsl
xor
cmp
dec
cmpsl
xchg
ds
xchg
sub
clc
push
inc
pop
pop
je
push
sbb
jmpw
fnstcw
jo
sahf
jb
adc
mov
add
add
ss
test
adc
cmovbe
lcall
and
pop
sub
lock
lods
mov
sahf
outsl
pop
push
stos
and
in
inc
adc
xor
mov
and
pop
add
loopne
mov
or
mov
lods
test
movsb
fcmove
xchg
adc
adc
adc
aam
add
pop
js
jp
dec
dec
cld
cmp
mov
les
push
rcrb
popf
int3
xchg
push
hlt
inc
xor
imul
lcall
and
ss
mov
je
jmp
mov
call
mov
cld
push
fcom
dec
int3
sbb
inc
in
mov
push
adc
mov
stc
pop
or
adc
inc
push
stc
leave
movsb
dec
dec
ret
mov
cmp
imul
out
mov
mov
fs
rorb
add
add
mov
cmp
mov
stc
call
adc
mov
popl
add
divb
push
dec
aas
cmc
xrelease
push
xchg
fsubp
mov
xchg
push
pusha
cmp
jle
outsl
mov
iret
aad
test
pop
add
adc
pop
in
js
and
int
fmull
xlat
sub
mov
dec
inc
nop
xchg
push
inc
andl
push
push
pop
stos
and
add
lods
xchg
mov
adc
dec
addr16
lods
mov
xchg
hlt
addr16
cli
iret
int3
fsubrs
jno
or
cmp
jp
pusha
jp,pn
or
sar
push
stos
sbb
shl
cwtl
dec
into
add
inc
clc
les
mov
insb
out
sbb
add
jecxz
pop
mov
call
mov
mov
add
clc
and
js
push
push
nop
inc
sbb
iret
pop
ds
js
add
dec
stc
mov
ljmp
les
add
add
sub
les
mov
pop
fsubs
jo
lds
pop
adc
jns
in
mov
fsub
dec
enter
fs
fnstsw
mov
push
popf
mov
sbbl
fistpll
jno
popa
loopne
lcall
iret
dec
sbb
pop
mov
addr16
ljmp
shll
scas
cmc
aas
adc
pop
lods
ljmp
shll
lret
leave
push
imul
mov
js
xor
out
daa
pop
sbb
pop
xor
test
rorb
aad
inc
loop
jmp
xchg
loope
pop
std
pop
inc
mov
mov
jecxz
and
add
or
stos
jbe
movsb
in
mov
inc
and
inc
ljmp
imul
fs
mov
xchg
jno
les
mov
mov
adc
xchg
loopne
pop
or
shlb
leave
pop
or
out
in
xor
add
xchg
cmp
jle
jg
cld
lcall
into
enter
add
add
pop
adc
sub
xchg
xor
stos
sahf
test
inc
dec
jo
pcmpeqw
sub
outsl
leave
jo
popf
mov
imul
adc
dec
pop
jb
jae
jmp
push
mov
pop
and
xchg
cs
and
mov
sbb
loopne
cmpsb
pop
repz
mov
push
pusha
push
xchg
outsl
nop
js
lods
lret
lcall
jne
enter
lret
clc
add
xor
add
icebp
cmp
pop
add
mov
jp
xchg
jecxz
pusha
int3
ret
call
push
insb
pop
sub
scas
adc
jl
mov
sub
test
and
loop
ficoml
push
pop
xchg
add
je
jecxz
mov
cltd
fbld
aam
cmp
test
cltd
and
xor
jle
push
xor
fstpt
mov
pop
leave
imul
add
add
xchg
mov
pop
xor
rol
int3
dec
add
add
add
mov
in
adc
test
shlb
movb
insb
pop
xchg
or
and
loopne
mov
jle
jne
cmp
xchg
cmp
cmp
imul
das
sbbb
lret
adc
sarl
popl
fs
test
nop
repnz
sbb
in
lds
xor
push
out
sub
mov
or
and
inc
mov
and
aad
or
aas
mov
sub
aad
in
jle
mov
int
cltd
lret
loopne
push
notl
xchg
pop
pop
fs
jl
cmp
fwait
andb
add
notb
mov
adc
aad
popf
pop
push
ret
arpl
call
scas
pop
cld
add
jl
out
mov
sub
jle
dec
or
rcrl
or
cmp
popa
std
push
shll
roll
cmpsl
das
lea
pop
cmpsl
inc
or
repz
or
mov
and
adc
rclb
add
add
mov
cmp
cmpsb
or
push
shlb
aam
test
xchg
xor
push
negl
jo
xchg
dec
and
xchg
pop
sbb
cli
mov
int
mov
jno
dec
leave
xorb
xchg
push
or
test
shlb
push
jne
rol
ret
shrb
sub
push
dec
mov
roll
lea
add
popf
pop
mov
outsl
cmp
imul
imul
ja
sub
jno
sub
lock
scas
pop
cld
rolb
cmpsb
xchg
jl
sub
pop
and
fcmovnb
push
aas
ss
jne
add
jns
lea
loopne
outsl
call
or
mov
push
or
pop
and
sbb
push
xor
test
adc
hlt
aad
insl
stos
or
add
pop
imul
push
out
insl
out
xchg
fsubrp
push
mov
add
add
sub
cmp
ret
or
mov
push
add
add
add
pop
fstps
int3
mov
mov
xchg
push
adc
lahf
pusha
adc
cmp
inc
aaa
mov
push
sub
mov
outsl
repz
inc
stc
cmp
add
or
cmp
jge
and
sub
fstl
movsb
adc
jle
mov
rorb
sti
ret
or
insl
xchg
or
jae
mov
jb
sbb
aam
ret
push
rclb
out
movsl
xor
movsb
lret
cmp
and
dec
loop
out
jl
popf
sarb
add
jl
and
jge
test
xchg
popa
jmp
repnz
xor
aas
das
bsf
lea
inc
push
mov
mov
jne
add
jp
int3
xchg
es
mov
into
loope
popl
imul
add
or
push
shll
out
pop
pop
pushf
push
mov
fcoms
add
add
popf
mov
adc
jmp
jge
mov
or
cmc
div
pop
mov
fdivrl
cltd
je
sbb
push
dec
xchg
out
divl
stc
rcr
mov
in
push
mov
adc
or
and
mov
stc
mov
mov
jne
jno
fcomps
push
push
mov
inc
add
mov
mov
clc
sbb
cld
adc
cs
lret
push
pop
cltd
cmpsl
stc
sub
in
pop
gs
into
enter
xchg
adc
clc
cmc
sbb
pop
push
pop
and
int
or
inc
popa
scas
sub
adc
jg
test
sahf
jp
cli
mov
pop
push
or
in
add
inc
repnz
lods
mov
jl
or
sbb
mov
enter
addr16
insl
sub
in
mov
imul
add
out
lcall
hlt
mov
xor
sbb
add
add
dec
or
aaa
push
jns
hlt
inc
push
loope
xchg
jmp
sbb
jmp
les
pop
inc
dec
ret
cmp
out
cmp
mov
jle
adcl
addr16
lds
jmp
ret
dec
adc
aam
jns
xchg
xchg
sbb
xchg
inc
mov
or
in
call
mov
outsl
cmp
push
sub
arpl
cmp
jmp
fs
idiv
jl
mov
mov
fs
into
rcr
ret
and
push
shrl
dec
mov
pop
xor
testb
cli
adc
jl
ret
lds
mov
inc
cwtl
out
cmp
xor
ret
xor
popf
jmp
inc
leave
mov
cmp
mov
outsl
xor
push
aas
sub
nop
addr16
sub
xchg
xchg
lret
mov
bound
imul
push
inc
push
loopne
add
add
add
out
loopne
cmp
dec
mov
sub
push
fnsave
cmpb
xor
call
or
adc
cmpsb
push
int
push
mov
mov
xchg
and
test
mov
cwtl
clc
xchg
lock
xchg
xor
dec
push
or
into
sub
jne
and
xor
test
out
pop
mov
in
in
dec
pusha
cmp
mov
stc
test
jbe
xchg
mov
or
mov
xchg
push
in
icebp
in
pop
adc
popf
pop
daa
mov
mov
jle
mov
mov
cmpsl
pop
lds
or
cltd
stos
xchg
pop
lahf
enter
jecxz
cwtl
lea
das
addr16
push
aad
iret
aad
pop
xchg
scas
sahf
jne
repnz
mov
or
ja
dec
mov
out
aad
xchg
cmp
dec
test
and
int3
or
xor
ja
adc
mov
outsb
in
cmp
mov
add
jae
fwait
cmp
stos
sarb
in
add
add
add
pop
jbe
jnp
test
dec
js
ja
pop
ficoms
ret
cld
mov
gs
cmp
mov
and
adc
hlt
fstpl
cli
scas
rcll
lcall
addr16
dec
push
or
dec
or
lcall
mov
dec
push
ds
in
jle
push
outsl
lret
std
cmpb
mov
xor
and
divl
xchg
lock
dec
jns
fdivs
mov
cs
pop
iret
pop
xchg
push
cmp
xor
jge
jae
cltd
sub
sbb
push
add
xor
int
test
mov
jp
and
out
cld
xor
mov
xchg
movsl
add
or
xor
push
cmc
push
adc
sub
loopne
push
into
les
test
adc
mov
stos
dec
xor
bnd
sbb
sti
cmp
pusha
pop
xor
add
add
clc
mov
and
hlt
loop
addr16
call
add
add
stc
dec
test
lock
add
repz
cmpsb
dec
xchg
popf
cmp
sbb
mov
std
fwait
movsl
cmp
pop
sub
sub
dec
pushf
repnz
into
fcmovne
sbb
xchg
into
leave
xlat
push
clc
cltd
insl
pop
data16
insl
sub
in
push
pop
sti
xchg
push
imulb
pushl
imul
cmp
xchg
ret
addl
mov
push
push
cmovnp
int
xchg
jne
mov
sti
push
test
loope
lock
xchg
cmp
js
test
push
loope
push
divb
push
cltd
sub
push
mov
cld
pusha
add
mov
xchg
mov
fnsave
aaa
xor
sub
dec
push
sub
xchg
adc
and
mov
push
bound
cli
fistps
dec
jnp
dec
test
add
sbbb
and
add
test
add
shr
mov
jbe
mov
add
add
out
and
rolb
jl
out
xchg
sahf
jg
lret
aam
inc
xor
sbbb
xchg
cli
adc
fisubrs
stos
cmpsb
addr16
lods
add
fs
bound
dec
inc
and
mov
in
lahf
lcall
subb
sub
bound
pop
mov
mov
shll
jne
or
lret
mov
push
filds
push
bound
inc
cmp
aam
mov
inc
je
jp
dec
roll
pusha
or
shll
jb
mov
push
out
jmp
lods
popf
xor
mov
mov
bound
lcall
out
mov
push
lcall
or
loopne
nop
ret
dec
lcall
adc
aas
push
lods
orl
out
fiadds
xchg
sahf
cmc
hlt
sarb
or
pop
cmp
rcl
xchg
lods
or
sbbb
test
or
fdivs
lea
stos
lock
add
add
add
mov
dec
and
cmovb
jp
pop
gs
sbb
pop
mov
cmp
dec
dec
dec
jns
pop
inc
cmp
jnp
mov
std
dec
fsubrl
jmp
pop
cmpsl
and
stc
sbb
das
cld
fadds
xchg
lret
mov
or
sbb
shlb
inc
fisubrs
lea
call
imul
xchg
adc
jae
sbb
movl
cmpsb
push
mov
jo
imul
cmp
push
sbb
sbb
arpl
mov
clc
pop
push
dec
fwait
nop
test
aam
js
and
add
jl
cmp
cmp
lock
xor
ljmp
icebp
mov
inc
adc
cmpsb
aas
and
sbb
icebp
lods
or
out
push
dec
mov
mov
lds
mov
dec
lahf
push
push
movsl
es
cmpsl
cmp
pop
pop
xchg
ror
ljmp
mov
and
das
cmp
pusha
dec
insl
pop
pop
hlt
pop
add
add
add
adc
int3
jmp
mov
and
jl
xchg
mov
mov
shrl
lahf
xor
fstpl
push
inc
js
xor
pop
jae
sub
pop
aad
arpl
or
rorb
repz
inc
lret
sbb
inc
cmp
call
cmp
int
sbb
cmc
sbbl
es
gs
jbe
jl
lea
and
ret
jno
jae
xor
adc
fisubrl
and
call
jo
bswap
push
push
xchg
das
jle
je
pop
mov
jo
push
loope
loope
sub
insl
int3
sub
inc
push
shll
jnp
imul
mulb
dec
cli
push
call
daa
jno
shrb
mov
pushf
addr16
inc
cmp
das
ret
cmpsl
cltd
lcall
cmpsb
dec
out
popf
data16
xor
movsl
js
mov
mov
add
add
movsb
jae
jnp
mov
ja
mov
push
jmp
add
add
shll
push
fistps
fwait
pop
inc
cltd
cmp
int
mov
lret
popf
push
ss
inc
test
jno
loopne
les
mov
inc
xor
mov
cmp
jp
notb
imul
pushf
inc
out
call
fcmovbe
call
scas
scas
mov
pusha
fdivr
fimuls
testl
cmp
cmpsl
or
ficomps
and
andb
pop
ljmp
bswap
inc
mov
stos
xchg
jbe
popa
stos
jmp
jp
aam
mov
aaa
lret
sbb
pop
out
ljmp
inc
mov
jl
push
and
scas
lret
dec
dec
js
setl
mov
adc
outsl
iret
lcall
repz
fs
jne
stc
inc
mov
sub
in
scas
imul
mov
sti
mul
ss
iret
adc
scas
pusha
fdivr
sub
in
add
xor
or
fbstp
scas
adc
lahf
xlat
out
cld
pop
mov
cld
pop
add
add
add
adc
add
add
sub
les
xchg
jnp
ljmp
cmp
fmuls
in
sub
mov
jbe
in
mov
jp
icebp
out
repnz
pop
mov
fbld
icebp
lds
mov
jno
and
fnstenv
xor
or
movsb
insb
jecxz
mov
fisubrl
push
lcall
push
dec
in
shrl
stc
fdivl
loop
mov
cmp
movsl
add
jmp
jb
imul
jb
ret
adc
mov
clc
mov
and
jno
mov
test
stos
les
outsl
jb
sub
adc
push
push
jnp
orb
sbb
cmp
ja
push
mov
aam
clc
adc
je
pop
mov
mov
sarl
and
imul
mov
inc
mov
add
add
mov
add
push
pop
add
add
add
pop
xchg
inc
imul
push
call
in
mov
add
xchg
push
jo
iret
push
pop
push
and
sbb
add
pop
mov
xor
and
xchg
fstl
lret
adc
imul
clc
cmp
aam
in
int3
inc
xor
xchg
lret
fisubs
pushf
loopne
pop
jb
adc
adc
jecxz
cmp
or
sbb
aad
pop
mov
std
arpl
pop
cmp
lahf
outsl
bnd
std
adc
std
popf
pusha
nop
ljmp
add
das
xchg
jne
insb
sub
dec
mov
and
iret
clc
int3
dec
pop
dec
pop
mov
jbe
jecxz
sub
pminub
pop
and
or
xlat
cmp
inc
dec
jbe
je
jmp
popa
icebp
inc
icebp
xchg
xor
xor
add
shll
imul
add
push
into
push
push
inc
lahf
mov
add
add
add
add
jb
push
sub
mov
lret
icebp
adc
fisubrl
orl
pop
lret
xchg
in
ss
gs
mov
jmp
sub
pop
sbb
loope
int3
je
pop
add
lcall
out
sub
and
je
movsl
xor
cmp
lds
iret
dec
test
repnz
add
imul
std
lods
out
push
shrb
lds
gs
repnz
jg
mov
and
out
aam
sub
fscale
lret
xor
jnp
jecxz
mov
in
dec
icebp
outsl
je
insb
dec
ftst
cwtl
cmc
push
xor
sub
stc
pop
mov
out
popa
adc
stos
pop
push
add
ret
add
cmp
loop
jno
cltd
adc
lret
push
loope
popf
fcmovnu
repz
dec
jb
xchg
cmpsb
mov
add
add
xchg
inc
shl
xlat
mov
jg
or
or
add
add
fwait
sar
stos
dec
rol
dec
inc
call
mov
cmpl
mov
add
and
pop
xchg
dec
shll
xchg
jle
jne
push
fwait
cmp
movsb
cmp
adc
mov
sbb
pop
xchg
sub
sarb
mov
movsb
mov
repnz
in
cs
mov
mov
xchg
cld
push
jp
pop
adc
mov
call
pop
incb
sbb
ds
xchg
roll
and
ret
dec
pop
idivl
shll
or
loope
lcall
fs
or
ljmp
sbb
and
mov
xchg
sub
rcrb
mov
mov
je
xchg
es
sarl
mov
add
jg
xor
xchg
loop
test
mov
mov
aas
in
nop
xchg
mov
jb
sti
in
ret
add
add
lahf
pop
cmpsl
jne
mov
or
inc
or
add
add
add
jns
clc
dec
fdivr
sub
rcll
jno
rcrb
lods
add
or
mov
sub
fcompl
les
ret
mov
and
xor
cmp
in
clc
add
mov
xchg
arpl
pop
push
sub
mov
ret
lock
jg
and
push
out
or
xchg
xor
movsl
mov
jb
les
adcl
cmp
xchg
pop
das
pop
dec
pop
push
mov
scas
shll
movsl
mov
xor
sub
sbb
jnp
sti
into
fwait
hlt
xchg
repz
mov
lea
sbb
int3
leave
or
lret
call
mov
or
xchg
xchg
push
or
cmp
xor
mov
jbe
test
mov
inc
adc
add
sahf
pop
testl
mov
add
add
add
push
mov
push
rorb
cmpsb
scas
mov
mov
dec
cli
add
gs
addb
in
sbb
push
gs
out
jnp
adc
stos
sub
lods
and
and
lret
inc
xor
ss
cmc
jmp
in
stc
int
out
mov
mov
popf
in
mov
add
in
sbb
aaa
mov
lcall
std
dec
adc
fidivs
aad
popf
js
scas
push
push
leave
mov
andb
push
sbb
or
sbb
xchg
add
pusha
daa
nop
dec
je
and
mov
nop
icebp
dec
test
jnp
add
outsb
pop
cmc
xor
cld
clc
jg
cld
xchg
sarb
mov
les
in
pop
xor
add
dec
aas
popf
orb
mov
and
orl
jle
inc
pop
mov
fstps
popa
sub
add
add
add
push
aaa
stc
cmp
jp
scas
ret
ljmp
xchg
insl
mov
aad
mov
xor
hlt
inc
insb
xchg
cmp
add
cmpsl
push
inc
sbb
pop
add
lds
out
mov
int3
jo
js
pop
clc
sbb
cmpsb
inc
rolb
push
mov
mov
jb
mov
js
dec
xor
mov
add
aaa
pop
pop
inc
aad
outsb
mov
push
xor
insb
pop
adc
lret
jge
mov
ds
cs
dec
in
jl
push
aaa
mov
mov
xor
dec
mov
mov
and
addb
lcall
lds
js
loope
pop
popa
insb
data16
inc
push
pop
cs
cmc
lods
jle
std
cmp
arpl
aas
leave
imul
lods
xchg
sbb
adc
fldl
mov
add
repnz
movsb
jle
arpl
sbbl
add
add
mov
in
movsb
push
cmp
sub
out
and
dec
xchg
fcmovu
mov
inc
and
mov
ljmp
adc
into
cmp
sub
aam
popa
inc
repz
aam
jae
cltd
fdivl
xchg
stos
dec
aas
into
add
sti
aaa
push
sti
lcall
loopne
ds
or
push
add
mov
and
or
stos
iret
adcl
cmp
mov
push
jo
dec
adc
mov
mov
or
out
loope
repnz
fucomp
addr16
lods
jp
ja
xor
mov
jg
imul
test
xchg
adc
idivb
or
leave
out
cmp
ds
mov
sbb
mov
iret
jl
test
jo
jecxz
or
inc
jecxz
add
stc
inc
aad
sbbl
sarb
sarl
add
stos
sub
stos
out
jmp
sub
insl
sub
add
add
add
push
sub
ret
push
test
lock
rorb
ljmp
das
into
mov
mov
test
clc
cmp
std
mov
or
mov
out
neg
imul
sub
fcoml
push
addl
insb
or
mov
dec
inc
mov
sbb
add
orps
jb
js
jle
add
insl
xor
in
cmp
cs
sub
mov
mov
movsl
ret
lds
pushl
or
xor
sub
hlt
sub
popf
jns
cmp
sbb
call
push
stos
fwait
insb
jle
in
sbb
mov
adc
test
addr16
mov
or
xchg
xchg
push
xchg
mov
ja
lock
cmp
adc
outsl
jnp
ret
xchg
out
pop
xor
mov
sub
inc
testl
add
mov
fnstenv
mov
add
add
add
stc
in
aad
adc
insb
lahf
lahf
jno
push
jns
shlb
ficompl
cmpb
imul
xchg
scas
enter
rorl
pop
mov
jns
mov
clc
lock
mov
lods
jae
and
push
ljmp
js
push
scas
insl
push
adc
das
fisttpl
add
cmpsl
jno
mov
dec
jns
pusha
daa
jl
je
adc
fstpl
inc
push
aad
adc
cmp
mov
rcl
jge
es
les
push
or
push
or
stos
add
daa
jb
mov
add
imul
mov
imul
push
cld
and
adc
mov
out
insb
xorl
sbb
stos
je
sbb
xchg
call
push
sub
ds
loop
ror
push
lahf
stc
push
ret
mov
adc
and
push
test
ss
add
add
cld
je
jbe
jns
sbb
xchg
cmp
add
add
add
add
mov
and
pop
cmp
mov
and
dec
push
cmp
dec
shr
mov
push
adc
jge
lret
fidivrl
sub
sub
adc
mov
clc
xor
push
push
jg
scas
cmc
sub
int3
xchg
movl
xor
aam
dec
ds
fistps
aam
and
or
int
jne
jge
aaa
insl
out
mov
pushf
inc
in
in
xor
out
sbb
out
xlat
or
mov
jl
mov
sbb
mov
aaa
inc
xchg
jno
xor
xchg
xchg
sbb
loopne
into
mov
dec
test
fisttps
pop
pcmpeqd
dec
push
fmuls
ret
mov
bound
stos
dec
mov
push
xor
mov
cmp
xchg
fnsave
push
pop
jp
inc
jb
cmc
cmp
js
imul
xor
add
add
cltd
jmp
fildl
or
ret
add
add
add
inc
pop
and
jo
mov
dec
xchg
adc
xor
inc
mov
sub
xor
mov
jle
mov
push
cwtl
aaa
jp
fisubrs
jae
mov
sbb
ljmp
xchg
mov
inc
fdivrl
mov
data16
push
ret
stos
sub
aaa
push
dec
adcl
mov
daa
std
push
loope
loop
sub
push
pop
gs
fsub
dec
lea
out
pop
aam
test
fsubrl
sarb
sahf
jno
mov
adc
fldl
adc
cmp
mov
lea
dec
fyl2xp1
sqrtps
in
outsl
orb
rorb
jmp
xlat
orl
sar
push
inc
out
in
out
jb
cmp
out
xor
inc
adc
lods
icebp
inc
or
xor
add
push
jg
dec
xchg
dec
hlt
out
jo
sub
add
add
add
mov
inc
insl
add
dec
push
pop
ljmp
add
sub
xor
cmc
jecxz
shrl
xchg
xchg
or
xor
test
jne
jne
xchg
mov
sbb
aas
jno
or
mov
mov
cmp
aad
fstpl
rcl
xchg
sahf
scas
adc
pop
push
and
adc
mov
movsl
sbbl
ja
mov
insl
xchg
dec
fwait
jge
sti
pop
stos
scas
push
sub
sbb
insb
xor
and
mov
adc
sbb
sub
cmp
sub
push
and
push
andl
sbb
pop
test
in
jae
inc
fwait
and
scas
xchg
xchg
pop
out
daa
in
iret
pop
mov
sub
xor
sub
sbbl
iret
or
comiss
arpl
mov
imul
jbe
int
dec
lret
jl
add
aam
pop
cmp
in
add
add
mov
fucomip
push
insb
xor
sbb
xor
add
add
add
std
pop
inc
ja
pop
push
sub
lods
xchg
push
pushf
popa
shl
add
mov
out
pop
sbb
inc
adc
roll
xchg
mov
test
xchg
add
and
xchg
ds
lea
cltd
pop
push
lret
xchg
push
lea
hlt
pusha
in
inc
inc
xor
pop
pushf
mov
cmpsl
add
jmp
bound
imul
ret
jl
jmp
insl
fstpt
cltd
dec
cmp
and
inc
push
jo
ficompl
bound
and
push
push
scas
enter
jecxz
sahf
inc
das
mov
pop
adc
dec
fimuls
push
fwait
hlt
jge
test
stc
add
jne
push
cmp
das
adc
loop
test
ss
jae
pop
sbb
inc
loopne
pop
push
inc
sbb
mov
add
dec
out
iret
jmp
aas
in
push
lretw
je
push
add
add
sahf
ffreep
or
fcomp
movsb
pop
lret
push
pop
rcrb
xchg
movsb
dec
jnp
insb
mov
movsl
mov
jmp
scas
add
jp
sbbb
cmc
lcall
aam
outsl
or
test
push
data16
fildll
scas
cld
pusha
les
and
add
fsubp
xor
fldcw
pop
sub
sbb
mov
in
fwait
or
xlat
xor
mov
test
pop
mov
mov
jg
add
loopne
in
and
mov
cmp
adc
pop
jne
sahf
mov
push
xchg
insl
outsl
mov
cmp
test
int3
cmp
or
xor
repz
xor
fcomp
xor
sahf
ja
mov
je
stos
cmpsb
add
imul
pop
scas
mov
xor
jle
lret
adc
ss
push
fisttpl
adc
add
popf
mov
fistl
add
add
std
cmpsb
pop
dec
sub
sub
push
mov
cmp
add
add
mov
into
push
push
shlb
std
xor
repz
outsb
sbb
fidivrl
or
add
push
sub
adc
insl
aas
adc
divb
add
mov
stos
pop
out
enter
ja
int3
fldenv
out
push
xchg
out
les
xchg
sti
jne
sub
les
xchg
cli
sqrtps
dec
in
jb
scas
daa
lret
mov
imul
shrl
aam
out
fsubp
jp
fstpl
xchg
push
out
int
inc
cwtl
sbb
sbb
sbb
mov
rorb
roll
push
mov
or
shrb
rorb
js
fs
dec
mov
mov
lods
and
adc
shr
add
mov
pushf
pop
jbe
adc
jb
repnz
jae
ret
xchg
cwtl
into
mul
xor
pop
pop
add
dec
xchg
in
lods
imul
neg
std
sub
dec
cmpsb
cmp
inc
cmp
add
add
add
push
ret
add
mov
inc
aaa
fwait
test
fcomps
int3
aaa
dec
js
ret
in
out
mov
pop
arpl
in
aas
xchg
xor
iret
fisttpll
loopne
lret
ja
fwait
cmpl
sub
xor
mov
xor
cmp
sub
push
ror
stos
or
cmp
aas
adcl
fnstsw
outsb
xchg
sbb
les
push
lret
add
ljmp
lret
mov
mov
add
push
pop
jle
in
mov
test
cmp
int
rolb
js
data16
pop
icebp
mov
jl
sti
push
jae
in
cmpsb
imul
addr16
shl
xor
rcll
repnz
or
xchg
in
or
scas
adc
out
mov
mov
mov
pop
insl
insl
int
je
testl
push
subb
in
push
mov
push
inc
lahf
bound
add
add
add
ret
jnp
sbb
mov
and
xchg
ljmp
fistpll
loope
inc
xlat
jg
jle
aad
outsb
mov
subl
cmpsb
and
jecxz
loope
cmpsl
add
test
movsl
sbb
xchg
push
in
add
mov
repnz
lds
sub
repz
inc
push
xchg
mov
and
cmp
fs
ja
loop
jae
imul
into
bswap
pop
aad
mov
inc
int
testl
test
ja
mov
lods
lods
decl
nop
shll
sahf
test
loope
push
sbb
fistps
sbb
or
fnop
addr16
iret
push
movl
je
mov
es
pop
cmp
outsb
jp
jl
and
outsb
jmp
movsb
add
lcall
out
sbb
stos
pop
inc
outsb
add
add
add
clc
pop
bound
fdivl
mov
or
out
addr16
pushl
mov
daa
shr
insb
push
movsl
jae
pop
adc
clc
xchg
sbb
sti
sahf
inc
ret
ret
inc
call
jl
and
and
xor
mov
inc
test
xchg
jo
movhps
jge
mov
push
adc
aad
popa
mov
and
cld
jno
stos
mov
jns
and
inc
mov
xor
sub
or
fwait
lods
adc
fwait
insb
push
mov
ficoms
lcall
mov
or
pushf
xor
xor
add
pop
int
push
sbb
stos
arpl
in
gs
daa
fisubrl
and
rclb
jo
mov
push
xchg
outsb
call
sbb
cs
dec
mov
add
sub
ja
mov
jle
pushf
dec
outsl
add
add
add
push
ljmp
aas
push
pop
inc
scas
faddl
enter
mov
mov
pop
xchg
add
mov
fucomip
push
inc
push
lcall
out
movsl
les
inc
or
rcrl
dec
frstor
insb
and
lods
es
and
sub
sbb
test
pop
xor
jle
xlat
outsb
xlat
int
mov
lret
sarl
sbb
outsl
push
call
ljmp
and
sbb
mov
in
sahf
mov
push
dec
add
lods
add
pop
loopne
in
sbb
mov
jns
and
adc
sbb
inc
xor
mov
cli
xchg
mov
outsb
or
out
push
das
inc
pop
inc
push
add
repz
in
out
adc
scas
loop
jne
push
or
mov
cmp
sbb
inc
pusha
arpl
int3
and
cwtl
shl
add
add
cmp
jnp
outsl
cmpsb
loopne
sbb
add
add
fimuls
sub
mov
pop
inc
xchg
sbb
inc
xlat
push
xor
mov
cltd
ja
fiadds
pushf
sbb
xlat
mov
and
shll
sbbb
jo
xor
fcmovu
inc
test
jb
or
std
and
and
in
push
andl
adc
setns
nop
sub
insl
cwtl
mov
adc
repz
popf
in
outsl
pop
sbb
rorl
ss
loop
and
sbb
shlb
xchg
rorb
icebp
push
in
jl
sub
fdivrs
aad
aad
cmpsb
xchg
ret
lahf
cmp
adc
loopne
out
daa
mov
dec
or
cld
dec
mov
xor
push
sub
jp
adc
and
adc
xchg
iret
pop
push
pop
and
pop
or
jmp
lods
xchg
or
adc
pop
xlat
cmp
ja
mov
sbb
roll
add
xchg
push
mov
cli
xchg
jle
push
je
sub
add
add
add
xor
rcl
sarb
sbb
bound
loop
mov
jecxz
mov
cmp
lea
or
xchg
inc
out
pop
stos
shll
cmc
repz
das
dec
inc
mov
pop
inc
dec
mov
mov
ja
rolb
in
adc
int3
or
popf
movsl
inc
add
sub
insb
xor
into
mov
addl
pop
dec
xor
cltd
aam
dec
sbb
xchg
cli
gs
mov
subl
and
mov
arpl
dec
cmp
push
pop
cmp
adc
fidivl
rolb
test
jl
test
and
cmpsb
pop
pop
dec
rcll
mov
pop
insb
mov
jb
negl
leave
cmp
pop
or
add
enter
mov
add
lock
stos
int
stos
mov
xchg
mov
aam
insl
in
xor
aam
test
add
fwait
jnp
aad
sbb
stos
icebp
push
jb
add
add
xor
mov
mov
adc
cld
fistpll
jp
cltd
mov
and
mov
cwtl
mov
cmpsl
jbe
sub
push
pusha
xchg
push
mov
in
insl
js
adc
bound
xor
fs
enter
sbb
dec
test
sti
lea
and
mov
testl
sub
stos
mov
xlat
frstor
lret
xlat
add
pushf
fldt
loopne
stos
in
mov
mov
jge
sub
adc
mov
inc
daa
outsb
mov
dec
xchg
sarb
imulb
lods
xorl
imul
js
push
aam
xor
inc
push
xchg
stc
cmp
aas
mov
stc
or
dec
ss
outsb
adc
in
xor
or
mov
xchg
fstl
mov
or
mov
lcall
nop
orl
repz
jmp
xchg
ja
aad
cmpsl
ljmp
add
add
std
mov
sub
push
repz
jae
add
add
and
mov
jg
leave
nop
cmp
jae
sub
lock
sti
test
adc
cmc
fwait
push
fld
sbb
add
out
mov
and
mov
inc
mov
mov
scas
std
call
je
sbb
jae
jp
out
push
fcoml
fsqrt
lods
and
loop
sbb
cwtl
pop
add
sub
fistpll
mov
cmc
push
jp
lret
pop
je
shr
inc
xchg
adc
sti
rcrl
lcall
sub
rorb
into
sub
fwait
mov
ret
lret
push
add
fidivl
mov
in
adc
cmp
repz
xchg
or
daa
dec
pop
stos
dec
mov
mov
ret
mov
shrb
xor
xlat
mov
sbb
sbb
and
mov
cmp
jae
fcoms
cmc
stc
test
add
adcl
xchg
fisttps
mov
pop
je
add
add
daa
movzwl
aad
bound
fucomp
movsl
adc
xor
pop
in
mov
mov
test
rol
lahf
mov
jae
mov
jge
out
inc
data16
js
lahf
roll
lfs
loope,pt
lods
stos
cmp
fisttpl
or
fmull
sub
dec
add
and
notb
scas
mov
lret
std
stc
push
out
mov
roll
sub
outsb
mov
push
test
mov
adc
sar
mov
ljmp
frstor
xor
inc
jmp
movsl
xchg
pusha
push
rcr
sti
xchg
lret
sub
insb
inc
lea
xor
jne
and
cmp
inc
repnz
lahf
jge
push
cmp
or
ret
mov
cmp
push
insl
rcl
ret
rclb
mov
jno
decl
in
inc
cmp
shl
mov
jo
ds
mov
add
add
bound
sub
sbb
jne
add
add
icebp
jo
xorb
and
mov
fs
inc
dec
jmp
sti
push
xchg
test
fnsave
sbb
shrl
testw
jns
aad
lods
pop
aas
inc
add
pop
lea
and
adc
outsl
ja
jg
aas
out
lock
push
jge
cmpsl
bound
mov
add
jb
or
ja
add
mov
sbb
aas
mov
pop
ret
push
inc
aad
cld
mov
mov
jl
push
movzwl
mov
cmp
xchg
cmp
call
shrl
mov
mov
shr
scas
imul
ja
and
hlt
adcl
fistps
fisubrs
inc
jle
pop
and
in
xlat
addr16
push
mov
test
stos
vpacksswb
lahf
or
lock
push
push
cmp
jns
divl
in
sub
fs
add
add
les
and
jnp
mov
or
enter
shll
popf
sti
xor
pop
mov
mov
adc
gs
test
push
out
movsl
jl
pop
mov
mov
and
shlb
insl
mov
std
pop
mov
and
sarb
ficomps
js
cmp
jge
aad
mov
jmp
dec
pusha
adc
adc
mov
push
adc
dec
outsb
cltd
xchg
mov
adc
dec
outsl
pushf
dec
mov
sub
sti
xor
or
popa
int3
nop
movsl
mov
fidivs
and
fimuls
dec
xchg
into
xor
dec
dec
jle
or
stos
dec
loop
xor
lods
das
pop
icebp
dec
mov
repnz
lods
jae
lahf
sub
or
fs
xchg
popa
dec
and
add
arpl
or
rcrb
mov
add
add
add
fisubs
mov
mov
icebp
fildll
add
add
add
call
mov
xchg
push
cltd
and
outsl
clc
in
and
add
push
gs
popa
outsb
in
and
cltd
sbb
mov
sub
or
les
aas
push
aad
adc
cmpsl
mov
dec
popa
mov
test
jmp
pop
xchg
add
inc
aad
dec
dec
addr16
dec
insb
aad
cmpl
dec
xchg
xlat
or
mov
jmp
ljmp
scas
pop
lods
inc
and
aaa
lods
sbb
push
sbb
int
or
sbb
cmpsl
stos
add
and
inc
mov
jp
bound
test
mov
outsb
push
push
mov
cmpsb
fwait
adc
in
jns
cvtpi2ps
adc
mov
push
sub
addr16
jmp
imul
and
addr16
pop
cmp
in
test
jle
xchg
lcall
in
xchg
out
add
add
mov
outsl
jne
ljmp
or
insb
js
add
add
pop
test
rol
or
xchg
ret
jo
popf
lock
and
mov
cmp
or
pop
mov
ret
jecxz
ja
test
jg
das
mov
insl
dec
lcall
mov
jnp
ret
lret
adc
scas
lds
jmp
stos
push
push
push
movsb
mov
cltd
jp
orb
out
jl
add
aad
cwtl
enter
xchg
jl
pop
call
adc
or
into
cli
and
mov
push
in
pop
mov
mov
mov
out
or
dec
mov
push
pop
leave
push
insl
jl
push
jno
cwtl
jge
incb
mov
inc
lahf
clc
stc
jno
xchg
cld
addb
add
push
xor
cltd
mov
aaa
sbb
mov
xchg
or
and
mov
pop
inc
testb
add
orb
ljmp
jl
cli
pop
cli
pop
jo
add
add
add
inc
les
clc
cmp
jmp
dec
xor
into
shlb
sub
adc
jne
jle
cmc
xor
aas
xor
lods
inc
shlb
call
dec
jmp
xlat
cs
adc
cmpsb
pop
inc
cmpsb
sbb
cmp
iret
sti
dec
cwtl
bound
and
dec
lcall
or
xchg
cmc
jns
fwait
loope
int3
dec
cmp
flds
loopne
fsubs
dec
in
inc
ret
jne
and
out
jb
rolb
jo
mov
or
inc
cmc
hlt
icebp
inc
lock
stos
lods
mov
mov
out
pop
xlat
aaa
out
jns
jno
das
xchg
int3
and
cmp
xchg
jle
enter
pop
pop
mov
cmp
inc
out
rcll
lcall
jb
filds
adc
adc
cmpsl
xor
mov
outsb
pop
push
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
cwtl
ret
jecxz
add
cmp
mov
mov
lcall
jb
fimuls
test
clc
add
cmp
jb
pop
fiaddl
stos
mov
mov
cmp
in
into
int
mov
sarb
sbb
imull
pop
popa
sbb
mov
xor
jg
push
adc
cwtl
out
and
sbb
adc
jle
lods
cmp
out
jmp
add
cwtl
sbb
sbb
or
negb
mov
fdivp
pop
push
push
push
adc
fists
jle
pushf
push
push
sar
xchg
loope
adc
sarl
xchg
std
scas
add
mulb
shr
hlt
mov
ds
clc
dec
xorl
xchg
pop
push
or
lret
jns
pop
orb
xlat
lea
loope
pop
xchg
jae
sub
lea
and
sbb
add
add
cmpsb
push
sbb
or
js
add
add
add
sbb
push
out
pop
push
outsl
inc
add
pop
push
sbbb
mov
cmp
scas
fnsave
mov
mov
push
ficoml
test
push
sbb
test
sub
fidivs
mov
mov
mov
jns
in
lret
mov
cltd
leave
shrb
mov
loop
pop
jo
or
je
mov
mov
pop
movsb
adc
pop
xor
rorb
jmp
jne
popf
cmp
loop
xchg
inc
div
pop
rorb
adc
lods
jp
idiv
js
xchg
xlat
lds
and
movsl
push
js
mov
dec
mov
fcoml
pushf
fnstsw
rorl
xchg
cmp
jnp
out
sbb
mov
and
xor
mov
js
cld
test
jmp
out
rcll
das
andl
xor
cli
mov
jl
das
add
jl
add
add
inc
or
add
pop
stos
out
push
cmp
rorl
pop
mov
dec
mov
js
pusha
imul
setbe
adc
adc
adc
cmp
and
jns
je
dec
and
icebp
test
fcoml
pop
push
push
jo
fst
fcmovu
out
xchg
and
ljmp
xchg
rcrl
aas
adc
jmp
mov
push
pop
push
push
test
add
lds
and
add
mov
sahf
rolb
cltd
pop
lahf
dec
sub
movsl
mov
dec
stos
jp
in
stos
fs
jb
loope
loop
cmp
loopne
out
insb
mov
inc
jg
sub
lret
push
xor
aad
rcll
and
xchg
inc
xor
pop
movsl
int3
leave
enter
jbe
gs
ret
jne
jp
call
cmp
jmp
and
pushf
pop
imul
aad
xchg
mov
mov
add
add
test
lcall
and
or
add
add
movsb
add
mov
outsb
pop
lea
sub
fstpt
mov
test
data16
xor
sbb
stc
fidivl
enter
loopne
les
pop
imull
sub
and
daa
fidivrs
lds
mov
push
bound
dec
addr16
ss
adcb
mov
inc
fwait
mov
fs
xor
dec
add
xor
push
outsl
pop
sub
cwtl
enter
repnz
mov
fstpl
js
pop
rol
cmp
jnp,pt
push
sub
sub
jns
dec
xor
sub
xor
outsb
ljmp
clc
xchg
lock
mov
popa
cld
inc
ljmp
dec
xorl
cmp
shll
sbb
lahf
sub
mov
mov
and
addr16
add
add
testb
daa
mov
pop
test
add
add
adc
mov
in
jmp
mov
pop
repz
js
xchg
cmc
adc
pop
ljmp
fsubrl
mov
jl
mov
shrb
mov
cld
xor
loop
and
cmp
out
aam
sub
add
mov
fbstp
push
jl
in
popf
fisttpll
inc
cmp
mov
cmpsb
movd
vaddsubps
test
loop
xchg
imul
in
or
add
mov
xchg
mov
dec
jecxz
outsb
lret
into
stc
aaa
xchg
mov
in
jne
iret
pop
std
ja
adc
and
xlat
pop
mov
sbb
push
pusha
pop
adc
push
xor
cmpsb
sbb
jg
mov
fisubl
subl
mov
dec
sub
mov
cmc
mov
test
pushl
sbb
popf
int
scas
lcall
adc
sbb
in
mov
add
add
fdiv
dec
dec
jl
test
lret
pop
adc
mov
icebp
in
pop
pop
mov
jl
mov
jmp
sbbl
mov
adc
cld
sub
das
dec
push
insb
dec
outsl
test
lds
pop
es
in
mov
mov
xchg
xor
shufps
repz
mov
pusha
mov
jns
sbb
push
test
push
cs
insl
push
xor
bound
gs
jmp
inc
add
mov
mov
aam
jecxz
mov
mov
test
jbe
mov
cmp
test
inc
in
out
push
sbb
jle
xor
cmc
lock
dec
insb
popa
mov
cltd
jo
mov
fwait
cmpl
test
fadds
stos
jno
test
jnp
repz
int3
jle
ljmp
jl
cs
idiv
jne
iret
test
push
ret
add
add
add
call
cmp
pusha
scas
fcmove
leave
sbb
shrb
insl
xchg
mov
dec
sbb
inc
into
insb
jg
xchg
or
push
rcrb
cli
pop
fucomp
jns
sub
mov
pop
in
sub
mov
cmp
popa
fucom
dec
mov
and
inc
mov
out
outsb
sbb
xchg
jb
mov
adc
cmp
sub
mov
xchg
adc
mov
adc
xor
sub
cwtl
inc
sbbl
adc
inc
daa
aaa
cmpl
fcmovnb
dec
sbb
inc
xor
test
pop
repz
out
mov
ljmp
xchg
push
jge
inc
js
dec
or
lock
jmp
add
and
mov
adc
adc
into
cmp
shll
les
fwait
push
xor
adc
jb
sbb
mov
or
add
add
pushl
sub
cs
enter
add
add
add
and
scas
jmp
and
ret
loope
add
ljmp
out
scas
adc
popa
cmp
jg
inc
decl
sahf
xor
add
insb
xor
and
sub
orl
xchg
pusha
cmp
jb
mov
push
mov
sti
in
xchg
ret
xchg
inc
imul
jmp
aaa
dec
cmp
cltd
pushf
jmp
adc
pop
loope
data16
add
into
push
cmc
aaa
dec
mov
gs
daa
push
nop
stos
pop
ficomps
shl
int3
arpl
loop
inc
test
mov
pop
and
clc
pop
repnz
push
jmp
sbb
jo
ss
mov
mov
addr16
insb
pusha
add
das
fstp
xchg
or
xchg
lahf
and
mov
arpl
sub
sub
pop
xchg
loop
push
pop
test
out
fiadds
pop
adc
cmc
test
push
mov
jge
std
sti
iret
ss
push
jno
outsb
out
cmp
add
xor
pushf
inc
leave
xchg
mov
in
les
in
lcall
sub
jns
divb
scas
popf
loop
sub
pop
add
lods
mov
xor
jns
test
das
aas
xchg
popl
jp
xchg
repz
xchg
cld
push
adc
and
mov
cmp
mov
xor
mov
push
adc
xchg
jmp
add
popl
clc
pop
fnstsw
gs
fmulp
push
xor
xchg
inc
adc
inc
or
lret
les
xor
adc
mov
ja
xchg
pop
xchg
pop
mov
cmc
cwtl
sbb
mov
jl
xchg
and
and
sti
inc
mov
cmp
dec
in
das
add
clc
cmpsl
repz
jne
mov
lock
lret
add
xchg
jb
fimuls
dec
aaa
imul
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
pop
pop
cwtl
addl
add
add
sbb
pusha
cmp
fistl
pop
jne
inc
iret
mov
fistl
imul
xor
cwtl
and
add
cmp
scas
push
and
mov
sub
pushf
xchg
cs
push
mov
enter
pop
rcll
cltd
rcl
mov
jmp
or
nop
sbbb
mov
mov
test
jmp
push
mov
pop
sbb
lret
scas
fisttpl
dec
add
mov
pop
ror
mov
cs
rcrb
pop
and
pop
clc
mov
xchg
mov
pushl
mov
sub
cmp
imul
stc
xchg
push
cmc
xchg
aam
repz
lods
test
dec
jbe
sbb
inc
aad
xchg
jns
and
fisubs
in
sahf
sahf
mov
push
or
mov
sub
loop
insl
xchg
push
jb
negb
add
mov
mov
and
add
add
add
dec
mov
inc
mov
inc
scas
sub
popa
jmp
xchg
push
ja
loope
aad
insl
add
out
push
lock
xorl
int
mov
outsl
sub
push
xor
aad
mov
loopne
cmp
xchg
stc
xor
fisubl
mov
sbb
add
test
jge
cmp
inc
cli
inc
mov
inc
xchg
cmp
inc
inc
cmpsl
push
jp
cwtl
adc
sub
push
cmc
and
and
test
mov
divb
adc
push
add
ret
mov
cld
test
lahf
inc
mov
std
js
cmp
add
enter
arpl
in
ret
xor
and
rolb
or
inc
pop
stos
xor
mov
pop
inc
in
xchg
push
add
push
call
test
bound
out
sub
imul
mov
add
and
out
ljmp
lock
xchg
sarb
add
add
add
inc
pop
loope
add
int
jge
cld
insl
mov
sub
and
sbb
ljmp
cmp
int
jmp
test
cmpsl
shlb
mov
pop
cwtl
add
ljmp
jmp
xorb
push
mov
lds
fmulp
push
inc
pushf
inc
out
test
jae
lret
and
inc
rcll
dec
or
xor
cmpb
js
push
xor
cmpsl
inc
add
adc
jnp
loope
in
inc
mov
ret
sbb
pop
jns
shlb
sar
mov
dec
shrb
nop
mov
ja
lret
jo
pop
add
jecxz
sub
jle
push
pop
pop
imul
imul
fdivs
xchg
jb
mov
out
and
lcall
vmovhps
xchg
or
je
xor
jmp
pushfw
mov
pop
imul
push
jnp
sbb
push
xor
xchg
add
add
mov
lods
xchg
xlat
mov
pushf
jg
jge
flds
lds
dec
mov
repnz
dec
inc
jb
test
pop
lea
sbb
cmc
inc
push
cmpsl
mov
fisttpll
das
pop
rorl
enter
rclb
and
adc
fidivl
fadd
sub
xchg
cld
lods
lds
or
mov
lods
hlt
xor
jo
in
mov
push
dec
mov
cmp
or
test
pop
insb
and
adc
mov
orb
mov
inc
addr16
pop
int3
jge
leave
jge
outsb
out
pop
mov
inc
enter
movsl
cli
pushf
dec
sbb
cmp
in
arpl
xor
mov
sbb
cltd
push
sar
hlt
push
sti
aad
push
lret
sbb
jle
adc
cmp
mov
nop
and
out
xchg
arpl
popa
xchg
gs
mov
mov
push
aas
or
mov
lods
jecxz
lea
add
add
add
ror
enter
cli
test
mov
jne
push
adc
ja
scas
mov
pop
insb
das
adc
scas
fidivrl
or
or
sbb
mov
sbb
cwtl
adc
pop
or
jmp
mov
jns
repz
imul
lds
mov
mov
inc
push
outsb
outsl
lret
outsb
leave
xchg
in
adcl
jge
adc
xchg
loope
push
pop
arpl
add
ja
xor
pop
mov
push
xchg
xchg
inc
shll
sbb
mov
inc
jl
mov
xor
xor
in
mov
lock
xchg
ss
inc
repnz
frstor
in
and
inc
fistpll
mov
mov
push
adc
mov
out
jge
jecxz
xchg
xor
in
mov
xor
and
insb
fidivl
bound
mov
add
add
pop
imul
or
push
xchg
fidivrl
mov
sbb
pop
add
mov
lgs
cmp
xor
lahf
mov
cmpsl
test
jne
mov
cltd
outsb
dec
jge
cwtl
data16
xchg
stos
je
xor
xchg
mov
push
xchg
ret
rcll
xlat
scas
jmp
adc
jb
fcoml
xchg
es
iret
test
pop
dec
repz
cmp
insb
sarb
and
mov
or
repnz
popf
cmp
mov
movsb
nop
push
or
jp
popa
leave
and
inc
inc
xor
add
sub
dec
imull
stos
jno
sbb
sahf
xchg
ret
insb
dec
jp
movsl
push
xchg
stos
ja
nop
push
scas
adc
push
loopne
xor
xchg
pop
and
aam
aaa
popf
mov
and
scas
push
dec
xchg
xor
scas
cmp
pop
loop
inc
insl
pop
dec
adc
addb
add
cmp
mov
jns
push
shll
add
xor
pop
and
jecxz
inc
lahf
into
mov
insb
in
iret
add
jo
aas
xchg
and
adc
rorl
pushf
je
out
xor
int3
cmp
pushf
inc
repz
add
inc
sbb
push
push
lock
sbbb
pmullw
ficomps
negl
jb
loop
loopne,pn
and
adcb
push
push
outsl
jle
mov
aaa
pop
and
dec
jnp
sbb
inc
imul
vpshuflw
iret
mov
and
xchg
ljmp
and
popa
lcall
out
and
scas
stc
dec
movsb
sti
pop
les
or
or
xchg
cmp
icebp
xor
scas
punpcklwd
ret
outsl
sbb
mov
data16
sub
aas
cltd
sub
push
mov
jp
dec
jmp
cmc
push
lcall
js
cmp
pushf
mov
cwtl
into
add
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
jmp
mov
add
add
repz
arpl
inc
rorl
in
out
cld
fcmovu
int
iret
test
mov
xchg
adc
fmul
push
jo
cwtl
daa
mov
int3
into
or
add
mov
ss
repnz
mov
or
and
add
xchg
fistpl
push
and
pop
mov
or
ret
sbb
addr16
cld
jno
jb
aad
xchg
cmp
add
xor
adcl
loopne
or
mov
mov
jns
xchg
push
imull
js
mov
mov
fcmovnb
or
out
lret
fwait
mov
fisttps
int
shl
add
out
sbb
scas
ja
mov
inc
push
inc
push
sti
sti
sub
stc
decb
js
xor
sub
fldenv
dec
scas
inc
jmp
cmpsb
not
movsl
jp
js
pusha
loop
aad
mov
or
jb
cmp
dec
clc
lret
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
mov
loopne
inc
sbb
inc
test
outsl
lret
sub
push
xor
xor
out
pop
and
mov
out
pusha
jmp
incb
mov
fildll
xor
lds
loopne
mov
stos
mov
es
or
sbb
fbld
sub
adc
mov
xor
imul
cs
mov
adc
cld
mov
dec
pop
cs
les
roll
sub
imul
sbb
mov
dec
rorb
cmp
out
daa
es
and
fwait
pushf
push
push
cmp
jle
or
mov
xchg
les
pop
lods
bound
negl
dec
push
dec
and
add
scas
pminub
bound
xor
sub
or
dec
inc
cmp
add
mov
icebp
pop
adc
mov
add
add
cmpsb
pop
shlb
push
lds
pop
cmp
and
sbb
in
dec
xchg
adc
and
pop
jnp
jae
mov
in
jmp
push
hlt
stc
mov
push
fisubl
das
pop
stos
mov
push
into
xor
add
cmp
adc
outsl
mov
add
sub
daa
cmp
clc
jge
jnp
cmp
inc
fucomi
push
pop
xchg
leave
rcr
xchg
jno
imul
jnp
shlb
jo
sti
sbb
idivl
hlt
fmuls
ss
ljmp
add
idivl
cs
and
add
lret
out
cmp
xchg
xor
sub
bound
push
ret
dec
or
leave
loope
inc
jns
mov
sub
movsl
mov
into
ss
pop
inc
fldenv
mov
xchg
test
adc
jnp
insb
sti
or
inc
or
test
fcomps
add
andb
add
add
add
pmaxub
xchg
cmp
cmpsl
fadd
adc
or
mov
sub
sub
jne
dec
inc
and
data16
dec
inc
dec
ja
dec
in
lock
movq
mov
push
es
inc
fwait
mov
fsubrl
xor
pop
aaa
push
xor
mov
jp
imull
xchg
in
xchg
mov
nop
pop
loop
mov
cmpsl
mov
add
lcall
call
mov
in
add
in
jg
inc
push
fisttpl
testl
mov
sbb
idivl
imulb
clc
jae
aam
xchg
in
cmp
test
cmc
xor
add
out
lods
xchg
jle
movb
adcb
mov
js
mov
add
jbe
movsl
dec
pop
jae,pn
fnstenv
add
pop
addb
flds
add
add
ljmp
dec
mov
ss
les
add
mov
push
psubusw
lcall
in
add
mov
inc
es
bound
mov
push
cmp
adc
aam
xchg
test
push
xchg
sub
lret
sti
pusha
or
jge
test
dec
call
xor
sbb
pop
mov
pop
shll
or
sar
mov
and
aad
jno
pop
xor
stc
xor
repz
dec
inc
mov
mov
jmp
cwtl
sub
pop
mov
mov
pop
sub
sub
xchg
std
outsl
nop
jo
jl
inc
inc
ljmp
push
jmp
icebp
hlt
xor
push
push
cwtl
inc
outsb
push
aam
jne
cltd
cltd
into
xorl
and
dec
sahf
in
inc
xor
popf
pop
sbb
inc
add
lret
stos
mov
ja
push
and
jecxz
pop
aaa
shlb
cmc
div
testl
push
enter
add
add
inc
je
xor
notl
aad
pop
jnp
push
lret
inc
pop
cwtl
das
xor
inc
mov
in
push
pop
add
fldcw
jbe
xor
pop
lods
xor
in
xchg
or
xor
test
stos
pushf
sbb
sub
divl
mov
cmp
lret
xor
out
in
leave
lret
mov
or
lcall
pushf
mull
clc
lods
adc
mov
loopne
xor
dec
pop
cmp
adcl
std
dec
or
insl
push
mov
ret
rcrl
push
push
aaa
or
jl
push
inc
decb
mov
pop
movsl
jnp
mov
jecxz
fnstcw
fcomps
and
inc
lahf
pop
fsubs
nop
aaa
push
add
push
jle
subl
jae
push
roll
faddl
in
or
sbb
scas
loope
push
cld
lock
cmpps
fwait
sbb
pop
push
nop
push
sahf
rcr
pop
adcb
pop
jbe
push
nop
add
add
add
imul
mov
aam
inc
hlt
stos
in
dec
cmpsb
in
dec
xchg
idivb
dec
mov
jmp
push
ja
pop
iret
and
mov
mov
push
lods
fs
dec
hlt
or
mov
test
jmp
mov
test
mov
pop
popf
stos
or
addl
pop
mov
cmc
or
dec
popf
lret
add
pop
sbbb
sahf
pop
pop
mov
dec
pop
loope
mov
lahf
sti
mov
sbb
pop
push
subb
mov
popa
cs
stos
fiadds
jno
es
jecxz
lret
icebp
test
test
or
mov
xchg
pushf
nop
mov
adc
fcoml
not
scas
inc
cltd
xchg
int3
mov
out
int
xlat
sub
mov
add
inc
mov
inc
outsl
iret
pop
push
ficoml
pusha
jbe
orl
add
shll
cmpsb
jcxz
fimull
rclb
add
lret
sub
insb
ljmp
cltd
push
ljmp
sub
fxch
mov
daa
dec
cmp
fisubs
mov
fcompl
js
cli
clc
jbe
mov
scas
mov
shlb
enter
push
out
jge
mov
outsl
add
call
mov
sbb
or
popa
test
jmp
nop
icebp
cltd
xor
and
jp
cwtl
inc
cmp
mov
push
rcrb
dec
push
test
lea
dec
add
push
subb
mov
xor
lcall
cmp
xor
cmp
lret
pop
mov
cmp
fucomip
mov
jg
push
aaa
sbb
pop
dec
xchg
lea
mov
xchg
addr16
out
jb
mov
or
mov
add
outsl
mov
mov
int
sbb
or
add
add
clc
jnp
jg
in
cli
enter
push
mov
repz
add
add
add
loopne
mov
outsl
mov
inc
lock
xchg
popa
in
pop
mov
mov
jbe
push
xchg
mov
mov
fistpll
xchg
sub
arpl
push
inc
pop
dec
shll
lds
push
jns
lret
in
inc
push
mov
pop
inc
hlt
pop
sti
jo
inc
loop
jecxz
mov
jp
mov
mov
pop
subb
ljmp
jl
insb
int3
sub
pop
hlt
jo,pn
pop
aaa
stc
mul
enter
fcmove
xchg
and
lods
dec
mov
mov
cs
sbb
nop
mulb
sbb
orb
outsb
jne
adc
and
pop
ljmp
and
popa
insl
push
repnz
test
mov
stc
out
sub
pop
pop
jl
in
jge
inc
jl
popf
or
pusha
push
mov
add
add
lods
faddl
fbstp
cld
gs
mov
fcoms
add
movsl
insl
and
mov
pop
or
pop
dec
sbb
push
jno
out
or
pop
xor
mov
sbb
xchg
cmp
pusha
add
pop
xchg
jae
push
add
mov
int3
inc
addr16
stc
int
adc
fcomip
aaa
adc
jnp
pop
fisubs
push
dec
xor
push
push
mov
lea
mov
rorb
outsl
fdivs
je
loope
push
adc
fistl
adc
fcomps
mov
fiaddl
pop
xlat
rorl
out
mov
pusha
jno
stc
test
jl
mov
aam
dec
pop
popa
dec
out
and
aas
jae
push
mov
mov
mov
xchg
add
ret
mov
mov
jp
mov
popa
ljmp
mov
lahf
repnz
xchg
xchg
lock
mov
cmp
pushf
sbb
mov
sub
mov
bts
adc
imul
add
add
jl
sar
std
jle
pop
popf
scas
in
subb
xchg
add
add
add
sti
mov
int
fnsave
xor
stc
shl
nop
jb
adcl
fildl
push
arpl
jno
mov
adc
pop
fsubs
adc
lea
mov
addr16
shrb
or
mov
xor
aad
push
jb
and
cmp
inc
inc
test
das
pop
cmp
pop
ss
ss
pop
cld
mov
fstpl
xchg
push
adc
pop
incb
inc
mov
xlat
jnp
or
test
lcall
pop
daa
loopne
inc
stc
push
push
insl
loope
bound
sahf
push
add
aam
cld
fimuls
push
or
fists
gs
pop
leave
ret
inc
xlat
aas
pop
mov
fisttpl
mov
outsb
fistps
mov
fnstcw
add
add
cwtl
or
stos
xchg
cmp
in
sbb
fbstp
add
add
pop
adc
and
dec
sbb
or
xchg
jge
adc
outsb
and
dec
outsb
outsb
insl
or
in
adc
cmpsl
push
mov
add
xor
adc
cmpsb
nop
cmp
ds
mov
jbe
jle
nop
pop
leave
sarl
push
out
and
inc
push
inc
mov
mov
xchg
sbb
mov
inc
stc
mov
aam
push
iret
cmp
cmp
jp
and
jno
jno
or
cmp
test
mov
adc
cmp
sub
add
addr16
rcr
pop
pop
ja
push
xor
mov
cli
fisubs
pop
push
ret
and
sbb
xor
inc
loope
cmp
jnp
or
int
or
mov
pop
xchg
jp
adc
fimuls
jge
dec
imul
lods
mov
sbb
pop
and
mov
add
add
outsl
sti
mov
mov
mov
fsubl
in
add
add
add
inc
shl
aam
hlt
add
ja
or
iret
inc
add
push
or
insl
movsl
cmovns
cmp
mov
xchg
jecxz
repz
dec
pop
decb
jp
mov
mov
cmp
gs
lods
into
sbb
in
adc
pop
mov
pusha
jns
gs
mov
mov
inc
add
and
lret
inc
push
sub
mov
inc
adc
ret
xor
fsubrl
mov
aaa
adc
xor
mov
mov
push
sti
popf
and
dec
or
push
enter
sub
pop
sbb
out
and
adc
pop
gs
mov
aas
cmpsb
add
xor
push
imul
mov
xchg
scas
ret
dec
je
lahf
fnstenv
loop
or
insb
pop
and
xchg
xchg
inc
adc
call
jns
out
lcall
lock
add
push
and
xlat
aas
dec
sbb
or
call
add
add
sbb
roll
mov
aaa
xchg
outsl
les
mov
jnp
pop
aas
stos
mov
fwait
mov
mov
jmp
in
or
xchg
mov
int3
sub
out
mull
iret
dec
cmp
insl
lahf
pop
xchg
push
dec
and
dec
cmp
cli
cmp
imul
scas
mov
jmp
mov
test
mov
pusha
xlat
add
push
pop
xchg
test
loopne
mov
ljmp
xchg
jmp
rorb
jns
lock
add
cltd
cmpsb
mov
lret
mov
test
rclb
inc
lods
mov
shrb
enter
das
mov
mov
int
int
mulb
cmp
lods
pop
xor
cld
mov
in
add
inc
mov
sub
and
movsl
popa
mov
mov
repnz
or
sub
iret
movsl
imul
outsl
vmwrite
int
cwtl
add
add
add
xor
mov
mov
lahf
cs
mov
jns
repz
pop
sub
push
xchg
addb
sub
cmpsb
sbb
dec
loope
lods
xchg
xchg
lahf
stos
js
xchg
in
pop
fnstcw
sub
pop
xchg
push
pop
push
sub
divb
mov
mov
test
and
mov
push
xchg
mov
push
mov
xchg
xor
jnp
xchg
nop
insb
dec
cli
xchg
fisubrl
jb
movsb
jbe
dec
jmp
sub
loope
rorl
push
ja
sub
fwait
pop
mov
subl
rcrl
pop
stos
or
pop
dec
push
mov
arpl
fiadds
rcrl
mov
cmp
sbb
jne
scas
enter
dec
repnz
xor
jg
cmp
add
ljmp
jle
push
cmp
pop
in
mov
mov
xorb
push
cmp
cmp
adc
sbbl
popl
add
lock
add
add
add
out
mov
aam
lret
loope
popf
cmpsl
jae
call
pop
jae
cmp
or
mov
or
adc
inc
mov
push
adc
cmc
cmp
pop
xchg
repnz
rcl
fwait
pop
sub
in
push
test
stos
pop
lods
adc
xlat
scas
lock
aam
mov
mull
lods
out
ret
and
pop
stos
cmp
scas
mov
mov
lcall
outsl
scas
ds
jge
cmpsl
fdivs
push
pusha
jle
mov
shrb
sbb
fistpl
mov
fstpl
push
jle
push
xor
imul
mov
mov
jmp
inc
cmpl
sbb
imul
iret
push
mov
mov
fbstp
sarl
sbb
out
lea
js
popa
jge
cmpsl
mov
jl
push
inc
xor
mov
insb
cmp
test
xor
add
add
imul
movsb
and
outsb
in
mov
lcall
xlat
cmpb
pop
push
insl
cld
or
cmp
cwtl
addr16
dec
add
push
push
jmp
fsubrp
jge
shrb
cvtps2pd
and
test
and
cmpsl
int3
ds
or
pop
cmp
push
ljmp
push
test
xchg
ret
std
pop
jle
mov
mov
sub
mov
or
shlb
mov
in
mov
popa
mov
outsl
lret
sar
decl
lds
ja
fs
cmp
sbb
mov
inc
hlt
in
sbb
cmp
jg
and
cmp
and
loope
push
hlt
and
scas
clc
mov
inc
push
xor
push
mov
lods
clc
cli
icebp
test
mov
and
xchg
ds
das
inc
adc
les
fidivrl
loop
iret
jo
mov
jge
jg
ljmp
in
lahf
mov
sbb
add
add
pop
repz
cli
lcall
add
xchg
jmp
mov
popf
push
insb
stos
jae
mov
rorb
aaa
clc
call
cmp
xchg
ret
int3
jmp
js
rcr
pop
pushf
mov
das
cli
testb
xchg
test
mov
es
bound
mov
sub
ja
mov
cmp
mov
mov
add
jmp
stos
jbe
jne
xchg
adc
pop
jp
add
loope
in
add
push
jo
jne
insl
outsb
xchg
cmp
add
push
and
sub
ret
or
pop
mov
aad
push
and
mov
jmp
dec
scas
push
mov
mov
daa
mov
add
decb
xor
inc
loopne
sbb
clc
ss
insb
les
add
mov
cltd
sub
out
inc
sub
or
insl
sbb
add
add
cltd
sbbl
cmp
orl
addr16
rorb
es
fwait
sbb
cld
int
test
mov
das
les
mov
fwait
out
cmpsl
mov
lods
xor
cmc
sbb
dec
jge
jno
call
cmpsb
idivl
out
in
pop
fxch
xchg
repz
mov
push
mov
fdivrl
add
rolb
hlt
orl
enter
jl,pt
lret
jg
movsl
stos
int
jnp
cltd
repz
dec
push
and
je
xchg
cmp
pop
paddb
cwtl
xor
sarb
adc
dec
mov
decl
mov
pop
outsb
in
xchg
decb
ss
jae
push
lds
outsb
jo
in
pop
mov
pop
out
scas
sbb
xlat
lods
cs
add
das
int
cmpsl
test
jmp
mov
push
hlt
jmp
imul
loop
test
mov
cld
mov
add
add
lcall
jbe
sub
sub
mov
inc
mov
addr16
xor
fildll
adc
or
and
imul
lods
stc
inc
dec
push
mov
sahf
fdivl
xor
and
lods
loop
out
cld
cmp
cmpsb
pushf
fbstp
xchg
int
mov
loope
cli
cmpsl
cmp
loop
sub
adc
mov
push
iret
lods
jnp
ss
mov
pop
push
dec
ss
xchg
jbe
roll
int
stc
movsb
js
fidivs
dec
mov
jne
inc
lds
test
mov
or
aas
notb
or
shrl
dec
pop
pushl
inc
xor
in
sub
leave
push
outsl
add
jecxz
adcb
loope
sub
and
pop
xor
shr
mov
pushf
inc
push
insl
arpl
aaa
rclb
xchg
sub
add
or
lcall
add
add
loope
movsb
mov
int3
orb
int3
hlt
in
cmp
scas
jno
or
gs
adcb
gs
adcl
sbb
xor
arpl
pop
fdivr
sub
xlat
or
add
aam
adc
pushl
in
das
and
mov
pop
addb
fldenv
data16
sbb
push
xor
inc
mov
mov
andb
mov
ret
push
cmpsl
jnp
addb
jne
cmp
mov
add
insl
pop
ficomps
das
ljmp
pop
and
call
sub
sahf
je
jns
lea
andb
sbb
call
gs
lea
mov
in
push
add
xlat
jp
jl
das
int3
das
jns
jo
lds
outsb
jae
xchg
and
cwtl
xor
icebp
js
fs
lods
test
pop
cmp
inc
mov
popf
ja
ja
xchg
xor
movsb
mov
mov
inc
inc
add
mov
add
scas
and
stc
repnz
xor
shlb
cmp
popf
xor
ss
out
stos
pop
mov
mov
fyl2x
sub
stos
cmpsb
lods
int
dec
popa
xor
ret
stos
aad
pop
sub
xlat
and
repz
pop
adc
daa
cmp
cmp
or
jo
and
and
mov
lcall
sub
imul
adc
and
mov
jo
ret
pop
dec
out
jns
pop
xchg
addb
xchg
movsb
mov
imull
ljmp
mov
pusha
adc
jl
mov
loope
lds
mov
leave
pusha
sahf
mov
pusha
pop
dec
and
jle
imul
jmp
dec
test
faddp
je
rorl
xor
add
lret
cwtl
add
test
sti
and
inc
pop
sbb
adc
jns
push
jp
jl
jb
mov
outsb
mov
out
xchg
cmp
add
add
std
inc
mov
push
aam
mov
add
jp
roll
cmc
icebp
inc
test
ds
iret
jmp
pop
movsl
out
mov
mov
inc
shll
inc
mov
jg
int
cmp
lret
jno
fwait
xchg
notl
gs
push
adc
pop
xor
fstl
outsl
in
outsb
andb
jmp
sbb
lret
test
xchg
movsb
xor
test
popf
arpl
rclb
sbb
cmp
or
fstpl
push
cmpsl
mov
mov
popa
out
or
or
roll
addr16
cmpsl
xor
mov
divb
lock
stos
mov
in
addr16
test
fimull
xchg
xchg
push
cmp
aam
ret
fdivl
negb
aas
aad
xchg
rol
pop
loope
push
jmp
cltd
cmp
outsl
js
mov
xchg
loope
imul
loopne
push
inc
fdivl
push
dec
mov
adc
add
dec
imul
inc
sti
sbb
mov
insb
test
jns
inc
push
out
mov
push
jmp
lods
pop
sub
lret
and
int
insb
insl
or
aaa
shrb
mov
mov
xchg
xchg
cmp
sahf
lds
and
cmp
gs
adc
add
movsb
mov
inc
loop
sbb
mov
sbb
dec
arpl
pop
nop
loop
rcrb
ficompl
leave
insb
mov
adc
notb
test
outsb
loopne
shl
loopne
fwait
hlt
call
push
dec
rcrb
cwtl
add
pushf
jne
jp
mov
shrl
xor
push
adc
xchg
pop
xorl
pop
stos
cmpsb
data16
je
push
and
cmp
and
bound
mul
loop
dec
imul
sbb
loope
repz
cmp
adc
out
loop
dec
adc
adc
mov
sbb
ret
adc
add
add
add
ficoml
mov
push
fcmovne
and
mov
mov
jmp
adc
and
adcb
pop
add
stc
cmpsb
mov
push
or
lahf
aas
aad
push
jg
aaa
dec
int3
std
scas
movsb
xchg
add
shll
out
aam
imul
inc
cmpsb
xchg
xchg
sbb
adc
inc
imul
adc
sub
xchg
enter
js
fsub
outsl
push
push
ss
pop
dec
repz
dec
sbb
ja
lcall
pop
pop
fdivrs
aaa
repnz
sub
pop
or
dec
push
pop
lcall
xlat
popa
mov
jmp
aad
ret
sbb
push
sub
add
mov
add
inc
sahf
mov
sbb
aas
cld
sbb
pop
jne
sar
and
das
fbld
pop
repz
pop
xlat
or
mov
test
add
add
stos
hlt
jmp
cmp
jbe
push
jo
in
movsb
add
add
add
call
xchg
lret
sbb
ds
pop
aas
inc
mov
test
mov
inc
imul
aad
stos
pop
ret
sbb
into
mov
push
pop
int
adc
sbb
scas
pop
test
push
inc
jns
cs
fsubrs
test
sub
dec
mov
sbb
pop
pushf
mov
cmp
xchg
and
mov
push
cmp
xor
cmp
nop
mov
mov
jge
inc
popa
pop
loop
add
cmp
icebp
scas
rcl
mov
adc
cwtl
mov
cmp
test
mov
dec
or
in
movsb
subl
sub
mov
mov
adc
and
ds
add
mov
dec
loope
test
adc
sub
in
inc
pop
add
out
xlat
out
jg
in
xor
mov
add
add
add
pop
lahf
shll
xchg
or
bound
jbe
out
cmp
jge
cmpl
and
mov
ret
cmp
scas
aam
adc
repz
xchg
add
push
daa
vmwrite
out
inc
inc
dec
sarl
ja
cmp
ds
inc
in
cmpsb
cmp
cli
pusha
pop
mov
imul
and
sbb
lods
rolb
aam
cmp
pop
dec
mov
cwtl
iret
sbb
stc
mov
pop
mov
sti
sarb
mov
sarl
imul
fld1
out
das
sub
cwtl
mov
cmpsl
mov
in
lea
arpl
punpckhdq
test
xchg
leave
mov
and
and
movsl
idivb
pushf
mov
mov
mov
incb
add
imul
add
add
mov
inc
fwait
lds
jo
fldl2e
test
cmpsb
add
add
add
je
xchg
inc
mov
mov
push
push
int3
lret
adc
out
jbe
fwait
movsb
sub
or
inc
mov
enter
dec
mov
out
adc
lods
outsb
or
jl
xorb
test
ds
cltd
mov
xor
sbb
ret
filds
xchg
mov
into
aad
xor
sbb
lods
aam
fdivs
int
das
xchg
cmp
cmpsl
xchg
inc
adc
xor
movsl
arpl
xchg
insb
hlt
arpl
aam
mov
pop
jp
ret
loope
sub
mov
sub
fstp
lds
stc
loop
mov
les
xorl
sbb
lods
pop
dec
repz
call
xorb
jge
mov
or
cltd
lcall
es
mov
adcl
and
fisubl
les
pop
popf
in
push
lcall
std
inc
jne
addl
inc
mov
add
add
vcvtss2si
test
jbe
jl
xor
dec
ljmp
sub
add
jbe
mov
add
fcmovu
repz
idivl
mov
inc
dec
jmp
push
or
sub
push
sub
hlt
std
fstpt
xchg
dec
jmp
insl
cltd
xor
popf
and
lods
aas
inc
mov
popf
push
shrl
out
xchg
adc
xor
adcb
movsb
nop
jmp
jnp
adc
sub
push
arpl
xchg
or
int3
or
test
ret
add
mov
add
jnp
dec
lea
icebp
and
dec
aam
jge
sub
aas
adc
shll
lcall
in
in
shrb
iret
inc
in
bound
lds
mov
dec
pushf
push
out
xchg
ds
xchg
mov
pop
mul
cli
stc
mov
in
out
inc
add
dec
mov
jno
add
add
mov
push
sti
jmp
push
mov
testb
xor
add
add
xor
cmp
bound
mov
lret
push
js
sbbl
sbb
pop
and
lods
xchg
mov
mov
jecxz
or
mov
sti
xchg
sbb
fcmovnb
lods
pop
into
adc
xchg
in
test
addb
mov
or
ds
push
aaa
out
push
xor
pop
xchg
cmp
and
cwtl
stc
xchg
cmc
ffree
imul
inc
add
add
mov
cmp
cmp
std
xlat
ss
dec
add
mov
xchg
dec
test
lret
ja
roll
std
pop
mov
movsl
fstpl
lret
jp
adc
mov
add
mov
push
or
lds
out
mov
pop
fcomps
fld
pop
cwtl
jge
and
xchg
mov
incb
and
sti
fists
dec
addb
add
mov
jecxz
lock
inc
add
add
add
add
add
xchg
xor
outsb
and
mov
movsl
bound
mov
pop
inc
test
pop
icebp
add
add
sub
shll
test
jle
jae
jae
add
bound
ficoms
mov
enter
sub
andb
bound
shlb
and
addr16
jmp
inc
mov
daa
sbb
in
xor
ret
pop
and
inc
cmp
lods
cwtl
mov
push
lahf
jmp
std
popa
js
mov
xor
mov
pop
or
add
xlat
insl
mov
and
test
adc
mov
jecxz
add
enter
ds
cmpl
inc
jae
jl
inc
xor
dec
lret
scas
rcll
and
aam
sbb
and
mov
xor
push
int3
mov
cld
mov
leave
aas
mov
loop
stos
add
add
add
mov
add
mov
sub
mov
push
push
push
push
and
pusha
testl
or
mov
xor
xchg
xchg
and
das
ljmp
sarb
movsb
or
lret
jbe
loope
mov
ficomps
lcall
sub
in
addr16
shlb
add
mov
xchg
movsl
in
aas
fst
pop
arpl
mov
jnp
fsubs
cs
cmpsb
cmc
mov
into
add
int
xchg
addr16
int
xchg
pop
pushf
es
mov
mov
pushf
ljmp
mov
shl
jne
push
imul
out
sbb
cli
adc
insb
ss
mov
das
sub
inc
subb
mov
fistl
sbb
roll
inc
into
insl
mov
xor
dec
sub
aas
in
inc
mov
dec
das
pop
out
cmc
mov
mov
add
add
add
pop
push
shll
and
aam
mov
divl
lods
xchg
aaa
sub
sbb
dec
mov
icebp
cmp
inc
outsl
xchg
out
scas
mov
mov
jnp
sahf
lahf
nop
push
sbbl
sbb
mov
jbe
sti
pop
pop
cmpsb
std
jle
jmp
mov
inc
sbb
fistpll
pop
dec
imul
ficomps
xchg
add
or
xchg
dec
test
pop
aam
fsubs
mov
or
test
pop
cltd
pop
push
dec
out
test
insb
mov
dec
inc
dec
xchg
ja
sbb
fldl
dec
sub
popf
inc
or
pushf
in
outsb
pop
xchg
xor
mov
in
push
push
xchg
push
xor
xorl
cwtl
jns
arpl
into
loop
repz
cvtps2pi
mov
jne
cwtl
mov
and
or
push
xchg
xor
je
js
cltd
xchg
mov
fnsave
fucomip
std
dec
std
pop
lcall
xchg
pop
push
mov
xor
cmp
add
inc
adc
gs
jmp
xchg
xchg
rcr
mov
sub
push
push
hlt
arpl
insb
out
push
js
jp
and
cmp
rclb
je
mov
test
xchg
add
ret
cld
lds
scas
mov
lahf
mov
push
xchg
test
push
inc
pop
out
shl
loopne
fwait
ss
and
ljmp
mov
mov
nop
imul
icebp
xchg
js
sbb
jnp
popf
and
stos
xor
push
call
lret
cld
scas
aaa
test
pop
loopne
in
dec
fistps
and
push
loope
push
jbe
lock
scas
cli
iret
jnp
xor
add
sti
sub
test
jo
inc
int
cmc
mov
add
data16
mov
loop
in
lock
xchg
into
mov
add
fidivs
loop
ljmp
push
into
fisttps
add
add
sti
sahf
jmp
cwtl
icebp
mov
or
lods
mov
xor
lret
test
pop
pop
sbb
stc
jbe
lock
fs
fldenv
and
jp
adc
insb
jo
mov
or
insb
adc
pusha
loope
mov
fsubrp
or
mov
rclb
loope
cwtl
sbb
in
orl
lea
lea
jmp
ja
jmp
and
loope
jb
loopne
and
adcb
cwtl
inc
lea
sub
int3
out
lds
int3
pop
es
or
dec
sbb
movsb
lret
cmc
mov
aad
rolb
fwait
clc
les
movsl
outsb
dec
ret
lret
push
mov
adc
lret
mov
mov
dec
scas
mov
inc
and
cmpsl
ja
addb
xor
adc
mov
jno
sub
xlat
repz
push
xchg
jg
jmp
std
mov
xor
inc
scas
add
add
add
arpl
mov
imul
mov
imul
sarl
gs
xor
dec
xchg
push
sub
dec
sub
test
xor
popa
mov
out
cwtl
enter
add
jp
aam
lods
lods
cmpsl
and
jae
scas
add
lods
sti
fbld
iret
test
std
loopne
js
mov
and
sbb
gs
push
mov
js
cli
push
dec
xchg
xchg
fcmovnu
stc
popa
jo
adc
mov
dec
lcall
shlb
fnstenv
or
pushf
orl
out
lcall
in
int3
add
sti
mov
inc
mov
cmova
in
dec
scas
fistpl
sbb
mov
sahf
xchg
push
add
pop
sbb
sbb
test
jle
mov
shll
nop
mov
ljmp
jo
push
divb
inc
mov
pushf
rolb
add
add
push
push
dec
xor
jbe
outsb
jmp
loop
imul
add
pop
jns
aas
xchg
cmp
pusha
setno
dec
xchg
fisubrs
mov
cli
add
pushf
fwait
pop
cmp
outsb
push
sbb
mov
jnp
mov
ss
push
movsb
test
mov
jb
leave
mov
imul
movsl
test
rcll
lahf
dec
js
pop
push
mulb
pop
xor
sub
scas
lret
gs
dec
dec
les
pop
int3
and
mov
or
cli
push
jb
imul
roll
aaa
dec
mov
testb
ficoms
fwait
sub
leave
cltd
filds
stos
add
stos
dec
dec
movsl
xchg
stos
out
imul
idivb
ja
out
sbbb
xchg
movsl
inc
sub
mov
dec
adc
lock
and
stos
mov
or
mov
push
xor
jmp
repnz
add
push
pop
xor
cmp
inc
call
lock
mov
add
add
aam
cltd
hlt
in
out
mov
cmpsb
inc
sub
fwait
pop
push
xchg
jmp
inc
push
daa
push
pop
sub
in
jb
xor
inc
pop
int3
push
enter
mov
add
jno
je
push
mov
enter
sub
inc
and
lret
dec
push
lret
fsubrs
cltd
jnp
shlb
or
or
inc
mov
xor
unpcklps
mov
jle
out
jne
sbb
inc
ds
mov
cld
dec
testb
rorl
add
je
xchg
adc
and
xor
es
xchg
stc
adc
stos
jmp
cmp
adc
imul
arpl
insb
pop
movsl
add
adc
outsl
sbbb
icebp
or
add
cmpsl
loope
or
push
push
cmp
loope
xchg
or
cs
add
es
les
mov
arpl
test
add
add
hlt
sub
gs
adc
xchg
cmc
push
in
mov
leave
add
sub
inc
cmpb
jmp
pop
inc
cwtl
lods
pusha
push
je
in
add
mov
repz
data16
push
jo
jo
leave
outsl
add
add
and
cmpsb
push
ja
cmp
xchg
add
ss
movsl
push
lods
ljmp
mov
adc
movsl
andb
jno
and
fst
rolb
mov
bnd
clc
jmp
xchg
adc
cmpsl
adc
movsb
ja
insb
out
lea
xchg
or
add
sbbl
lahf
xchg
shlb
icebp
mov
in
pushf
aas
sbb
into
fisttps
cmp
xor
jb
neg
sub
add
cltd
pop
ja
ss
jbe
imul
repnz
sub
sahf
pop
dec
or
sbb
mov
inc
roll
add
add
clc
pop
stc
out
push
pop
bound
and
add
add
add
push
mov
pop
not
es
aad
aas
movsl
push
adc
mov
xchg
movsb
insl
cmp
adc
jo
mov
xorl
shlb
insb
fisubrl
push
dec
ljmp
adc
hlt
inc
add
and
icebp
cmp
insb
push
outsl
pop
cmp
mov
jmp
mov
mov
mov
lods
cli
test
imul
pop
push
add
mov
ds
push
pushf
fs
js
bswap
lea
mov
push
lret
fdivrl
fs
sahf
stos
pop
push
jecxz
idivb
xor
daa
ret
imul
sti
pop
and
mov
insl
mov
jge
or
imul
jg
scas
sbb
pop
test
push
into
das
aam
test
pop
cmp
mov
adc
dec
sbb
sbb
hlt
xchg
sub
fcos
lds
cli
lcall
push
push
mov
add
add
pop
popf
mov
mov
int
out
xor
movsl
repnz
sbb
or
xchg
movsb
aam
and
bound
mov
stc
popa
shr
insl
mov
rorl
jb
dec
ljmp
mov
dec
out
ret
dec
rorl
xchg
cs
popa
incb
xchg
mov
add
cmp
adc
push
mov
mov
push
das
jg
mov
or
push
xor
out
push
test
nop
arpl
imul
mov
popa
std
pop
outsl
out
ror
mull
ljmp
mov
andb
lret
push
data16
add
xchg
int3
insl
or
mov
pop
and
mov
sahf
mov
pop
mov
push
push
sbbl
dec
ret
mov
lcall
push
cwtl
cli
addr16
add
jne
mov
int3
insb
lret
push
lods
pop
mov
add
add
sub
adc
pmaxsw
mov
clc
sbb
lcall
aam
pop
iret
lods
daa
or
mov
shll
in
mov
insl
pop
sbb
push
test
or
or
push
mov
scas
push
adc
dec
pop
mov
pop
mov
and
les
repz
bound
jne
and
mov
into
mov
inc
inc
push
mov
repz
es
lea
xor
cmc
pop
idivb
dec
lahf
int
push
clc
test
sbb
fs
pop
adc
lea
jo
dec
cli
xor
jae
xlat
dec
aaa
icebp
sbb
mov
push
cmp
mov
mov
mov
and
push
es
addr16
icebp
mov
jae
subl
add
dec
pop
pop
sbbl
fstp
rorl
mov
add
add
add
ret
and
sbb
enter
cmpsb
clc
fs
fstps
int
pop
aaa
or
xlat
sbb
and
mov
dec
mov
mov
fsubrl
mov
enter
pop
jp
or
adc
shlb
je
aaa
push
mov
scas
addb
ds
or
mov
dec
mov
jne,pt
adc
pop
xchg
adc
es
or
jnp,pt
mov
jne
push
inc
mov
out
mov
dec
lcall
sti
mov
and
push
clc
fsubs
into
cmpsl
mull
cmpl
imul
fs
int
cmpl
fmulp
cmpsl
xlat
mov
insl
daa
int3
dec
push
pop
adc
insl
imul
nop
stos
test
xchg
lds
push
inc
test
loopne
pushf
lds
sahf
dec
shl
repnz
pop
mov
dec
pop
inc
repnz
movsl
mov
add
in
mov
jecxz
out
mov
seta
pusha
mov
add
add
int
loopne
mov
cmp
cld
and
mov
xorb
sbb
jge
fisttpll
inc
inc
jp
pop
pop
mov
icebp
bound
add
xorl
mov
inc
or
mov
mov
xor
mov
insb
mov
loop
and
loop
fsubr
js
ret
stos
orb
xchg
xchg
pop
push
mov
cmpsb
jno
cmp
imul
pop
ss
lea
ror
out
pop
sbb
jp
cmp
test
jge
xchg
xlat
push
jle
or
aaa
dec
iret
aas
mov
pop
ret
stos
outsl
push
adc
ljmp
jp
test
in
xlat
call
fimuls
push
outsl
addr16
fisubs
cltd
aam
lods
pop
push
cld
enter
jno
sub
sub
pop
xchg
inc
je
and
mov
lcall
aam
dec
popf
loope
add
repz
sub
sbb
call
add
lea
add
add
std
test
jg
into
lret
orl
add
add
popf
and
pop
mov
adc
lahf
pop
inc
xchg
adc
popf
jb
into
loop
xchg
mov
jnp
das
pushf
mov
xor
jae
xchg
insl
aaa
ss
or
int
test
shlb
xchg
mov
and
dec
movsl
cmp
push
insb
inc
mov
mov
and
popf
leave
sbb
jns
mov
iret
add
imul
adcl
xchg
push
inc
pusha
adc
jge
sbb
scas
sbb
mov
imul
les
lods
mov
dec
pusha
and
jmp
mov
pop
mov
pop
cld
mov
mov
adc
mov
jnp
call
xchg
xchg
fidivl
cwtl
jp
arpl
pop
and
push
inc
adc
loopne
mov
push
stos
cmp
rolb
test
push
das
sub
mov
bound
lock
in
lcall
jae
dec
mov
or
push
add
add
in
test
sahf
sbb
inc
mov
add
sti
push
ja
fcmovb
add
in
mov
xchg
ss
and
in
sub
dec
cld
push
arpl
dec
lods
sarl
aam
scas
popf
jb
shll
in
cmp
aaa
adcl
enter
push
sbb
pop
mov
cmp
sbb
xorl
add
enter
xor
in
and
sub
jecxz
addr16
iret
addr16
and
push
sub
in
pop
les
fwait
scas
or
mov
add
int
aas
mov
out
ret
in
mov
ja
adc
xchg
xchg
xchg
pushf
je
mov
in
insb
inc
lea
jmp
inc
lret
filds
fisubrl
lods
in
scas
push
jp
cld
cmc
cli
out
aam
and
roll
sub
das
pop
adc
add
and
jl
mov
add
dec
or
jg
dec
arpl
dec
insb
mov
add
jo
push
inc
mov
dec
cltd
popf
call
std
cmp
nop
std
sbb
cmp
pushf
push
sub
in
sub
xchg
insl
sub
pop
ret
ret
js
sbb
push
jnp
leave
popa
add
loope
add
jnp
cmpl
lcall
jle
jmp
add
decb
jge
jecxz
sbb
jnp
mov
and
daa
add
push
push
inc
fisubrs
pop
dec
mov
aam
imul
stos
adc
mov
mov
popa
fdivrl
xchg
sti
xchg
mov
aam
mov
outsl
stc
lahf
cmp
ss
push
inc
movsl
mov
pop
or
push
xchg
test
mov
je
add
dec
cmp
add
and
addb
or
leave
inc
and
pop
lret
out
js
shll
enter
loopne
out
xchg
and
sub
cli
xchg
insl
sbb
outsl
mov
or
push
mov
add
add
add
je
xchg
xchg
push
push
idivb
jnp
iret
loop
pop
mov
sbb
lret
push
js
xor
cmp
pop
cmc
lcall
inc
xor
pop
jno
push
jne
js
jnp
int
adc
leave
dec
push
push
xorl
in
push
mov
stos
out
imul
add
push
mov
adc
dec
idiv
xchg
jle
jmp
leave
add
adc
dec
scas
adc
rcll
gs
or
test
fbld
insb
call
xor
lret
movsb
mov
cmpsl
std
popa
add
mov
icebp
in
ss
data16
das
into
mov
out
or
mov
imul
rcll
inc
cmp
mov
fdivrs
repnz
or
cmp
repz
pop
cwtl
sub
mov
and
insl
adc
add
add
inc
fbld
mov
pop
mov
push
je
add
add
add
add
sbb
inc
arpl
mov
xor
jbe
sub
xor
repnz
xchg
mov
test
mov
jno
push
repnz
cmc
adc
sub
insb
shlb
xchg
xchg
daa
mov
sub
aad
mov
and
data16
rolb
mov
cmp
adc
xchg
sbb
insb
cmp
jnp
stc
or
xchg
bound
hlt
jbe
fstl
cmp
mov
out
adc
mov
add
add
in
sbb
inc
stos
xchg
or
xchg
mov
dec
xchg
mov
pop
icebp
sub
and
fsubs
pop
std
fiaddl
int3
lods
loope
inc
jns
shll
fimull
push
shlb
sarb
into
pop
repnz
mov
rcrb
out
out
cli
inc
mov
jecxz
and
in
ficompl
or
push
add
mov
fnstsw
in
insl
mov
out
jne
adc
add
push
push
call
push
push
mov
add
add
add
pop
mov
mov
ja
cmp
and
loop
mov
mov
adc
mov
enter
jle
cmp
divl
cltd
stos
pop
xchg
jnp
leave
xchg
mov
scas
xor
mov
imul
and
pop
movsl
mov
pop
scas
push
insl
xchg
push
push
adc
sbb
je
cmp
aam
pusha
inc
pop
push
dec
xor
stos
inc
mov
mov
pop
inc
out
adc
sbbl
pop
mov
push
dec
mov
xchg
pop
dec
lcall
addb
popa
pop
rolb
pop
pushf
pop
inc
push
jne
inc
shlb
xchg
xchg
adc
xor
loop
xchg
xchg
jge
mov
xorl
fs
pop
dec
dec
dec
ljmp
roll
mov
dec
pop
dec
add
push
mov
dec
aas
dec
xor
les
add
std
sti
leave
sti
iret
jmp
cld
pop
mov
add
loopne
dec
or
adc
xchg
roll
fwait
jecxz
aad
adc
shr
in
or
popa
pop
pop
sub
arpl
cmc
repnz
adc
mov
xchg
setg
adc
pop
cmpsl
mov
mov
test
inc
cmpsb
mov
sbb
or
or
addr16
mov
outsb
push
addr16
push
inc
std
xor
push
sbb
mov
out
sbb
push
or
in
dec
sbb
test
lcall
stc
mov
addr16
mov
inc
dec
dec
sti
pop
out
adc
sahf
pop
jo
out
push
pop
divl
xlat
fldenv
push
cwtl
sub
cmp
cmpb
cmc
call
push
push
cltd
and
sub
dec
nop
xor
aaa
in
dec
push
mov
mov
push
push
aaa
xchg
jecxz
dec
imul
mov
mov
xor
and
cmpb
add
jno
pop
ds
subb
and
pop
fwait
repz
movsb
and
test
or
icebp
jb
lock
adc
mov
push
jle
mov
xor
mov
ja
stos
lea
shll
nop
lods
sbb
push
cmpb
ret
mov
fsubs
inc
pop
inc
cmp
and
jle
in
push
ds
push
add
test
lcall
mov
rolb
xchg
push
cmp
aas
daa
fcmovnb
sbb
nop
pop
imul
mov
ds
dec
fbstp
push
js
and
pop
clc
sbb
fisttps
shlb
mov
jmp
and
push
jecxz
icebp
shlb
dec
sbb
andl
lods
mov
dec
cltd
push
in
add
xchg
xor
in
sub
dec
push
out
pop
clc
cmpb
adc
push
les
ja
mov
fwait
mov
or
jg
mov
sahf
loop
fistpll
movb
add
mov
in
mov
stc
adc
mov
dec
pop
mov
adc
pop
popf
adc
loope
xor
arpl
jge
mov
and
lret
adc
mov
sbb
pop
enter
or
mov
push
icebp
sub
addl
repz
xchg
shll
mov
not
cli
xchg
stc
in
shlb
inc
movsl
test
es
mov
mov
lahf
movsl
mov
push
loope
sbb
ss
dec
into
scas
int3
stos
mov
das
push
jne
popf
mov
cmpsl
xor
inc
pushf
int
cld
pop
call
in
adc
clc
es
movb
xchg
je
mov
push
data16
add
sub
xchg
js
das
add
push
rcrb
jbe
or
addr16
lods
les
das
xor
push
cld
pushl
cld
sbb
mov
add
add
add
push
pop
mov
and
out
xor
jmp
in
dec
push
outsl
jne
dec
xchg
cltd
and
imul
js
mov
dec
leave
mov
movsb
xlat
sbb
out
int
sbb
lods
xor
pop
or
insb
mov
sbb
push
mov
outsb
sbb
loope
into
lea
inc
ret
in
ds
pop
aam
sahf
push
mov
mov
lahf
vunpckhps
in
pop
popa
and
and
outsl
fisubs
mov
jg
pop
add
mov
out
jo
add
fisubrl
ds
dec
cmp
pop
cltd
jmp
adc
mov
sbb
mov
add
adc
jg
in
nop
into
mov
xor
mov
loopne
sub
lea
push
stc
dec
imul
mov
stos
mov
pop
mov
adcl
add
pushf
shrb
lcall
jle
and
add
add
aas
jb
stc
or
mov
pop
cmp
test
sarl
xor
sar
push
xor
pop
sbb
xor
dec
or
sbbb
lock
pusha
cmpsb
push
fwait
xchg
imul
out
push
pop
sbb
fcmovu
ds
mov
mov
xlat
mov
pop
push
xor
add
push
stos
dec
outsb
lods
ret
aam
js
mov
add
sbb
xor
fldl
mov
test
mov
jbe
pushf
daa
nop
mov
outsl
mov
les
push
js
pop
dec
or
push
cld
int
mov
gs
stos
out
pop
aaa
icebp
pushf
xchg
push
pop
jae
ds
popf
test
sbb
lret
mov
pop
fsubl
pop
add
pop
add
sub
dec
or
inc
pop
out
push
and
sbb
das
dec
mov
pusha
mov
divb
dec
pop
fwait
outsb
std
pop
mov
xchg
ljmp
add
sub
scas
mov
aas
scas
fptan
and
mov
add
add
lds
ja
add
mov
xchg
addl
cmp
test
fdivrl
push
insl
arpl
mov
xor
dec
adc
pusha
jg
jbe
push
jmp
fs
subb
ret
popf
inc
mov
adc
mov
cmp
movsb
loopne
popf
mov
pop
mov
cltd
icebp
cs
lahf
ret
in
leave
push
jnp
lods
insb
push
and
add
fmulp
pop
imul
xchg
add
adc
pop
or
repz
jp
sbb
inc
lods
or
dec
stos
mov
jmp
push
pop
xor
insl
sarl
jecxz
mov
xchg
cmpsl
in
xchg
sub
sub
xchg
in
imul
incl
xor
pop
jae
cmc
or
mov
sub
lcall
xchg
enter
es
aad
push
sbb
jg
jne
jne
jg
loop
mov
mov
add
add
lods
pop
pop
dec
cld
add
stos
ret
cmpsb
add
mov
shlb
std
enter
fnsave
pop
pop
mov
sarl
stc
mov
test
xchg
push
pop
pusha
inc
loop
mov
push
mov
push
cld
mov
testl
sbb
sub
mov
ret
lock
iret
mov
nop
mov
cmp
jmp
xlat
cmpsl
mov
roll
shlb
int3
cmp
inc
jge
sbb
inc
sub
jo
pop
jnp
ja
inc
fnstenv
push
mov
in
out
push
mov
sbb
and
push
popa
ret
cmp
fsubl
mov
shlb
je
enter
sbb
popl
jp
repnz
movsl
jecxz
mov
test
push
test
xor
pushf
or
rcrl
xchg
jae
lcall
add
sbb
mov
cmc
mov
inc
cwtl
les
add
add
push
aad
into
or
and
cmc
lods
shrb
out
popa
mov
imul
testb
lret
insl
xlat
arpl
xor
adc
push
mov
repz
jg
push
ret
xchg
xchg
cmp
and
lret
or
cltd
ja
dec
dec
or
das
ja
jne
xchg
mov
pop
mov
pop
or
adc
mov
dec
mov
scas
sbb
cwtl
jg
icebp
imul
mov
lock
sti
in
enter
jne
xchg
stc
lea
std
sbb
jl
hlt
sarl
aad
lret
jge
lret
inc
jle
in
arpl
adc
push
mov
in
data16
xor
dec
je
adc
adc
cmp
cmp
lds
xlat
jbe
aas
lods
insb
push
dec
cld
push
icebp
xchg
add
lods
repz
mov
sub
test
and
outsb
jle
lods
testl
lds
add
add
inc
adc
cli
int
test
pusha
mov
dec
adc
mov
push
mov
data16
fs
add
xchg
and
data16
push
pop
jo
fs
sahf
push
sbb
shl
fstl
dec
cld
mov
inc
or
adc
ret
enter
mov
adc
fcomps
mov
cmp
lea
push
out
decl
fs
jnp
loop
lret
push
icebp
daa
lcall
fdivr
pop
mov
js
push
jne
cmc
sub
sbb
test
out
mov
and
sar
shlb
out
xor
mov
push
dec
test
mov
push
xchg
sbb
addl
cmp
mov
gs
bound
push
sti
jno
fisubrl
out
jmp
fwait
mov
xchg
add
or
dec
xchg
and
fcomps
pop
mov
mov
add
cmp
add
add
lods
imul
cmp
fdivrl
mov
imull
nop
adc
daa
int3
push
rcll
test
push
xor
roll
mov
sbb
dec
xchg
stc
inc
mov
xor
out
int3
and
insl
sbb
les
mov
loop
mov
lock
push
popa
jp
push
jle
repnz
cmc
push
push
cmp
mov
jno
aam
xchg
out
dec
mov
in
push
mov
mov
in
cmpsl
loope
pop
push
fnsave
mov
dec
jp
jecxz
push
or
cmc
pusha
enter
inc
mov
cld
lods
cmpsb
xor
push
mov
cmp
push
dec
cmp
push
dec
movsb
cs
add
mov
jno
enter
jb
xor
dec
and
mov
daa
mov
mov
test
push
in
pop
lds
and
test
sbb
xlat
in
aad
add
js
movsb
movl
add
imul
mov
add
stos
cmc
ret
call
or
sub
dec
sub
fstp
aas
out
test
mov
lret
ja
pop
adc
ja
ror
pop
dec
test
jle
cmc
push
aaa
mov
loop
ret
shrl
and
aas
and
popf
daa
stc
jns
pop
sub
cmp
add
dec
les
adcb
push
push
jmp
mov
xor
sub
inc
mov
push
jae
mov
add
mov
adc
mov
adcl
fcompl
add
sahf
movsb
xchg
stos
add
adc
jns
mov
jnp
dec
out
mov
les
jle
shll
or
out
clc
mov
xor
adc
fsubr
repz
push
sahf
gs
sahf
add
jae
or
lea
add
push
sub
cmp
jg
and
mov
xor
mov
add
add
jnp
xorb
mov
lods
xor
test
int
ret
popf
and
add
fcompl
dec
stc
add
sub
shll
sarb
lods
stc
pop
test
sub
sub
add
mov
ja
pop
mov
adc
sbb
mov
xlat
es
ss
add
outsb
lods
testb
int3
out
pop
fs
and
arpl
jge
xor
inc
jnp
dec
sbb
xchg
mov
push
mov
add
test
mov
test
push
jne
scas
jo
sbb
test
addr16
fnsave
fistpl
int3
cmp
adc
cmc
out
imul
test
sbb
jge
pop
pop
add
pavgb
test
movsb
or
imul
mov
fs
daa
repnz
cmp
ret
or
mov
ds
fmull
in
add
adcl
jmp
ds
repz
fcoms
push
add
xchg
lods
leave
add
add
add
mov
xor
mov
in
pop
pop
inc
andb
cmpsl
in
sbb
scas
push
jno
popa
add
adc
mov
sbb
out
mov
gs
pop
xchg
lret
roll
mov
shrl
adc
mov
nop
stc
xchg
arpl
mov
add
cltd
jg
or
cmp
pop
mov
inc
cmc
push
int
sub
ss
pop
dec
inc
mov
mov
insb
rorb
cmp
dec
xchg
stos
push
xchg
xchg
mov
cmp
scas
out
and
out
scas
cmpsl
cld
into
sbb
out
cltd
in
mov
mov
or
inc
and
in
inc
decb
jnp
scas
pop
insb
xor
test
push
bnd
sub
pushf
xor
roll
ljmp
das
lahf
push
add
aad
push
dec
jl
mov
push
bound
add
add
mov
mov
in
cwtl
sti
shll
add
add
adcb
jae
fcmovnu
and
jmp
add
aas
sbb
sbb
lret
sti
mov
clc
xor
insb
shr
pop
or
addr16
and
addr16
mov
xor
es
ja
sub
icebp
dec
push
pop
push
mov
mov
mov
popf
popa
aaa
subl
vshufps
or
repnz
arpl
subl
push
push
xchg
push
sbb
cmp
daa
cs
push
insb
pop
test
push
mov
sahf
mov
push
dec
in
cltd
xor
aad
dec
sbb
pop
popa
test
ds
aad
inc
in
test
out
push
push
std
sbb
cltd
hlt
ljmp
pop
add
imul
stos
movsb
or
loop
cmp
inc
out
cmp
adcb
push
cmp
add
gs
aas
cltd
add
mov
divb
jp
stc
enter
in
sbb
push
inc
cmp
repnz
mov
add
add
add
inc
je
add
or
adc
test
jmp
lock
cmc
mov
cmpsl
bound
jo
insl
xor
stos
mov
stc
xchg
popa
push
fbstp
mov
mov
sbb
dec
aaa
pop
add
ret
jp
sbb
pop
inc
inc
inc
gs
stos
test
aad
outsl
sub
sbb
outsb
pushf
adc
inc
in
mov
push
jo
sbb
jns
test
daa
leave
or
sub
mov
jmp
out
mov
pop
and
lret
paddusb
xor
mov
lock
repz
push
mov
xlat
xchg
mov
test
lahf
out
mov
fmull
stos
pop
push
inc
and
repnz
bound
jnp
jae
lahf
pop
int
dec
cmp
pop
int
sbb
adc
mov
das
rclb
sbb
mov
pop
mov
jmp
add
jne
imul
cmc
call
inc
push
popa
mov
int3
add
add
add
add
mov
add
push
imul
in
into
jb
and
push
fiadds
loopne
cmpsb
push
adc
mov
mov
xorl
sar
xchg
sub
ss
push
fst
jl
cmp
fcomp
inc
fmull
and
inc
ud0
test
insb
inc
aas
sbb
rep
into
or
call
in
test
xchg
push
sbb
jae
push
in
lds
or
rcrl
divl
adc
and
mov
cmp
xchg
push
cmc
xor
std
fstl
nop
xchg
add
push
dec
mov
in
ja
add
aas
js
mov
adc
push
divl
das
test
jge
sub
daa
or
inc
jno
xchg
add
repnz
jp
and
addb
add
movsl
mov
iret
sub
sbb
jb
int
add
add
adc
mov
cmp
shll
mov
mov
std
jns
imul
bnd
jl
inc
cmp
lret
js
pop
jmp
mull
rolb
push
sbb
insl
mov
call
pop
js
push
ds
adc
jp
or
lea
inc
sbb
xor
cs
pop
xchg
leave
adc
mov
outsb
push
sbb
negb
addl
enter
in
add
jno
shlb
xorb
sub
out
insl
xorl
cmp
xchg
push
push
or
pop
jne
ficomps
dec
rorb
stos
out
in
jno
pushf
lahf
shlb
cli
adc
fwait
jl
nop
jp
push
pop
ror
icebp
mov
out
xor
cmp
xchg
out
cwtl
sub
addr16
xchg
inc
sbb
xor
add
add
out
into
gs
cld
test
into
add
add
add
loope
mov
ror
jns
dec
test
mov
jl
push
xchg
inc
movsl
ficoms
lcall
movsl
xchg
sbb
les
js
imul
xor
jnp
adcb
push
pop
pop
dec
mov
incb
iret
popf
pop
or
sub
dec
mov
fisttps
sbb
lock
mov
jle
imul
sahf
jge
jl
mov
mov
pushl
loopne
in
cwtl
rcll
xor
adc
mov
ja
icebp
and
push
and
int
rclb
dec
xchg
xchg
call
inc
leave
push
dec
xchg
mov
mov
jg
mov
dec
push
daa
mov
jg
repz
out
aam
divl
jne
repnz
mov
xchg
call
push
in
inc
mov
iret
and
sbb
gs
pop
sbb
add
xchg
and
je
out
mov
ret
mov
add
add
add
mov
adc
mov
cmp
push
cmpb
test
ljmp
cwtl
loope
sub
and
scas
fstps
loopne
aaa
sbb
sti
mov
imul
and
sub
sti
jns
stos
fstl
test
mov
dec
les
mov
inc
pop
jmp
sti
pop
lret
sbb
jne
mov
mov
mov
icebp
push
out
pop
sub
into
xor
lods
das
lea
mov
jmp
mov
xchg
cld
inc
mov
pop
xlat
add
aam
scas
pop
rcrl
psrad
lods
mov
xor
call
arpl
push
je
push
mov
inc
sub
aaa
xchg
jns
out
and
mov
sbb
or
xor
sub
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
aam
lret
rolb
add
add
dec
jg
lcall
push
add
adc
jnp
jecxz
dec
in
xor
mov
cltd
sbb
int3
fwait
jl
inc
dec
lds
lret
add
xor
sub
mov
cmp
das
sbb
inc
mov
jns
outsl
mov
pusha
jmp
les
inc
push
cmp
imul
sbb
push
dec
insl
stos
idivl
pop
or
cmp
out
pop
ret
add
xchg
insl
xlat
out
cmp
stos
adc
aaa
das
aas
dec
sti
jb
in
loope
mov
loopew
adc
pop
add
sarl
adc
mov
sbb
arpl
inc
mov
pop
movsl
cmp
lds
popf
rcrl
lods
jo
sub
cwtl
lea
mov
loope
pop
sbb
adcl
call
repz
add
call
out
lahf
ret
or
roll
add
add
bound
jmp
add
inc
aaa
das
adc
divl
sbb
sub
popa
movsb
mov
mov
lea
shlb
jl
mov
sbb
outsb
cmp
int3
mov
inc
and
test
in
add
icebp
mov
mov
sbb
in
xor
arpl
jo
test
lahf
addr16
sahf
xor
movsb
imul
in
dec
ss
inc
xor
add
mov
add
ja
adcl
sbb
add
cmp
fucomp
popf
ret
xorb
lcall
cmpsl
iret
movsl
xchg
and
mov
outsl
add
ss
jo
jno
cmp
xchg
xor
das
icebp
lds
cmpb
movb
ljmp
xchg
mov
loope
push
xlat
xchg
cld
fidivl
lret
xlat
inc
fdivrs
sbb
pop
lahf
lret
mov
out
xchg
std
jmp
mov
mov
mov
pop
xchg
or
rolb
add
add
loop
or
mov
or
jo
mov
adc
pop
ss
mov
loopne
adc
pop
xchg
cmpsb
lcall
in
scas
ss
inc
push
inc
fimull
test
sbb
inc
out
cs
cmp
add
sub
push
xor
ljmp
cld
not
xor
cmp
push
push
push
mov
cltd
mov
int
push
xor
inc
lock
jnp
addr16
adc
or
test
pop
pop
pusha
push
cmp
sahf
mov
xchg
popf
push
inc
iret
jle
xchg
sbb
sub
outsb
int
scas
sbb
mov
mov
call
push
scas
rcrl
inc
or
mov
sub
add
pop
mov
mov
out
or
mov
push
iret
push
popa
fisubs
in
xchg
stos
aaa
shll
mov
sldt
add
xor
add
sbb
sub
dec
fadd
cmp
roll
add
add
aas
aam
out
mov
xchg
and
jmp
pop
rol
mov
mov
cwtl
insb
enter
adcb
push
mov
mov
or
sbb
scas
xchg
sub
les
jl
sbb
jno
lock
jne
in
shlb
jp,pt
mov
shlb
jl
aad
inc
call
lods
adc
sbb
sbb
push
fldl
loope
mov
or
and
data16
jns
in
and
pushf
sarl
mov
push
bound
cmp
lods
push
mov
outsb
callw
bound
movsb
adcb
test
pop
jg
xchg
mov
xchg
ss
mov
mov
add
out
sub
in
addr16
out
das
cmpb
or
popf
sbb
sub
xchg
adc
jecxz
add
jge
out
add
jl
adc
add
add
ds
jae
sbb
add
add
add
out
mov
sub
cltd
adc
call
divb
lds
push
movsb
loop
fbld
pop
dec
sahf
rclb
fxch
dec
bsf
xchg
negl
out
xchg
fistpll
sti
sarb
mov
push
cmp
shll
xor
jne
ljmp
in
fnstenv
sub
xchg
pop
push
pop
xlat
mov
or
dec
and
xchg
xchg
daa
dec
hlt
xchg
push
fsubl
push
inc
loopne
cmp
rolb
cwtl
pop
leave
mov
push
mov
xor
cwtl
aas
sahf
cmpsl
shl
adc
in
pop
mov
add
clc
sub
add
mov
jmp
les
rcrb
stos
mov
fimull
add
mov
mov
insb
imul
mov
xchg
xchg
lahf
mov
dec
sub
jnp
mov
int
pop
es
or
mov
add
xchg
and
idiv
lahf
insl
mov
dec
xor
add
add
aam
jl
and
lret
mov
cmpsb
jecxz
cmpsl
and
mov
or
mov
pop
cmc
pusha
pop
fdivl
xor
or
adc
mov
add
mov
or
in
js
mov
adc
lcall
and
fadds
hlt
adc
pop
outsb
mov
jbe
inc
or
out
inc
push
sub
lea
or
push
bound
cld
cmpsb
dec
lret
cwtl
jns
adc
add
int3
pusha
pop
ret
cmp
and
mov
pop
pop
xchg
shl
pop
ds
test
rolb
gs
pop
shlb
and
mov
adc
jg
pop
mov
jo
adc
aaa
int
cmp
mov
gs
lea
leave
push
cwtl
test
orl
xor
sbb
cmp
jg
leave
or
data16
sbb
add
add
add
cmp
je
test
stc
bound
int3
loope
out
push
push
xchg
xorb
fisubl
sti
adc
test
fbstp
js
or
xchg
dec
add
aam
mov
repnz
jp
jle
ret
scas
jne
or
pop
lock
push
sub
add
push
jg
mov
popf
add
adcb
and
push
push
mov
gs
push
test
stc
cmp
shlb
pop
inc
mov
out
jno
and
push
icebp
pushf
cmpsl
add
andl
lret
mov
xor
and
bound
xchg
mov
movsl
push
pop
imul
andb
or
push
lahf
pop
mov
mov
dec
pop
cmp
ss
pop
cli
shll
push
sbb
iret
cld
fwait
test
push
add
sahf
aaa
mov
mov
in
fldl
sbb
sbb
add
add
int
out
out
imul
nop
xchg
movsb
test
subl
add
add
push
jp
out
dec
push
repnz
mov
and
mov
in
inc
or
mov
jb
jno
lret
push
add
mov
inc
ret
bound
adc
adcl
pusha
shlb
add
fadd
into
add
popf
xor
adc
movsb
lahf
out
aam
lods
ljmp
sbb
test
adc
push
sub
or
jae
adc
cmp
sbb
mov
inc
sbb
fidivrl
repnz
mov
xor
sbb
xor
aam
movsb
lods
loopne
dec
or
jmp
push
mov
push
jb
xchg
mov
sub
test
push
pop
imul
call
add
jb
and
push
push
movsl
hlt
mov
outsb
bound
je
xor
lds
fwait
push
rcll
xchg
pusha
jnp
out
fldcw
push
in
sub
stos
call
add
add
cld
fidivl
sbb
xchg
sti
call
sahf
sahf
xor
inc
ret
jae
fistl
jmp
mov
xacquire
lahf
mov
fisubs
cmp
jns
push
mov
jb
daa
inc
sbb
push
pop
stos
in
subb
js
lea
jns
mov
cmp
notl
mov
insb
addl
enter
mov
loopne
jecxz
inc
jno
stc
addr16
bsf
frstor
psraw
push
cltd
popl
push
subb
js
jns
out
add
push
ficomps
in
push
call
sub
aad
aas
cmp
inc
xchg
sahf
mov
sti
xor
jo
mov
stc
pop
push
cld
inc
sbb
xchg
add
push
iret
stos
call
or
add
pusha
push
mov
dec
and
dec
das
and
inc
ret
jbe
popf
pop
into
push
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
mov
in
flds
add
add
lahf
jns
mov
pop
fnstcw
and
divb
ja
xlat
push
fdivrs
mov
mov
mov
inc
sbb
add
pop
ret
int
pop
cmp
cmp
pop
mov
aam
and
jno
fcomp
iretw
sub
pop
mov
and
loop
add
push
sbb
inc
ja
sbb
cltd
outsb
or
pop
mov
cmp
mov
shlb
out
in
adcl
add
pop
jns
mov
add
lret
test
cmp
cmp
jl
les
xor
or
mov
xchg
leave
dec
dec
inc
jp
rcrl
loope
push
xlat
and
adc
pop
mov
int3
stos
bound
arpl
pop
das
push
xchg
ret
adc
rcll
scas
add
mull
xor
sub
sbb
insl
clc
mov
xchg
pop
dec
jle
jg
std
fstpt
lret
inc
stos
lock
add
add
xchg
dec
ffreep
push
add
mov
adcb
outsb
xchg
add
pop
mov
jns
or
and
and
mov
inc
leave
test
dec
fsqrt
fcomps
aad
jg
fstl
rcl
divb
shrl
xorl
jmp
je
pop
scas
repnz
loopne
int3
jns
push
roll
stos
stos
inc
out
cmpsb
stos
das
setl
out
push
sbb
popa
add
notl
xchg
xchg
sub
jnp
xchg
mov
sbb
bound
inc
dec
jle
sbb
and
test
dec
sub
int
in
pushf
jbe
push
les
mov
add
push
scas
jp
pushf
subl
ljmp
xchg
jns
hlt
loope
clc
dec
and
fs
mov
fs
dec
push
cmpsb
dec
xchg
icebp
xor
dec
stos
adc
lcall
jb
popa
cmp
ljmp
cmp
fildl
add
add
push
mov
pop
outsl
xchg
push
fucomip
jo
jp
and
lea
xchg
xorl
arpl
xchg
fstl
add
movsb
mov
in
or
rorl
mov
cmp
fildll
mov
and
bound
lret
stos
xchg
aam
loop
push
mov
jecxz
repnz
stc
push
sbb
loopne
data16
mov
mov
mov
aaa
pop
mov
je
movsb
bound
and
dec
stc
cltd
insl
mov
sub
push
pop
cmp
ljmp
pop
jno
movsb
and
out
das
ret
out
je
outsb
xchg
ds
mov
and
in
mov
mov
bound
call
cmp
sub
aad
sbb
inc
inc
xor
test
inc
mov
aas
lret
imul
rclb
cltd
dec
jae
jmp
add
sbb
jmp
scas
inc
call
clc
faddl
add
add
and
sbb
aam
rcrl
stc
addr16
mov
addl
or
icebp
in
lods
pushf
push
rclb
or
push
cmp
or
shll
cmc
adc
lret
jno
mov
das
loop
mov
outsb
inc
fbld
repnz
mov
push
notb
stos
ss
push
test
loop
mov
mov
test
int3
push
xlat
cmp
inc
shl
and
outsl
test
and
xchg
or
jecxz
insb
scas
add
pop
roll
xchg
push
lods
jno
cmp
pusha
add
cli
sub
mov
out
dec
stos
pop
xrelease
push
leave
shrl
sahf
mov
repnz
jnp
or
cmp
adc
js
pop
pop
mov
mov
sarl
hlt
pop
push
push
xchg
push
xchg
sub
hlt
hlt
ja
mov
sub
jl
es
and
or
je
cmpsl
fimull
faddl
sbb
add
add
mov
orl
ljmp
ret
repz
pop
jno
push
mov
xchg
push
pop
push
push
jle
or
xchg
daa
and
ljmp
mov
mov
fimuls
push
jno
popa
push
mov
sti
add
xor
insb
cmp
jecxz
call
push
pop
jg
fimuls
das
pop
stc
shrb
and
mov
stos
pop
mov
mov
loopne
repz
in
dec
fsubrs
cmp
out
pop
mov
mov
mov
bound
in
mov
icebp
or
jns
movsl
push
xor
repz
std
pop
imull
xchg
dec
mov
in
dec
ljmp
adcl
cltd
pop
cmp
jmp
mov
js
enter
into
std
cli
dec
or
insb
sub
mov
add
pop
cmp
emms
pop
aad
pop
nop
add
push
cs
iret
repnz
jg
mov
lcall
fisttps
or
add
add
add
add
lock
xor
mov
rcr
or
xor
or
in
push
arpl
push
and
mov
gs
mov
mov
mov
jmp
retw
aaa
mov
xor
mov
cmp
insl
daa
leave
or
push
push
pushf
mov
lods
dec
ljmp
xor
mov
jl
jmp
and
push
xchg
test
and
ret
leave
das
adc
xchg
aas
insb
fs
rolb
push
dec
notl
xchg
mov
sahf
or
test
add
das
pop
push
pop
mov
sub
mov
xchg
mov
xor
push
mov
push
shr
pushf
xchg
lods
jno
pop
ficompl
pop
fistps
inc
jno
mov
fnstsw
jle
push
push
cmc
lods
pop
stos
lret
addr16
test
fisttpll
sbb
jns
xchg
xchg
mov
enter
add
add
add
pop
sub
push
adc
mov
gs
pop
in
fldcw
cs
je
arpl
sub
icebp
into
repz
push
enter
inc
fdiv
into
addr16
test
ret
adcl
into
push
pop
mov
sbbl
add
aam
mov
mov
stos
mov
addb
mov
sbb
dec
mov
out
xchg
outsb
cmp
das
rcrb
jg
stos
or
pop
push
add
enter
push
sti
mov
stos
imul
sub
insl
push
mov
sti
jmp
push
cmp
and
jmp
imul
loop
cmp
mov
flds
je
or
cmpsl
dec
xchg
hlt
clc
lods
adc
cmpsb
popa
xchg
add
pop
mov
dec
ss
jle
ret
sub
jb,pt
mov
and
subl
add
add
fadd
fsubp
jnp
or
cld
les
mov
or
add
add
add
in
dec
jl
cmpsl
dec
add
xor
mov
pusha
scas
test
jmp
mov
adc
lds
push
pop
jp
cltd
mov
dec
mov
movsb
jnp
enter
add
jmp
sub
fisubs
loopne
dec
sub
sbb
sub
ja
fs
ffreep
xor
sbb
push
fdiv
push
cltd
inc
shll
jmp
cltd
loop
arpl
in
int
fs
pop
in
inc
push
xchg
gs
test
hlt
js
std
jp
xlat
lods
sbb
xor
cmc
push
add
es
xlat
or
sub
in
mov
loop
mov
mov
mov
mov
xchg
cmc
dec
mov
lods
push
sub
ret
pop
movsl
movsb
pushf
adc
cmp
inc
ljmp
pop
jne
ljmp
adc
pop
out
loopne
jo
cmp
add
sub
cld
cli
jle
dec
nop
xor
push
or
add
add
add
ret
sbb
jne
or
adc
je
adc
ljmp
into
jp
stos
ret
push
imul
adc
or
pop
cmc
adc
cmp
add
cwtl
int
jbe
int3
scas
int3
mov
pop
mov
xchg
stos
sub
imul
xor
pop
add
in
cltd
lock
inc
adc
sub
bound
xor
int
xor
popf
out
aam
mov
popa
sbb
mov
pop
mov
sbb
fs
sub
and
mov
jl
adc
addr16
push
mov
push
lock
cmp
ss
int
mov
popa
into
das
mov
lahf
xchg
mov
lcall
aaa
xor
mov
outsl
mov
inc
adc
jle
pop
aad
icebp
pop
dec
mov
bound
jge
mov
in
xchg
cmp
jmp
add
add
ja
sti
aaa
out
ja
mov
add
add
add
out
shlb
addb
les
mov
and
ret
adc
mov
in
jmp
sti
je
push
ss
cs
sahf
dec
ds
xor
push
xchg
jbe
addr16
add
cltd
jl
add
pop
pop
pushf
fwait
add
jmp
adc
fnstenv
adc
jecxz
or
xchg
push
push
pop
sti
cmp
repnz
fisttpll
jae
outsl
xor
ja
pop
sbb
or
adc
cmp
aaa
dec
sub
add
mov
stos
xchg
fistps
in
jns
out
mov
xchg
aad
iret
and
out
or
jns
fisubrs
xchg
mov
push
les
inc
fsubrs
cltd
adc
dec
mov
or
bnd
call
nop
rorl
add
pop
fadds
adc
imul
in
movsb
notl
add
ror
cltd
outsl
mov
aaa
pushf
add
sub
add
add
in
or
inc
jmp
clc
int
xor
and
or
out
divb
pop
fidivs
xchg
out
and
pushf
adc
pop
in
mov
push
in
pusha
scas
test
das
push
rcll
fs
arpl
lcall
insb
popa
mov
cmp
cmp
pop
jb
mov
push
mov
mov
sub
dec
mov
mov
or
icebp
ja
insb
mov
ds
scas
sbb
pop
mov
rorl
in
mov
add
repnz
inc
popa
test
mov
cmpsl
inc
sub
jo
int3
mov
and
ret
adc
and
mov
pop
es
test
xchg
ret
or
mov
stos
movsl
inc
int
add
xchg
lret
mov
push
mov
cltd
cmc
adcb
fcos
pop
mov
das
sbb
add
add
add
rol
lret
mov
sbb
xchg
loopne
adc
faddl
pop
xor
jle
mov
push
sbbl
inc
pop
pop
xchg
sti
out
out
mov
mov
jmp
adc
pop
add
sbb
inc
mov
mov
adc
adc
xchg
pusha
push
adcl
adc
faddp
pusha
xor
cli
stc
add
loope
test
subl
adc
pop
jo
lods
mov
push
repnz
ds
cmp
gs
push
mov
sub
stc
sbb
test
mov
xor
dec
add
ds
pop
cwtl
xchg
push
xor
mov
add
ficompl
dec
or
lds
shll
mov
stc
mov
inc
mov
mov
lock
sub
fldcw
push
inc
pusha
jmp
mov
repz
lock
jg
in
and
test
add
add
add
mov
jmp
stos
lcall
sbb
sbb
jo
jne
jmp
or
jo
fidivs
sarl
pop
icebp
sub
std
shr
pop
adc
inc
outsb
cmpsl
sti
cmp
mov
or
adc
dec
mov
xorl
push
and
outsl
js
push
pushf
pop
mov
adc
dec
rorb
mov
xor
mul
jb
loopne
enter
dec
adc
and
inc
mov
dec
in
and
push
cs
push
test
mov
in
mov
dec
jne
cmc
add
hlt
fisubl
xchg
mov
jl
daa
adc
push
push
movsb
inc
test
cmc
xor
cmp
xor
fsubr
pop
bound
pop
rcll
js
mov
inc
add
mov
add
or
dec
dec
add
sub
add
add
pop
xlat
fistpl
and
and
add
add
add
add
fadd
stos
mov
mov
les
popa
inc
mov
fbstp
shl
jl
jns
and
sbb
xor
aaa
cmc
xor
mov
cwtl
xchg
notl
lds
adcl
xlat
or
ud0
jnp
dec
adc
mov
mov
or
popf
mov
scas
xchg
add
repz
fadds
inc
push
idivb
ds
or
stc
je
pop
fnsave
clc
icebp
or
imul
in
pop
jecxz
mov
or
cmp
loopne
popl
dec
cmp
dec
ss
or
int3
ja
inc
jbe
out
sub
jne
mov
notl
dec
aam
dec
and
cmp
enter
jle
lods
pop
in
inc
aaa
ret
and
mov
fnstcw
sub
add
stc
mov
dec
js
stc
mov
dec
int
pop
leave
and
and
add
add
add
jae
xor
mov
or
jo
xchg
jecxz
test
push
mov
js
push
push
in
cmp
sub
push
and
insb
adc
stos
xchg
ret
push
clc
pop
dec
aas
adc
xor
push
out
jae
cmc
jbe
popf
or
push
out
ret
out
jge
mov
ljmp
mov
jnp
pop
cmp
push
dec
lods
adc
or
in
lcall
xchg
rcrl
inc
add
mov
adcl
fists
call
imul
icebp
lcall
es
mov
out
mov
mov
mov
mov
cmpl
dec
cld
xchg
clc
out
xor
idivl
lock
add
notb
inc
lock
out
call
ret
test
jl
in
xlat
lcall
adc
clc
roll
add
add
insl
repz
fwait
jns
jns
nop
pop
xor
jmp
add
loope
ss
push
mov
fmuls
jmp
adc
pop
jae
mov
and
lret
cmp
arpl
pop
loop
or
call
or
insb
outsb
xchg
ja
les
stc
mov
sbb
into
push
xor
jmp
pop
xlat
enter
testb
in
push
add
sub
cld
cmp
cli
or
mov
pop
inc
in
rcll
es
xor
cmpsl
popa
mov
dec
cld
stos
cmp
imul
adc
mov
mov
mov
dec
dec
loopne
push
xchg
shrl
int3
push
mov
out
pop
hlt
dec
dec
loope
xor
icebp
outsb
jle
mov
inc
mov
andb
dec
adc
mov
pop
pop
sub
hlt
xchg
cmp
or
fs
rorb
movsl
inc
int
hlt
jl
jg
cli
push
and
in
cmp
jnp
adc
jne
mov
ljmp
dec
jg
popa
test
ja
mov
push
cmpsb
lods
aas
sbb
sbb
or
sbbl
xchg
push
loope
cmpb
mov
stos
shrl
pop
rcl
sub
lods
dec
sti
fcomps
jl
loop
add
add
inc
sbb
cmovs
les
mov
jle
dec
sbb
adcl
or
xchg
rclb
mov
jl
popa
frstor
cli
lcall
sbbb
fstpt
in
ret
inc
or
loop
mov
imul
dec
xchg
clc
sbb
jno
nop
cmp
cwtl
dec
inc
lret
push
pop
aam
mov
cmp
mov
push
lea
mov
lods
imul
fisubs
fsubs
sbb
in
dec
sti
lock
dec
test
imul
out
lods
xor
aas
xlat
fistl
das
js
push
addr16
add
add
add
mov
adc
jl
jmp
in
je
xchg
enter
daa
scas
push
jbe
xor
cltd
lret
xchg
fs
sbb
ret
std
shll
test
mov
pop
jge
cmc
lods
dec
mov
sbb
daa
push
outsl
sbb
sub
dec
xor
outsb
int
dec
dec
push
test
xor
jno
pop
out
sti
roll
or
inc
fcoms
pop
xor
cmp
decl
mov
incl
ds
adc
lock
into
rcl
xchg
mov
scas
outsl
jnp
int
paddq
or
mov
mov
pop
push
insb
fucomp
sub
push
sub
cmp
dec
lret
mov
jp
cltd
imul
inc
mov
dec
into
mov
mov
xchg
lock
je
pushf
mov
inc
bound
hlt
mov
add
jb
scas
decb
fisttps
jno
fbstp
add
add
add
cmpsl
or
lea
lds
and
cmp
cmp
test
mov
or
es
xor
rcll
outsl
aad
es
jg
mov
mov
xchg
out
int3
aam
push
dec
sbb
insb
mov
mov
mov
dec
xchg
scas
call
jne
pop
scas
push
xor
jmp
iret
push
shl
mov
jmp
jnp
or
jge
pop
in
cmp
pushf
inc
add
inc
stos
popw
lea
rol
mov
pop
js
xor
and
xchg
or
pop
add
sub
mov
jns
push
pop
fbstp
repz
lods
inc
insb
jbe
fcomps
or
mov
xorb
pop
mov
push
jno
negb
pop
shlb
jb
inc
ds
cmpsl
xchg
xlat
jno
mov
xlat
mov
xchg
inc
jle
bound
in
add
add
add
mov
cmp
dec
xchg
and
push
jecxz
in
retw
jg
xorl
cli
and
xor
mov
push
stos
jmp
ret
mov
adc
sub
jecxz
mov
xlat
into
push
fldt
mov
rolb
push
and
xlat
std
xor
sbb
in
les
push
mov
addr16
and
lock
movsb
sbb
mov
fdivs
xchg
lds
pop
stc
inc
sahf
imul
sbb
pop
xor
xor
cwtl
decb
cmpsb
push
dec
aam
iret
test
stos
mov
pop
xchg
mov
stc
adc
outsb
jno
fcoms
cltd
incb
jne
sbb
lret
mov
ss
fiaddl
scas
mov
aaa
dec
out
xchg
outsl
pushf
adc
sub
add
lods
cmp
lods
aas
mov
aaa
xor
out
add
add
add
xor
lcall
in
push
imul
inc
lahf
addr16
push
mov
cld
adc
push
movsl
inc
out
mov
push
dec
xor
mov
insb
jecxz
mov
shl
mov
repnz
lea
xchg
xor
sub
sbb
out
aas
add
adc
cmp
sub
jg
sbb
out
test
testl
cmp
jb
pop
adc
mov
stos
mov
cmp
pop
xor
les
test
fxch
movsb
and
lods
mov
test
lds
jnp
pop
xchg
xor
jg
jbe
sub
pop
mov
dec
sub
adc
repz
and
jb
cltd
mov
push
sub
aas
stos
std
jb
lcall
ret
gs
ja
sahf
std
sbb
ja
mov
add
fisubrs
add
add
mov
sti
mov
icebp
mov
inc
out
add
add
add
sbbb
scas
jae
sub
lods
popl
inc
js
mov
loop
test
fcoms
bound
pop
sub
xchg
mov
xchg
mov
lret
add
out
je
add
xor
andl
movsb
dec
movsl
loope
loop
push
cltd
xchg
imul
push
test
sbb
lahf
jbe
pusha
in
out
insl
cmp
pushf
shlb
sub
or
sbb
add
sarb
mov
jno
pop
loop
dec
push
popa
xor
fs
insl
inc
lods
jb
adc
lods
dec
fst
adc
mov
fsubs
inc
notb
mov
arpl
lock
xchg
out
in
movsb
lea
pop
aad
stos
add
mov
or
cli
pop
in
shrb
cmpb
bound
roll
fldl
arpl
jg
out
inc
fcmovnbe
mov
insb
jb
push
or
mov
lods
scas
mov
incl
add
add
into
adc
neg
jge
xchg
jns
pop
adc
add
add
xchg
sbb
loopne
clc
mov
lods
cmp
jl
lahf
cld
stos
sbb
add
stos
insb
jecxz
movsb
push
pusha
std
inc
jp
mov
js
pop
push
pushl
test
into
dec
divb
fmul
and
dec
xor
xor
and
mov
inc
xlat
dec
cmp
insl
cmp
int3
repnz
mov
inc
in
adc
and
std
or
adc
or
lods
push
jl
jecxz
push
xor
xchg
stos
adc
mov
je
and
aam
loop
pop
sti
iret
inc
add
imul
scas
inc
hlt
jl
aaa
lret
test
dec
or
mov
xchg
mov
insb
ds
pushf
sarb
add
aas
sbb
sbb
ss
sbb
sahf
pop
mov
xchg
in
inc
aaa
pushf
sbb
adc
mov
add
add
dec
sub
sub
cwtl
xchg
dec
icebp
add
add
add
dec
fimull
je
pop
mov
and
or
cmp
jno
or
mov
scas
outsl
icebp
sub
jns
mov
sub
xchg
rclb
dec
outsb
push
leave
popa
sub
fs
or
sub
div
dec
stos
sbb
and
mov
add
mov
mov
scas
push
in
clc
and
mov
cmp
test
pop
gs
xchg
push
inc
clc
adc
cmp
mov
and
pop
sti
jmp
int3
icebp
inc
xor
push
mov
js
mov
clc
jle
cmp
sbb
aad
push
mov
popa
incl
stos
pop
inc
xor
push
jp
jae
scas
cs
xchg
or
push
jg
jg
sub
lahf
ffree
js
jne
jp
leave
idivb
popa
inc
inc
sbb
mov
add
add
ja
and
aaa
divl
mov
add
add
add
pop
insb
insb
push
jnp
popa
sub
cmpsl
mov
iret
mov
cmp
and
call
cmp
imull
jbe
jle
xor
jae
mov
mov
pcmpgtw
xchg
sbb
in
call
nop
mov
fisubl
push
pop
addr16
in
cmpsb
rclb
fndisi(8087
xchg
inc
inc
repnz
lcall
fldpi
adc
fmull
movsl
mov
movsl
and
imul
adc
out
jge
hlt
cmpl
movsl
dec
mov
cmp
or
fs
enter
cld
mov
cmpb
pop
lret
aam
ret
nop
aad
jg
pop
fnsave
jle
cmpsl
repz
sub
call
pop
ret
fldcw
test
add
mov
into
sti
jne
xor
jle
in
jbe
cld
jmp
lea
mov
mov
add
mov
cmc
mov
add
add
add
add
out
add
or
jecxz
jnp
sub
dec
mov
sub
shrl
mov
pop
mov
popa
icebp
push
mov
loop
push
pop
jmp
arpl
pop
insb
jne
cltd
or
ret
mov
cmpl
jg
aam
xchg
pop
movzwl
pop
popf
add
cmp
and
lds
int3
leave
out
leave
mov
cmp
pop
sbb
jp
pop
inc
mov
adcb
or
jno
cmp
arpl
lret
sub
pop
mov
inc
pushf
scas
jle
mov
ror
jae
sarl
inc
sbb
fisubrs
ret
dec
stos
fsubl
push
and
push
xchg
xor
clc
es
jl
leave
pusha
or
adc
push
rorl
mov
dec
jge
mov
dec
enter
mov
in
and
mov
xchg
test
inc
cwtl
and
cmp
movsb
inc
xor
inc
mov
jle
jne
pusha
popf
pop
cmpl
add
add
push
inc
inc
jmp
mov
das
jno
into
pop
add
and
add
lods
ds
andl
sti
inc
or
movswl
icebp
xor
jns
pop
add
insb
outsb
mov
stc
rorb
dec
mov
mov
jns
les
fsubs
adc
mov
mov
mov
fstpt
loop
push
mov
data16
ds
mov
sti
fidivl
cltd
add
mov
pop
xchg
pop
jo
loop
int3
push
cmpsl
fisttpll
and
data16
and
lret
xchg
in
out
shrl
fs
lock
stos
cmpsb
mov
ret
sub
xchg
ja
cmp
sbb
jnp
push
dec
pop
pop
mov
mov
push
and
push
mov
cmp
ret
addl
add
sub
scas
fdivr
fnstcw
jecxz
test
pop
cmc
add
add
add
mov
sub
inc
enter
pop
xor
add
lahf
cltd
sub
pop
ja
xchg
xor
cmp
pop
pop
xor
fwait
jl
mov
mov
xor
pop
pop
lret
or
inc
or
mov
mov
jge
int
mov
out
xor
rcrb
std
cmp
ret
mov
inc
movsl
out
dec
imul
les
decl
jmp
push
push
mov
aam
movsl
aas
dec
xchg
lock
mov
fnclex
pop
mov
fucomp
mov
das
cmp
jmp
shlb
pop
cmp
loope
jle
adc
mov
mov
jae
fisubl
int3
aam
sbb
cmp
mov
sbb
repz
jl
addl
lds
mov
mov
adc
mov
push
outsl
push
out
sbbl
mov
insb
mov
mov
or
jmp
ret
add
xor
jb
jae
pop
les
pop
testb
add
add
out
push
fnsave
jge
lcall
jge
and
mov
mov
and
jg
int
repnz
outsb
js
jge
subb
add
jnp
mov
xlat
dec
jae
add
jmp
cmp
pop
into
sahf
dec
in
inc
arpl
int3
xor
mov
mov
adc
sub
push
stos
int
mov
xchg
stos
xchg
ret
fisttps
mov
jnp
inc
cwtl
cmp
addr16
jae
dec
sbb
mov
adc
or
mov
sti
dec
xchg
imul
push
or
outsl
sub
xor
dec
sbb
das
inc
push
xchg
inc
fistpll
or
jns
addr16
push
xor
jecxz
addr16
es
cmc
or
lret
mov
aad
jnp
sti
mov
loop
sbb
lds
sub
cmp
mov
xlat
dec
adc
mov
adc
int
in
idivl
js
mov
sub
aad
pusha
testl
add
adc
scas
dec
sub
insb
mov
push
ret
and
lds
fs
xor
dec
rolb
jns
mov
dec
daa
or
fadds
cmp
loope
lods
inc
cmp
push
fcmovu
lock
xor
loopne
hlt
ret
sub
aam
mov
test
test
dec
int
mov
mov
outsb
push
aad
xchg
insl
inc
pop
int
out
cmpsb
push
test
mov
int3
mov
mov
add
mov
push
add
mov
sub
inc
xor
inc
mov
scas
xchg
or
mov
mov
cltd
test
iret
jmp
xor
and
das
in
ror
mov
lds
cmpl
xlat
ficompl
add
jae
and
pop
inc
aam
sbb
mov
mov
sar
push
adc
outsb
inc
movsl
roll
add
add
add
jecxz
inc
cli
aas
into
lret
shl
out
clc
add
add
add
cld
mov
push
add
inc
outsl
mov
adc
dec
aas
stos
into
pop
dec
cld
test
adc
push
cltd
fdivrs
or
push
cld
psadbw
xchg
rclb
testl
in
loop
sbb
and
pop
push
mov
xchg
jle
cltd
idivb
pusha
pop
repnz
xchg
jmp
gs
ja
repnz
jo
pushf
or
out
inc
sub
stos
or
add
jbe
fs
mov
lods
or
fstpt
push
pop
sbb
mov
fdivrl
sbb
lea
and
jno
shll
sahf
iret
cltd
daa
pop
fiaddl
xchg
cmp
in
jae
mov
xchg
xchg
or
pop
jecxz
pop
aas
test
cmp
das
sbb
jmp
movsb
xchg
mov
or
mov
ja
scas
cmp
add
add
lcall
loop
push
aaa
push
add
add
cwtl
inc
cmp
add
jge
rolb
out
sahf
fdivrs
sahf
rol
mov
iret
sub
out
loopne
ret
push
mul
int3
into
loop
jbe
sahf
les
mov
jp
xchg
adc
arpl
inc
mov
jge
pop
int
add
xor
movsl
dec
lock
rorl
adcl
adc
in
push
mov
cmpsb
out
jl
in
cld
stos
jne
stos
aad
jecxz
cld
xchg
dec
cmpsl
adc
pushf
inc
xor
cltd
cwtl
sub
jae
cmc
jle
idivl
lock
cltd
xor
test
jge
lret
lock
jmp
push
lfs
mov
adc
sub
pop
add
inc
push
ret
xlat
dec
xchg
gs
outsb
das
mov
sub
outsl
je
mov
xchg
test
pop
and
cmp
out
loope
sbb
fidivrs
sbb
mov
and
fldenv
jmp
mov
aaa
jae
cltd
dec
mov
jno
sbb
cli
add
add
add
mov
fucomip
fnstcw
fcmovnb
ficoms
aaa
test
xchg
aam
daa
pop
and
in
notb
xchg
outsb
jo
pop
cs
sub
test
scas
int
in
sbb
imul
ja
ja
xchg
aam
cmc
bound
inc
inc
sti
pusha
mov
or
mov
mov
idivb
ss
mov
dec
xchg
jp
in
jns
xchg
mov
rcrb
sbb
or
xchg
psrlw
fs
aad
dec
or
daa
lcall
sahf
and
jge
mov
cwtl
iret
in
testb
jmp
xchg
jae
push
outsb
sub
out
ds
inc
imul
xchg
aas
adc
inc
in
xchg
aas
mov
fdivs
mov
sub
xor
or
stos
in
lret
and
bound
int3
ds
into
nop
out
cwtl
jle
push
sub
dec
inc
jnp
dec
jo
add
add
add
inc
stos
inc
subb
jnp
ss
loope
adc
inc
sbb
pop
fwait
pop
push
leave
add
neg
inc
cmp
push
movl
movsl
lcall
pop
cmp
clc
adc
aam
rcll
or
pushf
setne
mov
jnp
or
addr16
jns
or
fs
or
sbb
pushf
xor
loopne
mov
lods
enter
dec
mov
into
daa
xor
cmpsb
lds
incl
inc
les
sbb
mov
leave
mov
jg
mov
cmpsb
cmp
loopne
and
popa
imul
outsb
or
je
push
cltd
stos
and
cld
sbb
pop
mov
decb
dec
in
in
cwtl
imul
nop
dec
xchg
push
push
add
mov
outsl
ja
data16
add
add
test
jg
push
pop
push
mov
je
add
add
add
shl
nop
push
add
xorw
incl
sbb
hlt
repz
xchg
dec
pop
xor
jge
es
jle
jecxz
adc
mov
xor
dec
imul
xor
outsl
push
leave
cmp
mov
lock
jge
adc
addb
jmp
lods
dec
add
mov
jo
ficoms
xor
mov
das
xor
jno
mov
and
add
jo
sub
pop
or
mov
in
dec
add
sbb
push
mov
das
push
mov
mov
adc
xchg
sti
mov
dec
sbb
mov
fisttpll
pusha
sub
push
call
test
push
adc
lods
in
inc
lods
cmp
outsl
testb
icebp
jge
push
mov
lds
movsl
jle
cmpsl
insb
mov
push
mov
clc
lahf
push
jmp
and
push
add
add
movsb
push
in
cmc
jne
sbb
js
int
or
add
add
add
cs
fdivrs
xchg
arpl
push
pop
inc
jbe
cs
mov
push
lds
insb
and
xor
mov
mov
scas
in
outsb
fs
stc
and
pop
jno
dec
dec
addr16
enter
lea
or
cmp
lret
fistl
or
pop
sub
imul
pusha
xor
mov
lcall
es
mov
mov
cmpsb
push
shll
lods
pop
cmp
jmp
lret
std
outsb
cmpsl
fstps
test
or
fistl
imul
mov
adc
pop
adc
pop
inc
xorb
sub
xor
fadd
sub
inc
cs
push
sub
in
xor
or
mov
out
leave
push
xor
jmp
push
andb
mov
sahf
or
in
cltd
lret
nop
mov
pushf
pop
cmovs
mov
add
sbb
shlb
aas
out
int3
mov
xchg
stos
mov
jl
add
add
add
jae
out
push
stc
mov
xlat
push
and
popa
mov
cmp
inc
xlat
inc
jno
test
sub
mov
ljmp
push
leave
repnz
and
jae
jnp
inc
jb
fs
pop
dec
adc
jne
mov
cli
jo
divb
mov
sbb
adc
aas
clc
sbb
mov
sbb
fiadds
stc
xchg
push
into
or
adcl
int
cmp
movsl
cli
aam
faddl
nop
jl
sbb
aam
sub
sub
and
or
insl
push
subl
mov
adcb
es
adc
sbb
out
mov
sub
iret
adc
cmp
push
mulb
jle
push
fldcw
std
xor
cli
adc
pop
mov
cmpb
mov
mov
loop
dec
icebp
push
jmp
js
mov
filds
add
add
mov
lcall
or
add
add
jne
pop
cmc
repnz
movd
xorl
mov
test
jne
leave
cmp
add
mov
in
mov
push
adc
jge
xchg
cltd
xchg
dec
and
mov
cli
xchg
push
sbb
inc
sbb
dec
sbb
xchg
jmp
dec
cmp
and
add
mov
movsl
xchg
popf
add
jns
mov
dec
lods
mov
aam
imul
mov
cmpsb
jo
aam
pop
push
add
in
add
xchg
xchg
cld
test
pusha
mov
das
adc
scas
xchg
mov
jge
std
jns
nop
xorl
movsb
repnz
mov
cwtl
cmpsl
fdivl
cmpsb
bnd
pop
pop
inc
cmc
dec
ss
sbb
or
repz
mov
xor
mov
mov
scas
rcrl
aaa
call
shrb
pushf
jg
dec
dec
rol
lret
clc
cmc
inc
stos
insl
test
add
add
add
jmp
mov
out
nop
cmp
jnp
das
enter
dec
pop
aam
mov
mov
dec
data16
or
cs
loop
mov
das
or
testl
sbb
stos
push
fisubl
daa
lock
push
loope
inc
push
loope
add
jae
dec
push
dec
add
mov
daa
pop
aad
imul
lcall
mov
jns
test
cli
fildll
sbb
fwait
add
jbe
mov
adc
or
stos
ja
cli
pop
inc
scas
xor
adc
jg
out
mov
inc
pop
out
adc
leave
lock
mov
test
sbbl
sub
out
ss
shlb
aaa
fsubr
jnp
inc
sbb
adc
xchg
movsl
imul
scas
dec
pop
push
into
push
or
loopne
out
and
sub
xor
adc
lcall
add
std
aaa
mov
shll
pop
mov
add
incl
add
insb
popa
inc
idiv
sbb
jno
ret
mov
mov
pop
enter
mov
bound
sbb
jnp
out
adc
lret
movsl
sub
aaa
mov
lret
pop
mov
imul
gs
stos
in
push
push
mov
adc
push
sbb
repnz
pop
push
sub
icebp
cmp
test
push
rcrl
xchg
or
xchg
mov
mov
push
xor
jmp
inc
ss
sahf
fldt
ljmp
jmp
sti
sbb
imul
icebp
aas
push
mov
dec
lahf
movsb
mov
clc
mov
fadds
test
cmp
mov
scas
shr
int3
leave
cmpsl
sbb
pop
xchg
mov
pop
dec
jle
insl
sub
sub
mov
xchg
mov
mov
or
shrb
dec
outsl
push
jne
xor
sub
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
inc
add
ss
add
ss
add
ss
add
ss
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
sbb
mov
push
mov
inc
xchg
lea
cwtl
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
