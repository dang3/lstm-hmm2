push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
mov
orl
orl
sbbl
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
je
push
push
push
call
orl
orl
adc
xor
neg
neg
cmpl
movl
mov
mov
movl
jmp
movl
jg
push
call
xor
adc
movl
mov
add
add
not
mov
sub
mov
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jbe
push
pushl
push
push
pushl
call
mov
mov
sub
and
sbb
sub
adcl
orl
or
orl
mov
mov
sub
or
lea
cmpl
mov
movl
not
mov
jmp
mov
not
jge
push
push
push
push
push
push
call
or
adc
sub
incl
mov
mov
sub
or
and
xor
xor
and
adc
mov
mov
cmpl
movl
mov
not
mov
jmp
mov
jle
push
push
push
pushl
call
orl
xor
mov
sbb
sub
mov
and
mov
xorl
xor
or
sub
mov
inc
mov
xor
add
mov
mov
add
mov
mov
addl
shrd
shr
mov
mov
xor
xor
addl
or
mov
add
mov
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
pushl
push
push
push
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
movl
or
movl
movl
movl
add
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jle
push
pushl
push
push
pushl
call
andl
notl
andl
orl
addl
sbbl
mov
subl
shl
xor
mov
xorl
push
sbbl
push
push
push
sbbl
call
mov
or
mov
mov
or
mov
xor
mov
mov
cmpl
mov
movl
mov
notl
jmp
movl
movl
jl
push
push
call
adcl
sub
adcl
negl
and
or
movzwl
add
mov
sbb
add
sub
sub
mov
xor
or
adc
lea
subl
mov
inc
mov
andl
or
and
adcl
mov
adcl
or
xorl
xor
movl
cmp
movl
jne
and
mov
or
mov
shrd
adc
shr
notl
mov
sbb
mov
shl
subl
xor
xor
or
mov
movl
cmp
movl
jne
xor
mov
mov
addl
xor
mov
sbbl
mov
mov
add
mov
shrd
andl
mov
mov
addl
xor
xorl
shr
mov
adc
mov
xor
movl
or
movl
shl
sub
mov
mov
subl
mov
add
mov
mov
add
mov
sbb
mov
shrd
cmpl
not
not
mov
mov
jmp
movl
movl
ja
push
push
call
xor
add
and
mov
movzbl
adc
mov
sbb
and
movzbl
sub
cmpl
mov
mov
mov
jmp
movl
jge
pushl
call
sub
mov
mov
or
subl
or
neg
adcl
shr
sbb
mov
mov
sbbl
xor
xor
shl
adc
xor
or
add
mov
mov
andl
jmp
mov
imul
jo
mov
pop
adc
addr16
fisttpl
lds
lods
ss
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
int
mov
mov
jmp
mov
imul
mov
aas
repz
add
jae
and
cli
icebp
mov
ror
out
inc
outsl
jmp
adc
sub
inc
xor
pop
sbb
jno
ret
rcrb
fsubrl
xor
test
pop
les
pop
lds
adc
lea
cld
pop
cmp
jno
jne
cmc
sub
jno
cmp
pop
jg
aaa
bound
aam
push
mov
mov
je
sbb
sub
or
test
divb
add
notl
iret
mov
loopne
xchg
push
inc
or
xor
scas
sub
incb
jb
xchg
pop
mov
lea
pop
jns
fldl
or
adc
push
imul
xchg
repz
fisttpl
stos
fpatan
inc
jl
pop
cmpsb
loopne
push
lea
cli
mov
and
pop
js
imul
ret
into
loop
jne
cld
add
dec
or
sub
std
xchg
lret
jae
adc
gs
xor
aaa
outsb
sbb
dec
hlt
fcoms
xchg
lret
mov
cmp
cmp
and
ds
add
push
mov
add
jge
lds
mov
leave
rcll
loop
xor
inc
add
cmpsl
jns
out
psadbw
xchg
jns
test
sub
mov
lods
cmp
sahf
scas
mov
test
out
clc
jno
mov
mov
movsl
je
stos
sbb
je
pushf
push
xchg
cmpl
pop
or
aas
inc
adc
mov
and
jns
mov
subb
cmpb
rcll
push
push
fldcw
cmp
sub
int
cmp
orl
jo
and
inc
dec
insb
inc
xlat
mov
and
push
and
in
rclb
xor
ss
loop
out
je
push
fwait
cmpsb
aaa
add
adc
or
cmp
faddl
xchg
bound
mov
add
pop
sub
and
sarb
jmp
inc
and
stos
ror
insl
call
lret
lahf
pop
test
xchg
ror
movl
xchg
mov
pop
xchg
add
repz
sbb
sub
sub
cld
leave
testl
mov
fisttpl
dec
enter
and
or
out
cltd
jns
jl
jle
xchg
js
cmpsl
aas
dec
shlb
mov
inc
xor
loope
lret
loopne
ficomps
mov
rcrb
pop
push
sahf
test
cmpsl
push
sub
mov
and
addr16
jge
dec
test
pusha
int3
cmpb
dec
inc
jbe
sbb
mov
addps
movsl
sub
mov
xchg
outsl
mov
sbb
adc
ja
xorl
xchg
shl
xchg
xor
fwait
inc
rolb
push
mov
jmp
sbb
dec
inc
popf
leave
adcl
in
sbbl
std
lock
daa
test
aam
push
dec
fsubs
hlt
ss
adc
aad
cmp
add
fbld
ljmp
xchg
sahf
pop
lods
int
pop
inc
mov
lds
mov
jg
orb
inc
jb
adc
ret
insl
add
xchg
or
outsl
push
and
xchg
sbb
push
pushf
jmp
cwtl
dec
mov
sub
das
out
dec
imul
mov
stc
dec
ret
cmp
sahf
aam
mov
out
pop
outsl
addr16
ds
cli
out
fidivrl
push
mov
cmc
pushf
stos
imul
je
jp
pop
call
push
pop
ds
mov
inc
test
push
ja
mov
mov
es
popa
loop
adc
or
lret
mov
lcall
cld
mov
jnp
insl
dec
adc
mov
add
mov
mov
cmpsb
loop
inc
cs
leave
ss
mov
xchg
dec
out
mov
xchg
ret
or
cli
sbb
ja
and
push
fdivrl
adc
in
scas
jle
jb
jmp
mov
jne
jns
fiadds
dec
mov
mov
fists
add
adc
pop
divb
mov
movsb
add
inc
fucomi
jecxz
aaa
mov
pusha
xchg
jnp
pop
dec
or
aad
mov
jae
fs
inc
test
popa
popa
sub
push
dec
aad
fs
jecxz
gs
sub
jb
movsl
data16
pop
mov
cmpsb
mov
sub
or
mov
mov
sbb
fwait
jo
divb
xchg
adc
add
cmc
inc
divl
gs
std
lret
cltd
sub
dec
into
xor
sarb
xor
cmp
add
xorb
popa
lods
add
jmp
push
sbb
add
lds
repz
mov
xor
mov
sahf
or
dec
mov
loopne
test
xchg
xchg
mov
xor
jecxz
inc
xchg
fstp
leave
add
jns
je
or
jg
lods
cli
inc
mov
shll
mov
add
arpl
pop
jb
mov
adc
inc
mov
pop
jl
outsb
scas
add
inc
xchg
add
sbbb
add
or
jle
mov
mov
jne
out
insb
call
adc
add
jge
aaa
leave
cmp
inc
ljmp
dec
in
inc
rcll
outsb
popa
test
inc
addl
jae
xor
cmc
push
jle
cmpl
cmp
outsb
lahf
jmp
idivb
push
mov
data16
add
sub
mov
add
lods
xchg
mov
adc
dec
or
mov
dec
dec
mov
mov
jg
and
jae
cmp
fldl
dec
bound
repnz
notb
push
lret
push
int3
incb
aam
stos
push
and
jnp
jnp
pop
insl
mull
nop
mov
push
cmc
lea
mov
mov
lret
pusha
mov
jle
jmp
scas
rcrl
jo
inc
test
cmp
cli
fldenv
cmp
xchg
rclb
mov
inc
mov
push
lea
addr16
or
loope
int
adc
or
xor
in
mov
inc
lds
push
test
pusha
aam
scas
fstps
pop
sar
push
mov
adc
mov
inc
sbb
shll
xchg
scas
test
imul
inc
or
lea
pop
fdivs
fs
pushf
jne
daa
sbb
scas
or
mov
addr16
jmp
xor
cs
ja
sub
xor
fs
push
fsubrs
mov
jecxz
stos
mov
cmc
push
xchg
lret
insl
pop
cmp
dec
les
outsl
adc
push
rcll
sbb
dec
mov
jb
cmp
in
mov
mov
sbb
inc
icebp
dec
or
sub
loope
dec
inc
add
pop
testl
rcll
mov
sahf
jbe
stos
mov
arpl
adc
jle
lcall
pop
xchg
cmpsl
es
fcomps
repnz
rorb
pop
sub
mov
mov
xchg
mov
mov
ljmp
lods
rorb
daa
sbb
pop
sub
mov
xchg
inc
sub
or
mov
fstpl
loopne
dec
fisubrl
icebp
pop
dec
cmp
push
pop
test
and
lods
imull
xchg
jb
shlb
xor
loope
pop
jae
jmp
cmpsb
in
es
and
pop
mov
fistpl
adc
mov
in
adc
xchg
jns
jmp
jmp
xchg
jbe
div
mov
or
cmp
mov
sti
notb
xchg
push
mov
cmp
sbb
stos
js
jecxz
jnp
sub
out
sub
lods
mov
sti
rol
inc
xor
mov
inc
mov
test
mov
add
fcomi
in
out
mov
dec
push
pop
sub
push
or
sub
inc
jmp
subb
mov
in
enter
push
mov
fidivrl
xchg
cmp
fcoml
cmc
lret
inc
jle
mov
mov
mull
mov
cmp
push
xor
cmp
inc
js
mov
mov
stos
les
sbb
pop
jbe
sbb
int3
mov
sub
sarl
fsubl
sbb
imul
jbe
push
jp
adc
mov
mov
cmc
or
fbstp
popa
sub
insb
fwait
and
movsw
cmpsb
test
pushf
call
imul
mov
out
mov
sub
pop
negl
push
or
mov
and
and
adc
mov
fnstcw
fcmovnbe
cmpsl
hlt
test
scas
mov
lds
cwtl
pop
jmp
shlb
add
mov
mov
fmuls
sub
cli
mov
dec
cs
push
mov
into
jmp
xchg
mov
in
pusha
leave
xor
mov
fnstcw
aaa
fcmovnu
push
pop
test
dec
mov
cmp
sbb
inc
imul
mov
pop
push
and
and
hlt
out
xchg
aaa
outsb
sbb
or
push
jle
and
loop
adc
ja
subb
test
cmp
jns
adc
syscall
scas
popf
push
mov
ljmp
imul
inc
pop
cs
mov
sbb
jmp
push
in
imulb
push
mov
and
xchg
dec
adc
pop
jns
cmpsb
fcmovne
cmp
or
test
les
pop
push
loopne
cmp
jge
test
rorb
cmp
adc
loop
into
sbb
mov
jbe
rcl
or
and
repnz
nop
mov
mov
incb
and
subb
popa
ja
xchg
rclb
xor
cltd
inc
mov
dec
and
ret
jecxz
sbb
iret
fldenv
fisttpl
sub
ret
and
lahf
mov
jmp
aad
insb
into
sbb
daa
or
push
xchg
jle
rcrb
sub
fcomp
hlt
addl
iret
lret
push
fisubl
or
rclb
pop
jbe
out
cmp
fxch
jl
fdivs
fcompl
xor
push
and
mov
inc
je
into
rcll
test
push
or
ret
xchg
push
mov
or
ret
xchg
xchg
imul
push
loope
out
and
push
pop
lcall
fldt
push
popf
iret
xchg
sarb
add
adc
ficoms
rclb
stos
mov
frstor
daa
faddp
lods
ss
or
pop
sbb
add
lods
sti
xlat
pushf
dec
int3
jge
sub
insb
xchg
loope
mov
aas
inc
pop
mov
xchg
negl
pop
lcall
push
cwtl
cltd
push
sbb
add
frstor
mov
mov
shl
sti
test
cmpsl
pop
out
subl
mov
mov
ret
test
call
xor
xchg
cmp
adc
test
inc
lret
js
orl
push
xor
movsb
sbb
in
mov
adc
jbe
lock
jmp
add
out
dec
inc
mov
aaa
cmp
scas
loop
jmp
xor
ja
out
cld
jge
sub
cld
out
ljmp
mov
lahf
loope
mov
or
dec
adc
js
pop
or
sbbb
std
cld
sub
inc
push
pop
in
pop
icebp
cmp
cmp
lret
jnp
or
dec
jae
xor
out
addr16
mov
mov
mov
dec
inc
aam
outsb
mov
push
or
sub
mov
enter
subb
std
mov
fnstsw
cmp
fldl
fcmovnb
js
and
stc
ljmp
pop
and
xor
jge
fistps
popa
fdivl
dec
and
pop
push
or
inc
and
faddl
xchg
or
in
fstpl
jge
pop
enter
push
out
pop
vpor
mov
test
icebp
jbe
push
cmp
out
sbb
mov
add
iret
mov
xor
and
imul
loope
push
aas
ds
inc
in
lock
xchg
xchg
shlb
push
lods
stos
sub
lret
and
pop
leave
or
xor
cmpsb
xor
rorl
sub
in
in
ja
jge
add
push
std
aas
imul
inc
int
jg
divl
divb
test
int3
mov
mov
inc
ja
xchg
sbbl
nop
mov
push
dec
sbb
mov
adc
stc
daa
mov
sub
and
rcr
cmpsl
push
cmp
outsl
int
sbb
movsb
sub
adc
lods
jno
enter
imul
test
mov
cmp
xchg
pop
repz
jg
cmpsl
loopne
adc
cmp
dec
dec
xchg
lea
popf
mov
dec
cmpsb
mov
addb
or
and
pop
cld
and
mov
movsl
pop
and
xchg
mov
sbb
cmp
sub
sub
mov
into
lods
sub
mov
ljmp
loopne
movsb
lahf
mov
and
cld
aaa
insl
rol
cmp
pop
aaa
leave
into
ja
dec
fcmove
out
out
mull
rol
push
aas
mov
std
inc
imul
inc
xor
push
push
fnsave
scas
sub
jle
test
dec
jae
out
xor
mov
pop
ljmp
fcmovnb
sub
sub
xchg
jge
cmpsl
adcl
les
cwtl
mov
leave
sbb
xchg
scas
aaa
cmp
lcall
rorl
in
cltd
leave
outsb
imul
xchg
or
out
pop
mov
mov
push
push
lcall
fidivrl
xchg
jmp
xor
fisubrl
lret
mov
pop
call
xchg
mov
loope
fcoms
sub
and
sub
flds
push
mov
out
push
out
nop
sbb
aaa
pop
push
fcompl
cmpsl
test
mov
jo
out
mov
push
out
stos
test
jg
jno
mov
movsb
xor
into
in
es
adc
lods
sbb
inc
stos
sub
cmpb
loopne
jp
sub
mov
movsl
in
mov
cmp
mov
mov
jmp
aad
xchg
in
fsubs
icebp
loopne
mov
adc
jp
adc
and
inc
inc
daa
inc
outsb
mulb
das
nop
pop
js
jecxz
aam
addr16
mov
lahf
xchg
mov
hlt
ljmp
mov
mov
jb
adc
inc
lods
mov
mov
xor
sahf
xchg
cmp
add
cld
movsl
push
dec
hlt
imul
rcr
jo
cmpsl
iret
aas
imul
add
mov
outsb
lahf
popa
cmp
adc
mov
les
mov
incl
je
or
ljmp
mov
mov
add
add
cld
pop
mov
add
subb
out
pushfw
shll
and
sbb
pop
xor
jmp
rorl
lods
jno
pop
in
xchg
outsl
or
sbb
xchg
cmp
inc
or
test
dec
pop
sahf
ret
movd
pop
jnp
mov
imul
add
jge
adc
loopne
mov
or
fisubs
shll
jb
inc
jno
dec
mov
add
mov
out
adc
or
inc
mov
and
push
stos
add
adc
pop
jb
pushf
sbb
std
adc
adc
popl
int
mov
mov
pushf
popf
or
iret
mov
pop
out
shlb
xorb
mov
and
inc
push
enter
imul
xchg
leave
pop
and
stc
mov
aad
mov
jnp
scas
imul
mov
testb
call
repz
jge
cmpl
fsubrs
cli
out
sti
fistpll
pop
jecxz
rol
orl
ds
add
js
ss
sub
pop
cld
out
mov
mov
push
mov
ss
and
push
xchg
mov
xlat
ljmp
insb
out
ds
sub
dec
sbb
add
shlb
adc
or
mov
cmp
sub
inc
lods
loop
dec
cs
xor
ja
out
testl
fbstp
fstps
idivl
repnz
xor
lret
movsb
xchg
stc
cmp
enter
xchg
lret
jno
xchg
xor
loop
stos
lea
lahf
push
mov
mov
mov
enter
pusha
fdivrs
pop
xchg
jmp
jo
std
pop
inc
jae
or
or
or
adc
jns
push
push
jno
scas
xlat
cld
dec
in
dec
add
out
and
sub
jne
ret
neg
mov
sub
pop
leave
mov
cmpb
scas
lcall
dec
xor
mov
xchg
adc
stc
mov
es
iret
ret
decb
sbbb
fldcw
or
jge
sbb
xchg
lret
mov
scas
cmp
push
call
xor
pop
cmp
mov
cs
lahf
roll
or
incl
push
test
push
add
add
sub
add
int3
aas
sbb
cmpsl
jge
mov
pop
dec
push
loopne
xor
fstpt
push
shrl
cld
nop
insl
ret
sub
cmp
and
into
bound
mov
or
mov
mov
imul
add
faddl
and
lods
out
popf
dec
sbb
icebp
fwait
push
cmp
adc
mov
push
movl
mov
add
pop
xchg
mov
test
adc
add
mov
cmpb
mov
jmp
lret
scas
inc
in
outsl
out
icebp
lea
cmp
int3
mov
inc
and
aas
pushf
or
movsl
xor
lret
imul
push
imul
das
repz
push
jb
adc
call
push
int3
repnz
cwtl
and
ss
nop
xchg
jbe
stos
push
adc
jno
repz
inc
addr16
push
jo
lock
inc
add
bound
clc
sbbl
leave
fs
outsb
jno
pop
sbb
mov
adcb
add
xchg
or
pop
mov
inc
adc
jb
push
jne
mov
xchg
push
push
mov
mov
or
nop
pushf
jmp
in
ljmp
cmpsb
fs
popf
imul
sahf
std
cmpsb
fldcw
sub
mov
loopne
xchg
push
iret
lret
imul
ja
bnd
add
mov
xchg
fisubs
out
mov
cld
lret
loopne
push
repnz
fs
aad
cmpsb
inc
ret
xor
mov
sub
push
add
push
aaa
xor
ljmp
mov
inc
repnz
inc
loope
sarb
xor
imul
add
cmp
cmpsb
mov
mov
push
fnstenv
loop
test
mov
mov
imul
scas
into
sbb
mov
test
sub
jns
mov
mov
push
jmp
je
and
sub
xchg
pop
adc
fwait
lahf
xchg
cmp
movsl
push
mov
lcall
push
adc
aaa
lret
mov
sbb
xchg
leave
nop
add
add
push
mov
push
sbb
sub
mov
mov
test
jo
sti
das
loop
xchg
inc
jo
mov
divl
pop
pushl
mov
xlat
dec
rcl
pushl
into
sbb
xchg
dec
jne,pn
or
xchg
add
sub
xchg
xlat
aam
and
in
dec
or
sub
pop
test
xchg
adc
inc
xchg
mov
lock
scas
dec
cltd
ss
out
inc
jecxz
sub
dec
mov
js
push
dec
mov
mov
gs
icebp
daa
sbb
pop
movsl
cmp
sti
sbb
js
xchg
sahf
in
call
pop
pop
adc
pop
add
or
cld
jno
sub
mov
xor
cmp
push
outsl
adc
sarb
xchg
outsb
jb
shll
add
lcall
jnp
pusha
iret
popf
cmp
ss
or
mov
out
pop
ret
cmc
or
mov
sbb
popa
ret
dec
cmpsl
adc
add
subb
sub
add
aam
fidivl
cwtl
add
adc
mov
ret
inc
mov
xchg
inc
pop
cmp
cs
fwait
popl
lods
clc
or
push
shl
inc
and
lock
das
movsl
inc
cmpsl
xchg
dec
mov
loope
jp
sbb
mov
jle
xchg
xorl
dec
outsb
cli
stc
xchg
sbb
mov
lods
dec
pop
pusha
aad
push
ljmp
cwtl
and
adc
test
push
ret
cmc
mov
flds
popf
aas
scas
out
mov
lret
dec
aaa
mov
and
movsl
xchg
mul
clc
je
and
mov
lret
push
and
bound
jno
xor
inc
inc
outsb
jmp
jbe
sub
fidivrl
ja
sbb
mov
fcompl
ret
in
rclb
enter
mov
xor
pop
mov
lods
dec
dec
in
cmc
dec
pop
xor
shlb
das
xor
repz
jbe
leave
pop
xor
aas
inc
lret
jmp
jae
shl
push
shr
leave
addr16
mov
pop
and
pop
pop
cmpsl
xchg
push
and
adc
mov
adc
push
add
ja
mov
scas
aad
scas
gs
mov
lahf
pop
mov
adc
jge
shr
mov
cli
bound
dec
int3
into
cmp
jne
call
adc
mov
sbb
cmp
push
jnp
lret
leave
sub
jmp
add
mov
lret
sbb
jp
jo
push
repnz
je
imull
jmp
pop
jg
outsl
jbe
and
push
adc
push
loope
xor
sbb
mov
xchg
int3
add
push
dec
pop
dec
imul
nop
mov
jnp
and
pop
mov
push
je
inc
add
mov
mov
fcmovbe
lods
inc
insl
cli
pop
xor
cmp
fstpt
mov
cmp
std
repnz
stos
std
and
and
inc
push
pop
inc
xor
push
lea
gs
cmpl
pop
mov
pop
inc
les
sbb
mov
sub
push
mov
cmp
mov
ss
push
ret
lret
popf
cmc
pop
push
test
pop
mov
xchg
loope
xchg
lret
int
shll
call
adc
sahf
stc
test
out
in
push
repz
lret
inc
add
repnz
push
mov
idivb
bound
mov
repz
fs
lret
sub
adc
pop
jle
test
nop
movsb
mov
or
cmp
push
push
inc
xor
int
bound
mov
pop
pusha
imul
cmp
cwtl
adc
test
add
pop
dec
mov
rclb
fnstenv
dec
push
arpl
or
stos
loop
test
jg
mov
pop
js
push
nop
int
aas
mov
lods
ds
mov
push
out
dec
mov
sbb
addr16
insb
push
in
pop
and
pop
mov
arpl
test
push
xor
pop
js
rorl
lret
inc
adc
das
and
jp
out
test
icebp
dec
xor
mov
cmp
sbb
movsl
fcoml
jge
pop
mov
sarl
cmp
shrb
mov
push
scas
out
and
aad
xchg
or
or
les
enter
push
lcall
test
movsb
cmpb
xchg
xchg
inc
test
lahf
leave
and
mov
sbb
add
jecxz
jecxz
pop
xchg
xchg
and
mov
push
pop
movsb
mov
jecxz
repnz
adc
mov
sbb
jmp
dec
or
pop
sahf
rcll
jns
xchg
leave
sub
fbstp
mov
sahf
popa
gs
push
call
pop
push
jl
mov
jo
xor
loop
mov
and
dec
and
jno,pt
xchg
and
cmp
cmp
pop
mov
sti
xchg
mov
push
fnstenv
int3
mov
xchg
dec
sub
jmp
in
cmpsb
ja
push
sub
mov
inc
in
xor
insb
sub
rcrl
pop
dec
jb
ja
fistpl
dec
mov
or
mov
and
inc
lods
xchg
add
push
jne
decl
ret
pusha
push
aad
xor
sub
out
vmovaps
arpl
mov
scas
xlat
ss
jecxz
mov
pop
ret
or
sub
mov
test
sub
gs
ja
mov
cli
push
jge
pop
ss
xor
gs
mov
js
jl
xor
push
add
mov
data16
dec
loopne
jge
mov
jmp
es
fsts
jo
push
mov
push
insb
sahf
push
add
jge
jbe
sti
scas
push
push
mov
pushf
test
xchg
stos
xlat
inc
stos
in
icebp
adc
fucom
in
push
jl
test
cs
out
or
adc
fs
jge
iret
sti
out
jp
iret
mov
mov
pop
outsb
test
fbld
xchg
test
dec
jge
mov
gs
cmpsl
fadds
data16
aam
ja
in
cli
mov
add
pop
iret
addr16
dec
test
pop
popa
sub
stos
xor
lock
dec
mov
mov
sub
push
movsb
dec
shll
test
andl
test
cmp
std
pop
into
push
andb
outsl
sub
push
mov
popl
inc
fistpl
jnp
mov
rolb
call
and
lcall
repnz
add
xchg
hlt
mov
and
jbe
imul
mov
push
mov
lods
jne
movl
in
pushf
out
pop
cpuid
popa
jg
adc
rcrl
scas
jle
cmp
xor
jno
adc
pop
out
cmp
arpl
sbb
int3
or
push
loopne
out
mov
or
subb
adc
pop
repnz
fs
xchg
pop
jo
ja
mov
out
xchg
push
lahf
cmp
lea
shl
loope
xchg
dec
dec
pop
push
test
filds
and
adc
scas
jnp
xor
and
outsl
jmp
sub
aad
int
jmp
xlat
data16
dec
add
xlat
jge
cmp
ss
adc
insb
xor
add
pop
dec
rorb
dec
sbb
lea
stc
push
stc
outsb
pop
sub
movsl
popa
cmpsb
insl
movd
cmp
jg
push
push
push
pop
dec
inc
bound
pop
fs
repnz
jg
mov
stos
cmp
leave
lods
xor
add
popf
xchg
xchg
add
sub
jo
dec
scas
hlt
cmpsb
pop
mov
pop
std
jns
fidivs
testb
decl
push
xchg
mov
movsb
push
jecxz
cmpsl
and
push
mov
pop
push
cltd
pop
lcall
shrb
xchg
adc
hlt
and
push
orb
xlat
imul
jo
and
movsl
sahf
enter
in
jbe
jge
dec
fwait
test
data16
pop
mov
jl
addr16
adc
pop
add
arpl
sub
pop
inc
fisttps
rcrb
popa
mov
dec
out
sub
xchg
add
sbb
xchg
ret
int
dec
lahf
push
cltd
scas
mov
mov
mov
push
imul
subb
ret
insl
jg
pushf
xchg
aad
les
xor
sub
iret
cmpl
push
jmp
faddl
mov
mov
cltd
add
popf
cmpsl
push
push
mov
xor
mov
lock
enter
inc
mov
sbb
rclb
cmp
ficomps
or
imul
mov
mov
push
adc
push
popa
sub
or
js
xor
push
out
sbb
mov
call
pop
shrd
shr
sbb
mov
mov
mov
orl
xor
xor
or
orl
shl
addl
lea
or
mov
cmpl
mov
mov
jmp
mov
movl
jl
pushl
pushl
push
push
call
sbb
movzbl
xor
mov
addl
sbbl
mov
sbbl
shrd
andl
shr
xor
mov
and
mov
mov
sbb
xor
movzbl
or
mov
mov
subl
xor
or
orl
shl
imul
mov
cmpl
mov
mov
movl
jmp
notl
jne
push
push
push
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
movl
or
and
sub
subl
sub
sbbl
mov
adcl
shrd
mov
mov
xor
decl
shr
cmpl
movl
movl
jmp
movl
movl
jl
pushl
push
push
call
adc
or
or
sbb
xor
neg
sbbl
mov
mov
sub
mov
mov
xor
or
negl
shl
xorl
sub
mov
movl
cmp
mov
mov
movl
jg
and
mov
mov
xorl
shrd
mov
xor
mov
xor
shl
xor
or
shr
cmpl
mov
movl
jmp
movl
movl
jb
push
push
pushl
push
call
neg
xorl
neg
xorl
inc
andl
adc
mov
addl
mov
cmpl
mov
mov
jmp
movl
jne
pushl
call
adc
sub
sub
and
sbb
mov
cmpl
mov
movl
jmp
movl
ja
pushl
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
shrd
shr
mov
mov
cmpl
mov
not
jmp
movl
movl
jl
call
dec
movzwl
sbb
and
xorl
movl
add
mov
xor
movl
xor
adcl
or
xorl
shl
subl
imul
adcl
sub
movl
jmp
movzwl
sbb
mov
mov
cmpl
movzwl
mov
movl
not
jmp
movl
movl
jg
push
push
push
pushl
pushl
push
push
push
pushl
call
adcl
sub
sbb
adcl
xorl
not
xor
xor
sub
mov
decl
shrd
mov
decl
mov
xor
xorl
shl
decl
xor
or
addl
shr
mov
mov
mov
and
mov
sbbl
shrd
sbbl
shr
decl
mov
cmpl
movl
not
jmp
mov
movl
je
push
call
and
adc
mov
sub
mov
movzbl
or
add
xor
xor
add
mov
sub
sub
mov
mov
xor
xor
orl
or
addl
shl
xor
add
add
mov
mov
xor
shrd
movzbl
sbb
shr
mov
mov
orl
xor
shl
xorl
xor
or
sbb
mov
xor
or
sub
mov
movl
sbb
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
push
push
push
push
push
push
push
pushl
call
dec
movzbl
sbb
sub
and
mov
mov
sub
add
mov
movl
mov
mov
sbb
mov
xorl
jmp
pop
pop
iret
pop
cltd
sbb
dec
fldenv
push
aaa
jbe
pop
adc
pop
adc
aas
into
mov
in
ficoml
jnp
addr16
es
rorb
pop
add
ret
xor
jg
push
gs
dec
in
pop
mov
into
in
and
mov
mov
notb
xchg
pusha
jb
ret
xchg
negl
jbe
sub
adc
pop
lcall
lret
aad
scas
call
inc
data16
sub
xchg
mov
jbe
ja
cmp
fs
cmpb
mov
jne
fs
cmp
jl
nop
xchg
jl
stc
repz
mov
sbb
std
pop
jo
outsl
outsb
das
les
mov
lahf
or
push
scas
subl
mov
xchg
shrl
push
ljmp
sbb
cmp
jle
scas
mov
mov
mov
push
and
fdivr
cmp
dec
pop
call
sti
adc
cmc
ljmp
icebp
divl
dec
or
ja
pop
push
add
fdivs
dec
inc
mov
or
mov
mov
dec
out
nop
das
lret
es
data16
cli
push
push
dec
into
lea
je
lods
int
arpl
fldl
mov
xchg
sub
jmp
or
loope
pushf
cli
jbe
imul
jle
lds
cmpsb
sti
aaa
lret
mov
into
xchg
fwait
mov
mov
in
mov
repz
lea
int3
inc
inc
inc
mov
cmp
xor
hlt
addr16
cs
lret
rcll
mov
adc
push
ret
pop
ret
xchg
xor
fimuls
ret
xchg
cld
mov
mov
sub
sub
aaa
or
popf
fmull
lret
lret
dec
arpl
pop
in
mov
aam
dec
mov
dec
shl
inc
jp
pushf
in
mov
adc
in
mov
out
outsl
aad
test
xchg
xor
mov
push
leave
push
rclb
cmp
insb
add
fwait
jne
pop
inc
cld
xchg
sbb
mov
movsl
dec
add
movsb
and
adc
dec
dec
repnz
cmp
es
or
pop
ret
push
sub
inc
sub
sbb
rorl
outsb
sub
iret
jns
scas
sub
jge
filds
loop
jmp
jno
add
out
stc
lcall
lods
mov
jnp
ficoml
testl
xchg
sti
lods
mov
mov
shl
punpckhwd
and
scas
mov
imul
add
dec
sahf
aaa
push
xorb
daa
jle
sub
mov
int
roll
les
pop
fwait
mov
jo
in
hlt
or
mov
inc
and
mov
sub
inc
jmp
lock
and
ss
ret
cld
add
pop
adc
cs
pop
cmp
stos
sub
sbb
sbb
ds
enter
sbb
dec
bound
cmp
jb
in
push
ret
inc
mov
jne
pop
sub
sub
fistl
adcb
int3
aaa
xchg
imul
xor
repnz
cmp
xlat
out
int
mov
pop
jnp
fsubrs
loop
mov
add
out
mov
inc
mov
outsb
scas
push
add
addl
mov
test
orb
mov
loop
xchg
nop
pop
adc
in
mov
fs
or
leave
cmp
js
mov
outsl
or
sub
xchg
cmp
cwtl
stos
ret
out
lods
and
shll
loope
jg
in
sbb
sbb
sbb
mov
pop
inc
adc
and
mov
int
scas
and
pop
call
mov
outsl
jp
ficompl
mov
push
lea
mov
nop
add
pusha
pop
cld
stc
pop
mov
pop
xor
sub
lock
inc
shlb
push
inc
mov
fnstsw
xchg
jae
xchg
lcall
pop
imul
sub
andb
lcall
jmp
ret
cmp
repnz
pop
xor
aad
fcoml
bound
mov
lahf
xchg
dec
adc
dec
xor
cli
inc
test
repz
dec
cmp
mov
aas
fcomip
add
mov
jne
inc
sbb
push
mov
sub
jae
mov
out
adc
sti
xchg
cmc
mov
stc
aad
cmp
aaa
mov
lea
int
mov
dec
jnp
stc
leave
jmp
sar
dec
jle
push
and
testl
dec
repnz
nop
xor
sahf
std
mov
aad
movaps
add
in
push
push
negb
jb
jne
stos
scas
div
sbb
jae
add
mov
cltd
dec
push
xor
adc
add
cltd
out
cltd
and
adc
push
mov
cmp
jnp
pop
out
lods
inc
or
mov
pop
dec
leave
lds
addr16
xchg
fmulp
aam
in
in
mov
mov
xor
inc
shll
push
in
push
out
mov
pop
sar
mov
mov
js
fistpl
xlat
sbb
add
outsb
aam
jbe
popf
add
fcoms
rcl
push
push
rorl
xlat
cmc
mov
sbb
fildll
pop
mov
lea
mov
add
orb
cltd
ja
inc
dec
jg
mov
daa
cmpsb
in
jmp
mov
shlb
add
bound
cwtl
repnz
or
aaa
push
push
decb
fisubl
aas
fnstsw
js
push
xchg
dec
test
jmp
push
and
scas
test
mov
xchg
xchg
jno
or
push
mov
clc
bnd
fimuls
cmp
xor
add
movsb
bound
push
or
push
shll
mov
hlt
or
inc
shrl
jg
cmpsb
dec
mov
insl
repz
neg
test
sbb
out
test
xchg
pop
outsl
outsl
mov
pop
cmp
cmc
dec
cltd
je
inc
and
jb
lock
leave
in
in
int
movsl
mov
or
pop
mov
jl
pop
in
data16
xlat
insl
ljmp
sub
in
mov
mov
and
and
outsb
mov
adcl
test
scas
rcll
mov
mov
inc
sub
adc
push
addr16
aas
inc
call
mov
xchg
daa
movsb
mov
jae
push
scas
ficompl
in
mov
cli
sub
aad
addr16
xor
jne
test
add
mov
xchg
jecxz
pop
dec
xchg
cmp
inc
mov
jne
ror
pop
cltd
dec
icebp
inc
inc
data16
leave
jbe
outsb
out
out
std
xchg
sar
mov
test
test
and
sub
xchg
sub
andps
lods
and
jae
pop
xor
mov
adc
add
icebp
sbb
loop
mov
negl
mov
xor
xor
pop
addr16
lea
mov
testl
lret
cli
fstps
outsl
dec
or
adc
mov
dec
push
out
cmp
mov
fsubs
xor
mov
mov
sub
inc
repz
sub
insb
lahf
jae
cmp
aaa
mov
sahf
or
sahf
mov
cmpb
in
lea
or
outsl
inc
loopne
mov
mov
inc
orb
sbb
cmpl
and
std
fildll
cmc
or
lods
xchg
cmp
clc
pop
inc
imul
pop
push
hlt
xchg
mov
test
push
mov
sarb
and
enter
lds
jae
xor
arpl
push
dec
stc
dec
sub
xor
xchg
add
addr16
pop
jl
adc
test
stc
inc
test
mov
loopne
popf
sbb
leave
ret
and
inc
add
mov
lcall
dec
xchg
lret
in
pusha
pop
ret
stc
cli
int3
adc
jle
adcl
and
lock
cmp
pop
dec
cld
scas
push
cli
test
popa
imul
sub
popa
mov
push
scas
pop
and
fwait
add
aad
adc
es
rorl
cmp
loop
push
jns
xor
mov
pushf
sbb
inc
int3
call
cmpsl
loope
mov
out
fwait
aaa
repnz
sahf
shrb
jge
inc
lds
adc
push
dec
pop
add
cmp
lods
xchg
cli
or
mov
cmp
in
mov
dec
inc
mov
mov
mov
sub
xlat
sti
and
sbb
push
jp
cmc
repz
jo
dec
test
fisubrl
into
testb
loopne
mov
enter
rcrb
sub
mov
std
xor
xchg
mov
push
imul
adcb
sbb
add
cmp
fstl
ljmp
test
inc
fiaddl
lds
cwtl
inc
add
mov
add
pusha
gs
scas
fcmove
push
das
cltd
ljmp
mov
push
mov
repz
lea
loopne
push
addr16
mov
dec
dec
mov
adc
arpl
mov
scas
ds
and
int
mov
fbld
loope
inc
inc
dec
add
jmp
shll
xor
pushf
adc
out
popf
xchg
icebp
push
jmp
xor
icebp
hlt
jge
adc
lea
mov
push
ja
aaa
inc
mov
daa
or
lock
or
push
addr16
dec
push
cmp
outsl
mov
cmpsl
or
mov
pusha
add
cmp
pop
lock
repnz
jl
mov
cmpsb
popf
push
and
mov
xlat
out
sub
lds
gs
push
and
mov
mov
pop
out
int
into
push
jb
or
pop
mov
aad
add
fwait
dec
outsl
adc
incb
push
jnp
pushf
shrb
iret
loopne
push
pop
push
add
mov
jmp
sub
test
fs
shll
mov
cmp
idivb
cwtl
fcoml
out
nop
pusha
out
loop
xor
push
inc
sub
sub
mov
mov
adc
cmp
xor
sahf
or
stc
lods
inc
cmpsl
or
fs
inc
pop
loopne
rcrb
adc
andb
test
xchg
mov
test
adc
xchg
push
lret
and
xor
das
fs
push
pop
pop
add
or
lcall
pusha
or
push
in
fcoms
jbe
or
arpl
insb
xchg
stos
and
stc
mov
stc
xchg
dec
insb
jo
popa
xlat
fnstcw
cmp
loop
sub
enter
xor
repnz
inc
xor
fisttps
out
addr16
cmpsb
sbb
mov
out
adc
or
mov
xchg
lea
out
test
popl
or
adc
dec
mov
xor
aas
dec
loop
xchg
shl
out
rclb
out
aaa
ja
and
fs
dec
pop
mov
enter
mov
imul
xchg
loopne
lcall
and
in
mov
iret
inc
dec
xchg
sarb
mov
pusha
xchg
inc
icebp
or
arpl
popa
or
hlt
sahf
fidivrs
rclb
iret
sti
ret
push
dec
js
popa
leave
rcrb
test
adc
add
shll
imulb
jl
push
pop
mov
fsts
pop
or
outsb
sub
dec
mov
das
xlat
in
sub
insl
imul
cmp
jle
pop
add
xchg
sbb
cmp
add
les
jge
shll
xor
adc
fisubrl
gs
mov
xor
fsubl
cli
nop
xchg
aaa
pop
and
cmpsb
lods
enter
xor
mov
insb
icebp
and
sbb
push
jae
push
xor
arpl
xchg
jno
popf
mov
rorb
dec
pop
mov
addr16
push
xorps
icebp
inc
imul
je
or
je
insb
or
clc
xor
dec
mov
sbbl
imul
pop
nop
inc
fsubrp
ret
xor
sahf
stos
xor
dec
xchg
push
daa
rorb
pop
sub
push
pop
jmp
xor
xchg
push
push
and
repnz
popf
pop
arpl
addb
cmp
decb
repnz
shll
adc
test
aas
push
and
add
jecxz
scas
mov
sbb
call
mov
inc
fnsave
lret
xchg
pop
sbb
out
rclb
xlat
jae
bound
sbb
pop
loope
pusha
pop
fsubrs
movsl
sbb
ja
mov
push
mov
lea
addr16
jnp
push
in
pop
out
and
pop
ljmp
sbb
fidivl
adc
lea
aas
cs
and
insl
adc
sbb
enter
push
ret
pop
or
aaa
imul
fwait
ljmp
inc
cmpsb
cmp
arpl
mov
xor
shll
sbb
xor
call
loope
pop
enter
mov
shlb
notb
xchg
xchg
into
cltd
jmp
in
enter
cmc
dec
jb
insl
cmpsb
jno
xchg
ljmp
push
fwait
stc
imulb
shll
rcrb
add
in
adc
sub
inc
xchg
adc
ss
rorb
hlt
inc
shl
cmp
dec
adc
fs
sub
jb
sbb
gs
call
add
in
aaa
mov
mov
insl
aaa
rolb
add
pop
cwtl
mov
and
les
jmp
cmp
lds
push
adc
cmc
inc
mov
pop
sahf
add
sbb
mov
fldenv
xor
sub
into
add
in
lods
inc
and
xor
shll
xor
mov
fisubl
ja
loope
lds
int
sbb
cltd
cmp
negb
negl
adc
sbb
shl
mov
or
and
aaa
lret
mov
dec
test
lahf
xchg
pop
test
xor
jle
xor
and
inc
inc
inc
out
xor
ja
xor
jmp
fistpll
xchg
dec
cmp
add
inc
scas
jb
cmp
pop
cli
sbb
and
or
xchg
aam
pop
test
adc
out
adc
adc
inc
loopne
punpckldq
xorb
jmp
xchg
cwtl
aam
xchg
xor
lret
outsl
out
dec
cwtl
jbe
cld
sbb
push
cmp
mul
ja
mov
lahf
pusha
jno
and
push
insb
test
or
es
jle
cmc
pop
and
movsb
xchg
scas
push
cs
cli
mov
fildl
lods
icebp
xorl
lret
out
dec
xchg
aaa
mov
pop
push
add
rcrb
inc
fwait
mov
xchg
mov
lcall
or
jnp,pn
adc
clc
sahf
adc
xchg
pop
ljmp
ds
js
testl
inc
adc
cmpsl
popf
push
in
imulb
movsl
sbb
ds
mov
xchg
fwait
push
push
lock
loop
xchg
jl
incl
xchg
nop
sub
lret
into
ljmp
and
in
lock
mov
sbb
mov
push
or
outsb
mov
lcall
sti
leave
push
out
push
dec
mov
sbb
or
xor
xchg
push
xchg
ret
pop
xchg
aas
xchg
xchg
mov
pop
inc
sub
inc
mov
in
dec
bound
int3
ljmp
add
mov
xlat
stos
xchg
mov
in
cmp
scas
fisubl
sahf
xchg
pusha
or
leave
add
push
fs
jecxz
mov
xchg
aad
push
lsl
cmpsb
mov
push
insl
out
cmpsl
nop
movl
mov
mov
xor
pop
adc
fs
sub
push
enter
mov
mov
cmp
or
and
mov
sbb
sub
notl
lret
pop
aad
bound
mov
popl
data16
stc
das
dec
jecxz
push
mov
pusha
sbb
out
push
mull
inc
out
cmpsl
out
inc
rcrl
movsb
mov
xchg
add
icebp
sub
fstps
mov
repz
in
xchg
or
inc
stc
dec
cmpl
push
sub
cmpsl
add
fmuls
shrl
xchg
rorl
outsb
fistpl
outsl
in
dec
pop
xchg
xchg
imul
js
repz
add
cli
ss
push
sub
mov
or
lret
jp
mov
cmp
or
sub
ljmp
clc
cmpsb
xor
notl
inc
mov
int
ret
andl
mov
xchg
adc
aam
imul
mov
push
mov
lea
xor
ficoml
int
jnp
jb
dec
cmpsl
leave
sub
pop
js
stos
jmp
aam
imul
pop
jmp
mov
mov
popf
xchg
mov
dec
gs
jle
out
and
cmpsl
push
or
dec
jnp
mov
in
je
push
out
push
mov
testl
sbbl
in
jmp
cmp
jmp
jns
rol
push
inc
fcmovu
shl
sub
cwtl
clc
mov
mov
xchg
or
icebp
cwtl
sub
out
es
xchg
push
dec
add
adcb
jmp
add
daa
dec
les
mov
push
scas
or
inc
and
lahf
inc
pop
pushf
mov
pop
shl
inc
dec
mov
addb
xchg
and
cmp
mov
shrb
test
int3
bound
pop
sbb
add
mov
add
movsl
mov
je
fidivs
xchg
fcom
stos
loope
in
pop
jp
sti
or
mov
mov
add
or
imul
enter
or
sbb
jno
sbb
xchg
iret
lcall
xor
sahf
test
mov
mov
test
icebp
lds
inc
sub
shlb
mov
add
jecxz
mov
movsl
test
repnz
inc
mov
subb
add
mov
pop
test
xchg
scas
outsl
jnp
xchg
jmp
dec
lock
cmpsl
test
sahf
lods
mov
lret
and
inc
inc
sub
movsb
and
mov
sbb
enter
inc
jns
ret
addr16
pop
lock
push
lret
push
push
in
cmp
mov
sub
cwtl
roll
xchg
and
sub
add
push
addr16
testl
xchg
and
arpl
add
dec
mov
jmp
adc
leave
pop
jnp
mov
adc
jp
out
je
lock
pushf
outsb
push
adc
popa
inc
inc
lret
in
out
dec
ja
or
mov
lock
sbb
lahf
or
jl
pop
xchg
mov
aas
into
and
data16
cmp
loopne
cli
xchg
mov
inc
and
sub
ds
cld
aam
pushf
jo
pop
xor
pushf
xorl
fmul
mov
call
lds
stos
add
cltd
mov
arpl
inc
cmc
mov
sub
push
loop
jp
jne
jge
nop
inc
out
pop
mov
ds
loop
ret
fstps
scas
out
popf
mov
lret
aas
xor
jg
loop
adc
scas
test
stos
in
and
pop
xchg
jbe
dec
mov
xor
mov
push
pop
mov
fwait
pop
jle
int
and
jne
cs
les
xor
xchg
sub
daa
adc
in
lahf
and
dec
loop
negb
dec
stc
xor
sub
mov
ja
dec
inc
rclb
filds
insl
jp
aad
push
popf
push
sbb
or
mov
jae
std
fsubs
leave
out
repz
and
mov
cmpsb
pop
push
sub
imul
pop
scas
sub
test
fmul
mov
fisubl
mulb
and
stc
dec
leave
fistpll
inc
je
test
cmpsb
into
jns
daa
minps
hlt
dec
cltd
push
xlat
xchg
adc
repz
es
popa
js
xchg
jmp
mov
or
adc
mov
cs
insl
push
adc
sbb
andb
dec
iret
add
arpl
ss
inc
adc
xchg
scas
les
cld
ret
xlat
jb
loop
in
pop
mov
pop
mov
ret
lods
sub
popa
push
faddp
cltd
xchg
jo
ret
shlb
xchg
lret
outsb
push
out
xchg
xor
out
sbb
adc
pusha
mov
in
in
mov
jg
lahf
test
fmuls
sahf
je
fwait
mov
int3
lea
fs
fildl
loopne
int
jmp
cmp
sbb
in
or
ret
fwait
lret
mov
and
dec
js
jb
jo
dec
sub
xor
jae
pushf
cmp
mov
je
stc
jecxz
inc
nop
ja
jmp
loope
cmp
lods
daa
add
movsl
not
mov
dec
hlt
shlb
add
lahf
dec
les
push
push
or
xchg
push
mov
mov
test
and
add
push
mov
dec
cld
mov
fwait
sub
lea
lret
dec
arpl
jecxz
ficomps
add
dec
lret
push
lcall
scas
mov
lret
xchg
cmp
mov
and
xor
push
and
mov
sub
mov
fidivrl
shll
bound
bound
repnz
jns
and
clc
dec
movsb
mov
pop
pop
hlt
jmp
imul
mov
scas
gs
repnz
sub
cmp
jbe
jl
ds
adc
dec
adc
xor
inc
push
or
mov
loope
push
pop
imul
call
in
dec
mov
and
daa
fistl
dec
inc
mov
repz
or
xor
jns
jne
jo
mov
lds
mov
daa
add
daa
jnp
notl
push
incb
mov
ret
in
xchg
mov
jecxz
fldcw
ja
iret
je
sub
push
mov
aas
rolb
cs
push
jns
fisttpll
mov
sbb
xor
xor
std
cmpl
sarl
inc
or
jle
pop
add
addl
cmp
dec
ss
push
jbe
call
cmp
je
mov
lds
imul
repnz
xor
test
mov
mov
addr16
enter
or
out
or
sbbl
adc
jle
add
imul
push
cld
fld
nop
mov
ret
scas
cmp
inc
sarb
pop
and
lea
push
pop
arpl
mov
push
into
pop
mov
fwait
scas
jle
daa
mov
mov
je
or
shl
jg
ret
push
fwait
sbb
jo
dec
notl
mov
push
or
mov
jno
mov
aaa
icebp
mov
out
cs
xor
cmp
cmp
cmp
lds
sbb
xchg
jns
push
pop
add
pcmpgtd
mov
inc
aad
data16
or
xchg
mov
xchg
lea
sbb
outsl
iret
in
inc
pop
jecxz
or
pop
add
jmp
and
add
fprem1
test
push
stc
stc
lret
scas
mov
cmp
in
scas
fs
fnsave
pop
loop
inc
cmpsl
jo
je
xor
adcl
xchg
push
jl
or
mov
jecxz
movsl
or
aam
in
xchg
pop
arpl
adc
add
add
lahf
pop
addr16
jb
pop
imul
sbb
jne
sub
fistl
clc
lret
shrb
sub
loope
ljmp
xor
jbe
xor
or
arpl
hlt
cmp
fldt
cmp
das
push
add
mov
inc
jp
sub
inc
mov
ret
jnp
ss
icebp
shl
in
jp
pop
in
popf
pop
mov
mov
ficomps
pop
insl
cmp
sub
sbb
rcrb
mov
movsb
and
mov
fimuls
lods
addr16
mov
mov
cmc
nop
iret
repz
or
rolb
lods
push
fcomp
test
mov
cmpsb
or
shr
or
push
in
inc
pop
xor
or
sub
mov
fucom
add
bound
push
lock
idivl
loopne
mov
insb
mov
mov
push
cltd
sub
adc
test
fbstp
xor
cmp
jp
and
out
stc
outsl
dec
xor
es
test
loopne
popf
cmp
push
pop
call
xlat
decb
inc
test
int3
xor
jg
fsts
and
jnp
mov
or
push
sub
mov
mov
mov
das
inc
ret
pop
insb
mov
push
jl
fldcw
xorb
pushf
add
mov
dec
sbb
xor
in
jle
pop
jns
inc
mov
mov
cmpsl
inc
push
inc
insb
clc
mov
imul
ds
jb
sub
or
fimull
mov
jbe
or
sahf
cli
pop
xchg
divb
adc
icebp
mov
pop
mov
sar
cli
daa
das
mov
js
test
xchg
test
popa
andl
push
dec
fcmovne
sti
push
dec
fadds
inc
jecxz
cmp
lds
ds
pop
ret
shlb
shrb
ret
js
mov
movsb
les
adc
test
imul
roll
xor
mov
mov
or
adc
inc
mov
inc
orl
cmp
sub
mov
mov
jle
inc
repnz
sbb
bound
dec
test
aad
push
cmp
push
push
mov
fisttps
adc
mov
mov
add
jp
inc
inc
stos
or
mov
aam
mov
jae
rcrb
leave
ds
pop
adc
je
mov
inc
scas
shrl
or
mov
mov
push
push
xchg
mov
in
push
int
dec
sbb
xchg
clc
or
nop
clc
pop
out
xlat
les
sbb
xchg
xchg
ljmp
xchg
xchg
orl
xor
or
push
and
popa
test
repz
cltd
addr16
inc
dec
adc
pop
jb
sbb
xor
outsl
mov
insl
pop
xchg
dec
clc
sub
add
gs
pop
sbb
push
and
mov
xlat
jbe
movsl
adc
std
mov
es
je
push
iret
jmp
adc
ss
pop
cmc
cmpb
add
roll
and
xchg
jo
and
movsl
outsb
and
in
xor
sti
push
clc
fisttpll
js
xchg
jns
jbe
aam
in
push
into
pop
testl
pop
rcrl
fdivl
cmpsb
test
gs
dec
out
sbb
jp
dec
add
cli
jo
lret
getsec
xchg
lds
rolb
subl
sbb
adc
movsb
jge
lret
jmp
pop
jb
cmp
or
add
jg
jl
mov
push
jecxz
pop
pushf
xor
dec
cld
push
cmpsb
xorb
subl
mov
inc
nop
sub
in
cmp
setne
in
pop
jno
dec
ljmp
fcoms
in
xor
stc
mov
pop
inc
inc
push
jne
dec
mov
imul
imul
lds
add
ljmp
js
xchg
sbb
shlb
mov
sahf
jne
scas
in
xor
mov
lods
scas
push
cwtl
imul
stc
dec
adcl
mov
or
lahf
xchg
xchg
ret
push
inc
lds
jmp
sub
cltd
xlat
mov
repnz
xchg
call
and
pop
mov
sub
mov
sbb
pop
jp
cli
jae
popa
jno
shll
in
push
push
adc
out
mov
mov
mov
es
xchg
mov
ret
mov
and
mov
ja
cmp
xchg
pop
scas
aam
or
cld
push
push
push
xchg
jmp
mov
xchg
shll
repz
pop
sar
jnp
push
pop
cmp
xchg
mov
jecxz
in
jl
push
fisttpl
pushf
hlt
iret
sahf
scas
inc
sbb
push
es
cmp
xor
mov
and
dec
adc
mov
sbb
nop
fs
sbb
es
push
in
push
adc
sbb
popf
int
outsb
sub
mov
jbe
rcll
test
dec
pop
shlb
inc
push
lds
inc
dec
mov
pop
cmc
mov
lretw
ja
lock
int
mov
dec
or
adc
movsb
shlb
jle
popa
addr16
xlat
add
push
insb
bound
mov
xor
cmp
mov
bound
mov
xchg
mov
shl
xchg
or
and
shrb
enter
xor
or
mov
jae
movsb
jb
arpl
call
call
loope
popf
dec
sub
iret
inc
push
push
imul
lods
sbb
mov
jge
jecxz
pop
testb
addr16
inc
insl
movsb
or
lds
or
dec
add
ret
dec
mov
dec
pop
out
nop
cld
jo
aad
cmpsl
xchg
dec
cmp
ret
mov
mov
or
mov
or
mov
jno
sub
fidivrs
and
push
add
add
xchg
jge
dec
sub
sub
push
nop
fisttpl
daa
push
lock
imul
inc
add
not
mov
mov
jmp
movl
movl
ja
pushl
call
or
adc
xor
mov
xor
or
sub
xor
xorl
xor
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
jmp
push
shl
dec
jne
sub
lods
fiaddl
adc
pop
adc
dec
or
mov
lcall
movsb
ljmp
dec
sub
sub
sbb
push
and
mov
loop
rol
cmp
ja
fnsave
mov
cmp
daa
leave
mov
push
pop
dec
lods
sbb
sub
jae
pop
jge
les
mov
movntps
xor
push
leave
add
shrl
cmc
mov
mov
mov
punpckhwd
imul
cmpl
xchg
mov
mov
mov
mov
int
jg
in
adc
or
flds
in
sbb
xchg
mov
cmp
fildl
or
push
rclb
outsl
xchg
das
pop
popf
fidivs
mov
sbb
test
stos
mov
outsb
xchg
mov
sbb
jb
sub
addr16
xchg
jg
dec
mov
sub
sub
cmp
cmpsl
pusha
js
subl
cmp
hlt
cwtl
out
lods
daa
hlt
mov
push
sub
and
pmulhw
ss
imul
inc
cmpsb
mov
mov
shlb
jo
aaa
and
dec
loope
cli
jns
ret
fcoml
scas
fs
imul
popf
pop
pushl
jmp
sbbl
jle
call
cs
shlb
enter
in
daa
gs
call
sbb
xor
cli
xor
aad
std
jge
arpl
out
jp
add
xor
pop
dec
pop
rcr
lret
addr16
lret
aam
sahf
test
fstps
mov
xchg
rcrl
lahf
cld
mov
xchg
ljmp
iret
cs
cmpsb
gs
push
or
adc
pop
mov
xchg
ja
and
out
ss
mov
or
addl
cmp
out
mov
out
imul
push
or
cld
push
xchg
jge
add
pop
inc
gs
loop
insb
cmp
xchg
dec
in
add
int
lcall
mov
jle
movsl
repnz
daa
sub
pop
push
icebp
cmpsl
adc
outsb
in
cs
sub
xor
and
test
ljmp
jmp
pop
test
movsl
inc
pop
cmp
sub
cmpsl
add
mov
and
push
clc
bound
inc
dec
jmp
imul
rclb
out
inc
adc
je
lret
jmp
das
mov
push
negb
xor
faddl
stos
jno
xchg
jne
and
xor
pop
cmp
jl
push
xchg
sar
add
and
dec
sbb
push
insl
adc
in
sbb
or
addb
pushf
cli
dec
push
in
cmp
out
shll
cs
fldenv
xchg
mov
in
lcall
push
fmul
add
mov
call
mov
mov
jp
adc
sahf
or
xchg
nop
daa
bnd
pop
pop
fldcw
mov
pusha
ret
lods
mov
jmp
push
out
pop
xchg
jbe
aas
rcrl
inc
cld
jg
out
movsl
imul
outsl
clc
mov
insb
mov
jns
dec
int3
adc
mov
xchg
out
jnp
sahf
jle
or
popf
sub
dec
pop
mov
loop
jl
in
cld
lahf
leave
addr16
pop
mov
sub
stos
into
fisubs
pop
mov
inc
dec
arpl
nop
adc
cmp
frstor
adc
bnd
cmp
jb
cmpsl
ljmp
iret
psubusb
loopne
xor
int3
push
flds
xchg
pop
or
call
addl
jge
call
imul
mov
xchg
adc
stos
aas
lea
xor
and
mov
in
ja
or
inc
out
sub
loop
sbb
mov
and
cmp
fcom
sub
sti
or
stc
push
inc
inc
jge
sbb
scas
push
cltd
dec
adc
ds
sub
fstpt
lret
pop
xchg
sbb
arpl
cwtl
mov
push
sti
cmc
int
sub
fwait
and
pop
cmpsl
movsb
ljmp
dec
decb
cmc
mov
jne
sub
out
mov
sbb
xor
rcr
dec
xor
ret
js
inc
cmp
cs
es
jb
sub
hlt
mov
dec
mov
xchg
jecxz
adc
sub
xor
es
or
xchg
pop
sarl
bound
lea
mov
push
dec
push
mov
cltd
lret
cmc
pop
imul
loop
ss
xor
and
fidivs
inc
cwtl
insl
and
in
inc
sub
mov
and
mov
repnz
mov
pop
add
adc
adc
mov
in
push
mov
mov
adc
push
xchg
movsb
fistpll
popl
cltd
sarl
imul
xchg
dec
outsl
mov
push
sub
mov
rcrb
jno
push
outsl
mov
xor
mov
sbb
rep
mov
add
xor
and
int3
aaa
xchg
out
cmp
ja
sahf
pop
fs
pop
inc
hlt
or
sbb
push
lock
add
les
cmp
mov
imul
pop
insb
outsb
ds
lods
call
add
sbb
jo
movl
lock
inc
pop
cmpsb
fisttpl
mov
ja
lret
popf
and
lcall
xchg
shr
push
fstpl
push
les
clc
dec
in
adc
cmp
push
test
mov
or
xchg
test
pop
pop
cmpsb
cmp
add
jae
xor
mov
js
mov
in
pop
jae
int3
frstor
mov
cli
flds
sub
nop
and
push
ss
testb
test
leave
lods
inc
sbb
inc
cmp
int
and
mov
pushf
mov
insb
iret
jge
lods
lds
test
dec
fidivs
or
and
sub
in
or
and
sub
shlb
icebp
shll
jp
add
pop
sbb
js
adc
leave
mov
sub
popf
pop
ljmp
xchg
jb
cmp
add
pop
aad
test
or
push
daa
mov
cltd
rcrl
aam
inc
mov
mov
addr16
fisttpll
fidivs
lea
jbe
fcmovnb
in
jmp
adc
xor
shl
mov
push
roll
je
in
pop
lcall
jmp
sbb
popa
jo
xor
add
test
push
in
shll
mov
sub
xor
add
std
dec
mov
jmpw
lret
push
pop
sti
dec
push
scas
sub
fisttps
es
test
jne
add
push
xor
out
push
pop
push
in
mov
dec
mov
pop
push
adc
and
mov
sbb
enter
call
mov
or
sub
mov
inc
mov
adc
mov
sub
pop
lretw
sbb
mov
aaa
fwait
sub
cmp
pop
sub
aas
stos
in
aaa
mov
jecxz
mov
and
add
aam
jg
int3
xlat
outsb
and
push
xchg
sub
and
test
sbb
dec
inc
xchg
int
out
lea
mov
fimull
in
inc
inc
out
push
sbb
xchg
sbb
and
js
loopne
repz
or
jb
mov
test
xor
stc
cwtl
mov
pop
sbb
lock
mov
into
fimuls
adc
in
sub
jo
mov
cwtl
mov
mov
jns
sahf
sbb
xor
shlb
sbb
mov
xor
popf
cwtl
sbb
shrb
lods
xor
fldl
adc
aaa
insb
mov
push
inc
cwtl
int3
cld
mov
pop
and
cmpsb
inc
push
popa
cmp
mov
stos
mov
and
push
outsl
rclb
mov
lods
jb
aam
cmp
shrl
sub
adc
loope
jmp
in
adc
dec
bnd
imul
out
lcall
stc
ss
jb
dec
push
lock
push
out
pop
push
stos
mov
jbe
js
imul
inc
pop
call
outsb
ljmp
cmpsl
and
pushf
aad
cs
adc
xchg
mov
dec
stc
hlt
jmp
daa
insb
bound
imul
in
leave
fcmove
push
test
mov
sbb
lret
and
mov
jmp
mov
in
mov
mov
and
mov
dec
shlb
add
mov
mov
jge
jp
idivl
sti
jmp
sub
fcom
pop
add
in
lea
mov
pop
fnstcw
ds
jbe
nop
push
push
pop
add
outsl
mov
or
push
out
or
cmp
cmc
add
add
stc
mov
rclb
jle
xor
popa
call
test
imulb
cmp
xchg
dec
mov
jns
mov
test
scas
aas
ror
stos
jns
push
in
mov
mov
inc
adc
mov
push
push
add
sbb
xor
lahf
out
popf
push
imul
adc
inc
adc
lea
nop
mov
aaa
dec
call
push
mov
push
jo
push
movsb
sbb
sti
cmp
add
fucomip
sar
gs
pop
in
test
add
rcll
fsubrs
into
scas
xchg
push
test
adc
rcrl
dec
mov
mov
mov
inc
xor
out
jecxz
jae
push
pop
add
dec
or
sbb
test
data16
mov
scas
mov
das
add
std
test
inc
inc
movsb
adc
pop
testl
sub
pop
rol
jae
arpl
add
or
daa
mov
test
cmpb
popa
testl
cmp
enter
in
cmp
xor
pop
test
push
loop
mov
and
lahf
out
push
inc
inc
mov
xchg
arpl
fadd
call
dec
jns
insb
imul
adc
cmp
and
xchg
xchg
mov
xor
mov
add
sarl
lds
xchg
sti
sarl
push
inc
push
imul
leave
lret
mov
push
or
or
push
jae
jbe
insl
in
pop
fadds
pusha
clts
icebp
push
shll
ret
ljmp
dec
fwait
inc
jb
mov
call
loopne
stos
iret
and
sub
test
lcall
push
arpl
imul
loop
repnz
sti
out
xlat
push
stc
in
sub
leave
in
dec
xchg
mov
cmp
lahf
cmpsl
pop
inc
and
int3
imul
jno
inc
add
cmp
xchg
mov
pop
cmc
push
and
test
adc
lods
mov
sub
gs
imul
pop
jbe
in
loop
push
je
jl
loopne
pop
aas
pop
pop
in
cmc
aaa
mov
pop
div
mov
shr
inc
stos
sub
and
dec
push
or
loopne
cld
dec
das
dec
adc
or
inc
mov
push
xchg
popf
icebp
sub
mov
imul
dec
pop
test
out
ds
cmp
lret
cmp
lret
fisttpl
fnsave
incb
movsb
out
scas
js
sub
mov
add
jnp
popa
mov
push
jbe
mov
push
xor
fiadds
repz
mov
lds
sbb
mov
pop
stc
daa
pop
movsl
sub
mov
mov
fidivl
pusha
push
xor
test
push
adc
sbb
mov
push
lds
cmp
pushf
xchg
sub
xchg
stc
aas
lock
rcr
cmpsb
push
inc
push
repz
push
test
or
jmp
das
mov
xchg
nop
das
int
pop
stc
xor
enter
mov
pop
out
sbb
sarb
fisttpll
cli
xor
addr16
jg
in
xchg
imul
rolb
mov
sbb
add
xor
mov
add
mov
mov
in
or
xor
fiaddl
test
jns
fldenv
jo
or
cmp
pop
ss
aam
loopne
mov
or
ja
das
pop
dec
push
sti
mov
inc
icebp
popa
int3
mov
arpl
cmp
or
movsl
scas
mov
stos
push
jp
cmp
out
add
xchg
push
push
or
push
pusha
add
adc
sbb
insl
mov
push
je
test
or
inc
fwait
pop
lock
add
sub
stos
mov
data16
subb
int
ret
or
mov
mov
mov
jno
xor
cmp
dec
lea
push
dec
dec
sti
push
push
imul
mov
aam
sbb
adc
cmc
insb
leave
add
mov
sbb
jb
daa
cmp
andl
scas
mov
add
xchg
in
cwtl
pop
add
jo
call
and
into
pop
cmp
mov
jp
mov
mov
jecxz
jnp
movsb
or
daa
test
sbb
cld
scas
adc
mov
adc
push
push
cmp
loopne
out
and
jno
dec
movsb
clc
into
imul
pop
dec
out
clc
insb
jne
inc
adc
push
dec
das
in
dec
scas
lock
xchg
dec
out
outsb
or
dec
into
sbb
inc
pop
das
cmp
sahf
push
leave
mov
roll
push
cmp
cmp
test
insb
imul
jle
or
cmp
shrb
outsb
ss
dec
cltd
adc
lds
movsb
iret
or
cmpsl
cli
and
xor
out
fsubrl
shlb
rclb
ficoms
stos
out
cmpsb
inc
xchg
jae
and
lea
or
and
cltd
movsl
jp
lods
mov
and
mov
repnz
xor
daa
cmp
or
mov
xchg
add
shrb
lret
std
movsl
inc
sub
pusha
daa
mov
mov
pop
shlb
cli
test
out
rolb
int3
imul
sbb
icebp
or
mov
mov
pop
jnp
xchg
shrl
jnp
xorl
adc
lds
sarb
out
xlat
sbb
xchg
nop
xchg
rcr
int3
test
in
mov
jge
push
cmp
ret
inc
repnz
jp
das
ret
sub
mov
xchg
xchg
or
xor
mov
mov
adc
movsb
psubsw
mov
pop
mov
mov
push
popa
mov
add
mov
dec
scas
jnp
mov
jle
lret
fs
jbe
xor
aad
fildl
bsf
rolb
jg
push
pop
mov
dec
out
outsb
sbb
ljmp
mov
testb
and
cmp
inc
pop
push
xor
mov
or
push
jle
cmpsl
dec
fimull
insb
in
mov
loopne
xchg
insl
jne
mov
xor
cmpsb
mov
and
mov
add
out
push
sbb
push
or
pop
aas
int3
or
jns
stc
sbb
xor
cmp
fwait
adc
sbb
mov
cli
sar
stos
movsl
push
push
xchg
mov
pop
push
popl
arpl
fadds
pop
fs
ss
lret
add
jo
or
int
jecxz
shrb
rcl
sbb
jmp
clc
aam
mov
lret
jl
xchg
xor
shrb
icebp
cmp
js
es
mov
jo
dec
sub
add
sti
ss
pop
fucomip
scas
jmp
sbb
test
fyl2x
cmp
sub
je
inc
xchg
adc
cmp
jns
in
xchg
or
adc
lahf
add
scas
cltd
scas
gs
sbb
xor
or
xor
into
xor
inc
fwait
cmp
pusha
pop
jno
scas
mov
inc
orl
loopne
cmp
js
xor
pop
cmp
xlat
ret
addb
imul
adc
mov
loop
in
sbb
xor
cmpsb
xchg
stc
pusha
repz
pop
repz
adc
insb
mov
xchg
xchg
outsl
fdivrs
mov
sbb
fildl
or
mov
imull
dec
mov
ja
push
and
or
mov
mov
push
mov
inc
lcall
insl
mov
imul
jle
ficoml
fsubl
imulb
pushf
cmpsb
cli
sti
gs
je
lret
arpl
je
in
mov
fwait
sbb
stos
iret
inc
pop
je
add
adc
sub
outsb
sub
pushf
jb
fcompl
pushf
cmc
out
cmpsl
xor
push
or
mov
loop
dec
loopne
sbb
shrb
dec
mov
aam
sub
aaa
test
jecxz
mov
cmpsb
sub
mov
jmp
jecxz
sub
mov
xor
xor
es
pop
add
xor
cwtl
in
jl,pt
aam
enter
ficompl
and
add
inc
das
stos
cltd
sbb
inc
scas
add
xchg
lahf
jmp
dec
insb
add
idivl
adc
shll
cmp
push
adc
in
int
gs
adc
sarb
dec
aam
aaa
xor
lds
js
ret
out
push
rcl
jecxz
xchg
and
aas
push
call
loop
cmpsb
out
xabort
lcall
jmp
dec
pop
add
adcl
dec
bound
add
mov
jg
lcall
mov
xchg
loop
jle
cmp
ss
push
fcompl
out
inc
jg
mov
jno
push
stos
mov
dec
shll
fnsave
mov
mov
int3
aaa
mov
dec
push
sbb
xor
sub
xchg
push
xor
fsubr
test
pop
outsb
mov
mov
cli
fisubrs
icebp
fdivl
mov
pop
rol
push
xchg
jns
push
inc
push
dec
xor
push
xchg
ss
push
rcr
mov
cli
mov
cmp
into
hlt
and
inc
hlt
pop
cmp
sbbb
and
arpl
mov
inc
sbb
movsb
xor
es
out
je
jo
push
loopne
in
dec
loop
sbb
loopne
movsb
jns
xor
std
cmp
rcrb
sbb
xor
pop
mov
rorl
push
insb
inc
add
movsl
out
mov
pop
sbb
movsl
jo
outsl
xor
fnstcw
aas
fwait
cwtl
mov
jno
sbb
or
scas
imul
mov
outsl
mulb
add
lock
adc
fs
adc
xchg
mul
or
mov
repz
jae
inc
inc
inc
inc
dec
mov
outsl
das
xor
outsb
in
ror
and
mov
xchg
int3
push
mov
or
jns
fimuls
loopne,pt
outsl
dec
shlb
mov
arpl
mov
cli
int3
mov
jnp
mov
mov
shr
xor
jge
jg
movsl
or
mov
adc
iret
loopne
test
test
pop
ficomps
cmp
add
fs
pop
and
mov
adc
inc
pop
sbb
push
inc
sbb
dec
push
jb
dec
dec
lock
dec
pusha
jecxz
gs
gs
xchg
ret
xor
shr
push
insl
mov
mov
xor
jns
push
push
fisubs
enter
data16
scas
stc
push
inc
push
mov
rorl
sbb
push
fildl
stos
negl
insl
fldenv
inc
fimull
dec
lds
cmc
mov
adc
ljmp
xlat
fcomps
mov
dec
pusha
loop
add
jle
ror
mov
and
ret
cmp
pushf
xchg
pop
xlat
icebp
dec
ret
repz
arpl
xchg
sbb
xchg
push
mov
dec
mov
sti
hlt
adc
and
test
in
lret
add
nop
pop
mov
mov
xor
pop
push
push
mov
cmp
adc
or
mov
lahf
xor
xchg
push
mov
push
pop
loope
push
and
inc
push
add
inc
ss
and
pop
jo
stos
test
pop
daa
jmp
sbb
fidivrl
movsb
or
xchg
cwtl
lods
cmp
shlb
cmp
cwtl
leave
test
pop
dec
cmp
or
mov
pop
or
daa
cmp
and
xor
adc
or
ljmp
cli
test
aas
inc
mov
cmpsl
mov
test
pusha
lea
test
mov
hlt
xor
or
mov
sub
or
ja
cmpsb
je
sub
pusha
cmp
repz
xor
push
mov
arpl
sahf
pop
sub
sbb
mov
insb
push
mov
imul
mov
mov
test
jno
fldenv
call
aad
scas
push
push
arpl
ror
mov
outsl
jl
cli
cmovbe
adc
lret
adc
dec
jbe
js
mov
mov
in
and
cs
inc
push
lret
fs
jae
mov
movsb
mov
lock
push
cld
xchg
popl
inc
mov
and
mov
xor
ret
sbb
and
lods
mov
jecxz
ret
test
xchg
rcrb
fwait
aad
sbb
jge
add
dec
jecxz
push
pushf
insl
mov
pop
dec
sbb
add
xor
xchg
xlat
mov
mov
jbe
cs
cld
pop
jecxz
fldl
sub
inc
movsb
cmp
lods
sahf
outsl
iret
inc
add
lcall
inc
xchg
xor
loope
lods
mov
hlt
insl
mov
test
or
mov
sbb
fsubl
stos
scas
das
lret
xchg
stos
sub
shr
jle
clc
inc
out
jns
lods
cs
jbe
inc
add
dec
pop
out
mov
push
pop
es
inc
sub
aam
jo
pop
mov
mov
rolb
cmc
dec
sbb
xorb
std
mov
push
negb
cltd
cmp
jns
lret
push
sbb
lods
clc
imul
cmc
leave
call
cwtl
das
sbb
jb
ds
cmp
jmp
sbb
das
lods
push
lcall
sub
cs
xchg
movzwl
out
sti
jp
addr16
lcall
aaa
cmp
rcl
faddp
jne
jge
push
sub
sbb
adc
jg
and
push
shr
cmp
sarl
mov
xor
scas
ret
clc
ja
iret
fsin
out
cli
emms
ja
clc
inc
aam
inc
inc
cli
ret
adc
mov
ds
stc
sbb
xlat
sub
fs
lods
sbb
pop
out
ds
fbstp
in
xchg
sub
lods
jp
aad
fcom
mov
addr16
test
test
lret
test
out
push
loop
jmp
data16
cmpsb
cmpsb
aad
or
or
das
lcall
inc
cmc
les
ja
lea
popa
push
add
inc
push
add
xchg
pop
out
adc
data16
jecxz
pop
xchg
cld
inc
arpl
in
shrl
lea
inc
cmpsl
add
mov
mov
cmp
setae
lock
push
flds
gs
push
xchg
in
fistpl
pop
mov
cmp
test
inc
push
into
add
inc
ljmp
inc
xor
insb
int3
test
ret
scas
push
inc
sub
sbb
inc
icebp
and
push
push
insb
push
sub
mov
loop
and
outsb
ss
or
mov
enter
insl
adc
adc
mov
pusha
mov
notl
int
cld
adc
mov
aaa
mov
xor
mov
lods
pop
inc
lds
js
xlat
mov
addr16
pop
jnp
add
push
cwtl
out
cmc
inc
sub
sahf
dec
fidivrs
mov
imul
cs
push
call
add
sbb
hlt
lret
push
out
test
mov
hlt
and
jp
std
mov
cwtl
je
jb
pop
dec
cmc
inc
dec
add
out
movsl
je
jl
sti
adc
xor
aaa
movhps
int3
fucomip
rcrl
and
mov
std
bound
xchg
jno
inc
dec
mov
hlt
mov
push
xchg
jns
pop
ja
outsb
repz
mov
inc
push
out
push
and
adc
sbb
and
mov
nop
lock
pop
cmp
iret
fcom
arpl
jg
jl
aas
mov
rcrb
test
mov
fcmovnb
pop
mov
mov
xchg
mov
je
dec
mov
shlb
popf
enter
adc
jnp
jge
pop
jecxz
hlt
mov
sub
dec
xor
sub
mov
sbb
mov
jmp
push
lret
test
jl
test
daa
or
mov
fistpll
ja
out
int3
xor
sbb
pop
xchg
xchg
mov
sbb
aad
and
out
ss
xchg
add
adc
sbb
ret
lea
outsb
mov
mov
aaa
fucomi
cld
scas
ficoms
enter
push
dec
dec
nop
cs
into
lds
and
hlt
adc
into
lcall
add
xor
pop
sbb
add
into
shll
lods
les
mov
inc
or
rcll
inc
adc
inc
andb
out
mov
sti
add
cmpsl
mov
loope
cmp
and
push
dec
sahf
push
mov
rclb
leave
imul
jnp
xchg
or
inc
leave
sbb
adc
or
xchg
xchg
movsl
or
adc
push
cmp
push
dec
cli
lahf
repz
cmp
xchg
sbb
lret
subl
and
push
xchg
test
imul
orb
fists
sub
jns
movsl
scas
test
sub
shlb
sbb
fwait
jo
sub
scas
repnz
xchg
in
push
scas
push
adcl
outsl
sbb
sub
int
add
add
sbb
mov
pop
sbb
ret
icebp
inc
add
out
sbb
lea
sbb
xor
cmpsb
pop
test
sbb
sub
cltd
cs
cmp
repnz
mov
in
int
test
jmp
pop
aas
inc
xchg
loop
xchg
and
mov
mov
sbb
inc
pop
in
jecxz
jle
push
into
lahf
lock
mov
in
loope
out
std
lret
pop
sti
shrl
add
xlat
mov
mov
fs
push
jbe
and
xlat
scas
data16
ljmp
leave
loop
test
pushf
jns
fistl
push
pop
jnp
out
jle
leave
add
mov
sub
imul
jae
mov
mul
pop
push
pop
push
popa
outsb
cwtl
mov
mov
in
es
ret
pop
sub
into
test
cld
nop
xchg
or
mov
mov
adc
sub
push
je
in
and
cwtl
sbb
cmpsb
pop
stos
mov
add
push
call
add
aad
lret
popf
and
xchg
repnz
lea
movsb
cs
sti
int3
ljmp
jecxz
mov
ret
or
fdivr
iret
aad
movsl
lock
and
mov
dec
repz
sub
mov
and
scas
fldl
dec
sbb
lods
lods
push
movl
adc
popa
sbb
addr16
xor
test
dec
mov
out
add
hlt
push
mov
or
jp
gs
mov
push
addr16
repz
add
inc
out
pop
push
xchg
cwtl
in
cld
dec
mov
mov
and
xchg
pop
mov
es
in
push
movsl
cmp
jmp
mov
and
push
in
pop
xchg
repz
dec
cmpsl
loope
xlat
fchs
clc
sti
sub
pop
jle
jb
cltd
cmpsb
leave
push
ficomps
fcmovb
and
xlat
shrl
xor
fcoml
js
call
mov
mov
lods
sub
cmp
sbb
ja
scas
loopne
jg
push
cmc
mov
pop
shll
push
fnstcw
fstl
movsl
in
enter
enter
pushf
mov
jbe
test
adc
add
cmpsb
push
jmp
stc
jae
dec
jnp
mov
daa
ja
ss
lds
or
leave
push
dec
cmp
fnstcw
jl
notb
or
hlt
les
shlb
fldenv
movsb
mov
xchg
lret
and
ss
cmc
imul
das
dec
and
ficoms
cli
inc
xor
cmp
mov
sbb
sbb
inc
lods
xchg
xchg
inc
sahf
popa
xchg
js
push
jbe
icebp
addr16
imul
loope
mov
mov
add
push
mov
push
cmp
pusha
out
mov
pusha
mov
xor
xor
ds
gs
lods
data16
pushf
adc
pop
lods
mov
pop
and
sub
stos
add
fildl
cmp
jp
mov
cld
jmp
sub
mov
fstpt
aam
mov
pop
adc
test
add
fldt
lcall
addr16
jnp
or
inc
fld
sub
stos
ljmp
mov
mov
in
mov
imul
push
fcoml
je
aad
or
sbb
lret
dec
aas
or
movsb
jno
daa
cmpxchg
loop
sbbb
lock
loope
rorl
out
sbb
rclb
sub
in
pop
push
mov
lret
pop
push
mov
xchg
cwtl
mov
mov
sbb
cmp
jns
mov
jnp
xchg
push
sti
jg
cltd
pop
jge
pop
mov
loope
cmp
repz
ss
jge
mov
fwait
dec
call
aas
fisttps
es
sub
pushf
inc
bound
mov
pop
icebp
push
inc
nop
gs
inc
mov
fwait
lret
test
jmp
mov
stos
aas
sbb
js
shl
xor
cmpsb
inc
popf
push
sar
mov
mov
in
xchg
popa
lret
bound
adc
mov
or
sbb
mov
xchg
scas
pushf
jle
and
data16
dec
lcall
fs
sub
repnz
lahf
insb
loope
popf
fistl
or
es
jg
xlat
lods
jg
and
jb
inc
jbe
adc
push
pop
hlt
mov
pop
mov
out
ret
addr16
mov
add
enter
pop
lock
xchg
pusha
sti
jnp
orl
add
scas
or
mov
subl
aas
pop
mov
ss
mov
fstl
adc
xor
cmp
and
stc
pop
cmp
inc
xor
ja
sub
aad
imul
dec
das
mov
loop
outsl
inc
hlt
jne
fbld
pop
push
ja
mov
adc
js
arpl
pushf
test
cmp
xchg
or
jae
fcmovne
lahf
imul
popf
and
sbb
lds
xor
xor
cmp
pop
stos
mov
loope
inc
pop
imul
add
push
ret
inc
lods
mov
jae
test
xor
notb
ljmp
popf
cli
sub
test
sub
mov
aam
pop
sub
dec
test
cmp
xlat
pusha
movsl
lea
imul
push
ljmp
jmp
mov
pop
lahf
ret
in
mov
hlt
sub
inc
loopne
ss
mov
pop
and
add
std
jo
sbb
inc
push
sub
lret
pop
lret
inc
cmp
mov
ret
lock
and
mov
adc
and
mov
xlat
cmc
std
push
repnz
pop
jno
lock
xchg
or
and
nop
add
mov
lcall
outsb
dec
xor
aam
mov
fcoml
cmp
mov
in
xor
pop
sbb
lods
or
cli
dec
mov
adc
jbe
cmc
outsl
mov
push
sahf
push
inc
inc
outsb
cltd
bound
adc
shrl
roll
dec
pop
repz
or
add
rsm
aam
lret
das
jmp
adc
test
int
ret
jb
jns
push
sbb
inc
iret
outsb
xchg
mov
mov
std
adc
out
mov
test
mov
pop
lret
pop
int3
mov
lods
xor
ret
out
push
movsb
inc
ret
imul
je
out
push
cmp
and
test
cmp
sbb
xor
xchg
sub
xchg
sbb
mov
pop
mov
les
rorl
std
outsb
repz
notb
test
jecxz
leave
xor
cli
dec
inc
mov
fnstcw
push
dec
and
popf
popf
mov
cwtl
aad
insl
rclb
or
ds
jge
mov
mov
sbb
jp
inc
lods
jbe
or
cmp
sbb
stos
scas
ja
mov
cli
pop
add
cmpsl
jp
xchg
stos
aaa
pop
push
inc
repz
repnz
daa
xor
jmp
inc
adc
stos
jp
push
data16
mov
and
push
jmp
enter
sahf
cli
in
test
sbb
call
mov
aam
push
xchg
push
inc
adcl
loope
sbb
mov
out
pop
and
mov
add
test
jns
out
sbb
ror
xchg
jbe
les
jns
cld
mov
or
mov
cmp
push
jne
inc
popa
outsb
mov
mov
sbb
cltd
dec
js
mov
out
sbb
mov
stos
push
or
sbb
push
testb
sbb
lcall
iret
add
sbb
das
sub
push
inc
ja
inc
insl
push
pop
or
jl
adc
fwait
and
jmp
mulb
cmc
and
enter
negl
orb
jle
push
jne
push
out
mov
mov
out
ret
lcall
add
daa
ret
push
or
push
or
mov
cmpsb
cmp
outsb
mov
sahf
jo
rcr
test
in
ds
les
cmp
mov
lret
push
ds
shr
cmp
je
mov
fwait
adc
test
xor
add
mov
xchg
dec
fldl
movsw
xchg
inc
mov
push
and
pop
mov
sbb
pop
or
push
sbb
pop
sti
jne
test
inc
push
outsb
aam
pop
mov
repnz
push
leave
and
cmp
fs
dec
insl
jb
daa
mov
pop
dec
movsl
push
mov
sub
cmpsb
sbb
sbb
sahf
ret
nop
jg
sbb
jae
mov
stos
cmp
push
les
es
lds
outsl
fidivrs
mov
jmp
sbb
sbb
outsb
push
dec
aam
ss
arpl
xchg
lods
test
adc
jns
movsl
adc
outsb
cmp
sub
movsl
dec
cmp
and
cmpsb
lea
lahf
fwait
and
mov
pop
lret
jne
adc
mov
and
mov
aam
test
adc
test
pushf
mov
sbb
leave
outsl
xor
mov
dec
gs
aad
into
scas
rcrl
in
push
int3
dec
sbb
inc
movsb
mov
xlat
ret
ljmp
jno
cmp
aaa
and
and
push
and
cs
xor
fdivs
xor
fildl
bound
cmp
icebp
sub
mov
lret
push
lea
rorl
mov
insb
mov
sbb
cli
add
sbb
sub
test
cld
das
notl
lcall
fistpl
dec
or
sub
add
fsub
ficompl
mov
lds
into
jmp
cmpsl
push
or
add
and
dec
mov
mov
fsubs
cmp
mov
inc
xchg
mov
lea
push
inc
cli
xchg
int
nop
sahf
or
xchg
mov
pusha
xlat
xchg
sbb
imul
inc
sbb
push
inc
jnp
mov
loope
imul
in
call
leave
dec
dec
mov
jae
mov
ss
daa
data16
shrl
adc
mov
pop
jns
daa
mov
pushf
cwtl
daa
inc
push
lret
inc
addr16
out
cmp
lock
es
dec
repnz
cli
mov
sbb
call
dec
jne
test
mov
mov
loop
mov
lret
add
dec
xor
dec
mov
inc
dec
popa
imull
push
mov
outsl
and
cmp
leave
or
test
imul
mov
lea
mov
push
jae
jge
icebp
lock
jmp
sbb
mov
dec
pop
in
gs
push
cmpsb
clc
in
lods
push
mov
add
lods
and
push
out
sahf
fcmovne
popa
js
mov
add
xchg
xchg
jae
ljmp
push
lret
push
fidivl
adc
xor
scas
into
fwait
push
push
add
cmpsl
in
outsb
fistl
imul
out
inc
mov
xchg
mov
leave
xor
pop
aas
jnp
icebp
xchg
cmp
pop
shlb
mov
pop
mov
outsl
push
jmp
inc
sub
sti
inc
mov
pop
pop
fsubrp
test
cmp
int3
push
cmp
lds
add
sub
xor
and
xchg
and
addr16
in
xlat
aas
or
fwait
lods
or
es
jp
out
fs
push
pop
and
lahf
mov
sar
popa
jb
or
mov
aam
sbb
cmpsl
stos
pop
pop
adc
fstps
and
sbb
or
xchg
sbb
inc
add
js
push
cmp
adc
loopne
xchg
sti
mov
pop
fisttps
fldcw
sti
add
dec
mov
sub
pop
fstpl
mov
in
or
inc
pop
enter
adc
push
xor
pop
fwait
or
movsl
lods
jnp
pop
mov
mov
insb
inc
ficoml
cmp
xor
adc
cli
jbe
fs
fldt
out
mov
xchg
xchg
cld
test
arpl
pop
push
mov
sbb
mov
ret
add
test
mov
adc
adc
jne
mov
push
push
sbb
in
lahf
dec
es
es
out
mov
cs
loop
outsb
dec
push
pop
sbb
jnp
adc
pushf
clc
mov
idiv
clc
cwtl
flds
mov
imul
lcall
pop
cmp
add
sub
mov
lods
ss
inc
add
shl
xchg
cmp
ret
pop
xchg
xor
mov
jo
das
add
sbb
push
stc
push
add
mov
das
lahf
arpl
mov
negb
jno
aam
inc
jb
mov
movsb
rcr
and
dec
dec
inc
mov
push
sub
and
in
add
pop
andb
sbb
rcll
pop
adc
mov
push
stos
aas
imul
shll
xchg
icebp
xchg
es
int
lret
sbb
jl
pushw
fwait
mov
clc
mov
push
jg
es
xor
aas
scas
lds
in
testb
adcl
leave
mov
decl
jbe
mov
lcall
cmp
mov
bound
push
cs
sbb
mov
in
or
stc
sahf
jecxz
mov
aad
mov
or
jg
cli
dec
pop
call
push
mov
push
xchg
pop
cli
mov
pop
adc
and
mov
cmp
pop
mov
mov
ss
jno
sub
testl
jne
test
sar
addb
pop
sbb
adc
adc
adc
sub
xchg
dec
lds
dec
les
ljmp
mov
rcrb
je
jge
scas
loopne
rol
lods
mov
addr16
outsl
adc
push
rorb
test
xor
mov
shll
orb
mov
xor
xchg
movsb
or
xlat
push
xor
mov
scas
push
outsl
pushf
xor
adc
pop
sbb
leave
cs
icebp
and
xorl
push
xchg
push
imul
hlt
xchg
fsubs
pop
fistl
or
imul
into
pop
pop
ja
ss
test
ret
mov
dec
js
inc
call
jb
lock
es
push
je
lds
imul
mov
push
std
add
gs
sbb
sbb
imul
push
lret
inc
pop
mov
xor
lods
sub
xor
rorl
mov
xchg
idivb
ret
and
repnz
dec
push
push
push
adc
in
xchg
cmp
sarl
xchg
push
cmp
mov
cmp
mov
inc
xchg
dec
xchg
push
xchg
pop
mov
cmpsb
test
or
push
es
inc
movsl
adc
ljmp
nop
fstl
ficoms
lahf
shl
cmpsb
push
cmp
jb
imul
rolb
xchg
pop
mov
inc
cmp
push
add
ret
and
cmp
repz
xor
push
arpl
cli
mov
push
xlat
or
loope
sbb
jns
sbb
aas
jnp
xchg
push
mov
fwait
out
les
mov
fdivrp
dec
repnz
and
enter
test
and
repnz
dec
add
icebp
ja
bound
lahf
mov
inc
mov
mov
lock
repz
fwait
and
or
insl
sub
adc
mov
out
and
add
enter
pusha
push
jnp
ja
int
push
imul
ffree
in
mov
pop
pop
das
or
inc
das
xchg
mov
or
test
stos
push
sub
icebp
inc
imull
outsb
inc
popa
push
aas
push
imull
jne
xchg
jno
and
pop
mov
or
jecxz
mov
lods
imull
mov
ds
or
sub
push
push
pop
pop
push
sbb
ret
sbb
out
jecxz
aad
insl
cmp
sbb
repz
pop
mov
out
ljmp
loopne
add
inc
popf
xchg
ss
aad
xor
pop
xlat
add
sub
fadds
sbb
pop
lea
sub
mov
ficoms
fwait
stc
mov
pop
mov
lock
pop
inc
xchg
out
sarl
mov
jmp
ds
aas
jb
ficomps
lret
add
shrl
movsb
jnp
push
mulb
sbb
pop
cmp
xor
mov
jbe
dec
mov
and
in
lcall
lods
and
mov
mov
and
sbb
in
daa
jb
xchg
mov
shrb
andl
xlat
xor
push
mov
pop
jp
pusha
or
mov
mov
jp
aam
rorl
inc
movsl
lret
add
call
mov
dec
stc
xor
in
push
or
adc
adc
inc
fs
sub
arpl
repnz
lock
mov
sub
mov
or
mov
pusha
sub
xchg
jmp
ljmp
iret
add
out
jp
nop
js
xchg
movsl
scas
push
shrl
stos
movsb
mov
mov
dec
mov
lock
jmp
insl
loopne
sahf
jge
leave
cmp
in
cmpsl
imul
lods
add
jo
push
mov
sub
adc
pop
fwait
mov
insb
mov
sbb
repnz
cwtl
and
imul
sub
mov
mov
push
das
pop
or
jl
add
jmp
jmp
bnd
pop
and
cmp
push
pop
ds
stc
sti
sub
mov
sahf
ljmp
mov
rcll
mov
arpl
lods
mov
cmc
inc
inc
daa
mov
add
mov
cmc
in
int
xlat
and
cld
mov
jmp
mov
inc
adcl
loop
lods
pop
dec
je
int
push
dec
mov
sub
xlat
cmp
dec
stc
inc
test
std
test
push
pushf
loopne
and
iret
sbb
cli
xchg
xchg
gs
or
inc
mov
clc
test
pop
fcmovu
das
mov
repnz
mov
lahf
adc
in
push
push
mov
lea
jno
or
add
cmpl
movsl
shl
jg
pushf
and
mov
js
sti
and
sti
stc
clc
scas
lcall
cmp
addr16
cmc
cmpl
pushf
jmp
stos
repnz
cld
push
imul
fadd
xchg
jecxz
outsb
out
stc
push
ss
cli
arpl
jb
lret
mov
fisubl
cmpsl
mov
movsl
shr
lds
repnz
sub
cmp
sub
lret
and
cld
push
lods
mov
int3
inc
cmp
hlt
stc
ja
jns
imulb
cmp
ja
lret
add
pop
fs
inc
loope
test
push
sub
fdivl
enter
xor
mov
adc
jo
cld
dec
leave
iret
pop
jo
ficoms
lock
push
xchg
xor
jmp
outsb
shrl
testl
mov
xor
push
lret
mov
fidivl
adc
add
inc
addr16
add
lds
faddl
stc
es
lcall
aam
push
sub
pop
fstp
movsl
out
clc
test
fs
xor
std
pushf
or
lods
add
xorb
sbb
in
in
flds
test
xor
mov
loopne
mov
fsubs
ds
push
data16
jns
cmp
sbbl
xchg
mov
aad
jbe
cmp
push
pop
jns
lretw
pop
sub
pop
dec
outsb
or
sbb
test
pop
rcll
out
adc
bound
repz
test
pusha
insl
ja
jmp
lcall
sahf
inc
fldt
xchg
push
cmp
cmpsb
pop
mov
lea
add
push
lcall
icebp
mov
cwtl
int3
mov
ret
mov
out
inc
dec
add
imul
dec
popa
mov
cmp
mov
iret
imul
cmp
adc
aas
pop
call
push
in
or
mov
lods
mov
test
mov
inc
xchg
sbb
test
or
insb
lret
pop
jg
pop
shrb
cwtl
imul
ret
xlat
inc
gs
data16
in
dec
sub
mov
jnp
pop
xchg
push
jmp
nop
dec
jnp
repnz
xchg
cli
inc
or
in
jno
outsl
int
repnz
stos
stc
cmpsl
mov
fdiv
insb
imul
sbb
or
mov
sbb
iret
mov
adc
das
jecxz
pop
mov
out
adcl
enter
in
sar
stos
arpl
dec
aam
mov
cwtl
mov
dec
enter
pop
stos
or
mov
jns
pop
test
dec
ljmp
mov
sbb
js
js
std
xchg
and
sub
mov
add
js
pop
mov
mov
and
out
mov
data16
imul
data16
add
cltd
cmp
dec
inc
add
ret
sbb
test
out
inc
jb
rcrb
orb
dec
das
or
xlat
jge
cmp
test
jns
mov
and
xlat
xor
jg
mov
dec
xchg
outsb
jb
mov
push
test
mov
sub
adc
sahf
add
leave
mov
jg
ror
add
ret
cmp
cmpsb
sahf
add
ss
fptan
mov
shll
ljmp
popa
push
cmpsb
int
arpl
lea
mov
xor
iret
loopne
dec
jecxz
sti
and
inc
jmp
orb
sub
jb
stos
sbb
jmp
dec
pop
in
pop
mov
sbb
insb
pop
xor
bound
cmp
lock
test
sti
loop
out
scas
cltd
add
inc
ds
jmp
jnp
test
in
iret
sub
into
sub
in
cwtl
jne
loopne
andl
xchg
fwait
pushf
and
mov
jle
xchg
ss
or
cmc
cmp
sbb
mov
mov
cmp
pop
cmpl
loop
mov
or
or
mov
pop
mov
das
hlt
mov
add
mov
mov
shlb
mov
int3
sbb
mov
repz
cli
adc
adc
push
fsubrs
decb
mov
gs
mov
push
jmp
mov
add
imul
in
ds
jl
inc
mov
aad
jg
stos
jae
mov
fs
idivb
test
int3
jo
out
scas
js
addr16
pop
sbb
xchg
and
fwait
push
ret
out
and
lods
jbe
stc
loop
mov
adc
inc
sub
in
add
stos
daa
mov
or
dec
jmp
mov
jno
or
in
or
adc
mov
add
sahf
daa
mov
insl
inc
jae
fstpt
fiaddl
push
stos
or
inc
push
jle
or
pop
and
cmp
cmpb
scas
insl
mov
xchg
fdivl
cltd
rolb
rcll
jmp
cs
and
sbb
cmp
les
xorb
xchg
or
lods
jb
adc
dec
inc
test
sub
lret
aas
mov
push
lea
push
mov
pusha
lds
aas
bound
stos
pop
in
xchg
mov
aam
push
add
lcall
test
jnp
sub
insb
jbe
leave
ds
imul
xor
movsb
cmp
fildl
mov
add
xchg
and
lret
ss
cld
sbb
pop
xchg
push
in
dec
imul
sbb
jne
vmwrite
dec
imul
inc
lcall
lods
rcrb
adc
test
push
fs
ljmp
andl
pop
pop
movsb
test
mov
popf
sarl
xchg
rcl
inc
shll
push
test
mov
inc
xor
lock
mov
fldl
sbb
inc
jnp
daa
xchg
testb
cmpsl
sub
mov
jne
jo
lock
pop
addr16
jmp
pop
jbe
loopne
jg
inc
hlt
es
mov
xchg
sub
xchg
cli
xchg
jp
dec
imul
push
add
sbbb
push
mov
xor
in
hlt
cs
push
repz
pop
ds
inc
xlat
js
adc
xor
lock
xorb
adc
int3
jle
push
test
fimull
fistpll
flds
js
pop
pop
mov
punpckhdq
mov
add
rorl
adc
shrl
jge
mov
sbb
testl
lock
jns
test
xchg
push
shl
inc
push
push
mov
mov
shrl
inc
cltd
mov
leave
or
std
je
pop
jae
pusha
rcrb
and
cmp
mov
in
sbb
rclb
lds
pop
push
mov
xlat
cwtl
jbe
push
movsb
cltd
push
popa
popf
mov
and
push
rcr
pop
xchg
push
out
les
jl
add
jge
mov
popf
aaa
pop
rdpmc
sub
inc
testl
movsl
ja
cwtl
mov
adc
js
jmp
insl
shrl
jmp
ja
lcall
stc
movsb
rcrl
fisttpll
inc
push
jle
xor
cltd
movsl
popa
outsb
stc
imul
out
add
out
mov
notb
fwait
loopne
xchg
pop
push
das
daa
pop
jle
mov
scas
mov
jno
es
rolb
jo
cwtl
sub
shlb
into
xchg
movsb
jle
push
xor
inc
xor
pop
test
cmpsb
stos
cmp
lahf
lret
add
and
push
jmp
pop
mov
jmp
dec
jbe
lahf
mov
mov
mov
lcall
jmp
rclb
test
mov
insl
xchg
mov
arpl
and
aad
in
sub
xchg
icebp
fs
mov
in
push
add
shl
adc
inc
add
dec
mov
mov
fwait
push
push
jnp
or
xor
insl
sbb
shld
cmp
sub
xchg
pusha
je
fstpl
add
pusha
mov
jae
pop
adc
adc
jl
dec
push
cmp
fildl
inc
lods
mov
aad
pop
add
cmp
out
mov
inc
loop
insb
dec
inc
add
les
fcmovnbe
and
sub
pushf
lds
daa
cwtl
repnz
aas
add
out
lret
jl
popf
mov
scas
test
call
push
push
mov
out
out
jle
adc
stos
xchg
or
xor
cmp
or
dec
push
mov
mov
mov
mov
cmp
sub
push
cmp
jb
and
add
in
inc
dec
dec
xor
int3
xor
shrl
js
jnp
inc
and
xchg
mov
and
lcall
jg
xlat
pushf
nop
loope
scas
orl
inc
xor
mov
inc
lods
xchg
push
inc
jecxz
loop
jnp
xchg
pop
stc
and
lods
jb
adc
int
mov
mov
sub
outsb
mov
and
xlat
xchg
incb
inc
and
dec
adc
stc
or
jo
cwtl
test
loop
mov
mov
mov
je
adc
add
push
insl
adc
xchg
lods
int
in
in
push
into
shrb
out
loop
sbb
xchg
out
pop
mov
mov
cmp
daa
int
add
iret
pop
xor
mov
int
pop
mov
mov
add
clc
out
jae
test
js
and
aad
rclb
xchg
sbb
mov
xlat
mov
rolb
push
sub
push
movl
mov
bound
in
cli
aad
loopne
lock
icebp
inc
in
push
sahf
ret
xor
add
xor
pop
data16
test
mov
dec
shrb
cld
aad
js
imul
in
inc
xor
ficomps
imul
sbb
and
jne
jne
adc
sub
mov
cs
into
xor
inc
in
mov
imul
in
lret
lcall
push
push
mov
bound
mov
lret
push
into
cmp
inc
or
jae
out
dec
and
mov
push
jne
dec
mov
jo
imul
aad
mov
jmp
loope
stos
lea
xor
sub
dec
stos
xor
cmp
daa
and
cmp
fimull
mov
jle
dec
adcb
test
rol
inc
mov
or
mov
mov
icebp
clc
nop
pop
loope
fwait
fwait
scas
sti
or
cmp
sahf
sub
rolb
sbb
sbb
loopne
les
or
sti
ret
sbb
or
add
lahf
wrmsr
add
jmp
shlb
and
imul
mov
jo
jbe
xchg
mov
and
add
and
pop
dec
jg
icebp
nop
xchg
dec
lahf
popf
sbb
jb
jno
mov
xor
fadd
adcl
jo
test
lret
test
pusha
negl
rorb
out
jae
jle
shlb
adc
int3
push
sub
dec
inc
bswap
xchg
adc
movhps
dec
pusha
jae
dec
loop
sub
test
add
clc
mov
bound
out
out
cmp
xchg
jne
enter
adc
inc
dec
cmpl
and
loopne
nop
xchg
test
adc
mov
je
xchg
mov
rolb
mov
cld
lahf
arpl
das
or
mov
test
and
xor
xor
je
es
dec
ljmp
add
pop
mov
fisttps
es
notb
push
jno
shll
fnsave
rclb
or
cmc
ja
push
sbb
add
xorb
adcl
stc
mov
bound
jbe
mov
lock
imul
dec
daa
pop
fidivrs
jmp
cmpl
icebp
cmpsl
push
pop
sub
inc
push
bound
shlb
cltd
xchg
lret
sbb
mov
lret
dec
aas
outsb
sub
lea
mov
clc
adc
and
rclb
js
std
mov
fdivl
pop
inc
inc
loope
xor
bound
push
xchg
sub
rcrl
stos
addr16
stos
cli
clc
mov
icebp
push
cmp
leave
adc
sbb
mov
dec
and
mov
jb
xor
xchg
cmp
jbe
hlt
push
repnz
add
lods
int3
jl
test
rclb
jo
or
sbb
sbbl
add
repz
push
addb
xor
addr16
mov
inc
push
insb
cmp
aam
mov
ja
adc
fsubs
out
popf
mov
mov
adcl
std
mov
push
cwtl
aas
les
stos
sbb
xor
xor
loope
lret
cmp
and
aaa
mov
add
repnz
xor
xor
mov
shll
push
loope
mov
mov
shlb
shl
mov
lret
lcall
xorb
inc
call
push
stos
nop
cli
push
mov
inc
jns
daa
mov
cvttps2pi
movb
push
mov
mov
mov
shrb
mov
ja
and
sbb
dec
stc
and
xchg
and
cwtl
xor
incl
fs
fcomp
inc
mov
adc
stos
and
and
mov
stos
dec
cwtl
dec
cmp
push
mov
jp
and
push
je
push
push
and
push
hlt
inc
test
int3
jno
shll
and
cmpsl
or
dec
jae
inc
xor
or
stos
addl
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
lods
mov
xor
pop
sbb
js
stos
jp
sub
adc
pop
adc
cmp
int3
inc
push
addl
add
stos
enter
out
or
fdivrl
ror
shll
loope
xchg
hlt
add
ret
scas
sub
andb
pop
cmp
xchg
xchg
push
adc
movsb
inc
js
cwtl
push
adc
popa
sarb
shrl
push
aaa
sar
xor
inc
lahf
sbb
sub
sub
sbb
aaa
dec
mov
mov
das
push
push
cmp
test
aas
add
enter
cmp
leave
mov
loop
and
mov
hlt
or
mov
jl
das
rolb
aam
leave
cmpsl
aam
stos
imul
fistps
mov
std
xchg
pop
push
data16
xor
faddl
das
mov
into
jge
cmp
je
inc
or
cld
push
push
mov
jmp
in
jnp
mov
ljmp
idivb
fidivl
insb
clc
jecxz
adc
jl
dec
sbb
ss
pusha
xchg
adc
jbe
mov
push
mov
ficomps
rolb
cli
xor
out
inc
adc
je
or
or
sub
xchg
js
loope
cmc
pushf
xchg
jo
cmp
addr16
dec
inc
xchg
popf
sub
cmp
and
adc
xchg
mov
add
dec
push
xchg
rcrb
std
adc
ja
xlat
enter
test
fs
pop
jae
push
cmp
xchg
int
inc
fisubl
jne
and
push
fwait
jne
mov
out
hlt
insb
aad
jmp
lea
or
and
icebp
and
jnp
mov
cmpsl
out
dec
jae
lods
push
pop
scas
pop
fldt
fisttps
cwtl
loope
stos
ss
pushf
or
jne
mov
int
je
push
xchg
inc
adc
pop
nop
sbb
fs
jmp
bswap
das
sbb
idivb
jns
into
mov
std
mov
rclb
jecxz
popf
cld
rolb
jb
outsb
std
mov
pop
dec
popf
in
sbb
imul
cmpsb
dec
sbb
lcall
xchg
test
mov
sub
testl
je
imulb
mov
sbb
divb
lea
in
mov
jle
pop
pop
bound
stos
xchg
loopne
inc
dec
test
jnp
movsb
bound
cmp
add
fldl
inc
shlb
jo
loop
pop
xchg
or
shrl
ds
ss
sbb
pop
inc
out
xor
mov
cmpsl
nop
pop
fists
xlat
into
ds
xor
mov
dec
sub
add
adc
mov
mov
insl
fst
movsl
sbb
xchg
push
xchg
jmp
and
inc
dec
or
cmp
adc
movsl
notb
lret
out
mov
jp
jnp
loopne
cmpsb
push
cmp
ds
mov
xor
xor
or
in
cli
jmp
cmp
jg
push
inc
jp
pop
sub
fwait
jecxz
cmp
adc
stos
push
mov
fstpt
enter
cmp
fwait
jp
inc
rcll
jo
lcall
roll
and
push
and
shrb
and
mov
cmp
pop
cmc
subb
fimuls
xchg
push
xor
in
pushl
xchg
add
sbb
sbb
popf
mov
repnz
loope
pop
xorl
sbb
or
xor
enter
lret
cltd
daa
ret
inc
sbb
add
sbb
mov
xor
arpl
mov
sti
mov
pop
jl
out
pop
jae
dec
and
mov
loop
inc
push
adc
mov
js
xor
shll
cmp
sbb
sbb
jge
sahf
in
dec
sbb
add
lock
dec
adc
pop
mov
xchg
inc
fldt
adc
shlb
xor
push
lock
mov
pop
pop
leave
adc
or
cmp
mov
dec
push
jno
pop
pop
pop
adcb
dec
fistps
loop
mov
call
jecxz
push
adcb
dec
add
dec
dec
mov
sbb
jb
xchg
addr16
mov
jl
push
inc
rcrb
cltd
pop
mov
and
loopne
stos
movsb
stos
outsb
mov
test
jbe
pusha
in
push
enter
lods
sub
cmp
mov
cs
push
push
mov
lahf
pop
push
push
xor
jae
push
test
adc
repz
sbb
dec
mov
loope
or
sbb
arpl
lcall
xchg
test
lods
push
sbb
lret
mov
and
stos
cmovg
hlt
inc
test
pop
xchg
stc
int
add
jecxz
rcrb
cli
cmp
inc
jo
xchg
jl
arpl
xor
test
outsb
fs
cs
mov
mov
lods
mov
cwtl
bts
pop
dec
insl
push
subl
sub
or
aam
std
insb
mov
sub
lds
pop
testb
push
lcall
cs
and
mov
scas
data16
daa
push
sbb
inc
mov
dec
jl
and
test
sbb
or
sbb
mov
mov
lret
shll
lods
lea
negl
ds
cmpsl
stos
ja
imul
pop
or
andb
and
push
xchg
jmp
mov
rol
les
and
cltd
test
pop
in
shlb
and
rorb
mov
add
les
cmpsb
xchg
push
jle
mov
jmp
cmp
mov
push
add
mov
push
fucom
pusha
ss
pop
pushf
dec
cld
pop
cltd
fsubs
pop
mov
or
mov
inc
inc
pushf
sbb
data16
pop
movsl
fisttps
mov
leave
jo
or
rsqrtps
push
aam
xor
out
and
push
xchg
imul
cmp
or
mov
sbb
lock
aad
and
xor
arpl
pop
shlb
push
mov
inc
xchg
mov
insb
pop
pop
xchg
nop
and
inc
shl
mov
add
fs
ds
sbb
adc
aam
push
lods
lret
jle
adc
out
sbb
sub
add
lods
jbe
test
dec
sub
jns
mov
mov
loope
mov
mov
frndint
sub
lret
mov
imul
or
leave
hlt
jne
push
lods
push
sbb
add
scas
mov
arpl
or
add
mov
or
xchg
xchg
push
or
shlb
ficompl
add
aam
add
insl
ljmp
sbb
ja
mov
testl
out
mov
daa
xor
cmp
push
je
cs
cmpsl
push
push
rorb
inc
or
xchg
jno
scas
test
sub
pop
mov
xchg
cwtl
add
mov
js
cmp
inc
leave
fs
aam
clc
pop
arpl
or
into
pop
push
shrb
hlt
dec
or
movsl
scas
enter
movsl
bt
lods
repz
xchg
pop
leave
mov
jp
push
std
cmpsl
enter
outsb
lret
negb
in
mov
pushf
mov
stc
test
jecxz
mov
jecxz
in
sub
js
testb
jbe
inc
cmc
in
dec
lea
int3
out
rol
sbb
add
loopne
imul
popa
addl
sarl
stos
jnp
and
add
lcall
rorl
sbb
add
cmp
rorl
fcoms
loop
in
jno
into
mov
pop
into
mov
dec
aas
popf
in
xlat
xlat
outsb
gs
pushf
cmp
movsl
cmp
pop
and
out
sbb
repnz
mov
sub
add
xchg
insb
jae
call
shlb
in
pop
push
fidivs
repnz
push
add
hlt
in
mov
mov
sarb
std
and
jp
fisubrl
je
cmp
cld
clc
mov
xor
cwtl
or
pop
stos
jb
jg
inc
add
push
sub
add
jnp
lods
mov
lock
les
les
loopne
sbb
pop
dec
jmp
jmp
daa
daa
jae
lahf
pop
push
sub
nop
ljmp
fchs
cmp
in
movsl
sbb
ja
xchg
popf
xchg
push
lods
mov
xchg
test
ret
cli
pop
jmp
adc
adc
sub
in
dec
mov
inc
out
pop
sbb
out
sbb
sbb
jnp
push
aas
fisubl
mov
movsb
cmp
push
inc
push
insb
test
aas
bound
add
inc
test
dec
mov
test
xlat
subb
cmp
pushl
jno
packssdw
sbb
dec
jb
fnstcw
cmp
adc
into
repnz
add
outsb
lods
xchg
dec
in
ret
dec
mov
pushf
into
xchg
add
fisttps
dec
or
lock
push
mov
inc
std
aas
hlt
decb
xchg
dec
mov
lods
movsl
popa
dec
dec
mov
leave
xchg
das
jmp
and
inc
jb
rorb
mov
jno
jl
cmp
adc
aaa
bound
fnstenv
int3
mov
mov
je
xchg
pop
add
daa
mov
repz
jno
repz
add
push
push
test
xor
jg
in
scas
movsb
add
sub
mov
ss
pop
add
xor
fidivrs
nop
push
cmc
xlat
int
xor
adcl
shl
sbb
sarb
lret
lods
aam
mov
mov
rcll
sub
aad
mov
cld
fstp
sbb
jns
movsl
mov
rcrb
repz
scas
mov
addr16
inc
subl
sub
pop
sbb
repnz
push
mov
sub
out
cwtl
jo
jb
sbb
popa
ja
outsb
int3
and
lea
lret
lcall
mov
sbb
mov
and
mov
iret
jmp
jle
jge
icebp
cmpsl
inc
pshufw
popf
shll
or
out
pop
ret
sub
pop
in
jo
loop
repnz
mov
dec
les
insb
enter
je
addr16
adc
pop
pop
cmp
fdivs
add
pop
mov
pop
pop
movsb
and
jbe
inc
mov
inc
jl
lea
jge
mov
outsb
ljmp
int
sub
cmp
sti
add
push
sub
add
int3
ret
arpl
adc
push
push
adc
xchg
iret
subl
mov
popf
repz
out
pop
add
xlat
push
incb
push
in
stos
push
movsb
scas
xor
out
inc
popf
xor
add
lret
mov
dec
ja
xor
stos
jmp
push
ljmp
into
mov
outsb
orb
and
cmpsl
daa
loop
and
movsl
push
sub
adc
mov
adc
pop
fs
lret
sub
inc
sbb
push
lcall
adc
outsb
leave
inc
xlat
mov
flds
insb
or
icebp
call
cli
inc
xchg
mov
test
js
ret
enter
sub
adc
push
int
int
mov
dec
cmp
in
or
mov
inc
jnp
ja
sub
movaps
fs
xor
insl
mov
xor
jg
jmp
xlat
mov
popa
in
imul
cmpb
mov
xchg
push
mov
mov
cld
add
bnd
lds
xchg
pop
and
or
andb
or
fnstenv
in
and
cwtl
outsl
pop
adc
out
repnz
dec
xchg
jne
lret
outsl
lret
aaa
lret
out
imul
pop
pusha
lahf
loopne
mov
fs
xchg
xchg
insb
jmp
jmp
and
inc
dec
ja
cmc
inc
jmp
mov
cwtl
jp
jge
ds
repnz
movsb
lret
leave
es
mov
test
sbb
test
adc
scas
das
pusha
dec
fcomps
push
stc
and
pop
push
cmp
cmp
mov
xor
xchg
mov
shrl
jae
ljmp
mov
add
sti
mov
cli
xor
je
sub
lods
pop
cmpsb
je
ja
cltd
adc
je
insl
mov
push
neg
loop
jo
ljmp
subl
imul
repz
ljmp
div
clc
ret
lcall
sbb
outsl
mov
sbb
insl
jnp
daa
test
ja
xor
cli
inc
jg
aas
sbb
scas
mov
imul
fimuls
test
xlat
clc
push
mov
ds
loope
jmp
sbb
mov
mov
scas
xor
mov
mov
scas
repz
test
aaa
stos
mov
std
cbtw
scas
inc
shll
outsb
xchg
pop
pop
mov
and
aas
jno
jle
je
sub
fs
in
pop
lods
mov
repnz
sub
test
fcom
or
call
xchg
int3
xor
xchg
rcl
wbinvd
or
imul
push
shlb
bound
jg
xor
repnz
stos
push
fbld
push
or
fsubp
add
mov
fistps
aas
int
popa
inc
mov
stos
cmpsb
mov
fstpl
stos
adc
mov
inc
test
cmp
sbbb
addb
mov
xchg
xor
shl
sbb
in
or
sub
pop
or
aad
test
jg
pop
mov
push
insl
aad
or
push
push
into
ret
push
dec
sub
mov
psraw
or
arpl
jl
inc
in
push
iret
inc
xor
xor
push
cs
int3
sahf
shll
jecxz
or
jns
mov
mov
cmpsl
cwtl
or
add
mov
add
jmp
mov
nop
mov
xchg
icebp
sbb
loop
pusha
dec
jno
xor
or
enter
and
int3
sti
popa
sub
fcmovu
dec
adc
andb
jecxz
lahf
imul
sub
jae
test
adc
or
ficompl
inc
jo
lret
inc
pop
lods
out
sbb
inc
mov
rcrb
scas
daa
adc
fwait
mov
dec
push
adc
insl
cltd
lret
dec
out
outsb
mov
adc
sub
push
mov
dec
shrl
dec
andb
ret
outsl
movsb
mov
ret
adc
xor
pusha
push
dec
adc
dec
and
cli
cmpsb
cmp
mov
push
fsubrs
mov
inc
xchg
mov
push
rcll
daa
add
lods
sub
xchg
and
mov
insl
dec
in
sub
je
sahf
adc
xchg
push
ja
sub
adc
bound
stc
push
sub
cli
jp
lret
aad
ret
xor
outsb
lret
scas
adc
daa
xchg
ss
inc
xor
arpl
inc
mov
add
pop
push
add
dec
gs
mov
lahf
iret
xlat
sub
mov
xchg
popa
jne
sar
pop
out
mov
rcll
popf
lcall
and
out
js
lods
into
jne
cmpb
jne
sarl
pop
fwait
bound
cs
call
mov
add
rcrl
mov
addr16
loop
cmpsb
xchg
mov
out
or
and
mov
xchg
into
inc
in
pop
pushf
dec
daa
pop
aaa
mov
mov
cwtl
repnz
xor
mov
xchg
hlt
lock
push
sahf
adc
stos
xor
sbb
cmp
stc
cs
adc
test
gs
fstl
out
mov
fcompl
repnz
jb
arpl
pop
mov
cmpsb
enter
xor
int
sti
adc
sub
inc
fwait
mov
sub
fdiv
xchg
std
dec
pop
rolb
jnp
push
mov
mov
sahf
inc
pushf
push
fistpll
adc
insb
cld
push
out
push
jp
daa
xchg
adc
addb
adc
add
in
sbb
shll
adc
mov
mov
pusha
or
inc
fcoml
push
cmp
jbe
iret
cmp
mov
and
test
and
mov
out
and
sub
cmp
sbb
or
jne
mov
cld
movsb
outsb
stos
pop
repz
jg
nop
pop
fld
xor
cli
insl
mov
mov
xchg
lods
add
cli
int
lahf
push
scas
js
out
xor
push
push
xor
in
xchg
cmp
lret
movsb
or
xchg
dec
jl
popf
dec
scas
adc
das
lahf
push
inc
emms
sub
mov
imul
ljmp
aas
mov
aas
addr16
aaa
scas
or
or
adc
cli
rorl
or
jle
jb
jae
jmp
adc
add
mov
mov
xor
loope
iret
ds
insb
dec
mov
movsl
jns
loope
nop
jnp
test
pop
iret
jae
pop
add
inc
loope
mov
sub
aaa
mov
xor
or
mov
sbb
fsubrs
fdivrl
ja
dec
fsubp
popf
add
add
mov
sub
addr16
nop
loop
fidivs
popf
sbb
xchg
pop
es
int3
pop
out
jle
sbb
and
in
jg
jge
dec
mov
xor
stos
aad
mov
negb
fmull
push
sbb
lret
mov
xor
cli
lods
ret
mov
mov
aad
add
jecxz
lock
cmp
ja
rcpps
dec
push
xchg
stos
jo
loopne
fs
icebp
mov
outsb
cli
fisubl
scas
mov
mov
or
dec
and
cmp
sbb
add
pusha
imul
dec
mov
movsl
ficompl
xor
outsb
lahf
in
xchg
loop
inc
lcall
adc
aad
inc
lcall
inc
xor
add
jmp
faddl
daa
lea
icebp
cmp
adc
push
fabs
clc
push
stos
fwait
jle
push
cltd
es
sbb
jns
into
testb
jle
pop
jns
jno
inc
mov
dec
movsb
xchg
cmp
xor
in
int3
in
sub
mov
ret
lods
shll
sub
shr
jg
cmp
push
arpl
clc
mov
sbb
pop
repz
xchg
aas
lret
adc
cld
pushf
pop
dec
cmpsl
mov
in
inc
flds
sub
or
pop
sbb
outsl
sbb
inc
cltd
inc
mov
or
dec
or
adcb
lret
xchg
dec
repnz
fisttpl
jb
pop
jbe
les
xchg
test
jmp
adc
push
pushw
and
dec
jnp
cmp
or
sub
andl
je
jae
mov
or
xor
add
mov
out
inc
adc
sub
imul
add
cltd
scas
imul
aaa
into
dec
insb
and
stos
jbe
cmp
jecxz
or
sbbb
rcll
pop
std
cltd
sbb
ret
data16
loop
daa
push
xor
lret
jae
daa
daa
sub
jl
fwait
rcrl
push
push
fstpt
jb
gs
cmp
cwtl
sbb
xchg
xchg
lcall
sbbl
or
push
or
mov
and
test
sbb
inc
mov
mov
je
adc
inc
dec
into
aaa
mov
clc
or
pop
push
ss
and
bound
test
push
int
add
or
sbb
add
out
mov
inc
aas
push
int
lods
lahf
jp
push
je
cs
pop
int
pop
jb
pop
dec
jo
lods
mov
add
scas
lret
sub
inc
cli
rol
cmpl
cmp
or
sbb
xchg
movsb
inc
sbb
pusha
dec
lcall
mov
lcall
cwtl
mov
dec
mov
jmp
bound
mov
vpaddd
inc
inc
inc
scas
int3
ja
rcrl
mov
jae
mov
aaa
and
test
stc
inc
cmp
inc
orl
cmp
ss
xor
push
pop
sub
aas
cli
jl
test
inc
lret
xchg
xor
fcmovnbe
or
inc
mov
mov
cmpsl
lret
shlb
inc
cmpsb
jne
cld
fst
or
dec
call
and
fiaddl
mov
aam
call
push
sub
outsb
push
stos
ret
rcr
sti
jmp
icebp
mov
mov
pop
testb
js
lahf
test
mov
sub
in
in
add
dec
and
mov
repnz
pop
fwait
and
in
xlat
mov
and
cmc
add
addr16
cmp
jp
cli
pop
push
pop
adc
ljmp
pop
mov
fwait
cltd
xchg
add
sub
push
ds
xchg
ljmp
aas
int
add
mov
les
cmc
mov
adc
fildl
jnp
mov
mov
or
sahf
rep
jnp
sti
in
ucomiss
jg
cmp
scas
test
je
sahf
pop
in
cs
aaa
or
mov
call
jmp
jl
imul
push
lret
adc
add
imul
out
dec
movsl
pop
xchg
sbb
rolb
in
cmp
shr
loope
outsl
mov
adc
mov
adc
rcll
cmp
jecxz
clc
adc
xor
in
mov
and
jge
imul
push
ret
adcb
inc
aas
xchg
out
add
mov
or
pushl
adcl
push
push
aaa
arpl
or
sub
ret
cmpsb
faddp
es
fs
add
cltd
lds
push
dec
jl
inc
adcl
push
fmull
or
mov
test
adc
addr16
xor
mov
xchg
sub
cltd
cmp
and
xchg
xor
js
sbb
inc
add
jns
sbb
fwait
imul
repz
in
sbb
je
lds
sub
xchg
outsb
mov
xor
cmpsl
notl
test
pop
aas
repz
pop
push
jbe
xchg
sub
add
ljmp
ja
loope
sti
int3
sub
in
out
pop
pop
or
pop
sbbl
es
and
cltd
aam
ret
mov
fs
mov
iret
adc
mov
mov
or
adc
out
cmc
and
outsl
ljmp
fiaddl
cwtl
jge
fcoms
pop
jo
dec
leave
fnstsw
cmp
aad
jecxz
call
push
aam
cwtl
stos
addr16
or
popf
shrl
out
aad
xchg
in
add
inc
sarl
jae
idivl
and
mov
scas
mov
adc
lea
inc
idivb
jo
jae
push
insl
cwtl
jg
jo
or
add
fsub
dec
hlt
imull
sbb
gs
scas
mov
loope
lcall
loope
in
out
dec
xchg
imul
push
imul
xchg
scas
jmp
xchg
sub
loopne
in
fs
adc
enter
ljmp
fiadds
mov
shll
and
mov
lock
xchg
fisubrl
xchg
sbb
mov
and
fmull
mov
sbb
rorl
shlb
add
out
mov
push
fidivrl
imulb
fcoml
cwtl
pop
in
or
mov
imul
xorb
and
insb
push
pop
inc
mov
fld
insl
inc
arpl
test
xchg
das
test
imul
lods
in
jne
aad
push
jno
nop
rcll
nop
pop
mov
jmp
sbb
repnz
xchg
or
rol
and
ficoml
mov
push
xchg
mov
ret
int3
rcrb
adc
cwtl
fdivs
in
pop
xchg
nop
nop
mov
push
std
mov
out
jo
add
rorb
notb
pop
jg
xchg
pop
fwait
mov
int3
mov
ss
mov
insl
popa
fists
fdivrl
lods
jno
mov
sub
xor
jns
cmp
test
ret
push
dec
loopne
rcll
call
push
cmp
loope
cmp
daa
adc
insl
in
mov
fstpt
mov
popf
dec
jge
repnz
das
lahf
aad
and
scas
rorl
mov
movsl
icebp
and
xlat
or
scas
inc
cmp
out
ljmp
lea
sub
sbb
adc
and
mov
pushw
mov
mov
cltd
icebp
xor
inc
lods
pop
fmuls
imul
dec
push
out
inc
or
mov
sbb
xlat
xchg
jbe
ss
sbb
jne
subl
test
enter
fistpl
jle
aaa
cmc
popf
mov
loopne
lret
lds
daa
push
daa
and
cmp
sbb
jecxz
and
mov
cmp
jmp
jg
sub
lds
cmp
aad
dec
mov
mov
mov
lds
xor
movsb
outsl
enter
adc
xchg
cmp
xchg
aam
cmpl
push
xor
iret
sbb
in
jbe
xor
inc
jne
mov
or
test
cmpsb
push
sub
cmpsb
xchg
xchg
dec
push
sub
lea
or
fwait
inc
sbbb
mov
in
rorl
jnp
cmpsb
imul
sub
adc
dec
dec
jp
inc
pushl
aam
mov
sbb
xor
dec
mov
mov
negl
or
mov
mov
dec
mov
sbb
out
add
mov
jb
ror
pop
out
cwtl
js
mov
icebp
and
aas
mov
gs
mov
push
push
adc
data16
andb
leave
pop
aam
ja
and
mov
lret
insb
push
js
jg
or
add
pop
rcrb
mov
loop
lock
les
ficoms
stc
out
mov
push
xor
adc
fnstcw
jbe
mov
mov
insl
dec
outsl
mov
stc
push
mov
or
imul
and
mov
cwtl
mov
cmc
jle
lret
test
add
clc
xor
repnz
pop
cmpsb
push
icebp
xchg
test
add
sbb
sbb
inc
mov
ja
lret
sub
movsl
into
mov
mov
das
pop
inc
sub
cmc
cwtl
jb
push
cmp
daa
jbe
pop
ljmp
fwait
xchg
cmpsb
jo
mov
xor
cltd
xchg
adc
in
cwtl
xchg
mov
dec
aam
cmp
lock
sahf
jne
stc
cmp
xchg
cmp
fimull
imul
repz
icebp
das
jmp
mov
sub
jnp
mov
repnz
mov
shll
mov
es
fidivs
jle
or
lds
mov
sbb
in
dec
xor
xchg
pop
xchg
push
xchg
cmp
pushf
imul
aas
lods
movsb
int
lds
push
jp
jge
mov
loope
sti
shll
mov
and
inc
cmpsl
inc
out
add
mov
push
dec
test
sbb
imul
add
ret
mov
mov
iret
pop
das
loopne
xor
xchg
jae
icebp
lea
mov
aad
dec
mov
jmp
ret
ljmp
lods
ret
push
je
andb
mov
pop
inc
adc
pop
pop
sub
popa
sbb
sahf
int
inc
sub
cwtl
stc
sbb
mov
xor
sbb
or
pop
notb
mov
clc
pop
xchg
cmp
xor
mov
into
lds
push
gs
xchg
jns
jg
xlat
cmpsl
jno
mov
mov
jbe
lock
cwtl
incb
sbb
sbb
push
rcl
push
in
pop
sub
inc
pop
lods
out
inc
and
stos
push
iret
or
xchg
xchg
aas
sbb
in
cmp
outsb
dec
mov
daa
cmp
mov
repz
lea
sub
xor
loope
fwait
jae
repnz
sub
mov
push
insb
mov
test
dec
and
test
mov
pop
mov
jae
or
pop
repz
enter
popf
jae
pop
adc
movsb
shrb
pop
push
stc
pusha
es
push
push
push
sbb
mov
mov
or
dec
sbb
sbb
cmp
and
ja
andb
dec
mov
sbb
mov
adc
mov
dec
ds
data16
out
xchg
and
rorb
push
or
pop
cmp
orb
pusha
add
mov
fisubs
dec
mov
lret
shl
jge
push
mov
mov
cmpsb
adc
mov
jne
insb
adc
jb
pop
mov
pop
inc
jp
xchg
push
mov
mov
lods
push
jbe
mov
insb
push
xchg
xchg
inc
xor
clc
rep
pop
or
int
fisubl
mov
ja
out
rol
pushf
cmc
pop
mov
or
inc
jle
addl
jmp
repz
jecxz
adc
jae
add
sar
test
adc
sbb
adc
push
fimuls
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
jmp
inc
mov
aaa
cwtl
arpl
push
pop
sarb
lds
adc
adc
lcall
jb
pop
mov
jo
mov
call
push
fidivl
stos
das
fsts
pop
pop
xchg
mov
out
push
les
in
test
or
mov
dec
push
mov
lret
jecxz
mov
mov
cmp
mov
inc
jb
movsb
mov
cld
fmuls
or
adc
xlat
and
jae
and
xor
mov
or
insb
ret
xlat
bound
mov
sbb
mov
sub
iret
icebp
mov
xchg
push
outsb
jl
mov
jge
jp
pop
sub
testl
xor
aas
daa
adc
and
decl
lret
and
nop
fwait
adc
dec
cmp
inc
fs
mov
push
add
fwait
pop
das
pushf
and
xor
bound
xchg
inc
jecxz
adc
mov
in
jle
stos
mov
js,pt
fistps
aad
push
mov
push
fwait
enter
ret
inc
repz
pop
sub
fs
push
push
jbe
dec
push
fldt
js
ds
fildl
imul
push
addr16
or
jo
push
dec
xchg
inc
xchg
aad
and
call
xchg
pushf
push
scas
insb
mov
sbb
inc
add
mov
aad
cmp
mov
and
cwtl
cmp
xor
push
dec
adc
movl
jecxz
stos
repz
leave
repnz
mov
push
movsb
and
fcmovb
orb
push
shlb
pop
cld
fmuls
push
jo
inc
mov
mov
imul
push
mov
push
adc
xchg
inc
sub
insl
xor
in
scas
and
movsb
scas
push
fbstp
stc
jge
lret
dec
jmp
inc
les
dec
ret
sti
push
xchg
xor
jecxz
ljmp
adc
lds
mov
ljmp
dec
cmp
dec
mov
jle
add
dec
out
sahf
rcll
sarl
cmp
sbb
dec
test
or
pop
mov
add
inc
add
xorl
inc
push
in
fmul
cmp
fistpll
scas
je
mov
push
daa
cmc
call
test
mov
cmp
or
clc
je
jae
ljmp
pop
sbb
dec
out
rcrl
repz
lock
sub
gs
pop
lret
jle
sbb
out
test
mov
jno
in
cmp
xor
lret
inc
es
dec
push
pushf
xor
jae
cmp
mov
nop
lock
xlat
sub
lea
inc
push
cld
enter
call
addr16
push
mov
sub
cld
jecxz
add
cmp
and
xor
lret
scas
pop
mov
out
ss
pushf
push
jne
js
xchg
mov
dec
pusha
rcrl
sbb
shll
xor
jp
mov
int3
jmp
sub
mov
fiaddl
or
mov
shll
push
dec
mov
mov
insl
ret
nop
mov
cmpb
dec
stos
inc
lods
mov
or
mov
jno
fdiv
adcb
es
push
fistpl
loope
add
mov
jmp
cmp
aas
jmp
jmp
in
leave
popa
fadds
sub
pop
movsl
shll
inc
in
add
jmp
rorb
xchg
clc
or
sbb
push
push
lret
sub
push
gs
mov
lret
add
adc
int
jae
out
mov
adc
sub
outsl
add
ljmp
mov
dec
rol
add
sbb
mov
sub
in
or
mov
xor
fdivrs
mov
add
or
ds
jp
adc
mov
scas
add
enter
rcll
or
lds
movsl
in
jnp
movsl
xor
sti
and
int3
pop
leave
lods
sbb
in
sbb
fimuls
mov
mov
sarl
je
mov
test
mov
dec
jecxz
ljmp
sub
push
aaa
les
pop
frstor
mov
sbb
or
dec
out
pop
pop
mov
xor
sub
inc
mov
lret
sbb
ds
jle
inc
jmp
fdivs
pushf
pop
ja
idivl
add
mov
mov
vlddqu
xchg
push
int
xor
cmpsl
insl
dec
cmp
fnstenv
fsubrl
adc
data16
cwtl
aaa
or
movsb
stos
add
andb
inc
verr
sbb
pop
les
or
or
add
adc
mov
lds
pop
hlt
sub
repnz
fisubs
jb
mull
in
jo
or
jp
call
cwtl
repz
addl
mov
cld
add
mov
mov
aam
jecxz
loope
insl
nop
inc
inc
nop
cltd
ljmp
xlat
les
stos
mov
jns
lcall
les
push
sub
cmp
out
adc
je
es
or
movlps
loop
insl
outsb
imul
cli
repnz
addl
mov
fstps
sbb
mov
and
mov
adc
or
gs
rcrl
jns
sub
stos
sahf
adc
dec
arpl
adc
loopne
mov
cmpsl
pop
and
popl
mov
jecxz
add
cmp
addl
jb
rorb
and
inc
shlb
dec
fdivr
xchg
inc
inc
xor
mov
pop
mov
sub
xchg
add
sub
cmc
push
daa
jp
out
pop
dec
xchg
xchg
and
xchg
mov
les
call
xor
sub
dec
xchg
sub
mov
divl
daa
adc
sbb
xor
mov
loop
dec
add
ljmp
daa
dec
into
add
aas
sub
jae
xchg
push
jnp
int
into
repz
fmulp
out
cmpsb
negl
jge
jge
inc
push
icebp
mov
aaa
xchg
in
push
aad
push
pop
fs
and
icebp
hlt
adc
dec
cmp
pop
enter
or
das
sbb
cmpsl
pop
push
jb
rcrb
adc
and
inc
xor
fistps
out
xchg
push
fwait
rorb
jge
int
shrb
push
fbstp
inc
rcl
hlt
iret
decb
pop
in
and
dec
shlb
adc
jl
inc
movlhps
or
out
push
mov
mov
lahf
mov
or
cmp
in
xchg
aad
inc
insb
stc
mov
xchg
mov
clc
or
cmp
icebp
in
pop
pushf
lret
dec
shll
cmp
idivl
push
pusha
imul
dec
ds
lock
mov
inc
shll
fwait
mov
lods
and
adc
mov
ja
lahf
fidivrl
out
in
jp
leave
in
sbb
push
rol
sbb
jp
dec
inc
popa
jne
rclb
inc
xor
jmp
cmova
mov
add
add
inc
lds
push
or
jnp
fsubl
int3
and
mov
faddl
and
jmp
stos
testb
rcrb
jne
xchg
or
lods
repnz
cltd
sub
add
lea
scas
repz
das
dec
movhps
in
inc
or
cmp
inc
fidivrl
push
inc
cmp
jb
jecxz
adc
jl
and
fisttps
pop
mov
cmpl
dec
xor
outsb
jg
jbe
lcall
sbb
xchg
add
stc
lods
scas
sti
pop
lsl
and
xor
stos
pop
and
sub
roll
add
sbb
mov
movsb
dec
or
out
jns
mov
movsb
push
push
add
call
iret
in
addr16
push
popf
pop
mov
jnp
les
scas
rolb
movsl
movsl
add
daa
inc
shr
lods
call
insl
imul
sub
lcall
fldl
mov
dec
mov
mov
jp
dec
fs
mov
imul
dec
jne
mov
add
push
lahf
ss
dec
int
cltd
test
xchg
push
lret
mov
cmc
fdivrl
add
dec
leave
push
loope
pop
outsb
enter
xchg
pusha
out
sbb
clc
lahf
cmp
aad
call
iret
subb
push
enter
pop
test
das
add
addb
inc
mov
push
outsl
pop
icebp
movsb
fstpl
cmp
or
rclb
pop
addr16
fadds
and
sub
aas
je
stos
fisttpll
pop
jae
xchg
mov
sub
aam
fbld
arpl
xchg
cmp
xchg
fisubrl
bound
out
push
into
in
insb
inc
push
scas
lcall
push
lret
in
jnp
pushf
or
fcmovnbe
sbb
or
stos
jno
xchg
insb
jp
sbb
jo
pop
sti
mov
mov
out
add
mov
add
insb
das
mov
sahf
js
mov
and
div
nop
in
lahf
mov
dec
leave
mov
int
repz
dec
mov
adc
in
mov
lods
mov
cmp
mov
xchg
sbb
ret
dec
popa
dec
lods
in
push
subl
fcomps
fidivrs
into
push
sbb
adc
aam
and
inc
loop
pop
in
add
dec
cmp
cmp
xchg
imul
stos
cmp
inc
fimull
mov
jl
rclb
xor
mov
test
inc
cs
push
lods
pop
out
pop
shlb
scas
mov
jne
mulb
mov
add
cld
sub
rclb
fistps
lret
movsl
xlat
daa
jns
or
stos
dec
pusha
mov
outsb
std
filds
inc
cwtl
mov
aaa
gs
hlt
cli
pop
dec
repz
xor
xchg
add
inc
xchg
daa
outsb
pop
dec
adc
fucomp
mov
addr16
es
cltd
lock
dec
out
fbld
jae
pop
scas
jno,pn
cltd
inc
dec
stos
fdivp
push
stos
lods
ds
movsl
push
in
cmc
popa
fs
xchg
xchg
call
ret
cmp
mov
xchg
lcall
inc
xchg
pop
popf
int3
fstpl
inc
aaa
xor
fldenv
iret
mul
inc
sub
sub
jns
outsb
push
pop
mov
mov
adcl
lret
jge
out
out
je
xor
mov
test
cmp
jp
mov
lcall
push
jno
rcrb
sbb
mov
sbb
in
dec
je
dec
and
data16
shll
test
jbe
pop
sar
push
pop
pop
sahf
cld
lds
jns
xchg
fnstenv
jbe
push
push
adc
mov
sub
adc
jne
cmc
es
cwtl
jo
mov
pop
lret
xor
sarl
push
dec
addr16
and
lcall
mov
or
lret
xbegin
pop
add
imul
sub
mull
dec
mov
cli
jmp
and
cld
and
inc
fdivs
icebp
aaa
lods
incb
adc
mov
lods
jae
mov
sti
icebp
repnz
xchg
jp
mov
cmc
cs
push
add
pusha
imul
dec
sbb
pop
fwait
out
pop
pop
pop
lds
adc
xor
push
xor
pop
scas
enter
or
jmp
sahf
jbe
cmc
mov
xor
std
jp
mov
mov
cmpsl
imulb
mov
add
push
cs
sub
xor
dec
loope
push
inc
lret
push
out
xchg
xor
das
ja
dec
lret
pop
xchg
lcall
or
pop
push
into
dec
jno
scas
ja
jp
jle
lods
daa
mov
loop
dec
test
add
sarb
jecxz
fwait
and
push
mov
adc
sub
add
jle
xor
leave
mov
js
je
imul
dec
lret
fimull
sarl
lret
mov
cmp
and
pop
loope
or
cmpsl
out
mov
loopne
push
nop
xor
int
les
pop
cmp
pop
lea
dec
test
stos
inc
scas
xor
push
xchg
sub
popf
jecxz
call
or
adc
push
adc
aad
sbb
shlb
mov
out
ds
xor
mov
mov
imull
add
scas
cld
mov
test
lea
stc
adc
mov
or
push
xchg
pop
test
jg
ljmp
fldcw
jp
inc
adc
inc
mov
jnp
xlat
imul
xor
xchg
out
in
adc
jp
aas
or
jnp
xchg
sbb
repz
cs
je
xor
push
in
sbb
in
and
mov
cltd
cmpsb
pop
sub
and
insl
loopne
mov
xor
and
cltd
cmp
cmpl
mov
add
sbb
daa
cmp
das
xchg
ret
aaa
dec
push
xchg
jle
dec
push
out
and
adc
pop
sbb
xor
movsl
in
mov
aaa
mov
pop
jg
cmp
mov
andl
dec
test
jecxz
mov
aam
movsl
movsb
dec
mov
lahf
imul
lret
dec
rorb
add
sbb
sar
ret
mov
test
data16
cmp
sbb
lahf
inc
sub
inc
inc
jle
cmpsl
xchg
xchg
push
lds
addb
mov
xor
mov
push
lods
mov
add
daa
dec
push
scas
xor
mov
cmp
add
arpl
in
loop
inc
call
push
mov
rolb
xchg
cmp
push
pop
cmp
jmp
sub
mov
jmp
add
outsb
outsl
jae
mov
sahf
mov
cwtl
jb
pusha
xchg
fbstp
notb
and
std
fwait
mov
jge
xchg
stos
fwait
xchg
shr
arpl
push
in
lcall
push
mov
lcall
xchg
cmp
sub
lret
lock
repz
sbb
xchg
bound
lods
push
popf
jne
aas
dec
dec
mov
and
lret
xor
add
push
sub
into
pushf
xchg
lock
fs
mov
jle
lcall
or
lds
in
pop
aam
mov
xchg
fs
cld
mov
sub
push
gs
xchg
imul
movsl
adc
shlb
add
cmpsb
adc
mov
push
addb
jne
cmp
sahf
inc
xchg
and
lret
dec
cmc
sbb
inc
inc
cmpsb
aad
bound
nop
push
jno
mov
push
daa
sbb
incl
sbb
lcall
jp
ss
cmp
or
shll
mov
ss
push
push
jge
mov
cmp
xchg
mov
cmpsl
push
out
mov
sahf
repnz
test
pop
mov
sub
pop
jae
lods
in
shll
call
je
xchg
js
inc
or
xor
adc
negb
xchg
add
dec
cltd
insl
aaa
jecxz
clc
ficoml
xchg
orl
into
test
fwait
js
mov
scas
dec
dec
fldl
mulb
pop
shrl
mov
sti
fxch
mov
dec
pop
adc
cmp
dec
mov
add
push
fisttps
aad
xlat
sub
add
in
sarb
and
daa
push
mov
cmpsb
cmp
fsubs
sbb
add
repnz
adc
dec
notb
lret
adc
stc
orl
loop
jbe
ljmp
mov
push
and
lds
xor
and
xchg
fs
or
orl
cs
and
adc
cmp
mul
data16
cmp
in
repnz
lcall
lahf
mov
mov
xchg
fcmovne
xchg
push
adcl
xorb
and
fldenv
jns
push
or
pop
or
fcmovu
and
test
sub
push
dec
adc
dec
add
jg
aad
xchg
ret
fistps
shr
xor
jmp
push
mov
nop
xor
rolb
loop
jb
mov
cmp
adc
adc
sbb
in
pop
testb
inc
push
xchg
jae
cmp
push
mov
and
pop
sti
dec
and
sarb
cmc
push
inc
insl
pop
push
popa
mov
ja
test
push
rcr
enter
mov
sub
call
inc
sub
cmp
mov
mov
cmpl
mov
xor
sub
xchg
daa
jg
or
mov
data16
xlat
push
rcll
jp
cmp
sub
enter
shl
arpl
int3
lea
js
xor
push
sub
enter
jl
jg
mov
xchg
jge
das
xor
xchg
stc
push
das
jne
sub
popa
inc
jae
jno
push
mov
or
add
dec
stos
xchg
jae
jb
xchg
insl
fsts
and
pop
sti
cmpsl
cmp
int
jb
or
inc
jp
jl
inc
pop
ds
das
scas
ret
lods
pushf
sub
adc
adcb
insl
push
pusha
iret
ja
sub
call
in
dec
inc
and
mov
in
xlat
rcl
xchg
jge
sbb
jge
imul
daa
enter
sub
popa
jno
xchg
rolb
jne
fidivrs
aas
stos
pop
aas
jp
lret
test
pop
pop
mov
mov
mov
insl
fbstp
adc
fnsave
adc
pusha
sbb
pop
rclb
rcr
jp
dec
cmp
in
jnp
cmp
lods
pop
or
lods
clc
or
jo
lcall
mov
cwtl
enter
jl
arpl
and
xchg
pop
or
sbb
lahf
shlb
mov
adc
out
cmp
xchg
daa
pop
cs
xchg
adc
xchg
and
inc
and
push
push
les
shlb
xchg
adc
pusha
push
ret
lods
lds
ss
pop
mov
fsubrp
sbb
dec
test
movsl
insb
clc
shrd
ds
idivl
imul
aam
mov
jbe
xor
and
xor
lahf
cs
mov
test
xor
lcall
ja
push
pop
cltd
xchg
stos
bsf
lods
mov
and
sbb
int
pop
lds
addb
and
mov
cmp
ljmp
xchg
mov
push
iret
push
lds
pushf
mov
and
jp
sub
aam
lea
cltd
xchg
pop
or
hlt
addb
adc
dec
mov
pop
and
cmp
pop
mov
arpl
fnsave
daa
mov
push
rcl
jle
or
push
pop
and
int3
ds
dec
xchg
loope
and
sarb
bound
pop
mov
es
mov
and
mov
pop
outsl
mov
and
jmp
push
fstps
call
jecxz
mov
xchg
fwait
in
sbb
addr16
sub
pop
push
jmp
mov
adc
pushf
add
inc
dec
incl
imul
push
mov
mov
push
fwait
pop
mov
ficomps
pop
xor
call
xchg
out
out
xchg
lahf
stos
addr16
push
mov
add
lock
imul
jmp
pop
push
test
sbb
adc
cmp
data16
mov
pop
lret
jb
push
pop
stc
add
adc
add
cmpsb
dec
adcb
out
mov
mov
inc
fcmovnu
mov
pop
in
fs
or
add
xchg
jb
in
shlb
or
jno
cmp
ret
imul
jnp
and
in
cli
lea
inc
imul
mov
or
inc
clc
push
popa
dec
jecxz
repnz
and
pop
push
pop
xchg
fistpl
gs
ja
mov
inc
gs
js
movsb
pop
daa
push
cld
jle
mov
pop
loope
stc
outsl
sbb
adc
add
jbe
sub
scas
aas
iret
mov
inc
push
fcmove
mov
shrb
loope
sub
orl
sbb
call
jns
xchg
xchg
ds
adc
std
cltd
jecxz
jl
fsubrs
rcr
dec
inc
push
cmpsb
pop
repz
dec
int
xchg
pop
shl
mov
jg
popf
jo
js
xor
rcrb
outsl
jbe
dec
call
leave
insl
dec
sbb
lret
dec
or
push
sahf
add
xor
iret
mov
stc
xor
mov
or
pop
and
push
dec
ljmp
sbb
mov
jns
cmp
clc
mov
call
dec
mov
xor
jns
inc
push
fstl
loopne
push
sub
cmpsl
jns
jns
aam
mov
cmpsl
cmp
xlat
enter
pop
add
push
test
cmpsb
nop
rcll
jae
pop
fstpl
popf
mov
jo
lret
sbb
loope
shll
popa
pop
jmp
inc
loope
mov
add
inc
or
daa
fistps
xor
sub
adc
testl
push
push
movsb
push
inc
es
ja
rol
mov
and
lea
cmp
and
imul
insb
push
sub
test
int
loope
and
arpl
mov
gs
jne
sub
notl
jae
fwait
jb
push
fs
pop
in
cwtl
and
add
aad
jns
mov
aam
imul
adc
jnp
mov
adc
xchg
insl
mull
dec
push
scas
stc
loopne
pushf
jge
mov
xor
std
jmp
xchg
cmp
jns
clc
loopne
and
addr16
int3
iret
xor
test
mov
xlat
mov
popf
shl
xchg
call
dec
sub
push
fwait
xorb
xchg
push
or
mov
jge
xor
mov
sti
aaa
and
push
xchg
pop
scas
rolb
or
push
loope
mov
outsb
cmc
sbb
cmp
bound
stc
push
fimull
iret
pop
mov
mov
cltd
dec
leave
hlt
es
repz
push
adc
test
nop
int3
add
mov
sub
pusha
mov
push
das
or
test
imul
lret
push
ds
stos
in
imul
jge
xchg
cmp
repnz
xchg
scas
pop
insb
iret
adc
mov
mov
in
aas
sarl
sbb
push
or
icebp
xor
sbb
std
inc
les
jle
clc
dec
les
mov
sbb
filds
lret
movl
jle
dec
mov
jge
adc
mov
push
adc
sbb
imul
adc
adcl
not
pop
xor
mov
mov
add
or
jl
test
sub
adc
sub
lock
pop
or
push
push
test
mov
ljmp
sub
cmpsb
mov
test
ret
mov
xor
dec
inc
daa
cmp
ss
adc
ljmp
cmp
fldcw
icebp
ja
jne
fsubl
out
aam
jno
sub
fs
jne
repnz
repz
icebp
jle
cltd
insl
das
jmp
mov
mov
cmp
sub
xor
test
ja
xchg
push
shlb
pop
jns
cmp
adc
pop
add
ja
dec
xor
dec
push
dec
xchg
andl
into
int
sbb
mov
hlt
addl
repz
mov
lock
pop
fstps
lock
fstps
fldt
leave
cmp
fwait
shll
inc
cs
insb
pop
push
js
movsl
jae
push
sbb
xor
js
mov
mov
cli
repz
push
and
repz
mov
mov
movsb
push
daa
mov
les
test
xchg
push
insb
push
push
or
js
pop
inc
dec
ret
mov
fisubrs
ret
inc
pop
dec
je
imul
test
mov
add
loopne
faddl
fimuls
mov
mov
push
test
mov
add
test
and
aaa
jae
xchg
sbb
xor
enter
out
mov
icebp
lock
rcr
jge
xchg
mov
cs
es
scas
mov
nop
cmpb
push
pushf
mov
sbb
xchg
cmp
sbb
imul
test
jb
mov
fwait
xor
icebp
stos
outsb
cmpsl
fldt
xor
sbb
sbb
in
sti
imul
sub
xchg
sub
fmulp
pushf
xchg
xor
lock
test
jmp
hlt
push
inc
mov
xchg
jae
xchg
subl
push
or
shlb
lahf
sub
ja
inc
hlt
jp
in
mov
inc
loope
dec
lahf
scas
pop
push
or
and
sar
xor
cwtl
dec
in
sarb
mov
pop
cmp
mov
aaa
mov
adc
push
incl
out
in
dec
insl
imul
in
or
lock
call
mov
mov
stos
out
repnz
inc
fnop
jg
mov
pop
enter
pop
sub
lret
fisubrl
outsl
enter
and
dec
adc
mov
mov
cmp
xor
sti
iret
lea
mov
jmp
sub
rcrb
sub
jo
pop
icebp
push
out
ret
jl
imul
and
lock
mov
mov
jmp
jmp
sbb
push
nop
mov
mov
lahf
pop
add
xor
xlat
xor
push
repz
popa
inc
pop
and
jmp
pop
sahf
inc
pop
sbb
in
pop
scas
mov
adc
push
xchg
jno
icebp
or
jge
mov
test
xchg
inc
lret
cli
pop
in
pop
lret
lods
pusha
and
es
mov
push
xor
call
pop
adc
aad
popf
pop
lods
nop
jmp
dec
or
pop
sarb
sub
insl
cltd
cwtl
in
ja
xchg
jnp
or
sahf
push
cwtl
sub
inc
rorl
imul
jge
adc
push
stc
add
test
pop
cli
sbbl
mov
mov
arpl
ret
sbb
lcall
ret
cmp
adc
pusha
pop
xor
pop
mov
xor
cs
jl
fcomps
mov
xchg
imul
jle
es
xlat
outsb
enter
pop
outsb
loopne
movsl
mov
movsb
xchg
iret
scas
pop
push
cmp
xchg
in
mov
repnz
xor
cli
push
aad
inc
lea
lock
jl
inc
jbe
mov
stc
adc
xchg
and
dec
jp
ds
xchg
test
and
cmp
push
popa
sbb
sbb
call
lcall
fimuls
lcall
cmp
push
repz
mov
outsl
rclb
adcl
adc
sbb
cmp
inc
mov
push
in
mov
xchg
nop
mov
incl
cmp
js
test
mov
shlb
mov
inc
xchg
xchg
push
cmp
iret
insl
inc
add
and
add
out
call
mov
xor
dec
xchg
test
cmp
fistl
or
aas
jne
cltd
movsb
pop
aas
mov
in
pop
sbb
dec
iret
and
and
je
iret
repz
dec
xchg
aas
scas
insb
aaa
cmp
into
dec
lret
xchg
call
pop
push
into
rcrl
cmpsl
into
push
mov
js
pop
inc
loop
outsl
cli
scas
mov
dec
fadd
pop
fnstsw
mov
xor
repnz
nop
push
mov
or
pop
xchg
iret
pop
cli
addl
ret
inc
scas
sbb
sub
jl
test
cmp
xor
scas
rcll
xor
bound
push
jb,pt
xchg
xlat
jg
sub
mov
inc
push
and
es
jecxz
stos
jae
pop
aaa
aam
nop
or
mov
ja
lcall
fstps
xor
mov
sbb
imul
test
scas
inc
pop
hlt
jl
mov
jno
xor
mov
sub
daa
xor
jns
pop
cmp
adc
inc
pop
add
mov
pop
sbb
mov
mov
add
inc
ficomps
or
popa
iret
outsl
adc
cmp
sbb
jb
ja
mov
int3
mov
les
sbb
inc
inc
inc
lods
inc
add
lods
push
inc
push
xchg
out
push
and
and
dec
push
push
shl
cmp
shufps
fildl
add
movsl
shlb
imul
sbb
cmc
pop
adcl
mov
push
aam
dec
mov
sbb
mov
ss
push
pop
ss
pop
sub
pop
js
jae
jae
fcmovnbe
arpl
enter
mov
add
xor
inc
in
jecxz
xlat
iret
bound
or
adc
insb
xor
xor
mov
xlat
icebp
popa
mov
mov
bound
push
sbb
fistpl
jg
in
adc
cmp
call
push
adc
arpl
mov
mov
add
data16
pop
push
ja
test
ret
out
and
loop
pop
imul
push
cmp
push
divb
call
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
jmp
add
lret
lret
add
pop
aad
mov
pop
adc
daa
out
ljmp
lods
cltd
xchg
add
add
outsb
jmp
popf
gs
int3
stc
stos
or
stc
andl
xor
inc
mov
and
mov
outsl
pop
and
test
mov
lahf
iret
icebp
mov
dec
frstor
jns
jb
movsl
mov
cwtl
das
jl
out
mov
mov
xor
jp
outsl
pop
sub
and
add
mov
inc
mov
inc
adc
and
cmp
mov
mov
dec
paddusw
addr16
inc
dec
push
dec
out
bound
sbb
dec
mov
push
jge
sbb
jmp
inc
mov
jecxz
jp
mov
xchg
pop
dec
jg
mov
sub
sbb
sbb
jbe
into
dec
fisubl
mov
mov
and
mov
je
ljmp
mov
ss
outsl
ss
or
test
pop
mov
dec
jge
pop
mov
addr16
dec
sbb
adc
cmp
addb
subb
inc
xchg
pop
int3
push
testl
add
ljmp
ja
dec
out
inc
jge
mov
imul
xchg
jl
inc
sub
add
enter
mov
mov
xchg
mov
scas
fmul
arpl
not
add
jne
or
into
cltd
jns
mov
fs
push
notb
fstpl
test
lret
dec
pushf
sub
sub
xchg
adc
push
inc
jmp
cmpsb
loop
adcb
out
lcall
mov
sub
dec
mov
aaa
nop
mov
andl
pop
cmp
mov
andl
adc
add
push
and
sub
test
test
xor
nop
jns
popf
mov
enter
js
pop
pusha
pop
sahf
xchg
cld
and
jnp
ljmp
jno
stos
mov
add
fcoms
shll
adc
xor
mov
loopne
inc
dec
inc
in
sbb
xor
mov
adc
xchg
mov
pop
fnclex
and
cmp
mov
test
fists
add
pop
add
xor
mov
stos
arpl
pop
repnz
sub
movsb
jbe
hlt
dec
cmp
cmc
sahf
adc
testb
fs
icebp
cmpsb
mov
mov
xchg
and
or
inc
test
sub
bound
adc
aam
jo
adc
shl
add
movsl
xchg
lock
pop
cmpsl
push
cmp
pop
inc
aaa
ds
push
jmp
inc
cwtl
shl
push
or
mov
test
jl
iret
jae
imul
jbe
pop
nop
pop
fwait
andl
add
or
sar
xor
lds
andl
sbb
addl
test
jne
cmp
fildl
lods
iret
fildll
cmpsl
add
dec
jg
push
fstl
in
mov
add
add
mov
mov
cld
push
addr16
call
adc
nop
inc
rol
out
adc
arpl
jbe
call
xchg
sbb
ja
cs
test
mov
cmp
pusha
jo
ja
xchg
mov
inc
je
popf
mov
xchg
popa
ret
inc
bnd
inc
out
adc
and
mov
or
cltd
and
add
and
bound
aam
stos
addr16
les
dec
mov
lahf
addr16
in
mov
loope
sbb
mov
stos
fwait
sub
xor
les
sti
ljmp
add
add
cmpsb
inc
fisttps
push
lock
vmwrite
xor
das
arpl
enter
stos
iret
adc
sub
fucomi
push
repz
sti
or
push
js
popf
sub
jmp
add
in
test
and
pop
and
or
adc
lret
push
dec
xor
inc
sub
cmp
add
test
mov
es
jge
mov
out
xchg
cli
add
add
mov
inc
cmp
out
iret
dec
push
loop
andl
lahf
in
rorb
mov
insb
sti
xor
and
fbld
mov
push
iret
les
jns
shufps
push
inc
orl
sub
adcb
outsl
mov
fwait
dec
jnp
mov
add
mov
jp
cmp
push
and
cld
int
mov
dec
pop
jo
jns
bound
loope
or
cwtl
insb
scas
jne
mov
xlat
in
je
or
shll
mov
xor
sub
fldenv
and
xlat
bound
iret
add
scas
dec
ljmp
out
fwait
dec
and
clc
fwait
or
jg
adc
sbb
out
mov
lods
ss
mov
in
inc
cmpsl
lret
filds
mov
iret
cmc
rorl
lret
scas
out
pop
call
rcll
pop
sub
xor
ljmp
in
test
popf
and
je
aas
pushf
cs
cmp
stos
mov
xchg
xor
dec
sbb
rcrb
test
cmp
movsl
push
hlt
leave
je
sub
repz
xchg
fcompl
test
cmp
mov
shlb
mov
movsb
push
cmp
add
pop
pop
inc
sbb
push
adc
div
dec
cs
imul
push
mov
imul
xlat
mov
and
dec
inc
sub
push
fldlg2
jne
sbbl
sti
mov
add
pop
ss
mov
loopne
sarl
mov
or
shrl
xchg
popa
and
daa
out
inc
push
mov
fwait
lahf
jo
push
cmp
lret
and
leave
mov
and
test
je
sub
mov
imul
mov
dec
add
pop
or
stc
xor
xchg
jmp
xchg
xchg
adc
orl
lcall
xor
and
iret
xor
or
jl
ja
stos
sub
mov
push
test
fnsave
lods
lock
mov
sub
rclb
lods
and
pop
jl
pop
pusha
imul
jbe
jno
lods
sbbb
icebp
jns
scas
mov
ss
scas
les
add
mov
enter
cmp
xor
dec
dec
cmpsl
push
test
cmp
mov
fs
rcll
loop
mov
lods
xchg
inc
dec
and
dec
les
cmp
sbb
pop
aad
mov
cld
js
lret
nop
mov
incb
lret
arpl
dec
jae
or
fimuls
dec
mov
pop
xchg
stos
divl
mov
loope
sarl
das
sbb
fnstsw
in
xchg
iret
fistps
repz
sbb
sbb
inc
subl
xor
mov
mov
popa
inc
lret
jb
jl
mov
ret
push
add
scas
mov
push
sub
out
jg
addr16
shr
fisttpl
jo
inc
scas
in
dec
xorl
stos
in
push
lret
bound
pushf
mov
fnstsw
imul
iret
jg
adc
loop,pt
je
pop
out
and
aad
pop
jno
int
dec
leave
stc
jne
xor
pop
jb
jmp
push
and
inc
xchg
sti
sbb
pop
arpl
pushf
cwtl
scas
adc
cmp
arpl
mov
cmpsl
lahf
outsl
mov
xor
xor
inc
push
inc
fdivp
pusha
das
xchg
test
xor
ja
fbld
lods
scas
mov
ret
mov
mov
js
jmp
push
mov
push
filds
mov
enter
sub
dec
adc
scas
mov
jmp
or
lock
dec
pop
push
sbb
pop
lahf
hlt
mov
rolb
es
sub
add
movsb
out
loopne
inc
fcompl
test
xor
dec
add
movsl
mov
xchg
mov
pop
jg
dec
out
popl
aam
sub
cs
adc
add
clc
rcrl
pushf
and
popf
lods
push
or
sbb
mov
loop
push
jl
dec
lret
out
push
sbb
enter
imul
and
mov
mov
sbb
jae
pop
jo
sub
cwtl
rcr
push
jne
gs
in
adc
rcrl
ret
or
mov
jmp
mulb
imulb
xor
dec
push
mov
pop
insb
pop
loope
roll
sbb
les
cmp
imul
cmpsl
dec
in
loope
ret
test
or
subb
adc
mov
pop
cmp
mov
movsl
mov
and
lret
les
aaa
aam
sarl
lret
and
jmp
sarb
aas
in
add
fwait
adc
mov
fidivl
ss
shll
sub
mov
daa
orb
movl
push
dec
adc
lea
or
cmpsb
sub
push
in
cs
dec
jae
fstl
test
ret
adc
dec
insl
dec
icebp
aam
jecxz
mov
xlat
inc
mov
jno
xchg
insl
adc
dec
loope
ret
sbb
sbb
cmp
in
aaa
int3
sub
test
imul
daa
mov
pushf
insb
jnp
lods
dec
mov
ljmp
mov
dec
nop
es
sahf
sbb
int3
mov
js
xor
xchg
inc
aas
pop
out
mov
lahf
in
adc
xrelease
push
dec
jb
aas
gs
pop
pop
or
pop
arpl
scas
mov
xchg
mov
ds
mov
sbb
adc
lods
push
add
push
adc
jbe
jns
roll
addr16
cmp
scas
push
sti
pop
xadd
std
sub
lods
pop
push
jle
xchg
lea
xchg
fwait
cmp
lret
loop
aaa
jne
out
test
or
ja
fistps
pop
adc
das
je
or
pop
in
dec
addb
lods
jle
jecxz
popf
divb
lock
xchg
mov
ds
jmp
jmp
dec
leave
in
testl
xchg
sbb
in
js
xlat
push
fisttpll
in
sub
rcrl
jbe
pop
jae
fsubp
das
add
xchg
rcll
lahf
cmc
imul
cwtl
inc
mov
addb
push
insl
dec
adc
cmc
daa
je
jns
mov
sbb
mov
enter
pop
test
add
push
dec
stos
imul
pop
cmp
das
icebp
into
mov
icebp
sbb
pop
int
jecxz
test
adc
outsl
clc
mov
jg
nop
pop
inc
inc
inc
push
lods
mov
lods
loop
das
icebp
mov
int
leave
mov
and
neg
mov
faddl
nop
mov
scas
sub
xchg
pop
push
addr16
cmp
cltd
sti
outsb
jecxz
or
pop
add
inc
push
and
pop
iret
test
pushf
fdivs
pop
arpl
push
in
cld
and
pop
jecxz
enter
mov
jg
mov
in
mov
mov
mov
and
dec
sbb
out
mov
inc
mov
inc
fiadds
mov
fwait
outsl
sahf
inc
loop
out
or
and
push
cmc
stos
paddsb
cmp
test
lret
shrl
inc
jno
inc
pop
inc
mov
insb
fisttpll
dec
test
sub
test
push
or
dec
jmp
jb
and
iret
pop
or
cld
xor
add
xlat
xor
data16
fdivl
loop
inc
sbb
jp
adc
sbb
imul
or
inc
call
std
hlt
cmp
and
adc
sub
cmp
cmpl
je
adc
std
repnz
inc
mov
pusha
lcall
lods
ss
loop
mov
jmp
xor
out
and
adc
jne
fsubl
mov
lds
sub
arpl
jns
or
test
clc
insb
cmp
push
arpl
jmp
xlat
mov
aam
add
cwtl
test
or
stos
ss
xor
lret
js
jns
sub
insl
lret
xchg
push
xor
push
jbe
xlat
xchg
pop
out
xchg
jmp
push
push
and
shr
in
dec
daa
in
push
mov
shl
or
sub
mov
xor
out
or
jno
in
cli
or
jno
mov
rolb
and
dec
or
subl
xor
and
call
xchg
shlb
lea
popa
cld
add
mov
push
int3
cmp
aas
cmp
sub
ja
dec
mov
dec
xor
sbb
and
fwait
andb
push
jne
scas
mov
and
sbb
pop
inc
mov
sbb
out
sbb
cli
push
aas
into
xlat
fstps
dec
aam
cmpsb
outsl
cmp
cmpsb
sbb
out
xorb
notl
and
repnz
test
mov
ret
insl
mov
sbb
inc
lea
adc
or
dec
sbb
mov
lds
pop
cmp
fs
aad
in
idivl
sti
sbb
ret
push
cmpsb
cmp
xchg
xor
shrb
inc
sahf
bound
xchg
or
cmp
lcall
fdivs
enter
out
mov
adc
mov
mov
fnstcw
rcrb
fistl
inc
insb
jb
mov
imul
xchg
movlps
dec
in
add
mov
jmp
xchg
pop
jbe
mov
sbb
fs
push
adc
aas
push
sub
out
pop
add
push
rcl
inc
inc
daa
dec
xor
call
jb
jp
addb
fistl
inc
lods
adc
arpl
xor
xchg
or
dec
xor
imul
ficomps
jp
movsl
xor
mov
sbb
ss
iret
in
xor
sbb
jecxz
jb
es
xchg
mov
outsl
in
lret
loop
or
pop
in
arpl
jge
lods
adc
enter
jns
fmuls
mov
das
add
pop
lods
movsb
cmp
xlat
and
dec
gs
xchg
imul
and
test
push
mov
dec
fld
pop
out
int3
jns
mov
dec
insl
mov
inc
jecxz
movsb
sbb
pop
dec
push
dec
mov
jae
imul
pop
jnp
sbb
inc
jo
sbb
das
inc
aaa
je
jae
fidivrl
mov
xor
adc
sar
jle
pop
mov
or
push
aam
out
or
adc
aad
adc
pop
jle
push
scas
std
lret
in
aas
data16
sub
sbbb
es
jno
fwait
mov
leave
out
cmp
cli
sbb
pop
push
mov
leave
jl
or
in
test
and
xor
pop
push
push
dec
pop
mov
cmp
xchg
sub
inc
jbe
stos
cmpsb
sub
jge
nop
push
es
loope
push
inc
adc
sti
repnz
je
popf
jecxz
mov
imull
fldenv
jbe
xchg
inc
sarb
pop
pop
jb
xlat
jecxz
cmc
push
pop
add
cltd
pop
and
push
data16
outsl
clc
mov
bound
dec
jnp
lret
cmpsb
loopne
pop
pop
xchg
pop
jmp
enter
dec
outsb
sbb
loopne
jecxz
ljmp
push
les
sbb
mov
stc
mov
xor
test
sbb
mov
repnz
ret
cld
movsl
subl
movsl
fnsave
push
jg
cld
pop
dec
add
in
gs
mov
divl
jecxz
pop
stos
sbb
sahf
push
xor
pop
lahf
mov
addr16
mov
push
mov
cli
xchg
push
push
xchg
shlb
aas
adc
cmp
repnz
out
add
rclb
mov
add
adc
fisubrs
xchg
push
arpl
test
jbe
xor
and
or
gs
fidivl
ss
loop
fadds
lea
out
cmp
sub
ss
and
cmp
jl
sti
das
ficomps
or
sbb
or
push
jae
adc
outsl
mov
mov
jle
dec
cmp
mov
js
jo
icebp
and
pop
movsl
ja
js
sub
cmpsb
xor
xor
out
clc
clc
push
sub
xor
mov
icebp
mov
xorb
xchg
sub
dec
and
cmpsb
repz
test
push
xchg
pop
sarl
outsb
fsubrs
sub
pop
aaa
add
mov
aam
popf
js
addr16
xchg
or
mov
sub
ss
mov
or
fnop
movsb
out
inc
fs
push
imul
cld
dec
std
nop
daa
pusha
movsb
cld
sbb
je
xor
xchg
adc
popa
add
inc
mov
sbb
out
out
xchg
pop
lret
cmp
das
shrl
mov
add
xlat
negb
xor
test
dec
in
sarb
cmp
movsl
and
pop
pop
movsl
push
lds
xor
fsubl
xlat
adc
push
and
xchg
push
sub
hlt
addr16
pop
mov
jl
or
js
mov
pushl
inc
jnp
js
rcr
jb
mov
in
in
cmpsb
xor
sbb
mov
imul
sub
roll
xor
loope
je
cmpsb
pop
jmp
pop
xchg
adc
add
rcrl
lea
mov
xchg
sbb
xchg
scas
ds
sub
add
imul
cmc
lock
aas
sub
mov
mov
ss
lds
add
loope
je
mov
cmp
ja
xor
push
ret
test
clc
xchg
outsb
mov
subl
push
rcll
add
aas
add
xchg
mov
in
cmp
xor
add
cmp
sbb
xor
addr16
and
lods
jne
adc
call
call
inc
dec
into
jp
scas
sarb
mov
popa
rcll
icebp
inc
jecxz
stos
test
add
cwtl
loope
xchg
fwait
mov
ret
jle
dec
pop
lods
loop
cmpsb
std
push
daa
and
ret
lods
icebp
adcl
sub
in
dec
xorl
jno
loopne
jns
jecxz
mov
mov
ljmp
pop
nop
pop
xchg
rolb
mov
jge
jecxz
adc
sbb
mov
add
cli
mov
sub
dec
testl
cmpsb
push
inc
mov
jne
bound
push
call
call
sub
push
cmp
movsl
pop
push
jbe
mov
movsb
ja
lds
mov
shlb
shl
call
adc
lea
pop
fidivrs
mov
and
mov
jne
xchg
mov
jl
addr16
cmpsb
sar
mov
sti
int3
adc
mov
pop
xchg
and
jmp
cwtl
jbe
push
arpl
mov
adc
mov
dec
mov
lods
cs
cmc
mov
ja
and
and
subl
lods
int
or
and
or
sub
in
movsl
bound
fcoml
jns
sbb
mov
ds
jle
mov
or
cmp
xchg
dec
lods
sbb
negl
in
pop
imul
pavgw
iret
call
jb
dec
setno
ja
sub
sahf
add
mov
pop
cmp
pop
movsb
mov
out
xor
call
and
jl
cli
test
adcb
repnz
dec
inc
xchg
sbb
cs
push
or
stos
enter
adc
lret
mov
hlt
and
inc
leave
fstl
mov
fwait
or
vhaddpd
aaa
test
or
jae
popa
hlt
pop
sub
mov
sub
lcall
insl
lret
mov
push
mov
add
fists
cmpsb
pop
dec
stos
jmp
daa
dec
mov
jne
pause
jl
imul
push
mov
roll
xor
rol
mov
xchg
ret
sbb
out
int3
repnz
sbb
mov
sahf
inc
cmpsl
imul
pop
cmp
jno
es
pop
pop
jmp
hlt
gs
push
les
ret
je
inc
stos
push
outsb
jns
les
sub
dec
mov
lret
repnz
sbb
fcomps
fs
ficomps
or
jno
sub
add
or
sahf
xorl
or
add
movsl
shlb
jbe
in
shrd
adc
or
xchg
daa
shlb
stos
pop
mov
sbb
adc
loope
int3
push
pop
into
cmp
jl
leave
mov
inc
sbb
rol
into
or
dec
add
movsl
jle
pop
jmp
and
in
add
sub
mov
cmpl
enter
clc
push
fdivr
fildl
mov
mov
sub
dec
jo
ret
pushf
stos
or
pushf
divl
shrl
outsl
and
hlt
insb
add
out
mov
lret
sub
sub
and
jae
jl
push
bound
fsubrl
push
xchg
pop
and
popa
cmp
fwait
clc
jne
ret
inc
push
fstpl
scas
insl
pop
rorb
arpl
mov
sbb
sahf
mov
dec
outsb
inc
mov
xchg
fsub
test
pop
fwait
push
dec
scas
cmpsb
iret
push
lahf
inc
adc
cmp
gs
inc
jo
scas
add
cltd
push
xor
outsl
push
pop
ja
xor
ljmp
cld
sub
cmpsb
sub
jb
sub
out
dec
mov
lret
mov
and
mov
mov
repnz
mov
lret
sub
loope
lds
call
jmp
sub
pop
popf
leave
insb
negb
cmp
mov
aad
xchg
cmp
imul
add
push
mov
pop
xchg
fnsave
insb
and
xrelease
or
enter
cmpb
and
jns
out
push
inc
inc
adc
imul
xor
repz
mov
or
repnz
jne
in
mov
leave
mov
mov
movl
jae
aad
enter
mov
add
lret
test
jne
xchg
pop
stc
mov
add
pop
jns
movsb
lret
repnz
sbb
fcompl
push
sahf
shlb
adc
ja
out
lods
inc
cli
jmp
clc
pop
xor
rorl
iret
jns
jnp
mov
adc
mov
hlt
int3
pushf
enter
adc
adc
cwtl
iret
movsb
pop
nop
cs
push
test
lock
add
xchg
push
dec
sub
push
hlt
movsb
ljmp
push
es
push
mov
mov
jno
pop
mov
stc
js
outsb
test
fcoms
inc
adc
in
out
out
xchg
adc
cmp
mov
imul
pop
jns
js
push
dec
in
xor
mov
out
pop
fwait
dec
push
add
out
xor
lea
push
or
mov
mov
scas
lret
mull
clc
mov
mov
jl
inc
js
xchg
gs
or
pop
lods
cs
in
ficomps
into
jmp
push
mov
mov
and
cmpsb
loopne
inc
imul
addr16
cs
imulb
xchg
push
sbb
jmp
and
aaa
stos
rolb
cmp
sbb
shrb
scas
dec
xchg
mov
pop
js
ja
bound
out
fsts
sbb
inc
jmp
div
sbb
lret
sub
movsl
push
lcall
and
ficoml
push
into
test
decb
sub
push
or
ja
sbb
pop
push
repz
pop
lahf
mov
inc
popa
fdiv
fdivs
cwtl
or
sbb
xor
pop
push
pop
add
jae
ret
and
mov
dec
sub
or
dec
int3
or
repnz
stos
mov
mov
imul
std
jg
push
or
aaa
adc
mov
or
negb
mov
pop
insb
sub
jne
lcall
cld
mov
and
dec
jne
xor
ret
pop
int
fnstcw
dec
cmp
arpl
lea
push
dec
jae
mov
cmp
xchg
mov
repnz
int3
xlat
in
rcr
rcrl
lods
icebp
pop
aas
sub
imulb
push
mov
scas
fwait
xchg
into
jg
push
xor
loop
push
xor
inc
pop
xlat
sarl
inc
ficoml
mov
xchg
xchg
std
or
rcrb
dec
aaa
out
loope
fdiv
sbb
pop
faddp
fs
cmp
xchg
inc
sbb
pop
jmp
dec
sub
pop
flds
aad
in
sub
lock
aaa
mov
test
divb
xlat
decb
mov
inc
or
movsl
pop
push
insl
cmp
or
out
sub
shll
xchg
adc
daa
mov
mov
push
or
cwtl
sub
imul
and
inc
adcl
imul
imul
jnp
xchg
and
jl
push
pop
push
bnd
lret
mov
cli
frstor
mov
xchg
pop
jns
inc
mov
stos
add
mov
rcll
fidivrs
jge
and
xor
mov
or
mov
subb
jns
push
dec
jbe
sbb
pop
sbb
movsb
xchg
outsl
rorb
test
sbbb
cli
xchg
addb
aam
cli
dec
mov
repz
add
sub
or
inc
filds
cmpsb
adc
movl
call
imul
mov
dec
loopne
xor
shlb
negl
leave
xchg
xor
paddsw
data16
mov
in
or
mov
push
cmp
dec
je
orb
jge
leave
push
add
bound
xchg
push
std
sub
fmul
out
les
addl
std
dec
je
lds
push
test
fstpl
dec
jno
aaa
pop
sub
stc
adc
aaa
ret
mov
int3
movsb
mov
pop
enter
mov
dec
notb
jae
jle
push
push
pop
adc
ljmp
cmp
rol
xchg
add
pop
adc
and
jbe
js
lods
imul
ret
adc
fstpt
jp
jmp
xchg
cwtl
push
or
sub
flds
add
leave
insb
in
lea
rcll
add
sar
mov
push
pop
cmp
jl
sub
adcb
out
cld
xchg
fs
or
mov
aaa
stos
and
push
push
clc
inc
popf
movsl
cmp
push
lcall
fcmovnb
xchg
inc
ss
mov
add
sub
das
loope
rcll
sarb
sub
orl
xchg
iret
fmull
sub
mov
xchg
fiaddl
gs
out
adc
clc
sbbb
add
jecxz
das
lcall
movsl
adc
mov
xchg
lock
mov
jecxz
sub
stos
push
adc
cwtl
in
push
xor
test
test
stos
mov
ss
mov
fbstp
jae
sub
sbb
xchg
add
test
out
adc
fdivrl
sbb
push
xor
cmp
iret
or
add
js
jb
in
and
inc
test
bound
hlt
add
out
add
cmpsl
push
testl
cmp
mull
cmp
fiadds
hlt
loopne
mov
nop
adc
jmp
pop
repz
mov
insl
les
jo
ficoms
insb
pop
adc
push
push
imul
test
push
push
aam
jno
mov
insl
sbb
outsl
pusha
inc
in
mov
dec
ret
repz
xor
jbe
imul
jbe
imul
lret
add
sub
mov
mov
dec
mov
test
test
jae
pop
arpl
int3
push
aad
out
mov
mov
imul
loop
push
movsl
fcomps
mov
mov
xor
rclb
sub
push
cs
icebp
adc
jmp
mov
sbbb
sub
adc
insl
idivb
sbb
xchg
es
repnz
mov
fdiv
or
lods
xor
ficoml
cmp
push
mov
sbb
pop
adc
mov
xor
int
ss
popf
je
push
lcall
insb
movsb
dec
fs
mov
inc
push
add
ljmp
dec
lods
ja
push
sbbb
sub
and
jp
jg
insl
test
je
call
test
or
mov
iret
js
cmp
and
or
loope
mov
enter
mov
loopne
mov
and
sub
push
imul
adc
pop
inc
mov
mov
loopew
cmpsl
repz
push
scas
sub
adc
fistps
pop
jb
jnp
lahf
push
sbb
fwait
cmc
xor
negb
std
dec
test
jmp
addr16
out
cmc
cwtl
dec
add
mov
sbb
mov
hlt
and
insb
add
xlat
lcall
scas
pop
mov
dec
pop
clc
lfs
addr16
cmpsb
sub
pusha
push
pop
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
jmp
jnp
imul
sub
jns
cmp
cmp
adc
shrl
out
test
ja
sub
popf
loopne
inc
in
pop
inc
push
push
and
inc
or
test
adc
data16
cmp
push
sbb
or
fnstsw
andl
dec
or
call
test
add
inc
xchg
xchg
jae
push
jbe
in
pop
ret
inc
pop
lea
fimull
dec
lock
gs
stc
xor
mov
xchg
xor
rcr
jnp
cmp
or
xlat
nop
push
in
daa
pop
scas
lahf
push
stos
jne
or
clc
loope
and
jae
test
inc
sbb
mov
in
mov
scas
enter
xchg
ret
ljmp
leave
cmp
pop
fdivl
and
sti
in
movsb
fildl
lea
or
aam
scas
or
jbe
mov
cmp
mov
xor
cmp
popa
sub
push
inc
incb
inc
rcrb
lcall
jge
and
loop
mov
loope
fcompl
adc
push
sbb
xchg
pop
into
js
in
inc
mov
cs
aam
cmp
scas
test
sbb
nop
or
sbbb
shlb
ficoml
push
pushf
sti
cli
pop
jge
dec
add
imul
cmp
bound
out
sub
pop
inc
and
xchg
setge
fs
pop
outsl
hlt
movsl
inc
push
icebp
fidivrl
inc
jmp
dec
sbb
and
xor
sbb
mov
inc
fbstp
sahf
ds
out
arpl
fcmovnu
stos
addr16
inc
std
xchg
sub
jnp
mov
mov
sub
movhps
movsl
test
and
jmp
lds
push
notb
pmulhw
inc
xchg
lock
ss
jbe
insb
outsl
clc
sahf
cltd
xorl
xchg
arpl
out
repz
mov
ja
pop
out
sbb
enter
push
jnp
jle
xor
or
mov
cmp
les
scas
out
inc
lret
add
mov
mov
mov
jl
popa
fs
add
into
mov
push
mov
cmp
pop
add
sbb
out
mov
push
inc
xor
lret
lods
push
cmp
std
sahf
enter
sub
addb
stos
push
cmp
push
jmp
sahf
js,pt
ja
stos
rcrl
aaa
fwait
lock
bound
adc
fistl
pop
mulb
xor
fwait
sub
dec
test
addr16
xchg
or
stos
jne
adc
out
mov
insb
jno
fwait
jg
arpl
xchg
sbb
sub
lds
and
aam
cmpl
cmp
movsb
popf
push
inc
push
xchg
out
mov
popf
sub
or
mov
sub
je
bound
arpl
pushf
push
xchg
outsl
mov
push
push
push
imul
push
and
add
cltd
leave
fcmovne
xor
ja
mov
mov
cld
cmc
dec
xchg
andl
iret
cmp
adc
xchg
mov
cld
push
push
pop
icebp
fsubrp
sbb
xchg
repnz
sbb
jge
popa
loopne
push
aam
push
lret
xlat
xchg
jns
out
pop
jmp
div
push
popa
nop
popa
leave
ljmp
pop
push
mov
ror
adc
add
bnd
add
cmc
xor
subl
xchg
cld
sbb
test
sbb
dec
outsl
int3
mov
sub
dec
dec
fwait
std
repnz
mov
arpl
mov
add
inc
or
enter
xor
jl
sahf
inc
sbb
push
or
pop
sar
dec
out
dec
jbe
or
sub
movsw
push
imul
scas
sbb
lock
adc
add
std
and
aad
and
mov
mov
movsl
adc
jp
or
jmp
xchg
mov
xchg
adc
scas
outsl
shrl
outsl
scas
ficoml
in
jbe
rol
lcall
push
out
xlat
or
fdivrs
mov
cs
negb
inc
dec
rcrl
inc
std
push
aas
aam
mov
cs
cmpsl
or
push
les
gs
cmc
std
out
dec
fiaddl
mov
aam
push
sub
mov
pmulhw
jb
cwtl
cli
ficompl
hlt
nop
inc
clc
idivb
sub
sub
push
daa
fs
add
fcomps
neg
in
dec
dec
dec
inc
dec
mov
or
jge
mov
fsubl
pushf
jmp
mov
roll
mov
movsl
inc
iret
addb
fcmovne
aas
inc
sbb
out
mov
add
in
dec
insb
sub
icebp
les
xor
cltd
push
mov
add
and
push
lcall
or
hlt
es
jno
mov
push
fnstsw
push
ja
lds
cmp
scas
mov
mov
jecxz
cmp
lods
in
lcall
adc
in
movsl
call
mov
adc
cmc
out
xorl
inc
repz
jg
sbb
rcrl
je
adc
push
jge
add
mov
jmp
sbbb
cmpsl
sarb
aad
fcmovnb
nop
cmp
mov
xchg
push
sarb
pop
fdivs
repnz
ss
push
dec
mov
xchg
push
pcmpgtb
in
sub
jbe
push
sbb
into
xor
popf
sbb
jns
inc
fwait
dec
jbe
in
test
aad
rcrb
inc
in
push
mov
in
rclb
adc
scas
push
fildll
push
sbb
rorl
ret
aaa
cmp
add
fstpt
imul
stos
jecxz
loope
inc
mov
lcall
add
in
ja
mov
fld
mov
push
in
dec
xchg
dec
rolb
arpl
pop
mov
sti
adc
rclb
cmpb
fidivrs
sub
cwtl
jb
gs
popl
leave
jmp
lds
mov
inc
pushf
xchg
mov
mov
sbb
jo
push
mov
mov
and
push
cmp
lahf
xchg
ret
or
sbbl
mov
hlt
aas
in
dec
pop
inc
popa
cmp
mov
cmpsl
icebp
pop
cmpsl
cs
mov
fldt
cwtl
popf
dec
enter
test
dec
mov
hlt
mov
insl
and
popf
faddl
mov
aaa
lret
adc
add
xchg
fs
fnstenv
int3
sarb
xor
adc
loopne
dec
in
loope
pop
insb
in
or
and
int3
stc
nop
fists
push
aas
adc
notb
mov
xchg
xchg
and
push
out
je
mov
and
into
pop
mov
cld
mov
xchg
mov
cmp
imul
das
ljmp
call
jo
enter
stos
inc
push
rorl
sub
in
int
adc
orb
lock
js
cmp
aaa
je
cmp
xor
call
mov
xchg
push
pop
jle
adc
mov
xchg
out
add
mov
mov
sbb
mov
lock
jl
aam
outsb
lds
cmp
idiv
hlt
push
sti
sub
dec
popf
and
add
add
or
xor
dec
imul
roll
aam
hlt
imul
dec
ret
xchg
lods
sub
jge
sbb
mov
inc
and
insb
test
jecxz
pop
ja
fcomps
add
lock
add
inc
and
mov
adc
adc
and
mov
daa
mov
test
mov
add
adc
out
inc
bound
cwtl
push
push
out
js
arpl
int3
push
outsl
push
out
scas
cmp
xor
add
shl
mov
lds
roll
movsl
sub
mov
lds
lods
sub
in
je
ljmp
xor
add
xor
xor
push
lcall
add
mov
imul
ffree
shlb
ret
add
bound
aam
not
inc
sahf
add
sarl
mov
add
mov
jne
fdivrs
jge
push
fnop
add
ret
sub
inc
dec
or
enter
cmp
clc
jne
movsl
adc
xlat
mov
sahf
lahf
iret
sahf
fbld
nop
push
mov
push
and
mov
aam
fstpt
lret
pop
push
add
lock
inc
ret
pop
dec
sti
sti
cld
es
jle
daa
mov
dec
sarb
fldcw
into
add
xchg
inc
mov
inc
pop
xchg
adc
out
adc
push
std
pop
std
add
das
int
adc
lcall
ljmp
lods
scas
mov
xchg
fwait
stos
scas
in
fldenv
and
les
shll
jne
sub
jno
divb
out
or
test
pop
adc
imul
pop
mov
pop
xor
sbb
out
loopne
push
xor
add
xchg
or
mov
cwtl
ret
jb
mov
xor
and
adc
or
cmp
xorb
mov
adc
or
mov
lahf
fs
loopne
inc
mov
ja
pop
clc
lret
testl
pop
lahf
lds
insb
movsb
std
or
mov
jp
cmpsl
cmc
add
inc
push
dec
rcrb
jb
pushf
push
xchg
mov
fsubp
call
call
lcall
or
into
mov
loope
fnsave
lods
jb
cs
cld
add
xchg
in
les
inc
inc
in
pop
mov
sub
sub
daa
aad
xchg
stos
xchg
mov
int
mov
bound
mov
repz
sahf
repz
inc
imul
push
lret
aaa
jmp
mov
cmp
lods
dec
jbe
popf
insb
sub
and
add
and
xlat
pop
cltd
call
pop
vshufps
lods
clc
xchg
mov
aas
pop
cmp
sbbb
scas
xchg
lods
and
sub
test
push
ss
push
cmp
mov
xchg
ljmp
aad
cmp
daa
int
leave
cmp
push
rcr
and
out
jns
loopne
test
shlb
les
sub
and
cs
and
mov
loope
xchg
mov
and
or
in
daa
lods
or
and
inc
repnz
cmp
lds
pop
cmp
cli
test
lds
ljmp
leave
push
jbe
call
sbb
mov
mov
cld
popf
or
push
out
xchg
aaa
push
movsl
stos
fs
pop
jg
push
pop
rorl
fisubrs
add
lods
or
cmp
enter
xor
or
test
add
sub
xchg
push
ja
lock
imul
sub
sbb
jno
lret
push
lods
mov
test
xchg
aaa
cld
ljmp
jns
jge,pt
mov
adc
dec
stos
cmp
jne
addl
dec
and
lcall
cmc
ds
mov
push
sbb
lock
inc
mov
movsl
decl
aad
ljmp
std
adc
inc
add
mov
addr16
scas
or
mov
pop
sbb
notl
pushl
adc
and
adc
mov
dec
lahf
stc
add
jecxz
imul
imul
mov
push
in
pop
mov
sbb
mov
in
lret
and
das
insl
lahf
punpckhwd
or
lods
mov
and
fadds
ds
sub
mov
inc
ss
xchg
in
mov
mov
adc
rolb
mov
out
nop
push
sbb
icebp
outsb
cmpsl
ss
add
jno
xchg
fwait
into
hlt
or
int
push
xchg
push
mov
and
and
mov
scas
sbb
xorl
mov
std
clc
out
pop
inc
ret
clc
std
adc
aaa
push
mov
xchg
sbb
cmp
xchg
ret
xlat
pop
stc
popa
sti
xchg
jns
or
imul
sub
xchg
inc
cmp
pop
iret
imul
daa
ljmp
mov
cmpsl
mov
call
call
jns
sbb
cmpsl
sbb
arpl
xor
push
stos
dec
mov
dec
jp
adc
mov
jnp
xor
jmp
and
ss
mov
ret
lea
cmpsb
into
pushf
push
push
xor
aad
mov
adc
pop
jbe
cs
push
stos
xchg
jnp
stc
out
mov
sti
sub
mov
cmpsb
popa
loope
lds
push
repz
loop
out
adc
mov
stos
loope
or
jnp
jg
addl
aaa
loop
mov
sub
fisttpll
loop
pop
mov
xor
mov
clc
imul
mov
popa
lahf
inc
divl
test
lock
popa
xor
mov
nop
sub
lods
repz
adc
or
dec
cmpl
adc
mov
and
movsb
pop
cmc
jb
aad
cmp
or
push
sti
xor
mov
loope
movsb
dec
jno
cmpsb
sbb
push
inc
addr16
sbbl
test
std
fimuls
pop
push
push
outsb
mov
pop
mov
cmp
push
orb
pop
dec
jae
mov
sbb
cmp
sbb
lahf
add
inc
cs
ds
std
push
push
add
psubusw
negb
mov
xchg
adc
in
lock
mov
sti
out
xlat
push
and
in
cmp
adc
pop
fcomip
sub
stc
push
adc
ret
dec
add
jecxz
jecxz
push
mov
lret
jbe
out
sbb
test
ds
mov
jg
out
xchg
and
xor
xor
lods
cmp
inc
shlb
xorb
push
in
fmul
cmp
jmp
lret
mov
sbb
adcl
or
das
push
sub
fcom
pusha
les
jmp
loopne
lock
jecxz
hlt
or
adc
inc
jmp
mov
jecxz
test
outsl
popl
adc
xor
jb
pop
sub
inc
mov
movsb
sbb
aam
mov
sub
mov
sbbb
icebp
xor
sub
mov
sar
adc
mov
inc
and
ret
inc
mov
je
or
mov
rcrb
or
sti
mov
pop
mov
xor
xor
cmp
push
xor
inc
cld
or
xchg
loop
xchg
fadds
leave
add
xlat
fs
push
push
mov
push
push
jmp
xchg
call
rorl
pop
aas
mov
mov
xchg
xor
shl
xchg
push
adc
pop
sti
jmp
jbe
enter
sub
xor
lock
sbbl
cld
xchg
xchg
pop
sub
push
xchg
inc
aas
and
xchg
mov
pusha
mov
out
mov
push
push
xchg
stos
jnp
pushf
xor
test
mov
xchg
loop
movl
outsb
orl
in
mov
es
fildll
in
pop
inc
sub
das
popa
sar
and
out
repz
mov
push
stc
jne
lret
ss
push
icebp
jne
std
rcrb
push
jnp
lea
sub
cwtl
stc
shlb
mov
sti
ja
dec
mov
mov
test
xor
push
mov
adc
into
pop
pop
mov
xor
fsub
mov
add
lea
sub
sahf
fwait
insl
jne
pop
ljmp
les
stos
test
jns
lret
dec
cmc
inc
adc
shl
cmp
jns
test
mov
cli
pop
push
jp
fnstcw
dec
fbld
daa
mov
add
sbb
outsb
das
pusha
mov
mov
sub
movsl
repnz
out
mov
das
cmp
sbb
xchg
lahf
cmp
mov
mov
pop
sbb
adc
lds
cmp
repz
mov
push
push
cld
sarl
cmp
xor
inc
push
jbe
inc
imul
fcmovb
loopne
jns
pop
cltd
xchg
jge
out
add
mov
sub
push
gs
mov
lea
jb
lcall
les
add
mov
jns
xor
int
xor
pop
or
popa
dec
mov
mov
jp
into
adc
lods
outsb
sub
or
pusha
pushf
js
jp
sub
stc
add
scas
sbb
popf
js
cmc
add
pusha
sti
loop
iret
out
lahf
lock
or
mov
and
push
mov
clc
and
dec
insl
xchg
and
inc
mov
xor
pop
loop
inc
insb
and
fadds
mov
icebp
mov
aaa
cmp
pop
mov
ret
inc
mov
pop
test
adc
rol
mov
sbb
sbb
rcrb
inc
or
insb
sbb
ret
adc
push
leave
dec
nop
push
or
arpl
mov
icebp
pop
mov
and
out
das
in
jp
pop
inc
popa
dec
or
sub
pop
fisttps
push
pop
mov
push
and
lcall
jbe
pop
aaa
into
iret
xchg
mov
sarl
fcoml
dec
rcl
jnp
adc
add
push
cmpsl
aas
dec
test
in
jmp
inc
add
adc
lock
add
mov
inc
pop
pop
adc
inc
lods
dec
jg
rorb
dec
pop
clc
mov
sbbb
fists
push
cltd
leave
inc
faddl
push
push
mov
lods
push
dec
iret
jge
sahf
jge
adc
cwtd
stos
inc
outsb
sbb
fsubrs
mov
xlat
or
outsl
mov
mov
daa
sbb
cmp
call
arpl
cmpsb
orb
lret
push
push
dec
cwtl
repz
nop
rclb
test
out
pusha
push
loope
or
negb
xchg
and
cmp
dec
dec
ss
insb
xor
out
shrl
ret
lcall
ja
sub
mov
in
pop
push
ja
pop
pusha
icebp
sahf
cli
inc
push
pushf
or
mov
push
inc
cli
f2xm1
mov
and
dec
sbbb
loopne
jp
subl
das
adc
cmp
iret
lds
or
mov
lea
jb
call
push
mov
push
xor
sti
cmpb
aas
cmp
xor
and
mov
or
sub
dec
rorl
adcl
fpatan
or
jne
arpl
mov
rcrl
ljmp
jo
add
in
dec
inc
cltd
jns
mov
sbb
jne
mov
clc
lret
aam
mov
push
and
frstor
adc
insl
out
xchg
lahf
call
adc
xchg
mov
cmp
sub
xchg
mov
pushf
push
std
stos
mov
das
loop
xor
adc
push
push
fsubl
mov
jg
test
aam
repz
dec
sti
test
pop
add
fbld
sub
xor
aad
push
aaa
fmull
jmp
inc
stc
dec
ss
std
push
cmp
mov
std
jne
dec
jle
jg
adc
inc
das
clc
mov
jg
mov
sti
pop
sbb
and
movsb
fidivrs
adc
mov
jecxz
fnstenv
lahf
ret
mov
or
mov
in
adc
sbbl
xchg
add
arpl
arpl
pop
es
sub
xchg
sub
pop
mov
and
mov
cmp
mov
shrb
scas
mov
pushw
or
and
mov
inc
push
int
hlt
cs
xor
mov
xchg
mov
gs
or
mov
fwait
push
subb
hlt
cmp
jbe
jle
add
sub
insl
mov
sub
nop
stos
out
mov
ss
sbb
inc
mov
xchg
lods
cmp
nop
mov
xchg
mov
push
jecxz
ja
ljmp
mov
addr16
dec
sbb
xor
adc
rol
or
jbe
add
cs
lods
popf
dec
sub
lret
push
mov
lea
stos
inc
dec
loopne
inc
or
mov
cmc
inc
pusha
or
xor
fsubp
fistpl
push
mov
outsb
aaa
inc
jg
jl
sar
call
sub
loope
jnp
add
or
ss
pop
or
and
aad
aaa
divb
pop
test
mov
and
adc
and
nop
pop
movsl
add
xor
dec
cmp
movsl
addb
dec
xchg
cli
adcl
jnp
stos
int3
xchg
clc
dec
dec
mov
xlat
push
bound
mov
out
lea
ficomps
inc
mov
insb
loope
pop
outsb
in
inc
fstps
or
nop
testl
jo
pop
xchg
sub
addl
out
or
jecxz
in
aad
gs
scas
imul
adc
aaa
jo
mov
daa
lahf
add
mov
enter
testl
xchg
cmc
orl
pop
cwtl
mov
es
test
xlat
fcomip
push
fstps
out
roll
ret
fstps
xor
bound
je
lea
dec
shl
jno
and
push
dec
mov
das
xchg
aad
cmp
lods
pop
inc
test
dec
nop
pop
les
movsbl
push
jno
inc
stos
jno
cmp
mov
jge
dec
outsb
cmc
push
jge
or
and
adc
nop
rcrl
pop
movb
or
mov
mov
pop
push
mov
pop
mov
pop
add
in
sahf
aad
pop
push
sub
push
sahf
jbe
cmp
jns
ss
pop
xchg
mov
loop
gs
push
movsb
scas
cld
aaa
add
sarl
je
lods
sbb
out
mov
sbb
imul
inc
lcall
jge
aaa
bound
bnd
je
jns
xchg
jne
dec
jb
mov
fstpt
out
fisubl
stc
xchg
dec
sub
int3
outsl
stos
stc
xor
pushf
mov
dec
std
lock
mov
inc
or
inc
jp
sub
cmp
orb
loop
in
adc
dec
sub
pop
push
pop
jp
adc
pop
jne
loop
mov
int3
push
mov
pop
mov
das
fs
xor
jmp
inc
test
sbb
cmp
ret
out
pop
leave
fdivs
sti
test
sub
stos
cmpsl
repnz
or
in
cmpsb
jmp
adc
cltd
sahf
push
in
mov
xor
dec
lock
rol
sub
adc
in
cmpsl
mov
popf
pop
dec
push
std
lahf
pop
push
shrb
ret
repnz
stos
xchg
pusha
dec
inc
cli
mov
aaa
or
inc
cwtl
scas
fidivl
ret
out
pop
sub
pop
and
test
mov
cmp
ljmp
mov
xchg
dec
aaa
ljmp
add
pushf
jne
xor
outsl
repnz
sbb
xchg
out
out
loopne
aad
push
fiadds
xlat
sbb
mov
ret
or
arpl
sahf
addb
xor
fisubrl
inc
or
cvttps2pi
out
or
mov
cmpsb
adc
xchg
cmp
aam
mov
pop
jno
jns
add
popa
mov
and
in
pop
into
xchg
or
or
pushl
ljmp
ja
aad
aad
mov
sub
xchg
xorb
mov
sub
ds
test
inc
rorb
xchg
ror
ds
imul
mov
out
fldcw
jb
imul
call
je
sbb
fisttpll
aad
mov
test
in
xchg
xor
jo
add
pop
outsb
mul
mov
mov
xchg
jecxz
scas
bound
push
notb
jae
mov
js
or
pop
lcall
pop
mov
icebp
cmp
arpl
dec
daa
movsl
mov
xor
adc
push
cmpsb
or
stos
push
lret
or
dec
roll
cmp
jns
sub
ss
data16
xor
pop
pop
mov
ljmp
and
pop
loop
add
in
jne
decl
inc
mov
add
in
fdivl
pop
adc
fcmove
popf
pop
dec
xchg
bound
in
and
jmp
movsl
int3
lods
and
scas
scas
and
inc
mov
js
loop
pop
dec
ljmp
adcb
pop
stos
imul
sbb
xchg
fcoml
jne
mov
or
push
in
into
or
hlt
adc
pop
loop
add
or
jb
std
outsb
inc
mov
inc
out
int3
cli
or
enter
faddp
cli
in
cs
adc
out
in
push
pop
sbb
sub
test
mov
lds
call
sub
cld
aam
scas
daa
xchg
inc
test
or
aam
loope
mov
jl
adc
mov
arpl
jg
shlb
mov
pop
cmpsl
dec
xor
popf
test
sub
jp
sbb
push
cltd
cltd
xchg
dec
lea
push
mov
jg
cmp
xchg
xchg
mov
push
in
in
pop
xor
dec
ror
mov
js
cltd
outsb
mov
mov
mov
int3
aam
sub
jge
test
pop
xor
mov
sysexit
stos
ss
pop
jle
clc
sub
cmp
xchg
mov
shl
rcr
add
mov
cmc
lds
cld
sbb
cmpsb
or
xor
push
cmpb
mov
rcrb
pop
arpl
pop
icebp
shll
daa
or
cmc
mov
cli
jnp
fstpl
jmp
shll
movsl
lret
xchg
or
jno
in
test
mov
loop
jmp
outsl
insb
ffree
adc
mov
xlat
in
out
or
pop
sbb
xchg
daa
inc
xchg
mov
sbb
test
xor
scas
fsubrl
enter
fcmovbe
call
outsl
imul
fstpl
jmp
leave
xlat
lods
push
adc
push
shl
mov
add
sbb
mov
es
das
xchg
cltd
cmp
sub
inc
mov
mov
dec
xchg
sbb
aaa
sahf
push
gs
cmpsb
mov
cwtl
mov
push
add
dec
icebp
cld
inc
popf
adc
fdiv
xchg
pop
pop
nop
mov
fwait
ret
jo
xor
mov
sbb
lock
mov
in
divb
mov
adc
pop
xor
jns
out
inc
push
sub
push
jns
jl
and
sub
das
mov
fsubrl
and
pop
lret
mov
adc
les
pop
adc
hlt
push
jns
js
fsubr
std
sti
and
sbb
cmp
nop
rcl
mov
xchg
or
pop
rcrl
push
addl
sahf
pop
or
adc
out
push
add
shll
and
imul
push
adc
mov
mov
fimull
adc
das
lods
mov
pop
out
xchg
mov
mulb
jb
sub
stc
xchg
mov
sti
jl
cli
mov
sub
test
jo
popa
jae
inc
mov
add
addr16
in
jne
xor
push
clc
push
je
mov
fadds
fcmovnu
stos
cltd
aad
aaa
jl
insl
jo
jecxz
shr
mov
xor
ror
inc
adc
sarb
mov
mov
sahf
jl
or
xor
scas
movsb
aam
int3
jg
dec
sub
xor
ret
mov
xchg
mov
add
clc
sahf
dec
rorb
les
inc
stos
sbb
pushf
frstor
lahf
and
jmp
std
jmp
lods
xor
icebp
mov
cmp
jb
mov
adc
jne
dec
sbb
xor
adc
pushf
cmc
pcmpgtd
mov
and
jmp
push
ret
ds
push
xchg
mov
pop
mov
imul
aad
xchg
mov
push
jl
lret
add
mov
add
or
or
inc
test
cwtl
ret
inc
mov
dec
xchg
movsb
adc
inc
std
pop
fidivs
mov
stos
aaa
aaa
inc
jb
cmpb
std
cmp
dec
mov
sarb
repz
aaa
dec
jmp
xchg
jg
xor
loop
out
icebp
rolb
jl
pop
push
or
adc
mov
sahf
jbe
pop
jae
mov
cld
cltd
pop
divl
lret
icebp
repz
rorl
clc
es
test
imul
movsl
jmp
data16
sbb
out
fists
std
inc
adc
loop
scas
lea
test
fsts
enter
or
jecxz
insl
nop
push
shlb
cmp
dec
enter
icebp
into
stos
sbbb
arpl
xchg
lret
in
jns
mov
cmpsb
mov
stc
mov
push
inc
push
icebp
call
and
push
pop
movb
fcmove
mov
cmp
push
cltd
or
pop
pop
fnstenv
roll
pop
int3
loop
cld
pop
xor
mov
mov
add
xorb
repz
and
inc
mov
push
cmp
push
pushf
pop
xor
scas
and
push
in
das
xor
stos
hlt
cmp
es
cld
pusha
sti
xorb
loopne
push
jle
test
loope
ljmp
xchg
jb
insl
sahf
xchg
test
push
ljmp
out
add
mov
lahf
add
add
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
jmp
shrb
push
sbb
mov
inc
notl
adc
daa
mov
loopne
cmp
lcall
xchg
stc
xor
mov
nop
cmc
mov
mov
or
and
dec
aaa
push
xor
push
jg
rclb
or
andb
ds
rorb
dec
jns
lods
repnz
decb
mov
sub
push
pop
in
mov
jnp
out
dec
jbe
xor
jl
push
mov
lret
mov
inc
cmp
mov
lea
sbb
fxch
and
imul
jle
xchg
adc
mov
call
pusha
pop
dec
or
ret
out
pop
adc
cmp
aam
hlt
inc
cmp
loop
push
and
jecxz
xchg
sbb
pushf
push
push
sbb
in
xchg
cmpsl
sub
lret
mov
les
out
dec
in
sub
or
inc
loopne
push
dec
ret
mov
out
imulb
mov
jbe
cli
andl
mov
aaa
sbb
rcrb
dec
dec
add
in
xor
mov
dec
mov
add
ficoms
mull
adc
dec
aaa
mov
pop
outsb
dec
dec
jne
push
fsub
pslld
xor
add
cld
mov
push
pop
loope
xchg
mov
and
push
and
addr16
mov
fs
add
mov
jle
test
push
dec
adc
cmp
push
lret
and
lock
mov
fldt
push
cli
icebp
pop
inc
in
and
popa
sbb
pusha
jle
add
enter
popf
adc
jae
ds
and
daa
scas
or
jnp
sahf
jecxz
out
xor
lds
adc
shl
sub
mov
sti
mov
xchg
stos
pop
inc
cmp
pop
daa
push
lcall
clc
movsl
jp
dec
push
pusha
adc
negl
xchg
cmp
push
lock
jmp
push
call
fdivrl
fistpl
inc
gs
mov
pop
repz
jle
and
das
hlt
pop
repz
inc
mov
lret
addl
xchg
sahf
fs
or
enter
fcomps
test
pop
int
iret
push
fidivl
mov
icebp
shl
mov
sbb
cmpsb
mov
jl
xor
add
repz
aam
rcrb
test
icebp
faddp
fadds
fdiv
jle
dec
in
nop
dec
xchg
rcr
outsb
aas
enter
adc
adc
orb
ret
inc
sub
jp
repnz
mov
outsb
mov
mov
fdivrp
aam
push
adc
gs
addr16
mov
inc
pop
sarl
adc
inc
cs
inc
lahf
icebp
loop
jmp
jnp
ljmp
test
and
jmp
scas
mov
mov
scas
je
fucompp
cmp
ja
mov
sbb
xlat
shl
and
mov
and
shll
repz
and
push
mov
mov
loope
lcall
int
test
push
dec
ljmp
and
mov
sub
test
or
pushf
xchg
inc
and
push
jecxz
lahf
adc
movsl
pop
std
push
out
xchg
adc
push
ja
outsb
jns
jae
sub
lahf
roll
out
sahf
nop
cmp
push
mov
lods
inc
mov
push
insl
idivl
push
mov
push
and
or
pushf
sahf
das
bound
js
sub
inc
mov
ja
lods
or
mov
push
ljmp
lods
mov
sbb
dec
in
mov
dec
cmp
push
jg
hlt
jae
ds
mov
dec
jns
aad
lea
push
xchg
cld
ret
andl
ret
pop
sbb
mov
aam
mov
iret
insb
or
sub
dec
pop
mov
xchg
and
adc
mov
xor
push
insb
xchg
xchg
fwait
and
leave
sarb
mov
lcall
loope
dec
es
test
loop
xchg
jne
idivl
jp
or
and
pop
mov
rol
sbb
mov
pop
xchg
cmp
jmp
nop
mov
push
and
sbb
xchg
or
and
xor
jle
jb
lret
lret
arpl
ss
mov
sbb
ss
pop
mov
or
outsl
xchg
push
mov
xchg
adc
fs
stos
xor
pop
cmpsl
jmp
repz
sbb
mov
dec
inc
dec
cmp
test
push
pop
sbb
call
int3
hlt
mov
fistl
das
mov
fcomp
pop
fidivs
xchg
mov
rorb
iret
imull
jmp
cmpsb
scas
sti
push
push
bnd
iret
cld
imulb
mov
jb
dec
and
aas
lods
fcmovnu
mov
mov
jge
js
mov
aad
mov
inc
sahf
or
sahf
lds
lret
popa
out
jbe
hlt
sbb
cld
int3
loopne
hlt
push
les
test
xchg
fprem1
pop
adc
imul
fidivrs
cmp
pop
push
cld
lock
mov
lahf
test
cmpl
mov
fcoms
mov
hlt
add
sub
pop
push
xchg
js
xchg
jg
ja
mov
xchg
int
xchg
push
mov
dec
jbe
dec
sbb
rorb
lahf
mov
inc
jns
or
pop
scas
repnz
jl
scas
add
ret
in
sub
pop
inc
sbb
mov
pop
and
hlt
cmp
sub
mov
mov
push
jne
xchg
add
sbb
pop
add
xor
push
icebp
mov
adc
arpl
push
into
daa
mov
call
rolb
cmp
icebp
sbb
in
call
lcall
adc
leave
xor
repnz
mov
jne
in
and
push
and
push
ficompl
jl
add
inc
mull
das
inc
jp
out
mov
inc
js
popf
or
mov
jp
pop
sahf
sub
adc
leave
cwtl
mov
sbb
pop
mov
cmpsb
pop
pusha
adc
shl
cmp
sbb
mov
sbbb
push
push
jo
jmp
pop
or
lds
pop
lret
in
pop
pop
xchg
xchg
lahf
xchg
and
xor
xchg
cmp
and
mov
arpl
mov
dec
mov
or
test
stos
cmp
les
mov
out
pusha
mov
hlt
cmc
cmp
xor
addr16
call
pop
imul
ror
add
dec
in
sub
dec
pop
adc
imul
xor
jbe
in
int3
and
jne
dec
movl
and
xor
mov
pop
test
push
pop
gs
out
mov
mov
ret
cltd
jno
push
lock
sbb
pop
test
ret
mov
and
jo
data16
cmp
push
sub
add
push
faddl
xor
mov
adcl
sbb
jb
sbb
mov
clc
sarb
cmpsl
enter
xlat
dec
jno
cmp
jecxz
inc
leave
fcomi
psllq
mov
not
aaa
pop
inc
inc
mov
pusha
lock
out
popf
mov
cmp
cmpsb
adcl
lds
movsb
push
and
pop
mov
test
pop
or
lds
push
dec
icebp
or
insl
mov
daa
mov
mov
xor
pop
in
scas
xor
lret
jnp
push
push
mov
jle
dec
loope
inc
pop
mov
fists
pop
cli
std
jns
ja
adc
pop
push
push
fistpll
adc
dec
in
push
xchg
jne
sbb
mov
xchg
xchg
mov
lods
and
test
mov
add
pusha
mov
and
adc
mov
mov
daa
fsubr
ret
cmp
imul
in
and
test
fnsave
lods
out
or
movsb
sbb
ljmp
xchg
mov
mov
push
movsb
mov
inc
cmc
jle
add
mov
and
push
mov
inc
aaa
lods
mov
push
jp
fs
push
mov
popl
jl
mov
jo
push
ja
fwait
hlt
cli
jmp
in
enter
dec
pushf
out
mov
push
sub
and
mov
subb
xor
pop
or
jle
imul
lahf
in
aam
iret
adc
fnstenv
sahf
fnsave
inc
fadds
pop
push
mov
push
pop
in
pop
sbb
loope
sub
cmc
outsl
adc
iret
sub
bound
lods
sbb
mov
adc
pop
jecxz
movsb
adc
pop
sbb
lea
loopne
xor
add
inc
aam
ret
nop
jle
cmpsb
div
fwait
pop
or
pop
push
jmp
or
push
push
mov
xchg
mov
push
xchg
lods
adc
aam
movsl
jge
mov
lods
push
push
mov
push
daa
call
sahf
ss
int3
xor
jo
out
and
inc
imul
out
push
jns
cltd
cmp
xchg
or
cmpsl
or
and
into
mull
arpl
and
cmpb
pop
cmp
call
mov
sub
aaa
sbb
mov
fists
ret
mov
xlat
repnz
in
jne
jnp
lahf
add
sub
clc
xchg
lret
call
popf
jge
add
ljmp
mov
mov
mov
fildll
add
or
push
inc
stos
sub
scas
mov
cmpsl
adc
rorl
lods
mov
mov
adc
mov
and
sti
dec
jnp
mov
stc
sbb
sub
xchg
js
sub
repz
mov
shrl
inc
dec
lret
jecxz
lahf
inc
in
jns
push
std
xchg
loopne
mov
sahf
sub
pmuludq
mov
in
or
mov
jle
mov
cmp
stos
call
gs
iret
inc
jge
ret
imul
outsb
out
and
or
or
inc
ret
xchg
and
xor
sti
test
popf
push
adc
pop
mov
and
push
js
add
or
cmp
das
jno
outsl
mov
test
inc
pop
lock
mov
push
and
push
lock
loope
lock
cli
iret
nop
hlt
pushf
scas
daa
addr16
lret
lock
shrl
loop
jl
clc
pushf
lea
lods
fwait
or
sbb
dec
mov
xor
stc
xor
jo
push
sarb
lds
cmp
jno
int
adc
xor
test
out
cli
adc
fsubr
sub
xchg
mov
sahf
cli
cmp
add
nop
dec
lcall
lahf
std
dec
loop
hlt
inc
int3
lcall
pop
rclb
pop
and
sti
mov
dec
fnsave
jbe
xchg
aaa
loopne
jns
sub
mov
shlb
dec
pop
sub
jbe
cmp
push
mov
inc
sahf
xchg
mov
loopne
xchg
mov
xlat
fstl
int
jae
or
out
dec
daa
inc
mov
out
decl
mov
test
push
xor
scas
jge
scas
dec
popf
sbb
cmpsl
cld
and
pop
fcom
mov
js
mov
jbe
sub
xchg
mov
mov
stos
adc
sub
test
xlat
add
lcall
scas
push
enter
push
cmp
pop
movsb
nop
mov
out
push
test
out
cmp
in
jp
hlt
push
mov
ret
stc
out
push
pop
pop
inc
rcll
out
push
pop
std
ret
fsubs
inc
xor
push
dec
dec
or
or
cli
sub
filds
mov
mov
jmp
cltd
adc
cmpsb
je
push
adc
xchg
push
jae
fnstcw
in
xor
lds
mov
test
les
xor
or
int
mov
adc
dec
mov
or
xor
xor
inc
inc
xor
mov
gs
icebp
cs
mov
sbb
jnp
dec
sbb
mov
and
lret
js
inc
add
mov
popa
repz
icebp
loop
movsl
nop
push
out
rcrl
mov
lods
bound
cmp
and
in
inc
popf
inc
adc
aad
daa
not
iret
xchg
mov
inc
sbb
std
xchg
xor
scas
aad
dec
cld
data16
cmpsb
outsb
loop
mov
das
push
vpaddsw
andl
adc
inc
rep
stc
mov
cmp
fidivl
adc
daa
arpl
cld
add
outsl
push
test
sti
cld
aad
push
cmc
pop
lahf
xor
shlb
or
cmpsb
std
and
test
push
iret
cmp
jne
jmp
cs
shll
inc
adc
jmp
out
xor
mov
fistps
fiaddl
xchg
jns
imul
testl
pop
movsl
push
jle
push
xchg
fbstp
jo,pn
mov
cmpsb
and
in
call
pop
in
lods
dec
pop
orl
cmp
sub
rol
inc
pop
lret
cmpsb
scas
cmp
aad
jno
jp
es
divb
cmp
out
loope
sbb
xchg
dec
je
std
cld
loop
inc
lcall
jge
ret
andl
xchg
repz
sub
jl
push
loopne
repz
outsl
jecxz
dec
clc
pop
cwtl
loop
adc
repnz
sub
lret
adc
jno
add
test
dec
fadds
in
fnstsw
incl
adc
dec
or
lds
xchg
jno
ss
xchg
sbb
in
lock
cmp
stos
js
push
sar
adc
lahf
fisttps
lods
mov
push
sbb
cmpb
add
sbb
xorb
jo
and
and
repz
mov
sbb
xchg
or
pusha
aam
loopne
or
subl
lret
fstps
cmpsb
ret
and
cmp
icebp
inc
dec
cmp
mov
mov
xor
jnp
lret
int3
add
fcompl
jp
lds
and
hlt
js
fadds
call
subl
cmpsl
js
push
movsb
add
sub
push
lcall
ss
fwait
lods
push
pop
aas
push
xlat
fs
dec
xchg
push
imul
flds
push
int3
add
sub
pop
ds
in
adc
pop
or
icebp
push
jge
lea
or
stos
notl
add
dec
iret
out
pop
adc
icebp
sbb
ret
jecxz
ss
lds
lahf
and
mov
jb
cmpsb
out
hlt
test
pushf
dec
adc
sub
and
aam
jnp
scas
inc
mov
sarl
sub
in
and
into
lods
cmpsl
ds
ljmp
jo
cmpsb
mov
testb
filds
in
stos
mov
fimuls
andb
jae
xor
insb
pop
in
inc
fiaddl
mov
xchg
or
dec
inc
jle
xor
jb
jo
je
out
dec
cmp
decl
scas
fs
ret
adc
fwait
in
mov
movsl
into
gs
push
lock
ds
fwait
shr
xor
data16
popf
sbb
lods
int3
pop
adc
ss
pop
pop
je
rdpmc
mov
jl
arpl
sbb
sbb
mov
adc
outsb
or
cmp
insl
leave
push
inc
clc
test
jl
xchg
es
cli
mov
adc
mov
ja
mov
sbb
daa
mov
es
shr
ficomps
mov
out
cld
pop
add
push
xchg
int
mov
mov
cmp
inc
das
outsl
mov
in
xchg
pop
scas
cmpsl
shlb
mov
shrl
jecxz
outsb
push
xlat
and
rclb
dec
repnz
outsb
sub
pop
roll
fwait
test
js
and
xchg
cmp
push
and
add
push
dec
ja
mov
mov
pop
test
adcl
xlat
sar
adc
adc
push
push
fcomi
aam
adc
cmpsb
add
call
jmp
add
es
loopne
arpl
push
fildll
mov
ret
or
cli
push
scas
mov
clc
pop
popa
in
cmp
jmp
imul
sarb
dec
enter
popa
jbe
mov
sbb
es
leave
jae
outsl
mov
icebp
imull
dec
dec
pop
xor
psubusw
cmpsb
lea
mov
adc
xor
mov
jl
cmc
inc
stc
dec
sbb
popa
mov
lods
ret
sub
andl
xor
clc
inc
xchg
stc
xchg
ja
and
adc
xor
push
sarb
cmpsb
jno
xchg
out
mov
imul
jbe
mov
xchg
push
mov
or
xor
icebp
fcompl
jnp
add
out
sbb
ja
ss
sbb
add
xchg
xlat
rclb
mov
outsb
inc
call
sbb
popf
mov
test
sbb
cmc
pop
lret
je
mov
pop
sub
adc
into
cmp
pop
mov
cwtl
je
mov
pop
jns
stos
adc
lret
dec
rcll
dec
fbld
mov
xrelease
xor
sbb
or
cpuid
cmc
mov
mov
into
push
rcr
out
mov
dec
leave
xor
bound
jmp
popl
stos
cmp
test
mov
xchg
xchg
enter
xor
fisubs
mov
mov
sbb
into
cmp
stos
int3
jne
in
leave
imul
sub
loopne
xor
mov
cmpsb
hlt
and
fcompl
push
adc
mov
ljmp
lret
or
adc
mov
test
jg
dec
fs
popa
icebp
movsl
or
lret
testl
xor
sbb
push
mov
sub
sbb
cmp
add
mov
and
mov
jp
out
sti
inc
sahf
iret
sub
push
mov
mov
movsb
cmp
test
adc
mov
add
clc
insb
and
mov
into
jmp
movsb
jp
cmp
faddl
ja
mov
jb
xchg
lcall
dec
mov
cltd
pusha
xchg
das
fcomp
jle
divl
enter
call
icebp
jne
stos
xchg
sbb
popa
mov
popa
push
imul
push
mov
push
pushl
aaa
jg
cmpl
mov
inc
xor
cmpsl
jb
rcrl
in
xor
cwtl
add
mov
or
rcll
push
pusha
lock
rolb
loopne
mov
mov
inc
ficomps
popa
xchg
enter
jmp
ljmp
xor
adc
nop
mov
mov
jmp
and
push
dec
xchg
out
test
inc
loop
or
pop
enter
out
mov
je
mov
enter
dec
in
xchg
mov
dec
mov
into
jb
adc
ror
inc
std
sbb
loope
fistpll
adc
push
and
fldcw
add
xchg
sub
and
sbb
fwait
xor
or
xor
jg
clc
addr16
pop
cmp
add
mov
loope
mov
sbb
or
add
out
stos
les
push
jl
push
cltd
jg
imul
jns
rcll
xchg
out
sti
int
inc
xchg
outsl
lods
push
pop
aaa
push
mov
sbb
ret
repnz
jne
mov
jg
mov
mov
test
aad
sbb
popa
xchg
lret
sub
pop
outsl
nop
mulb
xchg
xchg
popf
les
push
aaa
mov
jnp
inc
aam
gs
mov
std
pop
push
xor
sbb
xchg
aaa
adc
out
add
dec
pop
jge
pushf
add
xchg
pusha
jns
aam
sbb
pop
xchg
or
rclb
and
lret
push
push
sar
imul
arpl
out
xor
xchg
xchg
aaa
jg
cmpsb
and
movsl
cmc
mov
call
fldenv
cmpsb
xchg
in
sbb
dec
jle
rcrb
sbb
in
sbb
xor
loopne
dec
pushf
test
adc
add
mov
lods
sbb
mov
or
lock
ror
mov
and
jno
sub
sbb
nop
shll
and
sub
jmp
test
cli
je
shll
ljmp
js
mov
lcall
cwtl
aas
mov
mov
daa
pushl
enter
xchg
fnstsw
push
scas
dec
sub
scas
inc
sahf
xchg
inc
inc
and
xor
scas
sub
adc
pop
lcall
loope
es
cmp
cmp
push
mov
mov
sbb
xchg
mov
rorb
scas
add
lret
lock
jmp
xor
xlat
xchg
lock
mov
adc
cmp
add
arpl
mov
pop
mov
jae
fidivl
out
xor
pushf
and
rcrb
data16
mov
mov
jmp
lret
js
sbb
cwtl
add
adc
in
clc
pop
in
lock
mov
stos
imul
orb
adc
xor
imul
in
sbb
mov
dec
daa
fdivrl
jge
jbe
stos
xlat
daa
sti
out
inc
xor
pop
dec
cmp
add
jne
dec
sub
jb
jl
dec
out
arpl
sub
aas
shll
ja
adc
pop
int3
rcrb
xlat
int3
faddl
rep
and
fs
pop
push
leave
dec
out
jge
inc
add
mov
repz
test
lcall
hlt
push
aas
ds
inc
sbb
pop
sub
cmpsb
sbb
xchg
andb
push
das
push
inc
dec
cwtl
std
mov
je
rcrl
add
add
pop
les
lea
mov
daa
push
loopne
dec
pop
pushf
shlb
sub
mov
sbb
das
in
int
leave
sti
inc
daa
jnp
outsl
in
imul
dec
testl
mov
inc
aam
push
cli
add
inc
xchg
mov
test
mov
mov
push
mov
outsl
xchg
divb
jns
jmp
xor
in
into
pop
inc
or
add
into
jge
cmc
adc
and
aas
sbb
outsb
push
cmp
lcall
cld
insl
jmp
sub
push
push
ret
jge
xchg
push
fwait
mov
sub
jle
gs
jmp
mov
test
inc
ss
addb
mov
out
pop
inc
sub
and
js
sub
sub
pop
mov
cs
xchg
mov
or
js
mov
pop
mov
orl
stos
in
or
ret
pop
div
imul
or
movsl
sbb
inc
test
push
test
lret
flds
aam
lcall
dec
out
out
fdiv
mov
or
jo
jecxz
cwtl
scas
mov
mov
sbb
shrb
sub
cli
push
pop
pop
pusha
mov
arpl
or
cmp
lcall
in
adc
nop
arpl
call
add
add
lods
pop
cli
adc
scas
testb
or
repz
xchg
and
aaa
enter
jbe
push
outsl
add
pop
jne
shl
addr16
stc
aad
push
movsl
jg
sbb
popa
pop
inc
fisttpl
lret
enter
test
sub
mov
mov
test
inc
bound
lret
xchg
xchg
aam
fisttps
jno
or
setge
arpl
xchg
push
cmp
pop
pop
bound
call
inc
rcr
sbb
and
sbb
sbb
loopne
pop
xor
push
bound
cmpsl
cmpb
int
imul
es
pop
pop
xor
fwait
mov
stos
inc
xchg
mov
pop
xchg
movsl
or
rcrl
aaa
sbb
sub
jge
jp
in
mov
sub
push
mov
inc
sbb
stos
pusha
pop
inc
and
jne
ljmp
inc
mov
xchg
xchg
ret
add
mov
bnd
sahf
mov
test
dec
and
and
outsb
mov
stos
xchg
jle
cld
jmp
push
pop
cmpsb
jp
movsl
hlt
mov
fiadds
lds
cmp
sbbb
adc
xchg
mov
mov
mov
clc
jbe
leave
jle
test
or
and
stos
sahf
fdivs
sub
popf
push
loope
and
mov
ficoml
stc
push
sbb
pop
add
xor
lret
add
je
test
orb
jnp
inc
out
addr16
push
and
arpl
mov
dec
inc
insl
faddl
iret
jb
inc
cmp
mov
dec
mov
dec
xchg
and
fiaddl
dec
push
xchg
out
xchg
or
call
mov
inc
outsl
xchg
and
xchg
jo
in
mov
push
mov
sub
fidivrs
adc
xor
jne
iret
pop
lock
pop
push
sbb
lea
sub
cs
jo
jns
inc
mov
loop
int3
push
pushl
xchg
xchg
pop
scas
pop
orb
jbe
xor
pop
inc
lahf
adc
lret
hlt
mov
lock
or
mov
aas
movb
pop
roll
sarb
in
nop
dec
out
in
pushf
movsb
js
mov
adc
xlat
cmovne
xchg
lret
xor
cltd
or
lea
int
stc
jnp
inc
cld
add
dec
xchg
mov
jbe,pt
push
in
in
mov
add
imul
aaa
loope
cmp
adc
add
add
sbb
sahf
mov
dec
jge
sbb
cmp
push
repnz
xchg
call
rcr
xor
pop
sub
jg
adc
dec
mov
cmp
and
dec
mov
orb
xor
mov
cmc
hlt
pop
repnz
loopne
pushf
rcl
sbbb
jne
mov
aas
fcmovnb
xor
test
cmp
push
sub
sti
popf
mov
mov
xchg
daa
test
dec
sbb
inc
cmp
sbb
fdivs
lea
pop
into
mov
out
cli
fcomps
ret
dec
dec
jge
push
jnp
gs
sub
pushf
aam
aas
cli
dec
pop
jmp
js
scas
clc
xchg
mov
jns
sbb
mov
or
and
jmp
cmp
jg
jl
xchg
jp
jbe
pop
mov
mov
lods
das
adc
filds
mov
dec
push
adc
sub
xchg
xchg
idivb
popa
mov
or
aaa
adc
cmp
pusha
sti
flds
push
vandnps
sbb
test
dec
icebp
add
loopne
mov
cmp
xor
test
lahf
sbb
inc
ja
add
lock
sbb
call
repz
mov
imul
jg
push
movsb
in
or
jecxz
pop
in
in
stos
addr16
mov
sub
xchg
adc
aad
cs
adc
add
int
insb
mov
mov
mov
dec
test
vmovdqu
mov
in
sub
in
push
cltd
jl
imul
sbb
imul
jge
insl
inc
lods
sbbb
mov
add
notl
clc
test
enter
xchg
fs
inc
or
insl
inc
mov
add
test
and
mov
rclb
mov
xchg
data16
inc
faddl
inc
sbb
push
leave
gs
dec
stos
imul
add
mov
mov
push
sub
out
pushf
mov
enter
sahf
and
inc
imul
jle
jbe
popf
sahf
fimuls
pop
imul
dec
xchg
and
jle
test
subps
scas
es
inc
dec
mov
cmpl
mov
into
mov
mov
mov
sbbl
inc
mov
cmp
jne
test
iret
mov
scas
or
enter
sub
push
push
icebp
shrl
scas
int3
dec
sub
sub
sub
sbb
sbb
push
mov
add
and
icebp
outsl
jmp
mov
cmpsb
insl
add
cmpsb
mov
ret
xchg
mov
xchg
push
mov
ja
dec
mov
xchg
popa
xchg
std
mov
clc
sbbl
dec
stos
pusha
jb
push
movsb
xchg
inc
out
dec
xor
les
mov
test
mov
fimull
mov
inc
push
mov
shlb
fstps
scas
loop
call
lock
jecxz
lret
add
movsb
out
insl
mov
cld
pushf
push
add
ljmp
clc
dec
cld
pop
adc
test
pop
dec
aaa
pop
sub
mov
adc
mov
jle
lret
xor
xor
stos
mov
or
cmpsb
push
mov
mov
jle
sbb
cmc
pop
xor
data16
in
out
repz
pop
cmpl
add
jg
jmp
xor
mov
and
inc
gs
push
out
or
push
loope
sub
mov
cmc
in
imul
inc
daa
in
pop
mov
and
cmp
dec
xchg
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
shr
ret
mov
xor
addl
and
shr
ret
jmp
mov
and
loopne
xor
pop
lods
lea
adc
cld
xor
jmp
jg
dec
mov
lods
xchg
fistl
jo
enter
call
insl
es
cs
int
inc
aas
mov
dec
inc
xor
shlb
and
adc
push
arpl
jge
mov
imul
and
push
int
cld
in
add
cwtl
ret
lahf
pop
sbb
sbb
sbb
stc
cmp
incl
xchg
jno
popa
mov
push
ljmp
scas
inc
icebp
mov
aad
xor
test
or
out
mov
repnz
ljmp
fs
jno
data16
adc
adcb
imul
jnp
outsb
outsl
inc
push
shll
imul
pop
push
leave
shll
cmpsb
fwait
mov
cmp
cltd
jmp
or
xchg
or
add
jle
sti
jp
nop
paddusb
hlt
fstpt
add
mov
adc
outsb
mov
xchg
xchg
pop
jmp
sti
adc
imul
sbb
testb
and
stos
xlat
ss
xchg
inc
push
ret
inc
test
jns
push
bound
push
push
and
add
sbb
fcoms
push
add
jl
int3
pop
jns
cmpb
aaa
lock
int3
ss
rcrb
push
fisttpll
in
push
cmp
jle
mov
xchg
call
dec
ret
jmp
or
stc
adc
sti
aad
mov
mov
es
loop
mov
lds
cmp
mov
xchg
mov
jmp
push
mov
mov
cmp
sub
call
xchg
popf
mov
push
jmp
out
dec
test
loope
pop
sub
xor
jecxz
mov
icebp
fwait
mov
push
and
mov
pop
mov
lret
pushf
cmp
jle
out
push
xchg
das
or
int3
push
adc
gs
pop
jge
cmp
lret
adc
ret
push
insl
cmp
and
stc
mov
fldt
dec
xorb
jb
xor
jge
sahf
xor
repz
push
push
in
mov
mov
or
dec
data16
inc
leave
iret
sbb
movsl
lret
inc
icebp
jg
iret
add
jb
scas
jne
cmpsl
cld
fisttpl
and
das
adc
jl
xor
stos
inc
xchg
sbb
mov
xor
lahf
repnz
nop
add
cmp
pop
xor
mov
mov
mov
cmpsl
jl
shl
xlat
out
push
or
jae
xchg
stos
in
ljmp
push
ds
adc
mov
movsb
fs
pop
mov
sti
addr16
das
fs
push
movsb
push
cmpsl
mov
cmp
popa
mov
lahf
shrl
inc
xor
stos
adcl
push
pop
lret
fstpl
pop
push
fiaddl
xchg
cmp
into
cld
mov
cmp
and
call
frstor
jg
ds
scas
mov
lods
shll
dec
push
test
add
xchg
mov
and
int3
stc
shrb
mov
aas
out
aad
lds
loopne
cmpb
je
lahf
shl
fstpt
test
das
cld
dec
repnz
lds
add
mov
hlt
das
mov
mov
aam
push
and
mov
lock
jno,pn
je
or
inc
lods
xor
and
aas
mov
addr16
cltd
cmpsl
repz
and
cmpsl
std
sub
inc
push
adc
dec
int
jg
xchg
dec
pop
adc
inc
nop
mov
sub
mov
cmp
pop
or
mov
mov
add
mov
xchg
shrb
stos
popa
test
pop
add
outsb
cmp
ret
xor
arpl
sti
out
cltd
sub
inc
repz
insb
jno
icebp
aas
rcrb
mov
sub
mov
pop
scas
cwtl
jne
fists
mov
sbb
xchg
aam
mov
pop
sbb
mov
inc
sbb
cli
es
sub
call
mov
mov
lret
mov
adc
pop
mov
mov
cmc
lods
jae
push
aaa
test
out
sbb
in
and
sbb
in
or
cmp
pop
aaa
sbbl
sub
push
inc
pop
xchg
lds
push
lock
fst
bound
fistl
pop
pop
mov
mov
and
sbb
push
sbb
test
fldenv
mov
pop
fstpl
mov
sbb
lods
idivl
pop
pop
push
cmp
aad
cmp
aad
fisubrs
js
cmp
add
roll
inc
fcompl
mov
dec
incb
stos
mov
nop
loopne
mov
push
lahf
outsl
sub
xlat
aad
dec
test
mov
fildl
or
push
mov
popf
imul
das
out
pop
bound
outsb
repnz
test
jecxz
dec
scas
iret
cmp
jbe
adcl
mov
out
push
aas
ja
jae
aas
or
xchg
sahf
subl
pop
bound
sub
or
jl
mov
divl
push
lods
mov
lods
sbbb
pop
mov
sbb
push
xor
pop
mov
sub
loopne
jb
loop
scas
test
mov
dec
sbb
stc
out
xor
stc
cs
into
out
jp
cs
test
aas
loop
fwait
mov
sbb
mov
int
daa
jge
dec
outsb
enter
jp
jg
in
fwait
cli
es
bound
sbbl
and
lock
hlt
leave
cli
cmp
xor
mov
mov
mov
cwtl
into
imul
jb
add
jns
into
loope
xor
sbb
push
pop
sub
je
idivl
gs
mov
mov
adc
clc
push
xchg
in
in
das
mov
jno
roll
cmp
add
or
into
push
sub
jp
loope
loopne
inc
jecxz
mov
xchg
in
insb
lret
mov
shll
lods
mov
daa
frstor
out
cwtl
adc
repz
mov
repz
cld
rorb
jnp
xor
mull
shrb
push
xor
inc
addr16
pop
shll
pop
test
icebp
xchg
fiaddl
push
mov
mov
sub
mov
std
and
and
push
push
and
notl
push
rclb
jae
out
test
adc
enter
mov
cwtl
sbb
into
ret
xchg
jmp
cli
mov
xchg
popa
cmpsl
push
pop
mov
and
mov
fcmovnu
xchg
in
or
leave
shrb
inc
pop
adc
push
jmp
mov
push
jecxz
xchg
dec
mov
fidivl
jecxz
mov
std
or
sbb
lea
movsb
cld
pop
push
pop
mov
outsl
push
fidivrl
ja
ljmp
daa
jns
movsb
lcall
add
cli
mov
xchg
out
sar
iret
idivb
adc
pop
pop
xchg
lods
jmp
lds
dec
mov
mov
rorl
addr16
pop
nop
aad
adc
ret
lcall
test
mov
cmp
test
fldenv
cli
lea
hlt
aas
mov
add
push
mov
mov
cmp
cmp
in
cmp
or
lcall
dec
mov
xchg
jno
lret
scas
pop
jae
rorl
sbb
sbb
loope
out
cmc
pop
frstor
dec
cs
push
jmp
xchg
or
sub
ja
jl
shll
icebp
xor
sub
data16
bound
je
ror
fiadds
ss
rcll
ljmp
movsb
cmpsb
in
sbb
add
inc
imul
jp
adc
jo
ja
add
cwtl
cmpsb
fmulp
ljmp
jp
stos
jl
lret
adc
enter
mov
rcl
mov
push
adc
cs
es
loop
popf
insb
pop
mov
and
cmp
push
and
jmp
dec
sbb
clc
mov
movsl
rorb
loopne
out
insb
in
sub
scas
pop
pop
int
and
mov
ds
nop
js
test
xor
cltd
cltd
adcl
leave
popa
cmp
xchg
cmp
and
dec
lahf
mov
or
subb
push
push
shrb
les
lahf
jbe
out
and
js
xchg
push
ja
mov
xor
jbe
adc
scas
enter
xor
icebp
and
push
testb
push
and
xchg
sub
roll
adc
sub
cmp
sbb
sbb
mov
pop
in
inc
jns
cli
icebp
mov
mov
fcmovbe
mov
and
xlat
into
fwait
cmp
inc
and
sub
sbb
pusha
imul
les
frstor
mov
jns
into
mov
jg
mov
gs
imull
cmpsl
sti
out
xchg
mov
inc
jnp
adc
or
lods
test
pop
mov
xor
inc
sti
adc
stos
lcall
scas
xchg
mov
push
xchg
cmp
and
incb
cmpsl
ds
sub
cmpsb
inc
ds
repnz
or
cmp
ror
push
cmp
mov
xchg
jb
xor
cld
push
neg
push
popf
mov
mov
adc
or
test
sbb
pop
mov
out
in
jp
jne
lods
push
out
sub
pop
jne
ret
inc
test
add
dec
sub
popf
sub
fidivrl
xor
ss
fisttpll
mov
mov
push
cmp
jecxz
stc
or
xchg
mov
in
scas
or
jo
test
cmp
int
xor
aam
xor
mov
test
sub
push
dec
pop
push
add
xchg
andl
bnd
push
mov
pop
sbb
daa
adc
icebp
cmpsb
pop
xchg
jge
or
fsubrs
xor
outsb
cmp
icebp
fstl
or
dec
in
mov
aas
pushf
psraw
xchg
mov
sub
das
or
cmp
inc
lock
sub
pop
xchg
xorb
mov
sti
pop
dec
mov
sbb
repz
dec
mov
push
add
sub
and
or
rcll
mov
movl
dec
stos
lock
in
cmp
mov
imul
xor
sbb
sarl
imul
dec
loopne
push
add
cmp
js
dec
xor
call
enter
xor
push
inc
cmp
popf
nop
ror
xorb
sub
jge
jo
sbb
lret
pop
sub
orb
outsb
out
orl
mov
dec
mov
push
inc
imul
jb
or
and
cs
lods
cmp
or
push
push
out
lods
shrb
mov
pop
aam
loop
lcall
out
add
jle
scas
insl
mov
cmpsb
xor
cltd
int3
or
loope
fimull
cmp
js
fmuls
or
xchg
ljmp
xor
lea
rcl
mov
int
mov
aaa
sahf
shr
and
popf
imul
sbb
je
sbb
mov
cmp
mov
pop
push
lcall
xor
test
outsl
sbb
pop
fld
test
filds
mov
mov
cmp
pusha
repnz
sub
mov
loope
aaa
shl
mov
pop
dec
xor
clc
fistpl
in
sub
add
mov
and
inc
dec
cmc
aaa
xchg
enter
dec
push
lds
mov
cmpsb
jo
into
jo
addr16
inc
daa
jg
jno
push
sub
xorl
push
mov
sti
loope
out
ljmp
or
popf
or
xchg
inc
iret
jl
in
enter
fbld
in
sahf
test
roll
xor
mov
dec
jno
xchg
pusha
pop
cmp
mov
or
ljmp
je
fsub
cmp
es
mov
jg
scas
mov
xorb
xchg
mov
push
mov
xchg
fsubl
shl
mov
out
out
mov
or
and
push
in
cmp
lea
inc
inc
in
cltd
pop
fisttpl
push
cmpsb
or
pop
rcr
mov
xor
inc
sbb
in
sub
xlat
or
loope
stc
mov
cmp
popf
mov
mov
jne
in
jle
push
jb
jle
sub
out
mov
adc
mov
scas
cmp
das
dec
dec
incb
dec
int3
sub
imul
imul
mov
std
mov
pop
in
mov
insb
push
inc
xchg
lcall
iret
push
jmp
ret
gs
sub
pusha
test
sub
les
insb
cmc
adc
mov
push
clc
jmp
mov
out
jg
push
jle
inc
xchg
dec
aas
sbb
sahf
cs
inc
mov
push
sbb
insb
xchg
fcmovnb
outsb
inc
jg
enter
imul
int
jo
lods
xchg
and
pusha
push
jmp
repnz
mov
daa
test
mov
sub
dec
add
cmc
or
dec
jl
lret
cmpl
subl
sub
jecxz
scas
jg
ret
pop
lds
outsl
mov
lock
cmp
fcmovnbe
xchg
pop
jmp
adc
inc
mov
dec
insb
xchg
cmp
xchg
fwait
push
jle
mov
mov
jno
mov
mov
jo
xor
adc
pop
lods
scas
inc
rclb
cmp
imul
daa
sub
dec
push
mov
shll
stos
inc
inc
jnp
mov
mov
and
jge
outsl
push
push
test
add
adc
testb
cmp
shrl
arpl
hlt
sub
mov
cltd
mov
mov
int3
repnz
aaa
push
push
cli
lods
xlat
cltd
pop
pcmpgtw
sbb
inc
out
popaw
in
fwait
mov
cmp
or
movsl
jne
bound
push
inc
lock
push
or
aaa
rorb
push
pop
pop
outsb
push
enter
lret
mov
and
pop
lock
jg
mov
mov
sbb
lods
rol
out
or
je
lea
stos
scas
push
add
inc
cmc
xor
sbb
pop
bound
mov
mov
loope
leave
lock
in
leave
cld
arpl
inc
dec
imul
or
rclb
arpl
xlat
adc
aas
xchg
mov
push
jbe
out
pop
mov
repz
std
adc
out
and
mov
das
sbb
push
inc
pop
mov
jecxz
loopne
xor
sahf
push
stos
pop
sub
repz
jle
cwtl
push
ds
push
test
mov
stc
out
pop
xchg
shlb
lods
fidivl
sub
fnstcw
mov
sub
test
shlb
test
pop
lcall
outsl
cmp
sub
push
mov
xchg
arpl
jno
ret
sub
out
sbb
imul
cmp
sbb
inc
jb
dec
shrl
std
insl
loop
dec
stc
and
push
scas
adc
subb
rolb
dec
cmc
test
or
mov
mov
cmpb
push
es
aad
aam
cmpsl
dec
call
jbe
jne
pop
xor
or
fistps
test
ror
mov
shll
and
xchg
test
loope
add
push
leave
hlt
mov
and
cmpsb
sahf
and
dec
insb
xchg
xor
xchg
pop
int3
push
popa
cli
pushf
mov
cmp
cltd
xor
das
test
jle
loope
shll
xor
fildl
fistps
movsl
mov
mov
inc
mov
add
dec
add
bound
enter
pushf
jp
loope
nop
sti
fstl
and
sub
mov
clc
mov
mov
shlb
adc
cli
jl
fwait
out
mov
aam
pop
adc
clc
sub
mov
into
clc
inc
sbb
xchg
mov
cmc
or
or
mov
movsl
mov
lea
xor
fnstenv
pop
xchg
shrl
xor
adc
inc
shrb
test
incl
repz
pop
leave
lcall
dec
nop
adc
xor
out
xchg
movsb
push
add
das
lea
push
cmp
pop
push
jl
mov
push
cmc
inc
sbb
jmpw
lret
mov
sub
push
sub
mov
jecxz
jle
or
aad
das
jo
pop
pop
jns
gs
adc
loopne
push
xchg
mov
shrb
js
xor
nop
xchg
mov
jl
int3
push
repz
xor
popa
fildl
inc
in
mov
sub
aas
dec
mov
gs
push
fsts
repz
loop
mov
xor
inc
mov
fwait
movsl
pop
aad
mov
popa
sub
lea
jl
and
popa
sbb
mov
sbbb
mov
jbe
or
stos
adc
push
add
jmp
aas
stos
je
xchg
adc
dec
adc
nop
lds
cwtl
jg
sub
test
sbb
scas
icebp
sbb
cs
xchg
push
subb
xchg
popa
data16
cmp
xlat
jg
ds
or
jnp
jmp
call
imulb
arpl
push
movsl
mov
cmpsb
dec
push
ja
lock
xchg
inc
sub
repnz
mov
pop
jmp
scas
dec
adc
cli
pop
adc
or
clc
outsl
ss
icebp
ds
or
mov
cmp
loope
addr16
xchg
push
jnp
push
mov
push
push
sub
gs
mov
mov
mov
rorl
adc
sbb
push
stc
std
jns
mov
lock
cli
mov
lock
pop
fisubrl
sbb
pop
xlat
fisttps
stos
pop
mov
or
sub
add
adc
cmpsl
lahf
sbb
std
div
jge
loope
cmpsl
fcompl
lods
lret
stc
insb
movsb
rcrl
clc
ja
dec
xchg
adc
jne
mov
mov
arpl
mov
sbb
xchg
jl
cmpb
jp
cmpsw
mov
leave
push
fs
out
in
and
das
mov
ss
movsl
test
pop
push
push
hlt
dec
push
xlat
out
cmpl
inc
adc
inc
lods
pop
decl
xchg
mov
xchg
inc
lods
addr16
mov
fstps
add
xchg
mov
scas
lock
and
pop
push
mov
push
hlt
sub
jns
and
test
pusha
hlt
repz
gs
test
push
cwtl
insb
push
pop
and
scas
cs
sub
sbb
jo
add
mov
lods
add
mov
mov
add
es
into
lds
andb
subb
icebp
sbb
shrl
lods
out
push
dec
push
movsl
sbb
aam
push
mov
fsubl
sub
ljmp
lahf
int3
push
and
outsl
ds
pushf
dec
push
cltd
xor
lret
or
dec
arpl
adcl
adc
mov
addr16
sbb
push
pop
jp
cmp
pop
xchg
xor
or
lcall
imul
xor
fadds
and
pop
cmc
mov
pop
jmp
jecxz
xor
push
xchg
xlat
icebp
push
mov
pop
lea
sbb
xchg
jo
repnz
lock
cmp
cmp
mov
test
or
mov
and
mov
inc
idiv
dec
and
popl
xchg
cmp
push
into
xor
sub
jnp
push
push
mov
jo
loope
rcll
or
sub
pop
scas
test
pop
and
cltd
push
add
ret
dec
adc
push
or
adc
dec
mov
pop
push
mov
adc
mov
ret
add
pop
xlat
sub
fs
pusha
out
andb
jge
xchg
jb
mov
std
jecxz
lcall
xchg
ss
push
loope
shlb
mov
push
add
adcl
popf
fwait
outsb
inc
xchg
adc
inc
xchg
hlt
lea
fiaddl
mov
pop
dec
and
xor
mov
shr
fstpt
adc
jae
mov
lock
dec
imulb
jmp
dec
in
add
pop
mov
repz
push
xchg
push
int
mov
cltd
clc
sti
das
loope
fstp
sub
rclb
lcall
jl
movsl
cs
sub
popf
lcall
dec
jb
jns
test
cltd
pop
lods
mov
test
jns
popa
bound
jne
fdivrs
xrelease
pushf
pop
and
iret
pop
push
cmp
cmp
push
mov
lods
sub
outsl
pop
jp
xor
ja
mov
popa
scas
ficompl
or
xchg
iret
cmp
adc
fildll
insl
jnp
pop
repz
xchg
ss
scas
or
sub
mov
test
hlt
loope
sbb
sub
jno
xor
stos
adc
or
into
cmpsl
inc
or
inc
je
xlat
or
mov
add
add
cwtl
loopne
loop
inc
sarl
fwait
sbb
adc
arpl
scas
xchg
cld
mov
jne
enter
call
sub
add
xor
mov
cld
mov
inc
adc
mov
outsl
daa
fsubrs
push
sbb
data16
mov
popf
call
mov
mov
xchg
or
js
movsl
push
lods
imulb
clc
inc
sbb
fildll
fdivrp
into
mov
lea
aad
and
cltd
sbb
mov
mov
cmp
pop
sub
add
and
sbb
and
fucomi
push
ljmp
jbe
test
jbe,pn
mov
mov
jb
xchg
mov
cmp
lods
les
mov
push
push
in
cmp
rclb
mov
pop
fldcw
in
jns
cmc
in
dec
xchg
je
pop
and
inc
xchg
adc
xor
add
sub
jbe
stc
les
out
jmp
cmp
std
lea
out
test
stos
shll
push
inc
mov
bound
lret
loop
mov
mov
mov
aaa
sti
dec
push
sub
add
cwtl
sub
cmp
sbb
popf
push
repz
lock
inc
and
and
dec
or
mov
pop
leave
push
push
mov
dec
jb
pop
mov
and
jge
adc
shll
iret
std
cli
je
cmp
repz
push
pop
lcall
xchg
add
push
sub
inc
lcall
dec
lea
adc
xor
ret
fs
ljmp
in
cs
cld
push
jb
aas
std
xchg
enter
inc
lahf
iret
xlat
push
test
fdivr
xchg
add
jl
ret
inc
in
mov
sbb
lret
jno
dec
cmc
or
dec
popf
push
popa
sar
ds
and
adc
pusha
out
mov
mov
mov
sub
arpl
shll
pop
mov
xor
shrb
testl
clc
inc
int3
sbb
sub
aaa
pop
xchg
test
sub
push
cmpsb
push
outsb
cltd
xchg
mov
mov
sbb
int
bound
in
bound
push
fisttps
or
mov
pushf
nopl
vmread
stos
jmp
inc
outsb
inc
lds
repz
push
test
out
sub
int
lods
aam
jb
jle
aad
data16
push
mov
ljmp
rolb
dec
and
fwait
sub
jno
cmpsb
mov
jo
jecxz
insl
arpl
pop
mov
sub
mov
jge
insb
add
fiaddl
and
mov
mov
mov
mov
mov
push
movsb
xchg
into
cmpb
adc
ds
iret
inc
arpl
movsl
add
mov
push
xchg
pop
lcall
gs
pop
mov
into
test
sbb
in
pusha
je
in
xor
pop
scas
cmp
inc
xor
lret
addl
clc
stos
aas
adc
fildl
iret
mov
jge
inc
xchg
pushf
push
mov
aaa
jb
ja
jle
jbe
adc
adc
cwtl
mov
inc
adc
jg
cmp
pop
pushf
cmp
addr16
adc
bound
xor
fisubl
icebp
cmp
jns
push
push
stos
push
xor
popa
daa
popa
mov
pop
pop
movsb
inc
jb
dec
adc
dec
lcall
mov
sub
cld
lret
inc
mov
pusha
fwait
sti
pop
test
jp
arpl
cmp
sub
dec
enter
cmc
call
or
fbld
dec
mov
or
inc
push
jg
push
jg
icebp
aam
xchg
lock
cmp
iret
mov
imul
inc
ret
xchg
ret
fwait
sub
ljmp
scas
incb
loope
icebp
cli
scas
sahf
stc
add
das
imul
test
leave
out
movsl
sub
xchg
xchg
push
mov
xor
int3
mov
or
or
xor
add
lcall
cmpsb
not
adc
pop
mov
cwtl
in
bound
mov
ds
inc
mov
aas
jae
ss
jnp
adc
in
or
push
jl
and
jge
fwait
inc
pop
cmp
jae
out
and
ret
test
push
out
or
xlat
mov
cli
mov
mov
cs
outsl
inc
fidivs
jecxz
mov
cltd
xchg
jge
fmuls
mov
push
jmp
sub
mov
mov
xor
in
push
and
ss
test
outsl
aam
aaa
dec
pop
inc
pop
sub
or
lret
xchg
js
xor
ret
mov
push
and
std
imul
repnz
lock
insl
pop
addr16
aam
lcall
popf
shrl
ljmp
adc
not
sbb
in
push
and
pop
push
insb
sarb
sbb
cltd
jno
push
lods
mov
mov
hlt
xchg
pop
jge
fcmove
pop
push
test
push
rol
mov
mov
pop
mov
inc
out
in
sbb
jmp
mov
pop
mov
mov
mov
lret
outsl
adc
xchg
xchg
add
jno
scas
ss
xor
jmp
aad
ds
aaa
sub
stos
mov
movsl
rcll
xchg
add
mov
imul
lcall
insl
or
cmc
sbb
mov
test
fstl
mov
pop
in
test
imul
jecxz
jb
in
fldt
sbb
mov
ja
inc
js
xor
sbb
jae
add
and
lds
das
and
les
loopne
jns
das
sbbb
lret
sub
scas
fdivr
lcall
cli
jb
pop
adc
push
dec
in
test
jbe
int
xor
jo
pop
lods
and
fdiv
add
mov
cmp
cmp
mov
rcrl
pop
loop
scas
push
sub
sti
mov
lea
sub
inc
adc
mov
lock
mov
iret
jns
pop
and
idivl
fsts
lcall
cmp
jge
mov
pop
ja
inc
mov
or
adc
frstor
and
and
stc
ret
rclb
adc
mov
lcall
mov
fcmovnbe
fsubl
iret
push
gs
and
jle
push
sti
xchg
mov
mov
xchg
fwait
adc
or
fwait
adc
fstp
inc
mov
add
push
jno
stos
enter
lods
jo
dec
push
test
sbb
mov
dec
jns
pop
movsb
lahf
mov
lret
inc
leave
pop
pop
movsb
cwtl
cmp
cmc
movsl
cmpsl
dec
ljmp
jns
addb
aad
js
or
cmp
dec
xor
adc
enter
inc
mov
loop
jne
fcmove
mov
dec
inc
ds
fsubs
jmp
inc
cwtl
sub
pusha
out
pop
mov
cmp
adc
add
addb
and
or
test
jge
or
dec
push
pushf
inc
pop
pop
adc
add
insb
jb
mov
test
dec
les
call
mov
adc
xor
movsb
loop
mulb
add
mov
jl
ret
or
outsb
clc
and
cmp
daa
scas
ljmp
dec
rol
lret
addl
incb
insb
clc
jecxz
insl
mov
pop
xlat
test
sub
sub
mov
int
lods
or
jb
nop
mov
jne
dec
mov
push
ret
aam
adc
push
lds
mov
xor
xor
add
lock
jl,pn
sbb
push
hlt
push
dec
out
sarl
lret
imul
stc
sub
mov
fs
pop
ret
push
fucomip
roll
mov
fsubp
or
add
fsubrs
xor
daa
mov
push
and
outsl
mov
leave
mov
cld
cld
nop
sbb
addr16
xorl
xor
ret
push
mov
sub
sbb
movl
mov
orl
mov
movl
cmpl
mov
movl
not
not
jmp
mov
ja
push
push
call
or
mov
xor
xor
add
or
sbb
add
adc
movzwl
xor
dec
mov
movl
addl
movl
cmpl
not
movl
jmp
mov
mov
jne
pushl
call
inc
movzbl
xor
mov
or
neg
and
adc
xor
movl
add
movl
movl
cmpl
mov
mov
jmp
mov
movl
jb
push
push
push
call
add
movl
xor
xor
movl
mov
mov
cmpl
mov
movl
movl
jmp
mov
jg
push
call
subl
or
add
sub
and
xor
add
sub
mov
andl
mov
sub
mov
push
mov
sbb
mov
cmpl
movl
movl
mov
jmp
mov
je
pushl
push
push
push
call
orl
dec
adc
xor
xorl
xor
or
mov
andl
push
addl
push
notl
push
push
incl
call
mov
mov
xor
and
not
xor
and
xor
or
mov
sub
xor
and
cmpl
mov
movl
jmp
movl
jg
pushl
push
pushl
push
pushl
pushl
pushl
call
add
xor
add
and
add
mov
and
add
mov
jmp
movsl
add
mov
stos
inc
or
adc
adc
pop
push
mov
les
sbb
lahf
jl
and
jge
je
mov
xor
rclb
scas
pop
fsubl
push
cmc
push
pop
fwait
rolb
ret
in
rcll
dec
and
xchg
js
cmpsl
xor
jl
out
adc
test
fcmovbe
call
push
dec
inc
jl
shlb
mov
imul
pop
inc
daa
pushf
negb
mov
mov
aas
and
add
ljmp
repnz
aam
gs
sti
jnp
sbb
mov
ds
sbb
push
loope
push
inc
mov
popa
adc
sub
mov
jg
mov
mov
add
test
sahf
mov
pop
xchg
mov
cmpsl
in
movsl
push
mov
or
push
repz
xchg
fcomip
rcrl
repnz
nop
add
lock
lds
fistpll
cmp
mov
std
jecxz
insb
aas
cmpsb
les
aas
std
xchg
aas
dec
inc
lret
xchg
ret
lds
lret
add
lret
pop
jbe
xchg
pop
mov
adc
shll
mov
int3
push
stos
xor
add
inc
and
jns
mov
adc
movsb
and
andb
pop
pop
arpl
jbe
nop
rolb
mov
int3
rcl
arpl
adc
mov
xor
mov
fcomi
push
je
and
es
es
leave
arpl
or
scas
aam
aam
add
jnp
imul
stc
loop
paddb
xor
push
jmp
inc
lods
pop
push
push
adc
aaa
popf
push
fldenv
cwtl
or
inc
mov
mov
les
aad
push
inc
mov
mov
fs
mov
sbb
mov
mov
fnstsw
ret
xchg
inc
xchg
push
outsl
inc
les
or
mov
pushf
and
stos
stos
into
out
ret
adc
loope
dec
mov
inc
bound
aam
in
add
repnz
or
add
cmp
xchg
daa
sbb
dec
add
sbb
fsubs
pop
addr16
cmp
bound
or
dec
add
cwtl
jae
clc
and
mov
jb
mov
mov
pop
scas
push
lret
movsb
push
dec
loopne
and
inc
js
inc
mov
add
fxch
gs
stos
or
add
mov
pusha
shll
jns
das
mov
adc
sub
adc
xorb
hlt
xor
jns
test
insl
movsl
lods
jmp
cmpsl
inc
shl
sub
into
fildl
inc
jecxz
test
pushf
xor
outsb
loopne
and
push
pop
repz
ljmp
scas
fwait
pusha
mov
out
and
sbb
dec
and
mov
inc
xchg
sbb
mov
pop
xchg
xchg
mov
inc
push
je
ja
mov
inc
nop
je
lods
popa
movsb
ds
mov
fdivl
and
dec
add
xlat
xor
or
mov
sti
mov
fwait
cli
repz
test
pop
sbb
jecxz
test
scas
inc
jne
aam
cmp
xchg
dec
popa
mov
mov
jge
mov
loope
nop
notb
add
cbtw
adc
push
scas
xchg
mov
in
and
insl
in
xchg
xlat
push
mov
daa
sarb
repz
aad
mov
into
push
arpl
xchg
xchg
jg
fsubrs
ficompl
outsb
jns
cwtl
pop
xchg
jb
lret
or
loop
jmp
jle
inc
roll
adc
mov
jno
ret
fidivrs
xchg
mull
mov
dec
pop
mov
adc
xor
pushf
into
sbb
lods
jge
adc
adc
or
hlt
imul
imul
ljmp
push
aaa
sub
outsl
pusha
push
insl
iret
test
push
sub
mov
add
add
sbb
test
icebp
movsl
call
callw
mov
xchg
rorb
out
pushf
add
adc
in
pop
repnz
cmp
roll
xor
xchg
mov
adc
push
cmp
jbe
dec
mov
hlt
dec
jp
mov
xchg
adc
push
adc
inc
add
lods
pusha
test
adc
test
orb
out
gs
jp
dec
aaa
xor
mov
fucomi
cmp
push
sub
jge
imul
insl
sub
cmp
stc
push
cmp
lret
dec
ficompl
mov
out
subb
pusha
lret
add
and
cmp
addr16
lret
push
ss
xor
push
dec
loopne,pn
jp
fdivr
in
sbb
mov
and
in
jp
inc
cli
es
dec
test
repnz
test
cmpb
out
adc
sbb
dec
daa
leave
jne
lea
cli
aas
stos
sbb
mov
pop
xlat
pop
mov
xchg
testl
repz
or
or
jp
insb
jno
rcll
xchg
dec
xchg
mov
idivb
xor
rol
push
dec
ret
lods
std
mov
mov
out
jle
subb
push
idivb
xchg
cmp
adc
pushf
dec
mov
push
mov
jle
and
mov
jbe
inc
pushf
dec
ja
pop
repz
xchg
dec
or
stos
pushf
mov
dec
mov
push
stos
daa
adc
popa
loope
sbb
cmp
dec
dec
jmp
subl
fwait
daa
call
push
test
scas
pop
cmp
cmpsl
stc
lret
imul
sub
dec
dec
pop
aam
add
repnz
je
push
jnp
out
adc
add
xchg
or
mov
or
je
fs
push
mov
or
mov
scas
add
push
mov
lea
mov
jo
flds
and
jge
pop
mov
cwtl
testl
bound
mov
das
mov
pop
and
xor
ss
jecxz
mov
mov
into
cli
sti
jecxz
rolb
xlat
sub
mov
dec
jp
or
mov
cmpsb
test
sub
inc
mov
sbb
scas
pop
add
dec
mov
sub
adc
jecxz
call
xchg
cltd
lahf
imul
js
jo
mov
or
adc
fists
push
mov
fcmovnb
or
push
sbb
in
lret
and
push
pop
push
lods
scas
mov
stos
ds
pop
in
sub
xchg
xor
cmpsb
pop
xor
movsb
jne
les
jmp
pop
cmp
xor
sbb
push
jg
jo
xor
lret
sbb
sbb
inc
jmp
lods
pop
clc
loope
ret
inc
cwtl
adc
cmp
pop
js
aaa
dec
pushf
cs
cld
jnp
ds
cltd
outsb
add
jbe
push
inc
mov
pop
pop
add
pop
cld
imull
ss
add
xlat
mov
adc
iret
pop
pop
pop
mov
xchg
pop
inc
mov
push
or
sub
stos
jle
lahf
push
loop
push
mov
cwtl
and
jb
cltd
cld
add
mov
jecxz
aam
arpl
es
cmc
insl
cld
rolb
adc
mov
std
jo
mov
gs
sbbl
jg
imul
push
sbb
mov
jge
negb
in
out
ss
loope
xor
mov
push
gs
jmp
cmp
sbb
mov
xor
popl
nop
adc
fists
sbb
fwait
cltd
add
ret
cwtl
or
lds
xchg
push
jnp
pop
xchg
mov
cmc
sbb
push
adc
loope
dec
push
aaa
aas
mov
fiaddl
daa
cwtl
and
bound
and
and
fs
mov
aam
out
push
in
aaa
fcmovnb
cmp
cmp
sbb
mov
rorl
arpl
xor
sbb
xchg
popa
inc
xor
leave
adc
int3
lea
loope
lcall
mov
lods
mov
adc
mov
cmp
add
mov
fwait
stc
push
mov
jne
cmp
sub
pop
ret
bnd
add
loop
mov
insl
inc
xchg
push
push
jl
sbbl
jg,pt
in
xchg
inc
movsb
mov
pop
sub
pop
sub
mov
mov
loopne
cmc
and
outsl
mov
sbb
sub
lret
mov
and
icebp
movsb
andb
aam
sahf
scas
fiadds
dec
add
insl
imul
fs
rcr
mov
or
aas
adc
shrl
and
mov
insb
out
jge
lods
sti
test
jns
popa
mov
xchg
jmp
inc
xor
inc
ljmp
cli
ret
jg
xchg
fmuls
lods
out
push
add
pop
stc
imul
pop
cmp
inc
fdivrl
xchg
cmp
jb
push
je
aad
leave
insb
movsl
outsl
out
and
push
xchg
xor
jl
push
shll
ds
shll
sub
dec
or
fbstp
add
pop
push
into
cmp
ficoms
arpl
cmp
sub
xor
int3
sub
lods
test
mov
rol
adc
scas
inc
test
adc
sbb
push
rolb
int3
shrl
dec
push
mov
jbe
cmpsb
rcrl
in
bound
cmpsb
rcll
cli
adc
sahf
jne
mov
adc
mov
ss
hlt
insl
mov
and
arpl
fcomip
rcrl
sarl
xor
int
cld
inc
mov
sbb
into
test
mov
lods
mov
aam
dec
in
bound
fcoms
jns
movsb
sahf
sbb
lods
lcall
loopne,pt
in
scas
push
mov
pop
mov
das
mov
es
adc
ss
js
js
insb
mov
inc
pop
xor
iret
arpl
jb
in
adc
stos
leave
push
das
dec
flds
pop
mov
push
lds
test
xor
test
pop
lock
pop
sub
mov
push
ljmp
jnp
and
push
sahf
push
adc
mov
dec
sbb
xor
and
inc
mov
mul
xchg
les
outsb
push
outsl
lock
push
adc
ljmp
adc
divb
rcll
cmp
lods
mov
pusha
dec
loope
xor
std
fdivl
lcall
in
mov
lods
mov
lock
cmpsl
adc
cmp
lcall
dec
roll
les
ss
test
out
test
dec
sbb
dec
dec
stc
and
push
adc
out
enter
mov
pop
fs
scas
sahf
fsubl
adc
ds
or
dec
and
int3
and
arpl
add
addr16
xor
test
xor
jbe
cmp
sub
push
push
pop
xchg
mov
into
into
les
stc
mov
les
sub
aas
jle
daa
mov
xchg
addr16
rolb
pop
test
ljmp
sub
jno
push
xor
hlt
popf
inc
mov
push
sbb
out
stos
sti
faddl
hlt
xor
pop
mov
xor
dec
call
and
mov
mull
stos
call
pusha
adc
push
daa
call
mov
and
test
pushf
xor
lds
mov
jbe
cli
lea
enter
out
nop
inc
xor
jbe
out
pop
mov
sbb
and
cli
and
leave
fs
jecxz
inc
loop
mov
mov
in
xor
sbbb
decl
add
clc
mov
cmp
cltd
jae,pt
push
add
aad
mov
enter
mov
jl
inc
pop
popf
das
dec
sbb
inc
daa
add
jecxz
dec
sub
addr16
loopne
gs
dec
ja
sub
xlat
mov
notb
push
call
ret
dec
lods
das
fistpl
clc
test
push
daa
cmp
movsl
add
jo
push
int3
aaa
fisubl
dec
sbb
add
orb
mov
dec
inc
ss
mov
inc
add
and
movsl
add
lcall
push
mov
mov
shlb
adc
loope
and
cmp
xor
adc
cwtl
insl
mov
out
ret
cmc
sbb
dec
icebp
push
in
push
inc
cmp
daa
cmpsl
push
jecxz
lcall
sbb
adcb
fwait
push
push
add
push
idivl
and
cmp
sub
jecxz
addr16
nop
sub
fwait
leave
pusha
gs
mov
out
into
iret
roll
loope
cmc
push
outsb
sbb
mov
std
hlt
andb
scas
push
popf
push
cmp
dec
pop
gs
lea
sub
sub
xor
aam
xchg
cmc
dec
ja
movsl
xor
mov
mov
push
rcll
jp
xlat
xor
stc
sarw
mov
bound
push
cmpsb
ficoml
popf
mov
mov
fwait
sti
adc
movsl
stc
sub
fimull
add
dec
cld
push
popa
popf
jae
jp
lret
pushf
rorb
xchg
into
xchg
inc
xor
fs
dec
mov
movsl
sti
dec
mov
shl
inc
cmpl
test
subb
cmp
mov
lahf
mov
repz
repz
ds
cmpsb
cld
pop
or
rcrl
and
imul
in
fs
jp
call
jecxz
fwait
sub
add
push
mov
insb
sub
xchg
aad
mov
or
test
lods
cs
jl
clc
and
bound
push
xor
push
mov
stos
je
jl
test
jae
sbb
inc
out
mov
icebp
fisttpll
loop
fs
push
xchg
jg
xchg
shlb
stc
pushf
mov
mov
addr16
into
cmp
aaa
xor
std
lret
mov
or
cwtl
or
in
jno
into
cwtl
dec
jmp
movsl
jb
test
roll
into
cmpsb
out
into
dec
dec
mov
mov
and
aas
push
cmp
clc
lods
pop
ja
jo
cli
add
mov
mov
cmpb
add
mov
les
mov
xlat
aam
xchg
pop
mov
cmpsb
sub
jns
inc
sbb
jg
push
shlb
dec
iret
and
loop
gs
sarl
pop
sbb
sub
push
mov
cmc
cltd
pop
mov
sub
xchg
sub
div
and
mov
aad
pop
std
mov
push
in
xchg
jge
ret
push
mov
jne
lds
add
xor
xchg
out
negb
jecxz
adc
repnz
jo
jb
cmp
xchg
dec
lock
xchg
test
cmp
out
decl
fnstsw
inc
ljmp
dec
test
sub
leave
sub
fildl
jp
sbb
push
push
cmp
jg
mov
xorl
gs
or
push
add
xor
scas
data16
enter
push
icebp
cli
fistps
xchg
ja
rol
pop
inc
iret
loopne
adc
into
ret
lcall
cmp
sbb
mov
and
into
pop
in
mov
gs
das
dec
hlt
ret
cld
cmp
stos
stc
inc
daa
xlat
mov
rorb
shrb
int3
mov
mov
cmp
cmp
pop
loope
pushf
fdivs
test
and
adc
jg
cmp
das
pop
mov
fdivs
es
cwtl
pushf
and
loopne
in
repz
xchg
cmp
xchg
or
cmp
popa
daa
out
testl
pop
and
rcr
lret
int
xor
in
or
xchg
out
cmp
cli
lock
mov
or
jo
inc
xchg
push
je
xor
dec
aam
imulb
sub
ds
inc
dec
mov
loopne
cmp
ret
movsb
xchg
in
xchg
movsl
or
xchg
aad
fmul
inc
mov
push
icebp
fmul
jge
adc
imulb
addl
shrl
xorl
insl
cmp
or
push
xor
cmpsb
stos
jle
cmc
mov
ja
repz
dec
jge
or
ljmp
in
lahf
fs
mov
dec
fldcw
daa
enter
adc
mov
dec
arpl
adc
pop
inc
insl
cmp
sbb
jge
mov
and
push
cwtl
inc
adc
loopne
sbb
sbb
push
push
fcmovne
adc
loop
inc
dec
fcoms
xor
and
mov
push
and
or
fists
inc
into
push
fildl
outsb
cmp
jge
inc
dec
cmc
repz
mov
out
dec
inc
popf
sub
or
mov
mov
lahf
adcl
mov
pop
dec
inc
cli
repnz
cmc
inc
cmc
add
xor
js
push
lahf
mov
data16
test
jmp
jnp
enter
mov
and
cmp
fidivrl
cmp
push
loopne
loope
or
inc
shrb
rorl
cli
xchg
xchg
lahf
xor
cwtl
dec
push
push
roll
les
mov
jecxz
add
pop
scas
icebp
mov
push
jle
outsl
add
fadds
and
mov
or
je
or
adc
js
cwtl
jg
int
in
inc
jmp
dec
xor
loopne
fcoml
jbe
jg
mov
test
add
ljmp
insb
orl
push
dec
and
insb
pop
sbb
mov
roll
in
lods
fwait
mov
pop
in
add
in
ljmp
dec
aaa
outsl
sbb
jl
je
mov
add
cmc
pop
out
jno
aas
pop
adc
pop
stos
in
not
dec
fistl
cmp
sti
gs
mov
gs
cmp
leave
and
in
es
mov
sbb
shll
cmp
mov
or
ss
dec
in
jnp
pop
rol
xchg
adcb
inc
inc
ja
mov
popf
fmuls
push
mov
popa
aam
int3
test
mov
fimull
mov
cmc
daa
std
scas
cltd
lret
dec
lret
loope
cltd
sub
or
insb
and
jl
mov
mov
and
lcall
leave
or
aas
adc
dec
out
lods
sbb
inc
pop
mov
push
cld
mov
mov
jle
xchg
inc
cmp
sti
add
enter
push
scas
lods
jmp
enter
cmp
xchg
or
adc
mov
rcl
push
sub
lods
insb
cmp
pop
lock
negb
pop
mov
mov
mov
dec
xchg
gs
xchg
dec
cltd
imull
jecxz
out
rcll
cwtl
jge
mov
add
push
add
adc
test
hlt
pop
ret
iret
inc
imul
test
lds
xchg
sbb
inc
lret
lahf
lock
stc
fstps
pop
cmpsb
push
arpl
push
pop
mov
sbb
push
inc
ret
cli
xor
enter
imul
adc
iret
push
cmp
insb
mov
inc
enter
inc
test
in
dec
sbb
sti
jne
cmpsb
leave
clc
sarb
dec
das
aaa
leave
shl
sub
push
sbb
add
pop
pop
outsb
sub
xchg
xor
das
dec
sub
xchg
stos
loopne
addr16
jl
pop
sbb
loopne
lea
ljmp
popf
inc
inc
sbb
fs
lock
jae
mov
cmp
mov
xlat
or
dec
or
outsb
xchg
xor
and
enter
add
sub
cmp
lea
or
inc
xchg
dec
jp
mov
mov
popa
push
xor
lcall
test
aam
loope
lret
sub
xchg
and
push
call
insb
les
fdivrl
sahf
jmp
sbb
out
daa
movb
cli
pop
and
seto
addr16
xor
ss
fsts
and
mov
sub
mov
test
pop
call
loopne
push
jnp
loop
das
cmp
movsb
inc
fisttps
movsl
mov
sub
cli
adcb
movl
stc
nop
xlat
mov
hlt
jl
inc
add
shl
add
cwtl
out
je
out
inc
fwait
or
aad
dec
icebp
mov
sbb
and
push
fildl
stc
adc
mov
mov
lcall
xlat
outsb
flds
scas
pop
push
aaa
sub
roll
dec
notl
fdivr
sub
pop
clc
xchg
mov
ja
ss
jbe
xchg
cli
mov
orl
sub
pop
out
cmpsb
loopne
jne
addl
push
stos
dec
xor
testb
cmp
fwait
mov
xor
adc
jbe
and
in
cmp
ja
mov
pop
mov
cmp
js
mov
sahf
into
pop
and
cmp
adc
shlb
dec
es
rcl
scas
pop
sbb
dec
mov
jle
lret
mov
mov
sub
add
mov
mov
scas
ret
ds
mov
mov
or
enter
jae
cwtl
ss
sbb
jbe
mov
sub
mov
mov
fwait
test
jns
daa
or
jne
cltd
sbb
jmp
inc
xor
mov
stos
bound
sti
in
cmp
adc
icebp
daa
xchg
jge
pop
das
cmp
vrcpss
xor
fs
push
mov
pop
lret
mov
in
inc
leave
mov
add
dec
sbb
xchg
scas
mull
stos
loopne
xchg
xchg
das
or
test
loopne
in
aad
aad
test
cmpsb
aas
test
pusha
in
jne
cmpsl
cmp
mov
xchg
pop
dec
addr16
pop
lods
pop
out
lods
dec
push
xlat
lods
push
aaa
aaa
fcmovu
dec
out
lret
ljmp
sti
imul
sbbl
pop
das
outsl
insl
sub
dec
push
mulb
pop
adc
shrb
lahf
push
cmp
jo
xor
cltd
out
orl
fstl
or
fnstenv
aas
or
jnp
cmp
lcall
shlb
imul
jge
dec
or
pusha
adc
je
or
lret
pop
sti
xor
mov
and
push
sbb
jb
js
out
jle
ret
jmp
shlb
mov
sub
inc
xchg
push
cs
sub
mov
cmp
dec
lret
mov
and
aas
mov
cmp
clc
js
fmuls
ret
xchg
mov
mov
mov
jb
sbb
dec
jl
arpl
mov
push
popa
fs
mov
scas
push
jge
pop
pop
or
js
rcrb
mov
orl
fsubrs
sbb
add
shr
aad
and
jmp
loop
lods
shll
hlt
iret
mov
cmp
push
cli
dec
cmp
jl
push
adc
pop
fmull
outsl
lods
es
xchg
mov
sub
push
xor
cmp
jae
xor
int3
or
dec
outsl
fcomip
or
insl
stc
repnz
pop
call
dec
shrb
cmpsb
push
sarb
add
cmp
lods
push
jb
leave
data16
shll
push
sbb
or
lret
pusha
jg
into
add
lods
push
addb
and
and
sarb
mov
pop
pusha
sti
repz
scas
xchg
pop
push
pusha
lret
movsb
roll
int
lea
sbb
jle
inc
dec
mov
cmp
jb
cmpsl
out
jg
sarb
sbb
jp
cmpsl
mov
iret
xchg
push
sbb
or
xchg
add
mov
jg
mov
jne
jae
aad
lret
dec
mov
adc
fs
push
rcll
call
test
sub
aam
jl
pop
outsl
movsb
mov
dec
jb
test
xor
dec
scas
cld
out
ficomps
cs
mov
and
mov
decl
add
mov
xchg
push
call
lds
sub
fdivs
std
imul
pop
push
xchg
testl
addr16
enter
pop
pop
jo
les
jl
mov
vpshufd
ror
dec
and
xchg
out
push
lahf
cwtl
js
mov
shl
jl
popa
jg
insb
and
insb
mov
cmpsb
and
jno
movsb
xor
pop
aad
xchg
add
or
push
cmp
fs
or
adc
xorb
sbb
push
stos
pop
sub
mov
push
cmpsl
jl
add
dec
js
inc
out
jns
pop
dec
addr16
mov
adc
je
xchg
fwait
stos
pop
and
jo
add
xlat
test
push
ss
xor
cmpsl
sahf
mov
lods
push
sbb
aam
shll
xchg
repz
mov
fcomp
mov
gs
mov
dec
pop
imul
out
sub
and
inc
jl
mov
jo
ja
jnp
push
ds
push
sbb
ret
inc
rorb
hlt
pop
dec
andb
fcoms
dec
sbb
inc
dec
and
xchg
repz
jmp
ljmp
xchg
in
or
sub
fidivrs
test
mov
xchg
xchg
iret
ss
insl
jl
pop
cmpsl
pop
push
call
pop
inc
and
shlb
ret
mov
sbb
mov
int3
sub
sbb
cs
fdivrs
pop
inc
sub
sbb
sbb
xor
aam
pop
jge
addl
jnp
addl
cmp
outsl
cmc
mov
dec
aas
fidivs
fimuls
stc
pop
sbb
iret
mov
cli
push
xlat
enter
inc
fsubp
sub
lds
andl
cmp
adc
jb
or
mov
mov
cmpsb
gs
and
fcoml
adc
nop
fdivl
aaa
ret
sub
in
and
fildl
or
rdpmc
subb
scas
jb
ljmp
or
dec
test
fimuls
scas
and
dec
mov
mov
loopne
jno
fmuls
lret
pop
out
xchg
scas
lods
aas
stc
xor
sbb
mov
push
pop
mov
in
xchg
fiadds
lcall
in
stos
add
xchg
xchg
mov
or
or
jno
inc
test
je
in
mov
test
daa
addr16
xchg
mov
jns
icebp
and
pop
jmp
cs
adc
add
and
xchg
aad
inc
in
mov
lods
cld
add
sbb
dec
mov
sti
dec
outsb
mov
pushf
add
jno
mov
push
pop
shll
mov
mov
test
sub
inc
sarb
arpl
jns
inc
std
jb
pusha
adc
stos
fidivs
xor
dec
insb
sarl
test
std
sbb
inc
sub
adc
pop
push
popf
jb
mov
xor
testb
fwait
lret
pop
add
or
push
mov
mov
dec
sub
pop
lock
xchg
out
popa
popa
sbb
in
lea
ja
dec
dec
jl
push
int3
mov
xor
adc
push
dec
xor
pusha
pop
lock
mov
sti
sub
pop
cmp
fsubrl
pop
xchg
or
lock
fucomip
mov
add
js
xor
bound
mov
cmp
in
leave
pop
adc
xchg
repz
xchg
pop
lret
rcl
xchg
loope
inc
cwtl
lret
push
push
xor
inc
add
call
jae
into
rcl
and
inc
mov
sahf
cmp
pushf
xor
insb
test
push
mov
fadds
dec
pop
mov
push
xor
mov
xor
cli
icebp
pushf
loopne
rolb
adc
push
pop
fs
das
aam
sbb
bound
into
mov
test
out
pop
jle
jb
movsl
sbb
lods
aas
push
loope
sub
lods
xchg
insl
push
psllw
adc
push
cmp
lock
jns
sbb
jno
loopne
stos
stos
jecxz
or
repnz
sub
popa
add
pop
inc
pop
arpl
push
xchg
jle
in
cmpb
jns
dec
push
dec
je
cmpsl
pop
cmp
call
mov
movsl
inc
mov
xor
pop
jb
and
fsubr
sarl
sub
fimuls
insb
cmc
stos
add
lds
push
adc
pusha
lods
fstl
cmp
adc
mov
jns
scas
cmc
rcll
std
or
sti
leave
dec
fnstcw
sbb
cmpsb
pop
xor
insb
ljmp
jle
push
push
sbb
lahf
ja
addr16
popf
in
addr16
jmp
or
scas
std
int
mov
cmp
sti
inc
in
loop
cmp
addr16
push
testl
jae
jecxz
pop
fs
sbb
dec
sbb
fistl
push
lods
sub
and
loopne
sub
push
outsb
xchg
call
dec
push
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
pushl
pushl
pushl
call
mov
mov
sub
xor
xor
xor
sub
andl
add
mov
adc
mov
movl
inc
movl
or
movl
cmpl
mov
movl
mov
jmp
movl
mov
jl
pushl
pushl
push
push
call
xor
movzbl
adc
mov
neg
adcl
sub
cmpl
mov
movl
movzwl
jmp
mov
jl
call
andl
adc
or
neg
sub
add
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
add
insb
shrb
sbb
jbe
push
push
push
les
pop
in
adc
push
inc
push
gs
mov
xchg
test
cmp
leave
arpl
jo
fdivrl
sub
fsubrl
sub
adcl
adc
inc
pop
dec
dec
cmp
es
mov
pop
adc
mov
jp
mov
and
std
aad
test
push
cmpsb
ret
mov
dec
pop
xor
xor
inc
inc
shl
repnz
cmp
rorb
pop
cmp
pop
orb
movsb
popf
mov
mov
cmp
adc
jge
cmp
xor
push
and
aas
sub
dec
ja
nop
add
fsts
or
push
lods
inc
fistl
lcall
data16
jne
dec
mov
pop
xchg
movl
push
adc
ss
push
ror
and
mov
pop
in
test
int
scas
gs
mov
adc
mov
icebp
lret
pop
stos
pop
lcall
nop
xor
xorl
scas
xchg
mov
lds
enter
lret
add
adc
sar
pusha
inc
jne
sub
mov
pop
test
fistl
int3
push
inc
sub
lods
insl
add
ljmp
push
adc
jmp
outsl
les
mov
jecxz
aas
pop
inc
xchg
inc
dec
mov
ret
mov
inc
or
std
sub
add
lret
cmpl
add
out
adc
testb
sarb
fnstsw
lods
enter
xor
mov
dec
jb
adc
cmpsb
mov
jecxz
push
dec
cld
mov
push
jnp
rcll
out
xlat
mov
mov
mov
xchg
mov
sbb
std
ret
lahf
cwtl
mov
pop
cmp
mov
and
rcrb
enter
cmp
in
or
jg
loop
je
les
in
loope
jnp
out
cmp
fstpt
dec
popf
add
subl
inc
aam
repz
sub
hlt
xchg
arpl
xchg
sub
lret
mov
mov
push
sub
dec
mov
xchg
sbb
insb
jbe
in
mov
lcall
adc
orl
js
sahf
sub
xor
push
sarl
in
lea
loopne
sub
lock
xlat
enter
push
test
inc
mov
sbb
sbb
add
das
cwtl
das
pop
cmp
stos
shrl
jne
nop
and
out
divb
fs
dec
ljmp
and
imul
repnz
stos
jb
add
insl
mov
jl
into
inc
aam
mov
sbb
lret
scas
loopne
sbb
xchg
push
sub
xchg
test
movsl
xor
sbb
xor
fiadds
xchg
hlt
dec
pop
jae
cmp
cmp
test
das
cmp
or
pop
cld
mov
jle
sub
loop
mov
mov
inc
inc
jo
adc
daa
lea
mov
clc
hlt
popf
push
xchg
mov
jge
mov
mov
or
movsb
pop
das
pop
cmp
shl
mov
mov
adc
addr16
mov
sub
in
test
sbbl
cld
sub
add
pop
lods
pop
mov
dec
lods
fucomi
test
mov
mov
sub
daa
jno
fists
or
loopne
sbb
jg
stos
xor
xor
push
loop
outsb
mulb
sbb
inc
lock
sbb
push
popl
imul
das
ja
mov
shll
or
sub
frstor
frstor
dec
mov
imul
push
ret
jbe
xchg
sahf
insl
ret
or
std
loop
push
cwtl
pop
cmc
push
cmpl
jne
js
inc
jle
cwtl
cmp
mov
lock
fstpl
fstl
mov
aas
push
out
aad
or
shr
iret
mov
push
divb
test
repz
int3
outsl
xchg
cmp
adc
xlat
dec
movsb
repz
jp
negl
lods
xchg
jo
push
sarl
jp
xor
test
jmp
xlat
movsl
fs
addr16
or
idivb
or
sbb
sbb
dec
std
sbb
in
push
imul
inc
dec
add
int3
lret
scas
or
push
imul
sbbb
xor
js
cmp
out
leave
popf
out
dec
adc
mov
sub
cmp
cmp
mov
ret
xchg
adc
cmp
push
mov
xchg
sbb
mov
push
dec
fcompl
idivl
mov
es
inc
xor
xor
mov
add
and
inc
cld
lret
xorl
add
or
cmc
xor
sub
pop
test
pop
sti
addr16
push
sub
xor
pushf
xor
xor
out
sub
call
add
stos
mov
push
out
sbb
cmp
add
ffree
fildll
pushf
inc
outsb
pop
or
dec
and
test
loopne
push
mov
pop
mov
sarb
pop
pop
mov
sbb
xor
out
mov
cmc
push
inc
cmpsb
jp
mov
out
push
pop
adc
mov
and
sub
fstl
mov
sub
cwtl
in
push
sub
inc
sbb
mov
mov
pop
int
jle
jnp
xor
mov
xchg
test
imul
jno
cltd
in
dec
mov
imul
fsubp
or
mov
mov
daa
imul
pusha
stos
or
mov
and
into
mov
push
jae
aam
iret
imul
fcomi
das
jge
sahf
ret
xchg
jo
mov
movsb
sbb
xchg
mov
adc
pop
test
sbbb
iret
cld
dec
out
or
sub
sub
push
lcall
inc
aas
das
inc
xorb
out
fiaddl
dec
stos
ljmp
push
xchg
jb
jl
jp
iret
pop
xchg
sbb
insb
pusha
mov
xor
dec
aam
pusha
push
and
sbb
sarl
pop
and
pop
jmp
xchg
div
fwait
inc
inc
mov
popa
test
xor
aaa
lea
xchg
lahf
shll
push
sahf
lods
mov
inc
jle
adc
imul
int
aas
test
cmp
orl
cs
insl
stos
test
sub
cli
int
xchg
repnz
rcrl
into
mov
push
mov
and
add
stc
inc
mov
int
call
sub
movsb
mov
adc
stos
clc
das
mov
sub
jecxz
xchg
int3
dec
cmp
sbb
sbb
and
jmp
repz
pop
aas
push
stos
loopne
mov
ds
adc
sbb
dec
movl
dec
into
rcl
mov
adc
imul
test
push
mov
inc
shr
sub
stos
mov
jecxz
std
and
aad
ja
call
call
aaa
iret
adc
movsb
int3
pop
xchg
mov
gs
mov
fsubrs
lods
into
dec
jecxz
mov
les
cmp
int3
and
pop
mov
in
loopne
push
add
or
push
mov
mov
psllq
lret
adc
cwtl
fistl
pop
repz
js
hlt
push
inc
cs
mov
lods
pushf
sub
loope
imulb
mov
xchg
or
insb
mov
xlat
imul
xchg
mov
adc
fistl
sbb
jns
in
int3
xchg
dec
int3
or
ja
jmp
js
scas
or
les
add
es
push
mov
ret
sbb
push
xorb
enter
mov
jne
mov
cmpsl
sub
push
movsl
xor
dec
cli
xchg
shl
or
fidivrl
mov
or
cmpsl
push
cmp
and
inc
mov
jne
cwtl
mov
fiaddl
adc
or
pop
das
cmp
cs
adc
aad
in
test
jp
loope
dec
insl
and
test
jecxz
jo
fcomps
xchg
jno
std
loopne
jae
inc
scas
or
fs
push
loope
jecxz
scas
les
movsl
shr
lods
or
test
dec
out
fwait
pop
cli
inc
xchg
sub
dec
cmpsl
dec
mov
sub
or
in
push
insl
fs
daa
cli
stos
icebp
pop
addr16
addl
xor
lcall
pop
add
fdivrs
mov
pop
stos
ss
loop
mov
jl
push
ficomps
out
test
push
test
jo
add
leave
sub
mov
jg
sbbb
xchg
or
mov
sub
sub
or
push
lahf
lcall
stc
lahf
cmp
mov
adc
loop
dec
stos
mov
xchg
mov
xor
cmp
rep
roll
mull
xchg
cltd
gs
mov
push
push
mov
test
rorb
fmuls
les
or
jmp
dec
push
lock
arpl
les
and
xchg
mov
mov
les
out
shl
dec
dec
icebp
aad
xchg
sub
addr16
mov
sahf
dec
or
sub
out
jb
sbb
adc
rorb
movsl
mov
call
fwait
and
les
adc
jmp
fbld
pop
fs
sub
repz
mov
in
fs
repz
push
sub
push
call
and
dec
pop
sarb
jae
jp
push
xchg
inc
xor
dec
in
je
stos
inc
mov
dec
jle
mov
jecxz
xchg
xor
sti
sub
sbb
vsubpd
lods
add
mov
or
mov
cwtl
hlt
test
mov
xchg
add
pop
cli
xor
movsb
call
pop
cltd
push
arpl
push
mov
rcll
stc
sbb
mov
mov
dec
push
leave
ljmp
cmp
repnz
sbb
pop
jle
sub
add
movsb
es
test
jbe
std
inc
lods
int
je
insb
xor
ljmp
inc
iret
iret
pop
dec
jp
ljmp
mov
dec
mov
std
mov
adc
dec
lods
push
push
push
mov
pusha
jae
xor
push
and
xchg
and
push
repz
lods
cwtl
divl
sbb
pop
sti
mov
test
xchg
sbb
add
mov
stos
test
inc
ja
enter
in
mov
imull
and
cmp
xchg
pop
and
repz
shrb
jns
xor
lock
leave
aam
dec
sbb
adc
jge
xor
sbb
jo
in
pop
sub
sbb
lock
jge
sbb
ljmp
fcompl
es
aam
inc
flds
mov
mov
and
ja
pop
lea
pop
lcall
sbb
addr16
xchg
mov
sub
add
xor
xchg
cmp
cltd
jbe
add
or
and
lret
popa
lds
push
and
mov
int
push
bound
into
loopne
jp
push
in
leave
and
or
rorl
jae
xor
faddl
movsl
pop
mov
jnp
mov
ja
jle
push
adc
enter
push
ja
mov
mov
scas
and
mov
pop
cli
mov
shll
sub
jns
sub
or
push
and
incl
sbb
stos
lock
scas
ds
gs
js
jb
jnp
pop
and
hlt
cmp
push
cmp
jmp
pop
mov
movsl
or
push
sbb
or
enter
push
repnz
xchg
mov
inc
jae
mov
push
lret
jg
daa
das
pop
repz
int3
sub
pop
xor
fucomi
loop
mov
fdivl
and
xchg
jns
and
sarl
and
scas
cmp
sub
or
dec
fcoml
mov
jge
stos
pop
add
sub
and
js
lret
xor
fmuls
out
inc
int3
loop
xor
mov
loop
mov
movb
ja
mov
adc
mov
rorl
orl
pusha
jnp
pop
xchg
hlt
mov
dec
cmp
ljmp
and
dec
pop
leave
sub
cmpb
xchg
fistl
xchg
and
sbb
xchg
inc
dec
gs
add
pop
test
xor
pop
les
in
xor
dec
and
mov
xor
test
mov
imul
jb
std
les
and
loop
xchg
gs
adc
lahf
fisttpll
mov
lahf
rorl
ds
xchg
dec
mov
bound
sbb
or
sub
or
push
dec
arpl
dec
pusha
pop
in
sub
or
mov
cmp
cmp
shlb
scas
add
in
add
or
sbb
xor
mov
cwtl
jnp
jl
stos
push
imulb
ret
test
sub
mov
and
sar
aas
add
and
xlat
std
push
test
jns
stc
das
and
testl
ds
fdivrs
jmp
cmp
push
mov
mov
xchg
dec
xor
and
mull
xchg
bound
ret
push
sub
ret
mov
dec
xchg
pushf
cmp
rcll
or
mov
adc
inc
out
jnp
sub
pop
pop
in
mov
loope
jae
mov
aas
mov
fwait
inc
rorb
xor
sbb
fsubr
pop
test
jae
cwtl
cmc
mov
jg
loope
sbb
repz
jae
cmpsl
outsb
dec
push
rol
pop
les
addl
mov
aaa
sbb
and
jne
je
add
push
test
enter
fdivs
fmul
sti
adc
sbb
test
and
jns
and
fbstp
das
subl
add
cld
stos
cmpb
inc
ljmp
cmpsl
fdivrl
mov
xor
ficoms
in
jecxz
jmp
out
jb
pop
adc
cmpsl
inc
sbb
stos
test
push
mov
sub
call
or
cmpsb
or
xor
fucomp
mov
mov
cs
shll
insb
inc
les
data16
lds
dec
adc
out
popf
das
lods
inc
je
fsubl
mov
or
push
nop
pop
xchg
xchg
push
mov
jns
fidivrl
in
inc
pop
adc
movsl
push
in
push
and
xor
jo
loope
xlat
xor
sub
pushf
push
rorl
mov
dec
js
fldt
add
shr
gs
add
pop
call
bound
loopne
and
pop
icebp
pop
sarl
sbb
loop
int3
cmp
rclb
mov
pop
push
xlat
scas
inc
xchg
aad
jl,pn
xchg
scas
or
fs
push
call
gs
pop
mov
lahf
add
outsl
mov
les
mov
icebp
mov
rclb
insb
rcll
inc
in
das
xchg
hlt
add
test
lds
outsl
inc
jae
mov
sbb
sbb
sub
jnp
insb
and
pop
sub
hlt
and
mov
jb
inc
and
jno
in
fldenv
fnstenv
bound
sub
mov
daa
sub
into
aad
sbb
fldt
or
dec
adc
loopne
sub
in
movsb
mov
das
popf
xor
daa
push
cmpsl
mov
in
inc
pop
fstp
mov
fistps
pop
iret
xchg
xor
mov
fistpl
loopne
pop
sbb
fdivr
sbb
neg
std
dec
std
mov
sti
out
mov
loope
cwtl
insb
xor
dec
lods
sbb
mov
cli
adc
or
xchg
xchg
ret
jae
jnp
enter
mov
xchg
push
das
cs
sbb
jnp
test
insl
fnstcw
mov
mov
lret
add
ret
mov
or
nop
push
adc
mov
cmp
movsb
fistl
pop
lods
add
data16
push
aam
loope
xchg
arpl
inc
imul
pushf
call
aaa
pushf
jns
je
and
dec
inc
stc
arpl
leave
pop
out
lods
rcrl
scas
lret
lret
mov
arpl
jnp
push
mov
adc
lret
mov
fimull
decb
sbb
out
test
jne
pop
add
call
pop
lods
jp
test
push
outsb
sbb
inc
mov
sbb
jne
scas
xchg
push
push
sub
cwtl
adc
lds
loop
decb
aaa
xchg
sbb
push
popa
jmp
mov
leave
stc
sbb
lret
scas
popf
movsb
cltd
test
jg
jnp
push
adc
stc
xchg
call
lea
inc
lods
xchg
inc
pop
mov
lret
push
pop
xor
sbb
pop
or
in
jle
and
ljmp
add
or
aas
out
cmp
shll
xchg
xchg
push
mov
dec
push
arpl
rorl
lods
fs
in
lret
ss
hlt
jle
and
xor
inc
js
cmp
fadd
mov
sub
jnp
dec
push
stos
in
add
out
fnstenv
dec
aas
sub
test
mov
pop
add
and
ret
mov
lahf
pop
mov
jae
inc
inc
cmp
xchg
loop
and
sbb
mov
sub
decl
out
or
jbe
mov
jp
lea
stos
setno
cli
or
ja
cmp
insl
mov
and
sub
pop
gs
cmpsl
xlat
adc
sarl
inc
dec
pop
dec
adc
cmp
out
incl
sub
ja
mov
and
cs
in
jle
clc
cwtl
lods
push
pop
ljmp
outsb
cmp
lods
test
cmp
les
adc
jb
cmp
jp
inc
fbstp
push
inc
dec
in
dec
mov
loope
jmp
les
mov
adc
outsb
in
cmp
jae
rclb
int3
test
push
cmc
jne
out
add
xchg
std
pop
mov
sub
addr16
loop
and
xchg
pop
in
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sbbl
push
push
mov
cmpl
mov
mov
movzbl
jmp
movzwl
je
pushl
call
and
or
xor
add
xor
mov
mov
xor
mov
orl
add
adc
mov
shrd
cmpl
movl
movl
not
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
adc
addl
mov
mov
sub
xor
xor
xor
and
adc
or
cmpl
not
movl
movl
movl
jmp
mov
ja
push
push
call
negl
mov
mov
xor
or
sub
adc
mov
xor
movzwl
add
shr
adcl
mov
mov
mov
sbb
xor
cmpl
movl
mov
jmp
mov
jle
push
pushl
push
push
call
mov
sub
mov
and
movzbl
sub
not
xor
or
xorl
mov
add
mov
not
shl
xorl
mov
shrd
sub
xor
shr
cmpl
movzwl
not
mov
movzwl
jmp
movl
movl
jbe
push
push
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
jae
pushl
push
pushl
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
mov
mov
mov
jmp
movl
not
jg
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jb
pushl
push
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jg
push
pushl
pushl
pushl
push
pushl
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
mov
movl
mov
jmp
movl
movl
jle
push
push
call
dec
sbb
xor
xorl
sub
addl
xor
shld
movl
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
cmp
movl
jne
cmp
movl
je
mov
subl
mov
sbb
push
pop
cmpl
mov
movl
jmp
not
jae
push
pushl
pushl
push
call
mov
or
mov
adcl
xor
xor
xor
mov
and
xor
or
add
movzwl
adc
xor
decl
shl
mov
xor
shr
incl
or
cmpl
mov
movzwl
movl
mov
jmp
movl
movl
jg
pushl
pushl
push
push
pushl
call
sbb
or
xor
sbb
and
adcl
movzbl
add
mov
mov
mov
adcl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jbe
push
push
call
sbbl
xor
neg
add
inc
adc
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
mov
movl
jmp
movl
mov
jae
pushl
pushl
push
pushl
call
or
or
xor
pushl
pop
adc
mov
add
xor
adc
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
movl
jne
adcl
xor
jmp
xor
add
mov
sub
sub
mov
add
movl
mov
mov
and
movl
cmpl
movl
mov
mov
jmp
mov
jg
pushl
call
or
mov
xor
sbb
adc
xor
xor
mov
adc
and
not
and
movl
movl
movl
cmpl
not
mov
jmp
movl
not
ja
pushl
pushl
pushl
push
call
mov
mov
xor
or
sub
adc
movl
sbb
cmpl
mov
mov
movl
mov
jmp
mov
jge
push
pushl
call
mov
mov
add
sub
add
add
movl
movl
xorl
push
movzwl
sbb
movl
or
mov
mov
subl
push
sbbl
push
andl
push
andl
call
mov
mov
push
adcl
push
push
xorl
push
adcl
call
mov
mov
sub
sub
mov
sbb
mov
add
movl
mov
movl
adc
mov
addl
xor
mov
subl
xor
mov
cmpl
mov
mov
movl
jmp
mov
movl
je
push
push
push
pushl
push
push
call
adc
movzwl
and
adc
and
xor
xor
xor
xor
sub
movl
cmpl
mov
movl
movzbl
jmp
movl
mov
jle
pushl
push
push
call
add
sub
xorl
incl
neg
or
movl
cmpl
mov
notl
not
jmp
mov
jg
push
push
push
call
mov
sub
mov
xor
movzwl
sub
sbbl
and
movzbl
sub
movl
cmpl
mov
movl
mov
jmp
movl
jle
push
push
push
push
push
pushl
push
call
adc
xorl
xor
add
adc
sbb
mov
sbb
mov
add
xor
movl
cmpl
movl
movzwl
movl
jmp
mov
movl
jbe
push
pushl
pushl
call
adcl
sbb
xor
add
xor
sbbl
adcl
sub
sub
movl
adc
push
add
movl
mov
mov
add
mov
mov
incl
push
sbbl
push
subl
push
adcl
call
cmpl
movzwl
mov
jmp
not
movzwl
ja
push
call
xor
or
xor
sbb
xor
adcl
mov
mov
xorl
push
push
adcl
push
push
call
cmpl
mov
movl
jmp
mov
movl
jl
pushl
push
call
subl
adcl
xor
mov
mov
sub
and
movzwl
add
or
and
mov
orl
mov
xor
orl
mov
sbbl
xor
mov
xor
sbbl
xor
cmp
jne
cmp
jne
movl
mov
adc
movl
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
push
pushl
pushl
push
call
adc
xor
xor
mov
sbb
xorl
or
movl
xorl
mov
adcl
imul
add
xor
mov
div
movzbl
and
pushl
or
xor
sbbl
and
not
xor
inc
pushl
mov
movzwl
adc
mov
push
notl
pop
xorl
div
mov
andl
sub
add
xorl
imul
adcl
and
xor
pushl
pushl
pushl
pushl
andl
pushl
call
movl
sub
movl
cmpl
movzbl
movl
jmp
movl
jbe
pushl
push
push
pushl
call
xor
sub
sub
add
adcl
mov
xor
or
mov
or
mov
adcl
sub
cmpl
movzbl
mov
movl
jmp
movl
jle
push
pushl
push
push
call
add
and
add
adc
dec
xor
add
add
dec
mov
andl
xor
adcl
xor
movl
div
imul
addl
xor
sbbl
pushl
sbbl
pushl
sbbl
call
sub
movl
cmpl
mov
movl
jmp
mov
ja
pushl
call
sub
and
add
sbbl
mov
sbb
andl
mov
movl
movl
mov
mov
sub
or
mov
mov
mov
adcl
mov
push
push
adcl
xor
xorl
xor
push
push
notl
call
orl
add
mov
movl
adc
mov
sbbl
movl
andl
movl
movl
addl
movl
dec
jne
cmpl
movl
movl
movzwl
jmp
mov
jle
push
pushl
call
sub
sbb
adc
not
sbb
sbb
add
movl
xor
mov
mov
subl
movl
mov
call
cmpl
movl
mov
movzwl
jmp
not
movl
jb
pushl
push
call
adc
xor
mov
add
mov
xor
lea
mov
lea
xor
add
mov
adc
mov
subl
mov
xor
or
adc
mov
mov
cmpl
mov
mov
mov
mov
jmp
mov
jae
pushl
call
xor
xor
mov
sub
xor
orl
xorl
mov
xor
mov
xor
mov
xor
and
xor
shl
subl
shr
or
sbb
mov
cmpl
mov
mov
movl
jmp
mov
mov
jl
push
call
adcl
sbb
adc
subl
dec
subl
mov
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
shrd
shr
mov
add
mov
mov
xorl
xor
addl
xor
or
mov
subl
push
pushl
addl
lea
andl
push
shl
subl
call
lea
push
andl
mov
movl
mov
sbbl
lea
xorl
push
mov
adcl
lea
mov
orl
mov
sbbl
mov
push
sbbl
call
movl
push
orl
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
addl
push
sub
push
adc
movl
movl
mov
adc
movl
mov
movzwl
xor
mov
subl
xor
div
or
imul
cmpl
movl
mov
movl
jmp
movl
mov
jbe
push
call
movl
orl
mov
or
xor
or
adc
and
add
mov
andl
xor
and
xorl
mov
xorl
xor
div
cmpl
mov
mov
mov
jmp
mov
movzwl
jb
push
pushl
push
call
mov
mov
sub
and
mov
mov
sub
xor
xor
xor
add
sub
imul
adc
mov
mov
adc
mov
mov
adc
and
sub
mov
movl
add
movl
movl
or
mov
andl
add
neg
xor
xor
sbbl
imul
mov
or
mov
mov
and
xor
add
mov
or
sub
adc
mov
sbb
movl
sbb
movl
notl
movl
add
movl
and
mov
movzwl
xor
imul
adc
mov
cmpl
movl
movzwl
movl
jmp
mov
jae
push
push
pushl
call
mov
sbb
mov
sub
andl
and
mov
sbb
mov
imul
imul
neg
mov
xorl
and
dec
or
xor
mov
xor
mov
mov
xorl
lea
mov
mov
sbb
mov
movl
movl
cmpl
movl
movl
mov
movl
jmp
mov
mov
jle
pushl
call
xorl
sbb
dec
subl
mov
mov
or
and
adc
movl
cmpl
mov
movzwl
mov
movl
jmp
movzbl
notl
jge
pushl
call
and
xor
movzwl
adc
and
xor
sbb
mov
xor
mov
or
or
add
or
mov
or
add
or
xor
mov
movl
cmpl
movl
mov
movzbl
jmp
movl
je
push
pushl
pushl
push
call
not
mov
mov
adc
sub
mov
mov
and
or
movl
cmpl
movl
notl
not
mov
jmp
mov
mov
jae
pushl
pushl
push
pushl
pushl
pushl
call
neg
dec
movzbl
and
dec
sbbl
sbb
sbb
cmpl
movl
mov
mov
jmp
not
jge
pushl
push
pushl
call
mov
adc
or
xor
xor
xor
mov
xor
mov
add
adcl
movl
mov
add
mov
addl
sub
mov
adcl
lea
sbbl
or
cmpl
movzbl
mov
jmp
movl
jl
push
push
pushl
call
and
adc
add
and
adc
mov
add
mov
and
sub
mov
xor
mov
mov
xor
movl
cmpl
mov
mov
jmp
mov
movzwl
jae
pushl
push
push
push
call
mov
or
mov
orl
orl
sbb
and
adc
movl
mov
add
imul
mov
adc
mov
adcl
imul
orl
xor
xor
or
or
mov
div
cmpl
mov
mov
movl
jmp
movl
movl
jle
pushl
pushl
push
push
pushl
call
adc
or
add
xor
add
neg
xor
xor
and
sub
or
mov
addl
movl
sbb
movl
and
movl
mov
mov
sub
mov
cmpl
mov
movl
jmp
movl
jge
call
adc
or
mov
adc
sbb
sub
mov
adcl
xor
addl
div
imul
cmpl
mov
mov
mov
movl
jmp
movl
movl
jne
pushl
push
push
pushl
push
push
pushl
call
orl
xorl
xor
and
orl
orl
inc
add
mov
subl
xor
movzbl
sbb
mov
xor
mov
adcl
div
add
xor
movzbl
adc
mov
movl
movl
movl
cmpl
mov
mov
jmp
mov
movl
jbe
push
push
pushl
call
add
sbb
movzwl
sbb
adcl
movzwl
sub
or
movl
mov
and
mov
andl
sub
shr
sub
mov
addl
imul
cmpl
movl
movl
movl
jmp
movl
jl
pushl
call
sbbl
xorl
xor
orl
sbb
mov
and
cmpl
movl
movl
jmp
mov
jle
pushl
push
push
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
sub
mov
neg
movl
xor
movl
xor
mov
or
xor
mov
or
movl
sub
dec
mov
movl
mov
xor
add
sub
imul
movl
movl
movl
add
movl
movl
movl
mov
mov
or
add
orl
mov
sub
incl
mov
movl
imul
imul
andl
mov
orl
or
mov
lea
orl
push
xorl
call
sub
mov
mov
imul
add
cmpl
movl
movl
mov
jmp
movl
jb
pushl
push
call
sbb
mov
or
xorl
addl
xor
add
adc
addl
and
mov
sub
mov
sub
or
xor
mov
xorl
div
cmpl
movl
mov
jmp
not
jl
push
push
push
push
call
xor
movzbl
and
mov
and
or
xor
add
add
mov
adc
movl
movl
movl
movl
mov
xor
movl
sbb
movl
cmpl
mov
movl
movl
jmp
mov
jbe
pushl
push
call
sbb
sbb
sub
adc
adc
movl
or
movl
sbb
movl
cmpl
movl
mov
mov
mov
jmp
movl
jge
push
push
call
andl
and
adc
mov
mov
and
sub
mov
or
movl
cmpl
mov
mov
jmp
mov
mov
jle
pushl
call
adc
mov
and
mov
xor
mov
sub
movzwl
and
mov
adc
movl
movl
and
mov
xorl
mov
adc
mov
and
and
sbbl
sub
sub
imul
mov
xor
lea
xor
mov
orl
mov
or
mov
mov
xor
add
add
mov
cmpl
movl
mov
jmp
movl
movl
jbe
push
push
pushl
call
or
sub
adc
xor
dec
movl
or
or
add
lea
or
and
mov
add
sub
add
add
mov
mov
xor
or
sub
xor
movl
mov
sbb
mov
movl
movl
adc
movl
and
mov
orl
mov
subl
mov
addl
xor
orl
xor
adcl
mov
notl
call
add
mov
sub
mov
mov
andl
mov
xor
adcl
xor
mov
orl
call
subl
or
or
adcl
mov
mov
adcl
xor
adcl
xor
sbbl
mov
call
mov
mov
mov
cmpl
movzbl
mov
mov
movl
jmp
movl
jle
push
push
pushl
call
sbbl
notl
xorl
neg
add
mov
xor
orl
xor
andl
mov
movzbl
adc
mov
mov
mov
xor
mov
adcl
mov
subl
mov
sbbl
call
sub
mov
or
mov
orl
or
subl
push
push
subl
push
xorl
push
call
mov
cmp
movl
jne
mov
cmpl
not
movzwl
mov
jmp
movl
ja
call
mov
sbb
sbb
xorl
movzwl
sbb
and
xor
mov
xor
orl
xor
orl
mov
xorl
call
cmpl
mov
movl
jmp
movl
jg
pushl
push
push
call
mov
add
and
or
or
mov
mov
sub
or
xor
mov
sub
mov
mov
adc
mov
xor
andl
xor
mov
subl
call
or
cmpl
movl
movl
jmp
mov
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
pushl
push
pushl
call
adcl
orl
adc
sbbl
orl
addl
notl
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
movzbl
sub
push
mov
or
movl
jne
or
mov
cmpl
notl
mov
mov
jmp
mov
jae
pushl
call
or
adc
xorl
movzbl
or
mov
sbbl
sub
mov
xor
incl
div
xor
or
sub
mov
mov
sub
mov
orl
div
mov
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
cmpl
mov
mov
movl
mov
jmp
movl
movzbl
jne
pushl
push
call
sbb
add
mov
xor
add
sub
and
inc
add
add
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
orl
shld
shl
ret
cmpl
mov
movl
jmp
movl
movl
jge
pushl
push
call
sub
xor
sbbl
movzwl
adc
mov
xor
and
shl
ret
xor
xor
ret
