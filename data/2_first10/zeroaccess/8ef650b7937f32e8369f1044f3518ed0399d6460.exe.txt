push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
stos
push
addl
xor
cmp
cmp
js,pn
je
scas
jo
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
and
xchg
fwait
add
cmp
aad
sbb
gs
sub
loope
leave
notl
inc
clc
mov
test
loope
jp
popl
jb
cmp
mov
das
fdivl
dec
movsl
ds
mov
repz
push
leave
pop
out
loope
push
adc
fs
cmpsb
mov
add
stc
mov
repz
pop
pop
or
push
gs
shrl
int3
push
repnz
arpl
insb
lret
test
ljmp
cld
cmp
lods
jnp
push
shlw
cld
inc
dec
push
fimuls
jle
pusha
adc
test
lea
lds
in
inc
push
in
lret
mov
and
sub
xor
mov
insl
pop
aam
cmp
inc
int3
inc
insl
xchg
imul
adc
in
call
movsb
and
xor
jb
adc
inc
adc
ror
arpl
mov
xor
add
sub
ja
mov
cli
std
inc
inc
aaa
add
mov
out
rclb
mov
mov
jp
idivl
and
dec
pop
xor
xor
sbb
sarl
xorl
mov
xor
orb
mov
aaa
pop
mov
sbbb
dec
in
sub
sbbl
out
xor
inc
cltd
dec
sub
push
cmp
push
pop
out
dec
jl
add
lods
in
jbe
mov
dec
je
xchg
test
testl
cmpsl
outsb
lods
push
adc
push
lds
call
sub
dec
shll
push
xchg
and
inc
dec
nop
out
mov
mov
mov
aas
mov
sahf
sub
sbb
mov
test
out
dec
nop
pop
neg
fwait
insl
add
fidivrs
mov
aam
or
sbb
xor
mov
stc
push
or
fcompl
adcl
inc
push
in
sub
mov
and
dec
test
xor
jg
ficompl
add
lcall
inc
arpl
push
ljmp
lods
adc
adc
shlb
dec
negl
stc
in
inc
sbb
cmpl
fst
dec
je
xchg
test
pop
pop
dec
incb
stos
xchg
call
dec
xor
insl
js
push
mov
or
cmp
jecxz
pop
push
gs
outsb
xlat
adcl
add
xor
pop
jecxz
and
dec
jo
lcall
mov
pushf
repnz
xchg
mov
xchg
leave
jecxz
stc
test
je
mov
push
inc
dec
inc
pop
aad
stos
inc
pop
out
jne
movsl
icebp
sbb
nop
sbb
push
inc
shl
push
mov
pop
push
hlt
out
cmp
jl
out
jbe
jge
cld
mov
sbb
lahf
sbb
adc
xor
pop
jmp
lods
pop
and
inc
mov
mov
test
xor
arpl
mov
mov
daa
pop
adc
pop
daa
adc
cld
bound
sbb
out
imul
fnstsw
xor
test
push
aaa
add
mov
fimuls
aas
pop
hlt
sahf
test
pop
out
xor
or
lock
jo
pusha
cmp
cmpsl
loopne
jmp
stos
insl
stos
pop
sti
aam
push
add
out
rcll
fs
stos
fwait
subb
jno
aas
out
dec
dec
dec
pop
insb
mov
pop
push
out
jbe
rorl
mov
dec
push
outsb
push
scas
in
incb
mov
push
filds
mov
lcall
popa
adc
mov
sub
cld
out
push
push
xor
jb
rcll
xor
imul
lahf
jnp,pt
test
mov
xchg
push
pushf
cmp
fimull
xor
xchg
xchg
ficompl
popf
cmp
or
inc
xchg
sbb
into
mov
loop
add
lret
push
mov
lret
xchg
jl
cmp
pushfw
adc
mov
test
xor
jmp
push
xorl
arpl
jbe
sub
ret
iret
mov
or
mov
lea
jmp
jo
sbb
lret
mov
inc
mov
popf
movsb
push
in
sarl
add
add
cmpsb
int
fwait
mov
inc
fsubl
cmp
rcrb
sahf
cmp
or
fildl
adcb
mov
fsubp
scas
mov
iret
and
insl
pop
xchg
cld
and
jo
inc
into
ret
cmpsb
les
int
xchg
sbb
fmuls
out
sti
xchg
jmp
out
and
ret
insb
test
ds
push
inc
or
inc
addr16
add
aam
dec
cltd
addr16
icebp
jp
mov
rcrl
aaa
or
sub
xorl
sub
mov
jne
sub
into
pop
shl
xchg
stos
outsw
in
mov
movsb
and
rcrl
push
sbb
inc
mull
xor
or
xorl
mov
pop
push
cmp
cltd
xor
cmp
add
inc
adc
fdivrp
pop
dec
loope
push
gs
sbb
and
xor
mov
cmc
push
mov
mov
mov
sub
rclb
test
jmp
adc
aad
arpl
into
test
stos
into
ds
fsubl
sarb
add
lcall
xchg
xchg
cltd
enter
cs
jmp
and
mov
xchg
call
dec
push
std
dec
arpl
inc
flds
lcall
dec
jmp
jo
fwait
adc
or
cmpsl
mov
or
cmovl
iret
popa
clc
xchg
aas
iret
dec
and
fsub
mov
popf
xchg
mov
xor
inc
dec
or
lods
add
idivb
fbld
cltd
mov
stos
test
dec
pop
push
jecxz
sahf
cmp
mov
xor
scas
shrl
filds
dec
aad
adc
das
outsb
test
inc
pop
cmp
jns
int
ror
into
push
xor
mov
out
mov
sub
xchg
hlt
in
xor
pop
in
jg
sahf
movb
sub
and
dec
lahf
lock
inc
mov
pop
pusha
loopne
sahf
lar
bound
xchg
add
movb
and
addr16
outsl
xchg
es
jne
dec
xor
cmp
jb
in
dec
add
inc
ret
sbb
stos
icebp
or
or
add
add
xchg
ja
leave
ficomps
imul
out
xchg
sti
insb
repz
xor
mov
mov
addr16
fmulp
push
sahf
in
mov
mov
fs
mov
rcr
push
inc
cli
arpl
mov
jp
jmp
data16
shrb
adc
jge
and
jecxz
mov
lret
xchg
aam
mov
in
and
jns
popa
adc
xor
shrd
shrb
jmp
ja
or
sbb
pushl
sahf
aaa
out
in
mov
lods
fbstp
pop
mov
cwtl
mov
in
jb
lods
out
xchg
jmp
cmp
mov
inc
lret
fistpl
sub
out
mov
push
pop
cmp
push
xchg
call
aam
add
ret
movsl
mov
popf
inc
out
filds
loop
mov
shrb
nop
lock
jle
sub
inc
sub
xlat
mov
jno
shrb
testb
lea
stc
and
pop
cmc
in
xchg
dec
loop
and
adc
ljmp
scas
cmp
mov
stos
xchg
pop
mov
xor
cmc
mov
push
shlb
inc
push
and
mov
adc
adc
mov
lret
cli
xchg
lods
fsts
call
jnp
ja
arpl
push
shlb
cld
cmc
jle
ret
pop
mov
int
call
and
push
xor
jecxz
push
mov
pop
inc
fsubrp
jae
std
xchg
adc
lahf
mov
bound
xchg
repz
icebp
orl
or
mov
push
fsubl
lea
leave
stos
dec
lcall
inc
mov
jns
data16
hlt
push
push
fnsave
rcrl
ret
or
xchg
ds
inc
xor
xor
jno
jge
daa
and
cld
mov
cmp
adc
cmpsb
push
ss
add
int3
jnp
ljmp
addr16
adc
lods
push
jne
hlt
dec
sub
cmpsl
push
lods
push
enter
xor
leave
pop
or
js
sub
pop
xor
add
into
clc
xchg
mov
pop
or
fsubs
stos
sbb
jno
inc
push
xor
ljmp
arpl
cmp
in
repz
mov
mov
sar
jl
mov
fistl
jb
push
sbb
adc
imulb
mov
add
repz
sti
addb
enter
mov
push
and
test
int3
lahf
mov
add
fwait
test
popf
dec
stos
pusha
shrb
mov
pop
dec
out
xchg
imul
lea
sub
pop
cmp
xor
out
and
adc
xor
leave
ja
movsl
mov
inc
mov
pop
aaa
cmp
imul
mov
inc
pusha
flds
push
mov
sbb
addb
cmp
iret
loop
jns
sahf
mov
sub
jge
push
hlt
mov
xor
fdivrp
pop
mov
xchg
stos
sub
pushf
push
or
scas
cmc
inc
fwait
pop
rcrb
adc
fbstp
call
cmp
fidivl
pop
add
rclb
enter
pop
push
stc
aas
adc
inc
jge
xor
dec
push
fidivrl
je
cmp
ljmp
cmp
adc
in
rcll
xchg
inc
pop
pop
outsb
inc
aam
loop
movsl
adcl
dec
jmp
mov
sbb
lock
xlat
sub
iret
and
test
mov
sbb
add
push
movsb
adc
js
fbstp
or
mov
lcall
and
jp
jp
mov
mov
mov
mov
push
cld
mov
push
jns
test
mov
xchg
les
cmp
decl
xchg
xchg
mov
loop
inc
push
les
xchg
or
push
adc
or
popa
int3
lret
xlat
mov
loop
xor
pop
shr
insb
pop
cmp
xlat
xchg
sub
stos
out
add
lods
xor
and
js
test
sbb
jo
dec
test
sbb
adc
mov
xchg
adc
push
add
into
inc
sub
rcl
enter
int3
subb
loope
insl
pop
aam
popa
sti
sbbl
ss
pop
std
pop
lret
cmp
xchg
and
pushf
sahf
inc
jnp
xor
sub
add
push
mov
pop
out
push
xchg
pop
push
or
daa
xor
mov
adc
sbb
cmc
dec
cmp
jl
inc
lock
mov
cmp
aas
mov
cmp
les
inc
rcl
cmp
fistpl
and
adc
lea
je
xchg
sub
flds
cmp
pop
leave
jb
cwtl
cmpsl
es
clc
call
sub
mov
xchg
sbb
xor
xchg
mov
or
adc
outsb
mov
scas
sbb
cwtl
iret
stc
inc
rcrl
out
push
xchg
jecxz
je
shrb
aas
lret
aam
into
and
sbb
lock
xor
ss
add
cmp
nop
push
out
repz
mov
adc
stc
outsl
mov
fsubrs
fstpt
xchg
insb
or
std
les
inc
sbb
push
outsl
iret
mov
ret
sti
push
jae
push
cmp
xchg
repz
out
jo
daa
push
cmpl
adc
in
lods
jbe
jmp
rcrb
cmp
adcl
insb
leave
cmp
xchg
pusha
es
mov
cli
stos
div
xor
or
leave
cltd
insl
sbb
and
mov
or
test
add
mov
jae
scas
jp
out
out
mov
xorl
inc
or
es
xlat
fisttpl
or
sub
fldcw
int3
jne
rcrb
vpshufhw
pop
clc
int3
cs
sub
orl
es
jp
lock
xchg
dec
jo
adc
je
mov
sub
jne
icebp
ret
pusha
adc
cmpsb
jne
add
xor
xlat
xchg
test
or
mov
stos
in
cmc
jle
add
fcmovne
inc
sub
ss
rol
pop
sbb
out
cmp
push
adc
popf
sbb
test
lds
fcompl
push
out
stos
daa
dec
pusha
cmp
ret
fldt
add
dec
fwait
mov
push
pop
seto
mov
sbbb
adc
xor
out
and
push
bound
pop
and
adc
ljmp
inc
push
movsl
scas
fstps
iret
add
fdivrp
outsb
pop
dec
aaa
cmp
cwtl
bound
mov
pop
jo
jmp
dec
pop
addl
lahf
icebp
push
mov
out
push
xlat
sbbl
hlt
ja
push
lret
addr16
sub
pop
in
xchg
int3
test
bound
pop
fbld
cmp
movsb
sbb
mov
test
xor
sbb
sub
outsb
loope
sub
aas
xchg
aaa
xor
enter
pop
and
in
faddl
hlt
sub
addr16
mov
sub
inc
add
sahf
out
sbbb
out
hlt
ljmp
inc
out
sahf
jp
clc
mov
es
imul
xchg
pushf
sbb
fsts
icebp
cmp
sti
or
xor
mov
xchg
inc
ret
inc
sub
sbb
and
sti
pop
mov
and
adc
mov
lret
sbb
inc
icebp
addb
add
sbbl
jae
jnp
divb
dec
mov
pop
cmp
or
xor
xor
adc
pop
inc
out
in
dec
push
stos
shrl
mov
xor
shrb
mov
ret
cmp
adc
sti
push
jle
and
or
lea
aaa
cs
xchg
andl
inc
iret
lret
or
sub
std
jae
mov
pop
push
aad
fcmovu
sub
js
int3
cld
outsl
cmpsb
notb
jg
test
add
in
into
jl
gs
mov
push
or
in
cmp
and
call
cmc
push
inc
ja
aaa
arpl
or
mov
mov
into
mov
mov
popf
mulb
pop
ret
xor
lret
adc
test
push
pop
cmp
xchg
pop
rclb
dec
popa
xchg
jne
int
sarb
mov
or
or
flds
jns
lret
mov
test
movsb
call
xchg
mov
push
fcmovbe
adc
pop
dec
inc
pop
dec
outsl
cltd
mov
aas
lea
pop
or
xor
scas
dec
inc
outsl
jae
lret
scas
cmp
lret
das
lods
loope
mov
aam
mov
hlt
pusha
cwtl
lret
test
inc
or
shlb
lcall
lods
mov
aam
xchg
jl
std
dec
ss
sbb
jl
xlat
add
mov
dec
mov
arpl
xchg
push
jns
les
in
xchg
shll
push
mov
and
data16
xor
push
leave
xchg
mov
rcrl
xor
iret
push
push
outsb
adc
sbb
mov
cmp
arpl
aaa
xchg
out
xor
jl
lret
dec
ja
scas
popf
jnp
cmpsb
xchg
out
into
push
sti
cld
push
cs
push
fsub
mov
rorl
fiadds
or
mov
or
aas
inc
mov
and
or
mov
nop
mov
shl
lret
in
stos
inc
add
fiadds
cwtl
daa
add
iret
popf
loop
negl
mov
testl
fnstsw
jb
das
adc
add
nop
stos
scas
xchg
mov
push
mov
lea
jnp
out
fwait
mov
sub
pop
ss
insl
andb
inc
sub
bound
inc
sbbb
sub
mov
dec
insb
mov
fiadds
test
or
call
stos
pop
pop
insb
or
push
mov
pop
ja
sub
inc
aad
sbb
test
pop
mov
int3
out
adc
in
cmp
fists
inc
sbb
and
dec
shlb
subl
js
sub
je
add
clc
sub
xor
pop
shrl
dec
and
mov
test
movsl
xchg
repnz
sahf
xchg
les
mov
xchg
popa
cmp
sub
test
ja
pop
nop
adc
dec
in
cli
sbb
cmp
sbb
xchg
jle
or
adc
call
js
jmp
push
and
mov
cli
loop
jmp
pop
push
fimull
push
cmp
das
jecxz
jns
lods
mov
xor
test
push
and
sbb
out
cmp
jg
mov
stc
add
int3
in
popa
sbb
xor
pop
push
flds
call
jno
in
les
cmp
mov
dec
arpl
lret
and
fisttpl
daa
loope
imul
pushf
inc
orl
fcmovu
mov
xchg
rcl
adc
add
pop
pop
mov
fcmovbe
mov
lea
addr16
sbb
dec
adc
mov
in
lahf
rorb
out
adc
mov
push
mov
add
cmpsb
mov
xchg
or
push
cmp
fdivs
jmp
and
mov
dec
imul
and
call
cltd
add
movsb
es
out
dec
aad
dec
xor
dec
pushf
mov
loope
add
lret
push
sbb
and
and
pop
insb
and
and
lcall
lahf
clc
shlb
and
lea
popa
pop
jno
call
mov
dec
push
lret
xchg
jns
pop
scas
les
adc
and
and
rolb
in
pop
jno
xchg
xchg
add
push
andb
pop
inc
test
cmp
sbb
pushf
inc
and
mov
out
ss
clc
js
xchg
and
mov
mov
out
in
in
fisubs
xchg
in
pop
loopne
int
or
xchg
repnz
or
sub
fsubrs
dec
pop
push
xchg
jecxz
out
mov
not
mov
mov
push
and
outsb
jg
jg
jno
jne
inc
icebp
repnz
push
push
aam
push
xchg
rcrl
rclb
push
mov
push
hlt
jecxz
adc
loope
or
fmul
js
arpl
lods
icebp
leave
leave
jp
jb
notl
iret
mov
rcll
aas
adc
ret
jns
xlat
jae
jbe
xchg
in
out
xchg
sbb
add
mov
mov
mov
mov
jmp
hlt
outsb
dec
in
negb
mov
out
mov
sub
rorl
adc
mov
ljmp
call
sbb
xchg
lods
adc
xor
clc
inc
inc
sbb
mov
mov
test
lcall
gs
das
push
mov
mov
adc
mov
sti
pop
imul
or
jnp
fmull
stos
jl
ret
add
inc
jl
out
push
lcall
fmuls
in
mov
push
inc
xchg
cltd
pop
dec
int3
mov
popf
mov
pop
addr16
out
push
sbbl
inc
cmp
aad
mov
pop
push
and
leave
dec
ret
repz
mov
push
cmp
aaa
gs
xor
addr16
dec
pop
jle
jmp
dec
outsb
inc
xor
rolb
or
rcrl
das
arpl
popa
mul
and
sub
ret
stos
pop
test
rolb
sbb
jns
xchg
call
mov
sbb
sub
jmp
mov
ja
ficoms
pusha
inc
mov
jg
push
insl
scas
sub
mov
or
mov
dec
test
mov
pop
ret
cmp
jb
lret
mov
js
out
pop
or
sub
ds
cwtl
loop
and
test
stos
and
xlat
xchg
into
or
shlb
cwtl
insl
or
pop
sahf
lret
push
les
movsb
mov
pop
push
sahf
jae
mov
fisubrs
cs
inc
shll
fnstcw
mov
ret
rol
push
add
cmp
cltd
outsb
out
or
mov
pusha
xorb
add
dec
lret
jp
dec
pop
sbb
adc
mov
jg
mov
stc
adc
sti
sub
aas
rorb
xorb
and
or
or
sub
in
dec
and
bnd
popf
mov
dec
in
fisubrl
cmpsb
push
mov
repnz
popa
pop
mov
lock
push
mov
scas
inc
sahf
andb
scas
shl
jae
mov
repz
pop
mov
mov
sbb
movsb
xchg
call
outsb
movsl
mov
pop
push
add
das
daa
gs
and
pop
stos
les
mov
cmp
pop
sub
pop
push
pop
lahf
aas
jle
push
mov
repnz
js
mov
stc
fbstp
or
xor
xor
push
nop
mov
out
cmp
jle
add
sbb
push
jbe
pop
dec
or
aas
dec
loop
mov
mov
xchg
jge
sbb
inc
lods
add
lea
inc
iret
and
notl
je
dec
clc
shrb
pushf
adc
mov
xchg
fimull
pusha
jge
stos
jo
rcll
std
xchg
push
pop
or
mov
fimuls
xor
data16
mov
pop
sub
jmp
out
mov
fistps
mov
xchg
mov
icebp
std
push
or
imull
sub
cmp
sbb
jbe
ret
xor
nop
inc
sub
and
sbb
lods
cmp
push
loope
nop
lahf
cs
xorl
mov
mul
cmpsb
push
mov
roll
enter
jne
test
mov
and
adc
out
sbb
add
mov
mov
xchg
lds
inc
inc
xlat
adc
adc
jl
outsb
out
mov
mov
fs
add
popf
push
xchg
in
leave
inc
jb
ffreep
dec
sarl
push
sub
test
mov
fst
jmp
ret
lahf
xchg
push
sarl
adc
daa
push
repnz
and
iret
mov
mov
mov
fadds
lods
sti
lds
lret
sbb
loop
pop
xor
jae
int
adc
mov
ret
cmp
push
insl
xlat
mov
stos
aaa
fldl
aad
ficomps
sbb
mov
rorb
adc
lret
cmp
fidivrs
pop
fucom
cltd
and
jno
repnz
mov
xlat
and
jo
stc
push
adcb
ret
dec
test
ja
popa
jae
sbb
fildl
jg
push
add
xor
insl
add
mov
fdivrs
and
les
inc
adc
pop
cmpsl
inc
add
add
in
push
popf
insb
dec
cltd
sub
pusha
das
jmp
cmp
and
or
fldenv
cmp
scas
push
lds
push
ret
aaa
and
roll
mov
cmp
push
sbb
in
aam
fprem
pop
mov
loopne
jge
cld
es
jne
or
dec
cs
cmp
cli
jmp
pop
inc
mov
push
lret
cwtl
xchg
iret
in
add
jnp
shl
rol
mov
dec
push
sbb
add
inc
or
sbb
dec
mov
clc
sub
negl
insl
xlat
cli
cmp
xor
jmp
mov
jle
and
sbb
or
shrl
inc
mov
arpl
jl
pop
dec
sti
mov
lock
rcll
add
push
popf
das
xor
mov
mov
jbe
mov
aaa
pop
dec
xchg
dec
idiv
mov
pushf
sub
aas
popa
pop
arpl
dec
out
cmp
inc
mov
fcmovb
xlat
shrb
mov
push
pop
in
movsl
push
not
cmpsl
sub
mov
sub
add
sbb
push
dec
popf
fcmovnbe
jp
dec
inc
push
xchg
push
test
hlt
or
jb
dec
mov
test
fisttpll
adc
add
ss
aam
jbe
lods
mov
add
outsl
cmp
sbb
dec
cs
hlt
cli
in
jne
sub
or
lock
inc
loopne
xchg
scas
lods
xchg
adc
into
out
incl
negb
jle
into
sub
jge
or
fstpt
ja
dec
mov
aam
xchg
cmp
in
out
cmp
inc
call
mov
pop
insl
mov
call
dec
loop
bound
dec
mov
xchg
cmpsb
jg
cmp
scas
pop
insl
jge
test
and
lock
cmp
insl
pop
or
and
ds
inc
add
or
mov
mov
insb
pop
and
and
dec
jno
xor
pop
pop
adc
ljmp
lret
scas
adc
clts
dec
sbb
ss
test
aam
dec
movsl
push
and
mov
add
fsubrl
mov
push
mov
testl
inc
outsl
data16
popa
adc
hlt
popa
push
test
out
xchg
dec
xchg
jnp
mov
test
ficoml
xlat
in
ficoml
aam
jmp
lods
fistpl
jmp
incl
cmpsl
roll
in
inc
xchg
mov
add
mov
cmp
sub
sbb
push
pusha
aad
adc
cwtl
add
out
cmp
je
fwait
das
mov
mov
test
fs
adc
repnz
lret
cmp
cmpsb
jno
js
cli
out
xchg
cmp
pop
enter
push
movsl
notb
mov
cmp
fisubs
jg
imul
bound
outsl
addr16
test
mov
push
shll
cmp
aam
rclb
cmpsl
aaa
push
pop
sar
xor
dec
fsubl
lea
cwtl
pushl
add
push
push
aad
mov
outsb
sub
xchg
shl
and
xchg
pusha
mov
mov
ss
xchg
bound
bnd
mov
inc
and
jmp
mov
jg
out
mov
and
adc
mov
add
inc
xor
stos
and
mov
aaa
arpl
out
inc
push
jb
and
jae
add
push
inc
gs
inc
cmp
add
loop
lea
push
ss
pop
les
cmpb
and
or
push
dec
ss
mov
mov
aas
xor
les
push
lahf
and
notl
push
in
push
imul
cmp
test
cli
fsubs
stos
mov
mov
mov
lods
xor
aas
mov
aam
insb
fistpll
outsb
fcmovu
adc
xor
scas
sub
aad
imul
test
shl
xchg
dec
rolb
cmpsb
jbe
adc
in
jno
imul
or
arpl
xchg
sub
mov
icebp
aaa
sbb
and
pusha
out
fs
fisubrl
dec
dec
mov
xor
movsb
mov
sbb
mov
les
aam
adc
fcoms
add
inc
mov
adc
xor
or
push
mov
rcr
stos
or
inc
sub
stc
push
pop
pop
enter
add
mov
outsb
or
mov
dec
fstpl
movsl
leave
or
xchg
stos
xorb
xchg
test
mov
lret
add
jae
push
dec
jo
xor
jns
mov
sbb
xchg
mov
imul
in
sti
in
jp
lock
out
mov
pop
pop
ret
jbe
clc
scas
jge
lods
aam
pusha
dec
iret
mov
or
mov
sbb
and
loope
shlb
or
mov
out
pop
or
sub
or
inc
or
cmp
ret
xor
aad
rcrl
scas
pop
adc
add
loope
lods
mov
fwait
repnz
or
aad
jg
call
cmpsb
hlt
mov
mov
cmp
in
xor
addr16
js
mov
mov
xrelease
test
pop
adc
dec
inc
in
test
scas
push
adc
mov
lret
mov
mov
sbb
imul
push
fmuls
lret
in
push
outsb
js
aad
mov
test
popf
sti
pop
inc
jp
pushf
mov
add
cld
cmp
mov
loopne
pop
mov
mov
cwtl
sbb
loope
dec
add
fisttps
sub
or
fcoms
sbb
sub
or
outsl
sub
mov
out
insl
insb
cmp
mov
aam
pop
hlt
and
xlat
shlb
cltd
mov
inc
rorb
sub
idiv
imul
pushf
add
roll
out
inc
addr16
xor
mov
mov
cmpsb
pusha
fs
jo
lret
dec
xchg
ret
into
jne
xchg
pop
lds
and
mov
daa
jmp
jmp
scas
stos
sbb
mov
push
push
xor
or
cmp
inc
jb
addb
rclb
loope
out
lret
jp
inc
ljmp
filds
stos
pop
imul
repz
mov
insl
out
int
dec
cmp
mov
mov
inc
pop
pop
insl
insb
adc
and
shlb
movsb
dec
fsubrs
dec
gs
mov
mov
sbb
in
hlt
or
xchg
mov
imulb
pop
int
sbb
sub
inc
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
loop
xchg
dec
pop
addl
adc
mov
scas
test
inc
movsl
leave
dec
out
mov
sub
lret
call
pushf
inc
pop
jbe
repz
les
mov
sub
mov
rcrl
adc
mov
mov
loopne
test
mov
xor
dec
push
pusha
gs
subl
sub
cmpsl
xchg
xchg
or
xor
cmp
or
mov
mov
lahf
cmp
outsb
mov
movsl
sub
mov
sub
fwait
cmp
cltd
pushaw
sub
imul
xchg
cmp
stos
std
pop
and
ret
iret
int
dec
arpl
dec
add
dec
push
mov
pop
xor
push
ret
test
inc
test
stc
jl
dec
movsl
dec
fadds
mov
sbb
arpl
add
divb
les
push
idivb
cmp
sub
inc
dec
or
xchg
roll
push
ret
xchg
sti
lds
pop
stc
imul
sub
and
sub
mov
push
push
lods
repz
inc
icebp
movb
add
xchg
cld
sbb
or
pop
cwtl
into
cmpsl
int3
ja
mov
push
les
test
sub
jo
mov
mov
scas
xlat
mov
dec
push
je
inc
mov
cli
pop
lock
xchg
pop
and
cwtl
cmpsb
stos
or
popf
out
adc
ret
dec
test
push
decl
cmp
or
or
ret
arpl
mov
push
pop
iret
push
fsubl
rcr
cmp
loope
jbe
or
cmc
mov
outsb
je
fwait
dec
add
xor
dec
mov
pop
adc
int
ds
aam
rol
mov
sub
pop
dec
gs
mov
jb
fldt
test
es
inc
outsb
pusha
mov
sub
nop
subb
cld
iret
mov
mov
jns
pop
push
xor
mov
push
push
pop
adc
add
xchg
jge
dec
inc
push
sahf
and
pusha
ljmp
cmpsl
sub
fdivl
nop
mov
sub
test
or
iret
loopne
fcmove
fadds
jbe
xor
outsb
push
mov
inc
loop
jo
pop
out
jbe
js
bound
std
xor
orb
push
dec
int
jecxz
sub
fidivs
stos
aas
repz
ja
into
lret
jge
mov
cmp
sub
gs
addr16
push
fdiv
test
xor
inc
push
leave
insl
add
mov
cmc
loope
lahf
int3
stos
sbb
mov
incl
sti
iret
lahf
shlb
cs
repnz
jnp
fs
jl
adc
jle
idivl
add
insb
dec
mov
push
push
lahf
into
dec
outsb
jg
or
test
stos
and
xlat
add
jae
xchg
cwtl
push
jmp
pushf
sarb
dec
mov
fucomp
out
mov
push
xchg
dec
inc
and
add
enter
shll
mov
js
inc
pop
not
loope
inc
cmpsl
xchg
push
xor
call
dec
sbb
mov
repnz
xchg
adc
dec
pop
sub
xor
aad
repnz
test
sub
dec
lcall
enter
sub
push
fs
loope
jno
enter
add
cs
xorb
dec
jo
jns
xlat
xlat
add
cmp
int3
push
addb
push
sub
mov
outsl
xchg
mov
inc
cmc
or
xor
xlat
sub
or
dec
arpl
lea
lods
test
xchg
mov
test
lret
test
pop
dec
jmp
pop
mov
mov
push
push
imul
lret
or
into
cmc
mov
or
mov
xorb
pusha
mov
repz
push
lds
sbb
add
xchg
dec
mov
mov
push
or
popf
popf
jbe
movsl
adcb
and
or
pop
cld
xchg
outsl
add
xor
pop
movsl
aam
adc
or
ror
fisubrs
sbb
fucomi
inc
jno
fwait
in
in
xchg
dec
roll
push
cmpsl
or
daa
fdivl
dec
jl
mov
xchg
jg
sahf
xor
imul
or
or
dec
pushf
and
les
dec
mov
add
cmp
mov
test
dec
outsb
mov
dec
in
pop
jmp
out
fs
stos
mov
leave
pop
into
jae
repz
loop
shlb
shlb
jp
out
add
imul
shl
stos
push
out
fstpl
test
lea
xor
fmuls
inc
add
ljmp
insl
dec
sbb
sarb
stc
pusha
dec
jg
adcl
dec
pop
or
sbb
scas
or
lea
add
aam
adc
or
sbb
loopne
stos
leave
sbb
loop
xchg
jge
notl
cs
outsb
xor
pop
stc
cmp
insb
mov
and
out
inc
adc
rorl
cmc
jbe
lahf
lods
mov
fidivrs
jp
cmp
outsl
xchg
cwtl
jecxz
cltd
imul
jle
inc
pop
inc
pop
popf
inc
pushf
mov
scas
stc
clc
sub
adc
mov
aam
bound
mov
xchg
jmp
xor
imul
lret
add
and
jbe
push
lods
aaa
sub
push
adc
mov
push
outsb
pop
mov
jno
add
sahf
push
fwait
mov
setb
int
mov
lcall
jae
mov
adc
mov
cld
popa
xor
and
lds
xchg
aas
das
xchg
daa
cmp
mov
movsl
jae
sbb
inc
mov
push
cli
test
inc
das
add
xor
lahf
inc
leave
sbb
gs
pusha
std
mov
inc
mov
mov
stos
stos
rorl
cltd
out
fdivrs
sbb
add
scas
mov
mov
shrl
mov
cmc
cmp
loope
jle
xchg
sub
add
outsb
jne
lds
add
jecxz
arpl
mov
loop
out
out
mov
pop
sbb
sbb
ror
inc
call
pop
mov
nop
fs
insb
arpl
and
les
xchg
data16
jne
lea
pop
cli
rorb
xchg
cmp
sub
fldt
xor
gs
ss
imul
cmp
movsl
sti
je
pop
and
push
movsl
and
mov
cmp
test
in
mov
scas
dec
pop
sub
arpl
test
and
aad
mov
inc
add
xor
jo
and
xchg
inc
pop
push
in
push
das
mov
ljmp
xor
mov
xchg
dec
push
mov
imul
lea
insb
int
jle
sub
pop
mov
adc
scas
inc
and
imul
scas
lods
push
shrl
gs
fs
sub
rol
in
and
dec
daa
xor
jns
xor
mov
push
add
xchg
fsubrl
mov
push
sub
mov
clc
fs
cmp
movsl
add
clc
ss
push
inc
adcl
mov
popf
xchg
shr
popa
addr16
into
adc
mov
dec
add
mov
sub
and
mov
adc
test
add
into
push
push
ja
sbb
adc
add
jecxz
mov
fidivs
aas
aad
mov
xchg
mov
incb
cli
jno
rcr
inc
push
imul
cwtl
xlat
inc
cmp
cmpsl
inc
sbb
rorb
sbb
ret
fs
sub
pop
pop
into
mov
add
outsl
cmp
dec
data16
test
push
dec
mov
ljmp
insl
int3
sbb
adc
testl
adc
sub
push
aad
mov
enter
rcrl
mov
sub
xchg
mov
sub
es
loopne
add
mov
mov
mov
pop
leave
jbe
ds
push
fmull
leave
pop
push
xlat
rorl
sbb
or
pop
xor
into
popf
inc
lret
push
sbb
sbb
push
pop
aam
cmpsb
push
sub
js
popf
mov
pop
cmpl
inc
sbb
mov
dec
pop
jns
dec
popa
mov
mov
pop
icebp
arpl
sbb
ds
mov
xchg
daa
cmpsl
add
stos
push
movsl
add
xor
mov
dec
xchg
divl
or
jecxz
stc
fidivl
pop
test
jns
and
xchg
push
fildl
inc
iret
mov
or
movsb
mov
ss
sub
pop
ljmp
and
sub
jo
adc
fmul
pop
xchg
fiadds
test
cmp
aaa
into
sahf
adc
push
xor
adc
pop
enter
mov
cmp
pop
xchg
imul
or
mov
adc
cld
movsb
stos
into
ja
pop
jmp
bound
arpl
mov
aaa
sub
lock
push
out
enter
pushf
std
or
mov
fisubl
scas
jae
dec
mov
mov
fcompl
lods
xchg
leave
mov
dec
loop
dec
test
push
fwait
inc
jp
dec
fdivrl
add
xor
push
mov
dec
in
adcl
adc
mov
aad
or
mov
std
sub
sbb
in
push
xor
inc
jecxz
xchg
icebp
loop
sti
mov
sbb
loope
ret
add
cmpb
mov
stc
aas
pop
in
mov
mov
or
ret
push
jg
pusha
fprem1
fdivl
lret
sub
cs
out
push
fdivs
ds
and
or
ljmp
fstl
jle
icebp
popf
cwtl
mov
adc
mov
jg
in
or
outsl
outsb
sub
adc
jns
mov
dec
aas
or
fwait
popa
xor
mulps
sub
stos
popf
and
mov
loope
cli
fstpl
test
movsl
jnp,pn
mov
xlat
sahf
shr
mov
loopne
out
imul
imul
hlt
ret
cli
fldl
std
jge
in
pushw
jnp
or
shlb
sub
lea
les
pop
scas
cmpsb
inc
sti
shll
leave
cmp
push
add
std
fmuls
fists
inc
mov
sub
xor
cmp
jle
xor
adc
xlat
fs
in
mov
mov
pop
pop
jo
inc
je
out
aad
add
into
pop
mov
mul
imul
sbb
sbb
add
inc
jle
xor
jg
arpl
xchg
mov
sbb
pop
add
add
ror
in
js
xchg
push
jmp
mov
mov
mov
xchg
stc
add
call
or
lcall
nop
cmp
xchg
shlb
dec
push
cli
lret
inc
inc
push
sbb
mov
loopne
ja
jle
pop
rclb
cmp
dec
pop
jge
jae
jg
cli
fistps
jne
cld
push
movb
sti
fistps
imull
outsb
loope
arpl
sbb
pop
and
jbe
fwait
loop
mov
sbb
lret
mov
pop
aas
sbb
inc
jecxz
xchg
shll
inc
inc
inc
add
push
mov
ds
aaa
lret
shrl
xor
cmpsb
into
mov
cmp
out
jbe
mov
xchg
mov
xchg
cli
add
js
cmp
mov
or
js
inc
mov
movsb
test
div
xchg
jno
inc
adc
jnp
cwtl
rcll
xor
mov
stos
cld
pusha
test
fldt
and
push
push
pop
mov
sarl
imulb
push
es
add
mov
xchg
sub
xchg
cmp
les
clc
jne
hlt
jl
in
faddl
gs
outsl
adc
cmc
lods
ss
xor
push
mov
cmp
cmpsl
xchg
adc
push
decb
mov
addl
jo
jg
pop
or
lods
jnp
cld
scas
inc
subl
enter
out
in
mov
lea
cmpsb
call
idivl
das
sub
movsl
push
outsb
or
jnp
xchg
stc
fsubl
cs
inc
repnz
stos
push
clc
out
mov
aaa
lcall
xchg
inc
pop
and
pop
xor
inc
push
jg
daa
lods
lahf
pusha
pop
cmp
add
ss
push
mov
or
fdivrp
decb
stos
push
stos
call
jae
push
xor
xchg
cltd
shrl
jb
outsb
push
fisttpll
adc
add
pop
inc
jmp
xlat
fists
ljmp
dec
shll
jg
and
loop
jl
mov
out
es
outsb
mov
cmpsl
cmc
sti
int
lret
jae
scas
inc
es
pop
pushf
ret
mov
push
int3
pop
loop
push
fwait
jl
xlat
es
xlat
xchg
test
pop
mov
rcll
push
push
ja
mov
pop
cmp
mov
and
dec
xchg
mov
mov
sub
mov
arpl
xor
addr16
jno
push
jmp
add
mov
movsl
cmp
ss
mov
cmp
insl
das
shll
movsl
stos
mov
pop
scas
test
xchg
jbe
faddl
mov
out
orl
lods
mov
jae
xchg
cmp
cmp
jo
cmp
push
data16
jle
jecxz
mov
mov
xchg
jb
das
jle
adc
punpcklbw
sub
shlb
dec
into
jp
sbb
cli
adc
movsb
add
scas
ja
int
xchg
in
push
mov
std
nop
xchg
das
sub
enter
inc
xlat
xchg
fwait
lds
push
test
mov
es
rcr
int
pusha
jns
mov
mov
outsb
adc
scas
inc
scas
test
dec
jo
xchg
dec
inc
mov
mov
pop
or
cmp
cmp
pop
mov
out
push
jl
repz
dec
push
cmp
xchg
scas
adcb
cmp
es
scas
shll
lcall
pop
movsb
jb
jbe
jbe
jno
or
inc
andl
jp
mov
cmp
jb
cmpsl
dec
fildl
fs
sbb
rorb
lds
jmp
les
mov
aad
sbb
call
out
dec
out
cltd
pushf
or
mov
hlt
mov
outsl
pop
cli
mov
scas
aaa
jb
xchg
mov
test
lcall
xchg
out
call
lret
push
lds
in
jge
mov
sbb
push
adc
xchg
push
mov
jne
xchg
mov
sbb
sbb
orb
sub
inc
pop
mov
repz
jns
push
mov
outsl
loop
jb
mov
sub
pusha
xchg
jo
xlat
push
jmp
inc
add
cmp
mov
test
pop
mov
in
cmpsb
scas
cmp
mov
sarb
movsb
or
sub
jnp
mov
ret
adc
add
sarb
sub
out
or
fcoml
push
pop
push
or
int3
leave
les
std
mov
rcrl
cld
movsl
adc
icebp
cmpsl
push
mov
jbe
push
les
icebp
xchg
pop
cs
test
jg
xchg
and
hlt
into
into
push
hlt
call
pop
in
cmp
pop
push
push
in
pusha
adcl
icebp
mov
jae
xchg
pop
sbb
mov
inc
popa
mov
push
mov
movsb
inc
out
cmp
lcall
cld
mov
in
out
fstpt
jmp
rcl
dec
dec
and
sbb
mov
imulb
and
pop
js
int3
xor
sbb
and
pop
jge
hlt
or
dec
mov
rcl
cmp
repz
bound
ljmp
mov
out
add
out
fnstenv
test
cld
push
repnz
mov
lcall
imul
push
jno
dec
call
pushf
jmp
xchg
adc
and
or
mov
movsl
add
rclb
lea
or
aad
imul
mov
iret
cwtl
into
inc
mov
pusha
out
mov
sahf
sar
cwtl
add
push
es
pop
adc
sub
jnp
push
popf
addb
out
out
cmp
outsl
aaa
and
push
dec
in
pop
xchg
jo
push
idivb
push
adcl
mov
and
aas
and
call
dec
sub
add
xor
xor
cmpb
pop
mov
jge
inc
dec
push
pop
sub
push
cmp
test
negb
cmp
mov
adc
and
pop
cli
ss
aas
inc
xchg
adc
scas
push
js
jae
iret
out
adcl
pop
cmpsb
sbb
ljmp
add
cmpsl
sub
data16
sub
jg
aad
mov
in
mov
insb
or
push
mov
adc
pop
mov
xor
jge
mov
cs
scas
push
outsl
lea
add
xor
fldt
adc
fwait
je
and
rorl
lods
xor
repz
test
lcall
dec
test
jbe
gs
lret
jae
push
lcall
cmp
push
or
mov
sbb
data16
icebp
outsb
gs
pop
cmp
mov
lea
sub
jb
incb
std
jmp
mov
inc
ja
andb
ss
iret
sub
cmp
insb
lods
inc
or
leave
mov
aas
adc
ds
decl
dec
sar
int
xchg
mov
push
fcoml
mov
sbb
daa
repnz
ret
ret
cwtl
mov
hlt
test
data16
clc
dec
jmp
jle
inc
loop
mov
inc
aad
mov
mov
jbe
shr
mov
outsb
lods
xchg
mov
js
cwtl
imul
and
or
sbb
mov
scas
push
pusha
add
aam
lods
fldcw
sbb
lods
xchg
sub
jecxz
jns
enter
arpl
shl
push
mov
inc
aam
xor
scas
jbe
pop
scas
arpl
shlb
cmp
out
stc
movsl
test
jb
pushf
cmp
rcrb
pop
idivl
inc
aaa
mov
jp
adc
test
sti
dec
test
cld
lds
fistpll
aaa
jg
sub
in
repnz
add
jge
test
cmpsb
jbe
mov
dec
xor
shl
jp
stc
pop
mov
test
cli
mov
in
jbe
jle
in
popa
jg
adc
xchg
pop
out
sar
lret
movsl
xor
scas
mov
in
add
jno
ds
mov
xor
arpl
dec
mov
pop
sub
pop
popa
in
jle
push
test
mov
and
dec
sub
inc
mov
and
movsb
cmp
out
iret
mov
out
mov
outsb
xchg
cmc
bound
stos
out
cmpsb
fbld
into
ret
test
pusha
sahf
sbb
xchg
gs
test
test
test
fcompl
xlat
and
loop
push
pop
ja
sbb
inc
in
pop
pushl
jo
mov
into
jg
and
jge
dec
sub
jge
pop
pop
jecxz
push
adc
pop
jae
lods
xor
cmpsb
gs
and
and
outsl
aas
push
sub
and
sub
fwait
sbb
or
cmpsb
in
cwtl
aad
lea
push
fxch
sahf
add
dec
pop
iret
dec
pushl
int3
addr16
mov
out
dec
mov
push
mov
xchg
or
orb
push
mov
push
pop
cmp
xchg
loopne
test
sub
pop
add
mov
cmp
cwtl
mov
aam
mov
rorb
lea
lea
arpl
dec
jl
ret
sub
stos
cmp
xor
test
into
jno
jecxz
adcb
loopne
jle
and
or
mov
clc
addr16
xor
dec
pop
sahf
sbb
xor
aam
ficompl
mov
sub
js
aas
mov
dec
bound
aad
bound
div
outsb
xor
mov
es
fcoms
pop
stos
xor
add
mov
adc
in
or
shl
loop
jge
in
mov
fcomip
mul
jo
jne
test
repz
xor
push
test
mov
ljmp
adc
push
iret
lock
js
jb
jg
jle
lds
mov
push
sbb
jmp
mov
das
adc
lret
test
mov
adc
jg
lock
test
pop
xor
jmp
scas
scas
adc
add
or
mov
pop
cld
pop
outsl
sbb
mov
add
ja
sbb
sub
add
jg
dec
and
mov
xor
into
jl
mov
mov
mov
mov
jl
push
xchg
fistps
xchg
pushf
scas
sub
xchg
fdivs
push
mov
xor
sub
pop
int
out
clc
std
jbe
cmp
jg,pt
sarl
test
xor
rcrb
aad
cmpsb
or
sbb
outsb
add
sbb
aaa
out
add
clc
pop
and
stc
push
fisttpll
fldpi
cmp
inc
push
dec
xchg
movsl
mov
cmc
in
cmp
sub
cmp
gs
pop
das
add
std
aas
leave
dec
push
push
orb
lret
jns
xchg
sahf
sbb
sbb
cmc
popf
insl
dec
loope
mov
sahf
leave
mov
sbb
sub
push
insl
movsb
and
jge
mov
and
shrb
xlat
cli
cmp
repz
loopne
test
mov
push
daa
lret
insl
leave
int3
rclb
rorl
or
cld
ret
cmp
mov
pop
fcmovnu
cmp
in
loope
xchg
inc
sub
cld
and
mov
lahf
pop
adcl
fisttpl
dec
sbb
dec
mov
cmpb
subb
jbe
pop
arpl
sub
dec
mov
gs
mov
push
push
add
xor
dec
mov
cltd
decb
mov
jae
xchg
data16
fwait
pop
and
test
rcl
sub
push
sarb
or
insl
shr
or
mov
push
pop
iret
jb
adc
push
mull
jl
lea
out
xor
lret
mov
sub
imul
out
adc
push
aad
rep
cmp
movsb
adc
popf
test
dec
les
or
cld
shl
dec
pusha
or
aaa
ja
ret
push
loope
pop
clc
xchg
dec
jne
jp
cwtl
xor
adc
xchg
jmp
mov
push
mov
insl
add
xor
scas
loop
imul
push
ret
pop
insl
dec
push
or
push
push
adc
cmpsb
or
stos
arpl
es
mov
jo
addr16
push
hlt
pop
add
jbe
add
icebp
fwait
data16
jl
out
vmwrite
cmp
testl
cmp
push
movsb
add
sbb
push
mov
mov
fs
push
or
call
push
sar
and
jbe
out
xor
jge
ja
icebp
jno
mov
lret
push
dec
popa
pushw
xor
mov
into
repnz
cltd
stc
mov
push
mov
insb
sbb
lods
hlt
xor
stc
mov
xor
inc
inc
pushf
jae
or
pop
mov
sbb
push
pop
bound
push
int3
mov
insb
pop
mov
add
push
repz
push
cld
adc
xchg
imul
out
aad
and
lds
arpl
cmpsl
stos
pop
sbb
pop
mov
cmp
movsb
and
sti
fwait
dec
out
das
iret
popa
add
aas
pop
add
xor
icebp
and
xor
cmp
into
mov
aas
push
xchg
sub
and
or
leave
popa
mov
inc
mov
leave
sbb
jmp
ljmp
or
sbb
pop
push
loopne
mov
jl
into
and
mov
mov
in
xchg
test
jge
inc
clc
test
inc
fnstsw
mov
or
mov
jle
inc
ss
cs
or
inc
dec
in
lea
subl
sub
xor
jnp
fisttps
shrb
iret
call
or
push
mov
lea
push
ret
dec
aaa
cld
and
sbb
into
lahf
js
sub
sub
xor
movl
xchg
pop
aam
sbb
sbb
mov
inc
xchg
xor
frstor
pop
subb
sarb
insb
xorl
cmp
dec
mov
into
pop
imul
mov
sub
in
out
idivb
jb
mov
and
dec
clc
nop
cmpsl
mov
sub
ljmp
jo
add
les
repnz
sub
fbld
xor
aaa
mov
fnsave
adc
or
or
loope
pop
rcll
fiadds
ja
sti
scas
shl
inc
cmpl
aad
enter
adc
push
loop
push
inc
adc
loope
mov
ficompl
loop
pop
sub
cltd
clts
and
pop
mov
sti
xacquire
mov
sbbl
dec
rcrb
cltd
dec
ret
outsb
cld
je
sahf
data16
inc
add
ret
mov
loop
jecxz
and
divb
push
idivl
mov
mov
in
out
mov
dec
mov
call
push
jmp
frstor
ret
mov
fildll
xchg
fwait
mov
mov
mov
push
pop
or
andb
push
mov
lds
push
jns
shlb
pusha
jae
jnp
movsb
jp
scas
push
dec
je
mov
xor
lock
push
loopne
pop
push
out
ljmp
ds
sub
jmp
xchg
hlt
scas
mov
xchg
add
or
out
ret
mov
inc
push
pop
jb
push
inc
adc
lods
cmc
jle
lret
in
push
in
mov
mov
pop
push
jo
mov
sub
aas
xchg
mov
adc
outsb
ljmp
inc
mov
mov
dec
stc
xchg
mov
or
insb
hlt
dec
loope
out
movsb
je
jb
xor
jns
ljmp
jae
pusha
sub
push
xchg
loopne
cmp
dec
sbb
dec
scas
push
mov
add
das
push
rcl
or
pushf
cmp
jae
cmpsb
push
imul
dec
mov
dec
lahf
lds
test
xor
push
jb,pt
test
test
icebp
clc
iret
pop
xor
dec
ret
iret
dec
cmp
jg
fstps
mov
or
aam
xlat
enter
or
adc
lods
xchg
dec
push
push
ficoms
xchg
das
pop
inc
rorb
sub
je
enter
pop
fstpl
sub
out
mov
dec
in
push
xor
pop
mov
mov
ss
repz
daa
push
inc
jl
imul
inc
aam
add
sub
lret
mov
fiadds
popl
xchg
adc
xor
es
stc
mov
or
pop
aam
jl
push
pop
int
into
outsb
test
sbb
push
and
and
pop
xlat
aam
cmp
mov
or
add
pop
xor
dec
mov
and
movsl
jb
lock
sub
sbb
rcrl
lods
xchg
pop
mov
outsl
test
addr16
clc
mov
loopne
push
mov
push
adc
sbb
adc
nop
dec
pushf
aad
add
mov
and
and
shll
sub
lods
rol
or
outsl
cmp
xor
in
lret
mov
test
mov
orl
xorl
shr
cmp
cltd
or
push
mov
mov
dec
push
xor
or
mov
mov
ds
cmp
daa
mov
cld
in
mov
les
mov
stc
cmpsb
into
adc
mov
cli
dec
in
scas
dec
and
fidivrl
inc
cmp
cli
cmp
sbb
idivb
or
mov
ja
mov
and
fildl
das
int3
enter
sub
adc
adc
mov
mov
pop
std
pop
cmp
pop
and
mov
popf
dec
mov
sbb
cld
mov
pop
xor
imul
jge
loop
sub
or
inc
push
das
and
ljmp
push
inc
int
xorl
cltd
test
push
lahf
test
jo
mov
mov
mov
rcrb
mov
repz
mov
mov
sbb
jle
sbb
sarl
into
mov
movsl
sub
cmp
xchg
sub
cmp
mov
imul
adc
or
pushf
pusha
sub
pop
lods
ljmp
mov
or
adc
cmc
pavgb
into
jmp
aad
or
data16
nop
dec
dec
add
addr16
mov
popa
mov
aas
outsl
addr16
lret
call
fidivl
inc
xchg
push
jecxz
arpl
es
hlt
cmpl
cs
int
or
adc
cmp
mov
stos
jb
mov
cmp
or
xchg
fsub
sbb
sbb
std
jmp
push
std
xchg
pop
mov
mov
jne
stos
cmc
ret
lods
sub
mov
sbb
adc
fistpl
pop
mov
jbe
jbe
rorb
mov
lods
incl
cmpl
xor
ja
jbe
xchg
xchg
orl
cli
and
test
mov
pop
imul
repnz
fistpll
pop
lcall
lcall
mov
push
pop
push
pop
out
scas
ficomps
lods
neg
xor
mov
insb
leave
or
sahf
xor
jmp
gs
push
cwtl
mov
sub
add
into
xor
outsb
mov
sbb
mov
sub
mov
mov
push
mov
imul
cmpsl
lods
je
adc
fcmovbe
mov
xor
jl
imul
daa
insb
mov
xchg
jle
xor
and
inc
rorb
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
push
cli
lret
cmp
addl
or
sub
xchg
std
gs
cmp
js
push
lods
push
insl
or
loope
ljmp
pop
jl
mov
adc
mov
fiadds
es
pop
mov
test
mov
mov
test
imul
sub
xchg
inc
and
ss
jbe
into
aam
mov
lods
xlat
lods
jge
lret
jo
out
in
push
mov
inc
lcall
pop
and
cmp
movsl
dec
imul
mov
das
cmp
or
mov
dec
cmc
sub
jnp
mov
repz
icebp
stos
adc
push
inc
stc
js
test
xchg
pop
hlt
dec
jp
dec
push
addr16
insb
das
adc
cmp
jmp
adc
mov
std
test
inc
jno
and
aad
sbb
push
jle
push
lods
push
cmp
jmp
add
pop
mov
xchg
ret
and
jp
std
push
add
mov
bound
lcall
or
movsb
add
int
cmpsl
jg
or
xchg
sbb
imul
ljmp
mov
lcall
loopne
andb
push
xchg
pop
pusha
xchg
sbb
test
aas
cld
sti
jae
into
mov
mov
xchg
dec
sar
aam
jnp
jb
idivb
sub
inc
jns
sbb
jg
es
mov
sub
xchg
push
mov
mov
bound
stos
int3
sbb
inc
pop
lds
lea
push
daa
sbb
lret
lret
dec
repnz
pop
fistps
rolb
xor
in
cmp
push
fucomi
subb
xchg
fwait
mov
inc
jp
jge
out
adc
push
cmp
jno
adc
adc
mov
jnp
pop
lock
das
push
pop
xchg
loop
mov
enter
stc
outsb
test
xor
mov
scas
jns
mov
sbb
pusha
loop
ljmp
mov
ret
push
das
mov
xor
jnp
icebp
or
sbb
imul
out
xorb
rcl
xor
ljmp
push
andb
inc
xlat
sub
push
adcl
pop
xchg
mov
inc
cmc
int
test
xchg
push
and
mov
add
xchg
mov
cmpsb
mov
inc
ljmp
les
dec
xor
test
int
cmc
stos
nop
mov
movsb
adcb
mov
into
xor
dec
jge
cld
pop
cmp
push
jge
jl
mov
mov
sbb
mov
mov
dec
sbb
lock
push
sar
mov
and
stos
cmp
cmp
cmpsb
sbb
mov
sub
and
clc
int
pop
push
les
push
iret
and
add
lea
and
pop
xorl
mov
shrb
nop
dec
outsb
push
arpl
cmpsb
data16
push
sbb
adc
add
data16
mov
push
aaa
dec
adc
in
loope
in
pop
mov
push
cltd
repnz
xchg
pop
cmp
adc
pop
dec
push
sub
ja
push
and
adc
sbb
sbb
outsl
and
out
daa
in
sbb
adc
pop
int
push
xor
or
fmulp
lock
fdivp
in
jno
fistl
jge
cmpsb
push
jne
and
dec
dec
inc
xchg
dec
push
sub
rcl
mov
fldl
jmp
xchg
fistpl
enter
push
cmpsl
push
and
dec
fnstcw
sub
data16
inc
jbe
push
fstl
inc
cmpsb
cmp
or
out
pop
or
sti
xchg
sub
jg
pop
cmp
or
sbb
cwtl
enter
pop
xchg
icebp
push
mov
ja
in
fldcw
cmpsl
insl
xor
popa
sbb
dec
popf
sub
ss
cs
ljmp
aam
js
mov
test
xlat
add
pop
jo
or
bsf
sbb
arpl
xchg
mov
or
adc
insl
call
pop
cmp
sbb
pop
jg
mov
jno
xlat
pop
mov
push
mov
loop
push
inc
xchg
pop
mov
clc
call
bound
push
mov
cmp
sti
push
or
test
dec
jae
sarl
xchg
pop
movsl
out
icebp
cmpsb
push
fwait
sub
daa
shrl
cld
idiv
cmpsl
jbe
mov
pop
add
stos
data16
dec
loop
dec
pop
data16
dec
std
xchg
cmpsb
mov
in
mov
jnp
gs
xor
outsb
pop
fbstp
in
add
in
jnp
mov
jecxz
sbb
mov
cmp
mov
xchg
sti
or
leave
data16
ds
adc
sbb
es
gs
test
pusha
cmpsl
adc
cmp
psrlq
repz
jae
lds
jp
out
jnp
dec
jbe
test
or
jg
pushf
jne
fdiv
loopne
popf
push
lock
cs
mov
mov
imul
mov
cmp
pushf
outsl
dec
mov
add
xchg
adc
int
add
mov
cmp
lock
pop
xchg
shlb
ja
or
dec
jo
scas
scas
lret
test
cmp
call
mov
pop
cmpsl
xchg
mov
aad
loopne
dec
aam
add
fs
pop
sbb
std
push
cmp
pop
sbb
ss
notb
cmp
iret
xor
arpl
xor
fstp
xor
or
pop
lods
lods
movsl
add
pop
or
dec
sub
mov
cmp
jne
mov
fildll
or
mov
leave
out
movsb
nop
pop
mov
aas
hlt
add
sub
mov
inc
xchg
jne
mov
iret
pusha
pop
or
stc
dec
into
mov
repnz
fidivs
pop
js
int3
lahf
push
or
xchg
clc
outsl
aaa
mov
ljmp
pop
push
lcall
jg
sbb
sub
dec
jo
dec
cli
leave
add
jae
imul
add
add
out
adc
insl
stos
mov
ja
xor
lret
inc
loope,pn
xor
test
pand
out
dec
enter
addr16
xor
mov
xor
outsl
xor
mov
mov
add
hlt
xchg
lods
mov
push
ja
push
push
xor
xor
adc
xchg
pop
mov
adc
aam
cmpsb
pop
mov
dec
inc
mov
adcb
sub
xchg
sti
ret
std
test
mov
in
mov
fisubl
mov
mov
fistl
jle
mov
mov
add
outsl
pop
fcoml
pushf
push
out
stc
pop
pop
xchg
sub
cwtl
push
cmp
test
aad
sub
jb
push
inc
mov
test
mov
mov
in
adc
dec
dec
iret
test
mov
push
dec
xor
inc
jecxz
lea
in
mov
add
sub
mov
xchg
mov
mov
int
adcl
jge
aad
cmpsb
push
shll
sahf
adcl
and
or
xor
sbb
sbb
stos
sub
cli
movsb
movsb
push
pop
adc
pushf
es
add
xor
mov
push
data16
pop
js
lret
push
push
dec
stc
in
repz
pop
cmpsb
cli
inc
addr16
pop
test
cmp
xchg
neg
xor
cld
xchg
dec
into
in
dec
imul
pop
dec
jecxz
popa
stc
int
or
mov
scas
xor
mov
push
add
mov
xor
xchg
pop
push
ret
sub
pop
orb
rol
xchg
stc
testb
cmpsb
iret
xlat
es
push
int
cs
in
inc
aam
push
lret
sbb
mov
xchg
push
sahf
call
sbb
cld
lods
push
pop
out
ljmp
or
mov
lea
dec
addl
fistpl
cs
test
adc
cmp
mov
aam
outsl
test
mov
orl
insl
or
fstpl
andl
cmp
pop
imul
clc
mov
iret
mov
insb
jbe
xchg
xor
jecxz
lret
xchg
pop
int3
jo
mov
stos
js
loopne
adc
cs
inc
std
sub
dec
andb
mov
push
lret
xlat
cmp
out
dec
push
cmc
push
cwtl
xor
adcb
pop
out
fimuls
xor
mov
cmpsb
inc
das
jno
pop
ret
fistps
xor
fimuls
and
sub
mov
fimuls
jg
dec
jg
cmpsl
dec
sbb
mov
mov
lock
inc
push
mov
cmp
push
mov
sub
mov
loope
ljmp
or
insl
xor
cmp
pop
cs
mov
add
cmp
repz
cmp
aam
xor
negb
or
es
test
push
pop
jl
jns
cmpsl
cmp
cld
and
mov
stos
sbbb
pop
jg
out
addl
icebp
sbb
stc
clc
icebp
in
int
adc
je
je
jle
add
mov
jp
adc
adcb
add
jno
cmp
ret
add
and
out
ja
adc
adc
add
fnstsw
pop
jns
add
mov
or
xor
clc
imul
enter
sbb
push
cmp
scas
or
clc
fsubl
sbb
sbb
arpl
loop
lret
xchg
es
test
pop
cmp
gs
ds
pop
adc
mov
push
sbb
mov
ret
daa
out
push
sbb
outsb
fnstsw
xor
lret
sub
cs
xchg
pop
adc
mov
out
xor
pushf
mov
pop
idiv
popa
sarl
xchg
cmp
out
insl
fsts
xchg
lret
test
into
mov
js
cltd
xor
sbb
pop
jp
xchg
push
add
sub
xchg
mov
sub
mov
xchg
in
sbb
lret
dec
aaa
sarl
movsl
mov
insb
adc
push
fcoms
ljmp
test
int3
in
cwtl
mov
and
add
fcomps
cmp
cmp
movsl
push
in
sbb
daa
pop
negb
mov
in
sub
clc
insl
aad
xchg
mov
push
or
scas
popa
fistl
int
fbld
and
icebp
mov
jne
je
or
adc
jle
and
push
dec
std
not
jne
jo
lret
imul
cli
ss
push
mov
pop
das
lret
mov
mov
xchg
mov
mulb
inc
loope
insb
mov
push
mov
shll
sub
movsl
and
cli
add
xchg
mov
loope
fmull
inc
push
xchg
mov
xor
in
out
jno
mov
arpl
or
pop
in
lret
call
lea
jp
cli
arpl
cmpsl
std
ret
adcb
icebp
test
or
jb
divl
adc
rclb
movsb
in
int3
push
in
mov
and
xchg
test
jno
inc
in
dec
rolb
jb
popf
and
pop
xchg
std
cmp
sub
adc
flds
push
int3
ljmp
outsl
inc
sub
insl
dec
sub
or
aam
out
mov
push
insb
paddsb
cld
out
sahf
nop
cmp
je
data16
outsb
push
pop
sti
push
sub
pop
push
fstpl
ja
das
pushf
aam
lret
push
cmp
aaa
lds
mov
jmp
incl
jge
idivl
push
imul
jmp
testb
lahf
mov
push
pop
outsl
pop
inc
inc
adc
out
jo
xor
jl
pmullw
insb
lret
dec
dec
and
in
insl
cmp
mov
xchg
je
jge
sub
mov
das
inc
pop
sub
cli
icebp
cmp
inc
cld
adc
ljmp
ffree
outsb
sahf
out
xchg
pop
sbb
push
mov
mov
sti
jo
sbb
and
movsl
dec
push
jl
xchg
mov
aad
gs
jle
inc
je
popa
cmc
daa
xchg
loop
lret
into
movsl
ljmp
leave
mov
leave
lods
je
cmc
ja
xorl
mov
out
std
aam
pop
xchg
pop
and
repz
aam
xor
push
dec
mov
mov
int
fimuls
pushf
mov
mov
pop
loop
clc
enter
clc
mov
ljmp
mov
jp
cs
loope
lods
pop
sbb
or
ds
mov
mov
pusha
pop
nop
dec
pop
add
jne
add
xchg
mov
push
cmp
mov
push
jp
pusha
test
insl
push
mov
inc
sti
inc
cli
adc
inc
or
cmp
adc
je
cmpl
pushf
scas
loopne
aad
cmc
mov
inc
mov
adcl
mov
in
mov
inc
dec
mov
fdivrp
push
pushf
sbb
push
sbbl
pop
lcall
adcb
push
scas
mov
cli
addl
mov
jae
fimuls
ret
cmpsb
jnp
int
roll
adc
test
mov
inc
pop
ljmp
es
fidivl
mov
inc
mov
sbb
in
mov
out
mov
fidivrs
leave
jp
fisubrs
adc
mov
je
xlat
xchg
dec
pop
testl
cmc
movsl
sbb
insl
and
add
rcrl
add
and
ds
add
inc
add
lods
andb
mov
jbe
cmpl
in
pop
es
adc
cmp
ja
cmpsl
loopne
pop
jge
divb
mov
fstl
lods
leave
enter
shll
ds
adc
jnp
jnp
cmp
js
mov
push
xlat
dec
stc
es
or
dec
iret
out
cli
sahf
test
push
imul
xchg
mov
std
test
dec
mov
mov
int3
jp
test
in
ficoml
xchg
sub
mov
dec
mov
in
test
cld
shll
ja
add
or
fwait
daa
test
adc
cltd
ss
push
push
sub
mov
outsb
movsl
xchg
adc
jbe
fildl
fcmovb
movsb
and
fdivrp
xchg
sbb
jnp
jmp
adc
or
push
and
xchg
or
addr16
dec
popa
imul
test
fistpll
ja
repnz
mov
aad
cmp
insl
or
in
mov
das
pushf
push
push
or
push
xlat
pop
imulb
lock
jbe
in
sbb
imul
mov
inc
adc
cwtl
cmpsl
add
cmp
loopne
ss
lock
inc
or
fs
or
mov
mov
jle
test
je
jb
rorb
cmc
adc
mov
fldt
aas
aaa
pushf
mov
or
jno
lods
mov
mul
in
in
outsl
int
test
mov
xchg
adc
push
cltd
push
sub
push
dec
repnz
jno,pn
mov
test
jbe
sbb
in
sbb
and
lret
mov
or
xchg
xchg
mov
ss
mov
sbb
xor
hlt
fcoms
jns
and
jno
xchg
jne
push
rcrl
pop
decb
stos
sbbb
ss
addb
or
std
ds
lret
adc
mov
mov
insb
cmc
adcl
and
frstor
movsb
data16
lret
orb
enter
call
dec
cmpsb
ljmp
dec
jmp
sub
loopne
push
xchg
call
ljmp
mov
or
or
ret
cli
mov
or
mov
inc
jg
inc
xchg
xchg
test
scas
adc
push
inc
mov
cmpsl
insl
xchg
xchg
test
les
mov
sbb
cmp
sahf
or
mov
adc
in
cmp
testl
ret
cmpsb
pusha
nop
ss
int
ljmp
loopne
mov
jmp
loope
mov
sbb
mov
dec
mov
and
cmp
pop
xor
data16
or
push
int3
es
cltd
sbb
in
pop
xor
mov
mov
jle
push
xchg
inc
mov
xor
stc
xorl
out
or
add
cli
aad
in
sbb
jae
mov
xor
cmp
push
mov
mov
mov
pushf
jmp
push
int3
fildl
lcall
cmp
fwait
lea
adc
xchg
into
repz
mov
je
sti
mov
or
and
sub
dec
call
jecxz
lret
sub
cmp
mov
cmp
mov
scas
adc
xchg
jne
into
jge
pop
push
jns
mov
jp
xadd
fwait
movsl
jmp
imul
enter
push
ljmp
aad
movsl
mov
and
inc
repnz
cmp
cld
adc
sub
stos
xor
push
repz
leave
cmp
push
mov
loop
inc
mov
stos
popf
outsl
je
aaa
mov
dec
cmp
enter
inc
cmpsb
orb
fs
movsb
mov
jmp
pop
and
cmp
lahf
pop
jmp
mov
mov
pushf
mov
pop
andl
xchg
adc
sti
mov
lods
ret
pop
and
popa
xchg
ljmp
jnp
xchg
cmp
add
sbb
xor
push
cmp
mov
mul
jmp
arpl
jmp
pop
push
jl
mov
ds
jg
outsb
fdivl
mov
xchg
fwait
mov
push
add
mov
in
or
inc
nop
pop
cwtl
adc
addr16
xchg
cmp
sbb
bound
push
xchg
push
mov
or
lea
test
shr
aam
push
popf
mov
sbb
cmc
push
push
cmp
jmp
push
lcall
call
or
xor
mov
inc
shll
dec
cld
int3
lds
out
jecxz
shlb
loopne
or
pop
bnd
push
mov
jmp
pop
lds
pop
mov
jmp
ljmp
xor
push
into
add
scas
push
adcl
test
outsb
fidivrs
ror
std
xorb
loope
cmp
push
cmpsl
mov
pusha
or
push
lret
movsl
scas
sbb
dec
push
jno
loopne
fiaddl
sahf
cli
scas
cli
jg
sub
das
push
pop
mov
icebp
mulb
inc
push
in
adc
add
xor
mov
fwait
aaa
lret
ret
rol
sbb
inc
testl
mov
and
pop
cmp
pop
fstps
xor
push
xor
pop
ja
inc
xor
mov
jbe
xor
cmpl
roll
inc
lea
int3
cld
gs
loope
xchg
mov
aam
inc
lods
mov
pop
mov
sbb
dec
push
bound
inc
lock
pusha
test
or
cmpsb
cmp
mov
arpl
andb
jge
mov
cmp
cmp
push
cmpl
mul
cmp
pop
xchg
pop
push
pop
test
xchg
ficoms
mov
ss
mov
ret
or
sub
sti
clc
outsb
fstl
push
jge
cmp
les
ds
or
stos
lret
mov
lea
dec
jp
bswap
add
aaa
inc
fs
mov
pop
mov
xchg
cmc
xor
into
out
jmp
mov
xor
insb
psubusb
jle
and
int3
fisttpl
test
hlt
insl
out
leave
xor
mov
cltd
push
stc
add
inc
std
aas
test
xchg
xorb
insl
ja
fidivrl
sub
cmp
test
in
add
mov
mov
push
jle
pop
daa
dec
fisttps
cmpsb
lcall
pop
ljmp
inc
xor
repnz
cmp
test
into
decb
addr16
inc
outsb
in
sub
dec
push
sbb
sub
adc
or
mov
addr16
cmpsl
dec
pop
add
stos
je
imul
jnp
xchg
mov
js
cmp
ljmp
imul
add
cmp
je
jbe
out
cmc
out
or
adc
shll
or
pop
sub
cmp
mov
sahf
xor
mov
push
push
outsl
ljmp
out
push
and
xchg
in
cmc
mov
push
in
cli
mov
enter
add
push
insb
dec
xor
cmc
scas
inc
cmp
es
xchg
int3
sahf
mov
pop
pop
fdivr
mov
adc
add
loopne
movsb
lods
xchg
push
sbb
fsubrl
push
fwait
mov
adc
popa
xor
lock
sti
sub
push
cmp
adc
stos
cmp
js
inc
adc
pushf
pop
push
mov
bound
lds
push
pop
lret
dec
iret
push
mov
jl
imul
pop
dec
jge
data16
mov
inc
ret
enter
scas
hlt
sarl
sbb
fisubs
mov
jl
out
push
cmpb
xchg
and
push
jne
push
and
lock
icebp
mov
or
push
pushf
scas
add
push
cmp
addr16
mov
inc
test
mov
add
mov
adc
fildl
ljmp
cmp
ret
adc
sub
xchg
adc
lret
repz
add
js
push
cmp
pop
cmp
in
sub
stos
adc
and
sti
loopne
cmp
pop
dec
iret
ja
lret
pop
add
xlat
xor
sub
ds
mov
xor
pop
inc
bound
xor
push
cwtl
das
fsubs
into
mov
mov
dec
pop
into
test
aam
push
aas
adc
mov
mov
in
adc
jg
jnp
imul
inc
jmp
push
enter
out
adc
daa
call
ret
mov
fstpl
push
pop
fdivrs
imul
arpl
push
jmp
mov
lock
dec
push
mov
add
jg
dec
mov
imul
cmc
cmp
mov
shl
fistps
inc
dec
pop
fnstenv
data16
push
inc
push
or
jns
push
je
incl
es
lods
mov
mov
mov
stos
outsl
incb
xchg
mov
sbb
cmpsb
xchg
fsubl
arpl
test
pop
leave
xchg
outsl
fldl
push
popa
xor
jg
add
sti
subb
out
add
mov
push
xchg
cmpsb
xchg
mov
pop
jecxz
adc
int3
fwait
movsl
mov
test
cld
stc
push
cmp
shll
jbe
mov
mov
mov
loop
lahf
inc
pop
rcll
jbe
ficoml
lea
xor
lea
lret
test
insb
inc
pop
cmp
outsb
dec
lcall
inc
jne
shrb
and
dec
cltd
mov
sbb
jae
sub
leave
lret
sbb
dec
cmp
add
dec
ljmp
cli
xor
mov
push
mov
gs
adc
shl
xchg
xchg
adc
mov
adc
jp
out
daa
push
mov
iret
adc
xor
sbb
mov
ja
outsl
scas
pop
mov
pop
or
insb
test
mov
xchg
stc
dec
int
cmpsb
frstor
cmp
cli
repz
nop
dec
mov
int3
mov
cmp
mov
neg
shll
popl
mov
pop
sbb
jbe
adc
mov
and
cmp
out
insl
rolb
inc
pop
sub
cmp
int
outsl
dec
cmp
iret
jns
out
fidivs
xor
fisubs
out
mov
add
push
inc
test
popf
or
xchg
lds
popa
or
push
or
aam
movsb
dec
pop
into
fdivrs
test
cmc
insb
sub
nop
mov
inc
mov
sub
xor
test
fdiv
cmp
dec
outsb
dec
js
dec
lods
cmp
repz
shrl
sahf
aas
inc
scas
fldenv
arpl
adc
jle
sub
mov
fldcw
add
jns
pushf
fisttpll
stos
pop
inc
shll
or
xchg
jle
inc
mov
shlb
cmp
fildll
add
cwtl
mov
lret
mov
xchg
jecxz
rcl
movsl
adc
aas
adcb
inc
dec
jle
sub
push
add
add
or
or
lcall
cmp
push
push
xchg
rolb
jns
pop
mov
loop
and
cld
xchg
bound
cmpb
and
ds
xor
data16
xor
outsl
mov
and
push
enter
pop
push
sbb
pop
jmp
nop
out
pop
inc
cmp
xchg
lods
sahf
inc
stos
testl
scas
mov
addr16
test
dec
jo
push
sub
sub
xchg
iretw
or
popa
outsb
and
out
dec
jne
into
push
pushf
xchg
outsl
jbe
xorb
dec
mov
xlat
movsl
inc
out
mov
fmull
jae
cltd
mov
pop
aaa
sbb
data16
dec
ljmp
add
popa
sub
fwait
test
jae
outsb
cmpb
mov
inc
xorl
adc
mov
pop
dec
cwtl
sub
dec
jno
dec
pop
adc
inc
ficoml
inc
dec
fmuls
movsl
or
loope
jmp
scas
arpl
xor
sbb
jbe
jl
imul
fsubrs
les
fisttpll
jp
cmp
dec
push
adcb
ja
test
add
add
xchg
inc
aas
xor
inc
data16
mov
add
pop
sub
mov
andl
sbb
mov
sub
pop
add
xchg
mov
xor
stos
aam
jecxz
movb
pushf
xchg
jle
shl
adc
jnp
js
mov
adc
out
jecxz
popa
mov
imul
jp
cmp
lds
into
lret
lahf
insb
jbe
cmp
or
pop
pop
ja
call
jp
aam
or
mov
xor
int
gs
repnz
in
shll
cmpsb
mov
jae
sub
aas
fdivl
dec
pusha
in
xchg
cmc
pop
sahf
outsl
push
test
rcrb
lcall
int3
shl
dec
data16
in
inc
add
cmp
inc
mov
adc
jb
std
xchg
mov
sub
imul
inc
out
mov
jp
mov
mov
bound
popl
pop
lods
dec
aaa
sbbl
enter
jnp
aaa
not
ja
mov
push
aaa
or
aam
inc
mov
leave
mov
add
xchg
mov
sbb
mov
jnp
xchg
jb
ret
add
pop
add
imul
sti
xchg
out
dec
movsb
pop
sbb
out
sub
addr16
cmp
cmp
clc
in
iret
inc
aaa
ficoms
xchg
mov
dec
dec
sub
ja
jmp
int
mov
push
inc
fistl
shl
inc
lods
mov
imul
dec
repnz
jb
jg
push
and
out
adc
loopne
xchg
dec
shlb
cs
in
add
sub
xor
or
popa
std
test
sahf
push
push
xlat
sub
mov
add
or
ja
int
xor
mov
or
ret
loope
das
dec
aas
out
ljmp
jp
or
add
ret
adc
pop
dec
loopne
lock
std
push
into
pop
test
lret
sub
fwait
mov
push
popa
ret
iret
je
adc
ret
nop
xor
jo
inc
mov
xchg
sub
add
xor
pop
mov
fs
aaa
adc
dec
mov
mov
aas
jns
cmpl
cmp
jecxz
shll
push
mov
and
movsb
xor
xor
jo
adc
or
jg
es
mov
scas
sub
decb
call
pop
repz
mov
adcb
jne
inc
pop
lock
test
nop
daa
mov
mov
pop
mov
dec
data16
enter
addb
or
mov
mov
mov
or
cmp
fmul
jmp
sub
clc
pop
adc
jbe
leave
push
pop
or
scas
cmp
cmp
lret
add
inc
iret
push
cltd
or
or
and
outsb
sarb
pop
in
adc
adc
push
outsb
jo
test
mov
das
jno
enter
push
adc
aad
rep
pop
mov
xchg
mov
ror
push
dec
push
adc
inc
aaa
mov
mov
out
lret
push
mov
mov
repz
fsubs
movb
sbb
cmp
pop
and
int3
dec
push
test
sbb
outsb
and
cmpsb
inc
sub
xor
outsl
fdivr
inc
mov
imul
sbb
mov
pop
inc
mov
sbb
adc
xchg
fwait
push
fisttps
movsb
mov
jl
push
xchg
movsl
sarl
loope
inc
arpl
mov
scas
in
insl
fsub
loopne
in
jo
and
fs
mov
dec
xor
push
lods
adc
fbstp
xchg
popf
cwtl
jg
mov
sub
shlb
inc
add
push
cs
sbb
hlt
cli
in
mov
in
jg
mov
push
addr16
xchg
cmp
xor
jecxz
out
or
jmp
stos
cmc
outsb
push
jmp
fnsave
cmp
inc
int3
out
or
or
rorb
lds
push
pop
push
in
sbb
lds
xchg
cmp
stos
cmp
popf
push
sbb
inc
es
stc
mov
popa
test
sub
inc
test
jp
mov
fwait
cmc
jnp
addb
or
pop
xchg
xor
pop
aas
inc
pop
mov
xchg
mov
into
lcall
rcll
arpl
pop
xchg
pop
and
pop
stc
xchg
jbe
sahf
cmpl
lret
jae
insl
test
adcl
and
or
push
add
push
ds
sbb
fcoms
inc
clc
push
dec
lock
cmp
imul
jbe
loop
bound
hlt
popf
mov
inc
pushf
or
loopne
pop
sbb
fdivrp
mov
mov
stos
push
xorb
pusha
mov
xchg
add
scas
add
loopne
lcall
lahf
scas
rol
outsl
cmp
pop
mov
jmp
stc
push
xchg
out
push
xor
bound
inc
or
and
sbb
sbb
sti
push
clc
fcmovnb
ret
and
lds
outsb
sahf
rcll
out
je
popf
in
adc
push
jg
inc
lcall
std
ror
out
push
mov
dec
or
push
or
in
or
and
mov
mov
pusha
cld
cmpsl
dec
adc
rorl
mov
outsl
das
fldl
xchg
fnstsw
out
mov
aam
dec
lea
es
mov
jb
add
hlt
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
xchg
addl
mov
push
out
dec
rcrl
sti
out
stos
loope
shll
mov
outsl
push
cltd
xchg
nop
hlt
mov
fs
lea
or
ret
icebp
jg
dec
and
out
rcl
inc
jo
xor
mov
push
dec
repnz
lahf
filds
jnp
add
test
dec
jg
jge
mov
cli
out
insb
xchg
or
mov
or
pop
adc
inc
fdivl
pop
pop
sti
push
imul
inc
sbb
jnp
fldl
sub
pop
push
inc
int3
lea
add
xor
cmp
rcrl
in
push
cld
pop
ss
and
out
add
ffreep
xorb
inc
adc
mov
jae
xchg
and
sbb
into
jle
lahf
hlt
and
fs
adc
push
js
int
nop
xchg
xchg
icebp
mov
inc
xor
mov
lret
leave
ljmp
lcall
aaa
hlt
inc
mov
out
fsts
stos
orl
fnstenv
movsl
leave
dec
in
scas
pop
adc
or
or
mov
aad
shlb
fisubl
and
scas
nop
pop
push
insl
scas
sub
in
rcll
loopne
or
in
add
pushf
bound
mov
adc
lds
dec
loop
or
in
push
mov
imul
lahf
jo
out
dec
icebp
enter
push
jno
xor
imull
adc
inc
jg
push
out
or
leavew
jmp
call
test
push
xor
jge
shr
adc
mov
lcall
sti
jl
add
jae
or
jg
xor
sub
and
test
cs
loopne
aas
jge
xchg
lret
jno
fadd
mov
pop
mov
outsb
push
in
jns
sbbl
loope
or
mov
sub
cmp
inc
into
jl
ljmp
lock
inc
fs
push
or
xor
sub
xchg
aam
adc
cmp
inc
lock
xchg
jp
sub
mov
pop
push
fsub
pop
sub
jl
jecxz
mov
sysenter
data16
push
fwait
out
pop
cmp
lods
out
sub
pop
psrlw
or
mov
pop
popf
fisttpll
scas
mov
out
ljmp
inc
xor
stos
cmp
addl
sub
pop
loop
dec
popa
stos
movsl
xlat
pop
rorl
in
pop
pushf
xchg
inc
or
daa
loopne
popa
push
rolb
or
jle
push
lcall
andl
mov
hlt
out
out
cmp
mov
in
test
js
pusha
sub
rorb
pop
push
push
mov
mov
pop
push
cmp
ja
aaa
push
inc
ljmp
addr16
ret
decl
push
popf
lock
sarb
xor
cmp
punpcklbw
pushf
cmpl
adc
jmp
adc
add
je
and
aam
leave
mov
mov
lods
shl
xchg
mov
fstpt
pop
icebp
sub
mov
dec
mov
push
ja
add
packuswb
mov
add
adc
lds
pop
and
cmp
hlt
lahf
inc
cli
ss
add
cmp
out
test
daa
cwtl
xlat
outsb
shrb
push
leave
push
push
push
push
push
in
add
xchg
test
shlb
out
mov
adc
aaa
push
dec
xchg
call
cs
sbb
push
rolb
inc
jae
pop
test
loope
mov
fisubl
ds
inc
aad
cmp
test
loopne
out
jp
pop
fstps
mov
mov
mov
je
pop
xchg
outsb
mov
leave
cli
sbb
ss
cmp
mov
jecxz
xor
xchg
cmp
push
jb
mov
pop
out
loope
xchg
nop
notb
push
inc
or
xchg
sub
outsb
jno
les
test
cmpsb
cmpb
inc
shll
ss
adc
insb
shll
mov
xchg
sbb
cmp
mov
out
mov
shl
pop
nop
and
mov
scas
leave
addr16
stos
sub
mov
out
stos
pop
dec
loopne
push
jae
xor
dec
mov
icebp
mov
aam
xor
and
fstps
sub
inc
in
xchg
lret
add
imul
sbb
scas
inc
push
add
sbb
in
mov
rol
mov
adc
aaa
pop
icebp
jb
fwait
pop
aad
loopne
incl
mov
ret
int3
mov
or
jle
stos
dec
daa
push
cmp
jle
add
sbb
adc
xchg
pop
outsb
leave
jne
ljmp
mov
inc
add
rcrl
insl
push
jnp
out
cltd
sbb
test
cmp
jns
fcomi
mov
cmp
pop
add
ja
pop
fdecstp
xlat
ds
sbb
xor
and
jae
clc
int
lret
icebp
cmc
adc
fbstp
stos
cs
lods
inc
inc
adc
lock
gs
maskmovq
imull
and
mov
ja
repz
mov
mov
inc
mov
xlat
shr
mov
xor
loope
hlt
rolb
arpl
inc
sub
xor
inc
dec
pop
fstps
sahf
dec
pop
mov
loope
adcl
inc
data16
cltd
mov
adc
mov
dec
cld
repnz
pop
pop
cmp
js
test
loopne
and
bound
fisubl
mov
push
inc
xchg
cwtl
stc
or
pop
sbb
leave
xadd
pop
sub
pop
sbb
daa
dec
mov
pop
mov
and
outsb
lods
shll
jmp
repnz
into
mov
pop
jg
mov
daa
mov
mov
test
sarb
pop
adc
xlat
xchg
inc
mov
jns
movsl
mov
mov
rcrl
aam
xor
push
dec
popf
jns
xor
cmpb
xchg
test
rcrb
test
pushfw
xchg
fwait
xchg
mov
repnz
push
in
or
sub
insl
ret
call
int
addr16
cmp
and
jae
xchg
js
push
gs
ret
inc
or
sbb
ror
jp
cmpsl
push
push
imull
lods
in
rcll
inc
and
ret
inc
fidivl
lock
xchg
mov
icebp
mov
jne,pt
fwait
in
sub
stos
mov
pop
inc
and
movl
adc
push
xchg
mov
pop
stos
dec
mov
mov
mov
adc
pop
jb
out
js
in
in
sahf
and
test
gs
minps
fstp
jb
xor
inc
and
out
add
aam
sub
les
ret
rcll
decb
mov
sbb
adc
sub
scas
adc
ss
inc
inc
add
mov
mov
xchg
test
push
sbb
or
mov
sbb
jmp
mov
das
decl
clc
mov
bound
outsl
xor
in
hlt
mov
aam
loopne,pt
ficoml
dec
movb
xor
dec
mov
add
arpl
fadd
push
mov
aas
or
gs
jns
pop
sbb
mov
inc
leave
scas
stc
call
scas
faddl
movsb
lock
andb
mov
scas
out
mov
and
mov
push
and
mov
mov
in
adc
shr
pusha
lock
pop
and
jne
jp
inc
fabs
movsb
stc
adc
push
mov
dec
rclb
rcrl
xchg
mov
sbb
xchg
jl
fdivrl
mov
dec
cmp
jp
add
lahf
inc
sub
sbb
out
pusha
jle
sti
mov
and
mov
je
inc
xlat
xor
add
imul
enter
mov
test
adc
pop
xchg
movsb
sbb
sbb
lret
xchg
sbb
adc
jae
pushl
mov
incb
pop
iret
pop
add
aaa
pop
loop
arpl
sub
xchg
stos
pop
shr
les
stc
sbb
pop
lock
add
mov
add
scas
add
test
jp
mov
arpl
push
or
test
xchg
imul
scas
inc
mov
icebp
out
decl
mov
rcl
negb
lods
pushf
dec
sub
sbb
inc
outsl
adc
std
insl
nop
mov
lcall
ds
inc
xchg
inc
aad
aad
jmp
gs
cmpb
int
push
loope
jecxz
mov
jecxz
mov
out
cmpsl
or
cmp
clc
mov
mov
lea
fsubs
iret
or
sbb
cltd
lods
daa
xor
enter
sarb
movsl
movsb
mov
outsl
pop
movsl
movsl
mov
cli
inc
lcall
fnstsw
mov
ljmp
cmp
xor
mov
adc
imul
lret
call
sbb
pop
ss
jg
cmpsl
repnz
jnp
test
ljmp
dec
loope
mov
ret
inc
adc
testb
dec
cld
fcoms
test
movsb
cmp
pop
je
std
lds
pop
mov
jno
aaa
mov
adc
dec
xchg
and
lret
gs
push
mov
fists
adc
das
fwait
aam
or
out
adc
adc
pop
aaa
sbb
mov
data16
add
pop
cwtl
jg
pop
push
add
push
fmuls
loop
dec
roll
dec
pushl
hlt
out
inc
dec
aam
add
or
add
je
decl
rcrl
je
inc
outsb
sub
in
aam
adc
repnz
push
mov
pop
dec
in
cli
movsb
les
adc
call
jnp
add
roll
xchg
fs
test
jmp
shll
xchg
xor
clc
clc
cmc
cwtl
rcl
out
icebp
push
in
pop
xor
add
lods
sub
loope
xor
sbb
mul
lock
jle
inc
xor
mov
sbb
iret
movsl
hlt
xchg
mov
nop
adc
in
mov
jno
pop
sub
mov
test
jns
std
push
or
mov
push
sub
cs
jne
popf
push
add
test
popf
pusha
js
ret
mov
xchg
or
aad
mov
and
sbb
mov
adc
push
shll
lock
pop
add
push
and
scas
inc
popa
mov
gs
ja
xorl
cmpl
dec
mov
dec
rcrb
add
mov
icebp
sbbl
mov
add
xchg
fidivrs
or
fcoml
mov
pop
add
clc
lds
loop
rclb
pop
inc
add
mov
or
jmp
in
stos
push
cmp
xor
cmp
mov
daa
arpl
add
sub
jg
xchg
fadds
inc
cmpsl
add
jno
or
mov
iret
loopw
fbld
xchg
out
xor
jle
out
lds
or
and
orl
stos
pop
pop
adc
xchg
fcompl
and
sbb
and
cmpl
inc
xchg
inc
stc
jb
or
out
inc
add
jne
int
xchg
mov
xchg
jbe
ret
fsubs
cltd
dec
inc
pop
sub
add
out
stc
dec
push
data16
mov
pop
cmp
std
es
shlb
andb
push
jg
jp
and
daa
push
mov
es
mov
mov
sbb
aam
dec
addr16
adc
push
insl
pop
mov
les
pushf
pop
leave
fwait
inc
test
lds
xchg
andb
pop
fiaddl
or
stc
push
add
xchg
into
jl
lret
push
pop
lea
xchg
xchg
mov
rcll
pop
push
in
in
or
inc
jge
scas
pop
pusha
nop
mov
cmp
jns
inc
dec
std
dec
in
mov
idiv
sub
movsb
imul
mov
push
inc
pop
jbe
xchg
pop
mov
xchg
mov
gs
inc
fmuls
mov
and
in
mov
pop
mov
dec
fiaddl
jbe
out
adc
lret
jle
ja
shll
jle
mov
aad
cmc
add
adc
in
call
inc
in
xchg
gs
nop
or
imul
dec
inc
scas
or
fildll
pop
pop
adc
insl
jg
sub
mov
scas
inc
test
mov
and
rcrl
insb
sbb
pusha
sub
push
iret
scas
xor
aad
test
std
mov
das
into
sti
leave
loope
pop
das
push
inc
mov
and
adc
mov
aam
jle
sub
mov
mov
xorl
adc
mov
cmp
push
push
lcall
add
fistps
mov
jecxz
jbe
mov
mov
mov
out
jnp
fs
adc
ret
sub
jge
cmp
outsl
shrb
dec
xchg
fstps
mov
stos
push
xchg
loopne
mov
push
push
xchg
inc
loope
mov
jle
out
cli
xchg
add
lcall
push
insb
mov
pop
setno
mov
fsubs
push
addr16
pop
sbb
xor
xchg
out
div
and
jno
shl
xor
daa
ja
push
or
loopne
shll
and
addb
sub
jae
sub
xor
iret
je
jno
push
xchg
push
jne
sahf
mov
push
pop
data16
ret
mov
xor
jmp
out
ljmp
inc
lret
jg
add
lahf
pop
pusha
sbbb
pop
out
inc
call
daa
mov
pop
sti
sub
mov
dec
xor
shl
pop
inc
add
shll
mov
cmp
add
jmp
movsb
jl
xor
clc
repz
fisubrs
sbb
movsl
and
sub
mov
jnp
sbb
jb
and
sub
push
mov
inc
neg
in
mov
and
sbb
push
loope
fnstenv
sbb
cltd
dec
mov
mov
ret
mov
fsubr
into
jle
inc
mov
int
shr
mov
and
adc
icebp
imul
adc
jecxz
lret
loopne
outsl
adc
dec
push
add
sub
pop
cwtl
cmp
icebp
push
mov
dec
aas
jae
mov
cmp
dec
cmpsb
mov
sub
stc
mov
inc
dec
into
and
sub
mov
pop
aas
lea
mov
sti
les
add
cmp
pop
mov
or
jb
and
shrd
pop
inc
jle
sub
fsubl
xor
pop
std
cmp
es
xlat
adc
xor
sbb
mov
fwait
jmp
aaa
inc
jno
xlat
sub
clc
jo
sbb
mov
sub
leave
jns
inc
mov
adc
xlat
dec
orb
clc
cmp
hlt
push
jo
sbb
aad
jb
pop
sub
enter
notl
push
adc
out
int3
in
icebp
cmp
xchg
mov
jo
xor
gs
cmpsl
mov
inc
sbb
pop
lahf
nop
xchg
mov
mov
jp
out
xchg
lock
xchg
iret
stos
sbb
fistps
sbb
cmp
loopne
inc
xchg
jmp
lea
pop
push
xchg
mov
push
mov
sbb
xor
xor
lcall
or
shrl
mov
jns
je
xor
push
jb
push
test
mov
out
scas
jmp
scas
ds
xchg
xor
leave
pop
sbb
lock
adc
add
in
test
adc
cmp
test
jg
leave
sbbl
xor
into
fldenv
pop
ret
cmp
lret
aam
es
push
jns
popa
rolb
rorl
mov
sti
jmp
stos
dec
pop
scas
movsl
or
mov
jns
scas
outsb
and
rcll
adc
jns
cmp
stos
push
ljmp
jl
leave
cmc
aaa
cld
arpl
stos
cmpb
pop
jne
adc
dec
fabs
xor
adcb
sbb
js
arpl
out
out
movsb
xor
dec
movsb
je
mov
movsl
imul
xchg
loope
push
mov
enter
imulb
sbbl
cmp
jnp
inc
xor
mov
push
shll
dec
sahf
xchg
xor
sbb
cmp
xchg
jle
test
xchg
mov
mov
sbb
sti
jns
popa
add
xchg
push
xchg
mov
dec
jmp
shll
jbe
inc
sbb
mov
mov
xor
test
jb
xchg
imul
cmp
lret
inc
int3
test
mov
jnp
pavgb
outsl
mov
cs
rcll
pusha
scas
mov
not
pop
dec
in
fisubrs
or
mov
ret
popf
scas
ficomps
jb
add
jo
cmpsb
fdiv
adc
in
pop
jne
out
fwait
jmp
ret
mov
pushf
dec
jb
js
mov
mov
xchg
mov
shl
std
lods
xor
bound
fisubrl
cmp
sbb
adc
mov
push
cmc
ss
dec
pop
mov
lret
add
lret
icebp
jp
aad
rclb
in
jo
dec
lods
push
lods
inc
adc
pop
fstl
sbb
and
or
scas
pop
fwait
xor
sub
mov
mov
add
adc
stos
ficoml
lods
lods
jmp
sahf
mov
xchg
bound
push
push
insl
adc
sbb
pop
pop
mov
inc
aaa
or
in
sbb
sbb
inc
mov
sub
push
mov
sbb
pop
dec
aas
cmc
test
pop
jg
addr16
xor
push
xchg
int
repnz
add
test
cmpb
mov
add
imul
popa
mov
sub
ss
pusha
leave
or
pushf
pop
xor
idivl
sub
sarl
ljmp
xlat
push
mov
fimull
sub
and
fs
or
push
das
pop
out
fwait
sbb
xchg
push
mov
int3
jge
inc
clc
mov
lahf
sub
mov
neg
call
xor
and
jbe
les
mov
daa
mov
push
les
dec
push
xor
inc
fisubs
sahf
stos
add
pop
xchg
dec
adc
inc
divb
and
test
stos
jnp
add
xchg
sbb
push
and
push
cs
push
and
mov
arpl
pop
mov
fsin
or
mov
les
stos
movsl
pop
xchg
into
mov
cmc
dec
insl
cld
aad
repz
popa
xor
das
aas
aaa
lea
or
sbb
test
shrb
leave
lods
ds
fwait
sub
dec
push
jno
sbb
in
cli
adc
std
xor
movsl
jo
idiv
push
and
mov
jp
cmp
jge
cmovne
fidivrs
aam
scas
mov
cmp
pop
popa
jmp
ja
sbb
ficomps
dec
into
xchg
jb
or
mov
gs
jbe
daa
mov
and
mov
lea
in
repz
test
movsb
lahf
jp
cmp
inc
out
xor
xchg
xchg
mov
mulb
pop
popa
ret
addb
insb
std
sbb
push
test
data16
pop
incl
insl
add
mov
push
into
add
xchg
pop
int
fbld
roll
mov
dec
inc
mov
push
insl
or
cmp
or
enter
ret
xor
pop
mov
pop
test
repnz
mull
pop
in
mov
sbbb
aad
pop
add
enter
push
test
mov
repnz
repnz
imul
fcomps
dec
rclb
push
fs
sub
cli
test
sub
and
xor
xchg
lea
rcrb
inc
pushf
push
leave
and
pop
and
cmp
loop
icebp
shlb
xchg
pop
data16
push
je
mov
movsl
cltd
jnp
cltd
inc
sub
xor
aaa
xchg
test
mov
adc
mov
sub
inc
lcall
push
insb
frstor
lcall
cld
dec
into
mov
lock
je
or
xchg
mov
jnp
fwait
ja
xor
cmp
pop
cltd
and
sbb
lret
lock
ljmp
mov
mov
inc
jns
mov
enter
mov
lea
cmp
daa
push
cmp
mov
add
push
jb
or
sbb
xor
test
and
jae
testb
push
sbb
icebp
dec
test
clc
xchg
mov
xlat
mov
xchg
enter
mov
mov
rorb
in
cld
mov
sarb
add
lock
adc
stos
xor
enter
cmp
pop
dec
sub
sub
loop
loope
cwtl
pop
mov
push
mov
les
add
mov
add
pop
or
lds
sbb
xchg
xor
push
jbe
out
xor
jmp
outsb
push
stc
outsl
ss
mov
adc
adc
pop
repz
loope
or
jp
rorb
lds
add
mov
inc
and
fsub
add
rcr
and
mov
les
iret
push
fldl
push
cmp
cwtl
in
mov
hlt
into
add
fimull
jmp
xchg
xchg
stc
or
push
notb
add
xor
jg
aam
mov
mov
rolb
xor
stos
rorl
hlt
sub
mov
jbe
pop
outsb
inc
daa
xchg
add
aaa
notl
in
or
jnp
cmp
in
pop
pop
lods
add
bound
subl
and
std
and
aad
mov
sbb
cmpsb
inc
cwtl
mov
mov
icebp
orb
cmp
popf
repz
xchg
and
addr16
inc
jo
push
pop
add
pop
ljmp
add
pandn
jecxz
jae
test
xchg
repz
cmp
jbe
ret
loope
movsl
lds
xor
or
int3
divl
mov
mov
add
addr16
stc
mov
cmpsl
push
and
mov
adc
aad
cmp
call
dec
mov
sbb
sbb
add
lret
sub
push
push
test
test
xor
pop
xor
xor
ret
fs
je
dec
pop
add
mov
mov
lret
js
dec
stos
cmpb
mov
pusha
loope
mov
pop
cmp
adc
mov
lcall
out
adc
push
movntps
lock
mov
cmp
jmp
out
jle
xchg
fs
test
int3
hlt
ss
ficomps
mov
jl
es
in
mov
jl
out
adc
jns
nop
jle
repnz
or
xor
out
fcoml
xchg
stos
ret
sbb
lahf
adc
or
pop
dec
lcall
in
sarb
ret
negb
dec
imul
lods
jle
std
jo
test
or
sbb
int
pop
adc
rorb
mov
ljmp
orl
inc
inc
stos
lahf
imul
je
xor
pop
scas
test
push
enter
imul
adc
and
mov
xorl
insb
je
add
push
in
mov
int
xlat
stos
loope
pop
aas
ret
mov
imul
clc
push
xchg
cmp
in
jge
xchg
les
mov
inc
loope
rolb
call
mov
lods
adc
xchg
sub
ja
loop
jl
push
testb
jle
adc
jns
test
std
jmp
dec
inc
xchg
mov
scas
mov
mov
pop
and
add
call
test
fst
cmc
sub
push
enter
dec
fisttps
xor
es
out
js
iret
daa
sbb
daa
adc
jecxz
add
into
xchg
cli
mov
jo
hlt
bound
jmp
ja
into
shrl
cwtl
jb
jle
jp
rclb
js
or
lret
pop
jo
dec
fisttpll
rcll
aam
stos
mov
pusha
lea
xor
mulb
cwtl
dec
pop
or
outsb
push
fnstcw
test
push
dec
inc
out
push
sbb
sub
lea
xchg
mov
push
lret
xchg
jl
push
or
jle
gs
pop
inc
lods
jnp
mov
push
cld
xlat
dec
mov
out
mov
dec
sub
insb
bound
imul
pop
aaa
test
lods
sub
adc
pusha
jl
xor
lds
cli
lds
fsincos
xchg
push
fdivrl
es
mov
es
daa
push
arpl
orb
mov
mov
js
scas
data16
xor
mov
call
rcll
pop
push
push
sbb
lahf
daa
insl
jno
popa
lret
ja
insb
test
into
pop
mov
cmp
inc
rcrb
mov
inc
push
data16
cli
and
sub
scas
add
cmp
pop
and
cmp
cwtl
pop
push
and
inc
outsb
and
fdivrl
not
xchg
xchg
bound
repnz
mov
cmp
sub
gs
ja
adc
or
enter
outsb
imul
adc
ss
vmovd
lcall
xchg
ss
adcb
stos
fdivrl
jge
cmp
popf
cmp
fs
loopne
sub
sbbl
rorb
mov
rclb
push
jns
ljmp
jns
aas
movl
add
mov
fsubrl
mov
mov
or
sti
in
aas
pminsw
loope
push
data16
lret
jge
addb
or
cmp
scas
mov
psubd
shlb
push
cli
in
rclb
insb
push
xor
dec
std
icebp
push
sbb
add
jle
xchg
xchg
cmp
adc
sahf
push
and
es
mov
das
out
dec
add
sub
push
push
cmc
gs
xchg
cmpsl
out
push
ljmp
lret
xor
out
scas
pop
fucomi
inc
imul
sar
pop
enter
xor
enter
push
jnp
aas
mov
xchg
insl
pop
cs
rcrl
cmp
add
mov
mov
sub
cmp
or
bound
mov
fs
scas
or
scas
fmul
xchg
cmp
imul
mov
pop
pop
mov
xor
xchg
lcall
jnp
push
mov
sub
mov
cltd
push
mov
js
std
test
xor
or
cmp
fsts
inc
add
push
repnz
mov
stc
mov
adc
popa
mov
mov
or
stos
jne
pusha
enter
sub
int3
iret
push
ret
adc
jg
dec
int3
call
push
icebp
out
xchg
mov
xchg
rolb
enter
popf
pop
mov
mov
mov
cwtl
sub
cmpb
mov
ror
push
movsl
sub
lret
divl
xchg
call
ljmp
adc
push
ja
mov
leave
int3
mov
xchg
lods
jge
add
iret
scas
push
mov
enter
sar
test
mov
les
xchg
xchg
out
inc
js
sti
and
cmp
lds
jge
call
movsb
movsb
or
imul
sti
out
dec
pop
xor
lea
cwtl
stos
insb
sub
int3
pushf
lods
mov
push
mov
mov
add
xor
fildll
xchg
or
loopne
xchg
stc
subl
push
jl
sub
int
popfw
lcall
pop
sub
movsb
sub
sbb
jnp
fwait
test
jge
test
add
and
pusha
adc
inc
addr16
rcr
cmp
cmp
mov
add
and
test
pop
mov
jbe
aad
sbb
icebp
pusha
mov
ret
pop
inc
popfw
or
pop
and
lret
cmp
aad
mov
push
mov
lods
xchg
jbe
or
in
pop
mov
stc
sahf
or
inc
pop
mov
jnp
lcall
aam
cmpsb
dec
mov
sti
and
adcb
enter
push
cmpsl
inc
sub
jge
outsb
sti
test
outsb
sbb
push
add
out
out
lock
cmp
sbb
stc
mov
fs
test
movsb
adc
stos
pop
bnd
inc
mov
jo
out
cld
jl
rcr
sub
lret
push
jmp
or
sub
loop
addr16
cli
xchg
adc
fs
cmc
test
neg
inc
insl
or
lcall
test
popf
jg
aam
mov
mov
lods
mov
or
dec
test
aad
fistpl
ja
movsb
ljmp
mov
sbb
cmpsl
and
pushf
popa
hlt
mov
mov
pop
add
lret
dec
sub
and
das
iret
lods
lret
jge
int
adc
and
push
pop
adc
inc
addr16
inc
addr16
add
mov
dec
push
neg
outsl
dec
rclb
add
xor
lret
insb
jecxz
ret
xchg
sbb
fnstenv
imul
mov
call
mov
test
icebp
xor
jo
mov
pusha
pop
fisubrl
mov
push
xchg
out
sub
push
loopne
aad
std
sub
jnp
arpl
std
pop
jp
mov
cmpsb
add
in
cmp
inc
stc
xor
icebp
push
mov
int
and
mov
jnp
loopne
clc
data16
rol
and
jae
scas
sbb
mov
and
mov
push
xor
data16
xchg
mull
mov
push
enter
jl
jmp
jo
insl
in
push
lret
pop
in
push
jle
loop
jb
cmp
cmp
call
fcomp
mov
shlb
stos
lea
nop
mov
rcrb
lock
mov
sbb
sbb
shl
outsl
jge
push
fs
in
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
mov
sub
addl
jp
add
xchg
sub
or
inc
cmpsl
outsl
xor
cmp
or
ret
inc
jb
mov
pop
lret
pop
jp
test
cmp
xor
push
popf
adcb
push
lahf
js
push
jle
roll
loop
shll
xor
add
push
jl
or
push
dec
fs
icebp
push
inc
jg
or
dec
jne
dec
xchg
in
xlat
pusha
mov
orl
mov
jge
test
jg
dec
lret
mov
rorb
pop
ret
pop
inc
in
dec
out
push
in
insb
sub
pushf
xor
cld
sbb
cld
lods
scas
and
jle
sbbl
sub
hlt
fsubrs
pop
lret
lcall
flds
and
les
sub
or
mov
orl
sub
sub
mov
leave
and
lret
test
jno
sub
loopne
int
push
xor
repz
jns
ja
and
xlat
and
or
sub
pop
aam
popf
lods
cltd
add
test
cltd
dec
cmp
decb
arpl
lock
mov
sti
outsl
mov
dec
dec
cli
pop
and
mov
push
repz
adc
mov
cmc
shrb
test
and
inc
and
ss
pop
and
xor
in
jns
or
cmp
sub
sub
adc
xor
out
lret
pop
cmpl
adc
pushf
and
sti
and
ficompl
dec
jl
pusha
and
cmpsb
dec
sbb
lds
sti
sub
mull
out
jo
scas
xor
in
scas
mov
enter
bound
es
adc
sbb
add
cmc
idivl
and
icebp
icebp
lret
mov
push
push
popf
mov
mov
in
inc
rcr
cld
in
sub
mov
and
xor
shll
ja
mov
push
enter
pop
mov
jne
in
push
xor
and
jo
jmp
imul
push
or
mov
out
adc
fwait
xor
cmp
je
inc
jle
pop
adc
push
or
xchg
mov
jp
mov
popf
cwtl
xchg
push
rol
or
dec
test
cld
dec
lods
add
scas
mov
ror
adc
leave
lahf
pop
insb
xchg
pop
cmc
adc
pop
mov
adc
cmp
dec
jl
in
and
clc
push
push
cmpsl
mov
and
in
ret
pusha
mov
pop
inc
ss
or
add
aad
adc
out
pop
mov
stc
pusha
push
xchg
push
pusha
adc
mov
jmp
sub
jno
popf
xchg
adc
es
push
stos
lds
pop
pop
enter
mov
lock
das
or
rorl
leave
push
or
sbb
push
leave
into
mov
scas
outsb
xchg
aaa
adc
movsb
jmp
inc
out
mov
fldenv
dec
in
idiv
add
sarl
popa
pop
inc
stc
in
loopne
xchg
sub
loopne
les
loope
mov
sub
xchg
imul
faddl
xchg
std
inc
shll
mov
out
dec
mov
inc
or
out
add
sub
sub
into
and
jns
mov
in
popf
inc
push
adc
sub
xlat
lock
je
sub
lods
push
dec
lcall
cs
cmp
fldl
insl
into
inc
in
stc
sbb
jne
jns
stos
imul
hlt
or
mov
pop
jb
dec
sbb
test
rcr
add
jmp
cs
enter
cmp
outsb
clc
and
ret
xlat
dec
adc
outsl
lods
add
movsb
dec
aas
pop
cmp
js
out
cli
push
dec
dec
mov
mov
push
jge
aad
sahf
dec
test
and
sub
cmp
ss
shlb
ret
sub
stos
push
inc
les
inc
pop
clc
arpl
xchg
mov
mov
in
push
push
sbb
xchg
sub
adc
pushf
cmc
rol
in
lcall
sub
mov
outsl
pushf
xchg
in
sbb
push
push
jmp
xchg
mov
loope
outsl
add
push
cmp
in
inc
pop
mov
sbb
pop
pop
push
xor
pushf
ss
call
sbb
cmp
jne
std
adc
add
jno
cmp
insb
cmpsl
jmp
bound
jge
mov
lret
cmp
fists
xor
aaa
push
xor
push
dec
or
or
out
pop
test
not
dec
ret
enter
jae
and
imul
push
loop
shll
fiaddl
out
sbb
and
dec
data16
rcr
shl
push
aas
xor
mov
add
cs
pop
push
loopne
jge
and
mov
sbb
lret
sti
test
push
shlb
push
in
movsb
cmp
leave
jl
add
enter
jl
add
clc
divb
add
ret
jge
sub
xor
cmpl
outsl
and
or
cltd
adc
jns
inc
in
incl
js
jae
inc
mov
test
pop
ja
lds
pop
lods
mov
rol
push
repz
out
push
in
sub
incb
pop
jmp
out
mov
aad
outsl
or
add
push
andb
outsb
push
aas
and
aas
and
ret
mov
xchg
jp
js
ja
cmpsl
es
lahf
roll
sub
mov
testb
xor
xchg
or
lods
ljmp
mov
push
addr16
cld
fimull
stc
pop
sarl
mov
mov
mov
in
cmpsb
rolb
out
aad
lods
and
push
xchg
sbb
fldcw
add
data16
jmp
or
pop
push
xchg
shlb
lret
test
loopne
add
mov
les
and
or
dec
mov
popf
xchg
icebp
cmp
gs
push
sahf
xor
push
pop
shll
gs
cmp
pop
ret
leave
xchg
lock
xchg
pop
add
bnd
jb
xchg
sub
nop
bound
fstl
cmpsb
clc
aaa
cmp
loop
repnz
jp
and
mov
mov
inc
jle
call
negl
inc
sub
jne
mov
movsb
insl
adc
aam
aam
sti
xor
fs
mov
and
mov
or
ds
jecxz
ds
jmp
mov
xor
mov
scas
and
mov
jp
mov
lods
mov
lahf
dec
xor
jae
push
repnz
push
mov
das
test
push
clc
push
cmp
xchg
and
mov
fldenv
xchg
and
or
movsb
arpl
notl
dec
fisubl
or
jmp
inc
das
mov
scas
pop
mov
push
jo
jmp
test
popf
push
adc
sbb
jne
into
leave
scas
pusha
dec
nop
icebp
shl
gs
xchg
push
sub
mov
push
jbe
lret
int3
xor
popa
xor
mov
movsb
addr16
dec
push
sbb
into
adc
les
fst
mov
cmp
lcall
out
inc
popf
scas
dec
outsl
lahf
loop
fcmovbe
ja
cmp
movb
enter
mov
mov
fdivrs
ficomps
shlb
sbb
cmp
mov
psrlw
mov
jae
das
dec
pop
and
push
imul
sbb
sbb
adc
jl
fld
mov
cmp
dec
les
or
cmp
ds
dec
in
add
fs
pushf
xchg
add
icebp
sbb
ljmp
shrl
lret
loope
stos
adc
pusha
enter
iret
mov
cmp
mov
out
out
ja
or
cmp
pusha
aaa
xor
insl
sti
cli
mov
jle
push
sub
push
pop
cwtl
mov
sbb
jg
jmp
mov
mov
adc
adc
push
dec
cmp
mov
inc
sub
scas
pop
lahf
into
jb
push
rorl
xlat
shrb
imul
dec
insb
stos
dec
lea
aam
jae
arpl
dec
and
leave
mov
sub
push
mov
enter
add
aam
xchg
and
ret
adc
jl
adcl
leave
dec
and
inc
mov
push
das
cmp
mov
mov
cmp
neg
cld
sub
xchg
push
cwtl
aaa
mov
mov
popf
sub
inc
pop
xor
lahf
and
test
sbb
bswap
inc
jae
shlb
cmp
mov
mov
stos
pop
or
xchg
fisubs
or
mov
sub
xor
or
shl
movsb
jp
out
addb
adc
sahf
inc
lahf
outsl
dec
push
leave
push
mov
cmpsl
idivl
je
imul
rcrb
inc
xor
rorb
mov
cmpsl
pop
dec
gs
ret
ret
jb
dec
out
lods
and
dec
aaa
dec
aas
scas
scas
in
jg
and
aas
fucomi
aam
mov
mov
pop
dec
aad
mov
ljmp
ret
add
sbb
rolb
pop
pop
sbb
push
sahf
movsl
sub
mov
lcall
fdivrl
or
rorb
test
cmpsl
imul
daa
dec
minps
arpl
es
sbb
scas
pushf
ljmp
inc
or
js
inc
lods
inc
cmp
sub
cmp
xor
negl
jns
iret
fbstp
jae
jne
into
fsubr
jmp
dec
ds
mov
adc
sub
pop
ds
pop
das
jg
es
and
addb
jnp
and
push
fadds
dec
pusha
mov
mov
in
fs
in
mov
aam
out
shll
sbb
je
mov
sbb
pop
leave
sub
adc
jnp
flds
int3
dec
or
pop
mov
sbb
xchg
shr
inc
icebp
xchg
add
push
jne
cmp
shlb
gs
jae
inc
orb
jg
lods
mov
adc
pushf
clc
std
aad
roll
xor
sub
inc
loop
sti
shlb
aam
imul
mov
add
loopne
int
shld
inc
and
mov
mov
addr16
fadds
jle
and
xor
fldcw
dec
test
test
test
negb
cltd
jmp
dec
push
mov
movsl
mov
inc
add
dec
or
loope
mov
sbb
data16
mov
lea
jmp
pop
test
pop
rclb
ret
jge
push
fsts
lds
sbb
mov
aaa
loope
je
iret
or
jmp
or
cmc
sarl
and
xchg
sbbb
popf
mul
insl
repnz
dec
dec
js
dec
or
pop
jnp
jnp
jo
repnz
call
popf
fiadds
jmp
mov
push
push
faddl
imul
mov
stc
popa
mov
add
xchg
fwait
pop
dec
pop
popf
sbbb
in
xchg
adc
fsubl
movsb
hlt
pop
jmp
xchg
loopne
xchg
ds
daa
mov
imul
enter
sbb
lea
cmp
pusha
push
mov
cld
imul
mov
addl
push
ljmp
jns
out
push
jle
pop
adc
and
shl
push
sub
sbb
mov
add
mov
fcomip
sub
sbbb
int3
sub
aad
and
mov
enter
sahf
ret
stos
loopne
movsl
xchg
inc
lds
push
cli
ja
xchg
sete
cmp
jnp
mov
and
arpl
mov
xchg
js
sarb
adc
add
lahf
and
icebp
inc
inc
sarl
pusha
adc
mov
ret
and
jne
icebp
out
insl
loopne
xchg
mov
in
mov
loopne
cmp
test
leave
xchg
pop
js
mov
pop
movsl
in
sub
dec
add
cltd
mov
out
sarl
fs
in
and
adc
daa
mov
addr16
inc
jbe
or
sbb
cmp
les
leave
fwait
fwait
mov
mov
sub
adc
push
push
fcoms
mov
mov
adc
xor
cmc
dec
adc
testb
mov
push
loope
mov
imul
pop
jnp
scas
mov
pop
movsb
daa
or
out
das
xor
xchg
xlat
in
mov
ljmp
int
test
in
dec
outsl
dec
and
in
jecxz
jbe
or
shrb
loope
mov
xchg
cmp
mov
rcrl
or
aam
leave
pop
mov
pop
mov
rolb
add
daa
jl
pop
xchg
loope
or
ja
in
sub
lods
sub
push
mov
sbb
js
sbb
in
clc
jmp
aad
imul
jnp
inc
insb
data16
lods
test
xor
into
push
cwtl
mov
cli
jns
jne
dec
adc
aas
jmp
jle
add
aam
adc
and
stos
mov
jg
fsubs
das
mov
inc
and
jle
pop
add
enter
jle
daa
movaps
jge
dec
xchg
jp
test
mov
dec
addb
in
jns
in
dec
out
push
jl
and
stc
nop
sub
lea
movsb
pop
lahf
lcall
xor
inc
movsb
lea
jnp
dec
sub
mov
push
dec
mov
loop
shlb
add
xor
and
push
pop
movl
pop
ret
sahf
inc
or
jb
pop
lods
les
sub
movsl
bound
inc
stos
and
fwait
mov
imul
jecxz
and
jo
sbb
cld
sahf
pop
arpl
and
inc
shrb
and
sub
jnp
fcoml
stos
jl
mov
cmpsl
shrl
testl
lds
test
lretw
mov
add
ret
jecxz
or
cs
les
mov
std
call
pop
push
add
imul
mov
fs
sub
cli
mov
add
lret
out
inc
adc
jb
mov
inc
insl
and
cmpsl
jne
dec
pop
sub
rolb
notb
add
stos
stos
paddusb
push
mov
and
xor
orl
mov
popf
mov
mov
lock
xchg
pop
jo
pop
aam
or
es
sub
popa
add
xchg
pop
call
sub
mov
xor
clc
push
inc
popa
pop
shrb
and
push
int3
hlt
mov
xchg
pushf
outsl
xchg
cltd
inc
pop
cmp
push
jge
incl
pusha
fnsave
push
shld
adc
ds
mov
add
loop
js
fdivl
lods
dec
mov
adc
sub
add
jl
or
xor
mov
pop
sbb
out
cli
sub
addr16
sarb
outsl
cmp
jecxz
stos
xchg
loope
pushf
ja
mov
xchg
test
cmp
and
xchg
jb
cmp
or
loope
inc
and
je
insl
jge
out
int
ljmp
js
movsl
fstps
sbb
xchg
xor
notl
subb
pop
xchg
subl
jno
or
mov
test
sahf
mov
adc
jge
scas
je
aaa
or
arpl
jg
divb
add
cwtl
sarb
vmovsd
push
loopne
xor
cli
adc
leave
popa
imul
ficompl
xchg
in
repnz
lret
ds
pop
pop
test
mov
js
lea
mov
jae
or
ss
and
sub
daa
enter
sub
add
test
clc
ja
stc
test
jecxz
adc
push
or
jl
and
repnz
bnd
lret
and
out
add
or
stc
pop
mov
jp
mov
jns
fmuls
adc
fisubrs
out
loopne
mov
clc
pop
mov
ljmp
arpl
mov
sahf
fnstcw
cli
imul
dec
xor
imul
movsbl
mov
xchg
and
gs
and
ljmp
mov
fstps
ret
lahf
mov
cmp
test
sbb
xchg
mov
dec
push
fwait
stc
negl
outsl
stos
sub
pop
js
shlb
push
insl
enter
loopne
mov
pop
inc
inc
in
inc
add
xor
shrl
or
dec
in
insl
loopne
fildl
jns
push
fnstcw
ds
and
mov
pop
cld
int3
jno
push
dec
aas
mov
movsb
cmpsb
mov
js
sub
repz
add
sbb
scas
orl
adc
adc
jbe
adc
mov
cmp
inc
aas
xchg
inc
lea
xchg
mov
addr16
adc
push
push
mov
stos
mov
sub
pop
push
xchg
das
fmull
add
jo,pn
adc
dec
dec
and
test
cs
jmp
stos
ss
mov
push
dec
fcoms
hlt
dec
out
mov
sbb
mov
sub
push
jae
dec
sub
mov
mov
in
inc
inc
scas
pushf
clc
movb
scas
cmpb
pop
mov
dec
incb
out
test
mov
scas
cld
push
jno,pn
pusha
jmp
out
and
sbbb
ret
mov
je
fldt
clc
and
adc
mov
cmc
push
and
and
sti
pop
pop
or
fists
mov
sarb
lods
sbb
add
cwtl
repz
push
mov
inc
rcl
testl
mov
inc
xchg
lea
in
sbb
jnp
fdivs
loop
mov
xchg
inc
lcall
mov
inc
lret
mov
sarl
fsts
mov
loopne
sub
int
adc
rcrb
pop
pop
fldenv
mov
push
cwtl
fisttpll
ret
into
sbb
in
iret
xchg
push
xor
ds
sahf
jns
sbb
out
data16
jge
and
sub
xor
pop
mov
out
push
pop
xchg
cld
stc
cmc
inc
sti
xchg
pop
filds
pop
pop
sbb
jo
cmp
mov
imul
pop
cmpsl
or
lock
mov
or
outsl
fldt
push
shlb
in
jo
loopne
mov
and
jae
add
adc
mov
mov
sub
xchg
int
xchg
sbb
jb
mov
jns
dec
out
lret
sub
inc
mov
insb
push
sub
cmc
sahf
lds
push
mov
mov
std
outsl
add
xor
lret
xchg
xor
cmp
jae
cltd
sbbl
mov
and
xchg
es
mov
sbb
pushf
arpl
sti
and
rcrl
test
sahf
imul
xchg
cltd
mov
gs
cmc
jl
xor
lds
fs
lcall
lret
xchg
ds
test
xor
mov
xor
pop
pop
jmp
cmp
dec
fldcw
scas
movsb
ljmp
adcl
jge
adc
lret
pop
jp
pop
jnp
jge
sbb
push
stos
clc
scas
or
imul
icebp
ss
ficompl
jne
inc
aaa
cltd
fdivrl
testl
in
cs
xchg
mov
mov
cli
dec
test
sbb
jns
arpl
mov
jns
mov
aam
addr16
stos
cs
es
pop
nop
mov
or
dec
and
xchg
mov
sbb
cmp
and
test
xchg
jae
xchg
dec
lcall
aad
jge
loope
insb
lods
outsb
nop
sub
scas
je,pt
lea
inc
in
aam
out
jp
xchg
add
out
enter
aas
scas
shlb
push
cmp
loop
fadds
jno
dec
cli
xchg
ret
jae
ficompl
loop
xor
jns
imul
sub
xor
shlb
movsl
test
hlt
popf
add
rolb
or
adc
insl
outsb
in
dec
push
jge
mov
mov
shrl
mov
loopne
cmp
push
add
jae
cmpl
cmp
dec
dec
out
adc
daa
arpl
pop
or
rorb
add
movl
dec
and
inc
rcrl
jo
lahf
ja
jmp
inc
mov
pop
push
data16
jecxz
inc
push
add
iret
je
nop
or
inc
and
aaa
in
loopne
int3
push
gs
pop
pusha
sbb
cmp
arpl
jmp
popa
in
clc
sub
xlat
scas
insl
nop
jp
mov
inc
ds
xchg
test
and
movsb
lds
sbb
and
inc
add
lcall
jecxz
std
push
or
mov
les
jecxz
sti
pop
setns
mov
push
out
push
test
lods
imul
dec
xchg
cmpsl
sub
xchg
rorb
cwtl
loop
dec
jmp
cltd
xchg
scas
sub
xor
mov
enter
sub
sahf
lea
in
add
lods
es
xor
add
jb
ja
sub
aad
pusha
fimuls
jmp
xor
pop
pop
jns
sub
popa
adc
rcll
mov
fs
js
sbb
jp
ss
or
jmp
outsl
sbb
adc
jle
push
pop
cmp
movsl
inc
inc
lods
add
xor
call
sub
aas
call
or
lret
stc
enter
pop
push
shl
lea
fnstsw
or
cmpsb
icebp
jb
and
mov
dec
lods
movsl
and
mov
push
lods
cmp
and
cltd
mov
dec
mov
xchg
and
lock
cmp
mov
int
mov
xchg
scas
lret
dec
clc
es
push
xchg
popa
out
push
jp
dec
fdivrs
push
sub
out
or
fs
lcall
test
add
cld
jnp
mov
dec
popa
decl
jne
ficoml
or
pop
int3
mov
fs
sbb
dec
imul
cmc
jns
aam
pop
add
adc
cmp
or
jns
adc
push
push
xchg
pop
mov
mov
add
lods
and
xchg
mov
pop
fstl
sub
push
push
ss
inc
test
pop
fldenv
js
cmp
arpl
sub
daa
arpl
sti
shr
lret
imul
les
ret
addb
test
and
xchg
imul
cmpsb
or
pop
lds
cmp
dec
lcall
mov
xchg
inc
pop
sbb
idivl
rol
or
out
es
daa
fwait
pop
popa
outsb
jne
or
jae
and
movb
outsb
sahf
rclb
ret
dec
mov
fbld
rcr
and
sbb
cmp
xor
fsubrl
pop
stos
rcr
xor
and
xchg
cmpsl
cmpl
or
js
in
push
mov
push
pop
clc
and
std
jnp
ljmp
jo
mov
outsb
dec
or
in
jbe
lahf
mov
fsubl
shlb
arpl
inc
je
aam
xor
sbb
iret
mov
pusha
imul
pushf
ss
hlt
dec
addr16
dec
mov
lods
lods
fcomps
cmp
rcll
adcb
das
push
push
pop
sbb
lock
outsl
test
shrl
pop
xchg
xor
jg
cld
mov
xor
shlb
lock
adc
std
shll
pop
push
mov
sub
shl
mov
xlat
ret
ret
shrb
cmp
xor
mov
sub
inc
dec
aad
sbb
ret
mov
pop
inc
stos
mov
cwtl
std
dec
adc
test
pop
ficoms
xor
push
or
inc
sti
lret
fdivs
or
icebp
leave
jl
test
sbb
in
lea
stos
push
push
call
cmp
lahf
push
mov
mov
lods
mov
mov
aam
and
mov
dec
mov
test
jmp
push
pop
pop
jno
inc
repnz
dec
outsl
add
mov
enter
dec
sbb
in
mov
mov
aas
pop
insl
ret
and
dec
in
stos
ja
lds
popa
popw
pop
mov
fcompl
out
ficoml
jnp
ljmp
sbb
fmulp
pop
fistpl
ficoml
mov
cmpsl
dec
jle
ds
dec
ret
arpl
popa
dec
mov
or
add
and
and
fldl
sub
out
xlat
int
xor
xchg
mov
push
repz
hlt
repz
cmpsl
lcall
iret
lds
jb
jno
js
jecxz
jge
xlat
nop
push
int3
fmuls
ret
aas
jnp
lea
in
or
xor
mov
add
xchg
jae
sub
dec
and
jle
adc
inc
in
push
stos
inc
pushl
filds
jbe
pop
jl
std
mov
add
xchg
in
fidivl
and
mov
int3
sti
xchg
jmp
test
push
pop
mov
repnz
movsb
jo
mov
nop
dec
mov
push
cld
daa
jge
adc
add
shrb
test
sbb
cmpsb
sub
fcompl
xchg
clc
add
mov
ds
in
or
push
ss
mov
jbe
popl
pop
ss
dec
jae
dec
push
shll
push
sbb
leave
fidivs
mov
adc
jg
jmp
cmc
out
add
or
or
cwtl
je
push
sbb
sbb
out
dec
xchg
push
mov
and
xor
aas
inc
int
subl
je
ret
scas
hlt
ss
jecxz
mov
add
push
pop
push
inc
sbb
inc
or
jmp
sub
xor
das
imul
or
je
fwait
shlb
inc
shll
cwtl
mov
cltd
int
xor
adc
out
and
pop
cli
dec
jnp
aam
xchg
daa
pop
push
pusha
imul
js
cmpsb
xchg
ror
sbb
gs
push
pop
push
sbb
loope
sti
add
jecxz
mov
mov
mov
adc
and
dec
push
aam
inc
dec
jecxz
in
cmp
jne
or
in
add
cmp
sarl
and
inc
mov
cli
enter
repnz
mov
sub
cwtl
mov
pushf
inc
or
mov
fwait
mov
movsb
subb
jg,pn
aas
lods
inc
outsl
pop
clc
cltd
repnz
aad
mov
mov
sbbb
hlt
and
decl
mov
inc
movsb
mov
mov
mov
rolb
and
cld
pushf
rol
stc
dec
aad
sub
jmp
fs
xchg
xchg
imul
imul
leave
mov
dec
in
aas
iret
or
mov
jno
scas
iret
sub
dec
es
icebp
sbb
lahf
dec
popa
pop
mov
or
sti
sub
mov
and
jp
sub
ljmp
jle
into
add
sub
dec
and
mov
push
mov
or
cli
out
jbe
push
fldt
or
jns
xchg
adc
xchg
cld
push
push
cmpsl
add
aam
in
cwtl
stos
and
test
iret
sbb
push
mov
jmp
fdivrs
mov
addr16
jmp
push
cwtl
fs
mov
popa
call
push
stc
and
js
sti
out
dec
cli
xchg
into
popf
fs
jp
loop
mov
scas
das
ret
stos
fistpl
nop
movsb
cmpb
icebp
arpl
cmc
aas
jb
jl
daa
mov
stc
jge
xchg
frstpm(287
push
cmpsl
and
jns
dec
or
fwait
aam
push
not
mov
inc
into
add
insb
cmp
jl
pop
xorb
dec
lahf
dec
pop
or
addl
daa
xrelease
loopne
pop
adc
lahf
xor
fsubrl
out
xor
add
aad
sar
mov
jne
rclb
dec
adc
cmp
mov
addr16
inc
fldcw
out
cmp
clc
fcoms
daa
ror
out
lock
stc
or
cmc
mov
mov
jmp
lods
and
mov
nop
xchg
cli
xor
ret
jecxz
out
orl
push
mov
shrb
sub
or
gs
test
or
add
mov
dec
and
mov
dec
mov
ret
cmp
iret
aaa
mov
jl
dec
movsb
xchg
inc
sbb
rolb
pop
loopne
add
jb
mov
addr16
xchg
fisubs
cwtl
and
jmp
lods
imul
or
cli
or
jmp
and
mov
in
adc
sub
icebp
pop
loop
add
mov
xor
lods
mov
lods
mov
imul
ljmp
inc
xor
mov
or
lea
mov
cwtl
lds
jp
int3
adc
leave
cli
pop
sahf
sub
dec
aad
xor
push
and
push
jg
in
inc
inc
dec
mov
and
fadds
inc
popa
mov
add
fldl
stos
dec
push
dec
pushf
mov
or
bound
call
jge
pop
jmp
jp
mov
dec
mov
add
insb
imul
cmc
in
hlt
push
fstpt
sub
dec
test
xchg
rcll
cld
jne
mov
push
jae
pop
jg
pop
je
rcrb
pop
cmc
dec
dec
cmpsb
xor
cmp
adc
xchg
xorl
add
push
sub
or
pop
mov
pop
xchg
cli
int3
mov
inc
push
inc
mov
mov
inc
les
or
lcall
fdivrs
push
cmp
adc
mov
xchg
sbb
mov
call
pop
jl
loop
xchg
sti
xor
lods
xchg
add
sahf
jb
push
out
cmp
ret
mov
fildll
or
fwait
dec
loope
shlb
ss
pop
scas
pop
xlat
in
mov
movsl
cmp
mov
mov
das
les
or
pop
pop
insl
mov
mov
rcll
into
fldcw
into
lcall
sub
pushf
mov
imul
cwtl
add
jo
int
mov
mov
jne
dec
sbb
sbbb
aaa
and
inc
and
test
shlb
mov
pop
push
std
test
mov
jmp
xchg
jne
sbbb
in
cmc
lock
loope
mov
jne
dec
pushf
ja
rclb
pop
adc
lret
rolb
movsb
mov
mov
inc
push
bound
test
cs
mov
scas
jae
mov
xchg
loop
adcb
shrl
sub
add
cmp
pop
ja
les
outsb
push
gs
in
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
cld
inc
adc
mov
addl
cmovg
mov
jge
fisttpl
pop
aaa
and
in
lea
xchg
jne,pn
jmp
leave
cwtl
mov
aaa
aas
xchg
stos
insb
jae
scas
ret
lret
mov
mov
xbegin
xchg
das
cs
movsb
jb
stos
xchg
icebp
popa
jle
bswap
roll
mov
frstor
cs
jb
inc
and
lods
adc
inc
add
loope
shl
dec
lahf
cmp
test
pop
out
jp
lods
xchg
and
scas
mov
int3
adc
inc
in
inc
push
sbb
sbb
adc
call
adc
jmp
jns
ret
cmpsl
cmp
xchg
fsubs
test
stc
mov
push
jg
add
das
mov
dec
pop
ret
mov
insb
mov
scas
pop
mov
adc
roll
push
movsb
mov
sub
add
call
jne
aam
jno
mov
ja
sbb
cld
push
xor
mov
mov
push
sub
adc
repnz
jne
adc
inc
xchg
pop
and
jmp
mov
mov
adc
addb
cwtl
cmpb
mov
cld
mov
imul
aad
mov
jp
fs
mov
cmp
adc
repz
and
rcll
jnp
pop
pushf
enter
addr16
pop
jle
cmp
inc
sbb
mov
or
mov
sbb
cmpl
xchg
adc
jne
mov
icebp
orb
fst
loop
inc
push
cmp
nop
mov
jo
add
test
pop
test
call
sahf
movsb
pusha
jmp
rorb
pop
mov
test
jl
lahf
aam
lahf
ja
jno
xchg
enter
ljmp
int3
or
push
push
nop
cmp
add
xchg
in
sbb
mov
push
mov
jb
dec
lds
mov
xlat
mov
mov
sub
dec
testl
mov
addb
mov
insl
dec
sub
push
dec
js
inc
sub
xor
pop
rcr
pop
jne
xorb
out
or
stc
add
cmp
fwait
test
pop
mov
mov
sbb
or
fnstcw
lea
jp
push
int3
xor
jbe
adc
add
clc
add
push
and
add
sbb
rolb
arpl
shrl
roll
mov
in
ss
dec
mov
imul
ss
repnz
adc
ljmp
and
push
add
out
sub
dec
mov
int3
fnstcw
jo
cmp
sub
jbe
mov
mov
xchg
scas
lods
cmp
push
in
jmp
xor
or
inc
mov
inc
push
ljmp
pop
push
lret
jg
inc
dec
inc
sbb
das
insl
shlb
imul
icebp
mov
out
in
pop
lods
jmp
or
mov
ja
fstl
mov
and
leave
pop
repz
ffreep
fadd
xor
push
pop
test
sub
rcrb
fisttpl
pop
scas
ficompl
mov
mov
add
ret
cmp
jnp
jg
in
jb
push
lods
xor
jle
pop
cmpsl
lret
popaw
pop
add
mov
adc
rol
or
stos
or
lret
pop
orb
xchg
and
mov
jbe
jne
cmp
adc
cmc
nop
dec
xorl
fstpt
and
xchg
sbb
loopne
int
lret
inc
sahf
outsb
ljmp
dec
es
sahf
sbb
jecxz
add
notb
stos
test
clc
imul
xor
mov
push
mov
cmpsl
xchg
out
pop
push
bound
jno
mov
pop
out
testb
adc
fmul
in
aad
sahf
out
lret
fsubs
pop
cmp
cmp
loopne
mov
loopne
xor
or
clc
xor
jne
shrl
dec
xlat
jecxz
inc
sub
dec
mov
subb
push
xchg
negb
insl
test
jo
call
repnz
popf
xchg
int3
lret
nop
in
cmp
mov
jg
or
pop
and
jg
imul
sti
inc
into
in
test
pop
lahf
mov
or
push
jg
pop
xor
pop
push
cli
mov
nop
fadd
scas
movsb
xchg
lcall
fstl
iret
cmc
xchg
out
cltd
dec
push
xchg
aad
pop
stos
in
push
push
jae
pop
pop
mov
push
lea
xchg
jmp
gs
xchg
push
xor
rorl
in
movsb
inc
xchg
mov
fldenv
leave
push
popa
test
sub
lahf
filds
or
repz
stos
sub
inc
mov
xor
stc
push
in
or
stos
mov
mov
mov
xchg
sbb
inc
negb
adc
test
and
adc
push
aam
push
inc
std
jno
fldt
xchg
lret
test
repz
repnz
lret
mov
mov
or
cmpsb
fldenv
imul
sbb
adc
adc
pushl
lret
ja
add
push
or
or
xchg
mov
adc
push
lahf
jge
add
inc
je
es
inc
mulb
push
popa
dec
into
inc
loope
int
xor
sub
sub
sbb
adcl
dec
mov
dec
lret
rcrl
addr16
push
xchg
hlt
add
mov
inc
ljmp
iret
xorb
out
inc
jnp
sbb
jmp
popf
sub
xchg
cmp
adc
pop
repz
add
gs
dec
lock
ljmp
jnp
mov
cwtl
rcrb
mov
push
push
push
enter
sbb
jmp
outsb
mov
jle
jb
adc
or
push
jp
jns
cmp
cmp
jmp
push
mov
imul
add
jmp
stos
inc
adc
ja
popa
bound
loope
dec
add
push
lods
mov
dec
add
rclb
or
adc
or
inc
xchg
jns
jno
loop,pt
repz
int3
rcrl
add
pusha
sbb
daa
idivl
adc
and
out
aas
cmpsb
insl
mov
mov
aaa
jne
mov
or
sub
inc
adc
mov
mov
inc
dec
sbb
fcmovbe
rorl
out
mov
adc
xor
push
fadds
int3
inc
cld
jl
lahf
lcall
mov
mov
rol
sarl
jg
xchg
lea
fstpl
xor
add
cs
icebp
in
mov
insl
iret
xchg
sub
sbb
mov
xchg
cmpsl
mov
scas
xchg
xchg
mov
adc
cmp
pop
cmp
xor
loop
orl
sbbb
xchg
es
aas
sbbb
test
jecxz
xor
fwait
xchg
inc
loope
mov
mov
test
fldenv
not
mov
push
push
xor
jbe
fidivl
and
fbld
cmp
xchg
sbb
add
stos
add
cs
ss
aam
aad
add
pop
mov
mov
stos
lock
fdiv
pushf
mov
lock
insl
insl
dec
nop
sahf
cmp
or
adc
sbb
mov
xor
cmp
mov
sbb
mov
adc
jnp
push
sbb
pop
out
or
aam
fstpt
cwtl
sub
sub
cmc
jl
dec
mov
fldt
imul
inc
and
lds
jecxz
scas
ret
push
dec
xor
dec
dec
cmp
mov
jne
add
call
lcall
je
mov
int3
mov
xchg
out
cwtl
fwait
cli
out
cmp
mov
rcrl
jecxz
pusha
call
fs
mov
das
xchg
aad
addr16
jmp
sub
inc
pop
adc
orl
dec
dec
test
sti
popf
arpl
dec
sbb
push
mov
ja
fcomp
jmp
push
adc
cmpsl
repnz
mov
or
pop
or
pop
jbe
aas
int
mov
testl
fwait
hlt
es
mov
and
out
jbe
pop
fdivrl
mov
aad
ret
cmp
pop
cmpb
inc
push
and
adc
jmp
cs
push
and
xor
divb
pop
pop
adcb
jge
push
add
inc
cmp
aaa
jnp
xchg
repnz
push
jle
cmc
imul
mov
enter
movsl
push
add
repz
mov
push
lods
stos
add
ret
pop
pop
or
insl
pop
leave
ficomps
lsl
stos
mov
adc
stos
mov
jg
add
ret
std
xchg
cld
add
push
or
pop
cmp
or
mov
adc
or
and
and
pusha
lcall
mov
jmp
ret
mov
repnz
push
aaa
cmp
int3
mulb
fiadds
xchg
scas
jg
out
or
popa
jl
in
inc
mov
rcrb
lcall
jle
js
mov
in
lret
ficomps
cmp
push
push
mov
icebp
gs
loopne
lods
jns
sbb
adc
in
stos
je
xorb
js
adc
dec
shr
aas
in
in
rol
pop
lcall
jge
arpl
jae
jae
loopne
xchg
mov
rol
repnz
jl
jno
out
or
inc
jae
pop
into
sahf
pop
imul
xor
jns
mov
leave
rorb
rclb
mov
xchg
pop
adc
mov
data16
out
fucompp
wrmsr
xchg
cwtl
aaa
fdivrl
fnstenv
push
mov
push
sbb
xchg
cmp
frstor
ja
fwait
inc
lock
sub
popf
dec
mov
lods
popf
xor
sub
pop
ljmp
push
pop
inc
jo
mov
lret
sub
fadds
lods
add
or
sti
ret
dec
dec
cli
lahf
jl
clc
jge
js
cmp
or
sbbl
subb
adc
ds
cmp
orl
xor
pop
mov
fistps
xor
jnp
sub
mov
int
jmp
sbb
lods
mov
adc
sahf
sub
addb
mov
dec
aaa
mov
es
jle
shrb
fsubrs
mull
inc
lock
lret
pushf
imul
cmp
lret
ljmp
popa
xchg
adc
push
xchg
out
mov
lock
fsts
pop
jmp
add
dec
pop
aas
cmp
push
mov
repz
push
arpl
jbe
imul
add
add
aaa
mov
sahf
andl
out
lea
and
jmp
daa
mov
mov
cmp
cs
mov
jp
mov
sub
into
filds
sbb
add
push
pop
inc
stos
cmp
dec
inc
pop
faddl
cmpl
jne
pop
aad
mov
mov
shlb
jne
mov
mov
lret
lret
inc
arpl
sbb
or
mov
test
jecxz
sbb
repz
lcall
push
in
sbb
mov
dec
mov
outsl
testl
xor
aad
pop
or
adc
cmp
pop
scas
call
sahf
rcll
int3
js
enter
dec
mov
adc
dec
sbb
sub
ret
xor
out
fidivrs
in
bswap
enter
ret
cmpsl
push
mulb
fwait
gs
mov
int
or
add
jmp
out
dec
adc
lock
adc
mov
add
xchg
andl
insl
fidivl
sbb
cmp
rcl
lret
jp
jno
test
push
pusha
jp
jae
ja
enter
sub
mov
jle
xor
aaa
jge
lods
pop
and
flds
in
mov
pop
leave
repz
mov
and
push
mov
pop
ret
mov
dec
mov
jp
hlt
cmp
cmp
insb
vpsrlw
jns
call
lret
push
xlat
pop
scas
test
stos
aas
das
add
mov
or
clc
mov
cmp
rcrb
mov
das
mov
sub
fdivs
lods
add
xchg
lea
cltd
lahf
push
fidivl
shr
out
call
cmp
out
fldl
push
popa
out
aas
rcll
mov
push
ficoms
sbb
mov
xlat
xchg
push
lret
imul
in
add
add
sbb
sbb
dec
xor
xlat
xacquire
jp
cmp
scas
pop
mov
dec
push
fisubrl
xor
xchg
pop
mov
dec
push
adc
aas
stos
sub
sbb
je
jno
sbb
div
nop
test
rclb
sti
aaa
mov
mov
lea
into
ljmp
mov
cmp
test
pop
jl
frstor
addr16
push
cmpsl
cmp
nop
gs
xor
das
xchg
fildll
ja
mov
sbb
push
js
ljmp
test
xor
stos
cmp
xor
frstor
jg
jp
add
cmp
movl
leave
push
or
push
dec
mov
xorl
sbb
add
test
scas
fistps
mov
andl
ja
adc
ljmp
xorl
lock
lea
push
rcll
es
cwtl
jecxz
shrl
repz
insl
loope
popf
les
add
lods
push
xchg
push
pop
inc
pop
lock
lods
data16
sbb
jecxz
fdivr
out
mov
adc
cmpsb
call
mov
sub
bound
and
into
pusha
add
ss
notb
out
cmp
sbb
push
xchg
sbb
xor
shll
fidivs
pusha
sbb
sbb
fucomip
and
xor
dec
sub
push
fdivrl
mov
cmc
fildl
bswap
jp
dec
mov
or
mov
pop
andb
jl
call
adc
rorl
test
fmuls
xor
pop
adcb
in
pop
lret
out
or
sbb
scas
aam
imul
fdivrl
mov
bound
es
test
ljmp
outsb
xchg
ret
sti
sub
xchg
mov
shrb
jae
pop
cmc
inc
fdiv
add
fimull
dec
ljmp
mov
or
lods
loope
js
stc
mov
pop
mov
nop
je
xchg
movsl
or
cmp
xchg
lcall
imul
insb
addb
or
and
mov
jl
fs
mov
pop
into
jp
pop
jae
popa
dec
mov
or
add
daa
fwait
call
jb
xor
xor
mov
mov
mov
adc
imul
xlat
sbb
aaa
jmp
adc
sti
cmp
seta
or
pop
dec
fidivl
jle
ficoms
dec
lods
push
or
dec
pop
fwait
or
negb
and
sbb
push
ror
gs
pop
jbe
mov
lods
push
adc
ret
push
jne
fiaddl
adc
iret
in
push
xorl
mov
out
xor
sub
mov
jne
push
cmc
insb
and
xchg
lret
aaa
js
mov
pushf
sarl
pop
aam
clc
mov
out
into
rolb
out
push
jnp
loope,pt
dec
mov
xor
filds
addb
jnp
jmp
imul
in
filds
mov
in
int3
jno
inc
cmp
push
inc
hlt
and
sub
out
push
sub
xchg
outsl
xchg
mov
xor
lcall
mov
sbb
mov
mov
aaa
ja
inc
xchg
mov
stos
cmp
adc
je
sarb
jmp
inc
push
xchg
frstor
adc
dec
outsb
mov
and
push
mov
sbb
jl
pop
inc
xorb
lock
es
and
test
adc
pop
cli
mov
adc
sub
mov
mov
push
and
dec
mov
inc
inc
sbb
mov
repnz
push
hlt
sub
mov
das
or
xchg
cmpsb
out
and
sbb
les
lds
cltd
jmp
addb
out
jge
push
sub
popf
mov
adc
rcr
or
adc
testb
sub
mov
lcall
shlb
sbbl
sti
or
jecxz
popa
cmc
mov
dec
jbe
daa
es
push
aas
sub
xchg
adcb
out
fwait
aas
dec
mov
call
xor
mov
ja
jl
fwait
pop
mov
dec
popf
repnz
cmp
or
mov
and
out
notb
mov
in
mov
pop
sub
cld
xchg
in
dec
sub
jp
mov
lcall
loope
xchg
sbb
inc
and
int
jno
xchg
fdivp
mov
insl
mov
faddl
in
popf
in
loope
sub
mov
jl
fwait
scas
js
ds
pop
mov
dec
int
gs
xchg
call
test
pop
daa
loop
pop
adc
mov
int3
pusha
aad
jmp
mov
adc
dec
inc
out
cs
pop
lds
out
lea
xor
jo
or
les
lock
rcll
addr16
insl
inc
xor
pop
pop
in
cmpsl
sub
scas
or
int
xchg
sub
xchg
mov
and
push
cmp
adc
mov
lea
popf
aam
push
pop
push
aam
dec
jl
jle
es
fisttpl
dec
inc
push
push
aaa
es
lcall
push
js
ret
xchg
cmp
mov
movsb
xchg
and
lret
push
mov
addr16
dec
loopne
sub
pop
mov
xor
scas
loop
out
daa
sub
push
fistpl
test
insl
lock
in
popa
mov
mov
icebp
adc
cld
or
mov
xchg
pop
call
pop
pushf
lret
pop
out
fidivs
add
ss
xchg
xor
mov
push
fdivr
hlt
or
pop
jl
sahf
iret
mov
inc
sub
sub
daa
pop
sub
pop
sti
ds
fnstsw
mov
cltd
dec
mov
xor
stos
push
loop
insb
out
push
lds
push
ja
loopne
int3
pop
xor
mov
pop
mov
in
aas
loop
repz
stc
dec
or
mov
lds
mov
out
int3
je
inc
cmpl
mov
rcll
lods
cmp
push
push
inc
jne
cltd
sti
fsubs
ret
mov
mov
add
push
sub
mov
pop
fidivrl
iret
fld
pop
mov
repnz
lahf
fstpt
sbb
xlat
test
ss
mov
lea
jbe
mov
inc
movsl
test
les
and
insl
cmp
mov
xor
xchg
adc
loop
movsb
inc
dec
mov
add
jo
push
mov
jns
test
mov
and
sbb
out
ficoms
jg
imul
arpl
scas
roll
loope
push
mov
or
cmp
loope
js
xchg
mov
enter
sub
loopne
adc
dec
shr
mov
xor
sub
cmp
fwait
mov
in
xchg
cmp
addl
push
into
arpl
js
ret
xor
inc
add
jmp
jge
push
fisubs
sarb
cwtl
das
adc
jg
or
dec
aam
int
mov
inc
pop
out
ret
sbb
dec
mov
sti
push
lea
rcrb
push
aad
jl
subb
rcrl
fldenv
mov
or
scas
mov
insl
pushf
pusha
lahf
pop
rclb
mov
shlb
pop
sub
enter
iret
mov
push
and
dec
lods
cwtl
cmp
pop
or
out
stos
adc
imul
cli
dec
jge
aad
xchg
jo
adc
movsb
nop
xchg
push
xchg
enter
pusha
sub
xor
push
movsl
lea
mov
add
pop
shrl
pushl
cmp
push
push
xor
hlt
mov
aad
lods
mov
sub
mov
stos
imul
nop
or
aad
lea
punpcklwd
cmp
insl
es
into
cmp
cmc
cmpsb
ss
jno
test
outsl
pop
jno
test
add
adc
fsubr
and
mov
loopne
push
jmp
std
cmpsb
test
inc
loope
or
cld
mov
aam
jne
or
daa
add
xchg
je
sub
jno
test
pusha
sbb
out
push
outsb
aaa
cmp
jo
xor
inc
jae
mov
sbb
inc
dec
aad
pop
jbe
push
out
gs
or
sub
sarb
sbb
inc
mov
out
clc
loopne
repz
jecxz
xor
inc
pop
and
and
imul
insl
jo
cmp
ss
cwtl
cmc
xor
dec
add
xchg
mov
xchg
mov
pop
popa
loop
fstl
cwtl
adc
stc
ret
cltd
xchg
adc
dec
xor
dec
jo
sbb
or
cs
aas
inc
sbb
sbb
cmp
cmp
mov
cwtl
lcall
js
cmp
pusha
ret
inc
xchg
out
gs
lret
stos
jne
mov
jnp
leave
enter
notl
xor
inc
aam
jno
adc
pop
or
outsl
je
arpl
and
fs
fistpl
out
mov
mov
mov
xchg
mov
dec
fsubrl
add
jnp
sub
fs
aas
es
lods
bound
fcmovb
inc
ret
inc
in
lock
leave
mov
pop
jns
pop
add
xchg
es
leave
inc
push
cltd
jl
shll
or
int
push
leave
pop
push
xor
lods
mov
mov
fldt
mov
sti
xchg
dec
cmp
xor
cmp
out
lret
adc
movsb
insb
movsb
jb
mov
imul
dec
dec
mov
mov
xchg
cs
dec
pushf
imul
call
pop
push
fisubrs
sahf
int
sub
popa
aas
vmovshdup
aam
mov
add
cltd
aad
into
aaa
xor
cwtl
cld
js
popf
shl
in
jecxz
sbb
nop
leave
bound
pop
sahf
aaa
orl
sahf
dec
inc
pop
xchg
cli
pop
aad
xchg
inc
lea
pop
int
mov
dec
pop
or
das
ret
xorb
and
push
cmp
cmpl
sahf
jno
loopne
hlt
add
das
inc
add
pop
cmp
outsl
mov
cmpsl
aad
pop
cmc
dec
packuswb
ror
cmp
mov
lods
imul
xchg
and
jns
rolb
rcrb
add
stos
sub
mov
jge
repz
mov
aad
sub
jo
xchg
cli
adc
sahf
rorb
hlt
les
pusha
scas
sti
hlt
cli
sub
stc
push
sbb
inc
mov
jecxz,pt
and
xchg
inc
or
xlat
push
xor
cli
addl
inc
jno
lret
xchg
pusha
sub
mov
scas
pop
movb
iret
inc
test
and
std
lahf
inc
jbe
mov
div
mov
scas
out
pushf
iret
in
or
lcall
mov
lret
int
jmp
xchg
xor
aam
es
mov
push
out
and
in
out
jbe
mov
push
fwait
push
and
and
push
xchg
pop
sbb
loope
dec
stc
popf
sbb
xor
mov
lods
inc
inc
mov
sbb
lret
sbb
je
ret
and
shlb
popf
imul
adc
or
test
ss
loop
lds
push
sti
pop
or
jmp
jge
shll
movl
out
jmp
call
test
jle
addl
xor
mov
popf
ja
xchg
out
sbb
ret
jne
pop
and
lret
cwtl
xchg
out
mov
xchg
stc
pop
faddl
loopne
pushf
pop
aas
jbe
shlb
cmp
mov
mov
ficoml
mov
jo
imul
mov
mov
rclb
fdivs
mov
loop
ds
add
jo
into
pop
xor
iret
mov
add
mov
clc
popa
test
jmp
outsl
cmp
xchg
inc
and
pop
mov
hlt
xor
xlat
push
mov
arpl
and
fistpll
mov
xor
mov
pop
or
inc
out
aam
inc
out
rcll
fldl
jle
testl
push
in
sub
adc
sahf
ja
sbb
popf
jmp
jo
xchg
inc
lods
push
add
out
pop
mov
adc
or
ja
inc
mov
cmp
add
lds
push
sbb
sub
imul
dec
push
fwait
lret
ret
xor
pop
push
inc
scas
shlb
cld
jp
jge
adcb
push
cmp
push
dec
pop
loope
clc
cwtl
mov
mov
lods
stc
fstl
aaa
les
cmp
sub
add
xor
movsl
lds
lea
cli
mov
mov
lret
popa
push
jns
es
pushf
arpl
or
xor
sub
outsl
shll
xor
loopne
sbb
out
xor
adc
imul
push
insl
xchg
and
popf
pop
cltd
mov
lods
das
loopne
mov
adc
mov
call
test
ljmp
jge
and
inc
mov
adc
pop
std
inc
xchg
xorb
xor
aaa
add
xchg
mov
and
and
add
insl
mov
out
fisttps
cwtl
jno
cwtl
pop
pop
fadd
ds
push
cmpsb
lock
jmp
push
outsl
test
rorb
lds
lds
pop
sub
push
stc
mov
jo
dec
and
cli
adc
cmpsl
outsb
hlt
add
jp
in
and
or
leave
flds
xor
repnz
and
mov
adc
dec
shll
sub
xchg
ror
sbb
popa
outsl
cmpsb
push
ss
insl
sbb
lock
and
inc
xor
mov
pop
mov
jg
mov
cmp
iret
in
insl
das
xor
push
xor
es
cmpsb
add
mov
xchg
int3
lcall
je
in
cld
cmc
pop
cwtl
repnz
das
xchg
mov
inc
call
dec
shrb
lock
fwait
xchg
bound
and
jg
icebp
aas
cli
mov
xor
cmpsb
jmp
or
lret
mov
les
inc
scas
pop
call
sub
scas
mov
loope
out
pop
in
aaa
xlat
lods
dec
mov
pushw
add
jp
ret
xlat
xor
xor
jecxz
repz
add
test
mov
jl
cmp
lea
scas
dec
fcmovu
pop
js
repz
fstp
xor
loop
call
neg
insb
pop
mov
add
push
sub
push
loopne
insb
movsb
pusha
imul
arpl
adc
fsubl
cld
sbb
stos
test
incl
dec
sub
mul
jne
addr16
mov
ds
out
xchg
adc
dec
test
scas
ret
mov
and
adc
mov
sub
ds
int
xchg
push
xor
inc
dec
sbb
cmp
xor
cmp
sbb
lret
into
push
mov
test
repz
sub
mov
xchg
icebp
outsb
fbstp
test
scas
pop
push
repz
push
test
pop
or
leave
mov
out
pop
and
lods
mov
sarl
popa
int
add
add
xchg
sbb
out
sub
out
outsb
rcr
pop
les
rolb
out
shrl
fistpl
in
mov
lcall
push
cli
xchg
mov
scas
js
imul
cs
in
pop
loop
shrb
lds
loopne
jo
je
imul
imul
inc
or
int
std
rcll
dec
clc
adc
mov
loop
pop
and
fldcw
inc
sub
jno
xchg
dec
adc
inc
dec
and
add
lahf
aad
push
js
xor
cmpsb
test
orl
or
insb
popf
sub
cmp
out
push
push
sbb
addr16
jp
jge
inc
jg
wrfsbase
jnp
jg
clc
xchg
sbb
jo
inc
jae
xor
and
insl
adc
jg
pop
add
imul
push
hlt
sbb
jp
lods
fcmovbe
mov
das
mov
inc
adc
mov
push
loope
and
or
add
dec
xchg
mov
dec
mov
jbe
jge
mov
jo,pt
sbb
or
mov
jl
fwait
pop
push
insl
pop
lret
rcl
jne
sbb
out
inc
js
cmc
xchg
inc
dec
int
pop
loopne
cmc
in
adc
pop
mov
fistpl
je
push
xchg
mov
js
or
bound
add
adc
roll
aaa
cmp
cli
lea
jb
jnp
mov
xor
mov
cmp
aas
mov
sub
push
cs
mov
clc
lods
pop
push
arpl
test
aaa
insb
or
add
sbbl
push
adc
bnd
imul
in
xchg
pop
push
shlb
cltd
xor
arpl
and
cmp
adc
clc
xor
hlt
out
sets
mov
arpl
inc
mov
add
adc
or
adc
xchg
pusha
xchg
push
pop
add
dec
sbb
xor
pop
enter
packssdw
sbb
and
xlat
push
mov
dec
dec
data16
pusha
fnstsw
dec
popa
mov
add
fwait
inc
mov
test
or
sub
adc
fxch
shlb
xchg
loopne
movsb
sub
popf
sahf
loopne
mov
mov
mull
cmpb
add
mov
into
mov
cmp
in
scas
dec
push
sbb
rclb
popf
icebp
mov
cmp
dec
sbb
pusha
aad
sub
jl
fs
dec
mov
pop
push
push
fsubrp
repnz
xchg
lret
sbb
scas
add
pop
xor
inc
loopne
dec
cmp
cltd
aas
ja
add
sub
out
adc
gs
cli
pop
cli
jns
into
outsl
push
or
fimull
test
add
and
add
mov
and
cmp
mov
test
and
mov
insl
hlt
mov
movl
sahf
std
jnp
mov
notb
loope
arpl
cli
mov
in
inc
mov
sahf
shll
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
lahf
inc
aas
scas
addl
pop
ret
adc
adc
push
fnstcw
fdiv
push
add
push
jecxz
adc
fildll
cmpsb
out
cmpl
les
mov
cld
jmp
out
or
fnsave
cs
or
icebp
jno
xchg
cld
nop
xchg
jecxz
mov
stos
cld
cmpsl
xchg
sub
ja
lcall
shll
cltd
stc
jae
push
lods
mov
mov
pop
pusha
sbb
fwait
jnp
mov
scas
xchg
inc
mov
pop
inc
jp
jbe
cmp
push
shl
sub
mov
insb
xor
jne
shrb
mov
fstpt
sub
mov
or
in
stc
iret
loop
or
push
icebp
dec
add
icebp
mov
es
xor
repnz
fsubrl
addb
dec
mov
sbb
inc
decb
jbe
les
jp
xchg
push
sub
and
movsb
fs
mov
inc
test
sarb
xchg
test
adc
and
and
repz
lods
shll
mov
dec
scas
and
sub
pusha
bound
cs
neg
mov
fldlg2
loope
cs
sbb
inc
hlt
push
stc
jbe
test
aad
aad
xchg
cs
stc
or
fsubrl
scas
pushf
pop
xchg
pop
or
xor
cmp
mov
imul
fldenv
cmp
dec
loop
xor
cmp
sub
mov
lods
cmpsb
enter
inc
mov
data16
rolb
xor
int
and
insb
or
push
les
mov
xchg
icebp
or
cmpsl
cmovs
iret
sub
popa
ljmp
ljmp
mov
and
xor
and
dec
pop
xchg
mov
inc
jle
ror
push
push
dec
sub
mov
pop
add
adc
pop
cmp
jle
lods
xor
xor
pop
int3
imul
pusha
jne
mov
cltd
out
aad
and
jns
add
lcall
push
in
cmovne
xchg
mov
push
lds
mov
mov
mov
outsl
aaa
jmp
test
out
mov
cmpsl
add
xchg
in
jle
dec
filds
lods
cmp
mov
imul
jae
movsb
dec
out
jns
jecxz
nop
dec
neg
out
adc
int
inc
or
adcb
in
cmp
cmp
das
in
clc
js
test
jecxz
in
nop
or
std
and
push
sarb
and
insb
inc
scas
rorl
inc
push
sbb
or
lods
mov
dec
neg
jbe
and
mov
ret
xor
lds
and
cltd
add
inc
pop
adc
gs
ljmp
mov
dec
cs
push
xor
add
testl
or
cmp
cmc
push
in
popf
and
xchg
mov
lret
in
add
in
mov
rorl
daa
adc
cmp
fdivrl
rcl
fisttpll
into
sbb
shlb
das
out
into
bound
imul
push
xchg
sahf
cmpsl
mull
gs
mov
inc
add
push
xor
jae
inc
jae
shll
xchg
mov
mov
out
gs
sbb
sbb
pop
push
push
ret
ret
mov
and
pop
xchg
sti
les
mov
or
scas
dec
mov
jo
mov
pop
ret
xor
xchg
test
mov
dec
sub
mov
pop
loope
sub
push
and
mov
iret
out
add
add
mov
popa
cmp
mov
test
outsb
mov
jmp
cld
push
add
mov
insb
jg
or
jg
xor
adc
adc
stos
and
mov
scas
je
hlt
ficompl
dec
out
push
sub
inc
nop
in
xor
cmp
jmp
mov
cmp
dec
mov
mov
adc
mov
das
in
addr16
je
hlt
xchg
xchg
data16
push
xor
fsubl
dec
cli
cmp
imul
hlt
test
mov
fidivl
hlt
or
pop
cmp
mov
push
push
pop
sub
or
repz
rorl
adc
loope
jne
je
xchg
inc
insb
jmp
rcll
addr16
xchg
lahf
mov
addb
lods
xor
xchg
cmp
movsl
lods
shr
dec
jae
ret
shll
xor
and
ret
xor
mov
je
ljmp
push
and
or
lock
lea
nop
faddp
push
sub
cmp
ja
and
or
mov
and
leave
mov
insl
lret
mov
inc
sub
xchg
cs
cmpsb
xor
add
mov
fistpl
addr16
push
and
scas
call
inc
mov
repnz
lods
aaa
xor
cli
xchg
rolb
and
cmp
and
shl
lods
das
mov
push
sub
pop
jmp
dec
lret
out
std
rcll
mov
cltd
subl
jae
sbb
fwait
xor
xchg
sbb
das
fs
clc
repz
push
push
sbb
sub
and
dec
icebp
xor
fsubl
xor
in
sbb
xor
mov
jmp
cli
mov
sbb
cli
in
adc
fisubs
push
or
into
test
jge
movsl
jo
push
fwait
sti
arpl
cmpsl
loop
cli
pop
test
mov
inc
adc
mov
mov
sub
and
cmp
lds
je
dec
setp
cmp
roll
jecxz
and
imul
and
inc
xchg
into
inc
loope
scas
push
std
xor
out
add
pop
nop
insl
dec
lods
fnstcw
and
mov
rolb
push
in
jl
dec
mov
push
mov
xorb
push
jne
add
pop
add
cmpsl
test
mov
sahf
jl
ljmp
adc
fcomip
enter
jg
ss
fisubs
cmp
dec
sbb
mov
jg
stc
xchg
jp
xchg
inc
sub
sbb
jae
sub
xor
adc
call
lock
popa
test
ds
jmp
bound
sbb
or
out
loopne
stos
stos
and
lds
cs
sub
das
cmp
and
shr
out
in
pop
mov
cli
adc
mov
cmpsb
ret
pusha
test
mov
call
push
test
xchg
jp
add
in
fs
mov
mov
mov
push
and
push
out
fwait
jp
mov
pop
je
fdivs
adc
inc
lods
or
leave
mov
adc
mov
fnstsw
daa
cmp
lcall
push
cmp
dec
mov
cmc
dec
mov
js
sub
jle
push
stc
fcomps
fistps
jne
shrb
mov
mov
pop
add
sub
mov
mulb
mov
add
cmp
out
ret
pop
repnz
cmpsl
mov
enter
pushf
mov
push
cmp
jecxz
inc
add
sbb
add
adc
pop
daa
outsb
cmp
ds
icebp
imul
inc
pop
xor
inc
jns
dec
aam
jp
cmc
mov
jmp
or
mov
inc
js
popl
lret
jbe
jmp
rcrl
adc
xchg
jo
pop
out
dec
push
cs
cld
add
imul
pop
mov
or
inc
in
jne,pt
call
jno
shrb
cs
mov
sbb
lahf
sub
scas
lahf
ljmp
test
xchg
fisubrl
cmpsb
fs
clc
cmpsb
adc
cmp
mov
hlt
jo
dec
out
inc
sbb
pop
lea
mov
jl
add
jp
adc
cmpps
mov
rcrl
in
mov
cmp
into
xor
inc
out
test
popf
imul
push
insl
int
push
and
std
mov
cli
incb
aad
mov
push
mov
out
pusha
shll
mov
cltd
dec
test
and
sarb
push
lcall
push
scas
jp
xor
xlat
outsb
stc
call
bound
adc
adc
stos
adcb
and
addl
insb
mov
jmp
and
inc
dec
sti
pop
ja
push
fs
or
lods
test
in
jno
jns
fmuls
ja
fcoms
or
xor
das
pop
sub
and
std
xchg
repnz
dec
xorb
xor
imul
sub
sti
or
cmp
aaa
and
mov
pusha
jecxz
leave
mov
shrb
sbb
xchg
aad
imul
fwait
jb
inc
dec
scas
sbb
ret
dec
fs
sbb
push
push
stos
sbb
pop
pop
outsl
jns
xor
es
xchg
sbb
fbstp
push
js
inc
jne
subb
and
scas
outsl
push
push
cmc
shlb
test
jns
xor
xor
add
aaa
pop
call
stc
mov
fwait
pop
int
rcrl
fimull
pop
dec
xor
je
jnp
ret
outsl
mov
stos
stos
mov
adc
push
or
mov
test
xchg
xchg
lods
push
cmp
outsb
test
adc
pop
outsb
lea
dec
out
sbb
daa
xor
aad
das
call
test
jns
add
rolb
adc
loop
dec
iret
sub
je
fst
dec
jl
mov
ja
mov
pop
repnz
mov
clc
cmp
push
mov
adc
fsubrl
stos
push
cmpsl
dec
xorl
mov
add
pop
subl
pusha
rol
enter
cmc
cmc
jle
cli
sbb
mov
sub
mulb
aas
mov
repz
stc
pop
lea
jge
push
pushf
xchg
loope
test
pmulhuw
mov
or
ljmp
mov
xor
adc
xor
jle
or
int
adc
pop
ds
js
lods
mov
jb
fidivs
mov
xchg
pop
mov
loope
dec
lds
int
je
xchg
movsb
xchg
jecxz
scas
cmc
and
fisttps
rclb
adc
add
repnz
imul
mov
dec
mov
mov
repz
mov
bound
and
sbb
cmp
fdivrp
sbb
roll
push
mov
pusha
mov
cli
iret
repnz
jg
sub
fsubrs
popl
pop
or
sbb
dec
pop
push
push
fiadds
mov
sahf
leave
mov
rcrb
cmp
out
xor
mov
pop
stos
pusha
cli
popa
push
xor
adc
or
sub
pop
jo
sub
mov
jp
cli
mov
inc
dec
mov
or
data16
push
ss
cmpsb
mov
cli
arpl
jg
push
push
movsl
xchg
xchg
dec
dec
sbb
ret
test
and
int
cmp
adc
xorb
mov
into
xor
scas
testb
jg
mov
popa
shlb
mov
rcll
not
and
call
cmp
mov
jne
lcall
mov
pushf
aad
test
add
cwtl
addr16
add
imulb
mov
call
mov
jmp
into
sbb
mov
in
sub
cmc
mov
je
movsb
fcmovnbe
add
aas
and
shrl
rclb
lcall
sahf
jl
jno
jne
fsts
leave
arpl
jbe
push
xchg
fs
sub
mov
xchg
jns
push
int
adc
or
shrb
add
sub
test
loopne
sti
jp
adc
call
dec
negb
add
sbb
leave
push
insb
loop
cs
cld
out
cmpsb
pop
shrb
xlat
pop
minps
js
push
cmc
ds
sti
std
sub
ss
add
ret
fs
xchg
cmpsb
sbb
sbb
andl
shlb
shlb
leave
adc
loopne
aam
sbb
lahf
jno
push
flds
cmpsb
push
sub
inc
fdivrs
out
jns
fs
sbb
jp
icebp
cmp
sbb
out
add
icebp
inc
fists
mov
out
cmpsb
mull
xor
ret
cmp
adc
push
adc
jg
loope
xchg
push
js
or
rcll
orb
outsl
push
mov
pop
xorb
push
mov
inc
inc
inc
mov
xchg
negl
cli
xchg
or
scas
jo
loopne
bound
or
ret
pushf
mov
jle
jnp
daa
push
data16
testl
addb
push
pop
pusha
ficoms
bound
mov
xor
push
fimuls
mov
mov
inc
add
and
inc
repz
xor
ljmp
imul
jns
push
stc
push
xor
jnp
pop
pop
and
scas
fdivs
cmp
call
movsb
and
jae
outsl
std
mov
addr16
mov
or
mov
or
mov
lea
and
test
call
fucompp
lahf
hlt
stc
es
xchg
pop
fstps
and
mov
push
mov
xlat
call
fsubs
pop
call
adc
or
cltd
addb
pop
xor
mov
jns
xchg
lret
xchg
push
add
xlat
cmp
jnp
sub
ja
pop
loopne
xchg
mov
jge
iret
inc
push
xchg
pop
inc
mulb
mov
sbb
sub
loopne
jge
pop
ficoms
pusha
pop
adcl
mov
andb
jmp
fistpl
jne
dec
mov
loop
jle
fmull
into
hlt
xor
int
cltd
loop
or
hlt
dec
and
inc
mov
inc
mov
xchg
mov
fsubp
dec
sbb
and
lods
mov
mov
xchg
push
aad
mov
nop
jb
and
subl
sbb
cld
push
test
cmp
inc
popa
dec
pusha
ret
incl
inc
dec
lods
push
add
xchg
out
inc
xor
mov
mov
insb
jns
sub
jne
dec
fidivrs
jp
jmp
jbe
mov
mov
lret
mov
mov
mov
xchg
cmpsl
pusha
scas
lea
addr16
shr
inc
add
mov
mov
push
lods
lea
data16
int
push
test
movsl
or
ret
add
sbb
xorw
lahf
daa
fsubrs
push
dec
dec
nop
loopne
fmull
and
hlt
xchg
outsl
stos
std
add
repnz
mov
fwait
arpl
sbbl
and
imul
js
cs
mov
cmp
sub
sahf
push
sar
sub
inc
mov
mov
xchg
jl
xchg
cs
nop
xchg
ret
sub
into
adc
add
xchg
cmp
mov
dec
pop
mov
adc
scas
xor
sarb
ss
sub
cwtl
pop
push
pusha
and
shll
xor
call
dec
in
cs
mov
sbb
dec
sbb
das
scas
call
fistl
test
and
dec
add
iret
sbb
nop
popf
repz
lea
add
jmp
inc
push
cmp
shr
out
xchg
movsb
cmp
aaa
test
push
jmp
leave
jbe
repz
mov
xchg
mov
add
mov
mov
ret
loopne
inc
jecxz
bound
cmp
gs
and
fsubrl
lods
cmp
fisttpll
sub
xor
mov
rcrb
sbb
dec
rolb
pusha
incl
pusha
xor
fldl
jne
sahf
sbb
js
test
xchg
aas
iret
mov
pop
mov
or
sub
das
cmpl
enter
push
jbe
jb
lds
xor
repz
jae
in
shrb
mov
adc
cltd
aad
pushf
stos
aad
in
stos
fcomps
pop
mov
lods
add
pop
cltd
sub
mov
mov
out
jb
adc
fsubrs
pop
sub
scas
sub
xchg
mov
jnp
push
jb
idiv
and
int3
cmpsb
movsb
lahf
test
push
inc
clc
push
push
cmp
xor
in
enter
das
jno
fs
and
xchg
push
adc
and
scas
repnz
adc
pusha
mov
or
mov
cmp
push
outsb
xchg
cmp
in
je
call
mov
call
ret
sahf
into
pusha
push
insb
adc
and
test
aam
out
scas
in
sub
loop
inc
mov
nop
pop
add
cli
int
daa
jge
mov
popa
mov
in
das
jne
add
addb
test
clc
and
and
inc
mov
ficoml
cmpb
out
mov
out
sub
xchg
dec
addr16
dec
and
add
push
popa
mov
fcoml
sahf
insb
ds
or
jmp
test
lcall
fdiv
and
mov
ljmp
shll
sti
jecxz
and
sbb
mov
inc
loop
dec
divb
imul
add
pop
pop
mov
push
fidivl
xlat
jecxz
les
mov
inc
adc
dec
and
insl
aad
add
das
ss
push
or
jp
cmp
sbb
or
adc
into
jo
dec
jmp
jno
adc
pop
jg
jns
mov
shlb
mov
push
out
fisttpll
jb
push
push
loopne
fs
in
xor
jge
iret
ja
sahf
or
out
jb
scas
push
inc
xchg
xor
pop
ds
jns
mov
daa
stos
fildl
pushw
add
mov
xchg
lcall
jnp
adc
mov
outsl
repnz
inc
sar
call
aaa
fstl
or
popa
or
into
lret
out
imul
jge
xor
adc
ds
shrl
pop
sbb
insl
inc
ffreep
mov
je
xor
lcall
dec
inc
out
or
insb
std
int
inc
sbb
imul
test
int3
loope
xchg
sbb
mov
pop
mov
cmpsb
pusha
loopne
into
sbb
inc
jno
enter
mul
mov
jae
idiv
adc
mov
push
testb
add
jb
and
sbb
stc
push
jp
inc
cmp
jge
cmpsb
add
es
sub
int
notl
lret
xor
or
lds
pop
push
mov
clc
sub
movsb
jae
or
lods
dec
test
jae
pop
adc
incl
mull
or
pop
add
pop
into
pusha
out
push
loopne
decl
pop
lahf
xchg
cltd
sub
mov
adc
add
cs
pop
ror
test
push
pop
in
mov
sub
add
lds
int
dec
jo
stos
sub
mov
jae
pusha
sub
mov
jne
mov
roll
dec
outsl
mulb
xchg
sbb
enter
cltd
mov
mov
pop
mov
fs
mov
pop
sub
scas
outsb
adcb
add
icebp
xchg
and
sbb
and
aaa
test
lret
stc
jle
mov
ret
cmp
push
popf
idivl
add
dec
lods
aam
add
push
arpl
xchg
js
push
cli
pusha
loop
fst
mov
imul
movsl
inc
dec
pop
out
or
cmp
sub
push
outsb
aaa
jle
mov
mov
and
aad
into
xor
inc
mov
push
lret
sbb
fcomps
repz
or
adcb
push
pop
push
jbe
and
fsubs
scas
inc
add
and
xchg
fstl
mov
dec
jo
pop
xchg
xchg
sbb
jbe
lea
frstor
pop
push
xchg
fsts
arpl
add
mov
and
popa
popa
mov
jne
mov
leave
pop
mov
push
scas
jmp
add
idivb
jge
mov
int3
inc
xlat
sahf
mov
pop
ss
arpl
sbbl
aas
jno
mov
insb
nop
sbb
adc
aaa
xchg
scas
mov
mov
or
movsl
xor
pushf
add
jge
sub
out
or
jnp
lret
mov
sbb
sbbb
jo
xor
enter
shll
jecxz
xor
arpl
mov
es
pop
clc
out
push
loop
sub
insb
ret
xor
add
mov
insl
mov
ss
and
jmp
cwtl
stos
mov
jle
xor
mov
fisubrl
sbb
dec
pop
sub
mov
push
addr16
or
jo
imul
and
mov
pop
lea
mov
pop
sti
jae
push
and
and
pop
xor
sbb
ljmp
adc
mov
mov
fists
movsl
push
lods
test
push
sbb
xchg
pop
jle
xlat
xchg
sub
stc
mov
push
sahf
mov
sarb
enter
repnz
cmp
cmc
loop
insb
ja
inc
xchg
out
unpckhps
lds
sub
mov
push
movsb
lock
je
sbb
es
xlat
lods
outsb
js
fisttps
das
sbb
xchg
xlat
cli
scas
mov
stc
lcall
sbb
dec
mov
mov
js
out
xchg
aad
cmp
cld
mov
lds
push
cmc
pop
dec
mov
fisttps
enter
lea
cmp
pop
pushl
cmpsb
push
rcrb
ret
popa
loope
mov
add
icebp
rorb
add
sbb
inc
cltd
mov
imul
pop
cmp
pop
dec
dec
pop
mov
adc
ljmp
mov
mov
jecxz
sub
movsb
sbb
or
out
sub
cmp
sub
bnd
xchg
xchg
ds
jne
mov
imul
ror
pusha
stos
stc
out
test
mov
xor
mov
cmpsb
xor
mov
cs
loopne
xchg
sub
idiv
cltd
mov
repz
mov
into
mov
popf
hlt
mov
fbstp
scas
xchg
stos
cld
lahf
in
dec
addr16
icebp
add
add
ret
dec
push
sub
jb
dec
sub
jle
push
pop
sbb
fwait
es
stos
mov
jg
out
cwtl
add
or
jecxz
rcll
insb
test
fdivl
push
adc
adc
xorb
nop
stc
das
stos
repz
sbb
sbb
out
stc
mov
hlt
jnp
jmp
sub
cld
movsb
pusha
and
mov
mov
lock
scas
pop
popa
incl
dec
xor
xor
xchg
mov
inc
dec
mov
mov
popf
xchg
test
std
sbb
sbb
rcrl
aam
sub
in
cli
ret
inc
cmpsb
mov
std
adc
ljmp
ss
imul
jecxz
push
jecxz
push
push
adc
sahf
xor
aad
jge
test
sub
sbb
cmp
xchg
repz
jno
mov
xchg
out
sub
adc
jns
das
push
das
xchg
sbb
jg
jecxz
in
icebp
mov
cmp
mov
gs
fidivrl
hlt
in
loope
pop
pusha
repnz
sti
inc
sub
push
call
imul
and
clc
mov
jg
mov
lock
in
or
popf
paddw
jne
xchg
call
jnp
and
xor
aaa
cmp
aas
mov
sub
push
das
jo
dec
xchg
mov
shll
fcomps
add
std
adc
xchg
stc
cmpl
xchg
test
mov
cmp
adcl
stos
aam
mov
jns
scas
lods
aas
arpl
pop
rcr
loop
lods
pop
pop
insb
cmpsl
dec
out
int3
popf
ss
and
push
stos
push
xchg
dec
repnz
or
fwait
popa
inc
jl
aas
out
mov
aas
jne
mov
pop
xor
mov
add
jmp
push
add
lcall
imulb
adc
pop
xor
popa
push
mov
xor
adc
adc
fistl
ljmp
cmpsb
sub
imul
push
xor
fimuls
fcomps
in
sub
js
mov
cs
fwait
movsb
pop
rcrb
inc
pop
cmp
test
pop
fs
aam
xchg
in
xor
fidivs
mov
dec
js
adc
jl
arpl
mov
shlb
shlb
adc
in
sbb
pop
std
dec
ljmp
xlat
push
fistl
testl
rol
push
and
shl
fcmovb
ja
pop
sub
inc
sbbl
mov
lret
imul
add
lods
mov
ds
mov
outsb
dec
inc
or
pop
xchg
adc
lcall
jp
add
mov
inc
js
cmc
sub
je
mov
fdivl
cmp
inc
cmpsb
jp
das
out
add
fldl
xor
lea
testb
cmp
sub
mov
ss
insb
push
cmp
add
jle
jns
cmp
gs
xchg
xor
and
movsb
int3
outsl
mov
inc
popa
scas
sbb
sbb
dec
and
add
data16
xor
cmpsl
adc
cmpsb
xchg
lods
or
in
pop
in
test
push
mov
outsl
fdivrs
jmp
jns
mov
mov
in
js
jmp
out
popa
repz
scas
push
xchg
mov
dec
cmp
xor
pop
or
lea
enter
fcompl
and
ret
adc
sarb
jae
xor
adc
lret
jge
mov
jns
jns
lahf
movsb
out
push
inc
inc
enter
fsubl
jns
mov
xor
push
addb
mov
xchg
dec
sbb
aad
jns
jne
pop
sbb
push
push
jno
out
rol
xor
in
push
repnz
adc
cmc
cmp
in
scas
popf
movsb
lods
jecxz
mov
movsl
mov
xchg
add
ss
sub
inc
gs
out
pop
rorb
jns
jmp
xor
mov
inc
inc
jmp
int
leave
jns
xlat
and
lret
xor
xchg
pop
outsb
data16
sbb
push
adc
int
xor
push
movsb
popf
icebp
lods
pushf
js
push
pusha
cmp
pop
sub
stc
sahf
popf
sti
stc
cli
jno
push
lea
pop
push
sahf
in
jg
into
mov
lods
movsl
gs
adc
pusha
sbb
xor
fsubs
xor
pop
scas
repnz
or
out
negb
scas
out
cmp
xchg
sbb
mov
cltd
hlt
inc
xor
aad
es
cld
test
nop
dec
mov
xor
cltd
jecxz
pushf
push
push
ret
inc
loop
fsubl
mov
mov
jne
xor
iret
mov
test
lret
in
cmp
adc
rcrl
iret
or
mov
lea
movsb
loop
and
cmpsb
sbb
hlt
insl
pushf
inc
xlat
fldt
outsl
jecxz
mov
subb
fnsave
jle
push
xor
int3
out
movsb
data16
push
fsubr
jno
jecxz
xchg
push
inc
andb
push
dec
fmull
pop
out
test
hlt
dec
jl
inc
add
jle
mov
lock
das
outsb
ss
adc
xor
push
fldenvs
sub
dec
mov
dec
lods
push
sub
jne
lcall
jns
repz
jae
adc
sbb
and
adc
adc
mov
add
jge
frstor
push
lea
outsb
xchg
lret
sub
imul
hlt
xlat
shll
out
test
xchg
dec
jo
testl
scas
sub
mov
in
add
pop
pop
cmc
and
mov
lods
mov
shlb
or
cmp
cs
je
test
imul
push
ficompl
inc
pushf
fnstenv
or
in
pop
inc
orb
adc
xchg
ljmp
cmpsl
fs
xchg
popa
mov
cmpsl
ds
lahf
cltd
cld
mov
fbstp
lods
push
out
jmp
jmp
test
xchg
adc
addr16
pusha
loopne
push
ja
pop
pop
lret
mov
inc
repz
imull
push
mov
mov
add
mov
push
xor
push
push
bound
ret
sbb
in
ja
mov
push
xchg
fadd
popl
repnz
ss
xchg
sub
or
and
dec
push
or
int3
inc
xlat
ret
xchg
rorl
cmp
push
and
push
jecxz
cwtl
push
inc
sub
loope
aam
movsb
aas
adc
jle
clc
fcmovbe
out
xchg
lock
xor
adc
movsb
push
pop
repz
push
add
popa
inc
ret
xor
mov
mov
loopne
push
dec
inc
sbb
adc
insl
adc
loope
aad
adc
test
repz
sub
mov
cli
shlb
fldenv
aam
adc
mov
fs
sbb
mov
sub
stos
imul
or
and
xor
add
shlb
push
call
shl
xchg
sub
mov
add
shlb
aas
lods
jb
fwait
jb
hlt
pop
jecxz
cs
ds
add
jg
movsb
xor
dec
jp
cmpsb
mov
adc
out
aaa
jns
sbb
test
call
enter
and
fstl
leave
movsl
xor
push
mov
jnp
xchg
movsl
cmp
lock
je
pop
fiadds
rorl
pop
fistpll
inc
xor
mov
mov
hlt
lods
outsb
mov
nop
out
mov
xchg
pop
cmp
mov
stc
in
test
addr16
divb
sub
push
test
bound
xchg
test
mov
call
sub
dec
sti
pop
cltd
push
shlb
js
mov
fstp
xchg
dec
lods
andl
xor
dec
dec
or
sbb
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
testb
addl
sub
lods
jne
jle
inc
movsb
scas
test
inc
jp
pop
mov
push
dec
mov
mov
mov
movsl
enter
idivl
into
cli
stos
lcall
inc
add
adc
cmpsl
movsb
pop
pop
cwtl
cwtl
aam
outsl
cli
popa
mov
and
insb
or
add
das
movsl
mov
mov
dec
ljmp
mov
fwait
arpl
mov
mov
jl
stc
pop
in
xor
mov
push
pop
mov
std
sbb
xor
cltd
test
out
out
jae
xchg
add
imul
push
jno
add
mov
push
inc
repnz
ret
fisttpl
daa
and
pop
push
pop
in
xor
mov
cmpsl
sub
out
mov
mov
imul
or
mov
insb
test
pop
push
cmp
sbb
loopne
add
or
les
loopne
push
mov
and
repz
addr16
aaa
jle
pop
pop
sbb
bound
aam
dec
jle
in
fwait
icebp
js
pop
test
add
pop
dec
jmp
fistps
fisttps
jmp
arpl
pop
fcom
mov
pop
les
dec
iret
pop
loope
test
add
sbbl
cld
add
icebp
andl
jae
mov
cmpsl
leave
jle
push
push
mov
cmp
jg
out
movsl
push
loop
outsb
popf
add
clc
jge
xchg
movsb
clc
fists
test
fisubl
xlat
dec
jle
inc
push
add
ficoml
stos
cmp
pusha
mov
add
adc
out
rorb
push
sub
or
cltd
ljmp
insl
stc
cmp
pop
mov
pop
jp
test
cmp
rcrb
imul
jae
mov
or
or
popf
das
out
scas
sub
or
inc
lods
jecxz
pop
in
mov
testl
push
sbb
cld
pop
icebp
test
jb
mov
fsubl
fidivrl
and
add
clc
adc
inc
jle
sbb
divl
ljmp
xchg
xor
push
int
les
fucomip
inc
sbb
mov
xchg
push
push
inc
pop
subb
in
popa
xlat
lock
mov
js
pusha
aam
cli
sub
data16
mov
fs
inc
jg
sbb
imul
xchg
or
dec
lret
sbb
xchg
mov
cmp
sbb
sarl
mov
into
cs
addr16
xchg
sub
loope
ja
pop
xor
jge
mov
fisttps
insb
leave
rol
mov
cmp
mov
mov
push
arpl
cld
jbe
stos
hlt
and
mov
test
fisubl
cmp
push
dec
je
jle
out
cmpsl
ja
pop
mov
jecxz
loop
js
test
in
loop
xchg
dec
push
cmp
imul
inc
outsb
dec
ljmp
orb
cmp
stos
adc
inc
mov
mov
jnp
add
dec
jb
jecxz
jmp
icebp
add
or
lods
adc
fistpll
test
mov
jo
rcrl
jae
dec
dec
insl
sbb
dec
adcl
push
pop
push
jno
dec
mov
aam
loop
mov
mov
jnp
mov
fwait
push
pop
enter
cmc
out
pop
pop
stc
xchg
mov
jb
jecxz
out
ja
mov
in
push
clc
jne
gs
fdiv
nop
sbb
lcall
xor
incl
jo
xchg
imul
mov
mov
jp
mov
push
popf
lcall
movsb
pop
mov
jns
shll
mov
sub
arpl
dec
cmp
data16
rorl
rcll
sub
notl
into
lds
loop
adc
lods
outsl
push
cmp
insb
xor
lret
scas
andl
add
sbb
add
loop
adc
or
sbb
or
inc
into
int3
das
jb
decl
enter
daa
xchg
inc
sub
push
or
push
xor
int3
jp
push
inc
mov
jns
add
insl
inc
adc
cmpsb
outsl
dec
std
xor
push
mov
mov
sbb
mov
pop
jbe
popa
idiv
jmp
cmp
outsb
xchg
pop
mov
leave
ficomps
xchg
push
jl
out
sarb
orb
mov
add
mov
dec
les
xor
sbb
loop
pop
dec
inc
xor
mov
pop
jle
xor
pop
cmp
add
xor
cmpl
dec
add
and
adc
xor
sub
dec
push
mov
movsb
out
in
mov
icebp
mov
dec
or
ret
out
shll
clc
push
pop
sub
lods
and
pop
jge
in
leave
pop
in
mov
test
inc
jne
mov
mov
stos
lcall
add
test
cmp
jno
lods
cmc
movsb
jg
mov
push
inc
pop
mov
and
xlat
pop
fsubl
sub
cmp
cli
sbb
xchg
fldt
jecxz
scas
enter
je
sbb
pusha
xchg
sbb
sub
mov
and
add
mov
and
xchg
sbb
jae
xchg
int
and
mulb
sub
push
xor
ja
inc
pop
and
mov
sbb
scas
inc
clc
insb
mov
hlt
xor
negb
ds
popa
in
nop
or
inc
lods
js
jle,pn
adc
pop
in
bound
inc
into
xorb
push
sub
cmp
add
icebp
std
icebp
enter
insl
ficoms
pushf
into
into
and
shll
dec
xchg
add
mov
fldl2e
pop
loopne
sbb
inc
aam
lock
call
jbe
out
nop
xorl
pusha
aaa
xchg
pop
dec
cs
xchg
inc
out
rcl
dec
lret
dec
in
movsl
lds
adc
mov
mov
pop
add
add
fnstcw
aam
daa
lret
jmp
push
test
push
xchg
sub
popf
xor
inc
fisttps
dec
movsl
out
addl
jns
cmp
push
imul
je
in
jmp
cwtl
push
std
and
mov
lret
ret
ja
jecxz
sub
ror
and
ljmp
xor
sbb
fbstp
adc
and
outsw
sar
cwtl
fucomi
dec
cli
pusha
call
pop
sbb
outsl
lret
pop
xchg
inc
xchg
cmc
call
arpl
shlb
xor
fidivs
aad
les
gs
dec
dec
outsb
and
aaa
cmp
or
stos
loope
or
cld
fldcw
xchg
mov
adc
jp
xor
sbb
push
mov
sub
pop
in
faddp
mov
lods
ss
fwait
lret
cmpsl
pop
cmc
mov
jg
pop
nop
adc
std
sti
pop
out
push
or
shll
sub
shlb
movsb
pop
mov
or
xchg
inc
sarl
jge
mov
xchg
mov
xchg
xor
push
push
lret
in
xchg
hlt
push
jne
les
stos
or
cli
fimull
repz
push
lret
mov
icebp
mov
fs
out
sarb
cltd
xchg
cli
xchg
cld
adc
xor
divb
mov
pushf
jbe
jge
pop
and
mov
cmpsl
cmp
and
pop
jle
call
fwait
arpl
jne
push
dec
push
push
ret
das
and
cmp
adc
cmp
jnp
and
hlt
rolb
lcall
pop
adc
push
cmp
fnstenv
mov
inc
mov
popa
sbb
mov
cltd
xor
cmp
shll
cmpsb
sahf
fwait
daa
test
push
stos
cs
mov
mov
insw
dec
and
inc
push
mov
jae
jnp
xchg
add
jmp
sbb
mov
test
mov
loop
sbb
icebp
pop
fs
mov
popf
aas
push
cmp
mov
ja
jne
or
inc
prefetch
inc
sub
rorb
xor
mov
push
adc
pushf
into
dec
enter
cmp
fildll
push
lds
cmp
lods
cmpb
test
jmp
inc
cli
pusha
cmpsl
sbb
xchg
es
repz
mov
push
xor
imul
xor
mov
movsb
outsl
aad
pushf
out
pop
or
sub
push
rcrl
jbe
mov
jno
mov
mov
loop
push
xchg
mov
jno
jnp
fldl
scas
clc
std
test
jle
rol
cmpb
cltd
lret
mov
subl
sbb
sarb
sbb
notb
push
push
leave
inc
jbe
cmpsb
in
sbb
ds
test
mov
cmp
nop
dec
sub
rorl
or
dec
pop
not
clc
jge
push
ds
dec
dec
stos
es
and
jns
adc
inc
sbb
dec
mov
jge
int3
mov
mov
roll
add
add
pusha
xor
loopne
jne
mov
cld
push
cli
inc
sbb
test
enter
cmp
scas
int
enter
out
pop
in
push
xchg
ja
dec
adc
push
repz
addr16
divb
jae
or
call
mov
jno
js
lock
push
xor
stos
fmuls
int
and
mov
leave
adc
jnp
sub
loopne
js
cmp
xchg
ficoms
jbe
cs
adc
pop
mov
pop
ds
jge
movl
xchg
fstl
xchg
enter
xchg
sub
dec
lock
jbe
mov
mov
add
inc
xor
movsl
sbb
out
mov
aas
outsb
outsb
jle
ret
fs
scas
mov
pop
mov
xor
mov
outsb
out
imulb
out
mov
out
in
cli
adc
outsb
xchg
fsubs
and
inc
arpl
push
pop
adc
pop
fimull
xchg
mov
pop
shlb
lahf
outsb
std
inc
adc
xor
and
pop
cld
subb
xchg
dec
lahf
std
aad
xor
mov
lods
push
insb
repz
or
imul
out
lahf
popa
push
jg
aas
sti
xchg
into
cmp
jl
or
sbb
loopne
jecxz
pop
fidivrl
popf
std
dec
mov
mov
fisttpl
sbb
xchg
clc
rolb
out
xlat
add
fwait
roll
xchg
js
xor
xor
mov
pop
movsb
xchg
sti
lcall
xchg
pop
stos
inc
pop
fdivr
mov
dec
scas
sti
in
aaa
aad
lret
sar
jle
in
and
int
add
adc
sbb
adc
jno
outsl
inc
adc
aad
notb
mov
jbe
or
and
jbe
and
pop
jae
test
pop
pop
int
fdivs
mov
jmp
jmp
insl
inc
imul
sbb
je
pop
mov
iret
xchg
jp
jne
loopne
xchg
nop
shlb
aaa
scas
insb
sbb
stos
add
iret
xchg
cmp
pop
mov
ret
loopne
mov
mov
xchg
inc
inc
dec
ds
mov
xchg
and
test
jl
push
ss
jbe
inc
repz
gs
cmpsl
dec
cwtl
sbbl
sub
dec
sub
mov
add
mov
shll
jp
pusha
xchg
sbb
fildll
push
std
jmp
test
fcompp
ss
inc
cltd
loopne
fbstp
inc
xchg
xchg
xchg
add
cmp
enter
mov
fisubrl
mov
les
dec
jecxz
cmp
or
test
mov
xchg
roll
xchg
fimull
sti
cwtl
mov
fcomps
or
insb
inc
icebp
out
int3
rclb
inc
xor
pop
push
aaa
pop
mov
incb
addr16
mov
xor
fistps
dec
out
xlat
mov
cld
lods
hlt
adcl
sahf
aam
and
xor
dec
loope
daa
repz
add
and
es
rcl
aam
mov
stos
xor
sub
xchg
jo
rcrb
xchg
repz
out
int3
rolb
adc
sbb
dec
jg
aas
les
test
or
cltd
cmpsl
scas
shlb
ret
push
mov
mov
add
jo
pop
sbb
repnz
daa
push
mov
dec
lock
scas
dec
loop
jmp
mov
add
stos
call
xlat
lret
enter
stos
or
cmp
push
imull
push
pop
stos
add
xor
scas
into
rcrl
call
adc
aas
sub
mov
add
pop
xor
pop
shrb
xor
int3
sub
stos
cs
test
not
jns
sub
out
bound
xchg
adc
cmp
jae
call
mov
cld
ljmp
cmp
decl
jns
dec
xor
leave
in
mov
popa
cs
mov
push
loope
test
or
fmull
pop
xchg
sbb
out
push
add
pop
cmc
xor
push
adc
cmpl
mov
ljmp
or
adc
and
mov
cltd
jp
dec
inc
pop
jns
inc
outsl
aad
incl
cmp
divb
in
xor
movsl
mov
movsb
orl
stos
mov
jle
inc
adc
sbb
xor
lahf
cmp
sbb
push
pop
in
sahf
dec
adc
or
xchg
push
roll
shl
lahf
push
cmp
jg
xchg
dec
je
movsb
adc
jg
cmp
dec
add
rcrb
inc
cli
cmpsl
popf
or
xchg
mov
add
fldenv
adc
dec
ss
ss
pop
ret
rorb
dec
mov
das
adc
or
pop
in
xor
aaa
roll
leave
lret
decl
adc
mov
andb
cmp
pop
push
adc
sbb
aaa
mov
ret
ret
xor
xchg
add
push
shrb
xchg
fldl
dec
into
in
jmp
sbb
mov
clc
pop
call
add
xchg
mov
fstl
rolb
push
cmp
int
addl
pop
mov
fld
pushf
js
jmp
jno
bound
sub
negb
xor
loope
mov
wbinvd
lahf
xchg
aas
cltd
fidivl
int
xor
shr
pop
mov
sahf
es
iret
xchg
or
repz
fiadds
ficompl
adc
mov
lds
loopne
and
cmp
mov
or
mov
not
bound
movsl
mov
jae
sahf
inc
inc
ds
aam
sti
out
out
nop
sub
cmpb
das
push
fcmovnb
sbb
lods
out
pop
or
cmp
shrb
popf
sub
or
cwtl
in
ss
test
dec
and
loope
inc
xchg
cmp
je
jmp
inc
stc
sub
sub
pop
pushf
out
cmpsb
pop
fadds
cld
test
mov
jecxz
stos
inc
es
ret
aam
adc
iret
jecxz
xor
cmovle
xorb
dec
stos
aam
inc
popf
fcmovb
xor
push
popa
jg
aas
clc
or
xor
sti
fidivrs
sti
cwtl
push
jmp
add
cmpsl
jle
lahf
das
ret
fs
xor
dec
icebp
mov
dec
les
push
jo
pslld
pop
inc
vmovshdup
pop
test
push
sub
xchg
call
mov
andb
aaa
mov
scas
pusha
jne
outsl
bound
sub
cli
mov
pusha
mov
and
mov
pop
sub
pop
daa
sub
adc
jp
sarl
dec
xchg
push
jns
cmc
push
pop
inc
ret
xchg
and
pop
rcrl
je
and
jne
pop
scas
jmp
xor
icebp
lods
lods
orl
outsb
push
push
cmpsb
or
lods
inc
insl
mov
dec
in
pop
jmp
mov
sub
repz
pusha
mov
mov
inc
fiadds
dec
icebp
sub
aaa
stos
mov
pop
mov
pop
lret
xor
jmp
das
clc
or
aam
outsb
sub
pop
into
into
mov
mov
mov
out
cmp
flds
pop
jg
xor
xor
lret
and
out
arpl
lock
rcr
fildl
cmp
xchg
dec
test
pop
inc
mov
add
daa
adcb
adc
gs
addr16
lods
lret
cli
scas
pop
push
cmc
xchg
in
mov
lcall
dec
outsl
sub
testb
push
dec
stos
inc
dec
pusha
cmp
daa
icebp
xor
or
daa
lods
pop
cmpsl
mov
stc
jno
pushf
loopne
cli
adc
fisubl
sub
mov
mov
mov
cltd
mov
ret
int
xchg
xchg
push
cmp
shlb
or
and
mov
jb
push
inc
and
inc
das
push
call
stos
out
xchg
pop
test
xor
sub
pop
cltd
or
idivb
int3
psraw
fists
out
xchg
mull
pop
mov
leave
adc
in
sbb
out
enter
scas
mov
stos
pop
mov
cmp
mov
loop
add
jge
mov
sub
int
cmovbe
rorb
fsubrl
es
std
pop
aad
lahf
rorl
mov
fldl2t
inc
pop
inc
cmp
std
scas
push
xchg
add
jg
dec
pop
sub
push
pop
addr16
scas
lods
mov
popa
sahf
scas
bound
fld
dec
jae
mov
push
data16
pusha
add
mov
lds
in
fnstenv
pop
mov
loop
bound
adcl
std
push
int
inc
movsb
push
xchg
fsts
mov
call
push
lock
pushf
call
test
mov
stos
mov
jle
and
loope
cmp
pop
mov
adc
sarb
js
pushf
pop
xor
out
mov
rclb
jo
cltd
andb
call
js
mov
lods
add
mov
loop
cmc
cmp
inc
adc
sub
xor
insb
sahf
call
pusha
cmp
into
dec
bound
mov
std
push
sub
test
lds
aas
imul
adc
adc
movsl
cmp
and
xchg
cwtl
into
dec
xchg
mov
icebp
test
popf
sub
stos
push
or
or
in
fldt
mov
adc
sbb
andl
cmp
or
adc
mov
enter
mov
inc
xchg
lea
fisubrs
pop
fwait
jo
jo
push
xchg
xchg
mul
inc
xchg
in
fbstp
pop
mov
mov
mov
or
mov
sbb
in
push
dec
call
arpl
dec
jle
dec
ss
jne
mov
addr16
mov
jg
sbb
lods
mov
popf
jg
mov
movsl
lods
add
sub
xchg
fisttps
xchg
mov
mov
movsb
call
cmpsl
je
xor
sbb
shl
fcmovne
out
dec
and
fimuls
xor
pop
jns
push
inc
sub
insb
rorl
shll
cmpsl
data16
pop
push
rcl
loope
in
dec
dec
sti
cmp
adc
push
shrb
add
sub
enter
lea
sub
insb
pop
fildl
dec
and
mov
dec
mov
dec
ja
enter
xlat
test
loope
inc
mov
pop
add
outsl
std
sarb
mov
dec
into
or
es
inc
test
mov
out
mov
fistpl
push
fwait
call
mov
sub
inc
dec
dec
pop
aas
js
xchg
fmuls
mov
add
arpl
out
xchg
jns
or
jg
mov
mov
cmp
xor
adc
push
imul
fisubl
fldpi
fadds
or
out
shll
jp
pop
adc
bnd
push
jb
pop
sti
jo
repnz
cli
dec
popa
push
inc
subb
rol
xor
sbb
aaa
daa
mov
sbb
mov
scas
shll
adc
imul
mov
cmp
das
out
jl
ja
or
sbb
idivl
ffreep
pop
pop
push
movsl
out
pushf
xchg
fs
jnp
popf
push
mov
out
outsl
int
or
dec
sub
adc
mov
cmp
and
dec
call
in
pushf
mov
xor
mov
mov
mov
andb
xor
cmp
sub
or
add
sub
pop
cwtl
xchg
arpl
xchg
in
dec
sub
sub
cmp
insl
or
pushf
pop
lods
inc
out
in
cld
xchg
in
jb
push
and
lahf
lods
inc
loope
mov
push
rclb
insl
call
xlat
xchg
mov
cli
fadd
scas
out
stos
pop
add
mov
ret
and
and
ds
mov
cmp
xchg
cmp
mov
pop
cmp
fcomip
pop
aas
cli
imul
cmpsl
push
leave
and
les
fsts
nop
xchg
push
fstps
pop
pop
and
jl
inc
ffree
bound
and
cmc
push
pop
imul
clc
addr16
les
loopne
into
jae
xor
stc
inc
mov
push
jle
or
jnp
push
inc
xchg
adc
jnp
sub
in
push
adc
in
push
les
dec
test
mov
sbb
out
xchg
inc
jle
dec
lahf
xchg
rolb
inc
and
ds
pop
mov
fcmovbe
cli
cmp
adc
mov
or
negb
cmpsb
aas
cli
daa
sbb
and
leave
lds
pop
outsl
jb
shrl
les
mov
mov
shll
pop
mov
dec
mov
cli
stos
loopne
fisttps
test
loope
jnp
dec
dec
inc
push
sub
xor
out
xlat
lcall
jb
mov
es
test
cmc
dec
ds
mov
pop
daa
daa
aas
xor
jnp
add
xchg
pop
sbb
dec
push
data16
and
xchg
lcall
cmpsl
adc
push
push
pop
mov
mov
rcr
xor
push
xchg
leave
data16
xlat
cmp
or
cld
adc
mov
jbe
iret
mov
dec
xchg
and
imul
mov
adc
xchg
adc
fldt
inc
jg
cmp
sti
insl
xchg
fisubs
adc
xchg
in
mov
xor
push
aad
and
xchg
pushf
int3
jb
cli
mov
lds
inc
outsb
movb
pop
mov
cltd
fcmove
fsubrp
mov
dec
xchg
std
scas
or
cmp
hlt
lcall
ret
ss
fbstp
jge
adc
test
ficoms
mov
gs
mov
jbe
loop
inc
nop
xor
xchg
shrb
pop
les
fldenv
pop
cmp
inc
mov
mov
mov
dec
roll
out
sbb
xchg
push
jmp
xor
mov
sar
sbb
aad
pop
pop
mov
roll
lock
mov
clc
sub
fs
push
dec
cmp
scas
out
cmp
fdivr
adc
mov
daa
bound
or
and
mov
jmp
out
push
mov
fstpt
sbb
repz
push
test
aad
ss
pop
push
ds
nop
fists
js
das
jo
subl
icebp
xchg
sarl
sbb
dec
cwtl
lret
push
pop
out
add
jge
sub
push
push
xchg
out
mov
inc
cmpsb
repz
loop
into
jnp
pusha
pusha
imul
or
jo
imul
popf
xchg
cmp
sahf
icebp
pushf
mov
inc
inc
cmp
push
mov
pop
sub
xor
or
das
fs
and
push
imul
gs
addr16
ja
push
ret
mov
out
and
shll
xchg
inc
aas
and
pop
dec
jb
daa
data16
push
enter
lods
les
mov
sti
loopne
rclb
sub
enter
mov
jb
ss
jl
mov
dec
or
fcoms
icebp
stc
shlb
fwait
dec
jno
loopne
xchg
aam
lret
or
or
loope
lea
shl
sbb
dec
es
leave
test
lret
or
push
and
loop
inc
jne
daa
mov
cmp
lret
ja
sub
loop
xor
pop
inc
out
test
test
out
fisubrl
pop
jne
jbe
mov
cwtl
rcll
outsl
dec
and
fstpl
mov
push
test
movsb
mov
adc
push
fisttps
xor
xchg
cwtl
std
sbb
pop
sbb
lock
ret
add
adc
cli
jg
bound
mov
inc
adc
cs
daa
lock
or
adc
repnz
add
add
aaa
or
dec
jl
es
sbb
out
push
push
jge
xchg
xor
hlt
lret
ljmp
mov
aad
or
fisttpl
cmpsl
cmc
dec
int3
sub
pop
jno
std
fs
out
mov
mov
cmp
xchg
mov
or
cmp
popf
push
mov
push
out
pop
jbe
mov
push
filds
fwait
lock
mov
shl
pop
xor
ret
mov
in
and
push
pop
mov
or
inc
push
shrb
lcall
sbb
push
lea
ficomps
xor
cltd
adc
hlt
pop
push
enter
push
xchg
xor
cs
cmp
jmp
fisttps
dec
sarl
scas
xlat
sub
repz
jmp
fnstsw
lods
xor
pop
sub
fistl
test
int
mov
cltd
jno
in
and
lret
rcll
fsincos
inc
in
adcb
adc
scas
dec
push
popa
sub
xor
mov
sub
dec
add
ror
xlat
rcll
mov
inc
rol
mov
sbb
or
movsb
icebp
adc
sub
xor
ds
sbb
sbb
fsts
data16
mov
cmpsl
sub
dec
sbb
in
xchg
pop
enter
add
inc
cmpxchg
lret
dec
adc
cmpb
shrb
adcb
int
std
cld
loope
cs
and
push
adc
rol
add
test
inc
loope
stos
inc
dec
push
sbb
xchg
jo
jne
test
imul
xchg
outsl
sbb
popf
mov
jne
xchg
and
movsb
and
xchg
jne
aaa
cmp
das
push
cld
sbb
scas
mov
jno
out
loope
out
pop
jecxz
js
std
xchg
fnstcw
movsb
test
iret
testb
lds
fistl
dec
iret
and
mov
lret
jmp
push
cmpl
gs
xor
mov
pop
loop
pusha
adc
jnp
xor
mov
pop
adc
adc
add
cmp
fmuls
jmp
shl
jb
into
cmpsb
loopne
and
into
es
adcb
popf
loopne
into
jo
dec
cmpl
push
adc
movsl
aas
mov
shlb
xor
aam
dec
loope
dec
out
inc
ret
shrd
add
pop
push
adc
push
dec
and
dec
mov
in
imul
pop
sub
mov
outsl
and
pop
push
mov
popa
mov
pop
or
or
sub
in
pop
and
ljmp
mov
push
sbb
icebp
test
call
mov
ret
fnsave
lret
roll
ss
dec
adc
out
roll
cmpsb
lods
inc
jle
pop
je
and
fcmovbe
jae
xchg
sub
mov
in
stos
mov
xor
xchg
mov
ss
cltd
ja
ja
lcall
jmp
leave
lahf
mov
int
je
rcrb
jno
mov
mov
popf
rcll
lahf
les
fnstsw
adc
movsl
sub
paddb
cld
testb
dec
jne
xor
or
push
mov
lea
movsb
pop
inc
int
fwait
sub
out
ds
add
jge
mov
jo,pn
in
popf
jb
scas
mov
sar
fadds
add
mov
lret
fadd
and
lcall
push
pop
xchg
popa
aaa
jle
ja
std
and
push
repnz
jno
add
sbb
cmp
out
int
fsubs
sarb
orb
cmpsl
adc
jb
adc
sub
outsl
insb
dec
mov
int
jl
or
cltd
ds
push
stc
sub
or
outsl
add
clc
jnp
xor
sbb
jecxz
adc
xor
add
or
ja
adc
adc
bound
outsb
inc
jle
lds
inc
cld
scas
call
adc
dec
xchg
sbb
or
movsb
mov
push
push
inc
jne
adc
push
and
rcl
push
xchg
adc
out
sahf
les
daa
adc
popl
mov
cmp
pop
push
out
fsubrl
ljmp
push
int3
into
sbb
dec
stos
inc
xchg
ficompl
ret
mov
inc
test
cs
pop
mov
pusha
jecxz
pushl
xadd
push
in
jle
push
arpl
ret
dec
xchg
xchg
cld
add
ficoml
mov
in
add
in
jmp
sub
adc
sub
jno
movsl
push
out
inc
mov
dec
pop
push
adcl
pop
mov
cmp
mov
int
push
jb
push
xor
loop
mov
add
pop
xchg
mov
push
mov
xchg
ret
push
ljmp
xchg
push
fwait
push
jae
aas
pop
and
orb
lods
arpl
mov
mov
add
repnz
loope
sti
add
jb
jb
aad
mov
xchg
xor
and
in
add
jbe
data16
mov
stc
sbb
iret
in
xchg
leave
jae
xchg
mov
jbe
sti
aas
mov
jnp
loopne
dec
mov
cmp
filds
and
lock
into
cmpsl
repz
push
arpl
adc
push
dec
popa
scas
inc
gs
loop
pop
movsb
lret
xor
es
int3
enter
jecxz
cmp
sbb
xlat
mov
outsb
cmpsl
mov
aad
mov
pop
div
clc
dec
mov
jne
push
outsl
repnz
cld
dec
xchg
ja
jnp
xor
mov
cmpsb
sbb
pop
push
out
mov
mov
dec
insb
xor
or
mov
addl
sbb
fidivs
movsl
daa
push
lret
imul
ss
adcl
adc
lea
dec
pop
shll
push
arpl
and
mov
or
push
push
stc
cmp
sbb
inc
mov
enter
je
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
std
add
jg
inc
xor
jp
pop
pop
lahf
fwait
adc
pop
clc
inc
and
pop
incb
stos
sbb
aad
xor
dec
arpl
and
push
lds
insl
or
rcll
xor
nop
xchg
lods
adc
sahf
push
sub
enter
cld
popf
sub
popa
push
jns
pop
cs
mov
pop
fsubr
fmuls
jns
jb
rcrl
fs
insl
pushf
mov
in
sub
cmp
aam
pusha
ja
call
aam
xlat
mov
cmp
cs
inc
pusha
adc
popa
mov
pop
inc
nop
jae
pop
out
mov
and
push
pop
orl
xchg
jmp
stc
xchg
cmp
mov
pop
add
popf
push
jns
lret
decl
mov
mov
push
jg
pop
add
hlt
jle
mov
in
repz
or
xor
xchg
push
push
mov
inc
pop
sub
dec
test
int3
push
out
jb
rorb
dec
nop
cmp
stos
jne
pop
jge
push
iret
aam
fdivr
lea
jb
inc
and
pop
movsl
movsl
es
push
stos
cmpsl
insb
stos
add
cmp
dec
ret
sbb
les
bound
insl
jmp
data16
fdivrl
push
inc
jbe
jl
push
sub
adc
jnp
cltd
pop
pusha
scas
add
cmp
push
push
jecxz
jl
das
jge
mov
stos
adc
orb
inc
sub
pop
loop
daa
jae
adc
in
fadds
xchg
nop
push
xchg
in
mov
pushw
sbb
lret
loop
mov
out
ret
push
mov
stc
pop
aam
cli
ret
aad
js
xor
lods
sar
mov
shlb
and
mov
cwtl
fld
sbb
sub
lahf
cs
mov
idivb
mov
dec
leave
fwait
sbb
dec
mov
cmp
push
mov
bound
scas
jmp
ret
cmc
sub
sahf
fdivs
and
sub
test
dec
loope
popa
insl
outsl
jae
mov
mov
adc
stc
pushf
jno
mov
or
cmpb
into
pop
xlat
jl
sahf
ret
lret
arpl
dec
xchg
or
dec
push
cmp
pop
insl
mov
push
sbb
sarl
in
ret
stc
add
idivb
mov
inc
adc
iret
pop
lea
sbb
out
aaa
sbb
shll
cmc
ficoml
das
fistpl
inc
mov
nop
es
nop
lea
mov
ret
popa
xlat
mov
dec
lcall
out
xchg
add
inc
xor
jecxz
in
jp
fcomps
popf
ret
test
lods
xlat
out
inc
or
call
loop
and
jl
js
or
cmpsb
fiadds
cld
sub
and
cmp
or
or
stc
xchg
outsl
jecxz
push
push
mov
add
add
mov
ljmp
out
cmpsl
leave
iret
xlat
fistpll
lods
sbb
lock
out
and
sbb
mov
cmpsl
mov
and
and
xor
push
xchg
popa
cmp
sub
xchg
mov
imul
push
ja
xchg
and
sar
andl
loopne
fidivrl
inc
addb
subl
xchg
lret
xchg
std
xor
nop
jnp
or
imul
stos
sub
scas
pop
sbb
cmp
in
and
mov
ljmp
shrb
jo
push
jo
pop
jle
scas
icebp
je
xlat
mov
pushf
stc
jecxz
aas
xchg
test
roll
dec
movsb
dec
lret
push
decb
add
mov
pop
cmp
sub
inc
stos
mov
adc
ss
dec
cmc
adc
cmpsl
outsl
adc
sbb
mov
outsl
inc
imul
add
mov
into
add
adc
mov
jmp
mov
xchg
testb
std
arpl
push
je
ror
ret
ret
xchg
push
adc
pop
jns
scas
cmp
adc
popf
xorl
pop
mov
addr16
lods
push
jnp
pop
xchg
adc
shrl
xorl
mov
lea
xor
jb
pop
in
gs
xor
pop
ss
je
jbe
mov
cmp
nop
cmpsb
adcb
loope
cmc
imul
add
clc
test
test
je
xchg
xchg
lahf
inc
mov
test
push
jmp
xchg
push
out
insl
xchg
mov
test
adcl
mov
sahf
dec
sub
cmp
insl
cli
cmpsl
add
outsb
xor
call
push
push
push
into
xor
lea
mov
popf
mov
popf
scas
insb
ret
jo
xchg
pop
pop
enter
xchg
mov
pop
jne
fsubrs
out
push
xor
mov
or
xchg
xchg
and
daa
stc
cmpsb
xor
repnz
sti
pop
fwait
scas
fistpl
out
jp
and
lods
enter
sbb
loope
leave
mov
pop
or
ret
sbb
shr
cli
xorb
mov
sub
inc
cmpsl
fstp
xor
sub
push
xor
add
mov
jp
xchg
in
movsb
aam
xchg
aam
fsub
ss
xchg
mov
in
jae
gs
xor
cwtl
pop
scas
loopne
frstor
mov
mov
jns,pn
cmpsl
jbe
mov
adc
call
sub
ja
fsts
mov
inc
shll
add
dec
jb
sub
cmp
in
dec
cli
ss
sarb
push
dec
add
jge
adc
lock
dec
or
sbb
fincstp
mov
pop
mov
out
adc
not
push
inc
rorb
enter
jbe
outsb
dec
movsl
push
test
cmp
jmp
and
fisttpll
xchg
movsl
xor
pop
inc
js
mov
adcb
fsubl
push
enter
or
hlt
arpl
and
push
imul
mov
jne
jo
and
inc
pop
pop
add
cmpsl
testl
fidivl
inc
mov
inc
xchg
fs
pop
dec
ret
in
loope
ret
mov
addb
iret
and
das
bound
mov
sbb
or
push
inc
in
fbstp
jmp
add
je
xchg
mov
cwtl
inc
xor
mov
sbb
lret
xor
popf
pop
and
add
xor
ja
test
js
xchg
cmp
pop
test
or
adc
xchg
lods
in
ret
sbb
xchg
inc
mov
jecxz
imul
test
mov
jge
hlt
rorb
adc
mov
cmp
nop
into
mov
aad
mov
into
lret
leave
subl
and
outsb
mov
dec
test
ret
movsb
or
movsl
stos
and
scas
stc
mov
jge
jle
je
jnp
loopne
movl
jae
dec
adc
or
pop
or
loope
dec
push
imul
cmp
mov
or
dec
mov
es
add
imul
or
dec
mov
and
xchg
mov
jl
or
or
ja
pop
xchg
xchg
xchg
sbb
sub
jmp
mov
jecxz
addb
fmull
sbb
jb
add
xchg
or
gs
or
lds
cmp
mov
dec
jecxz
cmc
pop
or
mov
mov
mov
cmp
ja
pop
and
inc
stc
cmpsl
push
out
data16
mov
push
je
adc
sbb
loopnew
scas
jp
test
imul
dec
adc
mov
ss
mov
insb
xorb
cld
jmp
idivl
xchg
sbb
nop
lret
xchg
imul
aad
adc
pusha
or
lahf
rolb
add
aaa
jp
out
in
loop
in
xlat
mov
test
add
pop
stos
dec
pop
adc
daa
sub
dec
nop
arpl
outsb
xchg
sub
mov
xchg
repz
cmpsb
stos
sahf
xor
dec
pop
cmpsl
push
or
cmpl
or
int
js
repz
shll
mov
hlt
jp
adc
dec
mov
fsts
adc
inc
ret
push
push
fidivs
cmp
sub
shll
dec
xor
stos
or
testb
xlat
pop
and
add
test
adc
mov
inc
sarb
jbe
or
sub
in
mov
or
inc
pop
push
lret
sub
outsb
test
mov
xor
mov
es
push
inc
or
dec
sub
ja
mov
xor
jb
mov
cmpsl
mov
sbb
cmp
mov
mov
cwtl
mov
cmp
in
sub
inc
repz
inc
lahf
shl
mov
cld
sbb
int3
inc
fcmovb
mov
pop
fists
xchg
arpl
lret
mov
fisubs
jmp
lcall
xchg
cmp
sahf
imul
pop
ds
aad
lahf
loopne
inc
mov
push
jnp
or
dec
cmp
jno
mov
jne
in
mov
sub
or
and
mov
push
orb
sbb
jae
mov
xchg
cltd
push
lret
xchg
cmp
jae
cmc
fdivrs
adc
or
je
loop
jb
cmp
shll
adc
cmp
mov
mov
dec
mov
cmp
pop
outsl
fstl
mov
or
clc
in
push
hlt
jns
jl
sbb
ret
inc
insl
test
insb
mov
xor
push
pop
mov
fs
xlat
ret
add
into
pop
rorl
ljmp
test
push
xor
inc
fildll
icebp
and
outsb
ja
push
icebp
movb
jmp
or
mov
mov
or
jbe
xchg
fbld
jmp
sbb
or
jmp
mov
js
inc
mov
mov
js
out
sti
push
in
mov
or
insl
xor
mov
leave
jecxz
push
mov
sbb
mov
pushf
dec
hlt
ret
or
cmp
scas
push
std
pop
pop
test
cmpsb
shlb
cmp
in
mov
dec
and
in
cmp
push
or
jp
pushf
cmp
ljmp
sub
or
jl
test
fcomip
xchg
pop
sbb
push
mov
lret
out
xchg
daa
cs
pop
jp
lods
push
xlat
cwtl
aam
rorb
outsl
sub
sub
sbb
fs
shl
mov
xor
inc
test
inc
sbb
pop
jecxz
cmp
mov
push
pop
popa
mov
pop
mov
xchg
insb
movsb
rclb
and
mov
mov
adc
mov
sbb
mov
pushf
loope
jns
js
movsl
fbstp
shrb
sub
push
cmc
lret
mov
cmp
jb
mov
or
jnp
xor
insl
test
in
clc
ret
pop
ret
mov
popa
inc
jo
cmp
rcr
pushl
dec
fs
je
cmp
xor
iret
xor
sti
inc
shrl
mov
inc
xor
test
mov
mov
lock
icebp
lock
nop
sub
insl
aad
jne
mov
in
std
vphaddubw
out
dec
mov
push
arpl
ja
aad
inc
bound
call
jbe
push
scas
cmp
lret
stos
dec
imul
or
js
cmp
sub
xor
insl
adc
jg
out
lahf
das
and
push
and
and
cmp
pop
fs
xchg
rcll
pop
jo
in
pop
dec
insb
or
dec
mov
bound
test
mov
dec
xchg
lods
jo
pop
mov
scas
push
and
dec
bound
and
mov
mov
lea
in
lahf
rep
mov
or
imul
mov
sbb
push
sub
sti
xor
xchg
jne
shrl
sub
jnp
push
cmpsl
in
push
movsb
xlat
loop
sub
inc
test
mov
dec
jl
sbb
xor
dec
mov
xor
in
fimull
pop
lret
pop
xchg
cmp
daa
mov
enter
aas
add
sbbl
addr16
pop
icebp
hlt
lcall
test
lret
bound
out
enter
push
enter
add
fsubr
loopne
std
and
fadds
cld
dec
sbb
movsl
add
shlb
fldcw
insl
into
or
xchg
pop
stos
inc
mov
sbb
cwtl
je
int3
jno
sub
cmc
fs
frstor
stc
scas
fwait
pop
repnz
lcall
cmp
inc
cmp
rorl
push
movsb
pop
sti
outsb
or
divl
test
stos
xor
stos
jmp
cmpsl
mov
les
adc
pop
in
xor
mov
jecxz
loopne
dec
sbb
mov
inc
lods
clc
lret
addb
inc
mov
insl
in
inc
sub
inc
mov
jmp
jnp
mov
in
adc
scas
imul
mov
xchg
pop
popa
cmp
test
mov
scas
js
orl
paddb
fnstcw
imul
aam
mov
mov
mov
pop
cmpsl
xor
mov
jge
inc
mov
push
mul
xor
std
fs
lret
sbb
ret
shll
es
loopne
fdivrl
xor
jl
aaa
or
dec
out
aam
sub
aaa
in
test
jbe
in
popf
sub
sbb
aam
divl
pop
push
inc
mov
out
pop
mov
push
cmp
lods
mov
push
fists
push
or
push
int3
inc
inc
adc
add
jmp
dec
or
jns
cmp
xchg
ss
and
xor
js
into
movsl
testl
inc
daa
sbb
inc
inc
push
clc
aad
outsl
les
dec
outsb
bound
shll
loope
mov
movsl
inc
scas
mov
lahf
add
sahf
fwait
in
or
sub
and
push
xor
cs
and
cmp
or
adc
jo
icebp
mov
inc
int3
sbb
push
inc
lahf
or
add
adc
mov
and
mov
dec
xorb
fistl
fsubl
in
js
mov
mov
push
mov
or
pop
les
cmpsb
repz
mov
sbb
out
jp
mov
or
and
push
mov
add
into
xor
mov
jno
movsb
mov
fdivs
sub
lcall
add
lcall
xchg
loope
inc
lret
cwtl
inc
add
out
dec
imul
lret
sti
lret
cltd
inc
out
and
jecxz
shll
stc
pop
popf
ss
mov
lock
xchg
pusha
or
pop
sbb
aas
adc
dec
dec
test
fists
inc
inc
cli
ds
cld
stos
add
jge
lds
lret
cs
addl
lcall
cltd
fiadds
enter
xor
sub
inc
or
mov
xchg
in
lock
ror
pop
nop
mov
sbb
nop
sahf
fadds
pop
mov
jbe
out
jo
push
ds
lret
xlat
ret
lods
test
cmp
dec
int3
add
int
stc
cmp
cmp
cmp
mov
dec
out
loope
insl
cmp
cli
aas
or
stos
mov
pop
xchg
fidivrl
in
pop
in
mov
push
js
in
roll
push
sbb
mov
push
mov
ret
movsb
aam
xchg
cwtl
mov
loop
sub
push
cwtl
sti
lock
mov
jno
and
dec
or
pop
out
dec
sub
insb
pop
popa
jno
arpl
faddl
mov
inc
and
es
out
je
and
out
xchg
jbe
in
or
pop
xchg
mov
lods
aaa
xchg
adc
inc
and
mov
sub
ljmp
dec
mov
adc
mov
or
mov
xchg
mov
ds
pop
adc
jl
mov
rcr
or
call
sbb
sti
pusha
dec
push
lret
dec
pop
cltd
testb
sbb
jno
xlat
fwait
iret
mov
mov
xor
movsl
fwait
pop
dec
dec
fbstp
scas
cmp
gs
push
lods
repnz
outsb
stos
shrl
xor
fcmovbe
jae
rcll
jmp
dec
mov
sbb
sti
clc
mov
lds
jns
xlat
pop
adc
cmp
rcr
push
das
arpl
inc
jno
jns
jbe
push
pop
nop
aam
mov
cmp
mov
sbb
xor
cwtl
add
sub
inc
xorb
sarb
loope
pop
lock
sbb
push
testl
call
inc
pop
mov
dec
rcll
jp
add
aas
fnsave
ljmp
jp
or
lret
cmp
inc
fistpll
mov
cmc
bound
sbb
fmul
push
sub
in
hlt
or
fmuls
lds
pop
mov
andl
add
ja
call
mov
jmp
test
dec
mov
insl
or
imul
nop
and
pop
addr16
jne
ror
mov
bound
pop
mov
stos
sbb
and
sahf
add
gs
add
mov
jno
int3
cmc
in
test
int
imul
adc
mov
add
pushf
and
jecxz
push
and
in
fsubrs
or
cmpsb
lret
out
xor
cs
and
ljmp
xchg
and
lods
push
pushf
cmp
js
jne
lea
sub
xor
mov
mov
mov
pushf
mov
adc
add
mov
popf
hlt
clc
mov
pushf
in
call
in
and
test
leave
xchg
mov
cwtl
mov
dec
or
jg
jbe
imul
fisubrl
or
ljmp
add
fimuls
xor
pop
outsl
imul
cmp
xchg
push
call
scas
push
mov
repz
cs
repnz
idivb
aaa
fiadds
push
les
roll
into
pushf
sbb
loop
cltd
rorb
dec
fsubrs
push
and
repz
mov
mov
inc
mov
push
sti
xor
mov
inc
fs
hlt
bound
adc
std
inc
mov
cli
mov
fidivrs
sti
clc
jno
es
out
pop
ret
in
roll
push
push
dec
jmp
iret
cs
push
aam
and
and
dec
sub
les
sbb
fbld
inc
add
mov
or
out
lea
add
orl
cmpsl
inc
jge
ret
inc
or
inc
ljmp
insl
mov
mov
sbb
call
aas
mov
sbb
int3
mov
outsl
in
test
iret
fists
cs
scas
jge
ja
xor
mov
mov
xchg
mov
mov
and
sub
add
lea
inc
js
ja
in
jae
clc
out
fisubl
scas
int
mov
cmp
or
cmp
jo
mov
sbb
mov
sbb
jl
leave
push
push
outsb
add
je
sbb
adc
dec
xlat
jl
sbb
push
ja
aad
dec
dec
cltd
hlt
mov
lods
lds
ja,pt
lods
imul
adc
int3
repnz
fnstcw
lret
dec
jl
icebp
mov
xchg
xchg
movsl
hlt
inc
jne
clc
add
movsb
mov
stos
lods
push
cmc
mov
xchg
aam
enter
jno
aad
rolb
and
out
inc
inc
fwait
mov
sub
idivl
mov
shrl
sub
testb
test
xchg
es
arpl
or
sub
orb
sub
fists
cli
shll
dec
jns
rorl
mov
enter
dec
xchg
movb
bswap
imul
add
add
sarb
mov
cli
aam
stos
inc
and
lods
lcall
xor
cmp
in
mov
lods
pop
xor
or
je
stc
mov
movl
lods
test
hlt
mov
fldl
push
leave
xlat
ljmp
test
xchg
jns
mov
adc
fwait
outsl
or
xchg
fimuls
movd
dec
data16
fcmovu
lret
gs
xchg
stos
push
or
push
nop
or
push
imul
ljmp
or
out
adc
inc
loopne
mov
mov
jmp
fwait
pop
mov
cmp
jl
popa
pop
cltd
inc
push
ret
mov
mov
call
inc
iret
call
sahf
xchg
divb
sub
popa
js
popf
repnz
in
mov
xor
pop
add
dec
pop
dec
xchg
dec
js
xchg
test
clc
movsl
pop
mov
inc
xchg
xchg
pop
dec
cltd
adc
xchg
push
xchg
jb
adc
sbb
test
sar
gs
pop
and
xor
mov
test
shll
divb
test
push
das
mov
cwtl
sub
jecxz
mov
cs
pop
fstpl
jl
xchg
or
lock
aad
add
xor
cmp
or
je
jecxz
loope
add
stos
lret
sbb
cld
push
mov
pop
mov
xor
fisttpll
mov
jns
mov
push
and
int3
jecxz
andb
mov
pop
fdivl
add
mov
icebp
xchg
add
mov
or
jno
jecxz
movsb
and
cltd
lods
mov
sbb
xchg
ss
pop
adc
fcmove
push
lods
test
movsl
push
mov
sub
pop
mov
sub
inc
repz
cmp
int3
dec
insl
xor
add
xor
push
xor
xchg
das
test
jle
scas
xchg
or
call
adc
popa
ss
loope
sub
mov
rcll
lcall
outsb
and
mov
inc
loope
cmp
gs
fisubs
inc
cltd
add
mov
push
mov
lock
dec
in
dec
subb
loop
frstor
adc
bound
mov
cmp
leave
insb
adc
lea
sub
xorl
fucomip
cmpsb
shlb
testb
xchg
mov
mov
gs
cmp
xchg
negl
call
push
call
jg
lcall
jl
insl
xchg
cli
shrl
lds
test
lahf
jno
xchg
jle
cmp
cli
mov
or
xchg
mov
dec
cmc
jo
jecxz
out
ret
hlt
cmp
cmp
inc
jns
and
lahf
xor
push
enter
xchg
das
cmc
jl
mov
cmc
sahf
out
adc
dec
jle
sbbl
xchg
rolb
mov
add
add
dec
sbb
data16
ds
inc
ljmp
ficomps
lahf
xor
adc
xorb
mov
adc
out
enter
clc
xor
mov
gs
add
dec
and
mov
scas
sub
sub
push
adcl
fsubl
in
imul
dec
rolb
jmp
bound
mov
pop
mov
adc
sete
or
dec
lahf
leave
insb
cmp
and
mov
inc
sbb
and
lret
adc
or
mov
xchg
jmp
and
and
psrlw
ret
xchg
mov
ret
sbb
xchg
cmpsl
dec
mov
pop
aad
out
add
mov
pop
aam
jg
mov
ja
or
insb
sub
lds
dec
xchg
pop
cmp
adc
cmp
pop
xor
imul
test
movsl
rcr
aam
and
adc
xor
movsb
stos
sub
in
lea
xchg
jns
sub
push
fs
sub
cmp
gs
xor
js
jmp
mov
popa
cmp
mov
sub
test
ds
and
sub
mov
cmp
pop
inc
mov
sub
movsl
inc
push
add
sub
bound
and
pop
mov
out
xor
out
lahf
inc
lcall
dec
pop
lds
inc
mov
jnp
and
push
mov
dec
popf
cmp
push
icebp
xor
fiadds
push
or
inc
bound
lods
loope
jge
bound
push
mov
stos
loope
push
mov
hlt
cmp
sub
dec
push
sub
pop
xchg
or
xor
mov
imul
jb
push
inc
insl
jmp
xchg
fistpl
in
sub
stc
sbb
mov
sbb
xchg
inc
xchg
dec
cmpl
sub
mov
fisttpll
ret
inc
shrb
push
stc
jl
push
loopne
mov
aam
je
adc
dec
data16
lea
or
cmc
stos
shrb
cmp
stos
mov
or
mov
xchg
push
stos
outsl
dec
sub
ret
mov
sbb
add
jmp
mov
mov
aam
out
lds
sub
nop
sub
mov
sbb
std
dec
mov
ljmp
sbb
imul
and
cwtl
sbb
cmp
jne
inc
push
call
mov
xchg
out
mov
nop
or
mov
pop
push
in
jno
pop
pop
mov
sub
inc
inc
push
mov
inc
mov
mov
add
movsb
lods
sbb
icebp
mov
out
mov
cmp
push
es
pop
icebp
dec
inc
xlat
in
ja
aad
adc
sti
out
shll
pop
push
test
jmp
fucomi
loopne
mov
dec
cld
inc
mov
lcall
sub
sub
aaa
test
inc
ret
jle
sub
xchg
jo
mov
lds
hlt
xor
push
adc
enter
ret
dec
jae
leave
cmpsl
cmp
xchg
inc
enter
mov
inc
push
arpl
and
xchg
jl
or
cmpsl
inc
sbb
imul
push
or
cli
fdivrl
ja
push
xchg
pushf
pop
adc
das
ret
out
dec
sbb
insl
mov
insl
sbb
inc
jle
movsb
dec
sbb
aas
mov
jg
sbb
and
fsubs
and
lahf
or
or
out
test
adc
enter
je
pop
pop
cmp
fcomi
pusha
jno
icebp
mov
ss
lahf
addr16
je
mov
xchg
and
fsubl
leave
fnstcw
pop
aam
mov
mov
ret
loope
xchg
jge
lcall
pop
test
inc
ficoms
mov
mov
adc
aam
les
lea
rolb
or
out
add
rclb
lret
jmp
add
xchg
fdivr
dec
mov
sub
in
or
test
add
inc
scas
fldl
xor
lret
rcrl
push
adc
fistps
inc
push
inc
adc
out
dec
push
ja
rcll
dec
sub
pop
xor
mov
inc
push
outsb
mov
out
loopne
xchg
mov
in
xchg
push
in
dec
rclb
out
mov
mov
ficoml
pop
sti
rolb
jmp
mov
pusha
jns
lea
push
add
roll
sub
sub
dec
lock
push
daa
sub
add
sti
pushf
xor
sarb
data16
xor
lea
mov
mov
cmp
dec
mov
jnp
mov
jmp
cmpsb
mov
sub
sti
in
xor
xor
sub
mov
pop
arpl
outsb
ljmp
pop
add
popa
fs
push
mov
push
lea
addr16
sbb
jmp
dec
or
mov
fisttpl
push
insl
jge
cmpsl
pop
or
xchg
stc
lahf
lods
jmp
jae
jnp
das
jbe
adcb
imul
or
mov
cmp
subb
sti
popa
out
or
mov
cwtl
jl
dec
sub
jg
stos
jp
xor
xchg
clc
and
adc
mov
and
clc
push
std
out
insb
js
jle
in
fcmovb
ror
sti
pop
mov
fwait
push
push
jge
dec
jno
adc
xchg
xor
xor
cmpb
jmp
dec
aad
bound
cmpsl
mov
hlt
mov
dec
sbb
jo
jecxz
neg
adc
mov
or
sbbl
test
clc
negl
push
mov
lahf
inc
lds
fsts
xor
insl
sub
int3
sbb
push
repz
lods
cmp
xchg
cwtl
or
inc
out
ret
jno
pop
mov
mov
sbb
or
dec
insb
add
adc
lock
ljmp
push
shr
mov
mov
scas
rclb
shlb
add
mov
int
xor
mov
mov
jg
mov
mov
xlat
bound
lcall
clc
aad
fldenv
adc
sub
out
int3
mov
mov
aam
icebp
add
pop
push
mov
adc
xlat
test
imul
adc
faddp
lret
hlt
adc
aam
jb,pt
imul
iret
add
jecxz
jp
pop
ret
loope
mov
test
lea
xchg
fisttpl
mov
insb
dec
or
pop
add
mov
push
ja
stos
inc
jmp
push
insb
arpl
les
arpl
xlat
mov
inc
jp,pn
repz
xchg
jp
test
ja
xchg
popa
mov
and
cmpsl
mov
mov
pusha
sub
dec
lea
mov
add
inc
shlb
or
lret
inc
out
dec
sbb
lds
sub
fimull
cmp
pushf
ds
ss
cmp
push
repz
jl
adcl
cmp
andl
popa
xor
shl
and
inc
jbe
cmpsl
fwait
mov
mov
or
add
clc
and
mov
jbe
stos
insl
dec
es
fsub
cld
xchg
pushf
jmp
or
int
fmuls
movsb
dec
pop
sbb
popa
inc
dec
cmp
aam
mov
nop
xchg
dec
out
push
mov
dec
cwtl
aad
in
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
push
xor
cmpl
addl
js
mov
xchg
call
es
sbb
push
and
jnp
fwait
std
xchg
sub
cmp
rcll
push
xchg
push
pop
or
xchg
jo
pop
inc
ret
out
lea
jge
dec
pop
repz
pop
adc
mov
lcall
insl
inc
sub
fidivl
cmp
stc
inc
xor
cmp
or
pop
loopne
push
sbb
incl
test
xor
pushf
pop
xchg
rcll
imul
pop
div
dec
lret
test
hlt
jns
inc
sahf
hlt
lods
mov
das
jp
pusha
sub
lea
mov
outsb
push
in
insb
push
scas
hlt
sbb
addr16
mov
push
sbb
sbb
call
adc
push
int
xor
int
jb
push
cmpsb
pop
mov
mov
jp
cld
pushf
add
out
pop
jo
xor
adc
add
movsb
mov
mov
inc
sahf
icebp
mov
std
mov
fbstp
in
dec
out
and
sbb
insb
push
jne
cmp
fdivs
mov
test
stos
adc
lock
cs
push
pop
nop
mov
ret
dec
loope
out
es
lcall
xchg
mov
popf
push
xchg
sub
flds
xor
gs
dec
mov
sbb
testb
sahf
fildl
shlb
jl
mov
frstor
xor
xchg
lock
or
fs
mov
or
dec
adcb
adc
adcb
or
ret
idivb
push
and
mov
data16
mov
xchg
inc
gs
out
mov
cmp
cwtl
cltd
das
jns
cmp
mov
loopne
inc
imull
dec
pop
aaa
inc
add
and
sub
add
inc
ja
xchg
cmp
xlat
ja
mov
mov
daa
rcl
or
subb
jne
stc
sbb
cmp
cmp
dec
das
aas
ss
adc
pop
xor
and
popf
push
mov
jp
pop
sub
mov
shrb
or
rorl
sub
scas
xor
jl
clc
sbb
pop
jl
in
mov
push
aad
ret
xor
es
cmp
outsb
in
loope
jl
or
xorl
bound
scas
addr16
xchg
out
jg
ficoms
gs
lea
cli
shl
roll
cmp
jmp
and
and
fucomp
add
stos
lods
mov
or
cmp
daa
mov
cmp
pop
push
sbb
popa
ss
push
cmpsl
iret
fiadds
ss
lcall
imul
loop
je
nop
mov
or
pop
pop
ret
inc
xchg
add
sbb
xor
shrb
jge
pop
push
sbbl
cwtl
pextrw
cmp
push
test
xchg
lahf
repnz
outsl
stc
out
push
pusha
js
dec
popl
in
and
cmp
jecxz
xlat
scas
scas
mov
and
mov
sbb
and
es
add
push
push
das
or
xchg
ret
call
cmp
sub
stc
sti
movsl
mov
repz
testb
push
aas
ljmp
inc
stos
das
mov
jns
pop
ds
sarl
mov
jmp
ljmp
cmp
iret
sbb
scas
stos
insl
sbb
iret
loopne
stc
stos
stos
repz
mov
and
or
jl
sub
adc
lods
mov
pusha
movsb
add
fucomi
mov
xor
xchg
negl
sbb
push
outsl
xchg
adc
outsl
leave
and
std
insl
push
cs
sti
jnp
lcall
xchg
out
adc
fldl
shl
xor
fisttps
inc
sub
xor
je
dec
pop
stc
push
negl
jno
add
inc
sbbl
popa
repz
cmpsb
sub
test
add
fistl
push
pop
or
test
mov
cmpsb
dec
ret
jbe
jnp
xlat
pop
push
push
xchg
test
stc
rcrl
in
dec
insl
inc
jae
out
lock
xchg
inc
mov
push
push
dec
mov
xchg
test
ret
pop
lock
and
push
sahf
outsb
sbb
into
int3
add
data16
jmp
mov
cwtl
lcall
cs
ljmp
xor
sub
mov
rol
repz
ja
test
dec
adc
adc
roll
pop
xor
and
push
push
inc
in
aad
sahf
in
dec
cli
push
daa
jmp
add
dec
rcll
adc
and
cmp
mov
xchg
or
lods
mov
and
xchg
dec
jno
mov
lea
mov
in
addb
and
mov
cmc
push
popf
inc
push
sub
and
enter
add
jae
cmpsb
adc
jo
inc
ret
int3
fdivrp
pop
mov
mov
sbb
leave
shrl
xchg
or
mov
cmpsl
xchg
fimull
pop
pop
add
xor
xor
ficoml
and
or
jp
cli
out
iret
rcll
adc
add
test
pop
not
or
fisubrs
push
cmp
pop
xor
push
add
fdivl
sub
mov
mov
xlat
in
and
rcll
leave
jnp
imul
fidivs
add
in
subl
in
fs
shll
ja
fcmovb
sti
iret
or
and
adc
push
sbb
icebp
dec
das
xchg
dec
xor
xchg
cmpsb
adc
pop
cmp
mov
gs
insb
test
ficoms
leave
mov
jb
sbb
mov
in
mov
lea
push
push
mov
mov
sub
dec
cwtl
push
les
mov
das
daa
push
push
sub
or
and
sahf
repnz
cmp
adc
mov
mov
jmp
stc
filds
shlb
mov
inc
mov
push
inc
pusha
fimull
stc
repz
aas
mov
adc
jo
fisttpl
mov
xchg
inc
enter
fucomp
xchg
push
mov
mov
push
or
sub
out
mov
insb
push
pop
xor
jmp
sbbb
pop
add
repz
sbb
out
lds
mov
adc
arpl
pop
mov
xlat
sub
jg
cmpsl
fs
mov
jo
lahf
mov
negl
mov
pop
into
dec
leave
dec
test
movsb
mov
push
push
jg
bound
dec
sbb
out
lret
mov
loopne
out
dec
pop
out
pop
ljmp
push
cmp
fnstsw
arpl
xchg
and
cmp
or
lahf
pop
fucomip
sbb
stc
sbb
std
daa
nop
or
add
xor
ja
cmp
xchg
jp
push
shlb
xlat
mov
or
pop
dec
pop
jge
aam
enter
scas
cltd
xchg
dec
sahf
push
stc
mov
lds
je
out
sahf
shl
mov
lds
outsl
adc
out
call
shlb
inc
test
imul
jp
sbb
mov
or
fs
andl
icebp
call
clc
xchg
sbb
jecxz
enter
sub
hlt
in
fadds
mov
or
or
ficompl
and
adc
pusha
add
lret
mov
enter
clc
mov
mov
shlb
pop
out
fs
les
mov
arpl
aam
rcrb
dec
pop
jmp
xor
dec
iret
mov
shlb
test
sbb
jecxz
aad
mov
dec
mov
repnz
nop
sbb
xchg
addr16
test
push
and
xchg
push
addl
popa
aad
pop
pop
add
lahf
cld
cmp
cmp
or
push
imul
xor
mov
test
mov
add
or
pusha
add
cmp
mov
test
mov
stc
sahf
hlt
shr
les
jecxz
gs
cs
cmp
sub
sbb
dec
ret
aaa
push
std
nop
ret
dec
xchg
push
pop
mov
dec
repz
in
out
xchg
mov
mov
insb
int3
mov
xchg
lods
mov
es
add
push
mov
insl
stos
jmp
aaa
push
mov
cmp
xor
mov
or
dec
lds
movsl
jg
xchg
mov
filds
out
push
or
sbb
cltd
mov
fwait
jae
mov
jns
sbb
cld
insb
aas
aaa
push
mov
call
out
xor
add
into
sub
pop
mov
inc
xor
cmp
jno
and
cmp
test
sbb
dec
sub
aas
imul
dec
xor
nop
stos
push
inc
push
popf
cmp
or
fisttpl
fstps
int
xchg
add
movsl
dec
and
es
push
cmp
gs
jne
mov
fisttps
arpl
in
sub
xchg
mov
or
data16
inc
and
cmpsb
push
bnd
xor
mov
sub
push
sti
dec
and
mov
jae
or
enter
cmc
xchg
dec
ljmp
mov
push
fs
jge
xlat
xor
bound
fidivl
xor
push
push
shll
push
popf
sub
dec
inc
mov
mov
cmp
and
xchg
mov
xor
int3
cwtl
add
push
shrb
pop
jbe
sub
jmp
lcall
ret
imul
fwait
je
insb
sub
imul
sub
ret
mov
lcall
and
out
cld
fcompl
cmp
sti
js
inc
mov
add
push
mov
dec
xor
ljmp
xor
test
movsb
leave
xor
sub
orb
jo
out
xchg
out
pop
gs
shrb
test
mov
insb
aam
jb
pop
pop
insl
out
fists
int
dec
ljmp
push
jbe
sarl
out
xchg
jmp
sub
xor
out
xlat
sub
xchg
push
ret
je
inc
out
sub
dec
fisttps
pop
or
jnp
mov
adc
push
clc
lret
jl
or
cmpsb
rclb
fcompl
insb
jl
cmp
pop
fsubs
loope
xorb
js
adc
movsb
mov
xor
movsb
out
push
in
aam
ljmp
xchg
add
ret
push
pop
inc
pop
mov
mov
les
fcmovnb
in
fs
hlt
addr16
push
cmp
test
fs
fldln2
push
xchg
arpl
lret
sahf
sbb
loope
mov
cld
jg
and
js
insl
arpl
xchg
jnp,pn
xchg
inc
aaa
int
adc
push
cmp
out
repnz
jge
lahf
jp
jb
sub
cltd
movsb
addr16
inc
jp
out
jns
lret
sbb
lcall
and
push
xchg
andb
xor
mov
lret
dec
rorl
pop
aad
lret
mov
push
sub
sti
xor
xchg
das
int3
lret
mov
xlat
inc
cmpsl
insb
lods
ds
es
dec
add
hlt
xchg
inc
lret
or
sub
gs
jg
pusha
mov
lds
loopne
movsl
mov
or
fistpll
and
mov
xchg
orb
mov
mov
outsb
lcall
bound
dec
cwtl
scas
or
imul
icebp
insb
fildll
push
mov
xchg
sbb
jne
scas
aaa
out
scas
adc
push
les
je
out
inc
jb
inc
lahf
out
xor
int3
fs
mov
sbb
xchg
es
or
push
adc
sti
adcb
sbb
dec
popf
fsub
pop
cmpsl
aas
negb
sarl
js
aam
sub
aam
jo
cmp
popf
fdivp
push
dec
ds
xor
jmp
mov
fldcw
fnstcw
stos
aad
push
push
mov
mov
inc
mov
jbe
push
push
mov
push
cmp
push
or
sbb
cmpsb
mov
pop
cmp
jne
mov
xchg
mov
add
insl
insl
subb
jmp
fstpl
pop
aaa
jg
add
scas
inc
out
loopne
pop
insl
pop
clc
lods
sbb
testb
add
mov
dec
fninit
push
mov
xchg
sbb
int3
imul
mov
add
push
inc
and
mov
movsb
in
mov
or
lret
std
fst
leave
push
negb
xor
jnp
fwait
lret
adc
hlt
dec
adc
mov
lock
das
mov
sbb
stos
ret
mov
push
mov
xor
lods
jmp
addr16
cwtl
outsb
insb
fimuls
loop
fisttpll
scas
mov
out
mov
sarb
sub
sbb
sbb
sub
repnz
pop
add
lahf
add
sub
cli
jge
inc
movsb
mov
int3
andl
int
pop
sbb
in
lcall
pop
sbb
repz
sarb
lock
or
sahf
mov
shlb
jb
inc
fwait
arpl
mov
out
sub
es
test
mov
int3
test
pop
push
mov
sbb
stos
cmpsl
ljmp
ret
sub
aad
ds
push
and
push
ljmp
pop
push
or
jne
dec
out
sub
jb
pop
cmp
mov
cltd
dec
mov
gs
popa
cmp
outsb
aam
sub
mov
lods
loop
and
inc
cmpsb
xchg
fstpt
cwtl
adc
push
lea
lods
divb
inc
xchg
mov
sbb
scas
or
ficoms
dec
mov
outsl
fcmovnu
xchg
adc
cmp
sbb
dec
jle
pop
faddl
xlat
lret
insl
sub
mov
inc
push
movb
add
ds
in
mov
loopne
xor
lahf
mov
loopne
pop
sbb
mov
cmp
mov
ljmp
xor
test
popf
ss
popa
shld
lods
pop
arpl
aas
mov
mov
cmp
cmp
mov
push
mov
mov
pop
pop
je
pop
cmc
mov
cmp
mov
sub
xchg
js
clc
cmp
rcrb
lds
sbb
int
fistpl
aam
and
ds
xor
insb
cmp
cmp
add
add
xor
sbb
orb
mov
js
pop
sub
data16
push
mov
mov
adc
xchg
test
inc
jl
mov
rcrl
or
dec
push
std
cltd
mov
pop
pop
jge
xor
stos
nop
adc
adc
add
dec
clc
jae
xchg
mov
jecxz
pop
adc
lret
es
hlt
cltd
std
fnsave
movsl
sub
andb
pusha
sbb
inc
sub
pop
in
jnp
inc
imul
xor
jle
in
jecxz
mov
mov
test
jg
adc
jg
adc
shl
pop
pop
mov
aaa
bound
inc
insb
sub
jp
fs
sbb
andl
inc
pop
inc
lahf
test
in
jns
ret
jmp
int
loop
jae
and
shlb
in
je
notl
xchg
push
in
and
xchg
mov
fs
test
and
sub
pop
dec
or
aas
nop
divb
adc
insl
mov
cwtl
mov
mov
nop
add
mov
jle
mov
ret
xchg
mov
dec
cmpsb
sbb
rclb
inc
jle
sub
pop
addr16
cli
daa
js
pop
in
sub
pop
in
adc
jnp
cmpsl
mov
std
clc
sub
data16
xchg
stos
cli
sbb
cli
push
mov
jg
xchg
int3
nop
ficoms
cmp
jbe
inc
xchg
movsl
imul
mov
mov
push
call
scas
jb
and
add
jle
imul
push
inc
arpl
ja
lcall
jecxz
lahf
arpl
inc
pop
mov
mov
imul
jb
sbb
sub
loop
jl
or
pinsrw
inc
test
push
aam
jo
cmp
adc
xor
rorb
mov
dec
inc
rcrl
mov
cmp
ret
mov
push
jnp
mov
fstl
fcoml
int3
inc
fcoms
or
mov
or
or
jbe
mov
ss
add
mov
mov
xor
and
xor
jnp,pn
sti
aaa
lret
pop
inc
leave
cs
std
adc
xlat
pop
dec
insl
sbb
lock
xor
pop
dec
sahf
fidivs
jne
jno
fnstcw
jns
adc
subb
mov
std
push
cmc
adc
push
subl
xchg
jmp
aad
mov
aam
pop
mov
ds
in
loop
fstpl
sub
imul
inc
lds
int3
imul
mov
cwtl
jo
test
sbb
lock
int
lret
in
cwtl
jle
std
cmp
roll
and
xor
movsl
aam
mov
out
in
mov
and
add
jnp
mov
and
cwtl
mov
jno
mov
sub
jbe
subl
cmp
orl
push
hlt
jns
adc
xorl
jnp
mov
pop
sbb
mov
mov
int
fisubs
pop
and
sub
and
jg
mov
insb
stos
inc
repz
mov
ljmp
inc
in
fmuls
push
cmp
imul
mov
mov
out
pop
out
insb
loop
inc
cmpsl
sub
lret
pop
popf
or
cld
nop
sub
add
jg
push
rcrl
test
sbb
fwait
xor
aaa
jmp
and
test
repnz
test
mov
sarl
ja
mov
shll
out
adc
lcall
jge
adc
pusha
add
mov
mov
arpl
and
mov
and
int3
dec
pop
mov
push
sub
mov
std
pop
test
bound
fisttpl
sti
xlat
cwtl
decb
and
and
add
adc
ds
cmp
sbb
popa
stos
inc
push
shr
mov
in
in
outsl
and
cmpsb
das
jp
sbb
xor
adc
mov
and
mov
adc
inc
adc
xor
inc
sbb
lds
inc
lds
push
cld
in
mov
mov
int
jns
or
inc
inc
sub
push
jp
pop
push
mov
mov
pop
sub
xchg
cltd
fcompl
shrb
or
mov
out
push
in
sub
sub
xchg
xor
jae
adc
data16
orl
inc
fdiv
push
arpl
add
jl
insl
das
es
inc
fcoml
mov
jb
xor
ret
and
sbb
add
fisttpll
rcll
or
das
add
lock
jb
add
add
in
bound
push
inc
sbb
stos
scas
mov
cmpsb
cmp
xlat
push
mov
xchg
fcomp
or
dec
movsb
cld
dec
adc
mov
adc
jo
inc
js
cwtl
movb
dec
jae
mov
std
inc
pop
cmpsl
pop
dec
push
repnz
jb
jle
repz
xchg
out
pop
aas
push
mov
jae
cmp
shl
inc
push
or
ljmp
stos
cmpsb
mov
fnstsw
xorb
loope
adc
jbe
dec
test
cmc
mov
dec
push
sbb
push
fmul
fiadds
jae
jb
in
in
jb
test
jns
cli
mov
pop
rorb
nop
aad
flds
pop
fistl
pop
or
xor
sub
or
rcll
aam
inc
push
aad
into
push
cmp
int3
lds
lock
pop
pushl
or
and
adc
and
xor
setns
adc
out
pop
hlt
inc
sar
adc
adc
fcomi
xchg
xor
and
mov
mov
and
fwait
push
xor
xchg
jo
in
cld
imul
sahf
sbb
xor
lret
movsl
jb
pop
cmpl
push
aas
outsl
loopne
std
push
jecxz
mov
ja
cld
insl
xchg
adc
insl
repnz
test
gs
push
sub
cmp
test
jg
add
dec
push
test
aam
lea
outsl
fisubs
push
sub
xchg
push
popa
nop
sub
sbb
add
pop
outsl
push
insl
inc
and
stc
lea
push
faddl
push
adc
add
popa
rcrl
mov
mov
sti
dec
loop
lods
xlat
xor
and
jg
xchg
or
or
mov
adc
sahf
lar
mov
push
cs
pop
sahf
jns
int3
insb
mov
es
mov
mov
xchg
rdmsr
in
in
les
aad
scas
mov
in
sbbl
adc
int
outsb
xchg
pop
cmpsl
popf
cli
scas
int
xor
jbe
xchg
rcl
push
adc
in
sti
push
push
xor
push
cltd
push
pop
addr16
daa
and
inc
xchg
mov
inc
pop
add
lods
xor
dec
mov
clc
leave
cltd
cli
push
xchg
sbb
pop
daa
xchg
addr16
mov
iret
mov
cmp
pop
mov
add
xchg
jns
cs
ret
xchg
cmpsl
cmp
mov
pop
movsb
sahf
ret
and
out
inc
js
into
dec
mov
pushf
into
jo
xchg
stos
adc
mov
pushl
bnd
cltd
xor
xchg
dec
mov
data16
cmp
int
add
pop
mov
aaa
jno
rol
sti
push
lods
xor
dec
jnp
mov
lods
sbb
pop
jecxz
stc
jecxz
popf
jecxz
sub
outsl
cld
cltd
test
arpl
rclb
xchg
dec
push
inc
aas
cmc
ret
pop
jnp
clc
mov
icebp
mov
das
adc
and
jmp
mov
push
in
or
push
jo
out
mov
xchg
aam
loop
adc
or
mov
inc
inc
std
leave
mov
js
lahf
jno
fistpl
mov
ret
cld
mov
icebp
push
jno
xor
fwait
inc
cmpsl
sub
add
jns
lds
sub
sbb
adc
movsl
xlat
adcl
xor
xor
cmp
ljmp
repz
xor
jp
mov
or
jg
js
int
or
mov
bound
std
aad
jae
fisubrl
clc
jge
push
jecxz
test
into
xchg
fldl
out
dec
aam
notl
shrb
jmp
lods
popf
stos
inc
xchg
dec
sub
push
lods
or
daa
pop
imul
fdivl
mov
mov
mov
sub
mov
jmp
roll
cs
adc
push
add
fcomps
fwait
push
sub
loopne
in
xor
icebp
mov
inc
cli
push
shll
xchg
test
mov
stos
pop
jl
je
pop
sbb
dec
es
outsl
dec
adc
scas
push
movsl
or
mov
sbb
addr16
mov
fldl
inc
xchg
stos
or
lcall
mov
or
in
scas
inc
cmp
add
sti
sub
dec
inc
or
and
aaa
dec
daa
es
mulb
xchg
lret
inc
icebp
and
sub
add
mov
fadd
cli
fildl
stos
aam
pusha
add
inc
aas
arpl
aas
xchg
jge
adc
push
pop
jle
mov
imul
aas
retw
mov
xor
jmp
add
adc
and
fdivl
and
loope
push
pop
and
adc
mov
xor
andb
repnz
in
and
xchg
aad
aam
scas
mov
test
bound
sbb
mov
adc
scas
mov
fidivrs
in
mov
test
add
aad
fcmovu
outsl
lret
repnz
sbbl
push
cld
dec
mov
mull
adcl
clc
js
enter
pushf
dec
and
pop
test
inc
or
xchg
jle
sub
jno
adc
scas
lods
jmp
cmpsl
cmp
push
out
cli
dec
imul
scas
mov
xchg
cltd
adc
dec
push
movsb
bound
dec
pop
or
clc
sarb
push
xchg
dec
shll
add
fmul
lret
xchg
mov
dec
jns
and
or
aas
jno
ja
mov
dec
mov
psraw
or
popa
xchg
xchg
aaa
and
cmpsl
or
int
xchg
repz
cmp
sub
push
xchg
sbbl
mov
pop
and
popa
or
jb
not
cltd
out
push
jmp
mov
stc
sar
mov
arpl
lret
jne
pop
iret
popa
test
mov
lock
or
mov
outsb
iret
push
mov
xchg
cmp
sahf
adc
lret
and
or
mul
arpl
adc
jnp
iret
adc
jmp
imul
cld
jns
and
xchg
pop
fldl
dec
xchg
enter
sub
mov
push
mov
inc
mov
pop
movsl
add
push
mov
xor
incl
testb
sub
inc
inc
xchg
mov
xlat
aaa
jmp
inc
std
incl
les
ds
sub
outsb
je
test
pop
rclb
dec
outsb
jno
jnp
add
cmpsb
gs
lahf
mov
xor
jge
and
adc
sahf
mov
pop
xchg
jl
or
int
out
push
sbb
stos
outsl
sub
jo
into
mov
jmp
mov
js
pop
cmp
cmp
movsb
jmp
jmp
push
push
and
inc
cmpsl
daa
mov
push
jmp
dec
rcll
into
iret
lret
mov
inc
je
insl
xchg
cwtl
enter
js
lcall
orb
pop
lret
in
xlat
adc
inc
cmp
lret
call
jae
adc
mov
pop
xchg
push
ds
loope
icebp
lret
ds
jg
inc
fwait
mov
inc
enter
push
loop
pop
inc
adc
scas
inc
std
bswap
std
scas
mov
jl
jo
in
ret
gs
push
push
ja
mov
cmp
enter
je
leave
int
test
test
divb
mov
ret
cmp
mov
xchg
mov
hlt
xchg
cmp
outsb
outsl
xchg
push
sub
sub
mov
rolb
xor
mov
cld
pop
int
and
fnsave
pop
in
ret
sub
lahf
mov
cmpsb
jnp
pusha
into
icebp
scas
xor
test
xor
jmp
jno
mov
popw
adc
mov
jmp
mov
adc
jae
cmp
xchg
fcoml
xchg
xor
test
adc
or
pusha
imul
sub
sbbl
je
fadds
and
xchg
dec
xchg
lods
sbb
push
js
aad
gs
pop
jbe
mov
cli
push
idivb
outsl
ficompl
fldenv
shrb
xchg
jbe
adc
jp
and
xchg
jbe
andl
or
adc
loope
dec
enter
pushf
push
imul
inc
pop
cli
mov
xchg
pop
sub
sar
xor
pop
jl
adc
int3
and
adc
pushf
push
xlat
sub
dec
stc
xchg
adc
call
xchg
fs
arpl
pop
mov
sub
imul
je
stos
scas
sarl
ret
dec
xor
repnz
fstpt
add
insl
shrl
inc
mov
mov
cld
sbb
inc
movsl
pop
jb
daa
inc
xchg
push
inc
add
and
mov
outsb
dec
popa
int
mov
stc
flds
sbb
les
outsl
sub
in
lds
adc
push
lcall
jb
and
pop
xchg
push
loopne
ss
jmp
and
rcll
cmc
test
cmp
pushf
inc
pop
mov
popa
push
gs
aas
enter
xor
repz
sbb
mov
pop
mov
and
add
sub
in
loope
cmp
xchg
setbe
movsl
lock
call
outsb
dec
lods
mov
aad
popf
rclb
xor
mov
jmp
aam
repz
xchg
in
sbb
mov
mov
mov
lods
dec
pop
lcall
in
pop
cmpl
sbb
inc
roll
pop
bound
jge
fdiv
cli
xor
ljmp
es
fucomp
mov
jbe
inc
cmp
sub
and
iret
in
test
xor
jae
sub
lock
repz
aad
inc
cmp
push
mov
xchg
jbe
das
mov
jl
jno
push
mov
pop
lea
cmpb
nop
ret
fisubrl
add
imul
jno
dec
test
cmp
les
mov
pop
and
push
gs
adc
fmul
and
mov
lds
into
ja
fisttpll
repz
mov
jae
shlb
ret
adc
sahf
mov
jmp
push
inc
sbb
stc
add
add
push
and
and
push
dec
xor
adc
imul
jno
push
jbe
or
adc
sub
pop
jns
pop
mov
es
mov
cmc
jae
adc
int
int3
mov
fstl
lock
mov
jbe
pop
js
mov
mov
test
popa
out
iret
dec
lock
lcall
pop
xchg
cmp
gs
sbb
dec
aam
mov
pop
jle
sarb
pop
out
addb
and
or
rolb
movsb
ficomps
fimuls
dec
pusha
pushf
adc
leave
and
adc
xor
mov
or
data16
lahf
or
mov
adc
mov
cld
push
sarl
idivb
lahf
sahf
imul
cmp
cmp
mov
pop
mov
jg
stc
nop
loop
xchg
cmp
jle
neg
scas
movsl
jl
sbb
gs
fimuls
dec
das
jle
repz
int3
fsubrl
add
xor
rorb
push
and
xor
or
pusha
ret
xor
cwtl
jp
jp
dec
push
mov
in
ret
jb
and
std
xlat
mov
ljmp
shlb
xor
mov
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
cmp
int3
xor
addb
sub
inc
dec
adc
xlat
les
xchg
leave
cwtl
insl
xor
das
dec
sahf
add
adc
aas
loop
sub
loopne
xchg
pop
dec
daa
clc
xchg
xchg
pop
out
pop
push
mov
rcr
or
lea
xchg
and
stos
or
lret
fcmovnb
pop
fs
add
dec
hlt
stc
push
bound
inc
mov
pusha
dec
sbb
and
cmpsb
inc
ss
mov
ret
in
jl
test
mov
imul
dec
enter
adc
in
mov
mov
cmp
jnp
or
mov
dec
fdivrs
mov
xlat
lods
xor
ret
mov
dec
lods
lods
std
jmp
pop
in
push
std
push
testl
mov
lock
enter
repz
pop
insl
mov
imul
mov
xchg
ret
dec
arpl
sub
jbe
std
jnp
cwtl
dec
add
pop
mov
ret
clc
or
jmp
mov
jo
adc
sbb
jmp
mov
jp
pop
cltd
lret
les
mov
nop
cli
sbb
add
or
test
inc
or
cmp
add
fnsave
or
and
push
jle
inc
aaa
js
mov
aam
loope
test
sbb
push
jne
test
aas
lret
dec
cli
pop
sahf
cmp
xor
gs
std
dec
roll
pop
cmp
jne
dec
jne
stos
nop
jp
or
pop
jne
xor
sub
mov
insl
rclb
xchg
jg
dec
les
test
leave
and
ds
lods
sahf
loop
aad
std
insl
inc
xchg
fs
testb
cmp
jae
sti
enter
lock
pusha
push
or
and
mov
xchg
inc
int
mov
idivb
sbb
mov
mov
roll
xor
cmc
arpl
lods
inc
sub
cmpsl
jmp
cmc
adc
mov
ja
and
cmp
mov
into
xchg
and
sbb
pop
and
faddl
in
fildl
jmp
mov
out
pop
gs
cmp
mov
subl
rcrl
sti
sub
lock
divb
lret
ret
xchg
jg
xlat
repnz
repz
push
adc
inc
fldcw
sub
inc
or
xchg
inc
mov
fistpll
sbb
mov
mov
cmp
mov
pop
cs
mov
cmpsb
add
xchg
push
mov
inc
mov
lahf
cmp
mov
cmp
push
test
imulb
cmpsl
inc
xchg
inc
std
and
outsb
inc
in
enter
lock
xchg
xrelease
or
dec
inc
or
dec
adc
dec
and
mov
cmp
xchg
sub
adc
or
cmp
cwtl
ja
cmp
int
add
sarb
sub
jae
mov
xchg
xchg
test
aad
xlat
outsb
fdivl
jns,pn
ret
add
inc
jne
push
popa
pop
lods
mov
mov
pop
jo
mov
stos
pop
dec
adc
xor
mov
aad
testb
movsl
ror
mov
loop
mov
dec
lret
js
scas
jge
into
daa
imul
les
rcl
or
sub
in
enter
stc
outsb
lcall
add
rcrl
sahf
cmp
stc
mov
cli
aad
push
out
movsl
in
fistl
cmc
xor
sbb
cmpsl
nop
mov
fsub
dec
or
or
pushf
mov
dec
lret
add
xlat
lea
pop
push
and
jo
clc
push
das
adc
dec
pop
je
add
lds
add
push
fcoms
divb
and
push
das
insb
sbb
fidivl
inc
cmp
mov
clc
lods
shll
sti
xor
xchg
jl
xorb
ret
pop
into
xor
pop
xchg
add
inc
dec
sti
mov
mov
mov
je
add
xorb
mov
in
dec
sub
scas
cwtl
shlb
xchg
fs
aaa
or
push
out
sub
and
int3
in
sub
sub
arpl
test
lea
es
arpl
push
push
nop
dec
popf
ss
push
mov
push
mov
xor
rcll
cld
cmp
sub
mov
iret
inc
outsl
ret
fwait
xlat
fs
addl
xchg
sbb
sbb
lea
pushf
ret
lods
cltd
or
and
lret
xchg
mov
xchg
push
push
stc
mov
sbb
jmp
xchg
xor
jecxz
std
lcall
push
pop
dec
add
mov
push
mov
adc
insb
out
push
cld
push
jle
mov
in
adc
xchg
inc
push
out
cmc
xor
sub
xor
es
fisttps
xchg
int3
push
lea
rclb
je
push
bound
and
call
hlt
adc
pushf
mov
jge
push
test
aad
lret
or
xor
mov
lods
xchg
leave
dec
shrd
fidivrl
fwait
test
jns
into
in
xchg
or
subl
jne
mov
add
iret
mov
cmp
test
sub
or
les
daa
push
fbld
and
adc
popl
jne
jne
call
out
jbe
into
cmp
sbb
xchg
push
adc
sbb
cld
xchg
aaa
sbb
dec
sbb
xchg
outsl
daa
xchg
sbb
pushf
cmp
dec
es
jnp
xchg
loopne
inc
gs
cmp
push
pop
jno
flds
cli
sub
xor
std
push
incb
xchg
add
lods
clc
mov
mov
sarb
scas
dec
mov
loop
mov
shrl
or
xchg
into
enter
mov
mov
push
in
cmp
dec
cmp
or
pop
xor
pop
insl
add
loope
push
or
mov
mov
and
sub
popa
adc
sub
std
add
mov
les
push
pop
in
inc
or
xorl
jno
pop
int
cltd
dec
shlb
mov
js
add
jl
jmp
scas
mov
fildl
outsb
rcrl
pop
out
rcll
cmp
in
mov
dec
imul
sbb
adc
push
and
test
aaa
pop
mov
mov
cld
inc
cmp
arpl
cmpsb
out
fmuls
mov
fmuls
imul
push
call
ficoms
cmpsb
mov
or
jnp
or
push
fidivrl
int3
pushf
adc
dec
pop
add
shrb
insl
test
scas
cmp
popf
jae
push
add
inc
and
push
sub
lahf
arpl
mov
cld
cld
pop
es
cmpsb
sahf
xor
test
add
xor
inc
inc
xchg
loopne
notb
sub
push
xor
std
cmp
ficoms
in
repnz
notb
sub
lret
pop
aaa
push
enter
faddl
idivl
in
sub
pop
dec
shlb
adc
sbb
cli
jmp
in
ljmp
and
loopne
or
jmp
insl
sub
les
fwait
lahf
lcall
orl
out
and
dec
add
lret
movl
sub
sub
pop
mull
notl
shlb
jmp
cmp
fcomi
or
movsb
test
push
cmc
and
ret
adc
cwtl
ss
dec
jo
stos
sub
pop
xchg
jno
inc
mov
pop
jno
mov
and
sbb
and
xchg
jmp
mov
mov
and
xchg
push
lds
aaa
in
xchg
mov
cmp
jno
xchg
cli
bound
in
pop
xchg
in
fmuls
mov
into
aaa
mov
leave
stos
insl
mov
movsb
fstps
jecxz
daa
add
sbb
inc
mov
pop
mov
fs
or
xchg
test
push
dec
sbb
cltd
xor
test
pop
add
mov
mov
add
or
sarb
movsb
or
test
pop
sub
and
xchg
cmp
mov
jne
subb
int3
sub
pop
mov
dec
std
cmp
je
es
add
mov
cld
cs
dec
xchg
dec
les
jbe
lahf
pop
sbb
cld
scas
adc
lods
mov
lock
xor
dec
add
into
cmp
fcoms
enter
sbb
cmp
cmp
dec
arpl
xchg
jge
ljmp
popf
test
ret
dec
jmp
aas
mov
lcall
addr16
xchg
xlat
mov
mov
lahf
dec
add
push
repnz
es
add
adc
push
pop
mov
insb
jmp
cmp
fistl
mov
dec
push
enter
ss
je
imull
loope
jno
pop
inc
jp
push
fdivrs
push
push
mov
clc
and
mov
sub
outsl
dec
leave
repz
cmpsl
shrl
test
add
cltd
adc
cs
scas
lea
stos
divl
cmpsb
xchg
jmp
mov
sbb
jae
and
push
push
xor
sbb
push
sbb
xor
lcall
and
ja
mov
out
cmp
rolb
push
aaa
jbe
push
and
jno
out
mov
fyl2xp1
jns
and
pop
nop
sbb
enter
xchg
push
lods
adc
out
or
and
mov
sub
inc
shr
pop
fnstenv
cmpsb
mov
xor
mov
adc
mov
mov
fs
rorl
mov
int
leave
incb
pcmpgtb
dec
xor
pcmpeqb
push
cmp
enter
lret
pop
xor
add
out
dec
and
xchg
mov
fdivp
xchg
sti
movsl
fwait
dec
mov
push
out
jbe
jbe
jno
jmp
insl
push
pop
lret
cwtl
xchg
dec
inc
call
cwtl
shll
pop
pop
mov
popa
dec
xchg
adc
outsl
or
scas
mov
mov
xchg
sarl
jg
call
daa
daa
fimuls
adc
loop
adc
bound
ror
ljmp
jle
dec
pop
data16
lods
pop
mov
mov
sarb
sbb
test
dec
ljmp
inc
pop
sbb
int
daa
insl
cld
sub
adc
or
fadds
dec
testl
pop
lods
xchg
jp
adc
shrb
sbb
adcw
clc
sbb
out
pop
arpl
xchg
stc
loopne
dec
aam
rcr
outsl
test
jns
sarb
or
in
aaa
mov
aas
sbb
icebp
lahf
xor
les
cmpsl
scas
cld
ja
or
mov
shl
lcall
je
gs
mov
std
jl
sub
lods
dec
jno
aas
nop
sbb
jl
mov
fdivrl
test
mov
inc
and
loopne
pop
movsb
lret
inc
rep
add
pop
das
notl
or
add
mov
pop
sub
mov
scas
xchg
jnp
rolb
outsb
sbb
addr16
movsb
mov
das
rorl
mov
hlt
flds
xor
and
sarl
rorl
mov
dec
cltd
dec
cli
out
jl
push
cld
clc
jns
xchg
bound
scas
xor
outsl
lock
ja
mov
sub
bound
sub
insl
mov
and
mov
mov
faddl
cltd
cmp
in
inc
test
sbb
dec
jae
notb
aad
mov
iret
xor
cmp
or
inc
in
mov
ret
dec
xlat
lret
loop
mov
or
dec
in
scas
aam
mov
iret
aam
flds
in
sbb
repz
mov
pusha
sub
aam
insb
xor
push
and
cli
ja
int
xchg
jb
fwait
stc
leave
push
lock
add
or
movsb
insl
cmp
mov
mov
sbbb
xor
in
shlb
push
outsb
mov
repnz
test
fnstenv
mov
fimuls
sbb
imul
ds
loop
jg
mul
ljmp
or
sub
imul
jl
popf
ja
and
stos
adc
jecxz
loop
sbb
cmp
and
push
sub
test
mov
dec
daa
fs
pop
fdivrl
ret
scas
mov
dec
push
ret
sbb
and
xchg
cmpsl
xchg
inc
int3
std
mov
jmp
into
xchg
enter
jbe
mov
dec
fisttps
jmp
lcall
inc
int
inc
and
push
sbb
mov
loopne
adc
mov
inc
sbb
pop
les
sahf
mov
testl
mov
sbb
cmp
lahf
imul
dec
sbb
shlb
jno
mov
push
mov
inc
aaa
sarb
jg
dec
xchg
pop
stc
jle
add
mov
push
mov
or
push
push
nop
je
testl
pushf
sbb
int3
pop
push
jmp
enter
pop
sub
add
sbb
shr
push
shl
and
rolb
loop
adc
aad
lea
pop
out
jo
inc
call
es
pop
jl
test
xor
sub
sbb
and
test
mov
subl
fldpi
dec
inc
or
repz
movsl
push
adc
dec
loopne
sahf
repz
mov
mov
jp
xchg
das
jmp
mov
cmc
cltd
dec
cmp
je
push
fcom
push
int3
ss
invd
jae
pushl
pop
ds
mov
stos
and
mov
adc
dec
mov
int
shll
add
sbb
xor
push
ljmp
fisubrl
cmp
mov
leave
sbb
fisubrs
pusha
push
xchg
out
ds
lcall
and
push
mov
push
aad
push
shr
add
divb
test
scas
out
pop
scas
jle
mov
pop
mov
sub
jmp
push
cmpsb
jle
mov
mov
sbb
cmp
mov
cmp
fisubrl
cmp
movsl
mov
popf
push
pop
xchg
add
enter
cmp
mov
dec
stc
test
mov
pop
cmp
inc
std
cmc
or
fbld
pop
xchg
test
test
xchg
int3
mov
cmp
cmovg
popa
nop
frstor
iret
dec
addl
cmp
test
pop
add
cmp
sub
xchg
push
ljmp
inc
lret
xorl
ret
dec
xchg
cmp
popa
ret
test
mov
or
sub
movsl
in
addr16
gs
adc
repnz
icebp
test
inc
xchg
leave
movsl
dec
adc
push
sarl
cmp
das
lcall
loopne
mov
or
mov
sbb
jmp
pusha
dec
and
xchg
test
inc
lds
test
rclb
rcll
cmpsl
fisubs
mov
add
lods
pop
call
loope
aam
int3
push
mov
movsl
inc
mov
lods
add
in
cli
jg
out
mov
test
rcr
fld
pop
cmp
dec
ljmp
sub
pop
in
sbb
out
jecxz
call
inc
mov
mov
jbe
xchg
sti
jbe
icebp
ret
lcall
dec
jno
stc
mov
imul
arpl
sbb
xchg
sbb
xor
stos
pushf
fimull
inc
xchg
int3
or
dec
pop
jg
pusha
xchg
aad
scas
outsl
leave
jmp
and
xor
movsl
xor
or
mov
mov
mov
add
xor
fldcw
mov
push
daa
data16
or
repz
in
mov
pop
adc
testb
add
or
testl
jnp
movb
cmp
dec
mov
in
add
lahf
lcall
and
inc
jmp
pop
ljmp
push
fildl
fwait
dec
jmp
lods
cmc
xorl
jbe
imul
repz
push
push
mov
pop
mov
xor
es
fnstcw
sub
out
inc
dec
xor
in
adc
lods
inc
sbb
xchg
inc
mov
cmc
jmp
test
imul
push
stos
loope
out
or
or
int
mov
cmp
push
xchg
sbb
cmp
sub
inc
dec
outsl
add
je
xchg
push
and
fwait
daa
not
mov
jp
sbb
rorl
lds
sbb
mull
cmp
negb
shll
or
fadds
pop
xlat
push
test
mov
in
jbe
pop
add
push
push
dec
lret
enter
int
arpl
bound
out
sbb
into
sub
mov
adc
lods
sahf
sbb
icebp
push
ror
push
lcall
aas
clc
std
into
xchg
push
popa
outsb
push
outsl
fldcw
mov
popa
sbb
int3
sub
ds
into
sbb
sbb
mov
shlb
xor
lret
sahf
dec
push
lret
imul
shll
pop
leave
aad
inc
and
test
addr16
push
xor
mov
push
cmpb
jbe
hlt
push
cmp
ja
call
sub
cmc
stos
push
xchg
shr
mov
insb
mov
push
pop
cmp
push
lods
leave
pop
pop
xchg
leave
iret
jl
lods
std
cld
leave
std
mov
pop
lds
cmp
cmp
lret
mov
lret
add
fists
sub
es
inc
fcmove
push
shl
andb
pop
adc
adc
push
mov
and
or
stos
cmc
inc
inc
dec
cltd
in
cld
xchg
add
popa
clc
jbe
xor
cld
test
sahf
test
xchg
pushf
shlb
jg
jg
addb
pushf
sub
in
outsl
dec
scas
adc
rclb
sbb
and
pop
mov
cmp
push
aad
add
mov
xchg
cmp
popf
jmp
xlat
dec
out
cwtl
fs
test
push
sarb
sub
idiv
pop
dec
pop
cmp
cmp
ljmp
adc
mov
xchg
movsl
cli
es
jp
push
ret
stos
mov
out
sti
xchg
in
in
out
jne
inc
mov
pop
cmp
shr
cmp
cmp
add
pop
stos
pop
lock
adc
mov
xor
cmp
lret
flds
or
xor
mov
cld
fdivp
shrl
lock
xchg
pop
fwait
int
cmp
dec
sub
mov
test
mov
pop
push
aaa
cmp
stos
outsl
sbb
sub
mov
dec
mov
add
lock
mov
repz
xor
in
ljmp
mov
lcall
pop
inc
aas
push
jge
jg
cmp
or
sti
push
add
mov
pop
addr16
and
je
movsl
adc
add
xor
sub
adc
pop
mov
movsb
xchg
mov
movsl
mov
or
mov
test
jmp
mov
test
push
sbb
xchg
push
cli
mov
xor
jecxz
mov
fsubs
f2xm1
insb
lahf
mov
pop
sarl
push
sbb
in
push
imul
shlb
stos
rclb
loop
dec
cmp
les
xchg
insl
les
shll
movsl
mov
mov
push
out
add
ljmp
lea
repnz
out
dec
sub
stos
push
adc
ss
dec
xchg
jae
mov
cmc
cs
mov
cld
imul
push
mov
scas
xor
adc
adc
stos
jno
jae
test
in
outsl
fstl
sbb
pushf
nop
popa
push
xor
cmpsl
cmpsb
xor
flds
dec
jbe
mov
fisttps
outsl
mov
dec
shrb
aas
pop
fisubrl
stos
xor
aaa
adc
bound
leave
cmpl
shrl
jb
loopne
imul
jg
rol
xlat
mov
mov
mov
add
xchg
or
add
dec
fcmovnbe
sbb
xor
iret
lretw
lds
xlat
mov
dec
push
cmp
mov
shrb
xchg
jb
test
fcomps
leave
sbb
str
mov
or
inc
loop
jg,pt
xchg
mov
push
popl
and
in
cmc
aas
jae
loopne
xchg
jno
fldcw
add
pop
xchg
test
xchg
pusha
push
sbb
repnz
pop
fcmovnu
loop
aam
push
fadds
sbb
bswap
sub
dec
sbb
enter
outsl
shr
in
addb
and
sbb
lds
or
sti
xchg
lahf
dec
out
popf
inc
test
add
icebp
das
pop
pop
cmpsl
nop
fsubr
sti
sbb
int
in
aas
ficomps
xchg
or
push
icebp
sbb
sub
xor
sahf
data16
into
loope,pt
lods
cwtl
push
push
jb
cld
out
push
inc
jbe
jmp
dec
and
and
aas
js
mov
push
mov
cmp
popf
je
mov
rolb
in
repz
test
fwait
pop
xchg
mov
out
subb
sbb
cmp
sbb
movb
mov
bound
mov
ss
int3
stos
xchg
popf
inc
addl
neg
xlat
popa
out
daa
jmp
outsl
jle
mov
or
jge
in
xchg
push
adc
mov
xchg
jb
stc
add
and
mov
loop
dec
insb
addr16
or
movsl
aaa
movsb
push
add
cmp
je
data16
pushf
lods
mov
push
push
popf
push
jns
stos
add
cwtl
lret
xchg
out
stos
mov
fdivl
je
inc
pop
xor
jnp
jge
inc
xchg
das
out
clc
dec
sub
xor
insl
repz
aas
je
pop
xchg
xchg
inc
stos
bound
mov
std
jg
add
jg
int
pop
adc
out
fucomi
adc
outsb
fwait
fs
into
or
fidivrs
jbe
inc
sbb
pushf
jae
jae
xor
lahf
adc
dec
incb
cmp
sbb
decl
jns
dec
ss
lret
xor
xchg
add
adc
faddl
mov
mov
mov
aaa
and
sbb
pop
fdivs
int
inc
lea
ljmp
inc
add
pop
lret
pop
int
pop
aaa
push
lds
jge
or
or
cmp
jg
orl
imul
mov
fcompl
repz
and
outsl
mov
dec
lods
rcrl
enter
popf
cmp
int
cwtl
add
cmp
jmp
cmp
sub
push
xor
push
push
mov
pop
cmpsl
int3
test
addb
push
xchg
push
iret
or
je
cmpsl
into
push
adcb
cltd
sbb
xor
scas
out
clc
into
scas
jnp
push
cmp
decl
cmp
cmp
xor
mov
test
lcall
xchg
sbb
add
mov
leave
dec
ret
fwait
jnp
push
add
dec
inc
mov
les
add
and
and
inc
adc
ja
mov
cmpsl
jmp
dec
mov
stc
lahf
push
jg
sbb
pop
scas
push
stc
call
loop
jl
and
push
cld
mov
movsb
mov
je
sub
cmp
adc
jae
test
sub
pop
or
push
dec
outsl
rolb
popa
sub
std
push
mov
push
xorl
or
mov
add
push
push
mov
xchg
mov
sub
lds
cmp
fmul
add
clc
jb
roll
into
sub
aam
jae
mov
shl
push
sbb
aaa
cmp
sarb
lds
mov
cld
scas
movsb
dec
mov
shr
xchg
ljmp
cmovge
mov
adc
cmpsl
jno
pushf
mov
pusha
push
mov
cmpsl
lds
dec
aaa
push
push
xor
xor
xchg
mov
pop
mov
movsb
movsl
fiadds
int3
jecxz
ficompl
or
sbb
cli
xorl
int
and
or
or
sub
push
add
sub
pop
cmp
adc
add
pop
aaa
and
aas
push
sbb
mov
dec
lret
inc
aas
cld
cmp
in
add
sub
pop
pushl
push
jge
cmpl
cs
sub
mov
add
sub
scas
add
xchg
nop
xlat
mov
push
daa
adc
inc
loope
cmpsl
xor
mov
adc
call
ret
and
jg
lods
repnz
or
add
imul
inc
sbb
stos
inc
cli
mov
mov
sub
pop
dec
mov
xchg
lcall
aad
bound
mov
aas
pop
cmp
jecxz
outsb
jns
sbb
dec
jno
dec
loopne
and
lret
jno
out
lods
mov
sarb
cmc
fildl
mov
fstpl
add
lods
aaa
cld
aaa
or
sub
lea
call
sbb
in
js
add
dec
leave
orb
aam
daa
xor
ja
mov
stos
xchg
xchg
dec
xchg
cmpsb
pop
in
fwait
cmpl
rcl
add
les
call
dec
fiaddl
jle
orb
test
mov
ret
ret
ljmp
dec
add
scas
xchg
fucomp
repnz
xchg
mov
popa
hlt
into
iret
jae
and
dec
jmp
stos
sti
pop
es
das
test
in
xlat
mov
fimull
sar
mov
scas
inc
push
pminsw
lret
pop
repz
lahf
mov
mov
leave
idivl
mov
imul
out
in
sub
cmp
shl
xor
flds
rcrl
sbb
or
and
out
decb
test
adc
xchg
imul
push
adc
fisubl
or
push
fs
push
or
xor
out
sub
xchg
xchg
lock
shll
int3
jne
adc
addr16
bswap
popa
mov
mov
mov
sub
or
pushf
out
lret
pop
push
adcb
fxch
ja
sahf
cltd
mov
or
cmp
outsl
lcall
sub
sbb
and
pushf
ja
sub
lahf
inc
dec
push
out
sbb
shll
adc
inc
iret
add
cmpsl
or
into
jmp
daa
out
jne
icebp
inc
ficomps
cmp
add
xchg
es
dec
inc
je
xchg
fs
push
inc
hlt
nop
out
lds
shll
leave
jp
cltd
in
das
inc
xor
xor
cld
cmp
dec
int3
sbb
icebp
rolb
test
int
sbb
inc
xchg
xorl
lods
mov
inc
cmp
nop
movsl
js
mov
out
ret
das
dec
or
cmp
mov
js
cmp
add
sub
jnp
lret
sub
gs
mov
xchg
cs
sahf
push
rolb
out
ret
movsl
inc
xor
lss
jbe
dec
les
xchg
dec
jno
mov
add
leave
enter
xchg
insb
dec
pushf
repz
int
xor
andb
mov
and
push
sahf
or
push
jb
mov
lods
mov
sarb
add
mov
aam
test
xchg
rorl
shll
ret
dec
daa
push
dec
mov
mov
lea
jp
stos
and
xor
sub
sbb
nop
push
int
cwtl
inc
and
mov
push
add
out
iret
dec
jne
addr16
or
cwtl
fimuls
jle
add
jae
mov
pop
ds
frstor
cli
jo
jns
mov
add
xchg
and
mov
jae
mov
test
jecxz
int3
cmpsl
icebp
xchg
pop
pop
outsl
mull
int3
jae
push
push
rol
psubd
enter
pop
stos
rorb
cmp
movsl
mov
cwtl
dec
outsl
loopne
dec
add
sub
aam
jns
les
imul
jecxz
inc
outsl
or
icebp
stos
and
jns
add
xor
inc
and
in
in
pop
mov
pop
jle
jle
loopne
cltd
sub
mov
stc
jae
cmp
push
xchg
xor
outsl
stc
fldcw
and
push
cwtl
mov
mov
pop
in
and
push
sub
xchg
loope
and
sbb
jl
sbb
andb
call
call
adcl
mov
push
repnz
mov
xchg
adc
ja
std
cmpsb
push
andb
ds
adcb
mov
nop
xor
ljmp
pop
sub
xor
jne
gs
cmp
or
push
sahf
jns
shr
cmp
adc
ret
mov
pop
movsb
inc
ljmp
xor
in
adc
xor
shlb
mov
lret
int3
movsl
adc
mov
out
adc
mov
push
cmc
in
jb
push
sahf
imul
sub
lret
les
push
jge
adc
das
xor
add
stc
addr16
sub
sbb
dec
mov
and
pop
sbb
push
cltd
in
fwait
divl
lds
xor
orl
out
es
les
aad
sub
sbb
xchg
aam
sahf
daa
cmpsl
xchg
xchg
ret
out
es
dec
mov
fwait
jns
scas
cmp
and
filds
push
mov
ss
cmpsb
inc
jns
xchg
push
push
push
in
cmp
stc
call
movsl
out
adc
pop
mov
daa
or
dec
sbbl
cli
mov
push
adc
jecxz
repz
in
sub
jo
test
push
pop
mov
dec
inc
cltd
cld
inc
mov
std
gs
aas
dec
xchg
es
add
loope
clc
mov
push
test
adc
add
in
dec
sbb
or
jmp
push
fwait
inc
inc
xchg
lods
xor
sub
sbb
arpl
dec
je
mov
cmp
dec
and
imul
lods
sub
cmp
xlat
movsb
or
and
fimuls
nop
pop
jecxz
push
cwtl
xlat
add
sub
dec
push
jle
int
lods
sbb
popa
mov
mov
add
add
inc
shl
xchg
pop
cli
sbb
inc
xchg
cs
int3
into
cltd
mov
adc
inc
cmpsl
xchg
sbb
push
mov
iret
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
das
xlat
test
out
incl
addl
and
movsb
aam
push
pop
mov
inc
xorl
cmp
out
rolb
jl
mov
cli
and
dec
insl
dec
loope
adc
pushf
cmp
jp
mov
adc
out
loop
pusha
xchg
stos
mov
cmc
mov
mov
loope
hlt
mov
and
clc
jnp
insl
rol
mov
xchg
mov
cmc
push
adc
cmc
adc
xchg
outsl
pop
pop
jp
movsb
jle
shll
jle
lret
mov
push
dec
fwait
test
movsb
and
jg
xchg
loop
mov
or
fmul
shrb
scas
loop
sarb
fwait
scas
xchg
test
push
xor
test
jne
repnz
xchg
mov
cmc
jg
adc
mov
mov
push
sbb
xchg
call
nop
pop
xchg
int3
fbstp
or
add
in
pop
pop
aaa
fs
push
adc
dec
xor
imul
add
lea
cli
push
ret
sbb
inc
mov
adc
push
adc
daa
push
aad
dec
idiv
std
or
add
mov
test
pop
pushf
dec
sbb
mov
sbb
xor
xchg
or
sbb
loop
popa
mov
add
scas
mov
xor
in
jns
or
xchg
add
lods
outsl
movsb
nop
popa
outsb
roll
jl
push
stos
pop
xor
sub
rcrb
int3
inc
push
sbb
ja
mov
mov
mov
inc
leave
mov
inc
xchg
cmc
mov
andl
jns
and
push
out
mov
jp
mov
int
inc
add
ss
jae
addb
fs
aaa
ja
in
mov
add
adc
or
and
cwtl
arpl
xor
testl
jne
addr16
mov
push
dec
inc
sbb
daa
mov
lods
lock
pop
mov
cmp
fcomip
mov
mov
iret
cmp
cmp
push
loopne
imul
and
in
sub
cmp
shrl
data16
inc
adc
sbb
mov
incb
sbb
inc
jbe
test
repnz
lods
adc
out
jle
pop
mov
addb
cmp
arpl
shrd
add
outsl
inc
pop
ret
and
adc
add
cmp
mov
xchg
imul
bsr
push
xchg
push
mov
and
or
cmpsl
out
adc
inc
xchg
insl
jns
xor
subl
in
aas
adc
fldt
sub
dec
orb
cmpsl
fsts
and
mov
inc
push
push
call
lods
xor
fstpt
test
xchg
push
cltd
data16
mov
shlb
iret
dec
sub
shll
xchg
je
aaa
and
arpl
sti
push
in
divb
and
sbbb
xchg
sarb
aam
xchg
jnp
dec
das
dec
xchg
sti
lods
jp
adc
scas
mov
or
in
popf
in
sub
inc
int
xor
movsl
adc
filds
adc
scas
sub
and
xchg
insl
mov
hlt
jnp
xchg
mov
fdisi(8087
insb
lds
xor
pop
xor
nop
dec
js,pn
out
dec
stos
fimuls
rcll
sti
je
popa
arpl
adc
add
cmp
into
inc
push
rol
sub
popf
mov
test
add
fs
popa
xchg
xchg
inc
iret
cmpsl
or
pusha
insl
scas
cld
and
push
add
sub
jne
in
arpl
push
xchg
or
push
in
popa
pop
mov
ja
push
xlat
lds
rclb
push
push
mov
clc
scas
mov
imul
test
movsb
into
loop
jb
loopne
aam
xchg
jmp
ret
pop
movsb
mov
xchg
dec
jbe
bound
xchg
sub
cwtl
xchg
in
ret
inc
mov
lock
push
mov
lahf
dec
stos
dec
movsb
mov
or
scas
cld
lock
dec
fists
pop
iret
xor
aaa
je
and
rcr
xchg
pop
sbb
xor
js
mov
mov
icebp
mov
cli
sbb
mov
mov
mov
les
xchg
push
mov
rcl
shlb
bound
jns
in
std
insl
jbe
rolb
mov
repnz
xor
pop
pop
sti
xor
nop
pop
lds
pop
push
incb
pushf
sbb
jmp
pop
jb
xor
xlat
addb
das
ror
fwait
mov
mov
dec
jmp
frstor
push
ja
sub
lret
adc
xchg
inc
mov
adc
lods
add
cmp
mov
mov
pop
pop
fnstcw
jg
cmp
sarl
fildl
sar
leave
lret
cli
pop
cld
push
adc
mov
dec
and
xor
xorb
dec
mov
repz
dec
shl
cmp
out
or
and
mov
add
insl
lods
pop
pop
loopne
add
cmc
in
gs
cmpsl
cmp
popf
cmpl
xor
outsl
fnsave
nop
hlt
andb
cs
cltd
sbb
push
call
addr16
lds
sub
test
call
mov
jnp
pop
add
sub
mov
hlt
mov
ljmp
repz
loop
ret
cmp
jmp
and
out
enter
aas
gs
enter
or
cmp
pop
lea
movsl
push
jge
imul
sti
or
mov
xchg
fadd
lock
pop
push
into
ret
cld
mov
sahf
push
and
dec
nop
adcb
adc
scas
sbb
outsl
inc
mov
inc
jne
lcall
sti
ljmp
jne
and
aas
scas
push
imul
pop
out
pop
jb
lds
sbb
lods
cwtl
insb
lahf
sub
xor
mov
inc
pop
push
mov
orb
scas
repz
mov
pop
std
cwtl
mov
push
pop
ja
adc
add
lret
inc
movsb
and
sub
xchg
or
sub
mov
loop
mov
es
repnz
or
movsl
pop
test
test
enter
ss
dec
fnstenv
mov
iret
pop
or
ljmp
sbb
xor
sub
sub
in
enter
pop
xor
lock
fsts
int3
xchg
ret
xchg
xor
push
dec
mov
lods
xorl
into
nop
in
xchg
arpl
loope
fcmovb
ficompl
icebp
dec
jnp
xor
jle
outsb
jb
lret
xor
add
jmp
fisubrl
mov
sbb
xor
adc
pop
cli
cmpsb
pop
lret
sahf
adc
in
xchg
add
ffreep
rolb
sub
scas
arpl
inc
pop
stc
add
sti
xchg
adc
daa
mov
adc
movsl
les
test
loopne
sub
mov
jle
mov
sbb
sub
dec
popa
mov
mov
push
mov
fs
out
jne
inc
cmp
mov
cmp
push
jnp
mov
adc
fisubrl
cmp
repz
add
jnp
cmp
push
xor
pop
shrl
push
fimull
mov
leave
mov
jae
xor
lret
sub
add
outsb
mov
inc
mov
cmpsl
sub
jbe
mov
insl
cmpsb
jmp
xchg
out
ret
xor
pop
pop
xor
pop
lods
loopne
arpl
jbe
imul
push
int3
loopne
xor
dec
mov
das
add
inc
out
fdiv
cld
sub
cmp
and
or
pop
cli
mov
push
pop
sub
xchg
cmp
lret
sbb
inc
xchg
jl
cmp
dec
sahf
and
mov
xchg
pop
or
inc
pop
or
mov
mov
xor
pop
mov
mov
cmp
ss
dec
insb
inc
int
fxch
xor
cmp
push
cmp
je
adc
sbb
mov
push
push
and
push
out
in
lea
ss
add
movsl
les
cwtl
jae
pop
outsb
out
sbb
les
icebp
mov
mov
data16
mov
idivl
mov
pop
push
sahf
dec
push
imul
and
cli
lret
mov
int3
cwtl
sub
lret
mov
cmpsb
dec
in
lahf
sub
jp
dec
mov
mov
or
repz
pop
mov
jecxz
out
fimull
mov
cmp
jge
cltd
int
out
jge
movlpd
insl
imul
rcr
push
mov
push
pop
or
movsb
sub
jg
inc
ja
push
jl
push
sub
in
cld
insl
jne
fs
dec
repz
sbb
adc
xor
add
in
movl
xlat
mov
pop
nop
pop
adc
cli
cs
dec
in
fstpl
inc
sbb
bound
pop
mov
addr16
fcoml
push
cmpsl
mov
push
clc
inc
jns
mov
push
and
clc
pop
mov
xor
es
or
adc
sahf
push
jno
pop
fsubrs
dec
pop
adc
lret
jbe
fimuls
sahf
mov
mov
mull
popa
aam
test
repz
pop
in
popa
mov
int
or
adc
aaa
jae
in
sub
mov
or
and
ljmp
inc
cmc
pop
cmp
mov
sub
fstpl
adc
adc
repnz
in
repnz
jecxz
xchg
insl
mov
or
mov
jne
lcall
enter
dec
sub
cmc
das
out
shl
and
imul
cmc
andl
xor
inc
sbb
aaa
push
popf
add
xor
xchg
jns
js
mov
decb
pop
stc
pmaddwd
scas
dec
sbb
daa
faddl
xchg
dec
cmpl
out
or
dec
and
xor
fs
adc
imul
neg
push
adc
pop
cli
adc
mov
or
pop
jbe
divb
lods
add
clc
clc
adc
in
lock
int3
jne
arpl
sub
add
mov
stos
dec
push
popa
pop
add
push
movsb
xor
fld
incl
rcl
dec
repz
pop
sub
in
test
js
push
fwait
call
mov
test
add
or
push
xchg
stos
sub
sub
or
xchg
jns
pushw
push
shl
filds
and
inc
call
sti
add
or
xor
inc
mov
iret
inc
mov
dec
cwtl
es
push
jae
sbb
mov
pop
sbb
dec
je
jb
adc
stos
mov
je
je
adc
mov
fidivrl
inc
imulb
enter
addr16
pop
sub
lods
sbb
mov
xor
xor
sbb
repnz
jmp
sub
xchg
push
fcmovb
pop
adc
mov
iret
movsb
dec
dec
push
enter
loope
mov
icebp
mov
sarb
ds
pusha
fs
mov
cwtl
icebp
or
jl
in
movsb
xchg
and
xchg
outsb
push
aam
pop
enter
aaa
push
ja
inc
int
xchg
mov
push
jnp
inc
lods
and
sub
jns
loop
pop
push
xchg
adc
ficompl
in
ret
testb
testb
outsb
jb
xor
cli
jnp
ds
cld
add
mov
rcr
adc
dec
and
pop
sbb
pop
pop
call
inc
push
cmp
aaa
stc
mov
mov
add
imul
lods
sbb
cmc
cmp
dec
cmpsb
xor
mov
xchg
jae
test
divl
xchg
pop
adc
xor
cld
shl
lret
inc
jg
cs
or
call
mov
stos
pop
jp
out
test
sbb
stc
mov
cmpsl
xchg
ljmp
notb
pop
xor
aas
push
mov
lods
bound
jmp
addb
mov
pop
push
cli
lock
jmp
mov
test
inc
das
xchg
pusha
pop
inc
ja
leave
loopne
push
in
inc
mov
aad
pop
into
or
sub
and
mov
sti
adc
pop
sbb
popa
add
fidivrs
loope
jo
xchg
jae
subl
jg
inc
pop
or
rep
outsl
jge
add
xor
mov
push
jne
cmp
testl
dec
push
mov
inc
fdivl
ficoms
jne
jmp
dec
in
jbe,pt
dec
int3
lahf
pop
int
lds
ja
jno
ret
pop
fstp
cltd
xor
lcall
fnstenv
dec
mov
cmpsb
pushf
push
ficoml
in
test
out
mov
addr16
mov
daa
pop
fstps
inc
jns
pop
jmp
addb
jecxz
mov
mov
iret
scas
rcrl
mov
cmp
cmp
inc
pushf
push
repnz
xchg
adcb
lret
lret
inc
or
sub
push
adc
rolb
cmp
xchg
aas
mov
int
jnp
xor
int
xor
mov
ja
push
xchg
jmp
cmp
fbld
in
mov
pop
dec
ss
xor
mov
fmull
lahf
fstpt
lahf
jo
les
sbb
test
xchg
mov
les
outsb
xchg
mov
sub
int
or
fwait
dec
js
fstpl
dec
js
cmp
push
vunpcklps
push
mov
ja
jno
sbb
lods
inc
pop
jne
das
lret
adc
test
pop
out
inc
lock
test
inc
pop
test
pop
xor
mov
repz
sbb
arpl
adc
jge
jb
rorb
pop
cmp
mov
inc
test
mov
sub
int3
call
arpl
movsl
faddl
xchg
dec
xor
push
push
ds
mov
icebp
in
lcall
mov
dec
iret
pop
pop
inc
je
fsts
bound
xchg
dec
xor
aaa
mov
pop
imul
jne
mov
test
or
ret
or
fistpl
jle
jo
movsl
insl
cs
ret
xor
sub
push
cmp
mov
add
add
cmpsb
sub
mov
dec
arpl
shlb
pop
dec
insb
cmp
aas
sahf
rolb
pop
mov
dec
cmp
lock
iret
push
push
sub
in
hlt
mov
and
cmp
lock
and
lahf
mov
sub
aam
jne
fbstp
sahf
test
clc
sahf
rcll
loop
test
jnp
das
out
jbe
cmp
test
fwait
sub
mov
adc
jns
push
mov
push
and
fsubrl
xchg
mov
stos
mov
fld
push
lds
inc
push
pop
sbb
mov
pop
and
cmc
mov
hlt
lods
ja
es
jb,pt
lret
adc
pop
gs
jo
rcrb
lds
cwtl
inc
jmp
mov
xchg
dec
push
std
sbb
aas
jns
ja
inc
loopne
jecxz
jge
imul
add
aad
xor
outsb
xor
inc
fcom
and
mov
and
imul
xchg
cld
repnz
fistl
test
jp
push
jae
push
push
fwait
and
mov
cmp
xchg
xchg
and
icebp
ds
popf
xchg
aad
add
in
cltd
mov
jb
lcall
ret
jne
or
jae
aaa
insb
fbld
or
sub
xchg
mov
movsb
fdivrs
nop
jge
fcom
mov
out
cmp
stos
pop
inc
mov
cmc
aad
aam
sbb
push
cmp
or
insb
cli
sub
fnstsw
xor
fldl
xor
mov
imul
inc
and
lods
or
push
cmp
pop
fucom
imul
mov
sub
mov
ja
and
ja
dec
rcrl
in
and
imul
ss
cli
aaa
dec
adc
push
cmc
cmpsb
popa
aad
jp
pop
mov
cmpsl
stc
push
rcll
cmp
pop
je
xor
adc
inc
ror
fwait
popl
add
jns
xlat
sbb
rolb
data16
pusha
pop
sbb
leave
pop
sub
pusha
fs
mov
mov
sub
jno
pushf
mov
fucomp
pop
pop
adc
jae
popa
out
leave
pop
dec
jecxz
xor
fisubrs
mov
mulb
rorb
jnp
mov
dec
adc
push
jbe
mov
sub
pop
iret
addb
adc
jmp
cld
cmp
xchg
std
cmc
sub
les
cmpsl
dec
pop
jp
ret
xchg
dec
inc
sbb
in
arpl
ss
inc
sar
add
pop
mov
movsb
xlat
repnz
aam
push
cld
xchg
insb
loop
addl
dec
sahf
popf
cmp
push
pop
jl
sbb
subl
dec
cwtl
push
loope
clc
je
and
fmull
sub
sbb
fstl
out
add
in
add
sub
lahf
decb
test
repnz
fstpt
cmc
dec
scas
shl
and
in
push
add
bound
mov
add
hlt
jl
xor
pop
or
addr16
dec
popf
jnp
jmp
jmp
test
sbb
out
and
aad
jo
xor
das
stos
je
jmp
fxch
mov
inc
or
bswap
pop
inc
sub
xorl
std
cmp
push
into
fcmove
movsl
pop
cmp
bound
fsubr
stos
jge
pusha
sub
mov
adc
ljmp
out
into
int3
and
jg
inc
mov
mov
insl
adc
sbb
add
dec
arpl
pop
jnp
sbb
test
adc
mov
fistpll
in
ret
aaa
sub
cmpsl
cmp
movsl
xor
lds
sarb
jl
pop
iret
mov
add
push
pop
cld
mov
cli
adc
or
jmp
jg
xorb
mov
sub
insl
popa
je
std
aas
push
inc
push
hlt
push
dec
jg
add
xchg
cwtl
inc
mov
movsl
inc
lods
inc
inc
addr16
and
stos
cli
push
in
inc
mov
push
sbb
shll
ret
add
mov
sbb
popw
sub
jmp
inc
add
jnp
movsl
stc
push
cmp
and
jmp
fidivl
pop
sub
ljmp
push
addr16
add
cmpsb
mov
pop
mov
test
xchg
hlt
pop
out
in
xchg
pop
imul
pushf
rcll
sti
xchg
les
call
or
dec
call
ljmp
es
adc
pop
lahf
outsb
jae
outsl
add
loope
into
push
pop
pop
cltd
stos
and
add
mov
notb
decl
mov
adc
cmpsl
fwait
adc
push
and
adc
fisubl
push
pop
push
out
movsl
jae
xchg
mov
pop
add
aaa
mov
xor
xchg
jbe
dec
push
out
sbb
in
insl
dec
and
sbb
mov
jo
xrelease
fwait
mov
ss
mov
adc
repnz
pop
mov
xchg
loopne
mov
xchg
popf
lahf
lods
repnz
cltd
push
rcrl
mov
inc
nop
sub
inc
mov
xchg
sub
lock
inc
ja
adc
orl
addr16
addr16
insb
xlat
xchg
fbld
cmp
mov
fmuls
jg
fisubs
int3
mov
je
lock
inc
jp
fisubrl
movsb
inc
or
cmpl
dec
pop
dec
or
mov
pop
loope
stos
jg
jg
out
cltd
pop
sti
mov
or
dec
mov
sbb
mov
cmc
cmp
sub
add
lret
pop
add
popf
jns
test
mov
mov
and
mov
pop
jmp
je
lret
movsb
loopne
popf
or
inc
mov
stc
iret
ret
and
jnp
push
lret
popa
scas
and
das
pop
es
fldenv
arpl
pop
jno
test
cli
stos
mov
in
mov
incb
mov
dec
xchg
js
imul
aaa
sub
xchg
xlat
sbb
adc
xchg
xchg
adc
push
sub
dec
adc
mov
popa
out
jp
hlt
sbb
sbb
inc
and
outsb
enter
inc
pop
push
push
jne
fisttps
inc
push
push
pop
mov
mov
sbb
fisubl
cmp
inc
xchg
jecxz
je
in
iret
int3
pushl
push
or
pop
push
pusha
push
inc
ds
inc
addr16
sbbb
test
push
mov
imul
sub
mov
sub
dec
mov
pop
ljmp
lods
mov
fwait
dec
inc
and
cmc
loope
ficompl
out
push
imul
jmp
out
imulb
jp
out
cmc
push
test
dec
sbb
push
fistpll
push
cli
inc
sub
sub
cs
sub
push
push
fdivs
idivl
ds
sub
dec
xor
xchg
into
xor
test
or
and
mov
xchg
imul
or
repz
pop
mov
ljmp
mov
lahf
sub
xor
mov
ss
jecxz
adc
fcompl
or
push
xchg
imul
xchg
inc
cmpsl
add
mov
idivb
ljmpw
or
int
push
push
mov
push
dec
dec
mov
mov
lods
shlb
push
std
ja
sub
inc
mov
jo
fbstp
sbb
out
clc
in
or
mov
gs
or
add
outsb
das
inc
pop
pop
outsb
shlb
js
test
xor
sahf
jnp
xchg
jns
imul
orb
mov
pop
jmp
pusha
sahf
mov
push
xor
xor
lret
les
loopne
sbb
or
push
push
xorl
pop
into
data16
xchg
mov
add
repnz
mov
ret
push
and
mov
arpl
pushf
jg
iret
aas
fmull
push
cli
mov
sub
movsl
int
add
mov
push
repnz
jp
pop
lea
dec
outsl
bound
or
sti
lcall
pop
cltd
int3
mov
push
mov
dec
lods
jnp
xor
ss
cwtl
das
cmp
addr16
mov
cmp
shrb
dec
push
test
insl
aas
mov
mov
mov
xchg
mov
sub
xchg
cli
mov
ret
push
aas
dec
sub
aad
mov
dec
hlt
dec
pop
test
aas
sti
scas
icebp
inc
mov
loop
mov
movsb
fbstp
aam
mov
loopne
mov
xchg
xor
std
xor
test
and
popf
outsb
repnz
dec
cmp
in
jl
cmpsl
movsb
aad
hlt
mov
push
psllq
fs
or
loopne
popf
push
ficompl
sub
adc
daa
add
sbb
pop
push
jge
mov
mov
xchg
jg
jle
stos
sbb
and
add
call
ret
push
scas
aas
lret
scas
or
mov
das
inc
inc
ja
stos
mov
addr16
mov
cmp
popa
ret
jo
mov
rorb
push
lret
lods
and
enter
or
xor
xor
dec
addr16
nop
lahf
shll
push
xor
jle
rolb
std
lock
xchg
cmp
icebp
hlt
mov
dec
xchg
xor
push
dec
pop
push
bound
shll
xor
xor
xor
rolb
push
sub
fidivrs
lods
out
out
adc
fdivrs
mov
xor
vcvtpd2dqx
rsqrtps
or
stc
orl
mov
movsb
sbb
mov
in
sbb
xor
xchg
inc
push
int
lea
shrb
test
mov
std
or
dec
cmp
dec
test
xor
xor
cld
pop
icebp
shr
stos
cmc
test
xchg
cli
test
push
pop
lret
int
movsl
jo
stos
and
xchg
mov
or
icebp
cmp
jl
xchg
push
mov
jbe
mov
inc
loope
inc
loop
pop
repnz
out
lods
scas
lods
cld
movhps
push
into
jbe
hlt
iret
or
call
lret
cmp
idivb
inc
jo
gs
test
fwait
dec
scas
subl
aam
adc
jecxz
ljmp
and
mov
mov
jns
or
lds
orl
dec
adc
out
xchg
mov
push
das
jo
in
repz
cmpsl
testb
and
jle
aad
mov
outsb
cmp
xor
sbb
dec
ret
inc
jmp
cmp
fs
xchg
int
xchg
jbe
mov
ret
mov
inc
adcb
mov
stos
addl
stos
sbb
das
je
int3
sahf
push
inc
mov
xorl
xchg
imul
dec
rcll
jg
sbb
ja
cmp
aad
decl
rcl
mov
jo
lret
pop
aad
in
sbb
sub
mov
mov
lahf
pop
mov
push
mov
lret
jg
xor
pop
aad
fnstsw
test
lret
jmp
cld
js
sti
ret
mov
jl
pop
push
mov
lea
shr
pop
int
jbe
mov
sti
cmp
mov
sbb
movsl
mov
and
xor
in
and
dec
lods
push
bound
lcall
jbe
idiv
aam
sbb
mov
fldenv
sti
ljmp
rorl
and
cmc
stos
mov
div
fucomi
mov
add
mov
movsb
cld
inc
neg
fwait
push
mov
lods
sbb
lahf
fs
fsubs
scas
in
and
push
pop
daa
inc
xor
adc
mov
fidivl
fs
push
test
mov
addl
cld
cmp
add
lea
pop
dec
adc
mov
icebp
mov
dec
push
aad
xchg
out
push
cwtl
fiadds
pop
jnp
dec
jbe
push
mov
adc
add
lea
test
lock
sub
dec
mov
fs
sub
imull
inc
and
mov
jle
xchg
pop
pop
mov
pushf
adc
lahf
les
divb
pop
icebp
cld
jae
sub
or
inc
fsubrs
inc
pop
and
push
cmpsb
adcl
xchg
or
dec
testb
adc
cmp
int
fcmove
adc
cli
daa
hlt
pop
je
insl
mov
mov
xlat
push
lahf
push
sbb
sub
dec
adc
inc
in
add
mov
je
cmp
test
repnz
jno
inc
je
das
mov
mov
sbb
outsl
xchg
mov
mov
lock
lret
pop
xor
lods
jg
jl
inc
loop
mov
push
xor
jns
scas
push
and
insb
or
mov
jnp
lret
add
pop
lcall
andl
inc
dec
dec
adc
fwait
push
xchg
movsl
jle
sbb
iret
jne
and
mov
add
ds
int
shl
pop
mov
hlt
mov
inc
and
jns
jnp
pop
lret
stc
xor
dec
cmpsl
fisubl
aam
dec
loope
adc
mov
es
mov
mov
or
pop
inc
aad
out
cmc
test
movsl
movsl
cmpsl
jnp
xchg
fstpt
pop
dec
xchg
pop
cmp
scas
icebp
xchg
jb
and
jge
in
or
sbb
shrl
push
xor
push
xchg
fidivrl
mov
sahf
fnstenv
dec
aaa
lret
pop
sti
and
mov
gs
push
sub
or
jg
push
mov
pop
adcb
into
xchg
iret
hlt
xor
das
stos
add
ror
sub
fcmovbe
inc
inc
fstpt
xlat
mov
jecxz
ja
arpl
adc
std
stos
pop
push
ficoms
js
loop
jecxz
fsubrl
adc
repz
xor
repz
xchg
aaa
mov
push
js
jmp
xchg
negb
fistps
cmp
inc
pop
pop
aad
sahf
in
inc
sub
dec
add
or
push
push
lret
and
cmc
into
mul
int3
pop
mov
movsb
fsubl
loopne
in
in
fwait
inc
and
xor
ret
fadd
mov
mov
pop
in
jmp
out
and
loope
aad
jg
lods
divl
mov
adc
jp
sub
mov
and
pop
adc
imul
and
mov
aam
stc
repz
ret
in
aad
sub
arpl
push
call
movsb
cmp
rorl
sbbb
aad
jge
mov
fs
lea
and
xor
cwtl
decl
imul
jmp
jo
gs
cmp
sbb
nop
cmp
fs
lcall
pop
sub
mov
mov
mov
or
leave
add
pop
out
xchg
push
lcall
stc
insb
pop
or
in
int
inc
push
addl
cmp
and
xchg
test
aas
test
mov
adcb
ja
and
idivb
lret
into
cmp
and
push
dec
push
sahf
arpl
aam
cmpsl
add
push
or
sbb
inc
clc
mov
hlt
mov
sbb
fcoml
and
fidivrs
mov
cmp
ja
mov
imul
cmpsl
push
and
bound
and
je
mov
mov
outsb
xchg
and
jnp
cmpsl
xor
push
mov
mov
ret
jp
push
repnz
jne
rcrb
es
andl
jecxz
gs
in
fistpll
es
jle
pop
loop
mov
inc
jge
mov
je
push
imul
pop
mov
push
ret
lahf
out
repz
call
fnsave
mov
fstl
dec
lcall
xor
enter
insl
mov
mov
mov
push
fisttpl
mov
subl
cmpsb
push
sub
pop
adc
cwtl
push
sbb
cli
movsb
int3
mov
arpl
mov
push
in
sub
movups
cli
jns
dec
vpshuflw
addb
mov
lea
mov
aaa
fidivrs
jns
pop
xchg
stos
or
test
movsl
imull
mov
imul
cmp
pop
mov
cld
test
and
ja
push
push
cmpsl
or
xchg
outsb
xor
fsubs
mov
fildll
imul
int
push
sbb
cmp
idivb
or
popa
sbb
sbb
out
jnp
insb
inc
inc
int
push
xchg
sbb
ficoml
xor
mov
cwtl
adc
pop
cmp
inc
fildl
lods
dec
arpl
rcll
pop
mov
mov
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
sub
jp
addb
sub
pop
cld
jno
lcall
popf
push
mov
push
fs
aas
sbb
push
scas
mov
jle
inc
pop
in
ficomps
push
ret
nop
pop
sub
fcomps
stc
pop
push
cmc
mov
fsubrp
xchg
jae
and
xchg
push
mov
movb
cs
fisubs
xor
jmp
hlt
mov
lret
icebp
loope
mov
and
xor
movsl
mov
lods
jmp
aam
xor
test
pop
xchg
nop
mov
lcall
cmp
cmpsl
mov
lret
push
stc
arpl
cld
jge
or
or
icebp
xor
add
jno
stos
js
out
mov
das
jnp
lcall
ja
xlat
shll
popf
and
out
in
xor
fistpll
fwait
je
xchg
dec
mov
sbb
pop
jecxz
mov
sbb
mov
xor
push
fcomps
inc
add
lahf
adc
leave
dec
xchg
mov
jmp
stos
mov
les
popa
xchg
andl
sahf
sub
pop
test
test
sub
test
adc
and
adc
mulb
mov
into
push
icebp
scas
rcrb
xchg
jg
cmp
fnstcw
aas
sbb
push
mov
je
daa
or
ss
test
stos
xor
mov
roll
sub
lods
jnp
mov
xor
ficomps
cli
addb
pop
sub
or
repnz
incl
dec
push
xlat
lret
xchg
fbstp
std
xorb
pop
jb
stos
addr16
in
fsts
das
inc
iret
push
movsl
idivb
fcmovnbe
movb
pop
jmp
hlt
js
sub
mov
mov
loopne
push
arpl
inc
movsb
jb
pusha
je
jnp
mov
xor
int3
iret
stc
enter
mov
popf
mov
cwtl
push
push
out
dec
pusha
xchg
repnz
push
aad
jp
ja
call
xorl
cmc
push
jns
push
lds
mov
rcr
jle
cmp
pop
cmp
xor
pop
cmpsb
clc
jp
mov
loop
mov
adc
xor
jbe
and
movsl
decb
test
xchg
mov
das
cs
cmp
std
cmp
and
mov
inc
mov
sbb
fadd
arpl
in
fistps
fiaddl
cmpsb
add
jmp
fwait
dec
mov
mov
jl
jle
scas
push
lods
inc
cld
stos
add
dec
fmuls
sub
pop
shl
jmp
cld
mov
sub
out
insl
adc
gs
pop
and
cmp
popf
loop
or
jmp
fdivrp
mov
hlt
or
dec
cwtl
test
jp
pop
add
add
cmp
test
xlat
cmp
loop
xor
xchg
repz
lods
es
or
fisubrs
arpl
cmp
jmp
and
adc
cltd
fldt
test
insb
rorb
and
inc
out
std
push
xchg
xor
out
fisubrs
jp
movsl
mov
jbe
fs
xchg
mull
mov
jp
imul
lea
addr16
mov
sbb
in
in
insl
das
cmpl
lock
cmp
sbb
aaa
leave
jns
mov
out
xlat
adc
cmpl
lahf
scas
mov
bound
arpl
mov
cwtl
jnp
jbe
shll
push
inc
aad
cli
or
add
rcl
ret
test
jae
mov
xorb
shrl
cmpsb
jecxz
jns
mov
add
fs
cmp
push
imul
leave
gs
or
imul
inc
test
lea
jp
inc
add
clc
and
push
jno
and
fistps
gs
fldcw
dec
jb
adc
cmpsb
scas
jb
jo
jbe
outsl
sub
cmpsl
enter
fldcw
and
or
sarb
cmp
mov
xchg
je
cmp
mov
xchg
stos
mov
setnp
dec
les
rorb
outsl
push
cmp
xor
aaa
jle
movsb
dec
lcall
out
cs
nop
pop
mov
outsl
testl
cmp
ljmp
stc
add
push
sbb
int
jmp
shr
cmp
xchg
pop
jne
cs
fiadds
sbb
cld
sub
add
mov
rorl
dec
inc
push
imul
cmp
or
xchg
add
push
sbb
jnp
push
mov
jg
repnz
jae
in
mov
test
aam
cmp
out
jno
orb
cmpsb
push
sbb
rcr
in
aam
pop
jno
xchg
jmp
shr
in
pop
mov
push
cwtl
xchg
or
scas
sbbl
mov
xorl
cmp
pop
sbb
imul
fadds
repnz
push
stos
xchg
push
inc
shll
mov
shrb
sub
xor
mov
sub
or
push
lods
push
cmp
cwtl
mov
xchg
push
or
add
ljmp
push
cmp
mov
lret
or
add
int
ret
in
loopne
push
out
and
mov
into
loope
popa
xor
rcrb
stos
mov
adc
adc
pop
xchg
lds
and
iret
mov
leave
push
and
call
jo
mov
ret
test
rorb
cli
adc
std
or
int
cmp
repz
lret
jbe
jl
mov
ror
cld
add
fistps
and
js
xchg
sub
js
sti
jo
inc
out
mov
mov
and
add
push
sbb
or
shrb
aad
lds
xchg
inc
inc
xor
push
inc
mov
stos
add
leave
loop
inc
hlt
xchg
xor
movsb
pop
int3
pusha
mov
ret
in
jns
push
push
std
cld
or
dec
rcl
das
pop
jg
cmp
xchg
dec
inc
mov
mov
pop
push
adc
mov
sbbb
icebp
mov
pop
push
pop
add
leave
ja
or
jle
and
cmp
xchg
lods
andb
test
mov
test
pop
inc
xchg
jnp
ss
adc
pop
int3
mov
or
xchg
mov
ret
mov
sbb
push
dec
popf
xor
push
pusha
xchg
ds
nop
adc
das
mov
mov
lds
in
xchg
sbb
mov
and
outsl
pop
cmp
adc
les
mov
add
xor
jne
outsl
test
popf
aas
call
shll
mov
pop
in
add
mov
pop
cli
cmpsl
or
stos
mov
paddb
pop
push
shl
inc
adc
nop
fidivrl
ja
push
es
push
sbb
sbb
arpl
mov
stos
jno
testl
aas
shl
mov
fists
fdivrs
jae
mov
pop
rcl
sarb
mov
lahf
mov
mov
ret
scas
fidivs
sbb
out
mov
and
inc
xlat
cmpl
sub
insl
iret
out
xor
pop
iret
push
mov
mov
shlb
xor
inc
dec
sub
cmp
push
pop
jl
mov
gs
loope
dec
mov
or
fsubs
loop
mov
lea
inc
jle
lea
mov
jo
incb
push
repz
popf
test
adc
sub
inc
ljmp
jmp
mov
pop
xchg
repnz
add
test
push
pushf
enter
lea
orl
add
xchg
cmp
data16
dec
inc
pop
cmp
lods
or
cmp
ljmp
and
mov
repz
mov
sbb
shll
xorl
mov
sub
jmp
int3
test
pop
mov
and
push
dec
cmc
jge
filds
jns
out
adc
nop
mov
dec
das
in
cmpsb
cmp
mov
mov
rol
jns
jmp
mov
adc
mov
fbstp
fdivl
xor
mov
les
push
ja
sahf
je
push
pop
inc
jbe
push
push
and
stc
and
aad
inc
stc
stc
xor
push
addl
jns
xchg
pop
push
mov
add
stc
mov
repnz
popf
mov
jae
popa
xlat
js
les
mov
and
enter
es
push
adcl
out
ss
jl
sbb
jae
ds
cwtl
arpl
pop
add
repnz
dec
mov
loope
dec
sahf
push
mov
and
lods
adc
adc
int3
in
or
mov
cmp
movsl
sub
imul
sub
rcr
ss
xor
inc
out
hlt
jl
int3
cltd
mov
cmp
inc
out
dec
jl
push
lahf
int3
lock
mov
pop
lea
jns
popa
jne
lret
and
andb
xlat
jne
jns
or
lcall
adc
jg
pop
loope
popf
inc
xor
imul
pop
and
pop
jle
test
push
cwtl
xchg
sbb
adc
aaa
mov
or
mov
in
jns
ret
mov
stos
mov
inc
or
ds
out
dec
mov
in
jnp
mov
jno
ljmp
xchg
leave
mov
add
mov
pop
scas
rcrb
jbe
fnstenv
loop
hlt
das
mov
repz
and
sbb
xchg
ljmp
xlat
insb
out
rcr
sbb
sub
fildll
sub
repnz
push
adc
scas
sbb
out
add
mov
mov
movsb
dec
cmp
ja
lret
cmp
xchg
popa
push
ret
pop
xchg
lods
imul
push
pop
adc
int3
popf
fwait
lret
lcall
cmc
mov
and
mov
xor
sbb
js
nop
or
inc
testb
inc
xor
cmp
push
mov
and
jb
and
pop
push
sub
jl
adc
mov
stos
push
andb
fnstsw
cmp
cmp
fdivr
and
pop
cvtpi2ps
xchg
insb
test
scas
mov
or
xchg
es
push
mov
dec
pop
mov
pop
sbb
jo
mov
cmpsl
sub
out
pop
sti
aam
popa
sub
inc
aaa
leave
pop
sbb
js
push
mov
movsb
mov
stos
push
mov
clc
sbb
push
cli
inc
into
xlat
aas
mov
bound
subl
scas
xor
lret
push
jle
and
sbb
push
adc
cmp
cld
outsl
outsb
and
in
xor
scas
imul
pop
inc
cmp
sub
ja
hlt
jmp
lock
clc
xchg
in
data16
mov
mov
outsb
jle
sbbl
dec
adc
push
or
and
or
push
aam
ss
push
out
icebp
jecxz
mov
xchg
mov
push
cmc
pop
and
std
rcrl
outsl
fwait
cmp
push
pop
mov
hlt
push
cli
xchg
push
jb
sarb
in
shll
cmp
std
loopne
aaa
pop
pop
mov
jp
rorl
cmp
push
in
cmpsl
xor
xor
pop
or
xchg
mov
test
in
cmc
xor
sub
add
mov
fs
mov
sub
pop
ss
mov
nop
push
xlat
xchg
mov
call
test
inc
enter
jmp
lret
and
dec
test
or
inc
daa
xchg
movsb
mov
repz
pop
fwait
nop
in
mov
sub
add
leave
aam
sub
fidivl
mov
outsl
repnz
sub
lahf
lret
out
scas
neg
adcb
xchg
mov
sbb
push
inc
cld
mov
faddp
xor
lds
dec
cmp
mov
stos
int
push
je
or
adc
sahf
enter
cwtl
xchg
cmpsl
das
ficoml
pop
pushl
or
stos
mov
fs
test
cltd
test
lods
js
cmp
ljmp
stc
jle
xchg
dec
jmp
imul
pop
mov
and
pop
in
cmp
pop
rolb
int3
xor
mov
dec
xor
sub
mov
push
xchg
mov
pop
fwait
jecxz
into
inc
clc
loop
sub
cwtl
dec
sbb
je
ss
pop
call
mov
jp
mov
and
jb
jno
mov
cmpsl
lret
push
es
repnz
mov
xchg
std
dec
js
sbb
stos
mov
add
adc
ret
rorb
push
mov
xchg
mov
sub
inc
sbb
push
scas
push
jnp
pop
jno
in
pop
inc
inc
xchg
int
or
xchg
enter
test
nop
jp
inc
mov
out
mov
mov
mov
push
int
leave
out
mov
mov
gs
mov
sub
lret
ds
daa
push
adc
std
add
sbb
or
or
icebp
enter
fisubrl
pusha
pop
xchg
lods
xchg
jne
xchg
mov
jno
inc
cmp
or
inc
loope
mov
lea
ret
cs
mov
mov
inc
inc
jae
xor
test
cwtl
jp
mov
xchg
outsl
sub
mov
mov
fmul
adc
fists
movsl
inc
mov
xor
inc
mov
dec
jmp
in
xchg
xlat
mov
jb
add
push
xchg
lahf
test
cmp
cmp
loopne
ds
shrl
shrb
inc
aaa
fiadds
outsb
inc
iret
adc
sub
jne
dec
test
test
jge
xor
mov
rcll
jne
inc
fnstenv
push
idiv
jae
sarb
mov
lcall
lahf
inc
das
mov
jns
pop
mov
sbb
sbb
mov
xchg
ret
loop
xchg
addr16
in
push
cmp
rol
sub
int3
sahf
les
adc
imul
mov
sti
icebp
popa
mov
ja
out
add
xchg
xchg
sub
xor
out
je
sbb
inc
sub
pop
aam
push
scas
add
stos
aas
sbbl
clc
pop
pop
cwtl
pop
nop
mov
sti
sbb
test
fbstp
hlt
cmp
xchg
jb
mov
movsl
cwtl
paddw
movb
push
add
xor
inc
sbb
ljmp
mov
jmp
ret
xchg
xchg
add
movsl
sahf
jne
in
repnz
mov
mov
loope
jp
subb
stos
cmp
loop
xchg
test
pusha
jmp
mov
dec
lret
icebp
fxch
xor
das
mov
sbb
pop
and
pop
je
pop
lock
and
jp
out
out
jge
frstpm(287
xor
mov
stc
dec
aam
int
loope
push
call
pop
sub
cmp
pop
lcall
leave
fisttpll
push
xchg
insb
mov
mov
push
xchg
and
shlb
xchg
sub
add
test
lods
cmp
fdivl
pusha
add
xchg
aas
imul
mov
pop
lods
adc
and
out
mov
push
pop
jo
or
lods
push
or
in
or
cmpsl
in
lcall
sbb
test
nop
in
into
inc
data16
into
dec
dec
inc
add
pop
cmp
stos
adc
push
mov
fs
scas
inc
rcrb
leave
inc
sub
mov
mov
divl
sub
mov
mov
push
iret
aam
ret
pushl
loop
jnp
and
mov
jae
shr
in
daa
adc
push
and
outsb
aam
xchg
ss
ljmp
insl
pop
fs
lret
and
xchg
jl
or
aas
cmc
test
jbe
inc
loopne
stos
jb
test
test
enter
ret
push
test
inc
mov
ds
add
pop
xchg
in
pop
mov
pop
sti
insl
inc
inc
arpl
dec
shr
mov
fcoms
or
outsb
mov
inc
cmp
test
mov
sbb
pop
pop
pop
mov
jecxz
lods
mov
inc
cwtl
pushf
adc
fnstenv
pop
xor
jecxz
pusha
clc
mov
and
aad
pop
pop
addr16
jl
outsb
test
cli
push
shrb
mov
cltd
adc
mov
out
movsb
adc
iret
lret
dec
push
add
daa
nop
adc
call
ret
jl
or
push
jb
jp
int3
enter
adc
negb
sti
pop
enter
jmp
out
mov
or
scas
adcl
inc
adc
popa
add
or
push
sub
shr
je
test
xor
lods
push
imul
loope
push
xchg
pop
out
cmp
mov
add
adc
mov
repz
inc
mov
push
xchg
mov
jo
mov
stc
push
jle
bnd
jo
out
into
add
sahf
mov
sbb
mov
jae
push
and
fldcw
sbb
aam
mov
xor
add
popa
enter
mov
inc
enter
push
sub
mov
adc
push
and
aas
cs
sub
or
jb
push
pop
sub
imul
push
iret
xchg
dec
lods
mov
push
mov
xchg
adcb
ja
pop
dec
mov
fcompl
fimull
inc
fmull
add
movsl
int
mov
pop
aam
xchg
sbbl
repz
bound
imul
into
cmpsb
int3
jae
call
shl
clc
add
inc
scas
nop
insb
sub
shrl
stos
pop
xor
xchg
mov
sbb
lea
cmp
cli
iret
dec
pop
ret
stos
int3
mov
add
mov
sbbl
dec
cwtl
fisubrs
and
and
mov
push
lahf
pop
call
lods
clc
test
xlat
ds
xchg
adc
dec
and
shlb
lds
jnp
loope
aaa
jns
out
repnz
and
or
out
xor
imul
sub
fnstsw
cmp
das
je
adc
lcall
insl
outsl
push
adc
popf
scas
lods
out
mov
sub
cmc
inc
mov
cmp
add
mov
jecxz
lea
movsb
aad
in
popa
pop
push
xchg
sbb
test
xlat
mov
jle
xchg
mov
scas
ret
sahf
repnz
out
les
fsts
sbb
mov
cld
jecxz
adc
arpl
inc
mov
stc
add
mov
pop
mov
adc
pop
sub
xchg
push
xor
xchg
mov
pop
pop
xorl
test
and
mov
xchg
popa
fs
and
movsb
or
pop
je
mov
ret
ljmp
jbe
lcall
xor
dec
nop
inc
adc
lret
cld
mov
sub
dec
xchg
sbb
fisttpll
dec
adc
xchg
arpl
jmp
fwait
std
cmp
mov
in
shll
mov
lret
push
rcl
lock
add
cmp
jecxz
sbb
gs
mov
out
loopne
push
inc
jge
sbb
cmc
xchg
idivb
lcall
out
icebp
and
movsb
xorl
cmp
pop
add
mov
aad
jo
insl
push
cmp
pop
mov
lock
sti
hlt
inc
adc
inc
mov
jmp
loopne
dec
stos
movsb
notb
push
inc
fcomps
lds
xchg
mov
sub
inc
adc
ja
out
lret
dec
orb
push
in
nop
imul
jnp
imul
int3
iret
cmp
jp
mov
cwtl
lret
mov
scas
or
ss
pop
xchg
push
les
lds
int3
pop
mov
mov
cli
xor
imul
cmp
stc
xor
fs
xor
lock
pop
movsb
rcrl
push
loopne
stos
mov
adc
ljmp
jno
sub
imul
jp
push
inc
mov
cmp
into
fdivrs
cld
mov
xor
icebp
xor
addr16
dec
adc
pop
push
and
jno
sahf
mov
pushf
dec
pop
icebp
iret
add
addl
inc
and
xor
sti
pushf
adc
mov
xchg
pop
xor
ss
mov
loopne
and
jnp
dec
rcrb
stos
stos
rorl
mov
cmove
ffreep
sub
sahf
sub
jbe
sbb
dec
mov
jo
mov
testb
ds
xchg
sbb
mov
cmp
xchg
push
mov
xor
gs
jg
pusha
sbb
aas
sub
jmp
mov
cmp
xchg
cmp
out
loop
mov
cmpsb
jge
mov
pop
jle
and
add
test
sbb
xchg
aas
fmuls
push
adc
pop
push
cli
and
enter
and
fnsave
jecxz
pop
jns
inc
sarb
jnp
jo
pop
mov
pushf
shl
push
fldenv
adc
data16
mov
imul
aaa
aam
lds
mov
aaa
ljmp
add
jle
cmp
jnp
leave
xchg
lahf
jl
cmp
cmp
push
in
daa
fdivr
std
lock
adc
test
jb
movsb
les
xor
mov
outsl
dec
xchg
aas
mov
pop
inc
dec
jl
mov
repz
sbb
inc
or
mov
outsl
dec
lods
sbbl
mov
ret
psubsb
cmp
adc
push
mov
cmpsb
adc
outsb
ds
cs
orl
push
daa
in
in
andb
es
ffreep
xchg
push
ss
jg
mull
xchg
and
jle
movsb
sub
jae
nop
pop
dec
jb
loop
sub
out
rol
ss
or
daa
aad
lahf
lcall
inc
push
cmp
pop
outsl
inc
dec
jbe
inc
pop
aam
mov
enter
jmp
inc
lret
xorl
cmp
cltd
mov
push
jmp
ds
mov
dec
inc
aaa
nop
cmp
leave
in
xchg
ret
fwait
xor
dec
fsub
ret
xor
or
pop
pop
stos
pop
fmul
jecxz
or
rcrl
jbe
movsl
jecxz
xchg
or
jb
scas
mov
mov
repz
push
and
push
mov
sahf
add
je
xor
fstp
lahf
shlb
rcl
popf
push
mov
push
hlt
sub
lock
sub
test
cmp
pop
jbe
insb
lods
lahf
enter
aad
push
mov
mov
cmc
add
mov
inc
outsl
loopne
je
rcrl
movsb
hlt
roll
xchg
nop
dec
jb
in
adc
cli
cltd
outsb
mov
stc
push
movsb
out
jp
js
je
ljmp
aam
mov
lcall
jb
fmuls
or
push
lods
pop
ss
aas
or
popf
push
loope
es
or
repnz
cmpsl
out
mov
xchg
mov
mov
add
out
add
popf
xor
arpl
lcall
push
outsl
das
cmp
pop
dec
dec
scas
jg
mov
test
dec
cmp
pop
pop
ljmp
pop
movsb
shlb
loop
fs
scas
in
test
sub
movsl
pop
nop
popa
adc
adc
push
inc
inc
arpl
jne
dec
pop
pop
pop
cmp
adc
inc
fldl
mov
jmp
stos
lea
sahf
shlb
mov
push
ss
outsl
cmp
sbb
stos
popa
add
ret
mov
adc
xchg
sbb
jae
imul
mov
loope
jl
out
sub
mov
cmp
stc
pop
pushf
xor
fnstenv
dec
gs
scas
xchg
imul
mov
sbb
aam
jns
fsts
mov
dec
incb
and
adc
iret
jmp
mov
fs
xor
or
js
imul
and
or
inc
rolb
je
inc
enter
jo
xor
push
jb
cld
mov
in
dec
adc
sub
in
cltd
push
hlt
cli
lock
scas
jmp
cmpsb
mov
inc
lods
dec
mov
in
out
jg
sub
add
jno
imul
mov
fwait
mov
pop
inc
ds
pop
xchg
sbb
jns
fwait
xor
add
shl
xchg
sahf
xor
jnp
mov
ret
pop
or
pop
int3
test
jmp
sub
pushf
adc
jae
notl
imul
or
cmp
iret
gs
lahf
lods
mov
rclb
pop
inc
into
pop
negl
sbb
mov
cmpsb
out
or
lcall
jne
lock
sbb
sbb
aam
cmp
ljmp
adc
push
push
lea
cmpsb
cmp
das
jg
cmp
jg
dec
jae
les
jnp
sub
lods
mov
loope
push
xor
addr16
fiadds
fistpll
stos
stos
in
add
out
ret
push
xchg
sbb
sub
push
ret
and
iret
into
stos
inc
push
jns
sahf
fwait
mov
mov
dec
jnp
mov
jb
xchg
lahf
xchg
mov
test
xchg
push
sub
dec
xchg
clc
test
pushf
out
pop
ror
cwtl
das
lods
roll
mov
in
iret
negb
inc
jbe
add
lods
lock
popf
push
or
xchg
mov
aas
push
jp
xorl
insb
push
jg
xor
in
cli
jmp
unpcklps
sbbb
enter
js
dec
pop
xchg
sbb
dec
sbb
push
inc
mov
inc
cmpsl
push
inc
mov
pop
mov
test
pop
mov
mov
les
movsl
and
insb
insb
lahf
sub
pop
imul
pop
adc
xchg
jecxz
jmp
sub
movsl
adc
das
add
adc
mov
test
add
shlb
push
pop
lds
sbb
xlat
and
xchg
std
inc
xchg
add
jge
push
pop
pop
ret
xlat
jecxz
cmp
or
rorl
dec
std
ret
movsl
out
add
xchg
out
fwait
sub
gs
in
je
cmp
sbb
mov
jne
push
push
in
ficomps
les
test
adc
ss
pop
pushf
or
mov
out
jo
mov
dec
push
sub
inc
shrb
mov
cmp
jg
inc
mov
cwtl
sbb
outsl
insl
add
scas
inc
and
sbb
lret
jae
aas
inc
or
lcall
addr16
mov
mov
mov
jmp
pop
xor
add
mov
mov
add
movsl
sub
repz
movsl
sbb
push
aam
add
xchg
out
mov
leave
push
jmp
cmovl
dec
xchg
icebp
cmpsl
pop
push
mov
jbe
out
shlb
call
adc
scas
mov
xor
cmp
push
out
push
pop
jle
pop
xchg
das
mov
lods
adc
ljmp
cmpsb
add
push
call
movsl
insl
adc
adc
nop
hlt
jae
xchg
dec
loopew
leave
fstps
cmp
fdivs
addr16
jnp
push
cmp
inc
push
mov
sbb
jbe,pn
jbe
lret
inc
push
rorl
adc
xchg
mov
jge
insl
shrl
pop
adc
cmp
inc
testb
dec
loop
cli
arpl
mov
cmpsl
lret
or
jmp
je
sti
pop
ja
dec
jmp
es
mov
mov
enter
roll
sub
jle
jmp
and
jmp
xchg
lcall
cmp
dec
push
dec
std
mov
or
xor
stos
push
cwtl
push
loopne
pusha
ljmp
lea
inc
or
xchg
insl
xchg
lcall
mov
jg
adc
jne
sarb
scas
xor
mov
int3
lods
pop
cmp
jl
out
jns
xchg
jb
addr16
bound
outsb
or
call
or
mov
repz
jl
lea
push
cs
rolb
jns
mov
into
pop
lods
dec
xchg
leave
xchg
xchg
dec
pop
test
scas
add
xchg
test
ds
js
test
or
dec
pop
push
mov
adc
fistps
mov
in
jmp
mov
ret
cmpsb
in
ljmp
add
add
cmc
je
scas
clc
xchg
into
push
and
sub
dec
outsl
adc
lock
xor
mov
bswap
cmpl
std
adc
mov
loopne
das
cmp
into
repnz
cmp
push
test
mov
adc
and
mov
jmp
adcl
mov
push
rcrl
xchg
inc
mov
icebp
mov
fdiv
pop
mov
and
jne
inc
pop
imul
dec
out
hlt
sbb
pop
sub
cmp
out
mov
cld
ficoms
and
push
sub
outsb
test
adcb
orl
mov
xor
push
push
fs
aas
add
pop
inc
mov
push
xor
out
push
xchg
jecxz
dec
xor
mov
and
gs
sbb
mov
adc
xor
in
push
ja
stc
cwtl
mov
push
and
ja
iret
mov
data16
scas
shrb
test
cmpsl
cmc
out
pop
ret
or
es
cld
mov
fldcw
mov
xchg
pop
sbb
int
pusha
test
cmc
jae
jae
sbb
cmp
dec
xchg
add
divl
mov
push
popf
cmp
or
sub
ss
mov
pushf
orl
add
lahf
push
fwait
or
scas
ja
or
mov
jnp
or
mov
pop
push
mov
xlat
mov
lds
and
push
lds
sahf
ljmp
dec
loope
lret
jp
stc
dec
mov
inc
add
xchg
nop
pop
inc
insb
xchg
in
leave
inc
jae
pop
repz
leave
jo
xchg
imul
andl
pushf
and
jae
pusha
popf
call
pop
push
in
and
std
jb
scas
push
sbb
jne
inc
inc
dec
mov
icebp
push
movl
add
and
sbb
in
xchg
mul
cli
repnz
xchg
adc
cmp
fisubs
and
xchg
mov
or
add
frstor
test
push
lret
adc
pusha
fld
inc
sahf
push
inc
lea
stos
or
sbb
clc
pop
cmp
aam
fcomps
pop
add
xchg
popa
test
jmp
out
dec
lods
shlb
ja
adc
les
cli
pushf
xchg
test
inc
add
out
cmp
mov
and
inc
in
loope
outsl
cmp
mov
bound
xchg
hlt
les
andb
pop
loope
xor
stos
je
cmpsb
aas
cmp
movsb
push
xchg
stos
movsb
jnp
leave
lds
shll
xchg
test
scas
and
out
mov
jo
push
dec
sar
mov
dec
insb
inc
jno
jmp
sub
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
push
push
mov
orl
addl
sub
mov
ds
pop
daa
ficomps
sti
popf
ljmp
adc
xchg
clc
enter
sahf
arpl
mov
scas
mov
and
stos
loope
aaa
jmp
mov
clc
adcb
pop
jle
roll
jg
nop
imull
mov
mov
fiadds
push
xchg
roll
ljmp
adc
lock
idiv
sahf
iret
lock
in
and
xor
call
adc
popf
mov
xchg
aam
mov
push
insb
rcrl
stc
or
mov
popa
mov
testl
push
fiadds
loop,pn
inc
pop
sub
fs
push
leave
sub
out
int3
and
adc
inc
bound
es
in
pop
imul
addr16
cwtl
adc
pop
scas
ljmp
xchg
sbb
push
mov
ret
dec
cmp
movsb
xorb
ds
pop
lea
ds
and
adc
cmp
jnp
nop
sar
out
lea
pop
mov
add
fldt
cs
xor
mov
dec
mov
stos
into
adc
adc
add
pop
loopne
dec
mov
test
lahf
sarl
addr16
shlb
ret
push
fcomi
inc
cwtl
sub
jmp
addb
shl
inc
sti
xor
jecxz
or
std
shl
mov
push
iret
popa
or
aad
xor
jle
adc
sahf
sahf
mov
and
dec
lods
cld
stos
mov
adc
orl
push
dec
loopne
mov
add
mov
outsl
inc
push
inc
mov
scas
push
mov
dec
adc
jb
pop
jae
inc
les
lret
fisttps
dec
das
sub
jmp
jb
loop
jo
sub
iret
sub
lret
adc
push
das
cmp
imul
pop
push
jecxz
test
ss
mov
dec
mov
ret
out
inc
or
jl
mov
or
testb
ja
imul
cwtl
add
mov
shll
mov
pusha
mov
in
mov
mov
push
mov
fwait
out
arpl
sub
add
jle
lea
mov
js
aas
loope
cmpsl
mov
lret
dec
dec
jns
xchg
daa
mov
xor
dec
push
cmc
addr16
sti
mov
or
test
inc
gs
jns
je
ljmp
jae
jp
in
ds
jmp
fwait
xor
push
pop
cmp
jl
xchg
cwtl
lods
mov
pusha
push
cmp
inc
mov
xor
jl
aam
loopne
jp
sub
movsb
mov
xor
dec
pop
cmp
movsb
push
mov
add
mov
jbe
loope
insb
and
pop
fadds
mov
xchg
in
out
dec
das
inc
in
lods
add
enter
in
cwtl
leave
fucomp
sub
mov
fdivrs
cmp
sub
mov
mov
pop
fimull
mov
ja
sub
movsl
aaa
cs
je
sbb
ljmp
dec
mov
inc
xchg
push
dec
sub
xor
sarb
imul
jae
sub
pop
cwtl
pushl
test
mov
aas
fwait
mov
loop
pop
aad
sti
das
inc
xchg
jno
jecxz
or
icebp
or
insb
jmp
int3
adc
and
sbb
sub
jae
xchg
sbb
sub
xorb
into
xor
and
lods
daa
popf
xor
shlb
xchg
std
mov
xchg
fisttpll
xlat
inc
fsub
jbe
push
imul
int3
push
add
insl
in
sub
rcrb
sbb
xchg
adc
sub
stos
or
arpl
jle
in
imul
sub
pop
or
push
adc
and
out
jmp
nop
das
in
mov
or
xlat
jae
loop
xor
mov
aas
xor
push
bound
out
ficomps
xor
and
not
test
out
sbb
out
out
je
nop
xor
repnz
je
and
mov
repnz
mov
in
sub
pusha
mov
push
jl
push
inc
xchg
subl
adc
sbb
pop
add
scas
popa
jle
or
jecxz
pop
xorb
lahf
or
les
shrl
cli
outsl
out
out
movsb
repnz
ss
test
in
push
cmp
push
jne
xor
mov
or
cld
ja
xchg
or
ss
sbb
rorb
repz
mov
fcomps
out
out
xor
sub
into
inc
inc
jecxz
mov
adc
cmpsb
rcrb
jge
mov
lock
fcmovu
lds
mov
inc
or
repz
and
push
shrb
cli
inc
repz
pop
push
std
cmp
jmp
inc
fbld
jecxz
add
jns
shrl
fcompl
ljmp
test
xchg
cld
jns
pop
xor
int
mov
add
mov
pop
cld
movsl
ljmp
cmc
or
filds
stos
ja
xchg
bound
inc
test
loopne
sub
push
or
mov
mov
push
mov
ljmp
mov
mov
inc
in
fdivl
sbb
push
and
push
fcomp
dec
push
push
push
jo
xor
sub
xor
div
add
adc
sbb
add
inc
imul
ret
js
xchg
in
ret
pop
dec
jge
fnsave
mov
mov
mov
xor
dec
leave
inc
adc
mov
mov
pop
stc
popa
dec
fsts
cmp
add
cmp
mov
add
pop
cmpsb
addr16
cld
stos
cmp
jne
adc
xor
popf
add
not
sbb
fstpl
hlt
xchg
cs
and
subl
insl
pop
lods
enter
shll
mov
hlt
pop
adc
dec
insl
clc
cmp
mov
inc
cmpsl
cmp
loop
mov
fsubl
adc
jns
loopne
xchg
sbb
data16
lret
mov
xchg
jge
arpl
adc
aad
push
imul
les
dec
test
je
add
adc
pop
aaa
add
xor
mov
push
addb
xchg
scas
sub
jae
test
cmp
clc
lcall
into
xchg
loop
sti
bound
xchg
repnz
test
daa
inc
sbb
cmp
jbe
mov
aaa
or
in
rcl
sub
sbb
mov
and
xor
clc
popf
dec
mov
das
jo
in
outsb
sub
add
loopne
shrl
int
fcomps
mov
xchg
jg
adc
sbb
pop
sbb
jl
loopne
daa
xlat
ja
outsl
push
push
mov
jle
mov
out
das
sbb
add
xchg
sbb
repnz
cmp
call
fadds
rolb
sahf
loopne
ljmp
sub
lret
pushf
pop
fdivrs
loopne
ljmp
mov
in
pushf
nop
das
push
adc
movsb
push
sbb
cwtl
in
stos
cltd
outsl
dec
fdiv
insl
push
and
add
test
out
mov
out
stos
enter
jne
xchg
ret
ss
mov
cmpsl
leave
cs
negl
xchg
lods
daa
jg
aaa
jl
mov
cmp
cmc
sub
int
xchg
sbbl
addr16
mov
and
fildl
and
inc
mov
lock
out
sbb
dec
sbb
jge
push
push
sbb
je
or
lock
sti
ljmp
out
fs
jnp
data16
jo
mov
in
pushf
jl
outsb
punpckhwd
dec
lods
and
in
lea
bound
jle
rorb
lahf
les
sbb
das
pusha
mov
mov
pop
popf
pushf
pop
test
lock
ljmp
fcoms
fs
sbb
sarl
add
jae
mov
or
idiv
les
dec
xor
dec
iret
mov
lea
sahf
dec
cmp
dec
mov
cltd
jge
sub
mov
xchg
inc
lds
xchg
pop
cli
loop
pop
xchg
clc
cltd
cld
out
mov
or
jp
psubusb
icebp
pop
test
jmp
jb
or
mov
jge
lcall
lods
scas
arpl
xchg
adcb
shr
out
pusha
repz
ret
mov
dec
adc
pop
scas
int
repnz
jnp
pop
sub
mov
mov
jo
addb
sub
fsubl
filds
adc
xchg
xchg
jecxz
loop
pop
inc
ja
sbb
rorb
das
loope
je
cmpsl
orl
sti
imul
pop
int
pop
xchg
icebp
push
or
pusha
ret
cwtl
iret
and
add
aaa
adc
xor
in
repnz
mov
aam
pop
xor
pop
pop
mov
out
outsl
sub
pop
mov
jg
push
int3
sbb
pop
out
mov
push
jg
jne
sahf
decl
in
jb
data16
mov
dec
out
sbb
imul
icebp
xlat
shll
sbb
cmpb
xchg
out
pushf
leave
jne
cs
cld
inc
xor
lret
subb
xor
cwtl
sbb
and
and
fidivs
sub
ds
or
int3
jg
push
hlt
xor
test
lcall
cli
mov
jnp
ja
sahf
in
jmp
es
cs
and
lds
xor
jo
daa
add
push
std
es
push
cltd
jl
xchg
xchg
inc
inc
jmp
xchg
lods
imul
jg
sub
pop
sub
pusha
jl
int3
inc
mov
sbb
push
stos
inc
outsb
push
mov
mov
lea
push
mov
pop
in
xchg
and
mov
xor
jae
lock
pop
push
jmp
push
test
or
lods
outsl
jmp
pop
dec
dec
xor
inc
xchg
jb
js
cmp
add
mov
repnz
data16
jge
add
pop
aam
inc
xor
insl
push
mov
iret
xchg
outsl
jae
mov
dec
adc
lret
call
xchg
xchg
cltd
cmp
loope
orl
loopne
int3
dec
lock
mov
js
and
cmp
mov
out
loopne
es
cmp
aad
into
push
xor
mov
mov
testb
into
std
lds
sbb
jecxz
push
mov
je
sub
movsl
adc
test
insl
jb
test
int
jmp
popa
xor
add
jmp
add
imul
daa
push
gs
test
imul
mov
aam
mov
fisubl
or
pop
jb
mov
sbb
add
lahf
jp
cmp
sarb
scas
mov
mov
iret
popf
arpl
outsb
jecxz
sbb
nop
xchg
test
pop
cmp
dec
inc
push
mov
or
dec
pop
scas
mov
pop
sbb
xor
and
popl
enter
adc
lahf
push
in
or
pop
daa
sbb
mov
mov
je
repz
push
movsb
lock
mov
leave
mov
sarb
mov
push
fnstenv
mov
loop
ds
push
fildll
pop
fucomp
xor
es
gs
mov
sbb
xchg
hlt
sub
push
dec
push
popf
xor
cmpb
loopne
mov
arpl
rcr
scas
stos
or
pop
js
xchg
ds
test
cmp
mov
jbe
jb
or
and
les
adc
rcrb
rcrl
int
iret
dec
loope
fwait
movl
aas
fadd
aaa
jl
outsb
movsb
mov
mov
mov
pop
xchg
inc
and
sbb
popa
jg
xchg
sub
ljmp
dec
mov
fldcw
xor
sbb
popa
test
adcb
mov
loopne
sbb
sub
dec
popa
imul
xchg
aad
xor
jno
lea
xchg
or
push
sub
in
pop
and
or
cmp
xchg
mov
mov
sbbb
jae
sub
jne
jns
jns
repz
inc
fnstenv
lcall
inc
cmpb
aad
cli
movsl
icebp
inc
ja
push
mov
push
cs
and
movsl
lret
xchg
jb
mov
rcrb
mov
lds
jmp
das
sbb
ja
or
daa
cli
pop
cs
mov
pop
mov
js
dec
ja
pop
ja
xchg
ja
xlat
push
imul
lret
subb
in
cmc
arpl
or
and
repnz
push
sub
cmp
decl
stos
mov
xor
dec
push
mov
mov
or
push
inc
push
leave
adc
call
insl
fistpll
in
loopew
int3
xchg
sbb
dec
mov
cld
sbb
push
mov
and
adc
lcall
add
cld
pusha
stos
sbbl
xor
andl
mov
xor
data16
mov
mov
incb
jae
jle
scas
sub
add
cmp
or
xlat
jle
lods
repz
mov
inc
push
sub
jne
and
into
outsl
ja
sub
xor
sbb
xchg
adc
pop
sahf
push
nop
cmp
sbb
xor
lret
ret
leave
insl
cmp
pop
adc
fists
sbb
stc
xlat
shrl
dec
stos
mov
stc
push
mov
xor
inc
lcall
push
mov
add
jnp
out
pop
add
insb
outsl
aam
and
cwtl
pop
inc
pop
dec
enter
and
mov
dec
lds
shl
add
aam
pop
dec
cmp
fcoms
cltd
mov
jae
pop
dec
mov
stc
not
icebp
ds
dec
inc
dec
jge
fidivs
sub
adc
push
mov
stc
fists
xor
xor
jg
addb
popa
mov
pusha
inc
and
sbb
hlt
add
leave
inc
popf
test
pop
idiv
ret
repnz
cmc
inc
iret
test
jl
imul
mov
adc
mov
fisttps
mov
adc
shlb
pop
mov
sbb
pop
push
in
pusha
cld
mov
scas
adc
sbb
xchg
or
pusha
dec
ucomiss
inc
ss
sarb
or
jmp
cmp
addr16
push
pop
ds
addr16
push
imul
les
jg
adc
mov
arpl
push
aam
andl
xor
jb
ds
xor
dec
fildll
pop
xor
inc
in
in
pop
dec
stos
xor
loop
jmp
xchg
lds
mov
and
and
mov
shlb
pminsw
outsb
pop
nop
push
test
mov
push
fsubl
and
xchg
push
mov
das
jne
pop
shrb
xor
in
adc
mov
sub
xchg
sahf
cmp
shr
pop
mov
push
fstps
and
popa
inc
int3
lcall
ds
outsb
and
les
mov
xchg
push
jmp
loope
mov
lea
shll
sbb
mov
fbstp
sub
mov
lods
jp
loopne
push
notl
icebp
in
lods
push
shlb
or
push
loope
aad
dec
add
test
leave
int3
mov
jns
lods
sub
dec
roll
rorl
lret
inc
pushf
inc
push
adc
ja
add
test
add
xor
cmpsb
xlat
lea
mov
aad
stc
inc
inc
jecxz
cltd
adc
lret
out
or
in
xchg
push
ror
jg
adc
mov
jg
out
or
fdiv
inc
push
inc
jno
and
aaa
mov
add
enter
add
jmp
lods
inc
xchg
push
and
mov
ss
cmp
cltd
push
xchg
cs
jp
sbb
data16
jle
ljmp
sti
sti
push
lods
icebp
inc
pop
mov
je
mov
xor
pop
hlt
mov
mov
dec
jbe
mov
vunpcklps
cmp
jo
inc
adc
mov
cli
in
sbb
jo
add
push
jmp
aas
idivb
out
push
stos
nop
sub
add
and
jno
out
fst
push
push
test
or
and
movsl
mov
add
aas
pop
rclb
mov
dec
mov
rcrl
lds
mov
add
mov
aam
push
cmp
lock
cmp
push
inc
jl
enter
mov
sahf
mov
movl
sub
push
shl
cltd
mov
cmpsb
rorl
mov
xor
js
push
inc
shrl
push
inc
rol
pop
adc
das
stos
loop
hlt
mov
jo
add
repnz
fldenv
mov
add
inc
sbb
cmpsb
adc
and
sub
mov
stos
aam
aaa
dec
sub
test
faddp
outsl
push
orl
mov
insb
sbb
adc
cltd
mov
repnz
mov
hlt
dec
or
mov
mov
and
or
cmp
xlat
lret
mov
mov
pop
xlat
sti
cmp
mov
add
push
inc
add
mov
or
xor
cmp
cmpsb
mov
and
scas
fsubrs
jp
push
or
jbe
vcvttss2si
push
arpl
clc
mov
test
mov
stos
push
fcmovnu
insb
jmp
ljmp
inc
xlat
ljmp
enter
out
and
out
les
repnz
cmp
call
pop
movsb
popa
pop
aam
jl
and
cmp
out
and
insl
adc
cmp
mov
ret
pop
xchg
repz
mov
lods
cli
into
dec
nop
mov
vpunpcklwd
sarl
mov
enter
xor
pusha
and
addb
push
ja
jp
mov
pushf
frndint
sub
mov
add
push
clc
push
sbb
sub
cmp
int
xlat
push
shr
push
mov
shlb
dec
out
pop
push
mov
lods
jecxz
jns
xchg
sub
adc
ret
cmp
xchg
int
mov
mov
arpl
outsb
mov
ss
loope
subb
hlt
testl
sub
mov
iret
jne
add
push
scas
xchg
lret
fistl
insb
bound
jle
xchg
jbe
or
xchg
loop
cli
jp
stos
mov
lret
xor
xchg
jns
arpl
xor
in
popf
ds
rclb
mov
push
xor
iret
xchg
and
outsb
sub
fbld
cmc
out
or
ret
ret
sub
cmp
lea
sbb
mov
loopne
movsb
mov
outsb
inc
jp
add
mov
hlt
push
data16
nop
idivb
xchg
and
movsb
sti
add
mov
aam
ljmp
push
dec
pushf
les
mov
dec
push
fisttpll
mov
sahf
outsl
or
adc
imul
mov
outsb
stos
add
pop
dec
jnp
xor
cmc
sub
sbb
mov
inc
sbb
cmpsb
addl
push
cmpsb
and
jmp
jno
fwait
adc
addr16
xchg
cli
cmp
cmpsl
in
cmp
adc
fnstcw
pop
insl
jl
cmp
mov
mov
ss
ljmp
mov
ja
cmp
icebp
adc
sbb
inc
add
pop
fs
insb
inc
pushf
imul
data16
outsl
inc
cmpsb
adc
cltd
push
jmp
fistl
je
cmp
jb
dec
movsl
sbb
rcr
cmp
or
mov
lods
xor
mov
es
push
int
pop
cmp
data16
mov
fidivl
jnp
jne
je
xor
jp
test
out
popa
push
push
lcall
or
sbb
iret
lahf
adc
out
out
loopne
jnp
fs
xlat
adcb
dec
mov
add
dec
xchg
adc
mov
adc
clc
xchg
push
jb
xchg
inc
add
cwtl
das
xchg
les
xor
inc
int3
pop
scas
or
cmp
lret
xchg
or
push
imul
subl
cltd
jp
inc
push
sarb
lret
and
repz
nop
inc
imul
and
stc
cli
add
xor
mov
ds
aad
in
rcrl
pop
in
out
inc
jb
out
movsl
mov
push
or
aad
mov
push
jmp
push
jae
test
cmp
push
call
push
mov
mov
dec
mov
mov
rclb
into
imul
imul
bound
or
stos
mov
sbb
add
sahf
stos
push
shll
ss
pop
je
je
mov
cmp
or
cmp
jmp
cs
iret
test
xchg
adc
nop
loopne
hlt
out
insl
jle
ljmp
xchg
popa
ret
pop
mov
mov
fwait
xchg
out
andb
sbb
sub
lcall
cmp
testl
jl
fsubs
leavew
gs
inc
cmp
sub
in
mov
aas
adc
mov
pusha
sub
sub
mov
jbe
mov
pushf
and
scas
or
pop
mov
adc
mov
push
arpl
shlb
outsb
push
cs
cmp
out
mov
inc
jne
mov
out
mov
pop
insl
repz
mov
mov
xchg
out
repnz
neg
xchg
dec
icebp
out
or
xchg
add
aas
sarl
testl
mov
ss
xchg
adc
rorl
mov
cmc
mov
inc
mov
jo
pusha
lods
sbb
je
fst
loope
inc
lods
mov
lods
lods
mov
out
bnd
add
sbb
cmp
fadds
sbb
testl
adc
in
sahf
add
rcr
loopne
dec
cwtl
arpl
aam
call
mov
or
andl
lds
lds
daa
out
imul
add
ljmp
fs
and
movsl
add
sub
test
lea
pop
into
sahf
dec
pop
push
shl
bsr
sbb
je
xchg
dec
sub
push
push
dec
inc
test
rol
lcall
data16
xchg
mov
mov
cli
xchg
cmpsl
add
xchg
jo
xor
dec
lock
pop
stc
pop
mov
scas
xchg
xchg
push
repz
or
add
ljmp
in
loop
jmp
cmp
pop
xchg
cmpsb
push
gs
lock
repnz
aad
inc
sub
enter
adc
dec
inc
mov
jge
addl
mov
adc
fisttps
sub
cmpsb
das
dec
loope
push
and
outsb
fwait
movsb
xor
dec
clc
idivl
movsl
pop
movsb
sub
mov
or
imul
ss
inc
xor
push
lods
in
push
inc
cmp
fisubl
jae
sub
imul
ficompl
repnz
sub
xchg
and
sbb
test
sub
adcb
adc
dec
inc
mov
xchg
jb
jge
xor
xchg
in
adc
adc
scas
dec
je
stc
inc
imul
push
out
cltd
xchg
mov
int3
fdivl
scas
ret
dec
mov
out
xchg
dec
or
stos
test
sahf
cmp
movsb
add
gs
add
sub
pop
push
jge
pushf
insb
icebp
dec
outsl
jb
adc
inc
shrl
mov
adc
aad
jae
ljmp
cmp
sbb
lock
mov
cld
fmul
jnp
rorb
fstpt
into
cs
adc
cmpsl
icebp
cmpb
sub
inc
xor
in
xchg
rorl
push
int3
repz
sub
cmpsl
mov
dec
and
popa
xchg
mov
mov
cld
mov
jg
or
push
lahf
mov
cld
pop
stc
int
aam
jnp
in
push
push
dec
dec
cmc
in
cmp
sarb
xchg
test
outsb
sbb
mov
bound
flds
pop
out
xchg
mov
xor
or
add
sbb
arpl
push
sub
loopne
add
popf
and
inc
bound
cmc
fldl
repz
aam
scas
dec
ja
loop
scas
jmp
cmp
jne
adc
mov
jp
stos
into
cmpsb
push
icebp
mov
mov
das
adc
adc
pop
mov
pop
pop
mov
cwtl
cmp
lock
jecxz
adc
xor
sub
fldt
fidivrl
sub
add
enter
jbe
pop
xchg
dec
mov
bound
fbstp
out
lods
fmulp
pop
sti
subb
mov
lret
mov
push
mov
fadds
cld
imulb
ja
sub
fidivrl
icebp
jns
jp
mov
pop
lods
adcb
sbb
mov
or
int
shr
rol
lcall
enter
adc
test
adc
test
loope
into
clc
sub
jbe
cmpb
mov
div
or
in
pusha
mov
sbb
ret
and
ss
or
adc
loopne
adc
and
lahf
or
sarb
sbb
fimull
pxor
jl
jbe
xchg
xchg
stc
sbb
int3
lea
xchg
mov
std
adc
gs
inc
dec
ret
xor
sub
aas
subb
dec
and
push
mov
imul
lea
aaa
mov
jl
loope
into
lods
push
sbb
dec
push
ret
enter
fwait
or
int
pushf
lea
int
into
cltd
jg
xchg
sti
dec
cli
lret
sub
jb
sbb
xor
sub
orb
and
dec
xor
pop
scas
pushf
into
sbb
iret
movsl
lods
inc
inc
xchg
dec
sbb
sbb
mov
daa
leave
enter
dec
pop
test
pop
jg
in
in
dec
js
fldcw
cmpsb
lods
xlat
mov
sub
outsl
ds
aad
movsl
cmp
and
sar
jge
pop
test
std
mov
adc
push
lock
mov
push
stos
xchg
inc
lcall
stos
aam
mov
add
and
lret
mov
cmp
pop
jo
repnz
ljmp
mov
jg
lock
jb
or
jmp
insl
or
mov
jno
test
mov
imul
dec
rcr
jns
pop
mov
cs
jo
inc
sbb
fwait
mov
andl
sub
mov
cli
adcb
mov
mov
lret
jo
dec
rcrl
les
cmpsb
dec
and
jmp
cmpsb
cs
sub
jecxz
pop
add
and
sbb
jg
mov
jne
in
orl
or
or
repz
push
xor
push
jnp
ss
jp,pn
and
pop
int3
mov
enter
mov
or
and
add
out
and
lea
sub
jge
jmp
xlat
xchg
pop
pop
aas
push
icebp
and
ja
movsb
fs
or
test
fwait
dec
dec
add
jecxz
mov
pop
mov
lea
and
pop
dec
cmp
jmp
sbb
dec
mov
mov
lret
inc
cmp
test
outsl
jp
enter
mov
fdiv
xchg
cmp
inc
inc
dec
or
cmc
dec
fwait
sbb
xchg
aad
insl
aad
in
mov
pop
sbb
loope
and
into
xchg
and
ret
jmp
repnz
sub
fildl
dec
lahf
inc
cmp
lods
push
js
push
add
inc
xorl
inc
loope
inc
stc
mov
enter
mov
aam
das
lahf
pop
ds
mov
hlt
mov
dec
mov
sbb
loopne
push
xchg
in
fcoml
jne
ja
hlt
mov
pop
push
mov
enter
fisubrl
xchg
adc
jge
das
sub
jno
ja
push
nop
ljmp
jge
imul
cld
jle
mov
loop
or
push
mov
fcoms
or
in
push
inc
stos
xchg
cld
mov
ljmp
jno
mov
inc
and
es
stos
jnp
xor
jecxz
data16
cwtl
leave
scas
sarb
and
inc
or
insl
inc
sbb
out
pusha
adc
and
in
loopne
out
cmp
cltd
je
int3
push
inc
std
mov
lret
xchg
pop
or
ret
out
fstps
push
mov
mov
insb
ss
xor
cltd
jno
shl
sbb
xchg
ret
cs
iret
loopne
push
jg
jnp
enter
movsb
mov
push
insl
scas
jmp
insl
add
js
sbb
insb
sub
ds
out
push
push
inc
mov
sub
in
pop
shrl
dec
or
sarl
lock
clc
mov
repnz
xchg
outsl
mov
push
flds
ss
dec
xor
fisubl
sub
mov
add
jecxz
icebp
popf
dec
add
lods
pop
push
movb
jmp
lods
mov
xor
cs
sbb
clc
dec
out
jg
mov
sbb
adc
pop
mov
int
add
dec
mov
xchg
push
fidivrs
arpl
mov
out
sub
mov
repnz
aas
mov
pop
sub
pop
fstps
popa
or
es
dec
stos
sub
push
scas
into
es
aas
test
push
dec
mov
rol
in
ret
gs
mov
push
pop
das
push
push
dec
cmp
and
ds
dec
adc
jns
imul
pusha
add
xchg
pop
cmovbe
out
mov
je
sub
and
clc
loope
das
in
sahf
jp
sbb
jo
stc
jg
push
cli
loop
add
ss
mov
inc
mov
mov
inc
xchg
shll
shlb
cvttps2pi
push
add
mov
stos
loope
hlt
sahf
mov
insl
add
jp
das
and
mov
mov
add
pop
cmpsb
mov
nop
or
xchg
pop
daa
sbb
out
cwtl
cmp
jp
es
lcall
test
push
add
mov
and
jg
arpl
fstpl
mov
lahf
fdivs
adc
jg
in
insb
jno
gs
lret
das
jle
add
mov
adc
xchg
pop
pop
dec
push
adc
popa
sbb
dec
pop
add
push
lea
stc
or
test
mov
test
test
int
sub
xchg
sub
jmp
in
out
mov
sbb
lods
jmp
add
je
xchg
pop
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
pushf
bound
xchg
xchg
addb
fadds
mov
ljmp
adc
test
mov
xchg
push
decl
xor
xchg
imul
and
pop
test
lret
shr
xor
push
mov
cmpsl
mov
test
push
imul
cmp
jl
sahf
test
cmp
pop
xchg
sub
in
xchg
sbb
pop
jbe
ja
jp
add
inc
inc
cmp
test
ret
pushf
push
lret
aam
xlat
xor
jle
cmp
push
cwtl
lea
fwait
mov
les
push
sub
cld
inc
lock
repnz
test
xor
adcb
rcr
mov
cwtl
add
jl
jge
jne
jle
sub
lahf
cmc
imul
mov
cltd
imul
pop
insb
mov
push
jmp
fistpl
push
xor
enter
dec
pop
push
mov
stc
dec
rcll
dec
adcl
cli
lret
sbb
jnp
jle
cmp
outsb
mov
adc
mov
dec
xchg
and
lret
test
cltd
lret
fdiv
xchg
int3
adc
mov
xor
lcall
es
mov
sbb
sub
pop
add
movsb
lahf
lea
iret
movl
sbb
sub
jo
or
mov
inc
lret
faddl
inc
xlat
push
arpl
xor
stc
mov
mov
cmp
gs
jns
sahf
adc
push
leave
xchg
pop
cmove
ret
mov
cmp
scas
cmpsb
xchg
push
in
sbb
jg
mov
push
or
dec
sub
loope
xchg
or
fwait
test
cwtl
mov
push
sub
sbb
mov
mov
daa
jg
ret
cmp
push
arpl
push
out
enter
xchg
or
jmp
ret
sbb
mov
or
xlat
mov
pop
enter
pop
sub
cwtl
push
mov
sarl
and
lret
out
jnp
push
jns
js
jns
mov
inc
pop
xchg
shll
ds
pop
test
xchg
xchg
fs
icebp
cmc
rolb
das
movsb
cmp
pop
cmpsb
out
push
inc
sarb
cmp
dec
clc
in
mov
int
sti
call
push
test
fidivs
inc
imul
into
test
call
dec
outsl
lret
adc
inc
enter
lret
dec
sub
ror
add
adc
mov
jns
sbb
js
sti
mov
pop
leave
mov
and
ret
xor
add
xor
adc
push
sub
popf
add
jne
mov
das
xor
pop
js
or
adc
ret
inc
xor
ret
mov
pop
mov
jecxz
push
xchg
mov
push
hlt
mov
cmp
push
xchg
xor
xchg
sub
shl
mov
in
clc
scas
and
fstpl
inc
lahf
pop
cmp
rclb
xor
shl
sbb
jg
dec
pop
lock
sbb
inc
orl
mov
jle
dec
or
mov
nop
pop
xchg
sub
test
mov
jg
repz
icebp
inc
mov
or
test
sbb
mov
jge
xchg
sub
scas
stc
lds
stos
test
test
adc
or
push
cmpsl
ret
sarb
repnz
int3
add
ret
mov
push
mov
cmpsb
mov
or
lock
ljmp
ds
gs
mov
aam
stos
sub
cmpsl
jns
jmp
test
mov
push
mov
and
dec
fldt
push
push
add
push
push
push
cmp
imul
cmp
pop
sbb
mov
scas
push
cmc
nop
insb
inc
test
ljmp
pop
cmpsb
rorb
cmp
or
adc
sbb
push
sahf
add
inc
pop
xlat
sti
pop
or
inc
xchg
test
pop
adc
push
xchg
lods
les
jne
cltd
xor
andl
ljmp
jb
sahf
out
and
icebp
mov
ds
jbe
jg
inc
shll
popf
add
xchg
sub
inc
repnz
movsb
sub
bound
test
push
pop
sbb
push
lock
add
sub
jge
bnd
lret
lods
aam
lods
pminsw
mov
loope
arpl
pop
push
mov
push
insb
dec
pop
mov
popf
cmp
jmp
xchg
adcb
mov
inc
test
xchg
add
arpl
test
dec
orb
pop
scas
push
mov
adc
xor
in
ret
movsl
push
and
xor
sub
rcrb
fcomp
fnstcw
inc
sarl
mov
in
mov
xor
fidivrl
out
dec
mov
aam
or
mov
pop
ss
mov
int3
test
lahf
add
and
adc
ficomps
push
pop
pop
jecxz
aaa
int
in
in
mov
loope
mov
push
mov
daa
call
cmp
movsl
fcmove
insb
shll
fidivrl
push
iret
mov
cld
dec
mov
jne
jno
mov
fwait
test
push
add
lods
daa
xor
mov
xor
xchg
mov
and
jo
dec
inc
ret
negb
fcom
xlat
cmc
test
fucom
ror
push
mov
mov
sar
mov
sbb
lods
add
cmp
mov
xchg
leave
sbb
fs
fidivl
jmp
mov
mov
inc
je
dec
mov
iret
mov
out
jp
jb
mov
jb
mov
lahf
dec
ljmp
sub
sbb
jg
lcall
inc
je
flds
lret
sbb
xchg
xchg
cltd
das
inc
inc
xor
adc
jle
cwtl
lret
in
mov
dec
dec
mov
rcll
add
in
mov
nop
enter
xor
xlat
lret
jg
xchg
ds
loopne
dec
and
and
int3
mov
aad
ror
aaa
ja
inc
test
lds
xchg
xchg
push
test
in
and
aas
outsb
and
or
mov
sub
push
jecxz
iret
divb
mov
jns
and
inc
jnp
mov
cmpsb
jne
rclb
adc
mov
and
push
out
cs
mov
data16
insb
xchg
mov
outsl
cmp
addl
mov
shl
adc
push
sbb
inc
jg
mov
pop
imul
jp
pop
imul
cmp
mov
pop
cmc
mov
jg
add
inc
mov
pop
adc
pushl
test
mov
push
hlt
rcll
int
inc
pop
popa
subb
xchg
stc
adc
repz
xchg
inc
xor
inc
jle
push
fiadds
call
dec
pop
inc
and
test
scas
lcall
les
dec
sub
sar
gs
iret
cmpsb
out
pop
lods
cmpsb
out
push
mov
scas
outsl
orb
stos
fnstcw
inc
cmpsl
lcall
xor
pop
out
pause
push
das
add
mov
js
or
or
decb
push
sub
nop
xor
lcall
aaa
filds
fldenv
sahf
int3
hlt
pop
stos
gs
hlt
ret
xchg
jg
cmp
adc
popf
cmpsl
es
mov
cmpsl
loop
mov
cmp
je
and
sbb
je
mov
cltd
js
push
and
adc
mov
cmp
das
out
inc
sarl
dec
js
or
lea
scas
mov
pop
dec
mov
adc
sbb
andl
dec
xor
inc
and
ret
sti
push
xchg
xor
mov
es
mov
lock
hlt
jecxz
out
xchg
push
wrmsr
push
and
mov
xchg
mov
jb
mov
add
push
sub
lds
sbb
arpl
cmp
push
icebp
and
or
jle
or
fwait
les
pop
orb
mov
fstpt
ds
push
scas
ss
mov
jmp
sti
xchg
push
adc
fsubr
xchg
cltd
fdivr
mov
dec
xor
mov
jg
inc
adc
lahf
sbb
xor
repz
mov
cld
xchg
daa
xchg
and
jl
loope
aam
movsl
std
xchg
adc
adc
int3
test
leave
pop
gs
mov
lods
insl
in
adc
stc
pop
cli
pop
int3
dec
lahf
xchg
cltd
mov
jnp
arpl
int
lahf
sbb
lock
add
mov
test
js
sub
test
mov
cmp
mov
in
shl
stos
clc
inc
push
lcall
mov
mov
inc
stos
lret
pop
movsl
lcall
mov
mov
icebp
and
enter
fcomps
aaa
shll
and
lret
fistps
xor
xchg
repz
push
loop
dec
mov
mov
xchg
and
scas
fwait
jmp
cmp
adc
lret
hlt
and
inc
mov
ds
mov
lea
cltd
jmp
divl
lret
adc
mov
pop
dec
in
out
rolb
enter
cmp
and
in
stos
aas
mov
mov
repz
std
sbb
xchg
and
aaa
icebp
lahf
adc
dec
push
xor
sarl
cmp
add
mov
or
idiv
and
aaa
inc
mov
xorl
mov
and
inc
xchg
xchg
filds
cmp
icebp
fistps
lds
in
xor
imul
push
sub
shlb
jle
mov
and
mov
pop
pop
leave
pop
roll
xchg
pop
and
jle
push
lock
adc
xchg
sub
lea
rol
std
leave
adc
test
push
xchg
xlat
fcoms
pop
leave
pop
call
enter
adc
js
pusha
push
cmp
mov
mov
je
xor
sbbb
mov
daa
in
or
or
scas
mov
fsubrs
cmpsl
sub
add
sub
fistps
rolb
popf
xlat
add
mov
sbb
inc
clc
mov
cmp
in
sbb
test
sub
and
outsb
sbb
adc
pop
cltd
xor
xor
xchg
ds
mov
out
mov
loopne
sbb
xor
inc
jl
cmpsl
cld
outsl
jl
jecxz
pop
jnp
cs
gs
pop
insb
xchg
cmpsb
cltd
cmpsb
shl
mov
push
push
inc
repz
sbb
xchg
andl
xchg
das
lock
jg
xor
inc
daa
fidivrs
adc
xchg
je
pop
jp
mov
push
aam
pushf
mov
push
pop
push
int3
adc
sub
or
in
sti
pop
test
out
push
push
cmp
sahf
ja
movsb
in
mov
cs
mov
test
cld
fmuls
fsubrl
insl
pusha
add
mov
int3
xlat
sbb
pop
popf
in
inc
mov
xchg
outsl
cld
sbbl
clc
out
mov
imulb
add
fidivl
mov
daa
sbb
jno
pop
mov
mov
fdivl
sub
cmp
sti
mov
push
mov
add
mov
es
sbb
mov
arpl
inc
mov
inc
jmp
mov
adc
cmp
or
test
dec
cmpsl
data16
daa
movsb
add
pop
xchg
and
mov
jecxz
pusha
aad
lods
je
and
xchg
scas
mov
cmp
inc
imul
jp
lods
add
push
add
mov
jp
out
cli
movsl
iret
je
stos
xchg
jge
cmp
sub
mov
es
fs
std
sbb
shr
imul
jae
sbb
clc
mov
addr16
scas
arpl
mov
jmp
hlt
add
mov
popl
es
clc
adc
int
test
add
je
pop
cmp
jns
lea
rcrb
adc
sub
mov
add
les
fisubrl
xchg
icebp
add
mov
cli
pop
push
inc
inc
rolb
jne
add
pop
aad
fmulp
push
adc
test
negl
dec
pop
retw
divb
sbb
lock
je
stos
pop
ret
jge
sub
add
inc
fcomi
cmp
push
jns
lea
out
std
mov
rorl
rcll
cmpb
iret
jmp
insl
cmp
lock
je
lds
xchg
jge
into
sbb
dec
or
out
cmp
fwait
ror
popa
adcl
leave
xlat
xchg
pop
clc
mov
cld
sbb
cmp
lret
test
lret
inc
xchg
xchg
and
adc
xor
addr16
outsl
inc
fsub
loopne
fsubs
lock
mov
push
fdivrs
xor
test
xchg
push
in
repz
mov
xchg
or
out
andl
mov
cmp
dec
movsl
inc
fisttpl
adc
inc
cwtl
cmp
inc
icebp
lea
cmp
xchg
and
and
cs
sub
mov
rorb
sahf
xor
gs
lods
scas
stos
ud1
lea
xor
testl
shll
repz
mov
mov
sarb
outsb
inc
iret
shll
push
lcall
or
adc
adc
xchg
mov
mov
inc
xor
and
xor
sbb
xchg
mov
rorl
rol
dec
jecxz
lret
sub
xor
jp
lcall
inc
cmp
xchg
jo
mov
gs
mov
cmpsb
dec
xchg
or
adc
jg
scas
mov
je
rcll
mov
mov
mov
mov
sub
mov
cmp
test
push
sub
or
fwait
push
mov
mov
js
add
inc
mov
mov
fdivr
cmpb
sub
sbb
leave
repnz
rolb
cmp
jle
push
stos
dec
cli
mov
out
hlt
dec
xor
dec
cmc
pop
push
clc
cmp
cmp
add
mov
mov
jecxz
lds
xor
dec
fstps
cmpsl
fcmovu
add
nop
push
nop
in
xchg
xchg
or
mov
jmp
xor
lods
ret
adc
mov
dec
jne
pop
mov
sbb
ror
xor
outsb
aaa
xor
test
xchg
jbe
rorl
sbb
je
in
fldl
sub
and
jp
adc
adc
jnp
and
fs
out
outsl
and
fimull
cli
pop
or
dec
mov
mov
or
cmp
cli
mov
cmp
pop
mov
jl
pop
iret
outsl
rorb
pop
mov
or
or
xor
icebp
popf
mov
cli
push
jl
jle
fwait
adc
cwtl
shrb
pop
ret
push
fldcw
ja
fstps
scas
or
jg
sbb
mov
mov
std
jno
aas
popl
rcrl
xchg
aas
pop
mov
shlb
xchg
jl
stos
inc
jge
mov
adc
ja
mov
xchg
mov
imul
ffree
lret
pop
add
jo
push
lods
mov
fldenv
cli
gs
jecxz
outsl
in
ret
out
push
fcmovbe
pop
loop
lret
pushl
mov
mov
jmp
inc
push
pusha
movsl
addr16
jecxz
test
cli
pusha
out
pushf
cmp
inc
insl
sti
and
mov
fidivs
andl
mov
mov
cld
addr16
dec
lahf
cmp
and
inc
and
nop
mov
inc
dec
mov
add
in
ret
jnp
dec
and
mov
jno
jg
shlb
call
jae
xchg
mov
ret
jne
lret
push
adc
mov
push
insb
push
push
mull
ja
in
push
enter
xchg
fwait
insb
movlps
decl
shrb
push
sahf
and
insb
mov
jp
mov
pop
ja
lahf
pop
lods
xorb
pop
insl
add
ss
shll
cmp
mov
sub
fbstp
add
mov
scas
mov
push
mov
jge
stc
and
inc
adc
ds
popa
xchg
dec
xchg
cmp
add
es
cld
scas
call
test
sbb
jne
xor
cmp
jo
mov
cmp
pop
cmp
sbb
cwtl
or
mov
cmp
jge
jl
inc
pop
push
push
ret
outsb
lret
or
movsl
cmp
fcmovnbe
es
data16
cmp
iret
add
jge
jb
push
add
pop
aad
out
popa
inc
xor
movsl
fsubr
sbb
sub
fldl
inc
jl
add
add
daa
mov
jnp
scas
stos
jp
add
dec
adc
sub
mov
cmpb
cmp
aaa
orb
and
dec
jecxz
int3
cmpsb
jb
pop
mov
aas
cmp
xchg
inc
inc
out
dec
cltd
cmpsl
sbbl
sbbl
add
or
mov
mov
pshufw
xor
pop
push
cmp
mov
in
mul
fmull
mov
pop
jbe
dec
jge
pushf
fwait
notl
je
testl
mov
outsl
lret
or
xlat
ljmp
shrl
cmp
push
sub
loope
xchg
test
loop
sub
into
sbb
sub
mov
mov
mov
fdivs
int
or
push
jle
mov
sub
adc
cwtl
jle
test
aas
bound
orb
xchg
fcoms
imul
leave
pop
xchg
vmovntps
push
adc
push
inc
lock
xlat
jmp
inc
add
push
repnz
jg
loopne
sub
jp
push
andl
inc
clc
mov
adcb
aaa
inc
and
xchg
jle
jmp
in
cmp
pop
fucomip
stos
pop
iret
scas
stos
insl
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
cmp
dec
add
add
add
add
add
add
add
push
dec
add
add
add
push
push
inc
push
adc
jbe
mov
mov
push
adc
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
