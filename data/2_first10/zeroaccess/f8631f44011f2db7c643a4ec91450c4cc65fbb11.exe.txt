push
mov
sub
xor
jmp
into
rcr
aad
mov
test
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
aam
in
mov
sti
dec
test
lods
add
out
and
xor
sbbl
dec
stos
into
jo
add
xor
jo
stc
movsb
leave
cmp
scas
inc
aam
aad
shrb
xchg
lret
dec
aas
int3
xor
inc
xor
xor
loope
js
cwtl
aaa
sub
cld
fmull
aas
inc
push
fdivrs
inc
sbb
rclb
imul
cs
cwtl
enter
push
pop
mov
lret
in
js
sti
shr
and
adc
dec
mov
mov
adc
ret
dec
cwtl
sub
pop
sbb
adc
jmp
lcall
cmp
fs
clc
mov
mov
mov
arpl
out
push
repnz
cmpsb
pushaw
in
jne
lods
push
in
ljmp
in
shrb
cld
push
loopne
out
mov
cmp
out
mov
mov
popa
or
test
in
test
mov
arpl
dec
push
out
addr16
aaa
or
push
mov
pop
out
push
inc
mov
dec
out
mov
adc
fstl
movsl
jno
cmc
adc
dec
xor
sub
push
shr
in
sub
jmp
dec
scas
ficomps
fstps
xor
repnz
repz
in
adc
push
xchg
add
jne
mov
in
cmp
les
repnz
daa
xor
stc
fildll
jae
imulb
sub
rol
cmp
or
jl
ja
jmp
xchg
jge
xchg
rorb
ljmp
inc
add
add
add
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
lret
xorb
jle
js
jle
js
xor
scas
or
and
push
ss
xchg
jbe
enter
pop
mov
cmp
into
arpl
mov
mov
notl
lret
icebp
push
repnz
pop
mov
leave
push
fcompl
adc
test
movsb
sub
jbe
lock
cld
in
mov
jecxz
popf
and
fsubs
mov
pop
addr16
cmp
sbb
test
add
jge
xchg
and
mov
scas
mov
push
fldcw
cltd
out
xchg
cmpsl
loope
sbbb
in
jne
es
ja
in
int3
pop
cmc
into
sub
repnz
add
mov
icebp
sbb
aam
outsl
dec
aas
jae
les
or
icebp
xor
dec
mov
xchg
movsb
ret
clc
ja
sub
and
lret
sub
xchg
or
xor
repnz
or
push
cwtl
push
je
xchg
in
lea
and
cmp
jo
sub
in
mov
cli
xchg
test
stos
fisttps
jle
xchg
jns
cmp
lea
scas
mov
jae
aas
adc
xchg
sub
and
mov
sbb
pop
xor
imul
xor
inc
mov
cld
imul
repz
gs
subb
mov
roll
test
mov
inc
fdivp
add
jmp
xor
cmpsb
xchg
gs
mov
shrb
hlt
push
pop
in
cmpsl
and
ljmp
push
test
pminub
sub
loope
lahf
xor
or
add
fsubl
rcrb
and
test
add
ret
imul
aam
frstor
imul
sti
ficoms
js
ja
int
insl
lahf
xor
cmp
or
shrl
push
dec
or
push
lret
sbb
fnstenv
hlt
int
imul
cmp
aad
jns
push
daa
lds
clc
cmpb
scas
and
jmp
jp
fcmovnu
leave
outsl
mov
rclb
push
inc
daa
in
sarb
hlt
push
dec
push
xchg
cli
sbb
pop
add
loope
outsl
add
xchg
add
stc
mov
mov
mov
cmp
dec
test
add
push
add
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
addr16
jl
js
jle
js
negb
push
sbb
and
pop
addl
ljmp
jp
stos
lds
mov
mov
cmp
mov
fsubp
rep
sahf
fmull
ja
adc
push
xchg
mov
pop
push
and
aam
pusha
sub
shl
add
push
sbb
iret
fsub
xlat
push
add
pop
ja
enter
pop
xchg
test
xor
les
xchg
and
mov
in
movsb
xor
mov
out
fwait
dec
fiadds
rcll
mov
into
mov
mov
push
jae
inc
add
push
pop
fdivrp
loope
xor
fadds
out
test
dec
lret
out
xorl
push
sub
lret
lock
inc
mov
es
call
jae
pop
mov
lret
ds
shll
sub
jp
cmp
je
into
mov
mov
fisttps
daa
sub
adc
fmuls
insl
xor
and
adc
sub
stos
rclb
mov
outsb
mov
daa
add
jg
inc
or
and
mov
mov
test
adc
sub
cmp
sbb
mov
xor
daa
arpl
shl
hlt
mov
mov
aas
or
xlat
mov
ss
icebp
ss
roll
es
lock
cmc
ljmp
xchg
jb
push
xchg
mov
hlt
imul
insb
push
cli
cmp
xchg
iret
sub
inc
jmp
imul
fidivrs
or
shl
inc
outsl
repnz
cmovp
enter
xor
icebp
call
out
pushf
and
bound
cld
popf
hlt
mov
fisubl
or
mov
sbb
mov
xchg
or
jge
int3
arpl
aad
int
or
aaa
jmp
aas
sarb
sub
sahf
dec
into
dec
out
pop
xor
jne
push
sub
mov
fldl
shll
lret
test
adc
loope
adc
mov
lods
xor
mov
imul
sub
mov
cli
lods
loopne
dec
or
jl
cmpsb
aam
aas
jbe
addr16
ja
cmp
cmc
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
aam
mov
addb
js
jle
js
dec
pushf
pop
xchg
push
inc
bound
inc
pop
cs
adc
ffree
sbb
cmpsl
xor
and
imul
jnp
sbb
lods
sub
inc
mov
mulb
lea
push
dec
fidivl
push
insl
leave
cmp
mov
or
int
ja
fdivr
pusha
test
loop
push
push
je
pop
fsubr
xor
push
movsb
xor
pop
and
into
add
cmp
andb
lahf
cmc
xchg
mov
jl
jecxz
xchg
shrb
inc
lods
pop
xchg
pop
in
jmp
je
and
xchg
test
and
adc
outsb
dec
jne
jmp
add
testl
jb
jg
loope
jae
in
mov
pop
lret
das
std
add
jg
jbe
xchg
sub
pop
out
xchg
stc
and
clc
push
adc
sbb
xchg
les
jbe
mov
pop
lret
out
mov
mov
mov
popa
inc
inc
lret
sub
inc
shll
cmp
lcall
jp
bound
clc
mov
jg
xchg
js,pt
ret
push
lods
outsl
add
testl
es
aaa
add
mov
ds
lock
mov
xor
pop
sbb
and
lock
das
sub
xor
adc
and
cs
es
vpaddsb
xor
cli
xchg
std
adc
sbb
addr16
push
pushf
mov
push
xchg
ds
push
fs
mov
cwtl
in
adc
mov
push
cwtl
in
inc
test
push
popf
les
lret
inc
imul
inc
insb
pop
imul
mov
cmp
mov
add
out
add
and
rol
std
pop
inc
imul
nop
jmp
dec
out
push
out
dec
push
push
cmp
cmc
xor
iret
cmp
xlat
sahf
adc
out
data16
mov
js
sbb
fmuls
xor
cld
loopne
test
push
lret
in
subl
imul
outsb
call
shll
push
push
xchg
push
and
sub
jno
push
mov
pop
stos
mov
sub
xchg
sarb
mov
or
xchg
mov
add
ror
jecxz
push
jecxz
inc
loopne
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
imul
popa
add
js
jle
js
js
jnp
leave
sub
add
rcl
cmp
sar
inc
insb
sub
sub
sbb
cmpsb
nop
xor
aaa
cwtl
cmpsl
fwait
enter
sub
adc
imul
cmp
cmp
sti
sarl
cltd
inc
push
pop
stc
notl
ja
or
mov
xor
jle
dec
mov
dec
sbb
bound
mov
mov
mov
roll
fcoml
adc
adc
dec
les
jecxz
pop
fld
jb
push
inc
fdiv
mov
outsb
pop
insl
xchg
fs
into
xchg
push
mov
push
fsubrs
fldenv
push
mov
sbb
fistps
pop
aas
lock
jae
sahf
jmp
scas
pop
mov
cmp
push
push
mov
mov
and
call
xchg
fstpt
dec
sti
shl
inc
lds
ss
or
mov
outsb
xchg
fsubrl
cld
mov
ds
imul
lds
out
aas
shr
and
jne
xor
cmp
push
fnsave
insb
dec
leave
out
loopne
push
cmpsb
pop
loop
pop
mov
jae
pop
mov
imul
bt
lahf
mov
mov
leave
jge
fdivrl
adc
inc
jge
outsl
bound
mov
pop
cmp
pop
and
mov
loopne
mov
imul
jne
test
pop
mov
andb
jbe
adc
sbb
sub
rcr
xchg
dec
out
or
dec
dec
ret
push
in
lcall
mov
arpl
int
mov
test
icebp
inc
loope
dec
lcall
je
in
sbb
arpl
test
lahf
mov
sahf
fs
lret
xlat
push
dec
xchg
xchg
fldenv
out
imulb
mov
es
xorb
leave
jne
ficompl
adc
push
scas
ret
jg
jns
lret
mov
sbb
add
aam
clc
test
cmpsl
shll
jnp
lahf
popf
mov
je
loop
mov
popf
inc
inc
and
mov
cwtl
adc
aad
cmp
jp
rcrl
mov
jge
jp
cmp
dec
insl
or
pop
or
or
push
test
outsb
sbb
lcall
mov
roll
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
mov
xchg
dec
inc
loope
dec
dec
inc
push
in
das
and
adc
in
ljmp
xor
aas
push
sbbl
adc
fcmove
adc
lods
ds
pop
fwait
mov
out
cltd
rcrl
jnp
ror
mov
hlt
cmp
lods
jns
and
mov
xchg
movsl
jge
lock
mov
mov
call
mov
shrl
push
xchg
enter
ljmp
das
sbb
test
xchg
pop
xchg
mov
mov
add
sbb
insb
cs
imul
xchg
loop
xchg
xchg
aam
in
xchg
xchg
mulb
ja
cmpsl
js
scas
stos
pop
ficompl
int3
je
lret
repnz
je
leave
mov
inc
icebp
test
mov
xor
add
inc
inc
jmp
inc
sbb
xchg
jp
adc
idivl
add
popf
mov
mov
aad
aam
lahf
aaa
lea
mov
xchg
repnz
pop
jle
out
inc
aam
jo
imul
cs
and
dec
lock
ss
addb
leave
out
pop
in
push
xchg
mov
shlb
mov
inc
cs
fwait
mov
addr16
fld
xchg
sub
sbb
pop
ficoml
fiadds
js
adcb
outsb
jns
xchg
inc
js
push
cmp
pop
pop
pop
sahf
mov
pop
in
push
les
je
pop
jg,pt
mov
and
cmc
mov
addr16
les
fs
movl
xchg
nop
push
scas
or
or
jno
dec
jae
mov
pop
es
fisubrs
cmp
loopne
popa
mov
ret
mov
inc
sbb
push
rorl
test
movl
mov
fstl
fbld
test
pop
dec
jne
mov
test
stos
rdpmc
mov
cli
lret
push
inc
bound
pushf
and
xchg
rcll
cmpsl
fs
add
xchg
add
mov
pop
mov
cmp
and
out
shrl
xchg
or
outsl
ret
sbb
inc
popa
mov
ss
lods
jge
cmp
inc
xchg
or
arpl
cmovne
or
jge
addr16
das
dec
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
adc
add
js
jle
js
or
adcl
pop
neg
int3
inc
jge
adc
pop
jp
dec
mov
push
gs
inc
pop
push
dec
sbb
cmp
sbb
or
popa
mov
push
popf
mov
sub
aas
outsl
or
dec
or
xor
add
pushf
jns
js
jne
push
sbb
mov
stos
rep
xorb
xorl
mul
cmp
sti
in
inc
mov
or
xchg
sbb
mov
lcall
dec
jp
movsb
sbb
push
test
stos
push
int3
jmp
push
xor
mov
jno
xchg
scas
cltd
stc
adc
cli
jns
sub
jmp
lret
in
jle
jae
adc
xor
pop
fimull
dec
push
into
or
mov
and
int
mov
mov
shr
fdivl
clc
inc
mov
ret
mov
and
xchg
sub
and
sub
jns
dec
xor
cld
sbb
sub
xor
and
pop
or
dec
int
test
or
int3
into
insl
aas
fldl
or
sub
in
or
mov
jbe
jno
adc
subb
stos
in
jae
cmp
ror
popa
xchg
jl
shl
mov
movsl
inc
in
xchg
ficoml
mov
add
dec
and
xchg
es
out
jae,pn
jle
popf
movsb
jecxz
mov
xchg
jp
jmp
out
subb
cmpsl
lret
mov
push
inc
and
xor
sbbl
pop
aad
cmp
ret
je
cli
mov
popf
adc
call
js
icebp
mov
push
and
dec
xlat
mov
in
mov
jge
lods
sti
fstl
xor
add
xlat
push
sbb
dec
jmp
push
fs
test
insb
insl
movsb
jne
mov
jp
mov
or
inc
or
xchg
pop
imul
xchg
sahf
mov
mov
icebp
jb
dec
mov
jmp
pop
cmc
fnstenv
add
xchg
lods
and
cmp
pop
push
ds
popfw
cmp
subb
add
out
jmp
adc
aas
lods
dec
xchg
call
fwait
sarl
and
cwtl
inc
xchg
incl
xchg
add
or
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
dec
repnz
mov
js
jle
js
adc
shrb
sub
sub
pushl
lcall
pushf
std
push
in
imul
negb
int
pushf
lea
fstps
mov
jg
fwait
jl
mov
sub
iret
test
xchg
mov
test
out
test
and
enter
enter
pop
loop
fs
pop
cwtl
dec
xor
push
xchg
mov
sbb
jne
enter
test
xchg
or
les
scas
cld
jle
into
cli
int
adc
fcmove
add
dec
pushf
ja
push
and
adc
push
shl
bound
sbb
cltd
js
pop
ds
arpl
dec
jae
ja
push
xor
fwait
mov
inc
repnz
lods
in
or
xor
movsl
dec
ja
xchg
xlat
shll
arpl
cltd
rol
movsb
xchg
shrb
jmp
push
daa
repz
add
sbb
xorb
ja
inc
xchg
xor
and
fistl
or
jno
or
mov
test
popf
push
fwait
jo
repnz
filds
xchg
lcall
xlat
xchg
cli
sbb
mov
call
xchg
xorl
or
dec
dec
sti
mov
sbb
imul
sub
cs
pop
pop
xor
cs
rclb
cmc
stc
movsl
popa
pop
in
mov
jl
andb
jb
out
add
mov
ds
aaa
lds
outsl
leave
stc
or
mov
add
add
mov
test
rorl
sub
stc
sub
es
pop
jl
clc
decl
jecxz
inc
cmp
aam
stos
push
lock
dec
fld
jl
jo
nop
shlb
das
push
xchg
ds
jns
int
outsb
xor
lret
or
dec
add
ficomps
into
loop
xor
jbe
xchg
sbb
out
sahf
pop
xchg
jmp
jb
rclb
sub
adc
push
lock
mov
fldcw
fisubrs
in
cmpsb
push
lcall
push
fcmovu
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
cmpsb
js
pop
or
js
jle
js
loope
fidivrs
jle
sbbb
stos
xchg
mov
test
daa
add
cmp
add
int3
cmpsl
outsl
fiadds
iret
jns
ss
sahf
in
inc
outsb
int
inc
aaa
lcall
outsb
sbb
imul
adc
lds
stos
sub
push
sti
cmpsl
clc
lcall
fmuls
test
pop
call
sbb
xor
jnp
aaa
adc
xchg
pusha
in
bound
mov
mov
cmpl
mov
adc
jge
sub
inc
add
jmp
xchg
bound
pop
and
xchg
hlt
rclb
lret
jg
inc
xchg
nop
xor
daa
mov
jae
out
mov
dec
dec
icebp
add
sbb
loope
jge
sbb
test
inc
sbb
icebp
xchg
lds
jae
ret
jcxz
pop
les
xchg
call
aaa
push
fs
sub
inc
div
lahf
sub
inc
push
mov
scas
test
sub
test
mov
jmp
mov
mov
fisttps
xchg
lcall
outsl
int
sarl
int3
popa
aam
fnstenv
cmpsb
jge
cmp
mov
xchg
inc
nop
shlb
jbe
lea
adc
add
stos
inc
rcrb
icebp
push
sbb
ret
dec
jecxz
sbb
push
mov
out
cmp
push
ljmp
ret
insl
adc
into
arpl
fdivrp
into
adc
sub
cmpsl
xor
jl
in
fimuls
dec
mov
mov
call
mov
cmp
xchg
imul
xchg
not
mov
push
xorb
jmp
ret
push
jecxz
jl
out
jns
and
mov
pop
pop
jnp
aas
addr16
sbb
enter
notb
icebp
and
rolb
and
repz
xlat
cmp
lods
std
add
jns
adc
lret
scas
in
ret
adc
mov
or
mul
in
loopne
sbb
rol
in
mov
rclb
xchg
loopne
jp
pop
aas
sbb
mov
outsb
scas
dec
mov
sbb
cli
jl
mov
lahf
pushl
scas
pop
adc
subb
pop
sub
dec
jne
lds
enter
add
ror
int
rcr
aad
bound
stos
test
rorb
jle
js
xchg
dec
jno
lcall
cmpsb
std
or
xchg
push
repz
jle
inc
or
cmp
xchg
dec
xchg
jecxz
and
xor
mov
xor
cli
mov
rol
pushf
and
push
adcl
in
cld
das
xchg
or
xchg
sbb
insb
mov
loop
xor
aam
pusha
leave
push
dec
inc
addb
sbb
mov
xchg
fadds
int
mov
xchg
xchg
rcll
mov
js
sbb
or
lret
mov
xor
insb
mov
movsl
xchg
sbb
fistl
lea
jge
and
aas
xchg
sbbb
mov
call
xchg
pusha
pop
sub
es
dec
dec
nop
sub
cmp
cld
cmc
sti
pop
in
out
xchg
aad
inc
hlt
outsl
cltd
xor
test
lds
dec
adc
pushf
stc
push
pop
pop
mov
ror
mov
pushf
xchg
sti
lods
xchg
add
mov
mov
jne
dec
and
and
int3
push
mov
test
xchg
xor
xor
pop
pop
adc
outsl
loope
mov
cmp
inc
xor
es
sbb
dec
cmp
xor
jo
jnp
std
jne
jle
ljmp
fbld
jb
aas
sbb
jle
and
data16
outsb
xchg
jnp
lea
mov
jecxz
std
scas
or
xchg
aaa
pop
popf
xor
bound
inc
lods
popa
and
mov
lcall
push
in
inc
xchg
ss
cmp
or
mov
jg
inc
push
xor
bound
inc
stc
sti
xor
and
xor
push
lock
mov
int
subb
mov
es
xchg
ret
mov
pop
xchg
data16
xchg
lds
push
jne
add
movsb
cmpsl
sahf
movsl
pop
movsb
insl
push
sub
push
mov
pusha
mov
and
stc
add
cmp
test
pop
inc
data16
das
mov
fcomps
loopne
sahf
sti
xlat
test
fwait
xchg
fs
aam
mov
ret
xchg
cmpsb
jg
push
rorl
fs
ljmp
sbb
xchg
or
and
repz
cmpsb
or
xlat
pop
cli
and
iret
fcmove
mov
icebp
cmp
iret
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
cmpsb
ret
or
js
jle
js
xor
popa
push
imul
lods
adc
mov
out
out
push
cmp
cmp
out
sub
movsb
xchg
decb
mov
and
lahf
movsl
aam
push
sub
add
mov
adc
mov
cmp
lcall
dec
cmpsl
fs
jp
lods
loopne
movsb
jbe
adc
jecxz
in
cmp
pop
sub
xchg
fs
addl
push
ja
fidivrl
sbb
mov
lahf
push
into
jns
fwait
dec
cmp
imul
outsl
and
dec
add
mov
cmp
push
ret
aas
loop
insl
adc
insl
adc
pushf
ja
sbb
jl
sub
fisubl
insl
ss
push
ds
or
push
dec
dec
xor
hlt
lods
cltd
fcmovu
or
or
sub
mov
dec
mov
fwait
xchg
jb
iret
xlat
imul
push
jp
or
imull
dec
rcrl
ljmp
adc
xor
repnz
jb
xor
adc
fldenv
shl
repnz
lock
push
push
cmpsb
stos
lock
or
ret
adc
mov
fwait
cmp
icebp
shl
movsl
leave
into
sub
lret
cmc
fbstp
dec
mov
dec
out
sub
cmp
add
sbb
xlat
pusha
mov
jae
orb
jnp
popf
or
dec
mov
push
rorl
notl
outsb
mov
and
cmp
subl
xchg
cmc
pop
nop
aas
rolb
js
enter
out
shlb
xchg
pop
sub
jb
sub
in
cmpsl
fwait
ret
and
lds
lea
mov
xchg
fsubr
pop
sahf
std
repnz
xchg
loopne
icebp
out
test
aas
jae
leave
inc
orb
mov
push
and
mov
add
imul
les
pop
mov
out
fisubrl
cwtl
push
add
xchg
sub
into
test
sub
cmp
pushf
jae
mov
ds
aam
jecxz
dec
mov
movsb
ss
fdivrp
fwait
sbb
mov
pop
push
ljmp
pop
gs
inc
mov
mov
jmp
ror
ror
ror
test
xchg
push
xchg
push
js
jle
js
xchg
dec
mov
mov
mov
in
fwait
mov
fcmovu
out
pop
push
mov
fsub
lcall
lret
roll
das
test
jb
in
std
rolb
sbb
xor
in
pop
jae
mov
pop
or
out
in
and
sbb
loopne
inc
jle
cmpsl
mov
sbb
ficoml
sub
xchg
test
xchg
pop
fcoml
inc
pop
xchg
stos
das
mov
jp
test
cmpsl
xchg
pop
iret
lds
jo
lret
scas
push
std
cld
shrb
pop
ja
and
push
iret
inc
push
sbb
std
mov
sahf
sbb
inc
pop
pop
adc
inc
mov
dec
pushf
sbb
xchg
adc
ja
sarl
cli
cld
stos
lds
inc
in
cmp
inc
sbb
mov
out
ja
adc
jecxz
push
out
mov
shll
and
inc
orb
fucomp
push
push
enter
mov
mov
or
mov
cmpb
or
scas
dec
dec
push
cmc
test
cmp
mov
and
int
sub
lret
jb
push
adc
add
xchg
sbb
jae
testl
dec
jl
or
pop
stc
gs
gs
ja
pop
stc
ds
outsl
int3
clc
in
mov
pop
pop
mov
mov
js
push
inc
push
fdivs
dec
enter
sbb
test
jnp
inc
rcr
push
jle
jmp
imul
in
mov
cmpsl
pop
xor
fucomip
sbb
int3
adc
shrl
jp
call
xor
sbb
imul
jmp
fists
jbe
xchg
cwtl
pop
mov
repz
pop
insl
lods
cltd
pop
sbb
cltd
jle
dec
ret
ret
out
cs
fisubrs
jge
adcl
and
sub
inc
pop
mov
ja
push
aas
fscale
decl
mov
insb
mov
fnstcw
in
lods
pop
sbb
xor
data16
cmpsb
lcall
les
fdivs
sub
andl
sbb
das
fs
and
xchg
cmp
jp
gs
and
orl
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
popa
fbstp
sbb
jle
js
inc
testb
dec
mov
andb
div
xlat
jnp
and
jno
cmp
cmp
ss
sti
idivl
pop
push
or
add
or
add
rcrb
dec
stos
mov
sahf
cmp
lret
or
pop
jl
push
std
out
icebp
lea
pop
mov
push
push
mov
xchg
cmp
push
xchg
and
inc
roll
mov
mov
push
mov
mov
outsb
push
lods
xchg
orl
sub
lock
arpl
popf
shll
inc
pop
mov
lret
pop
subl
fwait
pushf
add
push
adc
es
push
sahf
inc
adc
inc
jge
xlat
mov
and
cwtl
sub
jo
add
ss
jno
jp
test
jecxz
xchg
inc
mov
roll
mov
lods
pop
loopne
mov
clc
mov
rcrl
pop
mov
mov
pushf
push
iret
jg
cmp
clc
mov
cld
call
lahf
data16
imul
add
pop
iret
sub
pop
testl
test
jo
xchg
cld
lock
add
call
test
sub
push
data16
aam
push
xor
xor
and
lods
dec
sub
dec
test
cmp
sub
push
push
or
clc
jmp
cmp
pop
push
jo
add
ljmp
push
mov
cltd
ds
nop
loope
jle
cmp
cmpsb
mov
aaa
xlat
loopne
push
dec
or
fstp
xor
call
popa
and
push
pop
int
and
test
adc
mov
mov
xchg
or
xchg
mov
rcrb
dec
inc
les
xor
jmp
xchg
imul
popf
pushf
rcrb
fwait
das
cmpsb
repnz
cmpb
and
mov
sbb
fwait
or
jnp
xchg
xorl
dec
cltd
nop
lahf
pop
mov
stc
nop
push
movb
sbb
notl
stos
mov
inc
jmp
xchg
pop
cmp
sahf
cmpsb
pushf
test
mov
adc
mov
sbb
cmp
loopne
pop
and
lret
pop
iret
fisttpl
mov
or
testl
mov
push
pusha
and
pop
cmp
ret
inc
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
adc
adc
leave
cmpsl
fs
cmpsb
jmp
stc
mov
jecxz
es
mov
dec
icebp
jnp
lock
aad
jecxz
popf
call
adc
dec
imul
jae
cmp
push
and
icebp
test
and
call
lds
in
or
sti
mov
lds
push
ret
or
inc
fwait
ljmp
gs
sahf
lahf
lods
push
lods
popa
mov
lret
push
in
lds
mov
daa
fsubrl
outsb
scas
insl
push
out
stos
jne
push
outsb
jb
aaa
movsl
aad
mov
cmp
iret
add
cltd
iret
test
shll
xor
in
xchg
aaa
jns
adc
add
faddl
cmpsb
js
cmpsb
mov
push
mov
and
push
pushf
jl
xchg
mov
jle
call
fwait
lahf
xchg
inc
iret
xor
out
lods
fwait
push
std
push
mov
xor
in
mov
adc
sub
and
lods
mov
mov
lds
xchg
aad
popa
rolb
andb
dec
pop
flds
mov
jno
xor
inc
mov
outsl
cmp
cmpsl
xor
inc
insb
or
lcall
sbb
adc
mov
xchg
add
test
cld
cmp
adc
jmp
arpl
mov
sahf
fisttpll
adcl
sbbl
push
pop
adcb
and
sub
or
test
adc
mov
ret
aam
adc
push
mov
out
daa
shr
notl
sbb
sbb
loop
adc
or
lods
loop
inc
mov
inc
int3
aaa
nop
cmp
sub
mov
ljmp
incb
push
push
add
sbb
sahf
push
loope
andb
movsb
js
and
stos
sub
dec
mov
fdivr
inc
mov
jbe
out
loope
cld
ret
lret
fsubr
loope
std
push
je
dec
and
loop
push
stos
aaa
js
pop
mov
sbb
jbe
js
enter
jmp
or
lret
push
pusha
sub
adc
and
dec
push
dec
loopne
fidivs
sahf
lods
enter
inc
nop
loopne
sbb
sbb
mov
cmpsb
es
or
jns
scas
fimull
add
add
rol
ror
mov
ret
out
mov
jle
js
dec
push
jmp
lahf
jae
ret
dec
out
dec
push
push
cmp
mov
es
ss
adc
fdivrs
loope
sbb
or
adc
cmp
adc
inc
fs
jg
icebp
push
sub
cmpl
sbb
idivl
mov
dec
mov
jmp
jbe
push
pop
adc
sub
cmpsl
les
insb
dec
lods
loopne
jl
sub
fisubs
leave
xorl
push
and
frstor
ret
mov
aas
out
jmp
adc
pop
out
imul
std
pop
ficompl
ret
mov
fwait
clc
sti
in
jne
jle
jle
mov
lods
push
stos
jp
inc
popa
push
push
aad
inc
mov
jb
cmpsb
cld
cmp
scas
add
dec
iret
xchg
xor
int3
rcll
shlb
test
stos
inc
or
and
test
push
stc
mov
leave
inc
and
pop
add
push
push
jl
mov
adc
lcall
push
das
inc
xchg
jne
gs
js
cmc
jg
push
or
in
mov
sbb
mov
rcll
pop
mov
dec
jge
in
in
mov
repz
orl
call
pop
push
lods
lahf
sahf
outsb
dec
xchg
bound
mov
pop
andb
in
imul
stos
loopne
repz
jne
jae
inc
jl
repnz
jge
ficomps
jne
sub
sub
jl
cmp
inc
outsb
divl
cli
cmp
imul
or
mov
insl
pusha
push
repnz
repnz
pop
pushf
js
pop
in
mov
in
fcoml
jge
xor
mov
or
push
ljmp
mov
repz
adcb
lods
out
filds
testb
pop
ja
pop
push
xchg
dec
cmpb
jp
popa
std
pop
mov
lods
pusha
xchg
xchg
cs
pop
cmpsl
movsl
and
mov
sti
and
js
cmpsb
paddd
cltd
push
pop
cmp
xor
ds
je
std
and
jg
push
ss
adc
out
shll
mov
jbe
sbb
pop
mov
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
dec
ret
pop
adc
and
jle
js
fwait
loop
lret
js
or
mov
orl
das
jecxz
std
mov
sbb
mov
or
lods
mov
int3
ret
ret
jnp
sbb
fstps
sbb
bound
fisttpl
shrl
cmp
jge
les
inc
pop
loopne
mov
and
out
xor
xor
inc
daa
mov
jmp
sbb
int3
lret
js
in
mov
xchg
into
xchg
mov
xlat
fwait
pop
mov
jle
jb
out
call
xchg
scas
sbb
icebp
xlat
jb
mov
sbb
jo
sub
sub
push
cmp
sahf
repnz
add
nop
mov
xor
xchg
in
push
clc
loope
jae
or
pop
xchg
loop
into
add
movsl
shrb
sub
lods
mov
int
sub
in
jno
popl
and
in
pushf
nop
xlat
push
pushf
jg
mov
mov
push
lods
cmp
js
pop
mov
xchg
in
cmp
lret
xchg
push
cmpsl
jg
cmpb
cmpsb
xor
adc
insl
popl
xor
insl
loop
pop
rcr
mov
mov
push
data16
xchg
mov
imul
lods
mov
fsubrl
test
cli
cmpsb
mov
std
lods
sub
xchg
inc
dec
xchg
daa
add
sub
in
sbb
scas
pop
mov
push
pop
jne
jle
decl
mov
les
mov
and
push
test
int
sbb
les
sbb
and
mov
xor
das
lret
mov
cld
jb
shlb
arpl
jns
lds
dec
lods
pusha
dec
jae
imul
xor
push
mov
js
or
lret
test
xor
je
cmc
pusha
add
rep
push
in
xchg
stc
es
loop
sbb
aas
cltd
loope
aas
push
mov
jecxz
iret
xor
pop
cmp
push
pop
daa
rcr
add
cli
shll
push
les
sbb
repz
jne
cs
iret
insb
push
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
jo
mov
and
jle
js
mov
popa
xor
jo
pop
push
dec
sub
push
cld
xor
clc
dec
sbb
idivl
rclb
sub
push
sbb
ret
aaa
popa
jmp
cmp
and
or
push
jbe
leave
sub
test
mov
inc
mov
inc
and
ret
leave
inc
mov
and
cmpsl
push
push
xor
sbb
xchg
and
push
lret
repz
enter
mov
push
add
lret
cmp
rcr
cli
repz
pop
mov
imul
orb
aad
call
aad
cwtl
dec
sbb
out
mov
xchg
xchg
mov
test
mov
inc
push
enter
mov
push
pop
ljmp
ljmp
hlt
mov
imul
daa
cwtl
mov
pop
add
clc
pop
add
pop
dec
xchg
in
or
shlb
and
rclb
lcall
pop
sbb
pop
push
loope
mov
inc
add
push
flds
mov
rclb
mov
sbb
call
push
adc
push
mov
add
mov
stos
sbb
push
popa
xor
lcall
add
sbb
test
lds
adc
sub
addr16
inc
adc
mov
mov
xor
loopne
out
enter
aas
dec
sub
popa
and
stc
notl
cmc
sbb
gs
jo
je
sub
and
ret
xchg
xchg
sub
jb
arpl
test
lods
mov
mov
mov
test
sbb
adc
dec
or
ror
repnz
jg
scas
cwtl
mov
cmp
cmpsl
sub
std
aaa
xor
dec
push
sbb
and
les
cmp
jle
inc
cmp
lods
cmp
mov
fld
dec
xchg
stos
test
push
sahf
add
xor
xor
fs
dec
xor
outsl
add
mov
mov
stos
mov
pop
clc
jno
adc
imul
jbe
pop
cld
xor
adc
in
scas
mov
mov
jne
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
jle
dec
sahf
es
jle
js
imul
xchg
cmpsl
lret
cmp
mov
cmpsb
inc
and
mov
and
unpcklps
dec
xchg
mov
jl
cs
push
insl
adc
dec
dec
dec
stos
lcall
adc
mov
stos
stc
sbb
jp
fcoml
push
das
popa
push
sub
push
inc
cmp
out
adc
jo
pop
or
xchg
add
js
hlt
out
pop
xchg
push
leave
loop
mov
daa
or
cmp
mov
mov
mov
xchg
sbb
mov
dec
insb
stos
inc
dec
inc
pop
cmpsl
and
bnd
cli
sub
stos
out
arpl
ficomps
pop
dec
push
sub
mov
dec
enter
fcomps
lock
orl
jl
xor
pop
mov
xor
push
pop
or
push
pop
mov
ret
xlat
push
idivl
outsl
rclb
and
pop
sbb
mov
xor
jns
imul
test
dec
mov
iret
dec
push
jb
outsb
imul
xor
push
pop
mov
and
ljmp
jmp
outsb
fists
xor
push
imul
popf
cmpsl
push
lock
sbb
jge
inc
mov
shll
aad
sub
sbb
jle
mov
int
fidivrl
rcr
scas
sub
insl
lcall
mov
pop
jne
add
jbe
out
push
pop
je
mov
loop
out
into
cmc
les
leave
mov
jo
in
cmpsb
add
fdiv
stos
or
mov
push
add
jl
les
jns
mov
and
popf
cmpsb
push
outsb
std
pushf
addb
aaa
movsl
iret
add
fists
cmp
mov
jne
jb
notl
pop
sub
mov
inc
and
push
or
movsl
mov
into
jge
jecxz
cmc
xor
lret
pop
jge
xchg
jne
dec
loopne
std
adc
data16
in
mov
ja
cld
xlat
jnp
shll
lock
dec
mov
fidivrl
std
aad
jg
mov
xchg
loop
xchg
ss
cmc
pop
loope
jp
cmp
and
cld
aam
jmp
rcrl
rorl
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
and
lods
dec
sbb
js
dec
jle
js
push
cwtl
loopne
aad
dec
gs
test
inc
jg
sub
pop
sar
sbb
mov
sbb
repz
fmull
ret
ret
loopne
popa
iret
in
adc
pop
into
push
xchg
imul
ljmp
enter
mov
adcl
psllw
aam
loopne
or
aas
sub
call
cmpb
or
cmp
add
hlt
lock
leave
adc
bound
insb
dec
mov
je
stos
test
push
push
pushf
scas
insb
adc
popa
int3
in
mov
cmp
mov
lret
or
aad
aad
fdivs
mov
or
data16
push
fcmovne
in
xchg
loop
cmp
push
mov
inc
jno
sub
sahf
std
shrl
es
int3
aam
or
ja
ret
inc
mov
jbe
pop
fsubs
cmp
sbb
lods
clc
mov
pop
xor
ret
xlat
data16
mov
je
or
cs
add
mov
pop
inc
mov
fstps
rcll
sub
int3
mov
add
xchg
sub
add
pop
cmp
addb
ret
insb
mov
imul
cwtl
push
shrb
arpl
adc
pop
roll
movsl
add
xor
add
sbb
sbb
add
jo
mov
mov
cld
lcall
ljmp
pop
push
jo
in
lcall
lods
jl
xchg
iret
inc
mov
sti
mov
cmp
dec
xorl
mov
xchg
adc
mov
mov
xchg
and
loop
popf
jmp
sbb
hlt
sbb
adcb
ljmp
dec
mov
lods
dec
addr16
in
mov
insl
adc
in
xor
adc
dec
into
push
jno
movsl
inc
js
out
test
not
push
in
out
adc
pop
ret
in
lret
xchg
in
aam
xchg
adc
in
pop
dec
mov
fadd
push
iret
adc
aad
fnstenv
adc
mov
push
cmc
jnp
or
iret
sbb
out
pusha
inc
lret
sub
scas
lahf
push
lods
shll
add
shlb
test
xchg
repnz
inc
cmp
mov
sbb
add
rcr
mov
push
rcll
outsl
lods
les
arpl
xchg
mov
pushf
sub
mov
cmc
movb
leave
aad
pop
loope
clc
cmp
rol
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
pop
cmp
js
dec
jle
js
shlb
adc
test
das
inc
mov
jp
das
mov
jge
dec
cmp
push
push
mov
jns
cmc
lea
sub
mov
inc
add
jmp
test
mov
jnp
aaa
insl
mov
xchg
movb
mov
in
test
add
test
int
sub
xchg
xchg
popa
iret
sub
xor
daa
xchg
adc
addr16
dec
inc
addr16
and
inc
mov
dec
or
fimull
outsb
ds
inc
inc
jge
cmp
and
out
add
mov
sbb
dec
pop
pop
xchg
es
push
lds
ret
push
jnp
in
shr
es
ja
int
jae
bound
push
or
frstor
fildll
jge
mov
sub
das
and
and
inc
jl
jle
adc
sbb
dec
push
test
pop
xor
icebp
int3
inc
push
imul
mov
in
loopne
inc
or
ss
js
out
int
mov
imul
sub
in
fisttpll
aad
jb
dec
push
mov
scas
cmc
and
mov
sbb
stos
xor
cwtl
push
jg
jl
ljmp
mov
subb
xchg
push
fs
adc
psrad
hlt
cmp
ficompl
inc
jo
mov
mov
cs
sbb
jge
xchg
test
push
inc
cwtl
sub
jg
les
xchg
cltd
in
outsb
fs
add
pop
dec
xchg
jns
cmc
xlat
jmp
imul
fcom
fbld
sti
out
aam
inc
ret
scas
scas
out
ja,pn
pushf
mov
andb
mov
mov
scas
decl
inc
mov
scas
outsb
daa
pop
testl
xchg
and
ret
and
pop
lahf
jmp
jnp
stc
sbb
mov
mov
push
sbb
fisubrl
das
adc
mov
sub
lods
outsb
inc
aas
mov
push
stc
in
cmp
stos
inc
inc
xchg
jo
push
fisubrs
adc
out
pop
dec
jl
lock
je
xor
test
or
icebp
jg
sub
mov
jns
push
or
lods
xchg
push
ficoml
sub
push
mov
sbb
adc
and
sbb
iret
jecxz
mov
sti
push
dec
sbb
jae
xchg
push
mov
cmpsl
mov
mov
add
sbb
scas
test
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
and
and
dec
jle
js
or
jp
fstpt
cmpsb
int3
xchg
mov
jmp
pcmpeqw
mov
into
es
push
sub
aaa
iret
shlb
cmp
pop
jmp
sarw
add
push
lret
push
mov
or
shrb
cltd
or
lds
imul
and
pop
dec
mov
mov
sahf
dec
fs
scas
cld
mov
sti
push
cmpsb
cmp
out
shl
pop
pusha
xor
cmp
sbb
jnp
int3
push
ret
mov
arpl
sbb
movsl
loopne
cmp
lahf
jp
testl
push
cmp
or
cmp
xchg
cwtl
cmp
mov
jne
push
lea
lret
cmp
mov
cltd
clc
or
mov
out
insb
fdivl
fdivrp
out
jg
cmp
sbb
inc
aam
sahf
xor
inc
cli
in
pop
imul
les
sub
pop
popa
jle
cltd
sub
aaa
ror
sub
xchg
int
jb
pop
push
mov
test
stos
shll
mov
aaa
mov
cmp
addr16
push
incb
aas
in
dec
inc
mov
pusha
pop
mov
pop
into
mov
xchg
sub
push
add
decl
bound
lcall
dec
cmpsl
jmp
jae
outsl
cmp
mov
movsl
rsm
push
pop
jb
jno
sub
insb
jne
mov
dec
test
jne
mov
out
mov
jno
sbb
jne
pop
cmp
push
mov
xchg
and
and
cmp
arpl
mov
adc
gs
ljmp
mov
sub
mov
mov
push
int3
mov
add
insb
es
sahf
push
xchg
cmpsb
int3
test
mov
lods
ret
aad
or
rol
pop
sub
popa
jns
add
xor
hlt
mov
pop
push
add
pop
mov
pop
lcall
mov
imul
popf
rcrl
inc
pop
scas
pop
addr16
std
addl
in
mov
gs
in
test
daa
cmovno
sbb
xchg
and
cld
mov
cli
fmul
mov
xor
imul
add
out
adc
mov
jno
out
cltd
sub
daa
xchg
lret
mov
sbb
adcb
xchg
dec
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
and
test
jle
js
pop
inc
add
add
inc
ljmp
in
test
mov
pop
lock
mov
mov
addr16
push
int3
cli
decl
popa
test
xor
and
adc
jne
inc
lds
sub
movaps
mov
cmc
sarb
adc
pop
inc
mov
leave
jl
mov
int3
mov
enter
mov
mov
or
dec
lock
inc
jmp
or
dec
cmpsb
nop
movsb
test
test
cwtl
xlat
push
dec
sbb
fisubrl
gs
cmp
test
jbe
push
xor
lea
inc
pop
out
repnz
ss
sbb
xchg
fsubrs
bound
gs
xchg
dec
test
punpckhbw
jno
adc
stc
and
xchg
pop
in
push
sub
push
or
mov
fldl
hlt
icebp
imul
jno
dec
ficoml
adc
mov
test
lcall
dec
xor
inc
push
xor
add
push
movsl
sub
stc
call
sub
mov
dec
pop
push
leave
cmpsl
jno
cmpl
mov
cmp
test
add
movsb
cli
sti
adc
cmp
into
iret
or
js
repnz
jle
jmp
and
sbbb
stos
pop
push
bound
cmp
cltd
mov
fsubs
inc
push
add
sahf
sbbl
int
jae
pushf
ror
dec
gs
mov
push
pop
adcl
daa
and
push
sbb
repnz
xchg
cmpsb
loop
jnp
cwtl
ljmp
sub
and
adc
sub
xchg
and
fwait
sarl
fiaddl
jb
dec
dec
pop
fisttpl
inc
mov
fcomps
inc
stc
mov
mov
push
pop
jge
int
add
int3
cmpsb
lods
pop
addr16
fiaddl
xchg
jo
pop
or
inc
jbe
inc
sbb
fld
movsl
mov
xor
inc
mov
inc
lcall
sub
xchg
sub
mov
std
in
loop
xchg
lea
xor
and
mov
scas
repnz
sbb
in
sbb
xor
fisubrs
pop
jbe
push
inc
xor
xchg
popa
dec
fwait
sub
adc
sub
xchg
aad
dec
adc
cmpsb
jmp
mov
scas
jo
roll
add
inc
push
jg
sti
mov
test
cs
sbb
inc
jnp
in
imul
jns
mov
pop
cltd
nop
push
call
fidivrl
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
add
dec
jle
js
sub
push
lock
call
jmp
or
inc
adc
inc
shlb
cmp
jo
aad
pushf
or
arpl
and
jae
pop
add
nop
daa
or
pop
mov
xor
aam
mov
aas
mov
call
jmp
les
fmul
and
or
lods
bound
xor
test
sbb
ret
cmpsl
int
push
dec
sub
popl
dec
sub
pop
xchg
jmp
es
ja
fs
jo
movsb
bound
ret
lcall
sbb
cmp
mov
lret
lret
push
lock
adc
mov
push
add
sti
jp
gs
dec
sbb
push
mov
add
jmp
or
add
sub
pop
shll
ret
fstps
jmp
popa
push
pop
lret
jnp
jge
dec
push
xchg
xchg
stos
xchg
lahf
pop
in
jge
fs
test
inc
lods
jno
xchg
fbstp
cmp
xor
pop
xchg
mov
jbe
mov
dec
lret
lods
dec
mov
xorl
xchg
popa
xor
mov
add
mov
dec
es
ret
mov
loopne
out
popf
push
pop
mov
adc
jmp
dec
push
lret
int3
es
xor
and
sbb
stc
pop
lret
sti
sbb
test
ds
xor
bound
adc
cmpsb
fsubrl
or
mov
adc
je
stos
or
mov
fcompl
fcompl
scas
inc
sbb
pop
in
sbb
push
xor
nop
mov
test
je
ret
push
lcall
push
mov
inc
dec
int
inc
je
jp
xor
ds
cltd
xchg
imul
xorl
arpl
out
call
cmc
jne,pt
in
add
mov
adc
jecxz
and
rep
xchg
adc
scas
fcomps
dec
lods
pop
inc
in
mov
mov
xorb
xchg
fstl
sahf
mov
push
sub
popf
or
int
movsb
mov
push
aas
mov
xchg
popf
shr
ss
mov
mov
mov
mov
jno
add
mov
pop
sahf
loope
mov
or
sbb
inc
in
pop
add
jne
cltd
jecxz
insb
ret
mov
dec
or
mov
aaa
ss
stc
aad
jg
sub
dec
inc
daa
or
gs
mov
rol
mov
sar
mov
jmp
int
rol
ror
aad
inc
jecxz
fcoml
sti
hlt
popa
cmp
jle
js
jae
cmp
popf
mov
shlb
pop
lret
dec
mov
mov
cmp
loope
cmp
outsb
and
aas
dec
addr16
mov
insl
int3
in
mov
pop
dec
or
mov
scas
push
fs
std
inc
int3
push
test
movsl
mov
sub
pop
adc
mov
dec
je
aad
push
inc
dec
mov
insb
ss
push
and
adc
lea
lahf
jmp
mov
mov
rcrb
pop
and
pushf
cmp
ret
sbb
sbb
andb
xchg
popa
mov
mov
pop
movsl
fisttpll
sub
pop
dec
loop
push
sub
mov
pushf
sbb
adcb
lret
add
das
orb
addr16
push
push
jmp
mov
sti
andps
mov
test
or
gs
into
xchg
inc
ja
fimuls
into
ljmp
inc
frstor
jl
dec
push
bound
out
clc
push
fdivs
fnstsw
lahf
xor
std
sub
lods
xor
mov
lea
fnstsw
mov
test
pushf
mov
lods
or
mov
inc
cmp
js
iret
jb
stos
ss
clc
mov
mov
mov
jnp
mov
xchg
sahf
fidivrl
adc
jg
aas
mov
inc
test
mov
mov
xor
pushf
ret
ret
lock
aam
cmp
test
add
out
jg
je
loop
pushf
repnz
sbb
lcall
sub
in
shlb
jo
ljmp
lock
test
mov
inc
negl
fcom
rorb
nop
add
aam
xor
mov
adc
fdiv
dec
cmp
orb
mov
pop
shl
icebp
lods
cs
arpl
xor
in
push
mov
psubsw
imul
rolb
dec
pop
stos
add
imul
xor
and
fcoms
or
stc
mov
or
push
jg
xchg
andb
mov
insl
or
iret
cmc
inc
inc
and
bound
push
bound
test
mov
fadds
cwtl
insb
xchg
imul
push
xor
icebp
call
mov
adc
bsr
into
jmp
les
leave
popa
aad
outsb
or
cmpsl
insb
movsb
fmuls
call
stos
jns
and
cld
stos
jmp
xor
xor
cld
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
call
cmp
dec
jle
js
lea
mov
mov
lods
dec
mov
test
fdivrs
sahf
cs
pop
outsb
stos
int3
pop
or
int3
and
mov
xchg
loopne
shl
mov
mov
into
call
xchg
ljmp
imul
pop
repnz
push
addr16
cmp
cwtl
mov
movsl
loope
cmc
sub
subb
inc
pop
lcall
and
out
pusha
add
add
adc
sahf
in
call
loop
dec
mov
mov
int3
jl
out
xor
dec
test
cltd
addr16
pusha
add
adc
mov
clc
fs
or
push
fiadds
rcrl
sbb
push
in
push
rcrb
cli
add
mov
orb
adc
inc
arpl
fs
and
mov
out
lods
jnp
lods
inc
lret
mov
scas
cmpsl
dec
hlt
push
sbb
pop
dec
sbb
lret
push
ljmp
and
mov
sbb
and
pop
jnp
cltd
pop
jge
pop
mov
jg
adc
orb
repz
mov
sub
jge
inc
in
pop
xchg
and
mov
push
rol
cmp
test
stos
cltd
aad
std
mov
fistl
dec
add
clc
adc
mov
pop
cs
lret
xchg
ss
xchg
lods
subb
aaa
shll
push
push
mov
in
in
add
pusha
mov
movsl
loope
je
jl
loop
pop
fwait
in
data16
jmp
jns
push
mov
enter
cmp
or
aas
sbb
inc
sbb
shrl
outsb
stc
jnp
icebp
lcall
out
mull
push
test
mov
rcll
clc
mov
shr
stos
add
pop
xor
sub
pop
cmp
jp
test
lods
jo
xchg
mov
jnp
nop
inc
dec
adc
mov
or
sub
mov
lcall
mov
loopne
iret
pop
lret
shrl
imul
rcr
pop
mov
insl
jg
rcrb
loop
loopne
cmpsl
xchg
fcomps
ljmp
add
jge
fsubl
sahf
jecxz
adc
sub
ljmp
mov
stos
imul
and
adc
adc
and
rcll
sub
lcall
iret
mov
cli
xchg
sub
jnp
mov
cmp
stos
addr16
mov
out
jo
out
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
cld
ljmp
jle
js
add
fimuls
xor
and
shll
ret
push
jecxz
push
mov
into
clc
push
add
push
rcr
lods
mov
pop
or
add
test
xchg
adc
add
clc
loop
fdiv
adc
cmpsb
mov
add
cmpsb
jl
or
adc
or
clc
in
dec
dec
std
adc
jmp
dec
jno
xchg
jmp
xchg
xlat
ljmp
or
xor
lret
xchg
popa
mov
xor
pop
hlt
and
je
adc
dec
arpl
pop
mov
sbb
mov
cs
push
cmpsb
not
insb
test
out
add
inc
mov
cmp
push
pop
test
div
adc
mov
pop
sub
bound
add
adc
cmpsb
jno
rorl
lea
pop
sub
mov
sti
cmp
mov
movsb
add
xor
stos
mov
push
stos
jp
movsb
in
cmpsb
mov
or
test
cmp
pop
dec
adc
jge
sbb
jnp
pop
add
and
dec
push
push
ficoms
dec
dec
cmc
xchg
dec
data16
cld
mov
mov
or
xchg
mov
xor
xchg
adc
mov
jnp
ret
repz
or
xor
cs
jle
mov
cmpsb
test
xchg
push
seto
push
insl
or
sub
aam
lret
inc
xchg
pop
in
mov
inc
scas
add
rorb
mov
pop
cli
mov
jge
dec
mov
push
dec
cltd
xor
loope
test
jecxz
icebp
mov
pop
data16
mov
sbb
test
xchg
and
mov
cmp
jg
sub
test
pop
rclb
aam
cmp
je
adc
lods
aad
rorb
push
cmp
sbb
inc
mov
mov
in
loop
xlat
test
pop
outsl
sbbl
popa
adc
in
or
int
push
inc
fidivs
out
adc
loop
cmpsb
xlat
xchg
push
adc
xor
push
cmp
es
rcl
js
and
mov
lds
sbb
pop
outsb
dec
es
cwtl
jno
mov
movsb
and
and
int
in
dec
cmp
xorl
xor
aas
inc
inc
dec
nop
push
sarb
fimull
sub
test
push
aaa
sbb
adc
pop
add
pop
in
pop
add
fiaddl
int
xor
mov
mov
jae
xor
xor
jmp
rol
ror
leave
rcr
aaa
mov
add
mov
js
dec
jle
js
and
jnp
pop
jo
sbb
sbb
push
mov
pop
test
test
or
rcll
inc
sbb
xor
mov
pop
imul
cmc
in
push
and
inc
les
sub
mov
dec
std
mov
pop
adc
pop
bound
sub
fsubl
rcll
jecxz
movsl
ret
lret
ja
lds
inc
dec
cmp
rol
dec
inc
or
das
mov
inc
xor
push
out
xchg
xchg
sub
or
cmp
scas
inc
jg
fwait
mov
inc
xor
test
lods
add
push
in
xchg
sbb
test
movsl
dec
fwait
or
es
push
clc
rorl
sub
std
xchg
adc
addr16
pop
sti
push
adc
jne
shrb
or
pop
xchg
movsl
mov
dec
fwait
arpl
scas
xor
cltd
sub
dec
dec
int
push
jbe
adc
sbb
lcall
and
push
mov
pop
pop
push
bound
insb
fsubrl
adc
pop
pop
loope
jo
lahf
inc
and
movb
imul
pop
pop
das
or
and
enter
jb
dec
cli
cwtl
mov
pop
insl
inc
or
movsb
fcmovne
adc
popf
not
scas
xor
mov
fidivs
or
push
push
mov
push
movsb
ja
outsb
lds
mov
cltd
pop
sbb
pop
arpl
jp
fisubs
popa
inc
adc
push
lds
ja
xchg
mov
arpl
mov
and
mov
add
xlat
addb
std
pop
or
lds
jo
mov
mov
xlat
outsl
add
repz
stos
jnp
popa
int
xor
add
pop
pusha
xor
mov
mov
fildl
fsubrs
in
add
push
rorb
mov
push
xchg
aas
xchg
adc
imul
stc
inc
stos
and
repnz
xor
xor
push
movsb
into
or
jge
sbb
aad
mov
cmp
push
inc
pop
xor
cmpsl
jmp
lock
daa
adc
inc
mov
scas
mov
xchg
dec
aam
mov
mov
out
fdivrl
mov
mov
inc
push
call
imul
mov
mov
aas
cmpsb
cmpsl
xchg
jbe
or
repz
ds
xor
add
out
in
sti
and
mov
das
clc
roll
push
lock
andb
pusha
push
push
mov
les
adc
jp
pop
mov
std
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
mov
stc
pop
mov
js
dec
jle
js
sub
xor
in
hlt
or
inc
call
lock
lret
fcmovbe
xor
dec
mov
push
pop
cmpsl
xchg
xchg
leave
mov
inc
sbb
mov
inc
insl
lret
or
mov
pop
push
je
sub
call
dec
aam
xorl
adc
out
xor
push
bnd
cmc
adc
mov
testl
ret
add
leave
or
scas
mov
jne
pop
mov
sbb
je
lret
lods
cld
data16
int3
xor
test
arpl
pushf
mov
mov
ljmp
jne
xchg
xchg
jg
mov
mov
xor
sti
dec
dec
mov
notl
call
repz
or
cmp
rcll
xchg
push
push
shr
xchg
in
sub
xchg
fcmovnu
loop
mull
inc
or
cmp
push
fistpl
stos
pop
or
cmp
pop
je
fcoml
and
pop
fistl
in
repnz
orl
mov
xchg
sbb
push
jg
sub
lcall
pop
mov
jp
aam
repz
lds
stc
cld
push
mov
jecxz
cmp
xchg
inc
xor
sti
addr16
shrl
bound
out
jge
mov
iret
fstps
loop
dec
pop
lret
fcomip
lea
int
testl
mov
ret
movl
push
cs
push
test
daa
test
jg
jg
les
nop
jmp
fiadds
cltd
fsubs
arpl
mov
and
dec
mov
andl
stos
enter
xor
sbb
in
sbb
or
sub
lea
loop
push
mov
rclb
lcall
in
sub
stc
or
jne
dec
lret
mov
xor
repnz
clc
or
stos
test
xchg
test
and
mov
jmp
mov
jle
imul
dec
arpl
dec
ja
lret
cmpsl
scas
mov
loope
sbb
xchg
sub
lds
daa
ja
lahf
mov
loop
jecxz
das
jnp
mov
jnp
xchg
addr16
sub
xor
fwait
lahf
or
je
lock
les
jp
fstpt
rolb
mov
int3
in
cmp
mov
aaa
leave
lahf
cli
jns
div
mov
jmp
aas
ret
rol
sbbl
jb
js
dec
jle
js
xchg
adc
outsl
out
push
repz
shrb
mov
sbb
aad
hlt
mov
add
cmp
xor
fs
leave
sarl
pop
lods
cmpsl
imul
pop
rclb
out
push
add
sbb
add
lret
sub
mov
hlt
jae
jnp
push
ret
test
and
leave
pushf
mov
loop
mov
addr16
xor
inc
stos
lds
insl
push
popf
loop
int
pop
xlat
fcom
add
push
push
inc
jns
sbb
xchg
cmc
or
addr16
icebp
xchg
adc
aad
stos
les
bound
ljmp
fiadds
test
xchg
push
inc
or
outsb
xchg
fcmovnu
jmp
test
pushf
mov
jp
stos
push
jp
clc
adc
xor
adc
out
add
cmp
adc
addr16
jl
xor
popl
aaa
inc
das
adc
je
bound
inc
inc
sti
cltd
popa
jae
xchg
clc
jl
fs
test
mov
or
outsl
cmpsl
add
mov
paddw
nop
mov
sub
aas
fwait
addr16
sub
mov
push
mov
je
jecxz
jns
mov
mov
push
loope
adc
xchg
xor
bound
mov
or
xchg
out
jp
inc
sub
sbb
je
mov
jno
xor
jne
aad
gs
adc
cltd
arpl
ret
pop
es
insb
pop
enter
ja
cmc
call
aad
mov
cld
mov
sarb
in
inc
mov
sub
out
test
cmpsb
xor
daa
cli
clc
lcall
mov
fs
push
mov
scas
or
ljmp
xor
cmp
pusha
push
pop
adc
lret
jns
cmp
sbb
push
scas
das
jb
cli
xchg
xchg
mov
imul
lea
popa
mov
push
aaa
aad
js
fcmovnbe
sub
dec
mov
mov
pop
rcr
outsl
sub
sub
idivl
out
lea
sbb
mov
je
mov
xor
or
scas
push
mov
popf
in
stc
add
daa
dec
xchg
movsl
mov
inc
loop
ror
das
mov
popa
sbb
aam
mov
push
push
js
imul
push
sbb
sti
dec
fisubrs
ja
or
inc
out
add
jo
inc
jmp
outsb
push
mov
pop
loopne
mov
jnp
int3
popf
mov
cmp
fcomp
or
jne
mov
enter
sbb
jmp
ds
cmp
mov
sti
idivl
xor
js
dec
jle
js
jb
push
out
ds
sbb
loop
fisubrl
sahf
add
pusha
fists
cs
rcll
fisttps
inc
lret
cltd
adc
xor
aam
push
cmp
add
test
loope
mov
xchg
dec
outsl
std
fsubrs
popf
mov
loopne
add
lods
mov
in
sub
cs
adc
fdivr
inc
lcall
jno
pop
fdivrs
sub
aas
stos
xchg
mov
xchg
leave
pop
loope
hlt
mov
jmp
xor
insb
jnp
movsl
mov
ss
hlt
test
mov
mov
cmpsb
push
je
imul
sub
dec
in
arpl
xlat
and
rclb
xor
out
dec
shl
xchg
lods
cs
das
dec
sbb
jecxz
cmpb
sub
loope
sub
mov
arpl
insl
mov
inc
rclb
ja
inc
xor
push
sub
out
movsb
hlt
fisubl
and
daa
mov
pop
jp
popa
mov
push
cmpl
iret
cmpsl
lcall
sub
out
xchg
or
gs
into
fdivl
push
pop
lahf
inc
pop
cmc
adc
sbb
std
in
jecxz
sub
movsb
xchg
xchg
cmp
mov
scas
jb
or
and
add
filds
popa
imul
out
xor
and
mov
cltd
lcall
out
insb
mov
or
dec
out
movsl
cmpsl
in
jns
mov
xor
mov
mov
sub
imul
mov
dec
jbe
out
les
jle
sbb
stos
push
xchg
lret
aam
int
in
iret
aas
cmp
sbb
inc
adc
jecxz
sbb
push
xchg
test
idivl
icebp
lock
insb
adc
mov
cmpsl
in
mov
jno
loop
dec
jnp
data16
leave
ja
pop
xor
mov
ficomps
lret
mov
movsl
cli
xor
fnsave
xchg
or
mov
or
test
hlt
mov
adc
repnz
clc
dec
rcll
popa
std
mov
test
xchg
pop
pop
pop
xchg
add
adc
rorb
loope
add
jbe
addr16
sbb
or
inc
cld
inc
inc
xchg
pushf
loope
lods
push
xor
dec
jle
add
xor
mov
mov
test
or
mov
pop
out
int
fistl
mov
mov
add
add
fnstenv
mov
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
iret
fs
add
js
fs
js
in
jns
cmp
jb
les
sub
rorb
adc
dec
jmp
sub
sub
mov
push
and
dec
and
inc
aad
andb
mov
ficompl
int
fistps
lcall
adcl
and
adc
loop
and
cmpsl
addb
add
or
loopne
mov
xchg
add
jle
mov
lods
push
mov
lcall
cmp
aad
pop
mov
les
mov
dec
outsl
sti
add
and
xor
adc
ret
pushf
popa
jb
mov
mov
sub
ljmp
mov
add
test
inc
jge
mov
sbb
jge
jmp
and
loopne
dec
sbb
cmp
das
or
xor
ds
test
out
pop
push
pop
fnstcw
push
pushf
imul
les
iret
sbb
jo
cmp
popf
inc
repnz
shrl
enter
rcl
mov
dec
cmp
test
rorb
add
test
mov
test
push
and
jbe
fmull
out
xchg
jbe
sub
in
mov
sub
mov
aam
pop
addr16
enter
fiadds
cmp
cmp
or
cmp
inc
iret
sub
loop
bound
pop
xchg
popf
daa
add
push
push
fdivl
test
jbe
out
inc
icebp
add
movsb
push
sub
xor
ja
jecxz
clc
js
or
and
lret
mov
jg
aam
shlb
xchg
jg
inc
bound
or
stc
movsb
ljmp
adc
das
push
inc
add
push
idiv
iret
aas
pop
lea
cmp
out
fdivs
ret
rolb
add
hlt
out
scas
xchg
imul
lea
mov
into
lret
sti
push
xor
fs
cmp
cld
inc
test
sbb
adc
repnz
xchg
sbb
add
add
or
push
cwtl
daa
sbb
add
and
xchg
in
or
dec
ds
mov
xor
sub
fldenv
cld
roll
cmpsb
mov
push
pop
inc
dec
movsb
or
dec
pop
mov
jae
stos
test
mov
sbb
push
rcrl
fsubrp
adc
mov
leave
pop
repnz
push
sbbb
insb
jmp
jbe
and
sbb
in
call
xchg
aad
rcrb
sub
in
mov
jne
int3
stos
fsubrs
push
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
push
fdivrl
iret
js
fs
js
jl
ljmp
int3
pushf
ret
das
mov
and
mov
pop
jge
scas
sub
cmp
sbb
cmc
out
sbb
add
lcall
and
arpl
mov
push
fnstcw
xchg
jno
in
push
dec
pop
out
jns
push
push
stc
aas
sub
inc
into
xchg
shlb
add
push
xchg
into
loopne
mov
repnz
jle
jecxz
jne
sbb
sbb
xchg
push
jae
jne
or
push
and
clc
in
cmp
xchg
cmpsl
aas
adc
inc
add
aam
jns
movsl
pop
out
or
xchg
scas
mov
sub
xchg
sub
test
mov
sbb
aaa
into
push
arpl
adc
fbld
or
js
es
pop
push
or
or
or
jb
mov
daa
ficomps
or
mov
dec
jp
push
xor
mov
daa
fnstcw
pop
push
mov
test
pop
fsubr
pop
stc
sub
or
push
adc
cli
add
es
dec
je
in
outsb
movsl
int3
xchg
mov
shll
sbb
decb
jmp
push
test
popa
lahf
jecxz
pop
or
and
xchg
sub
mov
scas
loopne
sahf
in
arpl
mov
add
fidivrl
add
xchg
adc
or
jns
mov
loope
loopne
dec
pop
sahf
push
notb
cmp
mov
js
in
hlt
sub
mov
insb
mov
inc
clc
call
dec
aad
cmp
push
divl
out
mov
mov
jecxz
test
gs
nop
sti
pop
add
dec
clc
std
shlb
mov
das
jge
sbb
cmp
adc
fcmovu
cmp
cmp
fsubrs
jns
add
adc
lods
adc
ret
fcoml
push
inc
loop
push
frstor
dec
fwait
jae,pn
add
sbb
mov
shlb
aad
sbb
dec
lahf
pusha
lock
xchg
rorl
lds
mov
daa
push
sub
ucomiss
push
ret
dec
into
lret
xchg
xchg
outsb
punpckhdq
cmpxchg
in
inc
mov
xchg
addr16
inc
jae
jle
jmp
test
out
push
dec
jbe
cs
imul
inc
cmpl
xchg
jmp
push
out
orb
ds
arpl
mov
iret
inc
jge
or
in
pusha
xchg
pop
inc
aas
inc
roll
aad
call
pop
mov
jne
push
pop
out
out
mov
shll
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
out
in
int3
js
fs
js
add
push
cmp
jne
and
pop
pop
enter
rcll
sti
cld
sub
sbb
xchg
xchg
les
inc
imulb
inc
add
xor
loop
sbb
pop
and
repnz
lahf
and
in
clc
adc
xor
inc
loope
lods
in
cltd
xchg
fimuls
icebp
add
lret
data16
or
popf
jg
inc
popf
mov
push
cmpsl
pop
cmp
scas
fisubrs
ja
loope
xor
popa
es
push
inc
pop
xor
xchg
ljmp
push
cmp
jno
pop
fwait
mov
in
ljmp
fsts
out
jge
inc
jo
repnz
xchg
jae
sbb
call
fsts
hlt
inc
and
jo
mov
and
mov
stc
cmp
jge
sbb
test
test
cltd
jecxz
prefetchnta
popf
xor
es
mov
mov
pushf
push
adc
mov
out
mov
and
orb
insb
lock
es
jg
ret
mov
outsl
sbb
lahf
jb
lds
and
in
pop
jmp
arpl
inc
cmp
pop
fsubs
inc
jge
shrb
xchg
data16
mov
add
mov
outsl
cmp
pop
clc
sbb
int3
xchg
fldl
lds
ss
addr16
or
lds
rol
and
ljmp
pop
xchg
push
movsb
insl
clc
cld
outsl
sahf
lahf
jmp
or
out
jo
stos
push
add
loope
das
jb
hlt
jle
adc
xor
xchg
inc
xchg
sbb
cmp
cmpl
and
mov
pop
fimuls
push
xlat
cmp
lods
test
stc
xchg
mov
push
fadds
pop
xchg
inc
cmpsl
data16
jbe
out
cmpsb
pop
jns
xor
mov
rep
inc
inc
add
lret
pop
out
scas
mov
roll
pop
and
in
jne
in
sub
jns
dec
dec
sub
xchg
cli
mov
adc
repz
ret
adc
xchg
ljmp
rcl
cli
cli
mov
or
push
loop
xchg
in
inc
adc
mov
mov
mov
inc
mov
ret
bound
fldenv
lret
dec
dec
mov
mov
push
pop
and
mov
jne
dec
paddsw
leave
add
and
shrl
stos
jno
in
cmpsl
mov
xlat
add
pop
cmpsl
push
jle
jo
pop
ja
push
sbb
sub
xor
and
xchg
inc
rorl
lret
fcoms
xchg
and
fnstenv
stc
rol
jge
adc
xor
divl
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
adc
lods
sbb
outsl
push
jl
mov
sbb
icebp
hlt
sti
or
push
out
insb
sbb
gs
adc
lret
and
mov
sbb
lahf
dec
mov
iret
push
inc
es
push
xor
arpl
jecxz
loope
mov
or
sarb
jae
cmpsl
sbb
outsb
mov
fcoms
sbb
stos
jne
sub
arpl
int3
or
andb
adc
mov
iret
ret
xor
fucomp
adc
cmpsl
dec
clc
push
add
or
shld
lret
and
inc
loopne
bound
push
or
sub
jge
subl
cs
ljmp
rcll
ds
push
mov
ret
inc
lahf
xor
mov
or
lret
sbb
das
dec
dec
daa
mov
pop
xchg
push
jmp
dec
test
cld
decl
daa
arpl
dec
cmp
sub
lods
fwait
orb
movsb
sahf
idivl
cmp
insl
in
fstpt
nop
xchg
ffree
mov
sub
or
stos
cld
add
addr16
es
ret
aas
ds
and
fcoml
jg
outsl
jae
jg
pop
and
sbb
mov
es
mov
shrl
and
xor
add
inc
and
aam
movsb
fmuls
pop
sub
xchg
ficoml
push
fisubl
pushf
pop
jns
repnz
xchg
lds
cwtl
das
sub
setb
sub
or
insb
stos
or
scas
and
dec
enter
mov
pop
add
inc
dec
ret
in
mov
sub
and
daa
test
push
negb
xchg
cmp
dec
sbb
jb
push
inc
add
shr
lds
mov
dec
mov
and
jl
fwait
iret
and
lods
jnp
mov
cmp
cmp
cmp
dec
out
pop
jp
clc
mov
xchg
xchg
jecxz
popf
inc
pop
jne
cltd
sub
in
sbb
test
pop
dec
fwait
aam
gs
sbb
push
popa
das
cmp
xor
push
les
aaa
aam
xchg
inc
push
test
js
cmp
mov
je
mov
inc
pop
rcrb
enter
cmpsb
or
sbb
test
int
pop
jge
hlt
add
lods
roll
out
xchg
fldenv
data16
xchg
pushl
ds
loope
dec
test
cwtl
pop
loope
and
test
sbb
outsb
inc
sub
mov
pusha
imul
rcr
mov
push
mov
push
mov
ffree
mov
adcb
mov
inc
incl
add
insb
add
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
mov
js
fs
js
mov
fwait
inc
mov
mov
fdiv
lea
ret
aad
push
push
daa
lods
pop
mov
mov
xor
dec
andb
pushf
mov
test
cmpsl
dec
dec
cmp
sbb
pop
lea
cmc
fbstp
fwait
mov
push
pop
mov
sub
xchg
and
adc
xor
jbe
stos
enter
xchg
je
add
lret
adc
and
jne
inc
fs
in
xchg
in
inc
jb
and
aad
fildll
cltd
or
xchg
mov
cmp
in
sarl
movsb
pop
outsb
fildll
add
int
lds
and
fstpl
pop
popa
js
fs
jge
addr16
xor
imul
sbb
fiadds
jmp
mov
rclb
and
pop
mov
fcmovb
inc
pop
jb
cmc
pushl
je
inc
fidivrl
push
ret
testb
out
fwait
je
pop
scas
inc
call
fsubrs
sub
incb
movsb
imul
sbb
and
xchg
subb
adc
dec
es
aaa
inc
out
or
pop
mov
aad
into
repnz
or
imul
addb
cmpsl
loop
mov
scas
push
jae
pop
push
xlat
mov
movsb
subl
xchg
push
or
out
or
dec
sahf
clc
sub
bound
inc
pop
push
inc
imul
cld
jg
test
ret
mov
jp
ret
cltd
sarb
dec
cmp
jno
push
sub
aad
scas
popa
or
push
leavew
fs
test
sub
sub
outsb
and
shr
daa
scas
gs
negl
lods
fldl
xchg
sbb
jge
cmc
pop
ljmp
pop
push
xor
xchg
inc
repnz
adc
cwtl
push
js
dec
arpl
arpl
pop
dec
sub
jb
cmp
test
inc
aaa
or
sub
push
or
mov
loopne
es
xor
loope
aaa
mov
stos
mov
mov
xor
sbb
mov
test
loope
sbb
mov
inc
imul
cmp
mov
cmp
add
lods
icebp
ds
xchg
dec
inc
sbb
inc
ss
das
or
xchg
jle
jb
loope
push
or
xchg
push
sbb
push
insb
ret
sti
scas
dec
js
imul
unpcklps
pop
enter
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
roll
dec
pushf
fstpt
fs
js
dec
ljmp
pop
movl
adc
and
add
mov
jb
push
test
movl
lea
addps
cmpb
mov
sub
mov
inc
cmc
jnp
jns
loop
lock
shll
ret
jg
ds
add
movsb
and
or
loopne
add
adc
push
test
pop
jnp
lret
add
popa
and
in
into
jecxz
out
lret
jge
mov
scas
adc
pop
jecxz
scas
insb
call
test
inc
xor
int
call
mov
imul
jns
mov
insl
lret
outsl
mov
jbe
rcrb
push
push
shrl
lock
cmp
mov
sub
or
mov
xor
negl
or
mov
pop
jp
xor
jle
imul
mov
es
inc
mov
popf
imul
jl
in
nop
ret
jp
out
iret
aas
cmp
mov
xchg
bound
call
add
icebp
mov
outsl
out
loope
or
xchg
add
push
pop
data16
pop
mov
and
ret
dec
adcl
aaa
call
pop
cmp
stos
mov
xchg
int
adc
test
sub
sarl
mov
push
repnz
cmp
jecxz
mov
es
movsl
roll
pop
inc
push
ds
test
out
ss
cli
dec
jbe
in
lods
lret
sbb
pushf
jecxz
in
push
sub
sub
ret
mov
idivl
inc
pop
mov
jae
push
jge
in
add
lret
ror
ror
gs
or
jb
lret
sub
xlat
ja
push
cltd
inc
sbb
xor
mov
lret
lret
in
mov
xor
sti
stc
xor
fiaddl
mov
add
fdivl
fdivrs
insb
sub
mov
cld
jmp
dec
loopne
push
jmp
or
cs
mov
lcall
sbb
mov
xchg
adc
jnp
cmpsb
pushf
xor
inc
ss
xor
pop
jnp
adc
cmpsb
dec
pushf
fcomps
fadds
mov
adc
xor
cltd
shlb
mov
adc
sub
ja
xchg
popf
movsb
loope
jl
adc
repz
push
cld
int3
jae
inc
sub
andb
dec
sbb
mov
and
imul
add
or
lock
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fdivs
jge
mov
js
fs
js
sbbl
pop
ret
jnp
sub
xchg
push
std
jnp
jmp
pop
divl
pinsrw
mov
add
sub
push
or
pop
push
inc
mov
push
mov
cmc
push
fnstenv
adc
push
popa
jo
push
in
add
std
loop
xor
push
lcall
xor
pop
ud0
and
mov
arpl
fxch
cmp
loop
divl
sub
jo
sbb
subl
fidivl
inc
and
push
ds
or
sbb
mov
cmp
or
insl
and
shrl
push
pop
pop
cmp
incl
mov
lahf
push
sub
mov
insb
aas
mov
xchg
fbld
adc
pop
notl
adc
cwtl
xor
pop
sub
jmp
gs
add
fcoms
pop
test
ds
add
sbbl
jg
cli
pushf
ljmp
mov
adc
out
mov
movsl
imul
sbb
cmpsb
push
mov
stos
hlt
bound
addl
je
pop
cmp
pop
popf
sub
daa
xor
popf
push
inc
arpl
dec
lods
jns
xchg
cs
dec
fisubs
ljmp
pushf
sbbl
or
cmp
sbb
cmp
jg
adc
ret
xor
pop
mov
and
xchg
mov
in
sbb
sub
cli
ss
test
cmc
mov
addr16
sub
out
icebp
mov
cmp
mov
mov
sahf
fcmovne
push
imul
xor
sbb
pop
inc
inc
popa
out
dec
adc
jge
lret
pop
sahf
rolb
call
push
mov
inc
in
mull
jbe
pushf
add
xchg
xchg
cli
xor
cltd
jb
daa
mov
dec
loop
rol
mov
popf
pop
ja
push
pusha
push
cmp
popa
push
mov
fsubs
push
lods
mov
jne
notl
lea
sahf
adc
cmpsl
add
sbb
int3
outsl
jnp
jne
ret
push
inc
inc
or
push
cwtl
stos
aad
adc
or
mov
push
add
fcmovb
outsb
dec
in
lock
ja
sub
repz
sbb
dec
outsb
cwtl
push
inc
push
lea
out
jae
pop
pop
and
adc
hlt
xor
pop
push
cmc
shll
sub
icebp
out
jnp
mov
rclb
mov
xor
jp
imulb
jle
int
push
ds
xor
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
hlt
fnstsw
fs
js
inc
fcompl
mov
js
pop
aaa
lret
push
mov
fistpl
lcall
or
add
mov
stc
lea
sbb
out
enter
cmp
push
dec
ret
jae
shrl
dec
xor
cmc
lret
mov
pop
ljmp
in
fstps
sub
pop
dec
pop
inc
mov
sarl
dec
sbb
xor
aad
sbb
sarl
sbbb
fildl
lods
mov
dec
loopne
xor
mov
xchg
loop
and
outsb
scas
mov
loope
call
fscale
pop
sub
mov
xorb
cmc
into
jecxz
and
test
push
mov
dec
inc
fcomps
add
icebp
and
dec
mov
dec
xsetbv
or
and
std
fisubl
jb
insb
mov
insl
mov
ljmp
stos
ljmp
movsb
or
xchg
xor
push
mov
nop
outsb
jbe
mov
dec
and
sbb
pop
lret
push
jle
push
xlat
dec
mov
daa
adc
mov
cmp
and
jl
xchg
into
and
xor
shlb
mov
sub
jno
imul
push
add
loopne
dec
mov
xchg
ret
dec
leave
mov
cmp
cmp
sub
outsl
pushf
jl
mov
or
jl
cmp
dec
lock
stos
leave
xchg
push
sub
push
add
push
fcmovnbe
jg
scas
in
xchg
addr16
inc
adc
push
adc
aas
testb
ljmp
sub
test
dec
inc
dec
fdivs
rcr
add
xchg
lock
subb
out
cmp
pop
sub
loop
rorb
sbb
js
popa
mov
jno
xor
push
daa
fisubrl
inc
out
mov
mov
leave
cwtl
int3
rorl
xor
pop
push
adc
mov
mov
mov
dec
adc
cmp
xor
jl
mov
adc
iret
loope
cmpl
pop
into
sub
nop
fisttpll
cld
mov
scas
dec
jmp
lock
pop
fdivrs
xlat
insb
xlat
sahf
cli
cmp
imul
mov
jne
ljmp
dec
push
adc
scas
or
push
lret
cmpsb
test
mov
fcomps
mov
push
and
shl
sbb
fs
popf
inc
pop
dec
out
insb
pop
cmc
fcmovbe
ret
fists
push
adc
or
pop
das
jo
jp
dec
movsl
lcall
test
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
lods
fiaddl
loop
sub
jne
adc
and
sahf
enter
pop
iret
scas
adc
lea
stos
cmp
lods
dec
or
cmp
sbb
loope
dec
shll
roll
xlat
pop
jmp
mov
sub
rolb
cmp
ss
or
mov
data16
cmp
mov
in
push
popf
mov
fsubrs
and
adc
movsl
and
mov
and
mov
leave
scas
cmpsb
pop
pop
or
xchg
testw
scas
lea
hlt
insl
mov
cmpsb
loop
xor
mov
xchg
mov
and
pop
push
imul
xor
add
jmp
push
out
iret
addl
in
xchg
mov
stos
imul
cli
mov
mov
int
xor
mov
mov
int3
bound
pop
add
fidivrl
pop
sub
test
mov
lea
dec
jo
sbb
ret
cmp
mov
icebp
pushf
mov
and
pop
pop
loop
or
shl
arpl
enter
mov
adc
imul
cmp
imulb
mov
xor
xor
jne
sbb
push
lcall
pop
push
dec
jg
push
stos
std
push
enter
jnp
lods
fcmove
je
sub
shr
hlt
out
sbb
mov
xor
test
ja
fists
movsl
push
dec
pushf
cmc
jge
or
clc
out
shl
insb
jle
push
sub
jae
loope
pop
xchg
push
sbb
mov
icebp
insb
popf
mov
jmp
outsb
mov
mov
je
pushf
mov
xor
and
mov
push
xor
cmpsl
xchg
rcr
shll
xchg
in
out
hlt
xchg
cmpsl
aam
sbbb
int
sbb
cli
pop
loopne
xor
adc
xchg
push
sub
adc
pop
xchg
cmpsl
cmpsl
out
jne
icebp
cltd
xchg
push
pop
jns
repz
mov
in
subl
sbb
fs
dec
pop
dec
adc
mov
ficoml
in
dec
and
bound
out
mov
jmp
aam
mov
imul
test
aas
int
pop
pop
gs
movsl
stc
and
inc
pop
repnz
hlt
add
push
cltd
add
leave
mov
lods
ret
push
addr16
sbb
push
aam
cli
outsl
adcl
and
inc
scas
repz
stos
movsl
jl
xor
enter
insb
sub
sar
sbb
dec
in
sub
inc
xor
rorb
xchg
dec
jg
aam
cmc
pop
inc
xchg
repz
cmp
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
lahf
btc
fs
js
add
dec
or
popf
ret
dec
push
add
mov
jl
pop
sahf
in
mov
popf
jb
int
dec
stc
in
mov
push
mov
incl
mov
cmpb
out
pop
fcomps
jecxz
cltd
ret
sub
jnp
lret
out
inc
pop
mov
mull
push
inc
inc
in
adc
mov
add
jge
fcos
xchg
inc
loope
jecxz
or
rcll
test
xor
mov
push
mov
testb
jecxz
mov
adc
out
in
xchg
inc
inc
pop
addr16
pop
fadds
dec
push
mov
or
lds
inc
leave
je,pt
adc
inc
movsb
mov
daa
xchg
mov
jo
fs
int3
pop
jl
add
das
sub
pslld
es
popa
filds
cmc
bound
pop
cwtl
mov
repz
jno
mov
rolb
sub
sbb
mull
dec
xlat
mov
inc
push
xchg
or
cmc
sahf
mov
aam
jbe
int3
mov
mov
pop
pop
int3
aas
in
jae
dec
cmp
adc
xchg
jmp
adc
imul
ret
rorb
dec
std
sarb
ffreep
or
imul
divl
lcall
ret
orl
or
in
add
xor
mov
and
mov
mov
aam
dec
or
inc
ds
mov
xchg
or
and
js
stos
dec
ss
in
mov
repz
cs
and
mov
arpl
cmc
pop
pop
push
cs
jnp
js
push
add
movsb
mov
mov
loopne
mov
xorl
inc
cmpsl
je
xchg
scas
or
add
into
inc
push
or
pusha
cmp
cmp
pop
jb
lret
add
test
lods
js
pop
xor
xor
cmc
add
cmpsl
das
shlb
cli
cs
lcall
push
cmp
mov
out
mov
adc
pop
jns
out
out
cwtl
cmpsl
and
rcrb
lods
out
faddl
lret
fiadds
sbb
pop
dec
orl
lea
out
addr16
inc
sub
xor
lret
sub
int3
js
xor
out
shr
adc
push
dec
fidivl
mov
pop
add
sbb
repz
hlt
cmp
rcll
popf
mov
jmp
jle
nop
cwtl
jne
pop
ss
movsb
and
rcrl
xchg
jl
mov
add
inc
and
stos
cld
loope
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
jmp
mov
in
js
jle
js
add
mov
dec
mov
mov
mov
movsl
div
js
stc
and
cwtl
les
push
das
pop
dec
sbb
stos
cmp
ret
push
ljmp
inc
dec
incb
hlt
cli
sti
cmp
loop
loope
lahf
jb
xor
out
mov
and
dec
pop
mov
lret
mov
mov
lods
iret
push
lock
sub
cmpsb
lret
int
es
jle
mov
xchg
push
inc
dec
jl
pop
mov
ds
dec
jb
mov
add
mov
testb
mov
mov
inc
jle
inc
adc
xchg
mov
lahf
inc
adc
test
aad
jge
push
hlt
fistps
cltd
xchg
std
test
inc
xchg
dec
dec
dec
mov
es
rorb
mov
in
gs
ret
repnz
sub
or
push
aad
jmp
mov
pop
call
or
dec
sub
insl
loop
mov
outsl
mov
push
sti
xchg
jne
mov
xchg
gs
push
dec
pmulhw
repz
mov
cli
pusha
lea
mov
sub
adc
pop
in
push
rorb
fwait
xlat
and
rcr
cmp
mov
mov
lods
and
push
out
xchg
lds
add
out
fcompl
jo
pop
pop
sub
cwtl
jne
call
sbb
jl
adc
and
or
lret
mov
cmp
lock
xchg
insb
imull
push
fwait
inc
push
ror
cmp
fisttpl
inc
pop
sub
icebp
dec
fidivs
in
call
cs
insb
mov
sbb
dec
adc
clc
or
nop
insl
stc
pop
mov
lcall
into
test
inc
stc
sbb
jns
jae
call
cli
lock
jge
jne
ja
xchg
mov
stos
push
mov
sub
test
sub
scas
in
cmpsb
cmp
ret
lret
adc
lahf
insb
mov
jo
mov
mov
sbb
les
aad
ds
jg
pop
xchg
jge
sub
scas
es
push
cmp
mov
imul
xchg
sbb
pop
mov
mov
sub
je
mov
push
and
into
sbb
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
sub
xchg
js
cmpsl
jle
js
out
and
inc
xchg
mov
or
jmp
sub
pop
sub
xchg
push
sbb
dec
xor
add
mov
cld
add
and
mov
aas
pop
mov
cmp
in
int3
adc
aad
lret
test
ss
push
loopne
or
pop
bound
in
dec
dec
add
xor
mov
jge
andl
rcll
mov
add
adc
cmp
shlb
fisttpll
ss
push
lods
lods
xor
or
icebp
sub
mov
dec
adc
push
push
repnz
xor
adc
cmp
xchg
jmp
ret
xchg
daa
cltd
cmpsl
repnz
push
test
add
loope
push
je
ljmp
das
jns
sahf
fs
xchg
ret
sbb
push
or
out
cmp
out
ret
adc
xchg
rorl
bound
pandn
cmp
inc
ret
jl
sbb
cli
jne
mov
out
cwtl
jmp
inc
push
lret
stos
dec
push
shll
loop
leave
add
inc
popf
cli
ljmp
adc
test
cli
mov
repnz
cmp
pushl
jmp
out
dec
mov
insl
mov
jp
fstps
sahf
das
repz
ret
sbb
pushf
ds
in
xchg
jp
int3
xchg
mov
jo
das
xor
imul
sub
push
repz
mov
push
mov
fiaddl
cwtl
loopne
cmp
scas
insb
cmp
jo
aas
mull
fcmovnb
cmp
mov
jns
pop
jns
pushf
shrl
push
sbb
or
es
fistpll
movb
sti
fsincos
mov
stos
loopne
push
sub
ja
lcall
mov
fcomps
xchg
scas
movsb
mov
leave
lds
repnz
sahf
fwait
xchg
scas
lcall
out
xchg
outsb
adc
fstpl
ljmp
push
popf
stc
dec
cmp
ds
dec
cltd
in
fcomps
mov
ficoms
and
fs
aad
lods
pop
pop
popf
lcall
xchg
adc
cmove
lods
cmp
fiaddl
sahf
out
fistps
sahf
cmp
loope
cltd
dec
push
mov
ds
jmp
imul
xchg
out
mov
sub
insb
xchg
dec
mov
cmp
ret
pop
cmp
movl
jne
jmp
lret
cmp
mov
adc
in
out
js
cmpsl
jle
js
inc
jg
or
repnz
pusha
pop
and
mov
insb
or
test
mov
mov
mov
sub
jge
jecxz
nop
jb
push
fiaddl
jecxz
js
jb
jae
arpl
fiaddl
sub
lea
pusha
enter
ret
adc
and
cmp
dec
jo
sbb
int
xor
stc
dec
cmp
jl
dec
xor
jns
cmp
xchg
xor
dec
fstps
movsl
push
pop
or
jp
xchg
cmp
cmpsb
mov
stc
sbb
popa
mov
call
out
js
inc
mov
sub
std
sub
bound
lcall
adc
jae
push
cmp
or
xor
lds
rcrb
add
inc
pusha
bound
mov
mov
pusha
lea
mov
int3
stos
loope
xlat
cmp
add
cs
rorl
mov
in
es
jnp
xor
dec
jne
aad
jge
mov
pop
pop
outsb
sti
lock
cld
or
out
mov
pop
stos
add
lds
icebp
cmp
rcrb
sub
lods
fbld
mov
iret
and
pop
mov
lcall
adc
jbe
stos
push
int3
adc
out
xchg
push
movsl
jns
pop
jp
repz
sbb
pop
dec
push
inc
jp
bound
adc
movsb
mov
and
into
std
and
push
mov
jg
or
mov
outsl
cmp
mov
movsl
in
icebp
push
js
pop
and
ds
outsb
mov
dec
shrb
dec
test
out
jge
popa
jns
les
pop
or
push
push
jl
repnz
push
pop
cmpsl
mov
mov
cld
jno
mov
pop
sti
dec
jno
pop
inc
add
int
or
jbe
imul
mov
jp
xlat
shrb
shll
mov
fldenv
add
test
mov
mov
and
cmp
in
call
movsl
js
lds
insb
lcall
pushf
xlat
xchg
test
adc
sti
out
sub
arpl
loop
sti
sub
decl
cmp
arpl
lock
in
outsl
pop
mov
inc
xchg
ss
roll
add
scas
jb
push
sahf
setnp
addr16
or
aad
mov
sbb
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
sbb
js
jle
js
outsl
call
popa
gs
cmpsb
pop
repnz
cmc
cli
cmp
mov
xchg
mov
sub
or
bound
pop
sbb
arpl
mov
and
cld
cli
nop
call
adc
fidivrs
add
dec
les
xchg
test
inc
stc
outsl
arpl
adc
scas
mov
adc
insl
mov
dec
jne
inc
mov
pop
ret
sub
push
aam
jmp
cmp
test
push
push
lret
pop
je
and
shl
int3
iret
or
iret
push
xor
gs
pop
loope
dec
add
jne
lods
cwtl
in
push
adc
repnz
adc
in
jbe
mov
aaa
ret
cli
mov
cmp
into
jmp
fsubs
ljmp
cmp
push
mov
and
roll
enter
adc
xchg
cmc
dec
dec
mov
sbb
jle
arpl
dec
clc
sar
in
add
lock
leave
mov
dec
add
pop
lods
push
fcmovbe
lods
cwtl
xchg
das
lods
xchg
loope
nop
dec
rcl
pop
sub
sub
out
leave
cmp
iret
jg
jbe
or
pop
push
jecxz
inc
add
outsl
mov
arpl
cld
test
sarl
stc
cld
repnz
push
mov
in
bound
lds
ds
out
pop
div
pop
loopne
iret
decb
data16
push
ret
mov
or
adcl
sub
and
or
out
ret
or
dec
pop
xchg
rolb
mov
dec
mov
pop
lds
dec
fisubrs
cmp
jbe
inc
idiv
mov
jg
push
ffree
int
outsb
pushf
stc
clc
fldenv
push
scas
push
adc
arpl
or
rsqrtps
mov
gs
or
loope
sbb
inc
mov
push
shll
jae
rcll
mov
dec
cmc
jmp
pop
daa
lret
xchg
adc
iret
cmp
and
xchg
jge
pop
add
enter
xorl
cmpsl
in
xchg
out
xor
shll
je
lcall
subb
hlt
cli
adc
pusha
cmp
sarb
or
sub
xor
or
mov
inc
loope
dec
insl
pop
mov
or
cmovns
daa
jns
jae
push
jg
fdivrl
nop
or
stos
cli
jnp
mov
mov
aas
inc
daa
cwtl
cmpsl
dec
cs
in
mov
jne
xchg
and
mov
pop
xchg
jge
xor
imul
jae
cmpsb
in
shl
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
enter
bnd
push
jle
js
out
scas
push
mov
movsb
aam
jne
addb
jb
scas
stos
lock
sti
fisubl
jl
or
cmp
pushf
cwtl
sarb
sbb
jl
or
xor
test
push
je
fstl
mov
pop
mov
imull
jnp
sbb
in
aam
popa
lods
xchg
loop
shll
repz
xor
iret
inc
jno
fdiv
ror
jl
stos
xchg
mov
xchg
negl
pop
cltd
jo
sub
sbb
sub
in
inc
jp
jge
mov
in
fs
daa
out
sbb
inc
add
lahf
dec
jmp
testl
daa
cmpl
pop
adc
hlt
clc
push
es
xchg
and
popf
mov
xor
xchg
ss
jns
subl
int
or
gs
mov
rcrl
imulb
push
fildl
pop
pop
je
aas
dec
cs
add
je
lock
push
rorl
loope
ffreep
ret
outsb
lret
and
xor
xor
cmc
into
push
lock
ds
divb
cmc
inc
rcll
subl
icebp
push
sub
cmp
xchg
push
in
insb
and
adc
sbb
fdivrs
repnz
bound
out
jns
movsl
lret
xor
pop
pushf
je
cltd
sbb
mov
lahf
stc
mov
xorl
or
or
lods
inc
cmpsl
mov
push
sarw
mov
sti
aaa
xorb
je
sub
out
lods
fmuls
mov
jl
loope
mov
dec
sub
pop
loopne
mov
push
jbe
sbb
or
lcall
add
xchg
xor
sub
jbe
fcmovnu
lcall
js
cmc
or
aaa
notb
fsub
push
xchg
cltd
or
fildl
jmp
xchg
lea
roll
or
xchg
stos
add
mov
je
repz
push
sub
push
cmp
fs
inc
add
aam
xor
fdivs
pushl
xchg
aas
and
in
rol
shr
dec
xor
aam
cmp
xchg
jge
mov
pushf
in
sbb
in
add
ficompl
loopne
jbe
xchg
cmc
inc
aaa
xor
adc
arpl
push
fadd
adcb
gs
push
push
mov
mov
push
incb
je
data16
mov
insb
insl
jg
mov
xor
cld
push
aad
xor
lods
jp
lods
sbb
cmpsl
gs
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
mov
js
push
jle
js
lock
and
sub
jns
aam
sahf
repnz
test
cmp
mov
test
or
scas
stc
mov
cmp
xor
adc
out
inc
mov
jmp
pushf
adc
out
jp
and
push
cmpsl
xchg
pop
jecxz
mov
sbb
test
mov
sub
in
pop
fidivrs
hlt
fnstsw
xor
popf
add
mov
mov
add
jne
cld
cmp
xorps
xchg
xor
popa
fdivrp
mov
cmp
jmp
add
mov
popa
out
lea
adc
or
fninit
mov
lods
fadds
popf
lahf
cmpsl
add
out
xchg
dec
cltd
push
sub
sub
clc
push
mov
sbbl
mov
mov
fwait
lods
ficoml
xor
xor
shl
ret
stos
xor
arpl
iret
cmp
or
test
rorb
push
adc
dec
xorb
shrb
jo
inc
jnp
sbb
pop
or
adc
sti
pop
daa
ss
addr16
push
push
fadds
stos
jecxz
dec
cmp
push
lods
pop
xor
sbb
lcall
cld
rcr
fnstsw
jl
mov
push
lock
f2xm1
imulb
mov
std
ret
cli
rorb
andnps
cmp
lods
inc
or
repz
out
sar
mov
call
mov
or
scas
jmp
enter
jo
gs
movnti
jno
lods
cld
mov
xchg
leave
es
or
lods
pop
xchg
mov
pusha
lret
xchg
scas
hlt
adcb
push
test
fdivrs
je
mov
fisubrl
mov
in
cmp
add
sbb
push
push
sbb
int3
rolb
test
push
stc
jge
xlat
mov
outsb
fdivrl
adc
adc
sbb
xchg
jl
fnsave
or
outsb
push
in
outsb
rorl
outsl
lea
mov
jmp
lahf
popa
dec
pushf
and
mov
sub
stos
jbe
cmp
xchg
xchg
add
mov
pop
in
inc
js
inc
arpl
or
push
dec
iret
jg
jge
jo
or
neg
xchg
xchg
clc
mov
add
cmc
jg
cmp
fisttpll
lahf
xchg
fcompl
fmuls
dec
jecxz
dec
push
addr16
test
add
inc
hlt
and
popa
inc
jno
dec
pop
push
jb
adc
es
adc
jmp
xchg
ja
mov
mov
out
xchg
mov
flds
loop
testb
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
lds
add
cwtl
jmp
les
add
int3
call
xchg
ds
out
sub
xor
movsb
lds
fcmovnbe
mov
stc
lret
mov
jns
dec
mov
mov
pop
jmp
nop
cmp
jo
xchg
xchg
mov
push
jp
sub
mov
das
enter
xor
xchg
sbb
sahf
dec
inc
nop
add
in
mov
and
mov
mov
pop
stos
insl
sti
cli
lock
and
add
xchg
pop
stos
xor
lret
bound
jae
inc
mov
repz
jg
push
and
out
add
xchg
dec
jns
insb
jmp
addl
lret
jno
dec
mov
push
xchg
adc
insl
out
mov
mov
adc
mov
add
daa
or
jb
das
daa
jae
and
mov
inc
mov
mov
add
insb
sti
testb
cmpsl
fcoms
aaa
xchg
movsb
mov
mov
pop
jns
insl
xlat
mov
fs
int3
dec
dec
push
mov
sub
enter
sbb
daa
test
movnti
lock
lods
and
int3
jl
mov
icebp
ret
mov
xor
adc
push
cmp
dec
lods
cld
lcall
pop
je
xor
clc
jae
lcallw
xchg
push
iret
mov
lahf
dec
sti
and
mov
mov
xor
stc
push
das
enter
xchg
ja
movsb
sbb
lret
sub
mov
lds
lret
mov
push
shr
repnz
lahf
hlt
testb
cmc
jno
aaa
icebp
or
aam
jbe
jl
add
bound
outsl
xchg
sub
aad
adc
inc
sbb
adc
mov
xchg
ret
jae
mov
sbb
lahf
dec
into
jo
scas
loop
push
shl
adc
sarl
cltd
inc
repnz
xchg
mov
das
int
jb
imul
or
test
stos
je
inc
dec
into
cwtl
sbb
clc
and
add
fs
xchg
mov
mov
cs
mull
cmpsl
test
aas
jle
lods
roll
push
jl
sub
mov
jo
test
push
sub
pushf
outsl
cwtl
shll
dec
call
icebp
xchg
scas
push
push
push
jo
mov
aas
mov
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
inc
xor
stc
js
je
js
pop
xchg
in
mov
mov
fdivrs
xchg
fwait
mov
mov
es
leave
adc
mov
aaa
cmpsl
sar
inc
push
add
fmuls
pusha
push
sbb
rorl
in
les
pop
test
das
inc
enter
xor
xor
or
scas
inc
cmp
sbb
sahf
stos
jne
mov
jecxz
mov
jno
dec
pop
shrl
scas
or
jle
daa
fcoml
call
ljmp
stos
sub
mov
in
lea
test
das
iret
fs
loope
adc
popf
add
mov
rcll
aad
fidivs
cmp
jne
xchg
xchg
sbb
sbb
ljmp
cwtl
mov
fdivrl
sbb
mov
fmuls
mov
outsb
stc
in
stc
popa
pop
aad
sbb
cld
rcl
mov
or
fldl
pop
fwait
aas
inc
test
call
ret
mov
imul
mov
mov
jmp
lahf
sub
mov
dec
call
sahf
psrld
sahf
xchg
in
aaa
mov
mov
ds
jns
pop
dec
xchg
shrl
test
iret
pop
aaa
lcall
insl
sub
add
push
and
push
scas
and
cmp
mov
icebp
fldcw
flds
jecxz
adc
pusha
cmpsb
insl
xor
dec
cmp
mov
jno
sub
aaa
and
es
push
and
adc
xchg
dec
or
test
xor
push
mov
adc
ret
int3
fbld
mov
loope
pushf
add
js
mov
sbb
xchg
and
js
push
test
int3
popa
sti
in
daa
fdivrl
or
ret
lea
clc
push
fildll
sbb
jne
pusha
out
mov
fsubr
inc
mov
xlat
iret
sbb
xchg
inc
dec
push
lahf
mov
mov
outsl
cmp
push
test
rolb
xor
pop
jne
jmp
inc
outsb
dec
jecxz
adc
push
adc
sbb
add
pop
sub
aas
aam
fdivrl
push
hlt
mov
ret
mov
insb
mov
mov
fdivs
push
cmp
addr16
pusha
dec
cmpb
icebp
iret
leave
ficoml
lock
clc
call
mov
cltd
clc
inc
xchg
ss
stos
mov
inc
jecxz
push
adc
xchg
je
testl
xchg
testl
mov
cmpsl
scas
loopne
in
cmpsb
imul
jmp
adc
pop
and
jo
mov
faddl
add
cmpsl
inc
add
mov
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
push
daa
js
je
js
xchg
sub
xor
fs
jecxz
and
scas
mov
fisttpll
lods
push
or
ret
cld
sbb
or
popf
je
sbb
dec
xchg
movsb
mov
out
mov
pop
or
and
int
add
mov
ljmp
repnz
outsl
rorb
sub
mov
daa
add
sbb
add
mov
or
in
std
in
std
sahf
sahf
nop
mov
movsl
sbb
mov
and
push
int
ficompl
ljmp
mov
mov
jnp
int
cmp
cmp
filds
loop
ss
adc
in
lcall
sbb
cwtl
sbb
fcmovbe
sbb
stos
cmp
adc
stos
adc
and
sbb
lds
popl
sub
mull
jp
jbe
inc
mov
rol
push
subl
pop
sbb
leave
rorl
jl
mov
insl
cmpsl
sahf
cmpsl
jecxz
jle
sbb
ret
and
stos
out
sub
mov
call
ljmp
ja
jmp
insl
ret
and
dec
stos
ljmp
int3
fbld
pop
lods
fistpl
icebp
int
imul
pushf
sub
xchg
jbe
enter
cltd
push
add
fwait
scas
mov
and
ja
xchg
out
mov
in
add
orb
enter
inc
cld
cmp
add
pop
push
outsb
out
mov
hlt
movsl
xlat
xor
hlt
sub
jmp
mov
xor
cmpsl
inc
nop
ljmp
cmp
psllq
cmp
out
bound
push
ss
popf
arpl
clc
or
repz
mov
sbb
pop
call
xlat
sbb
adc
lods
lcall
cmp
aas
ret
popa
sar
gs
out
push
cmp
jmp
jecxz
aam
xor
push
lods
push
into
aam
hlt
in
stos
addl
cmp
enter
push
sbb
pmaddwd
ret
sbb
loopne
xchg
ret
arpl
jge
mov
loop
push
pop
push
adc
inc
jecxz
push
sub
jbe
xchg
mov
popa
or
sub
icebp
loopne
sbb
mov
and
mov
and
push
and
pop
aad
iretw
or
xchg
call
cmpsb
mov
xchg
push
loop
sbb
pop
mov
fnstenv
mov
dec
mov
sub
loopne
cmp
sti
sbb
push
add
stc
mov
mov
out
jne
sbb
dec
add
dec
out
xchg
mov
out
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
push
mov
cmpl
jle
js
stc
xor
aad
adc
sbb
cmpsl
pop
add
jo
jg
cmp
pop
mov
shlb
andl
sahf
mov
int
jge
fs
cmp
idivb
push
movsl
sub
push
or
mov
fcomi
pop
gs
sti
inc
negl
dec
addr16
mov
lock
sti
mov
and
cmp
cli
push
push
addr16
cs
xchg
jo
pop
cltd
bound
and
hlt
movb
jmp
jg
cs
xchg
hlt
inc
sbb
int3
mov
cld
mov
jge
ret
stos
mov
rcll
out
aam
test
cmpsl
pop
mov
imul
test
vmaxpd
push
jnp
or
loope
repnz
popf
fstpl
scas
scas
outsb
ffree
aam
cmp
push
aas
mov
outsl
sub
and
push
sub
es
mov
leave
mov
icebp
sub
fistl
fisttpll
stos
xor
xchg
iret
push
and
out
outsl
push
mov
fwait
pop
in
xchg
adc
jp
or
sahf
pop
shl
sahf
ret
test
jmp
pop
mov
test
insl
jl
push
push
fwait
iret
cld
test
or
insl
das
push
icebp
jbe
sub
into
decl
pop
sar
sub
jl
push
test
push
out
mov
popf
aas
fs
mov
cltd
sub
orb
pushf
or
push
jge
fimull
push
mov
in
sbb
pop
call
jae
into
loopne
mov
shrl
mov
sbb
sbb
icebp
sub
inc
pop
or
ret
leave
add
adc
jo
inc
std
fidivrl
mov
jecxz
cwtl
push
dec
sub
mov
dec
adc
jbe
pop
sub
scas
mov
xchg
and
pushf
pop
aaa
jmp
cmp
arpl
data16
test
jo
test
mov
mov
mov
scas
mov
pop
hlt
les
cmp
shl
imul
shlb
push
lcall
pushf
out
insb
les
mov
lret
out
push
ss
cwtl
lods
inc
std
xor
fsubp
mov
std
fs
sti
xor
lahf
mov
icebp
int3
movsb
mov
jnp
aad
scas
xor
rorb
mov
jnp
cmp
shlb
and
add
fildll
mov
icebp
loope
dec
outsb
test
std
cltd
xor
loopne
fstl
idivl
mov
movsl
insb
mov
lret
adc
fsub
mov
jmp
sbb
cmp
aaa
sbb
dec
sbb
mov
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
cmovge
sub
cmpb
jle
js
or
xchg
cld
insb
jge
outsl
mov
stc
sbb
push
cmpsb
stc
iret
or
xor
test
pop
cmpsl
add
dec
mov
and
test
lds
jge
repnz
lahf
sbbb
mov
das
inc
out
out
xchg
or
cmp
push
xor
leave
xchg
fwait
cmp
mov
mov
mov
sub
cmp
mov
andb
inc
add
aaa
stos
push
shll
sub
lret
mov
enter
gs
popf
push
inc
lods
mov
mov
pop
adc
or
jge
xchg
popa
popl
sub
jo
push
and
repz
sbb
sub
sub
sbb
mov
pop
les
mov
dec
faddl
pop
inc
xor
sbb
jmp
pand
jne
in
xor
push
repz
xor
adc
jo
mov
outsl
mov
icebp
inc
ret
inc
mov
pushf
into
dec
cltd
pop
mov
inc
add
inc
adc
mov
xchg
push
scas
adc
dec
mov
push
test
add
in
fwait
mov
push
mov
in
or
jmp
xchg
jmp
outsb
push
in
jle
lcall
cmpsb
aas
fcomps
outsl
inc
sbb
xlat
out
roll
jmp
js
imul
or
jle
pusha
lods
mov
mov
cmp
aas
fcmovnu
int3
push
xchg
jl
notb
cli
and
and
je
pushf
cmpsb
loope
clc
inc
sbb
lret
pop
xor
add
add
mov
and
pop
movsb
insl
ficoml
repz
test
or
hlt
sbbb
jecxz
push
loopne
out
xlat
lds
mov
add
fcmovb
mov
push
inc
cmp
pop
mov
xlat
mov
stos
das
das
inc
jge
push
adc
add
imul
dec
lods
and
out
xor
loopne
inc
inc
pop
fsts
gs
add
add
push
rcll
add
subb
fsubl
push
dec
inc
test
mov
cmp
xchg
orl
scas
mov
lock
pop
fisttps
dec
push
cli
or
jae
and
das
fwait
jae
pushf
roll
inc
push
adc
hlt
sbb
mov
inc
sahf
mov
aad
mov
add
adc
mov
jne
and
or
js
in
int3
dec
call
mov
inc
and
mov
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
xchg
inc
sbb
jle
js
xchg
and
fisubrs
loop
inc
clts
test
call
imul
mov
sbb
xchg
divb
sarb
dec
pop
push
jae
mov
adc
andl
jg
pop
imul
in
cmc
fldcw
cmp
mov
mov
pop
mov
sbb
dec
jp
ret
loope
xchg
scas
shll
push
jecxz
pop
outsl
ds
mov
aas
pusha
mov
jecxz
jg
jnp
addl
and
in
and
add
add
jo
xchg
jae
inc
jge
imul
add
test
or
repnz
repz
mov
add
pop
in
jne
inc
push
je
jg
jo
xchg
in
adc
jg
mov
cmp
aas
add
int3
ss
jb
xlat
test
rclb
in
aas
pop
ror
inc
iret
enter
call
mov
movsb
xchg
xchg
insl
into
sub
inc
mov
mov
xchg
jbe
icebp
mov
repnz
or
orl
push
or
jb
push
mov
cmpsb
addl
sub
push
rolb
pop
jbe
cwtl
jle
rcr
jecxz
repz
xor
xchg
test
dec
inc
aas
std
out
and
adc
stos
in
xchg
xlat
adcb
pusha
das
je
xlat
cli
xchg
mov
cmp
dec
add
mov
pushf
cld
and
popf
jbe
std
mov
push
cmp
enter
sbb
test
movsb
sbb
xlat
jo
xchg
push
push
enter
test
jl
adc
xchg
xor
jg
jns
xchg
aad
mov
pop
add
jecxz
xor
cmc
fdivs
push
sub
pop
xchg
mov
inc
or
dec
imul
inc
das
frstor
pusha
sub
cmp
in
lcall
cmp
push
mov
iret
mov
mull
mov
jl
and
adc
add
in
and
sub
js
xchg
mov
lcall
mov
push
or
jp
out
in
shrb
dec
jno
xor
test
jle
sahf
test
xor
call
xchg
out
repz
mov
js
mov
mov
mov
incb
mov
jmp
xchg
push
test
add
mov
push
mov
std
fcmove
jg
pop
push
dec
loopne
fsub
xor
fdivrl
dec
cmc
adc
mov
outsb
into
add
sarl
adc
add
rol
leave
fcmove
rcl
pop
mov
xor
into
mov
je
js
repz
je
out
movsl
add
loopne
int
push
popf
test
mov
push
mov
dec
sarb
xchg
push
enter
add
cli
jge
xchg
inc
mov
mov
cmp
pusha
in
push
pop
lahf
mov
addr16
sbb
lcall
shrb
ds
add
jecxz
mov
es
popf
loop
adc
and
xchg
rorb
jecxz
jno
test
ja
add
push
cld
dec
mov
dec
mov
add
xor
pop
xchg
nop
adc
mov
or
pop
out
loop
add
xorb
popa
aas
std
add
inc
scas
filds
push
stos
push
pop
lea
aaa
rcrl
push
mov
arpl
idivb
lahf
pop
xor
test
dec
push
pop
das
aam
repnz
cmp
xor
inc
clc
scas
je
add
sbb
in
cmp
popf
test
out
repnz
dec
cmc
mov
add
rcl
xor
enter
inc
ljmp
xor
in
jbe
insb
mov
mov
bound
and
pop
test
ds
mov
sub
mov
mov
les
test
add
xor
add
and
test
insl
jnp
insb
sbb
xor
mov
push
mov
mov
pop
jb
ficoml
cmc
or
push
lods
or
aam
dec
loop
adc
scas
daa
out
mov
popa
test
into
push
jge
inc
add
movsb
push
aad
in
mov
xchg
xchg
pop
push
out
mov
int3
jl,pt
insb
push
pop
cmp
jp
jbe
mov
mov
sahf
cli
sub
add
cld
iret
lods
push
sti
enter
dec
mov
sahf
cmp
or
jg
cltd
adc
outsb
daa
inc
mov
push
xchg
les
pop
add
dec
push
inc
add
mov
jno
aam
mov
pop
jns
arpl
shrb
jne
adc
and
sahf
addr16
movsl
pop
shl
stos
fsubs
pop
jl
arpl
mov
sub
or
sub
pusha
sbb
dec
cmp
les
mov
lock
lret
mov
test
or
das
mov
inc
pop
xchg
sarl
jno
aad
rcrb
and
pop
in
fwait
add
cmp
jb
cwtl
pop
xchg
ficomps
xor
jg
mov
stos
loope
jmp
sub
imul
aas
std
xchg
mov
into
inc
sub
rorl
xchg
push
js
outsb
mov
pop
add
add
popf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
jns
pop
lret
js
jle
js
sbb
popl
sbb
or
movsl
jmp
sub
mov
sbb
xchg
cld
sar
imul
push
cmp
mov
xchg
sub
es
push
adc
loop
ret
sub
fwait
jp
pop
jle
fwait
mov
and
dec
xor
mov
sub
add
ja
movsb
mov
insl
js
vmovshdup
daa
add
gs
ss
mov
je
popa
adc
mov
jae
ret
pop
sbb
stos
or
or
add
jns
enter
shl
sbb
fcoml
sbb
movsl
mov
pop
movb
and
mov
xchg
or
mov
es
mov
fs
push
fwait
jmp
mov
xchg
or
mov
inc
push
sub
inc
fcmovnbe
cmc
push
pusha
cmp
sub
dec
mov
mov
dec
jno
and
xchg
mov
add
movsl
lods
push
dec
jbe
or
dec
jo
inc
fstps
dec
jnp
push
test
jg
sahf
inc
mov
aad
cmp
dec
adc
mov
jae
adc
in
dec
pop
int3
icebp
or
test
adc
aad
loop
movsb
dec
test
pop
les
xor
mov
or
sahf
fisubrs
xchg
sahf
test
mov
popf
pop
ret
cli
lods
inc
add
cltd
popf
xor
mov
add
push
dec
notl
jb
xlat
addr16
sbb
sahf
mov
nop
or
mov
jo
fists
test
pop
in
lods
lret
fwait
dec
lods
xor
stos
push
movsb
xchg
add
push
mov
fsubrl
xor
push
lcall
cld
outsb
sbb
loop
dec
jecxz
fisttps
out
pushl
jmp
fnstenv
sub
hlt
ret
mov
inc
pop
lret
jne
jmp
mov
push
test
mov
mov
pop
pop
lds
in
push
inc
lret
xchg
add
addr16
ficomps
jmp
test
fistpll
adc
sti
mov
jb
test
add
out
test
out
js
and
in
mov
sbb
mov
cli
mov
movsb
pop
mov
or
cmpsb
mov
addr16
jg
dec
mov
aas
test
addr16
add
out
xor
pop
sub
cmp
sbb
dec
jb
and
or
pop
iret
sub
jle
push
xor
inc
je
and
ret
popf
fdivrs
and
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
roll
mov
je
js
sub
sub
push
pushf
ja
fstp
aaa
and
popf
sbb
xchg
inc
add
sub
cpuid
aas
mov
test
pop
test
je
aaa
inc
ret
hlt
mov
mov
sub
aas
fldt
sub
dec
fldl
sbb
add
pop
and
popa
lods
dec
add
sbb
adc
or
insb
jmp
arpl
mov
or
pusha
cwtl
mov
pop
xchg
cmc
cmp
mov
xor
jo
push
aaa
rcrb
repnz
lret
mov
push
dec
inc
mov
mov
or
movsl
clc
jne
call
and
sbb
jnp
and
test
sub
cmp
ret
jle
xor
pop
fsubr
shrl
jae
sbb
add
or
pavgb
push
push
inc
sub
subl
push
andnps
mov
sahf
push
push
cmpsl
jne
pop
ljmp
stos
mov
sub
inc
movsl
fwait
sbb
xor
mov
in
mov
jmp
push
call
xor
cmp
jbe
adcb
dec
filds
iret
mov
pop
idivb
aad
aam
fnstenv
mov
and
pop
push
cmc
or
lahf
pop
pop
xor
or
cs
mov
jmp
adc
cmp
jg
rorl
les
cld
movsb
adcl
sbb
movsl
push
mov
mov
or
xlat
push
mov
jb
fidivrs
fists
pop
jg
xchg
dec
cwtl
lds
sti
mov
sbb
and
mov
stc
scas
fists
dec
jecxz
push
jne
pop
aad
arpl
mov
adc
stos
inc
repnz
xor
add
dec
mov
push
push
or
mov
test
aaa
lods
mov
mov
and
sbb
push
icebp
mov
mov
sar
add
insl
rorl
xchg
jns
push
in
aam
mov
popf
jecxz
stc
inc
mov
push
lock
nop
mov
das
out
das
xor
movl
sbbl
pop
cmp
inc
dec
pop
jnp
je
mov
ficomps
add
or
js
in
daa
ja
call
jo
xchg
jae
nop
xor
jle
push
mov
test
inc
mov
mov
leave
cmp
popa
push
pop
or
nop
or
jecxz
mov
add
test
lret
gs
sbb
cltd
into
mov
popf
pop
jmp
idivl
push
push
arpl
dec
jmp
push
sbb
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
div
rol
xchg
js
je
js
cmp
dec
xchg
hlt
aas
sub
inc
inc
xchg
cmpsl
into
iret
movsl
mov
stos
pop
cmp
adc
adc
and
es
pop
clc
aaa
movsb
fmul
mov
or
jbe
gs
inc
sbb
add
and
add
in
out
in
out
notl
jb
into
insb
sbb
adc
mov
mov
sub
pop
sbb
rorl
xchg
dec
jecxz
ror
mov
jno
push
and
mov
inc
push
xchg
push
inc
out
jbe
push
add
xorb
repnz
xlat
std
pushf
js
popa
mov
daa
xor
gs
or
sub
cmp
mov
inc
mov
ja
in
jne
nop
pop
inc
mov
xchg
xchg
push
pop
ja
cmp
xchg
jno
push
or
xor
dec
mov
iret
imul
jo
loope
xchg
into
sub
or
lahf
and
lock
jo,pn
adc
les
insb
imul
pop
in
cli
insl
outsb
pop
xchg
cmp
lock
pop
lock
jo
icebp
mov
std
data16
test
adc
rcr
or
inc
adc
mov
arpl
cmc
je
jnp
pop
sti
mov
inc
xchg
ret
fs
mov
jbe
inc
cmp
add
xor
lea
mov
jns
jne
out
xchg
adc
gs
enter
mov
add
je
mov
inc
pusha
clc
push
mov
jmp
sub
insb
sub
mov
jmp
push
jb
pushf
jg
outsl
jb
jl
jge
jg
push
rol
mov
or
dec
jp
pop
movsl
mov
cmp
leave
stos
ret
push
fistpll
add
cwtl
insb
std
fists
addr16
or
xchg
dec
cli
movsl
outsl
xlat
sub
adc
cmc
addr16
or
into
js
cmpsl
pusha
or
call
test
dec
je
inc
js
out
popf
test
mov
nop
cmpsl
xlat
dec
jns
add
test
inc
push
jbe
add
jb
test
jecxz
ficoml
cmpsb
repz
add
jmp
adc
stos
jae
inc
out
push
jne
sbb
ss
clc
cmc
data16
ficoms
mov
nop
and
pop
xchg
push
ss
xchg
popf
add
jp
mov
out
mov
and
roll
popf
sub
cli
jbe
std
repnz
mov
and
orl
jo
or
shl
ret
xlat
jns
inc
pop
mov
mov
icebp
push
mov
mov
sbb
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
stc
mov
pop
ds
js
je
js
push
jae
cwtl
inc
in
dec
dec
aad
mov
test
pop
fldt
jne
out
dec
lahf
mov
push
lods
ss
mov
push
add
movsb
jbe
xor
fcoms
ljmp
aas
dec
enter
fcos
gs
imul
in
iret
push
es
outsb
push
fidivl
idivb
dec
in
fiaddl
sbb
mov
cltd
gs
mov
test
push
xor
xchg
push
add
pushf
lret
or
jne
dec
test
aam
stos
cmovp
and
add
mov
cmp
fnsave
test
fcompl
data16
js
xchg
mov
in
sbb
and
inc
ror
inc
add
lret
fwait
cmp
rcrb
orl
push
test
push
ffreep
add
aas
fsub
add
xchg
dec
jns
push
dec
dec
pop
mov
push
aad
fadd
fisubrs
lds
jge
out
jecxz
sbb
cld
inc
and
hlt
or
stc
dec
pop
mov
add
sub
stos
or
inc
test
sbbl
sub
push
sar
dec
adc
adc
clc
pushf
sbb
ret
adc
push
loope
lcall
jno
mov
imul
and
call
loope
ss
das
add
int
pop
loopne
jbe
insl
xor
mov
sbb
outsb
and
cmp
xor
dec
icebp
push
mov
jbe,pt
lock
or
push
mov
inc
xchg
out
push
push
xchg
mov
mov
pop
aam
jecxz
imul
mov
aad
sub
and
lcall
addl
xor
xchg
push
stc
jle
stc
fldl
inc
test
lret
jl
jnp
loop
and
out
xchg
arpl
inc
cmp
lods
das
mov
dec
mov
rcll
cmp
into
stos
insl
pop
scas
out
or
xor
mov
aaa
mov
push
dec
lcall
cmp
sbb
and
pop
js
test
sbb
in
adc
push
jg
mov
sub
xchg
mov
dec
sbb
cs
mov
pop
or
push
mov
xor
mov
push
mov
loope
add
test
push
js
mov
jle
dec
lret
mov
push
test
push
sbb
test
jo
icebp
pusha
icebp
sbb
mov
dec
loope
jecxz
test
nop
or
dec
ljmp
das
ret
pop
pop
pusha
adc
repnz
jb
dec
insl
rorl
jge
mov
jmp
xlat
cmp
ds
js
adc
leave
insb
cmp
js
jo
push
movsl
sbb
andl
mov
xchg
and
fcmovb
js
js
insb
mov
out
into
dec
xlat
inc
sbb
in
pop
or
dec
hlt
cmp
fdivs
scas
xor
and
sub
dec
cmp
aad
lods
mov
inc
andl
popa
push
sub
fadd
lods
mov
aas
and
les
lock
jo
popa
adc
imul
dec
cltd
xchg
mov
jnp
movsb
sub
sbb
subb
inc
sub
sub
push
jl
pushw
jnp
lock
dec
or
enter
mov
jbe
mov
jecxz
test
pavgb
lcall
cld
xchg
xchg
dec
mov
mov
fwait
insl
movb
cmp
cmp
mov
push
stc
fs
sub
mov
stos
stos
int3
daa
or
test
inc
and
fdivr
mov
aas
jecxz
adc
xor
jo
adcl
lret
mov
push
enter
or
xor
xor
pop
mov
data16
divb
dec
test
stc
gs
rcrl
xchg
shll
divb
dec
sub
or
nop
pop
pusha
insb
adc
mov
mov
sbb
push
push
addr16
call
outsl
sbb
adc
incb
mov
mov
pusha
add
mov
fdivr
cltd
sbb
pushf
dec
xchg
pop
repz
sub
jecxz
xor
aas
xchg
pop
fdivs
mov
xchg
test
mov
add
pop
out
int3
out
pop
int
cmp
jo
push
push
xlat
dec
push
add
aas
xor
insl
or
sbb
aam
sbb
sub
imull
pop
adc
dec
pop
sub
push
leave
pusha
loope
ja
stc
mov
sbb
es
add
lea
pop
adc
inc
cmc
cmp
addb
adc
xchg
addb
jno
imul
stc
nop
ja
cli
ret
aas
jl
es
aas
xchg
mov
scas
jne
add
xlat
push
jmp
sub
outsb
cmp
sbb
shl
aaa
rcrb
lds
sbb
or
in
xor
lods
loope
xlat
cmp
dec
popa
dec
sarb
loope
sbb
sbb
add
mov
int3
jp
adc
or
or
mov
xchg
mov
mov
jecxz
in
cwtl
adc
mov
or
jmp
fcomi
iret
fdivrl
int3
sbb
mov
insl
push
sbb
iret
mov
jns
push
and
popa
mov
xchg
decl
jecxz
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
rorl
ss
js
je
js
push
sub
or
rorb
mov
mov
stc
jns
ja
ficoms
inc
insb
mov
push
xor
fldcw
xor
sbb
push
and
xor
pop
lods
lret
fdiv
outsl
mov
mov
jge
dec
repnz
dec
mov
inc
int
repz
mov
int
pusha
push
lods
fidivrl
push
xor
push
fistl
fs
inc
adc
roll
adc
jl
fimuls
mov
inc
xor
push
push
stos
cmp
das
push
or
jecxz
mov
es
ljmp
out
fidivs
jecxz
movsl
xor
or
jns
adc
pop
jns
out
mov
gs
aaa
pop
das
or
xor
xchg
dec
pop
mov
cwtl
jbe
sbb
shll
inc
sbb
xor
sahf
pop
adc
ffreep
dec
mov
cld
test
mov
repz
cmp
push
mov
shlb
pop
out
cmp
cmp
adc
nop
jae
sub
mov
xchg
inc
lret
fildl
das
scas
jmp
test
push
shrl
stos
mov
js
push
fs
cmp
mov
jge
andb
stc
scas
or
inc
adc
mov
pop
insl
jle
sahf
mov
out
dec
rorb
mov
adc
scas
jp
in
jmp
jecxz
adc
push
mov
mov
pop
dec
clc
push
mov
mov
int
in
mov
dec
inc
decl
inc
xchg
pop
pop
and
sub
xchg
xor
insb
mov
push
stos
mov
pop
jmp
in
rorl
push
xor
loop
aad
int
jge
dec
and
fs
xchg
dec
in
mov
xor
dec
dec
xchg
shrl
ss
out
ficompl
pop
inc
jne
cltd
clc
ljmp
pop
push
mov
pop
push
lret
dec
xlat
vandps
jne
mov
jle
mov
imul
bound
shll
sub
push
or
sub
dec
mov
cmpsl
cli
cmp
dec
adc
mov
fisttpl
mov
mov
pusha
out
cmpsb
add
sbb
cli
adc
xchg
in
or
call
les
xor
jecxz
ret
bnd
and
outsb
cltd
and
iret
xlat
mov
test
push
add
sbb
pop
aas
push
jecxz
roll
sub
cmpsb
dec
push
fisubl
iret
in
lea
aaa
sbb
into
mov
inc
addb
mov
xor
and
add
and
sti
sbb
sub
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
nop
jl
xor
js
jl
dec
push
andl
insb
in
repz
push
frstor
mov
push
and
mov
test
popf
fwait
xor
xchg
enter
dec
inc
jae
lret
mov
les
imul
icebp
fiaddl
mov
cmp
push
sub
cwtl
mov
mov
pop
aaa
es
shlb
sub
sbb
jae
inc
mov
push
xchg
push
cld
add
add
cmp
cmp
imul
stos
nop
cli
fwait
mov
repz
jb
mov
lret
scas
loope
scas
repnz
sahf
insb
subb
sub
cs
xor
or
add
mov
stos
mov
push
in
xchg
call
call
xchg
test
das
and
in
aaa
in
daa
lea
cli
test
jnp
xor
ficoms
divb
push
movsb
fistpll
mov
xsha256
cmpsb
xchg
jmp
clc
pop
pop
xlat
xor
xor
mov
lods
enter
push
loope
push
mov
pop
sub
cmpsl
jg
fimuls
sarl
aad
sbb
ret
mov
cmp
cmp
sub
mov
jns
push
aam
mov
mov
jno
xlat
jae
cli
xchg
cwtl
cmp
cmp
add
test
fcomps
xlat
outsl
mov
lret
rcrw
outsb
xchg
mov
push
inc
stc
pushf
jmp
mov
mov
pop
divb
cli
xchg
add
ret
push
or
and
lea
imull
aaa
ds
xor
sub
inc
cld
insl
cmp
sbb
push
pop
cmp
add
xchg
fmul
xchg
xor
dec
mov
xchg
or
test
in
pop
add
mov
in
popa
inc
int3
faddp
xor
cmp
pop
push
inc
ret
arpl
cmp
mov
jecxz
int3
mov
xor
add
push
mov
sbb
out
mov
mov
sbb
add
push
popa
mov
repz
loop
stos
pop
mov
cmc
movsb
mov
sbb
lret
outsl
sub
fisttpll
dec
in
add
imul
in
jno
out
ja
xor
mov
test
mov
test
in
xchg
fisttpl
dec
daa
mov
dec
cmp
and
sbb
xchg
cmc
test
cmp
andl
cmpsl
mov
adc
adc
mov
aam
popa
pop
and
rcr
mov
xlat
insb
pop
push
xor
inc
lds
in
es
in
cmpsl
scas
or
push
sarb
aas
int3
movsb
or
pop
and
dec
subl
aad
inc
js
repnz
jmp
rol
ror
aad
xchg
mov
aad
roll
mov
js
cmp
dec
insl
pop
in
mov
or
inc
fsubrl
mov
cmpsb
mov
out
xlat
adc
xor
testl
jmp
pop
and
add
mov
cwtl
cltd
pusha
dec
cmp
es
lods
arpl
out
cs
or
cmp
push
mov
push
andb
add
jns
inc
inc
lods
cwtl
scas
push
int3
dec
pop
xchg
iret
push
cld
les
inc
xchg
popf
call
mov
iret
or
fisubl
push
pop
movsb
mov
movsb
pop
aad
jge
cs
nop
aaa
add
jmp
pop
scas
mov
xchg
push
inc
andb
test
dec
dec
or
daa
xor
dec
lea
xchg
daa
out
lock
lds
mov
ficoms
add
fcmovb
cmp
mov
insl
lea
in
jl
mov
mov
dec
adc
or
mov
or
inc
lods
or
imul
pop
dec
aam
in
lret
pusha
dec
inc
out
imulb
bswap
sub
push
or
les
lods
sub
mov
jmp
jno
add
repz
or
icebp
jge
push
jns
xor
or
push
mov
jp
and
subl
push
scas
pop
clc
aam
inc
cmp
cmp
out
dec
mov
sub
lea
push
in
or
cltd
push
pop
fisubl
pop
add
inc
nop
sub
insb
movsl
negb
cmp
fnsave
sub
inc
icebp
jl
push
rolb
adc
sbb
xchg
cmp
cmp
push
adc
dec
push
or
cmp
cmp
or
orl
and
pop
push
push
pop
es
sti
imul
movsl
fisttpl
jae
sub
sub
cltd
enter
arpl
rolb
adc
mov
pop
loope
dec
or
mov
lock
sub
in
in
and
out
dec
or
pop
sbb
ret
jne
sub
stc
push
cmpsl
or
mov
xor
fldenv
scas
cmc
jbe
adc
xchg
ficompl
mov
addr16
push
lcall
iret
arpl
jecxz
pop
negb
fcompl
jg
xor
ja
jns,pt
lock
dec
sbbl
pop
notb
mov
adc
stos
cs
pop
jle
push
xor
insl
sub
fs
add
movsb
repz
andl
cmp
sti
addr16
stc
cmpsb
insb
dec
fidivs
mov
xor
jge
aas
or
stos
lret
jnp
lret
push
lahf
sub
pop
lds
xchg
adc
test
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
jbe
and
js
jle
js
aam
mov
stos
ret
pop
popf
lret
push
cmp
mov
mov
ja
xchg
stos
je
mov
sbb
xor
sar
fnclex
mov
jns
sbb
push
ret
add
sub
push
and
in
cmc
dec
xchg
inc
pop
out
dec
xchg
and
test
sbb
and
push
xchg
sbb
add
es
mov
cmpb
movl
xchg
sarl
sub
mov
pop
insb
rol
lea
out
sbb
mov
lret
sbb
movsb
sub
xchg
stc
lods
fmulp
push
sbbb
mov
int3
pop
sub
dec
mov
pop
iret
sub
pop
jmp
mov
in
rcrl
das
lods
xlat
dec
ss
das
cmc
sbb
sub
add
inc
inc
movsl
movsb
scas
fnstsw
incl
imul
cmp
lahf
or
loop
addl
testb
xor
and
mov
xor
subl
or
push
mov
call
insl
ret
mov
aam
stos
jns
pop
xchg
inc
pop
stc
arpl
shl
pop
inc
js
movsl
mov
dec
push
xchg
sbb
sbb
mov
leave
lret
xchg
pop
leave
icebp
cmp
mov
jmp
jl
enter
lea
push
add
popa
fisttps
lods
and
pop
loopne
test
mov
push
jno
xchg
cmp
xchg
mov
call
jl
jle
xor
cli
pop
adc
dec
out
mov
inc
bound
pop
xor
enter
loopne
mov
push
fst
adc
fs
jae
movsb
lret
or
jmp
enter
out
dec
xor
lods
jbe
dec
adc
out
xchg
jae
scas
fcmovbe
mov
inc
dec
pusha
xor
dec
imul
in
sahf
jbe
or
jae
and
shl
test
sub
clc
negl
xchg
imul
cmpsl
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
sub
movsl
js
xor
daa
repz
dec
jbe
mov
xor
dec
or
idiv
nop
out
sbb
push
inc
mov
inc
das
inc
std
xchg
sub
ljmp
pop
test
dec
int3
ret
jbe
out
mov
or
xor
mov
xor
aaa
or
push
inc
fiadds
out
pop
into
push
mov
xor
aaa
test
stc
sub
lds
mov
sbb
addl
in
jb
fists
jne
sub
dec
jbe
xor
mov
jb
out
ljmp
fmul
mov
insl
mov
data16
pop
nop
cwtl
pop
push
aaa
hlt
pop
mov
jg
xor
sbb
decb
cmp
jbe
pop
out
shrb
and
mov
mov
mov
lods
pop
inc
sub
mov
pushf
int
aad
ja
cmp
int3
test
dec
int3
push
iret
bound
xor
add
lret
or
pop
jmp
push
mov
xor
fs
jne
or
xchg
imul
add
xchg
inc
sub
aad
dec
out
mov
outsb
mov
call
adc
mulb
xor
int
mov
hlt
xchg
sbb
adc
movsb
inc
cwtl
add
cwtl
sbb
test
in
mov
sub
pop
inc
sbb
lahf
bound
push
mov
icebp
scas
inc
shl
inc
mov
insb
sub
popf
les
jbe
and
mov
jbe
push
and
mov
push
jne
outsb
add
hlt
inc
inc
adc
punpckldq
insb
stc
sub
repz
filds
sub
in
std
xchg
enter
lock
mov
cmp
push
adc
dec
insb
inc
mov
data16
nop
jmp
popa
mov
mov
pushf
lock
lahf
imul
mov
fbld
push
inc
imul
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
loopne
inc
je
stos
js
xor
fiaddl
stc
cmp
and
clc
inc
ljmp
daa
and
lret
add
xor
cmp
cld
dec
mov
aaa
lahf
push
cmp
mov
jmp
das
and
sarl
jno
push
mov
lods
push
sub
inc
jne
pop
into
subl
jp
shll
mov
jae
xchg
cltd
roll
mov
test
mov
xor
idivb
repz
push
ret
rolb
sahf
incl
sbb
icebp
jmp
cwtl
data16
mov
adc
jnp
adc
in
in
lods
pushf
mov
jg
arpl
aad
mov
mov
adc
jbe
dec
in
xlat
test
stos
mov
sub
ljmp
jb
insl
pop
sub
imull
jns
insl
mov
jmp
std
movsb
cmp
sbb
lock
xchg
cs
jb
pop
out
into
jnp
idivl
adc
dec
dec
notl
cmp
out
pop
shrb
testb
pop
call
push
push
pop
jnp
and
adc
jnp
clc
jb
pop
or
adc
sti
std
jno
sub
ror
inc
sbb
test
mov
ret
dec
lods
aad
cwtl
xor
iret
jb
in
out
movl
xchg
sbb
cltd
icebp
jne
in
adc
popf
das
aad
scas
xor
push
lea
stos
sbb
pop
ss
xchg
fcmovne
ljmp
xchg
jbe
xor
cli
xchg
bound
jae
fcmovb
les
or
or
bound
inc
fwait
iret
cmpsl
push
cld
lods
sub
in
clc
cmp
mov
mov
ljmp
mov
ds
inc
xchg
or
inc
push
push
fwait
adc
pop
out
hlt
cltd
push
add
lock
mov
sub
je
cmpsb
in
das
inc
mov
inc
pop
xor
xor
sub
ljmp
jle
into
addb
movl
jne
and
jmp
int
into
aad
lea
int
pop
test
js
mov
jmp
rcrb
mov
jns
inc
dec
cmc
or
pop
jecxz
ss
xor
icebp
inc
test
out
add
test
mov
add
adc
jno
stos
dec
dec
jo
popa
dec
lcall
mov
int3
ljmp
xchg
xor
cmp
xor
or
pop
fldt
subl
lock
inc
jb
sub
inc
pop
jnp
inc
js
adc
movsb
popa
cmp
outsb
negl
cs
bound
cmp
adc
xor
push
sbb
rolb
xor
pusha
cmp
jg
bound
mov
fcmovne
shll
fxch
push
xchg
push
out
test
jne
icebp
in
inc
cmp
or
adc
test
dec
repnz
std
outsl
dec
push
add
sub
dec
ret
mov
adc
in
mov
popa
sub
lea
rorl
xor
mov
out
sub
aad
scas
push
lock
iret
or
mov
pop
aam
pop
push
outsb
bound
sbb
std
jne
push
mov
fst
cwtl
insb
enter
pusha
gs
dec
in
mov
shll
testl
fdivs
jbe
sub
shlb
push
mov
jecxz
shl
push
js
aas
dec
rorb
fcmovne
or
decb
arpl
xchg
jnp
dec
sarl
cli
fwait
jp
dec
rcrl
xchg
sbbl
loopne
jns
xchg
cld
inc
pop
jno
fldl
push
pop
ret
jno
mov
es
ljmp
out
inc
popa
inc
adc
repz
iret
jnp
dec
mov
mov
mov
push
xchg
cmp
fstl
in
sbb
pop
sti
mov
dec
mov
call
push
loop
in
lea
dec
lret
fldcw
mov
dec
lods
mov
sbb
jecxz
and
sbb
cmc
dec
fmuls
movsl
ss
push
int
cmpsl
fs
xchg
pusha
stc
inc
xchg
stc
cmp
sbb
outsb
sbb
cld
into
fwait
sbb
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
inc
jge
call
xor
cmp
cltd
push
push
mov
popf
cltd
mov
mov
dec
or
lea
inc
sub
pushf
cmp
cmp
or
jae
clc
call
aam
pop
add
stc
mov
sub
fidivs
loop
ds
sub
repnz
sarb
jb
mov
sbbl
fdivrl
and
push
jne
cmp
addr16
int
int
loope
loope
adc
je
test
shl
sub
cltd
pop
je
cmp
aad
cmpb
or
dec
sub
fildll
stos
pop
div
mov
cmp
add
push
imul
std
mov
addl
inc
mov
inc
out
adc
clc
cmp
sbb
jle
fsin
push
jmp
daa
jno
ffreep
jno
push
popf
jp
add
and
pop
movsl
shll
cwtl
or
popf
mov
jae
add
dec
push
pop
test
shlb
out
scas
mov
idivl
dec
or
cli
and
mov
sbb
xchg
ret
das
sub
enter
dec
addb
lahf
loop
push
mov
xor
pop
add
and
outsb
mov
or
pop
sub
jge
dec
lahf
xchg
mov
cwtl
sbb
xor
mov
aaa
gs
push
mov
stos
rclb
and
gs
push
jl
adc
mulb
or
add
lret
hlt
je
in
pop
push
adc
adc
or
bnd
sub
fwait
or
mov
cltd
jbe
xchg
ljmp
mov
ficoml
adc
push
pushf
dec
dec
in
jmp
lods
and
mov
sub
lahf
pop
mov
movsb
xlat
out
dec
pushl
or
out
shl
mov
add
stos
ljmp
into
or
add
jno
adc
mov
fbld
orl
cmpsl
jmp
out
fisubs
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
cmp
inc
push
shrl
js
arpl
call
in
push
test
pusha
das
pop
xchg
repnz
inc
pop
xchg
and
jb
out
mov
mov
add
inc
jmp
cli
orb
out
dec
sysret
or
pop
jmp
or
add
clc
cli
outsb
out
fcoml
ds
xor
test
sub
dec
les
push
decl
decl
sub
sbb
cwtl
jecxz
xchg
add
mov
ror
and
xchg
lock
jle
in
xchg
repz
mov
fs
cld
cld
cmp
test
xor
incl
push
cmp
data16
outsl
clc
push
jmp
bound
repnz
pop
cmpl
xor
push
ljmp
mov
jnp
mov
xchg
mov
stc
enter
push
sub
jnp
mov
scas
cli
lret
jmp
jl
sub
lods
sub
sub
jae
jp
clc
leave
xchg
loop
cmp
rol
sub
mov
pop
inc
es
mov
insb
gs
mov
aam
pop
sub
in
push
cmp
clc
hlt
push
xchg
mov
pop
insb
mov
pop
loop
adc
clc
test
pop
inc
xchg
xchg
mov
sub
dec
or
cmp
sbb
out
fst
out
ds
jns
inc
inc
imul
jmp
outsl
test
cmp
sub
es
je
mov
popl
imul
int3
out
out
add
push
cmp
xor
sbbl
ret
cmp
jge
inc
jl
outsl
aas
inc
mov
xchg
mov
or
icebp
pop
std
add
inc
jg
ja
iret
loope
mov
jae
xchg
pop
cwtl
mov
sbb
aad
js
jle
jo
push
add
and
iret
xor
mov
push
mov
mov
scas
je
mov
and
ret
outsl
mov
and
cltd
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
jnp
and
jle
js
lahf
das
adc
xor
dec
idivl
jno
ljmp
jp
loop
mov
into
mov
gs
fdivrs
loopne
xor
int3
stos
xor
les
testb
js
jns
in
adc
mov
sbb
stc
mov
aaa
shl
mov
mov
in
fadds
mov
popf
pop
add
add
nop
leave
fnstcw
imul
add
clc
out
adc
shr
or
mov
dec
ss
ret
mov
aad
aad
cli
in
push
mov
je
loop
in
cmp
stos
push
mov
loopne
push
pop
test
movsb
jae
jl
inc
or
or
fisubrs
xor
mov
dec
lret
movsb
adc
mov
cmp
adc
cmpsl
lods
fadd
ret
push
fdivr
aas
daa
test
enter
mov
and
sbb
jp
rorl
adc
jp
pop
inc
add
stos
aam
imul
imul
jmp
js
imul
les
addl
test
out
out
lret
adc
xor
cmpsl
mov
add
mov
mov
and
sbb
and
enter
sub
mov
stos
rclb
cmp
cmp
add
mov
add
aas
ljmp
mov
in
test
mov
arpl
nop
adc
lret
jae
lea
enter
out
mov
mov
add
shrb
loopne
xchg
test
inc
gs
or
or
add
clc
mov
inc
aas
imul
mov
cmp
hlt
xchg
mov
repz
add
in
je
mov
cli
adc
int
push
leave
fsubl
sbb
rclb
ret
add
les
fs
into
shl
ds
mov
mov
ror
cmp
push
cmp
jg
push
movsl
es
jne
dec
fcompl
movb
push
jmp
xlat
lret
fcmovu
aas
cmp
push
push
mov
daa
inc
mov
js
jle
js
cmp
add
dec
and
fs
cmpsb
mov
adcb
inc
aad
es
ljmp
lods
mov
pop
jne
into
jb
inc
mov
mulb
cmpsl
jne
jbe
lea
mov
loopne
xchg
sub
aam
ret
mov
rclb
dec
or
inc
push
or
add
daa
jl
les
xchg
fimuls
stc
test
lock
stos
mov
in
inc
fwait
xchg
xchg
into
ss
scas
hlt
cld
sbb
push
mov
xchg
push
pop
or
pop
subl
imul
dec
mov
loope
outsl
pop
xorl
repnz
jecxz
call
popf
test
jnp
jb
xor
adc
xchg
cmpsl
pop
mov
ss
bound
sbb
idivl
in
rcrl
stos
je
xchg
xchg
mov
sti
sub
scas
fbld
sahf
pop
das
jg
jmp
mov
jno
inc
cmpsl
jg
dec
cmp
lods
mov
rorl
movsl
jl
cmp
inc
or
loopne
cli
cmp
push
jbe
mov
addb
daa
in
push
out
or
les
jle
and
jmp
ret
test
scas
xor
cli
xchg
sub
inc
push
jle
fwait
mov
loop
cmpps
aas
ret
xor
cmp
loope
dec
fildl
leave
popa
es
addl
dec
movsl
sbb
add
out
sti
jecxz
ss
loopne
aam
pop
ss
ja
std
fstpl
cwtl
pop
loope
insb
aaa
jl
mov
add
lods
out
sub
pop
ret
inc
jbe
sti
in
cld
lods
repnz
fidivl
repz
push
test
movsb
pushl
push
repnz
jp
add
adc
das
mov
jbe
popf
xchg
cmp
push
aam
pop
repnz
push
pop
pop
sub
out
lock
into
int
or
mov
daa
dec
insl
icebp
jle
fcomi
inc
xchg
ror
mov
jae
lds
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
jle
js
pop
jns
lahf
clc
mov
lahf
mov
xor
pop
sub
xor
fimull
popa
jle
lock
outsl
aam
mov
or
lock
sahf
lea
sbbl
dec
xor
adcb
mov
mov
dec
pop
popa
fwait
ljmp
pop
out
stos
pop
inc
fistps
or
inc
mov
sub
std
jo
sbb
and
sub
enter
mov
dec
out
call
xor
xchg
cmp
inc
stos
push
lcall
pop
xor
sahf
repz
pop
pushf
sub
mov
add
xchg
pop
jnp
je
jle
hlt
andl
in
outsb
jl
sub
pusha
mov
add
mov
jb
cltd
fbstp
testl
aaa
popa
push
dec
or
pop
sbb
loopne
cli
aaa
aas
jg
out
pop
add
jmp
mov
mov
jne
stos
jp
jb
mov
or
fs
rcr
std
jns
cmp
cltd
inc
mov
xor
aam
cld
cld
stc
or
xor
aaa
stc
inc
inc
or
pop
pop
jbe
cmp
jmp
mov
jg
neg
ja
sarb
loope
pop
jo
dec
hlt
sbb
sub
sbb
lods
in
dec
mov
outsl
lcall
push
sub
mov
xchg
leave
daa
out
xor
popf
cmp
outsl
dec
add
fnclex
out
fistpll
lcall
mov
push
mov
push
call
mov
and
push
mov
xchg
in
iret
arpl
inc
and
ljmp
sti
adc
pop
movsb
xor
fdivrp
jae
out
jnp
popa
mov
fstl
jge
in
cmp
andl
outsb
lods
or
inc
push
xchg
dec
enter
movsb
jnp
push
icebp
movsb
mov
ret
test
mov
dec
mov
mov
out
pminsw
sub
int3
clc
mov
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
lods
xor
lock
lahf
dec
and
mov
mov
mov
movsl
roll
mov
shrb
xor
fcoml
in
or
fadd
ret
push
shl
push
je
pop
ret
out
jle
cmc
aam
inc
in
fisubl
out
addr16
add
pop
jbe
and
int3
popa
call
dec
jb
in
sarl
lret
lret
rol
push
mov
movsb
push
ljmp
lock
dec
push
sti
xor
fldenv
cld
loopne
cld
mov
add
das
negb
push
sahf
pop
pop
ljmp
mov
dec
mov
cmp
add
test
xor
loope
xor
adc
pop
js
out
mov
loope
jb
mov
jp
enter
inc
sti
test
xchg
inc
jno
stos
lds
arpl
sbb
xchg
or
lods
and
mov
and
xor
gs
mov
cltd
popa
nop
and
push
imul
jg
aad
jb
xor
and
mov
stc
cmp
add
lds
jo
jne
jne
fldcw
cmp
pop
popf
or
aas
xor
add
hlt
cmp
cmp
mov
adc
cld
or
pop
pop
bound
lcall
int3
cmpsl
fdivl
adc
cmp
push
push
and
dec
inc
stos
pop
or
sbb
cmp
xor
shrl
hlt
lret
leave
daa
shrd
push
ja
arpl
mov
jp
and
shrb
test
sbb
stc
xchg
iret
inc
push
clc
jne
xor
pop
sbb
sub
xlat
xor
cmc
push
sub
jne
roll
inc
enter
mov
xchg
add
mov
sub
jno
orl
pushf
pop
xchg
pop
or
inc
jmp
scas
and
vphsubdq
and
pop
push
repz
or
popf
add
push
mov
or
jno
sbb
jbe
pusha
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
adc
scas
jle
mov
js
fdivrl
adc
call
mov
xchg
sub
xchg
in
adc
imul
das
pop
xor
scas
sbb
jmp
into
xchg
bound
iret
ds
sarl
pusha
lret
lahf
addr16
jp
loopne
repnz
xchg
lds
inc
lods
xchg
stc
xchg
dec
iret
adc
lds
mov
jp
cli
sti
lods
repz
push
adc
and
push
lock
insl
adc
sbbl
addr16
adc
clc
xchg
xrelease
cs
clc
cwtl
jo
movsb
cltd
pop
xor
ret
sbb
test
and
inc
rorb
iret
sbb
jb
and
mov
sti
and
fistpll
outsb
cmp
aam
sub
xchg
pop
jmp
imul
pop
arpl
mov
das
imul
sbb
aam
fisubrl
mov
pop
mov
addr16
loop
mov
cmp
or
push
rolb
fsubl
in
sbb
jno
jmp
and
mov
notb
ljmp
test
adc
mov
popa
mov
push
dec
ljmp
mov
ss
jmp
ficoml
js
fsts
bound
imul
mov
xlat
mov
aas
jle
xchg
adc
dec
push
aam
sbb
scas
xlat
xchg
jg
mov
xor
test
cmpsl
xor
mov
lock
adc
sbb
rclb
fdivrp
adc
sahf
cmc
ja
jae
sbb
and
push
mov
dec
jne
sbb
sub
pop
ret
sbb
pop
pop
clc
call
fdivrs
sarb
push
pop
leave
lret
cli
xor
inc
dec
incb
sub
dec
imul
sub
jle
dec
fldl
push
push
and
dec
call
sbb
adc
pop
add
push
pop
add
cmpl
ret
inc
dec
imul
push
push
mov
fstpl
xlat
or
pop
out
dec
test
flds
adc
jno
cld
mov
iret
cmpsb
mov
jge
inc
add
or
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
sbb
mov
js
xchg
mov
mov
shrl
and
push
aaa
lret
add
rorb
or
int
xor
pop
sbb
cmp
xchg
pushf
inc
enter
movsl
inc
mov
sbb
rcl
stos
or
mov
dec
cmpsb
out
loope
ljmp
mov
leave
ljmp
cltd
sbb
push
int3
adc
stc
mov
and
outsl
sub
lret
and
lods
insb
mov
sub
incl
sub
xchg
sbbb
sbb
je
rcrb
sahf
out
js
in
and
mov
or
mov
mov
xchg
sub
ss
adc
lcall
nop
negb
and
orw
dec
cmp
arpl
mov
cmpb
adc
pop
cmp
jne,pt
mov
stos
pop
xor
pushf
xchg
sbb
jo
lds
test
aas
mov
mov
inc
aas
sbbl
jmp
aad
out
jmp
mov
jno
mov
aad
movsl
or
jb
ds
sbb
mov
jns
pop
cmp
cs
jbe
inc
sub
cmc
push
les
cs
inc
adc
xor
or
loope
adc
pop
dec
push
mov
inc
fs
fwait
mov
lods
addr16
sti
mov
out
jno
rorl
push
mov
or
je
adc
adc
xchg
fwait
lock
loope
xchg
loop
fnstenv
push
shll
jns
subl
dec
xchg
cmp
ss
imul
pop
or
call
xchg
sbb
mov
les
jge
mov
pop
clc
jno
jge
xchg
outsb
daa
sub
xchg
movsl
cld
and
xorl
sub
test
jl
dec
add
add
jmp
push
call
xlat
lret
jmp
es
shl
add
xchg
jle
pop
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
filds
into
mov
js
inc
std
mov
insl
divb
fmull
mov
fcmove
jae
push
cwtl
or
adc
pop
jl
clc
xor
adcl
and
xchg
ja
cmp
in
sahf
mov
fwait
imul
mov
les
jbe
movsb
test
aad
jno
cmpsl
xor
mov
push
cwtl
add
cmp
pop
mov
and
mov
data16
ret
cmpb
das
xchg
cmp
mov
mov
sbb
iret
popf
push
scas
pop
sub
dec
pop
lods
loop
jecxz
pop
enter
roll
int3
mov
vmwrite
outsb
pop
cmp
and
add
stos
pop
sub
adc
enter
xlat
pushf
in
mov
insb
mov
push
adc
add
cli
adc
and
xchg
adc
xchg
les
lahf
and
push
stos
mov
movsb
in
stc
repz
popa
imul
in
shlb
inc
sbb
adc
scas
mov
jp
cmc
shll
test
sahf
jno
shr
arpl
dec
xor
pushf
add
push
sbb
imul
or
stos
add
xchg
xchg
ja
dec
mov
cmpsb
add
inc
inc
mov
das
loope
jg
mov
scas
sbb
pusha
stc
xor
sbb
imul
ss
addr16
outsl
andl
cmp
inc
inc
mov
lea
inc
in
imul
loope
cltd
fidivrl
xchg
xchg
fsubp
loop
pop
shrb
mov
jp
outsl
sub
arpl
lods
pop
push
jecxz
icebp
mov
xchg
mov
or
cmpsb
mov
test
out
cmp
sti
mov
push
and
cld
lea
fmul
pop
lcall
lods
push
or
in
push
lock
sub
xchg
fisttps
or
scas
arpl
gs
adc
pop
in
mov
in
dec
imul
and
sbb
mov
popf
mov
jo
cmp
jge
cmc
push
push
push
int
ret
out
and
arpl
jle
push
and
bound
lock
js
ja
inc
pop
push
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
ror
sub
js
jle
js
loop
adc
repnz
ds
cltd
pushf
in
push
add
out
out
xor
pushf
stos
arpl
mov
sbb
adc
stos
mov
data16
dec
mov
jnp
andl
or
jnp
clc
lahf
mov
leave
inc
stos
sbb
into
lods
mov
xchg
movsl
lahf
lods
repnz
sub
fiadds
imul
mov
or
jo
int
lret
call
into
adc
lock
sub
out
in
shrl
or
andl
jbe
loopne
mov
cmp
sbb
sti
mov
sub
adc
das
inc
dec
jbe
fidivs
fmuls
mov
ret
clc
lret
add
push
mov
mov
cmc
cmp
loop
xor
lahf
cwtl
dec
outsl
push
jge
movsl
or
sub
jl
test
fwait
dec
inc
xlat
sub
dec
xlat
sub
dec
jecxz
push
fnstsw
ds
xchg
cmp
data16
daa
push
das
cltd
mov
repz
dec
lret
fstpt
cltd
cmp
jg
jnp
push
stc
add
mov
jns
mov
push
jl
lret
out
or
and
stc
cwtl
dec
mov
sti
ljmp
xorb
cwtl
mov
inc
movl
loop
adc
jno
imul
push
mov
jg
push
leave
test
push
sub
aam
xor
push
mov
popf
sbb
adc
pop
mov
cmp
jbe
addr16
leave
cmp
cmp
mov
and
popa
lret
jne
movsl
pop
repz
and
cmc
addr16
addr16
sub
scas
test
xchg
sahf
cli
movsl
int3
test
push
mov
ret
mov
push
ffreep
lret
lahf
push
clc
add
push
dec
jbe
mov
mov
loop
pusha
adc
dec
pop
stos
fwait
mov
in
or
or
sarb
movsl
data16
xor
push
movsb
pop
inc
fwait
cmp
cmp
sub
add
movsb
lret
rorl
sarl
cli
movl
jmp
ret
ret
lret
test
aas
and
js
jle
js
and
xchg
ret
inc
insb
pop
inc
pop
cmc
sti
jp
adc
insb
mov
cmp
xchg
movsb
mov
or
push
lods
mov
adc
adc
mov
adc
jl
arpl
push
jnp
inc
dec
lods
pop
cltd
addr16
dec
jg
push
in
shrb
or
push
sbb
add
ret
jl
into
sbb
or
out
jno
outsb
pop
dec
adc
push
mov
mov
jae
fsubr
fildll
outsb
sbb
ret
shll
xor
and
push
clc
cmp
orl
aas
lock
mov
in
mov
sub
repz
inc
shrl
pop
lods
pop
cmp
jbe
pop
call
or
mov
cmc
jns
in
adc
cmp
jae
cmpsb
repnz
sahf
insl
jno
movsl
lahf
cld
push
dec
test
add
popf
cwtl
push
jl
inc
test
cltd
jne
xor
xorb
sub
mov
repz
cmp
or
in
rcr
enter
pop
xchg
sub
dec
loope
xchg
aas
decl
fisubrs
scas
or
cwtl
nop
inc
and
sub
push
cmc
rcrb
jg
repnz
sub
add
leave
sub
sbb
rcrb
jmp
popf
cli
mov
pop
jne
pop
sbb
rcrl
stos
xor
pop
lcall
dec
mov
mov
test
enter
shrb
adc
jle
clc
insb
jp
std
mov
data16
adc
dec
mov
xchg
xchg
dec
cli
fstl
push
mov
jmp
sbb
and
sub
clc
ljmp
inc
pop
push
xrelease
inc
cmp
mov
out
cmp
ja
not
push
shl
and
lods
xchg
mov
mov
leave
test
cmc
outsb
jle
popf
in
xor
xchg
jge
mov
add
inc
jmp
sub
hlt
adc
fcoms
xchg
loopne
icebp
stos
insb
outsb
ss
ja
shrb
push
push
sub
or
jmp
xchg
incl
jp
and
add
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
ljmp
in
js
xchg
inc
lods
popf
mov
add
mov
push
pushf
jno
and
das
sub
fwait
mov
js
mov
sub
test
out
test
das
mov
lret
cmp
push
pop
mov
movsb
inc
test
pop
insl
mov
cmpsl
aad
clc
or
movsb
sbb
push
sbb
mov
push
mov
jbe
push
dec
mov
fimull
and
lahf
adc
pushf
cwtl
sbb
xchg
js
pop
mov
cmpsl
rcl
or
sub
mov
scas
pop
push
inc
outsl
arpl
icebp
jb
mov
dec
jns
add
xor
dec
push
daa
test
xchg
add
dec
test
jbe
inc
test
jno
adc
cmc
cltd
out
pop
scas
cltd
mov
in
inc
stc
clc
pop
repz
pusha
sbb
inc
insb
ror
cmp
cmp
push
mov
arpl
decb
dec
iret
das
sub
sbb
mov
movsb
cwtl
mov
je,pt
js
or
popa
xchg
pop
aaa
mov
fwait
in
das
and
ret
jecxz
ret
adc
jl
cmpsb
adc
das
xor
stc
jns
mov
inc
dec
stos
and
mov
adc
sub
rdmsr
sbb
aaa
add
pop
inc
lea
mov
cmp
data16
lods
jmp
rcll
lods
test
push
daa
mov
loope
sahf
shl
arpl
int3
adc
mov
fistl
popf
or
ds
sbb
push
cwtl
pop
jbe
pop
lods
inc
cltd
popf
jb
aas
push
testb
test
iret
add
lock
jne
rolb
shlb
test
mov
xchg
lds
push
adc
sbb
jno
mov
aaa
jecxz
mov
cmpsl
pop
sbb
jo
inc
dec
mov
test
ficomps
sub
pop
cmp
adc
mov
sbb
sub
dec
xchg
dec
adc
in
add
incl
adc
imul
dec
adc
and
js
aaa
loop
sub
movsb
adc
int
cltd
ja
xchg
out
mov
lods
stos
sbb
pop
js
cmp
fdivrs
rcrl
cli
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
int3
pop
mov
js
jle
js
dec
mov
jne
xor
imul
movsl
repnz
insl
pop
adc
imul
adc
js
ds
fisttpl
out
sahf
cmp
and
add
into
iret
mov
mov
hlt
fcompl
pop
in
bound
ljmp
mov
shrb
mov
xchg
push
mov
sub
scas
repz
dec
inc
sub
xor
orl
cmovle
jle
aam
arpl
mov
xchg
out
inc
test
cs
imul
push
mov
push
dec
into
rcll
sub
gs
leave
aad
xor
pop
cmp
xchg
insb
out
pop
add
add
cmp
add
outsl
dec
jp
push
or
adc
movsb
jns
xor
aaa
fsubs
ja
cmp
dec
mov
bound
aaa
and
xlat
or
pop
sbb
ret
bound
mov
dec
nop
ss
adc
sbb
mov
xor
sbb
xor
xchg
outsb
push
shll
repz
addl
jge
leave
out
cmpsl
push
dec
movb
fldt
mov
adc
fldt
mov
push
lods
cmc
xchg
jp
mov
dec
repz
xor
and
adc
stc
sub
lret
mov
inc
outsb
faddl
pop
outsl
int
and
or
jo
or
enter
addl
pop
mov
arpl
outsb
adc
ljmp
jmp
jne
sbb
xor
jo
mov
and
jp
xchg
jg
gs
cmpsb
sarl
mov
js
inc
cmpxchg
and
ret
xchg
dec
scas
jae
inc
outsl
push
xchg
out
ret
mov
mov
imul
adc
lea
xchg
mov
pop
sub
mov
shr
pop
ljmp
jecxz
push
loop
jmp
fwait
js
lret
jbe
mov
or
and
cmc
mov
pop
jmp
mov
bound
in
and
outsl
mov
xchg
mov
inc
mov
cmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
iret
inc
xchg
out
dec
js
in
js
push
in
or
enter
movsb
fprem1
aad
arpl
mov
lods
es
mov
mov
or
pop
adc
lds
mov
pop
lods
adc
pop
imul
pop
test
mov
psraw
sub
loopne
push
clc
mov
jae
lods
rcrb
aas
mov
adc
cmp
push
inc
adc
xchg
jmp
adc
gs
add
jmp
cld
por
stos
push
xchg
mov
cs
inc
sbb
iret
imul
or
fsubl
daa
or
add
lods
add
sub
mov
andl
sbb
and
arpl
pop
loope
loope
popf
fnstcw
icebp
and
ss
out
mov
xor
cmp
ljmp
aaa
push
or
jno
push
dec
std
mov
lods
mov
add
push
loop
pusha
std
shl
out
adc
into
inc
xor
sub
lret
inc
push
mov
inc
hlt
daa
in
mov
dec
sar
or
inc
cmp
xlat
xchg
and
dec
imul
xor
or
scas
xchg
jno
xchg
das
std
mov
xor
mov
cmp
aam
mov
jno
lock
fsubl
push
pop
pop
jb
xchg
in
push
int
pop
and
lret
popaw
insb
test
push
inc
fxch
jb
push
lock
sbb
xchg
outsb
mov
fwait
jne
sub
aas
or
das
cmpsb
inc
mov
xor
pop
mov
test
or
jne
and
mov
test
arpl
adc
add
mov
aas
fstpl
repz
add
arpl
movsl
jmp
mov
pop
insb
mov
enter
push
in
mov
fcmovbe
lret
fldl
gs
les
loope
lea
aam
jp
sub
call
inc
or
lods
xchg
cld
and
xchg
mov
rcrl
sbb
idiv
jo
lds
jb
add
jo
xor
or
lods
cli
sub
or
xor
xor
pusha
mov
shr
addl
add
int
into
xchg
jle
mov
jmp
js
jle
js
stos
lods
sbb
jecxz
cmp
loopne
add
sub
repnz
cwtl
push
jecxz
mov
inc
lret
lock
mov
subl
scas
in
test
pushf
lahf
in
sbb
mov
xchg
movsl
out
jl
push
jb
push
mov
stos
jbe
push
xchg
fcomps
and
fs
enter
and
push
inc
inc
mov
ffree
sahf
out
xor
sub
adc
or
dec
leave
cwtl
mov
scas
push
inc
pop
inc
or
aad
ds
stos
repnz
int
cltd
test
insl
mov
rclb
repnz
push
outsl
aad
and
or
sti
int
fs
int
mov
pop
fdivrs
push
sahf
insb
adc
aad
adc
imulb
push
cmp
rcrl
popf
scas
add
shrl
adcb
aaa
pushl
pushf
adc
repz
or
daa
insl
inc
add
je
scas
es
sbb
in
ds
divps
jne
xor
jge
ss
jg
add
mov
mov
shl
out
push
add
mov
xor
out
sbb
pop
ret
adc
xchg
mov
in
mov
leave
insb
out
push
int3
std
sbb
fs
jg
aas
add
psllw
jmp
pop
add
icebp
call
mov
mov
std
ds
or
shlb
jno
repnz
faddl
pop
call
xor
ficompl
les
scas
pop
push
or
or
mov
sub
sarb
mov
or
pop
nop
jmp
or
movsb
jg
cmp
sub
ss
andb
jecxz
cli
mov
add
add
sarb
xor
xchg
sub
pushf
mov
adc
sbb
clc
or
jle
lock
int3
ja
subb
and
push
out
bound
icebp
inc
bound
inc
out
and
jne,pt
mov
out
js
mov
in
lods
sbb
jno
and
add
add
cmp
scas
xlat
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
mov
enter
js
in
js
cs
lret
inc
imul
flds
pop
sarb
jp
mov
and
jle
popa
jp
cltd
das
fiadds
roll
out
je
loope
jnp
mov
out
jle
dec
or
adc
add
jno
or
loope
xchg
idivl
or
jmp
addb
jp
jg
push
xor
in
stos
out
aam
push
sbb
mov
pushf
lcall
pop
shr
push
push
push
shlb
dec
sbb
pop
les
cmpl
mov
ljmp
es
lock
aam
test
and
imull
mov
ret
mov
aam
mov
sarl
hlt
lret
orb
or
jno
mov
clc
or
daa
sub
stc
cli
xchg
xchg
push
std
addr16
inc
cmp
les
imul
push
out
shl
into
cwtl
loop
cmp
das
dec
in
mov
into
cld
push
ja
add
pop
inc
mov
cmpsb
sub
add
and
lods
clc
dec
dec
iret
loop
mov
and
push
dec
roll
ds
xor
popa
jle
stos
and
popf
or
ds
call
loop
dec
fwait
jb
loop
inc
mov
inc
sub
adc
int3
aam
test
or
xchg
adc
gs
and
notb
jo
mov
mov
mov
fimull
jg
add
or
xchg
ja
xlat
sbb
sub
mov
push
scas
sbb
or
jne
jge
inc
cmpsl
fidivrl
jecxz
insl
push
jae
dec
xor
push
dec
and
not
cmc
mov
out
insl
into
and
test
clc
sbb
sub
sub
xacquire
subl
arpl
shrb
or
divl
dec
lahf
sub
jo
add
aam
adcl
lods
inc
std
push
sub
insb
dec
fsubs
call
jo
repnz
out
xchg
pop
push
cmp
xchg
xlat
xor
cmpsl
stos
leave
divl
dec
movb
mov
js
out
icebp
adc
icebp
stos
xchg
sub
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
and
cmpsb
push
js
in
js
fbstp
sarl
in
call
jmp
test
lret
sub
bound
sbb
push
out
iret
movsb
ja
rolw
xchg
ficoml
xchg
inc
xor
cmp
jg
mov
push
je
nop
push
inc
or
adc
jae
out
and
iret
adc
fistps
enter
mov
insb
icebp
lods
add
xor
mov
divl
add
mov
mov
mov
lods
sub
outsl
adc
jl
mov
fnstsw
inc
mov
scas
sub
push
sub
jg
xchg
and
cmpsl
xchg
xchg
mov
xor
ljmp
testl
daa
stc
frstor
dec
jbe
iret
jl
lods
jg
pop
out
loopne
aas
jbe
pop
cmpsb
jbe
addl
add
nop
jns
into
dec
test
cli
mov
mov
mov
pop
cltd
popf
je
mov
xor
out
lea
xchg
fwait
mov
mov
cmpsl
test
or
mov
push
filds
pusha
adc
pop
mov
lret
ret
popf
jl
dec
daa
aas
shrl
add
lahf
xor
mov
xor
test
cmpsl
lock
pop
out
loop
test
ret
mov
popf
inc
sbb
lret
or
mov
shrl
xor
insl
int3
sbb
cld
adcb
cltd
push
push
fcmovne
movl
inc
mov
int
fimull
mov
je
xchg
loope
roll
icebp
andl
and
loop
pop
roll
les
pop
and
mov
push
dec
pop
mov
push
fs
ret
ss
popa
lret
loopne
call
mov
pop
mov
repnz
pushf
sbb
jb
and
pushf
repnz
xchg
call
mov
iret
xbegin
insb
ja
flds
adc
fs
pop
fsub
sub
push
push
mov
sbb
repz
push
push
out
cmpsl
js
daa
ret
push
popa
and
cld
jne
out
out
adc
popf
push
inc
int
fidivl
pop
xchg
lahf
push
ja
das
fisttpl
xchg
add
add
adc
add
cld
xor
xor
jmp
aas
lret
iret
aad
jo
lods
notl
js
in
js
testl
push
rcrl
loop
jecxz
cmp
testl
xchg
push
int3
jo
jp
in
cmp
mov
inc
push
sbb
xor
sbb
lds
movsl
out
ds
cld
dec
jno
mov
mov
mov
push
loope
data16
push
push
in
jge,pt
dec
lcall
adc
fisubrl
ret
adc
movsb
xlat
inc
push
xchg
xor
pop
jecxz
mov
lds
mov
inc
xlat
push
enter
jns
mov
and
shrl
pusha
mov
push
push
dec
jbe
outsl
rcrb
jle
add
in
rol
jmp
sbbb
pop
dec
lods
fcoms
adc
fwait
dec
push
lods
call
add
movsb
stos
imul
test
and
mov
sub
dec
subb
pop
jge
pop
test
pusha
pop
pop
in
fisubrl
bound
jle
cmp
cmc
sti
jmp
daa
ss
jbe
cmp
sbb
arpl
addr16
sti
lea
add
loope
mov
push
inc
pop
xor
js
sbb
ja
pop
punpckhbw
push
loopne
xor
add
repz
jnp
xor
dec
push
push
mov
mov
in
imul
sub
pop
faddp
add
mov
lods
dec
adc
cmp
out
lea
fld
dec
ljmp
mov
jg
pop
or
pop
dec
jl
xlat
cmc
js
pop
add
and
fmulp
repnz
cmp
sahf
je
xchg
and
push
cmp
push
jo
lea
push
sbb
mov
mov
sbb
jb
jnp
mov
mov
hlt
inc
dec
dec
sub
in
mov
dec
pop
mov
in
nop
bound
xor
fists
jo
in
fadd
int3
mov
popf
hlt
cli
inc
pop
cmp
imulb
aas
testl
jp
popf
flds
clc
jae
ja
nop
cwtl
mov
push
jno
rorl
mov
push
sub
adc
enter
adc
jnp
lods
fisttps
cmc
loop
adc
pusha
fwait
dec
out
push
jno
idivb
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
ja
lods
inc
clc
push
js
in
js
fs
into
ret
lcall
out
push
inc
das
leave
cltd
push
and
dec
adc
add
bound
xchg
and
jbe
icebp
mov
jae
push
int
ljmp
mov
adc
mov
dec
dec
cli
stos
and
mov
push
push
mov
pushf
popf
push
cs
push
repnz
outsl
jp
insb
std
xchg
sub
clc
cmp
inc
push
subb
jb
rclb
jl
arpl
inc
cs
pop
movsb
jnp
in
cli
jmp
rcll
mov
xor
loop
shrb
movsb
xor
jnp
push
outsb
adc
jnp
loopne,pt
sbb
hlt
sbb
cmpsl
leave
cld
test
and
sbb
jno
clc
pop
out
test
int
outsl
xchg
dec
shll
mov
lcall
sub
push
sub
and
mov
mov
out
leave
inc
push
cmp
cmc
fsubrl
ja
xor
jl
adc
adc
adc
sti
fsubrs
pushf
xchg
cmpsl
mov
and
out
pop
imul
mov
imul
xlat
xor
ret
cmpsl
mov
gs
xor
icebp
fcomip
stos
mov
lret
mov
dec
pop
mov
dec
mov
imul
loop
sub
lods
rorl
push
lahf
es
cmp
iret
int
pop
rol
imul
shrb
out
mov
in
gs
sbb
pop
pop
push
push
cld
cmp
cmpsb
pushf
mov
sub
mov
repnz
addr16
jg
lahf
in
jbe
cs
aam
int3
out
sub
movsl
popa
mov
shrl
jns
xchg
cmpsb
in
push
mov
int3
test
movsb
pop
xor
jg
sbb
negl
insb
aas
ljmp
imull
incl
mov
popa
int3
clc
push
lock
call
or
jl
negb
inc
mov
and
es
mov
inc
in
pusha
adc
and
adc
or
inc
ret
push
fwait
add
std
push
or
clc
cmp
mov
lret
or
pop
leave
movsb
xor
add
stc
jmp
int3
into
ror
rcl
into
jbe
inc
data16
lcall
jle
js
add
pop
inc
stc
pop
jl
movsb
jle
and
or
add
fcompl
stos
dec
push
or
xor
sbb
jp
adc
aaa
into
imul
adc
js
dec
cmc
xchg
popf
push
xchg
pop
xchg
pop
inc
outsb
lods
mov
inc
sub
jge
aad
lock
enter
inc
mov
pushf
or
pop
sbb
jg
in
outsl
xor
data16
ds
jb,pn
add
pushf
push
mov
push
mov
jns
adc
add
aam
outsl
nop
inc
in
jg
xor
int
popf
jns
dec
lock
push
lea
push
mov
rcrl
movsb
mov
mov
sbb
dec
push
mov
stc
jg
iret
cmpsb
pop
out
push
dec
lock
cmpsb
pop
push
pop
stos
int3
out
sbb
and
mov
shlb
cli
ds
popf
lds
js
dec
jno
testl
nop
sti
dec
push
jnp
pop
pushf
and
sbb
rorl
xchg
or
stos
xchg
addr16
test
test
lret
call
cld
xor
int
cwtl
mov
out
pop
cmp
les
mov
stos
out
jg
push
aas
or
shrb
pop
mov
shlb
mov
mov
lcall
push
cmp
xchg
jmp
mov
repz
les
out
mov
out
pop
aam
shll
mov
test
cmp
xor
sbbl
sahf
push
or
push
jae
xchg
jno
mov
and
xor
or
out
cmp
cmovp
mov
imul
adc
daa
and
adc
popa
imul
rcr
sub
mov
xor
push
pop
fsubl
pop
cmp
imul
push
mov
sub
popf
pop
or
jl
cltd
inc
dec
out
jae
cmp
jae
mov
xchg
cmp
adc
xchg
das
aam
test
xchg
int
mov
xchg
adc
lret
jg
jo
into
and
out
cmpsb
cmpb
xor
mov
mul
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
mov
jo
pop
js
in
js
dec
dec
xchg
inc
std
or
jmp
mov
rol
pop
mov
sbb
xor
lret
dec
loopne
sbbl
scas
push
jo
cltd
dec
mov
leave
and
push
jbe
xor
js
pushf
fadd
pop
sbb
or
cmpsl
mov
cmp
push
bswap
mov
push
nop
nopl
mov
push
mov
xchg
cmpsl
rep
dec
rcr
daa
mov
mov
mov
and
fmulp
adc
pop
push
mov
xchg
jnp
jno
pop
dec
adc
scas
outsl
outsl
hlt
fs
out
outsb
push
adc
ja
mov
dec
mov
fldl
lret
fbstp
mov
aas
pop
shll
jo
clc
sbb
repnz
lcall
cmp
repz
test
pop
shll
ja
stos
push
jge
xor
cltd
fsubl
pop
insb
sub
dec
stos
popf
int
push
out
fstpl
repz
push
pop
movsb
sahf
fnsave
cld
jl
fidivl
aam
mov
push
mov
lret
jl
outsb
lret
sti
and
lcall
sahf
dec
aas
pop
adc
jns
cmp
mov
pop
jge
mov
mov
sbb
push
inc
mul
icebp
jno
or
or
movsl
scas
jle,pt
in
mov
mov
sbb
mov
push
dec
loope
mov
xlat
mov
inc
addr16
fmull
call
inc
cmc
and
sub
sbb
stc
jns
movsl
jbe
dec
dec
das
push
push
clc
mov
push
inc
cltd
push
sbb
jp
inc
shrl
aam
or
test
adc
mov
pusha
mov
mov
sti
or
dec
jne
xorl
pop
inc
sub
add
pop
jno
adc
mov
adc
cmp
imul
pop
enter
sub
adc
sub
pop
cli
sbb
out
xor
int3
divb
xchg
aaa
or
lea
shrb
sbb
gs
xorl
cwtl
adc
xlat
push
inc
jno,pt
pop
int
scas
rclb
loopne
test
mov
sub
cmp
ja
jmp
rol
xor
or
in
sarb
jle
js
adcl
mov
dec
xchg
sub
mov
fs
lcall
sti
add
pop
inc
int3
sub
jae
mov
inc
inc
cwtl
jae
xlat
imulb
sub
or
test
push
sbb
ret
cltd
cs
insb
jns
pop
jb
xor
adc
notl
inc
in
xor
lds
and
dec
daa
test
add
cmp
cmp
loop
gs
cmp
pop
add
push
xchg
add
dec
or
divb
aam
mov
in
sbb
xchg
lds
sarl
dec
movsb
mov
mov
xor
je
pop
ljmp
inc
lahf
cmp
xor
mov
sbb
xor
cs
inc
pop
push
out
popa
add
pushf
mov
pop
loopne
test
and
sub
adc
cmp
cmpl
ja
daa
in
inc
jne
adc
movsl
cmpb
push
es
sub
adc
jne
cmpsl
adc
in
daa
xor
in
push
fiaddl
out
add
mov
push
lahf
enter
cmp
dec
and
fiaddl
inc
cld
cmpsl
mov
mov
xchg
xchg
int3
negb
xor
xorb
rcll
push
pusha
mov
gs
or
arpl
inc
xchg
jmp
or
aam
jle
add
test
adc
test
movb
jb
jmp
divb
dec
pop
inc
lret
arpl
cmpsl
push
ret
pusha
cltd
jnp
inc
lahf
and
int
cmp
sarb
lea
jnp
inc
aas
adc
imul
sarb
sub
lds
ljmp
jmp
mov
push
push
test
pop
xor
aad
je
das
lea
sahf
mov
sbb
or
dec
ficoml
cmp
push
lock
mull
mov
inc
push
sub
pop
bound
mul
aaa
loop
mov
inc
into
ja
scas
push
inc
adc
aaa
jmp
cmpsl
loopne
sahf
int3
pop
bound
je
mov
mov
dec
sub
pop
add
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
jp
xor
and
js
in
js
scas
ret
arpl
push
andl
sbb
popf
adc
dec
jle
xor
je
xchg
jl
adc
scas
mov
loop
call
je
jns
ret
flds
jo
imul
adc
in
cmpl
fldenv
xchg
ja
and
stos
xchg
xchg
mov
arpl
mov
dec
pop
inc
push
jg
lahf
aaa
int
in
arpl
pushf
stos
loop
dec
mov
sti
jp
addr16
stc
xchg
sub
lea
push
cld
into
adc
or
push
adc
inc
inc
out
das
data16
out
push
mov
or
es
mov
pushf
aas
addl
in
adc
sbb
xorb
pop
repz
pop
pop
sub
add
movsb
inc
mov
addr16
aas
and
jnp
mov
push
fnstcw
sbb
in
ret
jp
dec
xchg
inc
iret
push
in
jmp
aad
inc
lret
xor
gs
aaa
out
push
dec
pop
clc
cli
es
out
adc
sar
pop
bound
cmp
es
xchg
push
pop
xchg
xor
sub
and
mov
cmp
idivl
test
std
lds
je
stc
push
lcall
adcl
cmp
xor
dec
scas
sub
js
jg
xchg
mull
jl
adc
cmp
or
xor
jns
mov
in
mov
push
out
inc
mov
xor
xchg
inc
mov
std
cs
scas
xorl
aaa
sub
mov
or
add
mov
sbb
je
cs
adc
aad
push
cmp
test
jmp
pop
flds
xchg
cwtl
inc
mov
sub
or
push
lds
cli
dec
ds
std
xor
lret
repz
out
test
add
pop
lods
hlt
cmpsb
adc
dec
inc
test
jle
inc
in
dec
adc
test
mov
flds
ret
jbe
mov
inc
sub
mov
sub
sub
xchg
test
test
aas
stc
in
lret
pop
ds
lock
in
push
mov
scas
daa
dec
movsb
mov
les
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
cmp
inc
xchg
pusha
js
in
js
inc
inc
jno
jg
or
and
xlat
mov
jne
out
popa
je
mov
adc
movsb
sbb
mov
decl
in
xor
clc
ljmp
cmp
xlat
scas
ja
out
add
insl
sub
enter
mov
push
or
add
push
cmp
cmp
add
jg
push
lret
data16
popl
xchg
add
push
scas
outsb
pop
test
ret
add
sbb
dec
or
pushf
add
cs
jp
mov
pop
je
rclb
inc
pop
xor
and
cmpsb
notb
jo
in
and
lds
cwtl
lods
das
scas
aaa
sbb
mov
dec
mov
lahf
es
inc
xor
sbb
fdivl
jae
mov
in
sub
je
mov
adc
dec
insb
mov
pop
in
dec
loopne
out
aam
in
gs
rcrb
ja
adc
int3
xchg
inc
in
add
dec
outsb
faddl
pop
sti
stos
jne
push
cmp
cmp
and
sbb
popa
inc
xor
jp
movsb
iret
push
push
ja
insl
inc
cmpsb
and
into
mov
loope
add
fwait
ja
xor
push
rcrb
dec
cmp
dec
dec
stos
outsl
jno
push
rclb
cmp
insl
jne
daa
and
mov
push
fidivrs
mov
mov
test
sub
mov
adc
pop
icebp
adc
and
into
sbb
in
fs
push
mov
jmp
cmp
jbe
ja
mov
dec
aaa
or
dec
add
add
repnz
into
push
push
pop
shrb
insl
jne
xchg
icebp
dec
addb
scas
cmpsb
push
ret
add
cli
repz
addl
inc
pop
sub
cmp
mov
ds
into
stos
shl
sub
mov
dec
xor
packuswb
dec
fwait
push
mov
or
out
lods
ljmp
jecxz
xor
jnp
movsl
dec
xchg
imulb
lea
gs
roll
test
enter
repnz
sbb
mov
fidivs
jge
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
leave
mov
jle
js
in
js
dec
lea
sub
push
out
shlb
sub
insb
lods
or
stos
and
es
or
jecxz
mov
pusha
stc
loop
sbb
adc
leave
xchg
mov
mov
mov
jge
fcom
nop
ret
loope
xlat
imul
pop
dec
ret
mov
adc
fsubrl
bound
pusha
call
xor
inc
sub
popf
jmp
loope
inc
outsl
in
int
rorb
cmp
sbb
out
jno
pop
inc
push
stos
cmpsl
xor
into
xchg
mov
inc
mull
shll
mov
ljmp
jge
adc
shrl
hlt
xor
hlt
mov
ja
push
rolb
jp
pop
jp
mov
cmc
push
jb
cld
ret
es
divps
lods
xchg
jnp
dec
mov
xchg
scas
mov
xchg
and
xchg
in
mov
mov
dec
addr16
add
push
mov
js
push
push
es
js
adc
sub
out
addb
cmp
stc
loopne
xchg
or
xchg
or
xchg
out
pop
pop
cs
pop
jp
jb
xchg
test
in
icebp
pop
repnz
fs
aad
fsts
mov
xchg
dec
xchg
and
int3
jecxz
int3
arpl
ljmp
outsb
add
mov
pop
repnz
lret
addb
cli
push
mov
inc
inc
and
int
xchg
test
test
enter
dec
fsubs
jne
lahf
cmpb
pushf
bound
mov
orl
or
fs
stos
or
insb
nop
ret
mov
das
data16
cmpsl
jo
mov
pop
xor
dec
insl
icebp
fldcw
xlat
jbe
adc
mov
sbb
enter
cltd
iret
and
push
loop
stos
mov
fs
cld
push
push
dec
out
push
jl
or
aad
sti
and
adc
mov
enter
negl
and
xor
mov
adc
inc
test
push
pop
rorb
cli
or
adc
hlt
jge
mov
or
pop
xor
movsb
inc
aas
imul
shrl
dec
mov
jl
cltd
lahf
pop
popa
insb
xchg
test
adc
push
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
xchg
sub
jmp
js
in
js
or
adc
std
sbb
insb
sub
addl
jl
cmp
and
pop
xor
jb
out
mov
inc
lcall
jmp
imul
icebp
and
and
pop
lea
leave
push
pop
lahf
aas
cmp
cmp
push
sahf
aad
outsl
mov
or
and
xchg
dec
mov
mov
shl
cltd
jecxz
xchg
leave
fdivp
inc
out
add
pop
or
or
mov
scas
inc
mov
sub
pop
jmp
ret
cld
adcb
sub
mov
stos
outsb
test
mov
mov
insb
test
cli
movsl
sbb
aaa
xchg
sub
mov
daa
call
inc
mov
xchg
inc
hlt
mov
pop
test
jns
adc
pop
pop
jle
inc
xor
pop
dec
lock
mov
pusha
jg,pt
xor
nop
out
cltd
adc
xor
fldcw
imul
jmp
jp
inc
test
fwait
sub
clc
sub
mov
inc
add
sarl
fmull
cltd
dec
xor
insl
gs
andl
in
or
sar
cmpsb
nop
push
dec
xchg
jo
adc
in
aaa
gs
stos
mov
xor
cmc
pusha
mov
pop
mov
pop
sub
jno
fs
pop
jge
shr
scas
jns
int3
xchg
jo
jb
xor
lods
sbb
loopne
add
into
pop
sahf
dec
ja
pop
jne
imul
cmp
pusha
xchg
mov
jmp
and
and
stc
sub
popa
cmpsb
add
pushf
mov
and
cmp
sub
xchg
int3
rcrl
div
int
or
xor
lret
pop
shll
pop
adc
push
add
ret
scas
or
mov
xchg
mov
insb
or
aas
jl
icebp
xor
insb
pop
cmc
sbb
xchg
std
arpl
xchg
ss
cmpsl
mov
mov
filds
push
aam
repz
jno
dec
frndint
ret
pop
inc
sub
push
mov
and
test
das
test
pop
arpl
incb
adc
lods
dec
arpl
mov
add
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
jb
out
push
imul
dec
jmp
mov
push
in
jle
mov
shll
neg
push
mov
decb
jnp
ss
xor
loopne
bound
pop
or
xor
jg
test
int
mov
mov
gs
in
inc
movsb
push
mov
daa
shr
pop
adc
pop
pop
and
sub
push
adc
jge
mov
pop
inc
mov
xlat
jbe
iret
out
mov
outsl
push
jnp
das
stc
lods
cmp
lds
test
push
or
push
call
pop
and
js
mov
adc
lret
xlat
cltd
shr
lret
insb
insb
or
into
or
cmp
nop
fisttpll
out
xchg
in
push
test
mov
ljmp
inc
les
sbb
hlt
scas
xlat
fisttpl
or
cmpsb
nop
dec
cltd
dec
fs
push
outsl
jl
aam
jns
push
pop
inc
push
sbb
lods
les
xor
and
xor
stos
xchg
adc
ss
fucom
cmp
mov
fists
mov
lods
pop
jae
jb
push
ljmp
add
pop
outsl
mov
movsl
ds
or
pop
idivb
subb
jbe
jno
jle
xchg
enter
lock
inc
aad
dec
movsb
xchg
mov
adcl
cmp
sub
loope
in
shr
lds
jecxz
push
push
push
dec
xchg
jb
push
jno
gs
pop
jg
jp
stc
les
repz
insl
jne
adc
aad
mov
mov
in
and
rolb
into
lods
pop
mov
ficomps
insb
leave
mov
sbb
sbbl
inc
scas
pop
lcall
ficompl
xor
sbb
popf
ret
adc
lock
or
adc
xor
sahf
popf
pop
shll
push
pop
enter
push
jne
and
lret
xchg
pop
xchg
xchg
lea
in
stos
cmp
ret
mov
mulb
mov
das
mov
scas
stos
repz
mov
jmp
iret
ret
rol
fcmovnu
mov
push
mov
js
jle
js
shrb
dec
adc
push
fdiv
cwtl
bound
push
ret
rcrl
mov
or
aad
je
rolb
jbe
sbb
mov
xlat
add
dec
aam
or
pop
xchg
push
mov
mov
scas
dec
stc
cmp
inc
js
mov
shl
inc
inc
push
cli
out
cmpl
loope
test
jl
pop
xor
shll
std
push
cmp
or
push
adc
mov
test
inc
inc
imul
insl
sbb
jne
mov
enter
repz
sbb
out
inc
dec
bnd
sub
pop
sub
into
mov
push
or
jbe
inc
mov
push
add
loopne
aam
mov
test
push
ja
in
jnp
mov
lret
lahf
xchg
dec
call
insl
insl
or
mov
out
xchg
je
add
sahf
fadds
and
cmpsb
xchg
pop
or
cld
xchg
add
jecxz
inc
icebp
repz
pop
rcll
push
or
jae
fdivp
loop
or
dec
or
stc
scas
or
dec
out
cmp
pop
dec
repnz
jno
in
ljmp
movsb
sahf
arpl
jp
test
lods
add
mov
shlb
in
pop
cld
es
ljmp
push
push
xchg
rcll
pop
dec
stos
aad
cmp
addr16
ljmp
mov
mov
or
outsl
dec
scas
pushf
in
int
jo
inc
sub
enter
push
push
inc
jne
push
cltd
lcall
push
cmp
mov
and
push
daa
ja
fwait
icebp
loopne
movsl
jno
xor
call
icebp
shl
mov
mov
adc
repnz
pop
pop
pop
cmpl
jge
dec
ret
nop
xor
enter
ficoml
sub
es
shl
ljmp
mov
or
jo
sub
je
ss
stos
loopne
outsl
iret
stos
mov
decl
and
mov
push
movl
movl
jmp
int
ror
fcmove
leave
sub
sub
js
jle
js
inc
jge
push
pop
adc
pop
outsl
insl
movsb
das
call
jp
sbb
add
mov
xchg
sti
adc
shrl
in
popf
fistl
mov
inc
xor
test
lock
ljmp
andl
or
popa
ds
lea
inc
nop
jl
mov
pop
xchg
adc
ljmp
mov
jns
gs
les
dec
les
mov
push
xchg
sub
repz
jecxz
je
xlat
cmpb
xchg
roll
leave
addr16
or
mov
cmp
mov
sub
xor
push
addr16
pusha
in
adc
andb
fiaddl
jp
cld
repnz
push
ss
push
mov
dec
leave
shl
jle
cmpsb
dec
popl
jl
in
lods
sahf
ror
jg
mov
mov
in
les
cmp
lret
insl
push
sub
pop
sar
mov
dec
dec
bound
inc
xchg
jmp
add
mov
lahf
add
jecxz
aam
pop
cld
adc
stc
add
xor
push
mov
xlat
movsb
sub
and
sbb
iret
pop
mov
dec
pushf
inc
lahf
rolb
push
clc
dec
xor
movb
xlat
xchg
dec
iret
lret
sbb
lret
inc
sbb
fdivrs
je,pt
inc
adc
nop
outsb
repz
pop
xor
push
xchg
mov
daa
mov
fsubrs
xor
nop
rcrl
sub
or
dec
imul
movsb
out
and
cld
mov
jp
jl
mov
xchg
sub
scas
mov
test
lret
add
pop
cwtl
mov
inc
adc
push
adc
xchg
ja
mov
cli
adc
cmp
jb
repz
pop
ret
shrl
andb
out
cwtl
adc
loop
dec
leave
fptan
nop
jecxz
lock
rorb
inc
adc
fsubl
sub
aam
outsb
rclb
int
bound
insb
loopne
push
mov
cld
mov
sti
xor
test
mov
xorb
jns
mov
and
sub
mov
xor
add
jmp
mov
xor
add
jmp
ret
xlat
data16
or
jno
js
jle
js
repz
into
xchg
mov
jl
sbb
subb
pop
mov
ret
sub
pop
scas
jbe
and
fidivs
in
fs
dec
shlb
or
pusha
or
push
dec
nop
call
outsb
push
ret
sbb
ljmp
add
xchg
mov
movsb
xchg
rcrb
mov
inc
fs
daa
movsb
mov
in
rorb
sub
push
jle
lret
dec
nop
jl
jne
push
cmpsl
ret
sbb
das
xchg
ret
dec
test
push
fwait
andl
subb
es
xor
scas
push
or
push
andb
xchg
push
sub
xchg
xchg
xchg
repz
inc
jo
lret
std
xchg
xchg
ja
test
pop
ficomps
ljmp
lods
mov
sub
pop
or
add
xchg
inc
aam
xchg
aam
dec
dec
out
ljmp
and
fldl
cmp
stc
jmp
lret
cmpsb
lock
add
ret
sar
cmp
mulb
push
ss
mov
xchg
jp
int
repnz
pop
stos
nop
ss
cwtl
leave
pop
test
das
push
and
pop
fwait
stos
mov
testb
repz
cmp
js
fmull
fnstsw
jo
mov
or
in
xchg
clc
fdivrl
xor
je
imul
jp
mov
aas
repz
aas
mov
jno
sub
lcall
sahf
mov
sbb
lret
jb
push
jnp
loope
mov
jo
cmp
je
test
cmpsb
xor
cmp
pop
add
xor
sbb
mov
repz
inc
add
dec
mov
inc
add
ja
sbb
sub
sbbb
pop
pop
mov
jno
sahf
add
inc
nop
icebp
mov
out
mov
sbbl
pop
cld
out
enter
pop
pusha
movsb
or
pop
adc
xchg
cli
or
std
out
or
dec
push
daa
sub
mov
subl
arpl
jmp
mov
cmp
icebp
movsb
mov
mov
jmp
int
xlat
enter
shll
std
xchg
in
lods
cld
ja
js
jle
js
in
fbld
out
scas
stc
sub
push
sub
jg
loope
cmp
in
les
bound
rclb
fwait
inc
in
insl
ja
lahf
shl
xor
pushf
pop
jnp
leave
ret
or
jo
or
mov
sub
xchg
loopne
daa
and
jns
or
xchg
pop
dec
inc
cmp
sbb
xchg
push
mov
cmc
pop
mulb
push
adc
pop
jecxz
xchg
push
pop
movsb
hlt
outsl
leave
adc
xor
mov
in
in
cmp
push
ja
xor
dec
and
mov
outsl
movsl
cmp
cmc
push
push
xor
inc
leave
add
dec
push
int
jne
mov
stos
subl
jmp
and
mov
cli
push
pop
pop
push
inc
std
mov
jecxz
mov
mov
insb
sti
ret
mov
lcall
push
daa
js
pushf
sub
mov
push
cmp
adc
lret
lods
das
iret
pusha
sbb
dec
adc
jno
lods
xor
scas
dec
or
psllw
movsbl
jmp
jnp
cmp
mov
xor
and
ja
repz
out
lock
cmc
fcmovu
mov
imul
lds
or
fs
mov
addl
or
pop
js
vphadddq
push
and
xor
push
mov
jl
mov
jbe
testb
pop
xchg
dec
cmpl
scas
testb
je
insb
daa
add
jge
int
insl
mov
xchg
ljmp
adc
dec
imul
pop
movsb
out
imul
gs
add
pusha
dec
add
cmpsb
test
js
jmp
mov
sub
adc
mov
movsb
testl
inc
xor
pop
outsb
popf
loop
sahf
or
xchg
aad
mov
loope
or
mov
jg
sbb
mov
and
sbb
adc
adc
fcomps
hlt
mov
scas
jecxz
push
scas
into
mov
push
push
out
pop
xchg
js
cmpsl
mov
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
fsubl
int
jne
js
jle
js
cs
inc
lods
xchg
jg
stc
mov
sbb
mov
xor
xor
lds
out
fisubrs
inc
movsb
add
std
sbb
xchg
inc
out
adc
dec
sbb
push
test
aam
lcall
inc
mov
mov
fimull
or
lods
jno
xchg
push
xchg
mov
jge
sub
push
mov
test
clc
mov
ja
lods
xchg
inc
jbe
add
mov
mov
jmp
cmp
fwait
cld
pop
push
push
in
pop
fists
int
repnz
dec
arpl
into
insl
add
lcall
lea
jb
add
jg
or
cmp
mov
repnz
fcmovne
dec
mov
fdivl
mov
dec
adc
push
into
cmpsl
push
mov
inc
xchg
mov
dec
jnp
int
decb
and
mulb
sarb
inc
pop
int
mov
push
push
add
lds
adc
iret
sub
dec
es
push
xor
jne
adc
clc
push
fldcw
cmpsl
out
stos
xchg
stos
outsb
iret
lcall
cmp
loop
int
sub
popf
jge
dec
xchg
sbbb
add
das
jmp
push
adc
cmp
arpl
push
jge
and
ljmp
hlt
inc
arpl
jge
and
scas
mov
inc
in
pop
dec
fstpl
insl
adc
jne
aaa
scas
cs
iret
inc
mov
xchg
aas
int3
fldenv
push
in
push
or
xchg
jecxz
test
pusha
pop
stos
dec
mov
inc
gs
insb
pop
add
jge
loope
out
mov
sahf
dec
imull
cld
dec
and
inc
add
inc
or
jnp
dec
scas
jae
aas
incl
mov
cmpsl
jge
xchg
cmc
ss
and
push
jns
jecxz
mov
std
leave
iret
les
jge
inc
jmp
lcall
cmpsl
idivb
sti
sahf
mov
lods
scas
subb
xor
mov
out
or
mov
divl
sub
xchg
push
xchg
dec
out
fmuls
sub
push
test
in
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
movsl
sub
jp
js
jle
js
cmp
push
movsl
leave
sbb
jno
mov
enter
in
int3
jnp
lcall
das
cmp
inc
ds
jne
test
adc
cmp
rcrb
adc
xchg
adcl
lods
incl
dec
pop
sti
mov
add
into
cli
arpl
dec
es
insb
mov
and
lods
cmc
xchg
xorl
icebp
out
test
mov
dec
loope
stos
jg
lret
xor
or
mov
sbb
cli
jp
jbe
pop
mov
pop
mov
mov
scas
rcrl
pop
mov
in
xor
add
insb
cmpsl
repz
pushf
test
fiadds
mov
popa
test
lcall
ret
xchg
and
fadds
pop
jmp
pop
cwtl
xchg
lcall
mov
lods
in
test
out
sub
cmp
loopne
mov
mov
or
jbe
icebp
nop
cmp
and
into
push
sti
es
lea
aas
xchg
unpcklps
test
add
andl
xchg
insl
lods
inc
cmp
ret
pop
add
dec
inc
add
sbb
mov
mov
call
rclb
jle
insl
js
mov
jae
jne
insl
out
pop
xor
stc
cmpb
dec
adc
sub
stos
inc
mov
shll
es
mov
push
sub
in
cmc
jne
in
into
mov
rcr
cmp
sub
pop
push
repz
outsl
out
mov
clc
dec
stos
mov
pop
add
es
xor
popa
xchg
aam
jb
loope
bound
hlt
jmp
and
ja
inc
push
or
adc
ss
insb
jmp
push
into
inc
loope
add
lock
mov
in
mov
test
shl
inc
out
lret
xlat
pop
jae
dec
sub
lods
mov
jge
cmc
rcl
adc
popf
or
fistps
pushf
inc
xor
ss
lea
in
loope
outsb
fildll
sub
inc
lds
jbe
add
mov
ret
cwtl
enter
mov
and
dec
adc
daa
pop
mov
loopne
jge
mov
mov
jmp
enter
cld
imul
pop
inc
js
js
jle
js
xchg
mov
jge
ss
jecxz
push
jbe
dec
and
jg
arpl
add
imul
loopne
leave
push
push
push
dec
out
lcall
mov
rcl
sbb
imul
inc
and
ret
scas
jg
lds
adc
mov
push
jb
imul
enter
fistpl
xchg
jmp
cmpsl
lcall
faddl
jge
outsl
jns
xor
mov
push
sbb
loop
sbb
inc
cmp
movsb
ret
std
mov
das
ss
je
mov
and
inc
popf
xor
aad
imul
hlt
mov
sti
ss
or
adc
mov
lret
push
pop
or
mov
ds
in
jnp
jmp
jnp
fsts
and
call
lahf
aas
rolb
ljmp
scas
cmp
push
push
adc
jecxz
lcall
js
cmp
popf
inc
sub
sub
je
stos
icebp
jg
dec
cmp
dec
push
out
cmp
sub
mov
fs
out
cmp
and
bound
pop
pop
mov
outsl
mov
or
mov
jl
jle
push
push
scas
fcoms
or
mov
xchg
ds
pusha
adc
push
push
jecxz
cmpsb
dec
sbb
mov
dec
pop
cmp
mov
pusha
mov
or
pop
out
jmp
inc
aam
mov
jecxz
stos
cmpsl
add
adcb
cld
imul
sub
jnp
dec
jno
lahf
dec
pushf
icebp
jo
jecxz
sub
inc
sbb
inc
jp
rcrl
addr16
inc
mov
sbb
sub
jae
add
arpl
popa
test
sbb
bound
push
out
leave
adc
imul
pop
jp
sbb
cmc
int
xchg
jns
fisttpll
jl
jns
scas
sub
fstps
das
dec
fimull
shrb
out
jg,pn
insb
mov
or
into
mov
jl
push
jnp
mov
lcall
jae
hlt
iret
cmp
call
jno
xlat
into
adc
xor
testl
xchg
mov
jnp
lea
pop
push
cs
lahf
pushf
sti
call
jge
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
pop
ja
jge
js
jle
js
nop
fisubs
sbb
push
sbbl
inc
or
ja
mov
push
aas
ja
pop
jle
push
lock
jmp
mov
lcall
repnz
fsubs
pop
subl
std
add
jne
bound
push
mov
sbb
stc
fwait
push
add
out
sbb
mov
ds
lods
outsl
xchg
lock
ret
movsl
cs
das
sbb
cmp
out
cmpsb
data16
int
sub
adc
sarb
fcmovbe
xor
adc
in
jbe
cmp
int
test
mov
repnz
divl
mov
cli
fstpl
xor
inc
mov
cwtl
addr16
push
rcrl
cmp
pop
pushf
addr16
ret
pop
daa
sub
push
and
into
mov
push
cmp
cmp
scas
inc
call
sbb
push
pop
daa
adc
dec
ja
imul
outsl
push
loop
out
mov
jbe
and
lret
dec
xchg
test
add
pushl
loopne
lds
mov
sub
adc
je
data16
cmpsl
pop
icebp
cltd
jecxz
inc
push
push
inc
pop
cwtl
cmpsb
loop
shl
mov
stc
sub
mov
jb
dec
lahf
jno
std
lret
and
lret
arpl
popl
cs
pushf
fwait
loopne
dec
es
inc
aam
cmp
or
insb
rcrb
pop
aam
push
inc
xchg
fs
cmp
xchg
fiadds
lods
lods
jmp
push
cmp
mov
out
mov
inc
sbb
sub
and
aaa
mov
stc
xlat
pop
cltd
mov
popa
outsl
fsubrs
adc
push
add
lods
loope
lret
aam
outsb
jns
ss
rol
lock
xchg
push
cld
sub
fnstenv
bound
xlat
xchg
pop
sbb
jmp
enter
and
cmp
or
cs
xorb
sarb
test
out
daa
mov
shrl
cmp
sub
jno
andb
out
popa
test
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
cmpsb
out
xchg
add
in
js
mov
movsl
mov
sbb
loope
xor
iret
or
jle
add
sub
mov
push
pusha
cmp
inc
adc
and
rorb
inc
loop
sti
lds
xor
push
push
push
fdivs
rolb
xchg
sbb
addb
fsubp
fcomps
and
imul
push
cmp
mov
inc
les
repnz
dec
and
test
fildl
jge
outsl
aas
sub
popf
cwtl
xor
test
mov
mov
shll
pop
scas
push
add
mov
cmp
and
push
repz
xchg
popf
cwtl
lock
ret
jnp
cmc
movsl
movsb
pop
ret
fiaddl
aas
mov
sbbb
xor
sub
ljmp
xlat
sub
add
xor
gs
sbb
add
pop
or
cld
push
cmc
mov
jecxz
cmpsl
js
mov
in
cmpsb
insl
mov
or
add
pop
push
push
dec
push
push
aas
push
sub
in
or
and
push
ja
int3
sbb
ss
test
push
adc
call
in
or
xchg
cmc
movsb
xor
pop
push
xor
cmp
hlt
mov
inc
add
aam
sub
push
gs
push
pop
mov
cli
ljmp
cwtl
test
and
bound
in
roll
adc
cli
in
dec
in
data16
push
call
mov
inc
lds
mov
jl
iret
ds
adc
movsb
loopne
mov
fdivr
mov
push
call
inc
add
inc
lret
shrb
and
lods
jnp
add
mov
dec
mov
xchg
movsb
pop
add
xchg
add
sbb
stc
nop
fsts
mov
push
jl
inc
and
inc
and
shll
dec
jecxz
mov
adc
movsl
adc
mov
push
and
pop
incb
stos
pop
sbb
push
jnp
xchg
aas
push
ffreep
fbstp
sbb
push
push
push
shlb
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
push
inc
jge
add
jg
in
js
repnz
pop
test
mov
loopne
bound
sti
shl
or
stos
mov
dec
mov
in
fcom
outsb
icebp
sahf
push
xchg
cmpb
fiadds
sub
outsb
data16
rcll
mov
shr
test
scas
pop
insl
gs
mov
inc
in
aad
icebp
adc
popa
adc
xchg
cmp
movsl
dec
inc
data16
aam
pop
inc
dec
shrd
scas
mov
adc
or
pop
pusha
adc
xor
dec
sti
pop
movsb
call
js
enter
push
outsb
fnstcw
and
xchg
flds
and
test
inc
divl
das
jl
dec
rsqrtps
mov
in
sbb
call
aam
pusha
xor
hlt
pop
fisttpl
nop
mov
scas
dec
adc
out
lea
movsb
add
cmp
leave
mov
leave
stos
in
out
push
repz
inc
rcrb
mov
inc
ja
jp
mov
outsl
dec
mov
ffree
mov
push
enter
pop
test
sbb
xor
xor
test
push
pop
push
sbb
shrb
fistpl
xchg
aaa
rorb
mov
and
into
mov
lods
clc
jne
xor
mov
dec
push
dec
pop
or
xor
xor
mov
sub
adc
cwtl
xchg
ljmp
movsl
in
mov
mov
movl
xchg
ds
push
xchg
rclb
mov
sbbl
stos
call
test
adc
mov
and
sbb
idiv
mov
inc
mov
sbb
stos
or
or
shll
stos
mov
pop
mov
or
imul
xchg
lahf
jb
xlat
iret
lds
xor
fidivrl
mov
arpl
adc
pop
mov
adc
shr
cli
xor
in
lods
push
js
pop
imul
mov
sbb
mov
mov
stc
out
ljmp
mov
push
adc
rorb
pop
push
stos
lods
imul
mov
jmp
rol
leave
rcr
rcr
enter
adc
jg
in
js
dec
jb
int3
fimuls
andb
jb
sub
sub
or
imul
pop
repz
ja
xor
and
sub
sbb
xor
dec
push
jae
mov
inc
push
add
mov
add
pop
data16
push
dec
flds
push
add
adc
pop
cld
fiadds
cwtl
pop
in
rorl
lods
dec
mov
outsl
cmp
push
pop
add
insb
adc
into
cltd
nop
and
adc
test
xor
fistpll
sub
cmp
adc
stos
fnsave
xchg
push
dec
jmp
mov
addr16
ret
cld
pop
adc
data16
add
imul
fistpl
jns
lret
ljmp
jge
ret
outsb
sub
repnz
sbb
push
push
ret
sbb
pop
daa
popa
bound
sbb
cltd
iret
or
test
sbb
xor
pop
push
sub
jp
mov
xchg
inc
sbb
dec
int3
repz
cwtl
fimull
push
push
fs
pop
jge
push
movsl
jl
scas
orl
rcrb
sbb
jb
jo
insb
mulps
ss
and
fimuls
cwtl
notl
inc
fwait
mov
xchg
repnz
outsb
push
shlb
inc
mov
hlt
les
pop
push
mov
sbb
mov
mov
cmpsb
jl
and
mov
cmp
dec
stc
sarl
clc
xchg
lret
lods
stos
or
push
das
lcall
mov
dec
push
sub
iret
lods
pop
mov
leave
mov
pop
lods
mov
jno
xor
cmp
lret
test
iret
xchg
pushf
arpl
mov
shlb
sar
jge
cli
mov
pop
sti
scas
imul
and
pushf
xchg
sub
and
gs
adc
nop
push
mov
mov
test
cs
andb
aad
pushf
movsl
pusha
mov
xor
je
aam
and
in
js
xor
enter
loope
mov
jbe
in
jo
ret
vpmacsdql
jae
and
sti
shlb
fsubr
addl
add
aas
int
aam
mov
ljmp
in
js
sbb
out
stc
mov
add
xchg
rcll
inc
sub
push
jae
in
pop
clc
loopne
cltd
cmc
sti
idivb
sub
and
push
fwait
pop
pop
inc
push
mov
adc
adc
fildll
leave
adc
cwtl
mov
out
and
mov
insb
xchg
sub
js
dec
stc
mov
pop
or
jle
imulb
inc
jle
jnp
xchg
mov
push
nop
std
sti
xorb
and
stc
cmp
mov
mov
or
xchg
push
push
hlt
mov
add
sbb
or
notl
ret
cmp
xchg
stos
pushf
test
mov
pusha
arpl
movsl
dec
dec
div
ss
out
mov
lret
imul
inc
pop
outsb
sar
outsb
pop
stc
dec
shll
ficomps
std
jne
sbb
mov
cmp
addr16
add
cmp
or
shrl
pop
xor
add
or
lds
lods
aad
mov
in
inc
cmp
lret
dec
and
subb
or
pop
outsb
cmpsb
pop
insl
adc
ret
jno
test
sub
push
inc
sub
xor
sub
mov
imul
out
jecxz
pop
push
mov
iret
roll
call
decl
push
cmpsl
mov
pop
insb
icebp
jbe
je
fisttpll
fldcw
imul
cmpsb
mov
pop
xchg
out
xchg
fwait
or
std
rcrl
gs
jg
xor
dec
jp
stos
fisttps
sub
loop
mov
dec
push
cmp
fwait
mov
lcall
in
mov
popf
sub
dec
shll
sbb
jecxz
addr16
push
xor
jmp
push
shrb
loope
lock
push
mov
imul
pop
push
rcrl
sbb
mov
es
lcall
into
mov
aas
fildll
sub
out
xchg
mov
dec
bound
addb
xor
adc
inc
mov
dec
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
push
in
js
mov
cwtl
test
sub
nop
icebp
jp
sbb
addr16
mov
fisubl
jg
dec
dec
push
sbb
fmull
xlat
adc
cmpsb
rol
lods
test
outsb
dec
mov
mov
divb
mov
pop
xchg
ljmp
and
in
icebp
lret
inc
dec
mov
cmp
adc
mov
aam
lcall
sti
es
sti
out
xchg
add
mov
inc
inc
popf
push
hlt
movsl
mov
pushf
xor
inc
adc
mov
addl
push
into
scas
cld
fcomip
sub
popf
out
lea
sub
idivl
aaa
popf
call
mov
jnp
pusha
shrb
cmpsl
daa
lea
mov
dec
or
or
das
xchg
pop
and
fwait
lds
mov
ja
pop
mov
popf
lret
add
je
push
aas
sahf
mov
mov
mov
dec
adcb
mov
cmovne
call
mov
lods
roll
in
jl
pop
fld
ljmp
jmp
cmc
inc
rcll
pop
or
xchg
jp
test
or
outsb
push
pushf
rol
sbb
jmp
cmc
test
mov
ss
jne
cmp
pop
stos
xchg
xchg
pushl
pop
sub
push
fwait
mov
mov
xchg
dec
add
popf
xchg
sahf
cli
outsb
xor
push
xor
int
adcb
inc
adc
push
or
and
lds
out
notl
xchg
pop
jp
add
sbbb
cmp
pop
pmovmskb
movsl
cli
jmp
js
mov
mov
sbb
outsb
lds
or
int
push
stc
xor
popa
test
cmc
ret
jecxz
sub
adc
sbb
push
xor
add
cmpb
jp
out
push
sbb
push
bound
xor
inc
int3
lret
adc
shrl
call
adc
dec
mov
pop
inc
shll
into
bound
xchg
sbb
lods
in
mov
inc
cmc
shrb
hlt
popa
popa
pop
scas
xchg
push
sbb
dec
ret
insl
lea
pop
mov
out
sarb
and
cmp
jo
mov
jge
jmp
lret
ret
vpand
ret
andb
jg
in
js
rcr
cli
fsubr
mov
lahf
xor
jl
icebp
push
mov
sbb
mov
pop
jne
int3
lcall
jb
mov
xor
movsl
int3
mov
add
inc
leave
push
shlb
stos
xchg
loope
xchg
popf
jne
les
test
rcll
cwtl
testl
int
dec
push
in
fistpll
xor
fstp
push
inc
stc
btc
add
mov
sub
leave
sbb
fidivrl
and
sub
bound
mov
fsubl
cmp
lea
push
icebp
jae
push
sub
mov
sbb
xchg
call
cld
lods
out
hlt
movl
jmp
fsubrl
pop
scas
mov
xchg
test
cmpsl
inc
cmp
iret
outsb
fs
push
ret
outsl
or
push
cmp
xor
mov
lahf
cltd
enter
je
jl
or
dec
ret
and
test
mov
xorl
lods
mov
fcompl
divb
adc
push
aad
xchg
test
sub
xor
xor
popa
jne
cltd
aas
scas
push
sub
shrl
rcr
outsl
push
andb
rorl
push
sbb
call
dec
aam
pop
adc
popa
call
and
fs
adc
push
push
and
test
into
out
cld
and
push
cmp
icebp
and
icebp
dec
call
sarl
pusha
cmp
adc
sbb
fistl
jns
jne
inc
sub
mov
sbb
je
popa
mov
adc
lret
adc
test
dec
aas
lret
scas
mov
push
cmpsl
gs
mov
add
ljmp
fcompl
rclb
rcll
dec
loop
dec
imul
dec
adc
clc
cmp
roll
mov
ret
mov
jb
cwtl
mov
mov
test
adc
imull
clc
xchg
xchg
cmp
xchg
test
addr16
arpl
inc
iret
xchg
xor
push
jg
xchg
jne
add
push
mov
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
leave
mov
js
jle
js
mov
push
dec
test
stos
rcrl
mov
ljmp
aam
imul
or
insb
sub
pop
pop
out
mov
push
shl
xor
jbe
sub
adc
cmpsb
test
mov
mov
lods
mov
lahf
sarl
mov
ja
sar
mov
je
mov
sbb
xchg
sbb
cwtl
cmp
mov
in
fnstcw
push
in
push
out
inc
mov
aam
and
pop
fcmovnbe
mov
test
repnz
jns
jmp
ja
jecxz
pushf
adc
push
andb
repnz
loope
sub
mov
xchg
dec
jle
xchg
cmpb
pop
inc
call
mov
adc
pop
fdivrs
mov
cs
or
inc
fidivrs
imull
jle
jp
mov
in
xor
cwtl
push
xchg
call
inc
jbe
xlat
mov
xlat
add
pop
lahf
mov
xchg
pop
insb
std
outsb
xor
inc
int
xor
mov
adc
jl
lcall
decb
pop
sbb
sub
jno
sub
xchg
cld
movsb
ror
bound
mov
push
dec
pop
xchg
or
push
adc
cmp
in
das
and
dec
movsl
and
aas
dec
mov
addb
jns
sbb
pop
adc
fwait
int
daa
out
inc
or
sbb
dec
das
mov
popa
jo
lods
adc
adc
ret
sbb
mov
xchg
cmp
andb
ret
mov
xchg
mov
or
test
int3
addps
inc
in
cmp
dec
imul
rorl
fidivrl
mov
sub
lods
divl
push
mov
call
mov
pop
push
mov
add
fdivl
add
ffree
call
pop
mov
je
inc
mov
les
sbb
addr16
cmp
sbb
cmp
mov
in
sarl
sbb
stc
mov
fcoms
cmp
jmp
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
sbb
add
adc
in
js
or
mov
cld
dec
mov
xor
add
xchg
mov
add
dec
and
adcb
call
scas
xor
or
cmpsb
lcall
fsub
mov
sbb
cwtl
mov
mov
pop
int3
ret
add
andl
lock
mov
dec
add
aad
jnp
mov
std
xlat
mov
pop
sub
sub
mov
mov
xchg
pop
test
add
rol
mov
or
sbb
cmpsl
fnsave
pop
xchg
sub
mov
movsb
or
inc
les
imul
lods
and
sbb
aad
jne
push
movsl
sub
idiv
push
push
sti
test
outsb
movsl
jge
incl
pop
mov
xchg
inc
jns
enter
xchg
gs
adc
std
divl
or
scas
pop
ret
pop
jmp
inc
pop
or
add
std
mov
adc
mov
or
test
dec
cmpb
inc
pushl
in
mov
lods
and
adc
xchg
xor
add
rcr
inc
mov
xor
add
data16
mov
ss
dec
and
adc
loop
pop
sarl
out
cmpsl
pop
add
pop
pop
adc
scas
sbb
dec
lods
mov
mov
iret
push
outsl
xor
xor
rolb
les
xchg
fildll
mov
ret
hlt
adc
or
adc
dec
je
xchg
jo
inc
ret
or
and
fsubrp
cwtl
mov
xchg
out
js
cmp
xor
jo
sahf
into
push
out
js
stos
mov
jbe
push
dec
clc
mov
das
ds
add
add
jno
jl
mov
cmp
add
jecxz
loop
test
rolb
add
jne
push
push
inc
out
out
subb
dec
jmp
icebp
mov
fisttps
dec
mov
test
xor
jge
xlat
jmp
cmpl
push
and
fcoms
shl
adc
xchg
nop
hlt
add
orb
data16
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
cltd
scas
sar
adc
xchg
jle
js
jo
rorb
push
andl
adc
add
sbb
jmp
shlb
test
cmc
cmp
addr16
ficompl
clc
ja
lock
xor
mov
aad
adc
ljmp
add
fwait
push
ret
jb
call
in
adc
xor
jge
push
jecxz
sbb
sahf
lds
pop
clc
mulb
add
adc
add
mov
imul
nop
adc
cmp
pop
mov
pop
out
stos
xchg
adc
pop
mov
out
test
cmp
jne
cmp
or
je
testb
and
and
add
sub
add
iret
nop
js
lods
and
pop
sub
mov
pop
add
dec
inc
insb
cmp
xchg
mov
test
cmp
roll
iret
ret
push
sahf
mov
shrb
xchg
stos
loop
frstor
scas
clc
out
ret
mov
mov
adc
in
mov
mov
push
pop
xor
dec
rcll
jne
cmp
pusha
or
mov
sti
push
call
lahf
in
stos
pop
cwtl
test
leave
inc
bound
cs
adc
pushf
add
adc
je
shl
pop
inc
mov
jo
int3
in
mov
inc
sahf
pop
adc
shrb
sub
mov
scas
scas
bound
mov
pushl
xchg
mov
xor
mov
test
dec
and
cmpsb
lea
cli
dec
dec
pop
mov
std
outsl
clc
xchg
jecxz
inc
and
fucom
sbb
testl
push
cmp
iret
imul
pop
les
sti
loop
push
dec
ja
popf
fisubrs
rorb
xor
jle
mov
sbb
ret
in
jmp
xor
movsl
xchg
movsl
adc
push
lock
push
andl
or
test
jmp
jns
pop
in
bound
jne
xor
mov
orb
ret
inc
and
cmp
sahf
sub
pushf
mov
push
daa
in
sbb
push
jo
hlt
test
mov
arpl
jp
aas
mov
imul
push
pop
sub
out
dec
xor
in
dec
rcll
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
push
mov
mov
js
call
mov
daa
inc
adc
jnp
mov
fists
mov
and
dec
arpl
inc
js
jb
xlat
mov
pop
push
cmpb
jmp
sahf
ret
popf
jmp
inc
pop
jbe
xor
test
xchg
fs
cltd
or
fisubrs
test
cli
cmp
fld
cmp
sbb
and
add
or
and
xor
outsb
jbe
mov
sti
into
jle
and
shlb
cmp
incl
cmp
mov
jo
bound
in
shlb
mov
outsb
and
mov
mov
mov
adc
jns
jo
int3
in
lea
xor
fnstsw
clc
aad
loop
cmp
int3
out
jne
sub
cmp
dec
fadd
divl
pop
clc
data16
or
push
xor
jg
sbb
lock
cmp
lock
in
loope
out
xchg
pop
mov
lret
addr16
adc
push
fdivs
rcr
xchg
add
stc
mov
movsb
cmc
jp
loopne
cmpsl
in
pop
lods
push
leave
or
jge
mov
dec
hlt
sbb
push
mov
lods
mov
arpl
mov
mov
jns
js
push
loopne
std
out
push
ljmp
jo
mov
add
jne
cld
loop
mov
cmc
xor
xor
subl
icebp
loop
jns
fcomps
sub
mov
ljmp
test
in
repz
xchg
outsl
pop
jne
cld
scas
adc
and
push
std
or
mov
out
jnp
iret
roll
xchg
push
sub
pop
mov
addr16
mov
pop
es
cmc
nop
movl
xchg
fstpl
xchg
or
or
daa
sub
xchg
pop
or
inc
mov
inc
lds
mov
xchg
or
push
cmp
xlat
and
jl,pt
arpl
push
sub
ficoms
aam
mov
xor
or
aad
ret
mov
adc
inc
mov
jbe
in
int
aam
orb
mov
jo
lret
lahf
push
and
mov
hlt
fs
outsb
repnz
mov
repz
and
or
and
adc
jno
sahf
inc
mov
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
lds
aam
daa
sbb
xchg
jle
js
data16
test
lahf
mov
sbb
xor
sbb
in
in
xor
outsl
adc
and
inc
pop
mov
sub
or
xor
jbe
movsl
pop
arpl
dec
lahf
sub
fnstenv
lret
fldcw
mov
jge
mov
loopne
pop
call
repnz
jecxz
and
jnp
fnsave
adc
jmp
aad
inc
adcl
sbb
adc
mov
mov
aad
adc
fidivl
je
addr16
fcmovnbe
mov
scas
movb
out
push
fwait
cwtl
xchg
jl
scas
sbb
mov
inc
and
dec
dec
jnp
int3
cmpsl
xor
ret
and
ret
cltd
cmp
popa
fldcw
push
cmpsb
cmp
mov
dec
dec
out
push
repz
stos
mov
fsubl
jl
pop
pop
dec
shrd
sbb
mov
popf
in
cltd
shl
sti
sub
dec
mov
mov
mov
sahf
in
repz
mov
fstpl
test
cli
inc
jne
mov
movl
rolb
xor
push
aad
insb
out
das
adc
aad
shrb
jp
sub
adc
int
jecxz
sbb
dec
fcmove
pop
lret
andb
dec
xchg
inc
add
and
fwait
jecxz
aad
sub
xlat
mov
push
cs
mov
fmull
nop
or
jbe
lea
sbb
pop
hlt
arpl
xor
jle
in
adc
gs
je
ds
fcmovnbe
push
lea
out
test
mov
cltd
adc
mov
and
test
xor
leave
adc
cld
add
mov
lods
out
les
sub
sbb
js
scas
mov
stos
pop
dec
add
insb
mov
imul
adc
std
fdivr
jne
loope
xor
xchg
data16
fldt
xor
jno
sbb
xchg
xchg
mov
lea
and
out
cmc
push
and
adc
imul
xchg
and
scas
adc
dec
mov
fistps
scas
mov
jge
cli
mov
jnp
je
xor
sbb
dec
aas
push
subl
loopne
popa
mov
adcl
xor
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
ret
jg
xchg
jle
js
sbb
or
ljmp
mov
into
fwait
stc
inc
push
sub
xchg
adc
jp
xor
shr
mov
loopne
mov
adc
pop
push
jb
movb
gs
ficoml
xor
inc
hlt
fimull
pusha
fwait
dec
movsb
ficoml
jae
pushf
mov
shrl
inc
inc
sbb
test
lahf
fsubrs
ljmp
xchg
or
aad
call
out
jb
aad
testw
mov
mov
test
push
add
gs
xlat
bnd
adc
repz
mov
xor
aam
dec
pop
std
aaa
in
test
repnz
cmp
inc
out
inc
cmp
int3
out
sbb
lahf
sahf
dec
into
pop
test
jbe
insl
cmp
in
dec
add
mov
push
xchg
adc
xor
shl
leave
xor
lock
pushf
inc
pushf
jp
push
sbb
aaa
data16
aas
and
into
sub
lds
add
add
sbb
roll
cltd
mov
imul
stc
mov
and
cmp
lods
mov
lret
das
dec
cwtl
xlat
xchg
es
xchg
orl
add
jbe
inc
mov
sbb
pop
cwtl
int
dec
pusha
lcall
adc
cmp
sbb
clc
enter
mov
inc
fs
or
or
outsb
mov
mov
xor
stos
rcr
dec
push
push
inc
lods
xor
cmc
pop
mov
inc
cwtl
add
mov
fsubl
mov
outsl
push
cmp
daa
mov
insb
ds
mov
dec
loop
sti
pop
inc
enter
out
or
leave
test
pop
mov
mov
mov
pop
adc
out
test
mov
fsubl
xor
dec
aad
sub
dec
test
out
mov
aaa
popa
xchg
stc
lcall
pushl
mov
mov
mov
mov
iret
fwait
and
jmp
es
xor
pop
out
inc
mov
jg
jae
cld
jle
xor
mov
push
sub
out
scas
outsl
sbb
pop
test
xor
testb
dec
xor
fwait
addl
stos
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
dec
dec
or
sbb
js
jnp
sub
dec
ja
sahf
test
add
data16
cmp
mov
jae
stos
cmp
or
fs
movsb
push
popf
js
pop
sub
and
addr16
sub
mov
leave
dec
lahf
mov
push
push
inc
je
lods
mov
dec
jno
add
flds
jle
sub
imul
xor
lret
pop
dec
or
in
mov
jnp
insb
xchg
sbb
pop
ds
add
std
jns
xlat
aam
cmpsl
sbb
inc
cmc
mov
out
pop
into
sbb
pop
xchg
lret
inc
push
movsl
into
test
dec
adc
push
sbb
fldcw
imul
sub
jp
std
fldlg2
fbld
imul
dec
inc
scas
subb
push
leave
mov
dec
sub
loopne
sub
jns
mov
out
ret
lods
dec
and
cmp
add
adc
ja
fsubs
push
sbb
add
pop
fstpt
mov
clc
push
loope
mov
fstl
sbb
inc
ret
add
leave
dec
adc
dec
and
sub
stc
adc
insl
leave
xor
mov
cld
mov
or
sub
shlb
sbb
xor
inc
lret
jg
inc
push
jo
and
rcl
fimull
fisttpll
jo,pn
xor
sbb
shlb
inc
or
testl
xlat
cld
and
lcall
sub
push
push
ds
push
jle
mov
adc
jae
dec
xor
mov
jle
out
insl
jbe
push
pop
test
dec
push
and
js
gs
dec
repnz
lcall
int3
push
ljmp
test
fisubrl
mov
pop
ret
sahf
xchg
test
mov
mov
mov
pop
mov
data16
or
jns
dec
int3
or
imul
jns
sti
pop
ss
sahf
lods
lods
cmp
push
pop
mov
inc
jae
push
cmc
out
sbb
lock
cwtl
lods
inc
movb
imulb
pop
mov
sbb
inc
pop
pop
inc
subb
jne
or
sub
sub
repz
push
lods
mov
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
jle
push
outsb
jbe
jg
xchg
jle
js
mov
stos
es
jl
negb
sbb
mov
gs
orl
cwtl
jno
gs
sub
mov
jne
mov
add
outsl
mov
lcall
xchg
mov
ret
loope
jmp
inc
daa
sub
les
dec
ficoml
mov
push
jp
mulb
lock
in
pop
ljmp
and
mov
push
sbb
inc
xchg
loope
movsl
or
cmp
mov
stos
and
fwait
jge
ret
rolb
outsb
shlb
xchg
aad
dec
stc
xor
loopne
ja
xorb
jl
fbld
mov
add
lcall
dec
rcr
loop
mov
jnp
cmp
call
and
fldenv
mov
lahf
push
ljmp
fidivrs
xor
hlt
sbb
sbb
or
jle
inc
cmp
cltd
xchg
int3
mov
push
cmp
pop
in
inc
aaa
add
aad
lds
xchg
outsl
pop
popa
push
sub
mov
push
mov
pop
mov
je
mov
aas
cltd
cmp
cltd
ja
pop
jmp
test
movsb
aas
sti
imul
xchg
xor
in
mov
ja
inc
push
mov
icebp
incb
cmp
jo
and
inc
or
aam
testl
xchg
in
test
add
js
out
test
outsb
movsb
add
iret
shr
xor
bnd
insb
mov
sbb
data16
cs
mov
insb
add
icebp
sub
pop
jge
cli
aad
mov
fisttpl
jns
sbb
mov
jge
in
mov
dec
sub
cmp
test
std
out
dec
push
jmp
insl
cmp
stos
xchg
add
lret
dec
mov
cmp
stos
test
cmp
push
std
in
cli
jae
mov
jge
sahf
seta
pop
movsb
mov
mov
fisttps
outsb
push
pop
imul
push
mulb
adc
or
push
and
rorl
mov
repnz
inc
or
sub
mov
imul
pop
or
mov
cli
add
les
and
xor
or
and
rolb
outsl
lahf
cmpsl
mov
jne
test
or
xor
jo
mov
push
or
add
add
ret
fcmovbe
fcmovne
mov
pushf
scas
mov
and
xchg
jle
js
dec
xchg
ret
sub
dec
lret
leave
fisttps
lods
sbb
mov
dec
ret
lds
insb
in
xchg
dec
in
mov
stc
cmp
dec
mov
daa
push
or
pop
enter
popa
fnsave
dec
rcl
cmp
repnz
pop
or
sbb
sub
mov
xor
cmp
rorb
sbb
pop
push
mov
pop
xor
sahf
or
addr16
les
sub
mov
xchg
pop
pop
mov
mov
sahf
lods
mov
cmc
rorb
out
jg
pushf
sti
fimull
inc
aas
scas
loopne
sbb
jne
mov
mov
test
sarb
dec
and
and
fidivrl
dec
aaa
call
test
imul
cltd
ret
mov
add
pop
xchg
sub
shll
mov
pusha
fmuls
int3
jo
and
inc
andb
xor
scas
sbbl
and
xchg
outsb
adc
or
jae
loope
mov
mov
pop
adc
mov
sbb
movsl
and
adc
lret
xchg
movsb
mov
rorl
fwait
jb
cmpsb
xor
add
cmpb
pop
into
mov
jecxz
out
rcl
into
mov
ljmp
cwtl
jp
pop
shl
pop
leave
xchg
sbb
or
fdivs
add
lods
and
and
or
or
inc
jbe
xchg
test
dec
xchg
dec
jecxz
cmpl
sar
mov
fistps
push
xor
cmp
inc
push
sbb
test
xor
cmp
mov
leave
fisubrs
popa
inc
inc
enter
xchg
aas
roll
mov
or
pop
popa
fldl
cmp
bound
add
jl
jns
inc
subps
out
iret
cmp
mov
in
mov
xchg
inc
mov
lds
pop
pushf
sbb
jno
fildl
ljmp
add
push
pop
ss
into
lds
insb
rcrl
mov
push
outsl
rclb
dec
loope
add
into
pop
movsl
sub
stc
cvttps2pi
add
pop
sbbb
testl
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
out
fcoml
imul
fdivr
xchg
lret
out
xchg
lock
rcll
push
and
cmp
mov
adc
xchg
pop
daa
cli
adcl
fstps
stos
push
mov
and
loop
sbbl
int
or
loope
xor
addr16
dec
inc
sbb
fiaddl
leave
mov
cmp
xor
cmp
cmpsl
enter
or
sbb
pop
dec
pop
icebp
sub
sbb
lret
push
mov
pop
jg
pushf
movsl
dec
mov
std
pop
mov
mov
loope
enter
imul
mov
testl
mov
cmovne
jmp
add
stc
mov
filds
sub
divl
xchg
sti
xor
xor
mov
imul
inc
mov
test
add
lock
aad
nopl
push
lods
outsl
push
rclb
sbb
sbb
incb
jl
jb
push
aas
popf
adc
mov
push
in
mov
arpl
mov
mov
or
lods
xor
gs
lea
mov
and
adc
jb
outsl
mov
and
dec
insb
sbbb
iret
cmp
or
mov
fists
aaa
or
jnp
lcall
dec
jp
shr
or
adcl
mov
add
popa
mov
aas
repz
test
cmp
dec
pop
cmc
mov
lret
imul
stos
xlat
inc
es
lock
push
jnp
push
fcmovb
mov
call
xorps
and
movsl
push
sarl
jbe
jo
out
push
jmp
js
xchg
dec
jge
lods
outsl
jl
mov
mov
adc
mov
inc
das
mov
test
mov
dec
negb
shrl
bound
mov
rcr
test
call
pop
jge
mov
rorb
clc
icebp
mov
out
fs
inc
lret
lret
sarl
ljmp
xor
into
pop
pop
gs
mov
mov
pushf
pop
mov
xchg
and
daa
push
popa
cltd
dec
sarl
aaa
data16
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
hlt
inc
sub
xchg
jle
js
push
outsl
sbbl
rorb
popa
cmpsb
shrb
inc
pop
pop
xchg
ja
iret
jns
nop
ficomps
pop
push
push
sbb
sub
sub
or
dec
or
aad
xlat
stos
push
push
mov
jmp
dec
dec
pushf
outsb
push
cld
cmp
enter
dec
mov
push
fwait
movhps
mov
xchg
adc
jbe
aaa
std
mov
adc
sbb
pop
jno
cmp
xchg
cmp
pop
pop
xor
icebp
push
or
imul
insb
lret
push
jecxz
cmpl
out
popf
ja
mov
cmp
stc
cmc
or
mov
ficoml
push
iret
sbb
push
xor
iret
loopne
movzwl
lods
out
iret
mov
push
or
push
into
popa
sahf
and
xchg
pop
imul
push
inc
jp
sub
hlt
jns
rorb
sbb
push
xchg
fsts
push
inc
mov
out
xlat
fbld
push
aas
loope
push
inc
ret
aam
leave
mov
xchg
pop
pop
jle
lahf
add
insb
jl
pop
ds
std
pop
sbb
mov
and
mov
or
sub
mov
cmp
clc
sar
sti
daa
mov
rcrl
and
jg
mov
imul
leave
aas
pusha
jo
pop
pop
in
test
iret
leave
xchg
push
or
aas
inc
sbb
add
hlt
dec
gs
adc
test
xor
push
inc
mov
mov
cmp
shlb
cld
jne
scas
movl
outsb
and
test
sub
cld
out
pop
inc
ret
mov
aaa
mov
push
cmp
sbb
arpl
mov
arpl
dec
xor
ljmp
push
in
add
cmp
jnp
imulb
mov
jl
popf
adc
in
add
ret
adc
xchg
pop
frstor
cmc
and
mov
cltd
cltd
push
push
sbb
icebp
push
pop
pop
mov
fcomi
sarb
cltd
icebp
loop
jmp
sub
adc
insl
out
push
addr16
das
out
int
pusha
gs
into
sar
and
jno
mov
cmp
push
cmp
sbb
mov
push
cld
mov
js
or
sbb
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
shlb
dec
bound
xchg
jle
js
loope
dec
xlat
in
xor
push
adc
push
sub
jp
or
ret
push
xor
jecxz
mov
mov
int3
mov
xchg
out
or
nop
cmp
movl
outsl
add
xor
hlt
adc
fstps
pushf
mov
adc
jl
ret
fsubl
adc
adc
imul
xchg
mov
inc
stc
or
and
xchg
ja
or
xchg
dec
xlat
mov
daa
jbe
jne
dec
push
lret
sbb
adc
lahf
les
cmpsl
push
movsl
das
pop
mov
pusha
cmc
jge
int3
cmc
shr
jp
sub
mov
rcr
mov
and
mov
in
add
std
xorl
jo
mov
scas
mov
gs
inc
arpl
out
fwait
lods
jo
mov
mov
jmp
jbe
or
ljmp
test
out
popa
lods
in
dec
xor
js
mov
and
pushf
add
jmp
out
aas
or
leave
sub
pop
pcmpeqd
pop
inc
sub
sti
and
bound
mov
add
adc
xchg
gs
mov
xor
loope
imul
hlt
mov
push
xchg
push
in
adc
cmp
push
loope
add
add
subl
popf
int3
mov
push
das
and
aam
dec
and
jne
xchg
adc
fdivrs
adc
lods
dec
movsb
cmp
push
jmp
ss
mul
xchg
xor
inc
jecxz
cmp
dec
xorb
mov
sbb
lahf
rolb
movsl
push
dec
aas
and
sbb
mov
int
jmp
sti
jno
movq
fiaddl
adc
jl
data16
scas
leave
test
jo
aam
cwtl
and
jg
fsubrs
add
push
enter
or
fnstsw
fcmovnb
mov
ret
test
xchg
andb
movsl
mulb
mov
cltd
mov
out
adc
jle
in
fcom
in
enter
add
insl
jo
movsb
dec
and
std
jb
test
add
mov
inc
js
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
popf
mov
pop
jg
jg
add
std
repz
mov
xor
jmp
es
pop
sub
pop
pop
ret
data16
lock
aad
cmp
shl
daa
adcb
repz
sbb
push
fs
ds
cltd
xchg
cwtl
xchg
and
or
sbb
in
sbb
jl
or
inc
mov
cmpsl
xor
notb
cmp
cltd
and
or
rorl
mov
push
and
jg
cwtl
stc
xlat
sbb
add
adc
push
lahf
test
fwait
pusha
pop
and
mov
icebp
sbb
pop
rorb
add
add
int3
sbb
mov
sub
faddl
xlat
int
sti
adc
je
inc
jge
call
adc
push
insb
iret
inc
addr16
test
aas
ljmp
lods
loope
pop
and
inc
insl
aaa
ja
inc
sbb
sub
in
fsubs
insl
push
cmc
sbb
jg
imul
imul
adc
icebp
jl
repz
cmp
das
xor
into
add
mov
gs
dec
fadds
jno
daa
cmp
ret
sbbl
lcall
into
mov
mov
jl
rclb
xchg
add
movsl
loop
enter
ret
test
inc
mov
lock
test
or
sbbl
nop
or
sbb
and
mov
jecxz
rcrb
cmp
fstps
inc
sbb
aad
and
mov
es
sbb
sbb
mov
xchg
add
xchg
push
sbb
inc
mov
repnz
ror
inc
add
mov
mov
sbb
outsl
jmp
test
cmpsb
mov
imul
loope
gs
add
jmp
cmp
aad
aad
popa
adc
push
lahf
fcmovnu
add
jg
add
fstpt
in
jo
inc
add
adc
cltd
xlat
popa
je
out
lahf
add
cmpsl
in
push
das
repz
adc
insl
jns
add
sbb
fs
dec
imul
sbb
movsb
out
cli
push
jecxz
mov
popl
lret
fistps
push
jae
mov
insl
sub
or
in
roll
push
add
imul
in
and
mov
leave
or
xor
leave
enter
jecxz
jge
dec
mov
xor
jnp
outsb
xchg
mov
and
dec
add
sbb
sbb
mov
jnp
mov
in
xor
jbe
sub
shlb
inc
mov
or
loopne
ficompl
adc
ret
xchg
outsl
in
int3
repnz
fildll
xchg
xchg
mov
in
shrb
fmul
xor
push
inc
das
and
int
mov
nop
mov
stos
gs
xchg
cmpsb
cltd
sub
daa
loop
test
enter
push
scas
into
mov
aaa
xor
mov
adc
inc
mov
lcall
mov
xor
xchg
test
je
or
mov
lahf
icebp
xchg
push
jae
lea
int3
pop
punpckldq
in
std
aaa
lock
xchg
out
arpl
fisttpll
add
inc
out
jae
out
add
fdivp
pop
mov
sub
test
dec
mov
fdivl
orl
outsl
cld
cmp
mov
pushf
add
sbb
shll
in
ret
inc
dec
pop
faddp
mov
push
push
out
mov
pushf
movb
or
test
aaa
sbb
add
fistl
in
je
aam
xchg
cmpsb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
push
add
lret
fadds
push
mov
aas
dec
lock
adc
inc
ljmp
outsb
iret
mov
lret
add
or
sbb
inc
test
xchg
dec
jae
aad
add
dec
mov
ljmp
adc
dec
frstor
leave
cs
mov
mov
in
pop
call
pop
lahf
adc
lock
mov
dec
rorb
xchg
jp
faddl
int3
loopne
subl
mov
cmpsl
push
jb,pn
or
mov
shr
shr
xor
xchg
clc
push
jg
add
and
js
lret
add
daa
jge
or
adc
ss
ret
inc
lds
mov
mov
inc
in
sub
mov
std
lret
lds
mov
movsl
add
sbb
popf
inc
mov
mov
pop
stos
dec
add
mov
ljmp
lcall
jne
add
pop
fistpl
popf
clc
scas
jns
fdivr
lret
addr16
mov
jae
or
ret
push
repz
push
and
add
enter
xchg
sti
push
insl
jecxz
jle
stos
icebp
stc
push
ffreep
loop
sub
push
push
js
add
fiadds
leave
push
push
push
pushf
addb
jmp
xchg
mov
xchg
mov
sub
loopne
xorb
jg
xor
aas
mov
cmpsb
jecxz
adc
push
mov
pop
push
pop
nop
negl
aam
adc
sahf
fmuls
in
xor
jmp
fsubrp
sbb
out
mov
xchg
pop
or
loop
mov
data16
lds
pop
add
cmpsb
call
sbb
adc
out
std
xchg
push
inc
mov
push
js
loope
movsb
jbe
mov
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
cmp
adc
aaa
jg
jnp
js
arpl
mov
sub
mov
pop
rol
loopne
cmp
mov
add
stc
jmp
arpl
jnp
xor
shrl
inc
dec
jg
pop
popf
sbb
in
cltd
loop
jmp
fcmovnbe
jnp
mov
inc
repz
shl
cmpsb
cli
fisttpl
roll
cmp
mov
adc
mov
sub
cmp
std
and
push
in
test
inc
out
inc
outsl
jae
fmul
vldmxcsr
or
incb
xor
pusha
nop
or
in
sahf
xor
adc
mov
aas
movsb
shll
or
aam
mov
xchg
repz
jmp
adc
cmpsb
sarb
push
int3
xchg
xchg
jbe
push
push
neg
pop
cmp
mov
out
pusha
or
push
dec
mov
pop
mov
mov
test
test
lret
jns
mov
sub
ds
loop
leave
xor
in
scas
push
xor
jbe
adc
movsb
push
loope
dec
jl
movsb
pop
jbe
sub
bts
arpl
mov
dec
arpl
sbb
lea
addl
std
push
daa
mov
add
dec
add
cmpsl
sub
push
fs
sar
pop
aad
lcall
push
or
das
in
mov
mov
cltd
mov
das
mov
adc
pop
pushf
xchg
stc
ljmp
mov
xor
sub
push
fwait
stc
ljmp
and
xchg
jecxz
rcrb
xchg
add
cli
lea
sub
fdivrp
jg
outsb
mov
and
add
and
mov
add
sbb
rorb
insl
test
jl
stos
stos
ja
ss
mov
fmull
cltd
aam
and
mov
pop
sub
jb
dec
clc
sub
sub
sbb
push
iret
cmpsb
hlt
jmp
add
movhps
xor
xchg
add
into
pop
lret
call
imul
ja
cmpsl
push
leave
dec
push
add
out
xchg
xor
lret
dec
cmp
xor
sub
push
lods
and
out
cltd
pop
and
ret
sbb
xchg
or
lods
mov
dec
fcoml
mov
leave
jp
adcb
notl
jb
daa
cs
jns
test
daa
pop
fidivrl
scas
pop
xchg
fildll
pop
and
mov
std
fwait
scas
inc
push
adc
loope
add
pop
push
mov
in
cltd
hlt
std
mov
leave
sub
pop
cmp
dec
jns
sbb
xor
xchg
inc
enter
pop
push
sbb
mov
in
mov
mov
and
xchg
mov
js
lods
outsl
cmp
js
add
std
fsts
sbb
jle
movsl
mov
add
xor
xchg
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
pushf
adc
xchg
sbb
js
jle
js
add
mov
mov
xchg
fisubrs
add
mov
push
popf
data16
push
movsb
mov
sahf
dec
hlt
sub
cli
jle
cmp
inc
inc
cli
and
xor
push
xor
movsl
add
inc
daa
aas
adc
daa
leave
xchg
test
push
fst
push
push
ljmp
out
add
adc
repnz
je
push
xchg
mov
inc
jno
in
jno
xor
mov
pusha
jp
outsb
pop
das
add
xlat
addb
dec
addr16
cwtl
mov
dec
and
mov
addr16
mov
mov
jbe
out
insb
add
or
or
lock
jg
popa
pop
sub
inc
pop
sbb
int3
test
aas
push
jb
je
sti
cmp
scas
xlat
cmpsb
adc
dec
dec
push
and
shlb
or
sbb
adc
movsb
mov
or
push
stos
loope
mov
add
jbe
test
mov
das
sbb
xchg
pop
mov
xchg
outsl
outsb
and
fldl2e
sti
and
mov
notb
cmpsb
aad
dec
inc
lret
cltd
mov
jo
lret
pop
loopne
pop
push
fstpt
rorb
imul
push
adc
rorb
es
mov
ja
sbb
or
out
push
andl
movsb
mov
cs
mov
fisubrs
add
lods
ds
mov
push
and
shrl
adc
cltd
into
imul
sbb
cwtl
pop
bound
or
ret
dec
pop
push
inc
icebp
sub
adc
dec
push
inc
and
pop
mov
mov
test
push
cmpl
fdivrs
mov
into
sar
push
add
data16
push
in
jle
xchg
aas
add
push
leave
jmp
fcompl
cmpsl
pop
inc
lea
push
add
mov
stos
dec
sub
fdiv
jne
popf
pop
sub
aad
pop
add
push
dec
fdiv
in
js
out
imul
loope
inc
ja
enter
sbb
inc
pop
out
dec
addr16
sti
movsb
push
js
loopne
lahf
pop
aaa
push
daa
mov
sub
cmp
adc
push
pop
imul
pop
lahf
js
sbb
jae
test
and
and
shr
xchg
push
sbb
jge
push
sbb
imul
daa
cmp
mov
and
sbbl
rorb
mov
lret
arpl
or
xor
mov
insb
sbb
or
inc
repz
and
int
inc
inc
out
mov
mov
test
mov
push
fcmovne
popf
fldl
mov
sbb
shll
dec
sub
in
and
sbb
in
aad
xor
daa
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
mov
js
jle
js
cmp
sub
adc
jp
add
lcall
lret
jmp
add
push
xlat
sbb
sbb
scas
fldl
int3
xchg
inc
xor
or
add
movsl
dec
sbb
xorb
addr16
popf
mov
push
or
fsubrs
push
and
out
popl
mov
jae
test
stos
adcl
inc
xor
test
std
sbb
mov
inc
mov
xor
in
xor
repnz
and
or
icebp
ds
adc
mov
sub
rol
inc
inc
jmp
mov
int3
ret
xchg
enter
aas
add
push
loopne
imul
push
adc
out
and
mov
dec
or
cmpsl
scas
loope
push
sub
adc
and
push
cs
add
jg
sbb
sbb
push
push
fistl
push
ljmp
int3
lods
stc
and
adc
test
jp
daa
test
scas
clc
add
pop
arpl
hlt
cs
mov
out
sbbl
mov
dec
fnstcw
test
movsb
xor
add
xlat
xchg
dec
rclb
sbb
jae
sub
sbb
lahf
loop
iret
jb
mov
lcall
ret
test
int3
mov
sub
xor
movsl
pop
or
es
shrl
cmp
sbb
mov
js,pt
mov
sbb
mov
stos
aam
fwait
das
push
sar
loope
mov
mov
scas
insb
lret
and
adc
fldl
iret
xor
out
push
ficomps
rorb
dec
xor
imul
outsl
or
cli
inc
lahf
test
mov
ror
cmp
test
daa
jmp
inc
cmc
bound
pop
and
lock
les
bound
and
rcrl
jle
cmp
jnp
out
cltd
daa
int3
push
test
scas
sub
and
fisttpll
aam
xacquire
shll
adc
sbb
mov
dec
push
nop
adc
inc
iret
dec
push
inc
push
push
loopne
inc
add
lds
adcl
call
cmpsl
inc
push
out
mov
fldenv
lret
jmp
mov
add
jb
sbb
call
mov
aaa
pop
push
push
mov
jne
mov
mov
insb
push
in
mov
out
ret
adc
jae
jns
inc
out
mov
mov
aam
das
or
mov
outsl
jecxz
int3
and
fwait
lods
fucomp
out
lds
jle
sub
out
out
inc
push
fistpl
popa
mov
mov
push
icebp
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
imulb
pop
jg,pt
jnp
js
add
imul
jle
lods
mov
xchg
pop
std
inc
negl
jae
mov
xchg
xchg
into
cmpsb
mov
lds
mov
test
and
jne
ss
orl
es
pop
sti
divl
mov
jb
and
inc
in
int3
jb
nop
ss
jecxz
and
lcall
push
out
mov
jg
pop
test
sbb
scas
fstps
xor
lea
mov
cmp
jnp
ja
jmp
fisttpll
mov
fstpt
repz
out
ss
mov
add
sbb
ja
stc
insl
pop
lea
adc
rcrb
out
lahf
pop
popf
dec
dec
push
push
jecxz
hlt
cmp
cmp
ja
mov
mov
fildl
test
and
or
in
outsl
jle
imul
lock
arpl
ss
dec
ror
or
dec
add
rcrl
sub
in
dec
fsubr
push
or
nop
pop
cs
std
sti
mov
add
jns
pop
mov
dec
push
pop
scas
mov
inc
xchg
dec
roll
sbbl
sub
loop
rol
daa
sub
mov
cmp
inc
xor
loopne
and
jae
lods
add
sub
lock
sbb
sub
jne
test
or
loopne
in
pop
fwait
inc
jo
enter
and
push
inc
push
rcll
cmpsl
aam
xorb
sbb
cmc
cmp
pusha
sub
scas
adc
xor
aas
int3
inc
mov
add
je
out
and
pop
fistpll
xchg
mov
and
xor
loope
cltd
sbb
pop
adcb
das
pop
arpl
add
or
aas
cwtl
lret
push
cmp
ds
jo
jl
and
ret
push
pop
icebp
pop
gs
test
add
ljmp
test
lret
xor
mov
cmpsb
loop
sub
out
jmp
inc
enter
int
mov
mov
xor
rorb
jle
push
jp
in
rcll
sub
fimull
add
jle
roll
scas
repnz
into
pop
mov
sub
xor
clc
push
lret
sbb
xor
xor
sub
loope
ljmp
fimull
sub
sbb
jge
sahf
xor
xchg
dec
lock
repnz
testb
sub
pusha
aas
popa
mov
cmp
das
lahf
inc
xchg
sahf
lods
xchg
push
xchg
jmp
daa
push
les
out
ror
and
mov
or
jecxz
jne
xchg
movsb
sarb
addr16
rclb
adc
outsb
xchg
cwtl
inc
popa
lods
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
mov
jg
jnp
js
movsl
xchg
cmp
dec
mov
mov
jecxz
cmp
fisttpll
cld
cltd
inc
cmp
je
inc
out
rcll
cmpsl
add
xchg
js
mov
icebp
lock
jg
and
inc
out
or
inc
sbb
inc
and
jmp
fistps
sub
adc
or
or
pop
inc
mov
or
imul
sahf
test
cmp
repnz
testl
mov
pop
loop
fldcw
in
out
push
push
sub
jmp
inc
xlat
lock
cwtl
jns
insb
ja
rcr
cmp
push
inc
lds
pop
faddp
adc
ss
push
fmull
mov
cmc
jo
xchg
test
movsl
loop
sub
xor
dec
inc
stc
mov
out
mov
sub
adc
leave
pusha
xor
sbb
lret
jb
mov
lock
mov
inc
push
adc
int3
adc
adc
ds
mov
add
loope
in
sbb
daa
xor
push
cs
sbb
xor
movsl
adc
sti
sub
clc
in
or
mov
or
mov
lcall
das
xchg
repnz
stos
cmc
ret
sub
nop
fs
les
pusha
adc
stos
or
adc
inc
sub
xor
push
xchg
mov
aas
push
xchg
push
aam
lock
inc
in
cmp
aas
je
mov
xor
cltd
dec
jp
push
pop
loopne
out
mov
and
mov
mov
jmp
dec
mov
fsubrs
mov
lcall
mov
sub
inc
shll
mov
cmp
cmpsl
pusha
popf
scas
mov
cmp
cmp
das
and
lcall
sbbb
push
push
jne
shll
dec
push
shlb
fsubr
xchg
out
mov
dec
push
or
shlb
into
lods
subl
sub
inc
add
iret
lock
mov
mov
pop
or
idivb
lea
nop
pop
daa
loope
mov
mov
mov
loop
pavgw
pop
loop
lret
sbb
xchg
mov
jno
hlt
push
mov
xor
mov
and
stos
inc
sti
mov
imul
push
push
xor
call
dec
lods
rcr
aam
int
test
fildll
es
cs
outsl
add
or
lock
jnp
xor
loopne
loopne
sub
xor
mov
nop
dec
subl
push
out
orl
or
push
movsl
pushl
mov
jmp
lret
rol
leave
shll
add
jg
jnp
js
aaa
sub
mov
call
xchg
lods
and
imul
popa
xor
mov
pop
ljmp
mov
add
lods
cmp
icebp
inc
or
ljmp
pop
xchg
outsb
xchg
test
xchg
scas
movb
cld
push
push
hlt
in
dec
mov
xchg
fwait
outsl
out
js
scas
cmp
orl
push
stos
mov
or
jae
pop
aam
xchg
pop
pop
mov
mov
jg
je
fisubs
and
sub
mov
insl
mov
pusha
sub
cmp
inc
sbb
idivl
mov
std
add
arpl
jae
es
add
adc
push
pop
sarb
push
lds
push
fcompl
dec
jmp
in
lea
hlt
sub
ror
lds
shll
adc
nop
sbb
fisubs
sub
lock
adc
popa
adc
jns
xchg
inc
imul
mov
mov
test
mov
fadd
mov
lret
and
in
xor
out
jnp
inc
sbb
xor
jle
adc
inc
call
xchg
outsl
daa
xchg
pop
or
or
jo
rcrb
je
pop
lods
xchg
add
mov
sbbb
xchg
push
daa
xor
and
xchg
mov
fwait
imul
and
scas
jmp
mov
pop
loop
out
fs
and
adc
inc
mov
mov
in
push
inc
lods
mov
mov
pop
clc
push
sub
lea
mov
adc
xor
test
decl
jmp
jo
push
mov
lods
lret
mov
fnsave
sub
loopne
inc
sbb
pop
sarb
leave
rcll
inc
or
cmc
das
js
es
xor
jbe
jge
sub
sti
adc
dec
daa
add
std
sbb
std
insl
and
sub
sbb
pop
jae
idivl
aam
cltd
les
negb
sbb
jecxz
test
adc
out
fimuls
sbb
jae
fistpll
cmpl
sbb
loop
ds
cli
jae
lock
daa
pop
test
decb
add
mov
idivl
mov
jo
and
into
lea
idivb
or
nop
rcrl
jnp
icebp
jbe
and
aam
pop
and
adc
cli
mov
and
imul
mov
pop
mov
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
xor
mov
outsb
xlat
cmpsb
sbb
mov
sub
cwtl
mov
je
xor
pop
aam
negb
or
ret
pop
or
lahf
pop
cmp
popf
sahf
cmp
imul
jecxz
call
push
lcall
test
sbb
xchg
clc
cmp
dec
in
jmp
add
jae
jno
dec
repnz
mov
sbb
mov
sub
imul
lahf
push
test
jno
xchg
imull
rcr
aam
outsl
push
mov
sub
and
cltd
sahf
jne
jecxz
shll
mov
cmp
cmp
movsb
sub
add
mov
movswl
rolb
movsb
or
mov
mov
or
sub
jno
xor
mov
icebp
lock
scas
loop
pop
lret
sub
fsubrs
sbb
int
mov
sub
cltd
push
popa
push
xlat
jg
cld
mov
imulb
or
add
addl
xor
nop
push
mov
sub
xchg
jl
adc
push
cmpsb
or
and
mov
lcall
fcomp
sbb
mov
fs
jb
pop
rcrl
divl
inc
cmp
xchg
push
cmp
mov
icebp
jb
adc
sti
arpl
outsb
inc
int3
xchg
mov
jae
movsb
cmp
aad
stos
jle
shrb
in
popf
cld
jns
stos
sbb
in
push
adc
or
es
push
int3
xchg
dec
out
mov
mov
mov
test
daa
cmpsl
mov
pushf
das
std
cwtl
or
cs
stc
cmpsl
in
in
sbb
cmpsl
jp
dec
cltd
fldl
xchg
insb
loope
fs
fldlg2
imul
out
sub
sub
hlt
xor
xor
test
and
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
stos
cmp
and
jg
adc
js
in
ljmp
pop
and
push
bound
or
aas
inc
inc
add
leave
pop
sub
or
enter
pop
cltd
inc
or
mov
cmp
insb
pop
out
insb
cli
aad
out
jnp
and
sarb
cmpsb
pop
es
hlt
lds
push
adc
fs
pop
xor
pop
xor
dec
fistl
shlb
not
xchg
sahf
insl
sub
push
xorb
icebp
jno
push
imul
mov
fiaddl
movsb
out
scas
inc
sbb
or
add
mov
xchg
xorl
sub
out
sub
popa
inc
lock
adc
cld
push
data16
or
imul
pop
pop
or
subb
jge
into
lods
dec
dec
pop
push
ja
add
fdivl
sbb
in
pop
xor
shrb
subl
pop
daa
bound
ret
xchg
std
test
dec
jo
dec
aam
xor
inc
xchg
mov
sbb
xlat
fs
mov
xchg
sbb
xor
in
rorb
cmp
lret
mov
sub
xchg
sahf
and
aam
les
xchg
pushf
inc
and
fdivrs
movsl
mov
mov
adc
adc
das
rorw
pop
aam
insb
imul
inc
clc
lahf
fidivl
outsb
inc
adc
cmp
mov
rcl
mov
out
outsb
dec
fnsave
fwait
push
orl
stos
aas
pop
in
dec
cmc
insl
lds
test
arpl
add
push
repz
adc
push
sub
ror
imul
ds
jmp
add
mov
sub
mov
sub
adc
cmp
cmp
fmul
adc
xor
dec
mov
orl
xorb
shll
lods
and
out
push
cmp
aaa
pop
pop
mov
xchg
add
push
inc
and
loopne
paddsw
jno
push
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
jbe
cmp
jg
adc
js
scas
test
insl
mov
fs
push
int
mov
pop
jb
out
mov
lret
psadbw
sahf
adc
xor
sbb
imul
lret
ljmp
ror
hlt
adc
sti
jns
mov
hlt
stos
std
sub
mov
xor
or
lods
mov
cmpsb
xchg
pop
inc
push
scas
dec
test
es
mov
dec
sbb
icebp
and
sub
movsb
mov
and
pop
xchg
xor
loopne
nop
scas
add
fyl2x
adc
push
mov
jns
mov
movb
add
aaa
fwait
int
pop
aam
cmp
mov
inc
fidivl
iret
xor
clc
push
pop
insl
mov
cmc
nop
add
mov
mov
pop
leave
mov
cmc
push
pop
pop
lahf
add
sbb
pop
in
mov
and
lahf
lods
shl
xchg
inc
sub
mov
adc
xor
mov
rolb
xchg
cmpsb
iret
mov
xor
push
out
mov
push
or
fs
pop
push
sbbb
into
inc
jl
or
imull
mov
add
dec
push
inc
mov
mov
loope
xlat
pop
out
addr16
push
shll
mov
movb
js
sub
push
loop
adc
jmp
test
mov
lret
push
shl
repnz
subl
push
mov
push
in
lret
sub
insl
fistpl
rep
xor
lods
push
mov
les
enter
jge
aas
mov
jmp
outsb
push
incl
dec
mov
push
arpl
xchg
testl
ret
pop
mov
loopne
stc
out
xchg
cltd
fwait
pop
xchg
fcmovu
jno
mov
or
fimull
mov
loope
sahf
sub
repnz
repz
std
add
xchg
and
xchg
jnp
shrb
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
repz
ror
jg
adc
js
push
int3
mov
push
xor
pop
rclb
leave
push
sbb
pop
pop
xor
adc
aas
dec
pop
mov
das
icebp
xor
sbb
lock
adc
and
inc
push
xchg
add
or
insb
add
fistpll
xorb
sub
sbb
mov
mov
add
call
sub
inc
pop
and
mov
dec
jge
ret
lret
inc
sub
push
adc
mov
add
pop
mov
xor
and
pushf
pop
inc
test
in
push
into
arpl
and
enter
mov
dec
das
inc
popf
pop
test
loopne,pn
xchg
push
cmpsb
or
test
fstp
xchg
xlat
popa
int3
or
sbb
xchg
mov
test
hlt
scas
repz
pop
mov
xchg
and
mov
and
test
inc
dec
movsb
shl
ja
lcall
loopne
xlat
adc
and
cwtl
cwtl
cwtl
jnp
outsb
dec
cli
sbb
pop
and
data16
sbb
scas
repz
movsb
jp
addb
mov
daa
nop
fcomps
gs
fdivs
ret
push
mov
cs
add
xchg
adc
ds
xor
imul
roll
mov
push
inc
fisttps
loop
shlb
cli
mov
sbb
sub
sbb
outsb
jl
ss
das
pop
xchg
adc
add
xor
xlat
jg
pop
mov
lret
scas
outsl
and
mov
push
hlt
or
aad
ds
je
push
add
adc
adc
call
xchg
pushf
fstps
adc
xchg
mov
stos
out
fiaddl
jne
cmp
loopne
rorl
mov
add
repz
push
insl
jne
iret
pop
pop
fbstp
mov
repz
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
add
int
js
jle
js
sub
stc
lea
jbe
aas
inc
sti
sub
mov
lcall
hlt
imul
cmp
inc
push
xor
mov
jmp
leave
mov
ljmp
addb
insb
popa
sahf
stc
enter
lods
loopne
mov
dec
mov
add
jecxz
mov
sub
mov
mov
test
xor
or
andb
sub
inc
sbb
js
mov
lret
pop
cwtl
clc
rcrl
in
pusha
pop
sarl
add
sarl
mov
cmp
in
dec
out
mov
mov
fimull
insb
sbb
mov
and
div
push
lret
int
jae
sub
adc
fistpl
xor
sub
loop
into
in
pop
jbe
xchg
ds
sub
cltd
xor
cmp
sbb
sbb
mov
or
adc
stos
sub
popl
sub
cmp
and
in
scas
inc
stc
sbbl
loope
lea
rol
xor
repnz
adc
inc
cwtl
pop
leave
and
add
pushf
scas
movsb
outsl
dec
mov
sbb
lcall
mov
inc
cmp
jno
xlat
jl
in
js
sub
or
xor
cld
lret
mov
stos
sub
sti
in
jbe
pop
xchg
sub
clc
mov
fildl
mov
imul
les
add
jo
sahf
xchg
into
xchg
mulb
xchg
add
addr16
lea
and
sarb
dec
jmp
gs
fisttpll
cmpl
mov
cmp
push
fcmovb
xlat
adc
mov
cmc
fbstp
fldenv
and
sbb
mov
and
test
add
popa
cmpsl
inc
add
jne
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
lret
lds
adc
js
in
mov
lret
js
stos
insb
cmpsb
xchg
es
outsl
and
aas
icebp
enter
xor
xchg
pop
mov
mov
movsl
add
sbb
jmp
push
mov
aam
stc
jg
popf
inc
fsubrl
arpl
xchg
iret
mov
call
rcll
mov
sbb
out
inc
add
xor
cmc
pop
sbb
sbb
jle
mov
pusha
or
mov
mov
daa
and
cmp
push
lret
and
cmpsl
jge
std
jp
mov
js
sbb
lret
add
test
aaa
je
lahf
hlt
cmpsl
addr16
mov
jae
rcr
in
pop
mov
cmp
enter
inc
repz
mov
int3
int3
push
mov
sbbl
mov
jmp
out
and
mov
cmc
adc
imul
and
push
je
outsl
jbe
fimuls
nop
lret
add
push
xchg
inc
mov
into
dec
adc
jle
ret
sarl
lods
cld
mov
lahf
cs
outsb
aam
push
popa
or
shll
mov
mov
mov
dec
stos
adc
shrb
movsl
cmpsl
fwait
pop
inc
adc
sahf
inc
inc
push
sbb
cmpsb
pushf
loop
mov
mov
mull
jnp
pop
inc
imul
into
ljmp
iret
loop
rolb
mov
pushf
add
pushf
daa
inc
sti
pop
sub
jmp
dec
sbb
sti
xlat
mov
lret
jne
dec
dec
cmp
loop
dec
cmpl
jne
inc
xor
bound
insb
leave
pop
push
cmp
stos
and
ret
sbb
scas
ljmp
dec
pop
andb
jl
inc
xor
in
mov
mov
data16
loopne
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
lret
push
aaa
cwtl
sarl
adc
js
xlat
or
sarl
filds
cmc
inc
lods
push
xor
rorl
or
mov
xchg
cli
subb
mov
std
fidivl
iret
fmuls
xchg
cmp
sub
into
lods
inc
xorb
mov
negl
xor
ja
sbb
pusha
xchg
out
sbb
fwait
mov
stc
enter
ljmp
mov
in
out
sbb
mov
xchg
bswap
cmp
push
mov
enter
jmp
jns
push
pop
insl
test
test
sbb
cld
push
enter
inc
mov
pop
cld
dec
jl
fldt
js
sub
mov
inc
push
into
mov
aad
repnz
sub
sbb
sub
cwtl
xor
jbe
pop
push
fisubs
sub
iret
clc
ret
fwait
jle
xchg
pop
push
inc
aam
aad
vmovhpd
inc
insb
or
ds
sahf
jl
pusha
testl
orl
dec
cmp
repz
popf
pop
dec
and
test
inc
popa
jecxz
xchg
sahf
push
or
adcl
lret
or
fistpll
xor
mov
lret
fsub
mov
movd
dec
cwtl
leave
sbb
ss
stos
pop
mov
cwtl
outsb
jge
in
push
sbb
lods
jmp
movsb
cmpsb
cmp
dec
fcomps
stc
jg
push
rol
add
mov
mov
push
ljmp
lods
aam
cwtl
mov
fwait
lret
add
cmc
int
push
sub
iret
icebp
mov
xor
mov
mov
mov
inc
pop
dec
cltd
sub
movlps
lret
push
and
xlat
push
mov
adc
inc
inc
popf
out
inc
push
jb
sbb
or
mov
gs
in
or
add
jb
fsts
xor
or
push
call
in
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
test
aam
mov
jg
adc
js
inc
movl
ds
cmp
adc
cltd
jl
fs
sub
sub
stc
arpl
jbe
out
fisubrl
lods
aas
xchg
mov
imul
fwait
sub
lcall
mov
les
adc
sbb
push
or
push
cmp
test
loope
dec
or
repz
inc
pop
rclb
xor
enter
cltd
sti
adc
mov
scas
loopne
popa
mov
add
cmp
fwait
test
cli
mov
in
jp
xchg
inc
cwtl
aad
adcb
add
test
dec
pop
faddl
lock
push
test
pop
jle
out
xchg
jmp
clc
mov
insl
xlat
pop
mov
sbbl
lcall
jnp
add
adc
into
push
cmpsl
pop
fists
mov
les
frstor
lods
sub
dec
insl
aaa
jp
sbb
mov
in
cli
push
fmulp
jo
repnz
orb
and
rcr
xor
xchg
fnstsw
ret
inc
out
xchg
add
sub
in
sub
mov
ja
adc
pop
jo
mov
xor
xchg
xchg
fisubrs
in
pop
dec
or
mov
jnp
and
pushf
test
and
dec
mov
insl
loopne
mov
mov
mov
cwtl
mov
xchg
mov
push
jo
xlat
test
fmull
out
inc
jecxz
xor
xchg
je
fsubrp
inc
inc
cmp
or
push
sti
call
in
lahf
and
stc
shll
push
fiadds
sub
test
pop
add
imul
pusha
dec
neg
and
sbb
push
fstpl
push
shll
into
aas
jns
fwait
push
pop
add
inc
lea
add
aad
mov
mov
sub
mov
sbb
xchg
and
loop
sub
mov
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
adc
inc
jp
aad
js
jle
js
xchg
mov
jl
cmp
add
icebp
lods
xor
sbb
hlt
cmp
mov
inc
inc
jl
in
ret
push
data16
inc
je
mov
dec
jecxz
in
lods
cmc
dec
ss
scas
or
mov
pushf
dec
sub
insb
divb
inc
imul
bound
aas
push
and
push
and
icebp
hlt
push
call
adc
xor
sbb
jp
fwait
fs
cwtl
or
inc
jae
lea
push
out
pop
sbb
subb
sbb
jo
or
into
cmpsb
cli
and
ficompl
sub
and
push
mov
cmpsb
mov
pop
stos
add
pop
and
iret
push
mov
and
idivb
jo
pop
daa
or
mov
push
sbb
js
in
jecxz
adc
push
dec
pop
xchg
lods
std
mov
in
sahf
xor
out
xchg
mov
stc
aad
mov
pop
ds
xor
in
loopne
ss
or
fisubl
jp
lods
xor
fs
mov
mov
cmpsb
dec
popf
out
jle
js
mov
popf
push
inc
cwtl
clc
aam
mov
out
lret
and
inc
jmp
mov
data16
ss
push
xor
pop
movsl
dec
ss
sub
jns
xor
dec
and
add
push
lock
imul
push
xor
mov
mov
adc
xchg
cmp
and
bnd
lret
shlb
aas
fwait
cmp
mov
mov
icebp
bound
cli
movsl
push
bound
std
inc
inc
jbe
mov
add
sbbb
adc
dec
std
xor
lahf
fisttpll
dec
xchg
pop
insb
xchg
inc
adc
popa
push
enter
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
mov
adc
js
mov
pop
rolb
filds
cmp
mov
mov
mov
sbb
or
hlt
pop
push
imul
scas
out
jnp
cmc
in
xchg
pop
cwtl
rcrl
test
cmp
adc
fstp
test
in
jp
jle
mov
fs
pop
sti
adc
leave
xchg
xor
xchg
dec
imul
jecxz
lock
aaa
add
inc
sbb
xchg
and
movsl
jg
bound
cld
fwait
leave
and
aas
inc
push
loope
pop
aad
jnp
fs
in
push
enter
push
push
and
mov
pop
sbb
dec
lds
push
fisttps
scas
stos
inc
and
pop
pop
aaa
lret
jo
jg
in
das
inc
dec
adc
pop
inc
jecxz
mov
dec
sbb
xchg
fldl
lock
cmp
gs
push
test
in
dec
dec
lods
daa
mov
fistl
pop
jecxz
addr16
inc
or
mov
sub
jb
dec
cli
cmp
push
push
sbb
movsl
fcompp
sub
dec
fldt
cld
pop
stos
xchg
xchg
in
test
lea
lds
inc
lods
jb
push
push
mov
or
jg
rcr
les
add
enter
cmpsb
lds
in
cmp
xchg
out
bnd
xchg
dec
pop
into
or
pop
push
push
gs
push
mov
cmp
rcll
lods
pusha
imull
rcrb
mov
lret
fnstenv
nop
insb
cmp
adc
xchg
les
mov
mov
jmp
sahf
aad
push
mov
xchg
mov
or
or
shrl
xor
dec
ja
mov
jne
sahf
stos
push
pop
movsl
pop
add
lock
js
pop
iret
xor
fucomi
push
enter
mov
adc
out
lds
addr16
xchg
sub
jmp
ret
aas
fxch
rcr
mov
jb
mov
fdivrs
adc
js
mov
and
xchg
lret
imul
data16
push
jb
jb
dec
pop
fs
jl
mov
add
push
pop
or
stc
jp
adc
lahf
sub
sub
sub
daa
out
lds
mov
inc
and
pop
popf
call
outsl
scas
push
xstore-rng
insb
push
je
fs
test
sub
mov
jecxz
or
add
pop
cmpsb
popa
inc
leave
mov
ja
dec
clc
sbb
add
lock
ret
push
out
lret
sbb
adc
push
push
rcrl
loop
or
inc
movsl
les
loop
push
xchg
pop
out
mov
ficoml
popa
xchg
jbe
mov
outsl
sub
shl
mov
ret
sbbl
cmpsl
xchg
xchg
fldln2
cmp
xchg
pop
into
test
bound
adc
inc
pop
inc
loopne
or
xor
cmpsl
mov
inc
fwait
out
or
aaa
inc
and
mov
sbb
push
stc
xchg
loopne
push
xor
xchg
imul
fwait
pop
push
es
mov
xlat
ljmp
ja
mov
mov
adc
mov
xor
xchg
xor
loop
orb
jo
sub
jns
mov
fs
out
pop
pop
cmp
pop
and
inc
push
mov
sbb
jg
cmp
icebp
orb
inc
fdivr
mov
sub
pop
cmp
cld
xor
popf
in
mov
and
mov
pop
jge
xchg
in
sub
xchg
jns
xorb
adc
push
or
xor
cmpb
xchg
dec
in
fisubs
scas
add
imul
cmpsb
dec
push
and
jl
fs
mov
push
mov
xchg
xorb
jge
test
cmp
fucomp
xchg
popf
xchg
jmp
int
int
fnstcw
mov
jg
adc
js
add
mov
mov
pop
jecxz
outsl
scas
and
nop
inc
data16
xlat
add
add
xor
mov
jne
fstpt
shll
jg
negb
lret
jecxz
std
out
mov
push
lret
inc
dec
sub
jle
xor
mov
hlt
ret
fisubs
cmp
xor
jmp
inc
mov
push
jmp
cmpl
pop
incb
hlt
aam
mov
bound
dec
sub
and
sbbb
and
sub
mov
sub
in
jecxz
inc
fidivrs
test
pop
mov
sub
mov
xchg
gs
bound
fists
testb
xchg
shlb
and
and
mov
fstps
nopl
repz
mov
jb
cmp
ret
sub
sbb
pop
xchg
mov
in
sti
lret
cmpsb
fld
and
aam
scas
icebp
pushw
jae
out
shll
out
xor
add
mov
pop
scas
adc
jno
jbe
xchg
add
xor
push
fstpt
shll
je
push
fisubl
sqrtps
adc
lea
movsb
inc
into
lret
call
outsl
dec
shlb
idivb
pop
xchg
pop
inc
push
enter
xlat
add
push
xor
dec
adc
scas
pop
out
dec
fdivrl
out
mov
cmp
push
fistpl
fwait
jecxz
dec
fists
icebp
sub
mov
mov
iret
lret
push
inc
int3
jg
test
sbb
dec
cmpsb
adc
jmp
test
cmp
jmp
movzbl
mov
or
xchg
inc
aaa
sub
add
pop
das
adc
jbe
jg
insb
or
add
add
mov
mul
adc
stc
sbb
ret
add
lcall
jmp
iret
enter
fcmovnu
xlat
push
addr16
shlb
jg
adc
js
test
push
ss
jmp
cltd
adc
jne
xor
repz
cld
jmp
push
mov
rcl
loopne
mov
or
pushf
and
stos
jp
nop
pop
mov
out
mov
xchg
movsb
dec
aas
adc
inc
scas
dec
cmp
es
shll
ret
cmp
jo
inc
pop
nop
insl
loope
insl
mov
aam
adc
insb
jmp
mov
cmpsb
add
shrl
mov
in
repz
cmp
in
popa
mov
cmc
roll
fadds
or
or
mul
push
andl
ret
push
pop
call
jae
jl
fisttpl
subb
out
adc
push
int3
pop
mov
cmpsb
cmc
imul
cmp
aam
adc
cmp
repnz
out
cld
jnp
mov
pop
cwtl
pop
jo
sbb
cmp
loop
xor
in
mov
rorl
xchg
mov
pop
enter
jo
mov
jge
pushl
rolb
fcmovnu
stc
jae
pusha
movsb
adc
mov
gs
and
mov
mov
push
adc
add
mov
cmp
dec
dec
cs
adc
mov
mov
xchg
push
das
ret
je
mov
xchg
enter
clc
jne
sub
xor
mov
cli
mov
jns
lds
mov
xchg
mov
inc
movsl
aaa
push
popa
sahf
jecxz
push
sub
insb
sbb
add
pop
jae
sub
sahf
inc
jg
je
or
inc
imul
mov
jne
out
loope
arpl
lods
lcall
repnz
xor
add
jmp
mov
scas
addr16
lahf
adc
mov
out
clc
jecxz
imul
cwtl
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
add
shl
js
jle
js
enter
jbe
cltd
xchg
dec
fcmovnb
inc
iret
dec
fld
pop
mov
movsb
jae
shll
mov
repz
cmp
cltd
dec
sbb
sti
and
lret
push
xor
ret
bound
adc
outsb
call
lahf
cmp
and
ucomiss
int
jge
sti
mov
xlat
push
loope
test
mov
xorps
pop
repnz
mov
mov
cltd
push
xor
xchg
cmp
sti
inc
ret
push
ret
ljmp
repnz
sub
lds
and
inc
jp
ds
icebp
xor
or
lds
test
lahf
sarb
aam
les
ja
add
addr16
mov
xchg
push
inc
and
imul
add
fcomip
xchg
adc
jmp
fcomi
out
std
pop
jne
sbb
aaa
xor
inc
hlt
icebp
cwtl
xchg
xchg
in
mov
sahf
mov
dec
idivb
mov
dec
and
mov
xchg
xchg
add
lahf
pop
xor
loop
push
dec
add
shlb
insb
mov
adcb
lods
aaa
cwtl
or
mov
jecxz
stos
inc
mov
loopne
dec
popa
xchg
fisubl
outsb
sahf
add
shlb
popf
neg
push
aas
jmp
push
inc
mov
push
and
dec
cmp
jmp
es
mov
pop
sub
pop
shll
xor
lods
sub
lods
pop
enter
and
daa
jg
out
je
test
outsl
call
jmp
and
fs
lds
aaa
mov
and
test
push
adc
mov
aaa
mov
mov
push
dec
int3
lahf
add
xchg
loope
mov
les
mov
mov
insb
lea
inc
mov
cltd
stos
pop
xor
xor
jmp
int
int
rcl
int
cmp
jno
fsub
jg
adc
js
popl
sub
or
testl
shrl
xor
orb
pop
ljmp
mov
and
xchg
mov
mov
lret
sbb
movsl
mov
popl
jge
inc
cmc
mov
or
clc
fwait
movaps
xchg
inc
out
pop
hlt
sub
test
daa
pusha
stos
push
jl
inc
out
sub
lods
mov
push
mov
push
sub
mov
inc
dec
sub
aad
out
in
frstor
add
inc
cmpsl
loope
xor
mov
or
mov
sbb
dec
mov
jp
adc
sbb
inc
dec
roll
movsb
xlat
ret
cmp
clc
shrb
daa
mov
add
add
sbb
lcall
cmpsb
cmpsl
xchg
fs
lcall
sub
loopne
jnp
sub
shlb
call
repnz
mov
push
addr16
insl
push
mov
jb
inc
or
ss
or
icebp
stc
xchg
out
int
nop
sbb
fimull
mov
lock
pop
xchg
mov
inc
lcall
adc
aas
mov
idiv
or
jo
pop
idivl
cmpsb
inc
call
mov
cmp
jo
add
mov
ficompl
pop
ret
lahf
idivb
push
mov
push
out
in
pop
mov
lcall
inc
fisttps
ds
push
filds
mov
sbb
imul
push
sbb
icebp
dec
ss
cli
in
sub
mov
mov
sbb
dec
aas
ficompl
sarb
inc
push
rclb
add
mov
ja
inc
jge
faddp
jne
push
adc
subl
shll
push
cld
jmp
lret
xlat
vpsubusw
lret
xor
sub
jg
adc
js
mov
dec
mov
popf
sti
lret
jl
out
lods
mov
fcmovnu
cmp
pop
mov
xchg
inc
or
dec
xchg
and
loopne
mov
cltd
inc
pop
or
les
test
add
fnstcw
adc
sub
nop
shlb
cld
xchg
test
leave
out
dec
aaa
cwtl
cwtl
sbb
pop
sub
test
bound
push
inc
pop
ret
jmp
incb
pop
jnp
dec
inc
cmp
xor
or
jg
dec
fcomip
cmp
inc
fisttpll
inc
stos
mov
mov
repnz
call
lods
mov
bts
pop
dec
mov
mov
pop
int3
pop
das
in
je
push
and
call
sub
lods
sti
outsb
mov
loope
cmp
adc
ss
loopne
xor
sar
test
aam
or
fs
stos
outsb
idivl
mov
hlt
mov
push
push
mov
sbb
xchg
lds
or
lds
adc
in
and
jae
out
adc
cmp
cmp
push
cltd
test
mov
jbe
xor
push
ja
shrb
cmp
mov
pop
test
mov
scas
and
test
adc
inc
in
es
test
add
insl
mov
pop
fistpll
pop
aaa
pop
or
xchg
gs
not
mov
dec
adc
daa
out
in
and
arpl
xlat
or
loopne
or
dec
adc
adc
shll
repnz
or
cmp
push
repnz
iret
fildl
push
dec
sbb
fsin
xor
mov
push
xchg
pop
repnz
not
pop
jmp
into
loope
popf
leave
mov
or
arpl
cld
testb
outsl
fisttpl
fdiv
mov
inc
add
mov
pop
jne
or
push
xor
add
enter
iret
rcl
mov
pop
xchg
add
in
js
jle
js
nop
enter
cmp
pop
push
mov
leave
push
push
int3
mov
add
stos
xchg
sbb
jb
cmc
cli
data16
in
mov
clc
ret
test
mov
or
cmp
aas
and
loopne
pop
popa
fs
sbb
inc
adc
dec
push
hlt
fbstp
lret
test
mov
in
aam
xchg
leave
jp
iret
mov
in
cmp
add
inc
jbe
mov
sub
xchg
iret
sub
jg
insb
fwait
adc
es
push
faddp
cli
sbb
out
xchg
cmp
clc
fisttpll
lret
jl
xchg
in
aaa
mov
xchg
es
fnsave
lcall
push
ds
mov
xchg
jmp
daa
in
ret
mov
cltd
adc
daa
shlb
mov
xchg
lock
inc
icebp
inc
pop
sub
jge
out
addr16
loopne
dec
xchg
je
outsl
out
inc
mov
adc
and
jne
test
das
push
mov
push
insb
jne
testb
stos
in
cli
mov
das
icebp
leave
xchg
mov
push
inc
pusha
cmpsb
or
testb
out
repnz
jo
aas
pop
push
sub
inc
jo
out
dec
jne
sbb
shlb
adc
je
or
daa
orl
xchg
sbb
loope
lcall
xchg
cli
into
test
sub
push
mov
int
adc
clc
pop
in
inc
pop
dec
lahf
cmp
andb
inc
jae
popaw
jmp
push
xor
cmp
xchg
dec
push
cmp
pop
ja
clc
xchg
in
fmulp
mov
addl
iret
pop
dec
cwtl
xor
fs
xchg
sbb
adc
sbb
mov
shrl
mov
into
jg
dec
sarl
lods
xor
push
add
in
mov
inc
mov
stc
inc
mov
adc
fcompl
ficomps
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
mov
jle
js
icebp
inc
cwtl
cs
push
xor
xor
daa
pop
dec
sarl
outsl
out
loope
add
mov
or
dec
addr16
iret
sub
cmp
adc
xchg
test
fcoms
out
sub
fsub
dec
lea
out
mov
push
xchg
mov
xchg
inc
dec
xchg
pop
inc
loope
mov
shlb
in
scas
sti
inc
inc
or
xchg
faddp
xchg
push
mov
add
fs
mov
dec
gs
xor
hlt
pusha
stos
or
add
jnp
nop
lret
arpl
pushf
in
cltd
shl
push
sbb
fadds
cmp
push
mov
or
lods
mov
xchg
test
jg
mov
mov
xor
icebp
push
jle
jo
mov
inc
out
rclb
out
aas
jge
cltd
sbb
mov
aas
mov
mov
daa
mov
pop
jbe
loope
cmc
bound
fs
add
or
loope
ds
data16
pause
push
and
test
test
sbb
jle
into
dec
dec
outsl
xor
pop
sbb
scas
cmp
rolb
xchg
mov
xchg
inc
push
inc
jb
out
pop
dec
data16
pusha
lods
sbb
and
mov
inc
cmp
xchg
stos
rol
out
pop
and
push
xchg
cmc
xchg
and
fsubrl
mov
daa
adcb
cmp
cmp
push
leave
sysret
mov
mov
adc
movsl
adc
or
cltd
xor
mov
sti
or
and
std
xchg
push
xchg
xchg
test
push
or
mov
dec
out
mov
ficoml
mov
xchg
scas
stc
test
sbb
mov
inc
push
xchg
and
lret
push
xchg
adc
stos
imul
add
inc
mov
dec
jbe
mov
movsb
imul
pop
rorb
mov
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
test
mov
js
jle
js
bound
roll
cmp
out
nop
jecxz
sub
push
in
sbb
or
ret
adc
sqrtps
inc
out
ret
outsl
loop
movsl
jnp
daa
imul
dec
in
repz
loopne
add
das
fldt
in
mov
pop
jo
jmp
mov
icebp
push
inc
mov
pop
cmp
outsl
test
popa
popf
mov
xlat
aas
lea
out
ljmp
jb
ret
les
sub
out
call
mov
repz
jecxz
clc
test
shll
mov
fdivrs
mov
sbb
out
xchg
dec
adc
fists
in
jo
dec
xlat
iret
push
cmp
and
das
xor
rcrl
xor
fildl
inc
repnz
lcall
jno
cld
mov
add
push
nop
test
sub
cltd
aaa
in
es
popf
lret
xchg
xchg
cmpsb
addr16
nop
addr16
popf
sbb
inc
popa
lea
arpl
xchg
mov
mov
fisubl
xchg
in
sbb
inc
test
cmp
pushf
jecxz
pop
or
nop
push
lret
sub
rcll
je
mov
pop
scas
dec
fdiv
std
mov
out
sti
dec
pop
sub
stc
push
in
das
lock
mov
outsl
dec
sub
shll
xchg
sti
or
pop
fisttpl
xchg
add
out
lds
addb
cmpsl
or
mov
inc
sbb
out
xchg
or
mov
xchg
jle
std
sbb
clc
cwtl
xchg
adc
in
addr16
mov
stos
lds
aam
and
ljmp
loope
mov
mov
cwtl
push
sbbl
cmp
or
add
mov
fucomp
ss
cmp
ja
push
call
stos
mov
add
and
in
cmc
push
int3
dec
outsl
int3
push
cmp
add
jne
xchg
das
mov
jl
pop
add
push
or
add
jmp
cmp
rol
jb
dec
pop
fdivs
sahf
push
out
jg
adc
js
movsl
imul
push
repz
arpl
cmp
jb
push
pop
in
sbb
mov
push
inc
popa
cmp
add
push
add
lret
ftst
lcall
outsb
adc
cs
xor
xchg
hlt
das
adc
xor
les
test
dec
data16
and
es
jl
cwtl
xor
stos
es
arpl
mov
pop
sub
xchg
xchg
imul
std
dec
dec
ja
in
test
cwtl
call
call
rcl
pop
push
insb
dec
les
push
fldt
insl
cmp
aad
mov
lods
pop
mov
or
lcall
shl
insb
sub
flds
arpl
xchg
sti
mov
jl
lods
faddl
bound
out
stos
js
and
cmp
inc
jno
adc
adc
pop
loopne
out
pop
mov
movsl
aas
idivl
out
in
cmpsw
sub
sbb
jo
pusha
lret
test
sbb
jb
or
cmp
mov
in
adc
test
add
ret
push
and
dec
testb
sbb
or
inc
sarl
mov
cmp
shlb
push
repz
dec
mov
xchg
lds
pop
popa
rcrb
cwtl
pop
ror
pop
dec
xchg
call
rcll
push
inc
cmp
cwtl
scas
sar
cmp
pop
jo
jg
mov
les
mov
and
fmuls
outsb
mov
stos
push
cmp
dec
jno
sub
rorl
mov
js
sbb
push
inc
inc
iret
notl
mov
and
pusha
xchg
xchg
pop
lea
es
fs
lea
adc
sahf
jnp
int3
cmpsl
hlt
sub
jbe
sbb
dec
or
loopne
jno
aas
xor
lea
push
loopne
insl
movsb
mov
jmp
rol
enter
lret
pop
jp
push
jg
adc
js
mov
ss
jne
aaa
sti
sub
ss
rorl
rcr
in
or
dec
cwtl
or
mov
mov
cmp
mov
mov
adc
andl
jmp
std
mov
das
sub
xchg
jge
nop
xchg
and
popf
pop
pop
mov
sahf
stos
test
dec
sbb
sub
es
insl
test
testl
or
jno
in
andl
sub
push
enter
add
push
adc
sub
pop
lods
cmpsb
repz
xor
stos
cmc
pop
xor
jno
pop
insl
test
jne
fidivrl
int3
lcall
stos
loop
push
mov
or
mov
popf
in
lds
cltd
jbe
push
jns
and
cmpsl
insb
mov
out
js
std
fwait
out
pop
push
shrb
stos
cmp
and
popaw
sahf
mov
or
mov
adc
push
lods
mov
jg
jle
mov
lret
mov
pop
out
push
fcmovne
imul
test
and
cmp
mov
sar
arpl
sub
mov
rcll
jno
sahf
dec
dec
xor
adc
test
sti
pop
push
stc
jle
or
nop
idivb
sti
int3
repz
mov
popa
movsl
or
pushf
es
inc
jo
movsb
mov
xor
cmpb
cltd
inc
xlat
and
movl
dec
sbb
fistps
mov
mov
mov
data16
sub
outsl
stc
fldz
inc
pop
cmp
adc
sbb
mov
jecxz
cmp
popa
adc
or
out
mov
xor
in
jae
mov
adc
ja
jbe
test
movsb
pop
lahf
mov
and
out
or
inc
gs
arpl
std
xor
xchg
mov
mov
sti
fidivs
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
stos
mov
icebp
jg
adc
js
mov
cmp
rcr
cmc
mov
dec
adc
add
outsl
mov
in
int
fiaddl
aad
xchg
dec
push
cmp
loopne
inc
mov
addr16
pusha
leave
adc
data16
mov
xchg
jmp
lds
pop
cwtl
vaddsubps
rcrl
mov
mov
lret
mov
dec
mov
add
push
and
ss
mov
cs
sahf
fistl
push
mov
mov
push
loope
and
xor
loop
cmc
adc
pop
inc
mov
or
dec
test
dec
pop
pop
lcall
sahf
sbb
imul
movsb
rorl
adc
stc
and
ljmp
cmp
cs
arpl
xlat
add
pusha
mov
bound
dec
fcmovb
xchg
push
fbstp
test
data16
imul
sub
sbb
sbb
or
lea
push
arpl
pop
or
jno
repz
lcall
pop
push
xchg
xlat
pop
out
dec
test
mov
mov
and
mov
pop
push
add
es
sbb
fwait
mov
add
mov
dec
cltd
in
or
push
pop
mov
push
mov
mov
clc
mov
pop
pop
dec
into
add
repz
cs
adc
mov
lcall
sub
daa
inc
aaa
fldenv
pop
pop
repz
inc
add
popa
pusha
xor
inc
push
iret
bound
xchg
lahf
sbb
push
idivb
call
cmp
dec
push
add
inc
hlt
js
aad
cmpsl
lret
mov
ja
mov
test
cmp
xchg
nop
mov
mov
pop
sub
adc
test
and
add
pop
mov
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
bound
jg
adc
js
and
xor
mov
rcll
cmp
and
or
mov
add
adc
aaa
sbb
sub
mov
jne
pop
inc
or
fwait
dec
outsl
push
inc
cmp
data16
xchg
mov
out
jecxz
add
decl
cmp
jns
mov
js
outsb
jo
notb
xor
cmp
pop
push
inc
jo
das
push
roll
imul
leave
sub
mov
arpl
maxps
jmp
je
push
xor
push
imul
clc
outsl
mov
jp
mov
in
jne
scas
inc
aam
cs
sti
mov
fs
inc
jo
push
inc
mov
loope
out
cmp
aaa
lcall
push
lret
mov
mov
imul
jmp
stos
mov
out
or
mov
mov
cmpsl
mov
cmpsl
sub
sbb
fdivrp
sbb
ror
ret
ret
pop
sub
sub
and
repnz
pop
xor
popa
inc
sub
xchg
adc
scas
das
sbb
and
mov
xor
mov
xorl
and
inc
rcrl
fdivl
int
push
imul
mov
out
test
lret
mov
or
push
aad
call
or
movsb
out
loop
pushf
clc
shrl
sub
int
ds
addr16
aad
or
loope
shlb
test
xchg
movb
lea
and
adc
xor
or
out
cld
mov
movsl
fucomip
shrb
hlt
movsl
pop
lahf
jb
aam
mov
inc
lret
push
mov
xchg
cmp
mov
mov
jbe
sbb
shlb
add
iret
into
ror
aad
aad
mov
sub
xor
jg
adc
js
sbb
dec
jne
inc
xor
loopne
into
mov
pop
std
mov
cmp
mov
in
lcall
mov
fsubrs
xchg
xchg
push
pop
and
sub
jecxz
aaa
adc
fcmove
mov
and
cld
mov
stc
test
jo
mov
sub
sbbb
stc
jle
hlt
xchg
cmpsl
ljmp
roll
cmp
icebp
fisttpl
hlt
clc
rorb
or
in
push
push
sar
sub
cmpsl
imul
mov
xchg
out
jmp
and
push
fdivs
add
mov
pop
flds
into
rorl
jp
stos
popa
or
test
xchg
jle
mov
inc
dec
inc
sti
test
out
pop
imul
or
mov
ljmp
repz
mov
fs
mov
push
xlat
mov
jno
inc
xchg
sub
inc
push
das
pop
mov
dec
repz
mov
jne
in
push
mov
or
test
lea
scas
ret
je
loope
pop
lods
out
inc
cs
cmpsl
mov
xor
addl
pop
rorb
fldl2t
inc
insl
lea
movsl
clc
inc
adc
adc
sbb
loop
inc
xlat
es
scas
inc
enter
mov
sti
sahf
stc
inc
in
js
push
dec
sub
add
sti
xor
imul
push
loopne
stos
push
rcrl
in
das
mov
xchg
xchg
std
call
sub
aam
cmc
pop
inc
xchg
addr16
imul
dec
xor
jle
test
or
lahf
push
pushf
aam
roll
dec
push
sbb
cmp
and
mov
dec
adc
xchg
lahf
pop
in
xor
pop
leave
fucomi
lret
in
or
in
lods
sbb
add
xchg
movsl
test
and
fiaddl
xchg
cld
jo
pop
or
jae
mov
leave
or
xchg
fsubl
lods
in
test
sbb
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
cwtl
dec
das
leave
and
fcmovbe
hlt
cli
cs
cmc
fists
push
cltd
sbb
lea
sub
hlt
addr16
mov
lea
sub
and
rclb
addr16
sbb
movsl
bound
test
xchg
adc
sub
xchg
jge
push
sbb
mov
in
aam
mov
jb
shr
daa
add
repz
mov
pop
mov
and
adc
sub
jns
std
iret
jns
icebp
xchg
mov
jno
inc
push
test
cmp
sub
mov
or
adc
lret
clc
arpl
push
std
jge
inc
mov
mov
ja
adc
sbbl
in
xchg
std
ret
int
movsb
xor
cmc
repz
sbb
je
gs
mov
js
test
mov
cmpsl
inc
add
lods
pushf
pop
lcall
pop
fs
subb
aas
lods
jge
mov
imul
jp
fsubr
outsl
bnd
push
dec
lea
and
dec
adc
jg
jl
jbe
nop
pushf
add
sbb
cmp
fxch
jecxz
xlat
xchg
sub
mov
cmp
or
shlb
sbb
ds
sbb
fstp
rcr
dec
sbb
or
push
stos
xchg
cmc
dec
adc
shl
cmp
test
sub
cwtl
adc
mov
xor
lods
mov
lds
ss
xor
mov
cmp
dec
aam
in
testb
cmp
cmc
push
xor
dec
loop
int3
or
jg
test
cmp
shr
cmp
test
cld
aam
jnp
mov
popf
pop
inc
lods
aad
repz
out
fs
jo
aad
insl
mov
inc
sahf
lcall
dec
aam
cmpsl
int
inc
pushf
push
stos
scas
mov
out
jb
dec
inc
fldcw
int
ret
cwtl
pop
imul
bound
inc
inc
int3
rol
or
insb
xchg
loope
addr16
rclb
push
push
xor
orl
outsb
sbbl
lahf
mov
push
pop
push
pop
lret
repz
daa
jmp
xor
dec
out
fildll
dec
jo
lea
mov
xlat
pop
dec
jno
sub
sarl
mov
cmp
daa
cmpl
and
sub
repnz
push
jo
pop
das
mov
and
push
iret
jb
pop
arpl
mov
dec
mov
arpl
mov
int
xlat
movsl
loop
pop
push
mov
addl
in
dec
fs
xchg
inc
pop
mov
iret
test
cwtl
jns
push
mov
sub
call
fs
int3
sub
cwtl
add
sub
inc
push
mulb
faddp
dec
cmpsl
sbb
loop
dec
arpl
mov
xchg
or
inc
pusha
in
adc
and
jae
cld
and
movsl
fldl
and
sbb
aas
out
aas
mov
and
inc
movsb
lock
add
fdivl
jnp
icebp
mov
push
outsl
mov
cmp
adc
das
mov
pop
scas
mov
adc
test
pusha
sbb
inc
scas
xchg
push
xchg
jecxz
mov
ss
mov
push
icebp
xchg
adc
pop
pusha
lahf
xor
or
in
dec
outsb
jns
add
ljmp
adcl
stos
jno
imull
popf
popa
nop
inc
pop
stc
adc
movsl
fdivrs
push
pusha
andl
and
ja
jae
adc
cli
jo
jb
idiv
push
pop
scas
addr16
mov
sahf
adc
fadds
test
sub
mov
rorb
jo
sub
scas
imul
pushf
stc
in
mov
cmp
hlt
and
ret
push
add
push
in
dec
popf
push
jg
rcrb
adc
lret
adcl
mov
std
and
dec
data16
sbb
cmpsb
loop
pop
xlat
mov
rcrb
adc
lods
fstps
mov
pop
pop
sbb
sbb
aad
shr
iret
int3
mov
faddl
outsb
xor
jp
inc
testl
js
fs
mov
jle
outsl
jle
fcmovbe
sbb
pop
mov
loopne
rorb
imul
add
data16
push
sub
adc
adc
and
inc
lahf
cmpsl
test
mov
mov
jecxz
popf
aam
bound
iret
xor
pop
fscale
push
or
mov
and
mov
cmp
ljmp
inc
imul
jb
test
cli
push
mov
jnp
clc
das
mov
std
std
pop
pop
inc
mov
adc
adc
mov
mov
loop
adc
les
pop
adcl
dec
sbb
outsl
jnp
in
daa
mov
movsb
cmp
jb
rcll
cmp
cld
push
test
push
pop
jo
in
inc
movsb
icebp
aad
fidivrl
mov
cmpsb
mov
cld
pop
in
push
jo
mov
pop
push
aaa
and
ret
xor
inc
out
hlt
jge
xchg
xchg
sub
mov
aam
mov
inc
add
hlt
aas
pop
insb
push
mov
movsb
neg
cmpb
dec
push
das
insb
or
in
xchg
imul
in
enter
popf
dec
rcrb
pop
sub
dec
pop
aam
lods
xlat
movsb
cli
dec
bound
sbb
mov
jmp
enter
outsl
mov
xorb
dec
sbbl
call
dec
imul
fbstp
dec
pusha
iret
add
and
das
cmp
stos
enter
push
pop
aaa
inc
push
popa
pop
jbe
add
add
add
add
dec
inc
pop
inc
pop
pop
shrb
dec
insb
cld
pop
rolb
add
jb
cs
inc
lea
cmpsb
cltd
ficoms
das
les
xor
sti
push
int
pop
xchg
dec
mov
pop
sbb
fmuls
push
lods
fwait
jne
cmp
mov
call
dec
adc
leave
fidivrl
dec
stc
cld
iret
enter
xor
add
adc
hlt
sbb
out
repnz
popf
mov
inc
repz
mov
lea
jle
mov
mov
cld
ret
test
xchg
insl
inc
ja
push
gs
pop
out
sub
in
in
test
mov
adc
mov
cmp
aam
call
test
push
ja,pn
jae
xchg
test
push
movsb
shrl
or
aaa
mov
and
jae
lock
jp
push
pusha
xchg
push
mul
jnp
adc
or
imul
or
mov
loope
nop
xor
xor
stos
inc
mov
mov
push
dec
cmp
or
or
stos
lcall
inc
in
add
in
xchg
movsl
or
out
in
and
scas
not
dec
adc
mov
shl
adc
or
jg
idivb
cmove
test
xchg
test
fnstcw
xor
push
mov
add
std
stc
gs
add
dec
pop
adc
mov
mov
int3
div
pusha
cmp
jmp
pop
inc
sbb
fmuls
jo
pop
shrb
jbe
sbb
sbb
subl
orl
sbb
xor
pop
xor
jbe
scas
mov
add
sbb
push
pop
in
test
cmpsb
out
pop
gs
mov
push
jo
sbbb
lea
inc
stos
push
mov
nop
jle
cmp
repnz
lock
jae
cmpsl
cmp
xlat
inc
adc
jmp
int3
rorl
out
push
sbb
cmc
cltd
ljmp
and
xchg
adc
addr16
jbe
pop
mov
outsb
fisubl
lahf
aam
xor
xor
in
push
jge
popf
fldcw
mov
in
clc
popf
rorb
add
addr16
mov
xchg
aam
pop
cmp
pusha
in
stos
mov
mov
dec
sub
ljmp
cli
or
mov
aas
repz
jecxz
add
out
into
dec
test
cmpl
adc
call
insl
stos
dec
xchg
fstps
test
and
mov
andl
push
jbe
xchg
ficompl
clc
push
fcmovbe
adc
pop
push
mov
pop
sub
sub
divb
outsb
or
sub
mov
dec
pushf
inc
shlb
fs
clc
in
xor
xlat
jle
repz
out
jnp
test
add
pushf
ljmp
xchg
rorl
and
mov
outsl
fstl
lods
jnp,pn
jl
ja
mov
fs
nop
xor
fmul
and
aaa
mov
pushf
xchg
mov
add
dec
or
cwtl
mov
jnp
arpl
test
fisubrl
scas
cmp
push
lods
mov
loop
movsb
or
jge
sti
lea
negb
repnz
jbe
mov
fidivrl
push
push
push
mov
in
mov
shll
xor
imulb
insb
or
ss
jle,pt
sarb
insb
jno
pop
daa
xor
aad
jmp
fisubrs
mov
pushf
lahf
je
js
ss
loop
iret
pcmpgtw
adc
dec
in
subb
push
mov
xchg
loopne
mov
or
mov
pusha
xor
cmc
adc
xlat
mov
xor
in
mov
cmp
insb
loope
lods
mov
xchg
push
das
pop
adc
xor
jno
mov
aas
jnp
cmp
mov
inc
add
jl
fadds
xchg
inc
dec
iret
gs
shll
jo
jecxz
hlt
or
push
xchg
cmp
sub
cmp
std
inc
dec
mov
jno
movsb
pop
dec
mov
mov
sub
cli
sub
fwait
insl
outsb
add
add
pop
push
fwait
cmpsb
sbb
xor
dec
mov
sbb
sbb
add
mov
jae
cltd
jno
pop
movsl
repz
or
add
mov
lret
lret
jo
jecxz
add
addb
fstl
lcall
lock
sub
xchg
or
test
jbe
mov
and
call
mov
pop
lcall
adc
aas
test
mov
lret
pop
inc
ja
or
sbb
jne
cmp
in
je
jl
pusha
outsl
jmp
mov
cld
mov
sbb
xchg
mov
inc
iret
jmp
jb
sub
insb
cmpsl
cmp
flds
int
and
fcoms
ret
add
or
out
shll
mov
jbe
pop
movsl
cmp
jo
jle
cmp
ret
add
add
sbb
fcmovnbe
mul
hlt
jmp
ret
fildll
xor
bnd
out
ja
enter
xchg
adc
jmp
and
fs
fadds
shlb
dec
insl
sbb
outsb
xchg
je
mov
sub
aas
pop
cmpsl
mov
out
jge
cmp
and
hlt
add
lahf
ss
fstp
insb
push
mov
mov
mov
loope
ret
add
pop
std
push
mov
xchg
rolb
cmp
fistps
inc
jg
pop
sub
mov
cli
mov
loop
imul
adc
aam
shll
loopne
push
add
pop
push
out
sbb
xor
mov
xchg
ljmp
lret
mov
out
xchg
jae
add
add
add
add
dec
push
pop
push
pop
dec
mov
dec
push
xorl
add
iret
sbb
jae
aad
xor
and
or
lcall
sbb
lods
dec
and
sbb
popf
sbb
xlat
xchg
cmp
and
repnz
mov
movsl
movsl
pusha
dec
aad
push
fstl
adc
sub
jne
adc
cmp
or
pop
and
insb
mov
xlat
xchg
cwtl
sahf
das
inc
or
fsubrl
pop
dec
sahf
pushf
lahf
xchg
jb
and
nop
mov
jge
mov
int3
and
and
cld
push
out
cmp
js
loop
mov
lods
inc
dec
and
pop
and
add
push
into
mov
ss
rcr
lods
iret
rcll
mov
push
call
jge
adc
or
sti
rol
popa
shll
add
and
xor
mov
mov
add
jmp
mov
pop
adc
decl
repz
mov
arpl
cmpsl
testb
mov
fisubs
push
fdivrl
cmova
hlt
add
aam
cmp
lret
push
jecxz
das
ljmp
jmp
inc
js
ret
daa
test
aaa
mov
cwtl
pop
and
hlt
out
or
fildl
adc
cwtl
cs
cmpsl
sbb
inc
jo
and
mov
mov
lock
xchg
jno
clc
xchg
int3
daa
mov
hlt
mov
sub
xor
jno
xchg
and
inc
or
push
sub
aaa
sbb
test
jmp
pop
mov
insb
or
andl
sub
aas
popa
ret
adc
fmuls
adc
xchg
mov
cld
add
and
adc
inc
fimull
xchg
ds
inc
fucomip
cs
push
lcall
loop
lods
fstpt
out
xor
subb
int
pop
insb
jecxz
mov
insl
inc
outsb
jmp
mov
push
push
adc
jp
inc
insl
shr
bound
movsb
cmpsl
cmp
lret
lret
ds
call
and
fdivrl
adc
adc
rcll
push
jo
fnstsw
and
cmp
pop
mov
fisubs
imul
scas
loop
adc
dec
mov
adc
subb
scas
mov
xor
push
stos
adc
adc
cmp
addr16
xor
push
out
and
cmp
jmp
das
and
and
mov
mov
and
aaa
mov
fs
lea
lret
cmpsl
mov
popf
xchg
add
jg
leave
notl
add
fiaddl
dec
xor
adc
cmpsl
pusha
push
mov
adc
in
push
or
stos
ljmp
jb
add
dec
mov
mov
xchg
xor
cmpsl
in
imul
aaa
push
push
stos
pusha
int3
orb
dec
lcall
dec
inc
jp
dec
xchg
pop
cmp
sahf
dec
stc
loop
repz
in
adc
jbe
addr16
mov
mov
mov
mov
inc
mov
mov
or
xchg
adc
cmp
in
lret
inc
sarb
mov
ljmp
fs
pop
andb
pop
call
mov
lcall
xchg
mov
xchg
mov
sub
fsub
punpckhdq
lret
mov
push
test
jne
sbb
push
inc
test
enter
insb
ds
cli
sahf
mov
in
stos
cmc
movsb
push
add
mov
nop
imul
out
inc
push
push
mov
mov
fisttps
ds
cwtl
sub
pop
mov
push
ret
stos
pop
push
notl
in
mov
push
scas
lcall
clc
bound
cmp
mov
fwait
repnz
mov
pop
int3
push
fcoms
movsb
and
jo
sti
cwtl
sub
popf
sbb
lods
jns
inc
and
lods
iret
sbb
lahf
adc
insl
lods
icebp
clc
mov
mov
sub
js
jb
add
fildll
or
popa
or
int
in
push
test
mov
xchg
or
aad
pop
je
xchg
add
outsb
push
scas
loopne
and
icebp
mov
in
mov
leave
imul
adc
repz
add
mov
test
fidivrs
out
ret
mov
lods
stos
push
cmp
mov
outsl
cwtl
ficomps
pushf
jnp
xchg
inc
int
adcb
vfmaddss
sahf
insl
fcomps
jnp
shlb
mov
es
or
inc
test
cmp
pandn
dec
data16
push
mov
faddl
fildl
faddl
push
xor
into
adc
mov
push
dec
adc
or
cs
jg
pop
push
cld
outsb
adc
fildll
sub
jg
mov
push
xor
addr16
mov
cld
jg
scas
lods
and
mov
das
xchg
xor
sub
cmpsb
les
add
mov
dec
xchg
int
pop
fwait
mov
push
int
mov
bound
jg
jo
add
mov
sbb
lret
pop
cmp
xchg
xchg
outsb
dec
fisubl
das
cmp
adc
mov
int
lods
cmc
lods
icebp
mov
jnp
gs
icebp
nop
or
lcall
popa
out
xchg
dec
xchg
dec
loope
adc
into
push
pop
mov
dec
mov
mov
out
pop
fcompl
imul
xchg
hlt
fistl
cmpsl
and
pushf
sub
add
inc
mov
pop
sbb
or
push
xchg
orl
push
call
orl
test
pop
rorb
push
xor
cmp
nop
or
pop
push
inc
dec
dec
pop
pop
push
sub
xchg
dec
push
add
nop
add
addb
add
aaa
mov
inc
fsubrp
leave
push
iret
cld
aam
test
add
xor
iret
outsb
pop
sbbb
out
sahf
inc
cmp
push
dec
mov
movsb
arpl
cmpsb
jo
mov
stos
inc
addl
cmpsb
je
ja
or
movsb
cmp
inc
iret
imul
jbe
leave
mov
and
push
rol
aaa
gs
pushf
or
fs
or
dec
out
dec
hlt
lret
xor
repz
in
aad
mov
pop
vpaddq
add
xchg
int3
jle
lods
sbb
sub
lahf
inc
fs
sbb
das
lea
clc
xchg
ljmp
cmpsb
ja
ret
shll
daa
xchg
push
pusha
jl
cmc
jae
mov
push
lret
rorb
add
cwtl
sti
test
xor
add
std
in
push
mov
aaa
xor
add
call
out
xchg
xor
pop
jb
je
fisubs
xchg
movsb
ret
aam
ja
mov
cli
nop
push
ja
xchg
mov
ljmp
jp
loop
idivb
mov
enter
aas
and
insl
cmp
cmp
shll
in
lret
pop
jae
add
stos
mov
jecxz
call
notl
xchg
xlat
mov
dec
test
cmpsl
push
arpl
je
mov
mov
dec
stc
jae
in
subb
mov
dec
mov
out
pop
sti
xor
pop
test
imul
das
imul
mov
dec
das
jae
pusha
pop
fisttpl
dec
into
adc
dec
jg
stos
shll
pop
fsubrs
sbb
jge
test
les
and
sbbl
xchg
aaa
push
lahf
dec
and
ftst
or
mov
dec
and
inc
mov
adc
sbbb
xor
loopne
fsubl
ss
add
test
mov
adcb
lret
lret
jne
add
shll
arpl
mov
cltd
mov
pusha
jg
sbb
mov
adc
repz
and
aam
inc
mov
jle
inc
mov
lret
sub
rorl
test
test
and
sbb
mov
sahf
sub
imul
les
adc
add
leave
mov
imul
sub
movsb
jge
jae
out
mov
int
aad
imul
mov
mov
push
xor
lods
movsb
or
aaa
out
in
inc
push
sbbb
stc
notl
xor
cmp
cmpsb
add
das
mov
ja
test
push
mov
xchg
test
ret
and
and
or
adc
jne
test
push
adc
adc
cmp
sbb
add
and
sbb
out
loopne
sub
dec
faddl
fcoml
jge
lahf
insb
push
nop
imul
sbb
or
cltd
dec
iret
and
xchg
outsb
dec
inc
add
es
pop
into
and
mov
inc
addps
cmpsl
iret
adc
lcall
jmp
out
aad
popf
pop
and
mov
lea
pop
inc
aas
ja
and
fnstsw
hlt
gs
movsb
lods
icebp
das
adc
push
mov
sarl
pop
pop
dec
mov
sbb
jb
out
mov
push
mov
mov
xchg
sahf
sbb
icebp
es
lret
jle
sub
adc
shr
mov
jae
sti
cmp
outsb
adc
mov
fwait
rcll
or
pop
cmp
lods
mov
fldt
xor
pop
hlt
mov
jge
icebp
inc
dec
mov
mov
outsl
hlt
adc
adc
jb
mov
mov
pop
mov
inc
lret
and
int3
sub
in
lods
pop
xchg
push
mov
add
push
arpl
in
inc
xchg
fisttpl
pop
repnz
mov
mov
pop
cwtl
inc
dec
push
inc
adc
or
fs
lods
cli
scas
sub
rclb
std
or
jp
sahf
xchg
xchg
cmp
movsl
mov
rol
xor
sbbl
out
test
mov
mov
or
xchg
jmp
fsubl
inc
sbb
push
sahf
pop
jl
push
cmp
ss
movsb
test
cmp
ss
fucomp
inc
pop
dec
mov
push
fstpt
xchg
test
pop
inc
cmp
or
mov
cli
pop
xor
in
repnz
xor
jns
shlb
pop
mov
jae
mov
in
rorl
enter
sar
into
sbb
push
imul
lods
sti
shl
je
pop
push
lcall
sbb
out
push
push
inc
lock
mov
push
aas
dec
sub
addb
adcb
test
inc
dec
mov
xchg
fcmovb
and
adc
push
jmp
ret
mov
jae
inc
data16
out
shr
inc
mov
pop
out
mul
test
add
mov
nop
jmp
out
dec
mov
rcrb
subl
push
pop
or
in
mov
pop
aaa
call
adc
jle
inc
push
cmp
mov
pcmpgtd
xor
lret
cmpsb
out
dec
dec
popf
sbb
fnstsw
jb
sbb
push
inc
inc
jae
cmpsb
push
or
out
jle
out
inc
sub
jns
cmpsb
mov
jo
and
push
push
add
cmpsl
mov
hlt
in
fldenv
or
mov
daa
popl
jg
mov
or
das
lock
pop
fcmovu
ljmp
and
inc
cmpsl
dec
or
test
dec
cmp
fnstenv
scas
pop
das
mov
xor
push
nop
mov
fimuls
xchg
enter
sub
std
push
fidivrs
loop
test
mov
fisttps
jl
jle
mov
cmpsl
inc
dec
dec
dec
dec
dec
inc
dec
sub
outsb
or
push
xchg
add
addb
add
push
les
xchg
push
mov
lret
std
ljmpw
mov
add
lods
add
push
inc
mov
xchg
outsb
pop
lret
pop
mov
subl
mov
push
mov
sub
mov
sbb
pop
lock
pop
inc
imul
sub
sub
cli
aam
repnz
mov
xchg
mov
adcb
data16
adc
je
push
in
lahf
xlat
mov
xchg
sarl
mov
call
jnp
xor
jmp
out
dec
and
gs
imul
int3
lcall
sub
mov
cld
outsl
rcrl
push
jns
push
out
add
jmp
adc
test
pop
mov
jnp
daa
push
ret
imul
push
ret
test
leave
mov
clc
cmp
in
inc
push
dec
mov
pushf
ficomps
popa
loope
push
hlt
sub
fistpl
sbb
iret
bound
sub
adc
sbb
and
nop
adc
into
cmp
sub
xor
cmp
push
test
lock
jg
in
dec
popl
add
dec
clc
xchg
adc
push
mov
sub
shlb
mov
das
jne
mov
movsb
dec
push
call
std
push
cmp
xor
sbb
inc
jne
cltd
push
cli
xlat
mov
popf
in
movsl
div
out
daa
aad
mov
dec
lods
test
mov
sbb
mov
add
imul
push
insl
push
js
pop
sbb
sub
ret
loop
ret
test
cwtl
and
pop
das
push
sbb
loope
imul
mov
sarb
jge
aam
jp
pushf
gs
xlat
roll
or
ljmp
or
pop
addr16
scas
ret
mov
es
gs
sub
mov
stos
fsubs
xchg
fldt
cmpsl
inc
mov
inc
mov
enter
sub
dec
in
rolb
mov
xor
or
mov
and
aas
mov
repz
into
jmp
xor
pop
jle
push
mov
cld
aam
dec
sub
jge
dec
hlt
loop
push
adc
out
pop
pop
nop
ljmp
mov
test
cmovb
or
bound
add
cmp
inc
aaa
cmp
cwtl
lods
test
adc
pop
movsl
or
push
cwtl
ljmp
mov
aaa
test
fimull
orb
fwait
mov
mov
xchg
push
lds
mov
aad
jmp
mov
mov
sub
outsb
or
repz
hlt
jg
or
mov
xor
inc
shlb
dec
jne
in
adc
jp
cmpsb
addl
xor
popa
push
cltd
outsb
and
cld
divb
mov
mov
sbb
push
cs
sbb
bound
jae
roll
lret
fdivrl
pop
ret
pop
lods
pop
push
addr16
icebp
ret
aas
cmp
push
mov
in
mov
pushf
in
and
pop
cmp
das
test
mov
mov
adc
rolb
add
inc
mov
mov
icebp
imulb
into
jae
xchg
pop
pop
or
or
jle
cmp
faddp
jne
dec
cmp
faddl
xchg
pop
cmpsb
mov
and
xor
push
ret
in
dec
nop
jp
dec
sbb
adc
out
js
sbb
lcall
std
flds
sub
lret
sbb
cmp
shr
aam
jl
xor
in
sub
or
scas
mov
lcall
dec
movsl
subl
cld
mov
inc
xchg
inc
mov
xchg
scas
cltd
pop
test
enter
jbe
lcall
cmp
add
mov
and
bound
add
xchg
add
lahf
insl
or
sbb
inc
and
xchg
adc
xchg
pop
inc
jb
fs
sub
add
xor
mov
inc
sub
mov
jae
push
xor
mov
ds
int3
pop
cwtl
pop
shl
lret
fstpl
in
pcmpgtd
or
mov
pop
mov
ret
fst
cwtl
fadds
xchg
inc
div
fbld
cwtl
test
fdiv
inc
into
jae
in
stos
nop
pop
outsl
cld
stos
adc
and
xchg
movsl
in
inc
adc
fldenv
xchg
pop
sbb
jno
sub
test
outsb
and
jg
mov
out
xor
jmp
cmp
dec
sbb
subb
xor
addl
and
mov
or
in
aad
mov
jle
mov
push
xor
inc
negb
mov
push
inc
xor
js
pop
xchg
xchg
and
cmp
mov
xor
and
xchg
and
inc
xor
mov
dec
scas
lds
loopne
sahf
es
xchg
dec
fisubrl
outsb
cltd
sub
mov
mov
lahf
sub
or
je
xor
lcall
lods
inc
cld
lret
or
outsb
sub
ljmp
sbb
or
xchg
pop
sub
int
insl
sbb
ljmp
stos
mov
inc
cmp
in
xchg
outsl
sub
fadds
push
shll
bound
xchg
scas
xor
xchg
sbb
inc
jg
adc
sbb
add
xor
cld
out
adc
xchg
mov
lods
and
out
cs
pop
jo
or
pop
sahf
and
xor
push
clc
fsubrs
add
add
add
add
inc
push
pop
pop
push
dec
cmp
or
popf
add
addb
add
test
mov
cmpsb
add
and
inc
hlt
scas
pop
stos
popf
les
inc
outsl
cltd
adc
sbb
movsb
mov
fadd
fbld
dec
push
pusha
test
ds
add
jle
pop
imul
and
les
adc
mov
dec
push
sbb
mov
mov
sub
fadds
in
sub
and
pop
jnp
push
orl
bound
dec
mov
add
or
sti
lahf
dec
shl
sub
lret
mov
loop
or
push
lea
dec
fmuls
pop
cld
mov
sbb
mov
jnp
jmp
mov
sti
fdivrs
inc
add
jnp
pop
or
pop
ja
jne
xor
mov
fisubs
jl
push
adcl
enter
std
rcll
dec
push
dec
stc
and
adcb
xchg
scas
push
mov
push
mov
mov
mov
stc
scas
push
xchg
sbb
inc
fsubl
sbb
push
lea
fs
push
inc
push
lock
mov
and
xor
pop
lods
push
cmp
jo
das
and
jbe
cmpsl
and
add
ja
adc
iret
xor
push
mov
in
popf
arpl
adcw
aas
leave
push
sbb
dec
pop
xchg
je
xchg
xchg
push
in
pop
daa
filds
pop
daa
pop
push
sbb
repz
lods
lds
mov
jbe
negl
call
pop
repz
fisttpl
shrl
lods
and
jge
sbb
leave
ss
test
fldt
push
xlat
cwtl
aaa
scas
orl
fldcw
xchg
in
or
xchg
xchg
scas
push
sub
mov
dec
fcom
sub
hlt
pop
mov
xor
xchg
mov
cmpsl
xchg
jmp
mov
mov
shrl
jl
push
push
xor
pop
sub
in
push
adc
popl
mov
fs
push
mov
add
xor
or
stc
imul
movsb
data16
sbb
inc
xor
mov
add
jnp
clc
out
movsb
into
pop
adc
ja
sbb
movsl
cs
orl
sub
cltd
xchg
bound
inc
inc
fcmovb
cmp
repnz
mov
into
std
mov
imulb
cmp
repz
sub
mov
mov
sub
fsubrl
les
adc
push
in
mov
xchg
dec
cmpb
lock
add
sbb
pushf
daa
in
sbbl
faddl
cs
mov
les
mov
jno
jle,pn
mov
ljmp
in
xlat
shlb
push
mov
inc
std
inc
mov
xchg
shll
aas
lods
push
out
mov
inc
gs
leave
jle
pop
repnz
fs
mov
dec
mov
push
repnz
stos
jbe
push
sub
mov
aam
inc
cltd
sub
popa
inc
shll
xchg
mov
fs
add
insl
sbb
aas
push
jecxz
das
pop
xchg
stc
sbb
test
cmp
aad
sbb
mov
movsl
pop
cltd
stos
jl
cmp
jle
dec
jg
mov
xchg
push
sub
pop
into
xchg
cli
inc
fbstp
sub
sbb
xor
push
outsb
and
jne
pop
pop
sub
or
lods
insl
inc
pop
and
pop
mov
add
ret
xchg
inc
dec
or
cmc
enter
movsl
add
jno
pop
loop
jg
sub
dec
das
outsb
cmp
pop
xor
inc
mov
inc
testb
xchg
aam
push
mov
fdivrs
pop
cwtl
mov
addl
dec
arpl
nop
xor
adc
negl
inc
mov
ret
mov
std
push
push
int3
or
mov
out
pop
push
fcmovb
xchg
fs
aad
or
push
fistpll
jecxz
cmp
rol
pop
jle
sbb
lret
sbb
cmp
xor
cwtl
add
nop
dec
or
loopne
lock
add
shll
dec
cmpsb
movsl
adc
movsb
mov
lea
xor
push
daa
mov
xor
rcll
aam
cmpb
xlat
dec
jne
into
in
outsl
test
mov
mov
add
je
add
cmp
test
cmpb
and
add
mov
mov
dec
and
cmpsb
jl
divl
fwait
add
outsl
dec
enter
bound
pop
fisubrl
xor
incl
sahf
cmp
sbb
push
daa
in
push
dec
outsl
das
aas
or
jns
int
push
mov
push
lcall
shlb
and
xchg
pop
das
add
mov
dec
les
mov
fisubl
mov
shr
test
xchg
in
jecxz
push
outsb
sub
xorb
pop
int
push
cs
add
xchg
in
fistpl
mov
nop
add
shll
pushf
outsb
outsl
sbb
mov
lea
dec
jp
inc
sub
aad
fs
mov
jae
outsb
or
lods
out
dec
dec
aas
loop
fnstcw
insl
sbb
js
mov
mov
push
pop
fsubrs
in
call
repnz
pop
and
inc
int3
xchg
xchg
add
scas
or
pop
xlat
and
cmp
in
in
test
adc
mov
leave
dec
mov
mov
adc
mov
jmp
fldenv
mov
push
cmp
test
cmp
fildll
mov
int
xor
jo
movb
fwait
push
pop
loop
lods
jns
scas
mov
popf
adc
and
sub
orl
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
jnp
movsb
add
addb
add
xchg
ret
mov
mov
dec
stos
cmpsb
sbb
push
jne
imul
stos
sub
sub
sub
call
mov
ljmp
jns
mov
inc
cwtl
sbb
es
mov
into
outsb
xor
pusha
in
cld
add
or
and
inc
lock
test
xchg
pop
cmpl
shr
lods
shlb
and
mov
pop
or
push
jge
ret
ret
incl
adc
xchg
xor
sti
dec
icebp
cltd
mov
mov
jg
bound
ljmp
imul
adc
mov
out
cwtl
outsb
fcomi
ja
popa
and
shlb
ljmp
jne
sbb
add
rolb
sub
jae
leave
pop
ljmp
dec
mov
mov
inc
es
test
jnp
arpl
sti
jns
jne
movd
adc
outsl
faddl
out
rcrb
loop
lahf
add
and
sti
sub
sub
and
or
mov
xor
testb
cmovbe
or
mov
sub
jle
addr16
adc
xchg
int3
pusha
rcr
mov
roll
scas
bound
inc
add
fldenv
pop
pop
sub
jmp
cmp
add
dec
test
shrl
push
stos
icebp
push
cmp
arpl
mov
dec
mov
sub
ja
jns
arpl
lock
das
mov
loopne
ljmp
push
iret
sahf
mov
push
or
subl
add
mov
sbb
sahf
ds
scas
mov
out
jecxz
sub
add
gs
sub
xor
dec
push
add
inc
loope
push
cmpsl
inc
sbb
and
xchg
ss
cmpb
repnz
fmull
and
mov
repz
cmp
insb
sub
inc
push
dec
inc
push
mov
ljmp
rclb
pop
dec
dec
pop
dec
lcall
out
jmp
arpl
iret
rolb
jg
icebp
sub
mov
jo
cmc
test
adc
or
or
pop
jle
shll
pop
cmp
jno
push
push
jmp
inc
sub
daa
scas
repz
fisttps
loop
pop
mov
cld
push
sub
lret
xor
and
mov
adc
sbb
fidivrl
sti
icebp
mov
and
test
sub
jnp
mov
add
shrb
icebp
xchg
bound
xchg
jno
aam
mov
adc
push
rcll
mov
inc
cmp
jl
push
add
pop
sti
sub
xchg
enter
leave
aad
fildll
shll
mov
dec
jnp
sub
scas
dec
rolb
out
or
sahf
mov
mov
jp
pusha
mov
cmpsl
mov
mov
dec
adc
fxam
ja
fdivl
jns
dec
outsb
in
aaa
sub
dec
cli
dec
xchg
inc
daa
out
jge
lods
fwait
sbb
lods
insl
pop
and
adc
jl
xor
mov
and
in
push
jmp
add
mov
sbb
out
lahf
mov
pop
jmp
jmp
out
fistl
loope
call
jle
repnz
hlt
dec
ljmp
mov
loop
pop
cli
adc
aaa
gs
xchg
loopne
mov
popa
push
arpl
and
push
mov
pop
push
sub
xor
popf
pushf
sarl
push
jae
sub
xchg
mov
fwait
mov
push
loope
bound
push
ret
mov
fdivl
stos
mov
cmp
dec
cmc
clc
mov
movsb
repz
cmp
or
sahf
movsb
mov
dec
jmp
rcrw
xor
cmpsl
jns
or
xor
mov
xchg
xchg
jb
jge
lahf
popa
jecxz
mov
loop
sbb
xor
xlat
xor
out
dec
sbb
adc
cmpsl
test
leave
jne
mov
lahf
mov
inc
mov
pop
pop
loopne
stos
mov
pop
inc
pusha
pop
ja
jg
mov
jns
stos
jecxz
jp
aaa
testl
and
xor
xchg
mov
push
adc
into
and
xchg
dec
lds
add
clc
xchg
pushf
dec
mov
ds
aaa
push
xlat
mov
xchg
into
mov
loope
rolb
clc
cmp
scas
adc
subl
movsb
cmp
cmp
sbb
mov
add
jne
or
fwait
mov
test
pop
stos
lcall
ds
pop
sahf
shld
lock
mov
jbe
ja
loope
mov
jge
cmp
mov
xor
xor
and
call
pop
mov
pop
sti
xlat
popaw
mov
mov
mov
int3
jecxz
gs
sub
repz
jo
dec
mov
test
or
cmp
mov
jno
mov
sahf
outsl
stc
or
adc
and
cmp
mov
cli
call
flds
inc
and
mov
sbb
pop
cmp
dec
inc
test
stos
repnz
lcall
xor
cmpsb
or
enter
stos
in
lods
icebp
dec
and
hlt
and
outsl
inc
inc
pop
scas
hlt
mov
fdivr
fbld
dec
sub
xor
test
or
dec
dec
test
aad
mov
mov
popa
mov
popa
mov
bnd
mov
pop
arpl
leave
aas
lds
jne
mov
loopne
ss
in
mov
dec
mov
sbb
loop
inc
sub
addl
add
add
pop
pop
pop
pop
push
dec
mov
mov
add
mov
cmp
loopne
enter
mov
fwait
jp
dec
jo
push
cmp
out
mov
xchg
jb
mov
xchg
sub
stos
dec
push
sbb
and
sti
int
push
and
sub
pop
jl
pop
adc
test
stc
mov
lock
cmp
js
adc
xor
dec
xchg
push
add
incb
push
sub
aaa
movsl
loope
jl
in
mov
mov
scas
aas
push
xchg
jae
movsl
mov
mov
out
inc
sbb
movsb
clc
and
stc
lret
push
ret
test
das
jg
add
jae
mov
push
xchg
test
adc
push
lods
scas
jg
leave
jnp
std
or
push
pusha
jp
aam
std
dec
or
cmp
mov
inc
loopne
sub
pop
pop
in
cmpsl
push
push
and
mov
push
in
inc
ss
sbb
int
xchg
inc
dec
mov
cmpsl
adc
ja
xchg
mov
popf
js
arpl
std
in
cs
push
subl
mov
pop
xchg
dec
inc
push
cmpsl
xchg
xchg
mov
push
sbb
roll
xor
movsb
cmp
iret
mov
pop
xor
add
adc
lock
mov
jnp
pop
jne
loop
leave
inc
into
mov
push
push
and
clc
into
and
xor
imul
test
test
outsb
push
in
mov
jb
sub
jg
xchg
push
jnp
aad
xor
push
pop
fimull
decl
mov
pop
popa
fisttps
push
dec
sbbl
dec
push
cmc
rorb
fcom
stc
add
call
mov
mov
insl
fisttpll
cmc
ret
xor
ss
push
add
divl
mov
fmull
jae
dec
cmp
das
ljmp
or
jecxz
mov
repz
add
or
mov
sub
jae
cwtl
pushf
push
pop
outsl
jae
xlat
jge
jge
xchg
mov
out
xor
std
pop
sub
add
rorl
icebp
fsts
mov
cmp
scas
lret
jecxz
mov
hlt
lock
or
pop
out
enter
movsb
stos
repnz
test
rcr
xchg
fstps
ss
je
fildl
mov
fidivrl
pop
sahf
out
clc
push
and
in
mov
pop
rcrb
nop
pop
or
out
lods
dec
insb
jmp
pop
enter
ja
push
outsl
fsub
mov
mov
outsb
stos
inc
add
les
cli
test
add
nop
iret
or
or
xchg
fidivs
and
jecxz
loopne
or
ljmp
jle
jne
push
cltd
inc
out
and
adc
sub
cmp
rcrb
scas
shl
cmpsb
sub
ficompl
or
push
inc
pop
xchg
xchg
add
push
lock
scas
dec
scas
add
mov
rorl
nop
mov
fdivrl
xchg
pop
xchg
icebp
cmp
popf
and
inc
push
mov
orb
outsl
rolb
repnz
add
ficomps
xor
lods
test
pop
dec
cli
mov
inc
sub
or
bound
iret
xor
jb
dec
lret
pop
cs
ror
test
cmpsb
lret
sub
jp
mov
fmulp
mov
loopne
ja
ljmp
or
iret
das
scas
cli
outsb
mov
lea
in
jnp
sbb
pop
fs
ljmp
jge
call
aam
sub
pop
mov
int3
mov
jmp
sub
iret
pop
xchg
mov
in
aas
lea
shll
shrl
sbb
jo
mov
xor
cmp
push
xor
out
sub
or
je
and
insb
mul
sub
icebp
sbb
push
fnstsw
repz
testl
add
incl
and
adc
scas
xchg
sti
ret
rclb
fbstp
push
mov
je
sub
dec
popf
testb
jmp
adcb
ljmp
push
jns
jmp
hlt
mov
ljmp
xchg
out
insl
push
cmp
mov
repz
jno
fsubrs
popa
test
mov
popf
cltd
das
and
xchg
mov
out
ss
movl
or
jmp
ficoms
cmp
or
jge
sbb
ret
insl
and
subb
jmp
jbe
jno
pop
and
inc
pushf
push
dec
pop
shrb
call
scas
stc
jno
ffree
or
xchg
or
fisubl
popf
es
jb
lods
loope
clc
jl
pop
and
xlat
jle
sub
fwait
insb
outsb
mov
test
push
in
ror
shlb
jg
pop
bound
mov
push
out
mov
xchg
out
popf
out
scas
gs
aad
jno
out
mov
lods
testb
ret
adc
xor
inc
je
mov
xor
shll
mov
repz
jle
xchg
pop
mov
je
jo
fs
outsb
mov
icebp
mov
inc
loop
cmp
pop
pop
repz
adc
ja
jae
xor
lds
adc
dec
push
and
aaa
dec
add
adc
pop
cmp
lods
cli
iret
mov
icebp
sbb
mov
sbb
sbb
jmp
add
adc
shrb
cmpsl
push
insl
xor
dec
aas
push
idivl
sub
mov
shr
push
jno
sub
xchg
adc
xchg
xor
cld
mov
xor
inc
pop
and
popf
xor
negl
cmp
into
adc
xchg
scas
loopne
outsl
int3
sub
imul
mov
loopne
sbb
mov
jb
leave
pop
cli
ljmp
add
add
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
loope
mov
add
fdivrs
flds
inc
xchg
inc
aad
lahf
nop
inc
orl
inc
and
les
xchg
sbb
pushf
iret
lock
mov
sub
out
add
mov
jns
and
scas
inc
imul
pop
insl
pop
or
mov
in
sarl
pop
mov
cmpsl
sbb
js
pop
js
sahf
jne
xor
in
cmp
xor
adc
adc
lods
clc
subb
lcall
push
mov
adc
call
sub
andl
pusha
sub
inc
fdivrs
lea
sub
scas
jno
dec
cmp
push
push
mov
add
je
and
pop
pop
mov
mov
pushf
lock
scas
fs
out
movsl
sbb
jp
mov
xor
hlt
inc
jno
push
ret
std
icebp
addr16
enter
xor
push
push
popf
jne
xor
movsl
js
sbb
add
xlat
jl
jmp
add
cltd
test
es
aaa
jmp
es
lcall
sti
hlt
lcall
fnstsw
add
rol
out
push
into
fdivrl
dec
pop
imul
mov
inc
sub
insb
push
or
jno
ljmp
imull
insb
ss
pop
loope
adc
nop
and
nop
or
sarl
xor
ljmp
dec
jo
mov
cmpl
push
jp
add
jo
xchg
clc
sub
cmpsl
xor
sarb
sti
sbb
ljmp
in
jmp
std
or
sub
inc
icebp
add
mov
push
loop
lret
jne
mov
repz
imul
inc
lock
add
push
loope
push
or
jge
mov
jbe
lea
adc
les
sub
jo
push
inc
cs
dec
cwtl
xchg
ror
sbb
lret
lahf
mov
rcll
push
and
out
mov
into
dec
scas
insl
stos
push
imul
jle
sub
fcoml
push
xchg
mov
or
cld
in
std
pop
inc
pop
pop
adc
push
scas
test
or
mov
in
testb
or
orl
inc
adc
push
roll
push
mov
in
xchg
aad
fistpl
dec
sahf
pop
jecxz
add
rcll
mov
pop
cmc
sub
aam
sub
cmp
arpl
fldt
cld
outsl
or
outsl
mov
sbb
xchg
add
mov
out
jns
fwait
push
imul
or
adc
pop
and
jnp
je
jmp
push
adc
mov
mov
adc
in
xor
xor
jmp
push
sub
scas
jmp
jne
sub
adc
cs
adc
in
xor
or
ret
out
pop
pop
jecxz
pusha
lods
mov
pop
pop
cmp
popa
rcll
dec
cmpsb
ss
aad
in
lret
jg
jle
or
add
mov
pop
pusha
arpl
sbb
movsb
cmp
xorl
hlt
rcrb
iret
ljmp
test
cli
xchg
sbb
jnp
inc
imul
lea
fadds
pop
add
sti
call
add
xchg
cmovs
dec
pop
repz
lcall
or
out
aam
push
loopne
mov
pop
pop
ret
loopne
je
enter
dec
push
ljmp
out
outsb
mov
pusha
into
imul
push
dec
ja
shrl
lcall
loop
gs
lea
rcl
xor
push
lods
jo
push
lock
inc
pop
lods
jg
call
shrl
es
xor
arpl
mov
push
or
subb
repz
push
test
jmp
sub
lock
lahf
out
xchg
xchg
out
or
sbb
outsb
mov
ret
adc
leave
roll
lods
loop
xchg
xchg
shrb
das
or
and
pop
pop
aaa
shll
scas
rcr
mov
sub
inc
lock
sub
mov
fiaddl
xlat
push
stos
sti
xor
add
icebp
add
and
imul
in
ret
imul
lods
scas
jo
pushf
ret
lods
clc
jmp
xchg
negl
in
mov
call
pop
adc
test
jns
pop
mov
testl
ret
das
adc
in
pushf
int
sub
jbe
sub
jb
arpl
xchg
jge
pop
loopne
mov
xlat
or
cli
push
mov
inc
xor
test
pop
push
xchg
inc
push
sbb
aaa
aad
sti
xchg
test
mov
jnp
inc
xor
xchg
cmp
int3
xor
lock
pusha
push
bound
pop
or
mov
add
pop
aam
rcl
subl
lcall
dec
arpl
xor
push
mulb
int
inc
lret
out
hlt
lds
ljmp
rorb
test
imul
pop
shr
mov
movsb
roll
sub
jae
mov
inc
rcrl
lcall
dec
outsl
cmp
popa
cmpsl
xor
imul
jne
pop
fldcw
jle
loopne
nop
cmp
clc
insl
mov
mov
pop
daa
inc
mov
lds
inc
out
ja
cwtl
nop
sbb
cmc
imul
pop
sbb
and
adc
lea
mov
sbb
scas
fisttpll
add
or
mov
shll
add
mov
fnstenv
addr16
xchg
xor
sti
sub
negl
pop
fidivs
xor
add
add
add
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
imul
stos
push
shlb
add
add
mov
mov
mov
loope
dec
imulb
sbb
call
ljmp
or
int
cli
lret
pop
sub
xchg
clts
pop
jg
mov
rorl
pop
dec
ret
pop
int3
mov
add
or
call
les
clc
mov
das
ljmp
repnz
inc
push
inc
mov
pop
xchg
int3
jg
clc
sarl
rcr
xor
out
jae
push
loope
push
testl
lcall
inc
test
test
repnz
and
jge
adc
shl
and
xor
lods
jge
stc
inc
dec
mov
out
and
rcrb
push
mov
aad
xor
stos
daa
and
pushf
jecxz
lcall
lods
fcmove
push
fcomi
rorb
mov
and
and
jmp
jno
fwait
dec
mov
pop
roll
test
es
inc
push
xor
inc
pop
sti
xlat
les
adc
lea
jno
scas
xchg
adc
pusha
and
xchg
fcomps
sub
in
adc
imull
aad
or
jl
push
mov
jo
cmp
cld
js
mulb
mov
daa
push
bound
outsb
rorl
sbb
cmp
xor
ljmp
sub
dec
daa
cmp
xor
pusha
xor
cmpsl
mov
inc
xor
cmp
mov
add
mov
scas
adc
movsl
sarl
mov
dec
xchg
and
and
mov
dec
sub
cmp
pop
pop
stc
adc
push
pop
jge
insl
jge
iret
mulb
sbb
add
dec
adc
sbb
ljmp
mov
loopne
cmc
xchg
pop
push
in
inc
dec
lahf
loope
mov
xchg
movsl
add
shl
mov
cmp
push
jno
pop
sbb
and
mov
dec
inc
subl
dec
clc
icebp
sti
sbb
mov
addr16
cmpsl
leave
cmpsl
add
xchg
pusha
dec
push
jge
icebp
lds
xchg
clc
adc
jp
inc
push
pop
pop
adc
outsb
addr16
pop
cmp
filds
pop
test
sbb
sub
dec
mov
out
cmp
adc
xchg
cmp
sub
xchg
mov
pop
cmp
mov
inc
or
push
shlb
adc
je
sub
mov
mov
mov
jae
popa
adc
xor
inc
cld
lret
repz
mov
call
cmp
mov
int
pop
jge
xchg
hlt
and
sub
sub
sbb
mov
xorl
cmp
cmp
xor
xor
mov
cmp
or
sahf
nop
jle
xor
mov
sub
dec
pop
xchg
add
scas
sbb
jp
cmp
scas
and
add
push
pop
mov
test
cmpsl
fnstcw
jo
mov
jp
mov
xor
or
push
xorb
nop
add
fldenv
and
push
lods
iret
xor
mov
pop
mov
cwtl
jp
xor
and
lods
fcmovnu
in
xchg
loopne
inc
jb
jl
cmp
in
mov
leave
and
lods
scas
aas
cli
cmpsl
stc
or
and
mov
aam
inc
aam
pop
and
test
mov
add
pop
pop
mov
icebp
fwait
cmc
xchg
inc
mov
mov
mov
imul
adc
cmc
pop
pusha
jmp
pusha
std
or
movsb
push
inc
mov
mov
inc
movsl
mov
insb
push
inc
outsl
sbb
icebp
pop
mov
sub
or
shl
jbe
jl
shlb
addl
push
adc
or
mov
mov
out
je
cmpsb
insl
cmpsl
lea
mov
sti
mov
bound
outsb
sub
add
into
adc
insl
loop
fbstp
mov
adc
test
jne
cs
stos
call
jb
ja
adc
dec
xchg
shrl
aas
adc
cmp
inc
inc
add
gs
mov
and
orb
insl
push
pop
cmc
push
loope
add
pop
dec
adc
mov
in
popa
sub
dec
imul
add
sbb
and
inc
fcompl
adc
xor
add
xor
xchg
shll
pop
orl
mov
mov
sub
leave
push
cmpsl
ja
xchg
cld
aaa
mov
ret
ficompl
enter
cli
outsb
out
mov
mov
sbb
push
test
ds
jns
cmp
xchg
cld
add
sete
sbb
or
ljmp
mov
cmp
or
mov
sub
jge
mov
adc
bnd
or
es
pushf
pop
ret
inc
xstore-rng
cmpsl
add
shll
int
pop
shlb
notl
add
pop
imul
mov
rclb
dec
in
hlt
sub
in
push
arpl
mov
mov
das
mov
scas
ficompl
xor
clc
shlb
add
aaa
adc
pop
inc
filds
xor
frstor
lcall
movsl
cld
imul
adc
or
lock
out
cmp
push
sub
adc
or
sub
mov
fildl
lock
dec
pop
mov
pop
xchg
mov
jns
cmp
mov
or
xchg
js,pn
mov
cmp
sbb
popa
add
mov
jns
das
sub
lret
outsl
mov
add
in
stc
aam
mov
cmc
leave
xor
xchg
pop
push
adcb
mov
add
push
dec
dec
push
pop
push
pop
dec
idivb
jns
in
push
add
add
addb
add
sub
lods
sbb
lcall
mov
ljmp
jne
lret
lods
movsl
sub
insb
mov
cmp
stc
outsb
mov
push
sti
pop
inc
lds
push
loope
mov
out
mov
fcompl
xchg
add
jbe
jecxz
jle
dec
les
icebp
mov
sbb
jns
call
popf
pushf
mov
flds
out
push
add
mov
sub
adc
lock
adc
call
xchg
fs
mov
adc
sti
and
fisubrl
jnp
xchg
movsl
cmp
cli
xchg
lahf
ret
popa
xorb
push
dec
fcmovnb
lods
jl
push
mov
xor
mov
inc
pop
or
aas
push
jmp
ss
sbbb
aam
mov
xor
popa
test
sbb
out
loope
arpl
adc
fwait
stc
sbb
add
sbb
out
sbb
scas
push
pop
xchg
jne
repz
test
ja
pusha
jmp
out
push
push
mov
and
push
push
mov
dec
imul
dec
imul
add
scas
and
cmp
outsb
dec
dec
jb
add
add
mov
xorb
jg
push
jbe
inc
lock
pop
or
fstpt
in
imul
pop
movsb
sbb
pop
pop
mov
rolb
shrl
mov
xchg
call
nop
icebp
sbb
add
push
and
pop
xor
les
xor
loopne
push
icebp
repz
clc
xor
andb
mov
pop
pop
inc
fstl
aad
xchg
mov
cmpb
int3
mov
mov
cmp
mov
loop
mov
push
add
jecxz
addl
sub
insl
dec
outsl
ror
pop
adc
push
stos
push
ret
mov
mov
imulb
aam
ret
lds
mov
cltd
jne
divl
fists
sti
sub
outsl
pop
lods
jp
in
clc
bound
int3
popf
cltd
mov
cmp
mov
xchg
loope
movsb
movsb
mov
rclb
jbe
ret
inc
pop
stos
mov
dec
fnstcw
sbb
pop
shlb
fidivs
push
insl
mov
icebp
iret
push
popa
mov
or
pushf
xlat
and
std
outsb
xchg
mov
xchg
loope
daa
and
dec
xchg
and
divl
gs
cmp
push
add
xor
push
mov
sahf
nop
cmp
push
sbb
test
push
lods
add
addl
mov
lahf
hlt
jle
fwait
adc
sub
bound
sbb
inc
movsb
fildl
cwtl
movsl
fcmovbe
adc
inc
shrb
jmp
stos
mov
js
mov
iret
mov
insb
and
lret
xchg
dec
adc
ret
nop
pop
push
insl
aad
in
xor
or
pop
xchg
push
cmp
jae
sub
pusha
mov
push
jo
mov
mov
dec
fbld
in
sub
into
dec
sbb
or
xor
sbb
dec
shll
mov
shlb
jmp
cmpsb
pop
xor
pop
xor
xor
inc
mov
push
icebp
sbb
and
sarb
push
jnp
jge
cmc
scas
sub
fmulp
scas
inc
jbe
jle
out
mov
movsb
mov
jle
mov
enter
jmp
sbb
lods
inc
sbb
pop
xchg
sbbb
std
add
jae
nop
pusha
and
jecxz
add
xor
jnp
lret
stos
or
fistl
and
repnz
adc
add
xchg
pusha
cmp
jge
gs
dec
adcl
xchg
inc
mov
into
cs
in
in
sti
aam
sbb
lods
aaa
mov
xor
outsb
sbb
and
lahf
mov
inc
inc
sub
push
pusha
daa
ds
pop
or
or
inc
movb
and
std
dec
pop
loop
sbb
mov
sub
inc
scas
ja
mov
lds
loope
stos
push
pop
lods
sti
dec
jae
and
sub
ret
adc
inc
pusha
inc
lcall
sbbb
mov
ret
mov
pusha
mov
cmpsb
pop
out
and
xchg
aad
cmp
mov
xor
xor
push
scas
or
stc
mov
mov
in
and
lcall
sahf
push
int3
jg
push
es
push
test
aad
cmpsl
aam
adc
cli
and
jne
sub
push
ss
stos
inc
add
inc
pop
inc
mov
enter
mov
int
pop
push
fimull
push
int
and
repnz
sahf
sar
inc
rcrb
mov
dec
dec
inc
fs
jp
inc
pmaxub
mov
xchg
jle
out
jne
sub
xor
pop
add
clc
sbb
js
or
xchg
add
insb
sub
pop
mov
rclb
sbb
cmp
pop
push
popa
dec
jp
les
js
movsb
dec
mov
cwtl
es
mov
imul
adc
outsl
cmpsb
sbb
insb
popf
and
inc
and
in
dec
pop
push
mov
lahf
fldl
fstpl
ss
int
xor
call
jp
lds
repz
clc
cmp
hlt
pusha
cmp
cmp
stos
sbb
ds
push
insl
sti
movsb
jbe
repz
in
push
into
mov
ret
pop
push
xor
dec
pop
cld
orl
mov
mov
cmp
mov
in
mov
les
push
and
fcompl
xor
in
es
in
fildll
sub
add
add
cmc
pop
test
dec
int
mov
repnz
add
add
add
pop
pop
dec
push
dec
push
pop
pop
mov
andb
addb
add
adc
cmc
out
mov
xchg
adc
mov
mov
dec
out
repnz
cmp
sbb
loopne
out
dec
daa
call
jnp
add
adc
mov
pop
mov
out
and
fucomip
pop
jb
scas
sbb
push
dec
arpl
gs
iret
push
nop
rcr
inc
push
aaa
fstl
dec
adc
adc
imull
ret
sbb
mov
je
adcb
pop
inc
fwait
shrl
mov
mov
movsl
stos
hlt
outsl
sub
lret
xor
and
jns
inc
jnp
lcall
mov
jae
mov
cwtl
ss
int
mov
loopne
idiv
sub
je
or
aam
aaa
mov
add
test
xchg
cs
sbb
push
sbb
clc
int
bound
stos
adc
mov
and
mov
mov
inc
push
xchg
push
inc
sub
sarl
cmp
xor
jp
jmp
push
inc
fldcw
shll
xor
testl
cmp
lahf
adc
jmp
sbb
imul
xchg
repz
pop
push
sub
loopne
roll
and
hlt
or
repz
push
add
sbb
mov
ja
enter
adc
insl
mov
repz
hlt
push
cmp
mov
mov
jl
jmp
mov
and
out
loope
and
dec
xchg
xor
and
les
cwtl
jbe
es
jno
js
out
jp
jmp
js
es
insb
xchg
xchg
adc
and
lods
popf
pop
nop
jmp
and
js
sub
mov
iret
dec
mov
das
sub
mov
jnp
or
adc
xchg
jns
hlt
outsb
sbb
mov
xchg
adc
stos
sahf
pop
cmp
iret
and
fdivr
leave
jo
sbb
popa
lods
xor
mov
cld
jnp
pop
push
ret
and
int3
push
loope
inc
sti
testl
lcall
jo
push
inc
dec
aad
enter
scas
push
in
shlb
test
mov
xchg
pop
push
cmc
dec
outsl
lret
imull
cld
jne
or
dec
sbb
cld
ficoms
and
adc
test
jno
movsb
mov
mov
jbe
imul
sbb
lea
pop
adc
rolb
mov
push
fbstp
insb
mov
lret
push
xlat
dec
scas
xor
sbb
adc
aam
fwait
test
dec
stc
jb
cmp
xchg
push
xor
int3
mov
fidivrl
popf
sub
stc
adc
leave
insl
pop
mov
insb
add
cli
stc
nop
shlb
mov
rcrl
nop
insl
in
cltd
adc
orb
roll
add
sbbl
fdivrs
mov
aad
js
gs
push
call
ljmp
inc
mov
mov
sbbl
xor
adc
jae
cmpb
mov
mov
jb
mov
loop
sbb
push
mov
outsl
inc
stc
pop
or
xchg
pop
and
cmp
push
andl
xchg
xchg
push
mov
and
fmul
inc
mov
jg
cs
jno
hlt
iret
aad
push
mov
mov
sbb
mov
jb
dec
rcl
rcrb
xchg
sbb
cmp
sbb
aad
das
lahf
xor
xchg
data16
push
add
outsb
les
or
mov
pop
pushf
mov
pop
jle
scas
les
push
int3
mov
inc
out
xchg
sub
das
mov
frstor
xchg
dec
push
pop
test
jae
les
mov
hlt
inc
int3
jns
fildll
ret
int
sub
mov
push
sbb
mov
lret
ret
cmp
fdivs
es
mov
mov
jge
aam
and
fcmovne
and
inc
jne
xor
inc
add
xor
mov
or
inc
in
and
fst
in
in
insb
jmp
xor
outsl
jne
push
push
and
scas
mov
xor
xchg
or
pop
mov
je
les
add
xchg
ljmp
or
out
jge
stos
sahf
aam
cmp
xchg
bound
adc
jmp
jae
lods
pop
js
into
push
xchg
mov
sbb
int
adc
cmpsb
cltd
sub
sti
cs
xchg
pop
sbb
mov
sbb
movsb
cs
inc
and
sahf
andb
cmp
jnp
imul
mov
mov
or
cli
aaa
sbbb
insl
inc
jno
fstps
lds
mov
sbb
add
xchg
pop
mov
outsb
lods
mov
loop
stos
into
test
js
xor
test
fwait
jns
and
js
ret
inc
cmp
inc
fmuls
cmp
pop
mov
cli
sbbl
daa
or
movsl
aam
stc
fs
popa
pushf
loope
roll
jbe
mov
jns
push
inc
mov
and
xor
pop
mov
out
mov
adc
xchg
xor
jmp
inc
adc
fwait
push
and
pop
cs
fcoms
jns
fiaddl
and
insb
pusha
stos
mov
push
fildll
lret
movsb
sbb
inc
fildl
xchg
lods
jmp
fildl
add
mov
xchg
je
cmpb
xchg
xor
mov
push
les
in
xchg
xor
jo
loope
fmuls
test
loope
push
add
inc
cmpsb
es
jecxz
push
clc
mov
pop
mov
sbb
and
adc
stos
sub
xor
jnp
mov
in
xlat
data16
rcll
hlt
cli
pushl
outsb
or
mov
mov
loop
std
pushf
js
inc
and
icebp
bound
jo,pt
enter
or
ds
jne
icebp
pop
je
test
dec
push
pusha
xor
or
movsl
jns
jne
xchg
cmp
in
sbb
add
add
add
add
add
push
push
push
inc
push
test
mov
add
jb
push
lahf
lret
pop
in
push
sbb
pop
xchg
ja
sbb
mov
bound
icebp
inc
cli
shlb
bound
adc
pop
test
mov
movsb
or
stc
pop
leave
aam
or
aas
mov
cmp
fs
ret
sbb
mov
test
xor
push
xchg
stos
add
xchg
fstpl
lret
cltd
lds
add
jo
je
pop
roll
outsb
mov
cwtl
repnz
sbb
or
je
sti
fcoml
xor
ljmp
daa
fldt
adc
jp
mov
push
aas
sub
xchg
xor
daa
add
mov
xchg
push
in
sub
sub
xchg
les
lea
inc
dec
pop
shlb
fcomi
ds
pop
dec
cli
ret
adc
cmpb
sbb
lret
mov
push
pusha
mov
dec
movsb
sub
xor
popa
and
jae
stc
cltd
imul
push
push
dec
mov
sub
cmpl
sub
jb
jl
xlat
loope
add
inc
dec
mov
ret
jbe
lods
in
pushf
inc
es
mov
roll
dec
dec
push
jno
out
ljmp
ret
pushf
mov
cs
jecxz
xor
ret
ds
nop
nop
add
cmc
loop
cwtl
mov
movq
xor
sub
pop
mov
aas
mov
inc
mov
cmp
hlt
sub
inc
mov
jae
push
add
xchg
test
jp
mov
nop
pop
mov
xchg
dec
sti
mov
cmp
add
dec
sub
mov
add
ja
insb
pusha
jno
mov
jno
ljmp
cli
mov
pop
pop
das
addr16
cmp
daa
mov
pop
xchg
rol
fldl
jae
and
dec
dec
sub
mov
pop
inc
add
xor
ds
cmp
dec
scas
loope
jge
cli
out
shlb
aam
xchg
sbb
adc
jae
enter
dec
negb
pop
jp
and
or
mov
cmp
out
bound
clc
nop
inc
xchg
cmp
push
sahf
aas
mov
mov
adc
leave
lcall
es
outsb
insb
loop
es
fnstsw
jo
je
test
lods
into
loopne
sbb
add
jnp
dec
inc
fnstenv
je
popf
cmp
add
xlat
adc
sub
add
xor
pop
insb
jge
je
loope
lcall
mov
cmp
arpl
movsb
inc
testl
jbe
pop
pusha
inc
sbb
repnz
pop
jecxz
rorl
cs
inc
pop
add
mov
mov
cltd
adc
xchg
inc
and
sbb
inc
xabort
pop
xchg
cmp
push
or
sbb
add
or
cmp
xchg
and
lret
fdivl
push
aas
sub
aaa
fcomps
pop
pop
ret
fdivp
inc
lret
das
imul
outsb
push
test
cltd
out
test
add
push
and
jne
xor
add
aam
sbb
jne
js
shl
sarl
repz
es
lea
pop
rep
sub
imul
xchg
push
lret
or
jecxz
test
mov
int
enter
pop
movsb
into
pop
jbe
cs
jo
mov
cmp
dec
jmp
xor
jg
xor
rcl
dec
fwait
xor
jns
cmp
test
jle
aam
pop
call
sub
in
ret
lcall
sub
fldenv
push
loope
pop
sub
outsl
sti
sbb
cmpsb
jle
jle
gs
mov
inc
ja
push
jl
mov
pusha
out
mov
push
popa
jnp
sti
punpckhdq
int3
cmpsl
imul
adcl
lds
repnz
fidivrs
mov
das
xchg
test
pop
sub
lret
xchg
sub
inc
cmp
dec
cmp
or
fmuls
daa
les
cmp
cmp
insb
xchg
inc
jl
adc
les
and
cld
mov
add
mov
cwtl
push
dec
jmp
and
repz
dec
mov
popf
aaa
arpl
movsb
fldenv
add
push
jl
loop
dec
xchg
int
ret
in
dec
push
mov
mov
or
rorl
flds
inc
loop
inc
dec
call
sub
into
mov
rolb
notb
jecxz
fs
nop
sbb
mov
in
addr16
inc
in
subl
les
flds
sbb
je,pn
hlt
xchg
in
sub
sbb
mov
pop
add
lds
mov
xchg
push
xchg
cmp
dec
ret
or
pop
int
shr
adc
jo
mov
lret
or
das
mov
outsb
lret
jge
lds
xchg
decb
pop
mov
out
aaa
inc
inc
imul
in
or
sub
jae
aaa
rcrb
bound
xchg
jb
cmp
je
fisubrl
lods
or
movsb
and
mov
pop
ljmp
shlb
loopne
cmp
inc
out
mov
pop
jecxz
in
ffreep
add
xchg
stos
pop
xchg
cs
push
data16
jo
ljmp
mov
mov
rorb
fbld
xchg
sub
xor
mov
push
repz
sub
cmc
sbb
add
xchg
out
cltd
fdivl
stc
fst
out
dec
lds
sbb
inc
call
inc
repz
mov
cwtl
add
xor
inc
dec
sub
fwait
imul
repnz
out
in
cli
imul
in
cld
pusha
sub
push
test
movsl
iret
into
sub
subb
incl
out
pop
gs
dec
dec
pop
mov
xchg
inc
loop
loopne
mov
sahf
adc
in
repz
add
add
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
test
hlt
rcl
add
addb
add
lcall
mov
orb
xlat
into
jno
stc
jns
adc
mov
shlb
add
xor
xor
es
cmpsb
mov
mov
fwait
mov
jb
daa
rorb
dec
mov
mov
sub
int3
xchg
xchg
add
rcrb
loop
ret
inc
inc
and
stos
pushf
and
fisttps
popf
inc
add
shrb
out
cmp
adc
out
adc
test
dec
out
cwtl
cmpsb
outsl
pop
les
cmp
rorb
mov
mov
cmp
out
inc
mov
cld
jg
xlat
pop
outsl
xchg
jecxz
mov
adc
out
ja
xor
pop
add
mov
mov
aas
idivb
mov
sub
aaa
pop
adc
loopne
push
xchg
fwait
stc
les
pop
push
fldz
stos
test
jmp
dec
push
lock
pop
aas
cltd
pop
les
ss
dec
jnp
movsb
lds
push
xchg
inc
fdiv
inc
hlt
sub
mov
js
cmp
dec
pop
cld
mov
flds
imul
pusha
lcall
add
inc
adc
repz
pusha
sbb
xchg
or
or
push
xor
imul
psubsb
and
push
pop
push
sub
push
pop
sub
xor
lods
es
notb
scas
lods
inc
push
repz
and
cwtl
js
imul
adc
dec
mov
dec
cld
mov
add
dec
out
insl
lcall
loop
xor
cmp
lahf
sub
dec
xor
nop
ret
add
cli
sti
mov
icebp
jbe
xor
outsb
adc
xchg
repz
xchg
cmpsb
loop
cli
fwait
xlat
loope
and
jno
xchg
in
lret
les
dec
inc
xchg
dec
pop
out
cmp
mov
lods
mov
in
shrl
xor
sbb
scas
je
daa
pop
pop
andb
mov
xchg
mov
aaa
lret
and
fcompl
jge
xchg
sub
mov
mov
push
int3
or
xchg
aaa
test
mov
ja
mov
js
sbb
js
pop
pop
mov
popf
add
vpavgb
aaa
mov
inc
insb
pusha
mov
mov
cs
dec
mov
aad
mov
adc
cmc
lret
pop
leave
scas
or
sti
jbe
sub
ds
push
lock
add
and
jmp
cmp
xchg
xor
cmp
or
pop
mov
fdivrs
js
mov
dec
arpl
pop
or
adc
jbe
pop
inc
std
jne
enter
jp
push
lret
test
stc
xchg
shl
movsb
insl
pop
in
ss
int3
aas
mov
add
int3
dec
lcall
loopne
movsl
pusha
inc
mov
jae
out
xchg
add
lods
mov
in
out
repz
adc
push
cli
into
dec
ret
add
adc
sbb
cmpsl
sbb
fbstp
pop
cli
cmp
mov
sub
mov
ret
rorl
inc
or
nop
jmp
pop
or
in
mov
data16
loop
sub
rcrl
mov
pop
lods
sbb
es
sahf
sub
and
sbb
xchg
sbb
imull
pop
roll
sub
mov
lret
dec
dec
add
or
out
xchg
add
adc
push
test
xchg
jnp
cmpsb
jl
popf
insb
iret
push
sbb
stos
pop
xorb
push
push
add
test
mull
cmp
icebp
mov
sahf
mov
das
add
jae
lods
iret
in
stc
push
clc
cwtl
xor
pop
stc
xchg
mov
das
push
outsl
mov
xchg
cmpsl
enter
sbb
cmp
fidivl
jge
sbb
pop
xchg
mov
pop
push
fimull
cli
adc
jp
insl
xlat
or
sbb
fmul
mov
pop
pop
add
push
shr
push
add
xchg
jae
cmp
pop
jp
inc
mov
mov
cltd
pushf
adc
aaa
cmpsb
jle
inc
and
inc
sub
aad
scas
gs
push
sub
xchg
sbb
dec
dec
add
jo
and
stc
push
cmp
orl
mov
cwtl
mov
fsubs
sbb
js
les
hlt
and
and
or
jecxz
pop
cwtl
in
push
adc
cmp
jnp
cwtl
sbb
cmp
test
dec
adc
aam
or
imul
idivl
inc
cltd
mov
test
add
sub
sarl
cmp
sub
push
sub
mov
test
sti
movsl
out
loope
mov
mov
shll
dec
add
aad
and
shl
push
sahf
add
ljmp
je
jo
std
adc
sub
cmp
pop
arpl
dec
roll
loope
fwait
xor
add
adc
lcall
add
icebp
inc
shlb
mov
es
or
inc
movl
adc
enter
mov
ljmp
sarb
xchg
stos
jbe
xchg
or
and
shll
in
sub
or
push
lea
xor
push
pop
mov
fwait
lret
cmpsb
loopne
dec
mov
cmp
mov
cld
adc
inc
pusha
or
les
jb
and
sub
int
jne
and
sbb
ret
xlat
in
pop
daa
fimuls
xchg
push
xchg
or
and
mov
das
mov
dec
adcl
mov
in
shlb
js
lahf
mov
pop
xor
addb
cmp
sub
adc
xchg
xor
xor
addr16
add
sbb
pushf
cmp
fisubs
and
sub
push
mov
sbb
add
add
add
push
inc
push
push
push
push
push
inc
rorl
popf
and
les
fadds
add
pop
lods
test
adcl
push
sub
ja
nop
adc
mov
mov
pop
mov
sub
adc
js
push
jp
out
mov
sbb
inc
or
xorb
cmp
or
jae
mov
cmpb
loope
cli
daa
aaa
fcmovne
cli
xor
repz
loopne
dec
pop
cmp
cld
pop
sti
scas
lcall
fimull
sub
mov
mov
fiaddl
sub
push
xchg
push
call
pop
pusha
mov
inc
std
das
dec
aas
jae
mov
mov
popa
ret
adc
in
cmp
mov
and
fcoml
out
xchg
cltd
push
add
imul
push
dec
popf
cmpsb
inc
test
das
xchg
dec
lcall
lods
fmul
ds
test
rcl
mov
lds
sbb
dec
jne
inc
lcall
into
push
sbb
andb
mov
cmpl
cld
ljmp
jmp
sbb
call
mov
enter
xor
pop
fistl
pop
push
inc
xor
sbb
sbb
shrl
imul
cmc
sahf
sub
xor
and
aaa
cli
xchg
andl
popa
fdivrs
into
sarb
push
fildl
pop
jp
loope
imulb
inc
imul
test
lret
mulb
cmpsl
push
dec
push
or
sub
imul
mov
xor
loopne
pop
iret
push
lret
jmp
add
adc
gs
inc
push
push
loop
cmpsb
xor
adc
in
inc
dec
popf
and
jp
mov
repz
test
outsl
aaa
jl
loopne
mull
add
aas
aam
cmpsb
ret
or
mov
cld
jno
mov
push
pushf
jg
adc
mov
fdivs
lret
or
jne
stc
daa
mov
xor
xchg
sbb
in
xchg
lret
pop
dec
jb
push
cltd
xor
loop
sarl
scas
int3
int
cmpsb
mov
in
add
inc
rcrb
cli
imull
xor
daa
stos
js
aaa
or
dec
adc
dec
ret
jecxz
inc
dec
pushf
xlat
pop
leave
clc
mov
mov
cltd
loop
sbb
or
and
das
lret
sub
or
inc
js
push
fldl
mov
jae
inc
xor
rorb
std
lret
aad
sub
cmp
mov
add
lea
jmp
and
test
pop
sbb
mov
jge
mov
outsb
jle
testl
in
inc
sub
push
mov
mov
dec
addr16
pop
dec
push
push
in
ret
adc
loop
xor
jnp
in
loope
and
jo
aad
pop
xchg
ror
add
lea
daa
ja
popf
jno
cmpsl
or
scas
test
in
mov
sbb
cmc
jae
or
sub
adc
mov
xor
mov
fs
sbb
int3
or
fsubp
xchg
loopne
fdivrl
aas
push
sbbl
mov
mov
and
dec
lods
mov
mov
push
add
sbb
mov
adc
xlat
mov
and
add
push
mov
xchg
and
ret
ficoml
rclb
dec
mov
enter
fcom
das
mov
ret
inc
add
lds
mov
dec
js
leave
mov
mov
xlat
or
add
fwait
jg
xor
cld
or
test
pop
sub
shll
loope
mov
stos
mov
lds
pop
xchg
shr
filds
jl
cmp
cmp
stc
xchg
dec
ds
or
jne
xchg
xor
pop
in
add
mov
xchg
jmp
insl
js
lret
xchg
jl
sti
xchg
dec
jmp
pextrw
mov
mov
aad
stc
jmp
arpl
jbe
pop
mov
pop
xchg
test
test
mov
jmp
and
push
pushf
inc
sub
das
fucom
ret
arpl
lods
pusha
mov
scas
jno
xchg
stos
cli
gs
xor
ret
sahf
lahf
in
je
dec
mov
and
pop
jle
adc
aad
push
clc
or
jp
int
add
loop
mov
or
insb
mov
mov
mov
arpl
in
pop
sub
loop
jecxz
pop
dec
mov
add
subb
push
xor
or
fs
fisttps
add
cmp
popl
repnz
les
cmp
xchg
fyl2xp1
ret
stos
sbbb
jg
adc
cmp
cmp
mov
dec
push
sar
pop
xchg
sbb
xchg
and
loope
mov
mov
jbe
test
rolb
idivl
lcall
xor
hlt
inc
cmp
loopne
push
and
or
jmp
cmp
ficomps
pop
lahf
push
cwtl
jge
pop
enter
pop
pop
mov
inc
jbe
xchg
out
xchg
sbb
jnp
incl
or
mov
mov
enter
lods
xchg
int
add
mov
mov
inc
fadds
fsubs
push
dec
jo
cmp
push
out
mov
repz
lret
jae
inc
fsubp
pop
insb
arpl
lret
loope
fcomi
sbb
lock
pop
scas
mov
decb
sbb
inc
pushf
mov
xor
das
pop
je
adc
ficoml
xchg
ljmp
in
sti
test
mov
push
repz
movsb
xor
mov
add
inc
mov
xchg
out
jmp
mov
or
add
dec
jmp
loop
dec
mov
pop
push
cwtl
sbb
pop
inc
sbb
mov
inc
iret
fdivr
xchg
mov
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
not
fiadds
add
int
xor
push
sub
mov
push
push
xchg
sbb
aam
push
ljmp
pop
cmp
sti
jge
repnz
outsl
mov
outsl
js
push
mov
int
adcb
jge
sub
cs
mov
inc
push
fcoms
dec
lahf
mov
cwtl
and
add
stos
xchg
or
mov
inc
sbb
jmp
test
outsb
insb
dec
sub
insl
mov
and
mov
pop
popf
lods
lret
sbb
inc
add
pop
push
imul
or
mov
push
xorl
cmp
test
cmp
outsb
adc
adc
inc
shlb
fldcw
lds
push
mov
lahf
into
xchg
inc
int
je
subb
push
subl
in
icebp
fsubl
fidivs
and
mov
cli
jb
mov
stos
leave
mov
clc
jmp
mov
mov
insl
add
xchg
clc
push
mov
mov
fmulp
cld
or
mov
js
mov
xchg
cmp
xchg
stc
imul
movsl
xor
adc
sti
mov
jmp
lock
hlt
insl
inc
cmp
sub
fwait
cmp
mov
stos
nop
cmpsl
jl
sbb
js
jne
sbb
jle
int3
out
cmp
stos
bound
push
imul
pop
or
add
call
insb
bound
test
xor
pop
fisubrl
jp
stos
jl
jns
sbb
inc
and
dec
fmuls
push
cmp
lds
sub
ror
xor
sub
lahf
pop
dec
stos
adc
xor
gs
cmp
enter
pop
in
outsb
pop
int
jae
lods
ds
push
divl
out
std
rcl
push
xchg
fs
jp
mov
sbbb
dec
into
add
add
pop
fimuls
insb
cmc
popf
outsb
mov
scas
je
lcall
rcr
xchg
ret
and
loope
jmp
in
cld
pusha
clc
jmp
lods
jbe
sub
popa
sarb
jno
and
movsb
lret
xchg
cmpsb
mul
movb
inc
xor
int
leave
mov
std
adc
movsb
mov
push
lcall
out
mov
dec
xor
std
insb
decb
test
lcall
es
stos
mov
adc
jne
and
inc
xor
mov
stc
jmp
push
lods
sub
push
dec
inc
jae
pop
add
push
mov
cmpsb
lods
in
adc
or
inc
mov
lahf
jo
fstl
pop
and
sub
mov
addr16
and
fs
inc
sub
rorb
jp
or
mov
shrl
and
and
je
sub
stos
cmp
aas
rclb
loope
shll
inc
sub
fmull
jns
pop
icebp
mov
and
and
subb
xorl
xchg
testb
sbb
movsl
xchg
lret
aad
lcall
mov
and
xchg
cmp
scas
push
imul
imul
adc
fcmovne
jne
out
hlt
lcall
or
dec
push
add
jb
out
icebp
push
jns
cmpb
sbb
test
push
jle
hlt
mov
mov
mov
xor
cmp
stos
dec
dec
fdivs
popf
pusha
sbb
sbb
jp
imul
xor
pusha
sbb
push
enter
cwtl
push
or
aas
cmp
inc
addr16
dec
inc
loope
adc
push
cmpb
dec
sbb
ret
push
push
subl
pop
fstpt
movsb
std
sbb
mov
jnp
dec
fistps
les
call
push
out
sbb
lea
mov
xchg
inc
cli
adc
aas
cmc
das
jae
test
push
xor
xor
fdivrl
fcmovnbe
int3
push
xchg
test
aam
sub
inc
or
ds
in
add
pop
jge
mov
aaa
or
xchg
ss
sbb
ficomps
rcrl
inc
mov
cmc
push
mov
pop
cmp
pushf
sbb
aam
pop
je
sar
mov
insb
inc
pop
pop
test
mov
xchg
pop
fcmovnbe
lods
jmp
and
loope
stos
iret
jae
adc
shlb
xor
in
xor
lcall
and
lods
pop
fs
ret
mov
dec
add
cli
test
std
and
mov
push
mov
fisttpl
out
cmc
mov
inc
stc
fldt
test
cs
imul
nop
mov
cmp
dec
call
sub
inc
fisubs
test
inc
sbb
data16
xor
repnz
xor
push
inc
sub
sbbl
je
jno
cli
out
jmp
lock
mov
fwait
push
push
jge
inc
imul
add
and
outsb
dec
fists
arpl
pop
push
xor
aad
adc
into
sub
mov
jg
dec
lods
adc
add
mov
cli
fs
xor
stos
or
inc
lods
mov
adc
xchg
cmc
jb
push
push
arpl
es
mov
lcall
sbb
sbb
lahf
mov
lock
dec
scas
and
not
xor
xchg
inc
dec
xor
cs
and
sub
sti
lahf
cmpsl
adcb
imul
inc
test
lock
lret
mov
jbe
insb
fmul
ljmp
out
push
fnstcw
lahf
insl
lock
add
sbb
push
pop
fsubs
and
add
push
add
push
mov
add
add
add
add
push
push
pop
push
dec
pop
idiv
push
cmp
add
addb
add
in
mov
jg
add
push
in
inc
add
js
push
iret
loopne
dec
sahf
cmpsl
aam
xor
sbbl
ror
clc
xchg
loope
rcrl
je
xor
stc
jle
inc
push
sbb
test
mov
jge
aaa
aas
jb
rclb
nop
mov
mov
pop
and
sbb
cltd
cmp
dec
sub
jmp
stos
cmp
add
ret
xchg
inc
mov
sahf
mov
stos
inc
xchg
push
inc
or
idiv
jo
pop
inc
lahf
daa
loope
mov
mov
fildl
mov
js
jb
cmp
jno
push
cmpsl
cmpsl
or
sub
repnz
js
dec
dec
clc
xchg
xor
scas
test
sub
sbb
aad
test
popf
mov
mov
test
xor
xor
insl
bound
arpl
ljmp
pop
in
jae
shll
addr16
jbe
mov
mov
xor
cmc
push
sbb
fdivr
cmp
imul
les
data16
dec
mov
push
dec
sbb
iret
jl
std
aad
clc
mov
dec
adc
lods
stc
enter
push
xor
mov
dec
out
adc
loope
fwait
mov
aas
enter
iret
lods
or
ud0
lods
xor
xchg
aaa
mov
sahf
into
xor
ds
in
and
push
pop
movsl
jmp
jge
ret
xchg
nop
sbb
sahf
std
int3
out
adc
lea
add
fnsave
imul
push
out
jp
leave
and
mov
cmpsl
jb
out
out
pop
mov
mov
mov
repnz
dec
jns
jo
cmp
add
jg
inc
add
outsl
test
mov
int
insl
mov
jg
or
dec
push
jge
adc
addr16
sti
adc
pop
pop
aaa
add
insl
cmp
and
xchg
dec
clc
gs
or
shr
push
sbb
pop
mov
mov
cmp
mov
dec
movsb
aaa
xchg
ljmp
and
xchg
and
xor
push
sbb
hlt
sti
cld
outsb
mov
fs
dec
dec
nop
insl
repnz
popl
mov
mov
xor
sbb
repz
pop
subb
sbb
cs
xorb
jecxz
xchg
mov
lret
mov
and
mov
sbb
fs
jp
out
imul
rcl
rolb
cmp
sub
iret
and
aam
dec
repnz
jo
lods
jo
push
lods
push
enter
das
mov
lea
jmp
sub
outsb
loope
test
jp
jb
push
adc
cmp
jae
sbb
jne
fs
outsb
push
inc
ja
push
inc
mov
movsl
fsubrs
rorb
jg
imul
loopne
cmp
adc
adc
lcall
xchg
inc
xchg
xchg
lds
push
aad
cmpsb
dec
jmp
lock
adc
aad
inc
mov
or
std
dec
aad
fwait
scas
push
lret
ljmp
push
addr16
jns
sub
or
imul
pop
jecxz
adc
outsl
test
pop
pop
mov
movsl
xor
movsb
mov
jns
mov
jo
mov
and
or
pop
sbb
cli
inc
xchg
mov
in
jecxz
and
mov
jnp
mov
dec
loop
aas
or
movsl
sbb
mov
and
or
lahf
mov
xor
jl
xchg
insb
add
sub
in
xchg
cmc
pop
divb
dec
jne
ljmp
ljmp
xor
xor
adc
xchg
ja
jae
cld
ret
push
bound
dec
jo
repnz
cmp
fbld
ds
sbb
cs
cmp
cli
cmp
cwtl
xchg
and
inc
das
icebp
jno
dec
outsl
call
xchg
stos
cmp
mov
gs
lods
adc
or
dec
movsl
sub
xchg
mov
mov
dec
aas
or
lods
sbb
clc
pop
std
and
adc
ljmp
inc
sbb
aam
fcmovu
jb
sub
lock
mov
jbe
mov
mov
cmp
cmpsl
dec
call
dec
inc
bound
sbb
xchg
push
stc
in
xchg
mov
push
test
lods
jp
lcall
jae
push
test
fnstsw
push
rcll
imul
mov
jne
push
out
xchg
sbb
insl
jp
sub
xchg
pusha
mov
add
inc
ret
mov
mulb
cmp
shrl
pop
nop
and
add
enter
push
clc
call
xor
lretw
rol
add
jle
dec
adc
dec
aaa
and
xor
test
adc
rcr
lock
popa
pop
les
sahf
jb
xor
xchg
sbb
lds
int3
and
repz
cmp
push
ds
outsb
push
mov
ret
call
popa
les
mov
push
or
leave
in
outsb
and
sub
adc
mov
pop
data16
cld
and
xlat
pop
shll
mov
jg
repnz
mov
addr16
xor
fs
inc
xor
hlt
call
mov
adc
rolb
add
int3
jb
push
mov
lahf
inc
cmp
movsb
movb
or
jge
cmpsb
mov
xchg
xchg
nop
cltd
push
pop
cmp
xor
mov
adc
add
cmp
xor
jp
sub
movsb
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
cwtl
mov
shr
add
addb
add
fst
aam
stos
xor
dec
vmovaps
pop
les
cmp
inc
sub
xchg
sahf
xchg
pop
cli
pop
test
dec
lcall
push
push
and
dec
pop
xor
pusha
mov
cmpsl
sbb
mov
dec
mov
fistl
aaa
ret
adcl
sub
jg
jbe
jge
dec
and
adc
push
add
ret
push
sti
sbb
clc
in
push
inc
mov
xor
jbe
xor
mov
movsb
or
repnz
inc
pop
sti
aad
test
ficompl
mov
jno
ds
dec
inc
insb
scas
xchg
cs
lea
js
pop
lods
xor
movd
sbb
xchg
shrb
pop
jb
push
divb
xor
inc
inc
sbbl
mov
jle
pop
repz
or
mov
adc
fld
xchg
pop
scas
leave
mov
add
dec
and
lods
mov
cmp
movsb
out
ret
fwait
mov
cmp
add
mov
dec
sbb
adc
dec
fadds
iret
sar
dec
and
add
arpl
arpl
add
adc
fcoms
dec
dec
cmp
jp
xchg
pop
ret
mov
ja
insb
dec
cmp
out
mov
xchg
loop
insb
and
cmpsl
loopne
jbe
push
cmp
mov
rcrb
subl
je
inc
subb
jo
jg
sbb
loopne
cs
negb
aam
or
xchg
dec
inc
mov
cmp
into
sub
sti
cltd
jecxz
and
test
xor
lret
push
arpl
rorl
jg
popf
jno
hlt
or
xor
cmpsb
movsb
mov
xor
bound
sbb
dec
cmp
out
add
outsb
mov
icebp
into
ret
test
xchg
fwait
sbb
dec
into
mov
mov
push
adc
or
std
or
aad
in
mov
lret
test
mov
iret
cli
imul
cmpsb
popa
ficompl
add
xor
adc
jae
cmp
xlat
popw
mov
loop
out
sarb
js
and
sbb
aad
dec
cmp
std
enter
xchg
sub
sahf
ja
or
es
jb
and
insb
inc
sbb
pop
lcall
inc
adc
arpl
sbb
sbb
lret
pop
rolb
and
int
pop
sbb
aaa
pop
movsb
xchg
std
rclb
push
sub
loope
jle
inc
mov
mov
mov
mov
mov
mov
push
test
dec
sbb
dec
pushf
test
cld
pop
test
insb
jl
aas
bound
dec
cmpsb
int
push
or
fmulp
cmp
in
stos
and
or
sub
adc
mov
nop
push
pop
add
mov
cs
orb
aam
xlat
stc
jb
add
in
ret
xchg
movb
in
daa
inc
pop
mov
push
out
push
dec
mov
inc
stc
inc
ffreep
sbb
loop
pop
dec
test
jg
int
outsl
test
fucom
out
dec
xorl
sahf
stc
pop
mov
xchg
pop
adc
enter
xchg
xor
pop
mov
inc
ss
ljmp
rcll
dec
fdivl
push
cmp
jbe
ret
repz
mov
push
fcmove
movsl
imul
test
inc
sbb
push
push
xlat
adc
imul
sbb
inc
data16
cmpsb
inc
popf
mov
std
xchg
outsb
cmp
push
std
dec
pop
insb
lret
jbe
xor
cs
scas
cmp
xor
popf
xor
push
push
cmpb
xchg
or
push
ja
mov
cmp
sbb
data16
mov
dec
xlat
push
dec
push
mov
dec
test
insb
inc
push
out
lahf
test
pop
pop
neg
xlat
lret
adc
ljmp
out
movsb
clc
push
ljmp
jle
in
sbb
or
aaa
jae
dec
out
movsl
dec
aaa
mov
and
sbb
loope
mov
inc
ror
or
or
out
fimull
lods
mov
leave
sbb
mov
leave
cmp
jl
ja
sbb
arpl
mov
dec
adc
outsb
dec
cwtl
pop
fs
sahf
mov
pop
cmp
pop
lods
xchg
ret
cmp
aam
pop
jo
jb
jge
clc
out
xchg
sbb
dec
dec
orl
push
adc
mov
jle
fisttpll
jmp
jge
rcll
xlat
fdivp
push
int
fsubrl
jg
cmp
fwait
mov
adc
movsl
pop
push
scas
xchg
movsl
adc
sarl
ja
dec
fnstenv
rcl
and
mov
jno
mov
lock
dec
pusha
mov
pop
sub
adc
or
jecxz
inc
mov
popf
jns
mov
lahf
loop
dec
ror
jp
cmp
sbb
sbb
into
push
cmp
or
jge
ss
popa
jecxz
outsb
add
mov
enter
stos
or
fstl
mov
sbb
cld
push
and
inc
aaa
and
push
lods
lea
imul
sub
adc
adcb
sub
mov
jbe
mov
sahf
and
mov
push
sub
popa
pusha
imulb
and
movsl
dec
mov
insb
pusha
test
ljmp
pop
std
cld
repz
movsb
add
xchg
imull
jbe
add
push
mov
in
xchg
clc
jecxz
dec
out
mov
scas
adc
or
clc
jp
xchg
push
lods
push
insl
and
fdivp
popa
jne
cmp
into
js
rolb
pop
movsb
loope
out
test
jmp
fs
dec
push
inc
push
pop
push
pop
pop
ss
imulb
add
psubusw
add
addb
add
cltd
out
cmc
mov
fstpt
imul
mov
movsl
mov
xchg
mov
leave
call
sbb
mov
xor
add
popa
and
sub
push
cltd
stc
fstps
mulb
pop
push
cmp
ror
inc
add
and
mov
in
aaa
aas
iret
in
adc
rcrl
adc
add
lahf
xchg
push
jbe
adc
mov
ss
add
cmc
and
iret
cmp
in
dec
dec
stc
arpl
movsb
test
adc
ja
stos
icebp
cmp
fldt
mov
cld
inc
xchg
insl
add
xchg
sarb
scas
xchg
rol
pop
or
cli
stos
add
xchg
popa
xor
dec
adc
jecxz
inc
je
pop
sub
xor
jnp
add
mov
inc
je
subl
jo
inc
jl
jno
rolb
dec
and
push
jge
cmp
mov
jp
xchg
cmp
dec
and
pop
jle
adc
adc
xor
cmpl
mov
xchg
jbe
shr
xchg
xchg
out
xchg
aas
cltd
je
fisubrs
mov
fs
je
out
mov
sub
shrl
and
xchg
shlb
pop
fiaddl
or
xchg
jbe
aam
roll
clc
pop
dec
jo
push
push
mov
inc
pop
mov
mov
xor
jo
fcomps
lea
mov
sbb
andb
inc
xchg
jno
fwait
ret
sahf
jecxz
push
je
pop
pop
insl
fidivrl
sti
clc
cmp
mov
dec
cmpsl
push
adc
std
mov
or
push
jo
lea
in
inc
fstpt
lcall
add
loop
xchg
adc
xor
push
clc
arpl
or
lcall
push
pop
xchg
mov
add
js
cltd
nop
imul
jne
xchg
dec
stc
mov
jb
xchg
cmp
fwait
inc
test
and
dec
sub
sbb
dec
lcall
inc
mov
out
fisttpll
test
mov
stos
loope
push
out
int
mov
repz
pop
cwtl
lds
sbb
push
pusha
and
incl
xchg
dec
cmp
jnp
test
fists
add
jmp
ret
jmp
aaa
arpl
daa
in
stos
cli
faddl
test
jle
es
push
inc
shrl
mov
jno
xchg
in
fldl2t
jmp
je
pop
or
jmp
ja
adc
out
push
fisubrl
fildl
ds
imul
or
imul
pop
push
jne
mov
int3
jp
idivl
sub
add
pop
sub
jge
push
or
jns
xor
adc
fdivrs
push
movsl
mov
push
lods
sub
pushf
pop
icebp
jns
enter
push
mov
aam
pop
lret
xor
mov
imulb
enter
dec
mov
out
cltd
gs
fsubrl
cmp
mov
aam
jb
data16
jno
mov
aam
xchg
stos
fcompl
xchg
add
jecxz
dec
call
in
mov
add
enter
and
loop
push
lods
repz
dec
mov
xchg
pop
mov
add
das
jmp
or
pop
and
dec
mov
and
dec
xchg
das
mov
insl
and
sahf
mov
loope
icebp
ja
jbe
lds
inc
add
movsb
lahf
fdivr
dec
test
inc
addl
and
xorl
mov
sar
cltd
movl
mov
or
das
jle
int3
add
adc
fisubrl
jb
cmc
xor
xchg
addr16
push
jmp
scas
mov
cld
cmp
std
ret
inc
arpl
cmc
out
xor
je
mov
push
aad
push
lds
aad
arpl
jne
test
loopne
dec
test
pop
pop
lahf
mov
xor
nop
out
or
lahf
xchg
cmp
fmul
and
cmpsl
mov
jnp
adc
in
pop
mulb
aad
repnz
xor
xor
push
insl
subl
btr
jno
sti
mov
dec
rcll
and
popa
outsl
mov
cmpl
cmpb
xchg
xchg
outsl
popa
xchg
push
fcmovnu
shlb
test
mov
lcall
cs
das
and
xor
arpl
fldcw
push
stos
andb
xchg
mov
mov
jne
adc
cld
xchg
repz
mov
movsb
mov
rolb
adc
insb
and
movsb
hlt
xor
sbb
cmp
xor
or
lcall
xchg
test
cmp
xchg
inc
jo
daa
int
mov
cmc
cmp
sub
adc
icebp
nop
out
pushl
mov
mov
xchg
jno
mov
xchg
sbb
xorl
xor
out
push
ljmp
jmp
lods
hlt
sbb
loop
cmp
xor
pop
mov
xchg
andb
and
dec
push
cltd
fistl
mov
leave
adc
xchg
dec
cmp
outsl
and
or
cmc
mov
pusha
ds
scas
dec
xor
xor
ds
pushf
push
jp
cwtl
ds
test
dec
xor
and
push
or
aaa
xchg
xor
push
shl
pop
fxch
pop
mov
inc
outsl
adc
mov
adc
pop
test
ja
mov
push
into
psllw
rcll
jno
dec
lods
ljmp
pop
mov
pop
test
div
dec
mov
or
ret
lret
out
dec
ja
mov
push
add
add
add
add
add
dec
inc
pop
pop
dec
push
dec
push
enter
mov
add
add
ret
mov
andb
mov
fisubrl
sub
ja
lods
push
and
cmp
subb
call
js
push
or
jecxz
pop
aas
sub
out
pop
pop
dec
mov
pop
push
aad
sbb
loope
repz
pop
pop
es
or
mov
not
xchg
xchg
cmp
jbe
je
jbe
cli
into
out
xor
add
outsl
push
jle
clc
je
lret
icebp
addr16
lds
jae
or
repz
insb
sbb
dec
sub
fnstsw
roll
and
push
dec
jne
cmp
lret
popf
and
sbb
jb
xor
xlat
jle
adc
push
mov
jb
out
jge
mov
aaa
and
outsl
jecxz
gs
insl
and
add
flds
mov
movsb
push
and
gs
outsb
ljmp
imul
jmp
cmc
add
xchg
fdivl
cmpsl
xor
dec
adc
pusha
push
mov
or
cmp
aaa
jp
and
adcl
pop
sbb
popa
and
mov
popf
cld
inc
sarb
imul
mov
test
mov
add
leave
js
popf
mov
mov
mov
cmp
sbb
adc
lret
mov
jns
sbbl
pop
lds
and
es
mov
dec
cld
pop
xor
pushl
stos
push
movsb
xchg
daa
mov
or
out
mov
sar
sbb
add
mov
or
outsb
mov
movsl
outsb
push
or
mov
jmp
into
push
pop
aad
pop
sub
inc
lret
mov
mov
dec
rorl
cmp
cli
aam
xchg
pop
pop
out
xlat
fstpt
mov
dec
mov
js
mov
movsb
hlt
lahf
push
xchg
mov
out
xor
leave
insb
je
inc
fs
incl
push
lahf
adc
or
jge
sbb
shrb
mov
shl
lods
lret
dec
mov
ret
push
idiv
xor
push
mov
xorl
mov
inc
mov
add
sbb
subb
cmp
mov
lds
jecxz
aad
mov
in
mov
loope
jns
sub
jle
xchg
arpl
adcl
mov
and
adc
mov
jae
rcll
lds
dec
test
sbb
imulb
inc
repnz
cltd
xchg
shlb
vpacksswb
push
sbb
sbb
jb
adc
outsb
stc
bound
aam
movsl
arpl
hlt
lods
adc
push
xchg
lret
mov
push
pop
fwait
pop
out
dec
fcom
dec
in
mov
sub
cmpsb
xor
clc
inc
insb
lahf
adc
paddd
mov
je
jmp
jb
pop
popa
sarb
dec
xor
adc
jge
jns
dec
cmc
push
fnstsw
add
ret
pop
jnp
jl
out
ljmp
jle
rolb
test
cmpsb
pop
and
insl
fidivrs
sbb
lcall
push
mov
lea
xlat
mov
mov
xchg
xchg
xchg
mov
cld
mov
sub
push
ret
inc
aas
adc
jle
jb
and
in
popf
jg
mov
mov
or
adc
dec
test
sbb
sub
loopne
jnp
and
add
pop
and
fwait
mov
stos
in
and
test
sub
mov
aas
jg
xchg
in
push
sti
mov
in
mov
jae
in
jo
sub
not
imulb
popf
pop
dec
mov
test
mov
je
or
addr16
fiadds
xor
sahf
andb
sbb
add
add
add
inc
xor
dec
adc
insl
lds
jb
ja
xchg
jne
rcrb
std
xor
mov
or
call
inc
arpl
ljmp
cltd
mov
cmp
mov
mov
push
pushf
clc
ds
fisttps
cltd
arpl
jno
out
cmpsl
or
aas
push
inc
or
xor
cmpl
jle
fildll
shll
mov
push
cmp
or
test
dec
clc
push
cmpsb
das
pop
cmp
popf
xor
leave
or
and
mov
push
cwtl
adc
dec
pop
push
sbb
jne
call
ret
pop
in
ret
xor
loope
inc
dec
ljmp
addr16
xchg
dec
add
push
cmp
jnp
flds
inc
fmul
cmpsb
jb
pop
dec
push
lea
adc
mov
idivl
pop
dec
pop
adc
test
movsb
mov
cmp
sub
lds
gs
xor
pop
out
xchg
sarl
pop
lret
inc
xchg
les
jb
arpl
cmp
push
mov
xor
xchg
push
in
jb
and
icebp
inc
call
mov
ret
in
sub
out
cltd
sub
mov
es
jo
clc
mov
mov
or
push
mov
adc
sar
mov
divb
inc
icebp
jl
pop
out
je
das
or
dec
popa
scas
add
mov
cmp
xchg
mov
dec
test
adc
outsb
xchg
mov
and
xchg
xor
add
mov
es
xor
lea
jns
mov
sti
sti
adc
pop
shrl
mov
jo
mov
adc
test
gs
jg
enter
outsb
push
sub
cmp
repnz
dec
dec
push
mov
mov
in
pop
lods
xor
mov
mov
rcr
and
movsb
in
jle
push
jle
xchg
dec
aam
das
push
pop
pop
fdivrp
sahf
test
mov
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
out
fidivrs
cltd
xchg
jnp
sub
add
add
add
pop
outsl
push
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
