push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
mov
jl
jl
jl
xor
xor
ja
or
orb
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
cmp
dec
adc
xor
test
add
or
jmp
leave
mov
pop
mov
in
stc
add
jl
stos
cmp
ja
std
dec
adc
inc
mov
cmp
cmp
pop
cmpsb
pop
jae
pusha
adc
mov
push
repnz
int3
add
sahf
notl
mov
inc
out
clc
orl
inc
push
and
pop
es
xlat
jecxz
mov
call
mov
push
push
mov
out
inc
mov
xlat
jne
pop
loope
lret
bound
mov
mov
je
icebp
mov
fwait
xchg
dec
push
cmpl
mov
xor
aaa
lcall
lret
scas
sarb
push
lock
push
inc
es
out
mov
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
lret
inc
mov
jl
jl
jl
adc
sub
cmp
into
sub
push
xchg
out
loopne
adc
das
cmpsb
dec
loopne
lods
ljmp
ljmp
iret
ss
jecxz
xor
pop
mov
or
xor
mov
or
xchg
mov
cld
sub
jne
popa
mov
cmc
and
mov
adcb
inc
icebp
aas
fsts
and
daa
cmc
pusha
icebp
dec
sbb
xor
jno
sbb
stos
or
xchg
jp
push
jp
loop
popf
and
ss
pushf
pop
cmp
mov
mov
add
sbb
xor
jmp
insb
xor
lret
mov
add
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
je
mov
push
out
mov
pusha
frstor
push
mov
stos
movsl
xor
jae
push
xor
movsl
add
lods
fldt
jl
cld
aam
cmp
xchg
mov
or
or
mov
enter
in
loope
jnp
or
and
push
nop
mov
dec
data16
dec
add
xchg
adc
push
fistpll
sti
mov
iret
fnstcw
shrl
test
pop
dec
aam
adc
test
stos
popf
mov
aaa
push
xorb
das
divb
leave
mov
mov
or
or
jb
sahf
mov
xchg
jne
add
add
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
cmp
mov
jl
jl
stos
jae
mov
push
mov
out
pushf
call
and
clc
int3
adc
cmc
jl
popf
ja
mov
jmp
sahf
xor
int
jg
and
push
lods
jnp
subb
mov
push
push
movsl
shr
imul
xchg
imul
aam
xor
mov
lds
add
js
xchg
test
adc
scas
fsubs
stc
mov
sbb
mov
into
ja
sahf
pop
inc
call
add
addr16
sub
add
lret
daa
cmpsl
cmp
mov
fwait
push
dec
lock
and
nop
sbb
pusha
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
mov
test
mov
in
mov
xchg
add
bound
addr16
cmp
fistpl
or
and
jnp
es
jmp
aas
int
adc
mov
mov
sbb
jo
pop
mov
jl
lods
mul
repz
fdecstp
mov
out
je
adc
cld
inc
pusha
and
das
jmp
rolb
scas
subl
sarl
popa
push
push
pop
popa
adc
ficompl
fadd
repz
push
xchg
inc
mov
ret
mov
test
xchg
cmpsl
mov
sbb
mov
lea
xor
insl
add
movzwl
mov
jmp
repz
jecxz
push
scas
rorb
jo
jl
jl
jl
lea
nop
mov
mov
mov
fs
xchg
jno
mov
mov
lods
outsb
cmc
sahf
loope
pop
cmpsl
and
adc
shrb
pop
sub
and
sub
std
mov
movsl
and
or
dec
fs
test
dec
out
hlt
pop
ret
les
xchg
cmpsb
mov
aad
int
in
mov
jmp
xchg
int
test
dec
jno
push
push
mov
mov
imul
or
stc
and
push
pop
hlt
add
cmp
adc
or
notb
loope
mov
sbb
xor
ss
fists
mov
stos
ljmp
sahf
jb
add
adc
clc
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
inc
add
jl
jl
jl
in
xchg
xlat
pop
jno
dec
arpl
out
lods
pop
and
sbb
cmpsl
xchg
dec
stos
dec
cmc
lock
sahf
ljmp
add
xor
out
mov
lods
out
mov
push
add
imul
sbb
fstpt
stos
shrl
hlt
jg
in
and
sahf
out
test
sbb
jp
pop
sti
sub
rorb
adc
cmp
sub
fistl
roll
adc
cmpsb
or
out
cmp
rorl
xchg
mov
dec
push
cmp
imul
xchg
adc
cld
decl
call
imul
decl
add
cld
decl
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
arpl
sbb
loope
sub
in
out
repz
add
pop
mov
push
dec
inc
insl
xor
jle
mov
enter
dec
inc
lods
xor
dec
xor
sub
popf
mov
test
clc
pop
xor
xchg
shrl
jp
into
add
and
fsts
dec
insl
pop
lea
sbb
xor
rclb
jb
sbb
xchg
insl
sbb
test
loop
xchg
jno
jg
lahf
mov
and
fcoml
pushf
push
in
and
in
pop
inc
or
push
pop
jmp
roll
das
bound
or
ss
inc
mov
inc
jmp
add
add
mov
xor
xchg
xchg
jns
jbe
movsl
adc
dec
pushf
and
ss
or
mov
stos
xor
add
iret
int
loope
pop
xorl
jne
xor
out
repnz
xchg
lods
xor
fs
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
insb
add
pop
icebp
jb
jl
jg
jl
mov
push
loopne
fsubl
mov
dec
jle
cmp
repnz
aad
dec
test
sbb
cwtl
push
sub
lret
loope
in
xor
mov
ficompl
pop
adc
xchg
jb
mov
sub
sbb
in
movsl
leave
out
and
aaa
add
mov
inc
negl
adc
sbb
push
xlat
cmp
xor
pop
push
cmp
je
mov
mov
jne
lods
insl
add
pop
out
cmp
pop
jae
dec
movsl
loope
ljmp
jne
xchg
xchg
pop
sub
push
clc
cwtl
in
daa
add
jns
mov
cmpsl
mov
mov
testl
dec
fcoms
sbb
lds
je
pop
rclb
add
or
shll
shlb
andb
sub
xchg
ljmp
xor
les
pushf
jo
jmp
push
rcll
add
sbb
add
mov
cltd
mov
jle
adc
jl
jg
jl
movsl
mov
data16
in
cmp
lock
aas
loope
sbb
das
fdivr
sub
sub
pop
divl
jl
pop
pusha
mov
pop
pop
inc
stos
dec
mov
and
jb
xchg
std
bnd
ja
dec
outsl
clc
aam
xchg
out
lock
sbb
push
sbb
mov
pop
push
call
movsb
idivl
mov
and
and
push
and
jg
pop
jns
ds
xchg
jb
sarb
mov
loopne
scas
jo
jge
cmp
jg
fmuls
arpl
clc
in
leave
mov
jmp
mulb
adc
push
xchg
fucomp
xchg
xor
daa
pusha
add
jns
lds
pop
lcall
mov
fsubrs
mov
jnp
fbld
and
cmp
jne
ds
mov
jnp
mov
adc
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
sbb
jl
jno
jl
cli
mov
push
or
incb
aad
ficompl
inc
sbb
dec
fs
pop
sub
ret
sar
inc
jmp
fists
loopne
data16
mov
adc
cltd
push
add
push
icebp
pop
testl
xchg
icebp
jb
loope
inc
aad
sarl
xchg
xchg
dec
adcl
not
push
add
dec
push
xor
iret
lahf
cld
sbb
lods
loopne
ja
push
sbb
jo
lret
loopne
sub
ljmp
xchg
cltd
jbe
push
jp
stc
popf
dec
stc
cwtl
stos
cmc
lods
popf
add
cmp
into
pop
mov
js
gs
ss
orl
push
pop
cli
test
adc
jmp
sub
movsl
std
push
or
gs
leave
xlat
inc
es
mov
fisubrs
mov
push
flds
rcll
movsb
jns
mov
pop
pop
into
cmp
arpl
sbbb
stos
movl
movl
or
mov
xor
mov
negl
add
movl
cmp
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
int3
mov
jl
jg
jl
lods
push
andb
xor
sub
push
arpl
cmp
fadds
push
jmp
mov
ljmp
jno
in
hlt
cmp
lcall
sub
xor
test
pop
jo
or
stos
adc
ret
sub
xor
push
lock
outsl
ss
jecxz
cmpsl
ja
mov
dec
in
adc
inc
push
std
mov
jns
cwtl
lods
and
lock
cs
and
sbb
pop
xchg
pushf
mov
pusha
dec
lcall
cmp
xchg
jl
mov
fstl
in
arpl
leave
scas
jb
sub
mov
and
mov
icebp
loope
and
inc
das
adc
sub
mov
dec
cld
in
ret
xor
mov
jae
dec
add
int3
cmpsb
sbb
fnstenv
push
das
cmpsb
mov
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
push
jbe
jl
jg
jl
xchg
push
sbb
mov
xor
fwait
push
rcrb
dec
adc
push
in
lock
inc
ret
mov
cs
into
scas
lret
push
pop
addr16
int3
and
cwtl
jg
fcoms
insb
mov
sbb
mov
adc
dec
adc
cwtl
mov
hlt
dec
adcb
dec
mov
jecxz
cmp
cmp
sarl
inc
sbb
jns
test
mov
add
push
sub
pop
sbb
adc
pop
aaa
mov
lods
pop
hlt
repnz
add
mov
adc
jecxz
andb
add
add
ja
movsl
dec
jb
adc
xchg
sub
test
fsubrl
jle
pop
jo
mov
xlat
xor
pop
jne
bsr
in
loop
sbb
lret
mov
jecxz
cmp
mov
adc
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
pushf
push
mov
jl
jg
jl
sub
pop
push
scas
stc
sbb
add
out
sbb
lret
inc
dec
stos
push
and
shrl
xchg
mov
xor
dec
push
dec
popf
jb
push
mov
jb
jnp
bound
arpl
fldl
repz
mov
lds
add
cmp
das
fnsave
cli
je
aas
pushf
pop
ja
mov
cltd
lods
cmp
stos
xor
xchg
shl
stos
add
test
adc
call
and
shl
and
pop
shrl
or
fsqrt
dec
insl
jb
jbe
lea
mov
in
aam
in
inc
pop
in
pop
add
jge
sub
push
sar
and
loopne
cmp
lret
stos
sbb
aam
sub
es
aad
aad
stc
cmpsl
cmp
mov
or
fisttpl
and
pop
daa
aad
rcl
jp
mov
mov
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
subl
ja
mov
adc
test
cld
outsl
shrl
mov
movsb
cmp
sahf
ret
int
out
bswap
lcall
dec
jge
out
push
int3
cmpsb
xor
cmp
clc
cmpsl
clc
mov
mov
rclb
ljmp
pushf
jle
xor
imul
inc
fcmovnbe
movb
add
daa
mov
mov
xor
inc
jns
jbe
sub
lret
mov
dec
sarl
dec
adc
jns
fidivrl
mov
in
fildll
rclb
ja
lret
cs
dec
add
mov
xchg
cmpsb
mov
cwtl
adc
and
test
mov
clc
lock
push
not
in
movsl
dec
gs
add
out
test
scas
test
rorl
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
mov
fists
test
jl
jno
jl
clc
cwtl
jae
pop
rolb
push
mov
into
sub
xchg
mov
cld
leave
mov
imul
ja
push
add
cmp
in
sbb
stc
jne
cmp
lock
pop
xchg
mov
fbld
imul
add
in
in
xor
mov
jecxz
ds
add
daa
fcom
loope
lahf
je
scas
fwait
lods
lods
jbe
mov
xor
cltd
inc
iret
mov
adc
out
xchg
cmp
leave
jecxz
out
int
inc
ret
pop
jg
dec
std
lds
mov
pop
add
push
and
movsb
push
les
inc
and
int3
pop
lock
mov
test
jl
xchg
orb
imul
xor
jo
pop
sub
pop
js
std
aam
or
jmp
and
add
push
adc
pop
sbb
cmp
mov
roll
sbb
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
outsl
sbb
jl
jg
jl
xor
or
cmpsl
shll
popf
mov
stos
das
lea
orb
ds
and
mov
clc
clc
int3
rorl
jnp
int
loopne
ret
aam
sub
add
ljmp
std
jbe
icebp
or
adc
mov
jl
aaa
fadds
nop
test
mov
psrlw
sbb
add
daa
cmp
cld
subb
sbb
xor
fldcw
iret
or
daa
popf
insb
push
pop
inc
pop
mov
and
xor
cltd
mov
and
add
cli
push
loope
cmpsb
jp
dec
cld
int3
fstpl
bound
xchg
pushl
sbb
xor
sbb
push
cs
add
gs
fwait
add
xor
push
out
mov
popa
xlat
mov
pop
addl
dec
insb
cmp
mov
das
dec
hlt
and
mov
pop
arpl
in
mov
cmp
cmp
xlat
add
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
xchg
xchg
sbb
or
jl
or
and
call
and
mov
shll
add
jno
mov
jbe
xor
ljmp
idiv
lahf
icebp
mov
mov
mov
sub
adc
cmp
pop
cmp
push
cmp
repnz
adc
or
in
xlat
pop
mov
in
mov
fsubl
xchg
das
clc
adc
ss
inc
dec
aad
in
fdivl
or
mov
subl
lds
lock
shrb
and
xor
shll
add
rorb
mov
stos
sub
add
pushf
cmpsl
aam
stos
or
fst
rclb
push
bound
add
jg
push
loop
push
aaa
cs
adc
out
lea
inc
jb
or
pop
xor
daa
or
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
lret
stc
lahf
or
jl
jl
jl
rol
add
sub
jge
lcall
adc
pop
ja
inc
lahf
int
ret
cmpsb
clc
and
mov
hlt
xor
js
jbe
dec
int
mov
sub
jne
xchg
mov
cmp
lret
shlb
shlb
push
lret
gs
xor
jnp
cmc
pop
pop
or
clc
inc
jb
mov
pop
into
jle
sbb
inc
fisttpl
push
xchg
ret
neg
jo
test
aaa
shrb
inc
jbe
and
jno
in
movsb
aad
pop
shlb
pop
enter
mov
mov
mov
std
cmp
ja
xor
loop
mov
pop
fsubl
sub
mov
out
xchg
push
aas
scas
ss
fidivs
push
and
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
aam
xchg
haddps
jl
test
filds
clc
inc
aad
sbb
inc
mov
insl
push
roll
js
out
cmp
sub
ja
orl
xor
pop
out
movsl
popf
idivb
push
insb
add
dec
add
test
jg
gs
lret
and
pop
andl
imul
adc
mov
lds
add
push
xchg
ret
add
xor
mov
icebp
dec
cmpsb
rcl
loop
jmp
fcmovb
pop
dec
addr16
xor
inc
or
xor
pop
cmp
in
jno
js
mov
shl
pop
sahf
jbe
dec
cltd
je
scas
adc
pop
inc
dec
inc
xchg
clc
or
cmc
pusha
je
mov
int3
imul
jg
sub
js
out
int3
sub
clc
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
daa
jo
push
jl
push
jl
jl
jnp
cmp
test
xor
dec
add
lahf
mov
jl
xchg
cmp
add
cltd
adc
setl
jbe
dec
arpl
mov
ds
subl
out
mov
lods
jae
push
push
push
sub
adc
outsl
movsb
jp
stos
sub
xor
cmp
iret
popf
jo
icebp
sub
cmpsl
je
pop
cli
pop
cmpsb
call
mov
loope
clc
mov
mov
pop
clc
xchg
pop
in
sbb
or
lea
out
fsubl
sub
sahf
repnz
mov
lret
repz
je
and
arpl
and
cwtl
shll
sub
nop
jp
cmpsl
lret
pop
adc
ret
or
loop
jne
or
pop
insb
out
inc
jp
mov
mov
jmp
xlat
push
imul
xor
xchg
jns
cmc
jne
add
jl
jl
mov
mov
mov
pop
mov
mov
lahf
jle
adc
pushf
arpl
mov
int3
sbb
ljmp
daa
inc
or
pusha
jae
dec
mov
ret
call
fistpll
roll
sub
scas
lock
pop
lods
daa
cmp
lock
mov
lret
push
movsb
pop
lods
mov
loope
stos
pop
cmp
test
mov
cmp
out
jge
mov
repz
jmp
push
insb
push
mov
or
mov
sbb
inc
inc
sub
dec
fsubrl
scas
int3
cmpsl
mov
adc
outsb
push
xchg
leave
mov
imul
pop
test
cld
sbb
dec
sbb
inc
rol
cmp
pushf
xor
mov
or
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
aas
jnp
and
jl
push
jl
jl
in
ljmp
and
cmpsl
add
movsb
and
test
jmp
rcll
es
imul
je
mov
cmpsl
and
xchg
xchg
push
mov
mov
sbb
aaa
std
xchg
je
mov
es
fcoms
clc
and
iret
out
mov
cmp
shr
inc
xor
aas
cmp
or
push
mov
sbb
add
cmpsl
push
repz
nop
negl
arpl
mov
push
or
inc
add
push
lret
test
xchg
pushf
in
sub
inc
pop
inc
inc
and
mov
dec
jo
push
adc
dec
push
subb
mov
xchg
sub
les
xchg
mov
xchg
dec
sub
cmp
adc
out
sbb
ret
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
shl
mov
push
add
jl
jl
push
in
xchg
lods
or
inc
test
add
test
repz
jno
push
int3
insl
in
mov
mov
mov
inc
cmpsb
test
shrl
lods
lds
xlat
subl
cmp
sbb
popf
addr16
adc
mov
mov
std
mov
jmp
sbbb
inc
add
stc
sub
lods
outsb
pop
fwait
xchg
add
mov
mov
shrb
ret
fimuls
push
push
cmp
hlt
ret
aad
pusha
jno
jno
xor
xorl
xchg
add
sub
loope
cwtl
scas
jmp
testl
xchg
sbb
push
fmulp
jmp
fcoml
pop
gs
cwtl
mov
xlat
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
fisubrs
inc
xchg
jge
jl
push
jl
jl
les
push
repz
inc
fcompl
repz
jle
mov
test
and
in
cs
xlat
mov
lods
mov
push
cmp
or
sub
in
mov
daa
loope
inc
cmc
fs
dec
popa
push
aad
or
xchg
mov
inc
and
ficoml
int
popf
int
js
out
xor
sub
adc
inc
or
gs
cmp
iret
leave
sti
aaa
jl
dec
ret
sub
mov
jp
mov
mov
call
push
add
ds
cwtl
outsl
and
jg
aaa
push
test
xchg
call
push
mov
xchg
adc
mov
ljmp
ror
dec
test
mov
leave
ja
shrb
push
sbb
insl
jb
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
pushf
jecxz
cmp
jl
pop
jl
jl
lcall
rcll
shrl
in
sub
inc
xor
inc
pusha
fsts
adc
inc
pop
sti
cld
lahf
sbb
sti
push
fists
sahf
and
sbb
loopne
jp
adc
jg
insl
mov
out
jle
dec
sub
adc
xor
pop
jb
les
xchg
cld
mov
push
repz
sbb
out
outsb
aam
pop
lods
outsl
xor
cmpsl
fsubrp
lock
and
pop
aas
pop
add
lcall
mov
imul
add
jge
jnp
mov
xchg
jae
xchg
ja
movsl
call
imul
rorb
pop
popl
jp
pop
push
inc
sub
outsl
cmp
insb
ljmp
lock
push
icebp
push
adc
mov
jmp
incl
cmp
xor
cmp
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
xor
cwtl
and
outsb
cmp
loopne
push
xor
test
pusha
test
dec
sti
xchg
sbb
aam
sbb
loopne
xor
cmp
in
loop
pop
pop
rcrb
xor
push
sbb
call
je
dec
hlt
js
inc
sub
ja
test
mov
and
call
ret
adc
fs
add
into
jle
stos
fwait
pop
mov
movsl
and
stos
rcrl
lcall
mov
sbb
stc
pop
jns
mov
es
mov
imul
lock
sbb
and
addr16
shll
insl
xchg
ljmp
inc
cmp
sub
pop
cli
loop
fimuls
ret
ja
lock
add
add
andl
jg
and
add
jl
jl
jl
jp
int
jae
sbb
lea
and
mov
mov
clc
iret
push
or
jge
popa
pop
sbb
scas
and
push
add
cmpsl
cli
xor
fistps
or
clc
scas
inc
xchg
test
xor
lret
xchg
es
movsl
pop
xor
iret
push
push
sti
cmp
sub
pop
inc
mov
outsl
mov
jg
int3
cld
add
dec
lds
xchg
sti
stos
mov
dec
or
cmp
cmp
pop
leave
insb
cmp
adc
adc
into
xlat
mov
shll
imul
scas
cs
inc
dec
jns
add
in
pop
pop
clc
js
mov
mov
cli
in
or
outsb
cld
movsl
scas
xor
imul
sbb
stc
mov
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
xor
fcmovnb
xchg
roll
movsb
adc
das
sbb
jb
pop
mov
popf
rclb
mov
or
jmp
or
mov
push
xchg
fisubl
inc
jl
daa
sub
cmp
aaa
mov
rcrl
inc
pushf
ja
adc
or
fisubrs
in
sbb
mov
xorb
sub
ja
nop
jle
and
xor
arpl
dec
sbb
adc
and
xchg
mov
or
rcll
xor
dec
into
inc
shrb
push
lcall
pop
push
mov
idivb
and
dec
xchg
mov
inc
out
mov
xchg
je
call
enter
dec
movzwl
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
cmc
mov
push
jl
push
jl
jl
dec
and
or
add
xor
pop
cli
ljmp
xlat
out
push
xchg
adc
mov
sbb
sub
cmp
sti
leave
imul
lret
movsb
imul
add
enter
inc
popa
add
push
dec
std
push
adc
fsubs
cltd
sbb
xor
mov
in
fsubs
aas
jb
addr16
sbb
testb
and
hlt
jo
push
cmpsl
lret
orb
cs
xor
and
inc
xchg
push
push
test
jb
lahf
dec
loopne
aad
push
push
mov
add
sti
pop
pop
scas
lcall
addl
adc
push
mov
sahf
xchg
cs
add
inc
loope
lock
rcll
sbb
movsb
mov
cltd
jge
add
lock
pushf
clc
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
mov
xchg
sbb
jl
jl
pusha
cmovle
jbe
mov
mov
pop
insl
notl
cmp
popa
cld
pop
and
sbb
dec
or
jg
fwait
sbb
loop
pushf
pushf
fwait
mov
fmull
dec
shl
sub
mov
test
jmp
inc
add
lods
adc
pop
xchg
push
adc
or
lahf
mov
jae
jge
and
pop
popa
sub
adc
movsb
jl
push
xor
push
push
cwtl
add
push
dec
push
repnz
cmp
in
inc
cs
mov
add
add
call
mov
cmpb
mov
jle
addr16
inc
jb
jecxz
les
push
dec
and
adc
test
sub
jae
psrlq
int3
cmp
imul
and
testl
xor
sbbl
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
test
popf
sbb
jl
jl
mov
jae
inc
sbb
insl
js
rcrl
mov
pop
and
in
cmpb
mov
jp
lods
and
loopne
jge
sbb
adc
mov
jb
das
mov
cwtl
test
testb
cmpsb
repz
add
je
mov
and
movsl
out
mov
cmpsb
adc
pop
int3
lods
aad
int3
cmpsl
js
je
aaa
jp
add
addr16
repz
mov
ret
mov
inc
imul
jecxz
xor
ss
sub
cwtl
je
aam
xchg
adc
mov
jnp
jle
daa
cmp
pop
sub
out
leave
out
int3
xor
sub
rolb
out
mov
insl
rcrl
mov
inc
pop
aam
inc
in
fbstp
aam
enter
inc
das
int
push
add
jne
add
or
add
clc
inc
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
mov
sub
sbb
jl
jl
push
adc
lret
cmp
cld
or
rcrb
jno
pop
cmc
pusha
aas
in
and
mov
cmpsl
adc
cmc
adc
rcrl
std
or
inc
dec
cmp
ret
lock
adc
sub
mov
push
xchg
scas
xor
cmp
addr16
iret
sub
aad
je
dec
scas
adc
add
mov
sbb
jg
mov
shlb
outsl
data16
notb
hlt
xor
xorl
xlat
sbb
cmpsb
test
pop
stos
mov
cs
sahf
and
sbb
dec
and
lock
lcall
test
ss
mov
ds
ret
lods
js
jp
test
jge
cwtl
in
cmpps
scas
mov
popf
hlt
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
xor
sbb
push
sbb
jl
jl
jp
sbb
and
fsubl
jl
lds
mov
inc
mov
iret
je
push
ss
add
jg
cs
movsb
cltd
jmp
enter
pop
jno
push
push
push
push
jo
sub
pop
cmp
data16
pop
pop
dec
and
cmp
jns
fst
aas
in
push
cld
jg
xor
std
je
scas
stos
sbb
aaa
shll
mov
fstpl
test
test
arpl
ret
shll
loope
fsubs
cmc
mov
inc
sahf
mov
iret
pop
nop
or
lock
lahf
add
je
inc
mov
lcall
popa
fadds
sub
lock
ljmp
imul
loope
jae
push
mov
mov
imul
stos
xchg
mov
mov
xor
jmp
sbb
mov
std
adc
push
nop
data16
jl
jl
cmc
cmp
cmp
adc
cmp
imul
call
jp
in
adc
iret
pushf
dec
sub
test
or
adc
sahf
mov
mov
call
aam
rorb
clc
fs
lcall
push
out
push
cld
inc
push
daa
inc
cmp
cmp
xor
insl
sub
fdivrs
cmp
lea
out
sbb
mov
iret
or
mov
ds
pop
sbb
and
mov
pop
dec
mov
ljmp
faddl
inc
and
push
cmpsb
js
out
imull
lea
cmpsl
sub
or
mov
xchg
ljmp
xlat
xchg
adc
inc
nop
jmp
lods
orb
xor
jne
inc
adc
jae
sbb
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
movl
jl
sub
pushf
xchg
jnp
aam
incl
in
or
popl
bound
xor
mov
pop
imul
mov
xchg
jae
shrl
ss
jo
adc
mov
cwtl
std
push
lcall
xchg
bound
push
sub
xchg
xchg
add
cmp
nop
xchg
dec
xor
sub
xor
sbb
rcll
push
xlat
xchg
and
and
jle
jb
rclb
aaa
cs
fldt
push
aam
pop
mov
mov
xlat
rcll
jle
addr16
mov
lods
test
js
aas
test
pop
jp
xchg
mov
aad
aaa
out
loopne
mov
ret
movntps
push
inc
and
or
xor
pop
xor
ds
addl
gs
stos
push
in
jl
sbb
lcall
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
scas
push
inc
jo
dec
ds
addr16
jmp
sub
lret
stc
dec
cli
jp
jl
inc
adc
outsb
icebp
dec
inc
adc
insl
xor
fsubr
imul
dec
fstl
scas
jbe
retw
inc
imul
add
loopne
mov
cmpsb
int
arpl
mov
xchg
or
loope
mov
jne
arpl
rolb
and
dec
push
and
xor
xor
dec
mov
xor
in
mov
out
cmpsb
cld
fsubl
int
adc
cmpsb
mov
xchg
fucomi
pushf
outsb
add
lcall
pop
scas
adc
leave
pusha
mov
inc
imul
fbstp
repnz
mov
aam
in
and
mov
lret
xor
xor
or
rorl
add
imul
test
xchg
lret
fstpl
pop
jl
push
jl
jl
out
mov
loope
std
lret
mov
rol
xlat
xor
fs
ljmp
shl
cld
or
loope
out
xchg
sub
sub
mov
shrb
mov
stos
sub
mov
imul
scas
dec
push
sarb
outsb
sub
icebp
lods
pop
ljmp
and
scas
rcrl
jbe
push
pop
leave
pop
icebp
ljmp
pusha
fs
jns
test
push
test
js
daa
dec
push
aaa
inc
out
movsl
sub
xchg
adc
into
roll
xchg
push
cmpb
dec
cmp
push
in
adc
insb
test
jbe
jg
call
adc
shll
sbb
add
inc
lahf
xchg
add
mov
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
gs
out
xchg
jl
adc
jl
cli
shrb
rcrl
lret
scas
inc
xchg
ds
inc
adc
pop
test
insl
add
push
call
ss
jmp
jbe
mov
mov
insb
xchg
inc
outsl
mov
ja
cmp
mov
push
imul
loopne
addr16
mov
cmp
xchg
and
push
int3
dec
lods
psubusw
sub
jecxz
mov
mov
call
popf
imul
fidivrs
cmp
nopl
add
stos
lods
fs
test
jle
stc
sub
sub
das
or
and
icebp
pop
cwtl
je
push
movsb
test
pushf
cmp
adc
mov
in
jle
xor
bound
out
stc
lds
ret
sub
cmp
pop
jecxz
mov
add
ficompl
jb
fiaddl
mov
negl
addr16
jmp
mov
jl
cmp
xor
dec
inc
loopne
adc
ret
daa
icebp
add
pushf
or
dec
jge
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
or
adc
jl
lods
mov
out
and
pop
test
int3
jnp
xchg
jns
arpl
hlt
test
mov
test
inc
xor
xor
ror
mov
jne
and
mov
jmp
or
and
push
sub
jge
int
test
pop
xor
popa
sbb
fbstp
and
adc
mov
or
nop
pop
and
xchg
fmuls
int
hlt
dec
nop
int
adc
sub
mulb
cmc
jle
xor
xchg
cmp
icebp
jnp
mov
pop
pop
dec
mov
pop
hlt
mov
mov
add
in
shll
xchg
add
jo
add
pushf
and
lea
pop
cld
dec
call
add
push
aad
in
and
int
ljmp
stos
fildl
in
add
jl
xlat
sub
rorb
jns
or
push
daa
leave
jnp
ret
pushf
test
mov
lret
fs
jnp
repnz
mov
cmc
push
push
jle
clc
or
imul
decb
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
movsl
pop
adc
jg
jl
dec
jg
mov
fcmovb
sub
dec
and
mov
inc
fnstenv
add
lret
add
call
lods
jno
mov
mov
jecxz
test
arpl
or
mov
fildll
pop
pushf
push
cld
stc
and
inc
mov
push
int3
fidivs
lret
rcrl
test
add
popa
cs
call
adc
stos
bound
push
clc
pushf
loope
dec
mov
int
pop
mov
sub
lds
leave
xchg
ja
mov
lret
aaa
xchg
and
jne
pop
bound
orl
adc
inc
lods
or
loope
stos
lahf
rcrb
pop
dec
insl
inc
lods
cmpsl
inc
sbb
in
js
inc
inc
out
sti
lret
hlt
das
pop
kmovw
std
fildll
aaa
xchg
xchg
cmpsl
mov
adc
imull
mov
lahf
fistpl
test
lret
xchg
adc
imul
in
or
popf
mov
movsl
dec
outsl
xor
mov
fisttps
or
jmp
in
xchg
imul
les
jmp
and
jno
jl
adc
jl
mov
add
mov
adc
xchg
arpl
or
inc
jnp
fdivs
mov
cmp
addr16
lock
outsl
mov
aas
fstpl
push
leave
and
stc
mov
call
lea
enter
mov
shlb
icebp
in
inc
xchg
mov
fstl
mov
add
ret
pop
cwtl
add
es
arpl
push
cmp
xchg
ret
scas
lcall
loop
jg
mov
cwtl
in
push
inc
repz
dec
mov
in
rorl
outsb
repnz
mov
lcall
jnp
insb
lods
pusha
les
aad
cmp
and
xor
cs
dec
pusha
mov
push
xlat
inc
js
push
clc
pop
mov
pusha
inc
push
cli
pop
or
or
shrb
jae
mov
sub
sahf
stc
pop
push
repnz
sub
lods
sub
test
fdivs
xor
rolb
sub
int3
daa
pusha
sub
add
in
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
fidivrl
test
aaa
jg
jl
mov
and
pop
cmp
test
aaa
daa
cmp
push
movsb
adc
fcoms
cmp
aas
xorl
lock
daa
cmp
call
xchg
sti
pop
adc
inc
sbb
fdivl
notl
and
sbb
lret
push
mov
orb
mov
lret
out
inc
jae
dec
repz
dec
addr16
push
xchg
or
addr16
mov
mov
sahf
fnsave
negl
mov
int
sub
fsubl
sub
push
cwtl
xor
daa
ljmp
cmpsb
scas
sbb
cltd
mov
icebp
notl
outsb
and
sub
jb
mov
stc
ffree
xchg
into
xchg
xor
add
mov
lods
mov
arpl
std
or
mov
fucomip
mov
inc
push
icebp
xchg
xchg
out
out
cmpsl
mov
test
xlat
pushf
adc
jge
imul
push
xor
imul
loop
pop
mov
mov
push
call
lahf
add
scas
pop
dec
ja
lea
add
jp
cs
xchg
mov
in
inc
lret
cmp
mov
mov
add
sbb
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
xor
testb
pop
loop
jl
imul
xor
sahf
pushf
mov
jae
les
daa
and
mov
imul
inc
mov
cli
xchg
lock
dec
bound
sbb
sub
and
inc
xor
pusha
jbe
mov
in
dec
inc
test
pop
popa
jecxz
fdivrl
mov
int3
mov
pushf
inc
mov
mov
cmp
vcvtdq2ps
jle
add
lret
push
push
mov
cmp
pop
inc
xor
pop
pop
pushf
xchg
or
xor
rorl
add
dec
sub
pop
mov
loope
push
lahf
dec
xchg
lock
mov
lds
sub
cmpsb
imulb
jns
mov
imul
xchg
enter
loope
or
lds
fnsave
lock
shll
sti
and
mov
outsb
mov
jle
cmp
xchg
stos
mov
out
add
fsubrs
in
push
mov
add
sbb
and
jl
add
scas
mov
jns
scas
xchg
negl
jnp
shlb
push
mov
mov
adc
mov
sbbl
jmp
jno
xlat
sti
sti
std
add
mov
jbe
in
pop
jl
aaa
jg
jl
sbbl
in
stos
dec
adc
std
xlat
dec
or
pusha
dec
popf
inc
ja
adc
mov
or
dec
out
pop
lea
fildl
jo
in
daa
div
adc
dec
dec
push
addr16
mov
fldl
and
loop
pusha
in
pop
mov
jge
add
inc
jbe
cs
andb
outsb
das
push
xchg
xchg
xor
sub
sbb
and
xor
xor
inc
nop
insb
notb
adc
push
mov
push
dec
or
xor
ds
fs
jbe
or
xor
out
jne
fcoms
popl
jge
shr
fsts
cmp
sbb
ja
push
stos
aaa
scas
mov
lret
bound
xlat
aaa
pop
loope
test
imul
jp
and
cmc
das
cmp
out
aaa
jae
mov
cmp
or
jp
lret
test
xchg
push
sbbb
lahf
lret
adc
pop
or
repz
imul
mov
repz
aad
mov
loope
into
jle
and
mov
jo
out
loop
xlat
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
sbb
sub
jg
jl
xor
push
push
loopne
lea
push
imul
mov
call
adc
or
dec
sbb
mov
mov
cld
and
gs
dec
popa
aaa
or
repz
dec
insb
jo
mov
fs
add
mov
out
xor
ds
out
or
sbb
in
sbb
cltd
movsl
pop
in
mov
jle
aad
and
lods
lcall
jmp
dec
pop
std
push
pop
push
hlt
ja
cmp
sahf
push
mov
lds
xchg
push
negb
cmp
insl
call
stos
fmuls
and
cmpsl
scas
ret
pop
mov
lea
enter
addr16
popa
pop
jns
xchg
in
shl
sub
jmp
xchg
aaa
outsl
fisubrs
xchg
add
imulb
fmulp
daa
cmpsb
sbbl
xchg
cmp
sbb
out
jp
lret
lret
sub
jae
cmp
lods
lock
dec
add
cs
bswap
mov
nop
push
sbb
out
jb
scas
cmc
push
pop
push
cmpsl
jns
pushf
mov
xor
out
loopne
ja
xchg
fildl
sbb
imulb
add
mov
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
sub
push
dec
in
mov
jo
dec
sbb
pop
loope
xchg
sub
mov
sbb
pop
je
fwait
inc
je
rcll
test
mov
out
popa
xor
mov
dec
pop
fwait
pop
push
bound
xchg
adc
mov
inc
pop
test
and
pop
into
imul
outsl
push
scas
scas
add
and
inc
sti
sahf
mov
ja
incb
or
and
or
ret
cs
es
shll
movsb
test
fistps
inc
jnp
dec
enter
sub
dec
ret
addl
cmp
pop
ja
mov
adc
mov
dec
ja
sub
xlat
fsubrl
dec
cmpb
mov
outsl
mov
sbb
cwtl
and
sbbb
ljmp
sub
lret
or
push
lret
pop
ror
dec
push
mov
stc
js
inc
cmp
stos
cmp
xor
data16
pop
js
pop
mov
mov
cwtl
dec
sbb
cwtl
jo
daa
add
test
cs
mov
icebp
clc
jno
out
push
and
clc
push
mov
push
push
ffreep
cmpsb
imul
jmp
mov
jmp
mov
stc
mov
pop
ret
mov
jg
jl
mov
rolb
in
stos
add
jmp
mov
lods
aas
cmpsl
xor
fistpl
cmc
mov
push
and
push
ficoms
pushf
cli
add
xor
in
pop
pop
cmp
push
xchg
data16
je
gs
sarl
adc
lds
or
sarl
mov
imul
imul
ds
insl
xchg
lods
inc
add
mov
stos
xchg
push
cmp
testl
xor
popa
aam
mov
loop
sub
mov
insb
mov
jns
pop
push
subb
stos
pop
arpl
call
sub
pop
cld
popa
jb
xchg
or
cmp
jbe
or
mov
or
jns
sarb
push
cld
pushf
jl
leave
xor
aam
jbe
es
call
movsl
sbb
mov
lcall
out
dec
mov
mov
inc
jle
dec
test
mov
js
dec
sub
ret
mov
or
mov
mov
push
fbstp
repz
lock
push
jl
repz
cmpsb
push
xor
add
jg
and
ret
movsl
data16
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
test
add
jl
inc
pop
scas
loopne
negl
pushf
cli
mov
test
add
inc
stos
xchg
pop
or
xchg
lock
jbe
mov
in
sbbl
fsubrs
cmp
out
jns
loope
jge
xchg
push
cltd
push
inc
push
push
mov
pop
push
and
stc
mov
inc
outsl
sub
aam
fistps
in
iret
loope
dec
adc
inc
and
in
fnstcw
test
push
xchg
sbb
cmp
das
mov
add
dec
or
inc
das
out
cs
dec
cmc
repnz
test
and
out
jo
cmp
add
sbb
lea
subl
repz
stos
mov
std
mov
xor
fcompl
nop
out
fld
dec
jae
mov
aas
ficoml
adc
jno
addb
pop
sbb
pop
in
test
insb
negl
lret
jns
aas
imul
jg
mov
xchg
mov
cmp
repnz
rcll
xchg
clc
add
sbb
inc
sub
xor
mov
dec
and
mov
in
arpl
fstpl
mov
cli
mov
in
or
bswap
movsb
xchg
ss
dec
fnstsw
inc
mov
fnsave
les
fs
jecxz
fimull
mov
je
xor
add
mov
jmp
stos
adc
mov
mov
out
out
sub
jl
jg
jl
mov
jb
or
pop
or
cmp
cli
loope
aaa
jo
in
xlat
mov
fmull
test
adc
pop
dec
push
jmp
xchg
loopne
and
in
daa
das
pop
sbb
int3
stc
loop
mov
fwait
and
adc
into
sbb
adcl
sbb
call
aam
jb
sbb
out
cmc
notb
out
lahf
outsl
lcall
lret
jge
sub
mov
jg
jmp
pop
xchg
sub
inc
mov
shll
xchg
repnz
nop
int3
mov
inc
stos
push
cmp
sub
int3
xchg
rclb
popa
aas
inc
mov
jmp
dec
xchg
cmp
jne
push
iret
fiaddl
mov
imul
dec
scas
and
jae
push
sbb
hlt
dec
out
sub
inc
ret
push
cs
push
push
pop
dec
test
iret
ret
jne
cmpsb
gs
rcrb
xchg
fcmovnbe
pushf
and
adc
dec
pop
in
sahf
rcl
mov
pop
sahf
lods
pop
stos
dec
xor
jecxz
xor
into
lret
push
push
fldcw
inc
or
xchg
add
adc
dec
mov
divl
and
sbb
jae
cmp
adc
scas
shr
add
add
sub
imul
sbb
jl
fdivrs
jl
sub
cmpl
mov
jno
lret
sbb
mov
pop
push
or
sub
cs
pop
mov
adc
adc
fdiv
push
sub
or
mov
mov
movsb
test
icebp
pop
test
sbb
xor
aam
cmp
dec
cmp
in
pop
sbb
push
sahf
loopne
movsl
cmp
xor
dec
jns
sub
je
inc
sbb
fwait
std
push
sbb
push
inc
fistl
sbb
sub
mov
addr16
pushf
cmpsl
fmull
data16
and
inc
cltd
pushf
and
pop
ja
xor
pop
insl
push
dec
mov
stos
or
dec
pop
popa
fstpl
outsl
adc
jnp
movsl
mov
mov
pop
test
add
in
xor
xchg
ret
ja
test
ficompl
enter
inc
xor
or
cltd
sbb
mov
das
mov
subb
push
aam
ret
repnz
outsb
popf
xchg
mov
adc
hlt
leave
inc
clc
pop
bnd
std
insb
stc
push
mov
sbb
xchg
sahf
sarl
cmp
pop
xor
inc
sub
mov
mov
pop
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
ds
push
je
or
cli
push
imul
das
pop
xchg
fildl
xor
mov
push
fcompl
inc
lea
adc
and
testl
inc
enter
fs
pop
jmp
imul
inc
add
sahf
add
add
rorb
push
adc
adcl
xor
pop
scas
cmpsb
cmpsl
out
push
mov
ret
cmpb
push
leave
rol
aam
inc
arpl
je
into
mov
mov
rcll
mov
fcoms
push
mov
shl
or
fsubrs
cmc
daa
or
mov
or
les
jo
cwtl
fsub
sahf
shr
jno
lret
lcall
hlt
adc
push
adc
jmp
insb
rclb
push
cmp
sub
sbb
sub
mov
xchg
or
pop
lods
xlat
or
das
xor
subl
sar
addl
jge
divl
movl
push
add
mov
xchg
lahf
out
sub
nop
in
cmpsl
inc
sub
inc
addr16
movsb
mov
bound
movsl
out
out
out
cmp
mov
dec
shll
mov
sbb
cli
xchg
lods
lock
adc
cmp
fdivr
mov
and
imul
neg
mov
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
cmpsl
push
int3
ja
and
jg
jl
push
push
add
das
or
ret
in
or
popa
loopne
dec
adc
mov
clc
and
stos
cmpsb
in
dec
std
cmpsb
xor
mov
mov
inc
int3
test
pop
cld
sti
pusha
rorb
xchg
mov
pop
sub
imull
les
clc
xor
orb
cmp
int
sbb
push
in
sub
into
aad
push
mov
test
mov
xchg
sub
push
mov
inc
jns
shrb
jecxz
hlt
adc
pop
stc
add
lret
add
push
xor
push
push
push
cmp
jb
aam
and
out
push
movsb
xor
fsubrs
fmull
rcll
push
out
insl
insl
lret
cmpsl
xor
es
fiaddl
mov
adc
cs
pop
pop
push
jl
int
rclb
mov
scas
hlt
repnz
test
push
sbb
in
into
dec
shll
roll
in
ljmp
sub
rcl
adc
mov
ret
xor
movsb
cld
mov
fwait
clc
cmc
or
jae
jge
xlat
fdivrl
lret
or
in
or
pop
clc
inc
jbe
es
test
or
push
mov
xor
movzbl
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
mov
mov
call
int
stc
clc
inc
aad
je
sbb
enter
inc
jo
sbb
int3
mov
push
sub
int3
cmp
lahf
sub
scas
jnp
mov
fdivrp
adc
pop
push
inc
dec
xlat
mov
mov
dec
lods
xor
lock
cltd
sbb
mov
sarb
xchg
cld
outsb
dec
cmpsl
aad
fsub
stc
mov
inc
xor
mov
inc
sub
ja
movsl
lds
andb
insl
lcall
add
dec
jb
in
imul
mov
sub
jg
sub
jo
push
leave
hlt
mov
shlb
mov
out
push
sarb
pop
mov
pslld
in
push
lock
imul
pop
or
mov
or
fadd
xor
pop
cli
lds
enter
jle
xchg
sar
imul
or
sub
scas
add
lret
shlb
add
lds
push
jp
cmp
inc
jo
sti
xorl
mov
dec
cli
cmpsl
rol
add
dec
dec
push
lret
mov
adc
sub
clc
mov
ret
loopne
dec
and
in
push
jo
shrl
ret
mov
mov
lret
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
insb
xchg
and
jl
jbe
inc
sub
lea
or
in
jne
sbb
push
das
add
shll
loope
cs
fimull
cltd
sbb
andl
push
out
imul
jmp
rorb
inc
add
mov
mov
lock
jae
xchg
notb
lods
bound
dec
inc
mov
jbe
push
mov
cmpsb
pop
bound
pop
xor
jb
das
dec
cmp
lods
fists
lahf
insl
leave
mov
xchg
mov
fisttpl
cmpsl
pusha
push
cmpsb
repnz
aaa
aam
cmp
imull
push
push
call
adc
gs
xchg
jl
xorl
in
dec
mov
in
in
fisttps
popa
lret
xchg
add
inc
movl
clc
add
into
shrl
mov
pop
lock
sahf
add
addr16
inc
outsb
out
lret
fiaddl
loopne
into
xor
xchg
jno
fadds
cmp
lods
rclb
shrl
int3
fs
dec
push
fs
pop
push
cs
lret
in
stos
daa
adc
push
or
clc
arpl
adc
js
pop
lcall
xchg
push
enter
add
add
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
push
adc
ja
and
jl
jg
jl
stos
loop
ljmp
mov
gs
push
shll
push
cmpsl
fiadds
dec
shll
test
mov
aad
scas
test
mov
xor
loop
sbb
daa
push
ljmp
or
and
out
jecxz
sub
out
or
push
sbb
pop
ret
xchg
clc
inc
roll
push
dec
sub
cmpsl
push
mov
fsubl
pop
cmpsb
jg
push
imul
ss
sub
dec
pop
rolb
mov
dec
int
ss
inc
fadds
sbb
loop
movsl
shl
outsl
lds
negl
sub
adc
lods
das
aas
in
outsb
dec
in
adc
adc
lds
lcall
mov
mov
daa
fadds
mov
jmp
leave
push
dec
insl
push
inc
and
sub
insb
push
inc
dec
aaa
lds
movsb
cmpsb
jp
pop
and
vmptrld
daa
stc
mov
jno
out
mov
scas
enter
cld
pushf
lods
xchg
mov
mov
lock
mov
pushw
inc
jl
pop
mov
add
xor
mov
fiadds
daa
in
mov
loop
mov
mov
jne
rorb
cld
aam
data16
mov
add
pop
jae
in
mov
imul
sub
mov
jmp
dec
cli
sbb
test
outsb
jp
out
rolb
xchg
xor
jl
call
add
pop
mov
push
push
fdivl
popa
and
fmuls
aas
jne
shl
mov
shlb
push
xchg
sahf
rcrl
lock
push
stc
cmp
ljmp
xchg
cmp
adc
mov
push
rcll
aaa
movsl
and
insb
push
aad
sti
leave
push
fwait
xchg
scas
aam
imul
sub
mov
mov
sbb
cmc
movsl
fwait
xchg
push
xchg
lea
fidivs
inc
cltd
sbb
add
and
mov
inc
lds
repnz
loopne
in
mov
dec
mov
jae
mov
out
fcomi
jge
mov
mov
je,pn
jbe
and
pop
mov
push
sub
std
inc
mov
pushf
or
mov
mulb
lcall
push
jno
xchg
and
cmpsl
fstp
lds
sbb
lahf
xchg
adc
loop
scas
push
jnp
test
mov
xor
jge
inc
movsl
dec
enter
sub
push
pop
roll
dec
pop
sub
shl
fcmovnu
imul
push
push
and
and
fsubl
fistpll
push
xchg
outsl
rorb
fldenv
push
or
xor
mov
add
jmp
push
mov
aad
sbb
dec
scas
cmp
jg
jl
xchg
adc
push
mov
sub
jle
in
inc
mov
xor
test
mov
adc
add
cmpsl
pop
push
sbb
or
xor
add
cmc
inc
clc
adc
sub
stos
push
xor
sti
in
into
sbb
nop
cwtl
cmp
xchg
inc
xorb
pop
lcall
cmp
push
mov
fstl
xchg
xor
xchg
mov
test
in
cltd
psubd
fsts
lret
xor
pop
out
add
push
into
xor
pop
pushf
stos
int
pop
test
push
lea
enter
xor
nop
bound
rcl
fsts
dec
sbb
pop
insb
loope
or
aam
sub
dec
pop
lds
mov
push
jne
notl
push
out
sbb
out
mov
test
scas
add
data16
pop
push
xor
push
sbb
adc
mov
loope
xchg
mov
pop
mov
sbb
movsl
cmc
int
lea
test
pop
push
int3
push
mov
cltd
scas
add
loope
outsl
scas
push
mov
out
lret
sbb
mov
fidivrs
int
lcall
repnz
jno
inc
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
addr16
mov
sbb
jl
call
aam
aam
cld
sub
mov
pop
jae
jnp
clc
dec
adc
dec
or
out
imul
lds
xor
push
lods
and
int
stos
nop
adc
dec
push
fdivp
testb
in
lods
mov
sub
mov
push
jb
aam
daa
xchg
adc
lahf
jno
fld
fsubs
stos
pusha
pop
shll
loopne
mov
aaa
cs
insl
and
fcmovnbe
dec
aam
cmp
push
xlat
fsubrl
dec
fs
vmwrite
xchg
cmc
inc
pop
js
mov
mov
fsubl
or
fnsave
mov
inc
pusha
or
sbb
aam
je
insl
dec
pop
cmp
js
cmp
and
xor
mov
cli
incl
xchg
sub
push
dec
test
pop
mov
arpl
mov
loop,pt
xor
out
jge
rclb
aad
mov
int
sbb
jg
sub
inc
inc
mov
mov
iret
or
push
jmp
mov
or
out
insb
lahf
adc
popf
xchg
pop
mov
shlb
aaa
push
popa
pop
xor
add
sti
xchg
shlb
fimuls
rorb
pop
mov
mov
testl
jb
add
fmull
call
rorl
add
call
add
jge
mov
inc
jae
inc
idivl
jl
call
out
mov
sub
dec
sbb
xchg
outsb
or
mov
leave
sub
sbb
testb
cmpsb
push
xchg
pop
int
push
mov
mov
movsb
sahf
xor
test
adc
out
push
imul
dec
out
ret
les
or
icebp
cmp
and
sub
mov
ficoms
inc
pop
push
adc
sub
xlat
stos
outsl
ss
loope
xchg
push
test
lret
jnp
or
nop
xchg
aad
inc
mov
adcl
out
rcll
sub
push
mov
and
stos
rolb
int
pop
fidivrs
cmp
movsb
adc
out
inc
aad
aas
adc
enter
pop
xchg
push
mulb
push
mov
mov
mov
rolb
or
das
inc
jle
outsl
scas
das
arpl
cmpsb
add
jg
jmp
out
mov
adc
sub
das
push
in
and
les
test
fidivs
outsb
arpl
pushf
movsb
pop
addr16
add
js
jecxz
jp
mov
lcall
sbb
ret
mov
testb
gs
jno
mov
ja
sub
and
add
fs
jmp
jns
addl
jno
scas
adc
or
js
cmpsl
repz
std
icebp
lea
push
adc
test
add
ret
out
std
cli
cmp
sbb
jl
call
sbb
sub
cmp
jle
sbb
aas
sub
and
xchg
pop
repnz
cltd
lret
adc
pushf
mov
sahf
in
or
sbb
sub
fs
mov
jg
pushf
and
pop
je
fcmovnu
mov
jb
push
inc
inc
sbb
cmpsb
cmc
das
test
inc
xor
push
call
cmpsb
xor
or
jmp
pop
mov
push
sbb
iret
loopne
and
push
and
ljmp
or
mov
inc
cmp
mov
sbb
in
sub
enter
sub
push
push
adc
cltd
and
popa
or
cltd
push
pop
xchg
push
dec
inc
and
adc
int
lahf
popf
xchg
jmp
daa
pop
movl
ljmp
push
push
mov
push
pushf
test
or
cmp
lea
dec
fiaddl
push
int3
inc
mov
sarl
cmpsb
sbb
mov
lds
add
subb
lea
push
stc
clc
enter
mov
mov
jp
shll
jg
pop
hlt
add
loop
jl
sti
int3
adc
push
xor
xor
and
leave
pop
mov
lahf
xchg
scas
lea
mov
cwtl
je
xor
jmp
sub
sti
je
out
sub
cmp
jl
call
inc
std
loop
dec
arpl
pop
insl
dec
mov
add
xor
sbb
and
xchg
imul
repz
mov
mov
rolb
fnstenv
in
ret
and
adc
sbb
jb
jne
cmp
orb
xchg
cmp
pop
adcl
push
dec
and
psubb
sbb
popa
cmp
pop
adc
jecxz
mov
in
dec
xchg
mov
cmc
mov
ds
shlb
cltd
insl
and
jo
jno
pushf
cmp
sahf
outsb
fmul
mov
sub
pop
mov
add
sbb
int
mov
ljmp
aaa
rol
aas
faddl
cli
data16
aas
out
sub
out
test
lret
dec
imull
push
sbb
mov
lock
fsubrl
out
or
adc
xor
xlat
jge
cmp
pusha
and
mov
and
xor
cltd
push
call
pop
icebp
jge
mov
adc
cmpsl
jne
leave
out
sbb
gs
sub
imul
addr16
add
mov
into
dec
inc
testl
mov
dec
jp
adc
test
ljmp
mov
imul
mov
xor
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
mov
int
dec
jl,pt
call
arpl
insb
insl
pusha
xchg
inc
js
outsb
pop
cmpsb
push
xchg
add
mov
insb
out
nop
or
test
movsb
ds
std
sbb
stos
cmp
mov
out
xchg
pop
leave
xor
stc
push
lods
lret
inc
adc
lea
in
or
sbb
pop
insb
pop
shll
out
test
je
pop
lahf
inc
les
int
xchg
xchg
push
adc
mov
loop
lock
xchg
dec
fsubl
clc
sub
mov
add
jmp
movsl
push
xchg
test
sub
mov
fcmovnbe
sbb
push
lcall
inc
addr16
jp
movsb
mov
and
scas
xchg
fwait
es
adc
cmp
adc
pop
xchg
fcmove
mov
xor
mov
inc
test
mov
mov
mov
loopne
scas
enter
jne
add
cmp
xchg
sbb
jne
jg
std
mov
hlt
das
sub
add
push
cmp
sbb
imul
xchg
pop
mov
enter
mov
sub
dec
add
nop
push
sbb
pop
mov
orb
or
in
frstor
mov
icebp
pusha
scas
ljmp
dec
aam
bound
fisubrl
test
idiv
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
divb
fsubs
xor
jg
jl
sbb
push
xchg
dec
jnp
arpl
push
or
adc
clc
sub
mov
jne
and
lcall
fwait
cmp
iret
dec
mov
ss
popf
int3
mov
test
dec
repnz
mov
stos
xor
sbb
pop
xchg
vcmpss
or
rolb
sbb
leave
and
stos
cltd
cmp
mov
fsts
int
mov
sbb
out
mov
or
sub
cmp
push
pusha
jbe
cli
cli
inc
dec
xchg
jg
mov
mov
imul
mov
ds
aad
xor
push
sbb
xor
ss
sbb
popf
adc
push
sbb
mov
mov
fwait
dec
sub
pop
js
sbb
mov
call
push
leave
repnz
mov
inc
call
and
jbe
adc
shll
mov
push
sub
out
int
mov
and
stos
repnz
push
pop
mov
gs
cmp
or
out
or
jo
sbb
push
cmp
mov
imul
mov
cmc
add
pop
daa
and
push
jg
dec
push
cmpsb
xchg
jle
gs
scas
imul
add
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
xchg
andl
add
lcall
or
aam
mov
mov
cmp
outsb
jbe
mov
lret
enter
jle
mov
mov
sarb
jnp
test
shr
in
add
pop
or
sbb
out
stos
test
pop
dec
movsb
sti
leave
outsb
dec
into
mov
mov
fldl
inc
sbb
cmpsl
add
push
int
bound
into
adc
int3
jo
pop
rol
jbe
mov
fs
pushf
std
outsb
sub
add
lods
inc
repnz
sbb
dec
xchg
loop
pop
lods
aaa
popa
dec
inc
jle
dec
sbb
lock
cltd
and
into
sbb
arpl
leave
lods
mov
jl
mov
cmp
jecxz
call
sub
mov
jns
push
hlt
clc
outsb
pop
and
rcr
pop
mov
adc
jmp
movsb
sahf
movsl
cmp
pop
xor
xchg
mov
rcl
push
iret
shll
and
mov
in
leave
popa
lea
gs
pop
pop
addr16
sub
mov
iret
and
mov
jae
test
cmp
cmp
mov
add
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
fsubrs
jl
call
pop
mov
repnz
arpl
pop
pop
data16
push
jnp
lahf
in
imul
cli
sarl
push
iret
cmpsb
lock
les
movsb
sbb
fildll
mov
in
jecxz
mov
lahf
jno
dec
mov
insb
clc
sti
push
cmp
xchg
fcom
sub
cmc
loopne
fs
out
mov
xor
push
in
xchg
enter
dec
movsb
loopne
cmpsb
push
inc
cmp
xor
adc
jnp
xchg
push
repz
dec
and
test
lock
test
inc
cmpsb
xchg
push
idiv
rorl
popa
not
push
vshufps
jle
jns
xchg
xlat
iret
stos
jl
mov
in
jae
test
hlt
dec
out
rolb
mov
xor
dec
sqrtps
sub
push
sbb
or
ret
fistpll
mov
xorb
pop
mov
jns
addr16
jecxz
pop
mov
lcall
hlt
gs
xchg
xchg
dec
mov
jp
inc
rcr
stc
xchg
add
repnz
ret
mov
jmp
sbb
cmp
sub
and
inc
push
int3
adc
rcr
mov
add
scas
xor
xchg
js
jmp
pop
push
pop
xchg
and
shlb
mov
add
sahf
mov
adc
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
jl
sarb
add
imul
add
or
add
lods
xchg
adc
jns
cmc
sahf
je
inc
sub
xchg
pop
dec
push
mov
test
mov
loop
inc
mov
add
sbb
subb
ss
ficoms
arpl
cmpsb
lret
cli
or
js
pop
lcall
lods
xchg
push
lock
pop
icebp
inc
test
mov
mov
mov
jp
xchg
mov
mov
movsl
popa
test
mov
daa
xchg
out
xchg
fstps
xchg
sbb
mov
jne
cmp
adc
jno
sub
push
shrl
mov
insl
jg
push
mov
dec
aam
mov
jb
mov
dec
movl
fmull
rclb
sbb
lret
xchg
fs
pop
loop
adc
xchg
sub
push
orl
inc
ja
in
loop
pop
clc
lods
inc
gs
push
or
movsl
das
cmpsb
xchg
leave
lods
mov
ret
pop
mov
rolb
loopne
repnz
xchg
mov
hlt
pop
dec
cmpb
movsb
push
sub
stos
orb
cmp
imul
mov
iret
xor
add
cmp
sti
or
mov
mov
sub
iret
pop
cmp
mov
mov
push
in
and
popf
sahf
gs
aad
sub
cmp
in
jbe
pop
ficoml
gs
scas
sbb
cli
test
out
call
std
jb
sti
mov
js
ret
cmp
adc
lods
call
mov
arpl
stc
pop
bound
lret
xor
pop
or
jno
ret
inc
pop
xor
dec
js
popf
ljmp
inc
repz
stos
jp
xchg
inc
mov
inc
dec
inc
popa
lods
dec
cmp
add
xchg
lods
mov
push
mov
scas
lds
lret
jmp
sbb
jg
hlt
in
mov
or
jge
xchg
mov
push
repz
std
ljmp
pop
stc
xchg
movsl
push
out
add
sbb
shrl
sahf
aaa
sub
int
in
gs
ja
popa
mov
les
jg
lret
std
mov
pop
sbb
jb
adc
push
and
and
jecxz
mov
arpl
xor
lret
xchg
mov
movsl
mov
je
jl
call
inc
fisubrl
das
adc
xchg
jnp
and
fsubs
or
dec
js
mov
int3
lds
hlt
negb
icebp
stc
lods
inc
int3
and
icebp
ret
movsb
shll
cwtl
pop
scas
imul
add
mov
fs
sarb
mov
shll
xchg
cmp
andb
pop
jle
push
or
addl
and
aas
inc
lcall
outsb
movb
outsb
mov
outsl
lods
jbe
aaa
or
cld
ja
ret
dec
mov
xor
cmp
mov
cli
shll
or
or
dec
adc
sti
repnz
ja
or
dec
push
fdivs
pop
outsl
and
mov
jbe
mov
jnp
mov
xor
inc
pop
pop
and
or
pop
dec
insb
test
inc
test
pop
out
push
mov
add
jecxz
xchg
pop
xchg
pop
std
or
xchg
jnp
push
mov
jmp
xor
pop
aad
mov
lret
call
popf
cwtl
push
bound
out
sub
js
mov
stos
xor
cmp
nop
js
jb
lods
stos
out
and
fisttpll
adc
dec
xchg
pushf
xor
lock
sbb
inc
loop
repnz
lret
out
icebp
cltd
push
lcall
xchg
cmpsb
sbb
loop
mov
dec
lcall
or
loope
outsb
sbb
aad
dec
cltd
mov
scas
test
aaa
fdivp
xor
pop
int
adc
rorb
in
arpl
sub
inc
je
mov
jge
arpl
addl
sbb
test
test
sub
pop
mov
ret
rcrl
lahf
stc
testb
imul
inc
fstpt
mov
imull
test
xchg
call
xchg
inc
daa
mov
addps
xchg
xchg
mov
loope
lock
leave
lret
nop
cld
inc
nop
push
inc
sbbb
push
lds
arpl
pop
or
bound
lret
and
adc
mov
clc
or
push
loop
leave
push
xor
mov
mov
mov
in
push
jae
xchg
ds
or
jg
and
arpl
ss
gs
lds
daa
jp
sbb
ficoml
cmpsb
adc
mov
sbb
push
cmp
sub
ds
pop
sarl
pop
push
cmp
mov
xchg
mov
mov
xor
stc
cs
push
inc
enter
pusha
clc
jge
mov
insl
leave
sbb
cld
pop
insl
lret
dec
ljmp
jbe
sub
mov
lret
out
jge
pop
dec
mov
aam
pop
mov
adc
jmp
insl
ret
mov
jno
ljmp
and
inc
mov
jl
mov
adc
sub
jg
xor
pusha
fists
mov
enter
popf
pop
adc
movsb
or
test
cmp
cltd
dec
lods
push
int3
insb
sbb
ljmp
xchg
mov
andb
pop
and
push
sbb
imul
or
leave
aam
cmp
and
adc
jb
mov
adc
rolb
fnstenv
adc
cmp
xor
lahf
dec
xorl
outsb
mov
aas
out
xor
xchg
lret
fdivrs
test
sbb
sahf
jne
inc
and
out
push
add
adc
repnz
push
jmp
push
call
xchg
push
xchg
data16
jg
mov
test
sub
jmp
push
aaa
adcb
cwtl
xor
ds
or
jnp
cmpb
stc
add
clc
and
mov
call
fimuls
xor
xlat
test
cmpsl
sub
dec
insb
add
mov
jecxz
and
pop
repz
sbb
shr
les
fwait
rcr
decl
lret
or
dec
jge
fisttpll
mov
xchg
add
mov
out
adc
fildll
out
pause
cltd
xor
call
pop
add
dec
hlt
sbbb
orl
lahf
push
loopne
stos
adc
gs
rorb
movsl
outsb
inc
adc
mov
aas
jl
test
out
xor
dec
ret
ja
rorl
adc
add
and
push
arpl
pop
das
mov
add
les
data16
xor
pop
fsubrp
test
dec
fisttpl
and
dec
mov
repnz
mov
pushl
int3
imul
shlb
and
xor
cli
xchg
test
adc
movsl
loope
cld
cmp
movq
push
je
roll
movsb
out
xchg
daa
mov
sti
xchg
ret
fsubp
adcl
out
sbb
fisubs
sti
pop
xchg
out
cltd
fidivrl
pushf
ror
stc
sbb
addl
adc
fwait
xor
xor
dec
sub
hlt
mov
lret
pushf
sub
inc
lret
lret
and
mov
xchg
adc
sbb
fstl
pusha
mov
addr16
mov
pop
pop
xchg
sbb
mov
sub
add
sub
popa
push
aaa
mov
mov
cmp
inc
loopne
jae
push
sbb
outsb
xlat
mov
adcb
imul
or
popa
orl
pop
sti
mov
or
cmpsl
in
jl
cmp
mov
nop
stc
and
xor
add
lea
add
insb
dec
adc
subb
scas
cmp
pop
pop
jge
aaa
fldl
enter
cmp
fldcw
pop
in
inc
mov
icebp
clc
push
mov
cmpsb
jge
dec
enter
outsb
xor
in
js
jl
imul
and
push
sbb
sbbl
mov
mov
or
sbb
mov
je
inc
aaa
mov
push
inc
xchg
jbe
aas
lock
dec
xor
xor
lcall
sarl
aad
iret
jge
cmpsl
jl
sbb
mov
push
aad
lock
jge
push
call
inc
mov
lea
rclb
test
inc
fcoms
adc
mov
in
ret
xchg
cmp
cli
cwtl
lret
dec
ja
daa
xchg
xor
pop
stos
imul
sub
jecxz
ja,pn
loope
nop
fistps
test
sub
lret
lcall
cmp
add
mov
movsb
adc
je,pn
movsl
cwtl
jo
ds
or
pop
out
xchg
inc
out
stos
jno
mov
lds
or
lret
xor
div
movsl
jle
cmp
popa
jmp
inc
or
idiv
testl
push
fistps
gs
test
pop
sbb
gs
lods
in
jo
in
or
repnz
les
negl
mov
negb
mov
cmpsb
out
lcall
hlt
and
lock
dec
das
push
mov
mov
jns
ljmp
fst
insl
repnz
sbbl
dec
push
cmp
rorb
and
or
sub
loopne
int3
cmp
xchg
fildll
and
jmp
fucomp
cmc
pop
cmp
addr16
xchg
push
add
pop
int
dec
adc
fcmovnb
std
test
rcrl
pusha
cmp
mov
scas
mov
mov
dec
aam
fdivl
clc
es
mov
adc
cmpsl
and
out
pop
xchg
dec
and
dec
or
or
out
fdivl
sbb
int
cmp
mov
sub
divb
sti
sbb
pop
jp
push
stos
aad
adc
aad
xchg
out
pushf
test
lcall
test
ds
out
sub
jle
push
sbb
sbb
pop
fwait
daa
aam
lods
inc
cmpsb
rorl
jecxz
popl
and
cmp
dec
ss
into
rcl
in
mov
popf
pusha
or
adc
shlb
xor
call
adc
daa
sbb
sbb
aad
xor
stc
js
dec
push
js
fiaddl
fwait
dec
jle
es
dec
xchg
int
push
sub
out
ret
sbb
outsl
cmp
les
adcl
dec
hlt
mov
int
sahf
pop
jns
jns
mov
mov
icebp
or
jae
shll
cmp
cmc
sbb
cmp
aam
cltd
xchg
shll
mov
imul
dec
scas
or
sbbb
fs
pushw
dec
in
outsb
add
mov
sbb
sbb
push
add
shl
imul
fwait
mov
push
pushl
xlat
loop
pop
push
mov
jae
pop
mov
jo
fmuls
cld
scas
xor
add
pop
arpl
rcll
leave
enter
push
cmp
ret
pop
stc
inc
loop
sbb
inc
dec
fiaddl
cwtl
mov
adc
jno
iret
ds
cld
mov
add
jo
outsb
adc
dec
je
sbb
push
sbbl
xor
shrb
cwtl
out
or
ja
mov
loopne
cltd
xor
xor
adc
je
cwtl
mov
dec
pop
scas
pop
sub
xchg
xchg
scas
cmp
push
imulb
sub
lret
sub
orl
out
addr16
out
inc
push
jb
jge
or
mov
filds
iret
insb
lcall
mov
mov
ljmp
in
jp
sub
sbb
insb
jp
nop
clc
jnp
sarl
cmp
sbb
xor
add
pop
sbb
movsb
stc
jno
jmp
sub
sbb
xchg
jg
rolb
je
pusha
shrl
sub
xchg
adc
jp
pop
nop
imul
mov
stc
sub
rclb
scas
out
lock
sbb
lahf
mov
and
ret
adc
hlt
int3
dec
jno
ret
pushl
dec
flds
shl
addr16
or
cmpsl
in
iret
xlat
into
dec
pop
in
sti
inc
cmpsl
add
test
mov
xor
mov
inc
jo
lods
add
jmp
negl
in
loope
sbb
stos
inc
dec
out
cmpsb
and
push
cli
pop
jnp
sbb
stos
inc
lret
fcoms
fs
mov
jbe
xor
lock
add
divl
loop
stos
cli
fimuls
xchg
sbb
cs
leave
jp
xchg
or
jns
outsl
adc
cmp
aas
lret
insb
adc
adc
test
sbb
inc
lret
lods
adc
cmp
add
in
push
scas
jp
mov
cltd
push
push
add
imul
add
mov
inc
lds
cmp
popf
push
xchg
sub
inc
dec
xorl
add
hlt
push
fdivrl
js
add
cli
mov
pop
loop
add
adc
int
std
push
adc
sti
scas
jle
mov
mov
nop
cmp
nop
pop
push
jae
adc
inc
or
arpl
jns
sub
inc
and
adc
adc
orl
aas
cltd
icebp
pop
and
mov
out
mov
jecxz
bound
pop
outsb
outsl
call
lods
and
aas
mov
adc
test
mov
pop
clc
adc
pop
mov
les
gs
pop
adc
sbb
mov
into
mov
ror
lahf
adc
stc
ljmp
jo
mov
nop
sahf
dec
aas
test
test
fs
push
call
xchg
xchg
mov
jle
test
sub
jecxz
ss
cltd
aas
dec
jbe
in
ss
insl
daa
mov
push
arpl
xor
dec
push
push
inc
xchg
xor
or
outsl
mov
fimull
loop
insb
jo
xchg
int
cmp
dec
insb
subb
addr16
xchg
mov
clc
fs
jbe
jnp
lock
xchg
xor
incl
ficoms
lret
mov
std
sbb
cmc
testl
xor
sub
jno
sbb
movsl
push
test
shrb
mov
testl
push
and
push
or
and
mov
and
adc
mov
hlt
rclb
inc
arpl
scas
flds
sub
sahf
leave
in
adc
addr16
pop
stos
add
fisubrl
adc
push
popa
jecxz
sbb
push
shlb
outsl
leave
sti
mov
push
sbb
or
push
fsubrs
pop
or
dec
add
xor
mov
adc
pop
sbb
fcmovb
stos
dec
xchg
sahf
mov
punpcklbw
inc
rorb
inc
lods
sub
mov
test
xchg
push
les
jae
dec
and
fsin
fcompl
push
cwtl
jg
fidivrl
lahf
pushf
negb
sub
xchg
inc
cmp
das
add
movsb
outsb
int
in
dec
loope
dec
push
sti
xor
imul
aaa
adc
sbb
inc
outsl
ljmp
scas
xchg
add
clc
xchg
inc
xchg
cmpsl
push
xlat
out
dec
rcll
adc
dec
js
outsl
xor
test
xchg
icebp
add
dec
adc
add
sub
jg
mov
cmp
add
push
or
and
jne
mov
pop
and
push
inc
and
xchg
jb
inc
repz
cld
movsl
imul
push
in
jl
lds
jb
ja
divl
sbb
mov
jnp
into
imul
repz
cmpsl
xchg
mov
jmp
sub
cmc
sub
insl
push
stc
lock
pop
mov
pusha
dec
ss
sti
data16
fisubrl
cltd
or
xor
stos
jno
push
jnp
fdivs
mov
sub
insl
mov
sub
fsubrl
jne
push
adcb
mov
jns
xchg
pop
mov
leave
fisubs
mov
enter
out
pop
adcl
leave
jmp
adc
mov
int
setle
xlat
in
inc
outsb
int3
adc
xlat
push
cmpsl
or
mov
daa
add
jb
clc
dec
out
jno
cld
cld
inc
pop
test
add
push
cmp
jg
and
jmp
xor
in
sbb
adc
add
push
pusha
dec
push
stos
mov
sub
shl
jbe
lods
das
out
lcall
xchg
popf
sbb
xor
rcrl
sub
imul
sbb
cmp
pop
push
in
fcom
dec
shrd
pushf
mov
pop
inc
loop
fs
mov
addb
loop
jle
ds
jle
stos
test
pop
cmpsb
adc
jecxz
pop
movsb
nop
push
ss
xor
sub
and
push
inc
xchg
hlt
sti
xchg
push
dec
cmp
lahf
enter
mov
gs
or
mov
clc
jle
ja
scas
cmpsb
xor
inc
insl
lret
out
fstl
aam
cmc
xor
xorl
mov
idiv
in
mov
loope
mov
nop
dec
ljmp
cwtl
xor
stos
mov
ljmp
sub
lret
mov
arpl
inc
mov
xchg
or
out
mov
adc
loopne
push
inc
and
js
sti
adc
scas
daa
fcomip
pop
xchg
adc
movsb
insl
or
popa
jbe
dec
inc
add
stos
es
inc
cld
mov
ret
mov
pop
mov
in
cmp
pop
test
push
mov
fimuls
nop
orl
popa
pop
test
sbb
mov
mov
jno
and
jge
bound
outsl
cmp
mov
aaa
stc
push
fldenv
inc
jo
pop
inc
mov
jns
ja
mov
or
mov
das
out
cmp
jmp
pop
cmp
das
pop
repz
xor
adc
push
push
sbbl
inc
pop
push
out
ljmp
inc
ffreep
push
ja
mov
pop
cmpsb
dec
and
push
fcmovne
int3
dec
scas
repz
loope
orb
lret
arpl
aas
dec
mov
call
pop
in
movsb
lods
repz
jb
pop
cmc
inc
ja
dec
pop
jns
subl
or
fwait
xor
insl
sub
xor
daa
mov
adc
or
push
push
jmp
cmp
out
or
nop
sahf
dec
fucomip
lea
push
cmpsl
push
test
cli
xor
in
mov
push
je
and
sub
bound
or
push
push
loop
push
jae
inc
ja
test
loope
imul
jmp
lcall
sahf
in
ds
and
push
sub
stos
mov
push
or
pop
popf
push
popa
and
inc
jmp
cmpsl
rclb
mov
adc
sbb
adc
call
and
jle
and
jns
js
jb
popa
jecxz
fisubl
das
xchg
push
sahf
call
insl
and
imul
sar
pop
addr16
sbb
aaa
mov
and
enter
or
dec
test
lahf
mov
mov
pop
jge
mov
inc
mov
inc
arpl
mov
and
test
add
lahf
rorl
pushw
cmpsl
xor
add
imul
add
mov
scas
cmp
rcll
push
jge
xchg
jae
jp
cmc
jmp
roll
jmp
lea
inc
sub
stc
insl
mov
shl
sub
adc
sbb
jno
inc
cli
addr16
xchg
push
push
sub
cmp
mov
imul
push
add
sbb
scas
or
lods
pop
dec
gs
sbb
sub
scas
sub
push
xchg
enter
mov
sub
enter
and
gs
rorb
inc
jmp
jmp
stos
or
mov
mov
cwtl
movsb
xchg
push
jp
push
or
mov
in
test
dec
stc
xor
pop
mov
pop
rorb
or
fmuls
xchg
sub
add
cmp
dec
xorl
rep
shll
loop
xor
jnp
lcall
and
add
xchg
push
add
mov
cwtl
jbe
call
push
test
dec
clc
adc
in
jne
jmp
repnz
xlat
dec
cs
pop
fcomp
add
ljmp
repz
push
inc
scas
xchg
insl
jl
push
ret
add
cmp
ja
andl
loop
push
cmp
cli
mov
or
fdivrp
mov
mov
add
leave
in
lret
cmpsl
cmp
pushf
negl
lahf
and
add
mov
jecxz
xor
addl
inc
push
inc
mov
enter
nop
mov
mov
mov
daa
ret
inc
mov
dec
or
push
add
sbb
daa
xchg
jne
repz
stos
test
andl
xchg
cmpsl
dec
dec
mov
cmp
cmp
xorb
mov
in
add
lret
push
mov
cli
xchg
xor
test
jae
mov
enter
lock
insl
clc
leave
pop
xor
jo
sbb
movsl
icebp
jmp
jnp
cltd
lret
mov
sahf
mov
pop
push
add
xor
jge
xchg
or
cwtl
call
ds
in
pop
xor
repz
out
stos
mov
das
loope
outsb
pusha
pop
push
add
jns
lret
dec
add
ss
inc
std
inc
mov
jne
sub
cmp
mov
jle
mov
lret
int
insl
mov
sub
stos
push
dec
popf
mov
mov
cmp
in
and
mov
sti
int3
push
cmp
rcll
arpl
sbb
or
cmp
stos
arpl
sbb
lret
std
xor
divl
jae
mov
mov
jp
add
cwtl
jne
add
xor
jno
call
mov
mov
jmp
shr
addl
lods
lock
pop
popa
pop
shlb
dec
and
ljmp
mov
mov
ret
push
fwait
xlat
pop
and
cmp
mov
in
jbe
adc
test
les
adc
sub
lods
mov
aad
cmp
mov
pop
adcl
rclb
pushf
and
je
test
sub
mov
push
outsl
ret
xor
cmpsl
xchg
pusha
mov
test
push
jno
cmp
sub
es
imul
gs
lcall
add
xor
mov
xchg
push
sub
pop
xchg
repnz
scas
push
fnsave
fcoml
loop
test
add
dec
gs
add
fcmovne
mov
dec
cltd
inc
sbb
out
adcb
int
insl
iret
clc
mov
shrl
and
and
scas
in
shll
fidivrs
push
sub
jnp
cmp
icebp
test
mov
cwtl
xchg
xchg
insl
xchg
test
repnz
xor
adc
mov
and
lods
stc
mov
jne
shl
push
ffree
cmp
mov
jge
adc
mov
les
test
mov
and
add
jge
pop
mov
mov
mov
aas
ds
enter
dec
adc
movsl
ds
lock
inc
push
dec
or
pop
bound
in
scas
push
jae
add
push
push
inc
xchg
mov
add
jno
sub
int
mov
push
xor
xchg
pop
stos
inc
fnstenv
movl
mov
sub
stc
xchg
repz
fdivrp
cld
sbb
inc
pusha
repnz
lahf
sbb
mov
dec
jno
jb
cmp
insb
icebp
test
mov
adc
cmp
and
and
test
pop
sbb
mov
mov
lahf
push
xor
or
outsb
xchg
ljmp
add
pop
pushf
jmp
inc
loop
test
loope
es
and
in
lods
sbb
mov
addr16
mov
out
enter
xchg
leave
xchg
or
rclb
jno
jns
xorl
bound
and
sub
push
mov
cmp
pop
sub
roll
jg
push
sbb
jb
ljmp
add
sub
jb
cmp
cs
insl
sbb
out
idivb
sbb
fistpl
insl
popf
or
or
jmp
mov
scas
cli
filds
mov
xlat
fidivrs
in
sbb
push
cwtl
hlt
mov
test
cli
fnstsw
fcomi
pop
jg
ret
mov
out
roll
or
js
mov
push
mov
or
addr16
jl
nop
sarb
pop
sbb
jmp
aam
xlat
and
in
in
sti
adc
add
pop
lods
imul
scas
push
mov
nop
pop
insl
fdivrs
pop
adc
mov
adc
dec
aad
jbe
data16
leave
repz
cmpsl
imul
jle
mov
leave
shll
fistpll
jnp
sahf
out
inc
imul
push
adc
inc
sbb
mull
in
cld
repnz
mov
cmp
clc
cmp
movsl
and
pop
pop
mov
ss
inc
mov
push
pop
fwait
xor
jne
jo
in
inc
mov
and
shl
into
sbb
xor
mov
sbb
dec
fisttps
mov
addb
xor
rcll
nop
pushf
sbb
dec
mull
ljmp
pushf
xchg
lahf
xchg
mov
outsb
dec
and
jle
mov
and
mov
xor
int3
add
xchg
cmpsl
jae
cld
cli
jp
sti
mov
out
jge
std
out
lods
add
shll
add
imul
add
cmp
sarb
mul
push
lock
leave
mov
push
xlat
dec
add
pop
mov
jmp
aam
stc
inc
or
insl
insl
sub
cmp
sub
gs
movsb
ret
push
jmp
jae
and
lods
mov
test
fsubs
insl
enter
subl
rorl
fs
aas
lfs
aaa
jl
jmp
push
push
mov
ja
clc
push
sub
ret
adc
lahf
jae
push
mov
inc
xchg
pop
push
dec
mov
or
mov
inc
dec
roll
test
mov
pop
int
inc
push
scas
lret
ret
mov
daa
xor
das
fnstenv
fcompl
sub
xchg
or
hlt
imul
xor
cli
outsl
lcall
in
xchg
dec
sahf
popa
enter
jl
addr16
push
sbb
jg
push
arpl
pop
dec
lods
ss
dec
lds
inc
sub
jns
mov
mov
flds
mov
sbb
es
test
loope
out
mov
fmul
mov
xchg
inc
test
orl
inc
cmpsb
pop
cmc
ret
mov
call
into
or
insl
enter
fwait
sar
inc
xor
cmp
sbb
jp
repnz
jbe
add
lds
sbb
adc
lret
jo
mov
je
sbb
int
imulb
sub
adc
icebp
mov
xor
rol
mov
jmp
out
mov
insl
pushf
or
lods
dec
out
xchg
and
or
pop
mov
lock
lods
mov
add
ss
leave
sbb
outsl
jno
mov
fcoml
push
test
xor
pop
dec
orb
loop
in
fcoml
sbb
andl
pushf
out
aad
mov
les
cmp
ss
cmp
fdivl
push
sub
xor
movsb
add
lds
repnz
cmpsb
fwait
loopne
jecxz
push
jle
inc
inc
fnsave
push
loope
callw
xorb
mov
fnstcw
and
push
inc
mulb
fisttpl
jmp
cmp
fs
sbb
rclb
push
push
sti
push
xor
add
ret
and
dec
insb
pop
adc
push
pop
cvtdq2ps
xchg
push
mov
jmp
rcrb
dec
push
push
push
or
xchg
paddq
pop
jo
xchg
cwtl
sarb
adc
mov
fimuls
ss
push
testb
ret
and
mov
or
cmpsl
push
inc
jle
push
iret
xchg
js
clc
aad
mov
push
sub
ljmp
sub
push
arpl
mov
loop
dec
clc
sbb
aas
cs
dec
out
pushf
arpl
js
pavgb
and
out
jg
xor
or
leave
mov
push
cmc
add
clc
test
aaa
out
adc
cmp
fdivp
sbb
popf
jne
cmp
or
mov
std
imul
in
mov
xchg
inc
push
push
mov
and
push
je
add
mov
ljmp
fists
out
daa
mov
mov
int
adc
xchg
xor
add
add
sub
in
out
xor
outsb
jp
mov
loopne
inc
mov
addl
clc
out
in
pop
pop
rcrl
pop
fsubrs
dec
sbb
movsb
xchg
pop
fbld
mov
xchg
fildl
mov
ret
lahf
and
ds
fdivs
insb
mov
pop
cwtl
push
sub
fwait
pushf
loope
and
rolb
sub
adc
lds
out
daa
inc
pop
loopne
xor
sbbb
leave
movsl
lods
sbb
nop
jne
gs
add
test
mov
aas
sub
scas
popf
jmp
pushf
ret
lcall
stos
movsl
aas
arpl
dec
fnstcw
push
adc
mov
mov
in
mov
mov
scas
adc
pop
or
and
cwtl
sbb
cmpsb
xor
repnz
aas
sbb
popa
jmp
bound
scas
pop
adc
clc
bound
out
lock
push
or
cmp
or
mov
je
sub
ficompl
adc
ss
push
or
fs
sti
and
popa
jb
mov
sub
daa
mov
subl
or
in
pop
aas
jge
inc
les
leave
ja
mov
and
stc
jge
ret
or
data16
jmp
scas
fildll
call
jp
fisubl
lods
pusha
pop
jbe
imulb
push
mov
mov
div
fisubrs
xchg
cmp
lret
sbb
pop
push
sti
and
repnz
imull
fsubrl
stos
inc
push
test
pop
loop
inc
dec
push
mov
gs
xor
mov
cmp
push
pop
movsb
scas
add
stc
push
addl
inc
mov
test
aam
insb
sub
sarb
cmp
cld
xchg
jnp
cltd
stos
fistl
into
outsl
fwait
pop
movlps
call
sbb
movq
mov
sbb
outsl
sti
inc
mov
and
inc
fistl
into
pop
add
or
pop
aam
sub
lret
dec
inc
adc
pop
inc
inc
mov
sub
lret
xor
xor
in
mov
mov
mov
xor
inc
fsubs
push
aaa
data16
inc
jae
jns
and
jp
push
sub
push
fdivp
xchg
cld
pop
loop
in
mov
insl
jno
ret
xchg
jo
test
pop
cmp
jae
jo
mov
mov
dec
dec
push
gs
sub
outsl
leave
push
data16
aaa
lret
jg
jo
sub
insl
cmp
and
push
int3
mov
ss
pop
loope
inc
and
fwait
mov
data16
jmp
repnz
decl
pop
into
inc
out
popf
cli
call
add
dec
cmp
scas
pushf
jnp
pop
sub
lcall
repz
cmc
pop
inc
xchg
xor
and
shrb
mov
mov
pop
inc
mov
lret
stos
stos
or
test
xchg
mov
test
sub
bound
pop
xor
xor
add
loopne
add
cmp
xchg
adc
lahf
add
jl
das
jnp
xchg
fwait
or
popa
lea
dec
mov
or
lcall
pop
in
fnstsw
or
push
push
out
insl
add
imul
add
dec
enter
sbb
inc
mov
fstpt
pusha
scas
xlat
jmp
leave
mov
cmp
adc
jne
lods
mov
adc
mov
popf
pop
mov
jb
dec
das
sbb
mov
jp
push
mov
pop
js
nop
cli
xor
inc
or
das
push
aas
sbb
mov
lock
or
pop
or
sub
scas
adc
pop
sbb
stos
and
popa
out
sbb
mov
jl
test
dec
or
mov
les
jp
mov
push
in
mov
pushf
xor
inc
xor
test
lea
fmul
pop
in
mov
sbb
loope
out
fwait
mov
jo
inc
dec
scas
push
cmp
les
xchg
adc
mov
out
xchg
jl
ficoml
push
aaa
ljmp
jnp
shl
and
cmpsb
cmpsb
cmpsl
or
mov
and
je
movq
sub
cmpsl
test
mov
shr
popf
test
movsb
and
rol
cmp
mov
xchg
push
outsb
jp
les
icebp
je
test
xchg
jl
mov
jl
or
mov
imul
xchg
jecxz
fidivrl
fsubrs
mov
xchg
pop
or
lds
scas
add
aam
mov
imul
incb
ds
movsb
cld
test
inc
test
lds
shrl
or
stos
out
or
xchg
ficomps
int
adcl
mov
je
adc
pop
ret
add
pop
fcomp
and
std
or
clc
push
mov
iret
std
jp
in
testb
cmp
rep
xor
mov
pop
mov
insb
xor
push
or
mov
clc
rcrb
loopne
aaa
mov
ror
push
jl
add
dec
hlt
inc
in
or
lret
xchg
inc
and
xchg
lret
lret
jae
cmp
jmp
and
test
cmpsb
xchg
cli
ror
cmp
test
loopne
mov
pop
and
xor
jnp
cltd
jbe
or
mov
outsl
add
inc
sbbb
mov
fs
insl
add
incl
pop
cmp
mov
into
leave
movsl
insb
jne
sbb
and
push
lods
and
gs
es
into
mov
repnz
shrb
cmpsb
pop
mov
mov
das
aaa
xor
mov
fs
push
jl
add
insb
jae
sub
add
dec
push
imul
push
dec
push
push
jl
call
push
pop
push
iret
mov
add
jmp
cltd
add
jp
dec
jg
lods
mov
loopnew
cli
lret
addb
leave
test
pop
adcb
outsb
das
pop
enter
test
in
test
sbb
and
xchg
into
int3
sahf
test
test
int3
lods
es
and
notb
pop
adc
pop
adc
mov
mov
fstl
test
aaa
scas
cltd
and
lds
fwait
inc
jp
xchg
insl
fs
lcall
pop
mov
lcall
mov
out
pusha
xchg
jg
inc
int3
mov
jg
lock
pop
je
xor
push
push
adc
clc
mov
mov
push
inc
loope
fs
add
pop
iret
lret
sti
adc
hlt
addr16
xor
push
repz
in
out
push
andb
sub
mov
jns
dec
bound
into
addl
fisubs
xor
or
mov
jl
xchg
jle
inc
jmp
fmull
call
sbb
test
fwait
ja
sub
pop
mov
data16
mov
mov
adc
mov
fadds
ret
fldl
push
sbb
xchg
cmpsl
lods
sar
loopne
loop
sar
rorl
cs
incb
mov
jge
cwtd
inc
mov
sub
sarb
pop
adc
jno
lcall
icebp
fcmovne
cmp
xor
aam
stc
lods
scas
repz
cmp
push
sub
mov
loop
mov
mov
sahf
push
ficompl
loop
cltd
insb
movsb
orl
imul
mov
jns
out
rorl
aad
push
push
fwait
scas
dec
in
subl
pushf
test
xchg
push
clc
into
fwait
cld
decb
push
lret
xchg
arpl
les
push
call
imul
lds
mov
out
add
loopne
insl
popa
or
jge
out
xor
mov
sbb
pop
movsb
dec
jmp
lock
lods
xorl
jae
sub
dec
ret
add
mov
sarb
bound
adc
fists
push
in
fidivs
push
int
jno
jne
jp
loope
sahf
xchg
cmp
dec
int3
adc
mov
xor
xchg
sub
mov
ss
cmp
adc
and
add
shrl
pop
xor
mov
cmpsb
or
dec
inc
jg
sub
movsl
push
xchg
ss
xchg
push
out
das
pop
and
adc
dec
lea
bound
scas
push
mov
popl
lods
dec
xor
repz
in
andl
aaa
movsb
sub
cwtl
loop
outsb
mov
xlat
jnp
sub
sbb
pushf
pop
add
jmp
lods
lods
pop
push
pop
dec
xchg
ljmp
adc
jmp
leave
loop
aam
test
addl
dec
rorl
outsl
aas
mov
jle
xchg
fldl2e
lret
cmp
pop
negl
fiadds
xchg
addr16
xor
repnz
sbb
leave
fdivs
pop
or
es
popf
push
lock
mov
dec
adc
cmp
sbb
roll
mov
pop
dec
mov
or
adc
addr16
mov
xchg
jno
data16
mov
pop
or
and
aas
or
out
cli
icebp
mov
test
or
pushl
pop
jno
pusha
fwait
pop
fcos
cmp
loopne
iret
in
dec
xor
sub
bound
data16
cltd
lahf
jns
xchg
test
mov
sbb
mov
pop
inc
mulb
and
iret
imul
out
out
sbb
dec
jae
sbb
adc
sub
push
movsl
mov
stc
in
jnp
xor
repz
in
shl
shlb
fdivrl
loopne
lea
orl
and
movsl
inc
lds
add
ss
sbb
loopew,pt
dec
inc
pop
cwtl
push
xor
je
add
add
es
sub
mov
in
inc
stos
or
xor
mov
jnp
pop
mov
lahf
jmp
mov
cmc
cmp
stos
call
dec
insl
sub
lret
and
push
cs
dec
cmp
xchg
mov
test
mov
cmp
cmp
adc
sub
xchg
in
cmp
xchg
fidivl
cmc
mov
mov
imul
shlb
cwtl
es
popa
lods
shr
lods
sbb
popa
jno
add
lods
add
repnz
scas
sbb
push
mov
mov
loop
in
fdivrs
enter
es
mov
stos
call
push
add
test
xchg
lods
pop
pop
fldl
out
dec
leave
push
mov
imul
enter
sub
jp
out
cs
lret
jo
jbe
pushf
and
sarb
inc
movsl
gs
xor
scas
xchg
push
push
mov
sub
sub
fadd
rorl
jo
sbb
leave
iret
or
jb
sahf
scas
dec
sub
xor
push
daa
adc
rclb
mov
movsb
in
adc
outsb
and
xor
scas
movsl
adc
stos
loope
mov
dec
mov
out
add
pop
hlt
add
sbb
or
repnz
jp
pop
inc
daa
orb
fcomp
jne
inc
divl
xor
adc
leave
cmp
sub
and
lods
push
lret
fnstsw
mov
adc
push
fnstsw
pop
aas
pop
jle
cmp
mov
dec
mov
lock
inc
xor
push
stos
jg
mov
out
dec
sub
push
jno
cltd
insl
call
dec
push
and
push
shll
xor
ret
adc
or
aam
cli
sbbb
orl
mov
mov
cmpsl
mov
and
and
push
xor
mov
add
into
lret
inc
cltd
in
dec
xor
test
movsl
xchg
xchg
mov
lock
sub
adc
mov
das
sbb
jbe
push
sub
add
je
pushf
outsb
das
rorb
sbb
leave
out
cmc
or
insb
dec
mov
jnp
xchg
xchg
mov
addl
out
cli
aas
ja
jp
loop
mov
arpl
xchg
nop
scas
ljmp
fdivl
push
bound
mov
mov
sub
push
push
fwait
pop
sti
inc
sub
addr16
ljmp
add
mov
or
dec
lock
orl
les
loope
xchg
lret
pop
xchg
cmp
sub
or
mov
adc
push
jae
insl
adc
lahf
sbb
adc
xchg
inc
rcr
and
in
aas
nop
sub
enter
popa
movsb
loopne
xchg
pop
cmpsb
outsl
push
rclb
adc
movsl
adc
jno
data16
ffreep
call
or
mov
mov
jne
movsb
pop
int
cmp
lret
ds
inc
fpatan
adc
loope
lock
sub
inc
lods
and
pop
jnp
cmp
mov
fsubs
jge
enter
ror
cmp
not
and
loop
xor
sub
mov
cmpsb
push
jnp
mov
adc
xor
jmp
or
cmp
insl
pop
dec
test
add
pusha
pop
lods
sbb
aam
aas
out
and
cwtl
into
imul
lret
or
adc
test
sub
stos
cmc
sub
loop
sbb
cmc
popa
mov
les
sbb
cli
xor
sbb
pop
xor
lret
adc
mov
in
rcll
adc
cmp
mov
dec
jge
dec
js
sarl
add
gs
scas
test
mov
dec
in
jp
add
dec
pop
sub
stos
add
loopne
adc
je
dec
aad
mov
cmpsl
repz
mov
mov
orl
push
mov
and
lock
add
lods
in
fs
mov
xchg
adc
mov
scas
aas
mov
aam
xor
jmp
notb
adc
out
pop
pop
push
fnsave
cmpsl
aam
sbb
mov
daa
push
mov
pop
addr16
jle
lahf
scas
in
repnz
mov
imul
add
out
insl
mov
test
cmc
leave
jecxz
cmp
ret
push
cmp
jle
test
cltd
lcall
adc
testl
xor
mov
and
jmp
and
mov
fidivrl
imul
push
dec
imul
pop
jg
loope
add
xchg
idivl
push
test
insb
lahf
insb
dec
fmull
popf
lds
je
xchg
xchg
pop
add
mov
mov
or
mov
in
push
xchg
jmp
in
and
mov
stos
jge
aas
xchg
dec
lea
add
push
sbb
sarb
lret
movsb
push
or
xchg
dec
roll
inc
in
inc
xor
pop
cs
popa
mov
jmp
add
cltd
or
mov
decb
mov
mov
nop
or
nop
lds
jbe
loope
inc
inc
ljmp
pop
mov
shr
cld
push
xor
sub
and
xchg
push
lock
sub
into
sbb
lock
sub
pop
fwait
cmpb
mov
jp
notl
sti
call
cmp
fisttps
pop
dec
movsb
mov
inc
nop
mov
jns
push
xor
fsubs
test
xchg
scas
filds
jge
pop
int
cmp
call
push
out
es
bound
cmpsl
fldt
push
adc
fwait
mov
js
dec
popf
cltd
pop
shll
add
adc
sub
out
cld
roll
insl
mov
ja
and
clc
cmp
jbe
mov
xchg
mov
pop
stos
push
out
cld
clc
or
popf
out
shrl
and
imul
fisubs
stos
inc
add
sub
cmp
sahf
lds
test
add
sbb
sti
js
cmpsb
mov
mov
mov
outsl
jo
lret
mov
fcomps
sahf
cmp
dec
xor
mov
xor
mov
sahf
pushl
add
popa
or
adc
push
mov
int
out
leave
roll
xchg
sbb
jno
arpl
and
inc
test
xchg
fdivrp
mov
cmc
nop
loop
xchg
sub
sbb
mov
cmp
jle
or
sub
push
lret
and
mov
mov
dec
jmp
add
shll
scas
imul
fsubrl
add
imul
add
and
repz
cmp
sub
in
or
adc
into
in
or
fdivrl
xchg
clc
inc
sub
mov
les
insb
dec
mov
or
popa
add
testb
cmp
pop
jmp
sub
push
add
cmpsb
data16
xorl
push
aas
xor
xor
jae
dec
adc
test
cli
pop
mov
fnstenv
push
int3
jmp
aam
cmp
xor
jg
scas
jo
jno
add
sub
daa
outsb
loop
dec
jnp
dec
cmc
sub
out
pop
cmp
psllq
in
je
jne
or
stos
push
in
lock
inc
test
loope
imul
adc
or
jbe
and
jbe
mov
sahf
and
mov
mov
push
cmp
xchg
imulb
lods
jge
mov
negl
outsl
push
test
inc
imul
daa
cmp
je
push
dec
or
lods
inc
lret
jl
sub
xor
sbb
cmp
cmp
jp
jne
lods
out
cmp
pop
ret
mov
fcompl
cmp
cld
out
aad
xchg
mov
xor
pop
mulb
adc
cmp
std
mov
rorb
aam
lret
push
fidivs
int
ret
test
inc
cmpsb
movsl
ret
test
ja
test
push
aaa
popf
cmpsb
xor
aam
loop
clc
mov
xor
lret
and
sub
adc
xor
ficomps
cmp
pop
mov
pop
pop
bound
sti
or
leave
push
inc
outsb
frstor
adc
xor
mov
outsb
or
ret
jmp
das
lcall
and
cs
inc
mov
dec
push
sahf
sti
sub
mov
cmp
sub
mov
bound
dec
sbb
jg
vpsubd
dec
repnz
aad
cmpsb
mov
mov
lret
pop
xor
mov
sub
pop
inc
jmp
xor
loopne
enter
push
jmp
ret
adc
cmp
in
dec
stos
arpl
mov
inc
inc
insl
jg
mov
cmpb
push
inc
cli
and
call
out
cltd
test
sahf
insl
jl
stc
or
in
xor
cmpsl
stos
cmp
fwait
jle
jg
ljmp
and
mov
ficoml
call
mov
add
and
fcomip
jl
mov
mov
and
xor
dec
icebp
jg
lret
pop
aaa
adc
mov
leave
ljmp
das
and
pop
jb
clc
iret
push
xor
mov
fistps
test
add
add
insb
cmp
adc
pop
mov
out
lods
push
addl
pop
in
dec
test
lock
mov
and
add
sbb
loop
fildl
ffree
mov
fcmovnbe
inc
push
ja
push
gs
or
xchg
inc
in
test
popf
pop
lods
xchg
call
pop
jge
daa
fnsave
add
inc
stos
xor
outsb
pop
stc
fcomps
out
addr16
mov
aad
sub
in
push
mov
shlb
adc
cmp
pop
clc
pop
mov
clc
sbb
in
add
adc
inc
imul
sbb
pop
pop
lahf
xor
enter
pause
inc
lcall
sarl
les
pop
mov
pop
mov
xor
lock
das
testl
mov
push
xchg
je
or
cli
sahf
add
pop
add
push
in
sbb
and
adc
rcll
sahf
test
pusha
lds
or
add
xchg
out
mov
mov
fisttpll
adc
cltd
add
scas
cli
jae
xchg
sbb
cli
pusha
out
jge
push
stc
je
into
cmpsl
mov
cmp
dec
mov
push
mov
add
lock
addr16
or
adc
sub
lret
sub
sbb
insl
xor
outsb
add
out
pop
out
out
jne
inc
lods
imul
out
gs
and
aam
jbe
or
daa
mov
jecxz
xchg
das
mov
push
js
ret
inc
dec
sub
shll
stos
mov
adc
push
ffreep
lock
jg
adcb
or
xor
rclb
nop
fs
add
adc
clc
push
mov
stos
mov
testl
cmp
push
pop
xchg
or
popf
jnp
mov
fstp
pop
ds
shrl
xchg
rcr
icebp
push
ss
movsl
dec
cmp
jl
lcall
lock
ljmp
xchg
jns
in
das
xchg
and
lcall
jbe
andl
gs
lret
mov
nop
repnz
arpl
rcrl
movsl
pop
in
test
insl
cmp
lahf
gs
mov
push
rolb
fadds
jo
imul
shrb
dec
and
rorl
sub
jns
jnp
add
push
cmpsl
mov
push
dec
rorb
jmp
lahf
cmpsb
je
xor
cmpsb
dec
out
aad
jp
je
jo
bound
test
jbe
xchg
sub
cli
sub
repz
mov
and
cmpl
and
out
xchg
imul
mov
jg
pop
push
out
fs
sbb
inc
or
lock
test
aad
mov
loop
adc
shll
jo
test
dec
int3
cmpsl
pop
adc
or
push
mov
sti
sahf
lahf
dec
nop
rcll
push
into
adc
or
cs
cmp
aam
jo
mov
es
xlat
push
push
sbb
mov
adc
stc
and
xlat
jnp
stos
mov
cmp
out
int
mov
or
dec
rcll
dec
loopne
xchg
mov
cmp
ret
outsb
out
lcall
enter
dec
and
leave
sub
out
dec
imull
dec
inc
jnp
mov
sub
ljmp
ret
js
sahf
push
jb
mov
xchg
push
jmp
lock
dec
and
add
sbb
imul
jge
xor
stos
pop
push
stos
mov
jg
fisttps
gs
jge
es
int3
popa
fbld
test
mov
add
cmp
scas
sbb
inc
cmpb
cmpsb
jmp
es
adc
lds
jmp
outsb
mov
stos
add
add
adc
js
shlb
mov
aad
add
imul
add
jg
lret
fstpl
add
ja
and
loope
inc
hlt
cmp
ds
loopne
push
add
lret
out
pop
int3
rorb
push
jp
and
in
jne
jne
pop
int
mov
and
add
jns
pusha
shrb
cmp
pop
dec
adc
lcall
imul
fistpll
cmpsb
mov
das
jmp
mov
xchg
repnz
pop
xchg
cmp
inc
test
sbb
lods
jb
jg
pop
cmp
mov
sbbl
xchg
subb
adc
loope
push
mov
in
inc
stos
inc
sub
stos
aad
add
lds
xchg
cli
mov
add
pop
mov
mov
add
adc
dec
or
sbb
outsb
addr16
mov
and
shll
adc
sbb
push
mov
mov
imull
jnp
jg
pushf
jp
sub
in
add
in
rcrl
xor
dec
aam
shrl
mov
mov
sbb
es
aam
lds
test
out
or
out
cmp
enter
xchg
dec
push
outsl
pop
cltd
jecxz
jle
dec
cltd
pop
mov
stc
mov
sahf
inc
cs
shlb
pop
mov
xrelease
push
mov
mov
imulb
and
push
jbe
repnz
int
add
pop
xor
inc
das
fistpl
mov
icebp
lahf
int3
or
mov
cmp
mov
fwait
push
push
mov
jne
sub
mov
cli
xchg
shl
sbb
data16
sub
sub
int3
es
add
fdivp
xor
cmp
mov
jp
loop
add
movsb
sarl
mov
lahf
sbb
call
popa
sbb
mov
mov
and
dec
std
xor
int3
mov
add
or
inc
push
popa
scas
inc
jg
sub
mov
jae
stc
sti
pop
neg
pop
inc
lcall
outsb
add
mov
add
xchg
das
je
xor
pop
pusha
lret
sub
mov
inc
pop
sub
jnp
das
loope
dec
mov
mov
cs
dec
mov
xchg
out
sub
jno
int
sub
aaa
jl
mov
pop
add
xchg
xor
cwtl
hlt
and
ret
adcl
test
outsl
pcmpgtd
sub
mov
insb
test
or
jb
out
ja
mov
xchg
sti
fsubl
test
iret
adc
sub
outsl
mov
inc
pop
stos
mov
int3
jmp
pop
dec
mov
pusha
push
dec
out
fwait
push
data16
xchg
fisubs
pop
sarb
add
lea
pop
je
test
add
xor
xchg
or
push
xor
xor
and
jecxz
push
jle
fdivrs
mov
shrb
mov
cli
cld
mov
jecxz
pop
mov
add
push
aaa
inc
push
sbb
lds
pop
subb
test
fsubrs
and
mov
repz
adc
sbb
jge
les
iret
push
push
push
xchg
rcll
out
les
aaa
out
push
fisubl
or
shlb
int
test
push
sbbb
xchg
lret
andl
cmp
sarl
xor
into
push
push
push
aam
dec
nop
push
ds
pop
xchg
scas
sbb
leave
testb
loopne
sub
xchg
loope
add
xor
lds
add
in
cmp
mov
sbb
js
popf
lea
loopne
sbb
mov
inc
int
and
sub
mov
or
jb
xor
mov
cmpsl
sub
neg
xlat
lods
loopne
mov
push
arpl
dec
mov
or
fidivs
jnp
int
out
insb
jns
aaa
cmp
jbe
jnp
xchg
lret
jp
xor
xchg
jns
test
and
mov
xor
andb
cmp
cmp
xchg
push
xchg
pop
ljmp
xor
shlb
push
push
aam
movsl
fwait
inc
call
inc
xchg
dec
loope
lds
dec
adc
ja
pop
xor
aas
pop
arpl
sbb
call
clc
inc
pop
adc
inc
lahf
push
outsl
dec
push
jge,pt
jb
leave
mov
inc
pusha
and
mov
iret
cltd
pop
cmpsl
out
xchg
bound
xor
sbb
cmpl
add
aaa
jge
sub
and
mov
loop
aam
cmp
jg
mov
out
shlb
outsb
adc
pop
jno
dec
inc
adc
xchg
dec
inc
ljmp
addb
mov
sub
pop
pop
outsb
dec
int
xor
scas
int3
push
test
and
push
inc
lret
icebp
rorl
inc
cmpsb
mov
in
push
shr
jl
imull
in
fwait
test
test
adc
outsl
add
inc
sub
in
imul
dec
jno
pop
ss
pusha
cmp
cwtl
push
dec
cli
mov
in
mov
mov
pop
jg
mov
pop
mov
mov
xchg
inc
rcll
or
sbb
scas
pop
cmp
dec
sbb
mov
push
outsl
jnp
cmp
mov
jp
push
jb
scas
sub
push
imul
xor
mov
mov
mov
push
xchg
xor
and
inc
in
inc
pusha
push
jecxz
jecxz
fstps
dec
jns
and
jae
adc
add
cmp
aad
jmp
std
jbe
inc
mov
inc
sub
stos
fldt
repnz
idivl
mov
pop
xchg
popf
push
xor
xor
dec
call
jmp
push
ficoms
sbb
mov
mov
bound
dec
pop
pop
jns
push
sub
lcall
ljmp
jo
cmp
fwait
and
add
xchg
inc
test
lea
mov
es
push
in
into
daa
jno
cmp
pop
daa
mov
jns
xchg
lods
idiv
or
dec
cmpsb
jns
ret
jg
ret
cmp
sbb
popf
movsl
jp
inc
or
pop
sub
insb
lock
mov
out
jnp
ljmp
aaa
sbb
jo
xchg
outsl
jle
addl
mov
daa
sahf
add
repnz
into
imull
movsl
adc
inc
mov
add
add
xor
nop
mov
cltd
push
xor
adc
out
sbb
test
bound
dec
xor
pop
cmpb
cmpsl
in
lcall
rorl
movsl
mov
cltd
xchg
xchg
pop
aad
lahf
push
arpl
sub
push
addr16
jns
pop
sar
shl
xchg
xchg
cmp
push
fldcw
lds
test
enter
lahf
rcrl
lods
push
mov
push
dec
or
mov
lock
pop
and
rolb
cmp
flds
push
out
cmp
notl
push
arpl
in
sbb
subl
inc
pop
lahf
mov
mov
fs
out
mov
imul
cmp
enter
fcmovb
add
push
fimuls
xchg
jmp
insl
pop
gs
sbb
mov
mov
jge
or
orl
mov
insl
sub
and
mov
fstps
mov
pusha
push
inc
into
jmp
add
pop
lahf
shlb
imulb
out
fisttpl
insl
pop
jmp
add
stc
push
out
rolb
fmul
rcrb
cmp
mov
mov
jb
mov
mov
pop
mov
xlat
ret
cmp
cmpsl
clc
or
add
inc
int3
pop
push
enter
add
scas
sub
mov
dec
test
dec
adc
pop
stos
fwait
or
mov
and
push
insl
cmc
pushf
lret
aam
into
out
inc
sub
cwtl
mov
stos
aad
jno
mov
inc
fsubrs
push
insb
add
pop
mov
scas
pop
out
ficoml
dec
jno
cmp
push
popa
pop
jns
or
flds
gs
stos
pop
ljmp
inc
lea
push
pop
jmp
dec
inc
adc
stos
fbstp
outsl
mov
add
xchg
and
loopne
and
xor
xor
push
cmc
int
mov
lea
sub
mov
ljmp
outsb
cs
aam
mov
add
xor
jmp
fisubs
je
imul
test
add
push
push
mov
push
int3
adc
int
orl
jae
aaa
xchg
mov
mov
mov
xchg
inc
mov
rolb
clc
mov
jae
call
shr
js
or
test
icebp
lahf
fldl
out
mov
imul
aad
jns
lds
stc
into
push
mov
xor
xchg
xor
push
sbb
fsubrp
rcrl
andb
jno
mov
sbb
movsb
dec
int
xlat
pop
and
fld
jb
cmp
mov
rcrl
xor
test
xor
and
test
stc
xor
xor
push
mov
rclb
imul
mov
sub
pop
pop
cmp
inc
ret
inc
test
sub
lea
sub
inc
dec
sbb
inc
ret
mov
xchg
int
repnz
mov
rolb
test
stc
rolb
jo
adc
cmp
sarb
mov
push
ror
imul
mov
push
cmc
aad
fldt
ljmp
sbb
pop
fiaddl
adcb
out
int
and
push
cmpb
cld
cld
inc
stos
das
aam
sub
sub
sbb
into
out
sbb
or
jae
test
xchg
xchg
fiaddl
xchg
fists
sbb
cmp
decb
push
and
cltd
dec
mov
cmp
mov
aam
test
xchg
cmc
les
sbb
inc
or
mov
adcb
fsubrl
push
ds
fsubr
cld
lock
out
in
dec
mov
leave
mov
inc
jno
mov
xor
mov
lods
test
loopne
mov
mov
lea
sub
lcall
fildl
xchg
stos
pop
test
sub
testb
ret
pop
mov
loope
push
inc
mov
pop
and
repz
fdivs
sahf
inc
xchg
call
scas
sub
xchg
pop
aaa
xor
mov
rcll
movsl
sub
sub
aaa
cmp
cltd
cs
jecxz
mov
xor
mov
adc
inc
xor
pop
in
inc
aaa
shrl
mov
lret
repnz
xchg
add
ja
inc
sti
out
or
js
ljmp
cmp
out
addl
dec
test
lods
clc
sar
rcll
shll
mov
push
imul
dec
aam
popa
xchg
data16
fistl
sti
mov
pop
xor
add
fdivr
neg
int
repz
jnp
pusha
push
cmp
stc
pushf
sbb
jae
jmp
inc
jno
xlat
add
lock
inc
pop
push
test
testl
inc
push
inc
xchg
adc
mov
popa
loop
mov
loopne
in
data16
xor
notb
cmp
mov
add
cmp
pop
ds
pop
pop
inc
sbb
pop
fcmovnb
dec
lret
sub
dec
xlat
dec
or
pop
andl
sti
mov
stc
and
xchg
pop
cmpsl
add
sahf
xorb
iret
add
test
mov
out
movsl
std
xlat
ljmp
push
cltd
ja
pop
aaa
xor
dec
xchg
addr16
pop
xlat
adc
push
into
sub
stos
bound
dec
or
mov
ficomps
loop
add
adc
xor
dec
and
enter
imul
xchg
inc
sub
icebp
xchg
jp
outsl
cmc
sub
pop
repz
ljmp
addl
mov
inc
outsb
lahf
ja
xor
lret
int
cmp
jge
ds
mov
popf
cmpsb
movsb
dec
pop
push
ret
std
jmp
sbb
lcall
xchg
mov
and
jo
ficomps
int3
in
mov
pop
mov
cmp
cmc
pause
xorl
bound
xor
pop
mul
dec
dec
xchg
test
mov
pop
xchg
and
mov
ret
cmc
add
fstl
ret
sbb
push
add
pop
push
shll
dec
rcrb
sahf
in
mov
iret
mov
adc
push
in
repnz
out
fdivs
shlb
cmp
out
or
call
and
subl
ljmp
sub
stos
mov
xchg
push
jbe
clc
insb
adc
les
pop
insl
add
pop
je
shlb
pop
fistpll
stos
xchg
add
imul
add
cmp
ret
out
sbb
fidivl
stos
pop
xor
mov
mov
js
inc
push
jae
push
mov
jne
adc
subb
jno
pop
and
xchg
xor
lea
sub
lods
addl
adc
sub
pop
aaa
fs
push
lds
outsl
sub
movsl
sub
lret
jbe
pop
fistpll
dec
pushl
mov
pop
push
sbb
dec
xor
or
jb
ficomps
fbld
xor
pop
dec
add
outsl
nop
push
arpl
jl
push
in
and
inc
jb
lea
adc
insl
call
push
xchg
imul
std
aas
xor
adc
ret
push
xchg
imul
pop
mov
mov
addr16
jb
inc
push
movsl
sub
test
sar
push
jb
dec
cmp
out
mov
mov
inc
xlat
pop
fstl
jp
inc
sbb
and
out
and
cld
mov
xor
in
jg
sbb
pop
loop
push
or
pop
rolb
add
adc
push
sbb
outsl
mov
inc
fcoms
out
inc
pushf
inc
mov
pushf
and
imul
sti
push
andl
shrl
repnz
push
nop
mov
adc
jnp
sub
movswl
pop
stos
mov
pop
pop
push
jbe
lret
adc
pop
push
icebp
inc
xor
divb
hlt
xlat
dec
in
popf
cmp
inc
hlt
test
inc
inc
mov
pop
or
dec
xchg
fstpt
adc
scas
cmp
xor
xor
enter
mov
wbinvd
lock
in
push
jg
xor
stc
shll
in
test
sub
insb
push
pop
xchg
rorb
push
aaa
into
loop
daa
aaa
fmuls
sti
icebp
mov
jle
rolb
loope
fistpll
insl
xchg
dec
or
cmp
in
or
pop
mov
mov
pop
xchg
jne
mov
js
incl
notb
lret
out
and
xchg
rolb
inc
add
xchg
lock
mov
test
out
push
cli
in
inc
notl
inc
add
lods
push
mov
pushf
fwait
sar
mov
or
add
subl
fisttpll
jp
hlt
leave
pop
mov
jle
or
inc
mov
incb
stc
or
inc
jg
mov
push
inc
xor
adc
and
xor
mov
sbb
sarb
stos
out
add
out
pop
fdivs
pop
rclb
iret
jp
aam
dec
mov
xchg
insl
xorl
js
pop
mov
outsb
dec
out
xchg
fiaddl
loope
in
inc
rcll
xor
push
pop
mov
push
cmp
cli
fstl
out
pop
mov
hlt
mov
jbe
push
hlt
lods
mov
push
out
mov
xor
int3
jnp
fldl
ljmp
push
cmp
or
movsl
dec
pop
stos
test
jnp
ret
in
aas
in
and
cmpsl
cmpl
dec
xchg
lcall
jecxz
enter
std
inc
popa
mov
lds
lcall
lahf
es
je
mov
sbb
popl
js
mov
mov
inc
pop
push
popf
pop
add
aaa
xor
call
fimuls
lods
icebp
add
cmp
dec
mov
std
cmp
mov
mov
imul
adc
jbe
shll
scas
jle
fistps
movsb
push
pop
xchg
pop
dec
imul
fwait
or
fdivs
call
pushf
inc
push
mov
js
psubsw
aaa
les
enter
ljmp
push
lahf
xchg
or
ds
push
push
sbb
imull
sbb
rclb
jns
lods
mov
test
add
fstpt
pop
rcr
mov
out
add
fistpll
scas
in
sub
cli
mov
xor
or
out
repnz
out
out
ja
pushf
jae
jns
lahf
xchg
leave
jb
sub
xchg
dec
mov
test
rclb
jg
not
test
lret
push
jl
jbe
cmp
sahf
aas
inc
pop
mov
sbb
push
fstps
in
sbb
xchg
fs
lcall
cmpsl
sub
call
in
inc
stos
rcrl
lock
dec
add
leave
push
cmp
push
dec
shlb
rol
pop
imul
lea
mov
and
mov
imul
shll
lock
xor
xlat
and
pop
iret
cs
dec
js
je
pop
fldl
mov
mov
or
adc
js
cwtl
andb
popa
or
dec
push
mov
dec
ljmp
and
in
pop
mov
scas
dec
out
stos
mov
mov
ret
mov
fmuls
lock
stc
push
sbb
push
pop
jns
aam
mov
or
mov
sub
test
cmpsb
aad
mov
aaa
jle
xor
xchg
out
fxch
push
shrb
lea
outsb
sub
push
jno
ret
mov
aaa
add
lcall
push
dec
loope
jg
xchg
jb
push
int3
lods
jne
in
pop
and
in
ja
adc
xchg
imul
push
lods
push
push
sti
cli
sub
sarb
adc
rcll
jl
mov
or
push
inc
mov
or
push
mov
mov
mov
pop
scas
mov
adc
andb
insl
and
inc
mov
jne
mov
leave
mov
lds
sbb
jp
into
mov
xor
in
test
sbb
fldl
and
pop
dec
cmp
push
lcall
push
lahf
std
or
fidivrs
mov
loope
enter
mov
cmpsb
ret
insb
insl
push
imul
bound
mov
lahf
stc
scas
sub
test
mov
pop
cmc
sub
rcll
mov
ret
stos
mov
gs
xchg
or
inc
js
lock
test
lret
mov
insl
xorb
imul
dec
stos
std
rcll
fwait
int
and
roll
pop
int
add
divl
outsb
jmp
popa
jle
inc
push
or
mov
push
sub
jmp
xchg
pop
cmc
aaa
ret
ds
dec
pop
push
pop
adc
dec
push
sub
mov
add
mov
mulb
das
outsb
and
add
jmp
jne
pop
ljmp
lcall
lea
inc
cmpsb
lock
cmp
rep
stc
test
divb
cmp
push
and
sub
test
cmp
jle
je
or
inc
in
jle
in
pusha
cmpsl
dec
test
dec
and
sub
cld
aaa
fwait
pusha
xor
mov
jge
jbe
lahf
mov
es
stc
xchg
clc
cmp
push
push
mov
xor
cltd
pop
sub
mov
cwtl
or
sub
ret
mov
rcll
aaa
cmpsb
sbb
leave
xchg
pop
jle
pop
mov
fcoml
imull
ficompl
dec
stos
gs
pop
jnp
mov
jbe
divl
push
icebp
shrb
jb
sub
sub
mov
movsl
aaa
jb
cltd
sti
inc
sete
jp
daa
pop
sbb
mov
ljmp
inc
gs
std
sub
mov
inc
or
nop
mov
js
fwait
inc
jns
lods
pop
add
das
pop
aaa
dec
jb
sbb
cli
ret
mov
lret
xchg
stc
aas
mov
pop
pop
jae
push
add
dec
add
dec
pop
fisttpl
lahf
es
inc
jne
loope
dec
fwait
push
add
push
in
dec
mov
int3
adc
enter
adc
sbb
pop
jnp
cmp
and
cwtl
std
clc
gs
dec
add
xor
mov
movsb
xchg
lods
xchg
push
mov
test
dec
mov
test
fdivs
sbb
les
insb
adc
aaa
pop
adc
mov
fwait
jbe
scas
mov
mov
add
sbbl
mov
bound
lock
xor
pop
aas
orb
pop
jbe
out
test
scas
gs
or
jnp
jae
mov
push
sti
xlat
push
pop
sbb
lods
xchg
inc
mov
mov
pushf
mov
or
push
mov
mov
push
sub
pop
cmp
lahf
xchg
lret
cltd
test
xor
jmp
dec
es
mov
jg
inc
je
jle
push
pop
fsubrs
inc
into
les
fsubr
pop
mov
aad
mov
jle
movsb
fs
imul
test
stos
or
xor
push
scas
sbb
push
in
sub
cmpsb
mov
sub
icebp
or
pop
cmpsb
dec
push
js
adc
cmp
mov
cmp
push
cmc
adc
pop
xchg
aad
shrl
repnz
dec
pop
mov
pop
dec
adc
loopne
shlb
xor
cltd
pop
mov
or
inc
dec
push
add
pop
or
pushf
aaa
cmp
cmp
mov
repnz
inc
xchg
addr16
and
jae
jbe
dec
orb
das
insl
in
xchg
imul
icebp
cli
mov
mov
imul
push
pop
mov
jno
xchg
out
xor
sbb
xlat
lods
movq
cmp
ret
push
push
insl
orl
imul
jp
std
inc
icebp
sti
xor
or
fcomps
orb
popa
adc
call
in
out
ljmp
adcl
and
call
repz
push
mov
lea
jo
and
sbb
xor
repz
repnz
popf
aaa
fld
cmpsb
lock
stc
scas
add
aad
dec
lods
pusha
push
ja
fwait
jae
xlat
cmp
insl
pop
push
imul
add
daa
ror
out
sbb
sbb
cltd
pop
leave
mov
ficompl
lret
in
nop
cmpsl
shl
add
jns
dec
sbb
dec
mov
imul
lods
sub
jns
pop
or
mov
jge
mov
and
dec
push
push
mov
sahf
cmp
fldl
addr16
and
enter
outsl
loopne
enter
ljmp
dec
ljmp
sahf
adc
clc
loope
scas
adc
mov
scas
cltd
ret
cmp
add
fnstcw
scas
dec
dec
dec
mov
mov
pop
stc
in
sarl
test
scas
mov
dec
scas
in
aas
repnz
dec
les
mov
loopne
jmp
dec
faddl
stc
inc
aas
push
pop
mov
mov
rcll
xchg
in
mov
into
stc
les
adc
cmpsl
dec
jl
ljmp
daa
sbbb
fwait
xchg
dec
mov
add
jns
dec
mov
mov
aas
ja
addl
fsubs
leave
mov
push
xlat
imul
mov
stos
sti
add
push
out
aam
xchg
add
test
mov
sub
cltd
or
iret
or
jl
lods
shll
mov
add
aaa
mov
out
jmp
mov
add
sub
or
xchg
xor
pop
mov
arpl
adc
dec
fbstp
sub
ret
lock
repz
les
and
fdivl
push
lret
inc
mov
and
aas
lcall
sbb
int
loopne
jb
je
xchg
sbb
jmp
les
ss
jg
and
xor
xchg
fcmovu
decl
rcll
xor
ret
in
gs
jge
pop
sbb
orl
push
or
jno
ss
and
mov
fstp
mov
xchg
leave
cld
loop
daa
sub
cld
xor
loopne
out
mov
cmp
shlb
jns
adc
in
pop
pop
adc
mov
bound
adc
dec
xlat
jae
push
or
imul
jb
jp
popf
push
and
sub
negl
es
repz
add
popf
test
mov
cmp
jns
mov
outsb
cmp
das
xor
sbb
dec
aad
xchg
add
sarl
dec
popa
loopne
xor
scas
clc
mov
scas
jae
fcoms
jns
test
and
push
push
jmp
cmp
adcb
lcall
shll
sub
enter
push
xorl
or
adc
push
sarb
fwait
and
stos
gs
sub
in
icebp
movsb
xchg
dec
into
mov
sub
inc
jle
repnz
in
add
sti
adc
aas
pop
dec
jns
pop
push
test
and
dec
xor
push
in
cmp
fiaddl
enter
lcall
mov
xchg
xlat
insl
arpl
stc
out
bound
mov
hlt
mov
dec
enter
xor
ljmp
or
add
test
js
std
in
mov
ds
xchg
faddl
pop
add
sarb
sbb
dec
popa
adc
aam
les
rclb
les
inc
loopne
aam
pushf
mov
or
pop
pusha
rorl
xchg
mov
dec
push
ljmp
jno
hlt
les
jg
or
push
xor
inc
sub
pop
inc
test
std
or
mov
stc
sahf
sub
mov
cmp
xchg
idiv
test
int3
mov
mov
mov
jno
fistpll
mov
inc
enter
pop
hlt
push
int
lcall
neg
stc
test
mov
add
cmp
mov
int3
out
iret
mov
and
loope
in
lar
xor
aas
add
mov
cld
popa
pop
mov
out
mov
leave
mov
xchg
and
jle
outsl
fisttpl
and
mov
sub
pop
loopne
fistl
shr
sbb
mov
addr16
dec
sbb
mov
scas
inc
out
sub
add
test
push
xor
push
arpl
inc
xchg
sbb
int
adc
aas
and
or
pop
leave
xchg
arpl
or
das
aam
lea
fmul
das
adc
mov
push
das
in
adc
test
xor
mov
and
or
push
ljmp
push
fs
cmc
pusha
in
jecxz
lret
push
push
xchg
mov
push
les
aad
negl
scas
xlat
popl
jge
in
mov
cmp
xor
ja
or
repz
lcall
fcoml
push
orb
and
imul
js
dec
sub
adc
sahf
or
cmc
sbb
jae
out
lret
jl
lret
cmpb
inc
pop
xchg
rcrl
add
mov
add
bound
ss
or
or
inc
cwtl
in
cmp
cmpb
adc
lea
data16
outsb
jg
mov
daa
out
mov
and
push
add
jecxz
fcmovne
roll
mov
cltd
sbbl
mov
sbb
hlt
xor
pop
xor
arpl
cmc
je
mov
push
cmpsb
iret
inc
movb
fnsave
fs
cmp
pop
pushf
push
loop
mov
cmp
adc
jle
std
loopne
ficompl
daa
cmc
out
cmp
test
adc
pop
packsswb
clc
arpl
int
xlat
ret
mov
stc
mov
stc
jl
loopne
jp
xchg
cld
idivl
xchg
pushf
sti
icebp
mov
clc
repz
jne
aam
fs
rorl
jmp
mov
aad
mov
ljmp
addl
xchg
mov
lret
push
fildll
and
add
stc
cmpsb
subl
divl
jmp
jl
neg
sub
sub
pop
sub
pop
and
int3
dec
jns
sarl
jmp
mov
xchg
or
fistl
xchg
adc
jp
mov
mov
mov
sahf
out
add
xchg
out
das
fiadds
push
call
mov
stc
mov
ljmp
fstl
xchg
into
xor
js
leave
fidivrs
jg
mov
daa
int
jmp
mov
and
mov
push
lea
test
sbb
xchg
sbb
scas
outsb
jbe
les
shlb
cmpsl
add
out
adc
jbe
pop
mov
or
sbb
and
in
adc
test
into
and
xor
imul
incl
inc
xchg
setge
pop
or
pushf
fadds
sbb
fdivr
dec
cmc
insl
xchg
rclb
or
jecxz
dec
dec
daa
mov
imul
xor
mov
lds
scas
or
divl
int3
pop
fsubrs
lahf
inc
xor
out
shll
stos
adc
or
cmp
jmp
rorl
sahf
fcoms
lods
outsb
pop
xchg
icebp
push
in
inc
push
hlt
dec
sbb
push
ret
mov
rcr
lods
out
mov
cmc
adc
mov
rorb
aas
jne
aad
xchg
lahf
ret
sub
arpl
cmp
ret
mov
insb
adc
pop
lock
bound
outsb
leave
daa
and
mov
rol
out
mov
lods
inc
inc
jno
push
dec
gs
lods
inc
out
cli
pop
push
pop
pop
popf
pop
inc
push
pop
bound
in
mov
push
push
add
lret
cs
roll
cmp
inc
jnp
jnp
adc
popa
mov
sub
rcrl
inc
test
aad
and
mov
fdivr
cmp
xchg
xor
shll
outsb
popa
mov
out
xchg
fsub
lods
daa
mov
repz
repnz
mov
cmpsl
mov
sub
inc
popf
int
xchg
push
mov
imul
adc
repnz
mov
adc
adc
mov
push
mov
mov
sbb
cmp
hlt
xchg
mov
pop
inc
xchg
shlb
es
outsb
test
aam
mov
addr16
xchg
push
cmp
mov
push
loopne
mov
adc
adc
inc
pop
imul
lods
dec
xor
aad
mov
pusha
movsb
inc
rep
ds
es
aad
mov
sub
faddl
fwait
add
lea
adc
in
ja
xchg
xchg
xor
mov
dec
mov
cmp
and
xlat
lock
test
lret
xchg
leave
lahf
sbb
das
jg
and
cltd
shlb
xor
dec
sarl
je
cmp
ret
adc
aaa
lahf
inc
dec
rclb
pop
int
stos
sub
cli
je
outsl
int3
pop
jns
loop
or
imul
fisubrs
cltd
push
les
xor
or
das
push
dec
ss
pushf
fnstenv
aam
test
sub
or
rcrb
jge
push
sarb
mov
loope
pop
pop
call
out
jb
add
dec
jge
fs
mov
call
mov
lret
inc
test
repz
mov
lock
lods
mov
shlb
push
or
out
rolb
nop
dec
in
jo
or
jmp
sbb
push
icebp
cmc
hlt
push
xor
mov
out
dec
pop
pop
out
and
sti
test
sub
mov
fdivl
mov
mov
xchg
iret
mov
in
test
add
add
mov
andl
std
pop
xchg
ds
jmp
fwait
cmp
pop
sti
push
xor
test
ss
rcr
push
ja
roll
mov
loopne
add
lods
aas
or
adc
sbb
mov
and
pop
callw
xchg
lock
movsb
cmp
outsl
push
loope
daa
imul
ljmp
xlat
xor
mov
mov
jecxz
cmp
or
dec
hlt
popa
jne
or
rcrl
movsb
les
int3
and
jle
in
mov
mov
aaa
xorb
ret
sbb
test
call
push
jne
out
inc
add
ret
test
jl
loopne
xchg
cmp
and
fisubs
imul
cmp
mov
mov
mov
pop
push
rorb
dec
push
dec
mov
out
sbb
inc
arpl
cltd
dec
jbe
xchg
or
negb
flds
out
mov
in
out
aaa
roll
adc
popa
test
nop
push
cs
jecxz
insb
and
mov
jmp
shrb
mov
mov
push
fsubs
icebp
aas
mov
out
or
out
mov
sub
push
ja
mov
add
pop
frstor
ljmp
push
fiaddl
push
and
pop
into
rorb
push
ret
movsl
in
or
jmp
jmp
fisubrs
bound
iret
in
gs
stos
leave
sarb
mov
adc
dec
repz
and
jb
push
mov
pop
les
data16
sub
inc
stos
pop
inc
ret
fld
push
mov
cmp
mov
in
jno
ljmp
mov
daa
xlat
rorl
push
leave
fstps
lahf
enter
idivb
dec
scas
sahf
mov
mov
inc
push
in
jmp
cmp
mov
adc
xchg
or
xor
orb
aaa
bound
das
push
loope
int
mov
cwtl
nop
out
test
push
jle
jbe
mov
cmp
aad
int
lret
sbb
jecxz
or
xchg
sub
mov
xchg
rcll
dec
push
add
fdivs
mov
mov
inc
mov
xorb
outsb
sbb
adc
push
stos
imul
sbb
lahf
sub
sub
lods
roll
not
xor
jp
push
inc
add
std
cmc
push
jno
xchg
xor
pop
dec
mov
mov
or
fisttpll
lods
cwtl
ja
mov
shlb
mov
push
dec
pop
fnstenv
pop
fwait
aaa
jecxz
pop
scas
pop
dec
sub
and
jmp
iret
vpackssdw
push
orl
out
mov
cmpsl
sahf
adc
addb
mov
faddl
aas
int3
lods
mov
pusha
stos
aas
xchg
ja
inc
js
aad
repz
imul
pop
lcall
and
in
and
lcall
rol
xchg
add
arpl
jns
aaa
in
pop
xchg
test
imul
mov
in
jge
out
movl
cmovbe
xchg
repz
dec
jns
dec
xchg
lret
cwtl
adc
aas
out
add
xchg
adc
adc
repnz
dec
fcompl
inc
repnz
pusha
jo
cmp
xchg
jmp
and
xchg
lcall
push
out
mov
std
negl
add
dec
inc
enter
fimull
loop
mov
push
sahf
pop
shlb
repz
lods
add
mov
cmc
dec
sub
dec
cmp
icebp
test
aaa
std
movsl
popf
mov
in
inc
decl
cmp
imul
jne
call
xchg
lock
pop
mov
icebp
pop
mov
xchg
movsb
repnz
repz
dec
stos
sub
outsl
jno
subl
and
mov
xchg
or
mov
sbb
outsb
in
shlb
xchg
xchg
mov
sbb
in
sub
xorb
jne
lock
push
add
rcrl
lret
xchg
sbb
push
adc
fcoms
inc
add
cmc
mov
rcrb
dec
push
rcrl
dec
jns
mov
out
mov
lahf
outsl
fisubrl
popa
jb
cmp
push
push
sub
mov
les
mov
cmp
ss
sti
mov
adcb
ds
sbb
sbb
cmpb
sub
fmull
inc
dec
jne
xchg
inc
cmp
fisttpl
test
mov
call
xchg
jnp
pop
test
sarb
notl
arpl
mov
mov
rclb
add
dec
pop
xor
add
data16
cmp
insb
mov
inc
testl
int3
ds
pop
fwait
sbb
dec
cmp
mov
je
out
dec
daa
xchg
xor
fcomps
push
adc
test
jnp
aas
shrl
popf
or
js
into
cmp
test
sbb
pop
push
jmp
psrld
loopne
xchg
lods
adc
fs
jbe
rcrb
add
aam
xchg
outsb
rcr
xchg
mov
pop
out
mov
cmp
out
xor
pop
inc
push
push
in
mov
fisubrl
push
mov
and
test
cmp
shll
and
sbb
lret
xchg
mov
sub
subl
jbe
lcall
arpl
push
inc
jb
test
lcall
jle
push
sbb
mov
lock
ljmp
mov
sahf
adc
outsb
adc
icebp
gs
insl
mov
mov
xchg
iret
mov
shll
adc
adc
clc
mov
fcomps
mov
in
xchg
pop
dec
dec
loopne
daa
stos
xchg
lret
jle
adcl
popf
std
xor
pop
sti
jns
or
cli
jno
inc
add
pop
fsubrl
leave
sbb
adc
idivl
sub
ljmp
jae
mov
or
lods
dec
sbb
dec
mov
push
mov
outsb
je
xlat
cmp
mov
jp
cwtl
inc
push
dec
jge
pop
stos
das
xlat
fsincos
test
fnstcw
and
pushf
xlat
pop
in
testb
in
xor
imul
sub
sbb
mov
pusha
mov
lret
inc
pushf
ljmp
je
cmp
jo
nop
pop
pop
arpl
sub
paddd
out
mov
or
add
add
sub
out
insl
jmp
sar
sbb
sub
pop
add
or
loop
test
fs
je
sbb
int
xchg
mov
lcall
add
push
xor
jo
stos
je
int
jo
add
sbb
lea
cmp
repnz
stc
dec
les
jbe
push
in
movsl
popf
mov
stos
sti
xlat
mov
in
psrad
xor
mov
ficomps
repz
mov
stos
sbb
enter
cwtl
sub
popa
lahf
pop
fidivl
mov
mov
fisttpll
fcoms
mov
fwait
xchg
pop
or
adc
mov
jne
les
fsubrl
movsl
and
mov
push
sub
fwait
ret
add
ret
jp
xchg
xor
dec
in
stos
scas
inc
sub
dec
arpl
sti
push
adc
test
in
pusha
pop
shlb
sbb
push
inc
mov
and
push
mov
add
cwtl
cmp
in
pushf
inc
push
outsl
add
aad
cld
ljmp
int
es
or
adc
int3
push
cwtl
out
and
push
lods
add
push
and
hlt
cwtl
dec
xchg
and
pop
in
push
pop
movb
scas
stos
xor
mov
inc
pop
stos
lahf
rcrl
inc
lock
sub
scas
push
stc
jmp
ljmp
mov
push
and
adc
cmpsb
xor
sub
test
call
jge
pushf
out
out
testl
push
hlt
inc
jns
inc
movsb
fs
fadds
and
enter
int
pop
aam
aas
daa
lods
sahf
sbb
add
cmp
push
nop
inc
jge
loop
rcll
out
push
mov
sub
les
jl
lahf
mov
push
fldl
fwait
repz
test
jo
movsl
out
daa
sarb
popa
sbb
decl
sbb
dec
jo
cli
dec
or
and
jecxz
das
or
cmp
push
jns
test
outsl
cmpsb
mov
addr16
mov
loopne
mov
shrl
lret
in
ret
xchg
jnp
jle
xchg
js
or
test
jmp
mov
sahf
leave
stc
and
push
and
movsb
daa
pop
daa
and
ja
sbb
mov
imul
and
rcll
mov
or
jo
pop
lret
scas
dec
into
mov
enter
fcompl
inc
inc
mov
and
xor
stc
add
mov
sub
pop
cwtl
sbb
in
dec
imul
xlat
int
or
sbb
ffreep
int3
dec
shrl
mov
ret
lahf
cmpsl
lea
push
inc
jns
sarb
push
cmp
test
lcall
popf
jno
js
lds
sub
cmc
xchg
or
mov
out
pop
adc
cmp
push
in
push
cmp
inc
push
sub
pusha
xchg
pushf
add
xchg
sub
pop
ficompl
ja
xchg
sub
xor
das
pop
cmp
je
fcmove
adc
ret
repnz
testb
nop
add
test
lods
mov
lret
iret
mov
and
pop
and
xor
add
sub
push
mov
call
push
cmpb
jle
push
loopne
jb
sub
or
or
lock
out
pop
push
lret
out
enter
add
imul
mov
pop
test
fnstenv
decl
xchg
xlat
addr16
clc
loopnew
mov
mov
sub
in
rorb
add
and
lods
out
jno
sub
sub
mov
aaa
clc
mov
divl
test
sbb
pop
stos
mov
xchg
imul
sbb
in
loope
xor
cltd
sub
arpl
cmp
into
lock
adc
fs
pop
out
cmp
out
pop
insl
mov
lods
nop
xor
pushf
add
sub
outsl
cvtdq2ps
add
lods
fisubrs
dec
and
outsl
scas
mov
divb
icebp
cmp
push
int3
lea
or
sbb
inc
mov
imul
add
test
xchg
or
cld
sahf
jbe
mov
repz
lret
movsb
stos
fcmovnbe
fisubs
pop
imul
xchg
and
xchg
fs
in
nop
push
mov
cld
stos
xorl
push
sub
dec
les
test
repz
int
or
dec
push
iret
dec
adc
fidivl
sbb
icebp
xchg
mov
jae
out
ret
icebp
adc
sbb
adc
icebp
in
pop
cmp
jo
cmpsb
insl
sbb
and
dec
mov
ja
fildl
pop
xchg
sub
rorl
pop
xchg
xchg
push
stc
jae
push
push
add
je
loope
js
cmpsl
sti
lret
mov
daa
xchg
movsl
xor
mov
mov
cs
shlb
shl
mov
in
xchg
int3
cld
pop
rolb
mov
aam
sti
jbe
dec
push
repz
repnz
mov
jge
mov
xchg
mov
mov
push
adc
es
popa
mov
lcall
mov
mov
popa
or
sbb
fwait
or
cmpsb
arpl
xlat
imul
sub
mov
mov
mov
mov
aas
adc
cld
mov
popa
cld
aaa
cld
in
xchg
xor
cltd
inc
sbb
mov
cmp
cwtl
or
stos
stc
mov
sbb
add
sub
fs
or
clc
int3
popf
inc
xor
stos
scas
fldln2
mov
inc
xor
in
and
sub
mov
ja
and
negl
xchg
punpckhbw
add
cmp
gs
push
in
in
jmp
xor
aaa
sub
inc
add
jno
or
jae
mov
aaa
pop
jmp
sub
dec
pcmpgtd
repz
arpl
xchg
push
cwtl
in
or
rorl
adc
push
out
cld
push
xchg
lods
dec
js
out
in
push
insb
sbb
and
gs
mov
push
cmpl
pop
jmp
mov
adc
or
ret
ret
and
dec
add
push
lret
pusha
cwtl
fdivr
rol
and
bound
addr16
andl
mov
jle
adc
out
loopne
or
pop
push
mov
pop
dec
pop
and
xchg
cmpsb
and
mov
xlat
mov
jb
mov
leave
jmp
xlat
inc
and
adc
inc
ljmp
ds
inc
xor
lods
jle
cmp
leave
rorl
mov
pop
jle
mov
jne
add
mov
mov
jb
mov
imul
add
xor
xlat
sbb
pop
sahf
lods
mov
mov
sbb
pop
sbb
clc
mov
mov
cmp
or
dec
movsl
inc
daa
adc
add
scas
add
enter
dec
xor
or
sbb
mov
imul
xchg
cmc
mov
ds
movsl
imul
test
nop
ds
adc
loopne
lods
lds
jp
pop
stos
cwtl
mov
shrl
cmp
cld
or
mov
push
push
sub
add
mov
mov
sub
mov
lds
add
sbb
aas
dec
roll
aam
add
cltd
cmp
add
mov
adc
jb
push
addr16
and
sti
cs
dec
call
out
mov
adcl
fldenv
lds
adc
aas
inc
ljmp
lods
sahf
jb
stos
pop
ret
jnp
rol
mov
xchg
cmp
add
push
xchg
mov
addb
add
fldln2
sbb
pop
mov
mov
addr16
fwait
rcrb
sub
mov
inc
sbb
jecxz
sub
js
sahf
push
jnp
lods
xchg
jecxz
jle
loope
outsb
jecxz
push
mov
adcb
pop
jp
jmp
fadd
xor
icebp
stos
movsl
out
jmp
insb
in
push
jb
fs
adcb
movsb
stos
lret
sub
insl
loopne
and
mov
fiadds
rcrb
jle
and
push
pop
adc
nop
scas
dec
dec
rorl
sbb
je
andnps
or
test
lret
cmp
sub
mov
cmpl
adc
scas
aad
int3
lods
aam
stos
cmp
mov
xor
cmpsb
bound
add
fidivrl
subb
daa
jo
sub
or
gs
push
sub
cmp
cmpsl
outsb
sbb
xor
dec
movsl
test
mov
adc
scas
jg
fisubrs
xor
arpl
and
mov
in
rorb
aaa
imul
mov
outsb
cmp
dec
fs
loopne
ret
pusha
mov
xchg
lods
shll
mov
imul
lods
adc
mov
imul
sub
xor
lret
mov
popf
movsb
sbb
andl
jmp
pop
repz
ss
scas
push
cli
adc
int3
call
pop
adc
faddl
arpl
lock
mov
adc
scas
ficompl
mov
adc
mov
lea
xchg
mov
push
popa
sub
repz
sbb
out
fwait
push
out
adc
adc
adc
dec
or
scas
dec
in
dec
xchg
fcomps
aas
daa
jp
aad
leave
dec
pop
fwait
cmpsb
outsl
leave
std
testb
push
mov
lahf
iret
shll
xchg
mov
and
lods
fs
add
movlps
aaa
pop
mov
xor
mov
repnz
jnp
sub
sbb
das
lds
cltd
ss
pop
loopne
enter
xor
push
out
mov
fstpt
call
jmp
or
inc
cmpsl
cmp
xorb
pop
pop
sub
lds
rorb
cmpsl
inc
imul
loope
dec
xor
mov
enter
pusha
and
sbb
pop
pop
inc
popf
inc
pop
addr16
mov
and
jb
mov
fnsave
mull
das
cmp
sbb
std
pop
push
push
xlat
and
and
ja
adc
pop
jmp
mov
inc
sub
lcall
iret
or
xchg
xchg
dec
push
or
dec
imul
rcrb
cld
out
sbb
lods
cmp
movsl
jge
cmc
sub
cwtl
mov
or
inc
ret
shlb
cmc
int3
lds
push
mov
enter
inc
xor
mov
fisubs
jle
lods
and
out
fiadds
pop
loopne
fcmovnbe
push
idivl
jl
lret
in
jne
adc
js
adc
xchg
inc
enter
lret
mov
clc
mov
movsb
out
mov
cltd
inc
fsubrl
js
lods
and
and
and
push
and
cmp
fldcw
icebp
add
adc
fwait
loope
dec
cmp
ret
aas
stc
pop
sbb
or
inc
mov
cmc
inc
add
add
jae
ret
divb
lea
aam
dec
push
scas
cwtl
add
cmpsl
mov
mov
xchg
sbb
nop
fcmovu
rolb
data16
push
push
and
pop
xchg
test
test
jmp
pop
aam
xchg
std
lret
stc
adc
push
jecxz
lds
inc
cmp
icebp
je
scas
jg
dec
adc
ret
cmp
inc
imul
jmp
mov
ljmp
lret
push
pop
mov
pushf
cmp
xor
inc
test
clc
mov
sbb
fiadds
sub
cmpsb
dec
sahf
repz
cmpsw
loope
xor
dec
inc
into
xlat
popf
out
add
sbb
mov
mov
testb
popf
orl
or
or
adc
add
aam
inc
sub
imul
rcr
dec
iret
jp
loopne
ret
xor
inc
cltd
outsl
lcall
cld
mov
fidivl
loope
lea
push
xchg
pop
iret
adc
cmpsb
pop
sbb
pop
int3
adc
cs
pop
leave
popf
in
xchg
aad
in
and
jae
incl
mov
insb
shlb
and
jns
pop
leave
mov
test
sub
jae
call
es
cmp
out
pushf
jecxz
in
xchg
mov
fidivrl
das
mull
pop
pusha
imul
xchg
or
fwait
pop
mov
dec
add
add
sub
div
insb
dec
mov
sub
adc
ds
and
sti
pusha
sub
cmpsl
rolb
jmp
and
mov
push
pop
inc
adc
mov
dec
rcrb
popf
fcmovnbe
mov
or
push
cmp
cmp
lock
iret
lret
cli
jae
insb
push
push
mov
adc
mov
mov
push
jae,pn
sahf
dec
xor
ja
out
fists
into
xchg
xchg
inc
bound
cmp
mov
in
mov
ficompl
fildll
pop
add
repz
pop
repnz
jno
pop
jl
add
dec
insb
xor
daa
pop
icebp
fdiv
jo
dec
inc
shr
stc
fnstsw
xchg
mov
jbe
mov
in
sahf
in
push
sbbl
pop
or
jbe
aaa
test
xchg
xor
pop
or
push
xchg
jp
ss
and
mov
cltd
loopne
out
mov
jecxz
jp
movsl
pmulhw
mov
mov
xchg
frstor
push
aaa
loope
sti
push
xlat
js
ret
imul
sub
repz
fiadds
mov
scas
inc
pusha
imul
rorb
lods
pop
lods
arpl
out
add
sub
ljmp
mov
mov
les
inc
scas
sbb
mov
ret
sarl
mov
sub
pop
lds
mov
cltd
lahf
add
fisubrs
push
sar
in
dec
lcall
mov
cwtl
and
nop
enter
jb
test
test
sahf
sbb
mov
rcrb
sti
stos
adc
mov
xor
shl
fldenv
and
data16
in
sbb
les
and
pop
jle
lret
scas
mov
or
or
mov
pop
outsb
bound
or
inc
fwait
cwtl
jns
out
sub
dec
push
icebp
xor
push
cmpsl
or
mov
inc
in
idiv
nop
inc
push
or
add
push
lret
aam
inc
add
push
std
test
insb
push
mov
inc
xor
jl
mov
jecxz
add
iret
or
mov
sub
int3
fistl
inc
aam
mov
xchg
jnp
or
stos
fwait
xor
pop
mov
fildll
outsb
negl
or
xchg
fmuls
adc
std
stc
adc
movsb
push
push
pop
fcmovnbe
cmpl
fs
std
mov
ja
fcomps
adc
mov
icebp
gs
mov
pop
aad
pop
test
leave
add
cmp
xchg
and
stc
sti
xchg
xchg
cmp
cmp
jecxz
aas
jno
cmp
cmp
sub
stc
dec
mov
cmc
movsb
pop
jb
pop
out
adc
gs
out
es
test
popa
xor
call
sbb
jle
outsl
sub
into
jmp
imul
aas
sahf
lcall
stos
dec
adc
mov
mov
lret
sub
xlat
int
jecxz
adc
lock
push
and
or
jno
jno
dec
pop
mov
sbb
mov
xor
pushl
stos
push
stos
xchg
inc
pop
rcrb
and
and
jecxz
iret
in
adc
rcrl
inc
loope
mov
je
cmpsb
push
or
xor
push
outsl
sbb
cmp
sub
inc
ficoml
lods
xor
stc
dec
lock
in
adc
push
aad
xchg
into
shlb
in
icebp
rcrb
mov
sub
push
sub
aaa
adc
push
xlat
inc
divps
iret
pop
jae
or
bound
out
movsb
sub
sbb
xor
out
fsts
ret
xchg
test
stos
sahf
mov
dec
push
ret
and
xchg
fbstp
mov
xchg
hlt
mov
daa
or
outsl
je
test
xchg
mov
popf
xchg
mov
repz
cs
inc
jns
inc
inc
outsl
enter
add
lods
sub
loope
add
data16
lds
adc
fldl
xlat
les
sahf
cmp
push
mov
dec
lock
xor
daa
or
lods
xor
pop
aam
mov
mov
dec
jmp
js
adc
icebp
push
xor
jge
dec
shrl
shlb
gs
xor
push
imulb
sbb
jg
push
in
lods
fisttps
mov
adc
adc
mov
inc
ss
and
sub
xor
push
pop
clc
rclb
mov
or
pop
jle
gs
jle
ja
pop
cmp
xor
ficoms
arpl
xlat
int
aam
das
jnp
hlt
lods
push
pop
mov
dec
mov
loope
addb
out
int3
xchg
fwait
dec
pop
ret
loopne
outsl
cltd
das
test
clc
xchg
sahf
mov
lock
pop
inc
mov
js
mov
xchg
sub
incb
in
daa
sbb
mov
or
jg,pt
jo
jnp
in
and
dec
testl
mov
fidivs
in
xor
nop
sbb
sbb
jbe
mov
lret
loop
xchg
dec
insl
fsubrs
in
jne
add
lods
dec
lea
cmp
fwait
std
fsubrl
aad
inc
insl
ljmp
enter
ds
rclb
fnstenv
mov
inc
dec
jecxz
in
pop
or
mov
test
mov
in
bound
into
push
push
fsts
bound
sub
enter
push
jb
push
cmpsb
mov
jbe
cmp
jle
jb
lods
xor
sub
int3
sub
mov
mov
xor
mov
stos
pop
test
je
xor
mov
rcrl
fucomi
arpl
lahf
sbb
jp
cmpb
push
xor
adc
sub
mov
dec
mov
jne
shll
fwait
sti
jmp
aam
add
push
fs
jbe
lret
ficompl
mov
fwait
movsb
xchg
fwait
das
xor
ret
fidivrl
pop
inc
sub
outsb
xor
shl
stos
das
and
mov
add
sbb
outsl
loopne
xor
mov
jge
nop
cmp
lea
fisubs
mov
out
nop
jl
push
jge
mull
sahf
in
outsl
jmp
fs
pop
push
gs
jns
cwtl
adc
inc
sub
push
aad
dec
xchg
mov
jecxz
sub
add
and
flds
jge
push
movsb
loopne
xchg
pusha
int
sub
lea
sub
push
call
test
ret
lahf
pop
ss
inc
cmc
pop
cs
enter
lds
jae
adc
inc
fs
movsb
outsl
in
sub
fdivr
loop
lods
xor
mov
pop
and
data16
movsl
pop
shll
xchg
hlt
test
cmpsb
divb
es
jo
xchg
sbb
sarb
jo
cs
pop
lret
mov
push
test
adc
imul
add
cmp
scas
push
in
insb
jnp
insl
xchg
cmpsl
mov
insb
incb
mov
jl
js
xor
ficoms
mov
shll
pop
sub
fnstenv
sbb
ljmp
imul
sbb
adc
cmp
sub
sbb
jnp
lret
nop
insb
lods
add
pop
add
and
int3
mov
push
fidivs
aaa
or
pop
insl
sahf
and
jne
popl
adc
lcall
cmp
cmp
mov
jb
pop
add
daa
lret
jge
push
in
pop
xorl
fcompl
or
sbb
enter
and
fimull
mov
movsl
sbb
sub
or
arpl
push
push
sub
ss
das
mov
inc
repz
inc
sarb
jno
lock
cld
dec
es
mov
adc
nop
cmp
push
xor
aam
mov
mov
fwait
xor
outsl
jne,pn
mov
jge
jl
lcall
push
sub
mov
dec
sub
push
les
jg
rolb
jmp
mov
lods
loope
call
sub
and
inc
jmp
mov
movsl
jae
mov
push
lahf
xor
addr16
in
call
std
enter
iret
outsb
sub
push
add
sub
xchg
testb
push
loop
mov
and
nop
bnd
sbb
std
push
lret
sbb
sbb
jne
inc
sub
xor
out
shlb
mov
jb
inc
xor
sarl
adc
mov
imul
jecxz
insb
push
add
lods
orw
jne
mov
enter
sbbb
fdiv
or
into
add
inc
mov
cmpl
cmpl
sbb
xor
fildl
inc
and
dec
sub
mov
mov
inc
adc
je
ret
je
pusha
jb
int
xor
jle
mov
mov
decl
addb
repnz
lds
mov
xorl
repnz
lods
and
mov
notb
into
out
adc
lods
mov
insb
inc
iret
sbb
sbb
mov
sbb
fnstsw
adc
adc
and
sbb
icebp
add
hlt
stos
and
popf
jle
cmpsl
dec
arpl
ljmp
movsl
push
jg
roll
push
pop
jo
add
sbb
rcrl
ds
add
xor
inc
clc
nop
popa
jnp
ljmp
popa
xor
or
jno
test
data16
mov
push
pop
test
pusha
add
into
push
adc
pop
dec
pop
addr16
out
add
sub
inc
test
data16
and
dec
ss
lret
loope
push
das
cmp
shlb
leave
add
mov
and
mov
mov
pop
jmp
movsl
fs
negl
or
test
inc
rorl
testl
inc
leave
push
nop
and
pop
mov
mov
jo
ret
cmc
mov
inc
dec
lcall
jg
or
xchg
fnstsw
sbb
and
xor
stos
xor
inc
leave
sbb
and
dec
repnz
xor
aaa
add
pop
das
mov
stc
jns
js
jecxz
cwtl
mov
push
push
mov
and
jle
mov
out
sbb
mov
xor
into
sbbb
mov
loop
mov
jae
je
fstpt
cmp
mov
pop
add
pop
fwait
add
inc
fsubrl
lods
roll
pop
test
jns
xor
adc
data16
js
push
push
rcrl
xor
mov
mov
jns
jb
dec
jo
pusha
in
push
inc
es
dec
ficoml
outsl
mov
cli
incl
loop
pop
push
fwait
sbb
cwtl
add
xor
dec
iret
and
inc
xor
cmp
fistpll
xchg
mov
cmp
jg
mov
addr16
dec
pop
aam
imul
xor
aam
fs
in
inc
fldcw
jg
es
notb
cmp
ret
popa
xor
sbb
lods
sub
jmp
mov
pop
iret
pop
xor
jg
in
jecxz
mov
cmp
adc
cmp
popa
cld
mov
pop
clc
iret
cmpb
shl
fldenv
dec
repz
sbbb
std
arpl
push
mov
sbb
inc
inc
jp
arpl
xchg
imul
inc
sbb
aas
repz
sbb
shrl
xchg
xchg
sahf
sbb
adc
sub
dec
adc
jb
xchg
imul
ss
dec
xchg
ds
daa
stos
test
push
jecxz
cmp
std
aas
jmp
lret
sbb
cmp
or
call
push
pushl
cld
xchg
outsb
mov
fcoms
mov
push
das
inc
bnd
lods
shlb
jge
push
test
into
jno
rclb
jno
push
mov
mov
jb
popf
mov
mov
mov
jbe
push
lds
cmpsb
adc
pop
mov
push
jmp
xchg
inc
xchg
pushf
mov
xor
fwait
aam
sbb
jge
pop
pop
sbb
xchg
xchg
inc
subl
push
sbb
push
insb
jbe
clc
and
inc
cwtl
ljmp
loop
or
loopne
adc
sbb
shr
adc
and
sub
mov
lea
mov
orl
inc
call
cmp
or
bound
lock
adc
mov
mov
mov
lcall
std
int3
and
aas
pop
sub
or
or
femms
sub
lcall
xchg
dec
and
cmpb
push
xchg
and
dec
xchg
ret
dec
add
mov
loope
xor
lret
jle
xorl
xchg
mov
mov
je
inc
test
push
pushf
sqrtps
lods
mov
js
and
jae
inc
xlat
lods
xchg
xchg
push
pushf
pop
add
sub
imul
dec
jge
clc
or
jmp
fcomps
xchg
enter
outsb
aaa
pop
or
ds
jb
data16
and
xor
push
cmpsl
call
jg
dec
mov
out
jge
scas
sahf
mov
xchg
mov
inc
cld
sbb
mov
xchg
mov
or
imul
ret
jb
add
push
flds
ja
fs
test
test
pop
mov
fsts
cwtl
adc
or
roll
adc
mov
arpl
mov
leave
xor
aam
popf
pop
pop
add
iret
adc
arpl
cmp
jnp
imul
and
adc
sbb
into
add
imul
add
pop
les
jno
push
leave
fadds
sub
fldl
ja
add
and
cmp
dec
in
mov
jp
mov
dec
inc
push
fisubl
sahf
sahf
arpl
add
pushf
or
jae
aas
and
popa
adc
into
ljmp
ds
inc
add
jb
imul
int3
dec
pop
adc
jp
mov
mov
add
hlt
mov
add
test
int3
mov
cmc
in
inc
cmp
sbb
mov
aas
inc
aad
ret
pop
mov
in
out
mov
inc
mov
ret
mov
ds
mov
pushf
in
dec
mov
fldcw
dec
push
sbb
movsl
fldenv
mov
fstp
pop
mov
fs
fcompl
mov
outsl
push
mov
pop
loop
sbb
leave
in
or
in
dec
fisubrl
stos
lds
xor
inc
sub
jg
inc
lret
or
pop
pop
inc
add
and
jb
mov
out
ljmp
clc
jne
adcb
push
leave
and
cmc
popa
in
pop
pusha
aam
out
shlb
mov
pusha
icebp
mov
testl
movsl
xchg
xor
push
pop
fstl
sarb
pop
lea
or
or
inc
shrb
ds
cli
lods
test
push
in
adc
mov
xchg
sahf
fdivs
cmp
scas
addl
jne
and
cli
in
sbb
add
js
fildl
pop
sbb
xor
insb
cltd
dec
xchg
arpl
mov
sbb
jge
adc
mov
sar
lock
xor
xchg
leave
fidivrs
sbb
aas
push
nop
and
jge
testb
mov
fdivrl
fwait
ja
mov
ret
cld
mov
dec
les
and
jmp
and
jmp
and
rcrl
adc
pop
jo
sti
mov
jmp
stc
xor
ret
test
push
mov
inc
mov
cwtl
or
loope
xchg
push
pop
jle
out
clc
mov
pop
out
out
cltd
mov
dec
jl
pop
mov
fs
je
lret
cmpsl
sbb
scas
aas
out
popa
jmp
cmpsb
push
lea
jbe
inc
aas
push
mov
bound
fbld
fisubl
mov
sub
dec
sub
mov
push
jl
in
mov
nop
test
xchg
cmp
data16
mov
pop
sti
data16
mov
xchg
out
shlb
cmp
or
mov
shll
negl
mov
std
pop
dec
fldcw
xchg
or
pop
ret
popa
add
cmpsb
pop
mov
aaa
cld
sub
cmp
call
cmp
testl
or
icebp
dec
lcall
inc
push
mov
mov
xchg
js
adc
in
xchg
int
dec
fucomip
push
add
loopne
adc
jp
add
or
mov
aad
lahf
stos
lock
pop
repnz
out
cltd
lret
pop
mov
pop
repz
mov
xor
mov
cmpb
dec
repnz
daa
pop
arpl
and
sbb
mov
js
fwait
fwait
add
jns
dec
into
mov
xchg
mov
jp
addb
scas
cmp
xor
test
cmp
into
test
and
cmp
pusha
xchg
jo
mov
cmp
dec
inc
movsb
xor
nop
lahf
xor
inc
add
push
lods
xlat
test
xlat
lods
xor
ja
imul
aaa
incb
xchg
inc
je
sub
into
sub
stos
test
or
mov
scas
fisubs
shll
rcrb
fcoms
data16
lods
mov
movsl
lods
push
sub
mov
inc
xchg
mov
add
fdivl
into
bound
fcmovnu
lret
ret
jmp
pop
fidivrl
inc
sub
add
dec
imul
rolb
inc
dec
in
ret
push
xor
call
xchg
mull
es
arpl
aas
jp
sbb
popf
dec
scas
cmc
sbb
push
lock
outsb
xchg
xor
mov
aaa
pop
add
in
fs
sbb
enter
xchg
cmp
in
mov
sahf
jp
push
call
xchg
mov
imul
push
pop
jl
mov
mov
fldcw
jb
out
les
sub
js
dec
xchg
jo
or
pop
inc
inc
loopne
push
push
mov
mov
inc
dec
loop
sahf
add
aas
in
jge
lock
mov
leave
pop
ss
andl
int3
in
mov
sti
shl
push
push
adc
mov
jg
pusha
xor
and
ljmp
cmpl
pop
mov
mov
movsb
add
xchg
xchg
loopne
out
shll
sub
push
jmp
pusha
loopne
sub
xor
incl
mov
dec
notl
add
mov
js
add
aad
jge
dec
aas
cmp
push
pop
mov
in
scas
les
int
or
fdivrl
fists
stos
pop
sub
fiaddl
push
dec
jp
mov
pop
in
jb
jae
jge
cmp
popf
or
inc
xchg
fs
xchg
or
lods
fmuls
push
cld
pop
and
push
popf
lret
movsl
and
and
push
xor
push
mov
test
mov
mov
sub
mov
mov
repz
pop
dec
jo
test
or
imul
pop
inc
and
cmpsb
pop
push
repz
cmp
adc
insl
jnp
rcr
push
mov
cmp
mov
cmpsl
scas
lcall
xor
imul
in
sbb
jge
mov
imul
int3
int3
mov
or
in
inc
push
pop
xor
dec
xor
mov
mov
repz
or
in
fucomip
xchg
outsl
push
mov
pop
dec
mov
and
shll
stos
xor
or
lods
mov
xchg
pusha
mov
jmp
fmuls
push
adc
mov
addr16
mov
or
lods
jl
cmp
mov
push
aam
aaa
cmp
cltd
pop
and
lds
adc
test
pop
pop
adc
int
popa
in
and
rcl
test
popf
mov
sub
aam
in
jp
jp
jnp
adc
sahf
ds
outsb
aad
add
add
sbb
js
and
jae
subb
out
mov
scas
gs
gs
mov
adc
push
or
in
bound
bound
mov
loope
popl
notl
dec
and
jecxz
sub
insb
jns
pop
sub
and
push
cmp
pop
loopne
jnp
nop
pop
pop
add
pusha
insl
inc
mov
pushf
fistpll
popf
xchg
mov
push
add
xchg
outsl
inc
add
popf
cmp
sub
sarb
mov
push
jne
mov
mov
xor
and
icebp
mov
movsl
shll
inc
push
dec
sbb
or
inc
int
xor
xor
pop
xorl
lods
xchg
enter
push
xorl
lahf
call
inc
jl
adc
mov
jnp
rol
fwait
fwait
pop
fsubs
dec
jl
fnstsw
fdivl
jmp
and
outsl
adcb
scas
stos
mov
cld
mov
sbbb
and
dec
xchg
repnz
pop
das
adc
push
jl
nop
push
lahf
test
aad
imul
cltd
adcl
xchg
jp
mov
subb
mov
mov
sbb
sahf
sub
mov
jnp
cmpb
or
sub
adc
loopne
js
rolb
cmpsl
add
sub
fcom
stos
push
mov
jle
pop
inc
es
call
popa
loope
dec
mov
pop
out
lds
cmp
sti
and
mov
fcoms
je
pop
dec
aaa
or
js
push
stos
lret
cmpsl
push
mov
pop
sarb
out
jg
iret
mov
stos
inc
xchg
int
mov
hlt
jge
push
insl
fmulp
xor
je
ss
ret
mov
push
jnp
test
mov
js
loop
mov
cmp
mov
jmp
push
mov
dec
loopne
adc
xlat
clc
in
adc
and
mov
test
mov
loop
pop
outsl
jg
jb
daa
mov
mov
inc
sti
in
mov
mov
mov
fimuls
ss
mov
xor
jne
scas
pop
or
add
or
dec
mov
dec
jns
mov
nop
mov
popf
rcrl
jg
jo
les
in
pop
sub
xorl
sar
dec
rcrl
push
ret
imul
je
into
lret
jle
xor
mov
and
aaa
sbb
push
or
or
popf
arpl
out
add
loopne
inc
dec
or
adc
out
lret
es
lds
push
mov
xor
xchg
pop
xor
imul
sbbb
ret
inc
xchg
je
lcall
sub
pop
inc
pop
rcrl
enter
lock
sahf
pop
mov
or
push
inc
jmp
inc
jmp
cmpsb
das
mov
mov
sbb
push
mov
inc
lret
icebp
jmp
dec
push
jle
pop
std
adc
scas
sub
xor
cwtl
jbe
mov
xor
loop
imul
repnz
xchg
inc
xor
sub
jbe
jmp
add
pop
cmc
mov
push
sub
es
addr16
add
or
out
addr16
or
dec
push
in
push
movsb
pusha
mov
addr16
icebp
fbld
and
or
and
fcomi
adc
push
shl
test
in
adc
xchg
leave
mov
enter
mov
ja
sbb
pop
mov
inc
mov
sbb
pop
fisubrl
aaa
sub
mov
mov
test
xchg
in
pop
add
sbbl
jne
xor
push
mov
dec
arpl
and
les
sub
push
sub
or
dec
mov
ja
sub
enter
loop
jne
fs
inc
lahf
pop
fwait
and
lods
dec
aam
push
rcr
push
aaa
mov
shrb
in
outsb
pop
scas
mov
xchg
js
mov
sub
inc
adc
ss
sub
adcb
adc
scas
push
out
loop
mov
and
into
incl
je
jg
jbe
scas
or
enter
mov
and
and
mov
ds
jecxz
jbe
dec
jl
mov
or
pop
sub
dec
jno
sub
cmpsl
pop
dec
adc
push
nop
pop
subps
clc
fsts
inc
gs
jo
insl
fcomps
aad
out
and
bound
icebp
notb
loop
sbb
inc
cld
les
xchg
test
fs
shlb
ja
call
mov
push
testl
sbb
add
cmp
add
sub
sub
mov
les
mov
jae
lcall
lcall
dec
in
add
push
adcl
andb
popf
xchg
push
mov
scas
mov
dec
pusha
out
es
call
fdiv
imul
adc
mov
push
sub
insl
cli
lods
dec
dec
out
rolb
movb
xor
jl
fistl
ret
adc
arpl
xlat
imul
mov
mov
pusha
ss
and
jge
cmp
sti
xor
in
outsl
cmp
je
leave
mov
int3
sbb
ds
sub
in
dec
jmp
sarl
fstpl
das
outsl
dec
jns
lcall
int
das
xchg
cmpsl
aas
lahf
dec
pop
call
sub
pop
cmpsl
pop
in
or
sbb
testb
inc
mov
cmp
pop
sub
cmc
aam
dec
mov
fisubs
push
in
mov
mov
xchg
out
adc
jnp
ret
movsb
int
lea
or
ljmp
mov
fistpll
dec
aad
pop
clc
inc
cmp
push
clc
ja
or
mov
add
fstps
scas
mov
cmp
lcall
sub
mov
inc
pop
cltd
or
mov
das
mov
xchg
or
push
jno
repz
gs
mov
mov
imul
mov
push
sub
sbb
mov
out
insl
adc
inc
pushf
xchg
stc
lcall
cmp
lods
sbb
mov
mov
xchg
inc
inc
jmp
repnz
mov
xchg
push
int3
mov
jnp
push
out
shrb
scas
adc
jns
add
push
in
and
aad
mov
mov
dec
pusha
sahf
push
jg
mov
lcall
mov
int
sbb
imul
add
add
into
loopne
fisubl
icebp
jge
ds
push
fucomip
push
xor
inc
jbe
xchg
cmp
fmul
dec
out
inc
je
jecxz
aad
xchg
jge
pushf
adc
xchg
jbe
arpl
mov
pop
arpl
hlt
jmp
mov
mov
jp
icebp
fucom
mov
push
push
mov
mov
jmp
stc
in
test
or
add
in
loope
lock
aas
inc
loopne
cltd
inc
pop
jae
sub
or
clc
insl
dec
ss
lods
mov
test
pop
mov
pop
sti
ja
push
test
lods
lock
mov
jbe
mov
loope
sti
ret
jmp
push
sub
stos
sbb
lret
in
sub
jle
repz
fisttps
ds
test
jns
fidivrl
lock
clc
xchg
mov
daa
stos
lret
adc
stos
aam
nop
push
mov
xor
sti
aam
mov
nopl
test
iret
pop
pop
jnp
mov
jbe
and
pop
mov
xchg
jl
hlt
icebp
xchg
popa
sub
jl
or
xchg
sbb
fsubs
xchg
push
test
addr16
hlt
pop
daa
adc
lock
mov
pushf
clc
mov
push
in
inc
aam
outsl
into
dec
push
bound
dec
sbbl
mov
mov
loopne
inc
cwtl
sbb
dec
xsave
mov
loopne
or
dec
jmp
imul
or
jb
shl
sbb
cmpsb
loopne
pop
lock
aam
mov
mov
sbb
mov
dec
mov
xchg
jno
jmp
sub
das
out
js
lock
mov
xchg
nop
lret
dec
out
jnp
mov
jg
popf
pop
movsb
jae
int
add
outsl
or
add
pop
push
pop
xor
adc
xchg
cli
inc
push
mov
cld
jo
mov
xor
stc
push
push
mov
data16
mov
nop
ret
adc
sbb
mov
jnp
cwtl
mov
sub
mov
inc
jmp
into
fisttpl
inc
popf
xchg
insb
and
testl
lods
lret
insl
pop
cmc
shlb
mov
jmp
push
adc
movsb
outsl
testb
mov
dec
cmp
mov
cmp
xchg
stos
add
subl
iret
loop
cmpsb
mov
jns
cmpsl
sbb
outsl
sbb
out
dec
sbb
pop
mov
cmpl
sub
push
or
push
add
test
lret
adc
test
and
lahf
or
mov
cmp
push
fnsave
icebp
negl
sub
mov
popa
in
pusha
mov
jp
xchg
jns
push
imulb
jbe
icebp
mov
xchg
lret
movsl
pushf
and
lret
sahf
daa
and
int3
and
jae
popa
sbb
stc
jge
push
cmp
enter
sbb
xchg
xchg
stos
mov
out
fisttpl
sub
mov
pop
inc
inc
in
sahf
dec
or
mov
js
inc
inc
push
mov
leave
push
and
test
sti
push
jo
inc
insb
andb
mov
push
or
jno
loopne
int
xchg
stc
sub
mov
jo
repnz
aam
xor
and
mov
cmpsb
sbb
sub
in
cwtl
adc
push
xchg
mov
int
out
mov
inc
leave
pop
loope,pt
push
je
xchg
insb
imul
mov
and
pop
rorb
shll
arpl
loop
cmp
mov
push
xor
inc
fwait
mov
stos
push
sti
in
jns
sub
testb
rcr
or
jle
mov
and
inc
jns
fbld
adc
mov
inc
xlat
outsl
xchg
notl
push
call
je
pop
cli
xchg
adc
xchg
xor
xchg
mov
mov
dec
xor
jp
jae
sbb
test
or
sti
jmp
inc
mov
mov
dec
das
rorb
pusha
push
stos
mov
sub
out
test
in
popf
out
jb
fincstp
pop
fcomps
xor
cmc
loopne
ss
fildl
mov
cltd
sub
cwtl
lcall
in
movsb
imul
bound
je
aad
loopne
cmp
inc
bound
cmp
mov
movsb
inc
add
ja
insl
cmp
dec
add
dec
fbstp
test
cmpsl
xchg
xor
jno
fsubrs
shr
fwait
cmp
in
jg
fsub
jae
fsub
xchg
cld
js
sahf
cltd
jle
inc
or
push
sarb
iret
cmp
aas
loopne
push
in
jns
lock
cwtl
addr16
push
push
push
sahf
dec
clc
mov
bound
jmp
mov
icebp
jnp
and
into
int
cmc
jp
std
insl
mov
pop
pop
in
push
std
frstor
subl
jne
xchg
mov
mov
mov
lds
ret
stos
or
mov
insl
clc
decl
mov
lea
or
js
repz
mov
push
inc
mov
dec
int
cmp
mov
or
cmp
cmp
dec
fbld
in
jnp
jo
aaa
mov
fldt
je
mov
mov
xorb
mov
pop
stos
xor
lods
push
adc
scas
pop
xchg
inc
lret
pushf
xor
jno
jbe
push
stos
pop
sbb
es
mov
and
test
lods
jmp
fisubs
cmc
xor
out
push
mov
scas
push
fcoml
movsb
stc
xor
sbb
iret
cmp
out
inc
shl
xchg
movsl
repz
xchg
les
mov
xchg
and
mov
popa
into
add
cld
push
inc
movsb
jb
adc
das
lds
pop
inc
cmp
jnp
add
xchg
hlt
jb
mov
add
pop
aaa
loopne
jbe
adcl
jns
sbb
out
gs
push
mov
leave
cli
mov
cmpsl
call
loope
mov
aad
cld
pop
jno
popf
mov
repnz
sub
mulb
mov
int3
cmpsl
xor
xlat
les
out
pop
stc
cmp
mov
sub
add
jge
daa
mov
jo
int3
mov
sub
insl
dec
pop
lret
and
pop
jle
xchg
gs
xchg
cmpsb
cmpsl
or
lret
push
jmp
pop
and
or
mov
mov
clc
rorb
fcmovne
fldcw
push
dec
mov
push
and
fdivrs
lods
push
push
ret
das
push
fwait
lahf
jno
sub
cmp
sbb
adc
dec
insl
fwait
pushf
mov
cli
sti
and
mov
daa
fcoms
inc
and
add
fs
mov
aam
lods
push
mov
add
add
pop
lcall
push
push
cwtl
sbb
or
sbb
cmpsb
fistps
jbe
push
pop
aas
lods
cld
jle
dec
adc
sub
hlt
fistpll
mov
rol
add
xchg
mov
inc
lds
mov
or
fwait
and
dec
adc
cmc
push
pushf
sbb
mov
loope
idivl
das
in
sub
std
cld
arpl
inc
xchg
les
pop
and
hlt
jmp
and
push
push
push
mov
insb
es
sub
and
das
jbe
test
sti
mov
jmp
insl
push
and
pop
lds
shlb
jbe
mov
adc
sub
mov
mov
jg
add
dec
fstpt
lret
push
insl
loop
out
hlt
ret
sub
daa
xor
mov
add
and
dec
sub
mov
jb
sbb
ja
add
aad
mov
fldenv
mov
xor
sbb
fildll
int
addr16
out
lods
out
cmc
mov
jnp
pop
insl
loopne
in
clc
shlb
push
pop
or
js
add
inc
sub
cmp
pusha
inc
mov
clc
push
and
dec
shrb
jb
jns
mov
xchg
xchg
sub
push
fbld
push
mov
jne
xor
jl
push
jae
pop
add
jmp
adc
xchg
adc
movsb
lods
pmaxsw
stos
hlt
sbbl
and
jmp
xor
or
nop
enter
dec
dec
outsl
mov
mov
lahf
jmp
jle
cli
push
xor
dec
addr16
add
loope
test
push
xor
aad
popl
inc
add
std
xor
in
mov
mov
adcl
xchg
mov
mov
jmp
pop
cs
push
imul
mov
daa
jns
ja
jecxz
and
mov
popa
cli
and
subl
pop
adc
jno
mov
leave
mov
loope
mov
rcl
mov
lods
cmpsb
add
fs
dec
pop
pop
add
sub
fcompl
orb
jmp
stos
loope
pop
dec
push
rcl
insb
test
jne
pop
fldenv
loop
jbe
and
and
aad
jns
mov
movsl
jge
inc
fbld
jle
mov
and
das
outsb
movsb
dec
icebp
cmpsb
aaa
outsl
xor
fisubs
mov
cltd
cmp
lcall
insl
add
gs
or
push
fidivs
out
push
cmp
jne
xchg
mov
mov
arpl
lcall
mov
std
jns
add
pop
aam
jge
jnp
pop
pusha
rcr
fdivr
in
add
inc
or
cmp
mov
push
rcrb
xchg
add
cmpsl
rorb
mov
sub
mov
sarb
and
push
add
and
rcr
sbb
movsb
jns
cmpsl
mov
ficoms
test
loopne
lods
and
aaa
jle
inc
scas
test
sub
outsl
xlat
mov
pushf
jns
loop
sbb
xchg
mov
leave
cwtl
call
push
xchg
fmul
lds
inc
je
imul
ss
jl
inc
push
call
ja
int3
dec
jge
xchg
sarl
inc
push
jp
and
imulb
lret
mov
mov
sub
not
jae
vpunpckhbw
les
pop
jg
icebp
cli
mov
inc
dec
outsl
inc
inc
jne
sti
aam
xchg
sub
movsl
push
ss
push
dec
cmp
sqrtps
and
pmullw
out
ficomps
test
imul
jl
pusha
je
xchg
repnz
test
push
mov
cmp
stos
shrl
mov
dec
sub
ds
mov
fstpt
shrl
rorl
and
mov
adc
mov
lret
jns
clc
je
out
fst
shl
scas
js
jp
les
dec
pandn
imul
call
xchg
pop
jo
lea
sahf
ficompl
imul
outsb
rolb
xor
loop
jae
sub
mov
std
cmp
mov
push
cmp
inc
adc
enter
fistpll
push
sbb
je
mov
or
addl
mov
jne
jmp
inc
add
push
sti
not
adc
in
js
nop
sarb
loope
in
or
cmp
adc
mov
mov
inc
sbb
fnstcw
scas
add
lahf
jne
xchg
nop
mov
cmp
xchg
pop
lahf
test
ss
push
rol
adc
js
pop
cmp
dec
out
scas
dec
jb
gs
call
dec
ja
mov
xchg
lret
mov
test
leave
cmp
ja
icebp
sub
cltd
add
jne
xor
jp
mov
out
rcr
rorl
daa
sub
mov
ret
jl
pop
int3
popa
adc
scas
std
mov
sub
jg
fwait
add
or
lods
mov
orb
push
jmp
aaa
stos
xchg
cmpsl
push
jmp
rcrl
inc
loope
pop
mov
add
sub
jl
xchg
mov
loopne
inc
sti
in
push
popa
cmovae
maxps
in
mov
mov
stc
xor
adc
int3
push
repnz
jge
cmp
pop
mov
insb
pop
push
fstl
sub
add
int
insl
and
repz
insl
clc
push
jge
enter
out
dec
inc
repnz
lahf
outsl
jmp
movsb
scas
cmp
cmpsb
inc
das
loop
push
out
lea
aaa
mov
xor
subl
jns
and
mov
ljmp
popf
and
fcomi
add
aas
clc
filds
jle
sub
movsl
pop
mov
aad
inc
dec
add
jbe
ds
les
mov
or
pop
push
push
shl
pop
dec
mov
sbb
lods
push
sbbb
je
sub
cmp
pushf
sbb
inc
mov
in
fsubrp
adc
adc
push
pop
xlat
xor
push
push
and
sub
cld
cmp
call
lret
jmp
mov
add
or
pop
shr
je
xchg
add
lods
xor
mov
mov
sub
jns
adc
addr16
lret
gs
inc
jns
mov
movsl
pushf
xor
sub
sbb
fdivr
das
std
push
test
cltd
aas
sbb
fwait
pop
mov
cli
mov
cmpsl
adc
mull
push
xor
sub
add
inc
in
scas
js
ret
in
jmp
add
or
push
idiv
mov
clc
pop
out
sub
addr16
in
ss
or
pop
in
testl
dec
pop
scas
jmp
add
add
sub
and
sbbb
push
jge
daa
rolb
dec
lret
xor
mov
or
call
popf
les
xchg
lcall
fdiv
adc
and
mov
loope
inc
lods
adc
popf
stc
and
enter
gs
fs
inc
cwtl
insb
repz
sub
dec
sbb
jo
xchg
dec
and
pop
pop
out
jo
xchg
xlat
arpl
push
fiadds
in
mov
shrd
sarl
mov
sbb
add
xchg
outsb
repz
sub
cmp
xchg
and
xor
cli
cmp
repnz
mov
and
and
pop
es
cmpsb
mov
repz
enter
insb
add
sbb
scas
add
inc
mov
imul
add
pop
mov
in
pusha
push
inc
enter
jg
adc
mov
add
std
xorl
and
dec
dec
cmp
cmp
adc
cmp
pusha
sarl
les
dec
mov
in
lret
out
jp
and
push
add
ret
iret
icebp
popf
jb
pop
enter
push
mov
idivl
hlt
out
cmpsl
jb
mov
repnz
xchg
adc
leave
fsubrs
mov
loopne
mov
push
lahf
out
int
mov
push
ret
aas
dec
cmp
or
xor
mov
sti
scas
xor
xor
jmp
fs
imul
jo
shlb
test
mov
es
and
or
jb
push
xchg
test
pop
cmp
mov
std
addb
pop
arpl
mov
aam
pop
cmpsl
push
jno
daa
es
cmpsl
cs
push
jge
pop
mov
int
mov
lret
adc
sbb
add
negb
sub
test
hlt
xchg
movb
or
jb
test
jmp
jecxz
frndint
and
sub
mov
jle
fisubs
fcompl
push
jl
mov
and
jne
jp
xor
push
shr
sub
cltd
lahf
pop
cmp
adc
jmp
adc
adc
and
push
mov
scas
out
jne
daa
add
ds
into
cmp
int3
push
into
ljmp
sbb
pushf
ljmp
adc
enter
decl
jl
or
fs
xor
jae
out
imul
xlat
sub
lods
dec
sahf
std
push
xchg
mov
call
leave
push
movsl
stos
es
rorl
jmp
scas
daa
inc
clc
cltd
repz
push
push
hlt
cli
insb
movsb
sbb
sbb
inc
das
test
jmp
push
mov
mov
or
pusha
pop
mov
add
and
cltd
clc
cli
mov
xchg
std
call
lods
pop
les
jo
aad
jns
repnz
inc
std
popl
sub
out
cmp
add
inc
add
and
mov
cmp
push
lock
pop
pushf
popl
testb
jne
arpl
sbb
mov
xchg
or
aam
and
ret
mov
add
fwait
pop
aaa
jb
lret
outsl
out
stos
mov
fidivrl
movsl
cmc
lds
mov
mov
lret
cmp
out
rorl
or
addl
fucomi
mov
jmp
into
mov
in
int3
inc
mov
dec
mov
jle
into
aas
cld
outsl
adc
cmpsb
mov
ss
push
pop
sbb
js
loop
push
inc
cmc
inc
inc
add
sti
pusha
mov
mov
arpl
pop
lods
jmp
inc
and
cltd
sub
push
mov
lods
sarb
sub
jo
jae
pop
adc
adc
fsubr
loopne
jo
imul
mov
dec
inc
xchg
lods
xchg
dec
ja
outsl
rclb
clc
lret
ljmp
mov
add
sarl
inc
aad
mov
cmpsl
xchg
mov
or
cmp
sahf
sbb
mov
and
in
mov
test
je
pop
outsl
js
push
dec
loop
inc
bound
movsl
pop
stos
add
and
xchg
and
mov
xchg
jg
or
and
xchg
shrl
adc
ret
cmp
test
sub
inc
rcl
mov
cmp
push
popf
xchg
dec
mov
adc
cltd
cli
cmp
jecxz
xchg
push
sbb
and
mov
lods
cmp
cmp
xchg
ja
popf
dec
adcb
lret
lock
test
packuswb
addr16
imul
sti
out
es
insb
lret
add
mov
cmpsl
cmp
sub
aas
sti
pushf
jmp
push
sub
aad
sub
std
cli
lock
lcall
adc
aas
pusha
adc
and
jg
dec
inc
xchg
mov
dec
pop
cmp
mov
mov
test
fstp
xchg
aaa
add
fdivr
jbe
clc
popa
gs
mov
mov
imul
cwtl
das
lods
movsl
or
sahf
sbb
pop
ss
mov
fs
call
daa
test
mov
jb
pusha
jb
je
push
push
and
out
mov
mov
xchg
sahf
into
lock
pop
sti
and
jae
loope
rolb
aad
xchg
test
and
dec
xchg
pop
movsl
mov
popf
pusha
push
dec
jae
dec
nop
push
insb
arpl
sub
lcall
test
and
add
scas
xchg
cltd
mov
push
and
and
jns
cmp
mov
leave
es
mov
nop
jl
fisubl
push
fwait
iret
pop
and
cmpsb
imul
int
add
aad
or
loope
popf
mov
pop
out
pop
sahf
cmp
sub
or
bound
loop
sub
xchg
mov
outsl
inc
fisubl
out
hlt
cmp
mov
xorl
loope
mov
and
xchg
je
or
push
mov
and
jle
std
std
or
xchg
ja
fwait
or
orb
mov
out
rcr
test
pop
mov
push
stos
mov
mov
fistl
pop
sub
adc
mov
mov
inc
ja
push
dec
insb
xchg
jno
pop
pop
mov
xacquire
insl
pushl
ljmp
push
jge
mov
cmc
pop
xor
jae
inc
cmc
pop
and
and
pushf
add
andb
or
add
in
mov
shll
adc
adc
adc
xor
lods
sti
out
push
add
movsl
pop
xor
int
ficoms
add
sbb
add
imul
add
add
aas
add
and
insl
push
cmpsb
push
mov
das
js
inc
and
popa
sti
jmp
add
jbe
test
test
mov
inc
out
push
mov
popf
jbe
outsl
rcrl
lahf
pop
nop
cmp
or
jns
mov
sub
xor
inc
mov
mov
cmpl
mov
mov
fs
leave
out
lea
adc
test
je
insl
out
fcomip
push
mov
in
fdivs
xchg
mov
sub
les
pop
or
js
rorl
in
xchg
movsb
sbb
xchg
insb
pushf
or
test
jp
cld
ss
push
stc
inc
push
insl
inc
punpckhbw
rcl
nop
jg
js
adc
cltd
lea
int3
gs
test
or
ret
jne
sbb
mov
xor
scas
leave
inc
mov
add
test
xchg
adc
xchg
xchg
data16
jb
outsl
mov
aaa
push
add
cmc
push
fcompl
dec
xchg
js
dec
cmpsb
push
andl
push
loopne
int3
cltd
lret
rorb
lret
jecxz
sbb
pop
stc
aaa
dec
cmp
lahf
aam
adc
into
test
pop
subl
or
mov
pop
jecxz
jae
xchg
cli
mov
addr16
out
add
pop
xor
enter
mov
cmc
mov
cs
pop
mov
mov
jnp
xchg
pop
icebp
and
jmp
mov
and
push
in
adc
mov
mov
fstpl
push
xor
cmpsl
int
cmp
sub
and
cmp
in
mov
adc
mov
aaa
inc
inc
cmpsb
hlt
sahf
sti
adc
mov
inc
or
inc
ljmp
mov
aad
int3
in
push
rorb
xchg
cwtl
cwtl
out
sub
and
xchg
loop
in
mov
loopne
jmp
sbb
or
sub
sti
lcall
aaa
fwait
leave
mov
iret
or
cmpsl
mov
or
mov
lods
fnstsw
std
lcall
outsb
sbb
pop
sbb
and
push
cs
bnd
jns
adc
xlat
bound
push
push
mov
mov
out
adc
push
aam
mov
arpl
sbb
push
mov
pushf
pop
loope
cwtl
push
push
je
incb
mov
jp
pusha
loope
mov
int3
jg
addl
sub
dec
jb
jbe
outsl
push
ljmp
ja
fisttpll
xchg
lock
jp
lock
add
fucomp
sub
and
xchg
inc
adc
add
xchg
xchg
or
dec
in
mov
and
adc
sbb
push
cmp
mov
mov
mov
sahf
sub
sbb
call
scas
loope
outsb
gs
mov
out
stc
adc
out
sahf
sbb
cmp
imul
cwtl
push
jle
and
repz
jl
lods
adc
pusha
jno
and
lret
inc
aaa
or
pushf
dec
test
sahf
ja
movsl
test
insb
cli
movsb
dec
cltd
add
shl
addr16
shr
jecxz
subl
loop
pushf
jo
cmp
mov
xor
jmp
cmp
sbb
adc
out
push
or
jmp
push
clc
cmc
aaa
in
and
cmpsl
dec
cmp
insl
cli
xchg
mov
xchg
sub
mov
enter
mov
add
jg
daa
push
push
out
clc
loopne
jb
bound
stos
lods
jle
mov
fsubl
xchg
mov
adcl
mov
cmpsl
lods
sub
test
sti
dec
hlt
sahf
sub
icebp
pop
dec
push
loopne
pop
movsb
inc
mov
fdivr
filds
daa
push
inc
push
ss
cmpsl
dec
cmp
arpl
lret
mov
inc
cmp
mov
out
icebp
sbb
mov
outsl
sbb
rorb
push
pusha
push
mov
fildl
hlt
out
xchg
sbb
add
xchg
and
pushf
int
dec
push
stc
in
pushl
mov
scas
sarb
lahf
inc
jne
or
cltd
neg
add
xor
jg
fidivrl
popa
cmc
adc
mov
jle
outsl
rdmsr
stos
outsl
in
leave
out
lods
enter
jb
push
addb
fisubs
adc
ret
and
ss
push
mov
mov
ss
in
jns
xlat
pop
es
rolb
mov
push
imul
mov
sub
add
fidivl
mov
fcmovu
ja
cli
mov
mov
std
iret
sbb
fistps
lahf
int3
cmpsl
cld
add
xchg
andb
je
dec
mov
or
cmp
xor
out
xchg
adc
and
lret
insb
mov
push
call
inc
and
sub
sahf
insb
add
mov
popf
xor
and
mov
aaa
arpl
cmpl
mov
xor
aas
add
mov
add
jnp
and
pop
fildl
pop
push
dec
lret
dec
nop
xchg
rolb
mov
push
insb
push
dec
push
adc
mov
sub
adc
or
rclb
inc
jle
push
mov
cmp
pop
pushf
sub
pop
pop
sahf
lds
push
imul
xor
fiaddl
xchg
add
sub
icebp
xchg
adc
test
lcall
popf
mov
lods
loopne
test
ljmp
loope
in
shrl
xchg
je
gs
jno
pop
loop
mov
out
lods
fmull
sbb
clc
imul
push
sbb
jae
movsl
push
jnp
fs
sub
in
repnz
xchg
and
shll
in
roll
ljmp
sub
in
out
scas
movsl
xchg
sahf
fsubl
mov
popa
fisttpll
or
cs
push
pop
adc
outsb
rcrl
cld
pop
add
cmpl
fcmovb
nop
test
and
leave
int
adc
and
movsl
repz
lds
pop
les
sti
iret
icebp
div
jle
xor
add
addr16
movsl
lret
es
push
test
aam
ds
sub
adc
sub
mov
mov
jns
imul
sub
stos
inc
or
in
adc
mov
rcr
fxch
enter
mov
push
mov
test
sbb
pop
out
xlat
jo
push
cld
pusha
jno
std
push
scas
xchg
popf
shrl
imul
jbe
mov
mov
iret
xchg
cwtl
clc
cmp
push
pop
cmpsb
jp
sub
xor
ret
push
jno
gs
push
add
daa
jbe
idivl
mov
and
test
add
imul
add
jnp
inc
cmpsb
mov
dec
daa
xchg
and
xchg
lcall
cwtl
js
ja
lods
rcrl
mov
inc
push
inc
sbb
popa
aas
mov
and
cmpsb
nop
or
rcl
push
les
aas
int
aad
test
cmpsb
mov
push
sbb
xor
mov
xor
jge
push
test
pop
xchg
inc
fcmovnu
and
inc
flds
lret
rcl
jbe
lret
mov
out
cmp
dec
dec
or
lret
shr
fmull
in
cmp
pushf
ss
pop
pushf
sbb
repz
sub
std
cmp
bound
fucomip
fs
sub
jmp
outsl
imul
pop
dec
push
pushf
jae
sbb
add
jl
cmpsl
pop
cmpsb
repnz
mov
cli
lods
test
mov
inc
push
cmp
andb
cmp
idivl
inc
fmul
pusha
jne
dec
test
in
ja
dec
cs
inc
or
fdivl
mov
xchg
or
stos
add
inc
adc
out
and
lahf
pop
leave
jnp
movsl
in
ja
daa
fstps
cmp
push
dec
loop
mov
inc
mov
pop
jge
pusha
inc
inc
mov
divl
js
inc
imul
xchg
rorl
mov
cmp
ljmp
pop
fildll
hlt
and
insb
hlt
das
push
mov
and
sub
lcall
scas
xchg
loopne
loope
jmp
adc
shll
in
and
ljmp
mov
jo
dec
pop
mov
rorb
inc
lahf
jmp
sbb
jo
stos
push
loop
add
mov
negl
nop
mov
pop
xor
jmp
enter
mov
mov
xchg
add
into
cmp
pop
xchg
mov
iret
and
xchg
xchg
jb
mov
nop
or
jae
les
xor
xor
sub
pop
mov
ljmp
dec
pop
fcmovnb
in
xchg
loopne
adc
or
mov
inc
push
xor
imul
fisubrl
xor
pop
mov
sbb
pop
pop
or
cmpsl
xchg
pop
mov
imul
das
jecxz
jmp
adc
fwait
stc
pop
push
out
xor
hlt
fnsave
dec
dec
and
addr16
pop
add
jae
leave
out
iret
pop
shlb
jb
pushf
jl,pt
out
push
lock
sub
xchg
jnp
push
cli
push
repnz
push
push
fnstcw
movsb
pop
lock
loope
mov
mov
movsb
sub
jnp
outsl
stos
mov
lds
std
jl
mov
jne
cmpsb
jmp
mov
movsl
xchg
and
inc
push
pop
pusha
lock
sti
outsb
add
xor
inc
and
mov
ret
and
xchg
test
add
roll
sub
jbe
mov
push
ss
dec
adc
jmp
jmp
mov
in
lret
fcoml
sbb
fdiv
fisttpl
pop
cmp
mov
stc
popa
pop
cmpsl
popa
sbb
and
imul
push
test
imul
daa
fisubs
sub
popa
js
jnp
xchg
jge
mov
icebp
outsl
cwtl
sub
mov
jge
push
cmp
pop
jle
cmpl
adc
cltd
or
push
mov
ret
enter
mov
jo
jmp
jge
or
das
pop
or
mov
call
lahf
xor
scas
cmc
ret
gs
vmovmskps
test
sti
dec
adc
in
xor
sti
js
mov
xor
push
ljmp
imul
jl
inc
sar
hlt
test
pop
or
jns
addl
mov
mov
or
and
mov
in
sub
jl
xchg
into
cmp
stc
loopne
imul
int3
test
mulb
pop
sti
adc
mov
int3
std
mov
and
sbb
mov
xchg
or
icebp
pop
jno
test
xor
ret
mov
inc
jecxz
aad
inc
pop
push
arpl
lods
scas
adc
les
or
mov
pop
ljmp
jle
and
scas
arpl
mov
les
add
cwtl
movsb
notl
push
fs
outsl
ss
sub
or
leave
movsl
mov
jno
xchg
fs
pop
sbb
in
adc
push
outsb
loope
andl
leave
repz
stc
call
icebp
addr16
stc
movsl
jl
int3
cwtl
sbbb
jb
cmp
shlb
jecxz
dec
mov
aas
test
xor
xlat
movsb
cmc
and
repz
xchg
push
fidivrl
imul
or
sub
ss
loope
adc
std
aad
addr16
test
aam
inc
push
jle
pop
ret
pop
xor
data16
mov
adc
cmp
fisubs
roll
adc
outsl
scas
mov
push
inc
aad
mov
push
mov
es
xor
ja
and
sbb
and
flds
rclb
push
hlt
out
in
addb
shrl
fcomi
pop
sub
adc
add
lods
push
fcmovne
xchg
push
nop
int3
xchg
rcll
out
inc
inc
pop
xchg
sbb
mov
test
xchg
sub
push
fbstp
jbe
pushf
in
inc
add
sbb
mov
orl
push
pop
ret
shl
std
adc
cmc
repnz
addr16
push
lahf
mov
xor
repnz
sqrtps
aam
jns
or
inc
mov
stos
add
dec
ret
adcb
stos
push
arpl
or
cmpsb
xchg
sbb
pop
cwtl
adc
pop
mov
mov
jmp
cmp
repz
pop
sub
nop
jecxz
ret
cmpsl
pop
int3
idivl
mov
daa
mov
mov
movsb
mov
fdivs
add
das
jle
inc
pushf
pop
cli
pextrw
psubusb
add
or
xchg
testl
xor
jge
out
aad
fwait
out
mov
push
push
jo
xchg
cmc
movsl
sbb
pop
sbb
into
push
lret
cmpsb
mov
adc
push
sarb
pop
push
jg
add
lods
lods
ret
xchg
mov
scas
jo
mov
dec
pop
test
inc
add
mov
insl
cltd
lds
sub
push
sbb
jnp
xor
fimuls
mov
nop
sbb
jae
ja
cmc
inc
mov
adc
and
test
mov
sbbb
movsb
dec
jecxz
jb
adc
aad
or
mov
fstps
stos
sub
sbb
shl
dec
fmull
data16
cmp
push
mov
out
push
add
ss
push
xlat
mov
xlat
lea
ljmp
add
add
test
rorl
sbb
shlb
fildl
test
inc
outsl
sbb
dec
movsl
or
mov
mov
in
das
sbb
cli
mov
jecxz
xor
pop
mov
push
xchg
test
xchg
aad
pushf
daa
or
mov
and
inc
adc
add
andb
mov
push
repz
dec
xchg
mov
sub
jbe
test
adc
testl
pusha
nop
jecxz
gs
inc
mov
repnz
scas
sub
ss
inc
fldcw
lcall
mov
mov
je
call
jg
out
out
add
ja
and
mov
cmp
loopne
dec
xlat
or
pop
loopne
jo
sub
frstor
jecxz
imul
orb
test
adc
jae
stc
cwtl
popa
cmp
sub
and
cmc
out
aas
and
les
mulb
leave
xor
mov
les
inc
push
sbb
xlat
xor
sbb
popa
out
push
cmp
pop
cmp
cmp
cmp
ja
movaps
loope
lods
cmp
and
adc
mov
jl
add
test
and
xorl
les
icebp
inc
dec
or
pop
dec
fadd
xchg
push
pop
jle
inc
js
lea
mov
add
xchg
pop
inc
xchg
or
xchg
push
inc
pop
inc
in
subb
push
dec
scas
aaa
inc
out
pop
mov
xchg
ret
rcr
jmp
out
cld
std
mov
xchg
in
pop
pop
cmp
adc
lahf
push
push
push
jae
sub
out
arpl
lock
jb
das
jecxz
or
mov
add
scas
fstpt
ss
out
xlat
sbb
je
mov
imul
mov
xor
add
sahf
icebp
adc
addb
mov
adc
ja
mov
popl
jecxz
lds
lods
imul
fdivl
test
addr16
fpatan
ror
aas
insb
jns
inc
jnp
je
sbb
lahf
pop
xchg
lods
cmp
fsubs
xchg
cwtl
popf
cmp
nop
imul
inc
pop
pop
out
mov
les
sahf
pusha
es
mov
xchg
je
jno
add
into
imul
ret
lcall
scas
or
rcrl
xor
jge
mov
pop
adc
shll
jecxz
xchg
lret
mov
mov
xchg
cmpb
xorps
push
roll
sbb
stc
cmpsb
inc
aam
cltd
jle
inc
jge
les
push
sub
lahf
aaa
in
pop
fwait
mov
stos
pop
push
pop
push
sbb
fsubrp
fidivrs
inc
dec
pusha
int
shl
mov
jg
or
cmpsb
mov
mov
inc
dec
jmp
dec
push
sub
out
mov
sbbb
filds
inc
mov
fst
test
in
dec
sub
sub
incl
push
test
push
clc
out
sub
dec
imul
out
inc
sub
cmp
push
and
andl
out
out
xor
mov
push
in
loop
add
cmp
cltd
or
sbb
inc
pop
push
fs
and
pop
in
ficoms
shrb
xchg
mov
es
shlb
or
ja
fldenv
inc
enter
add
popa
jmp
std
test
lods
fists
test
fisubs
adc
lret
test
sub
shrb
notl
andl
ja
mov
mov
inc
ret
imul
xchg
aaa
fidivrs
mov
movsb
push
ja
lds
vandnpd
jo
repnz
imul
subl
sti
lret
xor
and
pop
ss
and
or
push
cmp
mov
mov
sarl
or
stc
pop
mov
lds
dec
adcb
sbb
or
jmp
nop
andb
movsb
outsb
push
xor
add
mov
scas
nop
movsl
or
fucom
mov
adc
rcll
inc
mov
les
jmp
andb
lcall
cwtl
mov
push
mov
data16
into
rcrb
inc
outsl
testb
lea
sahf
mov
mov
ret
fistl
sbb
incl
sbb
lret
sbb
mov
inc
xchg
adc
mov
mov
pop
jne
shld
gs
es
js
sub
ret
repz
cmp
jge
pop
mov
mov
mov
push
adc
dec
jns
mov
xchg
pop
cmp
ds
pop
stc
out
sbb
out
lods
imul
lods
lcall
jecxz
mov
std
pushf
dec
insl
inc
clc
or
sbb
mov
lret
dec
sub
int
outsl
sub
mov
insb
lock
and
clc
xchg
mov
or
mov
mov
imul
mov
daa
sub
imul
adc
push
cmp
mov
xchg
or
enter
fcmovnbe
xchg
cmp
shlb
movsb
mov
mov
in
mov
sahf
fildl
gs
enter
sub
ret
jno
bound
xor
mov
pushf
iret
hlt
ficoml
out
jae
shlb
out
jbe
xor
inc
or
pop
push
inc
adc
sub
add
arpl
ja
inc
push
imul
popl
jbe
sbb
xchg
fcompl
notl
mov
xor
popa
mov
loope
inc
out
mov
test
pop
inc
movsb
jb
mov
imul
rol
pop
les
dec
movsl
aam
pop
inc
icebp
mov
and
es
imul
jle
jae
leave
aad
lcall
sub
inc
mov
jbe
mov
fistpl
mov
out
lcall
shll
sub
insb
mov
mov
aaa
movsb
push
int3
xchg
mov
out
fcmovu
xchg
incb
and
add
push
sub
sti
cltd
fdivr
or
iret
add
pop
ret
dec
sahf
and
ret
in
pop
xor
dec
mov
cmp
out
mov
cmpsb
and
inc
pop
outsl
iret
hlt
adc
ret
push
and
xlat
ret
movsl
jae
ret
cmp
sub
add
adc
jg
stos
mov
mov
pop
or
add
add
push
repnz
pop
gs
sarb
xorl
sub
xor
jae
and
adc
xor
sub
loopne
xchg
mov
add
lds
adc
mov
hlt
lock
das
push
cmp
movsb
push
add
mov
adc
jo
jl
mov
dec
xchg
jnp
xor
sarb
jl
fldenv
subl
mov
sbb
lcall
test
in
xchg
enter
cld
int
insl
mov
loop
sub
lret
and
cld
scas
inc
fldenv
adc
add
mov
popf
xor
xchg
jne
and
cmp
adc
cmp
sbb
mov
push
mov
hlt
pop
out
sub
adc
mov
jle
incl
cmp
aam
enter
les
out
mov
mov
gs
rorl
psubd
add
push
cmp
xchg
sub
aaa
fsubrs
sub
js
insb
mov
jo
xor
add
mov
push
mov
and
mov
cmp
out
lahf
sbb
dec
sti
sbb
and
rcll
dec
sub
dec
enter
and
call
add
aaa
adc
pushf
dec
mov
ljmp
or
cwtl
sbb
dec
dec
repnz
adc
push
inc
xchg
daa
test
adc
jg
xchg
out
sbb
out
add
mov
xor
adc
loop
mov
jo
xlat
iret
push
push
push
or
dec
push
and
push
pop
and
nop
popf
idivb
mov
add
mov
imull
enter
test
pop
mov
mov
addb
shll
push
outsb
adc
add
test
shrl
lock
jo
adc
jo
push
pop
mov
in
cmp
dec
and
movsb
cmp
add
xchg
xchg
and
fidivrs
inc
adc
int3
inc
cmpsl
fidivs
imul
adc
lahf
ret
cmp
or
test
mov
insb
xor
mov
push
in
loop
cmp
lahf
jle
sbb
fnstsw
shrb
rol
stc
les
dec
scas
inc
lahf
add
lret
arpl
loope
cltd
lahf
faddl
movsb
cmp
outsb
mov
imul
cli
inc
das
mov
lock
mov
ret
std
inc
in
out
mov
xorb
aam
cmp
and
inc
fcompl
inc
xor
xchg
xchg
dec
add
cmpsl
insb
jne
adc
mov
loopne
nop
inc
push
inc
in
mov
lods
sbb
sub
aam
or
test
cmp
or
add
fadds
inc
gs
push
out
sahf
dec
cmp
ret
cmc
pop
fimull
imull
xor
xor
arpl
adc
mov
mov
xorl
mov
or
cwtl
xchg
mov
repz
int3
scas
jl
sbb
push
dec
and
push
mov
fimuls
cmp
mov
in
arpl
add
cmp
lret
sub
or
jbe
pop
xchg
jle
jl
push
stos
push
xor
xchg
lock
jmp
add
cmp
pusha
outsb
and
dec
add
clc
cld
sbb
ss
add
cmp
mov
jge
sub
out
mov
test
xchg
movsl
dec
push
inc
pop
rorb
outsl
mov
xchg
and
cmp
ss
in
add
push
bound
lcall
pop
pop
cltd
into
hlt
cmp
cwtl
int3
nop
xchg
imul
xchg
jb
popa
sub
and
xlat
add
jmp
mov
push
aam
lock
das
je
pop
dec
push
jne
popa
out
add
clc
stos
push
bound
add
pushf
loope
dec
lea
and
xorl
iret
movsb
inc
or
dec
int
or
push
sarb
fisttpl
push
sub
jle
stos
insb
inc
and
sbb
in
lret
cmp
sahf
pop
push
addb
pushl
sbb
in
mov
jbe
dec
daa
loope
jnp
aaa
and
popa
jbe
adc
jecxz
loopne
cmpsb
in
inc
mov
adc
call
xor
and
addr16
pop
fwait
test
push
lds
call
stc
test
scas
pusha
mov
dec
mov
pushf
dec
sub
js
lret
ret
xchg
xor
sahf
jb
sti
in
loopne
mov
imul
or
pop
and
lea
mov
cmp
add
pop
fnstsw
dec
cmp
in
loop
add
scas
js
inc
ja
movsb
mov
jns
fsubrl
mov
jb
test
pop
call
lods
gs
scas
adc
cmp
add
je
out
mov
mov
bound
or
xchg
les
rcrl
scas
pop
mov
dec
mov
push
inc
push
hlt
cmp
sbb
jmp
pop
jnp
jno
rolb
jns
adc
jae
loopne
loope
jecxz
mov
and
xor
loop
scas
cmpsl
in
add
pop
adc
xchg
mov
hlt
inc
xchg
mov
or
sbb
mov
jae
pop
inc
jo
sbb
dec
inc
out
imul
cmc
cs
xor
hlt
jle
cmpsb
xor
fimuls
lods
pop
pop
shrl
dec
andl
cmpsl
add
fmul
sbb
imul
movsb
into
les
dec
cli
jnp
out
mov
into
aas
cmpsb
and
int3
dec
xchg
ret
adc
out
xchg
aam
and
mov
xor
out
cs
shll
test
fisttps
cmp
scas
mov
loopne
in
hlt
adc
adc
jae
push
das
loope
rclb
push
movsb
aas
mov
mov
push
ja
scas
pushf
lea
push
add
mov
pop
sbb
xchg
cmpsl
test
mov
inc
scas
and
test
inc
pop
mov
ficomps
movsb
adc
dec
mov
push
fimuls
sub
icebp
mov
xor
pop
cmp
mov
mov
xor
mov
cld
jo
xchg
cmp
xor
in
cmp
cmpsl
data16
xor
xchg
mov
and
add
je
out
cmp
repnz
mov
mov
adc
add
add
xchg
lea
xchg
inc
aaa
adc
push
movsb
rcr
shl
sbb
shll
pop
es
lcall
fld
test
int3
cmp
add
dec
popf
scas
stos
es
or
and
mov
pop
jo
cld
pop
insl
ds
xchg
pop
xor
lea
cs
xchg
adc
das
movsb
mulb
xchg
add
mov
mov
cwtl
and
sbb
push
rcl
clc
int
mov
sbb
and
test
or
popa
cmpsl
push
add
or
das
imul
xchg
mov
rcll
bound
add
add
dec
fwait
xor
pop
jae
je
jecxz
ds
mov
xlat
mov
inc
mov
nop
pop
mov
insl
pop
je
shl
xchg
cmp
mov
popf
cmpb
es
rclb
lods
xor
in
cmp
ret
sarb
push
sub
test
inc
sbb
je
repnz
pop
lock
fucomi
mov
in
negb
loope
cli
mov
push
loope
sbb
rol
jnp
test
pop
pop
insl
pop
jmp
sbb
pop
in
lahf
sbb
addr16
clc
out
stos
adc
or
xor
and
inc
or
rorl
jmp
leave
mov
or
sub
jl
pop
pop
rol
adc
popa
push
fldenv
add
xlat
js
je
ficoms
stos
iret
addl
inc
and
fwait
add
jbe
xchg
les
jl
push
jp
out
lods
leave
loop
push
cmp
insb
and
enter
inc
pop
or
jmp
xchg
xor
test
fwait
jmp
les
insb
scas
shr
fcomi
jae
pop
add
andb
out
mov
fimull
and
testl
pushf
inc
cmc
out
push
ret
inc
ds
push
jmp
mov
xchg
movsb
rclb
adcb
or
int3
mov
add
inc
mov
in
ljmp
cltd
pop
and
push
pop
adc
mov
xor
aaa
aas
and
jb
and
jecxz
movsb
pop
cmp
jno
stos
imul
sbb
ret
inc
repz
testl
sbb
jl
dec
push
fdivrp
inc
in
gs
mov
xor
dec
pop
sub
push
leave
add
xor
lock
jne
out
js
push
mov
lods
es
sub
insl
and
movzwl
stos
cltd
xchg
push
inc
pop
scas
xor
push
push
sub
decl
clc
jo
dec
pop
mov
and
push
jle
psubsw
test
push
sbb
push
push
dec
movsl
and
xor
pop
xor
sarl
adc
sbb
mov
dec
int3
add
sbb
xchg
rorl
js
and
lock
std
dec
insb
xor
sub
sbb
call
out
stos
push
int
rcrb
xchg
dec
lret
mov
std
dec
mov
out
push
cmp
jbe
pop
xlat
push
mov
movsb
negl
cltd
pushf
adc
test
pop
mov
cwtl
sbb
inc
mov
mov
lcall
scas
in
jne
test
sub
mov
pop
cmp
dec
cs
pop
jns
out
rorb
das
sti
imul
js
pop
jmp
scas
jnp
sbbb
jbe
ljmp
dec
sub
das
stos
inc
and
jmp
mov
push
pop
enter
xor
pop
mov
pop
jo
xchg
scas
jb
sub
imul
mov
pop
xchg
dec
add
push
lret
andl
push
mov
out
shll
cmp
pop
xor
mov
dec
nop
in
notl
inc
iret
dec
dec
lcall
iret
jl
outsb
movsl
lret
std
scas
vmovapd
mov
mov
ljmp
sub
loope
sbb
pop
add
mov
cmp
cs
imul
fcomp
lcall
fnop
daa
push
push
xor
and
push
cmp
jecxz
pop
inc
cmpsl
sub
jns
lds
xchg
lods
pop
pop
add
stc
insb
sub
fs
dec
cmp
mov
fdivs
xchg
xchg
dec
and
sbb
shrb
pop
pop
jnp
inc
ret
mov
dec
xchg
sbb
push
mov
test
out
dec
push
mov
pop
stos
sub
lret
lret
cwtl
pop
adc
xor
sub
rorb
sub
mov
pushf
jns
dec
mov
lahf
imul
cmc
cmp
cmpsb
add
mov
pusha
and
fs
pop
inc
rorl
push
sbb
xchg
push
mov
xchg
mov
mov
and
xchg
aas
pop
and
jbe
sub
sub
sbb
gs
test
pop
xchg
mov
cmp
sub
and
mov
mov
test
sbb
je
sarb
push
or
add
orb
jne
xchg
cmpsl
and
jne
push
adc
pop
xchg
rolb
inc
mov
fbld
sbb
jo
mov
roll
cwtl
repnz
test
sbb
and
mov
and
dec
cmpsb
into
sbb
frstor
and
les
test
mov
in
jmp
dec
sub
adc
or
cli
popa
fmulp
leave
js
adc
mov
adc
test
aaa
iret
sar
sti
dec
sub
push
and
pop
and
mov
cmp
dec
inc
les
dec
xor
int
mov
std
mov
jge
lock
xor
div
add
bnd
sti
jle
insl
lret
shr
pushf
mov
movsb
pop
test
mov
xor
dec
jne
push
sub
in
es
mov
or
inc
push
cld
jecxz
push
mov
or
in
cld
inc
addb
pop
aad
stc
push
jbe
test
xchg
xor
js
jne
mov
and
roll
js
test
out
out
movsb
mov
inc
je
dec
insl
and
push
pop
clc
inc
sub
cli
shrl
push
addr16
jb
aaa
ret
int3
shrl
cmp
stos
pop
idivl
sahf
data16
scas
and
xchg
pop
mov
test
test
adc
and
out
adc
xchg
imul
lret
xchg
sub
insl
and
int
cmp
add
andb
cld
jo
int3
aad
sbb
add
add
test
adc
push
sbb
mov
daa
pop
mov
adc
out
fisubrs
sub
out
xchg
xorb
or
aad
enter
mov
arpl
xchg
xchg
mov
in
in
fldcw
add
arpl
adc
outsb
lds
mov
fs
xchg
insb
mov
jecxz
jg
mov
xor
mov
in
sbb
insb
scas
cltd
jle
sbb
push
jp
jbe
xchg
addr16
shll
sub
int
mov
and
sbb
and
add
int3
inc
int3
sbb
dec
ja
push
pop
jecxz
cmc
adc
lea
xchg
cmp
hlt
into
movsl
dec
fdivs
test
jbe
scas
pop
je
test
push
adc
loop
cltd
sbb
jno
sub
fnstcw
sbb
sbb
fnsave
mov
shlb
cmp
repnz
imul
in
loope
ror
add
lods
push
lods
push
bound
call
gs
in
push
dec
adc
fildl
xorl
add
lcall
add
inc
test
dec
jo
gs
xor
aas
neg
jge
push
and
imul
jge
add
sbb
testl
adc
sub
inc
sub
aaa
sub
add
icebp
pop
inc
add
adc
repz
xchg
loope
sub
lea
leave
mov
icebp
jle
aas
imul
mov
mov
push
rol
sbb
iret
ss
test
loope
inc
mov
stc
xchg
fisttps
sub
ds
out
inc
jle
sti
jg
cs
sbb
mov
cwtl
sub
mov
iret
call
adc
insl
fstl
mov
mov
add
push
cli
out
pop
ja
sbb
es
sbb
cmp
test
inc
sbb
mov
mov
imul
and
call
scas
jbe
lock
ror
pop
xchg
call
cld
imul
test
pop
jae
inc
aad
mov
loop
test
sbb
pop
pusha
int3
rcr
mov
pop
adc
addr16
sbb
xor
mov
or
pop
pop
or
mov
lds
out
mov
pop
mov
int3
dec
xlat
mov
jp
dec
in
sub
loope
or
push
aaa
jo
mov
sub
xchg
inc
into
lea
test
bound
stc
jnp
or
mov
xchg
cmc
lahf
xor
std
pusha
frndint
lods
movsb
imul
and
icebp
sbbl
cmc
lods
fstpt
imul
arpl
add
ret
lea
jb
je
cwtl
mov
push
arpl
pop
add
ret
in
adc
dec
and
inc
repz
daa
jl
pop
push
mov
loope
jp
cmp
lods
dec
push
add
cmp
rorb
push
add
mov
mov
cmp
std
dec
cmp
adc
out
jo
imul
push
pop
cltd
fimuls
insl
arpl
scas
or
mov
cli
push
loopne
insb
scas
pop
inc
push
std
mov
cmp
jge
jb
lods
negl
dec
es
push
pop
jne
ljmp
add
add
dec
pop
inc
pop
mov
fs
cld
push
sub
repz
dec
sti
fdivr
xor
or
pop
or
ficompl
jle
lret
cmp
imul
cs
cmc
mov
cld
add
int
loop
xchg
pop
xlat
lretw
add
movsl
jnp
sub
sbb
adc
add
das
js
es
fcmovb
outsb
jae
out
in
test
jmp
loope
jg
lock
xor
dec
mov
rcll
push
rolb
mov
mov
inc
imul
call
fisubl
pop
jae
push
pop
sub
mov
popf
jns
inc
daa
jb
insb
repz
mov
icebp
cmp
mov
mov
add
adc
dec
mov
imul
jp
push
and
adc
mov
shll
icebp
or
ds
add
add
adc
and
mov
pop
jmp
dec
insl
adc
jecxz
in
mov
inc
jg
cld
sub
sbb
mov
cld
or
daa
inc
test
adc
out
popf
nop
incb
addr16
inc
inc
adc
jmp
sahf
push
xor
push
cmp
inc
jbe
jne
roll
fs
sarb
inc
mov
ljmp
sbb
pop
int3
adc
mulb
lahf
xchg
fbstp
repnz
adc
adc
xchg
xor
fildl
cld
jle
mov
adc
xor
fstpl
push
scas
push
pop
or
std
cmp
push
arpl
adc
push
adc
add
cld
icebp
addr16
notl
scas
xchg
pop
adc
out
stos
jb
pop
clc
insl
repz
jae
mov
lcall
daa
or
fmull
xchg
or
dec
daa
enter
sti
test
pop
hlt
fs
xor
jne
and
out
xchg
xchg
jne
mov
pop
out
lods
out
xor
cltd
decl
mov
jo
movsl
sbb
lcall
add
jns
outsb
cmp
cmpsb
inc
xor
cmp
movsl
or
sbb
out
cmpsl
gs
dec
pop
inc
mov
dec
ffree
imul
pop
in
aas
inc
cli
out
mov
pushf
jae
pop
icebp
jecxz
jae
ss
ljmp
into
or
pop
mov
int3
call
lea
insl
dec
jmp
enter
sub
imul
dec
inc
popl
push
push
cmpsl
cmp
dec
push
dec
push
jae
sbb
xorl
mov
and
adc
jns
xchg
pop
cmp
clc
into
outsl
xorl
int
pop
repz
out
pop
test
fisttpll
adc
push
sbb
mov
or
inc
mov
scas
testb
or
mov
arpl
cs
je
lock
pop
je
cmc
imul
bnd
test
insl
iret
test
loopne
stc
or
lea
xor
fistpl
inc
repz
jne
mov
std
clc
or
add
in
ror
mov
inc
push
ja
mov
or
xchg
jns
sahf
mov
dec
cmp
mov
xchg
enter
add
add
inc
sub
pop
stc
or
xlat
ret
and
bound
adc
xchg
jmp
dec
orl
imul
add
mov
jg
fists
movsb
pop
gs
pop
add
imul
add
insl
lds
mov
hlt
sbb
pop
push
sub
insl
jb
shlb
add
sub
sub
pop
subl
nop
pop
mov
add
cmp
adc
add
lret
js
into
add
fbld
push
sbb
xchg
jmp
frstor
scas
into
mov
and
leave
idivl
fimuls
inc
movl
jmp
fcoml
popf
fimuls
xchg
jnp
scas
and
mov
aas
ljmp
add
dec
cmp
es
movsl
sbb
mov
sbb
leave
jne
xor
repnz
hlt
xor
popa
pushf
mov
xor
lods
arpl
ljmp
and
nop
loope
or
mov
out
out
scas
add
push
cmpsl
pushf
push
xor
mov
lock
out
rep
mov
push
pop
mov
adc
cld
dec
sub
popa
pop
enter
mov
push
std
mov
aad
add
xor
es
dec
xchg
sbb
inc
push
or
and
mov
dec
sbb
lods
mov
ss
xchg
enter
mov
mov
xor
sbb
cmp
sahf
leave
dec
mov
addl
negl
inc
mov
ret
fldenv
push
pop
inc
inc
pop
ljmp
sbb
adc
pop
push
hlt
cs
jp
cmp
mov
mov
icebp
cmp
out
pshufw
mov
or
sub
inc
cwtl
scas
adc
jg
cmpsb
lds
cmpsl
ret
add
cmp
pop
repz
adc
dec
jmp
mov
xchg
pop
or
je,pt
ja
and
xor
js
push
jo
xor
lret
in
fldt
dec
lahf
daa
jg
mov
pop
jnp
xor
mov
sub
xor
call
cmp
fnsave
push
hlt
iret
mov
sbb
sahf
pop
and
out
xor
aam
stos
lds
mov
pop
dec
push
test
inc
test
enter
imul
nop
cli
sub
pop
dec
pop
sub
jne
icebp
cmp
push
add
insl
and
push
push
add
add
cmc
ret
pop
mov
hlt
inc
push
and
or
lds
push
cmp
lcall
ja
cmpsl
sti
mov
arpl
pop
push
jae
idivb
push
ja
and
xorb
mov
fists
movsl
jae
int
cmpsl
pop
mov
lcall
out
push
test
outsb
inc
pop
pop
dec
daa
jecxz
mov
enter
ja
bound
sbb
call
mov
mov
xchg
dec
cltd
scas
lcall
subb
jne
aam
repnz
xlat
hlt
and
call
sbb
push
mov
aas
mov
fwait
sahf
push
pop
xor
dec
inc
dec
fildl
lea
adc
dec
nop
adc
push
dec
mov
jg
jne
lea
adc
mov
in
jnp
cltd
icebp
jg
lcall
testl
mov
pop
addr16
pop
outsl
mov
pop
sub
mov
cs
imul
sub
mov
out
and
xor
or
mov
dec
outsb
xchg
cmp
xchg
cmpsb
negl
icebp
icebp
xor
cmp
sahf
mov
in
jmp
mov
mov
add
ffree
mov
jnp
sbb
daa
mov
mov
mov
dec
aas
int3
push
cs
and
loopne
aaa
and
jb
push
and
jg
adc
lcall
jne
and
int3
and
mov
sti
sbb
jmp
jns
cmp
inc
enter
ret
dec
push
sub
dec
dec
or
dec
das
repz
test
jmp
lahf
mov
stos
mov
gs
jp
cmp
jae
inc
jne
into
jae
mov
hlt
cmpsb
mov
call
mov
xor
adc
jmp
inc
lea
lds
in
lods
push
fisubrs
hlt
in
push
mov
or
cmp
inc
pop
jbe
pop
inc
xchg
icebp
js
inc
xchg
adc
or
xor
push
shll
jl
xchg
adc
jmp
adc
jmp
lcall
leave
jmp
lahf
lea
jbe
sub
or
inc
inc
jle
add
mov
pusha
xchg
shl
imul
cmp
addb
pop
dec
mov
out
data16
les
push
test
popf
push
sbb
jns
push
es
jge
mov
add
mov
data16
lods
mov
or
cmp
mov
dec
inc
inc
cmpsl
cmp
cmp
adc
lahf
in
dec
mov
jecxz
es
adc
call
sub
cli
popa
xor
adc
fcomip
gs
pop
aas
or
push
dec
jle
imulb
mov
lds
cld
xchg
mov
pushf
es
and
ja
push
jg
nopl
pop
jnp
out
dec
aaa
jg
icebp
popa
mov
mov
nop
clc
cmp
ljmp
test
push
adc
and
cmp
add
pop
cwtl
mov
push
mov
add
dec
fwait
adc
fisubs
add
mov
aad
in
add
int
inc
int
and
fbstp
push
ja
lods
cmc
xor
jmp
sbb
add
shll
aaa
jecxz
inc
out
pop
pop
cld
rol
pop
or
iret
fs
les
les
lea
adc
push
test
mov
insl
out
enter
xor
mov
inc
ret
cmp
push
xlat
adc
dec
xchg
or
push
insb
dec
imul
xor
and
loop
or
inc
cli
dec
movsb
xor
cmp
lods
mov
xor
cltd
mov
je
aam
sahf
xchg
inc
ret
ror
lcall
jge
pusha
add
leave
add
push
push
or
leave
push
xchg
dec
xor
or
iret
adc
ja
dec
dec
adc
insl
pusha
add
iret
cmpsb
movsb
mov
test
and
and
std
loop
cmpsb
and
popa
cmp
add
xor
outsl
andb
xor
pop
stc
mov
pop
sub
std
scas
cltd
push
jbe
jl,pt
jns
push
sbb
jb
inc
ret
pop
addr16
push
jbe
fiadds
mov
fcomi
cwtl
jno
jecxz
mov
mov
call
ret
movsl
push
and
pop
cwtl
insb
les
or
push
lea
sti
pop
lods
into
fisttpl
fisubrs
add
imul
add
mov
loopne
imul
sub
pushf
test
dec
stos
jae
xchg
nop
mov
stc
adc
inc
aaa
fimull
cmp
add
ljmp
sbbl
or
xor
les
gs
add
mov
gs
cmp
pop
jge
sub
inc
add
mov
jle
mull
fs
sbb
cltd
mov
in
add
mov
ja
mov
rcrl
addr16
or
repz
popf
test
pop
push
aam
pop
daa
and
mov
adc
sbb
sub
add
mov
or
sub
adc
mov
fld
lock
in
imul
notl
mov
jne
imul
jge
loopne
icebp
fcompl
and
out
data16
jno
xor
push
stc
xchg
arpl
ret
inc
xchg
or
roll
sbb
daa
adc
xlat
add
movsl
mov
scas
sbb
cs
fnstcw
cs
orb
orl
dec
out
dec
jle
lods
out
imul
adc
imul
and
jp
sbb
in
lock
add
sub
push
mov
sbb
icebp
add
cli
mov
mov
xor
cmpsb
jge
sbb
sub
fs
pushf
int3
imul
je
jecxz
xchg
fstps
add
mov
fistl
movsl
lret
dec
or
mov
insb
jb
js
pop
ds
stc
rol
adc
mov
mov
jge
sbb
xor
push
shrl
nop
in
push
fldt
jnp
adc
push
lea
and
adc
sbb
mov
jno
daa
mov
aaa
mov
xor
adc
loope
clc
scas
test
adc
enter
lret
cmp
jle
lret
repnz
lret
mov
dec
xor
cmp
sub
sub
push
lods
mov
xor
dec
and
jae
mov
ja
sbb
aas
stos
enter
leave
inc
loop
inc
std
fsubs
cld
jnp
or
mov
pop
dec
ds
lahf
je
mov
push
sub
addl
add
and
pop
repnz
mov
push
add
ss
cli
lods
xchg
add
adc
in
pop
in
lock
dec
punpcklwd
lcall
rorb
je
call
sar
mov
cvtdq2ps
mov
and
inc
push
stos
jbe
push
scas
push
cmp
stos
lock
loop
ret
inc
ljmp
push
jno
outsb
repnz
shll
pop
push
pop
insl
dec
ror
sbb
push
fsubrl
inc
mov
cmp
and
loop
movsb
fistpl
out
sub
lahf
arpl
pop
lret
fwait
hlt
repz
jl
out
inc
test
and
repnz
or
mov
dec
pop
xchg
jmp
iret
ja
push
dec
mov
in
std
cmp
and
add
sub
out
xchg
ja
inc
sbb
out
je
dec
popf
dec
int
ja
scas
cltd
pop
and
ss
pop
cltd
out
fldl
stos
mov
rcr
cmp
es
dec
cmp
sbbb
mov
imul
and
xchg
or
jb
lret
sbbb
iret
inc
mov
push
lods
sti
jmp
sub
ss
arpl
xchg
cmp
xor
cmp
mov
xchg
lcall
test
mov
addb
out
icebp
pop
into
test
sub
add
outsl
rorb
xor
xchg
mov
jb
xor
jg
add
out
pop
adc
cmp
out
ss
sub
divl
mov
fstpt
ficoml
out
jl
xchg
into
inc
hlt
mov
add
adc
std
data16
pusha
mov
or
pop
into
push
sub
js
cmovns
aad
out
popf
cmp
sti
sbb
cmpb
fdivs
mov
aam
in
loop
jbe
sbbl
sbb
in
adc
in
adc
xchg
adc
adc
cli
dec
add
sbb
scas
xchg
scas
mov
push
sub
int3
mov
jmp
cltd
pop
mov
jmp
ret
loope
stc
push
jns
inc
xlat
cmp
aad
dec
xor
and
add
inc
dec
dec
dec
repz
cltd
xor
movsl
test
xchg
not
and
mov
xchg
scas
xchg
gs
icebp
jb
out
fs
test
jl
mov
pop
dec
mov
lods
xchg
adc
mov
or
sahf
ss
pusha
push
or
cmp
mov
and
nop
mov
popa
cltd
and
push
insl
movsl
aas
adc
and
mov
mov
popf
ret
adc
cmpsb
test
sbb
bound
add
mov
mov
call
mov
ss
data16
sub
dec
les
pop
inc
push
xchg
xchg
aad
push
and
loopne
data16
mov
push
add
stos
or
sub
jge
xchg
cmp
stc
sub
scas
fdivl
push
fnsave
mov
int3
aaa
daa
cmp
cmp
das
lods
lcall
mov
cmovae
shll
adc
jnp
xchg
in
xor
push
daa
in
push
into
mov
sbb
scas
xchg
push
cmpsl
inc
cmp
jno
cmp
inc
decb
sub
not
aas
mov
stos
cmp
jns
lret
das
jbe
pop
mov
sub
mov
sbb
cmc
rclb
lods
mov
clc
pop
in
call
test
imul
jno
sub
arpl
jecxz
scas
imul
negb
nop
mov
mov
fs
push
fcmovb
and
jno
sub
xchg
je,pt
xor
dec
fldz
jmp
xor
inc
cmp
mov
mov
loope
mov
jp
push
xchg
ds
cmpsl
xlat
es
pushf
add
push
jg
xchg
cltd
and
or
ss
cmc
mov
mov
sbb
int3
add
je
jle
ss
dec
orl
mov
leave
dec
int
adc
mov
mov
rcrb
cmp
or
hlt
fbld
mov
push
int
cmp
in
arpl
aaa
mov
test
mov
add
add
pop
cmpsb
adc
mov
test
push
ss
jb
add
imul
add
aad
stos
nop
xchg
xchg
ficomps
int3
movb
xchg
xor
mov
sahf
lcall
pop
xor
dec
cmp
push
insl
icebp
popa
lods
pop
in
cwtl
loopne
adc
addr16
push
or
pop
pop
jno
inc
sbb
mov
icebp
add
pop
jl
mov
jp
into
mov
ja
mov
sub
adc
xchg
in
or
pop
adc
xchg
cmc
mov
push
lahf
vcvtsi2ssl
popf
imul
xchg
mov
sub
std
cmp
cmpsb
gs
movsb
icebp
nop
into
jmp
nop
jno
ljmp
xchg
leave
lret
ret
dec
stc
rclb
inc
jmp
cmp
jg
inc
mov
dec
mov
incb
andb
rolb
mov
dec
sbb
test
ret
movsl
mov
loop
or
lods
iret
aaa
ret
add
pop
loope
add
mov
xor
cmpsl
mov
adc
data16
rolb
xchg
imul
push
jmp
dec
ljmp
shl
jle
dec
jecxz
hlt
rolb
arpl
mov
cld
ror
push
jecxz
cmp
adc
ja
jp
jnp
push
jnp
pop
js
sub
sti
mov
outsl
aaa
aam
sti
adc
mov
mov
dec
into
testl
xchg
iret
sub
fistpl
pop
cld
xchg
dec
in
xchg
andb
push
or
dec
jmp
inc
mov
jne
dec
add
fidivrl
fs
mull
push
xor
xchg
mov
test
lcall
pop
test
std
jmp
addb
jo
add
ret
shlb
and
lcall
mov
loope
sbb
dec
into
test
mov
loop
js
mov
mov
ds
sbb
adc
rorb
xchg
mov
test
add
inc
je
lds
or
add
jne
cmpsb
ljmp
stos
push
test
adc
lret
inc
sub
dec
and
stc
jns
lret
mov
cmovae
lods
cmp
xchg
mov
mov
mov
sub
jb
push
stos
mov
cli
jecxz
push
inc
and
jge
stc
mov
dec
sub
or
enter
imul
mov
cwtl
scas
push
cmp
mov
cli
ljmp
imull
add
test
in
and
push
xchg
out
insb
mov
enter
mov
stos
out
xchg
jbe
jmp
sti
sub
mov
push
adc
ss
jb
and
mov
xlat
add
jb
sub
mov
inc
mov
js
out
mov
cmc
jmp
insb
ljmp
insb
daa
mov
jl
fadds
xlat
mov
push
icebp
shll
jmp
pop
jle
lret
mov
cli
hlt
cmpsl
out
inc
dec
in
jno
and
pushl
nop
adc
hlt
in
cmp
xor
mov
jne
adc
stos
lds
daa
jb
aas
jns
lret
int
adc
cli
gs
or
pop
push
add
aam
in
add
scas
sub
fcompl
jmp
adc
sbb
sti
movsb
cli
xchg
jbe
fidivrs
inc
arpl
add
arpl
ss
cmp
out
cmp
faddp
mov
xchg
mov
sahf
dec
adc
out
lret
scas
stc
out
stos
aaa
cmp
filds
cmp
xor
dec
lcall
ds
js
jp
pop
test
in
jbe
adc
arpl
loopne
test
das
push
mov
mov
adc
outsl
loopne
push
sti
popa
lea
movsb
jle
enter
sub
jp
pop
scas
mov
xchg
int3
adc
inc
mov
add
lret
fwait
jle
adc
or
and
aaa
gs
inc
cmpsl
push
das
out
mov
sbb
scas
add
sbb
jb
ja
stc
les
fisttpl
mov
les
jns
jp
icebp
inc
idivb
mov
insl
ds
je
movsl
imul
or
aam
sub
xchg
inc
xor
mov
leave
sub
cmpsl
jmp
adc
push
inc
xor
lret
mov
cmpsl
cmpsb
fwait
inc
mov
hlt
mov
adc
pusha
mov
add
flds
fnsave
int3
sti
vaddsubps
adc
lds
push
jl
inc
inc
mov
sbb
out
sti
sub
es
insb
clc
xchg
pop
in
sti
add
imul
add
shlb
fs
pushf
fdivl
or
add
xor
push
cmp
xchg
cmp
push
lock
sbb
movsl
lahf
ret
xchg
dec
repnz
fldl
in
or
inc
xor
mov
dec
mov
jg
outsl
addr16
adc
jae
xor
pop
inc
ret
xor
sub
or
or
xchg
add
in
mov
xor
idivb
int3
into
pop
pop
jle
adc
stos
xchg
pop
repnz
jecxz
jae
add
dec
push
ficompl
jns
cmp
lock
scas
add
mov
add
xchg
subl
rcll
xchg
insb
popf
ret
add
pop
aad
xor
and
cmp
pop
push
repz
out
lret
mov
cmp
std
xchg
adc
jb
xchg
mov
and
push
ror
jb
pop
movsl
push
mov
int3
test
mov
scas
xor
mov
aaa
rorl
add
adc
or
and
cmp
inc
mov
insl
xchg
cmp
xchg
add
and
ss
out
sarl
inc
iret
push
ss
stos
repz
pop
push
popa
push
cwtl
lock
pop
push
popa
xchg
xor
add
lret
das
cmp
jmp
pop
dec
pop
nop
xor
repz
jecxz
sbb
gs
xchg
insb
mov
sbb
push
or
in
or
sbb
pop
aaa
cltd
ret
pop
or
scas
cmp
push
sub
inc
push
stos
cmp
fwait
int3
push
icebp
and
sub
pop
mov
sti
rol
xchg
mov
mov
outsl
sub
xchg
pop
test
loope
xor
lods
xor
inc
fidivl
xchg
xor
rorl
pop
sub
insw
sbb
nop
push
into
test
mov
sar
mov
push
das
xchg
mov
sbb
insl
les
mov
jae
pop
pop
clc
fnsave
add
inc
jmp
lods
call
test
outsb
test
bound
cmp
mov
scas
adc
nop
jmp
scas
in
pop
sbb
add
dec
mov
pushf
aad
loope
cmpsb
xchg
cmp
mov
jns
adc
sbb
loope
ffree
xor
cwtl
aad
popa
data16
sbb
shll
imul
out
xchg
inc
stos
scas
in
popf
push
mov
ljmp
mov
seta
cmp
ja
sbb
movsl
jns
push
paddb
pusha
lods
insb
lock
sarl
out
stos
ss
cmp
cmp
fdivl
pop
xchg
call
xor
pop
loopne
inc
mov
rorl
add
push
xchg
dec
iret
loopne
imul
lcall
adc
jl
mov
dec
dec
repz
jbe
lahf
pop
xchg
add
lods
xor
mov
and
cmp
sub
xorl
ss
cmc
lret
jns
ror
aas
mov
aaa
arpl
sub
les
sbb
bound
push
lods
pop
iret
imul
cmpsl
xor
imulb
insb
pop
scas
cmp
and
imul
jge
dec
imul
loop
cli
jbe
sbb
repnz
dec
idiv
pop
mov
push
cmp
out
mov
leave
rcll
insl
loope
dec
dec
in
pop
mov
cmpsl
lret
or
cmpsb
push
scas
add
into
das
ss
arpl
add
mov
adc
popa
cmp
inc
lea
push
add
and
mov
std
repz
pushl
aaa
ret
inc
mov
cltd
jae
into
xor
cmpsl
dec
fisubs
loope
sub
mov
pop
inc
pop
je
out
stos
xchg
test
rclb
sti
subb
cmpsb
inc
sti
sub
mov
cmpsl
pop
aad
dec
inc
mov
jnp
mov
out
aas
sti
stos
inc
fists
xor
adc
xchg
sbbb
cld
in
into
rorl
es
sub
rcl
mov
xchg
push
dec
enter
mov
sbb
fcmovbe
jae
dec
icebp
xorb
xchg
scas
dec
mov
dec
xorl
insb
jae
ds
into
and
jae
push
mov
clc
mov
out
imul
mov
in
int3
cs
pop
lcall
mov
mov
dec
jecxz
ficoml
mov
pushf
add
push
out
dec
sti
mov
sbb
les
push
icebp
dec
cmc
in
and
outsl
daa
or
ficompl
inc
hlt
imul
pushf
outsb
pushl
dec
into
popa
mov
mov
jns
repnz
imul
add
clc
jecxz
or
jg
pushf
inc
mov
push
lea
and
or
pusha
adc
add
xor
mov
dec
movsb
pop
xor
inc
dec
jns
jge
mov
lcall
test
mov
or
dec
je
mov
sti
cld
leave
leave
addr16
lds
or
and
jb
dec
sub
sbb
mov
lret
xor
lods
mov
xchg
aas
sub
adc
inc
jne
mov
xor
cld
xchg
push
stos
je
mov
dec
add
fimull
shrb
frstor
outsb
lret
jl
dec
cmpb
jp
dec
sbb
leave
mov
dec
jne
divl
ret
dec
jno
inc
push
inc
and
mov
push
loopne
insb
xchg
pop
popf
or
add
sbb
pop
mov
shll
aad
cmp
jae
fnsave
sub
sarb
push
push
push
jo
inc
icebp
mov
mov
adc
test
xor
loopne
push
dec
pop
fidivrl
sbb
mov
inc
inc
popf
inc
mov
stos
js
outsb
mov
imul
lods
aad
xor
mov
mov
sbb
or
cmp
or
roll
lds
mov
pop
clc
in
xor
jp
fwait
in
xor
pop
add
in
int3
pop
arpl
loop
aas
popa
lods
fadds
out
loop
or
mov
fcoms
add
pop
shrl
xchg
jg
xchg
aad
mov
shl
sbb
cmp
fmuls
test
jbe
add
or
icebp
fbstp
hlt
lds
cltd
sbb
iret
xor
hlt
cmpsl
pop
fists
jne,pn
push
cs
mov
ss
jo
mov
cmp
nop
jae
cmpb
xchg
xlat
pop
mov
inc
imull
shrb
inc
js
dec
std
bound
and
int
lret
les
and
cs
loope
xchg
xchg
jns
or
pop
inc
mov
mov
or
int
inc
stc
ja
sti
jno
cld
hlt
stos
push
aam
mov
add
or
ss
cmp
mov
add
outsl
out
mov
push
sub
test
inc
add
lods
or
mov
incl
fs
sti
jno
sarl
cmp
add
jmp
ret
rorb
divb
cs
mov
jno
call
rcll
mov
and
mov
push
xor
xor
movsl
sbb
or
xchg
popf
sub
mov
inc
faddl
push
lcall
mov
xor
in
dec
nop
mov
outsb
mov
add
sbb
sbb
shll
data16
sub
mov
cmp
sbbl
cwtl
mov
in
call
xorl
mov
add
cmc
aas
outsb
dec
lahf
adc
lret
pop
sahf
push
xchg
mov
and
fnstcw
xchg
scas
push
push
add
es
xchg
fwait
xor
sarb
pop
lcall
or
or
mov
push
cli
mov
and
shr
dec
and
sub
jl
lea
cmpsb
fcoms
repnz
arpl
push
xchg
fnstenv
nop
mov
lods
fwait
scas
add
xchg
mov
sub
fmuls
push
sub
pop
outsb
dec
fwait
adc
std
outsl
shrl
pxor
shlb
adc
hlt
or
outsb
sbb
sub
std
mov
sub
mov
lcall
std
lea
repnz
bound
adc
mov
xlat
sarl
pushf
inc
out
cltd
push
dec
add
jl
pop
push
mov
or
or
mov
inc
push
cmc
xchg
shl
aam
das
adc
scas
lcall
and
out
mov
pop
mov
add
imul
add
int
loope
inc
jl
mov
fistps
mov
xchg
xchg
cs
push
in
pop
pop
ficompl
nop
pmulhuw
push
jne
push
fcomi
in
mov
icebp
push
mov
xchg
add
test
xor
es
lcall
mov
jb
pop
cmp
enter
aas
fs
into
sub
les
mov
sub
dec
stos
pop
cmpsb
adc
jge
rorb
loop
iret
mov
addr16
mov
test
cmp
popf
xor
mov
xchg
mov
push
in
orl
stos
fmull
into
inc
in
imul
push
dec
jbe
pop
inc
ret
cs
fmull
pop
pop
or
inc
mov
mov
mov
stos
clc
mov
cmp
mov
nop
aam
jg
or
adc
cs
lcall
push
fsubr
push
mov
push
ss
lret
xchg
fmuls
aaa
dec
push
push
nop
add
sub
jnp
cmp
ret
fisubrs
inc
sti
int3
xor
in
arpl
arpl
pop
xchg
mov
push
xor
call
xchg
addr16
aas
stos
js
jb
in
jb
push
or
adc
movsl
push
fs
jnp
in
sub
xor
lahf
mov
mov
jne
cmp
jg
or
lds
daa
push
call
dec
mov
cmp
xlat
rclb
pop
ficompl
ficoms
das
icebp
ret
pusha
jbe
ja
adc
pop
xchg
sahf
add
xchg
adc
addr16
xchg
jo
push
fwait
arpl
pushf
test
mov
xchg
aaa
sbb
lods
sbb
xlat
outsl
fcom
pop
mov
or
adc
jb
lret
rclb
hlt
imul
cld
push
outsl
cwtl
outsl
pop
ljmp
xchg
push
dec
popa
scas
cmp
cmpsl
mov
ljmp
aad
mov
in
sub
add
mov
jl
in
addr16
ss
js
cmpsb
xchg
testl
aam
pop
iret
dec
or
shrb
lahf
fs
pop
push
adc
jecxz
push
lea
jns
leave
je
fstpt
push
inc
popa
adc
or
xor
jl
lahf
leave
xchg
call
jno
rcr
rcr
int
mov
out
jae
int
lock
cmc
loope
ficompl
push
mov
iret
and
ja
inc
repnz
inc
push
movsb
mov
mov
cld
and
cmpsl
or
xchg
aaa
out
jnp
pop
push
and
mov
test
ret
addr16
pusha
or
inc
jg
mov
lds
fcmovnbe
decb
jns
fdivs
fwait
lret
push
inc
lds
jb
add
adc
pusha
push
mov
xchg
je
xchg
daa
insb
mov
dec
lds
xchg
aad
repnz
sarl
aad
push
mov
mov
jp
mov
lcall
mov
icebp
sahf
xlat
and
and
xchg
neg
xchg
aas
and
jecxz
mov
test
cmp
jnp
or
xor
push
dec
stc
or
outsb
mov
mulb
push
or
adc
lret
pop
outsb
ljmp
arpl
aam
pop
jb
jo
push
das
das
sub
jl
leave
sbb
sub
jge
sahf
pop
and
mov
push
mov
adc
dec
add
ret
jp
imul
push
int3
imul
xchg
cltd
out
in
loop
push
imulb
pop
pop
jle
mov
add
xchg
nop
fcoms
push
fnsave
adc
inc
jns
and
jp
sbb
jg
inc
stc
sub
xorb
or
or
repz
mov
sti
fstps
andl
jmp
stc
rorb
or
and
push
andb
subb
sbb
cmp
adc
cwtl
pop
lods
mov
push
popf
insb
dec
xchg
xchg
push
xchg
dec
dec
or
popf
xor
dec
dec
mov
or
jp
stos
sub
jg
mov
test
std
fdivrl
add
xchg
stos
out
adc
movsb
inc
ret
pop
leave
faddl
mov
mov
movsb
into
lods
jmp
mov
sti
jns
aad
mov
inc
bound
out
or
fidivrs
sub
faddl
lcall
cmpsb
jge
adc
pushl
aam
cmp
and
arpl
mov
pop
add
je
pop
inc
sbb
and
jns
pop
pop
inc
cmp
dec
xor
xchg
ss
inc
insl
mov
pop
adc
fidivs
jb
dec
sub
stos
xor
mov
or
xor
xchg
loopne
mov
ret
dec
push
mov
inc
xor
adc
cmp
sbb
push
push
pop
adc
xor
lret
std
cmp
adc
ret
dec
into
pop
loop
loopne
inc
in
ljmp
les
xchg
lcall
and
mov
mov
inc
test
insb
xchg
mov
and
cmpsb
into
test
lods
sbb
mov
adc
jne
or
push
out
inc
lock
scas
icebp
scas
negb
jae
cltd
scas
imul
push
mov
decb
and
push
mov
jo
mov
pushf
dec
and
mov
cli
in
cmp
sbb
jnp
mov
pop
xor
mov
xchg
in
iret
jge
mov
nop
push
add
clc
pop
dec
outsl
pop
or
icebp
test
lods
jmp
sub
jmp
fwait
or
xchg
pop
xchg
movsb
hlt
out
cli
outsb
clc
lcall
xchg
and
dec
lcall
sbb
sub
mov
sub
leave
js
decl
std
pop
jl
push
outsl
fcmove
pop
loopne
ljmp
adc
test
mov
nop
ret
push
movsb
mov
mov
repz
sub
repz
popa
sbb
ljmp
push
mov
test
scas
or
rcrl
push
arpl
jl
rcl
pusha
adc
sub
xor
cmp
fisubrs
dec
push
xchg
ret
ret
test
adc
cwtl
out
pop
mov
adc
repnz
popf
cmp
cld
lods
add
lods
and
xchg
hlt
aas
jbe
or
xor
xor
negb
pusha
pop
mov
xor
fsts
pop
and
push
add
mov
rcr
into
jnp
jg
lret
in
shrl
add
add
mov
aaa
mov
mov
add
imul
add
xchg
add
ja
aas
insb
jnp
pop
xchg
fadds
dec
stos
mov
insl
rcrb
insb
movsl
fistps
push
loope
sahf
fisttps
into
outsb
mov
es
mov
push
imul
xchg
mov
popa
cmp
out
les
js
into
hlt
push
mov
movsb
fisubs
add
sarl
loope
dec
das
pop
pop
jno
cmp
dec
cmp
mov
mov
jl
or
jbe
pop
popf
ret
test
jno
push
sbb
mov
push
cmp
dec
xchg
pop
xor
into
cmpsl
ss
mov
mov
icebp
push
xor
inc
ret
call
ds
mov
sbbb
sarb
mov
ljmp
dec
dec
sbb
fsubrs
aas
push
xchg
push
cmp
push
xor
adc
cli
xchg
mov
lcall
sbb
faddl
jns
aam
mov
xor
hlt
outsb
mov
lahf
rcrl
aad
pop
mov
scas
les
lea
pusha
roll
adc
sub
int
addb
clc
jns
out
jno
pusha
mov
sbb
xchg
cltd
add
sbb
sbb
ss
jae
lea
mov
jecxz
add
jno
inc
push
popf
shll
mov
mov
push
mov
jae
popa
and
addl
stc
add
aam
fnsave
arpl
and
push
inc
add
loope
mov
inc
inc
daa
xor
sahf
into
mov
and
xchg
push
or
lret
push
fcmove
cmovl
shrl
jp
mov
dec
and
insb
stc
mov
xor
decl
lcall
lret
push
mov
dec
jbe
xchg
mov
sbb
and
rol
adcb
mov
mov
mov
pop
dec
bound
mov
aaa
icebp
jmp
fsubrl
pop
ret
ja
aas
cmp
les
icebp
hlt
jns,pn
pusha
dec
xchg
mov
iret
fnstcw
int
cmp
sbb
xchg
xchg
stos
xchg
pushl
and
and
mulb
in
cmc
test
mov
pop
pop
and
lret
stos
dec
leave
in
sub
dec
sbb
ret
adc
and
sbbb
mov
sbb
ljmp
jecxz
test
out
ljmp
xor
insb
add
lahf
aad
addr16
das
jecxz
and
movsb
mov
dec
inc
sysret
push
popa
ds
sbb
sbb
loope
inc
fistpll
notl
jno
cli
lods
enter
mov
test
lret
jge
loope
in
add
fwait
in
cmp
xchg
pop
cwtl
jns
push
es
pop
int
out
dec
or
stos
push
or
iret
ret
push
dec
push
mov
jp
pop
test
pop
iret
pop
push
mov
js
xor
jg
jbe
sub
ret
lret
mov
cmp
rclb
push
mov
push
xor
xchg
and
cmpsb
bound
aad
xchg
mov
inc
ret
cli
pop
outsl
lret
lds
lcall
jl
dec
fwait
sbb
sub
cmove
xlat
loopne
pop
sbb
xor
bound
addr16
rorl
int3
mov
mov
xor
movsl
inc
shr
out
andb
imul
cmp
repz
jbe
insl
and
sbb
in
inc
pop
jb
in
dec
inc
dec
mov
lods
xor
push
add
jmp
jns
sbb
mov
in
sub
popa
sbb
aam
shll
cld
std
lds
mov
jmp
scas
add
lret
inc
adc
and
xchg
je
fimuls
mov
pushf
or
mov
or
push
xchg
jnp
cltd
and
pop
xchg
in
xchg
data16
pushl
or
imul
sahf
ret
jnp
or
icebp
mov
es
into
aad
xlat
push
ljmp
lea
call
dec
jae
adc
xchg
inc
adc
pop
scas
jle
adc
xchg
mov
in
shrb
loope
mov
je
xchg
sbb
jae
stos
icebp
fwait
int
insl
pop
add
mov
movsl
fwait
sahf
push
fidivl
add
subb
or
jl
xchg
lods
inc
xchg
mov
add
push
lahf
jmp
push
test
out
data16
inc
push
test
mov
pop
inc
inc
jg
jne
inc
jp
cld
xchg
lret
fadds
popf
push
imul
xor
sahf
add
gs
loope
cmp
or
lock
add
orl
pop
subl
and
push
lea
xor
jecxz
jecxz
and
or
sub
int
nop
out
mov
test
jnp
inc
jb
jmp
mov
xor
shl
test
jbe
fsubrl
iret
or
pop
xchg
push
repnz
cmp
dec
mov
imul
xchg
mov
jg
bound
into
fstps
fdivs
jne
cmpsb
leave
cmp
jp
ds
cmp
push
hlt
pop
mov
mov
and
adc
loop
inc
push
rcll
cld
andb
pop
xchg
and
pop
outsl
pop
bound
imul
lcall
mov
sar
sub
popf
lret
mov
adc
jg
ds
xchg
call
bound
movsl
cmc
aad
cmp
test
inc
push
dec
je
pop
div
lahf
int3
add
fidivrs
call
mov
lret
push
inc
stc
jns
in
lods
js
gs
lods
insb
lret
mov
popf
and
sti
pop
iret
fdivl
fmull
dec
pop
mov
cmp
xor
mov
push
nop
js
cld
mov
push
jae
cmpsl
adc
mov
leave
mov
cltd
jb
outsb
push
scas
jnp
xor
pop
dec
imul
js
ja
xchg
mov
daa
push
jp
xchg
lcall
pushf
mov
and
sbb
mov
lods
xchg
inc
and
jle
data16
mov
and
cmp
popf
mov
mov
stos
sbb
cmpb
icebp
pusha
ret
push
fsts
loopne
pusha
push
jbe
mov
loop
add
mov
insl
mov
out
pushf
jo
jno
fimuls
add
sbbl
sbb
cs
movsl
xor
sub
into
mov
jo
cmpsb
sbb
pop
pop
add
or
pop
cltd
roll
add
imul
add
pop
jge
push
gs
orl
push
fxch
jecxz
cmpsl
push
lods
pushf
lds
mov
and
or
repnz
cmp
repz
sbb
loopne
sbb
or
rorl
push
fmuls
xor
adcb
cli
xchg
xlat
mov
pusha
pop
sahf
movsb
repz
sbb
jb
iret
jbe
or
das
adc
sub
inc
lcall
mov
ret
orl
mov
stos
inc
test
add
push
pushf
popf
adc
mov
mov
call
and
mov
mov
push
inc
mov
in
inc
pop
popa
ror
sbb
push
jmp
in
xor
test
cmc
or
pop
xchg
in
ret
lock
repz
rolb
add
je
mov
cli
scas
jb
adc
pop
jnp
sub
jge
sbb
aas
add
sbb
mov
xchg
in
sti
ret
pop
test
aas
pop
dec
sar
roll
dec
scas
add
jg
push
cmp
dec
dec
and
rcrl
pop
xrelease
lods
pop
loopne
fimuls
aam
xchg
sbb
test
inc
xlat
adc
xchg
inc
call
push
xor
aad
imul
mov
jne
cli
jmp
pop
rclb
dec
dec
data16
push
mov
orl
out
dec
insl
call
int
mov
sbb
sub
out
jb
sbb
out
cmp
daa
sahf
imul
ror
lcall
cmpsl
mov
bound
fnsave
jecxz
mov
icebp
jns
fbld
push
filds
out
ljmp
sbb
adc
lahf
add
xor
mov
pop
xchg
fstps
push
dec
jp
inc
ja
dec
fists
pop
or
fnsave
outsb
mov
pop
imull
mov
add
lahf
pop
or
sbb
push
or
fiaddl
and
mov
jns
icebp
xchg
pop
and
jge
push
das
mov
ds
fimull
xchg
pop
lret
arpl
call
sub
mov
jmp
add
mov
leave
das
repnz
out
aam
cmp
int
call
out
xchg
cmc
push
mov
xchg
bound
rol
popa
sub
popf
sahf
int3
jp
test
xchg
call
pop
test
les
cli
xlat
in
fs
es
ja
mull
adc
ret
popa
addr16
test
lcall
pushf
jo
jo
mov
push
stos
cmp
jo
stos
push
out
mov
daa
lret
add
je
negl
mov
fsts
jp
pop
push
clc
icebp
dec
push
xchg
sbb
je
ljmp
inc
xor
loop
sbb
adc
or
pop
dec
push
test
mov
mov
pop
inc
sub
jno
xor
mov
movsl
sub
inc
mov
or
mov
mov
pusha
jo
and
inc
adc
sub
adc
pop
pop
adc
enter
jno
outsb
mov
icebp
shlb
or
xchg
shl
inc
adc
xchg
in
outsb
outsb
and
arpl
mov
push
push
lret
in
inc
mov
movsl
add
jg
out
push
jnp
jmp
icebp
dec
fistpl
inc
mov
xchg
adc
pop
xorl
les
mov
mov
mov
mov
push
loop
xor
mov
cmpsl
adc
into
push
cmp
insb
push
fldt
test
addr16
insl
jg
add
das
push
xchg
stos
ss
sbbb
lds
cwtl
mov
push
pushf
lods
out
in
enter
mov
mov
inc
fisttps
and
js
dec
ja
push
cld
adcb
mov
xor
insl
les
adc
std
push
filds
add
cmp
enter
cmpsl
or
fidivs
test
scas
ss
loope
sarl
cmp
aas
pop
ljmp
sbb
add
or
push
and
dec
hlt
xchg
xchg
jle
fildll
jge
lahf
pop
ljmp
adc
add
jp
xor
mov
fsubs
xchg
cld
loope
fiaddl
xchg
push
f2xm1
in
fcomps
scas
inc
mov
ret
lcall
arpl
hlt
mov
push
call
push
test
push
xor
insb
jne
or
aaa
pop
loopne
mov
push
mov
in
pop
jb
or
or
sahf
push
fwait
sub
lea
xor
inc
mov
push
mov
jb
cmp
lods
sub
and
jmp
or
aaa
fstpt
mov
nop
nop
and
aam
out
add
cli
cmp
push
sahf
test
sub
es
rolb
sbb
jne
push
aas
shl
lcall
mov
adc
xchg
and
mov
and
mov
mov
mov
orl
stos
icebp
js
das
icebp
insl
ljmp
add
popf
inc
fsts
addl
mov
fsubrs
mov
xchg
mov
add
jne
add
jle
jg
mov
enter
les
pop
test
add
lahf
ja
movb
or
jae
rcrb
nop
cmp
shl
lods
sub
push
mov
stc
sub
ret
mov
ljmp
inc
push
mov
ret
push
push
adc
sbb
adc
fwait
scas
dec
cmp
push
aas
mov
inc
je
cmpsb
sbb
jmp
dec
add
clc
xchg
sub
ficomps
jb
or
xor
inc
dec
sub
scas
rolb
loop
add
xor
inc
push
pop
cmp
jg
push
mov
mov
andl
xor
mov
sbb
pop
mov
clc
adc
jne
das
out
jno
jne
or
push
arpl
cmp
mov
mov
sahf
sahf
mov
push
sub
adc
push
jmp
decl
xchg
rolb
mov
pop
je
test
dec
xchg
pop
jbe
jl
lods
ja
jae
mov
sbb
push
sub
sub
icebp
xchg
out
or
push
roll
mov
test
test
orl
cmp
lock
ret
shlb
das
cmp
ja
push
das
and
and
jo
fbld
call
jg
pop
addl
sarb
sub
les
pop
add
jo
xchg
inc
cwtl
pop
jle
gs
xor
fnstcw
lret
and
push
out
clc
cld
cmp
sti
xchg
aaa
mov
aam
in
mov
stc
inc
test
imul
cmpsl
inc
push
pusha
mov
out
inc
add
adc
push
fwait
in
jb
fisubrl
cmp
or
ja
sti
mov
xchg
dec
mov
hlt
sbb
std
stos
fists
xchg
ja
jb
pop
sbb
jl
popf
mov
fsubrs
jp
sti
jmp
add
inc
cld
sub
jb
gs
mov
jne
int
inc
das
mov
push
pop
aad
lods
jno
add
cmpsb
outsb
sub
clc
push
inc
inc
inc
mov
jns
fidivrs
cltd
push
pop
fstl
arpl
push
clc
jnp
shll
nop
ja
mov
sbb
shl
mov
scas
pusha
outsl
sub
stos
popa
cmp
fsubs
jmp
push
int3
mov
fwait
adc
lds
inc
dec
jne
or
loope
mov
insb
fcoml
cmc
inc
pop
test
jns
cmp
push
sti
mov
sbb
fstl
aam
xor
jae
or
xor
push
xlat
or
test
jno
push
data16
adc
add
jmp
cmp
andl
inc
push
enter
out
hlt
xor
stos
cmp
stc
sti
xchg
xchg
add
movsb
out
or
fiadds
mov
push
mov
jo
pop
mov
jnp
cmp
iret
loopne
out
je
pusha
ja
cwtl
mov
aam
popf
jle
insb
mov
adc
cli
or
sub
inc
dec
std
jmp
jge
in
cmpsb
sbb
rcl
jle
mov
or
jo
jne
xor
stc
add
mov
jmp
stos
adc
push
mov
xchg
bnd
mov
jp
ss
std
dec
ja
mov
add
xorb
xor
enter
roll
push
fsubl
sub
mov
outsl
sub
mov
lds
push
mov
jl
xor
jb
push
cmpsb
dec
jns
sub
cmpsl
leave
movsl
dec
cli
pop
pop
lahf
fiaddl
jge
lds
ss
mov
cmp
outsb
ret
fwait
mov
push
addr16
lods
clc
out
or
mov
or
xor
popf
addb
mov
lret
mov
or
lods
inc
cmp
fldt
aas
or
pop
hlt
out
push
pusha
sahf
jns
addr16
ret
pop
lret
add
mov
sub
push
xor
lahf
sub
adc
or
cmp
pop
shrl
cmp
pop
cmp
pushf
mov
popf
ss
ljmp
and
adc
int3
fdivl
arpl
pop
mov
push
adc
adc
movb
outsb
push
lret
rcll
sti
lret
add
stc
push
sbb
push
lea
imul
mov
in
jl
xchg
jnp
es
repz
push
aad
sarl
popf
ficoml
add
jns
adc
jle
aas
jne
add
repz
and
mov
xor
xchg
lock
pop
lret
ja
mov
xor
fisubrs
xor
outsb
dec
outsb
sahf
inc
sub
cmp
cmp
jno
cmc
mov
leave
adc
data16
mov
jbe
aas
cmp
fstpt
faddl
or
imul
insl
mov
sub
jmp
js
xchg
mov
popf
mov
arpl
dec
int3
xchg
cmc
xchg
in
pop
fwait
jmp
dec
sbb
fisubrl
ss
and
jl
add
lods
movsb
lods
xor
add
loopne
in
dec
inc
imul
xchg
ret
adc
pop
xor
js
push
mov
js,pt
push
out
inc
mov
push
pop
enter
or
add
jo
sbb
mov
mov
andb
mov
addb
popf
pop
jl
ss
jno
scas
rolb
xchg
loopne
mov
rorl
push
jecxz
mov
mov
fsts
shrl
push
adc
add
sub
adc
push
sub
jb
and
jo
mov
cs
mov
lods
and
jg
cld
jp
sub
add
test
lret
xchg
and
arpl
add
ds
push
into
imul
gs
add
inc
cmp
jnp
sub
mov
stos
sub
xor
sbb
adc
xor
pop
sbb
out
sarl
push
das
and
lds
popf
test
scas
sbb
xchg
inc
sbb
test
cmpsl
jbe
or
into
lahf
or
fisttps
test
adc
jae
push
jo
pusha
test
hlt
push
push
pop
inc
mov
data16
add
insl
fisttpl
jge
add
mov
jle
arpl
lret
nop
fidivrl
jp
and
adc
fstpt
loopne
cmp
mov
push
push
fstps
push
and
and
lret
mov
fiadds
inc
cmp
xchg
mov
xor
fs
dec
out
adc
push
pop
adcl
xchg
fbld
dec
lahf
test
dec
sub
imul
push
adcb
sarl
test
or
loopne
mov
and
push
sti
mov
mov
sbb
ret
push
jle
cmpsb
cli
push
addb
add
push
jne
sub
ret
dec
lahf
xor
and
and
icebp
xchg
xor
mov
fists
aam
pushw
loope
mov
rcr
mov
or
insb
je
push
loope
popa
and
icebp
sti
ficompl
sub
pop
adc
in
fcmovnu
sub
pop
sarb
imul
inc
and
push
movsl
sbb
aad
iret
lret
jb
pop
sbb
repz
push
fcoml
loop
or
aas
or
mov
mov
dec
cmp
shll
push
lods
das
inc
in
cli
aad
clc
movb
xchg
inc
sahf
dec
std
or
sahf
loope
imul
sub
sahf
fstpt
xor
pop
test
outsb
mov
mov
ror
push
sub
in
mov
or
inc
mov
in
pop
mov
mov
add
rcl
stc
add
fwait
xor
mov
mov
test
xchg
xor
dec
and
inc
bound
shll
movsb
or
mov
popf
lahf
add
jle
ret
repz
std
jle
loope
mov
mov
pop
add
imul
add
rcrb
push
lock
push
and
add
ss
jb
flds
cmc
js
add
mov
adc
ja
xchg
or
test
bound
jae
jo
enter
cmp
out
xchg
xor
push
adc
xor
inc
mov
cli
pushl
js
fildl
fs
xorl
sahf
or
sub
out
and
add
cmp
arpl
int
adc
pop
add
pop
inc
jae
cmp
insb
inc
mov
pop
test
into
movsl
je
mov
sahf
pusha
jo
ljmp
ja
les
aam
add
popl
out
mov
jb
jne
jp
sti
add
lret
mov
or
mov
bound
repz
fwait
jb
and
movb
xchg
sub
lock
inc
loopne
adc
jno
jl
push
dec
mov
cmc
add
adc
aas
pop
shll
jne
test
pop
adc
dec
sti
add
shlb
sbb
fidivl
shll
pop
cmp
repz
sub
add
out
stos
xchg
pop
popf
imul
das
lcall
pop
scas
imul
mov
lock
xor
clc
mov
data16
js
cmp
mov
scas
aaa
push
mov
aaa
lea
mov
or
fists
mov
sti
lods
fcomps
add
and
incl
jnp
cmp
mov
inc
jmp
mov
or
pop
add
sti
inc
mov
lea
cwtl
sub
xor
adc
outsl
xor
clc
mov
stos
popa
mov
xchg
aas
aam
cli
sbb
sub
cmpsl
jle
add
int
inc
adc
push
xchg
aas
lods
cmp
popa
pop
or
hlt
jp
rorb
and
scas
xor
arpl
xchg
mov
dec
cmp
mov
stos
stos
enter
mov
add
addr16
pop
and
sub
stos
or
mov
test
mov
stos
and
negb
jg
jl
pop
inc
xchg
xchg
stc
stos
shrb
ja
movsb
mov
and
mov
int
ja
adc
mov
mov
insl
stc
mov
cmp
loope
and
mov
sub
or
add
add
adcl
lock
pop
cmp
mov
sbb
mov
std
cmpsb
fstpt
lods
xor
cmpsl
outsl
xor
sti
aam
cbtw
or
mov
lds
adc
sub
jno
mov
dec
and
dec
lods
aas
sti
loopne
mov
ja
jb
inc
or
jp
ds
mov
cmc
pusha
sqrtps
sub
push
leave
push
mov
iret
inc
out
sub
arpl
test
fwait
jae
dec
mov
pop
mov
lods
pop
rcll
stos
xchg
stos
and
pop
fistl
fwait
sbb
inc
mov
mov
mov
repz
pop
push
stos
jmp
inc
add
mov
jle
fdivl
xorl
in
incl
sar
mov
addl
xchg
mov
es
vcvtpd2dq
rcll
lea
pop
les
cmc
xor
out
dec
or
clc
mull
sbb
lret
sub
loope
mov
movsb
jle
movsl
mov
adc
sti
mov
imul
sub
outsl
in
push
lock
inc
sub
xchg
imul
movsb
stc
xor
fld
pop
insl
cltd
icebp
and
leave
and
inc
stc
lcall
test
aas
sub
xor
mov
jecxz
jno
lret
pop
adc
ret
inc
daa
jne
sahf
sub
inc
push
pushf
inc
in
jns
hlt
mov
add
addl
mov
mov
sub
in
xchg
lcall
dec
fs
add
push
je
mov
gs
fimull
in
mov
inc
stos
sbbl
jge
xor
shll
add
add
mov
shll
lret
pop
mov
inc
mov
jg
jae
fisubrl
mov
repnz
and
push
push
inc
jmp
add
push
dec
cwtl
or
jo
ja
xchg
out
pop
pop
sub
fbld
adc
add
pop
ss
inc
adc
int3
in
pop
push
xor
cmpsb
fs
call
mov
jns
cmp
push
pushf
push
adc
jns
sub
fcomps
lea
add
fcomp
dec
rcll
gs
xor
popa
dec
sarl
lret
sbb
or
push
jns
in
rcrl
dec
ficoml
push
add
ss
xchg
jns
paddusw
sbb
xchg
sbb
mov
mov
jl
movsl
int3
repnz
mov
outsb
mov
add
stc
jnp
dec
push
add
loop
mov
xchg
leave
mov
push
les
adc
adc
lods
mov
nop
cmpb
push
lret
cmp
call
sub
scas
fs
adc
outsl
rclb
das
test
pop
fst
shrb
sti
scas
or
arpl
mov
ds
shr
dec
inc
mov
lods
repnz
outsl
in
aas
pop
shlb
loope
sahf
inc
adc
xchg
sti
mov
aaa
mov
imul
adc
add
cmp
mov
or
adc
stc
jb
fcmovbe
sbb
add
push
add
add
lahf
push
push
movsl
icebp
movsb
xchg
lock
jecxz
cmp
jno,pt
mov
ss
mov
pop
les
mov
or
stos
sub
loopne
adc
stos
add
pop
xor
xor
addl
push
push
popf
dec
mov
push
push
fcmovbe
xchg
lahf
hlt
jle
in
add
out
fsubl
cld
ja
mov
test
jo
mov
add
mov
cwtl
or
test
push
push
xor
lcall
pop
nop
mov
fwait
sub
cmp
push
ss
repnz
stos
inc
lds
je
jo
push
pop
jae
pop
aad
aad
fistpl
mov
testb
ret
or
or
jecxz
std
cmovge
fnstcw
mov
push
xor
pop
pushf
xchg
and
jo
cmp
sub
xchg
dec
idiv
sahf
out
or
mov
loop
bound
add
add
mov
cwtl
arpl
push
xor
push
fistpl
push
icebp
pop
xchg
fstl
jnp
sti
ficoms
mov
loope
lods
mov
mov
rclb
pushf
xchg
sbb
add
ds
jnp
jg
mov
sbb
cld
fsubr
sub
jp
push
xor
sub
fstpl
rorb
call
test
pop
jne
out
jne
lods
and
sub
sub
or
lahf
mov
into
inc
fsts
jle
or
pop
cwtl
repz
repnz
or
dec
jmp
add
test
xchg
stc
daa
push
jne
movsl
push
mov
add
imul
dec
in
rcl
mov
imul
in
sbb
aas
push
push
adc
mov
pop
jb
cli
or
pop
int3
fsts
popa
mov
mov
jnp
sbb
out
dec
stc
int3
test
popf
add
xor
in
dec
xchg
fstpt
or
jg
xor
repz
fmul
dec
test
je
ljmp
lods
push
popf
sbb
out
xchg
ljmp
add
test
in
cwtl
aam
aam
cmp
in
xlat
push
div
faddl
push
out
pop
add
xchg
or
mov
das
mov
xchg
neg
inc
adc
lcall
repz
movsl
jo
inc
or
inc
ja
xchg
adc
aam
stc
mov
aad
adc
mov
lret
xor
jo
adcb
out
push
xor
aam
mov
mov
push
fadds
xor
xchg
lcall
ret
ljmp
cltd
jmp
xor
cmp
mov
jne
pushf
push
dec
xchg
mov
mov
jnp
repz
test
cmp
fwait
test
imul
cs
pop
dec
dec
sbb
or
ljmp
stc
cwtl
xchg
pop
faddl
pop
imul
movsb
xchg
xor
or
pop
jg
js
inc
leave
lret
cmc
cmc
aad
sub
adc
mov
mov
popa
dec
xchg
cmp
pushf
sbb
xchg
cs
test
and
jmp
mov
shr
aad
rcr
sbb
pop
and
rcrb
lock
arpl
and
pop
mov
sub
adc
pop
cmp
mov
fiadds
dec
js
lea
sub
sub
rorl
jb
aas
add
cmc
sbb
icebp
lcall
push
out
sti
fsubl
sahf
scas
push
mov
inc
ret
sbb
inc
subl
or
jmp
mov
xchg
pushf
mov
xor
cs
jge
jmp
push
daa
or
inc
add
xor
sub
mov
sbb
cmc
les
sbb
dec
xchg
andb
pop
jo
fwait
jp
lea
xchg
and
pop
jns
sbb
cmp
sub
cmp
rcrl
adc
addr16
enter
push
sbb
and
dec
test
popl
filds
out
sbb
and
orl
or
push
mov
cmovge
push
idivb
xor
adc
inc
sbb
hlt
or
xor
xchg
bound
xchg
inc
add
imul
sbb
int
ljmp
mov
daa
lods
leave
jl
adc
movsl
aad
enter
lds
jle
test
or
popf
add
mov
jbe
mov
das
std
cmpb
bound
in
ficoml
clc
xor
mov
jg
pusha
lea
or
movsb
pop
lds
in
fcom
fmul
lcall
loopne
aas
pop
pop
dec
sub
ja
ja
inc
inc
adc
in
sbb
cmp
add
xchg
and
das
xor
adc
xchg
fsubrl
rcll
repz
daa
out
sahf
add
jnp
fsubs
fwait
test
add
sbb
jp
mov
adc
test
sub
dec
fwait
mov
mov
test
mov
ds
cs
nop
mov
pop
mov
sub
cwtl
shll
ret
xor
cmpsb
mov
xchg
inc
outsb
xchg
in
mov
stos
shrb
fadds
jo
aad
les
loope
lret
in
and
stos
and
mov
and
mov
rol
pop
xchg
cli
add
and
addb
hlt
iret
sti
fldt
repnz
xor
xor
mov
add
pop
mov
pop
rorb
and
js
addr16
ficompl
shl
dec
sub
and
xor
mov
xchg
or
xchg
dec
sbb
inc
push
cltd
xchg
dec
lods
int3
mov
aaa
scas
push
mov
pop
jmp
mov
jle
mov
and
loope
jae
mov
data16
sub
push
std
mov
push
sub
inc
xlat
xchg
dec
jns
scas
adc
xchg
mov
je
es
mov
inc
pop
mov
push
and
sbb
mov
addr16
xorb
fsubrp
rolb
in
ja
test
add
shl
fsubrs
push
nop
or
rcl
fildll
sub
lods
cs
adc
stos
loope
dec
jae
rol
cmp
mov
aad
test
rcr
push
aas
or
add
mov
adc
pop
push
outsl
in
js
inc
jnp
inc
fstpt
stc
cmc
dec
insb
enter
out
ljmp
jmp
mov
jo
pushw
cmpsb
aam
ret
adc
fmull
mov
mov
push
mov
shl
in
popa
cmp
sub
leave
into
ret
lcall
nop
xchg
icebp
stos
push
mov
fdivrl
jge
sub
xor
mov
sbb
pop
mov
jecxz
push
repz
fmuls
lea
iret
lret
mov
push
jp
in
dec
out
xchg
inc
test
in
xlat
les
nop
scas
lret
mov
mov
xlat
mov
push
xor
xchg
jge
fdivrl
push
stos
pop
add
xchg
call
adc
sbb
mov
insl
push
xor
cli
stos
xchg
leave
pop
add
dec
and
jmp
and
call
imul
pusha
test
sub
mov
loopne
test
pop
sbb
movsb
arpl
jns
dec
jbe
push
fdivl
fidivl
sbb
xor
or
adc
jle
xchg
or
xchg
sarl
das
imul
cld
add
shlb
jg
stc
ficoms
inc
and
in
movsl
xchg
imul
add
cmp
sub
out
js
lret
ss
fidivs
mov
cmpsb
mov
inc
dec
leave
in
sahf
cmpb
xor
push
xor
xor
js
sub
jnp
pushf
loope
sub
cmpsl
inc
xchg
pop
or
aam
loopne
adc
mov
adc
lock
push
pop
in
or
es
rep
cmpsl
jp
xor
clc
mov
add
pop
dec
sub
mov
inc
sub
aas
cli
sbb
sub
mov
insl
adc
add
mov
jns
mov
fnstenv
sbb
fs
jnp
jmp
cmp
out
lcall
inc
out
or
dec
inc
sub
mov
push
jo
fnstsw
fnstcw
lock
xchg
adc
repnz
push
dec
lret
cmp
push
mov
icebp
test
ds
insb
int3
push
or
inc
ret
xor
mov
fnstsw
nop
popf
jnp
nop
mov
aam
mov
popa
lods
lcall
aas
cmpsb
outsl
arpl
std
xchg
mov
push
les
int3
pop
mov
xor
lret
mov
push
and
cs
mov
or
mov
cmp
sub
sub
inc
xchg
mov
in
mov
jge
sahf
mov
movsb
ret
add
push
push
movsl
push
jbe
rorl
mov
jo
xor
adc
imul
push
mov
inc
rcr
ds
cltd
shl
cs
xor
loop
xchg
sub
jge
xorb
divb
xor
xlat
xchg
sub
mov
or
testl
rol
xlat
aas
hlt
fsubrp
jmp
xor
loope
mov
in
jbe
and
rcll
sahf
xor
lahf
mov
cli
pop
int
cmp
xor
aad
loope
outsb
lea
xor
out
mov
and
pmulhw
rclb
add
inc
mov
cli
mov
repz
pop
out
mov
fldt
and
sbb
enter
cmp
and
xlat
cld
sbb
cmp
jns
xchg
leave
sbb
inc
adc
es
cltd
sbb
push
xor
sti
lahf
push
or
or
or
in
cmp
mov
lret
adc
xchg
fcomps
movsl
add
inc
cmpsb
jle
pop
push
sub
jp
dec
jmp
xchg
jno
dec
int
sub
pop
xchg
mov
popl
pop
jne
int
push
divl
sub
and
int3
enter
loope
xor
or
xor
sub
mov
push
std
gs
sbb
data16
out
jnp
pop
pop
xchg
cmc
lock
jmp
jle
cmpsl
fwait
add
mov
outsb
mov
lock
push
ret
push
xor
inc
push
jle
fnstcw
jecxz
inc
clc
cmc
scas
cltd
lcall
xor
lret
inc
sub
mov
dec
or
mov
or
fnstsw
leave
negl
pop
push
push
int
in
pop
push
aad
xor
cmpsb
iret
mov
mov
adc
pop
mov
ror
cmc
jge
cmp
outsb
mov
shlb
cltd
inc
cmp
sbb
out
push
sbb
jmp
push
push
iret
xor
mov
dec
leave
push
xor
test
push
push
mov
idivb
sub
repz
call
insl
xchg
mov
pop
dec
mov
aam
imul
shlb
push
push
pushf
aas
inc
nop
shlb
push
icebp
in
mov
jno
test
cmp
icebp
mov
jecxz
pop
sbb
daa
out
cmpsb
lock
rcll
ret
or
xchg
sti
imul
jo
sbb
inc
cmp
push
in
dec
push
aam
sub
test
in
test
in
cmp
or
jns
stos
mov
xchg
xor
mov
dec
ljmp
shl
lahf
outsb
stos
rclb
inc
inc
les
stos
jcxz
fwait
fs
cmp
movl
sbb
fisubs
pop
sbb
das
std
xor
ja
dec
jne
or
dec
adc
adc
into
std
daa
push
movsl
inc
aad
inc
xchg
inc
adc
mov
mov
mov
outsl
ljmp
mov
ds
fldcw
fisubrl
pop
ja
jns
xlat
inc
xor
mov
insl
pxor
push
mov
mov
sbbl
inc
xchg
adc
and
dec
rcrb
or
mov
xor
and
pop
and
adcb
lret
dec
outsl
gs
push
mov
repz
and
test
lods
inc
mov
sub
data16
out
cwtl
pop
jo
dec
mov
sub
aam
shrl
and
add
sti
stos
ficompl
inc
jnp
dec
popf
pop
xchg
stos
clc
lock
fimuls
inc
adc
mov
imul
enter
je
dec
push
and
aam
jmp
je
rcll
movsb
jle
je
dec
ljmp
roll
lea
loopne
in
mov
movsb
xor
insl
push
les
imul
popf
fs
xlat
inc
es
fwait
cmpl
mov
icebp
ret
adc
shll
cwtl
push
push
xchg
cmp
xorl
mov
sbb
push
jno
push
pop
mov
mov
mov
test
repnz
cli
lods
add
stos
mov
ffree
dec
movsb
pop
dec
sarb
out
movsl
mov
dec
inc
push
xchg
and
imul
jg
fidivl
jmp
cmpsb
mov
or
xor
adc
imul
clc
inc
xchg
push
shlb
or
pusha
addr16
imul
movsl
inc
in
dec
mov
bound
call
das
sbb
dec
mov
roll
cs
std
test
incb
roll
mov
jne
test
pusha
leave
sbb
xchg
pushf
gs
mov
jmp
pop
pop
sbb
mov
std
sbb
pop
inc
and
or
mov
xor
fldcw
dec
sub
adc
out
pop
adc
lods
jecxz
mov
loop
loope
pop
push
and
scas
cli
out
or
jge
nop
sub
push
stc
test
stos
dec
xchg
push
jg
add
mov
sti
xor
jp
jno
je
dec
insb
arpl
xchg
pusha
dec
or
enter
sbb
push
shl
aaa
outsb
je
inc
pop
in
pop
jnp
stos
sbb
movsl
jae
repnz
mov
daa
and
mov
pusha
dec
cmc
pop
and
pop
add
pushf
xchg
add
lods
jge
in
jae
lods
pop
les
xchg
xchg
sbb
mov
sub
pop
push
std
adc
xor
stc
ljmp
mov
mov
jg
or
push
jp
jp
or
push
mov
mov
cmp
jb
fsubrs
ja
dec
and
and
pop
push
mov
lahf
sbb
stos
inc
cmp
sub
jmp
jbe
mov
or
sub
es
or
imul
pop
mov
mov
push
in
add
mov
xlat
cmpsb
mov
sbb
in
int
and
and
dec
mov
cld
cli
sub
push
dec
mov
xchg
sub
bnd
lret
pusha
fildll
inc
ret
shrl
xor
dec
adc
or
sub
movsl
popa
cld
jp
push
dec
cwtl
cmp
ret
enter
pop
fsubs
inc
xor
push
add
pop
sti
cs
dec
mov
sub
mov
adc
jmp
loopne
hlt
scas
pop
mov
filds
mov
cld
push
shrl
push
cltd
divl
inc
in
jo
add
dec
in
inc
sub
mov
or
xchg
dec
inc
mov
stos
push
outsb
inc
daa
pop
xchg
lahf
decl
xor
in
mov
push
and
dec
sbb
aas
pop
out
mov
xchg
mov
int3
mov
pushf
sbb
jge
inc
sub
clc
mov
pop
inc
fldcw
xchg
jp
inc
stos
sub
jno
dec
outsl
ja
mov
cld
faddl
ret
leave
add
cmp
push
sbb
xor
mov
pop
mov
adc
push
cld
pop
xor
mov
outsb
stos
mov
jl
inc
cmp
filds
jb
xchg
cltd
cmp
and
fs
or
ds
jo
js
sub
test
pop
adc
push
jbe
int
xchg
dec
ja
dec
mov
int3
sbb
test
inc
rcrl
jne
aad
push
xchg
or
lock
rol
dec
mov
inc
es
adc
push
mov
aaa
fidivrs
popf
add
mov
cmp
stos
xchg
sbb
xchg
movsl
scas
mov
movsb
inc
rcl
and
insb
and
movsl
ret
loop
jno
mov
imul
jp
pmaxub
dec
bound
jmp
nop
ljmp
push
in
pop
test
ss
pushl
arpl
js
lahf
iret
test
lods
mov
int
test
jno
sbb
test
lock
std
sbb
test
cmpsl
or
scas
jecxz
dec
jle
cld
cmp
dec
ds
and
jae
or
mov
shlb
lods
lods
gs
or
xchg
cmpsb
xchg
mov
inc
sahf
femms
mov
rcr
sti
cwtl
inc
inc
ds
mov
jg
dec
adc
js
cld
and
daa
subl
and
pop
xor
repnz
fiaddl
das
xchg
mov
insl
fmull
dec
xchg
jle
xor
iret
jl
pop
sbb
repz
dec
and
sti
pop
push
imul
mov
inc
scas
inc
bound
data16
popa
mov
out
fdivl
lock
inc
sub
fmul
lods
stc
sub
add
fxch
pop
adc
mov
dec
ljmp
std
xlat
les
lret
sbb
ret
xor
mov
in
lret
scas
lods
jg
jp
dec
stc
nop
jae
xchg
lds
fldt
cld
jg
repnz
xor
scas
out
mov
repnz
cltd
inc
add
push
dec
mov
xchg
loop
incb
cmp
loope
inc
testl
shlb
out
cmp
inc
lret
dec
sub
lret
mov
mov
mov
adc
mov
fsubrs
repnz
loope
adcl
scas
std
cmp
ss
and
iret
addr16
lock
gs
loop
xor
jmp
fwait
sub
push
bound
call
inc
or
adc
xor
lea
xchg
cltd
movsb
addr16
popl
xor
inc
mov
ret
dec
mov
and
push
lods
sub
aad
pop
fisubrl
out
inc
mov
inc
gs
push
jmp
iret
call
andb
pop
mov
sbb
mov
push
sub
and
lods
pusha
ss
sub
jb
cli
push
jge
push
mov
mov
pop
sti
ljmp
dec
aam
add
sub
push
loopne
and
mov
jecxz
outsb
scas
ror
out
and
mov
fbld
xor
or
cli
xchg
adc
aam
inc
mov
add
mov
ljmp
or
clc
dec
movb
cltd
inc
loopne
cmp
xor
sub
pop
inc
lcall
aaa
bound
ljmp
loope
in
fdivrl
pushf
cmp
inc
std
bound
lds
dec
mov
dec
cmp
and
enter
bound
adcb
out
fsubrp
clc
ss
adc
inc
or
pop
mov
mov
addl
push
add
call
mov
or
sti
or
test
scas
notb
inc
sarl
fimuls
ljmp
xchg
sahf
mov
ffreep
leave
vmwrite
xor
stos
cmp
mov
in
loop
inc
inc
fidivl
jge
in
jge
and
mov
pop
dec
es
shl
nop
cld
push
movsb
push
or
and
jl
fcmove
jno
pop
xchg
in
pop
inc
jno
loop
jbe
fdivs
orl
pop
adc
jmp
or
inc
pusha
test
mov
insb
and
mov
push
lret
jne
or
mov
insl
cli
dec
leave
add
in
movb
and
je
mov
add
ss
inc
mov
dec
sbb
and
andl
in
sub
jmp
lcall
lods
aam
pop
adc
xor
in
ljmp
xorb
cwtl
lods
pop
xor
out
jnp
sub
adc
lahf
push
test
adc
lods
movsl
cltd
int3
jne
cmpsl
fwait
jbe
xchg
aad
pop
mov
push
jne
pop
and
cmp
push
sarb
dec
mov
push
mov
aaa
icebp
pusha
dec
xor
popa
test
fildll
dec
mov
add
xchg
lahf
mov
add
jmp
jle
js
aam
sbb
add
imul
add
xor
insl
xchg
subb
imul
mov
cwtl
leave
xor
hlt
xchg
dec
mov
cmp
xchg
icebp
gs
adc
mov
cmp
ljmp
lret
xchg
jg
push
fucomp
dec
pop
int
je
mov
pusha
mov
aaa
push
rcrb
mov
aas
movsb
xchg
xchg
mov
and
jb
fadd
sub
jo
fwait
popf
inc
popa
sbb
out
adc
mov
icebp
sub
dec
push
jno
xlat
xchg
jb
outsl
bound
adc
sub
xchg
mov
cli
sub
xlat
adc
mov
fs
icebp
inc
sbb
mov
or
in
jbe
xor
lcall
jns
insl
jne
stos
leave
and
pop
mov
dec
iret
out
inc
inc
push
xchg
xchg
lcall
and
fidivs
movsb
dec
jnp
push
rep
jb
push
stc
inc
inc
stos
fsubs
ss
outsl
push
pop
sub
sbb
ficomps
movups
dec
out
dec
shll
hlt
sbbb
into
xchg
sbb
adc
mov
lock
or
push
xchg
cmc
cmc
ljmp
dec
push
sbb
or
push
sbb
cmp
test
lret
mov
xor
sbb
xor
add
jge
into
mov
xchg
sbb
mov
popf
je
and
sbb
xchg
mov
cmp
movsb
mov
xor
std
bnd
pop
add
push
pushf
popf
jl
lret
inc
movsl
xor
stos
loope
test
push
cld
dec
push
icebp
mov
aam
xchg
jo
jae
int
inc
jbe
roll
dec
in
mov
fists
stos
dec
aaa
pop
rorl
push
xor
dec
jg
bound
xchg
pusha
sub
and
movsb
jecxz
arpl
icebp
mov
fnstenv
ds
dec
cwtl
shll
shlb
pop
pop
decl
and
mov
into
test
xor
xorl
dec
stos
orl
xchg
data16
jno
in
sub
mov
jmp
and
cmc
cmp
pop
mov
cs
push
and
fwait
mov
call
inc
jnp
in
cmp
add
sbb
lea
mov
movsb
enter
ss
jge
pop
adc
and
xchg
add
lock
jmp
repz
jbe
sbb
roll
mov
fisttpll
xor
popf
or
fs
jne
outsb
rorb
mov
aad
std
ljmp
or
or
add
push
and
sbb
lea
push
cli
mov
cld
pop
push
cmp
push
shll
and
mov
mov
ljmp
ja
dec
loopne
pop
je
andb
jo
imul
aaa
jg
cmp
stc
pusha
add
push
shld
sub
push
cmp
in
ja
push
dec
mov
sub
iret
inc
sub
dec
sbb
mov
xorl
jo
movsl
aas
imull
loop
fbld
add
inc
je
fisubl
loope
int
pop
mov
jne
cmp
cwtl
test
aad
ret
ds
mov
or
sbb
mov
das
scas
and
mov
xor
mov
insb
pop
jge
movsb
pop
cmp
adc
xchg
dec
jecxz
sarl
mov
mov
dec
push
sbb
sub
outsb
inc
jb
xchg
hlt
push
out
xor
sbbb
sub
daa
cmp
sahf
xchg
adc
test
mov
cmp
scas
ja
test
push
jno
inc
push
bound
rclb
cli
and
cli
add
add
mov
ror
pop
dec
cmpsl
pop
mov
lods
in
sub
imul
pop
lock
lea
sbb
orb
mov
cld
inc
jns
push
jns
aam
das
in
mov
dec
jnp
pop
in
xchg
shrb
lcall
shl
dec
nop
xchg
xor
nop
add
bound
lods
push
push
push
addl
in
mov
xchg
adc
adcb
loope,pn
jne
lret
adc
repnz
stc
or
or
mov
jp
je
adc
pop
dec
out
test
cmpsb
aas
int3
push
clc
jne
push
mov
sbb
jmp
xchg
pushf
hlt
inc
aas
pop
cmc
mov
movsb
jnp
shrb
push
rcll
jmp
test
in
mov
sbb
add
gs
in
inc
xchg
lret
push
lock
add
mov
inc
shl
inc
adc
adc
mov
out
push
mov
adc
mov
mov
push
je
sub
jg
lret
repnz
mov
out
fstpt
xor
arpl
lods
pop
orb
fiadds
mov
jae
xchg
cmp
jae
or
adc
je
add
scas
and
inc
in
icebp
not
test
xchg
popa
xor
push
out
scas
xor
les
push
out
sbb
sub
and
in
and
popa
push
adc
and
in
scas
outsl
push
and
cmpsb
pop
lea
lock
and
or
add
inc
add
lods
mov
lds
nop
in
iret
add
inc
sub
inc
inc
lds
jne
in
cmp
cmpsl
mov
test
push
sahf
nop
rorl
into
dec
enter
sahf
pop
and
jecxz
leave
cld
lret
inc
neg
leave
cmp
push
gs
xor
adc
out
fldenv
clc
fmulp
in
fwait
push
into
add
cld
ljmp
pop
cmpsb
push
jl
pushf
inc
jbe
cmp
test
das
addr16
lret
inc
inc
dec
jne
inc
mov
add
push
fwait
mov
adc
cmp
mov
fsubs
out
xor
stos
pop
jo
pop
jae
jns
push
test
jge
mov
mov
iret
aas
pop
push
xor
fistpll
fwait
lds
sarl
sub
mov
jge
or
ss
pop
lea
out
adc
cmp
pop
fcoms
and
loope
jae
ds
shrb
cmp
jmp
xchg
jl
add
mov
aas
xchg
pop
popa
pusha
scas
mov
jecxz
push
fstpt
arpl
loop
test
mov
je
cmp
xchg
lock
mov
cmp
data16
adc
lret
popf
xor
sahf
and
leave
mov
inc
incb
push
jecxz
arpl
mov
or
add
pushf
xor
xor
cs
in
loop
cmpsb
in
dec
repnz
inc
fistpll
test
xchg
sti
or
stos
sub
push
sub
ja
dec
jg
sub
add
jl
cwtl
dec
jmp
test
mov
add
test
fistl
dec
mov
les
shll
fucomi
fwait
jge
loope
sub
jae
push
je
pop
xchg
cmpsb
loopne
push
jl
lods
out
mov
pop
arpl
mov
adc
stos
sbb
xor
cmp
popa
adc
testl
aam
fldl
sbb
sbb
push
insl
jp
mov
fdivs
xor
xchg
mov
xor
daa
xchg
in
xor
stos
test
rcr
pop
rcl
decl
outsl
stos
xchg
jp
mov
mov
rolb
pop
stos
gs
popf
jnp
inc
pop
fwait
es
fprem1
add
lods
fucomp
stos
shl
lret
stos
insb
xor
or
flds
mov
lock
add
in
leave
and
push
lods
jo
nop
dec
mov
adc
mov
rcll
push
push
add
pop
stos
adc
and
shl
pop
and
dec
add
dec
repnz
divl
test
sub
xchg
jae
push
repz
out
push
fwait
jo
movsl
xor
popf
add
nop
nop
pushf
sub
jo,pt
push
sbb
and
js
xchg
push
shl
nop
xchg
adc
mov
xchg
mov
mov
mov
dec
dec
icebp
jnp
xchg
mov
sti
add
mov
jmp
lahf
cmp
mov
push
sub
push
iret
jecxz
bound
lahf
lcall
add
sub
movups
fidivrl
xchg
arpl
fisubs
sar
pop
jl
int
add
jp
push
test
jp
pop
adc
jmp
test
cli
lret
movsb
mov
xlat
push
ret
adc
lret
push
loopne
pop
repz
test
daa
loop
mov
add
and
pop
fs
icebp
sbb
inc
cmpsl
mov
pop
lock
ds
xchg
out
repz
das
inc
adc
push
pop
pop
mov
dec
sbb
mov
daa
aaa
sub
bound
sbb
pusha
push
xor
insl
sbb
inc
mov
xor
or
cmpsb
jo
adc
xchg
pop
fsubrl
ficomps
jnp
lock
sbb
insl
add
adc
aas
inc
icebp
add
push
dec
movsb
mov
ja
lock
test
dec
mov
cwtl
mov
gs
sub
sbb
pop
push
fistps
cmp
int3
test
fs
out
fmuls
incb
shll
push
outsb
adcb
xor
test
jo
jno
push
shr
ret
add
xor
flds
sbb
xchg
inc
pop
imul
out
or
push
and
push
fisubrl
pop
into
push
xchg
popf
int
xchg
add
mov
jmp
pop
clc
repnz
fwait
fnsave
addr16
fcmove
ret
daa
mov
fstl
dec
cmc
ja
out
cmp
xchg
pop
dec
loop
xchg
dec
std
ljmp
cmpsl
jno
outsl
scas
mov
pop
mov
mov
cmp
pop
sub
xchg
je
mov
add
or
pushl
mov
pusha
push
adcb
mov
std
jo
sbb
sarb
sbb
icebp
cmp
jg
push
and
cli
test
adc
jle
jge
mov
int
push
addr16
out
sahf
fs
lea
sbb
insb
dec
rdmsr
fwait
cmp
mov
inc
adc
mov
loopne
and
iret
aas
adc
outsb
xlat
adc
iret
popf
in
aaa
jecxz
and
and
xchg
push
jb
pop
aaa
xchg
les
mov
repnz
addr16
cmpsb
jecxz
add
lods
mov
mov
fildll
lcall
jb
adc
movsb
cmp
mov
add
fwait
lds
mov
xor
dec
mov
and
mov
shll
dec
sarl
in
jns
pop
pop
jns
aaa
mov
jb
adc
in
pop
lods
jmp
lods
hlt
cmc
add
and
push
loop
test
fsubrs
dec
dec
lods
dec
mov
pusha
aas
js
daa
adc
out
ds
inc
push
imul
mov
push
rorb
xchg
cmp
sub
movsl
cld
sbb
lock
cmp
dec
dec
mov
arpl
out
push
or
xchg
movsb
out
movsl
pop
jecxz
rclb
pop
cltd
mov
enter
pop
cmp
dec
jb
dec
inc
pop
mov
lret
jmp
pop
fwait
xchg
mov
push
ret
xor
jb
mov
dec
cmp
ds
out
lods
cmpsb
fiaddl
movsb
xor
lcall
sub
movsl
arpl
mov
pop
push
stos
jae
push
mov
arpl
sti
or
cmp
cmpsl
push
sbb
jecxz
loop
xchg
fidivrs
shlb
dec
cmpsb
pop
movsb
leave
adc
push
out
jp
jne
xchg
loopne
dec
pop
or
mov
sbb
lods
push
inc
push
inc
es
and
lret
sub
pop
fisubrl
dec
dec
inc
aas
fisttpl
xchg
jb
xlat
lret
xchg
aad
scas
insb
sbb
mov
cmp
add
push
jnp
sbb
lods
sahf
jecxz
xor
sbb
mov
fucomp
push
fimuls
lcall
sub
mov
sub
into
hlt
adc
cli
dec
cmp
sysret
mov
mov
nop
dec
not
cmp
orb
cltd
xchg
cwtl
test
clc
sbb
mov
lods
pop
inc
sub
xor
popf
lcall
cmp
aam
arpl
push
adc
cmp
or
fdivs
fwait
insb
and
jg
sbb
subb
pop
stc
sbb
cmp
jne
lret
int3
test
inc
inc
icebp
push
cmp
xor
dec
int
fcmove
out
jb
mov
xchg
jmp
imul
hlt
movsb
xchg
and
adc
jl
cli
mov
push
lret
loopne
inc
shrb
xor
mov
mov
shlb
in
or
test
inc
pop
xor
mov
jl
and
in
xchg
mov
lret
mov
mov
sbbb
in
lds
jg
gs
outsb
mov
push
adc
lea
add
aas
pop
push
jb
stc
lahf
pop
js
jbe
add
imul
add
sti
jge
in
test
movsb
imul
adc
dec
pop
cld
mov
cmpsl
insl
sub
int
inc
inc
in
es
pop
jmp
inc
push
sbb
mov
lods
into
outsb
sub
shl
xlat
xor
adc
cmp
and
mov
or
fists
xchg
cmpsb
loop
insb
and
mov
cmp
push
jl
mov
gs
ljmp
cmpsb
cmp
fcoms
data16
fstpl
jae
dec
test
sub
adc
jbe
mov
jmp
arpl
sahf
sarb
cld
in
lods
sub
leave
bound
mov
or
pop
shrl
test
inc
add
data16
pop
add
shl
int3
sbb
insb
test
jge
andb
jns
xor
xchg
test
out
cmp
dec
enter
mov
es
add
je
test
jns
sub
cltd
sub
jle
stc
in
or
or
outsl
sbb
xor
punpcklwd
adc
mov
iret
xchg
adc
adc
xchg
inc
jmp
shlb
lahf
and
push
push
cmpsb
ror
push
jb
mov
sub
sbb
adc
mov
xor
in
sub
ss
jl
and
sbb
addl
cmp
pop
inc
ret
jnp
insb
insb
mov
cwtl
xlat
in
clc
mov
popf
stos
fbstp
cmp
loopne
aad
mov
imul
sbb
mov
pop
addl
cmp
xor
es
gs
mov
mov
movsb
jle
inc
cltd
in
dec
movsb
push
dec
test
jmp
sub
jle
xor
ljmp
sbb
sub
daa
bound
outsl
dec
adc
mov
loopne
testb
jbe
clc
jecxz
imul
mov
fprem
xchg
int
sub
stos
sbbb
mov
push
scas
bound
sub
mov
dec
add
stos
flds
leave
and
loop
nop
fstl
push
lahf
das
adc
sbb
icebp
lea
push
jbe
pop
pop
sahf
pop
imul
cli
add
sbb
test
jl
pop
push
dec
fldt
loopne
mov
fdivrl
lods
jl
jbe
xlat
ror
ret
dec
jo
mov
outsl
push
leave
cwtl
test
mov
fidivs
outsb
paddq
lahf
or
in
dec
xchg
aaa
nop
gs
sbb
outsl
divb
es
and
or
je
pop
stc
call
shl
mov
mov
into
adc
rcrl
test
sahf
mov
lret
cmpsl
mov
repnz
cmc
icebp
sbb
inc
jns
mov
outsl
mov
punpcklwd
push
loop
xor
scas
cltd
inc
or
and
mov
inc
cmc
out
cld
pop
xor
repnz
push
mov
cwtl
dec
shlb
mulb
pop
ds
pop
push
es
jle
add
js
jge
adc
push
inc
dec
mov
add
pushl
mov
pushf
lods
int3
adc
adc
or
jae
and
xchg
cmp
mov
sbb
xor
ljmp
mov
dec
aad
js
fcompl
pushf
bnd
ffree
sbb
bound
ss
outsl
mov
push
ds
add
scas
dec
sbb
cmpsl
mov
enter
imul
adc
inc
dec
iret
shll
fnsave
xor
inc
sbb
sub
pop
nop
scas
xchg
jb
jecxz
mov
lcall
mov
fisttpl
push
and
ret
pop
mov
shr
jl
divl
ja
or
add
xchg
xor
xor
add
jbe
xchg
dec
dec
shlb
out
cmp
out
lcall
mov
adc
test
shl
pop
ds
mov
incl
call
ficoml
es
outsb
dec
inc
fisubrl
add
dec
fdivr
push
jnp
cmp
adc
push
fisubrl
jb
or
dec
shr
jns
lods
push
mov
xor
push
ret
lcall
inc
add
js
hlt
leave
pop
adc
xchg
mov
div
filds
in
push
xlat
and
subb
fldt
aas
push
or
dec
inc
stos
das
mov
pop
iret
inc
outsl
ret
dec
pop
xchg
std
or
pop
jb
inc
mov
ds
cld
jno
call
ret
xor
mov
cltd
mov
cld
push
mov
push
shrl
xor
push
adc
inc
adc
int
xchg
pop
sti
dec
ret
xchg
cs
popf
jp
in
cmpb
mov
mov
clc
add
dec
push
testl
aad
mov
and
test
jp
or
shrl
cmp
scas
or
sbb
repz
mov
pushf
lahf
push
pop
dec
aam
or
dec
jecxz
or
test
add
and
adcl
xchg
stc
pusha
adc
mov
cmp
shll
jecxz
es
and
adc
dec
out
xor
sbb
lcall
jge
xchg
or
rorb
dec
hlt
imul
fildll
rolb
push
push
dec
jno
lcall
iret
pop
xchg
sti
mov
repz
es
xor
dec
daa
insl
mov
push
sub
int
and
loop
loop
and
jl
jno
mov
xchg
outsb
sub
cmp
movsl
xor
call
mov
mov
fs
sarl
jbe
and
push
mov
jge
lahf
in
add
mov
jmp
xor
je
xchg
push
cmpsb
sbb
or
or
jle
push
test
xchg
lods
aas
mov
mov
sub
pop
mov
inc
cmc
insb
in
pop
sbb
add
xor
ja
and
es
and
sbb
mov
mov
lahf
out
mov
or
push
shr
cld
jnp
lahf
mov
icebp
xlat
adc
xor
shlb
push
add
push
adc
in
sbb
mov
push
dec
push
pop
push
lock
push
or
xor
stos
and
inc
inc
xchg
lock
mov
pop
mov
inc
jle
jbe
xchg
push
jb
shrb
push
fmul
das
jae
lods
int
test
leave
imul
jb
repz
and
mov
add
lea
into
out
popf
adc
jg
sbb
imul
add
cmp
add
dec
dec
jne
int3
andl
xchg
dec
lret
rolb
lret
xor
pop
dec
ffreep
pushf
mov
rol
movsb
imul
jp
add
jp
test
ljmp
stc
fisttps
pop
imul
xchg
cmp
pop
pop
fimull
pop
das
adc
fbld
jno
aad
mov
aas
mov
mov
popa
stc
hlt
xor
sti
add
jecxz
das
cmpsb
stos
and
or
lcall
in
push
cltd
mov
pop
pop
pop
in
icebp
mov
and
loop
shll
out
in
out
mov
mov
ss
push
sahf
les
stos
cmp
push
mov
mov
pop
mov
xorb
add
fs
addl
cmp
fistl
fs
lods
fprem1
mov
push
loop
adc
mov
jl
jl
push
fwait
cmpsl
dec
xchg
outsl
scas
jge
xlat
insl
or
mov
out
sahf
icebp
mov
mov
or
push
cmp
inc
push
adc
lret
cmp
stos
inc
adc
gs
sbb
nop
mov
idivl
cmp
pop
mov
xlat
je
fisttps
mov
mov
inc
aam
stos
movsb
pop
leave
push
mov
enter
addb
popa
adc
inc
mov
ffreep
pop
outsl
in
mov
cmc
aad
int3
outsb
dec
dec
cmpb
or
inc
xor
inc
jmp
movsl
dec
jge
lcall
out
lods
sbb
jp
test
fisttps
xlat
push
push
or
hlt
scas
cmpsl
sub
add
mov
xlat
loope
xchg
sarl
inc
inc
data16
push
pop
sub
icebp
xor
sti
and
lcall
pop
out
add
mov
cmp
add
or
or
mov
or
fisubrs
cmp
out
fnsave
lahf
pop
outsb
ret
push
adcl
lods
push
or
push
push
dec
add
test
add
pop
pop
inc
ds
idivl
pop
leave
test
fs
ss
movsl
shlb
in
adc
sub
xor
mov
jno
call
bound
adc
in
stc
pushf
test
inc
and
jge
add
scas
push
pop
ret
and
pop
push
out
push
insl
cmp
mov
popa
stos
ds
xchg
push
aad
outsb
sti
xor
push
push
jae
cltd
lock
iret
lea
pusha
push
add
cmpsb
adc
roll
inc
xchg
add
cmp
aas
push
add
dec
out
ja
inc
jbe
and
dec
inc
sahf
lcall
pusha
jl
jnp
cmpsb
jo
sti
sub
pop
mov
bnd
adc
cld
inc
inc
adc
lds
aas
clc
push
lds
fcoms
testl
pop
mov
xor
in
sbb
pop
push
pushf
gs
in
in
insb
lahf
jbe
test
int3
cwtl
mov
mov
call
out
cmp
or
movsb
inc
in
in
add
sub
push
outsb
cmpsb
dec
daa
cmpsl
jno
dec
and
mov
push
lahf
add
cmp
bound
ds
sub
imul
mov
ljmp
stc
push
mov
pop
outsb
test
push
fs
inc
lcall
insb
sbb
sbb
iret
jmp
clc
adc
mov
sbb
xchg
repnz
cli
jle
xor
xchg
bound
inc
aaa
popf
rcll
test
mov
mov
out
push
xlat
test
ja
push
dec
fsubrl
push
mov
cmpsb
push
and
sbb
shll
scas
dec
mov
mov
mov
out
xchg
mov
push
push
sbb
pushf
ljmp
mov
jno
push
out
cmpsb
push
pop
add
negl
fucompp
inc
pop
out
cltd
pusha
dec
sub
jbe
fdivs
xchg
xchg
xchg
shr
cmc
loopne
push
int3
inc
in
fstps
dec
jo
mov
rcll
push
loop
jecxz
pop
ljmp
push
jg
dec
adc
xchg
sarl
xor
sub
in
mov
mov
sbb
mov
insb
loop
aad
pop
jle
in
jge
fwait
idivb
jae
rcrb
push
xorl
jmp
out
cmp
shlb
scas
mov
lret
iret
mov
je
ss
push
mov
sub
xchg
in
mov
ja
dec
sahf
cmp
sub
into
push
jg
call
sbb
sub
popa
sti
sub
repnz
inc
dec
rcr
jns
mov
repnz
call
mov
addl
xor
lcall
arpl
cmp
adc
push
daa
xor
ja
adc
cmpsb
insb
fiadds
bound
push
sub
mov
pop
pop
repz
aaa
cmpsb
hlt
nop
mov
rcll
mov
push
push
mov
mov
pop
mov
jns
mov
sub
adc
mov
push
and
out
out
jae
mov
xor
pop
or
stos
xchg
call
stos
movsl
mov
jbe
fsubl
pusha
inc
test
sahf
negb
repnz
cmp
push
mov
pop
les
rorb
mov
push
cwtl
cmp
sub
std
xchg
out
dec
movb
sub
mov
mov
aad
test
in
popf
fxch
inc
pop
stos
scas
pop
fwait
das
inc
ret
ss
inc
out
popa
fwait
in
sub
sub
es
pop
lock
sub
movq
cmpsb
xchg
aam
icebp
lds
pop
iret
jnp
in
sub
aam
nop
mov
outsb
mov
cmp
and
dec
push
or
or
sbb
dec
add
mov
stc
pop
in
and
add
fldt
imul
push
jp
cmp
sahf
pushf
or
xor
scas
xchg
sbb
push
sub
addl
jge
push
xor
cld
popf
daa
push
pop
mov
stos
fs
fcmovnu
push
mov
push
cmpsl
outsl
jae
lea
inc
movsb
jo
dec
out
inc
adc
cli
dec
adc
xor
mov
rorb
cmp
pushf
sti
jno
inc
nop
test
fistpl
dec
jnp
pop
push
fs
je
test
insl
jbe
inc
js
popa
fildl
add
enter
inc
jns
jne
sub
xchg
sbb
inc
fadds
push
es
mov
lcall
and
lcall
scas
dec
cmp
jae
mov
imul
add
sti
mov
ds
ret
or
add
add
fbstp
cmova
inc
mov
cmpl
and
jecxz
or
mov
adc
sbb
push
ret
shll
xor
inc
dec
mov
xchg
mov
jb
dec
xchg
dec
out
mov
sbb
jno
inc
int
sarl
xor
jge
cmp
jmp
lea
aaa
ret
fldl
mov
cmp
bound
loopne
jae
in
xchg
mov
cltd
mov
sti
outsb
jo
imul
in
push
adc
dec
and
dec
add
int
iret
ret
cli
sub
stos
or
sti
ljmp
push
pop
xor
mov
repnz
imul
jo
push
out
sub
shlb
aas
or
in
fnsave
jo
push
pop
jne
add
popf
call
mov
testl
sub
leave
lods
outsb
or
js
outsl
xchg
clc
lcall
or
jmp
ss
jp
mov
cmp
sahf
pop
lret
mov
stc
cld
testb
xchg
cmp
xor
lret
ret
fdivrl
sbbl
cmc
out
mov
push
mov
push
lea
mov
lods
push
push
fs
cld
and
and
mov
call
lds
mov
xchg
lods
pushf
and
iret
inc
mov
inc
pop
cld
es
jecxz
jmp
sub
icebp
daa
testl
iret
lahf
and
sub
and
xor
jg
test
and
stos
pop
cmp
sbb
sbb
iret
aad
cltd
cmp
mov
movsl
imul
push
pop
cmp
mulb
stc
dec
pop
int
sbb
push
sub
sahf
fisubrs
aad
ret
lea
add
add
cmc
iret
and
popf
xchg
sub
movsb
or
repnz
cmp
imull
es
push
pop
xchg
xchg
test
stc
jb
inc
and
clc
scas
enter
mov
inc
inc
bnd
lds
xchg
pushf
cmp
fstp
stos
sub
and
xchg
sahf
xor
mov
popa
and
in
roll
xchg
mov
push
fmull
sti
shrl
sbb
mov
sbb
sbb
adc
adc
jp
mov
pop
sahf
mov
fwait
cmp
jecxz
js
mov
mov
add
jmp
push
aas
in
jne
pop
leave
fstpt
or
popl
cmp
loopne
fcmove
aad
and
cmp
inc
and
mov
mov
icebp
es
jecxz
rcrl
sti
inc
fnstsw
lods
mov
inc
cld
sub
xor
xor
cmp
sbbl
add
dec
inc
into
lea
orl
addr16
jo
adc
movsb
lock
mov
cmc
dec
jmp
mov
test
leave
dec
insb
and
mov
mov
push
or
stos
sub
ja
outsl
iret
pushf
inc
cmpsl
test
in
adc
mov
fldl
push
dec
out
xchg
ss
adc
enter
in
test
stos
pop
bound
mov
cli
ja
mov
sbb
enter
mov
xchg
shrl
loop
mov
or
insl
adc
jle
sbb
pop
jb
nop
and
xchg
je
inc
shrb
and
xchg
pop
sub
fldl
cwtl
and
xor
mov
add
out
mov
push
imul
bound
testl
jmp
jb
push
xor
lahf
mov
fldt
std
aam
les
sub
adc
fdivl
jno
movsl
bound
shl
mov
call
cs
addl
push
inc
mov
adc
icebp
dec
xorl
cmp
lret
adc
jle
aas
int
push
hlt
lret
popa
push
add
or
sub
mov
int
sub
mov
push
dec
pop
out
out
push
xchg
ljmp
push
mov
mov
cmp
and
mov
push
xor
repnz
daa
jl
jne
dec
and
rorb
push
jns
cmp
gs
movsl
cmpsl
sub
jmp
cs
shl
in
pop
mov
popa
outsb
pushf
mov
push
mov
lods
lds
push
aaa
jns
pop
mov
ret
in
repz
ds
jp
sti
lea
cmc
xchg
mov
sub
xchg
rcr
or
mov
add
xorb
dec
std
xorl
iret
inc
insl
push
je
enter
dec
outsl
popf
sbb
jge
in
xchg
shll
xchg
test
cld
test
sub
rcll
shrb
repnz
cmpb
fcom
xorb
clc
mov
aaa
pop
pop
rcrl
rcrl
leave
xchg
ds
mov
ficoms
mov
sar
ret
repz
adc
mov
js
shll
dec
fldl
mov
xchg
or
push
fcompl
sbb
jl
fs
scas
xchg
mov
inc
les
bound
cli
pop
or
ljmp
push
hlt
adc
mov
push
addr16
outsl
das
adcb
and
jb
mov
arpl
inc
enter
jbe
lret
xor
cmp
andb
add
cli
sub
scas
pop
adc
das
pop
js
jge
mov
and
fsubl
push
in
mov
add
mov
jae
or
std
outsl
sahf
fmulp
and
dec
ja
jnp
sub
js
scas
mov
push
dec
fwait
icebp
jmp
sti
jnp
sarl
in
sti
mov
pop
les
dec
cmp
cmp
xor
and
xor
je
sub
andl
push
cmp
pop
push
pop
sahf
cwtl
dec
mov
imul
mov
fisubrl
nop
in
bound
pusha
ljmp
jp
popa
icebp
fwait
lret
adc
sbb
daa
mov
ret
adc
inc
inc
orl
clc
sbb
mov
mov
std
rcll
mov
cmpsb
cli
cmp
icebp
pop
pusha
stos
das
push
shll
pop
inc
clc
jg
daa
pushf
pop
xor
fs
cltd
enter
shll
add
int
or
mov
lods
cmc
iret
sub
repz
pop
pop
bound
int
inc
mov
pop
jp
lret
xor
jle
and
push
iret
pushl
xchg
xlat
filds
aam
mov
test
pop
pop
fs
xchg
cmp
cmc
pop
or
xchg
int
or
adc
mov
cli
cmp
mov
mov
imul
add
xor
push
mov
pop
xchg
lret
jg
inc
push
push
aaa
mov
xor
xlat
ja
stos
adcl
stc
mov
bound
arpl
sbb
ljmp
nop
and
adc
int
mov
cmp
scas
imul
lods
stos
aam
fidivrs
es
movsb
push
and
sar
in
fdivl
xor
and
adc
rolb
scas
inc
inc
add
push
rcr
ja
in
roll
test
cmp
call
shl
ja
repz
rclb
inc
in
or
push
xchg
dec
jbe
mov
aad
mov
cmp
mov
lcall
inc
fwait
lret
pop
cs
loop
insl
mov
fucom
or
push
inc
jb
repnz
inc
nop
xorb
xchg
cmp
or
mov
sarb
sbb
mov
aas
out
out
add
dec
aaa
mov
jbe
jno
or
lods
jnp
dec
dec
stos
cmp
xor
pop
dec
push
cmp
jbe
aad
bound
stos
call
inc
add
push
lds
cmp
ret
sub
in
dec
sbb
jp
jg
sub
shlb
icebp
std
aam
sti
jl
pop
fsubl
in
dec
outsl
nop
ss
pushf
loope
pop
mov
std
ja
es
iret
int3
subb
mov
sbb
lcall
mov
inc
or
rorb
je
mov
inc
stos
in
scas
lcall
icebp
push
or
xchg
jg
push
mov
jae
ror
and
subl
add
cmp
push
jge
or
jno
inc
mov
add
aad
adc
pusha
fdiv
ror
push
out
dec
mov
xor
arpl
inc
fnstenv
sbb
and
lea
push
xor
sahf
dec
jge
aas
mov
hlt
or
xor
mov
je
and
sbb
lds
fadd
into
and
sbb
gs
imul
pop
cmpsl
push
mov
dec
adc
pop
jle
sub
out
push
pop
int
hlt
ja
outsl
testb
push
arpl
out
push
dec
lahf
cmp
push
lret
sub
and
sbb
jb
or
test
jle
mov
xchg
push
mov
add
xchg
out
mov
out
push
stos
movsl
xchg
into
stos
sub
outsb
cld
sbb
cwtl
loope
daa
jb
outsb
ja
inc
xor
sbb
aas
icebp
popf
popf
xor
mov
and
scas
iret
divl
rcl
rclb
fcmovne
xchg
enter
addr16
dec
and
movsl
test
mov
mov
into
aas
cmp
aaa
xchg
daa
je
mov
push
dec
xchg
in
inc
or
lret
jecxz
sbb
mov
xor
mov
inc
inc
inc
push
xlat
push
xchg
icebp
popa
lret
lods
lods
inc
rcrl
out
notb
mov
mov
cltd
mov
mov
add
jecxz
shlb
xor
ret
mov
clc
mov
insb
mov
aad
in
add
xor
jl
jno
pop
jae
sbb
pop
test
mov
push
lea
lock
fisttps
mov
repz
into
lods
add
inc
mov
xor
fsubs
and
leave
pop
loopne
gs
jmp
shll
ljmp
jne
push
jle
mov
mov
push
fs
sbb
aam
add
sub
mov
nopl
pop
out
adc
sbb
xchg
xor
repnz
leave
lret
mov
nop
das
insb
imul
xchg
pop
pop
add
xor
sahf
into
fstl
lds
mov
xor
pop
push
adc
popa
mov
mov
out
jge
pop
jno
jo
mov
sub
jnp
inc
pop
clc
out
call
orl
inc
test
xchg
mov
hlt
nop
jne
mov
cltd
pop
inc
insb
je
rcl
lea
das
xor
mov
pop
jb
fs
mov
cwtl
iret
push
aas
lcall
fstp
lcall
cmp
mov
cli
and
mov
je
nop
adc
xchg
nop
stc
push
enter
jb
mov
lods
or
test
or
mov
call
cmp
mov
inc
mov
push
sahf
xor
cld
insl
stos
xchg
inc
and
movsl
dec
pop
ret
daa
fwait
cmpl
push
clc
test
mov
mov
dec
xchg
bound
pop
cs
decl
add
sub
mov
repz
dec
mov
mov
in
imul
sbb
and
jmp
inc
xchg
adc
xchg
pop
cmpsl
inc
cmpsl
cmp
sub
add
jns
repnz
or
fisubrs
mov
cmpsl
cld
sub
sub
sahf
jp
and
mov
adc
fistpll
mov
mov
mov
dec
cmp
pop
pop
xchg
inc
inc
pop
jmp
pop
gs
jge
jno
rcrb
jno
loop
pop
inc
push
mov
js
jg
dec
mov
adc
in
adc
xor
mov
out
imul
inc
xlat
add
out
in
popa
push
mov
popf
mov
sub
loopne
mov
push
rolw
mulb
jns
mov
in
out
mov
cmc
imul
or
addr16
orb
addr16
inc
data16
je
test
mov
lods
jp
js
fiadds
push
lods
inc
lds
jnp
or
and
aad
xor
test
push
insb
int3
sbb
aam
in
out
add
mov
rcrl
push
ja
aad
lahf
mov
lret
adc
dec
mov
enter
mov
daa
jb
data16
mov
lahf
inc
in
iret
add
insb
xorb
add
inc
jp
movsb
das
subl
mov
jae
or
inc
int
imul
push
jns
in
sbb
jb
repnz
daa
jmp
adc
leave
xor
mov
pop
dec
imul
pusha
mov
mov
push
fs
shlb
xchg
cmp
gs
dec
and
inc
push
lret
add
or
dec
push
fisttps
addr16
pushf
shl
mov
pop
pop
push
jp
addr16
daa
add
sub
das
sahf
xor
mov
movsb
int
scas
rcr
xchg
js
inc
inc
aaa
inc
sbb
aam
ss
ss
scas
scas
fimuls
in
dec
rcrb
pop
mov
mov
add
add
push
add
ja
xchg
popf
mov
cli
out
movsl
add
imul
add
mov
fbld
xchg
add
lret
inc
fistps
xchg
ret
xor
mov
lret
jns
cmp
jmp
fldcw
or
in
mov
iret
popf
adc
push
push
add
lcall
lret
sub
int
inc
xchg
pop
add
inc
mov
faddl
out
iret
inc
mov
out
push
adc
pop
stc
daa
mov
cli
enter
jmp
repnz
xchg
push
push
jecxz
xchg
xchg
xchg
cmp
sbb
pop
cld
iret
mov
enter
sub
fdivp
dec
pop
xor
pop
push
std
int3
jle
pusha
das
and
jg
dec
in
insb
aam
push
and
add
push
mov
orl
test
cmpsb
sbb
setl
addl
maxps
jecxz
mov
addr16
add
imul
mov
pop
je
pop
or
jp
jno
push
addl
int
div
jp
push
dec
lcall
jbe
pop
xor
jmp
or
mov
xchg
das
stc
mov
daa
loop
add
fcomip
jge
push
mov
xor
inc
mov
divb
pop
inc
adc
xchg
xor
test
fistpll
out
sbb
aad
push
rcr
xchg
jle
sbb
dec
pop
addl
hlt
jo
fiaddl
les
scas
and
stos
xchg
cld
sahf
sbb
bound
adc
les
dec
insb
loopne
inc
jmp
mov
clc
mov
mov
jmp
sub
xor
cli
fiaddl
jo
push
es
mov
stc
push
fwait
popf
cmp
test
movsl
sti
in
pusha
inc
inc
pop
pop
repz
and
in
cmpsl
hlt
pop
push
mov
cmp
jecxz
decl
shrb
inc
mov
loopne
and
jb
lcall
les
xchg
mov
fnstsw
and
pop
dec
ret
inc
sbbl
mov
les
xchg
xchg
fstpt
and
xchg
mov
shr
dec
fimuls
and
mov
je
jnp
and
bound
lret
sti
mov
imul
xor
mov
lret
sub
mov
dec
sbb
or
icebp
push
inc
es
mov
and
sub
bound
mov
push
pop
gs
mov
pushf
xor
testb
jmp
adcl
adc
ret
push
jno
fisubl
add
int3
xchg
iret
adc
mov
jns
mov
jge
loope
lea
add
jne
pop
jle
js
shll
repnz
hlt
jns
push
cmp
push
popa
sbb
push
xor
push
psubb
sub
daa
or
xor
pop
arpl
shrl
cmpb
cmpsb
mov
cld
mov
push
out
imul
inc
cmpb
psubw
ja
cmp
xchg
xchg
or
stc
fistpl
lock
dec
jmp
jmp
jns
jnp
push
int3
repnz
lock
sub
lods
hlt
xchg
and
mov
pop
gs
cmp
lret
xchg
xchg
push
das
inc
sub
icebp
aad
fistps
cmp
repnz
test
cli
jecxz
clc
rolb
sbb
mov
mov
scas
pop
dec
sti
sbb
push
jbe
push
xchg
mov
loop
xor
push
add
out
push
fstl
and
cmpsb
stos
fwait
dec
mov
adc
and
cmpsl
push
ds
leave
aaa
add
add
ljmp
les
stos
pop
fidivrl
push
xchg
aas
mov
push
test
pop
fldenv
and
inc
pop
arpl
loopne
cmpsl
cmp
mov
mov
cltd
xchg
fcompl
or
mov
ss
xor
fildl
adc
pop
dec
mov
pop
sub
add
lock
in
xchg
xor
rclb
sub
call
mov
ret
ss
out
jbe
mov
call
nop
mov
bnd
sbb
filds
jo
adc
mov
shlb
mov
fwait
pop
movsb
imul
jg
std
test
in
psubb
or
sbb
popf
in
scas
lret
shlb
fdivl
shll
mov
sub
inc
data16
cmpsl
addr16
adc
or
pop
jg
adc
aas
hlt
xlat
push
adc
js
rorl
ret
fnstcw
xlat
das
fs
sti
out
xlat
stos
xchg
js
sbb
push
cli
sahf
jae
inc
xchg
mov
fisttpll
neg
imul
imulb
aam
mov
inc
dec
mov
push
cmp
push
shrb
movsl
jmp
enter
enter
mov
into
mov
das
outsl
xor
clc
fsubp
lcall
aas
inc
xor
bound
sbb
cs
dec
sbb
xchg
xor
into
xchg
sti
jnp
sub
adc
and
inc
insl
inc
jnp
test
subb
jmp
lea
shlb
adc
loop
xchg
mov
xor
add
je
std
in
or
lods
push
cwtl
call
mov
aad
shll
fidivs
mov
jl
sub
and
add
jle
addb
xchg
divb
in
testl
or
int
test
mov
lods
add
int
sbb
and
adc
lcall
pusha
inc
or
mov
insl
jg
adc
in
jne
or
cmc
cwtl
rorb
and
and
leave
cs
push
into
fimull
adc
add
movsl
movsl
std
shrl
aaa
test
stos
or
cli
xchg
push
fists
dec
cltd
out
xchg
in
adc
movsl
test
subl
mov
out
pop
inc
test
testl
rorl
inc
mov
mov
and
xor
mov
pop
lock
fdivr
lods
add
push
adc
cmp
xor
push
sbbb
dec
int
ficomps
cmp
or
sbb
fwait
enter
xchg
stc
push
sti
sti
ds
lahf
fdivl
cmp
pop
rcrb
cmp
cld
push
sbb
lods
pushf
cmp
xor
mov
mov
xchg
dec
jg
mov
cmp
js
cld
cmp
cld
and
cmp
dec
jae
mov
js
or
pushf
sbb
push
sahf
fidivrl
add
inc
pop
loope
lea
add
lret
push
stc
sbb
cmp
adc
addb
add
aas
mov
in
adc
fistpl
mov
cltd
dec
adc
dec
push
mov
sub
scas
xor
popa
push
xlat
cmp
cmp
push
cld
and
pop
ret
adc
bound
scas
jns
xchg
call
ficoms
clc
or
dec
mov
or
mov
push
xchg
aas
or
dec
push
dec
or
xchg
fisubrl
jle
jnp
push
ds
mov
cmp
xchg
sub
ja
mov
insl
jbe
sbb
sbb
inc
lret
ja
das
jecxz
push
leave
dec
mov
bound
mov
or
int3
jl
jae
out
addl
pushl
loope
ret
or
dec
repz
sub
aaa
imul
mov
into
js
std
jns
jne
inc
xchg
pop
mov
stos
xor
add
fwait
pop
in
sub
mov
sub
add
xchg
sub
test
addr16
jge
subb
sbb
stos
or
push
fwait
cwtl
lods
je
mov
ja
test
mov
xorl
js
dec
js
pushl
push
jle
into
jb
lea
sbb
popf
fidivs
les
std
sub
xor
outsl
test
fwait
sbb
add
xchg
imul
outsb
jecxz
je
mov
imul
lret
ss
mov
ja
jg
inc
cmpb
test
adc
xor
movsl
fwait
in
ja
sbb
sub
mov
test
push
lock
jmp
sbb
or
adc
fwait
test
push
mov
fwait
inc
push
lahf
loope
push
bound
add
xor
adc
int3
jl
pop
iret
daa
sahf
sub
lds
lock
mov
dec
daa
test
sub
fdivp
push
fyl2xp1
add
mov
jmp
mov
dec
add
or
cmpsb
fwait
xchg
jecxz
xchg
sub
cmp
sbb
fcoms
jge
mov
daa
enter
jno
push
sti
mov
imul
sub
pushf
inc
add
mov
es
xor
outsl
or
test
jnp
mov
mov
data16
jns
ss
mov
outsb
pop
mov
mov
aam
fsubl
ljmp
inc
aaa
inc
bound
shr
in
fwait
daa
sub
mulb
xor
inc
push
mov
aas
jb
xchg
mov
inc
sbb
cmc
in
sub
arpl
jge
push
outsl
aad
pop
es
cmp
popf
adc
pop
pop
xor
and
shl
push
loop
sub
dec
repz
pop
ret
std
mov
mov
pop
inc
mov
ret
xchg
hlt
incl
push
push
mov
pushf
adc
jmp
popf
jno
lcall
cmp
jg
addr16
repnz
xchg
imul
les
mov
clc
push
xchg
and
xor
push
mov
push
jno
push
jle
stos
or
jle
cmp
sbb
pop
je
rcll
cs
jb
add
pop
mov
or
sbb
push
inc
dec
mov
inc
movsb
stc
test
push
repz
mov
das
popa
subl
stc
dec
jnp
push
jnp
xlat
sub
lods
and
jns
pop
jbe
stos
into
cwtl
fisttpll
aaa
ret
dec
push
prefetcht2
and
jno
mov
orb
mov
clc
out
jb
stos
sbb
sbb
das
lods
fdivs
stc
das
push
mov
pop
stos
inc
test
dec
lods
dec
cmp
jmp
pop
cltd
mov
sbb
fwait
repz
inc
shlb
pop
or
into
and
jne
jl
mov
imul
or
fldcw
sub
pop
sbb
sub
pop
fbstp
push
push
cmpsb
ficompl
aad
lock
roll
add
sub
clc
andl
jnp
lret
adc
cli
les
ja
pop
clc
xchg
dec
adcb
pop
test
mov
mov
insl
jae
mov
bound
ja
jmp
mov
cmp
mov
sti
ljmp
cmp
xchg
mov
test
inc
fwait
stos
add
loope
lods
add
cld
roll
jg
cmp
pop
nop
cmpsb
sahf
sbb
aad
adc
outsl
xchg
jbe
fidivl
mov
enter
xchg
lret
ljmp
popa
test
jbe
inc
jle
daa
lahf
sbb
stc
iret
repnz
cmp
sub
jmp
sub
mov
ss
pop
aas
outsl
sbb
pop
mov
sub
rolb
shll
dec
cmp
add
roll
daa
aam
pop
jo
push
push
mov
xor
lods
std
mov
push
fstpt
clc
or
lcall
jmp
mov
mov
movsl
addr16
cmpsb
mov
cs
ret
pop
andb
or
fildll
loopne
xchg
mov
aaa
push
mov
cld
and
push
mov
cmp
dec
imul
inc
popf
inc
xor
jo
leave
pusha
inc
loope
repnz
push
sbb
push
dec
sbb
jg
xor
dec
sbb
inc
lahf
lock
jecxz
dec
ffree
out
testl
ret
mov
jge
add
jg
stc
push
in
in
pop
mov
xor
loope
iret
cmp
inc
mov
push
pop
cmp
aas
ds
xchg
scas
sbb
add
lret
adc
rcr
cmp
cmpsl
adc
stos
lahf
adc
test
lds
mov
dec
dec
add
lret
inc
movl
popf
sub
sbb
inc
popf
jne
data16
gs
sub
cmp
or
arpl
aad
adc
por
adc
lret
lock
dec
mov
push
mov
adc
mov
ds
cmpsl
gs
jae
ret
scas
data16
aad
mov
xchg
repz
push
xchg
xchg
mov
xchg
jbe
push
lret
jle
jb
xchg
pusha
nop
jnp
outsl
scas
lods
les
sub
jo
xchg
les
jne
xchg
jmp
push
add
jno
cmovp
push
fmull
andl
gs
loop
arpl
lcall
jle
mov
clc
mov
add
add
loopne
mov
roll
out
ficoms
lock
push
pop
jl
js
and
adc
push
call
pop
in
xor
sti
add
push
xchg
add
divl
adc
movsb
cmp
xchg
mov
or
mov
xor
and
imul
jae
mov
jb
xchg
shll
or
mov
test
call
dec
mov
adc
das
xchg
sub
nop
gs
inc
cwtl
sbb
sarb
imul
loopne
aad
icebp
fs
mov
out
lcall
mov
push
shl
sbb
hlt
mov
in
nop
push
mov
push
lahf
dec
jg
ret
es
imul
in
adc
push
jl
leave
mov
add
mov
jno
adc
clc
fs
inc
lcall
push
cmp
jle
or
xchg
xchg
and
in
mov
push
popl
mov
adc
cmp
je
mov
dec
ds
fisubrl
adc
mov
stc
jecxz
pop
les
sbb
or
aaa
je
inc
adc
data16
and
mov
out
push
std
mov
insb
push
lods
dec
fstpt
out
and
pusha
shlb
pop
inc
sub
push
adc
and
push
das
hlt
cli
pusha
push
and
loopne,pt
and
inc
cmp
fistps
lea
xchg
sub
sarl
in
mov
mov
dec
jp
sub
mov
cli
sub
cmp
orb
cmp
cmp
out
popf
test
xorb
out
icebp
inc
mul
ret
cmpl
das
mov
lcall
or
jecxz,pt
add
or
rcrb
ss
mov
addr16
jb
push
mov
jo
adc
es
fldcw
rolb
fnstsw
push
test
mov
xchg
mov
cmpsl
stc
and
lods
fisubs
sbb
sbb
shlb
sub
pop
jmp
test
popf
das
fcmovnu
insl
ja
lods
mov
mov
das
inc
mov
mov
xchg
pop
jnp
mov
pop
jns
pusha
imul
mov
sub
dec
clc
je
pop
cltd
mov
mov
imul
sub
mov
fldcw
fiadds
push
and
jle
mov
mov
mov
sahf
add
mov
adc
xchg
push
jnp
dec
xor
dec
dec
sbb
xchg
inc
cmp
pusha
push
push
inc
jp
addb
pusha
cltd
push
imul
push
cld
dec
ss
test
push
sbb
pop
jae
mov
mov
push
stc
dec
ljmp
cmp
sbb
cmp
jge
mov
imul
mov
xchg
jge
adc
stos
sti
mov
nop
pushf
push
outsb
arpl
in
in
pushf
idivl
push
out
cmp
add
mov
repnz
inc
sub
sbb
arpl
add
es
mov
les
jne
mov
sbb
movsb
dec
mov
xchg
fwait
call
mov
mov
outsl
xchg
out
hlt
mov
cmpb
jl
xor
add
xchg
cmpl
insb
push
and
imul
ja
fldenv
stos
cmp
xchg
mov
xchg
push
dec
jp
sub
xchg
cmovl
xchg
loop
add
mov
jb
sub
jl
jns
sahf
or
clc
dec
and
nop
xchg
xorl
insl
jmp
je
mov
in
ss
iret
inc
pop
rolw
lea
insl
test
movsb
orl
std
and
adc
xor
mov
bound
push
xor
test
aas
ss
gs
hlt
adc
mov
out
aaa
lcall
bound
jae
jae
cmp
out
cmpsl
insb
ret
push
pop
lahf
int3
cmp
and
pmovmskb
test
and
sbb
pusha
and
mov
sbb
sahf
dec
pop
int3
addr16
inc
and
lcall
aas
add
cmpxchg
mov
jns
sahf
inc
gs
jp
sub
std
xor
sub
sbb
out
dec
adcb
lcall
arpl
mov
out
imul
jb
mov
or
adc
add
das
movsl
jo
jmp
popa
out
in
cmp
stos
fdivs
mov
adc
in
dec
mov
shlb
jmp
jmp
out
jecxz
in
mov
xchg
lods
and
lret
cld
sbbl
stc
lret
cld
or
sbb
inc
add
negb
bound
push
into
jle
jae
into
fadds
mov
bound
sub
xlat
mov
xchg
mov
int3
pop
and
mov
rcll
xor
xlat
insb
fistps
repz
inc
jg
pop
mov
jmp
loope
mov
fiadds
mov
mov
or
mov
sub
jge
cltd
aam
xchg
mov
test
and
rcrb
incb
js
outsb
repnz
jno
fcmovnb
out
repnz
push
test
ds
dec
xchg
xchg
mov
mov
push
mov
and
pushl
sahf
jbe
mov
adc
mov
sub
cmp
mov
adc
testl
loope
movsl
fdivrl
push
jne
xor
xchg
test
fidivl
test
sub
enter
and
jno
push
out
divl
add
inc
ss
push
sub
movsb
arpl
rol
ret
mov
sub
add
lcall
out
pop
dec
aad
call
mov
notb
mov
stc
adc
aam
jmp
or
xor
icebp
int3
and
mov
in
jmp
es
scas
fisubrl
sbb
jge
lret
mov
jne
roll
lcall
popa
std
sbb
test
mov
jns
fcompp
xchg
rcrl
dec
hlt
jl
adc
jae
aad
mov
xor
leave
cmc
cld
sub
lods
push
mov
cmpsl
dec
fiadds
push
gs
inc
lock
dec
out
jg
fwait
cmp
and
repnz
out
fisttpl
push
popa
jmp
shll
jl
mov
fadd
fstpl
mov
pop
vmovsd
adc
add
stc
out
inc
std
fidivrs
movsb
dec
push
fsubl
mov
add
sbb
dec
fisttpl
pop
rcrl
or
fmul
data16
add
cmp
mov
or
push
or
xor
cld
sbb
aad
cmp
jno
push
lods
outsb
and
popf
stos
aam
out
dec
jo
rcrl
out
stos
adc
xchg
mov
mov
and
jle
dec
adc
rcrb
xchg
idivl
sbb
jbe
xchg
adc
mov
les
mov
or
imul
jl
xchg
dec
inc
sbb
in
and
mov
sbb
inc
xchg
push
pushf
mov
icebp
lods
push
jne
stos
pop
or
mov
aas
sub
shl
roll
mov
loope
or
cmp
inc
jb
rolb
mov
int3
in
cs
mov
pop
sbb
movsb
xorb
rorb
mov
jnp
xor
and
clc
ret
aam
mov
addr16
mov
pop
andb
mov
ja
sub
andl
add
cmp
push
xchg
add
pop
fisubrl
fadds
aaa
imul
push
frndint
mov
loop
ret
dec
mov
aad
lret
cli
adc
pop
addl
test
add
insl
cltd
jns
mov
int
clc
sbb
add
cmp
xlat
ret
out
sbb
daa
push
ja
jmp
pop
aad
cmp
push
outsb
dec
xor
cld
sub
inc
dec
mov
testl
sbb
pusha
lahf
mov
gs
add
in
icebp
dec
cmp
loop
adc
jge
cmc
inc
xor
mov
mov
add
gs
lods
addr16
or
aam
mov
and
mov
je
mov
test
je
stos
dec
sub
mov
ss
jne
lea
mov
jge
enter
cltd
adcl
cmp
sbb
movsb
roll
insb
insl
addr16
jb
dec
xchg
mov
xor
xor
mov
test
jp
or
or
inc
mov
xchg
int3
push
das
mov
adc
sub
dec
mov
pop
inc
mov
mov
mov
mov
ret
xchg
out
call
or
or
cli
jno
cmp
out
cmpsb
pop
xchg
or
insl
outsl
insb
pop
ds
out
jns
sbbw
addl
pop
insb
cmpsb
dec
jno
lock
add
jno
mov
or
leave
repnz
add
jno
add
push
xor
lea
cli
sbb
inc
sub
inc
std
mov
test
adc
lds
pop
sub
fistpll
and
sub
pop
and
gs
xchg
jnp
shll
sub
cmp
in
xchg
daa
shlb
jmp
enter
fldl
mov
fistl
insb
incb
sbb
je
shll
mov
das
fldt
cmc
stc
mov
push
or
pop
pushf
incl
into
dec
inc
adc
gs
cmp
cld
data16
je
cwtl
adcl
mov
mov
ret
pusha
cmc
sub
sub
xchg
lret
jmp
adc
cmpsb
in
push
dec
xchg
mull
ljmp
adc
les
pop
xchg
lahf
adc
loop
adc
jmp
in
dec
jbe
jp
rcl
jg
jge
dec
nop
lahf
mov
or
push
xchg
sbbb
push
xlat
in
cmc
xchg
arpl
push
inc
dec
mov
imull
adc
ret
xchg
push
mov
and
mov
inc
aaa
je
andl
pusha
adc
cwtl
and
ret
mov
fidivl
pop
mov
push
push
mov
sub
insl
cmp
call
ss
fldl2e
pop
cmp
mov
inc
jbe
imul
lcall
ja
jecxz
add
das
pop
mov
dec
aad
xor
mov
out
insb
xor
dec
xchg
aas
stos
fistpll
and
icebp
xchg
popf
xchg
adc
mov
cmp
and
or
push
nop
mov
sub
daa
inc
mov
mov
xor
data16
cltd
insb
and
pop
scas
and
imul
mulb
sahf
xor
xor
sub
sub
jns,pt
xchg
lahf
in
pop
pop
aas
xchg
mov
aad
mov
ds
mov
xchg
aam
push
xor
cwtl
loopne
mov
arpl
mov
dec
mov
xor
lock
cwtl
jbe
push
dec
push
push
shlb
xchg
push
or
mov
test
mov
mov
pop
cmpsl
or
insl
shll
dec
int3
sbb
sub
cli
mov
jle
xor
mov
rorl
es
cmp
aam
in
loope
or
dec
pop
lods
clc
hlt
iret
jnp
xchg
movsl
push
call
data16
pushf
xchg
idivl
pop
sub
fs
jmp
sub
das
push
mov
fstps
movsl
adcb
cltd
xor
adc
mov
out
mov
mov
arpl
mov
stos
ljmp
bound
ret
jecxz
popf
ja
ja
xor
push
shll
mov
inc
int
or
jb
push
mov
inc
xchg
xor
cs
mov
rorl
or
lahf
and
sbb
test
jge
xchg
push
dec
cmc
cmc
fwait
adc
dec
inc
orl
gs
cmpsl
fnstenv
sub
cld
cwtl
fcompl
ret
add
test
or
and
dec
push
gs
sbb
addl
lea
out
xchg
sub
xorl
scas
mov
xor
in
pop
lret
jp
ds
push
mov
jne
adc
cmc
sysret
mov
add
scas
ja
imul
xor
cmc
pop
xor
mov
add
idivb
mov
out
mov
add
ret
or
xchg
aas
pushf
inc
mov
or
adc
inc
lret
xorb
jmp
sbb
cmpsb
xchg
mov
push
sbb
mov
add
jle
push
mov
hlt
or
push
jbe
lahf
shl
mov
add
mov
adc
push
adc
test
popf
add
xchg
pushf
mov
clc
push
dec
jne
jp
stos
scas
out
push
and
mov
add
cld
jg
and
std
push
into
ret
imul
add
int
stos
ja
jl
fsubs
in
jno
push
xchg
cltd
jns
mov
in
add
fwait
js
adc
xlat
jecxz
shll
dec
pop
mov
std
stos
in
test
mov
push
fimuls
xchg
gs
pop
jns
or
adc
mov
xchg
mov
push
repz
inc
add
sub
xchg
cmp
adc
pop
push
bnd
mov
mov
sbb
dec
dec
push
lea
fwait
push
fsqrt
in
shr
and
mov
out
dec
jmp
or
jecxz
xchg
pushf
ds
mov
mov
mov
dec
mov
dec
out
repnz
push
adc
leave
jo
imul
outsb
jae
std
imul
xor
fimull
clc
cmp
fwait
xor
sbb
mov
jp
inc
call
fmuls
int3
lods
mov
loop
push
inc
movsb
mov
mov
mov
insb
inc
ret
xor
rclb
xchg
adc
mov
imul
mov
xor
insl
decb
and
stos
push
add
push
leave
jp
jns
mov
mov
sub
pop
xor
sub
movsl
test
das
into
lea
cmpsb
push
xor
imul
mov
cmc
xchg
mov
mov
loop
std
cmpb
cmp
xor
xor
pop
sub
cwtl
std
mov
and
sbb
arpl
mov
or
jae
insb
jmp
fsubr
push
mov
mov
mov
mov
pusha
lods
lods
mov
add
add
adc
sahf
xchg
xor
xchg
sub
sbb
test
shll
push
sub
inc
lret
aas
test
pop
ret
mov
test
adc
popa
xchg
inc
insb
cmpsb
and
ja
iret
outsl
add
test
jg
sbb
js
ja
sub
gs
imul
imul
cmc
pop
xor
push
inc
testl
jge
jl
in
sub
mov
add
mov
leave
sbb
xchg
mov
mov
xchg
cld
das
or
pop
fsubr
mov
mov
scas
imul
iret
push
dec
gs
sub
push
mov
lret
fisttpl
fdivrl
cltd
iret
push
push
push
fisubs
out
icebp
mov
fmulp
jno
xor
ja
mov
popa
or
test
movsl
jo
jae
shrb
bound
int3
shr
jnp
mov
jl
daa
pop
popf
and
cmc
jp
push
mov
outsb
cli
xlat
hlt
inc
shl
stos
inc
jns
icebp
xchg
lahf
clc
pop
mov
pop
inc
dec
push
repz
mov
test
fdivs
xor
dec
mov
ficoml
dec
push
mov
cwtl
jle
jae
loop
ret
and
aam
outsb
mov
dec
xchg
imul
xlat
sub
pop
jl
pusha
dec
adc
add
sub
lahf
popf
imul
inc
mov
xchg
out
pop
into
mov
stos
int
in
scas
xchg
cmp
push
xchg
xchg
lds
enter
adc
adc
popa
jno
in
out
adc
adc
ret
jmp
jle
or
mov
xchg
adcl
pop
cmpsl
stos
cmc
hlt
imul
xor
ficoms
add
adc
xor
mov
add
bound
adc
push
mov
cmp
mov
adc
jbe
push
push
push
push
mov
scas
outsb
lea
mov
fs
cmp
add
shl
mov
std
testl
sbb
push
int3
addr16
and
in
pushf
es
adc
jbe
sbb
adc
out
sbb
jge
mov
or
aaa
jae
lret
xchg
addr16
int3
cmp
stos
ds
xchg
into
stos
aad
stos
lods
outsl
jge
and
xchg
bound
mov
rcll
mov
push
iret
mov
sbb
dec
pusha
sar
pop
cwtl
imul
lret
jg
lret
jecxz
ja
in
dec
adc
call
and
xor
mov
ljmp
pusha
shrl
shlb
push
push
stc
cmovge
mov
mov
dec
xlat
xchg
mov
push
or
andb
addr16
leave
pop
inc
mov
mov
fadds
inc
adc
xchg
int
sub
adc
cmp
inc
out
stc
push
insb
and
xchg
pushf
mov
data16
push
movsl
test
adc
or
push
push
lods
or
out
bnd
loop
sub
dec
push
insl
jp
and
push
pushw
aaa
xor
out
in
push
shr
sbb
or
andl
jl
sbb
cli
dec
push
mov
hlt
sti
xlat
mov
inc
mov
mov
push
fsubrl
xor
xchg
jle
mov
shlb
inc
das
add
pop
outsb
mov
sub
pop
jge
nop
sub
mov
insb
xor
aas
xchg
outsl
jmp
idivl
inc
mov
push
mov
jne
push
loop
push
sub
lods
jnp
mov
push
xor
xor
hlt
cmc
add
icebp
popf
roll
pop
enter
pop
fsubrl
inc
dec
inc
orb
lcall
loopne
inc
xchg
stc
push
mul
test
or
std
mov
push
fxch
lret
jp
xchg
pop
in
fucomi
xchg
outsb
inc
test
xlat
scas
sbb
sbb
repnz
pop
lods
dec
filds
in
adc
cmp
popw
cmpsb
dec
ljmp
jle
es
and
inc
push
xchg
pop
nop
aad
and
call
sub
jo
cmp
cmp
jle
in
lahf
mov
and
mov
pop
cmc
jecxz
iret
fcomi
mov
shrl
rclb
mov
jmp
sarl
aaa
mov
adc
mov
lfs
rclb
stos
bound
mov
roll
dec
shll
in
cmp
test
insb
inc
mov
clc
ret
out
jae
inc
sti
outsb
cmpsb
aas
mov
inc
add
or
inc
mov
les
fsubr
cmp
jno
add
sbb
adc
cwtl
mov
repnz
and
out
pop
push
leave
xorb
test
dec
mov
adc
int
or
loope
int3
sti
cs
enter
out
sbb
shr
and
aas
fcomip
out
or
cmp
add
imul
add
into
iret
inc
dec
cwtl
in
into
push
loope
add
and
jg
sub
mov
leave
push
or
imul
hlt
and
idivb
divb
dec
test
insb
pop
out
or
cmc
cmpsl
pusha
push
les
jecxz
xchg
or
push
mov
adc
negl
mov
mov
mov
ret
test
add
hlt
call
jo
adc
or
add
ficomps
jl
cwtl
in
mov
divb
loope
jmp
pop
xlat
lea
roll
rclb
stc
push
push
jns
add
lds
xor
push
aad
or
in
mov
push
repz
sbb
dec
aad
fwait
lcall
push
adc
push
push
xchg
pop
lods
pop
cld
pop
imul
jg
sub
xchg
repnz
dec
xchg
adcb
mov
lcall
sbb
das
or
out
mov
iret
jp
sub
push
jbe
fisubrl
ljmp
mov
sti
sbb
call
sbb
repnz
aas
insl
cmp
subl
or
sbb
add
nop
sbb
pop
jnp
popf
mull
jmp
sbb
sub
aaa
loope
sbb
mov
lods
lret
cmp
rclb
xor
mov
dec
adc
sbb
xchg
je
out
jle,pt
icebp
jno
jecxz
test
ljmp
into
adc
or
pop
xchg
mov
mov
arpl
dec
jecxz
push
out
cmpl
pop
int3
and
mov
jae
pop
mov
divl
jae
cmp
dec
inc
xchg
xor
xor
push
sbb
pop
pop
ret
outsb
les
inc
insl
sub
pop
fcompl
xchg
imul
push
dec
lcall
outsb
mov
sbb
fsubl
outsl
imul
leave
xchg
pop
movnti
lds
adc
bound
push
push
lock
test
sub
xor
cld
or
xchg
cwtl
mov
sub
jecxz
mov
call
sbbl
dec
jb
in
jmp
dec
fistpl
jg
jo
out
out
call
shll
ss
fistpl
pop
sbb
sub
aad
sarl
and
xchg
into
imul
mov
sbb
pop
xchg
cli
cmpsl
cltd
xchg
inc
movl
in
jbe
jno
pusha
in
aam
icebp
lods
fisubs
xchg
pop
mov
mov
sbb
cmpsb
aam
inc
pop
and
xor
jbe
ret
lahf
icebp
aam
xchg
insl
pop
sbb
ljmp
scas
cmpsl
mull
mov
jmp
into
lahf
mov
lahf
aaa
and
pop
mov
addl
and
pop
test
push
insb
ja
mov
je
into
loope
jne
dec
and
pop
xlat
rclb
mov
sbb
outsl
lods
cmp
cltd
stc
enter
test
add
cmc
insl
push
xchg
xchg
shl
stos
mov
cmpsl
subl
adcl
push
shll
es
mov
ss
push
or
daa
ss
in
xchg
pushf
out
jecxz
popa
mov
sahf
xchg
inc
imull
gs
cmp
and
mov
test
xchg
arpl
rcr
adc
movl
jo
imul
xor
jge
stc
sti
fdivl
enter
push
mov
mov
aad
aas
cs
inc
cld
sarb
mov
in
push
xchg
jo
leave
push
cs
movsb
sub
sbb
orl
xor
loop
push
bound
lods
fnstsw
std
mov
sbb
or
call
xchg
ror
jnp
mov
cmpsl
ljmp
loopne
out
mov
mov
lock
cmp
cmp
enter
imul
scas
fnsave
cmpsl
insb
pusha
pushf
outsb
test
add
cld
sbb
test
mov
xchg
cmpsl
sbb
outsb
test
sarl
xor
shll
roll
insb
cmp
adcb
jnp
lret
je
push
mov
ja
adc
add
aaa
and
sbb
ss
sub
popf
cmp
andl
icebp
hlt
or
movsl
jg
aaa
pushf
insl
inc
inc
cltd
lret
outsl
clc
neg
cli
repz
test
push
inc
aam
fs
and
jg
mov
pop
sahf
lock
push
lcall
dec
pop
push
sbb
int
popa
inc
stc
rorl
sbb
cmpsb
jns
dec
or
or
les
or
sbb
neg
test
addr16
ljmp
and
lahf
popa
jg
loop
push
cwtl
jge
or
add
jg
xor
xor
xchg
sarb
jle
dec
mov
cmpsb
xor
mov
lret
pop
xor
xor
and
stc
iret
and
mov
and
fbstp
dec
lock
jbe
push
in
and
icebp
pop
dec
pop
pop
push
jecxz
scas
xor
fdivp
test
sbb
fiadds
sub
mov
in
or
cmp
lcall
sahf
fst
pslld
icebp
pop
add
mov
and
test
notl
andl
cmp
dec
push
push
mov
ds
in
ss
fwait
cmp
bound
mov
mov
leave
push
xor
paddsw
mov
enter
outsb
ret
addl
stos
mov
cmp
jl
scas
fisubs
mov
adc
mov
lret
pop
pusha
xlat
icebp
ja
adc
popf
cli
into
aam
mov
jge
xchg
dec
mov
or
jne,pt
ss
dec
mov
adc
aaa
adc
sbb
mov
xlat
mov
mov
outsb
add
or
mov
jmp
pop
pop
insb
rclb
adc
pop
leave
or
mov
or
pop
lret
pushf
mov
test
pop
mov
inc
jno
test
mov
int3
mov
mov
inc
xor
je
ffreep
and
sub
xor
sti
fcoml
enter
and
int3
rolb
sbb
inc
add
push
ja
daa
inc
call
andb
add
mov
aas
icebp
mov
pop
add
xor
push
ljmp
nop
push
dec
inc
cmpsb
lcall
lahf
push
sbb
repz
in
push
insb
cmpsl
leave
in
jge
sbbl
test
jnp
sbb
dec
outsl
ja
push
ret
sti
mov
jnp
cli
xchg
or
loope
pop
dec
lret
lret
sbb
jle
sbb
xchg
jo
push
movsb
out
sub
cmp
fdivrl
mov
call
or
add
push
dec
dec
add
fdivs
ret
fistl
out
and
lret
jle
dec
jp
push
xchg
xchg
inc
mov
dec
aas
xor
xor
cltd
inc
jne
popf
cmp
pop
ficoms
cmp
jns
push
in
fdivrl
jmp
pop
jge
stc
adc
push
fsubr
mov
repnz
loope
add
punpcklwd
aas
arpl
dec
adc
dec
dec
mull
jb
jg
cmp
push
les
jl
inc
add
or
cmpsl
or
aam
cmpsb
mov
test
mov
outsb
push
pop
mov
mov
push
sub
roll
das
lret
jne
ret
and
test
test
mov
lea
push
pop
in
fsts
adc
pop
cmp
cmp
mov
andl
lahf
jl
sbbl
jnp
out
push
pop
out
mov
mov
and
jmp
inc
les
scas
scas
movsl
fisttps
xor
lock
das
or
out
pop
add
lods
push
cld
ret
ror
xor
fnstcw
dec
adc
xchg
call
or
cmp
cmp
xchg
or
loop
rol
xchg
test
sub
jo
mov
mov
push
sub
loope
stc
dec
adc
xor
mov
add
pushf
push
xor
pop
stos
clc
lea
clc
xchg
cmp
adc
adc
out
or
mov
add
sbb
mov
xor
jne
jle
fsubl
push
out
jb
dec
lret
xlat
sub
add
dec
mov
rep
loop
mov
xchg
mov
mov
mov
cltd
mov
push
inc
dec
add
mov
in
add
or
cmc
xchg
and
mov
add
insb
push
xchg
mov
xor
sub
and
out
push
mov
mov
mov
shlb
les
fcmovnb
iret
jo
fsubs
mov
jns
mov
dec
outsl
insb
mov
test
xor
testb
sahf
daa
adc
pop
lret
lahf
jle
insl
popf
mov
in
das
push
iret
call
mov
fcmovu
shlb
std
add
cmp
scas
xchg
imul
mov
and
or
fstpl
popa
inc
std
xchg
pop
mov
pop
add
fldcw
mov
lcall
pop
je
cmp
cmc
mov
dec
fidivl
add
testb
fadd
cmpsb
sar
xchg
jae
mov
mov
dec
adc
bound
aam
sbb
je
jg
xchg
and
xchg
dec
jecxz
dec
cwtl
push
sub
xor
scas
arpl
call
fcomps
leave
push
push
test
or
xor
scas
mov
xchg
xchg
push
sbb
xchg
lret
fidivrs
pop
in
fmull
es
fcmovne
in
sti
add
popa
fnstcw
jge
imul
and
mov
int3
scas
add
add
adc
outsb
xor
test
mov
or
das
subb
push
mov
ret
rcrl
cli
sub
and
fidivrl
fldcw
mov
mov
clc
icebp
push
inc
mov
push
lea
loopne
lret
fdivs
loopne
jno
cmp
adc
out
sbb
sub
pop
arpl
dec
clc
call
add
mov
mov
test
mov
adc
push
ret
movsb
xchg
xor
std
jns
loop
shl
std
call
add
mov
cmpsl
push
xchg
rol
out
jne
adc
push
jmp
mov
clc
xchg
insl
popa
add
cltd
and
mov
xchg
clc
adc
popf
cltd
mov
cld
sbb
lcall
pop
xchg
sahf
pusha
pop
pop
mov
pop
and
fisubrs
xlat
outsb
jae
xor
out
jp
mov
scas
enter
pop
jle
popf
andl
inc
mov
out
clc
sbb
inc
jns
xchg
mov
outsl
repz
jg
jp
mov
sub
arpl
sbbl
xorb
add
or
daa
cmpsb
pop
in
jg
cli
in
pop
cltd
jp
inc
ss
shrl
mov
nop
mov
adc
lcall
sub
bound
jbe
rolb
sub
insb
pop
xor
adc
sbb
les
pushf
outsb
push
inc
mov
cmpsb
jne
lea
jmp
pop
push
stos
jb
repz
rcr
inc
push
test
sti
int
sub
pusha
jae
pop
es
movsb
inc
pusha
sbb
mov
imul
mov
mov
mov
mov
lret
jl
imul
xor
bound
adc
in
mov
mov
adc
daa
pushf
movsb
cmpsb
repnz
add
and
push
divl
ret
mov
outsb
iret
mov
or
adc
clc
sub
mov
inc
lds
jbe
fnsave
loop
sub
ljmp
ds
lret
mov
cmp
push
cld
lret
arpl
xlat
call
add
lret
mov
add
sbb
into
das
pop
lret
test
jecxz
loope
xchg
pusha
push
rcl
data16
mov
pop
xchg
cmp
popf
jmp
scas
cmpsb
loopne
ret
sarl
jns
pop
bound
cmpl
mov
lahf
mov
fsubs
into
rcr
dec
xchg
adc
adc
push
cmp
pop
cli
pop
sub
in
outsb
dec
push
cmp
popa
arpl
jle
pop
negb
and
mov
stos
xchg
movsb
and
sub
lahf
mov
out
mov
fisubrs
xchg
mov
dec
push
clc
cmc
ret
movlhps
xor
icebp
sbb
imul
or
dec
hlt
xchg
sub
sbb
and
sbb
sub
stos
mov
inc
or
mov
cld
xor
iret
mov
cmp
insb
inc
xchg
mov
mov
scas
add
pop
mov
pop
es
lea
flds
add
add
add
inc
sub
or
pop
mov
ror
lea
jne
loop,pn
push
push
mov
add
dec
cli
stos
mov
sti
and
push
inc
jb
adcl
xchg
je
sbb
lods
mov
adc
mov
lret
lods
dec
mov
sub
or
mov
push
cwtl
xor
sbb
ja
mov
add
mov
sub
popa
shlb
jno
sbb
dec
imul
adc
sarb
int3
scas
jno
lret
pop
out
mov
cmc
enter
fstpl
pop
aas
loopne
arpl
and
push
and
pop
fs
mov
pop
push
push
movsl
js
mov
mov
and
push
lea
add
cltd
es
ficoml
and
mov
sarb
or
add
fwait
imul
or
pushf
imul
fsts
xor
scas
popf
jmp
ds
or
std
filds
sbb
or
test
cmp
loope
cmp
cvtps2pi
call
mov
jmp
test
push
push
stc
mov
arpl
or
push
dec
mov
pop
adc
inc
and
sub
arpl
leave
in
adc
dec
outsl
stc
and
inc
dec
gs
inc
and
in
mov
mov
xor
into
shl
pop
or
pop
mov
mov
insb
inc
mov
imul
lcall
push
cmc
push
testl
popf
or
lods
sahf
leave
out
mov
pop
jg
jecxz
pop
call
jp
mov
ljmp
inc
cmp
pop
xor
mov
dec
dec
leave
pop
je
dec
iret
hlt
xor
xor
inc
lret
jne
cmp
out
ljmp
lret
mov
into
cmpsb
adc
and
xchg
push
imul
ret
lret
mov
out
sub
fdivr
mov
pop
push
js
or
movsb
push
push
test
aad
test
push
enter
cltd
hlt
add
scas
mov
ja
jecxz
cwtl
loop
mov
daa
xchg
mov
cmp
pop
arpl
xor
inc
movsl
aas
ds
stc
xchg
jnp
mov
or
ja
repnz
or
sbb
addr16
cmp
sub
or
xor
mov
test
test
stos
sub
fstpt
out
inc
test
push
outsb
jne
push
mov
mov
lcall
add
outsb
inc
loop
mov
shl
sub
mov
inc
mov
xchg
xchg
lea
push
sub
jge
sbb
push
js
push
ficomps
or
mov
push
jmp
jg
movsb
iret
in
lods
xlat
dec
sub
pop
fwait
sahf
jb
push
cmp
and
and
aad
shrb
add
rorl
jo
xchg
test
inc
sbb
add
jle
sbb
ss
shl
add
jmp
cltd
in
mov
pop
stos
jns
loop
mov
mov
sbb
mov
jp
pop
ret
push
aaa
int
jnp
xor
push
psubsb
daa
cmpsb
jo
arpl
mov
jge
iret
data16
xor
in
arpl
and
inc
jno
cmp
mov
dec
shlb
popf
fisttpll
enter
dec
loopne
adc
test
pop
insl
pop
adc
xlat
mov
pop
add
cmp
xchg
pop
inc
test
add
fcom
mov
mov
xchg
lret
cmc
jg
imul
jne
lods
insb
lea
int3
mov
jbe
cmp
mov
sbb
stos
subb
pop
iret
cmc
push
mov
out
lea
in
scas
fs
cwtl
int3
xor
sub
and
jecxz
movl
out
scas
cmpsl
pop
xor
cmp
lods
or
push
arpl
inc
lds
jl
mov
dec
push
inc
lods
imull
and
dec
mov
and
out
mov
mov
push
nop
inc
push
lds
xchg
lods
inc
mov
mov
mov
xchg
or
in
cs
and
and
cld
stos
and
es
aad
push
loop
scas
adc
jbe
sbb
lds
mov
add
aad
and
pop
xchg
test
fmull
push
sbb
lock
add
cmp
hlt
jne
inc
jle
lahf
xchg
addb
imul
mov
add
enter
push
lds
mov
dec
push
mov
fstl
ret
push
lahf
ret
outsl
aam
std
mov
jno
out
xor
mov
dec
inc
imul
hlt
sub
int
mov
lret
mov
jmp
mov
arpl
mov
popf
cmp
movsb
mov
dec
mov
or
jae
or
push
inc
test
jb
fwait
inc
cmp
js
adc
cmp
fwait
mov
mov
push
pop
stos
push
cld
dec
cmpsl
shll
inc
xor
mov
fst
stos
cli
sbbb
cs
mov
repz
loope
sti
cmp
push
inc
insl
sbb
dec
push
jno
lods
nop
dec
pushf
inc
mov
mov
xor
sbb
adc
imul
mov
ret
dec
sub
out
ds
addr16
lods
dec
lods
sbb
pushl
hlt
int3
dec
cmpsl
cmp
gs
ret
mov
adc
dec
cmp
lahf
fsubrs
insb
test
sti
mov
rclb
jae
hlt
outsl
std
xchg
lock
insb
mov
push
fwait
movsl
cltd
jmp
pushf
fistpl
sbb
pop
fcmove
add
adc
sub
cs
scas
sbb
div
mov
fs
jo
xlat
sbb
les
mov
xor
popl
mov
sub
aas
inc
les
insl
enter
xor
movl
popf
pop
int3
sbb
inc
or
add
push
mov
push
adcb
lods
rcr
sbb
test
hlt
push
inc
movsb
xor
lods
cmc
test
stos
aam
pop
ret
adc
push
divb
pop
mov
mov
jle
stos
cmp
fstpl
ret
shlb
push
test
test
mov
lods
cmp
jo
dec
dec
mov
jnp
dec
dec
aam
pop
sti
sub
pop
cld
sub
jl
orb
add
inc
ror
daa
mov
cltd
xchg
les
mov
pop
adc
add
pop
mov
cmp
mov
jp
add
imul
add
mov
adc
adc
fimuls
inc
push
pop
daa
dec
xor
inc
test
adc
imul
and
movsb
outsb
mov
stos
es
or
mov
mov
xchg
xor
pop
fucomi
jge
das
sysenter
xchg
cwtl
and
je
sbb
mov
inc
mov
sbb
call
xchg
jb
sbb
xchg
mov
mov
in
xorl
mov
fldt
mov
sub
pop
cmp
push
dec
outsb
imul
push
cmpsb
cli
cld
ret
fwait
out
dec
fwait
int
cmp
js
call
ficomps
lfs
dec
lds
mov
adc
pushf
setge
shlb
scas
jle
adc
xchg
inc
mov
xor
sub
ret
aad
and
insb
xchg
or
shr
mov
push
add
cmp
ss
inc
js
mov
push
test
fwait
mov
push
inc
adc
ss
pop
add
dec
or
cld
jb
mov
jno
cld
test
and
or
in
dec
enter
lods
dec
push
das
adc
sbb
sbb
xor
mov
sti
movsl
imul
add
inc
push
add
daa
pop
add
js
add
adc
testb
lods
cs
pop
sarl
and
enter
jbe
ljmp
andl
into
mov
pop
dec
aas
sub
pop
inc
xchg
push
cmpsl
cmp
or
sbb
cmp
rcll
sbb
cmpsl
mov
jo
pop
ror
xor
scas
pop
addr16
out
loop
mov
mov
notb
sbb
cmp
adc
jg
mov
inc
jecxz
in
mov
sub
mov
push
push
jecxz
push
jle,pt
xchg
jnp
pop
outsl
sub
gs
xor
sub
push
inc
pop
arpl
lahf
push
sub
cli
dec
test
push
push
jge
jno
or
xor
rorl
jg
dec
ret
dec
repz
lods
es
push
decb
xchg
ljmp
mov
ret
call
lds
and
fnstsw
push
push
mov
clc
orl
or
orl
shlb
mov
push
dec
dec
and
lock
bound
pushf
imulb
push
dec
lods
dec
rorl
cmp
sahf
mov
mov
or
add
imul
test
hlt
adc
andb
or
fists
jno
and
test
loop
aaa
jb
jp
push
lds
mov
mov
inc
mov
popf
lret
xchg
call
repnz
jb
imul
in
orb
int
sbb
or
mov
cmp
mov
fs
in
in
push
in
xor
mov
das
insb
mov
imul
ds
mov
adcb
push
pusha
push
jb
das
dec
xchg
movsl
mov
mov
jp
or
add
aaa
int
and
xchg
mov
mov
shlb
or
test
mov
into
repz
adc
loopne
mov
pop
jb
mov
push
notb
rcrb
rcrl
mov
lds
and
inc
nop
lahf
inc
or
cmpsl
or
sub
xor
out
rclb
les
out
pop
sub
out
insl
mov
in
stos
stc
loop
push
jmp
jmp
sub
xor
inc
mov
or
jmp
xor
movl
xchg
cli
sbb
mov
jmp
repz
jae
ficoml
stos
imul
insl
jl
rcrl
mov
loope
leave
mov
push
sbb
repz
sub
sbb
and
fstp
push
add
inc
xchg
cmp
daa
aas
repz
or
sbb
pusha
and
inc
jo
inc
ljmp
test
push
add
insl
inc
jnp
or
lahf
js
sarb
or
sub
lock
les
mov
loop
sub
arpl
mov
rcrl
in
dec
sub
inc
js
lods
push
fmul
xchg
int3
cli
sbb
clc
cmpsb
pop
mov
mov
movsb
dec
fisubrl
ret
push
or
sub
nop
in
sbb
push
sbb
mov
xchg
push
pop
test
mov
mov
sub
in
scas
lret
or
test
pop
inc
jge
out
loope
xchg
or
std
rorl
push
dec
push
add
mov
int
rorb
mov
stos
sti
int
out
clc
xor
mov
enter
jp,pt
lret
cltd
xchg
dec
je
ret
adc
push
rcll
repnz
mov
mov
pop
jno
ljmp
mov
addr16
loope
iret
scas
fimull
movsb
bound
mov
cmpsl
cmp
ds
enter
insb
test
sbbl
ja
outsb
xchg
add
cmp
ja
mov
sbb
sarl
adc
std
ljmp
mov
sbb
rclb
or
jmp
ss
add
sbb
lods
rcrl
push
and
sub
mov
les
mov
subb
pop
mov
jae
adc
lahf
push
ja
daa
add
mov
call
andb
stos
stos
rolb
dec
lock
adc
cs
xor
aam
sti
out
xor
add
xchg
xchg
jg
dec
cmpsb
push
fs
xor
fwait
push
fucomip
hlt
xor
mov
aaa
mulb
mov
add
cmp
scas
out
mov
sbb
push
push
push
push
ja
pop
fmuls
je
mov
xchg
sub
mov
dec
adc
push
mov
mov
or
jae
adc
cmpsb
or
pop
jns
cmp
xchg
and
mov
xor
pop
xchg
cmp
pop
lcall
aam
rolb
jbe
mov
iret
ficomps
push
cli
test
adc
ljmp
aam
pop
or
outsl
je
int
shr
xchg
mov
popa
mov
addr16
mov
xchg
sbb
shlb
scas
leave
xchg
pop
inc
xor
lds
lcall
sarl
mov
stc
push
loop
loope
mov
adc
mov
jl
jg
data16
fldt
or
dec
or
mov
xor
loope
icebp
mov
in
sub
out
add
add
fucomip
bound
je
cld
add
dec
inc
scas
mov
sqrtps
aas
mov
fiadds
mov
icebp
mov
outsl
push
loope
mov
jnp
in
xchg
sub
rcr
imul
sbb
xchg
movsb
jl
movsl
and
mov
loope
push
stos
movsb
out
and
and
dec
adc
mov
sbb
add
cmp
mov
ds
pop
iret
inc
push
lods
test
or
jns
nop
jno
ret
jb
cltd
mov
rolb
lret
scas
aad
xchg
pop
inc
xor
outsl
testl
rorl
and
in
test
out
sub
scas
mov
push
xchg
mov
aad
ds
jno
or
in
fcomps
mov
rol
fiadds
out
dec
cmp
xlat
jae
mov
dec
sbb
xchg
loopne
dec
sub
int
sbb
dec
incl
loope
test
jmp
hlt
out
mov
adc
inc
xor
jp
xor
dec
pop
or
xor
jecxz
dec
or
ret
ret
into
jbe
test
nop
fsubp
int3
jae
xchg
fldenv
mov
push
push
jo
jge
movswl
outsb
xchg
in
fsubrl
mov
jg
shrb
pop
ret
das
fisttps
cmp
cmp
and
mov
aaa
and
sub
enter
sub
andb
or
clc
arpl
mov
jbe
push
push
mov
stos
add
xchg
repz
mov
fld1
dec
in
out
push
jecxz
adc
leave
mov
nop
stc
fs
pop
sbbl
jg
fsub
jnp
cld
cli
xlat
and
or
loop
ds
or
and
fs
mov
out
mov
dec
repnz
lock
xor
push
mov
dec
insl
ljmp
xchg
jne
cmpsb
idivb
pop
lcall
pushf
push
xorb
cmpsl
daa
jge
mov
mov
xor
jge
push
mov
fadd
push
bound
cltd
ja
jb
add
add
test
lahf
out
sarl
clc
cld
mov
scas
jae
inc
pop
aaa
dec
ret
popa
cmpsl
imul
popf
or
pop
fstps
adc
adc
test
rcl
cmp
lret
movl
jno
sbb
rcrb
lock
add
popf
pusha
push
ljmp
call
cmp
cmp
ret
cmpsl
xor
push
push
and
mov
or
adc
fs
dec
add
dec
adc
mov
test
mov
push
jno
pop
push
or
popa
jnp
and
mov
mov
mov
pushf
xchg
roll
rcll
mov
sub
and
jo
nop
rcrb
or
xchg
cmpsb
call
or
fsubp
xor
mov
fstl
stos
cmp
stos
xchg
push
pop
test
addl
test
mov
sbb
stos
shll
jae
jge
cld
mov
sub
mov
mov
inc
orb
cld
shlb
add
arpl
outsl
int3
lret
lods
xlat
dec
jmp
jmp
jae
imul
adcl
mov
inc
mov
or
push
jl
fistpl
outsb
mov
int3
insb
pop
mov
fstpt
sub
mov
pop
jns
jp
lds
test
mov
jl
xor
pop
sti
jnp
imul
xchg
mov
adc
sub
shlb
in
adc
fisttpll
jne
inc
daa
out
inc
xor
sub
mov
rcrb
jne
in
cs
cmp
push
jp
stc
sarl
xlat
mov
dec
scas
push
jb
cmc
inc
aaa
icebp
dec
sahf
loope
sbb
lret
cs
add
push
test
pusha
js
insb
andl
insl
mov
into
test
mov
movsb
mov
pop
mov
mov
mov
cmp
outsl
adc
sub
mov
in
scas
xlat
lods
mov
mov
pop
push
xchg
jnp
and
and
push
les
push
inc
fimull
push
mov
imul
dec
and
mov
in
pop
push
xchg
rcl
fsts
lods
add
push
cmp
test
loopne
out
insl
dec
mull
cmp
mov
xchg
cli
xor
adc
jg
lahf
testl
jge
dec
inc
hlt
inc
jmp
pop
adc
ss
mov
fsubs
and
pop
pushf
mov
dec
cmp
or
out
lock
sbb
in
adcb
xor
lret
mov
and
adc
mov
and
jne
push
fimuls
ss
dec
fcoml
in
cmpsl
jae
adc
ret
ja
mov
inc
cmpsb
cmp
aas
out
jmp
movsl
dec
dec
inc
pop
mov
and
repz
mov
pxor
sub
add
or
mov
ljmp
sbb
test
push
sub
push
add
movsb
mov
fidivrl
and
dec
popf
cmpsb
sbb
mov
orb
mov
mov
mov
jmp
sarb
stc
mov
adc
push
add
jns
rorl
loopne
sbb
loope
lock
pop
lret
mov
int3
push
sbb
mov
mov
push
mov
push
aas
fsts
aad
lret
icebp
and
pop
mov
dec
jg
push
sbb
loop
xor
loopne
jbe
in
sbb
cmp
xor
repnz
pop
xchg
adc
icebp
mov
cltd
ss
scas
fsts
push
lock
orl
mov
lret
xorb
cmp
xor
aam
dec
fdivrs
shufps
insl
or
add
pop
cltd
lcall
jmp
cli
mov
push
sub
inc
jecxz
test
test
lea
mov
or
jnp
sub
mov
mov
mov
jne
mov
movsb
and
and
mov
fwait
data16
xor
dec
and
shlb
fwait
push
int3
dec
xchg
mov
loop
sbbb
movsb
adc
mov
push
aad
call
dec
pop
fisubrl
add
movsb
cltd
mov
cmp
scas
loop
test
lret
xchg
in
xchg
cmp
js
out
xchg
icebp
mov
out
aad
adc
test
add
imul
add
nop
cltd
andl
bound
mov
inc
inc
out
cld
and
xchg
adc
ret
out
sbb
icebp
out
mov
mov
mov
out
sub
jo
test
out
xchg
loope
je
sbb
sub
icebp
cwtl
mov
add
loop
sbb
imul
push
mov
call
push
push
mov
in
in
cmp
testb
sub
mov
mov
pop
pop
dec
dec
imul
dec
subl
sbb
or
stc
pop
sub
add
push
push
mov
sub
andl
lahf
and
xor
mov
data16
dec
test
pop
imul
pop
filds
test
int3
aaa
movsl
lods
mov
mov
jnp
mov
mov
loopne
pop
inc
pop
push
adc
shlb
add
ret
jno
movsl
out
mov
push
aad
dec
icebp
inc
mov
insl
pop
cli
out
inc
add
xchg
icebp
xchg
mov
mov
aas
cmpsb
sub
pop
mov
lds
and
mov
popf
data16
repz
data16
push
fst
inc
xor
stos
andl
into
aas
leave
ficompl
mov
test
cltd
sti
dec
inc
pop
mov
fs
in
pushf
push
mov
icebp
adcb
cmp
fwait
mov
test
push
mov
and
call
xor
pop
mov
sub
and
inc
cwtl
mov
fldenv
xor
mov
in
es
adc
iret
mov
adc
test
sub
int3
insl
fwait
aas
xchg
xchg
add
cmpsl
push
jmp
sub
pop
inc
test
mov
pop
mov
push
mov
xchg
insb
roll
sub
adc
in
xchg
aam
stc
shl
mov
mov
out
jmp
icebp
pop
lcall
ret
fcompl
cld
je
jp
xchg
mov
ja
xchg
lret
popa
in
sbb
out
imull
inc
orl
or
mov
sub
sub
int3
mov
jno
aaa
mov
addr16
aaa
adc
loopne
out
nop
xchg
add
inc
dec
mov
push
sbbl
xlat
mov
ja
mov
lret
sub
inc
aas
add
loopne
int3
xchg
xor
loop
std
lret
js
and
adc
add
inc
pop
inc
jg
xchg
ret
mov
and
test
stc
es
mov
int3
sbb
fs
and
and
and
into
xchg
dec
sbb
sub
addr16
push
lret
divl
pop
jae
jmp
add
out
add
xchg
pusha
mov
shll
rcll
pop
mov
daa
or
shrd
test
push
int3
es
pop
dec
dec
adc
xchg
frstpm(287
lahf
sti
and
xorb
frstor
sub
cmp
jne
jae
scas
jb
xor
ret
sbb
inc
mov
in
mov
fisubrs
pop
std
clc
cmp
mov
shrl
enter
and
outsb
imul
mov
fdivp
xchg
push
sbb
xchg
jno
mov
cmp
jbe
aas
mov
xchg
xor
inc
adc
sbb
test
ret
dec
mov
popf
lret
dec
xor
push
lea
int
adc
repz
pop
in
aam
push
inc
and
jg
lea
dec
andl
cs
std
and
fwait
leave
inc
xlat
mov
mov
adc
xchg
and
shrb
and
sub
cmpsb
mov
xor
fmuls
push
add
inc
inc
clc
in
jne
or
ljmp
mov
lds
pop
fst
rol
mov
xchg
or
cmp
cmp
push
enter
les
push
add
lret
hlt
pop
mov
outsl
and
pop
loope
add
mov
pop
enter
negb
mov
xchg
adc
xchg
cmp
xchg
popf
pop
cmp
sbb
adc
push
mov
ffree
sti
lret
xchg
dec
xor
jbe
adc
push
add
cmp
push
jle
xor
pop
pop
test
imul
fs
call
pop
xchg
xchg
xchg
mov
add
xor
jo
inc
arpl
hlt
and
hlt
sub
pop
cmp
cmp
xchg
aad
lret
cmc
andl
imul
jecxz
jne
fists
xor
push
icebp
lods
sub
enter
sub
addr16
pop
into
jmp
shr
cwtl
popa
push
loop
or
pop
iret
fs
xchg
mov
adc
repnz
and
and
lret
cmp
testb
and
jne
incb
adc
pop
popa
loope
push
cmp
jne
jb
mov
mov
or
xchg
push
rorb
mov
inc
mov
out
cmpsb
push
xlat
pop
mov
xchg
shl
add
std
popa
clc
mov
das
pop
out
inc
pop
js
mov
cld
cmp
sbb
pop
aad
inc
mov
std
add
mov
mov
rorw
mov
xchg
push
jne
repnz
xchg
pushf
scas
jmp
ja
xchg
dec
mulb
cmp
cwtl
clc
xchg
rcll
movsb
and
popa
adc
sub
push
ret
test
cmpsl
or
out
push
shll
insl
lret
dec
aad
add
arpl
hlt
inc
test
divb
push
xchg
fisubs
inc
push
sti
call
addr16
out
fcoml
icebp
nop
pop
adc
out
js
orb
xor
cwtl
cltd
jl
mov
add
das
test
xorb
lret
aaa
pop
movsb
inc
push
fsts
std
daa
mov
pop
cmp
lock
ljmp
aad
into
and
pop
data16
push
pop
lahf
jno
adcl
scas
jbe
or
push
jno
insl
mov
test
outsl
or
pop
inc
jns
push
xchg
dec
fcomip
inc
jecxz
fcmove
xor
mov
jbe
idivb
mov
mov
cmp
sti
fidivs
ret
jno
popa
sbb
cld
or
jnp
and
dec
shlb
imul
loopne
xchg
xchg
xchg
clc
movsb
pop
fidivrs
shl
jno
inc
out
and
mov
test
cmp
inc
test
xchg
cltd
je
adc
lret
das
inc
movsb
sub
push
or
shr
ficompl
jno
lcall
dec
xor
or
mull
mov
mov
movsl
es
add
xlat
mov
rolb
mov
imul
add
or
lcall
pusha
ja
in
mov
add
jns
pop
push
sbb
mov
mov
sub
aad
int
xor
in
mov
or
iret
mov
jns
add
ljmp
sbb
xchg
jno
ficoml
arpl
or
insl
pop
dec
int3
in
push
cmp
test
int
lret
enter
cmpl
outsb
lods
subl
frstor
pop
and
cmpsl
dec
out
mov
jmp
popa
adc
adc
push
mov
mov
sub
es
push
mov
rcrb
mov
mov
adc
cld
ss
mov
add
cmc
adc
jp
and
pop
cmp
in
popa
mov
out
sub
inc
jle
loopne
mov
data16
outsb
bnd
inc
scas
sbb
jno
dec
mov
mov
jmp
push
fldenv
popf
inc
fsubr
inc
movsb
mov
pop
in
cs
mov
stos
xchg
add
leave
push
scas
xor
push
cmpsl
push
in
jns
fs
jb
lret
pop
xchg
or
mov
jecxz
shlb
jl
push
inc
adc
in
aas
sbb
test
cltd
sbb
dec
mov
pushf
pushf
cmp
sub
rcrb
movsb
js
icebp
jae
xchg
mov
lds
rorl
pushf
insl
push
mov
enter
mov
adc
rclb
pop
pop
mov
sbb
push
enter
pop
and
sub
mov
dec
out
mov
clc
fdiv
push
mov
add
xor
test
fucomip
mov
mov
pop
or
cmp
bnd
jne
inc
sbb
dec
out
push
dec
jno
dec
out
lcall
dec
outsl
mov
test
xchg
jl
div
enter
or
repz
xor
js
mov
fmuls
sub
jg
push
gs
inc
pop
jo
pop
sbb
xor
push
les
ficomps
sbb
add
add
mov
shll
cmp
and
shlb
jae
xchg
imul
in
movsl
les
imul
out
add
es
aaa
lret
daa
jnp
insb
xchg
lea
dec
jb
fdivp
cmp
je
pop
fwait
sub
or
cmp
xchg
leave
pop
inc
push
jg
xchg
lods
ret
ljmp
adc
lret
insb
add
leave
insl
in
movsl
js
pop
cvtpi2ps
iret
adc
cmp
sub
dec
stos
and
ror
push
jmp
test
mov
nop
cmp
push
jl
adc
pop
and
repnz
jl
jg
mov
xor
xchg
idivl
fs
push
data16
roll
and
sti
mov
enter
imul
rcrl
aad
scas
out
jp
stc
push
out
cmp
fstl
hlt
pop
orps
shr
adc
sbb
mov
aad
jno
sub
jae
sub
aas
cmpsb
ljmp
adc
loopne
mov
push
cmp
jmp
in
mov
lret
push
data16
rclb
xchg
jmp
fwait
out
mov
dec
repz
jae
inc
cld
mov
pusha
outsb
int
cmc
hlt
ret
rcl
push
mov
rcl
jb
mov
in
xchg
pop
sahf
addl
ds
adc
mov
aaa
mov
lea
aas
jp
imul
inc
popf
lds
mov
pop
in
xor
cs
data16
pop
loopew
imul
shll
loope
adc
aam
pop
pusha
jb
jmp
mov
inc
popa
stc
mov
lahf
mov
mov
pop
sub
cmp
lds
add
push
jb
fcmove
out
test
xor
aaa
push
cmpsb
stc
sbb
push
bound
xchg
or
push
pushf
push
dec
mov
adc
lods
sti
aaa
jb
daa
push
inc
test
xchg
adc
and
pop
add
jmp
xchg
in
hlt
mov
xchg
stos
mov
mov
test
fidivl
cld
in
je
jo
fucomi
fwait
cmp
fs
xchg
jp
popf
sar
data16
inc
dec
cmc
add
adc
shlb
mul
sbb
inc
inc
inc
mov
pop
cmp
jbe
push
repnz
aad
sub
insb
ds
xchg
lret
cwtl
sub
jmp
rcrb
xchg
dec
push
cmc
or
mov
and
jg
jno
xor
mov
mov
lea
lcall
add
std
xor
mov
lret
mov
ja
mov
inc
lods
ljmp
insl
movsl
jbe
test
pop
icebp
roll
mov
ret
pop
call
pop
and
les
xor
in
lds
mov
sbb
test
test
gs
mov
popf
loopne
shrl
xor
movsl
pop
cmp
cmp
sub
ds
push
xor
xchg
aam
lahf
pop
fwait
popf
xor
jae
mov
lock
push
outsb
xchg
mov
fstpl
push
ret
mov
mov
mov
mov
scas
push
dec
xor
cltd
out
sbb
dec
arpl
inc
lods
or
repz
repz
andb
and
pusha
imulb
xchg
fldt
mov
sbb
push
stos
xchg
inc
test
mov
lret
scas
scas
dec
psrlw
mov
ja
xor
jne
movsb
pop
pop
mov
mov
pop
adc
pop
or
mov
in
jae
mov
inc
stc
je
arpl
lret
and
or
fdivrs
movsb
inc
rolb
lds
test
or
dec
in
add
push
mov
jle
push
addr16
outsb
add
add
rcl
int3
xor
test
sub
mov
mov
xchg
mov
pop
push
ja
in
mov
lahf
adc
leave
imul
add
mov
loop
push
jmp
inc
stos
insl
pushf
test
pop
stos
inc
bound
mov
and
outsl
ja
or
xchg
lds
in
add
mov
cmp
sub
jbe
addr16
fisubl
dec
rolb
and
fnstsw
xchg
add
ja
fcompl
les
add
les
push
dec
mov
test
ss
and
ds
pop
pushf
jmpw
push
add
mov
add
add
repz
movsb
adc
movsb
insl
xchg
andb
add
imul
add
loop
inc
mov
out
sub
int3
mov
mov
roll
push
sbb
enter
mov
mov
in
or
jns
movsl
pop
cmp
rcr
pop
dec
testb
add
mov
imul
pushf
clc
and
jae
ret
pop
test
adc
jne
int
pcmpeqb
jmp
cltd
ja
xor
and
pop
sbb
mov
outsb
mov
int3
push
loope
or
int3
mov
and
shl
sbb
xchg
push
add
push
lahf
xor
adc
or
aaa
or
loopne
pop
iret
jbe
mov
inc
scas
adc
aas
mov
fdivs
mov
jae
adc
insl
xchg
add
xor
push
in
xor
arpl
lcall
cmpsl
pop
inc
dec
fdivs
int3
ja
test
in
mov
jno
sub
xor
imull
lret
adc
dec
iret
jo
aas
xor
idivl
sbbb
mov
sti
mov
lock
mov
cli
dec
hlt
sbb
inc
xchg
jno
aad
sub
pop
xor
scas
pop
mov
idivb
gs
dec
add
fwait
xchg
test
cmp
jge
es
outsl
popa
or
dec
lods
xor
inc
push
and
cmp
cmpsl
stc
outsb
inc
repz
or
mov
sub
dec
rcrb
and
cmp
mov
popa
xchg
sahf
js
pushf
fiaddl
ja
lock
add
arpl
push
inc
scas
out
xor
les
ficoml
dec
loope
pushl
jne
jne
stos
cmp
pop
test
jl
insl
jmp
jne
loope
scas
loopne
sahf
dec
movsl
add
mov
jno
insb
pop
out
int3
pop
xchg
pop
rcrb
sbb
mov
loop
xorl
lcall
test
inc
imul
dec
inc
inc
aaa
ficompl
xorl
sub
jb
in
adc
pushf
call
pop
enter
dec
pusha
outsb
enter
mov
std
mov
and
ret
mov
dec
cwtl
subb
xchg
stos
and
inc
daa
shl
aad
and
mov
aaa
push
cltd
inc
or
leave
rorl
xlat
bound
movaps
jbe
sbb
testb
dec
jns
push
cli
cltd
enter
jp
xorl
out
pop
hlt
lret
gs
dec
jbe
jo
call
into
ljmp
dec
mov
and
mov
dec
and
loopne
jno
lods
in
add
mov
nop
cmp
sub
call
jbe
sbb
and
jmp
fwait
cmc
sbb
pop
xlat
cmc
mov
int3
iret
popf
mov
movsl
jmp
std
lods
mov
inc
sub
es
cmp
pop
pushf
cs
mov
cmp
and
push
mov
out
push
fs
dec
jno
jne
or
or
mov
inc
cmp
imul
lds
shlb
out
pop
xchg
mov
js
sub
and
ss
pop
push
les
push
mov
aas
jp
add
mov
sub
xchg
cwtl
mov
sbb
xchg
sub
decl
xchg
arpl
fnstcw
movsb
jbe
xchg
bound
loope
scas
ror
fs
pushf
popf
xor
xchg
jae
jb
in
test
pop
jecxz
pushf
add
movsl
mov
fisubl
ja
sub
aad
jo
pusha
push
cwtl
lret
xchg
mov
outsb
inc
ret
pop
repnz
inc
pusha
mov
jp
push
adc
imull
fiaddl
iret
stc
out
mov
or
push
jbe
adc
loope
jge
jae
int
jmp
mov
xor
mov
ficoms
dec
fists
dec
push
sahf
fsubrs
movsb
mull
fwait
jmp
pop
cmp
leave
js
into
sub
mov
cli
cmp
ljmp
dec
push
pop
ret
jbe
pop
jae
fcmovbe
jl
lods
adc
test
and
adc
dec
xchg
dec
or
sub
push
sti
popf
cmp
je
outsb
fistl
inc
add
or
stos
push
add
and
and
lcall
and
divb
ds
roll
sti
lock
push
xor
cmp
mov
or
fwait
scas
sub
mov
es
fcom
inc
sub
and
push
dec
dec
lock
loopne
andl
pushf
push
cld
lahf
push
cld
mov
jbe
mov
add
lock
dec
pusha
mov
and
in
clc
lret
dec
rcrb
fwait
mov
fdivr
push
aad
and
push
push
cmp
mov
inc
push
lret
imul
mov
cmpsb
ja
inc
xchg
aad
pusha
xchg
jle
lret
add
outsl
fs
pop
xor
fstpl
lods
inc
mov
fcompl
outsl
push
xchg
adc
cmp
ret
add
cmpsl
repz
pop
push
hlt
sti
rorl
sub
test
imull
push
rcl
jae
xchg
faddl
dec
rorl
adc
js
xchg
ficomps
push
pusha
dec
cli
cmp
pop
or
insb
push
and
jns
je
and
push
cmp
pusha
mov
xor
int
jmp
lret
addr16
loop
adc
and
push
xchg
cmc
ljmp
fidivs
push
shrb
jae
xchg
arpl
fmull
xchg
sub
dec
neg
nop
and
inc
adc
cmpsb
mov
imul
shl
mov
sbb
pop
or
pop
and
lcall
movsl
insl
cmp
stos
jl
in
sub
push
call
mov
xchg
aas
sbb
xchg
dec
push
cs
int3
pop
repnz
mov
out
pop
leave
adc
cli
jg
pop
fwait
xchg
cmp
xlat
std
mov
cmp
xor
arpl
mov
out
dec
and
test
mov
idivb
jnp
rol
xor
inc
pusha
psrad
xchg
push
push
fdivp
sub
and
jno
or
ret
jae
mov
je
xor
sahf
mov
xchg
inc
pop
in
and
sbb
out
out
outsb
scas
cmp
lcall
add
pop
jmp
outsb
fidivrl
dec
popl
bound
add
dec
mov
jle
sahf
xchg
fcomi
jmp
popa
pop
repnz
or
aam
daa
xchg
dec
int
jbe
dec
jbe
ja
sub
lret
in
xchg
add
add
repnz
mov
adc
mov
cmp
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
mov
lret
icebp
inc
test
mov
add
push
cmp
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
