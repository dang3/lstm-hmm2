push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
inc
jo
adc
adc
int
adc
xchg
movsb
cltd
loopne
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
fistpll
divl
in
enter
jbe
imul
and
jg
jg
add
sbb
and
dec
mov
push
or
jnp
nop
stos
and
dec
stos
insl
mov
aad
ljmp
pop
jle
orb
jbe
test
add
gs
out
sub
mov
pop
enter
jb
mov
test
sub
or
dec
pushf
xchg
loop
push
sub
loopne
fidivl
mov
shll
jo
pop
push
pop
std
pop
test
clc
arpl
lret
or
fwait
cmpsl
push
lods
roll
mov
or
stc
xor
push
dec
mov
adc
and
and
push
or
scas
mov
ret
out
loope
push
fidivrl
scas
aaa
icebp
aaa
rcrb
mov
loopne
cs
xchg
adc
xchg
popa
cltd
test
imul
add
fs
ds
xchg
rorl
dec
add
or
clc
sub
fisubrs
mov
pop
jns
les
movsl
lods
pop
add
jg
mov
pop
es
dec
fdivr
mov
inc
in
mov
pop
xor
jne
sub
sub
adc
push
lret
pop
push
dec
jg
mov
test
mov
xor
stos
jno
in
lds
xchg
push
pop
adc
and
fimuls
add
fisubrs
je
sbb
jb
mov
mov
mov
movsb
inc
mov
mov
pop
jecxz
aad
leave
imul
enter
in
add
mov
or
and
fidivl
enter
adc
cmp
sub
pop
adc
adc
add
dec
int3
pushf
int3
jae
sub
fildl
push
imul
lahf
incl
aam
inc
sbb
jae
push
pop
negb
adc
cmp
cmpxchg
adc
aas
data16
les
jl
cmp
sbb
lcall
push
sub
inc
leave
inc
sbb
dec
pop
or
out
bnd
stc
xchg
sbb
repz
into
inc
xor
hlt
mov
hlt
inc
mov
pop
sbb
scas
pop
into
xor
adc
jne
and
lds
clc
xor
enter
in
add
mov
fnstenv
add
daa
mov
mov
cmp
lods
jg
sub
scas
fs
sbb
mov
dec
fdivp
push
or
mov
jmp
sub
mov
jecxz
loopne
or
mov
lods
insl
push
pop
inc
xor
mov
es
test
push
gs
push
sbb
fadd
cwtl
fsubs
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
je
jle
adc
adc
adc
adc
sub
xor
in
fildll
mov
andb
outsb
inc
ja
push
mov
insl
les
movsb
int3
cmpsb
js
sti
push
rclb
jno
mov
and
lods
icebp
push
data16
xchg
jecxz
cli
iret
jb
insl
andl
test
lods
test
mov
out
jo
dec
push
je
mov
sahf
pop
sbb
xchg
das
mov
andb
mov
jle
xchg
push
xlat
pop
lahf
das
lods
outsb
lea
pop
les
cmp
fidivl
ja
pop
movsl
jne
mov
push
jo
push
sbb
add
fmul
mov
inc
sub
or
cmpsl
aam
sbb
sbb
push
add
jecxz
insl
outsb
in
add
jmp
pop
or
cmove
sub
mov
pop
xor
push
fwait
jns
mov
adc
ds
mov
bound
cmp
sub
cmp
ss
in
call
add
push
mov
adc
push
into
xor
ljmp
or
int
rolb
cwtl
mov
xor
fcomp
lods
mov
adc
dec
xor
adc
mov
stos
fadds
js
add
movsb
call
sbb
mov
int
sbb
shlb
por
lcall
repnz
dec
cmp
inc
fistpll
ljmp
mov
bound
jns
loope
nop
mov
xor
scas
sub
call
stos
cld
push
xor
and
ret
mov
lret
pop
sbb
out
into
ret
fsubr
add
add
pop
xor
mov
imul
imul
xchg
mov
lods
xlat
sub
cmp
fwait
jae
aaa
in
dec
jecxz
mov
mov
iret
dec
xor
in
sti
mov
push
push
idiv
or
movsb
pop
out
arpl
movsl
mov
das
imul
aad
mov
scas
inc
jp,pn
mov
jns
jle
shrl
test
aas
add
lahf
inc
lods
or
xchg
cwtl
pop
cmpb
or
inc
dec
mov
dec
dec
adc
in
xor
clc
jo
pop
clc
lods
test
jg
jp
jle
dec
sub
dec
repz
inc
ret
sarl
pusha
push
add
lock
mov
rep
testb
and
js
sbb
ds
stos
imul
pushf
jmp
cmpsl
dec
mov
xchg
test
out
push
lret
mov
arpl
loop
jne
xor
popf
insb
jge
pop
or
add
xor
and
dec
lock
sbbb
add
lods
shr
scas
xchg
dec
sbb
mov
and
mov
xchg
cmp
iret
ss
mov
int3
mov
iret
cmp
jl
icebp
faddl
push
or
mov
push
cld
push
or
test
adc
enter
nop
imul
les
mov
jmp
loop
inc
pop
fs
int3
add
movsl
outsl
int
and
adc
popa
jp
mov
dec
adc
push
sti
imul
xor
ds
mov
bound
jnp
dec
xor
pop
or
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
inc
mov
mov
int
adc
mov
test
adcl
push
ret
xor
fstps
int3
xor
les
mov
clc
adc
sub
mov
ljmp
pop
stc
sti
xor
pop
pop
inc
movsl
movups
std
aas
mov
xlat
push
mov
adc
leave
aad
in
adc
mov
pop
mov
mov
sub
fsts
ret
mov
inc
nop
push
pop
adc
hlt
cmp
sbb
mov
jne
std
adc
xchg
je
outsb
inc
lahf
mov
roll
mov
jmp
cmpsl
in
xor
shlb
add
ljmp
enter
xchg
adc
push
sbbb
std
mov
in
das
pop
int3
cmp
imul
mov
in
jle
leave
aad
popa
or
xchg
jecxz
enter
mov
sub
aam
jle
aas
ds
lret
mov
sbb
sbb
and
add
mov
push
pop
test
dec
dec
xor
cwtl
or
push
and
mov
btr
repz
xchg
xchg
jmp
add
mov
cmp
insl
mov
aas
mov
push
movzbl
sahf
stc
lods
adc
in
sub
adc
pop
mov
mov
movsb
dec
xchg
xor
and
pop
pop
mov
test
loope
fstps
sbb
sbb
std
xchg
das
push
scas
cmpb
mov
dec
insl
lcall
data16
inc
rclb
or
rcrl
jecxz
fdivs
rcrl
rclb
ja
scas
xor
mov
lcall
pop
pop
test
mov
push
int3
repz
xlat
hlt
mov
int3
and
mov
aaa
add
cld
jmp
dec
test
loope
adc
mov
ficoms
inc
hlt
pusha
mov
out
lods
mov
push
inc
lret
or
stos
mov
inc
scas
inc
xchg
insl
ds
sbb
je
cld
incb
cmp
mov
push
fidivrl
xchg
pushf
loopne
shl
jne
out
cmp
gs
mov
jecxz,pn
or
rcll
or
inc
sub
push
daa
fldt
fidivs
jle
js
scas
imul
sub
pusha
cmpl
cli
push
je
stos
insb
and
scas
push
fimull
out
fldenv
and
movsb
orb
jnp
andl
jmp
scas
push
or
out
inc
push
iret
jbe
stos
enter
ja
dec
and
push
mov
cmp
sub
das
cmp
dec
cli
cwtl
repnz
jbe
push
mov
mov
out
push
inc
out
cs
lods
mov
jns
xchg
lret
divl
pop
popf
and
stos
xlat
cli
loopne
ret
sub
sbb
xchg
jbe
jae
andb
ss
pop
das
imul
lret
mov
shll
or
mov
lock
sub
jmp
fisubrl
and
js
jnp
cmp
js
cwtl
cmp
dec
sbb
add
push
insb
dec
lds
lret
bswap
pushf
imul
fisttpl
inc
sbb
mulb
mov
loope
vminps
sbb
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
dec
and
lahf
dec
negb
scas
mov
xchg
xor
call
insb
fs
mov
aaa
inc
jle
int
pop
jo
test
xchg
and
adc
mov
push
loop
inc
or
cli
add
jno
into
cmp
out
cltd
mov
xchg
lret
sbb
cs
mov
call
sub
lcall
adc
mov
dec
sahf
mov
sbb
std
dec
cmpsl
cwtl
dec
dec
fidivs
xlat
jmp
jecxz
pop
dec
mov
dec
lcall
gs
or
fstp
jmp
cmp
adc
notb
icebp
mov
xor
mov
into
pop
cmp
push
jg
decl
lret
push
cmp
fstp
and
mov
dec
pop
sub
movsb
cwtl
adc
fldcw
in
xchg
xor
div
test
inc
push
nop
mov
and
pop
pop
inc
cmp
icebp
and
add
mov
xor
jecxz
xor
rorl
aaa
test
mov
sub
adc
or
inc
mov
sub
add
pop
adc
jnp
cmp
mov
add
movsb
lods
inc
adc
mov
add
ficoml
pop
add
adc
ss
xorb
adc
imul
xorb
jnp
cmp
ficoms
sub
test
dec
test
scas
pop
pop
fs
inc
cwtl
inc
dec
ja
aam
fcomip
and
sahf
mov
jns
lods
fwait
mov
pusha
jp
dec
imul
xor
out
popl
mov
popa
in
stos
cli
xor
sbb
mov
js
fildll
test
in
fmuls
fistl
cmc
or
mov
aas
leave
dec
int3
cmpsb
iret
es
and
ret
loop
xor
xchg
jnp
xorl
in
gs
stc
push
out
mov
imul
in
mov
cli
ret
inc
cmpsb
jl
jge
sahf
push
imul
xchg
jecxz
insl
mov
stos
pop
hlt
adc
icebp
dec
jmp
xchg
movsl
loopne
in
sbb
mov
xchg
out
inc
mov
int3
dec
xlat
sti
mov
xlat
in
rsm
xor
add
xor
test
pop
push
add
inc
ss
sbb
cmp
enter
mov
daa
repnz
xchg
adc
cmpsb
rol
shlb
push
in
test
xor
pushw
cli
and
cmp
xchg
orb
mov
ds
lcall
loope
sbb
xlat
inc
movsb
lcall
mov
push
scas
js
push
mov
push
push
pop
scas
cmp
dec
je
dec
mov
es
bound
mov
cmpsb
jl
sub
test
inc
sbb
cmp
jbe
pop
add
xchg
sahf
jl
iret
jbe
roll
dec
mov
and
pop
and
mov
inc
push
xchg
mov
mov
push
pop
ret
ljmp
pop
aaa
sub
xor
call
mov
aas
push
insl
leave
sarl
add
sub
mov
xor
leave
or
lea
movsl
jb
dec
dec
xor
adcl
mov
cmp
add
jmp
or
test
sbbb
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
test
in
notl
adc
adc
adc
pop
sbb
jb
sbb
iret
jae
cmpl
std
call
lds
pop
pop
out
dec
iret
stc
dec
xor
fdivrl
jecxz
sbb
cwtl
dec
or
pop
jecxz
mov
repz
call
and
sbb
mov
sbb
pop
dec
cmpb
xor
adc
flds
jb
adc
push
fbld
iret
lea
imulb
dec
jecxz
aas
popa
add
xor
pop
cmpsl
std
xchg
mov
mov
xor
or
xchg
jbe
cli
dec
mov
scas
insb
mov
mov
push
addb
cmp
mov
imul
push
mov
mov
xor
orb
fcomps
sbb
add
mov
std
shrl
mov
jecxz
pop
int3
popf
outsb
ret
mov
sub
test
dec
cld
sub
xlat
lock
ljmp
mov
adc
cmp
pop
ret
in
cmc
fs
inc
daa
movsb
ret
cmp
loop
xor
sub
cwtl
pop
dec
dec
aaa
pop
lods
or
in
inc
mov
xor
and
call
mov
mov
ret
adc
repz
add
into
push
into
jecxz
mov
inc
insl
mov
mov
sbb
inc
xor
push
jne
enter
mov
orl
popa
imul
rorb
inc
push
je
pop
ret
mov
push
dec
pop
ja
test
push
pop
or
rol
jge
and
mov
lods
mov
pop
sub
mov
inc
loop
xlat
ret
xlat
xor
orl
nop
das
xchg
imul
fisubrs
add
hlt
xchg
fcomps
in
insb
adc
xchg
pop
rclb
push
leave
int3
fisubrs
mov
icebp
jg
insb
push
je
out
out
mov
adc
mov
sbb
cmpsl
test
and
sub
and
xlat
loopne
clc
adc
mov
int
in
add
ds
jae
jno
testl
enter
aad
mov
mov
in
pop
cli
leave
cld
xchg
push
sub
cmp
test
fsubp
popa
xor
push
lret
sub
subl
cwtl
jmp
loopne
or
xor
fs
stos
pop
mov
cltd
faddl
ret
fstpt
outsl
repz
out
sbb
xor
data16
mull
mov
cli
aas
inc
out
adc
pop
aaa
pop
aad
clc
sbb
leave
hlt
sahf
imul
and
sub
xchg
loop
dec
and
mov
jns
test
cmp
inc
jle
sub
cmpsb
mov
hlt
dec
mov
inc
aas
mov
loope
aaa
jb
or
popl
daa
mov
jne
das
xor
cmp
stos
add
arpl
andl
mov
outsb
cld
mov
cmp
fsub
popl
jl
adc
ret
pop
push
lods
outsl
push
add
arpl
mov
loopne
aas
mov
add
fs
ljmp
mov
add
pusha
xor
sbb
fstpl
movsl
jne
hlt
and
xor
aad
pop
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
fsubp
mov
cmpsb
out
adc
int
adc
aas
pop
lods
loop
mov
rcrb
mov
inc
aam
lret
add
cmc
mov
adc
mov
stos
scas
adc
push
outsl
in
les
dec
clc
or
cmpsb
call
stc
loop
ja
bnd
orb
and
daa
lods
test
cmp
push
rorl
lahf
div
dec
jno
xchg
mov
push
lods
test
jb
repnz
int3
mov
xor
mov
or
in
test
dec
adc
nop
mov
and
addb
cwtl
fildl
scas
mov
inc
test
sbb
ret
add
ds
jp
and
dec
rorb
xor
xchg
nop
es
pop
out
shlb
lahf
in
fdivl
clc
sub
orb
ss
cmp
pop
adc
roll
pop
push
lahf
or
xchg
sarb
add
inc
cld
lods
ficoms
mov
jbe
cmp
sbb
sbb
add
mov
adc
popf
rclb
out
inc
inc
xchg
pop
ret
lds
mov
adc
jo
lds
leave
mov
addb
dec
scas
std
inc
inc
jmp
and
pop
in
iret
rorb
fsubl
pop
jmp
out
push
adc
lds
fmul
jg
jl
insb
jnp
and
pop
fcompl
addr16
lock
gs
cmp
lods
inc
repz
fnsave
cmp
push
dec
xchg
rcrb
mov
sahf
or
push
and
mov
mov
xchg
mov
sbb
dec
jno
jno
pop
insl
out
pusha
sbb
mov
imul
cmp
loop
mov
in
and
jl
stos
fldt
test
es
in
mov
mov
sub
sub
cmp
pop
dec
int3
pop
loopne
rcr
xor
fdivs
stos
in
mov
adc
dec
pop
mov
sub
popf
rolb
loopne
mov
and
and
inc
out
xorb
sbb
mov
mov
and
push
adc
adc
adc
sub
pop
out
loop
xor
iret
mov
xorl
inc
push
jo
pop
jecxz
test
int3
sub
xchg
das
lret
sub
adc
mov
test
jl
mov
movb
out
arpl
jae
lds
inc
push
jle
into
cltd
icebp
push
ds
mov
les
in
sbb
inc
mov
jecxz
cwtl
outsl
xor
mulb
addr16
hlt
push
or
push
sbb
scas
lods
mov
sti
or
fisttpl
dec
xchg
xor
js
data16
repz
lock
push
frstor
lea
aaa
je
ds
in
sub
in
mov
cmp
cld
cs
repnz
inc
in
xor
icebp
aas
subb
lea
mov
push
int
aad
loop
sub
xchg
das
xchg
and
cmpsb
aaa
inc
or
adc
mov
mov
jb
cld
sbb
test
mov
or
adc
imul
test
lea
cmp
adc
lret
inc
xchg
pop
fnstcw
adcb
sub
push
popa
push
jbe
cld
cwtl
adc
dec
incb
xchg
sahf
inc
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
cmpsl
scas
adc
in
adc
int
adc
mov
loopne
push
ss
xor
icebp
in
test
mov
and
mov
jbe
inc
sub
jo
aad
mov
xlat
jg
sbb
hlt
in
mov
cmpsb
or
and
inc
stc
mov
ljmp
jl
jbe
push
adc
ljmp
sar
arpl
inc
push
out
loop
loope
hlt
imul
mov
rcr
pop
popf
or
mov
sub
loopne
sub
lret
dec
pop
jae
sahf
pop
mov
and
cmp
pusha
arpl
mov
mov
push
jecxz
lods
daa
sub
and
xor
pop
in
imul
push
fs
mov
mov
jns
push
inc
das
dec
or
push
mov
xchg
loop
pop
cmpsl
arpl
ret
adc
ljmp
ss
mov
in
cmp
mull
xchg
aas
jl
rorl
out
sti
cmpsl
bound
push
lea
xor
pusha
cmpw
inc
scas
jg
movsl
ljmp
mov
pop
aas
imul
dec
dec
aas
rol
pop
fistps
xchg
shrl
and
xchg
repnz
jno
sbb
ret
loopne
xlat
and
adc
and
add
cwtl
fbld
scas
or
dec
jl
lock
shrl
gs
mov
test
jge
notl
xor
push
loopne
cmpsb
xchg
mov
icebp
jns
inc
dec
aaa
shll
ffreep
pop
mov
mov
dec
or
mov
outsb
pop
ljmpw
dec
ja
pop
das
icebp
sbb
inc
mov
aam
test
and
mov
loop
ficoml
push
or
jo
dec
inc
xchg
sbb
cmp
out
int3
pop
push
fidivs
and
ret
pop
test
addr16
jmp
sub
fldenv
and
cmpl
add
inc
and
loopne
into
or
stc
pusha
adc
xchg
inc
mov
adc
lahf
cmp
mov
lock
mov
push
sub
sbb
aas
xor
in
mulps
enter
jbe
pop
push
into
sbb
in
in
adc
fildl
imul
adc
ss
xor
or
xor
mov
adc
push
push
je
xor
xor
lea
xor
icebp
and
scas
pop
mov
cmp
cld
jb
jno
jp
and
or
mov
pop
xchg
faddl
lock
sbbl
sub
or
je
mov
daa
or
aas
xchg
mov
mov
movsl
push
jns
in
and
cwtl
mov
sti
push
int
fwait
mov
xor
notl
pop
pop
pop
gs
xor
rol
fnstcw
mov
dec
paddb
icebp
in
inc
std
into
jecxz
out
mov
pop
pusha
mov
lret
sbb
push
xchg
pop
push
ret
jae
stc
jnp
push
mov
aaa
jmp
std
jae
cmp
repnz
mov
imul
sbb
sub
mov
xchg
into
adc
in
push
std
dec
fcmovnu
adcl
inc
mov
stc
filds
lds
bsr
stos
adc
xor
and
pop
lds
test
repnz
sub
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
jp
in
jle
out
adc
adc
adc
xchg
aad
mov
or
adc
push
mov
es
in
cmp
fcmovnbe
test
mov
insb
mov
andb
cmp
xor
pushf
inc
imul
push
cmp
lret
push
lds
and
data16
ja
fld
popa
adc
inc
loop
mov
mov
movsb
or
xchg
jno
adc
int3
mov
loopne
sub
dec
imul
jle
jne
int
addr16
call
pop
ror
xchg
nop
xor
mov
jmp
or
pop
add
mov
test
jb
jmp
pop
sbbb
mov
orl
iret
std
inc
xor
lcall
add
out
inc
push
data16
fistpll
icebp
hlt
xorb
sbbl
xchg
mov
rorb
cwtl
bound
jle
shl
sarl
xchg
stc
out
data16
out
xchg
mov
daa
cmpl
jo
aaa
xchg
in
mov
mov
jl
cmp
jno
aad
cmp
add
daa
int3
mov
lcall
xchg
mov
and
mov
les
xchg
insl
and
mov
cli
inc
mov
cmpsl
fwait
repnz
bound
push
cmpl
push
pushf
sbb
cmpsl
jg
jp
jecxz
mov
andl
out
mov
or
adc
xor
xchg
lret
inc
dec
into
xchg
decb
popl
rcrl
xor
or
rcr
orl
outsb
decb
dec
scas
mov
cld
in
cmpsb
sub
xchg
test
add
addr16
sbb
mov
jns
imul
sahf
movsl
inc
orb
loopne
and
pop
ds
jecxz
fwait
or
icebp
pop
stos
test
test
cmp
ja
ja
ljmp
popa
lods
push
cs
andl
dec
xor
dec
stc
or
and
test
push
shll
enter
fldenv
xor
call
mov
mull
out
or
or
cmpsl
cli
shrb
jmp
mov
cli
adc
aas
xchg
add
iret
ljmp
mov
dec
es
mov
mov
test
lahf
mov
stos
adc
pushf
das
testl
xchg
xchg
xor
xor
and
call
cltd
shrl
mov
jbe
insb
imul
popf
outsl
outsl
mov
adc
xor
push
je
imul
cltd
mov
or
pop
lods
icebp
mov
lret
popa
enter
mov
out
mov
std
aad
push
xchg
lahf
aam
and
pop
aad
call
jnp
shlb
hlt
mov
rcll
mov
es
das
sub
mov
push
mov
jae
mov
mov
push
cmp
jg
out
in
mov
xchg
nop
leave
insl
bnd
jmp
mov
stos
add
mov
test
jg
inc
outsl
ljmp
nop
sub
jbe
jb
fmull
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
icebp
addr16
lods
ficoms
adc
adc
adc
push
xor
mov
imull
test
faddl
shrl
dec
hlt
push
xchg
sub
xchg
mov
lret
dec
cltd
xchg
cmp
pop
aam
cmp
push
shrb
jl
in
add
adc
repz
sbb
push
xchg
push
lcall
movsb
jmp
sbb
pop
rcl
jb
lret
dec
mov
add
mov
mov
sub
mov
or
pop
fists
std
pop
shr
push
jno
je
pop
in
mov
pop
pushf
mov
fcmovnb
cmp
inc
orb
lret
mov
fsubl
outsb
cmc
test
xor
mov
xchg
jne
ss
or
test
popf
dec
xor
xor
xor
rorl
div
gs
addb
insb
push
mov
sbb
decb
sbb
inc
jge
stos
pusha
inc
jo
bound
xchg
js
lret
dec
push
cltd
outsb
pop
pop
sbb
inc
mov
cli
add
out
mov
dec
aaa
fcompl
pop
leave
pop
pop
cld
aaa
out
out
les
or
xchg
ffreep
bound
adcb
fdiv
sub
push
ret
jle
das
pop
and
adc
arpl
xchg
inc
ds
js
lret
mov
add
aas
test
xchg
aad
inc
scas
loopne
cltd
outsb
fndisi(8087
push
out
dec
pushf
sahf
popa
fisubrl
jmp
lds
jge
add
aam
outsl
decb
fs
cmp
adc
push
jge
dec
cmp
arpl
xchg
adc
iret
nop
aad
rcl
les
rorl
xchg
sub
xchg
mov
pop
xor
fstl
mov
add
test
mov
fists
out
add
es
adc
in
aaa
sub
faddl
jnp
xchg
les
pop
lock
xor
jg
jo
pop
xchg
add
or
dec
mov
xchg
lcall
pop
add
cmp
mov
fimuls
pushf
add
fildl
or
push
popf
lds
sti
mov
insl
inc
mov
xchg
rep
push
cli
stos
lods
xchg
cmp
sbb
dec
mov
pop
loope
cmp
fs
das
xchg
adc
xchg
test
mov
imul
ljmp
mov
test
shl
sbb
aas
daa
xor
sbbb
aas
pop
scas
pop
pop
popf
xchg
adc
fildll
adc
cltd
add
adc
cltd
xor
jo
mov
or
mov
mov
xchg
std
and
or
fmulp
pop
mov
sub
es
push
lds
inc
adc
mov
iret
out
movsb
insb
mov
insl
jb
ret
shr
inc
mov
lods
nop
push
mov
inc
fsubrp
in
mov
fcomp
inc
icebp
movsb
xor
fdivrs
popa
push
ja
sub
fwait
pop
inc
pop
mov
and
stc
daa
inc
and
xor
and
and
loope
mov
icebp
mov
scas
ret
push
sbbl
xchg
pusha
ret
push
mov
xchg
fmuls
push
aam
iret
push
lds
adc
sbb
xor
mov
jmp
mov
shl
jmp
fmuls
sbb
mov
aam
adc
adc
adc
andl
cli
hlt
bound
fs
xor
pop
fwait
cwtl
call
aam
mov
sbb
in
dec
xor
pop
popl
cmp
loopne
mov
or
in
mov
das
or
inc
clc
popa
xchg
adc
sub
les
insb
inc
hlt
mov
sub
fcoml
pop
in
int
fs
stos
sub
hlt
pmullw
out
pop
jbe
out
es
inc
pop
out
aaa
jge
out
inc
fsubrl
mov
sub
daa
repz
hlt
cld
dec
out
mov
fsubr
and
into
add
pop
mov
jbe
pushl
cmp
mov
mov
xor
fsts
cmc
push
mov
jmp
push
subl
dec
bound
loop
fwait
ss
fnsave
jne
lea
sti
mov
repnz
mov
dec
xlat
and
cmpsb
fcompl
adc
mov
stc
aad
iret
rolb
es
dec
adc
scas
mov
dec
inc
xchg
add
adc
fildl
mov
bound
in
and
test
xchg
xchg
mov
inc
aas
inc
xchg
rorb
jmp
lret
jge
testl
and
inc
or
jns
dec
mov
dec
in
or
clc
cmpb
nop
push
inc
or
or
pop
or
lret
mov
out
mov
jge
flds
xor
pop
lahf
mov
push
pusha
out
pop
dec
sbb
dec
movsb
mov
rcrb
pop
xchg
mov
lods
int
xchg
mov
cld
dec
jmp
xor
dec
sti
adc
movsl
pop
jnp
divl
push
dec
xchg
xchg
and
insl
pop
ud1
pop
cmpsl
pop
std
iret
mov
mov
ljmp
sub
pop
push
sbb
pusha
js
mull
lds
cmp
repnz
fisttpl
pop
test
call
xor
xchg
rcll
je
xchg
les
cmp
add
dec
sbb
pop
fdivrs
js
cwtl
stos
xchg
nop
dec
push
aam
inc
pusha
lea
xor
adc
mov
stos
pop
cmc
pushf
mov
inc
push
mov
pop
loopne
push
pop
leave
addr16
add
les
xor
in
cmpsl
shlb
mov
adc
enter
enter
and
jmp
enter
int3
lods
cmpsb
gs
jae
clc
jae
cmp
pop
sarl
push
xor
push
movsl
add
adc
jl
test
push
mov
sbbb
add
inc
ss
pushf
sub
out
push
jmp
jl
mov
cmp
jae
scas
mov
je
lahf
dec
cmp
jae
movsb
jg
cs
mov
and
jecxz
sub
add
push
into
pusha
ljmp
or
inc
sbb
cli
pop
mov
xor
in
inc
push
inc
cwtl
mov
nop
inc
or
jbe
negb
mov
sti
push
sbb
mov
pop
mov
movl
rcll
stc
push
scas
jbe
roll
cmp
pop
pop
adc
fmuls
in
jo
je
ror
lret
cli
lea
les
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
dec
fwait
mov
adc
adc
adc
cmp
fdivrl
loopne
jle
dec
jo
jae
cmp
daa
inc
mov
jl
fdivl
ret
ret
lods
incl
push
mov
gs
and
xorl
enter
enter
test
xchg
roll
js
in
stc
inc
jl
pop
bound
jp
dec
call
pop
or
xchg
aaa
idivl
repz
shr
repnz
jae
xlat
hlt
fwait
inc
sti
jne
ret
jmp
scas
xchg
stos
test
decb
dec
in
mov
pop
out
sbb
ja
loop
mov
ret
ja
push
pop
mov
mov
pushf
pop
fwait
dec
stos
cmpb
rolb
xchg
inc
adc
ljmp
jae
mov
add
add
lock
pop
outsl
in
out
outsl
mov
aaa
inc
pop
dec
fildl
std
xor
jne
xchg
sti
cwtl
jl
div
in
addr16
cmp
in
cmp
or
mov
cmpsb
in
movsb
dec
lods
jecxz
lock
cwtl
add
and
les
mov
push
ja
test
adc
aam
inc
jl
sbb
mov
nop
testl
outsb
hlt
imul
cld
adc
test
in
data16
stc
out
and
adc
dec
lock
in
xchg
stc
jle
adc
mov
adc
and
cmpsb
adc
jns
pop
jae
pop
sub
stc
and
sti
pop
mov
lods
jo
push
cmpl
or
adc
pop
jns
hlt
inc
ds
mov
js
ljmp
loope
xchg
iret
or
icebp
das
xor
iret
mov
inc
pop
xchg
enter
xchg
dec
imul
sbb
packsswb
inc
jle
dec
mov
bnd
cli
lret
or
pop
xchg
push
lahf
dec
pusha
imul
xor
add
xchg
sub
popf
mov
or
dec
and
xor
jo
sbbb
xor
mov
sbb
xor
int3
mov
jno
mov
pop
xor
jb
sbb
sbb
fsub
mov
xchg
divb
imul
mov
test
test
sub
adc
mov
mov
jbe
sub
jo
out
shrl
push
jns
out
inc
lret
add
rcrb
push
and
lods
int
loop
insb
subb
in
test
test
xor
negl
pop
movsl
daa
out
in
mov
mov
loope
xchg
pop
cmp
mov
inc
adc
loopne
jge
cmc
cmp
outsl
psllw
jmp
pop
cli
adc
sbb
dec
cmpsl
daa
pop
pop
push
xchg
jle
enter
repz
movsb
test
and
xor
leave
sahf
mov
repz
push
or
push
mov
push
shll
in
jg
push
xor
pusha
mov
lods
mov
jl
outsb
and
sub
mov
pop
fisubl
leave
xchg
inc
and
fsubrs
pop
dec
jb
loop
fidivrl
stc
cltd
insl
fucompp
iret
movsl
push
test
pushw
in
inc
add
jecxz
add
das
sbb
jnp
jns
inc
sub
mov
es
mov
mov
sub
xchg
push
push
dec
popf
dec
hlt
lock
jno
mov
cltd
mov
mov
out
sti
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
add
les
adc
adc
adc
negb
sub
xor
cmp
inc
jne
fs
or
mov
scas
inc
stos
cmp
clc
gs
jb
xchg
dec
fwait
hlt
movsl
mov
push
push
jg
cmp
dec
and
outsl
loope
sbb
xchg
ret
jb
mov
dec
mov
cltd
in
xchg
sti
jbe
cmp
mov
jmp
in
push
sub
mov
and
cmp
pusha
dec
into
jnp
cmp
movl
sti
addr16
fs
xlat
movsb
repnz
pop
jecxz
push
sub
and
aad
sub
ja
sti
loop
pop
or
gs
scas
mov
imul
pop
call
add
fldl
inc
shll
cmp
xorl
out
xchg
addb
js
and
flds
add
push
mov
and
aas
add
jo
sub
outsl
pop
and
dec
stc
jle
mov
movsb
sbb
inc
sbb
dec
sbb
loopne
ss
shrb
dec
or
xor
jbe
movsb
aaa
inc
and
mov
xchg
mov
cwtl
adc
sbb
xor
fsubrl
mov
jmp
scas
dec
xchg
mov
mov
lods
test
fwait
out
sbb
movsb
push
test
sbb
sbb
or
fmull
sbb
mov
or
repz
cwtl
sbb
negb
mov
pop
push
ja
mov
pop
mov
mov
add
shl
mov
sar
xchg
shrb
mov
rclb
hlt
mov
xor
add
addr16
adc
roll
mov
add
dec
js
xor
xchg
and
cmp
cmc
daa
jb
cmp
icebp
sub
lods
xor
fmull
stc
dec
aad
cltd
cmp
inc
test
cmp
add
pop
std
data16
cmp
jo
sti
ljmp
imul
pop
movsl
jb
sbb
xor
aaa
dec
in
or
sbb
das
movsb
xchg
int
ljmp
lret
out
xlat
das
jbe
movl
adcl
dec
in
jge
dec
inc
sbb
pop
jle
sahf
outsl
push
xchg
inc
xor
ret
and
pop
data16
int3
mov
ret
aas
mov
les
mov
ja
icebp
dec
pop
jge
pop
mov
out
out
shlb
mov
mov
cmc
jae
fadds
mov
xchg
cltd
rcrl
cmpsb
lea
stos
incl
movsl
dec
push
or
xor
mov
loope
lahf
mov
sub
xor
fsubrl
mov
cmp
dec
xor
cmp
jmp
cwtl
out
popf
mov
out
lods
fs
ljmp
push
out
xor
rcrb
cli
lret
mov
ja
push
aas
mov
and
movsl
leave
test
xor
lods
push
xchg
and
jne
ss
mov
and
inc
pop
cmp
xchg
fadds
xor
dec
pop
mov
inc
mov
sbb
cmp
stos
mov
xchg
jmp
xor
test
inc
daa
inc
mov
push
sbb
adc
cltd
or
subl
ja
fistpll
dec
cld
add
fs
dec
cmp
push
pop
and
cmp
xchg
sbb
scas
arpl
add
mov
addr16
sub
sbb
iret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
lret
dec
sub
ret
int
adc
stc
sti
ret
aad
add
mov
pop
jbe
es
mov
inc
jge
dec
push
rorb
and
cmp
arpl
fsubs
xchg
mov
push
and
add
mov
dec
mov
dec
and
adc
pop
and
mov
dec
sub
push
xchg
cld
test
mov
pop
cmp
pop
xor
loope
mov
pop
pop
jge
lret
sbbl
mov
sbb
mov
add
nop
jne
or
add
fdivrl
test
ret
inc
add
int
nop
test
addr16
lock
dec
sbb
clc
mov
je
xor
mov
loop
add
nop
cmp
mov
mov
dec
fldcw
shrl
sub
or
cmp
sub
jg
fistps
inc
repnz
xchg
and
addr16
pop
push
lcall
daa
jmp
adc
push
ja
cmpsb
sbb
clc
popf
ss
cld
movsl
std
and
je
jbe
and
push
loopne
ja
mov
aam
fmull
sbb
adc
addr16
repz
repz
outsl
adc
das
das
push
repz
icebp
adc
mov
cmp
cmp
add
adc
cmp
lea
ds
or
out
mov
mov
dec
fists
test
cltd
or
cmp
js
ds
ja
inc
add
xchg
jg
pop
add
ljmp
lods
jp
aaa
dec
scas
jg
push
ja
movsb
cmpsb
in
je
addl
or
dec
daa
xor
pop
fwait
nop
mov
dec
pop
fadd
insb
add
in
pushf
or
loope
loop
ret
int
les
cmp
dec
addr16
aad
jecxz
scas
hlt
cmp
sub
push
jg
cmpsl
and
add
lods
push
aas
daa
fsubs
jns
push
mov
popw
jmp
call
xchg
pop
cltd
cmp
cmc
or
jp
mov
lds
adc
push
scas
divl
mulb
stos
leave
or
daa
jbe
cmpb
outsb
push
lahf
in
cwtl
pop
push
por
jno
mov
es
cwtl
xrstors
pop
inc
ds
arpl
fwait
lods
sarl
xchg
outsb
stos
hlt
sbb
adc
into
and
insb
sub
ds
cwtl
sti
pop
js
scas
loopne
jmp
sub
ds
inc
pop
jle
data16
idivl
lea
in
lcall
arpl
lea
sbb
jns
adc
xchg
mov
scas
xchg
jmp
movsl
testb
adc
sti
scas
sbb
add
das
into
ja
adc
stos
ja
out
in
sbb
iret
xor
sbb
pop
lea
aaa
jb
int
push
nop
ret
aas
cmpsl
mov
dec
icebp
sarl
jge
pop
or
sti
mov
nop
lret
imul
in
xchg
je
and
dec
xor
lcall
mov
cmpsb
pop
pop
pusha
jbe
jmp
fidivrl
lea
fcoml
xor
ficoms
add
add
notl
in
xor
shll
xor
cmp
jae
cmp
jns
adcl
decl
dec
or
inc
fsubr
inc
repz
dec
mov
mov
int3
repnz
or
out
xchg
xor
pop
xchg
cmp
fimuls
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
es
push
mov
adc
test
mov
mov
out
mov
lock
dec
xchg
iret
or
negl
push
jecxz
nop
cmp
and
mov
lock
xor
adc
mov
sub
imulb
test
and
jecxz
das
xchg
push
xor
mov
imul
scas
sub
into
mov
push
ljmp
push
adc
jnp
jge
fwait
push
jns
dec
daa
jle
jo
mov
xor
push
add
and
movsl
mov
cld
lcall
into
add
fcomp
and
sub
fsubrl
inc
icebp
fsin
iret
leave
in
dec
movsl
mov
lods
lret
daa
mov
frstor
xchg
mov
push
adc
je
inc
mov
cltd
pop
addr16
cmp
enter
sti
js
sub
xchg
mov
setle
adc
pop
and
lock
pop
cmpsb
push
jo
xor
adc
call
or
lods
jne
filds
loop
push
sub
out
dec
push
mov
loopne
add
clc
adc
mov
imul
dec
test
or
adc
rcrb
ja
and
hlt
rcll
jne
sbb
lods
lods
dec
mov
test
pop
cwtl
add
mov
insl
mov
dec
sub
push
add
dec
sbb
nop
add
push
jp
inc
sub
lret
in
shlb
xchg
rcll
stc
mov
mov
sbb
sbb
movsb
inc
mov
mov
aas
sar
cmp
addr16
add
pop
insb
mov
cmc
pusha
ljmp
lahf
popf
adc
arpl
mov
fdivs
mov
cmp
mov
fmull
xor
inc
lea
clc
cmp
cli
ficoms
push
sub
dec
inc
mov
sarb
out
xor
lahf
fs
stos
cmp
mov
je
cmp
out
adc
lret
jl
pop
xor
and
fdiv
sbb
push
jl
jecxz
shll
add
mov
adc
mov
sub
and
movsb
and
xchg
mov
mov
ss
stos
lods
push
sbb
lcall
jb
adc
push
dec
pop
mov
rorb
adc
aaa
pop
repnz
xchg
repz
inc
ror
inc
jecxz
enter
bound
movsl
add
movsl
dec
inc
mov
push
dec
std
and
mov
sub
cmc
xchg
int
and
mulb
scas
adc
nop
aas
jl
test
icebp
dec
dec
sbb
dec
insb
movl
push
jne
outsl
mov
xchg
and
mov
stc
bound
and
mov
cmc
push
shlb
pop
jbe
xor
xchg
fs
push
xchg
jmp
insl
ljmp
mov
ret
sbb
mov
arpl
ret
or
add
or
fwait
push
pop
negl
imul
test
loop
jb
fsubrp
add
dec
jnp
int
repnz
je
xchg
adc
mov
sub
lcall
icebp
bound
sub
adc
mov
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
push
leave
idivl
mov
adc
adc
adc
adc
and
lods
push
dec
and
dec
bound
int
mov
mov
cmpsl
bound
mov
or
push
into
mov
pushf
gs
lods
add
push
push
jge
adc
jp
lcall
icebp
loopne
lret
div
mov
fisubrl
inc
nop
lods
cwtl
inc
out
xor
sbb
loop
aam
xchg
mov
push
mov
cmpsl
and
cmp
cmp
repz
insb
xor
insb
dec
es
xchg
jne
cwtl
jns
mov
in
stos
les
out
xchg
mov
cmp
mov
std
jbe
jne
inc
stos
lock
jnp
push
insb
fs
dec
pop
iret
btc
scas
inc
mov
movsl
jl
clc
add
mov
jns
mov
pushf
sahf
insb
inc
jmp
mov
cmpsl
mov
fmuls
out
jecxz
mov
pop
icebp
adc
fdivrs
mov
roll
sbb
mov
mov
add
aaa
xchg
xchg
mov
mov
std
loopne
mov
out
repnz
jg
loope
das
jmp
mov
out
mov
xchg
adc
mov
cs
cmp
es
dec
mov
dec
cmp
out
cmp
fldl
or
jp
vcmpss
ret
addr16
adc
dec
sub
mov
movsb
jae
scas
mov
stos
push
or
ja
adc
pop
jle
dec
mov
pusha
movsl
mov
outsb
pop
xchg
lea
mov
xchg
std
sub
data16
imul
push
cmp
inc
mov
jle
dec
add
fldt
jb
fdivl
ds
movsb
or
data16
loopne
popa
cmp
es
add
xchg
mov
sbb
es
push
dec
orb
dec
stos
mov
push
add
imul
push
xchg
and
pop
and
in
and
lret
xchg
fisubrs
push
jmp
mov
pushf
mov
addr16
adc
data16
jecxz
adc
mov
bound
rcrl
xor
sbb
jno
movsb
ds
add
das
stos
jl
int
lods
imul
sub
push
roll
jo
sahf
enter
nop
or
cli
lret
push
inc
test
adc
negl
out
sbbl
ja
pop
je
outsl
jo
cmpsl
mov
or
push
adc
in
and
cmp
pop
dec
push
ret
pushf
stos
push
pop
jb
xchg
movb
xchg
sbb
aas
fcmovbe
sbb
or
cmpsb
mov
sbb
sub
pop
jno
add
xor
in
mov
icebp
arpl
dec
stos
gs
xorb
dec
rcr
push
xchg
shlb
clc
adc
pop
push
cli
fidivrs
xchg
jbe
push
lods
shll
jecxz
popf
rclb
jg
jnp
addr16
push
aad
xchg
mov
jge
dec
or
into
fldenv
cmp
leave
stos
jno
cmp
out
out
pop
rolb
std
xor
rolb
add
inc
sbb
bound
movsl
jno
dec
orps
bnd
ficompl
adc
mov
es
xlat
call
popf
rorl
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
inc
mov
shrl
adc
stc
test
std
jl
shll
daa
mov
inc
add
pop
dec
shlb
add
ret
jle
mov
sarb
and
inc
movsl
bound
mov
ja
in
inc
insl
das
jle
out
insb
mov
lret
jmp
out
pop
adc
clc
nop
scas
or
iret
frstor
add
push
movsl
mov
push
sbb
imull
dec
xor
cld
out
cmp
fsubrs
cmpsl
stos
jno
lcall
xchg
pop
xchg
cmpsl
and
sub
pop
dec
rclb
sub
xchg
lock
dec
clc
rclb
lret
mov
mov
jge
sbb
inc
daa
or
push
push
push
and
and
add
movsl
loope
mov
sub
push
cmp
push
jo
push
lcall
scas
outsw
sbb
loopne
cmp
cmp
mov
clc
imul
xchg
jl
sub
jmp
fcompl
iret
ds
fnstcw
mov
je
nop
pop
mov
jo
dec
adc
repz
adc
adc
and
repnz
js
jns
pop
stc
or
and
js
adc
pop
in
or
mov
jnp
xor
insl
shrb
mov
test
in
jge
cmp
lods
mov
insb
fnstcw
in
loopne
and
das
xor
les
push
scas
sahf
ds
sub
les
xor
or
mov
les
cmp
push
pop
cmpsl
lcall
inc
mov
and
cld
sar
subl
fwait
or
stos
push
lcall
jmp
and
cmpsb
dec
lahf
adc
addl
lock
mov
cld
out
mov
add
ljmp
lcall
sbb
and
xor
les
cmc
test
pop
mov
sub
add
cltd
and
push
nop
cmp
cmp
pop
cmp
movsb
push
scas
mov
mov
jecxz
mov
pushf
jae
mov
jg
ja
aaa
sbb
sahf
pop
fwait
dec
testb
cmpsb
xchg
mov
lahf
add
pop
sub
loopne
outsl
inc
xchg
dec
add
mov
inc
mov
sub
push
test
push
xchg
imul
pop
pop
dec
loopne
dec
test
push
int
subb
ljmp
aad
jo
dec
out
jp
xor
scas
test
aad
and
and
add
movsb
fnstsw
and
jp
xchg
filds
pop
cmp
adc
pop
sahf
jmp
xrelease
push
test
leave
cmp
push
push
sub
push
mov
leave
cmp
js
cmp
xor
arpl
dec
xchg
sub
dec
mov
jnp
cltd
mov
scas
insb
mov
lods
test
xor
or
push
adc
cmp
sub
pop
add
stc
insb
jnp
xchg
pop
sti
mov
cmp
and
test
cltd
jbe
je
lds
xor
mov
inc
rclb
aaa
xchg
inc
hlt
dec
dec
sahf
scas
scas
and
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
adc
mov
adc
fistpll
cmpsb
cmp
jbe
movsl
ret
lret
mov
ljmp
sbb
repz
xor
js
adc
mov
aad
fs
xor
adc
clc
loop
xchg
lret
sbb
cld
loopne
mov
adc
mull
fcoml
ss
mov
movsb
mov
cmp
push
cmc
xchg
xchg
pop
outsl
xor
ss
sbb
aaa
mov
jecxz
fisubl
push
push
jae
push
mov
test
and
push
jne
jns
dec
cmpsb
aam
fcoml
stos
dec
inc
dec
xor
jecxz
cmpsl
out
fdivr
and
aas
arpl
mov
sbb
mov
jb
dec
xor
clc
inc
dec
cwtl
adc
xchg
or
xchg
call
roll
repz
pop
dec
stos
or
xchg
fcomi
icebp
add
xchg
fistl
addr16
in
and
stc
sub
testl
mov
sbb
mov
cmp
and
iret
xchg
repz
and
jge
add
jle
jne
les
mov
rcll
dec
call
sub
push
cmc
aas
or
adc
cmp
jp
fstps
xchg
sbb
mov
fdivl
std
aas
push
les
ficoml
fsubr
ljmp
lcall
pop
lcall
scas
fcomi
jg
inc
inc
add
jg
dec
mov
xchg
stos
jp
rorb
testb
insb
es
aam
adc
and
inc
in
ret
fiaddl
add
test
and
movsl
add
cmpsl
adc
jns
hlt
sub
xchg
dec
jno
jb
aas
ds
fldt
stc
xchg
out
mov
mov
pop
push
xchg
xor
jns
mov
fidivrl
mov
out
and
roll
inc
cltd
fsubs
repz
adc
call
lcall
clc
pop
test
pop
clc
xor
fcomps
pop
adc
mov
aam
mov
cmp
sub
jmp
int
sbb
mov
clc
stc
xbegin
push
stos
xlat
orl
mov
mov
xorb
xchg
jp
push
dec
mov
push
push
mov
insb
daa
psubsw
loop
ljmp
push
aam
std
add
in
in
jmp
mov
mov
and
push
dec
aaa
mov
icebp
xchg
adc
scas
int3
inc
mov
mov
mov
cmp
lahf
aad
loop
out
mov
mov
inc
rclb
scas
push
mov
es
jnp
rcll
xchg
mov
cli
dec
xlat
xor
push
in
mov
inc
outsl
sub
bound
cwtl
aam
adc
push
sub
xor
sarb
pop
sbb
mov
sub
cmp
jno
loope
orb
pop
jno
jle
leave
sbb
clc
pop
int3
ret
ret
jno
mov
dec
mov
jb
jecxz
fiaddl
and
je
lahf
sbb
mov
xchg
lret
dec
in
fistpl
pop
loope
movsl
dec
fadds
mov
push
mov
das
jge
jne
inc
mov
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
or
insb
sub
adc
adc
clc
lret
das
push
repz
fistl
mov
out
xchg
mov
pop
cwtl
out
and
xor
cmp
addr16
inc
pop
imul
and
je
mov
lcall
push
ja
inc
es
scas
insb
add
push
pop
ss
loopne
out
dec
xchg
sub
mov
sbb
rcrb
lea
pop
inc
outsl
movsl
call
xchg
xchg
cmp
ret
pop
out
push
cmc
and
adc
mov
arpl
push
lods
fcmove
nop
enter
mov
lea
cmp
cmpsb
fsubr
xor
push
sub
ret
in
enter
pop
mov
pop
divl
mov
mov
loopne
cmc
call
jecxz
sahf
cwtl
shll
stos
jno
dec
inc
insb
sbb
jae
cld
enter
mov
fstpl
push
or
mov
insl
inc
xchg
out
cmpsb
iret
mov
sbb
xor
cmp
add
lock
inc
or
xchg
leave
cmp
inc
pop
and
xor
push
or
mov
xchg
divb
inc
fcomps
xchg
ret
mov
jbe
cmp
lahf
sahf
lret
dec
xchg
pop
push
stos
into
push
adc
mov
and
push
add
jne
jmp
cmpsb
aaa
mov
xchg
mov
les
sbb
mov
or
testb
scas
fcomi
outsl
test
jns
subb
xchg
scas
jo
stos
ret
iret
clc
mov
cmpl
mov
in
push
adc
mov
dec
scas
jo
xchg
aad
pushf
xorb
lods
lret
icebp
aas
jns
adc
stos
dec
and
xor
adc
or
mov
jae
ja
xor
dec
bnd
scas
repz
and
mov
jbe
mov
xorl
movsl
or
push
lea
sti
imul
lea
insb
xchg
mov
outsl
xor
test
test
lcall
jae
adc
test
sbb
fiadds
xor
mov
add
adc
inc
mov
in
popa
shlb
inc
mov
std
aad
aas
sti
mov
scas
jne
inc
add
sub
sahf
inc
stos
test
testl
hlt
and
sahf
xchg
test
xor
pop
jnp
jecxz
mov
mov
lea
push
aas
and
cli
sbb
or
mov
fldt
pop
mov
es
test
mov
loop
pop
das
cmp
xlat
xchg
push
fidivl
or
cmp
out
lcall
sbb
adc
mov
lods
push
or
popa
movsl
das
push
mov
jecxz
pop
insl
inc
add
icebp
adc
sti
xchg
outsl
ret
add
pop
xchg
jbe
shrb
ja
cmp
jle
cli
sub
mov
mov
add
fisttpll
mov
ja
xchg
or
add
lret
pop
add
pushf
push
mov
pop
cli
mov
fstl
cmpsl
out
sub
dec
nop
loop
out
fsubr
inc
repnz
mov
stos
test
jp
jnp
push
xor
xor
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
cmp
shlb
lods
outsb
sub
pop
int3
xchg
out
enter
add
inc
ljmp
push
pop
jecxz
testl
pop
aam
fisttpl
test
mov
sub
cltd
jb
mov
pop
pusha
outsl
xrelease
add
daa
movsb
dec
lock
pop
sub
pop
push
push
dec
loopne
cmp
pop
fisttpl
js
inc
adc
mov
pop
mov
pop
jns
pop
arpl
ss
push
nop
emms
ss
cltd
add
loop
inc
int
daa
dec
call
or
xchg
push
daa
jbe
xchg
test
bound
push
stos
sub
sub
cmp
cmp
cltd
mov
push
or
lret
std
ljmp
and
test
orb
leave
lds
xor
cmpsb
sub
fwait
lahf
xor
add
sbbb
mov
add
and
inc
stc
push
fimuls
sub
aaa
push
jb
insl
xchg
outsl
dec
dec
jae
cli
mov
sbb
insl
outsb
into
stos
int3
pop
sti
out
out
or
cmp
dec
pop
xlat
fwait
arpl
jle
push
adc
pop
jecxz
mov
xor
adc
mov
es
pop
pop
stos
jns
aas
xchg
xlat
shlb
outsb
cld
insb
mov
lcall
rcll
push
mov
test
inc
xlat
fs
sbb
mov
xchg
js
stos
adc
pop
add
push
nop
insl
clc
gs
aad
jo
push
ds
jo
mov
dec
mov
mov
mov
fstpl
sub
jp
inc
push
movsb
enter
push
fs
push
int
mov
cmp
xor
fucomp
fmuls
lods
mov
gs
push
fnstenv
lea
enter
push
rol
xorb
decl
add
dec
call
adc
test
insl
push
inc
push
jle
push
data16
cs
out
aam
jae
std
and
push
xor
and
add
jge
push
jno
nop
cltd
dec
mov
stos
cmpb
repz
push
into
inc
mov
in
scas
mov
jns
add
ret
jl
clc
cli
xor
scas
pop
and
xchg
cmp
shlb
repz
outsl
adc
cmpsb
mov
call
out
outsl
cmp
xchg
add
xchg
fcmovne
xor
leave
addr16
mov
inc
lcall
lcall
in
mov
jmp
jp
out
aam
pop
cmpsl
sub
addr16
repnz
mov
push
mov
and
clc
adcl
pushf
pop
cmp
or
sahf
repz
ret
xchg
pop
jo
subb
cmpl
inc
lods
cmpsl
mov
cld
pop
lahf
ja
dec
shlb
insl
jno
push
aam
fsubr
mov
xchg
test
sub
mov
ret
jbe
pop
mov
gs
fsubl
cltd
cmp
fisttpll
mov
mov
push
xor
pop
repnz
int3
roll
cmp
xor
fwait
enter
rorl
push
push
fsubs
inc
stc
movsl
arpl
jae
test
add
fiaddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
rep
lcall
adc
mov
push
jb
cwtl
test
aas
jnp
cmp
shrl
and
and
shrb
movups
adc
mov
or
xchg
loop
mov
inc
negb
push
dec
fadds
and
xchg
mov
loopne
lcall
out
sub
cmp
xlat
push
lcall
lds
mov
das
mov
andb
in
sub
dec
mov
popa
push
mov
negw
rol
dec
cmpsl
imul
cmp
push
cs
dec
mov
mov
jecxz
les
jmp
xchg
hlt
pop
adc
es
xlat
lcall
in
sub
mov
imul
adc
test
lds
andb
into
stos
stos
or
sahf
pop
test
enter
lret
nop
ret
mov
and
mov
jns
xchg
ds
jl
out
pop
sar
push
pop
sbb
sbb
arpl
jno
loope
enter
xchg
std
push
aaa
stos
es
mov
pop
stc
cmp
cmp
sub
sbb
mov
leave
lret
dec
lock
call
mov
adc
xchg
in
jl
inc
shll
das
mov
sbb
test
out
xchg
aaa
mov
or
data16
jnp
cmp
or
movsb
jle
es
lds
inc
dec
dec
cwtl
xchg
lods
dec
cli
fbld
inc
sub
mov
jnp
pop
push
iret
fldl2e
clc
sqrtps
or
js
mov
cmp
and
jae
cmp
call
add
popa
and
cmp
xor
rolb
daa
daa
cli
mov
mov
add
push
xchg
outsl
and
sti
insl
fucomp
call
ret
data16
push
cmp
cmp
imul
test
out
inc
xchg
test
test
pop
gs
scas
pop
pop
xlat
cmp
and
mov
insb
mov
pop
push
bound
or
test
lea
fsubr
jne
jle
adc
and
out
jne
push
out
sub
pop
xor
pop
cmp
cmp
inc
bswap
pushf
gs
mov
or
in
or
imul
push
xchg
icebp
and
mov
xchg
aam
aad
int
adc
push
push
sbb
push
add
add
adc
insb
mov
and
inc
add
jo
dec
sbb
jecxz
mov
hlt
jns
nop
ja
push
jno
jle
loop
push
mov
xchg
cmp
mov
mov
ss
add
xor
idivb
mov
inc
jle
mov
out
xor
inc
push
cwtl
imul
insl
push
std
das
mov
cmp
mov
and
leave
movsb
jne
pop
pop
mull
loopne
push
push
lret
push
push
inc
popf
add
cld
stos
sub
setl
rcll
mov
fistpl
xchg
popf
adc
sub
mov
lds
xchg
mov
jl
repz
jb
lods
and
ficomps
jg
lock
in
cltd
pop
pop
ss
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
add
test
adc
adc
adc
dec
cwtl
ret
sbb
mov
incb
adc
and
mov
test
push
xchg
sarb
mov
sub
inc
push
fnstenv
movsl
jnp
sbb
or
sbb
rcl
aad
mov
dec
and
mov
xchg
cmp
scas
cld
adc
cltd
sub
iret
pop
adc
ret
insl
lea
std
mov
js
cmpsl
lahf
test
adc
xor
fdivrp
xor
aad
cmp
sub
xchg
mov
adc
imul
mov
shll
push
push
mov
out
pushl
mov
cmp
xor
push
loop
jmp
and
out
shlb
addr16
jp
mov
rorl
lret
mov
mov
mov
mov
dec
mov
xor
loopne
lret
fwait
add
adc
or
jecxz
je
repz
xor
cmp
hlt
outsb
push
imul
jg
mov
jbe
pop
pop
jmp
cltd
fldcw
jl
fistpll
aaa
sti
loope
enter
movsl
mov
lods
fs
ret
mov
imul
repz
mov
sbb
add
mov
test
pop
add
leave
pushf
cwtl
mov
repnz
push
ret
data16
repnz
inc
lret
xor
aad
dec
cmpsl
jp
push
xchg
cltd
les
scas
cmpsb
ss
pop
out
je
jns,pn
and
aad
mov
mov
pushf
iret
lods
sub
add
sub
xor
inc
inc
int3
inc
mov
out
xchg
cmpb
or
jg
lcall
fbld
gs
cmp
ss
xor
mov
push
fs
aad
pop
enter
push
fs
fstps
std
aaa
dec
idiv
push
ficoml
mov
es
into
dec
xchg
and
loop
pusha
add
test
jle
mov
inc
mov
pop
lods
add
negb
jmp
cmp
sub
dec
sub
mov
fcomps
outsl
lret
push
mov
sbb
rolb
shl
sub
pop
faddl
mov
add
int3
dec
roll
sti
insb
pop
fs
lods
push
xchg
dec
xchg
icebp
push
sarl
je
xchg
mov
cmp
scas
es
ret
sbb
hlt
or
jg
inc
push
testl
call
fisttpl
xchg
mov
in
xchg
test
push
iret
push
daa
inc
in
cmp
pop
add
adc
test
dec
mov
lret
mov
mov
push
mov
adcl
outsb
xchg
data16
push
mov
xchg
adc
sbb
pop
test
adc
pop
imul
int
adc
ret
and
xorl
jmp
mov
in
int3
push
cmpsl
lods
fldt
das
mov
out
into
movsb
sbb
jecxz
ja
or
call
mov
pop
int
add
inc
inc
and
popa
fnstcw
mov
mov
and
ljmp
mov
sar
daa
lds
int
das
mov
cs
fsubrl
jp
jecxz
or
arpl
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
shll
and
push
jl
adc
adc
adc
xor
pop
push
lods
ud0
sti
cltd
inc
xor
push
sbbb
inc
push
mov
int
inc
mov
ficompl
orl
pop
mov
push
ja
push
push
or
pop
mov
sub
mov
lcall
in
insb
xor
xchg
aad
dec
adc
mov
rorb
xor
mov
fldt
int
in
add
xchg
call
lea
add
push
mov
clc
and
out
push
push
mull
scas
gs
cmp
mov
pop
xchg
ja
mov
cltd
sbb
mov
popa
jne
pop
push
adc
push
xchg
cmp
push
xor
xchg
enter
filds
mov
neg
jl
push
fcoms
xchg
test
and
fistpll
jmp
inc
mov
std
std
data16
dec
push
adc
sbb
aaa
xchg
cwtl
popa
call
cs
pop
aad
cmp
pop
test
xchg
jge
scas
cmp
cmp
dec
ret
cmp
notb
ret
adc
jnp
push
flds
mov
xor
mov
fistpll
lock
push
mov
dec
and
sub
mov
cmp
popf
pushf
or
xor
pop
push
lahf
int3
mov
push
mov
ficoms
mov
dec
test
popa
repnz
inc
aad
repnz
gs
mov
pop
andl
push
fwait
push
adc
inc
xchg
jle
sub
int3
mov
scas
inc
cmpsb
jecxz
inc
add
ficompl
or
leave
mov
sub
dec
jb
bound
fwait
sub
sub
jae
xchg
pop
mov
xchg
dec
push
fnsave
jp
xchg
inc
pop
push
out
xor
movsb
xchg
jnp
rcll
xor
and
push
or
lods
lods
jne
pop
push
nop
lret
mov
imul
popa
in
add
jae
aaa
jmp
push
add
sbb
sub
cmc
mov
lret
shll
mov
mov
insl
ljmp
jge
lock
mov
sti
sahf
inc
sti
push
std
and
inc
xor
test
mov
imul
pop
rcrb
das
push
int3
icebp
jno
icebp
sbb
enter
jmp
sub
in
int3
fnstcw
sbb
add
aam
mov
push
dec
arpl
int
push
lock
out
insl
addr16
movsl
and
sbbb
fldl
dec
and
clc
mov
dec
scas
jle
sbb
inc
jbe
mov
dec
aad
pop
loop
mov
outsl
jge
pop
sbb
mov
add
fistps
sub
stc
mov
and
movsb
add
xor
mov
pop
cltd
shll
mov
dec
arpl
lret
jmp
out
push
aas
and
cmpsb
mov
or
or
push
icebp
xor
cmp
je
jmp
xor
add
movsl
sbb
loop,pn
fiadds
loopne
fdivr
push
popl
add
jmp
add
xor
sub
fnsave
int3
repnz
js
in
imul
mov
fs
jmp
out
ljmp
sub
popa
lods
xchg
imul
xchg
aaa
or
sub
lret
cmp
inc
inc
jge
addr16
push
sub
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
mov
je
adc
adc
adc
or
xor
fs
mov
pop
rol
fiadds
imul
test
mov
daa
cmp
cmp
scas
arpl
jnp
adc
aaa
jl
cmpsb
pop
pop
push
mov
stos
inc
sarb
push
xor
jecxz
lret
mov
in
rorb
int
jbe
mov
xor
orl
jne
jmp
cld
sub
mov
mov
popa
int
fistps
pusha
push
sbb
mov
mov
push
jg
mov
sbb
push
adc
mov
and
mov
out
aas
mov
or
mov
mov
mov
ja
imul
lds
ficoms
and
ds
shlb
jo
loopne
pop
nop
pop
cmp
jne
sbb
outsb
inc
inc
jp
cwtl
aaa
dec
jno
pushf
dec
outsl
loop
cmpsb
dec
mov
enter
scas
movl
loopne
jge
and
mov
mov
inc
lock
dec
test
push
adcb
imul
dec
xor
sub
cs
mov
out
outsb
daa
dec
scas
cmp
adc
adc
xchg
mov
sbb
sub
inc
mov
sbb
hlt
lock
inc
mov
mov
and
enter
adc
ret
and
and
push
or
cmpsl
ret
cld
shl
inc
insl
pushf
fistpll
push
push
cmp
jge
xchg
jg
jbe
insl
xchg
cmp
xchg
ljmp
movsb
into
sahf
aaa
cltd
daa
jnp
fxch
leave
stos
jae
push
jne
pop
hlt
sub
cmp
nop
pusha
push
xchg
je
lcall
dec
in
lock
push
jae
call
push
sub
enterw
js
push
jns
jae
mov
rol
push
mov
cld
jle
jecxz
into
cld
dec
ss
xor
cmc
ss
shll
andb
mov
add
xor
lret
cld
cmp
pop
bound
inc
mov
out
add
arpl
shll
or
dec
xor
mov
adc
out
fdivl
inc
adc
dec
pop
imul
sub
jbe
and
cmp
cli
push
mov
add
aas
inc
rorb
mov
stos
insb
iret
leave
sbb
mov
jmp
stos
cmp
add
jo
inc
subb
out
jge
add
sbb
ss
pushf
mov
mov
xchg
in
cmpb
add
xor
iret
sub
sbb
lret
insb
aas
pop
or
test
fdivr
out
fsubrs
sub
xor
mov
fwait
mov
and
push
cmpsl
jecxz
cmpl
cmpsl
xchg
aas
push
or
xor
jecxz
rolb
lods
adc
cmp
jns
jbe
jmp
fs
mov
je
imul
orb
in
stc
dec
sbb
popa
xlat
sti
in
mov
mov
out
mov
shl
sbb
notl
das
push
fadds
movsl
fidivrl
lea
jbe
inc
repnz
enter
sbb
jbe
push
fisttpll
dec
loop
and
divl
inc
rorb
inc
add
jnp
test
jmp
jno
orl
enter
add
add
jle
sub
xchg
mov
mov
jb
adc
adc
adc
xchg
sub
inc
mov
lock
jmp
test
stos
imul
iret
pusha
push
in
xor
mov
shl
int
aaa
jne
into
rcll
xchg
popf
xor
sub
test
xor
push
rolb
in
dec
aad
cli
sub
inc
lea
mov
fidivrs
sahf
aaa
inc
out
loope
lret
and
es
adc
addl
pusha
pop
jl
sub
rcll
xor
pop
push
jecxz
subl
pop
ret
inc
xor
xchg
fs
mov
repz
cmp
insl
out
mov
and
rorl
sub
fs
inc
test
lret
adc
or
pop
cmp
push
mov
dec
add
pop
pop
jno
filds
aaa
jmp
inc
iret
mov
cmc
test
dec
pavgw
divl
loope
inc
xchg
mov
bound
lock
dec
and
pop
mov
outsl
mov
cltd
sbb
mov
cmpsl
and
mov
adc
mov
mov
cmp
icebp
outsl
popa
scas
popf
cld
mov
and
add
cwtl
push
aas
int
sti
rolb
aam
sti
sub
or
lret
dec
rorb
push
cmp
data16
call
nop
jnp
mov
sbb
shl
out
pop
pop
cmp
add
clc
lret
dec
xchg
sub
pop
jge
in
xor
inc
xchg
popf
lock
xlat
mov
push
mov
lcall
jl
test
loop
shlb
into
das
roll
iret
sub
or
notb
aaa
xchg
icebp
fmuls
nop
popf
adc
push
stc
push
icebp
mov
cli
push
ja
lea
push
sbb
ljmp
insl
pushf
or
lea
cmp
out
mov
jle
sub
je
sbb
push
les
dec
fsts
inc
sti
push
dec
push
jecxz
push
scas
inc
nop
imul
mov
nop
jmp
aaa
mov
sub
iret
jle
mov
push
xor
mov
sub
loope
pop
push
mov
pushf
xchg
subl
fsincos
sub
fcomp
mov
bound
aaa
cmp
movsl
sub
stc
aaa
push
and
ficomps
xor
in
or
pop
fsts
adc
sub
or
add
ds
pushf
lea
jns
adc
fadd
aad
out
insb
adc
rcrb
sbb
lods
pop
inc
jge
and
loopne
imul
sub
iret
xadd
cmpsl
push
mov
add
test
push
scas
sbb
xchg
bound
mov
jp
dec
mov
jno
nop
imul
push
pop
jo
ss
icebp
push
push
out
sahf
es
sti
mov
ds
loope
xchg
dec
xchg
call
les
bound
mov
xor
scas
pop
repz
cmc
ss
in
in
cmpl
adc
movsl
xchg
scas
sbb
mov
push
jmp
push
mov
jne
in
inc
inc
nop
mov
cmp
lret
cmp
and
test
cltd
cmp
aaa
in
aaa
lods
pop
test
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
xor
push
adc
adc
adc
test
inc
mov
ljmp
ss
or
push
xor
mov
sbb
aad
adc
bound
jp
or
pop
loop
je
mov
sbb
dec
push
sub
inc
mov
nop
jo
inc
cs
push
xchg
test
push
idivb
insl
cmc
loop
dec
aas
shrb
repnz
mov
adc
add
mov
jmp
mov
or
fdivrl
int3
xchg
popa
imul
jg
mov
insl
sahf
aaa
push
cmp
pop
jge
test
cmp
fadds
ret
faddl
shll
xchg
pop
mov
mov
xor
push
inc
aam
nop
pop
mov
pusha
out
adc
cld
mov
rcrl
lret
mov
pushf
rcr
xlat
mov
add
fisubrs
jl
jmp
pop
scas
inc
and
mov
lret
xor
jnp
es
cmpsl
xor
xor
jp
jle
cmp
shlb
mov
mov
lcall
test
rol
inc
cmpsb
push
sub
xchg
jmp
sbb
les
sbb
xchg
dec
mov
enter
adc
fisubs
or
addb
test
in
and
incb
clc
prefetcht1
jo
jg
sbb
loope
rcrl
dec
int
test
popf
test
dec
pop
and
add
scas
cmp
lock
pop
cmp
enter
lods
mov
sbb
jno
sub
les
test
pusha
pop
mov
sbb
or
mov
sbb
cltd
arpl
cmc
leave
in
mov
xor
mov
lods
add
sub
xchg
sub
arpl
mov
cmpl
jae
mov
lret
xor
mov
adc
aam
and
push
jo
mov
mov
pushf
movsl
sbb
jg
dec
sub
lods
aad
fcompl
mov
push
mov
adcl
jnp
mov
jmp
popf
ret
or
inc
dec
gs
push
and
push
push
fwait
nop
int3
test
dec
mov
ljmp
or
ljmp
outsl
js
into
pusha
test
cmpl
imul
in
aaa
jle
pop
sub
jbe
mov
cmpsl
dec
gs
push
inc
push
cmp
jl
test
lods
sbb
jp
pop
add
mov
nop
test
mov
adc
mov
xchg
xchg
fidivl
xchg
pop
pop
jp
insl
ret
xchg
ret
cli
fldl
cmp
jg
rorl
inc
in
sti
jp
mov
cmpsl
jae
push
mov
fmuls
or
mov
leave
mov
jns
pushf
jnp
xor
out
sbb
mov
cmp
mov
and
in
sub
fidivrs
inc
scas
pushf
mov
mov
cwtl
sbb
shlb
sub
out
mov
mov
xchg
fstps
mov
and
in
and
fcomps
outsb
xor
push
mov
nop
sub
fwait
popf
repz
mov
add
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
outsl
jae
mov
push
adc
adc
popf
loopne
xlat
xchg
xlat
or
repz
dec
xor
xorb
pop
out
and
pop
xor
bound
xchg
xchg
data16
insb
mov
enter
in
push
jp
outsl
fs
jns
scas
pop
icebp
out
pop
xor
hlt
push
loop
gs
pop
repnz
mov
loopne
das
or
push
jl
rcrb
mov
jno
cs
jb
dec
lret
adc
es
mov
aaa
out
push
xchg
cwtl
jo
out
jecxz
jo
inc
aad
mov
orl
inc
aas
mov
xchg
push
jb
xor
std
cwtl
roll
cmp
or
pop
adc
inc
inc
das
mov
cmp
pop
pop
mov
test
add
mov
mov
push
push
add
xor
jo
pop
inc
daa
mov
pop
and
cmp
add
jp
mov
dec
cltd
ret
cmp
bound
xchg
leave
and
loope
xlat
stc
les
push
sub
pop
loopne
imul
out
mov
scas
gs
mov
outsl
push
xchg
pop
hlt
push
inc
xor
pop
or
xchg
fldenv
mov
or
shll
mov
ljmp
orl
sti
fsubrs
negl
dec
push
add
xchg
dec
in
das
or
mov
jae
push
add
jno
dec
call
test
fmul
push
pop
push
cmpsl
pop
inc
iret
mulb
adc
push
mulb
mov
and
or
inc
cmp
jno
pop
lahf
cmp
ss
in
cmp
pushf
mov
in
loope
adc
stos
push
mov
popa
pushf
fdivl
dec
notb
pusha
leave
ret
orb
pushf
cltd
or
insb
xorl
sbb
add
test
insb
mov
lea
sbb
cmp
jae
xlat
ljmp
mov
fmull
push
shrl
cmc
mov
inc
mov
pop
arpl
in
sub
daa
stos
in
aaa
scas
push
arpl
inc
mov
gs
lahf
xlat
adc
jne
fmuls
sahf
sub
xor
test
or
dec
pop
or
mov
stc
pop
cmc
scas
jl
nop
stos
cli
dec
pop
inc
maskmovq
negl
inc
dec
ret
and
jg
mov
jmp
inc
bound
nop
les
pop
lea
bound
out
push
xchg
sub
aad
jbe
push
xchg
in
adc
sti
stc
int3
inc
lock
pop
sbb
cmp
int3
loop
test
mov
fstps
ja
aam
outsl
or
lock
movsl
or
and
mov
addr16
es
cmc
js
mov
jne
or
lea
insl
sub
cmp
xchg
out
lahf
stos
cmpsb
aas
psubusw
sti
pop
add
test
jge
fbstp
dec
or
in
cmp
push
and
sbbl
in
stos
pop
out
stos
lods
xchg
enter
call
sub
mov
loopne
push
fbld
xor
test
lods
cmpl
pop
mov
xor
sub
pop
fistpl
push
push
xor
lea
xor
xor
or
sub
jge
cmp
pushf
hlt
xchg
mov
xor
sub
mov
enter
mov
cwtl
loope
dec
pop
daa
xchg
or
test
inc
fwait
sbb
out
xor
daa
bound
sub
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
fwait
and
mov
xor
adc
cmp
loopne
mov
xor
cltd
js
negl
call
xchg
roll
fildll
jbe
dec
jecxz
xor
test
sbb
and
fsin
std
cmp
les
and
jne
fistpl
daa
mov
out
fwait
incl
or
out
push
adc
cmp
cmpsb
pop
faddl
sub
cmovbe
add
enter
xchg
adc
jnp
shlb
jmp
out
and
jne
mov
jmp
stos
adc
cli
sbb
sbb
or
add
and
dec
shl
pop
cmpsb
pop
negl
push
pop
dec
push
or
ds
push
mov
iret
in
sbb
sbb
stos
or
inc
xchg
push
lock
mov
and
movl
dec
pop
xchg
cltd
sbb
pushf
or
mov
int3
imul
ljmp
nop
ja
lcall
and
mov
cmp
jmp
dec
icebp
push
iret
xor
imul
adc
les
mov
pop
mov
mov
imul
mov
add
fwait
adc
flds
push
mov
mov
sub
xorb
and
popf
mov
jnp
adc
jecxz
imull
testl
inc
sbb
test
push
jo
inc
movl
nop
cmp
mov
out
dec
in
sub
aam
dec
xor
jmp
js
testl
cmp
fidivs
enter
sbb
inc
std
xor
jb
cmpsb
push
mov
imul
scas
xlat
mov
mov
push
std
cs
mov
cmpsb
popf
jo
adc
sbb
addr16
out
xchg
jns
xor
popf
jbe
or
push
iret
mov
mov
mov
out
and
shlb
fimull
imul
popa
xchg
lods
dec
lret
add
jle
leave
fistpl
in
enter
xchg
ja
lods
pop
enter
icebp
jns
jp
jg
aas
fs
pop
cli
out
add
enter
or
xchg
or
pop
lods
xchg
push
daa
mov
xlat
jb
sub
or
pop
sti
and
mov
and
or
lcall
rol
sti
sub
cmpl
sub
and
mov
dec
movsb
lds
stos
movsl
hlt
std
cld
add
rcll
jl
scas
test
mov
mov
inc
sahf
into
sub
scas
xor
sbb
movsb
xchg
add
lods
popf
xor
sbb
out
out
shlb
outsb
pop
or
sbb
ret
int
pop
pop
cmp
std
scas
lret
in
shll
shlb
pop
pop
test
jns
out
add
inc
lret
aad
notb
hlt
sbb
pusha
loope
jl
xchg
adc
lret
cli
xor
test
mov
addr16
or
xor
cld
icebp
lahf
test
pushf
adc
sbb
jmp
cltd
cmpsl
and
fs
enter
jno
xchg
add
push
jl
nop
fisubrl
pop
xchg
leave
int
push
jl
test
inc
xchg
inc
movsb
int
push
dec
xchg
add
rcll
ret
loopne
enter
xor
popf
clc
rclb
aad
cmpsl
scas
out
xlat
jg
or
repnz
add
push
pop
cmp
mov
cmpsl
jo
mov
sarl
xchg
dec
inc
mov
and
add
sbb
xor
or
jo
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
repz
push
adc
xor
adc
pop
pop
inc
xor
lock
and
lods
cmpl
or
gs
adc
mov
mov
adc
mov
maskmovq
testl
add
pop
dec
adc
pop
nop
or
int
lock
cmc
loop
mov
test
repz
in
in
mov
xchg
mov
or
mov
pop
nop
data16
fsubrl
jecxz
fbstp
cld
loopne
std
dec
pop
cmp
outsb
mov
inc
sbb
dec
or
mov
in
fisubrl
push
pop
dec
cwtl
out
imul
arpl
cmp
in
pushf
sbb
sarb
mov
int3
pop
mov
fdivs
call
xchg
lea
fidivs
mov
andps
ficoml
mov
jge
xlat
xchg
jnp
arpl
xor
jo
xchg
cwtl
aas
pop
in
outsl
stos
fbld
movsb
daa
out
sahf
mov
cmp
pop
call
cmpsb
scas
ret
loop
shll
out
jmp
xchg
dec
into
jnp
mov
lcall
mov
stos
mov
xorl
sbbb
lods
sti
negl
push
rorb
push
aas
sub
jg
mov
sarb
jnp
cmp
mov
jl
sahf
out
mov
mov
mov
ljmp
les
hlt
aaa
stos
push
cmc
sbb
sub
stc
adc
sbb
pop
idivb
out
dec
cmp
push
sub
ljmp
xchg
push
aam
mov
sub
add
dec
mov
or
mov
rclb
push
rorb
shr
cmc
test
xorl
or
cmp
pop
pop
add
out
stc
stc
mov
addr16
push
or
les
insl
jge
mov
mov
in
mov
shrl
inc
pop
ret
mulb
scas
mov
mov
dec
pop
pusha
into
adc
lcall
inc
sbb
imulb
je
jmp
adc
pop
push
cmp
lea
stos
pop
pop
stos
mov
pop
pop
sub
cmp
push
push
leave
mov
shl
cli
imul
or
shlb
shlb
sbb
cmc
mov
ds
jns
ss
and
roll
sbb
pop
mov
es
pop
popf
and
cmp
lea
and
adc
btc
or
addr16
shrl
out
add
sarl
or
or
jp
rcrl
inc
fiaddl
jbe
adc
xchg
insl
sti
or
mov
or
xor
or
std
mov
lods
pop
es
aad
cmpsb
inc
fdivs
ss
dec
adc
aam
xor
ret
int3
pop
sbb
lods
inc
pop
lahf
push
scas
or
sahf
jb
out
leave
or
xchg
int
adc
sbb
sbb
add
push
addl
stos
jecxz
and
pop
jmp
inc
loop
imul
xor
jns
insl
xchg
mov
jne
fcmove
test
push
test
push
inc
xchg
clc
mov
add
sti
or
int
xor
inc
sub
or
and
inc
movsb
loop
stos
lcall
cmp
add
rcrb
cs
inc
andl
ss
int
incl
int
loopne
add
sbb
ficompl
test
inc
movsl
sub
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
je
jle
dec
adc
xor
adc
pop
pop
and
dec
mov
std
aaa
in
cs
inc
sbbb
shrb
clc
sbb
nop
lahf
push
jg
push
cld
decb
mov
pop
pop
loopne
negb
adc
enter
inc
pop
cmpsb
hlt
jp
and
aam
out
fisttpll
add
int3
sbb
movsl
popa
xchg
icebp
test
adc
and
and
ds
mov
jbe
subl
incl
fwait
lds
js
dec
mov
sbb
iret
mov
xor
pop
xlat
dec
imulb
cmp
xchg
mov
std
dec
xchg
jo
mov
call
icebp
inc
xor
sarb
fistps
fucomp
imul
pop
test
adc
xchg
sub
mov
cs
cmp
aaa
mov
aad
cltd
icebp
push
jae
add
add
fwait
inc
sahf
mov
out
outsb
insl
mov
jg
adcb
or
dec
imul
xchg
test
icebp
in
pop
dec
inc
push
cs
mov
in
inc
and
sub
lock
aas
rol
subl
dec
nop
insb
std
cld
lea
and
jg
fs
fs
out
lret
lahf
sti
sub
push
push
inc
push
xchg
sarb
gs
ret
xchg
cwtl
sub
adc
mov
jmp
fwait
sbb
fsub
jae
call
dec
xor
in
jb
dec
scas
mov
add
aad
mov
mov
xchg
sbb
lea
cmp
add
ds
dec
fiaddl
or
leave
add
xchg
push
xor
mov
sub
dec
repnz
cltd
ret
jns
stos
test
imul
mov
pop
inc
mov
and
sbb
arpl
pushf
jae
sbb
test
mov
pop
sub
and
movsb
lret
outsb
adc
lcall
fldt
push
xchg
rorl
jle
mov
adc
popf
paddb
les
popf
push
lea
jmp
into
sbb
push
rclb
jnp
mov
jb
add
adc
cmpsb
cmp
sbb
in
pop
cmc
daa
pop
int3
xor
xchg
es
push
aaa
pop
or
inc
rcll
xor
mov
and
es
aas
sub
xchg
out
test
adc
push
les
sbb
in
mov
and
scas
push
les
in
sub
mov
inc
xorb
sbb
lea
adc
inc
xchg
mov
pop
jle
subl
sub
sbb
repz
pop
dec
pop
inc
mov
iret
and
inc
mov
pop
rcll
shl
das
icebp
lods
jmp
inc
sub
stc
test
inc
push
push
mov
iret
or
insl
xchg
das
jecxz
dec
jp
out
push
pop
test
in
mov
xchg
mov
leave
iret
mov
fnstcw
mov
repz
pop
dec
fistps
xchg
sub
mov
data16
mov
add
cltd
xchg
call
and
add
cli
push
out
out
in
cwtl
xlat
lahf
mov
fadds
mov
mov
xchg
daa
pop
jnp
rcll
jo
push
jg
frstor
movsl
iret
dec
pop
push
mov
cli
inc
fistpl
cs
nop
lock
shll
mov
mov
mov
pop
inc
jo
cmp
leave
sarb
mov
and
pop
xchg
movups
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
or
adc
xor
insb
and
test
or
ss
cmp
push
mov
aas
std
ja
bound
enter
mov
sti
inc
push
sub
out
in
push
scas
sub
mov
xor
inc
xor
arpl
sbb
je
cs
scas
stos
xchg
andl
sti
sbb
and
dec
lods
pop
jo
dec
lds
push
insl
xor
mov
dec
jb
mov
test
or
js
xchg
xor
test
pop
adc
cltd
clc
dec
jno
loope
push
insb
or
jo
stc
sub
ja
test
call
adc
cli
push
add
and
adc
jp
xchg
sub
lock
scas
cmp
sbb
xor
loop
jae
movsl
cmpsl
xchg
sti
shrb
fwait
add
xor
mov
sbb
std
mov
adc
cmpl
outsb
adc
xor
lahf
and
add
xchg
add
push
mov
push
iret
ret
sub
dec
call
jmp
and
cmc
or
shr
iret
ljmp
icebp
cmpsb
xchg
movsb
in
or
inc
test
cmp
push
mov
ret
ljmp
ror
in
sub
mov
mov
pop
push
fsubp
inc
sbb
pop
sbb
pop
mov
push
aam
pop
aam
imul
mov
and
es
lret
push
xor
pop
or
xchg
imul
gs
mov
sarl
cmp
pop
iret
push
and
mov
push
jno
rcl
repz
imul
mov
mov
cmp
add
mov
dec
call
out
xor
dec
and
mov
jle
cmp
push
xor
pop
sub
outsl
mov
cmp
fstps
idivb
pop
jle
jns
into
pusha
pop
cmp
sub
pushf
mulb
je
mov
loop
jb
mov
push
mov
add
stc
lock
mov
or
xchg
insb
lods
and
jnp
mov
hlt
into
das
lods
cmpsb
sahf
add
je
scas
mov
pop
out
adc
test
sbb
ret
cmc
cmp
adc
jecxz
inc
adc
dec
add
inc
pushf
jl
into
in
sti
mov
icebp
inc
cmp
xor
es
fldcw
out
push
fdiv
cmp
es
sbbb
scas
pop
or
test
in
js
leave
std
fiadds
jo
lret
stos
cltd
jle
clc
add
jne
rorl
mov
fstl
ss
scas
add
idivl
cltd
mov
adc
popa
into
ds
aad
mov
sub
repz
insb
xchg
sti
xchg
out
inc
sbb
xor
sti
sarl
mov
lock
lds
scas
xor
mov
cmp
out
cli
int
mov
add
mov
repz
hlt
push
sbb
lcall
jecxz
subb
dec
arpl
adc
roll
ret
aad
sti
dec
mov
or
add
mov
loope
mov
lcall
push
out
fsubs
xor
mov
jnp
inc
lods
int3
daa
sar
mov
out
pop
sub
testl
jp
dec
add
dec
pop
stos
scas
movsb
repnz
push
cmpsl
lcall
mov
lea
mov
lock
cmp
hlt
leave
mov
movsl
enter
neg
call
cmp
xchg
mov
inc
insl
adc
add
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
sarb
cmp
adc
adc
adc
and
dec
aaa
dec
ret
cmpsb
jnp
fwait
mov
sbb
in
fdivr
arpl
mov
dec
cmp
in
stc
and
ds
adc
push
pop
addr16
jo
dec
xchg
in
push
sti
addr16
loop
test
mov
rcrb
loope
pop
fucomip
shr
mov
xor
pop
sub
inc
adc
enter
mov
push
mov
subl
sti
xchg
les
cs
inc
mov
pop
fadd
dec
leave
je
hlt
mov
ljmp
add
lock
or
daa
mull
mov
notb
sub
or
mov
cmp
push
pop
add
cmpl
pop
mov
pop
push
mov
aaa
into
sub
cmp
jns
out
xchg
xchg
mov
aam
mov
mov
or
rolb
adc
add
cmp
inc
push
arpl
aaa
cmp
mov
and
cwtl
nop
dec
sbb
pop
stos
mov
sbb
mov
fwait
lock
inc
xchg
dec
insb
nop
inc
pop
shl
movsb
je
pushf
shlb
pop
xorl
lahf
sarl
incl
xchg
scas
mov
xorl
test
jbe
mov
shlb
ret
mov
pop
push
cwtl
stos
push
xlat
add
dec
xor
jae
mov
orb
dec
jp
jmp
shlb
jg
in
cmc
xchg
sbb
pop
inc
xor
push
jecxz
push
xor
mov
mov
cltd
aas
repz
adc
add
in
mov
inc
repz
rcrl
add
in
into
in
cmp
push
mov
and
outsb
xor
mov
mov
pusha
stos
hlt
xor
push
cmp
xor
scas
gs
xchg
mov
js
jbe
mov
mov
fucomi
sub
ret
push
es
insb
stos
dec
jmp
in
scas
std
dec
sbb
ds
decb
xor
push
adc
jb
adc
int
aaa
jo
iret
fcomps
add
leave
jmp
cmpsl
cmp
sub
fs
imul
dec
dec
in
in
outsl
mov
loop
roll
jbe
js
fwait
andb
dec
out
cs
sahf
sbb
outsl
lods
faddl
add
and
roll
mov
or
push
xchg
adc
sub
inc
cmp
clc
out
mull
data16
pop
push
cmc
lods
xchg
cmp
xor
xchg
mov
jl
lret
mov
mov
int3
push
dec
fimull
ss
out
inc
inc
sbb
jmp
and
adc
pop
or
adc
sbb
pushf
push
push
ja
in
pop
push
cmp
gs
divb
ja
fistpl
add
adc
fsubrs
push
pusha
subl
xlat
jne
out
hlt
and
in
ficomps
fstps
rcr
dec
mov
pop
imull
and
add
xchg
pmulhuw
push
cmp
inc
pop
jp
mov
dec
mov
mov
repnz
sub
cmp
pop
popa
jb
test
inc
xor
enter
mov
jp
sbb
pop
mov
lds
ret
popa
sbb
lea
sbb
push
mov
ret
aaa
ja
xchg
inc
push
mov
nop
mov
xchg
sbb
popf
shrl
inc
lcall
bnd
mov
or
test
adc
jmp
stos
mov
xor
shl
xchg
jg
and
imul
incl
ret
std
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
sti
call
or
sbb
sbb
jp
mov
repz
iret
xor
jae
cmp
xorb
add
inc
cmpsl
or
xor
mov
mov
fs
test
hlt
jnp
xor
sahf
clc
lret
cmp
add
dec
xchg
adc
stos
repz
jne
je
mov
or
mov
mov
cli
not
lock
mov
xchg
sahf
push
pop
add
mov
dec
bound
mov
pop
repz
popa
or
pop
iret
lods
int
nop
jo
pusha
dec
jg
xchg
pop
push
shll
inc
mov
repz
pusha
aas
xor
jb
xor
mov
inc
add
out
lods
imul
ret
sub
aam
sbb
arpl
jle
std
adc
cmp
cmc
rcr
cs
jmp
sbb
sbb
dec
arpl
push
pop
ret
or
push
push
mov
xchg
or
insl
xor
aam
or
mov
fs
mov
inc
xchg
jp
cmp
cmpsb
mov
jns
cmpsb
loopne
dec
mov
push
fldpi
data16
ja
in
popa
fs
and
lods
dec
pop
sti
sar
imul
movsl
ret
cmp
movsl
in
je
sar
int3
lods
scas
das
push
mov
xchg
outsl
loopne
pop
add
xchg
pop
outsb
fs
in
shl
pop
dec
push
cmpsl
mov
push
pop
and
ja
mov
fs
lock
ret
sti
inc
std
or
push
inc
sbb
es
sti
shll
jmp
rorb
sub
or
int3
imul
mov
jbe
cld
ret
mov
aam
jno
xchg
lahf
aaa
outsb
pop
add
repnz
cmp
add
ror
sbb
add
sbb
clc
lods
push
loope
dec
test
cwtl
stos
mov
lahf
lcall
sbb
fistl
jp
sub
push
leave
pop
cmp
mov
sbb
es
push
mov
xchg
mov
mov
out
outsl
jo
mov
int3
pop
fmuls
fistl
mov
sahf
add
dec
addr16
aaa
xchg
xor
ficompl
test
ror
stos
and
bound
cli
push
pop
aam
lret
fidivl
dec
pop
xor
ret
aaa
jge
jnp
sub
in
push
movsl
cmp
fldcw
hlt
out
cmp
imulb
cld
jl
vfmaddsub132ps
lds
int
push
repz
xchg
cmp
add
sbb
jo
addb
stos
icebp
sbb
cmp
adc
cmp
xlat
adc
jmp
insl
sbb
jno
inc
inc
je
mov
scas
test
pop
mov
int3
ja
mov
fcoml
out
sub
pushf
xorl
pop
mov
or
or
fmul
shlb
cwtl
fdivrs
and
enter
mov
ds
out
mov
sub
push
mov
jne
mov
cmp
cld
rolb
adc
int3
xor
add
loope
push
into
iret
lods
sbb
data16
lahf
push
or
addr16
mov
mov
xchg
xor
mov
sahf
aam
cwtl
fucompp
or
arpl
mov
addr16
mov
xchg
out
jbe
push
sbb
outsb
lahf
mov
add
or
mov
push
mov
xlat
sub
push
arpl
adc
fstps
pop
vandnps
sbb
dec
int
pop
xchg
and
jg
xchg
lcall
incb
mov
notb
and
sub
test
lret
mov
shrd
xor
jmp
mov
popa
lcall
fsubr
jle
sub
adc
adc
adc
iret
jmp
or
test
jnp
or
out
push
cltd
call
mov
jge
jo
in
push
add
arpl
and
dec
xor
xchg
pop
jp
movsl
cs
cmp
adc
aaa
mov
ljmp
jbe
xchg
sub
adc
mov
vshufps
inc
scas
sbb
jae
cmpsl
outsb
push
dec
fimuls
lret
mov
mov
cltd
dec
sbbl
cmp
inc
popf
push
or
stos
cmp
jp
mov
or
fs
xchg
pop
in
addr16
movsl
push
sbb
xchg
sahf
pop
call
dec
aaa
jae
pop
adc
pop
push
pushf
mov
cmc
sub
fs
mov
dec
subb
push
daa
fs
lret
stos
inc
andb
pop
adc
es
sub
sub
xlat
xchg
into
add
lds
jge
adc
push
cs
in
mov
test
scas
push
popa
mov
addr16
stc
lea
mov
xchg
xor
pop
push
lret
dec
xor
inc
xchg
lea
dec
or
out
jmp
popf
mov
pop
pop
jl
sti
test
test
lcall
sbb
inc
xor
cmpb
movsl
or
mov
fadds
pop
dec
pop
les
push
dec
repz
fisttpll
dec
lcall
dec
pop
sub
sub
sbb
repz
add
loopne
loope
dec
in
inc
sarl
add
arpl
sub
addb
mov
repz
shl
inc
lcall
add
mov
aam
mov
lahf
imul
cld
cltd
popa
cmc
jecxz
sbb
ret
mov
mov
daa
fistl
sub
stc
inc
cmc
inc
movsl
and
jae
sub
and
mov
jge
cmp
or
dec
mov
cmp
in
pop
or
iretw
jbe
xorl
ja
jae
je
mov
sub
mov
xor
mov
cmp
in
icebp
pop
pusha
imul
loopne
push
and
mov
int
clc
add
cmp
jl
icebp
outsb
ja,pt
pushf
mov
into
cmp
aad
mov
inc
ljmp
mov
repz
inc
add
test
mov
inc
push
mov
lret
mov
mov
sbb
cli
test
and
repz
sub
imul
addr16
pop
mov
xchg
push
stos
rcll
push
push
mov
es
iret
lahf
or
insb
ds
mov
jmp
stos
jg
jae
push
push
or
dec
pmaxsw
lcall
push
dec
mov
cs
add
shll
xor
xchg
lahf
xor
pop
imul
repz
loopne
xor
fwait
push
test
pop
daa
mov
testb
test
scas
jp
xlat
test
inc
pop
loope
or
add
lret
and
hlt
fists
sti
sub
ret
push
xor
cmpsb
adc
pop
mov
lahf
std
inc
std
lret
adc
popf
xor
fistl
adc
inc
in
xor
jne
js
outsb
stos
mov
rolb
mov
fdivrl
fcomi
add
mov
les
jmp
add
mov
jle
dec
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
test
insb
int
adc
fmull
adc
sub
loope
sbb
push
pop
cld
pop
jp
faddp
or
cmp
loopne
movsb
popf
add
mov
sub
xchg
xlat
dec
pop
jo
imul
jns
les
and
pop
xchg
or
jb
inc
cmp
repz
scas
cmp
cwtl
sbb
xor
lahf
jecxz
mov
lret
xchg
dec
xlat
jle
mov
push
andb
push
lret
lcall
imul
nop
stos
dec
mov
cmp
int
out
push
aam
lcall
inc
daa
leave
loopne
inc
jg
das
mov
test
and
inc
mov
lods
ret
mov
enter
lahf
out
rcll
fisubs
lods
jae
mov
xor
sub
pop
mov
jne
ljmp
in
sbb
in
jbe
pop
cmp
sub
sub
lea
dec
cmp
mov
cmp
repnz
adc
push
repnz
add
cmpsl
inc
cmp
test
mov
popf
in
jbe
movsb
enter
xor
pop
loopne
repnz
test
jbe
cmpsl
repnz
and
lods
ret
dec
js
gs
inc
push
push
test
dec
out
enter
inc
outsl
fadds
mov
rcrb
mov
lea
into
fcomps
dec
inc
lods
push
test
push
sbb
jl
pop
push
cld
js
mov
sub
insb
addl
nop
push
popf
cmpsl
or
cld
mov
jne
sub
aam
insl
push
jle
lcall
mov
sub
mov
dec
sbb
adc
xchg
scas
bound
enter
jae
pusha
sbbl
jbe
ljmp
shlb
xchg
test
sbb
jae
test
test
cli
xor
sub
sbb
jbe
clc
and
sub
sub
xchg
xorb
inc
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
push
rcrl
mov
fmull
adc
call
pop
push
mov
pop
xor
push
jno
mov
mov
fldt
lret
mov
cs
lret
mov
mov
xor
repnz
dec
fidivrs
fildl
xor
sar
push
cs
aam
inc
sub
dec
test
test
sbb
bound
dec
into
xor
adc
scas
mov
jb
mov
or
mov
push
inc
push
cmp
mov
scas
and
pop
or
bound
lods
es
shll
dec
lea
mov
push
into
icebp
jo
adc
push
mov
das
addr16
or
mov
adcl
stc
das
mov
xor
les
mov
es
mov
push
mov
fcmovu
icebp
xchg
fistl
notl
pop
mov
mov
movsl
outsl
pmullw
mov
push
sbb
add
jne
sbb
outsl
adc
adc
jp
mov
hlt
push
test
das
scas
movsl
dec
test
push
ret
sub
mov
out
mov
add
or
jge
xor
lcall
mov
dec
testb
push
jnp
imul
or
jmp
ret
fs
cmpsl
xchg
pop
mov
push
test
mov
enter
push
ds
add
stos
add
lock
jne
sti
in
ds
popa
pop
adc
dec
xchg
dec
jns
stc
adc
pop
lret
xchg
repnz
call
xchg
pop
add
jb
sub
fsubr
popf
and
les
jg
inc
pop
or
add
aad
aam
imul
loope
mov
jmp
call
lods
lock
out
arpl
lcall
bound
lods
add
mov
push
pop
dec
jbe
into
clc
mov
stos
dec
mov
dec
mov
xor
stos
sub
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
dec
sbb
fmull
adc
pop
std
call
adc
push
inc
movsb
cwtl
cwtl
cmp
mov
das
cmp
add
ret
jmp
jno
fcompl
jbe
subb
mov
mov
sbb
cmpsb
dec
pop
jb
pusha
in
sarb
mov
scas
daa
stc
or
imulb
sbb
std
loope
adc
lret
cmpsb
aaa
sbb
sbb
sub
dec
xchg
jle
leave
jae
cmp
mov
ja
mov
mov
stos
sub
cmpsl
jmp
jmp
lods
mov
pusha
mov
and
popa
sbb
punpckhwd
push
gs
jge
mov
push
out
rolb
mov
push
sahf
add
inc
xor
out
pushf
xchg
icebp
dec
mov
push
sarb
adc
push
cmp
mov
fwait
enter
mov
pop
stos
stc
pop
lods
std
nop
daa
and
lret
repz
jbe
xchg
fmuls
aam
fisttpll
fwait
pop
ja
fnstenv
xor
sbb
enter
shrb
std
out
sbb
dec
in
nop
dec
adc
pop
cmp
mov
push
or
cmp
cs
imul
jmp
test
mov
nop
xchg
divl
movb
bound
mov
sub
jecxz
and
stos
xchg
sti
ja
dec
dec
packsswb
sbb
cmp
clc
mov
insb
mov
lods
sarl
ljmp
test
stos
incb
mov
out
pop
mov
add
sub
or
pop
cmp
int3
jae
cmp
mov
outsl
sahf
jo
mov
push
cltd
dec
dec
mov
ret
adc
push
testl
dec
adc
cmc
sbb
mov
iret
lods
repnz
adc
leave
popf
adc
mov
mov
xor
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
fisubl
adc
adc
movlps
loope
out
push
jp
loope
jle
js
lea
outsb
sbb
hlt
bound
cmovle
jecxz
aam
push
popf
pop
mov
dec
xchg
pop
ja
or
push
inc
movsl
jbe
shrl
fsubrs
xor
std
jo
pop
fdivrl
mov
fstpl
icebp
jno
and
dec
sbb
je
and
add
inc
decb
repz
push
adc
push
jno
outsl
es
cwtl
and
hlt
pop
cld
dec
xchg
outsb
sub
adc
jg
or
into
pop
pusha
dec
test
pop
push
ja
aas
xor
jns
sahf
pop
mov
test
mov
push
repz
sti
iret
push
and
mov
and
in
pop
pusha
xor
mov
cmp
adcb
pop
sbb
inc
cmp
inc
scas
cli
sbb
loop
rclb
pusha
sbb
lds
or
adc
mov
jp
scas
mov
int
cmp
fucom
in
addr16
mov
in
ss
dec
jne
and
ret
fwait
in
xor
in
and
cld
mov
mov
add
push
cli
or
es
dec
add
cmp
in
iret
aaa
cmp
push
cmp
inc
jne
sti
pop
lods
je
mov
lcall
push
sahf
pop
and
subb
testb
ret
and
cmp
sti
mov
jnp
push
or
xchg
enter
sbb
lahf
jns
dec
roll
and
mov
insl
adc
addr16
mov
dec
in
call
int
lock
push
in
jge
inc
aam
das
es
insb
add
shrb
and
rcrl
loop
xchg
push
mov
cmovbe
test
sahf
test
in
sbbl
mov
push
jne
pop
mov
out
lock
int
dec
lods
push
cmp
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
mov
jle
adc
adc
movlps
adcb
jmp
lret
pop
addr16
pop
mov
jb
or
xchg
push
fiaddl
mov
cld
mov
mov
ss
cmp
push
mov
inc
xchg
imul
inc
test
xor
int
fstl
ror
and
mov
leave
sub
fdivp
sbb
movb
xchg
ljmp
call
pusha
add
jge
pushf
jmp
out
popf
mov
lahf
jbe
and
icebp
push
jmp
or
or
call
inc
push
jnp
add
dec
fsubl
std
inc
pop
js
push
pop
ljmp
insb
sahf
es
sahf
js
push
jmp
dec
and
mov
loopne
xor
mov
int3
ficomps
jle
mov
mov
sub
xchg
mov
scas
inc
dec
rcrl
inc
ret
jecxz
mov
je
add
cmp
xorl
adc
dec
mov
imul
jmp
enter
jo
xor
mov
mov
mov
pop
mov
sub
mov
mov
jne
icebp
and
adc
and
xor
int3
xchg
cltd
push
xor
sub
es
js
and
cs
pop
in
and
lret
mov
fidivrs
push
test
rclb
das
add
les
lret
xor
inc
in
pop
adc
sbb
pop
sbb
mov
dec
adc
mov
sub
sub
mov
inc
pop
lock
mov
mov
inc
jge
aaa
lds
js
les
sbb
fldcw
leave
jns
test
jp
pop
and
push
sbb
gs
bound
inc
out
mov
pop
inc
in
fsubrl
sbb
aad
sub
js
cmp
mov
push
xlat
lret
jnp
mov
popa
dec
ljmp
jnp,pt
ret
jecxz
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
jb
mov
cmp
inc
sahf
lahf
cmpsl
ja
inc
xchg
mov
and
clc
mov
out
xor
mov
push
fcmovbe
stc
mov
mov
lret
rcrl
pop
mov
fisubrl
xor
inc
ficomps
adc
in
cmp
lods
cmp
js
add
aaa
sub
nop
lahf
fdivr
aam
inc
idiv
dec
pop
jno
loope
xchg
gs
add
mov
pop
or
rorl
and
in
xchg
popa
scas
scas
leave
push
and
stos
lcall
popa
cmp
js
popa
nop
pop
aaa
fildl
push
xchg
call
mov
sahf
lods
les
idivb
jge
pop
aaa
cltd
dec
adc
pop
add
cmp
jmp
loop
pop
std
dec
jo
hlt
dec
jnp
xchg
sub
push
cwtl
push
stc
enter
imul
dec
fadds
and
insl
pop
jnp
xor
js
ljmp
xor
out
xor
aas
loop
mov
gs
cmpsl
jnp
adc
leave
pop
xchg
mov
fistpll
jg
hlt
shll
pop
sbbb
fsts
nop
lret
sub
sbb
adc
mov
cmp
into
frstors
inc
in
cmpsb
mov
mov
movb
insl
and
out
adc
xor
adc
sti
lret
ret
push
pop
xchg
lret
int
jb
scas
cld
andl
mov
mov
sbb
push
ja
fldcw
repz
xlat
xor
jge
cwtl
dec
xor
outsl
add
push
adc
xlat
int3
jmp
mov
adc
fildll
es
push
mov
mov
lret
iret
ljmp
and
shrb
add
pop
imulb
mov
jae
repnz
cmpsl
into
inc
loopne
cld
pop
xor
dec
jmp
cmp
call
xor
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
lods
jle,pn
or
adc
movlps
push
adc
popa
sahf
ljmp
push
lock
adc
mov
aas
mov
sub
cwtl
push
into
arpl
ljmp
xor
scas
jecxz
sub
mov
mov
cmp
mov
xor
test
or
stos
jbe
adcb
add
pop
lret
mov
les
cmpsb
lds
inc
out
and
sub
jg
rol
out
shll
or
jl
nop
fstpt
adc
mov
sub
cs
frstpm(287
jnp
and
out
push
mov
or
xchg
sahf
jmp
shrl
push
imul
adcl
sbb
add
rol
or
inc
mov
fiadds
add
adc
mov
pop
inc
shlb
outsb
insb
outsl
in
imul
sahf
inc
adc
xchg
bnd
jno
jno
mov
or
imul
jle
jl
xchg
dec
cli
push
bound
push
aam
into
mov
mov
xchg
ds
mov
push
ret
sbb
mov
pushl
pushf
xchg
inc
inc
xchg
loope
jmp
mov
test
test
inc
popf
shrd
fildl
cmc
add
sahf
iret
daa
sub
xor
arpl
stos
adc
push
xor
dec
aam
pop
into
push
rcr
inc
test
lea
fidivrs
inc
andb
inc
fistpll
pop
imul
mov
xor
xchg
and
and
sbb
cmp
inc
or
test
leave
jb
mov
scas
sub
jg
flds
adcl
idivl
insl
imul
jns
stc
iret
ds
and
mov
mov
out
jnp
pop
sub
and
mov
xor
push
add
xchg
jne
mov
roll
jnp
jbe
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
xlat
mov
xor
mov
push
inc
or
movsl
jecxz
jbe
dec
mov
xlat
aad
pop
mov
ljmp
adc
sub
repnz
pushf
xchg
fcomps
mov
dec
int3
lcall
mov
inc
jle
xchg
jl
inc
push
int3
or
cs
mov
inc
in
pusha
jnp
mov
fwait
xchg
sbb
nop
add
shll
mov
sbb
add
push
ja
and
sbb
sahf
fwait
popa
dec
cs
jecxz
stos
ja
jle
test
rcrl
xchg
cmp
punpckhwd
mov
xchg
insb
int
xor
test
mov
cmp
mov
scas
pop
xchg
xlat
out
jbe
ret
test
or
out
and
stos
pop
sub
push
dec
inc
lret
cwtl
or
and
mov
xor
pop
sbb
xor
xor
stos
ss
mov
xor
add
jno
movsl
roll
lahf
in
loope
xchg
lds
enter
sub
add
fbld
cmp
test
fists
popf
jbe
jo
sbb
add
dec
push
popf
mov
mov
sub
mov
xchg
scas
icebp
jle
rcrl
pop
fistl
mov
aam
in
out
sub
sbb
inc
lcall
jno
mov
mov
pop
pop
mov
jo
roll
jecxz
sti
fstl
in
out
popa
mov
lds
mov
lahf
sbb
cmc
lods
clc
push
dec
repnz
or
sbb
fs
mov
xchg
lahf
lods
stos
xchg
cmp
popa
dec
cmp
pop
pop
pop
ret
fdivr
icebp
sbb
ret
mov
fimull
mov
adc
mov
js
inc
sub
mov
lret
into
pop
mov
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
dec
int3
jnp
divb
jg
mov
and
sti
dec
in
or
adc
es
jns
rcr
add
sbb
mov
and
jbe
mov
and
pop
filds
sub
sub
push
scas
fnstsw
lods
testl
das
inc
and
add
cmpsb
inc
int
pop
rcl
insb
fistps
inc
cmp
aaa
stos
rolb
adc
lock
push
lds
cmpsl
setb
scas
sbb
fnstsw
mov
es
cmp
loope
movsl
pop
mov
nop
pop
inc
dec
jne
orl
cs
cmc
sbb
dec
sti
and
popf
and
push
test
into
add
movsb
lods
sbb
inc
imul
fs
cmp
mov
dec
movsl
xchg
dec
ficomps
mov
adc
in
aad
push
sub
mov
lods
and
sbb
addr16
mov
jb
mov
lret
out
nop
mov
int
fwait
inc
lret
push
cmp
repnz
sub
loopne
movb
dec
xchg
xchg
pusha
mov
mov
push
inc
imul
sti
mov
mov
mov
gs
mov
das
aaa
jg
xor
neg
lds
cli
push
fnstcw
bound
inc
fs
popa
inc
jb
repnz
pop
sub
leave
popf
imul
push
pop
xorb
xor
push
cmpsb
mov
shl
clc
add
ret
lods
sub
popa
dec
clc
sub
imul
aad
pop
inc
push
insb
adc
and
add
adc
cmp
les
xchg
sbb
pop
scas
aas
mov
xchg
fbld
dec
add
adc
jl
out
mov
inc
push
push
loope
test
push
das
pop
lds
inc
aas
sub
repnz
sbb
popf
sub
mov
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
in
or
fmull
adc
pop
addb
jae
aas
aad
notl
dec
xchg
ja
enter
idiv
xor
cmp
cli
add
xor
iret
pop
lahf
out
and
cmc
aad
repz
jno
in
cltd
mov
enter
ja
pusha
cmp
cmc
test
cmpsb
addl
mov
lahf
inc
xchg
mov
inc
outsb
roll
inc
sub
hlt
mov
sbb
sbbl
loopne
cld
cmp
aam
stos
cmp
sbb
loop
lret
pop
outsb
mov
aam
sar
arpl
cmp
dec
cmp
mov
icebp
inc
inc
call
popa
cmp
and
mov
popa
loope
push
cmp
in
or
rorl
push
jecxz
mov
outsl
insl
pop
in
mov
fstpl
or
call
out
jae
mov
dec
push
dec
lods
mov
sbb
dec
cmp
cmpsl
les
fnsave
loop
xchg
addr16
imul
and
test
mov
mov
out
lahf
ja
xor
jbe
sub
ret
cmp
mov
ret
cs
lods
cmp
pop
enter
mov
pushf
jo
clc
inc
dec
mov
or
pop
cmp
int
daa
push
or
mov
andb
push
aaa
sbb
popf
cltd
mov
sbb
scas
fst
and
sti
push
adc
xor
push
popf
or
push
push
movsl
and
jge
add
sbb
mov
out
ds
lock
push
fimull
fbstp
xchg
pop
nop
inc
mov
dec
pushf
dec
or
lahf
stos
call
cmp
inc
or
inc
inc
inc
daa
push
push
cmc
loopne
xchg
mov
lods
sub
mov
and
jle
mov
push
loopne
push
push
in
lret
pop
clc
adc
jae
xor
dec
mov
call
mov
cltd
push
mov
ja
arpl
out
add
in
or
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
jb
icebp
stos
popf
cli
adc
fmull
adc
outsl
mov
and
cld
xchg
fwait
scas
fbstp
cmp
sbbb
es
cld
xchg
xor
ja
ret
push
dec
mov
xchg
push
insb
ja
insb
fidivrl
loop
dec
movsl
or
mov
mov
and
rolb
ret
imul
dec
jecxz
mov
orl
add
leave
std
in
xlat
sbbl
push
mov
xor
mov
mov
lret
aas
mov
shll
pop
movb
jo
or
jne
fcomps
out
add
xor
sti
jp
mov
icebp
lods
notb
js
sbb
gs
stos
adc
les
mov
inc
pop
jns
ljmp
sbb
xlat
loope
sub
jo
add
idivl
xlat
xchg
arpl
dec
popf
addb
cltd
sub
jb
clts
jno
fsubrs
cmp
cmp
inc
test
sbbb
je
xchg
in
test
push
inc
mov
cli
ss
push
mov
cwtl
ret
daa
sbb
ds
cmp
xor
lods
dec
aam
jne
inc
mov
push
enter
nop
lret
adc
movsb
jl
xor
int
mov
leave
jecxz
adc
mov
les
ret
mov
mov
or
adc
jnp
mov
cmpb
or
decl
push
push
adc
cmp
add
cmpsb
lods
or
stos
icebp
jns
fisubs
mov
test
js
cmpsl
push
xchg
lcall
mov
pop
stc
inc
loopne
repz
xor
jmp
fxch
aad
mov
dec
sarl
cmp
lea
pop
sbb
and
mov
jg
std
adc
xchg
mov
decl
mov
les
into
insb
ds
leave
jb
and
add
add
les
sbb
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
add
notb
adc
movlps
mov
add
cwtl
scas
jo
imul
les
mov
psllq
aad
push
mov
mov
mov
pop
dec
js
test
pop
sbb
repz
out
and
dec
add
xor
clc
add
inc
cmpsl
sahf
fldl
add
fiadds
push
and
scas
pushf
test
sahf
sbb
test
dec
cwtl
repnz
and
xchg
je
or
loopne
or
aas
push
sub
adc
sub
outsb
test
ja
mov
lcall
jb
es
add
mov
inc
aad
push
xor
jb
jo
aad
mov
jmp
xchg
inc
jno
mov
mov
roll
cmc
sub
cltd
scas
cmp
inc
daa
jmp
aam
test
and
and
jge
jo
lret
pop
stos
sub
inc
nop
ffree
pop
and
gs
stos
cmc
popf
mov
sbb
or
test
std
imul
cmpsl
loope
xchg
xchg
dec
xor
bound
in
inc
pop
pop
inc
cmpsb
xor
sbb
stos
aas
jo
xor
lods
imul
mov
movb
push
mov
je
jecxz
mov
jbe
lret
sbbl
stos
sub
neg
outsl
sbb
ja
mul
in
test
mov
jle
hlt
shll
sahf
in
mov
movl
dec
rclb
divl
mov
mov
stos
addr16
inc
das
jecxz
pop
push
inc
lds
jb
sbb
rol
cmp
lcall
sub
ret
dec
inc
dec
maskmovq
negl
imul
popa
and
or
mov
xor
repz
fsubs
leave
insl
push
xchg
insl
je
aas
mov
cld
and
in
add
mov
imul
adc
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
ret
out
mov
dec
xor
popa
mov
lret
out
sbb
sti
out
lds
rcl
nop
repz
nop
popf
sbb
cld
and
dec
adc
rcrb
pop
loop
add
pop
cltd
arpl
pop
ret
and
dec
ret
addr16
pop
lahf
call
jns
add
dec
jo
scas
cltd
push
out
inc
add
js
xchg
mov
cmp
pop
out
lret
pop
cmp
jp
out
pusha
pop
and
js
cltd
dec
sub
mov
sub
aam
loope
popa
dec
jnp
mov
insb
push
push
pushf
sub
hlt
jecxz
outsl
dec
adc
mov
add
lods
xorb
aam
mov
mov
popf
cld
ja
outsb
mov
adcl
loopne
mov
lcall
ret
mov
dec
rclb
shrl
in
testl
mov
add
push
xchg
imul
stos
mov
mov
daa
cmp
mov
roll
push
popl
aad
ret
movb
fadd
mov
dec
js
mov
add
lret
lret
testb
shll
xor
ret
push
dec
push
fs
aad
cwtl
pop
insl
sbb
lds
aaa
dec
or
pop
cmpsb
cwtl
subl
and
mov
repz
push
sub
mov
inc
sbb
xchg
push
cld
dec
jge
rcrl
sub
mov
xchg
pop
or
inc
hlt
sbb
xchg
xor
dec
push
lods
push
mov
sbb
push
xor
loop
jl
sub
sbb
fstp
hlt
or
rclb
cmp
jo
fisttpll
pop
cmp
mov
pop
aam
and
cli
out
sub
or
rorl
cmp
lea
inc
cltd
push
mov
xor
les
mov
scas
out
fprem
insb
fstpl
jecxz
mov
xor
inc
das
mov
and
cmp
repz
les
sbb
stos
or
jbe
jo
sub
add
xlat
aaa
adc
mov
int3
ret
xorb
iret
loop
pop
bndstx
jle
inc
dec
sahf
mov
shll
mov
data16
out
call
shr
arpl
push
xor
push
andb
push
ficompl
stos
sub
mov
loop
pop
mov
push
mov
adc
or
divl
dec
cwtl
mov
mov
xchg
inc
outsl
adc
lds
ret
jae
adc
movsb
jbe
cmp
arpl
popf
callw
lcall
cld
jns
es
jl
cmp
pop
or
sahf
stos
mov
and
jno
popa
into
ret
mov
test
mov
jns
sbb
movsb
movsl
mov
leave
test
adc
sahf
mov
sub
cmp
call
ss
rorl
pop
push
inc
inc
stc
movsl
andl
xchg
and
pop
mov
repnz
aaa
pushf
sub
mov
gs
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
scas
pushf
lods
mov
adc
jo
adc
pop
push
xor
inc
inc
jp
cld
mov
neg
daa
lahf
adc
cmp
int3
mov
fstps
cmp
adc
xor
inc
adc
outsb
nop
loop
and
push
mov
imul
call
sub
out
adc
jno
dec
data16
rol
es
push
imul
fcmovnbe
test
mov
mov
push
test
cwtl
int
xchg
lock
dec
out
sub
test
mov
lahf
in
fstpl
cmp
test
aaa
sub
out
lcall
xlat
lret
outsb
inc
inc
movsl
and
fwait
xor
clc
jb
aaa
setle
jp
mov
mov
hlt
cmpsb
mov
lock
int3
push
loop
pop
add
jno
add
and
gs
pop
test
ljmp
gs
pop
fnstsw
pushf
enter
dec
xor
push
sub
mov
xor
cli
lods
repz
lods
jns
aad
repnz
nop
sub
insb
mov
add
sbb
inc
sbb
jnp
push
clc
or
fs
jbe
lea
add
movsl
rcll
loop
stc
insl
jne
cmp
dec
add
adc
fs
and
mov
ss
sub
dec
push
int3
sbb
jg
xor
int3
mov
or
pop
sbb
and
mov
and
outsb
lea
cs
pop
movl
int3
popa
rorl
sbb
xchg
push
call
cmc
movsl
mov
loop
mov
inc
xchg
add
mov
rcrl
xor
sbb
add
ja
mov
fisubrs
mov
mov
in
push
dec
add
push
stos
push
xchg
insl
push
dec
std
iret
aas
pusha
sbb
fidivs
addr16
mov
lahf
test
sub
mov
mov
cli
push
stc
cmc
stos
xor
mov
add
stos
pop
dec
mov
out
ljmp
inc
mov
mov
or
xchg
ja
fnstsw
dec
sub
sbb
cmp
popf
dec
cmp
lods
sub
xor
ret
jnp
mov
imul
rcll
addr16
mov
ret
push
cmp
nop
cmc
testl
rcrb
mov
jnp
daa
xlat
xor
xchg
sub
jl
lcall
add
xlat
mov
or
fnstcw
mov
orb
pop
lahf
sti
nop
ss
jb
lret
cwtl
xchg
int
lret
es
imul
xchg
or
inc
in
pop
push
jle
adc
mov
jo
push
cmp
orl
cli
mov
sbb
jp
jb
mov
xor
add
daa
add
shrl
inc
lcall
lock
add
inc
ja
repz
pop
mov
ljmp
inc
mov
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
out
stos
in
adc
jo
adc
js
lods
sbb
je
cmp
ret
outsl
icebp
sub
shll
stos
xlat
mov
ret
xchg
mov
push
adc
je
add
mov
hlt
ja
push
iret
lea
sub
es
or
aad
popa
icebp
jbe
mov
inc
hlt
jmp
ret
cmp
xor
push
xchg
push
ds
mov
inc
cs
mov
test
ret
fnstenv
jg
or
dec
je
iret
mov
push
imul
xor
push
aas
push
fisttps
mov
jle
lret
jbe
sub
aas
loop
mov
sub
push
int
inc
cmc
repnz
push
stc
and
or
lahf
iret
mov
adc
add
test
pop
bound
pop
mov
fildl
out
es
xor
dec
decl
adcl
push
mov
arpl
ja
xchg
xchg
bnd
movsl
les
and
int
cmpb
into
xchg
into
ja
add
xor
lret
and
rorl
aas
dec
shlb
inc
add
or
insl
sbb
cltd
mov
push
in
xchg
icebp
fstpt
cmpsl
push
outsb
jbe
xor
das
inc
lahf
pop
sbb
out
popf
and
call
fldenv
sub
adc
ret
xchg
xchg
dec
sti
lock
pop
stc
insl
addr16
imul
add
or
xor
sub
cmp
int
lea
jae
cltd
rdpmc
cld
loope
int3
insl
dec
mov
ror
shll
mov
or
cmc
xchg
in
sub
mov
jae
inc
sti
sbb
cli
or
in
mov
inc
fwait
mov
int3
mov
call
negb
test
sti
pop
mov
push
rcrb
vmovmskps
push
pop
adc
jl
jbe
shll
stos
mov
or
repz
push
mov
arpl
mov
ljmp
push
test
xor
dec
fsubl
mov
jne
lods
and
jge
aas
stos
or
push
fcoms
cmc
rclb
add
aaa
pop
test
lcall
jnp
jle
rolb
jnp
mov
aas
xor
mov
xchg
popf
test
mov
sbb
adc
cmp
ja
popa
insl
out
and
in
push
iret
pop
dec
mov
inc
sub
cmpsb
inc
and
jno
sub
insl
rorl
pushf
and
cwtl
sub
daa
pop
ss
in
das
and
aad
add
inc
lahf
into
clc
mov
mov
jge
xchg
test
xchg
int
sbb
mov
ss
jge
lods
outsb
fnstenv
xchg
add
pop
push
in
mov
xchg
test
mov
je
stos
mov
iret
adcb
xor
loope
fldenv
movsb
adc
xchg
xor
lods
xchg
mov
mov
or
push
mov
in
mov
sbbl
in
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
mov
mov
jo
adc
fmul
sti
call
fs
lods
jb
shll
int3
inc
ss
scas
loope
and
or
cmp
sub
jmp
xor
loope
dec
xchg
je
in
gs
stos
cmpsl
jmp
add
ss
inc
jnp
and
sub
pop
xchg
xchg
jmp
scas
scas
push
jge
inc
and
je
sbb
jge
cmp
cld
repz
lock
sarb
pop
insb
xlat
xchg
sub
insb
sub
inc
iret
aad
arpl
mov
add
popf
ss
push
sub
test
pop
xor
mov
sbb
bound
leave
mov
shlb
xlat
dec
int3
adc
stc
mov
shl
sbb
or
das
jbe
pusha
adc
fucom
pop
mov
fwait
shrb
int
mov
ds
jecxz
iret
pop
cwtl
jo
pushf
mov
mull
lcall
push
int3
pop
xchg
fmull
fsts
std
jmp
popfw
push
xor
xor
sub
mov
jnp
bound
cmp
repnz
push
aaa
fidivrl
pop
lods
lahf
out
lahf
or
rcrb
lea
mov
sbb
pop
lods
pop
stos
lret
or
jno
add
adc
adc
pop
mov
adc
cmp
mov
scas
mov
ds
adc
insb
sbb
into
jns
dec
clc
sub
push
push
pop
and
adc
cli
pop
xchg
in
fsubs
lds
adcb
mov
mov
inc
mov
jp
rol
data16
movsw
xchg
mov
lret
push
fimull
out
jns
jl
subb
imul
aaa
jo
cs
pop
lret
imul
push
in
sbb
gs
and
mov
mov
fs
fisubs
lods
inc
sub
sti
test
mov
xchg
scas
call
faddp
divl
or
cmc
fidivrl
div
mov
jo
xor
sahf
les
sbb
out
push
sbb
xor
shll
push
pop
and
xor
outsl
mov
cmpsb
mov
fidivl
fists
out
adc
cmp
stos
test
vmaxsd
sti
or
lret
lahf
daa
mov
movsb
adc
jl
jmp
das
mov
and
mov
cmp
xchg
jmp
std
ret
rolb
rorb
mov
xchg
add
js
dec
loop
in
cmp
lds
outsl
dec
arpl
and
and
out
mov
cmpsb
mov
sahf
sbb
sub
stc
xlat
fstpt
mov
loopne
add
mov
push
imull
nop
pushf
xor
fstps
scas
pop
jmp
lods
jns
xchg
sbb
clc
push
mov
push
not
cmp
out
push
je
dec
pop
addr16
mov
jne
push
mov
enter
push
ret
arpl
cmp
xchg
mov
and
test
lcall
bound
lcall
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
icebp
pusha
nop
js
aad
adc
adc
jno
sbb
cmp
lds
mov
push
ja
in
mov
pusha
out
xchg
mov
push
push
xor
mov
dec
jne
push
je
rol
cmp
addr16
cmpsl
aad
xor
dec
stos
lcall
fdivl
rcll
ret
or
fcoml
xchg
enter
and
mov
mov
out
gs
hlt
rolb
mov
pop
sbb
test
fnsave
pusha
adc
clc
push
push
sahf
add
mov
add
aam
pushf
clc
and
leave
dec
cmpb
sbb
lret
dec
pop
ficompl
lahf
popf
add
out
mov
imull
into
jmp
mov
sahf
jg
and
mov
push
fdivrp
jbe
inc
pop
lds
push
add
and
xchg
fstpl
rorb
jno
mov
sub
jl
cli
xchg
popa
inc
add
jecxz
xor
pop
push
addb
mov
into
or
push
ljmp
sarl
jg
mov
fdivr
xor
sub
xchg
nop
leave
push
mov
dec
xorb
or
sti
outsl
shll
xor
or
adc
rorl
cmp
xor
in
jecxz
push
jo
imul
ret
and
mov
and
ljmp
cmp
lret
adc
xchg
imulb
pusha
fwait
push
push
call
jnp
push
sahf
fs
jne
xor
and
loopne
orl
add
pop
rolb
in
insl
pand
fcmovnbe
xor
push
fwait
pop
stos
pushf
mov
fmulp
popa
out
pop
sbb
cmpsl
pusha
or
cmpsl
mov
sbb
push
out
fiadds
dec
mov
xorl
jecxz
or
cltd
mov
mov
bound
fisubl
xchg
add
add
mov
cmp
clc
jp
scas
rcrl
cmp
jno
inc
or
loope
fstl
xchg
in
lock
and
popa
jb
scas
orl
xor
ret
mov
mov
add
jge
pop
shrb
lea
add
adc
jp
jns
shrb
data16
fmulp
roll
cmpsb
out
dec
sbb
incb
cmpsl
pop
mov
xchg
cs
gs
fwait
adc
mov
mov
addr16
sbbl
les
in
movsl
out
inc
pop
or
cmp
mov
movsl
mov
pop
mov
in
xchg
les
subb
insb
mov
pusha
dec
push
xchg
xor
out
outsl
in
jg
arpl
aaa
xchg
adc
loopne
into
rcrl
in
push
jae
and
int3
in
xor
lcall
pop
and
ljmp
sbb
mov
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
jnp
enter
adc
jo
adc
mov
cmp
lea
or
jl
int
das
mov
imul
xor
adc
cs
es
pop
stos
xor
fistpll
pop
ja
jb
add
and
notl
xor
push
fimull
aam
mov
and
sbb
movsb
les
xor
cmc
xchg
aaa
cld
push
add
mov
push
cmp
in
mov
cld
pop
xchg
adc
jge
scas
inc
mov
out
mov
adc
jo
lahf
fstpl
sahf
and
mul
push
push
stos
xchg
xchg
adc
xchg
addr16
aaa
out
mov
aam
sub
adc
dec
jle
cmp
push
pop
popf
fcoml
clc
xchg
jmp
roll
addb
addr16
push
mov
xor
push
sbb
inc
cmp
int
push
in
mov
shlb
and
push
call
push
push
out
or
push
les
gs
mov
jae
cmpsb
mov
test
out
mov
loopne
cmp
lahf
sbb
mov
in
add
jmp
into
cmp
outsl
pop
pop
out
loopne
push
pop
sahf
pop
mov
dec
sub
aaa
in
adcl
cmp
fisubrs
imul
int
loope
push
aad
ss
push
pop
insl
ror
sbb
mov
push
fwait
push
cli
test
mov
inc
jl
orl
add
adc
call
fisubl
insb
leave
mov
push
jnp
inc
ds
dec
cld
movsl
out
movsb
stc
scas
push
adc
inc
mov
mov
int3
icebp
sahf
ljmp
inc
adc
mov
and
xor
aad
adc
test
ret
mov
cmpsb
pop
xor
pop
stos
lret
popa
mov
stos
dec
out
js
mov
sbb
sub
cmp
leave
push
inc
fcompl
add
add
sbb
aad
jae
and
mov
fiaddl
xor
lahf
mov
es
inc
sbb
ja
lods
gs
pop
rcll
cmp
xchg
movsb
mov
jb
movsl
jae
in
fcmovnb
xor
add
pop
cmpsl
mov
mov
push
ret
mov
lods
or
inc
add
jbe
mov
faddl
jae
xchg
jae
mov
cmp
inc
ror
inc
or
mov
mov
jb
sar
cmp
mov
sbb
xchg
xlat
mov
test
lahf
bound
out
leave
test
rcrb
sub
xor
mov
in
jl
insb
inc
cmp
adc
xor
xchg
cmp
inc
cmc
test
push
push
and
lret
int3
and
jecxz
xor
cld
jmp
mov
out
xor
sbb
dec
lcall
and
inc
pop
inc
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
test
insl
loopne
inc
loop
fdivs
jno
stc
std
sbb
mov
std
call
cmp
lods
push
int3
test
lret
mov
jmp
and
loopne
xor
loopne
scas
outsl
int
push
dec
inc
pop
jne
ds
leave
cmp
outsb
sarb
sbb
pop
cld
and
pop
lcall
insb
lret
cli
xlat
xor
jge
call
pop
jl
push
ret
add
jecxz
and
cmp
sbb
cmpsl
mov
lods
xlat
mov
iret
sbbb
lea
aad
in
aad
sub
adc
mov
fiaddl
dec
push
and
jo
cmc
mov
sub
mov
push
push
push
insl
and
or
sbb
ficompl
push
and
pop
add
xor
dec
inc
push
cmc
push
movsb
lock
mov
mov
arpl
cs
fmuls
lcall
push
and
pop
cmp
lcall
mov
loope
mov
sub
mov
cmc
mov
dec
in
sbb
xor
lahf
cmpl
sti
pop
data16
xchg
test
mov
rcl
mov
ja
stos
dec
aas
and
stos
push
adc
push
jecxz
scas
pop
sub
fst
mov
or
test
aas
sbb
push
out
mov
sbb
lcall
imul
lods
imul
or
xchg
rol
adc
xchg
rcr
dec
shr
pop
popa
jle
pop
in
ret
or
jle
scas
push
mov
push
add
xor
sub
sahf
jg
and
dec
mov
pop
subl
add
and
stos
xchg
popf
jecxz
mov
mov
lret
scas
mov
push
imul
inc
das
ljmp
hlt
dec
cltd
bound
lods
or
mov
dec
and
push
stos
in
xchg
pop
dec
and
shll
vpsrlq
and
jno
inc
jb
and
fimuls
out
xchg
stos
push
icebp
loope
cmpsb
aam
xchg
and
adc
and
movsb
push
int3
xor
mov
cmp
ds
orl
or
inc
loope
jae
cmp
addr16
test
mov
inc
xchg
ret
mov
ds
inc
and
push
mov
out
xor
fdivp
out
lock
sub
fiadds
lock
scas
mov
out
rcr
hlt
ficomps
enter
aas
or
retw
das
xchg
stos
pop
lret
mov
fs
in
popa
sbb
xchg
mov
adc
scas
fs
in
lcall
mov
mov
sub
fs
adc
mov
cli
fiaddl
push
int3
jp
call
mov
fmul
hlt
fsubr
add
stos
dec
add
mov
fistps
ficoml
sbb
xchg
pop
jae
cmp
xlat
out
cmp
sbb
or
ss
test
or
js
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
fld
loopne
mov
adc
jo
adc
push
lods
xlat
sbb
mov
adc
sbb
cwtl
fidivrl
cmp
cltd
jbe
leave
orl
fidivrs
push
lahf
aad
sub
dec
fldenv
gs
scas
push
in
adcb
out
cmp
dec
dec
sbb
jns
cltd
mov
mov
xchg
inc
sub
jg
or
out
cmp
mov
scas
mov
arpl
jbe
dec
push
jb
movsl
mov
mov
cmp
pop
mov
shrd
mov
loop
loop
sbb
sbb
sbbl
fldt
cs
mov
pop
sbbl
fcomps
test
mov
mov
push
sub
out
and
jno
cld
mov
adc
test
push
std
push
ljmp
or
or
pop
or
fisubs
cmpsl
xchg
mov
je
adc
icebp
mov
cmp
jge
mov
jle
pop
test
or
pop
mov
out
xor
pop
call
jmp
out
inc
cmp
inc
addr16
add
xchg
popf
and
sub
dec
cmp
lds
test
jecxz
sub
mov
mov
mov
pushf
sub
add
sub
pushf
jne
cli
call
mov
movsl
mov
rcl
sbb
rol
and
mov
inc
addl
sbb
inc
scas
iret
std
push
add
lahf
mov
ffree
jo
lret
push
add
flds
fsubl
loope
fmull
cmpsl
das
mov
ss
mov
dec
mov
loop
in
adc
mov
fnsave
fnsave
out
add
icebp
and
loope
push
xor
sbb
sbb
mov
notl
add
ljmp
movl
push
sbb
add
mov
xchg
inc
pop
int
test
cld
adc
xchg
std
test
xor
xchg
or
fisubrs
movsb
adc
push
filds
mov
testb
inc
mov
mov
jle
movsb
test
mov
jecxz
mov
in
ja
hlt
push
jg
ja
jge
mov
ret
loop
clc
mul
es
pop
adc
scas
xor
inc
pop
push
xchg
xchg
mov
xlat
and
pop
movsl
fwait
ss
loop
inc
cld
rcrl
inc
dec
lret
ds
jno
and
daa
mul
clc
jge
jg
jnp
sarb
lcall
jmp
cmc
mov
fstpl
cltd
mov
lahf
jmp
inc
xor
mov
mov
inc
stc
fld
mov
mov
dec
fcmovnb
popa
cmp
call
push
stos
push
mov
push
lret
jnp
ja
dec
testb
sarl
or
aaa
mov
into
lahf
dec
fcoml
push
and
imul
es
ret
jns
or
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
leave
inc
mov
adc
adc
mov
xor
shll
sub
mov
subb
jne
loopne
adc
aad
and
add
mov
lcall
cmp
pop
test
scas
xor
dec
push
mov
jmp
jl
jle
loope
arpl
repz
adc
addr16
jmp
movups
lds
inc
jo
inc
outsb
scas
xlat
std
xchg
movsb
shlb
jg
aam
pop
loop
aaa
aam
adc
pop
or
aad
fwait
push
push
fucomip
push
push
mov
loop
fs
add
sub
dec
mov
pop
shlb
outsb
xor
into
ja
pushf
jmp
in
outsb
pop
mov
add
xorl
frstor
in
js
and
jecxz
sbbl
jae
pop
jge
jecxz
dec
push
movsw
push
repz
enter
sbb
es
je
jo
icebp
outsb
jns
xchg
test
and
sub
and
jo
lcall
xchg
enter
push
cmp
pop
cmp
mov
or
pop
cmc
or
push
jne
mov
push
mov
dec
das
xor
int
cmpb
push
sahf
imul
dec
mov
mov
jb
std
mov
addl
xchg
repz
arpl
dec
cmp
push
aad
pextrw
neg
sbb
cmp
xchg
repz
cmpl
inc
dec
push
in
jmp
ffree
lock
hlt
loop
xor
roll
pop
cmp
repnz
mov
int3
adc
call
jmp
test
push
jl
pop
aaa
pop
lret
in
in
scas
pop
push
xchg
pop
jnp
xchg
rcrl
les
mov
xchg
outsl
sub
mov
push
push
pop
sbb
inc
int
pop
in
xchg
xor
test
pop
or
dec
xlat
out
and
or
inc
dec
xchg
or
addl
dec
pop
inc
cmp
sub
pop
add
dec
js
fmull
mov
or
movsb
dec
stos
pop
xor
andl
cmpsl
fdivrs
jbe
mov
cmc
aas
push
add
or
mov
jp
cmovge
mov
sub
jge
addr16
push
cmp
sub
js
xchg
fisttpll
aam
sub
movl
adc
jl
pop
push
imul
xorb
loope
and
std
or
test
push
test
cwtl
mov
or
push
sub
imul
data16
ljmp
lods
mov
mov
sti
jns
std
testb
int
outsb
call
movsl
fdivr
cmp
jg
mov
inc
pop
push
cs
out
div
dec
fidivs
lahf
sub
sub
in
cmp
lahf
push
adc
mov
inc
sbb
inc
subl
ljmp
loopne
das
or
add
or
dec
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
inc
xor
pop
xor
mov
add
sub
push
mov
add
sahf
mov
insb
pusha
cmpb
scas
lock
cld
lods
cli
divl
cmp
mov
repnz
fwait
inc
insb
fiaddl
cmp
sbb
mov
lret
out
mov
fisttpll
icebp
push
popa
pop
xchg
adc
dec
mov
mov
rorb
test
xor
jo
flds
test
cmp
xor
aas
and
pop
icebp
cmp
mov
fwait
sbb
sub
xchg
pop
les
sub
mov
jb
sarl
dec
rol
insl
addr16
pop
push
or
int3
cli
dec
cli
inc
dec
xor
loopne
jmp
int
or
sbb
xchg
jae
ds
push
loop
les
mov
and
xchg
inc
leave
movsb
push
sbb
adc
das
dec
pop
pop
lods
lods
pop
dec
mov
icebp
aam
sbb
iret
ljmp
es
jns
xor
xor
adcl
test
movsb
popf
test
jmp
sahf
jae
push
mov
push
inc
std
pushf
popf
bound
xchg
sar
dec
aad
pop
and
mov
stc
push
notb
loope
ret
sub
jle
jb
je
stos
lods
mov
and
lea
lahf
cmp
xor
jp
dec
out
movsb
add
ficompl
movb
negl
in
pop
sbb
sub
cmpsb
inc
js
xor
out
int3
jle
loop
cmc
pop
pop
xor
mov
add
cmp
dec
and
add
cmp
jne
push
lock
outsb
and
jnp
fistps
push
shll
cltd
push
mull
xorl
ficomps
arpl
in
std
mov
inc
out
cli
lea
xchg
dec
shr
movsl
shlb
push
jae
mov
int
lds
lret
add
mov
cwtl
add
jo
or
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
repnz
stos
adc
stos
movlps
fnstenv
pop
sub
jg
adc
pop
push
or
jnp
inc
dec
fstps
mov
cmp
ds
sub
cli
bnd
xchg
adc
mov
test
sbb
xchg
in
sub
fdivrs
push
push
xor
mov
fs
dec
pushw
fnstcw
push
fmul
jne
ss
inc
loop
loop
loopne
data16
push
out
loopne
add
dec
or
jge
mov
jge
lods
out
jns
shrb
cld
loopne
push
out
lods
clc
addl
rcrb
popf
mov
and
cmc
call
inc
jmp
cld
mov
vaddsd
push
bound
push
or
xor
bound
incb
fldl
dec
bound
cmp
scas
or
xchg
lock
dec
jle
scas
mov
jmp
js
sub
xchg
push
fidivs
jmp
ret
notb
das
ficompl
insb
push
xor
clc
cmpsl
inc
fsubrl
enter
int3
test
inc
cs
stos
gs
xchg
pop
std
xchg
mov
mov
dec
pop
mov
dec
and
in
dec
aas
inc
pusha
xorl
sahf
bound
repz
dec
lock
mov
std
xchg
pop
mov
or
shrl
mov
push
ss
movsb
mov
pop
mov
out
sub
sti
scas
jns
sub
cmpsl
mov
and
inc
cmp
mov
in
es
outsb
xchg
loop
imul
and
inc
and
les
out
sub
and
push
ret
stos
push
xchg
and
adc
cmpsl
sbb
pusha
mov
std
mov
adc
mov
jbe
fst
sub
fs
and
xor
jg
cmpsb
push
adc
sub
daa
and
push
mov
pop
jl
rorl
xor
sub
push
out
test
shll
or
xor
xor
xchg
cmp
popl
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
fs
cmpsl
adc
stos
movlps
lret
fistpll
fcom
or
fisubrs
cmpsb
mov
bound
ret
xchg
js
fisttpll
dec
nop
and
pop
jg
dec
mov
ret
jne
mov
or
jae
mov
lret
mov
mov
out
add
test
repnz
mov
les
icebp
inc
sub
cmp
rcll
xchg
add
in
lock
sub
sbb
xor
xchg
scas
mov
inc
xchg
or
lret
mov
ret
out
xchg
mov
inc
cltd
cli
insb
mov
pop
lret
pop
sub
fs
mov
les
scas
lahf
out
insb
pop
inc
std
es
outsb
ficomps
mov
dec
cmc
fldenv
mov
fstl
loopne
push
lods
pop
jno
cmpsb
sbb
xorl
addb
push
imul
jl
in
jle
mov
mov
dec
jnp
mov
shr
sbbb
movsb
imul
das
add
cli
shr
mov
neg
lea
paddq
add
in
or
xchg
pop
jne
sub
out
mov
fucomip
dec
sub
xor
call
lea
mov
mov
sub
sbb
enter
ds
insb
movsb
outsl
jl
inc
adc
mov
sub
add
adc
pop
push
cmp
lret
stos
ja
xor
jge
pop
negl
js
fwait
mov
pop
clc
ficomps
fs
mov
rcrl
sbb
shlb
adc
gs
dec
test
mov
lret
sbb
call
jle
pushf
hlt
mov
jbe
sub
lcall
lret
je
fsubrp
ret
inc
xchg
ds
mov
shr
sub
mov
lods
inc
mov
push
ret
out
xor
jbe
dec
in
loopne
dec
adcl
movsb
jmp
mov
dec
xchg
mov
dec
jno
fisubs
sbb
leave
xchg
adc
mov
hlt
sub
hlt
inc
outsl
sti
push
dec
in
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
hlt
cmc
add
stos
movlps
push
arpl
mov
sti
jle
and
insl
cmc
aad
addr16
add
mov
sub
cmp
add
adc
fwait
movsl
push
sub
test
stos
push
fdivrl
pop
in
cwtl
sbb
jbe
lds
mov
jp
movsb
jnp
iret
and
mov
cli
lret
dec
ja
mov
lods
cs
inc
cmp
dec
sub
pop
or
add
or
cwtl
ja
xor
divb
imul
loope
xchg
jbe,pn
push
shlb
mov
sti
inc
mov
cmp
or
lret
test
iret
jnp
xchg
es
cmp
dec
test
loop
adc
jo
adc
mov
sub
in
xchg
jle
adc
or
test
addr16
ds
mov
pop
stos
sahf
aas
xchg
adc
repnz
adc
xchg
icebp
adc
mov
movsl
insl
adc
sub
mov
mov
inc
mov
fiadds
popa
cmp
dec
lods
mov
sub
lcall
adc
sbb
push
aaa
shll
sbb
shll
fs
dec
jae
bswap
nop
pop
mov
aaa
pop
js
lea
icebp
gs
dec
popf
cltd
pushf
loopne
fwait
pushf
mov
and
mov
pop
mov
and
cld
sahf
xchg
dec
popa
pop
push
jb
in
and
cmp
ss
xchg
iret
mov
jl
mov
adc
in
pop
add
add
out
jge
cmp
mov
sub
cwtl
popf
jo
sub
popf
repz
or
cwtl
add
jno
sub
cli
mov
mov
adc
imul
or
fwait
notb
xor
push
pushf
xor
push
xchg
xor
sahf
cmp
dec
xchg
lahf
mul
enter
pop
push
cld
adc
add
fs
add
pop
mov
adc
lock
lret
es
mov
sahf
stos
cmp
icebp
pop
fcmovnu
pop
jg
jbe
test
ja
out
bound
fisubs
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
xor
mov
adc
stos
movlps
jo
mov
push
fcmovnb
fsub
xor
dec
jge
inc
out
movsb
xor
adc
mov
sahf
rol
negb
pop
test
mov
xor
hlt
mov
ficompl
mov
rcrl
or
push
xor
iret
mov
stos
aam
push
jnp
in
or
jns
movsl
lcall
fdivs
and
dec
mov
jle
popf
stos
push
repz
mov
sarb
ljmp
mov
xchg
sbb
js
xchg
movsb
faddl
push
movd
adc
pusha
lret
pop
jge
jb
fsubrs
mov
aas
pushf
loope
sbb
jo
mov
loop
and
or
and
add
adc
mov
dec
push
jae
stos
adc
int
sub
cwtl
sbb
test
adc
or
add
jnp
mov
mov
mov
clc
push
out
dec
xchg
pop
adc
out
xchg
adc
in
jnp
xlat
js
leave
xor
clc
push
cmc
je
bound
mov
push
lods
mov
sbb
pop
push
subb
add
dec
xor
subl
push
popf
mov
fs
sub
mov
xor
out
pop
shll
and
inc
adc
push
pop
or
in
add
push
ds
xor
inc
jle
cltd
daa
gs
pop
movsl
and
icebp
ret
stc
mov
cli
ret
mov
shl
pop
xor
popl
add
in
inc
ljmp
sub
cld
leave
xchg
popf
bound
out
stc
in
pusha
gs
and
xor
xchg
jo
mov
lcall
cmp
cmp
call
inc
xchg
xlat
mov
push
std
inc
adc
mov
add
cli
andl
stos
and
xchg
xor
js
fmull
into
mov
push
push
jbe
lock
out
or
dec
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
mov
mov
mov
jae
fbld
cmp
push
out
lahf
xchg
mov
mov
sbb
mov
andb
cmc
leave
pusha
add
dec
arpl
insl
jmp
push
xor
sub
mov
fwait
xor
jp
rcll
sti
enter
cmp
xor
push
sub
xor
pop
dec
ljmp
adc
in
jnp
jecxz
insb
cld
fistl
out
out
jl
fbstp
loop
add
sub
push
add
fimuls
mov
adc
mov
je
mov
mov
jae
mov
mull
cli
mov
arpl
insb
jge
jbe
add
int3
lcall
enter
pop
ds
cmpsl
mov
or
rclb
sub
pusha
cmp
and
mov
ds
cli
mov
jne
mov
dec
push
fsts
and
stc
dec
inc
imul
add
add
cmp
std
sti
clc
adc
xor
les
cmpsb
pop
nop
mov
je
in
aaa
xchg
xchg
jmp
add
xchg
xor
xchg
loope
pop
popl
gs
jne
movsl
adc
mov
cmp
add
push
stc
daa
iret
lods
add
shlb
and
sbb
mov
adc
call
push
sar
cli
sub
movsb
fiadds
out
add
and
shr
xor
test
adc
test
add
mov
iret
xchg
daa
imul
int3
fimull
loopne
cld
push
lahf
fildll
jp
push
sbb
xchg
adc
xchg
sti
sub
sub
add
sti
add
and
daa
and
and
cmpsl
mov
dec
mov
mov
dec
cmp
mov
call
push
rcrl
pusha
clc
lds
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
and
ljmp
test
loope
into
inc
sbb
push
adc
loopne
add
add
je
jb
stos
shl
push
push
ja
sahf
lods
in
jmp
dec
dec
pop
jo
inc
fsubs
dec
dec
inc
push
movsl
mov
pop
and
stos
and
adc
out
lcall
cmp
clc
inc
dec
aas
inc
mov
cmp
mov
rclb
lahf
or
aad
iret
push
mov
mov
mov
std
jmp
jle
mov
pop
ja
and
int3
pop
push
xchg
inc
scas
pop
fwait
sub
mov
pop
mov
xchg
aad
adc
inc
mov
mov
ds
inc
push
mov
leave
mov
sub
xlat
gs
imul
pop
ret
cltd
inc
pop
adc
pop
stos
addr16
lahf
cwtl
daa
pop
push
daa
insl
mov
or
lock
shrl
add
mov
shl
jmp
call
aas
and
xchg
lods
test
pushf
in
pop
popf
les
out
sbb
adc
push
fadd
mov
cld
das
fs
leave
lock
movsl
lret
popf
push
add
and
mov
or
xor
ret
adc
test
or
mov
xlat
jne
aaa
or
andb
inc
mov
inc
jge
sub
add
xor
leave
in
and
adcb
cmp
mov
inc
jnp
fwait
push
dec
jae
movsb
dec
flds
pop
das
sbb
call
mov
inc
cmc
and
call
xor
push
inc
mov
clc
shrl
xor
push
fs
xlat
mov
icebp
scas
jecxz
add
cmpsl
mov
push
ljmp
mov
call
gs
fsub
decl
xchg
data16
cs
pop
in
or
outsb
sub
hlt
xchg
sbb
mov
adc
dec
adcb
xchg
out
stc
je
cmp
push
mov
cmpsl
or
jno
dec
xchg
fists
inc
cmpb
or
sbb
add
mov
jns
mov
cmc
popl
push
mov
fisttps
mov
jge
push
inc
rol
icebp
sbb
cli
je
mov
fdivr
pop
test
inc
mov
cmp
pop
push
mov
pop
in
xchg
addr16
push
adc
adc
int3
shrb
ja
mov
stos
jecxz
insl
xchg
sub
mov
stos
mov
adc
add
hlt
clc
imul
aam
in
push
pop
dec
cli
dec
cmp
pop
jb
es
pop
xor
pop
pop
cmp
icebp
push
mov
mov
es
mov
out
dec
sbb
jne
jnp
inc
mov
fidivl
xor
sub
add
pop
mov
leave
push
push
inc
or
sar
ds
adc
popf
or
in
les
pop
xor
sbb
fwait
outsl
push
push
xchg
mov
pop
cmpsb
pop
jmp
add
adc
ja
movsb
pop
dec
in
pop
mov
loopne
fcoml
xchg
pop
rcrb
test
rorb
mov
rcl
insl
xlat
xchg
push
mov
fcmovnu
sarl
mov
cli
loopne
loop
imul
les
roll
inc
xchg
adc
dec
jle
out
pop
add
mov
pushl
subb
pop
aaa
loope
test
repz
std
jg
cli
sar
adc
add
pusha
mov
add
push
pop
jg
mov
mov
xlat
shlb
gs
mov
dec
cmp
loope
test
fs
jmp
push
pop
push
jo
shlb
sbb
lahf
fistl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
dec
cmp
xchg
adc
pop
adc
adc
adc
sahf
pop
xor
dec
jl
jge
scas
xor
loopne
push
pop
mov
mov
xchg
dec
jb
mov
dec
pop
pop
mov
mov
push
dec
leave
or
mov
aaa
sbb
into
mov
cmc
sub
pop
cmp
adc
dec
int
jne
xchg
enter
stos
mov
loope
xchg
out
lret
outsl
xchg
cwtl
cmpsb
lods
pop
jbe
pop
in
mov
aaa
sub
popa
inc
sbb
or
aas
cmpsl
xor
lds
rcl
in
dec
inc
sub
repz
lds
lahf
aas
jbe
pop
cld
mov
mov
push
imul
ja
lret
and
aas
xor
mov
jecxz
adc
jne
adc
lock
xchg
popf
fcompl
or
xlat
add
call
inc
imulb
or
lods
jno
and
into
cs
add
or
fcmovnu
dec
test
push
scas
jl
fwait
xor
push
daa
js
jmp
mov
mov
rcrl
sub
ss
scas
bound
das
test
scas
ljmp
push
push
test
adc
clc
inc
pusha
xor
mov
in
jae
std
andl
xor
xor
out
fnsave
jl
mov
dec
xor
push
mov
fstps
xlat
cmp
mov
dec
lret
subl
adc
lahf
push
xor
xchg
movsl
pop
gs
mov
nop
push
mov
clc
aas
mov
inc
fisubrs
pop
je
ret
in
popf
sbb
inc
xchg
ret
mov
sub
inc
cltd
lcall
dec
test
out
ficomps
push
pop
jg
dec
cltd
cld
fstp
imul
and
scas
pushf
outsl
out
jle
jae
hlt
pop
jg
das
fidivrl
popw
jbe
xchg
cs
add
dec
fs
dec
mov
mov
xor
imul
pop
xor
scas
sbb
xor
mov
add
popf
adc
or
or
lret
es
add
sbb
jno
fcmovb
push
push
or
mov
testb
ret
lcall
sub
icebp
mov
into
test
test
sub
fwait
enter
xor
js
call
xchg
add
add
cli
cwtd
add
sbb
fstpt
push
mov
cs
rorl
adc
mov
sbb
fs
xchg
arpl
inc
fstpl
rclb
pop
dec
lods
sarl
stc
mov
into
sub
or
ljmp
or
jb
cmp
add
sti
xchg
movsb
jecxz
or
mov
jecxz
lods
pop
dec
cmc
inc
icebp
lock
fisttps
dec
cmp
fists
xchg
adc
mov
push
sub
hlt
sbb
rclb
popf
rolb
cltd
pop
iret
lods
xchg
sub
sub
shr
pop
jnp
push
and
jo
pushf
aas
dec
mov
push
jbe
insb
stos
mov
movsb
es
fildl
sub
mov
shl
test
lcall
nop
dec
jp
pop
out
insb
ja
std
nop
adc
xchg
js
mov
int
add
sbb
xor
pop
lods
push
test
mov
mov
push
xchg
test
stos
sub
push
in
jmp
call
femms
imul
xchg
aad
mov
or
mov
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
push
pop
sti
jle
mov
adc
movlps
mov
mov
mov
or
add
mov
fsubl
cmp
insl
mov
add
fisubrl
mov
ror
fimull
shll
sahf
push
call
sub
push
repnz
cli
push
lret
push
adc
andl
dec
push
mov
int
aam
int
int
push
adc
sbb
imul
ljmp
aas
mov
push
push
lahf
push
mov
sbb
pop
jl
test
sbb
push
push
std
subl
mov
xor
vmread
lret
addb
loop
sti
call
jp
or
stc
add
sbb
mov
pusha
add
fstl
adc
ret
push
mov
or
pop
imul
filds
gs
mov
movsl
jmp
lahf
dec
xchg
aad
stc
adc
movsl
mov
les
es
and
int
add
xchg
das
push
sub
xchg
pop
adc
loop
in
mov
inc
lds
add
jb
mov
jp
ffree
add
jl
inc
icebp
xor
xor
in
mov
sbb
out
or
xchg
aas
mov
or
div
stc
adc
ja
in
add
leave
subb
cmp
jl
inc
jbe
pop
add
jge
stos
cs
mov
pop
ljmp
xor
cmpsl
mov
in
lods
popa
pop
loop
inc
cmp
xor
inc
pusha
cmc
outsb
cmp
mov
cmp
test
add
and
sub
lahf
repnz
dec
loop
add
push
pop
jo
in
std
push
test
mov
pop
lahf
das
jl
addr16
dec
mov
nop
fs
jl
std
popa
lods
dec
ficomps
in
lea
push
cmp
inc
fisttpl
push
cmp
inc
sbb
push
mov
andl
add
jmp
inc
cmc
inc
fs
call
movups
push
mov
je
push
stos
pop
repnz
mov
fiaddl
sbb
push
push
xor
push
jl
subl
xor
outsb
testb
ja
add
mov
push
xchg
shl
cmp
add
mov
jecxz
cmp
pop
daa
inc
fcmovbe
pop
xchg
mov
lods
sbb
jnp
adc
addr16
mov
cltd
inc
add
lahf
test
push
fwait
inc
arpl
mov
lcall
mov
inc
adc
dec
js
pop
adc
xchg
adc
stc
mov
jge
outsb
jl
push
xchg
xchg
cmpsb
jge
sbb
test
int
or
sbb
aaa
cmp
pop
jb
int
push
push
scas
leave
popa
dec
setae
lock
in
cmp
hlt
clc
sbb
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
test
pop
cmp
std
imulb
leave
popf
cwtl
sbb
push
dec
or
mull
inc
xchg
cmp
lods
insb
je
sahf
cmp
fs
mov
test
dec
mov
cld
xchg
cs
mov
in
jbe
mov
xor
mov
ljmp
dec
xlat
push
fdivrl
sbbl
jnp
stos
mov
and
cmc
sbb
sbb
inc
icebp
aad
inc
mov
dec
cmp
cmpl
jmp
das
xchg
aaa
fldl
outsb
and
shll
into
cmp
push
pop
push
xchg
or
movsb
sbb
and
daa
dec
add
in
xchg
push
push
jg
lgdtl
lret
inc
lock
addr16
pop
out
jne
push
pop
jne
pop
jae
addr16
xchg
xor
cld
mov
ret
xor
push
add
mov
or
out
into
sub
jb
xchg
mov
pop
fninit
push
push
xchg
push
pop
sbb
fs
inc
add
lret
xor
sbb
mov
lea
fsubrl
fdivl
adc
mov
cmp
ja
sub
int
int
mov
add
in
adc
inc
add
mov
xlat
daa
lret
icebp
aaa
jnp
inc
icebp
nop
mov
jns
rcl
into
mov
repnz
push
add
inc
aam
gs
xchg
fwait
cmpsl
ja
gs
icebp
adc
sub
mov
lret
je
repz
scas
rclb
xor
movsl
movsb
dec
mov
testb
adc
hlt
pop
mov
pushf
push
inc
add
int
in
aam
in
xor
daa
and
pop
cltd
cmp
dec
sbb
out
lods
lock
mov
das
aad
cs
cmpb
or
mov
adc
and
xchg
dec
test
inc
xchg
xchg
dec
mov
cmp
repz
mov
stc
adc
fisttpl
rcrb
or
adc
and
pop
and
mov
sub
push
sub
cwtl
fsubs
icebp
cmp
into
or
js
pop
loop
push
pop
cs
outsb
int
ret
mov
push
sbb
push
lret
dec
aad
push
ljmp
int
daa
cmpsb
jl
push
daa
lea
push
mov
sub
enter
std
aas
and
xor
out
loope
arpl
nop
neg
and
jo
fistps
out
push
das
fisubrs
inc
fwait
ljmp
sbb
mov
cmp
and
insl
inc
or
cmp
mov
push
jae
and
in
jae
rcrl
dec
cmp
xchg
dec
cmpl
cmp
pop
cld
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
in
jle
jge
adc
movlps
fimull
pop
out
mov
or
jl
aam
sub
dec
in
out
cwtl
loope
mov
sub
fldcw
and
pop
or
or
clc
or
adc
je
aam
adcl
js
jp
or
js
pop
adc
fsts
pop
pop
mov
incb
leave
faddp
aas
mov
pop
cmp
cmpsl
xchg
lret
jns
adc
ljmp
iret
mov
mov
fiadds
dec
stc
fdiv
cmpsb
add
stos
arpl
jns
mov
mov
cltd
xchg
insb
jnp
ficompl
cmp
mov
cmpsl
lahf
repz
movsb
mov
jmp
xchg
xor
daa
mov
mov
dec
jns
push
repz
out
fwait
jmp
push
push
out
fstpt
jb
movsl
and
lret
imul
pop
jns
daa
adc
fnsave
mov
test
jle
pop
xchg
aam
addr16
jp
mov
jns
fiaddl
mull
scas
xlat
les
clc
and
lahf
pop
and
insl
sub
push
cmpsl
insl
sbb
adc
testb
cltd
push
adc
dec
push
js
sbb
and
jbe
push
insl
add
push
lret
arpl
mov
loop
xor
mov
mov
out
sbb
sub
das
inc
inc
int3
sbb
shl
loopne
add
push
xchg
mov
sub
testl
repnz
xor
ss
sub
push
pushf
sbb
stos
lea
push
call
or
sbb
fidivrs
in
cmp
imul
rorb
mov
int
cmc
mov
stos
sti
push
pop
xlat
sbb
arpl
std
imull
mov
vpor
xchg
hlt
add
dec
mov
or
cmp
in
mov
xchg
xchg
xchg
cmp
pop
scas
xor
xor
cltd
negl
clc
mov
es
jb
jno
aaa
mov
xor
sbb
lcall
loop
dec
dec
and
repz
cs
push
mov
push
fisubrs
xor
mov
cli
xchg
mov
or
push
and
test
negl
popa
ja
pop
aam
pop
push
cli
cltd
adc
sbb
sub
mov
lahf
jnp
add
xchg
sbb
push
je
pusha
insb
sbb
fnsave
and
scas
mov
pop
enter
mov
pop
test
out
dec
fidivrl
jle
fistps
mov
psrlw
cltd
sbbb
or
popf
leave
cmp
or
out
addl
daa
test
add
add
dec
wrmsr
adc
aad
pop
sub
int3
outsl
ljmp
test
cltd
dec
sbb
dec
fimull
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
sub
mov
pop
jae
adc
sub
ljmp
push
sbb
mov
stos
popf
add
adc
sub
xchg
pop
xchg
xchg
aas
pop
loop
fwait
mov
sbb
sub
fcmovu
pop
and
pop
push
fadd
shll
mov
xchg
mov
dec
push
popf
mov
in
out
mov
lods
cmc
fs
inc
inc
xchg
cwtl
lret
xor
ss
daa
fiaddl
add
in
pushf
pop
inc
mov
or
push
daa
pop
pop
add
js
xchg
cs
mov
jmp
mov
push
mov
inc
xchg
fsubrl
pop
push
sbb
rorb
sbb
jmp
xor
in
jbe
push
sub
ret
ja
push
jo
arpl
js
out
mov
jne
xor
xchg
or
jmp
adc
xor
pusha
cmpsb
imul
jne
sub
jbe
xchg
push
pop
add
push
cmp
stos
loope
push
bound
cmp
push
data16
fsubp
xchg
data16
pop
mov
or
and
jb
mov
adc
jmp
dec
mov
or
mov
cli
or
movb
inc
lds
sbb
dec
inc
inc
push
add
xor
stos
push
sti
cmp
out
adc
cmp
sub
pop
fcoml
xor
push
sbb
rcrl
pop
shrl
inc
sbb
nop
xchg
lods
pop
outsl
cltd
xor
push
mov
je
hlt
decl
mov
add
xchg
sbb
push
dec
daa
lcall
pop
pop
test
imul
jmp
cmp
mov
lahf
cltd
dec
jl
in
out
out
fsubl
int3
popf
in
xchg
inc
inc
mov
jmp
xchg
lods
push
pushf
mov
fcos
adc
xchg
les
aam
in
cmpl
add
push
lds
test
adc
add
out
and
cmpsb
out
xchg
mov
outsb
or
inc
lret
jp
pop
jae
arpl
movsb
movsl
popa
leave
je
cmpsb
out
ffreep
adc
imul
xrelease
xchg
in
sbb
or
int3
aam
fidivs
bound
inc
and
push
xor
and
sbb
sarl
fldl
testl
push
and
scas
lods
mov
add
inc
mov
pop
mov
arpl
out
outsl
mov
cmp
fnstcw
stos
xorl
movsl
int3
test
mov
ret
mov
sti
xchg
iret
pop
or
lds
punpckldq
nop
sub
dec
and
es
lahf
mov
aam
subb
adc
outsb
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
xchg
pop
sbb
xchg
and
pop
pop
inc
mov
push
pop
push
sub
and
out
push
repz
lea
inc
cmp
mov
jmp
imul
jno
mov
pop
cmp
scas
mov
fsubrp
inc
hlt
jnp
push
lret
cmp
mov
or
andl
movsb
pop
add
iret
jns
insl
scas
or
inc
adc
xor
test
add
aad
mov
aas
mov
pop
and
cld
push
lcall
lods
daa
stc
push
dec
enter
mov
mov
inc
test
jmp
and
ja
insb
pop
data16
adc
sbb
stc
js
movsl
scas
orl
loope
icebp
cld
pop
std
aas
cmovg
mov
xor
xchg
adc
mov
call
push
not
xchg
dec
mov
je
or
push
imul
sbb
ljmp
dec
inc
sub
cld
repz
lcall
pusha
ja
lds
leave
hlt
sub
out
imul
ror
inc
shrl
sub
stc
jp
cmc
les
ret
mov
in
out
jb
lods
outsb
hlt
push
ffree
lahf
push
sahf
imul
pushw
aam
adc
loopne
test
pop
test
test
adc
aaa
mov
cwtl
lret
and
dec
shll
mov
jecxz
pop
rcrb
sub
movsl
sbb
push
add
push
adc
shlb
xchg
ja
mov
xor
mov
sbb
lret
fistpl
add
mov
jl
adc
fwait
cmpsl
push
jbe
adc
int3
jno
dec
xchg
jl
xchg
xor
sti
cmc
add
push
std
pop
or
dec
test
xchg
jno
xor
mov
insb
sbb
stc
pop
insb
scas
cmp
ja
mov
sarb
sbb
sub
add
mov
or
aad
cli
ja
flds
dec
pop
mov
cwtl
jae
sub
test
dec
xchg
loope
sbbb
xchg
cvttps2pi
or
fstp
and
popa
stos
and
pop
mov
push
push
jne
xor
jl
int
shl
mov
dec
ret
adc
fs
fiadds
jl
push
cmp
push
ret
fnstenv
pop
popf
jl
sbb
push
leave
les
xchg
repnz
mov
out
xchg
pop
pop
inc
jae
icebp
pushf
inc
pop
cmc
outsl
sbb
xor
xor
xchg
push
out
dec
decl
jle
push
imul
adc
cmp
out
xchg
sub
insb
cmp
call
or
push
sbb
xor
mov
scas
jecxz
pop
fldcw
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
mov
adc
or
mov
inc
sub
pop
clc
mov
sub
cmp
add
lahf
push
add
xchg
aaa
xchg
mov
out
popa
adc
and
jecxz
mov
sbb
mov
lods
mov
insl
rcrl
xchg
xchg
icebp
dec
daa
mov
xchg
ret
adc
mov
into
hlt
push
cs
jno
cmp
jo
andb
incb
mov
clc
rolb
ret
cmpsb
pop
fcmovu
js
in
cwtl
out
cld
jnp
inc
push
pop
jmp
ret
pop
aad
fdivl
out
sub
pop
dec
push
xor
js
hlt
inc
adc
mov
and
mov
push
push
and
inc
cwtl
aas
xchg
mov
push
jmp
cld
pop
rol
movsb
loopne
pop
mov
xchg
call
push
mov
scas
push
jle
ljmp
jne
sahf
mov
mov
fsubrl
scas
out
aad
es
or
sbb
dec
frstor
aad
push
stos
test
pop
pop
ljmp
add
cmpsl
ss
adc
cmp
mov
sub
jns
lds
movsb
mov
push
sti
cmp
pop
adc
jb
cmp
jle
aaa
insl
adc
sub
pop
sbb
test
testb
cmp
aad
or
es
push
add
mov
xchg
sti
cmc
mov
icebp
sub
ljmp
dec
loopne
pushf
xchg
test
ret
mov
mov
test
push
mov
outsb
divb
sub
imul
jns
jge
xchg
out
push
js
xor
fnsave
jno
add
dec
and
lahf
test
fwait
nop
ds
pop
std
sub
push
stos
cli
sbb
ficompl
dec
leave
mov
cli
pop
js
sbb
jns
jo
mov
decb
mov
mov
push
outsl
daa
xlat
fsubr
test
dec
cmp
inc
ret
lods
pop
sahf
sahf
mov
xchg
sbb
add
mov
daa
ja
lret
out
push
adc
sub
out
test
loopne
sahf
lahf
nop
cmc
inc
jl
and
jmp
lret
pop
pushf
fdivrl
xchg
mov
sti
fsts
out
fdivrl
jne
inc
and
out
aam
adc
notl
push
test
push
mov
cld
or
jae
dec
fsubrs
adc
sarl
jg
repz
cmc
pop
jae
sub
or
in
cmp
test
sahf
dec
mov
ret
cltd
jle
sbb
push
repz
je
bound
ljmp
or
les
into
pop
dec
adc
add
cmc
pop
adcb
jle
mov
mov
je
jecxz
ja
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
imul
or
iret
test
pop
pop
ljmp
outsb
push
outsb
pop
adc
push
cmpl
xchg
sub
pop
xor
cwtl
and
sub
inc
pusha
ficomps
dec
pop
insl
push
dec
les
mov
cmp
push
push
xor
call
out
aas
push
cmp
jg
mov
mov
xor
sbb
dec
xchg
lcall
dec
daa
int3
jns
xlat
pop
iret
dec
mov
push
bswap
and
adc
das
jae
pop
test
jle
je
shrl
ds
push
xor
pop
inc
inc
xor
push
cld
scas
sbb
cli
lahf
inc
mov
in
cmp
fbld
and
stos
cmp
pop
pushf
xchg
jae
sbb
stos
mov
test
push
xor
xchg
ja
je
loop
mov
clc
or
adc
inc
jbe
fadd
test
cmp
aas
push
jl
into
adc
clc
sti
lods
aas
push
add
scas
ret
add
inc
jge
mov
pop
mov
xlat
outsb
aad
bound
push
ret
sub
push
ret
clc
add
dec
sarb
xchg
lcall
hlt
jmp
in
jl
jecxz
gs
xor
jns
and
sbb
ja
add
gs
adc
dec
xchg
mov
in
cmp
shr
dec
dec
push
mov
xchg
rcr
nop
or
in
in
xchg
decb
iret
xchg
mov
pop
adc
bound
sbb
sub
mov
cs
push
movsl
idivl
add
popa
dec
and
mov
push
sub
scas
aam
imul
xchg
nop
daa
nop
mov
mov
int
add
mov
outsl
xor
or
push
daa
ja
cltd
sbb
xor
shrb
jnp
adc
push
xchg
xor
adc
repz
aad
lret
movsl
icebp
and
inc
mov
fs
cmc
xor
add
mov
lock
add
adc
call
sub
and
and
sti
sbb
stc
jmp
push
xchg
ds
jg
xchg
mov
daa
mov
scas
xor
and
leave
cwtl
jno
fisubrl
or
test
sahf
clc
es
and
sub
clc
dec
pop
or
pushf
outsb
hlt
pushf
mov
push
mov
pop
cmp
mov
rcrb
add
sub
add
sbb
out
push
push
repz
mov
movsl
mov
je
cmp
mov
mov
lods
push
lret
mov
dec
lds
in
pop
jne
sub
sbb
add
jae
inc
hlt
pop
sbb
test
push
out
cmpsl
sbb
test
dec
sbb
jbe
sbb
sub
mov
loop
xchg
sub
push
loop
cli
mov
sti
hlt
lea
lods
mov
mov
arpl
jns
adc
mov
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
xor
adc
jp
adc
jo
test
dec
jo
lods
test
shrb
push
xchg
aad
xorl
cmp
dec
les
pop
mov
arpl
jge
movsl
push
sub
cs
cld
div
sti
popf
stos
sbb
leave
pop
in
into
pop
repz
arpl
arpl
pop
mov
mov
or
mov
mov
push
stos
xor
sbb
lods
les
jg
dec
std
je
ds
pop
mov
sub
mov
dec
imull
pop
push
mov
inc
cltd
push
test
push
jnp
dec
imul
mov
sub
xor
push
sbb
out
or
xchg
scas
je
iret
test
sbb
cld
xchg
adc
mov
fdivr
subb
sub
dec
sub
adcb
and
out
sbb
sub
cmp
xchg
scas
inc
mov
sub
jecxz
mov
imull
lods
pop
sbb
ds
mov
cli
bound
fs
pop
sahf
add
sbb
inc
add
cmp
lods
fisubs
fnstsw
cmp
notl
sahf
sbb
inc
lahf
push
dec
push
pop
push
sbb
lcall
in
xorb
rcrl
rorl
mov
lret
into
repz
loop
adc
add
stos
test
adc
sub
into
jmp
add
out
push
push
shr
add
lret
cmp
pusha
lcall
std
sub
adc
movsb
inc
push
jb
cwtl
dec
std
mov
icebp
mov
call
shl
xchg
addr16
loope
jae
or
ss
push
aad
add
jno
dec
or
gs
stc
sbb
cmp
sbb
out
adc
test
into
cmp
add
inc
mov
mov
test
xchg
stc
mov
xor
adc
lcall
mov
fcomps
lahf
mov
sub
inc
pop
mov
push
mov
lods
and
and
jnp
jecxz
push
mov
dec
pop
cs
mov
ds
repnz
stos
dec
push
out
cmp
jns
cltd
jnp
repnz
xor
test
push
in
fbld
jge
adc
pop
jns
mov
push
mov
iret
add
sbb
mov
inc
mov
sub
daa
xchg
pshufw
js
sub
movsl
ret
jle
push
idivb
jns
addb
pop
and
pop
pop
mov
or
sbb
pusha
repnz
int3
icebp
testb
js
lds
popf
jmp
out
sbb
sbb
mov
xchg
fwait
jnp
aas
dec
ret
lods
inc
in
dec
inc
stc
xor
dec
lods
cmp
xchg
lods
inc
mov
out
and
icebp
pop
jle
orl
or
repnz
cmp
mov
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
push
daa
and
pop
adc
jp
adc
mov
aam
sar
push
mov
les
cmp
into
andl
add
jno
mov
sbb
add
imul
xor
fdivs
je
push
xchg
push
fstps
mov
cmp
mov
mov
inc
ficoms
orl
pop
test
jnp
into
test
roll
push
mov
sbb
rcrl
xchg
mov
dec
stos
mov
mov
jmp
addb
sbb
test
jae
sbb
xchg
sbb
cmp
fisubs
mov
sbb
and
sbb
mov
movsl
mov
fists
adc
lods
movsl
lock
cli
shrb
xor
outsb
lock
fcmove
mov
mov
int
push
and
adc
dec
das
dec
loope
mov
pop
negl
xchg
mov
inc
or
sahf
or
jno
notb
pop
xchg
xchg
jg
je
outsl
je
dec
and
aaa
and
xorb
int
adc
cld
or
dec
xchg
leave
ds
mov
or
test
int
dec
je
stos
dec
shll
pop
xor
dec
add
cwtl
stos
addb
std
inc
pushf
inc
ljmp
and
les
movsb
shll
das
stos
clc
inc
mov
inc
sub
jns
bound
or
outsb
ja
scas
scas
cmpb
or
incb
ret
mov
ret
mov
arpl
pushf
xlat
nop
lahf
xchg
sub
cmp
lock
mov
dec
xchg
dec
cli
mov
lds
hlt
add
inc
mov
mov
xchg
in
iret
jno
pop
xor
sub
sub
lcall
shll
ret
addb
adc
mov
lret
bound
sbb
lea
sbb
mov
mov
popw
and
inc
push
leave
pop
out
inc
mov
inc
adc
cmp
addr16
in
mov
and
dec
cmc
fnsave
add
inc
lret
ret
push
fyl2xp1
es
pop
movsl
mov
cmp
loopne
xchg
sbb
or
mov
das
jb
add
dec
inc
jl
jbe
cltd
jo
nop
adc
cmp
sbbb
loopne
xchg
and
out
dec
pop
inc
iret
xchg
inc
in
test
mov
lods
out
fs
pop
iret
imul
pop
test
xchg
mov
sbb
insl
cmp
push
push
rcrl
repz
mov
je
jg
test
cli
and
and
sbb
or
cmc
dec
hlt
and
sub
jb
xor
sahf
cmc
ja
jnp
sti
pushf
jle
scas
aam
int
mov
stos
rorl
in
sbb
push
imul
lcall
jne
aas
jecxz
xor
jecxz
lock
inc
mov
xor
mov
jne
test
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
xor
jp
adc
pop
mov
sbb
mov
xchg
out
das
sbb
fdivl
adcb
or
or
lods
xor
call
jl
das
xchg
or
cli
add
scas
sbb
pop
arpl
jmp
xchg
or
push
cwtl
hlt
mov
mov
lret
inc
insb
stos
aaa
lcall
xorb
pop
fwait
sub
sub
cmp
xchg
or
or
or
sbb
lcall
mov
test
jmp
repz
test
or
push
dec
cmp
jmp
imul
mov
mov
mov
or
outsb
das
sbb
popf
fsubs
in
cmpsb
lods
mov
sahf
fildl
pop
or
mov
jecxz
xor
push
mov
cmpsb
inc
jns
xchg
imul
loope
leave
sahf
ja
sti
pop
jns
mov
pop
ljmp
xchg
mov
cmp
dec
into
xchg
imul
stc
outsl
rclb
test
cmp
rcl
aad
cli
pop
adc
mov
imul
out
mov
mov
incl
jecxz
dec
bound
scas
lods
dec
cwtl
cltd
mov
xchg
imul
arpl
sbb
xor
insl
adcb
pusha
stos
add
jmp
cmpl
jae
outsb
cmc
xchg
push
xchg
pop
lret
imul
cmpsb
mov
lods
pop
mov
ret
inc
push
jnp
or
jmp
jge
pop
arpl
push
daa
int3
repz
xchg
lahf
arpl
les
xchg
fwait
je
int3
mov
jecxz
shrl
movl
divb
mov
jecxz
or
fdivl
adc
inc
sbb
dec
sahf
push
or
dec
pop
pop
lret
sub
stos
lret
mov
xchg
rorb
mov
jl
leave
xchg
xor
sbb
and
mov
subl
out
sbb
push
add
or
je
test
loopne
mov
and
sbb
push
fdivrp
cmp
out
push
push
cmp
or
and
dec
daa
and
cmpsl
fwait
addl
das
mov
jmp
lods
fsubl
xor
js
repnz
mov
pop
test
sbb
pop
jno
jno
sbb
bound
aam
xor
pop
sar
shlb
dec
push
inc
iret
jmp
mov
arpl
dec
dec
dec
add
aam
out
ficoml
sbbb
push
cmp
movsb
pushf
mov
divl
mov
jnp
adc
add
data16
das
cmp
or
insl
shrl
fnstcw
sub
sbb
mov
es
xchg
xor
mov
and
pop
js
push
pop
xchg
sub
push
clc
in
leave
pusha
lcall
data16
lret
dec
mov
hlt
xor
push
push
inc
mov
xor
incb
inc
push
pop
cmp
int
test
pop
cltd
in
sub
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
shrb
outsb
inc
adc
lea
adc
dec
call
out
rcrl
or
xor
cmp
dec
jb
inc
test
enter
add
cmc
inc
adc
mov
jmp
lds
dec
add
jge
les
add
fs
jno
icebp
fsubrl
add
xor
in
inc
mov
inc
dec
stc
call
sbb
or
fistpl
paddsb
rorl
repz
sbb
cmp
mov
insb
fdivs
and
out
shll
stos
popf
out
xor
dec
or
adc
adc
outsb
cmp
xchg
inc
dec
push
in
movsl
rclb
pop
push
cld
and
and
mov
movsb
push
fs
inc
pop
push
mov
int
xor
cmpsb
in
mov
mov
inc
fisubs
mov
and
dec
cmp
adc
fiaddl
das
negb
push
xchg
add
push
xchg
bound
jmp
add
pop
mov
pop
xchg
aad
cmp
loop
sbb
mov
or
imul
xchg
adc
iret
xchg
lea
sbb
aas
testb
sbb
test
movsb
xchg
xlat
sbb
sbb
loope
mov
jecxz
xchg
pushf
imul
push
out
mov
push
pop
movsl
pushf
fnstcw
pop
popl
mov
clc
int
outsb
ja
mov
shl
movb
xor
mov
imul
push
scas
fldenv
push
dec
lods
adc
popl
loope
dec
jo
sahf
fisubrl
movsl
mov
cmp
inc
mov
xlat
sti
pop
xchg
jno
lret
out
es
insl
xchg
fidivl
sbb
mov
xchg
and
enter
or
out
insb
dec
or
sub
xchg
adc
or
sub
lea
sbb
cmp
jo
outsb
add
mov
sub
daa
test
push
movsl
xchg
mov
xor
xor
add
sarb
mov
sbb
cmp
cmpsb
cmp
adc
jmp
fsubp
sub
fistpll
inc
add
mov
je
mov
popa
fcmovnbe
fstpt
jmp
sbb
ds
lock
pop
sub
fldl
add
mov
out
jl
mov
jecxz
jno
mov
push
scas
repz
outsb
fstpt
xchg
ljmp
shlb
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
call
stos
sbb
mov
inc
testl
adcb
inc
cld
cmp
xor
cli
xchg
pop
cmp
add
lods
lea
jno
mov
cwtl
jae
xor
in
loop
sbb
stc
repz
jmp
scas
into
dec
add
shll
adc
cld
push
jo
cmp
pop
inc
sub
dec
mov
pop
mov
adc
lods
jle
dec
insb
shl
scas
xchg
jo
push
mov
outsl
push
adc
cmpb
xor
inc
dec
repnz
popa
adc
inc
shlb
lds
add
movsb
xchg
or
mov
outsb
mov
pop
ds
repz
orb
cmpsl
fidivl
fs
mov
cs
int3
daa
addr16
repnz
popa
dec
jnp
test
sub
rcrl
test
jmp
movb
pop
ret
jb
mov
xchg
in
je
lret
push
int
pop
jle
dec
xchg
adc
leave
rcrb
mov
outsb
pop
mov
dec
mov
std
jbe
mov
jae
push
je
mov
xlat
aas
in
mov
mov
or
lret
xor
xchg
es
mov
fs
or
push
dec
addb
inc
lods
sahf
repz
cmp
roll
aaa
stc
movl
inc
or
push
insb
mov
je
mov
cs
cmc
sbb
dec
mov
out
negb
stc
or
or
pop
in
in
or
lahf
mov
je
aaa
ljmp
mov
dec
arpl
sub
add
adc
jg
shrb
cmp
lock
fdivrs
push
imul
and
mov
sbbl
cmp
dec
inc
in
or
lock
mov
lock
imul
fistl
int3
stos
jnp
cmp
ror
shll
push
ficomps
shrl
movsb
cli
test
or
ljmp
insl
pop
sarb
lcall
pop
mov
sub
imul
mov
push
xlat
fwait
jg
and
out
ss
push
add
dec
adc
pop
test
movsl
dec
jno
fnsave
pop
repz
insl
loop
test
fmuls
jg
push
leave
stc
add
xchg
ss
inc
xchg
repnz
inc
sahf
repz
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
ljmp
movsb
mov
popf
test
push
adcl
mov
into
lock
jp
dec
imul
jecxz
loop
pusha
mov
cmc
adc
sarl
subl
add
inc
aaa
sbb
mov
testl
dec
sbb
mov
mov
push
insl
cmpsb
sti
and
lcall
and
int
xor
mov
xchg
inc
cwtl
sbb
xchg
xchg
mov
push
adc
mov
push
int
adc
xchg
mov
fisubrl
xor
and
push
pop
ja
aad
xlat
arpl
or
mov
jl
push
inc
bound
rcll
mov
mov
cs
rcrl
add
push
test
fcomi
sbb
cmp
mull
int
inc
and
mov
loope
dec
lock
lods
mov
xor
and
adc
mov
loop,pn
push
xor
test
inc
pop
or
cmp
jp
mov
test
outsb
das
stc
dec
pop
dec
push
push
push
xchg
xor
or
cld
adc
scas
or
fs
or
mov
repnz
mov
das
jle
iret
mov
sub
loop
fnstcw
ret
lods
push
inc
inc
adc
and
and
je
push
xor
lods
mov
adc
fdivrl
and
gs
sbb
les
fcomps
ds
xchg
mov
cmp
sbb
ret
out
stc
xchg
imul
add
add
sbb
pop
dec
lods
add
mov
pop
test
cltd
sub
jnp
mov
lods
mov
sub
dec
jo
xor
ret
inc
lret
jnp
push
subb
push
push
mov
push
pushf
test
aas
sub
mov
mov
cltd
test
in
mov
test
aam
add
and
push
jmp
int
dec
jnp
movl
rorb
adc
adc
rcl
fisttpll
pusha
xchg
jae
or
out
ficompl
cmp
ljmp
cli
ret
fstpt
fsubl
add
xchg
xor
setg
fistpl
ljmp
mov
neg
xchg
arpl
out
bound
or
push
sub
ljmp
dec
movsl
xchg
xchg
lret
inc
cwtl
sub
outsb
adc
dec
inc
fdiv
pop
movsb
ljmp
lods
mov
out
cmp
hlt
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
popl
adc
lea
adc
jmp
cmp
movsl
sahf
orb
mov
mov
sarl
and
mov
mov
lods
xor
dec
test
lods
push
jmp
add
ret
maxps
popf
dec
movsb
mov
cli
addl
jns
imul
ljmp
in
es
jno
in
andb
shlb
movsb
xor
fnsave
mov
mov
xor
inc
push
push
int
inc
insb
lahf
push
jo
or
xor
and
pop
push
sub
out
mov
xchg
nop
clc
push
adc
push
sbb
lock
push
daa
aaa
and
sub
aad
fstps
cmp
in
cmp
jbe
pusha
dec
test
lahf
inc
lret
inc
pop
rolb
les
gs
out
pop
jl
mov
jae
les
pop
daa
push
dec
push
shrb
jge
push
lahf
inc
inc
mov
xrelease
les
lods
loope
leave
sahf
mov
lea
test
add
outsb
aaa
fcmove
and
dec
mov
mov
pop
pop
sub
andl
inc
out
rcl
rcll
mov
mov
pop
cmpsb
insb
dec
sub
xor
add
and
mov
mov
inc
mov
sub
push
lds
dec
dec
mov
sbb
movsb
cs
ds
insl
addr16
xchg
iret
sub
and
and
hlt
jmp
xchg
jbe
adc
loop
shll
fisubrl
and
xor
inc
int3
and
repz
jae
xor
cmp
inc
xor
imul
stc
mov
cmpsl
push
sub
mov
bound
in
or
mov
mov
jecxz
mov
pop
data16
sbb
shlb
std
insb
or
popf
mov
ja
mov
imul
insb
push
sub
in
bound
lock
add
sub
stc
inc
fnstenv
repz
insb
cmpsl
inc
lahf
lock
mov
outsl
out
jp
xor
cmpsb
icebp
jmp
repnz
cmpsl
loopne
push
jb
sub
in
lock
adc
fwait
push
notl
cmp
mov
das
daa
test
in
inc
in
ds
cmp
scas
inc
add
dec
xchg
pop
adc
imul
mov
daa
lods
jno
js
int3
sub
nop
test
lds
fldcw
mov
mov
xor
daa
inc
cld
int
ja
dec
outsl
dec
mov
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
popf
sub
xor
adc
mov
out
mov
cli
sbb
sbb
popa
jno
cmpsl
btl
dec
inc
out
sub
loopne
pop
inc
dec
dec
lods
xchg
mov
outsb
and
into
fwait
mov
sub
xor
insb
rcr
mov
ja
or
adc
or
push
repz
xchg
cmpsb
cmpsb
and
data16
in
in
mov
into
inc
pop
xor
jp
data16
fcmovu
add
mov
xor
sbb
xchg
fsubrl
jecxz
lcall
add
cmpb
rcl
pushf
fsubrl
loopne
jle
dec
fisttpll
mov
mov
in
es
jb
popf
sti
repnz
std
sub
dec
xchg
xchg
mov
fcompl
cmpsb
fs
cwtl
jnp
sub
lcall
orl
mov
es
sti
push
inc
xchg
jnp
imul
out
in
roll
or
arpl
cld
sbb
pop
cmp
fdivr
mov
dec
cltd
lcall
test
pop
pop
lock
in
fsts
imul
jae
daa
clc
adc
das
mov
add
arpl
mov
loopne
xor
andl
in
or
cmpb
push
enter
mov
imul
movq
pop
mov
stos
dec
mov
fisubs
add
sub
mov
mov
or
adc
or
push
hlt
test
mov
or
aad
push
jg
stos
mov
test
lcall
iret
jae
ffree
imul
xchg
push
sbb
imul
sbb
jne
clc
ja
xchg
lea
xchg
pop
test
out
mov
mov
cwtl
pop
in
mov
or
call
mov
or
jmp
test
mov
fsubrs
jle
sub
fwait
pop
and
iret
sub
add
pop
inc
xchg
and
cmp
xorb
sub
insb
jno
or
xchg
xchg
inc
icebp
movsb
orl
push
mov
mov
mov
sbb
shrb
idivb
decl
jns
jne
pop
cltd
push
dec
mov
arpl
mov
sbb
cmpxchg8b
into
adc
cmp
pusha
enter
and
pop
xchg
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
arpl
adc
pop
gs
jecxz
dec
ljmp
mov
sti
aam
shrb
add
sbb
pop
aad
xor
lcall
sahf
dec
xchg
push
nopl
mov
scas
mov
repz
rclb
mov
mov
ss
fsubrs
das
rcrl
repz
lret
or
hlt
scas
xor
lahf
fcomi
xchg
loopne
mov
cmp
sub
les
push
std
aas
hlt
nop
int
ror
push
adc
in
loopne
outsb
std
loopne
and
fildl
pop
xor
mov
mov
sub
std
fildll
dec
xlat
sub
in
pop
xchg
sbb
shrl
adc
adc
nop
ret
adc
and
outsl
mov
ficoml
jae
mov
jp
add
cmpb
in
add
add
ret
data16
daa
cmp
jbe
mov
out
add
movsb
sbb
push
lods
cmp
gs
cmp
jmp
pop
mov
test
cmp
int3
xor
sub
fs
call
imul
add
cli
sbb
inc
jle
test
addr16
and
orl
dec
pop
outsl
in
pop
cli
dec
sti
dec
xlat
xchg
bound
jnp
mov
popa
pushf
pop
or
daa
add
sbb
test
jg
dec
in
ja
and
add
add
jp
or
lret
shlb
pop
cmp
out
inc
xor
xor
inc
test
dec
lea
dec
mov
push
iret
xor
loop
cld
int3
nop
idiv
or
bound
mov
mov
mov
and
in
das
cli
cmovge
addr16
cmp
or
sub
loope
pusha
jnp
mov
pop
push
sbb
shlb
lcall
or
or
pop
pop
or
dec
push
push
repz
xorl
mov
or
dec
orb
xor
fildll
jns
out
pop
inc
dec
rclb
ljmp
jecxz
mov
push
add
xchg
xchg
mov
push
mov
nop
sub
mov
repnz
loopw
xor
in
stos
push
push
mov
jle
outsl
sub
enter
les
add
jg
je
add
fistpll
mov
ds
cmc
pop
scas
fcoml
icebp
imul
sbb
stc
imul
and
jno
cmpsl
pop
push
mov
std
sbb
out
xchg
ljmp
mov
xor
icebp
das
jns
in
pop
adc
push
mov
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
cli
mov
movlps
out
sarl
xor
orb
sub
or
or
pop
in
xchg
xchg
mov
enter
loop
lock
cmp
bound
sahf
mov
scas
sti
push
daa
cmp
cmc
mov
cmp
lcall
js
mov
jne
ljmp
std
sub
rcl
add
adc
mov
leave
mov
xor
xor
inc
and
ja
imul
xor
jb
mov
pop
mov
ficoml
push
loopne
sub
jmp
dec
or
pop
sbb
fisubrs
je
int3
sbb
stos
push
out
jb
js
ja
cmpsb
mov
push
test
aad
les
or
mov
adc
mov
add
push
pop
xchg
xor
pop
test
cmp
lds
mov
xor
adc
or
add
xchg
cld
mov
andb
fadd
pop
in
sub
adc
shlb
mov
xchg
int
pop
lret
mov
lds
fdivp
ds
gs
inc
iret
mov
out
pop
in
mull
repnz
rclb
push
dec
jp
push
jg
mov
and
xor
sbbb
popw
mov
jb,pn
xchg
mov
repnz
imul
cwtl
sub
imul
cmp
daa
or
xchg
cmc
jae
jae
gs
sahf
into
mov
pop
scas
cltd
shlb
mov
ret
mov
push
push
adc
cmp
scas
ja
iret
xor
int3
aad
add
pop
jae
mov
sti
jo
mov
lcall
dec
ja
movsb
dec
add
add
mov
sub
lret
jl,pn
xchg
imul
divl
lds
aaa
jnp
js
push
orb
aad
out
arpl
xchg
sub
jbe
loopne
cmc
hlt
outsb
dec
push
add
in
jg
lods
sbb
imul
dec
pop
stc
ficompl
sub
sbb
inc
leave
jp
mov
jne
push
iret
insl
scas
inc
or
pop
in
imul
sbb
loopne
xchg
adc
outsb
subl
loop
cli
push
lea
aaa
dec
fwait
bound
sahf
sbb
push
insb
sti
dec
ljmp
mov
call
test
les
pop
mov
je
mov
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
ja
mov
xor
inc
les
xor
frstor
adc
ret
movsb
dec
popf
call
xor
cmpsb
mov
sbb
fadds
push
in
cmp
sahf
scas
push
sub
pop
lcall
enter
cmp
popf
insl
and
in
sub
gs
inc
test
dec
insl
jg
cmp
nop
fmuls
xor
lods
jbe
jp
subl
adc
xor
rcl
mov
sbb
cmpsb
je
or
pop
jb
into
jl
jle
jb
jl
push
test
jns
aad
sbb
push
cs
pop
sub
stos
dec
dec
jg
xlat
pop
inc
lret
cmc
je
arpl
loope
adc
pop
pop
mov
push
cltd
sbb
ret
mov
jo
mov
cmp
aas
dec
or
sub
dec
inc
sbb
cmp
jmp
or
sbb
push
test
imul
sub
daa
fiaddl
ja
sub
loopne
into
imul
addr16
add
test
jle
xor
and
jb
flds
xchg
pop
in
mov
xor
ljmp
jmp
std
mov
adc
jle
dec
or
inc
bound
in
cli
mov
dec
mov
inc
inc
dec
mov
clc
loope
fcomps
aad
stos
into
lds
sbb
jb
mov
je
fldlg2
jno
mov
fistpl
scas
jbe
mov
es
cmc
lea
adc
out
cwtl
adc
push
rcrb
dec
inc
mov
dec
mov
mov
sub
pop
inc
mov
jl
jne
outsl
mov
pop
xchg
cmpsl
xchg
mov
xor
jns
in
mov
sbb
mov
jo
pop
inc
adc
jne
dec
add
push
sub
dec
adc
popf
push
jge
cmp
imul
sub
data16
adc
push
adc
aad
rolb
adc
pop
sahf
mov
imul
push
xchg
xchg
outsl
orl
lods
pop
and
stos
pop
push
int
dec
repz
popa
cltd
loop
in
test
icebp
sbb
int
iret
rcll
xlat
mov
rcrb
repz
add
ljmp
mov
jbe
orl
mov
jle
dec
lds
mov
arpl
cmp
mov
sti
add
adc
mov
cmpsb
fs
and
dec
test
filds
sbb
stos
pop
jl
xchg
sbb
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
jb
push
sbb
adc
dec
mov
minps
or
xchg
cmp
pop
jge
ja
lret
sub
fnstsw
pop
jns
ja
stos
push
sub
and
arpl
arpl
cs
inc
mov
xor
icebp
inc
ja
imul
fstpt
or
pop
and
sub
dec
xor
add
fs
add
lods
add
es
mov
data16
jnp
inc
lods
leave
aas
push
xorl
push
pushf
stos
scas
lds
and
mov
out
daa
or
xrelease
stc
jbe
lds
mul
cltd
push
jno
push
pop
mov
out
xchg
es
jecxz
cltd
ret
pop
js
loopne
shrl
out
jl
clc
je
cli
icebp
roll
mov
iret
nop
cmpsl
add
ds
sub
mov
inc
rcl
adc
aaa
divb
lret
jne
outsb
or
sahf
or
mov
push
or
push
imul
lock
lods
sub
movsl
xor
inc
popa
cltd
jp
jbe
or
jbe
popa
subl
in
or
dec
dec
movb
test
xchg
push
xor
push
movsb
xor
or
cmp
pusha
mov
iret
mov
mov
xor
divl
popa
cltd
inc
arpl
imul
and
fcomps
cmc
lahf
imul
das
xchg
mov
inc
inc
add
xchg
push
test
mov
push
dec
xchg
and
shrb
mov
sub
loop
test
pop
fucomi
pushf
out
mov
pop
or
adc
in
out
std
xchg
pop
add
xchg
adc
pop
add
xchg
imul
jnp
sbb
jnp
dec
push
dec
jns
je
test
adc
aam
lcall
mov
js
mov
js
gs
xor
cmp
popa
cwtl
lock
sahf
dec
dec
arpl
stc
fisubrl
xchg
cs
xor
or
mov
mov
mov
sbb
push
pop
les
inc
int
mov
imul
xchg
xchg
fcomip
sbb
cmc
push
test
adc
mov
lea
or
imul
fadds
sti
and
inc
fisubrs
cmpsl
fisttps
stos
push
jmp
jo
and
sub
loope
push
decb
adc
test
addb
cmp
adcl
or
xchg
arpl
loope
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
stos
pop
lods
nop
sbb
adc
mov
xchg
adc
and
inc
push
sub
sti
fisubrl
xor
jmp
insb
cmp
outsl
jnp
jno
xchg
mov
ffreep
mov
cmp
mov
mov
imul
jo
fidivrs
pop
pop
or
sub
sbb
dec
test
pushf
les
lods
xchg
and
and
inc
xor
xor
jae
out
and
push
pop
in
hlt
mov
out
and
add
push
cli
inc
dec
fsubs
cwtl
mov
and
jb
dec
inc
shrl
rclb
lea
fdivrl
jne
loop
xor
imul
jnp
inc
push
cmp
mov
xlat
pop
lods
shrb
dec
hlt
xchg
aas
outsb
sbb
imul
pop
ret
insb
cmc
std
and
insl
add
imul
cmp
xor
inc
xorb
or
or
sti
cmp
pop
mov
and
xor
test
pop
pop
bound
dec
jp
in
fprem
add
jge
rcrb
jno
dec
or
andl
ljmp
jne
or
aas
aam
sub
dec
cmp
mov
xor
pop
jae
sub
shrb
mov
addr16
sub
or
repz
push
adc
xchg
xchg
mov
stos
xchg
out
push
mov
inc
aaa
fwait
cmp
rorb
xor
dec
jo
jecxz
clc
clc
rcl
jne
test
mov
pop
push
sbb
mov
imul
sbbb
inc
arpl
insb
xor
mov
imul
mov
shrb
jmp
lods
pop
or
aad
dec
xor
stc
ja
sbb
insl
jge
test
sar
call
sbb
xchg
push
xor
push
cli
shl
xor
in
cli
pusha
mov
les
xchg
dec
loope
xor
mov
outsl
push
mov
dec
sbb
dec
loope
mov
fwait
ja
scas
jns
push
test
adc
fimull
mov
mov
popa
in
iret
cld
popa
cmc
dec
call
cmp
sub
or
adc
jp
dec
ret
es
mov
ja
jno,pt
jne
bound
out
mov
js
out
loope
outsl
cmp
or
jne
mov
xchg
sub
ret
xor
lahf
cmc
adc
fisubrs
jecxz
pop
call
js
adc
push
stos
scas
pop
stos
add
in
pusha
stos
push
loopne
pop
mov
xchg
xchg
sahf
push
jmp
scas
in
jp
loop
cmpsl
add
out
inc
and
jo
and
out
push
mov
scas
sbb
xor
mov
mov
aas
sbb
push
pop
mov
push
sbb
int
fwait
xchg
xorl
and
lea
cmp
or
je
jno
mov
movsl
jl
out
mov
movsl
testb
jl
pusha
cmc
mov
inc
fmuls
jmp
ss
in
xchg
inc
shlb
mov
cmp
jg
fisttpll
inc
inc
jb
push
imul
push
decl
cld
sub
inc
sub
outsb
dec
jae
js
repz
sbb
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
push
nop
js
unpckhps
mov
icebp
sbb
jmp
aas
xchg
dec
aaa
cmp
or
and
adc
xchg
das
ja
cmpsb
inc
lret
sbb
push
fsubrl
fsincos
cmp
add
icebp
stc
mov
pushf
sbb
lret
mov
popf
adc
scas
and
adc
or
and
shr
push
test
and
inc
xchg
mov
imul
icebp
sti
sub
inc
or
push
fstpl
push
jp
pop
js
jo
stos
mov
movb
pop
pop
mov
lret
cltd
cmpsl
ret
mov
mov
lret
popf
andb
pop
mov
add
arpl
push
loopne
dec
fwait
adc
jp
sub
push
mov
loopne
arpl
cmp
lock
add
lock
out
inc
into
mov
sbb
test
xor
xchg
mov
int
in
push
cmp
and
xchg
mov
mov
fisubrl
aaa
mov
mov
fisttpll
pop
pop
jo
sub
shrb
pop
es
es
adc
negb
mov
out
fstl
add
fdiv
hlt
sbb
dec
add
ds
insb
andl
jmp
jl
jge
in
fwait
inc
adc
dec
daa
mov
jmp
cli
mov
in
iret
push
sbb
xchg
test
test
mov
aam
int3
add
je
sub
rcrl
xlat
stos
push
and
les
movl
xchg
mov
push
lcall
and
ss
adc
adc
push
add
jg
test
sbb
inc
leave
sbb
pop
daa
sub
stos
lahf
aas
pusha
push
out
icebp
mov
sbb
cmp
cltd
fiadds
or
pushf
jl
in
rcrl
add
inc
xor
or
arpl
scas
fcomps
rorb
dec
cmc
rcll
xchg
add
mov
daa
fstpt
hlt
jg
nop
or
in
cltd
or
addr16
dec
testb
mov
and
xchg
mov
mov
jge
dec
cmp
lock
jo
adc
je
inc
push
mov
jns
stos
in
inc
cmp
ljmp
adc
rcl
mov
repz
dec
mov
or
pop
xchg
dec
pop
xchg
leave
data16
add
push
aam
movsb
sarl
mov
inc
and
sbbb
pop
mov
pop
sar
stos
sub
push
jge
cwtl
sbb
pop
cmp
dec
dec
std
jbe
mov
mov
mov
sub
sub
adc
bound
xchg
xor
fadds
mov
add
push
ds
inc
sbb
stos
xchg
ss
push
fnstsw
call
ja
inc
cmc
or
shrb
mov
cmc
xchg
xchg
test
sbb
fwait
repnz
xor
shlb
dec
mov
filds
add
cmc
popa
dec
std
es
cs
xchg
in
adc
cltd
in
test
outsl
adc
push
mov
and
lds
in
add
dec
out
jg
push
les
imul
mov
sahf
and
mov
cmp
xor
xchg
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
push
pusha
loop
sub
or
imul
adc
mov
jae
or
loopne
push
fdivl
js
sub
clc
ret
pop
or
das
into
jnp
lret
mov
or
jo
lret
mov
jno
inc
nop
mov
mov
xlat
xchg
xchg
iret
xlat
pop
aam
subl
xor
xor
dec
pop
jmp
xchg
or
sbb
sub
imul
daa
cs
fs
xchg
movsb
scas
icebp
ds
adc
xchg
inc
and
mov
xor
das
movsb
scas
cltd
jo
shr
add
clc
lret
or
sub
mov
mov
clc
je
push
imulb
or
push
nop
data16
rcl
xor
push
in
add
mov
xor
arpl
lea
call
gs
dec
or
or
push
iret
ljmp
test
cltd
push
fcompl
inc
jns
mov
dec
loop
mov
jg
jae
jge
mov
mov
int
loop
ret
pop
addb
cmp
and
adc
mov
loope
add
out
fiaddl
jbe
sub
ja
into
mov
cmp
sub
sub
pop
add
cmp
dec
mov
shrl
test
leave
int3
ficoml
outsl
push
es
xchg
xchg
out
jno
jae
bound
mov
adc
aaa
cs
movsb
mov
aas
in
inc
pop
rorl
dec
loopne
nop
popa
arpl
aaa
jb
and
dec
cmc
add
loop
or
or
enter
in
dec
jle
mov
mov
or
push
loope
mov
loope
mov
lahf
sub
or
in
cld
loope
out
rcll
push
shll
sub
rcrb
cwtl
into
aam
addr16
aad
out
adc
loope
inc
inc
test
push
leave
outsb
js
jp
fwait
mov
fs
dec
xor
and
lods
xchg
pop
adc
sbb
popf
sbb
mov
cmpl
and
dec
cmp
and
adc
std
inc
xchg
mov
mov
push
roll
xor
and
int3
pop
inc
loope
pop
idivl
ja
out
lods
enter
cmp
push
ds
lcall
push
jb
loope
or
sti
testb
mov
inc
insb
sbb
adc
sub
add
fs
jns
pop
mov
std
icebp
sti
pop
cmc
inc
dec
je
jg
pop
bound
or
insl
push
jecxz
ja
cmpsb
lds
mov
lret
sub
mov
into
pop
and
lock
fs
cwtl
int
push
xor
inc
push
xchg
icebp
push
inc
test
stc
lahf
mov
rolb
pop
jp
xorl
int3
add
lock
in
fldcw
cs
mov
out
popf
push
les
in
mov
xor
cltd
adc
aam
dec
pusha
std
stos
or
or
sahf
jo
loop
dec
jg
xchg
aad
cmpsl
cmp
pop
fsubrp
movsb
inc
adc
push
in
in
cmp
push
insl
xlat
orps
arpl
sbb
sub
push
mov
jo
jne
inc
insb
in
xor
pusha
cmp
call
inc
cwtl
dec
sbb
mov
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
add
call
adc
jne
shlb
std
xchg
test
mov
push
push
shll
in
mov
int
ret
inc
repnz
and
ljmp
es
cld
mov
lret
cld
test
movsl
jle
daa
xchg
test
inc
mov
and
bound
dec
inc
in
push
dec
outsb
inc
ds
insl
push
mov
scas
dec
sub
mov
add
paddsb
ds
mov
inc
jmp
xchg
xor
aaa
xlat
aaa
mov
ljmp
addl
shr
and
cmpsl
inc
push
push
call
cmp
sbb
cmpsb
loop
dec
xchg
jl
mov
fists
inc
or
sub
mov
jl
push
jb
jo
push
push
mov
jno
pop
lds
sub
lahf
rcll
inc
andl
inc
mov
xor
cmp
jne
popf
in
subb
pop
add
xor
aam
xor
into
pop
mov
sahf
sbb
jp
xchg
pop
outsb
cmp
test
aaa
and
nop
xor
enter
icebp
mov
jns
lods
xor
movsl
dec
divb
popf
adc
jg
pop
or
out
divl
dec
fidivrl
sub
lods
repz
mov
jp
out
dec
clc
fistl
ret
cltd
jmp
movl
lods
ds
or
pop
sbb
inc
adc
xor
loope
movsl
jecxz
scas
mov
cmp
xchg
jge
insb
lods
adc
insl
movsl
and
mov
xchg
mov
testl
ret
mov
ds
jns
sbb
frstor
jmp
shrl
lods
pop
xor
popf
stos
call
or
sbb
xchg
stos
mov
dec
enter
xchg
lahf
data16
and
inc
sbb
stos
sub
inc
push
outsl
fld
mov
ljmp
int
ds
push
shll
repz
sti
aam
cwtl
push
dec
cmpsl
out
jnp
lods
mov
aaa
gs
or
cmp
push
xor
mov
push
sbb
adc
jns
test
add
mov
les
repz
fistpl
push
arpl
divl
xchg
fdivr
mov
popf
aaa
and
lods
loop
jb
push
adc
sti
pop
jno
jbe
push
in
push
ret
rol
push
pop
fdiv
movb
pop
xor
aad
repnz
rcr
cmp
sub
pop
shlb
in
pop
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
push
std
adc
adc
or
sbb
loope
data16
push
and
insl
jle
pop
les
xor
push
lret
outsb
fstpt
dec
lahf
jnp
clc
sbb
aad
mov
push
popf
add
sbb
cs
scas
mov
mov
ret
pop
cmpsb
mov
aam
dec
and
sub
or
aas
pop
mov
mov
xchg
pushf
mov
stos
or
jns
movsl
xor
cltd
scas
in
jno
movsl
arpl
jecxz
mov
xchg
jne
and
in
nop
fwait
mov
movsl
lea
fldcw
jnp
sub
sub
xor
out
cli
dec
cmp
shrb
push
push
lret
xchg
test
out
out
mov
jl
jg
lret
sbb
pop
xchg
loope
popa
jbe
repnz
je
mov
push
mov
addl
push
imul
pop
mov
dec
mov
stos
imul
push
push
cmp
dec
dec
jge
repnz
lcall
insb
stc
and
jae
shll
pop
sti
andb
pop
inc
xor
in
enter
sbb
xchg
test
lock
insb
ds
pop
mov
stos
push
mov
roll
popf
add
lret
and
jne
jb
aas
jns
aad
lock
pop
ja
out
xor
addr16
fldcw
mov
movsl
and
ficomps
add
fdivl
movb
mov
ret
mov
xlat
or
lods
adc
lds
adc
mov
and
sub
mov
mov
add
adc
xorl
cmp
ror
std
int3
and
rcr
outsl
xor
fwait
push
data16
or
sbb
das
aas
in
jno
test
push
cltd
movsl
loop
cmpsb
cmpsl
mov
stos
scas
and
loop
jno
cmp
xor
dec
jb
mov
xor
sbb
ret
arpl
or
jge
cld
jae
gs
aas
mov
sbbb
mov
mov
adc
or
lods
jge
xchg
sub
test
cli
mov
lods
clc
sbb
enter
jl
cmp
push
cmp
sbb
jle
adcl
hlt
xchg
jb
scas
add
and
fwait
jge
out
dec
movsb
jno
add
lds
push
orb
and
xchg
in
outsl
inc
js
fcmovb
xlat
fnstenv
push
push
cs
pop
lea
test
lock
cmpsb
inc
movsl
insb
je
aaa
cmpsb
adc
dec
mov
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
mov
mov
xchg
movlps
push
adc
ljmp
mov
fistpll
xor
dec
icebp
ja
dec
imul
addr16
mov
jge
dec
sahf
lea
add
testb
xchg
mov
clc
inc
js
scas
and
push
mov
negb
xchg
dec
stc
or
mov
inc
test
ficomps
xor
mov
icebp
pushf
add
outsl
add
push
adc
jl
adc
mov
adc
dec
inc
jl
aam
xchg
lods
dec
fldenv
mov
and
or
xor
push
pop
dec
scas
or
addb
push
call
loope
sar
mov
enter
es
fwait
movsb
or
mov
mov
jmp
xor
int3
mov
popf
aas
cmp
dec
aad
cmpsb
call
sub
mov
rcrl
inc
adc
pop
loopne
ja
fstpl
push
push
test
push
nop
xlat
inc
pop
cmp
and
sahf
nop
inc
pop
lods
xor
dec
xchg
xchg
std
mov
lret
fldt
mov
mov
aam
dec
push
dec
dec
sbb
pop
add
dec
mov
xor
jae
push
sbb
icebp
int3
adc
jmp
add
pop
cmc
mov
mov
push
iret
xchg
and
mov
test
jecxz
inc
shll
sti
mov
cli
roll
push
fnstcw
xchg
mov
push
fidivs
pushf
mov
lahf
adcb
mov
and
adc
mov
xchg
ret
mov
shl
test
jo
dec
ljmp
or
sub
pop
sub
daa
repnz
sub
lock
adc
cli
sbb
mov
mov
sub
sbbl
out
test
mov
dec
clc
pop
sub
jg
stc
xchg
cmp
adc
les
aas
cmc
pop
jnp
shl
pop
cmp
jnp
inc
add
montmul
cmpsb
rcl
sub
adc
jae
jmp
dec
push
data16
xchg
xchg
es
mov
popa
mov
frstor
insb
dec
out
popf
or
orl
jo
sti
adc
push
pop
mov
and
dec
push
xchg
push
adc
push
js
jge
dec
hlt
inc
add
in
dec
sbb
std
xchg
jae
stc
xchg
mov
movsl
add
mov
jge
test
fidivs
adc
jmp
or
inc
mov
fdivs
fistpll
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
sub
jle
out
adc
adc
mov
and
ss
lods
int
xchg
lods
sub
js
inc
bound
dec
sub
es
lock
jnp
push
js
dec
sbb
aad
nop
sub
xchg
fcoms
lea
adc
push
stc
push
mov
mov
stos
sbb
ficomps
iret
inc
clc
decl
mov
inc
rorl
into
mov
int3
cmc
xchg
mov
mov
cmp
cld
int3
adc
jns
orb
idiv
push
dec
insl
pop
cmc
add
cld
jle
jns
jb
mov
adc
xor
or
add
les
fiadds
lcall
fadds
movsl
jne
hlt
shlb
mov
and
mov
mov
add
fwait
lahf
pop
fdiv
dec
rcl
xor
dec
sbb
lock
pop
mov
aad
and
xchg
jnp
add
jnp
mov
inc
xor
mov
push
addr16
mov
and
xor
jne
sub
jb
mov
lret
mov
test
ret
ret
jb
fdivrs
cmpsl
jnp
mov
fstl
push
popl
stos
inc
je
loope
xor
into
cld
rcrb
notl
loopne
sbb
ss
or
push
pop
add
jle
xchg
frstors
imul
jns
cmp
icebp
inc
dec
push
adc
mov
in
test
xor
leave
cmp
les
mov
scas
and
inc
cmp
pop
lret
xchg
rcl
and
cmpl
xrelease
lret
cwtl
inc
add
push
inc
add
jmp
pop
and
mov
jg
dec
push
movsb
fwait
pop
mov
aas
xor
fistl
aam
jne
mov
push
pop
sub
adc
fsts
lcall
fidivl
sahf
into
cld
jg
jg
xchg
insb
lret
dec
or
pusha
lret
push
mulb
mov
nop
jp
push
mov
cmp
cmpsl
fstpt
in
dec
repz
lcall
and
hlt
inc
outsl
test
fadd
mov
loop
bound
jle
mov
and
in
jae
xor
sti
aad
jo
xchg
inc
test
rcll
mov
pop
and
jecxz
adc
or
mov
test
mov
in
jne
lock
dec
fs
sbb
movsl
movsb
lcall
push
or
lods
mov
outsb
mov
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
clc
sbb
sub
adc
cmp
pop
outsb
add
fadds
xchg
pop
test
nop
stos
ret
mov
ja
pop
daa
jle
test
dec
jl
mov
sbb
or
bound
shll
cmp
cmc
add
dec
dec
mov
sahf
les
dec
gs
out
dec
xchg
sub
push
pop
aad
stc
adc
xor
test
mov
pop
in
or
mov
inc
nop
aaa
xor
pop
addb
xor
mov
push
fdivrs
pop
mov
ss
dec
xchg
sbb
roll
mov
adc
in
jbe
cld
jno
addl
inc
lods
lcall
dec
ret
mov
stc
nop
out
mov
cld
out
pop
mov
pop
cmc
push
popa
mov
pop
adc
inc
add
divb
xchg
divl
or
int3
fstpl
out
xchg
cs
mov
xchg
xchg
es
mov
out
lds
xor
popa
shl
xchg
loopne
mov
push
dec
inc
or
gs
sub
dec
in
cmp
es
aad
scas
sbb
sub
sahf
loope
pop
and
inc
adc
iret
jns
lret
lret
inc
flds
mov
sbb
les
mov
and
mov
in
lret
adc
pop
xchg
sbbl
or
pop
jbe
mov
mov
outsb
xor
and
mov
cmpsl
and
mov
popa
stos
xor
jle
lldt
jle
mov
nop
cmpsb
push
loopne
pusha
in
sbb
sbb
pusha
cmp
repz
nop
aas
jp
rorb
mov
insb
mov
mov
xchg
mov
cltd
and
ss
jne
xor
ret
jbe
lea
mov
fdivrl
jle
sahf
adc
subl
lds
pop
push
push
imul
into
fdivl
stos
mov
data16
mov
add
orl
push
jns
mov
sbb
in
jle
shr
mov
mov
and
fcomps
cmp
mov
adc
adc
nopl
push
mov
xchg
mov
adc
pop
inc
lods
or
push
xchg
lret
push
icebp
cli
fidivrs
mov
mov
inc
addb
mov
rolb
pop
mov
mov
fdivs
es
sub
xchg
xchg
jecxz
jl
fsts
popf
sub
into
mov
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
sarb
in
adc
mov
das
fistl
sub
xor
pop
mov
das
int3
rol
jl
add
ret
adc
sub
cmpsb
in
or
inc
xchg
and
pusha
es
pop
mov
xchg
shll
in
out
sub
jno
leave
and
sbbl
jbe
loopne
bound
fs
dec
int
xchg
sub
inc
mov
xchg
cltd
xor
pop
mov
inc
inc
adc
xor
in
out
dec
loope
movsl
rcll
nop
stc
in
adc
shll
test
adc
push
jecxz
or
mov
xchg
call
cmp
mov
repz
out
push
ljmp
data16
sub
test
ret
inc
and
xor
lock
mov
pop
xchg
lret
lods
jp
cld
fisubrs
mov
fnstsw
push
jp
cmp
aam
cmp
dec
int3
xlat
mov
cmpsl
sub
add
in
add
pop
mov
popf
je
mov
lods
repz
int3
cmpsb
icebp
jb
xchg
jne
test
inc
push
and
jno
stc
mov
or
jne
xchg
sarl
dec
arpl
addb
adc
push
daa
push
inc
jae
push
lock
hlt
insl
push
dec
enter
add
out
mov
shlb
jb
hlt
mov
jmp
fistl
cmp
sub
jge
std
jo
sbb
imul
xchg
xchg
mov
rcr
push
call
xchg
in
repz
js
scas
mov
hlt
mov
psubq
mov
xchg
enter
push
ret
pop
lahf
push
pop
pop
popf
insl
jae
orb
std
or
je
out
in
xor
insl
jmp
ljmp
sti
sub
sub
mov
jl
je
mov
loope
fists
insb
mov
mov
popf
js
mov
pop
arpl
xlat
enter
mov
inc
or
gs
or
jnp
mov
das
test
lahf
push
xchg
loopne
pop
sbb
test
popa
sbb
pop
sbb
cmp
pop
cmp
add
dec
adc
les
hlt
push
ljmp
mov
dec
fiadds
xchg
fildll
mov
mov
xor
push
or
mov
jge
aas
xor
jne
das
dec
and
jb
sbb
cmp
scas
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
in
xor
adc
adc
sahf
sbb
lea
out
mov
dec
xchg
jp
cltd
icebp
mov
jbe
sub
mov
or
mov
push
xlat
rolb
hlt
and
pop
jge
mov
shlb
rclb
les
jle
rcl
jno
and
sbb
in
inc
and
mov
mov
jno
inc
jle
test
inc
xor
adc
add
push
mov
mov
inc
push
dec
into
decl
add
push
sti
cwtl
shl
mov
dec
push
ret
insl
mov
adc
cld
test
jg
das
loope
dec
sbb
jb
dec
mov
imul
gs
fildl
sub
adc
sbb
ds
pop
int
push
aam
addr16
jno
mov
lods
inc
inc
xor
mov
loop
push
mov
or
and
adc
je
and
sub
pop
pop
jmp
enter
xor
adcb
push
scas
inc
jecxz
push
add
push
fsubs
pushf
test
push
adc
das
jl
or
rcl
mov
js
xchg
cmp
sub
dec
mov
jmp
mov
jg
cld
pop
lahf
xchg
lods
or
fstp
mov
jmp
rclb
mov
stc
dec
mov
cs
lahf
out
jb
jb
jg
ret
mov
sub
in
add
push
sti
popa
mov
test
in
push
enter
xor
mov
jp
scas
dec
aad
pop
inc
mov
add
sbb
xchg
jb
ljmp
orl
inc
xchg
out
xchg
aad
sbb
enter
rcrb
lahf
add
movsb
lcall
push
cmpsl
mov
je
add
xchg
loope
mov
xchg
xchg
push
sub
in
sub
cld
push
and
mov
cmp
sar
dec
push
and
insl
into
sub
push
dec
push
push
and
mov
stos
in
adc
push
fistps
pop
and
test
xor
mov
sbb
and
stos
and
fucom
pop
stos
push
jne
jnp
testl
filds
pop
jmp
mov
jns
inc
jmp
push
fwait
lods
hlt
jbe
add
jp
pop
add
icebp
pushf
and
js
test
scas
add
jl
loope
mov
lret
inc
aad
jne
pusha
cmp
loope
movsl
push
mov
mov
cld
pop
setp
cmpb
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
jle
ficoms
adc
jns
out
cmpsl
popa
cmp
imul
das
and
arpl
enter
mov
push
loopne
stos
rep
inc
sbb
push
inc
or
mov
adc
inc
cmpsl
jg
cmpsl
adc
std
cmpl
and
mov
pushf
and
sbb
sbb
fsubl
ds
pop
dec
subl
in
sbb
stos
push
dec
xor
rcll
pusha
cmp
pop
out
in
mov
aad
test
or
loope
andb
sarl
mov
call
aas
pusha
lret
jl
in
popf
inc
adc
jo
sub
mov
and
lods
lcall
lds
pop
and
cmp
gs
inc
dec
mov
addr16
je
sub
lahf
pop
or
and
pop
and
jecxz
hlt
in
xor
scas
addr16
rcll
sbb
call
stc
dec
call
jo
jg
mov
xchg
adc
enter
repz
xor
inc
negb
and
addr16
inc
mov
sti
and
mov
jg
jle
sub
enter
sbb
xor
pop
fsubrp
rol
cmp
stos
aad
mov
xor
cmpsb
cmp
and
add
push
push
pop
loopne
adcl
jle
lea
clc
or
test
jmp
add
test
push
xchg
fmuls
subb
jae
jl
fidivl
pop
mov
frstor
scas
frstor
test
out
sbbb
inc
sub
inc
das
fistpll
enter
repz
push
mov
jne
jb
jo
cmpb
xchg
ljmp
xchg
fwait
out
cmp
lea
mov
stos
xchg
nop
inc
inc
push
push
xchg
orb
cmc
push
outsb
pop
jnp
dec
inc
push
sbb
ds
rclb
loopne
pop
dec
pushf
jo
and
mov
repz
xchg
pop
or
das
jns
mov
xchg
jo
mov
cmp
sarl
jnp
fwait
js
nop
jle
jg
gs
aad
ret
or
ret
int
add
mov
sbb
inc
frstor
mov
dec
ja
rolb
mov
loop
imul
pop
cmpsl
lods
lcall
sub
dec
sub
mov
jge
xchg
fbstp
xlat
test
cmp
sub
cmp
fidivrs
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
mov
fdivrs
xchg
movlps
pop
sar
aas
movsl
stc
add
sbb
cli
and
nop
les
repz
cmc
add
xchg
mov
aam
andb
popa
fsub
ja
cltd
lods
sub
xchg
lock
jae
cmp
pop
cltd
push
push
imul
or
ret
repz
mov
sub
sub
xchg
test
test
in
test
fcomip
sub
mov
add
scas
xchg
call
xchg
dec
add
das
sbb
xchg
or
fdivrs
jge
adc
xor
inc
mov
hlt
pop
movb
push
imul
adc
movsl
jo
in
cld
push
mov
inc
or
out
and
gs
mov
std
out
cltd
lahf
and
pop
fdiv
loop
sbb
lret
cmc
jns
sub
icebp
and
cltd
repnz
mov
lea
ret
xor
pop
fcompl
loop
xor
inc
dec
ret
and
adc
insb
xor
and
stos
cltd
dec
lods
cmpsb
xchg
xor
pop
in
je
and
shll
cltd
push
cmp
lods
hlt
call
mov
xor
out
add
test
mov
jp
hlt
add
sbb
out
filds
rolb
enter
fdivrs
bound
call
add
push
cmpsl
cld
inc
lahf
inc
cmpl
push
adc
movsl
imul
inc
jle
test
popa
pushf
js
xlat
arpl
decb
call
jecxz
mov
mov
pop
cmp
xlat
outsl
in
jno
outsb
xor
xor
cmp
hlt
inc
mov
sub
lret
jns
lods
sub
mov
pushf
lcall
test
testb
fsubrl
mov
lea
std
pop
movsb
inc
in
dec
notl
sub
leave
and
mov
push
or
sub
sahf
out
repz
pop
rcrb
fmulp
cltd
ret
int
add
jno
stc
add
mov
push
and
pop
insl
adc
iret
cmp
loop
add
pop
or
or
push
push
adcl
or
sti
jmp
aas
cmp
cmpl
jge
mov
inc
pop
mov
movsl
jg
or
inc
nop
jecxz
lods
and
push
in
jno
sbb
mov
nop
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
lcall
fdivrl
and
inc
push
mov
pushf
mov
inc
aaa
xor
inc
xchg
iret
sbb
stos
jge
xor
roll
fisubl
mov
xchg
mov
mov
sbb
dec
pusha
daa
adc
adc
and
movsb
jg
or
ljmp
mov
jmp
dec
sub
and
mov
and
add
insb
in
jne
ljmp
enter
pusha
and
inc
mov
push
lock
jno
ss
fisubl
test
cli
sbb
popa
andl
sub
dec
pop
mov
fstps
xor
jb
push
pop
lahf
sbb
gs
push
sbb
ds
out
and
mov
push
add
or
fnstenv
push
ljmp
jbe
iret
inc
mov
test
icebp
fs
in
movsb
sbb
and
and
push
mov
xchg
ss
fisubl
and
lds
sub
jmp
or
fildll
out
js
jae
dec
hlt
int
popf
xchg
imul
xchg
mov
iret
clc
loop
lea
in
add
and
xlat
sahf
sbbl
in
sbb
xchg
push
pop
bound
lahf
repz
aad
jae
xchg
rcr
xor
push
outsl
add
and
out
cmp
adc
pushf
lock
scas
add
pop
mov
out
adc
sbb
clc
jb
xor
dec
in
push
orb
add
out
mov
push
mov
xchg
jl
lds
adc
test
cmp
push
mov
cwtl
pusha
inc
shlb
sub
popf
pop
or
imul
das
jmp
sbb
mov
cmp
leave
mov
xor
jnp
idivl
adc
jnp
inc
jbe
outsl
daa
jne
cmovnp
lods
movsb
out
pop
sar
es
cmp
cmc
push
jb
jecxz
out
lahf
popa
pop
arpl
mov
popa
sub
push
add
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
jno
mov
enter
loopne
cmp
dec
push
xor
cwtl
call
orb
mov
jne
push
and
adc
inc
xchg
adc
aad
fisttps
ret
push
jecxz
or
repnz
test
cwtl
sbb
pop
xlat
cltd
shlb
test
aad
loopne
inc
fs
jge
fxch
dec
gs
xchg
shr
mov
mov
sub
xor
fwait
decl
sub
lahf
xchg
sub
sub
push
or
out
jg
test
movsl
test
mov
mov
jb
addr16
mov
mov
in
inc
push
cmp
mov
or
inc
jg
sarl
cwtl
jg
mov
jno
int3
mov
das
outsb
jmp
inc
sbb
xchg
pushf
mov
lret
sbb
shll
fisubl
jae
insb
fdivrp
scas
dec
pop
leave
orb
pop
js
xchg
push
and
mov
mov
mov
xor
stos
adc
ljmp
cmpsl
sbb
loop
fbld
js
sbb
push
leave
push
inc
scas
jno
insl
push
aas
stc
aaa
daa
xchg
mov
and
testl
repz
rcr
push
sbb
push
and
roll
pop
fstl
lock
std
or
popf
sbb
and
aaa
cmpsl
test
cmp
ret
dec
cmp
je
test
sarl
addr16
push
sbb
jg
jecxz
sti
daa
pop
icebp
cmc
popf
es
out
pop
popa
clc
dec
jp
mov
ror
rclw
pop
xchg
jo
mov
inc
imulb
xchg
aaa
pusha
mov
lret
pop
mov
pop
jecxz
lret
insl
xor
test
push
fsubrs
dec
out
jle
or
pop
fistps
popf
leave
xchg
scas
repnz
std
outsl
hlt
mov
out
jno
jecxz
mov
jmp
push
pop
jo
aam
int3
jnp
jp
movsl
adc
pushf
pop
and
shll
test
inc
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
dec
or
adc
movlps
adc
nop
xor
mov
mov
cwtl
pop
jmp
add
dec
loope
cmp
test
lock
fisttps
dec
icebp
stos
mov
adc
xor
and
add
cmpsl
addr16
cs
insl
and
ret
clc
add
aam
mov
imul
cmp
std
aas
outsl
pop
cmpsl
push
icebp
mov
push
sub
inc
daa
and
adcb
sti
imul
rcll
xchg
outsl
mov
mov
mov
cmp
xorl
dec
and
xchg
mov
xor
cwtl
addb
and
imul
dec
xchg
out
lock
mov
movsb
pop
pop
fnstsw
fsubr
push
aam
rorb
mov
lret
add
pop
xchg
das
out
ss
scas
pop
pop
addr16
in
cmova
xchg
push
roll
mov
xchg
cli
cmp
push
adc
std
mov
sub
ss
jecxz
cltd
sbb
mov
push
mov
add
mov
and
pop
add
mov
ss
jmp
add
push
adc
popl
add
iret
and
cs
filds
push
cmp
cmp
jge
dec
sub
jmp
fwait
pop
mov
mov
and
xlat
icebp
sbb
movsl
xor
or
xorb
lea
and
testb
dec
mov
lods
jle
sbb
sub
mov
adc
sub
xor
mov
push
lret
jno
add
popa
sbb
adc
loop
push
push
pop
sub
es
add
xor
jnp
mov
pop
std
jbe
push
jmp
jg
insl
rcrb
pop
loopne
aas
xor
sahf
ficoml
sbb
dec
mov
loope
loopne
loopne
add
divl
ret
sbb
addr16
pop
cmpsl
or
cmp
adc
xchg
sbb
lods
popa
out
jbe
push
pop
push
push
jae
jo
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
mov
adc
adc
insl
dec
jo
ss
fisubs
pop
lret
hlt
inc
xchg
in
mov
and
bound
adc
stos
pop
ds
dec
popf
pop
cmc
and
loope
divb
dec
jne
pop
popf
mov
push
idiv
mov
div
jecxz
out
shlb
pop
add
cmp
ret
out
sbb
aas
cmovnp
push
cmp
pusha
jl
lret
and
jle
ljmp
mov
pop
mov
mov
enter
nop
cvtps2pi
leave
aad
repnz
sub
jne
lcall
pop
push
mulb
add
pop
mov
mov
push
fbld
adcb
pop
or
xchg
xor
mov
mov
dec
shrb
push
sub
cmc
pop
fbld
sub
rcrb
adcl
into
mov
js
es
cld
jns
das
in
mov
sti
cmc
stos
sbb
mov
mov
and
cs
push
pop
mov
add
mov
fnsave
das
test
inc
loopne
jae
sbb
jge
gs
and
mov
pop
and
add
enter
insl
jne
xchg
fdivrl
leave
jl
fsubrl
dec
faddl
add
arpl
aam
mov
pop
and
stos
das
mov
je
xchg
jae
insl
clc
cli
add
sub
aam
cli
jo
aas
idiv
shr
lahf
test
and
mov
inc
insb
pusha
ds
mov
inc
dec
sbb
ss
mov
fcmovb
aad
inc
inc
mov
insb
add
sub
mov
jno
push
and
ljmp
fmull
or
pop
shr
jbe
outsb
xlat
sbbl
xlat
outsb
or
jae
call
jp
inc
mov
hlt
jle
xlat
ja
popa
pusha
roll
mov
push
in
push
add
mov
fstl
stos
ja
out
insb
cs
xorb
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
push
ret
enter
rolb
loope
lds
fnstcw
adc
enter
cmpsl
xchg
rorl
pop
fisttps
into
or
sbb
mov
sarb
les
hlt
enter
jne
and
xabort
fcoml
push
daa
js
fsubs
scas
xchg
sbb
in
jae
aas
mov
xchg
dec
data16
pop
into
iret
mov
aad
js
push
mov
xchg
adc
mov
mov
adc
out
mov
fs
mov
dec
dec
dec
adc
inc
mov
data16
notl
mov
mov
mov
out
fcoml
sbb
stc
jmp
inc
das
mov
lock
pop
dec
shrl
lcall
stos
jo
or
adc
dec
jge
dec
push
pop
in
xor
push
jmp
inc
cmp
jb
stc
mull
xchg
cmpsl
mov
dec
out
and
mov
sbb
pusha
mov
pop
cmp
cli
xchg
clc
sbb
jo
scas
movsl
and
imul
dec
ja
fidivrl
adcb
push
int
and
lock
data16
inc
stc
mov
lea
mov
push
xchg
adc
arpl
mov
inc
xor
sub
inc
push
mov
push
imulb
dec
mov
push
mov
cmpsb
cwtl
pusha
xor
mov
div
ss
lock
out
stos
clc
mov
jbe
fadd
arpl
rolb
cld
stc
insl
mov
pop
jae
popa
mov
aaa
cmp
push
pop
nop
sub
fcompl
jl
adc
cld
jge
fidivs
add
movsl
js
push
jno
out
jb
xor
shlb
jns
inc
pop
lcall
mov
bound
loopne
mov
push
ds
sahf
mov
loop
dec
jge
xor
dec
lcall
mov
movsb
mov
repnz
add
cs
popa
or
jle
add
fimull
mov
jge
lret
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
popf
movsb
js
mov
adc
pop
inc
jmp
imul
jbe
das
popf
inc
clc
mov
sub
imul
pop
jns
scas
test
lcall
out
push
mov
movsl
or
das
and
shl
fcmove
fsubs
cmp
in
adc
stos
repnz
mov
icebp
rcrb
sbb
jg
sbb
insl
mov
pusha
and
mov
xchg
mov
fdivrs
adc
rorb
push
lea
cli
inc
cwtl
outsb
movsl
pop
xchg
outsl
fstl
mov
clc
mov
mov
addb
bound
in
pop
or
sbb
dec
pop
sarl
dec
mov
cmp
lret
push
add
stc
data16
push
mov
pop
push
frstor
out
lret
push
sbb
outsl
push
fbld
jbe
cwtl
mov
mov
xchg
push
mov
cmpsb
xor
and
dec
aaa
jmp
cmp
xchg
and
movsl
or
insb
js
jnp
addl
out
cmp
cld
mov
pop
arpl
dec
cmp
mov
dec
push
aaa
add
imul
dec
mov
leave
mov
sub
adc
mov
xchg
xor
fcmovbe
stos
leave
loopne
xlat
cmp
pushf
nop
jmp
mov
push
or
cmc
test
push
ret
movsl
push
cmpsb
jns
jle
adc
imulb
sbb
sarl
dec
or
dec
adc
adc
pushf
movsb
jae
or
jge
cmpsl
ss
insl
or
cld
inc
mov
pop
adc
adc
adc
xor
or
negl
pop
sbb
addr16
pushf
xor
es
xor
test
adc
out
addr16
mov
ss
aam
je
pop
dec
inc
mov
mov
xchg
sub
mov
in
push
aam
out
jnp
add
jns
lcall
movsl
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
fdivrl
enter
inc
add
jb
ret
push
pop
mov
bound
and
dec
test
jl
jecxz
les
mov
xor
mov
in
leave
cmp
adc
mov
adc
mov
in
pop
jb
movsb
xchg
jbe
push
and
daa
out
ljmp
or
scas
mov
fnstenv
in
mov
cmpsl
mov
mov
mov
jb
xchg
jno
cltd
cmp
and
loopne
xchg
jo
lods
sub
jbe
ficomps
sti
push
sub
adc
mov
icebp
pcmpgtd
and
je
bound
sahf
test
ss
adc
push
dec
jb
int
stc
sub
lcall
sub
rcr
adc
mov
pushw
add
add
jnp
push
or
push
pop
push
add
rorb
in
insl
xor
loope
dec
fcomi
arpl
fldenv
xchg
pop
cs
mov
jno
mov
inc
mov
push
xchg
sub
leave
aam
sbb
lods
jmp
cmc
fsts
insb
xchg
jecxz
cmpsb
sub
jl
scas
stos
adc
ljmp
out
pushw
jge
pop
push
push
les
roll
inc
adc
push
lahf
ror
cmpsb
mov
dec
jge
in
cmp
out
xchg
imul
les
divb
xor
stos
mov
adcl
lcall
adc
arpl
jmp
sti
std
push
push
cwtl
add
xchg
int3
testl
push
and
cmpsb
mov
xor
push
and
mov
pushf
add
xchg
or
mov
or
cwtl
jnp
push
jge
outsb
and
out
in
pop
movsl
sar
jge
mov
cmpsl
ja
scas
inc
jmp
push
test
leave
mov
ret
jae
sbbl
xor
test
mov
inc
imul
xchg
jb
xchg
push
outsl
xor
mulb
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
cmp
adc
movlps
cmp
add
mov
loope
test
in
std
or
mov
mov
and
rolb
lahf
aad
pop
adc
les
addr16
cli
xchg
inc
outsb
insb
ljmp
or
mov
xor
mov
pop
cmc
cltd
pop
inc
cmpsb
addr16
loope
loope
jle
mov
mov
fs
mov
sahf
dec
imul
shlb
push
mov
sub
imulb
add
jns
outsb
lods
in
dec
fwait
rcl
mov
xchg
out
jle
icebp
mov
mov
sti
mov
scas
js
aam
cmpsl
xor
movsb
mov
imul
mov
fbld
mov
and
jbe
and
mov
push
into
push
push
lea
rclb
leave
aad
sbb
loop
es
pop
dec
jmp
cmp
or
nop
negb
stc
jg
out
ljmp
daa
out
icebp
outsl
fildl
fcompl
into
repz
mov
sbb
lcall
inc
push
mov
mov
lret
jmp
outsl
push
fcoml
in
add
xlat
adc
cmp
out
sbb
dec
paddsb
xchg
adc
in
dec
in
jo
cmp
xor
ret
inc
fwait
xchg
sub
and
idivb
adc
shrb
fsubl
inc
les
pusha
aam
stos
sbb
or
enter
je
in
outsb
les
push
repnz
or
and
pop
jmp
or
pop
mov
shlb
out
fisubl
sarb
lcall
push
js
sub
add
mov
and
jle
push
pop
push
in
inc
daa
aaa
fcomi
jle
test
lahf
aas
mov
stos
xchg
jle
push
loope
xchg
pop
mov
fildl
ss
jns
jo
andb
nop
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
dec
or
lods
lcall
adc
decb
or
lahf
push
movsl
ds
adc
ja
insb
icebp
mov
and
js
jle
adc
mov
addr16
inc
sbb
mov
pushf
sub
hlt
mov
sub
adc
adc
ret
inc
cld
cmp
xor
fs
mov
cmpsl
push
pop
dec
aam
es
mov
sub
into
xchg
xchg
cmp
jecxz
cmp
and
sub
into
adc
inc
int
mov
xchg
enter
pop
lahf
jo
mov
inc
les
les
test
shll
in
in
addl
and
cmp
or
stos
cltd
scas
dec
jp
cwtl
sub
xlat
or
push
sbb
out
cli
gs
lcall
xchg
imul
into
push
or
mov
pop
push
loope
out
aad
inc
jae
push
out
sbb
hlt
push
mov
fnstsw
test
scas
into
and
jecxz
stos
rolb
sbb
les
addr16
enter
pop
pop
mov
movl
sbb
or
xor
pushf
je
out
repz
inc
es
imul
daa
pushf
inc
xchg
subb
adc
mov
or
iret
addb
push
push
cmp
clc
inc
cmpsb
push
push
dec
xchg
push
in
mov
movsb
je
xchg
add
insl
inc
in
out
jne
dec
jl
dec
xchg
push
push
aam
stc
pop
push
jb
sub
imul
fldcw
sbb
mov
xor
adc
popa
cltd
into
push
push
add
ret
mov
cmp
add
fs
cmp
and
out
out
into
lcall
jnp
jecxz
xchg
push
fs
mov
testb
mov
dec
shrb
lret
xchg
stos
cmp
insb
add
mov
mov
pop
pushf
stos
add
jb
orl
test
push
cmpsb
pop
stc
testb
mov
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
sbb
enter
adc
adc
xor
ret
js
pop
sbb
xchg
cmp
pop
jg
mov
jno
sub
mov
dec
pusha
jecxz
imul
xor
mov
pop
cltd
hlt
pop
outsb
dec
adc
jg
jecxz
mov
shll
and
stc
mov
push
and
lahf
mov
cmc
and
mov
test
adc
es
mov
mov
inc
pop
repz
or
rolb
fwait
out
adc
mov
xchg
xchg
orb
notl
decb
cs
lods
dec
jmp
aam
loop
dec
adc
aam
xor
popa
mov
push
leave
adc
cs
mov
xchg
pop
pop
je
push
and
subb
xor
ds
mov
xchg
nop
stc
push
or
and
negl
pop
push
in
movsb
fnstcw
jo
inc
je
lods
push
xor
imul
xchg
adc
xchg
scas
push
popa
cmp
ds
in
pop
sbb
push
into
into
negl
or
pop
sbb
or
loopne
sbb
sub
push
adc
sbbl
inc
jp
std
outsl
add
fldt
xchg
shll
pusha
mov
dec
xor
sub
dec
inc
inc
xor
and
stos
in
xchg
mov
sub
movsb
mov
out
mov
or
mov
stos
mov
xlat
arpl
sbb
mov
pop
insl
movsb
test
pop
lahf
jns
cmpb
xchg
js
jmp
pop
pop
sub
subl
xchg
mov
enter
mov
mov
or
push
xchg
stos
jmp
mov
mov
aad
shlb
lahf
dec
loopne
rorl
cmp
in
or
arpl
push
mov
orl
push
mov
or
lret
pop
mov
inc
fs
mov
xchg
sahf
push
testl
xor
outsb
rol
rcrb
cmp
cmp
inc
pop
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
pop
lods
add
adc
out
xor
out
es
xorl
mov
xchg
adc
out
jmp
int
lcall
and
out
leave
sub
sahf
jg
test
cltd
shll
bound
dec
jge
sbbb
sahf
jecxz
jg
icebp
inc
dec
repnz
fisttpl
ret
aam
ret
aad
fisttpl
in
dec
mov
fcomps
and
or
xchg
test
adc
jne
cmpsl
outsl
in
inc
jo
cmp
mov
fsts
and
loopne
popf
adc
dec
cmpsl
inc
pop
mov
idivb
push
sub
lea
jbe
cs
dec
push
cs
push
and
loope
int3
pop
pop
and
lock
cmpsb
lds
cmpl
lods
lea
es
pop
xor
psllw
pop
xor
js
lds
mov
adc
or
fimull
lret
dec
add
push
push
pop
jo
mov
into
ljmp
dec
push
repz
mov
aas
fistps
pop
jne
cmc
xor
dec
popa
pop
dec
xchg
cmp
cmp
popa
adcl
test
and
pop
mov
mov
sbb
xchg
pop
xor
jecxz
pushf
fcmovbe
push
xchg
lahf
aad
lcall
and
push
stos
xchg
bswap
outsl
aam
sbbb
sbb
xor
je
call
std
dec
fs
imul
sub
dec
rorl
jle
lahf
sub
pop
and
mov
or
pop
or
pop
xor
mov
pop
fmuls
fs
mov
int3
mov
or
and
and
or
jb
and
and
dec
iret
xor
outsl
lahf
pop
dec
and
jns
or
dec
dec
mov
mov
inc
stos
addr16
cmp
inc
mov
adc
aad
aam
movb
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
jne
mov
enter
punpcklwd
leave
mov
je
xor
imul
inc
icebp
push
test
mov
cs
pop
ret
sub
jne
mov
std
bound
mov
shrl
sub
fwait
lahf
xlat
addl
pop
mov
jmp
out
shrd
mov
fnstcw
aad
lods
stc
dec
call
clc
icebp
fistpll
xor
or
daa
test
mov
mov
push
sbb
aam
pop
shll
pop
mov
call
loope
mov
xchg
xchg
mov
sbb
hlt
fdivl
add
inc
cltd
loop
repz
lahf
xchg
sbb
push
add
xor
adc
adc
mov
jle
cmp
xchg
jmp
xchg
fimuls
add
rolb
xor
aas
les
loop
loopne
test
je
pop
repnz
es
sarb
test
jae
dec
add
js
pop
scas
movsl
push
mov
sub
fidivs
flds
shlb
daa
pop
lods
lahf
fimull
sarl
pop
in
add
repnz
and
enter
dec
insl
cmp
rcr
or
add
ljmp
inc
out
sbb
xchg
and
into
out
xchg
adc
and
dec
or
xchg
sub
jge
push
xchg
scas
aas
hlt
mov
and
nop
shrl
or
lret
xor
into
movsb
in
push
loop
jp
xchg
mov
pop
aad
out
or
popa
push
mul
mov
pop
das
ja
ja
mov
xchg
aad
jbe
sub
lods
fs
rorl
or
add
and
popf
arpl
xchg
les
jne
push
das
jnp
pop
sub
push
sub
jns
mov
cmp
enter
add
in
lods
sbb
daa
subl
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
xor
sbb
pop
jmp
pop
jp
shlb
mov
stos
xor
sbbl
mov
pop
mov
inc
push
xrelease
dec
mov
daa
cmpsb
repnz
dec
sahf
dec
push
adc
sub
adc
cmpsl
aam
cmpsl
and
int3
test
cli
loope
mov
cmp
mov
adc
test
dec
xor
pop
push
pusha
jge
add
fimuls
inc
xadd
pop
jno
xchg
and
arpl
loop
push
add
insl
mov
mov
clc
dec
jbe
gs
mov
and
mov
clc
adc
test
xor
cmpsl
sub
xchg
jle
sbb
lods
dec
push
push
out
cmp
mov
jmp
jnp
add
pushaw
inc
xchg
jmp
sbb
loopne
dec
add
add
inc
inc
js
mov
stos
sbb
lahf
popf
adc
rcll
mov
or
lea
xor
inc
lea
into
ja
ret
out
sahf
xlat
pop
lods
cmp
fwait
push
xlat
sti
es
inc
xchg
adc
inc
iret
imul
pop
data16
add
nop
shrb
into
test
into
inc
dec
xchg
das
popa
sub
mov
xchg
jmp
rcl
pusha
fs
inc
push
xchg
xchg
ja
adc
push
ret
sub
insb
nop
jb
mov
sbb
fbstp
sub
inc
cli
icebp
gs
out
fs
and
push
pop
pop
ds
xchg
and
lea
nop
mov
xchg
enter
mov
jmp
add
stc
mov
cmpsl
mov
mov
sti
mov
lock
sbb
add
popa
xor
mov
sbb
repz
jno
sub
cmp
jmp
xchg
sbb
jle
loop
push
mov
push
or
test
mov
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
popa
and
cwtl
adc
adc
xor
push
dec
shrl
dec
or
sarb
jmp
out
pop
mov
aaa
pushf
daa
sbb
adc
mov
push
pop
add
stos
in
adc
xchg
mov
frstor
mov
data16
popf
jecxz
add
orl
mov
mov
mov
adc
mov
std
mov
in
xchg
iret
mov
loopne
in
adc
out
popf
outsl
pop
fdivs
enter
cmp
repz
pushf
cmp
jecxz
cltd
sbb
cmp
sub
jns
cmp
mov
cwtl
sbb
push
fidivrl
iret
jae
incl
mov
dec
mov
fiadds
jno
lret
insb
bound
xlat
adc
xchg
adc
ljmp
mov
sbbb
mov
loop
mov
lret
incl
xor
mov
xchg
xor
or
sti
mov
subl
and
lcall
inc
insb
push
test
mov
mov
xor
jg
or
inc
pop
jg
fs
or
jge
pop
pop
xchg
xlat
mov
xor
lahf
shrb
call
add
cmp
cmc
leave
loope
mov
or
jl
loopne
int
xor
pop
or
inc
push
pop
mov
mov
cmc
or
or
les
mov
jmp
mov
clc
insl
adc
mov
daa
mov
je
aad
jae
divb
std
sub
push
cld
cmp
mov
mov
mov
add
pop
repz
pop
and
jnp
pop
das
jge
sbb
cmp
out
pop
divl
xchg
adc
loope
insb
lret
sbb
sbb
add
je
insl
or
xor
fcomps
movsl
xchg
pushf
mov
cmp
adc
in
enter
jno,pn
dec
sub
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
enter
xchg
adc
adc
or
xor
daa
and
xchg
jl
pop
dec
mov
push
roll
mov
and
stos
addr16
les
add
xchg
dec
jp
stc
leave
movsl
xor
jle
insb
cmp
jp
push
mov
loop
add
adc
jb
adc
cmc
adc
nop
mov
xor
xor
and
sbb
jle
popa
push
cmpsb
aad
push
decl
push
sub
lds
dec
repz
jl
cmp
ds
push
cli
xchg
mov
popf
fcomi
mov
sub
rcl
into
out
sti
js
cmc
fstl
jae
lods
lcall
or
leave
div
ret
nop
mov
pop
pop
xchg
xor
pop
and
push
ds
repz
les
adc
mov
mov
loopne
das
aaa
mov
ret
mov
cmp
push
lcall
and
xchg
bound
mov
pop
and
out
enter
movsb
dec
ret
das
cmp
jmp
add
outsb
inc
mov
fistpl
loopne
inc
lahf
or
or
stos
or
aam
sbb
xchg
push
fdivp
enter
fistps
and
adc
xchg
lods
sti
fistps
negl
jmp
mov
cmpsl
inc
push
mov
xor
and
loopne
push
adc
inc
out
inc
lret
neg
repnz
sahf
js
push
push
push
fcoms
out
mov
divl
inc
rclb
rcrl
cmp
push
sbb
mov
mov
push
addr16
jp
xor
mull
fwait
cmp
sub
xchg
lahf
adc
scas
popf
xchg
mov
xor
or
pop
aas
clc
xchg
and
dec
sbb
sub
lock
pop
mov
js
addr16
repz
arpl
push
ret
dec
in
add
mov
mov
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
mov
xchg
adc
and
mov
hlt
cld
cmp
mov
hlt
and
cmp
fst
jecxz
imul
sub
xchg
in
sub
scas
cmp
push
xor
cmp
jo
clc
mov
or
sahf
inc
mov
call
cli
call
cli
orl
xchg
sub
ss
lret
test
mov
imul
fidivs
repnz
xor
mov
imul
popa
push
xorl
cwtl
cmpsb
inc
cmc
cwtl
push
xlat
pop
mov
or
enter
outsl
push
xchg
cmpsb
movsb
inc
jg
pop
jnp
repnz
test
cmc
fidivrl
jnp
loop
mov
push
test
das
push
sbb
pushf
sahf
sbbb
mov
stos
int
lods
out
dec
mov
fistpll
rcrl
shl
xor
pusha
mov
and
add
aas
ss
push
aaa
jne
out
xchg
mov
arpl
mov
fwait
adc
pop
rcll
rcll
jne
aam
aas
pop
push
jge
jl
rclb
jne
xlat
fs
int
jl
dec
popa
idivb
push
ljmp
popa
or
jae
mov
mov
nop
out
out
ss
sub
insl
testb
fildl
cmpsl
test
mov
fdivp
test
adc
es
mov
or
fisubrl
push
mov
pop
ret
xlat
adc
sub
mov
sbb
lret
out
mov
add
rorb
loopne
add
xor
sahf
call
stc
aaa
jno
movsl
jmp
not
popw
fisttps
popf
xchg
mov
jecxz
push
fiaddl
inc
dec
mov
xor
test
sub
inc
sbb
rcr
fmull
mov
lock
mov
jmp
int
pop
pop
inc
push
addr16
xchg
xor
jbe
arpl
or
xchg
mov
lea
sub
push
mov
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
stc
stos
and
mov
adc
nop
loopne
push
mov
insb
cwtl
js
cmpsb
mov
jns
mov
lret
pop
sub
xor
shlb
and
ds
movsl
mov
testb
push
mov
das
js
outsl
xor
std
sub
out
push
pop
adc
jecxz
mov
out
nop
xchg
jp
jnp
jl
or
inc
mov
into
out
xor
lock
add
in
jnp
inc
dec
repz
xchg
stos
add
popa
loopne
push
jbe
mov
xor
lds
fbld
rolb
mov
outsb
lds
sub
lret
dec
imul
jbe
ja
jnp
data16
test
or
int
clc
rcrl
loopne
stos
mov
jecxz
ja
nop
stos
cwtl
sub
mov
adc
and
sub
xchg
loopne
sbb
sub
sbb
adc
test
pop
bound
arpl
addr16
shll
divl
jb
add
add
dec
push
addb
mov
sub
ret
fimull
les
and
sahf
jle
pusha
mov
or
int
sarb
test
push
mov
adc
fstpl
mov
xchg
sub
test
lcall
sub
out
cmp
aaa
or
or
loop
test
loop
cmc
cmpsb
sub
call
sbb
xchg
js
in
repnz
inc
jp
jmp
pop
push
mov
mov
mov
fwait
xchg
sbb
js
les
test
sbb
movsl
pop
subb
dec
sub
lock
push
iret
popf
xchg
jb
test
xchg
dec
add
fsubs
iret
mov
addr16
and
repz
fmull
dec
ds
loope
scas
shrl
icebp
cmpsl
add
stos
jge
xor
push
and
pop
arpl
movsl
or
in
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
call
xor
repnz
add
stc
clc
out
cmp
and
fisttpll
mov
bound
add
xlat
jmp
shlb
push
sub
cmp
stos
and
jl
pop
inc
scas
test
xchg
imul
shll
sbb
lret
mov
cwtl
sub
scas
xor
clc
out
bound
ljmp
xchg
lds
lcall
aas
ss
lock
or
icebp
negb
xchg
or
dec
fistpll
and
cwtl
push
push
aad
js
xchg
imul
call
mov
insb
sbb
scas
xlat
jecxz
dec
insb
pop
movsl
xchg
mov
repnz
adc
in
cmp
jle
ljmp
jmp
xchg
shll
inc
xlat
dec
sub
subb
add
sub
out
push
or
push
sub
mov
cmp
inc
gs
push
jle
jle
jle
adc
mov
std
out
call
xor
out
jnp
jg
push
jnp
in
mov
mov
andb
pop
enter
imul
and
pusha
cwtl
pop
xlat
cmpsl
iret
or
jne
pop
stos
jno
adc
sti
add
jbe
aad
in
and
adc
add
mov
push
gs
push
icebp
dec
int3
outsb
aam
dec
pop
sub
jp
inc
repz
lock
pop
lock
xor
int
loop
cmp
dec
sbb
or
mov
sbb
out
xchg
xor
jo
outsl
cmpsb
or
adcl
cmp
mov
mov
ds
xchg
sbb
ja
xchg
lods
scas
sub
and
cmp
cmp
push
je
add
inc
imul
push
repnz
mov
push
sbbb
pop
inc
cmp
fbstp
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
or
adc
xchg
adc
pop
and
out
mov
inc
sbb
jbe
mov
and
sbb
les
in
push
mov
lret
test
mov
in
mov
inc
mov
adc
cmpsb
ja
mov
out
mov
push
bound
xlat
push
dec
xor
daa
mov
or
mov
popf
pop
mov
int3
cmp
push
rcr
es
dec
arpl
pusha
in
mov
cmp
inc
adc
dec
imul
inc
fcomi
xchg
leave
int
test
xor
es
insb
adcl
push
pop
repnz
push
push
and
ret
xor
add
andl
pushf
lds
and
lret
lret
insl
inc
push
insb
into
xor
sub
fldenv
lcall
sbb
cmp
mov
xor
icebp
mov
mov
adc
outsl
mov
loope
aam
dec
bound
cltd
mov
push
cmp
mov
and
mov
popf
push
pop
push
pop
daa
add
arpl
and
add
dec
shrb
add
mov
jae
rorl
jecxz
fildl
jae
jno
popf
jb
ds
imul
sbb
mov
xor
aas
repz
arpl
in
jmp
and
xlat
mov
or
push
mov
sbb
cltd
rorb
adc
fistpll
xchg
mov
or
push
ds
addr16
sub
adc
mov
mov
mov
dec
loop
add
inc
dec
adc
cli
and
out
fwait
std
ja
mov
test
iret
sbb
and
adc
orb
imul
cmp
mov
into
sub
and
out
pop
mov
aam
arpl
out
enter
lret
data16
xor
pop
mov
test
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
pop
jle
push
adcb
stos
push
xchg
das
or
lret
xchg
push
loop
sub
leave
dec
adc
jg
loope
ss
sub
sub
sub
add
or
mov
adc
mov
pop
sub
inc
mov
xchg
jns
jp
test
cmp
cmc
fwait
sub
les
pop
and
pusha
test
ret
inc
fucomi
push
in
mov
cmp
in
out
cmp
mov
aam
mov
push
loop
mov
mov
push
cmp
inc
popa
inc
inc
cmp
leave
iret
cltd
or
decl
repz
xor
sbb
icebp
and
das
push
filds
dec
popf
sbb
test
sub
sub
mov
int
pop
mov
bnd
leave
mov
jne
cmp
cmp
fidivs
fisubrs
les
add
cmp
in
jo
and
lret
enter
mov
bound
pop
push
push
imul
fdivrs
mov
add
jb
xchg
add
xchg
jecxz
push
mov
mov
loope
pop
iret
out
sarl
sub
lods
and
pop
pop
jmp
arpl
adc
mov
test
adc
aaa
out
push
mov
filds
test
sbb
xor
rorb
sbb
or
mov
roll
fcompl
mov
push
aaa
lea
popa
pop
add
sbb
mov
or
pushf
cmp
xor
jae
xchg
inc
lret
push
xchg
xlat
jns
icebp
cwtl
add
cld
inc
cwtl
mov
xor
jno
cmp
ret
bound
out
add
jae
fiadds
mov
in
mov
movsb
push
les
jg
jle
and
mov
mov
imul
xor
scas
lods
mov
ss
les
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
mov
js
adc
movlps
xor
inc
xor
dec
mov
decl
xchg
sub
mov
loopne
inc
pop
pop
cmp
clc
and
ss
xor
mov
mov
inc
negl
dec
dec
fwait
pop
cld
pop
mov
jp
xchg
movsb
lcall
adc
popa
xchg
imul
pop
test
push
js
sahf
aam
outsb
add
jnp
adc
jle
jmp
das
lret
addb
pusha
mov
lahf
mov
push
mov
inc
mov
xchg
std
pusha
sub
adc
aas
pop
jmp
test
js
pop
jns
das
and
jg
movhlps
add
ret
pusha
popf
cltd
lcall
jnp
test
jnp
add
push
add
cmp
bswap
push
mov
shrb
ds
xor
jmp
gs
mov
xchg
push
out
and
aad
test
add
test
xor
cmp
push
or
shlb
inc
orb
inc
into
loope
jnp
pop
cltd
adc
fstps
outsl
inc
dec
mov
cld
sbb
and
lcall
daa
arpl
sub
or
aas
and
xchg
repz
cmc
loopne
imul
mov
out
shlb
dec
pop
mov
jne
loope
dec
sbb
clc
insl
push
push
sub
sbb
enter
std
ret
mov
pusha
out
jmp
lcall
subb
imul
rolb
jns
xor
mov
aas
jge
into
push
or
lret
in
bound
mov
mov
lcall
mov
or
std
inc
inc
outsl
xor
xor
xchg
test
mov
sub
shrl
mov
pop
or
pop
les
xor
inc
jne
les
mov
sbb
pop
repz
or
mov
adc
jbe
jne
sbb
pop
adc
or
xor
decb
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
dec
adc
adc
movlps
jno
xor
push
jbe
rcr
mov
xchg
aas
lods
out
cmp
inc
mov
jo
sub
mov
addr16
les
shr
mov
cmpb
imul
and
cmp
jp
inc
dec
insl
push
or
imul
xor
imul
and
push
push
aam
pop
es
jl
sti
mov
push
xchg
loop
gs
or
call
cmpsb
xchg
push
dec
pop
pmaddwd
jle,pt
dec
jmp
movsl
pop
adc
jbe
dec
and
mov
lret
pop
sub
mov
or
mov
inc
test
lea
rorb
dec
sub
sbb
push
dec
out
int
push
cli
sbb
loopne
xlat
dec
xor
gs
or
insb
icebp
sub
mov
daa
push
aad
pop
and
pop
std
mov
scas
dec
movsb
adc
cmpsb
sbb
add
lods
jle
sti
loop
arpl
dec
je
mov
xor
or
iret
leave
mov
pop
call
cmp
notb
cwtl
push
shl
jne
enter
sub
clc
or
imul
cmp
add
push
daa
push
sbb
nop
mov
lods
scas
jg
push
mov
lcall
nop
les
ret
je
adc
cli
inc
dec
xchg
and
and
lret
aam
xchg
stos
loope
pop
mov
add
mov
lock
mov
xchg
xchg
push
mov
incb
adcb
lahf
mov
in
loopne
int3
lea
inc
dec
adc
mov
call
add
push
inc
insl
inc
or
pushf
aam
add
adc
dec
lods
inc
mov
xor
mov
loopne
ret
jecxz
repz
add
xor
addr16
sti
das
ja
lods
sbb
inc
inc
xor
lahf
jne
mov
sbb
mov
lea
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
test
stos
jb
adc
adc
xchg
mov
leave
cli
sahf
nop
jp
icebp
xlat
aad
out
xlat
cmp
or
lock
pop
hlt
ljmp
push
sarl
sub
add
dec
dec
push
sbb
arpl
mul
sub
sub
das
and
pop
dec
pop
imull
icebp
jb
jge
jnp
lret
jmp
scas
inc
and
test
sub
les
fcom
mov
cmp
int
adc
insl
cli
pusha
inc
rcrb
mov
mov
jecxz
xor
in
mov
xchg
push
adc
out
jo
iret
jno
mov
dec
pop
test
adc
sti
push
dec
pop
std
mov
ja
sub
lahf
add
mov
fwait
std
mov
imul
xor
xor
mull
into
stc
push
nop
dec
push
test
sbb
movsb
dec
sub
es
int
jb
pop
stos
out
cmpsb
mov
push
imul
xor
mov
fsubrl
mov
loop
and
std
leave
ret
inc
fwait
jnp
outsl
sbb
loope
xor
les
push
insb
daa
out
loopne
fs
lahf
cmp
mov
xchg
aaa
movsl
hlt
nop
lahf
or
sub
popf
xchg
out
addr16
sahf
inc
sbb
stc
fcmovb
not
sbb
xchg
add
sbb
xor
mov
cmp
mov
mov
cmp
jmp
insb
sbb
repnz
sahf
sbbb
aaa
outsl
lock
cmp
adc
test
push
or
and
enter
adc
xor
push
fiadds
scas
xchg
jl
jno
jno
jl
fdecstp
mov
lret
lret
dec
fdivr
stos
loop
sub
fnstsw
jne
cmpsl
mov
push
sbb
sub
dec
in
movsb
ret
ret
jmp
xor
mov
push
dec
js
fiaddl
cmp
inc
mov
xchg
frstor
mov
mov
subl
in
jae
test
dec
mov
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
xlat
pop
test
enter
inc
push
insl
loopne
inc
aad
pcmpgtd
cwtl
xchg
pop
or
bswap
add
rcll
dec
out
inc
pop
push
mov
das
in
xchg
lds
add
add
sub
sbb
jle
in
adc
mov
push
loop
orl
push
mov
movsl
inc
push
shll
mov
faddl
dec
or
mov
xchg
lcall
les
loope
mov
scas
xchg
mov
aad
neg
jg
jle
pop
in
fs
jle
or
icebp
push
pop
mov
lock
fldl
jbe
add
adc
fcoms
out
jb
xor
test
popf
and
push
mov
insb
fsubrp
nop
sbb
add
cmp
movsl
fs
inc
in
cwtl
aam
repz
dec
lret
out
xchg
cmp
add
rcrl
sbb
mov
cmp
ret
pop
test
mov
mov
lea
nop
js
push
add
repnz
xchg
push
iret
js
in
ss
push
add
mov
jmp
sbb
ret
sbb
inc
cmc
cltd
add
add
cwtl
mov
xchg
xor
add
fistl
lds
inc
scas
out
insl
mov
shll
cwtl
pop
insb
add
push
jb
pop
mov
jge
sbb
mov
mov
int3
test
jmp
decb
mov
mov
and
icebp
aad
scas
rcr
pop
leave
js
sub
jp
inc
push
xchg
icebp
scas
aas
or
xlat
ja
adc
mov
mov
nop
inc
imul
or
fsubrl
pop
cmp
pop
and
pop
mov
aam
loopne
scas
nop
stos
mov
and
sbbb
or
sub
sub
orl
or
sbb
xchg
shll
fdivrs
les
and
lods
js
dec
cmp
mov
pushl
sti
sbb
test
dec
aas
mov
xor
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
repz
xchg
js
push
adc
pop
lahf
sub
fldt
in
inc
fmul
or
and
xchg
inc
shll
out
mov
icebp
jnp
or
aaa
jmp
mov
in
push
rolb
cs
imul
sub
push
cli
subb
xchg
add
rcll
ret
ss
xor
ljmp
imul
loop
push
xchg
mov
jo
xchg
leave
or
imul
bound
mov
inc
add
stos
fistpll
jg
scas
push
scas
scas
test
or
scas
lahf
mov
std
jmp
or
sarb
into
cmc
xor
or
cltd
xchg
pop
cmpsb
andb
lods
pop
inc
movsb
push
outsb
xor
mov
test
sub
stos
and
adc
cmp
pushw
fldt
pop
pop
daa
in
adc
lret
or
int
popf
adcb
dec
push
stos
cltd
dec
sarl
lea
ret
or
inc
mov
adc
into
lea
and
hlt
loope
out
sbb
add
loopne
xchg
xchg
lret
sub
iret
iret
insl
inc
sub
xor
out
enter
loope
jle
leave
pop
inc
mov
pop
mov
and
push
es
or
out
jne
outsb
das
dec
in
lea
popf
shlb
adc
ret
fwait
xor
cltd
dec
int3
inc
mov
test
data16
push
out
sar
scas
push
cmc
ror
mov
mov
imul
loopne
mov
sbb
cs
jne
pusha
mov
scas
xchg
arpl
cmp
andl
mov
ja
push
jnp
gs
loopne
pushf
jnp
push
fwait
dec
mov
jne
add
cmc
inc
cmp
adc
and
leave
add
mov
pop
xor
adc
outsl
pusha
cmp
out
bndstx
push
es
sbb
add
jge
add
addr16
xor
clc
lds
lret
cmp
adc
rorl
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
xor
lea
enter
sub
stos
sbb
nop
jmp
popa
call
cld
in
divb
popa
add
add
aas
dec
cmpsb
push
jae
push
jmp
dec
push
xchg
dec
xchg
mov
adc
mov
aaa
add
mov
adc
push
mov
stos
jnp
movsl
xchg
and
call
sbb
jbe
mov
sbb
jge
pop
pop
ret
dec
mov
aad
scas
mov
xorb
dec
dec
lods
push
je
sbb
adc
fistpll
jno
test
dec
lock
rclb
aaa
pusha
adc
pop
jno
sti
cltd
lea
sbb
pushf
mov
js
pop
lret
inc
cmp
adc
mov
fdivrl
pop
jl
inc
push
out
popa
sti
dec
xchg
push
je
flds
mov
push
out
adc
into
pop
rcll
pop
push
adc
insb
add
mov
inc
test
dec
jno
xor
addr16
push
ljmp
iret
arpl
sbb
imulb
lret
mov
cwtl
push
outsl
ret
xchg
jnp
ljmp
xor
iret
negb
fistps
aas
in
jae
repnz
into
in
out
iret
insl
pop
lds
clc
fidivrl
sbb
addr16
mov
int
pop
xchg
dec
outsl
pop
xchg
jl
lahf
lds
sub
test
add
ljmp
shll
mov
pop
adc
outsb
adc
fidivrs
inc
orb
add
in
and
mov
pop
addr16
inc
sahf
pop
or
addl
in
push
pusha
dec
or
data16
lret
and
push
dec
notb
add
mov
addl
popa
pop
loop
fisttps
add
sub
fcmovnb
ret
inc
sbb
fiaddl
out
daa
add
xlat
fistps
xchg
or
pop
mov
fsts
cmp
loop
test
and
jo
roll
xchg
inc
dec
jnp
or
jns
and
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
dec
pop
pop
add
dec
es
ljmp
adc
jnp
xchg
jl
jge
ja
gs
adc
fimuls
leave
pushl
lcall
jecxz
or
js
adc
pusha
sbb
je
aam
jns
mov
mov
addl
imul
xchg
aas
iret
inc
add
sbbb
xor
mov
mov
and
xor
call
ret
inc
pop
push
out
xor
lods
mov
xlat
fstp
mov
sub
popf
mov
hlt
sbb
pop
adc
jnp
iret
add
mov
enter
add
insb
loopne
div
int3
mov
pop
inc
push
adc
mov
jmp
sub
xor
notl
mov
or
adc
mov
jno
cmp
gs
sbb
dec
or
int
dec
mov
daa
aam
stos
jl
movsl
sbb
scas
subb
xor
jp
lcall
outsb
jns
sub
insl
jo
cmp
lods
stos
pop
adc
les
std
out
fxch
cmpsl
mov
and
inc
hlt
mov
mov
dec
outsb
sar
xlat
or
clc
sbbl
in
push
adc
jl,pt
push
dec
or
and
es
mov
add
jle
xor
enter
push
add
mov
pop
inc
inc
and
pushf
cwtl
and
aam
sbb
rcll
into
push
test
loope
mov
scas
and
insb
std
iret
ja
add
adc
into
jp
nop
inc
into
rcrb
imul
pop
add
sahf
fists
push
nop
pop
jl
rol
cld
shll
mov
and
mov
lods
push
fldt
xor
shlb
push
popf
movsb
inc
add
inc
fistps
hlt
dec
pop
sub
push
mov
jns
pop
mov
cmp
test
rcll
pusha
fisubs
sbb
orl
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
call
pop
adc
adc
mov
jp
mov
mov
cli
mov
cmp
jecxz
sti
movsl
das
push
push
lods
sub
pop
out
popl
out
lcall
and
xchg
negl
ret
mov
push
cwtl
xor
push
mov
shlb
cs
mov
jne
pop
sbb
adc
push
sub
lret
and
shlb
jb
ds
push
xchg
lret
and
mov
incb
insb
movsl
xchg
in
pop
lcall
and
add
jns
in
loopne
jge
test
xlat
sub
or
ja
test
pop
xchg
int
out
inc
dec
into
outsb
sub
inc
stc
pop
ljmp
cmp
fstps
ret
add
dec
push
or
mov
aas
mov
xchg
push
adc
popf
push
push
ret
xchg
loope
cs
inc
rolb
les
das
push
push
sar
jo
pop
push
inc
dec
lods
mov
add
imul
dec
dec
cwtl
stos
lret
xlat
jbe
iret
cmp
jne
imul
cmc
ret
out
js
pop
cmp
sub
dec
mov
sar
adc
push
addr16
iret
mov
lds
negb
mov
sbb
xor
or
adc
vmovdqa
shl
les
arpl
pop
ficomps
js
repnz
ret
gs
ret
jns
test
dec
test
outsb
add
sbbb
push
mov
jecxz
out
pop
popf
dec
mov
out
ficomps
jbe
cmpb
mov
ret
or
test
jl
loop
and
xor
incl
adc
int
pop
int3
push
in
or
sar
add
push
dec
loop
inc
pop
je
adc
add
xlat
pop
and
lods
test
sbb
lcall
add
jmp
gs
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
add
test
ficoml
adc
xchg
cmp
js
push
out
xchg
test
test
insb
jle
push
mov
pop
push
inc
imul
dec
xor
fcompl
js
loopne
rolb
lcall
pop
jno
out
jo
in
lods
lods
sub
imul
xor
mov
xchg
loop
repnz
nop
cmc
mov
mov
mov
icebp
dec
add
sbb
subb
add
nop
mov
ret
mov
icebp
dec
lcall
jle
sbb
mov
js
inc
sbb
or
pop
dec
or
insl
stc
cmpsb
mov
ret
mov
ljmp
xchg
or
imul
dec
pop
and
or
push
les
pop
xchg
daa
std
push
dec
into
push
mov
jmp
pop
pop
sbb
fsubl
popa
pusha
add
icebp
or
popa
mov
jmp
cmp
jl
xor
xor
mov
bound
pop
mov
lahf
mov
sub
sti
mov
sarb
repz
sub
xor
mov
mov
mov
mov
cmp
pop
jnp
cld
ficompl
scas
cmpsl
insl
cmpsb
lods
mov
push
sahf
cltd
rorb
inc
xor
fs
imul
das
pusha
insb
jno
fsubl
inc
idiv
mulps
push
xor
fisubl
sbb
ljmp
fwait
jl
sub
aam
dec
jmp
jg
adcl
or
xchg
push
mov
add
stos
push
push
ljmp
sti
ret
dec
repz
movsb
dec
shlb
adc
or
filds
cmp
adc
push
fs
mov
fwait
adc
addl
outsl
sub
jns
pop
xchg
leave
ret
rol
sbb
cmp
and
mov
or
int
enter
dec
pop
xor
fisubrs
adc
dec
data16
in
push
sub
xor
dec
jmp
or
mov
xchg
sbb
add
in
jne
in
inc
pop
jl
decl
sub
and
pop
xchg
lock
adc
sub
xchg
test
xchg
mov
xchg
jecxz
jnp
dec
cmp
mov
xchg
sahf
dec
loope
sbb
xor
out
dec
lahf
push
imul
rcrb
push
mov
popa
test
xchg
nop
int
sar
nop
inc
and
aam
inc
xlat
lods
std
scas
hlt
out
test
sbb
push
test
aad
pop
movsb
xor
adc
nop
inc
add
stos
mov
inc
fstps
jo
loope
lods
stos
out
xor
add
dec
and
cs
out
das
xor
mov
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
insb
push
adc
adc
lea
cmp
dec
sub
fiadds
mov
int
inc
pop
in
lds
xlat
in
mov
hlt
xchg
popf
fdiv
mov
mov
inc
neg
insb
addb
shrl
xchg
mov
dec
ret
jne
std
ret
sub
push
and
hlt
fnsave
dec
dec
add
inc
sar
stos
iret
hlt
bound
inc
mov
loop
mov
insl
mov
pusha
jl
dec
xor
jg
iret
xlat
je
jae
cli
popf
and
out
popf
jmp
popf
push
mov
sub
pusha
mov
aam
jle
imul
xor
cmc
push
adc
dec
push
sub
and
dec
sbb
ja
bound
lahf
add
jbe
xchg
pop
jle
push
pand
and
lret
movsl
dec
adc
mov
mov
loopne
push
stos
aas
xor
dec
adc
adc
lea
aad
and
inc
pusha
ja
sbb
mov
xor
dec
cmp
mov
icebp
xchg
outsb
cmp
das
call
and
addr16
insb
loope
gs
es
jmp
je
movsb
mov
aam
push
aas
xchg
mov
sbb
loop
xor
fisubrl
in
push
mov
dec
test
mov
in
dec
add
dec
xchg
pop
mov
mov
mov
and
sub
stc
fs
imul
js
push
mull
push
push
insl
imul
mov
mov
shll
arpl
arpl
xchg
daa
xrelease
cmp
ja
mov
mov
test
mov
cmp
mov
xchg
dec
cs
sbb
popf
lea
fcomp
cwtl
cld
cwtl
outsl
inc
loope
adc
cli
sbb
lcall
mov
repnz
push
shrl
aam
push
mov
or
fldl
pop
lret
lea
int
xchg
les
insb
push
and
je
pop
stos
fsubrs
and
xchg
sti
les
mov
sahf
clc
fcmove
arpl
xchg
jg
dec
inc
sahf
bound
pop
mov
pop
lods
sbb
adc
pop
in
jo
or
cs
pop
test
enter
inc
mov
lea
jne
sub
loope
mov
das
scas
mov
ret
sub
adc
adc
push
addl
icebp
and
sub
js
lods
xchg
inc
addr16
inc
mov
out
in
loope
jle
pusha
hlt
fidivrs
fcomps
mov
inc
mov
jnp
xor
imul
sti
in
xchg
pop
dec
nop
gs
movsl
or
adc
int3
jno
insb
je
insb
std
dec
mov
xchg
popa
call
sti
and
cmp
cltd
fiadds
xor
push
xor
pusha
and
jecxz
jbe
lahf
out
jmp
scas
xchg
ret
and
and
aaa
add
jmp
sub
lods
sub
mov
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
