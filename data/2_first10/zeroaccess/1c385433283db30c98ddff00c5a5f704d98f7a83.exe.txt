push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
fistpl
out
pop
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
bound
pop
sbb
scas
pop
xchg
mov
sbb
sahf
adc
scas
les
adc
lret
xor
fisubrs
jge
sbb
add
dec
andb
lods
mov
add
clc
sub
dec
jns
leave
pusha
hlt
xor
fldcw
pop
add
gs
mov
xchg
mov
jns
insb
mov
mov
add
xchg
cmp
rclb
or
add
imul
data16
fxch
aam
and
aad
pop
sbb
mov
xchg
sub
sub
sub
jo
jb
or
stc
repz
fldenv
add
rcrl
iret
mov
repnz
adc
cmpsl
data16
sahf
mov
push
and
out
out
lcall
xchg
sub
mov
mov
jno
xor
mov
test
add
pusha
fisttpl
or
adc
fidivl
pop
pop
pop
push
aas
jge
adc
jle
jns
dec
fiaddl
or
xor
and
add
lret
popf
lods
mov
js
cmp
pop
push
cmpw
push
pushf
rcrl
sub
setnp
jo
dec
movsb
sub
mov
xor
data16
imul
jge
aad
das
mov
lods
add
stos
add
add
test
call
jne
inc
inc
inc
psrlw
aam
inc
icebp
push
lods
adc
jae
popa
scas
xor
add
push
mov
xor
dec
loop
scas
imul
mov
xchg
aaa
mov
fs
push
mov
fs
dec
pop
adc
xor
fstp
pop
mov
mov
incb
push
inc
push
push
cmp
xchg
xor
clc
lock
mov
fyl2x
adc
lret
xorb
stos
xchg
ror
cmpsb
dec
int3
sub
cmp
das
sub
in
cmp
pop
push
pop
roll
cmp
add
repnz
loop
stc
xchg
mov
out
jnp
aaa
xchg
arpl
pop
lret
pop
add
ss
lods
sti
dec
jns
pop
cmp
adc
add
cmc
add
insb
or
call
aam
xchg
adc
cmpsl
les
fiadds
jae
cli
push
xor
std
add
push
stos
or
push
jge
inc
xor
nop
sbb
mov
lock
shl
mov
lock
addr16
mov
hlt
mov
cwtl
dec
pop
xchg
and
std
add
or
lea
outsb
adc
sbb
div
sub
or
cmpsb
xchg
mov
jmp
in
lahf
or
cli
pop
insb
mov
sbb
rol
dec
fnstsw
ja
pop
ljmp
lds
or
lcall
loope
repz
or
mov
mov
leave
shll
ljmp
sti
dec
inc
rcll
cltd
jb
scas
in
in
dec
add
jbe
lret
sbb
rorl
ja
sahf
test
xchg
sahf
mov
cmp
call
mov
mov
sbb
pop
jp
pop
stos
push
sahf
or
cmp
mov
in
fldenv
sbb
cmp
push
adc
sbb
cmp
mov
mov
ret
scas
jge
cwtl
pop
cmp
jbe
add
and
cmp
in
dec
in
jg
outsb
outsl
vcmpeq_osps
loope
mov
sbb
add
imul
test
cmp
jne
fiadds
adc
xor
daa
stos
imul
cmp
cmp
jae
cmp
loopne
enter
push
repz
adc
inc
inc
cmp
fwait
mov
pusha
xchg
aam
adc
inc
cmp
jge
dec
push
sbb
jae
xor
popf
inc
daa
bnd
clc
inc
cmp
pusha
xchg
icebp
or
lods
gs
addr16
scas
rclb
inc
sbb
fadds
fisubl
cmpsl
loop
pop
out
hlt
outsl
mov
cmpsl
fdivs
aas
je
stos
xchg
paddsb
das
push
shll
mov
jno
imul
mov
sahf
mov
mov
sub
icebp
mov
gs
sbb
mov
mov
push
mov
cld
cmp
fidivrs
fstps
push
pop
imul
fcomp
jo
push
ljmp
scas
ja
inc
mov
loopne
movq
sbb
inc
in
adcl
cmp
sub
imul
jno
add
mov
and
and
push
mov
faddl
fisubs
test
xor
push
rcrb
xchg
xor
pop
jo
loopne
mov
cmc
push
lock
mov
lcall
push
ret
add
xchg
mov
test
cli
and
dec
pushf
fmuls
push
push
out
sub
sarl
aas
in
popf
fildll
xor
inc
adc
std
mov
mov
fistl
sub
or
dec
mov
pop
lea
mov
cmp
mov
inc
push
pop
addl
mul
adcb
or
lea
pop
xor
in
jo
gs
pop
aaa
fmull
mov
inc
das
sbb
adc
insl
ds
or
les
jae
popf
sub
mov
fbld
shld
mov
aad
js
sub
in
test
psubusb
outsb
inc
lea
call
cli
jecxz
and
lret
xchg
fdivrl
in
cmpsl
mov
and
xchg
ljmp
cmpsb
dec
dec
pop
jge
fwait
inc
int
pop
add
insb
jg
test
mov
lea
aaa
lret
into
cmp
loopne
enter
fbstp
scas
mov
es
mov
out
je
jo
scas
ret
jl
mov
xchg
jmp
aas
or
pop
dec
push
movsb
push
jb
rcll
pusha
into
mov
int
cltd
ja
dec
imul
ror
das
add
dec
pushf
mov
mov
sbb
hlt
and
jg
sub
jae
inc
cmp
mov
pushf
mov
jo
and
jno
mov
cmp
jge
mov
sub
add
lret
adc
push
enter
movsl
sbb
inc
jge
xor
jne
xchg
xchg
mov
das
sbb
clc
sub
fbld
xor
jge
add
pop
sbb
cmpsb
mov
inc
jns
xorb
add
cmpsb
sub
mov
sahf
mov
stos
adc
fwait
outsb
insb
pop
ja
sub
icebp
out
test
sbb
out
aas
cmpsl
sbb
or
xchg
xchg
xor
call
mov
lock
das
mov
sbb
xchg
loop
and
ja
adc
rorl
lds
mov
and
inc
mov
adc
scas
mov
mov
mov
mov
mov
dec
pushf
mov
and
fisubrs
or
imulb
xor
std
lret
and
jae
inc
dec
cmp
test
js
cli
sahf
mov
jmp
rcrb
or
and
sbb
pop
push
shl
frstor
aas
roll
add
daa
stos
jg
inc
sub
data16
jno
jmp
inc
leave
inc
fidivl
push
ss
enter
pushf
cmp
popf
jmp
dec
xchg
and
add
pop
shrb
push
std
das
clc
xlat
push
adc
sbb
pop
stc
cmp
js
xor
pop
mov
inc
xchg
sub
ja
movsl
stos
pop
xor
cmpsl
scas
cmp
or
popf
leave
jo
jb
push
icebp
lea
loop
or
sahf
outsb
sub
mov
jnp
xor
push
adc
inc
shll
xchg
pop
out
insb
push
push
mov
into
jmp
xchg
dec
jae
push
call
mov
clc
xor
push
cwtl
fnstcw
je
addr16
add
push
cmp
mov
outsl
add
orb
sahf
mov
and
or
inc
fnstcw
mov
fcoms
jmp
repnz
push
fiadds
mov
mov
es
movups
mov
int3
subl
pop
pop
pop
and
pop
pop
add
add
xor
dec
mov
lds
xchg
stos
movsb
xchg
imul
addr16
and
sbb
leave
aas
sar
int
cmp
push
sbb
pop
hlt
repnz
cmp
pop
stos
sub
enter
push
inc
mov
push
mov
mov
test
push
jge
cmpsb
mov
push
xchg
or
dec
jl
cmp
mov
mov
push
lods
out
scas
inc
mov
xchg
and
cmpsb
cmp
mov
fisubrs
pop
mov
and
inc
out
addb
int3
inc
outsb
push
and
or
push
lea
nop
imul
inc
jl
sub
cmp
int
andl
jmp
push
in
test
in
mov
test
dec
cmp
sub
cltd
push
inc
stos
fidivrs
xchg
repz
cmp
sub
jp
inc
dec
push
outsl
aad
sbb
sti
lods
adc
pop
add
aas
xor
jno
push
xchg
in
clc
inc
call
ja
or
sti
xchg
and
fs
xchg
cltd
mov
cmpsl
ret
cmp
inc
xchg
mov
mov
mov
and
mov
ss
stc
pop
dec
mov
pop
mov
aad
sarb
or
dec
dec
and
cmpsl
nop
sahf
shlb
lcall
shrb
jge
leave
cmp
inc
cltd
mov
popa
xor
adc
rcl
xchg
mov
inc
mov
or
pop
movb
push
insb
lods
or
jnp
sub
jmp
pop
mov
into
xchg
jle
dec
dec
pushl
std
pop
das
adc
sbb
daa
shrb
mov
mov
pop
jns
lcall
outsb
or
mov
cmp
js
fidivs
stc
les
popf
es
add
dec
jp
imul
rolb
adc
es
shrb
jecxz
ror
cmp
push
push
movsl
and
and
stos
sbb
xor
sub
mov
mov
mov
xchg
pop
negl
call
lret
orl
les
dec
xor
arpl
shll
or
push
sbb
into
ror
add
leave
lds
jp
sub
pop
int
fildll
loope
push
xor
insl
fimull
stos
movsb
out
insl
jmp
inc
cltd
jo
out
ja
dec
nop
push
push
sbb
cmpsb
mov
lock
sbb
inc
mov
loop
jb
shll
hlt
mov
shrb
notl
mov
mov
add
push
cmp
inc
sub
jl
je
jae
lret
cmp
fisttpl
icebp
fsts
mov
sbb
push
or
js
add
popf
insl
xor
dec
xor
push
pop
aad
sub
and
add
cld
cmpsb
aaa
pop
jmp
jle
xlat
cwtl
xchg
pop
xchg
pop
adc
mov
push
fmuls
ret
mov
adc
xchg
push
push
push
push
faddl
mov
decb
cltd
int3
pop
or
push
cmp
sub
out
addl
nop
rcr
insb
rcr
inc
lock
push
stc
cmp
mov
and
sti
sub
cld
js
xchg
jns
pop
mov
mov
sbb
xor
or
mov
loope
data16
mov
lods
add
into
loop
clc
iret
roll
dec
mov
dec
push
or
addb
sbb
xor
loope
scas
test
adc
ficompl
mov
push
lcall
mov
mov
dec
negl
sub
push
jae
fldl
jb
in
jl
mov
out
out
push
xchg
in
xchg
and
sub
xor
fstpl
shll
mov
orb
sbb
cli
sarb
sbb
out
mov
dec
sub
dec
int
mov
les
adcb
inc
rcr
xor
sub
sub
lods
daa
ret
mov
jecxz
mov
and
fwait
ficoms
jmp
shll
mov
sbb
mov
dec
aam
gs
push
and
push
popa
pop
pop
mov
lea
push
in
insb
lcall
mov
add
aam
adc
loop
xchg
ds
cmpb
cmp
lret
aas
test
aaa
leave
insb
mov
adc
sbb
pop
or
xchg
sub
jbe
adc
mov
mov
dec
push
dec
push
xor
mov
lods
mov
aas
jnp
xchg
filds
pop
adc
shr
adc
add
enter
sub
test
sub
jno
dec
and
pop
and
push
add
sub
mov
imul
loop
sbb
popf
fisubs
and
jle
loope
mov
decl
je
or
dec
mov
stos
push
js
fidivrs
ja
xor
mov
mov
fwait
dec
mov
or
sahf
lret
pusha
jle
pop
inc
lods
icebp
leave
les
xchg
sahf
push
shll
enter
and
add
xor
jns
xor
aas
icebp
inc
ds
mov
icebp
scas
pop
fcomps
mov
es
loopne
ljmp
popa
add
or
cltd
hlt
push
fistl
data16
cmp
rol
add
loopne
xchg
cmp
inc
xchg
fldcw
jne
fwait
mov
mov
dec
dec
mov
lret
in
into
xchg
cmp
add
mov
in
out
push
es
repz
xchg
out
cmp
mov
xor
adc
cmp
lods
xchg
cmp
in
push
loope
mov
mov
mov
shr
and
bound
negb
and
jmp
sbb
pop
dec
xchg
mov
xchg
pop
adc
sbb
pop
and
mov
clc
das
push
jns
std
fs
and
and
mov
and
cmpsl
call
bound
add
push
adc
hlt
leave
into
xor
sub
es
out
push
push
rolb
mov
test
aas
or
push
notl
mov
mov
add
mov
add
sbb
sti
push
pop
cwtl
cmpsb
jns
shll
cmp
icebp
sbb
push
je
mov
cmp
into
pop
mov
push
rep
pop
out
ja
jmp
mov
and
jbe
stos
mov
dec
push
into
push
mov
loop
loop
inc
xor
pminub
jae
adc
inc
jge
je
mov
push
cltd
push
pop
popf
or
inc
leave
lods
mov
mov
cmc
cmp
mov
ljmp
out
push
aad
jg
pop
ja
leave
cmp
jge
jbe
scas
in
mov
ret
out
iret
shrl
fs
and
imull
cmpsb
cmpsb
jg
adc
or
out
dec
sbb
and
jne
push
hlt
outsb
mov
mull
ljmp
nop
mov
jo
sub
mov
lea
mov
cmpsl
cmp
cld
push
call
mov
dec
or
addr16
pop
pop
shr
into
inc
jb
mov
fstpl
test
mov
movsb
jne
lock
shr
dec
mov
cwtl
lahf
add
jbe
mov
popf
mov
mov
data16
psubb
test
xor
jns
push
xor
inc
dec
pop
pop
cli
inc
pop
stos
cmpsb
xor
stc
dec
mov
inc
test
cltd
scas
cmp
das
or
jg
roll
mov
xchg
stos
lods
mov
mov
or
ljmp
scas
roll
ss
push
sahf
add
dec
negb
jmp
jecxz
test
iret
bound
mov
out
pop
xor
cmpl
addr16
arpl
sarl
scas
adc
push
loope
or
lahf
shrb
lods
fildl
ja
push
shll
and
negl
das
fcoml
ja
cmc
insl
mov
pop
sbb
ss
adc
into
lret
loopne
jp
popa
imul
adc
pop
call
shl
outsb
and
mov
add
cli
jno
pop
pop
sub
fwait
out
or
popf
scas
in
mov
cmpl
popa
fs
adc
fistps
imul
int
adc
mov
rcr
xlat
cld
aaa
and
jge
inc
or
rorb
mov
mov
jecxz
fs
mov
call
and
lahf
push
cmp
xchg
stc
or
cmc
mov
rclb
leave
xchg
bound
movsl
ss
cltd
xor
sbb
sarb
cmpsb
sbb
nop
mov
xor
ja
pushf
inc
inc
jae
jae
stc
and
adc
xchg
jmp
pop
movsl
stc
cmpsl
ja
pop
stos
xchg
sub
test
jmp
fmull
test
mov
pop
in
sarb
jle
lea
jmp
and
pop
loope
jl
jl
inc
aam
gs
call
mov
out
ret
sbb
sarb
ja
lea
fst
push
out
lods
aam
sub
jmp
jb
jmp
gs
dec
cli
and
es
inc
pop
push
cwtl
jmp
lret
mov
mov
jg
hlt
bound
mov
lds
sbb
and
sbb
sbb
lds
adc
test
mov
fcmovne
in
outsb
fxsave
nop
inc
test
repnz
cmp
push
xorb
sub
imul
jl
lahf
sarl
cmp
xor
adc
out
addb
xor
add
aaa
inc
mov
xor
mov
xchg
nopl
pushf
jmp
push
cs
or
lret
ucomiss
leave
mov
inc
adc
stos
nop
lods
gs
fs
cmpsb
jo
inc
sbb
cltd
enter
mov
xchg
ret
and
push
test
cmp
add
lret
inc
or
sbb
in
sahf
xchg
push
mov
arpl
sub
decl
out
mov
push
push
ds
les
mov
xchg
outsl
shll
mov
testl
jg
and
roll
movsb
jge
xor
ficompl
jns
das
add
cmp
aaa
fs
dec
dec
shlb
ss
das
call
in
dec
sahf
cmp
inc
mov
push
cmpb
add
dec
xchg
cmp
ss
and
stos
lret
xchg
ja
je
movsl
jp
jns
pop
inc
in
xor
cmp
or
std
call
cs
push
ret
fwait
and
test
pop
sbb
repnz
not
xor
pop
or
jge
stos
adc
sub
mov
in
shrl
les
or
mov
xor
cmpsl
outsb
aad
push
adcb
out
pop
push
or
jne
arpl
scas
les
lret
xlat
add
mov
push
test
cmpsl
inc
cmp
lahf
popa
push
and
mov
std
mov
sbb
mov
inc
mov
jns
pop
add
sub
xchg
push
mov
push
xchg
sbb
pushf
out
jo
in
pop
mov
jne
add
cmp
gs
in
push
adc
int
mov
push
outsb
je
fadds
mov
insb
lock
aad
hlt
mov
pusha
jae
mov
lods
aam
mov
mov
std
jne
sub
adc
aam
mov
mov
xor
jl
inc
lock
sub
pop
push
adc
and
dec
sub
add
cmp
clc
lods
cmp
mov
andl
push
mov
lods
cmp
hlt
xor
mov
clc
pop
mov
out
scas
fistl
test
dec
ja
cmp
xor
cld
pushf
inc
imul
jl
out
les
pop
inc
inc
xchg
add
add
arpl
lods
cs
out
clc
or
repnz
jnp
fsubl
pop
cmc
mov
cwtl
mov
mov
fwait
cmp
cmpl
iret
lahf
dec
pop
dec
rcrl
inc
mov
push
push
dec
pop
icebp
pop
pop
sar
push
add
add
je
jno
sbb
mov
mov
pop
push
loop
cmp
jne
mov
test
icebp
mov
push
and
cmpsb
mov
stc
mov
ret
bound
cli
mov
cmpl
sti
incb
test
lods
lds
dec
shrl
xlat
jae
sbb
inc
enter
test
in
stos
inc
scas
sbb
sahf
sahf
popa
or
fisubl
out
mov
cmp
cltd
jle
mov
roll
xchg
xorb
xor
lock
cmp
aad
jbe
push
push
ret
lcall
imul
jecxz
shlb
mov
dec
push
cld
hlt
cwtl
std
popa
fwait
lahf
daa
cwtl
aam
adc
addr16
pop
sbb
jno
sbb
fsubr
inc
or
mov
addr16
iret
cmpsb
and
xchg
pop
mov
or
mov
sbb
cli
and
popf
aam
add
jp
pop
jnp
cmp
insl
imul
lock
sahf
cltd
push
sbb
mov
and
mov
mov
jge
xlat
sub
cli
out
xchg
subb
jbe
xor
lretw
sub
dec
pop
pop
fbstp
stos
das
int3
shl
push
enter
mov
jo
outsl
jno
lods
ret
lahf
gs
push
inc
mov
js
sbb
lret
cmp
loop
inc
cmp
scas
loopne
lods
prefetchw
or
adc
fisubl
fnop
scas
icebp
cmp
aaa
xchg
hlt
cmpsb
cwtl
jno
jmp
stos
dec
xlat
in
loopne
lods
xchg
lcall
movsb
mov
mov
mull
adc
push
mov
sbb
mull
loopne
sbb
mov
ret
stos
dec
lods
mov
jle
fstp
xchg
iret
xchg
test
xchg
mov
jmp
jo
ja
push
stc
xchg
mov
test
test
jo
movsb
fcom
lds
mov
outsb
fwait
out
loop
mov
fwait
enter
clc
jae
mov
aas
jmp
dec
loope
push
lods
mov
mov
lahf
pop
loop
sbb
adc
mov
leave
fists
mov
mov
xor
mov
mov
jecxz
mov
inc
test
xchg
into
jmp
rcr
jmp
or
push
xor
lcall
inc
mov
subb
dec
lahf
mov
and
pop
jmp
inc
mov
lock
cmp
sbb
imul
stc
shll
jg
decl
dec
mov
push
sar
cltd
fadd
in
or
lock
inc
ljmp
lods
stos
mov
xlat
sub
mov
cwtl
mov
jnp
call
icebp
xchg
insl
sbb
xchg
test
push
in
jb
fwait
mov
loope
add
test
lock
mov
xchg
xlat
and
push
and
sti
ror
sub
xchg
lods
out
or
repnz
imul
sub
inc
imul
push
cmp
or
sahf
stos
mov
add
loop
leave
call
sub
aas
bound
dec
mov
xchg
cmpb
adc
es
ja
lret
adc
adc
in
jle
jg
push
mov
cli
or
icebp
hlt
mov
into
push
mov
test
push
jbe
out
fimuls
bound
loop
dec
xor
jmp
inc
xchg
mov
push
outsl
icebp
fstpl
jge
mov
xor
lret
shrl
lea
cmp
sub
sbb
adc
xchg
and
or
mov
mov
cmp
mov
sub
push
js
jg
xchg
stc
addr16
shrl
jmp
inc
nop
push
test
inc
psubusb
arpl
adc
clc
cmp
cmp
push
in
ja
xlat
or
or
pop
jle
pop
mov
mov
les
sbb
fsubr
repz
mov
mov
sub
out
cli
outsl
in
mov
mov
pop
mov
xchg
sub
idivl
pop
nop
mov
aas
mov
mov
sbb
mov
and
sti
loop,pt
sbb
xchg
dec
mov
lods
and
inc
mov
pop
jp
test
or
xchg
mov
icebp
ds
adc
jecxz
movsb
xlat
inc
dec
mov
outsb
daa
scas
pop
xor
mov
cmpsb
xor
mov
gs
popa
and
scas
mov
pop
xchg
add
into
mov
mov
inc
imul
data16
ljmp
push
xchg
cmpsl
outsl
push
in
adc
xchg
not
cmp
loope
out
jae
lods
iret
pusha
jle
movb
popf
mov
pop
mov
lock
mov
mov
jae
or
jp
in
mov
test
jae
imul
cmp
int
das
fstpl
sbb
enter
emms
mov
cmp
mov
inc
pop
sahf
das
cmp
mov
lods
push
lods
cmp
cmc
inc
jecxz
fmuls
fstps
outsw
imul
inc
mov
stos
jmp
cli
stos
xorb
stos
push
repnz
xor
mov
mov
jne
in
cmp
dec
push
xor
ds
jns
pop
pushf
pop
fstpl
dec
mov
jge
add
or
pop
lods
jbe
cltd
adc
dec
or
and
shrl
aad
aam
sbb
sub
mov
inc
cmpl
mov
adc
jmp
je
gs
clc
sbb
push
fwait
cmpl
cmp
pop
jecxz
loope
or
xchg
xor
aas
pop
jno
fs
jecxz
sbb
pop
mov
jae
das
rorb
push
xchg
dec
mov
sbb
mulb
shl
fcoml
loopne
xchg
push
mov
jne
or
push
xor
push
fcompl
aad
xor
int
enter
sahf
test
arpl
icebp
fisttps
push
pop
mov
xchg
in
xchg
and
mov
mov
mov
or
dec
push
sub
xchg
jmp
jae
mov
or
jo
cmp
adc
and
call
mov
lcall
mov
jl
adcb
and
pushf
adc
shll
adc
add
mov
lods
out
ror
sahf
or
xor
rclb
cwtl
rclb
xor
pop
fisubl
xor
loop
mov
cmp
or
pop
push
dec
lock
dec
negl
fdivr
jnp
jne
or
jecxz
add
xchg
cmpb
roll
inc
rolb
stos
loope
xchg
jno
clc
fs
cld
mov
lock
inc
adc
imul
xor
nop
test
pusha
bound
mov
fdivs
popf
mov
or
xchg
aad
push
test
jecxz
sub
inc
movsl
es
insb
and
fistps
shrl
inc
xor
jnp
mov
test
std
shl
inc
sub
jge
jmp
mov
xchg
dec
rcrb
jg
decb
out
or
cmp
mov
jb
ljmp
imul
push
inc
cmpsl
mov
cmp
add
inc
add
lret
in
ss
pop
jns
jnp
pusha
int3
mov
xlat
std
cmp
shll
repnz
jecxz
add
fwait
mov
jnp
ror
subb
out
and
lret
das
mov
imul
rorb
test
lea
pop
sub
xor
push
mov
inc
xchg
mov
int
dec
clc
jmp
or
adc
cmp
test
pop
mov
xor
or
xor
xor
cbtw
xchg
add
push
fistl
ljmp
pop
ja
inc
nop
jge
and
jne
divb
inc
inc
push
shrl
mov
xor
cli
sbb
cmpsb
pop
sbb
and
and
insl
shr
test
cmp
sbb
movsb
negl
mov
mov
aad
or
fiadds
pop
push
fwait
dec
movsb
scas
mov
imul
xlat
xchg
pushl
in
xchg
cmc
pop
lcall
out
adc
call
aam
adc
jmp
mov
mov
jg
and
pop
sub
pop
fimuls
dec
std
fmulp
fiaddl
inc
push
jecxz
mov
mov
and
inc
ret
lret
lret
sar
mov
mov
pop
mov
mov
jbe
sahf
inc
movsl
fmuls
fistpll
out
int
sub
inc
pop
ljmp
bound
inc
out
cmp
xchg
jl
push
es
ljmp
adc
mov
xor
std
mov
jp
das
sahf
cmovno
cmp
in
daa
ja
or
in
sti
cld
shlb
lcall
pop
inc
jecxz
popa
add
cmp
add
sbb
mov
in
outsl
sbb
push
sub
mov
sub
mov
addb
pop
and
cmp
dec
xchg
jnp
xorl
dec
cs
loopne
dec
test
arpl
jle
or
movsl
push
push
imul
insl
and
add
add
sbb
aaa
dec
in
je
insl
fisubrs
fisubl
jecxz
push
mov
jb
test
cld
cltd
aam
push
push
test
xor
ret
mov
adc
test
lods
cltd
pushf
jne
jbe
cli
shrb
fiaddl
fnstenv
int3
lret
sub
mov
insb
andb
lahf
cltd
add
scas
mov
xlat
jp
pop
sub
test
xchg
out
jnp
or
ljmp
mov
movsb
test
cmp
xor
out
xchg
pop
cmp
or
mov
xchg
lods
xor
dec
lret
inc
mov
out
cmpsl
cmp
cwtl
test
repz
test
inc
mov
or
std
jmp
xchg
push
xchg
push
push
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnsave
push
push
out
pop
addl
sub
mov
data16
bound
sub
lcall
outsl
inc
adc
ror
cmp
or
push
cmpsl
lds
push
xchg
aas
push
mov
jae
out
jle
pop
in
mov
push
cld
cli
fisubrs
pop
mov
adc
jle
add
pop
adc
icebp
das
or
jne
cwtl
stos
cs
fs
add
push
inc
mov
jne
fcomps
iret
pop
pop
push
loope
mov
push
mov
jl
sub
jle
cmpsl
in
xchg
and
aad
xchg
cwtl
adc
fildl
dec
lods
addb
or
fmulp
adc
inc
fs
loope
aaa
jae
cwtl
int3
pop
mov
mov
loopne
dec
sub
pop
jg
inc
mov
jg
cmp
pop
cmpsl
into
push
sar
loope
push
out
movsl
push
pushf
push
mov
inc
bound
mov
jg
out
pop
hlt
fistpll
mov
push
ret
mov
lret
fwait
dec
sarb
iret
add
out
push
movsl
push
es
jmp
scas
jp
and
push
lret
sub
mov
jne
arpl
jae
xchg
bound
sbb
dec
test
mov
sub
sbb
pop
cs
cmpsl
or
mov
or
mov
cmp
adc
lds
insl
xor
fcomps
ffreep
fisubrl
sbb
enter
decl
outsb
mov
pop
test
lret
cmpsb
pop
pop
lock
rcl
mov
xor
lea
data16
pop
dec
clc
push
mov
xor
fwait
call
test
mov
or
int3
insl
lahf
cmp
jae
cmp
ljmp
mov
bound
and
shlb
adc
je
fwait
das
jns
xor
popf
imul
sbb
jmp
imul
cld
mov
enter
pop
and
xchg
jno
out
arpl
cmp
add
rcrb
xchg
in
lret
pop
rorb
lds
add
cmp
jmp
ret
js
test
lret
xor
and
pop
lods
and
lcall
int3
jnp
pop
cltd
jle
testb
push
outsb
cmp
sbb
fwait
ret
dec
jo
jb
popa
and
aaa
mov
js
rcrl
inc
push
sub
sbb
es
adc
sbb
int
xlat
fisubl
sbb
jbe
xchg
popf
and
ss
jae
gs
mov
adc
out
gs
repnz
rep
cmp
outsb
dec
inc
jb
adc
out
rcl
push
xchg
mov
jl
lcall
orb
lods
jno
mov
mov
ret
sti
inc
mov
lds
and
imul
fdivr
loop
dec
repnz
dec
sbb
insl
mov
rolb
imul
cltd
aam
sub
btc
and
test
or
inc
out
sbb
clc
dec
mov
pusha
mov
mov
pop
sahf
clc
and
jae
cmp
enter
mov
in
imulb
rcll
aam
lods
sbb
dec
push
pop
sahf
out
xlat
sub
pop
add
adc
jb
jb
xchg
xchg
xchg
test
mov
das
jns
insl
rorb
fists
pop
or
sbb
cmpsb
nop
mov
roll
sbb
add
rcr
push
sub
cli
mov
lock
mov
movsb
decl
adc
and
cmp
cltd
inc
ja
adc
push
mov
fistpl
sarl
add
aas
aas
lods
scas
cld
inc
movsb
push
idivl
cld
data16
repnz
mov
or
das
scas
orb
cltd
ja
pop
out
push
jle
mov
imul
movsb
xor
lds
std
repnz
xlat
arpl
loope
jns
dec
adc
loopne
mov
sub
dec
in
popf
push
imul
mov
mov
mov
and
ss
push
inc
jnp
enter
cmp
and
insb
xchg
cwtl
fidivrs
call
mov
sarb
je
icebp
lret
icebp
roll
out
pop
and
push
mov
fildll
aad
lcall
add
lahf
xchg
mov
imul
ret
push
jne
jne
xchg
sbbl
add
jmp
adcl
add
nop
jno
jg
add
push
pop
and
xchg
lahf
data16
out
mov
ret
and
xchg
pushl
pop
lods
push
daa
inc
cs
jl
or
push
xor
fiadds
out
std
xorb
cmp
aas
dec
fsubrp
stc
jb
cmpsb
in
sbb
push
xchg
shll
or
mov
dec
xchg
pop
loopne
push
seta
jmp
lock
movsb
dec
mov
or
sbbl
data16
mov
push
pop
dec
cmp
std
mov
jp
fdiv
or
pop
ror
lret
xlat
cmp
sub
xchg
xchg
adc
cmp
jl
int
inc
mov
cmc
pop
push
and
mov
sbb
std
push
jnp
pop
movsb
sub
push
pop
mov
pusha
inc
fldl
push
movsl
cmp
pop
or
inc
push
in
add
jg
in
js
mov
pop
mov
jae
lea
test
ss
inc
movsl
pop
gs
popa
outsl
ret
fnstenv
stos
js
cmpps
jne
mov
pop
decb
jno
lcall
adc
les
fidivrl
sub
adc
xor
jl
sarb
pop
push
negl
adc
cli
lret
aaa
xchg
les
mulb
idivl
into
jecxz
shrl
cmc
xor
test
inc
popa
movsl
adc
jg
sub
mov
bound
sbb
or
jbe
cmpsl
xchg
wrmsr
repz
xchg
stos
pushf
inc
fmull
imul
lods
dec
fcomip
sub
sbb
test
int3
stc
mov
jg
jo
push
rcl
cmp
js
jle
cmp
loope
adc
mov
cltd
jmp
and
loop
popf
js
jnp
fs
pop
aaa
jae
pop
push
adcl
es
loope
inc
aas
xchg
inc
jp
data16
mov
or
jecxz
cmp
loope
fistpll
stos
enter
ja
adc
stc
cmpsb
je
mov
popa
pop
add
sti
loope
jno
and
enter
push
mov
pop
push
xor
lods
mov
cmpsb
outsl
push
stos
inc
push
push
push
stos
lret
xchg
sub
xchg
push
or
sub
sahf
pop
lcall
pushl
arpl
outsl
sbb
or
stos
fistpll
out
and
fnstcw
mov
adc
mov
clc
and
xor
mov
std
push
movsb
add
ss
leave
sub
xchg
addr16
inc
mov
adc
aas
lcall
jmp
sub
lret
xchg
cltd
mov
fimull
aas
bound
jb
pop
daa
mov
mov
repz
mov
cmp
pop
jne
push
add
mov
cmp
jg
pop
cmp
xor
movsl
mov
or
lcall
in
add
dec
pop
loopne
gs
mov
jle
es
sub
in
pop
pop
mov
jbe
mov
sbb
insb
ds
out
lods
rcl
hlt
jl
cltd
data16
cltd
aam
loope
pop
push
push
xchg
outsl
push
pop
sahf
popa
xchg
and
dec
sub
add
repz
test
mov
adc
and
or
stos
jb
fistl
push
dec
lds
and
sub
and
xor
subl
add
pop
out
imul
add
add
pop
ss
aas
js
popa
js
test
add
jnp
pushw
xor
jl
popl
in
scas
in
push
js
movsb
push
xor
jecxz
pop
pop
push
div
mov
and
xchg
pushf
mov
pop
sub
and
mov
fnop
sbb
iret
jnp
arpl
xchg
pop
push
int
ret
inc
fs
or
xchg
add
or
pop
sbb
push
imul
or
xor
jne
hlt
add
test
xlat
clc
and
xchg
xor
fldl
pop
cmc
add
imul
ja
js
sub
mov
out
cld
shlb
jno
cmp
stos
into
mov
inc
ss
movsb
and
adc
xchg
cs
pop
inc
inc
mov
cmc
mov
and
mulb
add
push
outsl
xor
arpl
cmc
insl
aaa
in
sub
cmc
mov
push
add
inc
mov
inc
mov
cmp
incb
mov
lahf
mov
cwtl
and
mov
pop
jbe
mov
xor
mov
stos
cmp
xchg
ljmp
cs
dec
stos
popf
xorb
addr16
pop
mov
subb
fistps
lock
sub
pop
orl
push
cmp
dec
mov
rclb
aam
repz
cmp
cmc
pop
cmp
adc
inc
mov
mov
pop
loopne
add
add
pop
outsl
shr
insl
in
icebp
and
xchg
mov
aam
je
jmp
push
mov
jbe
cmp
mov
fdivrs
or
and
ja
dec
cmp
aam
lahf
ret
jecxz
cmc
cmpsl
fwait
and
mov
pop
add
cmpsl
mov
movsb
push
push
pop
pop
add
push
inc
xor
pop
paddb
in
bound
dec
fwait
dec
inc
nop
test
cmp
jne
inc
mov
dec
mov
pop
sbb
orl
iret
testb
icebp
js
jp
nop
dec
cmpsl
xchg
inc
add
xchg
aad
cmp
loope
sub
aad
adc
inc
std
lds
or
cmp
pop
clc
mov
leave
adc
xor
ror
iret
mov
xor
in
sbb
sub
je
cmc
add
movsb
cmp
shr
pop
jg
mov
cmp
cmp
dec
arpl
into
fstl
cmp
mov
cmp
loope
cmpsl
sti
xchg
xchg
mov
test
test
ds
push
out
mov
std
popf
or
std
add
inc
adc
ljmp
mov
roll
ljmp
test
xchg
dec
lds
and
pop
mov
jle
dec
xor
inc
test
push
call
aas
int3
js
dec
dec
inc
inc
test
das
mov
shl
adc
add
jmp
lods
sbb
scas
repz
xchg
scas
sbb
lods
mov
lds
inc
std
push
pop
xchg
loop
mov
enter
sbb
push
mov
or
push
xchg
ds
jl
enter
sub
xchg
xchg
sub
mov
push
lret
andb
sub
mov
fildll
icebp
sub
cmpb
xor
test
xchg
jbe
and
pop
pop
std
xlat
pop
sahf
inc
jns
mov
mov
repnz
fbstp
enter
aad
shl
jg
loop
pop
fisubrl
push
loope
add
es
xchg
dec
aas
pop
test
adc
push
mov
pushf
std
xchg
fs
sbb
mov
adc
jno
mov
or
jne
outsl
mov
cld
leave
ja
dec
xchg
leave
pop
ds
add
mov
cs
inc
inc
mov
cmp
jl
insb
pop
pushf
and
into
test
pop
data16
ss
jne
bound
sub
leave
imul
mov
inc
int3
sbb
fcmovnb
loop
loop
dec
cmp
push
lock
xor
sbb
adc
in
ret
jae
jae
pop
paddw
mov
add
aad
jmp
inc
or
adc
hlt
push
pop
xchg
testb
dec
pop
clc
leave
cmpl
cmp
push
aas
xor
cmp
adc
pop
scas
xchg
loop
adc
stos
dec
test
ss
loope
scas
mov
into
sahf
inc
das
mov
xchg
push
aas
seta
popa
repz
and
push
sahf
movsb
push
or
adc
cli
call
bound
pusha
ss
enter
arpl
inc
mov
push
paddb
cltd
lret
cli
imul
sbb
repnz
fwait
fs
fsts
cmovp
push
pusha
or
clc
scas
jnp
push
cmp
rolb
xlat
inc
test
dec
push
sahf
popf
addr16
jae
jb
and
adc
in
xchg
sti
inc
dec
insb
je
ficomps
clc
jne
mov
arpl
push
add
jmp
sti
sub
call
adc
pop
cmp
mov
xchg
fwait
mov
lahf
shr
sbb
mov
pop
jns
jmp
out
mov
push
idivb
add
loop
lods
sbb
ret
sbb
nop
and
inc
push
and
xor
fldenv
imull
cwtl
movsl
test
xchg
sarl
pop
sbb
daa
fnsave
es
mov
dec
pop
dec
sti
mov
shlb
test
ja
imul
imul
negl
leave
arpl
push
mov
cltd
ljmp
std
call
pop
pop
das
or
jmp
jmp
mov
lods
mov
test
out
xchg
push
adc
add
pop
pop
jo
adc
push
xor
setb
lret
out
pusha
lds
dec
pop
cmp
out
add
test
aam
and
ret
mov
xor
add
cmp
sahf
inc
jl
sub
cmp
in
test
test
mov
pop
out
out
dec
cmp
movsb
sub
inc
ret
sbb
xchg
es
xor
loope
cmpsb
push
dec
adc
mov
push
xchg
aas
ficompl
repnz
cs
lret
stos
repz
cmpsb
fidivrl
outsb
jno
xlat
sbb
adcl
add
jbe
dec
pop
xchg
addl
fistps
push
mov
mov
push
push
pop
add
mov
iret
cld
xor
lcall
cmp
mov
or
pop
or
test
jns
xchg
mov
leave
out
pushf
sub
dec
cmp
shll
add
pop
insl
inc
scas
iret
xor
repz
adc
mov
pop
mov
mov
lret
popa
dec
and
rolb
inc
sub
dec
inc
hlt
cld
es
shl
movsb
es
lods
sbb
jp
fidivrl
clc
mov
dec
dec
mov
add
adc
xchg
fidivl
daa
xchg
sbbb
adc
pop
std
in
cmp
push
ss
cs
subl
popf
lcall
mov
adc
pop
mov
push
push
leave
sbb
rorl
sub
shr
inc
xor
jns
push
pushf
repnz
jbe
adc
add
in
movsb
dec
jecxz
and
pop
xor
sbb
pop
test
std
jnp
cmp
fnstsw
cs
rcrl
pop
out
cli
push
outsl
cli
jno
setnp
xor
cmpb
inc
test
lret
fcmovnb
fwait
loope
testb
imull
mov
mov
scas
and
call
ss
aas
or
dec
daa
outsb
pop
mov
sbb
adc
movsl
jne
fxch
add
outsl
xchg
aas
js
or
mov
xchg
loop
cmpsb
scas
add
insb
push
mov
mov
stc
enter
scas
adc
mov
sub
add
adc
jnp
ret
icebp
sbb
mov
out
cli
pop
stos
pusha
aas
mov
inc
ret
push
mov
cmp
int3
push
fldcw
lcall
inc
push
stos
ret
jge
aad
mov
cmp
jne
push
bound
rolb
inc
test
gs
xor
push
test
fstpt
mov
ja
loopne
or
adc
ret
sbb
add
icebp
scas
sbb
xchg
mov
add
int3
jmp
xchg
testb
sti
jne
mov
not
adc
jg
sbb
bound
cmpsl
mov
mov
pop
ljmp
cmpsl
out
sub
pop
adc
dec
sbb
pop
scas
outsl
cmp
shl
adc
sahf
inc
push
push
test
or
cmp
daa
dec
and
xorb
test
mov
sub
sub
adc
test
shlb
add
xchg
inc
sbb
mov
pop
stos
xchg
cmc
sar
loop
fistl
cmpsl
out
sub
xchg
and
sti
imul
and
push
out
sbbl
mov
pusha
out
jne
cmpsb
lahf
jns,pn
xor
orl
cwtl
mov
test
mov
imul
mov
in
aaa
fistpll
xchg
or
adc
loop
push
jl
fmull
mov
jae
push
mov
xor
int
xchg
jne
pusha
in
sbb
mov
movsl
pop
es
rorb
and
test
and
scas
inc
dec
push
mov
adc
stc
fnstsw
ret
pop
imul
dec
sub
insb
jb
push
xchg
sub
cwtl
sub
daa
inc
jo
lds
mov
loopne
out
movsb
adc
or
sub
pop
sbb
bound
sub
pop
ljmp
push
jg
movsb
and
std
push
jl
xor
xchg
jno
jo
adc
sub
push
or
mov
imull
dec
mov
sub
test
icebp
jp
in
jbe
jbe
xchg
subb
mov
aas
clc
enter
or
iret
pushf
lds
movsl
js
mov
xchg
sbb
lods
add
insb
popa
and
bound
push
pusha
lods
or
cmova
shr
push
imul
sar
aad
add
les
shrl
lods
stos
loop
adc
fcomi
cwtl
xchg
inc
lods
call
std
cmp
je
scas
and
pop
inc
and
mov
xchg
das
pop
rclb
inc
ss
jae
out
adc
movsb
es
out
mov
xchg
iret
jl
nop
pop
fists
imul
jge
push
loop
or
rorl
cmp
test
mov
mov
jecxz
push
adc
sahf
aad
jnp
jbe
xchg
cmp
jb
or
adc
jp
orb
adcl
ds
arpl
jne
push
jl
dec
sub
and
push
inc
scas
movntps
nop
pop
add
sbb
adc
sbb
aas
fsts
sub
xchg
add
dec
enter
repnz
ljmp
add
lea
lea
pop
ja
pop
xor
lret
aaa
xor
andl
jae
adc
scas
xchg
es
popf
dec
ffreep
mov
xor
xor
inc
dec
jle
loopne
es
fldenv
cltd
jmp
fimuls
dec
jmp
cld
xchg
cmp
and
xchg
outsl
in
mov
or
mov
clc
cmp
adc
repz
and
icebp
fisttpll
inc
adc
aam
and
mov
and
in
xor
sub
inc
movsb
pop
ljmp
ds
out
test
adc
sti
dec
iret
dec
sub
or
ret
or
add
or
sbb
mov
xchg
lea
pop
cld
sub
int
pop
inc
pop
hlt
das
in
add
jnp
das
and
fdiv
insl
xchg
dec
das
out
imul
testl
js
push
lods
adc
jbe
das
sbb
push
lret
imul
push
leave
repnz
cmp
dec
and
in
daa
popf
in
mov
push
lods
and
jb
add
adcb
shrd
imul
mov
mov
sti
push
cld
call
fs
mov
bound
insb
jp
roll
push
leave
rorl
xchg
idivb
adc
lcall
cmp
subb
or
jb
sub
add
mov
mov
lahf
pop
inc
repnz
inc
cmp
scas
int
mov
pop
lea
pop
lret
scas
aam
sub
pop
jle
dec
fisttpll
inc
mov
inc
pop
fsubrs
idivb
stos
adc
mov
out
mov
pop
dec
or
push
sar
test
inc
lods
pop
jp
mov
cmpsb
fldt
in
fisubl
das
mov
add
add
inc
sub
popa
cmp
cmp
aam
mov
pop
mov
inc
jp
inc
adcb
push
out
jo
xchg
mov
flds
cltd
cli
ljmp
pop
or
into
xchg
cmp
ret
dec
jle
sub
lcall
xchg
mov
mov
add
inc
je
adc
xorb
outsl
or
adc
mov
faddp
mov
dec
subb
lods
pop
push
fsubrs
sub
cld
dec
cmp
cmp
mov
jae
sbb
ret
test
iret
mov
imul
movsl
jne
add
mov
jno
sub
int
push
cmp
adc
add
into
and
jbe
add
xchg
sbb
cltd
movsl
pop
out
add
mov
or
pop
pop
push
jae
cltd
fistl
xor
sub
mov
out
int
repnz
pop
dec
ss
pop
push
pop
out
clc
notl
test
into
lock
pop
sarb
or
inc
dec
icebp
cld
out
aad
push
sbbl
inc
mov
sbb
out
fcoms
push
das
and
add
ss
out
out
loope
and
repz
pop
in
push
in
rcl
pop
lret
stos
ficoml
or
je
mov
hlt
popf
push
test
adc
iret
loopne
push
int
leave
xor
mov
mov
test
int3
add
sbb
jge
call
mov
pop
stos
stc
call
push
dec
push
imulb
cli
test
lahf
xchg
lahf
sahf
xor
dec
cmp
and
add
jo
xchg
popf
pop
mov
cs
out
jl
imul
pop
out
mov
cwtl
cmp
arpl
pop
mov
mov
test
or
imull
test
jl
out
idiv
and
shlb
mov
enter
stos
orl
ds
jne
adc
xor
pop
outsl
mov
mov
icebp
cmp
dec
test
mov
outsl
pop
lret
xor
mov
rcrl
mov
out
add
pop
das
outsb
jo
mov
inc
push
cmp
cmp
sub
mov
mov
out
push
je
mov
inc
in
orl
mov
repnz
fists
es
cltd
clc
cli
fs
inc
mov
pop
sub
sar
call
ds
add
dec
cmpsl
or
or
jecxz
inc
push
das
rcrl
mov
xlat
or
mov
sahf
cmp
shlb
pop
cmpsl
in
in
dec
das
mov
push
ret
push
pop
adc
push
aaa
enter
jno
push
lret
insb
xchg
mov
sub
pop
js
test
add
dec
aaa
je
stc
jne
movsb
popf
dec
leave
lock
ds
pop
or
loope
stos
jbe
into
and
stos
clc
jmp
xchg
testl
or
mov
and
mov
movsl
bound
jmp
int3
fdivs
shlb
adc
jb
call
lret
lret
inc
jnp
inc
fisubl
sub
mov
pop
bound
ret
imul
mov
and
inc
faddl
addb
add
scas
or
call
add
pop
jle
push
jb
cmp
fldt
or
or
rcrl
fisubrs
sbb
cmp
lret
scas
mov
add
jbe
ret
mov
fwait
mov
add
adc
dec
xchg
sub
push
mov
int3
mov
aam
push
or
pop
icebp
cmp
or
jp
stc
push
push
movl
sbb
fdivrs
xchg
xor
pop
push
or
enter
pop
mov
pushf
jg
repz
jmp
das
sbb
inc
cmp
outsb
mov
xchg
dec
mov
mov
mov
add
mov
in
lret
data16
xlat
inc
das
jl
mov
incb
enter
mov
lds
sbb
or
das
je
push
leave
jle
push
out
out
adc
dec
ficomps
in
pop
mull
sbb
lcall
faddl
and
sub
nop
mov
sbb
aad
cmpsb
fisttpll
add
lret
int3
fcmovu
xchg
push
ret
imul
jae
int3
fistpll
int
pop
xchg
nop
inc
push
aas
idivb
pop
rcrb
xor
out
stc
cmp
stos
mov
inc
pop
loopne
out
shl
or
fidivs
jp
add
jmp
mov
cmp
stc
push
pop
xor
cli
mov
loope
das
aaa
cli
test
subb
cmc
lret
lods
xor
dec
push
stc
add
add
push
test
int
or
jmp
mov
popf
inc
add
sbb
arpl
out
and
jb
cwtl
ficoml
sbb
ljmp
sahf
push
sbb
outsl
addr16
outsb
inc
lret
popa
push
sub
adc
xchg
push
into
xchg
pop
cmp
scas
shlb
pop
push
push
popa
lahf
jle
movsb
repz
jecxz
add
adc
loope
stos
inc
or
jne
dec
xorl
pop
jge
mov
cmp
gs
pushf
dec
js
add
xchg
mov
dec
mov
stc
adcl
sbb
push
inc
bound
mov
scas
pop
lcall
cmp
into
sub
jne
ss
ret
dec
icebp
movsl
repnz
pusha
lods
xor
cmpb
fsubl
ret
pop
aas
ret
scas
cmc
inc
mov
add
lret
xchg
mov
xchg
nop
ret
out
lret
clc
pop
push
in
sbbb
inc
inc
stos
aas
xchg
cld
mov
sbb
rclb
xor
inc
push
test
push
fcmovu
divb
stos
mov
aas
dec
scas
pop
mov
pushf
xchg
shll
scas
inc
sbb
test
xor
inc
dec
dec
daa
xchg
aad
jb
cmp
clc
and
mov
sbb
pop
data16
push
cmp
orl
mov
fwait
xor
xchg
out
xor
je
call
ja
pop
loope
push
test
sbb
in
inc
adc
fisubl
outsb
imull
bound
mov
sub
out
mov
xor
mov
repnz
push
data16
inc
cmc
jne
clc
sub
push
jae
dec
jae
out
and
out
mov
ret
lods
rcrl
push
vpsubw
push
and
rcrb
ret
push
lcall
orl
add
mov
stc
sbb
out
enter
stos
xor
push
mov
bound
and
adc
lret
or
sbb
lret
sub
push
shll
cmp
jg
push
mov
cmpsl
jg
or
pop
cmp
ja
xor
in
iret
rcrb
pop
or
cmp
das
add
aad
push
jnp
mov
leave
cmpsb
repz
repnz
popl
test
pop
add
fisttpll
jns
rcll
subl
push
aam
add
mov
sbb
and
std
aas
insl
divl
dec
lods
nop
test
xchg
push
imul
push
fs
fs
scas
push
repnz
aas
sub
push
jbe
xchg
jmp
xor
jae
insl
sbb
in
loopne
cmpsl
pop
mov
jb
inc
xchg
xor
lahf
mov
lods
mov
cmp
pushf
dec
sub
loope
or
shr
cmc
pop
xchg
or
dec
push
mov
xchg
add
fmull
ret
add
jmp
push
or
int3
vpunpckhdq
mov
in
stc
in
xor
push
xchg
int3
dec
adc
sbb
xchg
dec
aaa
pusha
test
mov
adc
loop
sti
push
fs
adc
cmp
pushf
jo
and
mov
test
rcrb
out
not
dec
movsl
jle
pushf
out
fwait
jmp
in
and
pop
xor
out
xor
xchg
gs
sub
xor
xorl
call
inc
jp
inc
idiv
fs
filds
xor
jmp
aas
xchg
jns
mov
iret
out
dec
sub
fstp
push
pop
sbb
pop
icebp
fisttpll
adc
repnz
inc
mull
idivl
dec
ds
loopne
pop
inc
dec
lea
push
pop
add
out
mov
frstor
enter
rcr
jge
fcompl
cmpsb
js
cltd
in
shl
xchg
in
pop
push
and
inc
push
jle
rcr
push
clc
cli
stos
sbb
je
test
xlat
push
ret
add
mov
and
mov
and
ret
arpl
cmp
mov
out
push
cmpsb
mov
push
iret
sbb
add
mov
test
fsts
je
add
loop
mov
inc
xchg
je
ja
add
aam
mov
jo
aam
inc
pop
add
dec
push
adc
ljmp
outsl
sbb
fistl
fs
iret
sub
xchg
enter
enter
push
pop
js
cmp
popa
pop
inc
cmp
insb
ja
outsb
aam
inc
cmp
fistps
pop
adcl
xchg
cmp
push
cmp
outsb
cmc
iret
fiaddl
shrl
lock
sti
jbe
fcomps
mov
mov
mov
xor
js
cmpsl
mov
push
or
adc
adcw
xor
push
add
inc
sbb
cmpb
cmp
adc
jge
and
lret
shl
xor
fstl
fiadds
mul
jbe
andl
inc
movsl
jmp
stc
lds
push
push
pop
lock
mov
sub
daa
fsubl
dec
push
out
fdivl
faddl
bound
push
mov
insl
fists
sbbb
popa
mov
std
sub
daa
movsl
pop
stos
cmp
cmp
cs
push
mov
sub
movsb
das
xchg
jno
adc
addr16
stos
stc
xor
adcl
inc
mov
aam
and
loope
dec
xorb
cmc
sarl
cmp
cltd
jecxz
sub
arpl
pop
adc
jae
mov
pop
lret
sub
ds
jae
dec
xlat
fisubrl
in
pusha
fsubs
arpl
aad
out
mov
mov
mov
mov
push
dec
ss
mov
bound
or
pop
xlat
sbb
lcall
inc
jbe
or
imul
daa
je
add
test
sbb
clc
or
out
cmp
jg
sbbl
cmpsb
test
icebp
and
jle
sub
rcl
stc
push
mov
sub
or
orb
punpckldq
sub
arpl
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
xor
int
cmp
xorl
idiv
adcl
outsl
xchg
xor
mov
add
stc
jp
std
push
sub
clc
jg
pop
inc
sub
and
and
adc
xor
add
repz
xchg
lock
daa
lock
roll
test
imul
dec
pusha
pop
aaa
iret
mov
mov
and
push
pop
lahf
pop
xlat
inc
mov
lock
pushf
sbb
sbb
arpl
jl
xchg
sahf
sarb
je
daa
rep
iret
fnstcw
cld
sbbl
cmp
lea
sub
lods
roll
sub
pop
fdivl
push
cld
lret
add
int
fwait
xchg
call
xor
cmp
jmp
aad
fisubrl
dec
xor
lods
push
xchg
in
add
jns
push
push
dec
cmp
xor
pop
pusha
les
push
lods
outsb
ss
imul
sahf
lea
adc
in
lods
inc
add
es
es
pop
sbb
xor
mov
and
inc
mov
mov
cmp
mov
mov
ljmp
add
sahf
add
mov
icebp
lods
adc
inc
flds
shll
or
lcall
pop
push
lock
xor
mov
jecxz
xor
data16
test
sub
movsl
mov
jle
adc
repnz
jbe
add
test
add
jne
mov
js
inc
sbb
stc
pop
mov
mov
aam
movsb
inc
test
mov
cmc
ret
pop
test
push
inc
mov
out
sbb
enter
push
inc
ja
cmp
leave
ja
inc
arpl
pop
test
jnp
movsb
aad
jmp
dec
cmp
inc
dec
adc
sti
xchg
in
cmova
pop
mov
aaa
xchg
mov
and
xchg
cmp
fwait
mov
jge
dec
mov
dec
sarl
xchg
adc
sub
mov
mov
push
data16
inc
mov
test
mov
insb
or
pop
or
shl
add
scas
push
mov
xor
inc
jns
sub
or
mov
sbb
cmp
enter
sub
inc
xlat
jnp
sahf
std
scas
scas
or
xchg
sbbb
xor
fcompl
mov
fdivs
mov
unpcklps
pusha
pop
sbb
push
sti
jge
loope
imull
mov
inc
sbb
mov
sub
adc
jge
lret
adc
mov
sbb
or
sbb
adc
mov
push
leave
test
in
aas
push
movsl
jl
ja
xchg
insl
and
push
mov
mov
je
int3
push
jge
jp
or
xor
test
lfs
xor
and
sub
jmp
mov
adc
add
shl
shll
stc
cmpsl
call
daa
mov
fwait
daa
iret
lds
ljmp
fnstenv
pop
cmp
dec
pop
xor
pushf
push
adc
into
jae
mov
arpl
scas
mov
rorb
add
pop
arpl
xchg
sub
inc
adc
mov
or
fiaddl
pop
test
test
jb
xor
mov
fisubrl
xchg
pop
mov
into
andb
add
loope
pop
or
insl
dec
jmp
lods
jns
sub
add
je
imul
adc
and
adc
inc
loopne
jb
xlat
cmpsb
xchg
sbb
dec
cwtl
pop
add
cmp
mov
dec
aaa
ljmp
movsb
adc
imul
push
sbb
daa
mov
int3
push
cmp
sbb
mulb
adc
lods
and
scas
dec
shl
imul
cs
xchg
pop
add
or
jae
jo
push
jl
cmp
mov
sahf
test
movsb
popf
adc
mov
inc
jg
adc
xorl
sub
adc
mov
mov
in
imul
mov
sbb
insb
fisubs
xor
xlat
pop
xor
movsl
addr16
mov
add
adc
adc
loope
mov
jl
inc
cld
dec
sbb
xlat
add
cmp
test
xor
aad
jbe
pop
cmpsl
lret
mov
jle
xchg
push
push
add
jle
xchg
int
dec
jbe
mov
mov
cli
push
arpl
sbb
pop
cmpsl
sbb
shrb
sub
cmpl
sbb
push
into
les
mov
mov
js
ds
mov
roll
xchg
mov
pop
lahf
mov
loopne
andb
bound
sbb
fbstp
pop
sbb
cmp
jns
push
filds
int
push
xchg
scas
mov
repnz
lods
fsubrs
cmpl
sub
inc
cmp
jnp
mov
mov
inc
jae
and
outsb
insl
pop
test
repz
pop
icebp
les
cmpsl
insl
addr16
sarb
mov
lods
cmp
sbb
cli
rclb
mov
sbb
cmp
add
cld
push
test
push
inc
adc
aas
cmp
mov
jmp
mov
jp
adc
mov
sbb
aad
mov
xchg
nop
das
cmpsl
out
cmp
mov
push
cmpsl
xchg
dec
push
iret
icebp
sbb
pop
ret
sub
push
inc
jl
bound
mov
and
push
ds
arpl
popa
mov
jecxz
push
push
imul
subb
jae
fstps
in
fistl
div
jno
mov
sub
sarl
push
fs
and
mov
sub
shr
xchg
in
inc
into
xor
push
into
shr
fsubrs
jl
inc
les
or
ljmp
dec
push
aam
dec
and
into
cmp
adc
push
pop
int
test
cmpsl
push
jge
and
mov
xor
sub
dec
jl
ficoms
dec
cmp
jmp
pop
ret
sub
outsl
hlt
scas
imul
sbb
out
jmp
and
insb
mov
in
cmp
and
aas
test
push
cmp
fisubrs
fmuls
or
dec
test
pop
sbb
pop
sub
std
jmp
popl
ret
pusha
jecxz
xchg
icebp
test
mov
sub
hlt
mov
adc
nop
pop
mov
jle
das
in
add
test
inc
push
adc
add
or
fldz
jmp
inc
pop
pop
xchg
sub
arpl
lcall
loop
sbb
outsb
pop
pop
movsb
inc
lcall
or
cmp
cmp
inc
mov
in
mov
call
fsubl
popf
out
nop
std
sbb
add
push
xor
adcl
mov
pop
mov
in
cwtl
fsubl
mov
mov
dec
add
jne
cmp
ds
loopne
shlb
xorl
sbb
sbb
mov
xchg
popa
jecxz
xchg
mov
fcompl
lods
mov
test
sub
ja
pop
xor
dec
loop
popl
jnp
mov
push
mov
add
in
data16
dec
cmc
cmp
mov
mov
movsb
dec
enter
fsubrl
test
xor
mov
stc
popf
xor
movsb
dec
push
shlb
sti
test
pop
loope
js
jae
jmp
inc
sub
or
sub
mov
pop
addr16
jp
movsb
sbb
xchg
mov
push
movsl
push
sar
fidivs
push
ljmp
loop
adc
adc
jno
cld
sub
les
cmpsl
lods
and
aaa
aam
lock
out
push
enter
aas
jl
in
jo
movsb
hlt
push
push
sub
dec
push
pop
xchg
jnp
popl
iret
pop
pop
mov
xor
shlb
loop
and
das
es
mov
and
sbbl
scas
stos
orb
scas
sub
or
adc
in
push
sbb
push
mov
lds
dec
jg
or
movsb
lea
mov
add
std
lret
outsl
push
lods
cmp
cwtl
es
dec
jge
shr
into
fwait
and
gs
icebp
inc
data16
push
clc
hlt
enter
incb
sub
mov
xchg
ds
shll
lea
inc
test
fbld
dec
lea
jle
sbb
imul
lret
push
arpl
xchg
movsl
fnop
ds
dec
jns
repz
repnz
jns
pop
cwtl
hlt
sub
cwtl
out
pushf
mov
sub
sbb
pop
adc
in
lods
push
xor
addl
inc
cmp
xor
movsb
mov
enter
lods
push
mov
lea
adc
lahf
sti
mov
xor
sub
and
rcrl
test
fisubl
stos
pop
mov
push
dec
rolb
jmp
inc
mov
push
mov
sbb
xor
push
stc
jne
sub
pop
dec
test
repnz
lret
sub
repz
or
repz
out
add
inc
push
dec
jno
mov
or
and
sub
sbb
lds
cmp
adc
push
inc
or
ficompl
bound
pop
andb
or
jecxz
enter
outsl
ds
push
ljmp
inc
dec
cmp
jg
or
scas
gs
ret
mov
addr16
xor
jl
fs
push
sub
les
sbb
mov
dec
mov
test
fxch
fbld
inc
test
daa
enter
ficompl
push
pop
pushf
arpl
push
cmp
ja
sbb
popf
pop
scas
push
je
jmp
xor
arpl
jmp
pop
ja
xor
xchg
dec
rorl
pop
shrl
data16
ret
aam
iret
ljmp
sbb
sub
das
arpl
mov
ficoml
sub
cmp
outsl
jg
loop
mov
lods
ror
mov
pop
cmc
imul
jbe
mov
fimuls
xor
in
dec
pop
dec
fsubr
sbb
out
and
sub
push
pop
in
mov
mov
push
lock
xor
fbld
pop
adc
inc
jnp
jns
movsl
mov
add
into
je
pop
xor
das
mov
das
in
mov
dec
into
dec
mov
mov
int
jecxz
push
xchg
fbstp
xor
cmpsl
cmp
testl
cmp
nop
test
ret
or
push
sbb
mov
mov
xchg
bound
enter
fadd
aad
fstpt
push
sbb
pushf
mov
add
jl
pop
jne
sub
pop
adc
jecxz
pop
pusha
lcall
pop
jge
inc
loope
sub
aam
mov
add
mov
outsl
out
or
mov
mov
mov
jne
pop
ljmp
add
iret
insl
and
subl
xchg
xchg
push
in
inc
inc
and
fdivrs
sbb
dec
push
jno
add
cmp
out
jecxz
xchg
or
dec
adc
pop
sub
or
push
cmpsl
or
and
pop
cld
push
push
das
mov
out
pushf
jnp
dec
in
mov
and
hlt
mov
dec
cmpsb
and
ds
mov
cld
scas
repnz
and
xchg
add
mov
or
roll
test
lods
loopne
hlt
dec
inc
ds
fdivrs
fstpt
dec
notb
sub
push
fs
xchg
push
jecxz
push
js
lret
pop
cmp
pop
and
adc
repnz
xor
sbbb
jns
xor
cmc
jmp
inc
or
xchg
jecxz
test
imul
fwait
jl
dec
jge
cmpsl
popa
into
pop
mov
ss
in
mov
shlb
ljmp
pop
or
inc
out
daa
cmp
popa
or
bound
xor
pop
imul
rcrl
cmp
fwait
adc
add
lds
sti
xchg
imul
mov
cmpsb
jns
iret
lea
dec
fistps
das
lret
test
add
psubd
add
jp
sub
jne
repz
sub
dec
mov
loop
scas
jae
mov
pushf
mov
inc
push
cmp
test
and
push
outsl
test
xor
push
rcr
cmpl
leave
in
dec
inc
std
cmc
mov
cmp
xchg
in
std
sbb
loopne
adc
jnp
fnstenv
das
hlt
out
pop
cmp
cld
aad
fadds
ret
fsubrl
in
dec
rcrb
or
ja
dec
ret
push
sahf
ss
leave
jle
mov
mov
andl
xchg
in
adc
xchg
cmpsb
sbb
insb
movsb
std
mov
call
test
jle
mov
adc
push
loope
stc
fwait
or
es
sti
scas
mov
sahf
dec
push
push
add
int3
test
in
mov
movsb
enter
mov
and
push
sub
jle
cmp
mov
adc
jno
pushl
leave
pop
jmp
jb
adc
mov
push
bound
stos
test
out
pop
xchg
push
push
xchg
cmpsl
push
xor
inc
js
pop
lods
push
outsl
xchg
xchg
test
dec
ja
xchg
iret
push
ljmp
xorl
outsb
pop
cs
loopne
mov
cmpsb
adc
sub
sub
clc
jmp
out
jae
push
adc
jns
fsubs
xchg
nop
jbe
xor
xchg
inc
addr16
test
add
push
xchg
stos
push
aaa
insb
jge
outsl
and
fwait
xchg
sarb
lret
sbb
dec
inc
dec
cmpsl
popl
mov
pop
add
and
rcl
pop
sarl
insl
movsb
jge
mov
xor
cmpsb
pop
lock
fimuls
or
pop
adc
mulps
cmpsb
fnsave
dec
das
jg
add
xor
pop
jg
loopne
inc
sarb
sub
add
into
sub
and
xchg
cmp
push
lahf
in
fstpl
adc
mov
pop
cmpsb
popa
sub
lods
mov
loop
inc
loopne
ds
mov
outsb
shl
pop
cmp
and
sub
and
flds
cwtl
test
pop
std
loop
pop
in
mov
or
sbb
inc
lods
je
fsub
cwtl
fcmove
mov
mov
js
mov
hlt
push
stos
xchg
and
pop
push
mov
cld
xchg
and
sub
fsubrl
xor
dec
add
fimull
icebp
inc
xchg
test
test
nop
outsl
test
push
xchg
mov
mov
arpl
sub
add
add
or
lods
orl
sbb
sbb
std
loope
jg
jge
addr16
and
fiadds
mov
mov
filds
pmaxub
xchg
cmpsb
sbb
out
jne
clc
out
fnstcw
sbb
xor
test
and
rcrl
mov
xchg
mov
lahf
fisttpll
cmp
jmp
testl
cwtl
cmpsb
stos
inc
outsl
ret
mov
fwait
cmpsl
inc
jns
xchg
rolb
dec
mov
in
xchg
push
fcoms
inc
dec
daa
fsubl
cwtl
push
mov
jg
ja
mov
or
out
in
aaa
adc
lock
xlat
jnp
data16
cmp
mov
xchg
or
icebp
and
cs
add
shrl
int3
fsubrl
mov
add
mov
test
dec
rorb
int
jns
xor
lret
lahf
xchg
mov
xor
push
push
lods
lods
stc
xchg
lret
ja
lret
addl
mov
cmc
push
dec
cmp
arpl
cli
nop
call
push
inc
add
enter
ret
push
dec
lahf
push
jno
and
sub
in
mov
ret
cmp
stos
xor
cmp
fnstenv
shr
push
fchs
lock
cmp
inc
ds
push
lret
inc
data16
nop
movsb
into
pushf
add
mov
jl
cli
pop
adc
dec
insl
in
stc
repnz
imul
scas
into
lds
inc
jg
sbb
sbb
sbb
mov
lcall
outsl
push
in
arpl
jg
push
or
jp
add
cmpl
or
dec
sub
xlat
lret
insb
pop
jl
bound
push
daa
call
jbe
mov
mov
mov
testb
jns
xchg
sar
test
fnstcw
fs
sarb
cwtl
cmp
dec
ja
hlt
test
insl
xchg
imul
mov
ja
push
cmp
stc
cmp
ljmp
or
cli
mov
cmovg
xchg
aam
imul
mov
outsl
in
adcl
cltd
mov
sbb
lret
bound
aas
mov
or
aas
fcoml
jg
movsl
adc
pop
dec
xchg
and
nop
xchg
add
enter
stc
es
and
sub
lcall
dec
stos
int
sub
mov
sub
mov
pop
shrl
and
push
lret
jecxz
ljmp
insb
fs
shrb
pop
push
aam
out
xor
inc
mov
cwtl
jmp
adc
fdivrs
popl
lods
jmp
add
pop
lds
mov
sbb
mov
push
push
mov
add
lcall
jno
xor
mov
out
daa
divb
idivl
stc
push
push
pusha
mov
jle
or
popa
cmp
je
sub
xor
and
call
xchg
call
dec
cmpsb
ja
outsl
push
inc
iret
lcall
xchg
jg
lock
ja
sub
adc
push
mov
stos
push
negb
mov
gs
inc
jae
nop
and
daa
dec
in
mov
lea
add
sahf
pusha
sbbl
sub
or
sbb
cmp
mov
lcall
movsl
pop
dec
dec
loopne
mov
ret
cwtl
inc
push
cmp
addr16
lds
int3
push
fisubl
movsl
adc
lods
aad
xchg
mov
jo
lret
mov
cmp
addr16
mov
xor
mov
hlt
jecxz
pop
repz
xorb
ljmp
icebp
fsubs
lret
pop
lahf
adc
nop
shrl
sbb
mov
mov
and
sti
or
out
adc
inc
cmp
addb
stc
mov
into
scas
dec
mov
jae
rol
in
add
cmpsb
shlb
or
and
xchg
pushf
mov
sbb
add
fcomp
xor
nop
sbb
test
jle
inc
mov
sahf
xchg
sbb
and
dec
cmp
seto
fwait
cmpsb
mov
inc
arpl
cli
mov
sub
hlt
out
sub
mov
pusha
push
subb
repnz
jns
lret
rcrb
addr16
sub
fcompl
scas
mov
lret
lret
xor
popa
mov
and
add
mov
lea
loop
add
dec
das
pop
shrl
mov
cmp
sbbb
xor
sti
jecxz
mov
sbb
and
inc
insb
and
jbe
rol
stos
sbb
icebp
loope
inc
push
movsl
dec
fists
xchg
mov
out
sub
xor
loopne
mov
push
scas
inc
mov
imul
jne
and
repnz
enter
inc
lahf
mov
ret
jo
xchg
push
fisttps
std
mov
insb
adc
inc
fadds
xchg
xchg
adc
or
cmp
std
call
push
and
cwtl
mov
sti
movsb
es
or
adc
lods
mov
in
mov
lcall
mov
loope
dec
xchg
sbb
test
arpl
aas
insb
enter
stos
push
mov
and
movsb
pop
pop
fbstp
int
sub
or
push
sbb
push
cmp
mov
fisubs
rorl
cld
push
add
sub
jmp
dec
and
es
push
xor
push
int
fsincos
sbb
loope
fcoml
jno
pop
fnstcw
icebp
mov
pop
jl
nop
and
test
pop
push
addr16
or
aaa
jae
mov
jbe
xchg
jg
sbb
test
push
lods
pop
jae
cmc
out
jmp
ret
stos
pop
xchg
dec
inc
xchg
clc
fsts
and
xor
enter
jg
cmpsl
mov
fcomip
mov
sbb
inc
inc
divb
and
loope
fadds
cmp
sti
jae
std
mov
decb
add
xchg
xlat
loop
push
aam
sti
std
add
push
test
xor
inc
sahf
shlb
sbb
jo
jl
shl
xchg
dec
arpl
sub
xor
cmp
or
adc
leave
bound
xor
lea
push
in
cld
push
sub
and
push
adc
aam
stos
push
xor
dec
pop
popa
out
add
adc
cmp
add
andb
icebp
xchg
pop
int3
roll
xchg
and
and
scas
mov
xor
dec
push
sbb
xchg
rcr
dec
or
inc
cld
or
out
lock
mull
and
lods
pop
ss
scas
sbb
xor
cmp
sbb
mov
pushf
cwtl
stc
cmpsb
rcl
gs
jg
inc
cmp
lea
cli
adc
mov
test
jae
xchg
cmp
dec
xor
xorb
shrl
addb
jecxz
test
aas
add
nop
jns
bound
mov
pushf
jle
mov
inc
push
aas
test
loop
test
imul
dec
test
mov
mov
test
lock
dec
outsl
rolb
dec
shlb
popa
in
jae
in
inc
jecxz
push
out
in
inc
adc
xchg
xchg
aas
jle
xchg
jo
cmpb
fstl
cmp
cmp
jecxz
ret
les
clc
sbb
and
test
dec
fisubrs
leave
mov
jmp
in
xchg
mov
inc
mov
push
cwtl
mov
xchg
xor
scas
repnz
leave
xor
pop
in
jmp
shlb
sbb
int3
sub
and
les
mov
mov
imul
xor
xlat
in
mov
jns
loope
outsl
push
fs
gs
pop
gs
outsb
mov
daa
sub
outsb
or
loopne
stc
or
ja
push
daa
mov
fs
data16
ljmp
sub
rcll
call
sub
sahf
sub
std
daa
insb
outsb
sub
and
mov
mov
popa
mov
cmp
call
adc
out
pop
cmc
rorl
mov
mov
enter
bound
bound
push
jo
imul
gs
lea
inc
mov
mov
xchg
add
pop
sub
jnp
insb
pop
push
push
loope
jg
add
loop
pop
fwait
scas
mov
pop
rol
cs
dec
fbstp
push
inc
and
mov
or
and
popa
ret
mov
push
adcl
and
mov
adc
into
mov
push
or
je
lea
pop
inc
shlb
lahf
mov
lods
xor
ljmp
mov
rorl
adc
jl
fsts
push
pop
jge
and
xlat
dec
daa
aas
sbb
cmp
dec
cmc
mov
in
clc
jp
sbb
mov
add
cmp
call
sti
mov
adc
jb
aas
dec
into
jae
cli
pmaxub
cmpsb
dec
and
cmc
stos
mov
es
test
les
clc
sbb
xchg
scas
pop
mov
mov
ficomps
mov
mov
int
ss
sbb
lret
adc
mov
and
xchg
fcompl
shrb
shrl
or
mov
insl
int
pop
lret
dec
mov
out
fwait
insl
push
dec
dec
mov
mov
xchg
jle
mov
xor
mov
jmp
sbb
jmp
jo
and
pop
push
add
inc
rcrb
popf
mov
cli
xchg
xor
lock
xor
mov
cwtl
jg
ja
adc
mov
hlt
negl
add
push
nop
les
adc
dec
lds
or
xor
push
adc
int
jb
clc
in
push
nop
shll
outsb
fbstp
pop
call
repnz
imul
in
aam
sbb
push
nop
mov
dec
loop
sub
js
jne
scas
mov
and
loopne
xor
fdivl
push
pop
cwtl
mov
mov
mov
inc
or
or
lods
jne
xchg
mov
jne
ja
sub
hlt
push
xor
inc
std
push
outsl
add
fnsave
flds
aad
loope
test
push
das
test
mulb
adc
dec
or
fistps
dec
lods
popa
mov
ss
mov
pusha
sbb
cmc
icebp
loope
sbb
in
push
movsb
sbb
movsb
fs
xchg
in
hlt
mov
adc
cmovl
pop
adc
adc
cmc
fimull
das
out
cmc
inc
movsb
xchg
adc
ds
fldcw
stos
int3
test
xor
mov
scas
roll
jnp
mov
fisttpl
in
jecxz
imul
lahf
outsb
mov
lods
scas
cmp
pop
sarl
shlb
loopne
data16
inc
dec
sbb
adc
imul
in
push
sub
xor
jbe
pop
mov
je
cmp
lahf
mov
decb
push
jnp
mov
stos
and
mov
xor
imul
xchg
aad
pop
jne
mov
pop
out
aad
mov
loopne
in
xor
outsb
cmpsl
ljmp
mov
sahf
ja
sbbb
mov
or
push
and
subb
pop
cmp
and
xchg
fstp
cmp
insb
mov
jp
jp
inc
adc
lds
adc
out
ljmp
sbb
pop
dec
dec
shlb
cmpsb
xor
test
cmp
pop
sbb
xchg
fdivrl
pop
mov
mov
xor
outsb
and
jae
cmpsl
mov
in
mov
out
jae
cmpsl
aad
mov
les
fnsave
inc
arpl
pop
xor
nop
ss
jp
xchg
sbb
xchg
iret
jecxz
pop
xlat
xchg
sbb
pop
lods
lret
push
rcrb
and
out
in
mov
lret
mov
sbb
ds
cli
add
xchg
or
inc
push
mov
fs
dec
push
imul
fistl
decb
sub
adc
les
pop
dec
shr
cmpsb
inc
mov
xor
cli
or
test
mov
imul
add
lret
xchg
push
mov
cmpsl
iret
inc
shll
mov
adc
add
mov
rol
scas
lods
js
push
fcmovbe
adc
jle
leave
stc
loop
cmp
and
mov
scas
add
and
cld
mov
sbb
enter
push
adc
mov
inc
fldt
cltd
mov
lds
sub
ret
js
mov
les
das
lock
pop
xchg
shll
out
inc
lods
mov
or
mov
mov
stos
gs
call
xor
mov
cmp
xorl
out
leave
cltd
movsb
hlt
pop
mov
sbb
aaa
xlat
fstpl
imul
push
mov
jo
shll
icebp
and
test
pop
inc
sub
fidivrl
outsl
inc
xorb
sahf
sbb
mov
mov
mov
xchg
jbe
sarb
aaa
jb
sarl
in
mov
xor
rorb
fcmovnu
out
clc
insb
rolb
and
mov
imul
or
mov
xchg
idiv
iret
subb
inc
mov
cmpb
add
xor
js
stc
dec
jge
call
sarl
shll
into
jmp
rorb
popf
push
aam
dec
xchg
in
xor
jnp
push
cmpsl
stos
push
xchg
pop
inc
mov
les
movsb
mov
lds
and
data16
sbb
cmp
arpl
mov
cltd
add
add
adc
pop
xor
xchg
cmp
xchg
lods
js
into
lret
imul
clc
ret
es
mov
inc
clc
push
mov
mov
out
divb
add
mov
das
mov
mov
daa
push
in
arpl
pop
inc
mov
and
pushf
fstl
addb
and
jb
xchg
insb
lret
inc
xchg
movsb
movsb
sbb
fists
repz
cli
mov
mov
lods
push
test
xor
push
lea
loopne
pop
fisubl
add
and
pop
inc
sbb
inc
je
mov
push
les
adc
mov
sahf
add
sub
call
aas
pop
nop
loop
mov
movsl
addr16
jle
inc
jecxz,pt
std
fldt
es
sbb
mov
sub
lahf
cli
lea
and
popf
test
push
mov
xchg
adc
stos
rolb
stos
insb
mov
sbb
fisubrs
fldt
ds
push
adc
imulb
jmp
cmp
pop
push
repnz
and
outsb
sub
xor
lods
insl
ret
xchg
hlt
out
leave
jo
sub
js
jl
xchg
push
and
add
sub
jmp
scas
adc
in
stos
mov
es
mov
xchg
adc
stc
fmull
and
scas
mov
out
in
icebp
mov
pop
std
dec
in
cmpsb
es
xor
push
fbld
pop
push
daa
xorb
stc
jno
jae
cmp
adc
jge
fstl
daa
xor
fdivrs
pop
aaa
and
or
lds
movsl
jmp
push
in
in
popf
mov
fsubrs
and
xor
insb
adc
push
inc
sbb
cmpb
div
pop
outsl
movsl
sbb
bound
pop
lds
mov
inc
and
xor
xchg
mov
sub
add
jmp
out
fcompl
ss
mov
pop
std
gs
cltd
push
pop
pop
jae
jg
sub
dec
in
decb
inc
xlat
scas
jae
addb
inc
add
adcb
and
mov
adc
movsb
notl
repz
int
mov
fs
aam
rcl
mov
cmpsl
adc
repz
jmp
sbb
out
push
xchg
daa
stc
leave
dec
fucomp
mov
pop
cmc
or
or
lahf
jecxz
cmp
out
rorl
stos
std
lea
lods
sub
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
adc
addl
cmp
popa
cmp
lret
iret
mov
xor
movsb
jbe
loopne
lret
into
pop
js
pop
orb
adc
scas
mov
enter
mov
inc
ret
cmpsl
cmp
movsl
xor
cmp
pop
aam
adc
mov
in
aad
jg
push
xchg
add
xchg
inc
pop
movsl
cmpsl
in
cmp
out
mov
int
push
inc
out
add
enter
bound
xchg
sub
ss
jo
or
in
push
mov
inc
imul
arpl
mov
into
and
xchg
jo
decl
sbb
mov
jmp
xchg
loope
ss
dec
cwtl
push
and
addr16
test
adc
shl
pop
pop
inc
sti
cmp
dec
pusha
pop
push
or
outsb
mov
mov
repz
mov
inc
clc
pusha
insl
jle
dec
shll
dec
mov
fsub
inc
jmp
inc
push
jmp
iret
ds
js
sbb
out
xchg
jge
xchg
pop
movsb
cwtl
push
jbe
sub
lods
fisttpl
lret
jb
sub
dec
xchg
int3
jns
sar
iret
pop
mov
cld
mov
xchg
shlb
pop
fists
iret
mov
add
sub
pop
std
push
push
add
cmpsb
iret
dec
jg
fdiv
fcomps
push
xor
add
jmp
ja
jns
pop
pop
push
xchg
in
addr16
xchg
xor
loope
adc
and
xor
popa
int
mov
inc
iret
sbb
push
push
movsl
adc
push
stos
mov
xor
inc
jbe
scas
pop
sub
sbb
lods
mov
or
push
xchg
out
testl
movsb
rclb
shrb
xchg
ss
mov
clc
sub
insl
test
cmp
mov
mov
shl
sarb
testl
pop
xchg
push
fistl
dec
cmp
das
iret
dec
test
sub
push
jne
adc
push
lahf
inc
mov
inc
ret
xor
xchg
inc
mov
popf
es
daa
pop
das
jmp
unpckhps
notl
loop
jnp
xor
sub
call
xor
mov
pop
jb
jno
cmpsb
jnp
push
pop
cmp
cmp
fmull
aad
push
pop
imul
xor
jp
sub
push
push
outsb
and
cltd
scas
cmpb
stos
jecxz
dec
call
repz
xor
ds
loopne
add
js
insb
xchg
sarb
scas
shll
or
lds
scas
sub
xchg
add
sbb
fbld
add
fcoms
aam
je
mov
or
ret
push
mov
jl
cltd
fidivl
movsl
jb
cld
in
jmp
leave
mov
addr16
mov
push
cmp
xlat
outsl
sub
xchg
sbb
in
pop
sub
mov
popa
stc
sbb
and
in
pop
push
aaa
test
stos
ret
mov
jbe
addr16
sarb
mov
sub
rorl
push
imull
inc
scas
xor
jns
push
pop
pop
repz
gs
stc
push
fmull
xor
jb
pop
insl
lcall
add
repz
mov
sub
sarb
pushf
sub
xchg
pop
lret
cmpxchg
and
fwait
mov
jmp
adc
xor
pop
dec
cli
and
jb
das
bts
or
je
faddl
dec
sub
push
fists
inc
cmc
cmc
stos
out
outsb
out
mov
fsubrl
fs
push
ja
sti
call
leave
hlt
je
jp
push
mov
mov
mov
pop
mov
pop
scas
mov
test
test
aaa
int
jmp
and
mov
jae
pop
dec
adc
loop
mov
or
cmc
cs
push
jg
adc
das
jno
lcall
sahf
movsb
xchg
insb
scas
cmp
movsl
ror
ret
clc
xor
loopne
iret
divps
scas
pop
in
sbb
jmp
andl
jb
lock
stos
dec
cmp
add
imul
push
mov
or
incb
mov
xlat
xor
mov
leave
ja
mov
stos
mov
xchg
mov
push
icebp
xor
and
push
mov
int
sahf
mov
push
das
int3
inc
add
fwait
inc
adc
out
jb
jg
mov
adc
dec
or
fcoml
jg
push
sbb
in
push
push
push
fisubrs
cs
add
mov
xor
lods
dec
and
mov
mov
inc
jo
ret
sahf
mov
jae
data16
xlat
push
int
mov
addr16
clc
mov
movsb
aam
cmp
in
mov
mov
dec
lcall
inc
xchg
pop
popf
cmpsl
jb
cmp
sbb
push
push
mov
cwtl
xor
pop
lret
lock
xchg
or
data16
dec
inc
mov
mov
repnz
insb
stc
dec
rcr
push
and
adc
je
andb
push
pop
mov
pop
lret
mov
cmp
push
or
mov
sub
push
and
pop
fiaddl
pop
jb
pop
setns
fidivrl
sarl
cld
inc
mov
sbb
notb
push
xor
push
movsb
or
movsb
aaa
movsb
filds
insl
sbb
mov
lret
cltd
les
jp
test
mov
cli
adc
and
nop
std
push
xor
jecxz
pop
pusha
or
add
xor
pop
mov
mov
outsb
push
icebp
lahf
adc
adc
andl
movsl
imul
cmp
pushf
and
fbstp
test
notb
clc
sbb
mov
push
fcmovnb
arpl
ja
lahf
pop
mov
sbb
jmp
mov
fimull
xchg
cwtl
add
cli
mov
adc
mov
je
aad
xchg
dec
cmc
cwtl
dec
push
call
dec
push
ljmp
aaa
es
pop
push
cltd
cmc
mov
push
jmp
ja
xor
sbb
or
ja
xor
or
les
arpl
push
jnp
push
push
jb
fidivrl
mov
jmp
mov
ficompl
dec
mov
lods
sbb
xchg
cmp
sub
dec
out
cmpsl
iret
iret
pop
mulb
adc
mov
ljmp
pop
ljmp
pop
in
xor
fldcw
cmp
cs
pop
jo
repnz
push
bound
lods
mov
in
push
test
orb
fcoms
adc
push
push
adc
adc
push
sbbl
loopne
or
inc
leave
dec
mov
ret
xchg
orb
stos
fcos
pop
and
scas
xlat
arpl
and
inc
movsb
fcmovne
stc
mov
fsubs
jb
popa
add
mov
je
push
mov
cld
jmp
push
mov
mov
movsb
sbb
or
adc
mov
add
cmc
cmp
stc
lcall
or
inc
rcr
mov
loope
mov
out
mov
mov
int
pop
daa
outsl
mov
aad
push
stos
jne
dec
outsl
fs
movsb
pop
xchg
les
aam
out
xchg
call
gs
js
int
sub
pop
movsb
or
pop
fucom
cmp
inc
fdiv
gs
sub
mov
xchg
cmp
stos
xchg
sahf
fimull
out
enter
pop
popf
mov
or
ja
dec
out
cs
loop
dec
add
mov
test
dec
into
or
jnp
rcll
push
jo
movsb
out
mov
push
call
adcl
mov
fldl2t
push
pop
push
push
push
nop
cli
push
out
fsub
sub
pop
cs
mov
xchg
es
jbe
mov
jbe
mov
test
movsl
imul
nop
or
scas
jbe
cmp
mov
and
int3
cmp
dec
cmp
cli
push
xor
cs
mov
dec
fstpt
dec
add
cmp
rcr
outsl
and
jbe
je
data16
fbld
sbb
test
adcl
and
add
je
scas
mov
jbe
sbb
jle
sbb
aad
loope
jne
cmp
iret
mov
add
popf
pop
inc
nop
sub
dec
and
cmpsl
mov
punpcklbw
or
adc
push
icebp
jle
xor
mov
lret
pop
mov
aaa
test
sbbb
stos
mov
lret
jge
mov
roll
mov
push
cmp
in
push
mov
and
std
mov
xlat
add
cmp
sbb
and
aaa
cmc
aas
pop
lret
pop
mov
jg
pop
sub
xchg
add
pop
jne
js
inc
cltd
psllw
xchg
dec
xchg
push
dec
hlt
mov
push
leave
in
pushf
sti
dec
adc
inc
xor
jae
jbe
cmp
jle
and
push
fstpt
cwtl
dec
outsl
subl
and
rolb
cld
lret
js
mov
push
mov
test
jae
icebp
or
jo
in
or
mov
pop
mov
addl
in
add
loop
jg
test
ret
andb
jb
lcall
lock
inc
mov
jg
push
dec
mov
aam
push
adc
ljmp
lahf
es
dec
aaa
jae
mov
cmpsl
imul
adc
mov
push
pop
inc
rolb
adc
andb
jno
sbb
add
repz
mov
add
js
std
adc
sbbb
and
xlat
add
cmpsb
inc
shlb
call
add
pop
mov
xchg
cwtl
push
ret
dec
sbbl
sbb
lret
sub
leave
pop
adc
jmp
mov
lret
pushf
mov
jge
adc
and
int3
inc
push
push
pop
stc
fsubrs
imul
je
ret
xorb
cmc
mov
sbb
mov
add
push
jge
jne
adc
sub
add
arpl
fsubrl
leave
mov
jge
out
mov
stos
inc
inc
mov
cld
cwtl
addb
pop
push
fsubl
mov
inc
sbb
xchg
inc
clc
nop
mov
outsb
cmp
ret
or
mov
cmpsl
dec
les
xchg
cmp
out
dec
in
mov
sub
dec
xchg
stos
aad
mov
mov
pusha
pop
shl
xchg
mov
icebp
popf
clc
add
or
mov
push
xchg
jmp
or
inc
inc
es
push
mov
lahf
ds
jno
sbb
add
add
int
lods
and
xchg
push
mov
pop
pop
test
scas
stos
loope
fs
addr16
std
aad
pop
cmpb
sub
negl
lahf
mov
pop
not
icebp
push
xchg
std
data16
test
cmpsb
int
xlat
push
in
sub
xchg
repz
in
adc
ljmp
xor
mov
mov
adc
js
ss
icebp
or
add
dec
mov
cld
in
lret
in
xor
pop
call
stc
cmc
sti
ja
mov
cmp
sub
mov
pop
mov
adcb
cli
xchg
mov
ror
cmp
pop
rorl
repnz
test
or
out
jno
mov
mov
sub
pop
mov
sub
pop
and
fnstsw
jmp
shlb
fisubrl
nop
pop
out
outsb
aas
ror
ficomps
daa
jns
push
ds
pop
xor
repz
out
daa
inc
cs
xchg
addr16
sbb
lds
arpl
das
dec
mov
cmpb
icebp
or
int3
or
in
lahf
insl
pushf
fsubrp
les
loop
arpl
push
or
pushf
shrb
xor
mov
das
in
cmp
mov
aam
push
xlat
and
fwait
push
jg
lret
xor
xchg
repz
pop
gs
pop
mov
cltd
testl
or
push
jecxz
jns
aam
and
hlt
cmp
and
outsl
cmpsb
inc
ret
xor
loop
stos
and
andb
push
outsl
mov
mov
lret
mov
lcall
sbb
out
push
jo
pop
add
mov
push
mov
sbb
and
mov
aad
shlb
fnsave
xchg
les
mov
inc
imul
sub
or
test
sbb
lcall
ja
push
mov
mov
inc
ror
mull
mov
push
sbb
xchg
xchg
mov
insb
mov
lock
push
in
popf
incb
add
push
jg
pushf
add
mov
fnstenv
jge
mov
mov
dec
inc
cmp
fstpl
sub
clc
loop
and
cmc
jge
add
mov
mov
or
xchg
dec
rcr
scas
sbb
adc
inc
out
fisubrl
pop
call
mov
mov
lods
jb
pop
sbb
mov
test
test
pop
aam
jmp
push
leave
or
movsl
push
and
cmpl
xchg
xchg
mov
add
adc
orl
mov
in
mov
hlt
lds
mov
jbe
outsl
scas
out
jg
sub
in
pusha
insb
sub
or
popf
imul
ljmp
arpl
stos
scas
push
cmp
fsubrs
cmp
mov
cwtl
repz
fsubrl
clc
or
loope
mov
shrb
mov
loope
leave
ret
xchg
icebp
sahf
inc
xchg
in
ljmp
adc
lret
and
sbb
mov
repnz
into
add
sub
mov
std
xchg
rorb
test
dec
lahf
bswap
or
or
cs
out
push
test
inc
lds
cwtl
and
pop
hlt
sub
into
adc
insl
rol
jnp
enter
outsl
stos
dec
pusha
lods
pop
cld
pusha
out
and
shlb
cli
xchg
rorl
push
fstp
aam
jno
sti
lea
dec
add
jo
mov
sbb
pop
pop
out
sti
xchg
imul
pop
or
push
mov
inc
test
xor
out
sbb
clc
popa
loop
inc
pop
adc
inc
out
lods
daa
and
cmp
test
push
inc
fwait
hlt
movsb
bound
xlat
xchg
cmpsl
repz
lret
inc
sbbl
xchg
inc
arpl
add
pop
push
mov
loope
aas
sub
adc
out
jmp
fldl
sbb
mov
dec
inc
and
or
cmp
test
gs
loop
lods
jl
leave
out
xchg
xchg
jne
xor
mov
xchg
mov
xchg
dec
or
ljmp
pop
pop
loop
cmp
sub
data16
adc
cltd
jge
pop
cmp
mov
ficomps
hlt
dec
push
inc
test
mov
mov
mov
add
and
je
and
fsub
pop
fisubrs
push
inc
rcl
jno
stos
test
testl
testl
cs
fstps
cmp
sbb
xlat
es
gs
sbb
popf
dec
mov
cmc
pop
aaa
std
in
jnp
jno
and
xor
and
cmc
push
sbb
push
stc
sub
mov
aas
imul
scas
fdivs
xorl
clc
sbb
mov
insb
cmp
adc
testb
lds
xchg
mov
dec
add
loop
sub
mov
mov
inc
xor
add
mov
jne
loopne
jecxz
pop
test
lods
lea
jae
mov
mov
mov
mov
outsl
xchg
mov
aas
inc
mov
je
pop
je
pop
gs
iret
daa
jl
subb
cld
mov
ds
mov
or
sbb
push
inc
stc
push
xchg
or
xor
push
cmc
pusha
mov
xchg
movsl
inc
loop
mov
mov
xchg
popa
mov
movsb
xor
or
xchg
jb
ffreep
mov
mov
shrl
les
das
or
mov
sub
test
pop
add
lret
pushf
jecxz
cmp
adc
xchg
js
xchg
iret
mov
loope
clc
mov
les
and
inc
mov
aas
daa
das
push
loope
push
and
push
jmp
cmp
outsb
push
push
inc
sub
out
pop
imul
cmpsb
insl
in
push
hlt
jbe
xchg
fdivrp
fidivrs
lods
mov
mov
mov
xchg
test
sub
jmp
mov
mov
push
jno
je
test
jmp
adc
sub
loop
aaa
push
lret
aad
sbb
dec
lea
loope
pop
sub
movsb
xor
in
xor
jns,pt
jbe
pushf
outsb
loopne
xor
cmp
lret
sub
jae
jnp
lret
test
shrl
sbb
push
sbb
ljmp
dec
bound
adc
out
pop
nop
shrb
int
call
mov
fld
sar
pop
adc
mov
ds
aad
call
fwait
add
arpl
jp
push
pusha
movsl
xchg
lret
pop
ljmp
hlt
aaa
push
je
movsb
cwtl
or
sub
mov
dec
adc
xchg
xor
xchg
icebp
fiadds
mov
sub
pop
adc
sub
push
cli
jnp
ret
out
dec
xor
mov
sti
sub
xchg
mov
cld
pop
insb
dec
add
jns
cs
add
pop
stos
jo
mov
popf
mov
lcall
stc
inc
stos
xor
cmp
lcall
sar
xchg
stos
inc
inc
sub
mov
mov
fnstcw
mov
lds
test
es
mov
cltd
lret
dec
pop
ljmp
inc
sub
xorb
cmp
mov
mov
cmp
int
xlat
hlt
imul
lahf
insl
cmpsl
xor
and
clc
push
addb
xchg
sub
iret
enter
shll
xchg
jns
sub
loop
mov
xchg
pushf
or
sub
inc
or
sbb
dec
in
and
cmp
dec
xor
mov
push
xchg
cltd
mov
or
sti
sbb
mov
mov
repz
adc
roll
xor
fiaddl
shrl
addr16
xor
out
dec
fnstenv
aas
xor
lods
add
outsl
ret
jbe
cwtl
in
adc
gs
inc
cmp
adc
ds
cltd
nop
jns
addb
mov
mov
inc
xchg
mov
std
xchg
in
pop
addl
cld
mov
dec
push
mov
cs
mov
enter
insb
repnz
sub
cmc
mov
mov
sbb
add
cs
jnp
sbb
jp
sub
cmp
mov
aam
stos
in
shrl
inc
xlat
push
fisttpll
jne
in
shll
les
dec
inc
jle
and
mov
or
inc
out
into
sbb
in
aam
xor
insb
cwtl
das
in
stos
mov
xchg
rolb
rol
pop
loope
pop
mull
mov
das
push
xchg
xlat
pop
xchg
daa
inc
bnd
jg
orb
mov
push
in
push
loope
lods
adc
inc
or
dec
dec
not
push
mov
test
jb
dec
jo
push
and
xchg
xchg
push
push
xchg
adc
mov
lahf
out
in
cmpsb
es
out
and
sbb
negl
xchg
mov
adc
mov
pushf
xchg
add
dec
cs
fcmovnu
mov
xor
dec
in
cmp
inc
pop
movlps
test
lret
sub
outsb
or
cmp
dec
sti
and
fdivrl
pop
add
xchg
ja
cli
pop
fists
loopne
ret
shrb
int3
scas
out
jns
mov
xlat
loopne
sarl
adc
jl
xchg
sbb
ret
sbb
fidivrl
push
inc
mov
mov
inc
mov
mov
test
and
dec
xlat
mov
out
xchg
jecxz
in
hlt
loopne
imul
cwtl
pop
inc
cmp
sub
das
dec
lcall
cmpsb
mov
test
dec
xchg
jbe
fsubrs
pop
test
sarb
mov
fadds
cmc
pop
jp
inc
xchg
fs
leave
inc
daa
mov
fs
stos
mov
sbb
jge
dec
mov
jge
or
jbe
push
fadds
loopne
test
loop
jle
pop
jmp
push
dec
in
inc
mov
xchg
enter
xchg
out
imul
lds
cmp
sbb
loope
stc
lods
ret
test
movlps
lods
push
and
js
out
and
dec
dec
or
or
pop
imul
xor
or
inc
in
jmp
jecxz
ds
xlat
pop
pop
pop
outsb
lret
add
aaa
cmp
stos
mov
fisttpl
jno
lahf
jecxz
cli
sub
sub
sub
xor
mov
int
push
jecxz
stos
adc
cmpsb
imul
or
push
jecxz
push
movsb
pop
aad
mov
rorl
push
push
jecxz
inc
mov
or
leave
sbb
jge
jbe
js
add
add
or
ss
cli
movsb
mov
icebp
sub
xchg
inc
fisttps
iret
push
push
adc
aam
xchg
aad
or
pop
repz
fmulp
ljmp
shlb
xorl
adc
fbld
sbb
lock
mov
mov
test
enter
push
dec
arpl
mov
out
xor
data16
cli
jp
repz
pop
test
jp
jl
lea
push
mov
mov
mov
out
or
jns
ficoml
cmpl
mov
or
push
clc
xor
cwtl
mov
into
fnsave
ret
les
insl
push
mov
cmc
loopne
xchg
jg
bound
mov
int3
cld
shlb
xchg
sarl
mov
pop
jle
lea
js
les
xor
xchg
xor
adc
fcoms
cmc
repz
nop
mov
mov
add
cld
insb
daa
addr16
mov
cmp
adc
push
int
pop
push
push
ljmp
dec
dec
leave
aas
sub
cwtl
or
push
sbbb
and
mov
cmp
pop
and
jecxz
pop
cmc
inc
daa
pop
lea
pop
pop
fstps
push
leave
push
and
cmpsl
cmp
xor
fst
pop
pop
jo
nop
or
push
scas
add
mov
fsubp
push
xor
cld
icebp
cmp
fld
xorb
adc
push
test
in
cmp
ds
fdivrs
xlat
and
xor
cli
cmp
lds
jne
pop
jb
xor
jmp
hlt
inc
mov
mov
daa
fxch
aam
or
cmp
fisubrl
jbe
inc
sahf
sub
mov
lret
push
sub
jp
xchg
adc
mov
icebp
sub
subl
pop
fcomp
push
mov
mov
xlat
adc
ljmp
mov
dec
inc
cli
test
xchg
pop
mov
adc
xchg
inc
cltd
xchg
jne
lods
stos
add
sub
cltd
pop
shrl
inc
cwtl
push
inc
mov
cmpsb
xchg
push
int3
mov
inc
daa
dec
xchg
mov
icebp
sbb
xlat
gs
jns
mov
lea
lret
lret
dec
cmp
xchg
insb
int3
mov
push
xchg
outsl
sub
into
sub
mov
call
jnp
out
sbb
std
add
cli
imul
fwait
mov
xchg
in
insl
or
xor
adc
jecxz
xchg
mov
jl
xor
in
pop
lods
push
cmpsl
adc
pop
les
adc
cmp
pop
and
xchg
mov
cwtl
push
shlb
jo
pop
pusha
and
rol
jnp
or
fmull
jbe
jb
sub
out
pop
insb
in
add
bound
movsl
aaa
mov
or
xchg
ss
into
clc
sti
in
xchg
mov
pop
jae
mov
mov
loopne
add
mov
mov
lret
nop
ja
pop
ret
jmp
and
push
outsb
jmp
les
shld
dec
add
or
mov
sbb
add
outsl
inc
imul
sub
dec
push
pop
test
cmp
push
ss
mov
sub
aam
jno
adc
clc
dec
and
ret
insl
scas
loop
cli
movsb
lock
mov
mov
inc
mov
or
leave
aas
loope
subb
add
arpl
inc
mov
stos
lea
inc
aas
pop
mov
jg
es
add
adc
sub
cs
loope
xor
scas
inc
mov
leave
xlat
add
push
inc
cmp
cmp
xchg
mov
mov
and
fiaddl
sti
loopne
sub
xor
fimull
imull
cmp
in
fwait
test
pop
jbe
pop
mov
jl
insb
pop
in
xorb
inc
je
mov
and
loop
out
dec
insb
cmp
dec
push
fucomp
loop
pop
push
and
testl
loop
sbb
pushf
xor
mov
xchg
mov
mov
test
jbe
out
push
movsb
xchg
popa
sbb
dec
add
mov
jle
pop
mov
sbbb
movsbl
neg
test
leave
inc
pop
pop
inc
or
aas
cmp
jg
jb
xor
adc
push
out
test
xchg
jae
fwait
mov
sub
mov
jnp
jns
push
mov
dec
and
js
in
mov
orb
in
dec
add
mov
adc
cs
sub
scas
adc
orb
sahf
lret
inc
shrb
pop
push
cmp
mov
jo
cmpsl
add
rolb
pop
push
mov
testb
enter
popa
aam
fcmovnu
scas
test
mov
mov
jp
add
mov
insl
xchg
enter
dec
cmpsl
popf
sti
scas
mov
notl
sbb
sub
scas
push
mov
sti
in
out
inc
fnstcw
add
push
mov
outsl
loop
shlb
adc
fs
sete
and
or
dec
jmp
xchg
js
iret
les
hlt
mov
fsubrl
lret
pusha
mov
stc
stc
das
jecxz
pusha
add
dec
nop
lods
xchg
push
xorb
dec
jae
orb
lcall
push
jno
mov
and
pop
icebp
daa
sbb
fwait
std
pop
call
fimuls
push
aam
out
das
mov
sub
sti
ss
push
cwtl
loope
aas
jge
in
iret
push
mov
mov
in
loopne
cmp
mov
mov
mov
in
loop
adc
jmp
cmp
jg
pop
cmp
push
and
lods
mov
aad
movsl
push
jp
adc
leave
arpl
mov
push
pop
inc
xor
mov
xor
mov
out
mov
sbb
dec
shll
mov
pop
pop
nop
pop
imul
imul
pop
js
dec
stos
imul
sub
scas
jge
movsb
xor
pop
sub
outsb
mov
jge
and
or
fwait
in
gs
das
shll
mov
mov
xor
mov
icebp
dec
xchg
cmc
arpl
sub
stos
mov
sub
jne
sbb
addb
lret
daa
lret
icebp
xchg
dec
daa
movsl
scas
fiadds
lods
and
js
inc
ret
popl
inc
repnz
sub
push
xchg
sub
mov
dec
pop
add
pop
inc
xlat
xor
movl
and
clc
or
jmp
lods
js
std
xor
or
call
push
sbb
mov
cli
xor
cmpsl
xchg
insl
js
or
jge
jl
lcall
scas
outsb
cmp
jle
push
xor
mov
sahf
or
add
movsl
cmp
movsb
mov
test
add
mov
xor
inc
fsubr
lret
mov
je
repnz
stos
or
inc
mov
cmp
stc
inc
call
inc
stc
mov
fildl
mov
cmp
dec
dec
mov
add
popa
mov
repz
sbb
sti
sbb
std
aam
jl
out
lods
push
into
addr16
jb
jecxz
pop
and
pop
add
xor
into
in
std
ret
xchg
aas
push
loopne
jmp
ss
scas
decl
pop
jbe
ss
clc
lods
outsl
jb
fsubr
jge
or
lock
scas
dec
fildll
mov
loop
cli
not
jae
or
roll
out
sub
in
dec
xchg
mov
leave
dec
dec
aaa
mov
jo
push
ret
xchg
sub
loope
xor
mov
sahf
pop
icebp
cli
fldcw
out
mov
inc
les
mov
shrl
fstl
dec
loope
rcrl
pop
pop
ret
ficomps
enter
mov
sbb
xchg
pop
jmp
jmp
jecxz
xchg
sbb
shl
push
or
mov
fsubrl
sub
and
xor
adc
xor
test
jne
incb
pop
add
pop
ljmp
add
add
jg
inc
push
cmp
bound
jo
push
jle
xor
arpl
mov
xlat
aad
adc
jo
movsl
dec
fldt
xchg
ja
xor
aas
out
or
lret
in
pop
stos
mov
je
mov
out
and
jae
mov
jecxz
adc
mov
je
pop
loope
dec
loop
iret
xchg
inc
adc
fsubl
andl
mov
fstl
inc
in
xor
cmp
jns
jno
es
jns
mov
dec
or
int3
adc
inc
shrl
dec
pop
xor
gs
mov
and
dec
incl
pop
and
fucomp
mov
incb
jnp
je
inc
or
stos
pop
xchg
jnp
gs
les
push
pop
sub
mov
push
cltd
push
cltd
pop
mov
cli
pop
xor
jg
loopne
cmpsb
xchg
add
mov
lcall
shlb
inc
push
cmp
push
adc
jg
in
mov
sub
sarl
lock
dec
fs
ret
xchg
xchg
fyl2xp1
xchg
and
std
mov
sub
mov
clc
mov
in
xchg
cld
fld
test
jae
mov
loope
sub
push
push
adc
mov
lcall
fistl
int
mov
sub
outsb
inc
fcomps
test
out
inc
jns
or
pop
loope
ss
xchg
nop
pop
sbb
fbld
aam
sbb
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
js
dec
rdpmc
adc
sti
add
or
dec
aaa
jge
rolb
adc
popa
xchg
jmp
outsb
adc
or
lods
or
inc
lahf
das
sbb
in
pop
dec
sbb
xor
stos
xor
aas
adc
sarb
movsb
in
xor
das
jbe
ja
fdivrs
pop
cmpl
lods
pushf
add
mov
pop
xlat
mov
cld
pop
sbb
cmp
aam
sub
cwtl
cwtl
or
repz
mov
arpl
loopne
or
mov
cmpb
out
lea
mull
loopne
cmp
and
leave
out
inc
jnp
shlb
pop
or
xchg
push
sahf
lock
movsl
and
std
out
sbb
pop
mov
push
icebp
lret
jmp
sahf
fisubrl
cltd
xchg
test
icebp
les
jecxz
push
jg
pushf
sub
xchg
pushf
aas
xor
jge
je
gs
push
repnz
cmpsb
jnp
xchg
addr16
mov
xchg
adc
mov
inc
popa
cmp
loope
bound
popf
outsb
rcrb
xor
or
and
mov
mov
inc
xor
fldt
icebp
repz
das
arpl
aad
add
loop
xor
pop
add
push
test
cli
adc
rolb
insl
movsb
mov
stos
inc
pop
cmp
jmp
stc
jl
add
and
aad
sub
or
icebp
sti
or
xchg
aas
jge
shll
or
inc
daa
or
popa
aaa
xchg
mov
or
mov
shl
sbb
movsl
shrb
pop
insb
sub
mov
scas
jb,pn
scas
jo
push
call
out
test
xchg
or
mov
xchg
sub
jb
cld
arpl
xchg
movaps
outsb
adc
mov
test
mov
adc
rorb
fs
ret
aam
or
mov
mov
nop
into
mov
das
into
clts
cmp
leave
lret
fstps
jmp
in
sbb
jnp
cltd
dec
lods
xor
push
rol
pop
mov
movsl
ljmp
pop
dec
pop
add
jne
jmp
jmp
mov
mov
cmp
push
jno
testb
xor
push
loopne
xchg
add
shl
sbb
pushf
test
pop
les
sub
mov
xchg
push
addb
xlat
jge
stos
popa
hlt
in
movsl
and
int
subl
inc
outsb
pop
sbb
mov
sub
jnp
inc
dec
lahf
cmpsb
pop
mov
pop
inc
loope
xchg
rolb
jo
pop
sbb
popa
rcr
or
int
pop
imul
pop
aaa
adc
shl
mov
inc
xor
call
movsl
aaa
test
fisttpll
mov
xchg
into
ret
not
lock
xchg
rclb
pmulhuw
or
push
imul
xor
adc
test
es
ss
mul
std
pop
jmp
test
push
pushf
insl
lcall
pop
in
jbe
dec
cmp
fisubrl
insb
std
cmp
sub
insl
lds
ss
rorb
and
loop
outsl
cs
fnsave
and
and
mov
outsl
cwtl
dec
cmp
js
js
leave
mov
repz
adc
push
outsl
mov
cmpsb
or
jbe
sub
mov
out
mov
jl
mov
inc
sbb
jmp
aam
jmp
in
mov
out
or
inc
enter
add
add
sub
dec
in
and
mov
rcr
xchg
cmp
jo
push
or
cmp
insb
je
pop
cmp
mov
fsubr
inc
dec
sahf
js
outsb
xor
sbb
shlb
lock
test
pusha
or
mov
or
faddl
fiaddl
push
jge
out
adc
in
repz
push
pop
mov
sbb
lock
lahf
cmp
lods
scas
inc
rcrl
rorb
mov
push
sti
jmp
rcl
leave
or
movsl
loope
sub
scas
repz
adcb
out
hlt
cmp
add
cmc
add
outsb
ret
fimull
cmc
repnz
cmp
imull
jg
mov
in
adc
push
shrb
lahf
jns
xchg
jle
ret
and
lock
dec
insb
mov
push
lods
cmc
aaa
jb
mov
inc
xor
push
mov
cmc
mov
lret
hlt
sub
mov
fwait
adc
ss
dec
ret
mov
push
enter
or
cmp
notb
sbb
stos
lahf
xor
jne
push
insb
cltd
mov
xor
std
mov
pop
mov
mov
int
ret
cltd
jp
ss
mov
mov
push
push
and
andl
xchg
xchg
inc
mov
cmpsl
adc
ja
jle
inc
or
or
vprotb
sbb
xlat
popa
cld
push
or
lret
jae
cmp
hlt
push
movsl
sbb
jmp
je
orl
adc
push
std
sub
add
push
into
jmp
adc
jmp
leave
clc
sbbl
call
cmp
stos
js
fs
jne
mov
jne
fwait
jecxz
sub
dec
lods
cmc
pop
xor
es
rcrb
ss
xor
enter
iret
xlat
popf
nop
cwtl
dec
js
mov
fisubl
lahf
mov
mov
vpunpckldq
ja
aad
insl
imul
pusha
sbb
cmp
inc
int
dec
or
jp
push
pop
ja
out
mov
lret
ffree
add
adc
hlt
mov
add
xchg
mov
stc
cmp
mov
data16
push
sbb
call
cltd
xchg
arpl
das
adc
mov
leave
fiadds
ja
sbb
aam
mov
out
das
loopne
cmpsl
jl
mov
cmpsl
sbb
or
mov
push
lahf
jae
clc
test
add
idiv
and
rcl
shlb
adc
mov
in
daa
lods
jns
mov
pop
adc
out
lea
orb
pop
xor
lret
push
jb
mov
adcb
add
addl
int
mov
jg
vpacksswb
mov
fmull
lods
dec
cmp
push
xor
xchg
xor
push
push
mov
mov
rolb
neg
inc
push
fidivs
dec
mov
jnp
test
mov
mov
or
outsl
mov
mov
xchg
stos
addr16
movsb
lea
das
pop
ret
imul
testb
sti
frstor
shlb
and
mov
fldcw
sub
ds
sub
jb
add
outsb
push
pop
ljmp
xchg
fistl
jns
outsb
add
mov
sti
cld
test
sahf
in
ljmp
aaa
stos
fcoms
daa
dec
fldenv
loope
setno
cmp
and
xorl
mov
jns
inc
pop
jae
cmp
xorl
inc
mov
repnz
es
shr
outsb
shlb
push
xchg
xor
ja
outsb
cmp
iret
insl
imull
mov
mov
icebp
cmc
cmp
xchg
aad
int3
out
dec
push
jmp
dec
inc
in
out
mov
mov
ja
leave
add
mov
and
aas
movsb
cmpsl
in
inc
fdivrs
pop
aaa
xor
psubw
bound
daa
lds
in
mov
sub
cmp
out
cltd
ljmp
and
push
or
or
arpl
and
pop
int
cmp
pop
xchg
pop
fcmove
movsl
sbb
mov
dec
fs
in
dec
cmc
mov
pop
scas
adc
cld
in
lock
add
jns
aam
mov
inc
scas
xorl
shll
cmc
sub
pusha
and
call
sub
loop
push
es
sub
cli
fdivs
pop
pop
gs
insb
push
bound
mov
aas
testb
xchg
sub
push
arpl
xchg
mov
add
test
sub
inc
and
xchg
dec
xchg
inc
fcompl
dec
outsl
dec
cs
sbb
gs
in
adc
mov
mov
inc
dec
and
aas
imul
movsl
lret
xchg
das
fdivrs
or
jmp
daa
movsb
pushf
mov
les
dec
jne
push
push
inc
test
mov
lock
push
decl
inc
dec
inc
jne
jle
push
pop
cld
sbb
movhps
mov
and
mov
das
adc
iret
push
dec
xchg
aad
popf
outsb
adc
mov
mov
scas
and
inc
push
iret
xorl
add
or
loopne
aad
out
inc
stc
sbb
psllq
sub
inc
sbb
into
ljmp
cmpsl
jbe
aad
test
xor
add
icebp
pop
mov
push
andl
leave
stc
mov
mov
push
xor
add
mov
adc
push
and
cmpsb
cmpsl
xchg
adc
fs
dec
adc
mov
jo
mov
cmpsb
mov
bound
stc
addr16
insl
adc
aas
ljmp
mov
data16
jle
pop
mov
or
test
sub
dec
fs
rorb
xchg
push
fstl
lock
xlat
test
dec
out
adc
adc
inc
cwtl
out
adc
mov
mov
and
xchg
xor
xor
push
das
jae
push
push
decl
xchg
movsb
popf
and
repnz
mov
xchg
rol
jae
adc
jmp
mov
call
std
sub
setge
push
cmp
mov
in
add
nop
cmc
push
rorl
lea
add
push
push
addr16
mov
popf
jno
in
outsl
or
mov
xorl
cmpsb
cwtl
aad
lcall
cmp
sub
repnz
stos
inc
data16
mov
adc
repz
pop
mov
insl
push
sub
dec
loope
xchg
das
sub
inc
ljmp
sub
mov
fidivrl
sub
js
cmp
xor
adc
enter
adc
add
or
adc
decl
ja
xchg
mov
fs
jb
mov
ja
test
stc
xchg
mov
add
and
into
iret
mov
leave
mov
orl
dec
lahf
add
pusha
mov
jl
stos
shll
xor
dec
adc
lock
cld
add
in
cmpsb
pop
inc
js
das
inc
push
xchg
and
and
lea
mov
test
loopne
push
adc
sbb
mov
and
loopne
jbe
dec
jp
orl
lret
sarl
lock
cmp
pop
scas
sub
popa
jnp
cmp
clc
jp
movsl
mov
repnz
stos
ficoms
mov
pop
push
and
sub
ja
data16
pop
xor
adc
add
cltd
movsl
ss
out
shl
or
cmpsb
and
fwait
cmp
daa
bound
jno
frstor
dec
pop
test
test
mov
mov
or
repnz
sub
lret
clc
cmp
push
mov
bound
or
fmull
je
loopne
push
mov
jno
outsl
ret
jp
dec
cltd
jno
ja
test
push
inc
and
or
rorl
inc
pushf
or
lods
xor
nop
out
out
outsb
sti
call
pop
sub
mov
in
jecxz
je
mov
in
mov
sahf
outsl
out
jecxz
xor
sub
push
cmp
adc
xchg
sub
jns
fdivp
aam
jo
mov
sbb
sbb
xchg
popf
in
ficoms
xchg
imul
xor
or
mov
mov
inc
sbb
inc
lods
sbb
stos
mulb
addl
pop
inc
outsl
repnz
push
scas
mov
cmp
daa
sbb
fs
cmpsb
cmp
imul
fidivs
sub
sbb
clc
dec
fnstcw
cmp
push
out
movzbl
cmpsl
arpl
mov
push
cmc
cmc
lahf
dec
cmp
sbb
sub
test
dec
dec
pavgb
clc
ret
gs
mov
sbb
pop
stos
nop
mov
arpl
es
jae
push
or
imul
lods
aaa
dec
ja
xor
rep
movsb
repnz
mov
je
dec
sub
es
dec
adc
mov
ret
mov
or
fldt
hlt
stos
dec
mov
cmpsb
mov
add
insl
sbb
nop
sub
xchg
stos
scas
mov
dec
shrb
mov
cwtl
mov
mov
sti
and
pop
lea
test
ss
imul
and
fnsave
dec
push
xchg
lret
cmp
cmp
add
mov
dec
xchg
aad
push
int3
psubusw
in
rcll
sbb
pop
cltd
icebp
mov
mov
push
stos
arpl
mov
shll
roll
lds
dec
sub
dec
lret
xorb
add
test
pop
shrl
push
addl
sub
xor
pop
out
out
es
stc
shlb
fs
inc
sbb
cvtdq2ps
daa
mov
sub
loopne
jae
fstl
dec
jmp
mov
fdivl
inc
mov
pop
mov
mov
pop
pop
cwtl
mov
aaa
adc
neg
push
inc
jns
mov
clc
adc
push
push
adc
cmp
jne
dec
icebp
cli
push
hlt
sbb
push
sbb
shlb
push
mov
push
xchg
popl
repz
faddp
das
jae
cmp
push
fdivs
adc
adc
mov
and
rcl
imul
mov
repnz
add
rcrl
lret
add
jecxz
mov
xor
dec
pop
mov
lret
popf
pushf
mov
inc
out
lds
sahf
push
inc
xor
dec
ja
xor
pop
movsb
pop
sub
into
insl
dec
fidivl
or
jne
je
mov
cmp
stos
sbb
xchg
jg
or
xchg
xor
and
lret
loopne
loope
sbb
xchg
mov
stc
cmp
mov
jg
cld
ljmp
dec
lret
int3
mov
ret
lret
stos
dec
lods
outsl
fnstsw
pop
mov
in
jnp
xchg
ficoml
or
cmp
ljmp
ja
fwait
xor
pusha
sub
outsl
ds
cmp
xchg
insl
js
add
lock
and
hlt
add
pop
in
ja
inc
or
xor
loopne
fisttps
add
pinsrw
jns
xlat
mov
int
cmpsl
or
loop
sub
pusha
jns
pop
mov
std
jnp
popa
dec
pop
rcrb
mov
sub
rol
pop
popa
popf
add
lret
inc
xor
repz
popl
incl
pusha
jmp
jns
jecxz
rclb
push
add
xor
xchg
add
imul
lret
pop
insl
mov
push
fwait
gs
scas
ljmp
dec
mov
xchg
push
mov
shll
rcll
cs
popf
push
or
pop
nop
data16
mov
sub
filds
mov
and
adc
jbe
push
int
pop
or
pushf
jecxz
or
in
aaa
xlat
xchg
bound
and
cmp
rcll
jo
cmpsb
insl
and
xor
xchg
flds
mov
xor
pop
cltd
incb
push
pop
rorw
xchg
push
jecxz
aaa
mov
and
movsb
add
insl
xor
sti
jae
and
cld
inc
subl
mov
lea
cli
in
push
stc
mov
mov
ret
mov
jne
push
testb
sahf
dec
push
out
adc
jp
jmp
sahf
and
mov
ljmp
insl
aaa
push
push
into
xor
repnz
xchg
call
pop
inc
xor
in
arpl
lock
or
faddl
mov
je
add
in
andb
dec
fimuls
jb
into
mov
push
hlt
jo
adc
cwtl
dec
decl
mov
sbb
movsl
xchg
inc
ffree
aam
pop
test
test
inc
cwtl
mov
scas
and
pop
mov
stc
xor
inc
jbe
and
js
mov
cmp
idivb
mov
mov
mov
rol
mov
aam
ret
cmp
mov
mov
push
cmpsb
mov
mov
pop
cmp
xor
inc
sti
fidivl
or
xchg
jbe
xlat
xor
sahf
ljmp
mov
and
mov
ds
sahf
mov
dec
movsb
pop
out
push
xchg
add
jg
mov
sub
dec
pop
pop
xchg
dec
mov
mov
pop
mov
inc
aaa
xor
int3
or
loopne
mov
inc
das
adc
fstl
jmp
sub
ja
mov
xor
dec
dec
unpckhps
mov
call
jnp
dec
dec
ret
jg
faddl
xor
rol
xchg
pop
pop
jo
pop
inc
sbb
in
sub
hlt
sbb
pop
ret
adc
dec
jmp
jo
xchg
rclb
and
inc
mov
aas
shl
dec
cli
aaa
in
push
ret
loope
xchg
movsl
mov
enter
mov
and
in
cld
outsb
jno
mov
ljmp
cld
sub
rorb
aas
in
and
insl
cltd
fwait
cltd
xchg
or
sahf
lcall
popf
sbb
outsl
ror
pop
dec
mov
bnd
or
jno
mov
loop
jo
pop
fstl
ret
xor
mov
push
mov
inc
fs
mov
rcll
and
movsb
call
mov
cmc
test
mov
jmp
or
mov
inc
jle
mov
cltd
xchg
pusha
adc
hlt
lcall
lods
push
loopne
ds
cmpsb
out
dec
jmp
xchg
fdivs
loope
addr16
imul
int
mov
mov
add
mov
sub
gs
call
lret
xchg
mov
xchg
mov
test
lea
pop
lea
mov
xor
ficoms
xor
shrb
into
inc
pop
lcall
pushf
mov
cmp
aas
test
mov
imulb
loope
adc
imul
jo
mov
jnp
loope
loop
test
pop
and
jle
lods
repnz
test
cmpsb
pop
or
and
push
and
sub
test
shr
ret
cmc
dec
cwtl
pop
sarb
lahf
frstor
push
cmpsb
aad
inc
aad
xchg
stos
xor
sti
mov
cld
in
shl
jg
add
ds
add
bound
adc
add
jo
push
dec
mov
rcrb
pushf
or
ret
sbb
pusha
jo
jge
or
pop
rorl
in
jp
lods
pop
mov
mov
mov
mov
popf
xchg
std
sbb
popa
push
orl
pop
mov
jecxz
dec
mov
pop
loop
je
push
aam
mov
and
mov
fabs
fmull
shl
push
dec
cmp
cmp
int
or
imul
pop
call
in
push
add
jbe
movsb
mov
push
jge
aas
adc
or
or
sub
sbb
mov
inc
inc
mov
dec
mov
sub
adc
push
or
iret
and
mov
xchg
push
test
jp
push
pushf
dec
shl
mov
mov
add
pop
jb
xchg
stos
xchg
shrl
and
fsubrp
jg
inc
loopne
dec
fimuls
cmpsl
xchg
dec
clc
ss
std
mov
or
sbbb
cmp
sub
shl
sti
js
xchg
dec
ret
dec
lahf
dec
cmpsb
adc
mov
or
adc
mov
mov
xor
push
je
cmp
loop
xchg
inc
adc
sub
jo
mov
call
dec
mov
dec
js
cwtl
dec
push
inc
cmc
int3
lea
adc
cmpsb
lcall
stos
push
js
cmc
je
add
xor
mov
mov
jmp
test
mov
dec
test
aad
rcrl
jge
insb
or
lret
push
mov
andb
cs
ja
cwtl
das
orl
adc
add
in
adc
shll
push
lock
dec
enter
lods
cmp
or
les
xor
xchg
mov
jbe
hlt
jns
push
dec
or
test
leave
inc
test
mov
lahf
pop
sub
insb
sub
jb
shrl
fcomip
rorl
mov
xchg
lahf
adc
fisubs
sahf
sub
testb
jg
mov
rorl
scas
cld
sbb
popa
mov
lods
sarl
sub
pop
cmp
es
pop
nop
out
mov
dec
mov
jl,pn
pusha
ret
xchg
inc
call
mov
adc
jne
scas
jnp
lock
mov
mov
lods
into
fucomi
std
gs
lahf
mov
in
xchg
cs
popa
fdivl
ret
in
insb
pusha
test
shl
cmc
je
scas
std
mov
mov
jae
fs
sub
sar
cmp
xor
dec
not
and
leave
lock
icebp
cmpsb
xchg
cmpl
addb
std
shrl
push
mov
xchg
mov
or
xor
push
frstor
int3
push
mov
push
jecxz
ret
dec
mov
mov
mov
jmp
mov
into
mov
add
mov
adc
imul
jg
cmc
cmp
dec
jecxz
dec
xchg
mov
stc
dec
inc
cmp
mov
jmp
mov
pop
xchg
ljmp
jno
sarl
cmp
mov
cmc
scas
pop
sub
movsb
adc
cmpsl
sub
orb
push
xor
shll
cmp
loopne
jmp
out
adc
jmp
sbb
fsubr
cmp
sbb
cmc
jns
cmp
adc
jb
pop
pop
call
imul
cmpsl
mov
pop
add
push
repnz
movsl
cltd
stos
or
cli
xchg
mov
mov
imul
xor
outsb
pop
mov
aaa
icebp
add
dec
rcrl
dec
fisttps
fmuls
adc
inc
mov
mov
or
inc
xor
push
sub
push
xchg
mov
push
loop
dec
xor
sbb
stos
fidivrl
mov
jae
jge
sub
nop
faddp
jnp
dec
outsl
cmpsl
inc
push
imul
xchg
jnp
cmc
imul
sub
jp
sar
xor
jecxz
mov
pushf
add
mov
push
mov
add
push
xchg
mov
loopne
iret
mov
lret
test
push
and
cmp
pop
cltd
divl
dec
sbb
jne
ret
mov
jecxz
hlt
dec
or
jp
pop
sub
js
mov
in
dec
testb
lock
fistpl
sti
mov
jo
or
das
cmp
or
aaa
and
cmpsb
in
sbb
inc
rcll
mov
push
sub
mov
pop
push
adc
leave
xchg
or
fs
and
sub
adc
je
int
sub
loopne
mov
push
adc
aaa
or
fldl
jne
inc
lcall
imull
xor
jo
sti
fiaddl
jmp
stc
pop
pop
bsr
mov
stos
mov
stos
and
das
add
xor
movsl
cld
mov
insl
add
fcmovnbe
mov
dec
out
cmpsl
cs
cmp
lods
xchg
mov
fnstenv
inc
js
imul
jp
pop
aaa
inc
mov
loope
pop
shrl
popf
mov
dec
lcall
movsb
push
add
stc
das
int
mov
mov
cli
push
out
sub
push
mov
movsl
dec
aaa
pop
pop
jmp
mov
xlat
les
aas
pushl
mov
xlat
div
repnz
std
xchg
imul
cmpsb
test
rcr
dec
insl
mov
sub
adc
mov
adc
inc
cmp
jae
mov
inc
push
gs
mov
test
std
incb
and
pop
or
adc
mov
mov
fwait
or
loopne
dec
jmp
dec
fcoml
pusha
sub
jmp
push
pop
call
into
or
mov
ss
mov
mov
xchg
dec
movsl
sti
out
lods
xchg
popa
mov
pop
mov
adc
xor
inc
aaa
xlat
lahf
mov
xchg
mov
mov
outsl
mov
mov
ja
mov
je
popa
movsb
dec
testl
push
scas
sbb
imul
cmpsl
pop
cmovae
outsl
and
push
or
lea
shll
mov
jne
push
in
bound
mov
xchg
jno
jb
and
gs
pop
ljmp
fistps
adc
push
xchg
jp
mov
flds
into
and
push
mov
jl
and
loope
les
and
sub
dec
in
lods
cld
lods
cmp
mov
sbb
sub
aas
push
fsubs
arpl
add
cltd
rclb
fcoms
in
sub
adc
inc
call
lret
jp
or
inc
sub
fldl
aas
mov
and
add
xchg
inc
push
pop
jle
lcall
testl
mov
dec
cmp
cmpsb
adc
fistps
stc
clc
lock
and
cmpsb
lods
lret
sbb
cmpsl
jne
push
xor
pop
popa
popa
cld
mov
jecxz
gs
pop
pop
inc
or
fbstp
push
aaa
inc
jg
bound
mov
stc
test
js
fnstenv
inc
fsubr
xchg
cwtl
sub
add
sbb
in
fcoml
movups
push
and
shlb
dec
cmpsl
xor
test
jnp
inc
in
scas
lret
or
jl
dec
stos
pop
addr16
jno
xchg
mov
data16
jo
xor
add
out
xchg
sub
mov
mov
cli
pop
mov
jns
stos
add
mov
testb
jecxz,pt
inc
mov
leave
push
jl
notl
push
dec
xor
loope
push
pop
les
add
xchg
xor
dec
int
inc
cmp
or
push
and
add
mov
sbb
xacquire
ja
cmp
xor
mov
lods
jno
mov
cmp
fucomp
mov
movsl
fcoml
test
pop
push
repz
sahf
adc
clc
sub
jle
sahf
jmp
cwtl
sub
jg
andl
sub
add
stc
popl
cmpl
sub
push
jmp
mov
popf
shrl
lahf
lcall
adc
into
push
lcall
mov
sub
dec
fstl
adc
loop
dec
adc
mov
adc
adc
gs
cmp
cmpsb
aad
mov
push
xor
lods
je
lods
sub
nop
repz
push
push
push
gs
imul
aas
ss
dec
cmc
outsb
test
and
add
out
lret
cmp
out
or
fucomip
xchg
in
push
pop
cmc
fucomp
cmpsl
xor
shl
mov
sub
stos
push
lret
pop
xchg
sahf
gs
loop
pop
xchg
sub
insl
mov
pusha
divl
cmp
inc
sbb
push
int3
or
dec
int3
mov
js
inc
clc
mov
test
push
mov
es
sub
jb
xchg
in
push
dec
and
mov
add
sub
f2xm1
or
add
stc
lods
repnz
xor
jmp
jmp
imul
xchg
mov
loop
out
and
add
xor
or
xchg
lods
jp
addl
xchg
das
mov
push
ret
roll
dec
mov
add
call
pop
call
ret
pop
mov
outsb
stos
or
push
mov
inc
je
jp
mov
mov
jp
sarb
std
scas
add
movsl
scas
jg
pusha
cltd
fs
dec
cmpsl
repnz
sbb
cmc
rcrl
lret
stc
fadd
mov
jmp
pop
iret
roll
dec
dec
adc
nop
xorb
std
jnp
mov
jb
cwtl
pop
push
sbb
sbb
test
iret
imul
mov
mov
cld
jnp
xchg
cmpsl
out
int
dec
bound
in
sbb
dec
lods
cmp
mov
push
inc
mov
inc
jne
int3
lea
mov
hlt
mov
xchg
fldcw
loope
dec
aam
inc
sbb
jmp
out
test
out
add
cmp
daa
cltd
sbb
adc
cmp
mov
das
js
push
cltd
ds
xor
mov
int3
out
lock
and
or
jl
call
pop
rolb
inc
in
rdmsr
xrelease
loop
push
mov
lahf
fadd
fidivrl
xor
xchg
xor
add
repz
mov
jne
mov
mov
movsb
test
sbb
cld
lret
test
push
and
cwtl
mov
scas
out
jbe
mov
and
cltd
sub
fbstp
fbld
dec
mov
push
push
lods
add
loop
jnp
push
out
xor
lock
sbb
imul
xor
dec
cmp
outsl
mov
mov
lods
sbb
sub
and
setno
jle
jmp
mov
sbbb
outsl
clc
dec
fistl
add
in
nop
addl
cs
les
repnz
mov
push
stc
lds
push
jg
int3
mov
sbb
bound
add
imul
ror
test
es
outsb
lods
shll
call
jb
mov
stos
scas
hlt
push
ds
daa
icebp
inc
je
sub
mov
mov
adcl
push
decb
cmc
aad
xlat
test
push
mov
jp
dec
sub
inc
adc
cltd
mov
lods
jg
in
xchg
pop
pop
lahf
pushf
loope
push
inc
enterw
mov
cld
cs
and
sarl
xchg
xchg
pop
lcall
mov
jae
mov
outsb
add
fstps
cltd
inc
add
cs
adc
or
inc
loop
mov
push
mov
adc
cmp
nop
dec
push
jns
inc
lods
sub
push
das
or
dec
inc
mov
test
and
lret
jl
pusha
and
rclb
jp
out
lahf
dec
sub
js
sbb
sar
mov
enter
add
add
and
add
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
dec
mov
xchg
rolb
cmpl
mov
mov
pop
sbb
arpl
in
xchg
mov
imul
fsubr
arpl
stos
cltd
sub
mov
mov
in
or
cmp
lods
mov
mov
push
ss
movl
addr16
sti
push
add
add
ret
sub
leave
push
inc
mov
sbb
pop
pop
rorl
mov
out
sub
pusha
inc
mov
cmc
add
testl
repnz
mov
sti
into
lahf
ret
adc
sbb
xor
pop
inc
or
inc
mov
fdivr
das
mov
adc
out
xchg
add
xor
rcrl
push
js
into
jae
sahf
push
out
jecxz
out
outsb
es
sahf
adc
clc
and
add
cmp
inc
lcall
cmp
popa
inc
aad
lods
mov
xchg
and
je
std
xor
shll
xor
lods
xchg
xchg
add
or
inc
loop
or
lret
and
lahf
dec
jp
xchg
out
jno
pop
pop
ret
scas
xor
ret
or
ds
push
outsb
lcall
sbb
arpl
pop
pop
pop
or
push
cmpsl
lock
jne
push
test
jb
loope
xchg
fidivs
sahf
push
sub
add
daa
xor
mov
xor
adc
enter
out
int3
push
xchg
aaa
mov
adc
fiaddl
and
pushf
cltd
adc
add
sbb
pop
add
pop
push
cmpsl
pop
sbb
xchg
mov
jne
mov
movsbl
cmp
mov
stc
bound
je
dec
jbe
int
fcomps
mov
mov
and
cli
jmp
or
jnp
xchg
jl
insb
pop
mov
add
add
xchg
imul
es
shll
mov
sahf
mov
notl
jge
movsl
push
dec
xchg
jne
insb
sbb
push
ja
mov
loope
add
outsl
popf
sbb
push
sbb
push
outsl
push
jo
hlt
xlat
mov
dec
mov
push
imul
jmp
aas
cmp
call
inc
cltd
mov
adc
mov
push
push
les
and
push
xchg
lcall
in
loopne
xchg
and
push
mov
sub
jp
push
adc
lahf
cmp
mov
jns
xchg
xor
inc
xchg
in
xor
gs
inc
xor
daa
int3
mov
push
or
gs
mov
data16
int3
cmpsl
mov
es
mov
test
lock
mov
fisttpll
movsb
insb
push
xor
lods
lret
cltd
into
leave
mov
jle
int
dec
lock
in
dec
sbbb
scas
aas
and
ss
call
and
fs
nop
loope
rcll
adc
insl
popf
stos
adc
aaa
adc
lods
ror
add
push
ja
mov
in
dec
rcll
sub
lock
in
out
repz
push
sub
and
jbe
dec
ret
sbb
xchg
je
mov
daa
or
mov
xor
imul
push
pop
mov
jle
mov
cmp
or
mov
insl
test
aam
xchg
loopne
or
cmp
and
orb
xchg
scas
xchg
std
xchg
rclb
mov
xchg
pusha
int
add
icebp
pop
jne
dec
xchg
inc
dec
xchg
pop
aas
into
std
cwtl
fstps
out
or
mov
xchg
mov
xor
fwait
daa
mov
popa
jb
fwait
mov
push
mov
xor
xchg
shll
mov
adc
dec
sbb
lock
mov
push
mov
fiaddl
scas
xorb
mov
and
add
or
and
test
daa
movsb
scas
mov
cs
stos
cmc
xchg
pop
shrl
out
xchg
adc
mov
je
adc
repz
xor
mov
mov
call
movsl
dec
sbb
rcll
scas
sbb
or
jo
mov
xchg
jg
out
xchg
shll
call
cmp
das
shl
xchg
mov
fbld
sub
sbb
sub
fwait
subl
xchg
mov
mov
addl
adc
in
rclb
je
iret
push
push
or
negb
aad
daa
js
stc
gs
pop
sbb
addr16
ret
in
adcl
das
icebp
sar
shl
ret
movsb
mov
rcr
loop
pop
cmpl
adc
sbb
cmpsl
push
scas
btr
cld
push
shll
mov
rcr
inc
test
mov
roll
mov
sbb
inc
je
fmull
inc
enter
sbb
xchg
xchg
add
insl
shrb
inc
xchg
and
adc
cltd
mov
stos
mov
dec
shll
dec
inc
scas
ja
mov
sbb
mov
pop
jle
sbb
mov
sahf
mov
sbbl
jge
filds
decb
add
pop
sub
movsb
pop
inc
ret
or
imul
outsb
pop
xchg
insb
cmpsl
mov
xchg
sbb
lea
xlat
addr16
jmp
push
mov
or
sbb
aaa
lea
lods
jno
cmp
sbb
cmp
jge
ror
aaa
pop
in
aam
inc
nop
dec
or
cmc
test
insl
fsubs
insl
adc
xor
sub
lds
popa
sahf
rcrl
cmp
scas
jle
mov
jmp
push
scas
lahf
xor
cmp
clc
imul
adc
push
jmp
out
and
daa
and
fistpl
mov
cmpb
jne
push
mov
pop
ljmp
mov
orb
call
je
lret
or
push
xchg
scas
mov
jnp
shlb
xchg
cltd
pop
adc
call
fistpl
jbe
push
xor
mov
fs
das
inc
in
push
pop
xor
and
ljmp
repnz
pop
mov
xchg
push
push
pop
push
or
lret
test
and
ss
lahf
cmp
std
insl
dec
das
push
in
stos
jb
cmpsb
push
pushf
cmpsb
inc
sar
fwait
movsl
add
dec
sbb
inc
pop
mov
add
test
es
addr16
shlb
inc
fs
jg
pop
adc
les
or
jmp
inc
subl
faddl
lock
sahf
fs
dec
aas
jp
dec
and
inc
sub
adc
mov
fidivs
sub
mov
cli
outsl
aas
mov
mov
jle
das
cmpsb
push
pop
aas
call
inc
inc
rolb
andb
mov
outsb
mov
sbb
sbbb
scas
mov
inc
add
rcrb
lret
lods
insb
test
insb
shll
std
popf
out
xlat
jns
mov
cli
cmpsb
aam
mov
jl
movsl
ficompl
jp
test
jbe
out
lods
je
lds
sahf
in
test
pop
mov
and
jmp
sub
pop
sbb
test
std
xchg
inc
mov
scas
mov
mov
sbb
out
and
dec
in
adc
mov
stos
imul
ficoms
out
cmpsb
inc
inc
mov
hlt
cmp
jno
pop
fdiv
cmp
std
std
inc
pop
pop
pop
loopne
cmpsb
imul
mov
ret
test
das
xchg
aam
mov
mov
push
lods
mov
mov
pop
xchg
scas
repz
rcrb
lods
sbbb
sub
out
xlat
fwait
hlt
cmp
les
jg
or
or
inc
lahf
cs
mov
lret
jge
repnz
dec
inc
xchg
mov
test
xchg
aad
leave
mov
cmpsb
out
push
enter
inc
test
sub
out
xchg
adcl
fsubl
stos
mov
push
sub
push
in
xchg
mov
or
push
lcall
in
inc
cs
nop
dec
jnp
cmp
xchg
shl
sbb
jp
jbe
je
ret
insl
pop
mov
mov
popf
pop
cs
loopne
stos
adc
ljmp
sub
cmp
xchg
sub
pop
sub
dec
je
push
push
es
jae
xlat
xor
adc
outsl
sub
lock
cmpsb
mov
dec
in
push
test
into
hlt
hlt
mov
into
push
cmpsl
adc
xor
aas
push
push
inc
xor
arpl
fisubl
dec
pop
data16
lret
sarl
jns
fsubrs
mov
push
aam
rcrl
sub
mov
shlb
cmp
sub
or
repz
or
dec
push
orb
roll
movsl
je
movsb
fwait
cmp
jne
push
shrb
fcmovne
xchg
add
pop
jae
push
insb
lods
lock
jb
xchg
std
mov
stos
in
push
scas
xchg
rdtsc
lock
mov
sti
in
insl
mov
mov
das
push
out
dec
mov
fstpl
dec
in
jecxz
xor
sbb
inc
adc
aam
pop
rorb
loop
xchg
test
mov
sbb
xor
jge
xor
mov
mov
jecxz
movsl
testl
arpl
cmp
enter
adc
xchg
cmp
push
cmp
jne
scas
mov
mov
lock
sub
lods
enter
add
daa
dec
push
mov
xchg
mov
dec
jno
repnz
dec
loope
mov
jg
adc
cmp
sub
dec
repnz
jle
fisubl
inc
xor
popf
fiaddl
outsl
xchg
arpl
mov
lods
pop
ds
cmp
adc
shrb
jbe
popf
adc
and
es
sub
adc
jle
mov
loop
sbb
iret
mov
lea
dec
add
test
mov
fs
push
shlb
shlb
enter
jmp
jl
scas
inc
jle
rorl
call
pop
push
and
fsubl
sub
mov
into
pop
ret
xor
or
dec
jle
dec
mov
movsb
xor
aaa
jo
xchg
mov
or
mov
iret
dec
int
nop
push
nop
pushf
ljmp
mov
out
push
nop
mov
sbb
adc
sbb
sbb
cmp
cmp
shll
mov
or
dec
imul
daa
test
scas
stos
jae
iret
dec
repnz
sbb
mov
or
lahf
insb
push
cmpsb
cmp
jg
mov
mov
xchg
out
ja
mov
mov
shrb
adc
mov
jnp
mov
or
push
mov
test
inc
jecxz
ror
inc
fsub
cmp
fldt
jecxz
pop
jecxz
jae
dec
push
mov
jmp
sub
fiadds
and
jecxz
insl
mov
inc
sub
cmp
add
sbb
add
or
mov
or
or
bound
jg
add
leave
loope
aas
popf
stos
mov
mov
cld
dec
dec
and
inc
mov
cmpsl
jnp
xchg
fidivl
pusha
jbe
push
mov
mov
add
mov
fabs
adc
iret
lea
dec
aad
cmc
mov
push
jns
mov
mov
mov
sbb
adc
and
arpl
in
mov
push
mov
pop
jb
xchg
out
out
push
and
es
arpl
mov
jnp
pop
test
int3
adc
sub
pop
cmp
je
pop
sbb
mov
mov
push
cmp
xlat
adc
fldcw
cmp
in
pop
stos
pop
loopne
imul
and
adc
jge
std
and
cmp
and
rorb
js
jg
inc
or
push
inc
adc
arpl
fwait
pushf
sub
repnz
push
nop
mov
xchg
sti
xchg
mov
mov
jb
mov
pop
mov
sbb
cmp
mov
xlat
or
jb
adc
es
mov
mov
xor
aad
outsb
fcomps
xor
test
mov
scas
dec
int3
mov
sub
addr16
and
ret
out
aas
hlt
inc
sahf
mov
mov
inc
dec
xchg
int3
sbb
push
ja
ret
push
add
ds
sub
cmpsb
xchg
mov
std
adc
notl
aas
scas
popa
pusha
int3
cmpsl
pop
mov
mov
add
dec
fs
push
xchg
repz
test
aad
push
cmp
cltd
sbb
dec
mov
xchg
hlt
das
mov
jae
dec
aas
pop
jae
sti
outsl
dec
popf
sub
lret
sbb
int3
xchg
fistpl
push
movsb
xchg
sub
in
mov
mov
ret
cmpsb
xor
outsl
popl
das
pop
ss
dec
mov
mov
test
and
in
cmc
mov
daa
pusha
mov
ja
mov
mov
jg
mov
push
enter
adc
xchg
pop
sahf
scas
ret
mov
xchg
jmp
mov
movntq
out
call
movsl
mov
sbb
stos
mov
sbb
push
and
std
pop
pop
push
mov
lods
popa
or
or
cmp
fstpl
jmp
pop
in
stos
into
fwait
das
push
xor
cmc
pcmpeqw
pop
fsts
sub
aad
adc
adc
mov
gs
push
jb
xchg
jmp
fstl
cltd
xor
fiadds
aam
xor
jle
xor
lods
add
mov
pop
cltd
out
dec
into
xchg
insl
adc
fmulp
sbb
jnp
imul
fwait
sub
sub
and
dec
inc
lret
cmp
inc
stc
ret
mov
pop
inc
pop
pop
test
cltd
out
pusha
in
cli
in
cmp
jns
leave
ljmp
xchg
es
addr16
gs
sub
cmp
repnz
mov
sub
pop
or
sub
fcmovnbe
scas
call
loopne
adcl
idiv
outsb
push
xlat
mulb
flds
aas
sub
imul
xchg
adc
scas
push
shll
repnz
stc
test
xchg
out
orb
mov
jno
xchg
jnp
adc
inc
daa
xchg
xchg
jne
fistpll
xchg
fldcw
push
fistps
int3
jae
fdivrs
sar
sub
fcomps
stos
mov
xchg
cld
repz
notl
push
adc
loopne
jno
shr
sub
adc
add
push
lds
or
xchg
dec
rcll
push
mov
push
push
and
push
push
cmp
xor
out
hlt
lret
mov
xchg
sbb
daa
mov
std
pop
jecxz
and
lods
sbb
mov
adc
mov
ret
stos
clc
xchg
adc
sub
cltd
and
xor
inc
dec
jmp
mov
sub
inc
adc
push
bound
icebp
cld
xchg
sbb
dec
movsb
movsl
jnp
fistpl
aam
cmpb
cmp
sbb
inc
or
int
into
mov
adc
hlt
dec
mov
adc
outsb
scas
push
clc
aas
dec
cmp
jge
mov
lret
xchg
test
lcall
hlt
xchg
push
es
mov
mov
mov
mov
repnz
out
and
and
adc
push
adc
push
inc
xchg
cmp
xchg
sahf
aaa
dec
out
enter
out
movsb
xor
pop
scas
test
push
mov
loopne
pop
push
out
push
push
mov
pusha
lret
jp
outsb
adc
and
and
arpl
fdivl
jno
push
out
add
jecxz
arpl
add
sub
icebp
arpl
pop
mov
jns
mov
sahf
cmp
jmp
sub
mov
aam
sub
mov
xchg
mov
out
push
push
nop
lahf
push
fisubl
lods
pop
aas
pop
jns
stos
pop
gs
js
push
pop
test
push
insl
cmp
leave
ds
sub
fisubrl
sub
inc
outsb
cmc
pop
loopne
cmp
jge
sbb
add
cli
cmp
jmp
cmp
jge
insl
jbe
mov
push
push
dec
jg
sub
adc
popa
mov
lods
dec
shrl
xchg
inc
mov
aam
ja
lds
lea
or
call
jge
pop
test
add
push
and
inc
ds
pop
push
xchg
std
xchg
add
push
xor
fsubrl
sti
mov
mov
mov
out
lea
sahf
mov
cmp
icebp
add
dec
pop
sbb
popa
subl
in
mov
cmpsl
aam
xor
rcrb
jle
pop
or
stc
test
mov
lret
pop
jns
in
stos
mov
cwtl
lods
in
stos
clc
shrb
jmp
enter
fisttps
jp,pt
jge
das
and
cs
dec
mov
add
pop
inc
fisubrs
jae
fwait
jne
repz
or
scas
inc
cltd
lea
mov
and
push
mov
xorb
ret
push
jb
aad
roll
test
sub
iret
xchg
out
fidivl
jae
inc
lcall
add
inc
mov
add
or
cmpsl
adc
add
mov
and
mov
inc
insl
jns
pop
aad
lret
pop
cmp
in
mov
outsb
sub
xchg
lock
xor
imul
mov
aam
push
xchg
add
xchg
repnz
rorl
and
push
inc
xorl
jno
xor
out
ja
ret
adc
rclb
and
dec
daa
mov
movsl
mov
cmp
cmp
fnstcw
fdivs
jae
pusha
cmc
cltd
popf
testb
imul
ret
and
dec
outsb
adc
push
xor
sub
sti
add
xor
outsb
xchg
ror
loop
add
fwait
mov
nop
out
jmp
inc
icebp
out
out
jbe
movsl
shll
out
jle
push
xor
push
pop
mov
shrl
mov
in
jae
sbb
mov
arpl
and
adc
lea
icebp
xchg
stc
dec
xchg
push
sub
cmp
xor
mov
mov
sbb
out
in
adc
dec
xchg
inc
aam
push
hlt
ljmp
sub
sti
xchg
enter
into
gs
rolb
rol
rol
xor
ds
xchg
imul
sub
push
pop
outsb
dec
mov
pushf
dec
cmpb
xchg
fdivl
lea
jle
into
rorl
popf
jns
js
mov
shlb
mov
ret
aaa
xor
adc
mov
icebp
pop
sbb
mov
push
mov
orb
in
jge
in
loope
into
jno
and
xor
cmp
call
cmp
adc
fisttps
xor
jb
mov
shl
outsb
dec
test
lahf
xchg
pop
adc
adc
shlb
sbb
push
cmc
negl
inc
mov
and
mov
dec
imul
ds
cmp
pop
inc
dec
fstp
and
jo
fistpl
fnstcw
fisubs
push
mov
xor
out
sub
sbb
cmp
cmp
lret
aas
xor
and
xchg
iret
inc
sub
xchg
aad
jl
movsl
sbb
fldenv
sahf
out
xchg
push
icebp
push
hlt
or
push
pusha
cmp
xchg
cmp
inc
mov
in
adc
scas
sbb
mov
adc
fwait
outsb
movl
outsb
push
or
mov
jl
xor
in
out
das
dec
pop
xor
pop
loop
int
sarb
push
push
push
pop
inc
pop
jge,pt
sub
loopne
push
jae
iret
cmp
push
scas
stos
ret
loopne
push
jae
jg
dec
ret
fs
out
mov
mov
out
sbb
lods
bound
addb
cmpsl
inc
arpl
xchg
inc
mov
popa
mov
add
cmp
pop
jno
cmpsb
loopne
mov
xor
add
mov
mov
lret
shll
aas
pop
push
xor
and
lret
mov
inc
dec
cmp
fnstenv
imull
mov
movq
mov
add
or
mov
fwait
mov
not
sub
sub
dec
aad
movsb
dec
fcmovnbe
out
mov
jge
dec
xor
out
lcall
fstps
pop
jno
xchg
lret
dec
pop
mov
gs
jge
sti
icebp
pop
movsl
xchg
mov
inc
shl
jp
in
dec
adc
mov
lds
repnz
mov
jmp
add
pop
mov
mov
jns
inc
xlat
sahf
fsubr
push
aas
xchg
idiv
fxtract
fldenv
push
cmpl
icebp
fsubrl
ficomps
scas
loope
push
insb
and
pushf
mov
fwait
or
sbb
not
imul
pop
inc
js
daa
loopne
inc
sub
insl
jecxz
xchg
pop
dec
nop
insb
clc
sub
xchg
loopne
sbb
and
jbe
out
xchg
sbb
jb
fisubs
popl
int3
add
out
mov
cmpsb
jbe
pop
jge
inc
jle
lcall
xlat
mov
scas
push
cmp
mov
and
popa
cmp
daa
push
pop
je
pop
in
xor
push
jno
xchg
add
loop
test
push
hlt
mov
sub
xor
test
ret
fcompl
xor
scas
jg
lock
je
add
adc
inc
xor
mov
adc
inc
inc
lods
imul
mov
sub
nop
pop
dec
add
dec
das
enter
inc
mov
xchg
shll
ror
jg
lock
mov
sub
ret
int
sbb
and
mov
nop
fucom
adc
cmp
sbb
adc
pop
inc
mov
add
and
lea
add
les
cmp
mov
cmp
pop
xchg
xlat
mov
dec
cwtl
mov
call
push
mov
xchg
jp
stos
adc
and
xchg
inc
xor
mov
mov
roll
mov
sub
pop
mov
mov
xchg
or
xor
int3
and
scas
bound
fmull
cmpsl
push
insb
adc
and
clc
or
roll
inc
xor
aaa
gs
mov
ret
fmulp
fidivrl
xlat
dec
leave
stos
stc
and
sub
cmc
lret
test
mov
cwtl
std
hlt
jae
sar
std
pop
in
cmp
push
inc
roll
outsl
outsl
cmc
jle
and
pop
jae
cmpb
fincstp
inc
dec
js
cmp
sti
js
scas
arpl
cli
movsl
sub
mov
pop
ficompl
push
xor
pop
and
call
sub
test
jg
ja
mov
and
rcll
mov
stos
dec
sub
mov
mov
fs
and
inc
loopne
lods
cs
orb
push
mov
dec
dec
sbb
jp
mov
lret
sahf
popf
sbb
push
and
pop
mov
xor
in
adc
inc
sub
fwait
mov
fistpl
es
lcall
jmp
xor
inc
push
cmp
xor
dec
adc
sbb
sub
rcrl
loop
inc
jbe
push
lret
nop
and
jno
xorl
icebp
pop
pop
mov
call
dec
mov
and
clc
sub
push
pop
inc
sbb
jge
mov
inc
cld
or
pop
push
ret
lahf
add
push
cld
lods
dec
sub
hlt
xor
fiadds
push
and
adc
jnp
nop
fisttpll
sub
xor
dec
daa
cmp
mov
add
mov
aam
cmp
out
inc
iret
insb
inc
sti
ja
mov
cmpsb
jno
notb
jne
iret
xor
movsl
xor
movsl
mov
lahf
mov
and
lds
mov
dec
int
cmpsl
dec
xchg
mov
ret
call
dec
inc
mov
aam
in
jmp
fwait
sbb
push
lahf
dec
sahf
inc
loope
mov
cmp
insl
cmp
mov
filds
cs
xchg
dec
clc
sbb
or
xchg
sub
loop
add
stos
adc
sti
sbb
pop
dec
pop
jnp
jno
sbb
jne
xorb
dec
outsl
mov
insb
fiaddl
jbe
jmp
sbb
dec
jg
bound
xchg
mov
pushf
stos
mov
das
xchg
in
pushl
call
leave
lret
adc
xchg
and
cld
fldenv
stc
add
icebp
mov
push
inc
or
lahf
aam
jbe
jno
popa
xchg
shll
cltd
shl
arpl
or
mov
out
out
adc
mov
mov
push
or
lcall
mov
dec
loop
inc
test
iret
jae
push
test
jl
xchg
mov
ret
pop
mov
and
scas
dec
repz
pop
sub
jle
push
incl
rorb
push
push
inc
and
lods
loope
mov
shrl
lds
or
sub
sti
push
test
jle
sbb
and
stos
mov
sbb
imul
mov
loope
int3
jo
push
imul
cmp
jb
push
scas
mov
lods
xchg
outsl
cmp
and
call
dec
mov
inc
jge
aam
iret
cmp
ret
jbe
sub
dec
outsl
or
adc
and
dec
faddl
addr16
lods
stos
imul
pop
adc
inc
adcl
pop
or
cmp
mov
das
daa
daa
push
lret
iret
pop
xchg
push
add
push
mov
fwait
push
jp
mov
lds
pop
popf
push
loopne
out
mov
insl
push
fidivrs
mov
out
scas
cmp
mov
sbb
push
jmp
lret
dec
xacquire
push
pop
sub
or
jecxz
stc
jle
filds
shr
jp
pop
cmp
lahf
repnz
cmp
fidivrl
and
ret
jge
fldl
sti
mov
pop
pop
fadd
xchg
cmpsl
out
inc
dec
jae
std
test
por
inc
jle
mov
insb
xor
jmp
lahf
call
mov
stos
in
sbb
clc
xchg
pop
sub
repnz
add
lret
sar
test
lea
in
pop
jge
les
inc
arpl
test
add
les
js
xor
fcoms
add
inc
fwait
or
scas
mov
jp
test
es
and
xchg
rolb
ret
test
sbb
fldt
test
pop
sbb
jmp
xor
lcall
dec
mov
je
xor
sub
push
mov
or
addl
mov
sbb
add
pop
xchg
jecxz
inc
fidivl
pop
lds
xchg
pop
lahf
fnstsw
jp
xchg
negb
sub
mov
aam
xor
push
pop
imul
sub
jne
cmpsb
popa
sahf
out
fiadds
adc
dec
add
fs
push
cmp
jmp
lret
pop
mov
mov
inc
es
dec
sahf
push
dec
pop
cmp
in
mov
movsl
sbb
cli
push
test
insb
stos
mov
lret
jae
ljmp
movsb
out
ja
outsl
jmp
call
icebp
call
cli
stos
push
mov
xor
nop
fs
cmpb
call
fldlg2
aam
xor
xchg
iret
mov
test
pop
push
jg
xchg
inc
pop
dec
addr16
sub
aaa
mov
orl
cmp
aad
mov
and
in
mov
gs
jne
std
dec
push
push
jb
pop
cmp
inc
push
movsb
lock
out
imul
ljmp
sub
andl
dec
inc
rcl
push
cltd
pushf
ja
shlb
sub
jno
stos
dec
les
add
test
dec
incb
rcll
push
mov
xchg
xor
adc
cmp
addr16
ds
das
ljmp
leave
xor
xor
lods
xor
daa
dec
es
je
cmp
aad
shl
in
roll
dec
mov
out
ljmp
mov
dec
int3
insb
pop
fwait
in
shrl
hlt
jae
scas
jl
aam
test
cld
popa
mov
sub
imul
cmp
add
js
loopne
repz
test
xchg
inc
test
sbb
add
cmp
jp
mov
jge
mov
jno
out
jne
add
stos
fcmovbe
jnp
addr16
int3
xor
lahf
dec
jno
ffreep
addl
xorl
in
dec
stos
in
cmpb
insl
mov
test
dec
test
cld
mov
push
jb
dec
orb
lcall
jno
or
repz
jnp
or
mov
test
lock
jmp
xchg
xchg
pop
test
dec
hlt
scas
push
gs
and
cmc
adc
dec
imul
sti
add
jmp
addr16
ret
push
dec
movsb
mov
pop
xchg
outsl
ljmp
rcrb
inc
jge
and
shl
dec
lods
mov
add
loopne
jno
das
mov
add
mov
push
daa
sbb
iret
mov
mov
pop
sub
adc
roll
inc
xchg
cld
gs
js
mov
push
test
jge
iret
inc
fidivl
in
lcall
stos
add
fsubrs
dec
dec
dec
fisubrl
mov
xchg
pop
mov
add
xchg
adcb
lret
loop
mov
lds
imul
ret
es
xchg
mov
in
jmp
and
xor
pop
popf
mov
push
pop
xchg
cmpsl
out
mov
iret
ds
mov
adc
xchg
cwtl
dec
push
sub
cwtl
ret
pop
mov
es
orb
gs
pop
sahf
ja
stos
in
and
pop
cs
int
sub
aam
decl
scas
fdiv
sbb
fstl
pop
lods
jge
mov
add
cmpsb
pop
lock
aad
push
pop
fmuls
xor
fdivrs
push
mov
rcl
and
stc
cmpsb
aaa
hlt
push
push
jbe
mov
sahf
push
fcmovb
add
mov
test
pop
cwtl
stos
push
jo
mov
sub
cmc
jge
push
adc
pop
pop
push
jbe
and
data16
sarl
les
lahf
pushf
jbe
dec
push
sti
andb
inc
jge
mov
andl
and
js
hlt
mov
jmp
popa
adc
inc
call
cwtl
push
sub
sahf
pop
scas
jo
mov
rcrl
sub
lods
repz
fwait
lds
test
pop
add
repz
and
mov
xchg
shll
inc
xchg
add
imul
inc
cmp
push
pop
fcoml
lea
dec
mov
leave
push
movntq
mov
repz
sub
push
jnp
rorl
and
dec
sbb
dec
mov
mov
out
pop
lahf
cmp
cwtl
mov
sbb
rclb
cwtl
inc
ficompl
inc
or
sub
pushf
clc
addr16
in
cmp
shl
lea
shll
push
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
sbb
scas
addl
mov
fstpl
jmp
aas
sbb
adcb
pop
ud2
ret
jge
or
das
movsb
jge
sub
jne
push
daa
aad
mov
cld
or
repnz
outsb
les
mov
mov
fdivrl
arpl
clc
inc
cmp
push
cmp
je
sub
iret
stos
inc
hlt
lods
mov
das
lretw
fstl
mov
repnz
sub
sub
bound
dec
pop
aad
das
lock
push
dec
addr16
mov
movb
cwtl
inc
dec
sbb
nop
scas
rorl
push
lret
jp
cmp
fsub
push
push
sti
pushf
xor
lahf
push
push
daa
mov
das
or
movsb
in
dec
jmp
andl
mov
movb
fdivrs
mov
pop
pop
cltd
xchg
mov
fildl
push
xchg
in
ljmp
mov
lock
xor
out
loope
cld
ret
sbb
inc
or
arpl
loope
pop
sub
sahf
scas
adc
or
cwtl
aas
or
pop
bound
into
pop
leave
sub
les
aaa
mov
inc
mov
xchg
adc
aam
loop
daa
pop
inc
cli
xchg
addl
xchg
sub
or
xchg
push
pop
fwait
and
gs
es
push
and
addr16
mov
sahf
cmp
enter
jns
or
sbb
test
aaa
jnp
mov
and
dec
mov
cld
bound
add
hlt
mov
xchg
push
imul
cltd
cltd
sbb
clc
shl
int3
das
cld
arpl
cmpsl
jg
test
nop
pop
inc
push
imul
cmpsb
lret
jmp
or
cmpsl
pop
imul
adc
movswl
push
jmp
or
xor
fwait
ret
push
das
data16
hlt
cs
rcr
mov
clc
lahf
and
mov
into
sbb
sub
test
insb
and
repz
mov
dec
mov
pop
jbe
das
cmpsb
add
mov
inc
cmpsb
ljmp
sub
and
out
loope
popf
sbbl
cmpsl
jp
bnd
loope
ret
loop
lcall
ret
sub
fcoms
dec
push
mov
es
sbb
mov
mov
js
je
sub
ret
add
int3
add
pop
push
movsb
in
or
js
addr16
sahf
adc
stos
dec
or
test
shl
xchg
push
adc
add
out
cmp
pop
jae
jp
push
add
imul
fcmovb
rolb
fcompl
push
aas
sahf
pop
scas
loopne
or
inc
pop
leave
sub
cmp
cwtl
out
pop
pop
mov
js
cs
xchg
scas
adc
cwtl
rcrb
fsub
add
nop
mov
les
mov
loop
test
add
cltd
rcrb
shll
jl
add
in
pop
test
les
in
shlb
add
inc
rcll
mov
or
dec
pop
imul
cmp
pop
shll
out
hlt
mul
pop
push
les
cwtl
sar
je
insl
hlt
jmp
scas
mov
fidivrs
fnstcw
inc
sbb
pop
jp
test
fdivl
jns
leave
sub
and
sbb
or
dec
cli
lods
sub
incb
insb
xchg
repz
test
mov
shlb
xchg
mov
mov
mov
cmc
and
jne
aad
fisubrs
cmpsl
fsts
out
and
push
neg
pop
lea
adc
out
enter
xchg
jle
mov
pop
mov
sbb
out
inc
pop
cmc
inc
xor
cmp
adc
dec
sbb
pop
testb
dec
sub
push
mov
rolb
inc
movsb
stc
adc
cmp
out
loop
xchg
or
enter
mov
mov
fs
fistl
sahf
imul
adc
call
mov
shlb
test
ret
pushf
cltd
rolb
xchg
add
shr
jns
xchg
push
sub
mov
and
outsl
cmp
pop
inc
jl
not
stc
inc
cli
xchg
cld
dec
adcl
or
cltd
fistl
xchg
and
sbb
xlat
jecxz
adc
sbb
mov
call
test
lahf
pop
ds
in
xlat
jbe
test
inc
jo
daa
mov
cmpsl
nop
je
jne
std
jbe
inc
adc
dec
push
xor
mov
lahf
movsl
push
fildll
dec
mov
lret
push
mov
xchg
jnp
bound
xchg
inc
sub
push
pop
sti
lds
pop
adc
lea
jp
lret
pop
addr16
pop
lea
loopne
daa
push
arpl
cwtl
cmpsl
test
out
mov
fnsave
push
mov
outsl
sub
mov
sarl
push
imul
push
pop
fchs
arpl
xor
cli
sub
dec
adcl
jle
cmpsb
mov
adc
loop
ficomps
xor
mov
or
sbb
lcallw
std
adc
cmp
sarb
pop
mov
dec
sbbb
nop
push
inc
mov
xchg
jns
mov
sti
sbb
mov
xor
sti
cmp
pusha
adc
mov
mov
inc
add
dec
or
out
popf
xor
call
pop
pusha
enter
add
out
lods
cwtl
leave
jge
cmpsl
jl
mov
cmpsb
bound
sub
addr16
sbb
sbb
dec
push
dec
cmp
cmp
mov
push
mov
js
push
je
mov
xchg
cld
ds
lret
and
mov
xchg
mov
hlt
popa
push
ret
jo
popf
pop
xor
dec
mov
scas
das
jge
mov
xor
pop
jbe
and
jecxz
ljmp
in
cld
pop
cmp
sub
or
jne
dec
in
jge
enter
lods
fidivs
xor
add
lds
pop
mov
push
xchg
in
icebp
mov
xchg
mov
xchg
lret
les
rcrl
mov
xchg
adc
sub
outsl
xor
mov
xlat
mov
jge
orl
lret
and
mov
pop
adc
stc
jmp
es
cmc
jecxz
in
xchg
into
inc
or
imul
orl
add
mov
xor
daa
xchg
cltd
push
mov
sbb
shll
add
or
push
imul
inc
jae
xchg
cs
push
std
dec
push
sbb
enter
dec
fidivrs
dec
aad
xchg
mov
lock
rcl
jge
mov
cmp
mov
push
jo
or
and
inc
cmpl
gs
repnz
cmc
ret
aad
sub
mov
dec
and
test
inc
ds
pop
sub
mov
push
mov
add
cltd
dec
fisttps
adc
sahf
jge
sahf
push
and
lcall
pop
dec
cmpsl
dec
into
push
lea
repz
cmp
fistpl
sbb
insl
scas
mov
out
cmp
int
adc
adc
cmp
dec
sub
aas
push
jmp
loopne
pop
cmp
mov
fistpl
dec
add
popl
dec
cwtl
mov
idivl
mov
cmpsl
cmpsl
xor
popf
mov
dec
fcoms
jmp
cmpsb
gs
gs
and
int
mov
pop
jle
adc
push
pop
fsts
movsl
sub
das
cmp
inc
xchg
clc
jae
push
jo,pn
bound
or
arpl
jnp
push
mov
cmp
sarl
aas
loop
or
mov
inc
push
stos
ret
insb
mov
dec
lahf
cs
pop
addr16
lea
dec
sub
test
js
aas
xlat
icebp
sbb
pop
outsb
cmpsl
scas
pop
cli
mov
jne
xchg
mov
mov
cmpb
int
push
mov
mov
jno
sarl
ficompl
add
cmp
jmp
pop
push
sti
mov
std
sbb
and
pop
sbb
pop
sub
sub
xchg
cld
dec
jmp
rcll
aaa
mov
mov
add
stos
sarb
lods
mov
mov
push
js
in
jg
aas
add
add
test
dec
cmp
in
fmuls
mov
jl
or
imulb
call
jns
mov
push
sub
call
or
adc
jo
cwtl
ja
rorb
inc
dec
push
push
sub
and
sbb
sbb
mov
mov
pop
push
gs
push
add
add
sbb
lods
sub
cwtl
push
adc
andl
mov
and
sti
repnz
out
push
scas
or
mov
dec
aad
outsb
xchg
repz
cmp
adc
jecxz
in
inc
out
adc
lds
imul
sub
mov
icebp
in
es
lods
cmpsl
fstpt
aad
imul
hlt
sbb
sub
scas
cltd
jno
in
test
out
push
imul
pop
jmp
xchg
test
sub
adc
xchg
push
ss
pop
mov
ffree
ficoms
jmp
enter
and
fildll
je
and
sub
or
ljmp
push
shrb
cmp
pop
bound
cs
fs
sahf
xchg
push
iret
lret
add
pop
movsl
mov
sti
mov
xor
sti
adc
jmp
js
mov
and
les
icebp
scas
cmc
push
cmpsb
jae
mov
dec
lds
lea
dec
gs
lret
mov
inc
lds
jne
aas
movsl
leave
xor
hlt
xchg
rcl
pop
fistl
scas
cmpsb
mov
xor
push
push
ljmp
or
inc
dec
addr16
push
test
mov
cmp
sbb
out
dec
pop
loop
push
adc
inc
sbb
icebp
fistl
sub
push
cmp
insl
inc
fcoms
loop
push
das
sbb
mov
inc
shlb
xlat
loop
out
mov
fwait
outsl
popa
les
scas
mov
or
ret
popf
mov
int
dec
cli
mov
cwtl
repz
mov
cwtl
adc
inc
repnz
in
jb
inc
rclb
pop
loop
je
dec
or
mov
cmc
sub
mov
cld
fsts
mov
dec
mov
out
mov
inc
pop
fwait
sarl
and
mov
std
mov
fwait
mov
adc
fcomps
adc
pop
out
jecxz
xchg
sub
int
or
jbe
icebp
mov
xchg
push
jno
xchg
push
mov
in
pop
sub
adc
cltd
lds
pop
clc
ret
sub
out
stos
shll
pop
sub
jg
arpl
jecxz
push
std
add
dec
jl
push
sbb
sub
jns
xchg
pop
fmulp
pop
pop
push
imul
mov
inc
xchg
scas
and
mov
sbb
adc
adc
jbe
imul
pushf
and
test
hlt
sub
in
sub
fisubrl
enter
fistpll
jae
xor
sub
jnp
test
arpl
addr16
and
test
fisubrs
into
mov
mov
inc
in
sahf
std
cmp
or
shll
shll
ja
test
test
dec
or
pop
add
mov
aad
stos
dec
scas
xchg
jg
xchg
mov
scas
cld
jmp
lds
jmp
adc
mov
fwait
pop
lea
pop
jle
popf
cmpsl
jnp
bound
sbb
cld
andb
push
insb
ljmp
sbb
lea
adcb
pop
sbb
jno
mov
cmp
mov
xor
rcrb
fstl
ret
push
mov
bound
fcmovnb
xchg
pop
xor
jns
mov
xchg
xor
leave
sub
inc
pcmpgtd
push
adcl
shrl
movsb
mov
test
leave
mov
gs
mov
and
mov
mov
mov
repnz
call
jo
and
ret
dec
xor
mov
addr16
push
lret
pusha
fnsave
clc
push
mov
cmpsl
inc
lock
lods
fldt
arpl
cltd
cmp
fldt
xchg
stos
arpl
push
fstpt
add
jecxz
push
and
jp
inc
int3
jo
inc
shll
mov
xchg
rcl
fs
lock
ret
mov
push
sub
int3
mov
call
pop
lods
and
adc
int3
into
sarl
sbb
dec
cmp
mov
and
addr16
enter
cmpsb
inc
add
xchg
fisubs
sub
dec
adc
pusha
insb
pop
subl
inc
sbb
dec
fadds
mov
cmp
repnz
mov
cs
mov
cmp
jbe
mov
call
stos
xor
sub
mov
dec
inc
mov
int
mov
sbb
cltd
mov
push
mov
inc
out
mov
or
mov
in
push
pop
add
inc
fidivs
jge
lods
in
loope
jle
js
popa
sub
arpl
jecxz
das
jbe
outsl
mov
jge
imul
mov
mov
dec
neg
push
and
call
jg
push
mov
sbb
imul
inc
subb
pop
add
dec
inc
cmpsb
fidivl
and
out
mov
es
in
stc
repz
movsb
inc
subl
or
sbb
adc
push
or
sti
lret
fnstenv
mov
in
xchg
add
jge
xor
jae
mov
addl
mov
notl
leave
daa
jl
dec
push
jge
mov
adc
mov
cmpsl
cmpsl
pop
out
dec
ftst
fidivrl
aam
fwait
dec
mov
add
push
lods
ficoml
jge
jp
scas
xor
andl
xchg
xchg
es
cld
dec
cmp
xchg
push
mov
aas
mov
imul
inc
nop
fcomps
outsl
push
cmpsl
cmp
aaa
xchg
push
inc
dec
pushf
ret
shll
cmp
cmpb
nop
enter
jecxz
fstps
sbb
jae
pop
dec
xchg
push
mov
pop
fsubs
fistpll
mov
imul
addr16
pop
aad
inc
mov
mov
pop
lret
ret
movb
lock
cmp
es
sbb
andb
insb
dec
call
clc
test
cmp
xor
sarl
movsl
aam
std
xor
cmpb
lea
mov
loop
ds
jbe
jo
xchg
add
jne
rorb
or
repz
lahf
sbb
popa
mov
inc
call
or
mov
mov
sti
ret
int3
inc
mov
ds
dec
sub
test
add
out
es
sbb
pop
adc
dec
sbb
cmp
dec
xor
mov
int3
imul
jmp
mov
xchg
lret
mov
std
mov
scas
inc
jmp
xor
mov
out
pop
in
push
inc
rorb
push
nop
dec
lods
cmpsb
sbb
xchg
lret
add
push
test
test
jne
or
pop
mov
and
cmp
pop
arpl
push
add
fbstp
mov
sbb
ficomps
and
repnz
jb
sarb
xor
stc
inc
fisubrs
xchg
mov
add
cmp
mov
insl
cld
cmp
ret
loopne
in
sub
xor
jg
fisubs
lea
mov
pusha
mov
push
mov
aam
pushf
pusha
fucomip
adc
rorl
push
bound
in
mulb
sub
or
test
movsl
test
cmpb
pop
xchg
stc
pop
jb
dec
test
adc
sti
insb
fwait
adc
adc
and
popf
add
es
dec
mov
lea
xor
in
jb
mov
adc
sbb
sbbl
shrb
pop
push
nop
rolb
ljmp
jb
aaa
fcoms
pop
or
adc
imul
mov
ljmp
sub
dec
jl
push
mov
shlb
outsb
lods
mov
push
and
icebp
xlat
stos
sbb
add
pusha
dec
xor
mov
lea
mov
out
enter
mov
cli
fists
shll
jno
and
repz
cmp
mov
mov
das
jne
in
je
loope
sarl
mov
imul
popa
scas
rcrw
adc
mov
or
mov
and
xor
aaa
insl
into
lea
dec
movb
mov
sub
add
or
inc
out
outsl
loopne
cltd
data16
xchg
imul
pushf
mov
and
and
out
sti
mov
jns
sbb
nop
jmp
ss
in
lret
mov
mov
jns
mov
cld
xchg
les
cmpsl
push
push
insl
inc
imul
xchg
aaa
mov
test
push
js
jmp
cmp
test
sub
jge,pn
cltd
fidivrs
lret
repz
popf
jnp
aam
call
xchg
lods
mov
xchg
aas
mov
push
int
xchg
ficoml
mov
xchg
test
pop
cmp
repnz
cmpsb
pop
adc
addr16
pop
fildl
lods
jmp
dec
ret
imull
or
dec
adc
dec
pop
jmp
rcrb
inc
push
das
sbb
jl
xor
lret
mov
push
lahf
loope
movsb
out
pop
notl
insl
insb
cmp
std
sbb
lret
movsl
push
pop
mov
push
sub
sbb
lret
lds
push
inc
mov
jb
xor
jge
cmpsl
mov
sahf
push
pop
sub
out
stos
in
mov
sbb
cmpsb
fcoms
pop
jmp
inc
xchg
xchg
ret
jecxz
adc
sti
add
imulb
add
sub
addb
adc
mov
pop
inc
add
mov
pop
dec
addr16
push
adc
sbb
mov
push
push
lea
xchg
outsb
lret
aam
ja,pn
dec
shlb
mov
clc
out
insl
ljmp
sub
pop
jns
jg
ficompl
jnp
mov
add
or
xor
dec
mov
pop
out
cmpsb
daa
fsubrs
ja
push
and
push
lcall
leave
loop
in
and
mov
test
push
xchg
xchg
sbb
jb
sbb
aam
adc
cmp
cld
int3
pop
fdivl
mov
xchg
pop
ss
add
aaa
adc
jbe
mov
adc
adc
adc
mov
fs
cli
cmp
push
sub
out
paddusw
or
dec
pop
pop
push
gs
jmp
sub
mov
cmc
adc
aas
das
mov
sbb
push
pop
movsb
xchg
fistpl
lahf
stos
int3
lahf
push
lods
je
push
sbb
sbb
cmp
addl
xchg
in
xchg
jo
jecxz
mull
sahf
xor
rcrb
pop
sbb
adc
adc
rcl
lods
lock
ss
xchg
adc
pop
loopne
addl
int3
cmpsb
push
divl
sbb
loope
jg
sub
mov
leave
sub
ret
sub
test
pcmpeqb
xchg
push
lcall
lods
aam
cs
mov
mov
jmp
inc
and
or
shll
cmp
jmp
arpl
adc
cmp
loopne
jge
pusha
loope
fcmovnu
cli
mov
loop
add
or
out
sub
in
out
repz
add
adc
stc
mov
jae
out
pop
in
push
sbb
lods
popf
hlt
lock
fcoms
icebp
addr16
sub
jle
sub
int3
add
in
xor
stos
push
and
add
lods
in
gs
mov
popa
mov
scas
mulb
jmp
add
or
and
faddp
test
sub
call
pop
xchg
dec
and
cld
push
mov
adc
data16
push
aas
je
gs
int3
movsb
rcll
push
in
cmc
or
add
push
lahf
cmpsb
dec
inc
dec
out
mov
mov
enter
sti
push
decb
jae
xchg
pop
lock
dec
cmp
mov
bound
adc
mov
mov
stc
clc
mov
dec
inc
mov
push
xchg
xor
sbb
stc
xchg
fsub
fistps
rolb
adc
mov
adc
push
fstp
jle
loop
xorl
pop
xchg
and
cmp
pushf
dec
mov
jb
out
loope
in
push
push
dec
fidivl
test
mov
les
sbb
push
xor
inc
js
mov
shll
bound
mov
js
mov
mov
mov
shll
mov
sub
dec
xchg
or
mov
ds
mov
gs
and
int
xchg
xor
xchg
mov
leave
sbb
and
mov
cli
les
push
or
xchg
xchg
movsl
mov
pop
inc
ret
jnp
clc
adc
pop
xchg
nop
adc
pop
daa
sbb
adc
dec
sahf
js
mov
and
jmp
in
addr16
dec
push
bound
sub
pop
push
int3
les
pop
in
push
push
push
into
cltd
push
lahf
adc
inc
fnstsw
fcomp
push
xchg
out
jne
imul
fmuls
adc
fwait
pop
cmp
jmp
repz
dec
es
push
adc
je
mov
shrl
aaa
sbb
mov
lods
out
jbe
jp
into
test
mov
aad
xor
divl
aas
mov
dec
xchg
inc
incb
pop
popl
pop
and
jne
std
or
shll
dec
call
cmp
inc
int
pop
sar
repz
mov
sbb
jecxz
sub
dec
fmul
cmp
jne
mov
pop
mov
jno
gs
push
lods
push
test
jp
mov
or
fwait
out
jno
mov
mov
mov
or
mov
pushf
test
mov
or
or
sub
cmpsl
rcll
pop
ret
mov
lahf
mov
push
out
pushf
xor
cwtl
jg
imul
jns
jecxz
xor
add
or
xchg
jecxz
out
test
fwait
mov
fisubl
sbb
cmpsl
mov
test
ficoms
and
jge
imul
sbb
dec
adc
ret
dec
inc
mov
sti
data16
imul
ja
movsb
lret
cmp
jp
push
das
data16
add
sub
pop
ficoms
int3
scas
mov
adc
pop
dec
jmp
pop
inc
lret
adc
push
xchg
push
adc
aam
push
nop
movsl
clc
nop
or
in
out
jno
in
rcll
jmp
clc
movsl
cwtl
lds
mov
push
insl
pop
push
mov
loopne
leave
test
xor
rcrb
mul
xchg
dec
dec
lcall
std
stos
lods
pusha
pop
adc
pop
jb
adc
mov
mov
jbe
jbe
mov
cld
movsl
dec
nop
adc
icebp
sub
xlat
xor
jae
jno
push
mov
test
shl
negw
shlb
call
sbb
movsb
pushf
std
ss
push
sbb
pop
std
mov
mov
je
jo
mov
xor
mov
dec
dec
lcall
sub
xchg
sahf
ss
shrl
hlt
mov
outsb
inc
add
ret
push
xor
lret
subl
push
fcmovnu
mulb
push
or
or
mov
lock
int
adc
push
mov
and
sub
rolb
fdivrl
rorb
jl
pop
clc
dec
jle
loop
adc
jne
push
sub
out
rolb
or
push
insl
sub
add
and
mov
mov
hlt
inc
pop
and
call
fwait
inc
jle
stc
dec
mov
adc
aam
pop
sahf
outsl
rcrb
mov
jno
clc
cmp
jnp
xchg
cmc
aas
int
jne
lea
stos
imul
pop
jns
movsl
dec
adc
pop
shlb
lock
negb
cwtl
and
mov
mov
pop
adc
xor
je
cltd
xor
mov
or
xchg
lock
mov
xchg
push
sbb
movb
lods
aad
xchg
shll
mov
into
out
sub
popa
in
mov
push
dec
lret
mov
sarb
push
jns
or
iret
push
mov
xchg
sbbb
jl
cmc
add
icebp
adcl
das
int3
mov
cmp
lea
repnz
leave
ds
xor
add
lea
jmp
mov
into
jle
dec
mov
push
and
lcall
pop
mov
nop
fwait
inc
and
fwait
and
push
test
sub
inc
wbinvd
mov
lret
jle
sub
cwtl
xor
insb
or
xor
adc
pop
movsl
cmp
sbb
loope
divl
adc
sub
icebp
push
mov
dec
sub
inc
mov
xchg
aas
sbb
outsb
mov
int
xchg
mov
scas
cltd
leave
ror
mov
cmp
je
imul
push
or
mov
pop
sbbl
mov
scas
xor
daa
push
and
jle
pop
fnsave
add
aam
loop
push
pop
push
add
xchg
lret
adc
xchg
adc
das
lock
and
or
push
adc
gs
add
dec
rcrl
ret
data16
pop
jbe
sbb
and
das
jo
clc
mov
pop
jnp
shlb
add
cmp
or
rcrl
lds
add
gs
fsubp
in
leave
jns
ljmp
and
insb
lds
jg
rol
lahf
mov
daa
fdivl
inc
in
divb
dec
arpl
and
fwait
inc
pop
mov
test
aaa
add
add
push
xor
sub
imulb
dec
test
movsl
out
dec
mul
fcmovnbe
mov
iret
hlt
jle
stos
int3
push
ss
fsubr
mov
outsb
test
ficomps
cmc
pop
ljmp
push
in
jns
ljmp
sub
push
into
inc
sub
repnz
fbld
cmp
jo
stos
in
mov
push
and
gs
jae
mov
xchg
lods
jecxz,pn
sbb
loopne
mov
ret
lret
sub
xor
repz
shll
adc
mov
enter
dec
xchg
aam
jae
mov
jb
fdiv
test
mov
xor
or
pop
mov
leave
rorl
or
je
or
in
daa
mov
push
or
js
mov
push
adc
lods
pop
xlat
test
and
add
in
jle
cmp
stos
xchg
jp
pcmpeqb
dec
xor
mov
pop
mov
pop
shlb
clc
cmpsl
cmpsb
movsb
sti
leave
arpl
cmp
imul
add
push
adc
pop
inc
cmpsb
punpcklbw
popf
sbb
pusha
dec
mov
stc
jns
bound
jecxz
mov
sub
jge
mov
jp
mov
hlt
xchg
sub
inc
or
pop
ret
out
fadd
sahf
pop
loop
cmc
sbb
shrb
out
gs
pop
pusha
add
dec
fldt
daa
rclb
addr16
stc
fidivl
out
add
incl
xchg
loopne
shll
dec
xchg
mov
rclb
mov
sub
in
ret
data16
or
out
test
cmp
xor
mull
mov
in
sahf
scas
xchg
cmp
xchg
mov
pushf
movsl
lret
fcoml
push
adc
incb
imul
lea
fcomps
add
xchg
test
add
mov
scas
sub
sub
dec
and
jnp
stos
xchg
jb
mov
mov
pop
imul
enter
addr16
add
mov
lea
pop
andl
outsb
inc
jbe
push
aad
adc
xor
cmp
push
add
jo
call
icebp
pusha
push
ret
int3
and
mov
das
scas
cs
and
and
inc
ds
imul
pop
ret
xchg
aam
dec
sbb
cmpsl
bound
scas
js
pop
ljmp
dec
rcrl
repnz
into
iret
xchg
xchg
sbb
xchg
jbe
ror
adc
gs
mov
je
cmpsl
in
push
sbb
or
sti
push
jp
mov
loope
xchg
int3
fbld
pop
std
aam
fdivr
ja
mov
xchg
test
push
scas
sbb
out
gs
in
xchg
push
inc
cmp
jmp
or
or
in
pushf
mov
pusha
inc
push
mov
pop
jae
add
dec
ss
mov
mov
aaa
lea
sub
dec
mov
mov
fisubrl
pop
xchg
mov
inc
lea
pop
adc
lock
divl
lret
pop
addr16
add
jmp
scas
sub
std
inc
mov
stos
mov
xor
out
mov
pop
push
jb
test
sub
sbb
out
test
mov
int
ret
xor
call
push
dec
out
inc
inc
test
pusha
aas
out
aaa
jnp
enter
and
dec
dec
sub
add
xor
cmp
cltd
loop
out
mov
dec
pop
push
sbb
outsb
push
ss
scas
ja
mov
lret
repz
test
sti
into
jnp
jns
push
lea
lret
das
mov
in
je
fsubrl
and
mov
pop
fiadds
aas
insb
repnz
int3
mov
in
xor
and
push
cmp
mov
lds
adc
and
iret
mov
sub
push
or
lods
addr16
push
rcl
jbe
aaa
movsb
icebp
addr16
stos
jns
sbb
xchg
xchg
repnz
sub
jg
daa
cmp
jmp
jnp
leave
sahf
jno
sti
push
dec
stc
inc
sub
dec
xchg
cmp
cli
fistpll
sbb
arpl
nop
inc
daa
sub
mov
lret
push
xchg
cld
pop
imul
push
adc
pop
pop
lock
adc
pop
movsl
cmp
pop
cmp
jo
mov
dec
push
fnstsw
insb
jl
jmp
mov
vmovss
dec
jecxz
pop
adc
adc
enter
xor
adc
sub
outsl
rcrl
mov
inc
rorl
and
xor
sti
sub
pop
sbb
pop
pop
or
push
rolb
inc
dec
pop
scas
or
adcl
jns
int
push
dec
mov
xor
loopne
push
mov
lret
xor
sbb
mov
cmc
mov
in
xor
popf
pop
lock
roll
ret
and
out
popa
pop
jns
out
insl
sti
and
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
addl
cmpsl
fistpll
push
loopne
addr16
cltd
std
nop
mov
mov
cwtl
out
push
nop
jns
stc
sub
add
mov
mov
inc
xor
mov
dec
mov
cmp
pop
or
das
cmc
shrb
mov
shrl
cmp
dec
in
sbb
mov
push
add
inc
stos
out
aaa
insb
lret
push
xlat
test
push
sahf
in
fisubrs
jnp
mov
push
jle
scas
lea
inc
inc
cmp
xchg
outsl
mov
loopne
cltd
ret
movsl
aas
fistps
mov
outsl
loop
adc
or
imul
jl
clc
or
mov
xor
jae
sub
cld
lea
push
jbe,pn
dec
and
mov
jmp
push
jne
into
test
add
dec
aad
je
fs
pmaxub
sarb
sbb
fwait
push
inc
subb
xchg
xor
xchg
loop
mov
ffreep
enter
pop
fs
mov
or
bound
mov
iret
mov
es
mov
and
mov
mov
ds
and
xor
mov
or
add
scas
testb
in
cld
add
add
jns
sbbb
jns,pn
jbe
aad
jge
jp
inc
outsl
inc
add
adcl
js
xchg
add
sti
cmp
stc
xchg
adc
inc
and
out
addr16
jnp
scas
out
mov
inc
cmpsl
ret
xchg
mov
cli
fmulp
lahf
hlt
or
fwait
push
roll
jne
rorb
pop
into
xchg
test
addb
mov
xchg
jmp
sahf
xor
popf
or
cltd
dec
imul
loopne
dec
lods
cmpb
and
xchg
sbb
jmp
in
or
xorb
pusha
and
ljmp
cmp
cmpsb
fst
cmpsl
or
ret
call
cmp
mov
loope
mov
test
push
mov
pop
pop
leave
lahf
rol
lods
out
cmpsb
cli
enter
scas
bound
adc
pop
jns
pop
aam
adc
outsb
icebp
sub
pop
je
inc
ja
jns
mov
ss
arpl
daa
popa
in
or
mov
int3
inc
sbb
rol
cmpsb
cmpb
scas
pusha
gs
repnz
mov
xchg
ja
jno
sarb
shll
repz
cli
xlat
xchg
fmul
lahf
xchg
or
add
lret
push
and
repz
push
imul
inc
loopne
gs
jne
int
aaa
adc
fadds
xchg
adc
fcmove
cmp
imul
andb
pop
jl
loopne
loop
mov
and
add
jecxz
sti
gs
mov
lret
add
adc
or
mov
or
sbb
xor
adc
or
push
mov
pop
or
fadds
inc
mov
xor
cmc
popf
loope
jne
push
mov
mov
sbbb
xchg
leave
sub
dec
cmc
int
lret
dec
xchg
add
ret
inc
rcr
xchg
cmpsb
lret
outsl
xor
ljmp
push
pop
inc
xchg
add
adc
sbb
test
xchg
jmp
and
sub
bound
mov
mov
add
lea
dec
xchg
and
cwtl
repnz
test
incl
mov
mov
mov
mov
in
mov
std
popf
out
mov
and
shll
out
mov
xor
cmpsb
movsb
push
insl
lret
jmp
sub
sbb
sbb
out
mov
sbb
das
movsb
fadd
lret
mov
sbb
pop
fdivrp
sub
inc
xchg
push
jl
loope
mov
push
add
call
sbb
in
call
shll
and
xor
in
inc
dec
sub
std
inc
jg
dec
push
fisubs
inc
idivl
aas
mov
fdivrl
ja
xor
xor
bound
jns
and
dec
mov
push
ds
es
push
dec
push
mov
dec
dec
add
lds
aas
mov
jns
data16
or
testb
pop
cli
movsl
and
cmp
mov
pushf
cmc
rolb
daa
dec
xor
add
lahf
adc
sarl
sysenter
jge
dec
mov
in
hlt
lcall
xor
cmp
movsl
mov
and
insb
jno
cltd
adc
pop
stos
int3
jle
repnz
cs
testb
pop
push
les
out
xor
push
js
mov
jae
enter
pop
sbb
call
test
sbb
jmp
or
in
sbb
inc
xchg
or
adc
fistps
push
xor
cmpsb
jo
cltd
iret
cmp
in
enter
xor
or
mov
sar
lds
popa
dec
call
je,pn
mov
mov
push
mov
jmp
adc
fnsave
outsl
lcall
push
push
jns
fdivs
push
sub
ret
xchg
xchg
test
fnsave
lods
mov
out
xchg
or
std
or
jg
and
or
dec
mov
dec
addb
insl
pushf
cmc
and
or
jbe
les
insb
dec
pop
mov
xchg
inc
loope
inc
mov
jle
sbb
insl
loopne
jg
sub
cmp
add
call
mov
movl
xchg
movsl
jmp
repz
and
inc
ds
xor
pop
xor
jb
pop
push
fwait
push
mov
iret
daa
rcl
test
addr16
and
xchg
mov
mov
dec
ret
jmp
bound
xor
int
int
dec
fs
cmp
arpl
add
mov
dec
fistl
mul
xor
sarl
mov
fisubrs
daa
imul
cs
psubw
mov
mov
jno
inc
loope
cld
sbb
push
clc
fstpl
movsl
or
rcrb
iret
dec
iret
and
fsubrs
add
pop
pop
cld
dec
sub
push
cmp
out
out
popf
inc
pop
sub
add
sbb
sbb
mov
and
in
dec
pop
stc
dec
sbb
jmp
aaa
and
mov
sub
push
mov
insl
out
xor
xor
mov
movsl
xchg
sub
push
mov
and
lods
xchg
jle
push
roll
sbb
mov
loopne
in
enter
ret
push
or
cmp
and
test
and
test
in
sbb
pop
fmull
xor
es
sub
and
jle
sbb
xor
adc
dec
js
mov
sbb
pop
adc
ja
sbb
testl
in
pop
stos
lahf
push
ret
repz
push
lods
ja
mov
pop
daa
xor
lret
pop
mov
push
xchg
fstpt
out
adc
push
fsubl
out
inc
pop
pop
sub
fwait
xchg
mov
adc
mov
sub
testl
xor
shlb
mov
inc
loopne
jne
jmp
xchg
pop
jb
mov
cltd
mov
aad
push
and
sub
jle
gs
scas
ds
stos
and
fmuls
cmp
xchg
add
add
cmpsl
int3
aaa
sbb
hlt
popa
sbb
xor
out
scas
jb
out
cmp
sub
inc
hlt
mov
packuswb
push
and
lar
cmc
mov
push
inc
or
js
call
out
dec
adc
xchg
pop
sbb
mov
push
lock
lds
fsubp
mov
pop
mov
jl
mov
test
add
or
out
ret
sbb
push
roll
push
xchg
jnp
ret
sub
inc
test
sbb
pusha
int
faddl
inc
xchg
push
mov
dec
pop
mov
divb
sahf
ja
xor
inc
push
cli
pusha
add
mov
sbb
push
jge
dec
shrb
ficoms
pop
jmp
mov
pop
lock
xor
fists
loopne
jmp
loope
test
mov
icebp
or
mov
jns
inc
ss
adc
xchg
loope
les
adc
es
add
imul
out
sarb
daa
orl
ret
adc
xchg
rorb
jl
xorb
dec
jmp
mov
pop
cltd
lret
repnz
mov
cmp
rorl
inc
mov
or
negl
inc
movl
jne
xchg
lds
xchg
stc
movsl
orb
scas
mov
call
subb
js
mov
fnclex
add
xchg
pop
in
pop
ljmp
pop
test
xor
call
dec
cmc
sub
mov
ficoms
cmp
mov
xor
or
add
aam
insl
cwtl
cmp
aas
mov
jnp
gs
js
jns
cmp
bound
xchg
and
jge
lea
lods
sbb
cwtl
cmpsl
add
push
pop
or
in
mov
mov
jge
add
lods
sbb
jno
cmp
ja
add
rolb
mov
push
cwtl
mov
and
dec
mov
mov
jl
test
sub
sub
inc
pop
push
and
mov
shl
sti
ds
adc
pushf
inc
int
cmp
inc
fidivl
outsl
mov
ret
imul
lret
test
jnp
sarb
pavgw
jecxz
mov
fcom
dec
in
mov
rclb
out
mov
sbb
push
or
sub
imul
sub
mov
pop
mov
pop
dec
insl
mov
loop
mov
andb
add
out
fs
das
mov
jmp
cmp
notb
sbb
jge
int
push
outsl
xchg
push
sbb
arpl
out
xchg
mov
std
adc
mov
adc
sahf
scas
mov
andl
daa
pusha
push
cmp
in
in
addr16
cmp
je
mov
jmp
test
or
pop
inc
sub
adc
repz
dec
hlt
in
mov
mov
stc
dec
loope
mov
dec
inc
lahf
outsb
into
and
jg
test
call
jnp
add
jp
test
pop
cmpsl
andl
xchg
cmp
xor
adc
in
push
mov
and
dec
ret
daa
lcall
int
idivb
jne
jle
scas
js
or
mov
and
add
adc
dec
pushf
out
insb
cmc
sbb
lret
data16
sub
int3
sbb
orb
inc
xor
jmp
jle
xor
jge
les
call
sbb
movsl
insl
enter
jl
popa
scas
lahf
dec
jp
fldt
mov
stos
ljmp
ja
jb
inc
data16
jb
pop
aas
xchg
mov
sbb
cmpsl
xchg
sbb
mov
push
stos
mov
or
add
repz
bound
cmc
mov
lahf
xlat
data16
notl
into
sbb
dec
sbb
in
or
jg
test
xor
fbld
push
into
jmp
std
sbb
pusha
sti
sbb
xlat
jae
shll
jb
cmc
fdivl
or
cmpsl
pop
sub
jo
push
mov
popf
or
adc
and
push
insb
fimuls
lcall
enter
cmp
mov
jnp
cmpsl
push
xor
mov
mov
hlt
xchg
or
rcrl
outsb
in
int3
jmp
pop
dec
test
inc
mov
or
mov
xchg
das
inc
add
or
pop
xorb
insl
mov
add
bound
or
ds
xchg
jmp
in
mov
push
mov
dec
lds
sahf
jp
sub
cwtl
mov
rorl
icebp
ja
mov
push
push
scas
data16
sbb
and
sbb
shll
pusha
mov
mov
jb
lret
push
aas
aaa
nop
in
test
inc
cs
sbb
xor
call
movsb
push
add
or
fidivs
adc
xchg
rclb
nop
xchg
loopne
xchg
aaa
test
lret
lret
xchg
mov
push
mov
scas
jns
ja
push
test
sahf
mov
pop
imul
mov
xchg
mov
aam
in
sbb
jb
or
xor
mov
push
inc
cmpsl
cmovbe
sti
ret
aaa
push
and
adc
xchg
test
or
xlat
inc
pop
lahf
fisubs
int
pop
subl
mov
lcall
jb
adc
ret
aam
xor
dec
jnp
sbb
fisubl
mov
fistps
dec
dec
pusha
sub
daa
or
aaa
sub
in
jb
dec
xchg
stos
mov
and
insl
imul
dec
int3
popa
js
movsl
lret
cmp
xchg
call
add
or
jl
xlat
cli
xchg
incl
fcoml
popa
jo
popf
sbb
mov
pop
cli
xadd
je
xor
sti
push
movb
mov
sub
push
xchg
rcr
cmp
icebp
xor
push
dec
mov
imul
cmp
pop
sbb
sub
lret
fwait
hlt
fdivrs
and
out
sbb
das
and
nop
testb
shr
ljmp
mov
add
arpl
aam
les
stos
add
jle
cmc
loopne
mov
pop
and
movsb
jbe
xor
into
xor
xchg
xlat
mov
adc
dec
mov
pop
and
or
mov
mov
inc
xchg
aam
cmpsb
dec
jle
mov
loope
adc
push
dec
fsub
cmp
push
stos
jecxz
cs
fldcw
jecxz
xor
cmpsl
push
xor
mov
and
mov
pop
repz
xor
push
jb
enter
fisttpll
mov
lret
pop
cltd
xlat
pop
pop
mov
inc
mov
cmp
push
xor
aam
mov
dec
scas
nop
jbe
ja
and
dec
es
lds
dec
stos
sub
mov
sbb
pop
sub
movsl
xchg
addr16
mov
adc
or
sbb
xor
cmp
insl
cmpb
fbld
pop
pop
jecxz
es
in
cmp
loopne
scas
lods
sub
ja
lods
nop
fsubl
out
rcrl
xchg
ficomps
scas
xchg
test
inc
mov
pop
ret
scas
rorb
imul
push
js
subb
movsl
std
adcb
push
cwtl
stos
pop
mov
inc
aas
sbb
rorb
je
push
pop
test
addr16
sub
cmp
or
xchg
mov
push
je
clc
sti
xchg
adc
xor
das
add
divb
mov
out
movsb
or
enter
int
das
sub
andl
test
fmuls
sub
cmp
jno
xchg
mov
pop
cli
testb
sbb
cwtl
lcall
mov
sbb
xor
inc
in
movsb
test
or
sbb
cmpb
push
mov
daa
mov
fdivs
lcall
inc
ja
and
xor
push
mov
xchg
incb
lahf
jmp
mov
mov
in
popa
and
pmulhw
shrl
pop
or
shll
sahf
mov
pusha
shl
arpl
fisubl
ret
das
xchg
mov
addr16
mov
and
jmp
in
hlt
addr16
or
xlat
jno
out
cmp
in
repz
inc
adc
add
or
in
es
repz
in
pop
add
pop
push
aad
pop
lahf
lret
dec
cli
mov
jne
dec
xchg
decb
in
iret
jnp
das
ss
in
lock
mov
or
jae
ret
cmp
testl
scas
insb
stos
mov
aas
cmc
push
call
pop
rclb
hlt
loope
cmpb
mov
sub
out
nop
pop
mov
or
mov
dec
mov
mov
cmp
mov
lds
inc
pusha
ret
cmp
xsha256
jbe
jo
data16
push
mov
sbb
push
lea
bound
ret
cmp
aad
enter
lods
mov
in
jbe
lcall
cli
add
decl
or
insb
shlb
inc
mov
dec
in
scas
sub
sbb
add
hlt
dec
imul
sarb
fisubs
jne
in
insl
fmull
dec
push
and
cwtl
add
mov
mov
loop
adc
adc
jl
leave
test
mov
lds
sub
sub
and
aad
testb
xchg
inc
cmpsl
mov
adc
sarb
push
push
or
subb
ds
mov
call
pushf
and
lcall
pop
sub
pop
sub
fmull
adc
pop
int3
in
into
adc
pushf
sub
or
in
lods
xor
loopne
scas
lods
idivl
icebp
inc
add
adc
jo
addr16
mov
sbb
stc
mov
dec
addr16
push
cmc
xor
je
add
jbe
jbe
call
lods
adc
add
lcall
sbb
sbb
ss
popf
mov
sbb
dec
lret
add
lock
and
push
es
addb
faddl
sbb
in
sbb
pop
jecxz
addb
cld
cmc
je
into
sub
std
in
fisubrl
out
lret
cli
fcmovbe
dec
push
add
pop
pushf
hlt
movsl
dec
xor
inc
mov
xor
fcoms
push
adc
js
xor
shlb
xchg
lock
sbb
inc
cmpsb
mov
inc
ret
fdivp
mov
popw
into
fcomps
mov
adc
es
movsb
fcomp
adc
aad
clc
repz
iret
jne
adc
xor
stc
cmpsb
insb
add
xor
test
add
mov
mov
imul
aaa
and
sbb
movsl
push
out
icebp
xchg
push
dec
out
xchg
out
test
sti
jae
mov
insb
jnp
icebp
jnp
sahf
inc
mov
mov
mov
xor
add
add
das
jmp
pushf
ds
lret
bound
pop
sbbl
rorl
insl
clc
or
cwtl
xchg
cmpsl
aas
scas
xchg
or
lea
in
xchg
addl
stos
aas
push
cmp
pop
mov
jns
inc
test
mov
xor
inc
push
arpl
cmc
sahf
mov
popf
scas
pop
loopne
sar
sub
push
pusha
aad
fwait
bound
out
add
inc
mov
push
rcrb
dec
js
pop
lods
push
inc
xchg
dec
push
xchg
aam
pop
popa
fnsave
push
xchg
jno
jno
das
andb
add
sbb
or
jecxz
push
into
push
push
jmp
push
in
popa
push
lahf
xchg
cli
inc
adc
jmp
xor
push
in
and
fmull
cmp
movsl
outsb
in
ja
mov
jle
fildl
xchg
fs
lock
mov
pop
push
rcrb
pop
roll
jnp
fsts
rol
in
push
sub
jmp
adc
add
sub
out
inc
shl
push
cmp
psubusb
sub
jle
fcomps
cmpb
cmp
int3
jmp
mov
stos
pop
pop
test
jnp
cwtl
loope
ja
int
and
push
mov
pop
dec
repnz
inc
dec
sarb
mov
jns
enter
fcoml
pop
add
scas
cmp
nop
jp
ja
adc
fnstcw
sbb
xchg
loope
push
and
pop
and
fst
loop
add
xor
mov
hlt
mov
daa
sbb
xor
pop
pop
outsb
int3
mov
add
into
mov
aam
mov
rcrb
cmc
sbb
jg
mov
jae
xlat
out
fcoml
les
je,pn
ret
mov
mov
or
fucomi
mov
jae
dec
mov
lods
jl
aad
push
js
ss
sbb
mov
cwtl
mov
mov
stos
out
push
pop
nop
fisubrl
outsb
pop
dec
je
or
enter
mov
and
or
insl
xchg
in
sub
sub
loop
mov
out
dec
push
mov
in
mov
xchg
inc
mov
cmp
push
shrb
insb
sbb
xchg
dec
adc
cmp
and
and
test
aaa
xchg
sbb
pusha
sub
mov
repz
inc
push
into
mov
imul
cmp
rorb
into
iret
nop
or
out
addr16
decb
adc
cmp
jns
pop
xor
mov
ret
lock
test
mov
sti
add
test
cmp
dec
inc
aas
jne
mov
mov
add
mov
inc
dec
mov
or
lret
in
sub
dec
ljmp
sti
mov
cli
mov
iret
mov
lret
pop
rorb
jns
push
jge
mov
mov
xor
push
es
mov
lret
nop
xor
fisubl
adc
push
pusha
inc
inc
imul
mov
sbb
push
popa
mov
fisubrs
into
imul
mov
test
mov
mov
push
mov
xor
sub
test
js
mov
repnz
jbe
addb
sbb
cwtl
int3
mov
mov
mov
imul
data16
mov
jne
xchg
cltd
cmp
mov
ds
repz
bound
mov
out
outsl
test
mov
push
dec
fldl
shr
movsl
mov
jecxz
addl
and
jno
jb
ss
pushf
xor
cltd
xlat
test
xchg
mov
mov
lcall
lcall
push
add
bnd
and
sbb
adc
add
imul
jp
jae
push
movsl
xchg
inc
push
dec
das
fs
add
jb
icebp
mov
or
int3
loopne
loop
fwait
movsl
sahf
pop
push
add
icebp
outsl
xor
std
mov
out
scas
jmp
mov
out
push
dec
push
cmpsl
sbb
mov
shll
adc
xor
insb
mov
push
andb
out
iret
aas
lahf
sbb
and
mov
or
insb
sbb
inc
mov
sbb
dec
push
fcoml
sbb
pop
ds
sbbl
sub
mov
or
popf
and
and
mov
imulb
adc
into
cld
scas
jnp
or
mov
xchg
shrl
lea
inc
mov
pop
test
add
cs
pop
push
dec
push
cmp
xchg
movsb
clc
push
sub
outsb
arpl
sub
inc
pop
aam
cmp
lea
or
icebp
ret
bound
dec
add
mov
mov
add
pop
push
dec
adc
inc
push
and
nop
outsl
sti
xchg
mov
dec
xor
sub
xchg
mov
jl
adc
shll
cmc
inc
sub
cltd
aad
fs
mov
les
xor
fldt
sub
addl
loopne
push
out
stos
mov
push
sub
pusha
jae
mov
jne
aaa
movsl
std
movsl
loop
mov
call
in
je
mov
les
cli
push
push
ja
movsl
add
jecxz
andb
rorl
adc
mov
add
pop
jne
inc
mov
mov
outsb
mov
dec
push
sarb
mov
inc
sbb
pushf
add
shll
mov
xor
ja
nop
or
pop
imul
out
outsb
je
ret
ljmp
inc
cmp
jp
fadd
popa
mov
and
in
sub
inc
fcmovnu
mov
pop
xchg
xor
pop
out
adc
les
fisubs
test
add
inc
cwtl
mov
adc
xchg
cmp
mov
mov
xchg
push
push
jl
out
ret
add
jne
lret
pop
rclb
daa
loopne
in
out
outsb
and
insb
xchg
xor
sub
xor
xchg
push
repnz
pop
mov
sti
mov
cmp
mov
sbb
sub
fs
xchg
xchg
push
add
sub
ret
and
aaa
xchg
mov
shld
mov
jmp
ljmp
mov
jmp
xlat
movsl
cmpsl
pop
jno
mov
aaa
cs
stos
imul
xor
out
jmp
daa
sub
jp
mov
movsb
adc
inc
rcrb
insl
and
ret
mov
mov
push
dec
outsb
insl
rcrl
std
xor
mov
xchg
out
pop
xrelease
cmp
int
or
in
mov
out
gs
sbb
xchg
push
out
mov
sbb
sub
push
and
into
or
cli
mov
adc
ljmp
outsb
addb
jmp
out
fsubs
add
fwait
lahf
jge
fsts
lods
mov
mov
les
out
mov
dec
mov
enter
cltd
dec
push
sbb
pop
neg
mov
imul
pop
pop
mov
pop
clc
fistpl
dec
xor
out
cmc
rolb
cld
pop
cwtl
cmp
and
clc
fucomi
movsl
pop
jg
fstps
popa
dec
or
daa
mov
or
out
and
sahf
out
out
inc
mov
push
pusha
leave
scas
sub
out
mov
cmp
aam
pusha
subl
xor
push
or
sub
pop
sbb
cmpb
sarl
sti
scas
jns
jb
dec
jg
shlb
push
loop
sbb
nop
jl,pn
movsb
mov
sahf
dec
mov
jno
and
cmp
out
in
out
loopne
or
jbe
das
leave
clc
push
jmp
jns
arpl
in
fdivrl
xchg
mov
sbb
adcb
stc
jae
mov
rcrb
jae
push
lods
insl
pop
sahf
lcall
xchg
sbb
iret
pop
sbb
mov
and
cli
sub
cmc
in
mov
fstp
or
mov
or
mov
adc
call
push
loopne
and
lods
adc
dec
mov
repnz
xchg
incl
addr16
fwait
ja
imul
pop
cli
into
pop
xchg
mov
aad
mov
lds
test
pop
xor
xor
mov
and
mov
push
adc
lea
loopne
lods
stc
fmul
jge
adc
or
pop
insb
pop
popf
adc
bound
push
cmp
cmp
ds
xor
xor
in
adc
cmpl
xchg
jbe
lods
xchg
cmp
aaa
popw
ja
or
mov
jo
data16
xchg
and
insl
inc
mov
xor
mov
in
loop
fisttpl
lods
sbb
and
int
repnz
pop
rcrb
dec
sbb
mov
push
mov
lea
je
and
imull
test
lret
outsl
mov
xchg
mov
lea
mov
fsubp
pop
and
enter
jmp
call
mov
pop
addb
adc
mov
xchg
inc
in
scas
mov
push
dec
stc
aas
push
cs
ss
jb
dec
xchg
jl
in
testb
aaa
mov
cmp
xor
rorb
outsb
add
lea
mov
jns
lret
jge
ret
cmpl
sbb
lea
lret
add
leave
cs
and
jp
sbb
stc
into
push
cltd
or
jl
adc
inc
lea
dec
sahf
sbb
mov
sbb
arpl
fiaddl
add
sbb
pushf
lcall
in
xor
mov
repz
sbb
xchg
xlat
push
pusha
cmp
push
andb
inc
lods
push
cmp
lods
xor
int
roll
jge
js
push
sub
scas
arpl
mov
addr16
aam
adcl
mov
mov
pop
pop
add
lea
mov
loop
stos
cli
mov
inc
inc
cmp
orb
scas
push
in
jns
test
pop
adcl
std
cmp
enter
cmc
and
shll
shll
jl
int3
push
cmp
std
andb
inc
xchg
adc
xchg
lds
adc
mov
jg
mov
int3
rorb
ror
stos
mov
add
dec
insb
cmpsl
ljmp
lahf
lret
addl
xor
push
adc
xor
movsb
jo
mov
add
mov
dec
cmp
mov
shll
and
stos
xchg
dec
cs
ret
jle
cmp
xchg
mov
add
dec
cwtl
aam
push
push
push
mov
sub
stos
and
dec
jns
mov
cli
into
push
rorl
arpl
cmpsl
cs
and
and
test
pop
sub
lret
orb
jle
inc
test
or
sbb
mov
fdivrl
mov
cmp
mov
out
jne
sbb
test
ljmp
mov
and
mov
jo
push
mov
fwait
inc
popf
in
push
repz
out
imul
cltd
dec
adc
rcll
sarb
jno
sub
inc
fisubrl
adcb
add
lcall
insb
push
imul
and
lds
xlat
sub
xchg
aad
jb
out
lcall
mov
sbb
xchg
xor
out
and
mov
stos
lcall
cmp
aas
mov
rcl
stos
adc
fdivrl
popa
mov
jecxz
mov
fnstsw
adcb
ficomps
movsl
ret
test
cmp
in
jecxz
insl
repnz
scas
faddp
jmp
sbb
dec
shll
daa
je
sub
mov
dec
cmp
cmp
out
in
adc
inc
mov
cmpsb
pop
push
cs
pusha
aaa
mov
mov
sub
ds
xchg
jb
call
clc
pop
ja
xchg
sbb
cmp
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
adc
push
pop
jmp
adcl
addl
nop
xchg
push
stos
inc
sbb
push
xchg
add
daa
inc
sahf
bound
jge
jl
insb
add
fs
rorl
sub
sub
or
dec
movsb
loope
ficompl
test
jno
orl
call
dec
mov
sbb
repnz
pop
xchg
repz
xor
mov
mov
aas
or
loopne
mov
pop
repnz
pop
out
fcmovnu
push
sbb
les
sbb
mov
sub
pop
daa
xchg
pop
in
inc
out
ss
mov
or
sbb
cwtl
cli
jns
shrl
or
loop
inc
ja
add
into
roll
sub
shlb
out
cmp
test
ficomps
adc
sbb
negb
xchg
aaa
lret
cwtl
int3
mov
xor
test
and
bnd
adc
cmpsl
insb
cs
pop
loopne
cmp
lret
xchg
jmp
popa
xchg
push
ljmp
dec
mov
jns
cs
addr16
mov
inc
sub
fisubl
out
ss
mov
xchg
iret
push
sbb
cmp
es
bnd
cld
lret
test
jo
scas
mov
bnd
test
shlb
pop
das
mov
xor
xchg
sub
scas
int
les
xor
inc
pop
mov
test
adc
mov
cmp
repz
fcompl
add
lea
sarb
cs
mov
rclb
icebp
or
stos
lods
fcoms
pop
cmp
fisttpl
nop
mov
cmp
lock
mov
iret
fcomip
enter
add
xchg
repz
mov
lret
outsb
xor
inc
inc
and
nop
jo
or
pop
xchg
insb
mov
outsl
in
cmpsb
scas
test
aad
popa
sbb
lods
mov
mov
inc
out
inc
sahf
fmull
fs
ds
adc
ja
sbb
hlt
rcll
cmovns
test
jo
sarl
mov
lahf
mov
inc
mov
hlt
lods
cmc
xchg
pop
sbb
fucom
mov
arpl
lret
and
push
jge
cmpsl
adc
pusha
mov
mov
xchg
mov
bound
out
mov
and
cmc
mov
ss
mov
cli
addb
push
mov
lcall
and
or
mov
out
jb
sub
in
jo
lods
pop
cwtl
adc
mov
mov
pushf
xchg
cmp
push
xor
pop
std
rcrl
cmpsb
mov
ljmp
sub
hlt
aam
fsubl
pop
ret
adc
arpl
and
mov
lock
lds
mov
enter
insl
jbe
jge
out
dec
int3
sub
push
cmp
cmpsl
lcall
stc
push
imul
out
in
sbb
incl
pop
outsb
mov
mov
movsb
ficomps
xor
jp
lea
aaa
mov
icebp
ffreep
out
xchg
pushf
xchg
mov
adc
jae
xchg
and
xor
ljmp
test
push
scas
insl
mulb
jl
push
cmpsl
jb
jmp
aaa
call
xor
push
das
mov
out
xchg
adc
aam
hlt
dec
adc
jae
mov
pop
push
xchg
leave
jns
jne
call
insb
ds
sbb
movsb
or
xor
loopne
xchg
mov
xor
shlb
std
cmp
fnstenv
xor
push
rolb
lods
pop
adc
add
add
arpl
imul
sbb
mov
push
or
cmpsb
xor
mov
mov
lock
arpl
dec
lret
stos
jnp
cmpl
inc
push
push
mov
clc
test
xor
addb
stos
stos
cmp
fpatan
imul
call
jge
imul
push
shl
mov
adc
lock
fadds
cltd
stos
shlb
and
aas
leave
mov
cwtl
sub
sbb
xchg
iret
mov
dec
in
mov
jae
jo
stos
icebp
addl
xchg
sarb
adc
and
lahf
sub
jecxz
push
xor
pop
mov
push
sub
fists
sub
push
cs
ss
dec
sbb
mov
int
daa
mov
lret
in
push
push
xor
mov
test
dec
sbb
jns
push
movsb
cmp
lock
push
inc
sbb
sub
sub
in
push
dec
call
cmp
rorl
das
addr16
scas
insb
pop
ljmp
fisubs
fwait
lret
lret
sub
sar
sub
xlat
dec
mov
aas
or
mov
mov
pop
insb
mov
or
pop
insl
clc
xor
movl
mov
cld
int
push
fs
fs
mov
pop
cmp
orl
mov
jle
or
sbb
jnp
rcll
ret
out
or
xor
cmpsl
or
rcrb
popa
mov
dec
sub
adc
bnd
inc
xlat
int3
push
aas
xor
sti
mov
xor
xor
lahf
jle
add
xchg
jl
iret
mov
adc
cld
sbb
push
xor
sub
ret
xchg
mov
sub
lret
xchg
iret
popf
in
xchg
adc
inc
loope
aaa
mov
add
or
mov
lahf
shrl
add
sahf
mov
sub
sub
in
fdivrp
jb
mov
inc
addr16
fwait
lcall
lcall
pop
js
xor
push
icebp
sarl
sbb
lahf
cmp
sbb
stos
outsb
jge
mov
lahf
pop
out
mov
mov
cld
jp
pop
mov
bnd
js
xor
lods
leave
push
movsl
push
xlat
nop
jb
push
sti
loope
data16
jmp
in
lcall
lret
rorb
fmull
mov
pusha
sub
shll
ror
inc
sub
push
inc
mov
rcrb
and
and
shrl
add
sub
sbb
and
out
int
ja
cmp
popa
pop
mov
xlat
xor
or
jl
cwtl
mov
push
inc
shl
shll
sub
xchg
shrl
lcall
psrld
push
loope
das
rep
testl
or
xor
in
dec
test
std
adc
loop
cmc
adc
arpl
int
mov
aad
ror
jo
xlat
dec
ret
mov
inc
sti
xchg
push
push
push
test
pop
notl
push
sub
dec
in
ss
shrl
daa
mov
repz
rcr
dec
lahf
push
or
cld
or
aam
frstor
mov
aam
mov
rorl
adc
mov
lcall
xor
inc
mov
mov
xchg
pop
cwtl
xchg
shlb
xchg
pop
pop
mov
enter
sbb
hlt
dec
xchg
adc
cmc
adc
xchg
jno
inc
sbb
pop
mov
mov
or
test
xor
cmp
xchg
inc
fsubrl
mov
mov
xor
and
je
out
dec
out
pop
push
in
call
fiaddl
loope
push
shrb
sub
and
ljmp
jns
dec
push
aas
aaa
fs
scas
mov
sbb
xchg
dec
hlt
mov
and
fdivs
insl
xchg
movmskps
scas
and
lock
mov
aas
pop
pop
pop
js
rcrl
loopne
cmpsb
sbb
cmp
and
push
ret
or
sbb
enter
push
dec
adc
push
lea
stos
cmpsb
out
mov
sub
sub
sbb
push
scas
mov
xchg
test
test
std
lods
outsb
mov
sbb
xchg
push
xor
mov
or
push
iret
mov
test
andb
inc
test
lahf
ss
and
pop
cltd
es
mov
cmp
cmp
cs
mov
mov
lret
movsb
jo
lds
bound
ret
fnstenv
cmpsb
push
sbb
pop
pop
xchg
pop
jo
hlt
sub
jbe
mov
mov
adc
sub
cltd
cmpsl
addr16
imul
xor
stc
lea
scas
dec
js
out
mov
mov
xlat
sbb
adc
and
xorb
add
inc
and
inc
lds
frstor
sbb
inc
scas
imul
mov
or
cmp
std
lcall
je
ficoml
das
pushf
leave
mov
arpl
insl
inc
mov
lret
mov
push
sbb
je
pop
or
dec
add
jbe
push
pop
mull
test
xchg
mov
mov
loop
insb
xor
jno
fmul
mov
inc
fisubl
mov
adc
inc
ret
popf
outsl
adc
push
lcall
add
sbb
imul
cmp
out
cmpsb
or
jbe
out
jns
popa
mov
aas
add
sbb
fmuls
mov
mov
test
mov
pushf
jmp
icebp
dec
hlt
loopne
shl
jl
inc
pop
nop
mov
aad
scas
push
mov
mov
test
xor
movsb
xchg
insb
mov
leave
in
test
repnz
xchg
scas
jmp
sub
cmpsl
cltd
lret
sahf
inc
enter
popl
aad
mov
outsl
push
jnp
jg
iret
int
nop
jg
out
pop
add
sahf
fldl
pop
lcall
mov
icebp
fldcw
push
sti
push
ljmp
and
iret
and
mov
xor
xchg
mov
fistpll
loopne
mov
sbb
adc
enter
sbb
call
cmp
fcom
xorb
dec
sub
fdivrl
dec
mov
frstor
sbb
pushf
lods
shlb
rcll
inc
aad
ds
pop
daa
sahf
bound
and
inc
or
jnp
jo
sbb
in
push
hlt
pushf
rcll
shll
out
mov
sbb
cwtl
cmp
mov
sub
dec
int3
xor
cltd
add
push
ja
jecxz
bound
push
std
or
sub
and
jge
cs
dec
or
mov
and
divl
fldl
mov
imull
fisttps
mov
push
daa
rep
dec
sbb
cmpsb
cwtl
test
pop
cmp
sahf
shlb
sbb
lods
ss
or
popf
push
mov
out
flds
inc
lods
loop
loope
cmp
movsl
and
fldt
or
sbb
adc
dec
and
mov
cmp
sarb
mov
add
jecxz
xor
pop
dec
iret
fnstsw
dec
and
in
xchg
mov
cmp
hlt
shll
xchg
mov
xor
add
fsts
cltd
mov
cmp
cmp
cmpsl
aas
pop
jns
out
xchg
or
dec
xchg
xchg
jno
roll
pop
jns
loope
mov
ret
aas
cli
outsb
adc
inc
pop
mov
mov
cmp
mov
dec
cmp
jne
adc
and
pop
sbb
and
scas
inc
fwait
popa
es
sub
mov
scas
js
notb
cmp
sub
add
push
sub
ljmp
jmp
sbb
cld
and
mov
sarl
int3
jae
das
in
inc
cmp
pushf
push
in
push
jb
dec
mov
push
repnz
pop
lahf
mov
mov
push
cltd
lds
mov
xchg
sbb
push
and
lock
xchg
pop
sbb
sub
add
scas
cmpsb
dec
das
mov
loope
daa
negb
adc
cmc
add
add
ss
inc
es
xor
sbb
push
int
std
hlt
or
inc
imul
imul
jb
adc
arpl
push
ret
pop
mov
fsts
icebp
mov
das
jl
xor
mov
pop
mov
cmp
loop
imul
ds
rorl
repnz
mov
sbb
adc
jmp
pop
leave
dec
int
sub
push
pop
jb
push
xor
jns
test
out
and
sahf
out
cmp
cmp
or
pop
shlb
int
imul
fs
mov
insb
xor
shll
sub
jae
int
xchg
or
push
sub
pop
mov
test
or
les
popa
arpl
xchg
xor
in
sahf
xor
in
cmp
pop
sub
fmul
add
movsb
repnz
xchg
pop
mov
shrd
rcr
jae
bound
pop
or
daa
insb
ret
mov
xor
ja
cltd
sub
les
mov
stc
jno
and
sbb
mov
mov
lods
insb
fs
flds
mov
ret
decb
sub
lock
mov
repz
orl
pop
insb
sahf
mov
mov
push
push
repnz
cmp
or
popa
push
or
push
xchg
sub
fimull
in
inc
push
aaa
rcrl
cmp
aaa
out
imul
loope
dec
outsb
add
icebp
jnp
push
stos
outsl
rol
out
jecxz
inc
aad
popf
nop
aad
push
dec
xchg
mov
inc
loopne
jb
insl
decl
js
rcl
ficomps
mov
cmp
cmp
push
push
pop
insb
pop
push
xlat
and
fst
push
dec
fs
enter
cmp
in
jle
cmpsl
aas
stos
jne
or
xor
sbb
xchg
and
jne
ja
xchg
mov
dec
mov
jmp
in
pop
cmp
push
xor
hlt
fstl
aas
jg
or
cmp
adc
add
push
jb
sub
aas
or
jb
or
dec
pop
push
iret
enter
dec
xchg
lcall
enter
push
ret
std
mov
in
cmp
cmp
shll
add
je
int
mov
test
mov
pop
insb
cltd
pop
out
dec
or
cltd
add
mov
popf
mov
cmpsb
dec
cmp
add
popf
cmp
sbb
sti
push
sub
cmp
xor
fwait
incb
cmc
jno
mov
lret
ret
pop
aad
mov
cmpsl
mov
aas
cltd
dec
mov
in
cltd
xchg
push
jg
xchg
mov
jb
pushf
mov
cmp
decl
mov
inc
aad
xchg
loopne
out
enter
jl
inc
fldl
mov
outsl
daa
aam
sbb
and
mov
mov
lods
stc
sqrtps
dec
inc
cli
outsl
mov
movsb
lock
dec
push
ficomps
repnz
cmp
bswap
inc
outsb
rorl
xor
pop
dec
dec
adc
jmp
xchg
ret
adc
int3
cmpsb
scas
push
ss
xor
mov
adc
xor
cmp
jmp
cmc
pop
mov
lret
popf
inc
cmp
pop
push
push
add
jno
jp
push
push
push
lcall
cmp
xchg
and
mov
ja
out
mov
jg
loope
push
rclb
in
sbb
out
and
shlb
testb
push
xchg
gs
es
neg
mov
out
cmp
call
and
ret
xlat
jnp
add
mov
insl
cmc
push
add
mov
and
mov
nop
fnstcw
and
add
insl
cltd
in
and
clc
ds
push
cs
loop
cld
sub
aam
pop
pop
movsl
mul
sub
aaa
cmpsb
push
vmaxss
scas
sbb
cmp
push
insl
push
jbe
inc
repz
adc
jecxz
fcoms
js
loop
adc
iret
les
repnz
je
jge
adc
xlat
enter
popa
stc
or
or
jle
test
pop
lea
push
push
sub
sarb
dec
and
mov
dec
stos
sub
adc
jne
pop
mov
cltd
popf
mov
jecxz
js
or
movsl
sahf
xor
enter
pusha
lds
cmp
cmpsb
push
repz
jp
and
push
lock
push
repnz
dec
push
add
xchg
cwtl
xchg
mov
sbb
shlb
jp
leave
out
fsubr
scas
ret
loopne
stos
cmp
enter
out
outsb
xor
movsb
sub
xor
inc
pop
lret
add
inc
push
cmp
stos
stc
clc
inc
inc
gs
hlt
or
push
sub
cmp
xchg
push
pop
inc
sti
jecxz
int
test
add
mov
mov
testl
rclb
inc
je
push
mov
pop
cmpl
dec
or
mov
jmp
pop
sti
mov
dec
jecxz
hlt
repnz
insl
fwait
enter
fnsave
mov
leave
fwait
adc
inc
sub
xchg
sub
aam
fdivrl
mov
nop
enter
inc
cli
xchg
or
xor
dec
in
dec
es
rcl
pop
jo
mov
push
lods
xor
push
out
pop
cli
dec
loope
adc
mov
das
fdivr
dec
jne
push
jb
mov
push
or
hlt
sub
xchg
xchg
hlt
add
mov
pop
movsb
cs
incb
notl
mov
mov
outsb
movsl
jno,pt
pop
outsb
ficoml
jl
and
mov
pop
xorb
or
fildll
in
aad
out
and
dec
xor
outsb
lods
insl
sub
insl
stos
xchg
aam
cmp
aas
sub
gs
gs
inc
push
shrb
mov
inc
adc
and
movl
pop
bound
adc
cmc
mov
push
repnz
adc
loopne
or
xchg
scas
aas
fnsave
push
jl
push
sub
adc
mov
push
inc
pop
scas
out
xor
sbb
jl
dec
fmull
sub
dec
adcb
mov
fcmovb
cmp
frstor
or
adc
mov
push
insl
adc
bound
stc
jmp
xchg
sub
fs
or
jno
mov
mov
sbb
dec
adcl
pop
subb
loopne
es
fistl
out
aaa
filds
repz
fisubs
xor
jg
incb
adc
inc
loope
push
sahf
cmp
inc
lods
mov
adc
fisubl
mov
and
stc
fnstcw
sub
xor
int3
daa
ret
pop
xchg
pop
sbb
or
mov
lock
jnp
push
cmpb
dec
filds
sub
fadds
mov
jmp
sbb
popa
dec
or
xor
aaa
inc
ja
arpl
sbb
dec
mov
adc
loope
pop
xchg
dec
pop
gs
cli
mov
shll
mov
sbb
andb
movsb
or
xchg
adc
push
inc
and
cmp
shrl
vpunpckldq
dec
orb
xlat
ds
int3
pop
push
dec
imul
sub
inc
jbe
mov
in
and
jae
jns
movsl
int3
pop
and
and
mov
andb
xchg
rcll
push
lret
shll
frstor
sub
xchg
xchg
or
loop
mov
and
sub
movsl
jno
cmp
jle
sti
xlat
mov
das
sbb
in
or
or
cwtl
inc
push
xchg
cwtl
adc
jbe
repz
push
pop
pop
lret
lods
es
imul
or
das
and
cmp
out
mov
inc
testl
dec
loop
xor
shlb
test
mov
mov
shlb
shl
into
cmp
pop
mov
sbb
aad
pushf
lock
movsb
out
stos
cwtl
mov
xor
fisttps
push
or
adc
aam
sahf
xchg
clc
cmp
adc
push
gs
mov
and
mov
cmpsl
je
lock
pop
fistpl
sbb
push
mov
jle
cwtl
out
roll
fst
inc
repz
and
fdivs
jae
lahf
loopne
fisttpll
daa
repnz
imul
inc
mov
and
mov
negl
pop
add
jne
iret
dec
cmc
ret
repnz
ds
sbb
xor
cltd
mov
insb
cmpsl
dec
stos
pop
push
in
pop
ret
movsl
hlt
insb
je
cwtl
xor
mov
cltd
movl
xor
push
insb
mov
lock
adc
fs
jmp
or
cmp
xor
cld
mov
pop
mov
adc
xor
sbb
orb
clc
sub
shll
je
ds
jnp
mov
and
push
push
call
sbb
mov
cmp
scas
pop
movsb
jecxz
mov
lret
fmuls
cmpsb
fldcw
sbb
xchg
orb
test
lea
neg
imul
nop
inc
call
sbb
fisubs
adc
add
ss
movsl
mov
or
bnd
ret
punpckldq
add
rorl
ret
gs
jl
cmp
pop
in
xor
aad
push
aaa
mov
lret
cs
push
push
add
and
or
lods
dec
mov
mov
sub
lret
push
fcomp
mov
popa
jne
jns
xchg
xchg
mov
dec
jno
cmp
inc
int3
mov
nop
nop
or
call
cmpsl
cmp
mov
sub
mov
ds
dec
add
xchg
jns
mov
sbb
fcom
and
xchg
mov
inc
fnsave
xchg
cld
ljmp
inc
insl
xlat
add
cwtl
movsl
hlt
xchg
mov
xchg
scas
lds
cmp
mov
mov
inc
xchg
jmp
addr16
dec
sbb
jae
jb
mov
push
cld
jp
mov
insl
cmp
xchg
sub
enter
dec
dec
jg
push
scas
sarl
mov
sub
xlat
inc
mov
adc
je
cltd
rorb
sub
int
stos
jmp
stos
cmc
aaa
fcmovbe
fisttpl
xchg
jmp
push
or
inc
push
xor
or
sub
cs
fisubrl
mov
pop
fildl
jne
mov
out
sub
xor
mov
js
push
xchg
in
push
and
add
inc
nop
sub
js
mov
mov
cmpsl
pop
out
bound
decl
xor
mov
fsubrp
jmp
cld
shl
lds
pop
push
dec
arpl
lret
push
pop
jge
movsl
cmpsb
xchg
or
fs
incl
in
hlt
dec
and
jmp
cs
and
scas
pop
std
push
jnp
push
or
lods
lea
sub
mov
mov
outsb
mov
sbb
mov
push
lahf
leave
test
pusha
mov
and
xor
sub
jg
lods
fistpll
dec
pop
xor
xlat
pop
adc
dec
cmp
or
clc
dec
ret
xor
or
mov
aaa
cwtl
jg
inc
push
mov
fsubrl
aad
test
mov
outsl
push
outsl
push
mov
pop
ret
cmc
ficompl
mov
test
mov
out
dec
inc
xchg
push
cli
and
fiadds
pop
idiv
and
ret
psraw
pop
fs
ret
xchg
adc
aas
jne
pop
mov
leave
push
out
test
or
adc
sub
jmp
mov
sbb
dec
outsl
rcrb
out
scas
dec
and
lahf
repnz
xchg
mov
push
scas
mov
xchg
push
stos
xor
add
xor
notl
sarb
loope
loopne
cmp
mov
sub
sub
fmul
push
mov
mov
in
push
cwtl
and
negb
sub
mov
stc
hlt
out
test
loope
ja
out
es
or
dec
out
jns
int3
add
pusha
xchg
mov
mov
shlb
push
dec
pop
sbbl
lcall
mov
adc
inc
jno
pop
dec
aas
mov
and
cmp
cltd
in
out
jae
outsl
pop
imul
rcrl
ds
dec
jmp
dec
leave
repnz
mov
ret
pushf
lods
int
movsl
dec
mov
dec
lds
sub
push
sub
pop
fisubrs
push
mov
es
cmp
xchg
pop
dec
adc
mov
jne
gs
cmc
xor
out
fists
nop
mov
jmp
imul
push
icebp
and
inc
pop
adc
add
mov
dec
jo
push
xchg
movl
out
ljmp
mov
mov
lea
jns
mov
loop
fldenv
repnz
repz
daa
cmp
lret
pushf
mov
in
sub
rorb
add
addr16
ljmp
out
dec
jo
push
cmpl
cli
incb
and
in
xchg
lock
xchg
cld
and
fsts
imul
push
lea
sbb
mov
xchg
jmp
shll
push
nop
jp
lret
cmp
cltd
scas
hlt
iret
test
imul
dec
rorl
ds
das
mov
xor
ds
pop
mov
cmp
push
inc
add
and
or
xchg
pop
pushf
xor
mov
in
xchg
and
inc
or
or
fidivl
add
leave
cmp
xor
add
das
int3
jno
sbb
lea
test
aaa
nop
push
in
clc
shrl
jb
jno
stc
std
jg
roll
mov
inc
fistpll
imul
inc
rcrl
cs
push
sub
sbb
je
cmpsb
push
mov
repz
sbb
mov
xor
scas
mov
push
clc
scas
filds
in
pop
add
orl
sub
mov
mov
test
stos
js
in
mov
les
int3
xchg
ficompl
mov
pop
pusha
shr
rcrl
pop
sub
pop
int
bound
and
sarl
pushf
lea
pop
test
cli
jecxz
cmp
int3
outsb
sbb
sub
pop
addr16
and
or
and
push
xchg
test
scas
mov
mov
xor
cmp
lahf
scas
shl
mov
data16
push
jecxz
into
xor
or
inc
pop
jbe
lods
adc
int3
mov
enter
pop
pop
or
mov
inc
dec
pop
push
fwait
fwait
xor
pop
fcoms
jecxz
mov
jl
aad
mov
add
xor
xchg
inc
mov
arpl
inc
mov
mov
jp
jnp
lret
mov
sti
cmp
pop
xlat
push
mov
push
jl
jmp
test
in
push
mov
xchg
pop
outsb
dec
out
inc
loop
mov
jg
dec
mov
push
jbe
xlat
outsb
jp
mov
ret
xrelease
nop
sbb
and
cltd
pop
push
pop
icebp
and
mov
mov
sbb
ret
and
and
lds
push
paddq
jp
inc
mov
dec
dec
add
mov
sub
movsl
mov
aas
jns
sbb
and
enter
fldl
test
mov
and
or
sbb
sub
xlat
xchg
icebp
sbbb
pop
ret
dec
or
popf
out
stc
mov
and
test
inc
loop
das
shrb
mov
inc
xchg
add
xchg
or
adc
cmc
cmpsl
in
sti
addl
or
xor
inc
mov
fsubrs
lcall
iret
iret
mov
mov
fiadds
cmp
shl
cmpsb
enter
sub
sbb
adc
test
ja
into
xchg
inc
jge
mov
jecxz
mov
je
pop
call
or
jo
mov
hlt
enter
dec
add
and
fldl
int3
jmp
rcll
inc
jg
int3
mov
stc
leave
xchg
sbb
das
inc
jmp
frstor
push
mov
push
addr16
xorl
add
push
cmpsb
fnstcw
jge
test
xchg
jbe
xor
sbb
push
xchg
pop
dec
div
push
pop
sbb
jnp
insb
pavgb
nop
ret
mov
dec
in
or
add
xor
fsubrl
jmp
gs
enter
pop
cmpsb
fcoml
fildll
scas
lea
in
sbb
jne
je
xor
xchg
sbb
leave
je
adc
push
cmc
mov
xchg
stc
dec
int3
ret
mov
or
sub
imul
lret
xchg
in
fisubrl
in
insb
fmul
sti
push
repnz
jmp
call
inc
lcall
fs
inc
xchg
stos
aas
xchg
shl
std
mov
pop
sbbb
test
maskmovq
divl
aad
adc
mov
test
xor
jmp
fdivl
cs
std
mov
push
mov
inc
dec
xchg
shlb
cwtl
push
repz
lea
push
or
clc
into
lds
mov
js
sub
test
fiaddl
mov
jb
icebp
mov
push
loope
les
dec
mov
cmp
es
mov
jbe
je
ljmp
mov
and
jmp
mov
outsl
cmp
dec
popf
xor
pop
mov
inc
iret
pop
int3
mov
loopne
inc
xchg
jle
mov
and
push
mov
adc
hlt
xor
dec
les
mov
in
mov
ljmp
push
push
jle
sub
xchg
dec
or
lods
push
cmpsl
or
inc
in
sub
sbbl
and
xchg
gs
adc
int
in
scas
dec
adcl
outsl
int3
push
outsb
lods
pop
mov
adc
das
xchg
cmp
int
mov
insl
jns
and
loopne
lock
loop
and
adc
push
clc
popa
ljmp
adc
pop
ss
mov
inc
int
dec
push
loope
sbb
jle
mov
ljmp
inc
rorb
push
iret
popf
and
mov
mov
lret
ljmp
mulb
inc
out
loopne
mov
shr
fidivrs
mov
pop
pop
pop
hlt
aad
daa
mov
in
lods
fldl
lods
dec
cld
jmp
xchg
pop
mov
mov
jecxz
jo
dec
xchg
mov
subl
cmpsb
pop
fcomps
mov
mov
mov
jecxz
add
push
fisubs
dec
aas
mov
mov
add
and
mov
or
aaa
or
cwtl
add
pop
mov
out
fisubs
jmp
test
iret
movsb
test
jle
pop
inc
cmp
xchg
add
mov
rcrl
clc
dec
inc
push
clc
push
push
push
cmc
rcll
push
ret
subb
or
push
scas
mov
lret
gs
mov
lock
pusha
xchg
xchg
dec
stc
fcmovnbe
in
nop
cld
sub
fsubrs
xchg
jge
dec
repnz
jae
xchg
mov
cmp
add
bound
jnp
xchg
jo
mov
or
sbb
aam
lahf
bound
stos
insl
push
inc
in
data16
mov
push
push
test
push
inc
ljmp
add
adc
pop
sbb
scas
sbb
js
adc
push
push
xor
sub
sub
jmp
adc
test
mov
inc
addb
adc
ja
push
popa
jns
pop
pop
mov
loopne
lods
jmp
je
icebp
call
aam
faddl
pop
sub
arpl
orl
pop
cmp
data16
pop
cs
add
sub
loope
mov
out
cmc
push
jae
cmp
inc
cld
bswap
sub
and
or
xchg
jg
aas
mov
add
dec
iret
add
or
stos
std
lods
jg
xchg
mov
testl
lret
mov
leave
imul
or
movsb
xorl
into
cmp
inc
dec
mov
mov
dec
push
mov
push
mov
in
les
dec
fdiv
inc
mov
sbb
sbb
scas
cli
out
insl
sahf
pusha
leave
dec
or
mov
and
daa
iret
aaa
sbb
jno
adc
data16
ljmp
xchg
xor
cmp
aad
das
repnz
sarl
xor
lret
movsl
mov
push
dec
adc
jb
pop
mov
dec
push
pop
add
pop
repz
jne
rorl
cmp
cs
mov
jl
cmp
push
inc
call
inc
insl
in
sub
sub
push
cltd
push
dec
leave
enter
loopne
xchg
cli
insl
cmpsl
insl
enter
in
leave
js
adc
xchg
inc
xchg
mov
int
pop
push
jae
pop
pop
add
mov
mov
cmp
sbb
sub
loopne
push
or
adc
clc
movsl
aaa
jne
or
mov
and
inc
mov
decb
mov
rorl
js
pushf
popf
xlat
ret
mov
fisttps
jne
jg
adc
mull
jle
in
rolb
adc
mov
aad
mov
sbb
repnz
or
nop
jecxz
mov
dec
xchg
sbb
add
jg
adc
xor
repnz
ja
push
out
add
fbstp
idivl
fdivl
lahf
jp
push
ret
sub
in
iret
daa
push
pop
iret
das
pop
sub
jo
in
sub
push
loop
arpl
stc
xchg
inc
rcl
mov
push
shll
adc
add
adc
lret
push
jge
lret
in
cmp
cmp
xchg
aam
arpl
mov
hlt
mov
hlt
cmp
add
in
das
lea
test
xor
fisttps
nop
xchg
cmp
jmp
pop
ja
imul
mov
in
stos
call
das
insl
test
outsl
push
arpl
imul
lret
sbb
pop
shrb
sar
inc
pop
mov
cmp
rcll
mov
rcrb
pop
add
test
mov
push
sub
jmp
popa
mov
add
or
lods
xchg
stos
push
fldcw
pop
or
dec
cltd
or
and
jbe
cmp
cmpsb
and
and
adc
mov
aas
and
cmpsb
pop
adc
sbb
out
xchg
pop
fisubl
mov
insb
icebp
mov
insl
fsts
mov
mov
sub
pop
mov
incb
mov
jg
fidivs
sub
test
jl
loope
mov
mov
clc
loope
std
outsb
mov
push
icebp
sti
addr16
add
xchg
mov
rclb
scas
push
pop
testb
test
mov
lock
mov
test
sbb
subb
test
jp
xchg
xor
sub
lods
mov
out
idivl
gs
cmp
ss
xchg
ljmp
dec
adc
push
adc
xor
push
pop
sbb
jno
pop
out
sti
add
daa
movsl
inc
in
mov
aaa
imul
mov
inc
rorl
xchg
cmp
leave
inc
out
or
cmpsb
sub
mov
ljmp
mov
in
imul
inc
xor
xchg
sbb
ds
xchg
cmp
cwtl
mov
mov
test
xchg
sbb
sti
push
movsb
frstor
or
cmp
or
out
imul
pop
in
adc
ret
sahf
jle
xorb
in
les
iret
and
add
lods
stc
imul
adc
inc
mov
mov
int
mov
cmp
lcall
fcomi
cmp
cmp
pop
cmp
jg
ss
das
test
adc
push
mov
insl
in
imul
dec
cmp
cs
scas
pusha
mov
jno
xor
cld
cli
leave
imul
leave
inc
dec
aam
dec
inc
and
cs
in
into
push
xchg
call
adc
sub
xor
in
test
leave
mov
inc
mov
xor
mov
mov
pop
and
mov
cmpsb
inc
ja
aam
mov
lods
cmpsb
test
mov
sbb
and
outsl
mov
sbbl
sbb
xchg
ljmp
fwait
push
pop
add
insl
or
and
or
jns
scas
sbb
xchg
test
xor
outsb
adc
mov
insb
incl
loope
int3
fimull
test
mov
sbb
pop
cmp
lahf
sub
xchg
or
cmp
out
mov
xlat
stos
fildl
out
and
xchg
mov
andl
cs
leave
cltd
inc
jg
pop
mov
decl
das
jl
dec
or
popa
push
or
fldl
cmp
xchg
hlt
and
xchg
sahf
add
lahf
repnz
add
or
clc
sub
and
repz
clc
sbb
push
mov
sbb
filds
xchg
mov
sbb
xor
jb
in
hlt
testb
test
pop
fwait
mov
inc
loop
hlt
mov
sbb
lds
rorb
insl
xchg
xor
std
lods
add
data16
lods
mov
mov
sub
rol
sub
lods
cld
inc
outsb
xchg
inc
lods
jge
nop
cltd
icebp
pop
xor
adcb
cmp
ss
pop
addb
mov
jge
std
and
jl
popa
incl
movsl
into
test
mov
xor
jno
imul
fs
les
icebp
fistpll
lret
and
cmp
push
mov
jne
mov
fxch
int
adc
lret
pop
loope
jp
xchg
xlat
and
push
cld
iret
ret
rorb
inc
rcrl
or
dec
push
push
frstor
test
cwtl
sbb
ficompl
stc
mov
mov
xchg
adc
ljmp
cmc
imul
int3
push
popw
cmpsl
or
fldenv
mov
mov
mov
das
repz
jbe
fisubs
xchg
xor
mov
jge
push
push
pop
mov
outsb
fnstenv
fadd
int3
push
movsb
fwait
dec
cltd
popf
push
add
sbb
jmp
push
jno
and
mov
inc
and
ret
scas
push
test
ja
pop
pop
fldl
add
gs
jge
fmull
pop
lock
andl
out
or
call
sub
lret
mov
add
push
cmp
mov
sbb
hlt
pushf
outsl
xor
xor
movsb
sar
push
xchg
imul
adc
out
mov
idivb
mov
mov
fwait
push
movsl
xchg
dec
packuswb
push
sbb
in
imul
or
loop
aas
scas
xchg
nop
push
jnp
scas
xchg
in
rcl
mov
in
mov
ss
push
cmp
sbb
sbb
div
int
dec
push
clc
mov
mov
pop
dec
insb
jge
mov
pop
mov
cmpsb
out
mov
sub
cmpsb
inc
loope
sti
push
fiaddl
addr16
sub
ret
cs
mov
mov
nop
bound
or
or
stos
leave
cmp
dec
and
mov
pop
inc
enter
inc
mov
xchg
inc
jl
adc
cmpsl
pop
sub
aaa
in
xchg
ljmp
out
push
hlt
clc
scas
dec
aam
sbb
add
ret
sbb
adc
jl
addr16
push
shlb
inc
test
pop
and
lcall
push
scas
mov
roll
push
ljmp
jo
icebp
jecxz
repz
cmp
push
xor
ss
sub
dec
jge
test
mov
jne
push
test
les
adc
mov
sti
cmp
aas
mov
je
ret
bound
insb
aam
push
push
jle
fildll
int3
inc
sti
test
jo
ja
lods
inc
dec
pop
scas
pop
dec
mov
out
push
dec
jl
sub
lods
pop
inc
scas
subl
jecxz
into
popf
xor
leave
iret
adc
and
lds
test
rorb
dec
rcrl
or
fwait
inc
aam
cld
in
and
or
notb
mov
insl
fldenv
cwtl
out
sahf
mov
or
shlb
daa
sbb
out
xor
mov
pop
sbb
add
mov
loopne
xchg
repz
stos
xchg
leave
inc
xor
jb
lea
sub
and
inc
cmp
fimull
bound
adc
add
jnp
cwtl
mov
rorb
cltd
lcall
insb
cmc
pop
stos
adc
out
and
rcrb
pop
subb
sub
mov
jg
jmp
push
jb
das
xor
cmpsl
mov
mov
arpl
cmp
imul
addr16
addw
lcall
dec
xchg
push
rorb
cmc
mov
aam
fidivl
mulb
fcmovnu
add
cmp
mov
cmp
cld
out
mov
and
cmp
adc
stos
scas
gs
lret
int
in
or
cmc
nop
iret
pop
lods
leave
sbb
leave
jle
mov
pop
jo
mov
mov
stos
and
push
inc
mov
and
pop
or
shrb
push
fldenv
xchg
stos
inc
jbe
stos
movsb
jge
insl
or
gs
cmp
mov
es
cmpsl
out
shll
rcrl
lret
rorl
daa
mov
inc
popa
popa
mov
pusha
cmp
cmp
sqrtps
aaa
ret
enter
repz
cltd
xchg
or
aad
dec
mov
and
xchg
aas
sub
cmp
mov
movsl
pop
loopne
aam
or
jmp
mov
mov
xorb
jle
adc
adc
lea
fwait
add
push
mov
lds
aaa
jecxz
mov
inc
loopne
lock
lock
nop
push
push
mov
or
mov
popa
or
xor
aaa
in
mov
dec
adc
sbb
sahf
sbb
push
in
mov
cmp
insb
mov
sub
jle
cld
pop
mov
imul
and
sahf
mov
and
xor
imul
xor
fs
sbb
inc
pop
and
loope
and
mov
push
es
xchg
cmpsl
cmpsb
xchg
es
sbb
cmpsb
das
or
mov
inc
lods
sar
hlt
rorl
int3
pop
dec
call
add
cmp
pop
pop
stc
loop
scas
dec
xor
add
lds
out
mov
xor
shlb
loop
movsl
fdivl
enter
outsl
jo
daa
lock
arpl
loope,pt
sbb
in
imul
pop
ficomps
jnp
test
stos
loop
cmp
pop
and
push
scas
sub
and
add
dec
stc
cmp
cmp
push
sbb
hlt
ret
lea
or
mov
lods
mov
xchg
mov
nop
inc
out
sbb
inc
dec
add
in
fstpt
jae
push
scas
lret
push
repz
movsb
mov
ljmp
pop
mov
xor
jo
cmp
inc
arpl
push
fstp
mov
xchg
leave
test
push
js
dec
incb
sub
mov
les
fisttps
je
movsl
adc
add
jmp
add
sub
fcompl
add
mov
aad
out
bound
push
movsb
out
xchg
std
faddl
movsb
pop
push
leave
push
and
lods
sub
sub
mov
jg
lahf
adc
mov
loop
mov
jo
repz
fs
movsb
imul
out
gs
pop
rorb
hlt
xchg
fsubr
imul
push
stc
dec
push
xchg
test
bound
mov
jg
jmp
jg
and
fists
ficoml
cli
add
addr16
rcll
inc
ret
push
mov
adc
mov
aaa
pop
fcomip
shrb
jge
jae
add
mov
mov
jnp
mov
cltd
shl
loop
xor
mov
mov
dec
pusha
jb
mov
add
mov
dec
mov
jg
sbb
leave
clc
notl
test
or
jmp
add
imul
repz
loope
add
push
inc
cmc
mov
push
inc
js
push
test
paddusb
adc
lock
pop
loopne
mov
imul
push
jnp
xor
sbb
xor
sbb
sarb
ljmp
push
cmpsb
sbb
rorl
sbb
out
pop
mov
dec
dec
dec
mov
inc
add
push
mov
mov
inc
xlat
xchg
pusha
xor
addr16
jl
sub
lcall
push
and
into
jg
add
jnp
mov
sbb
les
sub
test
rolb
mov
adc
jge
mov
stos
pop
out
lock
cmpb
neg
into
xor
xor
enter
arpl
jnp
dec
insb
loop
fucom
popa
pusha
mov
adc
cbtw
iret
std
cli
and
push
cmp
or
inc
loopne
dec
xchg
aas
push
cmp
fdivr
xchg
xorb
clc
test
add
out
sbb
cmp
mov
fistpl
mov
dec
push
shlb
in
adc
hlt
cmp
jnp
cltd
loope
xor
dec
sub
add
push
aaa
enter
lret
or
mov
xchg
adc
out
xchg
fisubrs
and
idiv
insl
insl
cmp
mov
shlb
mov
in
je
or
adc
mov
or
xchg
jns
repz
ljmp
pop
xor
adc
jg
lahf
outsb
inc
dec
jle
shll
xchg
lds
and
mov
loop
ja
mov
scas
pop
sbb
lds
mov
ret
pop
lcall
push
adc
addr16
outsl
out
cli
dec
pushf
push
fmuls
or
push
lret
lods
dec
and
in
mov
sarb
cltd
and
out
pop
push
and
dec
repz
imul
mov
test
into
daa
cs
cmc
ljmp
push
pop
aas
jne
aam
mov
add
mov
movsb
test
mov
inc
mov
pop
call
add
je
pop
mov
xchg
mov
popf
add
pop
mov
push
xchg
push
call
inc
sarb
lods
ja
jb
mov
fsubr
imul
mov
repz
push
int
jl
push
xchg
inc
add
imul
cli
dec
or
inc
and
cmpsb
xchg
mov
pop
mov
mov
jne
je
xor
sbb
lahf
movsl
jne
divb
scas
btcl
mov
repz
and
shll
pop
out
push
arpl
mov
je
and
mov
rcl
or
mov
pop
jbe
dec
jo
rclb
movsl
mov
fstps
dec
sar
lock
test
mov
sbb
fnstsw
insb
cs
inc
push
rclb
push
sub
add
push
jne
enter
dec
pushf
daa
jbe
push
int
lea
popf
lret
mov
mov
test
imul
jle
lcall
sub
mov
dec
stc
imull
jnp
lcall
mov
jg
pop
or
push
mulb
jne
popa
xor
scas
push
push
add
sbb
js
fadds
in
out
adc
testl
push
sbb
xor
jnp
dec
shr
popa
jmp
nop
xor
test
inc
icebp
incl
adc
push
sbb
imul
xchg
fucom
dec
pusha
mov
sub
and
in
xchg
insl
enter
insl
jp
adc
repnz
loop
fdivrl
cmp
mov
aas
dec
ljmp
js
fistl
aaa
push
incl
mov
jno
cmp
lods
cmpsb
xchg
in
mov
push
rcll
dec
dec
and
and
ljmp
xchg
pushf
les
add
mov
jbe
sbb
mov
xchg
add
mov
jo
mov
scas
pop
std
add
push
mov
insl
dec
cwtl
mov
adc
dec
pushl
adc
outsl
enter
add
dec
add
jl
mov
xor
inc
mov
loope,pt
sub
xor
push
orl
pop
and
lea
cmp
out
dec
xchg
xlat
adcb
push
in
nop
movsb
sbb
ja
pushf
lcall
stos
sbb
push
jp
aaa
mov
in
mov
mov
or
rep
scas
or
cli
mov
xchg
sbb
or
ljmp
inc
and
test
pusha
ds
dec
fadds
out
sbb
xorl
mov
stc
cmpsl
add
lods
xchg
sub
mov
xchg
lret
stc
sub
jne
jae
popa
xchg
arpl
and
lods
mov
mov
xor
pop
into
arpl
lcall
aas
inc
sbb
jg
jecxz
push
push
test
fildl
sarl
fs
dec
mov
sbb
int
cmp
std
xor
call
dec
stc
aam
xchg
mov
or
pop
test
aad
out
add
mov
jnp
jp
xchg
icebp
jnp
fisttpll
inc
inc
and
pop
pusha
pop
jl
jnp
mov
fadds
test
movsb
push
cwtl
nop
ret
inc
sbb
test
in
test
fstpl
sub
mov
inc
lock
lcall
mov
lods
sub
cmpsl
xor
mov
movsb
bswap
cmp
push
pop
xchg
mov
push
jne
sbb
stos
xchg
mov
sbb
in
jne
cs
push
ds
out
mov
pop
sbb
or
lods
cmc
loope
xchg
mov
pop
subb
movsl
arpl
push
mov
add
ss
stos
inc
jl
arpl
insl
stos
mov
pushf
jbe
ljmp
scas
and
and
scas
popa
mov
cmp
ret
pop
cld
in
pushf
cmp
fnstenv
adc
lods
cmp
push
mov
xor
xlat
inc
dec
scas
mov
and
inc
add
push
adc
ds
out
inc
jle
xchg
out
sbb
hlt
xor
mov
pop
pop
jecxz
xchg
or
pop
add
xchg
pop
out
mov
rcrb
xor
test
mov
mov
pop
mov
dec
repnz
jae
add
and
insb
cmp
push
ljmp
cmp
sahf
out
sbb
roll
pop
in
into
mov
push
push
test
imul
popf
sti
outsb
dec
inc
shr
xor
arpl
or
pop
adc
mov
es
push
push
cmpl
bound
ljmp
pushl
mov
mov
jae
mov
mov
pop
push
push
leave
aas
int
pop
outsl
jno
js
outsb
dec
mov
add
mov
mov
orl
fcoml
pushf
jmp
movsb
ret
popa
xor
hlt
icebp
jecxz
popa
in
adc
adc
cwtl
xchg
push
les
popa
pop
cmpsb
cmp
mov
mov
cmp
mov
cmp
movsb
lret
fsts
cwtl
inc
adc
cld
push
pop
mov
leave
jle
sub
loope
mov
cmpsb
mov
mov
mov
mov
cmp
imul
lret
ljmp
movsb
lret
fidivrs
fwait
xchg
notl
sbb
push
push
in
fldenv
je
popa
addr16
inc
iret
mov
cld
mov
loop
jmp
lock
loop
pop
pop
test
add
sbb
stc
mov
push
wbinvd
xor
outsb
mov
pop
jns
mov
xorl
jns
and
sbb
shrb
pop
sub
cmc
cmp
jne
popa
mov
sub
gs
dec
rcrl
mov
std
push
out
scas
push
jne
and
out
in
xor
aas
dec
loopne
rclb
xchg
adc
jns
stos
dec
sarb
fisttps
mov
push
pop
cmp
mov
inc
mov
loopne
mov
pop
imul
fldenv
test
fcomi
int3
jl
lea
xor
aad
sbb
aaa
mov
xchg
fs
into
arpl
inc
int3
fucomi
sti
jle
loop
outsb
mov
mov
xchg
adc
inc
xor
sbb
inc
pop
sti
lcall
mov
pop
xchg
pop
es
cmp
std
in
sbb
pop
jle
push
call
movsb
jb
and
sbb
sbb
jmp
lret
mov
and
aam
sub
hlt
ja
pop
xorl
shrb
jno
aam
pusha
xchg
jp
push
ja
gs
mov
aad
je
test
sbb
pushf
jo
stc
xor
mov
scas
fdiv
jmp
repz
ljmp
push
pop
stos
aad
sti
xchg
xchg
and
in
xchg
sub
inc
mov
xorb
icebp
das
push
ret
and
xchg
mov
arpl
jbe
pop
pop
dec
xchg
in
lock
or
jbe
gs
movsl
outsl
leave
outsb
sbb
ficomps
dec
sbb
mov
dec
andl
push
or
pop
movsl
xor
adc
xchg
or
mov
mov
sbb
xchg
dec
add
dec
popf
mov
cmpb
lret
scas
xchg
cmp
push
pop
fimuls
xor
push
or
test
or
outsb
or
ret
push
push
sbb
data16
cld
sub
xor
iret
cmp
mov
cli
cli
xchg
jecxz
mov
mov
adc
cmp
and
imul
lods
jne
mov
dec
lock
dec
shrb
or
rolb
pusha
jno
jb
loopne
in
xor
sahf
aad
xor
stc
sub
pop
ljmp
in
shll
dec
popf
and
xor
loope
fstps
xchg
adc
add
das
stos
iret
sbb
clc
adc
div
leave
ret
add
gs
cmp
jge
rcrb
subl
inc
mov
mov
or
mov
pop
or
test
sahf
addr16
push
xchg
cmp
sub
sub
insb
xor
xor
and
adc
bound
clc
sub
icebp
mov
shl
push
sbb
gs
mov
sub
lahf
cmp
jge
cltd
int3
ja
ret
js
mov
xchg
sub
in
push
loop
cmpsl
das
sti
movsb
cmp
dec
xor
aaa
xchg
test
pop
sub
add
and
pushf
adc
inc
adc
lret
mov
push
add
fcomps
adc
add
fwait
imul
cmp
adc
xor
push
inc
push
test
xor
adc
or
loopne
pop
pop
jns
das
pusha
inc
popf
outsb
out
dec
clc
add
xacquire
xor
test
iret
cmpsl
sar
mov
pop
call
rcrl
lea
pop
cmp
rcl
mov
sbb
lock
in
xor
jnp
adc
ret
inc
mov
out
mov
mov
inc
sbb
test
cwtl
scas
aad
cmp
dec
xor
push
jg
inc
jns
sbb
mov
pop
mov
jge
lret
sar
cmp
sub
hlt
cmpsb
add
sub
rorl
cld
push
add
and
add
adc
in
mov
mov
in
push
or
mov
xchg
out
push
sub
sbbb
outsb
push
in
and
cmpsl
pushf
fs
cmc
adc
and
fs
mov
leave
lods
hlt
push
mov
lds
insl
mov
mov
dec
xor
orl
int3
add
stos
and
mov
add
xor
and
jl
pop
mov
xor
stos
cltd
shll
fdivr
dec
sub
mov
dec
pop
sbb
lods
outsl
add
scas
pop
lods
push
shlb
adc
outsb
mov
pusha
scas
mov
push
cmpsb
and
mov
add
sti
pop
cmpsb
sti
in
call
pusha
or
mov
xchg
jle
mov
xor
lods
lods
pop
rcrl
xchg
int
cmp
mov
add
out
dec
sbb
ljmp
mov
ljmp
addr16
inc
pushf
scas
adcl
cld
nop
int3
sbb
or
stos
push
jae
adc
in
sbb
and
add
inc
sub
frstor
imul
in
popa
mov
xchg
shll
or
pop
dec
inc
mov
in
cmp
fldenv
xor
fimull
das
add
jg
xor
mov
popf
arpl
push
sub
push
push
popf
xlat
mov
mov
lret
dec
ret
jecxz
data16
add
hlt
jmp
add
fnsave
push
repz
pop
popa
sti
pop
xchg
imul
rorl
and
stc
in
subl
add
int3
xorb
das
push
mov
and
sbb
jne
mov
dec
leave
aad
dec
pop
pop
stos
int3
scas
inc
loopne
ja
mov
lcall
scas
cwtl
pop
push
lds
push
gs
mov
int3
clc
push
cwtl
push
add
mov
nop
xor
in
mov
pushl
movsb
xor
adc
cmp
movsl
sarl
xorb
or
arpl
ljmp
ljmp
push
call
jo
or
mov
leave
mov
adc
lahf
sub
mov
mov
outsb
sub
dec
mov
into
test
xor
je
repnz
dec
iret
popl
lods
and
pop
in
lds
add
cmp
xlat
or
jno
pop
stos
sub
xchg
pusha
sub
decl
in
or
push
imul
cli
int
mov
repnz
add
sbb
push
cwtl
movsl
rolb
mov
adc
jo
pushf
aas
pop
pusha
mov
adc
les
les
idivl
subl
loope
shl
in
push
repnz
decl
lds
lret
mov
out
scas
mov
movsl
ror
popf
dec
and
or
sbb
je
stos
mov
dec
jge
inc
push
push
test
daa
inc
imulb
xorl
sub
int3
fsub
imul
lods
orb
shrl
mov
inc
push
mov
jecxz
xchg
fisttpl
int
fmuls
sub
mov
jp
loop
or
mov
daa
adc
inc
mov
jecxz
cmpsb
aaa
pop
sbb
xor
mov
lret
sarb
xor
fistl
scas
aad
and
mov
push
xlat
push
cmp
pop
mov
cmpsl
sub
inc
mov
cmp
gs
fsts
mov
mov
or
mov
je
cmp
pusha
jae
fdivrs
into
push
loopne
mov
mov
mov
mov
jno
jge
push
nop
lret
dec
leave
adc
lcall
xchg
cmp
sub
arpl
subl
jae
sbb
adc
cltd
or
and
jmp
sub
test
xchg
sub
aaa
insb
orl
into
and
hlt
jb
lods
call
xchg
aaa
cmpsl
dec
sub
ss
inc
inc
cmpsl
daa
or
in
lods
mov
dec
lahf
sub
movsl
pusha
int
pop
xchg
add
xchg
rorb
fcompl
mov
dec
sbb
data16
out
fisubrl
dec
fmuls
jmp
es
incb
int
mov
push
std
les
jecxz
mov
push
sbbl
sbb
xchg
jmp
pop
sub
bound
xchg
sbb
mov
mov
dec
pop
dec
pop
out
mov
cltd
cmp
cs
fidivs
sbb
cmp
push
push
dec
aam
out
adc
adc
fdivrl
push
and
cmpsl
jmp
sub
loopne
push
add
mov
xchg
jp
movsl
fiadds
mov
fisubrs
sub
out
mov
mov
mov
lea
xor
add
mov
rorl
ficoms
cld
or
daa
dec
add
pop
fwait
shlb
jp
leave
loopne
sbb
fcompl
dec
sub
jb
xchg
jns
into
mov
xor
aad
movups
pop
pop
test
xchg
idivb
mov
test
cmpsl
ljmp
icebp
test
cmp
mov
in
mov
jnp
dec
push
nop
xchg
xchg
push
aad
jnp
inc
fisubrl
or
in
xchg
dec
dec
movsb
xor
mov
mov
add
inc
arpl
ljmp
clc
add
jl
dec
inc
xor
xchg
add
xor
in
dec
ljmp
insl
mov
jl
jl
sahf
mov
xchg
push
stos
scas
mov
sahf
in
cmp
ja
cmc
clc
push
jo
loop
ss
cltd
xchg
mov
or
lock
dec
sub
push
push
pop
sbbb
leave
nop
fcmovnu
leave
mov
icebp
xor
es
xlat
xchg
xchg
adc
jnp
sub
clc
mov
orl
stos
mov
stos
mov
jnp
jge
jnp
pop
xor
and
push
mov
mov
mov
outsl
out
popf
xchg
sub
loope
test
push
adc
js
mov
pusha
or
jb
imul
jl
xor
mov
add
fimull
mov
and
lret
nop
ja
xchg
or
pop
mov
icebp
mov
icebp
jbe
jne
hlt
jmp
dec
mov
lret
in
in
or
xchg
and
mov
push
pop
mov
fstl
push
andl
sub
xor
hlt
jns,pn
adc
mov
adc
fs
mov
leave
cld
popf
inc
movsb
je
je
adc
jg
jle
jg
imul
xor
mov
jne
jne
imul
mov
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
jg
popa
daa
sbb
adcl
addl
rolb
inc
lods
jmp
xchg
xchg
jp
sub
je
scas
lahf
ror
xor
repz
ljmp
inc
scas
or
xchg
out
sub
lahf
pop
sti
mov
mov
iret
xchg
cld
cmp
ss
popa
xchg
push
test
int3
rcrl
and
jmp
shl
loop
push
adc
and
int
xlat
dec
lds
mov
cmp
enter
and
sbb
lret
call
pop
dec
sar
std
push
jp
xchg
dec
cmc
adc
in
cli
sbb
fadds
mov
cmpsb
cmp
leave
iret
cmp
fsubl
lods
aad
hlt
push
inc
lock
rcr
mov
sub
mov
shlb
mov
inc
adcb
mov
pop
dec
int
and
add
push
out
mov
sti
not
in
aas
leave
push
add
test
pop
sub
dec
add
pop
adc
cs
xor
mov
jge
pop
lods
mov
inc
cmp
cli
out
vsqrtpd
mov
adc
adc
and
stos
xchg
push
addl
fists
movsb
jbe
jle
fs
out
sub
xor
xchg
xchg
ljmp
jge
out
test
and
sub
cwtl
rcll
add
adc
stc
loopne
clc
daa
push
dec
pop
adc
and
add
fmuls
testb
mov
inc
arpl
mov
outsl
flds
loopne
and
add
divl
repnz
fstpt
test
aam
hlt
iret
adc
sbb
or
xchg
scas
sbb
jb
cli
add
sub
inc
adcb
mov
out
jecxz
icebp
xorl
jno
stos
fwait
inc
aam
das
clc
dec
push
popa
in
mov
in
leave
sahf
push
lea
and
in
orl
cmpsb
int
dec
cmpsb
fs
fstl
pop
scas
scas
lret
dec
or
push
lret
pusha
push
jecxz
dec
or
jo
cmpsl
cld
adc
leave
adc
pusha
ss
popa
dec
bound
aad
fsubr
inc
lock
pop
dec
pop
leave
inc
xchg
arpl
lds
mov
mov
jp
sbb
jge
xchg
mov
dec
pop
add
int
insl
outsb
add
xor
fdivs
je
out
jge
sbb
mov
test
pop
clc
push
mov
inc
aas
sahf
jmp
jle
jl
jmp
mov
xor
sub
movsb
outsb
jnp
imul
lcall
sbb
or
mov
ja
pop
xchg
jno
lea
pusha
jge
in
pop
test
lret
or
xchg
stos
pop
sbb
mov
jae
lods
xor
sti
or
jl
movsb
in
mov
sbb
sahf
fwait
sahf
movsb
insl
sbb
adc
jecxz
xchg
sahf
das
fisttps
fdivrs
pop
push
ja
stos
fisubs
sub
scas
cmpsl
push
cs
lret
jb
cmp
mov
das
shr
jg
push
sbb
icebp
fisubrs
jl
lcall
ljmp
inc
adc
inc
cltd
mov
aas
pextrw
push
test
jle
pop
ret
call
hlt
ret
adc
leave
lcall
ss
jno
movsl
adc
push
dec
mov
xor
cmc
mov
repz
sub
jmp
inc
addr16
xchg
or
sarl
icebp
and
jle
inc
jmp
pop
ja
pop
fiadds
fldcw
repnz
cltd
loopne
adc
je,pt
test
mov
push
pop
int3
aaa
sbb
sbb
jb
pop
jp
sub
or
sbb
sub
xchg
mov
inc
add
inc
mov
xchg
pop
pop
push
pop
movsl
insl
lods
inc
adc
outsl
mov
push
test
adc
ljmp
mov
imul
mov
aam
test
mov
mov
jns
inc
leave
xchg
xchg
xchg
scas
cwtl
xchg
and
dec
xchg
nop
arpl
cmp
jne
stos
push
out
push
xlat
cwtl
xchg
in
ret
aam
lock
cmpl
sahf
mov
inc
clc
jecxz
popf
ret
test
dec
in
xchg
adc
mov
mov
mov
mov
repz
mov
into
lods
pop
out
loope
sub
cmc
pop
mov
shlb
call
fdivr
pop
cli
js
mov
mov
xor
jle
xchg
imul
mov
les
loopne
inc
push
cmpsl
jl
out
pop
je
ds
test
inc
stos
es
clc
xchg
ds
mov
ficompl
push
sbbb
push
cmpl
jbe
push
push
jno
inc
sahf
jg
adc
sti
imul
mov
add
xchg
into
in
test
ss
mov
push
loop
push
add
pop
inc
jb
call
xor
test
sub
push
mov
jae
mov
push
repz
mov
or
mov
popa
mov
pop
adc
cmp
std
dec
inc
push
test
push
xchg
jp
arpl
shl
adc
stc
sahf
lret
xor
das
in
enter
pavgw
insb
xchg
in
ljmp
xchg
out
xchg
push
jmp
push
clc
sub
shlb
adc
jns
les
jl
popa
sub
sbb
aad
std
clc
cmp
mov
jge
dec
mov
enter
scas
mov
test
pop
loopne
push
xchg
and
mov
mov
dec
je
dec
inc
cmc
shll
out
cmp
mov
scas
push
mov
enter
in
and
out
adc
out
inc
jns
jo
mov
mov
popf
push
mov
sbb
push
loop
or
inc
adc
xchg
lea
out
in
dec
push
sbb
push
shrl
sarl
pop
sbb
adc
pop
mov
out
or
ja
and
int
sahf
popa
movsl
mov
mov
add
jl
pop
mull
xchg
daa
or
outsb
pop
cli
stos
lea
pop
movsl
insl
popa
push
loope
xchg
mov
and
shr
sub
sbb
ljmp
add
sub
and
inc
add
out
cli
pop
pop
mov
cs
jge
inc
pop
mov
pop
push
popa
push
xor
xor
jns
mov
mov
cmc
les
popa
mov
leave
inc
push
pop
pop
stc
rcll
cmp
dec
stos
mov
and
mulb
cmc
jg
xchg
mov
stc
aam
fbstp
jmp
adc
inc
inc
jo
pop
pop
test
sub
pop
mov
add
imul
mov
inc
pop
fwait
jnp
fistpll
sbb
jle
int3
imul
adc
sub
rcrb
xchg
dec
lcall
imul
movsb
sub
es
adc
cmp
and
xor
cmp
sbb
ljmp
mov
cmc
lret
rolb
xor
dec
and
jbe
mov
cmc
mov
or
lcall
aad
mov
rclb
add
pop
jns
in
shll
push
xor
outsl
push
les
xor
rorb
clc
sti
ljmp
sub
adc
mov
cmp
sbb
cmpsb
pop
sub
xor
xor
repnz
in
lds
mov
je
rorb
mov
mov
rcrb
aad
inc
or
pop
sbb
mov
mov
or
xchg
push
sbb
push
or
and
jmp
or
loopne
lahf
cmpsl
add
and
clc
mov
out
ss
aaa
cwtl
mov
cmp
sbb
adc
aas
hlt
movsl
out
pop
mov
fiaddl
pop
aam
or
lods
aad
addr16
pop
push
jge
mov
mov
data16
sub
cmc
xor
fbld
sbb
xchg
push
cmpsb
mov
shlb
dec
nop
in
inc
das
lret
mov
movsb
xorb
sbb
adc
xor
jp
clc
jle
mov
add
sub
mov
adc
lcall
sub
sub
mov
push
xchg
cs
add
and
lds
sub
sub
aad
mov
jne
xlat
lods
pop
sti
sbb
jge
inc
mov
fdivs
out
xor
das
xor
test
push
icebp
jge
pop
cmp
test
cmc
das
lahf
mov
mov
repz
loope
xchg
sub
shlb
sbb
shll
xchg
lock
mov
aad
mov
cmp
out
addr16
adc
fcomps
leave
enter
int
int3
xor
rcrb
ljmp
imull
adc
pop
push
adcb
xchg
jle
pop
into
mov
lea
dec
loop
push
stc
cmp
mov
jo
in
or
push
sub
test
pop
std
inc
or
insb
mov
pop
jge
cmp
dec
loopne
adc
divl
inc
mov
jl
xlat
je
add
insl
pusha
mov
loop
ljmp
mov
xor
cmc
and
rcll
into
pop
cs
jnp
enter
add
pushw
xchg
bound
fisttpl
jo
fmulp
clc
test
nop
pop
mov
sub
clc
add
movsl
nop
add
pop
inc
stc
scas
in
mov
lea
inc
jmp
cmp
mov
xlat
test
fcmovnbe
cmp
jg
push
sub
jmp
std
scas
lcall
push
mov
push
xchg
jb
mov
jo
das
pop
daa
ljmp
push
mov
iret
inc
mov
adc
mov
lret
in
je
jmp
sbb
jo
inc
mov
sub
or
fildll
jb
jmp
push
add
je
mov
pop
sub
fnsave
dec
add
out
test
mov
mov
stos
inc
mov
gs
pop
shl
mov
xor
cld
sbb
mov
sbb
in
sub
cmp
and
mov
push
incb
in
pop
and
movzwl
sti
cwtl
lock
cwtl
or
adc
out
in
and
jno
sub
in
mov
enter
jl
shll
mov
jmp
int
push
push
scas
imul
aad
and
neg
leave
je
scas
mov
stos
addr16
inc
jo
adc
and
out
dec
cmp
sbb
jle
out
inc
das
cmp
pop
movsl
insl
into
dec
cmp
dec
push
or
cwtl
pop
add
push
je
scas
sub
mov
fcomp
fs
rorl
fnstsw
movsl
push
xchg
add
cmpb
mov
sub
inc
xchg
negl
cli
fcoml
mov
lods
xor
repz
jne
pusha
dec
test
mov
cmp
in
jmp
cmp
push
or
lods
popf
in
pop
into
adc
pop
or
adc
std
mov
push
cmpsl
pop
cmp
cld
pop
push
jns
push
sub
lret
xchg
popf
lret
pop
mov
jmp
pop
and
pop
adc
pop
shlb
xor
in
xor
adc
into
pop
fwait
enter
xchg
popf
and
adc
mov
popa
in
push
cmp
scas
mov
or
mov
daa
adc
xchg
mov
movb
popf
xor
xchg
add
arpl
aam
jbe
inc
or
mov
mov
lret
cld
cli
jge
bound
cmc
cmpsb
mov
add
add
push
aad
das
iret
or
fistpll
add
idivl
mov
shl
inc
bound
mov
pop
sti
ud1
mov
addr16
lods
or
orl
divl
cmp
rcl
out
dec
and
in
mov
cmpsb
dec
out
sbbb
cmp
ret
dec
fs
adc
sahf
decl
movswl
lods
insb
jge
cmp
adcl
aam
lods
aas
sub
mov
adc
in
arpl
xchg
mov
pop
cmp
shlb
or
dec
mov
stos
or
cmc
xchg
dec
shrb
sub
test
sbb
mov
mov
sbb
js
rcll
gs
pop
clc
fldl
pop
nop
mov
xchg
or
pop
mov
int3
mov
sub
and
stos
mov
aam
or
push
ja
sahf
daa
cmp
mov
inc
sti
sahf
push
cmp
pusha
push
mov
les
mov
loopne
sub
push
pop
dec
xor
sbb
ljmp
jns
fisubrl
push
lcall
inc
and
notl
xchg
cmc
in
add
mov
jle
sbb
into
rclb
cmp
adcl
adc
fcom
mov
ds
add
stc
ds
fwait
int3
mov
mov
lods
stos
or
dec
lret
cmp
mov
jle
loop
mov
and
pop
mov
push
sarl
xchg
imul
xor
inc
mov
jecxz
dec
xor
nop
xor
shr
fcomi
add
mov
xor
ja
test
xchg
push
fmuls
popa
clc
mov
mov
push
into
fisttps
inc
enter
and
inc
stos
pushf
inc
pop
nop
mov
testl
addr16
out
sbb
hlt
push
sub
lock
pop
outsl
stos
and
xchg
and
mov
fidivs
ret
jno
cmp
dec
mov
lds
push
xor
jno
add
and
jns
push
mov
dec
jmp
adcb
loope
xor
ret
jno
and
cs
push
cmp
mov
sub
stos
jne
lods
adc
stos
ret
add
pop
and
inc
decl
shrl
fisubrs
adc
fisttpl
ret
into
fsubr
insl
adc
xchg
ds
or
push
shrb
lahf
xor
xor
jo
pop
push
fdivrl
enter
xor
xchg
test
notl
pushf
sti
xchg
aaa
testb
mov
cmp
xchg
xchg
pop
jle
and
or
or
xchg
pop
loop
pop
xor
clc
jo
inc
js
sbb
sub
int
cmpsb
push
adc
fldl
outsb
mov
sub
or
and
mov
loop
fcmovb
sub
fs
cltd
test
arpl
sarl
pop
jo
pop
icebp
cs
or
adc
stos
xchg
ror
push
xorl
xchg
mov
push
test
mov
out
mov
arpl
loop
mov
lds
pop
dec
mov
divl
dec
and
addr16
push
or
aam
pop
sub
mov
mov
std
or
jl
fbld
cmp
div
leave
push
push
jo
lret
cmp
jg
into
sub
pusha
pop
xlat
jb
enter
mov
addb
cltd
rcll
in
nop
and
jbe
fcomi
into
push
pop
sbb
pop
clc
movsl
lds
or
outsl
negl
sti
cmp
or
mov
jp
or
add
jb
mov
cmp
mov
shlb
push
inc
fcomps
add
cmp
cmpl
sarl
in
cmp
jno
int
repnz
test
mov
test
jbe
lods
cmp
xchg
inc
dec
daa
adc
inc
xor
lea
mov
pop
in
lock
bound
mov
xor
dec
push
arpl
sub
inc
fsts
stos
fs
imul
xchg
push
and
xchg
mov
add
std
mov
mov
mov
in
push
outsl
xor
cmc
and
jo
aad
pop
pop
outsb
xchg
cmp
inc
mov
in
das
aam
mov
jg
add
sub
dec
sarl
in
negb
pop
push
mov
or
pusha
dec
mov
fldcw
push
add
mov
fsubs
out
xchg
fs
sub
mov
icebp
out
fstl
jns
call
sahf
lret
rorl
cwtl
hlt
pop
jp
loope
in
add
in
fildl
inc
and
jp
inc
gs
adc
mov
dec
sbb
ror
push
lret
les
jb
push
inc
imul
int3
imul
jecxz
xor
cmp
arpl
bound
test
sarl
repz
mov
popf
test
jb
das
inc
jno
test
leave
adc
jnp
data16
jge
jno
aaa
dec
lcall
popf
fdivrs
sbb
jno
xchg
mov
cmpsl
pop
sbb
inc
and
mov
cmp
mov
push
test
das
mov
mov
pop
mov
cmp
or
cmp
adc
mov
in
sub
lds
pusha
sti
push
in
add
or
gs
add
and
sub
cmp
rorb
cld
lret
adc
sti
dec
and
xchg
popf
jae
jno
cmp
push
jae
sahf
rorl
pop
fmull
mov
push
out
rep
in
std
cwtl
mov
call
sbb
mov
or
inc
adc
fsts
inc
dec
into
test
push
push
stos
cmp
inc
les
mov
aaa
add
xchg
pusha
push
jmp
insb
sbb
adc
and
push
cld
push
outsl
stos
test
jmp
enter
imull
mov
push
ss
mov
cmp
lods
pushf
sub
dec
jle
xor
bound
and
mov
enter
fmul
insl
in
scas
adc
jae
icebp
in
idiv
nop
sub
xchg
sub
sbb
push
push
stc
ja
jns
jbe
dec
add
shll
daa
std
in
fwait
mov
mov
gs
mov
lods
mull
jb
add
xchg
cli
adc
pop
sub
in
mov
mov
pop
inc
pop
out
mov
pop
fnstcw
push
pop
loope
int3
mov
adc
fcomps
fs
push
fisttps
out
leave
ss
pop
dec
push
sub
sbb
xor
stos
or
push
push
cmpsb
jo
adc
and
in
sub
sbb
loope
or
jne
addr16
out
jl
push
dec
pop
sub
das
cmp
or
inc
mov
sbbl
in
inc
pop
ds
xchg
push
inc
scas
sti
jl
sbb
ret
jo
ret
ret
inc
jbe
sub
je
mov
loope
sbb
cmpsl
adc
nop
pusha
add
xlat
jne
in
fstl
insl
push
sub
arpl
outsl
push
mov
mov
inc
mov
scas
add
mov
mov
mov
test
mov
arpl
and
cmp
cmpsl
inc
mov
test
into
repnz
jl
into
loope
subl
popf
jl
insb
sbb
jb
loop
or
arpl
cld
cmp
and
push
sti
xchg
fcmovb
mov
cmc
cli
sub
aad
push
sub
jge
add
push
xor
pushf
mov
je
call
push
add
pushf
jo
xchg
adc
test
adc
bnd
insb
add
inc
dec
nop
repz
pop
xlat
es
loop
xchg
dec
sub
les
mov
xor
jmp
add
lret
jo
inc
scas
int3
in
in
movsb
push
jp
push
addr16
scas
and
fcom
sub
call
mov
imul
push
push
ds
inc
cmp
in
fisubrs
adc
add
adc
push
cmp
inc
and
xor
dec
jae
jns
and
jae
mov
or
int
test
insl
mov
call
movsl
inc
popf
in
inc
jge
jmp
ja
cwtl
pop
outsb
xor
or
jmp
fstpt
data16
fdivrl
add
les
jo
hlt
mov
pop
pop
mov
xor
jecxz
fcompl
xchg
rorb
jg
adc
int
xchg
cmp
lahf
dec
mov
xchg
fiadds
daa
pushf
mov
sbb
std
xchg
roll
push
mov
xchg
mov
mov
cmpsl
pop
mov
insl
lock
dec
sbb
shrl
arpl
data16
les
xor
stos
out
fs
into
push
inc
cld
push
and
in
int3
aad
jbe
insl
out
adc
in
aas
mov
das
jl
xor
jnp
andb
sbb
inc
sub
int3
jb
push
xchg
insl
inc
inc
aad
dec
adc
in
xlat
mov
int
push
adc
push
imul
and
fwait
cmp
inc
sub
mov
test
test
popf
lods
mov
cs
cmp
sbb
pushf
cmp
mov
shlb
test
outsb
in
sbb
ret
cmpl
inc
adc
mov
sbb
fimuls
push
pop
pop
push
lahf
in
inc
test
jbe
je
pushl
add
idivl
sub
jb
sub
test
xchg
cs
or
sub
jns
xchg
lock
jno
loope
icebp
clc
xchg
cmp
dec
movsb
scas
cmp
fildl
pop
pop
test
inc
ret
cltd
loop
imul
loopne
repnz
pop
jle
addr16
andb
nop
stos
aam
and
xadd
lods
addb
pop
push
inc
jbe
push
or
rorl
cs
ja
or
and
jo
stc
mov
shll
leave
mov
jae
popa
sbb
out
or
aas
sbb
cltd
test
inc
popf
dec
int3
cli
push
and
push
xor
outsb
jle
add
push
dec
sahf
addb
iret
rorl
xchg
sub
and
lret
mov
bound
pusha
loop
pop
fimuls
push
sub
cmp
push
cmpsl
dec
sub
loopne
mov
outsb
test
jb
aaa
or
push
lcall
imul
pop
loopne
jb
fptan
add
add
cmp
pop
jnp
inc
push
aas
mov
ficompl
fcompp
adc
pop
outsb
leave
test
push
pop
mov
and
inc
push
cmp
lods
ret
fsubp
add
mov
fcmovb
xchg
repz
repz
loopne
mov
mov
push
pop
into
mov
add
pop
outsb
push
pop
out
sti
in
dec
rcr
add
das
fs
pop
mov
jnp
out
mov
imul
int
add
nop
mov
cmpsb
mov
mov
or
in
cmp
andl
push
fstps
cmc
adc
fcmovu
add
sub
pop
inc
stc
or
shlb
cmpsb
push
push
jne
or
or
jb
lock
inc
sub
cmc
push
and
cmp
sbbb
cs
mov
sbbb
arpl
mov
aad
cmp
testl
out
xor
mov
jp
ja
lahf
inc
sub
jnp
es
pop
push
fmuls
xorl
jle
in
test
leave
cmpl
adc
mov
sbb
dec
movsl
arpl
sbb
dec
push
pop
ja
aam
push
pop
or
dec
outsl
sahf
loope
into
sub
rorl
jo
jne
xor
push
cmp
push
push
js
xchg
push
repz
andb
dec
ret
mov
sub
inc
adc
dec
aaa
cmpl
mov
inc
call
xchg
dec
lret
js
mov
lret
add
jg
push
div
and
or
dec
ret
jg
xor
aas
outsl
fstpt
xchg
mov
cmp
inc
cmp
je
imull
jecxz
bnd
shrl
sbb
sub
lds
cltd
mov
push
mov
adc
pop
cmp
imull
lock
sbbl
lahf
cltd
sub
xchg
push
jnp
jl
push
lods
jp
mulb
and
fs
out
pop
test
outsb
cltd
cmp
in
int3
adc
lea
lods
push
jmp
negb
mov
push
repnz
or
call
jae
mov
in
in
and
shl
pop
ret
adc
xchg
or
and
inc
inc
nop
inc
sbb
outsl
xlat
jecxz
inc
add
mov
add
cwtl
outsb
cltd
push
inc
dec
loopne
inc
xor
cmp
aad
xchg
test
xor
sub
sub
and
cmpsl
xchg
xor
lret
xor
ud1
imul
jge
jp
pop
lret
mov
negl
push
pop
pop
insb
cltd
fwait
push
cltd
into
ljmp
push
mov
mov
mov
push
filds
jg
mov
leave
das
push
push
addr16
popf
test
movsl
fcomps
inc
rcr
add
mov
shrb
test
stos
or
hlt
push
dec
arpl
cmp
dec
imul
lret
mov
and
in
into
inc
nop
daa
pushf
iret
lds
or
pop
pop
sbb
popf
outsl
filds
push
xor
dec
int3
stos
xor
sbb
mov
and
std
dec
out
dec
aam
fsubrs
int
je
lock
and
out
cmp
outsl
sti
jae
in
icebp
subl
ret
push
sbb
stos
and
mov
shr
hlt
fidivs
push
cltd
add
lea
dec
outsl
addr16
sti
push
fwait
sub
mov
das
gs
mov
jbe
pushf
push
mull
out
jge
cmp
lods
js
lea
ja
fisubl
adc
icebp
dec
add
jb
jb
push
clc
lcall
sbb
push
pop
pop
mov
aaa
xor
inc
aaa
xchg
mov
and
add
lea
cmp
aam
xor
in
in
mov
js
or
mov
pop
jmp
mov
imul
mov
out
orb
scas
cli
cmp
fwait
mov
jo
movsb
xchg
dec
inc
and
jbe
sub
xor
imul
and
xorl
adc
inc
testl
cltd
mov
add
push
pop
xchg
sub
inc
dec
xor
aaa
xchg
div
dec
nop
add
std
outsl
xlat
dec
cmp
or
sbb
mov
fwait
and
enter
mov
mov
je
mov
push
jnp
or
add
add
dec
mov
sbb
mull
stc
push
add
pushf
aad
sti
pop
dec
inc
insb
mov
mov
fldenv
lock
and
and
sbb
out
add
and
movsl
pop
and
mov
jns
push
xchg
cmpsb
icebp
pop
aas
jmp
in
cmpsl
les
ret
dec
mov
sbb
push
dec
imul
or
dec
mov
fnstsw
je
and
sub
xchg
imul
lds
mov
std
xor
pop
push
jl
aaa
and
aad
dec
ret
inc
lods
fstpt
lods
out
addl
loop
mov
adc
inc
sarl
or
push
cmp
fldenv
mov
cmp
movsb
xchg
mov
push
mov
mov
cs
testl
push
xorl
inc
fisubs
and
inc
or
out
and
lods
into
daa
test
xor
adc
inc
jo
adc
test
xchg
mov
mov
or
stos
jge
mov
and
xchg
icebp
add
roll
movsl
pop
mov
les
add
push
imul
pop
cmp
shrd
cld
and
jp
lea
sbb
fs
mov
lahf
fdivl
incb
xchg
ljmp
pop
inc
movnti
dec
pop
test
bound
fiaddl
in
ljmp
bound
scas
pushf
pop
das
inc
into
push
inc
sub
lea
es
mov
lods
jae
insb
mov
inc
jns
mov
jecxz
scas
xchg
lods
enter
mov
icebp
mov
repnz
arpl
lods
or
add
inc
push
sub
pushf
adc
xor
or
lods
pushf
mov
jmp
xchg
pop
repnz
push
loop
push
sbb
popf
daa
cld
mov
xchg
sbb
iret
iret
or
xchg
mov
xor
arpl
mov
or
sub
jo
pop
loopne
push
adc
mov
cmp
mov
push
aaa
v4fnmaddps
repnz
in
adcb
leave
mov
mov
imul
pop
pop
xor
hlt
aaa
mov
shlb
mov
movsl
pop
xchg
in
shll
sbb
add
and
ljmp
push
mov
xchg
xor
push
push
scas
jnp
lds
cmpsb
add
cwtl
jae
push
pop
fidivl
ja
adc
cld
add
daa
mov
push
xor
or
adc
fistpll
in
popf
mov
inc
imul
popf
dec
xchg
adc
jnp
inc
shlb
push
add
mov
mov
pop
sbb
shlb
popa
or
mov
loop
imul
inc
add
and
sarl
enter
jge
lods
shl
push
cmpsb
xchg
fists
inc
test
cmp
insb
movsl
or
xchg
aas
cmp
sub
cmp
cmp
inc
rcrl
mov
xor
bound
xchg
fisttpll
inc
jmp
pop
stos
outsb
inc
mov
sbb
sbb
mov
push
jb
jbe
lahf
rol
lret
and
mov
adc
push
and
insl
xchg
addr16
shrl
int3
and
in
xor
icebp
scas
pop
xchg
mov
fbstp
jp
or
xor
xor
daa
bound
cmpsl
dec
lea
sbb
mov
jae
pusha
fiaddl
push
movsb
mov
cld
lock
mov
jmp
dec
cwtl
test
cli
sub
mov
xor
push
insb
cmp
cmp
icebp
testl
push
xchg
push
and
lret
push
mov
lock
xchg
add
add
jmp
push
int3
sub
jno
push
mov
hlt
nop
mul
scas
dec
stos
into
fdivrs
jno
leave
test
push
mov
inc
mov
push
pop
dec
in
lock
std
xchg
push
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shrl
insb
int3
sbb
pop
addl
push
aad
jns,pn
and
pushf
xor
cs
addl
aaa
or
aaa
mov
pop
movsb
adc
dec
dec
sarb
or
imul
lret
fists
sub
xchg
sub
mov
jbe
jo
jns
or
xor
jg
cmp
push
rorl
scas
int
je
pop
loopne
cmp
out
in
popf
sub
xor
sub
pop
lods
mov
push
xchg
or
shl
repnz
outsl
fisubl
es
adc
aad
lahf
add
lret
repz
pop
or
adc
dec
cmpsb
leave
xor
stos
jle
pusha
adc
add
testl
inc
or
mov
gs
push
aam
cwtl
mov
popf
or
rol
inc
inc
jo
mov
rol
mov
repz
pushf
pop
into
pop
adcl
pop
insl
cwtl
sbb
adc
cmp
ja
lea
shll
pop
jp
or
sbb
and
or
sbb
xor
mov
lods
fldt
lock
mov
xchg
enter
arpl
mov
jnp
pop
mov
cmc
imul
add
inc
movsb
mov
aad
inc
lods
xor
xchg
lods
pop
insb
out
mov
mov
and
gs
add
repz
lds
lea
pop
loop
cli
pop
jno
shrb
dec
lret
idivb
or
push
jle
cwtl
loopne
add
dec
repz
push
imul
iret
aaa
dec
call
adc
or
fistl
add
andl
fstpl
xchg
int
pop
xchg
sbb
push
jne
fsubs
xor
adc
and
mov
out
and
adc
push
or
and
sbb
jb
push
daa
or
sti
clc
sbb
lahf
push
xchg
sub
push
movb
test
icebp
inc
jecxz
adc
mov
jge
leave
pop
xor
pop
data16
sbb
cltd
add
xor
test
test
out
adc
pop
jae
xor
xchg
xchg
sub
push
enter
pop
inc
and
fisttpl
adc
imull
jl
cs
add
mov
mov
xchg
jno
mov
ss
add
lea
lahf
add
ja
or
xchg
bound
mov
imul
inc
aam
ficompl
cmp
adc
out
out
rorb
into
adc
cmpsb
das
pop
push
idivb
ret
and
sub
xchg
repnz
ds
or
fwait
test
cmp
cmp
mov
dec
xchg
in
cmpsb
in
inc
push
inc
hlt
lret
cmp
int3
les
mov
clc
push
push
xchg
pop
mov
sub
xchg
shl
jne
xchg
inc
xchg
push
lcall
mov
xchg
cld
lock
xlat
mov
mov
idiv
imul
je
cmpb
mov
add
adc
sub
dec
mov
fildll
or
ffreep
test
out
mov
xor
sbb
sub
and
sbb
mov
in
sbb
out
aam
xchg
jne
pop
loopne
cmp
lret
icebp
das
cmpsb
lods
pop
fsubrs
cmp
sub
inc
lods
test
push
clc
fildll
movsl
ss
cli
inc
jg
xchg
hlt
push
cli
mov
cs
xchg
pop
sbb
insl
shrb
pop
inc
xorb
repz
daa
xor
cmp
incb
mov
or
cmp
dec
jne
das
stos
mov
rclb
jp
lret
push
ds
dec
insb
xor
sahf
pushf
mov
out
ret
not
rcrb
inc
dec
int
pusha
div
icebp
cmp
jo
or
jne
fisttpl
arpl
xor
out
xchg
pop
and
leave
ret
push
xchg
mov
in
cmpsl
cmpsb
mov
clc
pop
adc
cmp
scas
les
into
jge
sub
mov
and
add
add
and
mov
xchg
std
push
shrb
mov
bound
mov
stos
jae
adc
jbe
or
out
lock
push
outsl
or
in
sub
push
cmpsl
add
pop
stos
add
mov
in
xchg
mov
test
fwait
mov
js
dec
stos
lock
movsl
pop
dec
prefetchwt1
or
fs
rcrb
add
int3
pop
scas
sbb
xchg
jo
daa
fs
cmp
xchg
jb
sbb
push
decl
out
std
bound
inc
jle
data16
pop
push
fisttpl
shll
xor
scas
or
push
arpl
push
jo
ja
xchg
jbe
dec
or
xchg
jle
push
jmp
popa
aas
fninit
je
mov
nop
adc
mov
push
sub
cmp
sbb
push
insb
insb
inc
pusha
imul
pop
cli
xchg
cmpb
add
push
cli
inc
movsb
mov
mov
mov
add
out
nop
inc
adc
test
inc
andb
lea
add
mov
pop
out
mov
inc
or
sbb
fsts
sti
mov
or
pop
inc
inc
scas
adc
sbb
dec
stos
push
push
icebp
dec
add
mov
mov
pop
add
cmp
xchg
psrlw
fistl
mov
iret
pop
arpl
xor
add
xor
hlt
pusha
or
scas
in
xor
cli
clc
mov
cltd
push
pop
mov
sub
cld
sub
scas
jmp
imul
mov
in
inc
mov
fs
pop
popf
lods
lods
repz
add
inc
lcall
scas
shrl
cmp
sub
sbb
dec
lahf
lret
addr16
rolb
xor
inc
inc
cmp
and
jge
ror
iret
mov
xchg
inc
mov
out
adc
js
mov
jmp
enter
sbb
js
sbb
jb
pop
xchg
movsl
adcb
testb
cmp
sbb
cltd
cmp
lret
mov
add
sub
fwait
imul
rcll
mov
and
lret
or
shll
loop
cmp
mov
shll
xchg
outsb
lret
ja
and
push
adc
fdivl
repz
jno
xchg
test
push
and
push
mov
mov
je
pusha
sbb
sbb
stos
and
mov
out
push
sbb
push
pushf
cmpsb
adc
dec
leave
divl
into
int
jge
mov
lcall
pop
inc
xor
cmp
jno
scas
dec
fdivr
sub
xor
add
repnz
fisubrl
test
fistpl
dec
jg
mov
out
add
sub
les
not
addr16
jne
enter
add
mov
mov
mov
cmp
push
arpl
cmp
idiv
mov
inc
fcmovb
imulb
scas
inc
pop
outsb
sbb
bound
mov
push
out
mov
add
sbb
xchg
mov
lahf
ret
dec
cltd
mov
dec
mov
fdiv
fprem1
sub
pop
push
pusha
xchg
ds
mov
sbb
repnz
addr16
out
xchg
test
mov
lods
xchg
je
call
in
test
push
pop
inc
xchg
fldcw
cmp
loopne
inc
jne
inc
jmp
push
test
xchg
mov
inc
icebp
scas
jnp
fisttpll
out
jae
push
stos
dec
sub
push
call
jne
mov
xchg
gs
or
lea
rcrl
fcmovne
in
xchg
jo
pop
jb
and
arpl
jecxz
cmpsb
sbb
cmp
loope
or
scas
pushf
mov
and
sysenter
loope
aad
es
outsl
and
lods
icebp
outsl
lret
int3
cmpsb
xor
and
push
les
mov
and
call
outsb
mov
dec
ret
stc
sbb
sti
adc
sbb
pop
jle
sbb
cmp
jne
leave
mov
ljmp
push
xor
push
popa
rorl
cltd
jnp
leave
sbb
ret
cmp
mov
add
outsb
inc
movsl
add
push
data16
dec
enter
jne
fdivl
sbb
lea
out
repz
adc
mov
push
cli
mov
lods
or
mov
jp
and
ficoms
pop
adc
or
or
ficomps
push
jmp
stos
lds
xor
out
sbb
imul
daa
add
mov
lods
jge
mov
ret
or
sub
sbb
cmpb
gs
test
call
mov
or
dec
push
mov
and
push
sub
lods
in
mov
test
adc
xor
push
jmp
mov
mov
push
dec
scas
fdivrl
jno
xor
pop
rolb
xor
sub
mov
fndisi(8087
add
adc
data16
dec
dec
adc
test
and
push
std
inc
pop
jno
ja
xor
jl
or
sub
jmp
mov
dec
pushl
jae
sti
mov
pushf
mov
fiadds
or
pop
push
jnp
enter
sub
in
inc
cmp
push
outsb
cmc
test
dec
repnz
iret
sbb
lods
push
lahf
jecxz
dec
add
xor
ficoms
or
lock
inc
addr16
test
shrl
and
cs
dec
push
add
xlat
adc
test
incl
or
adc
jns
dec
dec
cmp
outsl
adc
inc
pop
es
add
inc
mull
sarb
mov
jg
inc
ljmp
lock
sbb
hlt
jmp
jb
mov
pop
in
jnp
add
adc
mov
sub
pop
push
in
inc
cld
push
cmc
push
and
ljmp
xchg
repnz
push
cmc
pop
adc
mov
imul
fiaddl
das
mov
mov
stos
aaa
scas
mov
inc
les
xchg
imul
push
xchg
repnz
adc
gs
addr16
mov
mov
mov
adc
or
repz
mov
iret
insb
jle
mov
lods
test
xor
push
orb
and
pop
and
adc
icebp
xchg
stos
jno
data16
add
sbb
pop
cltd
movsb
xorb
lret
pop
and
dec
jl
sbb
and
xchg
mov
mov
imul
sbb
sahf
mov
mov
push
lds
xor
and
sub
sub
ret
fimuls
es
or
icebp
jns
inc
mov
insl
fidivl
movsl
test
add
insl
es
lods
jo
xchg
out
int
xor
divb
jns
adc
fistl
lods
in
aam
push
jo
pusha
push
inc
incl
and
stos
and
fbld
adc
rcrl
popa
enter
sub
sub
repz
mov
or
enter
mov
insb
cmp
pushf
add
inc
add
mov
mov
iret
xor
nop
arpl
scas
dec
cmp
movsl
cmp
mov
nop
push
pushf
push
jg
fstp
xor
rcl
dec
roll
lods
outsl
cmpsl
pop
stos
in
lds
jle
arpl
fstl
enter
sub
pop
mov
and
and
out
nop
mov
mov
pop
push
add
or
out
xchg
cmp
pop
pop
xlat
scas
sbbb
enter
mov
test
xor
je
divb
sub
dec
insb
cwtl
movsl
cmp
fnstcw
loop
mov
and
dec
ss
sbb
stc
fwait
push
aas
insl
test
iret
imul
sti
movsb
pop
cmc
into
lahf
mov
lods
push
out
mov
push
fmull
movsl
addb
pop
divb
js
sub
pop
mov
mov
xchg
xor
mov
aam
or
mov
push
mov
rcll
cwtl
mov
fbstp
jecxz
push
xchg
iret
mulb
lret
push
pop
sub
push
pop
jno
mov
dec
test
icebp
shlb
addr16
sub
mov
mov
loope
jle
fisubl
cmp
outsl
test
or
hlt
inc
add
cld
or
mov
sbb
pop
clc
and
int3
test
mov
jne
enter
xchg
xor
xor
push
dec
mov
jmp
xchg
dec
imul
ljmp
sub
aad
pop
jg
push
jb
jle
int3
test
imul
adc
hlt
xor
mov
adc
ss
or
scas
jg
subb
xchg
mov
cmp
xorl
jp
mov
mov
inc
orb
mov
in
das
cmp
mov
dec
pop
loope
pop
in
inc
xlat
pop
push
fimull
adc
clc
ret
sub
adc
sub
pusha
cs
cmp
or
cmp
cmp
fsubl
fcmove
mov
ss
or
push
js
lret
ja
xor
mov
fsubrl
dec
mov
data16
mov
dec
fmull
add
push
mov
mov
xchg
xchg
test
xchg
sub
add
xchg
sub
insl
jo
inc
push
scas
jecxz
cmc
imul
push
repnz
cwtl
jb
mov
cli
jmp
les
sub
js
pop
enter
or
cmc
jns
sahf
das
les
inc
add
pushf
pop
add
gs
xchg
cmp
shld
rcrl
addr16
outsb
adc
in
clc
and
fidivs
in
jb
sub
loop
mov
mov
clc
or
add
and
xor
mov
bound
stos
jmp
loope
test
test
cmp
add
clc
cmp
test
lcall
mov
cmp
sub
arpl
or
and
sbb
int3
sbb
push
and
mov
lds
or
add
xor
popf
aas
pop
cmp
fimuls
xor
mov
frstor
mov
outsb
or
aas
lahf
jl
cltd
mov
std
fwait
push
add
daa
pop
sbb
cli
xchg
or
fisttpll
cmc
mov
adc
les
sbb
mov
cli
js
or
xor
pop
fsts
mov
scas
lock
dec
add
sahf
outsl
and
xor
cmc
mov
icebp
pop
xchg
imul
call
loop
push
mov
cld
sbb
lahf
lcall
mov
sahf
xchg
clc
mov
pop
adc
fstpt
inc
and
out
push
pmulhw
shr
push
jns
xor
mov
jmp
mov
sub
lock
cld
shll
pop
or
mov
jmp
sahf
aaa
pop
loop
push
inc
add
cs
adc
scas
mov
ret
xor
cmc
aad
imul
xlat
push
sahf
ss
mov
popa
pop
fxch
lds
xor
mov
fsubs
imul
sbb
jg
mov
fwait
mov
xchg
daa
cmp
push
sub
jno
push
fsubr
jl
stos
mov
cld
and
dec
test
xchg
push
push
push
ljmp
jecxz
fnstcw
xchg
lock
add
pop
scas
into
and
mov
es
mov
jmp
out
stos
add
xchg
sbb
pushf
dec
mov
iret
mov
in
sub
mov
out
mov
test
adcb
push
push
ffree
enter
lods
lds
roll
daa
adc
fdivs
add
push
jns
mov
movsb
jmp
mov
lea
cmp
stos
decl
outsb
loopne
dec
test
mov
cmp
sbb
pop
xor
mov
int
mov
arpl
xchg
push
dec
jmp
outsl
push
enter
addl
mov
mov
jmp
cmp
fwait
adc
je
pop
stos
xlat
in
dec
fs
mov
push
add
sbb
cmp
fnstcw
adc
pop
inc
xor
xor
ss
iret
push
mov
sarl
or
add
sar
orl
cld
sub
fbld
cld
xchg
xchg
mov
inc
mov
lds
dec
mov
inc
or
pusha
cld
pop
cmpsl
fs
ret
push
int3
inc
orb
scas
das
data16
mov
call
mov
mov
push
scas
jge
jnp
sub
stos
jg
jne
imul
add
adc
xor
mov
pop
repz
aam
xor
pop
mov
lea
mov
sbb
rorl
dec
popl
mov
in
leave
nop
mov
pop
hlt
xchg
adc
es
inc
test
jnp
sbb
xchg
in
in
pop
addr16
test
cmpsb
test
aad
xchg
ja
scas
sbbl
xchg
push
jge
mov
gs
pop
fists
lock
xor
sbb
adc
inc
stc
cli
or
mov
scas
lret
or
xor
enter
ja
push
imul
xor
roll
mov
xor
lds
jecxz
int
lods
dec
mov
loope
fistps
xor
je
mov
cmpsb
insl
inc
call
jg
jg
int
xor
cmp
in
mov
mov
addr16
aas
xchg
sub
pop
into
mov
test
mov
push
push
test
jns
and
push
cmp
pop
pop
cmp
je
ja
addl
iret
mov
lds
lods
adc
popf
xchg
mov
dec
out
leave
sbb
outsl
adc
jns
xchg
call
xchg
cmpsb
inc
jo
inc
call
mov
icebp
push
lcall
add
fbstp
push
inc
lahf
cmpl
lret
mov
fnstenv
push
mov
test
mov
inc
mov
shrb
imul
pop
ja
nop
mov
lcall
mov
fdivl
out
pop
mul
mov
xor
scas
lods
orb
push
jl
sbb
pop
and
inc
dec
nop
xchg
ja
xchg
test
or
ds
dec
fisttps
add
sbb
neg
mov
js
loope
fs
push
movsb
and
push
pop
adc
arpl
dec
cmp
data16
jbe
sub
fwait
jl
push
mov
jmp
das
xor
lret
jo
mov
xchg
mov
aad
and
imul
sbb
int3
test
mov
dec
jle
xor
test
cmp
inc
sub
cmpsl
jp
arpl
jmp
pop
mov
or
aad
aas
mov
cmp
push
loop
pop
ljmp
movsb
jge
inc
repnz
mov
sub
divl
mov
sahf
sbb
cltd
or
mov
test
push
outsl
dec
js
pop
or
dec
and
mov
pop
xchg
movsl
jb
sbb
js
cs
jmp
mov
dec
xchg
xchg
jns
gs
pause
pop
mov
xor
leave
in
imul
rcrb
imul
stos
stc
loopne
or
imul
lock
jl
repnz
mov
subb
cld
call
adc
movsl
mov
inc
fs
fcmovnbe
jnp
aam
jl
stc
mov
pop
mov
lret
push
mov
dec
stc
idivl
and
jge
push
frstor
in
ds
inc
push
xchg
call
and
push
js
fdivrl
fdivs
dec
dec
in
push
push
inc
add
mov
mov
mov
test
pop
nop
lahf
xor
lret
push
mov
mov
cmpsb
je
mov
fnop
xor
or
jbe
popa
cwtl
std
cmpsl
stos
jg
sbb
push
in
mov
lahf
and
pop
rcrl
dec
push
mov
or
sub
cmpsb
push
add
xchg
jne
ret
jp
cli
pop
enter
dec
dec
in
ss
insl
std
push
icebp
aas
ja
push
xor
iret
test
ljmp
sbb
out
test
pop
outsl
in
xchg
dec
in
cmp
cmp
mov
divb
mov
mov
andl
call
aad
lahf
mov
stc
mov
mov
test
imul
pop
jecxz
fdivrs
outsb
push
adc
insl
pop
sbb
fidivl
hlt
pop
and
sbb
mov
fisubrl
into
pushl
pop
push
mov
out
repz
loope
push
sbbl
xor
bound
or
adc
adc
pusha
popa
stos
into
loopne
xchg
pusha
fstpl
int3
xor
and
mov
nop
inc
in
lods
pop
jle
loope
pop
lahf
jbe
fwait
out
loopne
outsb
je
dec
movsb
jne
push
movsl
xchg
std
mov
nop
rorl
mov
sub
stos
shlb
fidivs
sbb
push
mov
and
mov
push
in
sub
xchg
je
jp
jg
out
call
mov
or
repnz
mov
mov
imul
in
cld
lea
aad
lahf
daa
adc
ljmp
mov
inc
and
jmp
push
or
add
repnz
fwait
mov
xlat
clc
jmp
push
insb
mov
leave
imul
subb
pop
xor
dec
sti
lcall
mov
add
movsb
out
xchg
movsl
sub
les
js
imul
add
cmc
inc
out
cltd
subl
jnp
mov
out
cltd
push
cltd
sbb
mov
or
int3
cli
js
jbe
out
mov
xlat
ja
imul
fwait
rorl
or
mov
int3
insb
or
je
lods
bnd
cs
into
shll
and
je
pop
je
jecxz
aad
push
ret
mov
add
test
mov
or
jp
imul
js
mov
add
fists
out
mov
lods
mov
xchg
in
mov
xor
ljmp
dec
out
or
lcall
cmp
faddl
pop
pop
cltd
jle
pop
push
ficoms
add
xchg
jp
xchg
cmp
xchg
adc
sbb
sbb
mov
outsb
sub
pusha
xchg
mov
inc
sbb
xchg
add
das
mov
scas
cmpsb
jmp
adc
sti
rorb
jecxz
add
jg
add
ds
and
repz
dec
rol
test
jle
aas
mov
mov
decb
fistpll
sub
lcall
adc
repz
push
adcl
mov
lock
lahf
mov
sub
or
sarl
xor
ret
test
ficomps
xor
push
cli
sbb
pop
outsl
imul
pusha
in
add
mov
imul
jbe
enter
lret
mov
fstl
data16
mov
and
add
and
fcoms
add
aam
scas
mov
outsl
jbe
mov
cmp
aam
into
scas
pop
mov
xor
test
mov
sbb
pop
ret
hlt
outsl
ret
shl
je
jbe
push
adc
push
insb
or
and
leave
add
push
and
sbb
jne
or
lods
js
ss
pop
in
ljmp
cmp
das
mov
push
xor
push
push
xor
and
adc
and
inc
jmp
cltd
fcompl
xor
sub
push
push
scas
xchg
movsb
dec
push
push
in
rep
and
mov
cs
rol
push
mov
je
or
aam
xchg
lcall
pop
push
mov
aas
popf
dec
xchg
ret
push
sbb
in
fnstcw
push
mov
jbe
fndisi(8087
lea
popl
pushf
ja
sbb
xor
imul
in
jb
shlb
jecxz
sub
fsubl
dec
stos
sub
out
sub
into
icebp
and
xchg
cltd
mov
int
repz
outsb
test
adc
pop
inc
sbb
dec
sbb
push
cld
lea
mov
and
insb
jg
xor
std
ljmp
xchg
in
rcll
addb
xchg
lahf
push
sbb
jecxz
in
pop
and
push
lcall
mov
dec
js
pusha
mov
xor
jae
jno
std
sub
jp
add
add
xchg
mov
xchg
sbb
sti
ficoms
inc
and
dec
mov
scas
les
fisubl
rol
in
ss
inc
test
xchg
loope
sbb
pop
insb
add
dec
cmp
cmp
and
test
leave
dec
inc
fs
pop
jbe
add
or
jge
pushf
arpl
jecxz
nop
push
xchg
sbb
inc
mov
sbb
xor
mov
lds
adc
pusha
fstp
js
and
orb
insl
mov
arpl
adc
adc
out
mov
cli
fidivs
aas
dec
aam
cmp
fnsave
sub
mov
mov
and
xor
out
addr16
jmp
pop
ret
outsb
je
sub
dec
stos
cmc
es
outsl
add
cmpsl
add
xor
mov
pop
sub
xchg
mov
movsl
dec
clc
pop
pop
je
fisubrs
pushf
jle
pop
and
or
mov
mov
fisubl
xor
inc
shl
pop
cmp
adc
popa
sbb
in
fs
fadd
adc
or
shrl
push
mov
aam
sarb
add
aaa
daa
mov
cltd
mov
and
cmpsb
pop
outsb
pop
mov
pop
incl
add
gs
in
and
outsb
sti
push
cmp
or
in
jp
pop
pop
pop
stc
fwait
mov
hlt
inc
inc
lods
pop
in
jno
or
mov
and
sti
push
into
push
out
fcmovne
insb
aam
adc
xchg
and
ja
adc
js
push
mov
jbe
pushf
sahf
add
gs
ss
xchg
xchg
cmp
shl
test
or
mov
loopne
mov
pop
out
jbe
cmpsb
or
mov
test
divb
js
jmp
ficoms
pop
decb
in
xor
outsb
cli
imul
shl
add
fiaddl
test
mov
pop
pushf
enter
divl
pop
repz
loopne
jne
mov
aam
mov
lods
cmp
mov
insb
aad
rolb
out
xor
xor
pop
lahf
out
xchg
loope
lock
faddp
xchg
insl
nop
sub
aad
into
jge
jbe
mov
mov
sahf
scas
jg
cld
add
loope
pop
sarb
dec
dec
test
push
mov
lods
and
jl
jg
cmp
leave
add
mov
xlat
sbb
jns
xor
lock
mov
cli
cmpb
imul
imul
jne
lock
lahf
inc
mov
mov
jb
dec
ss
pop
arpl
mov
pop
aad
and
pop
sbb
cmp
loopne
in
in
stos
and
js
and
adc
jle
inc
into
and
out
shlb
in
dec
push
addb
mov
and
lods
imul
out
mov
sub
pushf
add
daa
fcompl
jg
lds
ds
repnz
or
push
add
jne
mov
mov
xor
adc
mov
jp
out
pop
push
cltd
or
ret
xor
loope
push
pushl
out
mov
jecxz
insl
push
cmp
lds
xorl
add
insl
jle
movsl
sbb
mov
stos
pop
mov
arpl
mov
test
push
cmp
or
fsubrl
xor
sbb
cmp
push
ror
mov
xchg
dec
lcall
test
xchg
jp
adc
and
push
cmp
clc
mov
sub
mov
insb
outsl
adc
cwtl
mov
xchg
out
jns
dec
adc
jne
int3
jae
test
add
or
pop
mov
andb
scas
lret
ja
out
int3
imul
adc
jp
fcoml
int3
push
jno
or
or
leave
push
push
pop
cli
shl
outsl
sbb
sbb
popf
push
dec
and
ficoms
in
mov
bound
movsb
pusha
div
jle
or
iret
add
hlt
fisttpl
jno
pop
jg
rcrb
sti
jmp
push
rcr
out
fs
scas
fistps
or
cmpsb
ja
ret
push
xlat
mov
js
ss
or
rolb
jns
lock
push
jge
and
pop
jecxz
insl
xchg
jecxz
mov
cmp
es
jbe
stc
aas
mov
aas
sbb
outsl
xor
add
jg
pushf
repnz
mov
ja
and
data16
sub
outsb
aaa
and
add
sti
adc
and
lods
sub
pusha
jae
adc
push
sar
movsl
in
pushl
mov
dec
mov
jno
cmp
test
mov
sub
and
out
fcomip
in
lret
enter
addb
enter
jp
movsl
adc
adc
clc
inc
roll
addr16
movsb
xor
xchg
dec
mov
ljmp
dec
mov
fsubl
movsb
xor
or
add
in
retw
rcr
push
mov
push
mov
cmc
xchg
lods
mov
mov
je
xor
mov
sbb
and
add
push
repz
fwait
mov
xchg
jl
mov
dec
push
xlat
cs
inc
jmp
lret
add
xchg
adc
loop
ret
popf
cwtl
mov
mov
jp
cmpsl
rep
push
cmpsl
dec
add
dec
loop
sbb
clc
jno
jae
jo
les
iret
rcrb
repnz
stos
mov
outsb
jne
nop
push
lods
jo
sbb
push
ss
test
adc
add
cwtl
xor
add
jle
xchg
loop
and
cmpxchg
rclb
xchg
sbbl
std
aas
scas
popf
mov
cli
or
or
sbb
pop
add
in
fcmovnbe
add
cmp
inc
and
insb
scas
inc
push
sar
xchg
mov
rcll
push
or
xchg
clc
les
add
jne
loopne
sbb
cmp
push
cmp
jbe
repnz
fbld
mov
test
subb
or
scas
shr
aad
xor
adc
jl
mov
inc
and
pop
inc
ret
scas
out
fsubrp
add
stc
xor
adc
jo
insb
pop
pop
daa
sarl
mov
jb
dec
cmp
jecxz
push
add
test
popa
lcall
sub
xadd
loope
and
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
test
jbe
aad
sbb
addl
add
fmuls
add
divb
push
mov
jno
jae
xchg
cwtl
movsb
cs
in
lahf
shlb
pop
xor
dec
outsl
mov
aad
sbb
stc
hlt
inc
nop
sub
inc
push
xchg
pop
add
idivb
push
cmp
test
xor
fistps
mov
pop
nop
sbb
or
xchg
sbb
push
mov
xor
insl
and
sarb
mov
in
loope
fs
ljmp
repz
cwtl
fnstenv
movsl
add
jne
jmp
ja
lods
repnz
or
inc
stos
inc
xor
cmp
in
pushf
fdivl
sbb
sub
sub
repz
scas
insl
jge
push
or
xchg
clc
dec
and
mov
mov
mov
add
js
dec
loopne
adc
int
pop
sub
inc
movaps
dec
and
xchg
test
cmp
mov
lock
sbb
mov
and
inc
xchg
lock
inc
and
imul
push
in
cs
add
or
jecxz
ret
pop
mov
lods
scas
push
push
jecxz
in
sbb
push
mov
test
loope
test
dec
jl
sar
mov
jns
mov
xrelease
jb
popf
jns
out
pop
repz
mov
jle
subl
dec
and
jecxz
mov
imul
popf
push
or
dec
ja
jae
pop
mov
dec
adc
inc
adc
mov
lds
repz
jmp
adc
and
out
loop
pushf
add
jg
mov
jnp
add
mov
fbld
rep
fcomps
popf
stos
and
and
clc
js
mov
movsb
repnz
test
pop
mull
jae
jp
orl
loopne
sti
jne
push
inc
cmp
insl
sub
mov
mov
std
mov
out
fldcw
mov
leave
jge
aas
sub
push
scas
mov
and
in
imul
xchg
rclb
aad
add
fsubl
cli
stos
aam
fistl
jno
fdivrl
adc
dec
pop
rolb
in
std
sub
add
jb
sub
add
dec
fcmovb
rolb
imul
subl
adc
and
out
pushf
inc
sub
sub
xor
jno
mov
bound
mov
add
pop
cmp
or
pop
dec
or
insb
out
pop
pushf
in
bound
loope
std
jmp
pop
sub
pop
push
lahf
aam
int
sahf
fcompl
icebp
adcb
jl
pop
in
jbe
lahf
sub
sbb
ljmp
sub
pop
xor
add
and
push
push
xor
cli
and
stos
cltd
xor
ds
movsl
adcl
mov
jecxz
sub
ljmp
icebp
sbb
inc
dec
pop
mov
jg
cmp
lea
push
sub
lock
sahf
inc
jmp
int
cmp
xchg
xor
and
mov
test
xor
cmp
jp
xor
push
and
sbb
pop
out
jnp
inc
sub
and
cltd
icebp
push
int
adc
mov
aad
aam
xchg
sub
cld
imul
xchg
arpl
aam
rcr
cmp
inc
xchg
xchg
jecxz
mov
jo
lcall
jne
jl
mov
push
pop
sub
mov
adc
out
inc
rcrl
and
ja
fbld
pop
stos
jle
in
adc
insb
outsb
aam
addr16
iret
push
sti
fnsave
adc
sbb
push
and
ja
aas
sbb
or
mov
xorb
fidivl
mov
cld
mov
cmp
sahf
fistl
jnp
dec
inc
clts
xor
sbb
dec
jbe
push
sub
cld
push
lods
sbb
mov
pop
pop
ds
pop
aad
mov
pop
pop
cmp
lock
into
addr16
js
out
jbe
jno
fwait
sub
jp
push
pop
sub
daa
fnstenv
repz
or
mov
mov
push
jg
xchg
rcrl
sbb
push
dec
mov
inc
push
mov
push
fldenv
sub
iret
lret
add
call
aaa
ljmp
mov
cld
mov
pop
inc
mov
imul
ss
inc
mov
xlat
shlb
add
loope
adc
mov
rcl
dec
or
hlt
pop
arpl
out
mov
cmp
negl
enter
push
imul
pushf
mov
enter
inc
stos
scas
shlb
div
sub
mov
sub
loop
mov
and
push
std
data16
pop
nop
or
xchg
movsl
push
mov
lock
inc
adc
ds
stc
jmp
pop
add
mov
ret
inc
test
add
mov
dec
push
out
mov
ret
adc
sbb
dec
es
xor
inc
cmpsb
les
mov
stos
add
mov
xchg
jge
int
xchg
adc
xlat
inc
sbb
xor
int3
in
mov
adc
js
movsb
leave
out
mov
jno
pusha
mov
xlat
out
jne
out
aad
paddsw
sub
into
mov
and
imul
lods
fnstsw
inc
sub
pusha
scas
in
shrl
imull
mov
mov
pop
cmpsl
mov
inc
jb
inc
test
aad
xor
push
push
cmp
lock
cmpsb
mov
lcall
jl
mov
xor
mov
icebp
sub
sub
jmp
jb
lds
test
lret
inc
rcll
add
xor
rorl
mov
test
out
jb
sub
push
push
fcomps
loope
insb
mov
xchg
dec
ds
insb
jne
fidivl
adc
leave
adc
push
add
jae
les
std
mov
adc
sahf
push
jnp
xchg
add
lret
push
cli
cmpb
out
jg
lret
sub
add
jb
ds
add
cmp
dec
sub
xchg
mov
mov
mov
sub
sub
mov
fistpl
xor
dec
pop
fmulp
faddl
shll
xor
jns
cld
and
pop
les
jle
loope
mov
push
sahf
loope
push
testb
inc
push
andb
decl
mov
jnp
mov
popa
xchg
pop
mov
pop
jae
pop
push
lock
mov
mov
add
cwtl
xor
pop
add
addr16
push
inc
cmp
repz
push
and
push
popf
loope
add
mov
xchg
jl
mov
pop
push
scas
inc
js
mov
or
cmpsb
in
pop
xchg
es
fistpl
xor
lret
add
fildll
lds
pop
pop
addr16
mov
sbb
push
es
xchg
lock
ds
mov
pop
aam
mov
cmpsb
out
sub
fwait
pop
sub
add
inc
add
mov
std
fldenv
sub
and
repz
push
inc
cmpsl
test
pop
dec
jecxz,pn
outsl
add
pop
js
push
mov
xor
divb
xor
mov
sbb
xlat
fbld
gs
inc
hlt
cmp
ss
cmp
inc
movsb
mov
adc
ret
sbb
loope
sbb
mov
movsl
sub
loopne
adc
sub
rolb
adc
ja
and
push
mov
hlt
das
pop
call
cmp
cltd
xchg
cmp
in
sti
sbb
push
iret
mov
dec
in
or
cmp
xchg
fucomi
or
pop
testl
sahf
pop
and
mov
shrl
dec
rorb
inc
test
mov
leave
loopne
adc
repnz
das
movsb
xchg
repnz
test
and
roll
cmp
mov
xchg
jp
or
js
mov
fnstsw
add
push
cld
das
and
jmp
inc
dec
mov
pop
in
pop
pop
cwtl
dec
imul
or
jbe
xchg
aam
jb
jae
push
mov
in
cmp
imul
ret
or
ror
idivb
popf
inc
test
adc
or
jmp
ret
mov
imul
mov
sbb
add
int3
or
xchg
cmpl
add
jge
jmp
aad
repz
cltd
movsl
push
mov
pop
enter
outsb
add
jns
imul
scas
and
cmp
xchg
xor
jo
cli
push
out
imul
out
xor
push
xchg
jge
and
test
imul
mov
inc
mov
in
mov
xchg
frstor
popf
sbb
mov
test
stc
ljmp
aas
in
inc
jo
arpl
mov
inc
push
xor
imul
lahf
lret
xor
arpl
mov
dec
in
sbb
rolb
jbe
push
scas
insl
and
ss
gs
mov
lods
fwait
mov
int
movsl
aad
add
arpl
inc
xchg
shl
cltd
add
mov
popf
lods
fcoms
aad
movsb
and
xchg
repnz
inc
pop
aam
bound
adc
jp
dec
xlat
or
xorl
adc
jae
xchg
jb
dec
fwait
jno
sahf
mov
stc
imul
jns
mov
repnz
sbb
out
pop
mov
xor
test
push
pop
inc
sub
mov
and
add
inc
mov
sarb
repnz
jmp
dec
pop
int3
sub
decl
sbb
push
cmp
inc
aad
inc
popf
jle
cmp
inc
bound
and
pushf
cmp
jl
cmc
inc
mov
notl
mov
dec
jno
pop
mov
mov
jl
sub
mov
mov
lds
xchg
jbe
sbb
mov
fs
dec
inc
pop
jns
cmpsl
lock
sbb
jg
decl
mov
or
sbb
lods
and
fwait
lret
test
out
mov
in
dec
icebp
cli
xlat
or
ljmp
mov
aas
add
call
dec
mov
mov
in
push
sub
xchg
cmp
pop
loope
leave
and
arpl
xchg
out
sub
or
fildl
sarb
and
xlat
loop
or
out
sub
inc
xor
mov
mov
scas
mov
mov
sbb
push
xchg
mov
and
fsubl
sbb
mov
push
mov
test
push
dec
inc
sahf
xchg
out
mov
hlt
or
or
xchg
push
xor
dec
mov
idivl
addr16
mov
sub
xor
cld
fadds
stos
in
xchg
cmp
fildl
out
mov
pushf
popf
in
out
scas
xor
cmp
in
inc
push
cmp
and
out
cltd
pop
rcrl
xor
mov
loope
inc
jp
lock
mov
inc
pop
xchg
ret
adc
lods
xchg
sbb
xor
jmp
nop
xor
pop
and
pop
adc
ret
fbld
xorb
ret
mov
cmp
jno
jmp
push
cmpsb
mov
sarb
mov
and
testl
push
fbstp
jne
push
inc
out
lods
sub
leave
imul
imul
inc
inc
mov
mov
aad
cli
push
mov
and
dec
jnp
test
cmp
stos
hlt
mov
mov
push
mov
xor
ret
or
aaa
xchg
mov
push
negl
jb
bound
insl
pop
or
inc
call
xor
divl
lock
xor
push
or
sbb
stos
cmp
lret
push
lock
rol
std
or
andb
pop
mov
fsubrl
cltd
jbe
repnz
in
xor
mov
lds
dec
mov
movsb
or
js
or
out
mov
dec
mov
daa
or
inc
rorb
ljmp
jbe
loopne
and
mov
jb
outsb
or
mov
mov
push
xchg
mov
mov
mov
iret
sbb
stos
dec
jp
push
sbb
or
xchg
bound
mov
enter
pop
and
dec
roll
mov
cmp
mov
xchg
scas
cmpsl
clc
test
add
mov
cmp
or
add
cld
fnstsw
cmp
iret
pushf
cmpl
sbb
xchg
leave
rol
sbb
fcomps
jae
scas
add
inc
inc
fmull
mov
fcomps
aaa
movb
movsl
rsm
mov
ss
enter
fadds
stc
mov
and
inc
into
cmp
add
in
repnz
fisubl
aas
cmp
push
pop
lds
movsl
in
cmpsl
fs
stos
cmp
push
jne
jo
sbb
arpl
inc
push
xor
ss
mov
lods
addl
lret
sbb
xchg
mov
jnp
mov
lds
xchg
sbb
push
lds
mull
mov
or
mov
xchg
dec
jp
in
xchg
xor
fs
stos
pop
xor
iret
movsb
xor
cli
fchs
nop
das
and
outsb
xchg
xor
mov
xlat
mov
ds
ja
jne
xor
mov
and
mov
int
mov
shll
and
stos
sahf
sub
sub
mov
leave
cmp
pop
cmp
mov
push
xchg
lods
pop
sub
xchg
ret
add
in
aas
push
xor
pop
das
jo
roll
test
mov
jbe
out
jmp
je
xchg
or
into
fcmovu
xor
iret
cs
sbb
cmp
sahf
bound
push
mov
xchg
xlat
aam
mov
fildll
or
push
sub
pop
out
cmpsl
lcall
shlb
imul
aas
pop
and
sub
insl
adc
pop
pop
je
cmp
cmc
mov
pop
pop
loope
xor
adc
mov
fdivrs
sbb
outsl
jle
inc
iret
rclb
and
push
es
stos
push
pop
pop
jae
dec
pop
lods
hlt
adc
icebp
test
jae
dec
mov
popa
leave
sbb
dec
xchg
das
dec
fcoml
mov
mov
mov
inc
xchg
mov
rorb
inc
jbe
mov
ds
push
push
fisubl
jmp
mov
out
sbb
push
sbb
mov
dec
inc
push
out
pop
shll
mov
das
sub
inc
adc
addl
addr16
and
push
add
jne
inc
daa
icebp
dec
sbb
push
pop
adc
stc
jne
push
mov
cld
imul
jno
jg
jae
in
cmpb
cmp
orl
dec
push
std
gs
sbb
shrl
xchg
and
mov
shl
mov
jg
xor
dec
mov
in
addr16
sti
loope
xchg
insb
imul
mov
mov
jg
mov
cmp
jns
popfw
jb
mov
loopne
pop
pop
and
mov
sbb
jne
fucom
dec
add
clc
out
jg
xor
sbb
inc
test
pusha
rcrb
jmp
add
xchg
scas
mov
cld
xor
inc
lcall
jne
rcll
xchg
sbb
mov
addr16
inc
jae
cltd
xlat
aaa
push
scas
pop
movsl
or
or
adc
mov
in
push
add
out
fisttpl
jnp
pop
scas
mov
mov
aaa
dec
adc
mov
push
in
sti
xor
in
mov
pusha
add
and
stc
xor
daa
mov
pop
xor
scas
mov
lds
sub
push
push
dec
push
imul
fs
push
mov
fsts
xchg
and
sub
leave
cmp
mov
push
int3
push
xchg
daa
jb
xchg
jbe
xchg
mov
pop
pushf
mov
pusha
std
push
push
or
divl
cmc
push
leave
mov
pop
mov
mov
daa
jp
arpl
and
insb
lret
push
cmp
mov
jp
ja
sub
daa
jl
ficoms
dec
mov
insl
sbb
scas
test
out
ljmp
js
xor
in
xchg
xchg
or
mov
pop
inc
add
test
call
cmp
mov
repnz
mov
cmc
mov
fldcw
icebp
push
mov
std
orl
adc
add
lea
mov
sbb
movsb
fsubp
or
int
jbe
pop
fimuls
mov
push
xor
dec
mov
scas
xchg
cmp
dec
mov
scas
out
out
inc
mov
notb
xchg
cmc
stc
incl
mov
int
jmp
jg
sarb
mov
cmc
pop
frstor
mov
popa
pop
test
dec
sbb
mov
icebp
lcall
or
sbb
lcall
add
pop
stos
in
sub
mov
shll
mov
pushl
idiv
mov
pop
and
jbe
pop
popa
jae
sub
mov
stos
in
mov
cmp
les
adc
fs
inc
jne
subl
enter
sub
push
outsb
stos
push
les
xor
or
xchg
dec
inc
test
jae
adc
repnz
push
lret
fsts
lods
cs
mov
fistl
push
jl
jbe
sub
jmp
sbb
push
xchg
movsb
xor
push
outsb
pop
cli
adc
clc
in
jp
and
xchg
jge
cmpsl
ss
test
repz
lods
adc
imul
ret
jp
fdivl
aad
dec
imul
xor
add
mov
sbb
outsb
movsl
mov
pop
sbb
jecxz
mov
dec
push
rclb
popf
stos
test
cld
daa
mov
xchg
mov
std
mov
jnp
or
add
inc
adc
test
call
mov
call
xchg
cltd
or
cli
std
mov
aam
loope
cmc
enter
aaa
cmp
iret
xor
ret
push
sub
mov
fildll
xor
sarl
outsb
sub
lods
lods
loope
stos
pop
mov
icebp
jb
mov
push
or
sub
out
pop
xor
mov
sub
jae
stos
clc
cmpsb
dec
lods
fwait
cmp
cmc
movsl
mov
test
jne
mov
mov
or
or
aas
or
fldenv
mov
fsubrp
pop
push
call
adc
es
xchg
cmp
inc
push
addr16
das
insb
pusha
mov
mov
jg
sahf
pop
testb
roll
dec
xor
fsincos
idiv
icebp
out
insl
adc
or
mull
dec
nop
les
or
xchg
xchg
or
loope
call
adcb
arpl
pop
fisttpll
sbb
sahf
dec
push
xchg
push
cmp
xchg
es
test
jne
and
xchg
pop
js
inc
adc
dec
inc
sub
adc
les
andb
rolb
repnz
andl
add
iret
adc
adc
push
adcl
sub
stos
or
xor
leave
popf
mov
fcomip
fstpl
push
pop
and
sti
jnp
das
and
mov
in
pushf
jg
jno
je
cmp
or
lcall
movsb
sub
mov
xchg
pop
hlt
fdivl
add
mov
push
test
jp
pop
and
xchg
and
cmpsl
das
push
pop
adc
divb
xchg
inc
pop
cs
jl
in
sbb
daa
push
and
dec
movsb
jae
add
cmp
pusha
mov
and
bound
ds
cmc
in
aas
shll
jbe
push
mov
repnz
ret
in
ret
ss
or
mov
pop
ficoml
les
xor
sbb
pop
cmpb
mov
and
les
inc
test
lock
push
or
sbb
push
movsb
sub
and
jnp
int3
lcall
inc
repz
jbe
daa
ja
cwtl
adc
jbe
jg
and
ljmp
mov
inc
int3
ds
lea
dec
lds
aam
sti
aad
push
dec
xor
push
and
xchg
mov
mov
cmp
stos
ret
mov
mov
lock
mov
sub
aad
leave
fs
add
and
cmp
repnz
cs
int
jge
mov
lds
xlat
ds
test
sub
mov
nop
add
psrld
bound
popa
loope
xorb
push
and
pop
inc
sar
pop
lret
cmp
je
jle
mov
mov
jb
cmp
or
out
dec
je
sbb
dec
adc
sub
adc
fcompl
clc
test
repnz
xor
sbb
and
fidivrl
cmp
inc
mov
lret
dec
jge
std
in
aad
jmp
sub
lcall
pop
pusha
aam
cmc
pop
cli
ss
push
pop
push
jle
jl
cmp
push
or
jp
rcrl
xchg
pop
in
aas
cs
push
cli
or
fisubrs
pop
add
dec
ja
mov
iret
jle
push
call
mov
push
mov
shlb
mov
lret
xor
push
xor
jge
cld
or
fwait
dec
mov
mov
sub
ja
adc
cmpsb
out
cs
xor
jbe
mov
mov
xchg
enter
sub
aas
mov
inc
addr16
and
dec
mov
add
int3
xchg
pop
sub
sbb
sub
shr
jno
mov
jb
jb
xor
test
ds
mov
cmpsl
and
pop
fwait
test
mov
das
das
lahf
add
sub
cmp
push
mov
xchg
test
dec
outsb
mov
fidivl
xchg
or
xchg
push
pop
push
pushf
mov
popf
xor
cmp
lods
outsl
cmp
sub
ror
pop
inc
test
gs
push
stc
rcrb
sbb
mov
mov
aas
mov
or
lods
in
mov
roll
add
addl
or
jae
lret
xchg
mov
adc
xchg
in
cmpsb
ds
icebp
jno
mov
sub
push
add
clc
mov
int
popa
cmp
sbb
fistl
sbbb
aaa
mov
cmp
sbb
push
clc
mov
clc
xor
fists
ja
dec
cmp
xchg
lcall
imul
sbb
shlb
jg
insl
outsl
scas
sti
loope
sub
xchg
mov
cmpsb
mov
dec
sub
inc
call
sbbb
mov
xlat
mov
push
jne
test
lock
xor
shll
xchg
pushl
pop
add
adc
daa
cmp
mov
adc
movsb
push
ret
adc
cmpsl
adc
lcall
mov
shll
jno
movsb
fsubl
pop
lods
jle
dec
xor
scas
and
jb
dec
insb
fucomip
mov
int3
cmp
sbb
lods
lcall
adc
sub
ss
mov
loopne
mov
dec
negb
sub
inc
push
dec
in
mov
and
dec
add
sub
ja
mov
push
arpl
and
jne
mov
lcall
in
pushf
iret
rorl
fwait
dec
sub
shlb
fadds
stos
into
or
ss
sub
nop
movsl
push
cmpsb
pop
in
sub
stos
dec
std
jg
sarb
fs
adcl
xchg
fwait
and
sbb
addr16
in
xchg
xchg
lea
xchg
push
xchg
push
lea
jg
js
outsb
mov
jp
loop
out
jmp
mov
sub
pop
lock
jbe
aad
addr16
outsb
inc
lahf
outsl
fdivs
test
das
lahf
ss
inc
pop
decl
cmp
jecxz
mov
pop
mov
iret
sbb
loop
lcall
xchg
in
push
test
insl
add
push
out
cld
xchg
mov
add
fucomip
scas
mov
mov
jp
int3
loope
shl
int
dec
in
out
dec
jo
cmp
xor
mov
pop
inc
nop/reserved
rorl
add
lret
stos
dec
stos
sub
ljmp
lret
loopne
mov
stos
les
into
stc
cmp
add
mov
push
pop
je
push
jae
int
and
dec
jle
rorl
sub
jecxz
sbb
lcall
mov
push
testb
std
mov
jmp
call
aaa
aas
xchg
lcall
aad
into
mov
jae
cmp
arpl
jecxz
std
int
pop
jp
fdivrs
mov
and
mov
fadds
cmp
xor
xchg
xor
mov
mov
aam
xchg
or
mov
in
xlat
xor
les
dec
icebp
push
scas
add
dec
enter
push
and
cltd
jae
lahf
adc
scas
jecxz
mov
mov
sub
add
mov
cld
xorl
jne
ret
mov
mov
mov
aad
call
scas
mov
cld
lea
xchg
pop
popf
daa
insb
dec
mov
idiv
es
dec
xor
stc
or
sub
or
sub
movsb
test
or
mov
ljmp
xor
adcb
pop
stc
fldenv
adc
es
cwtl
mov
xlat
jge
adc
add
lods
aas
add
loop
sub
shll
in
hlt
push
mov
push
loop
xchg
jae
rolb
xchg
stos
jp
add
repz
mov
out
jle
out
pop
repz
repnz
mov
mov
js
sbb
add
xchg
or
jle
out
cwtl
sti
and
mov
leave
cwtl
movsl
adc
inc
into
inc
jae
mov
sbb
and
scas
movsl
lods
rorb
sub
inc
lahf
mov
and
mov
xchg
mov
js
sub
int
and
cmp
js
and
mov
test
loopne
lea
inc
je
sbb
movsb
mov
insl
out
fwait
mov
cltd
push
or
cld
xor
idivb
pop
shl
cmp
mov
pop
clc
outsl
je
out
lcall
mov
jae
push
jmp
jmp
dec
and
fwait
repz
es
enter
je
icebp
repnz
in
lds
adc
dec
pop
mov
jmp
push
test
mov
enter
iret
add
mov
ljmp
xchg
int
ja
xor
push
nop
xchg
inc
mov
lods
js
mov
icebp
xor
arpl
inc
or
in
orb
mov
scas
data16
mov
div
inc
repnz
xor
mov
insl
int3
mov
mov
xchg
or
bound
push
mov
imul
nop
sbb
in
popa
outsl
fadd
int
popf
ror
in
sbb
ljmp
sbb
or
lret
jae
ret
out
cmp
lods
xor
mov
cmp
stos
dec
inc
xchg
sbb
jmp
js
dec
aaa
pop
aas
sub
sti
and
pusha
xor
adc
loop
cld
mov
inc
je
ss
stos
data16
out
sub
cmp
aas
shr
int3
and
dec
shr
inc
dec
loop
enter
jl
mov
mov
cli
shl
sarb
gs
jnp
cltd
jl
pop
xor
mov
loopne
mov
push
push
filds
sbb
mov
inc
xchg
and
flds
lods
mov
rcl
imull
add
pop
clc
xchg
xchg
mov
xor
gs
out
arpl
ljmp
dec
cmpsb
mov
cmpl
cs
mov
ljmp
cmp
out
or
cmpsl
int
sbb
mov
or
and
out
fnstcw
cmp
mov
cmp
cli
and
inc
cmp
cmpsl
sub
out
fisttps
inc
std
adc
out
pop
roll
or
out
movb
mov
outsl
stos
mov
out
mov
sub
jnp
xor
popw
scas
addl
inc
lods
out
outsl
cld
mov
into
mov
into
xchg
shll
push
cmp
icebp
or
adc
xchg
lds
push
jge
inc
lea
sbb
mov
rorb
ret
dec
dec
adc
aas
dec
xchg
aam
pop
pop
out
int3
jnp
add
push
mov
xchg
ror
cltd
xchg
adc
cmpsb
jp
data16
addr16
xor
mov
dec
pop
mov
push
pusha
jne
inc
sub
add
orb
pushf
popf
mov
cmpsb
pusha
inc
inc
jmp
cmp
jmp
pop
sarl
and
xor
jg
mov
hlt
push
mov
pop
daa
jo
insl
xchg
sti
out
sbb
movups
jp
les
inc
push
add
lret
data16
push
inc
jp
add
xor
sar
pop
dec
ljmp
sub
push
jecxz
xchg
jle
js
divl
sbbl
push
ficoml
enter
imul
jb
pusha
sarb
or
rorb
shl
lea
js
fbstp
mov
insl
add
es
fcmovnbe
out
pop
mov
cltd
jae
xor
inc
inc
jl
pop
data16
add
pop
mov
xlat
add
fidivrs
xchg
lods
fsts
sbb
stos
sbb
inc
cmp
cmp
and
rolb
xor
mov
int
imul
sbbb
pusha
dec
push
lret
mov
ds
clc
xor
cmp
aas
push
sbb
das
pop
aaa
rcrl
imul
in
pop
xchg
jecxz,pn
pop
xchg
push
aad
popf
pusha
in
and
sub
int3
jg
pop
jmp
ret
clc
cmp
mov
int3
push
pop
data16
mov
aad
xchg
mov
xchg
sbb
addb
inc
mov
push
add
add
fcomps
dec
lcall
xor
clc
sahf
lret
pushf
cmp
sbb
jle
fs
dec
gs
enter
dec
xor
xchg
mov
dec
jbe
mov
mov
push
cltd
aas
adc
insb
sbb
cmp
sub
push
push
add
mov
aas
mov
mov
outsl
ja
int3
test
cmp
push
mov
orl
test
jg
popf
adc
push
mov
dec
dec
dec
jb
mov
add
je
xor
insl
jbe
mov
js
or
cmp
cmc
pop
inc
or
rorl
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
enter
outsl
mov
addl
addl
out
cmp
adc
and
mov
clc
fisttps
fiadds
mov
xchg
sub
sub
in
cmc
loop
rol
cmp
push
imull
mov
fisttpll
xchg
pushf
ss
dec
test
xchg
sti
addr16
inc
pop
clc
push
inc
shufps
adc
pop
sbb
sub
sub
pushf
jp
xchg
ss
je
sbb
stos
mov
movl
rorb
xchg
xchg
int3
sahf
ja
test
push
test
inc
xor
mov
pop
xchg
xor
sbb
jmp
sbb
push
lods
add
imul
dec
insl
sub
add
insl
adc
push
fdivrs
pushaw
sub
das
call
xchg
ret
sbb
xor
cmpsl
lahf
mov
add
inc
bound
cmp
stc
bound
mov
outsl
add
push
lea
es
sub
push
lds
push
ret
cmp
push
pop
fcoml
sahf
xchg
adc
sbb
or
or
adc
aam
out
mov
out
dec
cmp
xchg
stos
sti
cld
xor
loopne
daa
sbb
or
lret
in
push
repz
repz
sub
pushf
xor
mov
push
shlb
adc
jp
add
loope
adc
push
aaa
sbb
mov
jnp
hlt
cmp
dec
stos
xchg
mov
sub
shll
jb
jae
mov
fcoml
outsl
dec
push
imul
pushf
fstps
rol
xor
fwait
push
rolb
scas
stos
adc
bound
cmp
mov
in
clc
daa
jecxz
jle
fimuls
add
push
sbb
shl
xor
pop
popf
cmp
mov
stc
stos
adc
and
or
sti
cmpsl
frstor
cltd
or
jo
cmc
outsl
addr16
dec
rcrl
add
inc
dec
xchg
into
mov
or
mov
adc
test
lock
mov
es
clc
xchg
cmp
shrb
jmp
fadds
jae
icebp
mov
or
inc
in
imul
and
les
push
fistpll
mov
cltd
mov
bt
xchg
pop
jge
push
orb
adc
mov
ljmp
jae
cmpsl
cmp
dec
test
or
xrelease
cmp
popf
lret
cmp
rep
pop
cld
in
ljmp
cmp
adc
and
mov
pop
xchg
mov
cmp
inc
rcll
iret
out
xchg
iret
mov
fnsave
fwait
pop
xchg
popf
fidivrl
lock
scas
cli
movsb
push
jb
rorl
jb
jbe
sub
dec
in
out
ds
and
jg
aaa
add
adc
fsubs
pusha
dec
mov
in
and
pusha
outsl
jmp
mov
dec
lock
fsubl
jmp
cmc
mov
rorb
outsl
sub
mov
imul
pop
ficoml
push
or
inc
mov
adc
and
dec
mov
stos
inc
das
sbb
mov
cwtl
dec
or
aad
cmp
push
dec
push
mov
pop
jg
cld
pop
loope
addb
adc
jle
ss
inc
iret
je
mov
gs
lret
push
mov
mov
ja
mov
cli
out
push
out
dec
cli
xor
mov
jecxz
mov
loop
stc
out
add
fdivr
jle
fisubs
cmp
stos
fs
dec
sbbl
xchg
xchg
out
jb
jnp
sbb
xchg
xchg
das
lods
sar
mov
add
push
mov
sub
jbe
out
mov
jp
or
movsb
jl
dec
cmp
test
loope
dec
xchg
das
fists
jl
fdivl
pop
mov
jl
mov
out
lret
fwait
sub
mov
push
adc
jecxz
in
outsb
xchg
rol
jb
mov
out
ja
outsb
aad
fsubrp
pop
int
out
movsb
jne
xchg
arpl
rclb
and
push
add
hlt
and
cld
jmp
test
jecxz
cltd
das
repnz
movsl
sub
or
fcmovbe
push
insl
mov
or
inc
testb
scas
push
andl
xchg
jmp
stos
ds
subl
fisttps
sub
jg
imul
jo
lret
mov
cmpsb
jmp
push
pop
rcrb
mov
jp
pop
imul
xor
addr16
jbe
repnz
mov
out
ja
cmp
fwait
xlat
and
gs
mov
pop
dec
pushf
add
stos
je
dec
and
mov
sub
sub
scas
jg
imul
cmpsb
cmp
push
push
lea
mov
roll
push
fcoml
inc
jbe
repnz
movsb
nop
cmpsb
arpl
out
ficompl
mov
out
imul
jecxz
aam
test
jle
int3
push
xchg
pop
lahf
jle
xorl
adc
push
mov
jb
xchg
inc
insb
mov
push
sti
lock
popa
dec
pop
bound
rcrl
mov
sti
ret
inc
popl
push
adc
shll
mov
mov
xchg
pop
jle
rorb
sbb
jp
fistl
nop
mov
dec
div
fisttps
pop
pusha
cmpb
jp
mov
cmpl
enter
jmp
stos
add
fcom
lods
add
rcl
push
loopne
sub
imul
cmp
dec
imul
mov
imul
jne
rcl
xlat
mov
fnsave
jns
mov
aam
clc
daa
push
push
sbb
and
sbb
pop
add
adc
xchg
mov
mov
mov
in
subl
sub
vfrczss
jle
dec
or
test
mov
ljmp
sahf
lea
lahf
cltd
jle
inc
mov
mov
push
push
cmp
dec
aas
sarl
insl
pop
inc
xchg
lcall
sbb
bound
mov
pop
jl
lahf
and
scas
loop
shr
mov
int3
frstor
dec
inc
fwait
push
xlat
ficoml
lock
cmpsl
push
push
mov
inc
cmpl
insb
and
jmp
into
mov
and
ja
fwait
bound
xlat
mov
sbb
fsub
in
movsl
dec
cli
or
mov
loopne
ljmp
out
aam
roll
in
xchg
and
and
pop
fstl
dec
repnz
or
dec
sbb
pop
or
sahf
xor
movsl
rolb
aam
pusha
fwait
sub
pop
test
subb
mov
push
loope
xor
push
daa
jns
push
imul
or
in
gs
mov
mov
lods
sub
dec
add
pop
push
or
lahf
mov
cld
pop
jb
leave
mov
jb
das
dec
dec
or
imul
arpl
aas
pop
and
lock
cmp
lock
insb
or
sbbb
or
jge
and
mov
subb
mov
lds
push
cmp
subl
push
pusha
adc
mov
and
enter
outsb
sbb
push
or
xor
jp
aaa
jno
sub
mov
int3
push
sbb
sub
mov
push
std
dec
cmc
adc
cmp
push
nop
lods
dec
and
int3
aaa
icebp
bound
stos
xchg
sti
inc
xor
loope
out
arpl
jecxz
sub
and
gs
iret
xor
ljmp
pop
icebp
cli
dec
and
mov
and
dec
lahf
jmp
cltd
fwait
inc
scas
fstpl
and
mov
jl
push
mov
dec
gs
or
imul
add
push
jbe
add
xchg
mov
jo
add
shl
xchg
pop
icebp
testl
adc
sahf
orl
test
test
or
rcl
fwait
addl
inc
fmull
cmc
fstps
sbb
bound
or
rclb
push
sahf
in
and
mov
popl
rorb
leave
jp
push
std
pop
lahf
fcomi
in
add
bound
adc
adcl
insl
iret
and
push
xchg
and
push
sbb
jmpw
mov
in
adc
xchg
cli
and
mov
cmpsl
xchg
cmc
push
jp
cwtl
add
mov
cmp
cmp
andl
ljmp
popf
aas
inc
lret
rolb
cmp
je
xchg
mov
dec
xchg
mov
mov
lock
push
push
mov
adc
pop
dec
inc
into
cli
and
test
mov
mov
fsubs
sub
aaa
leave
fchs
out
push
cld
add
jmp
pop
cmp
xor
les
adc
pop
imul
pushf
rorb
sub
xchg
sbb
add
and
dec
roll
mov
push
jg
inc
or
and
fdiv
add
inc
xchg
dec
jl
rorl
mulb
mov
sbb
jecxz
mov
sbbl
data16
dec
jp
jbe
sub
jge
in
xor
cmpsl
push
adc
pop
fwait
jge
xchg
xchg
sbb
lret
hlt
rolb
lahf
xchg
inc
xchg
outsl
sub
push
cmp
hlt
sahf
push
or
jae
mov
xchg
or
imul
xlat
pop
fs
iret
fwait
aaa
mov
arpl
jns
mov
icebp
ret
gs
push
aas
push
cli
dec
push
aam
int
loop
dec
jle
inc
fcoml
push
stos
push
push
mov
pop
jne
mov
fisubl
icebp
aad
xor
mov
inc
addr16
test
in
dec
dec
xor
jo
sub
lcall
dec
fwait
mov
pusha
js
dec
jp
add
push
jne
subb
inc
jne
cmp
pushf
lret
je
cmpb
dec
xchg
dec
imul
jo
cltd
mov
cli
stc
jbe
lret
cmc
cmp
add
and
xor
and
mov
shll
push
repz
mov
arpl
xchg
stc
pop
test
ret
in
sub
cld
sti
aam
jnp
pop
enter
push
test
add
cmp
sbb
imul
fidivrl
and
pop
xor
and
dec
and
push
mov
ljmp
cmp
lds
pop
pop
cmp
pop
xor
ret
push
mov
out
out
out
testl
jnp
lock
movsl
inc
cli
dec
pop
dec
mov
in
sbb
xor
mov
add
fxrstor
inc
cmpsl
inc
ss
in
pushf
pusha
movsl
mov
push
pop
push
mov
push
sub
xor
add
icebp
push
and
cmp
in
fnstenv
pop
ficompl
xchg
jmp
or
cmp
mov
cltd
pop
sbb
pushf
mov
dec
icebp
push
cmp
daa
or
sub
out
and
jno
adc
dec
mov
xor
out
test
addr16
out
fucom
inc
xor
mov
clc
jge
push
loopne,pt
cmp
jecxz
iret
sub
adc
mov
fsubr
dec
repnz
ljmp
nop
mov
cmp
sub
in
xlat
dec
and
sbb
and
adc
ja
loope
cmpsl
push
je
imul
jl
or
lea
mov
push
mov
or
mov
dec
ret
ret
and
ljmp
push
lods
pop
cmp
dec
aam
andb
fnstsw
daa
jmp
ds
mov
popa
ljmp
mov
mov
push
xor
mov
mov
imul
jmp
dec
and
pop
pop
lret
mov
ja
sbb
in
popf
loope
icebp
imul
shr
fistpll
les
imul
loopne
inc
sub
pop
test
xchg
movl
aaa
dec
adc
int
pop
pusha
mov
inc
jne
mov
push
sub
int3
cli
inc
push
or
pop
test
movsb
xor
imul
fidivl
clc
cmp
dec
lds
cld
sbb
scas
loope
and
test
mov
insl
movsb
sbb
into
hlt
sub
mov
test
mov
les
jle
jo
xor
adc
aam
test
shll
jnp
mov
xchg
mov
testb
add
inc
pop
movsb
insl
or
push
mov
shlb
je
fstl
leave
or
iret
and
dec
xor
insb
rorl
sub
push
ret
mov
mov
jmp
dec
lret
mov
mov
gs
jo
jnp
push
je
lods
ret
add
sub
sbb
mov
fmuls
inc
rolb
ret
push
cmp
jnp
ret
in
out
jb
fs
ss
or
loopne
sub
push
or
mov
bound
fcomp
dec
movsl
lods
inc
cmc
add
dec
sub
mov
aas
daa
mov
in
mov
ret
cltd
clc
mov
dec
rcrl
adc
sub
stos
stos
ljmp
enter
fidivrl
mov
push
cli
movsb
cmp
cmpsb
dec
shl
imul
xor
int
inc
dec
fdivrp
fisttps
shl
add
iret
movsl
nop
lods
pop
loopne
pop
push
sub
mov
ss
push
push
mov
adcl
gs
test
xchg
mov
out
cmp
loope
stos
leave
xchg
or
icebp
add
inc
sbb
xchg
dec
ss
dec
mov
loopne
jbe
hlt
jle
stos
cmp
sbb
sahf
push
inc
dec
outsb
push
orl
push
pop
push
in
xor
insl
in
mov
int
add
jmp
fbld
popa
push
and
repnz
mov
fsts
insb
insb
mov
stc
out
inc
xlat
scas
or
xchg
negb
add
pop
mov
dec
dec
pop
inc
xchg
into
cmpsb
imull
inc
hlt
sbb
insl
xchg
mov
mov
in
cmpsl
cmp
push
pop
scas
call
dec
enter
adc
pop
pop
leave
ljmp
outsl
jne
pop
mov
movsb
jae
bound
sbb
fldcw
popa
fistps
idivb
xor
negb
call
xor
adc
push
dec
bound
push
xchg
cs
out
dec
ljmp
jbe
test
mov
mov
hlt
cwtl
jns
lods
pop
pop
loop
mov
test
mov
sbb
shll
cltd
test
addl
jp
mov
rol
cmp
mov
mov
out
inc
rcrb
cli
xor
test
ja
hlt
insl
out
cmp
and
mov
pop
push
cld
push
xor
adc
roll
dec
pusha
jbe
and
rcrl
in
push
add
cmp
scas
in
out
loope
add
add
adc
lods
jb
or
data16
out
outsl
scas
in
cmp
pop
push
ret
lods
jbe
loope
pop
and
and
cmpsb
or
lea
cmp
idiv
subl
std
push
lods
push
fsubs
es
and
mov
int
lock
out
add
aaa
push
cmpsl
ljmp
daa
jno
push
xchg
stc
fsubrs
gs
cmpsb
xor
xor
pop
aad
fcmovb
xorl
inc
out
imul
rclb
std
push
dec
mov
inc
loope
loop
int3
out
stc
inc
dec
jb
sarl
mov
stos
cmpsb
mov
call
and
aas
dec
out
mov
sbb
pop
mov
adc
mov
jmp
mov
mov
subb
cmpsb
ds
int
iret
rcr
xchg
and
mov
aad
rcrb
testl
xchg
dec
push
xor
sub
dec
fs
adc
sahf
dec
cli
xchg
or
cmpsb
jno
mov
add
mov
cmc
loope
inc
inc
xchg
mov
jns
add
leave
sbb
and
adc
imul
add
add
and
pop
fcmove
sub
push
dec
imul
cli
out
subb
pop
jns
dec
pop
jecxz
or
push
fs
mov
js
push
sahf
gs
lahf
clc
pop
rorl
je
sbb
lahf
mov
cld
out
cmpl
std
mov
es
xor
pusha
cmp
sub
inc
pop
lret
and
dec
or
pop
and
inc
repz
pop
pop
lods
mov
cltd
iret
or
test
mov
push
or
dec
addr16
xrelease
mov
into
and
push
in
testl
xchg
or
mov
push
pop
sbb
loop,pn
xor
sbb
dec
inc
pop
sbb
scas
addr16
adc
xchg
or
mov
jo
dec
ljmp
xchg
out
mov
adc
or
loopne,pn
insb
fidivrl
shrl
sbb
fmul
fiaddl
inc
xchg
psllq
out
inc
aad
shrb
out
cli
adc
push
adc
xor
or
test
les
jmp
jg
in
inc
xchg
sbb
lret
xchg
mov
cld
call
outsl
mov
pusha
cwtl
adc
mov
repnz
mov
in
push
or
push
sub
iret
jb
jecxz
and
xchg
cmp
push
or
arpl
xchg
icebp
andl
xchg
cmp
rorl
shrb
sub
in
push
mov
sahf
lret
fnstenv
jmp
and
inc
test
xor
in
or
ljmp
fbstp
cld
ret
fbld
inc
in
je
xor
and
mov
loopne
cmpsl
pop
repz
das
fldt
sbb
into
int
push
push
push
sub
repz
jl
rcrl
in
cmp
dec
iret
mov
test
push
fiaddl
adc
cmp
or
ret
push
xor
shl
std
rcrb
push
push
lahf
fs
pop
int
rolb
cmpsb
cmp
xchg
or
inc
mov
xlat
push
fildl
and
cmc
inc
or
loope
imul
fcmove
scas
mov
andl
mov
out
adc
shll
push
int
notl
jle
lods
jl
inc
loopne
ljmp
movsb
cmpsl
dec
sbb
popf
adc
das
setb
sub
mov
rcrb
sbb
sbb
push
ds
rolb
into
adc
cwtl
xchg
xchg
nop
gs
jmp
movsl
mov
adc
mov
repz
in
mov
inc
xor
add
scas
mov
and
adc
sub
or
clc
in
mov
enter
xchg
pop
xchg
sahf
xor
inc
imul
test
in
or
scas
add
pop
and
or
xchg
sub
mov
dec
in
cmp
addr16
dec
sub
or
xor
mov
out
lock
xchg
cmpsl
movsl
sbb
cmpsb
idiv
push
inc
callw
mov
andl
adc
jmp
lret
rorb
or
mov
add
arpl
jns
sbb
jl
cmc
mov
inc
add
popf
out
test
shll
lods
mov
into
into
bound
test
sub
jns
adc
loopne
xchg
mov
inc
cmp
xlat
and
mov
loop
pop
pop
inc
js
fld
imul
push
lds
xor
xorl
sbb
cmpsl
mov
xor
sub
insb
sub
stc
sub
decb
or
pop
xchg
gs
idiv
xchg
inc
insl
xlat
mov
fildll
push
mov
jns
ss
pusha
lods
fisubrl
lcall
add
lret
lret
and
jmp
xchg
jge
push
mov
pop
lock
dec
add
xor
rcll
lret
negb
dec
add
mov
dec
sbbl
inc
repz
aaa
jecxz
mov
push
sub
out
out
lret
jl
cmp
jns,pt
xchg
inc
faddl
fs
mov
jno
out
adc
scas
push
lret
adc
pop
andl
pop
inc
fmuls
popa
cld
adc
jae
or
xchg
cld
scas
ret
aaa
aad
loopne
adc
call
lret
adc
and
in
or
scas
imul
mov
shl
jmp
fistps
out
adc
xor
sub
cmp
fmull
xchg
jp
fisttps
in
shlb
loopne
cmp
xor
push
mul
and
sbb
dec
dec
notb
cwtl
push
loope
lret
jb
mov
dec
lret
lea
mov
dec
iret
outsl
sbb
mov
and
ffree
pusha
add
push
jmp
jmp
jmp
pop
xchg
pushf
shrd
enter
cld
xlat
addr16
sbb
add
pop
xor
jle
imul
dec
jmp
cmp
aam
mov
fcmove
inc
push
push
push
or
jl
outsl
push
sub
insl
mov
push
cli
mov
aaa
jge
mov
or
cli
inc
adc
scas
xchg
mov
ds
in
push
movb
ja
je
pop
int
sub
push
ficomps
sbb
pop
fs
movsb
xchg
xchg
in
push
cmp
mov
push
xor
pop
mov
adc
dec
mov
leave
imul
fisubl
mov
push
sub
lds
fs
jne
jb
hlt
test
and
add
dec
fidivrs
push
mov
push
and
out
pop
fadds
mov
xor
jle
das
or
imull
pop
jp
sbb
mov
dec
fadds
lret
pop
test
cli
or
cmp
mov
xchg
cmc
rorl
hlt
jecxz
mov
pop
js
scas
sbb
cmp
in
ret
arpl
lds
pop
xor
and
xchg
adc
fwait
repz
arpl
pop
mov
xor
lahf
test
mov
xor
cmp
xchg
or
sti
call
iret
lret
imul
cli
int3
jmp
push
iret
loop
out
das
push
jo
out
test
cwtl
in
fidivs
cmp
outsl
sub
dec
jno
mov
and
cmp
mov
and
inc
mov
jl
xor
mov
and
int
cmp
pop
or
pushf
out
adc
jb
testl
mov
bt
cmp
pop
adc
repz
adc
push
xorb
roll
dec
out
xor
gs
mov
sti
in
imul
add
pop
loope
mov
inc
jle
sbb
push
cli
lock
js
imulb
mov
adc
sahf
sbb
pusha
add
xor
xchg
add
subl
arpl
and
pop
cmp
mov
jnp
sub
jge
into
pop
xor
or
adc
pop
int
outsl
jmp
sbb
movsl
push
insb
pop
mov
vcvttpd2dq
push
cwtl
xchg
sub
clc
int3
ja
adc
cmp
ret
cmp
add
test
xchg
pop
mov
sub
mov
mov
fsubrl
pop
cmp
dec
es
xorb
cmp
pop
addr16
dec
or
mov
ljmp
mov
add
out
xchg
iret
gs
lods
sub
outsl
cwtl
loope
aam
lret
in
sub
cli
lret
push
lret
shl
into
cmp
jnp
out
in
mov
mov
stc
jnp,pn
dec
fs
jne
testb
enter
ja
xchg
mov
pop
sub
xchg
mov
sbb
dec
pop
push
add
aaa
pop
repnz
cmp
ja
cmpsb
sub
into
pop
sbb
pop
and
sub
add
add
cmp
lods
xor
andb
hlt
pop
cmp
hlt
nop
repnz
inc
push
test
mov
adc
sti
lods
push
mov
inc
and
jb
add
ljmp
shll
pop
jmp
dec
mov
or
xorb
dec
je
pop
rcrl
push
das
adc
xchg
push
or
dec
push
ficoms
push
outsb
outsl
int3
xchg
mov
imul
jmp
mov
loop
gs
insl
out
inc
popf
rcrb
movsl
jg
clc
adc
lret
sub
jne
jns
jmp
pop
mov
jg
add
push
les
jle
push
mov
pop
scas
lods
pop
cmovne
js
and
in
lahf
inc
test
xchg
mov
daa
loop
xchg
push
mov
out
cmpsl
aad
insb
fstps
lcall
repz
add
fwait
or
lret
lods
dec
in
xor
arpl
sub
pushf
add
inc
push
fsubp
jl
jo
int
xchg
dec
pusha
and
divl
mov
hlt
call
icebp
adc
insb
push
fisttpll
or
inc
lret
cmpb
rcll
xchg
ret
mov
aaa
out
je
mov
je
es
mov
sub
scas
mov
mov
scas
mov
rcll
xchg
cmpsb
jb
dec
mov
out
mov
in
fiaddl
jg
mov
imul
inc
imul
push
adc
xchg
mov
mul
std
mov
aad
outsb
je
adc
fwait
pop
cmp
cmp
or
pop
fdivrs
pop
loopne
shlb
loopne
in
dec
adc
outsl
js
insl
xor
repz
pusha
lcall
mov
sub
lcall
pop
mov
jae
fldt
pop
int
xchg
fs
outsl
push
xor
xchg
addl
addr16
mov
ret
mov
fwait
pop
mov
adcl
lock
ret
or
jle
scas
rcrb
std
rorb
pop
mov
test
cs
ror
leave
pop
test
xchg
jp
sahf
adc
mov
dec
scas
mov
fnstenv
xchg
subl
or
lcall
fcoms
pop
xor
inc
inc
inc
in
add
or
call
cmc
movsl
and
pop
inc
ret
cmp
nop
pop
jp
push
push
jecxz
push
push
and
nop
xchg
iret
test
jl
insb
pop
sahf
fcmovb
mov
sub
and
adc
or
jmp
lret
lahf
std
in
inc
movsl
fidivrs
mov
aaa
fs
jge
mov
imul
es
imul
pusha
scas
rcl
mov
push
cmp
enter
mov
stos
cwtl
xchg
dec
fdivl
std
and
xchg
lar
jmp
mov
sub
lret
dec
ja
cltd
cmp
jge
xor
imul
js
xor
aaa
imul
movsb
cmp
pop
jne
bound
dec
add
and
or
pop
cmp
xor
xchg
rcrl
rcrl
xchg
cwtl
jmp
lret
add
and
pop
mov
push
sbb
popf
in
fs
sub
mov
push
push
out
clc
or
packsswb
popf
mov
pop
lods
lods
js
or
lds
scas
lock
jo
cmp
push
jp
gs
xchg
mov
stc
or
aam
xchg
pop
pushf
repnz
mov
jmp
rolb
pop
call
clc
insl
fsubl
jns
xor
es
in
push
imulb
loop
inc
mov
push
cld
dec
roll
lods
push
ljmp
and
jno
dec
add
cmp
arpl
pop
mov
inc
in
pop
loope
std
xchg
in
fisttpll
lret
dec
scas
jns
inc
jo
lret
dec
in
repnz
test
inc
jae
push
dec
sub
cmpl
mov
and
push
sbb
imul
enter
jg
in
movb
popl
mov
loopne
or
cltd
push
fsubrs
add
jo
inc
add
pop
cmp
pop
cmpb
sub
nop
cli
add
lret
sbb
imul
call
pusha
xor
and
nop
gs
cmp
jb
ret
ss
push
mov
xchg
faddl
pop
lcall
xchg
ds
xchg
cmpsl
mov
add
mov
push
inc
cmp
pop
cli
repz
stc
nop
mov
mov
dec
jg
daa
loope
and
sbb
lcall
and
sahf
mov
rcll
out
xchg
dec
lcall
ret
mov
ss
cld
fnsave
mov
xor
dec
sbb
push
loopne
out
mov
jbe
or
lods
dec
fisttps
pop
sbb
mov
popa
xor
xchg
lea
lcall
and
xchg
adc
xlat
sarl
push
cwtl
leave
push
addb
mov
or
jl
or
adc
lcall
sbb
xchg
adc
jne
stos
subl
cs
shll
andl
outsb
addr16
in
pushf
stc
or
out
cmp
mov
cmp
push
pop
push
jbe
jg
pop
aaa
or
ds
xor
jl
das
lcall
imul
mov
cmp
sub
inc
mov
cmp
es
std
incl
jo
inc
inc
mov
rorb
push
imul
mov
xor
mov
scas
xchg
mov
cmp
aam
jno
push
add
rcr
sbb
cmp
scas
test
dec
mov
inc
mov
cli
cmp
and
incb
sarl
sbb
inc
inc
fucomp
je
add
imul
push
jecxz
mov
jp
lahf
mov
lea
xchg
pop
testl
xor
pop
or
jecxz
adc
mov
ret
or
fadds
push
lcall
mov
lods
sbb
mov
ret
sbb
cwtl
lock
int3
cmp
pop
and
mov
cmp
out
movsl
subb
xlat
fld
pop
out
jg
xchg
int
pop
and
and
push
xchg
insb
mov
ret
ret
neg
xchg
xor
xor
test
imul
xchg
sub
outsl
stos
add
xchg
adc
sti
out
outsb
loopne
lret
sub
out
rorb
add
and
test
or
out
and
push
cmp
pop
test
dec
jecxz
cmpsb
enter
add
data16
fnstsw
sbb
popf
push
push
mov
aam
stos
xchg
ss
insl
push
adc
movsbl
push
movb
push
mov
ss
repz
push
push
data16
inc
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
rolb
out
inc
cwtl
fisubrs
test
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
