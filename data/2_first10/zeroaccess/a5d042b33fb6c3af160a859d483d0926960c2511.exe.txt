push
mov
sub
mov
mov
cmpl
mov
movl
movl
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
push
push
push
call
add
xor
or
adc
mov
adc
movzbl
adc
sbb
orl
xorl
xorl
mov
sub
jmp
mov
cltd
jg
lcall
mov
cwtl
mov
inc
adc
ficoml
arpl
ret
cmc
fcmovbe
bound
loope
pop
outsl
call
ret
popf
adcb
aaa
ds
mov
adc
fwait
lret
imul
jb
mov
popa
sti
out
aas
imul
das
sub
ret
mov
inc
scas
and
popf
push
push
addr16
xchg
cmp
cwtl
fisttps
jp
or
push
call
add
das
movsb
out
pop
sub
ds
addl
popf
mov
sbb
pop
adc
xchg
or
pusha
cmpb
out
test
lahf
jle
mov
mov
addr16
xchg
cmc
shll
shr
add
jp
pop
je
ret
sub
mov
add
sbb
loope,pn
dec
icebp
push
xchg
mov
inc
and
sub
sbb
into
adcl
cmp
loopne
repz
sbb
cs
inc
mov
jg
mov
mov
adc
sub
inc
inc
adc
call
repnz
jle
dec
mov
sub
cmc
outsl
pop
dec
mov
movsl
inc
pusha
adc
mov
negb
adc
addr16
mull
pop
dec
jge
rcll
and
in
sar
stos
push
stos
adc
decb
mov
loop
ret
pop
cmpsl
and
cmc
scas
xchg
out
sahf
sbb
push
mov
sbb
fiadds
pop
ret
outsl
dec
dec
icebp
fs
dec
ret
mov
add
push
popa
test
dec
aas
sahf
les
jnp
add
add
jecxz
inc
out
lahf
push
sbb
in
pop
push
in
cmpsb
fildl
mov
adc
enter
sub
mov
leave
xchg
scas
xchg
aas
mov
and
add
xchg
mov
out
in
imul
sub
pop
add
xor
pop
adc
jbe
cmp
ret
and
sbb
push
dec
or
arpl
mov
sub
xor
dec
mov
inc
sbb
mov
xor
imul
xor
repnz
imul
outsl
sbb
int3
sahf
sub
mov
clc
mov
dec
vphaddbq
adc
jge
mov
sbb
movzbl
adc
mov
orl
cmpl
mov
mov
jmp
mov
cmpl
jle
pushl
push
call
sub
add
inc
xor
add
adc
sbb
sbb
adc
orl
mov
sbb
mov
or
mov
movzbl
sbb
mov
sub
mov
sbb
mov
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
push
push
push
push
call
xor
or
adc
xor
and
xor
adc
xor
cmpl
mov
movl
not
movl
jmp
movzwl
cmpl
je
pushl
call
movzwl
add
mov
and
xor
adc
inc
adcl
mov
sub
orl
orl
add
lea
xor
add
add
mov
mov
adc
mov
mov
add
xor
add
mov
sub
add
mov
andl
jmp
das
jp
mov
mov
xchg
mov
mov
mov
mov
jnp
add
push
jmp
leave
xor
push
dec
faddp
jb
repz
data16
cmp
jns
hlt
pushf
jbe
ret
dec
dec
or
fs
pop
clc
mov
sub
push
mov
test
aaa
sti
sti
pop
cmp
mov
xor
fadd
bound
mov
call
jl
ret
ljmp
scas
push
jp
mov
movsb
sub
cmpsb
sub
xchg
push
pusha
insb
sbb
out
fs
cmc
jno
movsb
shlb
jl
xchg
sbb
test
mov
insl
test
movsl
pop
ror
lcall
repz
pop
cmp
xlat
aad
je
xor
push
lods
mov
push
xor
xor
inc
push
dec
jmp
addr16
sub
in
mov
dec
add
sbb
sbb
push
mov
scas
sbb
ljmp
xor
mov
sbb
xor
and
daa
fsubp
lret
mov
or
cmp
sarb
cmp
push
loope
push
cmp
clc
lret
pushf
shll
xor
rolb
adc
incb
in
bound
loop
stos
and
sti
fstp
pop
hlt
mov
add
subb
and
lahf
and
les
cmp
push
xchg
js
fildl
movsl
test
cld
add
ja
shll
cmp
mov
xor
hlt
jl
lock
xchg
mov
mov
sbb
add
push
stc
jne
mov
jge
stos
js
les
lods
push
mov
call
xchg
mov
sub
inc
dec
inc
push
fstpt
pop
mov
sub
cwtl
cmpsl
rcrb
xchg
sub
enter
pop
mov
imul
add
mov
add
pop
scas
sub
mov
add
insb
inc
les
pushf
xchg
in
movsb
adc
push
js
mov
pop
inc
movsl
or
mov
inc
push
lds
ffreep
sahf
sub
mov
cld
add
scas
lock
cli
aaa
inc
pop
cltd
jnp
sub
pop
rolb
fbld
cmc
xchg
mov
stc
loop
mov
dec
push
dec
fistpl
inc
sbb
add
mov
mov
mov
jmp
mov
cmpl
jb
push
pushl
call
and
adc
xor
xor
xor
xorl
or
xor
mov
shrd
add
shr
jmp
xchg
cmp
push
mov
cwtl
arpl
mov
mov
cwtl
pop
popa
sub
push
imul
or
cmc
sub
into
in
sahf
call
mov
adc
sbb
in
imul
fstps
mov
enter
hlt
ss
dec
jp
fbld
ja
aam
jle
dec
ret
mov
pop
les
mov
aad
xchg
adc
mov
jnp
xlat
sub
mov
mov
sbb
sarb
mov
lods
add
rcrl
aam
mov
push
ja
lods
or
outsl
test
pusha
fdiv
pusha
mov
imul
sbb
and
sub
aad
fistpll
jp
aam
push
nop
aad
lock
inc
xchg
scas
in
fsubrl
leave
push
and
movsl
pop
frstor
sahf
sub
add
leave
shll
pop
pop
adc
test
push
xchg
mov
ljmp
out
ss
mov
jge
mov
add
js
push
add
js
sarl
lahf
pop
mov
inc
test
loope
and
gs
xor
outsb
mulb
lods
popa
jbe
xor
mov
or
sub
sub
mov
lock
xchg
push
jnp
imul
fimull
cwtl
clc
push
stc
mov
xor
sbb
scas
scas
aaa
inc
fcomip
stc
dec
sub
cmp
lods
adc
arpl
inc
mov
in
scas
push
mull
testl
repz
adc
mov
aam
and
sub
cmp
popa
mov
imul
mov
jg
xor
das
and
dec
sarl
mov
sub
daa
sub
pop
mov
mov
hlt
mov
insl
icebp
cmp
inc
sub
fstpl
icebp
xor
cwtl
xor
cmp
xchg
mov
xor
xor
addr16
jge
fisttpl
pop
movsb
enter
cmp
cmp
jecxz
shl
xchg
push
cmp
mov
sub
clc
std
int
xchg
in
popf
ret
leave
jg
inc
pushf
xor
lds
jno
mov
push
cmp
mov
aam
add
loop
ja
ds
or
adc
mov
xor
orl
xor
subl
or
sub
mov
and
movl
movl
xor
or
sbb
movl
movl
decl
movl
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
je
push
call
xorl
movl
orl
subl
andl
mov
sbb
mov
movl
cmpl
movl
mov
movl
jmp
mov
cmpl
jg
push
push
push
pushl
call
sbb
subl
or
addl
sbb
adc
xorl
movl
cmpl
mov
movl
movl
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
subl
adc
orl
addl
subl
or
movl
subl
movl
movl
movl
sub
movl
or
movl
cmpl
notl
movl
jmp
movzwl
mov
cmpl
jbe
pushl
pushl
pushl
pushl
call
orl
addl
orl
sbb
addl
adcl
movl
dec
movl
sbb
movl
xor
add
mov
and
movl
sub
movl
movl
cmpl
mov
movl
movl
jmp
movl
mov
cmpl
jne
pushl
push
call
xorl
sbbl
and
orl
orl
add
andl
movl
movl
cmpl
movl
movl
jmp
movl
cmpl
jbe
pushl
pushl
push
push
push
call
addl
adc
sbbl
adcl
adcl
movl
cmpl
mov
movl
movl
jmp
movl
cmpl
ja
pushl
pushl
push
call
add
add
sbbl
andl
andl
and
andl
xorl
movzbl
xor
mov
subl
jmp
inc
jb
mov
pushf
pop
add
mov
mov
mov
sbb
ret
test
dec
hlt
mov
sbb
cmp
test
fidivs
ljmp
sbb
loop
xchg
rolb
xchg
out
dec
leave
aam
test
and
rclb
popf
xrelease
push
fnstcw
cmp
rorb
xor
or
lahf
stos
cmpsb
mov
divb
sahf
jl
stos
movsb
or
or
cli
lret
mov
inc
adc
jmp
imul
sbb
in
sbb
xor
push
out
jl
cmpsb
dec
inc
fcoms
mov
pop
adc
cmp
push
cs
and
jmp
fsubrl
fcoml
cmp
jno
js
or
sahf
daa
test
mov
sahf
adc
fwait
inc
adc
bound
sub
mov
jne
mov
xchg
aad
xchg
dec
pop
neg
dec
pop
cmp
test
pop
fldl
aas
jle
ljmp
mov
pop
ljmp
xchg
jge
mov
or
jle
stos
in
mov
outsb
push
or
pop
fucomi
inc
sbb
cs
ficoms
fdivl
jle
loop
shll
mov
push
jns
mov
sbb
insl
mov
cmp
cld
leave
add
adc
popa
xchg
aas
cmp
scas
inc
cmp
sbb
add
ret
push
data16
rcrl
out
and
pop
xchg
cs
imul
or
push
push
push
push
out
cltd
add
mov
out
mov
mov
cmpb
fwait
pop
mov
sub
xchg
shrl
insl
movsb
mov
xor
arpl
std
clc
push
clc
es
xor
jnp
mov
cmp
pop
es
sub
jb
cwtl
in
or
hlt
in
xchg
dec
dec
ljmp
dec
lcall
dec
jae
mov
test
mov
loope
sub
jne
xchg
mov
in
dec
jno
dec
dec
sbb
shll
je
out
je
adc
fstp
movsl
insl
mov
test
sbb
push
cmp
stos
xor
rcr
lcall
push
dec
mov
push
push
push
push
call
xor
mov
mov
cmpl
mov
mov
movl
jmp
mov
cmpl
jl
pushl
call
mov
sbb
xorl
adc
sbb
or
sbb
add
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
push
call
xor
add
adcl
or
adc
subl
and
xor
mov
mov
sub
mov
mov
sub
and
mov
lea
xor
or
mov
sbb
mov
mov
mov
sub
mov
adcl
or
and
movl
mov
addl
or
xorl
xor
cmp
movl
jne
mov
adc
mov
mov
mov
sub
imul
jmp
add
sub
inc
and
sbb
mov
mov
movsl
icebp
mov
mov
rcrb
leave
or
mov
in
jp
js
push
shl
movsl
lret
mov
jmp
js
aaa
in
cli
out
int
inc
dec
std
dec
adc
mov
or
add
pushf
clc
xor
enter
jle
test
adc
jbe
mov
and
mov
test
cs
add
mov
xor
sub
je
or
pop
cmp
ficompl
mov
lods
out
dec
jp
add
adc
fldenv
es
rolb
cmpsb
ja
ret
inc
lods
inc
loopne
add
popf
pop
loop
clc
movsb
mov
rcrl
inc
push
popa
shrl
dec
pop
ljmp
scas
inc
sub
xor
mov
push
mov
dec
jle
roll
sti
mov
loop
push
mov
call
pop
mov
cmp
mov
cmpsb
out
pop
ret
pop
xor
mov
xchg
xor
movsb
dec
mov
inc
int3
jp
inc
call
add
add
popa
shrb
add
dec
gs
pusha
in
sbb
shl
fwait
repnz
jae
fs
push
ss
lret
fisubs
ljmp
mov
loope
scas
lods
cmp
dec
sub
or
int
or
adc
out
icebp
fcmovbe
push
or
cmp
mov
fcompl
dec
movsl
movsb
dec
push
jle
sbb
inc
jns
adc
xchg
sti
ficoms
movsl
stos
or
push
mov
sbb
mov
jne
out
fldenv
ljmp
and
mov
pop
cs
mov
data16
loope
pop
add
push
pop
jmp
loope
add
sbb
cmc
mov
es
lock
adc
xor
jbe
popa
adc
add
cmp
pop
stos
push
pop
cmpxchg
stc
lds
xchg
push
sub
rcll
and
repnz
fs
xchg
and
and
cmp
aam
push
repnz
xchg
test
mov
bswap
aaa
cmp
mov
xor
xchg
lods
and
out
call
push
insb
test
push
add
xchg
sub
fs
and
insl
cwtl
stos
push
push
mov
shrd
addl
shr
andl
mov
andl
mov
subl
shl
xor
xor
or
movl
mov
movl
cmp
jne
cmpl
mov
mov
mov
mov
jmp
movl
movzbl
cmpl
jl
push
call
sub
notl
sbb
sbb
orl
andl
mov
mov
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
call
mov
add
or
add
or
subl
mov
adc
mov
addl
shrd
andl
mov
cmpl
mov
movl
jmp
movl
cmpl
jg
push
pushl
push
call
adc
sbbl
sub
sub
not
and
mov
add
dec
mov
xor
sbbl
shr
xor
mov
movl
xor
or
shl
movzwl
xor
mov
sub
mov
xor
mov
adc
mov
add
mov
add
mov
add
mov
or
mov
neg
shrd
shr
xor
or
mov
add
mov
andl
mov
add
xor
shl
xor
adcl
or
mov
mov
addl
shrd
shr
movzwl
sub
mov
mov
sbb
mov
orl
mov
xorl
xor
xor
sbbl
or
notl
shl
subl
lea
and
mov
notl
mov
movl
shrd
shr
mov
xor
mov
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
push
push
push
call
sub
add
xor
sub
sub
and
movzbl
or
sbb
xor
mov
xor
xor
mov
andl
xor
or
addl
shl
sbbl
imul
xorl
mov
mov
addl
shrd
mov
xor
mov
subl
xor
shr
sbb
mov
movzwl
or
mov
xor
andl
or
orl
shl
andl
sub
movl
mov
mov
cmp
jmp
sbbl
xchg
popf
xchg
mov
lcall
mov
xchg
adc
or
xlat
add
outsl
push
xchg
xor
icebp
mov
hlt
je
mov
inc
js
dec
pop
loope
subb
xchg
xchg
inc
aas
xchg
jl
add
push
addl
xchg
push
icebp
aad
dec
xchg
dec
push
lea
or
sbb
outsl
jl
ss
outsl
adc
ret
sub
outsl
mov
ljmp
xor
cmp
xchg
dec
mov
popf
lods
cmp
rol
out
leave
xor
cmpsl
fsubs
push
iret
bound
mov
mov
mov
jo
mov
mov
nop
and
mov
les
fadd
gs
fcomip
or
push
sub
dec
xchg
je
setb
adc
fld1
jb
dec
or
sub
xchg
adc
movb
jnp
popa
lret
outsb
cmp
inc
jnp
repnz
cltd
rcrl
popa
scas
or
ds
daa
lock
jb
ret
addl
pop
es
sar
mov
cli
cmc
adc
cmc
loopne
test
add
sbb
insb
sbb
shll
adc
pop
push
adc
pop
mov
loope
xor
int
fcoml
mov
call
daa
lret
adc
or
xor
jne
cmp
xchg
icebp
dec
ss
mov
xchg
push
mov
pop
add
inc
inc
cmp
mov
push
xchg
fs
outsl
in
add
cmp
jmp
inc
pop
cmpsl
lcall
push
les
fwait
add
test
inc
fcmovnbe
scas
mov
ljmp
gs
sub
push
adc
add
les
push
in
add
dec
lcall
jno
inc
aaa
push
aad
cmp
mov
dec
fwait
pop
in
stos
les
adc
repz
fdivs
rcr
je
cmc
add
cld
ds
fisubl
pop
repz
xchg
cmpb
xchg
movsl
xchg
add
int
sti
and
dec
out
es
jne
mulb
dec
or
push
repnz
mov
and
stos
jge
leave
and
repnz
jl
int
out
inc
inc
js
xor
mov
aad
outsl
ljmp
cli
mov
scas
mov
movl
mov
mov
movl
jg
jmp
pop
sbb
outsl
mov
jnp
sbb
fnstsw
mov
mov
adc
sahf
push
mov
xor
cmp
je
add
jno
outsb
cmp
inc
dec
ret
cmp
mov
pop
and
pop
in
inc
add
enter
push
sub
fadd
movsb
mov
and
rorl
repnz
push
cmc
pop
push
imul
aad
lahf
scas
notl
popa
sbbl
mov
sbb
jge
push
push
cld
pop
fnstsw
test
shlb
mov
push
test
mov
fs
lds
mov
ficomps
cmp
or
fistl
imul
xchg
mov
je
jne
push
clc
fildl
or
lahf
pop
sub
dec
dec
insb
lret
pushf
push
mov
popa
xchg
push
cmp
xchg
sbb
insb
xor
jecxz
aad
test
cld
or
in
fnstcw
jmp
jle
loopne
and
or
mov
lds
cmp
ficoms
int3
mov
pop
mov
inc
inc
incb
test
lahf
pavgb
sti
inc
jnp
xor
jg
inc
xchg
imul
mov
cmc
call
sub
mov
xchg
out
cmpsl
mov
sbb
stos
adc
sarl
xchg
mov
xchg
and
jmp
mov
data16
dec
inc
clc
and
ret
in
push
mov
out
out
mov
sub
sub
cmp
lods
aad
popf
mov
push
cli
xlat
sub
inc
mov
jg
push
in
fidivl
hlt
pusha
cwtl
das
push
dec
pop
push
dec
xchg
xor
dec
test
dec
mov
int3
mov
sti
out
out
ret
mov
push
or
inc
pop
adc
idivl
or
jne
jl
add
lods
cmp
mov
jp
outsb
jne
repz
and
ret
cmp
scas
lcall
sbb
mov
mov
cmp
mov
and
or
mov
mov
scas
leave
xor
rcl
mov
jge
fnsave
lahf
ret
loop
pusha
push
jp
in
in
inc
js
xchg
aad
gs
loopne
xchg
lods
shrd
movl
jmp
xorl
mov
sbb
jno
lahf
imul
mov
pusha
adc
and
enter
inc
out
cmp
icebp
test
push
mov
adc
sbb
pop
push
pusha
cli
cmc
mov
repnz
cmp
fistps
imul
inc
mov
xor
sti
les
arpl
stc
loop
mov
or
cld
jbe
push
pushf
addb
pusha
and
imul
inc
leave
sub
sbb
push
mov
scas
inc
mov
push
pop
mov
mov
lret
sub
sub
lret
int
push
add
cltd
cs
lds
pop
gs
aaa
push
movl
cltd
jp
cmpsb
loopne
xchg
test
ficoms
inc
int
cmp
pop
leave
lahf
push
xlat
or
aas
inc
fldl
mov
xchg
pop
pop
sti
cmp
xchg
add
call
dec
xchg
sub
xchg
roll
in
rorl
inc
dec
jp
xchg
dec
inc
cli
or
mov
jg
inc
fcmovnu
xor
mov
add
icebp
mov
or
push
fbstp
adc
inc
add
cmp
sub
loopne
jg
mov
xchg
sub
aas
outsl
push
xchg
jg
pop
test
movsb
adc
xchg
aam
int
rcrl
and
int3
fsts
cmp
or
and
jbe
jo
loopne
ljmp
scas
pop
inc
lods
std
loop
push
sarl
xchg
mov
inc
inc
int3
hlt
test
pop
aam
mov
lcall
in
pop
dec
repz
add
pop
adc
pop
and
or
imul
mov
xchg
mov
mov
js
jmp
cmp
lea
jns
mov
or
scas
sbb
push
call
push
xor
pop
xor
idiv
pop
mov
ror
daa
push
pop
sub
cmpsl
sub
push
jge
test
add
scas
adc
ja
in
adc
out
mov
or
xchg
aam
add
std
das
addl
mov
adc
cmpsl
push
jg
push
sub
and
les
imul
call
or
inc
mov
cwtl
sub
mov
adc
ret
out
sbb
xchg
insl
mov
sbb
add
jge
xorl
shl
notl
xor
andl
or
shr
cmpl
mov
mov
movl
jmp
mov
cmpl
jg
push
call
sub
adcl
mov
adc
movzbl
xor
mov
mov
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jne
pushl
push
push
call
adcl
neg
mov
mov
sbb
sbbl
movl
mov
addl
mov
mov
orl
shrd
shr
mov
mov
xor
mov
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jbe
pushl
pushl
pushl
push
pushl
pushl
call
subl
sbbl
or
adcl
sub
mov
or
mov
addl
mov
adcl
jmp
cmp
in
jmp
mov
movsl
sti
push
addr16
inc
dec
jecxz
mov
rolb
adc
adc
test
adc
dec
sbbl
mov
jl
or
inc
jl
sub
sti
movsb
pop
test
inc
in
sti
add
jmp
stc
fsubrl
lahf
dec
lahf
sub
in
rcrb
and
and
xor
mov
add
xchg
ret
inc
inc
mov
test
rolb
and
pusha
mov
push
add
movsb
push
xlat
or
and
sarb
stos
sbb
ss
ret
xor
test
mov
lahf
popf
fwait
cs
push
inc
test
or
dec
dec
frstor
inc
out
and
xor
sub
lock
adc
fdivp
sbb
out
xor
movsl
clc
data16
mov
adc
stc
movaps
mov
xchg
xchg
push
das
adc
cld
push
add
sbb
leave
daa
cmp
cmp
imul
aaa
sahf
in
push
dec
jae
test
push
filds
ret
xchg
push
sbbl
jp
test
mov
hlt
leave
das
js
push
add
or
jne
jbe
fwait
daa
ja
mull
or
pushf
xchg
sub
faddl
dec
fidivs
and
aam
xorb
mov
and
xor
dec
inc
pushf
out
test
mov
lea
mov
cmp
nop
shl
cmp
hlt
inc
lods
mov
shr
sub
shrl
xchg
push
mov
mov
imul
arpl
loop
jge
loop,pn
call
push
cmp
ds
cld
inc
xor
loopne
xor
fidivrl
mov
add
jae
mov
add
test
sbb
push
sarb
or
pop
jno
sbb
jne
je
call
pop
outsl
mov
mov
jns
arpl
pop
sbb
push
xor
jo
ja
stc
push
flds
push
add
pushf
mov
jl
popf
mov
and
cmp
inc
xor
cmp
mov
cmp
mov
push
jns
in
in
int3
jne
inc
fiadds
and
int3
fildl
mov
push
pusha
pop
repz
or
mov
jge
xor
orl
or
addl
shl
imul
addl
sub
movl
jmp
shrd
mov
mov
addl
xor
shl
xor
sbbl
or
shr
cmpl
mov
movl
movl
jmp
movl
cmpl
je
pushl
push
call
movzwl
add
xor
neg
xor
sbb
or
mov
jmp
push
cltd
cmpsb
icebp
lods
cmc
popf
mov
scas
fnstsw
mov
inc
or
das
enter
lods
out
hlt
push
pop
sbb
xchg
push
leave
scas
cmp
subl
outsl
xchg
adc
inc
call
sub
add
cmp
inc
sbb
sbb
mov
jle
mov
mov
cli
addr16
pop
mov
cs
testl
repnz
push
fwait
loopne
cmpsb
fsubr
pop
add
call
xor
add
add
or
cmc
dec
xor
pushf
pop
dec
pop
adc
sti
jnp
in
and
les
int3
imul
cli
add
insb
aas
xlat
or
pop
mov
and
lods
dec
fdivrp
mov
lods
cmp
pop
sahf
pushf
roll
or
add
dec
push
pop
add
test
sbb
add
xor
clc
imull
aad
mov
stos
das
jnp
cmp
daa
icebp
sahf
mov
repnz
in
mov
pop
push
push
lret
jmp
and
mov
mov
mov
scas
idivb
mov
je
mov
leave
and
insl
das
xorl
call
daa
aam
jnp
fnstenv
add
stos
nop
dec
pop
int3
jo
data16
daa
mov
add
adcb
xor
lahf
sub
mulb
movsl
jae
sbb
dec
clc
shlb
std
ss
test
push
test
bound
inc
rclb
mov
xor
js
int
mov
testl
add
iret
das
lea
jbe
jp
adc
or
sahf
jle
ja
test
sub
imul
mov
and
sub
jno
push
add
jb
loop
lods
sub
jecxz
insl
insb
mov
in
adc
fisttpll
xchg
push
sti
les
outsl
rcl
lods
in
cmp
mov
cmp
aaa
test
push
mov
mov
loop
jl
lods
ret
fsubr
jmp
lret
mov
fwait
cmp
cmpsl
loop
popa
mov
add
jl
mull
dec
adc
ss
pop
cs
inc
dec
inc
and
xchg
and
mov
adc
mov
es
inc
cmpsb
sub
popf
push
je
lock
rclb
repz
add
mov
mov
mov
add
mov
shrd
addl
shr
or
mov
andl
mov
mov
addl
xor
addl
jmp
pop
dec
dec
jo
je
jae
testl
sti
outsb
lock
mov
xor
dec
inc
pop
xor
jb
stos
dec
cmpsl
and
xchg
pop
pop
xor
into
push
push
mov
mov
mov
mov
sub
dec
mov
adc
sbb
add
xlat
dec
cmpsl
roll
inc
jle
mov
mov
cwtl
outsb
iret
push
ficomps
je
mov
je
add
adc
xchg
sub
lods
in
std
push
dec
mov
les
dec
mov
out
decb
or
sti
sbb
ret
xor
sbb
scas
mov
add
cmpsl
pop
and
and
jo
dec
mov
push
in
add
pushl
xor
insb
pushl
sarl
repnz
aaa
sarl
mov
inc
pop
test
dec
mov
andb
or
mov
fmuls
pop
or
xchg
xor
cmp
jne
push
sbb
sub
and
cmp
and
mov
push
imul
inc
cmp
pop
arpl
jae
pop
dec
lret
mov
scas
or
inc
mov
loopne
in
mov
or
popl
stos
iret
adc
cmpsl
mov
mov
scas
lcall
pop
mov
mov
push
daa
cltd
divb
fsubr
pop
fs
clc
adc
xchg
cmpsl
mov
inc
icebp
ret
std
jle
je
repz
das
incl
mov
clc
xchg
add
dec
mov
ja
cwtl
cs
cmp
and
mov
iret
jp
xlat
lea
and
clc
cltd
sahf
or
sti
and
cmp
enter
lock
test
mov
sbb
test
ret
push
inc
cs
mov
cmc
mov
int3
inc
popa
xlat
mov
xchg
cmc
jo
sbb
loope
leave
mov
push
cli
sbb
ss
fcmove
inc
test
or
mov
repz
push
inc
mov
push
and
rcll
movsb
jbe
loope
loop
jp,pn
aam
jl
les
pop
inc
imul
imul
cmp
scas
out
cmp
addr16
dec
bound
lock
popa
adc
mov
sahf
jg
cmpl
xor
jno
xor
or
xorl
shl
movzbl
or
add
sbb
add
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
push
push
pushl
push
call
xor
or
sbb
mov
sbb
or
subl
mov
mov
or
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
jmp
jecxz
mov
mov
xor
or
sarb
fimull
insl
cli
and
adc
test
adc
push
push
inc
dec
jns
das
jns
pop
sub
lea
sbbl
insl
add
test
and
es
test
addr16
ds
decl
cwtl
push
dec
sti
adc
jno
sub
sub
inc
mov
stos
inc
jmp
mov
pop
or
and
mov
add
js
dec
dec
fs
mov
jl
hlt
mov
mov
js
push
cmc
sub
inc
rcll
pop
and
dec
push
cld
movsl
scas
lcall
xchg
ja
mov
jnp
push
lcall
repz
or
dec
or
cwtl
sti
ds
movsl
in
xchg
push
sub
into
inc
xor
cmp
sti
push
lahf
rcll
push
mov
adc
pop
mov
push
xchg
or
addl
fiadds
mov
and
ret
sub
mov
push
inc
subb
sbb
aad
add
add
adc
adc
es
cmp
scas
icebp
pop
or
sahf
sbb
mov
scas
inc
cmpl
sub
pop
sbb
sub
cmp
pextrw
add
or
jl
mov
mov
adcb
cli
push
mov
mov
test
inc
add
dec
xchg
decb
mov
ret
lock
cmp
dec
pop
out
adc
cmp
inc
push
sbb
mov
xchg
loopne
jl
sbb
sbb
insb
sbb
or
mov
sub
sbb
push
cmp
ret
and
and
and
push
mov
insb
push
adc
jg
cwtl
aas
shlb
push
and
mulb
ret
xchg
mov
rol
mov
popa
int
inc
scas
lcall
push
jp
test
daa
sub
je
das
pushf
mov
jbe
dec
cmp
sarl
mov
int
adc
inc
xchg
push
xchg
xorl
push
jne
hlt
and
ret
dec
adc
ror
pop
fiadds
dec
mov
mov
iret
sahf
imul
jno
out
mov
xor
ret
xorl
lods
enter
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
jmp
in
cli
js
mov
push
or
inc
xchg
idivb
mov
outsb
fsubrl
rclb
inc
imul
xor
out
push
cmp
xchg
fistl
inc
sarl
jp
adc
push
jb
add
popa
sub
out
mov
or
data16
cmpsb
test
jmp
dec
push
dec
js
fdivrl
sbb
or
iret
xchg
push
pop
stos
dec
and
mov
std
gs
movsb
mov
fnstsw
int3
jmp
dec
clc
into
or
push
cmp
inc
mov
lret
xor
adcb
xor
sbb
cmp
add
mov
mov
mov
cmpsl
into
ljmp
les
cmpsl
mov
and
jmp
mov
mov
mov
inc
pop
jle
sub
das
call
sbb
jp
bound
xchg
jae
fsubr
jecxz
aam
cmp
inc
repz
lods
inc
in
faddl
jle
sub
push
das
outsb
aaa
and
jmp
aas
les
jge
or
sti
lock
hlt
les
lea
negl
inc
aam
aas
mov
adc
shrl
out
test
sbb
ret
mov
pop
pop
test
mov
iret
push
adc
mov
dec
adcb
mov
mov
or
jno
addr16
out
mov
andb
int
xor
adc
push
lods
std
movsb
mov
lcall
jmp
xchg
test
test
add
adc
xchg
add
xchg
mov
jl
test
adc
stc
or
or
cld
lea
enter
sahf
ljmp
ss
mov
loope
scas
fsubrs
add
sbb
stc
adc
mov
repz
aaa
jns
lods
out
and
and
ret
lahf
fcoms
cmp
data16
movb
test
lods
add
movsl
fldt
xor
xchg
xorl
cmp
dec
mov
adc
or
ret
mov
leave
xchg
sahf
ret
dec
in
inc
xor
in
and
sbb
stos
setb
sub
xchg
aad
push
addl
out
mov
nop
scas
xchg
sahf
xchg
ret
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
jmp
and
mov
sarb
pop
mov
mov
pop
outsl
imul
jne
or
or
ficompl
daa
inc
adcb
add
insl
jo
adc
add
mov
addr16
and
lret
lcall
scas
movsl
inc
pop
cmp
fcmovne
xor
cmp
and
int
xchg
pusha
push
dec
mull
mov
gs
cmpl
cmpsb
xor
iret
jno
ret
jns
cmc
jnp
dec
leave
add
xor
xchg
push
or
sbb
cmc
rcrb
pop
jge
inc
js
fwait
js
decb
leave
dec
mov
lret
and
push
sbbl
xchg
aas
lret
xchg
mov
or
adc
ficomps
jg
int3
mov
add
loop
xchg
jl
or
xor
les
sbb
shrb
mov
loopne
cmp
mov
imul
lods
inc
cltd
int
add
rcll
int3
xchg
sbb
dec
sbb
sbb
js
sbb
addb
fs
inc
fsubrs
clc
xchg
jbe
negb
and
inc
in
mov
xchg
fldt
inc
mov
dec
testb
out
pop
shrb
or
fbld
or
into
and
xor
cmp
pop
adcl
iret
fisubl
push
mov
test
xchg
in
push
adc
mov
mov
and
insl
adc
fldl
insl
test
ss
mov
js
repnz
out
orb
in
pop
cmpsb
add
xchg
xor
mov
icebp
outsl
repnz
xchg
std
cmp
insb
popf
into
and
loope
mov
cmovle
cli
int3
mov
dec
stos
mov
cmc
push
in
sbb
pop
mov
mov
or
cmpsl
push
inc
inc
inc
ret
insl
sbb
mov
or
pushf
pop
pushfw
and
mov
shrl
in
rorb
jp
lret
ss
mov
xchg
inc
cmp
scas
add
cs
leave
mov
push
pop
jne
lock
cwtl
sub
test
imul
insb
mov
sub
fwait
mov
enter
out
push
outsl
rorb
ja
mov
inc
cli
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
jmp
push
js
jno
mov
sti
jno
pushf
addr16
mov
mov
mov
lods
push
push
inc
stc
lcall
les
mov
jg
jne
and
inc
ror
arpl
mov
dec
cmovp
notl
jo
dec
aas
adc
mov
popf
sub
inc
scas
out
cmp
push
das
push
inc
mov
adc
psrlw
sub
out
subb
push
sbb
push
inc
mov
mov
in
cmp
sub
dec
sbb
rorl
jecxz,pn
dec
popf
push
rolb
inc
push
sbb
gs
dec
cmp
call
mov
jo
test
and
xchg
stos
incb
es
ret
pushf
loope
mov
lahf
add
inc
shrl
negb
pop
sbb
adc
jle
inc
mov
push
and
ss
jge
stc
cmpsl
push
ficomps
mov
outsb
shrb
outsl
int
dec
loope
add
mov
stos
adc
loope
or
sar
ljmp
ficoml
scas
gs
mov
mov
pop
mov
pop
test
cmp
es
sub
clc
fsubrl
daa
xchg
and
xor
shlb
mov
out
scas
mov
outsb
pusha
or
xor
push
dec
movsl
movsl
jnp
scas
arpl
sub
enter
adc
mov
mov
lds
lods
jg
ljmp
and
nop
cld
loopne
out
outsb
call
mov
fs
push
sbb
int
xchg
xor
cltd
inc
bound
xchg
outsb
adc
dec
and
in
insl
pushf
mov
adc
addl
inc
sub
mov
push
xchg
fnsave
mov
addr16
sub
mov
pop
bnd
test
push
cmp
jb
ja
xorb
or
mov
movsl
inc
outsl
jmpw
sub
mov
add
scas
pop
cs
or
loop
addr16
enter
or
loopne
cmp
push
cmp
ljmp
sbbb
mov
or
cld
ret
aad
das
fwait
stos
iret
jmp
pop
popf
push
iret
mov
mov
push
fnsave
push
adc
fistpll
rcrl
scas
sub
mov
lods
pop
outsl
lods
ja
pushf
std
out
pusha
arpl
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
jmp
jmp
pop
add
sub
cmp
cmp
push
mov
mov
ds
lea
setnp
cld
addr16
add
aas
rcrl
push
sti
icebp
popf
out
lods
loop
pop
xchg
push
scas
jg
test
or
pop
mov
xchg
fcom
fiaddl
leave
movsl
adc
inc
xor
pop
dec
cmpb
bound
xor
insb
and
push
jae
or
out
dec
or
stos
aad
xlat
dec
adc
add
cmpl
decb
and
mov
push
popa
dec
fldl
xchg
lahf
in
jmp
out
movb
push
sub
out
add
jne
movsb
lock
sbb
mov
adc
nop
mov
lret
pusha
lods
or
xchg
aas
xchg
jae
and
pop
into
hlt
pop
jle
xchg
loop
mov
lods
in
sub
popa
add
pause
or
sarb
arpl
fcomp
cmpsb
cmp
pushf
cwtl
int3
mov
or
shlb
mov
push
daa
mov
cmp
gs
mov
xchg
push
incl
repnz
aad
dec
fdivrs
cwtl
fiaddl
js
jmp
jge
mov
out
out
push
cmp
jmp
lcall
fsubl
cmp
mov
mov
fstpt
jno
add
xchg
pop
sbb
xorb
mov
push
pop
pop
idivl
add
test
and
fstpl
fnstsw
sub
cmpsb
push
push
and
mov
outsb
jne
int
imul
mov
ret
es
dec
sub
xchg
inc
es
out
icebp
jle
xor
aaa
cmpl
xor
enter
inc
add
iret
dec
out
cld
aaa
jle
cli
aas
sub
jecxz
fmul
cmpb
lcall
sbb
scas
cmpsb
mov
mov
testl
adc
sbbb
inc
aaa
out
dec
and
push
inc
mov
inc
or
out
out
jbe
aas
les
fcmovnu
cmp
mov
pushf
mov
mov
push
mov
sarl
ja
jmp
xchg
jg
pop
lcall
idivb
ljmp
mov
iret
int
js
js
cmp
xor
adc
inc
dec
mov
mov
sbb
test
repz
movsl
sbb
jl
add
mov
adc
fldl
iret
int
push
pop
push
clc
cmp
push
in
ljmp
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
jmp
push
push
in
push
jns
in
pop
xor
rcrl
or
mov
xor
sub
mov
ret
mov
aad
dec
neg
lea
jmp
ds
sub
insb
adc
outsl
xchg
mov
inc
rcl
add
cli
lret
divb
xor
jno
cmp
push
iret
or
push
push
rcrb
and
daa
push
push
aas
dec
lret
inc
push
inc
pusha
pop
daa
shufps
repz
jne
inc
mov
mov
inc
xor
jbe
test
in
addl
mov
and
bound
aaa
test
sbb
xor
add
out
dec
push
fmull
and
sbb
sbb
test
mov
ret
rcll
cmc
cs
stos
sbb
sub
fisubrl
int3
sbb
iret
out
fs
daa
xor
cmp
hlt
ss
push
jle
mov
pop
adc
and
lods
sbb
adc
lods
fisubs
imul
adc
dec
iret
push
dec
testb
lret
xchg
inc
das
mov
subl
imul
or
sbb
push
dec
push
insl
mov
inc
lahf
call
or
imul
jg
mov
or
push
lods
mov
fwait
cmpsl
push
mov
cltd
insb
icebp
pop
inc
inc
mov
mov
jl
push
scas
fs
in
loop
bound
jge
cmp
and
inc
mov
sti
or
roll
into
jg
xor
shrl
push
xchg
hlt
test
stos
sub
jno
cmp
sar
pop
nop
and
repnz
movsl
or
sbbb
lret
dec
fadds
jmp
lods
jp
add
inc
rcrb
fdivl
sub
push
inc
jp
mov
arpl
fcmovnu
cmp
jae
mov
in
popf
aam
lret
sub
mov
mov
jns
push
inc
jge
rorb
enter
push
dec
aas
scas
and
adc
pop
sub
loope
icebp
xor
vmwrite
loopne
add
mov
in
mov
aad
imul
cmpb
cmpb
arpl
repnz
iret
inc
sub
dec
mov
cmp
lret
jmp
mov
xor
and
mov
xchg
mov
cmc
int
addr16
or
add
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
jmp
aas
std
mov
cmp
lcall
mov
cwtl
dec
xchg
aad
sbb
std
or
sbb
enter
hlt
dec
loopne
ss
inc
xor
cmp
and
mov
pop
div
fdivl
xor
or
mov
sub
xchg
leave
and
in
dec
out
sub
rorb
sbb
cmp
and
mov
movl
mov
std
int
add
cmp
stos
sbb
test
xlat
scas
callw
sub
fcoml
stos
and
jecxz
stc
test
cmp
std
nop
xchg
in
icebp
out
push
ficomps
arpl
or
gs
and
in
pop
iret
xchg
mov
movsb
mov
into
dec
sbb
jmp
pop
mov
inc
dec
inc
or
ljmp
cmp
ds
dec
pop
inc
shrb
mov
dec
popa
fcmovnb
cld
mov
jne
fiadds
lds
in
or
adc
jge
lds
push
push
sahf
das
insl
mov
ja
outsb
aad
xchg
fs
mov
push
or
lret
sbb
in
xchg
mov
and
push
sbbl
mov
insb
pop
add
push
inc
inc
std
mov
shlb
ja
xor
popa
dec
push
cwtl
aad
insb
xchg
pop
inc
sbb
out
push
or
repz
jecxz
mov
in
xchg
pop
sub
pop
mov
jg
mov
leave
lds
xlat
ss
hlt
adc
inc
and
js
jmp
mov
xlat
in
addr16
movb
fs
imul
std
mov
int3
fs
jb
into
mov
sbbl
rcll
imul
lcall
xor
and
mov
adc
fstps
dec
jae
pop
sar
push
xchg
xchg
hlt
shrl
jbe
push
movsl
comiss
xlat
push
cs
pushw
add
mov
fadds
nop
or
cs
mov
and
mov
into
aaa
lret
divb
outsl
jno
push
and
pop
sti
js
outsl
or
stc
jno
int3
add
adc
dec
sub
sub
adc
dec
hlt
jbe
call
daa
in
or
cld
push
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
jmp
fs
das
ja
mov
outsl
aad
inc
test
fsubrs
sbb
mov
and
mov
jae
fsts
jg
pop
xor
unpckhps
pop
insl
push
int3
cmp
and
pop
jp
sti
cmpsb
fcmovne
cmp
mov
push
jno
movsb
movsl
xor
sbb
out
or
or
pusha
sbb
pop
pusha
outsb
sbb
xor
pop
dec
ret
push
adcl
iret
les
das
jnp
repz
test
add
popf
dec
cs
push
addr16
inc
daa
mov
dec
sub
int
sbb
jmp
aaa
js
or
call
mov
ret
stos
ds
sti
adc
rcrb
in
dec
cs
adc
inc
push
hlt
mov
ljmp
dec
xchg
loop
in
lcall
out
dec
push
add
popl
mov
dec
and
or
rolb
sbb
aad
or
iret
or
insb
mov
test
and
leave
cmpsl
inc
ss
sbb
cmp
pushw
aam
sub
push
es
xor
mov
mov
rcrl
mov
ja
jb
xor
mov
pop
xor
and
dec
lretw
add
jg
das
sahf
mov
and
mov
pushf
mov
fnsave
add
loope
les
aas
out
cmpl
sub
sahf
test
sarl
mov
sbb
in
inc
sbb
dec
repnz
jle
add
js
mov
loop
inc
pop
mov
and
js
mov
movsb
jb
outsb
sub
xor
jnp
lds
mov
enter
sahf
clc
jecxz
out
aaa
sbb
add
pop
xchg
mov
or
jne
adc
jg
jbe
cltd
prefetch
std
pop
addr16
cld
sbb
jno
fbld
arpl
jo
sub
dec
push
fs
pop
punpckhwd
sbb
insb
pop
mov
mov
xor
mov
sub
outsb
imul
jno
fldt
shrl
push
addl
or
mov
dec
fstl
insb
movsb
loope
frstor
scas
cmc
sub
ds
dec
pop
jbe
or
das
loop
adc
add
bound
std
imul
push
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
jmp
mov
mov
mov
inc
push
test
outsl
adc
mov
mov
and
scas
mov
test
and
std
ja
std
dec
mov
in
cmp
mov
add
jbe
mov
call
pop
pushf
lods
pushf
cmpsb
sbb
add
xchg
sahf
xchg
dec
sub
mov
mov
loopne
mov
sub
outsb
mov
push
push
outsl
insl
out
roll
repz
cmpl
dec
sbb
dec
xor
popf
aas
mov
loopne
imulb
out
xchg
out
shll
out
andl
lds
ficompl
test
pop
aaa
sbb
mov
xchg
mov
pop
dec
xorb
mov
test
mov
scas
inc
sbb
xchg
in
leave
aaa
loope
jg
jnp
scas
mov
outsb
lret
cmp
xlat
jns
inc
inc
ret
mov
mov
sub
inc
outsl
jmp
in
sti
les
aaa
out
mov
aas
aad
cmp
mov
xlat
lahf
repnz
test
fisttps
add
test
mov
xchg
push
shll
xchg
leave
xor
mov
cwtl
and
call
or
sub
ja
adc
xor
dec
je
add
mov
lock
scas
add
add
cmpsb
call
scas
add
clc
jnp
movsb
in
xor
rcrl
pop
pop
movsb
fnstcw
insl
jg
push
push
ja
jns
mov
out
pop
scas
and
lods
out
stos
ja
add
cmp
sar
mov
cmc
cld
jge
mov
inc
into
and
inc
push
mov
xor
xorl
jp,pn
insl
sbb
daa
loop
add
add
arpl
arpl
mov
xor
add
je
sarl
dec
sub
add
mov
xchg
pushf
cmp
hlt
sub
outsl
test
fsubl
dec
xor
test
xor
cld
int
and
mov
fsubrl
jg
fadds
ja
add
sub
adc
jecxz
xchg
or
mov
leave
mov
dec
enter
inc
testl
aaa
enter
sti
sbb
xor
mov
mov
xor
jmp
enter
xor
fdivrs
xchg
fldenv
aam
xor
push
mov
mov
bound
mov
shlb
xchg
mov
and
pop
xchg
mov
cmp
mov
mov
xchg
out
std
jl
aaa
pop
frstor
sbb
lret
mov
xor
data16
add
aad
cmpsl
cmc
xchg
push
icebp
scas
mov
enter
and
push
jnp
imul
xchg
andb
mov
xchg
dec
or
pop
lret
fiaddl
test
stos
in
lcall
cli
les
or
aas
push
data16
stos
addr16
push
lds
mov
mov
xor
mov
push
mov
dec
popa
mov
bnd
imul
movsb
adc
mov
and
imul
movsl
call
in
xchg
mov
adc
fisubrs
and
lods
pop
ss
xchg
sti
add
mov
cmp
mov
mov
pop
fists
imul
cmp
stc
outsl
push
dec
ljmp
cmp
sahf
add
mov
stos
dec
cwtl
add
testl
orl
lret
xchg
push
xor
cli
jno
push
sarl
add
and
add
add
movsb
cmp
lods
sti
and
jmp
dec
inc
mov
icebp
nop
jbe
push
insb
ret
push
ss
rcr
pop
lret
jno
xlat
adc
mov
icebp
adc
jl
inc
push
sarb
ja
lcall
pop
and
and
dec
movsb
and
dec
mov
add
movsl
mov
aaa
out
in
test
or
mov
mov
aas
notb
adc
xor
insl
dec
enter
bound
xor
push
test
clc
add
sub
inc
lods
sarb
fldenv
ja
scas
nop
pop
mov
sarb
mov
fwait
sbb
les
mov
mul
push
inc
ds
pop
push
test
push
movsb
ret
in
mov
jge
daa
cltd
test
xor
mov
push
inc
lods
pop
jle
shlb
roll
xor
ljmp
sub
push
inc
add
or
xor
push
dec
mov
adc
mov
adc
mov
lret
enter
adc
jmp
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
jmp
xchg
cmp
mov
scas
out
cmp
cmp
mov
mov
mov
jo
mov
in
mov
jb
movsb
or
enter
scas
mov
testl
std
dec
scas
test
cltd
mov
cmp
jge
mov
mov
fisttpl
mov
push
sbb
mov
xlat
or
hlt
xor
push
pop
pop
stos
dec
out
into
mov
or
leave
jb
insb
fwait
outsb
movsl
sbb
lret
pop
xor
pop
inc
or
mov
into
lds
jnp
std
sbb
xchg
adc
out
fldenv
subb
sub
pop
jle
mov
xor
sub
xor
jbe
in
cmp
xchg
xor
lret
pop
aaa
jbe
or
mov
cmc
data16
insl
xlat
dec
fidivrs
xchg
xchg
lock
movsb
mov
imul
sub
or
data16
call
sub
pusha
imul
mov
outsb
daa
pop
mov
sub
aam
xlat
push
mov
mov
cs
fildll
jb
testl
pop
ror
dec
xchg
push
jne
fnstcw
jns
stos
jl
jnp
lret
sub
sarl
xor
xor
or
xchg
outsb
pop
push
mov
ja
dec
mov
jae
ficoms
xchg
sub
cmp
or
mov
jmp
test
int3
push
sbb
xlat
loopne
xchg
dec
adc
cmp
addr16
sbb
xchg
xor
test
xor
xchg
jb
pop
pushf
xchg
sub
mov
pusha
sbb
dec
jno
sub
divb
cmp
scas
xchg
outsb
pusha
mov
push
nop
in
cmp
push
pop
mov
rclb
xor
and
lock
dec
lcall
fwait
pop
jp
test
cmp
add
bound
ss
xchg
adc
enter
add
or
imul
push
ljmp
nop
lods
repz
repz
aas
movsb
sbb
sub
stos
lret
imul
pop
or
aaa
mov
and
stos
popf
gs
dec
rolb
dec
inc
cltd
mov
popf
les
cmp
mov
and
mov
push
adc
aaa
push
mov
inc
inc
cmp
shl
mov
or
xor
or
xor
xor
mov
mov
jmp
mov
scas
movsb
scas
lods
cltd
cmp
mov
dec
add
sarb
hlt
adc
fcoms
mov
cmc
lea
mov
repz
neg
push
jg
shlb
mov
xor
mov
sbb
pushf
jo
imul
fs
loop
fstpt
xchg
xor
in
sbb
popf
mov
es
test
inc
shlb
rclb
sub
inc
jno
push
dec
mov
mov
push
jae
fidivrs
sti
leave
add
jae
imul
mov
mov
jl
sti
loop
iret
dec
mov
fucomip
adc
int
fwait
jp
mov
or
aad
jmp
mov
mov
in
in
sub
cwtl
mov
and
jbe
sti
sbb
inc
mov
ficomps
add
lcall
pop
cmp
push
aaa
stc
ss
iret
imul
stc
and
sub
in
dec
iret
fmuls
mov
test
add
rclb
push
es
mov
fs
mov
and
outsb
imul
jbe
fadd
shll
mov
sub
mov
xor
xor
movl
es
insb
mov
repz
jg
pop
outsl
xchg
pop
rcl
pop
cmp
pop
addl
mov
sbb
fidivl
fcoml
hlt
pop
mov
xchg
in
sbb
sub
lods
cmp
movsb
mov
sbb
xor
pop
xor
sbb
dec
adc
cmp
imulb
int3
pop
sub
filds
shlb
inc
adc
dec
sbbb
lahf
scas
and
test
add
stc
cmpsl
bound
cmp
cmpsl
cmovl
add
es
mov
shlb
xor
inc
fsubrl
xchg
xchg
xchg
call
rolb
xchg
dec
int
adcb
int
out
aas
cli
mov
insb
push
adc
push
jbe
add
xor
and
rorl
sbb
pop
adc
cmp
push
inc
jmp
sub
pop
or
scas
adc
add
push
test
adc
push
mov
xchg
push
jbe
xor
push
sbb
enter
insl
shrb
stos
push
dec
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
jmp
cltd
add
popf
popf
add
das
xchg
pop
cs
mov
cmp
int
gs
dec
and
enter
aas
pop
aad
fidivrs
sbb
inc
fimull
dec
jae
clc
cmpsl
lock
ret
mov
cmp
push
jecxz
std
and
js
es
jbe
test
xor
out
mov
movsl
add
add
shrb
roll
movaps
push
dec
jp
xchg
aad
or
sbb
mov
mov
push
rolb
cmp
enter
test
imul
push
inc
daa
adc
lods
call
cmp
clc
sbb
jge
call
fimull
sub
shll
movsl
cmc
and
das
jl
sbb
pushf
sbb
mov
xor
test
subl
pop
pop
mov
xchg
iret
pop
fmull
fimull
inc
mov
and
int
and
pavgw
and
or
gs
stos
gs
mov
pop
adc
jnp
popl
jl
and
lcall
cmp
movsl
fsubrl
jmp
cs
xor
mov
leave
test
in
loopne
aaa
cmp
xchg
scas
repz
jb
sbb
nop
sbb
lahf
jle
mov
mov
sti
add
pusha
cmp
inc
dec
outsb
add
movsb
add
repnz
or
test
ret
sub
mov
mov
popf
inc
daa
inc
lcall
arpl
addr16
sbb
shlb
inc
lods
lods
pop
ljmp
sub
daa
fcomps
daa
insl
mov
sub
loopne
jno
test
pop
jns
and
or
sub
cmp
bound
sub
popf
sub
loope
inc
add
repz
stc
sub
movsl
cmp
and
sbb
sar
es
jns
rclb
cmp
jg
mov
aad
xor
mov
and
pushf
pop
call
adc
sub
sub
aam
mov
stc
adc
cmp
mov
push
xchg
lods
out
or
sbbb
loope
mov
xchg
xor
bound
xor
adc
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jmp
adc
out
or
test
imul
mov
mov
mov
push
cmpsb
movsb
xchg
leave
or
addr16
stos
pop
dec
xchg
orps
xor
xchg
les
mov
mov
mov
xor
xor
daa
xchg
sbb
dec
and
cmc
mov
mov
sbb
inc
nop
gs
jns
adc
in
mov
in
or
js
insb
inc
fs
dec
aam
lock
pop
test
dec
sub
dec
in
movsb
out
xor
aam
pop
xchg
xchg
push
sub
shlb
pop
in
jecxz
nop
fcmovne
xor
inc
pop
ror
stos
sub
arpl
adc
xor
mov
ss
mov
nop
pop
cmpsb
pop
jg
iret
or
mov
sbb
push
jp
and
pcmpgtw
adc
cmpsb
push
and
movsb
in
sbb
xlat
mull
mov
and
push
cmp
sbb
cmp
push
stc
imul
adc
jl
or
cmp
rcr
dec
cmc
xchg
scas
xchg
shll
int
test
loop
inc
sarb
ljmp
enter
icebp
or
mov
cwtl
and
sub
xor
cs
inc
push
add
mov
mov
jl
inc
add
lea
sbb
outsl
lcall
data16
lret
adc
repnz
pushf
ss
sbb
das
push
lods
js
pop
and
fisubrs
cmp
sbb
shlb
adc
xchg
sub
or
pop
pop
mov
in
call
fsubl
in
push
enter
insb
cmpsl
or
fstpl
push
vpmaxsw
stos
test
addb
sbb
es
and
inc
xchg
inc
mov
sti
cmovo
push
movsw
rcl
pop
cmp
adc
mov
test
lret
test
insl
dec
nop
outsb
add
push
dec
jecxz
adc
insl
xchg
jp
int
adc
mov
test
je
icebp
sahf
or
data16
shlb
cmc
inc
pop
pop
into
aaa
dec
jo
push
mov
lock
call
pop
cld
dec
inc
xor
out
mov
addl
add
add
stos
adc
add
adc
add
addl
shrd
shr
ret
sub
mov
andl
xor
movl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
mov
not
movl
movl
jmp
mov
cmpl
jae
push
push
push
call
add
mov
sub
sbb
movzbl
xor
xorl
negl
push
adc
push
movl
cmpl
mov
mov
notl
jmp
mov
cmpl
jne
push
call
sbbl
movzbl
and
mov
and
addl
sbbl
sub
cmpl
notl
movl
movl
jmp
mov
cmpl
jl
push
pushl
pushl
push
pushl
push
push
call
and
inc
sbbl
movzwl
adc
sbbl
orl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jge
push
push
call
and
mov
mov
sub
and
andl
sbb
mov
and
mov
or
jmp
les
mov
out
bound
test
and
dec
cmp
mov
stos
nop
inc
cmp
mov
lds
or
pop
xchg
xor
adc
loop
dec
cmp
pop
cwtl
jno
push
add
ret
sbb
adc
loop
sarl
pop
push
fs
jmp
mov
jg
dec
fistpl
sub
sti
xchg
loope
jecxz
and
sub
jecxz
cmc
pop
mov
ret
sub
add
les
rorb
loop
cmp
push
or
fs
scas
into
push
cmp
sbb
insb
aam
adc
xor
jnp
je
cmp
loope
jnp
adc
push
adc
aad
scas
pop
inc
fwait
lcall
xor
sub
out
pop
sbb
mov
jmp
mov
nop
jb
ljmp
cmpsl
shl
sahf
test
xlat
push
mov
push
dec
lret
fadd
inc
pop
jns
orb
jl
jns
pop
rorl
xchg
pop
dec
mov
mov
arpl
mov
arpl
mov
lret
inc
jb
mov
jl
xchg
add
dec
pop
out
movsl
mov
jno
mov
cltd
mov
mov
mov
addr16
mov
jne
ret
std
repnz
lret
bound
vpcmov
mov
push
push
adc
mov
mov
add
adc
dec
test
aas
mov
cmpsl
or
test
pop
add
jne
cmp
inc
and
mov
mov
jne
idiv
stos
cmp
shlb
cld
or
outsb
jns
iret
mov
sti
and
daa
in
imul
sub
int
fdivp
and
xchg
cs
cmp
sub
movl
call
je,pt
test
dec
lock
lods
insl
and
or
xchg
lret
adc
adc
daa
repz
sbb
or
cmp
rorb
xor
fists
lea
xor
jmp
ja
sbb
mov
pop
jmp
jo
pop
cmp
imul
cld
lods
ret
shlb
sub
jns
adc
jmp
pop
popf
lds
lret
mov
mov
popf
mov
sbb
movl
mov
and
movl
andl
mov
adcl
mov
or
decl
and
mov
mov
sub
imul
sub
mov
xor
or
mov
adc
movl
xor
movl
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
je
push
push
pushl
pushl
push
call
and
sub
mov
mov
adc
sub
sbbl
xor
sbb
movl
mov
sub
mov
sbbl
jmp
jmp
sub
sub
xor
fmuls
sub
inc
mov
mov
xor
pop
cld
subb
in
out
aaa
jne
inc
flds
jbe
in
cli
add
int3
push
pop
xlat
and
pop
sbb
cltd
mov
pop
test
adc
iret
mov
ja
push
pop
sti
aaa
inc
lds
and
inc
mov
out
lret
and
xchg
shll
addb
pop
in
repz
das
fisttps
outsl
sbb
or
fs
sbb
aas
sbb
stc
mov
pop
mov
or
fsubrs
lahf
jb
lock
pop
mov
cmpsl
xor
cmp
sub
and
pop
aas
jae
add
pop
jl
jno
cmp
jp
mov
cmp
push
cmc
and
ds
xchg
les
mov
sub
js
jns
add
xlat
cli
mov
dec
mov
inc
aad
fcmovnbe
adc
imulb
popf
les
and
push
sbb
push
mov
xchg
mov
enter
and
std
es
sbb
pop
inc
ja
shlb
push
pushf
addr16
ja
jnp
jno
push
movsb
in
sahf
or
sub
sti
adc
cmpsb
xchg
add
add
mov
xlat
pop
xor
sbb
xchg
mov
insl
loopne
mov
xchg
imul
outsb
pushf
aam
insb
or
jecxz
imul
dec
mov
lea
mov
sbb
jno
in
and
inc
pop
mov
aaa
ss
lahf
pop
or
adc
ja
es
mov
idivl
sub
mov
aad
push
sbb
sub
pop
imul
jecxz
outsb
inc
xchg
cli
mov
pop
xor
int3
pop
and
pop
lahf
jns
add
test
into
jmp
jl
mov
mov
int
daa
fmuls
jp
lcall
xor
test
sbb
adc
cmpsb
cmp
jmp
cs
dec
mov
xchg
lret
sbb
jnp
mov
inc
or
or
ret
ffree
test
or
sbb
adc
and
lret
mov
clc
ja
das
mov
aaa
adc
out
cmp
xor
inc
shr
adcl
and
cmpl
movl
movl
movzwl
jmp
movl
mov
cmpl
jg
push
call
add
sub
or
or
xorl
or
movzwl
or
mov
xor
div
mov
xor
sub
mov
div
mov
cmp
je
mov
mov
mov
mov
movzwl
mov
add
mov
and
mov
add
movzwl
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
movzwl
jmp
sub
push
adc
insl
inc
loope
test
mov
xchg
adc
push
mov
cs
fst
cmp
repz
and
or
pusha
cmp
add
cli
jne
add
in
jecxz
sbb
dec
inc
cs
stos
dec
loope
lock
je
mov
push
inc
pop
xchg
sub
ds
fs
push
pop
jmp
mov
fdivrs
aas
out
cld
repnz
lods
popa
xchg
mov
mov
sub
stc
in
xchg
jnp
xchg
lahf
push
fsts
inc
je
cmp
xor
int3
or
imull
lret
xor
rcrl
les
sub
sbb
pop
negl
or
aas
and
xchg
dec
pop
shrl
lock
fs
xchg
ret
jl
adc
aam
int
popf
subb
cmpsb
push
in
dec
xchg
mov
push
mov
es
or
add
in
in
lahf
jne
inc
fwait
test
mov
dec
ffree
dec
fwait
push
movsl
test
stc
fs
shll
adc
mov
rcll
es
cld
and
pop
adc
cmc
je
or
sbb
ficoms
insb
mov
push
inc
outsl
mov
or
subl
push
or
outsl
mov
sub
enter
sub
and
inc
xor
adc
xorb
push
cmp
adc
clc
out
jnp
sbb
mov
xor
test
mov
fldenv
or
or
arpl
xchg
stos
push
sti
stos
jg
int
fsubs
adc
fadds
cmpsl
mov
addr16
fstp
inc
addb
imul
or
fs
les
dec
orl
test
das
push
pusha
sar
loope
jo
cmp
loop
xchg
cmp
push
insl
imul
inc
mov
lods
xor
hlt
cmp
sbb
inc
loope
mov
outsb
test
xor
and
decl
push
or
push
mov
aas
js
xor
js
dec
popaw
addr16
imull
pop
or
jnp
xor
cmp
cmp
mov
inc
stc
orl
add
rcrb
lds
pop
mov
sub
ficomps
movzwl
or
cltd
pop
idiv
mov
cmp
jb
movzbl
mov
imul
and
or
mov
mov
cmp
jne
mov
mov
shrd
shr
mov
jmp
in
movsb
push
mov
cmp
sti
jne
imul
mov
pop
adc
in
sbb
xor
jg
xor
inc
rcl
nop
push
clc
stos
jecxz
out
cmp
xchg
lock
mov
fs
setl
sbb
popf
iret
ss
loopne
add
xor
out
iret
xchg
mov
out
push
ljmp
xor
cmpsl
lret
jcxz
push
cmp
or
pop
xor
jle
dec
mov
rcrb
pop
mov
stos
out
sub
add
sbb
xor
andl
sbb
test
sbb
inc
imul
xchg
pop
lcall
inc
adc
pop
mov
adc
xlat
andb
idivl
mov
in
lock
cmp
xchg
rclb
adc
outsb
in
inc
cmp
inc
cmc
push
inc
add
inc
push
jl
and
sub
mov
and
adc
xor
mov
sbb
scas
aad
dec
adc
push
jbe
jg
add
xlat
gs
in
mov
inc
shlb
jp
inc
inc
test
ds
int3
sbb
popf
inc
jle
loop
enter
and
cmp
imulb
push
loope
aas
jecxz
addl
and
jae
adc
and
jge
xorl
les
insb
loope
pop
es
in
imul
pop
fmulp
cmp
dec
jmp
es
fwait
mov
iret
or
loope
les
aam
hlt
and
mov
int
pop
arpl
lret
lahf
mov
std
pop
nop
jle
jl
mov
std
xor
mov
fistl
outsl
mov
ret
jb
push
xor
add
call
sub
fbstp
mov
movsb
stc
cmp
and
sbb
fs
lret
stos
cli
into
roll
inc
dec
and
scas
icebp
orl
jbe
xchg
ret
lcall
and
add
fwait
sbb
pop
sub
or
popf
mov
out
xor
push
cli
movsl
add
pusha
hlt
inc
ja
outsb
cs
movsl
xor
mov
and
mov
ss
test
mov
lds
and
addr16
dec
inc
aaa
xchg
pop
push
mov
mov
shl
mov
mov
xor
mov
xor
or
mov
mov
mov
shrd
jmp
push
arpl
sbb
cmp
push
mov
mov
cmp
mov
xchg
push
pop
fsub
sub
add
cmp
pop
std
testb
mov
jb
and
fs
shll
sub
mov
scas
fwait
jbe
xchg
mov
scas
mov
lahf
fnstenv
stos
xorl
sbb
icebp
or
dec
out
sti
push
sbb
daa
pop
sub
jl
push
rorb
pop
ja
cmp
cmpsb
inc
shrb
ss
or
iret
lock
fcompl
rcrb
lret
fwait
push
das
inc
and
pushl
sbb
jmp
out
dec
clc
push
or
push
mov
mov
cmp
dec
cltd
pop
mov
xchg
fidivs
fistl
push
mov
and
mov
fmulp
add
fnstsw
xor
cli
enter
sti
and
xchg
xchg
loopne
jno
sub
push
in
jns
mov
fiadds
jl
push
in
pop
cmpb
push
push
and
pop
pop
add
push
jae
fs
lret
xchg
lret
ss
fstpl
dec
jae
jo
inc
into
pusha
daa
xor
in
sti
nop
and
insl
xchg
dec
mov
adcb
mov
sbb
dec
jo
inc
pop
aaa
push
jmp
enter
mov
cs
or
mov
insl
inc
fnstsw
pop
nop
push
cmp
cmpsb
mov
lcall
adc
mov
lret
call
and
and
sbb
pop
jg
cli
imul
sub
leave
xchg
lret
add
mov
sbb
jp
jle
push
xchg
fcmovnu
aas
stc
jge
pop
subl
stos
mov
in
adc
sbb
cmp
shll
cmp
rcrb
cmp
test
fmuls
mov
jge
xchg
out
cmp
jmp
int
add
push
repz
push
push
out
xchg
lret
and
add
insl
cmp
pop
es
fnstenv
js
or
ljmp
addl
jo
movsl
cmp
sti
jle
aad
ja
pop
mov
shll
andb
aad
lahf
addb
fmuls
xor
or
mov
movl
movl
mov
shl
mov
mov
sub
jmp
gs
pop
mov
mov
xchg
inc
into
jno
sbb
mov
mov
and
mov
and
scas
adcl
test
xchg
adc
inc
inc
or
cmpsb
cmp
lcall
inc
fcom
aas
rorl
out
mov
mov
icebp
cmpsb
pop
sar
push
aam
mov
xor
dec
jl
push
push
xor
add
icebp
les
xchg
mov
push
fidivrs
in
pop
stc
stc
fsubr
cltd
loop
lcall
movsb
sarl
mov
mov
fcomps
inc
or
push
int3
xchg
addr16
in
mov
sarl
int
jbe
mov
lods
in
cwtl
xchg
and
ret
outsl
xor
insl
fstpt
cld
cmc
bound
arpl
xchg
fsubrs
sub
lock
dec
jns
int
mov
jge
pop
push
lods
pop
rsqrtps
pop
int3
mov
jbe
outsl
jo
xchg
sub
jne
lahf
mov
test
subl
inc
push
imul
push
fadd
push
cmp
and
jle
int3
push
mov
mov
rclb
orl
mov
fimuls
xchg
pushf
lahf
jae
mov
jge
call
sbb
or
and
lods
popf
loop
add
loope
xchg
mov
pop
loopne
dec
add
scas
jne
dec
ja
in
icebp
inc
jg
insb
pop
leave
dec
clc
and
scas
out
in
jns
data16
sbb
popa
push
mov
cmp
xchg
in
push
adc
aad
pop
inc
gs
cmp
in
push
sbb
fidivs
inc
and
in
fadds
mov
dec
mov
imul
jecxz
lds
jne
mov
movsb
lds
mov
fwait
add
mov
int3
fbstp
and
mov
mov
test
add
inc
movsb
orb
loop
dec
in
mov
mov
inc
push
fwait
jns
fstpt
and
cmpsl
add
icebp
repnz
pop
in
lods
sahf
nop
andb
ss
pop
xor
and
jne
sbb
pop
jmp
push
push
in
pop
push
xor
dec
loope
push
test
test
jnp
lds
shl
cli
out
mov
mov
pop
loopne
bound
and
iret
or
hlt
aad
repz
pop
xlat
push
jne
ljmp
add
push
sbb
push
push
call
mov
mov
jmp
hlt
mov
jae
ja
mov
insl
lahf
xor
stos
mov
test
sarl
adc
enter
add
sbbl
shrb
insl
add
or
push
or
cltd
outsb
fiadds
imul
daa
shr
sub
fistpll
and
mov
loopne
js
xchg
cmovl
pop
movsl
nop
js
mov
inc
mov
xchg
mov
int3
out
mov
fwait
and
fcomps
push
and
pop
dec
call
dec
shl
jns
xchg
fisubrl
hlt
jb
out
dec
push
enter
xchg
push
mov
jl
lret
add
add
cmp
jp
in
call
movsb
xchg
inc
std
or
popl
inc
mov
xchg
sub
outsl
fisttps
daa
inc
add
cs
push
mov
push
nop
dec
add
andb
mov
lahf
ret
fmuls
in
xor
std
fs
xor
fs
adc
mov
xor
jle
push
ror
jecxz
loop
sbb
mov
xor
cmc
xorl
nop
cli
cmp
movsl
sahf
stc
dec
les
pop
or
inc
dec
push
dec
rolb
xchg
push
ficoms
sbb
cmc
mov
or
mov
cs
and
fs
mov
jp
jbe
cmp
dec
out
push
movsb
repz
xor
push
das
pop
inc
cmp
insb
lods
jle
jno
sahf
inc
test
sbb
out
lods
in
arpl
cs
nop
ljmp
in
or
test
sbb
in
addr16
pop
jbe
add
je
outsl
sub
in
adcl
mov
xor
pop
idiv
pop
adc
daa
mov
test
adc
lfs
roll
lea
dec
inc
jmp
ss
push
fwait
stc
jae
subl
das
add
lea
out
ds
pop
adc
xor
push
push
and
and
imul
cmp
push
jnp
outsl
xchg
ret
in
mov
add
sub
stc
imul
aas
mov
in
and
mov
xchg
orl
aaa
negl
pop
cltd
loopne
mov
in
into
clc
sub
jno
sarb
mov
minps
add
loopne
dec
pop
sub
das
push
push
or
or
push
push
call
mov
mov
movl
movl
movl
movl
mov
mov
push
add
push
adc
push
push
call
mov
mov
and
and
mov
mov
and
mov
and
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
shl
or
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
sub
xor
add
add
or
push
add
push
movl
movl
movl
movl
mov
mov
mov
xor
and
or
mov
sub
mov
lea
xor
mov
div
mov
mov
push
imul
imul
xor
jmp
lock
lds
dec
sub
xor
pop
mov
mov
bound
js
inc
xlat
jnp
mov
dec
xchg
aaa
pop
xchg
fsubrs
aas
rcrl
popa
ret
jae
shlb
push
outsl
xor
shrb
push
add
push
mov
in
push
cs
and
dec
inc
jl
ljmp
mov
outsb
add
xor
scas
mov
repnz
hlt
data16
and
push
push
out
or
xor
rcrb
insb
mov
mov
ret
jo
jbe
jmp
ss
jb
nop
sub
iret
adc
les
lcall
scas
shlb
pop
push
adc
dec
xor
adc
and
mov
dec
jae
loope
int
enter
scas
adc
mov
xchg
cld
pop
out
test
mov
scas
sub
xor
pop
dec
pop
dec
insl
lret
lret
add
lret
mov
mov
jbe
or
cmp
sub
lret
cmp
push
mov
movsb
push
leave
popf
pop
mov
std
sbb
pusha
xchg
adc
mov
or
data16
mov
andl
push
call
adc
jge
cmp
xchg
loopne
mov
ret
jb
aas
fs
sub
ret
cmpsb
gs
fisubrl
icebp
pop
cmp
push
xchg
cmp
mov
popf
pusha
push
inc
imul
sub
push
es
das
adc
imul
shrl
mov
inc
add
outsb
pop
sub
addl
sbb
lahf
pop
push
inc
jmp
mov
push
repz
xchg
cmpsl
mov
out
lock
xchg
and
and
fs
sub
ds
jg
mov
jb
fisubrl
repnz
mov
daa
fsts
jno
repnz
inc
jae
adc
scas
xchg
mov
fisubl
sub
into
dec
out
push
in
mov
dec
jno
movsb
dec
pop
sub
jno
push
cmpsl
cmpsl
aam
test
in
push
or
int3
stos
jne
lcall
and
mov
mov
jl
stc
ret
cltd
dec
xor
xor
icebp
call
fstps
repnz
mov
sub
dec
cmp
test
movsb
or
xchg
cmp
call
xor
lds
and
rorl
fs
sbb
mov
or
pusha
cmpsl
inc
push
faddl
lret
mov
imul
xchg
testl
jg
insl
test
bound
push
icebp
xor
inc
aaa
ljmp
bnd
ja
fmul
lret
jnp
jno
mov
cmp
adc
loop
push
xchg
jmp
fistpl
sahf
inc
xor
fcomps
add
gs
sub
inc
out
jl
imull
jp
adc
xor
js
clc
aad
xchg
add
jbe
icebp
loope
movsl
cmpl
jo
and
testl
add
add
rorb
scas
mov
mov
imul
and
xor
add
xor
add
mov
xor
xor
pop
jmp
ja
scas
test
fldenv
lods
aas
xchg
sti
fs
mov
cmp
mov
xchg
xor
or
lods
push
ret
cmp
mov
shlb
sub
shl
jnp
fisubl
mov
push
xor
pop
dec
sbb
daa
and
sbb
mov
xchg
xor
or
cltd
xor
test
imul
adc
sub
cld
pop
aas
decb
stos
xchg
xchg
cmp
sbb
mov
hlt
and
mov
xchg
movsb
adc
cld
cli
fcompl
dec
dec
jg
gs
sbb
adc
sub
xor
inc
inc
xorl
ja
xor
fistl
lods
out
daa
sub
cmpsb
popf
push
repnz
call
in
test
jecxz
push
fidivl
bound
shll
stos
ss
icebp
popa
paddd
dec
jmp
fucomi
sbb
xlat
stc
and
int
xor
int
pop
test
cmp
out
movzbl
and
xor
bound
js
sti
jbe
and
dec
push
pop
sbb
xchg
fildl
pop
int
xor
add
inc
cwtl
sahf
xchg
add
inc
or
mov
push
cmp
inc
in
je
xchg
cmpsl
subl
mov
addr16
mov
xchg
mov
sahf
jmp
add
xchg
cld
mov
repnz
call
out
loope
dec
cli
mov
clc
pushf
mov
icebp
mov
negl
dec
aad
and
pop
fldenv
lret
xchg
xor
jp
mov
imul
xchg
lahf
test
movb
adc
cwtl
jne
addr16
dec
out
addl
or
push
sbb
in
mov
cltd
dec
jne
add
popf
or
pop
imul
mov
lcall
ret
adc
adc
jb
adc
lods
cmp
pop
outsb
mov
outsb
fs
icebp
push
aaa
in
mov
test
mov
mov
lock
test
lea
nop
mov
dec
roll
jge
inc
mov
cmpl
loope
sahf
or
out
inc
mov
je,pn
nop
jmp
ljmp
add
add
rcrl
addr16
movsl
push
in
in
push
inc
in
inc
jmp
and
and
xchg
xchg
out
dec
dec
and
shrl
jp
inc
retw
xchg
lods
jo
add
cli
xor
hlt
and
or
push
cmp
push
cwtl
sbb
icebp
and
pop
mov
cmpsl
jno
adc
adc
dec
popf
dec
adc
adc
lahf
mov
xchg
and
fiaddl
push
mov
sbb
mov
add
movntq
out
ret
aas
cmp
stc
adc
div
mov
shr
imul
sub
xor
cmp
jb
movl
movl
movl
movl
movl
mov
mov
or
mov
or
mov
sub
mov
add
or
mov
mov
add
and
xor
div
mov
xor
xor
or
xor
cmp
jae
push
movl
xor
movl
movl
movl
mov
mov
div
mov
mov
mov
sub
add
imul
xor
jmp
jmp
fdivr
stc
stc
jmp
mov
lds
and
lds
inc
sti
scas
mov
int3
call
inc
addl
ja
mov
cs
cmpsb
movsl
push
lods
adc
or
stc
sub
mov
popf
mov
negl
xchg
jnp
out
jbe
mov
call
shll
sub
out
jle
xor
adc
xchg
or
fsubp
daa
push
pop
imul
jmp
jno
xchg
cs
clc
xchg
inc
cmpsb
mov
add
dec
scas
pop
inc
push
mov
xor
push
or
lods
call
pop
cmp
mov
jno
mov
push
or
mov
sbb
and
jl
shll
divl
mov
add
cmc
sub
cmc
cmc
rcrl
and
push
lea
enter
jecxz
jl
sbb
push
pushf
pushf
push
pop
mov
or
bound
jecxz
pop
sbb
pusha
enter
out
fcmovb
je
and
mov
dec
ret
loop
dec
push
mov
xchg
or
mov
push
sbb
mov
in
inc
imul
leave
and
jge
imul
ret
sbb
icebp
and
mov
pop
mov
dec
out
pop
push
hlt
loope
xor
shl
ret
call
insl
pop
mov
inc
ret
sub
in
lret
sbb
inc
cs
or
push
sbb
mov
outsb
sbb
popa
fsubs
mov
jle
jnp
popf
jnp
inc
loop
cmp
xchg
shll
adc
mov
movb
dec
das
mov
mov
push
js
mov
fwait
and
and
xor
es
ss
mov
gs
jle
add
and
mov
xchg
or
xor
insb
inc
insb
in
jmp
cmp
jne
add
pop
pop
push
mov
popa
cmp
cmp
pop
mov
dec
int3
inc
aas
mov
out
xchg
xchg
jb
and
jno
mov
sub
imull
std
movsl
cmp
subb
das
sub
scas
pop
cli
jns
das
arpl
xlat
loop
xchg
cwtl
test
cmp
into
bound
pavgb
dec
aaa
sbb
mov
fidivrs
mov
sub
lds
sbb
aam
and
add
or
push
inc
mov
mov
and
sub
shlb
movsb
loop
mov
push
icebp
test
push
xchg
inc
sbb
push
adc
mov
fwait
adcl
xlat
cld
into
xor
sbb
aaa
iret
insb
xlat
mov
cmpsb
popa
xchg
dec
pop
fstp
das
dec
in
mov
or
fisttps
inc
pop
mov
cltd
lret
or
jg
rol
lcall
mov
add
sbb
test
rorb
add
sub
mov
div
mov
xor
div
mov
imul
mov
mov
sub
mov
mov
mov
mov
mov
jmp
jl
cli
cmp
inc
add
inc
jo
mov
sub
inc
xor
lcall
gs
cmpsb
rolb
pop
adc
mov
push
daa
xchg
jae
leave
cmpsl
repnz
fwait
jo
mov
or
mov
mov
jne
stos
into
mov
icebp
xchg
sbb
stos
cltd
call
mov
stc
sub
enter
xchg
int
pop
sub
or
add
and
and
pop
xor
pop
xchg
lock
cs
and
mov
xor
adc
outsl
sahf
pop
test
outsb
vmovaps
pop
sqrtps
out
ret
fdivrs
mov
mov
andb
out
ljmp
jne
cmp
mov
daa
xchg
add
push
xchg
xor
and
rcrl
pop
out
ret
sub
xchg
pop
push
or
sahf
inc
mov
xchg
loope
mov
out
lcall
dec
and
addb
cmp
out
jg
mov
rclb
cmp
repz
sub
sub
mov
data16
divl
das
or
dec
in
dec
add
push
push
enter
push
mov
adc
and
jle
cwtl
xchg
cltd
cmp
fsubrl
mov
xor
incl
in
jo
ss
loope
xor
jb
mov
andb
push
mov
xchg
fadds
insl
aad
mov
in
or
addl
jl,pn
fmull
outsb
les
or
mov
add
cmp
loopne
push
inc
push
into
lret
jg
jne
clc
fstpl
ret
xchg
aaa
das
inc
add
jg
and
test
aaa
nop
sbb
std
fs
fstpl
add
shrb
jae
or
into
xchg
daa
dec
push
jle
mov
add
fstl
cld
add
add
and
dec
sub
les
xchg
ds
jnp
cmp
lods
xor
shlb
arpl
leave
adc
or
imul
push
iret
jns
ret
inc
scas
lods
mov
fnstenv
cmp
lea
loopne
push
pop
xchg
push
mov
dec
or
js
inc
sub
cli
mov
xchg
sbb
add
scas
test
and
push
cmc
pop
sbbb
sbb
and
pop
mov
jns
or
lock
das
cmp
xchg
pop
dec
loope
pop
push
test
hlt
shll
dec
inc
loop
pop
cmpsl
sbb
sub
and
jbe
aad
mov
inc
cli
sub
pop
out
cld
xchg
push
push
shll
pushf
call
xchg
xor
ret
jns
shlb
xor
and
push
mov
xor
imul
and
mov
xor
imul
mov
jmp
add
mov
mov
das
mov
mov
mov
and
outsb
dec
sahf
stos
cmp
push
lods
pop
call
ret
adc
and
rorl
mov
loop
aam
loop
ret
fstpt
std
out
or
jmp
dec
mov
in
je
out
ljmp
cmp
bound
sbb
cmp
cmc
out
push
outsl
loop
notl
pop
xchg
sub
mov
int3
out
mov
in
ja
adc
mov
fbstp
sbb
xor
ds
aaa
scas
adc
push
cmpb
sbb
imul
xchg
cmp
orb
push
cs
mov
pop
flds
cmpsl
ljmp
stos
fdivl
repnz
lahf
cltd
push
cli
or
push
pop
mov
jp
push
les
mov
in
mov
sarb
mov
inc
dec
arpl
dec
test
mov
sbb
push
dec
push
aam
scas
pop
test
jg
push
jle
fsub
mov
adc
inc
fiadds
outsb
cmp
sub
cmp
inc
pusha
lcall
adc
add
mov
adc
push
sbb
cli
aaa
xchg
and
push
loop
cltd
pushf
rorl
adc
add
inc
adcb
pop
jbe
push
pop
sbb
sahf
pop
xchg
sbb
fstpl
sub
fcom
mov
movaps
push
push
inc
xor
inc
add
dec
pop
inc
dec
cmp
or
sub
mov
cltd
mov
add
inc
imul
rorb
shl
xor
or
cmp
mov
adc
add
push
fistpll
sarl
cmp
fucom
cmp
sub
ja
mov
lret
das
sub
fldcw
cmpsl
adc
mov
jecxz
xor
push
adc
push
cmp
xchg
push
and
jmp
loopne
fistpll
dec
sbb
or
jns
push
lods
scas
add
mov
mov
scas
repz
popf
inc
hlt
push
scas
fbld
inc
sbb
cld
push
fstpl
adc
adc
cmp
xor
sbb
inc
ret
sahf
jno
adc
add
bound
aam
xchg
jg
pop
test
pushf
cltd
push
fidivs
jge
add
lret
jge
mov
cmpsl
mov
jno
aad
bound
sahf
mov
in
adc
std
lret
xchg
or
inc
aad
xor
pop
jp
psubsb
push
inc
dec
rcll
test
cwtl
out
jb
jae
lcall
xor
nop
add
out
xchg
sbb
push
pop
cld
shlb
fs
jg
ja
push
sar
xor
mov
cmp
dec
xchg
sbb
scas
jl
mov
jmp
cmp
jbe
jne
lret
test
add
mov
mov
add
and
xor
div
xor
or
xor
cmp
jb
pop
movl
jmp
and
subb
mov
enter
xchg
sti
xchg
jl
mov
mov
mov
xor
adc
add
ljmp
imul
and
clc
push
shrb
sbb
pop
out
and
out
clc
jnp
mov
int3
out
gs
pop
ret
push
push
push
add
lret
ljmp
inc
mov
adc
cmp
movsl
add
mov
pop
mov
fs
add
cmpsb
add
fs
adc
and
punpckhbw
pop
icebp
jns
mov
xor
dec
pop
rorl
fst
adc
push
fcompl
jge
mov
test
cmp
in
xchg
gs
cmp
imul
sub
sub
or
mov
mov
daa
pushl
xor
mov
xchg
dec
jmp
xor
sub
into
mov
popa
and
imul
cmp
lahf
inc
fcmovb
int3
sbb
popa
jle
add
std
outsb
pop
das
insb
xor
sahf
inc
jl
and
fistps
dec
dec
shll
sbb
pop
mov
aas
pop
xor
in
mov
pop
push
dec
cmp
xor
push
fists
jo
push
add
sbb
lahf
out
enter
jo
cmp
fsubrs
jmp
pop
xchg
inc
jo
xchg
js
repnz
insb
push
sbb
cmpsl
cwtl
aaa
and
in
lcall
push
inc
cwtl
mov
pusha
xor
jbe
pop
aad
cmp
pushf
jg
add
lds
gs
mov
jns
fidivrl
or
push
inc
mov
js
loop,pn
inc
sub
addr16
jecxz
cmp
lret
aaa
cli
ljmp
pop
insl
pop
aas
mov
aaa
shll
push
addb
ficoms
cld
jns
sub
fwait
add
cltd
mov
sti
cmp
sbb
cmp
pop
int
inc
push
out
clc
lret
sbb
mov
pop
movsb
lcall
jmp
test
pop
sbb
xor
js
mov
jae
movsb
dec
fbld
sub
shlb
sarl
inc
lret
fldenv
or
adc
clc
lret
movsb
shr
std
sbb
inc
ja
and
push
leave
icebp
push
insb
rol
fwait
test
jbe
dec
xchg
clc
in
sbb
push
lds
imul
test
shr
test
mov
mov
push
jmp
cmp
int3
push
jbe
cmp
adc
bound
pop
xchg
push
xchg
mov
push
inc
push
out
add
inc
pushf
lahf
xor
push
dec
das
adc
sbb
adc
adc
into
ficomps
xchg
lods
cmovnp
xchg
lar
jge
aas
dec
xor
adc
jmp
cld
loope
inc
or
add
mov
mov
or
mov
or
add
mov
or
mov
xor
xor
movl
mov
mov
or
imul
mov
mov
imul
xor
xor
or
xor
mov
sub
mov
jmp
mov
sub
sub
scas
out
cmp
mov
mov
mov
dec
popa
rorl
mov
cmp
jle
hlt
cmp
jmp
or
dec
in
outsb
pushf
lcall
icebp
fyl2xp1
push
mov
shlb
aas
ret
inc
mov
jb
mov
add
sub
cmpsw
sbb
mov
xchg
lcall
sbb
ljmp
dec
lea
les
push
pushf
push
bound
sub
cmp
or
adc
mov
test
pop
nop
cmp
cmp
out
dec
xor
inc
mov
gs
mov
push
fwait
cmp
xchg
scas
in
cmp
inc
jno
movsb
pop
dec
cmp
xlat
fwait
xorl
adc
les
sbb
jmp
in
out
ss
jmp
and
popf
repnz
idiv
mov
jmp
mov
aas
cmp
pop
push
mov
jnp
data16
push
in
jbe
pop
cmp
push
dec
adc
jmp
mov
neg
xchg
pop
call
xchg
sub
sub
pop
in
adc
jo
iret
push
mov
push
aam
pop
push
movsb
pop
insb
insb
jmp
inc
xchg
jmp
ret
jne
dec
xor
inc
pop
scas
pop
adc
and
mov
push
shl
cmp
adc
mov
pop
mov
mov
sub
cmp
aad
testb
add
and
or
dec
mulb
xchg
cmpsl
lret
cmp
mov
xchg
jbe
inc
mov
xchg
xor
mov
pop
mov
in
cmp
inc
jl
stos
inc
out
push
inc
fstpl
pop
pushf
pusha
pusha
jge
mov
mov
inc
mov
fcomps
mov
cld
jmp
rclb
sbb
fnsave
push
add
adc
js
sub
and
mov
mov
sub
subb
cmpsl
jecxz
insl
mov
imul
ds
sub
or
xor
pop
jmp
mov
cmp
lcall
xor
xor
xchg
mov
jge
adc
aad
mov
jg
js
lods
icebp
cwtl
les
mov
push
inc
cld
out
in
inc
add
je
jecxz
add
pop
aam
inc
and
lret
pusha
iret
imul
iret
push
cmpsl
ds
jne,pn
loop
xor
mov
scas
fwait
dec
inc
inc
sbb
shlb
int3
pusha
shlb
pop
and
or
aas
movsl
kxnorw
jge
cmp
cmp
lds
fldl2t
in
add
adc
jns
jnp
mov
jo
jecxz
mov
push
sub
rolb
outsb
jno
push
xor
iret
imul
mov
test
rolb
stos
jp
out
cmp
cmp
mov
mov
xor
sub
mov
mov
mov
mov
mov
imul
and
mov
sub
lea
mov
jmp
fnstenv
subb
dec
sbb
js
cmp
xchg
mov
jge
cmpl
mov
xchg
pop
es
push
mov
pusha
pop
jg
inc
sbb
mov
jp
push
lahf
orb
mov
sub
dec
mov
jne
repnz
insb
jae
fbld
loop
mulb
jmp
jo
arpl
repz
mov
push
outsb
mov
mov
add
push
cmp
es
pusha
fisubrs
cmp
mov
sbb
jmp
xchg
repnz
fcomps
sub
inc
aam
in
add
mov
popf
fdivs
sti
popf
push
jg
mov
inc
adc
pop
std
add
pop
cmpsl
mov
push
insb
dec
pop
xchg
xor
sbb
test
mov
out
std
loope,pt
aam
addr16
adc
pop
popa
enter
xchg
jns
mov
mov
xchg
fisttpll
imul
jmp
lods
fstl
ficoml
sub
sub
mov
push
lret
loop
inc
jge
add
jo
adc
pusha
repz
ss
adc
mov
test
push
add
push
xchg
icebp
scas
pushf
xor
mov
xor
scas
in
mull
add
mov
stc
push
hlt
jae
adc
push
sbb
xchg
pushf
cmpsl
out
pop
add
xor
int3
addb
add
fs
push
or
icebp
pop
sbb
mov
dec
in
mov
inc
push
in
push
dec
or
shll
cmp
test
test
pop
add
sbb
or
cs
push
jmp
sub
or
sbb
add
mov
dec
stos
add
lea
push
sub
cltd
push
add
in
test
cmc
inc
dec
int3
jae
subb
push
add
out
xchg
cmp
push
loope
test
lret
sti
int3
mov
dec
xor
ret
xor
loop
gs
scas
fwait
add
dec
or
rcrl
test
add
pushf
dec
sub
int3
sub
rcr
dec
lret
outsl
stc
lods
or
jg
and
add
jne
sub
adc
xchg
xor
mov
out
mov
fs
and
rcll
lds
mov
sbb
jge
mov
testb
jmp
push
or
mov
jns
sbb
push
and
roll
add
jno
and
filds
push
lods
sbb
pop
insb
outsl
jae
outsb
pop
leave
aad
xchg
push
xlat
movsl
add
sub
add
mov
test
enter
ficomps
xchg
movsl
dec
jb
jne
movsb
test
stc
stos
fsts
or
scas
cld
jb
mov
inc
and
leave
mov
adc
inc
inc
and
xor
sub
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
and
or
mov
mov
or
imul
imul
mov
lea
mov
movl
mov
mov
shr
and
mov
and
xor
div
mov
xor
xor
lea
mov
movl
mov
mov
jmp
movsl
jmp
add
jl
scas
cmp
nop
mov
mov
xor
daa
out
jbe
leave
sub
stc
push
pop
mov
call
rorb
repz
push
mov
dec
sahf
xor
lret
lcall
pop
inc
pop
std
dec
sti
hlt
mov
inc
jge
data16
mov
incl
cmp
loope
mov
jo
test
mov
xchg
and
pop
int
xchg
sub
std
shll
mov
mov
outsb
loop
adc
mov
pop
lods
shlb
push
ljmp
mov
mov
fists
aad
or
and
out
cmp
lret
out
adc
and
shll
inc
add
dec
notb
and
cmp
in
arpl
loope
add
or
xchg
xlat
sub
cmp
mov
inc
popf
xchg
dec
outsl
mov
pusha
popf
jb
jnp
jge
sbb
sub
adc
adc
notl
add
into
lock
fmul
movsl
adc
pop
in
mov
sbb
mov
jo
ficoml
repz
sbb
daa
data16
aam
mov
in
call
or
je
sbb
xor
mov
clc
sbb
jnp
scas
enter
adc
jb
add
lea
sahf
ds
ret
cmp
cli
push
cmp
mov
popa
or
ljmp
fsubl
outsb
into
lea
pop
and
jmp
nop
xchg
inc
test
mov
mov
push
out
mov
aam
rcll
loope
mov
sub
inc
xchg
mov
js
ret
mov
repnz
xor
mov
cld
jl
cwtl
test
fbld
mov
push
dec
jno
jae
dec
mov
nop
pop
in
jmp
aam
sub
mov
ret
xchg
lcall
or
lahf
sub
xor
add
pop
aad
fwait
adc
xor
fildl
cmc
sti
and
lock
shll
mov
jno
xor
dec
int3
in
arpl
call
lods
cmp
outsl
ja
lret
or
dec
rolb
add
sahf
adc
xor
and
push
fprem
push
xor
in
jge
das
iret
inc
mov
popa
nop
stos
mov
sub
ljmp
test
icebp
jne
cmpsb
lods
adc
ss
mov
imul
xor
mov
or
cmpsb
push
dec
stc
setp
xchg
mov
dec
out
pop
push
push
or
popf
adc
xchg
adc
out
enter
in
sarb
xchg
mov
clc
stos
push
mov
leave
and
push
ljmp
cmp
mov
pop
test
imul
sbb
sub
push
int
pop
fiadds
push
cs
sub
xchg
pop
adc
es
add
rorl
add
and
sub
mov
mov
mov
xor
shr
and
add
mov
mov
mov
imul
mov
sub
and
imul
and
sub
mov
movl
movl
jmp
jne
arpl
ja
jge
in
daa
cmc
cmp
xchg
mov
mov
mov
insl
pop
sbb
popf
inc
test
out
cs
addr16
push
test
shr
cmpsb
inc
push
repnz
xlat
and
cmp
jne
pop
mov
push
push
bound
call
push
xchg
ficoms
shr
div
popf
and
inc
dec
in
pop
faddl
cmp
outsl
mov
pop
mov
cwtl
lret
and
fidivrl
inc
mov
jp
fadds
sub
out
dec
mov
and
sbb
repnz
inc
xchg
xchg
add
mov
or
repnz
cwtl
int
mov
mov
jge
aas
fistpl
ret
lret
dec
sub
pop
ljmp
imul
repz
jns
clc
jo
in
stc
adc
mov
movsl
add
inc
dec
mov
movsb
mov
mov
push
dec
andb
imul
cmpsb
or
out
xchg
adc
rcrl
cli
clc
sbb
ljmp
btc
push
addr16
testl
adc
xchg
mov
and
adc
adc
jb
std
lods
cwtl
pop
mov
mov
sbb
mov
mov
pop
adc
pop
and
xchg
jmp
leave
data16
mov
push
loopne
dec
pushf
jmp
fwait
and
sbb
iret
mov
sub
xor
sub
test
scas
sub
mov
je
pop
cmp
and
push
imul
aas
pusha
inc
mov
je
mov
xor
mov
cmpsb
repnz
out
pushf
lret
mov
sti
mov
fisubl
out
pushf
push
sbb
and
enter
ja
sub
xchg
mov
mov
dec
adc
insl
dec
xchg
jbe
hlt
push
das
jl
mov
iret
daa
or
cmp
cld
scas
mov
leave
int3
push
scas
xchg
xchg
out
imul
pushf
add
xchg
scas
sbb
lcall
test
mov
sbb
add
shlb
jg
push
cmp
mov
shlb
and
adc
jo
loopne
xor
dec
sbb
and
cmp
mov
inc
push
jmp
sbbl
pop
mul
xchg
cltd
add
xchg
mov
push
repnz
inc
outsl
mov
sti
mov
inc
xor
or
mov
or
dec
push
cmp
cltd
loope
aad
add
cmpsl
lret
sub
imulb
pop
sbb
jle
push
ljmp
ret
mov
iret
xor
into
aaa
xchg
mov
mov
int3
rclb
or
scas
pop
xchg
sahf
mov
dec
ret
and
adc
adc
icebp
xchg
mov
popa
push
orb
orb
pop
aad
insb
sti
fmuls
into
push
jns
adc
add
mov
mov
and
mov
or
and
mov
sub
mov
sub
mov
sub
mov
movl
mov
jmp
push
jnp
cmpsl
addr16
stos
loopne
sub
ja
popa
pushf
mov
mov
imul
stc
jnp
cmp
push
aad
add
enter
andb
outsb
shl
sahf
andb
lods
jmp
or
cmp
mov
js
leave
xorl
ja
lea
xchg
test
cmp
stos
ret
mov
adc
cmp
lds
pop
dec
cmp
sbb
stos
mov
popf
push
fwait
inc
addr16
ljmp
daa
sbb
mov
pop
push
outsb
pop
insl
pop
adc
dec
add
dec
jle,pn
xor
ret
and
xchg
je
fwait
lret
pop
jg
dec
loopne
mov
jecxz
aad
imul
pop
fidivrl
fdivr
jp
sbb
jle
cld
jle
stos
pop
nop
and
mov
popa
test
orb
xlat
mov
or
inc
loop
and
pop
aam
cwtl
push
ds
loop
sub
scas
fs
dec
cmp
add
adc
nop
add
pop
lcall
rolb
xor
or
mov
mov
out
sub
and
lods
daa
mov
sub
push
popf
test
daa
push
xorl
mov
xor
in
jp
test
inc
ss
xchg
fadds
inc
jecxz
sti
cltd
mov
xchg
cmp
jae
in
and
outsb
jg
mov
mov
cld
mov
and
push
sbb
and
test
push
add
pop
cmp
ja
mov
mov
lock
push
jg
mov
lods
dec
in
mov
mov
jmp
outsb
sarb
mov
push
sbb
sbb
pop
pop
fildll
add
dec
sti
insl
dec
fdivrs
outsl
sub
jle
sbb
test
cmpsb
mov
mov
lods
lock
mov
stc
shl
arpl
push
xlat
push
outsl
sbb
pusha
pop
xchg
add
pop
xor
aaa
pop
and
int3
adc
in
ds
dec
ja
jb
dec
andb
dec
mov
sbbl
sub
sarl
imul
stos
or
jge
mov
fs
inc
arpl
gs
or
scas
push
ds
je
sbb
inc
jae
jl
xor
lcall
xchg
dec
arpl
or
push
sub
cmp
cmp
or
movsb
cmp
push
int3
jbe
cmpsl
or
out
jg
pushf
test
mov
add
sub
rclb
imul
imul
faddp
dec
mov
mov
repz
cmp
aam
inc
fcmovb
jmp
mov
pop
in
jbe
mov
cmp
cmp
xor
loope
out
out
iret
daa
jge
dec
sub
jmp
mov
out
lods
out
pusha
pop
lcall
jne
bound
lods
loopne
idivl
pop
mov
pop
adc
add
stos
test
in
fs
aam
xchg
dec
mov
test
int3
cmp
int
mov
or
add
div
mov
sub
mov
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
push
add
push
adc
push
push
call
push
jmp
mov
mov
outsl
call
movsb
mov
mov
test
adc
xchg
jle
sub
adc
dec
dec
call
arpl
fldl
add
push
fcmovne
movl
sub
dec
and
sbb
xor
gs
in
lcall
aas
fiaddl
dec
repz
inc
xchg
mov
add
inc
les
xchg
leave
outsb
inc
test
xchg
or
jno
jno
inc
sbb
pusha
movsb
mov
lcall
push
ss
add
ljmp
cmp
and
lods
dec
sahf
ds
cmp
pop
sub
xchg
cwtl
push
int
pop
dec
aad
push
xchg
mov
jl
inc
pop
sbb
xchg
add
inc
or
add
pop
shl
test
mov
jne
movsl
movsl
jno
cmp
mov
std
fstpl
popf
lret
shll
icebp
add
xchg
dec
or
mov
insb
test
movsb
xor
lret
mov
mov
mov
in
jle
inc
jle
or
mov
jmp
test
inc
add
ret
pusha
scas
loop
inc
push
cmp
incb
rcrl
pop
jno
sarb
push
mov
xlat
cmpsl
and
xchg
inc
outsb
xor
ljmp
xorb
js
sub
into
xchg
xor
cmp
mul
scas
repz
adc
jp
ljmp
mov
push
pop
lret
xor
imul
dec
dec
cmpsb
pop
aam
cmc
call
stc
inc
push
mov
cmovne
mov
in
or
cld
arpl
hlt
mov
int3
adc
sub
ljmp
pop
shl
sbb
pop
push
fstl
ljmp
pop
sub
or
in
pop
cmpl
jp
popa
loope
bound
inc
mov
sbb
push
loopne
xor
jb
xchg
push
or
xchg
mov
add
sub
sub
jne
pop
cli
inc
testl
out
loope
in
mov
mov
cmpsl
fwait
leave
out
dec
out
jno
mov
xchg
loopne
rcrb
stos
pushf
dec
mov
dec
cltd
pop
stc
fstpt
xchg
movsb
lock
mov
and
mov
mov
movsb
lea
inc
ss
sub
jnp
dec
cmp
imul
push
in
mov
cli
add
in
and
or
xchg
jnp
pop
ficompl
mov
inc
stos
mov
push
cs
decb
leave
adc
movsl
dec
es
sbb
aam
dec
je
ljmp
adc
xor
push
dec
rcll
xchg
jecxz
insl
jne
sbb
testb
mov
cmp
or
lods
mov
dec
aas
xchg
mov
mov
lcall
in
ja
pop
jp
loope
xchg
js
popa
sti
sbb
shrl
loope
int3
loopne
sub
adc
pop
sbb
fndisi(8087
or
lret
cmp
or
adc
and
mov
push
ds
aas
dec
inc
loopne
sbb
add
add
test
mov
add
push
adc
push
push
call
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
xor
div
mov
mov
push
pop
add
and
xor
xor
or
mov
mov
imul
mov
imul
mov
or
xor
div
add
mov
mov
imul
mov
add
xor
mov
xor
lea
push
mov
mov
or
add
push
mov
xor
mov
or
xor
mov
mov
or
xor
add
push
mov
or
lea
call
mov
xor
sub
cmp
jne
mov
mov
or
mov
mov
or
mov
or
lea
lea
push
mov
or
imul
mov
xor
sub
push
add
jmp
dec
xchg
cmp
mov
pop
inc
ja
xor
lds
inc
cltd
loopne
xor
push
lds
mov
in
popf
mov
lock
xchg
ja
xchg
push
xor
fistps
xchg
inc
lods
int3
pop
lea
xchg
jno
iret
mov
movsl
xor
xor
fwait
out
jle
loop
scas
fs
popa
xchg
enter
out
cmp
cmp
fidivrl
popa
mov
ds
mov
adc
and
cltd
and
mov
das
sub
jb
fnop
fisttps
cmpsl
scas
lds
mov
fldt
pop
xchg
sbb
dec
mov
add
jb
out
jg
repnz
ficompl
jbe
xchg
cltd
xchg
inc
lea
lcall
cmp
inc
inc
jns
fstcw
xchg
andb
jne
rolb
dec
cmc
push
test
in
faddl
aas
or
inc
iret
xor
push
loope
cwtl
clc
pusha
sbb
inc
mov
clc
or
enter
pop
mov
jecxz
sub
dec
es
push
and
stos
pop
mov
popa
or
test
inc
rorl
cmp
and
pop
bound
rclb
dec
pop
mov
fdivs
mov
sarl
mov
mov
add
push
repnz
pusha
cmp
or
imul
lcall
and
jb
cmp
pop
out
outsb
and
sub
pushl
pop
jns
adc
mov
jl
sti
add
adc
mov
fs
add
lcall
in
out
mov
or
movsl
pop
push
and
das
cmp
dec
cli
hlt
mov
sti
lcall
mov
inc
and
xorl
add
push
cmpsb
movsb
je
adc
das
dec
or
xchg
dec
shl
cmp
push
pop
stos
add
int
push
jnp
mov
xchg
mov
cwtl
stc
and
test
iret
mov
mov
sbb
inc
pop
stc
ds
fidivs
daa
fdivp
sbb
mov
mov
pop
push
push
fists
das
cmp
lock
test
or
pop
add
fnclex
das
and
fcmovu
inc
mov
ret
gs
icebp
or
hlt
aas
cmp
and
call
out
push
stc
sub
cli
enter
mov
adc
and
lds
pop
pusha
xor
mov
pop
jbe
jmp
ret
ss
mov
rcll
jmp
sub
dec
cltd
rcr
fst
adc
je
testb
scas
or
adcb
gs
nop
icebp
jle
inc
and
xchg
loop
jbe
xchg
add
loopne
ja
jne
ljmp
movups
lret
push
loope
ss
fnsave
dec
hlt
inc
es
xor
adc
in
insl
shlb
es
scas
mov
or
cmp
sbb
cmp
inc
call
insb
push
mov
mov
xor
sub
xor
mov
div
mov
mov
sub
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
jmp
aas
or
mov
pop
hlt
mov
cmp
mov
mov
mov
in
pop
ret
leave
out
or
add
mov
in
push
push
adc
pop
sbbb
jp
addl
push
mov
push
push
hlt
jg
scas
add
lcall
jno
ror
insl
fstpt
cmpsb
dec
fcompl
push
cmp
faddp
adc
mov
int3
fsubrs
fs
xchg
xor
xor
sub
xchg
cmpsb
fs
movsl
int3
imul
mov
pop
mov
pusha
nop
loop
xor
lcall
push
adc
adc
xchg
mov
pop
call
jg
out
mov
cmpsb
ja
stos
sbb
fadds
dec
sbb
inc
sub
add
iret
cmp
ret
roll
xchg
loopne
cltd
out
dec
jne
in
in
push
aad
sbb
outsb
cmc
ja
out
out
fs
push
dec
pop
or
sub
sub
subl
push
lahf
pop
cmp
sub
popf
or
in
dec
repz
aam
das
dec
dec
outsl
cmpsl
adc
out
mov
dec
mov
pushf
jecxz
jnp
xchg
shlb
jbe
pop
adcb
jns
inc
xchg
inc
xor
push
sahf
jp
mov
stos
arpl
lahf
popf
frstor
jno
test
cli
fsubs
mov
pop
ds
sbb
fstpl
push
data16
fldcw
and
sbb
xor
pusha
scas
pop
daa
sub
push
inc
xor
fcoms
sar
jl
dec
inc
or
push
iret
and
mov
mov
jg
xchg
sbb
sub
sub
test
xchg
scas
aaa
aad
dec
xchg
and
andl
hlt
cld
lds
push
and
outsl
ds
inc
xor
cmp
sti
jae
jp
push
sbb
insl
in
aas
jmp
sub
bound
test
out
xchg
fwait
jne
shll
outsl
jnp
jecxz
loope
loope
js
stc
inc
pop
mov
fstpl
xchg
add
cld
or
inc
loopne
mov
dec
adc
and
scas
ss
sub
xchg
outsb
mov
adc
outsb
or
fldt
test
inc
mov
int
data16
inc
jmp
adc
cld
fs
repz
icebp
test
dec
or
inc
mov
push
bnd
imul
ret
mov
ljmp
popf
int3
iret
add
lods
ss
repnz
sbb
push
call
dec
shlb
push
pop
and
out
hlt
or
in
adc
test
mov
pusha
rcl
add
int3
cld
fisubl
push
movsb
add
aas
fidivrl
mov
mov
xor
adc
aas
mov
and
cwtl
movsb
shl
movsl
fisttpll
mov
js
inc
jmp
fs
mov
pushf
ss
xchg
ds
cmp
jge
imul
fs
add
push
lods
mov
xchg
clc
xlat
mov
jmp
psllw
jno
pop
stos
cmp
mov
mov
test
mov
adcb
push
inc
out
ret
dec
loop
push
dec
sub
sub
mov
and
fsub
mov
scas
inc
scas
xor
pop
cmc
jle
jmp
lcall
jmp
loope
xor
xchg
and
gs
aaa
in
lret
fidivs
shrl
inc
frstor
mov
repnz
outsl
test
cltd
push
fwait
mov
xchg
clc
loopne
xchg
mov
xchg
unpckhps
sub
cmp
xchg
and
jmp
ja
inc
stc
stos
cmp
jnp
cmp
mov
mov
and
ffree
push
mov
mov
rcll
mov
or
int
int
sbb
les
push
movsl
fs
adc
rorb
lret
leave
cmc
and
in
clc
mov
push
jge
pop
and
data16
je
nop
incb
mov
xchg
xchg
dec
mov
daa
xchg
push
out
and
jg
sub
add
fadd
jle
mov
lret
mov
loopne
inc
cmp
pop
push
int3
sub
sub
fisubs
mov
sbb
and
les
sbb
add
push
shrl
mov
push
add
sbb
xor
loopne
addl
push
shll
pop
xchg
aas
faddl
xor
inc
mov
outsb
jbe
fcomps
adc
and
or
imul
add
dec
jne
mov
push
lods
fwait
cmp
movsl
ss
ja
dec
dec
or
cs
shrb
icebp
popa
jg
roll
mov
cmp
insb
jecxz
daa
insb
and
dec
mov
and
jmp
push
into
lcall
or
out
xchg
sbb
nop
divl
daa
add
push
aas
test
imul
inc
cwtl
lea
sbb
mov
inc
test
cmp
imul
sbb
repnz
or
and
fstps
jbe
jnp
add
rorl
ja
dec
pop
fdivrs
ret
out
icebp
jecxz
in
cmp
scas
and
leave
sub
adc
jge
sub
repz
mov
mov
ja
mov
push
imul
and
mov
inc
scas
fs
int3
sub
sub
or
mov
mov
add
rorb
cmc
adc
mov
sbb
mov
mov
call
shll
fildl
or
cwtl
and
je
inc
popa
and
xchg
dec
cmp
push
arpl
imul
add
xchg
fimuls
jo
dec
jne
lea
and
lcall
add
mov
push
push
cmc
stos
das
ja
and
imul
fidivs
in
fldt
lret
xor
cs
or
pop
cmp
xor
rol
es
push
sub
pop
imul
ffreep
int
or
fisubs
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
jmp
lea
mov
mov
pop
inc
push
xor
mov
jmp
mov
imulb
decb
mov
verr
mov
dec
aad
pushf
xor
shrl
popf
je
fistpll
adc
adc
mov
inc
push
out
sub
xlat
int3
scas
inc
mov
jo
orl
lea
aaa
jne
push
jnp
movsl
pop
scas
fst
out
popa
xor
lds
cmp
lods
les
mov
mov
jb
adc
add
int3
pop
fisubrs
mov
dec
mov
loopne
incl
imul
sbb
mov
es
inc
dec
rcrb
dec
lret
jb
sbb
loopne
out
mov
inc
and
mov
mov
lods
sahf
repz
jp
sub
pop
mov
ret
shrl
gs
mov
fstl
int
jmp
jb
adc
iret
aam
inc
xor
xor
and
push
push
int3
push
and
sti
xor
jbe
lods
adc
adc
addb
mov
ret
ds
sub
aaa
punpckhbw
pop
xchg
les
push
popl
pop
insl
movsb
fnstcw
push
punpckhwd
pop
and
lahf
jmp
out
loope
iret
rdpmc
ret
cmpsl
aaa
shll
xor
arpl
fcoms
mov
and
repz
gs
in
dec
push
shll
xor
stc
dec
mov
mov
xor
lock
mov
pop
pop
daa
adc
push
lret
imull
xor
addr16
fstp
mov
jo
movsl
jns
leave
imul
jae
xchg
jg
mov
mov
aas
adc
lahf
xchg
or
stos
mov
add
int3
lret
popa
sahf
int3
add
mov
fwait
xor
mov
sbb
jo
mov
test
fcmovu
int3
pop
jl
dec
xchg
lea
test
and
push
pushf
sbb
jae
adc
sbb
mov
xchg
cmp
in
mov
mov
outsl
cmp
es
or
pop
xlat
cltd
insb
rorl
push
cmpsl
lret
mov
add
lea
scas
mov
inc
rolb
push
ss
loope
cmpl
aam
and
andl
jmp
and
in
jns
mov
mov
push
lock
mov
shll
fstpt
shll
aaa
push
bound
mov
stos
dec
sub
ret
testb
adc
inc
popa
rolb
push
outsb
xor
in
xor
pop
test
push
jnp,pn
xor
and
mov
cmp
movzwl
lcall
sbb
dec
mov
outsl
aas
hlt
test
push
mov
fs
idiv
test
inc
mov
jmp
dec
cmp
dec
cmp
sub
mov
mov
sbb
jne
sbb
cmp
nop
negb
dec
aad
out
pop
mov
shrb
sahf
lahf
sub
in
fistl
pop
jae
pop
fs
in
jnp
cmpl
in
lds
nop
aad
xchg
loop
out
mov
mov
aad
push
rorb
sbbb
push
inc
rclb
mov
pop
mov
or
cmp
test
stc
imul
add
movsl
das
fstl
lahf
xor
lahf
mov
push
stos
mov
arpl
and
mov
cmp
cs
mov
out
or
cs
nop
push
cmp
or
push
fstpt
sti
mov
outsb
jecxz
jno
cmp
xor
pop
inc
xlat
jo
in
jecxz
or
jmp
dec
je
in
fbld
xchg
insl
jp
addr16
insl
cmp
pushl
pop
inc
xchg
sbbl
clc
push
mov
jb
or
pushf
enter
inc
mul
push
loopne
popf
mov
push
imul
or
insl
aas
shrb
test
gs
push
popf
movsb
and
stc
jecxz
in
rcr
or
getsec
ss
cltd
pop
aam
fmulp
mov
xchg
mov
jb
sti
clc
sub
ds
cmp
xor
das
pop
js
xor
stc
pinsrw
pop
int
push
insb
jbe
xor
xchg
inc
clc
xor
in
push
mov
jae
mov
popa
lock
push
lods
or
stc
jl
jae
in
xor
xor
and
rclb
fwait
aas
imul
or
bound
sbb
std
mov
jnp
in
lds
wrmsr
inc
out
add
fstps
shll
xor
fisubrl
and
cmpsb
int3
jecxz
cmp
out
ja
mov
cmp
adc
outsb
ljmp
out
dec
push
cli
push
jp
jbe
cwtl
lret
inc
das
sbb
fs
iret
jge
aas
cwtl
in
push
or
orb
sub
cmpsb
xor
jecxz
leave
inc
mov
mov
cmp
mov
inc
mov
cltd
cmp
push
icebp
scas
cmpsl
test
or
jb
cmp
jns
add
fcomi
jmp
mov
lods
iret
xchg
add
sub
mov
sub
pop
push
inc
xchg
pusha
in
bound
or
std
xchg
pusha
nop
push
mov
sbb
and
or
int3
xor
fistpll
jp
xchg
mov
inc
movsl
sub
xorb
sbb
mov
pop
mov
push
or
fwait
jnp
sbb
subb
ss
scas
xor
outsb
mov
mov
jg
inc
push
add
push
add
test
cli
or
xchg
test
xorl
sbb
mov
push
pop
xlat
xor
push
xchg
dec
jne
jle
cmp
scas
jmp
loopne
xchg
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
xor
sub
mov
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
mov
jmp
jo
fwait
push
mov
add
xor
mov
mov
add
lock
mov
inc
mov
xor
mov
xlat
pop
mov
or
sahf
push
scas
pushf
xor
sbb
mov
mov
icebp
int3
call
aam
add
roll
and
mov
sub
lds
adc
sub
jg
sbb
sbb
xor
in
push
add
loop
ljmp
jl
xor
add
mov
push
mov
lock
dec
test
xor
and
or
addr16
int3
testl
push
outsl
out
repnz
cmpsl
and
add
sti
inc
sub
sbb
and
cs
add
jae
add
subb
cmp
mov
mov
xchg
jns
shl
xor
jecxz
loope
leave
in
std
sub
cmpsl
push
mov
or
xchg
sbb
stos
inc
test
popa
call
xor
xor
fsub
shll
std
push
call
or
xchg
dec
mov
je
and
iret
aas
adc
inc
js
xor
push
sbb
cli
push
inc
mov
mov
adc
xor
icebp
or
in
jg
mov
pop
cli
outsl
jmp
mov
dec
mov
hlt
add
call
dec
fnstenv
xor
subb
loop
sbb
jne
pushf
in
add
push
iret
sti
xchg
out
lret
test
pop
mov
test
inc
fcomps
jns
jmp
jbe
mov
push
xor
repnz
fnstenv
sbb
int3
nop
or
cwtl
orb
adc
mov
jl
stos
je
aas
mov
cltd
xchg
mov
dec
insb
inc
sbb
and
add
sbb
sbb
pop
xor
int
in
fmull
mov
movmskps
push
sbb
adc
xchg
imul
mov
push
jg
push
ret
cli
inc
sahf
in
sbb
mov
pop
jecxz
outsl
std
xchg
icebp
sbb
cmp
test
popa
mov
js
iret
enter
and
test
jnp
push
sbb
imull
push
subb
and
jb
or
push
loop
fimuls
dec
add
sbb
sub
jbe
sar
je
fldl
lret
sbb
ret
pop
arpl
andl
and
jno
out
icebp
movsb
jg
or
jge
pop
cltd
jmp
sbb
test
mov
js
mov
test
mov
movsl
out
pop
mov
and
push
jb
push
sub
sub
xorl
out
arpl
push
mov
iret
jnp
push
pop
xor
jae
jmp
mov
pop
shll
xor
mov
mov
int
jo
addr16
or
ret
dec
xchg
mov
imull
pop
xchg
jnp
or
into
jne
rcrl
in
push
xlat
mov
outsl
mov
fdivl
cli
popa
jg
xlat
loop
or
je
in
and
out
pop
notl
insb
mov
add
add
xchg
xchg
rorb
ss
adc
test
push
repnz
rcrl
add
adc
inc
push
xchg
xor
inc
cmpsl
inc
test
mov
or
add
xor
and
mov
xor
mov
movl
movl
mov
mov
add
imul
mov
imul
xor
mov
mov
mov
xor
mov
div
push
xor
pop
sub
xor
div
mov
sub
mov
mov
movl
movl
mov
mov
imul
mov
imul
and
mov
mov
movl
mov
sub
or
xor
pop
leave
ret
push
mov
sub
jmp
movsb
sub
clc
mov
mov
inc
and
into
mov
mov
push
fildll
mov
ret
imul
inc
adc
mov
outsl
jbe
ret
call
rorl
out
fildll
movsl
adc
test
mov
pop
jecxz
inc
add
fadds
nop
ja
and
xchg
inc
mov
mov
sub
rclb
dec
iret
adc
and
pop
xchg
pushf
adc
jnp
xorb
leave
ljmp
inc
test
nop
shll
cmpsl
inc
dec
dec
xor
cld
mov
aas
rcl
xor
mov
add
test
pop
mov
fisubrs
and
vmovsd
sbb
adcl
arpl
faddl
iret
stc
inc
jb
jb
lea
push
int3
das
dec
lea
inc
mov
cmp
mov
clc
or
cwtl
mov
lcall
jae
mov
dec
pop
loop
inc
mov
push
lcall
xor
pushf
cmp
insb
cmp
rolb
or
jmp
add
icebp
mov
mov
pop
fstpt
lock
dec
lods
popa
push
stos
rolb
sti
int
jbe
sub
repnz
inc
test
pusha
notl
xchg
pop
mov
cmp
lret
pop
jp
dec
into
mov
movsb
xchg
test
sbb
mov
add
fisubrs
jo
outsb
xchg
ds
dec
std
test
jo
jne
add
sahf
sbb
pop
scas
filds
fdivrp
loope
out
sub
cltd
repnz
cs
fsubs
leave
ljmp
dec
imul
dec
xor
cwtl
sub
cltd
sbb
pop
shlb
lret
out
adc
sbb
cmpsb
ffreep
push
iret
jge
xchg
and
inc
icebp
push
mov
jo
cmc
mov
insb
dec
cmp
scas
fwait
mov
push
cld
insb
xlat
mov
dec
pop
push
sub
or
push
std
mov
ljmp
jbe
fdivp
into
imul
xchg
xchg
push
cs
mov
jp
fwait
pop
inc
in
fnstsw
inc
shrb
ss
pushf
xor
and
fnsave
rcrb
lret
dec
and
mov
mov
lcall
sbb
cmp
pop
jl
enter
push
mov
pop
lahf
in
scas
idivb
lods
pop
repnz
sub
test
pop
cmp
add
lock
mov
sub
clc
push
push
mov
xlat
adc
shrl
jecxz
fisttps
dec
sbbl
sbb
iret
lea
sahf
cmpsl
xchg
xor
dec
adc
pushf
popa
cs
add
fdivp
lcall
popf
insl
inc
push
in
rclb
dec
iret
cmp
inc
mov
idivl
cmp
xchg
fcomps
idivb
xchg
mov
fiaddl
out
iret
ret
insl
sbb
jl
add
xorb
jg
add
xchg
jns
ret
fwait
mov
outsb
mov
arpl
fidivl
lret
and
fisubrl
movsb
pop
jo
adc
xchg
xchg
stc
test
and
movsl
pop
lods
push
cmp
and
cmp
repz
int
adc
mov
xor
scas
mov
dec
ficompl
xlat
movq
mov
pushf
cmp
in
mov
outsl
jb
inc
xchg
xor
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jo
test
lods
mov
mov
add
loopne
xchg
mov
mov
xchg
jg
pop
mov
lret
insb
cmpsl
gs
mov
inc
ret
xlat
push
rcrl
jb
mov
push
mov
shll
sbb
sub
xchg
pushf
ja
push
push
mov
popf
hlt
out
repz
cmpsb
mov
icebp
mov
sti
sub
ss
lahf
rorb
sbb
adc
xor
push
jne
mov
ds
mov
pop
lock
test
xchg
cltd
loop
in
stc
fucom
push
pop
lods
xlat
sbb
mov
divb
pop
aas
or
cmp
dec
xor
fbld
rolb
mov
lods
pushf
sbb
je
mov
pop
ljmp
push
inc
test
dec
push
add
in
mov
lods
sbb
xchg
push
ss
add
jae
pop
scas
mov
or
dec
jp,pt
mov
leave
pusha
pop
or
iret
es
call
mov
nop
movsl
jge
enter
loop
test
gs
call
loopne
or
add
pop
fildll
rcll
lahf
imul
movsl
pop
jg
lret
xchg
pop
sub
or
cmp
lret
jnp
in
mov
sbb
and
pop
mov
push
repz
adc
inc
ja
in
ficoms
shll
andl
push
xchg
add
lcall
notb
sarb
add
imul
dec
frstor
in
sbb
sbb
mov
xchg
and
frstor
xor
and
sbb
inc
out
pop
mov
int
aas
push
pop
sti
inc
sub
ret
add
inc
out
ret
das
cmp
jae
push
jge
push
xorb
test
daa
in
jbe
or
test
repnz
adcb
test
lret
adc
scas
sbb
rol
sarl
es
mov
inc
insb
sar
dec
jmp
adc
push
or
xchg
xor
mov
loop
sbb
adc
nop
or
pop
jmp
sub
sbb
add
push
fsubrl
lods
mov
jmp
mov
pop
scas
inc
fimuls
jns
fs
dec
add
jb
and
test
sbb
and
ret
xchg
out
sub
adc
inc
pop
add
add
cwtl
das
push
pop
out
mov
push
dec
push
lock
add
push
jecxz
call
xchg
pop
push
xchg
dec
addb
and
lret
or
fcmovu
dec
jno
lock
loope
pop
xchg
adc
dec
loop
out
xchg
sahf
fstl
incl
lods
xchg
ljmp
add
aaa
popf
fisubl
xchg
pop
push
sub
out
xorl
shlb
mov
jne
push
xor
outsl
enter
stos
xlat
sbb
cmc
cmp
push
sbb
lods
or
aas
mov
arpl
inc
imul
jecxz
in
xchg
rol
movsl
add
iret
inc
lcall
dec
xchg
sub
cmc
push
mov
sti
int
lcall
mov
loop
out
xor
cmp
mov
xchg
hlt
cltd
shrl
outsb
pusha
imul
sahf
ss
push
xor
pusha
and
out
stos
cli
pop
push
mov
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
xor
xor
add
adc
or
mov
mov
mov
or
add
cltd
jmp
adc
fnstsw
js
xor
fidivrs
mov
icebp
inc
popf
cmp
sbb
and
in
xor
sti
lcall
or
imul
add
in
mov
negl
arpl
scas
and
test
ret
scas
in
or
dec
xchg
jbe
push
icebp
cli
out
ret
js
repnz
and
xchg
sbb
les
xchg
les
or
sub
mov
sbb
cld
std
fstps
cmovs
sub
jmp
or
jmp
aaa
cwtl
insb
loop
test
sbb
aad
out
cmpsb
subl
or
jp
mov
ljmp
lahf
lahf
jecxz
outsl
jns
fistps
mov
aam
clc
jp
and
cmpsb
mov
mov
inc
mov
lods
cmp
aam
bound
sub
mov
mov
mov
ljmp
sub
jecxz
imul
fs
pop
jl
jae
call
in
sahf
ret
sbb
prefetch
or
cwtl
pop
xchg
fbstp
adc
movsb
hlt
inc
jnp
xchg
cmpsb
cmp
or
jle
xchg
mov
push
jne
jo
es
push
ss
jecxz
and
pushl
pop
xchg
pop
inc
mov
movsb
xchg
sub
mov
pop
stos
push
mov
add
mov
pop
in
stc
xchg
cmp
test
in
jbe
jnp
jecxz
rcrl
int
push
hlt
or
or
fucomip
or
test
push
dec
movsb
cmpsb
fildl
sbb
cmpsb
lods
popa
jae
or
jge
stos
jecxz
rorb
xchg
mov
ljmp
pop
jae
nop
xchg
cld
pop
inc
sbb
cmp
nop
mov
xor
pushf
and
inc
and
cmpsl
cmpsb
ret
mov
pop
jns
bound
rep
jle
add
dec
adc
shrl
xchg
inc
cmp
out
sarb
adc
divl
mov
loopne
cmp
adc
call
iret
or
outsl
adc
les
scas
pushf
repnz
pop
xchg
jl
xchg
fistps
test
sti
aam
xor
add
cmovae
xor
lcall
mov
fstp
xor
push
jecxz
jbe
imull
mov
hlt
lcall
cwtl
aad
jne
cmc
mov
insb
mov
jb
aas
jae
rcr
mov
mov
aad
or
repnz
sub
push
cltd
dec
push
lds
or
aas
in
mov
scas
ficoml
inc
add
sub
ficoms
outsb
cmpb
rcrb
jle
rorb
mov
stos
popl
mov
mov
adc
pop
repnz
jecxz
jl
mov
cmpsb
mov
sahf
call
loope
or
dec
push
mov
push
add
mov
fwait
fcompl
pop
icebp
aaa
std
aas
sub
push
and
iret
and
ss
push
movsb
inc
pushf
adc
fs
fs
push
dec
adc
arpl
nop
fbstp
fimuls
addr16
mov
and
imul
add
inc
mov
cmp
jp
cmpsl
fsubl
in
leave
in
arpl
xor
xor
shrb
lea
mov
mov
xlat
adc
jne
cmp
je
mov
mov
add
adc
xor
push
xor
push
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
add
add
jmp
popf
adc
cmp
in
inc
add
out
lds
adc
xchg
fs
dec
jge
popa
pop
cmp
mov
dec
jnp
cli
inc
lahf
push
jp
orl
mov
push
xchg
xor
sub
imul
icebp
insl
out
push
inc
js
fcmove
repnz
cltd
insl
std
add
dec
xor
ret
adc
ljmp
ja
dec
push
cld
xor
out
pop
jecxz
mov
lea
fistpl
or
mov
cli
imulb
das
sbb
mov
std
push
xchg
xchg
or
lahf
add
jno
lock
xor
pushf
add
fstenv
inc
inc
pop
add
dec
test
test
flds
sbb
xor
lret
mov
test
scas
mov
ror
andb
sbb
pop
and
in
ds
jo
add
or
fbstp
lods
insl
rcl
sbb
fisubrs
cs
pop
lcall
xchg
cs
mov
inc
push
push
inc
fisttpl
cmp
cli
test
cs
push
std
and
popa
add
aaa
ret
imul
insb
adc
jae
adc
fists
or
imul
add
mov
aaa
notb
in
mov
or
add
sbb
pop
mov
sub
cwtl
jbe
fcmovne
adcb
in
andl
addr16
repz
or
xchg
repz
jle
fcoml
jg
inc
xchg
sbb
inc
adcb
cli
xor
clc
add
mov
sbb
and
clc
pop
gs
adc
dec
mov
push
mov
or
xor
xor
iret
xchg
jmp
mov
push
or
cmpsb
fimuls
cmc
dec
sub
jmp
cwtl
add
sbb
fisubrl
or
test
dec
mov
cmp
std
xchg
push
mov
cli
mov
mov
push
stos
imul
negl
mov
insb
pop
xchg
jecxz
repz
inc
xchg
loope
iret
dec
sub
push
cmpl
pop
adc
pop
xor
je
iret
fstpl
repnz
out
cli
imul
sbb
out
repnz
pminsw
and
pop
mov
dec
loop
setns
out
mov
je
fisttps
loop
arpl
mov
outsl
add
mov
and
out
adc
cli
sub
inc
and
xor
test
scas
fucomip
sbb
outsl
sub
sub
out
mov
test
into
cmpsb
lea
push
push
push
add
xor
push
test
jae
add
mov
pushf
ret
out
mov
fidivrl
xchg
push
adc
pop
xor
sbb
cwtl
in
sbbb
xchg
inc
out
mov
jnp
cmp
sbbb
std
and
mov
jbe
jle
push
fmull
je
push
int3
imul
jle
out
push
mov
mov
xor
or
jo
pop
pop
or
mov
mov
cmpsl
mov
push
aad
inc
movl
xchg
pop
mov
cmc
fs
xor
dec
cld
xor
mov
lea
xor
mov
mov
jmp
aad
mov
mov
shll
xor
mov
mov
add
bound
mov
dec
adc
push
cmp
pop
xor
push
in
in
stos
push
testl
in
rolb
cld
or
stos
loope
loope
hlt
inc
fadd
shrl
arpl
adc
out
call
orl
imul
push
imulb
lds
and
adc
inc
dec
mov
xchg
cld
add
arpl
cmp
or
pop
jb
jp
lock
test
outsl
insl
fidivs
and
sub
pop
lea
setbe
repz
push
push
shll
inc
cmp
xchg
fbld
pop
inc
in
es
cmp
aam
pop
push
lock
lods
insl
push
jae
mov
push
jnp
lds
jle
inc
cld
adc
popa
imul
dec
adc
into
push
or
mov
adc
in
inc
fmul
mov
adc
mov
adc
inc
je
and
and
icebp
outsl
pop
test
loope
imul
adc
and
ljmp
cmp
or
inc
dec
xor
push
bound
jecxz
pop
int
or
or
in
pop
inc
mov
jbe
cmpl
mov
into
mov
and
sub
lret
xor
enter
repz
push
out
jg
inc
lock
lea
jle
mov
popa
rcrb
lock
pop
jp
cs
jecxz
mov
push
jae
movsb
jge
cli
mov
ret
ret
xchg
scas
imul
decl
bnd
or
mov
leave
out
stos
sarb
popf
roll
shll
mov
dec
mov
cmp
lret
inc
mov
xor
sti
pop
mov
add
in
ja
push
cmp
icebp
inc
jl
gs
xchg
push
xlat
or
cmp
pop
ret
push
ss
ja
jge
mov
mov
pushf
mov
inc
add
jnp
xchg
test
outsl
push
inc
xchg
aam
cmpsl
pop
sti
lret
insb
je
or
test
test
data16
mov
call
jmp
test
dec
jb
movsl
xchg
movsb
add
sub
fs
jle
fsts
in
adc
in
mov
daa
sbb
xchg
lret
cmc
js
sub
push
adcb
dec
subl
and
inc
les
dec
movb
pop
insb
xor
dec
xlat
dec
add
insb
insb
addr16
loopne
mov
push
push
adc
sub
dec
imul
push
lcall
mov
outsl
in
or
jno
adc
jge
push
ja
dec
mov
pushl
leave
sub
stos
cmp
rol
or
fsub
mov
imul
mov
xor
das
out
pop
xchg
js
sbb
xchg
adc
adc
in
xchg
movl
sbb
push
int
xor
adc
push
fs
inc
xor
push
ljmp
js
push
pop
cmp
jns
cli
mov
cmp
es
sbb
test
cmp
dec
mov
shll
leave
cmp
cltd
out
mov
mov
hlt
test
mov
sahf
imul
and
imul
mov
sub
mov
and
sub
lea
mov
mov
xor
jmp
mov
xchg
mov
add
addr16
mov
data16
mov
popa
test
cmp
int
dec
and
inc
xchg
mov
sbb
scas
and
or
lcall
scas
cmp
cmp
int3
jno
sbb
imul
test
push
jns
mov
stos
inc
mov
or
call
outsl
decl
cltd
xchg
dec
push
push
mov
cli
pop
pop
in
inc
ja
insl
mov
mov
in
out
sub
mov
mov
xchg
or
add
xlat
imul
mov
cmp
mov
add
mov
dec
cmp
sub
les
movsl
sbb
ret
mov
je
mov
shlb
sbb
push
fldcw
sbb
inc
bound
inc
xor
adc
sbb
rclb
mov
add
inc
stc
das
out
ja
inc
ret
stc
stos
push
mov
idivl
sub
out
sbb
imul
fwait
call
imul
es
cwtl
xchg
fimuls
inc
jmp
pop
dec
mov
pushf
stos
arpl
notb
jecxz
xchg
cmc
pop
push
ret
xlat
mov
dec
pusha
in
inc
mov
dec
xor
xor
jbe
jge
out
mov
add
imul
fs
out
adc
xor
sbb
outsl
aas
jecxz
mov
insb
scas
sub
push
addr16
and
and
int3
push
mov
outsl
pop
fcmovnbe
scas
dec
sbbb
inc
dec
inc
je
fdivr
jno
mov
cmp
push
mov
inc
loope
dec
push
test
and
cmp
push
test
aaa
mov
jo
shll
ljmp
push
xlat
pop
lods
pop
lds
add
adc
and
test
sbb
mov
lret
orl
out
sub
andb
push
out
push
popa
adc
pop
aam
in
xor
mov
pop
imul
jmp
adc
jge
gs
dec
jecxz
orl
movsl
adc
add
mov
stc
sbbl
mov
push
je
inc
mov
in
js
ffreep
shl
lods
lods
into
mov
jb
out
aas
fs
mov
inc
loop
sahf
mov
hlt
into
scas
or
push
mov
cmc
cmpsl
xor
test
push
movsb
adc
ret
int
pushf
xor
mov
sub
outsl
xchg
adc
pop
cmc
sub
aas
fidivs
xchg
sub
xchg
fdivs
cmp
andb
sub
scas
orb
adc
push
into
mov
lcall
mov
push
adc
jo
test
daa
pop
pmulhuw
mov
shlb
cmp
inc
in
jb
sub
mov
test
mov
imul
mov
add
dec
out
movsl
mov
inc
ds
sub
in
ljmp
add
iret
cld
test
push
aas
and
test
test
sub
mov
adc
popa
jae
dec
aam
push
div
push
push
or
sub
xor
add
mov
add
mov
mov
push
push
call
mov
mov
and
mov
and
mov
add
adc
mov
add
mov
adc
xor
cmp
jne
cmp
jne
jmp
popf
fldt
mov
xor
inc
sahf
pop
xor
lds
inc
rcr
pop
dec
fdivrl
inc
push
add
or
xchg
cmpsb
pop
jg
out
repz
popf
push
pop
outsb
ds
or
sub
iret
ss
and
add
pop
mov
fcompl
gs
mulb
mov
cmpsl
sub
pushf
push
arpl
fnstcw
add
inc
dec
lds
decl
ljmp
ror
or
int3
pop
sub
adc
movsl
mov
fsts
scas
fs
mov
aam
in
xor
call
insl
int
mov
xchg
out
daa
mov
jb
arpl
mov
mov
push
push
and
aaa
push
mov
je
ret
jecxz
and
mov
stc
xor
les
dec
shlb
dec
dec
arpl
movsl
fsts
leave
addr16
stos
pop
inc
push
pushf
lahf
and
sbb
aas
in
jnp
sbb
decb
xchg
fidivl
imul
pcmpeqd
mov
fbld
sub
fdivrs
cmpsb
mov
fidivs
ret
ja
leave
inc
pop
scas
cmp
sub
stc
and
aad
jmp
add
bound
xor
mov
repz
sub
push
or
out
loopne
movsl
pop
test
adc
incl
cmc
mov
xlat
mov
mov
xor
out
sahf
cmpsb
retw
lahf
imul
dec
dec
iret
pop
inc
sbb
hlt
sbb
jnp
sub
lcall
enter
mov
es
fidivrs
cmp
push
fistpl
fcomip
mov
pushf
sbb
dec
or
insl
mov
sti
ret
mov
cltd
jp
inc
testb
mov
scas
jo
cmp
ljmp
es
aam
cmp
outsb
inc
add
push
into
sbb
jb
and
clc
dec
les
leave
pushf
cmp
add
sar
inc
inc
shrl
fldt
dec
mov
lock
jg
test
sub
mov
fidivs
sti
mov
cltd
add
cwtl
mov
push
int
fisubrs
sbb
xor
sbb
push
push
jl
test
dec
into
shl
test
jne
xor
sbb
mov
mov
incl
mov
mov
mov
push
pop
and
in
mov
clc
test
pop
loope
jge
clc
cli
jle
adc
xchg
lock
adc
dec
dec
adc
movsb
dec
cmp
xchg
dec
ret
add
fdivp
pushf
cld
xlat
out
sbb
xor
loop
push
shll
push
push
arpl
mov
addr16
pop
mov
in
sbb
adc
std
lods
pop
adc
iret
das
pop
lods
cld
push
fnsetpm(287
mul
xor
mov
out
fidivs
dec
lret
cli
adc
or
push
fwait
sti
loop
and
ja
imul
xlat
iret
fildll
test
jbe
and
scas
jns
add
xchg
mov
inc
xor
inc
dec
test
or
and
call
mov
cld
pop
or
sbb
jle
pushf
cmp
push
mov
imulb
sahf
test
lock
sub
mov
sub
mov
xor
div
mov
jmp
addr16
jecxz
ja
mov
inc
pop
ret
pop
add
out
lds
or
icebp
fmulp
jg
push
into
mov
fwait
adcl
mov
ret
push
repz
in
nop
cli
xchg
testl
pop
push
call
cmp
mov
movsl
adc
jbe
mov
fistps
in
mov
imul
cmp
xor
loope
cwtl
clc
std
mov
test
push
loop
aaa
mov
insb
ret
adc
stos
clc
popf
pop
add
das
pop
ficompl
stc
jg
sbb
cltd
adc
mov
scas
clc
push
leave
ficoml
aaa
push
loope
stos
dec
mov
jge
lret
popa
sbb
xor
lods
in
hlt
test
pop
pop
xchg
xchg
call
push
pop
in
mov
pop
les
shrb
and
or
fdivr
cs
and
ficoms
pop
jge
xchg
mov
add
dec
out
outsb
xchg
fldt
push
cmp
lods
orb
cmp
lea
mov
rcl
icebp
cs
cld
daa
inc
inc
sti
cs
dec
rorb
fcoms
jmp
fidivrs
sbb
inc
and
push
lahf
sub
enter
lret
xchg
rclb
test
pop
lcall
in
std
and
and
ljmp
jecxz
imull
es
mov
adc
outsb
xchg
lret
lahf
loope
dec
shrb
add
out
ja
mov
in
aam
pop
int3
es
icebp
pop
fcmove
dec
out
mov
out
mov
into
xor
cmp
jmp
das
add
add
test
mov
sbb
loopne
and
shl
fcoml
xor
xchg
mov
add
push
pop
xor
xchg
push
shl
pop
lods
ret
imul
out
test
or
lret
push
mov
popa
out
jl
or
in
mov
repz
lds
cld
subl
test
push
push
pop
add
add
xor
pop
pop
cmp
aas
jo
push
mov
mov
sub
insb
pop
stos
add
pmaxub
jecxz
jbe
dec
mov
in
sbb
pop
imul
and
push
mov
adc
out
aam
mov
inc
sar
ret
jg
inc
sub
mov
movsb
mov
test
xchg
mov
inc
sahf
jae
pop
and
dec
in
pop
sub
loop
pop
inc
cld
int3
ss
pop
clc
fcmovnbe
pop
cltd
out
mov
fdivrs
push
cs
or
inc
inc
repz
jno
dec
leave
cmp
repz
push
push
inc
adc
jns
sahf
inc
or
lret
movsb
add
fdivs
call
or
pop
mov
test
gs
movsb
outsl
mov
mov
xchg
dec
pop
addr16
push
cld
fstps
or
jno
movsl
push
dec
lret
popa
jns
cltd
jbe
mov
push
adc
sbb
cmp
adc
inc
stc
jo
dec
div
subl
ljmp
jecxz
bound
or
test
cmpsb
daa
pop
sti
fdivp
stos
dec
fcomp
fs
aas
and
or
jno
insl
jmp
and
orl
packssdw
lahf
lcall
out
jecxz
test
pop
and
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
jmp
fs
insb
int3
jl
gs
adc
cmp
cmc
cmp
or
mov
add
mov
and
out
adc
ljmp
rolb
push
sub
pop
imul
roll
in
decb
sar
int3
pop
push
loope
push
ret
or
fwait
aaa
movsl
dec
loopne
roll
or
and
mov
adc
movsl
push
scas
push
ja
ss
cmp
sbb
add
xchg
xor
and
stos
insb
pop
jne
inc
js
add
adc
movsb
iret
cmc
pop
sub
lds
cwtl
outsb
xor
sub
into
gs
mov
loope
loopne
xchg
sbbb
out
inc
sub
scas
jp
dec
hlt
or
mov
add
adc
pop
clc
imul
cwtl
jno
lea
popa
mov
sub
addr16
push
and
fwait
in
jno
inc
aam
imul
dec
cmp
jne
lcall
sbb
inc
shl
adc
shl
mov
push
push
jge
add
xor
andb
lcall
and
repz
push
pop
imul
mov
cmp
mov
fldt
pushf
cmpsl
pop
and
ja
xor
fistl
dec
xlat
shl
scas
nop
mov
mov
cmpsb
mov
xor
das
fstps
xchg
insl
xor
out
ss
int
push
lret
push
loope
xor
mov
push
xor
call
and
mov
subl
jno
je
pop
pop
jae
push
loopne
clc
mov
gs
aad
mov
pop
iret
punpcklbw
sti
push
adc
les
das
jo
lods
popa
sub
les
in
xchg
push
mull
jne
push
leave
cmp
pop
xor
cmc
lret
pushf
mov
adc
int3
les
or
std
test
mov
pop
pop
xor
aas
add
inc
les
dec
cmpsl
sbb
and
sbb
test
and
ljmp
jg
push
sbb
mov
lods
dec
lds
mov
jmp
xchg
sbb
dec
repz
ljmp
xor
imul
arpl
and
repnz
mov
test
fisttpl
arpl
jae
sti
mov
push
les
cmp
in
cli
mov
sbb
mov
sub
loop
pop
sbb
bound
in
and
outsb
enter
rcrb
xchg
shl
fwait
mov
test
dec
mov
int
test
scas
iret
xor
push
and
pushf
dec
jns
inc
push
cmp
mov
add
and
and
sbb
inc
xor
cmp
subl
add
push
outsb
push
pop
adc
mov
pusha
or
adc
fwait
xchg
ljmp
sbb
dec
rcr
mov
lods
pop
out
dec
sahf
sbb
iret
xor
inc
inc
add
push
xor
and
and
push
push
call
mov
mov
shr
shr
xor
mov
and
mov
xor
and
mov
mov
xor
and
mov
push
push
xor
and
push
push
call
mov
mov
and
and
xor
xor
shld
shl
or
or
xor
xor
mov
mov
mov
mov
mov
sub
mov
sbb
and
and
mov
mov
mov
mov
or
or
add
mov
adc
add
adc
mov
mov
mov
mov
jmp
loop
xor
js
jae
and
mov
mov
push
sbb
xor
int
sub
fsubrs
xchg
stos
xchg
sti
popf
mov
roll
dec
dec
adc
adc
cmc
scas
or
push
pop
sub
fadds
rclb
mov
jae
fistl
pop
pop
sub
sbb
pop
mov
ja
sbb
xor
dec
sahf
or
arpl
aas
mov
pop
sarl
insb
out
outsb
mov
aad
sub
xor
mov
mov
lods
push
pop
adc
ljmp
cmp
stos
test
xchg
std
mov
test
dec
mov
imul
xchg
pop
dec
jecxz
test
cld
enter
in
scas
xchg
xchg
pushaw
or
pop
sub
stos
pop
xchg
pop
ret
dec
xchg
lock
push
stos
rcr
test
mov
cmp
lret
cmc
lret
mov
jecxz
ja
scas
jb
rorb
sbb
xchg
add
mov
push
jg
std
push
loop
add
push
jle
pop
jl
insl
stos
or
ss
inc
pusha
pop
in
addr16
inc
cmp
lret
icebp
je
pop
push
pop
mov
hlt
fwait
mov
pop
or
mov
push
dec
mov
stc
adc
jnp
mov
cli
xor
fists
dec
lret
ret
bound
adc
mov
outsl
push
sub
dec
das
add
or
std
js
into
cmp
jmp
stos
packssdw
lcall
cmp
fmul
cs
mov
cmpsb
es
stc
cmpsl
cmp
sbb
push
notb
sarb
je
xchg
or
out
mov
xchg
jp
jle
cmc
lds
les
push
rorb
jne
cmp
xchg
jle
aaa
pop
mov
cmpsl
mov
negl
jns
and
jbe
bound
sub
xchg
xchg
sbb
mov
inc
xchg
stos
push
int3
std
xchg
cmp
imul
faddp
jmp
iret
jns
pop
sti
mov
test
shrb
outsl
jo
xor
mov
inc
jo
hlt
rcr
test
inc
hlt
xor
shlb
or
jmp
in
dec
dec
stc
mov
std
je
aam
cld
aad
sti
pop
push
shll
cmpsl
add
pop
mov
mov
mov
pop
rclb
ret
dec
icebp
pop
pop
and
fistpll
mov
and
and
inc
roll
xchg
fisttpl
mov
mov
xsaveopt
ja
push
mov
push
jge
aaa
mov
mov
push
fimull
cmpsb
dec
push
ss
fcmovnbe
xchg
and
lods
add
rep
pusha
es
loope
xor
push
xchg
mov
xchg
scas
in
push
sbb
inc
data16
pop
hlt
and
adc
cmp
decb
jne
push
test
push
lea
inc
inc
aad
pop
insb
mov
out
mov
mov
jmp
fdivl
xchg
addr16
cmp
je
inc
rorb
fsubl
shrl
jns
add
mov
or
mov
jge
sti
jno
pop
mov
mov
imul
jg
inc
movsb
mov
xor
adc
mov
idivl
hlt
mov
mov
leave
or
imul
cmpsb
mov
add
sar
test
pop
jns
mov
jb
mov
cmpsb
loope
jno
ljmp
les
shrb
sbb
test
cmp
mov
icebp
popf
fnstsw
cmp
jbe
adc
pop
stos
into
xchg
adc
aaa
cmpsb
inc
xchg
cmpsb
jne
stc
jle
test
xchg
jmp
popa
fidivrs
add
inc
lcall
xchg
les
mov
int
push
xchg
push
adc
xchg
enter
mov
mov
test
jge
movsl
or
push
inc
mov
mov
mov
jns
xlat
sbb
ss
inc
adc
imul
adc
xchg
cmpb
iret
insl
dec
iret
ljmp
clc
dec
adc
cmpsl
xlat
stos
or
jnp
scas
sar
stos
cld
jmp
outsb
mov
push
pop
add
jb
jns
test
push
daa
or
adcb
incb
mov
lcall
loop
or
in
sub
push
aam
xor
call
shll
andl
mov
xor
mov
pop
jbe
dec
jmp
push
cmpsb
scas
aas
cmp
popf
in
in
xlat
adc
lahf
popa
jge
lock
dec
clc
or
testb
sbb
sub
in
sbb
mov
sti
xchg
ljmp
into
aaa
jo
les
push
test
shlb
adc
inc
jp
cmp
popf
sbb
data16
adc
adc
inc
mov
adc
push
icebp
sbb
loopne
xchg
pop
fnstenv
xor
sahf
ror
and
mov
mov
cmp
and
mov
ja
xchg
xchg
push
mov
fistl
xor
popf
clc
jg
call
add
aam
inc
cwtl
adc
mov
and
adc
jb
jge
pop
popf
mov
xchg
push
xchg
mov
cmpsl
and
icebp
jno
and
inc
mov
xlat
sub
push
push
jmp
inc
sub
fwait
or
aas
arpl
pop
jnp
pop
push
inc
jp
cmp
xchg
dec
xorb
bound
inc
jmp
das
push
pushf
add
xchg
fwait
jae
insl
cmpsl
lods
mov
cld
inc
out
call
push
dec
in
movsb
mov
pop
and
adc
loop
je
test
adc
mov
mov
adcl
gs
inc
cld
pop
loope
fdivrs
repnz
dec
sub
leave
movsl
or
mov
mov
test
and
adc
inc
mov
or
call
adc
out
push
jb
out
repnz
mov
call
shld
mov
lods
mov
je
aam
jne
mov
inc
rorb
mov
mov
mov
shl
or
xor
xor
inc
shl
add
adc
jmp
pop
loopne
out
cwtl
cmp
insl
inc
push
repnz
jno
and
mov
adc
out
rolb
ja
sbb
ds
adc
inc
repnz
cmp
fistl
push
iret
and
clc
shl
push
aaa
inc
int
out
xchg
loopne
aad
xlat
adc
ror
test
jmp
mov
repz
mov
sbb
sti
fistpl
inc
cltd
aad
loop
jge
push
imul
mov
aas
push
mov
addr16
pushf
and
mov
in
ljmp
push
jl
add
lds
inc
inc
mov
dec
mov
je
in
test
movsb
xchg
lods
push
and
mov
imul
test
mov
push
pop
lcall
popa
mov
fmul
popf
das
ret
mov
sbb
cmp
cmp
inc
mov
jbe
ja
push
mov
leave
loope
das
ds
test
je
ds
push
dec
out
lds
cmp
mov
into
hlt
mov
fs
sti
xlat
xor
jb
outsl
mov
mov
shl
jnp
in
mov
test
sarb
or
subps
adc
test
xchg
xchg
mov
sbb
add
sahf
xor
iret
pop
push
aad
add
ror
dec
push
push
rcll
mov
mov
mov
aas
andb
jbe
bnd
or
sbb
leave
xchg
push
mov
outsl
pop
pop
sarb
sahf
mov
add
nop
jo
test
enter
or
pop
inc
popa
int
xchg
cmp
dec
inc
cmp
hlt
push
daa
call
mov
cs
in
or
mov
add
int3
sub
ss
sub
sbb
stc
or
mov
xor
sub
in
shrl
sub
add
jne
sarb
dec
ss
pop
adc
dec
push
mov
or
and
mov
icebp
ret
pop
dec
cmp
lret
inc
fstpl
cmpsb
insb
scas
pusha
mov
daa
inc
dec
pop
mov
push
arpl
cmp
out
pusha
fwait
loop
outsl
inc
in
inc
popf
dec
mov
in
out
es
nop
rcl
inc
adc
inc
jge
adc
cli
pop
pop
popa
daa
dec
xorl
dec
mov
push
stos
pop
aas
inc
adc
ljmp
add
jnp
in
push
sbb
test
pop
xlat
mov
ret
aaa
push
aaa
pop
cmpsl
cmp
movsb
and
jbe
icebp
incl
aad
sbb
out
cmp
je
ljmp
call
cltd
xor
mov
loop
xchg
call
jmp
cmp
cmp
les
bound
and
mov
lahf
xchg
mov
dec
leave
ljmp
jle
dec
sbb
adcb
lret
rol
scas
sbb
pop
jl
in
mov
mov
test
mov
adc
push
sub
mov
mov
or
ja
mov
loopne
icebp
mov
mov
mov
and
mov
and
mov
push
xor
add
push
adc
push
push
call
mov
mov
add
adc
or
or
add
adc
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
mov
mov
jmp
mov
mov
jno
push
stc
mov
jmp
mov
mov
sub
push
loop
divb
jp
mov
in
xor
scas
mov
dec
sarb
sbb
push
mov
mov
push
push
push
cli
adc
fsub
cmp
pop
mov
mov
mov
inc
dec
mov
jg
cmpsl
bound
xchg
jo
es
lahf
repz
push
cmp
enter
int
push
shl
aam
inc
fistl
ljmp
pop
sub
xor
std
psubw
into
ds
sub
ret
pop
xchg
mov
les
inc
xchg
cli
xchg
xchg
and
nop
stos
lds
inc
adc
add
mov
ret
sti
fists
push
addr16
cwtl
xchg
movsb
mov
mov
sti
mov
or
shll
out
cmpsb
ljmp
lods
cmpsb
sbb
dec
mov
lret
cs
cld
mov
daa
mov
adc
in
xor
aad
loope
daa
inc
and
sbb
push
sub
pop
mov
inc
push
xor
push
mov
inc
jbe
shufps
shr
lahf
ficomps
jmp
sbb
lds
aaa
mov
xchg
jmp
stos
leave
push
mov
dec
pusha
aas
xlat
mov
sahf
mov
dec
push
loopne
test
mov
push
rcrl
jo
inc
push
outsl
lods
mov
pop
fmul
push
lahf
cmpsl
sbb
adc
scas
push
push
lret
in
xchg
push
fsubrs
dec
cmp
lret
je
sbb
mov
fadds
fs
icebp
stos
and
sahf
adc
adc
push
jns
xor
mov
xor
call
stos
aaa
mov
ss
and
fcmovne
add
mov
pusha
sub
and
notb
add
iret
mov
insl
stos
gs
sub
imul
xchg
ja
pop
or
nop
xchg
popf
clc
test
pop
push
and
push
hlt
scas
mov
arpl
jge,pn
xchg
push
mov
mov
mov
inc
adc
int
popf
ret
xchg
mov
xchg
fsubr
add
mov
sti
lock
imul
roll
push
and
ret
push
dec
dec
xor
sahf
sub
repz
int3
sbb
add
push
outsl
fnstsw
push
sahf
inc
dec
andl
lahf
fistps
iret
std
cmpsl
sbb
ficomps
xchg
pop
jg
cmc
loop
jae
shl
aam
enter
repnz
lret
mov
call
in
sti
into
adc
fidivs
pop
mov
negl
jne
jae
sub
jge
and
or
outsb
aad
call
mov
mov
test
sbb
push
xchg
adc
mov
dec
jl
push
sub
add
cmpl
mov
inc
push
cs
adc
push
into
dec
stc
inc
or
ror
jge
jmp
out
loopne
mov
or
xor
ret
cltd
dec
xorl
icebp
inc
push
mov
imul
or
ss
xchg
mov
pusha
movsl
iret
loopne
mov
xor
push
xor
push
push
push
call
mov
mov
xor
mov
xor
mov
xor
xor
add
mov
adc
pop
mov
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
es
jecxz
jecxz
cmp
xor
sub
mov
scas
lods
sub
popa
je
icebp
xor
pop
mov
sub
test
shll
or
out
shlb
addr16
fists
adc
aaa
mull
iret
jmp
fstpl
add
push
pop
in
call
or
ja
mov
inc
cmpb
sub
sbb
stos
or
pusha
fucomp
sbb
xchg
jne
xchg
xchg
mov
mov
int
mov
and
xlat
incl
xor
int3
lds
or
mov
sbb
sbb
inc
and
cmp
xchg
mov
pop
dec
movsb
test
es
sub
inc
mov
pop
xchg
xchg
pop
aas
sub
sbb
test
pushf
adc
out
rolb
loopne
loope
jecxz
pop
and
mov
push
mulb
fcomi
mov
lods
mov
fs
push
add
dec
or
ss
xchg
wrmsr
mov
or
push
dec
pop
pop
sbb
fiaddl
lods
mov
int3
orb
xlat
fsubrl
stc
adc
shll
mov
dec
pop
loope
sub
cltd
loopne
dec
push
jmp
flds
test
je
mov
adcb
negl
test
pusha
outsb
vdivss
sbb
imul
mov
stos
inc
jno
dec
push
pop
mov
sub
icebp
mov
lahf
adcb
sub
xchg
mov
sub
jmp
insl
xor
pusha
jecxz
pop
test
int3
out
aas
lea
cmp
fs
mov
jae
sub
sub
inc
enter
jne
lret
inc
lods
inc
aaa
insb
iret
js
mov
rcl
in
mov
xchg
sub
sub
sbb
mov
sarl
push
jge
push
or
mov
rcrb
call
movl
movl
jmp
shl
sahf
aad
xchg
mov
test
cmp
mov
fistl
mov
lock
enter
cs
out
ret
test
insl
sbb
or
das
cmp
mov
push
and
sbb
dec
dec
add
fdivrp
stos
ret
leave
push
xor
xor
jns
xor
pop
pop
dec
mov
mov
push
fisubl
and
bound
inc
mov
mov
test
xchg
insb
rorb
mov
cwtl
cmp
ljmp
fnsave
push
dec
push
mov
sub
imulb
loope
fisttpll
lahf
inc
lret
sub
pop
stos
mov
lods
cmpsb
adc
jae
sbb
iret
sbb
fwait
addr16
xchg
test
sbb
and
ret
cmpsb
cmp
sbb
loope
dec
loope
rolb
mov
cmc
in
testb
or
or
addr16
leave
pop
add
jg
jo
call
inc
add
cmp
lods
cwtl
mov
mov
or
push
lea
cmp
jns
daa
loop
sub
bound
aas
cmp
add
sti
mov
sbb
outsb
insb
mov
pop
add
sti
roll
mov
xor
xor
fwait
dec
sbb
xchg
cmp
xor
cmpsb
pop
pop
lret
roll
sub
nop
sub
inc
ret
lahf
mov
sbb
xor
js
jp
xor
fs
cmc
add
pop
sbb
gs
and
add
sub
xchg
add
negl
ret
push
int
adc
mov
gs
stc
mov
in
mov
clc
imul
add
enter
stc
jp
rcrl
fdivrp
dec
mov
and
mov
hlt
xchg
add
mov
jle
scas
push
mov
cmp
pusha
hlt
xor
xchg
popa
jle
bound
or
jmp
add
add
add
xor
div
mov
xor
and
div
mov
or
jmp
arpl
push
cmp
sbb
mov
in
dec
mov
or
mov
mov
sbb
orb
aam
sub
jmp
dec
sub
clc
inc
cld
xchg
in
cmpsb
imul
jl
pop
cmp
and
dec
icebp
pushf
out
test
ss
mov
fsubs
popf
fs
pop
lcall
pop
pop
jecxz
or
ljmp
test
mov
movsl
popa
push
ret
test
sub
out
xchg
adc
lea
mov
lods
sub
jne
inc
jmp
sub
pop
jle
mov
movaps
push
stos
in
fst
sbb
rolb
push
add
pop
pop
aad
adc
xor
cs
test
cli
insb
push
sub
cs
imul
pop
inc
jmp
pop
mov
inc
adc
sti
fsubrs
imul
jae
jo
movsl
jmp
cmpsb
addr16
pop
jmp
pusha
loopne
sbb
adc
lahf
shl
js
or
lret
add
outsb
push
ret
jae
dec
fdivr
lahf
sub
mov
frstor
inc
dec
cmpsb
scas
cmp
pusha
sbb
xor
mov
xchg
or
dec
push
jecxz
movb
cwtl
inc
push
cmp
mov
adc
insl
int3
xor
pop
icebp
sub
repz
sub
mov
xor
add
jl
add
dec
mov
fcomps
jle
push
or
sahf
jb
jg
lds
movsb
lods
push
hlt
xlat
dec
adc
dec
inc
push
stos
or
out
lcall
cmp
fsubs
cmp
xor
scas
mov
push
andl
into
jbe
fdivs
xor
push
mov
push
add
in
add
push
bound
jno
scas
adcl
add
pop
dec
xlat
aam
xchg
sub
rcrl
sub
push
fmuls
int3
and
add
add
mov
and
sub
mov
imul
mov
sub
cmp
jne
mov
jmp
cmpb
push
inc
mov
jno
aaa
mov
mov
fcmovnbe
js
enter
jae
out
sub
or
mov
mov
mov
leave
incl
adc
adc
dec
mov
sbb
jo
dec
inc
mov
stos
fbld
inc
sub
and
or
adc
loop
push
mov
lods
fwait
sub
pusha
iret
push
xlat
ret
cmpsb
cwtl
sub
aad
jg
lock
push
fistps
xor
scas
jmp
int
sti
jbe
scas
cmp
cs
adc
mov
shl
andl
xor
adc
xchg
sbb
cmp
fcmove
test
add
dec
pop
mov
push
mov
ljmp
clc
xchg
cs
inc
nop
pop
cltd
int3
adc
inc
daa
pop
or
push
jl
xchg
push
pop
pop
insb
jne
push
mov
mov
ficomps
pop
sbb
push
adcb
jb
ftst
xor
push
test
add
lds
sub
movsb
mov
mov
sub
or
arpl
loop
push
jl
and
jb
xor
fstl
pop
sti
sbb
cmpsb
sub
dec
nop
in
ds
pop
sub
imul
mov
stos
repz
jl
pop
push
and
sub
fdivr
jns
inc
mov
loope
lret
stc
sti
adc
icebp
movsw
cmpsb
xchg
push
mov
push
inc
idiv
jg
mov
sub
je
sub
dec
sti
fidivl
and
mov
jns
rclb
mov
cmpsl
js
inc
push
jmp
mov
mov
stos
add
pushf
clc
int3
mov
jno
push
lcall
jge
sub
mov
in
mov
or
stos
mov
sub
mov
pop
stos
decb
push
xor
mov
pop
or
dec
xchg
aas
mov
push
add
fdivrs
stos
add
xchg
sub
inc
mov
loope
orl
es
fnstcw
das
imul
mov
push
in
push
jbe
test
sti
addl
out
jbe
sar
pop
xchg
rol
int
sbb
jo
out
test
aam
pop
inc
std
ljmp
fcoml
cmc
cmpsl
adc
xor
adc
add
jb
mov
pop
call
xor
or
scas
xchg
or
shrl
in
gs
push
xchg
mov
lods
pmaddwd
lods
mov
fistpll
pop
add
ds
mov
and
lahf
jae
test
mov
mov
repz
mov
pop
mov
add
push
fmull
mov
enter
int
js
repnz
add
aad
hlt
movsl
xchg
pop
sbb
rcrb
scas
fnstenv
sub
dec
repz
jb
sub
dec
pop
inc
ficoml
add
inc
hlt
stos
cmc
popa
xor
push
sbb
mov
jl
jge
or
xchg
outsb
xorb
xchg
loop
popf
add
mov
jmp
jge
xchg
add
or
insl
pop
lods
adc
das
out
sub
xor
pop
mov
cli
or
das
loop
mov
mov
iret
jno
mov
cmp
mov
inc
movsb
mov
xchg
pop
push
adc
fs
lea
push
sbb
xchg
imul
lret
sub
ss
inc
loop
sub
or
jb
int3
inc
fiadds
mull
mov
or
mov
lds
dec
daa
mov
dec
xor
mov
movsl
sti
das
jbe
aaa
push
imul
push
sbbl
pop
pop
dec
dec
fistpl
push
xor
addb
iret
mov
mov
rorb
fs
sahf
sbb
xor
jo
stos
into
stc
pop
mov
ficoml
dec
mov
daa
pop
into
mov
enter
or
mov
mov
imul
push
jmp
dec
lcall
cmp
xchg
outsl
fdivs
mov
mov
inc
dec
orl
popf
mov
loopne
pusha
jno
cld
adc
mov
xchg
je
dec
xchg
xor
pop
sub
dec
pop
sbb
das
adc
sub
out
jo
lcall
dec
xlat
mov
jbe
stc
sub
jo
lret
sub
xchg
int3
adc
mov
mov
lret
sub
inc
out
mov
out
dec
fwait
stos
and
mov
adc
call
add
inc
push
cmp
rorb
cmc
cmp
leave
movsb
mov
mov
ror
ja
lods
scas
xchg
jmp
xchg
mov
cltd
dec
adc
cmp
mov
or
xlat
aaa
gs
out
sbb
movsl
dec
ret
mov
pop
mov
dec
jbe
repnz
test
les
inc
out
outsb
cmp
cmp
and
cmp
adc
cbtw
add
aad
fwait
inc
mov
xchg
iret
subl
test
push
in
insb
xchg
fcmovnb
shrb
loop
push
std
or
mov
repnz
mov
sarl
cs
imul
lret
dec
adc
dec
loop
pop
ret
int3
scas
pop
hlt
fdivl
xchg
fdivl
popa
loop
push
bound
clc
adc
or
fwait
mov
into
orl
test
div
pushf
sub
jno
inc
xor
cmp
cmp
sub
in
jmp
fdivl
mov
mov
xchg
cmp
xchg
xor
testl
ficoms
test
xchg
into
shl
lods
push
add
imul
inc
jmp
or
aad
iret
rclb
arpl
dec
std
aas
jg
movl
clc
adc
lea
xchg
cltd
dec
adcl
xor
and
push
add
sub
jmp
push
xchg
sbbb
mov
pop
and
push
xchg
mov
or
mov
imul
mov
and
and
mov
shl
mov
jmp
fstps
lods
mov
repz
fdivr
aas
jno
dec
mov
mov
in
inc
mov
xor
push
add
and
mov
pushf
fs
dec
pusha
push
add
fwait
sub
out
out
loopne
and
pushf
dec
out
sub
imul
mov
xchg
lds
cmpsb
nop
push
inc
xchg
insl
push
cs
and
lods
cmp
push
adc
paddusw
jmp
test
pop
jp
mov
inc
les
sahf
in
xchg
add
repz
and
inc
in
push
data16
lods
mov
nop
cld
push
cwtl
loop
movsb
enter
mov
mov
mov
xchg
mov
xchg
les
movsb
aam
lea
adc
cmp
in
mov
push
mov
iret
xchg
repz
pop
jns
rcr
pop
fcoms
cmp
jecxz
jnp
sbb
in
dec
or
dec
bnd
scas
mov
call
stos
ret
lret
push
fnstenv
mov
aas
lret
and
mov
jle
xchg
mov
in
jmp
add
sub
cld
add
out
add
xlat
cli
std
push
mov
std
or
lcall
push
adc
cmp
jg
repnz
shll
mov
sub
or
mov
pop
and
shr
ret
xor
sbb
pop
jl
out
push
push
dec
int
movsb
arpl
cmc
data16
or
add
push
or
push
or
mov
xchg
and
push
icebp
addr16
and
mov
pop
jecxz
psubusb
mov
sbb
xchg
inc
jbe
cmp
mov
scas
lods
add
lea
outsb
mov
mov
push
jecxz
xor
aaa
fidivs
insl
or
test
xchg
fwait
out
out
bnd
rcll
pushf
leave
popf
popf
xchg
push
cmp
popf
movsl
ljmp
mov
xor
addr16
decl
sarl
icebp
mov
and
iret
packssdw
or
jle
pop
mov
sub
xor
add
loop
sbb
mov
add
jmp
mov
or
jg
lock
lods
idivb
scas
mov
in
or
adc
or
sahf
scas
jno
pop
mov
mov
pop
jecxz
xchg
ret
imul
jg
ss
insl
mov
cmp
and
jmp
jno
mov
popa
loopne
inc
mov
insb
jmp
cmc
test
leave
or
inc
and
test
pusha
hlt
push
mov
cmp
push
fidivs
adc
dec
daa
mov
mov
xchg
out
adc
inc
in
cld
out
push
adc
cmp
or
and
cmpsb
adc
lahf
mov
mov
outsb
pop
aam
lock
test
imul
popf
adc
lods
dec
idivl
push
int3
setge
dec
mov
js
adc
or
rcll
enter
popa
mov
bound
daa
mov
loopne
sbb
addl
jmp
push
fisttps
adcb
push
xchg
adc
bnd
or
cmp
enter
xor
int3
jmp
lahf
cmp
dec
cli
and
mov
pop
arpl
aam
icebp
pop
andb
ja
jnp
fcomps
pop
repnz
mov
sbb
addr16
jg
xor
fs
les
pop
push
mov
mov
mov
jo
arpl
and
imul
add
aam
sbbb
mov
push
xlat
sub
aad
lea
in
or
xchg
cs
sbb
mov
rolb
pop
popf
xor
hlt
lea
xlat
xor
xor
je
mov
fucom
inc
mov
lcall
test
push
jmp
push
mov
xchg
mov
addr16
scas
mov
jns
mov
pushf
loopne
fsubs
testb
rclb
add
icebp
lea
add
mov
mov
mov
or
mov
or
xor
and
mov
add
pop
cmp
je
mov
jmp
mov
mov
sub
mov
sub
mov
or
mov
and
mov
sub
add
jmp
movl
movl
movl
mov
mov
xor
add
mov
jmp
inc
xor
mov
mov
xor
jns
xor
cmp
sti
sub
mov
sub
inc
add
xchg
mov
enter
adc
insb
pop
fisttpll
inc
jae
jg
subb
rcll
popa
negb
outsb
xchg
cld
adc
fsubs
bound
cmpsl
pop
sub
insb
xor
inc
mov
mov
out
adc
inc
or
lock
xchg
push
dec
mov
push
dec
inc
test
shl
jne
stos
push
lock
lods
inc
pop
leave
mov
movsl
sbb
mov
mov
imul
jo
mov
sbb
or
and
test
incb
rcr
mov
imul
jmp
and
pop
mov
mov
mov
sbb
ror
int3
call
mov
mov
arpl
mov
imul
pop
mov
and
mov
pop
xchg
mov
nop
into
mov
stos
mov
fldl
mov
pop
out
rcrl
xlat
mov
cmp
pop
cmpsb
ja
cmp
sahf
pop
xor
inc
xchg
jg
push
push
sar
in
dec
outsb
add
enter
xchg
xor
pop
add
pop
ffreep
dec
ja
aas
mov
push
push
shlb
push
push
jae
in
and
dec
aas
in
inc
enter
in
push
mov
dec
pop
dec
jmp
lcall
or
mov
pop
pop
or
add
stos
lcall
add
cmpsl
pushaw
pop
sbb
xlat
icebp
pop
inc
xchg
sub
or
adc
adc
cmp
pop
mov
jmp
test
inc
adc
mov
sbb
shrl
or
xchg
pushf
es
fwait
xor
adc
cmp
push
shrl
filds
jg
sub
das
hlt
sti
jb
and
or
fabs
sahf
xorb
push
mov
sub
cmp
lds
icebp
mov
add
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
dec
lahf
and
xor
xchg
outsl
cltd
aas
mov
mov
lock
pop
pop
daa
lock
lods
pop
scas
pop
subl
sbb
mov
mov
and
xor
addb
shll
fstps
mov
js
mov
add
sahf
imul
cmp
pop
ret
outsl
mov
or
mov
dec
sbb
ret
mov
fidivrl
pop
mov
in
test
shl
outsl
add
sub
js
mov
mov
cmc
sub
push
and
dec
jns
addr16
or
cmpsb
mov
nop
and
pop
pop
jp
pop
jecxz
mov
mov
cmp
lods
fisubrl
nop
ljmp
xchg
adc
push
pop
lods
pop
and
fisttpl
and
mov
loope
cmpb
xor
ss
jo
inc
popa
inc
std
jmp
inc
jnp
pop
ljmp
add
ds
mov
inc
jge
aaa
pop
pusha
mov
cmpsb
mov
fistps
std
add
jnp
push
mov
idivb
sarb
sub
xlat
mov
sub
xchg
xlat
pop
int3
mov
fst
push
sbbl
sub
subl
addr16
or
mov
enter
sub
mov
sbb
cmc
sbb
sub
ds
sub
jae
push
adc
aam
lcall
or
sahf
dec
lds
sahf
cmc
adc
imul
out
sub
adc
sbb
daa
fwait
push
movsb
sar
mov
mov
popf
mov
es
jmp
xchg
xlat
mov
mov
adc
xchg
add
lock
inc
xlat
or
mov
fwait
mov
jecxz
adc
movsb
jg
and
int
and
fisubrl
enter
insb
mov
sub
xor
sbb
cwtl
lea
aad
sub
push
es
pop
push
insl
jb
jb
dec
cmp
arpl
sub
shlb
sbb
into
pop
sbb
sbb
sbb
fnstenv
cmp
les
ror
pop
sub
outsl
and
inc
js
inc
out
lret
sbb
dec
dec
mov
push
inc
int3
test
pop
mov
sbb
or
adc
dec
xlat
mov
hlt
pusha
add
jle
ret
sti
push
jmp
movsb
ds
mov
daa
scas
outsb
fisttps
push
int
or
daa
cmpsl
andl
insb
lahf
hlt
iret
pop
cmp
lds
data16
push
incl
adc
inc
lret
imul
xor
xor
lret
sub
loope
lods
lahf
cli
cmp
mov
cmpsb
adc
and
popa
sbb
outsb
lcall
ja
xchg
mov
pusha
inc
mov
pop
repz
les
sub
pop
inc
adc
or
mov
and
popa
movsl
pop
cmp
js
add
outsl
jns
xchg
cli
and
pop
and
cld
inc
push
inc
add
push
xchg
repnz
out
shl
cmp
cltd
ret
idivl
movl
inc
stos
mov
imul
sbb
dec
in
xor
divb
inc
inc
movsl
rcll
jecxz
verr
cmc
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
jmp
cli
mov
inc
jge
and
je
sbb
sub
mov
mov
cmp
stc
xchg
fsubrl
das
jge
xchg
jo
xchg
adc
not
imul
popl
cltd
cmp
lea
dec
sti
add
mov
xchg
fcomps
jge
xor
lahf
int3
xchg
push
cmp
out
mov
popa
testb
inc
lods
mov
lods
and
js
push
icebp
imul
push
dec
mov
movsl
jecxz
out
enter
pusha
shll
lcall
jp
fisttpl
sbb
shrl
ret
mov
imulb
xor
xchg
in
repz
inc
leave
sbb
int3
popa
jp
imul
les
lock
stos
mov
outsb
test
pop
mov
loope
test
fstps
int3
in
ds
mov
enter
cmpsb
arpl
mov
out
hlt
in
xor
cltd
push
sbb
rclb
mov
je
pop
push
mov
cwtl
gs
adc
jg,pn
lret
cmp
dec
bound
add
jl
movb
test
stos
nop
push
mov
lea
imul
mov
movsl
sub
mov
lods
sarl
lock
iret
mov
out
jp
or
cmpb
setbe
lock
cld
mov
mov
scas
jbe
int3
add
imul
arpl
push
jno
or
shlb
imul
xor
pop
xor
aam
pop
aaa
je
jno
fcoms
xchg
add
add
xchg
push
outsl
adc
xchg
dec
mov
and
adc
sbb
push
sub
pop
mov
dec
addr16
mov
mov
jle
xchg
inc
push
mov
mov
xlat
inc
shl
stc
xchg
and
jnp
or
mov
mov
fdivrl
lods
fldenv
pop
leave
dec
mov
sub
dec
jno
ret
loop
sub
xchg
push
mov
push
mov
jns
and
in
push
lds
cmp
mov
fbld
jmp
sahf
imul
cmp
cmp
stos
pop
mov
rcrb
rorb
sbb
xchg
shr
mov
stc
adc
stos
scas
loop
imul
iret
pusha
jne
paddd
dec
stos
das
mov
ret
sbb
scas
mov
shll
sbb
mov
loope
call
inc
leave
je
push
or
iret
and
int3
jl
fs
or
fwait
movsb
aam
inc
push
lock
sarb
fwait
lods
and
push
push
push
lcall
pusha
lds
push
jb
ja
xlat
sub
cmp
and
mov
inc
lock
jno
add
inc
in
pop
add
movl
mov
mov
or
sub
or
sub
mov
imul
sub
mov
mov
xor
xor
or
mov
div
mov
xor
push
pop
mov
mov
sub
mov
div
mov
mov
mov
or
sub
or
mov
sub
mov
sub
sub
cmp
ja
mov
mov
add
and
mov
add
mov
sub
mov
sub
mov
mov
mov
jmp
mov
mov
outsl
jno
add
xor
mov
mov
mov
aam
sbb
jmp
pop
mov
orl
lds
push
ja
xor
scas
lret
xor
mov
aad
mov
push
in
pop
mov
roll
push
xchg
mov
pop
push
xchg
ficompl
and
jle
add
mov
sahf
cmpsl
shrb
es
outsb
cmc
sti
inc
or
and
loope
mov
hlt
xchg
stos
shl
cmpsb
ljmp
or
dec
sub
add
sbb
shrb
scas
das
and
push
dec
xor
in
add
sub
js
mov
lods
test
jmp
jl
insl
xchg
mov
cs
mov
push
dec
cmc
sarl
jecxz
lret
fwait
jge
testl
movsb
jl
outsl
mov
pop
dec
pusha
popa
jbe
stc
test
mov
xor
xor
arpl
jp
adc
sbb
mov
mov
test
int
orb
js
insb
ja
stc
pop
scas
in
pop
dec
js
adc
mov
fisttpl
adc
add
stos
fsubrp
xor
dec
je
jae
scas
aam
xchg
mov
jle
icebp
dec
dec
mov
test
jae
test
aaa
mov
xchg
mov
negb
sbb
outsb
insl
repnz
xor
jno
pop
add
addr16
stc
adc
lods
movsl
xchg
pop
mov
adc
scas
cld
rorb
lret
ljmp
iret
leave
fnstcw
lods
out
pop
aad
adc
jmp
push
jne
in
lock
pop
movsb
jb
sti
push
jo
mov
lahf
mov
popa
mov
pop
imul
subl
addr16
add
mov
mov
pop
jnp
xor
idiv
fcmove
in
jne
cmp
std
fmuls
inc
pushf
mov
cwtl
push
push
fsts
mov
scas
and
xorl
mov
fadds
or
or
adc
into
movsl
adc
cmp
repnz
lods
push
mov
add
adc
push
roll
lret
repz
inc
mov
inc
jl
out
jns
mov
js
inc
and
xlat
xchg
inc
fsubl
mov
xor
fcoms
enter
push
je
out
inc
jbe
cltd
fs
hlt
push
xlat
adc
adc
movhps
xchg
mov
mov
push
pop
inc
mov
dec
repz
add
or
arpl
adc
push
xchg
jge
pop
repz
push
dec
xchg
out
push
repz
mov
add
adc
push
or
call
add
jne
int
xor
mov
jmp
repnz
mov
ja
add
sbb
mov
mov
shll
adc
aam
outsl
inc
sbb
fstpl
negl
sti
lods
inc
xor
jnp
pop
in
out
popf
inc
movsb
and
adc
pop
std
mov
push
aas
lret
mov
mov
xor
xlat
sbb
mov
pop
mov
cwtl
leave
ss
mov
inc
fs
xchg
imul
xchg
and
mov
addl
les
outsb
inc
adc
mov
fdivrs
mov
mov
leave
add
lret
dec
inc
xchg
adc
icebp
xchg
imul
clc
xlat
jne
xor
int
inc
pusha
and
in
out
daa
sbb
dec
rclb
xchg
xchg
jne
gs
lahf
mov
loope
out
jns
lods
cmp
jg
xor
add
xchg
xchg
sbb
xor
cmc
call
les
pusha
rcrb
mov
fidivrs
fwait
mov
cmp
and
pop
jno
sahf
sbbb
mov
mov
sbb
rcll
add
xchg
mov
or
adc
jp
cli
or
dec
in
push
imull
or
in
ljmp
adc
ljmp
das
pop
adc
fs
mov
jle
push
sub
subb
mov
mov
push
dec
shl
and
mov
pop
insl
dec
or
lods
jnp
and
add
addr16
inc
and
iret
idivl
std
jns
imul
jno
or
repnz
fildll
mov
mov
xor
test
out
pop
enter
stc
xchg
xor
mov
sbb
mov
test
push
dec
idivl
or
pop
lock
sub
pop
push
test
cltd
pop
or
pushf
push
and
aad
daa
xorl
ljmp
iret
stos
movsl
es
cmp
mov
cltd
out
cmp
mov
sbb
xor
xlat
ss
xchg
mov
sbb
lcall
out
add
data16
ret
jge
mov
lds
outsl
xor
int
movsb
das
out
xlat
into
lahf
sbb
js
xchg
jnp
rcrl
sub
pop
cmpb
pminsw
and
push
xor
pusha
scas
sbb
stc
dec
add
rorl
add
or
xchg
jbe
cmp
cmp
mov
sbb
pop
ret
push
outsl
insl
sahf
cmp
xor
out
jnp
push
lods
xor
sti
add
dec
andb
or
ficompl
add
sbb
scas
shll
mov
div
jmp
ljmp
mov
adc
push
dec
dec
xor
insl
mov
mov
in
sub
pop
or
es
pop
mov
int
dec
shr
adc
inc
stos
mov
jge
mov
into
loope
fisttpl
nop
loope
sub
cmp
cs
sbb
jecxz
xor
mov
decb
dec
cwtl
ds
cltd
bound
and
adc
iret
je
int3
dec
ret
popf
xor
adc
adc
hlt
jl
nop
fwait
xchg
insb
pop
cmp
inc
cltd
popf
and
cmpsb
mov
and
inc
cmpsb
dec
sahf
mov
add
insb
in
hlt
test
jl
jp
mov
inc
gs
push
adc
fldl
cltd
cmp
popf
mov
cmp
xchg
push
das
insb
mov
push
sbb
cmp
mov
and
cmc
out
int3
insb
mov
push
lea
and
enter
clc
jns
inc
dec
bound
or
push
in
jne
lahf
iret
mov
push
pop
cli
pop
mov
xlat
or
lock
sub
lcall
sahf
arpl
mov
stos
pop
mov
je
ret
out
mov
and
ret
adc
call
xor
xchg
jnp
mov
jne
cmp
outsb
bound
jae
cmp
xchg
xchg
mov
int3
call
lahf
lcall
pop
int
cld
stc
pop
fsubrs
sbb
cmp
cli
shrl
imul
sub
or
leave
mov
loopne
popa
out
je
pop
jmp
sbb
cld
movsb
adc
inc
jp
jbe
call
in
xchg
cmpsl
push
lret
lods
sti
add
cmc
outsl
outsb
add
sbb
ljmp
inc
das
aaa
mov
mov
lret
pop
pusha
shrb
push
das
adc
adc
xor
adc
xchg
mov
mov
cli
mov
inc
or
dec
inc
xchg
pop
fldz
fwait
push
mov
xchg
dec
pusha
cmp
adc
jg
arpl
inc
mov
xchg
jns
mov
push
cs
int3
or
xchg
pop
jmp
loope
stos
sub
imul
inc
adc
mov
imul
les
js
and
xor
jbe
test
sarl
imul
adc
lret
and
add
int3
mov
stos
je
push
ja
imul
mov
push
jmp
dec
xor
dec
hlt
imul
xor
xor
push
add
mov
or
mov
div
mov
xor
sub
mov
mov
pop
div
mov
mov
or
sub
or
mov
sub
mov
jmp
adc
inc
xorl
imul
popf
outsl
subb
jns
mov
pop
push
in
inc
jne
dec
pop
or
push
push
inc
jns
mov
mov
mov
jae
fmuls
out
aas
push
movsl
push
aaa
push
ret
pop
scas
dec
jae
mov
mov
add
fsubl
add
cli
xchg
movsl
push
mov
orb
dec
bound
lods
test
ljmp
jmp
repnz
mov
fadds
rcll
xchg
notb
ljmp
or
and
sahf
sbb
ss
jae
lret
in
or
lcall
fdivrs
int
and
fistps
fdivs
fs
jnp
adcl
lock
cmp
sub
js
outsb
push
mov
fistpl
cmp
mov
mov
push
je
sti
cmp
push
xchg
stos
aas
loop
mov
mov
ja
jge
daa
push
cs
mov
fisttpll
cmp
imul
bound
add
mov
or
hlt
dec
xor
sbb
into
int
pop
hlt
mov
mov
sbb
in
repnz
mov
pop
mov
mov
dec
ret
inc
sarl
xchg
sub
rolb
pop
sbb
les
mov
inc
jb
insb
je
jg
jns
add
push
jno
outsb
mov
stos
notl
mov
or
jbe
mov
lcall
sbb
pop
push
lret
inc
scas
cmp
mov
xor
rorb
dec
in
sti
add
xchg
push
stos
push
imul
insl
lds
aaa
push
aas
jmp
jecxz
and
fstpt
out
push
cmp
inc
dec
enter
loopne
adc
or
dec
add
add
dec
push
fisubl
mov
or
mov
xchg
cmp
ficomps
out
lock
fildl
xor
int3
mov
sahf
and
les
cwtl
or
imul
aaa
fidivrs
sbb
xor
stc
or
stc
inc
push
jp
pop
dec
pusha
xchg
xor
fcomip
xchg
pushf
or
in
and
push
ss
pop
out
sub
cmpsb
sbb
and
lret
out
push
sbb
sub
fcomps
pop
cmp
gs
mov
mov
cld
inc
and
fwait
inc
push
adc
test
and
loop
ljmp
xacquire
mov
cmp
rorb
outsl
lods
lds
addb
test
hlt
insb
int3
fists
test
lea
cmpb
outsl
loop
pop
adc
in
push
aam
sub
jmp
xlat
out
jae
jae
xchg
aaa
xor
imul
sub
jns
mov
jns
pop
or
jae,pt
mov
pop
pop
cmp
sarb
dec
decb
cmpsl
inc
xor
mov
mov
test
mov
sub
dec
test
and
mov
insb
std
mov
xchg
aas
adc
fisubrs
xor
je
mov
lret
testl
and
test
hlt
sbb
mov
push
jmp
jns
cmc
mov
cmp
jmp
fistpll
cwtl
mov
rorb
push
aaa
shrb
jbe
mov
repnz
inc
cmp
bound
subb
cmp
lds
loop
jge
loop
icebp
push
pop
sbb
aam
sub
ret
into
pop
pop
mov
pop
mov
lcall
mov
push
imul
repnz
je
dec
outsb
or
or
in
sbb
cmp
push
jb
ret
iret
sbb
arpl
or
aaa
mov
pusha
icebp
xor
mov
dec
sti
pop
xor
inc
int
inc
sahf
cmp
dec
mov
xchg
stos
push
fnsave
in
dec
mov
jnp
cli
and
fidivs
adc
loop
loopne
aas
clc
popa
push
mov
rolb
psubusb
mov
in
or
and
pop
in
rcll
inc
test
cmp
cmpsb
xchg
sub
sti
out
mov
jnp
inc
cmp
les
or
into
loop
dec
pusha
lcall
js
std
in
ljmp
push
inc
in
push
jge
mov
in
inc
push
lahf
mov
jbe
push
in
pushf
idiv
cmp
or
xor
push
sbb
fstl
frstor
push
cmp
push
and
jno
add
test
ja
addr16
mov
lahf
cmpsb
jge
cmpsb
imul
or
pop
lods
mov
xorb
push
mov
mov
inc
sub
xor
pop
jmp
dec
ret
mov
push
xchg
outsl
sbb
icebp
pop
out
insb
nop
leave
lcall
fcoml
or
mov
pop
add
push
pop
cmc
fnsave
mov
popf
popa
and
pop
fld
loope
sbb
cmp
dec
ss
xor
adc
sub
int3
lods
mov
cmpsb
movsl
aad
push
sub
lret
outsb
xor
fcomip
clc
mov
adc
dec
enter
jbe
clc
lds
push
mov
jbe
out
mov
sub
lret
push
data16
loope
rorl
ret
inc
sbb
js
sub
cmp
jmp
out
cmp
ficompl
push
mov
add
jns
mov
or
add
adc
push
dec
jg
cmp
push
adc
dec
clc
mov
mov
push
inc
or
dec
jb
pop
sbb
add
jmp
fidivl
push
jo
adc
and
fidivrl
pusha
test
pusha
inc
mov
add
pusha
cmp
cs
mov
int
xchg
sub
and
sti
dec
adc
shlb
lret
cmpl
add
scas
fnsave
mov
xchg
stos
arpl
les
rol
and
pop
mov
mov
cld
sub
pop
jnp
fdivr
sub
int
mov
addb
cmpsl
out
xor
rcrl
jge
sbb
pop
nop
jbe
or
mov
insb
negb
adc
pop
mov
push
jmp
testb
add
ja
inc
les
mov
sub
or
out
in
mov
xchg
out
xchg
fsubrl
xchg
push
mov
repnz
gs
adc
pusha
icebp
jmp
xor
sbb
in
inc
dec
sub
cltd
lock
enter
cmp
mov
lret
sbb
cli
mov
pusha
dec
add
sbb
dec
pop
out
ss
mov
dec
xchg
xchg
rorb
push
sub
jg
sub
int3
inc
jb
mov
aaa
ss
mov
add
ret
xor
shl
stos
pop
pushf
popa
xchg
mov
dec
test
mov
push
xchg
es
stos
xor
and
inc
dec
pop
pop
mov
dec
out
int3
sub
test
ret
cmpsl
ret
dec
sti
sub
cld
xor
test
xchg
clc
stos
jne
pop
mov
pop
fiaddl
pop
les
xchg
or
mov
stos
add
jb
cmpsb
push
sub
andl
add
xorl
push
aas
inc
xor
cmc
cwtl
dec
in
arpl
das
mov
mov
mov
mov
mov
in
and
add
arpl
loope
or
cli
xchg
xor
xor
sti
jnp
std
push
mov
xchg
incb
movsl
xor
scas
scas
ljmp
icebp
mov
xor
inc
rol
enter
jae
iret
cmpsl
jns
mov
cli
fmull
lret
dec
push
or
shr
push
cltd
or
inc
dec
leave
push
pop
push
sub
loop
out
repz
jge
and
outsl
xor
bswap
adc
push
loopne
add
push
and
mov
in
pop
push
xchg
jns
jle
aad
mov
mov
loope
dec
mov
dec
sti
loop
xor
scas
mov
sub
imul
adc
xchg
lcall
pop
leave
ret
push
mov
sub
push
push
push
mov
and
mov
and
shrd
shr
andl
mov
or
mov
neg
xor
cmpl
movl
mov
movzwl
mov
jmp
mov
mov
cmpl
jg
pushl
pushl
pushl
pushl
call
or
xor
mov
sbb
mov
xor
mov
xor
or
sbb
mov
mov
jmp
lods
cmp
xchg
dec
mov
popf
outsl
jp
pop
xor
lds
inc
jle
jg
or
xchg
aad
xlat
jp
cmp
addl
pop
adc
inc
loop
ret
mov
daa
outsb
mov
aam
jns
fdivrs
cmp
jbe
in
or
shrl
xchg
jb
jecxz
ds
dec
xor
or
inc
dec
mov
mov
addr16
or
push
mov
xlat
icebp
movsb
pop
mov
loop
out
icebp
mov
ja
subb
mov
cmpsl
lahf
loop
pop
ljmp
xchg
dec
gs
fdivs
rep
jno
dec
adc
imul
sar
push
xchg
loope
xlat
mov
enter
push
rorl
or
hlt
ljmp
adc
shll
jns
clc
mov
and
int
pop
daa
lahf
or
xor
fisttpl
pushf
cwtl
scas
arpl
ret
sbb
sbb
jae
ds
lods
jne
rclb
roll
add
dec
push
call
fcoml
xchg
mov
movsl
xor
jecxz
int3
negb
bound
xor
stc
lods
xor
push
nop
adc
mov
adc
arpl
xor
js
inc
stc
aas
add
pop
add
addr16
and
adc
test
xor
stos
insb
mov
rcrl
out
fdivs
cmpsb
pop
jmp
aam
movsb
jg
or
outsl
sub
ficoml
int3
lock
and
adc
and
outsb
push
dec
testl
inc
in
cmp
add
sub
hlt
push
mov
lcall
aad
jbe
mov
cld
push
push
add
push
cmp
in
lret
mov
jmp
pop
inc
pop
push
sbb
xchg
les
in
xchg
aas
jecxz
add
out
sbb
sub
jb
push
ficoml
cmpsl
cmp
mov
lret
mov
lret
out
add
mov
aam
mov
aas
xchg
cmp
popf
sbb
and
mov
sbb
mov
fs
out
inc
xor
cld
lods
dec
es
xchg
daa
dec
mov
and
pop
daa
lret
xor
cmpsb
pop
push
jmp
je
cld
or
mov
add
mov
and
test
les
cmp
and
mov
addr16
out
mov
std
add
xor
inc
and
pop
fs
xchg
cmp
sub
cmp
popa
stc
pop
adcl
sub
not
loopne
or
ja
jbe
mov
sub
cli
icebp
movsl
stos
mov
xor
into
popf
stos
jp
cmp
xor
loopne
lcall
ja
push
nop
mov
popf
pop
xor
enter
out
mov
es
mov
decl
or
fsts
mov
mov
jne
bound
shll
rcr
add
loope
into
js
sub
mov
lret
sbb
jl
shl
mov
shrd
xor
or
shr
and
mov
mov
xor
mov
xor
add
sub
xor
or
add
mov
mov
mov
sbb
mov
mov
add
mov
mov
xorl
mov
adc
mov
and
mov
mov
adc
shl
xor
addl
shld
mov
adc
shl
mov
mov
sub
or
mov
neg
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jg
push
push
push
call
mov
add
mov
neg
sbb
adcl
xor
add
mov
orl
xor
notl
xor
movl
movl
movl
mov
movl
cmp
jne
movl
cmp
movl
je
cmpl
movl
movl
mov
jmp
movl
movl
cmpl
jg
push
call
subl
sub
xorl
addl
subl
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jne
pushl
call
subl
movl
sub
adcl
adcl
sub
mov
addl
xor
subl
shld
shl
xor
cmpl
mov
mov
jmp
movl
movl
cmpl
jbe
push
call
sub
and
movzwl
add
dec
and
xor
mov
add
or
mov
xor
mov
mov
movl
cmp
movl
jne
movl
cmp
je
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
call
sbb
inc
sub
and
mov
mov
movzwl
add
push
notl
jmp
xor
je
mov
inc
jno
stc
pop
add
nop
lds
or
aas
mov
jge
pop
xchg
shlb
mov
ficoml
lret
push
imul
mov
sbb
pop
sbb
jne
lods
xchg
mov
pop
pushf
add
jns
gs
pop
mov
jnp
int
push
mov
ss
sub
sbb
push
inc
cs
mov
sbb
push
into
into
repz
push
add
aad
lea
or
jle
stos
ja
out
ret
fsubl
std
xchg
dec
xchg
mov
sar
and
ds
dec
lods
adc
cli
dec
ss
mov
inc
cmc
cmpsl
and
xchg
negb
js
das
mov
and
shrb
add
or
jge
xchg
mov
pop
push
cmp
push
fwait
and
iret
xor
sbb
jmp
out
out
clc
fbld
clc
push
dec
jg
insl
cltd
add
jmp
sub
loop
push
push
sbb
or
dec
xor
add
xor
mov
cmp
cmc
add
cmp
mov
movsl
jmp
pusha
cmovns
das
add
leave
xchg
inc
xchg
lea
dec
faddl
shlb
mov
push
aam
or
pop
shlb
aaa
insb
in
jge
aas
mov
push
outsl
ljmp
xor
pusha
mov
cmp
pop
stc
out
sbb
je
push
pop
lea
leave
scas
ja
dec
add
xchg
adc
enter
enter
jne
punpcklbw
jo
or
dec
mov
icebp
loope
mov
push
jae
and
and
ficoml
jne
adc
pop
mov
loop
inc
xchg
call
cmp
dec
pop
mov
jne
fs
mov
xor
mov
es
fildll
lcall
sti
sbb
push
mov
push
xor
mov
xchg
cmp
xor
dec
add
lahf
mov
gs
int3
test
stos
mov
or
inc
int3
jns
fcoms
cmp
sarl
add
push
insb
inc
jb
scas
cli
cmp
sahf
les
int
mov
push
mov
jl
pop
add
out
cwtl
dec
push
and
push
and
dec
aaa
or
cmp
and
fisubl
ds
fildll
leave
cld
pushf
mov
xchg
pop
jbe
test
mov
xchg
mov
orb
adc
mov
insl
in
adc
stos
sub
insb
addl
xor
pop
sub
out
push
and
jg
mov
mov
sub
or
ljmp
jns
pusha
mov
xchg
xor
jmp
lret
push
pushf
mov
push
out
stos
mul
movsb
jbe
mov
inc
mov
in
pop
fs
psrld
iret
cld
pusha
push
movsb
aaa
jle
cmp
ret
pusha
inc
repnz
pop
inc
std
daa
mov
sbb
sahf
and
lret
movzwl
sub
mov
shl
cmpl
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
push
push
push
call
adcl
xor
xor
sbb
sub
mov
mov
sbb
or
mov
xor
mov
sbb
mov
xor
shr
or
sub
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
je
push
pushl
call
neg
xor
xor
add
xor
add
sbbl
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
push
push
pushl
call
xor
sbb
xor
sub
mov
mov
and
mov
push
movzbl
adc
pop
movl
jmp
cmc
outsl
mov
loope
jno
outsb
test
pop
xchg
mov
mov
mov
lret
mov
adcb
out
and
push
xchg
jo
push
xor
icebp
jae
xchg
cltd
sbb
in
std
mov
out
adc
cmpsl
divb
xchg
sub
test
push
stc
ret
add
call
je
jns
jno
shlb
jne
mov
cmp
or
shlb
dec
sub
jge
pop
adc
sub
xchg
xchg
xlat
cmp
and
push
xor
sub
sub
clc
movsl
push
dec
inc
daa
mov
lods
rep
lret
sahf
sub
imul
xchg
ret
push
add
mov
dec
mov
orb
mov
or
fwait
jns
sbb
push
and
fwait
xchg
bound
iret
adc
data16
cld
sbb
adc
fisttpl
inc
mov
gs
push
fwait
lods
jne
je
in
pop
mov
push
mov
popa
inc
call
dec
std
sbb
cmp
lahf
or
dec
cmp
sahf
cwtl
lcall
xchg
les
inc
stc
sti
xor
subb
sbb
xchg
mov
mov
cmc
adc
sarb
sbb
xchg
movsb
clc
mov
dec
lcall
adc
or
sarb
jge
imul
adc
mov
cmpsw
stos
loopne
vmovntps
inc
jno
pop
test
lret
pop
enter
shrb
add
push
mov
jmp
test
jne
add
js
iret
pop
aam
adc
add
pop
lahf
das
mov
rcll
test
notb
pop
sbb
test
push
test
notl
out
add
push
out
push
adc
nop
fdivs
cmp
add
jbe
xlat
loope
cmp
dec
jnp
gs
mov
lods
pop
mov
int
mov
das
push
sbb
and
dec
js
jnp
stc
cmp
mov
ret
pop
popa
icebp
inc
dec
or
mov
movsl
loopne
loope
cmp
mov
dec
or
and
add
into
adc
add
push
or
dec
adc
popf
pop
push
out
xchg
int3
xor
jg
js
ljmp
xlat
pop
lahf
jge
mov
clc
nop
mov
cli
fldcw
mov
cmpl
iret
lret
fldl
call
xchg
cli
xor
inc
pop
cld
lret
sub
aad
push
add
and
xchg
xchg
dec
jecxz
pop
dec
bound
fucompp
or
jns
sar
iret
sbb
sbb
notl
adc
and
les
imul
adc
inc
sarb
ja
mov
inc
pop
jb
pop
ja
sbb
mov
ljmp
sti
fucomi
movsb
dec
shlb
jnp
sbb
arpl
push
jbe
push
pop
sub
aam
test
int
sub
inc
ficomps
push
sbb
movsl
out
mov
sub
arpl
arpl
shl
mov
add
mov
movzbl
or
lea
cmpl
movl
not
jmp
mov
cmpl
jb
push
pushl
push
push
push
call
sbb
mov
mov
adc
adc
and
adc
neg
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jb
pushl
push
pushl
pushl
call
and
xor
xor
sub
mov
movl
adc
adc
and
mov
mov
xor
add
sub
or
mov
and
mov
xor
adcl
xor
xorl
shr
andl
shl
notl
or
neg
jmp
xchg
or
adc
test
sti
fwait
cmpl
nop
lds
or
adc
cmp
jns
push
pop
adc
loopne
mov
xor
sbb
fidivrl
inc
insl
mov
cmp
stc
mov
lea
add
add
in
mov
fnsave
add
mov
mov
inc
stos
arpl
gs
fmuls
les
adc
dec
mov
mov
outsl
or
fisubrs
lods
jo
inc
lea
sub
les
loop
mov
popa
aad
or
fistpl
fcomps
mov
test
cmp
stc
lret
mov
jne
inc
mov
mov
sbb
and
or
ret
xchg
push
stc
xlat
inc
or
mov
pop
push
clc
addr16
es
outsb
les
out
add
shll
mov
push
push
cld
push
pop
mov
adcb
jp
cmpsb
cmp
mov
mov
jne
push
fadds
pop
popf
mov
sub
or
mov
int
jno
mov
dec
sti
adc
xchg
test
push
cmpsl
cmp
movsl
sahf
sub
xlat
test
push
mov
out
mov
and
call
adc
arpl
dec
jbe
mov
fcoml
inc
fwait
mov
ret
div
in
fs
jge
xchg
sub
push
fwait
mov
adc
xchg
out
sub
cmp
jmp
sub
inc
icebp
cmp
xchg
xchg
or
mov
adc
sub
divb
jbe
jmp
dec
ds
sbbb
adc
cmp
lahf
ds
test
gs
in
movsb
lea
jno
mov
jg
aam
call
fnstsw
or
int
adc
loope
mov
lahf
mull
or
fbld
mov
inc
aad
xchg
in
jecxz,pn
notb
pop
jmp
dec
push
sbb
add
mov
std
xor
fistpl
fcoms
icebp
out
xchg
mov
jo
rcll
jl
fs
inc
xorb
stc
enter
stos
hlt
ss
mov
or
nop
push
call
push
jmp
inc
sti
sub
pop
dec
push
push
fwait
test
cmc
in
xchg
xchg
popf
pop
push
mov
mov
sub
bound
movsl
icebp
lock
xor
and
mov
adc
fld
jno
mov
pop
lret
fstps
repnz
and
hlt
and
ja
int3
in
sub
mov
loope
mov
std
ja
jp
xor
int
and
data16
scas
scas
stos
mov
fldcw
xchg
out
jp
xchg
and
cmc
into
pop
lea
push
ret
cmp
pop
jecxz
sbb
std
popa
test
adc
ficomps
aaa
hlt
daa
pushl
and
ja
push
mov
add
fistps
test
fdivrl
movsl
xor
dec
int3
xchg
in
add
xor
push
pop
and
pop
adc
mov
bnd
mov
adc
add
mov
push
cmp
int3
rcll
adcb
aam
cmp
add
add
or
add
mov
mov
not
jmp
movl
not
cmpl
jae
push
push
push
push
push
push
call
xor
xor
add
sub
mov
adc
add
or
addl
movl
mov
mov
jmp
xchg
xor
xor
popf
mov
ljmp
mov
push
es
subl
pusha
fs
pop
aas
int3
subl
sub
jne
or
or
cmpsb
mov
pop
dec
xchg
push
push
cltd
mov
mov
pop
outsl
das
rcrl
pop
jno
inc
and
inc
mov
or
add
add
inc
mov
cmp
xor
xor
jno
add
sti
cli
insl
arpl
cmc
mov
movsl
inc
lock
mov
push
sub
cmp
push
and
std
inc
sub
test
addr16
xchg
jbe
ja
mov
and
jle
test
or
rol
add
xor
push
cwtl
in
push
imul
dec
pop
cmp
fwait
add
xchg
iret
jle
test
sahf
cwtl
mov
iret
pusha
pop
inc
int
fisubs
xchg
push
dec
and
loopne
loope
adc
mov
test
push
sub
sbb
out
cmp
hlt
lcall
sar
mov
push
scas
cs
ret
or
jb
inc
xchg
adc
sbb
repz
aam
jae
pop
or
push
js
lahf
mov
dec
daa
pop
jl
aas
sub
xorb
repz
gs
leave
pop
xor
or
cmc
enter
fwait
sti
sbb
or
push
aam
cmp
in
jl
aaa
lahf
lods
jge
test
cmp
mull
loop
cmp
jecxz
stc
sbb
inc
lahf
jmp
or
pushf
outsb
dec
out
pop
xchg
out
xchg
in
ss
test
jle
xchg
push
and
cmp
add
test
aas
add
dec
adc
sbb
dec
push
inc
pop
outsl
data16
hlt
aam
out
xchg
add
pop
nop
mov
mov
mov
add
call
and
movsl
ds
lahf
iret
push
sub
adc
mov
cmpsb
sbb
fstp
pushf
sub
pcmpgtb
hlt
scas
js
pop
dec
xorl
mov
pop
jb
mov
iret
enter
fmuls
pop
pop
add
add
cmp
add
std
repnz
pop
add
bound
mov
clc
lcall
cmp
insl
or
push
das
loopne
shlb
call
addb
xchg
in
ljmp
xchg
mov
loopne
cmp
or
dec
push
dec
out
lret
cmp
jns
insl
mov
xchg
dec
fsubs
in
mov
adc
jns
sbb
xchg
ror
cs
jl
negb
insb
push
stos
or
outsl
lea
xchg
sbb
inc
stos
lds
lahf
cmp
pop
mov
movsb
mov
mov
adc
dec
add
idivb
xchg
mov
in
xchg
or
and
insl
xchg
clc
cmp
or
lods
fstl
add
pop
sub
push
mov
xchg
push
adc
fwait
mov
pop
jle
pop
dec
gs
call
add
xor
lods
jo
mov
imul
lods
addr16
test
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
jmp
and
sub
push
leave
cmp
nop
lds
or
pop
jl
jne
in
mov
xor
inc
clc
jmpw
rorb
out
out
int
clc
jl
jns
mov
or
popa
sub
pop
std
leave
push
in
scas
cli
cmpsb
lret
xlat
fstpl
daa
jb
aad
dec
repnz
ja
pop
shl
jne
mov
mov
int3
xchg
sub
push
xchg
xor
out
add
lcall
mov
imul
push
in
xchg
or
mov
das
insl
ljmp
ss
mov
in
test
leave
imul
gs
insb
lret
mov
adc
sbb
or
push
nop
fs
push
mov
pop
leave
dec
pop
sahf
shll
sbb
rol
dec
jbe
cwtl
jmp
jecxz
jg
xchg
cltd
daa
and
gs
sbb
inc
testl
andl
jno
xchg
je
fwait
movsb
outsl
pop
mov
sbb
mov
orl
jp
sub
or
push
cwtl
test
pop
shll
xor
jb
out
outsb
es
jbe
sti
cld
adcl
shll
xchg
push
sub
sub
popf
enter
sbbl
jne
testl
cmp
push
inc
add
jp
mov
sbb
pop
stos
gs
jecxz
andb
arpl
lods
and
and
addr16
cmp
mov
inc
lcall
pop
lds
popa
push
std
lods
sahf
fs
popf
movsb
dec
in
mov
cmp
sub
gs
mov
gs
mov
je
pop
sbb
test
jecxz
cwtl
in
push
lock
sbb
sub
pushf
sub
inc
repnz
lret
cld
pusha
loopne
shrl
jns
pop
pusha
stos
jno
sbb
pop
pop
xchg
lods
cli
dec
inc
mov
sahf
sbb
rcrb
dec
mov
xchg
movsl
fcomps
xchg
jecxz
lods
fcoml
loop
mov
pop
test
testl
jnp
jp
imul
jo
lock
push
mov
or
xor
inc
jecxz,pt
jmp
out
fistpl
xor
adc
mov
and
pushf
push
mov
sub
push
mov
add
pop
xchg
adc
add
sahf
out
mov
movq
shll
in
cmp
cmp
adc
xchg
mov
pusha
or
cs
xor
jns
adc
adc
xor
and
dec
inc
mov
fcoms
inc
lds
cmc
pop
fs
inc
je
jns
push
daa
jmp
pop
stos
pop
mov
int
mov
dec
mov
xor
repnz
adc
xchg
push
mov
mov
inc
push
loopne
js
dec
jnp
fptan
cmp
ret
insb
cmp
lahf
push
leave
xchg
sti
test
andl
sub
out
mov
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
jmp
inc
aaa
mov
mov
mov
inc
sbb
sti
jnp
cltd
outsl
mov
lds
pop
pop
adc
cmpsl
test
ret
lret
mov
and
adc
sub
cmp
jno
std
adc
movsl
xchg
sbb
mov
dec
mov
add
mov
mov
test
mov
cli
and
and
sub
repnz
xor
mov
fmuls
idiv
xchg
mov
jae
movsb
inc
jecxz
notb
mov
fcomps
mov
jb
loope
push
loop
pop
mov
out
daa
mov
das
je
out
inc
fcoms
xchg
inc
mov
xchg
dec
mov
sbb
xor
clc
mov
ljmp
lret
sub
dec
mov
data16
mov
mov
xor
push
xor
sbb
loopne
lcall
insl
notl
fucomi
imul
bound
cs
mov
in
pusha
insb
gs
aaa
mov
dec
dec
cltd
sbb
in
fs
jnp
push
cmp
sarb
fldenv
daa
loopne
mov
mov
or
xchg
add
pop
cmpsw
fidivrs
je
pop
pop
jmp
jecxz
inc
or
sbb
repnz
js
sahf
and
mov
clc
sti
add
mov
loopne
push
out
dec
loopne
inc
push
jo
add
lock
jo
outsl
movsb
popa
sarb
jge
movsl
movsb
cmpsl
jae
loop
pusha
rclb
mov
stc
sbb
pop
shlb
push
mov
es
add
adc
rclb
pop
sub
inc
das
sub
jo
xchg
insl
cmpsb
mov
icebp
loopne
lock
xor
sbb
cld
sahf
flds
repz
addr16
push
ss
lock
jmp
pop
popf
mov
cmp
popa
fstpt
outsl
xlat
xchg
add
sub
mov
cbtw
mov
js
lahf
or
lret
push
mov
insl
adc
jae
fwait
xchg
jg
mov
scas
inc
cltd
inc
shr
enter
mov
pop
mov
aas
mov
scas
movsb
adc
leave
in
inc
xor
nop
stos
nop
xchg
fsubr
mov
into
leave
fsubrl
cmc
roll
je
shlb
mov
movsb
lods
and
sbbl
ja
inc
sub
jl
lcall
xor
xchg
fidivrl
xchg
pop
jmp
xor
movlps
inc
xchg
inc
xor
pop
stos
in
icebp
mov
dec
rcrl
rcl
dec
test
out
sub
push
jnp
push
call
insb
inc
pop
add
pop
push
xchg
mov
mov
pusha
adc
fistpl
push
pop
inc
cmpsl
cmp
dec
pop
pop
jg
stc
pop
mov
jp
jge
ficompl
shrl
mov
mov
xchg
dec
xchg
dec
push
xor
jg
mov
jp
xchg
mov
out
and
inc
mov
mov
test
xor
adcl
lock
push
scas
jge
jge
out
cmp
and
shll
adc
mov
pop
testl
mov
bound
xchg
inc
sbb
fisubs
sub
jno
cmpsb
je
mov
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
jmp
int
adc
cmp
fnstsw
fcoml
outsl
outsl
scas
mov
mov
call
in
mov
xlat
lret
inc
sbb
mov
rorl
add
adc
stc
or
orl
movsl
orb
out
mov
xchg
jmp
jnp
pop
and
xchg
pop
jge
orb
adc
lcall
jmp
loopne
call
loopne
sarl
cmp
mov
hlt
scas
xchg
pop
pop
and
inc
imul
and
bound
movsb
xor
es
dec
add
lock
xchg
rcr
movsb
pop
aam
and
mov
lahf
iret
inc
fsts
stos
js
sub
xchg
scas
mov
pusha
sub
or
jo
jno
add
fcmovnb
ret
inc
mov
jmp
mov
xchg
popa
fistpll
scas
test
mov
xchg
dec
inc
arpl
jmp
add
je
ret
push
jo
sub
push
das
sub
jecxz
lcall
repnz
movsl
pusha
out
jne
popf
pop
jl
out
cwtl
fprem
out
not
inc
fdiv
loop
aam
test
cwtl
rcll
push
mov
pop
mov
mov
sbbl
test
ret
or
je
fdivl
xchg
sub
stos
xchg
jmp
mov
movsb
fimull
jns
fistpll
in
mov
data16
xchg
ficoml
add
adc
aam
movsb
dec
jb,pn
pop
push
inc
jmp
arpl
dec
lods
and
in
mov
cs
icebp
add
cmp
lea
mov
pop
jo
fisttps
inc
fiadds
sbbl
stos
nop
or
or
stc
mov
mov
fisubl
sbb
mov
jmp
pop
jmp
lods
pop
cli
stc
adc
pop
test
ljmp
lcall
pmaxub
sub
sub
adc
lods
call
data16
xchg
ja
mov
mov
or
icebp
xor
lds
daa
daa
mov
icebp
adc
sbb
push
dec
jbe
fldenv
xor
lcall
imul
fs
popfw
sub
pop
sbb
inc
or
pushf
pop
and
das
mov
shll
std
mov
xchg
xchg
ja
dec
mov
mov
shrb
inc
jnp
sti
iret
ljmp
shlb
insl
push
cld
pop
dec
orb
loopne
out
push
repz
das
jp
call
inc
lods
popa
xor
fcoms
fisttpll
inc
hlt
inc
pop
rcrb
stc
sbb
inc
mov
add
xchg
add
adc
cmpsl
cltd
dec
xchg
xchg
sub
in
xor
subb
fwait
mov
xchg
lahf
jo
hlt
stos
inc
adc
or
addr16
ljmp
mov
std
ja
mov
lahf
xlat
lock
mov
hlt
insl
imul
shrb
in
xor
out
mov
lret
data16
mov
incb
adc
mov
scas
xor
push
sbb
push
in
and
cli
cmp
xor
out
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
jmp
fdivrs
mov
mov
test
inc
mov
mov
cwtl
pop
rorb
and
mov
add
jbe
ret
arpl
rolb
lcall
das
mov
pop
lock
xor
pop
daa
inc
ss
in
cmp
cmp
xor
call
je
f2xm1
add
push
and
rorl
jg
jbe
adc
int
inc
dec
int3
xchg
jle
stos
out
or
out
std
adc
int3
ss
in
fistpl
std
jbe
xchg
mov
cmp
pusha
cmp
xchg
dec
divl
hlt
in
xchg
fmull
stos
js
push
cwtl
mov
divb
popa
aas
inc
lea
sub
cwtl
xchg
aas
in
in
addl
push
cmpsb
in
and
sbb
data16
mov
adc
xor
lock
push
sub
test
sbb
mov
lcall
adc
js
and
xor
lcall
test
adc
jbe
push
inc
lret
inc
sub
repnz
stc
mov
ds
xchg
xor
dec
imul
pusha
bound
xchg
xchg
arpl
ljmp
cli
out
fwait
divl
clc
or
cmpl
push
adcl
data16
lahf
test
jle
push
sub
test
or
mov
movsl
sub
dec
push
sbb
add
or
mov
mov
aam
mov
or
sahf
lock
jg
jg
cmp
and
mov
mov
cmp
pop
jge
dec
incl
gs
adc
test
jl
in
aam
mov
xchg
pusha
aam
xchg
cmc
mov
fwait
sbb
loop
push
xor
push
popa
and
orl
jecxz
and
sbb
xor
ss
cs
push
nop
sar
pop
xor
lock
out
or
xor
mov
ja
je
inc
pusha
std
push
adc
sahf
outsl
stc
xchg
std
lock
rorl
sbb
addb
out
popf
xor
lds
xor
cmp
xchg
push
push
push
lock
dec
sub
aas
add
setno
mov
cwtl
je
jne
mov
adc
arpl
mov
cmp
cmpb
jae
sbb
jge
push
xchg
les
pop
rcll
pop
jge
je
dec
sbb
movsb
dec
jle
or
scas
lcall
nop
jns
jg
and
push
fs
xchg
sbbl
mov
or
xchg
cmp
push
jp
sbb
mov
imul
scas
push
add
adc
adc
and
pop
movsb
adc
add
jmp
adc
test
out
inc
es
fsubrs
ja
xchg
inc
cmp
lret
cli
add
inc
xchg
int
and
test
stos
xchg
sub
cmpsb
pop
jns
popa
pop
rcrb
addl
adc
popf
rcrl
sbb
mov
repnz
fdiv
xor
add
insl
mov
xor
xchg
fildl
pop
fdiv
mov
ss
cltd
sbb
pop
jmp
pop
jb
inc
shrd
shr
xor
mov
mov
xor
or
add
lea
jmp
and
cmp
andb
insb
cmp
mov
mov
mov
cmp
jns
cmp
xor
mov
jge
mov
notb
inc
mov
pop
xchg
fiadds
push
das
movsb
cltd
mov
arpl
fs
mov
sub
mov
sahf
je
scas
mov
adc
push
dec
mov
imul
pusha
or
push
negl
pop
sub
iret
mov
mov
loope
adc
xchg
xor
add
sub
icebp
imulb
in
insl
cld
into
aam
sbb
sahf
mov
add
adc
imul
mov
jge
bound
jo
gs
inc
push
fsubrp
sub
adcl
push
test
cmp
mov
fisubs
repnz
ja
andl
inc
test
enter
gs
test
fwait
lock
jno
dec
jns
cmp
imul
or
xor
mov
pop
mov
popf
jp
ficoml
sbb
xor
leave
add
push
ds
mov
adc
punpckhdq
shll
sbb
andl
xchg
int3
jb
push
sbb
loopne
and
push
xchg
outsb
int
jl
nop
pushf
ja
mov
int3
mov
mov
jp
xchg
fimull
jb
lods
out
xchg
js
inc
and
xor
sbb
push
dec
sbb
inc
aad
xorl
les
jo
int
pop
inc
sub
push
fwait
xchg
adc
pop
inc
xchg
lds
inc
cmpsb
xchg
scas
jg
sub
lcall
sbb
cmp
mov
xlat
dec
xlat
and
arpl
mov
int
cmp
mov
push
inc
jnp
mov
into
bound
loop
loop
xor
in
mov
add
adc
ds
cmp
sbb
fstps
or
dec
not
icebp
out
pop
int
bound
popa
sbb
cld
adc
adc
loop
in
inc
push
adc
sub
jg
ljmp
xchg
pop
in
mov
rcrb
pop
cmp
enter
insl
pop
push
pop
test
and
cwtl
fstps
test
insb
cmc
mov
enter
out
popf
or
movsb
push
push
mov
daa
mov
movsl
jns
aad
lods
jle
inc
pusha
aas
jbe
xor
or
fldcw
fisubrl
in
xchg
sub
add
in
mov
jns
ret
sbb
addr16
xor
lea
subb
je
xchg
negl
shll
pop
subl
xorb
mov
int3
sbb
outsl
xchg
sbb
out
insb
testb
lods
cmp
stos
pop
std
scas
push
test
cmpsl
jp
or
cmpb
cmp
fildl
pop
pop
insl
pop
push
jmp
jnp
push
in
test
out
xchg
pop
pop
cmp
cmp
sub
sub
call
push
lahf
fucompp
dec
in
jnp
and
dec
add
mov
adc
mov
fisttpl
push
lahf
xchg
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
fbld
pop
mov
jmp
das
jno
leave
sarl
rcrb
adc
rorl
mov
jge
clc
outsl
aas
sahf
push
loopne
pop
pop
and
sbb
sub
subb
in
xor
out
iret
lods
sub
xor
ljmp
mov
imul
mov
fildll
je
lds
xchg
repz
gs
xchg
and
xchg
add
jae
shl
fs
sub
lock
cmp
ret
imul
and
leave
lret
jmp
jbe
je
hlt
insl
jo
xchg
xor
in
xchg
aad
or
mov
addr16
lcall
dec
and
inc
popf
add
sub
xchg
sbb
sti
add
sbb
jne
xchg
push
stos
push
xchg
mov
enter
or
push
outsl
sti
lahf
add
shrb
into
add
pusha
mov
and
repz
xchg
mov
adc
divb
out
mov
mov
rcl
lods
ss
sahf
fstps
lds
push
jnp
arpl
lea
mov
in
fsubrs
jmp
and
es
sbb
das
lret
jne
data16
inc
jmp
pop
push
dec
insb
mov
lea
int3
jns
pop
bound
outsb
mov
adcl
lret
mov
jle
sub
dec
rcrl
out
add
scas
femms
rol
cmp
movsl
cmp
imul
test
mov
test
xchg
shrl
adc
mov
sub
xlat
insb
xchg
insb
fdiv
loope
andl
xchg
adc
inc
lcall
out
cld
xor
jnp
cmpsl
pop
cmpl
or
iret
mov
inc
jle
mov
fisttpll
inc
sysenter
bound
xchg
dec
mov
mov
dec
rcrl
stos
push
iret
mov
cmp
in
sub
jl
call
pop
sahf
jb
pop
insl
sub
outsb
ret
movsb
push
or
sbb
pop
mov
cli
stos
push
push
lret
js
ljmp
pop
inc
and
adc
dec
xor
sbb
adc
shll
lea
fisttpll
jg
mov
fistl
push
and
nop
mov
hlt
ja,pt
or
inc
sti
ret
inc
mov
cmc
mov
pusha
fcos
add
push
adc
push
lods
xor
sub
inc
jg
dec
in
fst
ds
xchg
in
testl
and
iret
adc
cmc
xor
dec
lds
sbb
or
std
orb
inc
and
iret
ja
stos
add
fildl
xor
in
pop
aaa
cmp
lods
sbb
xlat
xchg
inc
pushf
rorb
push
dec
jecxz
cmp
mov
cld
int3
cmp
rclb
mov
mov
das
test
icebp
movsb
sbb
mov
or
jg
in
inc
inc
mov
inc
dec
pop
fidivrs
or
push
mov
mov
push
jmp
cmpsb
inc
push
nop
mov
lods
jl
rcrl
xor
push
sbb
mov
sarl
and
fwait
scas
test
out
out
jle
sahf
cmpsl
or
or
hlt
lods
sbb
test
data16
insl
sub
sub
dec
outsb
xchg
push
mov
add
scas
orl
push
clc
jb
and
push
push
fcmovnbe
call
cmp
ljmp
adc
xor
pushf
in
cmp
nop
sub
jo
ja
fistl
cmpl
outsb
xlat
js
lock
mov
or
enter
mov
les
xchg
out
dec
push
cmpsl
mov
inc
mov
add
les
sbb
mov
clc
lock
fidivl
or
inc
fucomip
push
das
into
test
sub
dec
fisubl
fsubs
sbb
lods
jl
das
xchg
push
sub
aad
mov
add
mov
mov
dec
adc
cmpsl
adc
outsl
stos
outsb
dec
pop
sbb
fbld
inc
dec
push
les
adc
cltd
imul
or
dec
add
sti
add
jb
cmpsb
aam
mov
and
xchg
roll
insb
je
aam
in
xor
das
xchg
and
inc
xor
insl
mov
jge
shlb
test
and
imul
adc
sub
and
sub
jge
add
rclb
inc
sub
sbb
sarb
and
les
jg
fisubs
xor
cltd
aad
das
xchg
scas
pop
mov
stos
lds
pop
push
sub
mov
fists
inc
mov
lcall
xor
pop
scas
jle
and
in
push
insb
lods
add
jmp
lock
clc
ret
movsb
push
mov
cmp
jbe
fsubl
sbb
mov
sub
cli
and
in
mov
cmp
imul
int3
xorps
loopne
fdivp
enter
mov
in
or
into
popa
pop
iret
inc
orl
aam
inc
aaa
dec
adc
mov
mov
and
sub
mov
pop
out
sub
adc
daa
xor
nop
adc
addl
je
pop
lret
lcall
pop
inc
aas
xchg
aad
out
add
imul
fcmovnb
dec
icebp
and
cmpb
cmp
mov
fistpll
jae
dec
nop
xorb
mov
adc
adc
frstor
dec
fldt
mov
dec
cmp
cltd
ret
daa
add
pop
iret
lods
push
pop
clc
punpckhwd
out
nop
scas
aas
sbb
lods
stos
loopne
test
stos
les
pop
daa
and
test
pop
mov
push
lods
and
scas
sbb
sbb
xchg
lds
cmpsl
sti
stos
or
daa
mov
add
jb
loop
dec
inc
cwtl
pop
xor
jb
adc
pop
inc
add
sbb
mov
les
outsl
pop
in
fucomp
jle
loopne
dec
movnti
mov
xchg
into
dec
or
and
xchg
mov
mov
lcall
pop
fadds
xchg
imul
dec
xor
push
pushl
shl
call
lea
push
mov
jmp
imul
xor
add
nop
lds
or
xor
pop
fidivrs
xor
dec
test
jle
lea
fldcw
cmp
xlat
push
sbb
repz
in
pop
hlt
pop
js
cmp
sub
add
sbb
pop
mov
dec
xor
lea
mov
adc
xchg
test
mov
setle
imul
hlt
inc
leave
push
xor
adc
leave
ljmp
mov
addb
orb
cmp
mov
ss
jbe
pop
and
pop
rclb
daa
pop
dec
cmc
movsl
mov
ret
mov
jne
cmpsl
ret
xor
mov
leave
scas
or
aaa
cli
into
lods
leave
call
bound
fwait
mov
data16
xchg
scas
mov
mov
in
push
xchg
fcomip
and
out
inc
add
fiadds
push
pop
xchg
and
cwtl
outsb
icebp
repz
clc
es
push
jae
cmpxchg
jl
jmp
notb
pop
out
push
data16
cs
fisttpl
fists
mov
xchg
enter
daa
or
adc
clc
ret
push
sub
add
push
cmp
push
xchg
in
ret
dec
fstl
repz
jbe
rorl
lret
xchg
and
dec
push
dec
and
jmp
inc
cmpsb
add
push
iret
push
add
jbe
mov
aas
inc
mov
mov
aaa
lret
push
arpl
dec
inc
lret
push
loope
dec
in
push
sbb
cltd
aad
faddl
daa
lds
dec
xor
push
fimuls
and
jo
mov
xchg
popa
mov
lds
jo
ljmp
rcl
aas
leave
or
push
mov
xchg
xchg
daa
inc
push
dec
scas
out
in
pop
push
lahf
sub
sbb
sub
adc
sahf
es
mov
dec
popf
movaps
push
jnp
dec
les
aas
jecxz
cmp
std
movsl
repz
mov
cltd
jle
cltd
movb
ljmp
pusha
into
sub
pop
fildl
sbb
push
insb
dec
daa
push
mov
imul
ss
cmp
popf
push
popf
ret
jb
ja
mov
les
aad
out
sbb
pusha
adc
cmpsl
fdivrl
sbb
push
ficompl
pop
mov
icebp
stc
gs
mov
sbb
cmp
cmpsb
into
stos
out
js
inc
jb
lock
or
inc
jmp
repnz
test
jl
adc
and
inc
scas
lahf
push
aad
lock
xor
sbb
pushf
pop
cmp
sub
or
js
cli
mov
push
dec
xchg
outsb
out
int3
mov
cmp
cltd
and
dec
sub
sbb
dec
int3
push
sbb
shrb
shll
cmp
hlt
idivl
mov
mov
sub
push
adc
sbb
sbb
aad
sub
les
mov
ja
in
mov
sbb
xchg
push
push
mov
shrd
shr
mov
mov
xor
xor
jmp
mov
cltd
mov
outsl
out
std
das
pop
ffree
mov
mov
aas
movb
and
lock
clc
hlt
pop
test
add
nop
adc
aad
arpl
vfmaddsub132pd
mov
in
addl
or
cmp
out
gs
xor
cmpsb
pushl
mov
outsb
mov
xlat
pop
jp
sbb
jg
imul
add
sub
sbb
push
das
mov
lcall
dec
pop
sub
lret
add
test
loope
inc
stos
fs
insl
sti
call
repz
out
stos
adc
mov
sub
jno
lds
arpl
mov
sahf
xor
pop
cmp
dec
jbe
stc
js
dec
ret
or
mov
xchg
mov
repnz
jbe
push
inc
xchg
inc
adc
addr16
pop
mov
rclb
inc
lahf
xor
mov
jge
ja
add
inc
cmp
lret
lods
rcll
cmpsl
cmp
stc
das
pop
push
orb
insl
add
insl
call
not
add
lds
subb
lds
mov
mov
pop
testb
shrb
fcoml
cld
sbb
lret
jle
insb
nop
in
jmp
insb
pop
push
pop
adc
jnp
aaa
fists
and
cmp
lock
fists
push
fwait
gs
dec
add
pop
cmp
clc
push
das
cli
popa
push
pop
out
pop
mov
adc
mov
or
mov
mov
icebp
sahf
inc
xchg
hlt
jne
mov
ret
xchg
mov
jg
mov
cmc
xchg
mov
push
lahf
test
dec
xor
xchg
mov
cmp
dec
push
test
int3
push
das
mov
sub
push
and
mov
imul
push
enter
jnp
aad
mov
add
dec
lahf
xchg
adc
out
xor
shl
push
sub
sub
pusha
pop
jb
mov
cmp
out
out
inc
fistpl
xor
cmc
cmp
data16
mov
xchg
cmp
lcall
or
bound
in
jmp
jae
das
hlt
dec
inc
push
idivl
jne
mov
inc
orl
loopne
lea
mov
fwait
and
and
in
lahf
insb
rolb
push
xchg
daa
insb
in
or
or
daa
jno
adc
xor
push
mov
sub
hlt
sahf
inc
test
xor
in
loope
icebp
xor
ja
jb
outsl
cmp
repnz
xchg
mov
xchg
adc
dec
popf
mov
lcall
pop
add
loop
adc
pop
aad
inc
es
mov
mov
call
xchg
cmp
push
scas
jb
sbb
push
daa
add
bound
push
rcll
sbb
shll
imul
ja
add
xchg
mov
outsb
adc
mov
nop
sub
sub
sbb
aas
push
ret
int3
sar
dec
movsl
mov
mov
or
jnp
jae
jmp
or
push
mov
push
pushl
jmp
lock
ficompl
in
xor
rcr
mov
cmp
ffreep
mov
push
arpl
cmp
js
push
test
and
sbb
int
cmp
lods
and
out
sub
mov
int
test
mov
dec
add
repz
inc
add
in
dec
ljmp
mov
fstpl
pop
hlt
pusha
call
dec
add
fists
stos
sahf
insl
je
scas
mov
cmp
movsb
iret
sub
mov
or
lea
loopne
in
aam
lahf
lea
jnp
sub
aad
and
push
pop
dec
mov
stos
fistps
hlt
out
jno
sbb
sbb
aas
iret
push
mov
nop
sahf
stos
add
lret
out
out
or
leave
rcl
push
je
in
push
sbb
pop
fnsave
aas
andb
lahf
pushf
pop
leave
fidivs
ss
pop
rcrl
mov
sub
mulb
popf
scas
jnp
std
inc
pop
int
sbb
pop
fisttpl
fimuls
icebp
xor
imul
xchg
lret
sbb
rcr
cmp
jl
sti
cli
out
push
leave
xor
jp
pop
aas
js
push
xor
mov
lock
pop
xor
push
adc
cmp
cmpsb
dec
loope
push
in
xchg
adc
pop
cmp
pop
shlb
xchg
in
mov
arpl
dec
arpl
in
js
popa
xchg
les
jne
sub
dec
in
adc
sub
and
mov
dec
outsb
imul
pop
sbb
cmp
mov
sti
nop
std
nop
pop
in
mov
cltd
rorl
jo
into
jbe
add
mov
stos
sbb
rcl
xchg
sub
cmp
data16
mov
or
roll
dec
add
out
aas
pop
mov
pop
mov
xchg
mov
into
push
adc
mov
sbb
std
xchg
add
int3
addr16
jno
cli
push
test
cltd
pop
xchg
pusha
dec
mov
cwtl
mov
fwait
out
in
mov
mov
lret
mov
in
pop
punpckhbw
jle
pop
ljmp
sbb
test
add
in
sub
adc
mov
and
push
inc
pop
pop
scas
sbb
into
cmpsl
xchg
test
call
shlb
in
or
rolb
pop
test
into
leave
shrl
mov
adc
add
xchg
in
adc
cmp
andb
cli
ret
cltd
and
repz
adc
adc
push
arpl
shlb
or
imul
ds
shlb
movsl
lret
sub
jmp
xor
aas
jno
in
test
dec
and
add
mov
jae
loopne
int
pop
int3
in
sub
push
inc
orb
push
inc
ret
cmp
sub
dec
loop
cwtl
adc
stos
dec
mov
or
jnp
xchg
push
cmpsb
in
lods
mov
sbb
lods
sub
push
es
pop
mov
fs
movsb
test
fstpl
iret
lds
or
insl
push
test
stos
cmp
fscale
shl
call
mov
mov
mov
mov
mov
mov
jmp
scas
int
jge
mov
add
das
out
mov
rol
loopne
lods
or
scas
mov
dec
xchg
das
xchg
jno
std
xor
nop
sbb
aaa
stos
mov
divl
insl
gs
xor
fldenv
shlb
negb
scas
mov
aaa
push
iret
je
adcb
and
jp
mov
enter
pop
add
adc
insb
mov
fidivs
es
clc
out
insl
pusha
push
addr16
ret
and
jle
push
adc
decl
insl
mov
clc
mov
out
inc
adc
and
pop
repz
imul
push
aam
and
mov
xor
push
dec
popa
dec
je
mov
pushaw
xor
ja
jp
xor
inc
lock
in
sub
jo
fstpt
clc
hlt
cld
cmc
push
jl
fwait
subb
xchg
and
pusha
xchg
and
inc
sub
adc
or
mov
push
int
cmpl
push
sahf
test
lds
dec
mov
add
adc
adc
push
mov
pop
ljmp
xlat
iret
adc
es
imul
lods
cwtl
ret
mov
adc
push
mov
pop
shlb
push
mov
or
js
sub
imul
roll
inc
sbb
ss
add
mov
ror
add
mov
out
fcomi
dec
jecxz
jns
mov
in
push
add
stc
dec
out
mov
mov
xchg
enter
add
inc
jp
adc
rcrl
cwtl
insl
cmp
popa
sbb
xor
and
pusha
fistps
add
sub
rcll
xor
pop
and
bound
push
pushf
mov
hlt
jb
ljmp
sbb
inc
in
pop
pusha
aad
mov
lret
push
push
push
testl
mov
add
lcall
stos
xchg
sahf
sbb
add
shll
mov
outsl
andb
out
repnz
imul
or
sub
jecxz
pop
test
fisttpl
jmp
sub
aam
mov
fmul
sbb
aaa
mov
mov
mov
add
imul
and
jbe
pop
and
and
addl
push
sub
fisubs
or
aam
sbb
adc
and
andb
mov
test
xchg
jbe
cltd
and
add
pop
push
add
or
sarl
pop
lds
out
int3
sub
rolb
in
xchg
dec
pop
faddp
insl
cld
mov
pop
adc
jnp
ficoml
movsl
mov
xchg
mov
iret
mov
stc
mov
jne
test
xor
fmul
dec
cmc
test
adc
jge
cmpsl
ss
add
add
sub
xorb
push
dec
ficoms
movsl
dec
out
ror
insl
vmovdqa
dec
add
enter
aaa
call
push
xlat
mov
mov
and
movsb
and
fstpt
leave
cmp
lret
pop
rol
mov
xor
cmp
je
jmp
xor
stos
mov
mov
cmp
push
inc
aam
sarl
icebp
ss
mov
insl
sbb
xchg
jp
addr16
addr16
sar
or
jge
sti
roll
inc
sub
les
sahf
lcall
repnz
ret
jno
xor
xor
cmp
jae
lds
sti
sarl
std
pop
jmp
scas
pop
in
sub
test
mov
inc
test
inc
or
aam
ljmp
mov
lcall
mov
ss
into
out
daa
mov
or
pop
ja
pop
inc
pop
pop
jmp
mov
in
rclb
sub
jle
hlt
inc
inc
mov
or
pop
cwtl
rol
sbb
sbb
subl
and
jl
xor
fs
inc
rolb
sysenter
inc
pusha
lahf
xchg
pop
sbb
test
popa
test
xchg
cmp
cltd
jb
loope
mov
jg
pop
cmpsb
jae
add
enter
dec
fsubrl
dec
out
enter
push
inc
inc
hlt
fwait
ja
rcrl
popf
fwait
jo
loope
out
or
add
iret
orl
jl
in
fwait
push
xor
ja
sub
sub
jne
xor
mov
int3
outsl
pop
pushf
fiadds
andl
adc
ret
sarl
jecxz
lret
jecxz
push
push
ljmp
aam
loopne
xchg
jne
repnz
fadd
dec
fidivs
test
scas
test
sbb
push
fbstp
mov
popa
mov
adc
nop
repz
mov
ret
pop
sub
ret
push
mov
out
pop
cs
ss
je
out
sbb
pop
aam
xchg
dec
or
sub
mov
es
cmp
aas
cs
or
mov
pop
xchg
js
dec
push
scas
imul
inc
sahf
dec
test
into
sahf
lret
cmp
jns
int3
inc
mov
movsl
push
rcr
cmp
jns
cmpsl
adc
das
or
and
ds
pop
cmp
les
movsl
lods
rclb
xchg
mov
lods
into
push
into
mov
mov
jbe
add
pop
std
sbb
subb
sub
xchg
test
mov
push
addr16
cmp
pop
inc
leave
cwtl
out
pop
push
shrl
cmp
pop
sub
shrl
inc
xor
mov
fs
addl
ficoms
inc
inc
adc
dec
xchg
xor
movsl
fistl
adc
push
cmpsl
pop
sbb
mov
push
cs
lock
fstpl
addb
jae
sbb
lret
leave
lcall
pop
mov
enter
cli
aaa
es
xchg
xchg
mov
imul
cwtl
data16
cwtl
stos
sbb
push
inc
jg
loopne
dec
or
in
lock
sbb
out
repz
add
ret
sub
mov
dec
iret
pop
fiadds
push
mov
inc
imul
mov
sbb
lcall
je
shlb
cltd
xchg
mov
imul
cmp
fldl2t
mov
fstps
ret
ss
cmpsl
idivl
test
adc
lods
sbb
sub
add
add
mov
xor
test
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
jmp
fwait
adc
xchg
mov
lahf
xor
adc
mov
mov
mov
lds
or
xor
loopne
pop
into
fdivs
cmpsb
xchg
sbb
mov
call
and
aaa
jb
je
ljmp
fs
shlb
push
mov
into
ret
mov
insl
mov
adc
sbb
in
setne
adc
sbb
pop
in
cmp
jae
xlat
cs
xchg
dec
jbe
mov
aam
mov
mov
test
in
add
imulb
das
in
mov
dec
xchg
lock
jg
xor
fwait
das
mov
push
add
adcb
pop
jecxz
jno
mov
sbb
dec
sub
cwtl
and
hlt
mov
pop
inc
popa
xor
pushf
add
sbb
xchg
mov
mov
inc
dec
jns
cmp
jecxz
aad
stos
in
mov
idivb
sbb
jnp
lret
shlb
sbb
push
jg
hlt
mov
xor
cld
mov
or
jl
jp
js
xchg
movsb
shll
pop
add
dec
pop
out
addb
out
and
mov
inc
std
dec
or
int
js
outsb
outsl
cld
mov
sub
icebp
cmc
mov
mov
mov
push
hlt
stos
aas
out
mov
rorl
add
pushf
lea
xchg
inc
je
test
fadds
sbb
fsubrl
imull
and
fistps
pop
sbb
xor
adc
sub
into
scas
ljmp
ret
cwtl
mov
jl
jmp
fimull
or
sbb
jno
mov
add
aas
sub
loopne
sbb
jge
jge
jnp
scas
lea
das
pushf
mov
dec
xchg
cltd
repz
pushf
or
mov
ja
imul
cmp
dec
fsts
fisubl
mov
pop
sarb
cmc
mov
sbb
sbb
ss
or
dec
jmp
add
int3
pop
push
fmul
ret
mov
pop
nop
sub
or
cmp
and
jns
xchg
popa
mov
lods
xor
pop
add
in
cmpsb
mov
pop
sti
mov
adc
or
lock
stc
adc
adc
repnz
incb
js
xchg
js
inc
cs
loop
add
test
push
in
out
insl
pop
test
ds
jae
lea
cmp
hlt
xchg
jno
inc
cmp
xchg
lds
push
add
aam
push
das
daa
roll
sub
pop
jmp
lcall
cmp
adc
cmp
push
pop
mov
sub
mov
xor
test
xchg
mov
into
add
out
cmp
mov
adc
mov
test
aam
mov
push
lods
ror
fildll
in
jns
ss
jno
test
shrb
cmpsb
jmp
sti
xchg
int
and
jge
or
xor
loope
xchg
pop
pop
jnp
jnp
adc
iret
xlat
jne
and
and
jb
aaa
inc
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
jmp
into
or
cmpsb
mov
pop
in
adc
pop
ret
js
sarl
aam
cmp
orl
out
loope
pop
pushf
mov
add
daa
lret
push
nop
jge
mov
inc
lock
mov
scas
bound
rorl
aad
cmp
mov
pushf
in
pop
dec
nop
lret
jne
mov
push
sbb
push
insl
addr16
cld
mov
popa
test
data16
jle
sti
lods
cmpsb
xchg
sbb
fwait
add
xchg
loopne
dec
ss
jno,pn
in
push
xor
add
dec
sahf
mov
dec
lret
sbb
clc
inc
out
push
pop
cld
inc
lret
mov
xchg
inc
je
xor
pop
inc
cld
mov
and
clc
inc
mov
mov
dec
sub
ja
shrl
into
loope
sar
fimull
lahf
stos
push
loop
cld
xchg
into
fadds
jb
punpckldq
je
es
xchg
js
ret
lea
out
sub
sbb
sub
inc
syscall
dec
xchg
mov
test
mov
mov
fwait
aas
or
cmp
out
shrb
mov
jl
xorl
or
inc
xchg
pusha
insb
xlat
mov
mov
test
or
mov
scas
in
cmpsb
or
fimull
push
movsl
out
mov
js
and
adc
loop
xor
cmp
pop
in
ljmp
js
pushf
cltd
push
cmp
aas
cmp
std
fdivs
ljmp
icebp
test
rclb
mov
xchg
enter
and
adc
inc
add
mov
lock
lcall
lret
test
sti
lahf
xor
dec
mov
xchg
fwait
mov
add
cmp
inc
mov
fdivrl
cli
sbb
pop
xor
or
mov
and
push
mov
mov
loope
loop
fdivrl
pop
xchg
xor
mov
lds
pop
das
arpl
cmpsb
lahf
jecxz
mov
jge
pushf
fnstenv
iret
js
pop
jle
notl
inc
dec
out
es
in
mov
pop
cmp
dec
sbb
out
jnp
push
jne
push
lret
cwtl
aad
xchg
and
jno
loope
and
lds
fstl
or
adc
stc
xchg
jns
gs
jae
or
cltd
dec
jb
jmp
pop
js
popf
aad
stc
insb
mov
rcr
push
mov
inc
and
cs
inc
sbb
inc
mov
mov
stc
jle
xor
add
mov
test
shl
adcl
lret
push
cwtl
in
mov
xchg
les
inc
ret
out
stc
lock
loope
xchg
iret
adcb
lret
push
push
mov
filds
imul
stos
mov
pop
mov
cmp
mov
les
cmp
ret
lahf
ljmp
outsl
je
push
push
inc
and
lret
adc
mov
dec
call
decl
or
lods
enter
add
or
xor
or
jmp
hlt
aam
mov
and
insl
inc
out
mov
inc
add
mov
test
arpl
jb
loope,pn
xorl
sbb
out
push
lcall
add
pop
xchg
imul
imul
jge
jmp
mov
repz
mov
sub
popf
pop
popa
nop
dec
mov
push
test
jo
push
mov
bound
test
in
ret
xchg
pushf
cmpsl
pop
add
sbb
enter
push
les
loopne
push
sbb
or
push
sub
mov
js
in
out
pusha
cmpsl
dec
std
into
mov
or
out
shlb
xor
gs
lahf
test
orb
sbb
fimuls
push
or
les
cmc
inc
out
fwait
lret
dec
pusha
cmp
in
cltd
push
pop
int3
xor
mov
lcall
sbb
xchg
mov
popa
jecxz
stos
lea
pop
push
roll
hlt
jmp
ja
nop
notb
sbb
loopne
outsb
or
std
insb
lret
xor
lret
sub
mov
insl
or
ja
gs
and
gs
mov
cld
or
fwait
jle
addb
inc
js
or
inc
push
jecxz
fidivrl
fucomip
pop
fld
gs
lea
pop
out
movsb
fs
lods
mov
add
inc
pop
jae
mov
inc
fwait
cld
cmp
jbe
decl
and
insl
insb
jmp
loopne
aaa
xor
xor
mov
sbb
xor
imulb
js
pop
lret
add
adc
cmpsl
inc
sbb
inc
xchg
pop
and
test
fs
fistpll
outsb
add
shll
push
jmp
ss
mov
out
mov
xor
adc
jo
inc
mov
stos
mov
sti
shrl
jecxz
pop
or
xchg
inc
or
sbb
jae
mov
jle
addr16
adc
mov
push
fldt
xor
pop
add
mov
sbb
test
cli
adc
pop
popf
movsb
sbb
jecxz,pt
aaa
jo
je
cmp
repz
cli
or
fiadds
jno
lret
sub
lods
bound
movb
lods
nop
cmp
dec
push
fsubs
movlps
mov
add
jo
aam
in
and
jle
jl
pop
clc
mov
popa
mov
lods
lods
push
fstp
sub
repz
in
xchg
andb
loopne
inc
sbb
push
inc
sub
push
xchg
xchg
jae
adc
gs
aaa
mov
fnsave
enter
lret
push
insl
pop
mov
xor
cld
mov
add
lcall
mov
dec
js
test
rorb
fptan
subl
dec
xchg
cmpsb
in
xchg
push
and
leave
jns
sbb
push
cmpsb
adc
mov
add
int
aaa
cld
addr16
sahf
subl
push
rorb
cltd
mov
cli
ret
and
push
push
mov
push
clc
rcr
stc
push
mov
loopne
call
inc
inc
mov
xor
or
arpl
jns
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
not
push
push
sub
mov
orl
or
jne
adc
jmp
enter
lea
popf
pop
cmc
sbbb
sbb
sarl
add
xchg
popf
enter
sbb
jp
mov
push
cmp
xchg
push
add
arpl
mov
sbb
pop
repnz
push
test
lret
push
in
shlb
jne
pop
mov
loopne
lret
pop
gs
popa
and
pop
jne
clc
mov
cmp
inc
and
fdivl
xchg
xchg
fld1
jno
insl
sbb
xor
insb
jae
inc
fdivs
pop
jb
stc
mov
scas
pushf
jns
imul
daa
insl
fsubrl
xor
or
push
mov
outsb
sub
scas
fsubs
fsts
push
push
add
mov
xchg
insb
lret
sti
ss
iret
dec
outsl
mov
push
sub
arpl
jecxz
aam
out
xor
xor
je
in
mov
inc
test
outsl
out
sbb
xlat
mov
rclb
lret
insb
pusha
dec
repz
out
add
ljmp
fnsave
hlt
adc
sub
jl
sub
cli
xchg
lret
adc
lret
adc
mov
fnstenv
data16
jecxz
ss
sub
mov
es
sbb
sbb
mov
repnz
jnp
ror
adc
dec
xchg
xchg
fbld
pop
mov
push
lret
pusha
inc
mov
cmp
leave
lret
lods
jbe
mov
sahf
inc
lods
add
mov
mov
int
push
mov
pop
inc
loop
jo
jecxz
fcomip
xor
lea
test
cmp
repz
dec
mov
test
adc
aaa
jb
ds
jge
xchg
cmp
neg
or
or
xor
addl
mov
gs
imul
pop
xorb
sbb
jmp
adc
jns
fs
mov
in
cmc
jg
into
mov
pop
push
push
push
jl
xchg
push
repnz
popl
mov
add
and
add
ljmp
mov
push
bound
pop
sbb
in
shll
insl
sbb
fisttpl
jbe
mov
and
leave
add
stos
xchg
stos
daa
push
fwait
jne
dec
or
pop
jo
fiaddl
fisttpl
mov
enter
ss
cwtl
push
mov
sbb
in
mov
adc
cmpb
sub
jo
or
les
lret
mov
sbb
xor
fidivrl
ja
enter
ror
rclb
js
js
add
pop
sbb
dec
imull
movsb
mov
fldt
orl
lods
hlt
movsl
xchg
dec
loopne
shrl
mov
mov
sbb
insl
xlat
sub
scas
cmp
dec
hlt
subb
jge
in
xor
jno
scas
xchg
into
or
pop
and
xor
xchg
xchg
push
divl
aaa
cmp
mov
xor
and
div
mov
and
mov
notl
div
pushl
pop
mov
jmp
mov
mov
sub
sub
mov
mov
cmpl
movl
mov
mov
not
jmp
movl
cmpl
ja
push
push
pushl
push
call
sbb
add
xor
mov
sub
orl
sbb
adc
sbb
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
jmp
in
lahf
shrl
sub
outsl
inc
insl
mov
orb
mov
sti
dec
loopne
in
fwait
sub
inc
inc
ret
jbe
mov
aas
int
dec
repz
imul
add
sub
and
fstpt
stos
out
shl
movsb
into
scas
ja
pop
fsts
mov
ds
push
int3
std
mov
add
rcll
fisubl
jbe
mov
mov
fstl
inc
leave
xchg
sbb
fisttpll
dec
pop
push
idiv
inc
xlat
jne
push
sub
cltd
jbe
mov
jl
add
fildl
inc
scas
xchg
repz
aas
jmp
mov
adc
push
pusha
mov
enter
mov
jb
aam
das
mov
xchg
cmpsb
add
mov
pusha
sbb
or
fildll
or
lods
nop
dec
push
int3
pop
ds
repnz
jne
mov
mov
fs
shll
outsb
and
cld
mov
push
test
sub
xchg
sub
xchg
pop
gs
lcall
and
mov
sbb
lret
and
push
mov
lods
sti
out
int3
insw
enter
add
xor
push
dec
pop
bound
push
xchg
rcl
vmovaps
shrl
icebp
mov
xchg
leave
inc
into
repnz
ret
lds
movsb
xor
jge
mov
mov
imul
xlat
sub
pop
inc
ljmp
arpl
sub
lods
inc
sbb
xchg
in
data16
xorb
adc
fisttps
xchg
aam
pop
negl
fstpt
mov
aam
mov
jb
pop
repnz
insb
lods
arpl
xor
roll
sahf
jle
aas
add
jg
mov
out
and
mov
cmp
enter
ret
and
popa
xor
pop
push
outsb
sbb
jl
lds
in
das
dec
mov
mov
cmpsl
jg
imul
stos
ret
pushf
insl
stos
cli
pushf
adc
filds
les
jns
inc
mov
sbb
push
repnz
lock
repz
add
out
inc
call
cmp
lock
cmc
xchg
cmp
fidivl
into
into
lcall
pop
shl
test
push
xlat
jns
push
inc
jno
adc
and
mov
push
into
mov
and
add
sub
dec
jbe
jne
pusha
or
jns
cmp
sbb
popf
test
js
js
push
in
cwtl
adc
pop
xchg
xchg
stc
cmp
scas
call
addr16
loop
aam
jae
mov
push
fucomip
xchg
out
cmp
xlat
add
cli
xchg
in
in
mov
loopne
push
pop
push
stc
das
iret
or
jae
xor
cmp
or
test
nop
push
push
imul
roll
rcrb
jl
cld
es
loop
je
pop
jnp
pcmpgtb
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
or
mov
xor
or
mov
jmp
add
mov
mov
cmpsl
outsl
pushl
or
in
sarl
jle
cmp
lret
pop
dec
cltd
enter
add
add
outsl
cmpsl
rorb
push
push
ret
fwait
add
mov
mov
add
cmp
in
or
pusha
hlt
mov
fcomps
and
and
nop
cltd
mov
adc
in
xor
arpl
pusha
mov
shll
sahf
out
adc
popf
mov
lcall
fs
mov
mov
roll
pop
xor
mov
add
stos
shl
inc
jmp
out
or
pop
mov
mov
data16
jo
imul
jl
ret
rcrl
and
jge
xchg
fwait
pop
outsl
mov
out
test
cltd
jnp
add
aam
mov
movsb
fistpll
in
or
sahf
ljmp
and
mov
test
add
mov
cmp
push
fsubrl
outsb
sub
pop
mov
repnz
scas
jns
xchg
jb
outsl
cmp
repz
andl
pop
mov
fdecstp
and
mov
jge
cli
int
aas
sbb
adc
lods
mov
les
and
cld
lods
sahf
andb
pop
push
adc
test
fmul
pop
sub
dec
cltd
sbb
dec
add
sbb
pop
pop
pop
cmpl
mov
mov
cmp
idiv
adc
push
xchg
dec
sarb
mov
repnz
loopne
adc
adc
cmpsb
icebp
jbe
pop
xchg
mov
test
adc
dec
mov
nop
jmp
ljmp
int3
in
push
lahf
mov
mov
mov
pop
ljmp
inc
rol
aaa
inc
bound
xor
iret
jnp
cmp
xlat
je
sub
movups
sub
dec
lret
adc
aam
jo
bound
mov
fsubr
movsl
jns
bound
xlat
jnp
hlt
sbb
sbb
orb
push
lahf
enter
mov
add
rorb
data16
jo
fidivs
mov
pcmpeqd
sub
mov
loope
in
cmpsl
xchg
pushl
in
mov
mov
mov
cwtl
shll
insb
jg
movsb
sbb
call
iret
leave
push
or
mov
data16
add
sti
pop
out
xchg
push
jle
popf
push
and
loop
pop
jno
push
or
jbe
sub
add
sahf
jp
pop
jg
dec
add
push
mov
cwtl
adc
sbb
into
xchg
arpl
jne
fdivl
or
pop
into
ja
push
loop
cld
xchg
lcall
dec
rcll
jno
adc
out
sbb
xchg
cltd
and
or
mov
sub
mov
sbb
xchg
gs
xchg
pop
pop
out
add
mov
xor
div
xor
mov
push
add
xor
or
div
pop
mov
sub
mov
and
mov
sub
add
cmp
ja
push
movl
movl
mov
mov
imul
add
imul
mov
xor
xor
mov
sub
mov
mov
xor
push
jmp
jns
filds
dec
std
int3
out
push
xor
sarl
lahf
or
in
outsb
fldenv
xchg
cmp
ljmp
ss
shr
inc
mov
xchg
nop
into
sahf
adc
cltd
mov
or
dec
outsl
stos
iret
or
es
and
aad
fdivr
scas
inc
jno
mov
inc
mov
xchg
and
fstpt
cltd
add
popa
cmp
stos
fmull
rclb
pop
and
push
stos
mov
fisttpl
scas
hlt
push
pop
push
rcrb
pusha
dec
repz
xlat
clc
negb
jecxz
or
inc
dec
xchg
in
xchg
cwtl
xchg
mov
push
scas
jo
mov
jne
add
lret
add
imul
lret
sub
push
cs
mov
aad
and
pop
hlt
inc
mov
jns
lds
and
fwait
lods
mov
xchg
scas
roll
mov
scas
push
jge
cs
jb
shrl
adc
xchg
imul
cmp
sbb
leave
ljmp
sbb
xor
and
jg
adc
pushw
not
out
cmpsb
pop
fnsave
sub
pop
daa
leave
mov
fstpt
repz
push
test
ret
sti
inc
pushf
je
test
ret
push
repz
cltd
xchg
out
movb
sub
test
jecxz
mov
push
repz
pop
das
notb
cmp
dec
jl
mov
loop
test
mov
mov
mov
mov
push
mov
sahf
punpckhdq
fst
xor
setno
add
mov
pop
cli
push
aas
pop
adc
add
push
xor
jae
mov
vpunpckhbw
push
or
std
scas
sbb
push
pop
in
jle
out
xchg
cmp
test
test
bound
sahf
jno
pop
inc
inc
insb
mov
push
vpunpckhqdq
jmp
rcll
in
orb
or
nop
pop
and
lret
sbb
push
mov
jmp
inc
jecxz
jmp
popf
add
sbb
scas
fs
pop
repnz
das
in
dec
scas
in
aam
xlat
popf
lret
call
shrl
sbb
jp
movsl
popl
stc
lcall
inc
bound
sbb
push
adc
xchg
pop
mov
mov
iret
cmp
mov
cmc
mov
in
mov
jg
int3
dec
ret
mov
push
and
xor
shlb
std
ret
push
aaa
daa
popf
lods
mov
or
cmpsb
push
xor
ret
jp
sub
sub
xchg
clc
adc
ja
fsts
or
mov
sub
mov
adc
jp
jo
aas
mov
pop
inc
cmc
shr
dec
or
pop
mov
rorb
dec
fs
sti
mov
adc
in
inc
adc
in
test
in
mov
stos
sub
add
lret
div
mov
mov
push
or
xor
add
lea
mov
mov
mov
mov
mov
xor
add
and
mov
xor
xor
or
mov
add
mov
add
xor
div
xor
mov
or
div
pop
sub
mov
and
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
pushl
jmp
jle
mov
lods
sbb
sar
cld
and
mov
xchg
inc
add
mov
cld
pop
or
jg
lahf
mov
into
lock
dec
imul
mov
adc
mov
inc
pushf
xor
movsl
out
aas
cmp
out
or
push
pusha
jne
adc
fadds
mov
add
cmp
test
jp
lea
ss
js
ret
sub
lods
dec
das
push
xchg
sub
mov
daa
adc
xchg
es
cmp
insb
lea
pop
sarl
into
inc
fldt
and
pop
ds
fs
lods
push
cmp
fsubl
loop
mov
cmp
filds
addr16
xabort
pop
lods
and
ret
mul
xchg
imulb
pop
pop
shl
push
jno
dec
xchg
loop
pop
or
dec
mov
dec
sub
das
cmp
add
call
push
std
fcomps
push
sub
fwait
jge
into
xor
pop
pop
mov
lcall
sbb
mov
push
hlt
jmp
dec
push
pop
adc
adc
sub
hlt
sub
mov
dec
loope
sub
sbb
lahf
mov
test
and
shlb
fnstsw
mov
mov
in
and
subb
add
inc
fbstp
dec
mov
push
jno
enter
pop
cmp
hlt
push
add
in
jmp
xchg
lret
adc
jmp
cmpsl
inc
stos
xor
jge
pop
or
and
cmp
out
xchg
inc
xor
nop
rorb
mov
dec
cwtl
xor
nop
jbe
push
or
mov
push
dec
jle
clc
gs
incb
lds
out
pusha
push
mov
cmp
and
mov
mov
or
pop
dec
shl
adc
xor
push
sub
fisttpl
xchg
outsl
dec
std
in
ret
or
rorb
pop
inc
repnz
and
jnp
mov
testb
ds
inc
pushf
xor
inc
aam
jne
cwtl
jne
insb
rcrl
and
xchg
or
fmuls
cmp
mov
outsb
adc
mov
in
xor
cli
bound
sub
les
push
mov
mov
insb
jb
push
jmp
dec
int3
int
aad
push
xchg
pop
int3
insb
call
test
je
xor
jmp
mov
xor
pushl
subl
call
cmpl
mov
mov
jmp
not
cmpl
ja
push
call
sbbl
mov
adc
sub
sbb
add
sbbl
or
movl
xor
movl
adc
movl
cmpl
mov
movzbl
mov
movzbl
jmp
not
cmpl
jbe
push
push
push
push
push
push
call
andl
movl
or
add
sub
jmp
dec
mov
insb
mov
ljmp
inc
loop
sarl
lahf
pusha
adc
movsl
test
arpl
inc
sbb
mov
test
push
pushf
mov
add
pusha
xor
sets
xchg
pop
cs
scas
out
xchg
lock
lods
pop
mov
outsb
mov
inc
mov
jbe
jnp
inc
out
test
mov
jb
jne
mov
sub
mov
sbb
jns
xor
sbb
mov
sbb
jo
sub
or
pop
and
push
mov
xchg
into
dec
mov
push
mov
xor
insl
xchg
or
sbb
pop
sbb
push
mov
cmp
bound
pop
mov
fst
add
ds
aas
jbe
pop
lods
inc
or
arpl
int3
daa
cmp
xor
sbb
mov
adc
in
jl
dec
sub
sbb
mov
lret
add
inc
enter
pop
inc
mov
fnstcw
sub
add
lea
inc
xchg
sbb
flds
in
imul
aas
jg
mov
aam
cwtl
pop
cmpsl
add
jb
fs
mov
jl
mov
xor
push
cmp
xchg
add
testl
xor
lock
jecxz
das
lods
decb
dec
xchg
add
or
xor
gs
push
xchg
aad
mov
and
push
xor
sbb
leave
repz
cmp
insb
mov
cmp
mov
insb
push
fs
jnp
loop
das
pop
mov
mov
pop
pop
clc
lock
shl
push
popf
in
xor
enter
add
fsubs
int
lock
test
fisttpll
imul
xor
lea
cld
mov
push
mov
pusha
loopne
adc
mov
xchg
outsl
addr16
lret
sub
jnp
sti
mov
add
adc
pop
aad
int
arpl
inc
insb
cwtl
int
decb
popf
cmp
ljmp
rorb
test
popa
xchg
std
fistl
ret
lods
jnp
rolb
sbb
notb
in
or
out
js
or
pop
mov
push
mov
mov
in
into
leave
insl
xlat
adc
push
xchg
or
and
clc
rorl
popf
lea
and
dec
and
and
orl
mov
subl
add
or
addl
mov
adcl
xor
xor
mov
and
movl
movzwl
and
movl
subl
mov
sbb
mov
xor
xor
div
adcl
mov
andl
xor
andl
add
movl
cmp
movl
jne
notl
movl
movl
movl
movl
jmp
push
adcl
push
orl
push
call
orl
dec
movl
jne
movl
cmpl
mov
mov
jmp
mov
movl
cmpl
jle
push
call
or
xor
and
or
adc
mov
sub
mov
sbbl
mov
addl
movl
mov
andl
call
lea
mov
mov
xor
add
sub
imul
lea
or
mov
cmpl
mov
movzbl
mov
jmp
mov
cmpl
jae
pushl
call
movzwl
sbb
mov
decl
neg
adc
sbb
xor
xor
xor
sub
decl
mov
mov
and
mov
mov
cmpl
mov
mov
movzbl
mov
jmp
notl
movl
cmpl
jle
push
push
push
pushl
pushl
call
and
adcl
add
sbb
add
decl
xor
jmp
pop
sti
or
cwtl
cmp
cltd
xchg
pop
inc
mov
xor
mov
or
or
jle
xlat
adc
imul
sub
into
and
adc
jmp
pslld
lock
loop
dec
pushf
imul
ret
pop
ds
jb
pop
xchg
adc
orl
dec
add
data16
xlat
add
test
jne
jge
xor
je
cmp
lret
rcrb
push
daa
cmp
int3
data16
rclb
inc
fs
shlb
ja
jae
mov
lret
hlt
fwait
pop
stc
mov
aad
jle
pop
andl
add
or
sbb
cmpsb
notb
sub
adc
mov
adc
xchg
and
or
cwtl
xor
ja
inc
hlt
mov
out
jmp
outsl
popa
jae
aas
lods
dec
jae
repnz
mov
xlat
outsl
push
loope
push
ds
es
fcomip
in
xchg
push
jl
dec
mov
movsb
in
shlb
stc
fildll
sti
sbb
aaa
and
aas
and
add
dec
and
lret
sub
mov
fwait
nop
enter
shlb
fwait
in
loope
sbb
push
xor
lret
jo
xor
sbb
adc
dec
dec
sbb
inc
xorb
sahf
cmp
sbb
sub
test
ficomps
ja
mov
aad
sub
dec
adc
mov
push
fs
pop
push
inc
mov
aam
cmpsl
cmp
out
mov
test
jo
pushf
loopne
jmp
mov
faddl
pop
sub
stc
mov
stos
scas
gs
call
mov
je
jmp
pop
mov
cmp
xor
pop
aaa
push
aas
pop
mov
xlat
jo
mov
lret
clc
push
cmp
repz
loop
mov
int3
fsts
fwait
xchg
mov
push
js
pop
in
or
add
dec
stc
cltd
lods
out
jg
sub
das
push
cmp
flds
xor
lock
mov
lods
in
mov
and
into
popa
and
jnp
dec
arpl
daa
test
xor
xor
push
mov
call
cmp
lock
jne
add
stos
out
or
iret
mov
sub
xchg
dec
enter
insb
sub
nop
mov
lock
sub
shl
cmpl
not
movl
jmp
movl
movl
cmpl
ja
push
call
adc
xor
xor
or
xor
or
xor
inc
not
xor
cmpl
movl
mov
notl
jmp
movl
movl
cmpl
jne
push
push
call
or
movzbl
add
mov
add
xorl
add
xor
or
sub
sub
orl
mov
xor
xor
sub
sub
shr
cmpl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
call
subl
xor
adc
xor
or
mov
or
mov
movl
mov
or
mov
cmpl
mov
mov
jmp
not
cmpl
ja
pushl
pushl
call
xor
xor
mov
sub
sub
adc
movl
sbb
xor
subl
and
adc
mov
adc
mov
andl
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jg
pushl
call
xor
xorl
mov
or
xorl
adcl
xorl
shrd
cmpl
mov
mov
mov
jmp
mov
movl
cmpl
jge
push
push
pushl
call
or
add
movl
mov
add
mov
sbb
subl
and
shr
and
mov
sbbl
mov
xorl
xor
xor
decl
or
mov
adcl
push
pushl
movl
lea
push
andl
shl
movl
call
lea
push
orl
mov
addl
mov
lea
push
movl
mov
orl
lea
sbbl
mov
adcl
mov
andl
mov
push
call
push
push
pushl
call
sub
mov
cmpl
mov
movl
mov
jmp
movl
mov
cmpl
jae
pushl
push
pushl
call
movzbl
adc
adcl
adc
neg
sub
mov
mov
mov
andl
shr
subl
shl
or
mov
addl
xor
subl
mov
adc
lea
cmpl
notl
movzbl
mov
not
jmp
mov
cmpl
jne
push
push
call
movzwl
add
xor
mov
sub
mov
neg
xor
movzwl
adc
mov
mov
lea
xor
mov
mov
mov
sub
and
mov
movzwl
adc
mov
sub
lea
xor
cmpl
movl
movl
jmp
mov
cmpl
jge
push
push
pushl
push
push
call
sbb
sbb
sub
and
orl
sbb
movl
jmp
std
je
mov
mov
cmp
outsl
mov
sarl
cmp
mov
add
sbb
adc
or
jl
inc
jmp
and
mov
or
jge
leave
mov
dec
subb
push
xchg
lret
sbb
loopne
jp
xchg
fisubrs
sbb
call
push
xor
or
addr16
push
mov
xor
pop
or
pop
push
and
sub
es
xor
pop
add
movsb
cmpsb
insb
fcompl
pushf
jmp
fistpll
cmp
lret
push
subb
ds
inc
mov
jge
push
fnstcw
jecxz
pop
testl
dec
inc
jmp
cmpb
fs
xchg
pop
push
cmp
cmp
es
sub
pop
fsubrp
shrl
xchg
jle
mov
push
mov
arpl
aam
cli
xchg
sbb
jbe
mov
shlb
xchg
push
popf
xor
xchg
arpl
mov
daa
cmp
popa
xor
lahf
jle
arpl
pop
mov
sub
aas
cmp
rcrl
incb
and
mov
sbb
roll
shll
idivl
icebp
in
daa
mov
cmpb
bnd
scas
cmp
mov
out
ss
lock
jne
mov
sbb
or
sub
inc
insl
fldl2t
test
cmp
stc
and
leave
test
mov
mov
lds
sarl
popf
movsb
sub
jge
mov
aad
in
add
xchg
mov
scas
mov
mov
rclb
cmpsl
ja
or
dec
out
inc
add
xor
inc
dec
mov
pop
loope
or
push
out
jo
dec
imull
mov
rolb
aad
pop
jne
cwtl
scas
cmp
test
data16
xchg
shl
sbb
shrl
inc
lea
decb
mov
mov
inc
lock
mov
push
fsubp
shrb
add
aam
loopne
dec
test
incl
sbb
or
xchg
jne
fwait
push
mov
jge
pshufw
shll
in
cs
nop
xchg
and
sub
xor
adc
popl
jmp
ds
mov
or
out
xchg
pop
dec
and
or
movl
and
movl
movl
add
mov
mov
movl
push
subl
push
push
push
subl
call
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jl
pushl
push
call
andl
xor
and
or
xor
or
sbb
add
mov
xor
mov
sub
movl
sbb
cmpl
mov
mov
movl
jmp
mov
cmpl
jae
call
mov
mov
sub
sub
dec
movzwl
add
mov
andl
mov
add
mov
mov
mov
sub
mov
sbb
mov
sub
sbb
or
or
mov
mov
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
push
call
mov
mov
or
mov
or
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
movzwl
mov
add
mov
jmp
std
aas
jge
jge
jge
int3
pop
stos
cmp
sarl
pop
mov
ss
insb
std
sti
jp
fwait
jnp
ret
sahf
fdivrl
call
xchg
adc
icebp
push
ss
mov
ret
xlat
lahf
pop
jbe
lods
leave
push
cmc
pushf
notl
cmp
dec
xlat
push
mov
inc
ja
outsl
inc
mov
fwait
aam
sbb
test
lds
xor
fbstp
sub
fsubr
jp
test
cmpsb
dec
lods
jecxz
pushf
mov
jmp
shlb
js
mov
cwtl
lods
sbb
ret
sub
rclb
arpl
cmp
pop
mov
movsb
in
inc
sub
bnd
arpl
in
push
call
aad
jne
int3
ficoml
ret
lret
dec
pminsw
hlt
jecxz
ja
scas
fxam
and
aam
test
push
xchg
sbb
jne
rclb
jecxz
mov
dec
lods
dec
push
repz
fistps
mov
cmp
mov
xchg
mov
adc
jbe
adc
xchg
out
pop
lcall
outsb
cmc
repz
and
testb
icebp
dec
or
aaa
ds
andb
filds
adc
movsl
xor
xchg
fdivl
js
mov
notb
add
or
cmc
in
enter
add
dec
mov
xchg
jg
adc
xor
xchg
dec
xor
xor
push
insl
or
fistl
clc
sbb
jg
inc
loopne
neg
xor
ja
dec
sbb
xor
xchg
adc
stos
xor
mov
cs
jbe
lods
push
loopne
xchg
fstps
inc
ds
xor
dec
sub
xchg
testb
pop
xchg
aaa
scas
add
fs
jns
push
and
leave
mov
mov
xor
push
popf
xchg
mov
pop
jle
ret
adc
fldenv
mov
push
pop
out
sub
push
mov
jns
inc
cld
cmp
ja
jg
lret
aad
aaa
rcrb
xlat
mov
outsb
std
popf
xchg
sbb
divl
cld
jae
sub
cwtl
mov
inc
adc
mov
aaa
cld
lret
stc
pop
stos
pusha
into
adc
mov
aad
icebp
lea
shll
out
jecxz
lock
mov
rorl
or
push
sub
mov
xor
inc
mov
movzwl
mov
and
movzwl
cltd
idiv
pop
movzwl
cltd
idiv
mov
movzwl
movzwl
and
mov
movzwl
cltd
idiv
mov
cmp
je
mov
mov
jmp
jg
xchg
ret
popl
mov
popa
xor
mov
ds
imul
stos
gs
rorb
cmp
rcr
pop
fdiv
arpl
xchg
inc
xchg
push
cltd
mov
mov
es
push
mov
lss
adc
adc
sbb
or
mov
lods
js
test
mov
bound
inc
out
mov
sub
add
lcall
stc
mov
adc
insl
fwait
xor
xor
gs
ja
loope
xchg
dec
mov
sub
dec
aas
ret
call
ja
pop
jnp
or
inc
das
pushf
adc
mov
xchg
cmp
cwtl
pop
push
icebp
aaa
imul
and
out
popa
scas
inc
cmp
mov
imul
test
push
data16
xor
pop
inc
inc
sbb
lods
add
dec
rclb
mov
in
or
and
pop
or
jmp
shll
cmp
notl
or
sbb
jnp
pop
sahf
test
adc
pop
pop
dec
shl
xchg
sbb
xor
jl
inc
pushl
sti
out
add
pop
insl
mov
pop
xlat
xor
cmpsb
cmc
std
xchg
or
test
popf
loope
repnz
pop
cmpsl
push
cmpsl
loopne
xor
dec
and
cmp
loopne
sbb
stos
icebp
push
jg
push
test
stos
sbb
add
mov
sbb
adc
mov
stc
fmul
imul
pop
mov
xorb
sbb
inc
push
xor
pop
pop
aam
sub
and
cmp
fnstenv
push
sti
fnstcw
fistl
into
pop
jne
mov
lcall
mov
push
outsb
sub
xor
sbb
in
mov
jmp
dec
push
lahf
pop
or
incb
push
xchg
mov
clc
pop
dec
out
cmp
js
jnp
cmp
out
xchg
or
mov
add
ds
out
mov
clc
or
xchg
inc
cmp
jmp
lock
jnp
test
sti
pusha
repnz
add
jmp
test
jle
sub
mov
dec
or
mov
mov
sbb
dec
pop
xor
shld
jmp
mov
out
divl
cmp
dec
rdtsc
jns
sarl
fcomps
cmp
push
dec
jg
xor
sarl
mov
loopne
daa
inc
sub
fsubrs
mov
inc
sbb
mov
xor
pop
cmc
xor
popf
sarl
xor
popl
xchg
or
lods
test
das
xchg
inc
pop
jecxz
xchg
lcall
sub
inc
sbb
cltd
push
sbb
movsl
push
dec
sbbb
iret
call
rcrb
cmpsl
lods
cmp
inc
push
add
sub
mov
in
rcrb
icebp
push
cld
xor
xchg
in
mov
or
pushl
fimuls
cs
imul
fmull
xchg
popa
popa
test
mov
push
pop
pop
inc
mov
and
stc
sub
mov
int3
and
cs
mov
dec
bound
in
shll
push
mov
inc
dec
out
or
adc
mov
sub
pop
sbb
fs
mov
cs
inc
cmp
pop
jo
adc
div
aaa
cmpsl
mov
and
mov
push
mov
jns
stos
mov
adc
fsubr
jbe
nop
inc
push
xor
out
xchg
mov
jbe
cwtl
jne
xchg
movsb
mov
push
in
inc
lea
mov
int3
xchg
mov
jl
and
popf
sub
test
insl
jmp
vunpcklps
push
jg
and
mov
scas
movsl
xchg
xchg
std
add
orb
sbb
dec
stos
jne
add
or
lahf
adc
xor
push
mov
mov
and
sarl
mov
into
ss
dec
mov
enter
ficomps
imul
fldenv
fwait
das
dec
pop
js
lret
iret
out
aas
and
jae
pop
lods
scas
and
inc
sub
stos
inc
inc
enter
nop
lods
inc
fwait
scas
cmp
sub
scas
fwait
jns
jmp
js
hlt
ljmp
loop
je
dec
out
xlat
xchg
lods
sub
aaa
pop
adc
dec
dec
stc
pop
and
inc
aaa
mov
ds
push
adc
inc
jno
imulb
lret
pop
xchg
stc
push
xor
rorl
jle
or
sarb
inc
cmp
and
shl
mov
mov
mov
xor
jmp
lcall
mov
add
cmp
dec
sarl
int3
stos
adc
loopne
lret
push
lret
or
jmp
mov
outsl
dec
rcll
add
fdivr
jno
insl
test
lret
sbb
pop
or
cmpsl
mov
arpl
mov
add
mov
dec
mov
call
testl
jmp
ja
sbb
popa
pop
xchg
add
xor
lock
mov
jge
arpl
xchg
jb
test
mov
stc
mov
loopne
and
int
mov
or
xchg
movsb
jl
fdivrl
popf
push
adc
jbe
icebp
lret
frstor
lret
dec
aas
shll
mov
dec
or
jge
pop
mov
add
jbe
and
or
jne
pop
into
dec
adc
inc
insl
sub
incb
pop
xor
adc
es
adc
dec
and
fsubrs
imul
cmp
push
pop
adcl
clc
mov
adc
mov
addr16
int
loop
inc
jo
sti
mov
xor
mov
push
and
pop
rolb
inc
add
neg
out
daa
shl
negl
popf
in
mov
add
or
xchg
test
icebp
push
pop
mov
fsubrs
mov
jae
sti
imul
std
aad
jle
clc
mov
pop
xor
insb
cmp
or
fwait
pop
mov
outsb
or
cmp
push
and
out
cltd
lret
gs
adc
jmp
test
or
orb
hlt
adc
xchg
scas
sbb
mov
pop
stc
aad
out
insl
fcomp
enter
loope
ds
leave
pop
pop
pop
ret
popa
push
cmp
ret
mov
movsl
fsubs
bound
testl
fstl
sbb
stos
push
fdivp
sub
xchg
jno
jle
nop
es
loope
pop
pop
dec
cmpl
mov
mov
cvtdq2ps
add
imull
stc
inc
das
mov
subb
jecxz
test
sub
cli
int3
push
pop
mov
jo
sub
cmpsb
scas
cld
cli
scas
out
sahf
je
jmp
cmc
dec
dec
icebp
hlt
dec
cmpsb
mov
hlt
mov
dec
std
lahf
cwtl
push
mov
into
mov
cmp
jne
cmp
je
jmp
sbb
cmpsl
popf
or
jbe
sti
dec
dec
sarl
test
es
pop
addl
xchg
cmpsl
clc
push
out
jae
dec
imul
dec
test
out
dec
clc
leave
movsb
inc
xor
push
push
std
and
lret
add
adc
pop
fisubrl
orl
ljmp
sbb
sbb
aad
fucomp
push
push
push
addr16
jae
xchg
shrl
js
push
fistpll
sub
repz
add
fcmovbe
outsl
out
test
aaa
aam
popa
in
out
scas
add
pop
sub
sbb
xor
sbbb
mov
add
mov
sbb
jmp
movsb
jecxz
jmp
ficoms
fisttpl
call
adcl
movsl
inc
sarb
mov
jle
ficompl
clc
hlt
pusha
and
movsb
lock
jmp
inc
push
sbb
xor
repz
movsl
lods
adc
lea
mov
push
pop
jg
xor
je
stos
lret
adc
fcom
lods
ss
rcl
jbe
std
or
pop
push
loop
push
in
hlt
mov
lock
push
inc
jmp
mov
add
ror
out
call
cltd
dec
in
jmp
or
adcb
aaa
push
in
outsb
fcompl
in
jo
outsl
xchg
subb
mov
xchg
sbb
mov
stc
inc
mov
out
ret
add
inc
notw
dec
sbb
in
sarl
scas
xchg
dec
or
or
jge
sub
or
movsb
sar
xchg
sub
mov
cmp
pushl
xor
bound
push
adc
and
xor
cmp
mov
push
scas
jno
sbbb
jnp
mov
cwtl
xchg
leave
jge
enter
dec
cmp
mov
sub
daa
and
adc
xor
pop
mov
mov
out
mov
dec
inc
push
jne
pop
loop
imul
dec
mov
fwait
sbb
shlb
pop
in
jne
inc
cld
sbb
xchg
rcrl
or
push
push
test
push
nop
lock
dec
and
cmpsb
add
sti
aam
mov
add
mov
cmp
je
mov
mov
xor
jmp
mov
mov
insl
movsb
sub
das
xor
mov
fnsetpm(287
mov
and
rol
xchg
xchg
es
outsl
aaa
pop
xchg
dec
pop
enter
pop
push
mov
scas
sti
xlat
push
lea
mov
in
pop
mov
mov
mov
jnp
xchg
jmp
sbb
push
add
push
pop
adc
adc
push
dec
out
rorl
cli
xchg
repz
pop
add
bound
stos
shll
sub
xor
std
jge
mov
popf
notb
dec
ss
sub
into
nop
and
push
imul
add
stos
push
and
dec
out
mov
and
pop
inc
outsb
sbb
call
dec
dec
shrb
or
fcompl
dec
lods
out
add
test
dec
iret
cmp
mov
jb
shr
jae
mov
ret
jno
icebp
mov
in
jbe
jle
daa
or
mov
mov
fadds
xchg
jns
fsubr
push
xor
inc
mov
and
mov
pop
lock
jle
add
lret
inc
cmp
xchg
lret
xchg
dec
adc
icebp
movsb
pop
stc
xlat
sbb
push
xor
mov
inc
push
mov
loope
cmc
add
out
dec
xor
or
push
dec
sti
mov
xchg
int3
mov
sub
push
je
sti
dec
dec
mov
jno
rcll
pop
push
or
mov
pop
jno
push
push
aas
cmp
andb
xchg
adc
dec
inc
rcrb
clc
jae
pusha
fdivs
cmc
scas
inc
bound
xchg
lret
insl
and
pop
nop
in
push
popf
mov
addr16
jo
popf
jge
push
push
in
gs
jbe
add
stos
mov
int
pop
jmp
adc
popa
call
inc
rolb
sub
insl
sbb
jl
imul
negb
xchg
jge
push
lret
xor
and
aas
cmpsl
xor
fcmovbe
sub
testb
xor
cmp
scas
xadd
pop
mov
add
popl
das
popa
sti
cmp
dec
ds
push
ja
cmp
adc
int
cmp
sti
hlt
jp
rcr
adc
mov
bound
ja
mov
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
jmp
out
mov
mov
data16
jno
mov
sti
and
mov
repz
add
mov
paddw
call
add
pop
mov
cwtl
or
mov
dec
push
xor
sub
dec
sub
and
push
cli
fstpl
cmp
insl
xor
push
iret
cltd
shlb
xor
emms
pop
sub
sub
movsl
inc
cwtl
int
in
cmpsb
jne
jns
mov
cmp
adc
shl
pop
cmp
or
fcoml
xlat
push
sub
jg
rorb
mov
js
imul
hlt
push
lds
mov
xor
out
sbb
cmc
jle
dec
or
and
jp
add
arpl
pop
out
cmp
push
enter
out
inc
shr
and
jbe
scas
pop
mov
xor
jnp
or
dec
sub
jp
hlt
push
pop
and
rclb
faddl
adc
mov
add
inc
inc
sbb
add
fs
lock
mov
push
enter
sbbl
dec
xor
push
mov
adc
mov
pop
fcos
xlat
popf
inc
lahf
ja
dec
stc
jne
call
add
mov
xchg
cmp
cmpb
repz
outsb
cmpl
sbb
stc
lret
sub
push
add
ret
sub
pop
cmp
in
adc
sub
mov
mov
aad
sbb
and
out
adc
xchg
nop
mov
dec
fdivl
sub
je
add
out
pop
imul
or
fldenv
aaa
add
xor
xor
mov
and
arpl
xor
pop
lahf
inc
ja
and
leave
loop
xchg
cwtl
loopne
cwtl
jb
xor
mov
in
ret
out
lods
cli
ret
mov
jecxz
mov
hlt
outsl
fcompl
cmp
mov
mov
add
inc
lea
mov
inc
fimull
pop
xchg
popa
call
xorb
stc
mov
test
push
pop
mov
je
xchg
xchg
xchg
fucomi
sub
inc
push
shr
or
mov
sub
adc
add
cmp
jb
icebp
arpl
sbb
add
repnz
push
gs
andl
and
int3
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
jmp
mov
std
rcrl
dec
push
sarl
pop
int
loope
dec
scas
and
sub
ja
repz
mov
lahf
pop
rorl
cmpb
imul
or
jg
dec
lods
cltd
aam
mov
aas
sbb
lret
iret
xlat
jle
js
or
test
divb
aaa
push
test
sbb
imulb
pop
and
sbb
stc
mov
mov
or
ret
popa
cmp
cmpsl
test
inc
cwtl
js
push
icebp
dec
xchg
push
hlt
pusha
sub
cmp
fidivl
popf
pslld
dec
js
dec
jp
loope
mov
insb
mov
int
std
sti
test
dec
cmpsl
imul
pop
inc
inc
lods
and
xchg
mov
pusha
sbb
in
pop
test
mov
icebp
outsl
fdivl
adc
sub
sbb
addb
xchg
fistpl
cmp
push
shl
repnz
cltd
adc
push
sub
inc
jmp
mov
fcomps
inc
lods
incl
jb
ja
js
jno
movsb
sti
pop
xor
outsb
stos
dec
inc
popa
add
sbb
mov
mov
nop
mov
push
jnp
negl
push
add
insb
dec
sbb
push
inc
hlt
mov
mov
enter
lds
in
dec
stc
jle
push
test
cltd
jecxz
dec
pop
mov
cmp
lds
pop
ret
mov
mov
jl
push
cmp
mov
dec
jne
push
jnp
mov
loope
cmp
jo
mov
aas
sti
aaa
sti
xchg
ss
mov
xor
imul
sahf
lods
pop
push
mov
nop
and
jb
add
mov
ret
pop
add
std
xchg
cmp
jecxz
pop
imul
sbb
pop
or
ror
sub
lods
lret
cmc
push
fimull
loopne
inc
add
add
and
and
das
into
dec
lock
mov
stos
test
push
mov
sub
jbe
sub
incl
shll
repz
pop
xchg
jp
push
mov
rcrb
shl
mov
or
in
or
insb
aam
scas
test
bnd
pop
es
lret
xchg
stos
adc
scas
mov
jne
ja
fimull
pusha
push
arpl
roll
loopne
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
cmp
insl
scas
mov
or
cmp
cmp
mov
test
jno
xchg
les
popl
les
je
jmp
test
push
call
mov
inc
cmp
inc
stos
pop
mov
xor
push
inc
out
popf
cmp
data16
imulb
scas
mov
cmpsl
xor
mov
sbb
arpl
les
or
dec
jnp
mov
pushf
pop
rclb
clc
lea
lahf
fisubl
dec
pusha
arpl
leave
jb
out
clc
pop
mov
or
ljmp
leave
xchg
scas
dec
movsl
or
sub
xor
inc
sub
sbb
cmp
mov
mov
sub
adc
cmp
jmp
or
pop
push
inc
mov
mov
mov
xor
add
add
jbe
js
jge
xchg
dec
ret
je
and
jnp
adc
js
addb
and
je
inc
mov
dec
in
xor
addr16
sahf
sub
sub
outsb
insl
imul
icebp
push
xchg
add
dec
shlb
push
imul
stos
roll
pop
push
movsb
mov
das
sbb
inc
jp
addr16
add
ja
pushf
cmp
stos
rorl
mov
cmc
mov
dec
mov
or
out
or
icebp
cmpsl
sub
inc
xor
lods
sub
or
mov
pop
stc
mov
cmp
data16
insb
adc
cmp
push
push
or
fldl
mov
lret
mov
pop
into
lcall
jp
in
cmp
into
out
scas
ret
sub
pop
bound
mov
sub
imul
psadbw
outsl
xchg
mov
mov
loope
cmpsb
jne
shll
shrb
mov
mov
mov
hlt
enter
xchg
push
aad
fsubrs
cltd
icebp
jae
int3
mov
push
pop
les
push
cmp
mov
adc
add
aad
mov
int
inc
lods
repz
movsb
das
icebp
lea
mov
repnz
int
xor
add
jp
into
xchg
and
inc
mov
sahf
rcr
push
imul
out
lcall
jle
inc
fwait
sbb
gs
xor
or
mov
mov
jmp
dec
fistpl
jb
lea
outsl
mov
test
jge
fadds
jl
mov
rcrl
sahf
fsubl
jl
push
stos
lahf
push
pop
les
pop
push
mov
test
mov
pushl
movsl
popa
int
jp
and
fcomp
or
call
lods
out
add
inc
in
movsb
jnp
jmp
mov
mov
lahf
addb
arpl
cmpsb
and
ja
sub
add
ficoml
aad
push
gs
and
aas
push
repz
dec
cltd
mov
sub
jmp
out
test
pop
adc
jbe
sbb
aad
das
ss
out
sub
ret
and
sti
mov
je
in
cmp
icebp
adc
lret
jecxz
sti
jns
sbb
mov
cmp
add
add
mov
stos
mov
sub
sub
aas
imul
jge
fyl2x
iret
int3
xor
dec
push
jecxz
mov
add
enter
push
adcb
pop
push
int
or
fldcw
xchg
push
pop
mov
lea
iret
sub
repz
mov
dec
and
in
imul
idivb
mov
int
cmp
and
jle
pop
pop
in
mov
push
aad
adc
pop
cmc
imul
out
aas
ja
aaa
outsb
adc
push
cltd
mov
cmp
xchg
data16
and
fsubr
push
in
dec
rcrb
xchg
je
add
inc
dec
enter
xchg
mov
ja
push
xchg
clc
mov
or
mov
xchg
outsb
int
mov
aad
gs
test
shll
cmp
ljmp
cmpsl
data16
pushf
ret
mov
out
ret
lahf
cmp
imul
iret
jle
int
arpl
pminsw
mov
les
xor
cmp
jns
sub
dec
lods
sbb
xchg
fs
pop
lcall
fwait
hlt
clc
mov
mov
pop
sub
or
in
or
mov
adc
dec
movsb
arpl
adc
test
add
test
and
and
inc
and
or
adc
mov
and
and
or
mov
mov
mov
add
xor
add
xor
cmp
ja
mov
mov
and
sub
add
shr
mov
movl
mov
and
push
xor
pop
div
mov
imul
cmp
je
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
in
je
jge
in
jge
scas
or
enter
test
mov
pop
stos
pop
loope
fldcw
pop
inc
outsl
xorl
loope
ret
sbb
xor
cmp
mov
xor
outsb
cmp
mov
jge
int
scas
hlt
test
lret
imul
mov
cmpsl
pop
popf
mov
fsub
fildl
cltd
jle
push
fidivrl
mov
or
ja
lahf
test
cmp
or
mov
cmp
lcall
clc
hlt
imull
mov
or
idiv
mov
pushf
enter
popa
test
cmp
pop
cmp
pop
fwait
or
push
mov
rcl
lcall
dec
sahf
rcrb
je
into
int3
jno
mov
fimull
xor
dec
add
adc
popa
sub
mov
mov
push
inc
ja
test
clc
daa
popa
cmp
iret
dec
dec
push
enter
test
sbb
push
xor
or
dec
jnp
xchg
stc
mov
mov
jno
in
mulb
sbb
cmpsb
lahf
push
inc
ds
mov
mov
mov
xchg
mov
je
pop
test
lea
add
or
fisubrs
add
sbb
nop
in
mov
add
mov
jns
out
shll
mov
and
jno
sbb
jp
xor
xor
mov
add
loop
xchg
lcall
sbbl
jno
mov
lds
int3
aad
jl
adc
mov
in
push
pop
lock
jge
inc
sub
lods
dec
cmp
sysret
pop
mov
sti
mov
jmp
inc
cli
push
dec
lods
mov
mov
sub
sub
sbbl
aad
sbb
inc
mov
adc
jno
popa
xchg
sub
popf
push
mov
cmc
add
jne
pushf
sub
jl
xchg
inc
int
insb
push
pop
sbb
xchg
inc
lock
loop
aas
dec
mov
mov
cli
outsl
das
cmp
cmp
js
movsl
cmp
inc
adc
mov
psrlw
jno
ret
stc
mov
rclb
push
and
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movzwl
jmp
jno
lods
bound
mov
popa
xor
mov
inc
inc
push
and
cmpsb
into
int
arpl
sti
icebp
jecxz
mov
or
cmp
shlb
cltd
in
push
cmp
xchg
cwtl
shll
dec
jns
xchg
push
int3
movsb
mov
stc
push
popa
aam
scas
push
movsl
cmpsb
push
stos
dec
cmp
or
rclb
and
loopne
cld
xchg
jmp
sahf
sub
subl
mov
push
movsl
sub
insb
add
decl
adc
ret
add
push
repnz
imul
cmp
outsl
xor
xchg
and
sub
fnstcw
mov
stos
jbe
push
push
jb
popa
adc
push
das
rcrb
adc
cmp
adc
imul
mov
mov
mov
je
pop
or
jp
xor
jne
ljmp
fistl
push
push
into
jmp
cli
push
sbb
add
lock
or
mov
or
loop
aas
dec
jno
mov
adc
adc
mov
sahf
mov
inc
mov
incl
in
xchg
mov
inc
rolb
in
pop
mov
inc
adcl
call
mov
jecxz
add
or
in
sbbl
sarl
mov
pop
mov
mov
orl
mov
xor
jmp
xor
cmpsb
add
push
movsl
dec
test
stc
sub
test
inc
aam
mov
add
scas
mov
xlat
clc
leave
push
xchg
in
fsub
and
movsb
xchg
vpmacssww
stc
dec
in
add
fdivrs
pop
adc
mov
xor
mov
push
mov
aad
xor
in
and
inc
cwtl
jecxz
cmpsl
mov
mov
das
test
inc
loop
mov
jp
daa
es
arpl
cmp
dec
mov
xor
pop
push
jne
int
mov
cs
js
imulb
stos
adc
dec
mov
test
dec
pop
mov
push
add
mov
nop
fistl
mov
sub
movsb
in
jmp
dec
cmpsb
repz
mov
incb
test
out
fldenv
inc
fcmovbe
shrb
mov
in
lcall
je
add
sarl
xor
mov
imul
mov
sub
mov
add
mov
mov
shr
and
jmp
jbe
popf
test
adc
sti
iret
scas
sti
pushf
je
mov
ret
or
inc
out
daa
int
add
pop
shr
stc
xchg
rolb
loop
call
mov
pop
out
push
fldl
lret
ja
pop
cmc
shl
xchg
fnstsw
push
add
es
movsl
gs
outsl
sub
shl
fsubr
shl
bound
sub
inc
sub
les
xchg
test
add
push
push
ss
add
jecxz
scas
scas
add
and
stos
pop
add
fcoml
iret
popa
pop
xor
push
jnp
dec
or
les
lret
loopne
stos
movsl
rcll
mov
negb
inc
fcmovnbe
neg
push
pop
add
nop
repz
stos
stos
cmp
sub
loop
jbe
xchg
insb
jns
sarb
push
push
out
push
xorb
ds
add
inc
aaa
mov
stos
lret
cmp
xor
dec
xor
rorb
mov
pushf
jge
das
push
add
cmc
pop
mov
push
scas
pop
rorl
xchg
scas
call
cli
sub
testb
enter
or
in
sbb
sbb
sti
mov
cli
jmp
cmp
push
mov
push
aam
cld
sahf
test
or
push
data16
call
and
lods
push
movswl
stc
pop
jmp
loope
mov
xor
sbb
shlb
mov
mov
ljmp
xor
xchg
inc
cmp
cmpsb
push
adc
mov
movsb
mov
lret
mov
test
sbbb
and
jae
xor
fimull
add
dec
xchg
inc
insb
incl
or
pop
imul
sarb
xchg
mov
pop
jecxz
xor
sub
and
push
pusha
pop
xchg
xor
ljmp
pop
or
mov
sub
sub
mov
lods
push
repnz
adc
push
add
pop
aaa
cmpsb
arpl
jecxz
hlt
xorl
mov
movl
jmp
pop
add
lds
cmp
xlat
pop
stc
cmp
andb
int3
add
add
dec
addb
cmc
lea
pop
sahf
mov
or
mov
imul
mov
xor
mov
cmp
jbe
lea
push
lea
push
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
jmp
inc
cli
add
jno
xor
xor
inc
cmpl
test
mov
or
xchg
repz
xlat
pop
aam
pop
dec
jo
iret
lods
push
sbb
push
mov
lcall
xlat
ja
xchg
sti
fcompl
jns
jmp
mov
test
pop
dec
enter
pop
stc
stos
arpl
repnz
push
sub
push
enter
sahf
dec
mov
bndldx
mov
addl
push
cmp
dec
adc
adc
loope
and
xor
hlt
pop
xor
les
leave
xor
mov
inc
pop
xor
mov
bnd
push
pop
mov
mov
cmp
adc
in
fsubrs
cmp
pop
and
test
cmc
in
lods
hlt
aas
lcall
mov
ja
ss
jmp
push
pop
push
pop
cmpsl
or
rorl
stos
or
or
lret
in
lcall
sbbl
loop
pop
je
inc
jle
cltd
jmp
imul
loopne
mov
push
mov
dec
mov
daa
addr16
cmc
loopne
mov
mov
mov
push
int
loop
arpl
pop
lock
mov
outsl
negl
cmp
inc
xor
adc
mov
jnp
test
or
push
aas
fdivl
movsl
gs
sub
xchg
xlat
xor
jg
idivl
enter
sbb
adc
shlb
cmpsl
push
jle
adc
test
repnz
cmp
ss
pop
mov
aaa
sbb
or
xlat
xchg
nop
outsl
jne
mov
cmc
test
pop
leave
aam
and
les
insb
movsl
and
test
popa
sub
jg
dec
sub
fcompl
sub
cmp
xchg
aam
inc
iret
lods
inc
lahf
mov
and
cltd
or
lret
ds
arpl
aas
or
mov
out
xor
repnz
jbe
mov
push
ss
call
inc
cmpsb
lret
imul
pusha
adc
stos
mov
jbe
sub
dec
ss
pusha
jmp
das
lods
pushf
fbstp
fnstsw
mov
into
jmp
ljmp
sbb
add
cmp
je
mov
mov
mov
xor
shld
shl
jmp
mov
ja
mov
outsb
mov
inc
jo
sarl
subb
xchg
lcall
cmp
adc
dec
mov
out
adc
dec
inc
and
and
cmp
repz
push
out
jg
stc
lods
inc
xorl
jns
add
js
mov
sbb
mov
loopne
movsb
repnz
push
ja
xchg
icebp
xor
xchg
shrb
adcl
out
pop
iret
and
hlt
mov
adc
sub
testl
mov
call
fbld
push
mov
sub
add
add
mov
and
push
iret
repnz
rcr
dec
mov
jb
sbb
je
sub
sub
in
flds
sub
xchg
add
cmp
jo
sbb
cmp
add
shrb
lret
sbbb
jp
rcrb
dec
jmp
scas
xchg
out
sub
dec
inc
rcll
cmp
imul
movsb
lcall
xchg
xor
test
xchg
fiaddl
fs
cwtl
or
mov
inc
jecxz
imul
mov
pop
pop
iret
push
rolb
xchg
cmp
out
stos
mov
aam
xor
pop
xchg
addr16
fs
call
sub
inc
jmp
mov
inc
les
jb
xchg
mov
push
aas
int3
icebp
inc
jg
repnz
push
mov
out
inc
lret
mov
sti
iret
adc
insl
cmp
outsl
addr16
push
mov
cmp
insl
sbb
mov
push
shr
sub
xchg
sbb
dec
es
mov
pop
xor
push
lahf
scas
push
outsb
xor
sbb
pop
dec
sbb
jno
jbe
push
movsb
ds
flds
cmp
outsb
xchg
mov
inc
jns
xor
sbbl
mov
into
jae
push
out
mov
insb
imul
ljmp
pop
lock
jg
sub
adc
push
fists
sub
push
mov
push
sub
ret
dec
xlat
ljmp
test
or
inc
inc
sbb
mov
mov
mov
xor
mov
push
aas
inc
cltd
test
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
jmp
push
sub
stos
scas
sbb
jno
sub
sarl
inc
mov
outsl
jp
pop
loop
gs
xchg
mov
shlb
fidivl
and
mov
test
xor
aaa
rorb
mov
ficompl
jp
jb
push
mov
add
jp
push
mov
mov
push
mov
sub
cmp
mov
shrl
cwtl
jne
int3
es
fisubs
jbe
in
movsb
in
ret
ret
out
std
inc
dec
or
aam
ret
mov
lods
fstpt
loop
push
hlt
call
and
add
sub
xchg
aam
jecxz
in
addr16
fistps
push
push
add
das
pop
inc
addr16
shl
inc
data16
pop
mov
mov
xchg
sbb
imul
inc
stos
push
in
mov
jecxz
lahf
mov
out
faddl
mov
js
cli
and
std
jno
push
lret
mov
loop
mov
test
cmpsb
les
jnp
shr
sbb
jle,pn
cmpps
in
xchg
sahf
mov
dec
shrl
jno
pop
jbe
add
popa
adc
or
mov
mov
ret
inc
cmp
cmp
in
pusha
and
ret
push
push
mov
or
push
dec
cli
arpl
rorl
cmp
jbe
inc
sbb
aad
aaa
repz
or
loopne
lock
icebp
loope
adc
mov
cltd
pushf
arpl
scas
int3
aam
mov
xor
mov
inc
cmpsl
bound
bnd
aas
int3
push
imul
add
out
mov
mov
lods
js
pop
sub
scas
cmp
push
push
repz
xor
cmp
push
sub
push
push
fwait
and
jp
clc
push
xchg
sti
jb
and
pop
or
popf
inc
in
clc
inc
aad
fildll
sub
pop
out
push
jne
call
mov
and
bound
daa
ss
xchg
mov
pop
test
lods
bound
leave
lahf
vpsubusw
jecxz
fs
mov
mov
push
cmp
ss
pop
mov
cmp
xor
jle
adc
mov
pop
ret
push
mov
sub
xor
push
push
movzbl
add
mov
push
movl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jg
call
sub
movzwl
or
adc
add
sbb
movzwl
add
movl
mov
add
mov
mov
cmpl
movl
mov
mov
jmp
mov
cmpl
jae
push
push
call
mov
xor
xor
sbb
xor
or
or
sub
and
add
add
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
call
mov
xor
sbb
mov
sub
mov
mov
sub
and
sbb
xor
addl
add
mov
xor
div
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
xor
add
mov
xor
or
sub
imul
sbb
or
sub
subl
not
mov
xor
movl
and
sbb
sub
mov
cmpl
movl
mov
movzbl
jmp
movl
mov
cmpl
jae
pushl
pushl
pushl
call
subl
negl
mov
mov
sbb
and
add
mov
or
movl
movl
and
mov
mov
mov
sub
add
xor
imul
mov
mov
sub
sub
xor
cmpl
movl
movl
movl
not
jmp
movl
cmpl
jge
push
push
pushl
push
push
call
neg
xorl
sbbl
adc
andl
inc
sub
mov
neg
movl
movl
movl
mov
sbbl
mov
xor
mov
sub
mov
xor
xor
cmpl
movl
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
push
call
sbb
subl
andl
sbb
or
xor
mov
imul
sub
mov
sub
adcl
mov
movl
xor
mov
notl
xor
incl
jmp
mov
pushf
xchg
add
das
inc
mov
mov
dec
mov
std
in
popa
cmp
adc
pop
mov
mov
inc
sbb
adc
sbbl
and
pushf
inc
cmp
cs
mov
adc
stos
push
data16
mov
lret
clc
iret
adc
cmp
scas
or
popf
add
inc
je
pusha
dec
cmp
loopne
adc
enter
je
dec
jge
and
sbb
test
stos
push
aad
loop
push
cmc
inc
jge
dec
sub
or
push
pop
xchg
inc
icebp
push
push
jno
stc
out
adc
sti
loope
sti
repz
fidivs
lock
call
xchg
mov
sbb
ss
xchg
add
nop
cmpsb
inc
dec
pop
pop
mov
mov
rol
cmc
pop
jmp
ss
mov
pop
sbb
cwtl
rorb
add
add
inc
mov
adc
test
adc
ja
rolb
xchg
inc
dec
xor
jmp
push
xchg
push
cs
popa
lods
jl
mov
fs
and
cmc
movsb
iret
inc
mov
test
cmpsb
or
push
cltd
sub
pusha
push
pop
sbb
inc
inc
cmpsb
pop
dec
sahf
mov
repz
sar
pop
ja
push
sbb
mov
rolb
pop
cmp
mov
xchg
jg
sbb
repz
cs
movl
sub
inc
js
pop
lret
mov
popf
mov
mov
inc
jae
mov
mov
in
fwait
aas
movsb
cmc
scas
shll
les
add
cmc
jl
ss
mov
arpl
mov
and
outsb
push
pop
mov
jnp
xor
push
ss
xchg
je
fstpl
lcall
bound
in
stos
push
and
ret
leave
xchg
mov
xor
loop
iret
lcall
sub
push
stc
pop
push
fsubr
sbb
orb
in
mov
in
push
mov
fldcw
imul
pusha
js
inc
push
std
lods
cmc
sbb
pop
or
inc
imul
fsts
dec
cmp
das
mov
mov
test
in
ds
faddp
inc
or
sub
adc
or
lahf
into
js
sarl
xchg
testb
adc
adc
mov
subl
mov
xorl
lea
xor
or
adc
mov
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
jle
push
push
call
add
orl
and
sub
mov
mov
add
andl
adc
mov
mov
orl
sub
xor
sbb
imul
add
dec
mov
sub
mov
cmpl
not
mov
mov
mov
jmp
movl
cmpl
jbe
push
call
add
add
movzwl
xor
subl
movl
subl
mov
andl
xor
xor
movzbl
or
jmp
adcl
sbb
mov
outsl
cmp
mov
aaa
pop
mov
pusha
test
cld
adc
hlt
jmp
add
fcompp
mov
jge
imul
adc
add
ja
cs
and
icebp
shll
jp
in
mov
movsb
add
push
loope
arpl
adc
cwtl
outsb
or
mov
sbb
or
jg
add
mov
test
rcl
std
decl
push
out
pop
lods
mov
outsl
lea
xor
xor
push
out
adc
ret
cli
stos
dec
sub
aaa
xchg
xchg
cmp
cld
mov
out
imul
lret
stos
mov
psraw
lods
lds
dec
iret
dec
mov
les
xchg
movsb
and
fdivrl
subb
dec
loope
cmc
mov
lret
ret
into
xor
mov
stos
xchg
sub
into
jl
pop
enter
inc
js
mov
mov
adc
daa
cmp
adc
jp
mov
sub
sub
and
leave
xor
jnp
add
sub
and
loopne
or
dec
mov
push
mov
mov
je
je
cmp
inc
pop
mov
sbb
loope
or
pop
xor
pop
pop
dec
movsb
int
dec
fistl
jno
pop
loop
fstpt
mov
or
test
xchg
mov
jp
sbb
jbe
fldenv
out
and
rclb
nop
insl
pop
mov
repnz
inc
pop
lcall
fwait
mov
cltd
dec
out
outsl
dec
pop
fs
lock
arpl
xchg
push
imull
xor
and
stos
test
mov
adc
jae
dec
mov
pop
adc
xor
scas
sub
ds
jae
mov
push
loop
sbb
js
xor
or
xchg
add
push
cmp
lods
dec
xor
stc
cwtl
cmp
pushf
pop
js
xchg
jb
mov
out
in
popa
xor
jecxz
fdiv
ds
sbb
jmp
push
sub
xor
aas
sbb
push
dec
cmp
cmpsl
imul
xor
push
not
cmc
sbb
and
sbb
mov
mov
add
xor
cmpl
movl
mov
not
jmp
movl
cmpl
jb
push
push
call
dec
inc
andl
andl
mov
xor
mov
mov
sbbl
movl
adcl
mov
or
imul
and
mov
sbbl
sub
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
pushl
pushl
call
xorl
not
sbbl
adcl
neg
add
sbbl
mov
andl
imul
add
mov
xorl
and
xor
or
mov
sbb
movl
mov
or
mov
mov
add
mov
addl
xor
subl
div
cmpl
movl
not
jmp
movl
movl
cmpl
jg
push
call
neg
or
add
sub
xor
or
orl
andl
or
mov
sbb
sub
mov
subl
mov
xor
jmp
mov
sbb
mov
cltd
outsl
push
dec
add
mov
mov
adc
sub
test
mov
ret
jge
push
cmp
jmp
pusha
das
jb
cmpsl
loopne
mov
fwait
push
xchg
adc
dec
arpl
jo
push
sbb
aas
cs
in
sbb
bound
scas
mov
dec
adc
cltd
cmp
push
ficompl
iret
test
cmpsb
test
scas
xchg
push
add
xchg
shll
jne
cwtl
sub
shl
orl
and
add
mov
int3
sbb
sub
fwait
pop
cmc
sbbl
ret
sbb
call
adc
mov
cld
xor
pop
inc
inc
xor
insl
repz
fwait
je
sbbb
adc
push
mov
ja
out
lret
lcall
mov
mov
inc
ret
adc
pop
adc
jo
add
dec
or
cmp
pop
mov
push
or
push
aam
imul
iret
cmp
outsb
push
mov
pop
leave
loope
out
mov
mov
adc
xor
fldt
outsb
or
repz
xchg
sbb
jl
sub
dec
push
sub
stos
push
jo
inc
and
mov
add
add
nop
push
std
cwtl
loopne
cmp
repz
repz
sub
and
ret
nop
jmp
cmp
sub
lods
ss
cld
mov
loopne
push
stos
push
push
add
ret
add
cltd
push
fstpl
mov
mov
insb
sbb
adc
sbb
mov
int3
adc
lret
or
or
xor
mov
repnz
mov
pop
sbb
ja
aas
lcall
xor
mov
ss
jns
scas
loop
dec
xchg
xlat
cmp
sti
and
in
dec
loope
xor
stc
ljmp
jmp
fldenv
dec
mov
loope
pop
sub
inc
xlat
daa
in
push
inc
mov
and
adc
ljmp
cmpsl
sbb
jnp
mov
daa
nop
out
cs
sbb
xor
shrl
aad
pop
sub
pop
push
mov
mov
mov
lods
addl
add
movl
jmp
movl
cmpl
jb
push
pushl
push
push
call
xor
xorl
mov
or
mov
mov
xor
mov
xorl
adc
dec
xor
push
pop
xorl
div
shr
and
push
cmpl
mov
not
not
jmp
movl
cmpl
ja
push
pushl
pushl
push
call
xor
xor
add
or
sbb
or
cmpl
mov
mov
jmp
mov
mov
cmpl
jl
push
pushl
push
call
xorl
movzwl
add
mov
adc
sub
adc
sbbl
xor
or
mov
xor
pop
sub
mov
movl
mov
or
and
orl
add
cmpl
movl
mov
mov
mov
jmp
mov
cmpl
jge
push
call
orl
andl
xor
xorl
mov
xor
mov
and
mov
sub
neg
mov
adcl
movl
cmpl
movl
movl
jmp
movl
cmpl
jb
pushl
pushl
call
sbb
subl
xor
xor
and
adc
cmpl
movl
mov
not
mov
jmp
movl
not
cmpl
je
pushl
push
push
call
andl
or
xor
and
xorl
or
xor
jmp
sub
aaa
xchg
dec
aas
adc
push
pop
inc
add
mov
mov
adc
pop
and
mov
rcl
lret
jmp
cmpsb
xor
fmuls
mov
cmp
sub
js
sar
pop
sub
dec
es
mov
jg
cld
lahf
jmp
rcrb
mov
pop
jae
sar
push
add
mov
lds
mov
inc
into
lock
lret
cmp
xchg
add
xor
push
inc
sub
push
or
pushf
out
sub
jle
jae
dec
mov
inc
cmp
and
push
sbb
inc
jb
fisubrs
mov
hlt
adc
jae
pop
mov
xor
sub
popa
xchg
adc
dec
fwait
xchg
jg
scas
dec
test
jb
dec
int3
subl
mov
push
mulb
mov
jp
cld
outsb
loopne
js
inc
mov
sbb
jl
lock
sbb
filds
xorb
xchg
stos
shll
mov
rcrb
sbb
xchg
dec
jge
mov
adc
add
arpl
pop
data16
nop
js
jecxz
add
cwtl
mov
fildll
aam
fldenv
int
cs
jns
in
std
cltd
mov
jbe
adc
inc
fstpt
scas
mov
mov
add
jns
xor
rorl
adc
fidivs
push
cmp
insb
clc
repnz
outsl
popf
ds
and
ljmp
inc
adc
dec
loopne
inc
xchg
leave
repnz
pushf
jmp
jno
xchg
je
lret
dec
sarb
out
xchg
mov
loope
mov
xor
add
xchg
inc
or
inc
cmp
loope
ret
cs
push
dec
loope
gs
or
orb
push
adc
insl
jne
jns
mov
test
mov
push
sub
mov
cmp
int3
jbe
inc
loope
ficomps
push
mov
loop
out
jno
jg
sbb
mov
test
pop
sub
dec
lods
inc
movsl
jns
bound
jl
xlat
pop
add
jae
test
popa
icebp
test
and
loop
and
jns
call
mov
addl
movl
add
xor
xor
mov
sub
imul
movl
cmpl
movl
not
movl
movl
jmp
mov
cmpl
je
push
pushl
push
push
pushl
call
sbb
mov
add
sub
dec
adc
mov
sub
mov
sub
mov
mov
sub
and
mov
add
imul
imul
movl
mov
sub
subl
add
push
call
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
call
xor
or
or
mov
orl
adc
xor
adc
mov
cmpl
not
mov
movzwl
jmp
movzwl
movl
cmpl
jle
push
pushl
push
push
push
push
call
mov
sbb
mov
or
add
or
sbb
and
mov
mov
or
movzwl
or
mov
subl
xor
subl
div
mov
sub
and
cmpl
movl
movl
jmp
movl
movl
cmpl
je
push
pushl
call
sub
xor
mov
or
add
mov
or
decl
add
lea
sub
mov
sbb
movl
movl
sub
mov
mov
xor
mov
xor
cmpl
mov
movl
movl
jmp
movl
cmpl
jne
pushl
push
pushl
pushl
call
xor
add
mov
or
mov
adc
and
xor
sub
add
mov
sub
adc
sub
xor
or
sub
mov
adc
lea
neg
mov
mov
mov
sbb
mov
or
imul
cmpl
movl
movl
movl
jmp
movl
cmpl
je
pushl
call
xor
or
add
adcl
adcl
dec
xor
or
sub
mov
imul
xor
cmpl
mov
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
call
andl
xor
xor
adc
or
or
negl
and
sbbl
mov
sbb
andl
and
cmpl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
call
and
mov
mov
sub
add
subl
add
mov
sub
mov
xor
add
mov
movl
cmpl
movl
mov
notl
mov
jmp
movl
cmpl
jbe
push
push
push
push
push
call
add
or
xor
sbbl
sbb
adc
movl
cmpl
mov
movl
movl
movl
jmp
movl
cmpl
jae
pushl
pushl
push
call
sub
or
sub
and
sub
dec
incl
mov
mov
sub
xor
movl
movl
cmpl
movl
movl
movl
mov
jmp
movl
not
cmpl
jg
push
push
push
call
and
xor
adc
or
sbb
add
mov
sub
mov
mov
xor
xor
xorl
mov
orl
call
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
pushl
pushl
pushl
pushl
call
adcl
orl
or
orl
dec
sbbl
sub
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
jmp
negb
mov
mov
or
and
sarl
jmp
adc
fistl
pop
mov
mov
ss
pop
dec
add
arpl
aam
mov
add
sub
mov
std
cmpsb
cmp
xchg
loop
loop
add
movsb
pop
ljmp
sbb
decb
popa
adc
insl
xlat
lods
xorb
and
mov
stos
out
cmp
popa
mov
es
insb
jnp
lock
outsl
and
call
dec
stc
out
push
clc
xchg
add
out
adc
inc
push
ja
xchg
test
outsl
push
pop
in
lahf
jp
cmp
ljmp
enter
bound
notb
jle
xor
test
and
jno
adc
mov
mov
dec
push
test
ljmp
dec
jo
mov
popf
xchg
xchg
fimull
pop
mov
ret
pop
cmpsl
adc
mov
sbb
xor
jle
js
inc
mov
pop
mov
sarb
push
ror
cmp
push
into
insb
rorl
cmp
xchg
inc
fcmovnu
push
cmpsl
fcompl
aad
sub
xchg
jb
mov
mov
sub
cltd
inc
ljmp
les
in
and
lret
shll
jg
and
in
adcl
dec
and
in
adc
pop
and
dec
push
xchg
clc
sbb
ret
aam
sti
repnz
add
cmp
or
mov
xchg
ror
pop
sub
data16
sbb
jmp
scas
cmp
fdivl
mov
outsl
sahf
pop
sub
subl
add
mov
das
push
daa
sub
jns
and
lds
int
xchg
mov
imul
push
fcoms
insl
iret
out
dec
sbb
ret
fcmovbe
sbb
fmulp
adc
mov
push
or
pop
xor
mov
fldl
cltd
scas
std
ss
dec
test
add
inc
cld
lds
inc
and
push
mov
mov
push
insl
fdivrl
mov
and
mov
movsb
cwtl
mov
mov
pop
sub
scas
fldz
and
inc
int
fs
lds
dec
clc
arpl
rcrl
pop
icebp
aam
cmpsl
scas
mov
cmp
jne
mov
mov
jmp
mov
or
popf
lea
xor
jg
xor
mov
add
and
sbb
jmp
push
in
sbb
inc
dec
sbb
cmp
cmpsl
and
jge
adc
stos
sti
roll
sarl
mov
xlat
or
int3
sub
and
cld
dec
lret
xchg
lea
mov
leave
cltd
loope
dec
mov
cmp
movsl
jl
xchg
push
repnz
xor
push
push
sarb
mov
sub
push
mov
sbb
adc
xchg
lock
fidivrl
lret
cmc
xchg
mov
xor
in
push
cmpsl
inc
xor
cmp
and
aad
gs
pop
cmpsl
scas
xor
inc
loope
aaa
jo
inc
jns
bound
jae
mov
loopne
aas
in
ret
cs
push
andl
cmp
jo
repz
jecxz
mov
jno
push
xchg
aad
fcom
cmp
pop
mov
sub
ss
aas
sbb
popa
sub
cwtl
add
push
adc
scas
jne
inc
in
xor
mov
xchg
fidivrs
jecxz
cmp
jo
divl
mov
xchg
cmp
push
out
pop
adc
xor
jne
xchg
push
pushf
add
adc
xchg
lods
xor
xchg
mov
out
cmp
xchg
repnz
and
or
cltd
sbb
sbb
xor
jne
cs
pop
pop
lret
arpl
aaa
aad
push
push
iret
shrl
inc
sub
stc
in
or
loopne
or
iret
popf
in
add
sub
push
lods
mov
sbb
adc
or
mov
push
pop
fsubl
mov
fsubrs
rcl
jg
out
lods
lds
push
int
xchg
outsl
inc
aaa
incl
pushf
and
pushf
scas
loope
push
fs
sbb
mov
sarb
shrl
mov
cmp
sbb
addr16
mov
jmp
mov
cmpsb
cwtl
jno
add
popa
and
push
xor
rorl
js
or
xchg
xor
mov
push
lea
xor
mov
sub
cltd
xor
inc
adc
enter
ret
filds
add
imul
jns
decl
sub
adc
int
sbb
mov
jo
insb
inc
sbb
lods
out
jecxz
xor
jbe
mov
xor
mov
jmp
dec
inc
imull
jns
gs
loopne
cmp
out
cmp
sarl
movsb
xchg
add
ja
fnstsw
popf
repz
add
add
add
sub
jb
dec
je
sbb
fdivl
adc
cmp
data16
pop
cmc
test
popl
sarb
mov
xchg
aas
jb
lret
adc
imul
enter
xor
je
lock
shrl
push
mov
dec
xor
jo
add
fdivrp
sub
je
mov
pop
fldenv
xor
stc
test
jo
xlat
pop
xchg
out
lds
xchg
ja
push
pop
lcall
cli
imul
outsl
mov
fistl
mov
arpl
js
adc
xchg
cmp
fidivs
adc
jle
pop
jns
push
lea
adcl
outsl
test
std
push
jp
cwtl
cmpps
adc
push
adc
repnz
inc
mov
mov
push
jae
cmp
sub
iret
jge
jg
lea
sar
aaa
adc
bound
and
ja
pop
loop
ss
cmp
nop
scas
sahf
movsl
adc
jmp
xchg
or
pop
repz
js
xchg
jno
popf
ljmp
cmp
rcr
xchg
mov
js
xchg
inc
mov
mov
jl
out
and
daa
into
sub
mov
aam
aas
inc
add
ficoml
js
pop
ficoml
lods
scas
iret
or
cli
or
and
jns
push
in
pusha
out
loope
ds
inc
out
pushf
stos
or
sbb
sub
sub
outsb
subl
aam
testb
shlb
and
stos
neg
push
movsl
ljmp
idivl
mov
mov
cmp
pop
out
stos
shlb
mov
fstpt
ret
xchg
or
xchg
cmp
imul
nop
push
fisttpl
jbe
std
shrb
mov
mov
ja
push
mov
sbb
pop
fdivr
inc
or
hlt
jnp
mov
cmp
sti
add
out
cmp
clc
in
outsb
iret
sti
push
mov
push
mov
add
mov
sub
in
adc
sbb
push
or
int
inc
fsts
sub
adc
sahf
inc
fxch
clc
call
mov
jmp
push
push
lods
push
lods
mov
push
mov
jg
inc
or
mov
jo
pusha
push
rolb
cmp
adc
sub
push
or
imulb
call
dec
ljmp
or
mov
inc
pop
dec
xchg
fistps
xor
dec
mov
fwait
aas
push
pop
pop
dec
dec
std
clc
push
inc
cmp
cs
mov
jmp
loop
fdivrs
cwtl
jae
push
cmp
or
call
fdivrl
dec
movsb
shr
or
and
scas
inc
adcl
jb
pop
in
inc
lods
rcl
jnp
ljmp
lret
xor
sub
scas
stos
sti
mov
xor
inc
fcmove
movsb
adcl
test
mov
test
rcrl
dec
das
mov
mov
es
in
pop
and
pop
stos
mov
lock
cmp
or
sub
rcll
jecxz
cld
jmp
xchg
dec
cs
repnz
mov
scas
leave
and
fwait
xchg
mov
cltd
and
jb
enter
mov
cli
lcall
fwait
shlb
rorb
xor
push
fs
outsl
mov
vsqrtss
adc
cli
xchg
and
arpl
out
arpl
add
or
adc
out
mov
cmpsb
test
pop
ret
mov
daa
mov
xor
pop
inc
repz
push
inc
dec
jb
es
clc
int3
ljmp
call
ret
adc
mov
mov
xchg
shrl
fs
es
jle
pop
cs
sbb
js
sub
jecxz
lahf
loopne
mov
sub
sub
mull
mov
cvtps2pd
out
push
fwait
adc
push
jne
es
lcall
in
in
das
add
mov
mov
push
pop
push
inc
or
inc
sub
pop
fwait
movsb
out
clc
lahf
faddp
and
lcall
arpl
out
inc
sub
test
or
out
pop
push
in
aad
mov
push
inc
fnstenv
dec
push
add
or
in
das
cmpsl
xchg
push
in
xchg
inc
mov
int3
push
dec
inc
shl
mov
cmp
stc
sbb
out
fcompl
jmp
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
jmp
insl
inc
push
in
js
jge
and
xor
add
sarl
iret
mov
das
jno
les
shll
cmp
inc
mov
pop
jle
sbb
sbb
sbb
fs
movsl
pop
mov
xchg
adc
inc
mov
add
outsl
mov
ret
xchg
nopl
cmp
mov
cmp
cmp
and
lods
push
or
xor
shll
jmp
add
cmp
cs
or
test
sbb
lods
xor
in
push
jmp
mov
push
xor
dec
add
shlb
mov
sahf
mov
mov
dec
pop
jae
cmp
adc
int3
mov
xchg
cmp
sbb
insb
dec
aas
iret
mov
rcll
push
cmpsl
jnp
test
xorl
pop
inc
je
out
xchg
mov
mov
sti
sbb
clc
xlat
test
push
sarl
das
push
jno
jnp
xchg
std
scas
sub
push
jp
ret
sahf
jbe
adc
sbb
push
out
sar
aaa
rorb
mov
and
sbb
repz
or
push
mov
shl
jbe
rcrl
insb
notb
inc
out
push
in
pop
lods
pop
jg
fs
lods
cltd
imul
leave
imul
add
inc
scas
in
xchg
cmp
loopne
roll
and
cmpsb
mov
add
jne
jno
xchg
js
inc
mov
sub
outsb
cmp
mov
or
icebp
mov
xor
andl
lock
shrl
sub
push
sbb
or
mov
pop
cli
cltd
rcrb
loop
adc
cmp
pop
mov
test
jne
arpl
sub
push
xor
and
sbb
cmp
lods
es
cmp
mov
lahf
imul
shll
fwait
out
add
sbb
sbb
or
cmpsl
iret
xlat
lret
jmp
mov
xchg
push
data16
popa
sbb
into
sub
mov
stc
leave
inc
adc
out
sub
out
lahf
in
hlt
and
xchg
jbe
xchg
push
jns
jge
scas
cltd
or
sub
xor
mov
ret
test
decl
decl
inc
add
test
pushl
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
jmp
dec
gs
hlt
addr16
jge
sub
adc
mov
add
aad
xchg
jmp
adc
adc
dec
mov
inc
pop
push
jo
inc
rorl
xlat
cwtl
shll
leave
scas
ret
and
push
pop
push
push
mov
xor
mov
sbb
pop
into
add
pusha
jle
cmp
xchg
fs
dec
out
xor
cmp
std
mov
mov
lahf
fldenv
sbb
jg
or
push
dec
xchg
cmc
push
ffree
movsl
test
xchg
jmp
mov
out
mov
aam
or
mov
pop
lcall
pusha
repnz
pop
push
fidivrl
das
or
ror
aaa
xor
cli
imul
movsb
cs
fld
cmc
pop
lret
sbb
jnp
and
add
std
jecxz
inc
es
ja
cmp
loop
mov
popa
ret
jnp
mov
iret
push
sbbl
xchg
mov
int
jge
mov
sbb
mov
jbe
jae
test
lret
popw
jge
mov
dec
jmp
das
or
nop
dec
jo
xor
add
sub
inc
lods
mov
mov
into
sub
push
sahf
push
jge
jl
xchg
sbb
pop
adcb
jmp
out
cmp
jo
mov
ret
out
imul
out
add
xlat
scas
jp
xor
fisttpl
mov
ljmp
adc
dec
ljmp
push
int3
movsl
xchg
cmpsl
loope
jno
ja
pop
sub
push
cmp
push
into
cld
mov
and
cmp
jae
cmpb
add
ret
mov
mov
pmulhw
mov
test
adc
in
fisttpll
in
in
cmp
movsl
add
scas
popf
lock
out
xor
bound
aad
aad
xchg
push
adc
and
mov
pop
and
std
pop
add
int3
add
roll
dec
out
por
jp
sbbb
inc
inc
test
inc
sub
in
aam
je
mov
mov
xchg
es
mov
mov
in
ret
je
in
sub
cmpsl
jb
enter
repz
or
fnstenv
ja
mov
rcr
jmp
mov
adc
test
adc
mov
pusha
mov
lret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
jmp
ret
adc
testb
into
sti
hlt
mov
mov
and
adc
fwait
sbb
xlat
lds
out
lahf
cmpsl
jb
pop
push
les
jge
jp
and
stos
adc
mov
out
mov
lcall
inc
and
xchg
das
bswap
cmc
mov
push
sub
das
jo,pn
jecxz
stc
adcl
mov
lret
scas
pop
test
adc
loope
js
rcrb
hlt
dec
xor
jmp
add
inc
out
icebp
out
icebp
jno
fldl
push
push
mov
mov
cltd
inc
jp
stos
test
repnz
stos
outsl
scas
xchg
or
or
inc
movsb
sub
shll
aam
xor
mov
adc
add
jle
fs
inc
mov
jb
jbe
push
insl
pop
or
push
add
and
and
imul
xor
push
notb
or
xor
je
sbb
and
mov
mov
xor
xor
xor
push
push
ljmp
lods
cmp
or
sbb
adc
inc
inc
push
jae
xor
lods
jl
sub
mov
adc
je
rorl
into
or
mov
insb
in
ja
mov
or
sub
movsb
fs
idivb
add
and
mov
arpl
sahf
movsb
inc
sub
and
push
loope
jno
cmp
mov
scas
ja
xor
std
mov
mov
jge
dec
lcall
insl
nop
jmp
sbb
fistl
xor
pushf
xor
pop
xor
mov
cmp
xchg
into
sti
lret
int
lahf
jle
mov
flds
cmc
xchg
es
xchg
repnz
js
int
dec
imul
fimuls
jbe
std
bound
outsl
or
xchg
sub
das
dec
bound
mov
fisubrs
add
arpl
or
mov
faddl
pop
scas
int
sub
stos
xor
xor
inc
lock
ds
lods
push
mov
in
imul
lret
xlat
jno
dec
orl
cld
xor
xor
mov
xchg
ss
aas
xor
lcall
push
add
cwtl
fldt
ljmp
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
lahf
pop
push
leave
push
mov
jge
fwait
mov
sarl
cmc
pop
adc
mov
xor
test
dec
mov
add
adc
xor
xor
dec
insb
shr
sub
xor
mov
or
xchg
fldenv
push
fmuls
adc
dec
inc
pusha
hlt
mov
cmpl
sub
sbb
mov
iret
rcr
inc
jmp
inc
das
call
lret
push
nop
frstor
sub
xor
xchg
add
sbbb
scas
nop
js
mov
push
sub
cltd
int
lock
insb
sub
push
out
pop
and
pop
push
imul
fdiv
xchg
sbb
sub
xchg
and
negb
pusha
pop
mov
and
call
and
sbb
movsl
hlt
pop
push
cmp
mov
stos
in
aam
cs
cmp
movsl
xor
sub
cltd
xlat
test
das
out
call
call
xchg
std
dec
xchg
in
mov
jne
sti
clc
adc
sub
js
bound
push
sub
inc
pop
scas
cli
out
jno
xor
mov
add
mov
nop
cmp
ds
orb
lock
cmpb
sub
mov
jo
das
into
dec
js
push
mov
les
mov
or
insb
jmp
fldenv
cmp
xor
stos
pop
inc
iret
or
pusha
in
outsl
jb
stos
mov
inc
dec
in
add
mov
jmp
mov
div
xchg
lds
dec
jo
aam
mov
std
xchg
in
cmpsb
out
sub
pop
mov
in
and
in
insb
call
popa
insb
sbb
or
push
or
push
pop
sbb
add
imul
fstpl
cmp
push
imul
ljmp
jmp
in
or
cmp
sbb
xchg
mov
dec
xchg
fdivs
mov
mov
dec
cmp
test
sub
xor
xchg
add
sbb
ret
xchg
hlt
adc
fisubrs
sbb
decl
test
decl
pushl
xor
mov
call
or
or
jmp
test
cmp
ljmp
mov
cmp
je
mov
imul
fnstcw
int
and
lret
ss
push
mov
push
js
xchg
sahf
mov
jbe
cwtl
pop
into
xor
push
lcall
movsl
mov
cltd
or
pop
adc
inc
jb
and
dec
mov
data16
sti
cwtl
idivb
xchg
xchg
out
mov
stos
push
cmpsb
inc
jb
lock
dec
cmc
add
and
jp
jae
fidivl
stos
int
in
cs
scas
cmp
pop
push
outsb
inc
push
int
push
jg
add
adc
in
push
rorb
cwtl
push
sti
call
fchs
jo
enter
pop
push
es
jecxz
insb
mov
or
addb
mov
xchg
iret
cltd
jbe
push
sbbl
test
fnstenv
addb
dec
fdivrs
sub
add
lret
sbb
out
loop
fsts
notl
fstpl
movsb
loopne
icebp
movsl
mov
je
push
inc
cmp
jb
cmp
aas
clc
cmpsl
mov
shrb
nop
sub
pop
push
ja
ss
sub
test
mov
pop
dec
adc
sbb
add
hlt
test
inc
sub
jo
mov
ret
adc
test
scas
inc
cltd
inc
lahf
pop
jmp
jbe
in
movsl
inc
mov
inc
mov
xchg
shrb
add
inc
xchg
and
ret
js
push
int
cmp
lock
mov
mov
nop
xchg
test
xchg
xchg
jne
ja
pop
xor
jle
cwtl
enter
or
push
cs
aaa
stos
stc
jns
sti
stos
xchg
insl
mov
mov
xchg
in
stos
mov
jge
mov
push
pop
push
into
movsb
sbb
and
aaa
in
jle
sub
cld
sub
mov
hlt
inc
pusha
sbb
std
in
fnsave
aas
sbb
xchg
gs
ds
jmp
repnz
js
rcll
adc
insb
jne
or
pop
xor
pop
push
subb
push
aaa
out
dec
fidivl
jb
jne
addl
add
mov
pop
cvtps2pd
aas
mov
cmp
inc
je
or
ss
and
sub
or
push
clc
cmc
dec
lds
aad
iret
pop
mov
sbb
test
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
imul
mov
or
add
imul
mov
xor
mov
lea
jmp
dec
or
popf
lods
scas
mov
mov
sti
jno
enter
sarl
jle
shr
or
dec
inc
inc
lret
mov
incb
leave
sub
lcall
mov
insb
mov
cmc
mov
push
sti
sbb
sub
pop
fwait
or
sti
dec
jbe
shl
mov
push
dec
lea
clc
aad
test
xchg
jbe
push
push
and
test
mov
sarl
data16
push
cmpsl
lock
sbb
faddl
je
and
pop
jp
adc
xchg
cmp
push
das
or
ds
jl
std
add
xor
ljmp
inc
push
loope
mov
push
rcll
pop
lea
xchg
out
js
ds
lret
add
fldcw
clc
xchg
add
xlat
subb
mov
pop
push
push
mov
push
ficomps
loope
aad
stos
shll
mov
stc
mov
dec
addr16
sbb
pop
in
dec
jmp
test
sub
fsubl
lcall
ficompl
pop
aad
inc
jl
mull
mov
enter
ficompl
xor
repnz
push
mov
mov
xchg
cmp
cmc
ljmp
jns
test
mov
sti
sub
hlt
rol
loopne
xchg
mov
add
pop
pusha
mov
mov
fimull
dec
aad
cwtl
stc
cmp
add
insl
mov
xchg
jno
mov
fucom
jb
jnp
roll
imulb
mov
fnstsw
cmp
sub
subl
call
cmp
mov
fs
ja
sbbl
inc
inc
cld
jg
add
movl
movl
movl
movl
mov
imul
mov
xor
mov
sub
mov
lea
mov
xor
mov
sub
xor
push
pop
div
mov
and
mov
or
mov
mov
xor
div
mov
or
xor
push
pop
div
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
mov
imul
and
mov
sub
add
mov
or
xor
add
mov
xor
push
pop
div
and
mov
add
or
and
add
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
imul
mov
xor
mov
and
mov
lea
mov
and
mov
sub
mov
imul
mov
xor
add
mov
sub
imul
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
ja
push
call
adc
orl
add
add
or
adcl
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
adcl
subl
cmpl
je
addl
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
movl
jae
shld
shl
ret
neg
mov
adcl
xor
andl
and
shl
ret
xor
xor
ret
