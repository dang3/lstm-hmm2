push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jmp
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
stos
stos
data16
std
xchg
or
repz
fs
out
pop
in
out
pop
add
mov
and
mov
ficoms
or
in
cld
movsb
dec
jnp
push
pushf
push
fstl
and
ficomps
movsl
insl
dec
adc
jle
inc
and
mov
and
ret
pop
push
mov
lods
jno
decl
test
std
add
add
dec
adc
gs
jle
dec
mov
jl
repnz
aas
mov
jecxz
xchg
and
jnp
jmp
inc
sbb
dec
add
popa
jge
in
sbb
add
sub
cwtl
nop
rorb
mov
call
adcb
mov
sti
dec
inc
xchg
push
test
cmc
mov
adc
out
xchg
jb
repz
call
sar
rolb
js
pop
insl
sbb
repnz
stc
sti
sbb
add
in
sub
mov
push
jne
lock
push
push
mov
hlt
and
and
in
aam
inc
repz
mov
add
pop
outsl
dec
dec
pusha
clc
mov
in
push
rorl
and
inc
jae
jl
and
stos
mov
stos
and
je
mov
mov
shrl
mov
outsb
shrl
enter
fdivr
add
in
call
in
and
pop
andb
sub
jmp
test
jae
ret
outsl
mov
mov
rcll
arpl
daa
dec
gs
mov
in
mov
movsl
orb
fwait
xchg
inc
pop
or
lret
in
mov
out
adc
add
push
and
out
add
xor
lods
sub
cmp
lret
dec
das
pop
stc
aas
dec
sub
xchg
mov
or
icebp
std
insl
es
jae
or
cli
into
add
outsl
repz
xor
mov
mov
lahf
push
sub
cmp
fs
mov
cltd
jns
dec
test
push
out
push
or
loope,pt
mov
jb
mov
das
scas
push
xchg
cmp
pop
mov
les
sbb
push
mov
xor
iret
outsl
pop
out
ffree
or
xor
dec
xchg
xor
push
test
dec
ss
jae
xchg
push
stos
sti
pcmpeqd
sbb
add
jle
mov
shlb
jge
dec
lret
loopne
fidivs
jmp
sbb
mov
ja
and
fisubrs
mov
xor
adcl
insl
sub
in
sub
inc
jnp
dec
fldenv
pusha
pop
add
dec
sbb
ret
push
sub
aas
pop
mov
push
dec
mov
ljmp
or
mov
or
orb
iret
sbb
pusha
cmp
mov
cmp
mov
and
int3
mov
jecxz
adc
xchg
jno
loop
adcl
mov
dec
dec
and
pop
xor
jmp
add
cwtl
test
mov
xchg
sti
jg
sbb
imul
push
ds
add
lea
xlat
and
lods
in
ret
out
mov
or
pop
mov
add
xor
dec
in
ret
add
add
push
jge
mov
sbb
push
push
idivl
rol
pop
inc
and
dec
bound
daa
push
add
mov
out
sti
and
test
adc
xchg
mov
and
roll
fwait
push
rcll
gs
mov
movsl
xchg
aam
flds
xor
iret
jmp
rcr
cmp
nop
xchg
mov
test
add
in
push
repnz
jmp
fnstsw
xor
sub
pop
jle
jne
movsb
inc
out
out
mov
scas
inc
lret
xchg
das
push
pop
shll
fidivrl
enter
dec
sub
popf
pop
xor
pop
jmp
jae
fildl
adc
inc
pop
jmp
jb
mov
push
out
pop
cmp
pop
push
push
sbb
jecxz
lret
jae
movnti
scas
jno
dec
fcoms
push
pushf
imul
andl
fimuls
add
fstl
mov
jmp
add
or
dec
fwait
push
scas
lods
ljmp
or
popa
push
movsl
sbb
test
sub
arpl
inc
dec
and
je
arpl
daa
popf
xlat
aam
lcall
adc
leave
jge
decl
or
mov
pop
mov
and
push
bound
fisttpl
in
ja
inc
jle
ret
jbe
adc
lret
and
rorb
repnz
imul
mov
aaa
insb
add
stos
sbb
lock
adc
inc
mov
cmp
dec
mov
mov
pop
mov
ljmp
jmp
xchg
mov
or
and
xchg
mov
sbb
inc
jl
or
xchg
mulps
adc
dec
push
mov
pop
adc
jg
bnd
sahf
shlb
lret
sahf
xor
sbb
pusha
xor
mov
add
inc
out
push
int3
out
pop
lcall
inc
push
movb
fldcw
rep
dec
pushf
in
jbe
pop
jbe
mov
shrb
pop
add
xchg
mov
addr16
test
and
and
int3
mov
xor
mov
outsb
sub
sub
adc
loopne
or
sti
test
or
xchg
js
int
sbb
xchg
cmp
adcb
or
in
cmc
mov
mov
jne
mov
aad
popf
mov
into
ficoml
imulb
xor
jp
in
mov
int3
cmp
in
mov
insl
out
sub
jmp
add
loope
inc
mov
sahf
sub
hlt
adc
jne
cmp
mov
out
clc
negb
push
loop
pop
std
rclb
or
inc
mov
adc
in
sbb
add
insl
stos
out
cmp
pop
in
notb
out
jp
fwait
lds
xchg
call
lcall
loopne
jns
jne
mov
lret
enter
test
bound
adc
sbb
cmp
mov
pop
sub
pop
outsb
add
sbb
clc
cmpsb
sahf
lahf
andb
or
outsl
jge
push
jle
sbb
push
jp
popa
xor
out
ds
into
mov
pop
fldcw
lret
xor
ss
shll
cmp
dec
popa
dec
xor
xor
sub
lret
push
shlb
cli
daa
mov
mov
mov
dec
or
or
xchg
mov
mov
mov
push
xchg
xchg
inc
stc
sub
or
and
and
xlat
jns
xor
xchg
push
mov
xor
push
inc
or
jecxz
mov
push
or
in
sub
pop
mov
enter
mov
xor
sbb
mov
jge
in
xchg
jne
enter
xchg
ret
orb
in
out
aaa
jbe
mov
cmp
add
cli
gs
dec
int3
sub
xor
imul
jo
movsb
repz
adc
xor
fdivs
jmp
mov
test
inc
add
dec
adc
or
ss
inc
pop
mov
ds
fstpl
rcrb
mov
xor
outsb
xchg
adc
inc
rorl
add
inc
nop
orl
imul
jecxz
jg
insb
shlb
adc
andl
fsubrl
jp
sti
cmp
sub
push
or
push
xor
adcl
rcrl
jmp
cmp
and
lods
call
pop
enter
sub
jo
mov
inc
mov
xchg
push
xchg
roll
clc
cmp
jp
repz
push
xchg
imul
lock
push
jbe
add
mov
cmp
push
xor
pop
mov
push
subb
or
in
in
ret
push
inc
dec
int
test
mov
xor
loop
push
xor
aaa
pop
nop
in
xchg
dec
pop
filds
mov
nop
xchg
xchg
out
adcb
xchg
repz
cwtl
lods
pusha
mov
neg
mov
les
sbb
loopne
andl
mov
or
inc
fcompl
lret
mov
or
stc
pop
or
ds
shl
gs
pop
shl
fbstp
xchg
into
nop
inc
gs
cs
out
add
insl
aaa
mov
xchg
mov
leave
add
jg
cmc
lods
lcall
push
pop
mov
mov
pop
pop
stos
dec
push
lock
lea
mov
lret
lock
mov
mov
nop
out
adc
out
lods
jg
mov
fxch
and
outsb
mov
mov
stc
sbb
dec
push
or
jae
leave
pop
pop
stos
mov
pop
dec
xor
cs
or
mov
jns
push
cmp
call
xchg
pop
or
jo
jge
push
add
jno
mov
cld
in
ret
repz
imul
jno
add
push
xor
push
pop
mov
add
ret
dec
lret
sub
push
les
leave
lcall
roll
insl
ret
test
fcomps
mov
cmovns
xor
out
popa
mov
cmpsl
cmp
repz
inc
sbbb
sbb
rol
mov
cmpl
or
icebp
ljmp
iret
cs
fisttps
lds
movsl
jnp
psubusb
mov
cwtl
sahf
mov
insl
cwtl
adc
inc
popa
aaa
out
fdivr
or
fiaddl
xlat
add
test
ret
scas
push
xor
add
pusha
adc
inc
push
call
push
xchg
adc
int
mov
lret
repz
mov
mov
lcall
outsl
pop
inc
mov
shlb
dec
xlat
xchg
imul
adc
pop
fcompl
mov
lret
divl
mov
les
fstpt
add
sbb
pop
loope
dec
pmaxub
fists
mov
rcl
push
ret
das
call
test
das
cmpsl
cld
ss
fildl
test
dec
mov
mov
sbb
ret
sub
push
roll
mov
push
or
sub
cld
cmp
dec
mov
adc
ret
movsb
addl
xchg
jle
and
icebp
sti
pop
xlat
xchg
dec
lds
nop
imul
add
cli
pop
in
jnp
hlt
mov
cmp
movsl
or
inc
xlat
std
jae
punpckldq
in
insl
cmp
inc
pop
mov
mov
push
or
rcll
lock
clc
shl
mov
in
roll
adc
lret
push
push
aad
push
jmp
shrb
sub
cwtl
sbb
mov
out
sti
or
inc
out
jmp
and
sbb
mov
cmp
ret
pop
jae
ret
xor
sub
dec
andb
mov
repnz
push
cmp
jno
ret
iret
jnp
cs
sbb
inc
shrb
lods
and
mov
shll
xchg
adc
push
mov
imul
mov
dec
call
stc
cmpsl
fucomi
sbb
outsb
js
and
jmp
mov
sub
dec
mov
inc
xlat
xchg
or
and
fnstsw
push
mov
cmp
cmp
rcl
push
push
jle
and
mov
stos
int
mov
jnp
and
fwait
pop
push
adc
ss
dec
lret
adc
dec
rcrb
xor
rorb
push
adcl
or
jle
xor
ret
test
jecxz
mov
mov
mov
jg
sbb
sub
mov
xor
cmp
push
adc
aaa
int
dec
mov
pop
pop
pop
add
mov
cmp
dec
inc
andb
xor
adcb
int
test
push
push
adc
xchg
sbb
push
xor
and
icebp
jbe
sub
jnp
pop
mulb
cmc
add
adc
jl
repz
call
mov
fistpl
test
mov
mov
mov
in
mov
loope
push
sbb
xchg
jmp
cmp
pop
xchg
sub
dec
jg
mov
adc
push
fnstsw
scas
push
or
fdivr
js
adc
jbe
cmp
adc
and
lret
push
test
jnp
imul
adc
push
push
dec
rcll
jns
mov
mov
aad
test
insb
mov
bound
sbb
push
sub
fldcw
xor
in
rolb
push
jmp
filds
inc
fstl
xchg
int3
aad
lock
or
popa
inc
pushf
dec
lea
or
ja
pop
test
ljmp
add
ljmpw
popf
adc
inc
xor
push
mov
push
shrl
push
push
mov
add
rcl
cmp
push
orb
outsl
inc
imul
rcll
xor
lods
ret
fisttpl
or
test
pusha
cmpsl
ret
mov
and
push
cmp
xor
subb
rorb
popf
xchg
fstl
sbb
jb
mov
push
xor
mov
fidivs
push
fwait
out
adc
jg
mov
add
sub
addr16
cwtl
pushf
out
and
push
aaa
pop
adc
push
adc
fisttpll
fwait
outsl
adcl
xor
inc
arpl
in
cmp
mov
mov
add
pop
lcall
loop
int3
mov
jo
leave
scas
je
mov
imul
pop
mov
movaps
jmp
fadds
inc
sahf
jmp
push
dec
outsl
jae
test
aaa
or
pop
and
push
stos
std
sbb
cmpsb
or
std
and
push
cmp
sbb
fiaddl
push
stos
mov
dec
outsb
mov
cmpsl
lock
add
adc
dec
push
into
xchg
pop
xchg
jg
adc
in
test
mov
nop
psllq
mov
sbb
cld
popa
or
push
and
jnp
cs
fiaddl
mov
fnsave
xchg
and
jmp
mov
imul
negb
add
dec
sub
fwait
xorb
dec
aad
mov
and
and
stc
fimull
fwait
push
popl
cwtl
das
in
push
sbb
jnp
xchg
ss
call
mov
bound
mov
dec
mov
cmpsl
out
xor
push
imul
outsb
mov
insl
add
pop
out
or
shll
int3
xor
lods
mov
je
popf
sbb
push
lahf
cmc
add
cmp
je
xchg
or
inc
adc
in
sub
leave
scas
lds
xor
aaa
imul
call
xchg
mov
push
jae
pusha
pusha
push
cld
jp
mov
js
das
testl
pop
adc
lods
xchg
or
jae
mov
jge
pop
cwtl
imul
pop
pop
ret
je
out
pop
sbb
test
xchg
int3
dec
xor
sbb
mov
lahf
aad
rorl
out
jmp
and
cmc
add
sbb
inc
loop
ret
cltd
sub
push
imul
lahf
les
or
add
mov
push
mov
mov
mov
jecxz
push
jle
cmpsb
xor
push
or
iret
add
pushf
in
mov
negl
push
stc
dec
xor
push
shll
mov
add
or
enter
xchg
push
outsl
jmp
push
popa
pop
and
xchg
jecxz
lret
inc
scas
xor
sbb
adc
jg
or
in
adc
fcoms
ljmp
insl
push
ret
aaa
mov
int3
cltd
add
movsl
lea
stos
inc
jno
in
add
xor
loop
sti
mov
icebp
pushf
fstpl
in
repnz
aam
mov
les
js
push
stc
add
mov
push
movsb
jp
cmp
decl
sub
fsubrs
and
mov
add
cmp
dec
xor
scas
in
rcll
or
das
mov
sbb
jbe
fisttpl
mov
lds
rclb
or
jb
push
lock
or
stos
and
xor
adc
adc
repz
jg
or
mov
add
dec
loop
cli
test
push
jp
add
mov
cs
add
ja
xchg
ja
pop
imul
gs
ljmp
cwtl
or
int3
inc
dec
jmp
add
sub
xor
aam
pop
icebp
pop
shr
psubw
add
dec
xor
rcr
inc
add
jg
gs
or
xor
in
hlt
mov
in
jmp
jae
mov
aaa
rolb
xchg
aad
push
jne
loope
jg
sti
cmp
lds
test
xchg
nop
inc
xchg
push
mov
sbb
sahf
inc
fcmovnu
cwtl
mov
cmpsb
xor
subl
mov
pusha
repnz
add
lahf
divl
dec
jne
mov
lret
push
js
or
lcall
cmp
add
push
jbe
addb
sbb
pop
les
push
mov
test
adc
push
sahf
and
sti
mov
fldl
xchg
sub
xchg
out
ret
cmc
addr16
jge
lcall
xlat
mov
xor
pop
sbb
adc
mov
xchg
inc
loopne
imul
repz
out
pop
and
inc
inc
cld
xchg
or
and
fstpl
push
and
mov
pop
rorb
into
fstl
in
subb
ret
sbb
adc
inc
sub
mov
in
push
fnstenv
cmp
in
dec
pop
jnp
pop
insl
push
bnd
push
shrl
arpl
fwait
mov
int3
cmp
cmc
shlb
scas
xchg
cltd
out
hlt
repz
popa
or
push
xchg
cld
jns
mov
mov
mov
stos
mov
decb
pop
pop
jnp
xor
mov
lods
push
lock
push
dec
int
mov
fcomps
mov
pop
imul
fcompl
js
clc
cmp
out
xor
push
and
adc
fldl
imulb
push
out
scas
fimull
frstor
aaa
pop
push
jl
arpl
mov
leave
ret
je
or
pop
repnz
loopne
out
lods
jp
pop
faddl
fisubl
popf
xchg
arpl
mov
pop
push
mov
cmc
test
xchg
cltd
int3
cmp
hlt
pop
into
out
mov
ja
daa
pop
je
shlb
and
lods
pop
data16
loope
aam
dec
sbb
repz
sahf
jle
es
add
sub
xchg
inc
inc
adc
sbb
movsb
lods
xchg
pop
jae
into
add
loopne
cmp
sub
inc
hlt
xlat
roll
push
cmc
mov
lods
iret
xlat
fldcw
lret
xor
mov
pop
cmp
and
test
repz
xchg
imul
push
mov
inc
sti
mov
ljmp
test
imul
xor
lahf
inc
cmpsb
pop
dec
inc
in
push
cmpsb
xlat
lcall
add
pop
test
sarb
mov
or
divl
addr16
xchg
enter
adc
pushf
and
cli
enter
scas
rsm
cmpsb
loopne
pop
rcl
dec
in
mov
xlat
je
jmp
jnp
movsb
ja
adc
jmp
shrb
shlb
scas
sbb
data16
mov
stos
insl
call
ret
lock
sbb
mov
outsl
mov
dec
mov
ret
push
mov
adc
testb
pop
stc
je
push
popf
fidivs
pop
cmp
repz
add
mov
ds
cltd
cmp
mov
stc
jae
mov
add
jno
pop
push
and
cli
das
int3
push
cmp
xchg
fadd
jbe
scas
fsubp
jge
les
push
pusha
cmp
mov
std
push
push
sbb
test
shll
mov
scas
jl
mov
mov
xor
fcoml
mov
scas
sarb
push
pop
fs
mov
or
imul
mov
out
mov
xlat
je
lahf
add
iret
mov
and
mov
nop
flds
sbb
rcrl
hlt
in
jbe
adc
ljmp
mov
in
sbb
xor
mov
in
jbe
add
dec
test
xor
in
xor
aaa
sti
jns
dec
adc
rclb
pop
mov
xor
mov
movsl
jne
movsb
dec
test
push
xchg
push
loope
dec
mov
std
adc
pop
les
ret
mov
mov
je
das
mov
xor
xchg
sbb
out
mov
xor
dec
clc
scas
stos
sbb
mov
aas
fwait
daa
testl
xor
jns
and
mov
mov
adc
adc
mov
push
les
js
mulb
xchg
xchg
pop
mov
jne
enter
pop
loop
insb
fdivs
ret
rol
addr16
je
sbb
dec
push
inc
ljmp
movsb
mov
cmp
mov
out
scas
cmp
fildll
jp
inc
jns
mov
scas
or
push
je
cmp
add
or
fnstsw
lahf
add
xchg
rcrl
lods
test
jge
rolb
mov
in
push
loop
or
add
add
sub
mov
es
in
into
pop
push
sbb
rcr
xor
adc
xor
pop
xor
sub
loope
pop
pop
cmp
add
lds
mov
jl
inc
jae
popf
add
fists
mov
jge
inc
fs
jp
mov
outsl
push
dec
mov
pop
mov
mov
out
lcall
jnp
dec
cmp
mov
sti
int
xlat
push
rcr
es
jne
sub
imul
jno
push
cmpsb
mov
cmp
sbb
mov
lcall
out
outsl
stc
dec
add
sbb
in
jnp
aas
push
push
xchg
rcrb
push
xor
ja
fwait
inc
jmp
cli
and
std
cmp
ss
and
test
shrb
pop
adc
mov
lcall
lods
jp
sbbb
mov
jns
loop
test
orl
add
dec
sbb
enter
ss
push
mov
adc
pop
daa
mov
xchg
loopne
adc
popa
jge
fisubrs
inc
mov
push
cwtl
ret
insl
mov
ret
jns
push
out
jmp
scas
and
mov
int3
ja
push
lods
or
xchg
mov
cmpsb
xlat
cmp
insb
jns
pushl
lea
stos
and
in
std
lret
xrelease
dec
cld
outsb
in
sbb
in
imul
xchg
add
inc
mov
aam
pop
repz
ret
pop
scas
mov
xchg
fsubl
cmpsl
xorb
js
and
xlat
pusha
mov
leave
ja
enter
mulb
bound
inc
fs
sub
or
sbb
lods
lret
mov
mov
sub
jmp
mov
add
rcl
sti
test
lea
fs
sbb
push
popf
cmp
rclb
jp
and
je
jb
jl
mov
push
ret
add
sbb
test
repz
testb
xor
lcall
test
xor
or
fildl
pop
pop
push
dec
inc
or
aad
fbld
std
mov
jb
call
mov
scas
ss
push
in
mov
adc
jecxz
or
mov
cltd
jns
xor
dec
aad
out
std
aad
inc
or
dec
ret
mov
xor
push
pop
mov
mov
daa
test
xchg
jns
jg
int3
idivb
cmp
push
dec
xchg
test
out
and
rolb
loopne
inc
xchg
sbb
enter
out
outsb
repnz
and
xchg
mov
xchg
mov
out
cmp
jmp
mov
adc
sub
out
mov
shl
push
std
xchg
incl
out
repz
lret
xchg
adc
jo
iret
mov
fdivrp
jbe
out
jl
mov
fidivl
cpuid
xchg
movsl
or
jle
jg
inc
dec
inc
push
pop
shl
popf
test
test
popf
adc
cmp
testb
dec
cmp
cld
pushf
enter
sbb
push
in
jbe
stos
jno
scas
mov
mov
jmp
inc
ja
sub
ja
jb
mov
mov
sbb
je
cmp
insb
mov
stc
push
js
mov
push
jb
sbb
jnp
iret
push
jle
xor
lods
and
fs
xor
lods
sbb
adc
push
fildl
pop
divps
hlt
mov
push
add
sub
push
or
cmp
outsb
test
je
sbb
xor
pop
fisubl
mov
stos
out
sarb
push
shlb
and
mov
jmp
pushl
sub
pop
sub
xor
jbe
cltd
shl
mov
lar
or
dec
in
cmpsl
arpl
xor
pop
icebp
jge
push
cld
fnstenv
adc
ljmp
cmp
adc
push
lds
aam
mov
cmpb
test
jb
movsb
js
test
clc
mov
mov
inc
cld
sarl
mov
fwait
pop
rcr
mov
xor
jmp
push
push
insl
pop
das
and
lret
je
loope
lret
dec
xchg
cs
sbb
adc
pop
bound
lahf
xor
mov
in
orl
insl
test
enter
inc
push
adc
jle
mov
pusha
adc
lret
je
nop
rclb
sub
cld
stc
pop
outsb
cli
shll
or
push
sti
pop
push
adc
mov
and
inc
mov
push
out
cmpl
fsubrs
pop
and
pop
or
cmp
movsb
sub
dec
mov
das
dec
leave
cmp
push
repnz
repz
or
jne
mov
push
mov
and
push
inc
add
and
adc
sub
push
rolb
into
mov
cmp
sbb
jge
fwait
jg
orl
icebp
ljmp
cmp
ss
pop
xor
icebp
cltd
insb
jno
outsl
das
pop
sbb
mov
push
loop
nop
lds
fildll
jp
mov
test
aaa
sbb
inc
sbb
xchg
xor
dec
rolb
dec
and
jae
test
aaa
jl
lods
add
jo
xchg
stos
cwtl
sti
fsubrl
pushf
mov
jmp
das
inc
mov
pop
or
pop
xchg
mov
and
cmp
loopne
movsl
leave
sub
or
aaa
dec
lahf
jecxz
pop
jg
lretw
adc
fsubr
imul
les
pop
mov
and
cmc
je
jo
cmpsl
adc
call
fcoms
sub
adc
jns
bswap
sbb
js
cwtl
push
xchg
into
push
add
lods
out
push
int3
loope
sbb
push
inc
sahf
test
cmpsb
mov
pop
mov
adc
push
pop
andb
sbb
popf
ret
outsb
bound
mov
sub
mov
jmp
enter
jp
lea
ret
cwtl
nop
adcl
repnz
test
out
add
jne
mov
scas
test
xlat
lock
mov
out
cmp
lahf
lods
fildl
push
bound
mov
cwtl
mov
aam
mov
cltd
sub
jnp
out
das
sub
ficoms
lret
sbb
fwait
pop
out
mov
adc
jae
stos
ja
popf
sbb
icebp
dec
lods
push
outsl
inc
insb
inc
cs
inc
pop
test
pusha
mov
imul
and
lock
cmp
scas
imul
inc
mov
or
mov
dec
pop
cmp
inc
jb,pt
cmpsl
cmp
mov
push
je
or
cmp
je
or
outsb
cwtl
jmp
jp
xchg
adc
mov
pop
cld
shlb
pop
pop
adc
pop
xchg
pop
xchg
scas
dec
test
xchg
sbb
push
test
inc
xlat
sbb
cld
and
pushf
push
or
ljmp
xor
push
push
out
rorb
cmp
xor
mov
inc
sbb
and
aas
into
mov
dec
clc
mov
std
ja
stos
xorb
or
inc
aas
pop
xchg
das
popf
iret
and
sbb
shll
jns
add
mov
pop
xlat
in
in
cmp
ret
sub
orl
jne
push
out
in
cmp
iret
xor
out
cmp
pop
push
imul
into
xor
sub
pop
shr
mov
mov
jo
adc
push
jle
ret
jle
sbb
fdivp
in
push
call
and
ret
push
mov
sbb
or
test
insl
ds
push
smsw
sub
fmull
loop,pn
and
ret
adc
outsl
xchg
or
addr16
mov
cmpsb
scas
lahf
outsl
fwait
leave
mov
lcall
icebp
add
xor
or
push
iret
adc
insl
pop
mov
jmp
xor
sbb
adc
rcrl
jo
sbb
testb
mov
xchg
mov
xchg
rclb
and
cmc
lods
cmp
jnp
out
loopne
jo
mov
xor
mov
loop
pop
sub
push
adc
loopne
hlt
jae
push
sar
xchg
pop
push
sarl
hlt
or
mov
mov
ss
pop
xor
sub
xchg
jle
into
into
pop
out
shl
xor
mov
mov
pop
int3
pop
test
pop
and
mov
idivb
mov
dec
cli
mov
mov
scas
fldt
out
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
sub
loopne
jl
dec
pop
jl
mov
in
and
pop
cmpsl
repz
add
int
mov
xor
test
gs
or
test
lahf
stos
int
or
mov
push
add
inc
lcall
mov
dec
mov
fwait
and
inc
xorl
call
loopne
xchg
jmp
xchg
jecxz
push
cmp
lcall
or
dec
inc
aam
lods
mov
jmp
xchg
lcall
mov
adc
mov
stc
fs
shlb
fxtract
push
mov
cld
ja
inc
iret
mov
lods
mov
sarb
jne
in
mov
pop
ret
cmp
aaa
in
in
imul
xchg
fs
ret
pushf
mov
jg
loope
popa
lods
dec
and
mov
mov
cmp
mov
int3
sbb
cmp
js
arpl
ja
mov
divb
jae
arpl
jle
inc
pop
mov
mov
into
fidivs
repz
pop
mov
fwait
pushf
jp
sub
add
jno
das
inc
or
jge
lock
add
mov
cmpsl
mov
xor
js
jge
insb
mov
pop
icebp
jg
mov
mov
mov
les
fildll
sub
mov
and
mov
jge
cmp
jb
loope
shll
sbb
add
dec
or
mov
push
int3
inc
mov
or
into
out
xchg
mov
es
push
aad
scas
ret
mov
lods
das
out
scas
inc
incl
or
leave
aaa
out
xlat
scas
stc
inc
mov
or
leave
and
mov
repz
pop
add
popf
cmp
icebp
js
push
cmpsl
jbe
xor
cmp
inc
push
add
jno
dec
nop
out
aam
sub
push
inc
cmc
xchg
out
bound
push
test
push
es
and
outsl
loop
in
adc
dec
cltd
inc
call
outsl
sub
or
ficompl
xchg
jp
test
hlt
pop
mov
andb
lock
sub
lret
test
cmpl
lea
jle
pop
add
push
outsb
sub
pop
push
jl
enter
lret
sub
cli
push
cmp
into
fcmovne
sbbb
push
loop
push
mov
mov
jle
xor
mov
dec
cli
dec
sbb
shll
addr16
or
cmpsb
sbb
stc
or
fadds
int3
sub
stc
sbb
mov
mov
push
xchg
jno
mov
imul
outsl
push
mov
shlb
jo
jle
call
js
idivb
jge
popf
cltd
adc
cmp
jp
inc
out
ljmp
fyl2xp1
sub
add
dec
inc
dec
mov
dec
mov
xor
add
and
mov
inc
fimull
dec
lea
fidivl
jne
fwait
int3
test
add
dec
fcmovne
js
inc
xchg
outsl
dec
jg
in
jnp
insl
mov
mov
or
aas
addr16
dec
sbb
loopne
xor
insb
inc
int
popf
cmp
xchg
aas
and
hlt
mov
jmp
lds
aas
les
jge
or
push
dec
repz
stc
lock
sbb
sbb
scas
clc
adc
test
aas
add
sahf
clc
loope
inc
lods
test
mov
stos
xor
ds
std
sarl
mov
mov
cmp
inc
lock
imul
cmp
push
in
lahf
sub
rcl
or
in
sub
ja
int
jg
inc
pop
push
mov
addb
subl
cmp
fnstsw
xor
ds
sbb
clc
xchg
hlt
cld
xchg
dec
ffree
je
dec
cmp
rcrb
adc
nop
xchg
pop
xor
or
stos
xchg
lret
scas
es
data16
loopne
addr16
push
aad
pop
es
stos
out
fwait
cmp
and
mov
ret
cmp
stos
lret
scas
shlb
sbb
mov
dec
shl
cwtl
fucomp
or
inc
imul
int
into
aam
add
fadds
dec
or
das
mov
loopne
fisubl
mov
inc
shlb
inc
dec
push
jno
fdivs
in
or
lods
fsubl
cli
dec
and
ret
jns
addr16
nop
imul
lret
xlat
sub
add
add
scas
loop
int
mov
add
pop
mov
sbb
outsl
gs
pop
pop
mov
std
jl
sub
stos
jbe
lcall
adc
mov
xor
pop
push
inc
push
pop
pop
test
dec
sbb
xor
je
sub
adc
mov
add
iret
cmc
mov
outsb
sar
inc
push
jge
sahf
adc
mov
pop
ret
xlat
dec
pop
pop
imul
inc
jl
je
jle
or
test
push
hlt
jle
addb
sbb
adc
rol
mov
inc
adc
int3
cmp
dec
xor
mov
xchg
daa
push
loop
repz
mov
pop
out
inc
movsb
sub
xchg
mov
rorb
scas
cwtl
shll
mov
push
lret
inc
xchg
out
sbb
cmp
rcl
jle
push
mov
adc
out
mov
mov
pop
xor
sti
cmc
ss
sub
notl
mov
inc
xchg
pop
pop
aam
dec
cwtl
inc
dec
inc
mov
jmp
scas
test
scas
push
jbe
cmp
cmp
dec
imul
ss
in
xor
mov
hlt
adc
mov
in
cmp
or
lret
push
repz
mov
mov
adc
xlat
aas
and
cmp
sub
inc
movsb
push
dec
dec
pop
movsl
mov
outsl
or
sub
pop
and
lds
aaa
sub
fcmove
add
les
mov
scas
imul
std
pop
lods
ss
scas
jg
xor
in
cmc
adcb
or
jo
jle
ljmp
mov
ja
sbb
jmp
rorb
mov
ret
dec
mov
and
and
push
popa
fwait
jp
pusha
int
add
and
lcall
sub
nop
pop
xchg
xchg
dec
dec
jp
push
cmc
out
fnstsw
dec
mov
jbe
hlt
add
inc
jns
js
jnp
mov
cwtl
lahf
sbb
pop
testb
mov
jmp
and
jne
clc
lahf
lods
mov
or
mov
insl
jbe
mov
pushf
xchg
push
call
addr16
xor
inc
pusha
inc
test
or
cmp
fbld
fsub
mov
and
je
pusha
pop
and
add
shrl
mov
pusha
mov
dec
lock
sahf
push
mov
out
xor
int
cmp
bound
or
jl
jne
andb
rorb
fs
sahf
jp
int
inc
cs
call
push
sarl
stos
mov
xchg
in
dec
icebp
pop
sbb
xor
inc
addb
mov
jmp
int
jg
das
xor
das
mov
movsb
and
pop
mov
mov
jne
mov
test
mov
outsb
iret
es
jbe
aam
pop
xchg
inc
jmp
sub
xchg
sbb
shll
and
lods
outsl
imul
push
dec
mov
push
dec
cld
jb
xor
repnz
sbbl
imul
scas
fs
mov
jbe
xor
out
data16
dec
push
dec
jae
sbb
push
xchg
jne
imul
icebp
pop
sbb
cmp
test
xor
lret
fwait
push
loope
dec
mov
push
das
fwait
shr
sbb
or
aad
dec
popa
pop
pusha
call
addl
sbb
dec
jno
lret
outsl
pusha
pusha
add
add
insl
fcomi
sub
jp
mov
movsl
lods
adc
lret
inc
dec
ss
and
add
xchg
mov
cmp
and
scas
mov
mov
and
in
int
mov
movsb
andl
aas
aas
jo
fisubrl
test
mov
notl
adc
test
inc
jno
out
sbb
add
ret
jb
jo
xchg
pop
cmpsb
inc
pop
mov
or
test
fptan
jl
addr16
push
jp
inc
mov
inc
push
lahf
fimuls
cmp
orb
mov
cmpsb
cld
iret
les
pop
mov
push
xchg
cli
cli
add
popf
cmpsb
pop
sbb
or
mov
xor
out
mov
mov
ret
psubusb
fwait
sti
mov
fwait
ret
fcoms
jb
adc
into
bound
movsl
or
adc
es
and
sub
pusha
negb
push
mov
aaa
inc
cli
jmp
mov
add
pop
lahf
stos
iret
aad
test
sub
into
pop
adcl
test
mov
pop
push
cmpsb
sub
jbe
inc
out
leave
and
cwtl
mov
adc
mov
or
std
fs
in
or
dec
call
mov
dec
lds
stc
stc
std
mov
lret
stos
push
xchg
inc
stos
aam
and
lods
insb
stos
xchg
movsb
call
mov
jmp
aaa
xor
sub
add
dec
aaa
adc
mov
cmc
push
add
test
dec
push
xchg
in
out
jecxz
mov
cmp
divl
lock
pusha
xor
test
lahf
imul
and
lret
jnp
sti
or
and
cmc
xchg
mov
loope
pop
jmp
and
pop
cmpsb
scas
pop
nop
mov
scas
mov
push
xchg
xchg
inc
push
sub
hlt
jbe
xor
flds
jne
sbb
aad
pop
dec
es
mov
add
ljmp
ljmp
out
pop
out
fmuls
jl
fists
loope
and
push
mov
out
lods
lahf
js
mov
jg
push
cmpb
mov
pusha
xchg
adc
and
divl
jnp
movsb
inc
lods
sub
dec
shll
push
mov
or
ret
popa
mov
outsl
dec
xchg
push
jb
aad
addr16
jp
adc
lods
arpl
mov
mov
jge
leave
lock
lea
ds
inc
cmpsl
jae
adcl
sub
cli
sbb
xchg
lahf
xlat
sub
pop
push
pop
mov
push
fisubrl
inc
icebp
dec
push
in
dec
adc
test
mov
gs
push
pusha
cmp
out
xchg
in
mov
dec
mov
add
mov
xor
lock
test
inc
in
nop
inc
xor
rcrl
or
cmp
pop
lods
js
dec
xchg
or
add
cmpsb
sbb
mov
or
jo
loop
xlat
call
sub
xchg
mov
stos
test
jbe
stc
jo
jmp
std
mov
fisubs
shl
push
push
addr16
lods
insl
popa
addb
test
sbb
test
scas
sbb
outsb
aad
dec
sbb
mov
insb
sub
cmpsb
inc
in
add
or
mov
mov
mov
push
flds
out
fadd
jg
insl
das
adc
cmp
andl
or
mov
xlat
push
cltd
sti
data16
cmp
xor
pusha
mov
fisubrl
adc
test
add
test
rcl
andb
sbb
stos
inc
xorb
push
inc
add
mov
push
ss
mov
jl
pushf
lock
sub
aam
fistps
push
mov
pushf
or
mov
pop
ror
push
cmc
dec
mov
sub
jg
xor
inc
rcll
ds
cwtl
loope
or
mov
xchg
mov
push
sti
iret
fwait
enter
imul
mov
popa
jo
mov
lcall
repz
insb
loope
pop
push
sbb
imul
loop
push
mov
repz
arpl
mov
divl
mov
shlb
sahf
sub
dec
jb
std
rcr
fmull
jnp
sbb
mov
loope
inc
ret
test
fistl
dec
pop
or
xor
cmp
in
mov
cmp
andl
pop
push
add
dec
rclb
mov
xchg
add
lcall
iret
stc
scas
adc
das
mov
sbb
or
cmp
popa
test
cltd
cmp
jae
dec
mov
in
adc
movl
aad
in
mov
inc
jnp
mov
mov
subl
pusha
out
add
xchg
cli
adc
ja
xor
pop
lcall
sbb
jg
mov
aam
add
ds
or
and
repz
xor
push
test
arpl
lahf
in
test
jle
xchg
mov
in
xor
iret
mov
inc
jns
dec
push
push
sub
jmp
imul
sbb
fs
faddl
das
mov
shll
repz
adc
mov
pusha
cld
fsub
or
aad
imul
ds
test
in
imul
lret
jns
fidivrs
dec
test
cltd
inc
xor
leave
lret
lods
repz
pop
mov
cmp
cmp
sbb
hlt
fucomi
repz
mull
sbb
loop
mov
stos
xor
popf
shlb
and
or
mov
cmp
outsl
jp
clc
jne
push
das
jae
xor
out
or
lret
jnp
xchg
pop
loop
es
scas
fsts
or
jno
dec
jmp
adc
jae
xor
repz
cli
mov
leave
mov
add
neg
xor
adc
add
inc
xor
push
dec
cmp
xchg
sti
movb
xchg
jae
sbb
mov
fwait
add
adcb
mov
dec
aaa
das
shll
movsl
fwait
cmc
movsb
push
shll
nop
out
in
lods
xchg
imulb
daa
and
push
mov
mov
push
clc
int
aad
or
sub
xor
imul
fsubl
rorl
add
mov
cli
rcpps
sub
cltd
out
loop
and
clc
ffreep
jne
movsb
shrb
and
cwtl
and
gs
call
jp
add
gs
loop
push
mov
ficoms
mov
mov
cmp
std
adc
sub
or
cmpb
and
repz
xorb
popf
lret
mov
fldenv
clc
push
inc
cmp
adc
jg
mov
outsl
adc
inc
clc
add
adc
jge
aaa
or
cmc
mov
pop
and
xchg
jb
aam
jp
jge
rcrl
sub
lods
leave
inc
sub
jp
or
inc
pop
cmc
pop
ret
hlt
out
rolb
ret
mov
dec
mov
mov
push
mov
xor
std
outsb
mov
inc
cmc
jg
pop
pop
fs
sub
fs
sbb
xor
mov
les
rcll
das
test
shlb
sub
shrl
ret
repnz
add
and
aad
pop
dec
mov
and
mov
inc
xlat
push
pop
mov
repnz
mov
lahf
shll
cmpsb
fs
pop
data16
ljmp
or
cmpsb
fldenv
xorl
out
mov
and
ljmp
ret
xchg
pop
test
or
arpl
mov
dec
and
pop
sbb
or
dec
das
inc
in
jecxz
mov
pop
xor
jle
mov
jle
int3
cltd
mov
outsl
inc
lahf
fnstcw
pop
stos
mov
hlt
mov
in
outsl
xor
std
std
pop
jb
sbb
nop
or
repnz
jge
add
mov
push
idivb
out
add
jcxz
pop
cmp
xchg
mov
push
pop
sbb
jne
jge
fcoms
jns
test
insb
inc
jns
or
cmp
int3
rcll
mov
fisubrl
fidivl
loop
addb
mov
ja
xor
pop
push
sub
dec
xchg
cmp
arpl
mov
int
test
mov
xor
adc
pop
clc
lods
out
jnp
sbb
and
in
ljmp
and
mov
shll
aad
jbe
out
hlt
roll
xorl
popf
shrl
lock
pop
pop
std
test
push
pushf
sub
mov
jo
nop
sbb
out
rcrl
pop
aas
and
push
arpl
pop
xchg
mov
xor
push
lcall
mov
test
ds
aad
inc
negb
stos
cltd
insl
pop
mov
test
cmpsb
jns
negl
jmp
mov
or
jmp
jb
sbb
cmpsl
popa
stos
adc
idiv
sbbl
lea
mov
sub
cld
arpl
jecxz
jge
movsb
sbb
dec
lret
lods
push
pop
out
mov
fldenv
push
jecxz
adc
mov
push
test
xchg
dec
mov
in
hlt
dec
aas
mov
ds
call
inc
imul
lock
faddl
xor
jno
imul
adcb
adcb
gs
xchg
jle
mov
mov
xchg
jne
xchg
je
cmp
test
push
cmp
lcall
scas
loop
stos
loopne
mov
push
mov
cmp
sub
xor
mov
cli
inc
rclb
aad
dec
pusha
lods
clc
and
iret
push
lods
daa
dec
mov
cmpsl
fsubrs
sbb
rorb
cmpsb
sub
xor
popf
out
outsb
xor
and
mov
mov
pop
push
mov
mov
fadds
mov
dec
cld
out
mov
pusha
mov
xchg
adc
cmp
push
dec
pop
dec
xor
into
lcall
cs
jmp
mov
insb
lahf
mov
adc
add
cmp
mov
sbbb
in
push
cli
pop
das
adc
adc
mov
xchg
jg
sub
incb
lea
popa
push
outsb
iret
dec
es
mov
scas
xchg
push
sub
jo
xchg
inc
push
add
sub
repnz
ret
insl
loope
mov
xor
pop
call
dec
rcl
fcoml
cmp
xlat
push
loopne
jae
fwait
imul
ficompl
clc
daa
and
add
push
sbb
mov
leave
pop
jecxz
dec
push
xchg
ficoms
push
add
inc
arpl
cmp
stos
fistps
lret
std
fcmovnu
jmp
xchg
jno
add
and
pop
sbbb
ret
out
mov
insb
dec
ss
cmp
inc
cs
insb
lret
iret
mov
and
pop
insl
testb
stc
repnz
mov
fdivs
mov
mov
cmc
jmp
sbb
cmp
js
imul
dec
push
add
lods
push
adc
and
adc
and
add
movsb
popa
lcall
add
push
push
jo
push
inc
iret
mov
mov
sbb
add
mov
shll
or
aas
dec
dec
xlat
add
jmp
jge
in
outsl
push
xchg
xlat
fsubl
or
stos
cmp
push
dec
sbb
adc
fadds
das
in
push
loop
ja
mov
dec
test
cmp
call
jmp
add
dec
cmp
cs
fldt
fadd
into
ds
out
lahf
or
mov
aad
or
mov
out
in
pop
mov
sahf
in
sti
jle
push
fisubrs
in
stc
sbbl
les
pop
xchg
movsl
or
inc
shrl
lock
xor
mov
fldt
test
repz
xchg
sub
xor
lea
jp
popa
aaa
bound
lods
xor
cmp
std
cld
mov
sarl
cmc
in
dec
ret
xor
iret
arpl
mov
mov
mov
fdivl
mov
pop
in
stc
lret
and
and
mov
push
xchg
adc
jbe
push
stos
insb
pop
or
call
out
cmpsl
push
loopne
mov
dec
xchg
iret
testb
fs
movsb
je
mov
fwait
jg
add
addr16
adc
aas
movsl
rolb
cwtl
sub
int3
xchg
mov
cmp
pop
push
push
push
clc
pop
loop
mov
es
sbb
je
lds
sbb
out
pop
and
pop
pop
mov
outsb
mov
cli
mov
std
jo
mov
enter
bound
ror
pop
xchg
xor
mov
js
lret
push
lds
adc
rcrl
inc
pop
pop
in
mov
dec
mov
ds
mov
mov
cwtl
fucomi
adc
add
daa
cwtl
dec
xlat
int
scas
jg
mov
xchg
stos
push
jne
cwtl
inc
call
push
lds
or
hlt
mov
jne
fimuls
aaa
lock
outsb
jge
leave
mov
adc
daa
cs
mov
aas
sub
cmp
or
mov
xchg
bound
pop
test
mov
adc
dec
inc
les
mov
fldenv
sbb
pushf
rolb
into
push
pop
in
lds
inc
sbb
movsb
pop
loope
inc
pop
add
test
xchg
sbb
sbbb
gs
inc
lods
ljmp
shlb
lret
cli
ret
inc
stos
inc
fsubrl
insl
hlt
jbe
loop
cmp
out
jecxz
sahf
cli
pop
jg
sar
dec
in
adcl
movsb
add
outsb
pushf
push
xchg
push
enter
movsb
gs
in
shl
ret
ss
mov
int
inc
scas
test
cmp
add
lret
loop
movsb
test
lahf
or
nop
push
xlat
mul
or
or
pop
ficoml
cmpsb
push
sar
outsb
jno
xor
sbb
or
sub
leave
icebp
mov
xchg
sbbb
bound
jo
xchg
xor
repz
jp
push
rorl
pusha
sub
add
iret
scas
insb
adc
lahf
cli
push
pop
adc
sbb
adc
cmp
or
dec
test
leave
stos
xchg
leave
pop
mov
lods
lcall
pop
daa
dec
mov
pop
out
inc
iret
scas
lock
mov
sub
mov
cmpsb
jp
jg
test
jae
pop
sahf
push
add
incl
mov
cs
mov
xor
jge
ds
mov
notb
repnz
ja
push
jae
mov
jns
cld
mov
repz
fwait
mov
and
int3
insb
push
mov
fisttps
xor
xchg
aad
daa
cltd
lds
cmp
lahf
call
cmc
and
psrlw
push
aas
add
ds
inc
addb
sbb
cld
test
adc
jmp
xchg
insb
int3
lahf
fidivl
sar
cltd
loop
add
jle
mov
ds
push
and
ret
inc
fisubrs
test
loope
xor
sbb
push
arpl
sub
ja
xchg
xchg
dec
insb
add
cmp
outsl
cmp
mov
out
inc
jge
jae
rolw
inc
mov
mov
mov
xchg
pop
pop
cmp
inc
xchg
insl
or
sbb
das
sbb
jge
jmp
fisttps
xlat
dec
inc
mov
adc
shlb
mov
mov
cmp
mov
repz
insb
cld
mov
mov
dec
insl
push
xchg
ret
repnz
popf
pushf
sahf
nop
fldenv
jb
xchg
fst
sti
push
hlt
push
push
push
and
orl
aad
sti
pop
pop
rolb
rorb
mov
mov
stc
mov
sub
iret
push
push
pop
popa
lock
xlat
dec
lret
in
jae
mov
repnz
xchg
into
shrb
inc
inc
push
add
out
jnp
sbb
and
lahf
mov
or
or
jle
dec
jp
mov
out
push
test
lahf
lock
stc
mov
mov
mov
push
rcll
int3
pop
mov
mov
testb
lods
mov
movsb
jg
adc
push
notl
mov
xor
stc
bound
mov
mov
ja
add
fsubr
data16
iret
jg
lcall
mov
insl
ds
and
jge
cli
pop
aaa
data16
inc
popf
jl
test
sub
test
outsl
stc
mov
mov
sub
dec
lods
popa
and
jmp
aaa
dec
and
sbb
scas
lea
imul
leave
push
push
sub
insb
out
out
inc
loopne
cmp
mov
je
repnz
mov
add
mov
sbb
test
push
into
jae
mov
pushf
iret
in
mov
pop
adc
push
popa
xor
addr16
shrb
ljmp
add
adc
sub
fs
imul
test
cmp
ss
xor
in
xor
xchg
push
sub
cmp
or
daa
cld
jge
mov
stos
aam
pop
les
pushf
jl
movsl
or
out
jecxz
adc
add
fcmovnb
clc
sahf
mov
sbb
mov
stos
sub
mov
xor
dec
ds
dec
mov
dec
fwait
mov
jle
dec
cmp
pop
xchg
sub
add
data16
pusha
inc
popa
jno
aam
push
adc
sbb
xchg
aam
xchg
fidivrs
mov
ds
push
mov
push
lds
pusha
pushf
fisttpl
aaa
divb
mov
xor
lods
mov
fwait
inc
jnp
and
lds
pop
jecxz
repnz
cmp
maxps
cmp
xchg
push
clc
jmp
mov
mov
xchg
cwtl
mov
imul
xchg
push
mov
xchg
aam
jle
push
aas
jl
mov
aaa
rcrb
push
in
popf
push
in
mov
mov
imul
cmp
lret
jle
scas
push
jle
je
daa
outsb
pop
lea
ja
cmp
movsl
lahf
outsl
mov
xor
imul
test
sbb
inc
jmp
xchg
or
jmp
sarl
into
pop
xacquire
pusha
data16
loopne
sarl
inc
insl
add
out
xchg
shrl
push
and
outsb
data16
cmp
pop
push
leave
sub
and
jb
dec
sahf
mov
bound
fistps
fsts
fwait
dec
jl
fsubp
clc
adc
sti
xchg
mov
outsb
arpl
xor
pop
js
sbb
add
pop
sar
sbb
ljmp
mov
push
leave
cmp
cmpsb
xchg
adc
mov
ret
int3
loope
jmp
mov
pop
lahf
cmc
inc
sbb
xor
in
sbb
pop
fidivs
jecxz
stos
addr16
cmpsl
ss
adc
xor
push
pushf
dec
test
and
stc
jmp
adc
arpl
in
scas
sbb
outsb
out
adc
outsl
int
inc
fidivs
xchg
mov
mov
adc
nop
adc
sbb
or
int
xlat
lock
pop
test
jns
movsb
or
or
mov
inc
test
sbb
push
pop
xlat
jp
sbb
iret
xor
adc
and
jno
push
push
clc
lea
int
adc
jnp
dec
mov
sbb
pop
pop
xor
pop
mov
loope
int3
add
and
mov
nop
lahf
fldl
xchg
notl
lahf
cmc
xchg
idivl
cld
incb
xlat
cmpb
mov
add
jb
push
test
icebp
popf
and
sub
addr16
pop
jge
js
inc
ss
mov
cld
jp,pt
mov
mov
lcall
arpl
jae
aaa
mov
cmpsl
mulb
xor
and
repz
shrl
scas
loope
push
movsb
xor
mov
mov
cld
daa
xchg
and
dec
faddl
cmpsl
js
dec
mov
cld
sbb
into
sbb
lret
push
fidivs
fstpt
adc
out
mov
test
push
sbb
mov
sahf
adc
ret
int3
test
cltd
cli
push
inc
call
sbb
or
push
decb
andb
xor
int
pop
lret
xchg
lcall
jmp
dec
clc
pop
insb
xor
pop
push
cs
sbb
fcompl
push
movsl
inc
cwtl
jo
push
out
cli
push
sbbb
loop
loop
fidivrl
clc
adc
icebp
cmp
sarb
insb
xor
inc
cmp
pop
es
sub
or
mov
fwait
mov
pop
dec
or
gs
ret
outsb
jecxz
ror
in
insb
sub
lds
sbb
out
xor
xchg
out
xchg
mov
rcl
push
iret
push
pop
xlat
jp
rorb
inc
ja
fistpll
pop
mov
pop
inc
jmp
xlat
out
adc
xor
stc
adc
clc
in
or
inc
call
clc
loop
cmp
call
xchg
mov
stos
cwtl
outsb
jl
add
out
inc
out
sbb
cmp
push
arpl
inc
jge
mov
and
pop
pop
enter
pop
pusha
pushf
jge
ret
mul
jmp
incb
shrb
mov
ljmp
cmp
cmp
mov
jle
sbb
sbb
jle
lcall
xlat
xchg
jno
pop
sahf
movsb
sub
ror
cld
push
and
mov
adc
adc
inc
xor
xor
and
cmp
lret
xor
push
xchg
push
push
pusha
rcll
inc
insb
adc
mov
and
xchg
sbb
inc
movsb
fcmovnu
sub
mov
out
aas
jnp
mov
mov
stos
sub
cmp
inc
sub
inc
fs
push
mov
xor
cmpb
lock
mov
das
sub
enter
sti
es
pop
dec
sub
loopne
jns
fnstsw
mov
inc
add
imul
mov
gs
rorl
mov
or
gs
pop
les
enter
out
test
lea
fdivl
or
in
fsubrp
mov
stos
jge
dec
add
repnz
pop
je
xlat
fidivrl
push
inc
dec
push
jmp
sahf
hlt
aad
enter
cmpsb
js
inc
in
filds
inc
imul
cmc
cwtl
out
and
js
or
lods
mov
test
sub
cmc
dec
arpl
sbb
add
or
add
out
or
cmp
popf
mov
lea
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
pop
iret
and
pop
jl
push
adc
fbstp
adc
in
dec
or
out
imul
mov
lock
push
adc
pop
movl
sbb
loop
insb
lock
or
subb
mov
pop
and
jb
jae
subb
pusha
jae
dec
xchg
lret
leave
add
insl
jge
pop
call
out
shlb
push
in
movsb
fs
mov
lahf
dec
nop
mov
sbb
push
mov
xchg
pop
repz
outsb
xor
iret
leave
andb
in
sub
adcl
mov
add
cli
fdivrl
fcmovb
sbb
fistpll
dec
mov
pusha
shll
jne
xchg
out
scas
hlt
xchg
jmp
jb
std
lret
leave
xchg
dec
mov
sahf
pop
sbb
in
js
test
xor
mov
xchg
push
mov
mov
movsb
ds
fstps
xchg
test
mov
pop
pop
aam
bswap
and
clc
ja
bound
dec
dec
sbb
adc
or
sbb
xor
test
sbb
mov
incb
movsl
inc
push
pop
xor
mov
jae
mov
cmp
enter
xor
ret
push
in
cs
std
call
into
outsb
or
scas
ret
int3
dec
dec
leave
push
iret
xchg
pop
mov
jbe
jne
add
dec
pop
cld
pop
jne
mov
test
cmp
imul
jecxz
movsb
scas
push
or
sub
pop
mov
movsl
push
ja
leave
notb
scas
pop
aad
xchg
mov
in
cmpsb
jp
lahf
dec
jae
loope
notb
push
pop
push
mov
xchg
jo
lret
addb
outsl
icebp
adc
lret
dec
dec
ds
xor
xchg
sbb
adc
sub
push
ljmp
rcll
lcall
pop
adc
fucomi
stc
jbe
test
jge
call
xor
mov
add
fistpll
jnp
mov
jo
jl
hlt
mov
push
push
scas
es
cwtl
mov
adc
push
sbb
push
pop
jle
push
xchg
out
dec
daa
into
into
sbb
and
mov
sbb
jb
pop
push
jne
fstp
dec
mov
push
scas
cmpsl
mov
add
mov
jl
mov
in
out
loopne
jl
mov
insb
push
xor
or
testb
push
xchg
push
sbb
test
pushf
sub
leave
popa
mov
cld
and
push
outsb
inc
mov
push
int3
xchg
mov
aam
in
cmp
inc
cmpb
imull
pop
cli
aam
xor
push
loope
sub
xchg
aad
in
imul
je
jne
ja
mov
adc
mov
sub
out
js
adc
dec
sbb
mov
insl
arpl
jnp
pop
inc
stos
push
orl
push
out
jns
leave
pop
test
call
sub
loope
jnp
int3
stc
adc
movsb
enter
mov
xchg
sti
test
clc
push
jmp
pop
sub
ret
cmp
clc
in
mov
xchg
jbe
fistpll
ja
enter
je
sbb
mov
mov
adc
mov
es
add
jmp
push
or
test
sub
aam
orb
xchg
hlt
in
imul
adc
xchg
mov
mov
and
xchg
fmull
cmp
jnp
lds
or
add
sahf
jno
push
mov
cmp
mov
insl
or
test
cmp
imul
addl
icebp
pop
add
rol
sbb
and
add
or
jae
mov
aaa
or
adc
pop
repz
shl
stc
mov
mov
mov
fmuls
mov
imul
enter
pop
in
fbld
sbb
push
adc
jnp
push
iret
pop
outsl
in
mov
add
ret
xor
and
pop
lock
cltd
ljmp
mov
imul
out
mov
fildll
stos
popa
pop
sbb
pop
jnp
inc
and
in
scas
push
add
aam
pop
test
fisubs
mov
shlb
aam
jae
inc
mov
imul
pop
test
jae
and
rcr
out
mov
out
xchg
push
jmp
jg
cld
and
or
cmp
push
cld
xchg
aad
mov
mov
mov
jne
xor
call
fwait
dec
push
stc
add
outsl
out
push
push
sbb
inc
sbb
out
adc
pop
pop
arpl
xchg
adc
or
push
fldl
sbb
sbb
loope
ja
xor
cmp
adc
mov
jnp
ficoml
xchg
push
pop
int3
imul
clc
stos
and
fwait
or
lret
stos
popa
popa
and
in
ljmp
into
mov
dec
jmp
popa
sub
sti
push
push
mov
in
or
pusha
add
xchg
aad
lea
jo
call
in
jno
push
dec
push
shlb
or
aaa
arpl
jl
hlt
or
clc
sub
cmp
cmp
pop
testb
jp
or
dec
push
pop
mov
jle
jno
mov
movsl
sbb
popa
stos
stos
fbstp
ljmp
inc
and
dec
aad
fsubr
mov
jle
push
mov
popf
sub
jp
out
loope
les
xchg
sbb
pop
sub
nop
and
fldcw
mov
inc
sub
mov
xchg
sub
cltd
cld
or
or
jmp
adc
dec
pop
ja
fdivs
xchg
jae
lret
mov
jo
fcoml
xchg
sub
xchg
fwait
xor
or
or
or
fbstp
arpl
pop
push
fiadds
push
fistl
push
sti
inc
fs
fwait
push
xlat
data16
movsb
or
imul
xchg
add
addr16
sbb
xor
dec
fildll
enter
incl
cmp
addb
xchg
mov
in
xchg
cmpsl
out
jg
addr16
mov
adc
jecxz
jmp
sbb
dec
xor
push
sti
inc
cmpsb
inc
ret
rcrb
sbb
xchg
mov
xchg
and
dec
aad
cld
and
mov
imul
sbbb
sahf
imul
xor
ficoms
sbb
jp
jle
mov
mov
pop
xchg
push
leave
jo
mov
iret
mov
cwtl
mov
dec
out
xor
test
mov
jae
cld
cmpsb
movsl
add
mov
mov
cmp
scas
and
adc
out
jecxz
aaa
out
into
dec
push
loope
jg
mov
in
mov
aad
and
add
fmuls
inc
movsl
loop
add
pop
xor
mov
ds
pop
and
idiv
cmp
and
add
jae
call
mov
sub
push
jo
sarl
xchg
bound
ds
scas
or
data16
xchg
mov
inc
add
shlb
xchg
cmpsb
mov
sbb
addr16
mov
jb
sub
xchg
in
inc
mov
sbb
cmpsb
jg
xor
mov
sub
push
xor
mov
mov
sbb
imul
mov
pop
movsl
and
shll
sbb
push
jnp
movsl
imul
into
pop
loope
shrl
push
sub
xchg
sub
insb
nop
pop
mov
jle
es
aas
ss
push
fistpll
rcll
rclb
add
cltd
rcr
or
daa
xor
sbb
test
nop
call
ds
insl
and
jp
xchg
pop
movsl
mov
jae
iret
in
bound
dec
cmpsb
notl
inc
and
add
dec
adcb
jp
daa
mov
test
repnz
xchg
dec
test
mov
mov
push
xchg
sbb
mov
jmp
insb
test
cmpsl
mov
dec
and
jge
jmp
out
lret
andb
cmpsb
outsb
loope
dec
adcl
cmc
push
cli
dec
or
movsl
test
cmpsl
dec
or
rorb
jecxz
bsr
push
xlat
pop
loope
push
jns
aaa
test
xchg
sub
mov
xor
mov
stc
add
in
dec
movsl
ds
lret
negl
ret
js
pusha
mov
push
sbb
adc
adc
lret
jle
aam
lret
fistpll
test
test
fdivl
das
aaa
test
andl
fs
mov
xor
dec
outsl
mov
jo
add
loop
lea
pop
test
xchg
je
mov
repnz
idivl
dec
cmc
nop
repz
sbb
lcall
mov
popf
mov
out
iret
mov
mov
dec
jl
repz
ljmp
imul
xor
mov
pop
cs
xchg
pop
and
popf
enter
adc
xchg
gs
out
aas
shrl
jbe
popf
jb
shll
cmc
pop
cmp
push
dec
mov
xchg
adc
test
cli
lods
sahf
insl
repnz
shlb
gs
into
imull
in
cmpl
call
inc
call
xchg
sub
jo
jo
clc
push
loop
adc
sti
daa
test
rcr
shlb
jge
cmc
dec
movsl
clc
scas
jae
test
mov
nop
jns
dec
cwtl
lret
xchg
jo
ss
mov
notb
or
fimuls
sbb
inc
fwait
xor
pop
add
leave
mov
sub
outsb
jmp
aad
sub
out
ds
ja
pop
cmpl
add
movsl
lret
movsl
rol
jno
push
out
rep
adc
xchg
and
mov
cwtl
and
mov
sub
mov
xchg
sub
cmp
mov
adc
test
add
ljmp
inc
insl
jae
test
es
movsb
jl
xchg
adc
out
mov
push
iret
mov
les
mov
dec
push
enter
xchg
sbb
rclb
xchg
sub
sbb
inc
adc
mov
scas
adc
cmp
jecxz
cmpb
shrl
jmp
inc
lods
mov
repnz
lods
cmp
xchg
cs
pop
loop
std
adc
fisttpll
es
sbb
loopne
notl
pushf
les
loope
jo
jnp
jl
fwait
insl
inc
mov
pusha
pop
mov
mov
int3
adc
jnp
aaa
es
cli
add
je
arpl
pop
scas
and
je
out
sahf
outsb
movsb
cmc
jg
xchg
lock
xor
inc
gs
fs
pop
mov
repnz
inc
dec
imulb
mov
imul
cwtl
pop
sbb
fidivrs
sub
insl
and
popf
cmp
out
shl
jp
jnp
mov
xchg
jne
inc
subb
sub
mov
loope
jecxz
inc
push
push
fsubrl
adc
nop
jmp
add
cmp
int3
aaa
inc
push
adc
jmp
mov
enter
xchg
and
pop
sbb
call
dec
adc
and
aaa
push
xlat
mov
daa
fwait
jl
and
pop
and
add
push
test
mov
and
int3
sbb
adc
sbb
dec
xchg
inc
into
lret
push
and
jbe
and
sub
int3
sbbl
inc
dec
lds
inc
xor
data16
mov
mov
pop
mov
imul
pop
push
mov
pop
xchg
imul
add
mov
pop
sbb
jb
stc
jb
ffreep
outsl
movsb
cld
movq
aad
xor
stos
dec
or
fs
in
adc
andl
push
or
push
mov
or
push
jp
pop
cmp
and
imul
repnz
mov
push
enter
and
test
xor
bound
sbb
push
es
aaa
ja
or
aad
ljmp
xchg
or
jle
inc
push
iret
pop
add
push
add
adcl
iret
aaa
xor
adc
add
dec
adc
mov
aam
insb
push
ss
mov
dec
jmp
mov
pusha
pop
xor
enter
movsl
sub
jae
sbb
xor
push
mov
inc
mull
fdivrl
xchg
dec
js,pt
fists
cwtl
add
lcall
lds
xchg
xor
push
dec
mov
iret
lahf
jnp
sbb
sarl
mov
pushf
imul
iret
add
xchg
mov
pop
loope
stos
mov
movsb
int3
inc
adc
cmp
test
cmp
lcall
les
cmpsb
jbe
jo
lock
fsubp
mov
lret
mov
jo
cmp
movsl
mov
je
mov
xlat
mov
xor
mov
mov
ds
add
mov
xor
xchg
lcall
add
enter
iret
lock
in
mov
sub
push
outsb
stc
jle
pop
adc
xor
pop
mov
test
pop
gs
sub
cmp
dec
lods
add
push
mov
mov
jge
fs
pushf
scas
mov
lret
cld
xor
push
push
ficompl
or
fildl
stos
mov
pop
mov
dec
pushf
subl
aam
or
mov
data16
out
add
cltd
inc
push
aad
mov
stc
and
sbb
pop
xchg
jl
sarb
aaa
mov
xor
mov
sub
aad
mov
xchg
loope
dec
mov
jge
and
test
adc
mov
test
mov
cmpsb
imul
in
adc
les
inc
ss
adc
xchg
cld
push
jae
leave
cmp
dec
insl
fimuls
aaa
cwtl
pop
pop
int
aam
cmc
adc
hlt
push
hlt
and
jae
cmp
imul
jo
bound
jecxz
mov
and
push
inc
je
inc
jno
int
loop
clc
jp
adc
mov
sub
insb
xchg
sbb
in
xchg
sub
inc
cmp
in
adc
into
adc
cld
jbe
je
add
sub
jmp
int3
cmp
push
sub
outsl
fcompl
jb
fwait
std
in
out
ret
sbb
cmc
sbb
dec
lock
cmpsb
loop
adc
pop
out
cli
jge
fimull
rorb
ficoml
lea
mov
cwtl
fcomip
mov
gs
pop
int
ds
push
push
cld
in
sub
xor
fidivrl
adc
mov
in
inc
inc
test
mov
lahf
xor
sti
jg
call
pop
adc
daa
dec
fbstp
ds
push
sarl
push
out
cmp
mov
scas
inc
mov
mov
in
sub
and
jg
sbb
adc
inc
jle
fildl
sub
cmpsl
mov
jne
or
sub
push
and
cmpsb
push
lds
stc
aas
and
shlb
mov
enter
add
fs
adc
mov
aad
out
mov
mov
dec
sub
xor
cltd
cmovo
mov
xor
xchg
xchg
int3
cltd
inc
shll
pop
pop
add
icebp
xlat
pop
bound
jecxz
mov
aaa
addr16
aad
scas
lods
sbb
xlat
cmpsb
in
sub
xchg
imul
or
inc
nop
or
add
cmpsb
clc
mov
xchg
cmp
mov
fsubrl
push
dec
aam
xlat
jae
das
aaa
lods
sbb
dec
lahf
mov
and
cmpsl
and
cmpsl
ljmp
mov
vpord
lods
scas
es
out
sub
loopne
mov
lds
dec
sbb
xchg
push
je
push
fnsave
test
mov
aad
frstpm(287
jge
lahf
push
mov
mov
sub
or
xchg
dec
mov
and
lcall
jno
push
sbb
xor
rcrl
lock
mov
in
xlat
sbb
movsl
roll
cmp
pusha
lret
sub
jmp
push
lcall
lret
mov
dec
jg
mov
and
negb
sub
rcll
push
or
mov
rorl
mov
sbb
lret
push
sbb
daa
int
loope
iret
roll
or
sub
outsb
mov
roll
cmp
cmp
inc
addr16
shll
add
inc
stc
inc
push
lret
je
mov
cmp
inc
xor
sub
cld
jo
xchg
adc
push
push
in
dec
mov
or
sub
rorl
dec
push
pop
rol
arpl
pop
outsb
lods
pop
and
int3
ss
lret
push
scas
inc
subl
in
push
ret
sub
adc
cltd
outsl
aaa
or
mov
mov
add
int3
jl
adc
outsl
inc
push
stos
or
jle
mov
push
ds
cmp
push
out
sbb
mov
mov
out
pop
jne
das
adc
push
pop
insl
push
in
jno
repz
cmpsb
rcll
mov
cwtl
in
pushf
in
mov
dec
mov
push
or
jns
dec
stos
add
dec
cmp
and
flds
push
sbb
push
cmp
jecxz
hlt
mov
mov
fcoms
fcoml
stc
cmp
rcrb
clc
and
dec
imul
cli
xor
xchg
mov
sbb
or
ds
addl
mov
test
inc
push
dec
push
jp
and
inc
shl
std
mov
mov
in
lock
add
pop
leave
repz
jne
imul
dec
sub
push
icebp
push
sub
mov
scas
in
mov
push
mov
and
mov
int3
add
mov
inc
xchg
les
mov
std
push
sbb
sbb
or
fsubp
dec
loopne
call
or
dec
mov
or
aam
mov
out
pop
mov
pop
icebp
ss
xchg
push
ret
mov
fcom
stos
pop
cmp
jne
sbb
scas
hlt
xchg
pop
push
fadds
pop
insb
ja
outsb
pop
push
stos
fldl
inc
xchg
push
je
test
cmp
sub
lcall
jecxz
lods
pop
fmul
jg
push
xchg
cmp
or
imul
ret
push
test
add
int3
cmpsb
mov
enter
pop
push
popa
int3
aad
enter
insb
or
in
xchg
outsb
mov
pop
ret
in
sub
lcall
jge
cli
jge
inc
inc
test
aam
pusha
pop
ret
call
mov
imul
dec
rcrb
pusha
jo
aaa
lods
ss
xchg
cmpl
movsb
mov
sub
shr
adc
push
jmp
jl
movsl
rcrb
add
adc
mov
and
movsb
lahf
dec
outsb
jb
lret
les
push
fmulp
lret
dec
lret
sbb
loop
ds
sub
movsb
and
add
lea
not
test
orb
pop
ds
jl
mov
orps
inc
outsl
cmp
cmp
dec
out
iret
jno
jno
jae
jle
or
jg
aam
xor
sub
add
es
int
adc
xorb
adc
sub
lods
sahf
mov
icebp
ret
das
int3
cmp
mov
lea
push
push
pop
cmp
push
sbbl
test
out
mov
into
and
lods
and
subl
pop
or
pusha
xchg
jle
push
jl
dec
mov
imulb
hlt
pop
cmc
loope
adc
pop
pop
mov
fildl
inc
mul
ljmp
xlat
xchg
add
lea
ss
push
cmpsl
out
roll
sbb
fistl
sub
pop
mov
mov
inc
stos
fstl
aam
push
pusha
sub
incb
test
jb
mov
lcall
stos
ja
mov
ret
mov
xor
adc
pusha
pop
mov
or
xchg
xchg
jno
out
lods
loop
jl
dec
rol
es
cwtl
mov
ja
jmp
icebp
mov
cld
jae
dec
rcr
ljmp
adc
pop
jmp
in
rorl
loopne
inc
jae
negl
mov
fistps
xchg
and
mov
inc
movsb
lea
call
push
jge
adc
dec
push
jge
adc
xor
pop
sub
push
stos
or
adc
ret
push
dec
idivl
test
fiaddl
inc
mov
xor
mov
daa
cli
std
jae
pop
and
loopne
sahf
sub
jbe
mov
imul
jge
cltd
fs
cwtl
pop
inc
xchg
cli
movsb
dec
in
addr16
inc
lds
ret
sahf
inc
outsb
push
lods
fdivr
sub
adc
mov
mov
gs
jne
push
ss
repz
pop
sbb
cltd
push
not
pusha
or
push
fisttpl
mov
scas
jl
sbb
ret
push
das
push
mov
push
ret
pop
and
ss
and
out
adc
or
data16
ret
xchg
xchg
jecxz
lret
fldenv
jns
mov
inc
popa
out
xchg
cli
push
mov
mov
lcall
push
jge
sbb
lds
movsl
xchg
aam
jmp
repnz
jno
mov
xchg
outsb
in
or
add
inc
and
movsl
jecxz
push
add
lds
sub
pop
aad
mov
in
out
in
test
dec
ljmp
xchg
inc
cmpsb
xchg
loopne
cli
cld
xor
arpl
jp
stc
movhps
jmp
imul
repnz
lea
cmp
lock
inc
xchg
xchg
xchg
lock
and
cmp
xlat
pop
fadd
lods
push
and
hlt
jbe
or
sub
jp
std
aad
sub
sbb
leave
inc
jo
pop
das
lahf
and
sar
xchg
inc
into
add
ficomps
icebp
scas
jae
pop
arpl
sbb
pop
xor
andb
xchg
movsl
add
pusha
gs
xorb
bnd
mov
mov
test
iret
clc
pop
mov
push
mov
sub
cs
dec
mov
js
shrl
mov
rorl
xchg
jo
sub
cmp
jbe
mov
sub
hlt
pop
mov
jl
cmpsb
xchg
mov
and
mov
sub
in
sbb
cmp
fldenv
push
jne
mov
mov
test
adc
dec
inc
aas
hlt
mov
aas
test
jl
pop
jge
rcrl
pushl
mov
push
add
cld
push
jb
xchg
mov
cmp
push
mov
push
testb
pop
mov
jo
cmpsl
repz
add
loop
xchg
callw
clc
and
xchg
es
insb
cwtl
sahf
xchg
jns
int
xchg
pop
clc
sub
lock
push
popf
mov
dec
jl
xchg
repnz
out
mov
xchg
mov
nop
cmp
mov
cs
sbb
sarb
jmp
inc
push
push
test
xor
push
inc
loop
cmp
mov
jno
aaa
cmp
rcll
jno
lret
out
outsb
push
dec
imul
aam
loopne
push
mov
xor
ljmp
push
push
jne
ret
gs
push
aaa
cmpsb
loop
or
movsl
jl
mov
inc
push
pop
sbb
mov
lret
inc
inc
xchg
jae
jmp
add
popa
adc
pop
inc
or
xlat
subb
jmp
and
shlb
sub
ret
sbb
and
mov
dec
or
sub
fldcw
mov
xchg
mov
mov
adc
sbb
mov
in
shll
repz
fimull
stos
xchg
sarb
cld
in
ja
sbb
xor
adc
pop
popf
inc
mov
ret
fistpll
lret
push
add
scas
rorl
inc
xchg
sub
insb
bound
adc
add
sub
out
dec
lahf
jmp
xor
pop
push
and
arpl
ficomps
sbb
iret
adc
dec
push
iret
rcrb
fdivrl
xchg
lods
pop
lea
xor
daa
popa
mov
add
pop
scas
sub
xchg
add
imul
testl
pop
ficoms
add
mov
add
pop
sub
cwtl
popf
hlt
cmp
and
mov
lahf
dec
sbb
cmp
and
lahf
or
subb
or
insb
bound
cmp
xorl
sbb
ret
inc
xor
dec
add
adc
xchg
add
cmpsb
scas
mov
adc
cmp
mov
outsb
xchg
mov
out
hlt
push
movsl
loope
pop
adc
int3
cmp
mov
mov
out
ret
sub
pop
in
pop
sub
or
sbb
lods
in
cs
ret
popf
add
inc
sub
sbb
int
repnz
xor
dec
sub
es
sub
adc
bound
sbb
push
andb
lret
inc
cmpsb
xor
test
jne
mov
in
scas
or
push
push
bound
mov
pusha
dec
push
jmp
std
xlat
and
cmc
jle
mov
loop
pop
lcall
dec
fwait
sub
fbstp
pop
pop
mov
rcll
mov
pop
cwtl
or
pushfw
inc
test
or
xor
repnz
adc
fsub
mov
imul
dec
test
cmp
push
dec
sbb
adc
xor
cmp
jnp
xor
mov
pop
xchg
adc
xor
dec
push
inc
shl
loope
loope
nop
jl
rcrl
and
dec
sub
pause
lret
add
xchg
mov
xor
data16
stos
mov
bound
jle
mov
sbb
ljmp
sub
jne
and
lahf
dec
jnp
arpl
sbb
in
nop
sbb
in
js
add
push
clc
and
dec
std
sbb
insl
pop
mov
dec
call
xor
hlt
and
jbe
nop
xchg
pop
add
mov
inc
xchg
or
cmp
ss
dec
mov
fdivrl
movsb
cmp
in
add
or
xchg
aam
adc
fadds
xor
out
xchg
sti
out
xchg
jg
xchg
or
mov
mov
xchg
xchg
or
mov
mov
xchg
adc
xchg
rolb
cltd
aas
fadds
sub
dec
pop
ss
adc
push
out
ret
insl
mov
orb
pop
add
inc
outsl
xchg
repz
aad
in
in
nop
mov
es
aaa
and
loope
clc
jbe
pop
mov
mov
aad
sbb
out
adc
mov
and
sub
dec
fimuls
pop
hlt
mov
push
loope
xor
mov
or
pop
in
in
ret
or
sahf
test
jmp
sbb
jp
and
dec
in
pop
pop
js
pop
mov
xor
and
cmpsb
push
enter
add
aas
add
push
inc
mov
xor
sub
mov
loop
mov
mov
js
or
dec
je
aad
cmp
and
xor
stos
push
out
adcb
adc
lock
movsl
bound
push
xor
mov
outsb
leave
sub
jl
leave
xor
loope
sub
pop
inc
push
mov
sbb
out
fidivrs
sbb
push
mov
mov
push
ja
xchg
pushf
in
insl
inc
dec
repz
mov
repz
ljmp
xchg
push
xor
push
data16
cltd
jge
push
jge
stc
xor
and
sbb
mov
add
pop
mov
push
pop
int
mov
and
and
xchg
aad
inc
jmp
into
xchg
xlat
stos
outsl
or
inc
sbb
fcmovu
dec
insl
xor
scas
pop
adc
xchg
repnz
jo
out
and
mov
pop
jmp
cmpl
hlt
arpl
repnz
xchg
lret
xchg
call
push
pop
jg
mov
lahf
sbb
xchg
pop
pop
push
mov
int
mov
jecxz
in
pusha
out
mov
std
inc
mov
add
adc
and
pop
xor
dec
cmp
cltd
adc
pop
pop
and
push
mov
jnp
xchg
pop
lcall
pop
mov
lret
test
mov
jno
cmp
cmp
daa
cmp
pop
sub
loope
lcall
and
mov
icebp
sub
or
ud2
xchg
aam
ja
mov
scas
add
fisubrl
mov
add
mov
dec
cmp
pop
mov
in
sbb
and
jo
std
lea
js
popf
insb
call
push
fbstp
sbb
cli
ja
ss
out
out
cwtl
cmpsl
aad
add
mov
add
movlps
push
lcall
mov
jge
leave
pop
or
test
and
sbb
adc
jmp
sbb
xor
notb
sub
pushl
push
les
mov
pop
pop
xchg
push
stc
inc
addr16
jae
jmp
push
push
lret
sub
je
xorl
cmpsb
gs
mov
dec
xor
dec
cmpsl
mov
call
sbb
xor
int3
cmc
xor
fwait
mov
adc
scas
pop
jo
nop
loope
mov
imul
shll
push
shlb
pop
xchg
adc
jns
sbb
loopne
pop
outsl
shlb
addr16
pop
push
mov
rcll
and
jl
jle
cmpb
lock
jb
mov
shll
xor
jne
or
daa
mov
loope
stos
xchg
outsb
xor
fld
gs
dec
sub
adc
pop
lahf
xor
fiadds
mov
insl
rorb
xchg
and
push
in
pop
lock
or
jns
push
sbb
cli
sub
xor
mov
sub
js
mov
aam
aas
and
cmpsl
add
sbb
jl
dec
aas
jecxz
jge
cmp
inc
cld
inc
adc
cmpsl
dec
lea
mov
push
or
pusha
loope
or
adc
adcl
jle
jl
shrl
jbe
xadd
in
sbb
push
gs
pop
in
fnsave
loope
decb
pop
sbb
cmp
and
xchg
test
std
cmc
loop
mov
loopne
lret
insl
dec
add
pop
cwtl
shlb
xor
sti
cli
sub
aam
adc
icebp
int
scas
jge
xor
adc
or
popa
aad
roll
std
cmp
das
aaa
inc
and
sub
jne
mov
lods
mov
iret
add
fisttps
loop
sbb
sbb
sti
or
adc
cmpsl
lcall
inc
movsb
rcrb
pop
adc
repz
popa
popa
mov
cmpb
or
sbb
ss
cmpsb
es
jp
jne
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
sbb
inc
loope
push
jl
pop
pop
jl
imul
fisttpll
repz
sbb
add
les
mov
pop
int3
jp
aas
lods
scas
dec
loopne
test
pop
and
jecxz
fstl
xchg
lods
jecxz
and
or
loopne
add
mov
loope
mov
lock
push
test
bound
pop
adc
cmc
adc
negl
push
adc
les
movsb
xchg
out
loope
call
inc
outsb
xor
jmp
lret
fstpl
xor
jmp
xor
mov
adc
loope
xchg
iret
adc
and
dec
repnz
sbb
mov
or
cmp
and
xchg
cmp
sub
stos
mov
add
jno
fdivs
les
mov
out
inc
jbe
aad
insb
jge
inc
add
fildl
inc
enter
test
pop
adc
push
test
jns
and
lret
rep
mov
test
cmp
clc
or
or
mov
leave
cwtl
sbb
mov
add
test
jbe
leave
dec
cmp
sub
mov
frstor
rcr
adc
xor
dec
imul
adc
inc
jo
jnp
movsl
outsl
sbb
inc
fcmovnbe
xchg
xchg
jecxz
pop
popf
dec
int3
fldl
pop
sbb
cmc
dec
lahf
rorl
add
fs
add
cld
daa
aaa
mov
mov
inc
mov
jo
gs
mov
push
mov
dec
dec
pusha
loope
ret
xor
int
add
int
fwait
testb
mov
sub
xlat
sub
ror
mov
lret
push
fwait
js
ss
popf
inc
inc
mov
mov
jno
pop
inc
mov
pop
enter
andb
dec
or
mov
cmpsl
inc
xor
pusha
add
arpl
insl
jbe
or
push
or
fsts
inc
rcrl
gs
or
out
lds
icebp
shrb
inc
mov
xchg
in
das
testb
sub
in
les
loop
loopne
xor
testl
out
data16
xchg
fbld
and
arpl
mov
rcrl
sub
dec
in
push
jge
into
repnz
pop
lahf
mov
and
sahf
inc
daa
pop
ds
test
movsb
mov
mov
js
sbb
cmp
xchg
shr
in
int3
das
inc
ret
or
push
inc
scas
sub
es
outsl
mov
sbb
movl
and
push
push
fsubs
fnstenv
lds
mull
pop
insb
cwtl
pop
ret
sahf
out
fsts
imul
lods
xor
pusha
push
push
dec
fiaddl
mov
pop
xor
cmp
cmpb
pop
arpl
xorb
xor
out
in
mov
fwait
aaa
xor
cmp
pop
lods
bound
sub
cmp
push
nop
or
ja
std
sub
outsl
rcll
je
mov
sahf
adc
test
cmp
lahf
lock
pushf
push
jp
mov
xor
lds
dec
lock
std
cli
jp
push
test
iret
movsb
push
sub
imul
or
jg
lcall
cmp
int
in
mov
sbbl
inc
xlat
aam
add
leave
xchg
mov
inc
dec
nop
lock
ret
aaa
cmpsl
negl
dec
mov
addr16
jmp
jae
scas
ret
pop
fs
test
rcrl
cmp
ja
or
fcmovbe
scas
sub
stos
mov
jecxz
mov
lods
push
xchg
mov
cmp
popa
test
and
mov
mov
sub
cmp
sbb
or
sbb
movzbl
push
inc
in
jp
pop
and
iret
lods
icebp
pop
cmpsl
lcallw
aam
push
xor
mov
sbb
std
aad
pop
pop
leave
push
in
aad
cmp
sub
bound
idivb
dec
pop
inc
cmc
int3
repnz
cmp
pop
push
inc
adc
adc
push
test
or
int3
sbb
xchg
add
or
jl
or
aas
ljmp
lret
xchg
roll
lock
add
dec
inc
jle
xlat
dec
xlat
sub
cwtl
pop
lcall
imull
pop
xchg
dec
adc
loop
mov
fdivl
daa
dec
jmp
mov
mov
add
push
arpl
push
aam
es
pusha
nop
and
pushf
scas
filds
test
lods
xor
insl
jne
icebp
dec
lret
lfs
add
mov
and
cli
sbb
in
test
scas
jns
xor
lahf
xor
fsts
xor
inc
int3
outsl
lds
sub
sti
aaa
icebp
jne
cmp
jmp
mov
sahf
jne
ret
int3
jnp
call
mov
sbb
ljmp
pop
xor
es
jecxz,pn
and
xor
rcrl
inc
and
sub
scas
addb
inc
inc
xchg
sbb
jbe
push
outsl
mov
nop
ficomps
mov
add
test
pop
fbld
fidivl
cltd
into
pop
cmp
mov
push
sbb
cmp
xor
aaa
roll
mov
and
lea
mov
in
mov
dec
test
sbb
cmp
stc
mov
daa
mov
test
les
scas
rcr
rorb
scas
xor
push
sti
adc
rol
pop
sbb
lahf
cmp
cs
aas
jge
or
pop
add
out
subb
xor
out
in
push
mov
test
and
loop
jns
add
xchg
push
inc
pop
clc
sbb
fwait
loope
inc
test
push
movsl
sub
adc
and
test
push
jns
inc
movsl
mov
or
lret
pop
inc
scas
mov
xchg
jb
xorl
mov
testl
daa
or
mov
or
and
or
xchg
lahf
cli
adc
pop
inc
jg
xchg
andl
out
and
scas
xchg
xchg
das
mov
lret
pop
sbb
or
sub
pop
push
das
pop
mov
repz
adc
aaa
mov
fadd
fcmovnu
rorl
fidivl
jb
mov
inc
test
xor
insl
mov
imul
dec
aas
mov
mov
jno
subl
push
stos
and
add
push
adc
aas
sete
fisttps
xor
sbb
or
and
popa
pushf
js
in
enter
adc
cmp
cmp
bound
mov
mov
pop
inc
ja
cmpsb
inc
jecxz
push
stos
adc
push
adc
repnz
in
leave
inc
push
stc
subl
loope
adc
xor
pushf
lods
ss
dec
int3
mov
cmp
and
shr
cld
iret
loop
push
xchg
jns
addr16
jbe
out
or
pop
addr16
lret
or
adc
fcmovnbe
ret
dec
enter
clc
repz
sbb
mov
jae
aaa
les
les
or
jno
dec
aas
mov
sub
and
sbb
push
pop
nop
mov
dec
bound
mov
test
inc
pop
imul
loopne
jmp
mov
mov
add
clc
xor
or
push
xchg
emms
notb
das
jp
fldt
push
inc
mov
negl
imul
in
push
mov
xor
adc
repz
cltd
adc
adc
sbb
push
aam
and
pop
sub
stos
dec
add
in
inc
loope
adc
push
pop
lahf
mov
xchg
xchg
adc
dec
dec
scas
movsb
push
mov
popa
pop
xchg
clc
lret
pop
jmp
mov
jmp
fldln2
cltd
jb
adc
cmp
addb
sti
roll
xlat
add
sbb
rcr
jge
imul
int
in
jnp
adc
dec
mov
sbb
shlb
mov
call
cmpsl
dec
jecxz
xchg
push
mov
or
sub
or
sbb
mov
int3
leave
sbb
mov
movsl
mov
repnz
or
test
push
in
inc
enter
outsb
clc
and
aaa
pop
jae
mov
push
xchg
cs
cmpsl
test
lcall
add
enter
cwtl
aas
push
push
cwtl
es
lock
cmp
imul
adc
out
and
xlat
out
cltd
pusha
adc
lods
in
mov
loopne
cmc
xchg
dec
aas
jns
or
dec
and
in
out
adc
imul
pop
sbb
iret
sub
cli
inc
mov
lods
push
inc
mov
sbb
arpl
icebp
outsl
mov
sub
adc
lea
outsb
repz
cs
fcompl
add
stos
jge
movsb
inc
mov
insl
sbb
popa
gs
cmp
fwait
add
mov
shrb
inc
div
pushf
stos
imul
and
out
inc
icebp
cli
insb
lods
mov
adc
mov
add
cmc
add
mov
pusha
hlt
les
in
xchg
push
imul
je
xchg
xor
int3
pop
jno
pop
iret
addb
jo
push
pop
or
jg
out
filds
shll
pop
clc
jo
mov
jge
sbb
sub
mov
shlb
pop
mov
scas
add
xchg
mov
into
jecxz
mov
int
lock
jmp
stc
sub
test
clc
je
mov
insl
mov
aas
shrl
es
jo
enter
inc
mov
nop
imul
xor
out
ja
or
test
insl
insb
adc
and
cmp
xchg
popa
adc
pushf
dec
outsb
xor
das
jge
xor
inc
and
pop
cwtl
inc
shr
lret
dec
xor
cli
arpl
repz
popf
popa
push
je
lret
push
xchg
aam
insl
lret
ja
ficoms
inc
dec
pop
and
lea
mov
ljmp
sub
shll
imul
rcr
in
int
jmp
pushf
out
test
xchg
xchg
jge
inc
imul
xchg
aam
adc
xchg
outsl
mov
and
mov
outsl
outsl
or
fs
fimuls
frstor
pop
pop
out
dec
xlat
loopne
adc
mov
mov
shr
outsl
mov
imul
mov
jb
jl
ss
cmc
test
cmpsb
ret
movsl
jg
mov
dec
push
outsb
or
xchg
popf
mov
jno
or
dec
push
xor
cmpsl
cmp
add
pop
lret
in
fildll
adc
sub
push
lret
jbe
and
cmc
sub
push
push
push
lods
adc
inc
pop
sub
mov
mov
or
sbb
and
in
loope
pop
test
lds
adc
pop
mov
xchg
test
mov
cltd
ja
mov
xchg
adc
sub
int
rorl
ret
fs
cmpsb
adcl
xor
push
iret
and
and
sbb
nop
nop
lods
jo
add
mov
in
dec
test
xchg
and
in
lea
rclb
cmp
push
mov
lods
inc
shl
loop
stc
cmp
mov
fnstsw
daa
in
out
push
daa
loopne
xor
imul
lahf
adc
and
mov
add
cmpsb
pop
scas
bound
fwait
ja
adc
fisttps
jmp
ja
jbe
jne
sbb
out
jns
fdivrl
push
dec
jo
jae
pop
test
addr16
in
sahf
xor
cli
add
cmc
fdivl
insl
cwtl
sbbb
imul
repz
cmp
setb
icebp
xchg
loop
xchg
add
in
nop
fcmovb
out
mov
jo
sti
xchg
insl
or
cltd
adc
mov
cmpsl
xchg
pushf
jo
mov
adc
push
lret
in
sub
cmpsl
rolb
gs
sub
sbb
push
in
mov
or
sti
mov
xor
pop
daa
sbb
fsubrs
push
mov
jmp
addr16
pop
cmp
push
insl
push
jmp
mov
xor
jg
xchg
stos
jmp
out
pop
xchg
xor
adc
push
add
cwtl
jecxz
or
outsl
push
lea
call
push
mov
test
inc
in
aaa
aam
adc
fstp
addb
xor
jle
pop
mov
cld
insl
and
mov
imul
jmp
xlat
push
push
leave
popf
mov
popa
sbb
stos
call
sub
mov
push
inc
adc
mov
out
jp
pop
jb
cs
daa
ja
add
push
jae
hlt
enter
adc
push
out
dec
add
cmc
rolb
dec
test
fwait
pushl
mov
fidivs
lahf
int
jne
imul
mov
outsb
mov
adc
add
xlat
fsubrs
jae
push
dec
je
int3
ja
jp
adc
es
fsubs
cli
mov
dec
loope
das
sbb
add
jne
movsl
mov
jge
inc
inc
enter
dec
inc
cwtl
dec
push
leave
jno
iret
andl
jg
scas
pop
les
fcmovne
fisttps
mov
push
shll
ja
mov
fmul
dec
xor
pop
orb
mov
lock
jo
mov
js
lock
mov
dec
or
pop
jl
pop
mov
pop
bound
dec
mov
and
pop
aam
mov
inc
das
add
mov
push
ljmp
clc
bound
add
divb
inc
test
xlat
or
sbb
outsl
aad
daa
adc
imul
push
sbb
adc
call
stos
and
jp
cltd
iret
shrl
out
cs
xor
clc
repz
inc
fistl
jg
lret
cmp
push
pop
mov
aad
mov
stos
nop
out
inc
lock
inc
add
pop
add
mov
inc
dec
cmp
sub
in
notl
fwait
icebp
mov
push
lcall
jb
test
xchg
scas
pop
into
leave
xor
repnz
test
xor
pop
in
ljmp
call
and
ljmp
int
in
loope
mov
sbb
inc
popf
mov
pop
jp
sbb
sub
dec
sbb
xchg
test
xchg
ja
in
es
xchg
pop
ljmp
roll
lret
pushf
pop
add
stc
scas
jno
push
negb
sub
add
test
inc
cmp
dec
fs
or
sbb
test
inc
add
sbb
push
enter
mov
rol
out
addr16
jno
cmp
xchg
incb
push
int3
mov
push
mov
ret
add
dec
ret
stc
lods
dec
jnp
xor
inc
sub
inc
mov
test
mov
mov
sbb
pop
mov
test
dec
sub
mov
out
jmp
inc
cli
adc
outsl
dec
jno
cwtl
jmp
or
cmpsb
and
adc
push
lcall
insb
adc
or
add
popa
shrl
adc
mov
add
pop
les
xchg
sub
sarl
popl
cmp
imul
mov
push
imul
sub
pop
cmp
lahf
xchg
ds
imul
decb
mov
gs
cwtl
addr16
in
or
mov
icebp
inc
dec
mov
es
inc
cmp
in
inc
cmp
ds
negl
lret
insb
cltd
and
jmp
cmc
add
cmpb
mov
incb
leave
ja
insb
cltd
inc
insl
in
adc
jge
into
popf
iret
sub
xchg
addl
out
icebp
nop
xchg
jno
inc
push
sub
xchg
push
fcoms
add
popa
test
push
mov
push
mov
ds
push
dec
loop
adc
inc
fdivrp
inc
fisubl
dec
sub
xchg
jmp
jne
fildll
mov
shr
cwtl
mov
imul
cs
and
nop
inc
arpl
arpl
addr16
into
push
stos
ds
icebp
pusha
ljmp
ljmp
or
rclb
cs
ret
sarl
in
jmp
mov
sbb
mov
push
nop
mov
xchg
sbb
data16
add
aam
out
mov
push
cmp
inc
shrl
out
xor
dec
enter
xor
int
lods
or
xchg
movsb
jg
add
imul
ljmp
sub
fucomp
fwait
in
cmp
ja
sub
aad
fiaddl
mov
dec
fwait
dec
xor
stc
nop
inc
xchg
inc
pop
fmull
fwait
cmp
popa
fcmovb
out
mov
add
push
dec
movsl
xlat
jecxz
add
mov
inc
sub
push
insl
push
das
insb
lds
sbb
hlt
jmp
andl
pushf
int3
adc
cmp
in
sub
out
xor
mov
xchg
outsl
lods
xor
add
std
ljmp
or
cwtl
xchg
xor
xor
mov
mov
ficoms
fmull
imul
xchg
bound
and
sbb
pop
aaa
stc
push
inc
in
arpl
stos
insb
jmp
and
or
xchg
addb
or
jnp
lods
insb
fdivl
cmc
pop
xchg
mov
iret
mov
dec
jb
xchg
scas
fldenv
je
cmp
lea
mov
addr16
ss
fcoml
sbb
mov
push
sub
stos
jge
rclb
insb
pop
aaa
arpl
repnz
test
enter
lea
fildll
cmp
sub
daa
clc
mov
cwtl
iret
out
and
fwait
loop
jns
pop
jne
lds
fstps
xchg
int
jmp
leave
jp
rol
rcrb
out
aas
sbb
mov
test
iret
test
cmpsb
dec
jp
cmp
lods
cs
jo
test
mov
push
in
repnz
mov
aam
mov
sbb
jnp
xchg
mov
ds
mul
inc
lcall
fwait
cmp
push
pusha
shl
fdivrl
or
push
jno
mov
mov
js
mov
adc
mov
clc
push
or
test
jae
sbb
pop
jmp
cmpsl
iret
mov
or
js
mov
mov
ljmp
sar
std
addr16
jge
or
sub
out
jecxz
jmp
int
leave
ds
popa
lock
mov
jmp
mov
sub
stos
icebp
mov
inc
pop
aam
nop
push
iret
dec
scas
outsb
dec
cli
loopne
inc
out
repnz
sub
mov
in
cmp
mov
and
fildl
xchg
lret
pop
sahf
mov
arpl
outsb
xchg
pop
or
jae
and
int3
and
push
ret
mov
out
jae
pop
dec
add
ja
pop
iret
popa
mov
nop
cmp
and
push
pop
dec
or
out
add
shlb
arpl
gs
jbe
jle
and
pop
js
movsl
mov
sub
inc
mov
xor
js
aam
sbb
rolb
mov
dec
lods
out
aaa
shr
mov
mov
popf
sbb
insb
ds
addr16
scas
mov
movb
mov
add
pop
je
sbb
adc
xchg
rclb
out
fstps
mov
es
add
mov
andl
xchg
adc
enter
sbbl
enter
adc
add
loop
and
cmp
call
mov
mov
mov
stos
push
cmpsl
adc
nop
out
mov
mov
add
sti
pop
mov
orl
fwait
mov
sti
inc
mov
add
jne
mov
mov
pop
mov
mov
xchg
pop
add
sbb
or
push
mov
jmp
xor
inc
sub
push
decb
mov
mov
xor
rclb
dec
arpl
shrl
sub
dec
cmpsl
test
test
loopne
sub
mov
pop
xchg
xor
sbb
sub
aam
outsl
mov
push
leave
dec
pop
xlat
mov
inc
decb
cltd
dec
outsl
mov
inc
and
jg
fidivrl
jl
pop
dec
cltd
icebp
jne
sub
int3
cltd
pop
xor
push
mov
cmpsl
or
xchg
add
pop
sub
adc
daa
push
fiaddl
loopne
jno
inc
add
inc
jno
or
push
popf
push
xor
loopne
jb
stos
mov
inc
sbb
mov
aaa
rep
stos
repz
cmp
cmp
out
rclb
inc
or
sub
stos
inc
pop
push
sti
cli
mov
dec
push
adc
push
rcrb
push
imul
pusha
adc
cmp
add
and
sub
test
push
sahf
pop
mov
and
ret
cmp
push
mov
roll
adc
into
pop
sbb
jne
icebp
out
pop
shl
and
roll
loope
test
aam
push
ret
dec
pop
push
leave
xchg
dec
rcr
loop
popf
cmp
test
jl
push
into
insb
mov
leave
jecxz
jl
int
lahf
fwait
in
or
xchg
cmp
pop
jb
das
adc
sub
lock
jns
push
roll
rclb
jo
js
push
mov
xchg
jo
fcom
xor
aad
inc
pop
rol
test
lock
inc
push
mov
jecxz
subl
gs
push
into
xchg
movsl
cmp
cmp
je
lcall
xor
dec
jecxz
inc
aad
sti
movsbl
add
flds
bound
push
jne
mov
hlt
inc
dec
jbe
jbe
xchg
pop
jns
push
xor
dec
fistps
aas
inc
aad
test
pop
push
and
fsubrp
rorl
loopew
fucomi
push
push
cmp
ds
jmp
mov
adc
inc
jne
jecxz
inc
jne
sbb
sti
iret
loope
xchg
xchg
outsl
testb
jge
stc
cmpsl
insb
js
pop
cmp
movsb
dec
push
mov
out
mov
dec
xlat
sbb
das
push
lahf
ljmp
popa
into
popf
add
ds
lods
stc
lods
dec
hlt
mov
add
xlat
push
adc
pushl
push
jbe
adc
out
or
aaa
push
mov
scas
aad
out
push
pop
sub
pop
push
lock
dec
aaa
test
push
mov
pop
mov
push
outsl
rcr
xor
popa
aad
push
and
pop
cmp
dec
ja
mov
dec
orb
pop
dec
jae
das
addr16
sbb
rcrl
and
adc
addb
out
sahf
push
popf
aad
mov
icebp
rcrl
ljmp
lret
lahf
inc
ficompl
imul
fistpl
push
into
sub
adc
xor
cmp
insl
addr16
sti
fcoms
xchg
scas
lcall
aad
xor
mov
push
push
imulb
or
push
scas
push
rorb
enter
incb
mov
enter
shl
ss
mov
mov
add
imul
in
jns
cmp
sbb
jmp
clc
cmpsl
and
xorb
sbb
sub
ljmp
loop
xor
mov
xchg
lahf
push
loope
jnp
sub
pop
ljmp
push
addr16
inc
mov
aam
pop
call
test
sbb
ret
jl
ret
xor
divb
lcall
fstps
std
jb
mov
aas
cltd
push
stc
lea
pop
xchg
sub
dec
xor
or
cmpsb
loopne
loope
and
inc
test
cmpl
cmp
xchg
ja
in
rcll
lods
icebp
dec
ret
mov
sti
data16
fwait
mul
cmp
pop
bound
outsb
imul
std
xchg
popa
mov
lods
lret
aaa
add
jae
pop
mov
pop
sbb
ljmp
add
arpl
call
insb
xchg
sub
jmp
xchg
setbe
mov
ja
in
mov
inc
xor
mov
dec
insl
sub
xchg
pop
inc
mov
cwtl
add
movsb
jp
sub
in
adc
enter
imul
push
jmp
popf
dec
dec
stc
inc
dec
popf
inc
mov
cmc
aad
pop
xchg
shlb
nop
hlt
or
cmpsl
mov
ja
cmp
sbb
inc
in
roll
test
cmp
pop
ja
into
mov
or
daa
xor
pop
xor
pushf
lods
jo
out
push
shll
enter
sbb
push
lret
pop
lret
test
cs
lods
mov
pop
popf
mov
jp
aad
pop
mov
cli
lret
xchg
movsl
in
bound
leave
mov
lods
stc
xor
cmp
mov
out
push
das
in
shrb
push
js
popa
je
mov
and
jae
out
xchg
dec
mov
rorb
icebp
push
add
jecxz
push
add
mov
daa
cs
inc
add
inc
push
insl
add
sbb
out
mov
rcll
shufps
clc
dec
and
sbb
cmc
adc
pop
enter
lock
jg
adc
gs
notb
mov
das
lock
sbb
xor
mov
xor
jmp
imul
mov
lods
dec
mov
or
mov
mov
sbb
fnsave
pushf
test
imul
mov
call
andl
push
in
arpl
push
ss
mov
imul
add
mov
lret
push
cmc
pop
mov
push
jnp
mov
add
lahf
mov
cmpsl
stos
pop
fcmovnb
dec
pop
iret
and
loope
js
pop
pop
sub
ljmp
xorl
xor
shll
int
popa
js
sbbl
mov
xorl
scas
xchg
mov
ja
mov
and
fs
add
nop
gs
stos
fisubs
or
movsl
cmpsl
adc
push
in
add
pop
lret
leave
out
pop
repnz
idivb
aad
add
movsb
mov
ds
lret
dec
jno
mov
outsl
lea
leave
cmp
ret
dec
mov
pop
loope
notb
inc
fidivrs
movsb
fisubl
xchg
mov
mov
xor
data16
or
int
dec
pop
mov
sbb
jne
aas
push
negb
inc
cmp
ja
and
xchg
icebp
shll
and
dec
popa
adc
or
outsl
dec
loopne
push
rclb
inc
mov
shr
aaa
inc
inc
xchg
pop
notl
xlat
pushf
adc
cmp
lock
jnp
pop
loopne
lock
mov
stos
or
pop
aas
dec
roll
push
mov
or
pop
out
jecxz
dec
mov
add
push
jnp
cmp
imul
pushf
dec
imulb
lds
out
mov
sub
imul
xor
add
rorb
push
pop
add
leave
out
movsb
add
aad
adc
pop
test
out
xor
push
js
or
sub
je
cmpsb
inc
lods
popf
cli
xorl
and
jg
or
repz
xchg
mov
adc
pop
dec
cltd
sub
outsl
cmpsl
orl
ds
or
sti
dec
add
and
sbbb
cmp
out
rcll
jno
xchg
mov
push
push
mov
out
aas
cmp
inc
mov
call
lahf
leave
pop
jns
inc
popa
xor
leave
outsb
xchg
sub
rcll
sti
mov
decl
cmp
and
mov
cld
les
jge
push
nop
fucomp
pushl
in
and
call
cmp
imull
pop
rcrl
test
mov
int3
xor
je
mov
pop
xor
pop
jbe
mov
add
mov
push
out
sbb
lahf
add
into
mov
xor
dec
push
mov
or
jl
dec
and
jg
jbe
add
movsb
push
adc
pop
and
mov
faddl
push
push
aaa
clc
jbe
out
inc
movsb
mov
sub
int3
jl
lods
sbb
mov
inc
mov
xchg
sub
cmp
std
mov
sbbl
pop
cmpsb
push
lods
call
test
testb
fsubr
mov
dec
ror
xchg
mov
xchg
pop
call
sbb
repnz
aaa
sbb
add
push
aaa
push
or
pop
inc
add
mov
adc
aad
dec
jle
push
addr16
xchg
shlb
mov
mov
and
sbb
xbegin
xchg
jg
in
dec
xorb
out
cmp
adc
or
push
call
mov
pusha
mov
push
lahf
jg
shrl
mov
stc
out
add
packuswb
out
jae
pop
nop
jo
insl
mov
push
rcll
outsb
cmp
sub
es
dec
or
jmp
jge
cmp
dec
shrl
cmpsb
bound
js
jmp
or
outsl
aas
push
cmp
int
fiadds
out
inc
in
sub
mov
out
scas
in
adc
xchg
dec
cmp
popa
push
add
lds
mov
mov
aam
jle
and
and
or
fwait
ret
mov
xchg
xchg
mov
hlt
mov
jae
mov
add
rcl
dec
fiaddl
mov
pushf
cwtl
or
or
test
pop
icebp
pop
xor
mov
repnz
jns
cltd
cwtl
shrl
inc
insl
lea
and
popa
mov
xor
cmp
cmp
and
mov
inc
stos
sahf
mov
and
sub
xchg
xchg
cmp
ds
adc
test
popf
adc
fldcw
aad
popf
out
jl
movsb
pop
pop
push
jbe
inc
xor
and
sahf
dec
mov
popa
mov
or
sub
sbb
lret
push
jecxz
pop
divl
or
jne
add
lea
stc
add
stos
jno
aaa
mov
pop
inc
cmp
jne
jo
jnp
xor
pop
jns
pop
popa
mov
mov
sub
push
cmp
aad
ja
or
mov
mov
xor
jae
adc
push
pop
adc
int3
repz
mov
in
mov
clc
cmp
fldl
mov
and
add
mov
pop
sar
nop
dec
jo
fists
popf
or
inc
rorb
scas
outsb
mov
sbb
dec
into
jle
into
xchg
xchg
mov
and
into
push
and
xchg
sbb
lahf
lahf
jge
dec
sarb
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
pushf
mov
jl
pop
pop
jl
insl
fstps
jl
pop
and
dec
fldl
jmp
pop
cs
out
loop
in
rclb
pop
stos
repnz
mov
lcall
lds
in
inc
mov
in
push
pop
ret
mov
pop
pop
dec
mov
fdivrs
push
imul
outsl
sub
pop
and
fcompl
jno
popa
adc
add
shrb
lods
xor
sbbb
xchg
dec
mov
scas
lcall
fbstp
inc
insl
jmp
fcomps
pop
mov
in
orb
xlat
dec
aaa
ds
rcl
rcll
add
inc
test
shrb
into
fldcw
in
ja
pop
inc
cmp
mov
dec
enter
mov
test
test
imul
dec
scas
mov
xchg
adc
pop
popa
js
push
shl
and
xor
pusha
sub
out
adc
cld
mov
push
dec
cmp
jno
in
into
cmpb
leave
arpl
cmc
out
lock
adc
push
cld
fbstp
lret
dec
xor
mov
mov
cmovs
mov
xchg
cmc
enter
or
mov
jmp
push
cs
push
test
popf
sbb
push
add
pop
mov
shlb
hlt
push
pop
idivb
jo
test
adc
mov
lods
push
pop
pop
daa
xor
fnstenv
jl
adc
cli
shl
lahf
or
dec
rorl
popa
mov
mov
sbb
mov
mov
or
loope
ss
xchg
cmpsb
sbb
adc
pop
cmp
ret
jp
mov
popl
mov
push
pop
cmp
sub
jbe
leave
sbb
xchg
orl
inc
into
jae
push
adc
xchg
pop
and
xor
jge
out
leavew
js
jae
sbbb
in
mov
subl
loop
push
lahf
jno
xor
in
inc
adc
push
mull
mull
mov
push
pop
les
xlat
xchg
sub
arpl
ss
sub
sar
sub
add
arpl
insl
in
or
add
cld
repz
mov
mov
movsl
xchg
mov
dec
orl
mov
mov
pop
lcall
inc
loopne
sbb
dec
mov
mov
inc
push
call
in
dec
jno
pop
fs
out
xorl
mov
scas
and
out
fs
dec
push
gs
stc
sbb
lcall
sbb
push
sahf
adc
ret
fs
sbb
fcomip
sbbl
lcall
mov
je
cmpb
hlt
xchg
pop
inc
ljmp
addl
cmp
into
xor
cli
jp
cmpsl
dec
fldenv
mov
push
cmp
in
mov
in
aam
sar
dec
imul
cmp
lcall
push
sub
outsl
mov
imul
xor
imul
xchg
scas
cmp
add
xchg
sub
gs
arpl
js
jg
or
cld
pusha
inc
xchg
jnp
jl
movsb
aaa
add
and
xchg
imul
push
test
outsb
ret
adc
and
movsl
outsb
mov
mov
xchg
leave
pop
xchg
ficomps
shrb
mov
shl
pop
int3
in
fnstcw
cmp
das
sbb
das
sbb
pop
xchg
jg
enter
jge
xchg
push
negl
add
into
in
jl
lret
ror
or
and
ja
adc
and
addr16
mov
clc
push
test
xchg
pop
mov
rorl
xchg
or
sbb
push
bound
mov
js
mov
mov
stos
cmp
cmp
test
xchg
push
jne
arpl
rcl
daa
mov
xor
adc
call
scas
cltd
fs
push
jp
or
cmpl
dec
cwtl
fldl
in
jo
pop
xchg
push
add
int3
mov
and
cltd
mov
or
add
stos
mov
cmc
and
lcall
loop
xorb
mov
orl
outsb
jbe
mov
loop
jbe
pop
fldt
aad
push
je
outsl
push
lds
inc
adc
daa
sbb
ret
aas
stos
outsb
movsb
mov
add
sub
adc
adc
test
pop
ror
jp
cmpps
mov
lret
lods
daa
adc
scas
iret
fisubrl
dec
jge
sarl
add
jmp
stc
mov
jle
or
pop
ret
dec
mov
shrl
dec
sub
or
jns
jae
cltd
dec
mov
sahf
push
ljmp
sbbl
mov
lret
push
insb
inc
sahf
int
shrb
addr16
iret
repz
jae
int
loop
mov
mov
sub
push
sub
xor
pop
gs
push
jmp
mov
insb
sub
pop
in
movsl
repnz
test
jbe
stos
sbb
lock
stos
test
mulb
mov
mov
leave
in
lea
or
jle
out
xchg
mov
inc
dec
pop
lahf
push
sub
jns
test
mov
add
cs
dec
sub
fwait
xor
adc
icebp
and
push
mov
adc
sub
and
pop
dec
repz
scas
push
std
pushf
lock
sbb
int
jo
negl
mov
jo
in
pushf
pop
lock
bound
lea
inc
add
cmp
ret
mul
fisubrs
mov
fists
out
mov
fcmove
and
pushf
aad
rorb
xchg
mov
js
cmp
stc
push
out
jge
adc
jmp
cwtl
imul
pop
outsl
fsts
sub
mov
cmp
sub
sub
adc
inc
int3
xchg
sbb
iret
mov
mov
cmpsb
insl
mov
lods
stos
data16
imul
sarl
clc
jne
jge
mov
subl
cmpsl
int
xor
clc
jl
xchg
enter
lea
adc
bound
stos
xor
je
outsb
and
mov
push
sbb
repnz
cld
daa
dec
cmp
cwtl
addl
jp
sbb
mov
fs
mov
fcmovbe
mov
mov
push
sbb
xchg
shlb
adc
sub
pop
mov
bnd
lret
xchg
arpl
jns
push
cli
popa
sub
xor
das
cltd
xchg
outsl
pop
fisttpll
sub
sub
fisttpl
and
and
xlat
rcll
in
adc
dec
push
jl
jl
sub
sahf
mov
jle
int
cmpsl
push
std
pop
xchg
xor
mov
push
test
push
add
scas
push
inc
lahf
fsubrl
xor
cmp
fld
mov
add
push
jno
mov
in
int
xchg
cld
sub
jae
outsl
lods
test
cmp
sub
xchg
inc
push
xchg
sub
cmp
and
push
dec
lahf
cld
jne
xor
sbb
enter
cs
push
mov
push
jmp
mov
sahf
clc
rolb
mov
jge
jns
shrb
iret
jg
dec
push
push
inc
mov
cltd
test
pop
sub
dec
loopne
or
add
sbb
ret
inc
cltd
jne
enter
divb
rolb
or
js
or
pushf
fldl
shlb
or
xor
fstps
pop
jp
subl
push
test
mov
push
div
mulb
enter
xlat
cmpb
push
sub
push
test
call
sbb
addl
jnp
sahf
stos
pushl
repz
aas
push
pop
xor
push
xchg
dec
addl
fiadds
pop
pop
adc
bound
or
adc
call
mov
shl
movsl
inc
nop
xor
inc
divb
cltd
loopne
xor
sbb
jno,pt
sbbb
bound
dec
dec
iret
ret
fdivr
dec
fstpl
test
xor
cld
mov
mov
xor
das
lds
sub
cmp
fadds
add
add
ret
jbe
lcall
movsl
test
fisttpl
push
and
outsl
push
cmp
cmp
push
inc
rcrb
int3
mov
xchg
adc
push
dec
int3
scas
rorb
and
xorl
xor
sbb
fdivrs
push
and
mov
movsb
jecxz
rolb
cld
add
hlt
pop
mov
and
xor
sbb
stc
adc
pushf
repz
call
cmp
mov
das
adc
fs
cld
jae
cmp
aaa
out
mov
push
push
add
loope
dec
dec
dec
or
gs
stos
aam
movsb
push
mov
jae
or
adc
cwtl
popa
aam
imul
mov
outsb
jmp
sahf
lret
jg
pop
sub
jl
mov
fnstsw
loopne
pusha
adc
in
jnp
jle
jp
dec
push
sbb
dec
out
rorb
test
or
cmpsl
shl
xchg
imul
dec
and
fwait
sub
fstps
ret
in
in
popa
mov
outsl
sub
mov
stos
clc
or
push
lret
std
xlat
dec
xchg
lret
push
adc
pop
sbb
ret
mov
mov
mov
inc
adc
lret
mov
add
pusha
jnp
pop
xchg
shlb
pushf
aas
clc
add
stos
adc
cwtl
test
push
sbb
push
cmp
hlt
sarb
imul
out
add
jo
xchg
pop
cmpl
in
jns
pop
es
fidivs
lods
inc
ljmp
outsb
cwtl
and
dec
push
dec
call
lret
mov
test
test
lret
and
mov
scas
mov
mov
icebp
in
add
mov
cmpsl
out
push
pop
cli
lea
sub
nop
dec
xor
stos
pcmpeqd
jns
push
rorl
inc
repz
aam
cmp
xor
jl
mov
int3
push
js
add
int
dec
or
push
mov
push
push
js
mov
pop
jl
inc
sub
add
lods
cmp
xor
add
add
inc
fiadds
add
lds
inc
mov
lods
cli
inc
xchg
mov
sbb
shlb
mov
mov
mov
dec
xlat
mov
pop
xchg
mov
dec
mov
push
pop
lock
aaa
test
xor
es
xor
cmpsl
jmp
subl
out
or
push
sbb
out
lret
stos
pop
sbb
insl
adc
xchg
test
sarb
std
repnz
mov
cmp
xorl
xchg
scas
mov
cmp
pop
cmc
enter
jge
les
jmp
jmp
in
fdivrl
inc
js
xchg
push
add
lahf
fcomps
inc
jl
aam
xchg
push
movsb
xchg
jnp
sbb
sbb
jecxz
fdivl
rcll
push
ss
mov
mov
sub
adcb
mov
andb
ret
outsl
cld
xor
call
dec
dec
pop
xchg
sbb
mov
mov
inc
or
clc
pop
xchg
rorl
push
push
xchg
adc
jg
ss
outsl
dec
mov
icebp
dec
jge
mov
pop
es
sbb
dec
mov
sub
jg
inc
iret
inc
cmp
icebp
mov
loop,pn
inc
adc
pushf
cli
and
cwtl
test
mov
or
rorb
clc
addr16
push
in
push
jbe
adc
ret
xchg
inc
or
stos
incb
shlb
lcall
fs
dec
negl
push
and
test
daa
mov
dec
cwtl
and
or
add
sub
or
imul
xlat
adc
int
mov
mov
mov
mov
aaa
gs
loop
dec
sbb
mov
into
in
fwait
shlb
lret
or
mov
sub
adc
xchg
adc
adc
or
jae
jle
mov
stos
popf
xlat
xchg
sub
and
push
jecxz
leave
sbb
adc
and
loop
inc
mov
adc
int3
add
and
ja
and
arpl
xchg
jecxz
inc
mov
ja
jns
popa
jo
in
cmp
push
cmc
lret
addr16
loopne
xchg
int3
mov
or
xchg
push
jae
jns
pop
dec
repnz
and
pop
add
push
sub
fs
mov
push
cs
inc
dec
ret
rol
ret
mov
into
imul
add
mov
xchg
xchg
lds
es
lods
push
loop
fcoms
add
xchg
jnp
mov
cmp
setb
fwait
adc
andb
mov
xor
or
xor
push
addb
gs
add
pop
mov
lods
sub
jg
js
pop
sbbb
sbb
xchg
fnstenv
adc
jge
ja
sbb
inc
xor
adc
mov
pop
fwait
jb
mov
inc
out
out
push
cmc
xchg
and
lcall
dec
mov
and
imul
xchg
mov
iret
adc
jne
loope
inc
lcall
jnp
push
inc
outsb
mov
ss
mov
shrl
hlt
pop
sar
pop
or
scas
ljmp
dec
xchg
inc
sbb
dec
bnd
gs
push
push
sahf
mov
adc
inc
pop
and
shrl
mov
test
mov
mov
ljmp
mov
pop
movsl
sbb
xchg
movsb
dec
call
cmp
mov
or
xchg
insb
iret
in
pop
mov
fisttpll
xchg
mov
inc
sub
xlat
jae
pop
push
fnstsw
xor
ljmp
adc
outsl
test
mov
std
scas
inc
jnp
add
xchg
pop
inc
addb
and
add
es
aad
add
stos
mov
add
sti
mov
outsb
fdivrl
dec
cli
mov
pop
in
jo
gs
cmp
jb
sbb
xor
popf
lahf
addr16
lods
cmc
aaa
mov
cli
shrl
add
dec
ljmp
cli
data16
mov
dec
pop
mov
ret
adc
and
push
xchg
dec
xchg
xchg
xchg
pop
shlb
mov
stos
fimuls
cmp
jl
dec
insb
into
dec
lcall
test
adc
jno
cwtl
mov
jge
and
pop
hlt
xchg
cmp
dec
adc
xor
cmpsb
filds
mov
cs
mov
stc
loop
jbe
imul
scas
pop
add
or
pop
sbb
pop
xchg
and
xchg
push
scas
cmp
popa
cmp
test
and
dec
or
xchg
repz
sti
mov
das
fstl
mov
iret
xchg
cwtl
jne
shll
pop
sub
cwtl
push
dec
bound
push
imul
cmc
or
sarb
mov
cmpb
stos
push
clc
dec
sub
cwtl
add
xor
rorb
sub
out
test
mov
push
mov
lahf
mov
xchg
pop
add
popa
jmp
cmp
cmp
ja,pt
push
xchg
pop
rcll
test
insb
xchg
std
mov
push
mov
mov
mov
mov
sbbl
mov
jb
popa
test
cmp
pop
test
sub
xchg
pop
fincstp
or
cs
leave
roll
lds
xor
jns
daa
push
and
xchg
xchg
out
cmp
fcomi
into
sbb
outsb
scas
daa
incb
int3
mov
ret
aaa
ss
add
xor
ja
cmp
pop
je
in
push
out
rcrb
mov
rcll
mov
mov
fsubl
cwtl
ljmp
sub
xchg
push
push
push
rorb
nop
jne
sbb
xor
in
adc
pop
and
dec
test
ljmp
movsl
jp
sub
ds
addb
pop
cltd
jecxz
and
cmp
js
mov
das
in
fs
jo
bound
adc
gs
pushf
and
jg
jns
mov
sub
aas
sub
add
stos
and
inc
dec
sub
in
inc
inc
inc
test
movsl
lret
pop
stos
std
dec
call
gs
cmp
subb
iret
lahf
sbb
fs
fdivs
and
dec
sbb
dec
stc
popf
push
mov
rcrl
xchg
push
lea
sub
push
sbb
xor
ljmpw
testl
mov
xchg
fiaddl
subl
lea
jecxz
cld
fstps
jecxz
testl
lcall
sub
jnp
and
loop
cmp
push
jle
les
loop
es
xor
and
fmuls
sbb
adc
pop
std
jo
xor
add
dec
gs
and
lahf
mov
dec
test
xchg
sub
or
aam
inc
imul
cmp
in
scas
mov
aas
jno
mov
aam
shll
iret
mov
xchg
jns
mov
das
lds
fcomps
mov
add
add
enter
lea
add
rorl
cmpsb
pop
aam
jg
push
cli
lret
adc
fidivrl
in
inc
cwtl
es
mov
add
js
mov
rdpmc
test
cs
clc
scas
sbb
mov
cmp
pop
mov
fbstp
add
leave
pop
mov
and
xor
sbb
movsb
xchg
inc
in
adc
adc
arpl
fnstcw
xchg
aam
or
outsl
test
and
cmpsb
inc
cmp
dec
push
jge
ljmp
fnstenv
icebp
and
insl
mov
xchg
pop
mov
stos
push
and
cltd
lcall
shlb
mov
iret
cmp
mov
or
dec
das
xchg
dec
inc
out
jne
xor
mov
push
dec
insb
dec
push
dec
xchg
adc
xchg
pop
in
adc
icebp
hlt
sub
sbb
mov
inc
push
or
daa
ret
pop
cmpsl
xchg
add
mov
sbb
mov
test
dec
int
nop
cmp
lods
scas
test
loopne
sub
push
mov
xlat
xchg
lea
pop
leave
push
pop
lods
fneni(8087
pop
adc
leave
cltd
cwtl
loope
and
popf
fwait
jle
and
loope
mov
jno
and
mov
adc
arpl
bound
frstor
fisttps
repz
scas
sub
ret
cltd
enter
sub
add
loopne
push
and
mov
sub
xor
std
icebp
insb
mov
shlb
xchg
xchg
pusha
pop
or
inc
dec
aam
xchg
jecxz
jp
and
out
xchg
es
xchg
ffreep
mov
push
icebp
repnz
and
xchg
shlb
test
cmpsb
negb
inc
push
scas
lret
std
out
xchg
or
jb
push
push
cmc
mov
mov
xor
dec
sub
shlb
mov
repz
jne
push
movsb
popf
fstl
and
test
xor
push
imulb
jb
pop
pop
in
jb
cmp
cmpxchg
mov
cli
mov
cld
roll
jecxz
cmp
pop
adc
cmp
dec
inc
daa
fwait
shll
and
mov
fs
pop
pop
daa
adc
sub
ljmp
mov
aad
gs
jge
and
cmp
jge
icebp
imul
inc
xor
sbb
repnz
mov
push
lds
ja
mov
dec
push
in
pop
jne
ljmp
sbb
inc
cwtl
imul
popf
xchg
jae
or
inc
sbb
in
push
aad
jp
jnp
jge
cli
shlb
adc
push
lock
jbe
inc
sti
and
in
mov
jl
fcomps
adc
push
pop
xor
daa
fdivrl
sbb
test
stos
aad
sub
xchg
mov
and
nop
xor
cltd
outsb
xlat
test
xor
jl
mov
fsubrs
out
mov
mov
cmp
dec
sub
dec
imul
incb
enter
sbb
adc
scas
shlb
push
sub
ss
lret
sbb
inc
push
mov
xchg
data16
out
mov
cmp
xchg
ret
sti
dec
or
add
xchg
icebp
inc
imul
cltd
xor
cmc
xchg
iret
outsb
or
pop
je
xchg
stos
inc
mov
push
imul
mov
fists
into
das
scas
and
or
jp
ss
icebp
pop
pop
mov
shll
and
xlat
imul
push
mov
add
mov
lds
sbb
ljmp
mov
add
ret
lahf
adc
fisttps
rolb
pop
sar
mov
ret
push
cmp
repz
sub
jmp
jmp
push
shlb
mov
aaa
nop
xor
clc
cmc
test
in
bound
lcall
jnp
sub
into
mov
shr
aas
into
mov
jbe
xor
imul
je
pop
xchg
and
mov
mov
add
lods
inc
mov
xor
xor
or
inc
test
ljmp
cmp
mov
adc
pop
mov
cmpb
mov
lds
push
ss
inc
sti
sub
push
adc
daa
or
bnd
and
or
test
jecxz
repnz
int
add
ja
pop
in
cmp
pop
jmp
cwtl
mov
incb
push
nop
dec
rorb
inc
dec
test
leave
test
lods
mov
loopne
test
ror
test
pop
cli
andb
ljmp
cmp
and
sub
xlat
cmpsb
test
dec
xlat
int3
sub
mov
xor
adc
out
add
lret
dec
pop
adc
xor
xlat
mov
and
iret
mov
lock
xchg
jae
xchg
ljmp
out
aas
lods
push
sub
add
icebp
jbe
shrl
or
xor
push
das
rorb
ret
push
mov
lock
sub
or
std
add
push
fisubrl
int3
and
out
mov
push
mov
mov
daa
mov
js
gs
jg
sbb
xor
mov
jo
lds
mov
pop
push
pusha
push
or
mov
mov
out
gs
pushf
pop
adc
data16
pop
lcall
out
pop
out
xor
lcall
sub
cld
xlat
std
cwtl
inc
sbb
cmp
popl
ljmp
xchg
jns
jns
sub
push
inc
adc
mov
call
adc
add
arpl
sahf
bound
sbb
sub
and
mov
bound
or
or
mull
jne
daa
addr16
cmp
xor
xor
inc
fstl
test
mul
pusha
test
fimull
sbb
test
and
outsl
xor
iret
sub
lds
in
xchg
dec
inc
out
clc
pop
jae
dec
sbb
movsl
adc
leave
fsubr
ljmp
fldenv
clc
cmp
sub
jle
aam
imul
sbb
push
push
dec
mov
inc
dec
popf
adc
mov
stos
jl
adc
clc
sbb
xor
add
pushf
xchg
sti
push
pop
push
lock
lds
mov
les
shll
push
inc
sbb
loopew
popf
pop
scas
cmpsb
mov
xor
punpckldq
dec
fs
roll
sub
ds
int3
fimull
frstor
or
xchg
leave
push
ljmp
and
movsl
mov
aas
mov
fnstenv
xor
dec
fnsave
dec
inc
push
js
mov
dec
sub
pop
inc
cmp
scas
into
out
pop
push
pop
xorl
cld
adc
popa
mov
cmp
mov
out
jb
mov
dec
mov
push
jae
repz
pop
sahf
mov
mov
lahf
cmp
in
insl
repnz
dec
mov
pop
pop
call
xor
mov
popl
int
aas
push
or
adc
pop
loopne
loop
pop
out
jnp
scas
repnz
ret
sbb
push
inc
cmp
push
daa
or
mov
sbb
test
mov
sbbb
js
and
or
test
sbb
mov
popa
adc
xor
rcr
inc
jne,pt
and
aam
or
sub
cmp
xor
insl
nop
cmpsl
repz
jns
pusha
xorb
add
das
push
cmpsl
and
sub
addb
data16
test
xor
or
imul
test
sbb
aaa
ret
imul
pop
pop
test
sbb
mov
push
nop
push
js
enter
xchg
out
xchg
cmp
jle
rcr
ljmp
sar
push
test
loope
fs
pop
pushf
sub
insl
enter
std
mov
cld
arpl
sahf
or
jecxz
adc
inc
add
fwait
push
popa
fisubrl
jp
xlat
rorb
in
cmpsl
sub
fsubrs
inc
xor
stc
addl
add
xlat
in
fmull
and
aaa
jno
lcall
mov
add
test
push
popf
sbb
inc
movsb
ja
jp
int
mov
push
push
jb
xor
pop
mov
add
ds
out
push
popa
cmpsb
adc
scas
daa
in
pop
sbb
loope
mov
pop
repz
inc
dec
adcb
popa
fidivrs
mov
jno
pop
rorb
push
stc
sub
daa
mov
and
or
jp
and
xor
stos
aaa
xchg
repz
outsl
add
mov
lds
cmp
imul
xchg
bound
pushf
rcrl
add
mov
pop
push
mov
xchg
ljmp
xchg
add
int
pop
or
push
mov
xor
aas
stos
pushf
cmpsl
or
test
gs
lods
sub
dec
pop
fmul
and
push
cmpsl
adc
jo
leave
ljmp
jg
jp
loop
cmp
add
cmc
or
ds
test
int3
dec
fdivrl
jg
adc
and
shrl
loopne
leave
stos
stos
shlb
je
das
push
aam
push
xlat
mov
inc
xchg
fs
mov
cld
mov
jnp
push
inc
xchg
loopne
stos
stos
add
xchg
xor
jo
xor
mov
addl
testb
xor
insl
ds
addr16
pop
or
decl
pop
insb
xor
mov
les
inc
ret
cmp
cmp
mov
clc
je
bound
testl
hlt
mov
xor
fcmovnbe
stos
mov
insl
cmp
jae
ds
push
mov
cmpsb
in
cmp
sti
pop
cmp
sbb
cli
mov
ss
jo
xchg
into
in
icebp
bound
mov
cmp
mov
inc
into
xlat
add
outsb
sbb
mov
scas
jbe
xchg
xchg
decb
lds
lret
adc
mov
jecxz
test
mov
push
leave
loop
mov
bound
push
loope
das
fdivs
sub
adc
shll
repz
cmpsb
scas
insl
dec
pop
jnp
jl
add
mov
jmp
out
stc
popf
mov
mov
mov
insb
lods
mov
test
or
push
lods
push
sub
loopne
xor
and
mov
jmp
dec
cmp
jo
adc
lret
sti
leave
push
cmp
mov
jmp
pop
add
add
lret
adc
test
lret
shrb
dec
bound
iret
cli
pop
mov
fisubrs
cwtl
std
test
inc
pop
inc
fwait
add
ret
xchg
lret
cmpsl
fstpt
lahf
jmp
jge
push
out
inc
repnz
pushf
push
xchg
sub
in
scas
cli
mov
xchg
or
aas
xchg
sbb
outsb
ja
orb
cld
stc
jmp
jle
fld1
dec
out
mov
movsb
cmp
xor
dec
and
imulb
pop
fidivl
in
adc
jmp
dec
sub
cmp
divl
sub
cmc
inc
adc
pushf
test
dec
in
or
test
mov
jns
clc
jle
mov
mov
adc
adc
shll
movsl
cltd
scas
dec
inc
popf
mov
gs
pop
jmp
inc
or
push
cs
push
sbb
jo
push
xor
sahf
sbb
outsl
fldt
loope
mov
jns
enter
xchg
mov
fisubs
adc
inc
jecxz
xchg
fcmovnbe
sbb
xchg
pop
pushf
mov
scas
nop
xor
das
scas
xor
xchg
xchg
sahf
sahf
sbb
jl
add
cmp
arpl
jne
inc
xchg
xchg
gs
sbb
lahf
mov
jle
push
inc
and
ret
arpl
mov
lock
mov
pop
sarl
push
inc
mov
sti
les
xchg
loope
dec
lret
jg
mov
sub
ds
das
test
sub
push
sub
enter
jle
mov
sbb
add
jl
add
clc
fs
leave
push
mov
fsubrs
les
push
or
fsincos
push
mov
fisubs
push
outsl
stos
in
add
push
aas
mov
or
xchg
aas
jnp
jno,pn
pop
mov
pushf
mov
orl
pop
popa
lret
mov
push
fsubrs
clc
xor
inc
sbb
sbb
xchg
sbb
xor
or
sbb
cltd
sub
jmp
test
sub
sbb
aad
in
je
imul
mov
fildl
icebp
not
ret
sahf
iret
xor
or
ret
lcall
xchg
pop
dec
fnstcw
mov
in
iret
pop
sti
pushfw
inc
push
lret
mov
or
imul
pop
stos
mov
xchg
xor
das
out
pextrw
mov
push
sub
pushf
inc
movsl
pop
hlt
loop
and
ja
push
and
pop
cli
pop
sub
cmp
mov
inc
add
mov
add
dec
xchg
out
cltd
or
pusha
and
in
pop
incl
lock
icebp
fdivrs
aas
inc
out
push
push
fsubs
aad
clc
pop
test
mov
out
nop
sar
lods
add
fcmovu
inc
sti
andb
pop
lcall
mov
jnp
idivl
scas
push
inc
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
imul
jg
push
scas
xchg
sbb
pop
std
std
insb
mov
cltd
aad
and
pop
adc
aam
xchg
fsubr
movsl
insl
lock
dec
loopne
sub
xchg
pop
lahf
sub
popa
dec
xchg
mov
xor
or
push
in
imul
mov
divl
sub
ljmp
ror
ret
pop
sub
scas
add
sub
fisttps
pusha
gs
mov
scas
xchg
les
outsl
loopne
fwait
pushf
push
gs
cmp
lea
jl
inc
push
mov
cmp
xorl
outsb
enter
xor
andl
lods
xchg
jae
hlt
sub
and
jno
sbb
sbb
or
push
lahf
fisttpl
leave
pop
pusha
adc
in
mov
pusha
cmpsb
ds
cmc
ret
pusha
sbb
leave
xchg
add
inc
cmp
mov
es
in
iret
bnd
inc
icebp
daa
sub
mov
sbb
out
mov
jo
jle
mov
sbb
xor
jne
adc
out
sbb
dec
xor
cmp
into
push
gs
outsl
jbe
int
cmp
sub
pop
bnd
out
stos
adc
in
jae
addr16
jg
cmpb
mov
push
fs
mov
insl
sbb
in
into
lea
jmp
jmp
xor
or
mov
aad
je
data16
push
mov
xorb
dec
das
lods
movsl
in
mov
adc
std
subl
fldt
shrb
jne
scas
pop
out
cld
call
sbb
in
mov
xor
sub
rclb
movsb
push
fildll
fcompl
mov
dec
es
or
stos
or
or
cmp
sub
add
mov
ret
xchg
popf
push
inc
pop
push
dec
xor
ljmp
dec
dec
shl
adc
and
pop
pop
push
inc
call
push
xor
pusha
in
jns
popa
cwtl
dec
jbe
dec
nop
test
aad
xchg
sub
aas
inc
out
adc
cltd
rcll
lds
cmp
out
fisubrs
pop
sbb
xchg
push
mov
repnz
add
jo
scas
jmp
stos
int
dec
ljmp
or
loope
sbb
cmp
mov
aaa
xchg
mov
cld
ret
jno
jns
loopne
lods
add
cmp
cltd
mov
loop
dec
nop
inc
icebp
popa
rolb
ss
xchg
mov
lret
cwtl
or
out
clc
popa
sbb
cmp
adc
inc
xchg
fs
add
sub
pop
or
pop
lea
xchg
push
daa
movsb
jg
cmpsb
je
test
cmp
loope
push
ds
fsts
dec
shll
in
xchg
out
mov
jp
lahf
mov
cmp
ret
dec
arpl
and
incl
mov
xor
or
mov
out
loope
xor
addr16
adc
scas
dec
dec
mov
int
lret
popa
jge
mov
jl
sub
dec
out
adcb
and
mov
xchg
dec
adc
imul
jp
lea
or
pop
cld
inc
fdivrl
mov
inc
icebp
lds
push
int3
xchg
out
imul
mov
or
divl
push
jae
push
jge
nop
jge
inc
adc
stos
movsb
je
pop
int
repnz
cmova
xorb
fwait
and
pushf
outsl
push
lahf
push
mov
adc
jne
pop
dec
pop
mov
subl
in
ja
mov
aas
pop
jno
jecxz
jns
in
icebp
pop
mov
pop
cwtl
and
xor
ret
aam
jp
lea
int3
es
lret
push
push
push
mov
jg
bound
sub
rcrl
cmpsb
jle
xorl
imul
pop
in
xor
add
add
imul
ss
aaa
mov
cmp
sub
mov
lods
adc
int
popf
idivl
inc
pop
sub
inc
out
sub
sbb
or
lea
insl
sbb
shrl
shrl
cmc
mov
loopne
xchg
ficomps
xchg
sbb
icebp
imul
lock
je
addr16
mov
movsb
mov
xchg
add
xchg
sbb
nop
dec
adc
adc
push
inc
adc
incb
mov
xor
aad
ret
push
lret
std
pushf
dec
outsb
nop
icebp
fmuls
sub
inc
out
pop
ljmp
lock
mov
sbb
jb
jne
sub
shlb
xor
outsl
sbb
cmc
adc
pushf
jl
aas
std
xchg
mov
dec
sub
incl
xchg
clc
loopne
sbb
mov
sub
jb
push
push
pop
test
aam
popa
xchg
cmp
xlat
adc
jbe
and
add
sti
inc
and
cld
xchg
rorb
fldcw
add
push
cmpl
aad
les
mov
xchg
enter
pushf
inc
or
insb
pop
das
add
push
mov
jecxz
pop
jge
xor
ljmp
ret
sub
jle
cmpsl
ds
dec
ds
call
push
dec
and
enter
in
dec
inc
es
xor
sbb
pop
ljmp
jnp
test
jns
mov
pop
xorb
sti
aaa
sarb
dec
shlb
pop
shll
js
bound
das
mov
push
mov
pushw
lahf
adc
popf
aas
cmp
mov
sbb
jp
mov
xchg
mov
push
pop
gs
cmp
push
int
mov
adc
fisubrl
mov
fisttpll
xor
into
pop
pop
test
mov
stos
cmp
fucom
jge
outsb
dec
cld
sub
into
cmp
roll
jo
insl
pusha
add
jp
push
imul
jbe
fdivrp
pusha
cmp
sub
xchg
jae
adc
imul
stos
and
sbb
sub
adc
pop
xor
ret
ja
bound
adc
xchg
jb
aas
mov
inc
sbb
call
jle
aad
push
add
paddb
mull
push
arpl
xlat
sahf
dec
add
aas
arpl
mov
mov
push
xchg
les
dec
sub
jb
mov
es
jecxz
add
cmp
call
mull
aad
ljmp
sahf
sub
lret
xlat
pusha
xchg
sti
enter
cltd
call
aad
addl
in
bound
je
pop
cmp
shlb
daa
aam
mov
pop
ljmp
or
adc
mov
std
sahf
in
push
xchg
ret
dec
out
sub
mov
add
cld
push
decb
mov
lahf
es
rcrb
inc
cs
ret
imull
add
sbb
adc
shll
or
rorl
andb
fdivrs
test
cmp
adc
add
ds
add
mov
pop
xchg
sti
jno
outsl
fs
shl
repz
jmp
cmp
mov
orl
and
aaa
lcall
addr16
pop
push
and
mov
fsts
rcl
mov
xor
pushf
fucomp
cmp
je
jl
mov
mov
inc
mov
mov
ret
stc
je
sub
xor
mov
inc
xor
mov
add
out
cld
or
jg
data16
fcmovne
ficomps
cs
jns
fdivrp
xlat
cmpsl
push
dec
jnp
loope
lcall
or
xorb
ret
sbb
mov
or
xor
popf
int3
xor
mov
gs
xchg
jl
sub
sbb
je
jnp
fdivs
out
test
jecxz
push
test
stos
fdivrs
int3
cmp
lea
aam
add
nop
xor
orb
jp
test
fwait
cld
in
ss
sti
out
sbb
addr16
xchg
jl
push
xchg
int
dec
mov
mov
nop
ret
jg
sub
mov
in
adc
insb
cwtl
jo
mov
add
and
mov
cltd
jle
movsl
sti
loop
aas
xor
inc
jge
inc
jnp
imul
xchg
loope
nop
loopne
movsbl
sub
mov
repz
jnp
scas
xchg
enter
bsf
jb
sbb
push
pop
cld
push
jae
pop
mov
rorl
mov
or
push
push
mov
in
jl
repz
push
sbb
sti
pop
lcall
mov
addb
or
aad
pop
scas
into
rcrl
xchg
fisttpll
inc
cwtl
push
int3
hlt
push
inc
push
mov
rcrb
sbb
leave
popw
mov
dec
out
add
mov
mov
lods
jle
adc
repz
jle
and
dec
ret
adc
sbb
jo
add
inc
adc
pop
lods
inc
gs
mov
sbb
xlat
iret
movsl
mov
cmpsb
push
cmpsl
mov
icebp
repz
xchg
pop
xor
cmp
int3
je
std
cmp
nop
mov
shrl
mov
addb
cmc
lods
sbb
cmp
lods
lret
add
and
std
sarl
mov
mov
test
mov
xor
adc
hlt
notb
xchg
mov
mov
cltd
mov
and
inc
jge
in
jg
mov
or
push
sub
adc
cmpw
inc
inc
movsb
jecxz
lea
scas
pop
outsl
mov
add
sbb
add
xorb
cmp
push
or
in
inc
xor
cmp
in
pop
sahf
push
ds
mov
in
push
push
sbb
test
ds
inc
jb
mov
scas
popa
xchg
xchg
ret
fadd
pop
ljmp
sub
inc
cmp
lds
xchg
push
insl
mov
in
nop
ss
or
sti
mull
shlb
out
cmp
aam
pop
xchg
aaa
stos
cld
sub
xchg
jae
adc
cmpsb
push
and
push
divl
stos
or
fstpt
mov
inc
inc
data16
push
repz
sarb
jg
mov
sbb
cs
adc
movsl
fistpl
inc
and
lahf
push
mov
or
inc
adc
mov
or
xchg
mov
mov
popf
iret
test
pusha
test
jg
push
les
push
jb
das
mov
das
mov
out
lea
in
lret
mov
outsl
into
mov
pop
cmp
cltd
xor
sub
add
daa
int3
push
inc
mov
mov
jb
adc
iret
adc
or
cmc
and
scas
movsl
ljmp
cmp
pcmpgtb
cltd
sahf
add
inc
gs
or
insb
cld
mov
hlt
das
out
lock
xor
push
out
jb
rcl
out
les
push
sbb
xor
push
ja
dec
xor
mov
cmp
add
xlat
imull
lods
ja
adc
or
addr16
daa
xor
js
fmuls
iret
jno
dec
xchg
jb
inc
lahf
bound
filds
dec
inc
mov
dec
mov
aaa
push
loopne
push
adc
clc
hlt
push
cltd
mov
push
push
sahf
ds
cmpsb
cmpsl
xchg
push
repnz
pushf
test
dec
cmp
sti
dec
in
sbb
cld
dec
pop
xlat
out
xchg
pop
mov
dec
adc
in
pop
mov
jae
shlb
adc
movsb
xchg
adc
cwtl
repnz
in
and
jecxz
xorb
push
movb
call
std
fwait
xlat
aas
lods
add
dec
xchg
and
cmc
pop
lahf
xchg
frstpm(287
adc
sub
push
mov
pop
stos
mov
data16
mov
je
test
ljmp
inc
push
popa
fdivl
jg
inc
adc
jge
dec
sbb
push
insb
in
leave
repz
xor
mov
insl
movsb
xor
adc
ja
jne
stos
sub
stos
adc
daa
nop
cmp
int
sub
test
push
popa
xor
loopne
or
sub
pop
ficoml
jbe
ds
cmp
and
jne
pop
shr
push
fs
adc
xor
aam
xor
cli
cmp
jbe
jae
sahf
mov
dec
test
adc
and
mov
cmp
or
vcmpsd
fcoml
ret
lea
fcmovb
sub
cmp
mov
xchg
and
dec
pop
fcomps
mov
fwait
adc
mov
hlt
je
add
call
cmp
push
pushf
imul
lock
fidivs
pop
shrb
aam
cmp
sub
push
sub
imul
dec
push
jmp
adc
inc
add
subb
pushf
xchg
scas
lahf
mov
ret
test
adc
mov
test
mov
fwait
add
aad
js
push
xor
fcmovnbe
clc
and
dec
mov
pop
push
pop
les
dec
into
dec
mov
xchg
jp
enter
push
clc
sbb
bsf
arpl
cmp
jae
movl
lret
daa
inc
mov
xchg
sti
cmp
rorl
push
loopne
or
int
rcrb
divb
test
enter
pop
add
mov
xor
jnp
fimull
imul
ljmp
mov
out
or
mov
fwait
inc
push
lcall
mov
add
scas
jle
test
xchg
pop
leave
das
hlt
cwtl
fimull
out
xchg
inc
adc
cs
das
test
or
inc
and
xor
or
in
sub
add
call
cwtl
pop
mov
xor
cmp
or
outsl
inc
in
cmp
inc
push
dec
int
adc
lods
mov
jbe
pop
mov
mov
sub
sub
jbe
fwait
pop
add
aaa
sti
fiadds
movsl
fldenv
imul
aaa
insl
adc
dec
mov
adc
lods
test
push
xor
jo
lds
push
and
adc
int
mov
mov
pop
lahf
dec
dec
xor
stos
scas
insl
dec
in
mov
mov
fs
mov
push
or
lock
icebp
cld
inc
insb
mov
jp
lret
mov
lea
lret
or
add
shlb
jmp
xchg
test
aaa
movl
int3
shr
pop
jbe
out
pop
xor
and
outsb
cmp
push
push
test
ror
jnp
xchg
xchg
xchg
dec
divl
mov
stos
inc
jle
aas
int3
mov
dec
aad
pop
test
push
imul
dec
mov
mov
push
lret
push
mov
pop
cwtl
sbb
lcall
and
pop
test
or
and
and
push
push
cmp
ret
imulb
and
out
jp
imul
divl
and
ret
scas
xchg
add
jmp
int3
stos
pop
repnz
cmp
inc
xchg
xchg
and
mov
cmc
pop
lea
cmp
mov
fcoml
testb
stos
or
push
gs
daa
pushf
jno
daa
popf
cmp
xor
and
imul
lea
xchg
aam
testl
jmp
adc
loope
jge
ss
outsb
cld
cmp
mov
lds
dec
push
fwait
bound
das
out
inc
dec
jmp
mov
and
sti
mov
inc
in
push
cltd
lock
cmpsb
mov
dec
pxor
scas
arpl
adc
pop
push
sub
movsb
pop
sub
sub
fadds
push
xchg
int
popf
sbb
mov
shll
or
push
jbe
push
arpl
incb
xchg
cmp
outsl
inc
xchg
cmp
mov
in
jge
in
jp
shrb
les
mov
mov
icebp
cli
repz
jae
mov
mov
lcall
add
add
lea
in
mull
push
inc
shl
adc
inc
cmpsl
inc
cwtl
iret
int3
jne
or
jecxz
shl
push
insb
out
and
mov
push
jbe
inc
mov
pop
dec
dec
cmc
mov
push
cwtl
sbb
dec
xor
push
mov
add
movsl
or
or
insb
shl
sbb
inc
and
daa
xchg
mov
and
cmp
ja
mov
or
in
xor
cli
daa
add
loop
jge
cld
pop
cmpsl
scas
daa
out
xchg
fxtract
clc
pushf
jae
jnp
fmul
xchg
sub
test
adc
or
push
inc
das
adc
addr16
sti
or
prefetchw
or
push
xchg
sbb
dec
fs
arpl
ficomps
jns
scas
mov
xor
movsb
rcl
mov
andb
mov
sub
aas
insb
push
dec
mov
outsb
aas
push
enter
scas
push
pop
push
pop
cmpsl
jl
dec
adc
jne
int3
outsl
filds
out
sub
popa
add
xor
and
cmp
aas
test
jno,pt
pop
out
jl
xor
jo
jp
xchg
push
cmpsb
scas
in
pop
push
push
in
cmc
jg
xor
and
cmc
cwtl
in
ds
jno
std
scas
out
push
mov
cltd
mov
in
daa
inc
xchg
lret
pushf
pop
iret
xchg
std
cmp
in
push
mov
lea
push
mov
lds
pusha
mov
cmc
pop
xor
dec
shrb
push
idivl
xlat
mov
fimull
cmp
flds
mov
sbb
js
push
cmp
call
ds
mov
addr16
fs
pushf
jle
fwait
int3
xor
pop
pusha
mov
lret
add
cmp
mov
add
outsl
push
pop
mov
mov
mov
in
jp
adc
cs
cmp
sub
out
and
adc
xor
inc
adc
mov
push
jmp
jb
and
pop
push
sbb
test
sub
mov
loop
lret
fcoml
mov
cmp
rcr
or
sbb
lret
sbb
mov
jmp
jb
xor
pop
je
stc
cmpb
xor
lahf
mov
test
inc
andb
push
cmp
lock
adc
jae
pop
push
dec
mov
fwait
cmp
xchg
push
sbb
gs
mov
jo
mov
jp
lock
xor
int3
sbb
mov
lods
hlt
add
out
jecxz
jle
jl
ja
loopne
or
jb
push
and
cmp
js
iret
aaa
in
mov
mov
aas
pop
fnstcw
adc
inc
push
cmp
inc
sti
lea
je
stc
inc
leave
lea
adc
adc
mov
dec
mov
lods
or
dec
repnz
mov
jecxz
iret
pop
cltd
pop
jg
testl
scas
add
jg
mov
pop
inc
pop
jmp
push
fdivr
sub
mov
jle
jns
push
push
les
orb
scas
sahf
insb
bound
sbb
es
mov
inc
loop
int3
inc
and
cld
and
sub
stos
les
mov
imul
pop
loopne
jns
lods
pop
jmp
out
add
xchg
int3
test
push
test
cs
fists
pop
and
pop
push
fs
int3
ja
into
notb
cmp
aam
test
add
hlt
out
mov
pop
ljmp
push
sbb
jge
inc
int
xlat
xor
shll
and
xorb
addr16
and
lods
xchg
inc
std
mov
enter
jl
ja
xor
mov
xor
loopne
adc
movsb
jnp
cltd
xchg
lahf
andl
add
pop
pop
mov
jg
and
popf
popf
cmp
add
sub
insb
iret
sbb
pop
outsb
addb
add
cmc
movsb
mov
aad
inc
sbb
arpl
pushf
sub
pusha
or
mov
nop
cltd
ss
jo
mov
adc
adc
mov
xchg
pop
sub
aam
mov
jmp
lods
lret
dec
fsubp
or
jl
mov
xor
das
xchg
adcl
cmp
pusha
jb
mov
cmp
cmpb
ds
lods
int
out
ja
xor
mov
popf
inc
inc
jno
lds
lea
scas
mov
xor
mov
popa
cltd
outsl
pop
add
and
mov
fnsave
inc
or
or
sar
push
ret
cmp
adc
pushf
sub
mov
mov
and
xchg
aas
stos
cmp
ja
jle
xorb
jo
fisttpll
adc
stos
or
inc
stos
xchg
adc
in
insl
pop
stos
test
stos
inc
inc
xchg
dec
scas
repnz
repz
sub
cli
sub
inc
in
dec
aaa
test
add
sti
lret
daa
sub
mov
sbb
cmp
jl
data16
aam
cmpsl
push
sbb
mov
jg
pushf
cmp
insl
xchg
data16
push
leave
mov
pusha
in
push
mov
sar
lcall
push
mov
dec
rcrl
inc
jle
aas
mov
ja
mov
test
push
insb
xor
sub
cmp
xlat
pop
mov
leave
out
xor
or
pop
pop
mov
gs
cmp
push
push
sbb
stos
popa
adc
adc
aaa
xchg
pop
sti
pusha
or
not
pop
ret
lea
xchg
sbb
aaa
pop
dec
aad
xchg
xchg
sahf
inc
sbb
pop
adc
pusha
mov
lret
fidivs
scas
adc
jge
adc
rol
inc
fstl
mov
push
jecxz
and
popa
or
mov
jl
jbe
data16
push
or
dec
outsl
stos
data16
jb
pop
mov
mov
std
xchg
imul
pusha
jne
dec
test
iret
loope
mov
pop
sbb
cmpsl
sahf
push
jns
je
out
mov
sbb
mov
push
in
jno
movsb
adc
loope
lcall
xchg
inc
inc
lock
pop
lret
xchg
mov
jns
adc
fistpl
push
dec
add
aaa
aad
out
jb
sbb
test
jge
dec
and
lret
cmp
or
jnp
dec
fadds
clc
int3
or
push
add
sub
mov
in
fildll
sub
test
mov
adc
test
sbb
dec
loop
xor
inc
add
cmpsb
xchg
xor
mov
dec
dec
jae
loope
leave
or
mov
pop
xchg
lcall
add
imull
xchg
sbb
mov
xchg
int3
adc
push
or
xchg
push
mov
int3
stos
dec
inc
movsl
inc
jno
in
jno
jmp
aaa
scas
sbb
jg
push
orl
jl
mov
mov
nop
or
fsubl
dec
cmc
cmpsb
lret
or
jmp
imul
test
dec
fs
pop
rorl
lret
xor
cwtl
mov
cld
jecxz
loop
repz
jo
enter
xchg
mov
push
out
sbbb
add
repz
pop
cwtl
mov
pop
bnd
push
dec
pop
jecxz
or
push
sub
add
mov
fcoms
bound
test
or
and
fwait
imull
cmc
lock
enter
fsts
xchg
pushf
std
pop
pop
js
xchg
adc
out
xor
inc
mov
pushf
push
cmpsl
sbb
call
leave
push
jo
sti
aad
mov
mov
sub
mov
shrl
dec
mov
jge
das
out
fldenv
cwtl
ss
push
insb
and
mov
mov
cmp
inc
adc
add
test
and
add
adc
aad
cmpsb
mov
sub
and
jp
mov
pop
shll
pop
call
push
inc
loop
dec
lock
jbe
lds
scas
sub
outsb
loope
and
jnp
lea
dec
pop
lahf
push
cld
or
test
mov
or
cmp
dec
sbb
arpl
jns
int3
cmpsb
add
movsl
jns
sbb
mov
fmul
inc
movsl
out
loope,pn
xchg
jae
xor
lret
pop
or
and
in
mov
imul
adc
out
cmp
std
dec
rclb
gs
iret
xchg
xchg
or
xchg
sbb
xchg
mov
rcll
dec
loope
inc
or
xchg
xchg
add
ret
call
inc
dec
inc
mov
repz
inc
subl
sub
xchg
inc
xor
fiadds
and
imul
bound
jle
mov
push
fwait
pop
int3
out
fsin
or
mov
pop
clc
ja
out
mov
in
sub
testb
adc
xchg
sbb
pop
out
sub
ds
stos
sub
mov
pop
fldcw
add
stc
rol
leave
push
pusha
loopne
repnz
stos
mov
mov
push
mov
jle
push
ror
int
xchg
outsl
jae
sub
xlat
cs
push
leave
pop
fsubr
cs
test
imul
jmp
mov
adc
and
sub
cli
daa
insl
sbb
mov
cmp
ficoml
les
xchg
test
and
cs
add
test
pop
fs
push
mov
pop
adc
xchg
sbb
and
sahf
pop
push
das
loope
popa
push
pop
mov
aas
mov
cmp
and
mov
hlt
and
jmp
fs
jp
add
and
ffreep
test
fistpl
test
ret
repnz
cli
out
mov
xchg
lock
mov
mov
mov
xor
add
les
mov
and
shll
jle
inc
cs
out
es
push
mov
pop
mov
and
addb
add
hlt
enter
bound
mov
mov
inc
imul
lods
movsb
pop
add
ret
mov
push
fisttpl
movsb
mov
das
dec
add
dec
dec
sbb
fucomi
ja
push
adc
int3
jbe
aaa
out
pop
rclb
sbb
stc
push
gs
push
sbb
cltd
cmpsb
inc
insb
mov
es
imul
aam
and
movsl
scas
inc
out
cld
xchg
jp
mov
jmp
or
ret
mov
mov
jge
shlb
cld
mov
pop
pop
cmpl
mov
ret
scas
ljmp
pop
bound
clc
mov
mov
icebp
popf
mov
mov
repnz
shlb
mov
pushf
mov
imul
mov
xchg
sbb
adc
scas
and
adc
cmp
inc
sub
mov
push
jl
int
pop
loope
insb
int3
lret
add
or
or
lahf
std
dec
push
push
lea
stos
mov
cltd
cwtl
sub
cltd
push
inc
mov
repnz
xor
out
add
jno
dec
mov
add
xchg
adc
push
and
das
jmp
push
ljmp
out
mov
lea
aas
out
mov
push
xchg
xor
jmp
lea
jmp
mov
mov
mov
cmpsb
rol
ljmp
mov
sbb
mov
fildll
mov
xchg
sbb
div
and
frstpm(287
ja
xchg
mov
gs
ds
mov
movsb
xchg
hlt
shll
stc
stos
push
add
scas
ja
popf
movsb
pop
ja
xchg
pop
aad
call
aad
and
loope
cmp
fildl
mov
std
sbb
jne
xor
lods
mov
adc
cmp
sbb
js
gs
xor
and
in
pushf
out
rcrb
push
adc
leave
or
push
jne
testb
cmc
jo
rcrl
lret
int
rorb
xchg
out
mov
jb
ret
and
adc
lods
jb
adc
jne
pushf
sarl
inc
and
ja
mov
ds
rolb
test
cmp
push
cs
cmp
scas
cmp
dec
xchg
aam
js
sti
popa
adc
leave
push
fndisi(8087
aaa
lds
lds
sbb
enter
sti
mov
fsts
inc
inc
dec
repnz
mov
out
int3
jne
mov
cs
inc
fs
mov
cmp
xor
mov
cmp
inc
push
mov
out
sub
popa
movsl
dec
push
imul
mov
mov
ljmp
jecxz
xor
pop
cs
dec
mov
add
popa
or
mov
add
mov
jo
jnp
sub
repz
hlt
or
test
stc
data16
test
or
fcmove
ja
das
pop
inc
xor
call
dec
jnp
sub
cmpsl
sub
sti
dec
and
lods
fisttpll
inc
and
pop
adc
out
jg
in
vaddpd
add
call
sub
fists
roll
ret
mov
shrb
mov
adc
sbb
mov
mov
push
icebp
cmp
add
or
ds
mov
dec
ror
dec
push
fistps
stc
pop
out
adc
jge
imul
pusha
and
xchg
mov
leave
scas
mov
lahf
and
dec
addr16
push
xor
nop
sahf
jle
or
jne
ds
pop
or
xchg
fsubs
mov
dec
fisttps
xor
or
hlt
shrl
scas
fstpl
in
in
mov
test
test
and
hlt
sbb
dec
sarb
fstpl
lret
push
jp
add
fldenv
xor
shlb
std
sub
lods
filds
sbb
sbb
and
add
out
je
push
pop
jnp
rolb
lret
mov
inc
jle
arpl
push
mov
xchg
cli
cmp
mov
lock
jle
outsl
jns
arpl
inc
or
cld
lcall
sbb
xorl
outsl
dec
mov
hlt
popf
leave
stos
or
shrb
out
mov
out
push
cmpsb
aaa
pop
test
pushf
pop
cltd
aam
jae
xchg
mov
mov
push
jp
cmp
jecxz,pn
pop
push
mov
shrw
sti
shl
cli
mov
stos
xor
cmpsb
stos
fs
gs
mov
dec
sbb
pop
push
ret
loope
in
cld
push
stos
jb
xchg
push
rol
imul
scas
cmpsb
cmp
ror
loopne
adc
sub
sbb
les
push
fsubrs
sub
movups
cld
cld
pop
mov
mov
add
dec
rcrl
xchg
mov
cmc
pushf
or
cmp
pop
test
pop
je
leave
dec
add
aaa
addr16
cmp
cmp
ret
xor
dec
cmp
xor
imul
or
or
icebp
or
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
ds
sti
call
pop
jl
inc
sub
fsts
jl
jle
bound
and
jbe
dec
or
adc
pop
sarl
cld
nop
and
imull
dec
xchg
pop
ror
in
je
xchg
xor
lds
sub
lock
xchg
ja
xchg
jbe
loopne
stos
inc
test
jg
idivb
addr16
dec
and
inc
scas
cs
push
adc
adc
cmp
push
imul
jno
push
sub
loop
mov
add
ficompl
xor
mov
fs
inc
jne
lods
negl
or
sbb
xor
subl
pop
lret
mov
xchg
add
sub
data16
icebp
outsl
in
add
fsts
or
xchg
cmpl
imul
mov
lods
jecxz
jb
out
cli
adc
insb
shrb
xor
cmp
jp
add
xor
cmp
fidivrs
jle
mov
and
dec
and
pop
test
repnz
push
xchg
dec
dec
into
mov
xor
ds
js
repnz
fs
adc
xchg
aas
dec
sub
cltd
mov
cmpsl
pop
mov
inc
xor
xchg
inc
rolb
mov
clc
and
out
sti
mov
and
xor
stos
mov
test
imul
movsb
mov
movsb
in
aam
fidivs
ss
outsb
pop
jecxz
das
and
push
loope
mov
mov
mov
and
fldt
jne
mov
outsl
inc
inc
sub
cld
add
xchg
fistpl
jp
test
jl
cld
push
jge
int
outsl
sub
or
fisubrl
les
mov
mov
inc
mov
lock
adc
leave
sti
shrb
jno
insb
push
mov
dec
push
mov
shrl
mov
cmp
out
sbb
jmp
push
test
pop
sbb
push
mov
mov
sub
push
jp
or
jae
fimull
push
push
jb
int
and
jge
push
fsts
add
mov
inc
push
inc
or
movl
xor
lret
xor
out
mov
aaa
push
or
push
int
mov
mov
shlb
sub
push
mov
js
cli
shr
lea
loopne
pop
add
bound
fwait
ljmp
popa
lahf
outsl
xor
mov
mov
push
popa
repz
and
xchg
dec
sub
xchg
jmp
jnp
mov
and
lods
and
and
jp
cmp
sbb
testb
mov
inc
loope
les
xor
mov
dec
add
push
mov
jb
das
gs
adc
fidivl
insb
sub
negb
push
push
in
arpl
add
int
jae
sub
cmp
push
and
pop
sbb
add
xor
roll
imul
and
data16
add
mov
in
jge
stc
shlb
xor
out
popf
pop
pop
lods
mov
in
stos
pop
sub
push
ljmp
xlat
push
fnstcw
sbb
xor
mov
and
inc
mov
jle
mov
push
mov
dec
xchg
add
xor
jnp
test
stos
aas
daa
imul
xchg
or
dec
pop
jecxz
mov
movsw
and
xchg
lds
sbb
inc
repz
xchg
loope
sub
inc
je
add
cli
sub
jb
das
push
fsubr
mov
int
and
scas
ss
push
insb
jo
push
jbe
icebp
shll
test
stos
sbb
outsl
jo
mov
lea
push
sub
mov
mov
lahf
mov
dec
mov
mov
mov
cmpsl
mov
into
pop
inc
mov
inc
push
mov
ret
adc
je
mov
push
sahf
outsl
pop
sbb
aam
inc
test
add
outsb
lds
inc
jl
push
call
andb
push
push
cltd
or
cmp
das
dec
cmc
jo
pop
das
pop
and
inc
stos
and
loopne
sub
loop
out
lcall
pop
cmp
jmp
cltd
inc
or
xlat
add
xor
daa
adc
cmc
test
sbbb
or
or
loop
sbb
shl
push
sbb
adc
stos
cmp
stos
sbb
sahf
mov
sbb
cmp
addps
pop
movsl
pop
loope
int3
pop
adc
or
jb
jae
or
leave
notb
bound
int3
popa
pop
test
hlt
test
inc
pop
sub
mov
out
cmovp
imul
fcmovnb
pop
sub
cmpsb
dec
fimull
enter
xor
jno
int
hlt
inc
daa
inc
xlat
push
pushf
push
dec
push
nop
inc
and
in
xor
cmp
dec
xchg
sub
dec
sub
arpl
data16
or
mov
jecxz
lret
stos
hlt
mov
mov
je
jl
push
mov
xor
push
and
and
mov
lods
addr16
lret
mov
mov
adc
sub
imul
leave
xor
sub
pop
cmpsb
cltd
jns
add
aas
icebp
test
stos
jp
jnp
xchg
inc
mov
jbe
sbb
sti
mov
or
clc
mov
repnz
xor
inc
jbe
adc
iret
fisttpll
and
sub
negb
push
adc
out
ljmp
orl
push
jne
stc
cld
loope
jns
mov
pusha
gs
imul
stos
ret
movsb
std
mov
jb
dec
dec
daa
dec
xlat
dec
sbb
and
xchg
mov
cmp
pushw
in
in
test
dec
sub
or
cmc
gs
movsl
mov
push
sub
xor
bound
nop
cli
std
int3
sub
push
repz
ljmp
inc
and
push
test
jecxz
in
push
sub
mov
cmp
movsb
cld
cld
sub
push
pop
xchg
mov
cmc
in
cld
test
aad
jmp
out
jo
aad
adc
dec
add
cmpsl
jle
xor
add
or
sti
ror
icebp
push
cltd
inc
jmp
xor
sub
sbb
sub
clc
jp
in
je
shl
jl
push
jle
imul
ds
dec
negb
std
insb
xchg
loope
rcll
cmp
lret
fwait
xor
sub
cmpsb
pop
adc
std
inc
jecxz
sbb
and
in
fnsave
lods
pop
sahf
add
push
arpl
stos
push
and
xor
add
sahf
pushf
movl
iret
stc
call
mov
mov
adc
mov
mov
ds
sbb
pop
ja
mov
fstpl
ds
cmp
loop
inc
testl
popl
xchg
fwait
mov
jg
in
cmp
call
shl
std
stos
and
adc
cmp
inc
xor
sub
sub
push
int3
inc
lcall
xchg
ss
jae
sub
dec
cmp
or
jle
insl
and
pop
repz
pop
pusha
hlt
mov
push
rcll
mov
jmp
cs
imul
xchg
and
pop
xor
outsb
mov
push
cmpsl
cmpb
sbb
lret
fwait
cmc
imul
and
inc
pop
add
or
adc
cmp
jecxz
jecxz
aad
cld
cmp
jmp
aas
aad
pop
dec
and
jns
hlt
xor
es
arpl
or
jmp
cmp
push
rolb
cmpsb
xor
mov
stc
inc
and
mov
mov
xor
inc
inc
push
inc
and
pusha
aaa
jg
imul
pop
jb
hlt
mov
dec
push
or
leave
dec
xchg
aam
imul
sub
xlat
out
sub
xchg
sbb
test
mov
adc
xchg
aad
and
outsb
in
push
adc
mov
pop
jae
xchg
adcb
ret
imul
mov
xchg
jno
or
cmp
es
shrb
adc
cmp
enter
or
das
sti
jns
stos
cmp
in
jmp
jbe
repnz
pop
jae
ret
ret
repz
psrld
call
scas
js
mov
lsl
dec
test
popa
in
test
or
add
mov
add
scas
cmpsl
outsb
into
test
xchg
xor
shr
inc
xchg
mov
pop
out
clc
xor
filds
mov
test
xor
cmpsb
inc
sub
js
xor
pop
int3
pop
adc
add
mov
and
dec
out
out
or
subl
mov
jle
test
lods
and
xchg
sub
mov
pop
ret
loopne
xor
push
stos
test
inc
ret
add
mov
in
lock
shr
insb
sti
push
jp
or
jne
inc
add
pop
mov
std
enter
xchg
pop
and
ds
add
ds
bound
push
or
xchg
cmpsl
add
mov
sub
pop
dec
call
pusha
adc
pop
cmp
add
inc
jbe
mov
sbb
adcl
adc
xor
out
int
add
daa
lea
jb
add
pop
movsb
mov
imul
lret
dec
int
sahf
fs
dec
stc
out
or
cmp
nop
in
int
lret
jp
in
add
fmull
adc
add
inc
mov
iret
cwtl
lock
push
xlat
in
xor
bound
mov
sub
repz
sub
push
nop
push
mov
mov
or
out
fistps
andnps
outsb
filds
popa
inc
test
cld
scas
push
jecxz
enter
and
fnstcw
ror
outsl
dec
jl
sub
jae
sti
aaa
test
mov
jno
out
fsubrs
icebp
dec
dec
xlat
adc
push
repnz
and
mov
out
mov
cmpsb
in
jo
sbb
jae
adc
sub
into
cwtl
ret
mov
out
and
clc
cmp
mov
inc
inc
sub
aas
shl
mov
sub
fwait
je
insl
mov
nop
pop
ja
cld
lods
adc
bound
in
cmp
mov
loop
adc
xchg
cmp
stos
leave
mov
insb
xlat
or
in
and
outsl
in
jb
je
das
test
push
jge
adc
jo
mov
pop
mov
mull
push
sub
mov
ljmp
insb
sahf
mov
xor
ss
dec
aad
outsl
sbb
lret
sbb
sub
mov
cmp
ljmp
and
cld
fimuls
test
fwait
out
enter
push
cltd
sbb
shll
jge
pop
lea
cmpsl
fcomp
bound
sarb
fwait
bound
das
mov
mov
pop
adc
xchg
sbb
test
add
add
sub
rclb
lds
aaa
mov
mov
pop
ficomps
cli
push
les
adc
daa
sbb
cmp
aaa
and
imul
jmp
xchg
in
mov
fs
mov
lret
sub
repnz
movsl
xor
push
pop
jl
out
out
stos
leave
jg
subl
cmpsb
xchg
cli
stos
icebp
mov
daa
icebp
mov
adc
test
pop
cmpl
cld
popf
ror
int
ret
xchg
je
inc
insb
les
jmp
fisubrl
jp
push
cmp
into
gs
mov
rorb
mov
mov
or
lock
std
add
lret
adc
xchg
aad
inc
xor
incb
push
cmp
fwait
outsl
int
cmp
outsl
jbe
pop
faddl
push
bound
push
jo
dec
and
pop
fwait
sahf
inc
jg
mov
or
adc
idivl
push
cmc
lcall
pop
mov
ds
or
data16
and
xor
push
jne
mov
not
pop
addr16
pop
iret
adcl
xor
jns
push
frstpm(287
xchg
add
jnp
lcall
and
pop
xorb
jp
movsl
rcrl
pushf
cmp
push
popa
ret
and
mov
leave
sbb
ja
and
and
inc
insb
mov
sub
aam
scas
or
xchg
rcrl
fstl
push
rcrl
into
addr16
rcr
push
aam
mov
ret
int
push
push
xor
jmp
mov
sub
sbb
mov
xlat
pop
jmp
dec
cmp
xchg
out
mul
cltd
test
and
inc
or
icebp
cmp
iret
xor
sub
xor
shll
in
in
lods
inc
jbe
clc
cmp
mov
test
pop
outsl
out
push
mov
mov
fisubrl
call
sub
and
into
and
pop
mov
add
mov
xor
pushf
add
xlat
mov
or
inc
dec
outsl
mov
in
jnp
push
sub
daa
fsubs
xor
mov
xchg
and
ds
add
shrb
movsb
pushf
or
dec
or
adc
icebp
lcall
cmp
mov
xchg
jae
pusha
xchg
sbbl
mov
pushf
inc
fistpll
inc
in
div
iret
iret
test
test
xchg
push
ds
aas
js
lods
or
mov
adc
stos
fdivl
in
mov
in
adc
mov
dec
sti
push
daa
enter
icebp
jo
adc
adc
leave
and
ret
sbb
or
stos
enter
inc
jp
sbb
daa
add
push
inc
int
jo
dec
mov
push
aaa
sti
fsubs
leave
push
xchg
fldl
mov
cmp
cmp
fisubrs
ret
fsts
addr16
lret
iret
and
xchg
outsb
and
pop
cwtl
sub
lea
in
dec
loopne
loopne
xor
rclb
jo
dec
out
or
xchg
in
sub
incl
pop
or
js
pop
adc
jne
movsb
dec
fisttpl
aam
and
or
ret
lcall
lds
iret
inc
push
dec
push
fmull
ret
xlat
pop
into
pop
out
loope
je
jmp
aaa
rcl
inc
xor
adc
fwait
mov
inc
gs
repz
loope
loope
xchg
pop
leave
sbb
jmp
jns
pop
stc
or
int
call
xchg
xor
les
leave
pop
mov
and
lea
das
ss
fdiv
fimull
es
pop
cli
arpl
jge
out
jg
out
xor
popf
and
pop
or
pop
aad
adc
dec
rcl
pop
cwtl
popa
xor
gs
clc
out
and
sub
clc
mov
testb
lret
sbb
adc
mov
xchg
test
mov
mov
mov
pop
fsts
inc
das
mov
je
popf
or
stc
cld
lds
adc
mov
pop
cmp
jb
xor
jmp
dec
mov
cmc
or
mov
in
sub
ljmp
iret
loopne
in
pop
push
pushf
movsl
inc
and
xor
arpl
mov
shrl
insl
pop
and
lret
out
stc
jp
ret
xchg
icebp
pop
int3
push
pop
pop
cwtl
mov
cmp
pop
mov
push
decl
mov
mov
pop
js
enter
arpl
cmp
int
out
cmp
push
push
push
shl
jae
xchg
inc
dec
aam
push
jecxz
push
sbb
adc
fcoms
arpl
pop
jno
loopne
mov
push
lret
or
cmc
scas
cmp
push
mov
lea
pop
or
popa
add
mov
insl
mov
inc
lcall
xchg
mov
clc
push
insl
jmp
cmp
add
xchg
outsw
imul
data16
cs
xor
mov
pop
ret
stos
or
shrl
sti
pop
enter
jne
and
mov
sbb
cli
nop
and
sub
aas
mov
outsb
push
ret
add
mov
ret
popa
cmpb
mov
sub
inc
xor
daa
cmp
aaa
pop
sbb
addr16
out
fld
lret
ja
inc
and
sti
out
dec
cmc
and
add
lea
lahf
push
xchg
mov
sarb
sbb
xchg
pop
cld
inc
mov
imul
or
mov
in
mov
movsb
mov
and
mov
stc
pop
enter
dec
sarb
add
and
jmp
fisubrs
imul
push
std
rorb
lahf
loopne
enter
call
mov
jp
gs
push
sarl
and
es
fstps
lds
add
dec
mov
nop
orl
sbb
mov
adc
movsb
das
adc
mov
bound
sti
xchg
fidivrs
add
lods
sub
mov
push
arpl
or
fwait
enter
aaa
mov
sub
int
dec
outsb
mov
adc
popa
cmpsb
in
mov
push
adc
movsb
jecxz
xchg
pop
fs
ljmp
inc
jne
add
xchg
adc
lods
mov
adc
push
add
pop
call
mov
mov
js
pop
mov
mov
movsl
push
push
das
xorb
or
push
push
ljmp
mov
popf
aam
int3
cmc
mov
into
ss
pop
jo
sarl
pusha
jp
movsb
lods
mov
sub
jecxz
or
int3
std
stos
dec
insb
cmp
pop
lret
call
xorb
add
push
sbb
sub
push
pop
cmp
arpl
rol
push
push
sbb
insb
sub
or
int3
incl
mov
ret
xchg
jb
and
push
clc
in
jecxz
lods
pop
inc
inc
fwait
xlat
stc
cmp
movsl
in
jne
addr16
pop
xchg
jmp
inc
adc
sub
jle
adc
push
mov
xchg
jo
fidivrl
jbe
pusha
cli
push
pop
out
inc
ret
push
jne
and
or
jmp
jge
push
das
lea
mov
out
add
into
nop
sarb
cli
mov
mov
stos
iret
icebp
jbe
icebp
dec
and
out
in
ret
scas
or
rcrb
add
enter
add
stos
ficoml
adc
call
jb
sub
xor
movsb
push
push
push
adc
imul
dec
imul
dec
push
aad
pop
and
jns
adc
push
loope
pop
pop
sahf
mov
jmp
add
xor
pop
je
js
enter
jecxz
cmpsb
xchg
add
cmp
inc
sub
jge
pushf
xor
fnstcw
iret
cmp
or
mov
push
adc
push
loopne
scas
jge
int
jo
cld
insb
xchg
idivl
push
and
mov
movsb
inc
fcmovne
jno
pop
pop
popl
movsb
ljmp
fnstenv
or
xor
enter
std
test
es
xchg
add
in
repz
into
cmp
sbb
sahf
bound
repnz
push
insb
pop
roll
pop
inc
dec
inc
ds
add
es
cmp
sub
cltd
jle
popa
andl
out
test
inc
insb
es
mov
int3
adc
cmc
in
hlt
movl
stos
cmpsb
mov
add
orb
add
lcall
gs
lods
fsubrl
fimuls
call
ja
jnp
push
inc
pop
pop
xor
les
lahf
mov
icebp
or
jmp
rorb
push
mov
cmpl
adc
popf
loop
aaa
sti
gs
xlat
pop
sub
mov
loope
lods
dec
int
fbld
loop
jae
add
dec
adc
mov
sub
xchg
jecxz
adc
adc
into
js
icebp
jnp
aas
notl
aaa
sbb
or
pop
xor
adc
fmulp
frstor
xor
test
inc
add
sbb
cs
out
xrelease
push
xchg
inc
outsl
inc
dec
popa
loopne
insl
pusha
addr16
add
push
inc
jb
pop
pop
xchg
out
inc
bswap
xor
cmp
mov
xchg
inc
aad
pop
fnstsw
jge
addr16
push
mov
sbb
mov
jecxz
clc
push
add
adc
inc
fnstsw
add
push
jnp
fsubl
test
in
stc
inc
add
jecxz
test
mov
jge
inc
cwtl
cmp
adc
add
ss
shl
jecxz
jle
loop
mov
xor
dec
lods
cwtl
cmc
lcall
mov
cmp
xchg
dec
jle
push
out
and
sarb
loop
jmp
xchg
inc
ficoms
jl
and
stc
pop
mov
or
das
out
arpl
jno
imul
mov
hlt
int
mov
inc
lahf
dec
popf
pop
stos
add
inc
aam
mov
mov
insb
cli
je
aas
sahf
scas
enter
adc
mov
jne
cmp
adc
iret
xchg
jl
in
shl
mov
loope
sub
sub
loope
jle
icebp
out
pop
stos
mov
bound
scas
or
es
inc
xchg
das
add
lcall
pushf
fxtract
repnz
dec
jge
adc
mov
fsubp
add
add
gs
xlat
dec
mov
out
fidivrl
loope
in
push
out
clc
adc
cld
icebp
es
out
or
push
mov
mov
les
rorl
das
or
cmp
adc
enter
or
iret
xchg
out
and
outsl
out
inc
lods
sbb
jp
lods
mov
mov
push
xchg
pop
scas
push
divb
test
int3
jns
lahf
test
in
cmp
daa
or
out
popa
sub
stos
mov
scas
rcrb
adc
sub
loopne
loop
push
fdivrs
imul
mov
enter
pop
fstp
push
andb
mov
inc
ret
dec
lock
aas
call
mov
les
hlt
mov
mov
ret
loopne
daa
pop
imul
push
mov
xchg
xor
stc
mov
push
inc
lods
and
pop
pop
sbb
in
sbb
es
outsl
push
test
push
pop
inc
jnp
mov
add
pop
push
out
stos
lahf
dec
bnd
repnz
les
jge
or
es
mov
add
dec
enter
punpckhwd
and
xlat
out
aam
loope
arpl
adc
add
inc
xor
add
xor
leave
jbe
mov
dec
sub
or
inc
push
lret
dec
ret
fwait
sbb
shrl
movsl
clc
jle
pop
xorl
inc
jmp
cs
hlt
std
lcall
and
add
mov
icebp
pop
aam
mull
cmpsb
mov
cld
fs
rcrb
dec
jbe
cmp
sub
mov
pop
jg
mov
orb
popa
jo
pushf
xchg
xchg
pushf
insl
and
test
pop
loopew
insb
lret
shl
in
inc
shrb
add
sub
inc
and
xchg
xor
out
repz
imul
lds
loopne
inc
loope
sbb
sbb
xor
push
sub
and
daa
cwtl
cmpsb
stos
dec
aas
push
sub
fldl
push
insb
fistpl
lcall
shll
mov
push
aas
outsl
imul
ret
stos
stc
insb
cmp
and
adc
inc
jae
gs
cmp
std
pop
mov
inc
jno
mov
jns
and
ret
pop
inc
and
movsb
movsb
inc
adc
popa
mov
ret
jbe
arpl
xor
outsl
mov
pop
mov
xor
pminsw
out
push
loop
xchg
jmp
sahf
pop
sbb
xor
sub
fidivl
rcll
dec
sbb
and
idiv
cmp
xchg
and
mov
xchg
xlat
les
aaa
sbb
mov
mov
leave
ret
into
xchg
jb
test
adc
fmull
add
insl
jbe
call
in
xor
jae
fbstp
lahf
fsubp
inc
mov
addl
dec
ljmp
inc
ja
subl
jmp
push
scas
in
lock
add
pop
or
fcomi
add
push
jge
jo
sahf
fdivrl
faddp
and
pop
push
inc
outsl
ret
dec
cwtl
test
pushf
shl
pop
cmp
ss
and
icebp
sbb
leave
gs
push
imul
lods
xchg
sub
sbbl
mov
lock
and
test
inc
xchg
xchg
mov
xchg
push
sbb
fcomi
mov
pushf
inc
sbb
add
bound
sub
adcl
push
pushf
and
movsb
repz
data16
or
push
fldcw
and
inc
cmp
cltd
cld
fldt
out
mov
or
sbb
xorb
jmp
adc
fcmovnu
cmp
mov
scas
into
aam
xorl
dec
jle
dec
ror
cwtl
and
call
inc
into
nop
call
dec
es
dec
pop
cwtl
mov
and
movsl
ljmp
fnsave
mov
stc
inc
and
movsb
jg
std
inc
insb
divb
rorl
lret
xchg
out
cmc
sbb
jb
mov
cmp
out
pop
push
fiadds
and
adc
sub
out
xchg
mov
addr16
jge
lods
js
mov
push
cmp
or
cmpsl
mov
popf
cmp
shll
lods
adc
xchg
pop
enter
xor
and
dec
dec
imul
enter
gs
aad
push
movsl
fdivr
rcl
mov
add
in
int
pop
xchg
ss
sbb
push
adc
pop
shll
jmp
fstps
xchg
out
xchg
mov
xchg
push
je
adc
sbb
mov
adc
ja
in
iret
or
xchg
addr16
cmp
je
push
jp
mov
lret
mov
and
jbe
and
mov
add
sub
mov
xchg
and
cs
push
mov
push
adc
fiadds
lret
dec
sbb
es
pop
mov
mov
imul
or
rorl
movsb
push
mov
jo
aas
pop
fadds
mov
adc
pop
mov
mov
cs
popf
jnp
fs
cltd
scas
aaa
sub
dec
pop
test
mov
push
imulb
das
in
adc
icebp
inc
scas
inc
inc
fisttpll
xchg
imul
sub
pop
sub
jg
mov
or
scas
xlat
push
cltd
repnz
cli
rolb
scas
push
lret
cmc
jmp
pusha
xchg
into
sbb
pop
shr
and
mov
inc
aam
jecxz
and
push
xchg
mov
shrb
data16
adc
push
xor
mov
push
shlb
sbb
lahf
jno
adc
and
in
aam
pop
mov
xchg
out
scas
jmp
mov
test
faddp
cli
into
pop
arpl
xor
jmp
sbb
out
scas
inc
daa
addr16
fs
and
mov
fstps
dec
ja
rolb
mov
out
in
fst
sbb
int
mov
clc
xor
jno
popa
gs
iret
jle
pop
test
and
je
andl
mov
mov
out
pop
xchg
sbb
ret
cmp
ss
dec
cwtl
arpl
xor
push
push
iret
push
loopne
adcl
xor
push
aam
lds
or
stos
xchg
aad
repnz
rcl
adc
arpl
outsl
sub
inc
add
inc
bound
mov
fdivl
cs
sub
pop
scas
sub
xchg
dec
cmp
push
adc
imul
mov
adc
dec
mov
pop
dec
jne
sbb
and
and
pop
pop
jns
adc
xchg
fwait
xor
daa
xor
stos
shrl
cmpl
mov
adc
push
jbe
inc
jl
std
mov
adc
lock
sti
and
int
stos
or
into
cltd
icebp
inc
push
pop
nop
das
inc
or
cmp
jg
repnz
out
or
aad
call
jmp
or
adc
push
mov
sub
negl
cmp
or
fmull
pop
sub
inc
cs
sbb
into
shll
inc
clc
xor
mov
mov
ret
jmp
int3
fsubs
loop
shll
addr16
mov
mov
xor
fistpll
mov
nop
dec
popa
inc
inc
inc
out
and
loope
jbe
into
jmp
or
cmp
pop
lds
rcrb
xchg
sub
cmp
imul
mov
es
int
repz
test
cmp
int
fildll
shll
or
cmp
and
push
cmp
sbb
scas
mov
int
ljmp
cmp
fnstsw
sbb
shl
sbb
addr16
ror
add
sub
sahf
mov
mov
pop
in
mov
mov
jbe
xor
les
aas
test
or
sbb
addb
adc
mov
fldenv
inc
adc
jp
inc
mov
mov
xor
jno
loop
ljmp
mov
sbb
dec
leave
xor
pop
cwtl
cmp
movb
gs
in
imul
dec
testl
push
clc
sbb
inc
int
xchg
add
in
or
inc
push
ret
jmp
adc
and
shrb
test
cld
gs
aas
cmp
cmpsl
pop
shl
inc
push
add
dec
lock
inc
repnz
lcall
js
or
xchg
dec
or
inc
rcll
inc
mov
inc
cwtl
stc
adc
test
call
xchg
shll
in
push
sub
sub
stc
cmpsl
daa
or
xlat
js
cltd
push
pop
adc
addl
xor
push
jne
pop
loope
mov
pop
call
mov
sub
test
jmp
cmp
sti
shrb
je
and
mov
jno
mov
daa
pop
dec
in
ds
sub
int
mov
inc
test
dec
sub
jo
pop
sub
outsl
lahf
in
loop
cmp
int3
pop
jg
adc
sub
jno
xor
incl
out
mov
out
cmp
mov
sub
or
lods
fists
or
sub
pop
jl
jge
cli
jns
pop
fldcw
and
mov
insl
add
sub
xlat
push
mov
pop
xlat
cmp
call
mov
fwait
mov
sub
push
je
pop
xchg
mov
inc
adc
icebp
mov
sub
aam
adc
sub
in
lods
push
add
push
jno
and
inc
push
push
sbb
add
inc
cmc
rcl
sbb
testb
inc
adc
into
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
push
dec
sbb
mov
push
mov
adc
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
