push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
aas
or
mov
push
lret
push
ds
in
mov
lds
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
movsb
mov
jnp
cmp
sub
pushf
sar
xchg
shrb
movsl
dec
pop
hlt
mov
ficomps
les
add
rcrb
push
fnsave
fimuls
ja
pushf
sbb
xchg
xchg
mov
dec
std
call
xor
scas
mov
ja
adc
cmp
sbb
pop
cmp
jl
loope
inc
out
mov
sbb
mov
icebp
mov
jge
sub
jbe
and
xlat
push
movsb
xor
das
out
subb
inc
jle
fnsave
cld
ja
push
adc
xchg
cmpsl
subb
test
cmpb
fiaddl
scas
mov
pop
xor
mov
push
or
iret
push
ret
out
push
pop
adcb
lods
addr16
lcall
aas
clc
pop
cmp
push
sub
mov
mov
pop
pop
lods
ja
fwait
cmp
sbb
push
inc
shlb
inc
sub
push
push
enter
stos
sbb
stc
js
mov
cmc
inc
and
ljmp
adc
ffree
loope
cmp
stc
sbb
test
cmpsb
imul
sub
pop
jae
cmp
je
out
mov
inc
sbb
jl
mov
rolb
push
cmp
daa
or
push
adc
mov
mov
cli
sbb
inc
mov
push
shl
and
sbb
jecxz
aad
sbb
or
mov
loope
daa
leave
mov
daa
jbe
mov
lret
shll
pop
mov
inc
pop
test
std
nop
adc
arpl
loope
scas
dec
daa
sub
pop
push
inc
pop
aaa
repz
aam
push
ss
mov
nop
pop
in
lods
sti
imul
addr16
cmc
stos
ror
je
push
jne
xor
cld
enter
and
sub
dec
xor
cmpl
cmpsb
icebp
mov
mov
fmul
outsl
add
std
mov
gs
mov
inc
test
stc
sti
pop
pop
sbb
sub
jmp
xchg
fucomp
cmp
push
mov
sbb
iret
adc
out
fldl
dec
pop
mov
stc
sub
cmc
lock
leave
movsb
in
in
inc
cmpb
shlb
cwtl
arpl
jae
adc
and
push
lds
cli
sbb
xlat
push
sub
add
fldl
cmc
mov
adc
xchg
mov
add
dec
clc
push
mov
inc
pop
roll
and
push
lret
imul
jns
adc
cmpsb
add
mov
lcall
inc
imul
sbb
pop
loopne,pn
and
mov
dec
fisttps
sbb
push
shlb
dec
inc
inc
and
cwtl
xchg
lret
pop
mov
mov
xor
inc
xor
push
cmp
cmp
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
flds
sub
jmp
adc
addr16
cmp
jmp
mov
pop
gs
into
mov
clc
adc
xor
sub
stc
in
xor
inc
mov
jmp
jbe
mov
hlt
icebp
fisubrl
or
xchg
add
inc
test
push
rcrl
push
mov
jg
xor
adc
test
or
push
iret
mov
sbb
inc
je
push
cmc
dec
inc
inc
xorl
imul
or
cmp
jl
jmp
jl
and
repz
int3
or
sub
cwtl
repnz
sub
or
lods
sub
loope
bnd
fcmovne
xchg
or
std
loop
fmul
jmp
push
call
shll
ret
or
nop
mov
push
mov
or
lock
lods
or
pop
clc
stos
jmp
dec
cmc
push
adc
fwait
adcb
ss
xchg
les
pop
lret
xor
xor
insl
es
mov
addr16
mov
xchg
out
imul
pop
in
add
dec
rcll
int
xchg
jecxz
insl
negb
push
push
sbb
cmp
test
push
or
jl
sub
xor
test
int3
sbb
jecxz
arpl
adc
aam
xorb
push
clc
inc
xchg
inc
sbb
lods
dec
jl
hlt
mov
jns
xchg
or
sarb
or
pop
add
pusha
mov
push
xchg
sbb
test
outsl
sbb
cmp
shll
das
mov
cmpsl
pop
xchg
add
and
bnd
popa
dec
scas
dec
xor
inc
imul
sar
xor
jp
jp
mov
out
stos
cmp
lods
cmp
hlt
rcr
call
and
mov
adc
cmp
mov
add
aam
pop
enter
inc
imul
push
add
movsl
pop
xor
mov
scas
stos
xor
ljmp
out
pop
ret
and
and
call
nop
dec
sub
pushf
roll
jecxz
add
mov
dec
cmpsl
or
sbb
jae
cmp
repnz
and
xchg
dec
xchg
pop
loopne
inc
xchg
clc
xor
adc
repnz
cmpsl
mov
cli
inc
repnz
aas
in
xor
mov
jg
leave
jge
cmpsb
xchg
inc
daa
loopne
lods
mov
outsl
jne
xor
add
and
xchg
mov
adc
jg
ret
dec
mov
dec
adc
rcrl
mov
hlt
mov
push
inc
insb
lods
push
jo
xor
jl
stos
lcall
and
fsub
jle
pop
adc
ss
imul
jmp
and
call
mov
jecxz
dec
mov
push
push
mov
mov
inc
mov
out
or
sub
scas
dec
shrb
scas
pushf
pop
inc
ds
ljmp
stos
movsl
add
sti
pop
xchg
cmp
mov
and
cli
or
add
adc
jae
add
fidivl
test
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
iret
mov
les
shrl
pop
jae
ret
mov
aam
mov
dec
ret
push
test
sbb
adc
push
jnp
inc
xor
jp
and
cmp
mov
dec
lods
out
popf
push
pusha
decl
jo
mov
in
add
jb
sti
xor
adcl
sub
js
es
in
dec
push
adc
sub
mov
pusha
pop
adc
push
arpl
pop
leave
lcall
push
mov
xchg
in
jecxz
iret
sub
dec
jp
xor
jae
adc
push
xchg
ja
pop
xor
cld
cltd
add
movsb
ja
mov
std
lds
jmp
fsubrs
mov
mov
dec
jmp
sbb
std
iret
jne
stc
xchg
jbe
je
sbb
cmp
or
pop
insl
test
pop
xor
cmp
sub
movsl
jle
jno
fidivrl
mov
aaa
pop
iret
sub
bound
jns
jg
int
add
xor
jp
jno
aad
hlt
subl
inc
popf
jle
pusha
jns
or
dec
pop
popa
imul
mov
pop
jb
scas
adc
push
dec
jl
inc
push
cli
mov
cmp
dec
repnz
inc
dec
fs
bound
aaa
fwait
push
jp
aas
arpl
jle
add
push
and
in
adc
gs
sbb
cmp
ja
pop
cmp
les
testl
adc
push
sub
push
jle
loopne
ds
add
jecxz
mov
or
mov
push
lea
xchg
jle
scas
push
jbe
or
mov
adc
jmp
out
and
fs
pop
fidivrl
nop
rcrb
out
inc
test
pop
sub
pop
jle
adc
mov
jae
dec
mulb
pop
jns
or
adc
outsb
sbb
sbb
jge
call
loopne
mov
jae
pop
jmp
cmpsb
push
test
icebp
xor
mull
js
cmpsb
push
xchg
or
adc
test
sahf
int
in
loop
sub
jae
std
insb
scas
out
xlat
fisubl
ds
mov
leave
aam
lcall
shl
pop
into
clc
dec
or
fiaddl
push
inc
cmove
or
sbb
add
jmp
xchg
cvtps2pd
push
push
int3
lret
roll
addl
lret
movsl
xchg
lods
cwtl
xchg
jne
inc
jae
cmp
xchg
adc
hlt
mov
push
mov
jge
sbb
jne
mov
and
xchg
push
frstor
ds
and
push
popf
or
dec
lret
dec
notb
or
push
popf
xor
mov
sbbl
xchg
or
scas
add
xchg
dec
jbe
es
cli
jo
jns
xchg
out
xchg
sub
xchg
loope
in
aad
push
cmc
pop
wrmsr
mov
movsl
ret
dec
aaa
adc
lret
or
insl
or
jne,pt
jl
nop
in
xchg
mov
lods
xor
pop
mov
jo
aaa
pop
cmp
adc
in
fidivs
xchg
scas
pop
pop
push
pusha
mov
xchg
mov
add
pushf
adcb
push
adc
mov
jb
xor
ret
fwait
sub
mov
cmpsb
mov
nop
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
cmpb
mov
les
xchg
push
dec
dec
inc
push
mov
out
push
xchg
dec
movsl
mov
fwait
lret
inc
pop
mov
rclb
sbb
dec
add
stos
jge
sub
repnz
movsl
scas
and
cmp
pop
out
mov
sub
dec
inc
sub
pop
push
and
das
and
push
push
mov
cmpsb
xlat
mov
pop
cmpsb
jae
test
pop
push
dec
insl
add
scas
repz
xor
ret
or
aaa
insb
repz
pop
jo
dec
ja
cmp
into
jnp
sbb
or
stos
test
xchg
cmpl
lret
sbb
fisubs
adc
mov
add
arpl
pop
fstp
lcall
into
cmp
cltd
lock
das
sbb
cmovp
xchg
fs
inc
inc
or
dec
sbb
sbb
add
mov
xchg
movsb
in
mov
inc
icebp
lar
cld
inc
popa
cmp
stos
add
cmp
lea
dec
addl
loope
mov
lods
fs
in
jecxz
mov
mov
popf
xor
push
aaa
mov
dec
pop
call
into
jnp
mov
jecxz
iret
ret
cmp
jecxz
stc
lods
imul
outsb
xor
fmull
out
ljmp
loop
imul
dec
push
int
xchg
movsb
fnstsw
mov
daa
aam
xchg
xchg
leave
push
jmp
mov
pop
xor
setnp
mov
mov
leave
inc
adc
int
mov
aas
mov
push
arpl
subl
add
sbb
xor
aad
lock
add
inc
daa
pop
add
in
dec
ret
adc
and
fstpl
loop
jmp
cmp
adc
aaa
movsb
sahf
data16
push
imul
aad
jmp
lea
iret
xchg
int3
pop
sbb
push
test
out
xchg
ds
sbb
cmpsl
outsb
fs
or
mov
jmp
aas
jne
jns
bound
andl
fnstcw
les
push
cmpsb
mov
out
test
push
aam
mov
test
mov
xchg
ds
nop
cmp
insb
adc
mov
call
insb
adc
int3
inc
inc
lods
sti
test
jmp
push
or
lods
cs
and
mov
adc
sub
mov
inc
inc
sub
inc
cmp
jbe
or
stos
fwait
sbb
lock
jmp
inc
cmp
ficoml
adc
inc
push
lahf
outsb
and
cmp
inc
push
and
fdivp
insl
and
out
rolb
mov
jge
loop
mov
cmp
mov
mov
nop
test
and
mov
cmp
insb
mov
lds
xchg
icebp
in
push
mov
add
cs
sub
flds
adc
loope
testb
scas
shr
stos
xor
mov
aam
add
or
sub
cmp
add
jne
add
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
push
mov
mov
mov
aad
inc
aad
cmp
dec
cmp
in
mov
sti
popf
stos
shrl
into
jmp
js
and
popa
in
cmc
mov
mov
cmp
imul
xchg
cmc
shl
mov
fadds
sub
std
movb
aad
sub
adc
mov
add
je
out
imul
cs
loop
dec
imul
mov
or
imulb
popa
lcall
xchg
scas
int
pop
bound
or
sub
mov
add
xor
mov
sbb
push
mov
inc
lret
popa
cmp
call
jbe
mov
fucomip
dec
cmpsb
adc
outsl
mov
jb
cmc
stos
mov
push
pop
outsb
xor
int3
rcll
mov
jge
sub
leave
and
add
mov
jl
jmp
popa
in
fisubs
popf
push
pop
mov
ret
mov
sub
scas
js
sub
adc
addr16
rcrl
cs
lret
sarl
cmpsb
lods
dec
dec
movb
add
adc
jnp
or
sbb
cmp
sbb
fistps
cmp
dec
inc
ret
imul
sbb
or
popf
icebp
test
fists
mov
push
sar
rcrb
xor
gs
outsb
fcoml
adc
das
test
cmp
jmp
add
addl
xchg
mov
je
aam
mov
pop
jmp
scas
jb
sbb
das
aas
jno
mov
inc
or
and
jo
and
adc
add
loopne
dec
into
std
mov
or
push
mov
insl
and
or
clc
xchg
je
addr16
mov
repnz
icebp
and
popf
cli
filds
fistps
cltd
ret
in
cltd
cmp
inc
jnp
clc
lret
dec
pop
lods
sub
lret
popa
jne
cmp
mov
xchg
in
cmp
push
inc
mov
fcmovne
jo
pop
adc
jo
jns
into
lea
mov
dec
sarl
xor
inc
jmp
cmpsl
jmp
in
je
pop
scas
lret
lods
shlb
fdivrl
outsl
jg
sbb
push
arpl
jge
xor
inc
cmp
stc
pop
fisubs
pop
outsb
pop
push
outsb
bound
mov
mov
call
jns
xchg
sub
mov
lock
xchg
jno
xchg
adc
mov
xor
orl
lock
mov
inc
loope
addr16
sub
imull
mov
out
cwtl
fdivrl
daa
or
test
cld
pop
iret
or
jl
out
hlt
or
cmpsl
dec
mov
test
rorl
inc
mov
scas
lret
jo
xchg
test
xor
out
mov
roll
out
imul
in
dec
enter
scas
or
pushf
test
mov
push
cmp
aad
andb
adc
pop
aaa
xchg
divb
clc
test
and
arpl
sbb
out
cmp
dec
mov
pop
inc
adc
paddd
in
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
push
inc
pop
sarl
les
adc
das
fstpt
and
fninit
out
push
cmpsl
inc
mov
imul
in
dec
nop
pop
pop
mov
jp
fadds
pop
mov
mov
dec
dec
jns
and
xchg
dec
pusha
inc
shlb
dec
jecxz
cld
rolb
inc
xchg
or
sub
in
inc
jne
mov
jg
out
jle
ljmp
fldl
push
in
mov
pushf
out
addr16
cmpsb
out
out
push
push
cmp
ds
mov
and
jae
pop
push
sub
lea
xor
sbb
shrb
inc
cmpsb
sub
sbb
bound
pushf
cs
add
mov
fldt
mov
add
cmpb
das
push
lahf
test
jbe
inc
pop
inc
mov
sbb
std
or
dec
jmp
leave
add
cmp
loope
adc
mov
shll
jnp
ja
mov
ds
cmpsb
movsl
xchg
jbe
cwtl
sub
sub
repz
mov
and
dec
sub
addb
sbb
mov
push
dec
push
mov
xchg
or
mov
mov
mov
mov
outsb
mov
dec
and
pop
rcll
inc
aad
or
pushf
cli
sub
adc
fidivs
aam
mov
adc
rorl
xor
sub
add
cmpsb
sbb
jns
test
divl
cmp
mov
pop
shl
pop
add
mov
pusha
dec
mov
jo
xor
adc
shrl
loope
mov
xchg
pop
mov
sbb
cmpsl
adc
arpl
mov
pop
xchg
lcall
fcmovb
ja
ss
lock
fidivs
and
mov
xchg
fstp
les
mov
dec
in
mull
push
inc
int3
xlat
jb
mov
sbb
lods
or
scas
je
dec
pop
inc
xchg
sbb
push
xchg
sarl
or
jns
cwtl
push
mov
push
cli
in
mov
mov
push
mov
test
sbb
pop
mov
and
movsb
iret
pop
lods
add
roll
xor
xor
cmp
pusha
insb
mov
pop
or
out
ret
mov
xchg
add
push
xor
mov
jb
add
in
pushl
fucom
pop
xchg
sbb
arpl
ret
sub
movsb
rolb
idiv
fwait
xchg
lret
ss
dec
das
mov
cmpsl
pop
xlat
in
lret
and
pop
inc
pop
inc
sub
dec
and
es
mov
out
cmp
xchg
ds
jecxz
ss
imul
scas
push
int3
movsb
inc
fistpl
aaa
mov
lods
mov
xor
pop
push
fwait
popf
dec
nop
cltd
in
std
ljmp
in
add
repnz
dec
pop
adc
jnp
and
cmpsb
movups
repnz
dec
pop
fildl
inc
sbb
cmp
outsb
and
fisubrl
bound
in
xor
cmp
push
stc
jmp
push
icebp
es
sbb
shl
lods
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
mov
mov
les
rcr
inc
mov
mov
lds
jle
test
add
rcll
mov
jg
mov
roll
pushf
jge
fmul
js
data16
cmc
cmp
imul
hlt
inc
in
mov
lahf
add
ficoml
cmpsl
cmpsb
jecxz
or
out
aas
popf
int3
pop
xchg
rorb
mov
dec
lods
sub
imul
nop
jl
lret
std
lcall
mov
mov
add
sahf
cltd
pop
cld
pop
or
movsl
into
push
adc
insl
sub
sbb
push
dec
incl
xor
sbb
pop
sub
lret
std
add
mov
xor
inc
dec
xor
xchg
notl
jp
sub
cli
nop
test
push
cmp
cmp
jl
in
dec
aam
adc
cmp
outsb
sahf
ljmp
and
jl
inc
lahf
nop
sbb
dec
ds
and
inc
mov
xchg
xor
lea
arpl
mov
adc
bound
push
clc
and
add
and
ficompl
and
test
lock
jp
test
or
ds
adc
dec
icebp
outsl
stos
mov
mov
lahf
jns
or
cmpsb
leave
xchg
loop
xor
bound
sub
iret
mov
mov
pop
mov
adc
cmpsb
out
cli
push
cld
xor
leave
and
mov
rclb
fstpl
jbe
outsb
sbb
mov
mov
adc
in
jae
inc
dec
out
pop
clc
jle
out
pop
sub
or
movsl
pop
xchg
dec
push
mov
jbe
adc
mov
cltd
das
outsb
xchg
mov
xchg
test
outsl
dec
pop
mov
fidivl
nop
pop
add
or
pop
xlat
aam
jnp
outsb
jb
mov
fimull
icebp
and
cwtl
pop
mov
stc
or
sub
jnp
in
shlb
xchg
mov
rcll
sbb
sarb
mov
add
sub
pop
push
pop
fistps
int
pop
adc
dec
push
insb
sub
push
jns
stos
jae
push
mov
out
dec
addb
enter
inc
fstpt
mov
pop
or
cmpsl
dec
mov
mov
aaa
loope
dec
jp
push
mov
mov
je
dec
popf
faddl
test
cmpsl
and
adc
sbb
sub
lret
jge
mov
mov
int3
addr16
push
mov
xlat
movsb
cs
sub
mov
mov
sbb
mov
push
mov
xchg
push
dec
cmp
aad
sbb
mov
ret
xor
xchg
test
gs
inc
mul
and
push
test
mov
jl
inc
cli
stc
rclb
and
mov
inc
pop
adc
inc
jnp
cmp
adc
hlt
add
mov
push
push
cmp
push
add
insl
lock
push
add
lds
jmp
fs
xchg
push
xchg
test
ret
shrd
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
int3
ja
out
dec
movsl
mov
cwtl
sbbb
jmp
push
and
mov
adc
aam
aad
adc
out
out
xor
in
ficompl
jno
jnp
popa
jbe
jne
lret
rcll
ss
xor
scas
rcrl
or
cltd
mov
adc
xor
fidivrs
movsb
and
xor
push
xchg
jns
das
xchg
xchg
mov
or
lods
mov
ret
enter
shrl
dec
fstps
mov
pop
icebp
dec
cmp
ja
mov
ficoml
and
dec
push
dec
in
xor
bnd
jge
icebp
mov
mov
xorb
pushf
test
dec
xchg
pop
shlb
lock
pop
jo
enter
fisttpl
inc
pop
mov
jp
fstp
push
ret
ds
push
jne
xchg
fisubl
cld
adc
movsl
shrl
mov
pop
cmp
add
mov
inc
jmp
fucomp
outsl
dec
xor
inc
std
movsl
es
lea
push
pop
and
fbstp
arpl
pop
jb
pop
mov
jmp
ljmp
add
out
aam
bound
bound
dec
lret
aaa
dec
cs
sub
mov
rclb
inc
aas
arpl
cmpl
jle
fiaddl
call
xchg
rolb
mov
mov
cwtl
or
lcall
and
shlb
xchg
aam
dec
push
pop
adc
hlt
adc
cli
shl
in
shlb
and
aad
bound
inc
out
cmp
adc
mov
mov
or
notb
divl
cwtl
sbbl
mov
push
daa
mov
xchg
in
xchg
and
jmp
dec
fdivrs
adc
or
nop
adc
les
out
aas
sbb
addr16
loopne
dec
xor
fsubrl
push
insb
mov
cld
outsb
subb
xchg
sbb
lods
xor
adc
fcmovne
sbb
jg
mov
xchg
inc
popa
movups
fnstsw
int
insl
aad
sub
and
sahf
sti
lock
push
test
sub
jns
dec
adc
cmp
pop
push
adcb
ret
fisubs
mov
cmp
or
cmpb
pop
mov
mov
das
out
jnp
push
movsl
push
xlat
jae
mov
mov
fsub
mov
mov
inc
sarb
pop
cltd
xchg
pop
push
mov
cmp
int
test
movsl
jnp
ss
adc
mov
cli
push
or
leave
mov
jmp
mov
pop
xor
mov
mov
push
cmp
pop
pop
push
jne
fsub
dec
jo
icebp
stos
adc
mov
in
and
dec
cli
leave
push
xor
and
movsb
movsb
clc
jl
jne
pop
pop
jg
add
push
in
outsl
inc
movsl
test
or
fdivrl
and
push
sub
mov
mov
inc
or
and
pop
data16
sub
cmp
shrl
mov
ljmp
inc
add
adc
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
roll
xor
mov
les
mov
insl
lock
mov
pop
andb
mov
dec
orb
dec
dec
aas
loope
sbb
shlb
aas
in
mov
fst
hlt
and
in
jo
mov
popf
pop
mov
out
insb
mov
lcall
dec
repnz
adc
mov
mov
push
shl
jl
mov
ret
pop
adc
imulb
or
push
pop
pop
xchg
std
pop
mov
adc
lret
jae
mov
hlt
push
popf
add
nop
lods
popf
mov
imul
in
lds
jle
sub
adc
lds
xor
mov
into
jae
or
xorb
sbb
dec
in
sub
scas
cmp
pop
iret
std
icebp
ljmp
and
out
push
out
xchg
daa
sub
lea
pop
shll
cli
mov
inc
out
inc
inc
repz
cmpsb
jo
movsb
push
inc
pushf
loop
ret
or
mov
mov
mov
scas
popa
scas
sbb
fsubp
addr16
jns
xlat
ja
cmc
jle
test
xor
or
popa
lret
jmp
fdivs
sbb
nop
xchg
shll
jg
jle
imul
mov
xor
pushf
xor
dec
push
loope
push
or
inc
enter
mov
mov
inc
adc
lret
mov
lods
cmc
into
decl
inc
mov
enter
xor
mov
fnsave
sti
imul
aas
jg
sub
or
outsb
mov
inc
sub
xor
mov
sub
cmp
mov
cmp
dec
mov
and
loop
push
movsb
lahf
ljmp
mov
jae
ss
sti
mov
stos
sub
mov
push
xor
js
outsb
mov
in
lea
mov
mov
cmp
rep
mov
ss
jp
jle
iret
movsl
mov
insb
les
jmp
push
add
jg
in
scas
xchg
add
and
dec
xchg
sub
inc
popf
loopne
call
xchg
movlps
cmc
lahf
adc
inc
mov
mov
mov
int3
je
mov
adc
jnp
or
repnz
mov
cmp
aas
and
repnz
push
xlat
loop
lds
pslld
ret
mov
xchg
mov
pop
dec
mov
mov
int3
dec
lahf
pop
jmp
xor
jp
imul
xorb
arpl
xchg
sti
mov
jo
cli
stc
and
or
xchg
xchg
loopne
data16
ss
xlat
out
lcall
add
das
add
ret
push
sub
mov
mov
mov
mov
cmp
add
inc
cmp
enter
push
out
lcall
int
cmp
testl
push
in
xchg
divl
xlat
dec
inc
lahf
psadbw
mov
pop
push
in
daa
test
mov
jo
dec
aaa
outsb
inc
xor
mov
addr16
shll
addr16
or
push
insl
aad
mov
and
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
xor
jl,pn
push
js
clc
pop
out
fcomi
sbb
pop
aaa
fwait
mov
ret
mov
or
rorb
addl
test
mov
xchg
add
in
mov
fucomi
add
push
out
sub
push
jbe
les
mov
mov
xchg
mov
fld
imul
add
rcll
mov
xor
ja
or
pop
xchg
sbb
mov
and
shr
imul
loopne
adc
xchg
inc
cmp
imul
cmp
imul
cmpsb
cmc
rclb
das
xor
scas
jmp
out
frstor
addb
popa
sub
popa
fisttpll
sahf
dec
repz
test
pop
in
out
repnz
lods
fs
add
in
pop
insb
xchg
or
js
bound
cltd
negb
sti
xor
mov
daa
scas
push
test
adc
loopne
inc
inc
dec
jns
mov
rcr
dec
and
scas
adc
shrb
loope
test
nop
xor
xchg
mov
add
inc
popa
movsb
add
mov
sbb
inc
clc
jle
mov
jge
inc
or
sub
add
icebp
sub
sub
bound
add
scas
cmpl
and
and
mov
sbb
push
dec
mov
inc
or
and
push
add
decb
imul
inc
jge
movsb
and
inc
imul
dec
push
shrl
out
pop
mov
in
cmpsb
fldcw
fsqrt
pop
xor
cs
movsb
es
mov
adc
in
xor
in
mov
dec
les
mul
and
push
call
cli
mov
imul
pop
and
or
mov
push
push
sub
sbb
fldt
xchg
add
dec
je
jmp
jmp
dec
lret
adc
ds
aas
out
adc
cmpsb
in
sub
cs
aas
stos
lock
sbb
cld
cmp
push
jne
stc
mov
sahf
mov
mov
stc
gs
stos
mov
ss
mov
ss
sbb
dec
sub
in
int
insb
sti
adcl
sub
lret
es
xchg
inc
sub
ret
jno
in
mov
push
xor
fstpl
mov
pusha
cmp
push
inc
insb
aad
adc
call
and
ds
jg
ret
hlt
xchg
gs
std
mov
adc
pushf
test
mov
pop
jnp
jle
and
inc
and
cltd
sbb
inc
in
test
xchg
mov
stc
int3
add
test
push
lcall
cmp
xorb
mov
sub
pop
add
rol
cmp
in
ss
adc
xor
jne
cmpsb
std
cwtl
iret
push
or
xchg
or
clc
sbb
xor
jge
rcrb
add
mov
fs
cmc
and
iret
jl
push
lcall
repnz
int
fstl
fnsave
idivl
clc
out
pusha
or
dec
sbb
inc
rorb
enter
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
cmp
sbb
mov
les
fisttpl
mov
lods
iret
fldcw
mov
sbb
clc
pushf
sbb
xchg
pop
inc
cs
scas
shrb
loope
mov
scas
cltd
pusha
popa
je
scas
mov
xchg
xchg
pop
sub
mov
cmp
jno
pop
shlb
pop
rorb
ret
negl
jp
inc
pop
jns
mov
inc
fldl
mov
add
jge
or
or
je
pop
hlt
add
rolb
popf
fdivrl
xchg
popf
movsb
push
test
xchg
jns
mov
ret
fmuls
dec
adc
cmc
pop
jmp
xchg
iret
hlt
pop
adc
mov
mov
cmc
scas
call
xchg
cli
lea
add
insb
imul
xlat
sbb
mov
mov
andb
out
sahf
lea
mov
lret
loopne
push
fwait
mov
add
sub
je
xor
adc
and
inc
subb
inc
pushf
sahf
lahf
pop
xchg
repz
and
dec
or
inc
or
inc
in
imul
dec
fsubs
push
push
jge
fstl
or
scas
fisubs
mov
jb
negb
inc
push
sbb
mov
sarb
mov
dec
dec
lret
add
and
add
push
not
and
inc
pop
xor
or
xor
fistps
sub
rcl
add
mov
adc
sahf
dec
leave
xchg
cwtl
outsb
push
mov
and
or
cmc
in
jl
push
mov
outsb
push
icebp
fcomi
push
shlb
in
movsb
inc
lods
or
aaa
mov
jno
jns
mov
incl
cmp
test
hlt
insl
push
jno
das
repz
jecxz,pn
xlat
idivb
pop
aad
adc
scas
loope
xchg
rcll
cmp
std
je
ja
push
int3
iret
gs
sub
int
lahf
jb
dec
jmp
jno
xchg
je
jne
mov
ja
roll
insl
add
cmp
inc
in
or
lret
and
shr
idiv
imul
sbb
mov
pop
test
lds
fsubl
je
outsl
push
lret
mov
sub
jns
sti
jae
in
jmp
jmp
sub
scas
cmp
pop
imul
push
push
inc
inc
imul
mov
pop
or
ds
data16
popf
mov
loop
fsubs
mov
push
repz
cmp
cmp
xchg
jns
or
inc
in
or
dec
into
jb
sub
pop
dec
mov
daa
std
ja
inc
adc
inc
add
xchg
fstp
or
jns
mov
pusha
cmp
movsl
dec
out
fs
insl
add
pop
sbb
add
arpl
testl
mov
shr
jge
mov
mov
pop
dec
sub
push
inc
mov
add
outsb
mov
arpl
ror
loopne
add
fdiv
cmp
or
out
ss
das
xchg
es
fsubp
mov
sbb
pop
push
dec
push
fstpl
arpl
and
in
cmp
push
in
ret
sub
xor
lods
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
int3
bound
fnstsw
les
mov
jbe
push
push
cmp
fcmovb
into
ljmp
pop
sbb
and
movsl
pop
iret
jecxz
lahf
outsl
or
dec
jbe
mov
dec
jp
outsb
shll
ret
push
jp
jns
das
cmpsl
xor
stc
call
sub
test
sbb
xchg
in
sub
ljmp
test
mov
cwtl
sub
push
push
je
add
xor
mov
xchg
add
ss
or
sub
mov
mov
loope
add
add
dec
fstl
gs
fmul
sahf
jae
arpl
orl
inc
inc
loopne
adc
lock
js
lods
mov
adcl
push
pop
pop
mov
call
call
ljmp
xchg
fsub
popa
test
pop
stos
outsl
ja
cli
sbb
fwait
pop
dec
and
or
or
clc
ret
sbb
xor
lret
dec
push
movsl
cmp
xor
pop
push
ficoms
mov
leave
mov
mov
push
int
jecxz
sahf
loope
into
pop
mov
add
bound
mov
xchg
out
pop
cltd
insl
adc
cmp
adc
cmp
xor
repnz
call
push
pop
dec
xchg
out
jge
stos
adc
xor
pop
gs
jge
in
std
pop
mov
in
cmpsb
jo
xorb
mov
add
jg
orb
sti
add
outsb
insb
fldl
xlat
daa
cmp
sub
ljmp
xor
adc
das
and
mov
lea
fwait
or
xchg
cmp
sbb
pop
sbbb
adc
sbb
pop
and
arpl
and
nop
iret
jmp
cmc
or
mov
jmp
jmp
call
gs
mov
out
inc
sub
xchg
xchg
mov
call
cmc
push
outsl
mov
repz
cmpsb
cmc
push
std
leave
or
mov
fldt
mov
vmovsd
imul
or
cmp
cmpsl
xor
lahf
mov
pop
in
rcr
aam
dec
es
cmp
sbb
mov
xchg
sub
cs
cli
push
bound
ljmp
xchg
push
fdivrs
lea
pop
imul
push
into
roll
push
sbbl
mov
int3
stos
dec
sbb
mov
jl
and
jle
pusha
loope
xchg
out
cmp
cs
daa
dec
jae
xchg
lcall
xchg
push
sub
ljmp
sub
jns
lret
push
jns
dec
or
dec
mov
sahf
lods
jo
jecxz
cmpsb
and
adc
ret
jbe
iret
adc
lods
xor
mov
sub
lret
jp
xchg
shll
mov
and
ljmp
cmp
lock
imul
mov
rolb
sti
push
xchg
sbb
ja
jg
pop
mov
in
pop
dec
add
mov
xor
pushf
jne
dec
mov
mov
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
and
jecxz
adc
mov
ja
lret
fwait
hlt
lahf
xor
and
stos
xchg
call
nop
stos
inc
roll
push
fimull
jg
scas
mov
loope
mov
bound
jne
pop
xchg
cmp
mov
pop
cltd
decb
clc
fcmove
stos
jns
mov
jge
fldl
fnstsw
imul
push
scas
ds
call
arpl
sbb
shlb
stc
add
addr16
aaa
push
push
clc
shrl
cmp
out
jle
and
pushf
sti
pop
xchg
and
dec
in
out
inc
sub
xchg
mov
int
cmp
xchg
cmp
cmovs
xlat
mov
jge
out
sub
sbb
stc
pop
xchg
sub
lea
mov
rcll
sti
sbb
inc
push
inc
fistpll
push
je
xor
jge
jbe
pop
sub
mov
outsb
and
movsl
int3
jb
ss
mov
mov
cmc
inc
mov
mov
push
ret
jo
and
cwtl
mov
in
imul
out
int
sti
sub
insl
ud2
js
in
notl
xchg
xchg
dec
pop
les
aaa
mov
jl
and
push
add
jbe
icebp
xchg
dec
xor
mov
shll
iret
jge
sbbl
push
repz
dec
mov
into
aam
mov
mov
add
adc
nop
imull
or
mov
pop
hlt
xchg
xchg
psubsw
mov
fisubrl
bound
adc
xchg
xor
mov
imul
jle
cmc
xor
sub
cmp
xor
fnstcw
push
jecxz
xorb
and
jl
pop
nop
mov
and
repnz
cld
xor
flds
loopne
adc
xor
or
mov
inc
mov
imul
pusha
xchg
fisubs
jmp
mov
pop
xchg
jnp
jg
adc
fistpll
ret
shll
xchg
dec
mov
push
cmp
sbb
pushf
jne
nop
mov
lods
dec
inc
in
dec
inc
rorb
mov
in
fidivl
cmc
fdivl
pusha
aad
ljmp
scas
incl
mov
lahf
cmc
mov
jle
ja
les
lods
push
sbb
cltd
xchg
cvtpi2ps
roll
dec
jbe
add
inc
pop
pop
insb
movsl
adc
int
mov
negb
jae
hlt
lcall
jb
sarl
and
call
sar
outsl
or
rorl
sub
jb
enter
sbb
inc
xorl
inc
mov
mov
cmpsl
push
scas
lcall
push
adc
repz
rolb
jp
mov
add
repnz
fndisi(8087
subb
inc
xor
lret
loop
mov
inc
mov
cmp
dec
sub
xor
fnstenv
shlb
sub
jnp
sarb
sub
dec
pop
add
test
cli
les
xor
fwait
clc
jbe
mov
stos
and
xor
xor
int3
lahf
pop
xchg
mov
js
push
mov
fiadds
push
mov
std
jno
decl
loope
les
sahf
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
lds
lcall
les
xchg
add
enter
in
xlat
scas
enter
cmp
popa
jns
jle
sub
mov
cmp
mov
ret
or
mov
xchg
or
cwtl
rcrb
jns
xlat
sub
mov
mov
xchg
mov
mov
outsb
mov
je
std
hlt
les
std
or
inc
jo
sub
sbb
rolb
subb
mov
mov
mov
or
dec
add
jb
in
mov
jne
dec
rclb
adc
ficoms
xlat
jle
rclb
pusha
push
mov
or
inc
int
sti
mov
arpl
mov
cltd
loopne
push
icebp
adc
lahf
mov
sbb
cmc
cmc
dec
pushf
mov
push
cltd
adc
fwait
fwait
add
notl
mov
sbb
loop
push
mov
inc
cmp
andb
lock
lds
shr
cmc
shl
pop
and
mov
push
cmpsl
int3
imul
pop
pop
add
jno
push
out
lret
out
sub
rcl
pop
pop
loopne
mov
cli
in
cs
inc
xor
lods
xor
stos
int3
xchg
dec
mov
push
pushf
lods
rol
cmp
xchg
sub
adc
push
outsb
mov
addr16
sub
adc
lret
lock
xor
mov
sub
out
mov
dec
in
mov
in
idivb
sahf
lds
sub
loop
cmp
mov
jecxz
inc
mull
icebp
push
or
insl
aam
jg
shrb
ror
icebp
push
dec
aad
lods
shlb
xchg
mov
add
adc
push
sahf
pop
xor
int3
ficomps
decb
and
xor
in
stc
ss
jnp
xchg
jp
int3
pop
loope
sub
pusha
push
ljmp
sbb
ljmp
lret
flds
xor
inc
add
pop
stos
ret
mov
pop
aad
lea
mov
jmp
bound
mov
jle
int
int
add
push
sub
push
push
pop
xor
test
int3
test
jae,pn
pushf
add
lds
add
mov
push
mull
outsl
movsl
dec
stos
in
sub
pop
inc
aad
mov
cmc
cmc
cmp
mov
movsl
mov
js
xchg
movsl
loope
jne
aas
and
lret
pop
fimull
mov
in
lods
aaa
call
gs
inc
in
out
jo
xchg
push
xchg
inc
enter
mov
insl
add
ret
in
inc
cli
pop
repz
movsb
jno
pop
inc
icebp
pushf
cmc
inc
pop
push
sub
loop
adc
push
xchg
cli
xchg
imul
subl
fdivrl
pop
addl
daa
std
inc
enter
mov
rol
dec
lock
or
push
xor
sub
jne
or
adc
sbb
mov
adc
push
mov
xor
mov
cmp
dec
loope
xor
test
cli
les
cld
out
sti
dec
adc
out
fadds
mov
push
jmp
sub
adc
sbb
push
pop
xchg
and
clc
into
and
je
popf
mov
pop
cmp
stc
dec
pop
sbb
or
mov
dec
not
jmp
int
mov
sbb
mov
shrl
pop
mov
mov
fwait
xor
iret
mov
push
rcrl
mov
xchg
jle,pt
jg
ds
adc
repz
paddsb
lcall
jnp
adc
jae
xchg
rol
inc
sbb
pop
mov
sbb
loopne
mov
dec
notb
add
pop
lock
loope
or
sahf
fstpl
gs
aam
loop
dec
cmpsb
xor
sub
add
psrlq
dec
lret
push
test
sbb
xchg
xlat
int
ljmp
or
and
inc
xor
sub
ror
pop
xchg
sub
dec
test
add
jbe
ss
outsb
xor
pushf
or
mov
sbb
sub
mov
jb
stos
sbb
cs
incl
xorl
inc
cld
stc
pop
inc
ret
xchg
pop
shll
jns
push
gs
pop
mov
xlat
aaa
or
mov
pop
mov
mov
and
or
mov
inc
mov
and
fsubrs
sbb
mov
add
sbb
push
cmpsl
repz
aam
push
rclb
jg
xlat
cltd
lods
jge
xchg
jnp
adc
dec
pushf
mov
lock
push
mov
fisubrs
push
xchg
outsl
pop
xchg
jbe
incb
cmp
ss
pushf
pop
mov
fdivl
inc
leave
adc
fildll
push
cltd
outsb
adcb
jo
sbb
xchg
mov
inc
sub
subb
add
in
jl
std
iret
iret
pop
sbb
fs
pop
xor
iret
jmp
or
pusha
mov
xchg
hlt
mov
mov
addl
mov
mov
hlt
mov
fcoms
mov
xchg
rclb
fdivr
push
pop
scas
adc
sub
sahf
ret
rol
lcall
xchg
dec
aaa
das
xchg
cmpsl
ljmp
push
add
ret
push
mov
ret
push
jecxz
add
mov
mov
testl
sarl
nop
cmp
divb
adc
xchg
adc
jmp
add
les
pop
daa
pop
sarl
insl
gs
lahf
mov
jae
leave
pop
in
inc
in
insl
pusha
imul
mov
dec
mov
addr16
jnp
loopne
or
out
in
sbb
cmpsl
rcrl
xchg
mov
dec
cmp
inc
shrb
mov
lds
arpl
fcomps
push
fcom
fstps
cmp
mov
mov
cs
jge
ljmp
and
mov
xor
sub
jns
xchg
mov
sarb
and
iret
push
shll
jnp
test
lret
jmp
inc
fwait
jle
cmc
stc
sbb
sub
rcl
push
ss
cli
mov
out
into
push
inc
jle
sub
fisubs
mov
movsb
sub
push
lea
into
jg
hlt
lods
stos
enter
push
aas
add
aas
jne
dec
daa
jg
sbb
iret
cmp
mov
jp
xchg
or
cmp
shrl
fistps
jmp
jle
je
nop
mov
mov
cs
mov
adc
dec
dec
iret
or
and
mov
aas
inc
fsubs
and
lret
dec
es
cs
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
push
or
mov
les
fnstcw
cmpsb
cvtps2pd
sbb
dec
in
xor
popf
scas
jg
and
rcrb
mov
or
bound
jo
cwtl
gs
pop
cli
pop
mov
out
and
push
scas
xchg
mov
loopne
enter
mov
sub
jp
or
mov
adc
jne
inc
js
out
clc
cmpb
pop
dec
push
and
adc
or
push
inc
sbb
lret
mov
icebp
adc
cmp
cmp
sbb
mov
xchg
cmpb
add
lcall
mov
test
shll
mov
and
iret
pop
in
movsl
xor
xchg
adc
add
jmp
cmpsb
add
jmp
shl
js
mov
out
mov
imul
andb
xor
xchg
rclb
pop
daa
jg
in
pop
int
fnstsw
cmp
push
cmp
push
fs
xor
mov
inc
sbb
cmpl
cmpsb
in
fld
push
xor
mov
and
out
or
lahf
push
push
negl
sbbl
adc
adc
cld
xor
pop
dec
psubsb
fcomip
pop
inc
pop
add
and
mov
add
jne
mov
repz
mov
xor
cmp
dec
out
add
and
imull
fwait
jne
insb
jecxz
clc
ficompl
sub
imul
pop
mov
fisubrs
mov
mov
add
das
orb
popa
out
sbb
mov
js
mov
cld
inc
push
push
cmp
add
shlb
ja
repnz
insb
adc
dec
sub
mov
push
enter
test
pop
push
ds
mov
stos
pop
dec
test
test
nop
pop
les
lret
mov
test
dec
ret
notl
push
aas
sub
loop
loop
dec
cmp
sbbl
or
jne
in
fldl
sbb
jnp
jp
sar
sarl
jo
aaa
sub
nop
cmp
or
rorl
insl
cwtl
bound
or
movsb
xchg
cmpsl
dec
iret
mov
std
add
pop
push
sbb
rorb
or
mov
gs
mov
mov
adc
outsb
xchg
addr16
sbb
push
mov
fildl
mov
or
clc
mov
fidivl
test
add
mov
sub
adcl
and
loope
or
sub
xchg
push
inc
cmpsl
cwtl
push
pop
jp
cs
jbe
adc
mulb
sbb
push
arpl
push
adc
in
dec
sub
mov
mov
pop
ja
push
or
popa
addr16
data16
cmp
xchg
ss
or
ljmp
lret
adc
cmp
cwtl
rclb
sarb
mov
out
stos
inc
and
jbe
mov
das
cmp
in
push
stos
dec
xchg
jecxz
cmpl
clc
lods
rcr
push
add
pop
movzbl
mov
cmp
push
int3
js
fcomps
mov
fsubl
xor
push
dec
cmpsb
add
sub
push
clc
inc
loope
int3
xor
enter
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
ds
jb
nop
mov
les
les
lcall
xor
and
not
adc
lahf
dec
leave
jp
ja
xchg
rolb
mov
adc
lods
jmp
push
repnz
lods
xchg
iret
sbb
mov
loopne
adc
inc
dec
jge,pt
cmp
lock
add
dec
jae
into
pusha
sbb
mov
push
das
dec
test
icebp
cmpl
add
ficompl
fcmove
pop
sub
sarl
xor
jg
lret
andb
and
sarb
sbb
xor
fimull
adc
call
xor
push
lock
pop
sbb
mov
and
out
in
aam
sub
fs
sbb
or
mov
negb
repz
and
aam
out
push
pushf
mov
cltd
inc
call
sub
mov
jl
add
lahf
aad
fstpl
int
mov
adc
clc
and
sahf
jmp
pop
jae
mov
into
dec
push
gs
gs
into
inc
cmc
mov
pop
daa
fidivs
mov
jno
ja
adc
push
and
call
adc
or
xchg
scas
dec
lret
les
adc
add
jb
xchg
out
sti
mov
sbb
int3
fisubrl
adc
mov
int
jae
test
andl
ja
jmp
es
call
xchg
rcrb
jb
pop
mov
pop
mov
lahf
jno
xor
mov
popf
cs
out
push
pop
enter
std
xchg
movsl
inc
and
jne
fld1
ret
in
adc
mov
xor
jle
sbb
mov
or
jnp
daa
pop
sub
xchg
mov
add
imul
outsl
loop
mov
arpl
mov
sub
pop
xchg
mov
inc
push
cli
push
outsb
mov
mov
setne
sbb
call
daa
lret
aam
negb
sbb
jg
enter
loope
add
cmp
sbb
cmp
mov
in
fnstsw
sbb
cmp
and
rol
push
mov
mov
lock
leave
cmp
fcmovne
dec
mov
and
test
and
mov
ret
lods
xchg
fwait
mov
xor
push
dec
test
iret
inc
insl
push
jge
sbb
daa
jns
pop
iret
mov
into
shlb
adc
je
xorb
imul
sub
pop
mov
in
arpl
push
lcall
hlt
in
cmp
xchg
jne
xchg
add
sub
jno
add
jno
int
les
push
pusha
mov
arpl
stos
or
dec
adc
mov
push
fidivrs
stc
push
hlt
jmp
pop
das
mov
xor
in
xchg
insl
mov
or
push
mov
inc
sbb
inc
es
pop
pop
jmp
aaa
jecxz
cmpsl
insl
clc
rcrl
xchg
mov
call
nop
pusha
xchg
test
jnp
clc
xorb
shrl
push
sub
negl
pop
popf
pop
jl
mov
call
icebp
ja
jns
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
aam
lock
mov
les
ret
and
test
or
sub
inc
sub
inc
test
mov
lock
shrb
add
jo
nop
xor
mov
dec
rcrl
insb
enter
mov
sub
inc
and
mov
mov
xor
adc
mov
fbstp
outsl
sbb
sub
and
cmpsl
pop
into
in
or
xchg
push
jae
mov
mov
mov
int3
sti
rcrl
and
mov
leave
add
fucomi
jb
jnp
mov
and
mov
jg
jecxz
mov
mov
xlat
sahf
in
mov
cltd
int
pop
inc
add
xor
and
push
stos
xor
sub
mov
dec
add
aad
in
cmp
mov
rorl
xchg
xor
xor
movsb
test
jl
out
jno
outsl
xchg
shl
jg
in
push
loopne
popa
jl
imul
daa
cmp
push
scas
adc
imull
arpl
push
jnp
loopne
xchg
repz
fwait
and
push
adc
cmp
adc
jle
arpl
cmp
lcall
out
dec
adc
add
dec
leave
icebp
add
cmp
sar
test
test
outsb
in
fxam
dec
stc
mov
add
or
dec
jle
addr16
mov
int
mov
les
cmpsl
loopne
mov
pop
dec
mov
push
xor
xchg
mov
adc
xor
addb
fcoml
dec
rcrl
add
cmp
fnsave
adc
addr16
pop
cmpsb
out
aam
icebp
cmp
add
jle
movhlps
jnp
sub
stos
rolb
mov
pop
or
or
pop
repnz
mov
shll
mov
notb
push
ja
or
xchg
push
stos
gs
xchg
std
arpl
add
aas
xchg
mov
fsubp
or
cwtl
loop
insb
shlb
and
aas
pop
test
jp
jg
ret
loop
fs
in
ds
andl
jmp
add
cmp
decl
push
mov
adc
dec
adc
test
pop
jmp
dec
sub
fcmovbe
xor
push
out
iret
dec
pop
enter
lret
fisubs
es
lock
out
sbb
and
hlt
cmp
add
mov
jmp
or
or
lret
and
test
or
cmpb
dec
in
insb
mov
inc
mov
push
cmc
xchg
add
into
jb
jge
out
loopne
pop
mov
lods
mov
popf
push
xchg
leave
adcl
cmp
call
sarl
and
enter
sub
inc
xor
pop
sarb
fs
sub
and
repz
xchg
or
out
jns
andb
pop
lcall
mov
xor
pusha
adcl
sbb
sub
fisttpl
fdivl
mov
clc
sub
loope
add
pop
xchg
mov
pop
mov
and
cwtl
andb
daa
push
movsl
pop
lea
sub
sbb
adcl
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
sarl
les
fildl
jns
fchs
imul
sbb
das
adc
xchg
push
leave
in
stos
pop
add
push
sbb
lock
mov
fisubl
icebp
mov
add
fldt
fcomp
jg
mov
or
bound
rcll
in
js
sbb
test
cltd
mov
sub
inc
jno
dec
jle
out
sbb
dec
xchg
testl
ret
movsb
add
mov
roll
sbb
fwait
adc
int3
adc
pop
lods
and
shl
das
jb
les
add
mov
imul
ficoml
xor
dec
mov
cmp
lcall
subb
ret
dec
push
pop
add
xchg
insb
jne
loopne
pusha
insb
add
sbb
xchg
pop
push
pop
aaa
pop
out
cmp
cmp
push
cmp
or
push
cmp
int
sti
int
pushf
dec
or
mov
lahf
pop
pop
repz
insb
lods
jbe
loope
or
out
mov
cmc
lea
mov
and
clc
out
fs
jg
loopne
hlt
mov
and
sbb
push
push
les
scas
push
test
outsl
fisubs
ds
add
cmpl
jmp
xor
inc
std
sahf
dec
inc
lret
dec
cmpsl
push
mov
xor
lret
ror
test
repnz
push
cmp
dec
dec
aaa
in
cmp
inc
lahf
addr16
adcb
popf
lahf
mov
insl
dec
sbb
lock
add
dec
shrb
xchg
sbb
ficomps
shrl
lret
jp
mov
and
outsb
loop
pop
notb
ja
ljmp
add
pop
call
insl
and
lods
repnz
insl
mov
mov
jmp
sbb
cmp
icebp
push
xchg
push
cmpsl
inc
or
xor
pop
jnp
mov
pop
fadds
enter
rcrw
and
inc
jbe
in
pop
ss
jp
arpl
adcb
leave
or
out
cmp
in
arpl
mov
jb
call
or
lcall
aad
xchg
adc
lea
sub
inc
inc
and
add
xchg
add
and
pop
arpl
gs
inc
jbe
arpl
jbe
imul
stc
rol
loopne
cmp
jbe
sbbl
inc
les
xchg
stc
dec
pop
xchg
sbb
cmp
xor
outsl
dec
loope
ja
lret
pop
fisubrl
xchg
cmpsl
push
pop
or
xor
popa
sbb
lea
mov
pop
sarb
adc
mov
pop
rolb
mov
rol
aad
xor
lea
xchg
push
mov
imul
and
and
adc
test
mov
dec
lahf
pop
dec
insb
lea
fiadds
jb
movb
mov
adc
pop
mov
jl
sbb
dec
aad
imul
repz
xor
std
adc
jmp
pop
stc
test
nop
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
dec
popf
fstl
mov
jne
call
cmpsb
popf
fisubrs
mov
repz
flds
cmp
jecxz
mov
fs
das
pop
popf
sub
cmp
jmp
stc
lcall
test
test
loope
mov
adc
ret
mov
and
adc
xchg
pop
mov
sub
jmp
sbb
int3
xor
pop
leave
ret
fldz
fldt
mov
das
xor
icebp
das
and
aam
daa
sbb
inc
lods
lds
xchg
iret
cmp
or
sbb
loopne
ret
cmc
sbb
out
ret
dec
pop
or
xor
lret
aad
gs
dec
push
mov
roll
mov
addb
ja
das
stc
add
or
pop
inc
mov
addr16
fsubrs
pop
ljmp
jp
les
add
xchg
test
push
dec
mov
iret
xchg
in
jb
mov
rclb
fisubl
mov
mov
sub
push
fwait
sbb
add
int3
leave
cmp
cmpsl
test
inc
adc
pop
mov
mov
xchg
repnz
sub
inc
adc
sub
setbe
jle
ja
mov
je
in
insl
clc
cmp
subb
jge
adc
mov
outsb
faddl
movsl
xorb
sub
sub
push
psraw
inc
push
mov
jnp
xchg
sarb
inc
sbb
mov
xchg
mov
push
jno
in
mov
or
inc
mov
sbb
mov
in
aam
ljmp
mulb
into
jae
dec
pop
mov
cmc
sub
add
mov
outsb
loop
repnz
dec
sbb
sub
mov
lret
stos
or
stc
lea
out
jb
push
arpl
ljmp
add
inc
test
pop
xor
jb
adc
jo
add
push
cltd
ret
aas
sbb
dec
mov
test
sbb
pop
adc
and
sbb
add
sbb
movsl
push
and
aad
mov
xchg
or
push
clc
xlat
pushf
dec
mov
push
mov
int
adc
cli
adc
movsl
push
sahf
dec
sti
or
ljmp
pop
xchg
add
icebp
and
loope
inc
dec
leave
dec
push
or
fnstcw
xchg
sbb
in
xchg
mov
pop
mov
sbb
fsubrp
in
enter
inc
cmpsl
pop
jp
test
sbb
dec
out
xor
hlt
mov
les
dec
cmp
pop
pop
mov
cmp
and
adc
jl
lock
call
popa
arpl
fbld
int3
push
pop
mov
loopne
sbb
sub
pop
ja
dec
xchg
or
cmp
jp
les
mov
insl
into
test
subb
in
rcrl
sbb
mov
leave
insb
int
cmpsb
xor
and
out
stos
dec
icebp
stos
mov
jb
ja
xchg
dec
imul
jae
aam
mov
sub
inc
outsb
scas
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
testl
es
or
rol
xchg
mov
scas
or
cmp
ret
fwait
push
es
bound
mov
sub
xchg
rcrb
stos
inc
push
xchg
or
es
mov
xchg
cmp
pushf
push
adc
adc
les
aam
outsb
jge
pusha
adc
mov
test
cmpsl
pop
pop
mov
sbb
cmp
sbb
pushf
lret
cli
mov
mov
xor
inc
push
insl
jmp
lock
sbb
aaa
jecxz
repz
sbb
mov
push
sahf
pop
fcomp
cmp
inc
out
movsb
adc
mov
or
addb
popa
fstl
inc
inc
push
sub
push
fwait
repnz
inc
je
sbb
leave
jl
sbb
jns
stc
cld
pop
or
sbb
out
or
cmp
test
jns
jge
mov
movsb
sbb
or
jb
imul
mov
out
lds
cmp
cmc
jge
adc
push
push
sub
subl
ss
inc
and
push
dec
push
push
mov
stc
mov
push
xlat
push
notl
inc
lods
push
and
and
and
fwait
sub
scas
mov
xor
jns
dec
add
xchg
mov
lcall
pop
hlt
leave
xor
je
insl
dec
mov
push
repz
rorb
lret
and
xchg
cli
xchg
cmc
ljmp
ds
scas
jecxz
lret
adc
stc
push
push
fld
cmp
repnz
add
js
xchg
and
pop
stos
push
jp
inc
fbld
or
test
adc
scas
and
mov
bound
int3
mov
dec
aam
push
popa
mov
in
aam
xchg
arpl
ljmp
ss
test
adc
sub
pushf
mov
cmp
iret
xor
int3
pop
rorb
cmp
stos
jae
mov
arpl
and
jp
push
shll
pop
femms
je
decb
stos
ljmp
ss
pop
lea
xor
jg
mov
mov
or
mov
push
in
adc
pop
rolb
mov
adc
and
mov
stc
hlt
subb
xchg
push
mov
xlat
addl
sbb
inc
inc
pop
fstl
or
in
imul
push
cmp
aaa
or
call
testb
sbb
xor
adc
push
in
dec
outsb
jne
outsb
and
arpl
into
jmp
xchg
dec
insl
mov
push
mov
and
lds
dec
outsl
imul
mov
dec
mov
outsl
cmp
jl
jl
popa
lahf
outsl
in
sbb
mov
rcrb
and
dec
outsl
adc
cmp
sbb
mov
mov
js
adc
xchg
pop
stos
xchg
imul
lea
stc
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fucomp
ret
outsb
fnstsw
les
mov
aad
mov
sub
outsb
enter
pusha
adc
movsl
xor
icebp
sub
ret
pop
sbb
lds
pop
test
push
cld
push
mov
iret
dec
outsb
rorl
jmp
mov
sub
adc
add
bound
fwait
test
adc
ret
cmc
popa
push
gs
inc
lret
mov
in
mov
pop
cmp
loopnew
cld
repnz
aam
neg
pop
outsl
loopne
mov
cmc
adc
outsl
addr16
adc
xchg
das
push
dec
sbb
adc
mov
jp
fisubrl
cmp
subl
stos
mov
daa
or
mov
in
fldenv
popa
daa
in
mov
cmp
xor
xor
add
in
sbb
adc
loopne
jbe
cld
and
pop
pop
lret
outsb
xchg
xor
sbb
mov
lock
dec
movsl
add
movsb
mov
bound
fsubs
shll
jnp
adcb
adc
add
test
push
insb
add
push
dec
and
mov
js
lret
pop
jb
movsb
and
ss
leave
pop
das
test
inc
ficoms
fldt
insb
mov
xchg
and
into
cld
imul
jae
dec
or
pop
popf
mov
xlat
xchg
push
rcrl
mov
add
fwait
int
xchg
pop
dec
push
pop
adc
ficomps
mov
cmp
pop
ss
jge
cmpsb
inc
mov
fsub
out
popa
hlt
dec
mov
in
es
test
push
aam
enter
cmpsl
dec
xlat
and
mov
xchg
sbb
sub
inc
mov
pop
pop
fdivrs
out
shl
shr
test
mov
adc
outsb
jmp
dec
hlt
mulb
cmp
push
cmp
mov
jo
xchg
adc
nop
push
mov
bound
dec
pop
cmpsb
lods
mov
jne
push
inc
xchg
inc
lods
push
push
mov
hlt
and
nop
sbb
add
xor
je
shll
adc
in
xor
push
pop
loope
fisubrl
mov
adc
mov
test
inc
sbb
ds
aam
mov
out
lret
out
mov
push
outsb
push
jb
inc
sub
cld
std
sbb
fidivl
cmp
test
jbe
cmc
adc
shr
ss
push
hlt
add
jno
les
xor
jmp
out
and
loope
stos
stos
shll
invd
in
jmp
ret
jnp
iret
addb
and
cmp
test
pop
xchg
mov
mov
xor
xchg
pop
ljmp
add
xchg
push
xchg
aad
push
jb
xchg
jno
xor
add
and
in
in
andb
dec
test
cmc
or
sbb
push
mov
xchg
sbb
ret
call
daa
sbb
and
lea
pushf
jl
insb
xor
jle
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fldl
iret
nop
mov
les
les
aaa
and
je
stos
push
xchg
shl
lods
pop
push
leave
pop
daa
sub
xor
mov
lcall
jle
mov
jecxz
mov
fwait
push
nop
pop
pop
rcrb
out
test
in
push
and
or
fxch
int
test
out
pop
adc
and
int3
test
lret
pop
ljmp
mov
xor
xor
jmp
jo
das
sbb
mov
dec
jbe
out
in
push
cmp
dec
stos
push
add
loopne
sbb
into
adc
test
inc
xor
adc
cld
fwait
leave
xor
mov
les
add
jae
cmp
mov
aam
mov
fisubrl
nop
adc
jmp
sbb
sub
not
jge
xchg
imul
fwait
lret
mov
mov
mov
xor
xchg
loopne
mov
roll
jnp
push
test
mov
stos
rcll
ret
loop
sbb
popf
sbbl
inc
pop
mov
imul
push
sbb
jg
mov
enter
in
dec
xor
int
jmp
push
or
push
adc
mov
cltd
mov
jge
cmpsl
push
enter
jge
mov
pop
pop
mov
jmp
jle
pop
jb
rcrl
mov
jle
imul
adc
dec
dec
adc
cmp
jle
push
cmpsb
xor
jno
sbb
push
dec
push
sub
add
pop
repz
addr16
popf
add
mov
xchg
setb
mov
mov
int3
sbb
loope
aam
mov
xlat
mov
mov
das
loop
das
xchg
lret
lock
and
mov
adc
push
sti
fbstp
cmp
jg
pop
dec
imul
mov
in
jne
or
mov
sub
lret
je
jne
mov
cs
iret
lcall
leave
cltd
roll
cmc
test
aam
in
clc
cmp
xchg
mov
rclb
jb
jno
jp
cmp
dec
int3
fwait
push
and
jl
inc
adc
inc
imul
mov
in
out
loop
jo
cli
je
mov
mov
push
fwait
adc
dec
call
lds
sahf
sarl
xor
in
jb
jns
push
jb
add
test
imul
ret
sbb
add
int
mov
pop
andl
xchg
sub
add
icebp
xchg
mov
fildll
nop
fcmovb
daa
shld
xor
outsl
int3
cmp
icebp
arpl
push
pushf
aaa
cwtl
inc
pop
lcall
add
out
sbb
lcall
dec
fcomps
movsb
hlt
dec
pusha
pop
in
pushf
lret
testl
rolb
insb
jp
jg
cmpsl
cmpsl
add
xchg
add
xchg
mov
mov
cmp
xchg
sbb
mov
lret
movsb
xchg
loop
icebp
cwtl
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
call
pop
mov
mov
jno
insl
aad
rcl
jnp
xchg
inc
dec
mov
filds
subb
fs
sbb
cli
dec
jg
cld
and
test
mov
scas
mov
jmp
add
xchg
sbb
call
nop
in
pop
sub
sti
jnp
xchg
sub
std
sbb
call
outsb
xchg
cmp
jecxz
pushl
mov
dec
fists
jg
push
les
mulb
cmp
jno,pn
loope
imul
aam
jno
jnp
sub
in
popf
iret
imul
and
enter
bound
xor
loope
pop
pop
fcmovnu
dec
lcall
outsl
ret
icebp
jmp
lea
pop
stos
negl
mov
mov
nop
sbb
add
mov
mov
shlb
js
std
clc
or
out
popf
inc
push
hlt
test
cmp
dec
sbb
dec
and
test
jne
ds
sbb
mov
xchg
dec
sub
lcall
xor
sbb
fistl
fs
xchg
add
dec
mov
clc
pop
fdivs
frstor
lcall
es
out
push
pop
movsb
cs
test
pop
mov
adc
dec
adc
fildl
mov
mov
test
rclb
out
inc
sbb
sbb
test
call
cmp
or
leave
sar
xor
jp
mov
lret
mull
push
mov
sub
add
push
pop
or
or
es
push
pop
or
cmpl
outsl
sbb
pop
stos
mov
sbb
mov
ja
jb
pop
adcl
stc
cmp
dec
mov
shr
jge
mov
dec
loop
cmp
or
test
mov
movsl
fstpl
and
and
cwtl
fldl
hlt
xchg
dec
mov
xchg
pop
jl
xchg
scas
cmp
fs
add
mov
aaa
sarl
lods
notl
pop
dec
repz
adc
mov
cmpsl
and
adc
int3
ret
in
xor
push
fwait
loop
cmp
dec
andl
mov
outsl
test
inc
scas
pop
and
insl
mov
aad
int
and
xor
push
push
inc
gs
lcall
int
sub
sub
and
push
jl
dec
lods
fdivl
mov
out
fwait
cmc
js
in
dec
jnp
fwait
sub
push
fisubs
inc
aam
sub
rep
add
cmc
arpl
jb
repz
rcrl
push
out
cwtl
jnp
insl
jg
mov
dec
imul
adc
push
dec
push
int3
add
and
divl
cld
xchg
xor
shll
rcr
bound
or
dec
inc
cmpsb
jae
jae
stos
or
sti
sbb
add
xchg
xchg
stos
and
in
mov
push
xchg
xorb
and
xchg
lock
jge
ljmp
mov
pop
xor
xchg
stos
push
push
mov
mov
push
pop
outsb
icebp
dec
stc
movsb
data16
or
adc
aam
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
shll
les
rorl
addr16
push
movsl
sbb
mov
or
mov
lods
inc
add
jnp
ror
xor
sbb
mov
cmovbe
add
aas
outsl
xchg
test
lret
mov
and
cli
or
add
fmuls
mov
scas
mov
dec
pop
pop
mov
xor
fdivl
in
inc
mov
cwtl
xor
cmpsb
aam
dec
jo
jae
cmp
xor
sub
fisubrl
mov
gs
inc
adc
cmp
dec
imul
movsb
cmp
leave
push
icebp
xlat
roll
ds
adc
popf
jecxz
subl
sarl
dec
fisubs
negl
pop
adc
out
mov
dec
jae
ljmp
orb
sub
inc
push
jb
sub
leave
scas
add
push
lret
inc
repnz
or
adc
xchg
in
shrb
shl
add
xor
lock
vsubps
cli
jns
push
push
insb
add
sahf
gs
mov
xor
insb
rorl
cwtl
icebp
out
add
mov
dec
int3
pop
aas
xchg
nop
xlat
shl
add
ljmp
mov
loope
iret
xchg
shll
jmp
inc
sbb
mov
out
dec
dec
xor
jne
cltd
inc
in
call
sub
aad
jmp
dec
mov
in
fisubs
je
mov
pop
mov
lods
push
in
push
pop
lret
sbb
lds
in
cmp
lcall
subb
pop
adc
jge
or
inc
js
adc
mov
mov
xor
stos
cs
xor
sub
insb
and
dec
adc
flds
movsb
aad
mov
jo
xchg
loopne
mov
dec
push
sub
or
jnp
ss
in
jmp
sub
pop
dec
add
mov
adc
sti
xor
pop
xchg
mov
xor
mov
xor
lds
cmp
std
sbb
or
sub
arpl
sahf
flds
mov
mov
sbb
dec
fsubrl
inc
push
mov
adc
inc
dec
inc
stos
or
jg
add
fnstenv
add
fbld
pop
or
adc
fmul
or
sub
jp
mov
dec
lods
push
addl
test
mov
push
nop
cmc
inc
add
pushf
or
mov
adcb
sub
add
mov
gs
xchg
and
ds
and
sbb
push
insb
psraw
mov
mov
ret
outsl
mov
sub
mov
mov
jmp
idivb
mov
adc
sub
leave
jmp
adc
dec
popl
xchg
jecxz
jb
cmp
xor
addr16
sbb
fistpll
and
xchg
addr16
fisubrl
loop
cmp
pop
sbb
pusha
test
sbb
cli
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
fistpll
fninit
mov
les
xchg
jge
jge
das
scas
stc
inc
dec
xchg
aam
div
outsb
adcl
adc
xchg
lahf
inc
and
fcomi
movsl
push
js
add
ljmp
mov
in
in
les
mov
mov
jle
call
mov
jle
and
pop
dec
je
and
sub
add
xor
sub
enter
adc
lcall
add
lahf
push
lret
mov
fcmovbe
inc
sarl
jae
dec
fadd
testl
add
ret
xchg
sbb
push
rclb
insb
mov
js
test
dec
jecxz
cwtl
cltd
cs
pushf
sbb
xchg
addb
lcall
outsl
stos
aas
cmp
jno
push
push
insl
in
push
dec
pop
inc
stc
stos
push
int
out
enter
cmp
xor
dec
push
loopne
call
pop
cmp
xor
and
push
outsl
sar
lret
movsl
cmp
xchg
cmp
pop
ret
shrb
js
cltd
jns
rcll
mov
es
mov
or
inc
mov
test
loopne
adc
and
or
mov
sbb
push
and
cmpsb
lods
lret
push
dec
aaa
and
in
orb
xor
testb
int3
icebp
and
loop
fmul
popa
cmpsb
mov
lret
cwtl
ret
xlat
sbb
push
xchg
cmpl
ficoml
fstl
pop
js
adc
test
fdivrl
jp
pop
jmp
adc
mov
into
sub
sbb
lock
aam
es
lods
adc
and
pusha
pop
inc
jge
daa
dec
cmp
push
mov
cwtl
test
jb
scas
test
incb
inc
cmc
sti
rcrl
jno
jg
xor
movsb
sbb
sbb
test
cld
jb
jge
sub
ja
mov
sbb
or
stc
lods
cmp
cmp
stos
inc
insl
cmc
mov
cmpsl
je
cmp
pop
pop
adc
jno
pop
mov
pushf
mov
aaa
aaa
bound
push
pop
add
push
orb
mov
and
dec
push
push
sbb
test
mov
and
push
je
sbb
sbb
loop
movhps
inc
cmp
dec
cmpsl
or
int3
movsl
test
inc
inc
sbb
decb
push
nop
xor
sub
lock
dec
rcrl
js
dec
sbb
pop
fs
lds
lret
dec
jb
pop
pop
clc
arpl
or
lods
adcl
xor
arpl
rorb
stc
into
std
addr16
negl
pop
ds
inc
mov
ljmp
insl
test
popf
and
cmp
xor
add
add
movlhps
and
loop
push
mov
mov
rcll
jno
push
repnz
push
xor
push
in
add
mov
imul
popa
aam
insl
jge
push
mov
repnz
stos
loope
imul
std
sub
sub
sub
mov
test
call
iret
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
jecxz
fists
mov
movl
lds
sub
push
ja
jp
sub
push
ss
push
lock
lea
movsl
fisubs
or
popf
push
stc
gs
and
jp
lahf
or
sub
fdivrs
jns
push
and
xchg
fiadds
cmp
push
mov
testb
stos
dec
addb
pusha
cmpsl
add
lods
test
stc
xor
add
scas
divb
shl
inc
push
rclb
in
jg
lret
cwtl
lret
shll
pop
cmp
ja
imul
stos
jecxz
and
adc
jb
idivb
ret
sub
sub
mov
pop
and
inc
pushf
mov
fdivl
push
mov
mov
push
shlb
xor
cmp
inc
sti
test
jmp
lahf
and
ja
add
fst
gs
pop
int3
test
int
dec
popf
cmp
cmp
imul
dec
test
push
or
fbstp
and
jp
dec
xor
int3
idiv
push
stc
dec
push
mov
ja
jbe
and
sub
sub
inc
addl
iret
je
or
inc
and
mov
sub
pop
xchg
or
repnz
xchg
psrld
movsb
dec
in
scas
rcl
into
xchg
outsb
rcll
lods
mov
in
rcrl
std
fnstcw
aam
fcomps
pop
mov
sbb
sbb
mov
xor
dec
xlat
test
fdivl
enter
or
lea
js
dec
mov
rclb
pop
scas
jnp
jp
jmp
adc
jp
or
ds
mov
mov
push
sub
mov
sub
inc
mov
test
xchg
xchg
repz
sub
jmp
push
cmp
adc
dec
pushf
cld
int
aaa
mov
cmc
lods
mov
xor
mov
mov
call
push
xor
xor
test
iret
js
fstl
and
push
stos
jge
pop
dec
or
movsl
stos
ljmp
mov
push
pop
cld
ljmp
lret
dec
enter
xchg
pop
sub
mov
push
loope
or
popa
sub
jge
fwait
test
stos
mull
dec
jp
add
lods
lods
mov
stos
sub
and
jp
jae
sbb
addr16
bound
push
rcl
popf
sbb
xchg
out
imul
push
flds
push
lahf
mov
in
stos
inc
aas
adc
mov
fwait
sarb
sbb
sarb
clc
pop
adc
cmpsb
stc
push
addr16
fmull
fstl
aaa
rcll
es
rclb
mov
jb
out
outsb
jnp
sub
sbb
push
jmp
mov
in
sub
int
push
pop
cmpsl
mov
and
add
and
imul
cli
cwtl
xchg
ja
bound
add
popa
lea
loop
mov
cmp
jp
dec
mov
mov
dec
dec
sbb
popl
mov
inc
cmp
repnz
sbb
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
ffree
push
sahf
mov
ret
cwtl
xlat
or
ljmp
mov
out
cwtl
andl
cmp
data16
pop
fidivrs
je
add
cmp
sti
pop
in
das
mov
das
in
shl
inc
fs
push
mov
dec
and
loope
add
ret
push
and
or
scas
lret
shr
pop
lods
push
pop
cmp
mov
sahf
adc
mov
mov
sbb
xchg
into
fimuls
mov
je
stos
rcrl
testl
mov
add
cs
xchg
cmpsl
or
test
xchg
and
xchg
aad
and
and
push
nop
sub
dec
popf
and
gs
pushf
test
in
jno
inc
stos
test
sub
push
lods
stos
jl
jae
inc
outsb
push
or
leave
in
dec
ret
or
jl
add
push
bound
adc
loop
sub
sbb
shlb
sar
sahf
aad
push
stos
inc
sbb
repnz
test
inc
gs
shlb
pop
mov
movsl
out
cmp
dec
xor
je
inc
push
stc
jp
mov
mov
dec
xchg
sub
test
dec
lcall
xor
in
scas
test
mov
ficompl
imul
mov
sbbb
mov
fidivl
fldenv
loop
xor
pop
sti
xchg
xor
hlt
cmp
dec
inc
mov
cmp
xor
adc
push
xchg
in
out
lret
mov
ds
fwait
outsl
jb
stos
sub
cld
adc
adc
cmpl
push
rep
sub
mov
add
lahf
lods
push
cmp
subb
icebp
popa
pop
into
lcall
inc
adc
mov
stos
dec
bound
xchg
xchg
into
inc
pop
aam
fwait
cmp
and
je
add
out
loop
cmp
jmp
inc
stos
ljmp
icebp
xor
fs
mov
dec
popa
push
or
ljmp
enter
lds
in
cmp
aas
fnstsw
in
xor
inc
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
lods
sub
mov
lahf
cmp
mov
xor
dec
in
inc
movsb
test
mov
inc
dec
xor
jmp
inc
adc
jbe
pop
or
cmp
mov
pushf
push
or
xchg
test
xor
pop
aam
xor
mov
pop
pop
fcoms
aaa
lea
pop
jo
lret
dec
pop
dec
pop
jb
pop
rorl
or
jmp
repnz
dec
mov
out
xor
cmp
push
sub
pusha
or
aam
mov
xchg
pushf
jmp
pop
repz
push
call
call
mov
jbe
arpl
and
cltd
xchg
or
pop
insl
mov
and
out
and
cmp
fwait
mov
fmul
inc
loope
pop
pop
or
sbb
fnstenv
addr16
shlb
and
decb
scas
xchg
sahf
xor
sbb
mov
xor
dec
aad
sbb
dec
sub
sub
icebp
sub
jl
xor
inc
xlat
jg
mov
jl
dec
jo
test
push
dec
push
test
aas
clc
imul
sbb
mov
ret
js
testl
push
fdiv
ret
pop
mov
jo
add
mov
push
std
mov
jb
sub
sbb
mov
mov
add
adc
je
dec
push
adc
add
cmp
test
cmp
andl
jbe
sti
push
sub
in
pop
lcall
push
jmp
sub
xlat
adc
cwtl
idivb
pop
sub
addr16
xor
xchg
fstps
mov
inc
movl
mov
or
arpl
and
or
push
mov
xchg
add
adc
stc
xor
stos
rorl
push
rorl
xchg
xchg
mov
mov
movsl
divl
ja
in
pop
popl
mov
das
adc
or
mov
adc
mov
xor
xchg
cmp
cld
sub
mov
cmp
rcl
add
and
jns
sub
movl
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
ret
xchg
xor
ret
or
fcompl
or
sub
sbb
add
daa
pop
pop
mul
test
sbb
dec
or
cmp
pop
sti
jnp
jg
mov
sbb
xor
mov
test
out
pushf
dec
mull
xchg
adc
imul
sbb
rcl
mov
fwait
pop
xchg
jge
lock
xor
xor
pop
mov
adc
mov
sub
dec
add
ret
xlat
fwait
jbe
mov
lret
decl
mov
pop
xchg
add
cli
ret
sub
mov
call
repz
enter
xchg
jnp
in
push
push
jnp
cs
aaa
ss
cmp
pop
xorl
enter
cwtl
push
jb
add
xor
test
jecxz
loope
sub
into
add
dec
popf
and
popa
adc
dec
jne
aaa
cmpsb
xchg
mov
in
mov
xchg
mov
add
mov
jmp
push
push
sbb
pop
push
dec
jmp
int3
repz
cmpsl
xchg
sbb
jno
push
add
push
pavgb
dec
aaa
movsb
cmpsl
xor
xchg
call
add
push
fisttpl
sub
mov
lods
dec
gs
add
and
adc
movsl
adc
fcomp
adcl
fstl
pusha
mov
add
push
inc
push
xchg
sub
insl
xchg
int
mov
fisttpl
in
push
cli
xor
mov
push
inc
pop
sbb
inc
outsl
aaa
iret
mov
pop
jecxz
test
fxch
inc
in
push
push
and
call
xchg
adc
mov
test
inc
mov
ss
xchg
dec
sub
adc
enter
cmp
imul
loope
xchg
lea
stc
pop
mov
sti
mov
jo
std
and
adc
adc
movsb
push
cwtl
fnstenv
cwtl
scas
mov
and
mov
push
push
and
sbbl
push
cwtl
dec
mov
icebp
ljmp
jo
xor
inc
push
jmp
hlt
sbb
dec
addl
popa
add
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
mov
test
xacquire
mov
into
cmp
sub
sahf
insl
xor
and
jecxz
cmpsb
cs
cmpb
notb
in
fidivrs
lcall
std
push
fidivl
mov
add
dec
lds
imul
dec
cltd
push
cmp
jnp
sbb
fcomp
cmc
jae
and
push
gs
cmpsb
mov
and
adc
xor
test
iret
pop
test
aaa
into
push
jo
jecxz
or
enter
inc
adc
lock
sbb
xor
push
ret
xchg
out
ret
cmp
push
push
or
xchg
jb
xchg
xchg
inc
mov
sahf
cwtl
enter
jl
sbb
sub
cmpsl
mov
xchg
mov
test
imul
ret
mov
cmp
fistps
decl
gs
or
xor
shll
xchg
popf
das
lret
sbb
pop
mov
mov
out
sti
notl
xor
jecxz
in
mov
sub
inc
jl
or
and
mov
xor
jno
cmpsb
adc
popf
mov
scas
out
lcall
and
aam
mov
dec
push
loope
xor
pop
inc
sub
mov
ja
cmpsl
mov
mov
or
inc
pusha
push
xor
jecxz
hlt
add
loop
add
fstpl
sub
js
pop
inc
mov
movsb
leave
sbb
ljmp
daa
dec
mov
insb
pop
add
jns
ret
mov
jmp
xor
cmp
fs
mov
push
in
daa
ljmp
clc
fdivrl
jne
mov
andl
or
test
cmp
xchg
lds
pop
sti
pushf
movsb
jmp
mov
cmp
sub
dec
mov
icebp
adc
jp
and
ret
mov
sub
xor
iret
lret
out
xchg
and
mov
mov
dec
add
dec
mov
rcrl
or
pop
dec
adc
pop
sahf
leave
add
in
into
ljmp
adc
add
add
push
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
jle
iret
scas
mov
mov
push
mov
add
xchg
lahf
xor
mov
out
pop
test
xchg
jns
scas
and
or
mov
lret
adc
ljmp
sub
leave
or
mov
mov
pop
push
outsl
adc
mov
repz
lock
das
jl
cmp
adc
in
mov
icebp
adc
in
sbb
push
test
adc
insb
cmpsl
movsl
pop
xchg
fs
or
xchg
adc
clc
repz
and
dec
popf
repz
lock
push
icebp
mov
ret
push
lods
push
xlat
rcll
sbb
insl
push
and
sarl
movsb
cmpsl
std
aad
cmp
repz
movzwl
or
int3
pushf
push
insb
arpl
jg
sbb
adc
loope
fsubrl
lahf
sbb
or
and
stos
insl
mov
dec
pop
nop
cli
fs
repz
dec
sub
dec
popa
xchg
mov
mov
neg
jle
ja
dec
and
inc
dec
ret
push
lods
dec
cmp
xchg
cltd
pop
pop
adc
mov
push
stc
sub
push
imul
xor
and
rorb
rcr
gs
das
loope
shll
dec
imul
fildl
xor
nop
dec
out
mov
out
repnz
stos
jae
cmp
pop
xor
cmp
lds
jae
dec
rclb
in
jp
fwait
jbe
aas
je
mov
mov
adc
sbb
jno
add
sbb
mov
add
divb
ss
mov
or
pop
repz
popa
lret
xor
adc
mov
lcall
sahf
adc
int
mov
or
adc
mov
mov
rolb
movsl
jae
mov
sbb
push
jne
out
pushf
adc
xor
and
mov
jecxz
pop
fistpl
mov
in
sbb
in
loope
sbb
pop
js
adc
jmp
lret
pop
xchg
fisttpll
pop
cmp
lods
push
sub
ja
jne
jl
fcoms
mov
xchg
sbb
sbb
cs
stc
jl
out
stc
pop
pop
aas
lcall
xchg
test
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
out
iret
imul
xchg
fdivl
jns
cmp
jne
mov
fcompl
lea
mov
outsl
fcompl
dec
jne,pn
repz
aas
jmp
or
fsub
js
inc
dec
ret
outsb
sbb
gs
mov
pusha
cmpsb
out
sub
or
or
loope
sbb
mov
movsl
xlat
jl
or
xchg
addb
inc
sub
test
cmpsl
xor
adc
pusha
fs
aam
dec
aas
mov
sahf
adcb
sub
lods
xchg
call
push
fwait
push
movsl
cmp
sti
jbe
and
mov
inc
leave
push
push
jnp
imul
mov
mov
out
or
cltd
mov
sbb
stos
xchg
inc
pop
push
sub
jb
fucomip
stc
repz
pop
scas
push
cmp
cmp
aas
cmp
push
and
rclb
pop
aaa
leave
inc
sbb
xchg
mov
xor
icebp
push
bound
mulb
mov
jne
mov
repnz
sub
adcb
lea
sub
dec
cmpb
cltd
mov
arpl
or
add
adc
adc
insl
lcall
xchg
in
shrl
push
mov
cmp
add
xchg
xchg
fisttps
orl
outsb
pop
pusha
cmc
sti
pushf
push
and
stos
dec
fnstcw
mov
sahf
add
push
fsubrs
int
mov
call
push
mov
pop
shlb
mov
add
mov
push
flds
repz
cld
mov
call
adc
sbb
loopne
push
arpl
ret
outsl
pop
pop
push
loope
and
sbb
and
lods
sbb
lds
lcall
mov
push
or
xlat
ds
jmp
push
or
pop
loop
test
mov
mov
cmc
jge
mov
cmp
aas
or
sub
not
shlb
mov
in
fwait
mov
adc
cmpsb
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
pop
cmp
test
adc
add
mov
in
adc
pop
sbb
out
jno
ds
pop
mov
or
jp
popf
call
inc
movsl
cmp
lret
out
lret
sbb
mov
jl
js
mov
leave
cmp
adc
adc
cmpl
fcmovnbe
pop
dec
adc
fistpll
test
adcb
xchg
pop
xor
cmp
fwait
lods
clc
xchg
pop
xchg
les
cmp
jnp
mov
pushf
mov
xor
int3
push
shlb
mov
pushf
mov
nop
mov
inc
shll
out
pop
leave
call
cmc
hlt
into
pop
add
out
mov
hlt
jle
fucom
stos
cmp
dec
sbb
test
cli
and
xadd
xchg
mov
mov
sbb
mov
push
das
ror
subl
xchg
test
inc
dec
push
pop
jo
test
sbb
mov
lea
popa
daa
pusha
test
jne
andb
fstp
sbb
sti
addr16
pop
outsl
popa
shll
and
stc
adc
mov
sbb
adc
sub
jbe
js
mov
int3
and
out
jl
in
inc
outsl
jns
arpl
xorl
inc
jp
push
pop
cs
mov
es
sub
push
jno
jle
add
sub
xchg
test
frstor
iret
cmp
aam
cs
jae
lret
mov
bound
nop
inc
scas
mov
mov
pop
sbb
pop
or
pop
inc
lds
sub
dec
cmp
pusha
pop
fisubs
push
mov
cmp
pop
push
and
adc
fcmovnu
mov
xchg
or
and
xor
mov
bound
mov
ljmp
mov
int
fistpll
stc
lcall
repnz
je
sahf
out
inc
add
les
orl
ds
mov
imul
xor
dec
test
push
add
fdivr
in
lods
out
or
lods
cmp
mov
push
mov
cmc
es
jns
hlt
or
adc
mov
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
mov
fwait
mov
mov
sbb
mov
inc
loop
lret
add
aad
scas
adc
mov
or
xor
cmpsl
cmpsl
or
mov
cmpsl
add
xchg
mov
data16
scas
jmp
cmpsl
xchg
mov
fwait
dec
sarl
into
or
in
mov
pop
mov
pushf
jb
cmp
jnp
leave
dec
pop
mov
pop
aas
adc
and
jle
in
cltd
xlat
rcr
daa
std
cmc
xor
and
jnp
push
in
int3
or
cmpsb
adc
xchg
dec
imul
mov
inc
push
out
or
call
imul
dec
jp
mov
cmp
push
lea
xchg
xchg
adc
jg
jp
mov
xchg
cmp
sbb
xchg
mov
test
or
mov
xchg
ret
mov
cmp
push
fsubrs
das
aaa
int3
pop
mov
push
and
or
gs
push
nop
shll
mov
cmp
cmp
mov
dec
aad
and
ret
fs
testb
lods
icebp
xor
pop
push
inc
cld
fwait
or
mov
js
xchg
sub
and
dec
push
into
and
clc
push
mov
aad
movsb
call
fldl
lret
pop
leave
mov
lods
sarb
std
mov
sub
sbb
inc
call
pop
add
andl
cld
pop
jns
fucomi
addl
divb
test
adc
push
push
mov
nop
dec
mov
mov
pop
and
mov
inc
pop
fisttps
ljmp
dec
lock
cwtl
jbe
testb
cmp
add
jae
in
mov
fldt
test
inc
sub
cmp
push
repz
scas
add
daa
sahf
xchg
jge
mov
in
inc
xor
cmc
in
jb
sbb
xor
dec
cmp
std
cmp
scas
inc
daa
and
movsb
sbb
loopne
scas
lcall
ljmp
rorl
xor
cld
call
add
lret
sub
and
imul
bound
jbe
sub
out
mov
sub
arpl
popa
push
push
ficomps
or
jle
xchg
push
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
jg
mov
mov
or
adc
pop
icebp
pop
jg
pop
bound
in
add
mov
jb
clc
and
insb
mov
xor
int
fdivs
cmp
clc
repz
xchg
jp
xchg
mov
sub
stos
call
out
sub
sub
popa
push
mov
mov
std
loop
jl
adc
inc
outsl
fwait
cltd
clc
mov
and
sub
mov
cmc
add
jecxz
adc
and
loope
addr16
clc
fstps
jge
adc
or
push
loopne
icebp
push
dec
repnz
dec
inc
add
aaa
push
jp
mov
jno
rcr
push
xor
dec
sbb
fisubrl
das
daa
or
cltd
push
je
ficoml
xor
xchg
jmp
testl
pop
faddp
xchg
mov
lret
inc
add
js
shlb
inc
pusha
or
aaa
dec
xor
sub
movsl
sub
in
add
inc
sub
sbb
mov
sbb
mov
insb
or
pop
aam
add
mov
add
xorb
fidivl
mov
adc
inc
into
jno
lock
xor
ljmp
test
fnstenv
aas
insl
dec
xchg
enter
sti
add
repz
lret
pop
xor
mov
cmp
mov
in
rol
push
and
and
xor
mov
push
push
and
adc
div
pop
mov
xchg
insb
inc
shlb
leave
stc
fs
push
sbb
inc
cmp
sub
enter
xor
int
xchg
sbb
in
int3
cmpsb
pop
xor
pop
mov
sbb
sub
mov
add
repz
push
hlt
push
loopne
iret
pop
sbb
mov
iret
notl
iret
sub
mov
insl
stos
mov
and
or
lods
arpl
pop
xor
scas
mov
mov
pop
cmp
xchg
cmp
sbb
in
imul
sub
jg
lods
test
fcos
ret
arpl
mov
xchg
and
mov
mov
xchg
in
sub
adcb
clc
fldt
cmp
jle
out
pop
sub
inc
jnp
ja
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
shl
pop
shr
movsl
mov
mov
sub
nop
jae
out
cli
xor
fidivrs
xor
in
loope
push
adc
nop
leave
and
lret
push
cs
mov
popf
push
dec
and
cwtl
insb
pop
divb
jg
mov
movq
xchg
sqrtps
jecxz
push
add
popw
pop
push
into
fadds
pop
out
cwtl
and
and
shll
leave
sbb
pop
xchg
loopne
mov
je
mov
enter
mov
xchg
sub
gs
rorb
inc
imul
inc
std
lret
leave
or
jnp
jmp
mov
out
push
arpl
ret
ds
loop
push
stos
cmp
adc
and
adc
mov
xchg
mov
sbb
aaa
movsl
loopne
pop
out
lahf
mov
cmp
xchg
cld
sbb
lea
mov
mov
adc
pop
dec
movsl
xor
pop
in
dec
ret
mov
jecxz
lret
mov
inc
and
shrl
cmp
xor
cltd
xor
dec
sbb
lock
push
stos
shrb
fildll
and
imul
add
int3
and
xchg
adc
call
mov
adc
orb
lahf
lahf
jmp
mov
xor
mov
jnp
dec
xchg
ret
ret
shll
or
movsl
bound
sbb
cmpsl
imul
dec
pop
sti
loopne
out
pop
imul
in
xor
mov
and
push
sti
mov
cmp
lds
cld
or
aad
xchg
mov
lods
dec
add
pop
mov
test
mov
outsl
push
dec
in
fisttps
xor
mov
push
clc
mov
mov
xchg
fwait
and
loopne
cmp
mov
cmp
sub
pop
sub
or
ret
sub
push
or
adc
dec
mov
mov
inc
std
mov
arpl
imul
into
mov
xchg
xchg
out
dec
dec
aaa
jecxz
push
xor
sub
mov
mov
sbb
mov
sbb
in
int3
fs
es
dec
popl
fstps
add
adc
xchg
enter
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
fst
test
mov
mov
fwait
dec
push
fdiv
cmp
mov
sbb
mov
cld
subl
sbb
adc
mov
or
xor
sbb
or
cs
adc
pop
int
fisttps
shlb
aad
gs
test
lcall
shl
mov
out
mov
jae
adc
mov
add
add
jg
daa
or
inc
sub
pop
jne
jle
mov
js
or
imul
scas
cmp
adc
mov
fimull
ror
bound
loopne
mov
mov
lret
inc
sbb
add
fisttpl
or
cmpsb
push
enter
push
sbb
xor
xchg
inc
mov
fwait
in
cmc
mov
insl
iret
push
mov
adc
jnp
mov
or
adc
cmp
incl
test
mov
loope
fnstcw
inc
inc
adc
sahf
in
pop
lods
bound
mov
out
inc
adc
iret
repnz
ss
into
add
xchg
loopne
push
std
fucomi
cmp
xchg
jnp
movsl
mov
sti
fsub
fsubs
aam
jae
iret
adc
cmpl
subb
sub
inc
insb
sub
cmpsl
pop
jno
dec
cmp
scas
movsl
out
repz
and
lock
sbb
and
or
test
popa
dec
dec
lret
in
sub
mov
add
je
mov
pop
adc
pop
cmpsb
xchg
shrl
cmp
es
fs
sub
and
scas
lret
rorl
aad
mov
out
sbb
pop
jb
xor
jns
popf
iret
xchg
mov
test
scas
sbb
dec
and
mov
jge
imul
pop
enter
shr
sub
or
icebp
je
mov
fwait
es
adc
dec
setno
cld
pop
adc
shll
adc
xor
push
in
inc
pop
jnp
mov
pop
jo
stc
xor
mov
int3
mov
rclb
or
shlb
loop
mov
enter
bound
addb
push
mov
xor
and
mov
xchg
test
scas
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fstp
fimull
ret
mov
fisttps
loop
cmp
mov
int3
ss
xlat
testb
xchg
xor
push
bound
adc
lea
loop
xchg
enter
aaa
cmpsl
mov
or
sbb
jo
cmp
andl
push
adc
or
loop
xchg
shlb
cmc
cmp
cmp
out
bound
clc
out
cmp
pop
dec
xor
data16
inc
and
or
xor
push
xchg
test
add
xchg
test
loop
sbb
ret
arpl
mov
add
sbb
inc
pop
mov
jne
aas
icebp
nop
jns
jno
or
orb
int3
aam
dec
push
iret
call
jl
int3
test
call
jb
ficomps
les
add
xor
fwait
add
cmpsb
pusha
stos
pop
sbbb
vpmulhuw
lret
loopnew
lock
pop
inc
mov
add
or
push
shrb
in
mov
sub
jb
mov
and
sbb
leave
mov
sbb
imul
cmpl
hlt
inc
repz
lds
sahf
jnp
mov
pop
div
add
imul
data16
push
xlat
xchg
cmpsl
mov
dec
iret
es
scas
rol
test
inc
sbb
mov
repz
xchg
gs
lods
mov
aas
push
pop
cmp
stc
mov
dec
ret
xchg
outsl
jae
cmp
xchg
loopne
push
or
and
fsubs
out
insl
or
stc
sbb
xchg
pusha
bswap
out
mov
mov
mov
addl
mov
xchg
jnp
adc
gs
sub
jo
lods
jp
and
xor
mov
add
adc
lock
mov
dec
pop
mov
and
add
fisubrl
sbbl
cmpsb
scas
cmpsl
xor
or
cmc
movsl
xor
test
mov
fnstcw
test
sbb
mov
add
fsubrs
and
adc
cwtl
sbb
mov
xchg
add
jae
sub
les
insl
cmp
xor
xor
push
and
imul
mov
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
adc
or
test
xchg
fsubr
fwait
popa
fs
pop
jge
test
getsec
rorl
mov
js,pt
dec
or
cmp
pop
mov
std
lret
cltd
sbb
lds
and
and
jo
or
lahf
sbb
xor
call
sbb
xlat
and
cmpsl
std
clts
mov
sub
lret
movsb
jo
sbb
and
mov
pop
mov
lds
js
sub
sub
shrl
inc
or
imul
push
rcl
mov
dec
cmp
dec
xor
mov
push
pop
test
incl
pop
mov
mov
pop
mov
mov
insl
push
jge
cmpsb
es
xchg
xchg
jns
xchg
sbb
ret
rclb
cmp
push
xlat
adc
cmpsb
mov
rorl
testb
mov
std
movsb
mull
rcll
lods
repnz
fxch
pop
je
cmpsb
nop
pop
addr16
orb
xor
push
lods
push
nop
arpl
sub
pop
leave
xchg
sbb
lcall
fcoml
ret
das
cld
dec
dec
add
cmpl
xchg
dec
mov
mov
sahf
inc
out
cmpsl
sahf
or
mov
mov
out
mov
or
ljmp
push
into
and
ss
push
sbb
xchg
pop
mov
push
inc
cmp
shrl
add
push
outsl
xchg
inc
cld
xor
dec
jecxz
ret
lahf
out
xchg
mov
dec
fxch
or
or
je
test
pop
mov
and
jle
adcl
andl
call
push
jb
arpl
lods
cmp
jg
scas
cmp
test
mov
arpl
call
mov
rcll
nop
outsl
aam
popa
push
or
fcmovnbe
jl
push
cmpsb
test
xchg
bnd
sahf
fildl
mov
mov
xchg
lods
add
jl
sahf
pop
cmp
xchg
stos
lock
adc
rcl
jp
mov
jmp
xchg
stos
xchg
push
sbb
mov
jbe
dec
or
adc
scas
movsl
fcompl
lret
jae
pop
pop
xlat
filds
cld
sbbl
out
and
lcall
negb
add
add
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
jbe
lcall
mov
sbb
push
insb
mov
or
shlb
xor
inc
pop
add
test
inc
stos
into
xchg
mov
mov
or
pushf
xchg
add
cmpsl
dec
or
in
out
push
test
sti
mov
lret
in
out
out
inc
adc
stc
in
xlat
push
jmp
imul
and
sarb
xlat
mov
bound
pop
ret
inc
testb
adc
sub
pop
jle
imul
movsb
gs
shrb
pop
subb
mov
sbb
xchg
inc
outsb
mov
fisubrl
pop
add
xchg
lock
add
pop
inc
jmp
xor
call
mov
push
push
xlat
mov
inc
lahf
mov
pop
popa
mov
xchg
insb
cmp
inc
test
jle
fistl
call
pusha
addr16
pop
inc
xchg
enter
mov
sub
xlat
add
sub
shl
mov
sbb
dec
bound
imul
mov
and
push
lahf
pop
aad
pop
push
mov
add
add
jmp
inc
out
je
mov
adc
mov
insb
or
add
mov
adc
xor
scas
xchg
fs
inc
or
sub
inc
adc
das
orb
cmp
push
inc
jbe
test
pop
and
das
stos
mov
and
push
jnp
cmpsl
mov
or
and
flds
cld
cmpsl
sub
jns
arpl
add
fs
dec
mov
mov
fwait
int
test
in
je
les
mulb
sbb
xor
stc
shlb
mov
xchg
inc
gs
push
sti
bound
mov
scas
out
jl
addr16
inc
stos
adc
int3
cmp
xor
push
in
arpl
cs
loope
mov
and
dec
mov
push
insl
shll
inc
xchg
popf
mov
stc
popa
pusha
jmp
rcrb
sahf
jae
rcrb
rcr
popf
arpl
fstl
jo
push
cmpsb
or
lds
idivb
jns
aad
rol
jmp
fldenv
cmp
out
iret
push
sbb
cmp
cmpsl
sti
jo
pop
jecxz
popa
cmpsb
cmpsb
arpl
pop
idivb
scas
dec
xchg
into
push
xor
aad
xor
subl
xchg
mov
sbb
and
rcll
jge
push
ljmp
jb
pop
cmp
or
sbb
scas
xorl
fwait
xor
mov
inc
stc
xor
pushf
push
loop
adc
sbb
aam
mov
push
inc
pop
cmpsl
stc
std
popa
jl
aaa
insl
jns
sbbb
xor
push
repnz
inc
xchg
pop
add
loopne
adc
inc
rorb
xor
popf
stc
xor
adc
inc
sbb
orl
xlat
push
inc
sub
mov
cld
in
mov
lret
mov
int3
popa
adc
cmp
sti
push
pop
fmuls
ficompl
mov
popf
aad
or
imulb
pop
out
ret
add
inc
idivl
sbb
sub
in
mov
adc
sub
imul
ljmp
std
mov
cli
mov
push
inc
mov
cmp
add
rorb
mov
adc
jl
negb
in
lret
testb
out
inc
jb
push
lods
xor
pusha
inc
daa
jmp
inc
int3
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
pop
lea
shrl
mov
mov
arpl
jp
insl
add
imul
das
repnz
mov
in
xor
cltd
add
push
cwtl
fstps
sub
fiaddl
mov
jbe
inc
lret
fistl
outsl
cmp
mov
mov
pop
mov
lods
arpl
push
sbb
das
cli
xchg
ret
xchg
cmpsb
jge
sub
add
mov
cmp
dec
adc
sbb
insb
jnp
hlt
aam
inc
imul
mov
pop
out
mov
ror
test
popa
mov
mov
and
push
mov
js
xchg
jno
les
mov
mov
cs
mov
add
push
jnp
xor
aaa
sub
ret
fidivs
popa
push
xchg
repnz
push
loopne
icebp
push
xor
push
sbbb
inc
jecxz
jo
test
arpl
and
pop
mov
andl
sbb
xchg
lds
or
je
aaa
aas
or
jle
lcall
lds
cwtl
inc
rcrb
push
push
add
mov
mov
sub
xchg
pop
pop
inc
cmpsb
cli
pop
mov
fwait
mov
push
mov
jae
les
bound
sti
dec
jp
jb
pop
cmp
daa
jne
aad
cmp
pop
mov
in
push
out
test
adc
outsl
icebp
pop
add
adc
sub
adc
xchg
xchg
aaa
mov
xor
xorb
shl
mov
dec
sub
push
mov
aas
add
icebp
or
enter
cmp
rcrl
sbb
mov
aaa
pushf
ljmp
mov
sbb
jmp
dec
roll
dec
aad
mov
orl
xchg
push
aam
pop
out
test
pop
cmp
or
push
and
mov
in
aaa
cld
repnz
push
std
or
mov
cmp
adc
sbb
push
pop
imul
mov
add
and
fld
xchg
xchg
mov
pop
das
pop
pop
sti
into
aas
push
fadds
mov
test
lea
sbb
add
ret
xchg
xor
div
or
add
xor
pushf
mov
xor
shlb
mov
pop
outsl
not
add
jne
jns
out
adc
pop
in
jno
push
out
int
mov
cmp
sbb
dec
push
jbe
inc
jmp
into
pusha
cmp
and
inc
fdivl
lea
cli
das
mov
stos
mov
js
pushf
sub
push
stos
aas
push
stc
in
scas
movsb
inc
pop
add
imul
xchg
addb
and
sbb
aas
push
shrb
cmp
scas
sub
mov
sub
mov
test
ror
loop
mov
stos
es
scas
dec
jnp
js
fbld
ret
add
inc
dec
rcr
call
sbb
mov
jbe
adc
imul
lods
stc
jae
aaa
ret
xchg
bound
or
pushf
cs
int
jno
xor
lcall
cs
pop
roll
push
push
xchg
adc
sbb
xchg
push
lock
call
fmulp
mov
cmp
sahf
cwtl
fsubl
dec
ret
mov
jle
mov
or
or
and
sbbl
cltd
pop
cmp
pop
loope
aam
cmp
imul
jne
test
inc
sbb
sbb
mov
mov
dec
out
inc
sub
rol
inc
cld
test
add
inc
clc
lahf
jl
add
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
sahf
inc
mov
mov
dec
int3
dec
adc
pop
jecxz
lea
mov
xchg
and
mov
addb
popf
fldcw
xchg
pop
mov
jp
mov
or
xchg
push
inc
pusha
mov
pop
xchg
daa
loope
lods
push
mov
outsb
and
incl
cmp
cltd
xchg
push
and
sbb
sub
push
outsl
xor
sub
jno
fwait
xor
lret
mov
cmp
xchg
gs
mov
or
jge
lret
daa
push
int
lea
aad
sarb
jge
add
out
pop
xor
sub
xchg
jno
mov
dec
gs
or
push
pop
push
ds
and
push
dec
addr16
cmp
jecxz
imul
mov
movb
dec
cwtl
xchg
lods
scas
xchg
or
jecxz
cmpsl
aad
and
pop
mov
fisubrs
add
jp
cmp
movlps
inc
je
pop
movl
cli
dec
shl
js
std
stc
data16
jne
cwtl
add
sub
test
pusha
js
arpl
jecxz
mov
inc
pop
pop
push
repnz
lahf
std
and
push
cltd
sahf
scas
mov
sbb
iret
cli
cmp
lret
lahf
push
lock
xor
pop
nop
adc
inc
in
ret
sti
push
push
into
jns
scas
imul
mov
test
inc
mov
cmpsl
andb
inc
or
adc
es
sbb
sub
bound
sbb
test
dec
lret
insb
inc
shll
push
divb
mov
mov
adc
mov
sbb
fsubs
fsubs
inc
imul
aas
inc
pushf
jg
xor
cmp
daa
aad
stc
subl
and
sbb
jecxz
jne
xchg
xchg
lret
pop
inc
repnz
jo
mov
insl
mov
in
jle
adc
sub
cltd
imulb
ljmp
pop
push
mov
fcoms
push
imul
mov
ljmp
je
mov
lods
rol
cmp
cmpsb
push
push
pop
stos
pop
pop
movsl
xchg
in
xor
dec
fmuls
inc
int3
cltd
js
fldenv
test
xchg
punpckhdq
dec
jge
and
mov
js
push
pop
add
inc
inc
mov
jg
inc
inc
aas
sbb
scas
stc
data16
addb
shl
mov
lret
rdpmc
cmpsl
xchg
push
jle
jo
insb
pop
jb
mov
sub
xchg
aas
les
orl
insb
adcb
test
mov
aas
sub
leave
call
sub
leave
fildll
imul
mov
sbb
sub
mov
negl
jnp
cld
xchg
cld
cmp
lock
dec
iret
inc
add
ss
sub
aaa
ret
and
sbb
sub
pop
add
leave
bound
dec
subb
sub
lret
aad
bound
push
push
ffreep
rol
negb
xor
call
push
repz
push
mov
fsubs
int
out
jge
push
jecxz
push
lret
mov
fs
lret
lods
dec
sub
cmp
and
jns
xchg
mov
xchg
shll
shll
imul
xchg
scas
fimull
icebp
scas
push
lret
loopne
add
push
push
adc
popf
xor
xchg
je
mov
fidivl
cmpsl
sbbw
inc
orb
ret
inc
dec
xor
push
jmp
jb
add
xor
mov
jb
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
movsb
push
iret
mov
mov
stc
adc
mov
dec
in
xchg
and
out
push
sbb
mov
ja
ds
sbb
xchg
jnp
pusha
jns
out
cli
dec
or
mov
int3
movsl
cld
sub
jno
dec
mov
scas
xor
repnz
test
or
sahf
lea
push
roll
in
mov
xchg
ja
imul
inc
xor
ja
adc
adc
and
bound
sub
inc
or
and
in
xorb
xchg
test
inc
aas
iret
and
repz
push
shrl
jns
inc
jecxz
ljmp
inc
nop
push
aaa
jle
adcl
lds
mov
jle
ret
xchg
and
mov
hlt
pop
bound
stos
mov
dec
adc
cs
jecxz
pop
cmp
negl
mov
or
dec
mov
mov
iret
inc
ret
imul
fisubrs
movsb
or
mov
js
data16
add
out
xchg
adc
sbb
or
in
enter
add
out
fists
scas
dec
push
insl
in
repz
imul
and
jecxz
jbe
push
ret
cmp
in
bound
jb
shlb
mov
call
ja
shlb
sahf
test
fucom
or
bound
inc
jg
out
fistpll
addr16
jge
sbb
dec
mov
sbb
loop
pop
outsb
enter
jecxz
in
cmp
xor
add
sbb
adc
pop
cmp
or
bound
scas
roll
mov
rclb
addr16
fwait
add
add
lret
imul
repz
pop
dec
xchg
lds
xchg
stos
pop
pop
add
sub
enter
mov
sti
insb
jns
hlt
fmull
jnp
jmp
xchg
lcall
xchg
dec
popf
jne
repnz
xchg
fadds
mov
dec
jo
std
test
test
repnz
jno
outsb
les
jnp
mov
cmpl
cld
or
and
jg
test
aas
inc
pop
cmpsl
jg
jg
and
loop
fisttpl
mov
dec
orb
std
mov
rcrb
pop
data16
nop
dec
mov
mov
pop
leave
adc
push
insb
iret
ja
mov
out
and
or
nop
ja
inc
cmp
push
cmp
std
notb
pop
inc
pop
sahf
test
jb
xor
or
dec
ss
sub
push
not
mov
add
fimuls
dec
cmp
js
sti
xchg
cmc
addb
jae
and
mov
sub
idivb
or
je
les
pop
mov
gs
mov
xchg
test
cmpsb
dec
add
ja
push
cwtl
fiaddl
enter
inc
call
adc
xchg
imul
xor
cmpsb
jecxz
pushf
jmp
fsubrs
mov
add
jnp
and
mov
daa
push
mov
add
jecxz
fs
cmp
adc
fisttpl
mov
pushf
push
enter
hlt
ja
inc
fidivrs
movsb
jge
movb
dec
inc
popa
or
xorl
in
popf
pop
mov
xor
pop
in
dec
jmp
hlt
and
scas
in
out
push
jmp
mov
ja
sub
sub
fildl
pop
cmp
aas
cmpsl
mov
xor
push
nop
add
movl
movl
mov
jmp
fisubrl
mov
or
cmp
jmp
les
fdiv
cmp
shrl
les
cli
insl
jbe
xchg
mov
mov
xor
mov
data16
jmp
lods
mov
push
dec
adc
daa
push
stos
inc
cwtl
push
int3
dec
or
and
sub
add
in
xchg
and
or
push
fs
push
pop
data16
and
adc
shll
adc
out
jae
lods
rcr
push
or
mov
loop
fwait
pop
call
or
and
in
shll
cmp
push
xchg
js
shl
mov
xor
adc
lods
push
in
shlb
mov
jmp
mov
ja
pusha
or
mov
leave
cmp
dec
pop
mov
ficoml
out
xchg
sbbb
ret
pop
test
mov
jg
les
iret
ret
pop
sbb
xchg
outsl
mov
cmpsb
push
sbbb
pop
pop
mov
xchg
mov
js
aas
jbe
mov
int3
pop
data16
pop
add
testb
outsb
pusha
jae
pushf
repnz
leavew
mov
loopne
sbb
mov
mov
jmp
jnp
ret
xchg
cmp
xchg
inc
in
std
daa
add
imul
dec
xor
dec
pusha
xchg
inc
mov
push
push
and
xorb
sub
enter
xchg
push
fcmovbe
mov
stc
test
xor
pop
dec
jns
inc
mov
pop
mov
inc
outsl
mov
mov
xor
xchg
dec
xchg
pop
outsl
idivb
push
dec
ljmp
fdivs
mov
sbb
jecxz
in
fwait
push
add
neg
sub
inc
es
icebp
inc
loopne
xchg
pop
sub
stos
mov
mov
iret
xchg
inc
enter
movsl
xchg
imul
sub
bound
into
mov
xchg
lret
or
xor
cmpsl
fimuls
add
std
mov
out
pop
fdivrp
lods
jb
arpl
sub
push
jecxz
push
addr16
adc
pop
lahf
mov
loope
fmuls
inc
dec
sbb
xchg
fwait
shl
in
cmpsb
inc
add
jae
pushf
jcxz
pop
mov
mov
test
inc
jae
mov
lea
jp
adc
int
into
fcompl
mov
mov
or
int3
out
imul
and
or
mov
sbb
mov
fwait
mov
insl
imul
jmp
xchg
in
xchg
inc
lret
daa
scas
mov
mov
jae
xchg
cmpsb
sub
add
jecxz
dec
std
sub
incb
push
in
push
inc
cmp
insl
sub
push
les
xor
dec
imulb
in
pop
adc
or
or
cwtl
mov
mov
push
mov
dec
xor
mov
ds
dec
nop
imul
xor
adc
pop
in
addr16
imul
orb
popa
jne
stc
jo
lahf
sti
testb
and
sub
stc
scas
sub
push
pushf
add
gs
stos
sti
imul
inc
mov
adcl
push
xor
aaa
inc
cli
push
das
lds
test
pop
out
jge
xchg
loopne
clc
sbb
addb
add
inc
pop
sub
cmc
mov
or
jnp
out
sbb
mov
adc
pop
mov
sbb
and
and
sbb
lods
sub
push
sbb
sbb
insb
mov
popa
outsb
adc
and
mov
andb
push
in
jne
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
or
fnstsw
les
mov
pop
mov
mov
jno
pusha
jno
and
adc
insl
pop
xchg
lods
aam
sbb
sarb
popf
mov
cmc
fadds
add
add
cmpsb
push
and
jg
fsub
or
cmp
imul
les
jmp
adc
pop
xor
add
sbb
and
mov
sbb
push
sahf
or
jecxz
push
push
fldt
les
sbb
add
cmp
fistpl
inc
ficomps
cmp
inc
mov
je
enter
scas
out
push
push
scas
pop
sub
add
or
and
mov
shll
adc
dec
cmc
cmp
fsub
mov
jp
jg
mov
fs
mov
xchg
push
cs
repnz
push
in
rorb
stos
repz
shll
test
adc
sub
pmaddwd
jmp
imul
roll
jg,pn
sbb
pop
wrmsr
test
sti
cmc
int
out
or
push
in
inc
fildll
mov
mov
mov
icebp
out
jne
lods
sbb
sbb
sub
mov
addr16
mov
pop
push
sbb
dec
mov
mov
mov
cmpsl
rolb
jecxz
inc
inc
in
pop
xor
std
add
push
jp
xchg
cmpsl
in
mov
roll
or
adc
jle
xchg
xchg
xor
lea
inc
sub
dec
jp
push
popf
dec
push
jns
add
sbb
sub
mov
loope
jae,pn
inc
jp
pop
jae
jnp
mov
cli
xor
mov
cwtl
xlat
rcrb
push
faddl
mov
push
mov
jmp
xchg
inc
notl
mov
shrl
mov
pop
add
sbb
mov
decl
ret
es
dec
pop
jne
fnstcw
das
sete
fsubr
sub
mov
xchg
fsubs
out
mov
ffreep
inc
push
je
sbb
mov
jmp
cmp
jno
dec
lcall
sub
adc
into
xchg
in
sbb
aaa
mov
inc
cld
ljmp
adc
add
xchg
cmp
jbe
pop
xchg
call
dec
cmp
frstor
test
aam
enter
cmc
inc
pop
jb
inc
pop
sahf
cmp
xor
jmp
sti
inc
dec
cwtl
out
push
push
jno
out
dec
adc
cli
adc
ret
imul
movsl
cmpsl
aad
jnp
mov
cmp
cmpsb
mov
idiv
leave
mov
pop
and
lcall
cwtl
icebp
mov
cli
call
fidivrl
mov
push
sub
out
or
sub
cmc
adc
jae
negl
mov
sbb
rcr
cmp
cmp
fcomps
ror
xor
imul
jp
cs
pop
mov
add
adc
cltd
out
mov
enter
scas
mov
pop
add
dec
addr16
shl
fnstenv
cwtl
push
ja
jne
adc
push
in
inc
jno
add
cs
dec
in
neg
test
sbb
cmp
mov
subb
ret
xorl
jnp
mov
ss
aam
outsb
add
pop
insl
test
fdivrp
cmp
sub
and
cs
add
mov
ret
jnp
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
shll
mov
mov
sbb
xor
push
dec
ljmp
arpl
mov
xlat
iret
cmpsb
stc
mov
into
cmp
and
pop
es
adc
pushf
repnz
adc
or
xor
enter
daa
cmp
mov
push
dec
adc
jle
pop
in
orl
insb
lret
inc
cmp
dec
push
xchg
xor
dec
aas
cmp
sbb
imulb
dec
lahf
pop
push
adcb
add
ds
add
dec
or
leave
iret
aam
sub
inc
lea
pop
loope
sbb
or
insb
test
fwait
adc
sbb
jl
sbb
xchg
fsubs
ret
outsb
inc
imul
sub
jns
ficoml
jp
adc
ret
je
arpl
fwait
mov
cmc
cmp
mov
insl
sub
subb
and
sub
jb
pop
call
outsb
ja
sub
mov
pop
int3
icebp
sbb
push
xchg
xchg
stos
int3
pusha
sbb
pusha
inc
mov
jl
mov
fmuls
adc
loopne
les
lret
cmp
mov
leave
or
call
test
jno
addr16
push
aam
or
inc
popl
shll
pop
xor
push
mov
adc
and
insb
jne
fdivrs
outsl
inc
xorb
outsb
mov
cmp
out
adc
repz
mov
sub
into
jge
ret
ret
jb
js
int3
and
jp
add
pushf
cli
sub
mov
push
xchg
cmpsl
or
mov
dec
mov
dec
mov
add
lcall
sbb
and
xchg
push
icebp
and
popf
mov
int
mov
je
push
int
fsubl
mov
xchg
cmp
scas
and
popa
push
mov
add
inc
mov
push
mov
mov
push
loopne
shlb
sbb
scas
test
ja
adc
add
dec
fistl
loopne
pop
fstps
sub
mov
fiadds
push
out
cmp
lock
cld
pop
leave
popf
lods
js
inc
xor
popf
adc
mov
jmp
loop
or
xchg
xchg
xchg
adc
call
stos
inc
popa
sbb
sbb
adc
mov
mov
je
lods
inc
sahf
mov
ret
xchg
mov
test
loop
push
sbb
repnz
sti
std
mov
outsl
add
lock
fists
dec
test
mov
push
dec
lcall
push
xlat
roll
inc
in
outsl
cmpl
jbe
and
xchg
jnp
pop
insl
ds
cmc
pop
and
in
ja
xor
sub
sahf
js
push
mov
pop
adc
xchg
mov
aas
jmp
cmp
jnp
iret
jecxz
stos
add
outsl
mov
ret
adc
ret
std
lahf
adc
cli
icebp
xor
sahf
and
loop
jmp
sub
sub
outsb
and
jnp
jmp
outsl
fcoml
pop
fsubl
add
pop
jbe
in
jns
subl
scas
sbb
enter
add
push
psubw
push
adc
adc
xor
mov
push
sbb
lods
dec
cmpsl
adc
mov
pop
mov
dec
push
popl
xor
xchg
int3
xchg
mov
aaa
enter
add
popf
imul
sbb
adc
and
push
lret
sarb
cmp
sub
xlat
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
stos
mov
mov
mov
or
xchg
cli
rcrl
dec
cwtl
xlat
pushf
mov
and
jge
xchg
pop
adcb
and
pop
fldenv
pop
aam
out
pop
dec
dec
xchg
sub
and
popf
mov
push
lock
addl
test
insl
testb
daa
sarl
add
or
sbb
fisubrs
and
push
lret
pop
push
test
inc
push
popa
ljmp
popa
stc
shlb
cld
int3
add
sbb
pushf
leave
push
jb
fwait
push
inc
jo
dec
xchg
inc
push
pop
mov
jp
test
dec
pop
mov
mov
outsb
push
andb
lret
mov
loopne
cmp
xor
loop
cmp
push
xchg
je
push
dec
je
mov
int3
cli
mov
inc
ret
or
movsl
test
cli
movsl
shrb
addr16
js
out
sub
int3
rcr
dec
lods
inc
jle
aaa
lret
sti
inc
inc
pop
push
sub
mov
add
loopne
stc
or
lods
fstpt
aaa
or
popf
icebp
sub
dec
iret
push
jo
ss
popf
push
sbb
shlb
push
cltd
lret
loop
ds
mov
add
sub
add
push
or
jae
sbb
sub
dec
scas
push
jne
and
addr16
mov
ds
sbb
daa
sub
sbb
ljmp
jmp
pop
mov
movsb
mov
bound
lcall
adc
lret
hlt
mov
push
test
insl
push
sbb
lret
orb
out
adc
and
lahf
rcrb
jp
dec
leave
in
pop
mov
and
imul
sbb
arpl
adc
and
or
adc
outsl
pop
sub
adc
dec
dec
pop
pop
test
icebp
cmp
pop
lret
setns
mov
dec
lods
cwtl
iret
test
mov
cwtl
xor
repz
mov
dec
lock
mov
or
add
rcl
pop
sti
adc
test
cmp
push
into
push
jge
jo
mov
xchg
push
test
je
mov
jae
xor
pushf
je
insb
xor
pop
dec
mov
out
jnp
shr
hlt
sbb
lds
sbb
out
jl
push
and
lret
add
loopne
sbb
loopne
mov
sub
and
test
lock
shrl
lock
pop
jb
int
sbb
int3
orb
arpl
and
add
test
lods
sbb
cli
into
xchg
adc
or
dec
cmp
adc
in
and
bound
scas
cwtl
push
mov
stc
fstpt
pop
or
mov
adc
rcr
outsl
push
xor
push
push
jmp
std
cmc
loopne
mov
roll
cmp
fwait
ret
mov
sbb
loopnew
cmp
sbb
sahf
fldenv
adc
sub
cmp
sbb
sub
ret
mov
outsb
jb
or
pop
push
lods
pop
xor
in
aas
nop
adc
cmpsb
in
push
adc
lcall
jp
scas
fsubp
inc
inc
mull
sub
dec
aam
subb
jl
cld
pop
mov
test
cmp
push
dec
bound
cs
and
data16
pop
sub
cmc
scas
adc
sbb
and
loopne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
ror
xor
cltd
ret
push
cmpsl
xchg
sar
fidivl
pop
sub
nop
mov
pop
inc
push
jb
in
scas
mov
call
pop
je
lahf
and
shl
dec
clc
out
mov
sti
or
bound
loope
xchg
enter
xchg
add
cmp
test
jne
lret
cmp
adc
cmc
xchg
loope
pusha
mov
fbstp
and
mov
adc
fisttpl
adc
jmp
sub
aaa
aaa
adc
xlat
xor
adc
pop
arpl
push
jnp
scas
inc
test
lds
xor
es
sbb
fcmove
mov
lea
aaa
ret
test
mov
loop
inc
push
hlt
fildll
jecxz
loopne
pushf
xchg
out
mov
icebp
push
cmpsl
sub
jbe
mov
dec
or
xor
cmp
gs
mov
pop
push
lahf
scas
loopne
cmp
insl
mov
inc
push
xchg
or
mov
push
mov
add
in
and
mov
jbe
lods
mov
xchg
inc
xcrypt-ctr
cmpsl
pop
sub
xchg
sub
adc
cmp
lea
mov
fists
imul
cmp
fcmovu
inc
sub
fs
mov
xchg
stc
jecxz
das
pop
jno
arpl
aas
pop
inc
scas
xchg
vmwrite
inc
pop
and
addl
jp
xlat
dec
xor
test
mov
push
bound
imul
fs
xor
sbb
in
movsb
cmp
mov
push
aas
or
xor
test
xchg
mov
sub
inc
jmp
stc
jecxz
loopne
and
incl
add
and
lret
fcomps
or
mov
stc
stos
sahf
sub
les
sbb
mov
out
dec
pop
scas
loope
insl
ds
mov
xchg
rolb
ja
xchg
mov
rcrb
push
pop
ficoml
int3
mov
lret
or
js
mov
jae
shlb
jns
push
push
bnd
sarb
sub
push
add
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
sahf
sub
mov
mov
clc
mov
std
cmp
inc
addb
aaa
push
repnz
loop
sub
lds
or
cmpsl
or
cld
aam
pop
addr16
data16
repnz
xchg
aad
xor
mov
xchg
jo
cmp
and
dec
rep
daa
jno
fsubs
add
push
jmp
or
roll
mov
xor
aam
aam
jp
or
scas
inc
mov
lret
push
clc
movl
lods
push
xchg
clc
lcall
mov
pop
rcll
jg
jne
mov
test
add
xor
and
pop
fisttps
bound
pop
stos
sarl
je
sub
int3
and
mov
mov
xchg
cwtl
add
das
movsb
aam
xchg
sub
adc
in
int
mov
cmpsb
pop
rcll
mov
mov
and
jge
aas
outsb
shll
mov
and
jmp
out
push
outsb
dec
push
pop
inc
cld
cmpsl
nop
jp
xor
daa
jecxz
mov
out
add
insb
mov
or
pusha
repz
mov
and
es
jae
mov
sahf
mov
mov
dec
adc
adc
pop
into
fisttpll
mov
jo
xor
ds
aad
add
or
cmp
sbb
and
ret
dec
sbb
jge
add
sbb
jae
push
cs
sbbl
psubusb
mov
adc
mov
xchg
scas
mov
xchg
mov
sbb
dec
mov
sarl
mov
inc
xchg
popa
adc
aas
out
add
js
pop
jns
and
adc
out
sub
jnp
xchg
jl
in
inc
jo
pop
sub
cmp
inc
sahf
out
std
sub
lahf
dec
xorb
scas
push
jge
push
int
mov
inc
mov
pop
mov
add
mov
outsl
dec
lret
mov
pop
pop
add
add
sahf
mov
movsl
inc
mov
add
adc
fsubrl
adc
add
pop
dec
insl
test
mov
sarl
insl
lea
push
pusha
icebp
pop
gs
pop
mov
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
and
icebp
add
mov
xchg
in
flds
xchg
push
mov
ljmp
push
jbe
adc
outsl
outsl
add
int3
push
adc
or
mov
fdivr
jb
jmp
sbb
out
dec
je
mov
dec
jne
mov
and
push
push
lret
xchg
movsl
inc
mov
sub
dec
test
mov
lret
and
adc
mov
andl
mov
hlt
add
iret
lret
push
cmp
pushf
xchg
dec
jbe
push
jl
popf
push
cmp
or
jl
cmp
cmp
mov
pop
mov
ss
test
lods
popf
or
dec
cltd
fistpll
loop
push
dec
cli
out
mov
and
jp
cmc
jae
mov
dec
icebp
je
repnz
loope
jle
iret
clc
cmp
xchg
adc
dec
xchg
fmuls
mov
pusha
test
pop
jle
inc
movsb
rorb
dec
jle
push
int
subb
add
aas
int
loope
aam
fcoms
mov
mov
push
stos
push
push
sbb
add
neg
or
add
in
cmp
inc
mov
push
dec
pusha
ja
or
xor
mov
sub
sbb
xor
xchg
mov
movsl
leave
xor
mov
cmp
enter
add
int3
dec
call
int3
push
inc
enter
xchg
push
cli
in
imul
sub
push
mov
push
fisubs
insb
rol
or
add
fnstsw
cmp
inc
int3
pop
ja
les
in
mov
jl
mov
push
cmp
repnz
xchg
sub
out
pop
mov
jle
cld
sub
lret
xor
clc
mov
push
ret
cmp
dec
or
lea
or
inc
dec
ljmp
mov
or
jp
fistps
inc
fistpl
dec
icebp
pop
movsl
jge
push
jb
xchg
notb
push
mov
mov
loope
lahf
xor
xor
es
jo
mov
aaa
aam
jg,pt
xor
cmp
out
vucomiss
dec
stos
hlt
aaa
adc
das
popa
fcom
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
frstor
adc
push
mov
mov
push
shlb
mov
and
addr16
nop
in
fnsave
int
jecxz
xchg
test
jp
aas
push
sub
outsb
push
mov
in
test
adc
and
test
sub
int3
xchg
dec
call
das
adc
outsl
leave
xor
popf
push
cmp
and
loope
mov
or
adcb
movsl
pop
popf
cmp
xchg
mov
and
js
cmp
mov
aad
xor
pop
inc
js
ljmp
in
popl
mov
outsb
out
or
imul
dec
in
sbb
ja
and
pop
jmp
or
or
cwtl
dec
xchg
mov
mov
jecxz
dec
mov
scas
jnp
aas
add
jns
xor
repnz
dec
inc
add
ss
xchg
imul
mov
push
out
inc
dec
sub
bound
inc
lods
test
inc
mov
clc
push
out
in
out
pop
outsb
loope
mov
shll
mov
adc
cwtl
pop
insl
add
xchg
push
and
xchg
test
mov
test
cmp
and
mov
and
adc
fbstp
aas
xor
lcall
stc
xor
insb
mov
pushf
mov
mov
cmp
outsl
mov
in
out
gs
loop
mov
sub
ja
sub
lods
stos
into
scas
shl
or
div
sub
cmc
sbb
popf
movsb
mov
psubq
sarl
xchg
in
or
test
inc
in
ret
call
inc
aaa
test
sub
call
mov
gs
loope
movl
add
push
xchg
push
mov
push
xchg
lret
add
jae
xor
int
push
insb
sub
xor
mov
icebp
mov
adc
jmp
or
mov
xchg
sbb
adc
push
es
dec
inc
jg
or
aaa
fdivrl
sub
pop
push
or
lods
rclb
dec
mov
sti
rcrl
mov
adc
xor
push
rolb
mov
inc
pop
jp
sub
fstpt
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
xchg
stos
or
mov
pop
in
jle
aad
inc
sti
xchg
lods
js
addl
je
ja
mov
xor
xor
fdivrp
dec
enter
cmpsl
mov
lock
dec
ret
dec
mov
jnp
mov
popa
cmc
mov
mov
out
jns
mov
data16
stc
aas
xor
adc
and
sti
add
test
aaa
lds
hlt
mov
push
clc
lds
jbe
mov
pusha
sub
xlat
lcall
cs
sbb
cmpl
adc
movb
decb
insl
inc
inc
sub
mov
shl
lods
pop
mov
test
arpl
scas
mov
push
mov
and
movsl
lret
jl
loope
stc
sahf
out
cmp
aas
aaa
clc
lcall
push
sbb
test
fcoms
mov
sub
dec
cs
mov
popa
dec
sbb
adc
arpl
cld
xchg
xor
mov
ja
sar
jge
dec
das
fidivs
sbb
mov
pop
and
jne
sub
pop
std
push
jns
scas
mov
es
add
cltd
mov
int3
out
cwtl
mov
stos
stos
mov
push
adc
adc
outsl
fstpl
test
subl
mov
mov
pop
push
or
es
and
jne
and
push
insb
repnz
pop
xchg
in
rcrl
jae
not
sbb
fwait
xor
insl
inc
clc
arpl
aaa
jno
sbb
jo
cmp
loopne
mov
mov
xor
shll
sub
sub
call
mov
dec
insl
out
fdiv
cmpl
sbb
lods
pop
imull
outsl
sti
inc
jnp
mov
jns
mov
mov
fcmove
mov
xchg
mov
cmp
and
pop
scas
push
or
or
scas
ljmp
push
rorl
mov
stos
pop
pop
pop
sub
mov
aas
fidivrl
jb
adc
add
je
push
pop
in
inc
or
shll
imul
loop
mov
and
call
mov
xchg
add
sub
dec
mov
dec
inc
sarl
inc
loopne
fldt
sbb
popa
push
dec
mov
lods
inc
mov
mov
adc
mov
add
punpckhbw
cmp
push
xchg
pop
pop
jnp
fiadds
leave
xchg
fs
pop
pop
std
shlb
fsts
mov
add
cmp
jbe
sub
lahf
pop
push
out
cmp
lret
loope
mov
inc
dec
push
addr16
insb
xchg
mull
lds
cs
stc
fimull
hlt
lods
sub
and
daa
dec
scas
loop
lret
stc
xchg
aam
push
pop
cwtl
jne
sub
lea
add
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
push
xor
mov
mov
aad
dec
addr16
pop
xor
pusha
pop
jecxz
cltd
scas
rcl
jae
imul
mov
adc
test
sahf
scas
test
incb
inc
sti
pop
hlt
ret
or
std
pushf
movsb
and
clc
sbb
sub
mov
mov
mov
mov
or
and
add
fisttpll
mov
rorb
std
testl
incl
inc
fcomps
mov
cmpsb
push
xchg
and
in
jp
imulb
rcrb
pop
in
out
stos
push
sbb
lcall
cmp
movsb
les
inc
scas
scas
pop
cld
fsubrs
xchg
sahf
mov
mov
xor
clc
data16
cmp
sbb
scas
and
daa
push
mov
std
lea
xlat
inc
xlat
dec
xorb
and
mov
xchg
test
pop
shrb
sbbl
sbb
xchg
pusha
adc
in
jmp
mov
or
push
insb
push
jle
mov
mov
movsl
dec
test
or
lret
gs
fistl
xchg
jae
or
mov
repnz
jo
aad
rcrb
xor
aam
and
jmp
sbb
and
inc
and
cs
rcl
dec
fwait
aad
out
mov
push
mov
pop
loop
xchg
pop
xchg
stos
mov
mov
mov
push
mov
and
dec
or
movsb
push
adc
sti
out
cltd
mov
jnp
das
adc
cmp
jb
cwtl
jge
imul
gs
xlat
daa
ds
adc
xchg
psraw
push
lea
shl
jne
mov
mov
fnsave
fildll
in
icebp
negl
mov
fs
fldl
push
out
repz
movsl
ror
mov
jle
ljmp
in
test
xchg
inc
gs
ds
enter
sarb
stos
mov
or
inc
jp
mov
mov
and
xchg
movsb
test
out
mov
mov
add
cmp
jl
lea
filds
and
mov
repnz
cwtl
jb
pop
pop
arpl
mov
fldcw
lock
js
cltd
push
push
sbb
inc
xor
adc
in
sbb
jge
lds
lret
jle
test
mov
ljmp
jne
shll
add
dec
dec
xchg
xchg
pop
adc
push
push
mov
xor
adc
inc
outsb
lahf
imul
pop
mov
es
divb
mulb
idivb
aam
mov
ret
push
push
dec
push
xchg
adc
mov
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
or
mov
mov
rorl
test
jns
leave
in
or
iret
pop
fstps
sbb
rcrl
dec
sbb
dec
and
sti
jnp
add
and
lds
xor
sbb
sub
sbb
pop
imul
std
dec
pusha
xchg
int3
data16
arpl
in
call
inc
xor
aam
sti
imul
shll
scas
ret
xchg
out
mov
xchg
inc
dec
add
pop
jmp
mov
daa
pop
call
and
movsb
movsl
test
aad
xor
sbb
or
adcb
lods
shrb
jb
jecxz
and
dec
jns
jno
sbb
jno
imul
dec
outsl
call
hlt
lock
mov
test
enter
and
rclb
lea
adc
xchg
dec
ret
fsts
jnp
cmpsb
mov
adc
out
fistpll
jle
mov
xchg
scas
jecxz
pop
out
xor
jmp
sbb
pop
enter
pop
cmp
inc
inc
add
std
cmp
loopne
sbb
dec
pop
xor
aaa
in
xlat
or
fwait
ss
inc
iret
and
stc
les
imul
or
test
ljmp
pushf
subb
mov
mov
inc
jns
mov
sbb
jmp
dec
mov
sub
xor
ss
and
inc
stos
xchg
adc
int
ss
int3
ret
cwtl
popa
jae
sti
rorb
xchg
bound
add
lcall
dec
lcall
mov
dec
push
mov
pop
adc
in
dec
add
shll
enter
fmuls
hlt
mov
mov
sub
lods
decl
les
push
cld
dec
mov
sbb
push
jb
push
imul
pop
jae
jp
je
mov
inc
ds
mov
sub
sti
addl
cmpsb
shll
movsl
pop
or
leave
movsl
enter
arpl
push
mov
push
in
dec
cmc
fisubrs
rorb
int
pop
or
push
mov
shrl
inc
pop
push
mov
aas
cld
jbe
loope
xchg
pop
jne
inc
movsl
aad
xchg
cmpb
add
push
or
push
aaa
int3
ret
xchg
jp
sub
xor
jbe
mov
inc
push
cmp
in
mov
ret
jge
arpl
and
jecxz
popa
push
jl
mov
xor
xchg
int3
pop
dec
rolb
or
mov
out
push
xor
lds
insb
incl
sub
jl
cmp
sahf
jp
lods
ss
xlat
repnz
sysret
xchg
xor
push
bnd
xor
test
fadds
fsubrl
jg
mov
pop
add
jne
ret
xor
jnp
cmpsl
lret
and
in
arpl
push
hlt
xchg
mov
out
in
push
sti
or
adc
add
shlb
mov
pop
shl
push
scas
xchg
iret
adc
add
arpl
lcall
scas
mov
jo
cmp
cmp
and
or
cmp
iret
fdivrl
roll
mov
dec
push
rcll
sbb
push
cmpsb
int3
adc
cmp
pop
push
ss
inc
and
ret
mov
mov
push
inc
stos
in
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
add
movsb
pop
push
mov
mov
inc
sub
xor
mov
scas
push
jne
inc
adc
enter
mov
outsl
mov
push
scas
icebp
aam
add
lea
sti
shr
inc
test
jmp
les
or
call
das
cmp
sbb
dec
iret
xor
xorl
jb
jno
jg
sahf
mov
aas
outsb
lods
sahf
std
insl
lock
mov
lock
lock
push
pop
xchg
arpl
jge
sub
cltd
decl
jns
mov
or
fidivrs
mov
rcrl
mov
jns
je
xchg
adc
jnp
xor
adc
shll
and
xchg
mov
fsubrl
or
and
sbb
xchg
sub
test
push
push
jbe
das
imul
test
fistps
repnz
gs
cmpsl
adc
mov
test
out
push
add
mov
dec
dec
mov
lds
cmc
cmc
and
mov
ss
rdpmc
leave
and
xor
jecxz
pop
mov
scas
mov
adc
jae
dec
mov
jns
popa
out
sub
loope
and
daa
and
leave
sahf
add
fucom
sbbb
push
pop
shll
icebp
lret
ds
daa
scas
inc
mov
scas
sti
roll
cmc
popf
fwait
push
fidivs
pusha
lcall
push
jg
pop
ljmp
pop
call
mov
test
jle
dec
jnp
aad
fisubl
dec
imull
xchg
mov
inc
jg
mov
lods
insl
std
rorl
gs
test
div
pop
cmpsl
sbb
sbb
in
rcrl
sub
pop
ss
popa
enter
in
cmpsl
cmp
daa
fwait
lds
jae
int3
mov
ret
sbb
lahf
cmp
mov
xorl
cld
dec
fiadds
pushl
std
push
mov
jge
xor
jne
dec
andl
pop
xor
dec
sub
imul
jecxz
jns
push
scas
push
inc
xor
mov
jle
loope
in
mov
aam
mov
jns
inc
push
cmp
mov
push
mov
hlt
push
cld
adc
shll
les
inc
cmp
inc
scas
mov
cli
pop
ret
imul
popf
loop
and
ja
shrb
movsl
pushf
gs
sbb
in
mov
pop
jns
add
pusha
mov
dec
or
adc
lds
aad
and
ljmp
bound
out
popl
je
pop
shrb
cmp
xlat
pop
repnz
xchg
xorl
and
lods
jbe
es
psubusb
sub
mov
jp
push
push
cli
inc
jp
xor
jo
mov
inc
pop
adc
fwait
testl
push
sbb
sahf
push
lods
test
sub
lods
aad
dec
loop
mov
adc
xor
jl
xlat
push
jle
push
test
xchg
jecxz
sub
js
mov
xor
xor
xor
jg
std
push
lds
sbb
pop
and
fcoml
pop
aas
xor
mov
or
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
popa
inc
js
jge
mov
mov
jbe
inc
shrb
xor
dec
adc
sub
fsubs
push
push
mov
idivl
xchg
jnp
jecxz
cltd
add
das
mov
jmp
sub
mov
push
or
cmp
xor
shr
push
xorl
cwtl
out
insb
mov
jbe
mov
lods
jns
cs
xchg
jne
sbb
loope
loopne
lret
call
movsb
dec
cmpl
bound
jmp
mov
xchg
test
push
jg
test
dec
pop
loope
jl
or
jnp
std
pop
lods
xor
jmp
cmp
mov
out
and
ljmp
sahf
lret
loop
imul
sahf
push
stos
icebp
imul
mov
xlat
mov
mov
lock
aaa
jno
in
mov
sub
cmpsl
mov
jnp
pop
lods
lds
mov
or
jmp
aad
insb
mov
es
push
sbb
fisttpl
pop
xchg
cmp
loop
mov
sbb
test
and
add
sub
or
fmull
std
sub
jns
mov
lea
pop
adc
mov
push
cmpsb
and
mov
pushf
lds
dec
push
leave
hlt
push
mov
fwait
leave
xchg
xor
adc
jge
xchg
adcl
pusha
mov
pop
popa
in
jmp
hlt
adc
sbb
scas
fadd
cltd
imul
inc
push
imul
cmp
jg
push
fsubp
push
xchg
jp
sbb
leave
jne
add
pop
inc
cmp
rorl
lcall
inc
mov
or
sub
stc
test
mov
xchg
std
call
insb
mov
jae
xor
lods
dec
jnp
inc
pop
and
sub
arpl
xchg
dec
pusha
sbb
fnstcw
push
and
mov
in
psubsw
movsb
imul
call
data16
mov
pop
gs
lods
mov
out
loope
add
push
fisttps
jecxz
add
pop
test
lock
mov
out
inc
insb
and
subb
mov
dec
std
jb
daa
shl
pushf
test
iret
mov
jnp
je
xor
cmp
mov
std
icebp
pop
les
outsl
jge
mov
roll
add
fiaddl
ja
mov
or
ljmp
sahf
lret
lahf
test
cmp
lret
cwtl
pop
outsl
rclb
push
mov
test
xchg
pop
pushf
and
imul
leave
or
adc
call
popa
cmp
xor
int
aaa
sub
test
mov
add
aam
test
cmp
stos
xchg
aaa
lcall
push
jle
inc
sbb
jb
push
cmp
addr16
push
sub
or
xchg
push
mov
add
enter
and
and
ja
dec
aaa
das
inc
dec
nop
fld
push
fnsave
add
sbb
pcmpgtw
out
jo
lds
outsb
adc
and
ss
xor
stos
shl
dec
imul
dec
cld
mov
dec
bnd
xor
rorb
rorl
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
lods
clc
movsb
movsb
sub
mov
push
inc
lahf
xchg
pushw
sub
pop
mov
pop
jae
mov
push
xor
push
cs
es
into
in
mov
mov
aad
cltd
cwtl
popf
add
xor
ss
pop
add
inc
dec
scas
nop
mov
mov
lret
inc
sbb
loope
sub
movsb
cmc
and
movsl
cmc
mov
push
in
xor
mov
in
jae
xchg
xor
out
shl
xchg
in
ret
bound
push
fisttpl
mov
out
test
scas
into
xchg
inc
dec
aad
add
arpl
repz
mov
inc
push
xor
cmp
arpl
daa
cmp
or
dec
push
ljmp
fcompl
sbb
xlat
ret
outsb
mov
pop
lahf
dec
lods
cmpsl
outsb
pusha
psrld
into
or
and
sbb
cld
dec
sbb
add
mov
adc
inc
leave
jg
in
jbe
std
fsubrl
out
inc
and
sti
hlt
ror
popa
mov
jge
mulb
aad
enter
push
mov
scas
mov
arpl
call
int3
pop
add
sub
sbb
lcall
lds
and
stos
in
push
mov
mov
imul
popf
cmc
imul
pop
je
clc
lds
lods
je
inc
rorl
insl
movsb
mov
sub
or
lcall
push
das
xchg
push
ja
cmp
xchg
or
adc
mov
push
repnz
sbb
rcll
ss
sbb
dec
iret
adc
pushf
xchg
push
inc
push
rcrb
mov
and
mov
mov
sahf
push
outsl
shll
data16
adc
inc
or
add
addl
pop
orl
jo
xor
jmp
lret
cltd
in
cmp
dec
dec
cmp
mov
fildl
sbb
jecxz
dec
xor
mov
xchg
xor
adc
cmp
iret
int
adcl
add
jle
sarl
push
pop
les
lock
jp
cmpsl
xlat
lods
mov
into
sbb
sub
mov
push
xchg
lea
cltd
push
jae,pn
sub
in
xor
fstpl
out
into
rorb
test
xchg
lahf
add
cmp
jge
lods
pop
hlt
pop
fsub
sbb
cmpsl
inc
and
sub
add
daa
repnz
sub
fcoml
mov
inc
inc
dec
jecxz
loope
in
mov
out
int3
xlat
into
add
xchg
jb
inc
enter
pop
mov
jmp
test
test
idivb
jle
loopne
pop
push
xchg
xchg
xchg
mov
push
fs
xor
mov
pop
scas
in
jmp
cld
sub
xor
scas
imull
lock
fistpll
fistl
lods
jnp
sub
sub
les
lret
mov
scas
arpl
cwtl
aad
shll
dec
jecxz
ja
or
and
add
cmp
xor
inc
lcall
je
aad
mov
lret
inc
adc
loopne
call
pop
push
sbb
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
sbb
xor
mov
xchg
pop
inc
les
push
jae
push
sub
cmp
jle
xor
mov
xchg
add
lahf
sbb
or
shll
xchg
cs
and
in
test
sahf
aam
fdivrl
push
popf
movsb
jmp
loope
pop
cmpsl
mov
ficoml
lcall
cmp
dec
jmp
push
push
lret
adc
out
pop
mov
jns
lea
mov
and
aaa
xchg
adc
outsl
arpl
ja
sub
shl
cwtl
cmc
mov
scas
inc
jp
loope
inc
mov
mov
inc
inc
or
sbb
nop
int3
mov
pop
loopne
sahf
xor
push
xor
mov
repnz
and
lahf
js
es
dec
cs
adc
or
stos
jae
mov
add
in
sub
cltd
push
jb
xor
add
movsb
imul
jmp
fwait
js
fucomi
xchg
or
mov
lcall
mov
cmp
sub
mov
imul
push
mov
jl
imulb
stos
and
out
xor
addl
frstor
lahf
mov
sub
and
loope
add
shlb
jb
shr
clc
movsl
sub
add
jae
inc
jl
cli
sub
add
adc
cld
sbb
in
int3
xor
repz
cmpsl
scas
test
ljmp
popa
cmp
sbb
out
xor
cmpb
mov
repz
adc
mov
mov
shrb
xchg
in
pushf
les
mov
lods
ds
push
imul
in
cmp
cmp
or
in
sub
ret
popa
fwait
aam
inc
addr16
fistl
ret
out
mov
push
fs
or
pop
sub
ss
mov
shll
dec
or
insl
sbb
fsubp
andl
scas
dec
dec
das
push
push
shlb
cmp
mov
cwtl
jl
imul
push
fldcw
jae
mov
out
jnp
or
lret
inc
adcl
mov
push
iret
jmp
cmp
sti
cli
jmp
pop
das
and
cmp
push
mov
xchg
adc
ds
jb
ds
ficomps
int3
movl
jecxz
jg
les
stos
lea
out
mov
subl
call
hlt
dec
inc
mov
add
push
mov
loop
repnz
lret
adc
in
pop
fsubs
out
int3
ret
sti
jge
lock
and
push
lods
cmp
jo
pop
jbe
lds
inc
loopne
add
popf
subb
or
aaa
cmp
or
js
mov
jb
xchg
xchg
lret
fmuls
out
repnz
xchg
mov
gs
jge
movsl
inc
jne
xchg
pop
xor
push
pop
sub
lea
xchg
call
jae
pop
icebp
dec
jne
adc
xor
test
mov
loope
xchg
xor
call
cmpl
dec
inc
aad
lahf
daa
loopne
jecxz
xchg
mov
stc
fbstp
xchg
mov
stos
sbb
fildl
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fldl
jecxz
cmp
mov
dec
imul
cltd
mov
jle
js
mov
pop
jne
pop
and
int3
out
mov
pushf
mov
fnsave
cli
push
jb
adc
push
mov
icebp
aaa
shr
jg
dec
mov
arpl
sbb
sub
aad
xor
jecxz
pop
popf
cs
add
push
test
add
sub
xchg
popa
mov
sahf
or
push
jnp
mov
cld
jg
and
scas
in
xor
jb
std
push
xor
out
mov
mov
xchg
mov
push
enter
xchg
mov
cmpsl
and
lret
sbb
ret
and
test
and
push
in
iret
pushf
dec
mov
xor
mov
dec
xchg
das
fldcw
je
inc
sbb
js
sub
int
jns
ret
xor
fstpt
cmp
mov
xchg
cld
inc
popf
repz
pop
test
daa
jp
pop
pop
xchg
xchg
int
pusha
aam
push
int3
fcoms
cmpb
mov
dec
and
shl
sahf
movsb
into
pushf
clc
outsl
cmp
sub
dec
adc
clc
jo
xor
push
mov
jnp
push
ljmp
jle
adc
jb
repz
mov
cmc
inc
movsl
mov
mov
das
fwait
jp
add
popa
mov
data16
or
jnp
jecxz
mov
mov
sub
out
ret
popa
movsl
imulb
out
rcrl
fmuls
xor
pop
clc
pop
jecxz
clc
das
data16
xchg
adc
mov
xlat
jp
repz
popa
popa
aam
dec
arpl
aam
pop
inc
mov
loope
jnp
add
mov
sub
adc
inc
out
xchg
jno
lods
mov
jne
repnz
cmp
inc
cmp
out
mov
mov
add
mov
mov
or
mov
and
and
adcb
cmpb
jg
hlt
ja
and
cmp
add
mov
or
adcl
out
in
test
jo
jbe
in
pop
mov
push
movsb
inc
sub
repz
ljmp
imul
jle
mov
scas
mov
add
push
sti
xor
jg
lret
cmpl
and
rcll
mov
adc
pop
repnz
or
pop
clc
or
fstpl
ljmp
imul
mov
fwait
dec
mov
sub
sbb
repz
inc
adc
sub
dec
xchg
adc
ficoms
outsb
jecxz
mov
imul
add
xchg
lds
ljmp
cs
cwtl
rolb
sbb
inc
out
fnsave
or
inc
pop
outsb
data16
insb
jb
pop
fdivp
mov
fisubrs
fs
scas
xor
add
int3
jp
mov
aam
mov
ficompl
movsb
sub
jle
jmp
dec
popl
dec
clc
jnp
push
xor
mov
jg
mov
loopne
pop
loope
xor
lock
sahf
xchg
in
adc
sbbb
sbb
or
sbb
sbb
scas
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
nop
push
inc
mov
mov
es
inc
stos
mov
jmp
mov
dec
in
xchg
cli
sbb
cmp
in
push
rol
sarl
cmovb
inc
dec
inc
mov
hlt
sub
fistps
lods
test
jge
ds
scas
pop
ret
xchg
aad
mov
dec
insb
push
jmp
in
pop
push
andl
xchg
xchg
dec
sbbl
cs
jbe
sbb
pop
lods
pop
out
push
fdiv
fadds
mulps
mov
dec
sbb
shlb
push
bound
jmp
pop
outsl
mov
mov
mov
aam
push
js
ds
dec
lret
test
push
in
ficoms
dec
dec
scas
and
inc
dec
in
dec
inc
notb
adc
sub
mov
add
mov
sbb
cli
mov
fld
push
adc
into
push
dec
mov
sbb
jae
inc
pop
dec
movsl
xchg
jle
repnz
stos
push
movsb
ret
push
das
pop
imul
int3
pop
xchg
mov
xor
add
lock
mov
add
pop
mov
inc
push
xor
sahf
push
mov
addr16
sub
dec
scas
js
xchg
in
int3
inc
xor
enter
in
jne
jnp
dec
cmp
shll
sahf
roll
in
into
addb
movsb
dec
in
mov
jno
sub
jno
repz
or
mov
pusha
mov
dec
bound
shrb
sub
pop
cmc
dec
mov
xchg
xchg
sbb
adc
push
incb
sbb
lds
fdivr
mov
bound
pop
popf
hlt
pushl
add
xchg
gs
icebp
rcrl
sbb
pop
das
movsl
pop
and
push
mov
dec
cwtl
shlb
mov
cld
shll
clc
lods
mov
or
add
cmp
push
mov
and
popa
inc
fs
mov
sub
dec
hlt
sub
std
jo
js
fbstp
mov
jae
stc
shrl
mov
sbb
cmp
aaa
enter
and
mov
mov
or
push
add
enter
sbb
add
pop
sti
out
fsubs
repnz
iret
ljmp
sbb
outsb
mov
cld
insb
test
ficomps
fisubrl
and
push
sahf
mov
mov
hlt
fwait
pusha
pop
mov
cmp
mov
dec
rcr
aam
fisubl
out
add
rorb
xor
cmpsb
add
aam
jne,pt
inc
insl
mov
inc
jge
dec
mov
jp
cmp
repz
cmp
je
ja
cmp
or
push
lds
xchg
into
icebp
mov
or
sub
jp
stc
outsb
adc
jno
jge
test
das
in
rcll
push
push
cmp
push
je
mov
daa
cmc
mov
jmp
lret
mov
add
ljmp
pop
sub
mov
aam
cli
push
sti
imull
dec
dec
mov
mov
mov
js
out
xor
pop
xchg
cmp
adc
jae
jge
fcmovu
mov
mov
test
cmp
lret
movl
jns
out
dec
fwait
xchg
rcrl
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
cmp
lret
cmp
xlat
in
ds
push
add
cmpsb
sbb
xchg
hlt
xchg
shrb
mov
inc
push
roll
es
movsb
xor
imul
in
test
inc
je
loope
inc
push
inc
mov
rcrb
xchg
xchg
dec
dec
ljmp
sbb
mov
pop
es
inc
fsubrl
stos
addb
and
add
adc
icebp
jne
cmp
ljmp
xor
push
cld
fbstp
xchg
pop
or
cwtl
cmc
dec
push
lahf
cld
push
lahf
mov
mov
scas
ret
jge
mov
rol
dec
inc
ja
lea
jmp
pop
xchg
push
outsl
popa
test
mov
dec
jo
xchg
sbb
push
stc
jb
stc
xorl
dec
push
andl
fstl
dec
cmp
sub
stos
mov
mov
lahf
jmp
xor
repz
inc
add
popf
add
xor
sub
cmc
les
push
push
cmc
mov
xor
insb
pop
mov
xor
or
js
push
call
inc
rclb
insb
insb
jp
in
shlb
jae
xorb
or
add
insb
ds
outsb
add
jo
cltd
ror
andl
test
fidivrs
out
and
scas
in
and
sbb
xchg
mul
sti
scas
xor
mov
das
jns
ds
arpl
mov
out
mov
je
negl
inc
add
icebp
lods
roll
loopne
dec
popf
lahf
int3
insb
cmp
mov
repnz
insl
push
in
aaa
jns
inc
inc
adc
fidivrl
out
fcoml
push
push
cmc
ja
nop
xchg
test
out
call
movsl
pushf
dec
movsl
addb
adc
adc
sub
test
add
xor
out
test
int
mov
adcl
fcmovnu
xchg
repz
mov
xor
lds
xchg
shlb
insb
inc
in
rolb
stc
pop
lea
jae
test
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
insb
jae
xchg
or
mov
mov
ret
imul
and
aaa
adc
or
dec
dec
or
stos
mov
xchg
cli
ret
mov
cltd
jp
subb
inc
clc
call
je
sahf
sar
test
mov
jnp
push
mov
ret
dec
stos
push
add
pop
mov
adc
loopne
into
es
xchg
mov
xchg
ja
aaa
add
pop
test
push
dec
sahf
pop
push
mov
adc
cmpsl
loop
aas
jo
adcb
sub
fwait
lods
adc
dec
test
test
out
aas
movsl
add
and
popf
shlb
js
loope
nop
in
je
cmpsl
sbb
mov
test
dec
dec
outsb
daa
stos
dec
mov
cmpsb
cwtl
xchg
sub
adc
jnp
mov
mov
mov
adc
cmpsb
xor
xchg
loope
stos
mov
lds
push
frstor
jg
stos
dec
jno
faddl
shl
push
cli
jp
xchg
adc
clc
sub
jge
js
mov
jmp
xlat
cmp
ret
lret
mov
incl
mov
cmp
pop
jbe
aam
fcmove
mov
movsb
sahf
pop
addb
jmp
add
xchg
cltd
mov
int
leave
shll
out
jle
xchg
xor
cmpsl
loope
pushf
subl
adc
shll
scas
adc
pop
stos
aas
dec
push
pop
ja
jmp
xor
xor
push
or
fs
adc
nop
cli
mov
into
or
loop
mov
fisttps
out
cld
push
dec
in
dec
xor
cld
cmp
cltd
push
test
int
push
inc
insl
test
dec
xchg
pop
jno
enter
xor
jmp
call
jle
shrb
push
mov
ds
fdivr
dec
fdivrl
loopne
lahf
or
jmp
dec
les
mov
jmp
xor
add
mov
mov
adc
gs
xor
loope
mov
mov
out
call
movsb
mull
fcompl
mov
xor
push
outsb
mov
pop
and
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
lret
jg
fst
push
mov
mov
in
das
out
and
loop
inc
xor
outsb
xorl
sbb
data16
and
out
sahf
jne
scas
movsb
lds
out
dec
push
pop
mov
pop
repnz
je
out
or
jge
fcomip
imul
loop
dec
es
adc
pop
pusha
push
and
cli
inc
scas
fsubl
scas
adc
mov
dec
gs
gs
lds
cmp
mov
jle
and
jmp
stos
imul
inc
adc
inc
pop
xor
scas
pop
or
dec
clc
pop
adc
insb
xchg
add
popf
jl
fnstsw
sub
cmpb
push
shrb
jl
lcall
repz
mov
pop
add
aas
lds
sub
ja
je
pusha
dec
add
stc
push
push
pop
aam
push
inc
inc
push
push
adc
push
bnd
out
inc
xchg
or
mov
jns
dec
mov
sbb
pop
pop
iret
rclb
cli
ret
fnsave
or
mov
inc
cmc
ficompl
not
les
mov
inc
mov
jo
and
cwtl
mov
aaa
hlt
mov
jno
loopne
mov
mov
icebp
xlat
and
movb
nop
mov
inc
xor
out
sub
pop
jmp
jnp
inc
inc
sub
push
jmp
repnz
cld
mov
mov
pop
pop
mov
cmp
insb
ljmp
in
xchg
push
inc
add
mov
cs
imul
push
in
xchg
addl
pop
icebp
aaa
ret
out
sub
sti
add
inc
cmp
or
setne
arpl
lret
fistpl
stc
lret
add
push
inc
pop
bound
sbb
jge
lret
mov
adc
sarb
popa
into
mov
adc
mov
xchg
push
and
dec
stos
push
fs
push
out
xchg
sarl
popa
mov
pop
cmpsb
clc
popf
rcrb
inc
jns
lods
ljmp
ud2
cltd
out
add
jp
gs
jl
adc
das
fdiv
fdivs
shlb
in
imul
or
xchg
mov
out
sbbb
lock
mov
cmp
stos
pop
mov
shl
js
stc
cli
arpl
rolb
rol
iret
mov
rolb
mov
cmpb
or
mov
rcll
push
pop
adc
jnp
push
test
lds
clc
test
addr16
mov
mov
or
mov
imul
jp
test
imul
leave
cmp
into
mov
stos
fistps
insl
sbb
gs
dec
sub
mov
sar
outsl
mov
popf
mov
mov
lret
addr16
push
ja
test
repz
push
fcomps
gs
movsb
fwait
mov
ds
adc
xchg
ljmp
add
or
insb
ljmp
sbb
mov
lahf
loop
pop
mov
cwtl
and
es
sub
inc
popf
out
pop
xor
std
pusha
sti
fnstcw
int3
push
jmp
xlat
xchg
push
lcall
fists
iret
scas
pop
mov
mov
sub
pop
je
xchg
sub
xchg
or
movsl
loop
lahf
in
jnp
sbb
js
add
addr16
or
arpl
and
mov
sahf
fs
xchg
dec
in
outsl
mov
sub
mov
popa
andl
xchg
push
fidivl
xor
in
sub
hlt
iret
test
mov
mov
cli
in
jmp
pop
jecxz
dec
bound
iret
popf
loope
or
in
rcll
adc
add
into
jg
cmpsb
fcom
aad
lds
adc
das
pop
lahf
in
mov
mov
jl
int
pop
ljmp
adc
push
inc
in
roll
mov
out
das
push
mov
in
pop
loop
aad
mov
sub
sub
lahf
rolb
bound
mov
jle
add
outsl
cmp
mov
popf
mov
mov
imul
mov
sbb
add
rcrl
xlat
xchg
sbb
jo
mov
shll
aam
subl
addr16
notb
mov
testb
sub
js
mov
mov
mov
inc
push
and
outsl
pop
pusha
add
mov
or
dec
fstpt
sbb
adc
rcl
mov
push
stos
mov
out
dec
mov
and
aaa
call
test
adc
inc
mov
mov
xchg
jl
in
push
cmc
dec
xor
inc
or
mov
scas
imul
lods
mov
out
movsl
mov
pop
push
dec
rolb
push
add
stc
mov
dec
cmc
and
mov
scas
xor
pop
inc
mov
popa
mov
push
inc
inc
outsb
in
mov
out
pusha
mov
cli
fiaddl
nop
jb
sub
int
inc
lds
dec
out
nop
test
or
shll
adc
jnp
enter
jle
fwait
push
pop
mov
aas
inc
movsl
pop
pop
jle
add
cs
push
icebp
test
push
fsubrl
mov
xchg
enter
sub
mov
dec
loope
push
lds
xchg
jo
push
and
push
cmp
push
sub
or
xchg
enter
sub
and
jp
out
testb
pop
ret
lock
mov
sub
call
mov
cmp
jne
loope
mov
jl
mov
jge
fnsave
cwtl
ret
jmp
sub
xlat
fistps
push
popf
push
in
push
mov
mov
cmp
xchg
jg
and
adc
pop
mov
push
movsb
push
adc
and
pop
mov
ret
ret
adc
mov
clc
push
nop
push
xchg
mov
mov
adc
fucomip
adc
shlb
adc
xchg
inc
out
aas
cmp
shrl
lea
push
and
daa
fistl
sub
push
call
hlt
leave
mov
cltd
xchg
lahf
loopne
out
adcb
cmpsb
push
sbb
loope
sub
xor
mov
rcr
xorb
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
mov
mov
mov
mov
ret
inc
cmp
or
add
jno
pop
mov
mov
cld
and
or
es
push
shrl
cmp
xor
das
cmp
in
sub
sbb
or
lods
mov
or
cld
scas
cmp
add
push
adc
hlt
stos
add
jne
or
repnz
dec
and
lahf
jle
cmp
mov
pop
jle
movsb
or
fldcw
mov
jl
xchg
jge
inc
insl
inc
ss
fdivs
sbb
mov
pop
pushf
aaa
loop
pushf
cld
das
pushf
daa
mov
imul
push
into
les
pop
int3
sub
or
imul
pushf
jecxz
sti
cld
lods
jae
push
fcomip
repnz
cmpsl
mov
add
or
test
push
call
cmc
cwtl
sarl
fwait
mov
lea
dec
stc
xchg
fbstp
mov
stos
test
sbb
je
and
mov
es
fisubs
push
ds
ljmp
fstpl
imul
inc
fisubrs
loope
cmp
push
mov
sbb
scas
inc
adc
mov
push
sub
test
ret
xchg
mov
xor
mov
push
mov
cs
bound
adc
or
test
jp
cmp
imul
clc
lret
addr16
lret
pop
stos
std
sub
mov
mov
pop
push
cmp
xchg
in
in
or
fnclex
mov
rcr
cmpsl
je
test
or
in
test
outsb
inc
mov
mov
lds
or
pop
stos
mov
stos
mov
inc
stc
inc
push
js
lds
mov
jmp
adc
sub
in
lahf
mov
cmpsb
or
adc
je
adc
out
jne
cs
or
xchg
mov
push
idiv
inc
je
icebp
lret
push
out
shll
adc
sub
lcall
loop
xor
pop
scas
push
and
pop
xor
pop
add
aad
dec
inc
inc
mov
loop
pop
daa
lds
xor
test
pop
and
ds
je
add
add
scas
add
jnp
inc
aam
jmp
loopne
inc
imul
sub
jle
adc
fisttpl
mov
xchg
addl
nop
sti
mov
cmp
fdivrs
pushf
and
test
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
movsl
dec
cmpsb
jecxz
mov
ret
mov
insb
xchg
pop
dec
adc
dec
xor
jb
lock
mov
xor
adc
cld
xor
fs
das
andl
jno
add
xor
mov
imul
sahf
rcr
push
or
movsl
push
xchg
sarl
pop
xchg
loope
mov
int3
pusha
push
mov
fcoml
arpl
enter
ss
cmpsl
push
sti
inc
shlb
mov
sbb
in
adc
stc
movsl
and
inc
xor
outsl
mov
in
negl
inc
popa
aas
mov
fnstenv
inc
adc
sbb
movsb
dec
shr
adc
inc
adc
scas
dec
cmp
outsl
mov
push
jl
mov
jp
xor
push
push
cmpsb
es
adc
dec
jp
les
sahf
xor
push
leave
push
shlb
and
sbb
test
in
xchg
nop
rolb
arpl
cmc
mov
flds
mov
pop
sub
js
sbb
movsb
pop
pop
jp
lahf
push
fbstp
dec
cli
fdivr
add
mov
jecxz
xchg
cltd
xor
lahf
ficoms
insb
pop
mov
std
test
cmp
inc
andb
cmp
and
push
incb
iret
adc
fcompl
pop
cmp
adc
ljmp
dec
inc
test
ret
xor
dec
inc
repz
call
push
leave
punpcklbw
sbb
jno
jo
dec
dec
pop
jns
enter
push
adc
fs
test
dec
dec
stos
sbb
pushf
js
loope
adc
rcrl
mov
std
in
popf
in
inc
test
movq
nop
bound
push
mov
and
jp
fimull
pop
jbe
xchg
inc
in
andb
lret
jl
loopne
sbb
adc
adc
mov
xchg
xchg
sub
push
mov
adc
xchg
dec
sahf
mov
inc
mov
xor
js
push
les
cmpsl
les
mov
add
mov
les
loopne
adc
adc
popa
adc
dec
mov
call
push
mov
popa
outsb
cs
sbb
adc
sub
mov
mov
int3
insl
stos
aas
mov
lret
aam
and
ret
jle
jmp
fbld
cmp
mov
rorl
pop
stos
es
sbb
and
clc
ret
pop
sbb
ja
fists
sbbl
mov
decb
lret
insb
stos
adc
sarl
lea
pushf
jno
and
scas
mov
inc
loope
jne
sbb
cs
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
jecxz
mov
sub
mov
mov
jne
dec
popa
push
insb
push
shlb
test
jbe
xchg
data16
cmp
leave
loopne
ss
lds
push
mov
into
cmc
ds
mov
and
mov
std
jl
add
cmp
push
fistl
lret
jmp
jbe
push
mov
test
mov
mov
xor
xchg
sub
sti
mov
jb
call
fcompl
sbb
adc
sub
mov
aaa
cld
mov
mov
outsb
mov
push
pushw
dec
mov
fdivrs
pop
fidivs
adc
daa
loopne
cmp
pop
repnz
fcoml
setae
push
arpl
mov
xchg
inc
std
repnz
pop
shr
ljmp
add
xor
pusha
sbb
sub
sub
fucomi
xchg
fildll
push
inc
std
sbb
sarl
adc
jp
in
lcall
cwtl
in
loope
lock
sub
dec
ret
lds
sbb
dec
sub
repnz
lret
mov
jge
or
repnz
sub
aam
jp
xor
dec
test
imul
std
negl
sub
pusha
pop
lock
mov
adc
xor
push
add
push
lcall
orl
popa
lds
frstpm(287
dec
mov
hlt
mov
shlb
cli
dec
popl
jle
inc
push
test
je
and
sbb
out
fdivl
pushl
jo
call
pushf
xchg
clc
sbb
ds
mov
rcl
mov
adc
lea
sub
push
push
rcrb
mov
out
pop
fistps
dec
or
in
aas
ret
jnp
mov
cmc
mov
xor
es
mov
mull
add
mov
push
leave
lret
jecxz
inc
movsb
shrb
or
fcompl
mov
bound
push
jbe
pushf
xchg
in
xchg
xor
cmc
or
enter
jmp
negl
dec
adc
mov
add
idivb
or
inc
iret
pop
inc
les
imul
cmp
test
cmp
mov
mov
sahf
leave
lcall
mov
dec
iret
push
jecxz
mov
or
fsts
mov
mov
out
ja
dec
adc
arpl
push
in
inc
jle
imul
cmpsb
xchg
ficomps
jb
dec
call
in
jns
mov
mov
enter
insb
push
xchg
gs
or
add
dec
push
test
repz
mov
lahf
aaa
out
or
adc
loopne
ror
in
adc
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
cmpsb
jecxz
jb
mov
lods
xchg
push
add
clc
scas
mov
or
inc
xor
dec
outsb
mov
xlat
out
mov
mov
push
mov
and
aam
mov
pop
mov
lock
adc
nop
rcll
in
scas
sub
cmpsl
ret
fcmovbe
sub
push
xchg
or
movsb
sub
cmp
loop
jno
cmc
call
insb
add
fdivrl
sbb
testb
xchg
sbb
clc
mov
or
jb
vmovntps
in
and
jns
push
jecxz
push
addl
stc
insb
pop
jmp
jno
shr
lret
sbb
ldmxcsr
mov
adc
jge
scas
movb
cli
push
xlat
jno
push
xorl
lahf
dec
sbb
sub
sub
jo
jge
xchg
dec
fsub
or
lret
bound
mov
push
fsub
leave
cmp
pop
add
mov
cmp
ja
lods
jne
rorb
sub
sbb
jle
inc
mov
ret
jle,pn
lret
cmp
in
pop
sub
cmp
push
sti
dec
jle
lods
scas
sahf
mov
and
push
xlat
and
js
sahf
and
fisttps
mov
iret
sbbl
mov
jnp
mov
cld
repz
jnp
sar
mov
inc
cmp
ljmp
jle
ret
push
xor
mov
adc
jno
scas
jmp
adc
mov
sub
mov
repz
clc
mov
test
xor
pop
push
dec
imul
xor
test
push
jo
cmp
ja
mov
dec
or
mov
lds
scas
jo
sbb
jge
jae
lahf
xchg
sbb
ja
lea
jge
adc
cmp
mov
mov
xor
orl
lcall
out
aaa
ja
pop
lahf
daa
dec
stc
and
data16
add
in
mov
jbe
jae
leave
out
mov
fsubrp
mov
sub
ss
outsb
fnstcw
pushf
sbb
add
mov
in
scas
and
iret
dec
iret
stos
push
add
lods
out
xchg
xor
push
cmpsl
inc
adc
test
mov
and
sub
xchg
pushf
pop
dec
push
mov
sbb
pop
addr16
and
xor
fstpt
add
mov
xor
stc
mov
ja
out
lds
pop
pop
or
cwtl
jbe
out
dec
xchg
lret
sarb
divl
xor
sub
pop
cmc
push
leave
movsb
stos
xchg
decl
and
dec
aaa
push
mov
stos
sub
and
popa
mov
dec
jnp
dec
mov
cmp
shl
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
into
ret
sub
ja
push
nop
gs
mov
in
in
mov
cmpsb
dec
pop
hlt
mov
leave
and
push
jl
pop
mov
mov
les
mov
mov
mov
cs
or
xchg
add
and
add
hlt
test
and
push
jno
imul
mov
dec
jl
push
sub
cmp
push
cli
add
push
inc
cmp
xchg
inc
push
dec
repnz
dec
mov
jmp
push
mov
jp
dec
xchg
xor
fdivrl
fs
dec
fmull
dec
push
cmp
adc
fstpl
xchg
jae
xor
test
add
call
xchg
adc
shll
add
test
in
cmp
movsb
push
aad
fwait
out
je
negl
loopne
test
dec
les
loope
jg
jno
lret
sbb
adc
mov
shlb
fnstcw
sub
dec
mov
shll
sbb
sbb
jl
mov
fldenv
and
adc
ljmp
das
sbb
push
pop
aam
loope
leave
inc
divb
lahf
dec
gs
mov
ss
daa
sbb
std
jg
es
jp
imul
jg
inc
pop
mov
rcrb
jnp
stos
cmp
ds
insb
jns
ret
lods
xor
clc
fwait
mov
pop
xchg
jb
ja
int3
push
decl
stc
cmp
or
sub
orl
jecxz
js
cmp
xchg
mov
xchg
aas
outsb
cmp
and
sbb
aam
dec
mov
dec
inc
hlt
lods
scas
imul
sti
movb
cmc
sub
arpl
mov
push
aad
add
daa
inc
aaa
popf
or
in
mov
inc
mov
mov
nop
add
inc
nop
das
andb
mov
xor
js
lea
pop
test
outsl
dec
lock
ret
jmp
add
lcall
mov
popf
cli
lcall
mov
xor
repnz
dec
inc
idivb
push
and
lods
pop
sub
sub
xchg
mov
in
or
jl
insl
out
add
js
cli
daa
mov
repnz
push
jne
arpl
sub
cmpsb
push
out
outsb
dec
icebp
xor
xchg
insb
out
dec
pop
xor
aaa
in
hlt
push
xchg
fbstp
pop
out
push
xchg
in
popf
dec
les
mov
imul
ljmp
icebp
movnti
cmp
popa
repnz
mov
mov
sti
push
loopne
jns
cmp
adc
fistl
pop
push
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
or
mov
mov
daa
arpl
adc
fwait
dec
sbb
mov
cmp
xor
mov
imul
sarb
pop
fistpl
ret
pop
sub
rorl
push
andb
leave
int
fdivrs
cmp
addr16
outsl
aas
sbb
add
aam
push
hlt
dec
sub
movsb
dec
mov
fsubs
outsb
lods
xchg
out
popf
jbe
jb
mov
xor
xchg
cs
cmp
lahf
out
call
jbe
xchg
xor
fistpl
cli
xchg
pop
hlt
fisttpll
aam
xor
movsb
pop
orl
and
cmpsl
and
jl
daa
cwtl
xchg
jo
shll
out
xchg
mov
mov
fwait
push
mov
movsb
ljmp
mov
pop
test
js
jle
ficompl
cmp
lahf
sbb
xor
ret
jle
nop
dec
mov
shrb
jae
jmp
xchg
fs
notl
pop
out
into
aad
fcmovne
sbbb
xlat
test
mov
inc
sub
pop
cmp
frstor
jecxz
je
imul
jno
xchg
lret
into
push
pop
mov
bound
f2xm1
test
and
jecxz
in
mov
imul
imul
cs
cli
fistps
and
adc
pop
jl
mov
mov
jmp
mov
push
or
arpl
xor
mov
outsl
movb
mov
shrb
or
pop
pusha
inc
insl
in
cmp
sbb
cmp
scas
pop
xlat
and
loopne
pop
xchg
test
pop
add
xor
xchg
pop
lock
hlt
xchg
insb
int3
lahf
adc
repnz
jge
xlat
rorl
sbb
jg
pop
or
mov
repz
enter
daa
dec
aas
cmpsl
ljmp
scas
out
ret
std
lret
mov
sti
mov
dec
xchg
push
dec
inc
push
jne
sub
jecxz
sbb
ds
imul
je
pop
jmp
mov
mov
adcb
cs
jnp
xor
insl
rcl
add
shrb
addb
sarl
dec
pusha
cmp
andb
call
daa
ret
stos
je
ss
cmp
lahf
or
lock
cmp
bound
jae
pushf
ljmp
pop
dec
adc
js
jp
and
mov
cwtl
and
adc
aad
popf
mov
jecxz
rcr
xchg
sbb
mov
jg
mov
or
fistpll
xor
clc
jae
aam
and
mov
lods
gs
pop
sub
mov
gs
mov
xchg
aam
push
mov
jge
xchg
push
push
mov
and
inc
ljmp
es
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
cmc
scas
iret
in
xchg
mov
inc
fbstp
jns
into
in
xchg
xor
jb
shlb
out
adc
xor
pop
repz
and
push
dec
push
sbb
ret
dec
and
loope
jne
clc
je
mov
cmp
adc
inc
dec
dec
test
dec
adc
into
rcr
ljmp
addl
xchg
xor
add
sbb
inc
sub
insb
lcall
or
mov
lods
mov
clc
sbb
mov
mov
sbb
imul
push
jbe
pushf
pop
iret
xchg
adc
cmp
mov
gs
lods
sub
pop
out
cmp
mov
in
jp
insb
xor
xlat
repnz
hlt
mov
adc
add
push
xor
dec
adc
sbb
adc
jb
insb
sti
inc
jo
mov
xchg
bswap
stos
scas
mov
or
jmp
lret
or
pop
cmpxchg
mov
inc
and
fwait
prefetchwt1
push
loopne
js
xchg
push
sbb
dec
mov
sbb
arpl
insl
adc
cmc
push
hlt
adc
pop
xchg
es
sub
inc
int
push
xor
mov
push
push
call
cmp
ja
cmp
cmp
test
mov
dec
je
inc
test
mov
mov
shrd
imul
add
sub
sahf
or
shl
pop
ja
xor
js
push
pop
fstpl
jae
stos
ljmp
xor
cmp
fidivl
xor
pop
jnp
fs
test
or
sbb
cs
stos
insb
mov
scas
fstpl
into
scas
lcall
jge
shl
rolb
mov
cmp
add
xor
add
cmpsl
fmul
push
mov
jne
cmpl
cltd
mov
inc
jle
cmp
daa
cmc
cld
jbe
mov
mov
scas
ficoml
outsl
add
and
jmp
popf
pop
iret
push
mov
fwait
dec
pop
fsub
lret
and
sub
and
addr16
fs
mov
ds
int3
push
mov
lret
xchg
jbe
movsb
push
xor
out
adc
jecxz
push
mov
dec
imul
insl
outsl
jnp
sub
sub
sub
sub
dec
sbb
in
out
pop
addl
fstps
arpl
push
ds
fstpl
or
fldenv
push
inc
mov
jmp
pop
jne
cmpsl
xchg
and
sbb
lret
cld
sub
push
lock
jle
jo
js
xchg
jo
pop
xor
test
out
arpl
ja
xor
inc
add
nop
aaa
and
and
and
lahf
rorl
adc
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
inc
xchg
sbb
mov
ret
cwtl
jecxz
std
je
inc
je
loope
int3
jl
ljmp
jns
insl
or
mov
mov
push
loope
inc
lret
xor
stos
les
jno
cmp
testl
jae
call
inc
inc
sbb
mov
out
cmp
xor
push
mov
jmp
sbb
lods
dec
insl
mov
test
test
push
scas
lret
inc
pop
pop
daa
stos
mov
pushf
adc
dec
jo
lods
cs
ljmp
mov
xchg
jne
lret
pop
hlt
stos
push
sarl
xlat
mov
xor
dec
adc
and
js
push
in
repnz
xlat
cmp
movsb
or
mov
insl
pop
inc
scas
ja
cmpsb
cmc
dec
ficoms
push
dec
cmp
rorl
mov
mov
cli
push
and
sub
sbb
fiadds
andl
inc
adc
stos
inc
add
jmp
mov
mov
jle
dec
push
or
jecxz
loopne
xchg
inc
ret
pusha
dec
jp
out
xchg
pop
shrb
adc
fwait
jb
stos
inc
xor
dec
stos
dec
in
xor
mov
sub
sub
sbb
pop
cld
and
jle
add
push
mov
pop
out
gs
int3
sbb
pop
lods
jl
dec
xor
mov
out
scas
popa
mov
jae
pop
shrl
cmp
dec
sbb
pusha
std
nop
in
inc
lods
push
sbb
std
call
gs
xlat
ficomps
pop
jo
leave
fdivrl
push
inc
push
lock
adc
mov
jno
add
pop
scas
cli
or
gs
mov
int3
pop
insl
mov
adc
jmp
push
cmp
mov
xor
inc
cmp
jmp
je
xor
jo
les
xchg
pop
loopne
repz
dec
mov
movsb
jbe
and
add
xchg
pop
in
les
repz
fldenv
ss
movsl
movb
lods
inc
ja
mov
loopne
movsl
push
mov
sub
ljmp
mov
mov
cs
popa
cltd
movsb
mov
or
sbb
xor
rol
adc
or
imull
mov
test
popf
and
fistpll
jp
jle
pop
pmulhuw
inc
daa
cmp
mov
rcr
lds
cmp
mov
sub
push
xchg
inc
test
lock
dec
mov
jle
je
cmpsb
ja
int
mov
movsb
cmpb
inc
cmp
es
jge,pn
sarb
push
xor
or
loopne
pop
cmp
insb
pop
and
pop
enter
adc
mov
sbb
cmp
xchg
stos
loop
test
xor
test
imul
cmp
sub
mov
lea
push
je
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
mov
les
xchg
inc
or
jg
outsb
mov
push
arpl
mov
aad
gs
xor
pop
repz
xchg
adc
sti
pop
fwait
into
jbe
push
out
inc
sub
mov
xchg
fsubl
xchg
mov
cmp
xor
push
sub
sahf
scas
jge
lahf
sub
sub
sub
mov
or
mov
fisubrl
rcpps
adc
pop
clc
pop
xchg
movsb
mov
and
xchg
aad
out
and
out
lock
cmp
js
cmp
outsl
add
lea
inc
das
clc
xchg
flds
nop
dec
jb
loop
dec
xor
enter
nop
push
aas
fcomp
inc
fwait
stos
test
sarb
jne
call
js
mov
pop
popa
cmp
jae
cmp
and
mov
and
pop
inc
mov
pop
scas
out
inc
pop
addr16
insw
lahf
or
jno
pusha
inc
sbb
lds
xor
std
insl
lcall
rclb
push
pushf
mov
sub
jmp
mov
inc
add
or
std
scas
inc
adc
popa
xor
xchg
add
and
xchg
push
jg
jecxz
mov
adc
pop
push
jmp
test
out
push
mov
mov
cvtpi2ps
jbe
mov
xlat
push
fs
in
sbb
xor
bound
fnstenv
ret
cmpsl
lds
and
imul
jmp
fcoml
sbb
and
mov
mov
add
mov
dec
dec
mov
xchg
xor
popf
xchg
bound
push
aam
sub
out
das
adc
adc
in
xor
push
fistpll
call
aaa
dec
sub
stc
cmp
pop
in
inc
fst
jnp
mov
and
push
mov
popw
sbbb
mov
xchg
sbb
mov
fimuls
mov
mov
sub
das
fwait
ret
popa
loopne
mov
pop
sub
cmpsb
xchg
mov
push
cmp
ja
cmp
mov
or
les
sbb
add
loop
dec
int
inc
cld
sbb
push
arpl
fwait
lret
push
push
mov
mov
xlat
cmp
cmpsb
fcoml
lock
pop
mov
push
sub
popa
mov
cmpsb
stos
pop
jne
dec
fdivrs
or
cli
aad
in
stc
bound
ficompl
push
stos
dec
xchg
neg
testb
push
push
movsl
and
test
jb
inc
and
in
mov
sbb
call
mov
pcmpgtd
inc
popf
shrb
and
xchg
lret
add
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
push
gs
movsb
jnp
mov
mov
sbb
xchg
test
sub
iret
xchg
test
popf
lods
mov
push
adcb
cmp
test
jb
add
ja
mov
xor
cmp
push
sub
inc
mov
in
adc
pop
adc
push
mov
shrl
fistpll
pop
and
xchg
cs
dec
mov
dec
or
arpl
idivb
inc
leave
jnp
pop
leave
or
push
imul
pop
sti
outsb
in
movsb
imul
lods
xor
add
xchg
mov
or
testl
cmp
and
adcl
movsb
jne
pop
mov
pop
mov
mov
in
fisttps
adc
mov
xchg
ret
sbb
test
inc
sar
mov
enter
aaa
jns
fwait
dec
mov
rcl
xchg
pop
cmp
inc
xchg
mov
push
dec
outsb
int3
pop
lds
scas
and
mov
sub
pop
scas
fwait
sbb
xlat
out
xchg
xor
arpl
mov
lahf
cmp
notb
fbstp
mov
lea
mov
stos
loop
mov
fnsave
and
mov
xchg
mov
sub
neg
ja
stos
call
cs
out
dec
sbb
pop
sbb
int3
cmp
test
enter
mov
loop
bound
or
rcr
mov
mov
xchg
pop
insl
cmc
cmc
xor
pop
pop
outsl
cmpsl
sbb
call
push
iret
out
jb
scas
pop
add
outsl
lods
addr16
pop
sub
out
lcall
and
xchg
in
and
sahf
ret
lods
out
dec
fldl
or
cwtl
add
pop
mov
pop
mov
imul
imul
fldl
sub
stos
and
stos
mov
out
les
mov
mov
push
mov
mov
mov
jmp
icebp
dec
xor
js
pop
pop
aas
xchg
push
sarb
rsqrtps
sbb
insb
jecxz
mov
pop
push
imul
loope
bound
push
fcomi
jmp
mov
cwtl
hlt
popl
xor
pushf
sub
push
subl
sbb
stos
mov
cld
and
in
ds
pop
or
pop
mov
shll
inc
lock
mov
sbbb
into
mov
and
out
insb
fstl
and
div
ljmp
ljmp
cli
aas
in
pusha
cs
mov
cltd
xor
xor
xchg
adc
xor
int3
add
aas
cs
sub
sub
cwtl
gs
cmp
pop
dec
movsl
aad
push
aaa
inc
rorl
popa
cld
adc
stos
or
mov
xchg
ret
mov
js
bound
pop
pop
sub
push
leave
sub
jns
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
int
stos
sahf
mov
mov
mov
fldcw
mov
mov
popf
adc
xchg
and
mov
pop
mov
inc
jl
fistpll
pop
and
cmc
and
mov
movsb
cmp
mov
mov
std
ret
xchg
push
fwait
xchg
scas
loopne
mov
out
mov
push
outsl
fdivl
loope
lods
xchg
sub
shlb
js
lods
std
and
mov
movsl
dec
xchg
sbb
lods
mov
fs
pop
es
repz
lcall
mov
jnp
cmp
or
push
sub
aaa
push
sub
xchg
cwtl
fidivs
lret
fmuls
fs
repz
aam
lcall
cmp
dec
lcall
sbb
shlb
pop
testl
xchg
mov
das
and
sub
mov
daa
add
cwtl
push
adc
push
mov
pusha
in
and
push
cltd
cs
lock
in
nop
addb
dec
negb
jbe
fisubrs
fwait
xchg
dec
fnstcw
ficomps
lcall
sub
das
cld
jecxz
adc
outsb
xlat
sbb
mov
jmp
push
pop
inc
cmp
in
jge
mov
jno
arpl
mov
leave
jmp
imulb
add
mov
shll
aas
dec
mov
mov
sub
sub
movsl
or
pop
mov
mov
shll
movb
mov
cmovns
xchg
jns
adc
push
mov
jo
rcll
mov
mov
mov
gs
xor
jg
mov
dec
call
cmpsb
std
jno
jle
arpl
leave
inc
sahf
movsb
and
jecxz
std
ss
in
lods
adc
lahf
out
out
scas
jns
cmp
adc
jnp
stc
xor
sub
and
cmp
jbe
sub
and
gs
cwtl
aas
add
mov
add
xchg
gs
cmpl
je
xor
sbb
lods
lds
sarl
daa
out
dec
push
mov
mov
xor
stos
add
ss
test
clc
jns
jnp,pn
mov
jge
cmp
lods
std
sbb
mov
mov
popa
push
movsb
pop
push
mov
xlat
or
xor
xlat
mov
inc
cmc
inc
in
sbb
out
mov
pushf
mov
inc
sti
out
nop
mov
push
mov
cmp
pop
aas
mov
scas
les
cmp
adc
xor
fimull
test
adc
mov
aad
movsb
xchg
cmp
cmp
ficoms
lcall
cmp
or
and
in
dec
sub
adc
jecxz
xchg
adc
insl
xchg
mov
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
in
fstp
movsb
mov
mov
and
in
mov
jle
cmp
pop
out
lds
stc
out
mov
test
rcr
xchg
ret
dec
in
xor
mov
rorl
push
cmp
or
pop
clc
fsubrs
jo
mov
inc
enter
cmp
xchg
xchg
test
out
mov
cmc
mov
adc
shll
orb
sahf
and
pop
jns
mov
bound
test
cmp
in
push
cmp
cwtl
mov
xchg
cmp
inc
lods
pop
mov
adc
pop
dec
and
test
out
dec
out
mov
aam
fs
imul
pop
lea
push
lds
pop
dec
push
fildll
adc
inc
cli
or
test
clc
insl
jne
ja
shlb
sub
xchg
mov
sub
jae
jecxz
dec
jl
fmuls
push
dec
inc
xchg
dec
mov
dec
mov
and
arpl
xor
mov
cmp
call
inc
pop
or
jno
xchg
sub
fisttpll
repz
shll
jo
lods
outsl
push
subl
out
mov
inc
mov
movsb
test
lcall
push
outsl
ja
ret
stc
jbe
imul
data16
aam
nop
push
dec
jno
add
lahf
into
idiv
jp
mov
push
cmp
popa
jo
mov
or
repz
or
gs
outsb
adc
mov
push
mov
push
nop
mov
mov
mov
push
push
mov
cmc
xor
aam
mov
mov
fcmove
popa
push
repnz
pop
mov
inc
xchg
xchg
xchg
lock
pop
mov
push
adcb
or
repz
push
jnp
les
loopne
xor
sbb
dec
mov
arpl
iret
mov
ds
lret
insl
inc
push
and
mov
xchg
sub
dec
lods
push
lods
cmp
mov
loopne
jne
fbld
xchg
jmp
push
mov
inc
test
push
pop
lea
test
sbb
pop
cmp
push
test
rcl
stos
rorl
pop
sbb
pusha
mov
std
daa
iret
mov
sbb
test
shr
mov
sbb
cmp
test
test
fwait
cwtl
iret
jns
and
shl
and
or
ss
sti
js
out
jp
jo
not
clc
adc
push
pop
or
mov
dec
ds
or
pop
xchg
adc
push
mov
outsl
dec
lock
cli
jo
cwtl
rol
jae
popf
in
push
xor
cmp
jmp
call
mov
mov
rorl
in
les
xchg
test
pop
jmp
mov
mov
or
jecxz
mov
xorl
test
jnp
js
inc
nop
orl
cmp
or
mov
cmp
movsl
mov
nop
js
jl
adc
cltd
inc
pop
outsl
enter
cld
movsl
mov
test
jmp
iret
fdivl
mov
outsb
scas
push
bound
leave
fstpl
push
popa
adc
dec
sub
test
je
push
in
test
pop
sbb
leave
pop
and
inc
shlb
mov
lret
cmp
shl
lcall
mov
hlt
popf
mov
or
sti
aad
jae
mov
adc
jb
cltd
ret
cmp
jge
cmc
pop
cld
pushf
add
push
add
sbb
pop
add
repnz
adc
in
push
out
fisubrl
fsts
fcoms
xlat
jne
sub
sbb
cmp
add
out
sarl
sub
sub
inc
movsb
out
jns
in
in
cmpsl
fs
andl
sar
xor
fimull
sub
les
jo
fimuls
push
pop
cmp
ret
shrb
jle
incl
mov
nop
push
filds
rcrl
xor
push
push
mov
jl
cmpl
cmp
and
or
fs
sub
or
xorl
pop
fiaddl
fbld
push
fcompl
add
mov
push
or
xlat
aad
popa
rcrb
rorb
mov
pop
in
testb
cmp
stos
std
add
xchg
fiadds
mov
in
out
popf
push
aad
repz
adc
pop
mov
mov
push
dec
cli
push
imulb
or
push
xor
test
repnz
enter
or
test
repz
add
roll
inc
mov
pop
pop
pop
push
outsb
lahf
jl
ret
shl
adc
push
aad
sub
push
lret
lock
outsl
scas
data16
movsb
or
shrl
fisttps
lret
xor
aad
pop
add
daa
fwait
jne,pn
cmpsb
adc
mov
je
xchg
inc
pop
rol
notl
rclb
inc
icebp
or
xchg
cld
hlt
mov
test
mov
movsl
adc
rcr
lret
stc
sbb
mov
sti
outsb
out
xchg
jl
sub
push
call
push
pop
aad
inc
push
out
lret
add
clc
xchg
es
jl
dec
jo
adc
lret
or
js
fs
pop
mov
movsl
pushf
pop
std
sbbl
or
je
dec
fisttpl
dec
pop
dec
lcall
neg
inc
xchg
js
jo
mov
cmp
and
je
out
cmp
movsb
xlat
jle
adc
shll
xlat
nop
cwtl
bound
aad
in
das
or
and
jnp
test
inc
call
mov
xor
test
jmp
jno
mov
fs
sub
xchg
popa
pop
push
cmp
mov
mov
in
mov
subb
push
ret
pop
jg
leave
mov
movswl
cmp
ja
fdivl
ja
lods
outsb
xchg
lret
gs
in
je
jbe
cmp
pop
xor
inc
shll
arpl
jbe
lahf
push
mov
arpl
jno
jle
popf
sub
pop
sbb
and
notl
pop
add
stos
jmp
mov
insb
je
jo
aaa
outsl
push
fisttpl
ret
movsl
int
stos
jnp
pop
imul
mov
and
pop
add
or
or
jmp
jle
ret
ret
adc
int3
into
ss
lods
fcompl
js
fidivs
idiv
in
in
pop
fwait
pusha
data16
scas
add
dec
pop
jae
negl
adc
scas
test
mov
adc
xchg
xchg
mov
rorl
clc
jb
mov
push
vxorpd
rcrb
sbb
xchg
fistps
xor
pop
or
insl
xor
scas
scas
jno
scas
imul
push
test
add
dec
xchg
leave
xchg
cmp
pop
in
sahf
xchg
mov
mov
leave
or
mov
ja
mov
gs
xor
es
xchg
adc
cmp
call
dec
mov
inc
rol
cmpsb
sbb
andl
xchg
and
aaa
xor
xchg
arpl
jle
out
cmp
clc
xor
insb
inc
inc
pop
movsl
scas
mov
push
lods
arpl
in
lcall
cs
add
inc
cwtl
add
cmc
fadd
mov
mov
inc
sub
scas
adc
mov
xor
mov
fcomip
and
lods
jns
and
hlt
aam
and
xor
test
pushf
cmp
aas
mov
loop
dec
repz
nop
mov
in
push
stc
scas
addr16
sub
in
mov
push
roll
cmp
pop
jns
pop
incl
out
push
lret
or
das
pop
and
jle
push
push
cmp
jno
mov
inc
ds
cmc
or
mov
jo
out
xor
ret
aaa
xor
js
jle
sub
ds
push
call
cmp
mov
push
bndldx
lahf
or
loopne
mov
xor
test
jb
mov
pusha
aaa
add
in
and
imul
stos
outsb
push
cld
inc
adc
loop
cmpb
jne
fwait
cmp
inc
ss
bound
inc
mov
mov
shll
shrb
xor
lods
test
add
and
mov
cmp
lahf
sbb
mov
mov
cmp
mov
jnp
ret
divl
cmp
add
test
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fnsave
mov
mov
inc
add
xor
pusha
inc
inc
adc
scas
in
add
das
lock
imul
lea
in
in
nop
push
cmp
inc
xor
mov
dec
sbbl
mov
aas
sbb
lret
push
mov
ja
or
loop
jbe
out
lret
or
fs
dec
sub
push
fsubrl
or
push
lcall
shll
imul
push
pusha
push
and
std
dec
fsts
pop
xor
xor
arpl
mov
sbb
in
inc
push
pop
in
mov
out
cmc
xor
mov
pop
out
cmp
and
pop
jg
ror
and
pop
and
inc
xchg
sbb
sub
inc
ret
shrb
push
or
and
out
mov
cld
mov
aas
leave
shll
flds
stos
sub
fwait
mov
add
mov
mov
movsl
pop
add
scas
leave
and
sbb
cld
cld
sti
stmxcsr
ss
out
mov
arpl
mov
repnz
jge
std
vandnps
cs
sub
push
and
movsl
fcoms
sub
dec
shrb
nop
mov
jbe
movsl
mov
xor
nop
cmp
add
and
and
int
js
push
inc
jg
dec
and
mov
imul
icebp
movsl
sarl
adc
iret
rcrb
in
popa
cli
pop
dec
lods
stos
jae
mov
mov
lods
mov
xor
dec
mov
mov
pop
loopne
pop
sbb
mov
lcall
pusha
jl
fdivl
lods
cmp
movsl
call
push
or
and
sbb
das
pop
sub
stc
arpl
mov
outsl
les
push
mov
lea
push
jne
mov
ja
dec
mov
rclb
pop
xchg
xchg
test
jae
aas
pop
pop
mov
mov
mov
lret
push
jg
xchg
aam
pop
mov
xchg
sbb
aas
pusha
nop
ret
push
jg
fistps
fwait
push
cmpsl
cmp
adc
insl
push
cmc
adcb
data16
xor
push
inc
jne
lret
xchg
stos
cli
mov
and
shll
fwait
sub
dec
sbb
cmpb
add
sbb
push
push
test
repnz
lods
lods
sbb
pop
test
ss
mov
inc
inc
out
mov
mov
ret
pop
or
rclb
aas
dec
lea
mov
es
cmp
inc
hlt
jg
cmpsl
jno
push
add
stos
insl
and
push
add
xorl
xchg
adc
push
push
push
cwtl
xchg
pop
cmp
addr16
mov
jg
ljmp
push
rorl
pop
and
and
fcom
mov
fnstsw
es
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
fstpl
mov
mov
data16
jl
mov
pusha
add
or
adc
cmp
scas
iret
addr16
xchg
sbb
icebp
add
mov
add
in
aaa
mov
lods
outsl
xchg
pushf
adc
and
add
sbb
pop
movsl
xchg
cmp
or
pop
pop
push
xor
sbb
aam
sahf
pop
xchg
cmpsb
push
leave
mov
xor
sbb
xchg
int3
inc
aaa
rcrl
sub
lret
xor
fwait
in
mov
and
or
mull
adc
mov
hlt
mov
jns
enter
or
dec
stos
mov
das
dec
cmp
test
jnp
fistl
aas
xchg
loopne
out
dec
mov
lods
add
add
mov
int3
or
cli
orb
in
xchg
add
mov
fwait
mov
test
add
lea
test
add
in
jbe
insl
inc
sub
arpl
jnp
sub
ljmp
popa
mov
nop
stc
xor
rcl
xchg
shlb
cmp
or
sub
or
xchg
sbb
adc
jne
add
jb
test
cmp
andb
aad
push
mov
xlat
pop
add
jb
mov
xor
jmp
adc
rcll
cmp
jo
pop
push
dec
add
push
cli
jbe
pusha
sbb
fimull
stos
pop
js
loope
hlt
je
mov
cmpsl
enter
push
dec
rclb
mov
jne
mov
mov
pop
popa
jg
sbb
movsb
pop
sarl
enter
xor
ret
cmp
into
pop
cmp
jo
ja,pn
pop
dec
sbb
aad
shlb
sbb
clc
inc
je
jae
das
insl
mov
inc
jecxz
inc
or
cmp
dec
out
ret
push
in
xchg
and
lock
pop
mov
shl
xchg
insl
pop
bound
subb
dec
cmp
movsb
xchg
sbb
add
xor
out
les
mov
cli
call
xchg
insl
scas
ret
sub
mov
mov
ss
loopne
lods
adc
sarb
pop
pop
sbb
cwtl
push
fcom
les
lahf
adc
mov
imul
xor
mov
mov
push
mov
mov
dec
fstl
pop
and
cmp
imul
jge
mov
int3
addr16
leave
testl
push
add
es
or
in
xchg
inc
js
jge
xor
loope
pop
outsb
jp
notl
bswap
xchg
dec
inc
pop
add
xchg
jmp
arpl
cwtl
add
or
out
imul
mov
jno
mov
seta
add
idiv
or
push
nop
fcoml
outsb
mov
outsb
push
jns
cmp
cld
mov
jl
sbb
cld
xor
lods
fwait
adc
adc
pusha
push
xchg
leave
sub
daa
cmp
lods
div
jns
lret
adc
lea
ret
cmp
pop
ds
fsubl
movsb
jl
mov
cltd
mov
mov
out
push
pop
push
clc
push
xchg
sti
pop
mov
cli
sbb
loope
and
sarl
push
test
les
jns
leave
pop
sahf
xlat
insb
jle
xchg
jno
push
repnz
inc
push
arpl
cmc
push
nop
mov
in
scas
outsb
mov
mov
push
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
xchg
insb
sarb
fbld
imul
jmp
dec
cmpsl
lds
clc
jge
adc
mov
sub
lret
rcll
ljmp
in
xor
es
xchg
lock
int3
push
std
int
lods
pop
xchg
add
in
mov
mov
mov
mov
jnp
test
daa
dec
mov
in
cld
xchg
fisttpll
lods
or
mov
inc
enter
ror
inc
xor
pop
or
and
cmp
or
inc
imul
lods
in
movsl
sbb
outsl
and
out
jge
shrb
popa
repz
jmp
xchg
mov
inc
movsb
mov
fcoms
sbb
mov
or
loope
pop
pop
sbb
jle
std
cmp
mov
enter
cmp
fsub
ficompl
test
ret
adc
or
mov
out
movsb
inc
jge
and
sbb
mov
jne
fnstenv
inc
leave
stos
pop
sbb
mov
add
mov
rol
xchg
scas
add
lods
jl
jae
movsl
and
dec
jge
enter
test
xchg
cmp
je
xchg
aad
stos
pop
aam
fisttps
lock
mov
cmp
sub
clc
mov
push
sub
inc
inc
and
or
xchg
cmp
jle
cmp
jno
test
mov
add
xor
icebp
cmp
adcb
xor
xor
push
xchg
pop
fwait
jge
xchg
pop
xchg
les
fnstsw
pop
sub
sbb
call
iret
xchg
scas
push
loope
fldlg2
movsl
sub
lret
enter
test
cmp
xor
into
sbb
push
movsl
push
mov
xor
pushf
cmp
dec
mov
mov
pop
stos
cmp
incb
mov
push
ss
jp
movsb
cmp
int3
cld
call
sbb
xchg
mov
pop
sub
lret
mov
jl
jmp
bound
mov
sti
cmpsl
mov
xlat
iret
fwait
daa
cmp
test
std
fdiv
add
ret
in
cmp
dec
stos
out
arpl
mov
xchg
xor
gs
or
lahf
ret
and
pop
imul
jecxz
xchg
dec
loopne
pop
jno
xchg
cmp
add
lock
xchg
mov
xchg
inc
ja
inc
scas
sarl
popa
scas
adc
add
mov
stc
ds
je
sub
popa
xor
test
pop
and
xchg
cmp
dec
adc
push
stos
bound
call
sub
mov
mov
enter
cs
popf
pop
test
push
pop
in
sub
fidivrl
adc
pop
sub
mov
jmp
stos
popa
mov
mov
mov
cmpl
cmp
inc
xchg
cwtl
lds
pop
out
sub
mov
and
push
and
xor
out
inc
jg
add
imul
cmp
xor
mov
xchg
ljmp
pop
cmc
dec
sbb
inc
push
jle
movsb
sarl
loopne
fisubs
cmp
fstp
daa
ljmp
push
cli
xchg
insb
mov
out
sarb
dec
jmp
pop
push
jo
sahf
pusha
loopne
imul
pop
jns
sbb
cmc
scas
or
inc
shrl
dec
cltd
jp
outsb
das
repnz
into
inc
mov
hlt
test
jmp
lret
ret
test
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
sub
int3
sarb
xor
xchg
pop
imul
adc
fsubrl
mov
pop
ds
enter
sub
sub
xorb
adc
pop
jp
loopne
popf
mov
lds
outsl
mov
popf
sbbl
loop
sub
icebp
jb
sbb
shll
das
xchg
mov
pushf
shrb
call
aad
daa
out
scas
xchg
out
push
movsl
lcall
aaa
loopne
pop
xchg
mov
shrl
dec
mov
fnstsw
jecxz
add
lds
push
pusha
xor
rclb
jge
and
data16
xchg
push
or
fdivrl
into
sbb
pop
movsb
cmp
stc
jbe
mov
mov
sub
push
jp
mov
xchg
cld
sub
mov
pop
sub
lahf
in
hlt
outsl
dec
jb
scas
movb
imul
test
lods
cli
insb
testl
lods
sti
pop
leave
stc
dec
mov
pop
mov
jne
jae
inc
mov
loopne
ds
hlt
mov
int3
and
sahf
sub
test
jge
push
xor
inc
pop
push
aam
mov
icebp
xchg
or
jp
jp
cltd
lret
adc
or
jns
jp
ja
dec
xchg
rcll
or
aas
dec
xchg
sbb
jge
test
jo
dec
jmp
cld
popa
stos
push
dec
js
and
outsl
scas
add
je
outsb
inc
xor
cmovo
out
repnz
inc
xchg
jo
or
pop
aaa
arpl
pop
out
adc
ljmp
inc
cmpsl
cltd
mov
xchg
test
sbb
pop
mov
mov
adc
dec
loope
je
mov
add
sahf
push
jbe
fnop
jp
inc
mov
mov
dec
in
bnd
lahf
adc
aam
inc
push
fistps
ds
cmp
ds
or
jl
or
jle
leave
push
popf
gs
xchg
pop
hlt
adc
outsl
nop
lock
push
pop
popf
or
loope
sbb
cmp
inc
cmpsl
cmpsl
inc
ljmp
repnz
push
stos
inc
mov
loopne
lods
xchg
test
in
hlt
cld
mov
xor
in
imul
adc
jnp
mov
orl
jno
push
xor
sbb
imul
stos
int
ret
pop
sti
pop
and
cmp
mov
pop
ljmp
push
fistpll
leave
mov
lods
insl
xor
gs
jge
aas
cmpl
cli
add
sbb
ret
inc
outsb
dec
sub
cld
stos
mov
lods
es
sbb
rcrl
repnz
in
fstl
xor
fldl
imul
mov
int
mov
pop
cli
and
sub
sbb
mov
lods
xchg
dec
mov
push
and
cmp
or
push
lods
push
popa
lods
xchg
push
xlat
fldenv
dec
aaa
dec
mov
mov
fdiv
mov
push
into
imul
es
lret
cmp
cmpsl
jo
or
test
mov
aaa
push
or
and
xlat
sti
jecxz
in
lea
push
add
mov
sub
and
hlt
cli
adc
int3
jnp
or
jne
xchg
lcall
fdivrs
xchg
ss
js
cmp
xor
add
js
or
jo
inc
xor
bound
pop
mov
pop
into
sbb
xor
xor
nop
repz
loope
in
dec
cmp
sub
sub
inc
add
cld
push
dec
scas
daa
dec
sar
mov
call
pushf
xchg
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
adc
sarb
pop
and
sub
loop
repnz
mov
loopne
ret
addr16
decb
bound
lret
xchg
scas
jne
jne
lea
in
loope
test
int
jns
popf
pop
lods
xchg
mov
aad
inc
das
and
ret
loope
inc
jns
push
jecxz
sbb
dec
mov
in
std
cmp
adc
xor
sahf
rorb
sahf
inc
fcomps
adc
and
sbb
pop
jno
repz
fsubrl
fisttpll
fwait
das
rcrb
adc
jl
movsb
sub
and
adc
cmp
inc
sub
jecxz
push
dec
ja
push
lea
rorl
inc
jecxz
mov
fdivl
les
outsb
loopne
xor
or
dec
out
sub
sbb
dec
push
jge
leave
call
push
insl
pusha
pop
dec
sbbl
and
fildll
pop
sbb
jmp
ds
or
and
jnp
xor
jmp
inc
rcrl
sub
adc
push
push
or
addr16
sbb
mov
sbb
xor
or
cli
pop
mov
lods
push
jg
je
cmp
mov
std
pop
adc
pop
sarl
frstor
jne
in
pusha
mov
loope
and
inc
push
ret
cmp
mov
or
xchg
out
shrl
fs
inc
repnz
mov
mov
stos
dec
cmp
fldcw
xchg
mov
iret
cmp
int3
cld
inc
mov
imul
jae
lahf
lds
xchg
jnp
and
mov
ljmp
test
subl
xchg
cvtps2pd
or
rcll
in
xchg
xor
inc
negl
sbb
pause
and
jnp
jmp
mov
mov
dec
jle
aaa
sti
test
adc
int
scas
jmp
jle
jb
inc
xor
leave
test
jne
cmp
je
pop
xor
sub
lahf
das
out
rorl
inc
and
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
mov
sarb
cli
rorl
into
notl
aam
dec
xchg
lds
push
shl
inc
cmc
add
xchg
and
add
and
push
cmp
jo
pop
jae
clc
addr16
in
cmp
push
xor
xor
push
mov
int3
jmp
xor
add
sbbb
sbb
int
and
xchg
clc
bound
outsl
in
adc
jns
fcmovu
mov
dec
push
cmp
pop
cmc
lea
les
jge
xor
mov
mov
out
addl
push
dec
add
inc
jno
fstpt
inc
sub
sbb
in
rol
xor
dec
cmp
push
inc
adc
pop
xor
in
gs
mov
jae
mov
adc
adc
xchg
mov
fisttps
mov
movzbl
nop
mov
daa
mov
jle
or
lahf
mov
loopne
pop
xorb
not
pop
scas
or
or
sbb
aam
ljmp
adc
aaa
aaa
sbb
daa
mov
hlt
ret
movsl
cli
jo
xchg
mul
adc
jp
fsubrp
cmpsb
add
fimuls
fisubl
xchg
cmp
jmp
cmpsl
dec
push
scas
mov
fld
xchg
incb
sbb
push
push
std
pop
sti
outsb
pusha
and
cmp
fstpl
lret
cmp
push
cmp
fdivr
pop
lcall
pop
pop
pop
sbb
das
cmpsb
mov
in
or
ret
pop
gs
inc
mov
jb
lods
ret
fmuls
inc
xor
clc
mov
xor
cmc
mov
adc
mov
repnz
xchg
sub
inc
lea
xchg
pop
add
insl
imul
xchg
mov
jmp
sub
dec
int3
mov
lods
rolb
lret
outsb
xchg
and
and
jp
cltd
push
adc
je
and
leave
cmpsb
lods
pop
dec
mov
movsb
out
mov
ss
pop
imul
dec
push
sahf
add
mov
mov
push
int
push
push
inc
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
lahf
outsb
inc
faddp
mov
lea
std
ffree
cld
enter
xchg
mov
adc
popa
clc
arpl
nop
xchg
pop
insb
jg
addr16
fisttpll
imul
ret
lret
xchg
test
es
fnstcw
test
cmp
mov
js
cli
arpl
cltd
and
jbe
sarb
sub
out
adc
add
cmp
xlat
xlat
mov
aaa
xchg
sub
lds
jae
xor
jmpw
dec
add
daa
scas
mov
ss
add
sbb
ret
cmp
stos
mov
pushf
pop
call
mov
mov
call
push
sub
or
jecxz
inc
adc
mov
xor
lds
jo
sub
pop
loopne
sub
push
enter
clc
jbe
out
aas
pop
inc
xor
outsl
fimull
shr
xchg
jo
lret
inc
out
pop
or
fistps
in
std
sbb
adc
pushl
outsl
aad
dec
shl
pop
jge
sub
test
push
in
lods
fs
push
mov
insb
cld
pop
inc
sti
xor
xchg
sti
and
data16
and
sti
adc
shl
xchg
mov
aas
aas
fcmovbe
push
push
call
dec
nop
dec
push
repnz
dec
sbb
test
leave
imul
imul
jl
dec
aam
jle
mov
sahf
mov
xchg
and
out
add
dec
test
loopne
daa
dec
sbb
jl
and
sub
es
sbb
leave
dec
xchg
mov
or
or
inc
push
push
aam
jl
test
mov
ret
inc
cmp
xorl
pop
mov
mov
sub
in
dec
pop
jg
cmp
sub
sahf
inc
push
lcall
xchg
stc
or
outsb
inc
jge
mov
test
enter
in
lds
fcoml
mov
adcl
jmp
and
fstl
jb
sahf
nop
call
loop
mov
scas
les
sbb
stos
xchg
cs
and
fidivl
subl
dec
outsb
rol
int3
inc
sub
pop
mov
ds
arpl
cli
cmpsl
mov
pop
sub
mov
push
mov
into
push
xor
adc
inc
fs
jb
inc
xchg
stc
fdivl
scas
jno
sbb
pop
add
nop
or
jle
or
loop
jle
sarl
daa
mov
rcrb
xor
es
addr16
xchg
adc
stos
fdivrs
ret
xchg
insl
adc
cwtl
popa
mov
pop
jge
push
sub
rolb
test
scas
daa
ret
jl
pop
or
and
cmp
lret
inc
adc
stos
repnz
add
or
or
lods
dec
push
sarb
gs
dec
loop
xchg
popa
pusha
addr16
push
and
and
icebp
daa
fsts
mov
and
ss
int
xchg
mov
ret
fcmovne
popw
lea
ret
aaa
jbe
push
loopne
imul
enter
cmp
imul
adc
xor
mov
fchs
mov
lock
movsb
fsubl
popa
arpl
pop
movsb
addb
xchg
out
xchg
pop
pop
jns
lret
imul
out
into
daa
dec
out
mov
repz
outsl
repnz
notl
dec
push
jbe
xchg
xchg
ljmp
mov
sti
adc
outsb
test
mov
sub
jbe
mov
push
xor
jp
xchg
jp
dec
add
test
idivb
xchg
or
ds
mov
dec
inc
adc
push
loop
xchg
popa
dec
enter
movsl
jns
mov
sbbb
cs
fldenv
ret
push
roll
call
addr16
cmc
add
daa
adc
sub
arpl
aam
push
jmp
add
add
out
into
add
cwtl
in
cs
push
jne
addr16
ds
sub
bnd
in
cmp
cmp
adc
sub
cmpsl
mov
xor
pop
xor
in
push
enter
ja
mov
sarb
iret
rcrb
mov
addl
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
cwtl
sub
jmp
sarb
adc
lea
fcoml
add
sub
mov
cmpsl
cld
test
inc
aas
enter
add
sub
sahf
cmp
pop
pop
addr16
imul
out
pop
xor
push
xchg
pushf
jae
aas
jb
bound
xlat
test
cli
insb
push
pop
ljmp
cmp
bound
inc
push
lret
sub
mov
xor
jbe
jle
inc
jb
orb
dec
jmp
pop
mov
mov
xchg
outsb
inc
scas
std
mov
dec
mov
pop
arpl
pop
jbe
lahf
fldcw
test
xchg
addl
test
pop
loope
xchg
in
jp
insb
imul
add
inc
clc
xor
bound
cs
add
cmpb
cld
pop
test
mov
sbb
int3
xchg
loop
jp
and
push
xchg
lds
sub
mov
mov
push
mov
sar
negl
out
mov
push
faddp
jno
push
cmpsl
cld
ja
aas
or
pop
pop
mov
ret
pop
scas
jecxz
mov
mov
mov
stos
lahf
xor
sahf
in
sub
push
pop
stos
xor
pop
icebp
stos
xchg
mov
mov
pop
xchg
pushf
pusha
mov
xchg
add
add
jp
push
mov
jle
arpl
orl
mov
ret
cmpsb
push
mov
lea
jns
mov
ss
arpl
cs
sub
push
out
mov
mov
leave
les
pop
mov
add
or
sbb
stc
jmp
mov
repnz
cli
call
rorb
cmp
dec
mov
call
ret
mov
push
mov
ljmp
mov
in
repnz
mov
into
imul
push
lock
ss
mov
lret
testb
xchg
xchg
lahf
icebp
test
xchg
lahf
xchg
outsl
dec
and
cwtl
mov
shll
sarb
aad
hlt
jae
push
add
jne
pop
mov
sbb
lea
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
pop
out
lods
jecxz
ljmp
in
jb
add
cmc
inc
shll
or
out
cwtl
outsb
or
in
lahf
into
adc
sar
pop
xchg
dec
lcall
outsb
pop
mov
push
jecxz
call
enter
in
sub
add
in
dec
jecxz
dec
mov
pop
add
scas
add
js
cmp
jne
mov
int3
add
test
lea
repnz
imul
loop
pop
adc
sbb
xor
adc
mov
test
adc
or
push
stos
adc
xchg
adc
xor
ljmp
pop
inc
imul
jg
lods
orb
dec
push
sti
pop
and
push
sub
cltd
out
mov
and
sub
cmpsl
mov
fists
ds
xchg
rorl
das
and
adc
scas
push
cli
mov
aad
mov
std
xor
stos
mov
and
and
xchg
repnz
xchg
call
pop
mov
push
cmp
pop
cs
jg
cmp
or
lret
adc
dec
pop
push
aad
inc
sub
addr16
dec
cmp
repnz
in
jle
addr16
js,pn
fisubrs
mov
lock
cld
and
rorl
pusha
and
inc
add
push
es
int
dec
inc
xchg
mov
cwtl
cmp
push
and
aaa
aas
xchg
push
push
or
mov
mov
push
sbb
sti
insl
out
ds
inc
add
shr
pop
cmp
jle
aaa
adc
js
popa
std
push
xor
cmpsl
sub
mov
fs
fbstp
mov
sbb
int3
loope
dec
or
jmp
sti
mov
lock
out
xchg
sbb
dec
mov
dec
flds
movlps
pop
mov
shr
and
mov
dec
sub
subl
inc
jb
pop
or
cltd
and
mov
adc
arpl
mov
aad
push
mov
jle
pop
icebp
xchg
push
adc
loope
arpl
and
add
push
and
fcmovu
cli
mov
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
movsb
fsubr
sarb
paddsb
bound
jno
lock
dec
bound
addr16
addb
jle
mov
lods
adc
and
out
jge
call
mov
mov
mov
or
jl
mov
and
shrl
and
xchg
ja
imul
movsl
fstpt
mov
pop
xchg
xor
xchg
jno
pop
bound
lds
sarb
mov
sbb
cmp
arpl
and
movsb
dec
pop
js
lods
push
adc
jmp
into
push
push
ds
cmp
cmpsb
push
jmp
adc
xchg
aad
pop
popa
mov
pop
xlat
in
jp
das
push
xchg
inc
shll
fmul
out
mov
add
sub
mov
lods
xchg
dec
stos
loope
push
out
xchg
jbe
cmp
ljmp
dec
sbb
xor
xor
adcb
cmp
xchg
jo
movsb
insb
lcall
pop
mov
test
mov
fwait
ljmp
in
ret
push
fucomi
lods
cmp
adc
inc
ret
shl
dec
je
scas
out
bound
into
loope
ja
jle
fisubs
xchg
rcll
repnz
ljmp
adc
int
in
lret
not
or
mov
popl
lret
mov
xchg
xor
in
icebp
push
lret
flds
mov
push
dec
mov
rcrb
cmp
hlt
insb
adc
test
add
add
bound
sti
stos
mov
inc
or
inc
shrb
test
dec
inc
out
push
pushf
test
iret
stos
and
jo
adc
out
test
ret
mov
mov
mov
cmpsb
push
xor
mov
mov
mov
fstl
jg
sbb
mov
hlt
imull
cld
mov
pop
jb
cmp
sbb
add
loop
fists
ss
push
fiadds
aam
inc
sbb
pop
mov
and
fmull
sbb
cmpsb
faddl
aaa
sub
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
iret
push
repz
adc
sbb
xor
xchg
pop
and
dec
es
aam
fcoms
inc
xchg
jns
test
xchg
jg
inc
in
enter
lret
ljmp
iret
mov
into
cmpb
scas
test
stos
cmpl
movsl
push
orl
ja
pop
xchg
jge
insl
push
cmp
mov
pop
pop
std
inc
or
ja
testb
in
mov
adc
hlt
or
xor
test
stos
cld
dec
cltd
and
sub
and
icebp
mov
std
dec
sub
mov
push
add
mov
cs
cmp
or
push
movsl
scas
sbb
jnp
jae
aad
and
lea
das
cmp
insb
daa
into
sarb
scas
movsl
in
pop
data16
shrb
mov
sub
add
loopne
mov
pop
pop
sub
movsl
jecxz
dec
lock
fiadds
mov
jecxz
andl
xchg
addl
dec
insb
add
inc
cli
sbb
mov
mov
xor
adc
je
sub
ret
ret
ja
iret
divl
and
mov
imul
pop
ja
mov
cli
aas
fwait
dec
test
test
insb
mov
std
pop
es
adc
mov
or
mov
mov
in
in
leave
dec
lcall
insb
stc
mov
fldcw
inc
jns
jns
add
add
movsl
adc
push
inc
push
pop
mov
ret
pop
mov
insl
imul
int
inc
pop
jmp
arpl
adc
xorl
mov
push
lahf
inc
push
xor
add
lods
dec
cmp
add
repz
jb
sbb
test
jecxz
cmc
push
mov
jmp
sbb
je
jbe
mov
cmp
push
ret
pop
cmp
cmc
rcrb
sbb
sbb
jecxz
or
dec
cmpsb
xchg
mov
int3
inc
cwtl
jge
or
dec
imul
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
shl
pop
ror
test
mov
cmpsl
test
nop
dec
add
aaa
clc
inc
stos
push
add
aam
sub
or
xchg
fstps
cmp
dec
stos
ret
jle
sbb
mov
push
inc
out
test
pop
aaa
inc
mov
pop
mov
aam
gs
jbe
imul
scas
push
movsb
jns
popa
jne
sub
scas
push
popf
insl
adc
movsb
mov
mov
mov
fcoml
or
scas
out
pusha
enter
mul
mov
fdivrs
xchg
mov
pushf
lods
jecxz
mov
sbb
popa
adc
pop
loop
mov
jb
dec
mov
lds
leave
test
or
lock
and
jle
sbb
test
xchg
scas
rclb
pop
loop
cmpsb
dec
adc
and
or
inc
adc
adc
mov
or
movsb
pop
inc
mov
lods
add
test
aad
jnp
sbbb
jbe
mov
mov
adc
leave
inc
pop
shll
fs
rclb
ret
sub
inc
sahf
loop
stos
aad
pop
sbb
jl
iret
mov
fsubr
stos
fcoml
in
lret
sbb
roll
mov
fmull
fldl
sbbb
lret
ds
jge
nop
mov
adc
cwtl
lret
popf
mov
adc
jnp
adc
cmc
inc
jno
push
and
icebp
cli
xchg
pop
repz
push
lds
push
xchg
sub
cmp
jo
fs
cld
jge
into
cwtl
pop
xchg
dec
ficompl
push
frstor
idivb
outsl
imul
int3
adc
arpl
movsb
mov
mov
hlt
pusha
pop
pop
stc
mov
inc
jnp
pop
mov
dec
dec
mov
xchg
xchg
fimuls
sub
mov
push
push
inc
repnz
iret
pop
and
add
and
add
mov
jnp
outsl
jns
push
jecxz
loopne
sub
fnstcw
insb
mov
cmp
cmp
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
fldl
mov
jns
mov
fs
movsl
mov
jmp
push
pop
std
xchg
jp
popa
xchg
mov
mov
mov
mov
and
popf
imul
mov
cmp
int3
call
in
push
loope
xor
decb
fcmovb
pop
mov
add
or
movl
fistpl
cwtl
push
pushf
inc
stc
jle
fisubrs
pop
sbb
lods
dec
pop
stc
je
cmp
outsl
jns
test
inc
cmpsl
pop
stc
or
push
add
inc
je
fs
lahf
mov
call
cmpsb
push
inc
pop
mov
lret
mov
sbbl
aam
imul
mov
das
mov
xor
inc
imul
jne
adc
sbb
dec
mov
scas
add
mov
divl
pop
mov
int3
adc
cmpsl
xor
jo
sbb
les
pop
into
nop
mov
sub
mov
leave
jne
mov
cli
push
scas
sub
cwtl
iret
and
insb
xor
xchg
std
pushf
push
lahf
movsl
fisubrs
cmp
or
es
aaa
incb
fistpl
lret
mov
bound
mov
and
pop
inc
push
fwait
inc
jo
outsl
rcr
fistps
aas
sarl
adc
ja
fwait
insl
std
push
clc
sbb
adc
push
pop
js
les
adc
mov
les
shr
xchg
jnp
sub
add
xor
fistps
popf
jmp
pop
push
icebp
sbb
mov
sarb
sbb
push
ret
js
xchg
mov
xor
or
push
fisttpll
enter
js
out
xchg
aas
fnstenv
cs
push
xlat
pop
or
mov
or
or
mov
adc
inc
push
out
lods
cmp
aaa
iret
mov
sub
xchg
cmp
push
fidivl
xor
sub
fimuls
push
ds
iret
lds
hlt
je
icebp
test
inc
inc
divl
pop
scas
mov
mov
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
mov
inc
mov
push
push
ret
jmp
adc
jns
mov
ret
mov
pop
test
stos
adc
pop
cmp
or
push
adc
data16
cld
sti
je
mov
and
dec
mov
or
xchg
or
mov
pop
ret
pushf
out
mov
sbb
fiadds
pop
jnp
mov
xchg
into
mov
inc
cmc
cmp
mov
pop
repnz
jmp
xorb
mov
in
inc
js
inc
mov
outsb
xlat
jne
inc
xor
xor
ret
ret
mov
ja
xor
enter
mov
inc
xor
shr
or
pushf
xchg
xchg
xchg
and
mov
int3
popaw
aas
adc
push
fiadds
xor
imulb
lret
in
aad
pop
push
in
nop
aad
sbb
aad
jg
lods
pop
sti
sub
mov
into
test
or
jmp
inc
mov
push
jne
mov
nop
and
rcll
aas
sahf
mov
out
movsb
lret
sbb
sub
clc
inc
jp
shrb
jecxz
or
pop
divl
je
sub
adc
and
das
lea
or
inc
mov
sub
jns
and
fwait
mov
mov
repz
jno
out
jae
scas
mov
fbstp
cmp
add
pop
add
call
sbb
jecxz
xor
pop
fwait
fs
ret
gs
cmp
fists
out
imul
std
sub
negl
sub
push
stos
std
ljmp
cmp
cld
fsts
pop
push
daa
pop
cmp
and
adc
stos
bound
dec
pop
sbb
popa
add
push
pop
push
jl
out
aas
jo
pop
movsl
test
mov
mov
xor
in
or
repz
in
and
movsl
lea
dec
and
aas
mov
lock
cld
xor
cmpb
out
aaa
jb
mov
scas
mov
push
jp
daa
dec
pop
rolb
pop
loopne
test
loopne
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
fildll
jecxz
add
mov
xchg
cwtl
scas
roll
sub
xchg
push
mov
and
push
or
mov
push
fistl
dec
add
mov
jae
sub
jmp
in
pop
jmp
sub
fisubrl
dec
lret
ret
sbb
push
test
jns
fsubrs
adc
nop
mov
fimull
mov
push
inc
ja
aas
mov
add
push
ret
push
sbb
adc
loop
and
mov
mov
cmpsl
call
mov
ljmp
lea
lret
cmp
push
cli
rorl
mov
mov
push
push
lcall
xor
leave
sbb
jno
pop
push
cwtl
sub
int
xor
dec
fwait
mov
sbb
adc
mov
push
das
dec
or
sub
je
orb
aas
incb
adc
cmp
xchg
mov
test
jne
fmuls
pop
xor
aad
in
sub
adc
add
out
out
mov
sbb
jns
xor
jmp
jmp
cmp
repnz
sbb
aaa
xchg
inc
notl
gs
and
fs
mov
sarb
pop
mov
adcb
pop
xor
adc
and
sahf
in
loop
sbb
rolb
leave
ficoms
xchg
sbb
subb
lods
ja
aad
pop
sbb
ds
sub
pop
adc
push
mov
or
cli
sahf
inc
out
lret
dec
int
cld
aad
xchg
sbb
jb
jecxz
out
cli
insb
mull
jle
ret
arpl
inc
daa
jb
js
imul
dec
repz
push
out
popf
cmp
adc
jg
scas
fsubrl
fcomps
jl
push
cld
andl
lea
mov
js
sub
ret
cmp
add
push
stos
adc
shr
and
das
in
scas
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
mov
cmp
xor
data16
inc
int
adc
pop
test
or
xchg
mov
mov
and
adc
repz
mov
adcb
and
in
jge
mov
lds
push
lods
scas
adc
es
aad
jp
sbb
outsb
pop
xor
jns
into
stos
or
jecxz
mov
outsb
sub
leave
mov
fmul
cmp
lret
test
jnp
fstl
fwait
sbb
and
decb
das
das
hlt
sbb
xchg
mov
gs
adc
jns
loopne
push
push
in
dec
xor
cs
sbb
jne
adc
loope
jnp
and
push
pop
outsl
mov
sbb
sub
sub
enter
rcl
and
stc
cmp
rcl
int3
iret
jnp
imul
mov
mov
add
iret
aad
in
outsl
sbb
dec
fwait
in
lcall
adc
movsb
adc
das
inc
jge
push
or
fwait
xor
pop
cmp
pop
push
pop
jle
mul
lcall
sar
pop
in
shll
pushw
outsl
sub
pop
push
and
faddl
insb
bound
cmp
dec
cmpsb
iret
pop
inc
fldcw
jp
or
dec
leave
mov
push
add
popf
mov
xchg
adc
cmp
xchg
in
sub
mov
nop
push
lods
mov
les
mov
or
mov
mov
sub
dec
sahf
aam
fs
fwait
jl
sar
repz
cli
and
fdivrl
mull
mov
jmp
ja
add
mov
cmpsb
mov
out
xor
mov
pop
in
outsl
and
push
shr
mov
scas
cmc
cld
inc
mov
daa
scas
cmc
dec
add
mov
insb
out
cmp
xor
pop
mov
dec
mov
in
mov
fstl
int
and
adc
push
or
and
cmp
filds
xlat
cltd
jmp
cli
sub
mov
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
jbe
dec
xchg
and
sarb
out
fimull
adc
or
cmp
inc
hlt
ljmp
lret
fcmovnu
push
xor
movsl
push
sbb
ds
outsb
call
add
sbb
fsubrs
sub
sbb
fs
out
pop
imul
movsl
in
xor
pop
add
fistps
mull
adcb
ds
mov
wbinvd
sub
mov
aaa
inc
xchg
lods
in
lods
or
xchg
push
scas
shlb
sub
insl
push
sub
daa
int
pop
cmc
push
sbb
and
fiadds
ljmp
das
xlat
mov
movsl
fnstenv
int
popaw
lds
mov
sub
int
mov
mov
repz
dec
pop
imul
out
adc
xor
ja
xchg
ret
cmpsl
imul
jbe
jle
pop
jecxz
sub
push
add
es
push
adc
cmp
stos
test
push
movl
pop
pop
hlt
dec
test
sbb
fadds
push
jne
xchg
inc
aam
ja
dec
mov
mov
test
mov
adc
cmpsl
es
dec
imul
inc
loopne
cmc
xchg
icebp
fdivs
dec
ficoms
dec
lret
xchg
cmp
push
dec
hlt
imulb
lret
jae
loop
xchg
pushf
mov
sub
cmpsl
lret
clc
xchg
mov
aam
mov
sub
push
movsl
pushf
jno
xor
mov
lahf
cmpsl
jns
cmp
fmul
and
adc
xor
and
popa
inc
sbb
push
mov
jo
mov
out
fs
cli
xor
sbb
mov
mov
mov
std
das
adcb
cmp
mov
xor
shlb
test
rcrb
mov
gs
jge
dec
cmp
out
dec
repz
mov
sbb
notl
loopne
cmc
fcmovb
mov
fs
fidivrs
mov
mov
adc
ficoms
add
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
fstl
bound
xor
pop
push
mov
pop
dec
cwtl
adc
cwtl
push
or
dec
rcrb
cmp
es
mov
pushf
jge
inc
adc
cld
sub
lea
iret
call
xor
ja
shll
mov
lahf
das
rol
adc
push
int
and
cmp
leave
push
outsl
dec
in
add
out
aad
shr
mov
sub
lods
jl
push
jecxz,pn
call
jmp
mov
les
and
in
pushf
es
mov
popa
xor
sub
rorb
sbb
jle
cmp
pop
fidivs
cli
pop
push
fisttpll
fs
mov
xchg
test
mov
add
sahf
adc
xor
jg
ss
outsb
bound
in
outsb
xor
mov
inc
mov
dec
inc
fnstenv
jae
push
jns
lcall
inc
jle
sahf
jne
or
repz
jb
cld
bound
outsb
sbbl
outsb
int3
insb
push
je
cld
shrb
mov
out
xor
gs
cmp
int3
out
popf
cmp
jg
mov
push
cmp
xor
xlat
insb
outsl
xor
or
aaa
outsb
mov
loop,pt
push
pop
push
inc
in
aad
pop
push
xlat
xor
roll
pop
popf
mov
jb
test
cltd
and
je
adc
dec
xchg
inc
push
cmp
push
fs
fldl
mov
jl
ss
sub
js
ds
pop
add
int
mov
in
pavgb
mov
fidivrs
ret
sub
sbb
jae
xchg
mov
out
hlt
mov
out
sti
ja
scas
fnsave
jae
cmp
popa
negl
in
mov
insl
push
push
shlb
and
aad
test
test
lahf
jbe
mov
int
cmp
jmp
arpl
stos
push
inc
icebp
add
mov
rolb
mulb
in
adc
lea
sbb
xchg
push
cmp
mov
inc
mov
xor
punpcklwd
es
jg
sub
jno
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
and
fstl
pop
sarb
xchg
lcall
add
mov
in
std
fists
movsl
mov
test
and
cmp
xchg
ss
add
push
lods
push
jb
fidivrs
and
sbb
lret
out
cmp
pop
fstpt
mov
inc
call
xlat
in
shlb
fs
push
sub
iret
iret
mov
mov
lods
sbb
pop
arpl
das
mov
inc
inc
add
shlb
and
loopne
mov
movsl
mov
out
lahf
aam
push
jae
mov
jno
imul
jg
jbe
xchg
mov
xor
mov
dec
clc
inc
loop
ret
ds
scas
inc
adc
popa
push
cwtl
les
cmp
sbb
fistpl
test
ja
xchg
adc
or
pushf
or
add
out
fnstcw
pusha
in
sbb
jl
sbb
lret
fs
and
xchg
mov
adc
xchg
xlat
adc
add
ds
xor
in
ret
add
add
stc
stos
je
dec
cmp
rolb
mov
daa
pushl
cmc
out
fisubrl
lods
dec
inc
loopne
stc
or
pop
xor
repnz
lds
es
mov
xchg
jmp
sub
mov
aaa
sbbl
movsl
ja
out
test
shll
in
and
sbb
loop
aad
in
in
mov
dec
mov
mov
xchg
aam
adc
jge
cli
jb
mov
dec
in
sub
push
in
stos
fdivr
aam
push
ds
cmc
lret
imul
nop
adc
das
das
xor
int
stc
ret
cs
dec
sbb
push
jbe
lret
cmpsl
pop
lcall
push
inc
in
xchg
pop
push
and
pop
adc
stos
cmp
sbb
in
pop
pop
dec
out
test
sbb
cld
dec
dec
add
call
inc
xor
fdivrl
pop
dec
and
dec
neg
push
xor
xor
add
xchg
mov
jmp
repnz
dec
out
roll
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
ror
shrl
mov
sarb
out
fucomi
sub
std
popa
jmp
mov
lahf
adc
xor
std
cs
test
in
sbb
sub
arpl
pop
imul
cld
adc
insl
fcoms
outsb
inc
fwait
push
or
xor
fldenv
test
and
xor
sbb
insl
mov
and
push
cmpsb
into
fistpll
sub
iret
jae
add
stc
cld
jo
jbe
lcall
es
mov
xchg
scas
adc
sub
jne
aas
nop
into
inc
push
pusha
xchg
sahf
pushf
push
mov
push
ret
ljmp
inc
dec
sti
jno
stos
mov
sub
mov
hlt
push
add
fmull
dec
add
jge
jmp
repnz
add
dec
outsb
xchg
or
les
xchg
xor
test
daa
push
jmp
cltd
cmp
jle
loop
out
cmp
stos
adc
or
sub
dec
rclb
sbb
dec
call
cwtl
dec
in
add
clc
add
pop
inc
mov
adc
fisubs
xchg
adc
stos
adc
sub
test
imul
mov
or
fucom
jle
jns
sub
sti
lcall
jae
lods
gs
nop
dec
pop
xchg
cmp
cmp
movsl
inc
aad
ljmp
cltd
shrb
mov
out
stc
ficompl
inc
mov
mov
xor
sub
cmpsb
aad
and
femms
push
stc
arpl
mov
dec
cs
or
adc
loopne
adc
insl
push
inc
xchg
lods
mov
mov
adc
push
push
lahf
sub
loopne
repz
mov
and
sbb
mov
adc
fimull
jmp
cmp
xchg
mov
rcrb
pushf
fcomps
push
pop
cmp
xor
popa
cmpsl
fwait
pop
cwtl
pop
sbbl
adc
dec
lret
adc
xchg
xchg
orl
cmpsl
jl
mov
mov
addr16
push
adc
xchg
sbb
ret
sbb
je
adc
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
mov
pop
sarb
add
movsl
ja
pop
std
aam
fnstsw
add
fidivl
sti
cmp
or
shr
xchg
and
cwtl
fnstsw
adc
lods
inc
inc
mov
in
xlat
and
clc
xor
dec
bound
es
movsl
push
insb
mov
ret
movb
enter
mov
jle
push
xchg
insb
flds
cmp
jne
cmp
push
push
les
popf
aas
sub
loope
test
cwtl
dec
lds
shr
dec
lea
pop
sbb
xor
sub
xchg
adc
fwait
push
decb
enter
sti
fbstp
xor
movsb
stos
mov
sub
sti
xor
imul
adc
adc
add
inc
jns
sbbl
sti
fwait
push
add
mov
jmp
inc
sub
adc
ret
pop
sub
ja
jne
mov
leave
push
sbb
inc
xchg
xchg
xor
xchg
cmp
jmp
in
xchg
and
xchg
addr16
sti
sarb
and
xchg
mov
sbb
in
ret
cli
jns
add
inc
insb
pop
pop
inc
rorl
imul
xchg
push
aaa
data16
jge
shrl
lcall
sbb
popa
lret
sub
aaa
pop
mulb
lcall
cmpsl
and
cmp
mov
sarl
popa
pop
push
loop
xchg
adc
add
pop
pop
rcll
cmpsb
cltd
rcrb
shr
iret
les
sahf
daa
xchg
std
fisttpll
ffree
sub
out
mov
mov
cmp
cmp
scas
push
cmp
and
push
push
cmpsl
int3
mov
addr16
push
shr
aaa
mov
aam
hlt
mov
movsb
dec
xchg
repnz
cmp
mov
add
rcll
cmp
push
loop
mov
push
outsb
daa
sub
mov
xchg
sbb
jmp
popa
or
sub
fimull
lods
roll
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
cmpl
mov
lret
or
jno
cld
jne
push
scas
orb
xchg
sbb
and
out
mov
sub
dec
jecxz
push
jge
out
ret
cwtl
mov
xchg
dec
fidivrs
xchg
xchg
cld
or
xor
loopne
push
mov
inc
repnz
movsl
pop
inc
aaa
pop
push
pop
and
lods
sbb
imul
cld
jnp
jmp
lcall
sub
fisubs
out
inc
shrl
lahf
mov
cmp
lods
rclb
inc
dec
mov
sub
mov
ret
out
pop
pop
sarb
push
lret
cmp
push
push
orl
mov
pop
les
cmp
sbb
lock
mov
test
imul
nop
add
ror
mov
cmpsb
push
icebp
push
inc
addb
xchg
cmp
cmp
push
std
int3
roll
sub
call
popl
andl
pop
xor
rolb
and
mov
inc
jnp
fimuls
sbb
cmp
jbe
in
sahf
insl
insb
lahf
lds
leave
mov
jmp
out
push
pop
adc
lds
jbe
add
jl
add
mov
dec
jo
pop
shrl
aam
sahf
inc
sbb
mov
and
mov
std
lods
aam
insb
or
push
xchg
jecxz
ficoml
cltd
mov
adc
ret
xchg
add
insl
lds
andl
shrl
shrl
lods
cs
push
add
mov
xlat
cwtl
pop
es
jb
out
movsl
mov
push
sbb
jg
xchg
mov
fsubp
mov
mov
jae
xchg
add
mov
repz
aas
jl
sub
xchg
mov
cld
jne
pop
in
inc
out
lea
rcrb
pusha
aas
lcall
fwait
out
mov
xlat
outsl
jmp
xchg
sbb
push
pop
lret
movsb
pusha
jo
mov
iret
add
sahf
pop
mov
lea
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
xlat
scas
iret
repz
mov
pop
push
xchg
adc
je
fisttpl
scas
stos
mov
popa
test
pop
in
or
adc
xor
push
mov
cltd
jne
add
sbb
xor
lds
lcallw
and
add
daa
ljmp
cli
mov
inc
rep
mov
ret
sub
rol
or
pop
sub
or
push
adc
xor
xor
imul
cld
add
jo
scas
add
dec
mov
pop
pop
fcmovnbe
sbb
test
js
jge
in
cmpsl
adc
mov
push
bound
mov
inc
lock
ja,pn
cmpsl
jne
lds
inc
jnp
xor
mov
dec
aad
mov
xlat
packuswb
fidivs
std
jmp
dec
dec
ffree
cmpsb
scas
cmp
test
xor
call
or
fldenv
jecxz
fsubl
add
test
imul
mov
cltd
popa
test
aaa
jbe
ret
add
je
shll
cmp
jecxz
push
imul
fdiv
cmpsl
or
sahf
scas
cltd
xchg
jmp
test
cmp
mov
xchg
push
and
pop
es
mov
nop
dec
dec
aaa
cmp
sub
scas
jecxz
loopne
adc
add
sbb
adc
outsb
or
cltd
rorl
jp
nop
push
imulb
insb
and
shlb
pop
push
fcoml
mov
add
mov
push
into
imul
dec
aas
or
sbbb
mov
outsb
out
les
dec
jp
jbe
pusha
ret
jb
jno
sti
mov
mov
test
out
leave
mov
push
int3
cwtl
pop
shlb
xor
fildll
frstor
negw
fsubl
stc
jle
mov
fbld
lods
test
pusha
in
rorb
sbb
xor
lods
daa
lret
mov
out
insl
mov
fstps
cmp
mov
cs
fwait
sahf
repnz
xchg
cli
cld
mov
inc
ret
add
and
jmp
xor
frstor
test
dec
ss
iret
imul
mov
jl
add
data16
mov
mov
sbb
sbb
jo
mov
ret
nop
out
stc
leave
lret
mov
rorl
shlb
lahf
inc
xchg
add
rclb
lcall
add
lret
lods
adc
scas
sub
into
add
lods
into
aad
dec
scas
rorb
in
lods
or
mov
ret
cmp
ret
sbbl
xor
leave
push
xchg
cli
push
pop
aaa
ret
leave
push
movsl
addr16
xchg
dec
xor
je
ret
adc
inc
iret
lock
outsl
mov
jge
in
inc
dec
sti
loop
stos
add
cmpsl
add
jmp
adc
jge
jge
lods
ror
jecxz
jae
cld
xchg
inc
push
push
push
addr16
and
jmp
mov
push
fbstp
push
sub
arpl
inc
call
jp
sahf
cli
les
xchg
test
flds
inc
adc
jb
stc
insb
and
and
popa
jp
and
das
pop
pop
jle
mov
sub
inc
cli
jo
cmp
cmpsl
add
inc
insl
cmp
in
movsl
or
movsl
add
pop
pop
cmpsb
add
shl
add
xor
sti
daa
mov
out
jnp
pushf
cmp
push
aas
or
test
int
enter
add
sbb
xchg
mov
xor
lods
sbb
xchg
sub
cmc
cli
add
xor
mov
inc
xor
cs
sbb
pop
mov
jge
sbb
mov
mov
inc
loop
dec
outsb
movsb
rcll
adc
cmp
enter
sub
fdivl
imul
mov
jae
sbb
int3
fisubrs
push
cmpsb
jbe
cmpsl
lcall
cmp
xchg
fldcw
dec
jne
or
cmp
out
sbb
daa
jp
loope
pop
or
pop
in
inc
in
mov
dec
dec
sub
enter
lds
loope
add
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
inc
push
jecxz
jecxz
sarb
adc
shl
mov
das
push
add
fdivrl
xor
add
outsb
outsb
and
push
push
int3
or
pushf
add
bound
fmull
xchg
test
hlt
icebp
ret
ljmp
mov
cmc
and
in
aaa
ret
iret
mov
inc
jmp
scas
mov
popl
movl
push
add
test
sbb
pop
inc
andl
fnsave
adc
lcall
xchg
fwait
dec
cmp
adc
je
push
pusha
cmp
nop
push
xor
lcall
jne
nop
aam
add
stos
adc
mov
test
sbb
shrb
lcall
mov
adc
push
jne
or
adc
push
cltd
es
pop
push
lock
push
call
jmp
mov
xchg
mov
stc
outsl
mov
mov
mov
test
sub
mov
pusha
in
sub
rclb
inc
inc
pop
daa
fists
sbb
mov
mov
xor
mov
mov
das
mov
push
xchg
lea
inc
mov
mov
inc
xchg
loopne
adc
push
sbb
push
pop
pop
movsb
imul
inc
mov
pop
pop
mov
and
test
repnz
xchg
dec
mov
fwait
out
js
xor
cmp
adc
int3
xlat
mov
lods
aad
pop
das
adc
mov
call
sahf
sub
jo
sub
xchg
lret
stc
sub
dec
mov
das
ds
jg
adc
or
xchg
roll
icebp
xchg
inc
push
inc
imul
push
xchg
les
repz
push
sub
cmp
pop
add
mov
sub
xchg
cmp
mov
xor
xchg
mov
push
lods
push
gs
test
mov
or
xchg
call
jmp
shll
rcrb
ret
pop
shrl
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
cmp
mov
mov
pop
mov
ret
outsl
mov
pop
lea
rclb
sbb
incl
push
lret
ds
imul
and
scas
xorb
test
mov
decl
jmp
or
inc
arpl
push
adc
sub
cli
inc
adc
jae
push
addr16
cltd
gs
inc
dec
loop
jns
adc
leave
sub
mov
mov
sahf
scas
mov
ret
mov
dec
out
test
jecxz
aad
pop
xchg
mov
mov
bound
mov
sub
js
aas
mov
sbb
int
test
sbb
dec
mov
pop
xchg
add
ss
pop
inc
in
xchg
xchg
jmp
add
jne
dec
cmpb
add
aam
sbb
jecxz
imul
adc
sbb
outsb
adc
data16
and
fisubrs
mov
or
imul
inc
or
inc
aas
xor
sbb
inc
dec
movsb
push
adc
jp
jge
stos
jnp,pn
mov
outsb
subb
cmpsl
gs
mov
adc
lcall
fiadds
and
loope
dec
jnp
cld
cmpsb
fisttps
mov
pop
dec
es
filds
pop
pop
dec
sub
add
or
xchg
js
out
jg
mov
cmpsb
les
sub
mov
rcrb
xor
pop
sti
dec
mov
dec
data16
lea
jg
dec
push
loopne
pop
lock
call
clc
inc
aad
mov
dec
leave
sub
add
pushf
xchg
sti
mov
mov
pop
xchg
mov
mov
xbegin
sbb
jg
iret
jg
int3
push
mov
or
mov
and
pop
aad
mov
test
sti
mov
xchg
sub
test
xchg
pop
dec
out
pop
fs
cli
repnz
dec
adc
dec
dec
push
sub
xchg
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
iret
aam
sarb
mov
int3
ret
and
add
or
packuswb
movsl
lock
xor
nop
jae
mov
repnz
xchg
in
mov
push
add
or
sub
mov
and
pop
jae
mov
psubusw
add
cmp
daa
idivb
or
filds
lahf
mov
rorl
xchg
call
test
outsb
dec
not
mov
repz
xchg
inc
cld
mov
repnz
add
sub
pop
ljmp
jge
xchg
clc
inc
in
and
mov
mov
dec
scas
les
lea
push
add
iret
cmp
push
bound
mov
pop
aaa
push
outsl
jo
fmul
sub
aas
adc
cmpsl
push
les
aaa
pop
jbe
jmp
xchg
xchg
lds
out
pushf
xor
repz
sub
or
jns
fimuls
scas
dec
in
push
add
or
jmp
cli
in
pop
dec
cld
xor
inc
leave
mov
icebp
push
cs
and
scas
mov
sub
pop
addr16
sub
add
push
mov
imul
or
sahf
cmp
mov
push
dec
popf
repz
and
add
push
jle
aam
or
mov
popa
mov
mov
and
lret
aad
fcompl
inc
pop
dec
fsubrl
sbbl
ljmp
push
and
outsb
lods
inc
jmp
lods
jns
das
bound
aad
adc
sahf
and
or
inc
scas
pop
int3
cmc
insl
push
pop
jmp
pop
dec
inc
push
inc
out
adc
mov
lahf
lods
popf
adc
sub
hlt
mov
insl
dec
mov
dec
sti
fcmovnu
push
insl
mov
or
repz
xor
sub
dec
jb
lret
mov
testl
inc
std
ja
cmpl
dec
hlt
mov
inc
lahf
test
dec
cwtl
inc
sub
cmc
push
xchg
pop
xchg
dec
lcall
sbb
jnp
cs
or
int3
push
push
push
cmp
insb
ret
into
cs
and
loopne
lret
aad
std
lret
push
and
and
or
lods
xchg
out
jle
jmp
fiadds
cli
cmp
inc
and
cmp
lret
mov
add
xor
push
mov
and
add
enter
jmp
xor
mov
push
sbb
pop
mov
push
loopne
fimull
jg
lcall
frstor
insl
orl
sbbl
in
jl
stos
pop
push
xor
inc
add
sub
xchg
jbe
aas
jg
into
mov
out
add
cmp
mov
call
js
cmpsl
fldenv
mov
xchg
xor
icebp
inc
imul
pop
inc
adc
mov
loopne
push
mov
daa
pushf
sub
push
iret
and
fdivrs
inc
pushf
mov
mulb
daa
loope
mov
test
adc
pop
add
cmpsb
add
mov
dec
push
push
cmp
lcall
and
and
xchg
mov
xor
xchg
and
movsl
dec
fwait
push
mov
jl
scas
xor
or
es
add
loopne
insb
xor
cltd
inc
jge
cmpb
in
dec
popf
pop
mov
pushaw
or
mov
or
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
sbb
sarb
ja
fcompl
movl
push
add
jp
fs
or
mov
enter
sub
in
jae
xorb
je
sbb
xchg
das
repz
paddusb
jns
pop
negb
insl
notl
fdivrp
rcl
js
xor
enter
loope
out
xchg
lea
fwait
pop
in
sbb
push
pusha
jle
idivl
wbinvd
xor
lods
jns
push
sbb
insb
iret
jne
leave
movsl
push
or
sub
fidivrs
jb
push
rcll
adc
add
push
xlat
push
inc
adc
in
mov
or
hlt
sbb
outsl
les
std
jle
jp
push
push
cmp
sub
sti
lret
push
stos
mov
xor
sub
test
jge
sets
aad
popa
xlat
gs
xchg
or
push
inc
out
jno
mov
pop
inc
stos
cltd
cmp
cmpb
xor
pop
lahf
xor
inc
xlat
mov
ds
icebp
hlt
sub
ud0
in
dec
mov
rclb
outsl
inc
js
insl
cmpsb
sub
hlt
add
ffree
lods
jge
sbb
mov
mov
sbbl
push
iret
xchg
out
jb
repz
cmpsl
adc
lcall
mov
xchg
dec
push
jp
inc
inc
xchg
pop
cmp
xchg
fwait
insl
push
lcall
mov
and
sti
dec
cmpsl
pop
add
out
je
add
dec
dec
mov
int
ror
data16
cmpsb
adc
jo
jmp
adc
jmp
or
pop
stos
sbb
jp
adc
loopne
bound
xchg
mov
mov
mov
ja
in
jo
jge
lret
into
mov
xchg
mov
jo
xchg
inc
add
lods
push
faddl
lret
xchg
cmp
sbb
ljmp
xchg
inc
xor
xchg
int3
cmp
or
push
jmp
push
inc
jb
arpl
add
into
sub
ja
lea
pop
lock
data16
test
dec
sub
cwtl
or
fstpl
testl
cs
bound
aam
add
xchg
mov
push
jno
lret
test
pop
jbe
xchg
push
xchg
mov
cmpsw
add
scas
sub
movsb
incb
sub
outsl
and
dec
fisubrs
pop
and
mov
sub
dec
or
mov
push
dec
insb
mov
pop
dec
stos
imul
enter
icebp
jbe
negl
fstpt
cld
pop
cs
std
xchg
lret
jmp
jb
adc
jmp
sbb
cmpsb
popa
mov
sub
call
or
dec
push
xor
mov
sbb
jo
lock
roll
mov
daa
sub
pop
lods
dec
int3
ficomps
pop
sub
cmpsl
add
mov
jo
cmp
aas
pop
xchg
xchg
pop
xchg
out
mov
xlat
cmc
inc
mov
shrl
xchg
pop
mov
mov
sub
cld
mov
jmp
cwtl
mov
dec
out
jno
daa
jns
xchg
in
add
lods
clc
fwait
stc
mov
rcrb
imul
pop
dec
or
sti
jb
mov
leave
lock
les
jle
sti
mov
sub
xor
popa
jnp
addb
xchg
dec
mov
cmp
mov
jmp
imul
mov
out
dec
mov
adc
ds
sbb
add
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
push
cmp
dec
les
fdivl
mov
shll
xor
pop
push
lcall
shlb
push
pop
pop
into
dec
lock
dec
insb
dec
lret
push
mov
cmp
subb
icebp
jle
pop
adc
scas
out
dec
lods
shrl
push
add
jmp
jb
jecxz
add
mov
pop
aam
popf
push
nop
add
sar
push
inc
icebp
lret
push
sahf
popf
mov
addr16
push
push
cmp
mov
in
add
or
sbb
xchg
xchg
testb
in
mov
pop
cmc
sub
jp
daa
pop
xchg
mov
ja
push
xchg
xlat
mov
push
jle
adc
lds
call
mov
in
dec
andb
dec
nop
jmp
jp
shrb
mov
loop
jge
adc
pop
and
dec
hlt
and
std
repnz
pop
xorb
jmp
xchg
nop
jmp
mov
sub
pop
lods
sbb
loopne
pop
sbb
inc
adc
and
pop
jb
pushf
jne
stc
xor
mov
pop
inc
sbb
pop
sbb
mov
addb
andb
mov
cmp
lret
lahf
pop
add
jge
fcomps
ljmp
popf
cmpsl
popa
scas
push
or
jg
jmp
inc
enter
sbb
ja
movsl
pushf
in
in
mov
sub
push
fs
mov
xchg
leave
jo
mov
xor
fwait
hlt
jnp
xor
and
ds
js
nop
pop
outsl
xchg
dec
lahf
cmp
mov
adc
lods
jne
push
insb
or
pop
std
es
loopne
test
dec
shlb
insb
in
sub
loopne
in
sbb
inc
test
jg
movsb
xor
stc
cmpl
push
test
mov
scas
dec
cmp
lret
in
dec
pop
sub
shll
sbb
frstpm(287
rcrb
sbb
xor
cmp
add
imulb
adc
adc
ljmp
pop
fsts
dec
sbbl
clc
popa
ret
mov
or
mov
or
mov
jbe
mov
add
push
sarl
push
shrb
xlat
xchg
punpcklbw
push
popf
mov
mov
jmp
stos
mov
into
std
cmp
data16
push
mov
mov
jae
daa
lock
and
and
dec
enter
leave
or
add
testb
imul
sti
test
jbe
jl
and
fdivr
js
push
popl
sbb
adc
popa
mov
jnp
bnd
stc
rcrl
fs
mov
subl
mov
int3
xchg
mov
out
test
xchg
push
les
ja
mov
jle
cmc
insb
test
mov
pop
mov
into
jns
aam
sbb
test
hlt
mov
xlat
or
jb
imul
not
in
lcall
test
or
call
sbb
cli
cmp
insl
cmp
push
mov
daa
or
ret
clc
and
iret
cmp
pop
stc
fistpll
sbb
fdivrs
test
dec
cmp
into
push
cltd
mov
out
cld
notb
ljmp
mov
loope
jg
inc
std
or
mov
inc
and
or
add
mov
xor
test
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
adc
les
dec
dec
xor
dec
les
lock
pusha
dec
add
sahf
cmpsb
inc
push
popf
xchg
addr16
push
jnp
mov
sbb
loopne
xlat
nopl
mov
fwait
xor
inc
jae
pop
xor
in
je
hlt
push
inc
cmp
push
xor
popa
inc
jno
mov
mov
gs
sbbl
push
cmpsl
mov
lea
add
cmp
inc
ja
sbb
pop
xor
loope
mov
test
sbbl
cmpl
sbb
sbb
jno
ss
testb
repnz
add
imul
cmp
sub
mov
add
sbb
push
sub
mov
icebp
xchg
outsl
repnz
rcl
xor
adc
outsb
sub
insb
fisttps
inc
mov
aad
icebp
cmpsb
and
sub
mov
dec
shlb
push
push
jbe
mov
mov
jne
dec
loope
int3
mov
jno
dec
push
je
imul
fldenv
sahf
adc
mov
xor
mov
stos
push
mov
jp
stos
or
and
xchg
inc
add
fistps
jecxz
out
arpl
and
and
imul
or
cld
sub
cmp
jne
mull
into
xchg
ss
mov
in
inc
jns
mov
push
lea
xor
pop
xlat
push
and
and
fisubl
xor
and
jae
icebp
mov
decb
or
jl
hlt
clc
push
dec
jb
in
push
sub
rcll
daa
cld
into
sub
push
mov
cmp
ljmp
fisttpll
nop
lret
mov
cmpsl
mov
enter
mov
push
or
xor
mov
stos
pop
jge
mov
pop
lds
pop
cmp
mov
loop
xchg
push
shl
shll
inc
fsubl
cmpsl
adc
mov
mov
jnp
dec
fld
movsb
rorl
mov
clc
stc
adc
mov
adc
sbb
jp
shlb
sahf
addr16
fiadds
dec
add
sbb
adc
jmp
push
decl
jecxz
call
aad
flds
test
lret
fcmovu
inc
inc
int
cmc
xchg
push
xor
in
outsb
rcrl
inc
push
lcall
jecxz
insb
hlt
and
into
push
and
iret
mov
pop
popa
dec
adc
jnp
jg
push
add
push
fwait
repnz
pop
movsl
cwtl
push
inc
cmpsl
cmp
push
push
out
in
negb
inc
dec
insl
push
sbb
mov
adc
jb
lea
xchg
outsl
mov
ficomps
test
scas
xchg
jae
ja
sbb
ljmp
push
mov
ds
xorb
adc
and
adc
and
inc
mov
stos
fidivrs
leave
rorl
xor
int3
lahf
pop
mov
arpl
je,pn
std
into
ficomps
jge
pushf
cmp
or
int
nop
rolb
scas
adc
rcrl
sub
cltd
test
and
fbld
push
xchg
fs
xchg
fwait
add
fsubl
pusha
nop
loopne
dec
pop
cld
lds
into
mov
pop
movsl
dec
pop
sarl
mov
into
pop
loope
add
pop
xor
into
xchg
subb
test
insl
push
and
cmc
dec
xchg
xchg
fistps
aad
out
push
insb
scas
and
in
loope
and
js
mov
mov
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
ret
iret
add
mov
push
or
ret
vmovhps
inc
jmp
aas
jb
inc
rcll
int
mov
mov
push
sub
dec
push
loop
sbb
stos
dec
push
shlb
lcall
mov
jp
and
scas
lock
mov
xor
cli
xor
push
jae
ret
xchg
jnp
mov
lcall
xor
out
in
aam
lds
rcl
add
push
aas
add
add
or
test
push
push
mov
imul
and
inc
in
fildl
scas
scas
jle
jnp
inc
aam
inc
mov
adc
fld
adc
xchg
sbbl
sub
out
lahf
mov
mov
inc
enter
cmp
dec
icebp
test
sub
bound
fstpl
push
mov
je
xor
jmp
ficoml
mov
out
lea
shr
push
xor
aas
jo
fnsave
mov
nop
es
pop
aas
lret
cs
sub
lock
call
repnz
xchg
lds
les
jmp
clc
divl
sub
clc
out
data16
sbb
mov
pop
stos
push
cwtl
fdivs
cmc
icebp
lea
pop
jmp
ret
add
pop
adc
sahf
fiaddl
iret
in
clc
jge
cmp
inc
sub
mov
inc
in
sub
test
and
lahf
shlb
lahf
mov
push
data16
orl
icebp
out
mov
push
in
xchg
sti
jmp
push
int
adc
test
aas
lret
loopne
testb
std
rclb
pushl
inc
xor
and
rolb
lret
mov
clc
jmp
sbb
aam
mov
mov
mov
lock
add
mov
jg
or
cmpsl
int3
outsl
pop
jbe
and
popa
sbb
imul
imul
push
pop
loop
adc
adc
inc
pop
loopne
lock
dec
cli
negb
int
cltd
xor
pop
pop
mov
imul
jl
jmp
pop
cltd
sbb
sbb
sub
xor
add
je
lcall
jge
shl
push
scas
ffreep
adc
movl
cltd
in
push
sti
push
loop
call
mov
xchg
roll
jbe
push
cmp
lahf
mov
xchg
push
sbb
cmp
into
stos
mov
pusha
pop
mov
out
add
xchg
inc
testl
adc
arpl
mov
and
and
fiadds
lcall
loop
pop
aas
and
cmp
cmpsb
pop
push
mov
movsb
and
sub
pop
push
mov
das
lret
insb
test
das
mov
test
pop
xchg
sub
subb
mov
lcall
push
pop
fs
sbb
sub
loop
out
das
test
hlt
sub
inc
mov
loopne
pop
mov
mov
or
adc
leave
xchg
pop
xor
fiaddl
ljmp
mov
int3
add
shlb
js
mov
fistpll
mov
xlat
into
inc
imulb
add
cltd
cs
clc
pop
icebp
sub
adc
add
das
add
insl
jno
test
adc
cmpsb
xchg
sub
out
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
cmpsb
adc
sahf
nop
pop
sarb
sbb
outsl
es
push
cwtl
cli
idivl
cmp
push
xchg
loopne
mov
push
test
or
aaa
mov
jle
or
test
jp
ja
adc
ror
mov
inc
mov
push
adc
and
enter
pushf
push
enter
test
lea
clc
aaa
ror
shl
xchg
lret
or
or
mov
outsb
push
xchg
push
insb
mov
push
and
rorb
fsubs
inc
inc
adc
shll
mov
andl
sti
pushf
daa
mov
mov
in
pop
cmpsl
cld
inc
mov
pushf
hlt
or
mov
adc
xchg
aaa
mov
lds
jne
dec
outsb
clc
sub
xor
outsb
sbb
mov
divb
inc
fisubrl
jbe
pop
psrlw
mov
inc
into
sub
mov
insb
mov
or
jmp
es
jge
ret
js
stos
rcll
in
shrl
or
push
pop
mov
popa
adc
addl
add
jge
mov
or
sbb
mov
push
add
out
lods
inc
mov
shrl
aam
popa
adc
mov
enter
aad
outsl
data16
into
xor
mov
adcb
xchg
add
xchg
daa
arpl
cmp
push
outsb
pop
mov
dec
out
jge
ret
and
inc
scas
push
push
test
inc
pusha
push
push
data16
inc
adcb
push
fstps
push
adc
stos
lret
mov
xor
pop
sub
xchg
cld
cld
pop
ficomps
hlt
shl
hlt
or
inc
push
push
pop
fs
or
add
das
rcl
push
and
add
jp
xchg
xchg
loopne
adc
mov
arpl
pop
mov
loopne
int3
and
aam
movsl
push
fdivs
hlt
jb
sbb
fbld
lea
stos
in
mov
mov
sub
inc
sbb
dec
rcll
pop
inc
xchg
faddl
mov
popa
xor
mov
test
push
mov
icebp
jbe
or
lcall
push
ret
sub
mov
jl
aaa
lahf
sub
jle
fwait
and
bound
out
cmp
sti
jns
notb
ret
nop
lret
int
ds
repnz
cmc
lret
xchg
lahf
mov
mov
jns
in
and
and
jmp
ror
in
mov
popf
sub
and
in
mov
ret
xchg
sub
inc
push
outsb
xor
dec
hlt
pop
scas
lret
dec
push
or
in
in
data16
and
lods
std
mov
sub
adc
bound
aam
mov
lret
rorb
or
jmp
inc
jnp
cmp
jbe
add
std
ja
sbb
cmp
jecxz
into
scas
out
sti
and
cld
lret
test
dec
movsl
test
sbb
xchg
mov
and
sbb
lock
stc
dec
mov
loope
mov
data16
jnp
or
cli
ja
sub
mov
push
jno
lods
xchg
or
mov
jae
and
or
adcl
stos
add
jne
aad
popa
mov
push
inc
dec
fsubs
cmp
movsl
mov
add
mov
cmp
hlt
dec
adc
add
sbb
push
movsl
movsb
pop
shl
popa
out
test
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
insb
fdivr
fstpl
sarb
dec
mov
inc
push
add
dec
aaa
popa
dec
test
imul
push
mov
bound
adc
pop
dec
sub
out
inc
dec
lods
outsb
add
mov
sub
fcompl
test
mov
add
int3
fwait
pop
mov
jmp
pop
xor
insb
lahf
sarb
sbb
xlat
imul
jmp
hlt
or
and
push
push
scas
test
sub
sti
cmpsb
inc
push
xlat
add
ljmp
aad
mov
mov
aaa
xorb
xor
loop
jo
xlat
jno
dec
in
jae
xor
subl
pop
mov
jecxz
shl
jecxz
lods
sub
int3
pop
mov
mov
loopne
imul
inc
repz
cld
jecxz
jo
test
cmpsl
add
fsub
pop
sti
into
lods
idivl
addl
fcompl
cmp
inc
push
pushf
mov
push
mov
cli
cld
sub
cmpsb
aam
dec
push
addr16
arpl
mov
inc
add
cmp
aaa
fadd
clc
mulb
in
mov
addr16
movsl
std
lahf
shll
mov
or
lahf
es
ficoms
icebp
sbb
fcompl
dec
dec
cmc
call
jp
sahf
fisttps
loope
insl
fiaddl
push
scas
ljmp
mov
lret
pop
loope
stos
shll
and
jb
es
inc
es
cmp
sub
xor
pushf
jnp
out
in
pop
pop
outsl
call
test
lret
repz
loopne
and
xchg
xchg
cmc
sahf
lods
lods
aaa
sbb
hlt
das
int3
outsl
inc
loop
dec
scas
xor
imul
xchg
jo
pop
mov
push
daa
ss
lahf
sbb
sbb
fwait
cmc
jae
fldl
sub
daa
adc
lea
cmpsb
sbb
mov
push
xor
notl
es
fmull
jcxz
mov
or
filds
jge
sbb
push
int
jo
shll
inc
xor
dec
stc
adc
fsubrs
lret
cmp
lret
xchg
bound
xor
jl
mov
imul
pop
dec
test
inc
cmc
fxch
and
loope
push
push
into
mov
mov
add
and
and
lahf
insb
add
mov
and
mov
gs
mov
inc
jno
outsl
jo
aad
test
jge
lods
mov
add
xor
mov
xchg
ja
mov
xchg
sbb
subl
faddp
sbb
jle
outsl
mov
push
loop
sub
xchg
js
add
dec
inc
imul
xchg
leave
fs
jmp
mov
arpl
mov
xchg
mov
pop
pop
adc
push
lahf
jnp
jno
push
and
sbb
dec
loope
push
arpl
adcb
lea
or
xchg
inc
out
jb
cli
sbbb
sbb
cwtl
xchg
stc
fldt
and
stc
mov
cmc
jnp
xor
fwait
pop
cli
and
pushf
adc
aad
add
sbb
data16
mov
sub
scas
fs
arpl
pop
icebp
lahf
scas
xchg
jmp
pop
out
loope
iret
dec
mov
pop
dec
es
dec
mov
cmpsb
jle
pop
push
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
mov
outsl
sarb
pop
cmp
dec
mov
push
jns
rcrl
xchg
adc
cmpb
into
pop
mov
mov
cmp
popf
loopne
jbe
adc
push
mov
push
mov
sbb
pop
xchg
clc
cld
lods
not
push
pop
out
pop
dec
jne
mul
dec
orb
mov
jmp
lret
sbb
sub
rorl
test
pop
aad
sub
ja
ljmp
les
sbb
xchg
mov
call
jp
fdiv
and
out
push
dec
int3
mov
test
ret
pop
cmp
or
into
mov
pusha
das
inc
jle
push
daa
dec
or
cltd
fsubp
adc
and
pop
in
xchg
lahf
ljmp
jb
out
out
add
add
arpl
dec
xor
add
adc
mov
enter
pop
fs
notl
mov
icebp
push
and
xchg
xchg
aad
cmp
movl
inc
sub
and
xor
mov
jns
int3
and
add
js
pop
fsubrl
mov
mov
js
inc
push
inc
or
mov
push
rclb
clc
jge
sub
movsl
cmpsb
push
sbb
insl
jmp
mov
adc
sbbb
inc
jo
add
sbbl
repnz
sbb
imul
mov
popf
cmpsl
scas
jg
fisubs
paddb
cmp
pushf
loop
sbb
push
xor
push
jp
sbb
test
std
pusha
or
fldenv
jb
daa
jmp
inc
test
dec
and
mov
and
pop
fsubp
je
je
add
sbb
adc
stc
inc
lods
fdivr
mov
xchg
daa
jg
int
lcall
test
insb
js
rcl
cmp
hlt
xchg
add
cltd
mov
cld
dec
arpl
push
mov
sbb
jle
das
roll
mul
call
and
sbb
fs
xchg
mov
push
ss
ficoml
adc
call
fildll
clc
cmp
push
xor
sbb
inc
fdivr
pop
outsb
mov
inc
jne
inc
lret
into
xchg
lock
sub
shll
mov
mov
mov
out
push
sub
in
pop
push
or
movsb
daa
push
arpl
push
sahf
xchg
lret
cltd
pop
and
mov
or
fcomps
push
cli
pop
fisubl
inc
inc
xor
out
test
gs
mov
ds
add
xor
iret
cmpsl
push
push
int
inc
adc
test
jnp
jp
and
aas
std
pop
cwtl
in
imul
imul
loopne
cs
mov
sti
jle
sbb
push
xor
mov
les
dec
pop
push
aas
or
mov
or
or
test
fsubr
push
mov
dec
pop
subl
stos
jecxz
fiaddl
xchg
push
out
fs
enter
dec
pop
cmp
jmp
cmpl
mov
int
jg
sbb
sub
imul
fistps
push
arpl
imul
jle
adc
lcall
jmp
push
movb
push
sbb
and
xor
adc
sbb
mov
repz
add
lret
adc
xlat
jmp
mov
sahf
xchg
cwtl
movsl
cwtl
fcomps
pop
movsb
push
lock
pop
je
mov
jmp
cld
sbb
mov
sahf
jmp
lret
movsb
xor
mov
mov
mov
into
add
mov
xchg
inc
cltd
scas
push
xor
les
push
inc
xchg
shlb
fsubl
or
movsb
movsl
jecxz
and
and
adc
sub
cmc
aaa
in
imul
adc
iret
mov
cmpsb
adc
loopne
xchg
es
lret
sbb
inc
push
sbb
mov
mov
or
push
popa
movsl
scas
insl
cmpb
outsl
mov
std
int
cs
out
fsubl
cwtl
loope
sub
loopne
adc
cld
mov
add
ja
pop
out
dec
sub
push
jmp
push
stos
in
mov
push
and
pusha
add
add
xchg
leave
and
addr16
jg
cmp
icebp
push
test
add
stos
or
pop
add
dec
ljmp
mov
push
and
xchg
adc
mov
test
jb
add
pop
cmp
sbb
hlt
in
movsl
repz
rclb
dec
inc
add
pop
push
sarb
fs
stc
or
xlat
xchg
lods
xchg
scas
es
je
pop
and
xchg
dec
add
scas
jns
mov
out
inc
mov
cwtl
iret
mov
push
adc
mov
fcmovnu
mov
mov
inc
cmpsl
mov
mov
mov
jnp
rorb
lahf
xor
inc
xchg
loop
xchg
cmp
mov
or
cltd
jmp
inc
mov
pop
lods
xchg
cwtl
sub
movsl
jmp
sahf
inc
test
xor
adc
inc
mov
in
aam
sub
mov
je
lds
sbb
pop
xchg
inc
push
sub
mov
cmpb
jmp
xlat
jl
xchg
mov
and
lock
mov
repz
movsl
or
ret
mov
in
rclb
pop
xor
and
sub
jp
pop
dec
dec
sbb
aas
dec
dec
out
push
or
inc
jmp
adc
xchg
add
in
adc
adc
out
sub
ficompl
sbb
cmc
cmc
sbb
fnstsw
xchg
lcall
lods
iret
jae
mov
push
push
lods
negl
ror
daa
mov
aaa
push
dec
sarl
nop
push
and
adc
ss
ljmp
mov
pop
adc
xchg
cli
int3
jmp
cmp
fmulp
jne
ljmp
ds
or
mov
lock
jnp
xlat
lods
dec
xchg
or
sbb
out
adcb
dec
jp
or
adc
or
jbe
daa
aaa
jbe
mov
adc
stos
xchg
mov
lods
cltd
or
jge
cmp
fldenv
push
popa
repnz
repnz
mov
stos
in
jmp
lds
jbe
lret
pop
mov
dec
jae
sub
jl
loope
scas
dec
loop
xlat
jo
xlat
ret
dec
addr16
std
and
test
mov
jecxz
mov
add
ja
fs
les
test
sbb
fs
test
add
fsubrs
push
aaa
sarl
inc
dec
aam
cmp
sbb
pop
cs
mov
add
pop
mov
push
iret
arpl
shll
xlat
std
sbb
jle
cmpsb
loope
pop
adc
mov
mov
daa
jb
lret
fcoms
xchg
imul
pop
loopne
cmp
mov
outsl
add
cmp
jmp
mov
inc
hlt
mov
push
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
dec
and
mov
int
pop
xchg
jo
outsb
call
int
pushf
aaa
fistps
cmp
push
add
rcrb
sbb
subl
mov
jp
mov
dec
xchg
cmp
jns
and
hlt
mov
pop
je
repz
xor
addr16
sub
sti
ljmp
ljmp
mov
mov
mov
je
and
out
andl
add
or
shlb
sbbl
mov
dec
push
jg
fdivrs
fisubl
dec
dec
loopne
push
imul
cmp
dec
popf
add
jne
mov
inc
insl
lret
jbe
mov
ret
add
dec
iret
bnd
aam
adc
sub
dec
adc
sub
addr16
adc
test
add
pop
jnp
add
popa
jno
adc
mov
ja
inc
add
push
cwtl
dec
inc
insb
loop
add
call
adcl
stos
jmp
fiadds
adc
imul
out
mov
dec
lods
pop
call
xchg
popa
jnp
adc
adc
rclb
rorb
xchg
jmp
xchg
push
call
fcompp
pop
sbb
aaa
stc
sub
xchg
sti
inc
push
int3
fiadds
jbe
adc
in
adc
cmpsl
mov
sub
xor
jb
mov
clc
inc
lods
cmp
adc
mov
into
push
mov
mov
fmull
out
fimuls
and
xor
cmp
dec
sub
int
sub
lods
in
test
sbb
push
iret
mov
mov
jg
dec
scas
push
dec
in
push
es
aam
cmc
jp
cmp
cs
movsl
jg
cs
std
in
int
pop
jp
xor
xchg
inc
mov
imul
outsb
xchg
pop
mov
mov
into
in
or
loop
dec
dec
push
dec
jbe
sub
cmp
mov
in
das
inc
push
jae
cmp
popf
sub
sahf
push
mul
ficoml
icebp
aas
push
adc
out
jge
add
dec
imul
enter
test
dec
sbb
cmpsb
adc
adc
imull
cmp
pop
sbb
jae
lcall
dec
repz
lds
xchg
add
adc
sahf
adc
push
lock
aaa
addl
xor
mov
repnz
adc
mov
out
jae
fucom
test
popf
mov
adc
sti
push
lret
addb
js
and
mov
dec
cmp
rcrb
loope
adc
insl
hlt
mov
mov
jecxz
xchg
add
push
iret
mov
testl
cmp
jne
pop
mov
adc
out
call
pop
push
inc
por
rcll
repnz
lret
out
imul
out
test
inc
jbe
incb
dec
dec
mov
arpl
icebp
cs
dec
icebp
imul
addr16
daa
ret
fnclex
ja
pushl
push
rcl
mov
push
cli
mov
subb
in
into
vmovapd
les
scas
sahf
or
xchg
sbb
xor
daa
dec
bound
mov
lods
or
or
popf
cmpsl
adc
cmp
mov
test
stc
inc
lret
decb
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
aas
jecxz
fisttpll
mov
push
bound
sub
into
pop
lret
adc
neg
out
xor
roll
cmp
ja
jnp
loopne
xchg
pop
add
dec
js
cmp
leave
and
pop
ss
and
push
mov
lahf
ret
arpl
movsb
push
adc
sti
cmpsb
jecxz
stos
lea
leave
jns
popf
sahf
ret
rclb
or
enter
in
rcrb
xor
daa
push
xchg
std
add
jno
shlb
sub
inc
adc
js
enter
xchg
or
lods
dec
mov
int3
stc
mov
fldenv
lret
mov
cmp
push
nop
hlt
icebp
aad
xchg
insb
push
or
stos
mov
loopne
nop
inc
popa
test
or
add
sbb
sbb
imull
xchg
das
xor
sbb
jae
mov
pop
stos
test
popf
popf
iret
stc
cmp
xchg
frstor
cs
outsl
jg
test
daa
and
jb
movaps
jmp
ret
dec
inc
xchg
out
aam
dec
sbb
or
mov
xchg
lret
leave
mov
test
stc
lock
test
cs
xlat
mov
mov
and
sbb
jecxz
inc
xorl
nop
mov
cmp
pop
mov
mov
call
mov
cld
lahf
sub
push
sbb
cwtl
cmp
sub
inc
fnstenv
xlat
push
inc
jmp
fs
push
or
stos
add
sbb
mov
movaps
ror
gs
js
shr
sbb
jbe
lahf
fsqrt
arpl
test
les
pushf
ret
jns
sub
mov
or
rcrl
adcb
loope
arpl
insl
and
cmpsl
scas
dec
loope
cmc
frstor
outsl
and
sbb
mov
test
adc
cwtl
pop
push
pop
lds
mov
and
hlt
pop
mov
lods
popf
jb
in
ljmp
sbb
call
pushf
sub
or
repnz
stc
sub
or
and
cmpsl
mov
fisttpl
enter
out
dec
mov
jnp
xchg
jns
jae
or
mov
mov
cmp
push
orl
fcomip
fwait
out
and
andb
sbb
xchg
sbb
sbb
mov
jbe
mov
xchg
icebp
add
sbb
cmc
fmul
addr16
and
mov
push
dec
imul
pop
mov
ljmp
adc
js
cwtl
shl
add
js
pop
fldt
arpl
and
decl
cli
fistps
jl
jl
jp
adc
add
ss
adc
sbb
loop
lea
fdiv
jbe
ret
in
out
shll
add
icebp
leave
mov
sbb
bound
pop
mov
jo
push
push
push
xlat
int3
jge
std
iret
repnz
push
mov
jne
out
int3
cmp
outsb
inc
cmp
es
cmp
lods
frstor
mov
lock
test
and
jne
push
stos
ret
cmp
pop
dec
dec
ret
adc
inc
push
push
push
ljmp
xor
orb
push
aas
or
and
mov
iret
push
sub
je
xchg
or
imul
add
xor
cmp
push
ja
mov
pushl
cwtl
mov
imul
into
out
dec
dec
ret
xor
fadds
ret
push
ljmp
jo
push
loopne
lret
hlt
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
sub
sarb
push
orl
push
rcrl
dec
cmpsl
clc
in
test
pop
xor
inc
mov
or
sub
imul
fs
arpl
aam
add
jmp
outsb
sbb
cmpl
loopne
mov
out
jle
mov
divl
aam
xlat
jns
out
mov
out
test
mov
cltd
arpl
imul
pop
jp
loope
lods
jae
and
movsb
cmpl
shrb
lods
into
or
pop
cmp
mov
sbb
ret
mov
loope
jae
jno
cmp
ret
inc
lcall
lcall
je
mov
loop
add
cli
or
and
data16
jmp
movsb
data16
mov
hlt
and
fists
dec
mov
xchg
in
cli
lahf
xchg
mov
sbb
lcall
shl
jmp
adc
imul
and
mov
jo
or
arpl
add
sbb
push
or
out
mov
adc
push
add
push
mov
notl
xor
mov
and
push
fmuls
mov
mov
sub
push
mov
mov
cwtl
mov
loope
pop
lock
or
sub
out
dec
pushf
pop
shrb
arpl
sti
xchg
mov
loope
int3
lret
fsts
xor
sub
pusha
mov
cmpb
leave
dec
movsb
int
fnstenv
pop
xchg
mov
cmp
pop
jp
and
adc
pushf
dec
ds
xor
out
xchg
aam
pushf
push
inc
xor
rclb
into
sti
jbe
iret
mov
ret
test
outsb
mov
jl
inc
xor
adc
add
mov
cli
insb
sub
ficomps
fdivs
pop
jae
fbld
mov
add
movsl
dec
mov
les
pushl
lds
out
test
cmc
or
inc
lock
jmp
rorb
loopne
ja
lea
leave
push
xor
sbb
inc
or
cli
xor
inc
mov
mov
and
test
cwtl
push
adc
test
or
repnz
cmpsb
sbb
xchg
adc
roll
or
mov
and
stc
hlt
sub
mul
xlat
and
dec
jno
or
mov
xchg
ret
xchg
xchg
gs
lahf
jl
adc
ds
add
insb
orb
mov
jmp
sub
jbe
nop
push
dec
mul
test
mov
lea
and
fmull
aam
pop
icebp
push
inc
in
roll
cmp
lret
sub
sub
jns
out
lods
gs
pop
in
jne
add
cli
outsl
cmc
sbb
push
inc
jle
in
push
jecxz
inc
pop
add
fld
lods
sti
lret
xlat
sub
mov
cwtl
rol
jne
add
xchg
loop
mov
add
add
pusha
mov
fs
arpl
mov
inc
adc
lret
je
cmp
mov
enter
mov
mov
movsl
and
xchg
adc
mov
lea
leave
scas
lahf
xor
sub
push
or
cmp
or
inc
outsl
pusha
fldt
dec
popa
add
xor
add
cmp
xor
shll
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
sbb
sarb
notl
cs
cli
pop
dec
jae
loopne
push
xor
adc
das
xlat
mov
in
leave
sbb
je
lcall
scas
and
fidivs
pop
cs
push
jae
mov
bound
jge
and
rclb
and
jecxz
cmp
inc
jo
inc
iret
push
ret
ja
dec
jmp
add
jp
inc
roll
addr16
xchg
mulb
dec
sub
fwait
imul
lahf
jno
mov
cmp
add
inc
scas
xchg
stc
aaa
mov
sahf
add
nop
push
lcall
dec
mov
push
ret
mov
pop
cltd
inc
add
es
push
cmp
sbb
insl
mov
lcall
jecxz
dec
pop
add
add
jns
push
fmuls
pop
aam
dec
pusha
and
lods
mov
xchg
mov
mov
dec
push
popa
inc
xchg
sahf
sarl
pop
fstps
testl
or
fisubrs
add
sbb
push
mov
js
jae
fidivl
push
xor
cmpsb
xor
mov
loopne
add
cwtl
xchg
and
mov
shrl
mov
jmp
sahf
and
fmulp
cmpsl
movsl
les
mov
sahf
xor
imul
or
ret
jle
cmc
movsb
cld
and
je
or
push
dec
popa
or
lods
loop
aad
push
jmp
xor
push
sub
xchg
xchg
add
dec
pop
mov
ret
mov
insb
in
clc
cmpsb
mov
call
sub
mov
lea
pop
or
test
js
call
jmp
fbld
into
xchg
sub
mov
xor
popf
push
mov
fdivr
es
iret
inc
stos
sbb
daa
mov
test
int3
xchg
and
jl
jae
cmc
pop
cmp
rcll
stos
pop
cmpsl
fadds
jmp
fdivl
dec
loope
sub
mov
out
push
cwtl
and
mov
ss
push
fsubrl
mov
sub
shrl
inc
jne
add
pop
rolb
roll
xor
adc
xor
inc
scas
push
push
data16
popl
inc
xchg
inc
outsb
xor
jmp
cld
loope
mov
mov
lods
mov
int
xor
jmp
mov
repz
iret
lods
call
test
popl
dec
pop
movsb
xchg
mov
test
mov
xor
rorb
push
sub
insb
leave
pop
inc
rolb
mov
sbb
ffreep
xchg
cmp
fcomps
ja
in
xchg
cmp
mov
inc
shlb
stos
enter
testl
mov
stos
es
cmpxchg
insl
sub
cmp
xchg
aaa
mov
lods
es
cmpsb
push
push
add
cmp
enter
mov
xlat
xlat
scas
in
test
daa
shl
cmp
imul
mov
or
clc
stos
jne
lea
lea
call
lahf
jp
ss
outsl
jno
pop
adc
and
push
jg
out
aad
and
mov
inc
adc
scas
test
xor
icebp
icebp
fists
test
push
pusha
jb
outsl
test
push
or
sbb
xor
subl
push
pop
xchg
xchg
rcl
pusha
inc
inc
jo
cmp
add
mov
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
mov
popf
sarb
dec
arpl
cmp
popf
int3
push
jp
mov
mull
mov
push
push
sub
pop
je
push
cltd
sbb
lock
stos
arpl
hlt
hlt
popf
push
and
inc
push
adc
mov
aas
inc
add
adc
fsts
ljmp
out
jne
les
jo
inc
and
xor
sti
xor
out
inc
cmpb
cmp
adcb
sahf
or
cltd
xor
sub
pop
xchg
push
push
aas
fnstcw
out
ja
out
js
sti
pop
adc
stc
xor
shll
or
out
sub
sub
scas
sub
ds
adc
gs
jge
adc
rcr
jecxz
in
adc
cmp
imulb
fidivs
popa
data16
dec
xchg
inc
jg
inc
xchg
dec
int3
mov
pop
in
pop
cmp
sbb
jle
pop
xchg
loop
push
mulb
sub
mov
lret
inc
repz
lret
adc
jle
mov
xor
or
fldenv
jno
rcrb
mov
iret
out
nop
adcb
xorl
imul
jne
enter
mov
mov
jge
mov
pop
sahf
and
sbbl
add
das
push
arpl
push
int3
or
fucom
int
cli
sbb
in
stc
pushf
fists
xchg
jo
or
adc
lea
je
fists
push
int3
add
pop
push
cmp
xor
jbe
test
and
cmp
in
loopne
popf
cld
fidivl
mov
lret
insb
sbb
sub
jns
lea
mov
xchg
cmp
mov
leave
jnp
mov
jae
mov
mov
jl
mov
icebp
mov
icebp
add
mov
mov
pushf
rcr
jge
sarb
es
or
outsl
cli
pop
sti
jecxz
lods
mov
mov
scas
aad
subl
fmulp
cmp
outsl
lcall
flds
xor
adc
sub
fsubr
cvtps2pd
imul
call
lds
jno
jp
lss
dec
jno
inc
mov
xor
in
sub
jae
push
repz
mov
shl
xchg
es
xor
mov
xlat
insl
test
mov
mov
adc
xchg
mov
popa
jae
fs
ljmp
dec
loope
loope
cmp
lret
add
bound
out
aad
jl
mov
loopne
pop
pop
icebp
fisttpl
jp
inc
add
cmp
dec
cltd
xor
xchg
xor
test
cmc
pop
push
xchg
cwtl
pop
xchg
mov
push
dec
jns
mov
decb
add
pop
xor
cmpsb
and
movsl
pop
inc
cmpsb
popa
mov
lea
sub
inc
sbb
ret
push
fldcw
push
ja,pt
push
sbb
dec
mov
lret
or
hlt
test
sub
pushf
out
mov
lahf
add
inc
jp
jb
movsl
mov
push
out
mov
aad
pop
cmpsb
nop
sub
or
mov
lahf
push
cmp
jmp
push
sub
iret
lcall
xchg
mov
mov
jnp
and
lret
repnz
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
mov
xchg
nop
jl
sarb
add
iret
and
stos
push
es
inc
mov
test
loope
mov
pusha
add
pop
push
adc
push
and
or
mov
data16
or
jecxz
xlat
cli
subl
mov
xor
jno
loop
cld
mov
int3
cmc
lret
vminps
push
dec
fdivrp
call
cmc
js
repz
sahf
test
jae
iret
js
jl
dec
xor
leave
xchg
pop
cli
lods
sbb
cmc
sub
loop
dec
les
shlb
ficomps
cmpsl
xchg
xlat
imul
in
popf
int
sub
xchg
mov
fcoms
pop
es
jg
data16
pop
test
jbe
mov
ss
jp
sub
xchg
xchg
push
push
pop
sub
andb
insl
rorl
lahf
insb
test
int
mov
mov
push
pop
sub
ss
and
push
and
lret
add
jg
sub
inc
test
fcomi
mov
icebp
lcall
sbb
jl
iret
ss
scas
decb
and
lcall
into
leave
or
and
lods
rcr
lds
sbb
sub
mov
xchg
ja
bound
mov
int3
adc
sbb
fs
sbb
jmp
jle
rol
imul
lock
pop
rcrl
fbstp
sahf
xchg
mov
xor
dec
pop
or
cmp
jl
mov
dec
mov
clc
xor
mov
daa
push
mov
mov
sbb
sbb
scas
iret
dec
mov
outsl
adc
lods
push
fdivrs
jne
push
inc
dec
cmp
sti
xchg
fisubrs
sarl
pop
xchg
data16
adc
sub
jmp
push
mov
in
cmp
jo
fcmovu
add
inc
cmp
push
dec
inc
cmp
or
inc
mov
add
daa
fnsave
arpl
jae
ret
adc
lock
inc
cmp
jg
mov
pop
inc
push
in
imull
in
xchg
in
push
test
mov
and
test
sbb
test
adc
jns
mov
jne
or
sbb
push
sti
cwtl
inc
and
jns
imul
fildl
mov
stc
loopne
cmp
in
xchg
dec
xchg
add
dec
adc
incl
sbb
daa
mov
lods
mov
flds
into
shr
inc
xchg
fcompl
sbb
jns
je
jae
mov
ret
lods
fstpl
xor
sub
ljmp
ss
cwtl
inc
xchg
mov
xchg
fwait
mov
in
lret
addr16
jmp
pop
fdivr
arpl
imul
int3
mov
xchg
jo
outsl
pop
js
add
pop
adc
loop
out
push
mov
add
lcall
xor
jae
sbb
add
sub
les
arpl
call
rol
je
xrelease
and
popa
dec
mov
pusha
adc
dec
mov
mov
addr16
ficoms
leave
mov
test
lea
jecxz
fsubl
negb
xor
enter
call
xor
add
in
mov
scas
dec
icebp
mov
imul
loope
pushl
jp
imull
cmp
sub
inc
mov
xchg
das
dec
add
lds
push
jp
stos
inc
outsl
adc
xor
in
or
add
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
dec
jg
inc
mov
dec
pop
xor
add
ret
xor
repz
ret
sub
stc
push
xor
aaa
das
and
lcall
fstpt
int
mov
addr16
das
das
cwtl
negl
out
cmp
add
mov
xchg
sbb
and
mov
mov
ja
test
into
mov
and
insl
mov
xchg
fcompl
lods
lock
or
out
stos
inc
clc
std
push
out
movsb
movsl
mov
addl
xchg
fwait
jbe
mov
dec
jno
push
dec
out
scas
jl
in
jb
sub
xchg
sbb
dec
ljmp
les
adc
and
or
or
into
aaa
es
inc
push
jle
jnp
jl
cmpsl
push
mov
inc
xchg
test
cwtl
push
push
in
outsl
outsb
pusha
test
xor
sbb
mov
cwtl
sbb
dec
dec
sub
cli
pop
push
push
push
ljmp
sbb
bound
xchg
scas
mov
loopne
add
inc
cmp
sub
icebp
out
fildll
xchg
adc
inc
fwait
test
aam
mov
cltd
popf
or
lret
out
cmp
or
add
xchg
lea
imul
pop
outsb
mov
cmp
jne
pushf
fidivs
sti
and
clc
test
sbb
lock
insb
sub
push
mov
jbe
pop
mov
scas
xchg
aam
ret
mov
lods
das
jge
xor
sbb
shrb
add
or
jge
rcrb
xchg
and
pop
test
mov
push
inc
and
mov
mov
jns
or
inc
mov
jo
std
in
adc
les
jne
cmp
lods
add
pop
mov
add
hlt
jnp
leave
jbe
pop
sahf
xchg
mov
mov
xor
dec
push
push
pop
push
int
dec
out
push
pop
clc
call
daa
lock
pop
out
dec
mov
stos
jmp
lcall
out
adc
dec
inc
ja
xor
xor
sbb
clc
dec
iret
aas
jecxz
lea
lcall
cltd
mov
or
mov
inc
mov
fsubrs
in
mov
push
ljmp
xchg
outsl
push
jecxz
inc
ret
mov
push
xlat
sti
lods
xor
je
mov
sbb
xchg
mov
push
mov
or
idiv
stos
mov
adc
sti
cmp
dec
movsl
mov
pop
sub
mov
scas
imul
stos
lods
mov
sub
mov
stc
bound
sub
push
sti
ret
sbb
pop
fcmovnu
push
sti
push
pop
sbb
add
pop
call
arpl
cli
loope
adc
sahf
sbb
out
fadds
add
adc
inc
fstps
fmuls
push
mov
fwait
cmpb
call
or
inc
out
or
add
jno
pop
loopne
sbb
sub
mov
pop
cmp
jne
lahf
lret
dec
or
mov
imul
xchg
fs
push
xlat
push
mov
push
fstps
dec
test
shl
pop
xchg
out
push
mov
cli
sub
pop
in
int3
arpl
push
jge
sub
push
push
inc
mov
arpl
or
lret
jl
jb
dec
sbb
test
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
nop
lcall
dec
les
fstps
in
rcr
popf
sbb
psubd
dec
into
in
push
mov
cmc
dec
inc
and
ss
pop
fsubs
aaa
ficompl
mov
sbb
push
mov
sub
jns
rcl
mov
ds
jnp
add
pop
inc
sbb
add
lahf
popf
push
xchg
enter
mov
cwtl
jb
daa
mov
dec
pop
inc
mov
xor
xchg
call
and
leave
xorl
dec
fs
jle
outsb
inc
setbe
cld
mov
or
xor
es
jmp
or
mov
and
fsubrl
loope
lds
xlat
jne
scas
cmp
and
or
adc
dec
int
into
icebp
jle
jbe
mov
push
sub
mov
ret
out
xchg
cs
mov
out
xor
xchg
add
push
out
xor
out
dec
mov
out
iret
xchg
pop
in
xchg
mov
sub
into
pop
cmpsb
xor
adc
int
fsubp
xchg
or
outsl
cmp
inc
out
insl
mov
test
sbbl
xchg
pop
add
add
aad
adc
movw
stos
cld
mov
ljmp
mov
andl
jns
cmp
nop
adc
xor
ja
in
pop
scas
mov
roll
or
aas
aam
cmp
scas
mov
xor
cmpsl
loopne
icebp
adc
inc
pop
cmp
iret
mov
jno
lcall
int
push
inc
leave
adc
push
mov
mov
inc
fstpl
xor
cs
mov
dec
rorl
pop
jecxz
or
repz
xchg
adc
stc
shrb
js
xor
lods
out
and
out
sub
repz
mov
xor
dec
cli
lahf
out
jae
cmp
sub
test
adc
add
je
push
bsf
fcmovne
int3
or
es
pop
jp
ret
xchg
arpl
and
cmp
push
cmpsl
add
push
insl
and
ret
imul
mov
pushf
int3
add
mov
dec
sti
mov
mov
push
mov
int3
rcr
xor
sbb
stos
aaa
push
inc
sub
insl
jo
dec
icebp
imul
mov
subb
stc
mov
aam
mov
jecxz
or
lds
and
enter
add
clc
add
shrd
or
cltd
jg
cld
mov
shlb
jnp
jle
inc
ret
add
sbb
repz
mov
mov
mov
jae
shll
pushf
jbe
fs
fwait
movb
aas
es
imul
out
or
xchg
jmp
mov
movb
inc
jb
divb
addr16
sbb
mov
and
sub
pop
cwtl
mov
lods
pop
dec
and
mov
sti
add
std
jns
scas
and
daa
es
xchg
xchg
mov
push
loopne
xchg
jle
test
in
pop
dec
js
mov
mov
mov
lock
add
aas
int
cltd
rcrb
adc
stos
imul
aad
mov
and
dec
movsb
inc
push
in
repz
pop
out
jae
out
dec
add
les
sub
or
add
stos
mov
jne
dec
and
sbb
xchg
adc
addr16
or
jl
push
cwtl
and
push
pushf
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
popf
push
mov
dec
les
ret
cmc
sub
push
call
pop
nop
arpl
lock
rcr
add
sub
std
xchg
dec
test
dec
addr16
and
lock
mov
mov
cmp
sti
insl
sub
shll
and
mov
ret
int3
insb
cmpsl
xchg
sub
fisttps
dec
xchg
dec
mov
fcmovnbe
or
add
or
sub
enter
das
lahf
push
pop
push
sbbb
lds
mov
enter
pushf
dec
cmp
mov
mov
mov
out
xchg
enter
sub
dec
xchg
data16
cli
jns
roll
push
out
cs
daa
xor
ds
inc
jae
add
inc
dec
push
cmc
clc
push
nop
insb
aad
xor
jmp
xor
test
lods
outsb
or
dec
jge
fcmovbe
sbb
jecxz
sub
clc
enter
rcr
mov
or
push
js
push
cmp
pop
or
push
scas
cli
nop
jle
mov
pushf
dec
clc
inc
mov
shlb
jb
push
mov
cmpl
and
xchg
in
je
enter
mov
mov
jbe
xor
sub
xor
cmpsl
adc
jge
and
mov
aad
aas
pop
mov
mov
pop
icebp
insb
lahf
stos
test
xor
mov
mov
mov
inc
pushf
ljmp
xor
pop
jg
jns
lret
or
mov
mov
mov
sbb
and
in
lret
movsb
mov
negl
dec
das
es
inc
adc
lods
sub
idiv
outsb
dec
popa
out
test
sub
push
arpl
es
dec
test
adc
into
push
adc
aaa
xor
xor
clc
inc
fadds
cmp
loope
xor
adc
call
loope
cwtl
mov
cwtl
jo
sub
fwait
push
fmuls
imul
pop
aas
push
push
add
loop
and
incb
lcall
and
xor
hlt
jnp
jp
sbb
xchg
mov
cmpsb
cltd
and
fstl
shrb
rcrb
loopne
fbstp
push
inc
mov
xchg
lret
rcl
xor
das
stc
mov
adc
cmpnleps
xor
loop
ficompl
idiv
cmc
push
cs
ds
das
sbb
adc
and
in
jmp
cmp
cmpsl
lret
xor
addr16
xchg
popl
aad
xlat
xchg
mov
adc
xchg
and
push
jge
gs
cmp
mov
lds
sti
nop
pushf
arpl
fimull
dec
ret
dec
and
clc
adc
inc
stos
mov
cmpsl
and
push
or
jo
jae
lods
loope
adc
and
shlb
jnp
mul
or
xor
pop
fdivl
mov
repz
in
add
aaa
push
sbb
sub
dec
jl
enter
scas
xlat
mov
and
ficoml
xor
push
aam
ficomps
push
dec
enter
stos
sbb
test
add
jl
stos
mov
adc
jecxz
out
int
mov
mov
pop
mov
insb
pop
jle
arpl
call
pushf
outsb
mov
cli
fadds
xor
jp
cli
jmp
adc
cmp
or
pushf
test
adc
int
cli
aas
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
divb
movsb
lods
rol
dec
les
xchg
cmc
hlt
or
add
and
push
dec
test
in
push
push
sub
jg,pt
lds
pushf
pop
inc
dec
flds
cmp
faddl
je
xor
sbb
pop
adc
jg
and
stos
cmp
bound
fnstsw
adc
test
inc
and
add
adc
push
push
add
or
inc
aaa
sub
mov
pusha
xchg
icebp
mov
adc
xor
sub
cli
jno
dec
int3
aam
cmp
jp
fst
mov
fstl
out
inc
push
cmp
jecxz
sub
les
xchg
mov
cwtl
rol
xchg
sti
push
xor
jbe
aas
mov
dec
in
lret
or
sahf
lret
cmp
in
push
arpl
adc
test
xlat
in
jmp
es
pop
adc
int
sbbb
sbb
jecxz
imul
sub
jg
loop
jg
lea
cmp
cmp
and
mov
sub
push
mov
cld
inc
mov
mov
push
cmp
push
pop
ljmp
test
adc
cmc
sbb
push
loope
je
add
out
les
jb
daa
add
mov
inc
push
push
sub
scas
out
cwtl
jne
xor
into
bound
and
jmp
jb
scas
push
stos
movsb
aad
xchg
fidivs
je
mov
add
ss
mov
xchg
jmp
inc
call
pop
or
ljmp
add
subl
cltd
in
add
push
and
out
cltd
mov
pusha
imul
cmpsl
cld
jle
shll
push
je
sub
inc
fcmovnbe
xor
bnd
ss
add
push
or
xor
adc
and
aam
or
push
push
je
outsl
sub
adcb
xor
sbb
inc
pushf
stos
fwait
mov
jmp
int3
xor
mov
cmp
jae
add
pop
sbb
cli
push
iret
inc
adc
xchg
and
mov
lods
pop
into
inc
and
add
leave
dec
shlb
int
xchg
adc
popa
xor
or
inc
push
aaa
notl
int
shr
in
hlt
sub
mov
mov
cltd
das
jno
xor
and
add
xchg
fists
scas
mov
cld
jecxz
aad
outsl
in
mov
cmp
sahf
je
lcall
mov
int
dec
adc
data16
cmpsl
jl
out
pusha
pop
int
cmpl
das
pop
sub
das
mov
push
outsl
pop
mov
sub
test
pop
cmpsl
faddp
sub
pinsrw
dec
push
in
dec
lea
not
fnstcw
negb
or
adc
sarl
jno
inc
jg
lods
mov
mov
mov
sbb
clc
andb
sbb
jb
adc
inc
sbb
ljmp
mov
stos
insb
add
xchg
xlat
sub
xor
loopne
lret
lea
push
dec
sub
popf
lea
aaa
mov
leave
dec
leave
mov
mov
cwtl
xlat
imul
jnp
sbb
out
cs
jp
icebp
ficomps
inc
imul
pop
test
pop
les
andb
sub
rclb
mov
icebp
adc
mov
inc
aad
sarb
lret
xorl
and
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
test
cmp
sarb
xor
cmpsl
lret
mov
mov
test
scas
dec
test
adc
lahf
ret
gs
jb
addr16
loopne
ret
mov
and
sbb
and
cmp
loope
out
in
add
jns
ja
test
mul
lds
imul
cld
cmp
movsl
mov
icebp
xchg
push
int
and
mov
push
jnp
xor
js
out
shlb
rol
mov
sbb
or
inc
pushf
xchg
outsb
mov
mov
fdivrs
pop
push
inc
mov
xor
jo
pop
xor
mov
insb
jg
sahf
mov
pop
fidivs
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
fsubl
add
gs
arpl
push
outsl
inc
jne
jae
jb
fs
add
add
add
and
inc
add
sub
loopne
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
nop
and
inc
add
inc
add
daa
inc
add
jle
add
inc
add
sub
test
inc
add
sub
in
daa
inc
add
push
movsl
scas
or
inc
add
inc
add
add
inc
add
daa
inc
add
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
adc
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
test
inc
add
push
movsl
cmp
xlat
movsl
dec
add
andb
addl
add
hlt
stc
sarb
inc
pop
jg
add
add
jle
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
mov
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
or
add
test
adc
test
sbb
test
and
test
sub
test
xor
test
cmp
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
add
inc
add
inc
add
inc
add
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
lds
add
test
roll
add
test
fldl
add
test
jmp
test
icebp
test
cmc
test
stc
test
std
test
add
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
inc
add
inc
add
inc
add
inc
add
add
sub
mov
add
add
inc
xchg
add
add
add
add
add
add
add
adc
add
and
add
add
add
adc
add
mov
add
add
pop
mov
add
add
jbe
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
mov
add
add
pop
mov
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
pushf
mov
add
add
loop
add
lock
add
add
adc
add
mov
add
mov
add
add
pusha
mov
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
inc
lea
add
add
lea
add
add
mov
add
movsb
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
xor
add
inc
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
and
add
push
popl
add
add
je
add
mov
add
mov
add
lret
add
popl
add
popl
add
popl
add
nop
add
sbb
add
cmp
add
dec
nop
add
pop
nop
add
jb
add
mov
add
mov
add
enter
ficoml
add
cld
nop
add
or
add
sbb
add
ds
add
dec
xchg
add
pop
xchg
add
jo
add
jle
add
mov
add
scas
xchg
add
rclb
add
xchg
add
lock
add
cld
xchg
add
or
add
sub
add
dec
xchg
add
pop
xchg
add
push
xchg
add
add
add
xchg
xchg
add
movsb
xchg
add
mov
add
into
xchg
add
loopne
add
repnz
add
or
add
sbb
add
es
add
cmp
add
pusha
xchg
add
jo
add
adcb
add
add
mov
xchg
add
out
add
cld
xchg
add
adc
add
xchg
add
inc
xchg
add
push
xchg
add
jb
add
mov
add
xchg
add
ficoml
add
xchg
add
adc
add
xor
add
push
xchg
add
xchg
add
jl
add
mov
add
lods
xchg
add
mov
xchg
add
fcoml
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
jg
add
dec
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
