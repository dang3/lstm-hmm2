push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
fstl
lret
jl
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
in
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
out
sub
loopne
xor
cmp
cmc
shl
loop
cmp
mov
lret
call
loopne
shll
out
sarl
aaa
icebp
repz
cmp
cmp
loopne
hlt
incl
xchg
in
mov
shl
mov
aaa
out
into
in
in
iret
fdivp
stc
repnz
xlat
in
or
or
loope
jecxz
in
out
xor
out
shl
lret
cmp
sbb
aam
in
icebp
jmp
lock
ss
aam
cli
cli
repnz
int3
ljmp
ret
in
xchg
loop
shr
lret
call
stc
div
jmp
int3
jmp
cmp
and
out
mov
test
cs
lret
sti
enter
loop
roll
aam
jmp
jmp
ret
jecxz
int3
into
cmp
in
jmp
int3
cmp
cli
mov
cmp
or
leave
int
out
in
lret
aaa
call
xor
aam
faddp
cmp
aad
call
out
ret
out
lock
cmp
repnz
loop
repnz
fdivrp
aad
leave
addl
int
out
jmp
cmp
shr
cli
cld
loop
int
mov
in
mov
adc
iret
repnz
ss
hlt
lret
aam
shr
sti
fdivrp
rcl
aam
fmul
enter
aam
xor
fxch
xor
lock
in
and
fst
ds
fcmovu
test
mov
loop
out
and
test
ljmp
ret
int3
in
in
test
add
fadds
out
aam
into
fstp
repnz
std
rcl
adc
ret
jmp
int3
enter
lock
in
leave
loop
cmp
ljmp
loope
rcr
fsub
in
ds
in
repz
fmull
int
clc
in
repz
cmp
fadd
clc
stc
clc
std
leave
test
in
into
iret
repz
aam
xor
hlt
sti
cmp
test
cld
call
icebp
xchg
cld
out
lock
clc
icebp
cmc
repz
cmp
stc
std
aad
xlat
rolb
xchg
mov
lret
into
cmp
cmp
lock
in
shr
lret
xchg
xchg
sti
iret
addl
iret
xlat
xor
into
rcl
int3
cmp
test
fdiv
lret
xchg
shr
mov
aam
fadd
int3
sti
repnz
fcmovnu
icebp
cli
test
rol
loope
leave
out
xor
rol
into
ljmp
cld
into
int
ds
sti
fucom
shl
out
cli
or
xchg
out
ret
les
fucomp
aas
test
cmp
clc
fadd
test
xchg
in
mov
xor
clc
xor
sar
into
shl
aaa
cmp
hlt
cld
cmp
test
iret
decl
aaa
cmp
aam
cli
out
cld
clc
cmp
loop
aam
rcr
std
popl
ljmp
jmp
lret
fucomp
sti
fcmovnbe
rcr
fdivr
rcl
cmp
leave
out
repnz
int
xor
enter
out
loop
in
sti
idiv
call
xlat
in
jmp
jmp
in
in
hlt
clc
rol
out
int
idivb
lock
enter
test
test
xor
lds
fstpt
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
bound
jl
add
aam
ror
sar
in
in
test
cmp
fsub
loop
cld
loopne
fdivrp
out
sub
ror
aad
cmp
call
sbb
test
test
lock
sti
add
jecxz
in
loop
loopne
icebp
repz
ss
in
aaa
hlt
sbb
aad
hlt
div
call
ljmp
loopne,pt
sub
cmp
shl
loopne
out
fistpll
cmc
cld
lock
mov
push
mov
nop
lock
shrb
divl
fiaddl
shr
sarl
mov
iret
or
hlt
shl
cmp
int3
stc
cli
int
sar
loope
fcomip
mov
mov
mov
cld
test
cld
aad
xor
lock
das
cmp
int3
fdiv
ret
ret
cmp
leave
call
stc
cld
lret
aam
lds
enter
cmc
iret
xlat
icebp
clc
out
repz
out
fadds
sub
aaa
fmul
aad
cmp
in
cmp
imul
icebp
fdiv
addl
test
xchg
repz
out
xor
in
in
icebp
int
cmp
cmp
out
test
xchg
shl
out
enter
xlat
cmp
ds
fcmovb
loopne
loopne
lret
call
icebp
jmp
enter
rcl
test
fdivr
fisttpll
test
out
xchg
cld
icebp
xor
lret
enter
out
std
rcr
div
ret
ljmp
or
imul
aaa
repnz
repnz
ds
fiaddl
cli
mov
decb
lock
fnsave
enter
aas
ret
rcl
test
out
loope
xchg
lret
out
jmp
loopne
cmp
xor
out
hlt
fcmovnu
repz
std
repz
out
loopne
enter
std
out
in
ss
cmp
rcl
cmp
aad
shr
fnstsw
not
ret
stc
cli
out
xabort
std
xchg
jmp
lock
call
ss
out
jecxz
aam
mov
std
fdiv
lret
in
mov
xor
in
enter
ss
fndisi(8087
aas
icebp
into
imul
ret
ljmp
jecxz
mov
cmc
imul
leave
icebp
fsubrp
enter
ret
sti
push
ljmp
out
in
orl
fcom
les
dec
ds
rolb
imul
nop
out
shl
leave
xor
repz
rcr
cmc
out
ret
mov
loope
jmp
mov
addb
call
sti
shl
loopne
clc
aad
cmc
cmp
int3
in
loopne
xor
call
out
xor
repz
aas
rcr
fildl
clc
test
xlat
mov
mov
call
ljmp
stc
cli
loopne
ret
aam
ret
clc
in
lret
fildl
xchg
fucompp
xchg
ret
jmp
aam
repnz
int
in
xor
lock
fcmovnu
lret
in
xchg
repnz
shl
fnsave
cmp
cli
ret
in
jmp
cmp
out
out
fcmovnu
mul
iret
shl
addb
lret
test
std
call
iret
sti
xor
ss
fdivrs
fisttps
fcomp
loop
into
dec
or
hlt
repnz
div
out
cmp
clc
test
fsub
push
faddp
cli
xchg
call
ret
sar
xor
cmc
fcmovbe
in
rol
ds
cmc
jecxz
aad
idivb
in
sbb
jmp
fld1
hlt
cs
enter
shr
fcmovb
and
cli
cmp
ljmp
in
call
loope
aam
test
add
loopne
ljmp
iret
sti
les
jmp
out
aam
xlat
int
fiadds
ret
jmp
loopne
xchg
xchg
xchg
iret
hlt
lock
sti
ret
repz
cmp
lock
incl
ljmp
xchg
xor
out
rcr
hlt
cmp
incl
fadd
mov
or
ljmp
hlt
leave
divl
fnstcw
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
leave
iret
inc
sub
addb
jl
fmulp
aam
shr
fldl
xchg
mov
enter
out
sub
lret
xor
out
fninit
xlat
test
lock
faddp
imul
aam
lea
fiadds
jecxz
loop
ss
jmp
roll
lock
xor
ljmp
icebp
jmp
int
dec
ror
test
mul
cmp
mov
xchg
out
xor
fucomp
hlt
ljmp
not
mov
hlt
jecxz
stc
fstl
aam
loop
sub
cmp
fucomi
sbb
stc
loope
clc
clc
jmp
out
ljmp
ror
clc
shl
lock
cli
out
ljmp
lds
test
xchg
rclb
jmp
jmp
aad
fsubr
int
repz
test
loope
clc
std
push
adc
ljmp
shl
incl
fimuls
test
xor
leave
enter
cmp
aad
ret
hlt
loopne
out
mov
orb
jmp
xlat
loopne
test
fnstenv
clc
lock
ret
out
rcr
xlat
and
fisttpll
ds
loopne
iret
clc
into
cmp
xlat
cmp
fcom
cli
test
out
mul
cli
repz
xchg
loopne
xor
stc
int3
iret
fcmovbe
int3
cmp
cmp
fdivr
aad
sar
xchg
mov
xchg
nop
repz
lock
xor
rcr
test
repnz
addl
test
sub
lret
ror
cmp
leave
stc
test
lret
lret
lret
xchg
jmp
in
cmp
int3
ss
loope
test
clc
std
rcr
loopne
movb
lret
repz
aam
icebp
out
out
cmp
in
fcomp
les
aam
dec
call
fstl
icebp
iret
cmp
out
ljmp
bnd
fisttps
jecxz
int3
div
in
idivl
out
iret
in
loope
repz
sbb
xor
mov
mov
in
div
cmp
int3
xor
cmpb
in
jecxz
test
ret
call
sti
repnz
sub
call
rcl
sti
ror
cmc
cli
loopne
rcr
in
rorb
out
clc
in
jmp
fcmovnu
repz
iret
xor
cmp
cmp
in
test
fimull
xor
lock
cmp
cmp
iret
cmp
in
fadd
rol
xchg
mov
neg
rcl
loop
ss
cld
sar
cld
dec
in
iret
iret
ret
fsub
sti
fucomi
fxch
sub
out
stc
xor
repnz
in
sar
fcmovnu
aam
std
in
not
shl
flds
call
loopne
jecxz
stc
into
cmp
fld
rol
ret
in
cmpb
aam
cmp
int3
mov
ljmp
out
ret
enter
cmp
test
std
clc
aad
out
lret
roll
xor
leave
repnz
stc
xor
and
into
in
test
mov
mov
jecxz
xor
test
std
shl
in
out
cmp
jmp
mov
icebp
cmp
xor
aas
in
cmp
lock
clc
rcl
cld
stc
jmp
test
cld
int3
out
rcl
out
leave
cli
cmp
idiv
sti
fcomp
rcl
xchg
mov
lret
cli
mov
mov
xchg
repnz
test
jmp
lock
out
sar
xchg
test
enter
das
xor
ret
fcom
into
clc
cld
aad
fadd
icebp
out
int
mov
call
xor
ss
enter
fldln2
not
faddl
neg
leave
vpsllw
out
stc
bnd
out
sti
clc
cli
xlat
rcl
out
icebp
aas
testl
addl
not
jmp
out
ljmp
mov
loopne
aam
xlat
enter
xor
in
fstp
clc
cmp
aas
repz
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
nop
std
xchg
add
cld
mul
enter
mov
lret
jmp
rol
fdivl
testl
in
out
ljmp
ror
enter
fadd
cli
ljmp
rol
ret
in
lret
mov
int3
lock
xor
cld
cli
shr
rcl
xor
lret
out
mov
iret
xor
icebp
int
out
shl
lret
aas
ret
in
fcomp
fcomp
call
fdivrp
call
in
std
repnz
out
lock
faddl
cld
out
leave
adcl
in
ss
not
int
iret
std
test
cli
and
xchg
fsubr
call
repz
ror
stc
repz
std
cmc
sar
icebp
aad
aam
jmp
jecxz
lret
int3
iret
mov
ljmp
clc
fst
lret
stc
clc
fmul
std
addb
out
jmp
xchg
repz
into
shl
fxch
std
fnstcw
lret
in
cmp
shl
fcomp
cmp
aad
cli
int3
std
in
lret
fcoml
jmp
lret
in
cmp
ss
clc
aad
rcl
rcl
repnz
test
std
mov
out
idiv
shll
idivb
cmp
out
loope
icebp
ret
cld
movb
xor
xchg
into
imul
lret
out
cmc
idiv
cli
std
clc
cmp
in
lock
lock
jecxz
lret
in
roll
jecxz
ror
cli
aad
jmp
sti
cmp
test
add
test
lret
mov
and
ret
xor
into
into
cmp
aaa
out
aam
cmc
cmpl
cli
cli
out
xchg
lret
shl
call
fdivs
repz
fcomi
clc
xor
fadds
out
mov
lret
cs
rcl
aad
in
not
aam
hlt
cmp
xlat
fcmovbe
fdivrp
mov
icebp
enter
xlat
fxtract
fcmovnu
in
jmp
out
fdivrl
cmc
clc
fsubp
jecxz
loop
test
repz
in
ljmp
loope
cmc
mov
lock
test
xchg
std
jecxz
cs
xor
aas
rcl
cmpl
in
loop
clc
int
sub
in
nop
fildll
fdivs
cmp
ss
fildl
xchg
jmp
loope
cli
loop
mov
std
in
out
lock
in
idiv
stc
xor
cmp
test
xchg
cmc
ret
fsub
int
mov
test
call
in
ss
iret
jecxz
clc
shl
ret
in
in
fucomip
iret
in
xchg
jmp
loop
stc
int
repnz
xlat
into
cld
in
int3
fcmovnu
cld
sti
xchg
test
int3
lret
stc
loopne
and
vpsraw
enter
cmp
rcl
iret
and
cmp
loop
enter
sbb
in
ljmp
in
rcl
int3
fcomp
call
xchg
mov
subb
stc
shl
hlt
clc
aas
aam
rcl
cli
repz
fcmovnbe
fucom
std
lret
lock
aaa
ret
fcomi
call
in
cmc
test
ret
in
enter
repz
xchg
xor
xor
enter
sti
fucom
sub
enter
xchg
aas
cmc
fdivs
lret
fdivrs
div
xor
fmulp
jecxz
test
ljmp
ss
cmp
cmp
xlat
into
icebp
shll
icebp
loop
repz
repnz
xchg
clc
cmp
out
jmp
fdivr
fxch
xor
fcomi
out
xor
lock
idivl
cli
rol
jecxz
mov
int
xchg
icebp
hlt
sub
sub
fcom
cli
stc
out
xorl
cmp
test
in
jecxz
ret
out
xlat
ss
int3
xor
cmc
aas
out
stc
sub
ret
lock
xchg
out
ror
jmp
ret
aaa
in
call
lret
aam
ds
xchg
out
out
out
ficoms
rcl
fdivs
fucomp
fyl2xp1
xor
sar
fcmovnbe
cmp
lret
mov
mov
shr
sub
out
jmp
sbb
cmc
loope
sar
fcomip
test
xor
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
ret
fistl
jl
addb
jl
int3
ljmp
fldpi
rcl
fadd
repnz
clc
aad
leave
and
hlt
loop
out
mov
lret
repz
icebp
ds
icebp
ret
hlt
call
cld
out
adcl
in
out
leave
leave
test
icebp
icebp
cld
xlat
mov
in
decb
sub
icebp
sti
out
fdivrl
loope
ret
in
stc
icebp
shl
hlt
jecxz
fldl
icebp
xchg
xchg
loope
out
idiv
int
fucompp
repz
cld
loop
loop
rcr
incl
loopne
mov
in
icebp
out
xor
cmp
fidivl
cmp
cmp
std
mov
xlat
mov
out
in
loopne
hlt
xor
cmp
aaa
ss
iret
in
loopne
lret
out
clc
in
icebp
repz
jecxz
shl
xor
out
ljmp
test
jmp
fmul
xchg
mov
lret
cmc
ljmp
cmp
cmp
xor
and
lret
fadds
in
in
stc
rol
cmc
xor
cmp
in
ds
fucomi
fsub
leave
shr
fisttps
call
neg
ds
loope
jmp
xlat
int
mov
jmp
shr
cmc
stc
out
cli
in
cli
shl
aas
shl
sti
cli
jmp
xlat
jmp
call
iret
lret
xor
repz
xor
lock
aas
lret
in
fst
xacquire
test
shl
ret
sti
enter
in
int
fcmovb
aam
rcl
ljmp
iret
in
xchg
xchg
ror
out
idivb
out
ljmp
lock
enter
decb
jmp
aad
cmc
leave
into
ljmp
lock
leave
and
sbb
jecxz
in
xor
test
clc
xor
jmp
sar
std
fstpt
std
add
enter
loope
out
enter
xor
shll
xor
jmp
in
in
cmpl
fprem1
test
fimull
nop
jmp
xor
xor
clc
hlt
ds
testl
fsubr
mov
sub
in
jmp
cmp
fsubp
repz
mov
fmul
enter
fcmovnu
aad
out
shl
cli
int3
neg
out
rol
shl
in
testb
xchg
xlat
out
iret
ljmp
aas
stc
cmc
into
cmp
and
icebp
lret
addl
xor
int3
sbb
ret
shl
jecxz
add
in
xchg
std
in
shl
call
fld1
clc
cmp
div
int3
xlat
rol
div
fdiv
addb
out
ljmp
cmp
into
fdiv
xlat
in
cmp
rcr
test
and
shrb
call
sarb
lret
xlat
out
fdivr
test
fiadds
mov
out
int
in
stc
out
lret
sarb
sti
rcr
rcl
fcos
fiadds
int
sbb
in
iret
out
aaa
test
ljmp
repz
cmp
clc
jecxz
idiv
iret
int3
loope
into
out
call
enter
into
into
sar
repz
std
mov
sti
adcb
repz
add
stc
xlat
aad
ret
cld
fadds
test
in
xor
in
aam
bnd
jecxz
xlat
iret
in
repnz
jmp
popl
out
into
xor
cmc
int3
cli
aad
cmp
sti
fdiv
loop
cmp
fucomi
jmp
mov
cld
lret
imul
loop
out
rol
out
jmp
out
sti
cli
call
fiadds
dec
repz
sarl
out
fdivrp
hlt
shl
in
fcmovbe
neg
out
cmc
mov
fcmovne
loope
mov
loopne
int
hlt
in
hlt
xlat
ljmp
test
loope
jmp
int3
test
enter
xchg
shrb
lret
fnstcw
cli
cmp
jmp
test
out
leave
xchg
hlt
call
mov
mov
mov
mov
jmp
aam
into
lret
rcr
fstp
les
rcrl
addb
jl
mov
out
int
addb
add
out
stc
and
lret
lea
ret
aam
int
fcmovnu
fsubrp
cmp
ds
in
enter
lret
mov
shll
jmp
out
out
adc
shl
add
fadds
or
and
repz
jecxz
call
fcomip
fcmovnu
cmp
push
enter
dec
cld
rorb
ret
jmp
cmp
cmp
loop
iret
shl
shl
in
ljmp
in
ret
cs
icebp
cli
fidivl
idiv
jmp
cmp
cld
out
les
out
cld
lret
xor
cmc
rcl
icebp
std
std
aad
fchs
out
stc
in
jecxz
call
lret
loopne
icebp
loopne
sub
in
leave
lret
in
stc
aas
cmp
repz
aam
clc
fimuls
mov
sub
sub
clc
xor
shl
ds
out
cmp
std
fiadds
xchg
rcl
shr
xor
xor
out
rol
in
fdivr
repz
rcr
fimull
shr
shrl
out
in
into
sub
fxch
cmp
out
mov
std
jecxz
test
in
in
stc
leave
in
aad
repz
ss
xor
in
std
neg
out
fcmovnu
out
lret
mov
rolb
lock
out
cli
cmp
jmp
loopne
cmc
ret
fadd
fcmovu
leave
xchg
out
loopne
out
int3
aam
fldl
adc
lret
enter
cld
in
xchg
mov
lret
in
cmp
cli
out
cli
repnz
loopne
out
fmuls
jecxz
sub
ljmp
out
roll
incl
test
out
loop
lock
aaa
int3
shl
into
cld
stc
aad
loopne,pt
loope
out
in
aam
movl
rcl
neg
cmp
stc
xor
iret
fcomp
ret
aam
mov
enter
faddl
out
xor
cmc
ljmp
in
ftst
hlt
in
ljmp
rcl
clc
cmp
loope
cmp
cli
shll
mul
xchg
jmp
incl
lea
imul
cmp
xor
cmp
aas
loope
ret
leave
or
sti
cmp
out
div
ret
sub
cmp
cmp
lret
iret
rcl
xchg
imul
mov
fmull
hlt
out
jecxz
aaa
icebp
in
aad
aas
fdiv
add
aad
aam
fimuls
out
test
repnz
aad
lret
repz
cmp
stc
rol
out
ljmp
rcr
cld
and
mov
in
neg
cmc
roll
ds
or
loopne
jmp
fdivrp
iret
not
in
clc
cmp
loope
ror
out
fdivr
mov
sub
sbb
jmp
xor
lret
lds
leave
sar
ljmp
fucomip
in
inc
lret
fucom
fsubp
xchg
fsubr
int3
out
aam
sti
out
cs
loope
stc
cmc
int3
add
ljmp
cli
in
icebp
int3
in
xor
loop
xor
sar
repz
ret
sar
addl
repz
in
int3
iret
xor
clc
fnstenv
aas
out
xlat
hlt
out
sar
loop
repnz
iret
lret
aad
out
cmp
out
sarb
ljmp
neg
leave
in
imul
lret
fisttpl
fisubrs
xor
repnz
out
fst
xlat
in
cmp
idiv
cmc
loope
sub
fucomi
int3
xchg
lock
jmp
ror
into
lock
lret
repnz
repz
repnz
faddp
int
enter
xchg
xor
ljmp
jmp
cmp
jecxz,pt
cli
rolb
ljmp
stc
out
lret
call
jmp
in
in
ljmp
shl
xchg
xlat
das
icebp
call
in
fsubp
jmp
in
iret
loope
std
test
add
faddl
out
out
stc
xor
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
push
mov
jl
add
sti
xor
out
cmp
int
aad
fdivrp
fdivrp
xchg
loop
out
mov
cld
mul
icebp
lret
cmc
loop
xlat
fiadds
out
repz
sti
ret
out
into
test
or
sti
std
std
out
ror
in
add
stc
loop
test
out
cmp
repz
int3
int
fsub
cld
loope
div
adc
repnz
mov
leave
in
lret
icebp
int
into
mov
sub
xor
ljmp
out
cmp
out
aad
testb
lock
loope
xor
cli
cmp
fcmovbe
fcmove
in
lds
mov
mov
and
lock
loopne
shl
ror
ror
call
out
loop
fidivrs
loope
fisttpl
xchg
xchg
jmp
lret
iret
xor
lock
cmp
cmp
cli
cld
ds
in
loop
fcoml
icebp
xor
xlat
fmul
cmp
aam
cmp
repnz
stc
aad
std
xchg
in
cld
mov
int3
jecxz
in
ret
xor
repz
fdiv
in
test
aam
jmp
fcmove
xor
fsubrp
shr
in
xor
ret
out
cmp
aam
icebp
in
shl
mov
test
repz
leave
hlt
cmp
enter
sti
icebp
fadds
xlat
mul
xchg
faddl
in
rcl
ljmp
fsincos
lret
stc
shl
in
in
filds
in
test
rcl
xor
cmp
cmp
out
out
rcr
in
fisttpl
xchg
jecxz
shr
xor
iret
cli
repz
iret
repz
clc
rolb
lret
cli
out
sbb
ss
lret
clc
aas
fsin
fdivrl
stc
mov
fsubr
xchg
fstp
enter
rol
cmc
xlat
loop
clc
aas
ds
clc
test
in
fimuls
call
in
in
cmc
xor
ror
lock
test
jecxz
ret
cld
mov
xchg
shl
sti
jmp
fstpt
in
cmc
fcmovu
ret
out
lock
loope
loope
jecxz
xchg
in
repnz
int3
cmc
lret
leave
cmc
aad
stc
xor
vpaddq
test
leave
cmp
mov
lret
iret
loopne
in
fmul
in
aam
int3
in
std
cmp
lock
jmp
call
xchg
loopne
into
aas
sub
out
out
in
enter
repz
aad
repz
fcompp
lret
fsub
iret
mov
nop
loope
shrl
in
sti
aam
sti
hlt
shr
cld
cli
int3
not
stc
test
stc
in
cld
rolb
ljmp
cmp
rcr
in
sti
rolb
cli
mov
iret
ljmp
into
into
xor
ljmp
cmp
stc
lret
loope
in
xchg
call
enter
lds
lret
cld
loopne
xlat
aas
aas
cmp
fistpll
leave
leave
aam
aam
mov
xchg
shl
repz
fldln2
repz
imul
jmp
cmp
repnz
in
fdivr
testb
loop
lret
in
xor
in
int3
sar
in
fcomp
xchg
aad
not
out
out
adc
test
fmul
cmp
aas
cmp
int
shl
stc
cmc
aad
aam
xchg
xchg
or
aad
das
lret
jmp
out
int
aam
ljmp
clc
jmp
mov
orl
in
out
shl
fcmovne
cli
fld1
leave
iret
loopne
stc
out
cmp
leave
clc
div
xchg
clc
in
sti
lret
repz
loop
ret
cli
iret
cmp
cmp
aam
test
jmp
rcr
rcll
into
idiv
xor
xor
jecxz
loopne
out
orl
jecxz,pt
repnz
shll
cmp
std
rcl
std
xchg
stc
fdivp
lea
shr
loop
xlat
leave
xor
jmp
hlt
in
sarl
sub
clc
jecxz
xor
aaa
jmp
xor
call
cli
sti
out
mov
jecxz
loop
enter
hlt
das
repnz
xor
out
lret
sti
fdivrl
mov
jmp
sarb
enter
fidivl
mov
jge
cmpsb
sbb
jl
cmp
in
cmp
aam
mov
mov
aad
xor
out
stc
stc
fistpll
ror
fsubr
test
leave
aas
lea
jmp
xchg
das
xor
out
fcmove
jmp
clc
cld
ret
test
xlat
or
out
in
lret
in
rol
cmp
ret
cmp
aam
stc
cmc
filds
xchg
xchg
addl
imul
idivb
lret
jecxz
into
loop
ds
fadd
out
fadds
add
ljmp
fsubrp
sti
aas
not
stc
loop
out
jmp
mov
sub
aad
ret
cmp
cmp
out
clc
cmp
icebp
in
sbb
xchg
icebp
out
in
xor
div
into
sti
cmp
hlt
ds
cli
fstp
testb
mov
lret
std
ror
enter
fildl
enter
mov
loope
cmc
cmc
fincstp
ret
xlat
rcl
out
fdivrp
cmp
out
cmp
aad
enter
mov
orl
repz
neg
loope
div
cld
loope
cld
sti
shl
mov
lret
in
fdivr
orl
out
cmp
cmp
pushl
call
rol
clc
clc
fst
testl
fsubp
repz
sub
fucomi
fst
enter
aas
imul
mov
fdiv
int
in
in
lret
jmp
mov
jmp
int
int
fcomip
lds
sti
fcmovnu
out
lret
cmp
cld
jmp
sti
xlat
cmp
mov
test
fiaddl
jmp
shl
stc
fcmovu
std
in
into
rcl
hlt
jecxz
repz
std
fiaddl
neg
stc
int
ljmp
out
shr
f2xm1
neg
xlat
icebp
testb
cmc
jecxz
in
fdivr
xchg
mov
out
out
cmc
sub
out
fcmovne
out
hlt
cmp
stc
clc
add
inc
fcomp
in
out
mov
shr
icebp
clc
hlt
leave
lock
leave
enter
hlt
loopne
div
add
loop
nop
ljmp
xor
lret
out
icebp
xlat
loope
repz
hlt
test
cmp
push
in
sar
cs
xor
sarl
clc
cli
ljmp
loop
and
lret
jecxz
xchg
incl
int3
into
int
cmp
cmp
fidivrs
adc
shl
sti
testb
enter
cld
ljmp
loope
jmp
xor
cli
cmp
icebp
mov
jecxz
leave
loop
mov
std
xchg
ror
lret
cmp
hlt
cmp
clc
int
hlt
test
out
leave
lock
call
fsub
leave
mov
xchg
call
cld
iret
fdiv
repz
cmp
out
loop
jmp
leave
leave
fisttps
xorl
divl
into
repnz
jmp
cmp
repnz
stc
in
or
std
lret
test
das
iret
das
cmc
fld
ss
iret
fcmovne
iret
cmp
dec
enter
rcl
xor
idivb
loopne
cmc
iret
aad
mov
mov
enter
ss
ss
sti
call
cmp
sti
jmp
mov
in
push
call
shl
iret
xor
clc
fldl2e
cmc
lock
fildl
call
mov
hlt
out
enter
icebp
fdivrs
aas
loope
cmc
rolb
out
sbb
out
addb
in
fstpt
repnz
lret
lock
aam
aad
ror
in
mov
test
xchg
cld
xor
in
xor
lret
enter
cld
iret
lret
xchg
rol
out
aad
mov
ljmp
xlat
icebp
xor
xor
call
ljmp
fcmove
test
enter
rol
xchg
call
rcl
rcl
testb
cli
fisttpll
int3
int3
call
loopne
aaa
icebp
repz
in
call
aam
test
xlat
loope
int
lret
lret
orb
xor
ljmp
in
out
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
imul
sub
jl
addb
jl
loopne
mov
fldl
lret
lret
aad
repnz
xor
out
cld
ss
rcl
fadd
add
sti
in
lret
xorl
lret
sti
xor
aas
std
cli
ljmp
in
test
ror
jmp
clc
cmp
fsincos
ds
cmp
lret
in
out
leave
jecxz
lret
mov
sub
leave
stc
int
iret
enter
xor
repz
in
jecxz
in
repz
int
out
ret
jmp
cli
cmp
jmp
cmc
in
idiv
mov
xlat
mov
mov
xchg
xlat
imul
xlat
xlat
aam
dec
lret
out
fcmovnbe
adc
test
mov
mov
leave
in
iret
cmc
lret
sar
inc
clc
jecxz
shr
cld
test
jecxz
fstl
fadd
neg
out
fptan
aad
fxch
aas
aad
into
fstpt
loope
cmp
test
rorl
shr
rcl
cld
ds
clc
ret
rcr
cmp
aam
jmp
sti
xchg
loope
in
rorb
in
fcom
int
cmp
xor
cli
rcl
cli
fsubr
fnsetpm(287
iret
in
xchg
shr
loope
jmp
lret
out
sti
idiv
iret
cmp
sar
aad
xor
xchg
out
loope
out
xchg
orl
iret
aas
into
cmp
rcr
out
cmpb
mov
addb
not
ds
hlt
into
fld
fdivl
cmp
rcr
clc
vpaddusb
cld
test
or
in
leave
ret
out
in
int
int3
fxch
fsubp
cmp
leave
mov
add
decb
iret
lret
in
lret
fucomi
rcr
int3
xchg
out
out
call
fisubrs
jmp
int3
ds
xlat
aas
icebp
into
out
mul
xchg
cmc
dec
fmul
dec
xor
lret
ror
stc
fidivrl
fnstsw
cmp
jecxz
lret
loope
fldl
cmc
cmp
cmc
std
xor
in
cmp
ror
inc
rcl
cli
hlt
loopne
in
in
in
in
loopne
sub
int
lret
aas
fidivrl
cli
shl
rcr
rol
fcomip
ret
out
fiaddl
ret
icebp
cli
fcmovne
in
aad
sti
aad
xchg
fdiv
rolb
mov
int3
lret
test
out
ljmp
call
cmp
rcr
icebp
ret
mov
xlat
out
test
cmc
fdivp
shlb
lret
ss
loope
fstp
int
ss
cli
stc
std
test
popl
ljmp
aas
repnz
ret
ret
shl
jmp
flds
int
hlt
leave
cs
cmc
aam
into
icebp
fcomip
xor
in
iret
test
lock
mov
leave
test
loop
lea
idivl
in
lret
shl
cmp
cmp
cli
incl
mov
orb
enter
enter
div
rolb
ret
xchg
std
int3
sub
lret
xor
cmp
icebp
jmp
loope
shl
hlt
loopne
test
hlt
in
in
fdivrp
cmp
sub
lock
leave
cmp
idivb
in
shl
ret
ffreep
fcomi
out
mov
xlat
out
xor
shl
cs
clc
rcl
jmp
int
mov
ficoml
mul
enter
fcom
icebp
loopne
std
ret
aad
fsub
out
loop
xchg
loopne
into
out
in
cmp
fcmovne
rcl
aas
aas
rcl
fst
jecxz
repz
lret
int3
xchg
loope
call
cli
enter
int
stc
cmp
stc
int3
loopne
test
repnz
cmp
out
ss
hlt
cli
repnz
xchg
jmp
orl
hlt
ss
lret
fcomi
repnz
roll
fisttps
enter
ljmp
aam
aad
shl
cld
jmp
in
jmp
loope
xchg
out
out
cs
out
int3
aaa
cmp
out
cld
xchg
loope
xlat
mov
test
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
movsl
xor
jl
add
in
fcmovu
nop
fiadds
in
sub
int
cmp
fcmovnbe
loope,pt
cmp
in
ds
hlt
enter
clc
in
sub
out
cs
lock
int3
stc
repz
ror
rolb
cmp
mov
test
out
xchg
xchg
xor
ss
rcr
cld
ss
fsubp
enter
loop
mov
hlt
ljmp
repnz
fcmovnb
lea
in
roll
lret
clc
sti
sti
cmc
cmp
out
sti
out
fadd
clc
neg
jecxz
ljmp
out
cmc
sub
imul
cmp
fxch
rcr
sub
clc
jmp
out
out
mov
mov
shlb
imul
xor
out
sub
stc
leave
in
ret
loopne
fxch
sbb
dec
in
lret
cs
stc
cmp
cmpl
and
or
aad
jmp
cmp
in
cmp
cmp
lock
neg
out
sar
out
out
fisttps
loop
repz
loop
cmc
cmp
cmp
fcmovnbe
test
hlt
aam
in
or
lret
cmc
repnz
cmc
das
sub
leave
iret
iret
repz
repnz
orb
iret
enter
jmp
stc
in
repnz
aam
repnz
out
out
iret
cli
shl
jecxz
loop
call
ljmp
in
lret
lret
aad
jmp
stc
in
fcos
loopne
rcr
fmulp
leave
or
xor
iret
in
int3
xlat
aaa
shr
sbb
faddp
ret
loope
fisttpl
addb
cmp
fnsave
shl
sarb
xlat
sbb
in
mov
xchg
mov
jmp
xor
cli
jmp
icebp
out
cmp
addl
leave
leave
cli
faddl
cmc
in
leave
xlat
rcr
ss
stc
lret
testb
aas
aad
ret
aad
not
sti
jecxz
xchg
ljmp
clc
xor
cmp
repnz
in
loope
and
out
fisttps
lret
jecxz
lock
aad
xlat
fcomip
repz
bnd
std
mul
iret
sti
mov
icebp
mov
out
hlt
loope
xor
icebp
fsubr
shl
shl
stc
cld
loopne
aad
int3
in
orb
xor
lret
in
ss
std
lret
out
cli
fcomp
sti
fadds
leave
repz
add
xor
fucomi
cmp
lock
aad
cmp
iret
ret
sti
hlt
fcmovne
out
fcmovnu
enter
rcr
hlt
int
out
out
out
xlat
aad
fcmovu
fcomi
xlat
aam
cmp
repz
adc
fsubp
call
fdiv
jecxz
clc
loop
not
repnz
jmp
faddl
in
aaa
into
aaa
xor
lret
std
int
std
hlt
flds
in
iret
loope
call
fildll
sub
cmc
cli
leave
xor
rol
loopne
rol
ret
rcl
or
xchg
out
out
hlt
stc
in
std
lret
aas
fcom
ds
fsubrp
testl
cmc
mov
ret
in
xor
int
imul
cmp
enter
ret
ds
std
fdivr
cmc
lret
mov
fimuls
xor
shr
ret
cmp
sti
std
ds
loop
fdivrp
ret
loope
out
jecxz
mov
loop
repz
sti
lret
cli
clc
sti
filds
leave
fxch
orb
out
fcomip
loope
shlb
sti
shr
fsincos
idiv
iret
repnz
mov
ret
and
in
lret
push
bnd
in
out
out
clc
cmp
div
shl
fsub
mov
int3
xchg
out
aam
aaa
sti
leave
idiv
fucomp
lock
ret
addb
out
in
fsubr
xchg
enter
clc
repnz
aad
aas
shll
clc
loopne
in
incl
fdivr
xchg
fildll
repz
into
cmp
idiv
fnstcw
cmp
in
in
rcl
in
mov
loop
dec
fisttps
aad
int3
in
lret
iret
cmp
hlt
mov
loopne
mov
jmp
into
les
rcr
fxch
enter
mov
sub
add
out
in
rcl
sub
in
shr
in
in
xor
stc
jecxz
cld
rol
loop
enter
xchg
mov
fsubr
xchg
xlat
shl
xor
ss
divb
filds
ret
jecxz
enter
test
mov
enter
in
iret
int
xor
fnstsw
adc
aam
loope
fstp
out
clc
int3
xchg
lret
adcb
ss
aad
cmp
call
ds
fscale
fndisi(8087
enter
fucom
out
xchg
aam
iret
xor
out
xor
enter
cmp
rcr
shl
call
xchg
out
out
filds
xor
clc
lock
lret
fidivrl
ret
repnz
addb
out
ljmp
out
lret
in
int3
lret
in
cmp
cmp
fcmovnb
aam
cmp
fcmovu
in
sbb
and
call
neg
rolb
out
shl
fimull
iret
cld
sarb
rcl
hlt
leave
iret
in
fsubrp
cld
shl
xchg
incb
fcmovu
int3
fcmovnbe
out
in
test
int3
xor
idiv
lret
cmp
div
xchg
mov
fmulp
in
loop
ljmp
call
cmc
repz
std
fnstcw
xlat
in
in
mov
or
or
call
fsub
cmp
jmp
sbb
lret
out
addb
cs
fstpt
stc
fcmovne
cli
aam
sar
rcl
neg
repnz
std
jmp
sti
mov
in
xchg
fdivp
ljmp
out
in
repnz
stc
in
xchg
loopne
test
mov
rcl
in
jmp
jmp
neg
loope
ds
xchg
leave
xchg
xchg
fsubr
fiaddl
ret
xor
xor
lret
out
aam
clc
sar
xlat
cmp
stc
cli
lret
ret
mov
mov
repnz
iret
sub
xlat
out
icebp
cmp
out
enter
xchg
rol
imul
vpaddusw
mov
rol
jmp
ljmp
sarb
repnz
test
out
in
das
ret
repnz
clc
out
fistpll
aad
xor
repnz
in
enter
decl
aaa
iret
shlb
cmp
cmp
aas
dec
shl
rcr
aad
loopne
loop
mov
ljmp
in
in
ljmp
cld
lock
leave
test
out
mov
shr
stc
shll
call
loop
shl
loopne
fadds
addb
in
lret
lret
aaa
lret
fnstsw
ds
fcmovnb
lret
std
fmul
lret
jecxz
fnsetpm(287
int3
test
jecxz
shlb
in
xor
icebp
shl
into
roll
testl
stc
repnz
fcmovnbe
leave
out
stc
fucomp
iret
sarb
fsub
mov
aam
enter
lret
nop
rcl
out
lret
out
cmp
xor
std
aas
repnz
out
fsubr
lret
enter
ret
aad
in
repz
into
fadds
fst
loopne
fcmovne
xlat
std
hlt
hlt
repnz
ret
aad
xlat
stc
cmp
dec
aas
ds
ret
fdiv
clc
fucomi
in
enter
enter
sti
aad
fidivrs
call
fcompp
sarl
rol
ret
dec
jmp
sub
in
aad
icebp
int3
aas
cmpb
repz
aam
cld
int
xchg
out
loope
repz
out
shl
int3
fpatan
out
shl
ds
fldl2t
std
jmp
cmp
mov
loopne
lret
hlt
in
in
lret
shl
int
loop
cmc
loopne
loop
clc
ret
dec
popl
std
fmulp
xor
in
in
cmp
loope
icebp
int3
test
fnstsw
cmp
test
xchg
shr
lret
icebp
stc
fmul
in
out
fsubp
cmp
cmpb
enter
sti
stc
mov
loopne
repz
icebp
ljmp
jmp
inc
ror
ret
jecxz
mov
loop
loopne
xor
cmp
ss
stc
into
fldl
fld
leave
int3
sti
lret
fsubr
repnz
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
ljmp
jl
loope
int
iret
fidivl
iret
cmp
incb
mov
std
hlt
hlt
test
icebp
call
xlat
int3
fnstsw
int3
hlt
addl
mov
jecxz
adc
xchg
repz
hlt
std
int
cmp
loopne
xlat
xlat
test
out
add
movb
xor
cs
shr
cmp
clc
ror
cmp
ret
stc
hlt
incl
cld
enter
ds
lret
sar
std
aas
test
fcomip
decl
mov
decb
ror
clc
mov
clc
repz
xlat
aas
cmp
and
loop
loop
sti
lret
lret
imul
jecxz
not
ss
push
test
fdivrs
in
jecxz
lret
or
mov
ficoms
xor
call
aad
repnz
ret
les
xchg
fidivs
test
sarl
ror
lret
in
hlt
stc
loop
in
stc
les
mov
ret
iret
repnz
repz
rcr
cmp
shr
aas
rol
lret
cmc
int
xchg
adcl
shl
int
sar
int
iret
shl
in
xchg
mov
rcr
lock
xor
fsubrs
xor
fabs
cmp
aam
fidivrl
loop
jecxz
in
mov
mov
in
fcmovu
iret
aas
cmc
xor
std
fdiv
xor
test
cld
jecxz
loop
fucomi
in
out
enter
fst
fadd
cld
clc
cmp
rcr
loop
lock
jecxz
icebp
xchg
sub
shl
clc
jmp
adc
test
hlt
and
ljmp
out
out
lret
lock
fcmovnbe
xor
cmc
std
hlt
out
iret
fucom
out
cli
idiv
test
jecxz
filds
xchg
lret
repnz
rol
aad
out
loop
jecxz
cli
int
out
or
jecxz
out
out
in
call
hlt
fcmovne
icebp
ljmp
mov
xchg
in
ror
div
aaa
fidivrs
aaa
ret
hlt
fdivrl
rol
fsubp
ljmp
xor
xor
fdivr
repz
idiv
sti
iret
hlt
ret
std
rcr
ret
and
int
mov
aaa
std
cld
aad
sti
icebp
jmp
int3
in
fst
out
loope
dec
icebp
fldl
ds
out
idivb
ror
cmp
testl
enter
fucomip
jmp
in
cmp
out
stc
into
sti
icebp
loope
xchg
ret
cld
jmp
loopne
std
or
lds
fadd
xor
lds
fdivrp
cld
fdiv
test
ds
orl
out
xor
shl
jmp
lock
neg
rcr
repnz
rorl
xchg
xor
das
in
xor
shr
aas
xlat
sub
out
cld
loope
out
int
ljmp
lret
test
fcmovu
cmc
int
les
aas
fldl
loop
lock
ret
cmp
xor
icebp
lret
fidivrl
loop
push
leave
loopne
orb
fnstenv
fincstp
aaa
fsincos
iret
xor
fcmovu
icebp
icebp
std
loopne
addb
cld
jmp
sub
out
imull
sar
clc
div
xchg
fisttps
sti
xlat
out
cmc
clc
ss
sti
out
fld
cmp
neg
ffreep
or
xchg
enter
das
xor
into
ror
sbb
testl
out
cmc
out
xor
aaa
enter
fdivs
lret
cmp
ret
in
mov
in
loop
nop
jmp
aam
clc
loop
in
lock
fdivp
jmp
fidivrl
cmp
xchg
aad
in
mov
xchg
loop
enter
rcr
out
shl
dec
aad
test
std
mov
loopne
xchg
xor
aad
ret
iret
lret
xlat
repz
cli
test
in
and
jecxz
into
std
mov
in
in
lret
out
xor
ljmp
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
and
jl
addb
jl
rol
loope
in
xlat
adc
aad
in
mov
jecxz
test
fdivp
shlb
in
fcomi
hlt
shr
sti
rcl
lret
repnz
rcr
ret
out
lds
in
lock
icebp
repnz
in
shl
out
ret
idiv
test
aam
testb
in
divb
clc
mul
jmp
sub
out
incl
std
sub
mov
shlb
jmp
div
stc
call
filds
repnz
mov
mov
fildl
clc
clc
div
xor
out
test
inc
out
aas
fcmove
ljmp
int
in
iret
cmp
ds
xor
cmc
out
cli
test
mov
out
mov
ret
cs
shr
std
div
cmp
fdivr
hlt
roll
stc
int
clc
xchg
imul
repnz
into
shlb
cmp
jmp
iret
int3
aas
add
shl
flds
loop
sub
in
ss
cmp
ljmp
mov
out
out
adcl
ret
loop
xlat
out
repnz
cli
jmp
stc
cld
add
lock
mov
orl
loopne
int3
div
ret
aaa
aam
enter
repz
aam
test
loop
idiv
sub
rcr
icebp
in
jecxz
xor
jmp
iret
hlt
cmp
out
fstpt
adc
lret
mov
test
lock
out
in
sub
jecxz
hlt
fdiv
jecxz
ror
jmp
loopne
int
fidivs
lret
int3
cmp
aad
div
ljmp
idiv
cli
fdivrp
cld
out
std
mov
xchg
xor
ror
xor
in
lret
repnz
stc
out
cmp
aam
aad
fmuls
mov
jecxz
iret
enter
fdiv
idiv
testl
jmp
ljmp
fcmovnu
std
repnz
loope
aad
fcomip
fcmovu
cmp
fdivrp
mov
xor
in
sub
jmp
int
repnz
roll
loope
loopne
testl
ret
out
shlb
in
xor
cmc
icebp
mul
aam
adc
jecxz
leave
in
mov
enter
hlt
fdivr
cmc
sarl
fcmovnu
xor
loopne
add
leave
enter
fidivs
repnz
cmp
cmp
rcl
ss
repz
clc
mov
dec
mov
jmp
xor
lret
fsub
loope
jecxz
in
aad
mov
idiv
xchg
into
and
in
xor
jecxz
iret
xor
xlat
ss
fucom
repnz
cmp
out
mov
cs
rcl
cli
repnz
cmp
lret
fucomip
repnz
fmull
shlb
int
lret
iret
fnop
inc
shl
fdiv
out
in
fld
out
loopne
ljmp
out
fst
xor
fcmovnu
cmp
in
in
add
fxam
fstp
jmp
xor
xor
jmp
fnsave
int
xlat
icebp
incb
mov
loopne
mov
out
mul
aad
jmp
cli
jmp
aas
fcmovbe
add
in
int
in
mov
loopne
fnstsw
aam
jmp
inc
fnsave
cld
into
aam
decb
out
adc
repnz
hlt
sub
shr
cli
cmp
out
rcl
xlat
jecxz
std
cld
lock
orl
leave
sarl
xor
lret
cmp
lock
into
repz
clc
aam
xchg
test
mov
into
rol
rcl
cmp
aad
sar
sarb
cmp
ss
cmp
in
stc
in
ljmp
int3
aas
xor
repz
cmp
cmp
xchg
loope
in
and
lea
adc
hlt
in
xor
in
imul
shr
int3
cmpb
stc
xchg
in
fimull
dec
test
idiv
cli
rcr
hlt
sar
faddl
cli
cli
jmp
repz
std
jmp
jecxz
ret
idivb
fnstsw
sarb
div
mov
mov
jmp
ret
int
xor
dec
in
or
jl
add
aad
mov
in
fcmovnu
std
out
out
out
das
cmc
ss
call
cld
repnz
rcr
rcr
xchg
orl
out
rol
in
clc
into
lock
call
sti
int3
ret
mov
repnz
les
jmp
cmp
out
fnstsw
sar
call
xchg
stc
jecxz
fcmovnbe
test
lret
xchg
in
xor
div
fdiv
leave
cmp
repz
sarb
fadd
cld
loopne
out
in
fmull
out
ss
jmp
cmp
cmp
enter
loope
xlat
fsub
fstp
loop
jecxz
ror
fsubp
out
aaa
stc
aaa
cmp
test
shr
adc
mov
shl
in
std
into
leave
rorl
shr
in
fcmovne
cld
fcomip
aam
ret
aad
clc
addl
lret
shr
xor
sub
loop
neg
sbb
clc
and
cli
sti
jecxz
jmp
in
shl
movl
int3
cmp
cmp
in
mov
fchs
mul
loop
lret
repnz
call
cmp
lret
std
sarl
test
mov
mul
enter
icebp
test
xor
out
shlb
xor
int3
shl
ret
loopne
rcr
in
addl
xchg
xchg
hlt
ror
ror
lock
iret
jmp
loop
mov
cmp
xchg
xchg
shl
xlat
aam
cmp
leave
fdivp
not
cmp
out
cld
in
lret
enter
out
int
iret
in
fbstp
fdiv
neg
in
hlt
ret
repnz
out
lret
in
sti
adcb
stc
cmp
cmp
cmc
fldl
stc
fst
fscale
lret
and
repnz
icebp
shr
enter
fcmovb
cli
sarl
or
mov
stc
nop
xchg
out
icebp
fsub
repz
ret
out
in
cmp
lret
cmc
aam
cmp
aam
out
fisttpl
aad
repz
stc
ror
xlat
cld
sti
icebp
aam
fdiv
loope
xchg
lret
cli
mul
out
jecxz
mov
shl
shr
fdivrs
xor
cli
test
sbb
lock
fildl
xchg
xchg
fdivs
leave
cli
in
loop
out
repz
cmp
fsub
sti
sbb
out
in
out
neg
in
into
not
stc
sti
lock
ss
hlt
rorl
out
in
test
in
cmc
ret
shl
les
repz
cld
rcr
repz
in
mov
shl
idiv
ljmp
cmp
int
icebp
int3
ss
shl
aad
call
ror
mov
loope
fcomp
ror
lock
std
lret
xlat
rol
movl
fcmovu
iret
loop
int3
in
out
fxch
sti
hlt
clc
fmul
clc
fcomip
repz
cmp
int3
mov
mov
out
xor
cld
repz
call
sar
mov
or
lock
xor
sub
sarb
loope
rcl
in
aam
ret
cli
mov
out
std
fsubr
xchg
hlt
xlat
xor
sub
in
into
out
hlt
ror
fmul
roll
clc
fsub
int
mov
int
cmc
out
xlat
ret
repnz
cmp
adc
cmp
loopne
decb
fistl
rcl
vshufps
fidivrl
cmp
ret
test
lret
lret
loope
xlat
shl
jecxz
repnz
cli
shl
out
cmp
fiaddl
ret
test
test
cli
out
lret
nop
out
xchg
int
xor
cmp
out
cld
test
mov
jmp
or
leave
test
xor
jecxz
cli
not
icebp
cld
fdivrp
fadds
test
lret
out
mov
fimuls
in
xor
sti
lret
xor
sarb
aam
testl
clc
mov
mov
mov
rcl
cmp
cmp
repnz
adc
sarb
clc
sti
icebp
in
icebp
lea
leave
xor
icebp
neg
out
aaa
out
repnz
cmc
les
xchg
lea
jmp
rcl
int3
iret
rol
shll
or
sub
cmp
jl
out
xchg
fimuls
shr
ret
ds
aam
fucomp
ds
ds
test
sti
fdivrl
sti
mov
jecxz
loopne
iret
rorb
aaa
aad
fcmovne
ror
jmp
xor
fadd
orb
fisttps
iret
aam
ss
std
test
ret
fcomp
ret
xor
out
repnz
ret
icebp
ss
out
fdivr
ds
aam
repz
mov
imul
jmp
int
xchg
out
cmc
out
repnz
xor
sub
sarb
test
mov
fcmove
int
out
fdiv
int3
in
out
aaa
not
fscale
into
lret
call
ret
shl
shr
mov
iret
enter
out
jmp
xor
iret
fcompp
rcl
fdivrl
fdivrp
shl
sti
test
ljmp
adcl
jmp
repnz
ret
xchg
addb
loope
xchg
lock
jmp
int
jecxz
sbb
leave
aad
les
lret
hlt
xor
call
out
loop
rol
fldpi
xor
xchg
sti
in
xchg
jmp
icebp
xor
ljmp
ljmp
fimuls
enter
rcll
mul
jmp
xor
repz
clc
shl
iret
icebp
cmp
mov
in
lock
cmc
in
out
cmp
stc
cli
sti
and
add
cli
cmp
ret
std
cmc
in
xchg
std
out
into
icebp
int
xor
int
incb
rcr
ret
stc
jecxz
jecxz
mov
jmp
test
xor
lock
loopne
out
out
adc
orl
int
das
jmp
xlat
out
leave
std
clc
ljmp
fst
mul
fsub
iret
mov
out
iret
jmp
cmp
in
out
ss
neg
fildl
std
ret
stc
jmp
out
lret
in
xchg
ret
jecxz
aam
fnstcw
faddl
loopne
mov
jmp
out
mov
out
xor
ret
stc
icebp
repz
loopne
xor
jmp
mov
hlt
cli
addb
out
sti
fcomi
cli
repnz
fucom
in
test
xlat
xchg
mov
ret
out
xor
aad
cli
shl
repz
aam
enter
lret
xchg
xchg
int
cmpl
std
jmp
out
sti
stc
int
cld
loope
lock
aam
jmp
enter
mov
mov
xor
xlat
sar
loop
icebp
ss
cmp
aam
loop
sar
out
xchg
in
mov
test
lret
mul
stc
enter
hlt
fcmovne
icebp
sar
in
loopne
jecxz
jmp
fsub
test
sub
shl
xlat
out
icebp
in
aam
cli
fnsave
aas
aam
fcomi
cmp
leave
mov
jmp
fnstcw
lock
sti
icebp
cld
loopne
rol
incb
lret
fcmovnu
std
jecxz
mov
in
jmp
lret
aad
cmc
sar
enter
fdivrl
loopne
std
lds
loopne
lret
decl
ss
out
clc
in
stc
ss
in
roll
dec
lret
mov
repz
int
in
cmc
aam
lret
cmp
call
fxam
sub
cli
fdiv
mov
xchg
int
repz
ret
call
sti
loop
jmp
jmp
out
int
iret
int
int
int
cmp
xorb
mul
fcmovnb
mov
add
xchg
in
mov
les
in
iret
xor
rol
out
idivb
rolb
sti
loop
in
xchg
xchg
dec
repnz
clc
out
ss
shl
fisttps
loopne
out
xchg
repz
repnz
xor
into
ljmp
roll
xchg
xchg
std
xchg
mov
int
ret
test
aam
loopne
loop
fidivrs
imul
ljmp
fld
repz
fstpt
fdiv
cmp
inc
addb
loop
xor
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
mov
sarl
jl
jmp
xor
shl
iret
sar
in
jmp
cmp
int3
test
fucomp
not
cmc
mov
out
xlat
lret
fcos
sti
out
out
aad
divb
xor
repz
ret
rcr
ret
in
out
mov
out
aad
rcr
rcr
cmp
rol
cli
out
clc
icebp
loope
jmp
loopne
call
div
xor
xor
cmc
imul
into
lock
fsub
ss
call
into
mov
call
das
cmc
xor
in
into
fcmovbe
aad
in
cli
ljmp
xchg
neg
int3
mov
out
sar
cmp
fcom
rcl
fnstenv
clc
repz
mov
popl
test
shl
sar
enter
clc
cli
clc
aam
xlat
roll
rol
mov
mov
mov
cmp
std
aad
cld
lock
fcmovnbe
ret
clc
fsub
mov
leave
in
xchg
orl
out
shlb
repnz
cmp
repz
loope
loop
std
mov
out
clc
mov
mov
aas
loop
aam
cmp
cmp
stc
repz
jecxz
out
out
iret
lret
out
std
cmc
in
vpmullw
int
fcomp
cld
int
cmp
ret
std
adc
clc
loopne
cmp
loopne
lret
rcl
test
das
out
xor
shlb
fucomip
std
cmp
int3
cmp
rcr
mul
or
clc
loop
fstp
xchg
shll
fsubr
repz
ss
ljmp
adc
mul
jecxz
fsub
in
addl
xlat
int
lock
lret
fcmovnu
cli
aas
loopne
xchg
ret
test
orb
repz
xor
les
fucomp
std
cli
rol
iret
idiv
clc
in
aad
clc
call
in
xor
xor
fucom
aam
idiv
icebp
out
in
fcmovnbe
neg
leave
fiadds
leave
xor
xor
ljmp
fcomi
sar
loopne
out
loopne
and
mov
xor
enter
fdivr
sti
in
sbb
xchg
loop
in
fcoms
fidivrs
sar
shl
iret
sar
shl
std
stc
test
out
xchg
xchg
fcoms
sub
ret
xor
cmc
cli
out
int3
lock
fistpll
cmp
fiaddl
shr
cmp
in
hlt
lock
int3
aam
ret
fildl
jmp
iret
rol
fsubp
in
fnop
out
in
leave
int3
jmp
fdivrl
fdivp
or
ds
out
lret
rorl
lret
icebp
jmp
fcmovnu
shr
repnz
incb
decb
xchg
jecxz
call
fucom
cmp
sti
lds
enter
fucomp
in
adc
fmulp
xor
leave
into
das
sarb
out
out
ffreep
sbb
fidivrs
cli
in
testb
ror
xchg
out
loopne
out
cli
test
lret
cmp
and
addl
cld
xchg
ret
cmp
dec
repz
cmc
stc
in
out
jmp
jmp
mov
loop
lret
ror
loop
clc
ljmp
cmp
jmp
out
rcr
fimuls
aam
cli
rcr
loope
cmp
out
sti
rolb
mov
enter
repz
idivl
cmp
vpand
call
cmp
xchg
in
xchg
fsubr
enter
loope
repz
sar
hlt
fucomp
fmull
nop
mov
test
ss
cmp
xor
int3
fidivrl
aam
fcomip
decb
enter
nop
shl
leave
xor
cmp
out
sarb
xor
enter
out
ret
ret
cld
iret
int
loop
rol
xor
leave
aaa
cmp
ss
sarl
out
adc
loope
loope
fcmovb
leave
fsubr
jmp
mov
out
int
hlt
clc
into
jmp
xor
lret
loope
xchg
jmp
mov
out
xor
ljmp
loope
cli
fnstsw
clc
int3
xchg
out
aad
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
in
shl
xor
cli
out
call
loope
aas
roll
fmulp
fimuls
xchg
push
shl
out
xor
fucomp
out
cmp
cmp
out
fiaddl
in
leave
enter
lret
das
xor
fxtract
icebp
aad
aam
fcom
in
cmc
sti
cmp
jmp
call
rorb
fldcw
cmp
out
idivl
repnz
loop
les
jmp
out
xor
xlat
lret
test
lret
in
out
roll
leave
fucomp
adc
cmc
cmp
loope
loop
fcomi
leave
mov
xchg
mov
out
loop
jmp
ss
sub
cld
in
icebp
in
aas
div
loopne
in
ror
leave
out
sar
loop
int3
out
shr
hlt
lret
ror
cmp
aas
out
cmp
cli
cmc
fsub
xchg
jecxz
and
fcomip
jecxz
cli
loope
aad
in
fucom
or
fcmovu
fcmovnb
sbb
lret
out
aad
cmp
cmp
in
aas
rcr
add
aad
test
call
jecxz
in
test
in
cs
in
call
lret
cmp
shl
clc
jmp
rorl
ror
ret
fcomip
fdivr
cmc
cmp
ds
loope
loopne
xlat
or
test
icebp
jmp
shr
cli
lock
enter
rcl
repnz
out
fadd
xlat
jmp
xchg
int3
lret
cld
rcl
fnstcw
xor
sarl
ror
ret
in
mul
ffreep
out
xchg
int
mov
in
out
ss
in
sub
loope
rolb
test
loope
out
icebp
in
incl
shll
aam
cmp
sar
std
sarl
faddl
test
xlat
and
loope
xchg
sub
clc
out
aad
aaa
xlat
aas
div
in
rol
aad
repz
inc
mov
rclb
cmp
jmp
xor
int
fstp
test
clc
loope
fcmovb
cld
out
in
rcl
jecxz
rcl
into
shr
cli
iret
repz
fmul
ret
std
rorb
rorb
cmp
in
divb
out
lock
cmp
xchg
fidivrl
xlat
cli
test
sti
fdiv
xchg
mov
sub
out
ret
leave
jmp
mul
loopne
loop
sti
ret
mov
orl
fdiv
iret
loope
out
test
enter
cmpb
loope
jecxz
and
xchg
fsubr
repz
rol
in
ror
cli
vpaddw
out
stc
cmp
in
xchg
lret
icebp
int3
repz
cmp
hlt
into
xor
fstpt
loop
cmp
clc
add
xlat
cld
iret
lret
nop
into
call
sar
sti
xor
cmp
xlat
stc
icebp
repz
xchg
fadds
xchg
xor
shll
cmp
xor
icebp
xor
repz
stc
fdivr
flds
iret
loopne
cs
ljmp
lret
lock
out
jecxz,pt
aam
mov
fisttpll
loope
leave
lret
xor
in
aad
std
fiaddl
call
jecxz
xchg
ljmp
ror
xor
cmp
addb
lret
jmp
mov
rorb
xor
ror
int3
xlat
cmp
icebp
std
out
icebp
aas
shl
clc
test
test
cld
lret
decl
leave
cmc
sti
sti
out
repnz
ljmp
std
in
repz
cmpb
call
mov
xor
cld
xlat
sti
hlt
ss
fnstsw
incb
leave
mov
out
leave
lret
repnz
cmp
ds
cmpb
enter
orb
xor
cs
jmp
int3
les
aam
fcmovnb
in
sub
lret
ret
shlb
fstpt
cmp
rol
shl
loopne
test
ret
sbb
xchg
int
cmc
clc
into
ljmp
jecxz
aad
fsubrp
jmp
orb
sub
int
lret
mov
jmp
jmp
rcl
rol
fstp
insl
cmc
fsubs
jl
addb
jl
cmp
cmp
cli
clc
in
aam
ret
sti
test
int
sub
rolb
fdecstp
icebp
cmc
cmp
in
into
sti
jmp
in
stc
mov
lds
orb
mul
aam
fcmovb
fcmovnbe
fptan
rolb
ret
or
mov
iret
loope
fmul
repz
xor
lret
fcmovbe
stc
loop
add
jmp
decl
out
rcl
repz
leave
into
repz
out
ror
cmc
cmp
ret
xchg
jmp
addb
repz
out
ror
icebp
cld
cmp
ret
int3
out
loope
jmp
mov
aad
sub
out
out
int3
clc
fidivrl
icebp
iret
repz
sbb
rol
addl
repz
xlat
cli
jmp
in
leave
ds
fcomip
aas
jecxz
mul
mov
in
aad
mov
jecxz
rcr
mov
xlat
in
in
shr
leave
in
and
cmp
xchg
ftst
rclb
repz
iret
out
out
cmp
stc
sar
mov
hlt
mul
cli
loopne
xchg
hlt
sub
loopne
in
cli
ss
clc
clc
cmp
jecxz
repz
loopne
sbb
stc
out
out
std
in
loop
in
xor
repz
repnz
leave
cld
ret
ret
fcmovu
ret
test
aad
fcmove
cld
test
shr
shrl
lret
ret
loopne
call
faddp
cmp
ret
hlt
sti
cmc
std
sar
mul
cmp
lret
out
div
xor
cmc
rcr
repnz
fcmovu
cmp
test
ds
sar
xchg
loopne
test
ljmp
fcomip
fsincos
cmp
rcr
sbb
jecxz
ret
stc
lds
rcr
jmp
xor
adc
stc
clc
into
xlat
shl
jecxz
ds
stc
cli
orb
leave
cmp
repz
aaa
ss
add
loopne
shl
lea
ljmp
call
jmp
test
cmp
in
out
test
and
repnz
in
loop
loop
xor
rol
fcomp
sbb
loop,pt
ret
ds
test
xchg
in
jmp
hlt
out
ljmp
cmpb
repnz
fsubr
jmp
cli
lea
stc
in
shr
in
in
loope
hlt
loope
int3
ds
in
orb
fildl
loope
lret
xor
lret
iret
out
repz
inc
rcl
adc
int
out
in
xchg
lock
xlat
lret
into
out
cmp
cmp
fucom
fnstsw
stc
test
fst
jmp
in
iret
xor
shlb
call
repz
loope
out
cmc
into
mov
out
xchg
incb
shlb
call
fistpll
in
in
aam
cmp
loopne
rcr
leave
out
int
loop
add
sub
leave
cmp
jmp
cld
hlt
ret
movb
iret
out
nop
rcl
hlt
aad
aad
sti
lock
out
int
xlat
out
sti
loopne
fxch
stc
orl
ss
cmp
xor
cli
sarl
loopne
xlat
ds
roll
out
shl
out
int
int3
int3
std
int3
jecxz
ds
clc
ds
les
cmc
loope
xor
fxch
cmc
cmp
ss
sti
repz
fstp
sub
xlat
fxch
out
mov
icebp
aaa
lret
lock
repz
in
ret
aad
test
fcmove
mov
xor
jmp
out
lret
cmp
rolb
xchg
test
test
jmp
jecxz
xor
ret
aam
shr
xor
cli
int
iret
jecxz
fdivp
aad
clc
in
in
enter
int3
int3
int3
int3
cmc
cmp
cmp
icebp
xor
enter
cli
loop
ds
xchg
leave
in
clc
test
mov
iret
loopne
int3
shl
call
aaa
xor
stc
lret
cmp
lock
cld
std
in
sub
lds
jmp
lock
fst
neg
in
aad
rolb
dec
loope
cli
xchg
fsubr
into
shr
xor
call
idivl
xor
lea
mov
jmp
mov
lret
fnstenv
xchg
pop
sbb
iret
jl
addb
jl
cmp
in
testb
int3
mov
xor
out
out
stc
fcmove
ret
test
shl
call
testl
int3
int3
in
lret
fidivrl
fcmovnu
lock
fdiv
cmpl
call
nop
call
rcl
repz
int
fcmovnu
push
into
xlat
cmp
ret
cmp
flds
mov
leave
out
lock
cmc
fbstp
icebp
int
int
xchg
xlat
xlat
xchg
lret
lret
xor
xlat
iret
cmp
in
cmp
aad
cmp
lock
fdivp
idivb
aad
xor
call
xchg
fmulp
sti
hlt
shl
cmp
out
mul
aam
fcomip
jmp
icebp
fcoms
jmp
fdiv
shl
out
repnz
hlt
fld
std
ret
ret
orb
xchg
aaa
rol
cmp
sti
fucomip
aad
imul
ret
shl
out
rol
loop
fcom
cld
out
out
rol
xor
fucomi
out
xor
out
aad
stc
test
movl
jecxz
enter
in
enter
aam
out
sar
jmp
int
fdiv
sti
fcoml
in
aam
shr
ljmp
sub
out
ffreep
mov
in
into
orb
shr
cmp
iret
icebp
stc
clc
aad
hlt
mul
shl
xchg
orb
lret
out
fdiv
cli
int
sar
xlat
test
std
push
or
jmp
out
xor
cmp
out
sti
out
cli
iret
int3
adc
fdivrl
std
lds
fucomp
out
nop
test
int
int
imul
repz
aad
fld
aam
cmp
div
decb
mov
call
shl
shl
xor
leave
cmp
repz
sarb
in
stc
loop
xchg
int
test
cmp
xlat
xor
repnz
cmp
jecxz
test
in
repnz
out
ret
ror
cld
repz
cmc
mov
test
sbb
flds
jecxz
in
loop
enter
aam
clc
test
repz
jecxz
cld
mov
test
ljmp
lret
clc
cmp
xor
cmp
lock
ds
repz
aam
stc
repz
in
loop
lret
mov
out
cmp
in
std
stc
shl
hlt
aam
test
sarb
test
loop
mov
fsubrp
lret
aam
leave
aam
clc
repz
sbb
clc
rol
sbb
stc
out
cld
jmp
xor
out
fistpll
repz
in
ror
xchg
and
stc
int
lret
int3
call
cmc
xor
cmp
repnz
cmp
jmp
in
int
adc
fisttps
cli
leave
fcmovne
fiadds
stc
ret
xor
xor
int3
iret
stc
aad
test
repz
in
repnz
in
aad
rcl
ljmp
cmp
aad
cli
shr
ret
mov
loop
out
in
mov
das
jmp
cmp
out
in
repnz
fcmovu
ret
stc
aam
cmp
ror
nop
jecxz
in
les
cmc
stc
hlt
loopne
out
lock
std
rolb
clc
jmp
jmp
rcl
hlt
enter
rcr
cmp
in
fcomi
fscale
ret
test
cli
in
lret
enter
test
hlt
jmp
clc
jmp
aam
cmp
cmp
and
fsubr
in
xchg
aad
ror
test
ror
fpatan
fistpll
decl
pushl
fldcw
cld
lret
lret
repnz
fadds
sub
in
cmc
fsub
out
iret
ljmp
jmp
test
ret
out
loope
rcr
out
mov
cld
mov
ror
shr
aaa
shll
imul
ror
sar
cmpl
rorb
cli
cli
mov
xchg
aad
mov
hlt
cmp
loope
ret
call
mov
rol
rcl
in
cmp
in
cmp
hlt
ret
jecxz
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
sar
ret
fsubr
fsubr
out
mov
out
into
ror
aas
out
std
icebp
jecxz
aas
sbb
out
call
xchg
lret
pop
in
xlat
aam
rol
push
enter
cmp
repz
fdiv
jecxz
fmul
xchg
out
iret
loop
and
cmc
shlb
stc
cmp
out
call
aam
shr
in
incb
jecxz
int
xchg
call
call
icebp
neg
repnz
repz
aad
cmp
loop
test
repz
xor
cmp
aam
in
aam
xlat
shl
cmpl
jmp
and
mul
xor
repnz
aad
leave
cmc
cmc
rcr
ret
cmc
icebp
sarb
in
nop
fimuls
shll
out
ljmp
clc
sti
mov
out
out
xchg
int
shl
fsubr
repnz
cli
stc
call
sti
fldl
fdivp
out
out
fcomp
enter
jmp
loope
jmp
aad
fidivrs
xor
lret
sti
fucomip
int
int3
fstl
shlb
test
fadd
ror
fsubr
loope
loop
fstp
lea
into
iret
or
sub
fld
fnsave
xor
cmp
into
sti
in
sub
mov
lret
int3
out
in
int
in
loop
ljmp
aas
vmaskmovdqu
aad
loop
test
popl
xor
in
aaa
sub
div
ds
roll
pop
lret
jecxz
xchg
ljmp
jmp
std
jmp
aaa
ret
rcl
mov
fiaddl
test
icebp
xor
repz
out
fsub
fcmovnu
test
int3
in
add
xchg
lock
nop
ret
jecxz
xor
cmc
repnz
cmp
repz
sar
fstp
test
test
cld
shl
test
lret
jecxz
call
in
xor
icebp
loope
jmp
mov
std
jmp
das
xor
in
cmp
sti
enter
fcompp
xchg
test
out
addb
shl
xor
repz
xlat
loope
fnclex
fldl
jmp
fstl
in
rol
fnstsw
call
stc
cmp
inc
imul
ljmp
xor
jmp
sub
cli
cli
clc
std
xlat
fnstsw
aam
hlt
test
testl
out
lock
leave
jecxz
std
fcmovne
fdivrp
ljmp
aad
jmp
mov
in
xchg
ror
rol
out
rcl
xlat
leave
cld
fcmovnu
repz
xlat
std
shr
vpsadbw
xchg
xchg
stc
xor
idiv
fstpt
cmc
aad
out
in
mul
fiaddl
cli
cli
in
ljmp
idiv
fdivrs
fadd
clc
flds
enter
loopne
ljmp
cmp
icebp
cmc
hlt
fadd
int3
into
cld
shl
hlt
jecxz
mov
sti
mov
lock
xor
aam
std
fdivrp
fcomip
in
hlt
cmp
rorb
test
test
decl
ret
into
cld
fdivr
xor
fcompp
rol
aam
mov
jecxz
out
out
icebp
leave
aas
leave
jmp
cmc
cmp
xchg
cmc
jecxz
cli
enter
lea
shr
jmp
repnz
shl
lds
ljmp
out
out
hlt
in
aam
clc
fyl2x
frstpm(287
cmp
inc
loopne
lret
mov
jecxz
xlat
lret
cmp
loopne
cmp
out
sbb
out
jecxz
fcmove
call
aad
int
ret
lret
in
cmp
sar
out
enter
int3
jmp
in
jecxz
xchg
iret
cmc
sub
out
repz
rcl
aam
loopne
ret
incb
sti
mov
in
int3
loopne
adc
loop
repnz
jmp
idiv
in
fcmovnb
ret
jmp
int
into
incl
out
jmp
cmp
xlat
fnstsw
sti
icebp
rolb
in
add
xor
add
jmp
ret
lret
enter
dec
inc
stos
jae
hlt
jl
addb
jl
in
call
xor
sub
out
in
cmp
cmp
loopne
rcl
loop
loope
enter
popl
cmp
jmp
xor
int3
in
fdivr
jmp
std
mov
mov
test
iret
aaa
enter
jmp
into
fucomp
fsubp
rcl
fcom
clc
out
out
nop
decb
xor
out
clc
cld
loop
in
jmp
fcmovnu
ffree
int
xchg
iret
mov
sub
lret
xor
fdivp
cli
aad
fiaddl
call
dec
mov
jmp
fsub
xor
lret
out
repz
ss
fincstp
in
imul
add
mov
mov
mov
out
xor
imul
cmp
jecxz
rcr
cmp
repnz
in
lret
sti
jmp
fbstp
enter
cli
xor
xlat
rcl
hlt
repz
rcr
test
mov
int3
repnz
in
lret
lock
cmp
ss
aam
cli
in
rol
jmp
loop
out
icebp
into
lock
out
sub
cld
ljmp
fcmovbe
into
clc
out
ret
jmp
out
and
sarl
enter
lock
icebp
cmp
cli
fnclex
out
loope
sbb
int
jmp
repnz
xor
hlt
out
test
aas
fxch
aam
sbb
xchg
int3
into
out
repnz
stc
jmp
fnstsw
xlat
out
rol
mov
enter
xchg
cmc
xor
in
xor
std
cmc
iret
xor
rol
repnz
jecxz
mov
in
fdiv
clc
fdivr
lret
mov
rol
out
ror
xor
clc
loope
cmc
in
lds
imul
fcomp
ror
in
hlt
das
in
shll
imul
cmp
jmp
sbb
test
aad
lret
out
mov
sub
xor
int3
cli
repnz
aas
cmp
repnz
fimuls
iret
mov
icebp
rcl
out
test
into
fmulp
ljmp
decb
out
int3
xor
stc
jmp
cmp
repz
in
out
ds
fcmovnbe
rcl
cmc
lock
loope
out
mov
test
int3
repnz
clc
hlt
out
std
lock
ljmp
fdivr
lret
iret
sti
jmp
std
cld
shl
rol
xor
into
shl
jmp
cmp
sarb
shl
movl
loope
cs
int
enter
sar
cmp
cmc
xor
loop
mov
lret
std
fsub
lock
xchg
test
iret
lock
ss
in
sbb
sti
in
test
xlat
mov
xchg
movb
shll
ljmp
addl
test
cmc
xchg
mul
clc
imul
out
repz
out
cmp
repz
in
fdivrp
mov
xchg
leave
aad
fdivr
out
xor
idivl
fxch
idivb
fdivr
aad
shl
ret
in
xchg
icebp
xchg
in
int
in
stc
clc
out
lock
hlt
shl
loopne
ret
div
ffree
ret
mov
mov
out
test
fdivrs
xlat
xor
ret
rolb
addl
xchg
das
jmp
ljmp
loopne
loopne
sti
repnz
repz
cmc
stc
ljmp
in
jmp
loope
lock
div
xor
int
cmp
addl
adcb
hlt
xor
int3
cmp
xlat
loop
loop
ret
les
test
repz
icebp
loope
xlat
not
cs
cmc
sbb
cmp
clc
fdivrp
loopne
xchg
mov
std
ljmp
clc
cmc
cmp
sar
hlt
out
test
ljmp
jmp
out
in
in
ret
rcl
xor
cmc
mul
cmp
std
cmpb
fadd
mov
in
xchg
sub
icebp
sub
sar
ror
loopne
cmp
xchg
not
clc
clc
popl
hlt
imul
cmp
fidivrl
hlt
in
fcmovnb
test
adc
mov
call
inc
or
sahf
add
add
rcl
aad
lret
enter
rcrb
jl
add
mov
loopne
out
clc
in
fcmovbe
std
aas
fsub
xchg
loop
call
rorb
cmc
cmp
out
cmp
repnz
ljmp
ffree
out
lret
icebp
in
in
jmp
cli
xlat
cli
hlt
dec
addl
add
loop
icebp
mov
out
call
xor
lret
xor
stc
sti
loope
stc
cld
loop,pt
out
cmp
fiaddl
jmp
repz
sub
out
cli
fsubr
clc
rcl
loopne
addl
fsub
lock
fmull
shr
icebp
enter
loope
int3
shl
rol
fcomi
ret
enter
std
out
int3
loop
out
loope
xor
enter
lret
cld
aam
ljmp
leave
aam
ljmp
xchg
xor
into
jmp
fcomp
xor
cmp
aas
rol
xabort
loope
fcomp
fmulp
xchg
sti
mov
int
jecxz
leave
aam
fst
cmp
out
aas
adc
out
lret
xchg
mov
and
out
xchg
rorb
int
lret
aam
aaa
repz
add
rol
stc
sub
xchg
xchg
cld
repnz
in
sti
out
cmp
cld
stc
int3
sbb
sti
repnz
out
jmp
rorb
fdiv
in
lret
loopne
testl
cld
mul
iret
loopne
int3
lock
fld
hlt
aam
fidivrl
out
out
in
add
enter
loop
iret
mov
call
iret
sar
int3
int3
fidivrl
cmp
push
into
out
in
cli
out
out
ror
out
repz
leave
fldl
sub
xlat
xchg
fisttpll
imul
xor
cs
fsub
iret
out
sarb
cmp
test
aam
cmc
fdivp
cmp
clc
ljmp
ret
leave
out
repz
cmp
sti
cmp
cmp
std
cmc
loop
xchg
lea
mov
jecxz
cs
repz
into
aad
sarl
ds
fcmovnb
faddl
in
repz
cld
out
enter
xor
xor
repz
sti
shr
out
fsubp
clc
clc
loop
iret
out
cmp
repz
jecxz
rcr
call
loop
fnstcw
in
ret
xchg
repz
xchg
ror
mov
aam
cmp
incl
aad
mov
mov
in
jecxz
shl
xor
cmp
cmc
and
test
incl
xchg
xchg
xchg
cmp
stc
xor
cli
cld
loopne
loop
test
test
sub
mov
sub
xor
idivb
icebp
hlt
repz
adc
test
clc
repnz
out
int
xchg
cld
xchg
rcl
out
fcomp
lock
lret
lret
fdivp
aam
xlat
in
hlt
jmp
out
xchg
rolb
int
shl
ss
rcr
fmul
cld
std
loop
testl
enter
fsubr
cli
cmc
cmc
out
fnstsw
cmp
in
fnstcw
in
in
cli
leave
orl
in
out
aam
clc
rol
idiv
sbb
enter
in
mov
leave
lret
roll
shl
das
out
ror
call
fnstcw
cld
cmp
int3
in
loopne
adcb
div
mul
rcr
test
adc
clc
orl
shll
int3
vucomiss
ss
hlt
loop
roll
jecxz
fisttpll
cld
int3
rcl
test
lock
cmp
fdecstp
rcr
ds
sbb
adc
dec
loopne
cmp
xor
jmp
cmpb
fincstp
jecxz
out
xchg
xchg
jecxz
jecxz
loop
cmp
out
shr
cld
rcl
in
ret
out
enter
out
ljmp
leave
repnz
call
cmp
in
into
loop
std
shl
fstp
xchg
iret
jecxz
mov
out
out
repz
xor
out
jmp
jmp
aam
xlat
cmc
out
rolb
icebp
xchg
lret
and
in
out
mov
xor
add
jmp
rol
rcr
jbe
mov
xchg
and
jl
add
clc
cli
jmp
leave
out
fcmovb
icebp
in
cmp
loopne
fcomip
mov
int3
into
ficoms
xor
jmp
in
cmp
aaa
sbb
loope
fprem1
xlat
xchg
in
in
out
mov
into
hlt
leave
aaa
test
xor
stc
cmp
icebp
out
hlt
test
cld
mov
mov
shl
vpmulhuw
std
out
xor
ss
test
cmp
hlt
rolb
xabort
xchg
icebp
mov
aad
xor
call
flds
clc
sti
ret
cmp
jmp
ljmp
ror
cli
xor
fsubr
cmp
loop
repnz
in
out
out
out
xchg
fcmove
adcl
cmc
ror
repnz
test
addl
fmulp
idiv
clc
repz
hlt
loopne
into
out
xchg
roll
out
cli
xchg
mov
loope
lret
ret
xor
aad
clc
cmp
loopne
rcl
fcomip
stc
test
fimuls
xchg
out
iret
fucomi
call
loope
hlt
loopne
aas
clc
loope
stc
cmp
fmulp
out
mov
addb
leave
cmc
repz
int
cmp
in
adc
rcr
jmp
loope
test
icebp
enter
sti
idiv
cmp
aad
cld
fcmovb
aas
adc
jmp
fdivrp
repz
mul
fcmovnu
out
fcmovu
aad
int
into
adc
out
fidivs
out
out
jecxz
out
cmc
ds
sub
loopne
jmp
repnz
jmp
icebp
out
idiv
cli
sarl
clc
add
into
movl
or
int
repz
rol
aam
icebp
xor
lock
neg
out
in
lret
mul
sti
mov
out
cs
lret
lock
lock
leave
test
sti
test
int3
out
in
fprem
rcr
call
jmp
ds
ds
out
cld
test
test
inc
icebp
out
lock
neg
fcmovu
rcl
shl
out
call
lock
jecxz
loopne
lds
clc
shr
in
into
testb
jecxz
aad
sti
loope
mov
loop
xor
ret
ret
in
rol
jmp
repz
xor
fucomip
loop
repnz
call
jmp
hlt
out
aaa
lock
lret
cmp
int3
iret
rcl
std
ffreep
mov
idiv
std
fmull
lret
out
test
fcmovne
call
cli
fpatan
cli
cmp
call
jmp
in
lock
stc
xor
in
loope
aam
xlat
xchg
call
leave
in
dec
iret
enter
leave
hlt
cmp
ljmp
shl
loopne,pt
ffreep
xchg
clc
sub
xchg
mov
xlat
sub
out
xor
cs
std
not
cmpl
idivl
call
iret
nop
leave
aaa
ss
aaa
dec
out
int
ljmp
loopne
addl
fcomip
in
loope
loopne
xor
ljmp
aad
out
shl
in
ret
and
ret
iret
loop
std
xchg
ds
xor
xlat
lret
cld
ljmp
out
cmp
in
incb
cmc
fldln2
aad
ss
dec
cmp
adc
clc
add
aad
xlat
cmp
lock
mov
icebp
enter
fnstsw
ror
fnsave
repnz
aad
ret
roll
mov
bnd
into
xor
sti
cmp
jmp
in
shl
fmuls
jecxz
std
mov
call
ret
cmp
stc
fst
fnstsw
jecxz
rcr
repz
fmul
decl
loopne
lret
stc
repz
enter
shl
fcmovb
not
lret
out
sbb
fstp
lock
das
call
fidivs
cmp
hlt
out
std
leave
in
cmc
testb
addb
xor
fidivs
aad
ds
fcmovu
fucom
cld
sub
mov
sti
mov
out
rcl
xor
fptan
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
push
lret
pop
push
in
jl
add
out
aas
fiadds
std
mul
lret
loop
int
xchg
imul
out
xor
xor
call
not
rolb
fxam
test
loop
iret
xor
neg
cmp
fdiv
test
cmp
loop
xlat
in
mov
out
mov
repz
imul
xlat
idiv
lock
loopne
in
mov
fiaddl
cmc
loope
out
xlat
test
xor
sti
sarb
in
loop
test
in
cld
out
not
shrl
div
icebp
std
rcr
out
cmp
filds
xlat
in
int
lret
fcmovnu
in
mul
fdivp
ljmp
ds
fptan
lock
clc
mov
xchg
enter
shl
shr
fdivp
shl
iret
divl
jmp
cmp
sbb
enter
rorl
xlat
das
leave
into
ljmp
idiv
cli
inc
std
mov
leave
sbb
std
mov
repnz
xor
rol
clc
lret
leave
cli
xor
xlat
fiadds
loopne
rorb
aas
int3
xor
cmc
cli
out
xlat
rcr
iret
sti
icebp
aad
sar
hlt
int
std
int3
cld
lock
in
vcvttpd2dq
xor
cmp
adc
roll
xlat
test
iret
mov
mov
xor
mov
jmp
lock
ds
idiv
fiadds
fstpt
fucom
mov
out
cmc
out
int3
int3
xor
aam
iret
shl
aad
xor
addb
in
ficoms
sub
int
cld
aaa
rcr
cmpl
xlat
faddp
sti
cli
in
fsubrp
ljmp
int3
aam
cmc
repz
xor
lret
int3
cmp
aas
and
xor
fdivr
out
fimuls
stc
cs
in
cld
aam
sti
cmp
loop
aas
clc
incl
iret
in
fadd
mov
test
stc
xor
aam
clc
cld
int
flds
fdiv
xchg
xchg
jmp
repz
lock
ror
int3
shr
enter
sti
repnz
adc
cld
std
fcmovb
test
shl
jmp
call
int3
out
sti
cmp
test
repnz
clc
ffreep
mov
fsubr
out
xchg
xchg
rcl
in
out
sti
out
int
fmul
in
out
cmp
loope
xlat
mov
int
call
xor
ret
vpslld
cmp
std
inc
and
jmp
test
sub
sub
lret
fcmovbe
rcl
idivl
into
cli
xor
in
fucom
jmp
adc
ljmp
xor
cmp
ds
hlt
fdivr
cmc
roll
fcmovnbe
mov
lret
das
sar
lock
cmp
push
repz
repnz
decb
mov
xchg
cld
int
xor
out
fldcw
in
cmp
filds
flds
lret
aad
shl
cmc
xor
iret
in
int
lock
shl
lock
in
out
out
jmp
loope
shlb
rcl
rcl
cmp
aam
loopne
aad
out
lret
loop
xchg
in
das
leave
iret
repnz
into
rcl
not
test
rcl
test
rol
xchg
mov
lock
enter
fcmove
enter
cld
ljmp
jmp
hlt
xlat
jmp
int
int
loopne
in
lock
rcl
fcmovu
into
repz
rcr
cmc
adc
out
jmp
jecxz
sti
in
shl
lock
lret
aas
stc
filds
testl
repz
cld
xor
fcomip
aas
rcl
fcmovnbe
loope,pt
xchg
jecxz
fmul
repnz
ret
cmp
int3
stc
lret
aas
cmp
and
ds
add
xchg
loop
das
fsubp
ror
int3
iret
out
lret
lret
iret
repnz
stc
ret
fcomi
mov
test
jmp
aam
repz
fcmove
lret
xor
std
repz
xchg
test
jecxz
fsubr
out
loop
jmp
in
lock
fcmove
cmp
loop
lock
jmp
int
xlat
int3
int
cmc
or
mul
dec
stos
testl
leave
mov
cli
call
out
lret
mov
call
cmc
into
stc
in
out
test
mov
std
popl
test
jmp
not
clc
fdiv
shl
loope
cmc
aas
cmp
loope
out
mul
sti
mov
xor
out
out
into
das
ror
ljmp
rol
in
fcomp
aam
int
loopne
mov
in
div
shl
enter
xor
not
hlt
loopne
fsubp
cld
loopne
fsub
ljmp
hlt
out
enter
fcmove
repnz
ljmp
xchg
ret
leave
xchg
in
xchg
divl
lock
xor
fldln2
fsubrp
fdivr
sti
rol
neg
fstp
fstp
mov
loop
enter
aaa
fprem1
enter
loopne
vpor
sti
vpsrad
in
sub
ljmp
out
sti
jmp
test
fdivp
stc
in
test
ret
mov
rclb
xlat
xlat
xor
shr
in
repnz
fsub
mov
fdiv
loopne
decb
rcl
hlt
leave
rcl
cmp
std
rcl
test
jecxz
sti
mov
test
xor
fsubr
fsubr
lret
repz
rol
mov
leave
xchg
fstl
rol
in
cmp
not
shr
sti
clc
rol
in
loopne
cmp
fcmovu
cld
std
xchg
test
int3
xor
xor
into
cld
cmp
aam
dec
incb
rol
ret
fcmovu
mov
fucomp
iret
std
adc
call
xor
out
sbb
out
fdiv
stc
add
fucompp
out
in
int
xlat
stc
aaa
in
shr
jmp
cmc
fcmovu
cmp
push
in
out
lret
iret
in
jmp
cli
in
out
rcr
rcl
xlat
cli
enter
push
test
cmc
fcmovbe
in
xlat
clc
icebp
into
mov
test
xor
jmp
lock
out
cmp
faddl
fcomp
int3
enter
xchg
mov
call
lock
lret
cmp
cmc
sub
mov
ljmp
and
in
jmp
xor
aam
lret
lock
cmp
loop
ret
loopne
test
dec
mov
test
icebp
enter
loop,pn
shl
out
cmp
cmp
jecxz
add
ffreep
in
ljmp
ror
rol
shr
call
rol
iret
out
loope
out
fcmovnb
iret
iret
shr
ljmp
jmp
out
in
cmp
not
fstp
cmp
mov
out
fcoml
out
cmp
cmp
in
aas
sti
addl
leave
fsubrp
out
sbb
sbb
jecxz
lret
iret
enter
fmulp
cmp
flds
cmp
int3
leave
xchg
ficoms
std
into
sar
out
in
xor
ret
repz
out
iret
jecxz
jmp
into
repnz
xor
sarl
movl
lret
repnz
enter
repnz
cmp
fcmovu
cmp
cmp
loopne
fld
repz
fscale
or
nop
nop
icebp
aam
rcl
repnz
out
cmp
lret
sti
rol
loope
aam
cmp
fmull
and
test
shr
xlat
iret
aad
out
cld
out
ss
xlat
cli
neg
test
sti
fsubr
xchg
repz
shl
repnz
shl
cmp
fnstcw
std
sub
icebp
jmp
cld
xchg
lret
mov
decb
into
sti
in
in
shr
out
fcom
aas
std
lock
out
in
ret
mov
mov
stc
xor
xor
enter
cmp
fst
repz
cld
fucompp
orb
xor
cmp
lock
cld
rcl
aad
aam
iret
fadd
jecxz
fcmovu
and
call
loop
sub
call
icebp
aad
ss
cmp
in
aam
cli
out
in
mov
into
mov
xchg
ffreep
icebp
aad
cmp
cs
xor
cmp
rcl
xlat
cld
repnz
enter
in
lret
int3
mov
vcomisd
fucomi
cmp
fucomp
in
aad
in
fstp
aad
jecxz
or
in
inc
or
movb
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
std
inc
mov
adc
jl
addb
jl
call
mov
aaa
enter
ljmp
cld
jecxz
rcr
enter
mov
sub
xor
lret
leave
fdivrs
repnz
ds
icebp
roll
idivl
ds
and
xor
int
cli
rcr
adc
iret
rol
mov
loop
mov
xchg
int
test
jmp
xor
xlat
repnz
enter
test
fdivr
hlt
cld
idiv
test
or
call
fdivr
int3
xor
lock
in
in
mov
loopne
hlt
int
test
repz
out
lret
cmp
jmp
fcmovu
in
xor
ljmp
fstpt
leave
jmp
fsub
mov
out
out
aas
not
clc
xor
iret
cli
int
into
aam
cmp
repz
xchg
fnstcw
popl
xchg
xchg
mul
ss
repnz
cmp
ds
xor
aas
ret
loop
sub
int
jecxz
flds
xlat
rcr
fmul
idivl
fld
jecxz
sarl
sarb
cmp
shl
int
ljmp
shr
repz
sub
enter
fldl
fiadds
jmp
in
lret
out
shr
jmp
xor
out
ds
idivb
int
fcmovnb
cmp
int
rol
rol
jmp
xor
ljmp
jmp
enter
jmp
fstl
aaa
sti
enter
fcmovbe
cmp
loopne
lock
cmp
ljmp
lret
mov
xlat
imulb
loopne
iret
in
lret
lret
rolb
jecxz
loope
out
xchg
mov
shr
in
cli
out
clc
lock
jmp
int
xchg
lock
loopne
call
fmull
shl
aad
lret
ds
iret
push
repz
loope
in
std
mov
fsubp
jmp
fnstenv
in
call
idiv
sar
icebp
fmul
shl
test
mov
xor
xor
neg
icebp
enter
out
xor
xlat
hlt
leave
int
jmp
in
int3
out
int
rol
int
ljmp
cli
into
fsub
fadd
rcr
mov
int
mov
loope
jecxz
in
aad
neg
icebp
out
call
hlt
lock
int3
int
clc
std
xchg
shl
and
ror
shlb
aaa
iret
icebp
fcmove
faddl
cmp
leave
fsubr
call
loop
iret
das
loop
in
xor
repz
ror
cmp
sarl
shl
fiadds
lea
call
hlt
xor
aas
clc
hlt
rcl
out
cmp
loope
loop
mov
xchg
and
ret
xor
cmp
xor
aas
xlat
cmp
aam
aas
lock
cmc
out
loopne
ret
xrelease
ljmp
repnz
cmp
clc
loop
leave
ret
clc
out
ljmp
enter
lret
cmc
not
stc
jecxz
in
loop
icebp
jmp
jmp
sub
dec
leave
das
lret
cmc
cmc
fcmovbe
out
shl
clc
rcr
add
jmp
testb
out
jecxz
enter
cmp
jmp
aad
fldl
aam
icebp
xchg
mov
out
out
std
stc
cmp
fcmovne
in
cmpb
fsqrt
fabs
lret
enter
icebp
xor
aad
les
in
out
lock
cld
icebp
ret
repnz
lret
in
mov
ror
mov
ret
xor
call
std
xor
inc
fadd
mov
jmp
enter
in
in
xlat
das
in
loop
in
iret
fdivr
int
fstpt
iret
ds
rorl
iret
decl
test
cmp
xor
fcmovnu
fcmovne
loopne
loop
clc
rcl
repnz
iret
mov
sbb
out
shl
cmp
aaa
stc
iret
lret
repz
sarl
cmp
add
lret
in
iret
int3
xchg
aam
shll
sti
fdivr
cmc
into
int
leave
ror
int
cmp
and
cld
std
into
std
cmc
in
shl
call
fadd
xor
repnz
sti
aam
fmulp
iret
addb
jmp
ror
int
fcmove
mov
push
pop
outsb
popf
sbbl
out
test
clc
out
in
cli
fnstenv
iret
cli
repnz
ljmp
jmp
xchg
int3
lock
int3
iret
repz
fucom
clc
cli
cmp
faddp
filds
xchg
sub
ljmp
icebp
out
xchg
loopne
sti
ror
in
cli
out
mov
repnz
jmp
xor
idivb
or
fcmovnbe
aas
in
aad
div
jecxz
ljmp
call
cmc
into
cmp
ss
int
repz
fld
mov
loope
out
leave
out
cld
adc
loope
lock
xlat
cmc
fmul
sar
iret
cli
loopne
loopne
loopne
leave
fdivrp
orb
rolb
iret
xor
cli
call
into
idivl
aad
movl
out
fucom
mov
and
aam
shr
xor
aam
aad
xor
fsub
fiadds
popl
ds
lret
xor
in
cli
fcmovnu
cld
loope
aas
test
mov
in
call
mov
out
repz
int3
cmp
int3
test
testb
clc
test
sti
out
jmp
out
xor
cmc
idivl
repz
ret
aad
sti
jmp
jmp
ret
loop
imul
in
xor
test
in
incb
clc
int3
lret
cld
mov
jmp
into
lock
ret
int
jmp
stc
aam
lret
fdivrl
fsub
fimull
jecxz
rolb
in
div
in
aad
call
addl
mov
rolb
repnz
shll
int3
into
jmp
adc
hlt
fcmovnb
out
dec
into
xchg
loopne
out
das
xlat
icebp
ljmp
rolb
fimull
enter
sub
call
aam
shl
cmc
adc
ret
aad
fimull
test
call
shl
rcl
shr
fistpll
cmc
iret
fidivrs
std
frndint
lret
sti
incb
jecxz
ljmp
ret
ret
not
les
into
jmp
ljmp
fldl
in
mov
loop
loope
out
xor
out
lret
call
clc
int
stc
test
test
loopne
fcmovu
xchg
ret
stc
jmp
icebp
shr
rolb
stc
rorb
loope
mov
out
mov
lret
loop
aam
rcl
aad
cli
cmc
sbb
shl
repz
jecxz
cld
mov
int3
sbb
cmc
mov
cmc
enter
cmp
cmc
fsubr
iret
fcomi
lock
test
call
in
mov
jmp
mov
int
out
hlt
lock
fucompp
cmp
test
test
jecxz
fadd
incb
fsubr
out
test
loop
xor
cmp
int
fdivl
fdiv
out
xor
loopne
sti
out
mov
xlat
xor
xor
fsqrt
adc
mov
std
test
roll
xor
xor
call
stc
loope
xor
hlt
repnz
loop
loope
test
int3
rcll
fcmovnbe
fdivr
push
lock
fdivl
out
sar
cli
addb
mov
ror
shl
xlat
repz
sar
fdiv
cmc
cli
loope
cmp
loopne
decl
or
shlb
aad
cmp
roll
test
sar
mov
jecxz
mov
or
out
lret
cmp
cmp
cli
loope
cmp
jecxz
jmp
ret
or
std
nop
mov
mov
lret
ret
fld
rcl
fsubr
hlt
jecxz
fcmovne
testl
clc
sub
leave
aad
cmp
xchg
in
lret
fcmovnu
roll
xlat
ret
not
sti
jmp
lret
cmc
ret
rol
icebp
sti
lret
cmc
fmulp
iret
jmp
out
mov
mov
int
fmul
cmc
das
cmc
out
clc
shl
rcr
cmp
test
lea
jmp
f2xm1
rcr
int3
cmp
sti
clc
into
aas
aam
ror
jmp
loop
repnz
mov
into
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
fisttps
jl
add
aaa
in
into
call
stc
loope
cmp
out
int3
test
out
sub
idiv
idivl
fptan
clc
fxch
aaa
xor
incb
sar
mov
ret
cmp
fidivrl
loope
in
in
xlat
rol
sti
movl
aam
ljmp
fcom
hlt
incl
cmc
test
aam
cli
mov
sub
das
shl
les
stc
cmp
clc
xor
into
test
fcmovb
ljmp
fdiv
hlt
xor
xor
test
fcmovbe
sti
iret
fcom
fcmovbe
rcl
mov
int3
fdivp
leave
lret
cli
sti
in
leave
cmp
sar
faddl
faddl
test
icebp
xor
fcomi
cmp
ds
jecxz
repz
not
loope
xchg
lea
cmc
hlt
cmp
cld
xlat
iret
call
jecxz
repnz
test
out
leave
mov
aad
rcr
aaa
imul
cmc
out
lock
cld
int3
test
std
inc
rcr
fimuls
xchg
repnz
int3
sub
in
sarl
lret
aad
xlat
loop
div
stc
loop
mov
fldl
mov
ss
repz
out
sar
repnz
rcl
hlt
out
lret
mov
loopne
ret
ror
in
icebp
repnz
stc
or
les
mov
test
fst
out
das
into
in
fcmovnbe
clc
leave
stc
aad
repz
xacquire
out
out
int3
call
ds
out
clc
cmp
aaa
int3
repz
in
ret
stc
iret
add
ljmp
xchg
call
jmp
in
xor
repz
fadd
ret
rcr
std
fdivp
xchg
int
mov
in
xor
cmp
int
iret
shl
out
loope
iret
cmp
xchg
xchg
fld
cld
cld
clc
out
ret
test
jmp
loop
in
fcmovbe
sarb
rcl
shl
sti
into
xchg
fcomp
out
clc
out
in
hlt
in
ret
cmp
cmp
in
into
fninit
cld
xlat
test
std
loope
sbb
aad
int
leave
sti
into
iret
loopne
icebp
jecxz
sti
xor
repz
lret
ljmp
cli
fcmove
xlat
mov
iret
mov
ret
fidivs
lret
cmp
xor
aaa
aam
xor
icebp
in
test
sub
fcmovne
fcmovu
iret
ljmp
xlat
ret
icebp
stc
in
fnstcw
int3
cmp
sti
test
fildl
ret
enter
std
loopne
xor
fucomi
cmp
cmp
or
rolb
ret
adc
jecxz
jecxz
div
cmp
aad
stc
sti
sti
jmp
jmp
jecxz
out
rol
mov
ljmp
repnz
xchg
shr
cli
in
repnz
out
neg
loopne
shl
fsub
aad
clc
loop
fxch
in
in
into
iret
jmp
vpsadbw
shr
in
cmp
xor
out
in
xchg
xchg
int3
out
xor
fucomip
out
jmp
in
into
cli
ret
les
std
aad
ret
not
ret
idivb
shlb
enter
ljmp
in
mov
fadd
xchg
int
test
fcmovnu
sti
out
fcmovnu
out
fnstsw
ror
ret
add
les
int3
rorl
ror
xor
ljmp
cli
and
shl
enter
leave
shl
in
lea
out
call
stc
fldln2
loope
idiv
aam
aam
cmc
loopne
ds
loop
in
out
fdivl
hlt
out
xor
loop
repz
fcmovu
cmp
clc
xlat
mul
out
jecxz
out
mov
rcl
hlt
xlat
out
ljmp
loop
aad
rcr
mov
loopne
lret
fsubrp
xor
leave
ss
cld
fidivrs
mul
rcl
fprem
not
mov
aad
int3
xchg
divl
shlb
ss
out
hlt
out
std
and
ret
lock
iret
lret
out
mul
out
aaa
int3
fdivrs
aaa
not
lret
ret
into
sar
jmp
in
fldl
shl
rol
std
in
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
loopne
out
movsb
cli
jl
addb
jl
aad
repnz
sti
adc
test
jmp
out
orl
into
cs
cmp
shll
fidivl
fcmove
iret
int3
cmp
jmp
call
sub
icebp
in
shl
ljmp
out
lret
add
movl
cmc
bnd
loop
int
sub
hlt
cmp
cmp
fadd
stc
in
cli
cli
cld
call
into
loop
cmc
jecxz
out
lock
ss
sarb
or
sar
mov
fadd
mov
repnz
xor
cmp
jmp
cmp
out
out
adc
test
out
int
mov
rcl
xor
jmp
loopne
aas
faddl
idiv
mov
xchg
test
aad
xor
enter
int
adc
xchg
test
ljmp
cs
lret
in
repnz
aas
cmp
fdiv
jmp
dec
lock
in
ss
aaa
std
icebp
int
call
stc
int3
fadds
cmc
fdivr
in
xchg
repz
out
cmp
ljmp
aad
jecxz
aas
ret
std
loope
mov
fiaddl
xor
call
in
not
cld
xor
out
in
aad
sbb
in
test
idiv
xor
lret
sarl
in
sti
aas
jecxz
std
test
test
mov
sbb
loopne
imulb
rcr
lret
lret
fdivrp
rcl
loope
rol
call
xchg
out
in
int
les
lret
icebp
aad
out
aam
ljmp
loopne
or
iret
in
out
ror
loopne
lock
cmp
cmp
int
xlat
testb
xor
mov
hlt
int3
addb
out
icebp
xor
ss
cmp
jmp
lret
test
sbb
rcl
loop
mov
adc
sub
cmc
shl
into
xor
sarl
test
sbb
shl
int
cs
icebp
cmp
enter
lock
iret
mul
in
jecxz
mov
fcmovbe
test
enter
cmp
jecxz
cmp
fadd
loopne
ror
test
out
mov
cmc
stc
ljmp
cmp
test
repnz
mov
fstp
mov
lock
ljmp
out
xor
rol
in
adc
jmp
stc
cli
xchg
fcmove
pause
test
out
fsubr
lret
out
fcmovb
sti
fcmovu
sar
ljmp
test
jecxz,pt
lock
sar
cli
into
loope
rol
aas
aam
in
cmc
int
fcmovu
into
cli
loopne
jmp
leave
cld
lret
repz
ror
cmp
cmp
test
in
std
stc
mov
fucomp
repz
aam
jmp
clc
out
aam
icebp
fdiv
cmp
hlt
ret
leave
cli
mov
out
sar
xchg
call
xor
cmc
cmp
jmp
cmp
xchg
enter
ljmp
in
repnz
ror
call
jmp
shl
jmp
cmc
hlt
fsubr
lret
sti
test
idiv
xor
clc
in
sbb
out
out
in
filds
xor
xor
std
icebp
repz
lock
jecxz
hlt
rcr
xchg
iret
icebp
mov
in
aam
xor
in
xlat
xor
lret
fadds
test
idiv
jmp
out
fisttpll
ljmp
fucomp
cli
in
cli
icebp
loopne
shl
ret
mov
mov
int3
jmp
in
into
jmp
stc
in
int3
sarb
ljmp
out
fcos
jmp
fmul
mov
jmp
aad
int3
lock
ror
icebp
rcr
testb
fsqrt
test
cld
ljmp
xor
out
out
shl
xor
rol
loop
orb
xchg
xchg
jmp
call
clc
loope
std
sti
fcmovbe
repnz
fcmovne
lret
mov
fldl
sub
lret
sub
cmp
repnz
stc
aas
cli
shl
mov
jmp
leave
int
int
int
mov
aam
repz
jl
add
into
repz
stc
hlt
ljmp
loope
mov
lret
aaa
repnz
int
cmp
addb
mov
cmp
jmp
cli
lock
in
cmc
leave
icebp
aas
sti
cld
and
aam
rcr
mul
vpminsw
jmp
hlt
fucomip
cmc
in
divb
out
icebp
rcl
sarl
out
xlat
idiv
cli
fyl2xp1
fxch
jecxz
xchg
lret
loop
xor
aam
in
neg
xor
loope
std
xlat
dec
enter
mov
fists
xor
stc
ss
int
cmp
fld
test
clc
enter
loope
lock
repz
hlt
cli
fsubr
cmp
fdivp
xor
out
fcmovb
call
sti
sti
std
xchg
test
out
fmul
xor
cli
xor
ss
cmc
fdivr
shl
mov
lret
out
decl
lret
ss
clc
cmc
repz
cmp
hlt
lret
sbb
in
call
neg
jmp
sub
aas
cld
mov
jmp
fdivr
mov
mov
aam
xlat
aad
aad
icebp
cmp
cmp
in
sti
cld
rcr
std
call
in
clc
jmp
cmc
in
out
aad
xor
lret
sub
cmp
into
xor
ret
loope
out
out
loopne
jecxz
std
out
out
iret
ss
hlt
iret
cld
cli
lret
neg
into
test
loop
cld
lock
in
xchg
in
loop
out
cmp
cmp
ror
jecxz
repnz
leave
leave
stc
icebp
test
out
xor
divb
xlat
lret
shl
aam
rolb
fstp
stc
call
aad
rcl
in
lret
cmp
hlt
loope
jecxz
stc
in
xchg
mov
lret
xor
leave
clc
mov
sarl
ljmp
fdivr
faddl
fdivrp
out
lret
out
fmul
aam
not
cmp
fstp
rol
loopne
sarl
rcr
test
fcoms
sub
leave
jmp
in
out
leave
loope
hlt
in
aam
mov
in
testl
das
lret
xor
call
idivl
out
cli
test
fimull
and
ds
lret
std
shl
icebp
fucomp
cld
aad
repnz
out
sti
lret
ffreep
rol
lret
ror
aam
call
xchg
movl
mov
in
shll
out
bnd
out
cld
jecxz
aam
mov
jmp
loope
rclb
xlat
lret
fdiv
out
cmp
xor
cli
int
cmpb
std
lret
xchg
in
out
cld
xor
int3
fcmovbe
jecxz
xlat
fld
sbb
mov
orl
decl
test
int
cmc
ret
ds
incl
std
std
mov
lret
mov
ror
fnstsw
out
cld
jecxz
loop
std
hlt
sar
fdivr
xchg
out
in
test
enter
iret
int3
lret
into
out
cli
cmp
aam
fadds
mov
icebp
lret
int
in
in
call
cld
clc
addb
test
fimuls
cld
xchg
in
xor
call
aad
loop
faddl
mov
jmp
out
mov
jmp
int
xor
in
icebp
xor
cmp
ss
ljmp
test
mov
mov
enter
ljmp
repz
sar
test
std
fdiv
jecxz
jmp
sbb
sub
iret
ljmp
stc
sarb
xlat
clc
jmp
fsubr
orb
xor
leave
ret
repz
xor
fnstcw
int
aas
rcr
in
enter
xchg
test
repz
test
enter
addb
shr
leave
addl
fucom
cli
clc
int
cmp
fdivr
cmc
out
repz
fcomp
fisttpll
lret
add
ljmp
cmp
into
icebp
addb
jmp
aad
leave
lret
fstp
aad
mov
popf
cmpsb
mov
jl
addb
jl
test
in
fsubrp
in
lret
orl
cmp
xlat
aad
div
hlt
cmp
out
in
shl
test
pop
mov
test
das
int
lret
ffree
xlat
leave
jecxz
xor
incl
out
mul
clc
out
mov
jmp
sti
fdivs
test
repz
aam
xchg
in
in
mov
fabs
lret
xor
xor
iret
hlt
iret
sarl
roll
iret
jmp
in
out
les
int
cmp
call
aad
shl
loop
fsub
std
iret
std
mov
das
fxch
sar
out
cmp
cmp
loopne
rol
jecxz
jecxz
fcompp
clc
lret
clc
testl
in
stc
into
jmp
icebp
div
xor
into
in
rcl
in
ljmp
repnz
repz
repz
std
aas
std
repnz
in
testl
inc
int
jecxz
into
mov
in
leave
jecxz
out
ljmp
jecxz
xchg
sti
nop
call
rcr
enter
cli
xlat
out
cmp
fsub
stc
aam
xlat
aam
cli
lret
xchg
out
ret
loopne
cmp
std
shl
int3
sti
loopne
add
in
out
jmp
sti
rcl
ljmp
xlat
out
sar
stc
fdivrl
shr
flds
ret
cld
out
out
mov
call
xlat
cs
icebp
call
lea
test
clc
sti
hlt
ss
call
out
ret
hlt
idivb
out
std
fisttpl
leave
shl
cs
cmp
std
xlat
xor
enter
cmpl
xlat
sti
mov
xchg
imul
std
call
rcr
clc
int
lret
iret
cmp
loope
or
fisttpl
mov
cmp
out
out
enter
int
ds
fadd
fld
in
fsubrp
lret
xchg
out
aad
ret
xor
leave
cmp
leave
xor
imul
loop
fstpt
jmp
mov
mov
sub
leave
loop
fnstsw
lret
fcomi
cmp
rol
test
test
out
fsub
out
test
iret
call
std
ror
loope
rcl
xor
into
jmp
xchg
out
cmc
xlat
iret
in
ss
cmp
call
call
rol
jecxz
decl
out
rorl
repz
fxch
cli
in
ljmp
div
hlt
faddp
loope
xchg
xchg
iret
lock
fxch
xor
jmp
neg
ds
rcr
cli
loopne
stc
ds
in
out
lret
mov
loop
out
shlb
loop
xor
lock
into
call
icebp
fisttpl
int
add
xchg
icebp
vpsubd
rcl
sti
call
in
cli
test
cmp
std
fimull
cs
call
int3
ror
hlt
mul
ret
fsub
ret
mov
rorl
loop
jmp
icebp
xchg
cmc
icebp
in
lret
into
std
iret
aas
adc
cmc
xchg
ljmp
loope
ficoms
rcr
jmp
hlt
xlat
rol
testl
stc
sub
out
xchg
hlt
loope
stc
cmp
in
out
clc
int
repz
iret
aas
ds
fsubr
or
mov
roll
xor
sti
fsubr
in
jmp
int3
rol
rol
in
fsubrp
aam
jmp
nop
loopne
ss
lds
jmp
out
std
xlat
cmp
adc
out
vpandn
stc
cld
ljmp
lret
repnz
jmp
std
fcomp
cli
or
cld
dec
in
mov
dec
fldl
cmc
into
jecxz
cmp
ljmp
int3
xchg
aas
stc
faddl
out
out
roll
out
in
in
std
aad
filds
aam
ljmp
in
fcmovbe
out
ret
into
aad
int3
repnz
fscale
aam
in
and
std
mov
repz
in
leave
cmc
enter
filds
xchg
jecxz
iret
fisttpl
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
inc
mov
add
xchg
out
lret
fsubrp
xor
in
ror
lret
iret
fxch
into
jecxz
rcl
repnz
int
ror
cmc
cmp
xor
call
repz
leave
vpand
leave
iret
mov
lret
ret
in
lret
out
ds
rcl
mov
in
jmp
fsubp
test
loop
lock
in
ss
clc
cmp
lret
std
icebp
out
roll
flds
loopne
cmc
jmp
clc
lock
idiv
fxtract
hlt
out
int3
iret
hlt
jecxz
hlt
call
int
lret
xor
sub
xor
aad
cli
jecxz
clc
lock
call
fsub
or
shr
enter
xor
shr
cmp
int3
int3
faddp
aam
std
cld
aad
in
mov
mov
faddl
xlat
int
call
cli
cmp
shl
repnz
mov
in
int3
repnz
in
cmp
repz
shl
rorl
mov
nop
jmp
int3
std
xor
fcom
cli
neg
out
call
jmp
in
rol
xor
idivb
cmp
fiaddl
jecxz
mov
ds
ljmp
ds
xor
sar
ss
icebp
repz
aad
cld
clc
test
in
loope
call
in
xor
int3
shll
loope
out
out
lock
mov
fucom
in
jmp
stc
out
lret
pushl
sar
fld
fnstcw
lock
out
hlt
sti
xchg
xchg
in
jecxz
ljmp
xor
ljmp
rcl
in
mov
testb
in
xor
int3
into
out
out
lock
ret
ds
out
sti
sti
stc
mov
decb
loope
xchg
icebp
ljmp
repnz
fmul
rcl
sbb
fiadds
loop
iret
mov
xchg
rcl
lret
in
sar
fsub
lret
ret
test
not
ljmp
lock
in
out
in
jmp
ds
into
cld
fsubp
fld
mov
out
loope
repnz
lret
into
cli
mul
imul
xor
fucom
sarl
fsub
aad
std
int
cli
stc
or
ljmp
repz
int
xlat
sti
sar
repnz
shl
aad
decb
mov
out
fcom
repz
in
div
fsubr
fnstcw
loopne
ret
repnz
int3
lea
ret
stc
lret
fabs
jecxz
cmp
shr
repz
loopne
into
mov
xchg
rcr
ret
fdivr
shr
ror
ds
lock
cld
xlat
test
fcomip
out
xchg
jecxz
into
rol
jmp
shr
ss
cmp
enter
aaa
cmp
clc
shl
xchg
leave
ljmp
fdivp
out
ljmp
ljmp
fdivrp
ret
test
mov
mov
lock
iret
lea
aam
in
fdivrl
sar
addl
sti
test
fldl
loopne
cmp
repnz
ror
loopne
clc
test
test
vpmaxub
faddl
sub
not
rcr
cli
lock
mul
fdivp
fcmovne
ljmp
jmp
into
fnclex
xor
cli
test
cmp
in
loopne
icebp
call
repnz
jmp
ss
xor
rol
cmp
fisttps
jmp
out
into
sub
out
ss
aaa
cmp
xor
cli
test
shl
icebp
aas
leave
lret
mov
mov
sti
lret
fmulp
jmp
cmp
repnz
adc
shl
lret
out
lret
xchg
hlt
in
lret
cmp
int3
ret
ds
test
into
jmp
out
into
into
xchg
ds
lret
cmp
shl
div
aam
xchg
loop
mul
xchg
loope
shll
aaa
xor
hlt
out
fcmovnu
cmc
fidivs
out
cmc
repnz
rcr
filds
dec
out
adcb
add
jmp
xlat
aad
rcr
fstp
sbb
mov
add
loop
hlt
call
leave
aas
loopne
loop
icebp
in
ret
xchg
cmp
fsub
mov
mov
cmp
xor
in
xor
loope
aam
out
fimuls
jmp
jmp
aam
enter
aam
jmp
loopne
adc
repz
mov
shll
loopne
in
shl
xor
repz
aad
rol
clc
lock
loope
out
int3
jmp
aad
into
shl
call
cmpl
call
jmp
loopne
mov
cs
cmp
enter
cmp
fdivp
in
jmp
ljmp
vpmuludq
leave
iret
test
cli
out
hlt
rol
test
ficoms
out
out
sti
xlat
fstp
into
leave
ds
in
aas
sti
lock
cli
fdivrs
ljmp
jmp
rcr
xor
hlt
cmp
repz
lret
xlat
cld
lea
out
aad
xor
xor
xor
rcr
jecxz
ds
loop
test
fdiv
test
fmull
mov
lret
loop
lret
cmc
fucompp
cmp
repnz
clc
or
cld
std
std
inc
hlt
mov
mov
out
fimuls
divb
cld
leave
iret
lret
cli
cmp
test
cmp
sbb
lret
leave
and
xchg
aas
out
xlat
out
out
mul
icebp
fcmovbe
ds
fstpt
in
iret
in
loop
shr
xchg
cs
in
iret
in
out
ljmp
aam
loop
fadd
enter
in
ret
loope
jmp
test
cmp
lock
in
out
aad
filds
orb
rclb
cmc
frstpm(287
std
cld
shr
fcmovu
into
ftst
loop
jecxz
mov
fscale
xchg
fst
xchg
xor
aam
cmc
cli
fcom
sarl
aad
fdivp
in
ret
xchg
fcmovnu
lret
mov
call
test
lock
stc
in
cmp
aas
call
cld
rol
aad
fucomip
int
ffreep
fisttps
clc
in
ss
shl
rcl
xor
clc
testl
out
test
adc
ror
int
call
cmp
sarb
jmp
les
out
iret
aam
stc
shlb
jmp
shr
fcmovnu
fcmovne
in
fildl
in
in
cmp
fldl
loop
imul
sarb
cmp
test
cld
in
fdivr
int
out
out
ficoml
repnz
std
aad
aad
repz
rol
cld
out
shl
test
in
ror
loop
aaa
lock
out
hlt
icebp
jmp
int
sbb
mov
out
fsubrp
in
in
jmp
ss
leave
ds
ds
and
hlt
ror
testl
cs
lret
sti
jmp
cmp
repnz
cli
push
out
out
loopne
fmulp
xchg
in
aas
icebp
in
cmp
xor
cmp
sti
out
loopne
shl
ret
frndint
out
jmp
iret
fimuls
ljmp
cmp
out
cmp
aad
repnz
test
out
les
in
xor
aas
leave
aam
iret
sarb
stc
fxch
fcomp
div
mov
filds
clc
sarb
aaa
int3
cmp
into
sarl
testb
enter
in
lret
xchg
sarl
xor
aaa
xor
aam
lock
fnstcw
in
sbb
out
mov
loopne
or
sub
aaa
cmp
out
sarb
in
sar
cmp
rcl
faddl
in
filds
jecxz
call
ffree
xor
flds
ds
rorb
test
cld
repz
cmp
xor
int3
into
cmp
aam
stc
test
aam
ljmp
test
lret
xlat
div
icebp
sarb
ret
out
incl
icebp
mov
out
das
shll
ss
ss
ret
in
stc
fisttps
leave
in
xchg
xchg
mov
cmc
out
add
push
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
cli
repnz
rolb
addb
mov
mov
rol
lret
in
in
clc
icebp
cmp
int3
fdiv
loop
repnz
hlt
jmp
int
jecxz
shll
leave
repnz
aad
call
sarb
mov
fucom
out
loope
jecxz
out
out
cmc
into
clc
clc
int3
fdiv
idiv
shl
hlt
xor
sar
repz
std
sti
loopne
stc
loope
shr
in
sub
shl
std
repz
loope
int3
div
not
clc
in
sti
test
fucomp
loope
lret
out
lock
aam
lret
stc
cli
int3
shl
fcmovb
iret
sti
cmp
fmuls
popl
xor
std
lret
adc
cmp
out
ret
cmpb
fsubr
mov
div
sti
cmp
int3
cmp
aad
lock
std
sbb
int3
call
in
ljmp
rcl
cld
int
neg
lock
addb
icebp
std
jmp
lea
repnz
shl
fstp
into
fucomip
lret
roll
jmp
testb
mov
lret
xor
repz
loope
idiv
cmp
std
jmp
mov
lret
ror
int
int3
fidivrs
aam
call
cmc
jmp
int
fists
in
sub
loop
jmp
div
call
ds
xchg
enter
test
mov
out
jmp
out
imul
iret
cmp
repz
aad
ret
aad
lret
out
fiadds
loope
rol
int3
cmc
sarb
cmp
loope
loopne
fxch
rol
loope
rcr
in
in
xchg
iret
jecxz
aad
lds
test
cmp
repnz
and
mov
lret
addb
aaa
into
repnz
rcr
ljmp
lock
test
int
in
int3
shl
orb
hlt
xor
std
repz
repz
lock
les
sti
test
aad
shlb
aam
repz
iret
out
shr
fiaddl
jmp
lret
shl
jmp
lock
jmp
std
cmp
int
loop
frndint
addl
decl
cmp
out
out
fldl
loopne
clc
out
aad
cmc
hlt
out
imul
lea
das
ss
aam
aad
cli
and
jmp
std
addb
into
in
repnz
cli
loope
fcomp
iret
ret
xlat
fcmove
ret
out
jmp
icebp
in
mov
aam
xor
cmp
lret
fnstcw
fcmovb
out
in
mov
int3
lret
cld
cmp
jecxz
aam
int
std
rcr
fstp
enter
loop
iret
enter
test
out
std
xor
icebp
hlt
test
lret
fucomi
loop
mov
out
cmc
hlt
enter
xor
f2xm1
fsubrp
stc
int3
rcl
shl
repnz
ds
stc
enter
leave
lock
cmp
cmp
sbb
icebp
out
fadds
call
ljmp
cli
sti
sar
repz
sub
out
loopne
fildl
repz
std
repnz
iret
in
lret
jecxz
lock
shl
std
faddp
mov
fsubr
xchg
fimuls
int
test
out
xor
div
test
xlat
in
loope
mov
shl
call
xor
enter
aas
flds
repnz
loope
filds
leave
aad
call
jmp
lock
stc
xchg
rol
fstp
cli
lds
ficoms
divb
std
cmp
into
sti
fcmovnbe
repz
and
hlt
loopne
into
repz
jecxz
xor
aad
xor
xor
loopne
xor
ret
xchg
loop
ljmp
subb
aam
in
int3
icebp
icebp
call
adc
shl
call
clc
int
loopne
jmp
rcl
cs
icebp
cmp
leave
aaa
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
push
sti
cs
addb
jl
cmp
cmp
fcomip
out
sti
fcmovb
addb
div
lret
repz
stc
cmp
sarb
lea
hlt
mov
hlt
jecxz,pn
ret
aas
lret
cmp
int
in
cmp
repnz
fcmovu
loopne
out
loop
sub
aam
int
repnz
ljmp
sti
sti
frndint
fisttps
mov
enter
ret
jmp
into
sti
cmp
rcr
rcl
fcomp
jmp
cld
call
fisttpl
sub
aad
repz
fistpll
lret
cli
ljmp
adc
in
testl
out
ret
cmp
fstp
fistpll
rolb
addb
loope
divl
rcr
out
icebp
ljmp
hlt
xchg
cli
std
jecxz
fsts
shll
cmp
ljmp
sarl
xlat
mov
lret
fmuls
in
icebp
out
jmp
div
shlb
hlt
in
sti
fidivrl
enter
sbb
int3
sub
loop
enter
lret
repnz
lret
cli
call
cli
icebp
in
incb
loopne
hlt
call
fmul
xlat
shl
rcr
mov
cmp
xchg
test
test
in
mov
leave
lret
jecxz
repnz
loopne
loop
lock
fcmovnu
addb
shlb
cmp
lock
ss
icebp
fucom
xlat
lock
fdiv
jmp
leave
sti
mov
out
aam
xor
fxch
jmp
lret
loopne
cmp
idiv
loop
mov
lret
repz
lret
iret
ror
ss
clc
out
call
in
add
cmp
cmp
fdivrp
stc
leave
fcomp
call
loop,pn
repz
cmp
stc
into
rol
enter
add
test
xchg
into
into
out
in
lret
xlat
clc
cmp
loopne,pt
addb
mov
call
xor
sti
cmc
fcomi
fmul
cld
test
loope
rol
out
std
loop
iret
test
jecxz
xchg
loope
in
cmp
shr
std
cli
std
neg
rol
cmp
lds
cld
out
stc
cld
jecxz
mov
in
jmp
ror
neg
aam
fchs
movb
xchg
int
out
into
xchg
sub
icebp
clc
aaa
int3
xor
iret
shl
cmp
mov
test
std
call
fdiv
jmp
xlat
vpand
sti
out
out
fsubr
test
jecxz
and
cld
and
sti
jmp
mov
lret
ss
icebp
jmp
jmp
fidivrs
mov
fimull
mov
int
iret
out
cmc
int3
sar
loope
cmc
aam
jecxz
loope
cld
mov
out
iret
in
out
xor
enter
std
fistpll
cmp
lock
not
std
in
test
jecxz
test
rol
sti
cmp
out
fucomi
addl
hlt
jecxz
in
loop
cli
sti
int
nop
cmc
imul
out
cmp
idiv
xor
cli
hlt
std
fadd
cli
repz
lret
aam
int3
lret
lret
in
leave
ss
call
fiadds
fsincos
hlt
enter
sbb
fsubr
test
mov
loope
xor
xor
loope
repz
stc
sarb
sti
fiadds
jecxz
xchg
or
sti
shr
fnstsw
stc
jmp
fsubrp
xchg
hlt
cmp
in
loop
adcb
shl
aam
cmc
jmp
neg
fmul
sti
cli
jecxz
test
test
loop
out
jmp
imul
xor
out
fcos
in
repnz
int
test
jmp
lret
int
cmp
fdiv
clc
loopne
jecxz
int3
clc
fxch
lds
in
into
call
jecxz
int
in
out
iret
cmp
test
hlt
xchg
hlt
mov
clc
icebp
clc
ljmp
int3
sub
repnz
rol
cmp
icebp
clc
aad
mov
enter
lock
shrb
aad
cmp
repnz
xor
div
loopne
decb
call
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
imul
into
lcall
cld
rcr
out
cli
inc
xchg
xchg
jecxz
shlb
jmp
cmp
ss
cmp
loope
shl
cmp
mov
int
aam
int
out
xor
not
jecxz
fnstenv
fdivrs
xchg
call
iret
lock
mov
xchg
jecxz
xor
aad
leave
fsubrp
aad
in
shl
loopne
mov
cld
testb
iret
in
test
xlat
shl
ret
fnop
int
stc
clc
fdiv
in
ss
ds
ljmp
decb
fdivs
enter
stc
cmc
repnz
lret
clc
loope
out
leave
fucom
imul
enter
rolb
xor
lret
int
aam
rcr
rcr
in
xchg
in
repnz
xor
sarb
lret
int
ljmp
xchg
fsub
sti
incl
clc
cli
loopne
xlat
cmp
lret
iret
int3
fcmovu
aas
fiadds
decl
jmp
out
aad
ds
lret
in
iret
cmp
div
into
int
clc
fcmovbe
stc
ret
cmp
mov
int3
repnz
aad
xor
lock
leave
call
rcl
addb
fstp
leave
xchg
fiadds
leave
ljmp
out
in
icebp
in
test
cli
loop
mov
in
in
rol
int
in
lret
aas
int3
ljmp
repz
out
cld
out
xchg
ficoms
icebp
xor
rol
idivb
ds
ds
loope
fmull
test
nop
rcr
xlat
aad
xor
icebp
fdiv
int3
ds
fst
adc
incb
dec
cld
incb
aam
fnstcw
repz
hlt
adc
adc
in
out
fimull
xor
in
ljmp
fadds
testb
fsub
jecxz
out
idivb
sti
sti
fstpt
call
ds
idiv
idiv
jecxz
fsub
mov
xchg
lock
int
aam
xlat
aam
out
cli
cmp
xlat
loope
hlt
in
int3
fsubr
ret
xlat
ljmp
repz
mov
lret
call
or
std
hlt
aad
mov
cmpb
testb
enter
lret
call
test
incb
repz
int3
xchg
mov
shlb
int
jmp
rcr
loopne
aas
std
and
lea
ljmp
stc
lret
jmp
cmp
loop
ffreep
lds
test
loopne
lret
mov
xchg
fcomip
sub
in
repnz
cli
fadd
fdivrp
mov
xchg
lret
jmp
hlt
fprem
fnstcw
ss
addb
mov
testl
iret
test
enter
fdiv
jecxz
cli
icebp
cmp
std
out
test
lret
test
xchg
fucomip
aaa
call
cmp
fcomip
testl
leave
lret
cld
nop
mov
mul
ret
stc
aam
lret
lret
cli
shll
stc
aad
fstpt
test
fdivp
out
fsub
iret
repnz
in
aam
div
out
aaa
aas
in
aad
out
iret
jecxz
hlt
sub
testl
xor
cli
sti
out
ljmp
xlat
aas
mov
add
jmp
nop
nop
in
in
ret
in
ljmp
cmp
fsub
fiadds
jmp
fsubp
hlt
int
lret
xlat
jmp
in
ds
roll
leave
cld
adc
into
jmp
leave
in
in
icebp
aaa
out
out
int
clc
ret
neg
xchg
orl
mul
lock
lds
out
cmp
shr
out
fucomip
out
xor
lret
leave
out
sbb
das
aad
ss
cli
in
xor
icebp
aad
repz
repnz
ret
rolb
fisttps
shl
sti
enter
flds
cmp
xchg
lret
fdiv
ljmp
out
xor
out
lret
test
cmp
out
repnz
je
mov
mov
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
cmc
int
sahf
jl
addb
jl
fucomip
out
mov
in
jmp
aam
aaa
cld
roll
test
xor
ljmp
sar
int
aaa
cmp
fidivl
rcr
idivl
test
in
test
jmp
in
out
sti
fdivr
cmpb
mov
xlat
faddl
in
mov
enter
enter
in
stc
cli
test
out
shl
test
loop
out
mov
mov
loop
shl
cmp
into
xor
dec
neg
cmc
test
dec
jmp
icebp
fiaddl
cmc
loop
lret
shl
iret
lret
cld
ret
in
mov
movl
cmc
sarb
repz
aaa
leave
int
loope
test
cmp
in
std
leave
int3
repz
cli
lret
fsubrp
adc
decl
lret
int
xchg
rcll
cmc
aad
sarb
sti
hlt
cli
sarb
aam
fiadds
cli
out
nop
cli
xchg
lret
jmp
fsincos
out
cli
fcmovu
out
roll
not
aad
loope
stc
int3
test
in
mov
ss
into
jmp
sti
loope
loopne
jecxz
rcr
jmp
test
lret
std
lds
rcr
ds
ret
fdivr
hlt
ds
fcom
mov
cld
in
mov
fcomip
enter
cmp
sti
xlat
sti
hlt
repz
jecxz
addb
call
cmc
cs
jmp
int3
lret
int3
lret
cmc
lret
enter
mov
out
icebp
out
call
fstpt
loope
std
cmp
cmp
xchg
sub
repnz
bnd
rcl
lock
cmp
roll
fdivrp
in
fcmovnu
jmp
int3
out
jmp
shr
icebp
out
cmp
out
xlat
test
cmp
decb
lret
xchg
mov
ror
sar
fidivrl
std
sbb
stc
in
xchg
cmp
in
jmp
enter
cmc
sarl
cmp
jmp
lock
in
lret
repz
icebp
fidivrs
aad
fucomip
cmc
fdivrp
cli
aad
ret
fucomip
out
incl
in
jmp
loope
cmc
fcmovb
iret
repnz
aad
stc
fmulp
jmp
loop
in
xor
ret
fsubr
fabs
fdivr
fstpt
in
div
xchg
int3
das
ss
rcr
int
call
cmc
loop
repz
sti
hlt
test
out
jecxz
shl
out
xlat
iret
jmp
fdivrs
fiaddl
fcmovnu
out
leave
fldl
aad
icebp
in
repnz
fdiv
stc
sbb
repz
test
lret
mov
xor
in
cmc
shll
stc
dec
fdivr
sbb
lds
out
lret
int
enter
icebp
out
in
iret
in
aaa
xor
iret
lret
loop
test
stc
cld
mov
test
xchg
jmp
aad
sarb
rcr
xor
jmp
jmp
int
out
inc
stc
fyl2xp1
out
xor
sti
repz
filds
mov
xchg
call
xor
int
std
cmp
test
leave
and
jmp
sti
aaa
cli
repz
in
and
test
call
enter
out
shl
ss
sti
in
out
fnstsw
xlat
cld
aas
idiv
mov
cmc
sbb
mov
ret
xor
out
iret
xlat
sub
icebp
fld
rcr
loop
int3
loopne
mov
std
mov
xor
sti
aam
fcmove
cli
into
sbb
aas
xlat
clc
loopne
cld
xlat
shl
ljmp
mov
repnz
aam
int
aaa
ss
clc
hlt
aam
les
ret
call
fidivrs
out
jecxz
out
out
ss
cmp
out
les
out
int3
ficompl
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
icebp
loopne
xor
fmul
sar
jecxz
vshufpd
loope
int3
addl
cmc
rol
cmp
out
xlat
loope
cmp
out
lds
into
cmp
hlt
out
leave
call
in
repz
lret
cmc
in
neg
fxch
ret
rcl
rcr
enter
ror
mov
icebp
fucom
in
ret
in
shl
cmp
cmp
out
stc
fnstcw
ret
cld
ret
mul
std
addl
idivl
aam
fdivrp
stc
roll
adc
test
bnd
xor
idiv
lret
dec
out
iret
aas
ret
fildl
out
sti
loop
out
jecxz
in
cld
xlat
ret
fcmovne
cli
cmp
lds
sti
test
mov
mov
test
ljmp
aam
addl
xchg
xor
cmc
int3
cmp
sti
hlt
xor
flds
fistpll
sti
out
std
call
mov
hlt
aaa
out
ret
sub
repnz
shll
loope
xlat
clc
xlat
jmp
adc
call
int3
loope
jmp
cs
icebp
cmp
fst
lret
fdivr
hlt
fdivrl
rcl
sti
in
in
in
xchg
out
jmp
cmc
out
fld1
xor
xchg
imul
sbb
shl
in
int3
ljmp
in
cli
into
rcr
idivl
repnz
stc
xchg
lret
mov
sub
shrb
ror
ss
out
cmp
in
test
xlat
loopne
hlt
in
loopne
jmp
in
cld
jecxz
shl
cmp
lret
into
aaa
jmp
aam
sti
shl
test
into
jmp
fbstp
into
cmp
clc
repz
cmp
aam
fnstcw
ds
xchg
xchg
test
lock
in
test
loop
xor
aas
aam
ds
fcmovnu
fxch
jecxz
decb
int3
xor
iret
xlat
iret
xlat
std
sti
test
fsubp
cmp
in
mov
out
lock
fdivp
xor
in
out
ss
ljmp
in
fsub
mov
shr
cli
jmp
clc
xor
in
in
lret
fmul
out
int3
stc
cld
shr
rorb
std
nop
nop
xchg
les
shlb
out
in
ljmp
aam
icebp
sti
hlt
in
into
mov
icebp
jmp
jmp
lret
shl
repz
into
sti
stc
rcl
icebp
ror
in
add
lock
sub
shll
out
int
cmc
xlat
ret
out
vpsubd
in
jmp
fldl
imul
lret
xor
cmp
int
add
inc
sti
in
idivb
xlat
xlat
call
mov
aam
loop
lret
xlat
int
out
int3
stc
repnz
clc
out
addb
fiadds
loopne
aam
mul
cld
cld
repz
loopne
ret
shl
xchg
loope
nop
ret
lock
loop
div
leave
lock
icebp
sti
cli
fdecstp
cmp
ljmp
faddp
aam
iret
repnz
cli
ljmp
icebp
mov
filds
cmp
fstl
in
xor
clc
stc
repz
cmp
cmp
ds
lock
leave
hlt
int3
jmp
cmc
loop
sub
loopne
xor
jmp
cmp
repnz
xchg
loop
sti
enter
xor
lock
ret
into
xor
ss
rcl
cmp
cmp
ret
jmp
fisttpl
fsubrp
shrb
fcomip
loop
out
xlat
lock
icebp
jmp
enter
sub
int3
fsubr
fucomp
test
ret
out
hlt
cli
lret
ret
xchg
test
ds
div
in
aam
aaa
cmc
ss
ret
rcl
into
fucompp
ffreep
test
enter
in
out
fnstenv
div
aad
f2xm1
fiadds
cmc
mov
cmp
mov
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
out
push
mov
jl
flds
jl
loope
lret
nop
repz
lock
cs
in
out
in
aaa
out
div
in
rolb
stc
cli
int
xchg
jecxz
loopne
call
cmp
aaa
fcom
aad
shr
sar
test
loop
addl
fldl
ret
divl
lock
fdivrp
aam
loopne
imul
in
rol
decl
mov
iret
jmp
icebp
lret
std
hlt
cmc
iret
cmp
mov
fmull
cmc
out
lret
jmp
fadd
fdivr
adc
xchg
out
hlt
int3
or
hlt
in
loopne
loop
fcomi
div
fdivrp
in
fdivr
xchg
cmp
repz
or
icebp
repz
jmp
lea
sub
in
cmp
fcmovnbe
stc
int3
rcl
fstp
int
fcmovb
loop
cmc
in
test
rorl
lret
repz
fcomi
aam
jmp
enter
stc
rcr
out
sti
fdivp
enter
fimull
aaa
xlat
cli
fcmovbe
ffree
idivl
out
aad
loop
jecxz
or
imul
iret
into
out
loop
loop
loopne
hlt
lret
lock
leave
xor
neg
ret
repz
xchg
in
test
out
das
ret
lret
shlb
cmc
shr
std
roll
cld
int
mov
and
jmp
iret
repnz
stc
sti
cmp
into
test
loop
xlat
in
loope
test
mov
lret
sub
fucomi
in
aaa
repz
neg
aam
cmp
stc
hlt
lea
xor
repz
lds
lret
into
das
rcl
sub
loop
ds
rorb
fildl
shll
into
call
aaa
iret
aas
icebp
std
out
rcr
in
in
test
fcmovne
out
loop
xlat
repz
ret
cmp
shl
in
in
sar
fpatan
jmp
cld
hlt
imul
out
out
std
jecxz
jecxz
in
int
out
out
cld
cmp
cmp
cld
fcom
incb
stc
and
mov
jmp
ret
fnsave
icebp
cmp
fcom
add
cld
xchg
sti
std
sti
call
in
test
repz
ss
rcl
aam
aam
lret
dec
stc
fisttpll
loop
incb
repnz
cmp
enter
cmp
into
lock
jecxz
fiaddl
fsub
loopne
xchg
mov
mov
in
shl
in
enter
shl
cmpb
int3
sbb
test
jmp
clc
xchg
lock
shll
xor
fmul
aas
xlat
enter
loop
aam
fsubp
jmp
in
orb
xor
icebp
jmp
loopne
cmp
filds
test
fiaddl
fimuls
repnz
jmp
cmp
lret
loope
std
shl
aam
shr
out
out
cli
enter
in
lret
clc
ret
int
out
aam
cmp
ds
fldl
roll
leave
into
in
hlt
aaa
sar
cmc
sti
sub
out
repz
ret
int3
mov
cmc
jmp
call
int3
stc
sti
int
fdiv
fld1
hlt
fcmovnu
dec
std
rcr
out
sar
int
icebp
icebp
fcmove
test
rcl
dec
adc
mov
fmuls
mov
in
mov
loopne
xor
lock
clc
int
cmp
fiaddl
mov
in
mov
in
mov
aad
xor
xor
stc
in
lret
sti
ljmp
stc
test
stc
loope
fmull
loop
rol
cmp
test
shl
jmp
in
into
jecxz
shl
cld
fdivrp
lret
in
or
xchg
nop
mov
rcl
into
repnz
jmp
in
idivl
std
out
aam
out
lret
in
mov
into
fld
loop
fstp
aam
ds
jecxz
addb
ljmp
int3
xor
ss
repnz
stc
ljmp
in
pop
mov
xor
out
in
idiv
icebp
call
shl
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
add
loop
adc
jl
rcr
in
xlat
in
ljmp
xor
xor
hlt
xor
roll
in
int
leave
in
decb
enter
xor
out
imul
lret
imul
jecxz
loopne
test
jmp
loop
lret
out
shl
xor
stc
lret
leave
call
fsubrp
neg
shl
ljmp
sbb
int3
aas
xor
cs
not
call
idiv
ret
rcl
lret
call
fmuls
out
jmp
into
call
clc
out
fiaddl
loope
ljmp
in
out
out
repz
call
cmp
fdiv
in
incl
mov
leave
orb
fnstenv
rcl
fcmovnb
cmp
fnstcw
adc
shl
shl
in
xchg
iret
xchg
int
loopne
leave
leave
call
push
icebp
and
jecxz
xchg
clc
sar
addl
nop
adc
lock
lret
flds
rcl
test
lret
lock
int
int3
jecxz
int
xor
cmp
lret
test
sti
cmc
test
or
jmp
ret
call
call
icebp
jecxz
fsub
ret
ffree
sar
mov
fnstenv
hlt
ljmp
repnz
out
ret
test
in
nop
test
xchg
leave
lock
sti
cmp
in
jecxz
flds
test
int
fisttpl
mov
iret
lret
ret
in
mul
cmp
ret
ds
clc
in
loope
popl
test
rcl
aad
in
out
call
repz
test
jmp
test
idiv
call
aad
xor
xor
into
lock
into
loopne
cmc
aam
ret
sti
in
fcomp
lret
xchg
mov
in
stc
xor
cmp
aaa
in
aam
repz
loopne
clc
cmp
sti
lret
xchg
ret
std
nop
lret
shlb
jecxz
call
cmp
cli
hlt
ror
fisttpl
out
std
vpcomuw
sti
xor
not
cmp
cmc
in
out
out
lds
loope
xchg
aam
into
enter
cli
leave
hlt
shl
cmp
clc
xor
fadds
fucomi
in
enter
xchg
das
cs
fsub
cmp
faddl
ret
adc
xchg
fmul
test
in
shr
in
xor
clc
xor
cmp
aam
rcr
int
cmp
leave
xchg
out
in
xchg
and
mov
in
repz
clc
shr
idiv
iret
fnstsw
lret
ret
fadd
fcmovnu
lret
loope
leave
icebp
enter
xor
fyl2xp1
aad
in
call
xor
jmp
in
xchg
loopne
in
enter
clc
call
cli
cmp
shl
xor
mov
xlat
fcmove
std
fimull
xor
jmp
repnz
aad
jmp
aam
int3
iret
int3
loopne
and
fprem1
fld
in
std
fmul
sarl
in
fcmovnu
jecxz
xchg
out
orl
jmp
icebp
in
in
sti
hlt
rcr
cmp
xchg
xchg
sar
jecxz
lret
call
mov
ds
out
cmp
int3
xor
enter
sar
aad
mov
mov
lret
iret
sub
iret
in
ror
cmp
shll
clc
fcmovu
in
and
fdivr
std
jecxz
loope
mov
fdivp
in
cmp
push
fadd
push
xchg
xchg
loop
cmp
leave
fcmovnu
loop
loopne
in
lock
rcl
cmp
test
into
aam
out
fcmovnbe
hlt
out
jmp
sub
sti
test
in
repz
xor
les
xor
leave
hlt
cmp
and
mov
faddl
dec
in
repnz
jecxz
das
fldz
aam
shl
adc
cmp
rorb
stc
lock
rorl
ret
lock
rcr
leave
iret
cli
fldl
test
add
jmp
iret
aad
aad
aad
aad
mov
popa
int
cs
mov
jl
add
cli
ret
in
repz
jecxz
in
enter
in
loop
in
iret
stc
icebp
jmp
cmp
int3
jmp
xchg
xchg
lock
mov
jmp
mov
int3
shll
fsubr
ljmp
cmp
loopne
faddl
aam
std
and
int
or
xor
int
repz
repz
aas
incl
leave
out
mov
jmp
fcom
hlt
leave
lret
clc
rcr
ds
into
sar
into
ret
cmp
clc
sbb
fists
test
cmp
aas
sarl
aas
aam
adc
test
mov
test
mov
xchg
out
shr
ss
aam
xor
iret
hlt
out
rcr
cmp
shr
std
imul
mov
orb
into
enter
iret
int3
jecxz
int3
loopne
cld
cld
xchg
cli
mov
aaa
ret
repz
hlt
cmp
repnz
flds
aam
out
fcomp
sti
loopne
fsubr
ret
in
cmc
repz
lret
mov
jmp
das
fdivs
into
in
cmp
fdivl
add
int
ret
stc
hlt
add
mov
out
out
xchg
rol
hlt
jmp
hlt
cli
fxch
repnz
aad
ret
cmp
cmc
faddp
out
sar
lret
out
jecxz
in
xor
clc
jmp
ljmp
into
test
cmc
loopne
xlat
out
nop
ljmp
jecxz
out
int
out
cli
rcr
fdivrp
in
adc
shl
addl
jecxz
out
jmp
into
cmp
ljmp
std
sti
test
ljmp
loopne
ss
out
ljmp
ds
mov
fstl
hlt
icebp
in
lock
hlt
div
cmp
out
xlat
loop
testb
xchg
xchg
aaa
repz
shl
iret
leave
xor
in
aam
rcr
hlt
sar
repz
ret
in
ljmp
in
aam
xor
cld
lret
or
fcomp
aad
cld
xchg
sti
mov
fcmovne
testb
aam
xor
jmp
cmp
aas
rcl
icebp
hlt
aas
aam
ljmp
ror
ffreep
shll
repnz
xor
jmp
cld
lock
aam
mov
hlt
call
mov
jmp
shl
fsubrl
dec
cmp
aas
add
cld
testb
xchg
int
out
sti
out
fptan
cmp
xor
cmp
xchg
cld
in
out
sti
lret
mov
xor
lret
neg
fucomi
aaa
sarl
into
repz
aad
fiaddl
std
mov
out
loopne
in
enter
call
fsubrp
sti
ffree
xlat
in
stc
xchg
clc
in
xchg
out
faddl
cmp
lret
in
cmp
sti
shl
ret
aam
fcmove
std
filds
nop
lret
iret
stc
xor
sar
leave
aaa
std
cmp
idivl
sti
not
test
repnz
fildl
enter
ret
ret
enter
fcmovbe
cmc
jmp
jecxz
out
cmc
sar
cmp
fimull
out
cmc
xor
ss
test
repz
in
aad
in
in
xchg
shl
aaa
leave
xor
cmp
in
fdivrs
fdiv
xor
std
idiv
fdivr
mov
int3
in
fimull
rcl
enter
icebp
cmp
int
adc
mov
stc
jmp
call
call
mov
cmc
loop
repnz
hlt
iret
fcom
fnstenv
rcr
xchg
out
in
lret
icebp
shl
imul
repnz
rcl
cmp
xlat
xlat
std
out
fcmovb
enter
mov
into
out
mov
test
int
fldpi
into
clc
loop
cmp
lret
hlt
out
cmp
into
hlt
cli
addb
imul
fildl
int3
loopne
call
lock
in
xlat
mov
cli
rorb
clc
shr
repz
ror
aam
into
fcmovne
int3
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
push
jb
mov
jl
add
xor
ret
xchg
repnz
nop
xchg
shlb
cmc
roll
aas
aad
cli
loop
out
jmp
int
out
jmp
shl
shlb
out
aaa
lret
jmp
fcompp
out
loop
cmp
sub
iret
lret
loop
hlt
cli
out
call
call
neg
fdiv
cli
clc
ret
in
in
loopne
xchg
jecxz
out
shl
ret
clc
out
in
fdivrl
ljmp
fsqrt
sti
cli
orb
fprem
cmp
fnsave
call
stc
and
mov
fdivr
out
loope
lock
shl
out
in
out
fdivr
lock
neg
sti
lock
repz
in
mul
out
lock
mov
cmc
leave
shr
lret
in
fnsave
sti
int
int3
jecxz
repz
cmp
out
sti
stc
loope
out
out
adc
out
lret
icebp
cmp
in
aad
fcom
sar
shl
clc
aad
ljmp
ljmp
cli
shr
loope
aad
iret
aam
aas
lock
leave
fimull
int
in
xor
sub
std
stc
cs
fdivrs
out
mov
inc
jmp
jecxz
int3
lds
lret
fucomp
sti
fidivrs
cmp
idiv
int
ffree
sti
sti
cmc
lret
rol
mov
loop
xor
cmp
aaa
ror
loope
cmp
ret
xchg
mov
mov
shl
call
stc
into
aad
fstp
repz
xchg
orl
stc
iret
lret
cmc
aam
aas
test
jmp
test
test
loop
int
call
cmp
lret
neg
stc
cmc
sub
hlt
sar
div
in
out
cld
repnz
in
aad
not
neg
cmp
fstp
cmc
loop
fptan
fdivr
icebp
fdivrp
rcr
out
xor
stc
cmc
ss
hlt
jecxz
fcompp
in
std
div
jecxz
fadds
xchg
into
in
xor
das
cs
iret
sarb
fcmovbe
iret
icebp
inc
cmc
fdivrp
in
ljmp
out
in
in
repz
cmp
int3
in
aaa
mul
cld
xlat
fadd
hlt
test
sbb
sub
sub
int3
ljmp
cld
into
lock
shl
jmp
ret
sti
fcoml
icebp
aaa
divb
sarb
aam
cld
loope
fildl
clc
loope
in
out
rcl
roll
in
in
xor
in
fst
in
fsubp
xchg
xchg
out
xchg
fmull
xor
cmp
out
clc
clc
lock
cld
cmp
aad
ret
cld
in
out
fiaddl
iret
sarb
in
shl
jmp
jmp
xlat
out
repz
cld
jmp
jmp
loope
jmp
xor
vpsubd
xor
aaa
call
xchg
hlt
mov
xchg
and
jmp
leave
sub
fdivr
std
cmp
xlat
sti
cmc
fcmovnu
cmp
fld
int3
icebp
rorb
in
fidivs
ljmp
xchg
xlat
fstp
fcmovne
dec
xor
loop
int
in
cmp
rol
fdivrp
out
loopne
repnz
lret
out
nop
int
aad
int3
lock
out
enter
call
rcr
out
clc
sbb
icebp
sub
in
ret
lock
shl
rol
cld
fucomp
lret
enter
fcmove
test
int3
ret
sub
fcmove
cmc
cli
in
aam
lock
inc
lret
out
lret
xchg
xor
ss
ss
cmp
sar
jmp
jecxz
mov
shl
lock
clc
aad
enter
ret
into
sub
rcl
loop
and
lock
loope
fsubr
jmp
cli
out
ffreep
neg
sti
aas
cmp
sti
mov
jmp
shrl
xor
sub
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
mov
mov
mov
jl
lret
lret
clc
aad
loope
cld
loope
in
and
repz
test
in
lret
out
cmp
in
stc
fcmovbe
fadd
rol
mul
aas
cli
sti
out
loope
enter
in
into
jmp
leave
xor
xor
cmc
in
ret
test
ds
inc
loope
movl
aad
ss
jmp
rcr
loopne
cmp
repz
fucomip
jmp
test
aad
call
in
neg
cld
lret
cli
in
aas
jmp
int
loopne
decb
into
repz
cmc
enter
push
fcomip
ret
rolb
std
loop
jmp
xchg
rcr
shlb
out
aam
xor
ret
std
in
loope
idiv
filds
mov
loop
sub
hlt
repz
jmp
lock
jecxz
addl
ljmp
rcl
jmp
out
repnz
or
ret
jmp
rorb
repnz
out
stc
fcmovnb
in
xlat
cmp
int3
loope
std
clc
loopne
xchg
sbb
jecxz
out
lret
xor
not
ror
fsub
roll
and
out
std
cld
test
ss
jmp
cmc
shl
test
in
mov
xchg
xor
fcmovnbe
shr
not
leave
loope
loop
cmp
cmc
hlt
ljmp
iret
fdiv
loop
in
loop
jmp
cmp
idiv
aam
adc
aam
cli
sbb
xchg
out
jmp
out
lret
hlt
lret
lock
loope
cmp
icebp
lds
enter
nop
lock
xlat
iret
into
int
int
lock
cmp
fsub
xchg
rol
clc
fsincos
ret
in
fistl
loopne
hlt
in
aam
aad
icebp
lret
jmp
iret
cld
xchg
mov
icebp
leave
fcmovu
out
xor
out
lret
in
xor
fidivl
cld
cmp
fnstcw
std
repz
xlat
lret
fdivr
mov
xchg
xchg
xor
rcl
aam
fsincos
cmp
jecxz
shl
out
out
cli
mov
enter
int3
cmp
rol
divb
hlt
cmp
mov
mov
mov
out
jmp
in
shl
xor
cmp
loop
rcr
test
ror
adc
out
loop
xor
xor
xlat
cmp
loope
lret
incl
out
decb
jmp
cmc
aaa
out
fidivs
ss
imul
testb
loop,pt
call
cs
in
xor
xor
in
icebp
cmp
fdiv
fadd
loope
ret
aad
fmulp
int
jmp
nop
xor
int
ss
imul
aad
sti
div
leave
test
sti
std
test
xchg
int
faddp
mov
fidivs
div
loop
int3
cli
fcmovnbe
jmp
orb
repnz
out
aad
out
cmp
iret
clc
cld
out
ret
loop
hlt
fadd
lret
cld
into
xor
xor
loop
in
into
in
cld
neg
neg
hlt
mov
addl
in
in
shl
int
xor
rcl
fnstcw
std
loop
xor
fcmovb
loope
fisttpll
lret
cli
rorl
div
cmp
fsubrp
std
cld
cmc
out
fcmove
loop
hlt
aam
fld
or
rcl
loop
rcl
lret
icebp
fnstsw
xor
cmp
test
out
cli
xchg
mov
xchg
rol
in
xor
cmp
xor
shl
cmp
cmc
leave
mov
mov
addb
stc
in
out
int3
xor
ljmp
sti
mov
mov
mov
ror
das
lret
jecxz
out
aaa
icebp
into
ljmp
lock
clc
mov
cld
fmull
rol
cmp
into
lret
jecxz
xlat
iret
aad
stc
lret
fsubr
mov
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
iret
stos
aam
cld
mov
jl
fcomip
aam
jmp
rcl
loopne
addb
jecxz
mov
ljmp
sub
enter
out
ss
leave
std
ret
repnz
test
rcl
xlat
std
orb
rorb
shl
idiv
cmp
int3
cmp
fsubr
iret
jecxz
into
fdivp
fiadds
shr
shl
in
lock
test
fsubr
rcl
cld
cld
rcl
fcomip
not
mov
in
adcb
call
fmul
iret
testb
xchg
jmp
orb
xlat
stc
stc
xor
int3
fcos
jmp
xor
cmpl
loope
add
mov
loope
mov
int3
into
int
jmp
lret
loope
aam
clc
fildl
mov
fildl
xor
aad
xor
cmp
xor
cmp
clc
xor
int
iret
fcmove
nop
and
lock
xor
cmp
cmc
in
idiv
call
std
int3
cmp
aam
sub
xlat
xor
cmp
aam
repz
fdivrl
addb
std
xchg
xor
fcmovu
iret
repz
test
hlt
cmp
cmpb
cli
addl
xor
lret
enter
lock
out
mov
test
aad
orb
repz
fld1
jmp
idivl
rcl
fadd
loop
out
xchg
fucom
in
iret
out
fmull
into
out
rcl
sarb
fst
rcr
fcomip
ret
fadd
rcl
out
out
xchg
das
out
xor
aaa
xlat
iret
fucomip
iret
hlt
in
filds
out
lret
icebp
test
jmp
fmul
cmp
in
call
sbb
out
cmc
aad
xor
mov
sar
in
jmp
stc
jmp
leave
fsub
ss
fcmove
ds
loop
fdivrp
jmp
in
fmulp
cli
loopne
out
xor
jmp
divl
cli
fdivp
repnz
out
repnz
out
mov
jecxz
test
jmp
lock
into
sarb
xor
xlat
aad
fcomip
test
cld
enter
loopne
ljmp
xor
call
sarl
clc
jmp
test
rolb
fucomi
mov
mov
vphaddwd
xor
sarb
into
fcmovnb
test
cli
mov
decb
shr
shl
ss
cli
int3
push
stc
sti
bnd
fisttps
mov
int3
lds
out
fucomi
fdiv
int3
fcomp
xor
stc
stc
mov
std
les
xchg
and
enter
fdivr
cmp
cli
ds
sti
rol
in
iret
iret
cld
loopne
enter
xor
ljmp
cmp
cmp
sarb
cli
leave
dec
in
in
loop
cmc
enter
shl
clc
aas
loope
loope
cld
test
xchg
lret
mov
test
xor
test
into
rcr
into
imul
iret
int
fidivrl
addl
loop
out
rcl
out
fnstenv
out
repz
hlt
ljmp
stc
adc
ljmp
jmp
xor
jmp
cmc
in
xor
adc
xlat
repz
fcos
filds
test
lret
sti
aad
cmp
push
test
shl
fmull
xchg
loope
jmp
int
fnsave
cld
cmp
iret
cmp
xchg
out
loope
xchg
test
in
hlt
iret
fld
cmp
lock
cli
shl
ret
not
fld
cmp
leave
mov
mov
jecxz
jecxz
in
int
int
xlat
iret
repz
xchg
test
leave
sbb
xor
in
jmp
xor
xor
cmp
xor
jmp
fcomp
icebp
mov
in
std
xorb
jmp
aam
lret
lret
faddp
cmc
sar
out
cld
std
std
lret
xor
add
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
in
cmp
or
into
cmc
loop
shrl
cld
xor
hlt
fmulp
std
fnstcw
in
fcomp
fldl
mov
xchg
out
shl
iret
xlat
lret
cmp
in
cmp
stc
clc
fcmovb
add
rcr
fadds
sti
repnz
mov
in
xor
aas
sti
shl
out
xlat
hlt
fcmovnbe
stc
in
in
jmp
out
int
std
xchg
cmc
lret
in
cmp
fucomp
fiaddl
testb
in
in
imul
cmp
sti
lock
icebp
ret
int3
cmp
mov
hlt
xchg
jmp
out
shl
xor
sarb
cmp
fcmove
ljmp
in
ret
adc
decb
imulb
shr
lock
cmp
iret
rcl
in
cmc
in
jecxz
fdivp
out
out
adcb
in
out
lret
sarl
fcmovnbe
and
call
xchg
stc
ljmp
cmc
in
fstpt
xor
ss
aad
xchg
xchg
repz
icebp
std
mov
shll
out
sarb
fprem
iret
and
aad
out
sub
in
xchg
sub
fstp
int3
hlt
incb
mov
fimuls
enter
jmp
ss
jecxz
cmp
xor
aas
out
loopne
mov
jmp
mov
jmp
loop
out
into
icebp
cld
out
aas
ss
rcr
out
neg
loop
in
sti
leave
rcl
enter
repnz
cmp
cmp
cmp
loope
int
cli
call
xlat
decl
lret
out
rcr
in
stc
iret
std
fistpll
cmp
clc
ret
test
out
test
icebp
int3
aad
int
cmc
sti
ss
fcomip
ljmp
out
out
call
addl
cs
aas
ljmp
aas
fstp
xchg
mov
enter
aad
rcl
sar
cmp
fcmovbe
lock
xor
aad
jecxz
lret
xchg
loope
int
ffreep
call
fdiv
fcmovu
sarl
sarl
lret
jecxz
mov
loop
out
mov
sar
icebp
cmp
ss
clc
std
shl
fcomi
sti
fimull
xor
int3
in
ss
cmp
ss
cld
xchg
cmc
repnz
mul
out
jmp
out
lock
aas
repz
addb
loop
jmp
fsubr
in
into
iret
xchg
cmc
nop
ror
not
repz
neg
cmp
shr
in
test
leave
mov
test
std
nop
jmp
lret
out
call
call
ljmp
cmp
jmp
mov
faddl
fincstp
ror
lret
lret
neg
ret
and
cli
fcomp
fucomip
mov
out
jmp
icebp
fcmovnbe
out
stc
fdivrl
jecxz
in
call
cli
sti
mov
lret
int3
repz
ljmp
ds
jecxz
shl
stc
call
lea
xchg
repz
out
clc
in
aam
stc
ljmp
cli
jecxz
mul
out
ffree
in
in
ror
repz
int
clc
xor
cmp
out
fstpt
fdiv
out
rcr
test
mov
sti
test
lock
lock
out
ljmp
xlat
lock
lock
test
les
iret
or
leave
in
nop
ret
sub
cmc
jmp
call
out
loopne
fcmovne
or
in
jecxz
test
hlt
repnz
sti
test
div
xlat
incb
enter
addl
ret
cmp
sarb
jmp
cmc
iret
fcmovnu
repnz
test
lret
mov
jmp
xlat
cmc
cs
leave
aas
lret
out
ss
aam
std
aas
in
mov
enter
icebp
xor
out
fsqrt
xor
rcr
repz
mov
fcmovne
repnz
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
inc
jl
flds
jl
out
cld
loop
in
xchg
ror
cs
cmp
xor
lock
cmp
fmull
xlat
loop
fucom
nop
mov
xor
lret
jmp
sub
shl
and
int
ror
cmc
fcompp
rol
repnz
sti
cmp
cmp
aam
cmp
fildl
aaa
ss
out
cmp
rcr
xchg
idivl
fcmovu
lret
enter
rorl
xor
iret
cmp
out
out
test
stc
testb
mov
testb
xchg
enter
lret
lret
lret
shl
rcl
loopne
shl
decb
iret
out
int3
in
cmc
jmp
div
stc
ss
fcmovnu
cld
or
ret
repz
xchg
neg
loopne
in
fisttps
xor
cmp
fcomi
shr
ror
xlat
out
shl
aad
cli
lea
loope
out
mov
iret
das
fxch
aaa
bnd
lret
loope
cmp
out
mov
mov
in
loop
shlb
leave
xor
int
movb
into
hlt
call
loopne
fcmovu
ljmp
lret
test
cmp
ret
shr
shl
leave
xabort
fnstsw
mov
nop
cmc
ror
sar
mul
fucomi
int3
sbb
std
test
in
orl
aad
lock
cmp
lret
in
push
cmp
cmp
adc
rcl
leave
aam
int
in
ljmp
sub
ds
lret
fildl
test
hlt
ret
mov
icebp
shr
hlt
int3
repz
idiv
ret
fmulp
clc
std
loope
cmp
decb
les
rcl
lret
int3
cmp
div
addb
add
lock
xor
leave
out
std
fidivs
cmc
repnz
cmp
aad
out
jmp
xchg
aam
clc
cmp
xlat
cs
in
jecxz
ret
cmpb
repnz
jmp
popl
lret
fnsave
aam
hlt
aas
cmp
clc
hlt
jmp
clc
xchg
mov
mov
out
repz
std
out
cmp
inc
ljmp
filds
xchg
xor
cld
xor
repnz
lret
enter
cmp
jecxz
stc
rcr
sar
out
call
cld
test
out
fidivs
fsubr
jmp
loop
xchg
shr
mov
jecxz
fdecstp
cld
adc
ror
dec
xor
clc
repz
jmp
repnz
fxam
in
orb
test
lret
jmp
in
int
jmp
ds
std
aam
shl
imul
fimull
test
in
jmp
out
xor
sti
std
das
stc
hlt
testl
fnstsw
mov
out
in
call
icebp
cmc
neg
loop
adc
div
and
fmul
iret
out
call
xor
cmc
cmp
cli
xlat
cmp
out
out
stc
clc
addb
int
mov
icebp
div
xor
lret
call
neg
repz
lret
mov
out
mov
in
into
icebp
imul
lock
lret
cmp
ds
fiaddl
mov
testb
mov
int
out
fsubr
into
int3
into
rcr
jmp
mul
fsub
xlat
repz
repz
int
in
mov
aas
out
fldcw
clc
stc
das
cmp
ror
in
lret
out
repnz
hlt
sbb
int3
incb
int3
xor
cmp
sarl
jmp
repz
shl
cld
xchg
aam
addl
rcl
in
fst
fsubr
aas
iret
int
out
repnz
fucomip
test
out
and
out
mov
cmc
fdivp
xlat
out
xor
cmp
lret
xchg
ds
xlat
cli
in
enter
loope
int3
into
rcr
clc
fld
shll
cmp
cli
test
test
add
lret
aam
fstp
fisubrl
push
int3
add
jl
flds
jl
xchg
repnz
jmp
les
xchg
xchg
out
xor
repz
in
into
stc
shr
in
and
sar
call
int3
jmp
xchg
fsubrp
int
in
fdivrp
mov
sti
xor
cmp
adc
test
fucom
adc
loopne
int
xor
shl
lock
into
xor
cmp
aam
sbb
out
sti
xlat
rol
fcmovu
loopne
repz
xchg
lret
lret
lock
rcr
into
aas
int3
xlat
fnop
shr
fst
fsubrp
ret
int3
test
loope
xor
lret
ret
ret
out
ror
cmp
in
cmp
loope
aas
ds
push
lret
mov
xchg
in
hlt
in
ret
lret
out
hlt
xor
aam
loopne
enter
popl
mov
rcl
in
cmp
in
cmp
rcr
fsincos
add
cmp
mov
in
mov
leave
into
call
ret
clc
aaa
in
cli
xor
loopne
cmp
loopne
jmp
dec
fcompp
out
mov
sub
lret
xor
out
aad
fdivl
cmp
in
neg
in
fadd
stc
ret
fcmovnu
icebp
fcmovbe
aad
in
call
ljmp
into
ret
repnz
incb
lock
in
mov
hlt
xor
ror
aam
iret
ljmp
jecxz
sar
lret
fimull
sub
in
jmp
fcmovnbe
int
int
rolb
jmp
mov
icebp
mov
xchg
xchg
ljmp
sti
cmp
jmp
in
add
loope
fld
iret
in
in
repz
enter
fucomi
fcmovnu
aad
leave
aad
out
icebp
cmp
cmp
sar
in
jecxz
iret
mov
xlat
out
cmp
in
xor
cli
icebp
fiadds
jecxz
out
addb
in
xor
cmc
sti
not
loope
out
cmp
cmp
xor
test
mov
in
leave
sar
cld
rcr
leave
hlt
loope
clc
enter
clc
fstpt
iret
cmp
mov
in
xchg
rcr
xchg
shl
loope
ss
xor
cmp
int
std
sbb
xchg
out
or
repz
cmc
cmp
lret
in
icebp
std
aad
cli
add
shl
test
fcmovnu
stc
jecxz
xor
xor
lret
sub
call
aad
ds
lock
xchg
enter
jmp
xor
cmp
f2xm1
clc
int3
out
cmp
and
xchg
aad
cld
fdivrp
mov
xchg
ret
rcr
aam
shl
cmp
cld
div
shr
mov
lret
mov
lret
shr
shl
call
enter
xor
out
repnz
jmp
out
das
xor
cmp
hlt
aad
jmp
cmp
cmp
mov
lret
lret
loope
repnz
int
imul
icebp
in
sti
ror
cmp
cmp
stc
roll
loope
loopne
jmp
stc
xor
lret
int
repnz
fmul
mov
lock
hlt
in
ljmp
cli
fdivrs
iret
rcl
cmp
roll
loope
iret
lret
loop
xlat
loope
ss
out
xor
cmc
aam
fcom
aam
incb
flds
in
and
stc
aaa
out
fucomp
fcmovbe
idivl
adc
mov
mov
cmp
decl
aaa
icebp
vpsllq
jmp
cmp
out
lock
in
ret
std
loop
fld1
mov
fcmovu
int3
mov
lock
enter
imul
leave
cmp
clc
xlat
test
aam
mov
test
ljmp
in
cld
cli
int3
loope
out
sti
sarl
mov
fmull
lock
leave
xor
xor
int3
cld
xlat
clc
xlat
cmp
cmp
ss
aad
loop
sti
loop,pt
std
xchg
out
out
xlat
xor
cmp
aas
addb
ror
fisttps
rorl
xor
lret
hlt
xor
cmp
or
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
push
addb
add
out
ret
test
mov
sub
addl
repz
cs
fcmove
cmp
hlt
iret
in
leave
in
rolb
nop
loope
in
lock
xor
jecxz
repz
xor
shl
leave
out
std
in
incl
ret
sub
out
stc
sbb
sar
cld
faddp
fadds
mov
fcomip
xor
xor
out
cmp
loope
aam
fsub
mov
ds
clc
mov
roll
loopne
clc
int
iret
fucomi
rcl
shl
div
xchg
hlt
mov
in
in
repnz
call
xor
cmp
shl
in
adc
in
and
xlat
xchg
jmp
lret
iret
das
xor
lret
aam
cmp
icebp
mov
roll
xchg
icebp
mov
xchg
sub
cli
lret
clc
aad
icebp
cmp
in
cmc
ret
fdivr
mov
in
das
repz
ror
stc
cli
cmp
loop
test
repnz
jmp
xchg
std
in
mov
stc
int3
cmp
bnd
shr
xlat
cmc
in
movl
repnz
sti
jmp
hlt
jecxz
clc
test
test
cli
fisttpll
xor
cmc
rcl
lret
hlt
out
or
fcom
icebp
cli
icebp
call
fmul
loop
iret
lret
xlat
ror
ljmp
in
xlat
ret
cmp
fadds
fsubr
lret
repz
xchg
cmc
loopne
shlb
lock
sti
call
cmp
shl
enter
xchg
xchg
xchg
ljmp
ljmp
repnz
out
jecxz
loop
fildl
xchg
in
aam
ret
jmp
out
ds
cmp
addl
in
mov
xor
cmc
test
icebp
cmp
fdivr
aam
ret
cmp
fucomip
fcmovb
fcmovu
lret
aad
lret
cmp
rcl
cs
div
cmp
xor
repnz
rcl
std
mov
addb
adc
xor
repz
stc
aad
out
rol
sti
std
cmp
mov
repnz
aad
cmp
xor
cli
xor
lret
rolb
out
jmp
nop
mov
aad
in
sub
rcl
out
cld
int3
idivl
cmp
out
ffreep
mov
leave
test
int3
mov
clc
int3
fdivrs
repz
leave
fsubp
out
loope
stc
stc
stc
xor
test
hlt
rorl
aad
cmc
loopne
fcomp
jmp
cld
cmc
test
xchg
adc
mov
in
loop
ret
mov
in
cmp
in
cmpb
fucom
in
roll
out
jmp
xchg
in
aad
out
lret
in
cmc
stc
not
rcr
fcmovu
lock
loopne
xchg
ljmp
ss
filds
fiaddl
cmc
lret
loope
xchg
loop
cld
lret
ror
int
ror
fstp
clc
cmp
xor
sar
fsubp
faddl
xchg
out
mul
fcmovbe
call
cld
fst
test
fadds
sub
cld
int3
test
call
clc
out
iret
aad
into
out
aas
lock
icebp
fsubrp
cmc
test
xchg
enter
xchg
xor
lret
fcmovbe
xlat
fmul
call
lock
test
jecxz
out
shl
mov
in
loopne
cmc
in
aam
std
bnd
out
fcmovnb
fnstsw
fsub
aam
mov
out
shl
xchg
ljmp
cmp
hlt
loopne
xlat
add
out
jecxz
stc
sti
ljmp
lret
sarb
cmp
call
ljmp
rcr
fstp
jmp
fistl
xlat
ds
ss
aad
aam
cmpb
fcomip
loop
sti
jmp
clc
or
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
push
lods
sub
lret
jl
mov
das
lret
xor
xor
fcmove
int
out
out
loop
cmpl
fiaddl
out
in
enter
int
in
stc
fst
lret
out
cmp
mov
in
lret
out
cld
loop
lret
call
xlat
loopne
stc
loopne
addl
ljmp
in
xor
int
cmp
repnz
std
aas
test
hlt
fucompp
fdivp
jmp
in
out
lock
xlat
idiv
divl
xor
std
idiv
fnstcw
iret
ret
icebp
cmc
mov
sbb
out
shr
int3
jmp
into
lret
aad
cmp
icebp
sar
bnd
out
fucomp
fmuls
shll
hlt
out
xlat
enter
int3
loope
fcom
mul
aam
fmuls
or
out
fdiv
hlt
jmp
out
ror
fcomi
cmp
fdivp
icebp
hlt
adc
out
in
decb
ret
shl
cmp
call
cmp
cld
in
aam
hlt
fnclex
out
xchg
into
shr
in
stc
repnz
aam
cli
ds
test
in
mov
lret
mov
out
out
aaa
das
leave
lock
lret
cmp
sarb
int
lock
test
loope
shl
out
ret
xor
out
into
aad
lret
cli
cmp
shl
sti
ret
jecxz
leave
std
rorl
out
xor
in
std
lret
xorb
test
jmp
std
lret
xchg
mov
into
out
jmp
xor
iret
cli
ss
cld
cli
xlat
aas
xlat
fiadds
testb
icebp
sbb
enter
xor
aam
out
cmp
leave
hlt
cli
rcr
out
xchg
call
in
roll
sub
icebp
loop
cmp
iret
cld
std
cli
aad
rol
xlat
mov
fiaddl
xor
lock
icebp
into
out
aas
iret
out
loope
aad
cli
mov
fmull
xchg
ljmp
fcmovnb
shl
cmp
rcl
cmp
hlt
sar
out
lds
fmull
xor
cmp
xor
sti
stc
adc
sar
mov
aad
mov
xchg
xchg
call
int3
sti
fdivrs
cmp
into
repnz
xor
ret
out
in
call
out
bnd
div
aaa
stc
fcomp
cmp
cmp
cmp
cli
repz
aad
int
repz
cmp
cs
mul
cmp
and
jmp
mov
lret
loop
int
xchg
jmp
cs
in
call
repnz
shl
test
in
jecxz
neg
in
leave
ljmp
sub
int3
in
out
fidivl
fnstcw
std
xlat
stc
cmp
aad
aam
out
xchg
mov
icebp
icebp
fstl
in
xor
aad
lock
call
xchg
cld
mov
xchg
int3
test
icebp
hlt
int3
not
out
in
into
iret
addl
lea
aad
out
ss
ljmp
ror
clc
xchg
shl
inc
mov
lret
in
rol
repz
aaa
into
repnz
fcomip
fldl
lret
xchg
rolb
out
xor
out
aaa
icebp
hlt
lret
rcl
ds
roll
faddl
ror
and
aad
xor
sti
xlat
lret
push
fidivrl
loopne
aad
fsubp
loop
ljmp
shl
xor
stc
xor
out
in
les
repz
sub
iret
test
fsub
loopne
fiadds
xchg
iret
aad
aaa
aaa
in
shl
iret
int
cli
cmc
fdiv
xor
stc
lret
enter
fisttpll
loope
jmp
call
sti
sti
jmp
loope
hlt
ffreep
incl
ljmp
sub
call
fcmovb
fdivrs
aad
aad
in
xchg
call
icebp
call
hlt
ljmp
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
pop
push
jl
add
adc
repnz
out
jmp
cmp
in
std
std
mov
or
jecxz
sti
repz
ss
stc
testl
testb
cmp
adc
sub
sarb
aas
ss
cmp
xchg
enter
xchg
mov
in
into
ret
xor
shr
cmp
int3
fsubr
xor
cmp
out
ffree
cld
call
xchg
mov
int3
rcl
out
rol
loop
sar
cmp
aaa
out
cmc
hlt
cmp
ds
loope
in
jmp
jecxz
enter
les
cmp
shl
adc
ret
cmp
cmc
fnsetpm(287
mov
loope
enter
aad
out
cmp
hlt
int
addl
std
cmp
rolb
das
aam
in
shl
fistpll
cli
fsubr
rol
ds
aad
cmp
cli
mov
test
rol
in
loop
shr
cmp
out
ds
cmp
xlat
dec
jmp
lock
jmp
call
repz
std
fcmovnu
xor
cmp
shr
imul
repz
xchg
cli
shr
xor
lret
out
loopne
sbb
xlat
cld
xor
xchg
jmp
jmp
clc
in
sar
out
sti
aas
int
in
repz
cld
leave
frndint
fcmovnu
nop
loope
std
into
mov
out
out
in
in
fxch
rcl
in
sar
xlat
cmc
and
stc
sti
loopne
decl
xchg
call
int3
cmp
xor
enter
sbb
jmp
mov
in
mov
mov
xor
ret
ss
cli
aad
cli
test
mov
xchg
mov
xor
rcr
leave
icebp
icebp
iret
aad
iret
xchg
hlt
in
test
mov
out
ljmp
shlb
test
ret
cmp
test
dec
in
xchg
lock
xlat
iret
in
cmp
iret
cmp
aad
sbb
and
aad
test
aad
repnz
xor
hlt
aam
cmp
xchg
jmp
out
shl
jmp
xor
jecxz
cli
jmp
repz
in
fdiv
fucomi
or
enter
lret
jmp
xor
jmp
xlat
stc
shl
rolb
ret
xchg
loope
clc
mov
icebp
xchg
xchg
xor
loop
aaa
in
out
rcr
ss
cmp
lock
fucomip
lret
out
iret
aaa
cli
sarb
not
push
cmp
cmc
enter
loopne
iret
nop
jmp
jmp
lret
loope
ret
shl
jmp
loope
int3
cmp
hlt
sub
cmc
mov
mov
mov
int3
jecxz
enter
cmp
in
cmp
ljmp
out
fsubrp
enter
ljmp
sarb
cmc
cmpl
rol
lret
testb
ror
xor
ljmp
not
xlat
fadd
fdiv
lock
mov
call
hlt
out
fldl2t
out
lret
cs
mul
ret
aam
fdivr
icebp
loop
rcr
fadd
enter
jmp
out
in
out
iret
repz
hlt
shl
clc
in
cmpl
loope
hlt
shl
aas
testb
mov
test
shl
in
das
clc
jmp
fst
loop
rolb
fisttpl
out
mov
aaa
out
ror
fucomp
cmp
cmp
roll
sub
incl
in
leave
cmp
in
in
les
lea
xlat
in
sti
int
int
cld
nop
cs
repz
rcl
cmc
cmp
lock
aam
testl
sub
aad
cmc
lret
cli
std
out
inc
stc
mov
testb
call
nop
jmp
fcom
cld
out
sti
ss
int
aaa
aas
fucom
ffree
mov
push
decl
data16
add
rcl
aad
fcmovne
scas
push
mov
repnz
cmp
pop
jl
lret
jl
leave
mov
out
xor
jmp
call
cmp
enter
rcl
rcl
cld
lret
mov
fstp
cli
fisttps
ret
cmc
iret
rcr
xor
cmp
fxtract
cmp
aam
cli
out
mov
fadd
test
xchg
xor
cmc
enter
lret
ds
fdivrp
loop
fiadds
idiv
cli
out
lret
mov
lret
int3
xor
hlt
cmp
sbb
test
clc
test
cld
fcomp
cld
iret
xchg
xchg
xchg
xor
stc
in
aaa
enter
cmp
lock
xchg
ds
mov
rorl
jmp
xlat
out
test
rcr
repz
not
in
loopne
xchg
int3
hlt
lret
xor
fdecstp
cmp
fnstcw
test
mov
out
out
std
div
xor
leave
icebp
aas
cmpb
addl
aas
in
lret
loopne
xchg
aaa
repz
icebp
out
out
lock
sbb
ret
clc
in
stc
ljmp
stc
xor
jmp
fcmove
sbb
test
jmp
in
lock
test
loop
ret
into
dec
cld
xlat
aaa
loop
cmc
hlt
cmc
mov
lret
cmc
xchg
ret
icebp
cmp
cmc
loop
fidivrs
aas
roll
sub
lret
xchg
repz
call
jmp
loopne
shl
in
rol
lret
leave
jecxz
mov
xor
in
call
shl
stc
rol
test
lret
decb
mov
into
int3
in
aaa
repnz
xlat
repnz
repnz
leave
in
test
fstp
mov
iret
ss
into
in
fucomip
in
xor
fcmovnbe
iret
or
incb
lret
enter
les
das
fprem1
leave
loopne
fsubp
cmp
xlat
sti
lret
clc
xchg
xchg
test
aam
into
cmp
neg
lock
cmp
shl
and
lret
jmp
cmc
lret
xor
call
repz
shr
in
in
out
ljmp
ret
out
idivb
repz
ss
out
loopne
fstp
cli
enter
mov
out
leave
cli
xchg
cld
xchg
into
enter
jmp
rcr
cmp
jmp
icebp
cmp
loope
xchg
mov
rol
les
lret
cmp
shl
sti
cli
aas
add
ret
jmp
int
into
in
fmul
lret
fidivs
fsqrt
lret
ljmp
loopne
clc
xlat
out
sub
fcmovbe
dec
xor
aad
icebp
leave
out
jmp
lock
xchg
loope
xchg
cmp
call
icebp
xor
jmp
out
rol
cli
rol
cmp
repnz
testb
xchg
mov
cld
shll
lret
xor
ss
ds
out
icebp
stc
mov
out
int
fimuls
out
repnz
lret
rcr
in
icebp
jecxz
fadd
repz
aad
xlat
call
out
ljmp
enter
out
cld
iret
std
fstp
std
cli
repnz
lret
loop
iret
xor
cmp
in
lock
cmp
repz
jmp
mov
xchg
out
mov
out
repnz
lock
aaa
ror
aad
fdivrl
loopne
mul
stc
into
fcmovnu
nop
ror
in
loop
fdivr
cmp
xlat
lret
leave
aad
iret
and
in
loop
xor
movl
into
jmp
stc
xor
cmp
sti
aam
ds
cmpl
fmul
out
test
rol
loop
ror
sti
cld
aaa
dec
xor
icebp
cli
jecxz
int
loop
out
in
cli
cmc
mov
in
lret
in
lock
icebp
lret
lret
sarl
flds
jmp
lret
aaa
rcl
aad
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
xor
mulb
pusha
jl
lret
jl
sarb
clc
xor
aam
icebp
cmp
sbb
icebp
jecxz
lret
in
mov
out
xchg
test
loopne
in
lret
lret
cmc
jmp
shlb
faddl
loop
sub
jmp
xor
aam
iret
leave
aam
divb
aam
repz
fsubrp
out
loope
in
orl
in
stc
rcr
cmp
std
ret
sti
out
cli
jecxz
hlt
aad
lret
stc
loop
ss
cmp
aas
fcompp
iret
aas
loopne
repz
fiaddl
out
jecxz
lret
icebp
out
xor
cmp
cmp
fcmovnb
fcmovnb
add
cmp
clc
in
out
cld
shl
cmp
ljmp
cmc
enter
sbb
cld
repnz
loop
loope
das
aad
rcl
out
int3
cmp
lock
div
loop
lret
enter
enter
hlt
cmp
repz
addb
decl
jmp
ljmp
ror
sbb
roll
cli
out
and
cld
fimuls
in
ror
stc
idiv
fsub
int3
shl
aas
xlat
out
mov
out
loop
mov
xchg
rol
lret
enter
clc
call
ret
mov
fisttpll
jmp
mov
ljmp
ss
lret
hlt
in
in
test
shl
mov
loope
int3
and
sub
xor
cmp
repnz
int3
hlt
filds
testb
into
in
aaa
out
rcl
les
iret
int3
mul
jecxz
idiv
rolb
loopne
cld
cld
out
fstp
rcl
call
iret
int3
out
fdivrs
ljmp
call
fcmovnu
ljmp
in
repnz
fnsave
ror
fcomp
hlt
test
cld
loop
in
fmul
mov
leave
mov
lret
shl
leave
aaa
test
fbstp
iret
cmp
loop
aam
rorb
jmp
jmp
ret
in
loop
shl
cmp
cld
rcr
fsub
out
fdivp
add
in
clc
int3
mov
cld
loope
cmpl
in
xor
fsqrt
xor
sar
sti
shl
clc
loope
test
ljmp
shr
out
jmp
xlat
loope
in
idiv
cmc
ds
cmc
loopne
ds
loope
jecxz
loop
in
xor
loopne
out
jmp
jmp
fnstsw
hlt
test
in
test
enter
fdivp
ss
sti
divb
into
cmp
lock
stc
shl
hlt
sub
test
mov
out
loope
int
repz
in
shl
fstpt
in
repnz
aas
in
fdecstp
mov
testb
mov
out
rol
cmp
imul
cmp
xor
cli
div
orl
int
fnstcw
ljmp
fcmovnu
ret
into
into
cmp
test
xlat
jmp
ljmp
ss
fdivrl
ljmp
repnz
out
ret
mov
orl
fcom
cli
lret
ss
clc
aad
lock
cli
int3
fsub
int3
mov
sub
shr
sub
lock
ss
loope
add
fstp
mul
ffreep
test
lret
mov
leave
lret
out
xchg
xchg
cmc
ljmp
fnstcw
rcr
iret
test
clc
add
in
and
jecxz
aad
sub
cmc
lret
xor
xor
icebp
int3
stc
aas
loop
cmp
sub
fucomip
ljmp
lock
out
ss
stc
repnz
loop
sar
test
aam
test
test
addl
int3
icebp
in
in
aad
fsubp
cmp
in
into
xlat
cmp
out
stc
movl
fcmovnbe
stc
shl
xlat
cmp
sarb
adc
not
out
xchg
jmp
icebp
loop
leave
out
cli
cmpl
and
xor
mov
add
jmp
ret
int
lret
sub
dec
mov
fs
lret
jl
imul
cmc
test
xchg
loopne
in
xor
cmp
aad
in
loope
fsub
aas
rol
xor
rcl
orb
int
orb
out
jmp
cmp
shl
fiadds
mov
out
xchg
adc
xor
shr
ror
into
cmp
sti
xlat
xchg
ret
xor
cld
decl
in
in
xor
fst
ret
out
ret
mul
lret
cld
fisttps
icebp
shlb
rcr
icebp
repz
repz
and
xlat
cld
loope
jmp
into
in
mov
sti
leave
fsubr
lock
ljmp
rcr
lea
out
adc
xor
int3
cmp
lret
cmc
xlat
stc
repnz
in
ret
movl
ret
aam
fsincos
sar
cmp
push
xor
aad
hlt
ret
aad
lret
into
or
int
cmc
rcr
loop
fscale
into
xabort
sti
bnd
sbb
xchg
jmp
not
out
repz
out
lock
faddp
test
and
vpsubusw
aas
or
xchg
filds
sarb
fcmovnbe
cli
aam
jecxz
xchg
fabs
mov
int3
shl
divb
xor
ss
repz
loopne
ret
cld
lret
mov
leave
int
repz
xor
int
loope
xlat
cld
jecxz
aas
test
icebp
test
sti
sti
test
fsts
repz
int3
lock
in
ss
aam
shll
in
sti
repnz
cld
cli
add
dec
loope
lret
out
ds
repz
and
cmc
jecxz
std
fucom
stc
xlat
cmp
lock
addl
sar
xor
shr
ret
fstpt
in
sar
in
in
int
repz
pop
sub
sub
leave
leave
cmp
lret
rcr
roll
cmp
int3
fld
fimull
loopne
test
fnstsw
cmp
out
in
out
lret
call
out
lret
xor
stc
xlat
test
xlat
repz
mov
in
in
in
cmc
out
xor
iret
rcl
aad
icebp
cli
cmp
div
aad
enter
jecxz
loope
shr
jmp
stc
shlb
cmp
repnz
jmp
idivb
fdiv
aas
idiv
fiadds
shl
shr
xlat
das
in
cmp
fdiv
aad
fdivrp
aas
ds
jmp
test
in
fmulp
jmp
adc
shlb
aad
repz
fcmovne
into
cmp
test
clc
cli
vpaddw
int3
clc
out
jecxz
test
loopne
icebp
into
cmp
xor
lret
faddl
leave
sti
ljmp
test
out
fdivp
ror
ret
shl
hlt
repz
push
rcr
xor
shr
orb
in
rcl
xlat
xor
repz
incb
rorb
clc
fmuls
in
out
cmp
in
das
sti
cmp
fld
fcmovbe
repz
loope
loopne
ret
in
std
iret
mov
call
sti
call
shl
iret
sti
sar
cli
fucom
movb
xchg
sub
ror
call
icebp
sti
rcl
fldl
xchg
fsubp
shl
cmc
xor
jmp
int
in
lock
adc
and
mul
in
fnstsw
dec
std
call
lret
out
jmp
ds
lret
repz
cld
repnz
orl
vcvttpd2dq
shr
ror
out
loopne
clc
in
out
int
out
out
loopne,pn
mul
cmp
cmc
std
shl
iret
int
loopne
jecxz
fsub
jmp
xchg
sub
cmp
out
cmp
aam
int3
fprem
cmpb
aam
cld
ret
ret
xchg
std
std
out
mov
mov
mov
mov
jmp
ds
int
int
int
mov
xor
lds
jl
add
xor
repnz
std
into
leave
repz
sar
call
cmp
filds
aad
in
in
enter
shl
call
ret
fiadds
call
test
loope
nop
iret
mov
xlat
sti
fcomi
repnz
faddl
shl
repz
fcomi
mov
loope
lock
hlt
ror
out
lock
cmc
out
lret
not
in
fiadds
ret
cli
xchg
call
loopne
shl
xor
std
cmp
cmp
cmp
cmp
cli
enter
mov
in
xchg
xlat
jecxz
in
clc
cld
aad
out
cmp
rol
jecxz
not
xchg
test
lret
xchg
int
int3
xor
out
in
lret
fdiv
aaa
out
cmp
cli
cli
mov
xchg
ljmp
out
das
loope
xor
lock
jmp
in
loop
sbb
xchg
jecxz
lret
iret
cli
fidivl
int3
cmc
repnz
cmp
testl
fcmove
fcmovbe
out
std
hlt
sar
cs
aad
cld
cmp
icebp
cld
fucomip
ret
xlat
ffree
mov
neg
out
dec
xchg
fmul
repnz
in
cmp
aad
cmp
xlat
into
aad
in
xlat
mov
fstp
loopne
mov
in
rorl
ljmp
lret
ljmp
rol
or
call
aad
imulb
in
sar
fistpll
xor
ss
cld
stc
sti
test
ds
rol
call
fcmove
out
test
hlt
shr
xor
lret
fidivl
lret
in
cmc
cmc
repnz
addb
jmp
call
cmp
test
fcom
fucom
movb
lret
xor
sub
xor
leave
pushl
rcr
xor
adc
ret
call
fmulp
xchg
sub
loop
icebp
ljmp
cli
lock
fcos
repnz
loopne
int3
fxch
sti
int
mov
shll
sub
stc
into
repnz
rcr
repz
ret
testb
xchg
call
in
in
iret
leave
aam
not
iret
cli
fdivr
fld1
std
loop
iret
nop
repnz
jmp
lret
xor
shlb
flds
hlt
rcr
ret
lret
fmuls
rcl
in
shl
lock
cmp
fsubr
fisttpll
mov
jmp
fldcw
not
jmp
aam
fstpt
add
cmc
sti
loope
mov
shr
stc
ror
ljmp
ret
in
xlat
fadds
rolb
loop
lock
int
out
ret
fld
in
repnz
aaa
in
addl
mov
mov
mov
fisttps
idivb
jmp
repz
fcom
in
faddl
mov
mov
int
iret
lock
loope
rol
hlt
repz
cmp
ret
shl
mov
clc
rorl
out
aaa
jmp
dec
icebp
fistpll
fdivr
sbb
loop
cld
sbb
icebp
test
lret
aam
jecxz
ret
into
clc
iret
lret
in
ds
shl
incb
xchg
in
shr
jmp
shlb
fld
leave
fucomp
ljmp
rcr
aas
fsub
lret
sti
loop
xchg
icebp
in
mov
sti
lret
lret
in
sarb
and
fadd
ret
dec
ffree
orl
iret
fprem1
out
fcmovbe
out
cmc
shl
fucom
cld
std
ret
addl
jecxz
fsubp
lret
imul
stc
call
fst
addb
xchg
xlat
out
leave
jecxz
and
leave
lds
jecxz
rcr
aad
in
cmp
cmp
int
rcr
shl
mov
jmp
orb
sub
in
fidivrl
int
iret
std
out
aas
jmp
test
ret
addl
out
xor
jmp
cmp
loope
mov
nop
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
xchg
and
jl
add
ds
div
mov
int3
into
and
ljmp
fldlg2
aad
aad
ret
rcr
ljmp
test
shl
idiv
div
fucomip
hlt
not
icebp
jecxz
jmp
or
out
out
aad
into
shr
into
lret
lret
lret
cmc
cmp
std
test
jmp
xlat
loopne
repnz
stc
aad
out
fcom
imul
into
out
lock
out
clc
enter
xchg
fisttpl
icebp
fucomp
xlat
leave
idiv
sar
loopne
mov
loope
loope
loope
fimull
repnz
stc
cmp
lret
aam
div
out
hlt
xlat
fsubr
and
jecxz
loopne
xchg
out
aaa
cld
out
stc
into
shl
and
roll
ret
loope
jecxz
hlt
out
ljmp
test
loop
not
in
jmp
fmul
int3
sub
int3
sar
out
out
xlat
clc
xlat
cli
in
loopne
xchg
in
jecxz
fmulp
out
in
out
lock
out
shl
cld
div
out
shl
ret
not
aam
leave
mov
mov
sub
repz
enter
leave
in
aad
cmc
rcl
aam
aas
loopne
fcmovbe
clc
lret
xchg
into
xchg
nop
and
cmp
ss
cmp
fidivrs
sbb
lea
std
aam
les
lret
shl
xor
lret
filds
ret
pop
or
int3
icebp
call
fmul
sarl
iret
ljmp
fcom
incl
or
jmp
xor
sti
icebp
adc
sti
fld
testl
lret
fildll
xor
xor
loop
icebp
cmp
aam
repnz
loopne
fdivrp
lret
call
fucomip
mov
jecxz
rol
iret
cmp
aad
cmp
lock
test
enter
loope
int3
into
repz
in
rol
call
int3
cmc
fld
testl
out
mov
mov
das
xor
out
div
jmp
repnz
ret
cmc
mov
adc
ljmp
fcoml
iret
icebp
leave
cmp
jmp
ror
fadd
jmp
imul
clc
mov
aad
out
lds
jmp
aad
roll
fdivr
fsubp
stc
fildl
cs
repz
int
xlat
int
out
sarb
std
testl
jecxz
sbb
mov
jmp
clc
fnstenv
sub
rcl
clc
cmp
cld
out
in
cld
out
in
fstp
jmp
repnz
mov
aad
loop
int3
iret
xlat
jmp
shl
sbb
out
testl
hlt
repnz
out
cli
out
fcmovnb
cmpl
test
repz
sti
cld
xchg
lret
mov
iret
lock
loopne
cmp
call
jmp
in
in
loopne
aad
cld
xchg
decl
enter
xor
icebp
cmp
rcr
rcl
cld
cld
and
loop
xlat
out
loope
loope
xchg
lock
sti
out
rcl
jmp
aam
xlat
sti
out
jmp
in
loop
mov
in
cmp
out
in
jmp
call
iret
sti
in
fcmovbe
repz
mov
leave
leave
mov
jmp
neg
fmul
int
cmpb
loopne
mul
fstp
xlat
lret
ljmp
shrl
das
in
in
iret
cmp
cli
loopne
fstp
cmp
fsubp
stc
out
mov
inc
out
cld
xchg
jmp
int3
fdivr
aam
cmp
repnz
ret
loopne
loop
clc
mov
into
dec
rcr
shl
aad
enter
cli
fsubp
sar
call
loope
in
out
fisttpl
sub
shl
rcl
fcom
sti
ss
fcmovu
cmp
cmp
jmp
cmp
jmp
aad
enter
fsts
pop
scas
icebp
fdivs
jl
add
lock
das
shl
fcmovnb
cmp
add
vpsubsb
in
test
fnsetpm(287
decb
loop
sub
aas
neg
sar
out
ret
ljmp
lret
jmp
lret
div
aad
cmp
rolb
mul
cld
sbb
ljmp
aad
repz
xor
loopne
std
fcmovnbe
hlt
sarb
ljmp
iret
xchg
test
int
shl
shr
cmp
call
into
sar
hlt
fmuls
int
repz
in
imul
cmp
aad
cmp
fidivrl
stc
iret
in
out
rol
div
test
out
out
rorb
int3
xor
fxch
in
cld
inc
fsin
icebp
and
clc
sub
rol
call
cmp
xor
int3
ds
aam
sbb
clc
cmc
out
loop
jmp
lret
iret
aam
fcmovbe
sti
rcr
cmp
loop
icebp
out
xchg
loopne
lock
test
rcr
jmp
aaa
xlat
ffreep
neg
and
fildl
ljmp
jmp
aas
lret
icebp
rcl
loopne
repz
fcmovb
loop
neg
add
mov
iret
aaa
stc
icebp
repnz
not
repz
fucomp
int3
hlt
cmp
testl
das
rcl
cmc
cmp
cld
iret
addb
test
out
xor
leave
rcl
aaa
into
enter
loop
lock
lock
fcomi
leave
xchg
flds
xor
mov
leave
aaa
cli
sti
ret
lock
fnop
jmp
test
mov
lret
ss
cli
fcomi
aaa
int3
aad
xor
cmc
adc
ret
sarb
fcmove
lret
std
mov
mov
jmp
lret
fmul
fmul
icebp
cmp
int3
not
clc
out
shl
lret
stc
stc
xchg
std
icebp
jecxz
xchg
sub
jmp
fdiv
sarb
rol
loope
sar
idiv
loopne
in
xchg
and
in
in
in
shlb
int3
xlat
rcl
test
aam
aad
fsubr
fmuls
lret
jmp
cmp
rcl
fld
fst
in
rolb
fdivr
ret
in
in
into
ljmp
cmp
fsub
sarl
neg
shl
fld
mov
std
in
addl
repz
cmp
std
iret
rcl
call
into
loop
adc
sti
loopne
test
repz
ljmp
lret
cmp
not
repnz
ret
lret
sti
clc
test
in
out
ds
xlat
out
jmp
cli
fucomp
cld
aas
xchg
ret
out
in
xchg
in
in
aaa
shl
stc
loop
cli
int3
leave
xlat
cmp
cli
in
std
loopne
and
in
mov
test
ljmp
call
into
ret
incb
xchg
cld
faddp
out
xbegin
aad
jmp
or
loopne
mov
in
xchg
hlt
lret
xor
sub
ror
fnstenv
loope
out
ret
neg
repnz
cld
xchg
lds
repnz
call
lret
in
out
fnstcw
aad
repz
leave
ffreep
enter
mov
out
jmp
ss
repnz
xor
call
cmp
out
clc
dec
jecxz
in
mov
call
ss
in
out
int
in
clc
ljmp
std
ret
ljmp
hlt
sub
in
icebp
aaa
ds
iret
ljmp
clc
ret
out
fmuls
mov
sub
ss
sarl
out
in
xor
cmp
hlt
testl
cld
ror
enter
call
ss
cmp
fcmovu
xlat
call
in
enter
imul
jmp
cmp
std
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
addb
decl
fmul
xchg
xor
nop
repnz
xor
cmp
out
repnz
cmp
stc
std
ret
fiadds
call
and
leave
ret
fcom
xor
lret
cmp
xchg
test
rol
mov
mul
dec
shl
repnz
not
leave
in
cmp
aam
repnz
ffreep
call
ds
icebp
or
xor
rol
ret
call
out
divl
fdivrs
repnz
cli
mov
mov
in
mul
lock
int
int3
leave
jmp
cmp
ret
shl
aam
fsub
and
into
rolb
xor
int3
test
xchg
in
enter
ljmp
xchg
imulb
enter
enter
loopne
cmp
ds
cmc
jmp
fldl
xor
lret
out
in
jmp
idivb
loope
fneni(8087
loopne
cld
stc
loopne
call
hlt
sub
std
xlat
fsubr
cmp
test
fmuls
out
icebp
lock
int
icebp
rcl
lock
out
icebp
repnz
in
fldl
sti
in
aas
fadds
fimull
not
fdivrs
cld
clc
fiadds
loope
in
faddp
les
inc
ljmp
cmp
rol
repnz
icebp
fsubrp
fmull
mov
in
jmp
loopne
repnz
cmp
xlat
loopne
loop
and
loope
jmp
rol
in
in
xor
idiv
lock
and
add
leave
leave
aad
decl
cld
ljmp
stc
fidivrl
stc
cmp
aas
addl
repz
loope
loope
enter
xlat
fdivr
sti
ret
lock
mul
loopne
int
xchg
loopne
loopne
mul
hlt
cld
aaa
jmp
filds
sar
ljmp
call
test
repz
ror
xor
fcmovbe
aad
int
out
shr
xchg
xor
ret
in
xor
stc
ret
rol
shl
jecxz
fcmovnu
cmp
mov
xchg
out
loope
fdivrs
cli
lret
repnz
ror
test
addl
aad
test
cli
test
fst
icebp
ret
in
out
loope
sti
out
std
xchg
jmp
xchg
ret
fdivrs
in
clc
ffreep
stc
in
in
iret
rcr
jmp
loopne
ljmp
mov
cs
xor
cmp
div
test
in
fcmovnbe
into
lret
bnd
xor
xlat
into
cmp
cmp
iret
xlat
in
rolb
sti
mov
loopne
cld
icebp
mov
lret
enter
ss
cmp
cli
xor
jmp
ljmp
int3
shl
das
call
in
xor
fldl
repnz
fcmovnb
xlat
sbb
test
fcmovnbe
int
cmp
fmul
shl
fsubr
aad
fcomp
cli
movb
jmp
das
lock
lock
shl
aam
fmulp
flds
mov
ds
adcl
cld
in
loopne
lret
sti
call
aas
sbb
ljmp
ret
xor
xor
int3
fsub
cmp
cmp
in
rcl
rorb
enter
mov
xchg
jmp
out
rcl
iret
shl
call
ret
call
fcmovb
testl
icebp
leave
shr
loop
xor
aad
mul
sti
ret
filds
ljmp
vpmulhw
xor
sar
lock
repz
std
cmc
fsubp
mov
enter
or
aas
ljmp
int3
leave
hlt
ss
cli
rol
in
cmc
ljmp
inc
in
lcall
jmp
int
into
fcmove
fst
aam
lods
push
pop
dec
push
pusha
je
jl
lret
jl
mov
int
fsubp
push
aam
rcl
out
cmp
xor
cmp
in
leave
rol
test
out
ljmp
ljmp
lret
loope
mov
xchg
out
rcr
xchg
rol
cs
stc
cmp
fcomip
ret
loopne
into
xchg
loopne
cmc
ds
jecxz
mov
rclb
loop
cmp
int
into
cmp
adc
clc
ret
ljmp
in
shl
leave
ljmp
iret
stc
sar
roll
popl
mov
mov
into
repnz
std
lock
cmp
call
fimuls
cmc
cmc
jmp
iret
fdiv
ds
add
sti
shl
loop
stc
fsubp
jecxz
xchg
int3
mov
lret
leave
in
icebp
addl
out
aad
sub
iret
fmul
lret
out
aaa
into
xor
cld
ss
sub
int3
rcl
out
lret
out
loop
mov
lds
xor
lret
out
loope,pt
in
fld
fcomp
hlt
fcom
fcmove
xchg
out
in
in
enter
loop
aaa
jmp
idivb
jmp
cmp
jmp
ds
std
sbb
xor
into
in
cs
cmc
rcl
call
rol
aas
hlt
clc
repnz
fucomp
in
in
fildl
fcomp
iret
fld
cmp
int
loope
mul
fld
out
jecxz
fdivr
loope
std
in
ror
xor
in
lret
xlat
xlat
hlt
loop
jecxz
in
aam
or
ds
stc
mov
lock
leave
test
cli
fnstsw
testl
adc
ficoms
xlat
hlt
divb
xor
in
xchg
xor
not
cmpb
loopne
lret
into
rcl
jecxz
jmp
sti
lock
loop
shr
fdecstp
neg
fdecstp
leave
jecxz
xchg
shl
xchg
in
ss
lret
ror
in
stc
aaa
stc
aad
rcl
ret
enter
ret
mov
enter
jmp
sti
cmp
in
sar
aam
out
lock
out
loop
ljmp
fst
xor
lds
in
fdiv
mov
vpsubusb
xor
in
cmp
xchg
cmc
faddl
call
iret
lock
ljmp
aad
int3
loope
ret
ret
xlat
clc
mov
icebp
iret
int
mov
in
les
iret
xor
xlat
ljmp
shl
cmp
test
mov
xchg
in
mov
loop
aam
enter
loop
loopne
adc
cmp
in
cli
mov
int
in
in
jmp
in
aad
cmp
clc
fstpt
std
loop
hlt
loopne
and
mov
call
xor
lret
cmp
cmp
fndisi(8087
sbb
mov
loope
mov
mov
xchg
loope
test
cmc
repnz
cmp
sarb
cmp
add
cmp
leave
stc
out
ljmp
enter
lret
clc
into
cmp
shl
stc
shl
test
cli
in
icebp
lock
jmp
iret
shlb
cmc
cmp
lret
int
in
sarl
shl
les
xlat
aam
lret
rclb
cs
ljmp
mul
out
into
fadd
adc
cld
ror
rorl
leave
in
jmp
cli
hlt
cmc
ds
cmpl
in
fadd
mov
out
test
cli
fadds
fdivl
ror
cmp
aaa
fidivrl
fnstcw
std
addb
mov
cmp
mov
fucomi
in
std
loopne
ds
ljmp
fdivr
fcmovnbe
aam
cmp
hlt
out
xchg
shr
incl
stc
repnz
aaa
cmp
in
sti
add
sti
in
mov
fxch
test
jmp
in
lock
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
call
jle
jl
add
in
sti
repz
loopne
cmc
cld
jecxz
aas
cmc
cmp
cld
xchg
in
roll
sti
ss
sarl
and
jecxz
leave
lret
loope
leave
std
iret
mov
out
leave
iret
call
mul
std
ljmp
hlt
movl
xchg
repz
ror
enter
mul
cli
int3
int
ds
mul
jmp
xchg
int3
enter
xchg
lret
int3
jmp
std
out
int
leave
leave
loopne
out
sbb
call
or
loopne
out
adc
sub
not
out
fistpll
cmp
fst
fld
cmp
std
les
fimuls
cmc
leave
ss
fnstcw
cmp
loopne
in
jmp
decb
xchg
xor
repnz
jecxz
sbb
in
in
dec
mov
call
jmp
fnsave
int3
out
lock
cmp
adc
fsubr
out
mov
fdivr
fiaddl
ror
xlat
fdivr
lock
not
sti
cli
test
aam
fsub
fcomp
in
int3
into
iret
std
out
and
iret
cmc
lds
in
ss
stc
cmp
sar
loop
stc
ret
sti
enter
sub
out
mov
out
cmp
xor
jmp
cmp
loop
fdivr
stc
mov
test
out
mov
out
lret
shl
shl
out
fcomi
leave
int3
repnz
cmp
and
xor
flds
loope
test
lret
ss
divb
cli
rcr
sti
ss
loopne
sar
out
cld
test
mov
filds
leave
enter
in
sar
lret
ljmp
aad
fdiv
mov
cld
fsubrp
sub
rcr
cli
aam
lret
in
sar
ds
rol
call
loopne
rcl
iret
ret
fcmovbe
addl
shl
jmp
call
loop
das
icebp
xlat
cmp
repnz
stc
aaa
out
lret
cmc
not
and
aam
fcmovnbe
into
clc
jecxz
xchg
in
lret
out
loopne
lret
xor
clc
iret
flds
cmp
or
fmul
xchg
in
int
aad
aam
repz
lret
lret
clc
sbb
lock
sbb
mov
xchg
in
ss
repz
aas
sub
cmp
ret
orb
in
or
aad
xor
leave
xlat
int
fldlg2
loop
shl
jmp
mov
in
icebp
xchg
out
xor
jmp
xor
iret
int
fdivp
repnz
sarl
repnz
jmp
into
ljmp
lds
aad
repz
cld
loopne
iret
fcomi
icebp
clc
stc
ftst
xchg
jmp
icebp
out
lret
jmp
into
repz
cmp
aam
idivl
cmp
out
sar
ljmp
xor
in
loop
cli
int
idivb
idivb
rcr
std
roll
xchg
lret
call
loopne
iret
sti
iret
out
repnz
xlat
lock
shl
fiadds
test
nop
hlt
jmp
loopne
aad
out
out
into
rcl
fpatan
in
mov
loop
shr
testb
loopne
aam
aam
enter
into
cmp
hlt
cmp
loope
fcmovnu
in
jmp
out
fcmovbe
nop
mov
fsubrs
cmp
cli
icebp
ss
shr
int
inc
rcl
hlt
std
ljmp
loope
aam
ss
out
std
cmc
jmp
sub
ds
leave
test
cld
jecxz
mov
rorb
hlt
out
int
lret
aam
xor
in
test
cld
mov
lret
nop
in
out
into
div
ss
ss
aad
fdivrl
sar
out
enter
loope
repz
iret
xchg
ret
call
fcmovnbe
aad
cmp
fdivr
loope
xchg
test
fdivr
fucomi
ficoml
in
jmp
aaa
fidivrs
fdiv
fcmovnu
lds
mov
jmp
ror
ds
ret
or
jecxz
lea
add
addb
mov
nop
jmp
cmp
iret
sarl
cli
shl
mov
jmp
fsub
out
xchg
repnz
out
in
clc
cld
sar
rcr
repz
cmp
lds
fisttpll
ds
jmp
iret
xor
clc
loopne
out
filds
lret
call
iret
xor
fidivrs
out
add
rol
clc
cld
cld
cmp
mov
in
repnz
ret
clc
call
repnz
cmp
std
fadds
sti
sbb
xor
hlt
icebp
sarl
stc
cmp
stc
rol
iret
loope
rol
std
test
aam
clc
fucomi
mov
shr
xchg
lock
xor
cmp
aas
out
int
sub
jmp
std
xchg
sbb
out
xor
lock
xlat
int3
lock
out
sarb
rcl
call
lret
cli
cld
jmp
into
in
in
cmp
aaa
int3
cmp
rol
mov
jmp
int3
icebp
or
aaa
ljmp
xlat
cmc
div
int3
loop
loope
sti
ds
test
loopne
cli
out
orb
ret
shl
clc
cmp
ds
rolb
fimull
shl
rcl
ret
iret
int
hlt
ror
shll
int3
mul
jmp
loope
cli
xchg
fimull
test
loop
jmp
cmp
lock
fmulp
ret
ret
fyl2xp1
fisttpll
shrb
cmc
jmp
rcl
out
icebp
fcmovbe
jecxz
aad
mov
aas
jmp
icebp
mov
int3
xchg
dec
sub
jecxz
cmc
std
div
clc
icebp
shr
iret
addb
loopne
lret
loop
mov
shl
cmp
ljmp
in
in
cmpl
ret
std
out
mov
lea
into
hlt
ror
ss
sbb
repz
jecxz
cli
xchg
loope
aad
ss
cmp
xlat
out
jmp
hlt
out
test
testl
icebp
out
repz
ss
call
aad
sbb
loopne
faddp
loope
stc
out
int3
mov
repz
repnz
call
sti
aad
xlat
loopne
idiv
sarl
loope
neg
fdivrp
sbb
xor
fsubp
ret
out
neg
ror
cmp
ror
and
enter
orl
jecxz
out
aam
neg
xlat
fdivr
sti
xor
repz
test
loope
xor
in
xlat
cmp
loopne
jecxz
testl
sti
mov
mov
cmp
cld
ret
shl
xlat
ds
fsubp
jmp
mov
mov
in
cmc
shlb
fmul
cmp
repz
adc
cmp
aad
lret
leave
lret
loop
mov
cld
fbstp
loop
sub
cmp
std
fmul
rol
mov
call
cld
xchg
xorb
cmp
repnz
in
in
fcmove
sar
iret
lock
add
mov
ljmp
jmp
ss
cmp
lret
jmp
shl
aad
in
jecxz
in
or
int3
out
rcr
lock
fcmovnbe
shlb
cmp
fndisi(8087
aad
loopne
fcmovu
rol
in
out
leave
out
xchg
xchg
out
jecxz
fmul
fcomi
out
idivl
into
fst
into
jecxz
out
fiaddl
test
fimuls
in
repz
fxch
aad
jmp
aas
cmp
or
fiadds
lea
int3
iret
xor
ss
iret
shr
inc
fdivr
ffree
lock
test
addb
ds
enter
lret
shl
in
into
lret
cmp
xchg
test
sar
test
aad
lret
repnz
int
fistpll
testb
cmp
fst
jmp
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
sub
sbb
jg
lret
jl
jecxz
test
fucomi
cld
out
cld
les
cld
lock
mov
icebp
aaa
iret
leave
cmp
aad
shl
out
cli
cld
call
out
shr
out
std
in
lock
int3
ds
icebp
fcomi
incl
rol
out
in
out
iret
loop
shr
lret
cmp
int
leave
xor
inc
in
sti
icebp
cmp
or
fucomi
jecxz
fcoms
loop
aaa
call
fdivrl
cmp
fdivrp
aas
jecxz
leave
sti
bnd
imul
jecxz
mov
ss
xor
call
hlt
int
fcmovnb
fcmovu
in
out
mov
int
in
jmp
divl
into
cld
cli
adc
xor
addl
test
in
out
ret
div
stc
in
clc
into
cmp
std
neg
mov
call
enter
leave
out
out
cld
hlt
rolb
lret
cld
enter
lret
fstp
out
loope
cmp
lds
cli
stc
lock
stc
icebp
loop
test
ljmp
clc
jmp
loop
int
lret
cmp
aas
int
hlt
test
mov
ret
mov
icebp
mov
test
loopne,pn
xor
fnstenv
jmp
clc
fistpll
lock
aas
call
int
loopne
fcmove
rcl
loope
ror
cmp
cld
into
int3
in
cmp
aas
in
jecxz
xlat
std
cmc
incb
jecxz
in
out
xor
xor
xor
cmp
test
in
std
fldl
shl
fldln2
stc
ljmp
out
cmp
cli
jmp
lret
nop
icebp
mov
test
in
in
ret
xor
idivb
loope
inc
jecxz
ret
ret
loopne
mov
xchg
int
cli
int3
xchg
in
xor
xor
jmp
call
aas
ds
in
mov
mov
mov
xlat
fldlg2
sub
aas
out
enter
loop
xor
test
fcmovu
orl
out
les
rcr
rcl
enter
rcl
cmp
cli
stc
mov
fiadds
jmp
out
repz
aad
shl
fdivp
loope
adc
fstp
test
mov
xor
loopne
ret
mov
addb
mov
fsubr
icebp
ljmp
vmovq
clc
jmp
fmulp
lock
xchg
stc
fsub
fdiv
fucomip
xchg
xor
cmc
fsubp
jmp
out
call
cmc
out
rolb
out
ljmp
in
aaa
ljmp
out
xlat
push
neg
les
sti
cli
lea
in
fst
fdivrl
rcr
in
fildl
inc
cld
out
enter
test
cmc
sti
ljmp
jmp
cli
cmp
sti
lds
cli
in
addb
aam
enter
leave
loopne
shr
sbb
xchg
ffreep
stc
addb
adc
jmp
int
ret
test
sar
out
aam
cli
fisttpl
mov
int3
int3
mul
jmp
aad
lret
cli
test
fdivr
ror
call
xchg
xor
lret
std
clc
loopne
cmp
icebp
xchg
cli
loopne
leave
in
mov
cld
sar
into
sar
test
out
in
xor
aas
push
filds
xor
sti
loop
xlat
sub
orl
clc
divl
int
cmp
cli
cmp
xor
in
jmp
mov
jmp
in
int
ljmp
sti
aaa
addb
hlt
mov
shr
cmc
das
ror
xor
aad
fcmovne
fiaddl
stc
ret
in
ret
ljmp
mov
xor
das
jmp
fsubr
iret
in
loop
cmp
jmp
mov
fcmovnb
in
mov
mov
sub
jg
lret
jl
ds
mov
out
nop
in
aam
rcr
lock
std
cld
aam
jecxz
test
add
aas
out
jmp
mov
orb
xor
repnz
fcmovne
cmc
cmc
repz
fcmovnu
cld
roll
out
sub
xor
into
cmc
rcl
in
fstp
xor
cli
fidivl
in
stc
xlat
jmp
loopne
jmp
in
jmp
sti
aad
in
fistpll
aas
out
into
into
std
adc
test
aam
or
nop
and
cs
repz
out
cmp
cmp
sti
rcr
fdivr
rcl
loope
aad
int
iret
mov
fdiv
cmc
rcl
aam
xor
bnd
test
fcomip
int
sti
fmull
mov
rcr
xor
cmp
fnstcw
cmp
cmp
int3
ret
ret
cmpl
push
in
in
shr
in
enter
out
rcl
aas
shl
rcl
adc
std
cld
incb
sub
repnz
vpsrlw
rcr
shl
fdiv
ds
in
mov
test
fcmovnu
in
fdecstp
icebp
aas
push
shl
mov
loop
fsubrp
lock
inc
xor
leave
cmp
out
fmul
cmp
fnstcw
hlt
loop
in
ret
adc
loop
dec
test
cmc
les
cli
rcl
icebp
rol
cmp
out
out
cmc
int
fucomp
lret
lock
shl
out
lret
cmc
stc
call
cli
test
test
xchg
jmp
sti
test
out
jmp
loope
aaa
xor
out
ljmp
shr
addl
xchg
out
shl
ror
repz
repnz
stc
in
ret
shl
xchg
roll
out
icebp
repnz
ss
int
jmp
out
cli
cmp
aas
cmp
call
sti
mov
fdivrp
sub
out
fdivrs
les
fdivrl
repz
in
into
roll
lret
out
in
loopne
lock
icebp
hlt
cli
cli
xlat
lock
lock
fsubp
jmp
rcr
std
mov
xchg
aad
int3
sarb
ss
fucomi
cmp
std
xlat
out
lds
stc
int
mov
xchg
shr
in
xor
idiv
dec
lock
sar
out
lret
mov
jecxz
mov
ljmp
aas
ds
out
icebp
fcmovu
movl
in
shr
ror
jecxz
xor
enter
ss
enter
std
lock
cli
cmp
mov
in
mov
call
clc
out
cmp
lret
out
not
cmp
fst
rcr
leave
in
jmp
mov
out
xor
rcr
jmp
int
stc
loop
repnz
in
enter
out
icebp
mov
lret
out
lret
fdivl
stc
hlt
cmpb
in
cmp
mov
fabs
fucom
loop
decl
fptan
in
iret
cmp
out
int
cmp
jecxz,pt
mov
test
out
sub
or
lret
xor
xor
loop
cmp
cmp
fadd
test
enter
out
ret
fidivrl
idiv
cmp
in
cli
fstp
sarl
fmul
fucomip
fucomip
test
xlat
jecxz
jmp
rcr
lock
std
clc
aas
shl
add
stc
ret
addl
aaa
ljmp
aaa
cld
repz
rcl
repnz
jmp
enter
adcb
call
cmp
aam
in
addl
jecxz
faddl
xor
shlb
fcmovnbe
loope
test
out
addl
fdiv
jmp
test
fdivrp
aam
lret
lret
fdivs
fptan
cmp
neg
aad
xlat
orl
xchg
aad
in
enter
fdivs
ljmp
xchg
test
in
call
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
sbb
lret
jl
into
repz
lret
fsubr
out
out
stc
shr
jmp
ds
in
test
in
fmuls
int
cs
int3
cmp
cli
sarb
jecxz
repnz
aam
mov
in
mov
mov
in
mov
shl
in
int3
int
dec
cmc
xlat
loop
rcl
cmp
std
test
call
mov
lret
test
in
iret
xor
in
aad
repnz
sarb
fld
fninit
loopne
xlat
jmp
int3
fsub
jmp
jmp
jmp
lock
rcr
sbb
rol
xchg
mov
jmp
jmp
fdivl
vpslld
imul
iret
aad
loopne
xor
aad
fnop
ffreep
sar
fmul
and
div
lret
leave
ss
shl
idiv
in
cmp
idiv
clc
mul
fmuls
cmc
into
sti
cmp
stc
lret
into
icebp
cmp
sbb
test
roll
fisubrs
rcl
cmc
stc
icebp
out
cmp
fucomp
stc
cli
cmp
fnstcw
sti
jecxz
lea
repz
nop
faddp
in
repnz
ljmp
shll
fsub
xlat
aad
mov
call
repz
fdivp
cs
xor
out
lock
hlt
aad
imul
in
out
fisttps
fsub
f2xm1
cld
fcmovb
xlat
fnsave
jecxz
addb
loope
loop
lret
ret
shll
xor
xor
stc
aas
jecxz
ljmp
enter
in
loop
jmp
jmp
xor
jmp
out
hlt
aas
lret
std
aad
cmp
fadds
in
rorb
call
lock
aad
pushl
std
loop
enter
ds
lock
aad
in
int
leave
xor
jmp
stc
cmp
xor
out
adc
ljmp
fcompp
out
lret
lret
leave
leave
cmp
cmp
sar
ret
out
out
add
loope
xchg
xchg
in
ret
aad
lock
cld
cmp
fsub
fdivp
sar
test
fld
cli
in
sbb
xor
in
jmp
out
shl
cmp
aas
loope
cmc
decb
dec
rcr
in
lret
loope
cmc
xor
out
out
clc
cmc
rcr
ror
in
stc
icebp
mov
loopne
loop
mov
xorb
lret
out
fcmove
ljmp
in
incl
fxch
rcll
test
sub
aaa
rcr
aad
loopne
out
cli
aam
mov
hlt
test
fcmovne
in
xchg
lock
in
out
cld
sti
rcl
int
in
les
lret
sub
jmp
int
repz
sti
aaa
call
sti
ret
out
out
filds
loopne
leave
xchg
xor
in
fidivl
repnz
int
fcmovne
sbb
in
and
and
jecxz
fsubp
shll
ljmp
fdiv
ret
lock
ret
std
fiadds
in
xchg
in
std
mov
shr
xlat
int
cmp
aam
aas
sarl
xlat
fcmovnbe
xchg
in
fsts
ror
divb
stc
aad
ss
enter
ds
lock
sar
lret
fcom
call
mov
cmc
das
enter
jmp
div
sarb
cld
icebp
cmpb
sti
fcmove
out
fldl
enter
jmp
shl
repz
fst
out
mov
out
nop
loopne
shlb
hlt
cmp
in
aas
cmp
cld
cli
shl
xacquire
fiadds
ss
int
cmp
out
cmp
in
iret
inc
sar
addl
jecxz
lea
out
cmp
adc
cmp
jmp
repnz
int3
stc
sar
into
mov
mov
xor
hlt
cmc
into
iret
aas
jecxz
xor
loope
in
mov
iret
in
mov
into
call
lret
cmp
repnz
cmp
je
movl
jmp
rcl
rcl
roll
lret
mov
jl
add
repnz
test
cli
loope
sti
call
enter
bnd
icebp
jmp
fld1
cmp
cmp
filds
clc
fadds
div
ret
hlt
repnz
shl
roll
cli
test
call
nop
out
enter
fsubp
int
ror
stc
stc
leave
in
sti
xlat
cmp
lock
ror
xchg
loope
int3
into
out
cld
ds
iret
fxch
in
cld
cmp
cmp
cmc
out
rol
fadd
fcmovu
inc
cld
mov
and
xor
icebp
in
fidivrl
loopne
aam
xchg
loope
jmp
test
ljmp
loope
xor
icebp
les
into
repnz
stc
icebp
int
test
repnz
call
mov
cli
sbb
out
xlat
sub
lret
clc
cmp
cmp
fnstsw
cmp
cmp
aad
jmp
fdivr
out
xchg
fmulp
out
shl
hlt
out
jmp
rcl
cli
loop
rcr
in
ret
cld
fisttpl
fcoml
aad
sar
ror
xor
lock
aad
cmc
icebp
in
aam
int
jmp
loop
nop
xchg
iret
xor
sti
shll
out
fcom
rcr
sti
repz
fiaddl
mov
std
fldl
test
lret
jmp
cmp
cmp
mul
in
incl
fneni(8087
call
out
xor
cmp
out
xor
test
rolb
cld
out
xchg
fsubrp
lret
jecxz
out
ljmp
vpsrld
decb
call
rcl
clc
int3
fistpll
loope
clc
cmp
std
in
in
jmp
loope
ljmp
cmp
into
stc
fsub
cmp
fcomip
repz
hlt
leave
loope
jmp
fnstsw
out
test
in
in
repnz
xor
lret
in
cmp
out
mov
fcmovne
stc
mov
out
int3
jecxz
in
lock
aam
sar
std
test
fdiv
fsubp
jmp
hlt
nop
ret
enter
in
shr
out
into
iret
loope
out
fcomp
stc
fucom
xchg
xchg
fists
in
fcomi
in
stc
stc
out
aad
ror
rol
out
leave
in
stc
fcomp
loopne
int
jmp
stc
jecxz
lret
out
in
fdivrl
idiv
int3
orb
std
in
in
leave
or
shll
rcr
cmp
lock
stc
lret
shl
sbb
ret
fcomp
mov
jmp
ljmp
stc
aad
cld
xlat
fcomp
out
aas
icebp
aad
loope
cmp
icebp
mov
repz
repnz
out
cmp
cli
xlat
cmc
push
cld
xchg
cmp
iret
xchg
int3
pushl
out
jecxz
cmp
xor
jmp
roll
call
leave
test
xchg
adc
sub
fdivs
leave
jmp
dec
fxch
std
cld
sub
std
div
ljmp
loope
lret
ret
in
cmc
in
neg
aam
ds
aas
aam
test
jmp
fisttpl
fstl
xor
lret
jmp
sarl
add
xchg
jmp
rorl
in
rol
out
call
aam
sarl
in
or
jmp
fsubrp
mov
xor
sub
out
enter
fyl2x
std
in
aad
lock
out
xchg
repz
xor
hlt
int
leave
out
out
in
repnz
aam
repnz
fmul
fcmovnu
out
std
inc
shl
xchg
test
cmc
enter
jmp
in
loope
rolb
dec
jecxz
in
in
shr
shr
repnz
icebp
shl
xlat
rcr
test
fucompp
cmp
out
mov
mov
clc
stc
into
leave
fsubr
jmp
fstp
cmp
hlt
ret
loop
cld
in
mov
shr
icebp
lret
loop
lock
cmp
xlat
rcl
ljmp
leave
xchg
lea
jmp
lret
ret
int
jle
shr
xlat
sbb
sbb
lret
jl
fisttps
in
ror
xlat
shr
rcr
ds
adc
fsub
loopne
hlt
cld
test
jmp
stc
xor
iret
lock
cmp
iret
iret
and
shl
xlat
fadds
in
xchg
cmc
out
lret
jmp
call
fsub
repnz
std
hlt
repnz
out
clc
in
xor
lock
jmp
rcl
fdivr
xlat
aas
test
mov
out
clc
into
enter
xchg
xor
xor
lret
lock
call
ds
stc
fimull
loop
xchg
in
int3
out
jmp
sti
cmp
lret
adc
test
loope
cli
fdivr
int3
loopne
call
ret
xor
repz
clc
cmp
out
aad
aad
ljmp
leave
xchg
mov
out
ss
lret
in
std
aas
xchg
repnz
out
xchg
loopne
nop
and
out
ror
call
out
fchs
ljmp
fdivr
std
jecxz
out
jmp
nop
fucomp
fmul
lock
call
cmp
ss
clc
hlt
loope
testl
ret
aaa
leave
clc
jmp
cli
xlat
cmp
rolb
jecxz
mov
ljmp
int3
cmp
cld
cld
aam
hlt
in
aad
stc
cmp
cmc
std
in
sub
out
call
sarl
leave
fcmovu
cmp
cmc
clc
sar
mov
mov
jmp
jmp
ret
sarl
ret
fmul
in
add
inc
xlat
sti
rcl
out
mov
mov
out
xor
loope
shl
fld
cmp
fildl
cli
lret
not
jecxz
out
cmp
fmul
jmp
out
loope
loop
jmp
jecxz
fsubr
iret
int3
ljmp
lock
fcmovnbe
into
shl
cmc
ret
aad
aas
fucomp
mov
loope
int
out
aad
aas
fdivp
sar
cmp
fidivrl
test
in
addb
jecxz
mov
stc
out
clc
shr
cmp
fmul
ljmp
or
lea
jmp
aad
fldl2t
into
out
into
aas
cmp
ror
xlat
cld
loop
aas
std
xlat
orb
xchg
in
shll
lret
test
shl
ds
xlat
icebp
fdivr
clc
fldl
icebp
fiadds
xabort
lds
sarl
loope
cmp
cld
enter
ljmp
test
rol
ljmp
out
xlat
ljmp
jecxz
ljmp
mov
cld
subl
loop
lret
rcl
sti
repz
loope
fimull
aad
ljmp
in
repnz
clc
fidivrs
in
xor
xlat
int
out
and
sar
lret
aam
xlat
iret
stc
repnz
hlt
cmp
repnz
addb
lret
enter
jecxz
fcmovbe
in
rcl
fnstcw
aas
in
adc
lret
orb
xlat
sub
loopne
in
fldlg2
repz
aam
fildl
ffreep
call
xchg
repnz
hlt
xor
repnz
cmp
loopne
hlt
out
not
rcr
fcmovu
and
xchg
fcmovne
xchg
in
in
aam
in
cmp
cmp
cmp
aad
loope
test
ljmp
in
int3
fucomip
lret
shl
int3
in
icebp
cmp
cmp
flds
rorb
loop
xor
mul
repz
enter
cmpb
cli
in
rorb
shr
orb
aad
hlt
stc
into
not
enter
lock
xchg
hlt
fmul
fld
jmp
loope
xor
aam
in
cmp
ljmp
shr
leave
loop
loope
cld
int
jmp
xor
xor
clc
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
ret
lret
in
jg
lret
jl
aad
cmp
xchg
stc
xchg
orb
out
in
sar
leave
loopne
icebp
shl
mov
loopne
sti
clc
enter
xchg
ljmp
imul
into
fmul
cmp
aad
in
test
xchg
mov
not
lds
in
call
cmp
rcr
roll
ljmp
orb
xor
cli
cmp
lret
test
out
fcmovu
ffreep
loope
test
sti
fcmovne
int
mov
xchg
shll
fdiv
lock
call
into
cli
fadd
add
sub
cld
in
mov
out
mov
out
shl
shl
divl
cmp
cmp
cmp
fcmove
sub
hlt
cmc
fsub
loope
in
out
jmp
jecxz
cmc
xor
jmp
into
lret
addb
fdivr
rcr
mov
mov
lret
int
aad
lret
shl
out
rolb
xlat
test
fcmovne
lea
out
hlt
jmp
xor
jmp
clc
cmp
lret
into
stc
ss
cmp
loopne
shl
out
sti
mov
xor
enter
lret
call
ret
fcomp
sti
test
leave
stc
sti
nop
test
lret
repnz
xor
repz
repz
in
sar
fnstsw
stc
lock
testb
xacquire
aaa
int
sti
shl
fdivrs
in
fdiv
idiv
ret
sbb
stc
leave
call
mov
xor
xor
sti
cmp
loope
out
jmp
mov
ljmp
in
cli
fstp
cmp
lock
out
repz
rcr
enter
out
out
int3
in
int3
in
cmc
hlt
out
xor
loope
int3
sti
ret
ret
fadds
in
fucom
jecxz
in
fucomip
loope
sti
iret
ljmp
clc
int3
aas
icebp
decb
filds
test
int3
out
ljmp
stc
in
in
xlat
int3
ret
lds
ljmp
adc
jmp
in
out
xor
imul
fdivr
lock
shl
in
out
leave
into
adcb
les
ss
ljmp
in
cmp
hlt
jecxz
jmp
xchg
pause
icebp
mul
xor
cmp
out
aam
fiaddl
in
iret
test
xor
loopne
xor
imul
cmp
int
hlt
cld
stc
jmp
sbb
adcb
aaa
int3
rcr
cmp
in
xor
rcl
sar
shl
stc
fimull
in
or
lret
cmp
fcmove
aam
int
leave
sti
fxch
ret
fcomi
testb
cld
mov
jmp
sub
loop
ljmp
fucom
imul
xchg
hlt
stc
icebp
mov
test
into
int3
jmp
ret
std
lret
sbb
out
aaa
out
cmc
test
in
fxch
leave
loopne
ljmp
in
aad
aaa
enter
repnz
xchg
hlt
inc
stc
jmp
loope
cli
in
loop
xchg
icebp
jmp
out
icebp
sub
repnz
sar
out
cli
ret
movl
iret
ret
int3
ljmp
xlat
cmp
sti
cmc
lret
fiadds
mov
loop
mov
cs
out
fbstp
imul
repz
sar
icebp
enter
mov
loope
xchg
xor
div
fstpt
rcl
xor
shr
int3
cmp
hlt
out
incb
call
ds
in
jmp
in
xor
sub
ljmp
std
cmc
mov
sub
or
loop
ss
fcmovnu
in
fscale
in
shl
ffree
mov
orb
mov
in
loopne
aaa
int3
jmp
xor
fcmovbe
int3
and
repz
out
out
lret
or
rol
sti
xor
shll
idiv
cmp
ret
cmc
mov
loopne
push
or
rorl
add
add
add
int3
ret
ds
jge
jae
xchg
mov
xorl
jl
lret
fucom
jmp
sti
idivb
into
xlat
aad
aas
xor
rorb
push
out
mov
xor
repnz
jmp
cs
aas
xlat
fdivrl
aam
test
stc
xchg
enter
test
shr
cmc
fdivrs
out
call
xchg
out
loop
dec
ds
cld
xor
test
ret
fdiv
into
cmpl
jmp
leave
fsubp
sar
xchg
ror
xor
in
loop
dec
fnstcw
stc
fucom
cmp
ret
leave
rcl
call
call
out
xor
lret
fucomi
jmp
and
test
std
in
clc
std
loopne
in
fistl
into
ss
lock
int
iret
rcl
sti
repnz
test
fimuls
nop
in
aad
iret
int
xor
shl
repz
std
iret
sar
in
out
in
mov
fsubrp
lret
mov
leave
ss
repz
mul
sti
inc
test
repz
fsubr
stc
call
int
in
out
in
in
int
cmc
lock
test
ret
loopne
sti
in
jmp
out
or
leave
ret
fcomp
std
int3
icebp
cmp
icebp
test
lock
shl
test
loope
xchg
icebp
lret
repnz
stc
lret
repz
fmul
cmp
cmp
clc
jmp
out
in
xchg
icebp
test
loopne
shl
in
in
shl
cmc
aam
ret
int3
test
inc
jecxz
mov
in
mov
mov
cld
aaa
shl
cmp
loope
test
in
in
mov
xor
int
enter
fcomp
fnstsw
cld
repz
into
ffree
loopne
fistpll
rcl
hlt
fdiv
lea
fmulp
aas
lret
enter
fidivrl
mov
jmp
lret
iret
adc
jmp
out
int3
sar
cmp
loopne
in
lret
fdivp
xchg
fucomi
loopne
in
ds
into
rol
fucomi
fsincos
icebp
cmp
cli
addl
orl
rol
jmp
repnz
cmp
jecxz
cmp
hlt
cmc
loopne
or
decb
ljmp
std
shr
fneni(8087
aam
aad
jecxz
aad
out
std
stc
neg
cli
rorb
stc
cli
div
xor
out
incb
fiadds
sti
mov
iret
out
iret
jmp
ss
enter
cmp
xchg
aad
test
jecxz
incb
sub
test
leave
in
in
jmp
in
cmc
shl
loope
cmp
sti
fninit
mov
inc
mov
mov
adc
das
cmc
in
out
jmp
idivl
fadds
cmc
shr
in
jmp
nop
cli
fsubrp
repnz
sar
cmp
xor
lock
loopne
xor
xchg
call
out
out
out
call
leave
cs
xlat
rcl
cmp
lock
aad
loopne
fadd
xor
loop
lock
not
cmp
icebp
iret
hlt
loope
xor
imul
xlat
sti
mov
jmp
xchg
fucom
rorl
aad
repnz
cld
cmp
fcmovnu
loop
fdiv
add
adc
stc
in
mov
in
fmull
ljmp
cli
fidivrs
into
sarb
in
not
lock
test
xchg
loopne
hlt
ret
std
lock
std
fcmovbe
lret
sti
aad
loopne
ret
mov
int
xchg
fmul
shr
aam
and
fucom
cmpl
mov
ret
fdivrp
fmull
out
in
sti
shl
lret
fdivrs
sarl
cmp
repnz
out
ret
enter
ljmp
imul
std
cmc
shl
aad
ret
roll
lds
mov
in
aad
in
repnz
lret
hlt
out
out
cmp
shl
mov
cld
ret
aad
call
xrelease
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
jb
add
jg
lret
jl
fucomi
repnz
repnz
std
hlt
out
test
in
jmp
rolb
cs
ret
repz
aas
mul
shr
int3
into
hlt
test
repz
int3
fmulp
xchg
mov
ret
sti
cli
fidivrl
cld
jmp
leave
lret
out
xchg
out
jmp
enter
in
cmp
stc
int
sbb
jmp
loopne
xchg
into
rcll
shll
hlt
fucomi
jmp
lock
cmc
mov
sub
addb
in
das
icebp
int
xor
clc
jmp
ret
stc
hlt
sar
add
std
cli
fiaddl
lret
xor
cmp
fildl
loope
movb
xchg
mov
hlt
ret
cmp
cli
and
out
and
and
in
jecxz
bnd
leave
cli
xor
fxch
flds
icebp
rcr
leave
lret
leave
sub
orb
in
xor
loopne
repnz
fst
sti
fldl2t
ljmp
out
in
cmc
repz
icebp
sar
cmc
idivl
ret
rolb
in
xlat
lret
cmc
in
aad
ds
ror
test
loop
repz
test
rcr
fldlg2
leave
stc
repz
fiaddl
xor
jmp
test
xlat
rcr
in
aas
out
mov
clc
int
test
mov
xchg
int
iret
shl
ftst
lret
fucomp
loope
int3
cli
std
call
call
jmp
fmul
test
xor
int3
cmp
stc
xlat
fld
std
fincstp
std
cmp
int3
jmp
mov
rorl
in
sti
std
fdivr
cmpl
jecxz
div
mov
iret
cli
int
shl
int
sar
sarl
aaa
repnz
cmp
roll
cli
lret
lock
fmulp
in
xor
repz
int
aad
ds
sti
aas
leave
into
cli
in
lret
mov
aam
f2xm1
iret
cmp
aas
fiaddl
and
mov
popl
fucomip
lret
out
shl
xor
aad
fmul
ljmp
mov
int
decb
shrl
aaa
jecxz
ror
fcmovnbe
inc
rcr
cld
inc
and
out
incb
jecxz
iret
test
xor
stc
into
ds
lock
jecxz
stc
repnz
cmp
icebp
in
icebp
cmc
test
repz
xor
fcmovb
iret
rol
in
repnz
addl
in
jmp
enter
aad
fcmovnu
fsubp
cld
fdivrp
fsub
fadd
out
jmp
loop
mov
out
adcb
shr
hlt
repnz
cmp
in
fdiv
std
enter
mov
into
jecxz
jmp
mov
into
sub
cli
in
xlat
jmp
rcr
ss
repz
sti
leave
out
mov
out
int
enter
xor
idivb
shl
rolb
faddl
lock
loopne
cmc
ret
xor
das
int
loopne
loopne
rol
rol
xlat
ret
clc
lret
xchg
ljmp
out
rcr
aas
ss
cmc
fmul
jecxz
fcomi
jmp
lret
fsubp
test
out
in
cmc
cs
lret
jmp
xor
repnz
movb
mov
xor
cs
xor
fsubr
fcmovnb
in
in
cmp
fldl2t
rolb
or
jecxz
repnz
fld
xor
aad
not
lret
in
shr
div
xlat
adc
sti
ljmp
into
test
xchg
jecxz
in
out
in
in
cmp
cld
repz
aad
cmp
out
in
addl
mov
in
repnz
aaa
xor
sti
lret
sbb
adc
enter
fildl
cmc
xchg
ss
rol
clc
in
fucompp
stc
add
ss
shr
add
add
ds
rcr
fsubr
push
dec
lods
jecxz
sub
lret
jl
shl
mov
test
out
or
rcll
xor
cmp
cmp
incb
icebp
mov
repnz
jecxz
out
leave
ljmp
divb
in
in
sti
rcl
icebp
rcr
fcmovu
cli
hlt
fiadds
addl
aad
idiv
std
icebp
cmp
out
xlat
out
incl
xchg
iret
sbb
shr
hlt
enter
idivb
cmp
in
jmp
loopne
mov
xchg
jecxz
xlat
jmp
cmp
iret
hlt
int3
into
int3
aam
ds
cmp
fadds
incl
sub
aad
out
enter
ljmp
sbb
neg
mov
sub
orb
fsubr
not
ljmp
hlt
cmp
adc
sar
testb
out
lret
int
jecxz
jmp
iret
fdivr
ss
cli
rcl
aas
sbb
ret
aam
fdivrp
loopne
icebp
in
and
xlat
repz
int3
cmp
cmp
ret
cli
sbb
enter
in
ficoms
loop
out
in
fnsave
idiv
icebp
repz
fildl
xchg
mov
ljmp
loop
xlat
fst
xor
fxch
ret
test
cmp
in
faddl
lret
shl
int
aam
sti
xor
rcr
cmp
stc
shl
fdivr
out
mov
test
xchg
lret
in
xor
jmp
cmc
cmc
aad
ror
fstp
in
cmp
faddp
mov
ffreep
aaa
loopne
imul
shl
fld
in
loopne
into
fdivr
out
clc
dec
cmc
test
lret
rorb
out
xor
xlat
ljmp
sti
in
test
rcr
fucomp
filds
rol
in
shll
in
in
shl
shl
test
enter
out
jecxz
aam
mul
das
hlt
fistpll
cmp
loopne
cli
xchg
mov
xor
cmp
sti
repnz
clc
neg
fxch
jecxz
fnop
jecxz
xchg
jmp
ljmp
xchg
into
leave
in
in
cli
clc
out
fdivrl
ds
addb
out
xchg
into
shr
xor
iret
out
loopne
cld
xlat
ret
mul
mov
in
out
in
ljmp
int3
leave
xor
cld
repz
lock
int
cli
jmp
in
fdiv
fxch
in
xor
rcl
cmp
sarb
cmc
testl
iret
fimuls
out
ljmp
and
mov
hlt
aad
in
cmp
out
fidivrs
icebp
in
aas
sti
in
cmp
repnz
stc
xchg
jmp
std
test
repz
repz
jmp
iret
in
shl
adc
stc
lret
xchg
lock
imul
into
das
xor
xor
shl
aas
adc
loope
rcl
lds
jecxz
ffreep
out
in
adcl
fdivrs
ss
in
std
xlat
loop
fld
rcl
ror
in
in
ret
add
xlat
ss
cmp
xor
repz
in
fidivs
int3
cli
testl
in
loopne
enter
ljmp
ror
out
stc
fstp
jecxz
xchg
fsub
clc
loope
orb
rcl
cli
iret
repz
cmp
icebp
stc
fdecstp
testb
out
iret
in
mov
xor
les
fcmovnbe
loopne
hlt
cli
xlat
adc
int
testb
sub
clc
ror
out
aaa
lock
xor
cli
jecxz
out
test
hlt
out
sti
xchg
nop
out
leave
cs
in
clc
cli
das
cmp
lret
repz
or
aad
out
ret
ret
int3
inc
xchg
leave
iret
out
lret
lret
xor
aam
sti
call
sti
stc
fld
test
in
ret
int
fsubr
clc
mov
ror
mov
jmp
fcmovnbe
int
loope
insl
lahf
and
xor
pushf
das
jg
lret
jl
in
test
aad
stc
cmp
fst
test
adc
ret
test
in
mov
repz
lock
hlt
cmp
jmp
jecxz
movb
loopne
out
in
loope
jmp
stc
out
into
bnd
idiv
in
stc
adc
fsubrp
mov
enter
add
jmp
out
ds
shl
in
idiv
call
int
int
out
out
xchg
mov
enter
enter
std
cmp
aas
out
fistpll
hlt
ffree
fcmovu
sti
in
int
cld
decb
enter
in
fmul
repnz
cmp
mov
out
in
mov
mov
mov
leave
xor
cmp
mul
not
int3
fbstp
fcomip
ret
cmc
faddl
aas
or
xchg
ljmp
loopne
into
lock
jmp
shr
ffreep
shl
test
add
mov
jecxz
adc
out
call
dec
stc
fcmovu
xor
out
fsincos
fsub
fiaddl
mov
fldz
cmc
out
call
out
lock
idivl
std
repz
jmp
into
int
div
lret
idiv
not
into
ffreep
loop
into
call
testl
into
shrl
xor
aaa
cmp
rcr
roll
stc
xchg
fcmovne
out
xchg
rol
test
out
cmp
roll
mov
clc
cli
xchg
out
loopne
stc
loop
xor
ljmp
fdivp
aam
stc
in
fdivrl
in
jmp
cs
xor
cmp
in
not
cmp
les
mov
xchg
jmp
loop
xor
fidivrl
cmc
cmp
lret
cmp
fldl
test
in
out
enter
iret
lret
std
cmc
cld
repz
out
int3
loop
hlt
fadd
ret
ffree
in
or
call
in
int
leave
lock
lock
sti
int
ret
leave
shl
clc
lea
xchg
mov
lock
out
in
shr
cmp
aad
out
mov
idiv
mov
ljmp
int3
fcomp
sarl
sti
fucom
cld
icebp
jmp
neg
or
ret
shrb
xor
rcl
fldl
loopne
rcl
shl
aam
mov
in
xor
mov
imul
aad
cmp
icebp
out
rol
aad
xlat
fmull
int
cmc
mov
sub
ljmp
fdivr
shl
fdiv
shl
std
cmc
aam
loopne
icebp
jmp
inc
xor
aad
cmp
xor
shl
std
cmc
cmp
or
xchg
in
jecxz
ljmp
repnz
cmp
idivl
xchg
xor
fcmovu
fsubr
into
lret
out
xchg
int3
cld
loope
enter
int3
in
hlt
ljmp
loope
ret
cmp
mov
hlt
cmc
icebp
ror
int
lock
cli
jmp
rcr
cmp
fdivrp
enter
mov
leave
loopne
xchg
sub
into
divl
fucomi
aas
fadds
out
xchg
faddp
fcomp
nop
sti
cmc
in
xchg
hlt
cmc
call
aaa
cli
cmp
xor
std
sar
ret
in
out
mov
lret
aam
int
enter
ret
sarl
ret
test
les
xchg
cld
iret
shll
out
fdiv
std
loope
into
fcom
repz
shr
mov
xchg
nop
fisttps
call
call
add
ret
cmc
xlat
ffreep
cmp
and
ljmp
ljmp
xlat
test
sub
test
test
in
out
ds
fdiv
fcmovbe
aaa
xor
ds
rcl
shl
hlt
call
icebp
in
loopne
not
xor
fsub
out
fcmovne
aaa
out
int
fadds
jmp
iret
iret
sarb
aad
aad
pop
sbb
inc
popf
push
jg
lret
jl
adc
cld
repz
sti
orl
lret
fmul
cmp
enter
jmp
rcr
loop
fsubr
sub
mov
fistl
stc
cmp
in
fdivr
call
sbb
out
sar
ljmp
aam
lret
les
fsubr
cmp
sar
ret
sti
std
repz
cli
cld
fxch
call
roll
xor
ss
aaa
in
cld
in
loop
sti
lock
sti
test
ret
cld
mov
jmp
fmul
aaa
out
fistpll
cld
test
xchg
mov
sub
ljmp
sti
fst
xlat
or
sarb
aad
cmp
lret
leave
leave
loop
icebp
shlb
in
out
clc
xor
jmp
cld
enter
cmp
fdiv
aad
lret
std
lret
test
jmp
int
xor
ss
shr
ret
loop
sti
out
fiaddl
shl
ljmp
jmp
in
stc
fadd
icebp
test
cmpb
fsubr
loopne
xchg
fadd
mov
shl
out
clc
xor
sti
cmp
fcmovu
push
call
sti
mov
decb
aaa
shl
lret
jmp
xor
rcr
fcmovb
out
fildl
xchg
in
into
rcr
mul
xor
clc
iret
jmp
adc
ds
aas
fcompp
leave
fadd
mov
xchg
fcoml
ss
lret
repz
jmp
out
mov
aad
in
les
mov
aaa
iret
xlat
cli
cmc
neg
xor
addl
fildl
test
iret
mov
out
shr
xor
xor
cmp
icebp
idiv
lds
add
jmp
decl
shl
sar
xor
shr
sarl
or
cld
xchg
clc
rorl
lret
roll
jmp
xor
loopne
ret
fiaddl
loope
rorb
into
xor
enter
lock
in
fucomp
cmp
neg
cld
hlt
std
mov
icebp
addl
jmp
hlt
aas
cmp
cmc
repnz
fucomip
sub
loope
lock
lret
fcmovbe
lock
cmp
in
xlat
fst
faddp
addb
out
xchg
out
aam
enter
int3
test
mov
fimuls
sub
cmp
stc
xlat
cmp
aam
fdivrp
div
ret
orb
loop
into
in
aam
call
idivl
adc
in
loop
leave
lret
lock
jecxz
aad
in
lret
aam
rcl
sar
xorb
stc
sar
aam
aam
mov
cli
mov
in
std
jecxz
mov
lock
shl
xlat
xlat
iret
cli
jmp
in
repnz
jmp
int
in
adcb
ss
cmp
enter
sarl
iret
div
aad
cmp
decb
aad
repnz
leave
stc
sar
aaa
testb
aam
cld
mov
mov
lock
in
in
jmp
fmul
xor
into
int3
ret
jmp
addl
out
leave
loopne
ss
fldpi
fidivrl
cld
cmpb
roll
in
loope
jecxz
jmp
xor
rol
jmp
stc
aas
in
aaa
sarl
rcl
icebp
not
std
lock
mov
out
out
cld
xor
xor
in
out
aam
aad
test
test
icebp
jmp
mov
stc
fucomi
out
icebp
xchg
xchg
aam
divl
repz
fcmovbe
incl
loope
idiv
loopne
incl
in
xchg
ljmp
call
fidivrs
shl
cmp
loopne
les
adcl
shl
out
in
out
testl
xchg
call
icebp
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
pop
es
cmp
jg
add
xchg
adc
iret
loopne
fcmovb
out
xor
int3
cmp
iret
sti
ret
rcl
ljmp
hlt
xchg
lock
cmp
into
fmul
jmp
lret
test
stc
loope
cmp
loop
lret
lret
loop
addb
in
icebp
iret
aas
cmp
icebp
out
loop
fdivrl
loope
imul
sub
mov
ljmp
sarl
imul
int
sarb
aas
ret
rcr
out
cmp
orl
mov
sub
xor
cmp
ss
repnz
rcr
cli
hlt
fldl
mov
cld
enter
repnz
fcomi
ss
adc
cmp
idiv
out
fldl
ljmp
xor
out
in
sti
ljmp
aam
fldl
stc
decb
iret
out
ss
out
in
clc
in
icebp
ljmp
loop
out
ljmp
test
xor
leave
ret
xor
aaa
out
int
ds
hlt
add
in
call
in
fdivrp
int3
ljmp
aam
repz
movb
cmc
add
in
out
add
orb
jecxz
ljmp
iret
test
test
xchg
loope
lock
ss
fdivs
shl
into
hlt
aad
cmc
enter
in
in
mov
xchg
hlt
hlt
cmc
in
fyl2xp1
cli
aad
lock
fld
fdiv
jmp
test
shl
xor
in
hlt
repnz
out
cmp
fsub
clc
cli
test
call
in
sub
lret
out
mov
cmp
repnz
aaa
cli
xor
cmpl
mov
rorb
out
not
xor
cld
stc
out
jmp
icebp
out
ret
fcom
icebp
fadds
ljmp
fucomp
shll
jecxz
fsub
fcmovu
xlat
repnz
cmp
into
fcmovnbe
stc
mov
loop
ret
mov
jmp
fxch
std
repz
test
fnop
sti
out
addl
hlt
les
cmp
cli
sbb
stc
shl
enter
loope
mov
lea
xlat
ror
lret
jmp
std
shr
iret
in
loop,pt
fnstcw
neg
std
int
test
in
in
jecxz
stc
aad
enter
clc
cld
stc
aas
out
idiv
hlt
fcomp
mov
cld
loopne
fsqrt
call
xor
aad
ds
in
cmp
in
in
cli
xchg
call
hlt
ror
call
out
jmp
out
iret
rcl
rcl
in
lret
enter
mov
iret
out
into
enter
lret
enter
shll
ret
ror
std
hlt
loopne
xchg
cld
or
loop
cli
fdiv
hlt
icebp
ror
in
out
cld
out
aam
mov
in
mov
xchg
iret
int3
sub
test
leave
lret
int3
ljmp
call
sti
in
lret
loope
test
call
int3
lret
out
repnz
ds
loope
ret
test
ret
jmp
fisttpl
das
call
fcmovb
cli
cli
into
sti
hlt
fst
cmp
fsin
jecxz
in
in
int
xchg
aam
xor
out
fcmovnbe
lret
div
jecxz,pt
rcl
fdivr
jecxz
std
mov
mov
addb
out
std
in
into
stc
sub
lret
in
in
clc
fadds
fisttps
out
xor
cmp
cmp
fcmove
fcmovnu
sbb
sti
ret
jmp
cld
into
out
fdivr
int3
loope
aam
fincstp
fcmovne
leave
stc
into
sar
xor
int
fcmovnbe
rol
sti
fdivr
loopne
leave
out
nop
xchg
loop
out
xor
jmp
cmp
rcl
int3
cmp
cmp
out
stc
enter
out
lea
das
xor
cmc
sub
fdivr
fucom
int3
loope
test
sarb
stc
std
loopne
leave
out
call
rol
fxtract
hlt
mov
std
fdiv
out
in
loopne
faddl
cld
mov
ljmp
in
xor
aaa
std
not
iret
fsubrp
adc
xchg
ds
jecxz
cmp
pop
out
xor
cmp
cmp
in
add
shl
cmp
xlat
shl
test
mov
int3
in
xor
lock
std
fmulp
ss
out
cli
filds
mov
fcmovnu
fcmove
ficoms
aam
ret
int3
int3
cmp
fst
sarb
rcl
xchg
leave
jecxz
movb
in
and
les
cmp
push
movl
jmp
into
rol
aad
rcl
jmp
ficoms
jl
add
sti
shl
cmp
cmp
fucomi
loopne,pt
lock
aad
in
fistl
fmulp
xlat
out
out
into
sti
repz
fsubr
out
aas
fidivrs
ret
lret
lret
into
mov
loopne
xchg
in
repnz
lock
leave
int3
ss
in
loop
fstp
repnz
mov
in
cli
fisttpll
fld
cmc
jmp
lock
aas
inc
shl
rcl
int3
mov
leave
into
cli
mov
out
aad
cmp
repnz
sti
jmp
icebp
test
lock
in
lret
icebp
xchg
aad
xor
cmc
enter
cmp
out
in
iret
out
fsincos
idiv
mov
mov
out
lret
jmp
rcl
test
cld
out
fadd
flds
lret
test
mov
rcl
lret
mul
out
jmp
repnz
shr
in
std
sub
stc
out
fnsetpm(287
sbb
jmp
fsubp
mov
iret
das
hlt
leave
sti
lret
cli
out
lds
fcmovne
fcmovnbe
mov
fisttps
ret
enter
aas
ljmp
cmp
adc
cld
lret
das
jecxz
shr
out
aam
fcomp
in
rol
out
orl
nop
in
int3
rol
xor
imull
int3
xlat
fdivrs
ret
cmp
aad
std
repz
test
xchg
xchg
pushl
sub
int
out
jmp
int3
fdivrl
shl
aas
sbb
iret
cmp
jmp
out
int3
ss
enter
in
fsubp
adc
xlat
aam
mov
mov
jmp
leave
out
fcmove
std
shl
fcomp
cld
loope
int
cli
orl
xlat
fcmovne
jmp
iret
std
flds
and
mov
mov
ret
popl
call
sti
jmp
test
rcr
inc
ffreep
xlat
xlat
test
adcb
in
iret
lds
neg
in
ror
in
clc
sti
in
int
cmc
mov
shr
jecxz
cmp
cmp
aas
fucomp
cmp
jecxz
out
aam
out
leave
xchg
sub
xor
cmc
rcl
div
out
cmp
clc
lock
xchg
hlt
jecxz
in
nop
int3
lret
divb
loop
ror
clc
cmp
cli
into
xor
sar
fcmovu
fucom
cld
icebp
roll
xor
ret
fsincos
fdivl
jecxz
out
icebp
cmp
test
adc
shr
xor
fdivrs
out
xor
ds
lret
test
mov
repz
cmp
les
jmp
cmp
iret
loopne
hlt
loop
fiadds
into
aas
loop
ret
shl
call
cmp
hlt
fistpll
roll
aam
xor
out
int3
lret
mov
repnz
sar
fprem1
repz
hlt
aad
sar
ret
cli
cli
lret
aas
out
std
cld
out
call
out
sar
ror
loop
jecxz
std
leave
jecxz
lret
lret
filds
sub
aaa
in
lret
leave
std
jmp
sti
xlat
sbb
rcl
lret
enter
fstp
out
sub
loopne
jmp
jmp
icebp
vaddsubps
mov
mov
mov
repnz
shl
out
ljmp
leave
call
icebp
in
sti
mul
fcomp
std
test
out
repnz
lock
aad
out
hlt
iret
cmp
cmp
in
sar
loop
loop
ret
loopne
xchg
sub
xor
out
enter
fdivl
cmp
icebp
fcmovbe
aas
test
std
ljmp
ss
xor
sti
call
fsincos
cmp
fcmovu
cli
xchg
out
call
and
xlat
hlt
divb
ss
in
lock
cli
cmp
test
mov
test
aad
call
cmc
fcomi
loopne
repnz
cld
test
int3
iret
in
mov
mov
loop
call
shr
jmp
int
aam
test
out
hlt
dec
sti
fmull
into
shl
stc
sti
fldl2e
leave
stc
ds
jecxz
filds
in
jmp
lds
mov
fcomi
cld
iret
fbstp
cli
fistpll
cmp
rolb
out
incb
sub
fsub
ret
in
shl
cmp
in
sarb
aad
ret
mov
mov
xchg
out
sub
xor
cmp
fcmovnb
inc
cld
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
sbb
jl
add
sar
fucomp
ffree
repnz
out
incl
cld
sbb
cmc
rcr
clc
icebp
in
cmpl
rcl
addb
mov
loop
sti
or
loop
lret
fcomi
sarb
rcr
test
ret
cmp
idiv
mov
iret
jmp
leave
rcl
repnz
fst
sti
fdivp
lock
aas
fdivr
mov
mov
ffree
loop
and
xchg
sar
ret
ret
hlt
fcmovne
sar
sub
sti
repz
loopne
loope
loope
dec
int
int
sti
fildl
in
in
repz
iret
incl
fdivl
in
icebp
xor
ret
fiaddl
repz
cld
les
loopne
nop
lret
in
iret
not
out
cmp
cmp
lret
std
hlt
jmp
aam
test
nop
loopne
ljmp
cmp
repz
rolb
xlat
xchg
mov
nop
mov
xor
in
cld
ss
cmc
std
not
loop
repnz
fidivrs
xchg
xchg
mov
lret
sub
aad
icebp
icebp
lock
cmpl
filds
mov
xchg
xchg
mov
lock
aaa
lret
icebp
loop
in
shl
shl
mov
std
fdivr
rorb
ror
lret
xor
cmp
fdiv
xlat
loop
out
fsubrp
xchg
decb
aam
cmp
hlt
ljmp
sti
hlt
rolb
enter
in
repnz
mov
out
lret
in
into
cs
cmp
fcmovu
leave
sub
lret
shr
jmp
aaa
lock
loopne
aas
test
ds
out
xchg
mov
nop
ret
ret
call
xlat
ljmp
clc
decb
in
rorl
repnz
rcl
rcl
jmp
cmp
loopne
test
hlt
xchg
lock
in
mov
rcl
vpsubb
ror
cmp
cmp
iret
sar
jecxz
stc
test
mov
out
enter
mov
xor
fld
ror
call
xor
loopne
rolb
mov
in
shl
aad
mov
icebp
cmpb
xor
rol
vpmulhuw
jmp
in
cli
nop
in
xchg
iret
iret
int
in
hlt
loop
cmp
aas
or
fidivrl
fnstsw
shl
aad
fcmove
fdivrp
rcll
aas
hlt
clc
enter
lret
leave
call
clc
repnz
jmp
aad
int
int
xchg
test
int
aam
icebp
lock
out
add
loope
in
std
in
ret
loope
loop
fdivl
out
fnop
sti
ljmp
mul
div
rcr
loope
loope
loop
iret
iret
mov
iret
enter
shr
cmp
cld
ss
roll
in
out
loopne
in
iret
xchg
fdiv
lret
in
repz
in
in
cs
int3
clc
std
int
icebp
repz
cmp
std
xlat
testl
sub
cmp
aam
xlat
cmp
cmpl
jmp
in
ljmp
sub
loop
out
sti
cmp
test
shl
out
fcmovne
lret
lret
fadd
enter
xor
sti
fsubr
enter
iret
cmp
icebp
cmc
icebp
loop
aam
cli
xlat
out
test
out
ret
cli
cld
cmp
stc
test
ret
cmp
fadd
mov
xor
fcom
int
lock
jmp
imul
cmp
ret
ret
movb
stc
loopne
shr
fsubr
test
das
ss
loop
aaa
leave
repz
jecxz
and
mov
decl
addl
repnz
iret
hlt
iret
out
fcmovnbe
fcmovnbe
int
cli
in
and
roll
out
ror
shr
jmp
testb
loop
rcl
loop
fsubp
out
loopne
out
cld
ds
out
fst
enter
aas
icebp
xlat
into
loop
fndisi(8087
mov
fucomp
flds
hlt
xor
sti
loop
out
stc
cmp
into
ljmp
xlat
cmp
fdivrp
in
icebp
lea
iret
lret
cmc
fstp
or
shl
lock
int
int
shl
faddp
loopne
iret
xor
fcmovbe
repnz
out
cmp
loope
call
mov
mov
xlat
cmp
iret
xor
aad
loopne
iret
out
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
sarb
outsl
les
add
add
loopne
fucomp
fdivrp
push
sub
ret
jmp
loope
dec
xor
cmp
cmp
or
cld
stc
out
shr
in
int
cs
mul
rol
std
cmp
sarb
sti
sar
lock
cmc
jmp
lret
incl
repz
fnstenv
rcr
hlt
cmp
in
std
add
cli
xlat
sti
out
out
int3
in
aad
out
xor
iret
cmp
out
aad
fcmovnu
ret
ret
xabort
les
jecxz
fprem
loop
addl
cmp
in
jmp
in
icebp
int3
sarl
test
mov
loop
xchg
mov
xor
xor
leave
cmp
in
ljmp
fsubp
cmc
mov
in
fisttpll
in
repz
fucomi
call
ds
cld
shl
decl
lret
nop
lret
out
xchg
lret
out
aad
repz
repz
aam
adc
fildl
loope
std
in
out
sti
fst
into
ljmp
fdivs
fcomip
stc
in
cmp
xlat
orl
in
test
out
aaa
stc
jmp
stc
fistpll
out
xlat
rcr
loopne
xchg
in
shlb
ret
xor
lock
fildl
rolb
lret
enter
out
jecxz
xor
cs
int
cmc
shl
out
sarl
loop
cmc
enter
in
call
jmp
shr
shr
aad
enter
cmc
loop
in
lret
out
cld
out
rol
xchg
xor
loop
ror
repz
lret
loope
loopne
cmp
loop
in
in
fucomp
loop
xchg
into
iret
shll
xlat
lret
fucomp
ror
int3
ret
jmp
cld
jmp
out
jecxz
rcl
xor
fcmovu
icebp
ds
in
aad
ljmp
rclb
leave
rcl
xor
aam
cmp
test
call
in
loopne
addl
lds
jmp
int3
in
loopne
clc
xchg
lret
xchg
xchg
repz
cmp
shl
int3
in
rcl
stc
jecxz
mul
fmulp
iret
test
nop
das
call
std
ss
loop
aas
shl
aam
std
jmp
loop
shl
int3
sti
ljmp
aas
jmp
into
out
cmp
in
mov
aad
in
int3
xor
fucomi
test
fadd
cmp
ds
clc
fucomp
lret
lock
mov
cmc
fsub
ljmp
aad
shl
cli
in
lds
lret
fsub
std
xchg
add
cmp
jecxz
lret
fucomi
cmp
ss
in
ffree
faddp
ret
cli
out
into
loopne
lret
loopne
int3
ret
cmp
jmp
lret
test
loop
repz
in
lret
fstl
loopne
cmp
xor
enter
fsubr
faddl
test
out
test
vpsllq
test
iret
xor
repnz
hlt
fadd
loopne
aam
leave
call
sub
out
out
repz
aam
cli
lock
fcom
repnz
xor
test
and
xor
loope
hlt
cmp
lret
aaa
fsubr
cmp
div
adc
or
xchg
xchg
sar
shll
cmp
or
loopne
cld
incl
mov
fdivrp
jecxz
ljmp
sti
sti
stc
repz
icebp
test
shr
lret
enter
lea
jecxz
xor
fld
aam
call
aam
sarb
fcomi
jmp
in
sbb
int
jecxz,pt
out
ljmp
rolb
lds
mov
add
xor
not
ljmp
sar
cmp
clc
bnd
cli
xchg
decl
int
cmp
enter
cmp
out
fdivr
xlat
cmc
jmp
orl
jecxz
ret
sar
call
jmp
fdivr
shl
rcr
jmp
iret
cld
rcl
in
in
loope
stc
xor
call
loopne
cmp
int3
sarb
mov
addb
ror
shlb
rcl
in
in
aam
loope
int3
test
rol
aam
out
xlat
in
mov
out
int
aam
ljmp
aaa
icebp
out
sti
rcr
fadd
sar
fldpi
jmp
xlat
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
adc
push
lret
jg
add
jmp
in
xchg
mov
in
shr
lds
in
cmp
in
ss
sti
lock
cmpb
cld
lret
test
loop
and
jmp
into
out
cmp
testl
aam
iret
add
mov
rol
out
lret
stc
sti
sarb
aas
icebp
aas
lock
cmp
leave
in
out
vpsllq
lret
out
aam
out
clc
rcl
aad
in
inc
stc
repz
in
out
loope
shr
jmp
int
imul
repz
out
cmp
cld
cld
rcl
cli
test
fmull
stc
leave
into
iret
stc
xlat
fcmove
into
cld
out
ds
aam
sti
out
cli
ror
in
xor
mov
repz
aad
xor
int
rcr
test
jmp
hlt
frstpm(287
faddl
into
ror
cmp
cmp
not
loopne
int3
fcmovb
mov
in
xlat
jmp
int
jmp
xor
fcmovne
sub
out
leave
int3
icebp
shl
sarb
iret
hlt
and
xchg
out
fcomi
iret
int3
fsubp
jmp
into
cmc
xor
aad
stc
cld
cli
aad
lds
hlt
xor
fists
leave
aaa
ss
std
neg
sti
fisttps
mov
in
add
repnz
repnz
rol
sti
ljmp
xlat
fcmovbe
mov
loop
loop
lret
out
out
xlat
div
out
out
repz
out
jmp
sarl
shl
stc
lret
lock
ret
imul
jmp
roll
repz
fsubr
sbb
in
in
out
mov
lret
in
cmp
std
cmp
cmc
jmp
stc
xchg
cli
shr
in
aam
sub
cs
out
shr
stc
std
shl
cmp
cli
aad
ds
fucom
loop
fucomp
repnz
in
xchg
cs
in
lock
sti
lock
stc
fdivp
lock
fdivr
std
clc
loope
xchg
jecxz
out
stc
xor
ss
aam
fadd
mov
int3
fucomi
movl
xor
lret
ss
sarb
lock
filds
nop
nop
popl
loop
into
hlt
in
in
loopne
in
aam
ds
fildl
lret
std
mov
mov
shl
int
stc
lret
in
out
int
cli
adc
stc
mov
mul
loopne
int3
ljmp
ss
xor
into
call
movl
loope
out
sub
hlt
out
jmp
shr
aaa
cmp
out
loop
loop
aam
test
test
int
loope
xchg
repz
rcr
ret
cli
cmp
jmp
lock
ret
cld
leave
add
jmp
in
jmp
sub
int3
xor
les
cli
test
lret
fadd
in
stc
cld
in
lret
fsub
xchg
iret
out
in
stc
das
into
in
xor
lret
ror
loop
out
xchg
repnz
aam
sti
cli
fdiv
ret
out
rcl
test
out
cmp
div
cld
aas
cmp
hlt
loopne
out
iret
cld
adcl
fucomi
out
cmp
aad
sar
call
in
fisttps
loope
jmp
aaa
int
shl
aam
fcmovbe
in
ret
out
neg
in
aam
std
cld
cld
loop
rolb
cmp
into
aad
sarb
inc
in
cld
sti
dec
jmp
jmp
test
lret
in
int3
in
rcr
lock
out
cmp
cld
loopne
test
fcmovnb
das
hlt
repz
int
xor
in
lret
cmp
test
bnd
jmp
xchg
ret
jmp
loop
aad
filds
ljmp
adcb
cmc
jmp
fcmovbe
cli
cmp
neg
sar
hlt
xlat
ret
leave
fimull
into
cmc
test
jecxz
sti
mul
cmp
repz
int3
fdiv
jmp
xchg
jecxz
cli
loopne
jmp
stc
xlat
cld
clc
rol
aad
ret
flds
jecxz
xchg
shr
sarb
call
neg
ror
stc
shl
xchg
fdivr
sar
imul
iret
clc
aad
stc
sar
leave
std
loop
int
shl
sar
clc
sti
idiv
testb
xchg
ret
iret
jmp
xor
cld
cli
xor
iret
std
in
vshufps
and
out
leave
jmp
call
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
jecxz
fcom
out
jmp
cmc
in
neg
int
aas
roll
aam
xor
in
sar
sti
call
int3
test
sti
xchg
imul
dec
mov
icebp
xor
xor
lret
fidivrs
lock
cld
repz
cmp
mov
leave
repz
xchg
xor
loop
ss
cmp
idivb
int
int
test
fcmove
leave
jmp
loopne
call
in
in
out
out
rcr
idiv
lock
not
inc
jmp
icebp
leave
cld
icebp
pushl
out
repz
ljmp
rolb
in
enter
mov
cmp
ljmp
aam
aas
out
mov
stc
testl
test
jmp
xor
iret
ror
out
sar
cmp
loopne
in
leave
hlt
ljmp
popl
shl
call
cld
in
xor
iret
aad
ret
rorb
imul
xchg
int3
out
cmc
jecxz
xor
leave
xor
lret
in
cld
sub
into
fcmovbe
shl
loope
in
in
nop
lock
repz
out
aam
cmp
lret
shr
test
fimull
mov
mov
mov
loopne
int3
int
jmp
repnz
cmp
iret
ret
ret
lds
icebp
adc
call
xor
out
out
int
out
cmp
cmp
test
push
sti
cli
loop
call
subl
das
jmp
in
into
iret
stc
cmp
xchg
ror
nop
ror
xlat
lret
test
neg
cmc
sti
cmp
stc
int
out
out
int3
xchg
aam
xor
ret
jmp
into
repnz
test
fdivrp
lret
fdiv
mul
lret
in
lret
cld
lret
cmp
xor
in
stc
ffree
addl
loope
rol
in
rcl
fdivr
clc
lret
vcvttpd2dq
mov
out
fsubrp
in
mov
shl
jmp
ss
sar
sti
in
xlat
in
test
std
lea
aad
ret
loop
in
cmp
jmp
fadds
jmp
loopne
fdivrp
clc
nop
xrelease
ret
divb
cld
cmp
aam
in
out
fmuls
lock
out
call
clc
fidivl
out
jecxz
sarl
fldl
hlt
call
fdivrp
nop
loop
out
in
cli
fmul
std
aad
out
in
idiv
xchg
repnz
orl
xchg
xor
loop
fmul
into
rcr
out
repnz
repz
out
rcl
jecxz
fdivr
in
nop
xchg
leave
jmp
sub
sub
cmp
aaa
xlat
xor
ret
lock
mov
sti
xchg
repnz
int3
in
jmp
ljmp
repz
jmp
fmull
jmp
fdiv
sti
xor
xor
out
rol
icebp
cmp
rcr
addb
fcoml
in
into
cld
out
fstp
iret
fiaddl
shl
lret
xchg
sti
add
rolb
loop
xor
lret
stc
repnz
cli
rcl
xor
inc
jmp
fmull
call
xor
int
hlt
shl
rol
cli
cmp
jmp
cmc
roll
in
xchg
sti
mov
test
hlt
hlt
ds
and
and
dec
repz
out
test
ss
imul
ss
rcl
cmp
rcr
fimuls
stc
jmp
xorb
enter
cmp
fcmovnbe
lret
cld
loopne
loopne
lock
faddp
xor
in
aam
ret
fxch
jmp
lret
fdivr
cld
cmp
cmpl
in
out
jmp
in
repz
rol
in
cld
fsin
shl
hlt
div
and
cmc
stc
xchg
lea
in
xor
enter
clc
jmp
repz
loop
mov
cld
cld
icebp
fcoml
hlt
int3
sar
aam
fdivr
cld
loope
lock
cli
jmp
fmul
call
jecxz
loopne
xor
sti
divb
out
ss
loope
shr
xchg
loopne
in
lret
mov
int
xchg
dec
ret
leave
out
out
out
clc
repnz
in
call
roll
xchg
sar
mov
shlb
jmp
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
ret
aad
jl
add
enter
jmp
adc
out
not
xor
in
rcl
lock
lock
lret
ljmp
loop
stc
rcr
stc
ret
ret
out
lds
xor
stc
fucom
fcom
call
out
in
in
sti
in
test
iret
loop
ljmp
fmul
aam
leave
call
hlt
test
out
cmp
mov
rcll
fcmovnbe
cmp
jmp
out
adc
sbb
in
jecxz
call
xchg
jmp
out
cld
lret
clc
fcmovbe
loope
rcr
vcmpsd
in
imul
ljmp
xor
leave
ljmp
repz
test
fchs
loop
mov
test
rorl
rcl
lock
call
sarb
adc
stc
clc
fiadds
aam
xor
out
rcl
rcl
fxch
out
and
in
loopne
mov
mov
mov
rcr
stc
int
cmpl
in
jecxz
fucom
fst
cli
cld
mov
test
shlb
in
shl
in
stc
icebp
aam
cmp
loopne,pt
sti
jmp
cli
into
xchg
ret
cmp
lock
clc
out
ret
stc
mov
int
cli
mov
into
ftst
xor
call
fadd
cmp
faddp
xlat
fcompp
jmp
lret
xchg
adc
fisubrs
sub
out
cmp
stc
cli
ss
lret
loopne
test
xchg
mov
roll
aaa
aad
rcl
shl
hlt
repnz
std
std
clc
rorl
ljmp
das
out
int
repnz
stc
loope
sti
shr
out
repnz
std
jecxz
mov
cmc
lret
out
clc
hlt
fdivrs
in
iret
aad
fucomp
out
sub
xchg
iret
cli
divl
ret
in
iret
leave
leave
fcmovnu
into
sar
mul
cmp
mov
xlat
fcomip
cld
rol
ror
ljmp
in
cmp
cld
ret
test
rol
xlat
fmul
fstp
xchg
out
jecxz
in
out
rcl
cmc
xor
xlat
into
ss
in
testb
mul
mov
out
out
out
or
sub
cs
jmp
aam
fidivrs
cmp
cmp
idiv
cli
fcom
cli
fimuls
out
fdivrp
call
out
cmp
aaa
cld
cmp
in
aas
sbb
ret
lret
in
rorl
jmp
xor
imul
repz
push
icebp
cmp
cmp
lret
jmp
mov
ret
mov
aaa
out
out
jecxz
loopne
cmp
add
jmp
in
repz
sti
leave
dec
cmp
aas
aad
cmp
mov
fucomip
flds
ror
loopne
stc
int
cli
cld
rcr
jecxz
adc
cli
rcr
out
cld
filds
shl
xlat
jmp
neg
stc
stc
stc
xor
addl
xchg
or
repz
sub
cmp
cmp
icebp
filds
out
lret
xchg
loope
repz
nop
xchg
lret
ljmp
out
into
hlt
lock
xchg
cmp
loop
not
mov
xchg
mov
rclb
lock
mov
rcr
jmp
aad
faddl
jecxz
lock
iret
out
lock
fiaddl
xlat
aam
fcmovnu
xlat
mov
fndisi(8087
addl
enter
aas
xor
fcmovnu
in
enter
in
jmp
lret
divb
ret
lret
out
lock
aad
fsubr
fld
out
rcl
test
sti
in
cli
roll
xor
shr
iret
ljmp
cmp
add
cmp
out
xchg
xchg
out
loope
xor
lock
lret
ds
aaa
loopne
rolb
mov
cli
xchg
mov
xchg
in
xor
ret
jmp
fnstcw
cmp
add
mov
aam
enter
jmp
cmc
jmp
std
xor
cmp
fdiv
cmc
in
fcmovb
xlat
aam
sarb
jmp
in
iret
xor
in
shr
cmp
call
shr
iret
rcl
enter
in
nop
in
sbb
ds
lret
fstp
jecxz
rolb
out
mov
into
out
loopne
out
in
out
iret
cmp
jmp
rcr
loope
repnz
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
and
fdivrs
add
test
jmp
test
jmp
sub
iret
in
cmc
in
lock
ror
fdivrl
add
roll
fsubrp
icebp
enter
ror
shr
out
lock
lret
stc
and
shl
jmp
int3
loopne
nop
fcomip
repz
fsub
int3
out
enter
cmp
testl
test
xor
shl
aaa
stc
out
fidivrl
repnz
loope
stc
loop
stc
in
std
lret
lock
xor
aam
cmc
repnz
out
rol
fmul
int3
in
rcl
in
out
jecxz
xor
ror
aad
repz
not
icebp
cld
ret
fucomip
loope
clc
loopne
xchg
xchg
mov
vaddsubpd
cli
lret
stc
hlt
neg
shl
xor
bnd
fcmovnbe
rcl
xchg
ss
clc
repnz
rcl
ss
adc
aam
sar
hlt
aam
stc
in
loop
out
lock
out
cmc
in
lret
cs
aad
fucomi
xlat
fidivrs
jecxz
fucom
repz
out
fmuls
mul
fcomi
fstpt
vpmaxub
ret
cmc
in
hlt
and
ror
xchg
rolb
jecxz
int3
sarl
ds
aam
fadds
cmp
loope
xlat
sub
shl
in
hlt
fistpll
clc
cmp
mov
xchg
mov
out
shr
xchg
test
in
repnz
ss
xor
addl
sti
fsubrp
shl
loope
shl
out
clc
cs
call
fdivrp
xlat
xchg
leave
rcr
repz
out
rcr
int
fst
in
int
cmp
cmpb
not
add
in
lret
xchg
xchg
jmp
ss
hlt
clc
fcmovne
enter
cmp
cmpl
jmp
in
out
mov
clc
xor
stc
out
icebp
fdiv
loope
sar
shr
rcl
sub
call
mov
in
mul
xlat
ror
in
fnstcw
sti
shl
aam
ds
vpmuludq
leave
aad
out
lret
fsubrp
lret
out
lret
lock
call
clc
pushl
cmp
fdivrp
aas
xlat
sbb
mov
out
cmp
xor
rcr
sarb
movl
aad
aam
ss
fcmovnu
aam
ss
ds
out
clc
jmp
loopne
out
jmp
in
int3
xchg
in
shr
not
int3
lock
cmp
std
fsub
out
neg
xlat
xchg
jmp
lea
int
aaa
aaa
sar
rcl
aam
int
stc
std
into
cmp
enter
std
in
mov
call
into
iret
sarl
cmp
fidivrl
cmc
fxam
in
cld
loope
leave
out
mov
das
shll
cmp
aaa
fiaddl
mul
fadd
fscale
fyl2xp1
icebp
enter
mov
aad
imulb
cmp
fstpt
fidivrs
repz
sbb
clc
aad
std
sti
loopne
mov
out
adcb
das
aam
aad
cld
test
xor
aad
rorb
addl
icebp
repnz
xlat
sar
sarb
rolb
or
lret
lret
out
xchg
xchg
test
sub
iret
lock
cmp
ret
jecxz
cmp
cmp
loop
jmp
xor
xor
fdiv
stc
lret
incb
bnd
sti
ds
jmp
and
lret
loopne
cld
repnz
xchg
cmc
xor
in
fsubr
repz
ljmp
in
leave
lret
cmp
fpatan
repnz
cld
div
cmp
lret
int3
rcll
ret
lret
out
lret
fsubr
jmp
addb
jmp
enter
addl
fprem
icebp
cmp
in
cmp
in
loopne
leave
call
lret
lret
shl
out
in
fcom
int
xlat
ljmp
lock
mov
out
iret
in
rol
test
lock
xor
into
xchg
and
std
orl
stc
faddp
into
aam
ret
fiadds
call
orb
xor
ret
xor
rcr
fpatan
loope
in
out
fldl2e
leave
in
ljmp
ljmp
out
std
aaa
xor
cli
neg
cli
rol
xchg
scas
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
ja
fistpll
add
xchg
in
int3
loop
repnz
inc
lock
shll
shl
iret
ss
jecxz
xlat
xlat
sti
aad
cmc
cmp
cli
xchg
aam
shl
xor
ljmp
shl
fcmovnu
xor
cmc
jmp
fprem
int3
int
lret
call
stc
cmc
fst
fdivrs
out
ror
repnz
lret
loope
jmp
int
jecxz
enter
cmp
lret
cmc
fdivrs
cmc
clc
cld
shl
int3
loopne
fsubr
fdivrp
nop
in
mul
loop
aam
clc
out
icebp
cmp
in
cmc
ror
dec
jmp
testb
in
out
jecxz
fucomp
fistpll
cld
aas
fdiv
stc
clc
aas
shl
loop
leave
fyl2xp1
call
mov
repnz
ror
call
ret
rol
icebp
stc
cmp
int3
leave
ljmp
loope
in
hlt
leave
lret
cmp
aam
in
shl
leave
call
mov
test
iret
sub
std
in
std
std
enter
fcmovnu
adc
ffreep
cld
call
iret
out
sub
ret
sti
int
out
sub
cmc
sti
mov
fxch
leave
ljmp
sti
hlt
rcl
jmp
lret
incb
fdivrp
loop
std
sub
in
loope
jecxz
out
jmp
int
repz
test
cmc
loopne
stc
hlt
enter
cld
int3
cli
xchg
int
ret
xor
cmp
cmp
cld
in
and
sti
mov
mov
adcb
aam
in
hlt
hlt
int3
loope
fninit
aaa
test
fnsetpm(287
fld
clc
test
stc
mov
xor
fidivs
aam
aad
call
fcmovu
not
test
jmp
and
loope
shl
in
loop
iret
icebp
xor
lret
stc
into
fcomi
jmp
ret
sar
shl
ljmp
shl
div
shlb
xor
call
sti
sbb
loop
ret
sti
out
sub
mov
call
out
fdiv
jmp
fdiv
cmp
fldl
cld
xchg
xchg
into
div
out
cmp
jmp
sar
cmp
faddp
jecxz
sti
leave
test
cli
adcl
in
idiv
enter
fucomp
ret
std
div
test
ljmp
faddp
mov
aaa
jecxz
xlat
shr
jmp
ror
shl
lock
iret
mov
out
out
call
aad
cld
xlat
int3
hlt
in
lock
fnclex
ffreep
cmp
addl
test
xor
int3
leave
aam
in
jecxz
sbb
clc
sbb
cmp
iret
ret
into
shlb
hlt
cmp
xlat
repz
xchg
aas
in
in
fdiv
repnz
xchg
xchg
rcl
shr
hlt
cmp
enter
jecxz
rcr
cmp
stc
lret
enter
cld
in
enter
xor
xor
out
fxch
aad
out
hlt
xor
fcomp
ljmp
shl
in
imul
aad
xor
in
iret
out
loopne
icebp
stc
int
shl
aas
movb
xchg
mov
ds
in
xor
sarb
ljmp
mul
ret
ffreep
aas
fincstp
sti
int
in
mov
icebp
aaa
out
idiv
fnstsw
out
xchg
add
cmc
enter
test
fucomp
incb
ret
fucomip
fdiv
idivl
ffreep
xor
test
test
leave
fmulp
decl
shl
ret
aam
rcl
rol
repnz
fsub
fcmovu
xchg
out
hlt
loopne
in
shll
cmp
ljmp
xlat
cld
lret
fucom
lret
icebp
int3
rorl
xor
fcmovne
fdivs
fprem1
inc
int3
cmp
hlt
std
fucomi
sti
test
xchg
in
int3
shr
xor
cli
lret
cmp
shr
std
out
loope
aad
sar
xchg
iret
into
xchg
loope
lret
in
stc
in
out
out
xlat
cmp
in
lds
enter
std
iret
ljmp
iret
int
fucomi
fmul
leave
icebp
cld
ror
rorb
mov
mov
loope
in
mov
ljmp
cli
jmp
int
in
loope
loop
fcmovnu
sbb
loope
fmul
mov
repnz
sub
repz
cmp
repnz
into
aad
shl
xlat
lret
cli
into
icebp
fisttpll
in
out
in
cmp
neg
sar
cmp
test
hlt
fimull
jmp
jmp
iret
int
ret
fstp
sbb
adc
jg
add
test
clc
lret
cli
fdivrl
cmc
aam
std
rol
call
in
idiv
cld
call
xchg
in
jecxz
jecxz
repz
jmp
sarl
aad
in
in
fsubr
mov
stc
sub
out
out
leave
shll
fcomi
cmp
icebp
lock
ds
repnz
rcl
rcr
and
mov
shr
cmp
fstpt
out
enter
in
clc
ret
mov
mov
loope
mul
repz
sti
cmc
in
loopne
lock
cmc
std
test
xlat
ljmp
out
in
xlat
xor
cmc
fcmovnu
enter
cld
in
sti
fcom
ds
rorl
mov
cmp
in
fdivp
xor
int3
out
enter
repz
ljmp
test
aad
in
test
iret
icebp
out
lret
cmp
f2xm1
not
shl
std
out
test
and
mov
fcmovnbe
mov
lock
out
cmp
xlat
fucomi
rol
rcr
rcl
lret
enter
cli
lret
test
shl
out
divl
stc
out
in
xor
lret
ss
cmp
imul
test
xlat
in
mov
mov
in
fldl
ljmp
out
fdivp
int3
lret
jmp
mov
xchg
int3
aad
repz
ss
sti
lock
mov
test
std
xchg
jmp
imul
out
sarl
addl
mov
fisttpll
lret
loopne
loop
stc
iret
shr
xor
in
in
fcomip
lds
test
lret
in
out
out
cmc
aad
xor
rol
cmp
cmp
ret
fsub
ret
xlat
test
xchg
lret
sub
xor
cld
in
out
dec
clc
cmp
out
test
jmp
fnstcw
int3
jecxz
xchg
orb
out
repz
xor
repnz
in
clc
cmp
shl
and
lret
into
into
int3
fdiv
xor
xor
xor
cmp
iret
rcr
repnz
repnz
idiv
jmp
iret
addb
ror
out
cmp
cmp
cmp
push
shl
add
stc
clc
test
lea
in
hlt
ljmp
std
testl
jmp
loopne
nop
out
shll
call
cmp
clc
std
sbb
jmp
std
loop
clc
mov
xchg
divb
cli
aad
jmp
ret
in
jmp
fcomp
jmp
mov
rcr
std
out
iret
in
xor
enter
icebp
in
lock
clc
push
cmp
out
cld
int3
call
int
cmp
cmp
enter
mul
cmp
fiaddl
fldl
cmp
in
aaa
out
ss
enter
in
jecxz
lock
cld
test
xchg
in
jecxz
sub
aad
xlat
fcmove
jmp
fptan
repz
enter
fucomi
out
xor
cs
xor
jmp
icebp
ret
ret
mov
ljmp
in
shl
leave
fmul
in
lret
xlat
cmc
cld
jecxz
cmp
in
std
add
out
ror
into
loopne
loopne
lock
iret
in
icebp
cmp
cli
jmp
sub
cmc
std
jecxz
lret
sub
loope
lret
stc
aaa
iret
cmp
icebp
cmp
stc
in
std
xor
fcomip
ror
pushl
in
xor
fincstp
fsubr
icebp
fsub
fcomp
into
xchg
xchg
mov
out
in
incb
int3
leave
imul
fxch
les
aad
loopne
cli
repnz
hlt
in
repnz
roll
lret
popl
aad
fcmovu
out
cmp
cmc
flds
std
lret
repnz
aad
int
in
out
aad
fdivr
xor
in
in
xlat
call
fcomp
repz
loope
cmc
cli
rcl
xlat
repnz
ljmp
repnz
jmp
xchg
out
clc
xor
lret
idivb
aad
cmp
ret
fcmovbe
cld
call
xchg
fcmovnu
loopne
xchg
test
ds
icebp
in
fprem1
xor
loope
fucom
xchg
orl
iret
rcr
out
ljmp
cld
cld
cli
adc
aam
lds
loop
orb
xor
repz
in
xor
int3
out
iret
iret
repz
ljmp
int3
xchg
int3
divl
je
xor
add
jmp
rol
sarl
rcl
mov
mov
lea
jmp
jl
jmp
jecxz
rcl
std
jmp
shl
xlat
neg
mov
lret
iret
xor
loope
ss
out
test
xlat
fcmovb
xlat
cmc
out
filds
rol
loopne
ror
repnz
repnz
loop
shl
icebp
ffree
xchg
sti
fcmovu
std
or
lret
xchg
jmp
rcl
rol
cmp
rcl
repz
in
aad
loopne
xlat
loopne
int
std
fcmovne
sti
std
iret
in
cmc
out
ss
cmc
sub
cmpl
add
or
mov
in
mul
xlat
icebp
call
std
cld
loope
stc
stc
leave
shr
orl
fsub
cmp
jmp
adc
out
in
xchg
fcmovu
test
fsubr
test
in
in
xor
std
int3
cmp
fdiv
test
mov
loope
clc
aas
std
ljmp
aad
out
lock
ss
cli
fcmove
cmp
ds
test
jmp
lds
xor
lret
xor
fdiv
cmp
ds
in
xrelease
xchg
lret
cld
loop
xor
lret
fucom
cmp
fidivrl
cmp
call
cli
lea
sub
sub
cmp
fadd
out
call
aam
fnstsw
testb
iret
decb
out
xor
repnz
aam
sti
loope
into
test
loope
shl
mov
cli
mov
int3
xor
icebp
aaa
clc
sti
out
enter
std
fstp
fnsave
fldl
mov
loop
lret
int
in
repz
loop
call
fcomip
aam
jecxz
repnz
lret
aad
loop
int
leave
cmp
leave
lret
fiadds
cld
xlat
sti
repnz
int3
mov
in
shr
out
iret
std
cmp
xlat
imul
aas
loope
out
in
and
call
rcr
fdivr
aas
xor
xor
fidivl
repz
jmp
les
loope
dec
faddl
fld
fidivl
shr
cli
lock
jecxz
in
addb
stc
stc
out
mov
divb
fcmovnu
fstpt
fcmovb
test
fcmove
xlat
enter
cld
rcl
mov
ret
fsubr
enter
hlt
cmp
cmp
loope
test
mov
clc
les
ljmp
lret
in
cli
xlat
stc
out
in
cmp
mov
inc
mov
in
out
in
cmc
cmp
fistpll
cld
jecxz
clc
mov
bnd
in
xlat
sub
test
aas
cmp
lds
jecxz
jmp
int
xchg
jecxz
sti
aam
xlat
jmp
jmp
lret
sti
shl
sti
cmc
aad
ret
enter
in
loope
int3
ror
cs
out
not
fstp
std
fchs
add
cli
fdivrl
fimuls
jmp
loopne
iret
jecxz
into
leave
cli
sti
leave
fcmovbe
call
rcr
stc
jmp
fsubp
std
decb
ds
icebp
jmp
div
lret
rcr
roll
ljmp
repnz
shr
jmp
aas
iret
cld
in
test
out
sbb
loope
addl
in
ret
xor
int3
fdivr
cld
shl
xor
aad
test
ds
out
and
call
loopne
ret
lret
ljmp
ret
shl
jecxz
out
mov
mov
into
cs
xor
in
int
shr
sti
shl
ret
cld
idiv
or
loop
xchg
mov
lret
out
cli
aaa
icebp
cmp
shr
jmp
in
out
xchg
std
in
icebp
xor
ret
out
lret
in
xor
cmp
int
ret
fcom
std
fildl
std
xchg
xchg
enter
rcr
into
sti
enter
jmp
fdivp
repnz
div
orb
mov
loop
cmc
aaa
jmp
call
cld
fcomi
lret
jecxz
cmp
icebp
cmc
fsubr
incl
xchg
mov
hlt
jecxz
in
xor
ss
int3
iret
xlat
cmp
ret
fcmovbe
out
loopne
fiadds
aad
sub
xor
fnop
into
shr
stc
rol
into
out
icebp
ret
repnz
lret
addl
int3
cs
out
shr
xor
idivl
fcomi
fcomi
sar
xlat
aad
stc
jmp
in
out
out
shr
ss
mov
jmp
iret
aad
aad
push
shrl
jl
add
std
fadds
test
ljmp
out
xchg
in
fyl2xp1
stc
in
enter
fidivrs
loopne
fcomip
out
call
fucom
fdivp
addb
xchg
leave
lret
shl
neg
cmp
aad
xor
loop
fcomip
mov
leave
faddp
fucomip
repz
call
lock
call
cmp
into
sti
faddl
cld
fsubr
mov
leave
ret
lret
idiv
fldt
dec
loopne
cmp
sbb
fld
call
fdivp
cs
xor
fadd
ds
in
sti
hlt
sbb
jmp
stc
clc
loope
jecxz
lock
into
int
clc
fcomp
lret
test
sti
clc
mov
ds
jecxz
ljmp
aaa
icebp
xor
fdivrs
aas
loop
int
filds
fsubr
mov
xchg
shrb
icebp
out
int3
jmp
cmp
iret
fiaddl
loopne
lea
fcmovnu
mov
aaa
das
int3
in
in
ror
in
fsubr
ror
ffree
icebp
neg
loop
loop
xchg
out
std
mov
xchg
xchg
divl
call
cmc
aam
idivl
int3
mul
sti
test
rorb
enter
rcll
stc
iret
out
repz
jmp
inc
cli
xchg
loopne
sti
testl
sub
ljmp
cmp
stc
aad
lds
sti
jmp
lret
nop
mov
mov
loopne
fcmovnu
xor
or
hlt
cmp
stc
add
out
in
fimuls
xchg
xor
cmp
xor
out
lock
hlt
cmc
cmc
mov
in
test
les
lret
fdivrp
icebp
fdivrp
xor
cmc
xchg
loopne
repnz
iret
in
ljmp
hlt
ljmp
cmp
shl
lret
icebp
loope
mov
rol
sarb
cmp
hlt
sarb
clc
or
aaa
sar
clc
std
mov
shr
sub
int
aam
jmp
jmp
repnz
flds
sub
fdivr
int
fcomip
lret
int3
in
fptan
repz
cld
clc
sar
ret
ret
test
out
in
mov
in
out
loopne
ds
cmc
jecxz
lock
clc
fcom
cmpl
aad
inc
in
iret
clc
adc
xchg
sti
xor
leave
aad
in
cld
faddp
in
test
call
repz
hlt
xor
int
repz
sti
loope
aam
cmp
out
stc
mov
out
clc
lock
cld
shl
std
not
ljmp
jecxz
test
xor
into
ret
neg
repz
idiv
out
repnz
out
fmulp
test
mov
in
xchg
icebp
out
divl
ss
lret
adc
cmp
fcomi
loopne
in
movl
repnz
ror
rcl
xor
div
cli
cli
clc
xlat
hlt
icebp
stc
aam
lret
mov
std
xchg
xor
mov
cmp
cld
sar
addl
fneni(8087
xchg
shll
jecxz
hlt
repnz
xor
into
shll
sbb
mov
testl
fmulp
xor
into
ljmp
ret
aas
inc
fstp
jmp
rcll
xlat
iret
ss
cli
cmp
lret
leave
aam
into
clc
aam
fcmove
fdivrp
in
int
out
ds
call
aam
lock
std
icebp
into
ds
mov
or
shr
out
mov
jmp
cmp
jmp
sti
aad
add
xchg
fisttpl
sti
out
xchg
into
xchg
in
int3
xor
aad
shl
hlt
aas
cmp
cmp
test
fld
int
lret
xchg
call
in
aaa
xor
shl
in
shl
fcmovu
mov
ds
xchg
xchg
call
loope
xor
repz
xor
roll
xchg
repz
jmp
out
xchg
test
in
int3
repnz
test
divb
clc
sti
sub
fucomi
loope
sub
xchg
in
or
aaa
test
shr
out
out
cld
adc
int3
loopne
aas
sarl
cld
in
mov
int3
in
lock
shll
sarl
adc
out
adc
push
out
mov
fnsetpm(287
loop
xchg
iret
repz
cmp
cmp
scas
roll
or
or
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
frstor
adc
jg
std
add
fsubp
jmp
mov
faddl
lret
hlt
enter
in
fsubr
repz
fidivrl
test
into
out
mov
test
call
out
xchg
jmp
out
sti
rcr
xor
hlt
loope
shl
out
cmp
loopne
ljmp
jmp
xor
xor
sti
cmp
sbb
in
repnz
ljmp
test
lret
in
cs
shl
cmp
into
xlat
shl
fdivrl
idiv
test
flds
icebp
out
jmp
mov
in
cs
cli
aam
lock
cmp
aad
call
fmull
cld
xchg
out
loop
aaa
leave
icebp
in
fdivrl
aad
addb
cli
sti
sti
out
lock
rcl
iret
cs
fldl
in
cld
cli
stc
test
std
lock
cli
xchg
xchg
rcl
jmp
xlat
out
shlb
jmp
rcr
aad
ret
cld
cmc
leave
loopne
sub
xchg
xor
repz
out
idivl
call
cmp
std
or
int
mov
std
call
enter
div
cmp
jecxz
sti
loop
cld
cld
stc
loopne
fildl
xor
xor
ljmp
fadd
fadds
mov
fld
cli
test
iret
test
int
in
hlt
xor
std
hlt
fsubr
and
loop
and
iret
jecxz
xchg
div
into
xor
fstp
stc
stc
sti
in
shl
test
les
and
in
iret
icebp
out
iret
xor
fdiv
lret
lock
loop
loopne
sti
fsubp
roll
ret
jmp
xlat
into
in
fcom
repnz
hlt
ret
cmp
fdivrl
testl
cmc
mov
in
mov
aad
aam
jecxz
loop
cld
aad
stc
loopne
stc
clc
mov
out
in
cmp
aam
out
incb
fmuls
jmp
xchg
xchg
ljmp
hlt
fdivs
fnstcw
clc
or
sti
in
ljmp
stc
in
xor
repz
loope
into
cmpb
cmc
icebp
fadd
or
std
loopne
int
jmp
ljmp
sti
aaa
out
fcomi
leave
fucomp
sti
cmc
aam
aas
stc
cmc
lret
sti
decb
mov
lret
icebp
xor
clc
enter
icebp
out
icebp
iret
xor
rol
incb
call
loopne
xchg
shl
ds
iret
out
sar
lret
cmp
incl
jmp
int
enter
push
aaa
rcl
ret
jmp
fsub
test
out
les
out
loop
lret
in
fmulp
leave
xor
clc
cli
lock
aad
ret
cmpl
rorl
clc
mov
adc
aad
rcl
aad
out
clc
int3
cmp
xor
ffreep
loope
in
cmp
orb
out
icebp
rcr
out
call
int
rol
cld
repz
sti
int3
in
leave
jecxz
xchg
icebp
mul
mul
int3
jecxz
repz
call
in
rolb
mov
mov
mov
not
mov
ss
sti
loope
shl
shl
fcomp
jmp
aam
out
loop
in
loope
in
xor
das
in
aam
fstpt
loope
xlat
out
sti
out
loopne
flds
enter
xor
ss
fcom
cmc
cmp
test
repnz
lret
xchg
fcomp
xchg
sar
mov
into
out
ret
leave
shl
out
fstpt
std
addb
loop
lret
out
mov
loop
shl
shr
ret
xlat
int
lret
enter
loope
cmp
clc
testb
loopne
mov
in
enter
sti
out
cld
fcomp
hlt
aad
flds
aad
in
mov
fimuls
neg
int3
out
cmp
repz
fcmovbe
xor
rcl
cmp
leave
and
call
bnd
std
das
lock
ds
ljmp
bnd
sti
mov
iret
lret
jmp
fld
aaa
iret
jmp
out
not
in
in
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
mov
jl
add
sar
loopne
sub
xchg
mov
iret
xor
hlt
repnz
fstp
jecxz
cmp
mul
adc
loopne
lret
sbb
in
aam
cmp
sti
aas
cli
sti
fucomp
xor
neg
jmp
in
lret
test
sti
leave
lret
cmp
hlt
stc
aam
fsubp
fcmovnbe
cmc
fadd
sbb
ret
in
out
shl
aaa
lret
shl
aam
xor
fmul
clc
loopne
loop
cmp
ljmp
mov
shl
shr
in
aad
int3
call
stc
div
faddl
fcomp
lret
cmp
jmp
ljmp
out
cmp
out
add
in
xlat
or
jmp
in
out
xchg
xor
jmp
sti
leave
icebp
xlat
into
xlat
int3
fiaddl
fimull
icebp
lea
rcr
std
aam
aad
leave
std
ds
loope
sar
xchg
ljmp
mov
addb
icebp
imul
sti
cmp
cmp
loop
cmp
fdecstp
in
fcmovne
mov
out
fucomi
mov
out
test
idivl
jmp
cmp
repz
fldpi
fcmove
fcoml
in
out
fcmovnbe
icebp
xlat
aam
fistpll
aas
ret
ds
ret
enter
out
jmp
repz
rol
cmp
lock
hlt
sbb
ret
shl
fcom
xchg
mov
mov
icebp
shl
jecxz
aaa
div
cli
rolb
and
leave
fcompp
iret
out
out
call
repnz
xor
std
cmp
cmp
in
fcmovu
std
xchg
lret
jmp
int
leave
ret
call
int3
lret
cmp
testl
and
cld
in
lea
in
xor
int3
aaa
lret
sti
cmc
iret
fabs
jmp
rcr
mov
repnz
xor
ss
out
loop
lock
aas
xchg
ret
mul
vpcomuq
xchg
subb
lret
cmp
enter
cmp
and
in
ret
fdivrp
lret
xchg
xlat
lock
cmp
iret
std
cmp
sti
cmp
fadd
fcmovnbe
cmc
jmp
mov
in
lret
call
rcr
cmp
fiadds
out
call
nop
hlt
lock
ljmp
jmp
call
out
repz
aam
jmp
in
mov
in
xor
xor
fcmovb
sar
iret
cmp
std
fcomp
test
in
fucomp
stc
enter
ljmp
cmp
out
xlat
rcl
cmp
int3
fdivp
loop
mov
ljmp
out
hlt
xlat
xor
iret
int3
int
cmp
loop
aad
fmulp
shr
std
mov
mov
leave
mov
hlt
loope,pn
stc
lret
loope
into
cli
cmp
std
repz
testb
in
xorb
out
int
cmc
in
cmp
cmp
loope
in
out
sti
testl
aad
repz
hlt
rcl
lret
lock
loope
mov
idiv
lret
int3
cli
test
xor
sub
loop
fucomip
ljmp
aad
jmp
or
repnz
call
aad
icebp
xlat
call
clc
cmp
leave
leave
fsts
cmpb
shll
clc
in
cmp
int
std
fdivr
cmp
test
xchg
clc
int3
test
out
ljmp
cmp
cld
loop
cmc
out
sar
xchg
fldl2t
enter
rcl
jmp
into
out
rcl
int
out
lock
out
sti
fiaddl
loop
and
in
mov
out
repz
out
repz
aam
xlat
cmp
aas
xchg
add
loop
jmp
iret
in
xchg
out
loope
out
xor
int3
cli
sub
call
and
aam
stc
rcr
out
fnclex
fisttpll
xor
aam
in
ret
in
jmp
int
fdivp
fdiv
test
int
adcb
repz
vaddsubpd
jmp
add
jmp
jmp
enter
fstp
fstp
adc
push
iret
pushf
or
jg
std
add
out
sar
fsub
mov
int3
mul
sbb
loopne
div
loope
into
in
ss
test
loope
out
loopne
leave
xlat
idiv
orl
cmp
jmp
lret
repnz
jecxz
rcl
lret
fsub
mov
mov
in
xlat
leave
int3
std
ss
clc
out
repz
icebp
aad
into
cmp
cmp
sub
into
xchg
loop
shlb
out
sti
aas
aad
cmp
in
loop
fcmovnu
std
jmp
mov
in
in
enter
lret
aad
stc
aaa
stc
sti
cmp
in
int
xchg
sbb
loope
lea
addl
fcomip
clc
cmp
ret
xor
loop
std
loopne
and
jmp
lret
ss
das
repz
test
testb
enter
in
lret
div
sub
sar
rcr
test
cmp
roll
xchg
call
or
icebp
and
rcr
ljmp
cld
ret
ljmp
out
clc
std
lock
shr
ror
shlb
xor
cld
rcr
std
aam
fdiv
jecxz
stc
fisttpl
xchg
repz
test
into
ljmp
fucomp
repz
shl
iret
cli
ret
sti
enter
int
out
nop
enter
ds
lret
clc
cmp
into
int3
loope
div
cmp
leave
mov
xchg
loope
fxtract
xor
lret
call
loope
faddl
call
int
rol
sub
xlat
addl
sub
mov
rcr
xor
jmp
in
clc
stc
neg
loope
iret
div
hlt
hlt
fimull
decl
xor
xor
repnz
testl
aam
faddl
roll
xor
fadd
out
fmul
leave
aad
int
rolb
jecxz
jecxz
mov
into
mov
in
ret
jmp
repz
call
xor
aam
ss
repz
test
jecxz
and
cmp
rcl
fdivrp
std
fsubr
imul
std
mov
fdivr
and
std
repz
cmc
cmp
fnstcw
ljmp
cli
aad
fmulp
in
cli
int
loopne
out
ljmp
loopne
in
sti
lret
fdivr
fcmove
cmp
cmc
cld
rcr
cmp
test
ljmp
int3
hlt
cmp
cmp
cmpb
ret
and
xchg
mov
loopne
xor
shl
out
std
fyl2xp1
in
stc
fsub
lock
mul
out
mov
into
repz
icebp
rcl
in
ss
iret
sti
ljmp
repz
cmp
int
xchg
test
leave
hlt
loop
clc
cld
lret
out
cmp
adc
lock
call
mov
lock
out
hlt
xor
loop
xor
clc
int3
cmc
into
loopne
out
shl
repnz
stc
sti
in
fucom
repz
std
mov
cs
aad
cmp
sub
clc
repz
in
fimuls
in
out
out
lret
repnz
cmp
repnz
fadds
ret
test
mov
mov
clc
shr
rcl
aad
filds
fadds
and
cmp
int3
xor
jmp
enter
stc
jmp
loop
rcl
fcmovnu
out
jmp
out
lret
int
lock
cmp
div
in
fildl
cmc
fnsetpm(287
in
fmuls
xchg
icebp
aad
int
out
sti
cmp
lock
out
incb
mov
sar
cs
ftst
out
ss
leave
sti
int
into
cld
repz
loopne
in
jmp
jmp
xchg
rcl
cmc
lret
cmp
xor
neg
in
test
fsubp
fmul
mov
call
jmp
ret
cmp
sti
fcomp
ror
iret
in
aam
xlat
rorb
test
leave
loope
xchg
ljmp
lock
stc
sti
cmp
jne
mov
xchg
add
add
aad
rcr
fstp
sbb
sub
mov
jg
std
add
flds
out
hlt
fsubr
mov
mov
mov
mul
enter
cld
cmp
sar
sar
rcl
mov
out
jmp
int
cmc
lret
in
stc
cmp
xlat
int
roll
jecxz,pt
jmp
vcvtpd2dq
icebp
mov
mov
hlt
ror
loopne
int
sti
imul
xor
into
test
loop
mov
add
sti
test
in
out
or
ror
fdiv
call
cmp
faddp
fsubp
fimuls
call
rcl
sub
leave
ljmp
rcr
rcr
cld
fdivr
jmp
cld
jecxz
mov
adc
das
mov
lock
int3
cli
and
les
mov
rolb
in
in
ret
repnz
lret
xor
in
faddl
mov
repz
in
in
out
lret
cmp
cmp
mov
mov
in
fsts
das
cmp
jmp
xor
test
shl
call
inc
into
ret
call
ftst
int
out
ljmp
xor
sti
xchg
mov
lret
int3
mov
ljmp
ss
jecxz
xchg
hlt
call
lds
loopne
aam
in
divb
fcmovnu
frstpm(287
aaa
cld
repz
mov
mov
fcmove
out
std
call
iret
clc
lock
cmp
fcmovu
lock
cli
in
clc
sar
enter
in
sbb
adcb
cmp
aad
cmp
cmp
loopne
neg
cli
test
cmp
jmp
mov
ret
cmp
aaa
cmp
fcmovu
sar
mov
aam
mov
xchg
loopne
int3
cmc
lret
in
ljmp
testl
out
lea
in
fistpll
in
shl
sarb
sbb
lock
lret
fiaddl
xchg
fsub
not
xor
call
out
cmc
aas
int
ss
ret
aas
and
into
fildll
xor
clc
div
xor
sarb
loope
cld
loop
mov
or
lea
xchg
cld
icebp
pop
xor
in
test
jecxz
cmp
faddl
sbb
test
mov
loope
into
lock
cmp
jmp
ljmp
loop
out
cli
mov
in
jmp
xor
in
in
icebp
shl
fdecstp
cmp
hlt
xlat
fcmovb
fdivrp
not
mov
int3
jecxz
lea
out
stc
jmp
cld
loope
ds
loopne
ret
testl
out
divb
xor
int
aam
cmp
repnz
ret
stc
loopne
out
fadd
xchg
int3
xchg
nop
aam
in
fxch
rcl
cmc
std
xor
aad
std
in
ret
cli
out
jecxz
lret
out
aaa
xor
into
sti
rcr
fidivrs
in
int
ret
cmp
loop
in
ljmp
orb
xor
cli
repz
ret
cmp
enter
in
lret
icebp
mov
test
out
xor
cld
sti
loop
cmp
fcmovu
leave
test
jmp
lock
cmc
in
repnz
ret
cli
in
aad
cmp
cld
std
sti
cmp
stc
fstp
and
out
repz
xor
hlt
xor
fdivrl
fsub
rolb
test
out
lock
lret
out
out
stc
xlat
sub
cmp
cmp
iret
mul
out
xchg
jecxz
xchg
loope
in
in
in
repnz
jmp
cmp
int3
fsub
cmp
mov
enter
in
loopne
fcmovne
mov
sub
leave
jmp
shl
fucomp
cmp
ljmp
fadd
addl
jmp
xor
repnz
cmp
shr
cld
xor
sti
shl
movl
xor
aad
jmp
leave
repz
cli
cmc
shl
lock
xlat
orl
loopne
shl
div
int3
fdiv
cli
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
testl
jl
add
xlat
hlt
xchg
fcmovnu
test
ret
addb
iret
lret
in
shr
shl
lock
cmp
loope
enter
fcmovnb
int3
std
repnz
rol
out
xlat
loop
fcomp
sti
repnz
sar
aad
ret
mov
out
test
xchg
div
aad
ss
cmp
in
cmpb
shr
stc
test
loope
xchg
xchg
cld
out
iret
into
out
repnz
std
aad
hlt
cmp
test
loop
leave
ljmp
repnz
int
cli
fsubr
out
cmp
clc
loopne
icebp
ror
jecxz
test
ljmp
into
test
into
xor
cmp
sar
addl
fisttpll
out
call
loop
fcmovbe
int
clc
lret
cmp
clc
cli
sti
lds
addl
in
lret
mul
ret
stc
out
in
std
in
hlt
ss
aam
into
hlt
in
out
xchg
fsub
repz
orl
int
xor
call
ret
cmp
shl
fmul
mov
sub
sub
xor
icebp
icebp
cli
repnz
fcmovbe
test
out
std
fdivr
jmp
filds
mov
repz
loopne
in
ljmp
loope
fld
hlt
inc
aam
int
jmp
std
xchg
loope
xor
out
cmp
int
cmp
sub
cmp
out
mov
aad
lret
ror
cmp
cmp
lret
repnz
loop
mov
sti
loope
in
xchg
in
out
repnz
clc
clc
iret
int3
into
icebp
fldl
xchg
mov
std
loope
std
loope
jmp
neg
xor
out
cli
cmp
clc
cmc
hlt
loop
xor
fst
test
out
int
mov
icebp
das
imul
repnz
xor
lret
jmp
in
int3
cmp
loope
flds
or
xchg
repnz
shl
cmp
fcmovnu
test
out
aas
icebp
xchg
fsub
out
addl
fmulp
xor
call
icebp
fcmovnb
fcomp
loopne
ret
cld
loop
fsub
loop
jmp
iret
in
call
stc
out
leave
fcmovne
fiadds
fdivr
loop
hlt
xlat
out
int
mov
int3
shl
fidivs
rcl
call
cmp
xor
sti
cmp
addb
into
out
mul
fcmovbe
cmp
repnz
loopne
fmul
lret
jmp
int3
icebp
loope
ror
shl
call
jmp
repnz
aam
aas
and
jmp
in
repnz
int3
into
lock
lret
ror
ds
shl
aad
shl
jmp
leave
fstl
cmc
shll
fsubr
cli
lds
call
sub
test
in
cli
out
fstpt
sti
loope
shl
rolb
out
nop
loop
std
into
repnz
clc
ror
in
iret
sarb
sar
out
mov
loopne
xchg
lret
in
call
cs
lock
ror
rolb
rolb
repz
les
fninit
stc
lds
sarl
cmp
clc
xlat
sarb
fdivrp
fucom
ffree
cld
mov
ret
test
ret
shl
in
iret
in
std
sub
out
fdivr
out
fsubr
cli
icebp
cld
mov
aam
in
cli
std
cmp
sti
int3
aad
neg
in
out
clc
cmp
shl
dec
decl
in
call
clc
xor
sti
cli
ds
mov
ret
or
loopne
enter
xlat
lds
lret
sti
repnz
loope
fsubp
ds
std
out
and
mov
in
xchg
enter
fldln2
aam
repz
cmp
out
idivl
cmp
testb
or
out
in
shl
out
cmp
aam
or
ret
call
iret
loop
std
ljmp
aam
in
clc
fcom
xlat
inc
lock
fldl
loop
leave
out
xchg
int3
icebp
rcl
cmp
ror
lret
aad
aas
cld
vpsrlw
ret
enter
xor
cld
nop
add
out
jmp
xor
clc
icebp
loopne
aaa
in
ret
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
shl
jb
mov
cmpsb
add
mov
clc
loop
cld
mov
idivl
in
shl
icebp
icebp
or
icebp
cli
sub
loop
stc
nop
fsub
jmp
jmp
ljmp
ret
xchg
stc
fsubrp
fists
out
out
stc
stc
jmp
shl
iret
hlt
cmp
in
test
hlt
jmp
cli
enter
repz
imul
in
in
in
cmp
jmp
fnsave
aad
xlat
shl
jmp
leave
or
cli
cli
jmp
out
out
div
xlat
int
into
sti
stc
test
xor
loopne
cmp
clc
cli
cld
loop
jmp
in
lret
ljmp
aas
fstpt
test
addb
testb
fucom
sar
loopne
shr
xor
leave
call
rol
cmc
xchg
test
xchg
jecxz
mov
jmp
das
shl
xlat
sarb
out
cmp
add
jmp
std
out
ret
adcl
cli
out
cmp
shr
repnz
rcl
mov
adc
cli
clc
out
lret
jmp
mov
and
xor
out
int
ss
rcl
and
jmp
mov
ljmp
repz
jmp
cmp
clc
in
fcmovnu
not
vpand
in
xchg
jecxz
int3
rol
ss
in
cld
int3
cmp
int
into
cld
aas
cmp
cmp
orb
xlat
stc
iret
enter
lock
bnd
loopne
hlt
in
idiv
jmp
test
in
icebp
mov
in
vpand
fcmovu
into
loope
in
aas
cmp
stc
test
leave
and
loope
mov
aam
aam
iret
out
cmc
ljmp
cmp
mov
leave
fucomi
fcmove
jmp
sub
repnz
call
fiaddl
test
std
test
mov
in
lret
leave
fcmovne
sar
stc
in
sub
fdiv
repz
enter
jecxz
in
aad
loopne
xor
leave
lock
cmp
jmp
fneni(8087
cli
loop
jmp
cld
in
std
lret
test
jecxz
ret
fsub
int
fsincos
out
ror
hlt
icebp
out
ret
roll
nop
rorb
out
xlat
shr
sar
xor
ds
rcl
cmp
in
loopne
mov
test
out
xor
jmp
cmc
fabs
cld
add
hlt
faddl
out
xchg
shl
leave
fdivp
imul
leave
jmp
cmp
sti
loope
sar
xchg
xchg
sbb
clc
enter
jecxz
xor
imul
cmp
cmp
mov
out
fadd
xchg
xchg
lock
aam
cmp
aad
fcmovnbe
int3
call
int3
shl
lock
jecxz
testl
xlat
ljmp
rcl
cmc
cmp
test
cmp
fcmovnb
test
clc
int
enter
ret
aad
ljmp
cmp
fstp
cmp
repnz
cld
out
in
loope
int
jmp
iret
xor
fidivrs
fsubrp
lret
cmp
fnstsw
call
xchg
in
into
fists
jmp
aam
in
int
lret
hlt
loop
flds
mov
movb
loop
in
out
test
stc
fxch
hlt
loope
out
ret
jecxz
fisttps
fucomp
loop
icebp
ret
shll
in
lret
in
fdivrp
test
loop
cmp
test
xchg
std
in
int3
mov
xor
out
lret
aad
cmp
sar
lock
ds
lds
lret
repnz
xchg
xor
int3
ljmp
ss
icebp
sti
jmp
dec
sbb
mov
fcoml
ror
cmp
xor
shl
fdivr
aam
loopne
lret
clc
mov
out
lret
adc
icebp
fcmovne
idivb
cmp
ftst
loope
fcomp
jmp
jmp
cld
out
ljmp
jmp
fldl
hlt
ret
cmc
ljmp
out
imul
ss
int
cmp
ret
shl
aas
hlt
aam
enter
cli
ret
call
sub
shlb
ret
aam
int
sti
cmp
ret
xchg
jecxz
lret
out
xchg
inc
or
or
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
sub
fmull
jl
ret
aad
enter
cmp
cmp
mov
xlat
leave
fcmovb
incb
shrb
hlt
out
sar
cmp
sar
hlt
out
movl
sub
lds
repnz
out
cmc
aaa
aas
fucomi
int3
iret
shl
les
iret
xchg
rclb
xlat
divl
xor
cmp
lret
std
cmp
test
ffree
in
call
shll
jmp
sti
cmp
xor
ror
fcmovnbe
cmp
xlat
in
mov
shll
in
sub
not
cmp
std
aad
in
iret
ret
xchg
aas
test
fucom
orl
jmp
into
clc
cli
leave
cmp
aam
in
aas
ds
loopne
sbb
out
out
xor
xor
div
in
jecxz
fchs
lock
addl
lea
xlat
lret
dec
out
cmp
fucomp
test
test
mov
jecxz
shl
test
fdivl
xor
shl
cmc
stc
cli
into
iret
cmc
cmpb
jmp
in
loopne
mov
sub
xor
idivb
clc
lock
aad
ret
not
in
fdivrl
fadd
fmul
lret
iret
enter
ljmp
fidivl
stc
cmp
clc
icebp
adc
stc
repz
mov
out
call
aad
xlat
lock
rcl
cmp
std
loope
fcomp
mov
enter
jecxz
jmp
out
jmp
test
enter
jmp
rcl
cli
ljmp
fdivr
fimull
incb
cmc
shlb
fdivrs
fcmovnbe
cmp
aad
cmp
jecxz
call
test
mov
ret
out
cmc
fucomp
int3
shr
xor
aas
mov
ljmp
mov
repz
lds
std
flds
icebp
loopne
fcmovnbe
fcmovne
filds
jecxz
icebp
call
cmc
ds
cmp
cmp
xlat
iret
test
fcmovnb
cli
in
jecxz
in
in
mov
sti
in
lret
iret
cli
ds
cli
loope
cmp
loope
mov
fld
xor
aad
shl
ljmp
and
jecxz
fdivr
std
cld
cld
addl
out
icebp
not
shlb
cmp
std
sarl
fnstcw
fcmovb
aam
fucom
std
jmp
mov
sti
hlt
into
cli
enter
clc
faddl
testl
lret
cs
rcl
aad
lret
iret
cmp
sar
fdivr
std
rcl
test
orl
int
xchg
shr
divl
iret
out
cmp
ss
inc
fsub
sar
shr
incl
in
out
loop
xlat
rcl
cmp
fmul
fxch
jmp
cmp
add
in
faddl
cmc
hlt
aas
in
lret
fcmovbe
xor
std
aas
int3
cmp
fcmovbe
repnz
mov
enter
sub
in
repnz
iret
icebp
cmp
cmp
push
aad
clc
stc
fcomp
lret
mov
fnclex
sub
shr
shll
xor
sti
out
add
add
repnz
fiadds
lret
in
xor
cmp
out
out
fdivrs
repz
lret
les
mov
aad
lock
xor
lret
adc
fcmovu
mul
out
ret
fmull
in
out
cs
fmul
xor
sarl
cmp
loopne
aam
ljmp
popl
shl
jmp
idiv
sar
fsubr
out
shl
cmp
and
loope
shr
out
out
xor
rcl
loop
std
cmp
faddp
jmp
loope
cmp
lret
mov
fucomip
jmp
icebp
jecxz
aad
cmp
lret
loope
cli
faddl
fsincos
test
iret
xchg
shrb
call
rol
hlt
out
stc
into
add
incl
mov
fucomp
bnd
shrl
ret
cmc
cld
cmp
jmp
cli
clc
cmp
in
loop
fcmovne
into
in
cli
fsub
int3
cs
sub
xlat
aam
cmp
int
test
in
mov
xchg
cld
out
loopne
jecxz
out
jmp
inc
call
inc
in
cmp
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
rcr
pop
xchg
push
xchg
jg
cmpsb
add
adc
cmc
int3
flds
sbb
out
in
jmp
xor
in
fsub
leave
fistpll
jecxz
sar
ror
jecxz
loop
mov
enter
xor
cmp
cmc
enter
out
shr
rol
cld
cmpl
mul
sti
aad
stc
in
adcb
loop
repnz
cmc
icebp
sarl
out
icebp
cmp
in
into
mov
repz
in
rol
jmp
test
cmp
jecxz
ret
sti
repnz
sbb
jmp
xor
in
in
repz
cmc
repz
cmp
sbb
loop
mov
loope
xor
in
repz
aad
lret
cmp
xlat
xchg
fdivr
in
les
xchg
in
rcr
leave
sti
std
fldlg2
fdivrl
out
xlat
add
call
jmp
xchg
in
aad
sar
aam
leave
icebp
xor
fcomp
cmc
cmp
fstpt
jmp
clc
sub
shr
mov
out
xlat
idivb
int
idiv
cli
fcomp
idiv
loop
fdiv
ljmp
mov
cld
mov
repnz
hlt
xlat
in
jmp
adc
ret
aam
leave
loopne
xchg
out
int
jmp
fsubp
lds
lret
cmp
neg
dec
fdivp
lds
mov
call
or
in
out
icebp
xor
cmp
cmp
out
xchg
les
in
fcmovnbe
ffreep
in
rcl
ret
in
xor
ljmp
loopne
jecxz
xacquire
mov
orl
lret
out
out
out
jecxz
adc
adc
cld
orl
incb
leave
into
cmc
cli
cli
int3
out
stc
frndint
repz
testl
in
adc
shrl
in
int
iret
aad
fistpll
xlat
fiadds
in
xchg
std
cmp
xchg
mov
icebp
leave
ss
sar
out
cli
loope
sarb
sar
shr
fisttps
jmp
enter
xor
ljmp
imul
loope
fcmovbe
leave
jmp
int
lret
icebp
into
jecxz
iret
in
das
jmp
in
call
cmp
out
in
neg
neg
in
std
repz
iret
call
cmp
in
repz
out
neg
cmp
in
stc
leave
mul
fsubr
cli
test
iret
xor
out
cmp
xor
hlt
clc
cmp
test
in
fucomp
fchs
int
cli
out
nop
out
in
out
out
fdivrl
stc
std
ret
loop
shl
sar
sub
jmp
lret
repnz
aaa
in
xlat
ss
sti
cmp
shl
fistpll
fcmovb
xchg
mov
mov
ljmp
jmp
cmp
stc
leave
fdivrl
cli
cmp
jecxz
in
leave
jecxz
xchg
ss
ljmp
icebp
hlt
std
aad
cmc
in
hlt
fucomi
orb
call
ret
lret
cmp
xor
hlt
in
lret
into
icebp
xlat
call
cld
flds
out
leave
aam
lret
sti
cli
enter
stc
fsubr
fcomi
iret
shr
in
xchg
mov
repz
into
jmp
cmp
aas
cmp
call
xlat
lock
loope
fbstp
rcl
ror
cmp
cmp
aas
div
shl
mov
in
icebp
int
loopne
xchg
sub
clc
in
cmc
xor
iret
xlat
call
fdivr
ret
xlat
xchg
ret
mov
xchg
icebp
iret
lret
lret
jmp
leave
int
aad
in
shl
fabs
test
cmp
mov
ljmp
lret
das
cmp
out
ffree
iret
fldl
cli
sti
cld
jecxz
ror
lret
lret
jmp
ljmp
icebp
aad
sti
fld1
enter
in
test
cmc
lock
sar
fdivr
repnz
call
out
sar
mov
lret
mul
int
call
lret
iret
cmp
les
hlt
idiv
stc
cld
mov
loop
not
jmp
repz
xlat
ds
roll
std
std
imul
enter
in
ret
cs
test
shll
fnstcw
div
in
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
cwtl
pop
add
jl
add
mov
loopne
lret
loope
xchg
shr
out
out
lock
rcl
clc
cmpl
fcomi
stc
ror
ret
not
fcmovu
mov
ret
in
enter
out
fcmovnu
sti
cmp
push
ret
xchg
call
jmp
jmp
in
ds
shl
rcl
int3
fcmovne
sti
in
xor
push
add
ret
jmp
repnz
xchg
sub
cmp
cli
int
in
ror
cld
repnz
test
sti
fcmovu
rcl
orb
faddl
in
hlt
hlt
lret
fstp
out
ds
ret
out
sar
and
clc
int3
fidivs
xor
jmp
shr
into
in
shl
sti
clc
hlt
in
cld
xchg
jmp
jmp
sub
jmp
cmc
fucomp
std
sbb
movl
jmp
hlt
repz
fdiv
fcmovne
call
cmp
ljmp
cmc
std
fucomp
out
loope
lret
rcl
divl
xlat
jmp
jmp
in
hlt
cmp
fndisi(8087
faddl
clc
std
loop
out
in
rol
shl
cmp
sar
repnz
loope
out
aad
lock
enter
in
loop
std
loop
hlt
hlt
xor
stc
jmp
xlat
enter
leave
in
loopne
loopne
ret
cmp
out
xchg
fmul
rolb
lock
loopne
in
in
fstpt
repz
fstpt
cld
std
repnz
fsubrp
hlt
cli
repnz
in
enter
in
leave
leave
ror
out
ds
mov
test
fcomi
aam
in
loope
icebp
xchg
loopne
jmp
stc
jmp
ljmp
fdivr
loope
out
cli
std
out
jmp
in
int3
in
call
ds
icebp
in
ret
ds
stc
call
jecxz
in
xchg
ret
in
ret
rcl
stc
call
std
test
ret
mov
int3
mov
shlb
stc
int3
cli
sti
in
out
lret
loope
cmp
repz
fidivrl
out
xchg
repz
jecxz
fsubrp
shlb
not
in
out
cmp
addl
cld
test
adcl
shrb
out
cmp
shl
aam
int3
icebp
fcomp
cli
aam
mov
xlat
add
out
lock
fbstp
leave
aaa
sarl
xor
out
div
repnz
xlat
sti
out
out
call
cmp
std
cmp
sti
rcl
shl
xor
ss
std
loop
dec
mov
mov
ss
loop
shr
cmc
iret
cld
loope
std
loope
flds
fiadds
adc
xchg
out
ror
das
xor
into
sti
fcmovnbe
fldln2
cmp
rcr
fucom
testl
int
ss
rol
xor
jmp
clc
addl
test
out
mov
stc
ret
in
rcr
shr
cmp
cmp
fcom
idiv
aad
dec
jecxz
cli
mov
sar
ljmp
icebp
aad
rcr
sub
not
in
loope
lret
xchg
aaa
int3
shll
iret
clc
repz
repz
loopne
stc
cli
aam
fsubr
fmul
in
in
jmp
out
enter
lret
shl
stc
loopne
out
sbb
into
xchg
fdivrp
sub
xlat
ljmp
in
in
std
hlt
fistpll
repz
cmp
cli
nop
rcll
iret
shr
sar
repnz
in
cli
cli
xchg
loop
ret
out
fcmovne
xor
xor
jmp
into
cmp
cmp
xor
clc
fxtract
testb
rorb
sar
shr
lock
icebp
ljmp
addl
jmp
lret
out
call
cmp
cmp
idiv
shl
rorb
xchg
iret
mov
lock
in
sarl
std
fmul
clc
aam
in
xchg
hlt
inc
ljmp
call
xor
icebp
ss
cmp
xbegin
fnclex
xchg
int
jmp
clc
cmp
mov
test
ljmp
sub
neg
aaa
repnz
cli
int
incb
loopne
int3
loopne
lea
fldl2t
ret
add
leave
rcl
fst
leave
pop
push
push
jl
add
fildll
shlb
cmp
aaa
faddl
out
out
mov
cmc
lret
test
in
ror
xchg
in
in
aam
call
xor
out
icebp
cmp
fdivr
cmp
sti
jmp
ret
std
out
mov
icebp
shl
xor
in
out
int3
ljmp
jecxz
ret
xchg
mov
loopne
lret
icebp
mov
enter
icebp
aaa
jmp
vmovq
cmp
movl
lock
icebp
repz
aas
clc
test
loope
fninit
std
lds
xchg
jmp
jecxz
fmul
ror
fdivrp
lock
mov
sti
fscale
mov
loop
in
leave
aam
in
call
iret
aam
fmull
in
xor
sti
lock
lret
cmp
iret
ret
cmp
shl
sar
std
loopne
out
into
call
loop
ror
out
rol
ljmp
cld
test
cli
clc
ffree
ret
xlat
enter
in
hlt
lret
out
repz
aaa
int
xor
stc
int
addb
in
test
ljmp
icebp
xor
int3
std
jmp
sti
cmp
shl
faddl
leave
xchg
icebp
lock
aad
cmp
ret
cmpb
repz
leave
clc
in
mov
jecxz
repnz
fcmovne
cli
idiv
clc
iret
loop
ret
hlt
decb
std
stc
mov
in
into
out
shl
into
shl
cmp
stc
loope
lock
in
xlat
repnz
imul
in
icebp
int3
mov
jecxz
ljmp
out
in
aas
sti
neg
xlat
aam
clc
aad
loopne
testb
ror
cmc
fld
rcl
enter
xor
idivb
cli
aad
jmp
imul
std
iret
clc
repz
xor
xor
out
idiv
stc
repz
mov
out
out
rolb
iret
aad
xor
xlat
test
xlat
cmp
in
aam
mov
shl
shl
lret
in
enter
loopne
fcmovnb
imul
stc
fdivrp
in
mov
fucomp
jmp
in
ret
cmc
lret
clc
repz
fcomi
test
mov
test
leave
into
loope
fldl
int
lret
sti
aam
xor
cmp
lock
idiv
loopne
in
fists
shll
xor
aas
roll
stc
fucompp
jmp
sub
fdiv
aad
repz
enter
ror
aas
jmp
cmpb
cmp
sti
addl
cmc
jmp
iret
ret
cmp
cmp
aad
fcmovb
addb
lret
out
fneni(8087
lret
shll
xor
cmp
leave
enter
std
in
idiv
repnz
into
icebp
adcl
not
aam
stc
xor
cmc
int3
in
ffreep
icebp
sti
enter
loop
lret
call
ds
xor
cld
dec
repnz
repnz
cmp
not
loope
loope
out
in
fmul
cli
int
enter
enter
iret
fidivrs
loope
repz
std
sar
faddl
icebp
sub
into
ljmp
fcmove
aad
and
jecxz
xchg
aam
call
in
in
xchg
stc
cmp
in
fcmovnu
aaa
ss
cmp
mul
hlt
aad
in
in
cmc
fld
leave
fcmovne
cli
rorb
ss
idivb
loopne
sti
fmull
fisttpll
shrl
xlat
xor
cld
leave
fnstsw
clc
xor
cmc
fistpll
mov
ret
clc
leave
loopne
cli
jecxz
shl
ss
ret
loop
loope
idiv
aad
out
in
iret
mov
out
call
into
int
ss
cmc
xlat
xlat
fldl
std
iret
in
mov
sti
fdiv
out
cli
cmp
and
flds
leave
mov
out
jmp
ret
ss
in
out
jmp
clc
lock
repnz
cmp
jecxz
xor
ret
mov
int
cs
ljmp
fcomp
rolb
aad
jecxz
iret
sub
lret
ss
out
cli
in
xor
add
add
jmp
leave
sarl
rcl
int
mov
int3
out
add
jg
cmpsb
add
repnz
cmp
ds
call
fsub
sar
loopne
call
sar
div
lret
neg
inc
aad
idiv
fimuls
xchg
lret
fimuls
repz
repnz
cmp
or
loopne
hlt
loopne
fisttps
lret
les
in
xor
test
fnstsw
out
cmc
jecxz
loop
fadds
rcr
shl
icebp
in
lock
lock
icebp
jecxz
rol
adc
addb
std
faddl
in
clc
fnstenv
cmp
aam
in
fidivrl
fxch
xchg
xchg
enter
fdivl
std
aas
out
neg
aam
repz
mov
fcmovne
out
test
out
xor
ljmp
aas
out
out
rolb
enter
hlt
in
out
cmp
aaa
fmul
cs
and
stc
rcr
not
shr
lret
imul
lock
xchg
xchg
ret
in
xor
lret
aad
addb
add
loop
sub
aaa
xor
fcmove
not
sar
cmp
mov
leave
in
fiadds
into
jmp
xlat
jmp
int
cmp
loope
ljmp
cmp
fnstcw
in
icebp
aam
fdivr
iret
not
leave
aad
fildl
mov
ss
cmp
lret
fndisi(8087
icebp
cmp
xlat
jecxz
fcomi
mov
fmul
fimuls
ljmp
fsubr
in
inc
hlt
xchg
test
call
xor
cld
in
cmp
aad
fiaddl
out
xchg
mov
ljmp
sub
cmp
cmc
fdivp
mov
orb
in
rcl
int3
mul
fidivl
jmp
repnz
xorl
roll
out
test
in
lret
repnz
sar
cmp
incl
jmp
cli
filds
xor
aam
hlt
bnd
repz
int3
cmp
test
out
out
ror
aad
sbb
int3
loope
jmp
lock
das
out
cli
stc
cmc
repz
ljmp
jmp
jmp
jmp
repz
mul
cmp
not
rcr
fucom
icebp
clc
imul
sub
int3
out
xchg
in
shr
das
fstpt
cmp
cld
stc
repz
aad
sti
aad
jecxz,pt
out
out
ficoml
xor
xor
repz
sarb
xlat
repz
xor
out
int3
xchg
xor
in
cmp
stc
jmp
faddp
cmp
aas
rolb
mov
out
lret
int
int
sub
sub
out
lret
repz
aad
aad
lock
lret
loope
jecxz
xor
shl
rol
in
cmp
fdivs
adc
leave
cld
in
stc
iret
push
xchg
xchg
in
xchg
jmp
in
fcmovu
stc
sti
sar
out
sbb
cmc
hlt
cli
mov
loope
xchg
xchg
mov
ret
ljmp
xlat
int3
faddl
xchg
loop
addl
xchg
call
shr
icebp
out
aaa
ds
ror
xlat
repz
cmc
mov
cmc
loopne
loopne
nop
xchg
iret
test
cmp
std
cmc
xor
aas
xchg
in
aad
and
clc
fucomp
jmp
in
fld
fxch
xor
aam
div
clc
aas
clc
rol
in
sbb
and
fmul
ror
ret
jecxz
fdiv
xlat
cmpl
sarl
adc
decl
hlt
sub
cs
divb
in
in
std
aam
lock
repz
out
not
out
fucom
xchg
xchg
les
loope
in
in
fstp
divl
stc
aam
jecxz
iret
ret
fcmovnb
mov
out
shr
shl
icebp
out
int3
std
divb
xor
cli
cmc
neg
xchg
mov
in
mov
sti
repz
in
int
hlt
xor
xor
ror
cmp
sub
clc
incb
shl
xchg
std
xchg
repnz
aad
call
out
int
clc
in
cli
div
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
loop
fsubrp
mov
std
shr
repz
cs
jmp
cmp
out
call
fadds
fcmovu
loop
mov
out
fcmovnu
in
std
out
enter
fcomi
lret
loope
add
loop
sbb
aad
loop
shl
mul
bnd
cmp
test
in
decb
test
loopne
ljmp
test
iret
out
out
std
in
stc
fcmovu
fmull
jmp
jecxz
mul
leave
cmp
fsubr
ljmp
fcmovb
mov
aam
out
nop
clc
loop
call
aaa
repnz
sar
loope
fdiv
repz
hlt
jmp
hlt
testb
iret
out
shr
in
xor
add
cmc
cld
enter
orl
in
ss
out
int
out
fcmovnu
fcmove
aam
xchg
cmp
lret
enter
push
fsubrl
xor
out
xlat
lock
out
loopne
aas
xlat
rcl
shl
loop
xchg
out
orl
in
into
jecxz
loopne
cmc
fadds
loopne
jmp
mov
shl
out
leave
aad
cli
jmp
repz
fcom
fsubp
aad
fcmovbe
in
mov
loop
push
ss
cmp
fldlg2
stc
or
fmul
loop
cmc
xchg
fiadds
in
repz
lret
sti
sar
not
test
enter
in
mov
call
xor
lock
ror
cmp
lock
xor
int
test
xchg
loopne
sub
sarb
lret
repz
cmp
sub
leave
lock
xchg
out
loop
stc
int3
int
into
aad
cmp
ds
in
sti
stc
repz
repnz
jmp
int
std
clc
cmp
jecxz
xor
xor
hlt
fdiv
fcomp
aam
clc
jmp
out
mov
into
jmp
xchg
shr
leave
fucomi
int3
xor
in
aam
fldz
cmp
xor
fdiv
out
mov
call
repnz
repz
shlb
div
xlat
cmp
in
cmp
mov
mov
test
jmp
lret
in
aad
idiv
ljmp
cli
xchg
call
in
cld
ds
fcmovb
fsubr
int3
lret
frstpm(287
loopne
shl
rcr
in
lock
in
loop
cmc
idivb
xor
std
xor
fnstcw
fcomip
aas
jecxz
xlat
xchg
mov
xchg
jmp
jecxz
repz
rol
out
xlat
shl
in
sbb
rcr
fcomip
xacquire
rcll
int3
vpsrld
fdivrp
loopne
cmp
aas
jecxz
xor
out
test
repz
lock
hlt
not
out
std
cli
in
out
hlt
jmp
clc
stc
enter
bnd
cli
fxch
enter
xor
loope
aam
jmp
faddl
xor
ret
xor
call
out
adc
fstp
mov
mov
cld
into
rorl
cli
cmp
lret
leave
ds
cmp
out
rcr
rcr
xchg
fucomip
clc
int3
jmp
aam
in
shl
in
cmp
aas
iret
clc
std
divl
cmp
jecxz
lock
fistl
lock
xor
cmp
cmp
shl
cmc
rorb
loope
add
or
ljmp
lock
fcmovnbe
mul
testb
sti
test
call
int3
out
call
ljmp
test
int
jmp
aad
out
xor
sti
lret
rolb
cmc
fcomp
repz
rolb
rolb
loope
cmp
out
cmp
fadd
cld
in
and
repnz
add
add
lret
lock
in
jmp
shl
idiv
cli
out
cmc
rol
clc
test
out
call
call
iret
repnz
out
cmp
les
enter
fstp
loopne
hlt
repz
icebp
int
call
loop
hlt
mul
sti
clc
call
je
movl
jmp
sarl
rcl
rcl
rol
ret
bound
sub
test
jl
add
ficoml
shl
jmp
cmp
cmp
sti
fcmovne
fld
adc
ffreep
mov
fxch
int
xchg
mov
div
into
out
hlt
xor
out
cmp
loopne
addb
int
jecxz
mov
int
shl
std
cmp
fsubr
out
cmp
sarb
aas
mov
out
jecxz
out
call
icebp
call
rcr
aas
call
in
ret
fucomip
add
leave
xchg
out
cmc
cld
xchg
leave
jmp
cmp
dec
repnz
ret
fimull
jmp
jecxz
mov
shl
stc
repz
ljmp
int3
hlt
fst
xor
orl
xchg
mov
shl
clc
call
jmp
shl
cmc
mul
std
in
ret
cmp
mov
call
cs
out
jmp
into
clc
cmp
cld
fcmovu
repnz
stc
in
cli
loop
lret
shl
rol
loopne
cmp
sarb
fld
fcmovb
jmp
lret
jmp
repnz
xchg
in
les
loopne
repz
stc
cmp
into
cmp
loop
fucom
ljmp
ret
mov
ror
das
cmp
loopne
std
shl
cmp
sti
cmp
jmp
sub
xchg
aad
int
rcl
int3
stc
fdiv
rcr
icebp
filds
mov
jmp
xchg
shl
in
icebp
das
cs
ds
loope
out
ret
cld
lock
mov
cld
in
jmp
xor
lret
enter
in
loopne
xchg
add
orb
sub
ror
das
push
jmp
aad
clc
repz
cld
cmc
stc
addb
enter
rcl
loopne
clc
cmp
xor
jmp
in
faddp
enter
xchg
cli
cld
repz
jmp
shrb
lret
shr
lret
loopne
ret
clc
loop
repz
sar
ljmp
fisttps
sti
out
enter
std
cli
test
rolb
leave
sti
lret
test
xchg
into
loop
out
cmp
cli
sarb
stc
fmulp
rol
call
fcmovb
out
in
lret
out
loope
jmp
icebp
std
hlt
loope
inc
test
sar
out
or
fprem
out
test
in
xor
ljmp
clc
cmp
std
into
rcl
repz
sbb
out
std
loope
in
out
into
out
into
aad
jmp
iret
sti
sti
test
fcmovb
mov
in
bnd
xor
in
in
and
ret
jmp
fsubr
jecxz
leave
orb
sub
out
aaa
rcl
aad
lret
cmc
out
lock
aam
mov
stc
not
cld
into
xchg
enter
cmp
std
cmc
aaa
ror
loopne
in
mov
clc
out
fnsetpm(287
mov
mov
jecxz
aaa
out
sar
xor
cmc
rol
xchg
shl
addb
ret
push
xor
xor
das
clc
repz
aam
hlt
std
cmp
cmc
repnz
sub
fld
roll
ret
shlb
aaa
out
cmp
jmp
test
cli
test
mul
jmp
sbb
in
das
cmc
xor
sti
lret
xor
fsubr
imul
ljmp
ds
clc
in
cli
fcmovu
int
lret
lock
aam
aam
fnstcw
in
ret
ret
test
fiaddl
shl
jmp
xor
in
fstpt
sub
in
aad
stc
fcmovu
fiaddl
out
out
xor
cmp
out
neg
sar
fdivrp
flds
adc
shr
xchg
leave
rcr
enter
std
cli
out
cli
repz
sti
fldl
vpsubsb
mov
jmp
out
aad
out
ret
aas
frndint
or
test
icebp
repnz
div
fmul
in
fstp
cmp
fmul
aas
in
cmp
in
in
ljmp
aaa
cmp
jmp
in
xlat
rcr
aad
xor
clc
in
test
enter
stc
call
int3
fcmovb
lock
in
mov
xbegin
xchg
aad
aad
inc
hlt
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
mov
jg
cmpsb
add
cmp
repz
xor
out
shl
repz
fcmovbe
int3
iret
lret
fcomip
jecxz
stc
out
repz
xor
lret
icebp
faddl
loopne
fsub
mov
das
rcl
in
lock
fcmovu
lret
cmc
sub
ds
std
enter
iret
jmp
shl
int
lock
icebp
xor
in
call
loope
jecxz
stc
cmc
mov
test
out
int3
ret
cld
lret
repz
xlat
std
in
test
dec
xlat
incl
repnz
in
ret
rol
stc
enter
cmp
lock
rorb
loopne
jmp
in
hlt
xor
in
lds
sarl
enter
adc
in
xlat
fucom
inc
jecxz
sti
in
call
xor
ror
ljmp
fld
fdivrl
repz
rcl
mov
cld
orl
clc
into
cmp
cmp
xchg
enter
in
enter
adc
out
out
int3
ss
call
cmp
in
icebp
cld
repz
in
fcmove
incl
cmc
lock
xlat
jmp
std
cmp
stc
fadd
out
out
mul
call
xchg
dec
aad
std
int3
idivl
test
lret
fdivr
rol
add
hlt
loope
in
rcl
in
out
repz
lds
leave
cld
fxch
jecxz
std
aad
faddp
incb
jmp
mov
xor
sti
shl
frndint
xlat
fdivrs
cmp
shl
dec
cmpb
int
out
ret
fcoml
ss
repz
cmp
cmp
loop
test
lret
fcmovne
shl
xchg
mov
jmp
repnz
sti
cmp
clc
lock
into
iret
xlat
faddl
orb
mov
in
hlt
ret
hlt
ds
stc
cmpl
ret
out
mov
std
rcr
shll
shlb
neg
xor
cmp
fcomp
jecxz
loop
mov
rolb
jmp
aad
sti
xlat
repnz
icebp
aad
repnz
sti
loop
mov
call
in
hlt
fmulp
repz
hlt
ret
xlat
aad
fucomp
in
fcmovb
fdivrp
mov
fimull
xlat
leave
into
rcr
out
icebp
and
ljmp
lds
jmp
mov
ret
cmp
icebp
clc
jmp
cmp
frndint
mov
int3
sbb
icebp
hlt
xor
in
jmp
jmp
ret
vpaddq
shr
fsub
stc
icebp
into
lock
aaa
jmp
ds
out
repnz
sti
fldln2
ret
xchg
rcl
icebp
in
sar
cmp
adc
out
leave
out
iret
mov
fcoms
xor
aad
fstp
clc
aam
fcmovnbe
fdivr
fmul
enter
xchg
lret
loopne
hlt
stc
int3
xlat
ror
call
rcl
jmp
test
enter
xor
idiv
call
xlat
sti
icebp
std
test
out
jecxz
lea
call
call
lret
enter
loope
cld
loop
std
mov
ret
fiadds
ss
out
leave
int
cli
lock
fldl2e
xor
out
test
test
out
sub
out
shr
in
das
repz
out
repz
fcomip
lret
sti
sti
in
ffree
clc
xchg
mov
test
in
call
xor
hlt
fnstsw
aas
out
cmp
test
call
fstp
rorl
into
in
in
leave
cs
xor
sti
fdivp
test
cmc
repz
neg
out
xchg
xchg
out
xchg
in
das
sti
ret
into
iret
ljmp
sti
repnz
jmp
mov
std
and
fisubrs
lock
iret
aam
cmp
aaa
xor
lret
xchg
xchg
faddp
jmp
std
loope
mov
out
aad
sar
jmp
int
int3
xchg
and
aad
jmp
xor
int3
in
out
jmp
aam
iret
cmp
cmp
aam
decb
test
jecxz
int3
out
aaa
out
loop
xor
xlat
repnz
stc
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
add
jg
cmpsb
add
clc
xlat
cmp
les
out
lea
ret
iret
jmp
sti
rcl
lock
fmul
jecxz
aad
or
cli
repz
shr
faddp
divl
int3
out
iret
ljmp
loopne
aam
not
neg
enter
cmc
xchg
rcr
cld
into
out
int3
enter
loope
in
repz
iret
mov
or
repz
loopne
xor
repz
out
dec
sti
into
ffree
std
clc
rorl
call
cld
loope
lock
ret
int3
fcmovbe
cmp
cld
test
into
leave
fptan
test
mov
repnz
ret
cmp
lock
jmp
call
xlat
fneni(8087
ret
addb
shl
aad
in
cmp
aaa
out
xlat
xlat
jecxz
loop
cli
incb
fisttpll
aam
in
stc
loop
int
loope
xor
cmp
fucomip
vpaddb
in
jmp
hlt
enter
xor
cli
aam
cmp
addb
in
leave
fisttpll
repz
xor
iret
cmp
repz
std
into
cmp
rcr
rol
div
fsub
orl
aad
lock
hlt
out
ss
cmp
repz
aas
loope
sti
mov
xlat
rcl
lock
aaa
into
in
roll
les
xlat
jmp
orl
in
out
fcmovnu
out
cld
lret
cld
shl
out
jecxz
in
std
mov
out
les
in
cmp
int
not
sti
icebp
aas
mov
jmp
sti
ljmp
aaa
leave
into
jmp
cld
aad
cmp
repz
fiaddl
mov
repz
out
in
fistpll
iret
push
sub
fdivp
in
xchg
in
repz
call
dec
cmp
aad
fdivr
cmp
lea
divl
xor
into
call
ljmp
cmp
hlt
cmc
lret
xchg
ljmp
out
repz
call
fdivrl
stc
jecxz
in
aad
test
hlt
fmul
in
out
push
shl
in
ljmp
cld
std
lret
ss
cmp
lock
testl
ljmp
xor
loope
ds
sarb
in
testb
fadds
jecxz
test
aam
out
imul
sar
out
ds
mul
aam
lea
in
nop
out
shlb
xor
not
repz
idiv
cmp
fdiv
cmc
xchg
sti
loopne
cli
in
jmp
xchg
xchg
in
in
jmp
leave
stc
loop
int
testb
lds
std
in
xor
ret
rcl
call
cmp
out
clc
aas
sbb
in
in
mov
std
mov
lret
repz
cmp
fmul
clc
aam
rcr
sti
loopne
xchg
ljmp
call
loop
loopne
iret
out
lds
cmp
cli
aas
repz
xchg
jecxz
enter
lret
xchg
nop
in
int
xor
icebp
cmp
clc
aad
sti
sbb
and
mov
mov
repz
stc
leave
cmc
out
xor
rcl
sarl
flds
hlt
int
mov
rol
ljmp
imul
shr
cmc
shl
mov
fisttps
out
test
ret
int3
lret
repz
repnz
fdivr
cmc
icebp
rcl
loope
in
std
test
iret
fcmovu
fdivrl
faddp
cmc
idivl
cli
cld
hlt
ror
int3
neg
repz
test
cli
testl
loopne
in
in
imul
lret
icebp
stc
ror
xlat
aas
cmpl
aad
cmp
stc
mov
out
aaa
enter
aaa
fcmovnu
cld
ljmp
xchg
jmp
lret
into
cld
sub
xor
xor
icebp
sti
repz
jmp
or
test
hlt
hlt
leave
jecxz
ftst
repz
fyl2xp1
in
repnz
repnz
testl
fsubrp
fldl
loop
aad
fmul
rcr
int3
loope
repz
std
cmp
xlat
out
loopne
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
fists
out
in
xor
cmp
sti
cmp
xchg
jecxz
movb
rcl
ret
repz
cmc
jmp
aas
or
sbb
hlt
shl
lret
test
test
mov
cmp
hlt
aad
ds
aad
repnz
fcomi
cli
clc
fadds
in
hlt
aad
leave
cmp
fdivrl
jmp
hlt
out
inc
and
mov
clc
jecxz
out
repnz
in
cmc
int
int
fxtract
icebp
neg
sti
cli
and
mov
add
xchg
loopne
das
loopne
sub
int
lock
iret
repz
ret
aad
decb
mov
out
call
out
out
not
ss
shl
icebp
rcr
aad
loopne
clc
ret
ret
cli
out
loopne
in
xchg
in
fxch
repnz
shl
fstpt
shll
fsubp
shl
in
mov
out
rorl
div
lret
loopne
cmp
loopne
fninit
shl
inc
cmc
in
loop
mov
xchg
xchg
repz
loopne
icebp
shl
rcr
repz
fmul
in
out
out
lret
lret
int
bnd
in
ss
ret
fucomi
fucom
repz
adc
ret
enter
cmp
ds
into
in
hlt
sti
shl
loopne
fdivr
fmuls
in
int3
aad
fxch
cmp
jmp
fcmovnbe
roll
sub
out
addb
repz
ror
cmp
aaa
cmp
clc
xor
cmp
fcmovne
loope
mov
mov
cld
sti
jmp
test
ljmp
out
sti
cld
cmp
cli
cli
loop
jmp
or
sub
xor
aam
iret
jmp
cli
sar
aas
ds
loope
test
mov
in
faddl
int3
lret
cmp
call
in
in
sti
movb
fsubrp
loop
xor
fld
xor
sarl
int
fcmovnb
jecxz
addb
testl
xlat
jmp
std
cmp
fdivrl
cmp
jmp
in
or
xchg
repz
xchg
stc
xor
ss
out
call
xchg
mov
sti
iret
fisttpl
imul
xor
clc
stc
xlat
shll
cmp
repz
std
loop
in
lds
xchg
int3
ret
int3
loop
out
mov
aad
sti
jmp
sbb
fcmovnu
loop
cmp
or
shr
pushl
jecxz
in
enter
cmp
lock
aad
aam
in
test
xor
mov
call
lret
cmp
div
ret
ds
aam
mov
lret
test
into
cli
xchg
hlt
sar
jmp
cmp
cmp
std
test
hlt
mov
and
int
sarl
mul
sar
in
aad
rol
test
test
aad
sarl
enter
shr
jmp
xor
enter
in
ret
loope
aad
rcr
movl
ljmp
jmp
fstp
clc
jmp
call
out
std
rorl
iret
lds
loope
in
cmc
iret
cmp
les
mov
out
std
int
cmp
cmp
clc
in
mov
or
mov
ss
jmp
repnz
shl
jecxz
iret
ret
std
call
loope
repnz
cs
ljmp
fld
enter
repnz
inc
fcmovbe
lret
xbegin
mov
enter
sar
fdiv
in
repz
in
mov
in
int
cld
ror
fcoml
xor
out
fucomi
out
xor
lret
in
fdivr
ljmp
fldl
iret
ret
int3
call
hlt
jecxz
jecxz
std
and
loop
fndisi(8087
lret
mov
fcmovne
fmul
repz
repz
ret
repz
cli
xlat
ljmp
lea
xor
iret
into
aad
into
ffreep
rcl
rcr
loopne
ret
ds
out
addl
jecxz
jmp
rol
int
fst
fcmovne
xor
in
add
jl
cmp
hlt
cmp
idivb
repz
movl
mov
shl
in
rcl
ror
cmp
roll
enter
xchg
rclb
jmp
ss
out
out
shr
jmp
out
add
repz
sar
jecxz
mov
icebp
call
lock
cmp
cli
fdivr
xlat
lret
loopne
ret
loope
fstp
cli
stc
leave
int
loopne
xchg
mov
jmp
rcl
out
ljmp
cmc
not
in
mul
cli
test
loopne
int
shr
jmp
icebp
int
rol
icebp
jecxz
in
loope
aas
repnz
in
jmp
fcmovu
enter
repz
imul
xor
cmp
imul
lret
in
in
aas
xlat
mov
aas
loopne
in
fdivrp
mov
xor
cmp
fidivrl
loope
hlt
int3
loope
roll
shl
sbb
in
repnz
out
xor
ss
int3
cld
loop
into
incb
out
jmp
mov
lock
call
enter
repz
mov
mov
call
shr
leave
imul
hlt
cmp
cmp
xchg
call
icebp
mov
ss
cmp
in
rcr
cmc
loope
xlat
cmp
jmp
icebp
in
in
in
jmp
shl
int
cmp
fldln2
rcl
loopne
loopne
ret
sar
clc
loop
fsub
mov
stc
int
xor
into
lock
aam
mov
loopne
sbb
xchg
lret
sub
repnz
shll
cmp
in
addl
filds
in
int3
int
lret
out
loopne
iret
hlt
out
ds
rcr
mov
in
test
mov
lret
fsubp
mov
repz
jmp
repz
sti
sar
fdivp
vpsrld
test
loopne
in
stc
ss
cmp
fucom
cld
cli
aad
test
aam
in
ds
ret
std
jecxz
in
cmc
int
sti
in
std
cmc
cmc
cmp
in
mov
roll
xor
clc
in
ret
lock
ss
cld
clc
ror
xor
jecxz
xlat
cld
stc
ret
out
test
call
cmc
jmp
aas
int
shr
cmp
ffree
stc
jmp
lret
xchg
mov
cmp
xor
aaa
ds
in
xchg
hlt
fiadds
fmull
shr
lock
cmp
xor
out
iret
clc
div
testb
fdivr
sbb
xchg
std
lret
out
iret
not
icebp
repz
into
call
jmp
int3
lret
sti
out
test
call
aam
fnstenv
jmp
ljmp
addl
loopne
lret
fcmove
mov
repnz
out
int3
enter
xor
sbb
iret
and
stc
ljmp
test
in
mov
das
cld
cmp
sar
mov
jecxz
jmp
jecxz
test
lret
iret
out
out
iret
lret
cs
ss
lret
repnz
repz
shl
lret
xlat
cmp
ret
out
lock
xlat
imul
iret
xor
iret
leave
xor
jecxz
fcomp
mul
shl
hlt
and
xchg
int
in
repz
shlb
or
int3
out
inc
addl
out
mov
hlt
xor
into
ss
fld
cld
test
cmp
loope
mov
cli
fiaddl
rol
loop
ror
ljmp
ret
ret
xchg
jmp
mov
in
mov
cli
shl
out
in
sar
addb
ret
shr
out
std
repnz
hlt
sti
in
lret
fistpll
xor
cmp
xchg
out
test
test
shrb
mul
cmp
fmuls
xchg
ljmp
sar
jmp
fcom
std
aas
rcr
aam
in
neg
fcmovnu
mov
ljmp
out
fidivl
jmp
xor
dec
fdivrp
cmc
cli
fildl
leave
out
lret
ss
fnstsw
in
in
repnz
clc
jecxz
jmp
lret
ret
fstpl
fidivrl
sbb
jg
cmpsb
add
aam
loopne
leave
jmp
mov
out
loop
rolb
rcl
cs
cld
jmp
aam
call
xor
mov
mov
out
into
out
std
mov
ret
icebp
jmp
jecxz
jmp
div
inc
out
sti
shr
int
sti
fdivr
xchg
jmp
rol
ss
cmp
cmp
repnz
in
sub
out
loope
nop
nop
std
lret
int3
in
idiv
cli
out
hlt
cli
jmp
lock
and
call
shl
orl
out
shl
cmc
test
aam
leave
loop
fisttps
xchg
loop
jmp
aaa
xor
mov
enter
sti
ret
test
mov
loope
mov
stc
xor
fyl2xp1
into
sar
cli
loopne
loope
fmul
rcl
out
clc
stc
call
call
into
into
clc
int
aas
sub
addl
in
xchg
xchg
int3
repnz
das
clc
fdiv
les
cli
fldl
sub
leave
int3
sti
fimuls
rol
sub
out
aam
int3
fcmovne
rol
xlat
int3
fadd
hlt
not
shl
cld
lret
iret
jecxz
mov
out
ds
in
jmp
fstp
out
stc
test
xchg
hlt
enter
addl
pop
div
lret
sar
repnz
fmulp
aas
stc
cli
aam
stc
fsub
in
sti
sub
orb
repnz
repnz
ror
cmp
xlat
cli
shr
filds
in
fchs
jmp
iret
mov
repz
icebp
out
fcmovnb
xlat
cmp
icebp
cmp
fadds
in
cli
xchg
fldl
call
jmp
xlat
cmp
icebp
iret
aas
hlt
loopne
out
out
frndint
mov
adc
out
clc
jmp
cmp
sar
in
sar
aas
out
stc
test
ljmp
ret
lret
lret
icebp
aam
xorb
xlat
aad
cmc
cmc
loopne
out
mov
ret
lret
mov
test
clc
iret
shll
hlt
cld
cmp
fsincos
shl
mov
mov
mov
loope
icebp
rol
in
shl
xor
cmp
cli
lret
fsub
addl
loope
in
xchg
xor
sti
hlt
xlat
jmp
call
icebp
icebp
test
sub
mov
fsubr
enter
lret
xor
cli
cmp
icebp
cmp
cmc
faddl
cld
fcmovnu
out
in
lret
out
sub
xor
xor
repz
sti
in
cmp
cmc
flds
cmp
in
fdivr
adcl
icebp
sti
repnz
ror
in
mov
mov
jmp
mov
jmp
rcr
out
ljmp
cmp
sbb
mov
xchg
add
clc
enter
lock
neg
hlt
test
xchg
fucom
stc
mov
xchg
into
xchg
mov
fidivs
sarb
xor
cmp
jmp
in
shl
leave
lock
out
shr
ror
xlat
imul
ljmp
rcl
std
out
shl
int
neg
enter
xchg
fcmove
ss
jmp
fiadds
filds
fsub
rcr
jmp
aad
fidivl
rol
cmp
int3
cmp
shl
aad
idiv
sti
lret
in
cmp
mov
in
ret
lock
xlat
xor
icebp
ror
shr
repnz
stc
loope
test
lock
fnstenv
repnz
cmp
out
mov
aad
ljmp
cld
cmp
loop
icebp
fld
mul
test
imul
movb
out
ret
sar
leave
test
cmp
cmp
fcomp
lea
iret
das
int3
idivl
repz
fnstcw
adc
loope
or
sar
ljmp
cmc
lret
icebp
repz
repnz
ljmp
shl
hlt
loopne
mov
in
ror
shl
neg
fcmovnu
ss
ret
xlat
rcr
jmp
jmp
mov
ds
in
div
repnz
out
into
iret
iret
ret
mul
ret
jmp
cli
pop
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
cmp
aam
jg
cmpsb
add
iret
fcmove
int
repnz
xor
aaa
in
fcmove
cs
aam
cmp
rcr
and
jmp
lret
int
out
cmc
xor
out
int3
fcmovnb
cs
fidivrs
fcmovne
in
stc
fdivrl
into
fiaddl
int
jmp
add
out
cmc
int
out
aad
ror
flds
jmp
xor
cld
fucomip
in
xchg
fsubr
jmp
sti
int3
ror
aad
not
shl
incl
out
jmp
xchg
ret
fiadds
out
cmp
test
cmp
aas
loopne
fsubrp
in
out
sti
or
in
sub
lret
ror
in
fsubr
repnz
in
clc
aam
stc
rcr
fcmove
sti
test
out
icebp
lret
loop
xor
aaa
leave
into
xor
loope
jmp
test
xor
loop
call
in
vpsubw
fdiv
aaa
int3
rol
aad
cli
call
rol
les
shl
shl
cs
idiv
f2xm1
fiaddl
fisttpl
in
fisttpll
xor
cmp
cmp
loopne
mov
fmuls
cld
into
imull
das
xor
sti
out
in
cmp
fsubr
and
lock
aam
in
cld
in
ljmp
jecxz
iret
icebp
out
xor
cmp
loop
addb
stc
out
in
nop
jmp
lock
in
ljmp
clc
icebp
ffree
fucom
rol
ror
popl
call
xlat
ret
cmc
icebp
cli
sti
call
rcr
cmp
cli
adc
fninit
incb
xchg
xor
ljmp
aas
aas
ret
fnstcw
jmp
fcmovnu
cmp
lock
mov
xor
lock
into
sarl
loopne
in
cld
xchg
repz
out
fdiv
int3
cli
cmp
fcmove
cmp
hlt
fxch
clc
std
test
into
xchg
fmul
ror
incb
sar
faddp
cmc
jmp
xchg
xchg
roll
int
cli
out
repnz
shl
fisttpll
loop
clc
mov
test
xor
neg
jmp
cmp
loope
lret
cld
aam
loopne
lret
std
jmp
clc
mov
in
hlt
out
out
fmul
cmp
lret
aas
fdivr
out
cmp
incb
xor
int
fucomi
fldl2e
leave
cmp
lock
ret
test
faddp
flds
jmp
xor
shl
cmp
xlat
aam
mov
out
lret
into
rclb
shr
sar
ret
fnstenv
shl
adc
loopne
bnd
in
adcl
int3
xor
ljmp
loop
roll
fisttps
idivb
divl
icebp
rcl
clc
lret
icebp
in
in
call
fmuls
repnz
xor
int
shl
clc
loope
into
repnz
std
fidivrs
in
sti
mov
xchg
in
incb
clc
cmp
fdecstp
shl
lock
rcl
shl
addb
lret
jecxz
xor
out
not
icebp
xor
repz
into
push
cld
orb
icebp
in
faddp
xor
leave
lret
into
rcl
in
rcr
fucom
cli
push
mov
jmp
in
jmp
in
ror
enter
ss
stc
lock
jmp
and
lock
xor
aaa
aam
sti
out
mul
cld
cmp
out
icebp
addl
decb
cld
lret
sar
iret
aaa
icebp
ljmp
ror
repz
orl
adc
int3
int
into
in
enter
cmp
cmp
loope
hlt
sti
ds
leave
lea
orl
fidivl
fdivr
fsubr
aam
pushl
int3
fdivr
repz
incl
std
iret
rorb
xor
cmp
cli
lret
aas
std
fcmovnu
fildl
enter
out
shr
xchg
lret
shr
ret
hlt
lret
lret
call
ret
aam
idiv
in
ret
test
shl
sub
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
mov
jg
cmpsb
add
out
ret
aam
repnz
fld
out
rcl
repnz
loope
repnz
loopne
out
clc
fpatan
lret
xor
test
mov
ret
loope
mov
lret
hlt
aam
out
lret
in
ss
fsubr
and
jecxz
icebp
incb
test
in
cli
cld
loopne
orl
sar
cmp
test
fstp
cmp
cmp
std
xlat
std
loopne
xchg
xchg
jmp
xor
xor
fxch
repnz
loope
stc
sti
mov
int
in
xor
xor
out
cmp
in
sarl
int3
shl
loop
fsub
ret
and
repz
jmp
xor
cmp
cli
lret
cmp
aad
fdivrp
rol
loop
xlat
jmp
out
ljmp
icebp
repnz
jmp
fcomp
in
fstpt
cmp
jecxz
fcmovu
ret
test
out
jmp
aad
xlat
xor
int3
sti
xor
icebp
fmulp
ror
ffreep
in
in
not
loop
loop
lret
loop
cmc
lock
call
call
cmp
fld
roll
in
stc
call
rcr
xor
cmp
jmp
hlt
call
aad
leave
cld
rcr
orb
out
das
loope
aaa
jmp
enter
sar
cmp
fdivp
inc
loopne
sub
mov
repnz
lock
out
call
int
cmp
cmp
adc
icebp
xlat
fistpll
fmull
in
sub
fcmovnb
aad
shl
cmp
ret
xor
into
faddl
fdivr
fsub
xchg
sub
xlat
out
xor
call
ds
loop
aad
out
fcmovnbe
out
loope
fadds
aad
cmp
icebp
aam
cmp
add
ffree
lds
adcb
in
int
imul
cmp
rcl
rcl
in
loope
loopne
in
movb
in
in
ljmp
sarl
cmp
shl
fldl
fxch
out
xchg
cli
lock
xor
cmp
xor
sti
lock
repnz
cmp
leave
lock
jmp
jmp
lret
ss
ljmp
in
cmp
sti
repnz
sti
into
ljmp
ljmp
fcomi
icebp
cmp
test
fdivrp
mov
int
iret
icebp
clc
loop
mov
repnz
shrl
stc
cld
cmc
int3
jmp
aad
clc
cmp
fiaddl
out
inc
loope
stc
repnz
das
out
aad
cmp
cmp
loop
cmc
inc
ljmp
loop
loop
enter
enter
cld
iret
cmp
repnz
out
aad
xchg
aad
leave
out
in
jmp
xchg
xor
mov
std
shl
loope
cmp
rol
ds
test
fadd
jmp
dec
mov
sti
in
loope
xor
rcl
lret
aad
aam
in
sbb
jecxz
icebp
lock
testb
in
in
sarl
icebp
ljmp
icebp
ret
addb
loop
movl
out
xlat
in
lret
enter
jmp
fcmovbe
jecxz
out
cld
rcr
sbb
sbb
cli
addl
lock
fdivrl
add
out
stc
cmc
stc
incb
lret
in
aad
out
cmp
xor
shll
clc
lock
fdiv
in
fucom
mov
jmp
sti
mov
cmc
into
hlt
stc
in
in
xor
stc
stc
divb
repz
repz
clc
out
xchg
ret
call
shl
enter
xchg
rol
rcl
sti
enter
xchg
shr
hlt
xlat
aad
stc
xor
leave
loope
into
aaa
fcomip
test
rcl
mov
fucomp
fucomi
or
sub
out
cmp
aad
sarb
rcr
lret
aad
clc
aas
ror
fildl
mov
lret
out
loop
lock
div
lret
loope
shl
incl
or
fucom
fucomi
movl
cmp
das
cmp
fldl2t
cmp
rcr
out
xchg
fisttpll
mov
mov
aaa
ret
xor
fmul
aad
cmp
lock
cmc
test
ljmp
enter
out
hlt
jmp
andl
jmp
mov
jmp
iret
aad
aad
adc
lea
sbb
jg
cmpsb
add
loopne
test
mov
xchg
cld
ror
repz
out
lret
fucomp
ss
aam
iret
add
jmp
jmp
mov
in
call
repnz
int
faddp
loop
rol
aad
cmp
int
in
into
call
out
xor
enter
shl
loope
ror
mov
leave
int3
sti
call
leave
into
ret
lret
sarl
cmp
hlt
xlat
jecxz
ret
loope
sti
leave
xchg
std
xchg
xchg
aam
shlb
ss
in
iret
cld
icebp
xlat
in
jmp
cmp
nop
repnz
in
xlat
fcmovu
mov
aam
fcomp
std
aam
leave
fldl
out
mov
aam
xor
not
neg
fsubr
cmc
cmp
ljmp
sarl
out
fmuls
lds
sar
repnz
repz
idiv
loop
loope
rorb
mov
into
fsub
xor
loope
shl
div
loope
jmp
testb
enter
iret
in
sub
iret
shl
sti
std
jmp
sti
cli
fcomip
jecxz
fcmovu
out
stc
in
into
repnz
xlat
loop
xor
repz
out
stc
divb
cmc
std
add
xchg
fucomip
mov
mov
ror
xor
repz
cmp
ss
in
shl
lock
fisttps
in
loop
cmc
not
xor
xlat
ror
aas
loope
std
loope
cld
std
lea
xchg
cmc
in
fnstenv
stc
leave
call
lock
xor
mov
addl
shr
shl
fnsetpm(287
out
cmp
dec
out
test
ret
stc
jmp
lret
jmp
dec
cmc
in
jmp
xor
loope
rcr
loopne
jmp
mov
icebp
fldl
les
jmp
in
aas
div
stc
shl
aad
out
mov
dec
out
repz
shl
aad
xor
idivb
fcmovbe
fcmovnbe
fdiv
adc
rol
std
les
xchg
icebp
cli
and
mul
in
neg
idivb
fdivl
ror
out
clc
aas
ret
loop
cmp
ret
nop
jmp
jmp
xor
fxch
test
icebp
aam
rcl
out
cld
loop
sti
cld
call
mov
cmpb
loop
cmp
int
into
ljmp
into
in
cld
xchg
cld
movb
lock
lock
std
lock
xor
cmp
lret
xchg
incb
fiaddl
repz
xor
lret
in
in
cmp
loop
fld
loope
test
enter
mov
into
clc
icebp
ljmp
sar
jecxz
repnz
jmp
in
std
or
rcl
loop,pt
jecxz
lret
sti
in
out
idiv
fcom
shl
incb
in
jmp
int
in
loop
imull
in
in
dec
cmc
out
loop
cld
cmp
clc
hlt
int3
cmp
lock
sub
fcmovnbe
aaa
in
fmul
out
std
fxch
cmp
test
test
addb
lea
loop
out
cmp
ss
std
shl
test
sbb
mov
call
rol
aad
aas
shl
loope,pt
rolb
std
in
lret
xchg
repz
enter
xor
cli
xor
loope
std
fdiv
sar
cmp
enter
fmul
call
call
hlt
xor
repnz
fidivrl
cmc
ret
rol
roll
jecxz
fsubp
mov
iret
jecxz
xor
lock
cmp
icebp
ds
ds
mov
dec
xchg
das
jmp
xor
icebp
call
in
loope
cld
loope
repz
fisttps
mov
out
xor
cli
fnstenv
aas
lret
ss
test
shl
fdiv
mov
fdivr
ljmp
les
out
xor
fdivrs
fadds
clc
fst
stc
mov
loope
out
in
loop
int
loope
test
sar
shl
test
cld
sbb
out
mov
aam
aam
lret
fldl
ret
and
rcr
mov
jmp
mov
int
mov
sbb
jl
add
in
in
test
out
nop
ret
lds
into
cmp
in
out
fxch
cmp
or
fninit
loopne
test
iret
sti
out
rcl
jmp
cli
cmp
xor
aad
icebp
out
sti
aam
stc
mov
lret
xchg
xchg
out
leave
iret
out
repnz
ss
not
cmp
fcomi
fcmovnbe
ret
stc
jmp
mov
imul
shl
fcomi
out
cmc
shl
in
shll
loopne
ds
mov
loopne
jmp
rol
jecxz
shr
lock
aas
fdiv
std
fstp
rcr
fadd
xchg
mov
xbegin
fsub
ljmp
repz
cmp
rcr
repnz
xchg
cli
icebp
in
incb
out
jmp
xor
int
aas
clc
aad
aas
loop
incb
sub
repz
fdivp
lock
fcmovnbe
cmp
aad
ror
idivb
out
mov
mov
jmp
loop
in
mov
xchg
not
fmul
aaa
fstp
cmp
lock
ljmp
repnz
fisttpl
std
icebp
xchg
shll
int3
xor
out
cmp
fucomp
in
sarl
mul
ret
xchg
xchg
xlat
ss
aam
enter
and
test
test
sti
xchg
lret
into
dec
lock
xor
icebp
cmp
xor
idiv
in
test
int3
iret
fcmovbe
loop
int
out
enter
xor
ror
clc
fdivrp
xchg
jmp
std
fisttpll
sub
int3
jmp
cmp
roll
loopne
out
add
rorb
xor
aam
fcmovb
aam
fldl
in
repnz
lret
mov
icebp
xor
jmp
sub
and
mov
div
fisttps
loope
iret
out
in
aad
ret
aam
int3
out
loope
aam
in
cli
shl
mov
xlat
out
clc
jmp
sarb
cmp
hlt
repz
cmc
cmp
std
aaa
rcr
sti
in
lret
lret
fdivr
loop
lret
hlt
leave
rol
icebp
repz
cmc
cmp
std
cmp
fadd
in
ret
fstp
stc
loope
fsubp
test
iret
rol
rcl
fdiv
jmp
stc
shl
icebp
ret
loop
aad
pop
into
in
rorb
enter
xlat
cmc
jmp
out
enter
loop
cmc
out
cmc
testb
xorl
out
shl
ljmp
lret
repz
jmp
xchg
fiadds
shl
lret
hlt
fcmove
fcmovu
fildl
cmp
std
jecxz
nop
lret
aad
shl
int3
xlat
lret
fstp
clc
jmp
sarb
in
loope
hlt
cld
addl
cmc
div
cs
hlt
jmp
fidivrs
iret
cli
fstp
ret
xlat
repnz
leave
loop
mov
fsqrt
in
out
in
rorb
in
bnd
out
stc
into
repz
roll
fsubrp
icebp
repz
enter
jmp
cmp
cmp
inc
mov
in
xchg
int3
nop
das
xor
lret
xor
ss
idivl
cmp
loop
fdivrp
stc
mov
aaa
imul
xlat
stc
cmp
repnz
sti
cmc
lock
in
aas
rcr
add
int
mov
fucom
mov
sub
ror
lret
into
ds
out
in
ljmp
in
hlt
in
ljmp
lock
ss
loopne
std
rcr
ret
loopne
les
fiadds
xlat
int3
out
out
xor
incb
jmp
fimull
ror
xor
leave
ret
xor
cmp
cli
into
loopne
fmul
std
neg
test
enter
ljmp
mov
shrl
xor
fxch
repz
ss
lret
fsub
test
aam
xchg
les
xchg
in
shl
int
aad
shl
fucomip
jecxz
rcr
ret
incl
fsts
into
aaa
icebp
hlt
jecxz
jmp
cmp
repz
out
out
fmuls
rcl
xchg
lret
int3
xor
pushl
cmc
fdivr
shr
ret
shl
cli
fisttpll
out
in
mov
mov
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
in
aam
lret
in
cmp
fcmovbe
dec
into
clc
repz
fcmovnu
mov
fcmovne
cld
jecxz
aaa
sar
ror
aad
fnstcw
aad
int3
fcmovu
vcmpsd
aad
sti
loopne
fldl
xlat
ret
xor
cmp
cmp
cmp
shl
icebp
leave
rorb
icebp
in
fcoml
repz
into
shl
cld
std
loopne
cli
int3
xlat
jecxz
ret
sti
fldl
xchg
xor
cmp
out
cmc
hlt
shr
or
ds
aam
imul
mov
mov
std
test
mov
jmp
xor
vpaddsw
shl
clc
rol
repz
loopne
fsubrs
int
lock
clc
aad
in
repz
hlt
fadds
stc
filds
xor
imul
in
lock
fcmovbe
fsubr
iret
sar
lock
ljmp
test
xor
clc
icebp
jmp
stc
rcl
call
ror
lock
stc
in
lret
mov
out
ror
mov
jecxz
out
iret
xor
ds
jmp
cmc
sar
loope
mov
lret
ljmp
int3
out
sub
icebp
sti
jecxz
ljmp
vcmpsd
jmp
aaa
xor
out
repnz
out
loopne
xor
repnz
rorb
clc
loope
std
cli
cmc
rcl
out
cmp
cli
lret
stc
cmp
aam
cld
cmp
loopne
ds
std
xchg
inc
icebp
out
ffreep
aaa
lds
repnz
icebp
fcomip
adc
xlat
fdivr
lret
sbb
int
nop
xchg
lock
out
fdivs
cmp
xor
lock
testb
cld
adcl
fcomp
das
out
lret
iret
rcl
icebp
rolb
cmc
out
int3
mov
into
cs
int
lock
jmp
rcr
jecxz
iret
rol
in
loopne
hlt
in
out
fucomip
adc
xor
imul
jmp
cld
fst
ds
repnz
loopne
aam
repnz
in
stc
test
icebp
repnz
xchg
in
ret
in
clc
neg
neg
ds
out
repz
add
out
xchg
mov
int
cs
in
int3
lret
loope
ljmp
or
rcr
test
out
mov
ret
sub
cmp
repz
sbb
test
fstl
enter
repz
clc
mul
sar
cmp
ljmp
jmp
in
ss
cli
shl
not
in
ffree
std
rcr
incb
std
rclb
xor
clc
ljmp
cmp
ds
in
test
nop
hlt
icebp
xor
out
int
int
fnstcw
lret
std
lds
test
in
leave
ror
call
in
lock
loop
enter
icebp
fsubrp
sti
sbb
mov
xchg
out
out
fucomip
lret
out
loope
in
not
xor
cld
fcomi
sarb
shl
adc
cli
mov
out
test
stc
div
loop
cli
aam
fsubr
aam
roll
loopne
or
mov
xor
div
sarl
sti
fxch
cli
cmc
lret
cli
test
ret
idiv
loope
imul
in
leave
icebp
in
fldz
cmp
xlat
fcomip
aad
decb
std
out
out
orb
aaa
xor
fcmovnbe
iret
ror
lret
cmpb
in
xchg
test
int
cmp
cmc
in
fadd
into
rcr
sar
roll
jmp
nop
in
cmc
fmull
rcl
int
cmp
aam
cmc
stc
icebp
idivl
inc
cld
aam
leave
push
out
loope
out
das
int3
cmc
ret
ljmp
xlat
shl
loop
test
sbb
xchg
out
sar
into
xor
fcomi
aad
out
fmul
xlat
cmp
out
clc
filds
in
jmp
cs
leave
int3
ljmp
std
out
push
out
ret
clc
stc
int
sti
loopne
loop
lock
repz
cmc
int
frndint
xor
cmp
cmc
fsub
aad
in
mov
test
jmp
mov
mov
enter
iret
aaa
in
testl
jmp
inc
cld
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
ss
cmpsb
pop
jg
cmpsb
add
fnstsw
hlt
jecxz
aam
xchg
xchg
loop
xchg
out
stc
into
out
lret
stc
lret
rol
fucom
cmp
jmp
mov
ret
shr
jmp
ljmp
int3
sar
ds
sar
in
faddp
cli
leave
jecxz
cmc
hlt
lret
jmp
cli
cmc
jmp
or
jmp
xchg
test
jmp
lret
jecxz
into
jmp
aad
rcl
ret
std
vpmaxub
rol
in
in
ljmp
sub
ss
fsubr
into
fucomi
leave
loopne,pt
ret
inc
stc
std
jecxz
loop
jmp
aam
sub
ret
aad
out
xor
fdivr
out
aad
out
hlt
loope
clc
lret
lret
test
loop
int3
jmp
out
xor
lret
rcr
fdivrl
int3
test
int3
cmp
jecxz
stc
stc
iret
out
fldl
das
in
lock
cmc
ror
fadd
clc
fiadds
mov
ret
out
jmp
clc
loop
repnz
loopne
ljmp
in
xor
cld
sbb
push
ret
in
cli
enter
cmp
fdiv
shl
cli
ret
ljmp
decl
enter
les
icebp
loopne
ljmp
ljmp
in
in
lock
ret
fdivr
xlat
jmp
cmc
in
filds
test
repz
cmpb
in
int3
cld
mov
in
mov
xor
shl
iret
ror
fnstsw
rcl
std
lds
cmp
loope
cmc
test
lret
std
stc
in
in
xchg
ds
cmp
repnz
cmp
fstp
icebp
aam
in
fcomip
lret
vpsubb
icebp
mov
jmp
out
ljmp
int3
icebp
aam
fdivrs
shl
leave
sti
orb
rorl
cmc
shl
sarb
fadd
xlat
ljmp
lret
xor
mov
out
fcomp
xor
into
cmp
fucomi
fcmovu
fmulp
out
into
fadd
out
mov
shr
sti
loope
lock
out
cmp
jmp
out
cmp
out
cmp
incl
fdivp
or
jmp
sar
or
leave
lock
fmul
leave
fidivrs
mov
lret
jmp
in
shl
cmc
mov
xor
rcl
lret
iret
cs
jmp
test
std
fsubr
orb
lock
mov
lock
cmc
cmc
aad
repnz
cmp
loop
loop
std
incb
loopne
out
mov
jmp
hlt
xor
fdivs
ds
xor
xlat
clc
aam
aam
stc
aad
idiv
and
test
loope
hlt
sti
lret
shl
cmp
cmpb
jmp
in
iret
mov
aam
out
jmp
imul
cmp
out
filds
sti
leave
mov
cld
leave
mov
mov
fdivs
out
out
iret
clc
loope
cmp
sar
ret
fmul
sti
in
shr
leave
repz
faddp
jecxz
jecxz
std
int3
idiv
cmp
mov
lret
sti
call
lret
in
enter
int3
lret
not
repnz
loopne
call
mov
in
into
shr
and
jmp
ljmp
idiv
out
cld
xlat
aam
leave
call
sub
fnstenv
jmp
idivb
call
repz
in
mul
in
out
out
nop
xchg
aam
aam
repnz
lock
fiadds
cmc
xlat
ret
neg
test
cld
jecxz
jecxz
xor
ljmp
iret
aad
ret
sar
cmpb
sar
fsubp
sub
repnz
into
into
hlt
fidivl
out
cmp
neg
fcom
test
std
orl
mov
mov
xlat
cmp
stc
sar
icebp
cmp
out
clc
rol
test
stc
clc
test
xchg
in
sar
div
repz
cmc
ss
stc
lret
test
in
leave
aam
ljmp
repz
cmc
aad
iret
cmc
out
sti
out
jmp
aam
loope
inc
aam
lret
lret
and
rcl
ljmp
xor
shl
icebp
cmc
xchg
hlt
fxch
in
fstp
ljmp
enter
cmp
fstpt
fadd
adc
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
jns
in
shlb
jl
add
cmp
xlat
stc
mov
int
in
xor
ljmp
ljmp
clc
neg
fucomi
int
mov
int3
loop
repz
cli
std
shr
out
cmc
ffreep
test
sub
out
rcl
call
out
fdivrs
std
in
ds
vshufps
fcoml
lret
rol
icebp
mov
into
cmc
inc
hlt
test
in
xlat
aam
clc
cmp
out
rorb
stc
iret
lock
in
cmc
out
int3
out
rol
fcmovb
repnz
int3
xchg
cli
adc
xchg
xor
loopne
cmp
aam
fdiv
dec
cmp
cmp
leave
xchg
loope
fucomip
in
orb
div
iret
iret
shr
aad
fcmovb
iret
rolb
dec
mov
xchg
jmp
aam
in
shlb
into
les
loopne
sti
adc
loop
out
mov
sti
fucom
cld
ljmp
in
jmp
icebp
cmc
clc
cli
ret
testl
iret
leave
out
in
xor
lret
repnz
cmp
inc
aam
out
lea
int3
xchg
loop
ror
aam
int
rcl
icebp
fidivrl
aam
vshufps
incb
orl
aam
int
leave
fcomip
cmpb
fst
int
mov
in
in
test
addb
lock
out
fucomp
repz
icebp
jecxz
out
call
vpminub
leave
xchg
out
fmull
cmc
fstp
jmp
fistpll
loope
aad
faddp
xchg
out
in
in
lock
iret
xor
jecxz
lret
rcl
cmp
iret
cld
in
into
fimull
std
xchg
roll
ds
les
fcomi
call
sti
loopne
and
in
fmul
lret
xchg
lea
sub
call
in
in
xlat
fcomp
std
cmp
ffree
fcmovnu
lea
jecxz
jmp
leave
xor
call
aas
or
sar
call
call
test
cmp
lret
aaa
aad
sarb
loop
fiadds
dec
xchg
fdivr
test
out
loop
out
into
iret
aam
clc
in
fdivp
fdiv
ret
mov
addl
rcl
xor
call
aas
loope
xor
aad
mov
fldl
rolb
repnz
cmp
in
cmp
repnz
cmp
in
xor
test
fxch
int
fadd
orb
xor
fidivrl
ljmp
shl
push
cmp
in
lea
orb
out
loopne
rcl
lock
into
out
aas
enter
clc
bnd
ret
ljmp
shl
sarb
shl
xor
out
cmp
rcl
jecxz
repz
popl
jmp
call
in
aaa
repz
fucomip
div
out
cmpl
std
xlat
in
out
mov
xchg
xchg
stc
into
xlat
ror
test
icebp
cmp
shl
fxch
fcmovbe
lret
popl
in
lds
aam
aaa
fmulp
not
fsubr
movl
xchg
xchg
sbb
shll
icebp
stc
in
or
cmp
test
sti
out
mov
or
mul
repz
in
clc
aaa
aam
jmp
cli
incl
call
jmp
out
jmp
ljmp
out
call
cmp
ret
std
call
cli
fldl
ret
into
in
call
in
icebp
aad
rorl
cli
adcb
lret
icebp
iret
xor
into
lret
repnz
mov
lret
test
into
mov
mov
xor
xor
into
xor
idiv
into
out
loope
out
testl
ljmp
ljmp
clc
rcr
or
cli
ret
cmp
test
int
jecxz
int3
xor
cmp
aad
shr
ret
std
incb
cli
call
ljmp
icebp
ljmp
test
cmp
rolb
cld
stc
clc
loop
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
call
scas
cmc
jp
jg
cmpsb
add
mov
ret
cli
int3
neg
loope
xlat
cmp
not
loope
hlt
ret
incb
nop
ljmp
in
ljmp
cld
cld
shl
fldl
mov
jecxz
mov
not
enter
fcmove
lret
ds
jecxz
iret
repz
test
sbb
mov
int3
hlt
cmp
cmp
out
sarl
neg
ljmp
leave
mov
out
int3
fmul
icebp
xchg
ror
in
ret
in
cmp
repnz
cmc
shl
repz
enter
enter
mov
xchg
movl
cmp
cmc
in
aam
stc
cmp
mov
das
f2xm1
xor
into
xor
idiv
stc
stc
loopne
addb
fdiv
int3
cmc
shlb
shr
leave
out
lock
loope
sti
loopne
in
stc
sti
fstp
out
xchg
leave
mov
icebp
divl
divb
sub
incb
mov
ljmp
fcmovbe
rorl
out
repnz
icebp
aas
hlt
sar
aas
lds
cmp
loop
out
lret
xlat
cmc
aas
ljmp
out
cmc
jecxz
test
xlat
sub
fnstenv
repnz
fdiv
call
out
jmp
mov
call
shl
hlt
mov
cs
call
int
ds
enter
loop
clc
xchg
mov
iret
into
xor
iret
leave
cli
cli
rcl
idivb
in
sti
cld
ret
fcmove
out
xchg
repz
cmp
cmp
out
int
fmul
cmp
fsubp
out
fcmovnu
mov
loope
iret
cmp
cmp
cmp
xor
out
cli
jecxz
fmuls
mov
xlat
in
not
iret
aaa
cli
repz
aad
cld
leave
fdivrp
and
sti
test
cmc
ret
fxch
int3
shlb
fsubr
out
clc
std
aas
adc
in
cmp
fcmovne
cld
or
out
fldl2t
aam
cmp
aaa
cmp
mul
repnz
out
fadds
lret
enter
int3
div
fistpll
in
xlat
jecxz
cld
ret
mov
in
hlt
fsub
out
lock
fmul
fidivrl
fucom
xor
xchg
cld
loope
aam
cli
xchg
test
cmp
aas
rcr
ss
cmp
out
in
jmp
jecxz
or
shl
loopne
loope
clc
jmp
loopne
repz
ret
jmp
stc
mov
out
orl
lock
aas
lret
idiv
std
filds
sti
fiadds
out
div
repnz
ror
in
jmp
xor
cmc
clc
int3
sar
in
cli
in
in
out
nop
xor
jecxz
out
cmp
sti
iret
lock
sti
cli
repz
cmp
jecxz
fsubr
ljmp
mov
out
shl
xor
xor
cmp
xlat
out
shl
icebp
aam
jmp
call
repz
int
repnz
cli
ror
repnz
aam
int
out
mul
out
and
ret
sti
rclb
ss
jmp
clc
xor
into
shr
fdiv
fucompp
jmp
fnstsw
xchg
jmp
clc
jmp
not
out
fidivrl
sti
xchg
aam
repnz
test
out
fcomip
ljmp
icebp
aas
int
or
adc
loopne
cli
loope
fucomi
sub
int3
jmp
xor
aas
out
cmp
fcos
ret
lret
in
std
test
iret
out
in
cmp
lock
sar
ret
fyl2xp1
mov
or
sbb
int
out
cmc
lds
xlat
xor
cld
fcmove
aam
sti
cmp
sti
hlt
sti
enter
cld
fisttps
int
out
out
ss
ljmp
hlt
aad
ret
aam
fdivr
out
lock
cs
in
repz
sti
cmp
cmp
repz
addl
jecxz
xchg
in
hlt
out
rcl
hlt
fdivr
fdiv
cmp
add
in
sti
lret
rol
adc
fld
in
ljmp
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
sub
jl
add
stc
shl
out
fiaddl
out
test
loope
lret
mov
leave
mul
clc
out
xor
fiadds
xchg
iret
sub
xlat
loopne
ljmp
repnz
fsub
loop
xchg
loope
lret
int
and
and
aaa
xor
loop
icebp
in
sar
sti
iret
loope
in
rcl
out
incl
in
into
jmp
repz
rol
sar
fdivr
iret
aam
lock
into
icebp
loope
leave
leave
mov
sbb
loope
shll
lret
out
ror
jmp
xor
ret
xchg
mov
clc
loop
mov
popl
in
xor
cld
int3
in
xlat
fld
out
in
cld
out
mov
neg
out
mov
fdivr
repnz
jmp
div
out
sti
fmul
repnz
cmp
shl
rcr
fneni(8087
fneni(8087
mov
repnz
rol
rcl
xor
clc
cmp
sar
cmp
lock
rol
call
std
fsts
ds
lock
stc
cmp
cmp
std
jmp
clc
aad
mov
in
loope
mov
xor
out
cmp
ror
cmp
fmulp
std
in
loope
or
roll
shl
fcmovu
hlt
repz
int
std
icebp
shl
call
call
shl
into
out
in
xor
cmp
fst
loope
rcr
out
jecxz
xlat
mov
ret
incb
shrl
xor
in
sti
loope
ljmp
aam
fimuls
clc
out
in
lea
ss
call
fabs
clc
stc
fcmovu
in
enter
in
cld
in
loopne
out
ljmp
clc
out
icebp
lock
clc
int3
cmp
orb
std
fcmovbe
neg
divb
std
cmp
xor
lock
fadd
les
mov
lret
test
out
cli
mov
xchg
fidivs
leave
test
in
repz
shl
aas
call
iret
test
ror
shr
int
sar
clc
sti
leave
cmc
std
cmp
aad
jmp
jmp
loopne
cli
dec
mov
ss
sub
int3
enter
cmp
loope
aam
imul
sar
lock
fsubp
shrb
lret
jmp
idiv
jecxz
div
stc
jmp
in
leave
cli
jmp
xor
lret
cmp
in
call
loop
rcr
fst
fildl
test
int
in
call
call
rcl
hlt
loop
loopne
sti
stc
aas
addb
ljmp
sti
out
cmp
lret
int3
cmp
lret
ret
std
test
test
repz
sub
out
repz
loopne
sarb
loopne
xchg
cld
decb
lock
ss
cmp
neg
ffreep
cmp
ds
aad
cmp
enter
repz
clc
jmp
int3
cli
ss
shr
loop
ret
cli
jmp
repnz
incb
nop
mov
jmp
out
jmp
into
cmp
shr
cmp
stc
jmp
int
jmp
clc
out
into
int
out
repnz
out
icebp
out
dec
sti
stc
filds
jmp
loop
loop
fdivr
ror
shlb
shll
into
jmp
fsubr
fdivrs
repz
in
call
faddl
repnz
in
in
ss
int
lock
faddl
ljmp
out
call
in
call
shr
testl
mov
iret
aad
xor
out
ret
hlt
aam
ffreep
cmc
out
or
stc
adc
ds
fdivp
loopne
leave
sbb
jmp
jmp
cmp
ret
fxtract
stc
fnsetpm(287
out
neg
xchg
sti
in
icebp
xchg
ret
leave
hlt
fxam
in
fcomi
leave
clc
lret
repnz
fld
fadd
jecxz
in
iret
loope
jmp
fsub
loope
lds
rol
aaa
cmp
call
cmp
shl
fpatan
fimuls
out
out
shlb
aad
out
out
in
fcmovnu
call
into
fadds
in
orb
xor
lret
clc
call
ljmp
aas
testb
jmp
int
ret
fcmovu
add
dec
jbe
jb
into
outsb
jg
cmpsb
add
test
fdivr
jmp
mov
fadd
out
lret
ss
aaa
fcmove
inc
ret
rol
out
icebp
cli
xchg
cli
into
icebp
lret
loop
enter
std
cli
loope
aas
cmp
rol
mov
rol
ljmp
test
mov
out
sub
repnz
in
lret
cmp
repnz
lret
loop
repnz
in
int3
int
ss
cld
lock
ljmp
out
shl
hlt
cld
stc
mov
call
in
in
mov
repz
lock
xchg
std
addb
loope
call
leave
jmp
xor
cmp
fadds
ffreep
test
loopne
mov
mov
int
fnstcw
clc
addb
mov
in
out
hlt
leave
in
out
clc
cmp
fidivrs
aam
cmp
out
sub
int3
ret
std
xchg
shr
in
aam
iret
aad
lret
cmp
in
in
test
ljmp
icebp
xchg
rol
mov
shlb
cmp
call
adc
fiadds
clc
lret
fiadds
int
cmc
int
in
cmpl
iret
fildl
in
out
mov
enter
xchg
int
fcomi
ret
enter
fcmovnu
add
fidivrs
shl
mov
out
clc
stc
leave
std
loopne
mov
rcl
in
aaa
hlt
int
cld
icebp
in
lret
div
xlat
sar
stc
cmp
sti
std
xchg
enter
out
xchg
out
lret
fcomp
xlat
cmp
hlt
jmp
iret
xor
stc
xlat
mov
in
std
xchg
ret
cmc
sub
into
into
jmp
imul
loope
lock
enter
fmul
jmp
in
cld
ror
iret
clc
ret
rcl
int
test
aaa
iret
shr
push
hlt
mov
mov
mov
xchg
aad
loope
leave
fcmovne
std
lret
out
enter
lock
sbb
mov
mul
cld
icebp
call
imul
jecxz
ret
cmp
out
fsubrp
icebp
repz
loope
sti
and
call
xchg
les
xor
cmp
call
aaa
hlt
test
fdivrl
incb
cli
out
in
repz
cs
hlt
sti
cmp
fcomip
cmp
hlt
hlt
xchg
lret
clc
xchg
int
mov
repz
in
ljmp
sar
testb
xor
vphaddubd
int3
cmp
lret
jmp
test
fadd
xchg
out
mov
bnd
ljmp
fucomp
int3
iret
stc
xchg
mov
call
int
test
rcl
repnz
ss
hlt
into
lock
out
les
ljmp
iret
call
rcl
cmc
idiv
lock
cmc
xlat
loope
mov
std
xchg
faddp
nop
in
icebp
hlt
lock
hlt
enter
ss
loop
fcmove
fadd
xchg
in
jmp
xor
stc
rcr
clc
jmp
sti
sar
in
cmp
fsubp
fiadds
loop
jmp
cmc
fcomi
loop
lret
out
clc
std
icebp
xchg
roll
into
jmp
xor
lret
xor
aam
ss
into
aas
lock
sar
cmp
les
enter
xchg
orl
aam
leave
in
rol
cld
cli
in
fiadds
test
lret
xchg
fdivs
repz
int
cmp
fsub
rcl
clc
leave
out
in
jecxz
repz
ret
rcl
sar
enter
hlt
sti
fdiv
jmp
in
lret
loope
lret
icebp
fcmovu
in
test
jmp
out
call
jmp
fmul
cmc
ret
adc
repnz
fmuls
icebp
out
lret
aad
lret
sub
cmp
sti
not
les
iret
mov
mov
in
out
stc
shl
sar
ljmp
loope
neg
test
out
fcomip
jecxz
sub
ss
fcom
aam
lock
cmc
xchg
sar
mov
std
roll
in
fxch
int3
stc
ror
xor
aad
jecxz
xlat
std
std
add
test
scas
xlat
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
adc
jg
cmpsb
add
lret
fdivp
aad
clc
shl
std
out
xor
adc
not
fcomp
repnz
xlat
mov
mov
test
leave
aad
xlat
repnz
aam
out
cmp
aam
leave
mov
clc
std
call
shl
int
int
ret
vpsrlq
jmp
ss
rcl
lock
div
jmp
sti
cld
add
mov
icebp
fld
les
out
out
cmc
aam
rcr
div
std
cmp
out
loop
xchg
jmp
lret
jmp
stc
xor
icebp
fistpll
int
ret
fdivp
call
leave
fucomip
mov
test
rcl
repz
xor
div
cmc
hlt
cmp
mov
and
incb
or
int
ret
xor
xlat
ret
call
xchg
fsubr
sar
aad
xor
iret
repz
enter
loopne
jecxz
rol
mov
int
out
out
and
repz
cmc
aaa
loop
into
aam
lock
sar
ret
and
mov
mov
sub
into
in
iret
mov
lret
fnstenv
icebp
fcmovnb
sti
icebp
mul
lret
fstpt
call
pop
rclb
xor
lret
jmp
into
roll
incb
xchg
testb
lock
jecxz
jmp
xor
into
fyl2xp1
lock
rcr
fisttpl
cld
mov
test
icebp
shr
sti
aam
cmp
ds
cmp
fneni(8087
jmp
mov
shl
int3
cmp
ds
fstpt
jecxz
test
cli
test
mov
mov
fadd
jmp
ret
xor
int3
cmp
aad
rcr
repz
repnz
lret
dec
into
mov
fnstenv
fcomp
neg
ret
repnz
sbb
iret
repz
cld
repnz
call
lret
cmc
fsubrp
lds
ds
jecxz
fscale
test
mov
fdivrp
in
out
ds
shr
jmp
shl
fsubr
loopne
ret
mov
ljmp
adcb
ret
rol
fdivr
cmp
out
lret
fcmovu
jecxz
loop
in
jecxz
jmp
mov
std
test
icebp
xor
repz
call
sti
fcomip
stc
std
rcl
fucomip
xor
sti
icebp
out
into
jmp
lret
xor
cmp
cmp
test
cld
cmp
hlt
hlt
lret
in
fisttps
xor
iret
cmc
ljmp
aad
clc
shr
cmp
lret
fadd
into
jmp
cs
clc
cmp
out
into
ljmp
clc
jmp
std
cmp
lret
icebp
clc
in
std
ffree
out
lock
test
out
neg
rcl
fsubrp
cld
int3
leave
and
iret
cld
into
sub
out
aaa
lret
enter
shl
ret
int3
inc
repz
decb
mov
out
sub
jecxz
into
aam
fdivs
ds
cmp
vcmpps
mov
sar
into
orb
fucomi
lret
cmp
cmp
cld
jmp
in
or
nop
out
in
shl
shl
leave
cmp
lock
aad
cmp
shl
int
hlt
ds
in
jmp
jecxz
jmp
mul
out
xlat
cmc
clc
imul
cmpl
clc
into
clc
addb
mov
fisttpll
into
shl
sti
lret
and
jecxz
mul
call
out
lret
sub
repnz
repz
into
loopne
rcr
lds
aad
xchg
clc
addb
fsubr
clc
aaa
xor
cld
rcr
cmp
fsub
aad
aad
test
nop
ljmp
sti
xor
stc
clc
out
lock
inc
aam
ret
sar
sar
call
lret
int3
cmc
divl
xor
icebp
in
cli
cmp
lock
lret
icebp
sub
int3
int
test
into
xor
lret
aad
aam
xor
clc
in
sar
loope
fucom
mov
xlat
fdiv
sti
fadds
in
jmp
cmp
loope
loope
rcl
rcl
repz
aad
xchg
into
shr
iret
shl
shl
lret
sti
ss
fstpt
loopne
sub
jmp
test
mov
iret
loopne
jmp
sub
in
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
repnz
mov
add
cli
sar
fdivp
hlt
in
faddp
rol
aad
loopne
std
in
ficoms
icebp
xlat
rcl
jmp
aam
sti
xor
jmp
mov
stc
shr
std
shl
test
in
call
std
aam
clc
loop
hlt
std
jmp
stc
int3
mov
or
lret
shr
out
loopne
fscale
cld
into
rcr
ret
div
idiv
mov
sti
jecxz
popl
fadd
out
mov
fucomp
cli
shr
xlat
lock
loopne
rcl
cld
xlat
incl
call
jmp
hlt
jmp
int
int
in
xchg
jmp
ds
fisttpl
ljmp
cs
out
aam
cmc
fucomip
out
std
ds
filds
addl
in
xor
fidivl
hlt
lret
cmp
fadds
out
shl
hlt
hlt
icebp
xor
out
fcmovnbe
out
in
clc
lret
aad
cmp
xchg
xchg
xchg
testl
jmp
into
aad
int3
xlat
sbb
shl
test
testl
das
rcr
xor
icebp
aaa
faddl
loope
sar
jecxz
addl
ror
aad
icebp
iret
out
test
repnz
aam
in
shl
in
loope
mov
loopne
lret
loopne
mov
loopne
cmc
aaa
aad
xlat
cmp
iret
repz
iret
stc
loop
xchg
clc
hlt
add
jecxz
int3
in
or
xor
out
out
cmp
iret
clc
in
into
fcomp
jmp
jecxz
out
loopne
in
fsubp
vpsrlw
fcmovb
in
into
aaa
repnz
std
std
mov
cli
mov
mov
fisttps
shl
icebp
divl
lret
cmc
lock
ss
std
idivb
in
fdivp
in
jmp
sub
fcmove
loope
jmp
ret
xlat
aam
int3
fcomip
lock
cmc
shl
leave
std
jmp
stc
lret
shl
loopne
leave
enter
out
cmp
ss
loopne
in
shl
rcl
rorl
loope
rclb
out
loop
lret
aam
call
into
cli
std
xchg
addl
loopne
jecxz
nop
shlb
in
hlt
fcomi
fsubr
sarb
in
rol
mov
mov
ljmp
hlt
loop
in
fcmovbe
cmp
enter
add
leave
sarl
mov
mov
lock
vpsrlq
jmp
repz
out
aas
aas
aad
test
rorb
fimull
lret
hlt
xor
xor
ljmp
sar
shl
fisttpll
ljmp
repz
out
xor
call
in
shl
xor
sti
in
imul
lret
in
mov
fimuls
ret
repz
sarl
loop
lret
leave
fmull
sbb
mov
fxtract
int
int3
xor
fnclex
int3
into
aam
shl
loop
in
cli
in
nop
jecxz
out
mov
int
xor
sarb
in
lret
repnz
inc
repnz
hlt
in
lret
addl
loop
ss
in
clc
xor
cli
jecxz
aam
lret
test
fcmovnu
jmp
repnz
out
cs
fld1
jmp
repnz
ds
cld
fisttpll
addb
lock
mul
in
fnstenv
aam
iret
fstp
loop
clc
int
fadd
in
cmc
lea
lock
in
out
into
into
std
hlt
cmp
jmp
enter
shl
into
loopne
xlat
repz
cmp
shl
stc
cmc
or
shr
out
fld
in
fadds
mov
xor
fdivs
mov
xor
fildl
leave
call
int
imul
ljmp
xor
loop
rcr
cld
in
shl
stc
testl
shr
repnz
lret
ror
cld
ds
xlat
cmp
loopne
fimuls
int
out
hlt
repz
leave
divb
ds
repz
repz
xchg
sti
cld
mov
aad
aad
int
repz
shl
add
ret
leave
xor
leave
addb
divl
loopne
bnd
xlat
fcomip
lret
cmp
inc
in
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
or
jo
jl
jl
add
shl
fld
test
mov
hlt
das
sub
clc
enter
fcmovbe
int
fldl2e
ds
decl
fnop
out
jmp
or
stc
in
repnz
aaa
cs
div
out
div
aam
loope
in
fimull
into
out
das
xor
lret
iret
out
in
cld
fdivrl
loopne
repz
ror
jmp
out
mov
f2xm1
shl
sarl
xor
cmp
rolb
ret
jmp
jmp
in
mov
jmp
cmc
in
sti
rcl
fcomi
ret
test
leave
fcmovne
mov
fmulp
clc
ljmp
int
loop
xor
cmp
in
int3
icebp
in
jecxz
in
jmp
test
popl
call
out
in
aam
jmp
cmp
rcl
cmp
out
sar
xchg
out
sbb
loop
int
cmp
std
cmp
or
fistpll
mov
cmc
out
ljmp
ror
ret
lret
stc
repz
xlat
stc
cld
repz
test
idiv
ljmp
loope
int3
xchg
lret
shl
hlt
cmp
xor
enter
xlat
xor
fsub
in
jmp
int
into
xchg
xchg
in
xor
in
clc
fxch
cmp
aad
cmp
out
filds
mov
lock
out
jecxz
in
fstpt
fdivr
int3
loope
fucom
xchg
loopne
lret
decl
ljmp
shl
shl
out
loopne
out
out
xchg
mov
icebp
xchg
loope
xor
icebp
iret
stc
out
fcomp
cmp
repnz
rcr
in
cli
xlat
imul
test
enter
in
in
les
shll
hlt
lock
aas
hlt
cli
aad
rolb
lret
fcmovu
loope
mov
rcll
fcmovnbe
in
sar
cmp
xor
out
loopne
ret
out
xchg
jmp
int
iret
xchg
xlat
xlat
lret
sti
into
ror
lock
int
out
out
clc
testb
adc
int3
out
int3
fsubrp
sarl
ljmp
rcr
jecxz
jecxz
loope
fstp
fmulp
iret
icebp
sub
xor
call
hlt
in
loope
ret
xchg
cld
mov
mov
rcr
jecxz
lret
mov
out
jmp
in
cmp
out
fdivp
cmp
testb
loop
sbb
iret
lock
cs
cmp
cmpl
ret
bnd
jecxz
leave
enter
fadds
enter
cmp
loopne
roll
lock
cli
hlt
lret
cld
fldl
xor
jmp
int3
fucomp
sbb
cli
test
mov
loop
shl
jecxz
cli
fsubr
xlat
xor
out
shlb
ds
ljmp
mov
shl
in
loop
ss
cmp
in
int
int3
not
ret
cmpb
fiadds
loop
das
xor
stc
hlt
cmp
fldz
aas
ffreep
sbb
aam
cmc
jmp
out
mov
mov
enter
sti
sti
test
call
and
mov
dec
std
xchg
in
out
xlat
hlt
shl
in
in
xor
cmp
jecxz
in
jecxz
sar
aam
xchg
lret
out
cmc
nop
in
icebp
jecxz
out
xor
xor
filds
cmp
out
xlat
lea
int
shl
xor
int3
cmp
jmp
cmp
not
xchg
clc
icebp
xchg
icebp
test
repz
repz
sarl
stc
mov
in
cli
call
cli
int
aas
in
out
in
in
cmp
fcmovu
cld
int
ret
sar
fcmovnbe
testl
out
cmc
cmc
ret
rol
jmp
ljmp
cmp
or
cmp
fistpll
in
xchg
out
adc
shl
in
out
xor
lret
cs
loope
int3
rcr
cld
ret
mov
call
lock
out
cs
cmp
fidivrs
icebp
loopne
loopne
fadd
cld
xchg
xchg
or
icebp
into
cmp
fcomi
in
rcr
test
aas
ret
fildl
movl
lret
fnsave
cmc
into
aas
in
ljmp
cmc
clc
sti
test
loopne
cli
int3
lret
roll
test
sti
repz
cmp
sar
rol
shl
mov
lret
jmp
iret
aam
shlb
shl
cmp
aas
out
icebp
int
and
mov
rcr
mov
out
loop
imull
aaa
int3
xor
test
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
sarb
add
jge
jl
and
std
test
xchg
xchg
lret
xor
icebp
in
ss
lret
ffreep
aas
out
mov
xchg
aad
std
in
jmp
test
lret
ret
lock
fmulp
fldl
jmp
mul
leave
iret
enter
fsubrp
aaa
int
xor
out
fstp
sarl
cmp
clc
jecxz
loopne
mul
xchg
out
cld
addb
cmp
stc
fcmovnu
loopne
out
ds
ret
call
call
loopne
rol
xor
in
repnz
cmp
cld
cmp
ret
fucom
jecxz
call
test
call
xor
xlat
sarl
roll
out
loopne
sub
out
in
mov
ljmp
fsubr
icebp
rol
jecxz
out
ret
add
shl
test
dec
shrl
xor
xor
jmp
xor
div
lret
aas
cmp
hlt
clc
call
mov
ljmp
out
cmpl
cmp
std
clc
ds
repz
rol
xlat
xor
jmp
cmp
loope
xlat
loop
test
int3
ljmp
lock
in
xor
shr
lock
aad
cmp
lret
leave
jmp
test
rol
aaa
cmc
lds
xor
cmp
ror
fadd
std
rcr
out
sar
les
call
xor
iret
cmp
stc
int
fmul
test
fldl
lret
neg
in
cli
adc
jmp
sarl
iret
cmp
aaa
repz
cld
clc
xor
cld
test
stc
fdiv
in
mov
jmp
aad
cmp
rcl
aaa
icebp
sti
mov
in
in
loope
lock
sub
aad
in
clc
leave
xor
cmp
shl
out
hlt
xchg
xchg
cli
call
in
cmp
leave
in
iret
fdiv
clc
cmp
sti
fldl
cli
out
lret
icebp
mov
cmp
aaa
iret
jmp
cmc
repnz
fadds
fadd
testb
loope
xchg
mov
leave
clc
repz
xor
hlt
aas
aam
aam
std
cmc
lock
repz
clc
xchg
loop
jecxz
xchg
cmc
xor
in
jmp
icebp
call
flds
shl
repnz
incb
fucomi
ljmp
int
fdivrp
iret
hlt
sti
out
cmc
rcr
loopne
cld
leave
ljmp
lret
in
neg
repnz
clc
sbb
xchg
faddl
stc
std
orl
in
cmp
rcr
aas
fsub
out
sti
shl
jmp
and
and
lret
out
jmp
cmc
enter
rcr
shl
loop
idiv
fsub
nop
and
cmc
leave
into
out
in
idivb
or
adc
shl
std
int3
in
nop
mov
repz
clc
sub
in
lret
enter
std
fcomip
out
into
aas
rcl
vpminsw
std
call
out
cmp
fcmovnbe
cmp
sti
rcr
ret
flds
jmp
loop
call
ret
out
lret
in
fucomp
int3
cmp
out
cmp
rol
jmp
ror
lds
out
repnz
xor
idivb
cld
fstpt
or
ljmp
leave
lret
in
das
out
repz
sbb
stc
test
mov
mov
loope
int3
enter
in
lret
cmp
aad
cld
into
lds
test
cld
fcmovu
loope
jmp
repnz
xor
int3
cmp
ds
flds
test
loope
in
repnz
int3
out
clc
aad
jmp
aad
icebp
in
clc
mov
leave
fisttpl
out
fadd
in
int
int
ljmp
repz
aas
rol
cmp
call
rolb
out
fcom
sti
stc
lret
xor
std
mov
fcmovnu
sbb
out
loopne
repnz
into
iret
xor
cmp
in
int
repz
fadds
loop
int
and
jmp
ret
in
vpor
lret
stc
icebp
aas
lret
ljmp
mov
clc
fildl
repz
lock
rcr
xlat
xor
cmp
in
shl
fcomi
fidivrs
mov
iret
fists
lret
icebp
cli
out
cmp
stc
cmp
cmp
jecxz
in
xlat
sub
xchg
rorl
lret
repnz
lock
shl
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
mov
jge
jl
xchg
test
in
cli
rcll
xchg
das
xor
xlat
ret
leave
rcl
in
out
std
in
aad
test
or
lret
aad
sub
in
aam
cld
xlat
cmp
clc
ds
cmp
fucomi
call
xor
call
cmp
cmp
aad
les
loop
clc
sti
loope
xchg
shr
mov
in
into
in
iret
imul
fcmovbe
cmp
cmp
shl
cmp
lret
add
out
test
ror
enter
cmp
ror
fcom
cmp
cmc
stc
hlt
ret
mov
loope
call
mov
xlat
lret
cmp
cmc
cmp
int3
testl
incb
test
out
out
std
cmp
leave
lock
in
lock
fucomi
ret
out
jmp
bnd
fsqrt
in
std
fidivrs
cmp
sar
filds
fisttpll
out
jmp
not
in
in
cli
cmp
cmc
add
xchg
loopne
orb
popl
stc
ljmp
cld
ss
adc
fincstp
aam
mov
ret
jecxz
jecxz
hlt
jmp
xor
xlat
aad
icebp
leave
fcmovnbe
cli
hlt
fcmovnb
aas
or
cmp
int
nop
mov
rcll
lock
in
and
cmc
cmpb
shr
ret
jecxz
test
leave
rol
ret
lock
loope
cmp
loopne
in
ds
std
in
xchg
in
int3
lret
loopne
loope
repnz
aaa
in
pushl
ljmp
repnz
test
mov
mov
int
roll
in
int3
ss
clc
in
test
lret
test
out
mov
mov
nop
lds
in
lock
out
hlt
repnz
faddp
xlat
loop
lret
sbb
mov
hlt
repnz
test
into
cmp
fsubp
fdivrs
div
jecxz
flds
ljmp
lock
ret
xor
loopne
xor
ror
rcl
jecxz
lret
mov
out
ret
lds
repz
enter
jecxz
icebp
ret
clc
fiaddl
orb
in
xor
leave
out
out
cmp
aam
test
xchg
jmp
xlat
lret
mov
lret
jecxz
out
shl
repz
loope
loop
ret
xchg
xlat
mov
in
loop
mov
addl
xor
sti
int3
ds
cmp
sti
mov
clc
xchg
out
lret
ljmp
aam
repnz
repz
fildl
xchg
clc
int3
int
out
rcl
xor
jmp
into
leave
cmp
addl
xor
int
in
in
mov
in
jmp
iret
enter
into
loope
cmp
mul
ds
jmp
out
fucomip
int
xor
ljmp
loope
and
fiaddl
stc
jmp
mov
xchg
lock
iret
out
cmp
out
in
jmp
lock
out
repz
cli
mov
icebp
enter
aad
vpsubsw
aaa
stc
lret
stc
jmp
into
cmc
stc
out
xchg
enter
test
xchg
xlat
xlat
enter
out
fstpt
jecxz
sar
xchg
cmp
rcl
lret
dec
icebp
mov
ljmp
out
cmp
stc
shl
lret
out
int3
mov
mov
ret
ss
fdivs
out
cmp
fcmovnu
aad
icebp
cmc
mov
aas
out
int3
xchg
mov
jmp
clc
fcmovne
sar
fidivrl
cmp
leave
out
xchg
call
xchg
ror
repz
into
aad
fcomip
cli
rol
into
sar
lock
call
loopne
mov
in
aam
out
test
lock
aad
out
fsub
fcmovbe
test
orb
out
test
ret
int3
aam
out
cli
fdiv
iret
cmpl
ret
sti
cld
fmuls
iret
aam
xor
fsubr
into
rcl
std
fcmovu
repnz
testb
fmul
mov
cli
call
cmp
ror
aaa
icebp
fidivrs
fdivrl
out
call
fxch
in
clc
mov
lret
out
fdivl
icebp
ss
cmp
fstpt
iret
sbb
in
ret
jecxz
xchg
clc
xchg
nop
jmp
aad
xor
rolb
sbb
cmp
test
leave
nop
test
int3
int
in
call
repnz
cli
or
daa
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
cltd
jb
lret
or
jl
aas
and
jecxz
clc
rol
in
lret
enter
iret
lock
xlat
aaa
jmp
into
aad
lret
fcom
in
test
hlt
in
jmp
xchg
sub
out
aad
repnz
iret
fcmove
fnstcw
idivl
jecxz
clc
ret
in
lds
fmulp
jmp
in
out
fcmovnb
std
sarl
out
loopne
cmpl
sti
jecxz
jmp
in
nop
mov
out
rcr
int3
clc
aaa
iret
ror
jmp
cmp
in
cmp
xchg
in
call
cmc
icebp
out
lret
out
cmp
sub
loope
jmp
sub
std
iret
call
cli
cld
cmp
sbb
call
sti
enter
out
fucomip
repnz
in
out
int
shl
cmp
fcomp
cli
ret
iret
lea
aam
jecxz
fdiv
cld
out
stc
xor
repz
iret
in
jecxz
fcmovnb
cld
out
mov
not
xbegin
std
into
cmp
stc
in
sar
fcompp
cmp
incl
into
shl
xor
ror
lret
imul
std
jmp
int3
repnz
fcomp
leave
mov
stc
iret
cli
int
xchg
aad
aam
int
repnz
std
cmp
lock
cli
fadd
rol
aad
in
test
out
in
test
sti
in
cmp
aas
ds
aad
out
cmc
jmp
enter
enter
loop
mov
in
not
rcr
neg
cld
loope
out
ror
aam
sti
jmp
and
out
xor
fucomi
aad
idiv
cmp
inc
icebp
lock
std
in
mov
repnz
loop
aad
leave
aam
rcr
shl
in
fisttpl
mov
hlt
lock
aaa
not
cmp
cmp
xor
not
ret
test
in
ljmp
in
shr
lret
idiv
repz
cmc
cmp
lock
ret
hlt
cmp
jmp
fucomp
mov
enter
lds
out
ss
hlt
cmp
cmc
loope
fsubp
std
out
loop
call
out
aad
lock
in
fdivrs
lret
cmc
fcmovnu
repz
call
imul
fimull
mov
shr
out
shl
aam
lock
cmp
fsubr
iret
xor
xchg
std
test
mov
lret
mov
xchg
rorb
fnsetpm(287
cli
lret
div
cmp
test
in
cmp
call
out
addl
stc
fsubr
enter
fpatan
out
ret
xlat
bnd
orl
ret
ljmp
fcmovu
sarl
repnz
loop
lock
les
out
mov
in
aas
lret
loop
out
mov
cmp
cmp
cmp
hlt
out
cmp
std
mov
sbb
fmull
repz
xlat
out
fnsave
loope
cld
loop
cmc
rol
mov
fucomp
xchg
leave
jecxz
out
lret
cmp
int3
ss
icebp
out
imul
in
lea
std
rol
rol
loop
lret
clc
icebp
jmp
cmp
ret
out
in
fiaddl
loopne,pn
ror
ror
enter
hlt
std
ret
ret
into
loopne
out
aad
test
jecxz
fdivrp
int
repz
cmc
jecxz
iret
int
shr
icebp
rolb
les
jmp
stc
test
shl
iret
xlat
lock
std
out
xor
ror
into
fnstcw
cmp
mov
fisttpll
loope
in
fcomp
iret
out
iret
hlt
iret
faddl
hlt
dec
lret
mov
aam
loope
out
shr
xor
fbstp
test
fidivrs
fsubrp
int
jecxz
leave
out
xchg
jmp
aam
jmp
call
div
loopne
loop
repz
fcomp
out
ljmp
cli
test
out
shl
shlb
call
enter
cmp
xchg
orl
clc
iret
xchg
mov
cs
aaa
stc
fninit
icebp
in
cmp
aad
icebp
fistpll
fucomp
out
in
ds
in
call
fdivl
sti
or
out
lock
out
test
testb
out
jmp
lds
aas
int
ds
cld
ds
jecxz
test
mov
cmc
xor
mul
call
cld
shl
icebp
loop
orb
out
std
mov
xchg
xlat
shrb
aad
cmp
lret
sarb
stc
test
iret
jmp
in
ficoms
aaa
rcl
out
loop
imul
repz
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
incl
adc
jge
jl
loop
sarl
ds
stc
loop
mov
repz
loope
jecxz
out
leave
div
das
std
iret
call
cli
loop
push
in
fimull
in
rolb
jmp
cld
into
fcmove
shr
fsub
shl
sbb
lret
in
mov
jmp
in
xor
lock
int3
fcmovnu
ds
fst
lock
out
loop
std
leave
std
jmp
rclb
sarl
in
sar
int
div
ljmp
ret
test
imul
decb
xchg
in
shl
aad
cmp
shr
aad
repz
cli
clc
lock
out
mov
out
call
out
cmc
lret
xor
clc
divl
roll
clc
lret
jmp
out
test
in
fstl
ret
out
lret
out
lock
addb
out
mov
out
fiadds
ljmp
cmp
int
rol
mul
mul
ljmp
das
fldcw
loop
into
int3
xor
loopne
ret
sti
fcmovu
fcmovu
rol
sub
stc
test
xchg
xor
aam
cmp
repz
cld
out
shl
in
jmp
call
mov
cmp
xor
ss
int
cmp
int3
stc
xchg
int
mov
xchg
nop
in
vpsllq
out
std
fdiv
icebp
or
out
sti
cmp
jecxz
xchg
repz
icebp
ret
aad
enter
cmp
fcom
fdivp
not
shl
loopne
ficoms
mov
fcmovnbe
cld
cli
int
ret
fdivrs
test
loopne
cli
xlat
enter
lds
fchs
xlat
xor
sarl
idiv
fld
aad
xchg
fadd
adc
mov
jmp
xor
out
aad
fst
cmc
fdivr
rcr
repz
cmp
mul
mov
lret
fsub
fdiv
ret
out
shr
enter
ss
leave
repnz
out
int
in
xor
enter
xor
clc
shl
repnz
aam
xchg
imul
in
repnz
jmp
leave
out
out
shr
cs
jmp
test
out
sar
mov
jmp
cli
dec
int
in
hlt
ret
into
xlat
cmp
lock
lret
cmp
in
ss
test
enter
call
icebp
jmp
cmc
int3
lock
ror
cli
into
rcl
jmp
fadds
fiaddl
sarb
ror
jmp
lret
in
fchs
clc
rcr
hlt
shl
jecxz
idiv
loopne
jecxz
shrl
jmp
cmp
aaa
sarb
cmpb
loop
sbb
fldlg2
cld
in
fmuls
sub
clc
lret
leave
dec
cld
rcr
cmpb
rcl
addb
fabs
and
shl
aad
icebp
cmp
in
cli
fcmove
loopne
sti
xchg
enter
mov
out
clc
mov
out
mov
shl
fdecstp
aad
cmp
xor
loopne
cli
cmp
jmp
loopne
fsub
out
rol
lret
aad
leave
sub
fucomi
rcr
adc
std
not
rolb
test
out
roll
ret
std
aaa
ss
std
in
fdivp
loope
and
clc
jmp
sti
mov
repz
imulb
int
fdiv
leave
jmp
pushl
cmp
iret
in
cmpb
ret
hlt
aad
mov
in
xchg
in
lock
xor
cmp
into
jecxz
aad
filds
mov
loop
in
out
fimull
xor
int3
ss
loopne
out
push
fldl2t
jecxz
loop
sti
jecxz
out
xchg
ror
xchg
in
lret
leave
cs
in
test
fldl
decl
int
mov
jecxz
icebp
in
cmp
iret
into
sbb
imul
lds
ds
addb
repnz
test
fdivrl
lret
loop
mul
ret
aas
fadd
std
test
fdivr
xchg
ror
hlt
mov
shll
stc
lock
cmp
div
int3
into
out
cli
ret
fsubp
leave
in
faddl
jecxz
xor
xor
fcmovbe
sti
stc
aam
fprem
iret
loope
hlt
addb
cli
mov
int3
xchg
iret
mul
shl
in
fsubrl
into
sbb
out
ds
mov
rcr
into
jmp
ljmp
lret
cmp
enter
out
div
jmp
test
dec
xchg
xchg
aaa
in
repnz
shl
stc
in
out
fcomp
enter
and
icebp
shl
call
int
xor
cmp
cmp
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
pop
nop
leave
pop
jle
jge
jl
xor
xor
sti
bnd
out
fucomp
repnz
iret
out
lret
ds
stc
int
jmp
fdivr
sar
aad
ror
xchg
out
mov
xor
cmp
repz
loopne
shl
cld
out
loopne
jecxz
fistpll
cli
lret
mov
mov
call
stc
jmp
repnz
repnz
loopne
dec
in
std
fdivrp
ljmp
lret
hlt
loope
hlt
lret
rol
fsubp
fcomp
mov
or
aaa
xor
cmc
rcl
out
cmp
cmc
jecxz
jecxz
repnz
or
mov
in
jecxz
fidivl
lret
fdivr
fcmovb
jecxz
and
mov
out
fsub
repz
aam
in
cli
cmp
iret
rolb
mov
test
enter
ljmp
xor
out
aas
sti
loope
cmc
in
fdivp
in
addl
std
decl
in
divb
lret
aaa
roll
loope
in
xchg
out
das
repnz
fcomp
cmp
leave
loopne
jmp
into
loopne
out
loopne
shr
in
ljmp
lock
ret
out
xor
xlat
sbb
cmp
xlat
testb
mov
jmp
int
in
ror
aad
cli
stc
loop
dec
jmp
test
ror
iret
cmc
in
lock
icebp
int
clc
fiadds
cld
fldl2e
iret
call
jmp
ror
aaa
xlat
cmp
lock
aas
test
lock
addl
call
cmc
repz
int3
hlt
icebp
cmp
int3
filds
rcl
in
jecxz
in
fcmovnu
out
repnz
shll
shr
lret
shl
sbb
out
out
out
in
jecxz
mov
fcom
sti
loopne
loope
loope
test
cmp
jmp
xor
in
sar
neg
out
std
in
lock
out
loope
cmp
in
fdivrl
cmp
cli
iret
idivb
stc
lock
repz
test
mov
rcl
lret
fcmovne
aaa
fistpll
in
loopne
sbb
jmp
cld
fcomp
xlat
stc
loope
in
sar
in
fsubrs
out
ss
int
loope
dec
cli
cld
adc
test
loopne
out
jmp
mov
ljmp
into
cli
lret
imul
lds
xlat
hlt
loopne
xchg
fmulp
iret
cld
fucom
leave
loopne
sub
not
clc
in
cs
test
ljmp
loop
xchg
repz
int
cli
int
fsubr
ds
cmp
aas
out
hlt
jmp
test
test
or
int3
out
int
lret
enter
aam
loope
ret
jmp
mov
sti
fcomip
adc
mov
ljmp
cmp
call
ret
rcr
inc
clc
mov
out
xor
xlat
lock
icebp
fdivp
loopne
idivb
cli
repz
ds
in
stc
iret
cld
mov
xchg
aam
cs
out
aam
aaa
aaa
stc
icebp
out
xor
ret
cmc
mov
cmc
ljmp
into
test
shlb
in
jmp
cmp
cmp
fnstcw
cli
shl
loopne
orb
in
xchg
cmc
idivl
ror
call
cmp
aam
into
cli
cmp
sti
enter
in
in
test
fxch
xor
das
sar
fmulp
int3
loope
std
in
mov
in
in
cld
iret
call
dec
xor
cmp
repz
jmp
loope
fptan
repz
in
aad
frndint
out
out
test
jmp
in
into
cmp
xlat
not
xlat
jecxz
hlt
cmp
out
jmp
clc
flds
int3
loope
not
cmp
aam
cmp
repz
loope
mov
stc
jecxz
jmp
lret
cld
imul
jmp
out
rcr
imul
out
shl
fxch
adc
fiadds
std
int3
xchg
xchg
out
icebp
out
jmp
ljmp
cmp
rolb
aam
out
fstp
ljmp
bnd
enter
std
adc
cmp
add
xlat
xchg
xlat
fdivp
ret
decb
leave
hlt
fsub
dec
cli
fcmovu
aad
fcmovnu
cmp
aam
ljmp
in
cmc
sub
int
ss
loop
repnz
stc
test
mov
lds
repz
icebp
aam
ret
aas
into
aaa
xor
rcl
sarb
xchg
xchg
repz
repnz
divl
fsubr
sub
sbbl
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
add
jle
jge
jl
fdivs
cmp
sbb
xchg
jmp
fsubr
int
mov
hlt
shr
lret
vpsubd
sti
fcomp
cmp
loopne
lock
sti
hlt
mov
mov
in
int3
call
divl
cmp
cmc
hlt
cld
in
out
sar
in
sarb
loope
sti
ljmp
xchg
std
loopne
rcl
call
pushl
jmp
repnz
sub
xchg
cmp
into
test
lret
repz
cmp
sarl
xor
fld
cmp
out
cli
int
in
adcb
repnz
enter
cmp
idiv
fcomi
lock
fdivr
testb
int
mov
in
shl
in
cmc
cmp
lock
aas
fmul
fcmovu
loope
rcr
mov
leave
or
xchg
incb
out
in
imul
in
ss
xor
fsubr
cld
xchg
in
in
sbb
mul
out
out
fcmovu
fidivrl
iret
sti
jmp
xor
mov
test
in
jecxz
aad
cmp
icebp
cmp
imul
repz
clc
ret
mov
leave
mov
test
loop
in
out
xor
leave
rcr
std
icebp
cmp
mul
ds
loop
hlt
fmuls
int
out
jecxz
lret
enter
std
cmp
cmp
ret
out
hlt
cld
call
test
xchg
orl
aaa
stc
call
loope
int3
cmc
xor
out
loop
cld
out
jmp
lret
ljmp
in
out
lret
in
fstpt
cli
out
cmp
cmp
fdivp
aam
mov
aad
in
vshufps
xchg
in
xchg
in
into
out
cli
ss
fsubrp
rol
ljmp
cmp
loop
repz
in
in
xor
icebp
cli
std
aas
loopne
mov
clc
int3
jmp
int3
xchg
in
lret
enter
out
in
lock
neg
std
xchg
mov
dec
out
cld
test
into
jmp
fcmove
stc
call
jecxz
stc
rolb
out
xchg
call
leave
xor
ljmp
sar
fdivr
out
not
enter
xchg
icebp
ret
repz
fucomi
xor
cmp
cli
repz
leave
cmc
xchg
lret
int
xchg
std
shl
into
in
fsub
iret
sti
icebp
fucomp
ror
ds
ret
clc
test
addl
in
xchg
cmc
lret
stc
clc
int3
aaa
repnz
lds
test
sub
leave
ret
lret
shl
icebp
iret
ljmp
in
ret
add
fucomip
test
xchg
in
lock
jecxz
cmc
iret
shr
ds
or
not
out
std
in
in
lds
fdivs
ret
cmp
jmp
sbb
jmp
fdivr
fdivp
aad
shrl
jmp
test
fyl2xp1
cmpl
repz
ljmp
sub
in
xor
repz
shl
xor
repnz
clc
aam
cmp
test
jmp
iret
int3
in
rcl
ljmp
fsin
in
rol
in
test
loope
sti
leave
mov
jecxz
hlt
sti
into
jmp
jmp
shl
ds
loope
rol
mov
ret
dec
lret
mov
das
enter
xor
repz
fpatan
into
not
ret
in
stc
out
in
fmull
in
int3
sar
clc
fadd
aam
sti
roll
test
and
out
repnz
lret
sti
aad
out
iret
int3
cmp
cmpb
sbb
mov
and
out
in
cs
mul
xor
aaa
cld
fidivrl
ljmp
jmp
jmp
loope
rol
aam
repnz
leave
xor
ss
cli
loop
into
icebp
rcl
clc
jecxz
ret
in
lock
loopne
lret
sti
loop
not
neg
xlat
cmp
roll
test
in
jecxz
lock
int
lret
sti
cmp
ljmp
cmpl
fimull
int3
int3
mov
xchg
rcl
cmp
cmp
shll
test
loopne
call
flds
out
clc
cs
cmc
icebp
cmp
cmp
loope
ret
fcmovnb
fmulp
xchg
jmp
cli
jmp
jmp
lret
loope
faddp
aas
test
aam
fnstcw
leave
xchg
in
cli
inc
fsubrp
jecxz
int3
xor
hlt
iret
jecxz
aad
cmp
sti
std
shl
xlat
inc
loop
call
out
out
lret
lret
xlat
vpsubsb
in
rorl
test
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
add
jle
jge
jl
cmc
fdivrs
clc
in
loopne
out
hlt
jecxz
fstp
icebp
out
call
in
jmp
cmp
xlat
std
aam
ret
sti
xor
aam
in
enter
incl
test
cld
cmp
idivb
into
repz
fdivp
filds
sbb
xchg
aad
lock
cmp
repz
in
rol
repz
cmc
ret
loop
jmp
xchg
test
xchg
shl
fxch
iret
jmp
aam
addl
or
jmp
loop
lret
jmp
in
repnz
out
cli
cmp
not
xchg
cli
xchg
repnz
out
int
les
lock
loope
sti
cmp
sbb
mov
stc
jmp
lret
lea
call
fdivrl
in
cmp
fildl
fadds
std
and
jecxz
xor
xor
fcmovnu
not
xlat
idiv
neg
test
hlt
clc
aad
test
cld
jecxz
sub
out
int
lret
test
fscale
ffreep
test
cld
loop
fmulp
xchg
test
faddl
in
lret
enter
enter
hlt
loopne
lock
adcb
xor
xor
hlt
xlat
in
lret
out
out
aaa
xchg
in
adc
fninit
loopne
fimuls
sub
in
mov
int
sti
out
in
lock
fcmovb
test
in
xlat
mov
xchg
loop
jmp
int
neg
out
cmc
iret
loope
aad
lret
adc
lret
sti
loope
in
jmp
xor
shl
cmp
cmp
xor
out
testb
orb
fucomi
lret
rol
rcr
rcl
sti
into
repnz
fdivp
xlat
jecxz
fcmovnbe
fists
fadd
xor
in
cmp
rol
stc
aam
ds
aad
cmc
xchg
in
in
clc
mov
xchg
stc
lock
sarl
cli
cmp
jmp
inc
lea
xchg
mov
xor
iret
lret
jmp
not
clc
inc
ret
lret
fdivrp
jmp
hlt
aad
xor
lock
cmp
hlt
fidivrs
test
mov
loopne
and
jmp
ror
into
ss
ret
out
out
iret
enter
loop
cmp
in
out
mov
decb
aad
xor
cmp
in
out
ds
not
cmp
addb
lret
nop
xchg
idiv
in
hlt
int
icebp
jmp
imul
ljmp
jecxz
loopne
lret
fiaddl
xor
jmp
out
cmp
out
cmp
ds
lock
loope
in
xlat
leave
fcoml
loope
xor
into
lret
stc
rcl
aaa
out
fildl
xlat
aad
loope
cli
iret
icebp
mov
repz
shr
lock
ljmp
repnz
cli
cli
out
xlat
in
orb
out
repnz
xor
out
icebp
aad
stc
out
ror
shr
test
decl
fucomp
mov
jmp
iret
int
cmp
sarb
fst
clc
fsubrp
out
roll
in
mov
std
jmp
xlat
out
in
xor
aaa
fadd
cmpb
loopne
cmp
in
jmp
xchg
mov
shlb
int3
aam
lock
aaa
lock
aaa
xlat
xchg
test
stc
sub
loopne
std
out
cmp
sub
ss
sub
jmp
lret
lret
cmc
ds
sar
loopne
in
jmp
ljmp
nop
xchg
xlat
lret
xlat
hlt
xor
fcompp
cmp
cmp
adc
xchg
fsubr
stc
xlat
cld
in
fcmove
fsubp
ret
int
in
cmp
in
sub
xchg
rcr
cmc
incl
test
xor
jecxz
call
cmc
repnz
les
sti
sti
vpaddd
iret
fdivp
in
aad
div
std
test
cmp
roll
sti
jmp
testb
xchg
out
in
stc
out
repnz
fcomip
aas
cmp
cld
sarl
ret
fsub
in
jmp
mov
jecxz
mov
sub
rcl
aad
repnz
fcmovu
std
ror
loope
repz
ffree
cli
call
loopne
shl
out
xor
ljmp
loopne
loop
std
hlt
mov
faddl
int
test
int
div
fucompp
hlt
clc
inc
cmp
hlt
icebp
rcr
fnstsw
fsubp
loopne
into
mov
aam
hlt
xor
lret
ljmp
xlat
loop
jmp
ljmp
xor
out
inc
clc
incl
jmp
int
iret
rcl
fsts
fs
scas
add
jl
add
lock
fiaddl
fcmovne
lret
ret
lock
das
aad
shl
in
fidivrl
fdiv
jmp
ret
in
filds
loope
in
in
in
aas
sub
loopne
hlt
icebp
xlat
aad
ss
cli
lock
cmpb
jecxz
out
fsub
test
hlt
lret
fdecstp
std
jmp
rol
sti
cmp
into
ret
stc
filds
out
fsubrp
incl
ds
into
cmp
shl
cmp
faddl
sub
out
iret
fiadds
ror
sar
sar
loop
sbb
out
fidivrs
sti
fucom
loopne
jmp
fdiv
divb
shr
aam
shl
sar
idiv
loope
cmp
mov
fmull
in
repnz
cmp
xlat
icebp
in
lds
loopne
int3
jecxz
mov
in
leave
in
cmp
ror
rcl
icebp
fucomi
ret
lock
sti
in
fmulp
in
mov
lret
iret
ret
cmp
aad
xlat
fsubr
repz
into
in
repnz
mov
lds
jmp
icebp
out
leave
call
loop
fdivr
xchg
std
mov
mov
fst
iret
lds
xor
rcr
call
xlat
loop
icebp
fcom
fmuls
jecxz
mov
lock
fcmovnbe
cmp
xlat
mul
out
cli
out
fucomip
mov
int3
loop
enter
rol
cmp
test
fcomi
xchg
jecxz
aad
std
ljmp
shr
ret
lret
xor
rcr
rolb
aad
decb
out
les
jmp
jmp
cmp
jmp
xchg
decl
mov
mov
iret
aaa
iret
clc
fldlg2
xor
cmpb
into
out
ffree
clc
int
call
int
ljmp
testb
loopne
loop
xchg
call
fdivr
stc
cmp
aas
cmp
int
ret
or
mov
into
fdivrp
shl
sub
lock
std
jmp
icebp
in
cmpb
aam
icebp
fdivrl
in
mov
jmp
out
hlt
ss
cli
out
icebp
sti
shl
out
into
out
shl
in
xchg
out
iret
xor
stc
call
into
rcr
rol
ljmp
cmp
stc
out
rolb
jmp
rcr
lret
lret
cmc
into
ret
mov
fst
out
in
fucomip
loopne
iret
xlat
shl
icebp
test
fbstp
out
jmp
sti
cld
sar
cmp
roll
mov
xchg
jmp
out
ret
std
cmp
repz
std
icebp
div
std
ljmp
icebp
mov
not
iret
sti
repz
out
and
aas
into
out
div
loope
loop
std
les
lock
loopne
hlt
shl
clc
iret
jmp
hlt
cmp
ds
fcmovne
in
fdivr
addb
ror
in
xor
aas
ljmp
test
xchg
jecxz
orb
aaa
out
out
leave
cmp
cli
idiv
adc
or
test
or
fadds
xchg
lock
out
xor
iret
xlat
clc
leave
cmp
shr
iret
sar
mov
cmc
int
sti
mov
ror
in
cmc
enter
les
fcomi
lret
cmp
ret
fadds
jmp
int3
int
ljmp
ljmp
int
loope
cli
test
fadd
loopne
repz
adcb
rol
xor
ds
in
repnz
aam
sar
jmp
lret
loope
jecxz
das
shll
jmp
jmp
fcmovnbe
test
aam
rorb
loop
ret
out
icebp
int3
mov
fdecstp
cmp
shl
lock
xlat
enter
std
or
cmc
lock
ljmp
sar
cmp
into
ffree
repz
mov
loop
in
imul
in
ss
shl
loopne
in
fst
jmp
fdivr
ficoms
xor
in
xor
out
enter
clc
fdivr
hlt
xor
ret
testl
in
stc
cmp
test
loopne
fadd
cmc
test
roll
ret
sti
out
lock
fcomi
xlat
lret
sar
hlt
loop
addl
in
lret
in
fcmovne
call
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
icebp
in
iret
xor
fucom
loop
iret
fst
aam
mov
test
lret
jmp
xchg
repnz
hlt
out
das
fdivrl
xor
shl
mul
cmc
lret
mov
jmp
rcr
test
shr
out
sti
cmp
xlat
out
sar
fdiv
sarb
in
rcr
call
adc
icebp
in
iret
aam
lret
sarb
lret
xlat
enter
cmp
clc
cld
fsub
in
fldl
shr
in
jmp
ds
rcl
sti
xchg
or
cs
call
in
ljmp
call
cmp
std
in
dec
cs
clc
lret
icebp
imul
ret
test
leave
filds
rorl
cs
enter
xor
hlt
xlat
rorl
int
xchg
jmp
out
das
lret
xor
clc
enter
fcmovb
out
xlat
stc
fcmovnb
int
loope
fsub
enter
aam
xor
stc
out
xlat
cmp
sarl
sar
rol
enter
ljmp
lret
aad
std
cld
out
cld
cmp
fdiv
into
aam
hlt
loopne
jmp
fcoms
aam
aad
xor
repnz
fxch
ffree
std
in
fucomp
and
roll
jmp
in
shl
out
in
cmp
out
ret
adc
adc
fcmovnbe
iret
shr
std
mov
aaa
ljmp
cmc
shr
cmp
cld
cmp
enter
jmp
in
lock
lock
in
int
rorl
test
loopne
hlt
loope
enter
test
ret
cmp
lock
fmul
leave
enter
repz
fxch
cld
shr
rcr
out
and
call
ljmp
test
hlt
xor
in
repnz
fucomip
divl
lock
faddp
jecxz
aam
enter
xchg
test
into
out
shr
sarl
into
ret
test
xchg
fstp
int
in
xchg
mov
out
lock
repnz
fdivrs
stc
leave
in
shl
cmp
repnz
sub
sub
call
bnd
cmp
loopne
fidivrs
xchg
stc
lret
stc
fcmovu
clc
out
into
mov
xor
int3
out
out
into
ljmp
xor
loopne
xchg
cld
xlat
in
out
int
aad
ret
ret
jmp
out
xor
not
in
clc
fcmovu
inc
mov
mov
mov
enter
xchg
shr
shl
hlt
aam
leave
jmp
fsubr
xlat
jecxz
icebp
shl
mov
in
jecxz
fimuls
lret
sub
ftst
sti
idiv
fmulp
enter
int3
aas
ret
in
test
cmp
ljmp
ljmp
enter
sar
jmp
decb
hlt
fbstp
fcmovnb
cmc
out
xor
cmp
shl
clc
hlt
loop
neg
out
jecxz
in
jmp
iret
ret
cmp
vpand
cmp
xlat
in
rolb
loop
in
mov
std
shl
aad
iret
sarl
enter
int
in
std
rorb
fcomi
cli
lea
int
aaa
icebp
fstpt
idiv
rol
test
fldl
test
in
addl
fidivrs
sti
out
sti
rcl
out
out
call
icebp
icebp
in
and
int3
xor
in
ss
icebp
fistpll
cmp
rcr
xorb
lock
and
jmp
in
std
int3
fcmovne
cmp
cld
xlat
sarl
lock
std
in
mov
mov
xchg
mov
fsubrp
ss
out
lock
xor
std
cmp
lock
sti
lock
test
cld
leave
mov
out
xchg
in
lret
fdivp
in
repnz
xor
aam
idiv
jmp
rcr
test
not
ret
in
xchg
ljmp
shl
fsubr
in
out
loope
out
cli
jmp
out
in
out
xchg
shr
lret
das
test
int3
das
cmp
clc
roll
test
aam
ljmp
mov
jmp
shr
filds
cmp
les
orl
iret
xlat
aad
xor
fxch
cld
xor
sti
out
out
out
ficoml
rcl
cli
aam
out
xor
hlt
fdivp
sti
iret
ret
ror
clc
call
mov
icebp
jecxz
enter
aam
xor
jmp
rcl
aad
aad
rolb
push
shll
jl
add
xor
aas
hlt
fmul
loop
cmc
mov
neg
mov
xchg
test
xchg
repnz
jmp
loopne
cmp
into
ret
out
call
cmc
test
test
xchg
repz
sarl
out
rcl
addl
sti
out
in
out
in
adc
fucomip
ss
xor
xlat
call
test
adc
hlt
mov
icebp
clc
lds
cmc
loop
in
fdivrs
lret
aam
cmp
out
repnz
fcomi
test
fdivr
incb
leave
xor
xor
out
aaa
fdivrl
clc
fscale
in
ret
cmp
cli
loopne
in
fsubr
out
sar
shr
not
test
stc
fiadds
clc
and
idiv
and
loopne
ljmp
fldl2e
cmc
int
lret
cmp
fneni(8087
loopne
in
fmul
out
rolb
xlat
sti
cmp
cli
cli
xor
repnz
lock
leave
out
xchg
mov
lret
out
ljmp
loope
into
test
call
rcr
aam
int
add
cld
sar
loope
fdivp
loop
vpaddsb
cmp
cmp
lock
std
rcl
fsubrp
shl
in
mov
loopne
xor
aam
into
aam
xlat
icebp
shr
cmp
aaa
jecxz
rol
fdivr
hlt
out
faddl
jmp
jmp
cmp
enter
mov
out
mov
into
jmp
fcomip
jmp
cli
clc
test
cmp
in
fxam
in
sbb
decl
into
loop
iret
ss
cmp
enter
out
xorb
sti
mov
test
ret
xchg
fimuls
icebp
aad
out
shr
iret
lret
sub
sbb
out
ret
mov
loope
in
out
loopne
loop
hlt
in
out
lret
cmp
ss
cmc
int
test
cmp
loopne
loope
cld
jmp
mov
fiaddl
sub
test
fcmovnu
lret
f2xm1
cmp
mov
cli
std
int
lret
int3
xor
sti
cmc
repnz
out
add
cmp
cmc
loopne
sub
lock
fcomip
sbb
cmc
clc
stc
not
aam
cld
in
cmp
xor
loopne
shl
jecxz
ret
in
lea
loope
rcr
cmp
not
aad
rcr
cmp
repz
adcb
ret
call
out
rol
fdiv
cmc
fsubrp
rolb
in
mov
xor
xor
ljmp
shl
cli
dec
fadds
xchg
xchg
shl
int
out
rcl
cmc
rcr
xor
inc
in
fcmove
fisttpll
mov
xor
fnstenv
jmp
ss
ror
stc
loop
repnz
fcomi
mov
icebp
int3
rol
lock
push
lock
sub
add
rcl
hlt
lret
loopne
addb
xor
fstpt
call
repnz
cmp
out
out
out
in
loop
fldl
bnd
aaa
cmp
aas
sar
jecxz
les
movl
lock
icebp
jecxz
sti
divl
fucomip
rcr
xlat
rolb
sti
out
xchg
out
fimuls
ss
xor
cmp
ljmp
ret
lret
enter
fsubrp
jmp
iret
ret
repz
fcomip
in
cmp
test
xchg
adc
icebp
out
nop
ljmp
cmp
fnstenv
iret
shl
sar
sar
cmc
mov
mov
ljmp
call
lret
jecxz
ror
out
test
mov
call
aam
xlat
in
cmp
idivl
dec
xlat
leave
xchg
aam
hlt
call
xlat
stc
repnz
out
shl
or
fld
neg
xchg
jmp
fdivp
out
ret
clc
aaa
aad
mul
icebp
lret
in
jecxz
shl
sar
ljmp
fcmovbe
fisttps
xlat
sar
fdivrp
in
sar
ljmp
aam
icebp
out
jecxz
xchg
lret
xor
fcmovnbe
cmp
call
xlat
ds
ret
rcl
stc
lret
into
in
mov
lock
out
cmp
lock
aam
and
cmp
cmp
rol
lock
cmp
cli
rolb
jmp
fsubr
cld
fcoml
jmp
in
loopne
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
cmp
rol
xlat
shl
sbb
in
loope
shl
test
mov
xchg
out
fidivrl
cld
ds
cmp
faddp
into
add
orl
jecxz
cli
aad
out
ds
xor
xlat
mul
icebp
clc
cmp
repz
repnz
stc
mov
filds
out
in
lret
cmp
rcl
addl
fmuls
xchg
call
test
hlt
iret
cmp
fdecstp
xchg
faddp
enter
vpmaxub
cld
fucomp
shr
aad
shr
int
out
dec
lret
sarb
test
fcomp
loope
sti
xchg
lret
xlat
out
xor
push
jmp
in
stc
enter
in
out
loop
xchg
rclb
int
int3
out
filds
lock
flds
and
nop
loop
xor
cmp
cmp
rcl
cli
test
out
sti
test
roll
or
fnstsw
jmp
out
aam
xor
neg
cld
roll
xlat
call
in
mov
call
sub
cmpl
repnz
aam
std
leave
fabs
fcmove
fcomi
xor
out
cmc
cli
enter
test
jmp
int
fsubrp
sub
int3
fdivp
aas
xor
xor
int
out
repz
lret
shl
loope
sub
mov
cld
out
in
xor
shl
jmp
cmp
ds
aaa
loope
loope
sar
addb
xchg
xchg
loop
aam
hlt
lret
aas
lock
int
loopne
xchg
test
ljmp
loope
aaa
into
shl
ljmp
cmp
fcomi
lret
xchg
mov
cs
cs
hlt
leave
into
xlat
mul
cmp
in
ss
sbb
cmc
clc
fcos
imul
mov
into
test
ljmp
fsubr
xor
cmp
cli
std
cli
aam
mov
jmp
out
jmp
rcl
cmp
pushl
aas
cmp
rcr
xlat
lock
jmp
cli
loop
loop
in
in
jmp
cmp
repnz
into
rol
inc
sarl
shl
lret
jecxz
enter
out
incb
cmp
repz
aas
int3
cmp
rcl
rcl
shl
cmp
and
shl
in
hlt
out
fld
cmp
shl
xlat
ljmp
test
jmp
in
ret
lret
ljmp
int
cmp
fstp
cmc
mov
ret
sti
and
into
int
iret
sub
cmp
in
cmp
call
hlt
inc
shl
loop
fdivr
mov
mov
in
jmp
shl
das
repnz
rolb
std
testb
xchg
enter
test
out
ss
ljmp
rcl
testl
jecxz
in
shr
lock
std
fidivrl
lret
loopne
aas
in
out
test
call
dec
in
icebp
lret
aam
ljmp
in
int
rcr
in
div
mov
xchg
jmp
mov
fxch
aad
int3
fstp
sar
rcr
loop
out
fdivr
decb
cmp
in
xchg
sub
aaa
out
fcomi
xorl
hlt
loopne
aas
mov
in
add
lret
out
rol
hlt
fadd
leave
cmp
repnz
aas
cmc
int3
aas
sti
xchg
div
loope
cmc
mov
in
sub
jmp
in
in
enter
cmp
fadds
jmp
leave
nop
xchg
sub
icebp
out
cmp
in
cld
sarb
stc
stc
fcos
out
int
rol
aas
out
loop
loopne
out
in
shl
lock
hlt
int
aas
ds
fdiv
shr
hlt
loope
mov
leave
jmp
movl
ljmp
cli
repz
xchg
stc
xchg
ror
in
fldl
jecxz
xor
call
sti
div
out
cld
lock
ret
fcmovnu
fstpt
jmp
ljmp
lret
test
icebp
ds
cli
loopne
icebp
xlat
cmp
jmp
xchg
fabs
fldl
ret
lret
call
imul
std
leave
loope
jmp
and
loopne
lock
loopne
in
clc
call
ljmp
out
in
fmul
fxch
loop
lock
int3
icebp
mov
rcl
sarl
loope
fsub
lret
fisttps
cld
in
lock
repz
leave
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
mov
jle
jge
jl
jmp
int3
cmp
fdivrl
idiv
hlt
ret
loopne
loope
incb
out
icebp
aam
in
sti
jmp
aam
jmp
aam
std
les
decl
rol
out
cmc
in
rol
in
xlat
testb
hlt
loop
addl
in
lret
repz
xor
enter
int3
push
rcr
rcr
out
mul
xchg
xor
lock
ljmp
icebp
fdivrs
sti
xchg
fsubp
roll
xor
ss
shl
jmp
shr
iret
aad
rolb
loopne
inc
fsubp
and
ror
ret
xor
in
in
fdivrl
cmp
neg
loop
fcmovu
jmp
fidivrl
clc
fmul
in
mov
loope
aam
aaa
leave
cmp
loopne
faddl
movb
jmp
ljmp
rcr
lret
out
fiaddl
jecxz
test
in
fcmovb
cli
int3
out
sub
sub
cmp
lock
icebp
cmc
jecxz
div
repz
test
fcmove
loope
mov
repz
stc
lds
fadd
aaa
in
ss
fptan
incb
out
jecxz
in
mov
out
int
les
cmp
lock
cmp
cmp
sar
loope
xchg
ror
aaa
fld
iret
xor
sar
repz
ret
xlat
test
fdecstp
int
loope
in
cmc
icebp
loope
sti
iret
aad
enter
jmp
fcmovu
fucomi
movl
and
aam
fcomi
xor
cmp
fyl2xp1
ret
rol
lret
neg
incb
fdivp
repz
xor
sti
repnz
hlt
loope
fmulp
enter
int
call
lret
sti
fcmovnu
idivb
inc
iret
cmp
cmc
loopne
leave
mov
fildl
ror
xor
test
hlt
fdivrl
out
sti
fildl
jmp
out
leave
rcl
lock
cmp
leave
int
call
ret
out
loopne
ljmp
iret
icebp
decb
repz
neg
hlt
cld
aaa
rcr
sti
testb
in
jecxz
lock
aam
aaa
cs
ljmp
fucomip
stc
loopne
in
and
xchg
std
xchg
ret
cmp
repz
int
xor
xlat
lock
in
loopne
jmp
in
loope
jecxz
ret
in
lds
xor
ds
xor
hlt
jmp
fldl
lret
dec
divl
ror
leave
fstp
cli
stc
aad
idiv
cmc
shl
cld
movb
int
mov
loop
aad
xor
sar
in
ljmp
cmp
xlat
mov
loope
fcmovu
ljmp
xor
rcl
cmp
xor
push
iret
ror
out
stc
test
xchg
lea
jmp
out
stc
shl
enter
ds
fdivp
stc
lock
hlt
fiaddl
clc
int3
loop
jmp
int3
loop
shl
xor
repz
clc
icebp
rol
fucomip
fabs
xchg
jecxz
nop
into
aad
into
loope
out
xor
cmp
in
aaa
fucomi
cmp
clc
fcmovnb
xlat
leave
call
int
mov
enter
cli
cmp
out
cmp
rcl
aas
in
test
xchg
xor
mov
fsub
ds
aam
sar
loope
cld
cli
out
cmc
repz
shl
imul
in
loope
iret
out
out
xchg
lret
icebp
in
cli
ljmp
in
jecxz
mov
fdiv
jmp
xchg
into
repnz
into
ss
iret
out
in
fcomp
std
div
ds
shl
xchg
fimuls
out
out
aad
idiv
enter
aam
cld
stc
sar
out
mul
std
jecxz
xchg
decb
int3
ss
cmp
rcr
add
int
into
nop
jmp
shl
test
das
out
xor
lds
fidivrs
clc
loop
cld
jmp
fmul
fisttpll
loopne
xor
call
fistpll
stc
iret
shlb
lock
cmp
aad
ffree
loope
leave
xchg
int
xor
div
cmp
ljmp
repnz
mov
fcoml
rcr
loop
fnstcw
loope
cmp
call
incl
out
shl
into
lret
hlt
cmc
icebp
loopne
cmc
xor
ret
cli
ljmp
repz
rolb
ret
push
jmp
lret
ds
lret
rol
loop
repnz
jl
add
sti
xor
fcmovu
fdivrp
ret
ret
rolb
dec
fucomip
jmp
aad
ljmp
cmp
loop
aad
test
out
testl
fldl
ret
std
fcmovu
lret
cmp
repz
aam
ror
testl
shr
cs
aam
xlat
fdivrl
fmulp
ret
fst
inc
in
cld
iret
cli
jmp
shr
or
enter
movb
in
fsubp
jecxz
out
jecxz
or
lret
int
cmp
rol
fmul
cmp
fld
fdivrp
out
aas
in
leave
out
in
mov
mov
in
frstpm(287
aad
cmp
shlb
cmp
xchg
mov
out
int
clc
icebp
incl
xlat
lock
loop
into
xlat
ljmp
aad
xlat
loopne
jmp
loopne
in
fucomi
sti
shl
out
stc
ret
xor
sarl
lret
xor
loope
clc
cmc
hlt
in
out
loopne
iret
mov
lret
xor
xlat
shl
fdivp
sbb
cmp
fcmovbe
cmp
jecxz
out
ljmp
ret
stc
cli
cmp
ret
cmp
std
mov
enter
in
fadds
das
loop
ljmp
ror
cli
out
rolb
fucom
hlt
jmp
mov
in
xor
in
cmc
std
cmp
aam
shl
xchg
testb
int3
lret
mov
lret
fsubr
repnz
ljmp
aam
loopne
mov
adcb
jmp
fprem1
int3
lret
ljmp
rolb
testb
xchg
out
mov
jecxz
jmp
leave
aas
clc
fdivrl
out
sarl
lret
and
loopne
xchg
rol
rcl
out
lret
aas
idiv
cmp
into
incl
jecxz
mov
lret
cli
into
xchg
mov
out
jecxz
into
not
xlat
leave
div
int
test
xchg
int
movb
xor
xor
in
sarb
hlt
aad
in
out
iret
ffree
test
test
cmp
std
cmp
aad
xor
iret
loop
in
fcom
div
cmp
rolb
mov
incb
sub
fcomp
cmp
cmp
cmc
std
jmp
loop
fdivrp
lock
xor
shr
out
in
out
cmp
stc
ret
xchg
jmp
filds
call
cmp
sti
out
stc
fst
ljmp
repnz
in
stc
mov
out
in
rol
xor
shl
out
ss
fidivrl
sbb
rcl
rcr
lret
faddp
jecxz
mov
fcmovu
out
fldlg2
ds
idiv
cli
test
test
test
loopne
mov
xchg
mov
aad
jecxz
in
out
aam
cmp
ds
addb
out
clc
out
mov
lea
cmc
icebp
les
call
cmp
ret
aas
cli
mul
filds
nop
mov
loopne
rcl
repnz
in
fucomi
jecxz
aas
and
stc
sti
sti
int3
mov
xchg
in
shlb
fidivl
test
into
fsub
clc
in
in
mov
out
cmc
cmp
repz
stc
lret
repnz
repz
shl
in
loop
leave
lret
iret
sbb
shl
jmp
fnstenv
shl
int3
repz
fdivrl
fchs
fsubrp
xchg
aam
ret
shl
ljmp
in
xor
fcmovb
test
mov
aam
lock
xor
xor
hlt
out
cmp
aad
fcomi
fcomp
div
ret
lret
lret
enter
adcb
cmp
repz
clc
fucomi
fcompp
loopne
jecxz
cmc
loope
in
out
lret
xchg
ljmp
ljmp
add
stc
hlt
fisttpll
jmp
cmc
shll
vpaddb
icebp
into
rcr
loopne
icebp
in
in
in
in
roll
lret
xor
cli
enter
roll
sti
cld
mov
in
loop
repnz
xor
shl
xlat
cld
in
fcom
stc
enter
cmp
mov
into
nop
mov
int3
xor
fcmove
int
out
xlat
ss
lock
repz
fimuls
nop
mov
cmc
lock
out
cmp
rol
stc
cld
incl
lea
bnd
leave
mov
push
jmp
rcl
mov
neg
repnz
in
lret
das
mov
jge
jl
shr
out
ss
lret
std
loope
ror
in
ss
aam
fdivr
jmp
lock
int3
rcr
test
stc
addl
iret
icebp
mov
mov
lret
ret
in
enter
rcl
aam
idiv
out
hlt
loope
ret
cli
orb
out
repnz
aad
aad
repz
stc
cli
cmp
adc
cli
cmp
loope
lret
lret
xchg
mov
rcl
repz
aad
fucomi
in
jmp
aas
ljmp
call
std
cli
jecxz
out
roll
icebp
cmp
cs
lret
test
xchg
icebp
hlt
out
int
dec
icebp
out
hlt
into
out
cmp
aas
int
fcmovb
neg
sbb
stc
loop
or
xchg
iret
mul
cs
shr
cmp
cmp
sbb
mov
jmp
clc
mov
fsubrp
xchg
repnz
cli
stc
xor
in
in
fdiv
cli
jmp
lret
cld
in
in
aaa
out
repnz
xor
fst
div
neg
adc
lret
jmp
jecxz
loop
xchg
cld
rcl
xor
shl
shl
rcr
cmp
fiaddl
sti
mov
ds
addl
out
shl
shl
repz
fdivr
testl
int
fsubr
addb
loop
xor
aad
rol
loop
sbb
cli
std
rorb
fneni(8087
popl
out
repz
xlat
cmp
fxch
incl
icebp
orl
cld
ljmp
xor
cmp
lock
clc
sub
out
orl
cmp
loopne
test
aaa
hlt
in
cmp
xlat
fcmovbe
fdivr
cmc
cmc
cmc
fcmovnbe
aam
std
out
out
enter
icebp
call
enter
cld
stc
repnz
sar
ljmp
ret
loopne
call
jecxz
xor
iret
iret
out
stc
fcmovnbe
out
ds
out
idivl
cld
fcmovne
lret
jmp
mov
cmc
enter
ss
cld
icebp
cmp
loopne
cld
ror
jmp
lret
loopne
ss
sarl
cmc
fstp
out
into
cmp
int
loope
loop
std
in
ljmp
aam
jmp
call
cmpl
cmc
ds
repnz
enter
loopne
std
jecxz
mov
ljmp
fsqrt
cmp
fldz
int3
clc
icebp
and
cmc
aam
in
fsubrp
ljmp
icebp
rol
out
fdiv
repz
sarb
sti
loopne
jecxz
xlat
mov
xlat
loope
lret
rcll
rcr
cli
xor
stc
cli
fdivrl
cmp
repz
testb
fdivr
fst
loop
fdivp
xor
shll
jmp
sar
lret
aad
repz
lock
cmp
fucomi
xchg
out
lret
in
jmp
into
fcmovu
cmp
into
ror
loope
cmc
loopne
clc
and
jmp
test
lret
xor
rol
in
cmp
std
lock
cmp
repnz
fdivr
jmp
lret
fucomp
xchg
in
xor
das
xor
into
into
in
xlat
aad
rolb
mov
nop
icebp
lock
rcl
ss
hlt
rcl
aad
icebp
ret
in
and
ljmp
leave
enter
cld
loope
jecxz
fcom
in
xlat
in
ds
in
imul
std
iret
shl
repnz
repz
neg
jmp
dec
aas
cmc
cmc
idiv
fcmovb
ror
xchg
mov
mov
xchg
icebp
mov
vpxor
int
clc
leave
out
out
into
int
repz
mov
stc
out
jecxz
movl
ss
loope
repnz
cmp
stc
std
fucom
dec
out
xchg
out
hlt
stc
shl
fdivp
add
ret
out
sti
call
mov
iret
loope
vaddsubps
icebp
dec
std
lret
int3
cmc
in
in
repz
xchg
out
enter
mov
xor
shlb
std
ror
cmp
loop
cmp
lock
std
lret
in
fmuls
aam
loopne
leave
sar
ljmp
not
ret
cmp
fsubp
call
clc
call
xor
roll
cli
std
orl
jmp
cli
xchg
lock
lret
jmp
icebp
iret
ljmp
rcl
lock
cmc
loop
mov
lret
mov
call
into
aam
fdiv
std
fdivrl
repz
mov
xlat
lds
xchg
call
jmp
jmp
int
mov
cmp
xchg
sarb
aas
leave
jle
jge
jl
xlat
div
rcl
cmp
cmp
ds
neg
cmc
xlat
xor
cmp
out
ljmp
xlat
xlat
cs
aad
sbb
aas
aam
shl
jecxz
out
jecxz
fsubr
icebp
test
rol
cs
imul
fcmovnu
clc
incl
jecxz
ficoml
in
icebp
shr
jmp
into
fdiv
cmp
rol
out
loope
int
out
into
ljmp
loop
lret
repz
call
std
ret
jmp
loop
clc
clc
in
out
repnz
sub
in
out
rcr
int
out
ss
ret
leave
fucomi
xchg
shr
iret
cmc
shl
int
cld
in
aad
in
icebp
ror
aas
out
loopne
out
cli
enter
mov
in
lock
jmp
cmp
loopne,pt
fcomp
roll
ffreep
in
fyl2x
fdivrp
lea
aad
cli
into
fcom
xor
aad
out
vpmulhuw
loop
loopne
dec
fst
in
cmc
aam
fcom
lock
push
shr
icebp
call
sti
ret
cld
xchg
decb
out
xor
aaa
into
fptan
fsubrp
out
into
filds
cmp
aam
fsubp
lret
in
int3
mov
mov
shl
divl
clc
repz
in
int3
cmp
out
std
xchg
xchg
addl
shr
ss
out
out
fucomi
xor
ds
fcmovnu
stc
movl
filds
repnz
fsubr
shl
icebp
int3
neg
ds
xlat
shl
fmul
std
out
out
mov
icebp
fmul
jmp
in
xor
out
not
cmc
loopne
aam
int3
shl
call
enter
out
and
xor
out
ret
shr
jmp
xor
xlat
ret
faddp
or
out
int3
jmp
jmp
cmc
lret
aad
imul
stc
repnz
div
fdiv
in
into
leave
cli
enter
cmc
xlat
repnz
shr
stc
ss
iret
repnz
in
xlat
mul
lret
call
sbb
xor
cmc
cld
cmp
in
fdivr
sbb
mov
shl
mov
int
xor
fsubr
cmp
loope
xor
mov
fidivrs
aam
jmp
out
in
jmp
leave
clc
cmp
xor
jmp
into
ret
cli
repz
lock
xor
std
xchg
lret
in
test
xor
repz
in
idiv
ss
repz
out
lret
fcoml
int3
not
xlat
fsincos
cmp
cmp
lock
loopne
out
out
in
mov
ljmp
shr
ffree
rcr
fcmovnbe
cld
fstp
fld
ljmp
shr
in
repz
fidivl
lret
fcomi
test
aam
rcr
cli
leave
xchg
leave
xchg
repnz
int3
rcr
fucom
lock
cmpl
shr
ret
ret
iret
in
sub
enter
in
call
ljmp
test
jecxz
hlt
xor
out
rcl
nop
loope
jmp
ret
fcmovnbe
into
enter
xlat
ss
fldl
mov
lea
xlat
clc
sar
stc
shl
fdivrs
cld
fmul
fcmovnbe
mov
movl
call
lock
jecxz
in
xlat
icebp
movb
fmul
ljmp
shl
int3
sti
enter
clc
sbb
repz
out
iret
fcmovne
mov
repnz
ret
iret
fdivrs
out
lret
loope
ds
stc
sub
loopne
enter
in
in
jecxz
ret
div
iret
cmc
cmp
ds
std
aam
aad
shl
mov
loop
lret
repnz
out
not
lret
cmp
out
loop
icebp
faddp
xor
loop
enter
icebp
rorb
into
leave
idiv
mul
cmp
cmp
les
decb
ljmp
xor
icebp
cmp
in
lock
fcmovnu
into
test
cmp
ret
fcmovnu
cli
idiv
frstpm(287
call
ds
aaa
rcl
sarl
ret
jecxz
rcl
jmp
xchg
cli
mov
aad
cli
lock
aad
stc
cmp
lret
mov
mov
into
ss
out
int
not
fxam
fcomp
cld
mov
aas
loopne
fdivrp
icebp
sub
cmp
les
enter
std
sti
lds
int
int3
jmp
clc
in
rcl
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
in
cmp
jle
jge
jl
hlt
int
xlat
xor
fdivrs
cmp
clc
cli
div
xchg
fdiv
mul
sti
fadds
in
in
xor
out
cmc
push
cli
sarl
faddl
cld
std
test
fldl
in
in
cmp
cmp
iret
jmp
xor
cmp
xlat
fcomi
in
jmp
fldpi
movb
sar
ljmp
sar
out
xchg
cmp
fadds
fcos
shr
jmp
hlt
ljmp
sub
xlat
loopne
rorl
xchg
out
repnz
xchg
iret
out
xor
repz
jecxz
repz
cmc
rcr
repnz
mov
out
fldl
sub
imul
vpaddusb
cmp
cmp
rolb
jecxz
fstp
jmp
roll
leave
repnz
int3
shlb
in
xor
xlat
xchg
test
testl
loop
in
loopne
fst
out
call
cmp
aam
ret
loop
cli
call
fucomip
aad
rol
out
cmp
out
neg
into
fiaddl
movb
adcl
into
out
ljmp
out
in
fistpll
into
fcmovnu
aas
fdiv
out
sti
cld
enter
shr
repz
out
sti
repnz
lock
lret
cmp
add
in
cld
lret
nop
incb
cmc
jmp
imul
jecxz
cli
aas
add
lret
leave
int3
loop
out
in
xorb
aam
jmp
sti
sarl
rcl
std
cmp
cmp
xchg
jmp
loopne
in
sti
orl
ror
loopne
in
loope
fstp
fdivr
repnz
ds
in
mov
leave
out
into
addl
sub
stc
out
mov
lret
int
jmp
sub
fdivs
ss
div
movl
loopne
lret
test
out
cmp
imul
aam
loope
stc
loopne
loope
in
test
repz
xor
repnz
in
fcom
cmp
ss
in
ret
fsub
test
enter
cli
mov
in
xor
in
cmp
fcmovnbe
hlt
xor
sbb
repnz
in
loopne
std
ljmp
aaa
in
neg
cmp
fnstsw
cmp
shl
cld
out
mov
cmp
loopne
hlt
imul
in
lret
out
stc
out
adc
in
test
out
ljmp
nop
loop
iret
out
in
in
icebp
fnstsw
ljmp
ret
add
repnz
xchg
call
les
aad
in
cld
aam
iret
aad
out
rcl
repnz
leave
cmc
cli
loop
stc
fdivr
filds
hlt
shl
ret
cmc
cli
loopne
icebp
aam
test
fdiv
cli
stc
int
call
aam
call
ss
fst
roll
repnz
lret
sti
in
lea
mov
xor
xor
and
leave
test
fcmovne
ret
enter
mov
out
in
out
out
hlt
repnz
cmp
rcr
ror
aaa
repz
movl
in
int
sub
sub
aam
int
sar
ffreep
repnz
fadd
sub
rcl
xchg
loop
cmp
ret
repnz
cmp
fcomp
iret
rcl
clc
aam
cmc
cld
neg
vpextrw
lds
repz
aam
sub
jecxz,pn
das
xlat
call
out
cld
ret
cmp
ret
ret
cli
rorb
int
ss
enter
clc
sar
jecxz
movb
faddl
in
repz
ljmp
ljmp
sti
rol
add
xchg
out
int3
icebp
ror
fcmovbe
call
cli
aad
clc
cmp
sar
in
loop
fisttps
loopne
iret
in
in
ss
jmp
hlt
cld
cmc
repnz
aam
std
xchg
in
std
sti
and
jmp
cs
ss
clc
not
fstp
sub
loopne
cli
icebp
cmp
lret
lret
in
mov
lock
lock
aam
fsubrp
cmc
ret
aad
in
loop
xchg
out
mov
out
int
repnz
lock
vpaddusw
cli
aad
in
cmp
shl
repnz
loope
loop
fimuls
lret
test
lret
enter
xor
out
repz
out
lret
icebp
int
out
fucomip
ret
leave
fcmovnb
cmp
aaa
xor
or
int3
call
cmc
lock
faddl
lock
mov
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
pop
shr
sarl
jge
jl
enter
aad
ss
enter
ret
in
mov
fcmovnu
xchg
rol
ret
jmp
fdivrs
aad
fstp
cmc
cmp
fdivp
enter
jecxz
sti
icebp
test
lock
stc
repnz
into
in
cmp
fucomi
cmp
sbb
loope
jecxz
mov
lret
incb
sarl
cmp
std
shl
cmp
loopne
fsubr
mov
mov
sub
into
shl
fdivrs
ljmp
in
fnstsw
icebp
aad
hlt
test
repnz
xor
ror
cmp
stc
iret
ror
ror
loopne
faddp
aad
fld
ror
lret
enter
lock
call
fmulp
cmc
rol
out
icebp
repnz
cmc
or
loop
jecxz
fisttpll
cmp
sti
out
sar
int3
into
in
loopne
stc
shl
repnz
sti
addl
cmc
cmc
aaa
repnz
stc
in
idiv
in
aas
test
rcl
test
in
lds
sub
call
aas
clc
out
fucomip
sar
into
sti
repnz
fmull
rorb
cs
xor
in
cmp
roll
fdivrp
jmp
mov
ret
xchg
int3
jmp
repnz
ret
aaa
idiv
idiv
lock
out
cmp
test
aam
loopne
std
in
mov
icebp
decb
shr
repnz
cmp
faddp
fcomp
ret
testb
cmp
mov
loopne
cs
fdivrl
aaa
clc
test
xor
lock
fdivrp
loope
xchg
shr
aad
out
fld
loop
lock
call
hlt
adc
repnz
flds
mov
call
xor
out
enter
cmp
sub
fdivrs
cmc
stc
in
orl
mov
mov
test
int
ret
jmp
ror
fidivrl
lret
fadd
out
sar
xchg
out
mov
fldpi
out
cli
sub
in
fstp
in
leave
loope
cmc
sti
cmc
into
out
sti
fnsetpm(287
lret
cmp
sti
xchg
shr
lret
ss
sub
cmp
xor
fildl
in
sarb
in
xchg
shl
sti
clc
icebp
out
aaa
hlt
xor
testl
test
sbb
rol
ljmp
lret
sar
push
filds
test
mov
fadd
loop
repnz
lret
stc
ss
cmp
in
xlat
repnz
cmp
call
lret
out
shl
jecxz
shr
into
stc
cmp
cmc
enter
xor
lret
xor
fcmovbe
xchg
inc
std
mov
in
mov
leave
fstpt
iret
enter
stc
out
fdivp
icebp
xlat
ds
rcr
repz
incl
cli
sub
lock
into
in
stc
iret
idivl
cmp
in
sub
cmp
std
in
cli
sub
icebp
leave
xlat
aam
cmp
iret
loope
clc
aas
cli
loopne,pt
loop
std
addl
int
lock
cmc
lret
not
enter
cmc
repz
sarb
sti
ftst
loopne
jecxz
int3
int
aad
test
repnz
cmp
fptan
cld
out
fsub
cmc
lea
fildl
xor
out
repz
jmp
test
incb
lret
rorb
clc
lock
xor
cmc
clc
jmp
loop
out
aam
out
loopne
lret
ljmp
ljmp
call
hlt
cld
fcmovnu
vpaddd
fldpi
icebp
xchg
hlt
repz
fdiv
out
imul
into
lock
rolb
jmp
xlat
fsub
clc
test
lret
out
aaa
loop
cmc
cmp
imul
cld
int
lock
test
loop
ret
out
cli
popl
xor
cld
jmp
in
into
cmc
mov
stc
cmp
call
shr
loopne
rcr
xor
out
clc
iret
fstp
int3
std
fildl
mov
jmp
iret
shr
lret
xchg
sub
in
repnz
jmp
out
aas
fdivp
hlt
adc
lock
loope
jmp
orb
out
into
shl
fadd
jmp
imul
ds
loope
loop
loope
cld
test
call
jmp
mov
jmp
out
aaa
fsin
sar
jecxz
std
rolb
in
out
rolb
iret
out
fldln2
aad
out
xor
int
rcl
shl
in
clc
cld
loopne
sbb
lds
xor
shl
cmp
fcmovne
xchg
icebp
cmp
test
ljmp
or
lea
cmp
jne
jmp
int
ds
int
lock
sahf
cmp
jle
jge
jl
std
mov
enter
into
fldl2e
lock
int3
repnz
int3
xlat
ss
rcr
or
orl
test
aaa
ljmp
enter
xor
ret
jmp
jmp
mov
out
xchg
iret
xchg
loop
enter
into
xlat
sti
rcl
stc
int3
jecxz
cmc
cmp
repnz
roll
loope
ror
out
ret
out
adc
in
stc
jmp
in
cli
mov
or
repz
sub
cmc
in
iret
cld
lock
iret
sbb
icebp
mov
clc
ljmp
mov
repz
stc
iret
fcmovbe
addb
ffree
lds
icebp
mov
ljmp
xor
fnstcw
jecxz
fadd
rorb
loope
rcl
mov
aad
cmc
lret
in
repz
cmp
cmp
and
fcmovnbe
incb
xchg
out
lret
shr
out
sub
fmul
hlt
out
cmp
iret
in
fndisi(8087
xlat
call
fiadds
sub
int3
imul
xlat
into
fucomi
cmp
loopne
clc
adc
div
cld
adc
int3
loop
int3
orl
cs
fiadds
loope
xchg
in
fcmovbe
mov
jecxz
enter
repz
clc
std
xlat
fildl
cld
enter
out
in
xchg
shl
loope
jecxz
fcmovnu
out
leave
test
not
div
cmp
lock
mov
sti
fcmovu
sub
loopne
lds
shl
cmp
iret
fldl2t
xlat
cmp
fcmovnu
cli
std
ljmp
into
shl
lret
loopne
lret
fcmovnu
in
lret
sbb
jmp
loopne
mov
out
popl
aad
out
enter
fdivr
not
cli
aas
lock
std
ret
lret
mov
mov
fucomip
xor
aad
xor
out
aam
loopne
icebp
cmpb
ror
out
cld
fsubrp
std
iret
repnz
in
ror
std
fdiv
fmul
adc
clc
sar
loopne
out
jecxz
in
xchg
lock
loopne
enter
sarb
test
int3
lock
ds
loop
sti
repnz
fcom
jmp
enter
shl
testl
cld
cmc
mov
div
out
aam
lock
xlat
xlat
mul
hlt
loopne
cld
mov
lret
cld
lret
shr
leave
icebp
fdiv
jmp
cli
int
in
int3
aas
cld
mov
xlat
in
in
std
test
sub
jmp
fdivs
cmp
idiv
icebp
addb
aad
testl
stc
xor
cld
cmp
fadd
int3
int3
cmp
cmp
loope
mov
mov
hlt
fidivl
stc
in
loopne
repz
sub
rolb
sub
ljmp
cmpb
repz
ds
mov
repnz
sti
ret
out
test
jecxz
les
shll
cmp
shrb
lret
clc
hlt
repnz
icebp
test
fadd
aam
int
jecxz
loop
repz
xor
in
in
cmc
out
int3
loope
cli
shlb
loopne
xor
mov
mov
or
test
sub
stc
cmc
fnstcw
cld
into
fildl
loope
sti
out
call
jmp
xchg
in
call
clc
fcomi
xor
addb
stc
or
cld
jecxz
mov
icebp
rol
aaa
in
lock
aam
loopne
rolb
roll
jmp
xor
lret
imul
loope
cld
aad
mov
cli
in
clc
into
stc
mov
orb
in
int
jmp
test
stc
test
loop
fisttpl
cli
in
in
and
in
not
fstpt
sar
repz
sar
loop
repnz
mov
sub
roll
xor
in
fcmovu
cmp
cld
aad
push
aad
mov
int
jmp
lock
xabort
in
call
cmp
idiv
xchg
in
mov
aaa
ror
hlt
aam
out
std
shlb
cmp
sti
int3
cmc
sti
repnz
enter
jmp
rcl
repz
xor
repnz
jmp
out
xlat
loop
repnz
cmp
fscale
in
mov
in
dec
ret
enter
cmp
or
sti
out
jecxz
int
or
call
int
subb
xor
test
cmp
jmp
into
into
aad
shl
cmp
out
lret
inc
or
xor
jmp
int
enter
int
lds
xor
fnstsw
jge
jl
sar
out
rcl
repnz
iret
fdivl
iret
sar
shl
cmp
fcmovnu
loopne
mov
idiv
loopne
out
test
loop
xor
ljmp
aad
into
int3
fdivr
loop
aas
mov
test
addl
cmc
rorb
lock
lret
cli
ss
in
cmp
fcmovb
cmp
test
div
xchg
in
in
ror
shr
cmc
ljmp
aam
aas
repnz
in
mov
hlt
jecxz
lret
push
leave
jmp
jecxz
xlat
test
rol
stc
jmp
loop,pt
mov
mov
ljmp
aas
call
faddl
and
fsub
enter
loope
ret
cmp
iret
fcmovnbe
repnz
fidivl
jecxz
cmp
cld
in
std
out
incl
xor
sar
out
fnstcw
call
shl
cld
std
cmp
clc
int
mov
sarb
iret
ror
lock
sti
fdiv
xlat
stc
fsubrp
rcr
aam
idiv
mov
filds
jmp
fcom
call
ffreep
sar
inc
addl
nop
lock
out
repnz
cmp
cmc
cmp
rolb
leave
push
dec
cld
inc
adcb
hlt
call
std
iret
leave
in
in
in
rcl
test
sti
stc
out
mov
jmp
out
adcb
xor
ret
repz
shr
jecxz
les
in
ffree
and
fiaddl
xor
sti
in
xlat
test
aas
in
aam
xlat
sbb
loopne
aas
in
std
in
in
shrb
ds
cmp
in
iret
aam
in
cmp
out
aam
fmul
out
in
loopne
lret
call
in
cmp
cmp
xlat
stc
cmpb
rorl
loope
out
ret
mov
ljmp
fdivr
lock
cmc
fcmovnb
cmp
std
rcr
cld
ljmp
ror
cmc
out
int
aad
ljmp
cmp
mov
std
in
fdivr
icebp
sub
in
in
sti
int
fdivr
lock
rol
cmc
out
mov
out
lret
xchg
in
cs
les
shr
rcl
sbb
fst
xchg
lock
sti
fmul
jmp
mov
aad
int
sub
fcmovne
cmp
aam
cmp
ss
hlt
shr
loopne
int3
mov
fstl
xor
cmp
cli
out
rcr
loop
xlat
fadd
xor
jmp
mov
out
loope
lock
jmp
int3
enter
shr
fnstsw
xor
xchg
fiadds
icebp
leave
loope
ss
int
cmp
repnz
ss
fucomip
out
out
lock
in
jecxz
loop
not
fcmovnb
ss
imul
cmp
cld
and
idiv
mov
fdivr
mov
test
sub
repnz
ss
ror
xlat
cli
int3
xor
aas
call
test
icebp
test
into
int
icebp
enter
aad
in
in
in
lock
hlt
hlt
adc
out
out
fcmovne
in
xchg
aaa
loopne
in
lock
lock
ds
aas
fcmovb
mov
ret
call
mov
out
in
icebp
out
shll
fmulp
ret
std
std
ret
xlat
hlt
lret
fdivr
mov
out
iret
fildl
in
repz
out
cmp
sar
cmp
fstp
jmp
std
enter
repnz
ret
ss
add
cld
fld
mov
in
and
cli
jecxz
ret
xor
fcmovbe
call
rolb
icebp
jmp
mov
in
mov
xchg
call
sti
jecxz
in
cmp
cmp
repz
xchg
ror
sti
cmc
in
in
in
repnz
ljmp
fadd
dec
rcr
cmp
stc
cmp
test
loopne
mov
test
int
pushl
shr
lret
cli
clc
xor
cmp
mov
test
leave
ljmp
xchg
test
jmp
int3
int
shlb
icebp
aad
cmp
leave
icebp
fucomi
lret
rcl
ror
xor
sar
or
cli
fdivrs
rcr
sti
fadds
clc
xchg
xchg
jmp
iret
xor
shr
hlt
std
cmp
aam
repz
in
fsubr
enter
ljmp
not
ret
enter
loopne
jecxz
fcomi
std
rorb
shr
enter
in
aad
out
ljmp
loope
sar
cmc
mov
repnz
cld
lret
jmp
add
ds
ror
aad
fistl
loop
xchg
cmp
jl
add
loopne
cmc
ds
repnz
cmp
fst
fsub
int
xlat
ret
xlat
ret
out
leave
out
int3
test
repnz
leave
int3
in
fcmovbe
clc
int3
stc
flds
jmp
cmp
mov
sub
into
xlat
out
loopne
fpatan
loope
cmp
hlt
loop
in
sbb
loope
out
hlt
into
xor
fdivs
xlat
ljmp
aam
in
fcmovne
jmp
call
fdivp
lock
in
fdivrs
not
xlat
out
fldpi
fdiv
int
loope
nop
loopne
ficoms
cs
out
cmp
cmp
repz
aad
ret
repnz
ffree
fsub
leave
clc
lea
aas
jmp
std
int3
out
cmc
neg
fstp
filds
jecxz
loop
mov
fsub
jmp
xlat
fdiv
call
cmp
repnz
fucom
test
mov
mov
xor
in
aam
clc
lock
jecxz
cld
xor
loopne
mov
loope
ljmp
call
not
div
clc
cmp
cmc
fdivrl
loope
loopne
aad
mov
fnstsw
std
std
xchg
out
lret
aas
idiv
sarl
aam
in
cld
repnz
faddl
out
rcl
out
lret
ror
repnz
test
in
shl
loop
fmuls
nop
out
ret
fsubrp
int
sti
cmc
call
into
xlat
aaa
ret
rcl
cld
test
int
leave
xchg
mov
hlt
ss
enter
in
repz
fimull
jecxz
jmp
repnz
idivb
fucomi
ljmp
loop
enter
fsubrp
clc
in
out
ss
aad
ror
cld
loope
ret
lret
ret
cld
rorl
mov
mov
loope
int3
xor
icebp
das
aam
repz
ffreep
testl
fcmovu
jmp
loopne
out
lock
rcr
int3
call
cmp
out
jmp
addb
test
xor
call
out
test
shl
in
fsubr
and
out
enter
cmp
clc
fiaddl
cld
rol
cld
enter
fildl
addl
call
sti
cmc
cli
fidivrs
aam
cmp
sar
xlat
xor
out
call
ror
into
mov
cmp
cli
int3
cmc
fadds
jmp
iret
shl
loopne
xlat
loope
leave
ror
fcom
std
sti
jecxz
fidivrs
fst
clc
mov
in
mov
popl
mul
xor
xor
lock
fsubrp
and
in
in
aam
hlt
hlt
mov
icebp
shr
xchg
in
ret
hlt
jmp
aas
cmp
ljmp
loopne
aam
fsubr
orb
das
ss
int
idiv
loopne
repz
cmp
xor
rorl
jecxz
iret
repnz
ret
xor
repz
idivl
cld
cld
cmc
sar
xor
test
movb
loopne
loope
fcmovnu
stc
cmp
lret
icebp
in
aas
in
cli
in
fcomp
fcmovnb
leave
mov
loope
rolb
aaa
sti
cmp
call
xlat
ss
loop
std
or
out
addb
xlat
xor
fstpt
enter
cmc
into
out
iret
test
shl
cli
loope
cli
in
enter
sub
out
int3
out
jmp
mul
cld
fst
loopne
fcomip
cld
in
xchg
flds
in
lret
iret
ss
out
lret
enter
out
aad
in
out
jecxz
jecxz
lret
mov
in
leave
sub
rol
cmc
rcr
aad
xor
repnz
add
fcmovnbe
sti
fsub
jmp
icebp
iret
cld
cs
out
in
xor
ss
cmp
xchg
xlat
jmp
fcmovne
std
iret
orb
jmp
stc
xor
xlat
rcr
aad
cmpl
xor
ljmp
xchg
or
repz
xor
jmp
cld
sarb
repz
ljmp
xchg
push
xor
repz
icebp
cmp
sarb
fdiv
iret
cmc
cmp
orb
nop
fcmove
lret
cs
loop
in
in
fnstsw
cmp
stc
test
cld
test
in
std
call
out
in
xlat
out
cmp
int3
hlt
cmp
fcomi
lock
sti
ret
ljmp
in
xchg
out
mov
loope
xor
ss
int
std
aas
aad
xlat
repz
clc
test
xchg
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
mov
out
jl
add
and
mov
in
divl
into
lret
lret
stc
iret
iret
sar
test
clc
fucomip
int3
mov
out
into
in
aad
in
jmp
and
out
jecxz
out
repz
loopne
xlat
lret
mov
xor
sar
icebp
out
xor
fstpt
ret
cld
orb
jmp
out
loope
in
in
enter
jmp
cmp
out
out
clc
in
jmp
std
mov
incb
loop
shll
in
ss
xor
aam
sar
xor
fldl
fimuls
mov
icebp
in
clc
out
rcr
enter
icebp
icebp
loop
adc
sar
mov
cmp
loope
fnstenv
ss
rcr
fdivr
aad
leave
in
mov
enter
out
sar
hlt
xor
out
cmp
cmp
out
in
xlat
repz
in
cli
clc
cmc
loope
xlat
fmull
out
pop
int3
shl
cmp
or
fldl
idiv
clc
aam
iret
fcmovnu
in
xchg
test
xor
aaa
shl
cmp
aas
fildl
mov
cld
jmp
xor
aad
sub
shl
cmp
into
cmp
lret
hlt
into
in
rcr
in
fiaddl
rol
shl
loope
loope
neg
xlat
std
sarl
lret
xlat
lret
aad
add
mov
xchg
xchg
call
into
fprem
cli
lret
fidivrl
in
int3
hlt
in
loop
cmp
fdivrp
cld
jecxz
loop
call
ljmp
xlat
repz
fcmovb
ret
frndint
icebp
sub
fucomip
imul
loope
icebp
aam
lock
in
cli
out
into
cmp
add
cmp
repz
repnz
repz
not
out
testb
mov
fildl
in
jmp
lret
xor
std
ss
lret
ret
lock
fcmovne
in
lea
loope
sub
jecxz
imul
sti
xlat
loopne
fdivrl
into
std
shl
ret
clc
inc
cld
mov
xchg
int
xor
fcmovnbe
fnstcw
aad
addb
rol
lret
xchg
mov
xchg
cli
cmc
loop
xlat
xor
jecxz
fdiv
cmp
iret
sarb
rcr
ds
clc
hlt
fiadds
fmulp
int3
sbb
xor
lret
loop
rcr
jmp
stc
in
cmp
xchg
out
orb
mov
ror
hlt
shr
sar
fdivrp
ds
xor
test
out
loope
jmp
out
nop
xchg
fldlg2
shlb
out
xor
loope
in
xor
repnz
fisttpll
in
xor
loop
xor
call
fdivrl
ljmp
out
cli
mov
in
xchg
repz
iret
repz
shr
not
cmp
repnz
cmc
mov
test
fcmovu
fmull
repz
div
cmp
cmc
sar
fdivrp
fld
fcmovnbe
mov
les
adc
f2xm1
out
ss
clc
rcl
add
rcr
aad
sti
faddl
in
cmc
xorb
xor
sub
xor
lock
lock
std
loopne
xchg
loop
enter
jmp
xor
iret
cs
in
iret
std
adc
in
sti
leave
leave
test
bnd
shl
xlat
fst
iret
aad
sti
jmp
rcl
repnz
mov
int
icebp
enter
in
lret
rcr
loop
shl
out
out
xchg
cli
mov
mov
icebp
xchg
out
shl
int3
aam
shl
jmp
into
not
ljmp
sti
rcl
fsubr
mov
ret
sub
lret
sti
jmp
ret
cmp
lock
enter
xchg
cld
loopne
rol
clc
xor
jmp
iret
cmp
fcmove
mov
jmp
fmulp
in
lret
out
sbb
in
sub
iret
iret
loop
fucomip
shl
lret
cmp
xlat
cmpb
out
sar
leave
enter
test
decl
in
lret
ret
cli
hlt
int3
adc
cld
repz
ffreep
loopne
out
iret
call
xchg
mul
leave
icebp
cmp
in
div
sar
ret
clc
enter
out
xchg
incl
int3
clc
sarl
cmp
cmp
cmp
ftst
fincstp
inc
fmulp
sbb
shl
xchg
jecxz
xor
stc
jmp
jmp
stc
neg
clc
xor
out
xlat
out
ret
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
push
xchg
adc
jle
pop
add
call
mov
out
shl
in
aas
cmp
std
stc
hlt
clc
stc
lret
stc
fimull
icebp
test
ret
fidivrl
aad
cmp
cmp
test
cld
in
sbb
nop
repnz
out
in
xlat
in
in
sar
stc
lret
lock
in
lock
in
mov
mov
mov
mov
int
shll
test
cmc
in
cmc
testb
stc
ror
mov
aam
aam
xor
repz
icebp
cmc
cmp
fldl
ret
jecxz
mov
mov
xchg
aaa
xor
fsub
in
int3
lret
rolb
jmp
addb
call
rcl
cmp
or
into
in
incb
int
lock
sbb
fucomi
lds
jmp
stc
ds
test
aas
mov
aam
dec
in
std
mov
loopne
loope
aaa
out
ret
lret
lret
in
cli
cmp
cmp
out
rcl
sar
stc
jmp
in
decl
lret
fcomp
clc
ss
cmp
cld
rol
fdivrp
or
jmp
mov
sti
out
xor
icebp
das
in
xor
cmc
leave
ss
ror
jecxz
out
test
rol
std
jecxz
fdivrp
in
xchg
ror
mov
xor
xor
cmp
out
addl
test
orl
out
xor
xlat
fcmovne
cmp
addl
sti
out
out
xchg
ljmp
out
fld1
sarb
xlat
ljmp
cld
aam
hlt
test
ret
loop
mov
div
ss
cmp
into
xlat
cld
filds
leave
or
fsubrp
lret
call
xlat
aam
cmp
aad
adc
fcmovnbe
out
lret
fmul
sti
sbb
jmp
leave
cmp
cmp
int3
aam
cmp
loopne
xchg
fdiv
mov
int
iret
ljmp
jmp
loope
stc
repz
std
sti
test
cld
mov
xchg
jecxz
ss
int
stc
ljmp
stc
in
loope
mov
ret
lock
not
xor
ds
test
fcmovnb
fcmovu
cli
lock
xchg
out
imul
cmp
aam
cld
cli
lock
lock
std
shl
ret
xchg
incl
out
mul
jmp
icebp
cmp
int3
lock
rcr
stc
fcmovnu
into
cli
enter
sub
sub
shll
out
imul
rcr
fcomp
shl
fcmovnb
enter
jmp
mov
mov
xchg
in
not
xor
fidivl
not
icebp
ljmp
aas
repz
in
loopne
out
xchg
iret
jecxz
ret
lock
in
stc
sti
ror
loop
loope
fldl
adc
cmp
out
jecxz
out
fstpt
sti
aad
out
std
repnz
lock
lds
incl
rol
loope
bnd
jmp
stc
cli
mov
addb
lret
mov
not
cmp
fucomi
aad
adc
ret
idivl
shl
fildl
enter
das
fmul
cli
aaa
in
fidivrl
fstp
shl
sti
fadd
rolb
cld
test
mov
iret
vpsubb
out
out
clc
lret
cmp
out
sti
fstp
lret
testb
lret
icebp
ljmp
cld
cmp
stc
cmp
fldl
sti
mov
ljmp
jmp
out
fsubr
loopne
fcmovnu
into
xchg
ror
loope
out
loope
xchg
fst
aad
loopne,pt
xor
lock
idivl
jecxz
xchg
cmp
mov
dec
icebp
mov
out
xchg
jmp
cmp
out
out
xor
aad
loopne
ret
fsub
mov
mov
out
mov
cmp
aad
jmp
mov
sbb
mov
lret
jmp
jmp
xor
cs
into
shr
cmp
test
sti
jmp
dec
call
jmp
icebp
in
ret
aad
clc
mov
in
lret
fdivrp
leave
ljmp
out
hlt
loope
hlt
ffree
fiaddl
xchg
cmp
in
std
call
int3
fidivl
int3
cmc
aam
cmp
out
mov
movl
subl
jmp
lret
ffree
fst
in
notl
cmpsb
push
movsl
lret
jle
pop
add
stc
incl
and
enter
loop
in
out
cmp
adc
and
into
loopne
mov
leave
call
lock
xchg
repnz
int
stc
fxch
lret
lock
in
loop
rcr
mov
hlt
int
in
call
in
out
enter
cmp
out
aas
icebp
sar
cmp
jecxz
out
loopne
clc
ljmp
sar
iret
in
fdivrp
int
in
aam
faddl
inc
in
fmul
call
mov
sar
sti
xor
into
aad
cld
std
ds
cmp
xchg
ret
aad
aas
and
xchg
out
mov
cmp
out
std
out
cmp
lock
lock
iret
fsub
mov
stc
test
test
clc
fldl
xlat
out
in
clc
out
out
sarb
ror
bnd
mul
fadds
std
out
loopne
mov
call
ljmp
icebp
xlat
cmp
lock
cli
cmp
fcmovne
ljmp
repz
shr
call
out
sar
icebp
sti
mul
cmpl
decl
xor
fcom
shr
not
fcmovbe
into
in
aam
ffreep
fninit
orl
sub
sti
cli
jmp
ss
into
loopne
in
fprem
repz
int3
loopne
loope
fsubp
iret
xchg
sub
ljmp
iret
loop
cmp
mul
out
out
jecxz
cli
iret
aad
repz
iret
icebp
rcr
leave
cmp
out
fcomip
xchg
rolb
notb
mov
shl
shr
jmp
out
std
clc
hlt
ss
imul
jecxz
fsubrp
cld
jecxz
cmc
out
xor
clc
shl
in
iret
and
std
sarl
addb
rcr
leave
faddp
xor
jmp
cs
out
loope
test
in
add
enter
fucomi
mov
icebp
out
fnsave
xor
stc
icebp
shl
in
xchg
test
cli
idiv
xchg
jmp
vpavgb
out
std
cmp
loopne,pt
aam
into
ret
cli
ljmp
adcl
lock
test
lret
stc
sub
aam
call
lret
xchg
in
enter
cli
repz
fdivp
lock
enter
fcmovnu
mov
rcl
cmc
shl
rcl
int3
fdiv
stc
fadd
sti
loopne
aas
cmp
aam
mov
fmul
sti
stc
call
ror
in
lock
fcomip
lret
in
sar
ret
in
mov
out
mov
loope
into
out
ljmp
div
ret
ret
in
aam
addl
loope
loope
cs
leave
ror
call
sti
fdiv
idivb
ds
xchg
jmp
in
loopne
cmp
icebp
fucomi
aam
fnstsw
cmp
repnz
faddl
movl
out
aaa
fcmovne
fcmovnu
call
fxam
xor
stc
movb
rol
imul
jmp
cld
cld
shl
test
inc
sti
mov
fsubr
jmp
lret
repz
stc
in
repnz
enter
in
idiv
ret
vcmppd
repz
jmp
shr
jecxz
aaa
jmp
xlat
call
icebp
icebp
out
sti
hlt
stc
mov
shl
test
sti
icebp
jmp
loop
cs
fcmovu
enter
int
aam
addb
call
test
shl
div
mul
icebp
std
rcl
cmc
int3
faddp
hlt
icebp
addl
mov
ljmp
cld
and
loop
sti
hlt
sti
sar
in
sub
ror
out
mov
cmp
xor
leave
cmp
shl
repz
fcmovbe
in
sub
icebp
fucom
mov
lock
fsincos
lret
repnz
loope
cmp
aam
fdivrp
test
iret
or
in
call
out
rcr
hlt
out
fdivr
sar
cld
fcom
in
fcmovb
vpsubd
xchg
lret
xor
cmc
int3
cmp
cmp
clc
aam
cli
sti
fcmovnbe
rolb
fimuls
xorl
aaa
into
in
int
ljmp
fidivrs
cmp
stc
int3
jmp
rolb
lret
in
hlt
fld1
int3
sar
sti
cmp
stc
roll
ljmp
xchg
sub
aaa
sarl
in
sarb
cli
cmc
cmp
xchg
fld
inc
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
aas
sub
jle
pop
add
ret
mov
movl
sar
ret
fadd
idiv
std
rcl
fistpll
out
rcl
fucom
enter
xchg
in
rorb
into
lock
aas
fsubr
test
in
ret
cli
leave
fucom
leave
fdivrp
iret
inc
xor
in
out
fcom
repnz
cmp
sarb
shl
orb
mov
out
out
xor
idiv
xor
out
rcr
sarl
fsub
cli
testb
loope
cmc
loopne
xlat
lock
cmc
fstpt
sti
call
fsub
jecxz
in
and
int3
fsubr
mov
ljmp
rolb
test
ret
roll
xchg
jmp
repnz
aad
into
xor
flds
xlat
leave
leave
in
fmuls
mov
xchg
lret
ljmp
shl
int
call
fsub
clc
rolb
mov
xchg
sub
std
cmp
cmp
cmp
fchs
sar
orl
jmp
out
nop
lock
out
in
xor
leave
into
iret
cmp
out
call
xlat
jecxz
ds
cld
shl
icebp
test
rorb
in
rcl
lret
out
cli
sti
clc
sar
fsubr
stc
rcr
test
fsub
cmp
out
xor
aam
cs
enter
loope
cmp
repz
neg
ljmp
ljmp
hlt
sti
rcr
loopne
hlt
in
into
xchg
mul
aam
ror
sti
shl
loop
shr
ljmp
into
cmp
sar
iret
ret
fcmovbe
testb
cmp
icebp
rcl
mul
fcmovnu
rcr
aad
cmp
hlt
cld
enter
int
jmp
aaa
repnz
ret
cmp
cli
aas
cld
clc
test
in
icebp
lock
xchg
loope
ret
out
ss
cmp
repnz
ret
in
aad
jmp
call
hlt
shl
cs
cli
shlb
int
cld
lock
cli
div
fcmovbe
shr
mov
les
ljmp
hlt
fdivrp
xor
icebp
rcl
mov
xlat
loop
int3
call
mov
lret
stc
lock
out
cmp
icebp
ror
sti
fdivrp
icebp
fsub
icebp
loope
fists
jmp
lret
aaa
cli
enter
iret
add
xchg
jmp
int
ljmp
cmc
fbstp
faddp
repnz
ljmp
jmp
shl
les
enter
call
into
ret
shl
loope
aad
xchg
std
ljmp
repnz
xor
cmp
enter
shr
rcl
test
test
in
inc
leave
enter
loop
mov
loope
xor
repz
call
aas
loop
fucom
mov
jmp
xchg
cmc
fucom
ror
fxch
xor
sti
into
cld
idivb
icebp
sti
fdiv
roll
fucom
fcoml
icebp
div
jecxz
xor
imul
std
lret
into
out
cmp
idivb
repnz
jmp
ljmp
jmp
cmc
int3
cmp
xor
enter
cmp
int3
into
rcl
sti
test
aas
xabort
ret
rol
xor
cmp
aad
fstp
aas
cli
in
cmc
out
out
incl
out
fimuls
ds
test
loope
cmp
inc
sti
rcr
cmc
sti
sub
mov
loopne
int3
out
ljmp
cmc
aas
fsubrp
repnz
rcr
hlt
push
stc
hlt
mov
mov
loopne
inc
out
cs
int3
ss
icebp
shl
aas
stc
loope
test
fdivrp
fcomip
fiadds
cld
mov
loopne
hlt
in
cld
aas
clc
in
cli
into
std
cld
std
shl
fucomp
test
add
in
xchg
rol
shl
aad
out
jmp
out
rol
fcomi
std
stc
jmp
out
loop
loope
sub
jecxz
shl
int
int3
ss
xchg
adc
orl
int3
xor
in
hlt
lret
iret
cmpb
in
cmc
sti
cld
clc
ret
jmp
aaa
int
ljmp
or
aam
ds
fisttpll
fists
int
out
enter
ror
cmp
hlt
in
call
lret
xchg
int3
std
xchg
xor
jecxz
int3
ljmp
clc
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
jmp
jl
add
cmp
in
cmp
fnstsw
xchg
repnz
int
sti
xor
in
lret
cmp
cmp
ret
loopne
loopne
loopne
jecxz
xlat
loopne
jmp
test
repz
sub
hlt
aaa
loope
cmp
test
mov
in
fucom
rorl
jmp
iret
out
enter
clc
and
xchg
xchg
out
int
xchg
lret
lock
imul
shr
ljmp
repz
cld
clc
orl
int
cmc
idiv
fcom
rcr
aas
repz
aad
clc
mov
jecxz
icebp
xchg
stc
sarl
cmp
enter
jmp
in
xlat
filds
and
jmp
xchg
xchg
call
jmp
add
std
test
std
enter
cmp
lock
in
stc
cli
clc
xor
sti
ds
aad
loopne
std
in
leave
ljmp
add
aaa
out
cmp
neg
sti
cmp
out
ret
lds
int3
fcmovne
lock
enter
lret
stc
in
into
fistpll
out
loop
repz
xchg
out
loop
ror
nop
out
sub
cs
imul
clc
cli
aad
cmp
aad
rolb
mov
in
repz
fstl
xor
rcl
aam
in
cli
out
loop
in
std
out
loope
mov
out
mov
into
loop
jmp
lret
shr
loopne
out
stc
cmp
idiv
fdiv
in
in
fst
hlt
and
mov
lret
div
repz
cld
jmp
lret
loopne
aam
rcl
loopne
cli
rorb
mov
lret
xchg
neg
ss
xlat
enter
addb
lret
mov
sar
shl
not
in
in
lock
fucomi
ret
jmp
lret
fcmovnb
out
lret
in
iret
jmp
fxch
fnstsw
fdiv
cmc
in
std
jmp
clc
out
fiaddl
iret
call
cmc
sarl
in
out
hlt
ret
icebp
aas
rolb
mov
mov
ds
sub
lret
aas
cmp
test
out
test
out
sti
fsub
iret
jecxz
fiadds
fcmovne
int3
repz
jmp
ljmp
ds
jecxz
mov
fcomi
mov
mov
fldz
iret
fcmovnu
idivb
repnz
jmp
xchg
int
loop
xchg
out
out
in
icebp
lock
jecxz
in
ret
xchg
not
faddl
and
loopne
jecxz
in
jecxz
iret
out
testl
call
in
roll
ror
loope
shr
sti
icebp
shr
fprem1
xor
mov
aam
jmp
in
addl
xor
in
int3
rcr
cmp
repz
aas
loopne
aam
imul
les
aad
test
aam
div
hlt
enter
test
test
les
xchg
loope
int3
jecxz
out
das
int3
call
rolb
in
sub
int
jmp
fsubrp
shlb
out
clc
aam
shr
ljmp
test
cli
filds
leave
call
hlt
sub
rol
in
xlat
ss
shl
rcl
test
in
addb
enter
enter
out
icebp
stc
jmp
into
ror
rcr
test
lret
ret
fimuls
xchg
icebp
in
idivb
cld
cli
stc
fadds
and
fcomp
mov
jmp
rol
call
push
sbb
fucom
fsub
and
in
faddl
repz
int3
out
jmp
std
aas
idiv
fnstsw
sti
fcmovnu
jmp
std
in
fsts
jmp
lock
leave
lret
cmp
std
cmp
xor
mov
lea
xchg
cld
xchg
enter
aaa
ss
aam
rolb
out
lret
fldl
lret
lret
aaa
hlt
stc
not
fnstsw
mul
aas
cmc
aam
cli
loope
loope
lock
in
loope
int
fdivs
xor
lret
out
ret
loop
shl
mov
repz
clc
fcom
jmp
icebp
xlat
stc
neg
cld
out
out
icebp
mov
in
xchg
xchg
in
call
std
iret
call
jmp
aas
ror
aas
aad
iret
rol
adcb
jae
cmpsl
mov
jle
pop
add
not
out
ret
test
cld
test
sub
lret
fdivs
xor
in
lock
fdiv
out
out
call
in
out
aad
xor
enter
ljmp
clc
out
testb
enter
int3
in
stc
lret
icebp
int3
sti
dec
int
repnz
iret
cli
lock
cmp
lret
out
int
repz
out
out
ss
aaa
aas
cmp
shl
int3
test
leave
xchg
xor
repnz
jmp
int3
clc
iret
aam
xchg
leave
icebp
loop
ffreep
in
fnstenv
out
cmp
xor
incb
loope
bnd
nop
lret
aad
sub
rcr
fadd
call
stc
flds
ret
cmp
mov
xchg
sub
shll
jmp
in
icebp
aam
repnz
cmp
aad
jecxz
mov
call
repz
aam
lock
cmp
xlat
xlat
loop
xchg
sti
cli
addb
out
in
in
int
in
std
cld
ljmp
sti
testl
mov
xchg
loope
into
ss
shl
xor
xlat
sar
cld
cld
xchg
fdivr
cld
xor
rorb
ret
cmp
cli
fiadds
imul
int
fucomi
fisttps
in
in
loop
jmp
fcmovu
repz
jecxz
fmuls
enter
ljmp
xor
cmp
int3
out
jecxz
ret
cmp
call
into
dec
decl
fldz
aaa
into
stc
shr
dec
repz
test
in
lret
int3
into
xchg
aam
fdivs
aam
iret
sar
cli
cmp
cld
lret
mov
inc
lea
enter
out
hlt
out
int
hlt
cmc
jmp
loope
loope
shl
xchg
stc
fisttpll
mov
in
sti
das
rcr
rcr
in
into
addb
cli
mov
addl
loope
out
hlt
jmp
jmp
xor
cld
fdivr
aam
out
repnz
mov
out
iret
jmp
mov
jmp
xor
in
clc
ret
into
repz
in
aad
loopne
cld
in
xchg
out
nop
jmp
xor
cmp
ljmp
cmp
loop
aad
aam
cmc
leave
fcom
inc
out
shl
lret
into
aad
out
cmp
aad
div
fdivrl
jmp
dec
orb
sub
ret
xor
cmp
loop
shl
ljmp
jmp
lret
loopne
sub
aad
cmp
bnd
cmp
stc
test
lret
xchg
out
mov
lock
test
into
clc
call
hlt
loopne
test
fcoml
xchg
out
repnz
cmp
aad
cmp
loope
cmp
sti
lret
int
iret
repz
hlt
lock
loop
aam
cmp
out
call
cmp
aam
fsubr
stc
std
into
in
addb
in
rol
sbb
repnz
loop
cmc
leave
loopne
filds
out
int3
mov
cmp
hlt
loopne
cmp
testb
out
jmp
out
ljmp
fxch
cmc
cmp
ds
lock
loop
xchg
mov
hlt
out
repz
idivl
rol
in
and
cmp
int3
sub
rorl
in
cli
das
out
cmc
cld
xor
fucomi
ret
mov
test
enter
ror
int3
jmp
not
cs
aad
fcomip
fnstcw
icebp
rolb
ret
out
test
sbb
cs
into
int3
ljmp
in
fldl
inc
addb
lock
rol
loop
xor
fdivr
lret
dec
loopne,pt
aam
clc
fxch
loopne
in
out
std
loopne
lret
ror
shlb
in
loopne
aaa
xlat
in
std
aam
jmp
into
orb
rcr
ss
ss
sar
cli
in
icebp
cmc
xchg
hlt
fsubp
in
xchg
mov
shl
loopne
loope
iret
fld
aad
div
cmp
in
int3
in
rcr
out
mov
cld
jmp
in
shl
shlb
cmp
xor
fstpt
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
clc
aas
dec
adc
cmpb
add
test
rcl
fld
lock
mov
int3
fcmovne
ret
iret
mov
xor
sti
out
shr
xlat
roll
loope
test
fiadds
in
cld
mov
in
cld
aas
xor
rcl
cmp
fdivr
into
shl
repz
jmp
idiv
fisttpll
shl
xor
in
out
repnz
jmp
fld
fmul
shl
call
out
orb
in
ret
in
cmc
ss
lock
out
aad
ret
repz
fabs
testl
xlat
vpmaxsw
rcr
enter
iret
fcomip
and
ret
jmp
out
xchg
mov
shl
leave
rcr
test
int3
ffree
jecxz
out
testl
aaa
sub
imul
cmp
test
cld
cmp
fdiv
stc
xlat
in
jecxz
mov
cmc
rol
xor
in
sub
hlt
out
ret
cmp
loopne
out
idiv
in
mov
out
xor
shl
les
idiv
cld
iret
aam
loope
ds
fst
clc
repnz
fcmove
lret
mov
lret
iret
ror
iret
aaa
cmc
shlb
fucomp
fidivrs
rcr
loope
flds
in
movb
out
imul
cs
stc
stc
clc
iret
aaa
rcr
aad
call
out
in
loop
int3
mov
cmc
hlt
xlat
out
cli
int3
in
iret
sarl
loop
jecxz
rcr
xchg
mov
fldl
jmp
iret
rcr
jmp
sarb
cmc
jmp
ret
mov
int3
cld
xchg
loope
xlat
shl
int
in
rcr
sar
shl
cmpb
ret
test
and
test
sar
repnz
loop
ror
xor
fdivrl
iret
sar
div
aam
lds
mov
incl
jmp
fmul
cmp
cmp
aad
out
test
cmp
roll
xor
out
iret
hlt
xlat
xor
aaa
faddl
repz
cli
sbb
xchg
xchg
aad
leave
lock
int
cmp
xlat
in
lock
loop
rolb
int
mov
test
iret
sub
xor
test
ljmp
sub
jmp
incl
and
cmp
cmp
out
neg
int
call
in
out
sti
jmp
test
cmc
ret
xor
cmp
shl
cli
addb
stc
cmc
out
jmp
fldl
jmp
repz
leave
xor
rol
ret
test
call
shl
shr
cmp
int3
aad
in
repz
roll
mov
cmpb
stc
out
cld
xchg
test
aad
loopne
rcl
lock
std
xor
test
cli
cmp
ljmp
in
cmp
in
int3
std
neg
mov
ljmp
rolb
out
out
repnz
ss
icebp
cmp
faddp
out
fsubp
enter
clc
int3
lock
in
lea
shl
enter
out
iret
xor
cmp
jmp
in
jecxz
rcr
int3
in
into
mov
not
fdivrl
shr
shr
out
fcmovnbe
fldl
jmp
jmp
out
sub
jmp
aam
cmp
mov
shr
ds
jmp
leave
into
repz
cs
xor
xor
jecxz
shl
out
repnz
jecxz
rolb
lock
fstp
out
int3
shl
incl
fldln2
xchg
das
call
repz
aad
jecxz
rolb
aad
filds
in
cld
cmc
hlt
ret
hlt
jmp
cmp
in
hlt
adc
rolb
mov
mov
xlat
aaa
les
in
in
cmp
rcl
xlat
enter
ljmp
xchg
cmp
sarb
out
out
cmp
cmc
repnz
xchg
rol
fcmovne
fildl
xchg
mov
leave
lock
aam
in
fildl
sbb
mov
not
in
iret
out
iret
xor
test
std
fdivr
jmp
cmp
aas
rcl
aad
hlt
orl
ret
int3
loop
sub
call
fiaddl
loope
in
cmc
idiv
jecxz
leave
xchg
lret
jecxz
xchg
cs
shr
xrelease
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
add
cmp
ret
jl
add
jmp
clc
mul
cmc
aad
cli
lock
test
test
imul
mov
incl
int3
xor
aas
sti
fabs
shl
repz
rol
lock
fucom
aad
jmp
int3
lret
out
jmp
test
test
ds
stc
fdivr
in
repz
aam
loop
icebp
cmp
cld
out
repz
idiv
shl
in
aam
stc
stc
in
fdivp
rcll
mov
out
fcmovne
std
call
fldl
repz
enter
rcr
ljmp
fdivr
cmp
in
cmp
hlt
jmp
mov
jmp
nop
sub
ret
int
leave
stc
shl
rcl
xlat
fdivp
mov
test
std
iret
mov
out
loop
sti
cld
dec
ret
out
vpaddusw
bnd
push
movl
rcl
shr
out
call
fdivr
cmp
fidivl
test
fsubrp
jecxz
in
call
aaa
divl
shl
out
leave
into
lret
loopne
cld
stc
cld
hlt
addl
out
iret
repz
rcl
sarb
int3
cli
shl
jecxz
jmp
out
jmp
into
fucomip
add
enter
xlat
jmp
fld
xlat
test
mov
shl
cmp
mov
jmp
adcl
out
fdiv
enter
fdivrp
fcmovnb
testl
in
ljmp
icebp
sub
sti
fucomip
aad
lret
ret
out
addl
adcb
aam
xlat
les
out
idivb
out
lock
and
loope
lock
call
ds
rol
cmp
int
loop
shl
out
fst
jmp
notb
xor
repz
jmp
stc
aad
rcr
fcomip
cmp
mov
frstpm(287
les
lock
ds
test
sar
cmp
fcompp
lock
loop
lret
sti
ret
out
call
shl
fcmovne
xor
loopne
hlt
into
ret
out
fsin
aad
flds
jecxz
mov
shl
icebp
clc
in
shr
cmc
fdivr
iret
ret
cmp
repz
enter
jecxz
in
call
shl
sarl
cmp
hlt
cmp
hlt
out
icebp
std
jmp
mul
fnstsw
int3
into
mov
mov
rcr
fsubrp
xlat
sub
fldl
mov
std
in
int3
orl
jmp
int
sar
aaa
into
stc
fcmovbe
out
loope
mov
fsub
lret
jmp
xor
hlt
xor
call
sar
xlat
cli
jecxz
mov
in
addl
fdivp
rol
lret
jmp
loope
roll
aad
in
out
out
xchg
iret
mul
shlb
cli
stc
icebp
fucomi
xor
ds
xchg
jmp
cmc
lret
mov
repz
out
cmc
aas
xor
cmc
aaa
cmp
div
int
idiv
aad
xlat
idiv
aam
in
std
xchg
ret
loope
lret
cmp
sar
cli
bnd
in
icebp
cmp
xchg
leave
aam
call
lret
jecxz
call
clc
ljmp
cmp
xchg
jecxz
lds
repnz
in
jecxz
repnz
test
les
out
cli
fiadds
roll
in
cli
neg
sar
ret
into
testb
call
int3
mul
int3
lock
iret
test
cld
in
ret
cld
fcmovne
jmp
stc
loopne
addb
enter
enter
clc
rcl
out
in
shl
in
ret
xchg
and
in
fdivp
xlat
repz
stc
int
sti
ffreep
cmp
testl
sti
incl
cmc
ret
enter
cmp
ljmp
loope
loope
out
jmp
mov
lock
xor
repnz
aad
cmp
aam
cmc
sbb
ret
out
loope
in
decl
xlat
repz
fld1
sarl
ss
ljmp
in
int3
or
orl
lock
sarb
fdivrl
loope
shl
hlt
ror
test
fld
les
std
out
in
lock
fdiv
fucomip
cmp
xlat
ret
ds
test
decb
repz
ljmp
test
inc
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
lret
stc
mov
pop
add
shl
aaa
cmp
in
cmp
icebp
cli
in
in
fucom
call
out
jecxz
lock
mov
cld
int3
or
iret
rcl
into
or
test
loope
xchg
xor
cs
call
into
cmp
cmc
ljmp
sub
idivl
jmp
cmc
ffreep
jmp
inc
shl
out
loop
stc
leave
in
mov
rolb
aam
in
sarb
xor
cli
flds
mov
in
mov
iret
ljmp
loope
std
out
call
sti
std
lret
clc
fadds
loopne
rol
ret
rcr
fdivr
sti
fdivr
rolb
loop
cmc
enter
ljmp
shlb
ret
iret
fstpt
ss
cli
cld
cmp
xchg
xchg
ret
mov
loop
std
in
xor
jecxz
stc
enter
cmp
xlat
rcr
sbb
fdiv
out
stc
testb
loopne
aad
out
out
ljmp
jmp
int
ret
mov
fists
int3
cmc
lock
iret
aad
and
into
hlt
cli
rorl
cmp
jmp
aam
sar
lret
jmp
repnz
rcr
ret
ljmp
mov
xchg
out
cmp
loop
cmp
jmp
out
lret
vpmuludq
in
ret
ffreep
xor
fcoml
repnz
int3
out
call
fcomp
into
ret
test
test
mov
bnd
hlt
xor
enter
iret
rcr
jecxz
cld
repz
idiv
xchg
stc
cld
loope
jmp
lock
frstpm(287
cmc
not
aam
int
icebp
cmp
jecxz
cld
mov
idiv
ljmp
cs
bnd
rcl
shll
loopne
icebp
leave
addb
test
ror
repz
idiv
cmp
shr
incb
rcl
aas
and
out
mov
in
fdivl
loop
repnz
cmp
cmp
div
fstp
in
clc
idiv
test
fmul
into
mov
shl
in
cmp
loopne,pt
fstpt
loop
cmp
call
xchg
fists
loopne
xor
cmc
aam
loope
cmc
hlt
cli
jecxz
idiv
addl
mov
out
mov
in
repz
xor
cmp
rcr
aad
loopne
ret
iret
aam
mov
ret
flds
mov
ror
call
ss
fst
xlat
xlat
cmp
test
out
icebp
or
mov
imul
test
cmp
loope
fdivr
jecxz
stc
call
ljmp
jmp
aad
lock
cli
lret
std
ds
call
ljmp
jecxz
int
jmp
ss
cli
fcmovbe
fcomip
cli
cmp
ret
cmc
rcr
mov
ljmp
icebp
shl
stc
aaa
lret
lock
icebp
clc
iret
loopne
faddl
cmc
clc
in
lret
repz
jecxz
xor
out
xor
cmp
leave
fxch
repnz
test
test
std
sar
in
rcl
in
cli
in
xor
xor
not
iret
fdiv
jmp
out
in
in
out
out
lock
cmc
out
int3
stc
ss
lret
idiv
cmp
sar
fst
fiaddl
lock
shll
repnz
in
lret
out
cmp
faddl
loope
idiv
int
call
ljmp
loope
rcl
xlat
cld
hlt
cmp
ffree
cmp
call
in
loope
mov
in
out
sar
cmp
cmp
aas
iret
shr
aas
rcl
out
repnz
cmc
mov
rolb
sar
fnstenv
lret
cmp
sar
cmp
lds
leave
sub
out
fdivp
xor
shl
fxch
cmp
cld
aas
repz
cli
cmc
cmp
cmp
out
decb
xchg
xchg
aad
test
xor
int
idiv
cli
loope
repz
aad
call
sbb
ljmp
leave
cmp
lock
int3
xlat
test
test
mov
fimull
test
sub
lock
in
fmul
repnz
int
xchg
out
test
in
jmp
xchg
hlt
leave
repz
out
cmp
out
out
ret
test
hlt
in
mov
jmp
mov
loop
push
or
cmp
jmp
aad
fstl
dec
outsb
sarb
jl
add
enter
stc
rol
sarb
fiaddl
faddl
or
decb
xor
leave
inc
cmp
test
jmp
loope
mov
xlat
loope
int
cli
fld
mov
lret
rol
vpsllw
out
not
jecxz
out
repz
cmc
jecxz
orb
test
xchg
cmc
lock
cmp
rcl
inc
loopne
adc
xlat
in
mul
loopne
std
test
cmc
ret
dec
in
lret
rol
jecxz
sar
leave
vpcomuw
call
hlt
aam
out
xor
aas
ds
add
test
in
mov
std
lea
ljmp
in
in
rcl
ds
incb
ds
ret
fmul
sub
fdivr
xchg
shl
xor
xor
out
sub
int
sar
rcr
test
rcr
shl
cmp
decl
out
ss
std
leave
cmp
lret
incb
hlt
ljmp
fstl
aad
xor
cmp
shl
shl
xchg
inc
cli
cmc
out
leave
xchg
ljmp
lds
cli
out
cmp
cld
call
cmp
lock
sti
leave
sti
in
dec
lret
repnz
out
jmp
jecxz
fnstsw
cmp
sti
fcompp
fcmovnu
ret
jmp
loop
xor
xor
in
fcomp
fcmovnbe
sar
aas
ret
xchg
in
sti
nop
loope
into
out
out
lock
sti
out
ss
ror
jmp
cli
xchg
fdivrp
xchg
fucomi
orb
cmp
cmp
neg
cmp
jmp
jmp
call
cmc
repz
lock
iret
sti
std
xor
out
hlt
fnstcw
icebp
adc
stc
out
loope
in
out
call
fdivp
xor
hlt
sar
repnz
in
stc
cmp
aaa
in
aam
xor
sti
dec
mov
repnz
jmp
ss
in
or
xorb
cmp
enter
lret
jecxz
jmp
mov
xor
fdivs
cmp
in
fiaddl
fmulp
clc
jmp
fmull
in
aam
int3
leave
xor
not
test
in
out
stc
jmp
shll
cs
enter
jmp
rcl
test
hlt
ret
fucom
xbegin
addb
rol
jmp
lret
fcmovnbe
in
in
rcl
sbb
xor
xchg
cmc
das
ss
sub
aas
cmp
hlt
aam
fucompp
mov
or
mov
aam
jecxz
in
ret
lret
aad
cli
fcmove
clc
shl
sarl
rcl
mov
out
jmp
repz
ror
jmp
stc
div
xor
fcmovu
repnz
cmp
xchg
xchg
loopne
dec
filds
out
lock
stc
leave
ds
test
aad
faddp
sar
cld
fsub
mov
lock
in
aad
cmp
cmp
fcmovnu
in
and
sar
roll
test
fcoml
ss
int
hlt
int
ds
lock
in
stc
sar
in
fimuls
and
ret
xor
lock
cmp
cmp
ds
test
call
xchg
lea
shr
xor
xor
call
enter
aam
roll
clc
std
nop
addl
in
lret
xor
stc
loope
loope
movb
into
mov
xchg
call
out
shl
rcl
shl
xchg
fucomip
fadd
xchg
into
std
mov
enter
ss
cmp
xor
ss
cmc
inc
xchg
flds
into
sbb
hlt
xchg
leave
out
out
cmp
shr
aas
in
ds
sarl
test
aam
sub
in
jmp
jmp
aad
out
lock
sar
clc
or
ret
loope
pop
call
cmp
cld
imul
cmp
out
les
fsub
out
mov
in
in
iret
test
aam
stc
stc
out
xlat
jmp
repnz
jmp
mul
ds
leave
cld
enter
mov
test
cs
cmp
fcmove
rol
repnz
not
sar
idiv
mov
call
xchg
loop
hlt
fidivs
cmp
clc
xor
fcmovne
cmc
cmp
repnz
faddp
aad
xlat
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
sbb
pop
xchg
jle
pop
add
jmp
loop
stc
aam
cmp
aam
cli
sti
cmp
mov
bnd
lret
out
std
xchg
jmp
aaa
ror
in
in
iret
clc
aaa
aad
in
ds
shll
stc
shl
xchg
jecxz
in
fiaddl
xlat
out
cs
cmp
rcr
repnz
cld
cmp
testb
jmp
in
nop
test
lret
lret
enter
fcmovbe
repz
mov
addb
xchg
jecxz
sar
in
loop
rcr
aad
repnz
sar
sar
aas
mov
leave
out
in
into
iret
vucomiss
clc
cli
fmulp
icebp
out
jecxz
testb
xchg
lret
leave
xchg
shl
in
into
neg
fdivr
sti
aad
repz
cmc
cli
stc
in
lea
rol
lret
loop
cmp
out
stc
fnstsw
jecxz
iret
out
sti
ror
in
out
clc
addl
xlat
xor
ret
cmp
cmp
sarl
ffree
iret
mov
aam
xchg
cld
test
loopne
test
out
aaa
ljmp
mov
xchg
lret
sti
dec
cld
out
add
shll
ret
fmul
adc
cmp
add
jmp
sti
xchg
into
mov
aam
in
ret
jmp
sarb
loope
sarb
incb
out
ret
int
in
fdecstp
cmp
xor
cli
sar
shl
ret
stc
loope
aad
jmp
ljmp
xor
fcom
int3
ret
hlt
call
rcr
shl
test
sub
sti
in
int
aad
in
in
sti
cli
ljmp
test
xlat
test
movb
shr
out
sub
in
jmp
fadd
cmp
shl
idiv
mov
ffree
mov
sti
xchg
out
repnz
int3
aam
icebp
repz
ss
std
cld
loop
fdivr
ret
out
mov
into
icebp
aad
sarb
xor
fdivrs
jecxz
fyl2x
cmp
call
int
xor
icebp
xor
int
sar
out
aam
xlat
fildl
xchg
jmp
loopne
std
mov
loop
out
leave
lret
enter
xor
icebp
cmc
std
in
mov
ljmp
repz
in
cmp
hlt
in
into
lock
rcr
jmp
mov
and
out
sti
ss
int
cld
repnz
shl
jecxz
dec
jecxz
sbb
test
int
xor
idiv
rcr
fchs
jecxz
in
xchg
leave
mov
fucomp
out
in
mov
out
jmp
repz
sar
ss
faddp
int3
test
call
incb
in
xor
lret
rcl
cmp
fdivrp
aam
int
cli
aas
repz
stc
fcom
shr
sub
out
fld1
lret
icebp
ljmp
and
call
fld1
std
xchg
aad
xor
icebp
loopne
cmp
pushl
cmp
ror
cmp
inc
add
lret
rcr
nop
out
xchg
lds
out
aaa
xlat
xor
cmp
cmp
aas
cmp
jmp
lds
std
jecxz
loop
lret
cmc
sti
xor
cmp
icebp
repz
test
call
out
fucomip
cld
test
jmp
aam
test
div
cmp
ffree
adc
int3
into
std
lret
fmul
lret
aad
leave
repnz
xlat
ror
fdiv
rolb
clc
cmp
mov
icebp
xchg
out
sar
lock
xor
call
xlat
cmc
roll
in
iret
fcomip
out
jecxz
int
ret
fmul
enter
int
test
aad
std
sti
aam
loop
loopne
out
in
xorl
out
loop
in
jmp
into
clc
cmp
cli
cmc
ret
addl
jecxz
xor
std
stc
cmp
cmpb
rcr
xchg
ret
stc
mul
xor
xchg
sub
fpatan
xlat
jmp
idiv
loop
and
test
faddl
flds
hlt
in
into
into
lret
leave
in
cld
cmc
jmp
hlt
fdivr
fucom
mov
ret
cli
ffreep
fmul
in
nop
lock
call
in
in
neg
out
sti
ret
cmp
rcr
jmp
in
mov
shl
mov
shl
xor
cld
cmp
cmp
lock
stc
cmc
inc
out
xlat
int
jge
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
movsb
movsl
pop
shll
add
mov
xor
icebp
xor
xor
into
cmp
shl
cmp
fcmovnbe
cmp
mov
std
clc
stc
ljmp
enter
in
out
cmp
icebp
lret
rol
loope
fsubrp
leave
hlt
cli
test
incl
cmc
ss
in
imulb
idiv
jmp
divb
cld
aam
sti
ret
fmuls
in
lock
fsubr
cmc
xlat
cmp
hlt
out
fsub
ret
repnz
cmc
fsincos
in
addb
nop
test
cmp
xor
icebp
test
push
ret
jmp
neg
orl
das
out
out
cld
int
out
sti
xor
add
clc
fimuls
and
loopne
ss
cmp
repz
lock
mov
shr
mov
out
int3
repz
shll
xor
int3
repz
in
add
shr
les
call
xchg
loop
test
ljmp
sarb
aas
cmp
add
mov
fcmovne
cmp
iret
fstl
idiv
int
out
adc
std
ss
hlt
cmp
rolb
lret
stc
repnz
std
cmp
lock
int
xlat
adc
test
testb
xchg
loope
loope
imul
ror
xor
fcmovu
iret
hlt
in
aad
out
cmp
ljmp
cmc
jmp
ss
shl
int3
sarl
cmp
enter
fcmovnu
addl
out
int3
call
int
aam
sti
shl
stc
fcmovnu
iret
cli
fadd
loop
fcmovb
fdivr
enter
out
ljmp
int3
das
aaa
cmp
call
loop
jmp
aas
jecxz
hlt
xlat
in
out
mov
fadds
xor
jecxz
cmp
cmp
lret
rolb
std
ret
mov
mov
xlat
shl
shr
in
fnstsw
cmc
out
hlt
sti
in
rol
jmp
mov
fisttps
out
icebp
rol
stc
out
hlt
cmc
repz
xlat
cmc
imul
call
icebp
fucom
std
loope
xlat
bnd
shl
out
fnstcw
testb
mov
jecxz
sti
loope
out
xor
lret
lret
not
fstpt
aas
loopne
jecxz
add
in
jmp
and
icebp
ss
cmp
out
stc
cmp
int3
loop
cmp
cmc
fldlg2
in
out
mov
fsub
subl
shlb
lret
out
cli
clc
cmp
shl
cmc
std
in
jmp
loop,pt
cld
sub
xchg
repnz
out
in
int3
repnz
hlt
stc
iret
test
fucom
mov
fmull
filds
sarb
das
cld
xor
aam
cmc
leave
cmp
sar
sti
ljmp
clc
sti
lret
xor
cmp
fucom
rcr
jmp
stc
mov
test
lock
shr
aaa
cmc
jmp
enter
test
sarl
jecxz
ret
in
out
enter
aaa
loope
xor
ljmp
in
cli
int
hlt
xlat
frndint
and
jmp
out
lret
in
ljmp
aam
out
in
fstpt
loop
shl
loop
jmp
and
ljmp
ror
xor
xlat
int
aad
loopne
out
out
hlt
test
iret
mov
repz
sarl
call
aad
xor
hlt
fcomip
ds
movb
std
stc
clc
fisttps
fsubp
rol
aaa
lret
fsubr
cmp
ffree
hlt
int3
loope
ret
loope
fisttpll
jmp
repnz
sarl
aaa
fcmovne
into
cld
ds
in
jmp
xchg
mov
aad
lret
icebp
cmp
rol
icebp
repnz
aas
xchg
aad
std
movb
rolb
repz
xor
sti
jmp
int3
cmp
in
rcl
aas
stc
xor
fdiv
iret
fiadds
in
out
cmp
lret
out
into
out
xor
in
clc
in
sar
std
xor
xor
std
out
call
aam
clc
lock
repnz
mov
mov
test
fneni(8087
fdiv
rol
clc
fldl
out
filds
dec
lds
xor
cmp
repnz
cmc
aad
test
sar
incb
int3
dec
cli
mov
in
lds
ret
sti
icebp
shll
sarb
aas
cli
cmc
stc
mov
clc
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
clc
xchg
mov
jl
dec
out
nop
push
repnz
lret
xor
cmpl
loopne
fmuls
lret
cmc
cs
in
in
not
aam
rcl
ss
shl
rcl
out
fxam
xchg
test
ret
xor
loop
enter
cmp
test
test
loopne
test
jecxz
out
jecxz
mul
in
into
lret
in
sar
clc
xor
lret
icebp
in
xchg
xor
fsubr
repnz
fcomi
into
fadd
imul
fdivr
call
in
sti
fucomi
out
call
jecxz
stc
loop
aaa
leave
lret
fucom
fadd
sti
fsub
in
lret
stc
loop
out
icebp
rol
shr
int3
out
rcl
loope
jecxz
fnstsw
shl
aam
in
int3
ret
sti
rorl
sub
repz
icebp
stc
imul
cmp
shr
icebp
shl
repz
cli
in
cli
hlt
xchg
in
leave
into
ljmp
xor
out
cmp
rol
testb
movb
lret
in
imul
clc
std
ljmp
xchg
fstp
xchg
icebp
lea
loop
cmp
jmp
cmp
cmp
loope
jmp
orb
mov
stc
jecxz
int
lock
fdivr
fcmovu
ffree
adc
jecxz
fld1
in
test
loopne
ret
das
xlat
in
fcmovb
ljmp
ret
neg
div
std
fimull
jecxz
std
xchg
lret
loope
cmc
shll
aam
shl
loope
fchs
out
xchg
ljmp
mov
repz
repnz
out
cmp
aad
xlat
aaa
fcomi
cld
hlt
hlt
lret
or
xchg
repnz
ror
in
cmp
fcmovnb
sti
rcl
cld
std
cli
mov
lea
in
ror
ljmp
fcomip
fsub
out
sar
into
xchg
in
mov
cld
enter
xor
sub
out
shlb
fdiv
cmp
loopne
in
roll
repnz
xlat
in
xchg
fildl
out
not
iret
rcr
ljmp
lock
lret
out
cli
rcl
ljmp
std
enter
cld
fbstp
in
rcr
mov
neg
ret
loope
cld
ljmp
cmp
lret
lret
cmp
loope
test
call
out
mov
nop
xchg
das
sub
sar
in
std
icebp
xlat
repnz
sbb
cld
test
imull
cs
shr
aam
iret
call
fucomi
cmp
xlat
ffreep
clc
loop
test
mov
incl
cmp
jmp
cmp
aaa
sbb
hlt
sti
xchg
in
in
sti
mov
ror
aaa
cmp
rcr
ds
test
ret
repnz
ret
mov
or
aad
int3
rcl
out
repz
fsubr
jmp
fcmovnu
cmc
fdivr
out
jmp
fucomi
in
test
rol
repz
sub
ljmp
mov
cld
ljmp
shl
test
int3
int3
loopne
fsub
cmp
enter
filds
xchg
rolb
into
enter
out
cmp
fcmove
rcr
std
rolb
loope
out
or
loopne
jmp
xlat
out
std
std
ss
jmp
cmp
fdivrp
ljmp
xchg
jecxz
lds
xor
repnz
lds
ljmp
repz
loopne
jmp
icebp
lock
out
leave
repnz
out
out
in
xchg
std
in
xchg
sar
icebp
into
ret
clc
fcmovnu
ss
fcmovne
addb
ljmp
jecxz
mov
loope
cmc
les
hlt
ss
stc
vpsubd
bnd
fnsetpm(287
sti
in
fcoml
rcr
cmp
sti
xlat
xor
cmp
test
sti
in
mov
lock
mov
xchg
repnz
clc
lret
clc
shl
enter
out
or
test
fucomp
in
mov
enter
test
xchg
hlt
int
into
iret
out
ljmp
cmp
sar
xlat
mov
xchg
lock
in
iret
sti
enter
loopne
lock
rol
loop
neg
fchs
stc
sti
addb
iret
cmp
sti
icebp
in
lret
out
rcl
shrl
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
movsb
jle
pop
add
ret
out
sub
nop
loopne
enter
in
cmc
into
shr
call
lock
loope
icebp
aam
div
sub
mov
repz
xor
out
leave
lret
iret
repz
sti
hlt
repz
std
fcmovnb
clc
in
fsub
shr
lock
not
out
fcmovnu
icebp
hlt
std
xlat
rcl
loope
into
std
roll
fcmovb
int
loop
xchg
cmc
call
fdiv
into
cli
xor
out
aam
mov
lea
lock
repnz
loop
iret
loop
fcmovu
out
jmp
cmp
iret
fsubp
clc
ret
inc
loop
mov
xor
out
sub
div
call
cld
sarb
out
cmp
std
enter
jmp
mov
and
iret
in
sar
jmp
out
sar
in
test
aas
orb
mov
iret
into
int3
xor
in
out
loopne
lret
rcr
cmc
out
sbb
cld
lret
cld
icebp
sub
std
cmp
sarl
shl
fdiv
test
ret
loope
jmp
hlt
shl
jecxz
leave
fidivl
xor
out
cmc
fidivl
std
into
test
sti
rol
in
mov
enter
mov
mov
icebp
leave
leave
loop
lock
shll
aad
add
in
lock
aam
cmc
out
frndint
ret
aaa
xor
in
cmp
stc
lret
fdiv
in
cld
std
stc
iret
mov
nop
int
call
xor
lret
clc
cmp
cli
out
in
cmp
shl
repz
mov
sub
cs
in
leave
enter
int
in
out
fstpt
mov
div
aam
mov
into
repz
int
out
jmp
cmp
cld
xlat
repz
les
in
lds
out
divl
cmp
clc
cmpb
cmpl
std
std
fldl
clc
in
sti
icebp
lret
mov
xor
repz
ss
rcr
idiv
aam
clc
ret
jmp
iret
addb
xabort
hlt
cmp
aad
cmp
repnz
roll
in
mov
addl
xor
rcr
lret
fstpt
rol
testl
lret
loop
jmp
repnz
rcl
icebp
cmp
fstpt
repz
cli
cmp
lock
fimuls
test
iret
subb
fsincos
fcmovnb
test
aad
std
rcl
cmp
rcr
xchg
xor
xor
shr
in
fistpll
cmp
cmp
xlat
loope
cmp
xchg
call
cli
icebp
xor
rcl
cmp
xchg
incb
lret
fldln2
aaa
leave
jmp
fstp
lret
test
fcmovu
test
fmull
mov
cli
xchg
ret
jmp
std
repnz
xlat
xlat
xlat
ret
shl
mov
and
repnz
aaa
enter
out
ds
in
in
cmp
out
inc
sar
std
leave
dec
int3
sub
jmp
ljmp
cld
out
clc
not
loop
fld
test
mov
in
sub
int
enter
repnz
sarl
loopne
mov
xchg
jmp
loope
enter
shr
neg
icebp
fidivs
icebp
aam
faddp
loopne
jmp
loope
int3
call
into
hlt
lret
cmc
out
lret
cmp
loop
fisttpll
ds
rcl
rol
out
rcr
enter
out
aas
fiadds
aad
jmp
nop
ljmp
clc
rcl
icebp
ss
sarl
cmp
adc
cmp
rol
cmp
clc
fadds
lock
into
ror
ret
in
cmp
sar
loopne
rolb
clc
inc
leave
rcl
test
rcl
sub
out
sti
cmp
dec
repz
std
hlt
ds
fld
mov
in
fimuls
into
mov
lret
in
jecxz
std
out
cmp
lret
cld
rol
aas
loope
std
aam
clc
jmp
loopne
faddl
ret
clc
xor
jmp
fsqrt
xor
roll
adcl
jmp
hlt
aaa
xor
fxch
rcr
iret
fdivr
test
int
fsubr
out
in
roll
leave
div
xor
lret
lret
loop
in
test
stc
out
lret
mov
lds
sti
ror
pushl
icebp
int
fadd
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
loop
clc
sub
lret
out
sub
not
fidivl
int
repz
enter
hlt
out
cmp
out
jecxz
orl
in
sub
clc
in
lret
fsubr
std
cmp
mov
fimuls
mov
mov
sar
imul
stc
xor
cmp
cmp
sar
aas
aas
adc
decl
jecxz
mov
aad
cmc
icebp
cmp
cmp
ljmp
mov
out
loope
fmull
stc
lret
cmc
loope
repnz
filds
xlat
out
mov
out
leave
out
in
lock
rcl
lock
fnsave
xlat
iret
fldl
cmp
clc
cld
cli
mov
out
rcl
rol
xor
out
fdivrl
idivl
ret
cld
fmul
in
repnz
cld
in
int
filds
out
shr
loope
cmp
in
iret
aad
fcomip
cld
test
jmp
mov
out
in
jmp
test
fbstp
leave
xor
ss
aam
aad
enter
bnd
mul
aam
fimull
mov
ss
iret
lret
xor
sarb
cmp
and
test
loope
xchg
loope
xor
cs
loopne
in
rcl
out
cmp
jmp
neg
xlat
leave
in
aam
xchg
std
nop
fcoms
stc
fld
into
icebp
cmp
fdivrp
fcom
bnd
shl
rolb
mov
and
rol
out
into
aaa
lret
stc
iret
aam
stc
xchg
ret
ret
ffree
loopne
loope
int
xchg
lock
clc
xor
cmp
into
ljmp
ret
ret
shr
fsubr
lea
sub
xlat
xor
rcl
ds
rolb
fxtract
fcmove
enter
loope
out
hlt
jecxz
int3
aam
sar
icebp
xlat
fdivrp
fxch
or
mov
in
in
fcomi
out
out
iret
ss
ret
cmp
stc
std
cmc
aam
pop
std
ror
out
in
fsubrl
into
lret
out
sar
icebp
rcr
ss
loope
xchg
fincstp
shl
enter
out
cli
ljmp
in
ljmp
loop
ss
and
fisttpl
clc
repz
jmp
in
ds
imul
cli
leave
jmp
jecxz
fstpt
dec
aad
ret
jmp
mov
jecxz
jmp
hlt
shll
xor
lret
cmc
lret
cmp
clc
mov
ret
in
mov
xchg
filds
out
out
cmp
cmp
std
ror
jecxz
leave
fisttpll
call
in
cmp
rcr
lock
fld
std
xor
fcmovb
fcomp
sub
loopne
call
neg
stc
imul
fdivrp
stc
faddp
call
lock
shl
jmp
xchg
xor
lret
aaa
clc
in
out
icebp
aas
aas
jecxz
shl
ret
or
sti
test
roll
ror
out
out
repz
loopne
and
clc
fdiv
ljmp
test
repnz
ror
ss
jmp
into
in
sti
cmpl
faddp
loope
jecxz
rorl
xor
cmp
cmp
aas
sar
repnz
fsub
ret
orl
lea
shl
cmp
fdiv
repnz
in
aad
roll
ds
enter
shl
loopne
stc
sti
icebp
jmp
xlat
add
shl
loope
leave
out
enter
iret
clc
xchg
lret
in
out
xor
loop
fcom
fdivr
repnz
fdivrs
std
inc
jmp
lock
addl
fcmovb
out
mov
hlt
out
test
loopne
jecxz
leave
fstl
repz
imul
ljmp
rcr
inc
ret
in
mov
in
out
icebp
shr
fldcw
repz
jmp
out
in
loope
cmp
adcl
cmc
xor
repz
cld
xlat
hlt
repnz
out
call
incb
fadd
int
neg
in
enter
hlt
stc
in
mov
in
mov
iret
loope
xchg
cs
lret
clc
out
stc
shr
std
aad
lock
fmuls
sub
ss
std
call
in
int3
push
sub
cmp
jecxz
xchg
repz
ret
lds
into
jmp
into
ds
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
push
int
scas
jle
pop
add
ret
jmp
ret
in
decl
ret
icebp
into
lds
aas
loope
lock
rcr
jmp
fmuls
das
out
aad
lret
repnz
sti
cmp
in
int3
fdivr
in
addb
out
out
icebp
into
sub
fsubr
stc
lret
int
fdivp
stc
sbb
repnz
xlat
out
out
or
shl
int
test
cmp
fdivrl
sar
call
in
ljmp
enter
icebp
push
out
cmc
cmp
stc
aad
sar
out
lret
mov
out
leave
cmp
and
xor
repz
aaa
hlt
fnstcw
cmp
loope
loopne
neg
mov
mov
ret
ss
xor
cmp
and
leave
hlt
faddl
out
and
cmp
cmp
clc
rcl
cmp
sar
in
repnz
int3
test
shlb
cmc
fcomp
out
cld
xlat
sar
idivb
sti
xlat
idiv
fdiv
mov
aad
in
lret
out
decl
sub
lret
jmp
xlat
lret
frstpm(287
ret
sbb
fisttps
in
iret
neg
jecxz
icebp
fucomi
in
cli
clc
cld
in
not
xlat
idiv
mov
fmull
shll
jmp
xor
icebp
int
std
cli
iret
xlat
in
cmp
xchg
out
lock
repz
xor
int
call
aam
iret
into
sti
aad
test
stc
mov
into
in
lret
in
call
cmp
test
cmp
lret
addb
loope
fdiv
testb
aad
aaa
rol
int3
mul
lock
aad
jmp
sar
fidivrs
test
jecxz
out
fmuls
mov
int3
xor
cmp
cmp
jmp
std
cmc
sar
icebp
les
imul
stc
cld
lret
xchg
mov
test
call
out
rcr
icebp
rol
hlt
std
stc
lock
loop
enter
call
lock
icebp
loop
int3
jmp
repz
aas
repnz
out
xlat
in
fadds
or
out
fsubrp
aam
shlb
idivl
std
out
fcom
lret
shll
mov
fsin
fdivrp
sti
leave
mov
jecxz
neg
xor
leave
cmp
icebp
xor
cmp
fcmove
shl
inc
testl
repnz
test
xor
std
int
cmp
cmp
rcl
call
and
mov
lock
jecxz
xlat
cmp
lret
int
dec
rcr
repnz
jmp
jmp
ret
fucom
repz
rcl
shr
idiv
in
rol
cmp
out
not
out
fdivr
mov
out
in
rol
lock
enter
lock
ljmp
rolb
cli
test
clc
std
fsub
loope
enter
shr
out
in
int3
iret
jecxz
idivl
fsubp
shl
std
cmp
enter
xchg
rol
xlat
xor
xor
cmp
in
ljmp
call
loope
mov
pop
mov
lret
cmp
sar
loope
fadd
not
adc
ljmp
icebp
jecxz
in
loopne
out
lret
ljmp
fcomip
cmp
out
call
lret
in
in
std
repnz
call
cmp
aam
fidivrs
sar
loopne
push
repz
orb
out
xlat
xor
ss
in
cmp
cmp
addl
addl
fimuls
int
lock
jmp
out
sarb
cmp
lret
incl
mul
xor
out
cmp
aaa
fucomp
aas
ret
cmp
jecxz
sbb
aam
ret
ss
into
fnstenv
cmp
aad
in
rorb
mov
fcoml
out
aad
cmp
cmp
sub
fcomip
leave
ret
lret
popl
xchg
xchg
fsubp
xor
sti
out
fcmovnu
aam
out
in
ss
fst
ds
adc
fcmovb
xchg
enter
out
ror
in
in
stc
xor
repz
lock
fdivp
loope
nop
filds
enter
out
lret
dec
loopne
cmpl
ret
in
loope
call
iret
loopne
out
loop
into
dec
incl
rcr
hlt
stc
xchg
fsubrp
fisttps
xlat
in
hlt
enter
jmp
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
in
imul
jl
jl
fcmovu
int
loope
mov
aad
hlt
cld
les
repz
ss
leave
fcmovu
int3
shll
int
cmp
aaa
xlat
loopne
repz
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
