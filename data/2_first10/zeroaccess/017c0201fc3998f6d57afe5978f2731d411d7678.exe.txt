push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
dec
daa
outsl
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
pusha
data16
jge
sbb
jle
xchg
jl
mov
loop
fxch
xor
jmp
icebp
pop
mov
xor
aas
lock
insb
mov
pop
mov
stos
outsb
or
cmp
ds
loop
popl
pop
jo
daa
mov
or
fwait
addr16
xchg
xor
leave
loope
rcll
push
dec
sbb
and
daa
insb
jnp
xchg
push
lea
inc
xor
lea
xchg
ja
in
fld
stos
data16
push
pop
dec
push
jecxz
arpl
dec
add
mov
fbstp
sbb
fidivrl
sti
fs
xchg
push
push
call
stos
push
and
aas
cwtl
lods
jmp
sahf
les
insb
sahf
outsl
xor
jg
cmc
xor
icebp
lods
add
insl
sahf
int
pusha
into
pop
sbb
cld
mov
jno
call
inc
xchg
xchg
nop
std
cmpsb
mov
fildl
sbb
cmp
out
adc
ja
pop
xor
sbb
fstl
ret
mov
cmp
xlat
xor
jbe
add
dec
cmc
inc
inc
sarb
dec
aam
mov
mov
std
lods
mov
mov
cmp
fwait
mov
xchg
mov
cmp
jg
sbb
xchg
xchg
jo
test
divl
cltd
out
inc
xlat
pop
cmp
daa
movsb
jne
mov
sub
mov
ss
movsl
testl
mov
lods
popf
adc
sbb
mov
pushl
mov
ja
pop
or
push
xor
bound
jmp
aaa
aaa
or
adc
jmp
cmp
stos
sub
xor
sar
jo
dec
mov
mov
sbb
push
dec
jle
jae
sbb
cmc
aam
data16
push
mov
inc
ja
xchg
xor
lods
dec
rorb
adc
mov
xor
stc
cmp
ret
adc
imul
popa
adc
imul
outsl
fwait
add
jp
stos
int
ljmp
push
xor
nop
lcall
and
ljmp
push
sbbb
jae
aad
test
js
xlat
pop
movsb
iret
shll
push
mov
ds
cmp
fwait
push
inc
cmp
movsl
nop
sarl
mov
in
xchg
fwait
stos
xchg
mov
loopne
adc
mov
es
aad
xchg
push
ror
mov
add
add
lods
jle
loope
cmpsl
out
negb
scas
jb
aam
push
out
sub
popf
cltd
js
les
sbbb
dec
js
add
jbe
scas
cld
test
dec
mov
or
dec
ja
out
mov
or
ss
jno
push
jmp
outsb
mov
jo
lret
ja
mov
sbb
push
jle
or
mov
xchg
cmpsb
cmpb
cmp
fwait
push
das
popf
jnp
fldcw
shll
inc
loopne
push
push
sub
adc
add
mov
dec
push
stos
jo
push
cmp
sub
inc
cmpsb
popa
pop
cmc
jne
cmp
fdiv
inc
push
mov
or
lcall
push
and
mov
leave
repz
sub
and
mov
xor
scas
jbe
jo
jg
roll
inc
pop
stos
pusha
xchg
ss
jbe
pop
xor
pop
add
repnz
loopne
mov
lods
dec
jmp
lret
aam
mov
sub
mov
or
nop
fiadds
sti
add
shll
cmpsb
sub
in
cmpsl
pop
or
adc
ret
dec
sub
adc
push
adc
mov
add
inc
sbb
pop
sub
dec
fldl2t
jnp
imul
aaa
movsb
add
popl
incb
inc
mov
jmp
ja
xchg
xchg
mov
inc
scas
fisttps
pusha
lret
idivb
adc
test
test
hlt
cmp
stos
jmp
or
and
mov
xchg
push
sub
cmp
pop
sub
sbb
xor
testb
aad
or
stos
mov
xor
aam
movsl
ret
mov
sbb
lret
or
add
xor
iret
bound
xlat
leave
in
in
jp
addb
pop
cmp
sbb
mov
pop
outsb
push
movl
nop
leave
xor
mov
cmp
incb
nop
test
adcl
push
gs
push
jo
or
iret
mov
sub
aad
mov
lret
sbb
into
push
inc
fwait
cmp
lods
xor
hlt
shlb
xlat
loope
cmp
and
testl
in
xchg
mov
sub
mov
xchg
or
fidivl
jne
in
pop
mov
push
arpl
and
lret
repnz
xchg
insl
mov
out
pop
jb
add
dec
add
sbb
jns
dec
xchg
mov
addr16
les
scas
mov
rclb
xor
xchg
fists
pop
fsubrs
cmp
fstl
inc
cmp
aas
pop
cmp
xchg
push
out
dec
adc
xlat
pop
not
xchg
pop
loope
imul
mov
dec
jo
sarb
xchg
iret
fnstcw
mov
btc
jmp
imul
jns
sbb
pop
popa
cli
mov
les
aad
add
mov
ss
idivl
push
mov
xlat
cmp
pop
loopne
fs
rcrb
test
push
sub
dec
push
jge
dec
jb
mov
imul
flds
out
popa
out
jmp
adc
dec
mov
xchg
shll
in
xor
dec
jnp
mov
jecxz
call
lcall
in
or
pop
testb
lcall
mov
sub
sbb
mov
stc
test
xchg
dec
sarb
lret
mov
push
sarb
and
mov
push
dec
fstp
mov
cld
dec
mov
push
js
das
test
lahf
and
mov
mov
clc
adc
dec
test
outsl
push
sahf
lret
popf
test
leave
into
mov
insb
ja
aad
sub
xchg
dec
cmpb
adc
mov
lret
push
xor
repnz
sahf
inc
sub
loope
cmpsb
xlat
adc
in
cs
jle
or
push
sbb
or
dec
scas
js
repnz
out
shrl
pushf
add
fmul
fsubl
ret
out
je
sub
shl
mov
sbb
mov
adc
push
lods
idivl
je
pusha
test
lods
cmp
mov
iret
dec
inc
or
jno
jae
mov
dec
xchg
add
out
arpl
and
mov
dec
icebp
add
mov
mov
xchg
mov
enter
xor
xchg
mov
sub
cwtl
mov
sbb
mov
sti
mov
imul
fidivl
xlat
jbe
cmp
inc
fwait
lods
loope
fyl2xp1
scas
mov
push
dec
js
cmp
xchg
add
sub
sbb
xchg
mov
xchg
mov
or
sar
idivb
xchg
pop
inc
lock
aas
xor
inc
jp
xchg
sar
test
out
push
sub
pop
xchg
repz
movsl
lret
in
sub
roll
mov
jns
sub
testl
mov
mov
adc
imul
mov
mov
mov
sub
dec
filds
xchg
ja
sub
pop
cwtl
iret
pusha
jnp
loope
xchg
push
or
mov
ret
jne
sti
arpl
sub
icebp
xchg
mov
popa
mov
inc
sub
dec
push
add
nop
popf
xchg
jecxz
ud2
push
adc
cmp
fldl
test
subb
in
push
add
add
xchg
jae
rcll
mov
in
or
pusha
stos
loope
test
test
jmp
lahf
cmp
cmp
jecxz
sub
inc
pop
inc
push
loopne
test
cmp
shrb
xor
jmp
lea
xlat
scas
cmpsb
lods
mov
xlat
addl
stos
mov
push
call
lret
mov
jge
push
aam
sub
cmp
idivl
sub
xor
lret
sbb
mov
sbb
add
push
cmc
and
es
gs
sti
mov
push
add
sub
and
mov
fcoms
negl
movsl
mov
popf
or
cmovbe
das
mov
or
adc
or
jge
push
push
and
mov
and
mov
lcall
imull
loopne
adc
jmp
cmp
rol
lcall
lahf
lock
xor
or
hlt
cwtl
cwtl
mov
out
in
ror
jecxz
cmp
mov
in
stc
out
sarl
imul
jle
mov
mov
xchg
ret
shr
adc
mov
aam
lods
int
or
and
push
mov
and
daa
lds
jle
sub
mov
jp
daa
xchg
or
add
dec
rcpps
inc
movsl
dec
rcrb
inc
out
in
pop
cs
ja
mov
jl
js
fnstenv
push
push
outsl
jo
stos
inc
insl
lcall
stos
pushf
jb
sub
adc
in
push
mov
stos
lock
dec
aas
rcrl
leave
xchg
aad
es
mov
jae
nop
scas
lret
movsl
call
mov
inc
cmp
cmp
mov
fs
sbb
mov
sahf
insl
sub
orl
out
ja
jb
jp
and
xchg
xor
insl
xchg
sub
push
arpl
cs
out
int
cmp
addb
stc
mov
dec
cmpsb
adc
negl
enter
mov
popf
jmp
gs
scas
movsl
inc
mov
jnp
prefetch
or
lea
sub
mov
incl
mov
out
cmp
and
push
sub
xor
neg
push
add
mov
repz
or
xchg
cmpsb
adc
push
xchg
fcoms
jmp
xlat
sub
mov
inc
and
cmpsb
push
lret
stos
aad
sbb
movsl
ljmp
fcom
xchg
mov
ret
jbe
subl
ret
mov
movsl
xor
js
dec
dec
pop
incl
adc
jae
mov
xchg
outsb
in
inc
or
gs
push
cmp
dec
pushf
dec
in
add
mov
int
imul
pop
mov
sub
jb
sbb
out
popf
pop
fnstenv
lcall
mov
mov
loopne
dec
jno
fwait
and
loope
pop
and
adc
pop
xrelease
mov
and
push
adc
mov
cmp
lcall
roll
frstor
and
testl
sbb
call
rclw
rol
sbb
adc
mov
ss
ret
mov
ljmp
dec
bound
shll
mov
mov
rol
scas
dec
dec
into
push
test
and
into
dec
lock
cmp
mov
lahf
jg
pop
inc
imul
test
xchg
fwait
lods
test
popf
inc
in
in
clc
mov
fmul
sbb
mov
in
pop
sbb
ret
jno
push
sbb
mov
imul
cmp
and
sbb
or
std
bound
mov
rcrl
lds
das
sub
pop
sbbl
bound
hlt
push
out
mov
sbb
leave
pop
sub
jne
mov
addr16
in
mov
pop
mov
mov
inc
mov
mov
aad
mov
pop
xchg
aaa
mov
and
clc
push
sbb
sbb
push
mov
cli
pusha
jnp
or
push
mov
in
inc
push
pop
ficoml
not
test
loop
add
sbb
inc
fildl
imul
enter
popf
stc
dec
jecxz
ss
popa
and
pop
shll
cmp
xor
lret
lcall
popf
mov
mov
adc
lds
pop
adc
mov
or
jmp
pop
jmp
jmp
movsl
and
cmpsl
pusha
jp
mov
test
xchg
lahf
movsb
jecxz
mov
lahf
push
fldt
adc
cmpb
int
in
mov
sysexit
mov
repnz
test
subl
adc
and
inc
pop
inc
arpl
aas
and
mov
cmc
movhps
dec
mov
sbb
push
stc
scas
add
mov
lods
stos
test
jns
mov
fwait
icebp
jb
rol
xor
mov
inc
and
sub
sub
xorb
pushl
cmpsb
in
mov
movsl
data16
xor
adc
ja
sbb
dec
mov
loope
repnz
jns
inc
lods
mov
mov
mov
test
in
sub
test
mov
nop
ja
mov
in
sbb
bnd
repnz
aas
iret
icebp
xchg
cmp
push
or
sbb
iret
into
jmp
cmp
mov
mov
xor
stc
int3
sub
inc
scas
gs
sti
pop
pop
and
mov
repz
stos
push
enter
leave
adc
not
es
incl
push
scas
fs
clc
mov
mov
and
xchg
sbb
sub
mov
fstl
add
pop
dec
scas
fistps
mov
mov
gs
jg
repnz
sti
rcrl
push
mov
dec
adc
mov
ljmp
mov
data16
push
rcr
mov
jne
inc
aas
or
dec
jl
test
test
fistps
mov
imulb
inc
pop
imul
mov
cltd
cmpsl
or
ljmp
insl
hlt
add
mov
jl
push
jno
rolb
icebp
mov
mov
xor
inc
adc
sub
lcall
in
pop
jbe
lret
daa
bswap
sbb
insl
or
inc
loopne
je
dec
inc
in
mov
and
adc
je
movnti
and
les
or
jne
jae
jl
push
mov
popf
mov
pop
sar
addr16
push
lret
sahf
or
lods
out
andb
xor
jecxz
fwait
jge
xor
imul
outsb
jb
fwait
je
push
sub
mov
jecxz
int3
mov
ja
iret
dec
and
cmp
pop
stc
incb
aas
rcr
ret
cmc
shrb
in
mov
stos
movsb
test
jbe
dec
jmp
mov
out
xchg
frstor
fsubr
into
mov
das
enter
dec
add
out
test
or
sub
jl
icebp
jge
mov
cwtl
or
and
cmp
in
cmp
lock
jmp
arpl
cmp
xorl
sarb
ficomps
sbb
and
inc
sbb
shll
subl
iret
outsb
lret
inc
xorb
xor
into
iret
adc
add
adc
mov
movsl
mov
xchg
adc
insb
sarb
sub
pop
mov
daa
das
dec
lds
or
mov
sub
gs
int
mov
call
int3
pop
dec
mov
jp
xor
xchg
inc
jg
loopne
xor
in
insb
inc
cmp
pop
jl
int
sub
imul
aas
cmpb
lods
inc
mov
add
pop
stc
test
xchg
cmpl
scas
mov
or
adc
lret
mov
ret
mov
mov
div
xchg
dec
xor
ret
fisttpl
inc
into
mov
push
jne
repnz
dec
lods
sbb
sti
inc
xchg
shrb
xchg
push
push
lret
add
adc
std
lock
fcomi
sub
ja
pushf
jne
stc
icebp
ds
sbb
insl
push
fisttpll
and
roll
sbb
sub
decb
mov
out
or
add
mov
sub
jnp
sti
loopne
iret
jnp
jne
fisttps
ds
lret
sub
std
jge
fisubrl
addr16
or
mov
mov
sbb
inc
decl
aaa
lret
cmc
dec
jne
mov
cmc
cwtl
xchg
out
mov
repnz
fwait
pop
in
adc
dec
ljmp
adc
xlat
das
pop
cld
jae
push
jae
xchg
ds
aam
and
inc
push
mov
sbb
dec
xchg
push
sbb
mov
cli
andl
mov
iret
lret
xlat
xor
ljmp
push
sbb
ret
and
out
stos
rcll
pushf
push
mov
aaa
push
or
sbb
insl
insl
adc
cld
mov
push
or
adc
xchg
aaa
popf
jp
adc
insl
xchg
into
mov
pop
outsl
pop
mulb
xor
sti
lds
jge
outsl
inc
cwtl
jle
xchg
inc
cmpsb
dec
out
sub
push
jbe
xlat
pushf
jbe
jno
dec
icebp
cmpsb
jno
mov
sti
sahf
mov
lret
out
popa
pop
push
mov
lds
aas
fsubrl
leave
pop
sbb
cltd
icebp
mov
jae
push
out
mov
movsl
xor
pop
mov
out
inc
icebp
add
imul
cwtl
insb
push
fcmove
repz
daa
and
xchg
jnp
data16
adc
testl
ljmp
dec
cmp
ljmp
gs
push
outsl
dec
cmpsb
pop
sbb
jl
cmp
push
lahf
xchg
adc
push
or
nop
adc
sub
loopne
mov
cmpsb
mov
pushf
sbbl
jne
rolb
mov
pop
push
jmp
lods
push
shll
xchg
fimull
out
pop
bound
aad
inc
xor
dec
ss
cmp
fldcw
imulb
inc
lret
and
add
mov
jmp
push
fdiv
inc
push
cld
pop
imul
lcall
xor
mov
dec
fmull
lahf
mov
jns
clc
push
lods
dec
inc
inc
fcomps
push
cmp
mov
mov
inc
sbb
xchg
mov
cwtl
jo
push
adc
in
mov
xor
repnz
mov
mov
pusha
or
in
mov
cmp
dec
cmc
push
jnp
mov
fisttpll
cmp
cmp
sbb
pop
test
jb
push
ja
and
inc
lcall
ret
mov
cmpsb
inc
pop
sbb
push
pop
or
mov
mov
into
and
test
sub
jl
push
jb,pt
ss
call
lods
shll
jbe
je
mov
fstps
mov
out
cs
cmpsl
pushf
or
xor
or
or
add
mov
cmpsb
sahf
jmp
xchg
ds
test
fwait
hlt
loopne
stc
enter
mov
jo
mov
xor
dec
or
fists
pop
lock
push
pop
out
cmp
adcb
out
cs
or
push
xchg
aam
mov
gs
inc
adc
push
mov
xor
xor
xchg
pop
mov
sti
insl
call
cmpsl
sahf
push
xchg
jl
aad
ficomps
gs
insb
test
and
sbb
xor
cmp
push
loopne
movsb
xchg
jp
lcall
push
sbb
xchg
pop
mov
mov
in
pop
dec
dec
cld
imul
xchg
cmp
add
and
pusha
mov
fsubr
lea
inc
es
notl
test
aaa
lods
repz
xor
cwtl
mov
popf
hlt
iret
dec
sbb
aam
mov
sub
sbb
jecxz
in
call
adc
pop
leave
ljmp
lea
and
mov
and
icebp
loop
leave
in
in
loop
stos
mov
xchg
aas
add
mov
pop
xchg
test
cmp
pop
out
ds
adc
int3
push
out
imul
sub
je
nop
add
and
cmpsb
xor
mov
or
imul
arpl
adc
loopne
inc
in
adc
imul
pop
mov
dec
mov
js
loope
mov
sub
jnp
pop
sbb
xor
jl
hlt
push
add
shrb
repnz
ljmp
mov
xchg
mov
test
xor
mov
pshufw
push
int
xchg
mov
dec
fnsave
and
mov
divl
or
ret
fdivrl
stc
or
lret
push
add
fprem1
xor
add
jp
shrb
jo
pop
hlt
jno,pn
inc
xchg
aas
xor
imul
insb
push
lock
cwtl
dec
push
in
call
pop
cwtl
fsubs
push
loop
addr16
lcall
test
divl
stos
add
cli
push
lds
mov
shrl
xor
mov
repnz
adc
shrb
pop
fs
cmp
nop
add
and
cmp
or
stos
xchg
lods
sbb
out
mov
out
leave
cmp
dec
cltd
scas
arpl
cmp
cmp
call
test
mov
mov
and
andl
mov
cmp
or
sbb
loope
pop
adc
cmp
movsb
push
push
in
fmuls
dec
cmp
lret
inc
jp
arpl
pushf
add
and
loop
scas
jo
jae
mov
add
push
sbb
jmp
add
sub
xchg
mov
mov
mov
aaa
pop
clc
fwait
leave
rcrb
popf
add
enter
add
icebp
pusha
inc
int3
inc
das
mov
addl
fsubrl
xor
push
sbb
adc
jno
jbe
out
imul
mov
or
xchg
inc
mov
sub
or
mov
xlat
jns
mov
xor
andb
and
popf
mov
aaa
or
jae
imul
inc
lods
inc
int
mov
jno
dec
dec
shrl
add
or
in
sbb
sbb
insb
mov
xchg
scas
lret
test
xchg
push
add
out
jns
jno
sysenter
in
cld
mov
xor
xchg
mov
lahf
popa
xor
pop
or
pop
inc
out
sarl
mov
ds
xor
outsl
aas
jnp
shll
mov
push
bound
stos
in
and
lds
xor
dec
push
push
mov
cmpb
pop
popf
pushf
jne
cmpsl
mov
mov
pop
enter
pop
popf
cmp
and
push
push
fwait
jae
lret
or
pop
pop
jnp
es
push
mov
pop
and
push
lods
lahf
call
outsb
lods
xchg
and
mov
shr
add
sbbb
mov
mov
ljmp
pop
lock
ja
cmp
stc
adc
push
enter
hlt
test
jne
repnz
sub
mov
xchg
mov
xchg
inc
movsb
ret
shrl
js
imul
mov
pop
in
sbb
inc
pushf
incb
sbb
sub
out
out
adc
inc
mov
sar
ret
fst
push
xor
iret
aas
and
mov
ret
sub
nop
push
or
je
in
xchg
loope
popa
ret
enter
fnsave
pusha
xchg
cmpb
jge
mov
pop
aad
xchg
clc
hlt
sti
fs
cmp
decb
adc
jo
pop
fs
dec
cli
shlb
mov
mov
inc
lret
imulb
and
push
cli
or
mov
jae
mov
ffreep
icebp
sub
sbb
or
or
test
adc
les
sbb
lcall
icebp
popf
inc
idivb
inc
nop
or
xor
jb
aas
cmp
sbb
inc
bnd
aam
dec
mov
and
mul
jmp
cmc
pushf
or
mov
cmp
sti
sbb
push
cld
add
inc
je
adc
lcall
into
outsb
test
push
sbb
inc
out
leave
ja
xor
xchg
jo
adc
dec
xor
stc
lods
pop
out
dec
insb
imul
dec
movsb
int3
insl
sti
movsb
pusha
sti
and
inc
inc
mov
jp
pop
mov
sub
xchg
ljmp
cli
inc
repnz
scas
je
jecxz
rorb
mov
lea
je
xlat
mov
into
nop
mov
push
mov
xchg
js
dec
sbbb
or
xchg
add
jb
cmp
shrl
stos
pop
push
mov
out
add
cmp
div
xchg
scas
mov
test
das
movsl
push
jge
in
xchg
fnstcw
call
dec
leave
mov
push
pushf
ud0
into
loope
mov
adc
mov
adc
mov
lret
fldt
mov
push
xchg
mov
xchg
push
mov
lods
ror
fmulp
stc
jp
test
lds
roll
shll
je
enter
frstor
aam
dec
fstps
xchg
inc
mov
lods
in
loope
loop
stos
fbstp
push
shll
push
int3
ret
mov
xchg
pusha
imul
dec
pop
daa
push
cmpsl
cmpsb
sarl
call
jmp
adc
dec
mov
dec
dec
aad
sub
mov
or
dec
jb
pop
sub
rclb
call
mov
fbstp
jg
cmc
in
push
xorb
cmp
repnz
add
lea
jl
sbb
inc
adc
shlb
xchg
repz
or
mov
in
gs
push
cmc
pop
sub
xor
jno
flds
test
ret
pop
dec
pushf
loop
lret
fnstsw
test
jae
insl
sti
mov
pop
enter
pop
lahf
ret
lahf
mov
mov
mov
je
mov
loopne
jns
cmp
das
movsl
outsb
ljmp
leave
popa
insl
pop
es
adcl
and
push
dec
cmpsb
roll
je
add
push
inc
jge
xchg
test
and
jmp
push
fidivrs
jnp
inc
das
ja
fnstcw
imul
filds
inc
aam
push
fwait
or
add
sbbb
jp
aad
xchg
dec
mov
pop
adc
mov
out
in
jo
lods
jno
hlt
gs
adc
fs
fwait
test
bound
cli
push
cli
cmc
pop
and
data16
adc
inc
bound
add
cwtl
addr16
imul
pop
xchg
mov
test
cmc
hlt
xchg
fldl
sub
lods
les
mov
push
inc
cmp
pop
test
mov
cld
or
and
inc
jo
test
iret
push
int
inc
aad
jp
and
lcall
popf
testb
xchg
pop
aad
outsb
into
push
jle
ljmp
insb
pop
cld
scas
and
or
in
mov
into
and
jo
stc
inc
mov
stos
cmp
sbb
out
or
in
shll
pop
fmul
fadd
jmp
cs
pop
shl
and
and
lret
add
cmpsb
xor
pop
lock
jle
cwtl
repz
xor
mov
add
jge
mov
nop
xor
ja
mov
sbbb
mov
pop
adc
imul
sbb
xchg
aas
sub
jmp
arpl
enter
inc
xchg
out
adc
scas
daa
mov
mov
jecxz
or
adc
sub
xchg
movsl
xor
inc
fstpl
jg
xchg
cmc
sub
adc
das
inc
movsb
out
pop
sbb
cltd
push
add
push
xchg
mov
inc
adc
jge
adc
cwtl
adc
xor
scas
nop
and
jno
pop
and
sub
pop
pop
movsb
or
fsubrs
lods
mov
test
jmp
add
jmp
mov
cmpb
fwait
push
out
sbb
inc
div
mov
psubq
lcall
jg
xlat
mov
jp
adc
ret
fsubrs
int
imulb
fwait
xor
jmp
mov
js
or
and
pop
stc
cld
jae
mov
cmc
enter
sbb
scas
pop
cmc
imul
cmpsb
and
cmpsb
and
sbb
insb
xor
es
mov
adc
adc
cmp
sub
mov
mov
cli
stos
lret
sub
mov
pop
rcr
das
mov
repz
push
jb
les
les
lods
mov
push
pusha
aam
shll
loopne
rcll
mov
xor
push
jo
adc
fs
pop
add
add
cmpsb
sbb
dec
mwaitx
inc
hlt
insl
adc
bound
movsl
sub
push
vmovd
jmp
divb
mov
mov
jle
testb
fneni(8087
fstpl
lret
ss
aam
addr16
insl
out
nop
shll
pop
addr16
lea
dec
and
cmp
fisubrl
mov
scas
cmp
cli
not
sub
mov
lods
std
loopne
out
xor
cmpsb
js
xchg
cmp
jmp
push
cmp
xor
cs
psrlw
dec
xlat
je,pn
popf
pushf
or
lds
sti
jns
pop
jg
push
stos
push
inc
mov
pop
and
cld
lahf
xchg
int3
lods
pusha
lock
mov
out
lea
mov
jno
xor
ljmp
inc
js
or
mov
pop
sub
pop
loopne
shlb
jno
mov
bound
inc
daa
imull
sub
mov
pop
mull
mov
outsb
xor
xchg
cwtl
ss
xchg
divb
sbb
lcall
ja
loope
adc
flds
nop
imul
cmp
dec
dec
addr16
inc
pop
hlt
mov
mov
popa
xchg
stc
ja
sbbb
rcr
mov
push
fisubs
imull
mov
mov
push
mov
mov
push
lods
ja
cmpsl
negl
inc
out
sbb
sub
mov
sbb
sub
sub
push
pop
in
lock
sub
xor
inc
lcall
sti
testl
movsl
cmp
push
xlat
movsb
fsub
in
repz
inc
pop
dec
mov
mov
push
pop
inc
arpl
out
cwtl
std
clc
loope
test
xchg
cmc
cli
and
repz
mov
pop
lahf
dec
fdivs
push
cmpsb
daa
vmovhps
cli
mov
xchg
js
mov
shlb
cltd
leave
loope
rorb
sahf
repz
mov
sub
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
sar
xlat
pop
jp
aaa
pop
jp
out
ss
jbe
inc
in
mov
icebp
sub
dec
addr16
and
outsb
push
cs
push
xor
push
cld
mov
aas
jbe
push
in
push
inc
xchg
cmc
inc
nop
add
sahf
ds
insb
lret
sub
xor
or
orl
stos
addl
jo
push
sbb
push
rolb
popf
not
das
and
mov
xchg
mov
mov
xor
jno
cltd
add
aas
pop
fmul
cli
adc
ds
rorb
idivl
push
imul
mov
dec
push
pop
mov
cmp
mov
push
mov
lret
jg
inc
cmp
pusha
xchg
lcall
dec
sub
mov
adc
aad
ds
lahf
into
insl
pusha
imul
vpcmpgtd
std
adc
pop
aaa
inc
pop
adc
sub
dec
jno
cltd
jl
arpl
insb
lods
repz
je
data16
xor
cmp
pop
ds
pop
dec
call
fcmovu
dec
sub
idivb
xor
in
adc
push
ja
fadds
push
ret
sahf
dec
mov
pop
mov
pusha
mov
pop
pop
add
adc
jno
subb
jne
dec
dec
cmpsl
dec
fldl2e
cmp
xchg
aaa
xor
jae
lahf
ja
repz
arpl
dec
test
add
fisttpll
cs
inc
arpl
js
cmpb
sub
dec
push
cmp
ret
jno
pop
test
mov
mov
int
pop
xor
jns
jecxz
jge
push
jl
cmp
sub
jp
xor
push
std
test
push
aad
sbb
sahf
xchg
inc
add
aaa
lcall
ds
je
jg
fsub
enter
jl
inc
stc
popa
sti
repz
sarl
repnz
fs
js
test
daa
or
sub
into
jle
cs
fnsave
mov
jno
idiv
push
bswap
stc
or
outsb
xchg
test
and
mov
push
jne
sub
enter
fsubl
jno
je
test
test
test
jae
adc
adc
dec
rcrb
mov
in
sbb
imul
inc
aam
dec
aam
fldt
out
sbb
pop
dec
add
leave
icebp
mov
mov
ljmp
lock
cld
pop
in
sbb
sub
sbb
in
int
pop
fsubrl
out
cmp
sbb
sbb
and
movsl
cld
xlat
andb
mov
mov
ljmp
ljmp
fwait
repz
fcom
test
mov
insl
mov
loop
xor
aaa
and
and
pop
es
roll
in
testl
push
data16
or
and
jle
and
lds
dec
inc
jecxz
aam
inc
mov
es
or
cmpsb
mov
stc
mov
lret
nop
and
iret
leave
pop
xor
mov
adc
mov
dec
stc
bound
pop
xchg
repz
leave
scas
shlb
test
push
std
sbb
pusha
push
out
xchg
pop
mov
lret
and
push
xchg
mov
stos
insl
jl
pop
out
sbb
leave
push
movnti
mov
scas
cmp
and
jnp
int3
cmp
mov
jo
adc
in
sbb
mov
jg
ds
mov
push
jmp
outsb
addr16
xor
lahf
mov
mov
sub
pop
jb
xor
sarb
sub
push
mov
cmpsb
adc
iret
mov
inc
fdiv
nop
mov
fmul
xor
fwait
adc
pop
dec
adc
or
jae
daa
push
cmc
mov
inc
test
filds
aad
or
adc
sbb
jecxz
lea
aam
mov
lock
mov
fstps
xchg
jb
imul
push
test
mov
scas
loope
adc
mov
adc
cmp
pushf
dec
sbb
push
test
enter
pop
push
xchg
adc
and
test
xor
inc
mov
lock
sub
shr
arpl
dec
ja
aam
mov
mov
lahf
push
mov
shlb
dec
xor
jg,pn
jno
inc
scas
cmp
sbb
out
cmp
fldcw
imul
loopne
and
orb
xor
mov
sub
roll
test
add
dec
mov
sbb
iret
mov
insl
into
std
cs
push
fcoms
mov
mov
and
repnz
push
sub
add
rorl
xchg
ror
ret
mov
pop
adc
mov
dec
leave
inc
inc
lahf
aas
hlt
sub
xchg
jne
add
sub
imul
lret
xchg
lcall
xlat
js
mov
sbb
add
mov
push
ljmp
pop
dec
xchg
xchg
xor
inc
inc
mov
stos
jmp
pop
aaa
jl
fadds
sub
negl
jae
shlb
fmul
xor
enter
jno
movsl
test
push
and
iret
dec
jecxz
jne
in
fadds
lcall
faddl
mov
shll
jo
adc
mov
mov
sub
cwtl
cli
ja
stos
out
stos
push
xchg
mov
mov
push
inc
fidivs
sbb
xchg
jo
push
inc
pop
xchg
cmp
xchg
xor
aas
pop
inc
and
leave
scas
int3
cmc
jo
cli
add
push
or
add
ficoml
or
inc
or
push
jge
ret
int
addr16
xchg
fnstsw
aas
push
popf
sbb
push
xchg
or
addr16
cmpl
xlat
lcall
mov
test
int3
xchg
cmp
cli
adc
dec
arpl
push
mov
xchg
xorb
inc
test
or
xchg
push
xchg
pusha
mov
movsl
popf
cmp
into
push
add
stos
or
dec
pop
ds
pop
mov
pushf
or
inc
sbb
push
jp
ljmp
push
pop
or
pushf
loop
test
jae
push
or
pop
cmp
cld
movsl
pusha
push
mov
shlb
push
les
sbb
sub
xor
cmp
imul
loop
and
sbb
inc
test
pushf
pop
out
test
mov
cs
bound
cltd
int
loope
add
pop
inc
stos
cmp
sub
outsb
rcrb
jae
or
mov
pop
daa
fdivrl
mov
nop
mov
sub
sahf
cmpsb
inc
xor
cs
hlt
sti
fsub
lea
push
jns
and
stos
adc
mov
ljmp
nop
jecxz
xchg
popf
cmp
push
out
outsl
insl
inc
iret
orb
cwtl
xor
nop
mov
sarb
mov
cmp
cmc
pushf
idivb
push
xchg
or
addr16
out
push
sub
sbb
mov
mov
les
shrb
jnp
sub
rorl
popf
fs
stos
stc
out
lock
pop
repnz
cli
xchg
push
loop
jp
shr
push
mov
and
movsl
andb
scas
std
sahf
fnsave
jo
xor
loop
cmp
dec
push
cmpsb
js
xlat
insb
pop
lfs
inc
loope
pushf
sub
decl
out
push
cmp
mov
lea
cmp
enter
cwtl
pop
push
gs
dec
mov
insb
lahf
xor
sbb
mov
mov
je
scas
int3
flds
xchg
adc
repnz
int
fildl
fucomip
dec
jmp
sbb
aad
xor
sub
cmp
cli
xchg
movsl
adc
mov
shrb
jo
mov
negb
pop
mov
mov
jle
pop
int
mov
popf
fcomps
inc
enter
sahf
dec
inc
clc
push
mov
xor
mov
jns
clc
inc
adc
pop
loopne
add
cmp
scas
lea
loopne
xchg
pop
out
sbb
add
add
outsl
inc
icebp
divl
movsb
test
divl
adc
imul
mov
jae
pop
push
mov
pop
cwtl
insl
outsl
adc
pop
inc
cmc
lods
pop
inc
js
pusha
add
lret
mov
pop
mov
mov
mov
lods
mov
push
mov
xchg
call
repz
adc
adc
add
and
jmp
adc
cltd
in
rclb
pop
mov
pop
out
andb
pop
adc
imul
pop
mov
dec
jl
mov
loop
sub
adc
jnp
or
cmp
inc
scas
pushf
sub
xor
cs
scas
gs
sub
mov
hlt
arpl
mov
daa
push
jp
sar
xor
dec
imul
loop
and
fdivrs
mov
push
hlt
inc
or
and
shll
scas
push
fldcw
js
xchg
xor
mov
mov
in
js
push
int
movsb
int3
or
jne
and
sbbb
cmp
mul
out
sbb
cmp
xchg
call
lods
lods
jecxz
jns
fs
shr
and
fcompl
jl
into
pop
pop
pop
lret
mov
push
dec
loopne
popa
sbb
decb
enter
lea
sub
out
jecxz
push
jmp
mov
and
clc
aaa
and
rorb
mov
mov
xor
loopne
mov
aaa
jmp
inc
out
nop
dec
dec
and
pop
push
mov
mov
imul
xor
test
lret
lods
ror
xor
dec
jge
test
test
push
sbb
cmpsl
sbb
push
fbstp
imul
sub
test
insb
cmpsl
sub
mov
xchg
dec
mov
mov
push
mov
cmp
add
pushf
cmp
into
mov
push
jnp
xchg
mov
mov
fsubs
addr16
loopne
or
add
xchg
outsl
ret
or
stos
lret
lock
nop
or
xchg
mov
stc
scas
ret
rcll
cli
xor
xor
lea
jno
pop
pop
rorb
in
shl
or
cmc
push
push
notl
test
xor
insb
mov
fists
cli
mov
jae
or
clc
data16
je
icebp
xlat
add
inc
mov
mov
mov
ud0
jo
sub
xchg
loopne
imull
mov
xor
inc
push
push
mov
cltd
add
and
fbld
mov
into
ds
lods
and
scas
scas
mov
add
adc
xor
xor
jns
in
jle
pop
and
cmp
push
mov
mov
jmp
popa
inc
imul
or
cmp
pushf
movsl
adc
xchg
shlb
lret
mov
dec
mov
mov
hlt
shlb
mov
xchg
stc
fimull
jo
cmc
subl
imul
or
xor
adc
push
test
sub
les
adc
out
add
loop
fnstsw
xchg
fldenv
cmp
mov
scas
sar
sbb
scas
sbb
add
lret
mov
faddl
add
pop
pop
push
xchg
and
adc
mov
and
inc
cs
test
or
std
push
mov
jge
je
dec
mov
cmp
sbb
fs
lods
scas
enter
outsb
in
fsubl
sbb
add
fcoms
fmul
mov
imul
movsb
xor
jl
add
sub
jp
movsl
outsb
cmpsb
pop
ja
mov
mov
es
scas
cmp
or
pusha
cs
cmp
pusha
xchg
enter
je
mov
push
mov
lret
cmp
xlat
xorb
imul
push
pop
lock
and
stc
in
sub
mov
out
arpl
or
push
adcl
sub
sbb
iret
mov
test
cmpl
stos
popl
mov
loope
and
lret
jmp
xor
jmp
push
cmp
sti
jno
adc
nop
dec
lods
cmc
daa
pop
push
aad
dec
inc
inc
daa
add
mov
jecxz
xor
mov
loopne
mov
outsb
ljmp
stc
push
out
mov
mov
lea
lock
shrl
push
mov
inc
jl
cmp
jo
psadbw
xchg
xchg
out
cli
imul
loope
jle
push
aad
in
mov
pop
inc
push
lahf
mov
mov
test
adc
std
insl
cmp
movsb
test
sbb
or
xor
subl
dec
inc
shlb
imull
and
sahf
sarl
leave
std
cmp
fwait
xor
fwait
sbb
ds
dec
or
fwait
mov
pushf
add
mov
adc
stos
mov
out
je
mov
xchg
inc
inc
sub
mov
lcall
xchg
add
call
push
xchg
jle
pop
fcomi
roll
pop
icebp
aad
sbb
mov
int
scas
xor
xchg
mov
push
push
adc
inc
outsb
push
mov
sub
das
shll
xlat
outsl
div
cmp
stc
mov
imul
cmpsb
lret
pop
lods
dec
fildl
rcl
addl
or
push
xorl
adc
mov
push
outsb
jnp
pop
mov
data16
aad
mov
jno
mov
insl
test
fdivl
mov
pushf
dec
cmp
jmp
lds
xor
or
fdiv
sub
push
into
out
test
pop
push
mov
mov
sbb
addb
sti
in
sahf
sbb
js
pop
adc
loop
adc
xchg
add
jno
or
cmp
incb
data16
add
outsb
sbb
jne
jmp
pop
sub
loope
daa
ret
xchg
xlat
ljmp
mov
and
aam
idivl
sub
loope
add
or
sbb
cmp
repnz
stc
test
jp
imull
push
xchg
push
and
nop
test
add
mov
push
or
nop
pop
jmp
repnz
test
jmp
imul
adc
cwtl
js
cltd
xor
cltd
push
pop
xlat
lods
ljmp
sahf
ret
mov
out
jno
inc
fmul
in
xchg
inc
push
xchg
ficompl
and
sub
daa
jle
sub
inc
sub
push
and
mov
mov
dec
jae
dec
inc
push
xchg
fwait
lods
mov
fucomip
xor
pushf
or
cmp
and
in
mov
mov
inc
arpl
sub
ficoml
xchg
inc
shl
push
xor
jmp
lret
ds
push
mov
out
int
push
inc
stc
mov
dec
fdivl
or
jb
jg
sub
pusha
sbb
mov
mov
sub
cmpsl
dec
mov
xor
xor
movsl
push
mull
inc
repz
jae
in
enter
das
mov
roll
scas
in
cli
repnz
fistps
int3
imul
and
fnstenv
fcoms
push
daa
ret
pop
je
inc
push
and
push
mov
inc
inc
lahf
pop
fmuls
sub
add
push
dec
xor
push
lret
xchg
fnstcw
cmp
push
arpl
pop
cmc
outsl
xchg
outsb
call
adc
dec
sub
test
fidivrs
xchg
fwait
das
pusha
movsb
sbb
jae
movsl
ljmp
xor
pusha
outsb
mov
aas
push
imull
call
test
jmp
pop
adc
lret
subb
cli
lods
lret
stc
bound
push
mov
das
cmpsl
or
pop
xor
mov
or
lret
jecxz
mov
js
xor
in
or
shlb
push
es
jl
test
ss
and
mov
sahf
and
and
mov
in
mov
dec
out
sub
sbb
mov
push
aam
scas
xlat
inc
xlat
mov
adc
mov
testb
inc
daa
adc
ret
dec
jnp
lds
mov
add
mov
cld
inc
mov
outsl
mov
movsb
dec
adc
mov
je
lds
adc
fsubrs
into
push
sbb
stos
mov
sub
sbb
pop
add
adc
test
add
mov
jbe
mov
dec
aad
xlat
lea
mov
in
jno
pop
popa
test
xlat
inc
push
add
add
push
jb
rclb
pop
popa
xchg
mov
sbb
mov
xor
push
xor
int
cmp
es
lahf
mov
add
cmp
jle
outsl
daa
add
push
or
inc
cmp
lods
inc
jg
jo
push
xchg
or
nop
popa
jb
loope
mov
xor
cwtl
mov
xor
insl
iret
shlb
lcall
mov
fsubrs
vpshlq
cli
xchg
in
push
xor
cmp
sahf
cmp
push
mov
and
insl
cld
pushf
lcall
movsl
mov
pop
filds
clc
sbb
lock
out
outsl
cmp
mov
inc
pop
divl
out
lock
or
call
cld
cwtl
ret
xchg
mov
jb
cwtl
and
pop
enter
jbe
lods
mov
or
adc
test
xchg
movsl
jge
test
cmp
and
and
enter
jle
lods
dec
inc
pushf
push
scas
cmpsl
sbb
xchg
mov
add
iret
mov
xlat
adc
pop
mov
pop
push
add
rcll
subl
int
inc
cmpsl
aaa
es
jne
sbb
test
cmp
xlat
popf
mov
imul
adc
jecxz
aas
lcall
jge
pop
fwait
jecxz
mov
fstps
push
arpl
gs
mov
jae
fildl
int
lods
sbb
pop
fistl
lcall
mov
cld
dec
jbe
dec
adc
sub
and
and
mov
push
in
xor
inc
cmp
fidivrl
ljmp
adc
testb
aas
push
push
test
in
sahf
mov
mov
push
dec
addr16
add
cs
push
lret
out
inc
ja
jle
ret
jl
stos
sbb
xchg
or
lret
iret
es
cmc
ljmp
adc
or
notb
xchg
push
push
ret
add
xchg
movsl
push
nop
mov
push
and
inc
std
add
add
mov
cmpsl
pop
mov
stos
sub
cmpb
push
pop
mov
and
cli
pop
mov
icebp
sbb
imul
testl
rcr
xor
sbb
in
sti
adc
push
frstor
lret
mov
clc
jle
lret
and
sar
add
pushf
out
outsb
lods
enter
ret
xor
scas
cmpsl
jne
inc
leave
pop
dec
pusha
jmp
rorl
mov
fdivrl
call
cmp
cmp
sub
jecxz
or
adc
imul
xchg
jecxz
fistpll
and
jns
or
jge
lcall
jb
cmp
pusha
lds
sbb
movsb
xlat
lahf
xchg
adc
sbb
in
mov
xor
jnp
push
repnz
jge
mov
test
imul
mov
cmp
adc
dec
call
push
push
in
adc
and
jne
mov
add
ffree
jbe
add
sub
push
mov
inc
stc
int3
loop
sarb
xchg
ljmp
in
stos
inc
adc
mov
sbb
sub
dec
inc
daa
rolb
mov
push
push
mov
mov
in
xor
mov
push
jnp
mov
out
addl
push
fsubrs
shrl
mov
aas
mov
adc
mov
xor
push
pop
rorl
mov
ljmp
arpl
pop
adc
pop
out
in
test
cld
jne
hlt
sub
sub
movsl
dec
dec
das
lea
subb
lahf
adc
rcl
test
insb
xchg
add
enter
dec
pop
jle
arpl
inc
imul
push
pop
loopne
mov
pop
or
out
sub
add
cmp
mov
dec
mov
adcb
mov
mov
add
gs
mov
stc
out
xor
cli
ds
fstl
push
es
and
cmpsl
inc
and
pushf
je
adc
inc
loopne
aad
jg
test
inc
out
lret
lret
in
dec
add
lahf
cmp
inc
jae,pt
cmp
stos
xor
ljmp
and
dec
daa
sbb
fwait
push
incl
mov
in
cmp
shll
outsl
mov
stos
shrl
sbb
clc
dec
nop
mov
sbbb
pop
dec
int3
or
mov
in
enter
jo
mov
lret
out
push
mov
andl
jb
mov
xchg
adc
das
push
je
sarl
loopne
mov
pop
in
imul
and
je
pop
out
jbe
decb
xchg
xor
or
addb
pushf
xor
mov
hlt
mov
clc
out
mov
rorl
push
iret
aas
inc
repz
jne
xor
or
cmpsb
sahf
or
jecxz
adcl
xchg
ret
mov
icebp
sub
pop
mov
cmpsb
pop
test
push
mov
jl
mov
das
push
je
mov
xor
pop
pop
ret
clc
jne
push
das
xor
leave
test
movsb
mov
add
inc
movsl
repz
jecxz
aam
pop
cltd
cltd
xchg
movl
mov
pop
scas
mov
xor
sub
jmp
mov
clc
xchg
js
mov
push
cld
aaa
cmc
dec
or
mov
std
pusha
out
pop
ror
pop
out
jmp
loop
mov
xlat
lds
imul
cmpsl
std
addl
scas
pop
fldcw
cmp
jae
pop
xchg
in
std
rcrb
lock
shrl
jns
sub
shl
inc
fcoms
push
outsb
pop
cwtl
adc
into
loop
inc
notb
sbb
sbb
inc
push
lcall
hlt
cmpsb
push
jno
xor
sbb
add
cs
cmc
dec
vxorps
mov
loope
sbb
pop
sahf
shrb
mov
or
add
repnz
outsb
dec
sahf
adc
mov
incb
ss
aam
xor
pop
adc
popf
adc
cmp
inc
xchg
int
int3
shlb
pop
daa
adc
jl
lret
mov
pop
jmp
aad
sbb
cmpsl
push
fwait
dec
pop
cmc
mov
mov
repz
xchg
mov
inc
xchg
sub
xor
push
das
xor
xor
fdivr
movsl
and
pandn
outsb
hlt
cmp
adc
lds
mov
sbb
pop
mov
mov
push
xor
sbb
xorl
lret
insl
jp
cli
add
mov
mov
out
dec
dec
sbb
jmp
pop
out
xchg
idivl
jo
pop
push
rolb
push
adc
add
xchg
lahf
sbb
jae
data16
lret
imul
sbb
push
cmp
pop
sti
pop
adc
dec
mov
jo
dec
orl
push
jg
daa
fcmovne
adc
imul
jbe
pop
lods
les
loop
in
pop
mov
sbb
pop
cmpsb
lods
or
stc
xchg
pushf
les
cltd
mov
xchg
movsb
int3
push
rolb
pop
jnp
cmp
sub
dec
mov
jae
imul
mov
sub
mov
xor
ss
pop
dec
cmp
dec
inc
arpl
insb
popf
std
les
push
mov
sbb
popa
sbb
add
int
dec
mov
dec
or
shlb
pusha
push
shld
fwait
push
mov
out
test
mov
push
mov
push
iret
clc
jge
jns
pop
insl
pop
adc
inc
sahf
adcb
fldenv
xor
or
scas
xchg
popl
sar
xchg
mov
mov
xchg
xor
inc
jbe
ds
movsb
mov
sub
sarb
adc
lods
dec
lret
mov
mov
mov
xlat
test
mov
fldl
lock
sbb
push
jb
xchg
mov
nop
scas
push
jmp
mov
pcmpeqw
xchg
pop
mov
sub
iret
filds
and
or
and
sub
aam
xorb
push
inc
cld
and
mov
xchg
dec
adc
mov
clc
inc
popfw
cmp
outsb
xchg
push
jne
mov
inc
stos
stc
jmp
jge
mov
in
out
cmp
daa
repnz
cld
rcrb
or
xor
xchg
mov
icebp
outsb
mov
or
bound
xchg
and
mov
and
push
outsl
aad
xchg
outsb
and
jae
jge
adc
jge
jns
or
std
lret
inc
mov
das
pop
sarl
adc
and
pop
repz
or
xchg
call
cwtd
mov
imul
popf
cmp
push
cmp
jmp
mov
or
lods
cld
mov
adc
jmp
mov
lret
cmp
inc
into
xor
mov
stos
jbe
xor
movsl
sub
cmp
leave
or
imul
push
dec
xchg
push
push
mov
inc
push
mov
adc
add
pop
xchg
subl
data16
or
es
mov
mov
pop
xlat
int
dec
addr16
xor
arpl
insb
in
push
sub
clc
and
sarl
in
ret
es
scas
sbb
les
lret
lcall
rclb
loopne
mov
aam
pop
sub
mov
outsb
mov
es
les
push
and
out
pop
cmp
in
or
adc
dec
fwait
sbb
cli
sbb
outsl
into
loop
cmp
jmp
lret
mov
jecxz
fstpt
fstpt
scas
cli
cltd
or
mov
mov
iret
mov
outsl
adcl
movsl
jb
xchg
cmc
sub
outsl
sar
mov
mov
push
in
xchg
or
or
jl
in
mov
mov
into
push
rsqrtps
cmp
loope
jne
fyl2xp1
sbb
lret
gs
in
lret
fimuls
lret
outsb
xchg
push
and
xor
and
mov
jl
cmp
jne
bound
addr16
jl
and
data16
or
insl
adc
loop
mov
testl
lret
push
ja
popa
int
movl
pop
xchg
int
iret
jno
adc
dec
insl
adc
jg
imul
add
dec
ret
jle
imul
cmp
or
cmp
jne
popa
es
mov
out
lahf
nop
movsl
add
hlt
or
add
pop
imul
cmp
add
adc
jl
xor
fsubs
jno
sub
loope
aad
jae
inc
imul
mov
fldenv
cmp
cmc
aaa
mov
scas
pop
in
jmp
xchg
adc
sub
loop
inc
xchg
pop
sbb
movsl
sbb
fmuls
pop
mov
lds
shr
dec
and
push
unpcklps
pop
lret
add
add
cltd
xchg
sbbl
fstpl
dec
and
inc
insl
add
and
js
rorb
jns
ds
xchg
enter
enter
jl
inc
inc
jno
imul
clc
jnp
scas
insb
push
addr16
mov
cmp
cmp
in
imul
and
and
mov
mov
mov
add
cmpsb
xor
out
cmpsl
cmp
out
in
add
jae
push
jg
test
jg
inc
xchg
insb
jecxz
fnstsw
lea
aas
daa
incl
mov
clc
arpl
dec
push
xor
clc
mov
jo
sbb
dec
jnp
add
pmaxsw
add
mov
push
js
mov
loopne,pn
scas
xor
daa
lds
and
test
mov
push
and
push
aaa
dec
mov
lods
inc
sbb
add
and
and
fwait
int3
mov
addr16
cli
fmul
push
push
data16
sbb
jnp
clc
dec
jne
xor
rcrl
fcmovb
call
push
dec
jecxz
inc
xor
fs
mov
pop
in
inc
xchg
call
test
xlat
stos
ficoms
and
fwait
or
js
stos
or
sub
out
xlat
mov
add
push
xchg
jne
imul
js
sbb
cmp
mov
pop
lret
cmpsb
mov
or
jecxz
pop
packsswb
pop
fildl
movsl
movsb
mov
imul
lret
sub
inc
jns
pop
lahf
nop
out
out
bound
cli
popa
inc
jmp
jg
fldenv
pop
push
ss
loope
inc
jnp
mov
mov
sti
add
xor
adc
ds
push
jg
iret
ficompl
aaa
test
iret
pop
jg
adc
push
mov
negl
mov
movsl
divb
dec
sub
jno
dec
push
push
aas
sbb
sbbl
test
in
ds
push
sbb
pushf
test
add
push
dec
ficompl
test
jnp
ret
jecxz
lret
test
jmp
stc
mov
pop
loopne
out
scas
sbb
adc
jp
pushf
or
inc
insl
aas
or
outsl
push
lds
cli
pop
es
and
mov
push
iret
stc
push
fisttpl
pushf
enter
pop
test
jle
jp
xchg
mov
aam
xchg
xor
sti
test
sahf
arpl
rorb
push
mov
dec
adc
std
or
push
sbb
dec
popl
sub
cld
mov
cmp
outsb
stos
test
push
hlt
cli
mov
loopne
stos
mov
push
rcr
cmpb
ret
popa
or
and
mov
push
xlat
into
in
push
movsl
test
das
rorb
mov
scas
ss
sti
mov
in
test
enter
out
adc
cmp
jge
jbe
seto
pusha
mov
pop
test
jecxz
stc
clc
cmpsb
lods
ss
inc
inc
xor
pop
cmp
repnz
cld
mov
sarl
hlt
jno
shrb
sbb
cltd
mov
test
adc
clc
or
ret
outsl
jmp
xchg
mov
sub
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
ss
daa
cmp
rcrl
mov
aad
mov
ja
mov
sahf
insl
push
dec
lds
add
in
dec
cmp
adc
mov
fbstp
lret
shlb
testb
das
adc
ss
xor
pop
adc
mov
pop
inc
dec
inc
jns
pop
adc
imul
andl
repnz
daa
and
in
data16
adc
int3
and
jmp
and
xor
add
popf
dec
popf
dec
insb
pop
pushf
test
decb
or
add
push
sub
std
clc
adc
fbld
push
xchg
pushf
inc
inc
repz
inc
dec
mov
sub
pop
sub
pop
scas
sahf
outsl
out
push
test
stos
mov
das
loopne
push
and
imul
nop
mov
sbb
push
loopne
mov
sbb
cwtl
pop
into
imul
or
movsb
and
div
pusha
scas
pop
in
daa
mov
and
dec
sti
jecxz
stos
pop
out
clc
push
pop
ret
aam
mov
or
cmp
ds
cmp
mov
outsb
xlat
mov
sbb
push
stos
mov
sbb
es
inc
and
mov
mov
lods
push
popa
orl
mov
jns
loopne
jmp
cmp
test
sar
in
pop
dec
cmp
ds
sahf
push
adc
and
movsl
cmp
cmpsl
push
movsb
lret
ljmp
pop
mov
adc
add
jg
mov
scas
and
fsubl
pop
and
sbb
push
aam
and
push
cmp
or
sub
cmpsb
mov
mov
pop
int
outsb
mov
cmpsb
daa
out
adcb
and
cld
sbb
out
iret
inc
pop
push
outsb
rol
outsl
jb
push
pop
dec
aad
and
std
jle
xchg
adc
sbb
int3
mov
nop
or
inc
cmp
jp
and
insl
ds
add
mov
stos
mov
fldl
or
loop
scas
pop
outsb
inc
js
jp
xor
xchg
sub
sub
cwtl
push
lret
ds
inc
repz
movsb
or
dec
pop
dec
xchg
movb
or
out
mov
adc
scas
mov
js
test
lea
mov
xchg
js
pusha
mov
mov
jb
out
je
adc
int
xchg
push
lahf
jecxz
repz
mov
popf
add
dec
jae
lods
out
test
mov
add
mov
push
add
xchg
jge
mov
aad
jns
popf
pop
adc
and
pop
int3
push
inc
popa
mov
lods
fs
sbb
mov
sub
push
cmpsb
jmp
sub
jnp
fcoml
sti
movsb
lock
and
fsts
mov
ja
std
scas
mov
mov
mov
xchg
fdivrs
arpl
addr16
mov
xor
scas
sbb
imul
push
dec
loope
cmpb
push
mov
dec
repnz
or
xor
pusha
popf
xchg
hlt
das
jns
jnp
test
jne
xchg
pushf
pop
loope
xchg
and
jge
gs
ss
push
ret
ret
sub
sbb
jle
ret
or
iret
ds
fs
push
in
std
cmp
movsl
push
sti
push
and
je
lret
pop
mov
pop
jl
lret
fs
lret
jne
xor
mov
push
or
test
gs
and
movsb
add
jne
ret
test
aas
mov
cs
dec
xor
and
push
sbb
shl
jge
inc
or
stos
xor
je
mov
jl
sar
push
das
xchg
mov
mov
fdivl
mov
cmpsb
and
int
ljmp
rolb
dec
scas
mov
mov
scas
aam
push
cli
fistps
into
insl
sbb
ss
mov
in
sub
ds
mov
add
jnp
mov
pop
lret
imul
fcoml
fidivs
xchg
aas
rolb
xlat
push
das
fmull
xchg
daa
or
sub
push
lods
packssdw
mov
fidivrs
cmpsl
fsubrs
lahf
sbb
xor
sbb
out
push
or
mov
jne
dec
test
sub
jb
iret
sbbl
int3
hlt
sarb
imul
add
mov
pop
adc
xor
push
pusha
inc
jmp
and
pop
pop
pop
inc
je
fnstenvs
repnz
loop,pn
clc
scas
mov
je
insl
je,pt
jo
ljmp
fcmovb
mov
imul
lock
and
dec
push
and
filds
stc
test
xchg
mov
lahf
mov
std
mov
insl
push
cmc
das
or
inc
push
mov
roll
inc
xchg
andb
lds
push
nop
loopne
and
pop
jb
ds
jg
or
orl
cltd
fisubrl
movsb
mov
call
jmp
imul
aaa
add
mov
mov
pop
mov
or
icebp
jne
pop
add
cld
cmc
cmovb
inc
ss
call
mov
in
xchg
jecxz
pushf
inc
inc
and
mov
dec
clc
test
mov
mov
mov
popa
out
out
jl
dec
dec
sub
and
sbb
pop
stos
stos
add
push
mov
cmpsl
pop
mov
xchg
xor
sbb
pop
cmp
dec
xor
cmp
sbbb
shr
xchg
pop
xlat
lret
mov
test
sbb
ficompl
mov
xor
les
ret
mov
rcrb
mov
xor
or
inc
js
fs
ret
lcall
lahf
cmp
ljmp
loope
push
negb
mov
dec
jo
js
sbb
or
mov
xchg
lret
mov
pop
push
stos
pop
push
pop
push
and
sbb
mov
adc
bound
nop
mov
sub
jo
aas
dec
mov
mov
jle
xchg
aam
ss
push
decb
psadbw
mov
divb
push
jb
mull
and
ret
jno
push
mov
icebp
mov
mov
mov
jg
loop
orl
and
stos
addr16
and
aam
pusha
sbbl
lds
xor
fsubr
sub
lea
les
bound
leave
sbb
pop
int3
cs
mov
out
insl
shlb
ret
sbb
push
dec
pushf
inc
cmp
jmp
add
lret
fs
mov
xor
aad
sbb
mov
mov
jns
pop
out
xor
lock
inc
mov
jnp
jecxz
daa
sbbb
mov
push
loopne
pusha
cmp
aas
clc
lock
pushf
push
push
jnp
jns
xor
mov
outsb
outsb
mov
aaa
inc
repz
cmp
push
negl
mov
push
dec
cmp
mov
xor
lods
or
in
orl
mulb
pop
clc
mov
jns
dec
inc
aas
sbb
cmp
cmp
enter
xchg
inc
popf
push
lcall
ja
popf
mov
fdivrp
cmpb
xchg
push
fistpl
jle
fsubl
dec
mov
stos
xchg
cmp
cmc
cmpsl
leave
xchg
mov
je
lcall
mov
jae
and
int
mov
test
rorl
rclb
adc
push
pop
or
cmp
pop
push
adc
xor
sub
test
test
inc
sbb
mov
add
icebp
ret
std
sahf
fcmovnbe
lret
push
movsb
push
ja
push
ret
lcall
or
out
call
or
xchg
jg
xor
jl
test
fcom
out
out
lods
adc
pop
pop
mov
adc
test
and
insb
stc
mov
scas
lock
push
icebp
ficomps
loopne
inc
jg
ljmp
mov
je
fucomip
cld
je
jp
rcrl
mov
popf
and
add
push
push
sbb
dec
dec
jl
xchg
iret
dec
std
jns
xor
in
stos
cmpsl
xchg
pushf
call
scas
pop
dec
adc
mov
cmpsl
xor
clc
inc
lcall
mov
sub
mov
pop
adc
movq
pop
cld
mov
jg
sti
movsl
shrb
lock
cli
jae
inc
test
movsb
hlt
mov
ret
mov
adc
and
jne
outsb
mov
js
outsl
xor
mov
or
hlt
ljmp
push
dec
xchg
xor
fstp
arpl
dec
and
jb
lea
push
lock
pop
push
int
jae
xor
push
and
sahf
incl
add
mov
mov
int
push
xchg
mov
push
xchg
sbb
insb
stos
std
add
fcomip
push
les
jnp
popf
hlt
stc
pop
ljmp
xor
jecxz
out
std
mov
ret
into
xor
mov
sahf
xchg
sub
adc
mov
or
sbb
lock
rcll
or
xor
movsb
jae
outsb
lret
addb
imul
xchg
cmp
fmul
dec
mov
sti
add
inc
out
sub
fisubrs
push
movsl
mov
sti
bnd
mov
pop
mov
jmp
dec
ret
jle
aas
or
mov
jmp
mov
xchg
adc
inc
pop
inc
sbb
or
gs
jo
and
pop
popa
jno
rcll
inc
mulb
nop
ffree
push
cld
mov
dec
ja
xor
vpunpckhqdq
bound
cwtl
dec
mov
jbe
jg
loop
das
jne
sti
lds
mov
mov
sbb
lret
lret
loopne
fstps
push
int
or
gs
fstpt
jo
xchg
enter
mov
into
enter
imul
jle
psrad
inc
xchg
inc
mov
pusha
xchg
dec
adc
push
imul
fldenv
cmp
in
xor
out
jno
ret
shr
rcll
xchg
ja
sbbb
mov
cwtl
mov
das
arpl
dec
jle
adc
xchg
pop
loop
pop
stos
mov
mov
ja
mov
jmp
outsb
cmc
cmpsb
sbb
stos
mov
push
test
outsb
aas
arpl
push
pop
inc
inc
fists
push
add
js
ret
scas
push
stos
out
ss
div
sub
xor
iret
inc
add
repz
adc
adcb
mov
shr
je
mov
outsl
dec
in
xchg
pop
push
dec
sub
ret
jg
or
push
mov
sub
out
xchg
mov
outsb
inc
out
lds
xor
inc
adcl
les
jne
lods
add
add
xchg
in
push
sbb
jp
iret
scas
adc
addr16
ret
inc
es
and
push
push
dec
jg
sub
jl
test
mov
and
sbb
inc
inc
rorl
mov
test
xchg
add
test
out
insl
fldt
aaa
xchg
out
cmpsb
imul
int
mov
mov
scas
push
fs
mov
mov
dec
out
mov
ror
jo
dec
jns
push
cmp
cmp
pop
mov
dec
sbb
sub
ret
sbb
outsl
xor
sti
dec
mov
dec
sbb
push
add
js
movsl
add
nop
mov
cs
and
mov
inc
push
cmp
cmpsb
mov
stc
mov
mov
cmc
in
mov
lret
mov
pop
cmp
test
cs
repz
sub
jo
xor
in
mov
cmp
pop
hlt
insb
or
mov
pop
add
or
addr16
movsl
xchg
arpl
neg
cvtdq2ps
and
fstl
in
mov
sub
nop
dec
scas
jmp
jnp
xor
mov
jge
sub
dec
cmp
int
out
mov
test
enter
seta
call
fcoml
inc
sub
sbb
mulb
aam
mov
or
dec
in
cs
push
in
cmpsb
adc
pushf
js
mov
paddw
add
mov
fucomi
sbb
xchg
jle
cmp
pop
cwtl
lahf
out
jbe
and
push
cmp
push
imul
jp
ret
hlt
pop
pop
push
jno
jo
cmpsl
mov
mov
pop
out
stc
mov
rcrl
or
cwtl
insb
cmp
jmp
adc
dec
mov
and
enter
js
stc
or
cwtl
cli
popa
xor
rol
in
pop
std
mov
sub
outsb
xchg
pushl
inc
in
mov
dec
mov
das
test
loope
add
sub
sti
enter
imul
stos
cld
test
add
mov
xor
xor
divl
scas
sbb
xchg
movnti
gs
dec
xor
mov
pop
out
jne
jo
pop
out
and
lods
push
inc
sbb
and
cmp
pop
fdivrs
mov
iret
lds
cs
outsl
xor
push
call
mov
jnp
jge
jmp
scas
in
aam
mov
ror
sar
add
loop
sub
add
cmp
mov
jns
bound
cmp
shlb
and
mov
jbe
ret
in
or
mov
icebp
insl
out
call
lcall
bound
sbb
and
daa
gs
fwait
in
imul
and
push
pop
and
adc
js
mov
je
ret
jnp
xorb
cli
fdivrl
cs
stos
cmp
lret
cmp
fnstsw
mov
dec
push
ljmp
push
aas
xchg
cmp
xchg
cmp
mov
scas
out
rcrl
mov
dec
xor
xchg
sub
adc
add
adc
xor
xor
scas
push
cld
mov
in
sbb
std
push
push
sub
xor
mov
inc
popf
sarb
inc
inc
out
jp
jecxz
clc
xchg
popa
add
cli
aad
lret
js
movsl
cmpsl
pop
sub
jnp
data16
daa
js
mov
inc
inc
cltd
mov
push
or
fstpl
insl
imull
sarb
dec
pop
mov
in
xor
in
pop
movb
xor
xchg
jo
mov
pop
push
push
bound
jae
jne
out
xchg
gs
sbb
insl
xchg
or
popf
and
mov
push
cmp
add
mov
shrl
mov
xor
je
add
std
fisubrs
imul
stos
or
or
lock
js
bound
cmpsl
xchg
test
inc
mov
cmpsl
mov
cmp
sahf
xor
mov
pop
bound
out
inc
shll
sti
ret
xchg
dec
ret
xlat
mov
jbe
stc
lret
ja
push
xchg
cltd
les
rcr
xchg
mov
ja
xchg
cmp
dec
push
dec
xchg
cmp
push
pop
int3
push
pop
nop
lret
sub
inc
scas
add
mov
dec
outsl
mov
mov
inc
inc
sub
jl
loop
loopne
lods
lods
push
mov
std
or
cmp
nop
ret
scas
leave
jno
adc
and
cmp
sub
push
stc
and
cld
into
ss
data16
pop
mov
push
pusha
or
icebp
mov
pusha
ss
mov
mov
inc
in
jge
jl
and
push
loop
dec
in
lcall
mov
ficompl
push
and
mov
dec
pusha
jl
mov
add
loop
mov
push
xor
xchg
mov
cld
push
fcomps
pushl
cmp
pusha
fisubl
push
push
mov
adc
mov
fsubl
mov
adc
sub
pop
xchg
shrb
push
out
int3
out
xchg
sbb
mov
add
mov
jns
mov
subb
mov
insb
and
mov
xlat
pushf
or
lock
mov
inc
cmp
pusha
inc
xor
addb
out
movups
cs
jo
nop
notl
nop
inc
mov
ljmp
scas
jbe
sub
inc
fcomps
into
push
adc
xor
xor
mov
inc
sbb
mov
pop
push
icebp
stc
fstpt
cmp
jno
push
test
insl
mov
xchg
jno
das
dec
popa
xor
sahf
stos
sbbb
pop
pushf
xchg
jbe
xchg
movsb
ret
xor
movsl
mov
iret
mov
ret
out
mov
sbb
insb
sbb
testb
jecxz
push
test
cmpsb
push
push
and
shl
mov
inc
cltd
push
dec
and
cmpsb
lea
stc
adc
inc
cltd
js
mov
sub
aas
xor
fdivs
mov
add
adc
jns
mov
fisttps
pop
sbb
adc
mov
in
lret
cltd
stos
dec
icebp
in
pusha
mov
cmc
outsl
dec
scas
xor
xchg
loopne
dec
mov
push
loope
sub
xchg
mov
push
iret
push
sub
push
and
xchg
pop
mov
vxorps
cmp
mov
cmpsl
mov
dec
lea
jbe
push
pop
jl
fisttpll
mov
into
mov
repz
scas
out
mov
inc
repz
cmpsb
outsb
iret
in
xor
or
sti
inc
loope
pop
pop
push
pop
ret
stc
roll
mov
push
xchg
mov
in
nop
cmp
mov
or
or
add
jmp
cwtl
stos
icebp
adc
sub
lahf
mov
pop
xor
lea
xor
cmp
jbe
cmp
mov
andl
inc
xchg
pop
push
fadds
cli
mov
sub
sti
jle
inc
in
sub
mov
sbb
sub
sti
mov
and
movsl
cli
mov
mov
decb
std
or
push
adc
inc
push
sbb
inc
enter
xlat
mov
andl
push
and
jecxz
lahf
sbb
or
pop
iret
inc
outsb
ds
cmp
cmp
push
outsl
add
out
js
mov
stc
test
es
fstpt
fcmovnu
adcb
jne
movsl
gs
ret
out
sbb
and
mov
cmp
xor
inc
add
xchg
push
and
not
xor
jno
push
dec
cmp
push
mov
xchg
mov
lcall
loopne
dec
or
jg
gs
jae
xchg
jmp
fsts
cs
hlt
pop
shlb
mov
aam
cmp
mov
jl
adc
push
fiaddl
iret
adc
in
hlt
sub
lahf
xchg
inc
jecxz
adc
mov
jge
test
outsl
push
mov
pop
ficompl
xchg
push
xchg
int3
stos
jno
lea
sbb
jbe
jo
testb
lret
inc
push
cmp
mov
adc
hlt
out
jae
dec
xchg
out
mov
imul
sub
adc
outsb
sbb
xor
imul
sbb
adc
aad
imul
and
xchg
sub
inc
sbbb
and
xchg
cld
push
cmp
pusha
pop
insb
cmpsb
cmpsb
push
pop
scas
add
scas
adc
test
inc
idivl
inc
cmpsl
xchg
cmc
test
ds
mov
or
js
test
mov
or
fwait
mov
mov
and
ja
sbb
or
enter
call
jno
cmpsb
stos
jg
jmp
out
shrl
and
stos
or
adc
hlt
jmp
jns,pn
jae
jnp
or
xchg
rclb
dec
pop
std
mul
lahf
jae
sub
mov
test
arpl
inc
out
sbb
int
out
sub
leave
fcmovnbe
cmc
xchg
cs
push
xchg
dec
loop
fs
mov
xchg
repnz
lahf
shl
push
add
mov
mov
jmp
das
push
mov
pop
in
mov
imul
scas
mov
cmp
jns
xor
cli
imull
in
mov
sub
pop
xor
dec
xchg
xchg
xchg
ffree
call
dec
mov
xchg
cld
push
lret
enter
mov
xchg
fistpll
cmc
shl
jle
cmp
add
ljmp
mov
jmp
fildll
loopne
sti
mov
mov
out
hlt
sub
repnz
lock
outsb
mov
fstpt
lods
push
sub
adc
xchg
into
adcb
mov
adc
iret
lret
push
insl
lds
jg
jmp
pop
lock
inc
out
xchg
inc
lods
cmc
addr16
push
js
add
outsl
imul
and
adc
pop
push
imul
xor
fisttpl
call
shl
test
xchg
ja
xchg
mov
imul
xchg
jo
jb
pop
fnstcw
ss
mov
hlt
cmc
add
daa
into
iret
pushl
por
aam
and
popf
sub
xchg
cmpsb
aas
jg
fstps
inc
mov
inc
movsb
aad
push
dec
and
ljmp
mov
insb
test
test
int3
fs
daa
loopne
lret
out
and
pusha
out
mov
mov
jl
push
xchg
nop
jns
mov
add
gs
adc
rcrb
test
mov
mov
gs
mov
pop
rorl
lahf
adc
lret
mov
cmpl
pop
ret
push
push
push
stos
mov
fs
cmp
mov
mov
aam
notl
adc
jge
repnz
loop
arpl
in
in
or
popf
cmpsb
aaa
sub
test
incb
in
test
mov
loopne
adc
cmp
leave
lods
stc
aaa
addr16
into
imul
push
jb
xchg
xchg
pop
aas
mov
jnp
xor
in
shlb
insb
adc
leave
adc
les
aad
lahf
out
sub
rolb
xchg
push
daa
and
xchg
adc
dec
xchg
outsl
inc
xchg
sub
shlb
rcll
js
push
push
xor
jg
stc
popf
push
sbb
outsb
movsb
adc
mov
stc
sti
imul
mov
mov
out
inc
or
push
out
lods
test
mov
lcall
je
cmp
in
mov
repz
jecxz
xor
lds
xor
push
xor
xor
mov
fldl
pop
out
stos
out
sbb
test
stos
sarl
pushf
outsb
or
fcomp
loop
mov
push
mov
mov
fldl
mov
push
pop
clc
mov
cmpsb
cld
outsb
frstor
aaa
mov
pop
and
dec
ror
and
mov
mov
pop
in
push
insl
out
sahf
mov
push
rorb
push
decl
stos
jmp
lahf
cli
cmp
mov
das
int3
or
cmc
and
jle
imul
lea
pop
and
loope
std
das
gs
add
pushf
in
or
and
push
or
sbb
cmp
jecxz
push
xchg
adc
repz
mov
and
cmp
push
add
out
xor
loope
sbb
stos
cmpsl
fwait
sbb
fcmovne
mov
sub
out
dec
or
push
xchg
mov
cli
lcall
mov
lahf
xchg
sub
xor
mov
fsubs
outsl
insb
mov
push
arpl
and
cmp
dec
shl
pop
rolb
add
popf
push
repnz
fsubrp
push
add
in
push
inc
aaa
lahf
in
inc
call
orl
xor
inc
inc
add
mov
or
push
rclb
sarl
fs
adc
lods
xlat
inc
scas
fistpl
inc
orl
xor
popf
movsl
bound
mov
mov
lea
sbb
pop
repz
in
add
xor
ss
push
leave
add
loopne
xchg
sub
movsl
movsl
popf
sbb
pop
rclb
addr16
addl
mov
mov
imul
lock
imul
push
fcomps
cmp
ds
pop
jae
rcr
lds
fstpl
movsb
jno
dec
out
add
push
sbb
pop
andb
lret
add
mov
bound
sbb
outsl
cmovle
xchg
adc
cmp
pop
into
cmc
in
mov
popa
sub
push
lahf
loope
dec
or
das
jno
push
jmp
ss
ljmp
rol
sub
mov
mov
jbe
jnp
xor
jl
sub
scas
repz
popf
cld
stos
movsl
mov
inc
js
jge
repz
push
out
dec
sti
scas
les
xor
outsl
jmp
fsubrs
js
daa
push
sbb
xlat
xlat
scas
rcr
and
jg
lret
pop
or
ficomps
adc
sbb
insl
repnz
pop
inc
jae
mov
ficoms
xor
mov
sbb
mov
fdivl
pop
jns
jns
rclb
insb
aad
mov
mov
jo
pop
and
mov
fidivl
rcrl
daa
cmc
popa
fwait
in
lret
shl
push
cmp
mov
aas
jge
in
shl
je
incl
into
mov
call
jb
bound
cltd
adc
mov
cmc
aas
inc
outsl
imul
loop
sbb
in
fs
daa
sbb
sub
leave
ficoml
in
jnp
hlt
jg
ror
fld
mov
fidivrs
jge
jecxz
outsl
pop
mov
push
lcall
sbb
fiadds
push
or
jns
and
inc
pop
lock
adc
fildll
fdivs
push
fwait
xor
inc
aad
or
sarb
orl
shll
or
adc
test
arpl
sub
cmp
shlb
pop
and
sub
inc
daa
push
add
shll
push
mov
lods
cmc
mov
pop
out
xor
push
popl
xor
addr16
imul
dec
push
loop
sub
cmp
add
jnp
leave
add
divb
mov
and
cwtl
jb
out
pop
cmp
cmc
in
lret
dec
mov
add
mov
lea
mov
or
je
pushf
std
jecxz
fimull
pop
loop
lcall
dec
aad
push
into
mov
addr16
icebp
xor
mov
fcompl
jo
mov
loop
inc
inc
imull
inc
pop
inc
mov
cmp
cwtl
bound
and
fcoms
cmp
xor
mov
and
pop
movsl
addr16
sub
sbb
xlat
pop
push
aas
and
mov
jae
stc
loopne
es
sub
sub
jle
std
adc
filds
iret
push
mov
xchg
es
xchg
dec
lods
movsb
lret
fmul
test
aad
and
xchg
or
inc
or
sarb
mov
stos
mov
sbb
icebp
insl
jne
jle
loop
xchg
lret
dec
cmp
mov
jmp
dec
mov
loopne
cmpsl
and
leave
mov
stos
mov
or
mov
movsl
adc
int
mov
es
adc
cmc
daa
filds
adc
lds
cmp
cmp
je
inc
pop
ret
fdivl
cmc
out
movsl
into
adc
pop
mov
ja
xlat
out
call
adc
test
fisttpl
lods
jl
daa
shll
mov
cmc
into
loope
movsb
je
punpcklbw
sbb
pop
xor
or
and
xor
pop
lret
mov
pop
push
data16
out
cmp
and
inc
nop
lods
das
jo
jle
ror
scas
jmp
inc
mov
sub
cltd
jne
loopne
push
mov
out
xor
sbb
or
xor
repnz
xchg
test
sbb
jo,pt
mull
jmp
outsb
lea
adc
std
push
add
xchg
loop
mov
movsl
xchg
add
test
stos
pop
mov
mov
jne
pop
stos
into
mov
mov
dec
stos
lahf
pop
adc
inc
loope
add
dec
or
sub
imul
rcrl
adc
sub
int
mov
ficoml
inc
push
push
aam
push
cltd
xchg
shrd
cmp
push
int
aas
adc
xor
cmpsb
lods
lods
mov
mov
lahf
jne
ljmp
mov
mov
std
xor
mov
jle
mov
loop
or
cmp
repnz
enter
push
inc
sbb
scas
push
movsl
sub
aam
cmp
inc
jb
pop
stc
mov
sub
jle
fcoms
mov
aaa
es
pop
adc
cltd
mov
or
loopne
jl
jecxz
aaa
fldt
clc
jnp
mov
mov
mov
adc
sbb
movsb
out
sbb
arpl
sbb
sti
inc
in
pop
mov
adc
mov
movsl
and
das
xchg
js
ja
fcoms
loop
xor
pop
flds
jo
jmp
sarl
jb
mov
push
int
rcr
dec
dec
lods
std
mov
mov
out
arpl
push
mov
ljmp
hlt
test
out
xor
out
mov
cwtl
mov
das
sti
sbb
cmp
out
push
daa
repnz
mov
mov
in
mov
jno
mov
sbb
add
mov
inc
adc
jo
or
mov
xchg
mov
mov
js
dec
dec
xchg
mov
xchg
punpckhbw
sbb
push
mov
mov
fwait
mov
mov
btc
mov
movsb
and
lods
lods
lret
sbb
fdiv
xchg
or
or
das
xor
or
sbb
mov
xor
das
dec
imul
hlt
mov
xchg
rcl
bound
ficompl
mov
sub
lret
mov
sbb
jae
push
out
push
push
mov
and
cmp
push
or
movb
ljmp
cmp
xor
jl,pn
xchg
mov
repnz
jle
test
sub
cmp
in
out
loop
repnz
fwait
xchg
shrl
mov
push
xor
xchg
adc
and
imul
stos
xchg
cli
xlat
movsb
xor
lret
jmp
stos
cld
test
cmc
jbe
leave
cwtl
arpl
pushf
mov
leave
push
xchg
jge
ss
or
movsb
ds
outsb
jb
sbb
in
clc
aas
dec
pop
inc
iret
iret
rcr
cs
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
mov
jp
out
jp
add
sbb
sbb
testb
xchg
xchg
mov
outsb
int
je
popa
loopne
jecxz
lea
iret
sbb
xor
jb
push
mov
push
adc
jbe
pop
ljmp
pop
mov
sarb
test
mov
stos
test
xchg
pop
clc
xchg
int
adc
or
adc
sub
sbb
mov
sbb
test
mov
in
pop
sub
in
sub
xchg
fcmovnb
mov
fadd
pop
aad
aas
scas
nop
add
mov
sub
repnz
loop
cmpsb
mov
xchg
push
cmp
mov
mov
sbb
and
insb
lahf
imul
add
pop
and
pop
adc
cltd
rclb
stos
outsl
lods
es
and
cs
jge
call
stos
icebp
adc
mov
mov
ret
in
leave
mov
push
pop
scas
lea
hlt
clc
adc
xchg
dec
inc
mov
pop
adcb
sbb
dec
add
rclb
or
adc
fimull
push
flds
loop
nop
dec
xor
cmpsl
inc
int3
aaa
imul
jmp
push
adc
test
lods
es
bound
popa
sbb
rcr
jbe
sbb
inc
xor
sub
sbbb
scas
sbbb
ss
out
mov
mov
cmp
push
jl
hlt
xchg
add
loop
fsubl
pop
cmp
sarb
pushf
inc
or
pop
aam
mov
cmp
sbb
fistl
sti
sbb
lock
xorb
lds
sbb
push
das
in
and
sub
and
xor
loope
dec
andb
add
mov
sbb
push
test
push
and
adc
cmpsl
pop
push
outsl
movsb
test
mov
sbb
fmull
dec
ds
xchg
in
jb
stos
loope
in
imul
mov
leave
xchg
lahf
push
imul
mov
push
inc
ds
daa
cmp
xchg
adc
and
es
mov
fdivl
bound
aad
int3
and
aaa
xchg
mov
adcl
movsl
push
xor
sub
insb
jnp
sbb
and
mov
loope
or
add
mov
ja
or
jge
fsubrs
push
lahf
xchg
ficoms
push
pop
mov
pusha
dec
cmp
aad
stc
jne
mov
xchg
pushf
outsl
mov
hlt
adc
ffree
pop
inc
in
in
ret
push
push
cld
cmp
repnz
popf
pop
sahf
sarb
sbb
movsl
pop
aaa
or
fxch
sbb
or
scas
pop
cmp
push
lods
daa
rorl
test
ljmp
push
xorb
icebp
inc
add
xchg
sub
int3
popa
sbb
sbb
mov
lcall
icebp
mov
sub
jb
out
test
in
dec
adc
mov
mov
mov
fsubrl
jno
pop
pop
cmc
popf
jnp
test
cmpsb
or
sub
dec
pop
repnz
test
loop
cmc
mov
jp
inc
sub
push
xor
xchg
cmpsb
out
inc
pusha
and
sbb
sarb
cmc
jl
test
sbb
loope
rorl
mov
xor
stos
sbb
in
out
mov
dec
bound
lret
aam
outsl
bswap
mov
andl
dec
jo
or
insb
divb
mov
jge
nop
in
imul
into
iret
lret
scas
fdivrs
mov
shll
pop
sbb
sub
add
repnz
inc
pop
leave
adc
loope
inc
push
fcoms
xor
jl
imul
clc
pop
cmc
push
xlat
jmp
jle
mov
out
adc
xchg
mov
test
jecxz
dec
dec
xlat
sub
sbb
inc
xchg
xlat
rol
data16
jbe
ja
test
mov
and
xor
hlt
jno
and
mov
and
or
push
int3
loopne
sub
jge
fadd
pop
out
stc
xchg
ja
sub
jl
sub
fdivl
push
dec
cwtl
pop
xchg
adc
in
xlat
sub
int
enter
sbb
notl
cmp
cli
push
enter
cmp
pop
js
and
int
inc
sub
mov
cltd
stc
std
mov
dec
inc
aas
sub
test
xchg
mov
mov
pop
pop
fs
pop
out
dec
fbld
and
icebp
incb
ret
mov
jg
xor
sub
mov
push
adc
sub
mov
out
adc
xor
call
sbb
dec
xor
sbb
les
addr16
jmp
inc
out
out
sub
out
test
pop
inc
rcrb
adcl
mov
and
icebp
arpl
lock
mov
jg
cli
das
pusha
dec
cmp
dec
into
outsb
push
pushf
lock
mov
xchg
mov
or
mov
leave
xchg
sbb
sbb
jno
push
mov
lret
dec
loopne
sub
mov
outsl
addr16
add
std
and
ja
jecxz
and
inc
push
stos
push
roll
roll
xor
jmp
push
mov
ljmp
inc
add
xor
out
aaa
andb
jl
cmp
lea
cmpb
and
sub
add
insl
lock
test
mov
push
stos
jmp
nop
daa
in
insb
sahf
divb
dec
push
add
out
sbb
jmp
pop
std
jbe
dec
add
inc
push
xchg
out
xor
int3
pop
sbb
jne
pop
in
mov
loop
adc
out
adc
adc
les
push
mov
imul
dec
sar
or
dec
mov
xchg
stc
ds
mov
inc
int
xor
push
fs
dec
stos
loop
mov
lret
movsb
mov
out
xchg
inc
lcall
mov
adc
sub
popa
mov
ss
insl
cmc
lea
jae
mov
sub
xor
stc
in
pop
mov
xchg
aam
rorl
mov
pop
cs
or
jl
xor
jne
aaa
inc
inc
ljmp
add
dec
iret
pop
sub
into
jmp
fdivrl
ljmp
and
xchg
into
int3
int3
mov
push
cmc
mov
das
jo
or
icebp
pushf
adc
dec
jmp
mov
cmp
shlb
xor
push
xchg
cmp
adc
lea
adc
popf
adc
scas
ret
dec
icebp
imul
sbb
or
or
test
mov
push
xchg
ret
nopl
dec
mov
fs
sbb
xchg
mov
xchg
dec
adc
jnp
mov
aad
sbb
cmp
aas
popl
adc
arpl
fwait
sub
mov
ja
movsl
jno
and
sahf
add
scas
mov
jne
inc
pop
pop
stos
sbb
in
xlat
fcomps
ja
int
fadds
xchg
jmp
or
cltd
or
orl
repz
inc
pop
das
lods
or
inc
and
sbb
lcall
cmp
add
sub
test
pop
cmpsb
xchg
daa
out
cmc
xchg
aad
and
xor
adc
je
push
pop
xchg
psubusb
push
cld
mov
push
mov
daa
lea
mov
lock
and
add
dec
fwait
in
mov
cli
jo
out
cli
ret
push
inc
insb
jnp
cmp
lods
xor
inc
or
xchg
in
scas
cmp
and
sbb
lds
or
das
mov
int
bnd
shrb
sbb
in
mov
xchg
adc
test
xlat
jo
loopne
imul
outsl
push
lock
sub
mov
clc
jmp
cmp
in
repz
ja
cmp
hlt
sbb
test
dec
das
pop
into
imul
hlt
movsl
lea
add
jnp
jo
mov
jge
inc
lret
and
mov
pop
and
outsl
lods
repnz
ja
mov
push
inc
imul
aad
lret
dec
cmp
pop
xor
jno
out
mov
ds
popa
pop
push
fldenv
out
stos
dec
pop
jge
fsubrs
test
xchg
xchg
mov
fdivr
ds
cmc
xchg
push
cmp
loopne
loopne
pop
sbb
add
pusha
imul
loop
pop
add
pop
and
pop
mov
lods
push
push
shlb
push
aas
mov
xchg
aas
movsb
test
and
pop
iret
and
loopne
jne
mov
inc
sahf
mov
jge
cltd
xchg
mov
push
xchg
negb
cmp
aam
les
std
inc
mov
xchg
dec
mov
add
insb
adc
mov
hlt
popa
cltd
stos
xor
xchg
jne
push
and
cmpsl
setle
push
lods
fnstenv
add
outsb
pop
subb
mov
push
pop
jo
bound
sub
repz
test
push
pop
shr
inc
add
ficoml
aaa
cltd
in
rorb
xlat
mov
cli
ret
push
adc
push
xor
loop
insb
and
jo
add
pushf
testl
mov
jne
push
int3
mov
jp
hlt
aam
push
mov
push
and
cld
adc
xor
jl
fistpl
xchg
orb
out
incb
dec
call
push
clc
bswap
ja
insb
sbb
popf
flds
stos
push
cwtl
jmp
cvttps2pi
cmc
inc
adc
cmc
add
rcr
jne
test
es
push
push
outsb
cmp
jb
cmpl
fimuls
aas
mov
sub
es
mov
push
fmuls
testb
insb
aaa
fiaddl
or
cld
loop
mov
rcrb
adc
lock
lahf
ret
xorl
jbe
je
xchg
inc
loope
aas
mov
and
leave
mov
daa
sub
shrl
mov
mov
sub
mov
push
sbb
xchg
rclb
push
xchg
mov
jbe
adc
mov
icebp
iret
cmp
cmpsb
loope
ret
aas
jno
sbb
stc
outsl
adc
cld
mov
jp
leave
jg
and
jge
cmp
cmp
test
sbb
mov
jo
jg
imul
call
rcll
fucomip
cmp
cmp
fs
lods
push
jle
mov
inc
xchg
repnz
imul
mov
out
pop
sbb
addr16
dec
fdivs
and
shlb
xlat
pop
jg
mov
test
mov
ss
test
add
push
xorl
es
notb
mov
scas
or
fst
inc
jge
mov
int
lods
loop
mov
lods
sub
add
or
ret
mov
lods
dec
push
pop
test
stos
mov
sahf
rcr
or
movsb
fldcw
iret
aaa
mov
sub
dec
pop
scas
cmp
bound
in
inc
xlat
stos
rcrb
and
das
orb
or
adc
mov
sbb
pushf
shlb
mov
dec
aad
arpl
cmc
out
mov
sub
bound
inc
sbb
lret
dec
xor
enter
mov
mov
mov
scas
pop
mov
scas
xorb
sub
cmp
ret
nop
shl
jl
stc
insl
leave
bnd
rorb
aaa
js
sbb
cmpsl
mov
test
inc
dec
sub
jg
sub
lsl
adc
mov
mov
adc
iret
mov
mov
xchg
mov
push
mov
mov
pop
mov
fcomi
mov
es
mov
imul
dec
push
mov
sbb
jl
testl
or
xchg
in
cmp
dec
cmp
iret
inc
icebp
push
xor
mov
imul
ja
aad
push
iret
ret
cmc
daa
rcl
lods
sarb
cli
mov
add
addl
scas
mov
mov
push
pop
xchg
xor
sahf
cs
and
jecxz
mov
cmp
jno
dec
lcall
inc
dec
dec
sbb
aad
imul
inc
mov
adc
popf
dec
pop
xor
movl
jge
cmc
and
push
push
ljmp
sub
mov
mov
cmc
cmp
mov
cs
cmp
push
ret
testb
push
mov
adc
push
cmp
pop
jg
dec
inc
xchg
sbbl
bound
dec
mov
xor
nop
dec
mull
lea
xchg
mov
rcr
pop
inc
xchg
dec
aaa
mov
test
test
movb
outsl
fst
mov
pop
das
jl
test
arpl
sub
fnstsw
inc
mov
mov
fldt
sub
imul
cmpsb
and
mov
mov
iret
scas
jmp
dec
rcrl
mov
lea
outsb
mov
push
loope
insb
push
sbb
sub
pop
in
and
sub
adcb
jge
mov
mov
dec
xchg
cmp
icebp
dec
fbld
dec
pop
outsb
xchg
inc
int3
push
lea
pop
int
fisubl
lahf
sahf
xor
lret
les
jecxz
lcall
rcrb
mov
enter
hlt
xor
ss
stos
call
xlat
mov
aaa
lds
push
aad
jmp
push
cmp
jne
rcrb
mulb
push
sub
jae
mov
repz
test
fs
rcrl
and
mov
call
into
xchg
int3
rcrl
lahf
fs
rcll
inc
mov
push
fldt
fwait
fs
sub
shrl
sbb
dec
int3
fwait
lock
repnz
inc
lret
gs
ja
insb
xchg
adc
push
sarb
cli
xchg
sarl
cmp
push
pop
cmp
loope
or
push
iret
mov
lock
scas
sbb
jmp
add
xor
fwait
addl
adc
addr16
sbb
jbe
mov
cmp
cmp
addr16
pop
cmp
test
or
sarl
add
push
lcall
gs
lods
cmc
and
daa
push
push
or
std
int
add
xor
and
push
adc
shl
xchg
out
hlt
lret
fstpt
and
and
lock
lock
xchg
adc
mov
cmpsb
mov
pop
notl
fldt
pop
ds
mull
adc
enter
push
sbb
aas
sbb
cmp
in
jno
call
imul
push
les
cmp
lods
in
xorb
fwait
lock
aaa
jae
pop
shrb
addl
add
cmp
xchg
test
xchg
movq
xchg
or
push
shlb
rorl
ficompl
popf
add
ret
aad
out
loopne
sbbw
dec
inc
sbb
punpcklbw
fimull
xlat
mov
jae
bswap
test
data16
mov
loopne
adc
fstl
jns
loopne
mov
popa
jno
das
cmc
hlt
pushf
dec
fsubl
inc
mov
ficomps
into
mov
add
push
enter
sub
enter
push
mov
mov
and
xchg
out
daa
push
dec
push
mov
scas
mov
pop
je
fwait
pop
mov
int
mov
addb
xchg
mov
enter
lea
test
insb
or
add
cwtl
add
rcll
cmpsl
dec
and
jmp
adc
filds
je
out
dec
test
jmp
inc
lods
insb
jae
pushf
and
mov
adc
jle
in
movntq
sub
mov
je
mov
es
and
mulb
ficoms
pusha
cmp
jmp
push
loopne
into
gs
mov
mov
stos
inc
mov
inc
push
xor
mov
fadd
xchg
sub
test
or
test
mov
adc
pop
testb
lcall
in
push
insb
sbb
pop
mov
adc
xchg
xorl
sbb
inc
inc
sahf
mov
ljmp
sbb
aas
push
daa
fldcw
mov
cmp
and
sub
sahf
imul
shrl
movsb
in
cmp
cmp
mov
inc
adc
daa
pop
xchg
and
gs
push
test
fbld
scas
mov
in
sbb
test
dec
mov
mov
cltd
inc
jae
cmpsl
test
add
mov
xchg
in
orb
and
cli
shll
mov
movsb
jg
insl
out
cmpb
sarl
xor
lcall
xor
xor
jbe
aad
fcompl
lods
dec
mov
pop
ficompl
xchg
fdivrl
xchg
cltd
fidivs
cpuid
push
add
jecxz
movsb
push
sub
push
add
push
in
jecxz
ret
lret
add
jmp
outsb
rolb
je
pop
cld
adc
in
add
pop
pop
dec
xor
xchg
loopne
in
cmp
cmc
mov
pop
sti
sub
or
or
sti
sbb
jo
jmp
jmp
mov
outsl
and
bound
jne
mov
push
lcall
xor
xchg
mov
dec
aad
fwait
mov
nop
push
adc
iret
inc
divl
jmp
mov
push
adc
cmpsb
daa
pop
scas
mov
mov
imul
xchg
scas
push
fmull
cmp
or
sub
fisubrl
pop
jmp
popa
in
andb
or
push
adc
or
and
js
mov
cmpsb
pop
sub
lcall
dec
inc
mov
mov
in
scas
dec
mov
out
daa
stc
enter
mov
test
dec
sti
xchg
mov
adc
dec
push
loop
dec
out
sbb
push
test
movntps
pop
in
inc
and
enter
fstpl
jl
mov
push
sbb
sub
shlb
mov
xchg
adc
pop
scas
scas
rcl
pop
sub
dec
fsts
jg
insb
aad
arpl
mov
repnz
add
inc
push
dec
cmpsb
jnp
or
push
mull
stos
stos
insb
daa
cmp
or
push
and
and
mov
and
add
frstor
nop
adc
adc
mov
mov
dec
fadds
test
sub
stc
out
enter
jg
ret
xor
sahf
mov
repz
ljmp
sub
xchg
call
notl
sub
xchg
addb
pop
adc
inc
and
pushf
cmp
xchg
test
scas
mov
sar
mov
cmp
cmpsl
adc
mov
mov
xor
test
out
cwtl
sbb
add
jmp
enter
xchg
stc
cmc
test
or
xlat
xor
sbbb
stos
out
sbb
repnz
lret
cmp
ds
pop
and
test
mov
push
xchg
mov
sub
pop
sbbb
enter
popf
xor
jmp
fwait
pusha
mov
outsl
mov
jnp
std
inc
mov
daa
insl
ss
mov
imul
addr16
mov
outsl
pop
imul
jno
and
mov
movsl
mov
mov
ret
jo
mov
jb
sub
fisubs
lret
dec
jecxz
test
xchg
sub
pop
cmpsb
addl
cltd
fiaddl
add
push
imul
lcall
dec
les
pop
in
icebp
test
les
mov
daa
pop
out
pop
dec
or
pop
daa
sub
pop
xlat
lods
push
sahf
ret
mov
jmp
ja
js
push
shrb
pop
daa
mov
call
dec
outsl
sub
or
cld
mov
rcr
xchg
inc
inc
in
jmp
repz
sub
sbb
loop
dec
mov
scas
lods
fisubl
mov
mov
add
outsb
outsb
jo
pop
and
xlat
lahf
add
lods
subl
xchg
sti
xor
sti
fsubl
pop
push
je
int
in
pop
stos
and
cltd
out
imul
shlb
dec
and
xor
inc
and
notb
call
mov
mov
std
filds
jae
loop
js
dec
movsl
and
mov
jne
mov
xchg
adc
mov
pop
lret
popf
add
sub
mov
aam
mov
call
aaa
dec
pop
iret
movsb
ud1
and
rolb
pushf
cmpsl
and
pop
inc
xor
mov
fxch
jge
pop
cltd
xchg
mov
lret
cwtl
mov
arpl
in
fcom
pushf
in
es
js,pn
jp
jg
push
les
outsl
sub
cwtl
lcall
inc
or
in
jnp
push
and
jecxz
dec
int3
fmuls
pusha
scas
call
pop
imulb
push
inc
cmp
inc
ret
out
fisubrs
cli
imul
adc
add
adc
das
jae
dec
imul
dec
or
xor
ds
out
or
add
or
xchg
sti
sub
ja
jne
imul
mov
shl
xchg
movsl
xchg
out
lsl
and
out
hlt
fs
fimuls
xchg
mov
in
mov
in
pop
lock
lahf
mov
pop
sub
mov
cmp
out
loopne
ds
adc
adc
cltd
xchg
xlat
pop
inc
daa
int
mov
nop
push
stos
jns
pop
outsl
xchg
test
xchg
insb
dec
push
push
data16
inc
adc
fldl
mov
outsl
mov
cmp
movsl
test
jbe
dec
aam
bound
pop
cmpsb
mov
iret
into
sbb
pop
mov
or
test
je
test
dec
xlat
inc
push
aad
rcll
lods
push
sub
paddq
idivb
jb
xchg
ret
push
cmc
cmp
repz
in
and
das
jne
cmpsl
into
jmp
int3
fdivl
lret
sub
push
orb
je
mov
xchg
mov
jge
jbe
sahf
adc
cmp
test
jb
sbb
cmp
mov
lods
sbb
pop
cld
nop
xchg
popa
inc
shll
shl
popa
mov
lds
mov
jbe
mov
ljmp
dec
shll
fistpll
sub
dec
daa
dec
sub
outsb
mov
push
test
int3
xchg
out
jecxz
pop
push
data16
shr
mov
fnsetpm(287
sbb
out
pushf
sahf
inc
repz
jbe
lret
fwait
mov
mov
lods
cmp
sub
cmp
out
xor
sbb
push
addr16
pop
pop
sti
lods
sbb
sub
push
imulb
adc
add
mov
mov
sbb
out
dec
or
mov
dec
sbb
mov
imul
or
jecxz
lret
into
add
inc
data16
leave
and
adc
mov
mov
fwait
sub
adc
std
add
mov
les
ja
es
mov
stos
mov
daa
dec
add
sbb
popf
outsb
xchg
cmp
add
and
pop
xorb
rcll
dec
dec
adc
xor
fs
rcrb
xchg
or
popa
or
add
cmp
lds
cmp
and
mov
cmp
orl
stos
test
dec
push
arpl
sahf
pop
orb
mov
push
add
lock
fimull
xchg
int3
mov
jno
test
push
mov
cmpxchg
pop
add
inc
jmp
sub
lcall
sbb
fcmovu
int
push
mov
stos
lea
xchg
dec
aad
ds
loope
sbbb
arpl
dec
jb
push
je
shr
test
mov
aam
pop
loope
dec
clc
imul
add
jbe
inc
jae
dec
out
jo
lods
hlt
jle
xor
cmp
mov
clc
mov
push
jnp
mov
popf
push
cmp
fwait
mov
nop
jnp
aaa
xchg
jbe
mov
or
xlat
fisubrl
mov
push
out
cmpsl
out
jbe
out
dec
je
push
xor
dec
adc
inc
add
sti
push
lods
loope
xchg
dec
or
out
repnz
xchg
xor
xor
inc
sbb
cmc
cltd
call
mov
shrl
push
stos
outsb
scas
pop
and
or
jns
mov
mov
mov
sub
enter
push
cmc
cwtl
out
pop
push
add
inc
das
add
jecxz
mov
dec
jne
vpmaxsw
push
sahf
jno
pusha
sahf
xor
xrelease
aam
sarb
jne
call
outsl
pop
repz
mov
ret
imul
cltd
pop
dec
jns
dec
push
outsb
adc
lret
xchg
or
mov
sbb
movsl
orb
pop
nop
mov
mov
xlat
dec
aam
pop
xchg
shrb
xor
and
mov
js
sar
jne
outsb
adcb
in
out
clc
mov
ret
cmp
xchg
sub
pop
mov
inc
push
jne
lret
inc
sub
jle
in
jno
xchg
and
and
push
pop
jmp
xchg
jns
mov
dec
out
mov
lea
out
mov
xor
cli
gs
fwait
mov
ret
idivb
das
sub
rclb
out
add
cwtl
jmp
sbb
add
dec
ja
push
push
fadds
xchg
fisubrs
std
inc
ret
or
lods
dec
es
mov
movsl
outsb
out
mov
cmp
xor
dec
popf
inc
sbb
pop
inc
add
pusha
sbb
icebp
jno
in
mov
push
pop
inc
pop
inc
dec
daa
aad
data16
lcall
mov
mov
push
jns
sbb
adc
fwait
xor
pop
mulb
inc
inc
sbb
xchg
mov
inc
jge
jge
daa
inc
subb
cmp
pop
lea
mov
mov
mov
push
mov
in
ret
push
call
pushf
movsb
enter
popa
popf
aas
popf
notb
xor
jnp
sti
jecxz
in
cmp
pop
arpl
sub
insb
inc
pusha
movsb
pusha
jns
or
adc
inc
je
and
bswap
dec
mov
fldl
lock
xchg
stos
lcall
in
push
add
sub
lea
aad
sub
sbb
leave
sbb
mov
xor
dec
jns
aam
xor
mov
add
mov
adc
test
aam
rorb
insl
lds
inc
adc
int
and
shrl
lcall
inc
enter
lea
cmpsb
xchg
popf
sarl
movsb
and
hlt
cmp
and
sub
adc
xchg
stos
mov
jl
int3
popa
fcmovnu
mov
jnp
out
cmp
mov
cmp
sub
inc
test
sbb
call
adc
xor
cmp
adc
push
fldt
test
adc
out
sbb
sub
mov
je
fs
dec
push
add
sbb
ja
xchg
sub
mov
cmpsl
out
shrl
mov
inc
mov
fxch
sub
xor
out
cs
loope
push
sti
mov
jecxz
cmp
cmpsb
mov
lea
aaa
jns
push
mov
xchg
push
gs
je
in
enter
fildl
sub
popa
and
fcomp
sbb
lds
rorl
inc
fisubrs
or
push
jnp
add
fsubrs
loope
scas
aad
sbb
pop
or
push
lods
mov
xchg
fs
push
les
int3
lea
mov
sub
sahf
mov
xlat
jo
lea
pop
lcall
mov
cmp
repnz
push
push
push
adc
imul
push
sbb
push
rol
add
fisttpl
incb
arpl
lret
xlat
inc
cmp
dec
andl
mov
inc
ljmp
test
xor
pop
aas
test
lea
push
jae
pop
sbb
aaa
cmp
icebp
add
cli
insb
gs
inc
sbb
lods
cmp
mov
cmp
or
xor
mov
inc
mov
xchg
inc
mov
sub
inc
pop
inc
movsb
repnz
je
sbb
inc
imul
xor
test
mov
xchg
inc
mov
sbb
xlat
sbb
sub
cmp
or
push
xchg
sub
xchg
cwtl
or
xor
xchg
mov
jns
pop
std
xor
mov
cld
jae
jl
sbb
xlat
inc
scas
cmp
in
pop
mov
mov
jbe
push
and
mov
inc
mov
add
cmp
movsl
dec
loop
mov
lock
dec
and
cmp
test
fistps
lock
xchg
popa
aas
fsts
fiaddl
fs
testb
mov
fmull
jl
sub
aad
cmp
cmp
mov
mov
xchg
xor
out
sbb
xlat
inc
adc
std
xor
daa
mov
leave
or
mov
sub
xlat
inc
push
incl
add
div
in
fimuls
dec
pop
mov
es
jp
stos
dec
cwtl
int
popa
cltd
pop
lods
push
aas
jl
mov
and
out
in
lcall
jns
push
js
push
cwtl
push
push
pusha
cltd
inc
frstor
pop
and
repz
sbb
add
push
pop
adc
mov
dec
je
xchg
mov
pop
jle
sahf
mov
xchg
ja
test
mov
or
pop
mov
cmp
sub
lret
icebp
cld
cmp
dec
fiadds
push
dec
idiv
aas
add
push
fwait
mov
dec
inc
pop
es
lock
xor
and
dec
xorb
inc
popa
mov
add
and
ljmp
rolb
sbb
fisttpl
je
pop
cmp
inc
mov
loope
push
mov
cmp
inc
pop
outsl
sub
jb
insl
mov
jnp
repnz
mov
and
and
mov
adc
dec
fisttpl
pop
jno
cs
repz
add
lock
push
mov
test
push
dec
iret
cmp
rep
sub
and
enter
lahf
ret
and
out
mov
je
adc
sbb
xor
fsub
sub
or
scas
fbstp
sbb
ret
and
jecxz
and
inc
sar
or
insl
cltd
and
stos
or
push
dec
xlat
add
pop
jno
sahf
loop
lds
sahf
into
pop
mov
xorl
sarb
in
pop
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
enter
push
mov
jb
cs
cmpsb
mov
mov
loope
push
mov
jge
add
inc
test
sbb
rcl
imul
jecxz
adc
test
sbbl
les
mov
jns
push
xchg
sti
ljmp
mov
dec
pop
mov
dec
xchg
cmp
lcall
inc
add
roll
call
scas
push
push
popf
inc
std
loopne
pop
sbb
out
or
scas
inc
dec
or
mov
lret
subl
lods
subb
xchg
repnz
and
jo
out
pop
int
negl
pushl
sub
xchg
xchg
bound
ret
mov
adc
mov
adc
sbb
lsl
clc
jp
lahf
test
cmp
and
js
les
test
mov
push
adc
pop
pop
arpl
je
movsb
or
mov
test
jo
push
mov
xor
xor
or
and
mov
add
dec
inc
mov
and
std
movsl
cltd
aas
dec
and
sub
push
push
push
sbb
std
jg
pop
xor
jl
dec
sbb
cmpsb
loop
mov
and
sti
stos
adc
jp,pt
imul
jbe
fdiv
sbb
and
pop
cld
imul
hlt
cld
lret
and
xchg
lds
lahf
aam
sti
dec
push
push
int
iret
daa
inc
loop
dec
rep
in
mov
dec
xchg
mov
iret
fidivl
js
push
jno
lcall
imul
jmp
xchg
adc
push
dec
mov
and
shrb
xchg
jp
jbe
adc
out
test
cmp
gs
cltd
and
ror
ds
inc
cltd
shll
arpl
fistps
rcr
cmp
mov
xchg
jle
jle
pop
int3
jmp
enter
das
mov
sbb
shlb
in
dec
cmp
mov
dec
cld
adc
mov
cs
in
add
jl
cmp
mov
sbb
mov
fiaddl
push
pop
xchg
arpl
inc
jle,pn
mov
jmp
jp
adc
pusha
mov
stc
iret
pop
pushf
ljmp
outsl
and
je
sbb
xchg
and
pop
pop
xor
pop
cmp
in
outsb
and
xor
mov
adc
sahf
test
imul
or
test
mov
sbb
fwait
lock
add
daa
pmullw
adc
pop
mov
inc
jb
add
jno
adc
cmpsl
rorl
jnp
out
icebp
fcmovbe
jg
daa
mov
addb
test
jo
setg
push
sbb
mov
mov
loop
sbb
pop
sub
dec
dec
pop
stos
movsl
xor
ljmp
aas
pop
mov
ds
mull
add
sbb
loope
test
js
scas
mov
sbb
xor
adc
adc
sbb
fiadds
mov
stos
ds
mov
mov
dec
test
gs
inc
xchg
mov
movsl
jmp
inc
cmc
ret
scas
xor
add
xchg
negl
js
ret
mov
jge
lock
rcrl
lahf
xchg
jle
out
into
pop
ljmp
roll
bound
xorl
cmc
or
daa
sub
jecxz
nop
pop
pop
repnz
idivl
lods
push
lret
fidivs
adc
aad
cmp
adc
out
pushf
int3
hlt
and
repnz
and
jle
mov
sub
loopne
mov
push
mov
cmp
shrb
scas
and
cs
call
inc
pop
sbb
xchg
data16
jo
sbb
test
sub
mov
and
addr16
sti
pop
pop
and
fstpl
das
pop
cs
xchg
sbb
ja
mov
adc
test
fdivr
pop
ret
lods
adc
adc
jns
push
jle
jle
rcl
sbb
rol
cltd
jmp
aas
pop
jns
insb
fimull
mov
int3
mov
mov
testb
add
ja
icebp
inc
data16
cltd
lock
ret
orb
push
bound
pop
outsb
fwait
decb
sub
outsb
inc
out
add
inc
pop
adc
lcall
outsb
mov
mov
repz
xchg
lahf
mov
jno
xchg
orb
arpl
stc
and
ja
cmp
les
lods
nop
stos
or
and
jle
push
inc
in
out
mov
pop
fistpl
scas
pop
push
xchg
mov
pop
popf
rcrl
arpl
mov
lock
ja
ret
fldt
scas
arpl
inc
mov
adcl
ljmp
mov
xchg
sub
mov
sti
inc
cmp
cmpl
ret
and
stc
leave
roll
fldcw
push
mov
outsb
adc
push
dec
in
aam
aas
lods
iret
insl
lods
push
mov
mov
dec
sub
or
fwait
test
push
enter
stos
mov
aam
xlat
cmp
ss
xchg
fisttps
cmc
pop
dec
adc
aas
jl
ds
pop
sahf
pop
jo
wbinvd
dec
out
repnz
adc
xchg
fistpll
xchg
nopl
pop
pop
push
mov
nop
sahf
jnp
xchg
js
hlt
repz
sbb
pushf
push
mov
repz
stc
push
je
test
pop
dec
push
int3
out
lret
fs
jmp
ret
lods
adc
adc
pop
add
add
lahf
fstpl
sysenter
or
push
shll
sbb
fwait
into
out
xchg
sarl
add
jae
and
adc
fdiv
cmp
lret
bound
fidivs
outsl
outsl
inc
outsb
popa
out
outsb
jmp
or
dec
inc
into
jnp
sbb
nop
cmp
jecxz
sub
ret
cmp
sub
faddl
sbb
stc
adc
addr16
ss
scas
nop
mov
mov
adc
inc
repnz
into
enter
xlat
negb
sbb
dec
mov
push
jge
repz
jle
js
nopl
xchg
push
cmp
cs
pop
fdivrs
cmp
xchg
push
inc
inc
cmpsb
into
movsl
dec
dec
and
push
sbb
or
int3
ja
pop
insb
popa
or
push
movsb
popa
jmp
out
add
mov
mov
das
out
xor
sbb
pop
sahf
iret
or
sahf
dec
sub
sti
xchg
lret
sbb
inc
mov
psraw
insl
fisubs
add
les
sbb
sahf
imul
rcr
sti
dec
mov
sbbb
pop
pushfw
sbb
push
in
jnp
lock
stos
sbb
push
and
inc
mov
psubsb
mov
repz
out
sub
cwtl
pop
aad
fld1
mov
push
enter
jns
mov
idivl
mov
pop
movsl
fmuls
xchg
lcall
xchg
jns
mov
jno
mov
mov
lret
xchg
pop
pushf
mov
sbb
mov
cld
inc
rep
xor
jp
mov
xchg
mov
std
rolb
arpl
lods
les
clc
dec
push
repz
sub
mov
mov
mov
int3
mov
add
call
jae
xor
mov
xchg
dec
pop
xor
cmpsl
inc
test
pop
rcrl
jnp
sarb
and
adc
xor
mov
popa
fcmovu
mov
dec
out
lock
out
hlt
out
cltd
outsl
mov
pop
fistl
popf
cmpsl
pusha
xchg
mov
dec
cmp
and
in
or
mov
push
stos
lods
sarl
adc
ja
les
ret
mov
mov
inc
cwtl
dec
movsb
sahf
dec
dec
fsts
push
add
movsb
lea
lcall
jae
mov
fbld
add
xchg
sbb
xor
mov
popl
test
xor
dec
pop
out
jmp
pop
mov
movsb
push
std
lahf
in
lods
pop
test
mov
push
notb
addr16
dec
movsl
idivb
add
dec
pmaddwd
adc
cld
xchg
outsl
outsb
out
nop
xorb
xor
push
aas
sub
addr16
or
pop
insb
mov
movsb
mov
loope
call
adc
mov
mov
call
test
inc
je
rolb
sbb
es
loope
daa
ljmp
ret
popa
mov
pop
stos
out
lcall
sbb
bound
inc
mov
ja
or
loope
inc
add
outsl
shlb
leave
lret
xchg
out
xchg
popa
sbbb
mov
jne
mov
mov
rcrb
loopne
xchg
xor
dec
adc
add
mov
fbstp
fldl
and
jecxz
fisubs
fmuls
xorl
dec
mov
jmp
outsl
pop
inc
aam
mov
add
inc
fistps
inc
mov
xor
les
mov
xchg
mov
pop
xlat
lods
inc
out
popf
pop
pop
out
aad
in
mov
gs
out
and
cwtl
mov
fisttpl
stc
div
faddl
pop
sahf
loop
push
das
mov
push
xchg
xchg
or
stos
add
out
dec
js
sbb
cmp
sti
cmp
cs
lret
rorb
or
int3
mov
in
cmp
call
jbe
rolb
xchg
sbb
cli
or
mov
je
in
jecxz
popf
push
mov
push
dec
movsb
pop
loopne
push
dec
jl
call
cmp
mov
rep
push
insb
push
cmp
icebp
stos
push
sbb
xchg
aas
or
stos
daa
movsl
mov
pop
addr16
out
sub
outsl
test
add
int
es
jge
ss
jnp
dec
jl
mov
jmp
jmp
mov
jbe
adc
fildll
ja
cmp
add
insl
stos
adc
or
pop
fcmovbe
ss
xchg
leave
sub
cwtl
adc
cs
add
push
pushf
std
popf
stos
inc
loop
xchg
cltd
cld
adc
lock
test
xlat
jecxz
inc
xchg
push
hlt
andb
shlb
pop
sbb
mov
xor
ret
sbb
lcall
xchg
inc
push
xchg
jb
fsubp
mov
out
cltd
sbb
inc
sub
mov
outsb
das
adc
ficoms
fidivs
out
mov
leave
test
test
mov
hlt
out
xchg
mov
cmp
xchg
xchg
clc
into
push
mov
and
jns
test
inc
sbb
stos
push
aaa
sub
sbb
push
pop
xor
arpl
mov
or
int
leave
shrl
rcr
stos
ljmp
dec
imulb
test
outsb
mov
addb
inc
rcl
adc
mov
hlt
jnp,pt
or
cmpsl
dec
mov
xor
mov
mov
xchg
mov
imul
jbe
decl
lods
loop
xor
pop
sarb
out
xchg
mov
jb
test
add
jne
aas
mov
mov
das
jbe
fxch
push
fadds
cmc
je
imul
dec
sti
or
iret
lea
dec
xor
out
mov
aaa
insl
push
fistl
add
pop
stos
popf
cmp
jmp
cs
lock
fcmovnb
pop
cmp
adc
jns
sti
mov
mov
out
xor
pushf
lods
jae
lock
das
mov
xor
inc
ds
test
les
or
jmp
ret
and
xchg
std
in
fstp
push
push
loop
mov
sbb
or
lret
mov
test
popa
jecxz
addb
iret
gs
mov
out
out
test
mov
adc
adcl
and
nop
repz
push
test
mov
pop
in
sub
or
and
insl
xchg
insl
leave
ficoml
mov
cwtl
mov
xor
mov
mov
xlat
fs
jl
and
aad
icebp
iret
push
adc
dec
dec
std
nop
int
dec
outsb
dec
mov
inc
jl
mov
xchg
ljmp
int
and
stos
in
xchg
lock
fiaddl
sbb
pop
aam
imul
outsl
jp
mov
add
push
dec
inc
jns
mov
push
ret
pop
jns
jae
xor
and
sbb
sub
cmpsb
fistpll
ficoml
shll
dec
stos
push
fldcw
add
xor
rcrb
or
sbbl
ja
mov
pop
and
add
add
fistpll
and
fsubs
mov
insb
or
dec
lret
pop
sahf
inc
mov
insb
popf
out
or
pop
inc
lcall
call
mov
adc
xchg
in
dec
mov
adc
sbb
ljmp
xor
icebp
das
negl
imul
jb
das
mov
filds
pop
orb
scas
in
outsb
in
cmp
inc
adc
xchg
mov
inc
xchg
shr
inc
adc
pop
pop
or
ret
lret
jg
cmp
call
push
mov
jg
push
mov
jb
cmp
lods
dec
add
fwait
sbb
xor
stos
fisubl
hlt
pop
push
sub
mov
dec
mov
repnz
leave
int
test
xor
mov
cmp
push
aad
mov
inc
icebp
lock
cmovae
shl
lahf
push
jmp
xor
rcll
xor
into
jl
xchg
rcr
hlt
stos
add
jns
fcmovne
mov
inc
lcall
aaa
jo
push
popa
test
xor
ret
or
push
loop
nop
xchg
add
out
sbb
xchg
mov
add
lea
adc
inc
dec
arpl
mov
outsl
adc
dec
popf
mov
fsts
inc
mov
pop
jl
jae
cmpsb
mov
imul
pop
arpl
into
xchg
adc
sti
sbb
mov
pop
add
push
jmp
sub
out
pusha
stos
arpl
repnz
loope
or
mov
ret
data16
jg
add
addb
icebp
test
sub
rorb
lock
dec
push
mov
rclb
push
jmp
int
pop
jg
cli
ljmp
sbb
mov
daa
test
cmp
in
cmp
jmp
and
mov
mov
xchg
lds
adc
in
lock
push
ret
outsb
bound
jae
mov
pop
push
aad
mov
sbb
movsl
int
or
test
sbb
jns
and
push
add
and
jne
inc
fmull
inc
arpl
roll
jnp
icebp
scas
stc
pop
jnp
add
mov
pxor
mov
in
daa
sbb
push
ret
mov
pop
and
jecxz
adc
dec
mov
xor
cli
and
and
pop
sarb
adc
jge
out
std
lcall
fdivl
mov
in
inc
xor
mov
cwtl
stc
inc
mov
cwtl
arpl
rorb
cmp
xchg
shr
xchg
jne
or
add
pop
inc
pop
movsl
test
daa
dec
adc
test
fwait
je
xlat
fimull
ds
jp
call
and
dec
lods
iret
sub
dec
xchg
lret
mov
loop
in
sub
shrl
adc
fcmovnbe
and
sbb
out
int3
jae
imul
add
in
xor
dec
cltd
pop
loop
add
add
mov
and
ficompl
fisubrs
lret
scas
mov
ss
call
mov
mov
and
and
dec
jae
testb
cs
iret
dec
test
xchg
xchg
inc
push
dec
fcompl
mov
and
and
stos
jb
mov
imul
arpl
loopne
or
add
sbb
cmp
fsubp
inc
cmp
insb
mov
fnsave
in
pop
ss
xor
mov
mov
jbe
inc
shl
mov
or
inc
int3
cmpsl
imul
aad
insb
fs
arpl
adc
das
inc
inc
add
lds
and
lret
icebp
jecxz
repnz
int3
pop
jo
dec
xor
rorl
imul
and
or
cmp
ret
aad
in
or
dec
cmp
mov
inc
mov
jne
mov
dec
xor
lods
push
push
flds
jo
stos
icebp
test
xor
setge
inc
xor
fcmove
mov
mov
inc
or
int
xchg
adcb
sub
add
mov
leave
into
mov
imul
add
add
sub
imulb
mov
aas
pop
subb
out
jmp
and
or
fldenv
lods
push
lret
push
and
pop
push
aad
mov
mov
ds
sbb
lahf
int3
mov
sarl
lods
xor
popf
rcr
bound
jle
scas
xchg
jmp
cmp
xchg
aad
push
mov
syscall
test
rcr
sub
sti
mov
outsl
mov
ds
push
mov
fnstsw
jg
and
sbb
sahf
ss
fnstcw
mov
adc
and
inc
add
sbb
mov
jl
jg
add
ret
pop
addr16
in
push
adc
mov
orl
push
loope
pop
push
jle
lods
and
shll
test
add
loopne
jnp
inc
cmp
sbb
jbe
mov
std
adc
in
ljmp
mov
sbb
xchg
loop
in
mov
mov
jnp,pn
iret
pop
push
ret
push
sub
scas
sarl
sbb
add
add
cmp
cmpsb
jle
dec
rclb
or
fldenv
nop
cmp
jp
int3
lea
movb
mov
xchg
and
jl
cmpl
movsl
mull
inc
jmp
aad
out
mov
add
imul
mov
ret
and
imul
not
or
fidivs
shll
mov
inc
jp
movsb
mov
pop
movsb
ret
or
mov
fs
test
pop
mov
inc
push
or
rcll
fs
cltd
js
sub
ss
test
or
fwait
xor
push
jbe
xor
or
test
pop
add
repnz
sub
jae
mov
add
mov
pop
bound
xor
add
or
out
jl
cld
xchg
rcll
in
mov
jp
mov
push
dec
sbb
cmp
scas
es
mov
pop
pop
into
adc
fimull
in
push
scas
cmp
sti
xor
mov
pop
outsl
out
iret
and
xchg
ds
fistpl
cmp
mov
shlb
fs
inc
lahf
lea
pop
cmpsl
mov
push
xchg
mov
in
inc
xchg
shlb
jno
sarl
jmp
in
cmpb
sub
fildl
mov
dec
pop
inc
inc
fs
jno
cltd
inc
adc
int
xchg
in
stc
leave
das
xchg
pop
hlt
mov
and
mov
fdivp
data16
fcomps
into
test
jl
cmpl
mov
sti
and
fcmovnb
mov
adc
cmp
imul
js
pop
mov
subb
sub
js
jne
mov
lea
add
mov
out
mov
ljmp
movsl
sub
push
cmp
aam
int
nop
popf
cmp
pop
test
pop
pushf
mulb
push
rcl
loope
enter
or
iret
mov
sub
loope
imul
mov
pop
nop
mov
mov
dec
repz
jle
je
xchg
jae
mov
addb
mov
adc
movsl
cs
pop
in
xchg
push
xchg
lds
xorb
adc
and
pop
cltd
lods
lcall
xchg
add
je
mov
gs
fcom
adc
mov
fdivrl
push
xor
mov
lock
add
mov
aas
stos
scas
inc
pop
jns
inc
jl
rcl
cs
add
enter
jmp
and
mulb
arpl
and
out
push
fldenv
test
xor
aaa
sbb
inc
cmpsb
clc
mov
mov
test
cmp
mov
gs
jne
leave
add
and
out
cmp
hlt
mov
cmpsl
xor
arpl
dec
cmp
loopne
daa
stos
lods
out
pop
in
inc
insl
cltd
inc
cli
and
out
sub
repz
and
cmp
int
repz
ret
repnz
loopne
and
fists
adc
dec
imul
xchg
mov
xchg
inc
sub
shl
and
xor
jle
xchg
push
repz
les
mov
sbb
mov
jne
xchg
dec
dec
push
int
arpl
adc
fists
aaa
mov
je
mov
cmp
jnp
mov
jmp
mov
xchg
push
sbb
loope
dec
fmulp
mov
stos
lds
cmp
cli
js
jo
shl
arpl
adc
sub
mov
cmpsl
mov
mov
and
fwait
sub
cwtl
adc
mov
jmp
test
push
pop
mov
fldl
rol
pop
mov
cmpsl
and
fsubrs
imul
mov
in
pop
sbb
mov
xor
inc
push
jmp
lods
push
lods
inc
cld
daa
mov
sbb
pop
aas
push
insb
not
jl
nop
sbb
jo
cmp
sub
test
testb
xor
mov
mov
mov
ljmp
daa
dec
rorl
bound
orb
loopne
outsb
iret
cltd
sbb
loopne
subl
or
push
pop
lret
js
fistps
aas
inc
xchg
stos
sub
insb
xchg
cmp
jle
fcoml
pushf
mov
jecxz
loopne
aas
add
cmp
repz
sub
lret
mov
cmc
popa
jno
sbb
mov
ja
mov
jmp
or
icebp
addr16
add
fs
nop
cwtl
stos
cmp
push
or
and
imul
jnp
push
jmp
mov
mov
lods
inc
sub
leave
jle
cmp
mov
mov
movsl
cmpsb
sub
mov
sub
call
jo
mov
adc
inc
imul
js
sub
bound
arpl
mov
mov
out
out
rcrl
sub
sbb
push
or
jecxz
mov
fcmovne
fs
aas
rcll
dec
ficoms
cmpl
lcall
add
mov
fcompl
push
cmc
nop
adc
shlb
xchg
jl
sbb
pmaddwd
sbb
in
jmp
and
orl
mov
lods
rcl
sub
dec
mov
test
ss
hlt
test
repnz
outsb
bound
pop
sti
out
adc
call
cmp
enter
bound
test
popl
jns
adc
shlb
fcomps
popa
xchg
inc
mov
push
pop
sti
lea
jmp
push
and
jb
pushf
int
dec
in
popf
fiaddl
and
fists
mov
mov
adc
xchg
sbb
pop
sbb
popa
fcomps
pop
push
mov
jp
fs
lret
out
js
dec
dec
cmp
pushf
outsl
sub
sbb
in
movsl
fs
dec
cmp
mov
and
sbb
and
cmpsl
inc
mov
cmp
pop
push
xorl
push
ljmp
shlb
rolb
pop
adc
xlat
into
test
pop
pop
test
in
idivb
xchg
cltd
xor
mov
jle
jecxz
xchg
mov
leave
mov
xchg
lea
mov
cmp
jecxz
pop
insl
mov
call
fsubl
inc
ret
scas
pusha
mov
jecxz
xchg
fdivs
sub
bound
lods
test
add
pop
adc
jg
jmp
cmp
jg
mov
dec
add
add
cmc
stc
test
dec
pop
aam
test
sub
jnp
iret
mov
cmp
push
lcall
sahf
add
repz
loopne
repnz
bnd
insb
out
cltd
mov
mov
jl
sbb
jg
mov
pop
daa
popf
mov
dec
adc
loop
lds
loopne
pushf
xor
xor
xchg
aad
add
dec
lahf
cmp
adc
sti
mov
stc
addr16
jle
sbb
mov
cltd
pushf
ss
mov
or
xor
test
jbe
and
sub
rcll
insb
xchg
mov
jae
in
mov
testb
push
cmc
test
sub
jp
adc
sti
cmp
fnsave
push
fcompl
das
pop
mov
sub
jbe
cmp
negl
std
imul
mov
mov
notl
mov
flds
ljmp
call
xacquire
hlt
sti
cld
add
sarb
push
in
dec
ret
add
xchg
and
and
mov
movsb
data16
adc
add
jl
imul
xadd
sub
pop
pop
bound
ss
push
jb
mov
bound
popa
in
sti
imul
and
lcall
inc
mov
adc
fwait
std
pusha
ret
rcrl
jb
pop
lcall
hlt
aas
sub
shll
repnz
fxch
jns
icebp
push
cltd
sub
fwait
adc
clc
inc
adc
add
movb
cmpsb
ja
xor
and
and
dec
loop
imul
fucomip
push
sar
jp
xor
and
sub
bound
mov
scas
clc
sub
rclb
pop
mov
dec
xchg
mov
sbb
add
out
pop
inc
mov
mov
mov
fmulp
pop
cmpsl
call
pop
flds
roll
pop
shl
mov
pop
es
mov
dec
jle
or
lret
pop
fldcw
or
xchg
mov
data16
cmc
addr16
das
sub
shlb
adc
divl
push
or
mov
xchg
push
data16
cltd
mov
ret
addl
push
aaa
mov
daa
mov
xchg
adc
mov
pop
or
icebp
pop
pop
sbb
add
mov
mov
clc
xor
jb
inc
lock
loop
sub
sbb
out
popf
cmp
adc
xor
test
mov
rcrb
int
sub
cmp
sbbb
sbb
add
pop
lret
mov
imul
add
rcrl
jbe
inc
mov
or
xchg
sub
pop
add
cmp
in
push
mov
shrb
dec
shlb
add
fninit
push
or
mov
pop
test
xchg
test
xor
gs
fldl
jb
cmp
repnz
sahf
test
mov
inc
mov
mov
pop
fbld
push
fmulp
imul
sub
leave
jmp
roll
add
push
adc
insl
movsl
cs
sub
mov
std
xor
mov
jns
mov
push
xchg
pmulhuw
ret
divb
sbb
add
test
hlt
xchg
rcl
and
shl
outsl
lods
lods
pushf
shll
or
push
outsl
add
mov
cmp
aam
popa
mov
dec
cmp
or
mov
jbe
inc
xor
mov
ja
dec
dec
adc
fimull
out
gs
xor
push
add
cli
mov
xor
mov
mov
adc
in
dec
and
dec
das
scas
icebp
das
xor
jne
jle
or
mov
and
movsl
push
int
clc
test
cmpb
test
out
enter
xor
in
stos
pop
inc
mov
out
out
jne
pop
ffreep
sbb
sub
scas
jnp
inc
filds
mov
movsl
ja
jmp
aad
call
push
fwait
mov
mov
xor
add
in
add
testb
pusha
dec
popf
mov
cmpw
mov
cmp
shlb
mov
ljmp
subl
jb
mov
add
pop
sbb
mov
rcrb
aam
jg
mov
adcb
negb
pop
divb
jnp
sbb
faddp
out
clc
loopne
cli
in
mov
movsl
xor
jecxz
jmp
cmp
and
mov
add
or
mov
jmp
scas
outsl
sbb
scas
cmp
xor
dec
mov
mov
adc
xor
test
sbb
popf
cmp
cmpl
aam
iret
xchg
fildll
or
jb,pt
fidivl
test
cmp
daa
add
leave
fstpt
mov
insl
jp
lods
dec
enter
add
in
mov
xchg
sub
andl
sti
shrb
mov
popf
cwtl
int3
movsb
or
js
xchg
or
push
pop
in
lahf
aad
pmaxub
xchg
ja
sahf
mov
into
lea
sub
fistl
cmp
test
mov
push
mov
mov
push
aaa
lret
lea
cltd
lret
xor
lods
negb
or
push
je
ja
jnp
push
adc
pusha
inc
movsb
int3
pop
out
mov
jle
gs
dec
adc
mov
xchg
push
fs
fstpt
and
out
je
aam
in
cmpsl
je
xchg
mov
movsl
cmp
lds
add
mov
jnp,pn
ja
ret
jbe
pop
in
jne
jmp
pop
fwait
iret
cmpsl
jbe
inc
lods
pop
mov
mov
sub
xor
jg
inc
fnstsw
cmpsb
add
scas
mov
lcall
push
xchg
or
pop
scas
pcmpgtw
data16
into
mov
pop
add
jmp
test
mov
add
iret
mov
mov
insl
fwait
sub
fdivrs
or
icebp
mov
xchg
push
fnstsw
hlt
adc
jns
adc
and
xor
pop
or
add
mov
mov
jb
loop
aas
xchg
ss
sbbb
in
mov
hlt
sub
xchg
sub
rcll
dec
repnz
mov
mov
xchg
xchg
es
incb
pop
ficomps
in
mov
dec
push
lds
push
sub
stos
daa
mov
xor
jp
leave
and
mov
and
xchg
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
jg
ret
lret
sti
pop
jp
pushf
mov
cmc
cmp
cmp
sbb
xchg
js
jne
mov
jg
mov
or
cmp
fwait
das
in
xor
mov
jns
stos
dec
outsb
sub
and
xchg
or
in
lcall
xor
andb
aas
movb
dec
fwait
cmpsb
les
or
repnz
popf
or
mov
cs
pop
inc
sub
push
push
sahf
pop
xchg
and
loop
cmp
popf
mov
fstpl
fsub
pop
sarl
push
push
push
jge
cmp
sbb
out
sub
bound
xchg
andl
mov
jl
pop
xchg
repnz
dec
cmp
jl
fwait
std
sti
std
pop
shlb
ret
test
lahf
cmc
and
shll
jecxz
cmp
mov
test
jnp
and
ret
xchg
popa
movsb
inc
and
jnp
cwtl
int3
loop
push
push
inc
leave
jo
xor
inc
outsl
pop
push
inc
cmp
mov
gs
adc
sahf
dec
push
jns
xor
sub
jns
dec
push
or
or
cmc
std
pop
stos
mov
mov
cltd
sub
fsts
fs
daa
cmp
xlat
mov
jl
scas
out
shrl
jecxz
jmp
std
lea
fsubrl
daa
mov
push
scas
add
lahf
sub
stos
or
std
push
push
mov
mov
repnz
inc
cwtl
rclb
pop
push
aad
lods
filds
imul
ret
adc
test
lret
jmp
jmp
jp
outsl
fwait
pop
movsl
je
pop
xchg
clc
inc
aaa
mov
divl
shrl
notb
imul
fstl
insl
fiadds
sbb
insb
push
clc
mov
fstpl
dec
int3
lret
popf
daa
dec
cltd
cltd
ffree
pop
imul
andl
cs
pop
xlat
sti
push
es
push
imul
fbld
jb
dec
adcb
sub
sub
loop
les
mov
repz
xchg
cmp
addr16
cmpsl
add
inc
lds
xor
arpl
push
shrb
out
movsb
popf
hlt
dec
sub
sub
adc
mov
inc
lea
cltd
jne
mov
inc
jno
testl
enter
aas
cmc
loope
cmp
or
sti
mov
pop
je
addb
pop
mov
negb
rcll
sti
scas
pminub
repz
add
rol
jb
cmp
inc
sarl
inc
jo
jno
sar
sbb
add
adc
adc
mov
jg
adc
xor
leave
lods
add
cmpsb
ret
cmovb
pushf
test
arpl
aaa
xchg
je
out
daa
adc
pop
sub
lods
fdiv
repz
sar
mov
das
dec
add
in
push
cmp
cmp
inc
mov
xchg
mov
mov
inc
gs
pushf
ja
popa
and
pushf
push
movsl
adc
fiadds
dec
sti
outsb
push
adc
xchg
mov
dec
mov
and
repnz
jnp
hlt
test
dec
mov
ret
add
fdivl
aad
jmp
lds
fistpll
cmove
ljmp
daa
lcall
mov
test
cmp
lds
pop
sub
add
enter
loope
lods
fstl
jno
mov
mov
adc
push
and
test
aas
cmp
sbb
push
xor
xor
push
jecxz
std
fcom
shl
mov
int
mov
in
mov
add
shlb
sbb
xchg
mov
les
test
sbb
lahf
aad
dec
push
lahf
imul
lret
xchg
ret
sar
inc
xor
mov
adc
rorl
out
int
mov
ficoml
xchg
fisttpll
add
jne
sub
push
mov
sub
push
fdivrp
repz
ds
mov
xor
repz
mov
and
je
sbb
sbb
mov
mov
jl
jmp
mov
dec
cmp
dec
add
les
call
inc
rcrl
push
add
repnz
xorl
ret
sbb
mov
push
mov
lea
cmp
mov
fsubrs
repz
pop
movsb
cmc
iret
aaa
pushf
cmc
mov
cmpsl
jle
jge
or
adc
lods
mov
ret
mov
xchg
inc
add
jno
lcall
lods
ljmp
push
mov
inc
pop
je
mov
sub
mov
mov
mov
jo
int
jns
gs
mov
mov
pop
mov
fstps
xchg
jge
mov
pop
dec
jg
adc
mov
xchg
cmp
scas
es
dec
ds
sub
sub
js
mov
mov
adc
les
aam
jmp
clc
xor
in
aad
push
inc
pop
xchg
stos
shrb
pop
test
ret
rcrl
mov
cmp
in
imul
mov
pop
insl
cmp
mov
jno
xor
imul
test
jl
movsb
in
inc
das
loop
push
lret
adc
xchg
dec
push
sub
enter
inc
cmp
movsb
fnstcw
mov
push
mov
movsl
pusha
scas
outsl
rclb
mul
dec
jae
movsb
sbb
enter
or
and
sti
xlat
sbb
lods
adc
sub
xchg
das
in
mov
lcall
out
xor
sub
or
push
bound
dec
loopne
out
pushf
gs
mov
or
ret
inc
mov
cmpsl
inc
fidivs
inc
and
inc
add
and
out
adc
sbb
mov
mov
xchg
mov
in
or
mov
add
in
adc
push
pop
scas
filds
push
mov
pop
push
fs
xor
imul
lcall
xor
or
jnp
jbe
jmp
rcll
rcr
andl
xchg
and
add
mov
jp
mov
jecxz
outsb
ret
or
mov
or
mov
adc
das
aam
enter
sbb
pushf
xchg
jnp
push
or
sbb
rorb
movsl
scas
and
add
outsb
fbld
jg
add
xor
test
inc
jle
sti
test
mov
xorb
call
push
pop
addr16
push
dec
and
sbb
lahf
es
jne
jbe
ljmp
cmpb
xchg
popf
inc
in
fstpl
mov
cmpsb
mov
jle
into
xchg
adc
xor
dec
cltd
rcrl
shl
inc
jns
dec
repz
mov
bound
int3
jp
inc
xchg
call
stos
dec
cmpsl
imul
rcr
fcmovne
jne
jecxz
jl
xchg
iret
flds
roll
sub
sub
lcall
cmp
pop
shrb
jp
push
popw
addl
sub
dec
lods
paddb
jle
mov
xchg
mov
mov
add
popa
jne
stos
in
add
or
jb
jg
fstpt
ljmp
mov
ljmp
int3
insl
cmpsb
adc
add
pop
and
repz
push
jle
call
jmp
lods
push
and
or
fsub
push
cld
stc
and
sbb
scas
scas
cmp
dec
icebp
adc
ret
pop
jmp
sub
idivl
or
xor
jmp
mov
js
add
sub
inc
jbe
lret
jecxz
movsb
shrb
into
paddusw
mov
mov
sbb
sub
cli
xchg
push
pop
mov
xor
xchg
sahf
movsl
imul
jmp
mov
shlb
fldenv
iret
jmp
and
or
and
mov
lods
fcoms
leave
sub
fsub
push
or
sbb
sub
cs
out
je
cltd
call
add
jp
jae
pop
and
daa
sub
push
stos
xor
stos
xor
cmpsb
sbb
or
mov
enter
and
sti
jge
add
mov
sbb
inc
lcall
sub
rcr
sbb
insl
aas
jmp
es
jecxz
xchg
mov
out
pop
jmp
cmpsl
add
icebp
mov
xchg
mov
jbe
cmp
out
push
aad
into
leave
cmp
fst
shlb
xchg
mov
xor
stc
lods
dec
inc
or
test
mov
cmpb
pop
ljmp
fnsave
sbb
and
mov
hlt
lret
sub
and
mov
sbb
xor
inc
adc
cmp
into
xchg
cli
rorb
xor
lods
aas
stc
mov
pusha
lret
cmpsb
jecxz
xchg
fdivr
movsb
fidivl
sbbb
sti
pop
jmp
dec
jp
adc
dec
and
or
cs
sub
ja
jge
jl
xchg
outsl
ret
xchg
dec
pop
int3
jb
jnp
mov
rcrl
jg
inc
nop
mov
cltd
lahf
mov
push
out
mov
filds
das
pop
enter
fwait
sbb
or
insb
mov
pusha
push
push
lret
mov
pop
pop
lods
jo
es
dec
jne
pop
add
loop
lods
movsl
push
ds
lea
movsb
push
fsubl
sbbl
rcrl
es
jecxz
repnz
jmp
packsswb
jle
popa
jle
pop
and
jns
mov
pusha
lea
cld
fstpl
cli
mov
nop
jne
xchg
pop
cwtl
push
cmp
adcl
pop
sub
iret
jp
xor
ljmp
push
mov
insl
in
add
out
pop
mov
inc
int
jno
or
rol
and
popf
aas
lret
or
push
mov
jne
cld
xchg
ds
js
out
into
push
hlt
imul
sbb
loopne
cld
fistl
in
shll
into
adc
idivb
cmp
inc
ds
cmpl
test
imul
push
daa
pop
sub
rcrl
shr
xor
push
je
or
mov
sub
sbb
cs
cmp
sub
pop
addr16
jo
loop
push
and
mov
popf
inc
or
aam
sub
ljmp
mov
jne
inc
sub
daa
push
inc
daa
dec
push
mov
in
cmp
insl
loope
inc
pop
mov
or
insb
push
out
inc
nop
cwtl
movsl
stos
and
loop
int
inc
aad
outsb
push
inc
daa
jb
test
jecxz
cmp
fs
mov
rorl
ret
hlt
jp
mov
stos
adc
mov
loopne
or
mov
lods
outsb
lret
in
imul
mov
jg
push
movsb
inc
dec
ret
cmpb
ret
stc
dec
data16
xor
test
sub
mov
call
xor
mov
addr16
stos
mov
pop
scas
mov
pop
and
push
stos
adcb
sarl
shrb
sub
mov
sti
cli
in
push
cmp
cmp
xchg
sti
cli
insl
sub
pusha
in
push
jp
test
aaa
aas
mov
jns
sub
shrl
inc
dec
test
test
add
pop
into
mov
movsb
mov
ret
sbb
push
xor
pushf
ljmp
stc
sti
ss
sub
fisubrs
jb
or
imul
cmc
mov
mov
int3
cld
dec
pop
inc
push
jae
jecxz
fwait
les
sbb
xor
cli
mov
adc
repnz
sarl
dec
popa
or
movsl
mov
cmp
sbb
xor
sub
stc
icebp
jmp
dec
sub
test
ds
inc
pop
xor
lahf
lret
adc
and
jge
arpl
subb
xchg
add
fcomps
sbb
push
xchg
in
lahf
fcompl
jb
and
xchg
scas
negl
pop
push
out
and
in
cmp
or
ljmp
scas
pop
and
add
lahf
cs
xor
addl
push
out
lods
fimuls
adcl
sub
iret
shll
mov
or
push
mov
push
push
inc
loopne
scas
mov
mov
test
sbb
repnz
xorl
sbb
mov
pop
lea
mov
sahf
pusha
adc
inc
lret
push
sbb
stc
rorb
sbb
mov
mov
loope
xchg
arpl
xor
fistps
pop
out
mov
cmp
jno
int3
sti
imul
fmuls
adc
xchg
and
outsl
mov
fildl
dec
fxch
imul
cltd
inc
std
and
sbb
dec
push
mov
ret
stos
jne
jnp
push
rolb
dec
les
je
mov
lahf
dec
in
jp
jno
add
cmp
dec
jns
daa
jge
popf
sbb
jno
aas
aad
lods
stos
cmp
xlat
add
sar
cmpsb
gs
xchg
and
jbe
mov
push
fcompl
xor
sbb
sub
cli
push
push
push
mov
xor
sbb
out
sbb
stos
and
enter
add
into
lods
sub
js
jp
mov
or
dec
mov
push
fisubrs
call
mov
outsl
fisttps
addr16
xchg
push
push
lds
into
mov
imul
pop
pop
loopne
imul
mov
jne
jecxz
dec
mov
push
repz
mov
pop
jb
scas
gs
inc
std
loopne
dec
jbe
add
push
pop
rep
add
inc
hlt
jmp
mov
shlb
adc
pushf
mov
add
xchg
mov
lods
add
sahf
sti
cmp
stc
hlt
xchg
jmp
mov
dec
adc
mov
in
cmp
push
cmp
cmpsb
cltd
popf
mov
stc
mov
dec
dec
hlt
push
in
lea
mov
gs
aas
out
lret
xor
int3
jge
dec
inc
lds
lods
mov
jmp
xor
jp
shll
clc
xor
sbb
out
or
mov
adcl
divl
cli
jmp
xor
repnz
jmp
stos
mov
mov
push
popf
and
mov
aam
or
sbb
icebp
insb
lds
fadds
mov
divl
aaa
xchg
scas
mov
xor
daa
sub
scas
xlat
cmp
inc
nop
push
call
call
adc
cli
mov
popf
cmpb
xor
push
inc
inc
adc
fnsave
pop
dec
xchg
add
jmp
ret
insb
lcall
and
out
orb
les
mov
pand
cmc
stos
mov
into
jo
movsb
mov
mov
mov
outsb
mov
mov
mov
cmp
int3
pop
push
jle
add
push
test
lahf
pop
ss
imul
lea
rclb
stc
or
aas
xchg
jl
lock
xchg
aam
nop
loopne
aaa
sbb
cmp
push
es
sub
aad
lret
xchg
je
pop
add
into
mov
add
or
sub
add
imul
data16
adcl
mov
stos
push
test
bound
pusha
mov
mov
mov
imul
push
insl
jns
jmp
aad
add
mov
repnz
popf
dec
pop
cmp
jle
in
dec
subl
push
sahf
push
dec
cmpsl
add
stos
dec
add
mov
mov
fs
out
jl
cwtl
pop
sub
ja
mov
int
cmp
mov
jmp
iret
lods
test
shlb
leave
aaa
aam
hlt
dec
mov
rolb
icebp
jg
lahf
js
call
or
aas
add
push
adc
lret
jns
ljmp
aas
or
icebp
jne
pop
sub
clc
adc
xor
adc
es
jae
lock
repz
fcmovbe
mov
push
mov
lahf
sahf
andl
push
jp
inc
jl
sbb
imul
push
cmp
ret
lret
imul
jl
es
test
insl
xchg
sahf
sub
popf
push
hlt
jge
jns
add
sub
fcomi
xlat
mov
outsb
outsb
adc
cwtl
sbb
mov
adc
inc
pop
adc
ds
neg
mov
inc
ret
xlat
out
inc
mov
fstps
icebp
out
mov
jns
imul
sub
sbb
aad
push
fldt
jge
test
leave
xchg
rcrl
neg
pop
cmp
je
adc
outsl
nop
clc
mov
enter
outsb
movsl
or
dec
cmp
add
mov
push
jnp
repz
stos
push
out
fisttpll
sub
sbb
movsl
repz
mov
into
sub
mov
mov
jecxz
daa
aaa
aad
and
ljmp
and
pop
or
mov
adc
xorb
lods
mov
xorb
mov
pop
scas
pop
std
int
test
mov
cmp
out
jle
pop
dec
fs
mov
and
adc
lea
iret
jmp
pop
aas
cmp
mov
mov
or
sti
fistpll
jae
rorb
rclb
mull
push
jle
dec
pushf
jo
adc
sub
aam
lret
dec
les
js
enter
test
or
addr16
movb
stc
sbb
mov
loop
dec
jmp
fsubrp
pop
mov
xchg
test
jns
jmp
xchg
daa
das
int3
xchg
aaa
mov
and
mov
int3
call
cmpsb
in
daa
sub
mov
mov
pop
adc
out
lods
mov
aas
cmp
cli
jg
loopne
dec
scas
testb
test
pop
fimull
popf
inc
inc
vpsubsw
dec
sarl
xlat
icebp
adc
mov
sub
loope
fcoml
push
push
es
jae
inc
and
mov
adc
les
pop
add
and
ds
push
int3
je
sti
mov
loopne
jge
push
adc
lahf
in
shll
push
js
inc
movsl
jbe
pop
cmp
outsb
dec
aam
sbb
cmp
es
xchg
push
cs
ret
sbb
jp
scas
sbb
lcall
mov
sub
add
push
insl
add
stc
xor
cmc
sub
sub
out
fsubs
jnp
insl
mov
aad
mov
mov
mov
jp
or
inc
arpl
mull
mov
aad
push
rclb
scas
xor
rcrl
and
insl
cmp
push
insb
jne
incb
daa
sub
fldenv
andb
jmp
jle
test
aaa
loope
mov
cmpsb
xchg
cld
shll
int3
push
mov
in
push
cli
sub
icebp
mov
adc
imul
mov
insb
mov
pop
mov
jge
dec
je
lods
pusha
fsubrl
sub
xlat
mov
arpl
mov
xlat
jae
ljmp
jo
mov
testl
cltd
push
loop
gs
movsl
mov
scas
jmp
push
int
mov
ja
aas
sub
call
pop
mov
int3
pop
sbb
inc
inc
dec
in
or
cwtl
or
lcall
jmp
sbb
std
imul
subl
pop
or
pop
scas
pop
arpl
shrb
les
and
std
pop
xor
lods
push
rorb
fcoml
jo
pop
rol
arpl
lea
lret
outsb
and
int3
xchg
dec
adc
stos
clc
inc
aad
push
lods
lahf
xlat
and
test
idivb
leave
add
dec
mov
dec
mov
mov
stos
imul
pop
sub
fldcw
lahf
in
cmp
sub
mov
cli
cld
or
cs
movsl
push
in
or
sahf
ret
mov
push
ss
fs
das
mov
xchg
mov
push
cmp
dec
and
adc
jmp
xchg
daa
xchg
out
negl
dec
ret
xchg
push
enter
cli
adc
mov
sub
xchg
jl
cld
fistpll
les
push
jle
cmp
dec
jg
dec
add
cmp
sbb
xchg
sbb
jne
imul
stos
je
mov
out
cmp
xor
xchg
fdivp
push
jecxz
divl
stos
fcoms
adc
xor
ret
pushf
mov
mov
lock
xchg
inc
das
int
inc
fldcw
lods
push
aaa
xor
and
sbb
stos
out
and
sbb
xchg
les
lahf
xor
adc
xor
jo
mov
jle
add
jle
sub
push
inc
mov
cmpsb
lods
or
adc
mov
dec
jle
inc
jns
add
jb
les
mov
pushf
cld
testb
mov
jmp
roll
imul
push
inc
dec
in
fwait
pop
fistps
fdivrp
jae
out
cmp
push
data16
out
xchg
adc
push
sub
ret
lock
stc
loope
int3
cltd
into
mov
push
mov
test
das
mov
jbe
xchg
ss
push
cmp
shrl
es
fwait
mov
mov
sbb
xor
movsl
mov
cli
and
mov
call
aas
fwait
jbe
jne
or
sbb
sub
dec
insl
das
mov
pop
popa
push
filds
pop
loope
jmp
mov
and
bound
enter
adc
push
dec
mov
outsb
push
fiaddl
movsb
ja
xchg
inc
nopl
inc
cs
mov
loop
xchg
sub
jbe
in
test
pop
insl
jecxz
lods
pop
dec
dec
mov
push
lods
push
pop
sbb
insl
test
jo
push
aas
mov
repnz
je
sbb
xor
xchg
mov
test
dec
xor
mov
insl
or
rorl
int
mov
lret
push
scas
lds
mov
inc
pop
mov
push
aad
stc
push
sahf
out
mov
mov
or
dec
mov
mov
dec
negb
movsb
es
push
pop
push
fs
xchg
add
fwait
mov
les
xchg
ja
pushl
imul
rcrb
sub
jle
sub
fidivrl
cli
lret
add
jne
mov
loope
adc
shrb
push
mov
insl
xor
mov
stos
inc
xchg
push
or
dec
bound
push
push
std
cmpsl
andb
xor
shll
sub
lds
enter
adc
sbb
jbe
xchg
repnz
daa
push
xor
lea
xor
les
cmpl
jae
insb
aam
cs
mov
and
inc
inc
adc
test
arpl
roll
mov
movsl
out
pusha
add
pop
loope
loopne
aad
or
cmpsl
int
cmc
sbb
vpsrlw
add
std
das
cwtl
and
dec
mov
testb
push
das
popa
xor
dec
loop
adc
sbb
je
shl
mov
sub
mov
idivb
mov
xor
shr
fwait
popf
fucom
loopne
sbb
mov
shrl
cmp
lcall
lret
jg
xorl
mov
jp
in
decl
cli
sub
pusha
push
dec
leave
es
sbb
repz
fstl
cmpsb
gs
and
or
aad
push
lods
cmp
pop
sub
loope
pop
lea
ret
or
inc
pop
sub
adc
imul
add
cmp
je
add
mov
cmp
mov
jae
mov
mov
cwtl
mov
add
inc
pop
xlat
mov
clc
incb
out
sub
mov
out
idivb
sahf
xchg
push
into
push
nop
adc
push
or
rcrl
sbb
cmp
cmp
out
and
mov
xlat
into
scas
outsl
pop
mov
push
lcall
fcoms
hlt
push
or
pop
jle
test
sub
mul
xchg
popa
lcall
pop
popf
movb
dec
fmull
push
sbb
repz
mov
fldl
insl
stc
out
loope
and
lods
insb
iret
js
jle
insl
mov
test
and
jmp
in
roll
xchg
sub
out
mov
push
pop
ds
and
aaa
adc
popf
jmp
adcb
dec
lret
xor
mov
stc
cli
gs
and
dec
movsb
adc
imul
icebp
cld
add
pop
sahf
sbb
cmp
mov
popf
xchg
pop
mov
std
je
cld
in
aaa
sar
push
mull
fisttpl
ret
or
xchg
clc
mov
out
xor
pop
add
arpl
lcall
push
mov
clc
mov
popa
punpckhwd
das
mov
jae
rcll
mov
sti
and
popf
inc
add
call
mov
xor
adc
xchg
call
sbb
int
jnp
mov
dec
or
sarb
hlt
jnp
or
movsb
pop
jp
sahf
fildl
aaa
push
clc
pmulhw
cwtl
push
xor
mov
xchg
rorb
sbb
dec
lcall
and
add
jbe
enter
in
adc
and
jnp
push
lcall
jecxz
add
mov
fsub
pop
cltd
sarb
cmc
xor
mov
push
add
xor
sahf
lods
clc
mov
add
rorl
push
pop
cmp
leave
ret
inc
sbb
cmp
mov
jae
shlb
and
adc
push
cmpsl
and
xor
fs
fstpl
out
push
ss
dec
sbb
lret
movsl
xor
mov
mov
mov
lcall
adc
adc
mov
mov
mov
mov
cmp
mov
jae
mov
ja
jmp
sarl
shlb
mov
sbbb
pushf
pop
out
in
sub
mov
loopne
aad
xchg
aas
insb
pop
pop
cmpsl
daa
push
imul
push
add
mov
xor
or
mov
shlb
in
loop
mov
lea
xchg
mov
jmp
testb
pop
nop
dec
xor
jnp
imul
xchg
jl
jl
cs
addr16
xor
jecxz
bswap
jbe
push
sbb
movsb
cmpl
hlt
and
movsl
xchg
aad
ror
inc
dec
add
fimull
mov
stos
fcmovnb
out
hlt
dec
dec
jmp
cmpsl
sub
xchg
xor
fwait
sahf
icebp
pop
jno
mov
and
jg
inc
add
inc
fs
jno
iret
rorl
outsb
int
xor
call
gs
mov
ret
pop
cmp
inc
shlb
insl
pop
addr16
jns
int3
out
jp
cmp
out
xchg
adc
into
mov
add
jnp
subb
mov
in
pop
pushf
adc
inc
inc
inc
hlt
shl
cld
or
push
or
pop
sub
pop
in
pop
outsl
cltd
xchg
mov
rcrb
push
jo
sub
scas
push
ljmp
in
sub
or
outsb
lea
cmp
lock
mov
incl
mov
or
in
cmpsb
adc
sub
aaa
lods
daa
or
mov
jl
jbe
fisubrl
fcomp
lea
mov
jbe
test
add
jg
dec
mov
mov
imulb
adc
mov
mov
mov
mov
inc
and
cmp
popa
push
cwtl
inc
mov
mov
push
pop
push
pusha
and
cmp
sub
jns
fsubrl
lods
scas
pop
xor
mov
imul
jmp
enter
scas
or
dec
add
jb
jb
add
push
cmpl
or
outsl
icebp
add
icebp
cmc
sub
pop
nop
mov
inc
out
ret
loopne
xchg
xor
insb
hlt
movsb
pop
inc
movsl
and
xchg
jge
mov
fcoml
bound
mov
pusha
add
adc
loope
mov
test
ds
rcrb
push
cmp
xchg
push
test
fbld
iret
jae
push
mov
fldt
lods
dec
fsubrs
fcmovb
jbe
mov
fidivl
shl
lea
notb
faddl
int3
fdivrl
lahf
lea
loope
adc
sbb
adc
or
out
fld
inc
js
pop
mov
cli
xor
loopne
lea
push
pop
xchg
outsb
mov
loope
std
dec
mov
inc
push
leave
add
imulb
xchg
nop
xchg
aas
dec
sbb
adc
cs
cmp
push
mov
jb
hlt
inc
mov
cwtl
push
stos
addb
push
adc
sbb
xchg
stos
add
fwait
jbe
inc
xor
fsubl
les
add
std
faddp
cli
lret
inc
jle
lret
test
or
stc
xchg
aad
mov
lahf
xchg
xchg
or
aaa
xor
pop
jno
adc
je
shl
call
mov
in
mov
mov
xchg
xchg
mov
push
or
outsb
sbb
bound
adc
in
cmp
call
mov
aas
call
dec
imul
sub
dec
ja
jp
cmc
cmp
js
scas
cltd
mov
and
sub
push
xor
icebp
clc
push
imul
ds
mov
pop
aam
lcall
shr
and
pop
dec
or
dec
dec
xchg
cmp
sub
aaa
push
stc
and
jne
repnz
popf
popf
jbe
leave
and
mov
scas
fldenv
sub
add
jb
cli
adc
inc
inc
jns
mov
scas
movsl
pop
or
inc
pushf
shl
mov
inc
in
scas
inc
jmp
iret
es
pop
or
push
or
dec
lret
ja
jecxz
mov
mov
jno
cld
mov
push
fimull
jo
xchg
loope
sbb
add
add
lock
mov
and
pop
pop
and
jbe
xchg
sub
je
pop
mov
mov
fimull
pop
ja
mull
arpl
xchg
add
rorb
mov
adc
mov
pop
subl
add
or
fsubrp
mov
in
test
or
js
dec
mov
dec
xor
mov
pop
push
inc
adc
mov
sbb
mov
pop
sbbl
sarl
jecxz
pop
lds
cwtl
js
popf
in
testl
bswap
mov
inc
rolb
mov
push
dec
sbb
leave
aam
sti
insl
xchg
xchg
clc
mov
fcmovu
sub
cmp
xchg
bound
push
cmp
iret
adc
sub
out
pop
call
jo
je
sti
mov
js
push
sahf
cmc
mov
nop
add
add
lret
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
pop
push
inc
jbe
in
inc
cwtl
rcrb
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
jbe
outsl
lea
add
repz
add
jl
lcall
inc
popa
icebp
lret
xchg
pop
shl
sbb
ret
mov
sbb
push
das
or
dec
aas
dec
xor
or
xor
pop
loop
out
mov
out
sub
leave
and
les
aas
mov
popf
imul
inc
rcrb
jmp
cmp
ficompl
dec
pop
or
inc
dec
mov
movsb
out
sub
or
cs
lock
mov
mov
lods
cmpsb
pusha
mov
out
mov
mov
loopne
or
add
cmp
fnsave
fs
test
shlb
out
test
roll
cmc
les
out
dec
xchg
ljmp
test
stos
sbb
xor
push
jb
subb
shl
adc
les
sbb
cli
xor
fsubrp
sbb
js
out
out
popf
inc
outsl
add
push
push
sbb
jne
jle
dec
lahf
outsl
stc
sarb
mov
sbb
lret
cmc
ret
adc
sub
clc
inc
test
ret
lods
sbb
stc
or
js
push
push
mov
or
je
mov
pop
push
inc
sub
ss
jns
dec
popa
sbb
icebp
xor
iret
dec
shr
mov
popf
mov
ja
sbb
add
mov
xor
mov
cmp
dec
pop
testb
mov
pop
rcll
loop
lahf
ss
dec
lock
insb
sub
xchg
jnp
mov
jl
xor
mov
mov
scas
mov
xor
in
jp
in
int3
xor
jo
mov
call
push
ja
std
and
imul
or
out
data16
imul
lret
aam
call
pop
repz
push
mov
test
sbb
pop
xor
iret
int3
repnz
cmp
sbb
mov
loop
mov
sbb
fdivs
cld
inc
sti
pop
into
xor
add
mov
push
leave
add
pop
lea
ds
cs
das
pop
shlb
and
scas
xor
scas
adc
adc
mov
xchg
out
cmovb
dec
andl
sbb
xchg
mov
fwait
xor
out
test
mov
cld
lock
addb
push
pushf
pop
sarb
out
cmp
add
jmp
push
and
xchg
jo
sarl
cltd
push
mov
pop
dec
loope
scas
jg
in
in
mov
out
push
inc
dec
ljmp
dec
notb
add
cmp
push
aaa
and
cmp
fmuls
pop
fidivrs
imul
push
xor
pop
jae
mov
scas
and
sub
xchg
int
aad
add
es
sbb
inc
pushf
jmp
and
pushf
rcl
test
mov
pusha
loope
and
mov
dec
mov
or
dec
push
jecxz
mov
fistpll
dec
cmp
jnp
mov
jp
notb
daa
mov
sbb
add
xchg
das
mov
cmp
aas
mov
or
test
jg
data16
xor
xchg
push
cmp
jl
ficompl
xchg
add
and
sarb
pop
or
addr16
add
in
sub
mov
and
mov
ds
cmp
gs
test
insb
hlt
cmp
popf
loop
int
sbb
lock
push
ret
jg
dec
add
jae
pop
mov
stos
sbb
pushf
in
inc
xorb
lea
xor
cmp
into
and
mull
das
sbb
into
adc
mov
popa
ss
ret
je
cwtl
pusha
jge
cmp
jb
pop
dec
movsl
sbb
hlt
cmp
dec
pop
mov
enter
inc
jp
xor
leave
jmp
and
mov
sbb
je
cmpsl
mov
sub
push
lods
cli
sti
xor
outsl
repnz
pop
test
sub
pusha
cmp
mov
sahf
pop
jge
pop
jae
popf
mov
push
inc
lock
in
fcoml
mov
cmpsb
repnz
das
cmp
int3
jl
mov
test
jno
and
adcl
jg
scas
sub
addb
inc
jmp
lahf
sbb
jp
push
ja
xchg
add
rcll
xchg
cmp
xchg
sbb
mov
ljmp
xchg
mov
fisubrl
mov
bound
in
in
cmpsl
lock
xor
cmp
add
add
push
sbbb
fistpl
add
add
repz
add
imul
rorl
stos
or
test
mov
out
push
mov
ljmp
adc
jle
or
and
es
subb
mov
nop
bound
lds
xchg
xchg
inc
fdivr
pop
loopne
and
stos
or
scas
jbe
cwtl
cwtl
xchg
inc
bound
mov
icebp
hlt
loopne
out
out
es
in
dec
icebp
scas
mov
push
and
cwtl
cmp
leave
sub
cmpsl
test
mov
mov
push
mov
cmp
inc
fucomi
xorb
and
jmp
pop
cmc
cs
imulw
outsb
push
xor
cmpl
jns
movsb
push
icebp
mov
lcall
cmpsl
xchg
and
sbb
test
xchg
lar
jne
xlat
js
movsb
outsb
xchg
pop
xor
sub
test
and
mov
inc
in
push
cmp
shlb
inc
imul
mov
cmpsl
jmp
mov
jp
push
aad
ret
jecxz
fistpl
shlb
rorl
push
testl
pop
jne
int3
mov
stc
mov
jecxz
imul
xlat
cmp
or
cmpl
push
test
nop
pop
sub
jge
add
sbb
dec
pop
xchg
cld
jae
test
pop
add
js
shlb
push
fcmovnu
cli
pop
xlat
or
jmp
pop
jge
sub
xchg
pop
ficompl
or
xchg
mov
loopne
jnp
jo
ljmp
hlt
cmpsb
or
jno
push
sbb
lcall
push
insb
cmp
push
iret
sub
push
lret
dec
aaa
mov
dec
xchg
cmp
or
adc
repnz
imul
adc
add
in
jge
cwtl
fwait
clc
xchg
adc
icebp
and
dec
mov
jns
sub
in
into
in
jnp
pop
dec
sbb
pop
push
sahf
sub
jns
mov
sbb
sbb
push
xlat
xchg
xchg
sahf
lcall
loop
xlat
stc
fwait
rcrl
hlt
jmp
fucomp
dec
mov
push
sbb
jle
jmp
arpl
in
dec
shl
movsb
ret
xor
rclb
sarl
xchg
jmp
shl
cmp
ja
lea
inc
pop
imul
test
adc
loop
roll
jb
ror
push
movsl
pop
push
pop
arpl
sbb
inc
scas
ja
xchg
add
push
movsl
repnz
jae
mov
dec
ljmp
jae
in
add
rorb
mov
call
sbb
fdivl
es
shr
mov
mov
or
stc
rolb
jb
les
aaa
fdivs
in
and
fisubrs
sahf
dec
test
shll
mov
imul
sbb
std
push
jb
bound
and
jmp
adc
ret
or
out
cmpsl
xchg
stos
dec
jb
or
mov
and
rcr
rorl
arpl
mov
pop
in
sub
or
push
mov
xlat
xor
jp
punpcklbw
jecxz
inc
cmp
push
sbb
lods
js
inc
mov
sbb
dec
loope
mov
adc
iret
fsubs
lock
cmp
inc
cltd
insb
jbe
or
and
int
push
das
mov
sbb
push
insb
or
pop
xlat
aad
sbb
pop
xchg
dec
xchg
loop
aas
mov
cld
icebp
cmp
inc
xlat
cmp
adc
test
cmp
xchg
push
adc
adc
stos
mov
xor
sbb
cld
addr16
push
sbb
lods
mov
xchg
and
sbb
or
pop
ret
scas
cmp
scas
into
mov
rcl
int3
xchg
hlt
and
js
jae
cmpsb
cltd
rcrl
cmpsl
pusha
cs
xchg
lods
mov
mov
das
mov
rcrl
fs
idiv
jns
lret
pop
out
xor
out
outsb
lret
fwait
rcll
jno
sti
sbb
mov
sub
ja
lret
xchg
xchg
push
insl
sbb
push
shrl
cmp
ret
into
outsb
cmc
jo
pop
ja
insl
testb
push
jp
add
inc
sbb
xchg
popf
mov
hlt
jmp
es
xor
inc
mov
push
ss
lcallw
lods
add
add
add
jne
cmpsb
jg
mov
jae
addr16
mov
repz
add
das
dec
sahf
ds
mov
xchg
dec
xchg
push
adc
jl
jno
mov
push
mov
test
cltd
loopne
leave
push
fisttpl
rcrb
pop
mov
ja
pop
in
shl
jmp
ror
cmp
test
repz
add
jg
mov
popa
movsl
in
sub
xor
js
cmpsb
mov
ds
ret
mov
add
lcall
lods
cmp
or
ljmp
es
call
mov
ret
dec
lock
or
ret
mov
imul
inc
and
mov
test
sub
out
out
hlt
shrb
fsubr
out
mov
adc
je
adc
push
fwait
add
cmpsb
ret
nop
pop
xchg
mov
and
jbe
mov
std
cmp
lock
adc
sbb
out
aad
xchg
inc
mov
inc
imul
push
push
and
and
int
out
or
int
pushf
in
ret
sti
cld
pop
xchg
lea
js
ret
test
lds
pushf
aad
das
cmpsb
sub
jmp
lret
movl
sar
out
or
sub
dec
insb
fisttpll
fsubp
xchg
xchg
mov
dec
xchg
add
cmp
rol
add
jle
pop
push
lea
rol
fdivr
dec
xchg
sbb
idivb
mov
xchg
insl
fldt
xchg
pusha
fisubrs
add
cltd
in
loope
repz
xor
and
sbb
cmp
scas
test
mov
dec
lock
fs
outsb
xchg
movsl
xor
sub
mov
cmpsl
repz
xchg
scas
cvttps2pi
and
loopne
add
movsl
mov
arpl
jge
les
jecxz
inc
sbb
jl
call
sbb
jl
addr16
push
and
cs
bound
insl
pop
pop
rcl
and
scas
arpl
int
scas
mov
inc
fnstsw
add
xchg
fbstp
pop
or
mov
ret
out
or
icebp
jmp
push
push
in
andb
iret
fs
mov
push
arpl
sahf
mov
movsl
lea
lods
jge
push
dec
add
aas
jne
in
fisubrl
roll
inc
je
mov
dec
xchg
divl
mov
xchg
mov
movsb
pop
add
ret
jmp
lret
das
loope
imul
mov
scas
es
xor
movsb
inc
ss
jge
bnd
outsb
mov
cmp
add
or
adc
add
shrl
in
sbb
add
inc
mov
sbb
sbb
aam
insl
adc
push
aam
push
and
dec
addr16
push
shll
jb
sub
mov
arpl
scas
loopne
test
sub
ljmp
add
add
mov
dec
cmp
mov
testb
xlat
push
test
sbb
fnstcw
dec
jns
repz
xchg
bound
cmp
std
mov
pop
fsubp
addl
das
xor
lock
pop
xor
addr16
stos
fisubl
mov
mov
or
movb
mov
scas
repz
cmp
pop
adcl
mov
adcb
xor
and
cmp
jnp
push
scas
in
push
in
mov
mov
cmp
das
push
je
int
pop
cmp
mov
sub
sti
movsb
xor
sbb
cld
das
ja
mov
cmp
icebp
fcoms
sbb
push
cmc
cmpsl
jb
adc
into
mov
lods
sbbl
iret
fsubs
adc
fmul
push
dec
add
loopne
xchg
adc
push
inc
mov
mov
out
stc
pop
addl
lods
adc
jmp
mov
xchg
push
or
xchg
je
mov
mov
mov
cmc
pop
pop
stc
jnp
push
and
add
fmull
pop
popf
pop
repnz
fsubrs
dec
ljmp
sbb
and
or
cs
fsts
inc
arpl
fisttpl
and
mov
inc
mov
mov
cltd
cs
stos
cmp
cmp
mov
and
dec
shlb
mov
mov
push
addr16
mov
scas
pop
cmp
pusha
cmp
adc
fnstcw
ljmp
ret
xor
add
add
clc
pminsw
idiv
repz
lret
lcall
repz
add
mov
inc
cmp
fstpl
test
negl
sub
mov
dec
and
lods
or
sahf
and
jl
dec
xor
fnsave
cmp
cs
sub
adc
data16
fidivs
pop
cmp
nop
in
outsl
push
mov
out
dec
mov
add
sub
call
jbe
fcom
in
xchg
mov
cli
adc
insl
sbb
shll
mov
mov
fists
mov
fcomps
js
and
dec
std
cmp
sti
andl
sahf
mov
aam
repnz
and
jmp
imul
pushf
jo
push
stos
rcll
stos
sub
and
mov
imul
push
mov
sbb
movaps
cwtl
arpl
je
imul
nop
inc
jbe
jne
mov
shrd
fwait
jb
outsb
ja
mov
xlat
add
incl
addl
lcall
mov
scas
lcall
add
dec
adc
mov
lods
fnsave
jp
jl
loop
mov
mov
mov
dec
lahf
cmp
push
test
sahf
mov
mov
or
ficoml
lret
call
in
int3
dec
mov
mov
add
enter
negb
xchg
pusha
jecxz
xor
lret
dec
fsub
dec
mov
ret
hlt
pop
xchg
jo
cmp
cmpl
inc
and
or
movb
out
mov
jae
sub
lods
add
push
xchg
sub
div
mov
and
xlat
and
decb
shrb
dec
sbb
and
or
add
in
test
pop
dec
jecxz
adc
dec
mov
jns
or
xchg
xchg
push
and
scas
mov
test
push
enter
insb
inc
mov
mov
inc
sbb
testl
jb
push
vmwrite
push
adc
push
inc
fcomps
sub
lods
in
andl
jmp
push
mov
push
pop
cmpsl
xchg
out
mov
ret
inc
ljmp
mov
adc
lahf
xor
lds
cmp
jge
jmp
aam
mov
aas
sti
test
xchg
insl
add
imul
xchg
push
lods
insl
or
and
lock
sbb
and
inc
into
fimuls
or
bound
dec
mov
push
insb
roll
call
pop
popf
sbb
xor
jns
arpl
or
stos
ficoml
and
jmp
ret
jl
mov
push
sub
ja
and
or
push
lret
or
xchg
xchg
mov
shl
sbb
dec
or
add
dec
push
stos
inc
dec
scas
pop
insb
fstpt
xor
sahf
mov
sti
lods
cmp
mov
repz
xor
inc
xchg
cwtl
xchg
pop
mov
dec
push
mov
inc
ja
fwait
inc
nop
outsb
dec
sbb
xchg
loop
inc
lock
lods
pop
out
int3
bound
inc
jle
jl
fnstcw
cli
xor
popa
mov
fstpl
xchg
push
aam
push
movsb
shlb
out
mov
inc
movsl
fidivs
and
pop
int3
ss
lock
push
mov
fcoml
add
loopne
sbb
inc
mov
cmp
jae
icebp
pusha
adc
push
in
cmp
addr16
sti
xor
mov
xchg
pop
xor
ja
pop
pushf
mov
sbb
stc
mov
jae
push
sub
jno
pop
ds
or
ja
cli
aaa
popf
subb
cmc
mov
pop
jecxz
je
adc
popf
lods
adc
ja
loop
mov
arpl
aad
push
mov
pop
xchg
mov
inc
mov
dec
popa
mov
scas
shrb
mov
dec
cmp
mull
cli
shlb
loopne
loope
cmpsl
xchg
fcompl
mov
mov
and
xor
pop
dec
xlat
mov
je
mov
pop
repz
xchg
push
lea
mov
add
cmp
data16
mov
cmp
mov
dec
scas
shrl
subl
xlat
lret
mov
mov
orl
es
xchg
test
outsl
iret
cmc
lcall
je
xor
test
fwait
jmp
push
xchg
jg
shrb
add
call
jnp
sarl
mov
add
repz
add
xorl
idivl
lret
xor
imul
cmp
lock
cmp
adc
mov
xor
cltd
push
das
xchg
adc
iret
test
fidivl
in
addb
adc
popf
loopne
mov
pusha
popa
ds
or
push
and
push
cmovb
imul
xchg
mov
inc
add
cmp
push
and
subl
popf
xchg
sub
je
xor
enter
loope
push
cmpl
sbb
in
and
addl
imul
dec
movsl
mov
jp
xor
insb
das
sbb
data16
xchg
scas
dec
ret
sub
lods
mov
cwtl
outsb
jno
pop
mov
lods
roll
int3
fnstenv
xor
sub
adc
mov
stc
loope
gs
mov
jle
ljmp
into
push
movsl
mov
sub
push
lahf
sub
repz
out
ror
dec
cltd
mov
jnp
cmp
dec
test
bound
adc
pop
sbb
in
adc
lahf
lret
les
cmp
call
jb
bound
mov
outsl
test
cmp
mov
ljmp
sub
and
aaa
lds
dec
fsubs
mov
inc
shlb
xor
pop
iret
mov
push
in
rcll
les
arpl
jnp
hlt
sbb
dec
pushf
pop
and
add
pushf
or
imul
cwtl
push
mov
inc
aad
outsl
xchg
aas
and
or
test
sbb
js
lock
xchg
clc
pushl
fstl
adc
push
push
aam
cltd
sub
popa
rolb
cltd
fnstenv
pop
bound
pop
shrb
dec
int
loope
daa
popf
jo
out
mov
loopne
dec
cmpsl
sub
xchg
arpl
fucom
xchg
inc
xor
ret
shrb
testl
dec
inc
sbb
ss
mov
pop
jg
loopne
jne
pop
popf
xor
xchg
pop
aas
xlat
mov
clc
int
fstpt
rorb
mov
ds
addr16
dec
fld
iret
mov
fwait
cld
stos
jae
aam
pop
lea
xor
jmp
pop
push
nop
xchg
sbb
sbb
in
idiv
jle
xor
js
ficoms
adc
int
xchg
gs
pop
push
dec
or
cmp
push
xchg
data16
test
repz
dec
jmp
das
adc
rcrb
ja
xchg
and
test
add
jge
cmp
das
lods
xor
fistpll
dec
add
dec
imul
stos
aam
lcall
mov
inc
loope
jbe
outsb
cmpl
scas
cld
add
jmp
std
adc
sbb
fdivs
pushf
dec
push
fcmovnbe
std
jp
int3
cmpsl
pop
out
xchg
sub
jns
mov
fs
push
adc
fstpl
jbe
popa
jmp
mov
and
es
sub
aas
jmp
out
lock
xlat
dec
fsub
pop
bound
pop
xor
mov
add
repz
andl
out
sbb
push
jmp
sub
pusha
jle
or
pusha
mov
xchg
sahf
lret
je
std
scas
or
and
pop
push
imul
lods
mov
xchg
sub
pop
mov
lea
cwtl
pop
or
mov
dec
push
or
sbb
iret
dec
xor
pop
loopne
dec
test
adc
xchg
push
sarl
stos
xchg
out
mov
test
xchg
xor
or
inc
popf
push
imul
jle
mov
mov
test
mov
jle
xorl
pusha
sbb
loop
outsb
andb
lea
dec
inc
int3
je
out
mov
cmpsb
or
push
xchg
mov
stos
mov
aas
fsubl
dec
in
add
adc
add
sub
xor
jo
stos
jno
dec
ljmp
pop
insl
dec
mov
mov
pop
xchg
push
stos
in
sbb
out
lcall
rcrl
add
cmp
jle
mov
out
xor
fdivl
fidivl
out
pop
loope
xor
adc
add
imul
sub
aas
sar
into
mov
push
pop
xor
mov
stos
ret
sbb
mov
xchg
xchg
insl
mov
lahf
add
add
add
pop
test
adc
or
cmp
add
repz
add
frstor
sub
jnp
inc
xchg
mov
xchg
cmp
loope
loop
push
add
lods
notl
adc
jbe
jno
mov
cld
int
and
mov
add
sub
xchg
in
aam
push
lock
cmp
sbb
jb
or
sbb
dec
lock
mov
lret
adc
jae
xor
jbe
cltd
cmpsb
movb
mov
out
out
stos
jae
arpl
xor
inc
and
jmp
out
sub
in
stc
push
jp
out
xchg
cmp
jg
sbb
cmp
je
cmp
arpl
cmp
or
add
gs
jle
movsl
or
mov
jg
orl
repz
decl
cwtl
pusha
call
leave
mov
loopne
mov
frstor
stc
cmpsb
test
sbb
and
sub
jge
sbb
push
inc
popa
dec
push
and
lcall
pop
push
pop
popa
mov
mov
imulb
xchg
pop
gs
das
and
mov
and
push
mov
xchg
cmp
cmpsb
pop
and
jmp
pop
push
jo
mov
dec
cltd
bound
or
loope
sbb
cs
jnp
lret
mov
mov
mov
aas
shrl
fwait
xchg
mov
addr16
adc
les
push
outsl
or
and
inc
add
cmp
jae
pop
dec
add
push
jg
mov
dec
jecxz
adc
xchg
js
adc
movsl
mov
mov
arpl
mov
pop
pop
push
fxch
inc
mov
mov
mov
and
xchg
mov
imul
pushf
xor
push
and
dec
cld
pop
lea
mov
enter
mov
jnp
sahf
cli
mov
pop
inc
mov
ljmp
add
mov
imul
hlt
or
adc
mov
push
inc
inc
stc
lds
mov
cmp
sbb
sarl
out
popf
out
mov
test
flds
mov
jb
mov
mov
les
lds
test
and
dec
jge
inc
inc
lods
jne
or
fs
mov
inc
es
cmp
fdivr
sti
and
mov
or
adcl
aas
das
add
sti
xchg
push
das
daa
jle
adc
cmc
ret
fwait
push
dec
gs
xor
notl
mov
gs
iret
xchg
sub
xor
dec
inc
push
xor
cmpps
xchg
adc
mov
popf
jbe
imul
leave
mov
std
leave
mov
rolb
hlt
adcl
in
mov
mov
cli
dec
test
jmp
mov
dec
icebp
gs
incb
pmaxsw
movsb
push
fcmovnb
dec
shl
sbb
sbb
mov
or
mov
daa
mov
fsts
int3
mov
pop
push
mov
scas
lret
jmp
loope
xchg
mov
inc
gs
lcall
clc
xchg
push
mov
sbb
bound
ljmp
fdivs
movsl
or
push
loop
push
cmp
fstl
pop
lds
jns
add
push
stc
mov
add
pop
es
adc
or
scas
test
insl
and
mov
loopne
mov
mov
movsb
xor
dec
push
lahf
xchg
mov
xor
sub
pop
jb
loop
insb
test
loop
dec
test
stos
jp
and
fnstsw
pop
mov
cmp
movsb
mov
stos
mov
or
inc
icebp
inc
pop
and
rcll
add
scas
and
sbb
mov
mov
out
and
test
inc
push
bswap
outsb
addr16
mov
pop
xchg
mov
jmp
xchg
inc
jno
adc
sbb
xor
shl
mov
cltd
sub
inc
jp
int
mov
in
xchg
aaa
dec
mov
adc
divb
test
test
pop
xchg
ds
mov
pop
nop
fidivrs
adc
call
sbb
fld1
mov
out
adc
lret
shl
ljmp
test
andb
pop
add
mov
inc
add
daa
rolb
inc
cwtl
xlat
mov
jp
push
pop
addb
sub
jmp
mov
jns
mov
hlt
nop
and
push
jmp
mov
inc
ds
out
mov
xor
leave
shrb
xor
add
dec
lcall
adc
lret
in
leave
sub
add
repz
add
lods
mov
add
cs
push
dec
inc
in
imul
and
addr16
pop
xchg
adc
cmc
mov
cli
pop
imul
mov
das
test
cld
lds
lods
stc
jecxz
push
dec
xchg
push
sbb
mov
js
dec
xchg
inc
xor
clc
inc
mov
sub
push
and
cltd
adc
pop
mov
sbb
shr
fadds
push
sarb
stos
repz
jg
xchg
ds
mov
mov
inc
test
or
mov
xchg
fsubrs
rorl
hlt
dec
add
pop
mov
out
sbb
fcmovbe
xchg
pop
inc
push
pop
mov
sub
jne
xor
outsb
jmp
mov
mov
cmp
push
mov
mov
pushf
push
adc
pop
nop
int3
xor
out
sbb
insb
sub
xchg
push
sahf
ss
or
std
cmp
ret
xchg
cs
sar
push
sub
xchg
stc
mov
mov
das
jnp
adc
push
xchg
fldt
dec
pop
sbb
mov
lcall
popa
dec
fwait
out
addb
xor
test
sub
dec
fidivl
adc
test
aad
movsl
xor
bnd
inc
fidivrs
pop
push
gs
sti
and
shlb
push
cmp
xor
rorl
sti
flds
bound
pop
and
dec
pop
cltd
and
jge
push
jmp
int3
pushl
dec
test
scas
das
jle
jo
clc
xchg
scas
subl
mov
lahf
sub
addr16
xor
cmp
pop
subb
cli
rcrb
mov
push
cmp
xchg
and
and
lret
mov
imul
test
and
ret
mov
mov
pop
jne
pop
sbb
xchg
sarb
scas
cmp
aas
sbb
into
dec
leave
sub
loope
and
scas
vmread
stos
fwait
sub
sub
mov
inc
or
aas
and
pop
rcl
mov
stos
or
data16
ret
je
mov
mov
addr16
dec
icebp
push
mov
in
jae
adc
scas
scas
add
jne
imul
mov
enter
sub
jo
jle
adc
adc
sub
sahf
bnd
int
xorb
pop
xchg
popf
lret
aad
mov
add
mov
popf
inc
iret
pop
popa
test
nop
notl
popa
push
ret
mov
mov
in
dec
mov
popf
mov
std
scas
dec
xor
les
fucomip
cli
sub
movsl
inc
jb
out
out
mov
or
sub
or
pushf
jo
mov
loopne
call
divl
aaa
push
sbb
jp
adc
imul
mov
mov
iret
dec
sub
sub
addr16
insb
xor
adc
std
and
xor
insb
and
push
pop
xchg
push
stc
lret
cmp
mov
mov
outsb
xor
fstpl
andl
nop
dec
and
jmp
aas
ss
mov
lret
push
bound
and
scas
lahf
add
add
mov
cmp
pop
pop
mov
shrb
mov
inc
or
xor
xchg
adc
shll
sub
mov
add
pop
push
xorl
or
leave
mov
in
sarl
movsl
xchg
out
sub
dec
jbe
mov
in
lock
mov
daa
xor
xor
out
push
lret
cltd
out
js
and
sub
iret
xchg
adc
dec
xor
xchg
notb
cltd
and
or
jbe
loop
pushf
mov
pushf
fsts
xor
pop
out
je
lods
adc
cmp
lahf
cmpsl
cmp
mov
mov
jno
sbb
inc
icebp
dec
cltd
inc
add
xchg
pop
icebp
std
xor
scas
ret
xorb
jbe
push
cs
mov
and
pop
mov
jp
fiadds
cmpsl
aas
clc
jo
jns
pop
aas
add
adc
std
sbb
repz
lret
xor
xchg
into
fs
pop
and
adc
shll
adc
mov
int
add
mov
cmp
arpl
pop
mov
fidivrs
mov
add
add
es
jno
cmc
divl
mov
dec
push
testl
add
push
xchg
cmp
shll
and
cld
gs
bound
mov
mov
cmpsb
mov
jo
sbb
cs
inc
pop
xchg
xchg
ss
dec
fcom
dec
mov
leave
or
or
outsb
aad
xchg
xor
ffreep
aaa
mov
sub
xor
popa
stos
inc
mov
jo
clc
int3
jecxz
shll
cmp
insb
loop
pop
and
movsl
mov
sahf
mov
lds
inc
popf
test
outsb
jb
xlat
aas
fs
adc
add
aam
mov
movsb
jae
mov
dec
gs
xlat
adc
sub
mov
and
adc
imul
shll
cwtl
out
xchg
push
frstor
sbb
repz
notb
into
repnz
enter
scas
int3
pop
xor
xor
test
insl
aad
inc
jle
cmp
or
mov
roll
loope
pop
xchg
pop
aas
call
jmp
or
xchg
jge
xchg
sti
call
mov
ror
movsb
push
sub
inc
rcr
add
mov
sub
in
push
dec
pop
ret
jmp
cltd
adc
scas
and
outsb
xchg
or
mov
outsb
and
ret
inc
add
outsb
mov
xchg
in
lretw
push
or
and
sbb
pop
or
or
jl
outsl
outsl
mov
push
cmp
mov
arpl
enter
mov
mov
int3
xor
ret
xchg
es
int
adc
fisubs
hlt
mov
add
add
sbb
das
int3
bound
mov
pop
inc
rcrb
or
fucomp
out
mov
repnz
popa
xchg
enter
aad
imul
popf
sub
add
fwait
je
xchg
daa
in
movsl
push
ljmp
outsb
sub
jbe
dec
push
nop
mov
inc
push
cmp
iret
orl
leave
andl
pusha
jo
mov
into
test
sub
sti
lret
ljmp
and
jnp
sub
ja
jg
out
dec
xchg
mov
lock
nop
daa
test
mov
cmpl
jbe
mov
rorb
mov
mov
mov
xor
mov
xor
dec
mov
mov
stos
push
mov
push
add
bound
push
enter
push
fdivl
jge
push
fistl
dec
dec
mov
icebp
cmp
notl
push
imul
jmp
stos
mulb
pop
push
mov
icebp
insb
stc
stos
or
fbld
add
es
int
dec
leave
jne
inc
ret
cmpsb
mov
in
in
fwait
mov
mov
mov
xor
fcmove
stos
mov
jns
push
inc
mov
jg
adc
addr16
add
inc
mov
test
add
out
mov
imul
sbb
cmp
xor
push
mov
enter
mov
psrlw
stc
push
push
inc
jl
fcomps
dec
xchg
gs
out
sub
movsl
and
dec
inc
mov
sti
dec
mov
je
ficoml
fcmovnu
pop
pop
add
inc
jne
data16
jmp
push
jo
sub
int3
mov
jmp
rcll
and
pop
mov
clc
sub
and
or
rdmsr
xchg
pop
popf
xchg
cmp
and
jo
jo
loop
test
xchg
jae
jp
pop
mov
cmc
cs
sub
adc
dec
mov
lret
sub
mov
shll
loopne
movsl
lods
hlt
add
xor
mov
jge
or
cmp
sbb
int
out
mov
mov
daa
aam
cmc
dec
xchg
push
and
cmc
aaa
jmp
mov
fcom
push
push
push
lock
mov
push
adc
inc
pop
cmpsl
cmpsb
jno
sub
sti
loop
fistpl
clc
orl
daa
fmull
push
xchg
push
pop
push
popa
ror
and
or
ljmp
cwtl
test
pusha
jle
jbe
push
fstpl
pop
shrl
pop
jl
loope
rcrl
jb
popa
mov
fisttpll
jne
pop
loop
aaa
pop
push
cmpl
dec
pop
ret
mov
xchg
sub
pop
ret
dec
shll
les
sahf
cmp
add
add
sahf
xchg
inc
fisttps
lahf
int
push
punpckldq
add
repz
add
jbe
fs
mov
push
jb
aad
sahf
test
ret
pop
aaa
or
adc
xor
pop
inc
mov
mov
mov
inc
ficoms
pop
or
rcrl
push
xor
sti
cmp
pop
test
xor
or
dec
mov
popa
fiadds
movsl
mov
sti
jb
cmp
flds
mov
insb
push
std
movsl
pop
lahf
and
fnstsw
mov
push
insb
repz
fbld
or
push
jle
cmp
pop
inc
xchg
mov
mov
adc
and
cmpsb
fwait
js
mov
fsin
add
pop
outsb
test
pop
or
dec
cltd
insb
or
pop
jp
xorb
mov
mov
cwtl
mov
dec
lcall
push
pop
sbb
and
nop
aam
lock
mov
sub
repz
int
xchg
arpl
xchg
cmp
fiadds
adc
pop
xor
and
fldt
sbb
add
das
cmc
aam
jmp
aas
mov
out
sbb
pop
cmp
in
iret
aaa
decb
and
outsb
mov
sahf
jnp
jb
jmp
sub
sub
into
fisubs
cltd
pop
xor
mov
mov
daa
outsb
add
jbe
jge
push
test
mov
frstor
pop
xor
imul
sbbl
xor
mov
mov
popf
stos
push
notl
mov
sub
mov
es
dec
xor
cmp
insl
cmp
or
add
arpl
lahf
outsl
xchg
js
pop
repz
adc
jbe
mov
and
js
scas
jno
jbe
cli
or
xor
sahf
icebp
test
imul
mov
js
rcl
shrb
lahf
cmpb
inc
mov
mov
mov
or
out
adc
shlb
pop
mov
ret
leave
shrl
insb
push
repz
pop
es
push
mov
push
mov
test
push
inc
sbb
fmuls
and
add
xor
out
push
fsubrs
in
xor
rclb
push
stc
adc
cmp
add
cmpsb
bound
sub
shr
xlat
adc
cmc
add
sub
mov
lahf
rcr
cmc
fwait
adc
pop
stos
mov
fwait
outsl
ss
cld
fimuls
call
mov
add
sbb
lds
outsb
push
clc
push
jmp
dec
mov
leave
push
adc
adc
mov
fisubrl
loope
bound
and
vpor
jg
xchg
jge
test
mov
jl
push
icebp
mov
lea
sbb
mov
fnsave
mov
cs
mov
pop
mov
sbb
adc
loopne
cs
dec
out
xchg
or
and
jnp
cld
ljmp
push
mov
and
dec
push
clc
leave
mov
push
and
xor
aaa
jmp
pop
and
subl
test
enter
xlat
js
bound
ds
and
sub
das
push
loope
aas
push
popf
push
in
cmp
iret
jbe
lahf
aaa
in
das
pop
push
addr16
fidivs
mov
xchg
das
jns
loopne
adc
cmpsl
movsb
orb
in
int
imul
ds
testb
nop
sub
ret
ret
dec
stc
pop
lea
shlb
sbb
shll
js
xchg
adc
dec
xlat
push
data16
ljmp
mov
ret
daa
ficoml
mov
xchg
inc
ret
jne
sarb
loope
xlat
xor
stos
sub
hlt
pop
mov
lcall
clc
mov
xor
rcr
cmp
aaa
xchg
mov
pop
inc
ljmp
push
push
jne
jmp
sub
lock
xchg
mov
cltd
sub
xchg
cmp
scas
mov
or
cmp
sub
iret
in
fstpl
pushf
movsl
xor
fsubs
inc
call
jg
add
or
mov
xlat
or
sub
sbb
push
inc
sbb
cmp
inc
push
or
cmp
xbegin
test
ljmp
stc
mov
std
pop
and
mov
cmp
and
fucomi
fidivrs
add
add
add
call
aas
popa
adc
addl
add
repz
add
jg
mov
imul
pushf
mov
inc
sub
and
sbb
call
add
mov
ja
ficoml
fincstp
shl
sbb
leave
add
adc
cli
sti
pop
jo
int
jns
shr
mov
and
hlt
mov
int
loopne
sub
sbb
or
xorl
movsb
out
sub
cli
scas
stos
shlb
imul
andb
pop
inc
xacquire
xchg
push
jno
cmpsb
xchg
in
pop
sub
dec
lret
in
sub
stos
aad
cmp
xor
jmp
incl
js
insl
enter
push
jecxz
inc
mov
scas
add
xor
jo
lahf
nop
push
imul
cmp
aam
add
fidivrl
push
popf
lret
fcompl
nop
cltd
in
in
xchg
dec
dec
sub
les
rorl
pop
push
mov
sbb
xchg
inc
addr16
mov
cltd
mov
dec
dec
ret
and
xchg
mov
mov
cmp
pusha
loope
xchg
xor
add
test
nop
loope
xor
push
int3
adc
or
jno
xorb
mov
rol
fldl
pop
add
add
rol
subl
mov
jae
cmp
xlat
cmc
scas
pop
inc
movsl
out
cltd
adc
imul
inc
mov
jb
mov
mov
das
fsts
xsaves
sub
rclb
pop
jl
iret
mov
lahf
mov
cmp
loope
test
inc
cmp
repnz
ret
inc
inc
xchg
jle
cmp
pop
xlat
std
and
pop
aas
jp
mov
jge
mov
inc
mov
popa
testb
push
cli
adc
pushf
rcr
xchg
jecxz
insb
adc
push
xor
cmp
data16
dec
pop
mov
add
push
add
jg
movsl
test
xchg
clc
sub
jb
shl
cs
sbb
dec
xor
rcrb
mov
jae
scas
adc
push
fwait
mov
int3
dec
xor
xlat
pop
push
and
lret
movsb
sbb
mov
out
sub
mov
cmpsb
std
pop
adc
xchg
xchg
cmc
cmp
push
pop
fidivrs
or
cld
lcall
lret
and
xchg
adc
jnp
or
xor
or
push
pop
jb
pop
in
pop
fildl
loopne
add
ret
push
mov
adc
icebp
movsb
sub
test
add
shll
or
test
xchg
push
fcoml
lea
mov
enter
loop
mov
and
popa
out
out
in
fisttpl
in
popa
cwtl
dec
test
aam
adc
add
sbb
je
int3
mov
mov
lods
or
inc
repnz
aas
xchg
jb
enter
or
xor
cmc
jge
stc
xchg
and
pop
mulps
icebp
and
push
arpl
pop
movsl
adc
call
xchg
popa
je
or
cli
movaps
dec
mov
jb
ret
mov
xchg
add
jmp
and
cmp
in
out
jae
mov
push
push
mov
and
repz
scas
push
push
icebp
jecxz
pop
loop
add
aad
notb
xor
dec
add
ret
popa
sbb
push
and
push
push
mov
inc
scas
xchg
sbbl
xchg
push
sti
add
test
mov
dec
pushl
lock
cmp
push
into
lock
jbe
bound
movsb
mov
stos
je
push
insb
mov
aas
jecxz
push
mov
mov
fs
lcall
push
inc
lret
dec
faddl
dec
cli
add
mov
ss
fsubs
mov
lret
movsb
test
sbb
adc
mov
das
incl
mov
out
mov
mov
jmp
cmpsl
add
ss
out
jne
int3
popa
stc
add
cmp
pop
lods
fsubrs
xchg
xor
outsl
xchg
dec
fnstsw
mov
ds
arpl
adc
aas
pusha
mov
adc
in
mov
ret
xchg
data16
ja
inc
inc
dec
gs
pop
enter
fistps
inc
xchg
sub
aad
clc
divb
xor
push
negl
sbb
fcoms
and
push
inc
mov
enter
xor
xor
lcall
sub
cmc
cmp
xor
add
sahf
insl
not
neg
mov
int
sti
fsubr
testl
gs
push
sbb
adc
jl
adc
std
call
inc
adc
mov
inc
inc
out
mov
add
inc
inc
aas
push
shlb
push
push
fldl
pop
mov
adc
imul
pushf
push
jns
pop
lods
les
cmp
push
aad
loop
jecxz
repz
xchg
push
ds
arpl
sub
mov
sbb
jmp
sub
jbe
jns
aad
pop
jno
hlt
cltd
mov
addr16
and
in
out
stos
add
adc
pusha
rol
dec
jge
repz
popf
pop
sbb
xor
sbb
push
stos
cmp
in
jns
fwait
cwtl
in
imul
ret
jl
outsb
jmp
sbb
push
jge
pcmpeqw
dec
mov
in
push
mov
stos
stos
push
imul
sarb
xchg
iret
out
or
jp
daa
mov
or
add
es
and
pop
outsl
or
xchg
adcb
pop
stos
gs
xor
insl
rclb
cmc
loop
popa
xor
fldenv
sub
mov
pushfw
push
cmp
xor
pop
fisubs
cli
pop
xchg
or
dec
mov
push
or
outsl
arpl
in
push
call
popf
pop
mov
mov
adc
cltd
push
cmc
stc
sbbb
and
mov
sti
push
push
ss
xor
mov
dec
or
cmpsb
xchg
jo
fiadds
push
dec
mov
jbe
shll
out
fwait
jbe
and
leave
nop
push
mov
jp
scas
cmpb
xlat
mov
xlat
cmp
push
jl
mov
ret
cmc
jns
add
lds
cwtl
cmp
aam
rcrb
cwtl
mov
or
out
mov
push
push
test
sub
ss
fsubl
pop
cmp
movsb
repz
sbb
mov
outsl
in
lahf
repnz
test
aam
mov
ds
pop
cmp
or
rol
inc
filds
push
or
jp
sbb
add
js
add
push
je
mov
inc
inc
fdivl
andb
xor
movsl
pop
cmp
or
push
mov
cmp
nop
dec
lcall
dec
sbb
call
insl
push
and
insl
mov
pop
andl
push
icebp
lods
xor
into
subl
and
pop
xchg
lock
mov
mov
loop
inc
xor
idivl
sbb
push
lea
xor
aam
lock
fs
or
and
adc
fsubrs
pushf
dec
adc
pop
cmp
mov
test
pop
faddl
and
cmp
jge
shll
sub
fwait
aad
nop
dec
adcb
mov
mov
out
jns
ss
and
jmp
inc
xor
popa
vpshaq
icebp
xchg
and
adc
outsl
add
mov
cmc
jo
pop
jg
cmp
mov
mov
xchg
mov
ret
mov
gs
ret
jle
mov
sbb
icebp
leave
sub
mov
sub
mov
mov
cltd
shlb
roll
popf
iret
dec
mov
fs
mov
push
clc
mov
lret
aad
sbb
xor
in
outsl
mov
push
rorb
inc
push
fists
rclb
or
mov
sbb
rcrb
mov
sbb
adc
out
sti
or
hlt
pop
orb
add
leave
jg
mov
je
jo
push
std
cmp
ficoms
adc
pop
rorl
mov
nop
and
adc
fs
scas
popf
lods
inc
ja
jl
mov
pop
xchg
fbstp
xor
mov
or
sbb
lgs
xchg
mov
out
push
cmp
add
cmp
iret
dec
lea
hlt
sub
lea
dec
mov
xchg
adc
sub
xor
clc
xor
in
or
mov
xor
sbb
adc
sbb
jg
adc
mov
inc
outsb
push
pop
xchg
add
dec
adc
mov
jmp
ds
test
xor
mov
adc
and
cmp
sahf
and
and
sub
movsl
mov
insl
inc
push
in
gs
cld
add
add
add
std
mov
push
jg
mov
ljmp
add
dec
cmp
shlb
nop
in
pop
or
push
mov
leave
js
inc
inc
lds
stc
inc
push
sbb
mov
cmp
cmp
fidivl
mov
daa
jl
lret
ja
fistpl
je
push
movsl
scas
dec
jo
adc
dec
mov
jbe
jns
popa
pop
cltd
outsb
push
jns
insl
jae
aad
out
aam
jecxz
iret
jbe
fwait
pop
mov
test
sub
pop
orl
push
mov
jg
scas
int3
push
cld
pushf
mov
jle
scas
stos
out
cltd
jecxz
loope
rolb
notl
jns
jp
cld
jg
mov
dec
mov
push
adc
fidivl
jno
push
mov
mov
jp
xor
jbe
jo
les
jo
es
inc
in
rcr
dec
xchg
pop
xchg
inc
ja
adc
lcall
pop
loopne
int3
adc
adc
aas
fcmove
push
loop
add
fadd
sbb
icebp
xor
enter
movsb
add
adc
sbb
dec
loopne
insb
jns
or
dec
les
xchg
int3
cwtl
rcll
inc
sub
jge
enter
pop
inc
repnz
xor
sbb
cmpsl
dec
pop
rcr
xchg
jo
push
je
push
xor
out
test
mul
mov
sbb
mov
repnz
dec
bnd
push
jnp
sbb
mov
sub
add
mov
inc
dec
aad
iret
int3
sub
mov
and
mov
and
sub
movmskps
add
ljmp
popa
mov
xor
call
fst
lahf
mov
xor
out
dec
pop
in
dec
test
sub
stos
mov
mov
push
or
cvtpi2ps
add
and
pop
xor
sub
mov
dec
cmp
adc
int3
cli
push
iret
cmp
cli
cmpsl
xchg
insb
xor
and
cmp
xchg
aas
add
dec
ror
cmpsb
xor
iret
shl
popa
sahf
cltd
stos
jne
sub
cli
pop
ffree
movsb
and
xchg
mov
rorl
psubsw
cli
xor
cmpsl
in
jecxz
jnp
and
imul
outsl
ljmp
cwtl
lods
add
cmp
repz
adc
stos
out
xor
icebp
inc
in
jmp
pop
push
divl
push
mov
bound
jbe
jge
push
pop
sbb
gs
scas
ds
dec
cli
aad
dec
loopne
sti
je
sahf
inc
xor
push
sub
mov
in
shrb
and
or
and
aam
mull
lods
hlt
dec
lret
inc
ss
mov
repnz
cmp
push
dec
pusha
jmp
orb
aad
test
leave
inc
popa
fcmovnb
xchg
out
cli
lret
jecxz
repnz
shl
push
and
ficoms
xchg
shl
in
pop
psllq
dec
or
pushf
fbld
aad
jg
lcall
iret
mov
popa
xlat
movzbl
push
push
sbb
add
push
pop
and
lods
shlb
sub
mov
stos
out
hlt
scas
repz
movsl
mov
push
and
dec
jmp
pop
adc
push
xlat
jbe
push
mov
fmulp
fisttpl
andl
mov
xorl
mov
lret
insb
jae
xor
mov
push
or
push
stos
xor
push
push
out
rcrl
cmovo
xchg
adc
sub
mov
test
pusha
daa
fnstcw
mov
cwtl
push
inc
shrb
insl
popf
out
pushf
push
rorb
mov
mov
bsf
pop
ds
inc
fdiv
push
push
clc
cmp
push
inc
testl
shlb
jg
fistps
push
or
iret
int
pop
lret
fsubrl
sbb
or
sbbb
iret
ja
mov
jp
inc
loopne
xchg
jne
and
push
lods
aaa
shl
cmpl
mov
jne
pop
daa
inc
and
das
adc
xchg
rclb
cld
and
scas
gs
jno
adc
adc
data16
pusha
insl
add
cmp
lcall
mov
cwtl
mov
mov
and
jle
or
sub
push
ucomiss
mov
enter
ja
mov
xor
dec
inc
or
jl
jne
adc
jg
mov
leave
cltd
xchg
jo
xchg
and
adc
sbb
pop
pop
cs
mov
out
mov
into
xchg
movsl
movsb
jne
pop
inc
xchg
pusha
push
mov
gs
add
add
inc
push
lret
in
out
dec
add
lea
sgdtl
repz
add
aas
imul
mov
mov
scas
add
nop
daa
ja
xlat
lods
add
push
or
pop
cmpsl
rcrb
jl
jo
mov
mov
inc
mov
mov
xchg
xor
push
adc
push
xchg
cmpl
out
add
lods
dec
jge
ja
std
lock
in
lock
scas
or
xchg
push
or
inc
xor
add
das
adc
mov
cmp
lods
add
loopne
outsl
xor
int3
xor
sbb
lock
cmp
mov
shl
jns
jle
in
sub
rol
adc
pusha
adc
clc
clc
inc
jp
cli
test
lahf
xchg
mov
das
push
sbb
pop
mov
mov
bnd
dec
fnstcw
mov
cmp
xchg
push
jmp
sbb
repnz
add
push
cmc
mov
xor
sbb
arpl
mov
out
inc
jmp
lret
stc
inc
mov
jmp
jae
es
or
insb
pop
iret
xchg
arpl
add
and
stc
mov
mov
xor
xchg
push
dec
loop
mov
xchg
xor
aaa
cwtl
jb
sbb
add
xlat
lahf
or
or
xchg
xor
mov
xchg
mov
lahf
push
enter
rcr
fistpl
in
je
push
loope
test
sbb
pop
add
xchg
cld
mov
test
push
push
cs
out
dec
pusha
jb
mov
out
jmp
dec
pop
mov
int
xor
xchg
add
pop
sbb
add
cmovl
sbb
lds
ret
clc
stc
xchg
mov
pop
test
lret
mov
sahf
xor
pop
in
inc
push
mov
mov
add
shll
fwait
lahf
xchg
and
or
mov
mov
and
pop
jbe
clc
out
dec
inc
push
dec
jb
or
out
clc
jg
mov
fsts
sbb
je
pop
or
jl
xchg
push
pop
mov
add
dec
js
jb
in
cmp
iret
cmc
repz
or
sbb
cltd
xchg
jns
xchg
cmp
icebp
sbb
adc
dec
xor
dec
loopne
xchg
sbb
xor
dec
insl
xor
push
inc
add
dec
adc
mov
in
cmp
cld
xorb
sub
mov
insb
int3
dec
arpl
or
jbe
push
jle
jns
dec
cmp
inc
push
dec
jp
mov
push
mov
cmpb
mov
arpl
xchg
and
pop
cmpsb
int
jge
mov
inc
aas
gs
imul
push
fwait
jp
push
dec
cltd
mov
mov
mov
and
sbb
mov
xchg
push
ds
xor
lret
xor
popf
das
sub
adc
mov
mov
push
inc
inc
sub
xlat
daa
in
lods
cmp
mov
mov
cmpsl
jmp
and
mov
pop
aas
in
lret
popa
outsb
cs
insb
mov
stos
fnsave
or
scas
lret
or
out
push
bound
pop
sbb
insl
mov
loope,pn
push
pop
int3
cmpsl
js
and
jne
mov
mov
out
ret
sub
cmp
jmp
jb
test
inc
fimull
push
subb
fcmovnb
mov
jg
cmp
pop
push
sbb
or
adc
dec
cld
lahf
pop
movb
push
repnz
mov
imul
mov
daa
pop
cs
mov
stc
cs
cmp
cwtl
in
in
xchg
cmp
jbe
out
divb
scas
pop
es
add
or
enter
inc
jl
out
filds
xchg
push
pop
icebp
fsts
mov
lahf
dec
pop
es
pushf
hlt
imul
imul
insl
pop
mov
mov
pop
shrb
fimull
mov
std
movsl
call
inc
pop
test
fbstp
xchg
inc
arpl
fmull
loop
pusha
mov
push
lods
xchg
lock
mov
mov
pop
and
add
shl
insb
testl
xor
and
jne
mov
add
lret
xchg
je
in
sub
into
jg
out
add
add
add
je
std
mov
shr
dec
clc
push
rclb
add
add
add
add
filds
test
cltd
inc
cmp
push
fisttps
lcall
and
jb
stc
push
daa
xor
js
xchg
gs
aam
out
sbb
fistpll
mov
inc
inc
xor
mov
jno
test
out
push
adc
pusha
hlt
cmp
sub
sub
outsl
xor
out
sti
push
mov
pusha
mov
out
mov
xor
push
mov
push
sub
lret
or
xchg
xchg
xchg
cmp
insb
inc
push
mov
sub
ret
cmpsb
mov
loope
loop
jae
loopne
cmp
or
stos
pop
aad
lahf
sbbb
popa
mov
fnstsw
cmp
mov
sbb
ror
mull
dec
lods
adc
ss
stos
mov
xchg
idivl
mov
out
xchg
inc
mov
andps
out
orb
xchg
xor
mov
add
inc
mov
mov
mov
mov
mov
pop
data16
das
cmpsb
scas
fs
mov
icebp
stc
xchg
mov
add
ret
push
xor
cld
xchg
cwtl
inc
adc
mov
aad
push
lahf
cmp
or
iret
mov
push
loope
inc
out
int
pushf
movsb
movsl
or
adc
jb
mov
es
bound
xlat
imul
mov
jbe
cs
aas
lea
repz
mov
lahf
or
and
scas
mov
push
jns
shll
imul
loop
int3
jbe
sahf
rcll
or
das
add
mov
xchg
xor
xlat
cmp
stos
adc
add
cmp
jbe
push
adc
or
sub
aad
loope
shl
mov
rorb
xor
fsubs
ror
loope
loopne
in
xchg
bound
movl
inc
jnp
or
jb
sti
adc
mov
andl
mov
cli
rcrb
mov
push
ret
jle
inc
dec
pop
lret
mov
jb
jg
or
nop
aaa
add
jbe
adc
pop
pop
and
scas
ret
mov
mov
jbe
stos
push
hlt
adc
test
jns
pop
mov
dec
popf
and
out
sbb
out
mov
out
ja
push
dec
inc
dec
cmc
or
fadds
fistpl
test
dec
ficomps
cmpsb
cmc
dec
ljmp
fwait
pop
lea
xor
das
fwait
push
stos
mov
shrb
popf
ret
xchg
inc
mov
mov
ret
rcrl
mov
call
call
push
jns
cmp
xorb
sbbl
and
ret
pusha
or
cmp
pop
shlb
mov
fxch
movsb
mov
mov
xchg
out
pop
or
pop
xor
fdivl
jno
xchg
mov
mov
popf
push
jo
ss
loop
xchg
cmp
dec
fs
push
jbe
xlat
jl
sbb
xor
jmp
and
xchg
sub
xchg
and
cld
pop
pop
pushf
pop
pop
jae
add
dec
pop
adc
jp
loope
pusha
sub
pop
cmp
iret
pop
aam
mov
out
leave
dec
movsl
or
pop
gs
sub
sahf
adc
mov
pop
arpl
mov
push
mov
fisttpll
stc
dec
push
push
cltd
arpl
mov
pop
enter
mov
cwtl
std
fwait
popa
inc
mov
xchg
idivb
or
or
imul
jns
std
insl
sbbl
mov
xor
bound
push
iret
ffreep
inc
adc
fldt
fsubr
ljmp
jmp
pusha
cs
mov
pusha
fidivs
ret
outsb
jno
out
iret
push
out
mov
inc
sub
stc
jno
shll
cmp
negl
sbb
xchg
mov
enter
insb
mov
cmp
inc
jo
pop
imul
mov
sbb
div
xchg
popa
enter
jmp
div
roll
xchg
pop
lods
inc
jo
lock
mov
pushf
and
movsl
adc
pop
lret
lock
or
cli
xchg
mov
loopne
in
mov
xor
scas
fnstenv
xor
cmp
idivb
sub
mov
or
add
fwait
xchg
add
add
add
in
in
or
jl
ret
sbb
add
add
add
iret
push
push
add
das
add
sub
lds
or
mov
sbb
dec
inc
push
lret
loope
adc
loopne
and
mov
or
xor
pop
adc
negb
dec
xchg
cmp
push
popf
mov
insl
nop
sarl
std
mov
ret
pop
and
pop
mov
cmp
mov
fstl
hlt
or
aas
dec
aad
lods
scas
aam
fs
add
stos
ss
cmp
ficoms
add
mov
nop
sarb
cld
adc
dec
rorb
jecxz
or
int3
scas
icebp
dec
pop
jge
outsl
loopne
ljmp
adc
leave
loop
repz
mov
dec
scas
fldcw
ds
popf
cmp
sbb
out
inc
std
movsb
daa
outsb
daa
aad
mov
sbb
adc
test
hlt
out
lea
es
pushf
sub
lds
add
mov
gs
scas
mov
mov
mov
daa
aas
lret
outsb
ret
aaa
fs
jb
inc
sbb
and
mov
jo
sbb
xchg
cmpsl
mov
inc
cmp
inc
inc
cmp
enter
ret
mov
addr16
out
sub
add
faddl
fdivl
test
push
mov
jmp
and
jg
shl
jns
ss
aad
pop
sub
jp
jbe
int3
movsb
xlat
inc
mov
pop
sub
shlb
call
fildl
test
rorl
enter
sub
into
jb
je
cmpl
xchg
leave
ds
push
pop
pop
pop
and
movq
aam
xorb
bound
jge
cltd
jmp
adc
or
scas
push
jmp
pop
dec
dec
test
scas
movsb
mov
inc
mov
sbb
out
xchg
dec
js
jmp
lret
inc
jne
mov
js
rolb
mov
or
cmp
mov
push
jge
xchg
enter
fwait
jbe
mov
pop
or
ds
aam
in
decl
jle
dec
mov
pop
or
xchg
shll
cmp
sub
shlb
scas
cmp
or
cmp
xchg
mov
mov
int
mov
dec
xor
stc
pop
dec
lds
add
xor
push
ret
js,pt
dec
je
or
xor
or
pop
sbb
xorl
sbb
popf
lret
imul
mov
mov
in
jmp
je
gs
xor
jno
jo
into
lahf
jno
xor
jge
inc
and
push
loop
test
aam
jns
adc
and
stos
fistpll
fcomps
cmpsb
xchg
xor
add
imul
rorb
push
sub
jnp
dec
or
mov
in
xchg
addr16
std
mov
mov
cs
sub
cmp
sbbl
icebp
xor
imul
xor
fmull
repz
cmpsb
pop
mov
fs
push
insb
rcrb
insb
loop
loopne
imul
gs
sbb
imull
lahf
dec
test
pop
pop
cmp
dec
pop
dec
cmc
lods
lahf
lea
or
inc
jns
cmp
pop
mov
sub
push
cmp
lods
inc
mov
or
enter
fldt
mov
mov
xor
aaa
jmp
jae
inc
mov
mov
mov
bound
xor
dec
and
in
xchg
pop
int
mov
dec
hlt
mov
and
cltd
cmp
jle
mov
fcoms
out
dec
xchg
fiadds
sub
xor
clc
pop
cli
mov
pushl
push
sub
push
fwait
mov
pop
xchg
outsl
and
cwtl
lret
test
and
xchg
push
pop
xchg
mov
push
sub
sub
push
mov
sub
and
or
stos
dec
jl
test
mov
inc
xchg
cmpsl
cmp
mov
dec
mov
pop
cmp
outsl
cmpsl
sahf
mov
cmpsl
push
sahf
ja
je,pt
lret
inc
xor
ss
pop
sbb
jmp
mov
adc
aam
jno
sub
pusha
dec
and
cli
out
jbe
push
aam
pop
or
pop
jbe,pt
mov
xor
jb
adc
mov
pop
out
jo
jbe
sbb
sbb
gs
js,pt
stos
xor
popf
sub
or
push
push
int
dec
inc
pop
pop
shrb
push
lcall
pop
loop
mov
add
sbb
add
lods
test
gs
iret
lods
mov
add
repz
add
sub
inc
inc
add
pop
and
sub
jecxz
enter
fnstsw
shlb
daa
out
adcb
daa
xchg
jp
add
mov
sub
sti
daa
mov
into
jb
sub
mov
loopne
inc
iret
sbb
shll
out
add
mov
lods
inc
mov
fidivrl
and
stos
shll
push
out
iret
cmpsl
in
push
cmpsl
rclb
pusha
xor
ret
addr16
js
dec
jnp
or
decl
or
mov
or
addl
sbb
cmp
pop
popf
jnp
fcomi
bound
mov
pusha
aad
pop
repnz
and
leave
iret
mov
into
lret
out
xchg
pop
jge
xchg
ja
lret
or
xor
mov
xchg
pop
dec
jb
jne
and
jge
sbb
push
xor
xchg
fadds
mov
aas
adc
cmpb
faddp
mov
insl
xor
pop
cmp
cmp
xor
jle
sbb
cltd
xchg
push
nop
lea
fdivrl
xchg
ret
sub
cmp
pop
outsb
sbb
and
fcmovnu
jnp
xor
je
xor
or
dec
and
or
push
outsl
add
sar
in
inc
xor
loop
or
push
and
add
push
fnstenv
mov
or
imul
xchg
out
fistps
adc
sub
cmp
jg
adc
or
jnp
sbb
fsubrl
ljmp
leave
movsb
nop
loopne
pushw
outsl
push
dec
push
xor
les
aad
es
mov
repnz
inc
arpl
ljmp
scas
add
sub
cmp
push
and
and
xchg
out
mov
push
fdivs
cli
jle
xchg
xchg
iret
repz
ficoms
ret
xor
or
fdivl
jmp
xchg
push
adc
pushf
mov
inc
dec
xchg
jno
fsubp
jmp
jmp
scas
mov
cld
sbb
mov
fsubl
ljmp
iret
push
push
stc
lret
fdivrs
sbb
mov
loopne
pop
clc
sub
rol
mov
lret
cltd
xor
daa
and
lods
adc
das
mov
inc
pop
pop
cmp
cmpb
fcmovnbe
mov
movsl
cwtl
iret
shrl
in
fwait
outsb
fmuls
stos
insl
mov
lret
in
fsubs
push
mov
jl
mov
fwait
pop
mov
dec
and
popf
dec
lahf
add
mov
inc
xlat
out
idiv
xor
lcall
push
mov
test
dec
and
int3
call
into
js
imul
xchg
sub
jbe
inc
mov
xlat
testl
inc
mov
negl
jp
fs
in
pop
mov
inc
sub
and
inc
jnp
lret
out
mov
xchg
push
adc
push
scas
inc
orb
or
mov
cltd
fcomp
jae
xchg
fnsave
or
pop
sub
or
sbb
pop
inc
xor
ret
enter
and
push
jb
cld
scas
in
clc
cmp
mov
rcrl
test
pop
int
aad
cmp
popf
sub
push
xor
pop
js
call
add
jg
jae
lds
jmp
mov
rcl
bound
xor
xchg
push
out
pop
jae
lcall
cmp
les
lcall
or
mov
rep
or
xor
or
sub
mov
dec
lds
xor
fmuls
mov
xor
cmp
in
in
or
push
pop
hlt
les
and
xor
xchg
ret
call
scas
imul
icebp
mov
xchg
repnz
pop
enter
sahf
loop
adc
test
out
and
iret
fwait
lea
aaa
inc
fidivl
xchg
in
out
pop
ss
decl
out
movsl
cmpsb
mov
push
call
mov
pop
xchg
repnz
test
int
xlat
push
mov
inc
jmp
sub
psrlw
popf
mov
xchg
push
out
pop
adc
je
fldt
push
loop
push
enter
mov
jns
lret
ja
test
mov
data16
and
dec
ss
lods
jns
outsb
rcr
jle
in
rep
adc
xchg
pushf
filds
jmp
mov
add
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
shll
add
repz
add
fucomp
cli
push
dec
mov
addr16
or
leave
rcll
ds
add
or
adc
stc
in
add
or
sbb
or
inc
ret
add
je
loope
shlb
add
xor
lods
lock
es
xchg
scas
aas
inc
ret
mov
push
cwtl
jmp
ret
adc
test
and
cs
fsts
idivb
inc
sbb
rolb
dec
lds
das
lds
cld
incb
jne
or
sub
xchg
xor
mov
popf
mov
je
lods
dec
out
in
repnz
sbb
xlat
xchg
lret
dec
jbe
mov
ret
xchg
cmpsl
pop
sbb
stos
fdivrs
ljmp
mov
cmc
aam
int
xchg
push
mov
cmc
cltd
xchg
data16
xchg
lret
in
clc
push
xor
pop
nop
aas
loopne
cwtl
andnps
xchg
popa
mov
insb
inc
sbb
roll
sbb
sub
cmp
pop
cmp
push
fdivrs
xchg
mov
mov
xchg
lret
std
sbb
mov
ret
mov
inc
mov
xchg
clc
stos
push
shrl
xchg
pusha
fstp
cmp
mov
data16
jge
sarl
mov
mov
dec
inc
inc
test
ljmp
add
sub
or
js
rcrl
rcll
or
xchg
jg
vpshufd
pop
or
jb
in
sub
ja
mov
mov
pop
out
adcb
add
pop
out
roll
cwtl
cmp
shrl
addb
cs
decb
fistpl
adc
lock
aam
xchg
pop
or
mov
fstpl
fs
insb
cmp
out
notl
enter
jae
fdivl
cmp
add
fldcw
lahf
les
cmp
cmp
push
lods
sub
int
sbb
das
cltd
rcrl
push
mov
push
mov
cltd
mov
ljmp
lock
fadd
jb
rcrb
lds
stos
xorl
sbb
das
les
stos
lahf
mov
cltd
jg
pusha
loope
pusha
pusha
and
pop
mov
push
cmp
repz
out
or
mov
add
fidivrl
fistpl
sahf
push
scas
push
or
mov
dec
mov
sti
sub
lea
cmpsl
push
pop
push
dec
dec
out
loop
test
dec
flds
sub
cld
mov
sbb
cmp
sub
xchg
in
mov
sbb
pop
adc
fimull
push
fsts
mov
jl
inc
insl
fs
and
sub
mov
mov
mov
push
cmp
cltd
jnp
sbb
jnp
repz
rclb
jmp
sbb
mov
cld
xlat
add
lods
mov
add
jnp
test
xor
iret
dec
fildll
cwtl
mov
rcll
in
fbld
popf
mov
pop
xlat
fdivrl
iret
and
das
sbb
push
scas
or
cmpsl
pushf
insb
adc
sbb
in
ret
add
mov
cmp
cwtl
jbe
shll
mov
and
mov
cmc
cld
sub
cmp
mov
and
push
arpl
xor
cld
xchg
dec
fnstsw
std
sub
cmp
xchg
push
sbb
add
outsl
cmp
inc
pxor
jnp
pop
movsl
or
pop
popf
mov
lahf
mov
jge
subl
int3
fimull
lea
cli
ds
fcmove
data16
iret
push
stos
imul
xchg
imul
push
pop
jb
jl
sbb
jl
fcmovne
orl
pop
sbb
in
std
mov
jne
sub
add
mov
icebp
cltd
jmp
leave
out
movsl
mov
lcall
push
xor
mov
imul
cltd
cwtl
lock
icebp
ja
mov
or
dec
in
mov
mov
xor
xchg
fistpll
mov
pop
add
xor
daa
aad
cmp
lods
ja
lcall
mov
dec
scas
pusha
pop
rolb
fidivl
mov
mov
out
sbb
xorb
mov
or
jae
and
mov
and
sbb
or
sbb
or
lods
js
jb
sub
add
add
add
ss
std
iret
cmp
cld
mov
sub
add
add
add
xor
push
add
imulb
clc
push
sbb
xchg
stc
and
loope
cmp
aad
es
sbb
xchg
stos
sbb
or
fistpl
lock
dec
xchg
mov
cmp
xchg
ficompl
call
lea
jg
cmc
mov
insl
mov
jae
mov
pop
or
dec
nop
sbb
mov
inc
push
sub
or
mov
mov
lods
sub
std
xchg
mov
push
enter
add
fildl
push
push
mov
ret
adc
push
sarl
cs
scas
bound
es
in
lods
cmp
add
cmpsl
xchg
mov
insb
xor
adc
or
xchg
jmp
jae
hlt
sbb
adc
das
rorl
push
cli
filds
mov
icebp
inc
lret
gs
sbb
dec
iret
push
cmpsl
loopne
jb
mov
ja
nop
enter
in
out
stc
xchg
inc
or
ja
in
xor
shrl
lock
xor
in
fcmovb
sub
enter
loop
aad
mov
out
in
mov
jecxz
dec
inc
dec
adc
cmpsl
pop
mov
fs
push
mov
mov
lods
jbe
outsl
data16
insb
inc
adc
push
movb
mov
fcmove
aad
lcall
clc
insb
jne
movsb
jge
aas
mov
aaa
adc
push
push
inc
mov
xorb
loope
mov
add
stc
iret
fst
pop
xchg
xchg
pop
insl
rep
mov
cmp
pop
cltd
movsl
push
jg
inc
clc
mov
mov
cmp
push
ret
ja
dec
jge
ret
enter
dec
sahf
cmp
adc
mov
loope
pushf
ret
cli
ljmp
add
jge
fcmovb
mov
mov
es
pushf
sub
sti
bound
mov
test
arpl
mov
inc
mov
push
sbb
or
mov
es
in
pushf
and
push
int3
call
mov
pop
sub
xchg
lret
mov
xchg
sub
mov
add
ljmp
and
mov
xchg
fisttpl
pop
push
hlt
lret
stos
cmpb
push
mov
rclb
sbb
rol
pop
lea
xchg
mov
icebp
fsts
jae
sbbb
push
xor
dec
repnz
cmp
cltd
xor
pushf
lret
pop
ss
push
rolb
add
or
mov
xor
pop
cli
xor
pop
hlt
ficoml
imul
arpl
cs
sti
mov
imul
dec
jne
xchg
xchg
shll
addb
mov
enter
mov
mov
pop
push
mov
adc
sub
aam
adc
inc
arpl
cmc
pop
jns
stos
sub
aad
push
cmp
xor
adc
sbb
movl
hlt
sti
lcall
mov
xlat
push
pop
jl
and
add
fidivrs
push
xchg
lds
or
mov
xor
cmp
cmp
jp
imul
nop
popa
dec
cmpsb
int
popf
push
mov
aas
imul
nop
test
inc
fldenv
sbb
lock
popf
fsubl
sub
mov
push
fsub
push
xchg
movsb
fsubrl
inc
inc
jmp
push
inc
inc
scas
xor
push
aad
adc
inc
lcall
jno
in
movsl
movsb
arpl
lods
movsl
push
mov
repz
shlb
xor
ljmp
test
mov
xchg
lods
mov
cmp
clc
dec
adc
mov
sbb
pop
sbb
shll
ret
push
cmpb
push
sbb
xor
ret
enter
mov
jl
adc
aaa
mov
and
mov
adc
aad
cmp
into
out
clc
sub
je
jecxz
cmp
xlat
int3
test
int3
popa
ss
in
mov
cmp
mov
mov
and
jle
or
sub
pop
jmp
sbb
and
and
out
cli
push
sbb
fdivr
out
lock
xchg
sarl
test
push
push
mov
jecxz
jne
sub
push
sub
out
or
mov
jns
shr
sbb
pop
popa
lds
lret
repz
push
mov
add
jb
mov
pushf
repz
dec
xor
aam
outsb
adc
sbb
leave
fnstenv
repnz
add
add
es
mov
jmp
fdivrp
movsl
sahf
dec
sbb
add
add
mov
pop
or
cmc
addb
mov
mov
mov
sbb
inc
or
enter
pop
ret
aam
jns
sub
pop
dec
adc
sbb
lods
push
jo
sbb
repnz
jl
bound
mov
cmp
rep
jp
int3
cwtd
jo
in
mov
cmpb
icebp
jne
or
push
stos
fnstcw
jo
std
stc
mov
outsl
paddb
in
fstpt
mov
xor
or
mov
popf
cmp
lcall
adc
into
xor
or
sti
pop
scas
inc
rolb
mov
pop
jns
dec
fisttpl
out
loope
cmpsb
mov
or
inc
mov
rcll
xlat
xchg
out
add
jne
jge
fidivl
inc
xchg
xor
dec
pop
xchg
adc
sub
mov
call
push
cmp
pusha
xchg
jg
push
popa
mov
mov
sub
pop
test
pop
jle
or
xor
jo
mov
pushf
std
push
je
inc
aad
xchg
les
mov
leave
adc
adc
jp
xor
xlat
movsb
xor
sar
adc
mov
adc
mov
push
sbb
scas
in
mov
cltd
sub
mov
adc
push
mov
fmull
int
in
ljmp
jns
and
add
std
ret
push
cltd
mov
out
dec
sbb
filds
jmp
cmpsb
xor
sub
and
rorl
push
dec
inc
addr16
ja
adc
into
adc
push
ret
ljmp
ret
push
ljmp
adcb
cltd
ror
mov
push
cmp
push
and
stos
loop
dec
iret
leave
dec
sub
mov
scas
cmp
ret
sbb
push
clc
sbb
and
adcl
cwtl
lret
fists
cmp
addr16
clc
xorl
mov
jnp
fisubl
es
notb
jb
mov
jae
pop
xchg
je
xor
cmpsl
mov
arpl
stos
notb
gs
mov
dec
repz
lcall
cmp
pop
fadds
insl
pop
rorb
in
loopne
and
and
ss
inc
pushf
jno
out
hlt
or
mov
hlt
mov
xlat
popa
push
ret
jge
cwtl
lahf
ja
cmp
add
cld
cmp
icebp
imul
mov
aam
aam
push
fs
setbe
push
scas
xchg
adc
mov
stos
fisubl
dec
or
mov
jle
push
cmp
fs
mov
scas
pop
outsb
stc
pop
fmull
or
add
cmc
out
js
jo
jecxz
jecxz
mov
ds
lds
dec
mov
xchg
push
and
add
jle
jl
xchg
fwait
mov
lds
or
push
fstl
push
push
adc
lahf
sub
mov
mov
jbe
mov
mov
pop
dec
push
es
in
mov
out
adc
sbb
notb
and
test
imul
push
xchg
hlt
push
jle
inc
mov
lds
push
xchg
hlt
movsl
stos
or
adc
push
adc
xchg
arpl
shlb
inc
in
out
lahf
sub
out
bound
pop
pusha
push
sbb
adc
int3
dec
mov
outsb
test
ljmp
lea
les
not
pop
icebp
outsb
roll
adc
jne
or
jp
outsb
cld
das
icebp
into
in
dec
mov
ret
jbe
sub
mov
in
cmpsl
and
jmp
roll
sahf
cmp
cmp
mov
insl
mov
and
sahf
scas
in
inc
xchg
push
or
daa
inc
outsl
inc
je
xor
mov
scas
fists
imul
cli
cld
xor
cmpsl
lret
bound
movsb
inc
lock
movsb
notl
lret
outsb
mov
xchg
inc
xor
nop
popa
push
jmp
xor
movsb
ret
dec
scas
lcall
icebp
jmp
sub
cmpsl
out
sbb
inc
stos
inc
es
orl
stos
pop
mov
push
ret
mulb
inc
icebp
xor
and
sbb
cli
cltd
loop
mov
fldt
lods
popa
pushf
push
mov
jmp
inc
popf
mov
rdmsr
push
in
shll
inc
int
mov
sbb
jo
bound
pushf
mov
or
add
aaa
sti
addr16
out
fidivs
sbb
popa
push
xorb
add
add
add
sbb
lods
ss
sbb
mov
dec
inc
jle
jae
into
adc
xor
and
idivl
gs
dec
imul
int
adc
pusha
ss
test
pop
stos
xor
out
dec
push
loop
pusha
out
xor
mov
nop
inc
jae
mov
out
shrl
pop
or
outsb
mov
xchg
pop
lcall
mov
jnp
icebp
mov
pop
call
test
jo
xchg
mov
in
mov
sbb
dec
insb
shl
sbb
outsb
xor
mov
adc
ret
into
stc
repnz
cld
andl
xchg
push
int3
pop
ret
mov
out
xlat
jo
jb
dec
call
fists
inc
mov
insl
aas
add
fsubp
adc
push
cld
sub
pop
add
adc
push
sbb
push
comiss
push
aaa
add
cwtl
rcll
mov
cmp
pop
scas
push
pop
add
ror
mov
hlt
sahf
lret
push
call
addr16
rcr
mov
mov
push
add
sti
mov
sub
pop
push
fcompl
mov
mov
call
movsl
push
dec
in
xchg
mov
popf
out
xchg
sti
mov
push
pop
xchg
pop
adc
inc
out
pop
loop
xchg
inc
pop
inc
das
mov
fiaddl
dec
sub
jbe
mov
mov
and
jmp
mov
imul
pop
jg
xlat
push
cmp
jns
mov
push
adc
data16
leave
add
movsl
scas
in
sbb
mov
jb
cli
int
iret
jbe
mov
mov
test
test
cltd
cmp
sub
push
daa
add
pop
ret
sub
adc
mov
in
pop
jg
inc
imulb
movsb
xchg
insb
and
int
pop
fsubrp
sub
ficompl
insb
mov
push
cld
pop
pop
and
xchg
fs
bound
into
int3
stos
lret
mov
push
add
gs
adc
xor
cmp
jno
push
sub
cltd
xor
in
sbb
leave
out
and
dec
dec
cmp
fwait
hlt
and
jmp
adcb
cs
in
flds
push
xchg
inc
rclb
adc
les
pop
jbe
mov
push
pop
dec
jge
sbb
addr16
paddq
or
pop
cli
inc
sub
cs
cwtl
or
dec
mov
add
and
fadds
lods
ss
fimull
add
jnp
sbb
pop
js
arpl
push
pop
xchg
or
sbb
mov
cmp
inc
bound
es
push
fmulp
inc
ret
mov
mov
add
aam
xor
mov
jno
adc
repnz
sbb
mov
pop
int3
in
gs
jle
gs
push
xchg
xchg
adc
add
adc
jl
or
xchg
mov
mov
mov
in
mov
sbb
cmp
lcall
adc
loope
or
and
pushf
std
and
bound
adc
add
inc
push
or
sub
pop
xchg
sarl
imul
dec
das
je
pop
faddl
mov
fisubrs
push
aam
daa
cltd
in
mov
movsl
dec
jne
push
add
fldenv
jp
cld
int
scas
dec
mov
and
lret
loope
fsubrl
pop
pop
sti
inc
sub
lods
stc
inc
mov
imul
fs
dec
leave
cltd
mov
adc
insl
sub
data16
fisubrl
jnp
pop
cltd
mov
cmpsb
data16
inc
enter
xchg
ljmp
fildl
in
scas
mov
inc
ljmp
pop
xor
sub
push
inc
movsb
inc
shlb
jp
inc
mov
adc
int
test
sahf
mov
insb
pushf
xchg
or
fxch
jne
push
and
fsubr
xchg
aaa
popa
sbb
lea
mov
int3
lea
push
xchg
in
mov
push
add
push
stc
mov
pusha
mov
push
xchg
adc
sub
and
out
rcll
lahf
lret
xor
jecxz
je
mov
cmp
xchg
scas
add
pop
jae
push
shll
mov
sub
cmpsb
sarb
test
test
shlb
inc
mov
into
or
dec
es
xor
xchg
js
push
cmp
in
sbb
push
lock
add
add
inc
sbb
repz
xlat
sbb
aaa
add
repz
add
out
jb
adc
xchg
push
mov
xchg
xchg
dec
aaa
xor
mov
pop
add
xchg
xchg
fwait
dec
add
ljmp
std
push
cmpsb
movsl
insb
fidivrl
frstor
and
xor
mov
jmp
cs
jecxz
add
addr16
inc
lods
jb
pop
cmp
add
idivl
pop
pop
push
aam
ljmp
push
mov
mov
jge
mov
cs
stos
test
sarl
xor
lahf
out
sub
leave
loopne
cmp
xor
mov
ret
xlat
addb
cmp
add
jb
and
dec
scas
inc
adc
fwait
sub
cltd
and
dec
test
nop
mov
sarl
je
lret
sbbl
fs
pushfw
pop
shlb
mov
push
xor
pushf
pop
sub
lock
jle
fyl2x
mov
adc
cwtl
icebp
out
mov
rcll
decl
pop
push
pop
jecxz
shrb
clc
mov
std
loopne
in
stc
sahf
jg
fimuls
xchg
out
leave
daa
lea
pop
fistl
xchg
mov
out
push
jmp
pop
pushf
pushf
adc
pop
jge
and
dec
pop
aas
js
inc
sbb
aas
dec
lcall
outsl
push
cmp
or
fsubl
xchg
jle
iret
mov
xor
sti
adc
pop
jmp
test
sbb
mov
int
sahf
xor
push
clc
repnz
add
pop
fst
popf
or
cmp
pop
adc
in
adc
dec
in
and
mov
dec
jp
and
out
daa
and
inc
movsb
jnp
sub
fimull
mov
outsl
hlt
and
in
imull
xor
das
mov
lret
mov
pop
mov
stc
cld
arpl
gs
mov
sub
pop
arpl
outsl
popa
adc
mov
cli
shlb
inc
lock
ficompl
das
fdivp
lods
cwtl
adc
jae
or
add
leave
ret
mov
jg
pop
scas
sub
adc
dec
mov
pop
imul
sbb
sub
int3
arpl
inc
inc
add
arpl
in
pop
and
sti
mov
movsb
aam
cli
insl
sbb
test
mov
sbb
jb
pop
inc
jge
and
cmp
mov
sbb
lds
shr
jge
testl
mov
es
clc
ds
out
mov
lret
and
les
pop
push
push
cltd
call
mov
inc
mov
mov
ja
arpl
or
dec
iret
fdiv
cwtl
sbb
jbe
divb
adc
repz
xor
ljmp
push
jo
test
ret
aam
arpl
fidivrs
and
sbb
xchg
jno
cld
sub
icebp
int
and
cmp
and
ret
sub
cmp
cmp
cmpsb
jno
sahf
add
mov
jg
dec
fiadds
lods
iret
push
lcall
cltd
xlat
ret
repz
sub
sub
pop
mov
push
mov
repz
pop
leave
xchg
adc
pop
sbbl
sub
xchg
push
adc
pop
pop
mov
and
into
dec
sub
mov
clc
lods
add
push
fdivl
fimuls
push
adc
outsl
mov
inc
lods
insl
scas
fldcw
cwtl
sub
gs
push
and
scas
cmpsl
jns
fisubrs
add
stos
and
adc
subb
fsubl
das
and
mov
mov
outsb
mov
sbb
push
negb
jp
pop
adc
mov
ljmp
adc
pop
popa
and
inc
sub
subb
dec
ss
push
mov
jp
test
aaa
sub
aam
mov
lods
xor
int
sbb
notl
out
xor
mov
ss
lods
mov
sub
rclb
jns
mov
push
inc
pop
mov
mov
sbb
into
mov
cmpl
add
add
sub
cmc
scas
pop
or
mov
mov
movsl
sub
jl
iret
loope
fdivrp
loopne
mov
dec
dec
int
xor
jbe
in
sub
je
cmpsb
cmp
js
sbb
addb
add
add
mov
sbb
push
add
add
mov
test
fistpll
lea
repz
xchg
cltd
push
repnz
dec
pop
dec
aad
icebp
mov
fucom
push
xor
iret
and
pusha
mov
fmull
cmp
cmp
mov
mov
push
dec
mov
push
js
xor
xor
notl
cmp
in
incb
mov
iret
inc
aaa
add
mov
fidivrs
stos
and
andl
psubsw
popa
leave
xchg
into
pop
pop
sarb
cmp
and
jl
addl
movsb
mov
arpl
cmp
inc
mov
mov
push
call
cmp
mov
lret
cmp
outsl
and
and
push
add
mov
mov
sbb
filds
fs
and
push
outsb
aam
and
mov
outsb
push
mov
jnp
popf
cltd
mov
je
subb
sub
test
mov
sbb
jecxz
mov
adcb
cmp
cmpsl
loopne
lds
lock
push
mov
and
sbb
xor
mov
les
cmpb
out
fsubl
mov
je
test
loope
cltd
pop
dec
pop
push
ss
push
gs
sarb
push
dec
mov
xchg
xchg
and
pushf
fdivrl
inc
push
cmpsl
adc
jb
stos
sbb
imul
imul
pop
cltd
call
fwait
outsl
fistpl
lods
mov
push
popa
sarl
aaa
cltd
jge
jg
flds
cmpsl
rcl
out
out
jae
int3
scas
loopne
push
xor
rolb
loope
aas
fs
enter
insl
cld
cmp
push
movsb
pop
mov
and
or
mov
sahf
adc
shrl
mov
dec
fstps
jge
int3
fildl
sbb
xor
fcmovbe
int3
fsubl
insb
scas
gs
adc
ss
push
add
scas
je
jg
push
add
and
mov
daa
jae
mov
inc
add
or
sar
lock
icebp
jle
cmpsl
push
stos
loop
imul
rclb
cli
mov
repnz
or
dec
int
bound
jne
andb
shl
and
popf
inc
test
ds
clc
push
pop
mov
lock
test
dec
sub
sbb
and
cmp
mov
jae
sbb
fisttps
lods
xor
and
stos
adc
andl
sbb
mov
jae
or
sub
js
and
sbb
ds
pop
push
sub
jle
inc
andb
jmp
into
xchg
add
sbb
xor
dec
mov
xor
jo
adc
push
aad
rorl
and
add
xchg
jb
imul
cmp
dec
sbb
sub
enter
in
sahf
in
or
scas
jle
sbb
xchg
mov
cmpsl
outsb
rep
xchg
push
pop
leave
test
je
imul
bound
push
xchg
aas
in
sbb
fstpt
cmc
fsubl
cs
xchg
nop
inc
outsl
jmp
xchg
ss
jp
jg
push
jl
pushf
and
xchg
pop
ret
xchg
loope
jne
sahf
dec
loopne
imul
sub
mov
popf
js
scas
jmp
pop
sahf
adc
jno
std
sub
or
cld
lret
lods
test
mov
adc
jnp
jmp
push
ja
into
adc
mov
cmp
push
mov
lahf
testb
shl
out
cmc
sbb
inc
or
push
cmp
cmp
es
leave
ret
insl
in
faddp
pop
sarb
scas
add
popf
push
inc
les
mov
pushf
rcr
cmpsl
add
xchg
in
cmc
inc
int
call
or
lods
mov
adc
popa
push
xor
dec
sti
mov
dec
mov
sub
xchg
in
xor
xor
dec
push
pop
adc
xchg
pop
or
jl
pop
sbb
bound
mov
push
xchg
sbb
xchg
nop
faddl
mov
aad
mull
ffree
sbb
roll
shl
push
mov
add
add
jns
mov
push
lods
dec
std
cmp
xchg
push
jle
icebp
mov
cmpsb
fistpl
pop
shlb
add
add
add
adc
dec
negl
mov
aam
sub
repz
add
enter
int
out
imul
and
push
sbb
push
sub
mov
in
add
adc
popa
addr16
jle
outsl
into
insb
inc
loopne
xor
fsubl
jnp
jb
jecxz
lock
mov
popf
mov
lods
lcall
ret
movsb
mov
pop
dec
bound
movsl
scas
in
in
mov
iret
push
lahf
push
adc
mov
inc
sahf
js
dec
pop
jmp
push
mov
push
or
es
cmp
and
sbb
outsl
push
hlt
outsl
popf
xchg
fnsave
jmp
mov
fsubs
lahf
xor
add
xchg
inc
sbb
divb
lods
push
hlt
lret
in
mov
hlt
popa
jg
and
test
mov
mov
fs
mov
mov
push
dec
leave
lret
fistps
stos
jb
test
jl
stos
jmp
sbb
mov
loop
loopne
lea
cmp
decb
and
lcall
int
mov
inc
sub
lods
cmp
jnp
mov
test
scas
xchg
enter
push
adc
movsl
and
data16
jge
jae
xor
movsl
dec
xchg
inc
hlt
lahf
sbb
enter
lret
testl
or
xchg
fnstcw
sbb
mov
ret
mov
pop
push
repz
ss
sub
popf
adc
xchg
enter
push
int
and
loope
int3
add
test
push
jmp
addr16
xor
imul
add
push
xor
movsb
or
inc
mov
inc
into
jecxz
pop
add
add
cmp
cli
clc
dec
jnp
orl
push
jp
dec
ja
in
enter
mov
das
mov
adc
lods
loop
outsb
loopne
sbbb
xchg
int
and
orl
xchg
or
mov
test
fldl
in
pop
mov
fdivr
out
in
and
pop
scas
or
xor
sbb
mov
lea
add
loopne
fbld
sub
rcll
es
xchg
pop
inc
ljmp
push
std
mov
push
jo
mov
popf
stos
mov
pop
aad
adc
insl
icebp
or
jns
dec
mov
insb
imul
fsubp
push
mov
xor
ror
lret
adc
rcr
pop
fistl
iret
test
jmp
icebp
stc
in
aam
sub
mov
jns
das
jb
imul
cmp
cmpsl
mov
loopne
loop
sbb
xor
leave
fidivs
pop
mov
outsb
pop
inc
sbb
jl
rol
ret
shl
mov
call
sub
leave
jbe
out
adc
xor
cmp
and
in
mov
dec
dec
sub
int
test
in
mov
lds
sbb
or
push
mov
insb
in
push
mov
inc
and
push
data16
push
js
cmp
iret
mov
xor
cmp
sbbb
pop
dec
inc
imul
movsl
mov
lods
dec
imull
mov
mov
les
xchg
ret
xchg
movsb
les
test
cltd
imul
fcmovnu
jge
popf
sub
mov
sub
mov
push
mov
shll
dec
into
pop
popa
les
hlt
jno
xchg
ret
repnz
xor
and
xor
ljmp
shrl
mov
push
inc
out
add
jae
popa
leave
xlat
lahf
mov
mov
jmp
insl
push
xchg
push
sbb
push
in
das
ja
add
push
js
inc
jl
pop
jl
cmpb
ljmp
add
add
fcoms
dec
dec
push
sbb
jb
dec
dec
imul
rolb
xchg
dec
js
hlt
xor
sub
test
in
push
stos
pop
lret
push
xor
ret
mov
fists
lret
or
sub
or
and
icebp
mov
outsb
or
mov
sub
xchg
push
movsl
shlb
mov
inc
out
adc
stos
in
mov
rorl
mov
movsb
push
cmp
ds
xchg
jbe
lods
loope
jle
pop
call
xchg
sub
mov
insb
test
jecxz
pop
lock
cwtl
filds
jge
lret
add
pop
dec
cmp
sahf
ds
mov
add
add
ds
fdivp
cld
ds
daa
cmp
in
inc
dec
inc
add
repz
add
pushf
xchg
mov
adc
mov
movsl
dec
and
test
inc
xchg
mov
dec
test
cltd
outsb
pusha
psrlq
repz
jmp
arpl
insb
out
xlat
mov
push
lock
push
daa
inc
xor
fdivp
push
mov
std
sub
sbb
sub
mov
inc
mov
arpl
sub
mov
popf
incl
push
int3
mov
cmp
fimull
jmp
mov
mov
mov
ja
jl
adc
shl
testb
xchg
call
in
mov
sti
mov
leave
sub
jnp
pop
xchg
jb
lahf
lahf
jne
pop
cli
mov
mov
and
xchg
imul
sbb
adc
mov
add
cmpsb
adc
rolb
xorl
std
or
lock
cwtl
imul
lahf
lret
mov
xchg
imul
mov
push
fdivs
mov
add
call
aad
cmp
pop
mov
pop
jae
pop
leave
jmp
dec
cltd
pop
int
adc
inc
lahf
std
dec
sub
fucomi
mov
loopne
mov
mov
xor
jle
lock
push
mov
ret
sbb
lcall
cli
push
dec
imul
push
push
es
fcompl
mov
push
mov
jmp
loop
or
push
or
adc
xchg
inc
cmpsb
shlb
out
fistpl
fcoml
pop
mov
daa
fs
daa
scas
push
mov
xchg
push
mov
pusha
or
mov
xchg
popf
jnp
pop
stos
mov
inc
sub
bt
push
es
pop
add
mov
cld
je
xchg
and
mov
dec
dec
inc
xor
aaa
cli
sbb
ljmp
fisttpl
cmpb
adc
jmp
addr16
jno
mov
sbb
mov
mov
lcall
pop
dec
hlt
push
sbbb
mov
jnp
xor
and
popf
xor
add
mov
pop
inc
movsl
fstpl
ret
add
sbb
mov
jnp
fmulp
sahf
rclb
iret
sahf
and
adc
lock
out
ss
cmp
data16
mov
inc
jns
xchg
scas
adc
push
pop
adc
push
pop
int3
int3
imul
push
ss
jns
cmp
jmp
std
enter
cmpb
and
xchg
lahf
js
xchg
xchg
pop
pushf
aas
lret
fimull
addr16
pop
or
jo
in
imul
mov
cmp
mov
lcall
sub
cmp
xchg
inc
push
cltd
jecxz
lahf
aas
mov
int
jge
cmp
or
call
outsb
mov
lods
lret
pop
cwtl
repnz
repz
mov
and
daa
xchg
inc
popf
loop
lods
mov
add
popa
cmpsb
loopne
jo
adc
jg
mov
push
data16
xor
pop
and
imul
js
or
repz
push
pop
adc
xchg
fucom
mov
hlt
inc
ficoml
adc
test
adc
xchg
inc
out
popf
xchg
lds
popa
rolb
ds
dec
and
inc
stos
or
mov
fwait
das
popf
sbb
imul
pop
xor
push
dec
and
push
inc
daa
sub
xlat
push
out
fsubrs
out
popf
std
ljmp
add
aaa
pop
out
out
icebp
mov
cld
sub
jb
pop
out
push
es
or
fstl
pop
cli
sub
sub
data16
cmp
ss
xor
add
xor
mov
sahf
fs
js
test
lret
cmp
leave
sti
mov
add
jo
aaa
fdivrl
cli
stc
les
loopne
das
ret
fimull
in
iret
cli
inc
fdivrl
xchg
push
cmpsb
pop
dec
cmp
cmpsl
dec
add
jle
dec
fxch
movsb
inc
inc
popf
int3
jle
in
add
sub
in
jmp
lea
aaa
fidivl
jbe
pop
or
add
stos
nop
cltd
js
je
xchg
pop
push
fstpl
pop
add
and
push
mov
ss
inc
jae
xor
xchg
adc
mov
xor
sub
in
xchg
inc
pushf
mov
popf
out
fistpll
lcall
jno
lret
stos
ret
arpl
sbb
test
out
lods
in
std
and
mov
pop
and
add
add
add
xor
jg
sbbl
inc
dec
add
repz
add
loop
andl
insl
cmp
test
mov
outsb
shrb
pushf
xchg
mov
sub
data16
pop
call
mov
cmpsl
xor
sub
xor
mulb
jge
push
movsl
inc
or
and
xchg
bound
popa
mov
aad
imul
adcl
add
adc
pushf
into
imull
mov
daa
rcrb
xchg
test
int
push
fildll
dec
scas
leave
mov
dec
adc
bound
cmp
insl
daa
cmpl
xchg
fs
xor
and
push
adc
mov
pop
push
adc
and
xchg
xor
xor
in
int3
leave
arpl
or
fcmovbe
int3
int3
pop
push
sbb
add
mov
mov
push
out
jg
jl
hlt
iret
nop
push
fs
insl
cmp
icebp
inc
outsb
icebp
shr
gs
popf
leave
popf
popa
sbb
leave
rol
push
test
repnz
add
or
ljmp
and
js
stc
ja
mov
jp
cmp
adc
pop
loope
add
jns
mov
jns
sbb
fucompp
test
pusha
mov
jmp
outsl
out
cltd
pop
xor
fistps
jmp
jle
lea
adc
dec
lret
pushf
ja
and
hlt
dec
jmp
cld
movb
mov
lock
test
xchg
aaa
jae
add
mov
push
lret
and
gs
mov
and
or
mov
mov
test
sub
push
outsl
push
and
cmp
dec
fidivrl
lret
mov
cltd
mov
mov
mov
push
or
das
sbb
and
popf
or
mov
cld
sbb
lea
in
pop
mov
std
and
lahf
lret
in
and
jp
stos
test
aad
xor
and
inc
jmp
sbb
iret
adc
and
les
sub
mov
mov
leave
pop
cmp
pop
jmp
mov
inc
loope
pop
sub
and
lret
pop
ds
push
jno
js
in
in
dec
xor
std
int
mov
ret
arpl
jbe
daa
fiadds
pop
orl
sbb
cmp
test
push
cmpsb
cmp
add
notl
pop
mov
fucomip
dec
add
loope
into
mov
push
or
cmp
and
sar
mov
mov
dec
fucomi
jle
jp
cmp
mov
shr
call
pusha
hlt
popf
in
in
or
jbe
push
dec
repnz
pop
add
pop
movsl
mov
mov
cmp
mov
ret
outsl
xor
xchg
mov
xor
jns
pushf
jecxz,pn
mov
imul
mov
sbb
push
and
fwait
scas
sbb
sarl
xor
push
inc
xchg
in
pushf
mov
xchg
mov
jmp
fistps
lret
lods
mov
out
les
loop
rcr
cmp
sbb
push
out
mov
repnz
test
in
cltd
cmp
stc
xchg
mov
js
ror
and
pop
pop
sbb
iret
nop
int3
sbb
pop
loop
lods
sbb
ds
or
mov
pop
loope
imul
dec
cs
mov
test
xor
out
push
mov
insb
cltd
outsl
mov
or
es
pop
sbb
cmp
xor
loopne
jns
push
mov
and
mov
pop
xor
leave
data16
push
lds
clc
cmp
mov
sub
inc
and
jg
pop
ja
in
out
fldcw
sub
movsb
je
mov
aad
lock
mov
cld
inc
mov
roll
mov
or
pop
inc
dec
es
or
jno
xlat
aam
add
push
cld
push
and
outsb
jp
xor
fstpl
inc
add
pop
mov
push
cmp
cli
and
mov
sub
scas
daa
clc
jne
mov
jo
in
sahf
sarl
ljmp
and
fcoms
and
sbb
fwait
adc
xor
popa
jne
xor
lea
cmpsb
fcoml
std
add
loopne
aad
sbbb
int
jmp
add
dec
in
stos
dec
leave
mov
negb
add
loop
add
mov
jmp
imul
add
add
add
popf
push
dec
loope
insl
int
sub
mov
dec
mov
mov
cmp
adc
je
jle
nop
cld
mov
sbb
aaa
xchg
xlat
in
jne
shlb
adcb
adc
mov
cmp
push
inc
fstl
shlb
jle
xor
pop
sub
mov
add
add
mov
lcall
mov
mov
out
adc
mov
jae
jb
sub
call
test
sub
ds
repnz
imul
and
andb
xchg
pop
add
adc
sub
arpl
jns
push
loop
xchg
rcll
cld
loope
incb
pop
sbb
dec
outsl
shrb
jl
cmp
mov
std
sbb
adc
push
aad
sub
sti
dec
jae
or
xor
aam
adc
xchg
jl
and
loopne
cmpsb
js
jae
jnp
add
push
scas
iret
or
popf
mov
push
movsl
arpl
inc
dec
push
test
push
movsb
cmpsb
mov
or
stos
fisubrs
movsl
inc
pop
push
mov
and
popa
pop
scas
ljmp
dec
sub
cmpsb
movsb
outsl
or
push
negb
inc
fldcw
xchg
dec
mov
xor
inc
xor
js
mov
sub
out
out
dec
push
xor
mov
xchg
inc
push
jo
lahf
arpl
loop
addl
xchg
jbe
xor
add
fsubp
enter
sahf
push
imul
adc
ljmp
out
jle
shlb
add
mov
icebp
sub
icebp
mov
push
xchg
adc
jae
pusha
imul
not
xchg
lea
and
xor
and
das
popa
mov
jmp
jbe
scas
jne
setle
jbe
add
xchg
fistpll
out
jb
lahf
in
stc
jp
mov
and
test
cli
jbe
pushf
in
sarb
push
and
inc
inc
repz
mov
es
push
addb
and
pop
in
cmpb
mov
outsb
pop
jecxz
dec
or
sub
jno
sub
repz
out
inc
inc
sub
lds
cmp
and
stc
addb
jl
sub
mov
lret
pop
jae
test
outsl
jg
or
jge
pop
mov
popa
xchg
insl
in
and
ds
sbb
ss
decb
cmp
mov
jb
lods
push
shl
in
pop
adc
jno
scas
cmp
mov
sarb
mov
aas
fdivr
sub
jge
out
sahf
cli
mov
cmc
pop
push
adc
add
std
mov
adc
and
mov
mov
in
dec
inc
aad
adc
mov
inc
or
inc
rcrl
daa
sub
sub
aad
fs
or
sbb
lcall
aad
sti
lock
and
mov
call
mov
jno
nop
out
add
rorl
jmp
popf
ljmp
movsb
gs
je
push
mov
ljmp
ret
test
and
adc
dec
out
xchg
add
xchg
dec
fbld
ss
sub
hlt
data16
nop
jb
insl
mov
inc
enter
add
xchg
jnp
lds
xor
sti
add
inc
lods
ror
xor
lret
clc
imul
stos
int3
and
jmp
gs
and
in
icebp
hlt
pop
es
int
fs
jne
add
push
in
push
iret
out
and
inc
enter
xor
pushl
jb
dec
test
sbb
insb
adc
pop
cld
sbb
cmpsb
faddp
push
pop
out
pop
pop
les
push
subb
mov
add
divb
sub
aas
sbb
sbb
mov
mul
add
outsb
mov
jbe
push
int3
stos
cmc
into
aas
cmp
fisubl
adc
inc
nop
jbe
mov
scas
add
imul
or
loop
mov
sbb
ja
cmp
ret
shll
push
push
dec
jecxz
insb
add
out
bound
cmp
mov
dec
jns
xchg
pop
push
sbb
pop
mov
jb
loop
fmuls
add
add
add
loope
loope
fistpll
adcl
xchg
mov
daa
daa
push
add
repz
add
outsl
pop
icebp
testl
outsl
js
mov
jns
iret
mov
cmpb
and
ds
adc
stos
jo
js
mov
xchg
and
sbb
dec
inc
xor
fnstsw
mov
lret
ret
orb
into
pushf
out
in
sub
add
push
cld
ja
adc
mov
addr16
inc
shrb
pop
into
aad
jbe
cli
xchg
stc
sbb
jp
aas
adc
pop
or
in
lcall
xchg
jnp
hlt
loopne
cmp
pop
jae
xor
lret
ljmp
mov
push
jmp
imul
lock
mov
mov
xor
sti
push
ljmp
jno
cmc
pop
xchg
pop
mov
mov
scas
mov
addl
loopne
pop
gs
das
test
push
sbb
mov
outsl
adc
imul
xor
aas
pop
ss
lods
ljmp
es
mov
sub
repz
cld
in
outsl
inc
in
lret
icebp
add
int3
lods
out
mov
jmp
outsb
pop
bound
int
sbb
loop
lret
pop
mov
lods
push
stos
ds
cmc
mov
fwait
inc
das
cmc
jbe
push
mov
icebp
jo
imul
add
sbb
dec
add
mov
lods
xchg
cmpsb
xlat
ret
enter
push
test
push
sbb
adc
add
in
sbb
push
jbe
mov
dec
pop
add
push
adc
shlb
sbb
mov
pop
jmp
add
lods
loopne
pop
nop
ficoml
mov
es
adc
popf
jp
outsb
fistl
lds
sbb
repz
cmpl
xor
scas
push
dec
push
cmp
lock
sub
into
mov
lret
push
repz
push
cmpsl
cmp
in
sbb
cmp
pop
lret
cld
cmp
sbb
push
xchg
dec
cs
scas
es
insl
clc
aas
xchg
push
mov
jne
mov
out
mov
xchg
adc
sti
gs
testb
and
bound
mov
lods
ljmp
jb
xchg
adc
sbb
push
xchg
inc
push
mov
lock
cmp
shl
xchg
inc
flds
inc
ja
leave
loop
imul
sub
into
dec
aaa
mov
inc
es
setge
int
ja
loope
jo
gs
lods
daa
popa
mov
inc
xor
into
test
in
push
cmp
test
xor
xor
jno
not
jne
pop
ds
xchg
outsl
cmp
jmp
cmp
fisubl
xchg
pop
std
inc
imul
xchg
or
rorl
stos
fwait
pushl
cmp
add
movsl
sub
push
les
arpl
inc
aas
imull
or
mov
jns
xor
jl
pop
sub
jb
xlat
in
nop
movntq
out
into
cmp
int3
into
xchg
mov
es
cmp
dec
icebp
out
cmp
ss
adcl
ds
mov
shrb
call
les
mov
in
pop
inc
lret
lret
jbe
mov
fwait
ljmp
sbb
pop
dec
mov
loopne
leave
sbb
xchg
outsl
fdivrp
insb
xor
aas
push
icebp
out
int
inc
andb
dec
pushf
xchg
imul
mov
sahf
xor
dec
ss
mov
push
mov
sbb
nop
std
push
test
adc
cltd
adc
pop
and
daa
and
add
jnp
shl
pop
imul
call
in
aaa
lods
sarb
data16
add
outsl
or
xlat
lea
popa
xchg
add
sti
aad
mov
or
mov
fsub
jo
sub
not
mov
cmp
xchg
mov
xor
lahf
xchg
mov
cld
push
test
pop
and
sti
shll
int
mov
mov
pop
inc
inc
cwtl
pusha
push
movsl
jo
pop
pop
mov
xor
in
shr
jae
out
popa
lahf
cmp
push
cs
fnsave
ficomps
inc
enter
add
push
mov
cwtl
add
addr16
das
pop
clc
pop
add
xchg
inc
mov
mov
add
test
xchg
and
cmp
mov
pop
add
repz
add
xorl
jl
push
pop
sbb
mov
inc
lret
lea
insl
cld
pusha
leave
mov
pop
leave
mov
loopne
fstpl
stos
mov
das
test
stos
enter
decb
dec
mov
push
and
or
dec
mov
lods
imul
xchg
cld
psubd
jmp
aas
mov
lret
inc
mov
dec
xor
int
jns
lock
mov
shlb
rcrb
in
jns
pop
sbb
dec
push
or
fildll
mov
mov
andb
xchg
jno
pop
or
seta
sbb
orb
xchg
and
cmc
bound
cwtl
mov
pop
negl
loopne
mov
mov
imul
mov
jns
pop
or
pop
mov
sub
data16
dec
cmpsb
nop
aam
inc
lret
mov
add
sbb
fidivs
xchg
rcrl
sub
js
jbe
push
cmp
lea
add
out
fcomip
mov
movsb
jg
mov
cli
sbb
mov
rorb
popa
sbb
scas
push
inc
mov
xchg
add
pop
cmp
pop
fisttpl
cmpb
dec
lahf
xor
subl
fs
push
add
jno
adcl
movsb
outsb
pop
mov
cwtl
xor
arpl
les
mov
cld
mov
mov
cmpsl
insl
pop
xor
shr
xor
cmp
lret
and
xor
daa
aam
mov
mov
enter
dec
inc
loopne
cli
test
jno
inc
leave
fisubrl
adc
pop
lret
fistpl
test
jl
cmp
out
xchg
movsb
ja
inc
scas
subb
pop
sbb
sub
xor
insl
xlat
xchg
nop
leave
or
adc
and
rcr
sbb
lahf
adc
packuswb
sub
not
notl
xor
or
arpl
ret
xor
outsl
mov
xchg
jle
out
lea
cmp
xchg
cmp
xchg
and
mov
mov
mov
lret
repnz
or
pop
mov
or
mov
std
sub
xlat
mov
adcl
mov
enter
mov
sti
sbb
pop
ret
cmp
xchg
mov
pop
movsl
mov
test
icebp
jge
test
dec
pop
inc
xlat
adc
cmp
mov
xchg
clc
jg
fists
xlat
mov
mov
test
sbb
add
push
or
imul
sub
jg
nop
fdivrs
mov
inc
or
sub
es
arpl
in
jle
sub
mov
pop
cs
daa
pop
aaa
incb
orb
dec
fisttps
adcl
pop
mov
or
cld
xor
xchg
adc
jl
int3
pusha
push
dec
xor
jns
or
test
inc
adc
pop
fldcw
lds
insb
rclb
ds
sbb
pop
lret
and
outsl
cwtl
xchg
pop
pop
jb
out
test
mov
or
jno
jno
out
cmp
xchg
jle
mov
es
into
mov
mov
xor
adc
pop
or
insb
inc
shr
jge
ja
leave
xchg
push
int
ja
leave
pusha
cmp
jecxz
pop
cmpsb
scas
add
mov
icebp
movsb
js
je
mov
push
and
lahf
mov
daa
in
mov
mov
sub
sbb
ja
out
pop
mov
mov
pusha
lds
ret
pop
lock
aaa
mov
pop
push
or
xchg
call
or
jmp
jl
jne
xlat
cs
rcrl
test
repnz
xor
cli
inc
int
add
movsb
xchg
and
push
push
testl
lcall
jnp
xchg
es
imul
sti
cmp
dec
inc
vandps
fwait
push
xchg
fs
fdivs
cmpsb
pop
jecxz
rcr
mov
scas
mov
fnstenv
cltd
jge
mov
stc
sub
loop
inc
sub
sahf
mov
jo
cmp
idivl
rorl
inc
fdivr
cltd
dec
inc
orl
imul
ret
sub
mov
cmp
and
push
fisubs
sub
or
pushf
dec
push
out
and
enter
addr16
stos
dec
loopne
jo
addr16
jb
outsb
stos
mov
mov
add
add
add
cmp
loope
mov
sbbb
add
repz
add
jbe
cmp
push
push
outsl
mov
inc
and
mov
out
outsl
push
repz
in
mov
and
mov
xor
pop
sub
adc
fnsave
sub
loop
jns
sti
mov
test
imul
lds
insl
mov
sbbl
add
sti
sub
insl
add
adc
sbb
popa
je
ficompl
xchg
testb
dec
or
mov
loopne
outsl
dec
pop
adc
or
mov
adc
stos
bound
ficompl
mov
add
mov
pop
arpl
data16
xchg
mov
rcrl
mov
sub
stc
jo
or
sti
pop
lahf
int3
fwait
mov
or
or
hlt
mov
mov
insb
jo
ss
fsubr
mov
xor
adc
rcr
xchg
adc
lods
dec
add
xchg
jl
les
pop
pushf
push
sbbb
ds
imul
mov
sub
xchg
or
lods
xchg
lods
fmuls
push
mov
mov
xor
mov
shl
xchg
xor
xchg
inc
cwtl
popa
inc
rcrl
jmp
out
push
xor
pop
pop
mov
in
mov
lcall
lods
mov
pusha
or
cltd
outsl
push
ja
inc
adc
les
sub
mov
clc
scas
aaa
nop
movsb
pop
adc
scas
inc
mov
and
fistpll
pop
scas
inc
loop
cs
dec
addb
push
pushf
test
sbb
inc
aaa
inc
in
icebp
cmp
jp
mov
sbb
ds
sbb
ret
fiadds
xchg
cmp
scas
inc
or
cmpsb
push
sbbl
lods
test
aaa
in
cmp
outsl
add
mov
js
orb
fldenv
inc
hlt
inc
enter
scas
loopne
test
sbb
xchg
ss
lret
addr16
mov
out
notb
aas
mov
pop
test
jmp
xor
mov
mov
insb
hlt
mov
fucomp
in
jae
push
push
push
adc
outsl
inc
negb
dec
push
dec
mov
out
push
cmc
sbb
mov
xor
fstpl
cmp
mov
jle
aaa
stc
and
sbb
js
test
pop
fs
mov
lret
mov
scas
xor
stos
lahf
dec
in
dec
push
cmc
sarb
fdivl
pop
idivb
xchg
or
cli
and
shrl
pushf
fisubrs
outsl
pop
mov
jae
sbb
mov
es
add
mov
cld
sti
aad
push
mov
aam
sbb
mov
xchg
leave
jb
into
jbe
lret
mov
test
inc
jecxz
sub
dec
imul
sbb
lods
xchg
mov
jecxz
mov
xchg
pop
movsl
cmp
mov
xor
push
cmp
add
aad
les
pop
cmp
pop
stos
mov
mov
ljmp
pop
lret
aaa
and
jo
ror
mov
jns
stos
and
or
push
mov
movsl
loop
mov
ja
pusha
mov
mov
lods
incb
ja
mov
lret
das
outsl
ljmp
and
arpl
jo
pop
lret
outsb
jmp
push
pavgw
fs
cmpsb
lds
cmp
aas
in
pop
aad
sub
insl
loope
bnd
das
cmpl
fnsave
mov
out
stos
lahf
in
rorl
out
push
test
outsb
push
and
inc
movl
mov
scas
cmp
xchg
push
jge
push
jnp
shrb
dec
cmpl
inc
add
or
adc
cmp
jg
pop
es
cmc
lret
add
lods
xchg
dec
mov
out
retw
je
cmp
cmpsb
mov
lret
sbb
or
fadd
ret
sbb
dec
xor
rolb
mov
sub
jmp
or
push
pop
mov
cmp
xchg
xchg
enter
push
xor
andl
sub
lret
cltd
js
push
pop
ljmp
in
xor
sbb
cmc
mov
sub
iret
leave
push
adc
lods
pop
outsl
insl
xchg
cmc
or
outsb
dec
ficompl
inc
call
loop
pusha
inc
insb
xchg
inc
jl
pop
jmp
std
aaa
js
sti
out
aad
das
add
add
add
mov
jp
ret
movsb
push
pushf
ja
add
repz
add
lcall
popf
daa
ds
xchg
sahf
loope
xchg
mov
pop
push
pop
pop
cmpb
jbe
or
mov
mov
or
movsb
in
stos
mov
repnz
in
dec
cmpsb
faddp
cli
push
ds
mov
mov
pop
mov
push
ss
push
dec
push
add
sub
leave
dec
movsb
popf
nop
jo
pop
lret
jg
jle
adc
and
mov
les
cmpb
jns,pn
loop
je
push
stos
notb
xchg
xor
fsts
sub
das
dec
adc
out
and
push
add
xchg
xchg
fcoml
int3
pop
jg
or
clc
int3
mov
movsb
jl
jo
or
pop
imul
aaa
push
cmp
xorl
xchg
mov
add
mov
inc
sbb
rol
les
in
push
das
adc
xor
imul
fistpl
mov
push
mull
arpl
xor
or
scas
mov
pop
and
lods
sbb
xchg
inc
cmp
das
comiss
rol
repz
push
jno
xor
add
inc
lret
xchg
ficomps
cmpsl
insl
fs
movsb
push
mov
test
xor
mov
jne
cmpsb
cmp
repz
dec
xor
push
sub
cld
fcomps
iret
lahf
jbe
adcl
jbe
sub
jne
mov
hlt
or
xor
out
ja
shlb
lahf
mov
pop
push
inc
adcb
inc
pop
mov
push
dec
pop
sbb
ljmp
cmpsl
bound
xchg
adc
addl
or
scas
out
movsb
add
fidivrs
cmp
movsl
push
mov
cmp
aas
stc
xor
adc
xor
fdivl
adc
add
lea
jge
xor
push
popa
fs
je
imul
lods
push
push
popa
and
sub
dec
dec
imul
sub
leave
test
adc
int
mov
gs
xchg
rol
sub
cmp
lahf
enter
xor
lods
aam
xchg
inc
sar
adc
sub
std
mov
or
ja
cmpsl
andl
out
por
aad
push
gs
out
add
int
pop
out
in
ljmp
mov
and
or
or
cmp
pusha
push
or
fbld
bswap
jmp
out
adc
jb
sbb
mov
stos
pop
pop
stos
inc
push
xchg
das
dec
or
fnstenv
mov
jno
out
repnz
sub
sub
cld
sti
pop
cld
cmp
cs
sub
test
cmc
lea
jno
mov
idivl
jl
inc
ret
cmp
cld
popf
xchg
cmpsl
fcomps
into
outsb
add
mov
pusha
push
mov
stos
xchg
push
push
mov
cli
sbb
jge
idivl
cwtl
mov
daa
pushf
mov
bound
frstor
mov
adc
cli
mov
jg
or
inc
loopne
aas
jge
push
js
push
jns
and
jns
mov
xchg
lret
and
out
fucomi
pop
aad
adc
aaa
xchg
xor
pop
xchg
loopne
mov
test
popa
shlb
lds
scas
mov
outsl
rcl
mov
jo
cmp
cmp
popf
mov
or
ja
push
int
addr16
inc
push
test
push
lret
fsubp
inc
and
in
mov
idivl
clc
inc
test
push
add
pop
or
test
inc
jmp
cmpsb
inc
jge
and
loope
jns
jno
repnz
inc
mov
jbe
xchg
dec
and
push
push
pop
mov
lret
mov
xchg
xor
inc
es
fistl
jne
clc
inc
cmpsl
jbe
add
lret
push
lret
jmp
popa
ficoms
lahf
or
xor
add
fbstp
mov
cmp
das
sbb
mov
in
mov
cmpsl
repnz
and
add
aad
jns
data16
and
xor
pusha
out
loope
mov
mov
movsb
bound
push
outsb
xchg
inc
pushf
jo
fidivl
adc
ret
sub
push
push
cmpsl
mov
aam
mov
and
ja
in
test
mov
push
pusha
pop
int
add
sldt
add
add
cmp
cmp
push
pop
mov
lahf
sub
add
repz
add
sub
cld
sub
sub
adc
fildl
jbe
pop
sti
mov
cmpsb
push
in
pop
push
aas
cmp
mov
fstl
xor
loopne
mov
dec
sub
scas
pop
sbb
add
fidivl
js
mov
mov
imul
fcomps
fcmovbe
loopne
jb
xchg
loopne
cwtl
mov
inc
aas
mov
rol
hlt
ret
movsb
xchg
insb
add
sar
mov
ret
mov
mov
xchg
lods
out
sbbl
cmpsl
test
xor
cmpsl
push
out
das
adc
arpl
clc
aam
ffree
add
push
into
xchg
jg
mov
and
loop
inc
ja
cmp
mov
jno
das
jb
in
mov
sti
sbb
add
ds
adc
pusha
and
sbb
fbld
out
jecxz
das
sub
mov
pop
mov
adc
and
addr16
dec
mov
je
fdivrl
and
lcall
addb
arpl
mov
mov
shll
sbb
cmpl
fcompl
clc
inc
fdivl
push
test
mov
sbb
add
cmp
push
insl
pop
push
in
add
jl
jbe,pt
inc
push
fiadds
aam
test
add
sbb
cli
sub
popf
mov
ret
dec
adc
mov
sub
mov
out
mov
mov
mov
mov
aad
subl
rol
addr16
pop
sbb
adc
mov
cmp
jne
adc
xor
mov
cmpsb
loopne
popf
add
std
xor
mov
and
jg
inc
into
inc
fucomp
mov
xchg
test
bound
outsb
test
imul
jns
imul
sub
xor
fistpl
in
push
cmp
repnz
inc
jmp
ret
fwait
inc
ret
aad
cld
ja
nop
mov
push
push
arpl
push
mov
sub
sbb
cld
shll
sub
insb
imul
fiadds
mov
lods
imul
mov
stos
mov
imul
ss
mov
cs
adc
incl
lahf
adc
fstl
pop
je
fisttpll
int
hlt
mov
sbb
adc
cmp
adcl
in
pop
jle
xor
inc
jae
jns
dec
stc
fadds
adc
cli
dec
sti
sbb
sub
and
mov
hlt
push
ljmp
dec
push
push
rcrl
inc
sub
fwait
aaa
clc
mov
mov
jnp
stc
cltd
cmp
cmpsb
inc
je
shlb
in
dec
mov
mov
dec
fidivrl
xlat
jno
rclb
pop
push
in
arpl
daa
xchg
scas
shrl
mov
scas
insl
js
test
mov
xlat
jle
arpl
mov
jne
popa
js
test
cwtl
adc
xor
xchg
pop
out
and
pmulhw
testl
les
pop
cmp
lock
fistpll
aaa
je
xor
ds
in
mov
ljmp
dec
pop
into
mov
jno
mov
inc
mov
shrl
pop
fidivs
test
mov
xor
jmp
sbbl
jb
jns
sub
cmp
fmulp
cmp
insb
cld
and
lock
lret
pop
sub
sub
cwtl
std
fstpl
cmc
or
ja
movl
mov
pop
adcb
pop
cmp
lret
add
test
rorb
mov
shlb
or
and
xlat
pop
and
adc
jne
push
movsl
sbb
rcll
loope
loope
pop
xor
rorb
inc
daa
int3
repz
and
fbstp
cs
pop
sub
add
xchg
add
sbb
or
cmp
sub
fcomps
add
roll
jmp
iret
lcall
repnz
xor
adc
adc
lret
mov
fs
add
in
sbb
test
mov
push
pop
sbb
cmp
cld
mov
mov
sub
jo
mov
lahf
mov
lock
add
add
mov
jg
test
out
sbbb
ja
out
add
repz
add
xchg
mov
cwtl
data16
add
lea
jb
dec
cmp
cmpsl
notl
rclb
out
out
arpl
arpl
mov
or
es
mov
and
xchg
cmp
testb
test
add
ja
les
push
adc
xchg
es
mov
ds
das
insb
movsl
dec
in
cld
cs
scas
or
popl
inc
add
fiaddl
loopne
jb
test
in
cmp
pop
sbb
pop
jmp
add
lret
mov
sbb
xlat
mov
roll
stos
xor
mov
in
leave
data16
sbb
sub
into
lock
les
je
xor
jno
pusha
xor
rcr
mov
loopne
sbb
push
gs
dec
or
inc
mov
test
cmp
cmpb
xor
leave
add
mov
fcmovne
jmp
mov
jp
dec
rcl
cmp
sbb
addr16
out
and
leave
insl
sub
fwait
push
cmp
str
jo
mov
movsb
mov
inc
repnz
xor
stos
sarb
xchg
and
daa
aam
push
dec
jl
xchg
xchg
popa
fisubl
push
and
cmp
lcall
leave
dec
shl
jg
in
inc
xor
xor
xchg
dec
push
sub
dec
dec
xor
mov
jo
push
popa
cmp
outsb
or
ret
jle
inc
mov
mov
mov
mov
popf
mov
adc
pop
std
bound
daa
push
inc
mov
push
ret
in
out
lods
je
dec
pop
pop
push
sub
xchg
std
outsl
xchg
out
pop
movsl
mov
push
repnz
and
es
fcmovnb
push
add
push
jb
out
ljmp
test
dec
or
jne
jge
or
mov
pop
pop
mov
push
cld
cmp
push
and
fdivs
sub
pop
sub
frstor
js
orl
das
into
mov
dec
dec
pop
mov
sbb
mov
xchg
stos
inc
lea
sbb
sub
ja
cmp
stos
int
cmp
idivb
dec
dec
pop
dec
jle
movsl
mov
outsl
test
sub
popa
or
fisubs
xor
xor
inc
cmpsl
and
sub
clc
pushf
sbb
xchg
jge
inc
sub
fnstsw
push
sub
insb
pop
sti
mov
mov
mov
fsubrs
inc
mov
sti
leave
jnp
dec
fcoml
call
jns
daa
sub
and
test
pop
inc
add
or
es
sub
and
add
adc
cmp
mov
adc
and
dec
inc
xor
sub
xorb
xor
cmp
test
loopne
xor
iret
sub
aas
and
cltd
mov
sub
add
push
add
dec
or
ljmp
push
popa
imul
pop
js
sub
cltd
pop
out
test
cmp
enter
mov
jmp
cld
xor
push
xor
push
clc
cld
aad
pop
inc
xlat
in
or
test
dec
gs
popa
mov
mov
loope
xor
jae
adc
insl
mov
shr
add
push
das
mov
out
sti
mov
pushf
adcb
dec
lcall
rcr
popa
inc
add
iret
in
add
popa
shll
sbb
cmp
fldenv
iret
sbb
pop
clc
ja
cmpsb
xlat
hlt
das
dec
testb
pop
adc
je
and
imul
xor
in
mov
enter
stos
nop
enter
or
js
out
add
xchg
cmpsl
and
call
cmp
ret
pop
push
push
inc
pop
aad
cmp
ja
das
xchg
sbb
nop
pop
xchg
jae
fsubr
stc
addr16
addb
lock
sbb
inc
pop
scas
daa
scas
ja
andb
inc
or
popf
fcmovu
push
addr16
and
cs
lods
jnp
int
push
push
icebp
cmp
lret
xchg
xor
dec
mov
push
jno
hlt
pop
mov
aad
adc
sub
mov
popf
and
lock
call
ds
popf
insb
mov
add
add
add
mulb
repnz
out
lret
jb
add
add
add
mov
xor
sub
xor
push
inc
popa
adc
push
mov
add
add
pop
mov
or
sbb
xchg
inc
xchg
jge
jmp
cmpsb
es
mov
mov
xlat
mov
movsb
push
xor
imul
insl
xor
and
jle
ret
sub
inc
icebp
popa
pusha
or
sbb
adc
inc
sti
adc
xchg
outsb
cli
jnp
pop
jp
jnp
iret
scas
jnp
sub
aad
push
sub
mov
xchg
cmp
sbb
aaa
test
pop
scas
loop
mov
xlat
push
push
or
pop
and
sbb
sub
or
jno
jle
lods
icebp
push
out
pop
add
pop
jae
daa
mov
sub
loop
in
mov
push
mov
popf
imul
sub
fdiv
push
fndisi(8087
dec
push
adc
cmp
pop
add
jns
pop
mov
add
lods
pop
mov
test
adc
push
das
xchg
dec
imul
mov
rcrb
sub
fsubs
or
lahf
popf
add
mov
add
xor
fs
enter
or
mov
mov
popf
daa
insb
sbb
test
sbb
scas
ffree
and
iret
sub
cmp
in
add
mov
and
jge
sub
sub
and
sub
addl
cmp
mov
sbb
rorb
mov
jno
jmp
jne
inc
pop
aaa
mov
sub
xchg
push
jg
xchg
pop
cmp
dec
and
outsb
sub
lret
push
sub
js
mov
call
inc
pop
pop
push
ret
cld
stos
ljmp
jecxz
daa
and
jns
add
stc
and
and
or
sarl
mov
test
cmp
mov
lds
push
sahf
loop
push
mov
push
xchg
mov
mov
jbe
repnz
inc
aas
orl
mov
mov
aad
add
fsubr
sub
and
cli
cmp
mov
sub
icebp
jno
mov
call
leave
inc
stc
stc
pushf
lods
xor
ret
or
imul
addr16
rcrl
outsb
jae
daa
cmp
loope
push
mov
cmp
mov
ds
push
jle
rcrb
lock
out
imul
mov
push
jmp
sub
xor
rorb
sub
lods
inc
fs
sbb
and
jp
pop
add
es
popa
inc
imul
fmuls
dec
adc
pand
dec
testl
incb
lret
or
cmp
cltd
sahf
fbld
sbb
inc
in
gs
ss
je
dec
jns
or
aas
jne
scas
and
call
lret
into
iret
sub
lods
out
flds
add
movsl
push
andl
pusha
out
mov
dec
jecxz
sub
cld
out
and
data16
test
jp
into
cmpsl
dec
mov
ret
push
xchg
shr
and
pusha
rcrl
fwait
imul
insl
push
dec
test
pop
mov
aam
mov
cmovne
jne
inc
or
cmpsb
pop
mov
add
mov
or
xchg
xor
inc
ret
les
xchg
sub
frstor
out
push
divl
fstps
mov
add
sbbb
ret
xchg
jecxz
aas
ljmp
xor
icebp
es
xchg
push
mov
test
cmpsb
imul
push
mov
xchg
and
jmp
test
andl
push
outsb
pop
icebp
jne
lods
pop
add
cmpsb
arpl
lahf
and
leave
mov
fwait
je
mov
leave
int3
adc
mov
mov
cmpsb
std
je
sub
subl
xchg
jae
push
test
cld
adc
rol
sub
cmpsl
pop
mov
inc
cmp
xor
add
mov
sbb
push
mov
fsubrs
bnd
jae
sti
push
mov
mov
clc
leave
jge
adc
jno
mov
lods
xchg
lds
xchg
jne
aam
jno
dec
test
sti
sbb
shlb
mov
mov
mov
add
mov
repz
add
sub
aaa
movsb
cmc
mov
cmpb
sub
sub
ja
mov
pop
push
pop
lcall
mov
mov
sti
xlat
movsl
cmp
cli
fidivrl
pop
repz
enter
mov
push
test
jb
sub
clc
pop
shrl
sbb
sti
fnstcw
xor
sub
cmp
mov
mov
xor
mov
sarb
aas
fisttpl
dec
repnz
cmpb
mov
mov
inc
rolb
int
ret
dec
sbb
add
sbb
and
push
aas
divb
aas
adc
xchg
xchg
push
push
ss
shll
jge
aam
subb
clc
mov
mov
jbe
push
movsl
in
call
fisttpll
roll
xchg
cmc
nop
std
iret
gs
jp
ss
rclb
push
adc
cli
sbb
adc
push
outsb
lea
fwait
push
pusha
lock
cmpsb
rclb
cmp
js
jbe
push
sti
fisubs
out
enter
roll
repz
inc
add
sbb
pop
xor
push
mov
cwtl
rcrb
movsb
bound
inc
mov
adc
fldt
mov
divb
mov
adc
cmp
adc
xchg
mov
push
xlat
pop
adc
imul
ss
pop
adc
repnz
fisubrs
cmp
xchg
push
mov
cmp
mov
ret
inc
mov
in
push
loopne
out
lret
lea
divl
mov
dec
imul
xchg
fmuls
cmp
mov
inc
arpl
dec
jns
mov
cli
in
lock
mov
pop
mov
leave
pop
and
out
xor
cmpsl
fldenv
or
mov
cmp
scas
faddl
enter
mov
sub
adc
add
jecxz
xor
mov
test
test
or
sbb
pop
mov
sahf
xchg
std
in
movsl
jecxz
dec
add
mov
or
cmp
fbld
xchg
test
lock
xor
lock
jne
incb
xchg
test
ror
add
xlat
pushf
push
or
test
dec
sub
jnp
xchg
mov
cmp
xlat
icebp
ret
jecxz
sbb
cli
inc
cs
add
scas
out
cmp
in
sbbl
fcoms
mov
push
inc
push
dec
fs
xor
mov
loopne
xor
adc
in
jno
inc
andnps
add
call
dec
arpl
pop
adc
sub
push
xor
mov
jb
jmp
shlb
mov
mov
rcl
faddl
adc
int3
call
dec
add
inc
fldl
test
ss
shlb
imul
mov
mov
sub
imul
icebp
pop
and
mov
bound
outsl
or
or
and
pop
popf
hlt
imul
sbbl
or
ret
mov
scas
adc
sti
and
aam
fs
lahf
scas
sub
sbb
out
into
jo
test
loopne
add
push
add
repnz
jle
call
mov
mov
lret
inc
fisttpl
fidivs
and
mov
adc
sub
lret
mov
or
inc
sub
aaa
popf
xor
ja
movsb
mov
adc
jnp
adc
pusha
push
mov
clc
xor
mov
pop
lahf
dec
loopne
sub
outsb
dec
sbb
xorb
or
sti
pop
into
mov
sti
pushf
std
pop
rcl
xlat
pushf
fcoml
arpl
stc
jmp
adc
dec
iret
andl
cs
mov
push
sub
cmp
pop
lock
cmp
shrl
mov
push
cli
inc
movq
hlt
mov
add
fcoms
inc
push
push
mov
mov
cmp
leave
enter
jo
xor
and
xor
push
jb
sahf
push
xor
jecxz
cs
pop
or
xchg
sbbb
or
inc
push
or
jbe
push
aad
loop
xchg
xchg
add
lds
jae
mov
js
sbb
adc
gs
or
call
mov
iret
test
mov
mov
lods
lock
cmp
or
scas
add
add
add
mov
and
adc
add
add
inc
or
and
mov
ss
mov
fimull
loope
sub
mov
mov
mov
in
repnz
dec
daa
popa
adc
ljmp
cmp
movsb
ljmp
lods
cs
mov
cmp
jne
xchg
dec
xchg
inc
xor
popf
sub
jl
ja
sbb
jne
mov
push
xor
data16
lea
push
imul
pop
repnz
das
scas
jmp
sti
imul
fcomps
lret
call
pop
and
mov
loope
inc
rcl
pop
out
sbbl
in
in
mov
stos
pop
clc
xchg
lahf
jl
ret
pop
pop
xor
mov
xor
or
in
adc
mov
fwait
cmp
mov
movsb
mov
and
push
jg
aad
adc
inc
inc
mov
gs
call
xor
sbb
push
nop
lahf
mov
inc
test
xchg
in
pop
icebp
push
push
jle
mov
sbb
sahf
pop
aas
dec
sub
add
repnz
cmpl
sahf
rcrb
ds
inc
xchg
arpl
imul
mov
ret
jmp
sub
std
add
mov
xchg
out
xor
or
jmp
test
lods
lods
sub
in
sbb
loopne
cmpsb
push
or
jp
lods
add
insl
add
sbb
mov
lret
cmp
mov
je
subl
cmpsl
dec
jbe
mov
sahf
sub
pop
out
sub
adc
pop
lcall
mov
lcall
loope
out
add
call
pop
push
lods
sub
cs
enter
pop
add
push
add
and
jno
mov
mov
cmp
xor
roll
jge
sub
data16
insl
outsb
sti
jb
push
std
sahf
xor
call
cld
mov
pop
out
popf
daa
arpl
and
lahf
fstpt
add
adc
hlt
ljmp
outsb
and
lods
xchg
sbb
scas
pop
add
cmpsb
ds
xchg
int
mov
jl
rcrl
mov
xlat
jno
jp
fcoms
test
stos
in
out
stc
pop
mov
stos
jp
lret
xor
xor
add
lcall
gs
in
pusha
mov
xor
jns
mov
jno
or
pop
fs
cmp
dec
mov
ja
or
bound
iret
jp
outsb
lea
daa
push
dec
arpl
scas
ret
dec
xchg
dec
fsubl
aaa
imul
ljmp
adc
jo
mov
jbe
dec
xchg
movb
imull
sbb
arpl
andb
fistpll
ljmp
jb
push
in
div
mov
sti
inc
rolb
loope
outsl
jle
cli
sbb
or
push
insb
and
out
aad
cld
jae
dec
jne
in
das
leave
les
test
pop
mov
add
repz
stc
loop
jb
aad
inc
inc
push
xlat
cmp
rclb
inc
pop
mov
mov
lds
mov
scas
jnp
fs
pop
imul
gs
scas
iret
xor
mov
mov
inc
mov
and
and
loopne
adc
mov
and
lods
int
jl
fwait
int3
pop
adc
xchg
bound
xor
inc
jle
jge
lods
loopne
rol
mov
data16
movsb
movb
aam
sbb
sbb
mov
dec
fadd
inc
mov
adc
mov
jns
cmpsb
xchg
and
out
test
sbb
cld
js
je
or
push
je
dec
pop
jge
movsl
cmp
push
neg
iret
adc
test
pop
pop
mov
fldcw
push
insb
lea
stos
and
mov
div
mov
cmp
mov
cmp
pushf
movl
mov
adc
insb
les
mov
mov
cmp
test
mov
ret
inc
and
stos
cmp
xorl
movsl
testb
mov
push
popl
test
jns
pushf
mov
fsubl
test
fnstcw
push
int
lcall
stc
test
push
sub
dec
pop
insl
movsl
testl
push
cmp
add
dec
fs
sahf
movsb
ss
int3
sub
mov
add
and
fldl
inc
sti
aas
jb
add
ss
mov
add
add
add
adc
mov
aas
imul
inc
imul
xor
popf
aaa
mov
int
loopne
inc
popf
push
shll
lret
into
icebp
mov
pop
movsl
addr16
sti
fidivrs
lea
dec
xchg
inc
mov
imul
pushf
out
in
xchg
into
xor
fistpl
test
addb
push
les
xor
sbb
xor
cs
dec
mov
test
or
or
mov
lods
test
mov
jmp
test
cmpsb
das
or
mov
mul
push
jle
shlb
divl
add
sbbl
stos
out
fnstsw
sub
out
add
ret
data16
in
cmp
adc
mov
mov
mov
mov
int3
xlat
mov
das
repz
jg
mov
mov
mov
sub
sub
data16
adc
mov
fstpl
or
out
mov
popf
in
pop
adc
and
lods
jp
mov
xlat
hlt
push
nop
das
insl
mov
aaa
out
jae
mov
or
add
xor
xor
xor
lds
test
xchg
add
pop
sbb
sbb
jno
mov
out
lret
xlat
lock
std
les
sbb
inc
pop
lods
push
lock
shl
mov
in
or
imull
clc
pushf
cwtl
mov
mov
jo
pushf
mov
mov
aam
push
mov
dec
jecxz
add
xor
ret
adcb
xor
nop
push
adc
add
pop
movsb
sub
add
imul
xchg
sbb
lahf
and
call
fiaddl
xor
or
jmp
std
xor
mov
cmpsb
xor
sahf
bound
cmp
xchg
insb
push
movsl
sbb
sbb
mov
cltd
cltd
dec
sahf
xor
sbb
int
jge
xchg
xorl
mov
dec
ljmp
add
cmp
add
jb
in
or
pushf
sbb
xor
sbb
fisubl
sbb
sbb
push
jne
sar
insb
cmpsl
sbb
inc
add
mov
mov
in
push
and
xor
sub
push
add
out
fisubs
dec
xchg
fsubl
movsb
daa
pop
jp
leave
lret
ret
outsl
mov
jbe
xchg
xchg
add
adcl
mov
cmp
loopne
dec
cmc
jl
pop
sbb
les
test
mov
add
iret
cwtl
lret
jl
jno
push
insb
xchg
or
mov
ds
push
std
dec
and
dec
call
mov
sti
jo
jp
mov
repnz
repnz
lret
loop
mov
pusha
sbb
or
cmp
mov
fmull
push
in
mov
leave
sbbb
arpl
xchg
insb
ss
out
inc
push
or
dec
faddl
arpl
adc
push
jnp
jb
pop
xchg
mov
mov
jl
movsl
sahf
nop
ss
shl
dec
testb
lret
dec
jbe
iret
aam
fldenv
add
pop
sti
cmp
cmp
imul
and
fdivl
push
cmpsb
or
lock
cmp
or
popa
int3
cmpsb
jge
jle
adc
roll
sub
pop
cmpsb
ret
pop
mov
cltd
mov
aad
fwait
addr16
stos
lds
ret
fstpl
xchg
jne
dec
jg
pop
inc
adc
pusha
dec
insl
inc
cld
push
xor
orl
gs
lods
lret
sub
and
test
xor
ror
or
pop
lods
and
pop
and
pop
dec
jge
fimull
sbb
js
cwtl
punpckhwd
stos
ljmp
jne
fsts
ret
dec
mov
mov
mov
cmpsb
aad
cmpsb
int
jno
xor
rorb
outsb
sbb
adc
out
add
scas
ret
and
test
adc
xchg
mov
push
test
lret
mov
mov
mov
mov
fsubs
decb
outsb
mov
jmp
dec
sub
dec
ret
cmp
rorl
inc
movsb
ljmp
dec
mov
leave
adc
or
dec
stos
ljmp
xchg
mov
add
add
jge
mov
or
int
movsl
xchg
add
add
add
scas
rcrb
push
sub
mov
xchg
jo
mov
in
push
fnsave
pop
fwait
bound
les
inc
jp
test
icebp
insl
enter
cli
mov
lea
sub
xchg
xchg
pop
int3
mov
or
or
jns
cmpl
sub
inc
cltd
sub
das
inc
stos
push
mov
rcrl
sbb
fs
cmpb
ds
jle
lods
leave
inc
loope
xlat
mov
std
addr16
mov
adc
add
loope
and
movsl
xchg
mov
adc
lds
popf
incl
pop
jae
leave
sti
inc
mov
mov
pop
icebp
xchg
hlt
ja
cmp
dec
adc
scas
adc
sub
lods
push
push
adc
adc
jae
cld
sbb
pusha
pop
pop
out
rorl
jae
call
mov
adc
sbb
fsubs
inc
sub
inc
aad
sbb
pop
push
outsb
dec
gs
jae
jle
aam
or
jmp
xor
repnz
stc
aam
adc
push
inc
jne
daa
jecxz
push
xor
and
repnz
jp
adc
test
mov
fsub
stos
insl
xchg
js
fcomi
pusha
outsl
pop
enter
lret
or
pushf
sarb
sti
pop
fmull
addr16
addr16
xchg
cmpsb
adc
pop
repz
xlat
mov
xor
dec
fistps
mov
and
loopne
push
inc
lock
or
cmp
mov
loop
mov
out
fwait
lcall
nop
arpl
shl
add
mov
mov
int
sub
insl
inc
mov
ret
xor
xchg
daa
add
movsb
sti
scas
int
mov
xchg
inc
xchg
or
dec
fldcw
in
sahf
mov
pop
lret
test
data16
rorb
adc
or
test
sub
jns
aaa
push
xchg
dec
mov
sti
cmp
out
lahf
jle
jle
add
jle
imul
cmp
ror
jns
add
aas
inc
mov
rorw
lds
sub
addl
jns
cmp
mov
rcrl
test
inc
adc
mov
and
imul
aaa
or
les
add
scas
or
xchg
sub
push
fst
and
pop
mov
jae
or
mov
jns
popa
test
xlat
in
mov
loope
adc
in
pusha
add
orb
in
lods
lods
ja,pt
adc
sbb
and
cwtl
pop
mov
ss
cltd
ret
xchg
mov
jl
push
fsts
fisubrl
inc
jp
pusha
outsb
lock
and
and
pop
adc
adc
mov
sub
inc
sbb
sbb
ds
fsub
add
leave
aam
mov
jg
pop
out
mov
cmp
call
mov
test
jne
aas
mov
scas
scas
insb
mov
push
into
ror
pop
dec
mov
ds
out
ljmp
fisubs
scas
add
lret
dec
push
pop
pushf
fidivl
aas
inc
sbb
jns
xlat
and
lock
and
xrelease
rcl
jo
sub
jg
adc
mov
xor
lods
add
int3
lea
popa
sub
nop
xchg
pop
or
pop
das
inc
jecxz
pop
insb
divb
mov
inc
hlt
dec
cmpsl
xchg
jnp
mov
and
dec
jp
sub
and
xchg
xchg
aam
mov
stos
lods
ja
mov
xchg
outsb
jmp
shrl
dec
mov
movsl
mov
and
aas
jle
int
push
jbe
dec
mov
jg
and
cmp
ljmp
xchg
add
pop
arpl
and
test
jbe
mov
and
enter
out
sahf
and
test
in
add
jne
xchg
xchg
push
jo
add
repnz
mov
daa
aas
lcall
faddp
addr16
loop
inc
jnp
mov
enter
call
insl
or
inc
adc
stos
out
pop
jl
pop
int
js
in
mov
rol
in
mov
hlt
insl
cwtl
adc
ds
and
inc
sbb
cmp
mov
pusha
or
in
adc
or
inc
cmp
mov
dec
cmpsl
lcall
xchg
sti
aad
xchg
scas
push
hlt
mov
das
push
std
jne
sub
sahf
loope
in
and
push
push
add
add
add
mov
cmp
pop
ljmp
add
add
cs
ljmp
jns
jp
adc
out
out
insl
mov
insb
mov
pop
pushf
push
in
push
cmp
mov
sti
mov
xor
add
and
mov
xchg
not
stc
test
adc
jecxz
mov
mov
push
enter
xorb
xchg
xchg
add
aas
inc
aad
xlat
stos
je
cmp
inc
jge
jecxz
push
or
sub
cmpsl
add
push
notb
ficoms
xchg
and
das
pop
ret
sub
push
jb
cmp
sub
jge
ret
push
icebp
sbb
decl
inc
mov
fistps
mov
pop
mov
mov
mov
lods
add
rcl
inc
hlt
ret
inc
push
mov
or
scas
test
mov
mov
mov
lret
xorl
nop
push
mov
pop
adc
cmp
popa
iret
adc
js
pop
and
std
add
ljmp
jbe
push
ljmp
cmp
jmp
jl
dec
ficomps
ljmp
inc
ja
aas
inc
stos
lods
adc
test
mov
aaa
test
std
jno
test
dec
popf
jae
int3
cmc
fisubl
and
inc
mov
into
mov
inc
push
stc
xor
push
insb
and
lds
popl
shrl
add
cmp
cmp
cltd
rol
adc
mov
inc
into
sbb
mov
cmp
pop
test
popf
daa
das
loop
pop
or
bnd
add
push
pop
xchg
xchg
decb
leave
lret
jmp
nop
dec
rcl
push
jae
sahf
lods
gs
add
in
subl
icebp
inc
push
lahf
cmp
arpl
push
mov
mov
bound
adc
push
rcrl
mov
mov
lret
xor
fdivs
das
cli
or
cltd
pop
cmpb
movsb
xor
jne
test
or
mov
xor
test
ja
adc
stos
sbb
push
jbe
rorb
das
shlb
int3
enter
insl
push
xor
sbb
addr16
inc
addr16
popf
mov
jbe
ljmp
orl
mov
ret
outsb
cmp
idiv
push
sub
loop
push
sbb
imul
pop
sbb
in
jb
dec
xor
lods
jae
mov
sbb
mov
popa
aas
fwait
rcrl
in
int3
pop
inc
xchg
movsb
lcall
pop
ljmp
cs
xlat
or
stos
add
loop
cltd
lock
fisttpll
std
insl
in
fmul
lret
lock
xor
mov
push
xchg
add
icebp
les
cmp
dec
test
dec
pop
and
insb
lds
mov
xchg
fistps
clc
in
ss
arpl
fidivrs
fwait
nop
sbbl
cld
and
push
lcall
mov
and
mov
jnp
scas
scas
mov
cmpsb
arpl
insb
mov
cmp
lea
mov
js
adc
xchg
and
push
lcall
cmp
mov
adc
push
das
add
enter
or
cmp
dec
pop
in
pop
jle
lahf
rcrb
mul
sbb
jecxz
jecxz
add
fcoms
cmp
in
fucomip
sub
mov
or
mov
jbe
add
stc
jno
insl
inc
mov
mov
xchg
stos
pop
dec
out
pop
int
cld
nop
es
xlat
or
in
fisttpll
mov
repz
jbe
mov
cld
shl
repz
sbb
pop
mov
xor
repz
movsb
mov
mov
push
push
loope
inc
jg
aas
and
lods
lods
mov
dec
loop
inc
test
pop
repz
jl
jae
mov
jmp
xchg
bound
enter
add
ret
adc
pop
fs
xchg
imul
push
jns
inc
cmp
movsb
insl
mov
jl
ss
ret
sbb
ret
mov
xchg
iret
xchg
or
xchg
mov
lods
dec
and
pop
shr
add
cmpsb
push
and
jge
or
dec
mov
mov
cwtl
rol
insl
adc
jl
sub
add
imul
sub
scas
inc
stc
daa
sbbl
fwait
pop
gs
xchg
cmpsl
add
jne
jbe
sahf
decl
dec
fisubrl
add
add
and
es
sti
std
sbb
adc
orb
add
inc
xor
ljmp
sbb
push
mov
xchg
pop
xor
dec
sti
jg
and
test
xchg
and
icebp
cs
add
lret
sbb
mov
mov
lods
xchg
sub
imul
cwtl
xor
adc
cwtl
xchg
pop
in
mov
xlat
jae
mov
hlt
pop
sbb
aad
xor
xor
pop
out
fistps
jmp
lods
repnz
es
testb
xchg
adc
dec
mov
jmp
add
mov
lods
sub
dec
sub
and
das
pop
jae
or
mov
lock
lods
sub
sahf
int3
sub
je
das
xor
mov
xchg
jae
dec
scas
cmpsl
je
imul
lcall
mov
imul
ficoml
divl
addr16
aam
pop
adcl
repnz
pusha
cmp
inc
insl
jbe
mov
popf
imul
xchg
rdtsc
mov
sub
dec
mov
xor
jmp
repnz
push
dec
fildl
dec
push
push
lods
lds
in
repnz
sub
xchg
ja
out
std
sbb
gs
rorl
xorb
inc
mov
xorb
inc
dec
arpl
and
xchg
and
imul
loope
fdivl
inc
xchg
xor
fsubrl
or
pop
xchg
int3
popf
fwait
outsb
mov
jae
lods
adcb
testl
repz
mov
dec
test
lret
or
add
mov
in
mov
flds
cmp
addr16
cmp
mov
add
push
lret
scas
sbb
inc
jge
lds
iret
ljmp
xchg
in
inc
xlat
mov
add
rcll
xchg
roll
jne
int3
ss
mov
adcl
cltd
adc
xchg
xchg
testb
or
fistpl
fcmove
stos
enter
mov
sbb
in
nop
movsb
in
add
cmp
lret
mov
mov
adc
scas
add
aam
jmp
cltd
aam
pop
nop
iret
and
dec
lret
sbb
xchg
jnp
loop
jp
in
pusha
and
gs
xchg
ficompl
mov
jecxz
insb
mov
cmp
jno
call
testl
xchg
adc
and
and
mov
in
fcomps
jmp
out
mov
pop
js
lret
aad
leave
or
inc
jo
mov
sbbb
out
lahf
sahf
mov
fildl
cld
add
or
xor
sub
ret
test
sub
mov
mov
in
test
lahf
bound
inc
test
aad
out
cltd
inc
jbe
ljmp
jne
push
inc
addr16
xor
int
je
adc
or
add
pop
insl
lods
es
xchg
mov
jg
call
mov
stc
sub
jmp
sbb
mov
pop
push
stos
cmp
adcb
ss
xor
cmp
adc
lock
pop
hlt
mov
mov
xchg
lds
push
fcos
add
mov
les
sub
fdivl
xor
aaa
shl
or
dec
mov
stos
add
fldt
mov
lahf
mov
outsb
push
pop
lcall
pop
iret
inc
inc
js
loop
mov
into
ret
mov
fistpl
sti
lcall
inc
popa
pushf
dec
fucomp
lock
jb
xchg
leave
filds
addb
pop
stos
jecxz
jae
out
mov
ret
addr16
int
xorl
int
pop
shll
jo
xchg
push
testl
int3
ret
fnstsw
dec
insl
imul
cmpsl
loop
test
xor
sti
jns
dec
pop
pop
lcall
sub
test
dec
inc
jg
cld
int3
shlb
push
popa
dec
shl
push
int
xchg
data16
and
mov
push
cmp
notb
shr
mov
push
loopne
std
in
shlb
dec
jns
stc
fdivrs
call
and
pop
push
rcrb
xor
fmulp
mov
lock
xchg
sti
lock
xor
or
imul
pushf
cld
movaps
movsl
sub
das
xor
sti
jnp
add
adc
xchg
sbb
mov
in
jp
loope
cmp
xlat
pop
add
pop
shll
stc
arpl
ds
dec
add
daa
negl
sbb
add
add
sbb
jg
lcall
inc
jle
add
repz
add
hlt
adc
ficompl
add
mov
sbb
xor
cmp
lock
les
enter
fwait
sub
dec
int3
fistl
out
cmp
aas
fnstenv
sbb
jmp
data16
stc
movsl
ds
mov
jge
out
xor
ret
push
cwtl
dec
add
es
hlt
sarl
xor
xor
adc
push
xor
aaa
out
loopne,pn
xor
xor
cli
dec
or
movsb
sbb
mov
jmp
test
push
imul
fidivl
jg
xchg
std
adc
outsl
push
cmp
inc
xchg
scas
sub
inc
sbb
std
mov
cltd
xchg
jae
loop
cld
das
or
cwtl
fstps
in
loop
cmp
addr16
popf
nop
sbb
mov
cmpsb
add
pop
xor
inc
rol
dec
mov
cmp
in
cld
jo
or
jle
sbb
dec
mov
icebp
arpl
hlt
add
sbb
or
sub
and
or
mov
aad
and
negb
and
sarb
rorb
rol
rclb
jecxz
mov
push
adc
xor
add
mov
pop
cmp
xchg
pop
and
pop
push
cmp
leave
jg
or
testb
jne
push
and
pop
shlb
cmp
jg
movsb
jg
add
mov
xchg
push
cmpsl
outsb
pop
jbe
lret
mov
in
lret
jecxz
add
mov
sbb
subb
addl
add
aad
out
movsb
iret
in
ljmp
pusha
add
push
in
andb
cs
mov
out
lock
or
jbe
jnp
adc
clc
or
jecxz
or
lock
rcll
sbb
popa
mov
xor
pop
mov
pop
test
scas
loope
sbb
stos
jo
subb
mov
jbe
inc
loop
sbb
add
jmp
fldenv
xlat
or
mov
sub
loope
add
popf
jg
stos
fisubrl
add
mov
aad
rcrb
unpckhps
add
pop
push
pop
dec
scas
cmpb
js
dec
jo
ret
mov
xchg
int
js
inc
mov
into
push
roll
sub
cmc
test
sbb
int3
sbb
out
xchg
xchg
fidivl
mov
mov
mov
aad
lahf
ret
imul
dec
cmp
mov
inc
add
loop
ret
push
cmp
stos
mov
js
out
daa
add
je
out
insl
popa
add
xchg
lcall
dec
xchg
loopne
loopne
pop
in
jg
xchg
fwait
mov
adc
cmpsl
outsl
push
aam
inc
xor
jae
mov
out
mov
cli
dec
lock
sub
jecxz
stos
or
lods
bound
add
jecxz
mov
pop
mov
mov
cmp
sbb
arpl
mov
rcrl
inc
ret
jae
shll
mov
jp
enter
xchg
fldl
mov
push
jnp
push
sbb
or
repnz
add
inc
pop
push
out
dec
iret
in
outsb
xchg
les
sub
sub
or
mov
mov
jae
cmpsb
or
mov
sbb
je
enter
int
push
out
sbb
outsb
fbld
mov
mov
aad
lea
add
sbb
dec
imul
add
aad
pop
pop
jnp
or
inc
stc
lods
inc
jl
leave
inc
mov
imul
xchg
stc
ret
test
insl
mov
test
xlat
loopne
jno
or
rcll
insl
popa
ljmp
mov
iret
inc
mov
ret
insb
xor
aam
scas
pop
and
ljmp
pop
push
adc
inc
pop
mov
mov
loopne
add
mov
orl
sub
mov
pop
push
stc
mov
std
test
push
mov
lea
dec
adc
addb
jp
cltd
aam
orb
testl
imul
mov
sahf
xlat
sbb
mov
clc
ss
cmp
cs
inc
les
imul
jmp
jne
addb
pop
dec
add
lods
rcll
jge
fdivs
addr16
aas
jbe
and
fildl
add
add
cmp
pop
sub
stos
jns
dec
sub
mov
lcall
cmp
in
sbb
notb
lods
shll
adc
aaa
sahf
loopne
lds
or
xor
test
mov
jne
dec
xor
mov
cmp
icebp
dec
sti
fstpl
jle
xchg
jge
mov
mov
sub
push
mov
sbb
push
mov
sbb
mov
ficomps
sbb
xor
aad
popa
jp
mov
mov
sbb
jle
test
push
pop
push
fadds
jnp
push
cmp
fprem
jecxz
js
ljmp
mov
mov
mov
push
sub
xor
pop
fadds
out
dec
inc
dec
dec
mov
or
cmp
and
iret
mov
mov
fisubrs
lret
mov
jle
les
scas
sti
sub
shrl
sub
leave
movsb
cmpsl
xor
mov
jbe
rorb
pop
nop
orl
aaa
mov
pop
jmp
sbb
inc
xchg
mov
in
imul
test
shlb
mov
pushf
mov
jge
xchg
pop
and
pop
adc
into
cs
fimull
sub
adc
in
xor
les
roll
xchg
mov
sbbb
mov
sub
mov
mov
ljmp
jo
repnz
mov
imul
fs
pop
or
push
dec
popf
je
mov
mov
cwtl
test
fisubrs
and
call
lods
and
push
sti
int3
sub
and
test
ret
pop
xchg
and
xlat
sub
add
cs
sub
sbb
je
mov
fsts
lds
sub
addr16
xchg
xor
sahf
jp
int3
adc
push
mov
mov
jg
mov
cmpsb
push
paddusw
les
in
sbb
lods
nop
ret
clc
shrb
push
cmp
add
sbbb
xor
mov
fsubp
pop
fstps
sbb
out
out
aad
sub
and
jb
mov
pop
in
movsl
or
and
pop
in
test
dec
negb
jnp
hlt
int3
mov
push
push
inc
dec
xchg
adc
rorl
adc
xchg
lahf
fbld
lret
fcmovnb
jae
test
lahf
test
imul
add
jmp
push
pop
int3
cmp
sub
lret
dec
lret
adc
xchg
or
fs
and
dec
negl
aaa
mov
movsb
subl
int
movsb
lcall
sbb
mov
xor
stos
xor
pop
or
movsb
jb
cltd
rcl
shll
sbb
lock
int
adc
cmc
out
jne
lret
jge
incb
test
rcrb
fwait
les
xchg
push
les
aad
xlat
jae
mov
cmc
imul
sub
sub
imul
arpl
popl
ljmp
push
nop
cs
sti
cld
ret
je
jnp
push
and
mov
mov
lds
and
hlt
out
js
lret
xor
or
xor
push
cmp
addr16
cli
or
cmp
and
xchg
aaa
dec
scas
mov
mov
xchg
cmp
popf
or
lret
and
jne
les
mov
pop
cmc
dec
outsl
rol
jle
mov
sub
in
push
je
nop
vandnps
mov
push
imul
leave
add
data16
cmp
call
jmp
psubsw
jmp
out
push
inc
lret
in
mov
int3
xchg
sahf
std
xchg
scas
dec
test
pop
mov
xlat
add
jns
sub
jg
push
sahf
fildll
fistps
cmp
out
xchg
xchg
mov
outsb
sbb
das
pop
imul
ja
sbb
sbbl
movsb
inc
push
cmp
out
push
lds
dec
js
mov
cmp
cmp
mov
test
jnp
xor
test
stos
outsb
les
aas
pop
aam
fmul
xchg
cltd
jmp
dec
xchg
xlat
divb
push
adc
inc
pop
dec
add
sbb
bound
clc
sbb
insl
popa
and
mov
dec
sbb
daa
cli
movsl
inc
clc
push
add
fcoms
jae
jne
hlt
pop
cmp
fistl
xchg
in
sbb
into
scas
jmp
popa
jne
mov
cmpsl
or
int
out
push
or
add
add
add
adc
dec
jge
xchg
outsl
jge
lcall
add
repz
add
cmp
dec
movsb
inc
btr
imul
adc
fldcw
jae
das
sbb
adc
testl
mov
sahf
jnp
loopne
mov
lods
test
icebp
mov
js
mov
loop
icebp
aad
testl
cld
ljmp
outsb
add
dec
and
in
pop
hlt
jg
adc
bound
loop
nop
ret
aas
mov
push
test
mov
mov
push
jns
aaa
ja
scas
push
and
add
xchg
insl
push
movsb
dec
es
jg
les
pop
pop
xor
fsubrl
movsl
mov
push
xchg
fstl
adc
pop
aad
cli
or
sub
movsb
dec
cmpl
out
jp
sbb
ret
pusha
xlat
jp
push
and
xor
idivb
jmp
enter
cmp
lds
xor
mov
les
mov
mov
sub
in
decb
jg
sub
jbe
clc
insb
lea
dec
adc
shll
xor
lahf
xor
push
xchg
pop
push
cmp
outsb
mov
push
sbb
inc
ja
xchg
adc
insb
mov
pop
or
push
mov
xchg
inc
popa
js
xor
out
aaa
xlat
in
mov
mov
lods
ja
insb
and
mov
adc
push
cltd
shll
jl
sbb
push
push
mov
test
push
clc
lcall
orl
dec
or
lods
shrb
jge
mov
pop
pop
movsb
sahf
lea
inc
js
je
shll
scas
or
adc
and
out
mov
adc
sbb
cmp
loopne
add
rolb
pop
xlat
mov
mov
shrb
es
aam
mov
lea
adc
jb
out
cmpsl
testl
xchg
add
aad
mov
shll
ror
jl
mov
jge
ljmp
push
std
sub
mov
adc
test
jg
fmull
or
sub
cmpb
es
ret
add
inc
mov
test
int
dec
ror
and
xor
cmp
xor
sub
adc
push
cmpsb
mov
sub
scas
push
add
aaa
iret
jecxz
jge
mov
icebp
fcoms
jns
loope
loop,pn
or
out
orb
inc
inc
and
movsl
pop
inc
repnz
std
out
pop
ds
sahf
jmp
inc
sbb
dec
or
xor
into
dec
jb
inc
jne
cwtl
inc
jnp
mov
hlt
mov
test
nop
jge
xchg
ljmp
lods
adc
or
mov
and
add
mov
mov
push
into
cmp
insb
loop
cld
pop
adc
dec
mov
loope
jecxz
fstpt
leave
pusha
push
adc
iret
outsl
xor
lods
std
clc
and
int
push
or
rcl
test
jp
jge
out
test
push
inc
fs
jle
inc
adcl
rclb
jne
inc
adc
outsl
in
pop
arpl
jb
es
lahf
stos
and
daa
mov
mov
or
jecxz
cwtl
frstpm(287
stos
push
mov
pusha
fimull
test
push
add
pop
fists
mov
gs
rcrb
xchg
pop
and
loope
pop
mov
pop
pop
dec
xchg
jb
sub
xchg
or
xchg
mov
test
sub
pop
xor
lcall
mov
ljmp
jecxz
das
xchg
mov
aaa
push
add
xchg
and
rcll
push
adc
lea
sbb
aam
pop
out
push
or
or
pushf
scas
nop
mov
stc
cmp
ret
test
inc
fcoml
add
mov
inc
jb
js
add
hlt
mov
orl
lcall
mov
or
fisubrs
cmpsb
mov
add
pushf
xchg
aas
xchg
into
cs
sti
ss
inc
pop
adc
pop
push
pop
lret
mov
pop
mov
mov
in
ficomps
rcrl
movsb
aad
push
test
in
test
jno
add
add
xlat
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
mov
flds
cmp
mov
stc
loope
popa
loop
cld
punpckhdq
addr16
dec
std
out
xchg
pop
cwtl
adc
add
pop
cld
movsb
inc
popf
xchg
mov
in
adc
xor
xor
test
pop
test
push
dec
add
sub
loop
and
js
mov
ror
pop
mov
mov
pop
outsb
pop
data16
and
aad
mov
pop
loope
pop
mov
mov
or
sti
jg
and
jge
test
add
das
mov
mov
sarl
aam
dec
and
pop
push
cmpsb
xlat
ja
push
mov
decl
jmp
xor
out
cmp
test
stos
or
in
pusha
popa
hlt
imul
push
repz
fldenv
mov
ljmp
sbb
daa
lock
add
add
jo
ret
bound
adc
adc
cltd
jge
out
lods
mov
sub
xor
and
cmp
jo
mov
xchg
roll
stc
jge
jns
lahf
dec
out
or
rcrb
aam
daa
int3
shl
rcrl
cs
xor
xchg
stc
imul
pop
dec
icebp
pslld
mov
inc
mov
mov
and
cmp
mov
or
shll
and
push
adc
adc
mov
mov
cmp
push
andl
push
mov
jne
cmp
lret
insb
addr16
push
inc
xchg
sbb
push
scas
int3
jl
jg
fisubl
xchg
shrl
pop
test
push
fildl
mov
mov
pop
xor
mov
shl
mov
adc
daa
mov
push
mov
xchg
data16
cmp
jns
cld
fwait
shll
or
sbb
inc
or
or
decl
shlb
repz
insl
add
mov
popa
add
xchg
outsl
das
in
stos
adc
ret
cld
imul
add
sbb
pushf
mov
lret
ja
into
out
sbb
mov
sbb
mov
jecxz
leave
imul
shlb
push
aam
lahf
das
lahf
push
movsb
pop
sub
jne
xchg
cmp
std
sub
xchg
adc
push
jg
push
add
mov
std
push
cltd
scas
clc
jecxz
gs
and
and
jmp
jnp
pusha
sub
lret
mov
in
ljmp
xchg
rorb
xchg
fcomps
cli
addb
add
loopne
inc
xchg
pop
out
sbb
and
dec
std
push
loopne
xchg
or
sbb
aam
into
dec
insl
test
mov
lds
les
xor
xchg
cmc
xor
cmp
xchg
imul
xchg
xor
mov
in
shll
mov
pop
inc
addl
shl
sbb
shll
and
ja
jge
jbe
dec
pop
or
or
bswap
sub
test
fs
mov
lret
mov
jle
insl
pop
sti
add
push
rolb
inc
dec
in
loope
push
call
or
iret
lds
dec
arpl
not
xor
leave
xorl
bound
push
pmaxsw
div
xchg
push
cmp
xlat
xor
adcl
and
mov
inc
mov
pop
inc
cmpsl
rorb
xor
dec
jg
addr16
adcl
xor
jns
lahf
les
fldt
jns
inc
mov
fbld
fcoml
fsubrl
adcl
sbb
adc
leave
or
sub
sbbl
push
or
pop
cmp
ds
mov
adc
mov
and
xchg
and
popf
mov
adc
mov
pop
and
cltd
mov
pop
push
ret
int3
imul
inc
icebp
push
lods
lea
lods
dec
lods
ljmp
inc
sbb
sbb
ljmp
xchg
sbb
js
push
or
and
add
rolb
bound
add
pop
or
clc
xchg
dec
arpl
adc
xor
cltd
mov
aad
fs
enter
rcll
xor
das
stc
stos
stc
pop
ret
xchg
or
mov
bound
fst
or
cltd
gs
pop
adc
add
aam
loope
mov
inc
pop
fnsave
test
xchg
push
push
in
cmp
test
addr16
add
jo
int
popa
mov
xor
add
add
cvtdq2ps
dec
sar
adc
test
add
push
mov
test
rcr
out
clc
push
and
fcmovnu
or
push
sub
push
cmp
repnz
mov
or
lahf
cmc
aas
jg
lock
sbb
cmpl
fisubrs
inc
lock
lea
sbb
shlb
sub
adc
aas
sahf
jl
fdivrs
outsl
sub
mov
and
mov
rcrl
jbe
sub
push
lret
sti
int3
enter
mov
dec
mov
hlt
xchg
pop
inc
pop
inc
add
lods
cmp
fldt
mov
movsl
mov
fisubl
lahf
lret
mov
and
and
mov
pop
cmp
mov
mov
mov
sub
dec
add
shll
xchg
pop
es
xor
dec
push
xchg
popf
sbb
jnp
mov
dec
mull
clc
sbb
jnp
jno
sub
je
mov
out
dec
cmp
loope
lcall
iret
dec
popa
rcr
cmc
pop
lcall
push
loopne
xchg
mov
lods
push
stos
dec
pusha
mov
test
sub
xor
pop
jle
adcb
popf
js
iret
dec
push
fadds
mov
xchg
das
sti
fiadds
daa
subb
addb
loop
inc
scas
dec
sub
push
mov
jmp
pusha
mov
dec
into
mov
push
jbe
lahf
cmp
out
mov
mov
loop
add
mov
sti
leave
lock
shll
push
dec
push
enter
test
adcl
jp
jle
cmp
sub
mov
loopne
xchg
or
add
enter
dec
cli
lods
sbb
jmp
std
mov
pop
cltd
lock
push
data16
jns
and
bound
and
cmp
and
rorb
aad
push
adc
mov
xlat
mov
jnp
inc
inc
std
xchg
rcrb
add
sti
out
shlb
sub
popa
jg
loopne
jge
hlt
add
push
jl
daa
xchg
mov
cmpsb
sbb
push
push
mov
sub
rcl
int3
xchg
out
stos
pop
idivl
jmp
push
push
sub
sahf
dec
jne
push
pushf
jp
push
mov
enter
and
inc
sbbl
push
xchg
sti
orb
shll
int3
scas
shrl
push
lcall
ds
imul
jae
iret
test
xchg
and
aas
jmp
push
inc
stos
add
jecxz
loopne
mov
pop
jno
rol
inc
clc
mov
icebp
cmp
dec
mov
push
mov
push
xlat
stos
or
lret
adc
or
mov
outsl
std
lret
fcompl
cmc
sbb
lret
push
das
test
imul
rcrb
dec
dec
lods
mov
gs
pusha
shr
in
movsl
loopne
add
jnp
or
das
sbbb
movsb
test
push
fcomps
in
mov
sub
pop
pop
call
insb
js
mov
sahf
xlat
add
pop
and
jge
call
adc
xchg
loopne
jbe
enter
leave
mov
sbb
in
jl
xor
cmpsb
out
int3
inc
in
out
or
in
cmp
dec
pushf
cltd
movsl
dec
mov
adc
rorl
jno
xchg
jge
pop
lods
mov
daa
jnp
xchg
inc
popa
dec
add
ljmp
pop
out
jbe
and
filds
push
dec
mov
adc
mov
aaa
add
add
ret
add
sbb
adc
or
jnp
xor
lods
push
add
scas
inc
add
cmpsb
mov
mov
adc
mov
push
xchg
imul
insb
mov
mov
lahf
or
stos
addb
dec
ja
inc
into
cmp
fdivl
mov
call
jnp
sbb
sub
xchg
cwtl
setge
cmp
dec
int
je
xchg
adc
push
xor
push
sub
out
mov
gs
fistps
dec
cmp
mov
xor
jg
cmp
dec
pop
sub
sbb
movsb
fimuls
imul
aam
cli
pusha
dec
lds
test
or
in
scas
xchg
movsl
stc
sbb
mov
ret
jg
mov
adc
cmc
inc
lods
aam
mov
std
jge
outsl
lds
adc
add
dec
mov
lret
mov
jnp
ret
gs
add
add
pop
pop
movsw
dec
std
cmp
mov
sbb
jle
cmp
jns
cmpb
dec
lea
xchg
sbb
loopne
aas
fsubs
sbb
cmp
sub
stos
lea
fmuls
jbe
aam
loop
dec
mov
add
pushf
xchg
fistpl
cmp
xlat
scas
mov
xor
popf
mov
sahf
leave
sub
jp
movsb
insb
jno
pop
mov
push
xor
bound
push
cli
daa
inc
ret
jmp
xchg
mov
pusha
js
add
xorb
loopne
clc
jno
gs
call
js
sbb
imul
daa
and
mov
arpl
jle,pt
cmp
mov
xchg
mov
xchg
rcrb
mov
imul
push
mov
sbb
pop
fimull
mov
add
add
push
inc
cli
adc
jmp
loopne
mov
push
dec
enter
xchg
sub
scas
into
or
shlb
mov
xchg
lahf
pop
push
push
fidivrl
mov
xchg
cmc
jns
test
sub
xor
pop
dec
fisubrl
stos
adc
lcall
sub
pop
inc
jnp
out
testl
in
cmp
xor
jae
js
mov
cmp
mov
pop
stos
xor
stos
sbb
pop
jl
jne
clc
out
fildl
sbb
lock
sahf
push
jecxz
fmuls
inc
fstpt
add
jo
cmpsl
orb
loope
cmpsl
dec
enter
rclb
stos
push
xchg
mov
sub
or
negl
push
jge
and
out
mov
pop
pusha
xchg
movsl
jno
pop
add
into
lret
and
cmc
jns
insb
xor
into
adc
cmp
xor
xor
stos
icebp
mov
mov
shr
jne
ror
shll
adc
mov
xor
mov
add
mov
stos
std
and
push
xorl
or
cmpsb
lret
repnz
mov
fbstp
xchg
test
repz
aaa
push
adc
pusha
dec
in
shl
cmc
push
lret
mov
or
cmc
leave
mov
mov
and
sbb
lods
in
cld
dec
cmp
adc
inc
adc
insb
das
lret
pop
jmp
pop
orl
or
jecxz
jp
aam
xor
push
xor
push
jae
cmp
cmc
sbb
dec
fwait
sub
jmp
lock
mov
mov
hlt
mov
mov
mov
dec
inc
mov
stc
fcmove
fadds
pop
arpl
cs
mov
cmc
sbb
rorb
roll
repz
and
stos
sbb
sbb
cmp
mov
lds
dec
cmpsb
pop
jbe
xor
movsb
xor
push
pop
psubsb
test
ja
leave
test
cmp
lret
imul
outsb
ficoml
dec
lret
sbb
or
pop
out
jecxz
sbb
cwtl
daa
xchg
mov
push
loope
test
jne
mov
lahf
push
popf
xor
or
movsbl
aad
and
and
push
pop
cmpsl
inc
adc
call
dec
jae
mov
mov
cs
rol
fsubrl
mov
shll
jo
notl
inc
popa
hlt
xor
imul
lea
inc
jecxz
shrb
or
lret
test
jbe
call
arpl
negl
push
pusha
mov
les
xor
divl
enter
pop
push
mov
in
mov
addb
aam
cmp
mov
adc
mov
out
mov
pop
jbe
lock
shlb
pushf
mov
mov
lock
ret
data16
mov
cmc
sbb
xchg
push
and
fldenv
pop
aas
mov
sbb
or
jge
jg
sar
jecxz
adc
jp
nop
jl
or
imul
repnz
lea
sub
jae
sub
jl
das
out
xchg
sarb
lret
cmp
call
mov
gs
pop
lcall
loop
cmp
enter
bound
xor
jge
xor
sbb
jmp
add
jne
xor
mov
dec
push
xchg
inc
fcomps
xchg
jg
and
shr
stos
imul
inc
xchg
daa
cmp
mov
and
xor
add
xchg
adc
xchg
test
or
sahf
enter
xor
push
jae
movb
pushl
in
dec
pop
push
cmc
push
inc
xchg
dec
loopne
js
inc
jecxz
sbbl
cmpsb
dec
inc
and
mov
bound
jae
aas
dec
fdivr
sbb
sub
cltd
out
ss
sbb
mov
rcll
mov
cltd
dec
add
push
push
pop
shr
outsb
mov
enter
les
dec
dec
sti
mov
pop
popa
mov
iret
js
cmp
mov
jecxz
or
pop
jo
cmp
out
dec
rcll
jecxz
xchg
insb
jl
xlat
pop
mov
push
push
xor
mov
push
inc
xor
ror
mov
sub
xlat
arpl
les
push
andb
sub
pop
jp
test
push
seto
mov
outsb
lret
xchg
push
mov
inc
dec
xchg
incb
cmp
and
xchg
ss
sbb
in
outsb
xchg
das
mov
lea
pop
mov
and
push
cmp
mov
mov
lahf
clc
jp
aas
mov
cltd
shlb
inc
bound
jae
adc
or
mov
jne
sbb
and
cmp
cmp
dec
mov
adc
inc
scas
mov
cmp
mov
pushf
inc
daa
and
es
sub
pop
enter
movsb
popf
cli
adc
push
pop
aad
sbb
mov
inc
push
jmp
cwtl
lds
pop
pushf
stos
xchg
pop
pop
pop
mov
jns
iret
insb
sahf
inc
and
repnz
cltd
dec
mov
add
xor
out
adc
mov
pop
jl
sbbb
imul
test
and
std
outsb
addb
mov
loopne
jo
pop
popa
ljmp
cmp
jecxz
dec
imull
enter
mov
icebp
cli
jno
repz
in
loopne
and
ror
mov
mov
jp,pn
pop
cmp
repnz
xchg
lods
stos
pop
sbbl
inc
gs
in
jge
mov
das
aaa
xchg
fnstcw
dec
leave
scas
nop
mov
sbbb
cmpsl
into
scas
shr
add
stc
xor
xchg
lock
mov
sbb
cmp
push
ret
jnp
sarb
int3
gs
out
add
jne
jne
sub
lea
pop
movb
xor
xchg
inc
into
pop
call
test
push
cli
setno
lods
sub
push
xchg
jle
push
shll
out
add
out
in
sub
jl
jmp
sub
ret
adc
lahf
hlt
mov
push
xor
mov
inc
outsl
push
outsl
mov
arpl
rclb
push
pop
popf
xor
push
test
mov
cmp
and
stos
pop
ficompl
xchg
loope
lds
sub
xchg
or
loop
loope
or
addl
and
cld
ja
add
push
push
jmp
mov
inc
mov
and
adc
out
xchg
lds
mov
lcall
std
xchg
jbe
mov
xor
fwait
xchg
push
popa
adc
lods
xor
mov
xchg
pusha
and
and
ret
in
mov
sbb
sub
outsb
push
jne
lret
int
daa
xrelease
pop
pop
or
mov
negb
fs
cmpsb
aad
cwtl
and
pop
int
dec
iret
and
sahf
lret
inc
movsl
or
int
sbb
jbe
scas
mov
mov
loope
sub
lods
cld
or
into
rclb
adc
xchg
rcll
add
in
and
icebp
sub
repz
xchg
xchg
aaa
repnz
push
xor
stc
add
aaa
test
adc
jle
mov
aas
add
xor
idivb
in
ret
popf
dec
and
adc
iret
std
xchg
or
jbe
imull
mov
cld
dec
xchg
sub
lret
cs
ljmp
or
and
fstpt
pop
mov
sarb
sbb
sub
inc
ja
jb
xchg
jo
inc
xchg
dec
sbb
pop
mov
push
jmp
outsl
xchg
adc
sub
sti
hlt
lret
mov
jle
rcll
testb
test
xchg
xchg
xor
and
mov
add
shll
pusha
xchg
dec
or
jg
xchg
pop
jb
add
add
sar
data16
mov
out
fisubl
mov
add
movsb
dec
ret
lahf
hlt
call
xor
xlat
push
pop
repnz
adc
mov
in
cmpsb
mov
add
jbe
sbb
arpl
xchg
cld
xor
and
sbb
movsb
adcb
dec
xor
loop
mov
scas
push
sbb
xor
xchg
lods
arpl
lods
cld
ds
xchg
ja
sahf
dec
fadds
cmp
pop
sub
mov
add
xchg
cmp
or
xor
outsb
sub
mov
dec
mov
outsb
fmull
loope
push
mov
xor
push
cmp
cmp
inc
out
jle
sub
pop
push
je
scas
jnp
dec
imul
iret
dec
jb
xchg
xchg
in
xchg
repz
in
mov
add
repnz
jno
pop
mov
xor
adcb
dec
push
or
enter
loope
cwtl
stos
xchg
ds
dec
jmp
shrb
mov
push
mov
or
jg
sbb
sub
push
cmc
cmp
mov
ror
mov
aas
fs
mov
insb
xor
inc
cs
cld
mov
jmp
ljmp
push
aad
and
out
inc
rcll
lds
add
mov
adc
mov
dec
in
cs
test
movsb
sti
push
stos
cmc
mov
dec
mov
stos
xor
jno
stc
lods
dec
rclb
gs
adc
dec
scas
mov
gs
mov
jnp
xchg
push
andnps
pop
inc
add
cmp
mov
cltd
pop
adc
push
lods
leave
jne
mov
xchg
lea
xchg
lds
inc
or
iret
mov
clc
pop
xor
sbb
cmp
jl
jne
cmp
movsb
pop
and
pusha
dec
out
push
mov
adc
xchg
into
cmpl
cmp
xchg
xchg
insl
xor
cwtl
add
xchg
xchg
xchg
push
sbb
insl
arpl
xor
and
data16
add
in
mov
shr
cmpsb
iret
cld
xor
test
stos
lock
dec
or
adc
out
fs
das
ret
fwait
pop
insb
lahf
jge
lahf
jecxz
daa
mov
cmpsl
or
and
mov
and
imul
hlt
mov
pop
rcrb
lret
and
pop
nop
arpl
in
or
sbb
adc
and
lods
pop
std
rcll
mov
or
fistpl
hlt
sbb
fadds
mov
test
mov
jbe
add
xchg
fwait
cmp
xor
and
xchg
mov
sub
fdivrl
jno
loopne
sub
cmp
add
popf
xchg
push
addr16
or
inc
lods
fisttps
adc
xchg
shll
sub
mov
adc
movsb
jle
repnz
ret
jnp
cltd
sbb
shll
mov
dec
jne
int3
ljmp
in
insb
out
jp
mov
cmp
pop
lret
loopne
sbb
and
std
and
xor
adc
and
jae
neg
shll
sub
xchg
sub
jge
sbb
xchg
mov
cli
std
ret
roll
pop
mov
push
push
out
add
adc
pushf
mov
in
xchg
gs
iret
loop
or
sub
mov
nop
xlat
mov
popw
shll
lcall
dec
aad
out
and
jno
or
and
mov
loope
stc
pusha
mov
xor
sub
test
jmp
jae
pop
mov
add
daa
inc
pop
cld
lahf
ret
and
jbe
shrl
stos
push
dec
xor
insb
cltd
mov
sbb
or
in
sub
nop
lahf
jmp
bound
xchg
pop
pop
pop
xor
lock
cmc
cmc
loop
cmp
mov
sbb
jbe
or
notb
inc
mov
call
sub
subl
js
inc
xchg
or
sbb
movsb
dec
jmp
and
bound
pop
fnsave
add
movsb
mov
dec
rclb
jo
cmp
loopne
repnz
mov
loope
test
icebp
ret
inc
pop
fimull
cmpsl
daa
push
ljmp
jns
jp
push
mov
stos
shll
cmp
js
cltd
and
arpl
jl
movl
mov
mov
fwait
sub
aam
pop
orb
addr16
mov
inc
mov
or
sub
es
add
add
add
iret
cmp
outsl
jecxz
push
insl
shll
sbb
push
mov
add
inc
jg
mov
inc
popf
shlb
push
jno
jne
cwtl
push
jae
pop
adc
add
lret
call
pop
adc
add
push
scas
mov
lods
or
pushf
test
bsr
and
mov
in
cld
lods
shl
cmp
loope
add
pop
incb
or
xchg
bound
sub
loopne
call
dec
lea
aas
lret
mov
out
or
addb
push
scas
fdivr
dec
inc
xor
imul
push
and
and
inc
out
jge
clc
daa
arpl
shll
pop
mov
xchg
movsb
adc
stc
mov
xor
outsb
lret
fisttpl
mov
dec
cmpsb
pop
cmpb
mov
filds
int
ja
aas
loope
add
dec
xor
fdivrl
lcall
sub
cmp
repz
lock
sarb
into
or
pop
scas
repnz
xchg
sub
jno
scas
pop
xor
or
pop
sbb
cmpb
dec
dec
adc
int
xor
fbstp
int3
pusha
inc
xor
xchg
pop
add
pop
sbb
add
insl
std
in
mov
pop
or
shl
xchg
and
mov
inc
lahf
xlat
enter
adc
pop
ss
jp
jle
insb
aad
inc
into
sub
cmp
outsb
repz
sub
idivb
jns
add
xor
push
jge
cmp
out
inc
iret
sub
mov
jns
out
outsl
mov
or
hlt
mov
ror
jne
sub
aaa
jns
mov
sahf
mov
xchg
iret
push
cs
inc
aad
enter
pop
mov
test
mov
xor
xor
cld
gs
xor
or
cmp
sbb
add
jp
outsb
test
divl
mov
mov
push
mov
mov
popf
jae
mov
mov
repz
fimuls
dec
mov
xor
mov
mov
repnz
cs
test
fadds
mov
fdivl
sbb
mov
jnp
xor
jae
in
les
mov
call
jns
pushf
movsl
lahf
lock
dec
js
fdivl
xchg
mov
ret
jmp
in
pop
movsb
xchg
xor
int
pop
aas
js
and
and
iret
xor
push
sbb
cmp
dec
sub
stc
movsl
and
andl
hlt
jne
outsb
xor
pusha
test
add
enter
sbb
pop
push
dec
inc
and
mov
jbe
stc
xorl
lcall
and
aam
add
and
xchg
pusha
out
mov
je
arpl
or
repnz
xchg
xor
into
std
adc
pop
out
lock
jne
fs
mov
xor
xchg
cltd
sbb
sbb
sbb
mov
std
mov
dec
adc
je
cmp
xchg
testb
icebp
sarl
movsl
dec
mov
lds
mov
fistpll
inc
fstl
mov
and
cmp
movsl
stc
mov
mov
mov
jge
js
aad
xlat
xor
hlt
jmp
jb
and
rcrl
xor
mov
out
dec
mov
push
pop
or
inc
sub
mov
dec
rcr
and
je
aam
xchg
mov
out
shll
push
mov
or
stos
push
sub
test
loop
mov
test
mov
out
or
xchg
pop
inc
mov
or
sbb
pop
push
into
sbb
push
push
pshufw
aas
outsb
xchg
int
lcall
in
jmp
xchg
add
inc
imul
mov
xchg
in
mov
push
xor
aas
mov
xchg
and
out
inc
pop
outsb
fwait
adc
fsubrs
in
ret
int3
mov
lea
push
je
sbb
sub
sti
popf
inc
loope
fisttpl
mov
mov
movntps
repz
daa
fcompl
push
lcall
pop
or
lods
push
adc
jae
sahf
jbe
stos
jne
pop
ljmp
mov
push
aas
adc
es
cltd
mov
mov
lock
pop
shrb
xchg
and
iret
dec
imul
loope
aas
adc
push
jae
stos
mov
dec
add
add
add
lea
imul
fcmovnb
rcrb
sub
or
add
repz
add
scas
cmpsl
and
sub
push
test
in
dec
pop
roll
sbb
cld
data16
jg
sub
mov
in
mov
push
mov
sbb
outsl
mulb
ret
cmp
outsb
mov
cmp
fcomp
mov
movsl
inc
std
jl
mov
es
lods
sarl
inc
xchg
pop
int3
mov
cwtl
or
ja
inc
xor
fcompl
mov
jb
out
sbb
xchg
icebp
adc
xlat
sub
gs
iret
std
lret
icebp
ds
outsl
stc
sub
lret
mov
jp
insl
and
sbb
iret
addr16
cwtl
push
push
stos
jge
gs
and
xchg
in
dec
sahf
xchg
aad
in
inc
push
push
push
das
jnp
js
cmc
call
lcall
fst
cmp
jge
nop
aam
jmp
in
pop
lock
out
mov
lret
mov
cmp
or
aas
ja
in
repnz
pop
mov
aam
js
dec
int3
cmp
lods
std
lods
push
cwtl
cltd
mov
js
iret
jp
xchg
adc
clc
andl
mul
cmpl
adc
or
mov
popa
int3
hlt
jp
fidivl
and
enter
jge
xor
mov
xchg
mov
rorb
mov
xchg
out
lcall
mov
aad
dec
sub
push
in
sbb
fisttpll
adc
insb
stc
cwtl
push
cmc
mov
cs
mov
jnp,pn
int
rcrl
pop
jmp
mov
xchg
mov
jp
imul
add
push
mov
xor
not
xchg
stc
jbe
cmp
lock
xchg
shl
xchg
add
lock
stc
sub
dec
imulb
cmc
cwtl
fcmove
sarl
sar
insb
mov
mov
cmc
in
mov
adc
xchg
es
pop
or
stos
andb
hlt
or
hlt
push
inc
shll
mov
loope
xchg
pop
push
repz
pop
sub
jmp
fcmovnu
push
insl
dec
inc
loopne
jb
test
mov
inc
ftst
sub
clc
ljmp
dec
jl
test
jmp
cmp
sub
fmuls
fdivl
cwtl
xchg
add
outsl
xor
cmp
out
mulb
mov
push
in
xchg
fsubr
inc
dec
mov
sbb
icebp
push
or
add
push
repz
sub
sbb
sub
cmp
pushf
mov
js
push
or
fs
sub
and
ficomps
xchg
xor
scas
sub
repz
mov
sbb
jge
mov
test
xchg
addr16
movsb
xor
das
jmp
jnp
or
or
pop
dec
and
add
dec
mov
sub
add
inc
pop
pusha
aaa
lods
test
stos
cwtl
fsubs
jnp
insl
jmp
xor
addr16
sbb
negl
pop
out
stc
jge
test
jo
mov
inc
fwait
icebp
rcrb
dec
push
or
push
inc
and
movsl
mov
cmp
inc
fcoml
xor
pop
xchg
insl
mov
jg
inc
mov
int3
adc
and
or
add
push
xchg
imul
fdivrs
out
stc
push
sub
fwait
stos
pusha
fimull
test
lahf
cltd
scas
jmp
mov
repz
scas
lret
ss
jle
xchg
arpl
or
scas
push
xchg
sbb
repnz
aas
pop
add
fstps
sahf
mul
ret
js
cmp
data16
lds
adc
out
mov
inc
cmp
std
push
int3
call
lds
cld
jmp
outsb
stos
adc
pop
jle
fs
push
rcr
mov
xchg
cmp
in
pop
cld
cmpsl
dec
or
lods
cmp
das
jg
xchg
mov
xlat
mov
push
pop
pop
setle
mov
add
mov
and
or
ret
int3
mov
shl
sbb
stos
popa
and
loope
jae
loope
out
pop
outsb
jl
jb
out
xchg
xchg
movsl
sub
shrb
adc
jl
jmp
xchg
xchg
or
rcl
imul
jp
fldl
gs
scas
lahf
hlt
mov
mov
or
adc
sbb
rorl
jae
adc
jae
fidivrl
mov
pop
pop
std
lds
loope
sahf
pop
add
add
add
bswap
test
dec
or
pushf
sbb
cld
movb
repz
add
or
shrb
lea
dec
xor
in
add
cmc
push
outsl
pop
clc
stc
addr16
jae
stos
adc
repnz
xchg
or
sbb
or
iret
es
inc
pop
clc
or
mov
pop
jns
mov
inc
stos
xor
loope
push
mov
loop
inc
adc
xor
pop
cmp
or
fisttpll
stos
sub
je
mov
mov
insb
or
push
popa
lcall
xor
xchg
fmull
mov
jbe
inc
nop
orb
mov
int3
fldcw
adc
pop
ja
mov
test
xor
into
push
mov
xor
sbb
ja
sarb
mov
xchg
test
out
in
lcall
leave
push
sbb
hlt
sub
mov
mov
outsb
xchg
lcall
test
lret
les
pop
imul
xor
fstpl
mov
push
dec
outsb
adc
dec
js
cmp
mov
popf
pextrw
cmpsb
ret
cmpl
in
pusha
sbb
push
sbb
aas
sub
addb
jae
cltd
jb
mov
adc
das
pop
sub
loopne
daa
xor
imul
pop
and
cmp
mov
jns
xchg
out
lcall
sbb
mov
mov
lcall
lret
popa
cmpsb
sahf
popl
push
sbb
fwait
mov
lea
hlt
jl
sub
loop
or
rol
jecxz
push
mov
add
js
dec
daa
jecxz
add
mov
xor
roll
jne
pushf
sub
jns
push
add
pop
pop
aad
clc
inc
push
add
jp
push
xor
mov
les
adc
and
jno
mov
in
xor
mov
pop
cmp
stos
mov
mov
pusha
and
ds
dec
jns
clc
mov
xchg
aaa
mov
jbe
ds
fmul
add
fisubs
icebp
sarb
inc
and
clc
adc
arpl
decb
sarl
inc
cmpsl
lea
add
into
rcr
out
jmp
shll
mov
cmp
or
jno
test
in
mov
dec
sub
mov
xor
pop
mov
jbe
in
pop
popa
clc
cmp
imul
inc
clc
jno
mov
sub
mov
aaa
hlt
or
push
push
or
hlt
adc
dec
mov
sbb
add
pop
sub
and
lret
jmp
call
inc
push
and
aas
add
aas
les
sub
dec
es
popa
adc
dec
outsb
in
ret
or
sbb
dec
out
fidivs
mov
ss
mov
out
imul
push
es
shll
daa
popa
neg
repz
or
pop
add
dec
xor
mov
test
mov
jp
test
stos
std
sti
rcrl
lods
sbb
or
pop
dec
je
mov
cmc
pop
push
cld
pop
push
andl
aaa
push
dec
je
in
sahf
les
daa
cmpsb
rcll
mov
adc
push
lea
ja
mov
adc
rorb
mov
push
cmp
push
lock
lods
cwtl
xor
or
cmp
test
rcll
or
lea
loop
inc
cwtl
jecxz
ja
cs
sbb
insb
lcall
bound
xchg
pushf
xchg
call
push
int
movsb
lret
cwtl
inc
dec
ss
inc
jbe
test
jp
jnp
popa
sti
jno
xchg
test
fchs
mov
sbb
out
pop
push
out
daa
pop
movsb
jns
cltd
and
nop
inc
fcmovbe
inc
movsb
jno
pop
ljmp
fildll
add
sbb
push
push
adc
aam
push
mov
cmp
cmpsb
arpl
pop
mov
loope
jge
pop
jbe
dec
movsb
fstl
daa
cld
test
xchg
adc
in
adc
cmpsb
adc
dec
movsl
int3
outsl
movb
dec
cwtl
lds
gs
cltd
mov
addr16
mov
ljmp
mov
stos
add
xchg
dec
adc
jae
dec
out
jle
enter
fimull
add
add
add
jg
cmc
or
fistpll
add
repz
add
lret
nop
popa
xchg
ret
adc
pop
inc
nop
xlat
xchg
repz
push
scas
sbb
fildll
mov
add
adc
add
cvtpi2ps
push
subl
iret
cmp
xor
cmc
pop
push
andl
jnp
fbstp
hlt
adc
fistpll
aam
clc
xchg
fidivl
int
scas
pop
les
js
pop
cmpsl
sbb
sub
shl
inc
xchg
arpl
sub
jl
imul
sub
inc
or
ficompl
out
push
jecxz
fsubs
push
pop
xor
js
push
push
test
xchg
test
xlat
jno
mov
adc
inc
xchg
inc
movaps
ror
xor
sbb
and
bound
incb
adc
adc
inc
aaa
lds
jae
in
dec
mov
popf
decl
xor
movsb
push
sub
lods
lret
push
scas
dec
fldt
xchg
imul
sbb
pop
or
out
fistps
shll
push
sahf
ljmp
mov
popf
out
mov
inc
cmp
sub
ds
sti
cmc
insb
outsl
into
lahf
mov
outsb
add
movsb
mov
and
push
insb
lods
lods
loop
jo
scas
mov
mov
jge
adc
in
mov
inc
aas
and
sub
push
fs
cmc
fstpl
mov
ja
andb
ret
bnd
mov
xor
inc
popa
add
mov
fmul
inc
ds
dec
es
push
xchg
shrd
jecxz
cmp
push
add
add
adcb
adc
shrl
hlt
hlt
in
sub
adc
dec
movsb
cld
add
and
dec
cmp
push
divl
movsb
mov
popa
out
pop
mov
sbb
push
data16
je
test
addb
cmp
das
cmp
std
in
mov
xor
mov
sahf
mov
inc
shrb
gs
cmp
pusha
ret
in
outsl
jge
pop
insb
enter
mov
mov
pusha
in
repz
pop
stos
xlat
ljmp
pop
jg
inc
loop
and
pusha
out
cmp
lods
out
out
mov
push
or
stos
rcl
inc
rcr
jmp
dec
push
xchg
lcall
sti
fwait
push
push
jmp
xlat
data16
cmp
mov
daa
enter
xor
out
xchg
jg
push
pusha
xchg
xchg
scas
push
popa
ret
sub
int
dec
pop
xor
icebp
std
jl
rcrb
cmp
mov
nop
or
test
mov
les
rep
fwait
popf
adc
insl
push
mov
pusha
xor
xor
push
out
das
jbe
jp
es
add
clc
or
in
into
dec
leave
sbb
out
pop
lock
hlt
rol
adc
and
xchg
das
cmp
inc
out
nop
loopne
cmp
add
stos
adc
lods
sbb
jmp
mov
jo
loopne
lcall
inc
jb
jnp
ror
cmpb
fs
push
cld
inc
std
loop
mov
push
push
ret
call
rdpmc
decl
push
cmp
add
addr16
mov
dec
bound
dec
jl
or
inc
dec
cmp
pusha
out
mov
xchg
push
jecxz
mov
daa
mov
hlt
dec
dec
adc
mov
call
dec
jg
in
pop
repnz
push
jns
dec
dec
cmpsl
xchg
mov
shr
mov
shrb
dec
sub
shll
adc
hlt
mov
cmpb
rsm
out
scas
dec
outsl
sub
test
xchg
cmp
add
stos
mov
and
jns
pushl
and
mov
icebp
xlat
push
popf
lods
and
pop
test
std
daa
xchg
enter
add
cmc
insl
jae
rorl
sub
scas
or
jo
mov
out
inc
and
icebp
sbbl
pop
inc
jb
test
xor
jns
fisubrs
ficompl
popf
and
jmp
cmp
mov
mov
sbb
mov
ficomps
ljmp
test
adc
mov
adc
mov
mov
cs
jae
rorb
add
jmp
popa
repz
and
jae
xchg
cmp
cs
jecxz
orl
dec
dec
inc
ljmp
ficomps
decb
and
inc
xor
jae
and
add
add
add
add
outsb
out
lds
sub
rolb
add
add
add
cmc
xchg
or
fistps
and
mov
out
jecxz
sub
daa
scas
inc
adc
sub
add
add
outsb
or
fiaddl
lret
push
popa
sarl
cmp
aaa
mov
adc
xor
cmc
pop
xlat
mov
pusha
aaa
cmp
out
js
lods
repnz
jno
test
or
cmp
and
int3
adc
xchg
sub
test
jmp
repz
push
pushf
loop
jbe
push
fdivrl
test
daa
xchg
icebp
dec
mov
pop
mov
and
mov
push
mov
sbbl
mov
dec
xchg
xchg
dec
inc
xor
cli
hlt
lahf
xchg
and
dec
jb
inc
daa
mov
mov
clc
test
cmp
jo
cmc
icebp
sub
mov
jmp
mov
addr16
cmp
aas
add
push
and
shrb
inc
rcrb
jne
mov
cwtl
xor
in
into
dec
icebp
mov
and
push
pop
mov
mov
xchg
or
inc
and
mov
int3
lahf
repnz
in
pusha
xchg
xor
movsb
jg
mov
shlb
mov
jge
sbb
lret
ljmp
inc
lea
jns
lret
cmp
push
jns
or
negb
mov
mov
mov
shrl
fs
jo
sbb
loop
cwtl
das
and
cmp
rcl
pushf
mov
pop
inc
add
mov
mov
lea
xchg
sub
repz
jbe
mov
out
jne
xor
fldl
and
pop
je
sbb
add
aad
sub
xchg
jle
xchg
dec
mov
mov
notb
inc
sbb
sub
iret
in
cmpb
xchg
loopne
xchg
and
pop
inc
or
xchg
fbld
adc
imul
in
xchg
fistps
rol
sub
push
xor
popa
fnsave
push
and
add
jo
loop
or
pushf
dec
cli
push
cmp
adc
jl
les
outsb
mov
ljmp
sar
repnz
pusha
lods
es
iret
repz
in
inc
gs
xor
or
rolb
out
out
inc
out
mov
repnz
loope
mov
add
int3
jle
jecxz
cwtl
shll
jg
lahf
sbb
loop
out
fiaddl
addl
lret
jmp
xchg
xchg
call
mov
test
xlat
mov
call
jp
and
test
add
cwtl
and
std
cwtl
xchg
arpl
xchg
test
shl
inc
ret
mov
inc
pop
dec
mov
stos
mov
or
dec
xor
add
cmpsl
aas
inc
insl
shr
fadd
imul
je
fwait
jno
adcl
mov
inc
int
pop
jp
stos
add
mov
jns
cmp
mov
fwait
sti
lret
shrb
aas
arpl
imul
pop
or
dec
mov
jns
loope
rep
leave
adc
xor
clc
aaa
add
jns
cmp
or
fisttps
cmpsl
cmpsb
loopne
and
and
cld
push
fistpl
loopne
call
add
mov
ret
inc
pop
out
mov
daa
dec
clc
cmp
je
push
testl
scas
popa
ficoms
xorl
movsl
mov
xor
dec
jb
dec
xchg
sahf
fwait
inc
dec
jnp
out
data16
or
lret
adc
push
jno
movsl
mov
repz
fcmovnu
lds
sub
dec
sti
adc
data16
ret
pop
mov
ret
imul
pop
aaa
imul
jae
enter
push
outsl
fsub
sub
ds
and
call
fiaddl
insb
mov
adc
pushf
popf
and
add
in
arpl
xchg
adc
shrl
rolb
lea
nopl
adcb
cmp
sub
inc
jnp
gs
jmp
mov
popf
repnz
sti
and
scas
add
insl
loop
dec
pop
lods
xor
push
push
xchg
cltd
adc
fs
dec
shlb
jle
mov
add
dec
aas
adc
xchg
xor
rorl
mov
push
jge
mov
pushl
xchg
push
pusha
fistps
mov
or
add
out
lret
lods
xlat
sti
mov
push
xor
aad
add
add
add
les
les
repnz
lods
scas
lods
lock
inc
lea
push
insl
or
test
enter
jns
and
adc
xor
jle
lahf
xchg
leave
push
inc
enter
test
popf
push
das
mov
lods
xor
mov
inc
or
pusha
out
or
stos
pop
jbe
and
sub
inc
shrl
lret
sub
sub
sbb
adc
and
mov
xor
or
scas
pop
xchg
movsb
ja
call
mov
jo
dec
sbbl
lret
adc
test
pop
xor
fsubl
fisubrl
fdiv
test
insl
out
and
sub
fwait
cmpsl
mov
push
cmp
cmpsb
test
in
pop
sbb
divl
push
lea
and
iret
iret
hlt
and
lods
test
mov
mov
in
mov
add
xchg
out
cmc
das
mov
jo
mov
cmp
or
xchg
nop
cwtl
cmp
sub
mov
cmp
mov
adc
jns
or
movsb
push
scas
fwait
jle
cmpsl
inc
xchg
push
popa
mov
ret
out
iret
and
dec
pusha
cmp
ljmp
cmpsl
mov
sub
mov
stos
leave
lahf
ficoml
pop
lods
xor
lcall
push
mov
jb
pop
fsubr
jo
icebp
jbe
inc
mov
jb
jg
imul
xor
sbb
lret
lret
aad
fdivs
sub
stos
or
sarb
or
add
mov
adc
es
sbb
insl
shl
aad
sbb
or
cmp
push
push
xchg
jo
fstpl
jecxz
adcl
or
push
sbb
out
rorb
adcl
rcl
movsl
xor
jp
push
mov
sbb
jge
stos
insl
mov
sbb
or
pop
mov
and
jno
and
ja
sub
mov
inc
push
enter
das
adc
sti
data16
arpl
mov
adc
pop
push
mov
fstpt
js
sub
xor
jae
in
cs
filds
outsl
imul
sbb
cmp
xor
push
cmpsl
sbb
ffree
mov
add
mov
pop
repnz
mov
mov
test
mov
bound
mov
test
ljmp
cltd
push
sbb
and
mov
lea
test
inc
es
cli
dec
bound
fistl
loope
and
sahf
jge
lea
cmp
std
ror
fiaddl
in
xchg
mov
push
add
jne
jle
jecxz
mov
pop
cmp
add
int3
aam
clts
or
mov
mov
decb
js
and
cli
loopne
push
jae
sub
sub
jno
sbb
cmp
fcoms
sbb
testl
xchg
add
push
jnp
add
jo
xchg
outsl
lds
rorl
add
shl
or
sbb
ljmp
mov
and
ret
rcrb
xchg
jbe
mov
or
cmc
fwait
sbb
addr16
push
nop
mov
adc
mov
lcall
jno
adc
popf
or
je
sbb
jl
xchg
mov
pop
ss
fs
mov
mov
dec
cs
xor
arpl
cld
clc
out
stc
popl
fadds
dec
adc
mov
data16
jl
xchg
into
cld
ds
cwtl
out
xchg
shrb
xchg
loopne
mov
or
sub
nop
and
dec
mov
or
and
iret
test
jp
dec
push
jge
ja
js
sti
int3
ret
jg,pt
add
js
ja
xor
mov
scas
push
test
cmp
dec
scas
xor
cli
xor
les
jno
mov
stos
push
loop
outsb
test
cli
push
pop
sub
shlb
ss
insb
lods
cli
cwtl
inc
out
mov
test
sub
rcrl
scas
decl
mov
mov
inc
je
push
loopne
pop
mov
sbb
sti
push
out
jns
addr16
ljmp
stos
scas
xchg
xor
roll
sahf
mov
pop
xor
shll
es
lret
mov
mov
fbld
lock
add
add
jno
loop
bnd
fcomi
mov
mov
fiaddl
add
add
add
jg
inc
push
ror
fistpll
sbb
pop
ds
sbb
loop
pop
dec
sub
dec
outsb
sub
adc
lcall
or
push
cli
sbb
js
add
aaa
sub
pop
mov
pusha
push
in
xor
lds
pop
pop
sbb
ficoml
scas
xor
adc
das
movsl
out
push
push
dec
mov
scas
lcall
ljmp
mov
jo
sbb
out
mov
fildll
daa
mov
jmp
cmp
inc
adcl
adc
jecxz
cltd
push
sar
mov
push
insb
mov
aad
mov
dec
mov
inc
dec
cli
xchg
and
cmp
jb
or
pop
xchg
out
sti
jge
lret
cmpsb
pop
shrb
jo
lods
ret
cmp
mov
sbb
push
pop
sbb
cmc
push
hlt
js
xor
xlat
pop
iret
enter
mov
pop
mov
cltd
leave
xchg
inc
ja
test
loopne
lahf
cld
or
inc
lds
jb
or
xchg
scas
ret
ret
xor
mov
loope
mov
int
mov
inc
jns
bound
cmp
xor
jle
lods
adc
push
sub
cmc
pop
out
loop
jnp
sbb
fistpll
repz
adc
call
out
xor
sbb
push
lds
pop
push
inc
cld
lcall
jmp
and
scas
popa
movsl
outsl
inc
not
xchg
je
icebp
es
sbbb
hlt
xorb
loop
mov
outsb
sbb
xchg
or
aas
lret
mov
lods
jge
cvtdq2ps
cld
pusha
jmp
clc
mov
and
cmpsb
vucomisd
adc
mov
jmp
fcoml
push
mov
out
sub
sub
cmp
jmp
fsubs
repz
or
cmc
int
mov
cmpsl
in
cs
test
xor
sub
cmp
outsl
xor
mov
and
mov
add
addb
iret
push
aad
ljmp
mov
data16
test
js
bound
adc
cmp
movsl
mov
adcb
adc
dec
in
data16
popa
xchg
lahf
sbb
cwtl
dec
data16
adc
xor
outsb
loopne
mov
testb
mov
mov
rolb
jge
xchg
fwait
int3
sahf
sub
pushf
out
xor
mov
out
sub
call
sub
jns
lret
mov
push
add
dec
mov
cmp
mov
adc
arpl
sarb
xor
aam
mov
lret
dec
jp
daa
mov
pushf
daa
push
jne
mov
pop
pop
push
mov
push
push
xchg
mov
xchg
xor
jo
add
lcall
pusha
and
fnsave
hlt
cld
pop
dec
ficoml
pop
xchg
push
loop
popa
push
mov
call
jecxz
add
out
jg
aam
fcoms
scas
jns
in
jp
inc
scas
daa
data16
nop
cmc
cli
das
cwtl
daa
mov
mov
pop
mov
mov
rclb
cwtl
movl
jo
push
jle
push
or
clc
push
push
pop
or
punpckldq
xchg
iret
or
cmp
lret
xor
mov
add
fs
jnp
clc
pop
xor
dec
outsb
jno
pop
dec
pop
xor
jl
dec
movsb
nop
mov
xlat
aad
and
xlat
pop
stc
sbb
andb
test
insb
sub
xchg
das
jge
xor
outsb
adc
pushf
inc
jecxz
gs
fstpl
mov
dec
pop
mov
rcrb
dec
add
cmp
scas
aas
enter
cmp
out
xchg
jnp
aaa
add
testb
or
mov
dec
mov
adc
aaa
cmp
inc
xor
jge
out
xor
fdivr
mov
mov
pop
sti
ds
movsb
daa
add
pop
loopne
xchg
adc
lahf
xchg
mov
imull
add
movsb
fisubl
sub
and
loop
mov
scas
pop
xor
in
aaa
in
or
cmp
mov
jnp
push
cwtl
out
insl
cld
sarl
out
fnstsw
add
and
outsb
js
jecxz
ficoms
mov
inc
sub
mov
imul
repnz
iret
adcb
aad
lcall
bound
nop
or
inc
loope
add
add
add
ss
in
inc
test
filds
add
add
add
adc
mov
mov
rcrb
sub
sbb
iret
mov
rcl
imul
arpl
je
in
jmp
hlt
ret
ja
push
adc
mov
lret
std
mov
insl
push
mov
push
and
mov
iret
mov
mov
xchg
xor
pop
leave
stos
stc
jmp
xchg
mov
sarl
pop
mov
xlat
cli
loop
push
sub
outsb
mov
scas
lock
cmpsb
call
mull
insl
xchg
hlt
push
rclb
ret
test
outsb
arpl
sub
mov
popa
jb
inc
cmp
jo
mov
jne,pt
gs
prefetchw
cmp
adc
pop
push
mov
xor
imul
popa
xor
sub
xor
adc
cmp
sub
sbb
movsb
xlat
push
loop
mov
inc
std
mov
das
outsb
lret
mov
jbe
ja
inc
sub
notl
jbe
or
lock
mov
cs
xchg
mov
test
mov
leave
sub
cmp
sbbl
out
push
xor
jp
dec
xchg
ljmp
out
push
pop
inc
pop
sbb
xor
out
loope
pop
jae
mov
clc
jle
jno
jo
push
dec
lods
andl
loope
iret
bound
test
push
mov
push
pop
mov
dec
adc
sti
shll
fadds
mov
cmp
push
sbb
push
xor
dec
sbb
xor
out
xor
aam
test
push
cmc
ficomps
inc
pop
adc
clc
pusha
stos
dec
sbb
mov
jmp
in
push
aam
push
pop
test
adc
aas
inc
inc
leave
fs
in
cltd
into
loopne
mov
int3
and
mov
dec
ja
push
push
sbb
mov
mov
ljmp
mov
shrb
mov
xchg
test
push
loopne
inc
add
gs
test
pop
fcoms
jbe
hlt
push
mov
xor
out
jnp
mov
push
dec
add
push
push
add
push
jecxz
cs
loop
fists
sub
rorl
test
and
cld
mov
add
inc
pop
pop
xor
in
jmp
lods
jle
in
loope
and
sub
jb
add
xlat
sahf
in
addr16
out
repz
adcl
jp
push
out
out
pop
test
inc
pop
in
xor
and
popf
stos
mov
lods
rorl
mov
mov
in
push
adc
sub
push
in
xchg
adc
fs
popa
shr
scas
cmc
test
into
mov
mov
adc
mov
insl
adc
lret
add
in
dec
lret
je
xchg
or
push
mov
pop
loope
xchg
ja
mov
push
pop
mov
push
fscale
fsave
lret
sub
leave
xchg
movsl
call
imul
jnp
std
and
add
outsb
pop
pop
ret
fdivp
xor
jge
dec
stos
sbb
aad
mov
shl
cs
loopne
and
push
adc
movsl
xchg
mov
loope
rcl
inc
xor
cwtl
loope
jne
jns
push
inc
subl
dec
add
cmp
mov
insl
and
sahf
cmc
add
rorl
int3
jne
pop
jecxz
pushf
cld
cli
stos
push
js
xor
inc
pop
in
pop
shl
mov
cmp
push
ret
repz
lods
xchg
adc
cmc
xor
adc
lds
cmp
push
pop
lock
mov
sub
in
insb
xlat
cmp
mov
aad
neg
or
cmp
movl
mov
out
dec
mov
mov
mov
or
sahf
movsb
mov
xor
test
push
sti
mov
and
cmp
imul
outsl
xchg
sbb
fucomip
int
xchg
xor
jnp
pushf
or
mov
mov
push
jb
aam
add
push
cmp
ror
xor
push
or
jmp
cli
insb
pop
pop
pop
bound
je
mov
in
jo
adc
jb
cmp
fbld
jmp
xchg
cli
arpl
mov
cmp
push
scas
jns
push
mov
insl
movsl
add
add
add
roll
hlt
inc
push
scas
in
add
add
add
popa
clc
inc
clc
icebp
lods
aad
in
por
cmpsb
or
pop
inc
xchg
stos
cmp
in
mov
loopne
mov
fs
out
and
repnz
les
sub
movsb
dec
cmc
xchg
lea
mov
jbe
nop
push
enter
xor
jae
repz
repz
pop
cmp
or
cmp
dec
clc
xchg
pop
je
add
inc
mov
ret
mov
sbb
xchg
push
pushf
push
mov
cwtl
dec
and
imul
pop
bound
mov
les
push
mov
scas
pop
cmpsb
add
sbb
pop
or
daa
pop
nop
jle
loope
sti
cmp
addr16
out
loopne
xchg
mov
les
pop
je
sub
jp
push
int
pop
sub
lret
int
and
jg
out
es
mov
mov
adc
daa
enter
test
cmp
mov
or
jb
adc
stos
and
xchg
js
sub
movsb
adc
mov
ljmp
fucomip
ds
jno
jge
mov
out
rorl
ss
dec
aad
outsl
jmp
fisubrs
popf
rolb
cmc
and
lret
in
cmp
jecxz
add
xchg
adc
xchg
int
scas
imul
in
mov
daa
aaa
leave
mov
pop
movsl
pop
ret
pop
dec
or
sub
mov
push
rep
mov
dec
stc
lea
adc
push
sbb
mov
in
sbb
loop
negb
inc
xor
and
adc
nop
imull
popa
int
ss
dec
xchg
arpl
mov
mov
imul
sub
in
inc
popa
int3
push
and
fiaddl
out
and
ja
jnp
adc
loopne
jle
leave
xor
sbb
adc
test
arpl
loope
pop
sub
fwait
leave
rcrl
xor
push
jle
adc
add
xor
push
aaa
cmc
test
addr16
lret
and
jecxz
es
sahf
mov
mov
sub
mov
mov
scas
and
lods
xchg
xchg
adc
test
xchg
jl
out
push
adcl
or
mov
fimull
sbb
push
arpl
pushf
or
cmc
test
lds
pop
and
xchg
mov
pop
leave
ljmp
fs
scas
and
and
pop
jns
cli
outsl
jp
xor
jnp
mov
pop
adc
cld
ja
mov
insl
add
ss
inc
ret
pop
cs
ret
jne
dec
cs
xor
xor
or
ficoms
adc
sar
lcall
jns
in
xchg
repz
mov
and
movsl
inc
in
lret
push
xlat
mov
loop
add
fwait
mov
jns
fldcw
scas
push
xchg
icebp
add
inc
jae
call
jae
pop
push
and
or
arpl
dec
xlat
pop
pop
rcl
es
mov
rcll
sub
cmp
inc
jge
jg
cmp
cmp
in
fcmovb
ret
xchg
add
ret
mov
das
clc
ret
sbb
push
stc
ret
loopne
loopne
mov
xchg
xchg
adc
push
push
mov
cmp
lret
inc
lret
xor
cwtl
pop
xchg
mov
rorl
addl
add
clc
incb
negl
mov
mov
inc
test
xor
movsl
js
sbb
push
inc
mov
rol
inc
xchg
or
movsb
mov
jo
pop
and
inc
jne
jge
les
xchg
arpl
add
dec
mov
push
mov
jmp
mov
fs
mov
addr16
inc
test
xchg
cmp
xchg
orb
sub
cmc
cmc
mov
mov
ret
and
dec
pop
sub
jl
lock
fcmove
int3
sbb
mov
sub
movsb
mov
mov
lock
push
ds
daa
and
sub
es
jmp
cltd
out
push
inc
push
and
or
stos
fimull
jo
sub
sub
jecxz,pn
pop
cmp
inc
jle
daa
outsb
jmp
cmp
mov
xor
es
xchg
jmp
pop
push
inc
and
push
or
enter
test
nop
push
addr16
aam
add
imul
rcrl
stos
aaa
aam
add
add
sub
mov
inc
das
call
add
repz
add
mov
mov
mov
in
lods
xchg
aad
aaa
mov
dec
out
add
test
inc
inc
xchg
repz
sub
test
stos
fcmovne
aad
jo
or
movsl
jns
push
adc
cmp
or
cmpsb
pop
xor
and
pop
sbb
cmp
sbb
jo
aad
fdivl
je
shll
jecxz
aaa
mov
and
and
mov
xor
sahf
pop
mov
inc
dec
mov
repnz
inc
scas
repnz
inc
xor
dec
inc
and
je
jno
mov
stc
cwtl
xor
or
inc
loopne
fwait
mov
lret
jmp
subl
push
in
aam
icebp
movsl
adc
in
jmp
ljmp
push
xchg
arpl
push
xor
jmp
je
or
cmp
jge
shrb
xchg
sbb
push
iret
enter
cli
inc
sub
xor
cmp
stos
mov
clc
mov
jne,pt
icebp
loope
pop
or
test
clc
std
cltd
sub
sbb
jne
mov
and
cmpsb
pop
rcr
adc
inc
pop
mov
pop
ds
jb
pop
pop
or
iret
add
rcrb
or
jb
lahf
shrb
rol
rcrl
pop
inc
xchg
fldenv
cwtl
adc
out
das
sub
push
cmp
dec
lea
or
pop
mov
gs
mov
xlat
jmp
and
lahf
add
xchg
sbb
pushf
lods
mov
or
mov
and
push
sub
aad
lahf
or
jp
lods
outsl
mov
push
and
fcomi
adc
or
dec
test
movsl
inc
sub
dec
push
cmp
lods
push
shrb
mov
push
cmp
imul
mov
xchg
ss
sub
int
or
lea
lret
les
orb
push
insb
xchg
cmp
lods
mov
lret
movsl
dec
cltd
shll
xchg
repz
xchg
stc
test
xor
and
fistl
sarl
enter
add
sub
shll
das
push
jge
mov
dec
mull
das
lcall
dec
test
or
or
pop
dec
popa
pop
fucom
testl
inc
push
repz
jne
ljmp
lcall
int3
rcrl
mov
sub
push
movsb
cmp
sub
jmp
mov
fdivr
jns
addb
lods
pop
xor
les
xor
xor
movsb
mov
and
cmp
stos
push
cmpsl
push
mov
movsl
jnp
jecxz
adcl
sbb
jl
mov
repnz
sahf
mov
push
pusha
loopne
ret
xor
cld
xchg
into
rorb
sarl
clc
mov
xor
push
mov
mov
and
out
push
fists
push
jp
mov
mov
dec
pop
dec
push
rcr
leave
cmpsb
dec
sub
jne
in
sub
js
ja
adc
or
les
gs
popfw
push
imul
xor
in
mov
imul
fsts
pusha
push
add
sub
xchg
mov
push
fs
leave
mov
add
xchg
call
aam
xlat
movsl
pop
jmp
jbe
and
insl
or
xchg
xchg
mov
xchg
scas
adc
popa
push
mov
add
and
out
mov
sbb
pop
movsb
cmp
jae
test
scas
fidivs
into
jmp
push
enter
jno
sbb
and
test
and
daa
test
adc
mov
mov
push
adc
in
pop
stos
xor
push
mov
decb
outsl
outsl
cmc
test
insb
stc
sbb
fdivs
xlat
xchg
dec
add
out
jl
sbb
lock
dec
std
or
pop
bnd
into
cmp
aas
test
mov
mov
inc
cmp
jne
cwtl
cmp
iret
in
and
xor
pop
icebp
jno
push
jp
in
jmp
das
fs
nop
notb
dec
mov
arpl
push
pop
inc
test
mov
mov
jecxz
xchg
push
aaa
pop
sahf
lock
mov
mov
dec
fildl
push
fcmovnb
in
test
out
pop
cmp
push
jle
shl
or
pop
addr16
cmpsb
stos
in
cmpsl
add
add
add
les
std
mov
adcb
out
add
repz
add
mov
iret
hlt
sub
sbb
xchg
out
push
and
call
adc
or
aam
jl
imul
ja
mov
pop
out
inc
cmp
mov
seta
mov
icebp
jecxz
sbb
subb
into
ret
pop
notl
xchg
data16
faddp
shll
cmpsl
popa
pop
jnp
imul
inc
ficompl
inc
add
aad
xlat
mov
ficoms
jp
add
jg
adc
push
pop
adc
xlat
sub
stos
ljmp
aam
or
push
add
inc
icebp
xchg
pop
sbb
xchg
xchg
leave
xchg
pop
jae
cwtl
adc
scas
cmp
jg
jb
mov
pusha
scas
xor
movsb
stos
scas
or
jmp
cmc
jg
mov
push
push
clc
pop
sbb
fdiv
xor
pop
decl
xor
adc
loope
xchg
mov
jmp
cmpsl
xlat
in
cmc
add
lds
call
outsb
and
mov
mov
fldt
cmc
into
sbb
loop
jb
push
or
inc
jmp
in
jnp
xor
cmpsl
fstps
rcrl
in
cmp
sub
scas
pop
sti
xor
dec
rorl
mov
lcall
mov
add
cmp
fsubrs
sub
mov
jge
hlt
adc
push
and
sarb
lcall
pop
fisubrs
sbb
cmp
ljmp
into
xor
fsubrs
test
popa
cmpsl
sbb
out
and
pop
cltd
ja
out
jno
sub
sbb
cmc
lock
xchg
sub
mov
sbb
inc
xchg
add
shrl
adc
stos
ja
xchg
fcoms
dec
cltd
mov
inc
pop
xlat
push
sub
movl
int3
mov
stc
popa
sti
fdivrs
pushf
insl
cmpl
sbb
add
daa
in
dec
fs
fisttps
lcall
pop
push
mov
sub
test
daa
sbb
xchg
jmp
ds
or
adc
lahf
fisubs
xchg
sbb
push
xchg
popa
inc
cmpsl
fcmovnbe
inc
dec
jo
gs
pushf
mov
mov
test
push
jmp
xor
mov
inc
pop
xor
fdivrs
and
adc
xchg
xor
push
icebp
ficoms
out
push
adcb
push
fs
insb
adc
hlt
mov
adc
cmpsb
xchg
testb
mov
jle
inc
add
adc
cmp
mov
popf
movsl
or
js
cmp
adc
adc
xchg
jo
sbb
fistpll
repnz
roll
or
sarl
dec
jl
mov
pop
add
xchg
mov
lds
insl
outsb
aaa
push
cltd
xchg
push
add
lock
cwtl
pusha
add
xchg
inc
mov
xor
add
mov
push
mov
push
adc
out
arpl
or
bound
leave
adc
pop
in
aas
pusha
dec
or
sub
orl
jb
inc
or
dec
shl
call
cltd
test
hlt
or
pop
xor
fldl
xor
xchg
xchg
cmp
rolb
testb
daa
idiv
out
mov
rclb
out
lds
pop
inc
daa
dec
cwtl
js
enter
mov
push
sub
shrl
aad
in
mov
mov
pushf
adcl
leave
pop
ret
and
dec
dec
sub
in
jg
xchg
cmp
div
jge
mov
and
fwait
jge
outsb
or
orl
jne
mov
shr
jo
inc
pop
insb
cli
and
gs
xor
ljmp
shufps
mov
outsl
xchg
scas
sbb
cs
fsubs
cwtl
mov
movsb
sub
fsubl
push
fsubs
test
xor
sahf
es
dec
popa
and
rol
hlt
sub
mov
mov
or
cmc
mov
mov
push
lds
out
xchg
mov
pop
outsl
rcrl
adc
lock
mov
dec
call
dec
fcmovnu
inc
int
aad
sub
ret
fcoml
addr16
and
mov
push
mov
jl
add
add
add
push
dec
shr
jg
push
mov
cli
xor
add
add
enter
pop
inc
mov
rorb
inc
icebp
dec
or
mov
shrb
xor
add
sbb
inc
stos
inc
inc
push
cmp
cmp
into
cmc
push
shll
mov
gs
pop
dec
xchg
add
sub
test
or
or
add
xchg
fdivl
xor
mov
xor
and
pop
leave
adc
fcmovbe
xlat
ljmp
scas
push
aas
xchg
and
pop
in
outsl
mov
mov
ficoml
adc
add
and
cmp
cmp
or
dec
sbbl
mov
fwait
add
ret
gs
das
sbb
jno
adc
mov
loopne
testl
dec
xor
lahf
movsl
sarl
gs
lcall
or
mov
lock
add
lods
adc
mov
and
cmp
mov
xchg
mov
pusha
pop
fwait
pop
jp
sbb
lods
test
shrl
pushf
pusha
sub
xor
xchg
adc
xor
int
pop
inc
pop
push
cltd
sbb
fisubrl
sbb
add
jg
nop
sahf
or
imul
int3
cwtl
mov
adc
pop
cmp
cmp
jnp
mov
push
pushf
mov
mov
test
pop
leave
xchg
fs
loope
lods
push
jne
cltd
cmp
movsl
fisubs
pop
ffreep
icebp
cs
pop
xlat
cmc
xchg
adc
fs
dec
add
lahf
out
ds
js
addl
in
mov
push
decb
dec
gs
and
dec
icebp
lods
jmp
ja
xor
dec
xchg
stos
lcall
xchg
dec
add
and
pop
push
xchg
xchg
ss
pop
xor
inc
lcall
xchg
int3
fldl
movsw
mov
dec
mov
outsb
pop
loop
clc
mov
popa
push
xchg
jl
fstpl
js
fst
jl
pop
test
sbb
lock
insl
push
fstp
xor
icebp
insb
jbe
inc
rorl
pop
movsb
mov
into
popa
xchg
adc
pop
repz
inc
jb
and
mov
push
int
adc
mov
pop
pop
mov
pop
dec
push
and
sub
enter
mov
jns
fists
cmpsb
loope
out
jne
and
sbb
and
mov
xchg
fwait
shll
outsl
loop
mov
cltd
shlb
insl
cmp
aas
sub
sbb
icebp
jno
cmp
mov
sub
outsb
add
or
jo
es
rol
jo
ret
mov
xchg
mov
hlt
in
jmp
sub
cwtl
and
or
jo
xor
int
dec
sahf
pop
pop
or
loopw
sub
add
mov
dec
mov
leave
hlt
mov
mov
notb
fwait
insb
inc
or
cld
mov
mov
pop
dec
aad
and
mov
push
xorb
mov
imul
ljmp
aas
rorb
push
aam
cmp
cmp
inc
idivb
jne
xchg
stc
jno
xor
shll
lock
nop
adc
jle,pn
mov
inc
pop
sbb
bound
imul
push
cld
mov
adc
in
dec
rclb
mov
pmaxsw
sbb
xchg
jl
sahf
jmp
loopne
je
sbb
xchg
mov
pop
jmp
mov
cli
push
cmc
rcrl
es
xlat
mov
test
mov
cmp
test
daa
jmp
insl
dec
and
in
loopne
idivl
pop
jo
test
jg
jnp
inc
loopne
mov
lcall
cmp
or
test
add
int3
jg
in
in
js
jg
jp
sbb
mov
mov
loopne
xor
gs
aam
popf
mov
test
mov
jae
push
inc
pop
fidivl
jae
mov
cli
add
fcmovb
push
aad
out
into
loop
or
movsl
pop
repz
pop
fistps
loope
push
jnp
push
or
sar
decl
xchg
sub
bound
xchg
faddl
stc
push
pop
add
add
add
movsl
push
movsl
shl
divl
andb
repz
add
subl
call
cmp
sub
push
cmp
cwtl
xorl
loopne
daa
daa
push
sbb
sbb
xlat
lock
or
and
sub
aaa
mov
hlt
adc
jge
fs
icebp
push
subl
loopne
stos
sarl
cmp
xchg
mov
mov
mov
jbe
push
push
mov
xor
fisubrs
cltd
jno
push
mov
nop
dec
rcrl
add
ret
add
dec
adc
mov
sub
fmuls
enter
out
pop
rcrl
jb
dec
mov
insl
movsb
icebp
call
or
shll
aam
jle
lock
lods
push
cmc
loopne
call
add
call
test
jl
or
shll
enter
loopne
dec
xor
lock
aad
mov
lret
jo
lret
int
test
add
leave
add
xor
jmp
das
dec
loopne
pop
pop
lods
dec
das
or
sbb
pushf
popf
sbb
lahf
mov
stos
xor
je
call
adc
xor
scas
ds
cmp
and
mov
cmp
jecxz
mov
mov
xor
mov
outsl
stc
int
popf
int3
movb
and
cmc
ret
mov
ficoml
outsl
lods
enter
mov
push
sub
pop
add
int3
pop
in
mull
iret
loopne
imul
mov
stc
pop
inc
mov
mov
insb
enter
ret
outsb
aad
rcll
ss
lret
cwtl
cmc
mov
dec
arpl
ss
sbb
mov
inc
lds
mov
leave
add
mov
cmp
adc
pop
insl
adc
insl
pushf
jge
mov
insl
add
les
adc
popa
or
xor
mov
jo
js
out
mov
inc
add
dec
data16
jne
lods
mov
push
jecxz
mov
dec
dec
daa
scas
xadd
pop
push
or
sti
jns
mov
adc
fcmovne
mov
das
cltd
inc
cwtl
rcll
push
lret
mov
mov
js
xchg
push
adc
xchg
sbb
test
mov
aad
leave
out
push
arpl
and
outsl
inc
aas
mov
cld
add
mov
adc
loopne
jnp
cmp
push
pop
or
mov
push
fildll
ds
inc
xlat
dec
rolb
shrb
sti
cmc
lcall
dec
mov
and
pop
push
xchg
cs
fldenv
cmp
cmp
jb
ret
mov
scas
xchg
stos
gs
iret
jb
fnsave
push
sbb
jbe
xchg
into
ret
in
adc
inc
rcrb
aam
pop
pop
cwtl
inc
jo
hlt
sti
or
pop
xlat
cmp
ja
jnp
xor
adc
shrb
in
push
fstpt
add
mov
dec
outsb
cld
jno
adc
push
shl
ret
xlat
mov
xchg
mov
xchg
cmp
cmpsb
sbb
ljmp
shrd
jno
sub
or
ficoms
jmp
lea
add
out
mov
xchg
sub
icebp
add
mov
fcoms
fimull
scas
mov
xchg
jo
inc
mov
cmpsl
out
or
pop
sub
pop
data16
xchg
push
out
addr16
loope
int
pop
or
mov
inc
sbb
add
mov
divb
repz
xchg
hlt
sarb
les
push
mov
xchg
int3
push
inc
jmp
add
mov
add
pop
dec
in
sub
push
push
jmp
inc
add
mov
cmp
adc
pop
xorb
or
inc
stos
out
vpshufhw
or
sti
aad
add
xchg
sub
lret
mov
rcrb
jbe
cmp
loop
xchg
or
jle
inc
jns
inc
push
push
push
inc
leave
mov
mov
shll
test
or
push
xchg
pop
jo
pop
sbb
mov
nop
or
dec
std
push
dec
dec
xor
sbb
in
rolb
xchg
shll
dec
repnz
sub
sti
test
ds
and
xor
or
jno
lea
repz
scas
orl
pop
dec
add
add
add
adcb
lret
insb
mov
std
add
or
jl
roll
mov
