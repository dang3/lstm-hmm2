push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
rorl
bound
fstpl
bound
sub
pop
add
pop
jne
movsl
sbb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
push
test
rcll
repnz
shlb
jae
xor
ds
xor
std
inc
push
inc
dec
sbb
out
ret
xchg
les
movsl
pop
aaa
jp
pop
push
cmc
mov
subb
push
fists
push
in
movsl
out
leave
add
das
mov
hlt
or
lds
in
mov
jne
sbb
xchg
xor
mov
pop
fmuls
sbb
add
sbb
enter
test
int
and
jno
faddl
cli
mov
test
pop
ds
xchg
sub
out
insl
jbe
popa
pop
fwait
xchg
jl
jp
aam
xchg
push
loope
jb
lds
sbb
jno
enter
push
mov
push
xor
mov
mov
pop
push
dec
cs
dec
test
sahf
loop
add
xchg
mov
fwait
add
clc
mov
into
pop
insb
test
loop
cmpsl
std
test
pop
jg
mov
jmp
jo
or
or
jp
mov
xchg
jmp
sub
cmp
mov
sub
jle
mov
xlat
div
jmp
aaa
mov
das
fdivs
call
add
sub
mov
scas
jne
fidivrs
std
enter
and
xchg
ror
ds
adc
fidivrl
loope
jns
popf
sub
int3
add
inc
sahf
mov
xchg
push
adc
mov
push
stos
test
ret
push
gs
insl
insl
dec
clc
jg
cmpsb
cmc
sbb
push
mov
pop
andb
xchg
xor
call
paddsb
xchg
xlat
sbb
mov
bound
sub
test
dec
mov
loope
je
popa
inc
add
push
adc
ficompl
push
jne
pop
mov
xor
push
outsb
fisubl
push
out
and
lds
push
mov
jge
pop
sub
fimull
sti
add
sub
dec
jo
jnp
pop
sti
ja
jbe
mov
jmp
leave
ds
es
filds
ja
mov
sbb
jno
jae
mov
leave
aam
clc
gs
aaa
dec
fmull
dec
cmp
mov
testb
dec
out
cwtl
xchg
in
sub
mov
sub
mov
lock
fidivl
mov
cmpsb
pop
cli
adc
adc
jnp
mov
ret
movsb
nop
test
shll
pop
mov
or
fmull
push
mov
repz
mov
lcall
push
mov
in
fmulp
popa
mov
pop
repnz
xchg
lods
xchg
inc
mov
cmpl
xchg
adc
push
push
pop
das
cltd
mov
mov
jg
mov
lret
ja
fdivp
mov
mov
xlat
aam
push
rorl
mov
inc
push
xchg
repnz
xor
dec
rcrl
insb
fstpl
je
lahf
mov
dec
out
xchg
mov
ja
xchg
fisttpll
das
xchg
jl
cmp
sbb
rcrl
aaa
shll
push
push
lcall
les
dec
or
mov
and
lret
test
ret
js
add
jmp
das
xchg
or
sbb
jbe
out
add
sub
pushf
inc
xchg
inc
andb
fisubrs
bound
mov
push
pop
or
js
cmp
jp
jns
shr
loop
gs
decb
cli
cmp
loop
pop
lods
aam
dec
xchg
jnp
shll
mov
stos
pop
dec
jbe
leave
or
cmc
sbb
cmp
push
sbb
or
cmp
xchg
or
fistpll
jecxz
jne
inc
addr16
sub
inc
pop
inc
pop
add
jecxz
lret
rol
push
inc
lea
mov
inc
addr16
sbb
leave
mov
push
cli
push
push
add
xchg
stos
repz
mov
push
sahf
sti
xchg
jbe
jecxz
and
cwtl
sti
push
in
jle
cmpsb
dec
in
aaa
push
lods
xor
int3
pop
or
mov
pop
cmpsb
repnz
shlb
fistps
test
ss
pop
dec
or
sub
pop
add
inc
cmp
nop
jbe
cmpsl
mov
sbb
add
fs
cld
add
dec
inc
and
mov
mov
movsb
and
push
cmpsb
dec
jl
out
push
mov
ret
fsubp
fsubr
arpl
out
sub
mov
mov
xor
sub
aam
mov
and
add
inc
cmc
in
enter
ror
outsl
xchg
add
inc
mov
push
js
sub
fnstenv
inc
and
pushw
sbb
cmpsl
mov
fdivrs
fwait
jl
push
subb
jns
mov
stc
mov
sub
inc
js
adc
sti
xor
insb
leave
xchg
and
rorl
or
call
mov
sbb
test
and
sub
out
adc
shrb
pusha
out
adc
mov
sbb
test
pop
xor
mov
mov
js
into
pop
fsubl
testb
push
adc
rcl
mov
and
jl
mov
cld
push
inc
mov
adc
popf
cmp
push
adc
pop
pop
ja
ss
xor
push
testb
xor
lcall
xchg
mov
fildl
mov
mov
rcrb
mov
xchg
inc
sbb
insb
test
inc
dec
dec
pop
mov
dec
cmp
push
ret
cld
fdivrs
jo
popa
jns
out
cmc
pusha
lahf
enter
incb
ret
cmp
scas
lea
jmp
pushf
inc
outsb
cli
js
imul
pop
xor
repz
mov
xor
mov
cltd
pop
dec
shlb
dec
and
inc
shrl
inc
push
inc
mov
outsl
mov
sti
and
jnp
ret
mov
sub
mov
and
xchg
cltd
and
sub
push
ret
sub
or
popl
cmp
leave
loope
jmp
movsb
inc
repz
sub
add
out
rcrl
sub
mov
loopne
jo
add
ret
push
inc
imul
mov
call
fisubrs
push
mov
cld
rcll
mov
xchg
add
outsb
xchg
jg
xor
das
lret
push
xchg
scas
mov
fs
adc
inc
and
xchg
in
std
int
rorb
adc
or
mul
bound
pusha
sbb
add
test
incb
stos
fidivrl
ftst
std
and
fiaddl
add
addr16
out
jge
scas
push
mov
pop
inc
push
and
push
pop
movsl
cmp
push
pop
scas
mov
xchg
ret
in
lret
out
rcrb
pop
xlat
or
push
nop
and
cmp
movsl
push
cmpsb
in
push
sarl
pop
add
xchg
mov
ja
in
das
jns
fstpl
cmc
jge
mov
xlat
and
sub
mov
repnz
ror
jb
and
mull
fistl
xchg
jae
sbb
mov
je
sarl
push
inc
jle
push
push
fldlg2
and
jbe
adcb
loope
mov
mov
cmpsl
lcall
or
out
into
outsl
aas
push
cs
pop
inc
insb
and
sub
mov
popa
or
mov
xchg
pusha
dec
inc
mov
or
mov
addr16
mov
pop
mov
mov
jle
sub
test
dec
add
test
and
mov
push
les
call
out
int
pusha
sbb
mov
xlat
xchg
mov
pop
jnp
loope
mov
mul
stc
dec
ljmp
fildll
out
test
imulb
push
xor
cmp
je
add
push
je
cmp
nop
into
xor
cld
sbb
stos
mull
cwtl
outsl
xchg
dec
mov
movsl
sbb
xchg
jge
imul
lret
cld
ljmp
cmc
add
xchg
movsl
cmp
pushf
mov
out
cli
mov
cmpsl
push
into
iret
loope
ret
or
fs
mov
je
jne
lds
sub
fld
lcall
lahf
movsl
inc
jne
fldl2t
or
pop
out
cld
pop
loopne
push
pushf
clc
mov
adc
int
sub
push
or
xor
add
hlt
push
inc
in
std
mov
stos
popf
or
movsl
pop
movb
jb
pop
push
pushf
arpl
fildll
rcrl
xlat
pop
mov
mov
dec
jne
inc
mov
in
loop
movsl
add
xchg
iret
inc
daa
inc
lods
icebp
imul
cld
test
aad
adc
jge
neg
lret
test
and
jo
jbe
loopne
push
sub
addr16
cmp
mov
test
cmp
xchg
jo
dec
pop
mov
pop
and
scas
add
aam
dec
cs
cli
pop
out
add
lret
sub
repz
cltd
ja
imul
divl
test
xchg
pop
stc
cwtl
inc
jb
cli
adc
or
mov
std
mov
test
sbb
or
xchg
loop
pop
pop
rcpss
mov
xchg
ret
add
lock
fnstcw
arpl
test
aaa
shrb
enter
pop
loope
shlb
or
lock
jmp
daa
cld
stc
and
cltd
mov
test
mov
pop
fnstsw
in
adc
roll
rolb
out
insb
mov
or
xchg
or
das
rcl
pop
test
sbb
pop
aad
cmp
in
pop
lods
xchg
test
jnp
push
dec
mov
mov
in
aas
fxch
out
xor
sub
add
ja
inc
das
std
xlat
sar
fisttps
sub
repnz
fwait
insb
ja
cmpl
dec
fs
aas
push
inc
loope
scas
cmpsb
idivl
mov
cs
sbb
nop
adc
das
mov
stos
out
push
data16
sti
mull
sbb
pop
ret
ja
pop
movsb
pop
dec
imul
outsl
aas
adc
lret
clc
dec
movsb
mov
stc
aaa
dec
arpl
xor
jge
loop
imul
and
sbb
mov
repz
cmp
sbb
pop
fdivrl
push
ret
lods
pop
inc
pop
sub
mov
hlt
add
jne
ljmp
lret
mov
push
push
out
mov
scas
xchg
pop
sbb
xchg
mov
arpl
insb
and
inc
or
cld
iret
int3
inc
pushf
cmp
stos
xchg
data16
add
jl
and
lea
and
mov
and
dec
lahf
les
sub
jmp
fwait
mov
and
pop
dec
sbb
out
pop
insb
sbb
pop
xchg
push
cli
or
mov
divb
vmptrld
mov
out
inc
xor
das
popa
clc
movsl
iret
adc
and
adc
loopne
add
xchg
jo
mov
repz
adc
mov
xor
fcmovnbe
cmc
xchg
mov
push
lcall
dec
rorb
fidivrs
cmp
pop
out
ret
std
ficompl
mov
andb
adc
jne
fsub
aad
stos
scas
xchg
pushf
adc
jg
lds
push
push
sbbb
mov
inc
xor
rcrb
cmpsl
cmp
sbb
cli
dec
mov
in
mov
sahf
mov
push
cltd
shl
arpl
test
inc
fst
addb
in
in
xor
xor
outsb
sub
stc
loopne
or
pop
push
push
push
xchg
mov
sbb
mov
sbb
pop
cmpsb
and
inc
jle
cmp
adc
cltd
aad
fsubrs
out
mov
and
das
int3
jo
jo
pop
ja
outsb
fs
adc
mov
mov
lds
adc
out
aad
ljmp
jp
pop
sbb
dec
push
hlt
jmp
pop
cs
add
xor
lock
xchg
dec
jl
adc
sbb
push
pop
fisubs
scas
shll
dec
pop
pop
jecxz
decb
push
lahf
es
fbld
add
cmp
call
push
mov
dec
dec
adc
pop
mov
adc
sub
shl
or
lahf
cmp
push
add
cmp
int3
fstps
adc
ljmp
in
sub
int
xchg
jl
daa
xchg
clc
xor
out
add
out
movsb
pop
push
xchg
or
fidivs
fwait
dec
js
adc
out
xor
das
call
add
addr16
test
pop
xchg
je
xchg
stc
adc
add
xchg
out
adc
fistpl
into
mov
or
dec
out
idivl
push
or
inc
mov
cmp
incl
sub
cltd
xor
jmp
loope
dec
movb
sahf
or
icebp
dec
mov
cwtl
in
movsl
ja
sbb
push
rorb
jns
bound
outsl
mov
sbb
xor
jb
pusha
and
jp
adc
xchg
inc
lods
adc
sub
hlt
push
jl
icebp
xchg
cmp
add
call
sti
xchg
insb
lret
fidivs
stc
jecxz
bound
ret
ja
push
dec
neg
test
cld
sbb
shl
add
insb
and
daa
and
or
sti
mov
adcl
enter
mov
pop
lock
insl
xchg
and
pop
cmp
mov
or
dec
and
adc
fildl
dec
and
cmp
loop
cs
ret
sub
fwait
dec
std
fnstenv
pop
mov
mov
sub
xor
adc
xchg
cmpsl
sti
jl
sub
add
cmp
push
lret
jmp
adc
mov
outsb
out
pop
sbb
adc
dec
xor
lea
js
cltd
xchg
outsl
inc
in
jmp
dec
mov
outsl
cmc
add
mov
inc
dec
fcompl
cmpsl
dec
cltd
push
pushf
call
xor
and
subl
xchg
mov
pop
add
dec
mov
push
add
mov
andl
adc
add
xchg
lret
scas
push
jae
pop
xchg
and
inc
push
mov
bound
fbld
arpl
pusha
testb
fcompl
fs
xchg
pop
adc
stos
test
test
add
push
xchg
insl
push
dec
mov
cli
pop
rcl
arpl
test
jecxz
aad
add
call
lock
mov
cmp
das
ja
pusha
shll
int
ret
in
popl
dec
cmp
adc
jns
pop
sar
pusha
push
push
mov
aas
xchg
out
fisubrs
nop
xlat
xchg
push
ret
pop
jno
jmp
mov
cmp
stos
mov
push
ret
int
movsl
cmp
cmp
sbb
aaa
push
repnz
cs
test
jo
mov
sub
out
jge
xchg
sbb
ljmp
mov
mov
shll
cli
pop
pop
mov
inc
test
cmp
stc
roll
sub
fs
xor
mov
xchg
mov
inc
js
mov
or
fst
fistps
jae
sbb
daa
test
add
sahf
adc
mov
cld
push
pushf
push
fcomip
iret
mov
jne
xchg
test
mov
js
imul
mov
push
pusha
rorb
loopne
cmp
jmp
xchg
pop
xchg
sub
out
sub
loopne
rcl
jmp
into
adc
outsl
push
inc
jbe
sub
xadd
clc
fistpll
sarl
mov
add
repnz
xchg
shll
mov
jg
icebp
out
push
inc
ja
xchg
shlb
std
lock
outsl
jg
into
xchg
mov
pop
icebp
pop
or
sub
icebp
jbe
je
aas
mov
clc
addr16
fistpl
xchg
sbb
mov
inc
pop
pop
aad
subl
in
lcall
lcall
xchg
add
cmp
add
shlb
ret
and
push
enter
repz
loop
pop
orb
inc
in
inc
cmp
cmp
adc
push
push
outsl
cli
and
mov
fmull
push
ljmp
icebp
testb
fs
sub
ja
hlt
or
aam
lea
mov
push
mov
fs
shl
in
xor
imul
pop
icebp
es
jmp
push
cmp
fiaddl
lcall
test
test
mov
lds
test
lea
ffree
jecxz
push
jl
pop
sub
in
push
mov
dec
xor
sub
mov
dec
cltd
pop
or
adc
jo
stos
aam
into
add
cmpsb
int
mov
hlt
mov
outsb
xchg
ficoms
test
xor
fcmovnbe
divl
jne
jnp
clc
xchg
ror
aam
data16
nop
push
lds
inc
outsl
clc
nop
data16
dec
sbb
inc
aad
sbb
cmc
shlb
mov
xor
inc
daa
jl
notb
dec
cmpsb
pop
mov
ret
xchg
cmp
stos
jp
dec
push
lods
xchg
and
or
pop
ds
out
sbb
inc
aas
test
jmp
xchg
mov
jbe
and
inc
pop
fs
dec
and
cmc
lock
xlat
xchg
bound
fwait
jne
jae
push
imul
or
mov
fld1
gs
xchg
xor
ja
dec
movsl
jg
inc
jae
loope
sub
loope
inc
or
xor
add
gs
mov
push
or
pushf
mov
xchg
pop
fs
inc
fistpll
mov
movsb
cmp
cmp
sub
push
mov
cmp
movsl
cld
cmp
pop
or
add
sahf
inc
repz
movsl
dec
cmp
sub
fists
xchg
cmp
mov
mov
ss
les
int3
scas
xchg
inc
jle
and
pop
inc
pop
inc
std
dec
cld
mov
inc
push
sub
popa
xchg
mov
scas
mov
and
or
arpl
mov
sub
xor
lret
shr
jns
jg
in
mov
in
mov
enter
ss
call
roll
add
xlat
xor
sub
add
and
cmp
adc
inc
mov
mov
pop
push
cltd
cmpsl
imul
sub
test
jne
fnstcw
pop
mov
adc
popa
and
rol
sub
pop
test
fbld
dec
push
cmpsb
aam
cmpl
sub
addr16
loope
not
inc
lret
sub
add
lods
and
pop
fs
jo
andb
or
pop
sub
fcmovnb
inc
push
int3
shll
mov
stos
dec
mov
insb
add
cld
pop
mov
aad
call
stc
out
mov
lds
xchg
sarl
shr
cmp
pop
sti
add
fcomip
scas
pop
push
imul
sbb
add
mov
cmp
and
decb
stos
jg
mov
jbe
ja
in
clc
mov
shll
cmp
stc
push
and
stc
es
shlb
cmpsl
stos
jae
jle
push
add
shlb
out
pop
ljmp
xchg
mov
push
sbb
ljmpw
xchg
pop
lock
push
inc
xchg
xchg
mov
loop
sbb
movl
fisubrs
outsl
incb
inc
nop
daa
mov
mov
testb
outsb
loope
movsb
push
pusha
fcomps
inc
outsl
hlt
push
nop
pop
ss
loop
xor
or
imul
pop
or
jg
adc
int
inc
mov
inc
les
cmpsl
imul
xor
mov
sub
adc
mov
test
sbb
mov
jb
mov
fbstp
aad
lahf
gs
stc
arpl
rcl
addl
add
shrl
test
adc
lcall
pop
mov
mov
outsb
in
call
adc
movsb
mov
lcall
stc
push
add
add
add
fidivrs
addr16
gs
aad
dec
in
aas
xchg
push
cmpsl
mov
sub
sahf
int
pop
out
jmp
les
enter
pop
pop
jbe
lcall
xor
addr16
mov
mov
mov
lods
jecxz
or
sar
scas
sbbb
jge
jl
xlat
push
mov
outsb
jge
or
sub
adc
mov
jbe
xor
mov
xchg
xor
mov
sub
sub
push
inc
aam
in
iret
xchg
and
push
pushf
gs
test
in
loopne
mov
fcomps
std
pop
ret
push
cmp
xchg
push
push
mov
pop
add
pushf
aas
pop
lods
inc
lret
dec
ret
jle
sub
int3
push
inc
push
sbb
dec
lds
add
or
add
sbb
std
movsb
adc
fnstsw
mov
mov
cmpsl
and
xor
notl
mov
mov
adc
lahf
mov
enter
shlb
daa
rclb
jmp
sahf
js
add
imul
push
js
xorb
ds
xchg
dec
mov
nop
in
xlat
insl
xchg
sahf
add
or
movsl
adc
inc
xor
sub
sbb
mov
scas
scas
or
push
adc
jecxz
lahf
je
rcr
inc
mov
call
scas
aad
mov
decl
mov
pushf
dec
outsl
push
lds
test
mov
icebp
push
das
inc
sub
mov
outsb
cwtl
shl
outsl
sahf
mov
mov
pop
or
adc
lds
dec
cmc
sub
std
cltd
shl
sarl
add
leave
fnstcw
xor
cmpsb
mov
push
mov
ret
dec
call
fnstcw
int3
enter
inc
cmp
xor
mov
aad
adc
push
pop
xchg
xchg
std
xor
hlt
outsl
add
jae
or
andl
xor
mov
fwait
or
xchg
jmp
jne
scas
push
imul
hlt
mov
xor
repnz
iret
mov
adcl
push
or
lret
push
xor
clc
test
xchg
adc
mov
out
xchg
mov
stos
dec
out
imul
push
cmp
push
out
push
push
push
pop
and
xchg
je
negl
pushf
mov
loopne
inc
mov
pop
cli
movsl
lea
out
adc
out
sbb
int
adc
xchg
aaa
leave
popa
pop
leave
and
stc
test
push
lds
ss
adc
mov
or
mov
in
push
out
ret
mov
pop
mov
jb
dec
jp
mov
lods
lods
or
gs
stos
lods
jb
pushf
cltd
ljmp
out
cmp
in
push
repz
scas
ljmp
inc
stos
stc
fsubs
sub
lret
in
push
xor
cmpl
lea
dec
push
mov
mov
sbb
mov
ret
scas
roll
out
xchg
push
sbb
jge
xor
xchg
xchg
mov
xor
push
aas
sbb
ds
es
pop
push
test
jbe
pop
lds
adc
aas
xlat
jne
cli
add
aad
stc
jb
sahf
bnd
iret
inc
faddl
adc
mov
adc
movsb
and
cmp
mov
ja
dec
jno
lods
or
cmp
mov
enter
repz
push
jb
imul
gs
jo
fwait
out
or
xor
jns
sbb
mov
movsb
add
lods
andb
out
cld
cmp
push
into
push
fstpl
mov
je
movb
jge
pushf
xchg
sub
sbbl
out
mov
das
jge
out
adc
inc
mov
adcb
arpl
dec
int
loop
scas
cwtl
pop
pushf
push
push
cld
adc
dec
addr16
mov
insb
or
add
inc
es
add
jo
pop
or
xor
jecxz
jns
pop
mov
add
popf
fldenv
dec
jae
hlt
loopne
mov
enter
add
adc
add
not
mov
call
insb
pop
test
xor
imul
adc
stc
stc
insl
adc
add
aas
cld
and
fsubrs
outsb
mov
daa
stc
outsb
fwait
icebp
pop
xchg
fsts
mov
sbb
out
cmp
movsb
cmp
call
mov
insb
ret
adc
ds
jecxz
aaa
or
mov
dec
popf
movsl
mov
cli
notb
das
addr16
repnz
insb
aam
add
push
insb
divl
in
xor
and
or
push
pop
mov
cmpsb
jno
std
shll
jle
cld
andl
mov
aas
loope
shl
mov
jb
sub
xor
cmp
stc
shlb
xchg
aad
jo
das
and
or
incb
into
aam
or
stc
aas
or
jl
xchg
loop
jl
test
bound
cwtl
movsb
adc
ljmp
jp
out
out
arpl
pusha
dec
shrl
int3
fmuls
dec
ret
popa
push
inc
add
add
test
mov
sub
outsb
pop
mov
mov
push
inc
pop
mov
xchg
cmc
sbb
pop
daa
test
sahf
cmp
sub
mov
sub
popa
pop
jmp
sbb
xchg
or
push
and
iret
shrb
in
mov
jmp
insl
mov
lahf
call
lods
test
movsb
adc
repnz
je
clc
ljmp
loope
ficoml
xor
negl
out
movsb
loopne
fcoml
jnp
cmp
es
mov
mov
icebp
pusha
test
sti
xchg
lret
xchg
in
test
mov
int3
repz
es
loop
add
adcb
or
push
loopne
hlt
les
fwait
rol
inc
add
push
sbb
jge
mov
or
scas
mov
pushf
sbb
mov
aaa
in
sbbl
in
inc
push
mov
xchg
in
pop
pop
pop
shll
push
inc
or
pop
inc
dec
mov
hlt
jp
jbe
out
xchg
pop
mov
push
mov
imul
rclb
fsubs
jne
outsb
pop
scas
ret
and
xchg
vpaddsb
jnp
sbb
pop
push
pop
push
jo
in
icebp
cmp
push
pushl
mov
mov
or
mov
fisubrs
mov
jmp
add
inc
mov
loopne
js
ret
faddl
jbe
outsl
test
adc
out
xchg
xor
icebp
clc
mov
in
inc
in
pop
sub
push
xor
pop
enter
clc
cmp
jne
push
sbb
ret
push
cmp
sbb
icebp
outsb
dec
or
faddl
mov
fildll
dec
out
aas
mov
test
cmp
out
bound
cmp
add
jmp
repz
cmp
push
addl
mov
scas
test
rcr
in
inc
fwait
add
out
sti
xchg
xor
pop
sbb
xchg
rcrl
push
in
xlat
or
add
or
jo
cmp
mov
add
dec
xchg
lcall
dec
mov
inc
inc
pop
mov
sub
std
loope
cmc
jg
out
and
call
gs
insb
pop
pop
dec
cmp
iret
sub
ss
shll
pop
dec
mov
or
mov
sub
enter
test
pop
fcompl
jbe
fcmovbe
or
pop
sub
xor
movsl
cli
sub
mov
leave
sbb
movsb
push
int3
jo
into
xor
cwtl
cmp
cld
ss
mov
movsb
out
stos
adc
mov
jns
jge
std
jae
mov
xchg
jno
imulb
aad
add
rolb
pop
add
pop
rcrl
mov
je
jae
mov
mov
add
shll
and
jmp
jns
ljmp
inc
pop
pop
mov
mov
add
imul
lods
aad
stos
lret
push
mov
sbb
dec
pusha
into
or
inc
scas
sbb
fwait
xchg
mov
pop
xchg
ja
and
stos
adc
mov
adc
lcall
lods
mov
adc
imul
sbb
les
jle
adc
inc
scas
sbb
sbb
sub
cmp
push
test
mov
sub
sarb
rorb
jg
add
addb
cmp
adc
xchg
stos
xchg
outsb
mov
jl
scas
xor
mov
mov
xlat
xor
test
scas
sahf
dec
sbb
subb
insb
xchg
dec
imul
testl
aam
aaa
insl
xchg
and
pop
pop
into
nop
xor
and
into
lcall
inc
inc
mov
scas
xchg
shlb
fs
movsl
adc
and
sbb
roll
outsl
or
cmp
jo
aam
lds
add
fdivl
jl
dec
and
or
iret
adc
mov
mov
aad
push
lods
mov
inc
pop
insl
lret
sarl
ss
xchg
sti
xlat
mov
repz
push
mov
mov
mov
daa
or
and
leave
lea
stc
or
cmp
je
dec
out
or
mov
mov
mov
lods
fisubrl
nop
adc
out
xor
and
in
std
imul
jg
mov
idiv
out
popa
cmpsl
leave
paddw
mov
mov
cmp
insb
sbb
cs
pop
inc
pop
mov
test
or
pop
daa
fistpl
inc
pop
lods
lcall
push
push
lcall
cmpsl
jp
mov
aad
faddl
jecxz
push
inc
xchg
push
fdivrl
xor
sbb
imul
mov
mov
sbb
xlat
cmpsl
or
imul
mov
aam
mov
pop
pusha
add
jns
push
sbb
stos
rclb
fsubrl
iret
xchg
movsl
jecxz
shrl
out
rolb
mov
loopne
in
lret
cwtl
cmp
bswap
jmp
mov
lods
or
cmpsl
repnz
lods
popf
inc
mov
stos
xchg
mov
jne
pusha
xchg
cmc
mov
pop
pushf
lods
lahf
and
mov
cmp
jl
pop
aaa
cmp
cmp
shr
js
inc
shll
fimuls
inc
pushf
lds
mov
jecxz
test
mov
rol
sub
mov
out
fisttpl
mov
es
aaa
push
jmp
pop
mov
rorb
mov
lret
loopne
popa
hlt
push
add
fstp
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fdivrl
mov
bound
pop
bound
movsbl
outsl
mov
mov
pop
xchg
jmp
stos
ljmp
add
dec
in
nop
addr16
rorl
arpl
xlat
mov
test
dec
test
int
mov
add
add
sub
in
je
and
dec
lock
stos
pop
mov
mov
dec
jno
cltd
and
push
out
pop
jle
mov
out
mov
movsl
out
movd
sub
hlt
cltd
stos
add
cltd
into
cltd
mov
push
hlt
ret
popa
enter
push
mov
icebp
xchg
fwait
or
sub
mov
filds
and
pop
cmp
cld
jbe
repz
adc
outsb
loop
sub
xchg
jb
xchg
aam
xor
in
in
push
pop
scas
xlat
dec
loope
mov
adc
push
sbb
add
loope
adc
data16
addb
je
jecxz
ss
xchg
pop
jbe
fcoms
cld
jmp
jecxz
icebp
cwtl
jle
cmpsl
pop
stc
pop
fstpl
xchg
or
xor
pop
mov
cld
ret
sbb
and
insl
push
sbb
clc
repnz
int3
popf
dec
lods
mov
push
adc
shrl
push
pop
xchg
jns
push
add
xchg
in
int
lahf
jp
dec
out
and
inc
or
sbb
rcrb
cmpb
gs
sbb
mov
jmp
mov
bound
push
pop
repz
cmovnp
mov
leave
jbe
mov
jmp
ror
mov
sarl
adc
cmp
adc
mov
xor
and
inc
or
iret
push
mov
push
popf
xor
lods
ljmp
xor
daa
xchg
pusha
jns
je
jl
push
inc
inc
out
mov
push
sub
push
inc
adc
adc
and
neg
dec
pop
mov
cmp
mov
inc
std
popf
jg
dec
in
dec
int
cmp
or
cmp
mov
ljmp
sub
stc
std
imul
cmp
push
mov
out
or
sbb
out
xor
enter
push
pmullw
mov
and
loopne
jg
xchg
shlb
jns
mov
or
fstpl
sub
int
js
sub
mov
sti
mov
ja
adc
jg
fwait
mov
test
test
push
in
inc
imul
loope
js
enter
mov
dec
leave
mov
out
arpl
lret
xchg
call
mov
inc
push
adcl
dec
cmp
lds
xor
xchg
sbbl
js
sahf
sbbb
and
fwait
xor
daa
or
adc
shrl
call
sbb
stos
cmp
add
sub
test
dec
jno
push
icebp
push
push
sub
testb
int3
inc
out
imul
out
ljmp
jg
sbb
enter
jl
popa
xchg
sbb
pop
rcrb
mov
and
add
loope
outsb
les
pushf
push
loopne
xlat
xor
xchg
pop
loope
or
enter
mov
jmp
testl
pusha
mov
or
dec
lods
cmpsl
jnp
ss
imul
and
pop
push
pushf
jle
push
cmpsl
in
jb
sbbb
push
icebp
jg
dec
movsl
xor
pop
add
cltd
sub
pusha
push
dec
push
pop
push
ljmp
or
mov
outsb
mov
jge
mov
leave
lds
rorb
aad
jne
popf
pop
xchg
aaa
jecxz
outsl
dec
shll
xlat
sbb
repnz
push
xchg
mov
mov
inc
inc
jl
mov
cwtl
lret
xchg
push
stc
pushf
mov
push
movsl
test
add
iret
lds
je
push
adc
xchg
dec
imul
lods
cmp
xor
pop
xchg
or
fstps
sbb
mov
push
mov
sub
shll
cmp
fwait
inc
pop
shlb
in
xchg
mov
push
daa
ret
mov
and
in
xor
xchg
mov
push
sahf
lret
das
lds
ds
clc
pop
ljmp
cs
push
mov
incl
sub
jbe
mov
sub
mov
cmp
push
adc
sbb
dec
ror
into
pop
mov
push
add
push
sbbb
fucomip
mov
jbe
in
or
cmp
inc
add
jb
push
pusha
jns
aad
imul
adc
sub
jbe
sub
adc
add
sti
push
int
ljmp
jnp
faddl
mov
jle
movsb
mov
leave
sub
in
inc
or
xor
in
jno
or
pushf
fmulp
out
inc
sub
add
jb
jo
js
jns
out
push
pop
rcl
incl
xchg
cli
pop
or
cmpsl
and
inc
add
ret
and
aaa
xchg
pushf
in
dec
loopne
mov
xchg
cmc
mov
mov
dec
sbb
inc
stc
cltd
mov
fwait
outsl
xor
fdivrp
mov
scas
xchg
movsl
dec
stos
fbstp
pop
in
ja
test
insb
cwtl
xchg
mov
xor
stos
push
daa
xor
dec
xchg
cmp
mov
mov
xchg
push
xor
mov
ret
int3
mov
jl
push
jl
xchg
mov
sbb
call
jle
mov
repz
mov
les
sbb
sti
sahf
dec
ss
clc
lret
sbb
les
rcll
pop
xchg
es
mov
xor
outsb
push
ds
adc
push
inc
push
adc
ja
rcll
push
idivb
rclb
jle
int3
popf
and
insl
push
rcrl
xchg
xor
popl
int
xchg
jmp
sbb
ret
jae
mov
mov
test
lcall
push
ficoms
and
lea
xchg
ret
fadd
sbb
or
add
add
movsl
and
insb
push
and
push
sbb
in
inc
pop
inc
lcall
xchg
stos
mov
les
hlt
adc
jp
xchg
mov
sbb
xchg
xchg
lret
or
adc
in
jns
sbb
mov
je
inc
jl
push
iret
adc
scas
idivl
cwtl
xchg
rolb
dec
ja
xor
lret
push
lahf
push
mov
arpl
jns
and
push
divb
cmp
jmp
fildl
mov
and
outsl
rorl
bnd
xchg
adc
mov
stc
push
xchg
pop
ds
outsl
arpl
fs
and
out
test
mov
loopne
mov
mov
push
xor
popf
cs
sub
subl
mov
pop
adcl
cs
and
loope
pop
mov
es
fadd
pop
cmp
imul
pop
cmp
scas
addb
addr16
cmpsl
pop
in
adc
sub
fistps
dec
enter
xchg
setns
fidivrl
in
sub
stc
inc
push
xor
pop
les
xor
iret
fidivrs
jmp
xor
pop
or
jnp
ret
inc
push
mov
sub
lret
das
test
xchg
shrb
lret
adc
mov
je
xchg
mov
cli
pop
aaa
imul
sbb
fwait
aam
cmp
scas
push
aam
cmc
mov
das
sbb
shlb
mov
mov
mov
xchg
out
ss
loop
cltd
adc
iret
sti
out
mov
movsb
xchg
lret
imul
sbb
or
mov
inc
mov
int
adc
dec
je
je
dec
lret
sbb
sahf
mulb
mov
leave
or
lods
mov
xchg
popa
les
pop
in
mov
push
shll
clc
xchg
push
cmp
fs
jl
push
mov
addr16
cmpb
ds
ja
inc
jne
xor
imul
adc
dec
push
xchg
pop
jmp
dec
jecxz
add
jmp
mov
aam
pop
int3
out
pop
or
cltd
mov
rol
mov
push
sbb
shlb
sbb
inc
daa
fnstenv
jbe
lea
sub
add
adc
mov
sbb
nop
mov
mov
sub
push
mov
movsb
or
mov
roll
imul
jbe
sti
dec
shll
loope
ljmp
mov
jmp
negl
in
mov
jle
mov
inc
sub
pushf
sub
movsl
je
inc
push
xrelease
sub
addb
mov
fcmovne
pop
mov
sbb
push
mov
mov
ss
dec
cmp
lcall
adc
pop
push
push
loopne
cmp
mov
cmpsl
jle
dec
mov
cmpsl
lret
sub
test
pop
mov
mov
sbbb
xchg
rcr
sbb
test
lahf
sahf
fwait
iret
daa
lods
mov
adc
xchg
and
pop
mov
or
xchg
inc
clc
adc
or
pop
pushf
fcoml
jl
jg
ja
mov
xlat
outsl
cmp
cmp
mov
pop
xor
sbb
mov
xor
cmp
xchg
enter
mov
mov
push
add
aaa
enter
ficoml
jmp
mov
cmpb
js
imul
jmp
mov
movsb
or
jecxz
jnp
mov
sub
or
addl
jge
jnp
mov
test
stos
fldt
rcrl
and
daa
mov
or
jbe
inc
push
pop
insl
adc
and
pusha
mov
fmull
fisubrl
and
fs
xchg
mov
sahf
xor
xor
js
xlat
lock
xor
in
sarb
ficoml
orl
pop
or
and
push
std
sbb
cmp
jmp
cwtl
js
inc
std
push
decb
out
pop
xchg
mov
add
repnz
push
cli
cmp
int
push
icebp
xor
ret
add
cli
stos
jae
inc
push
mov
fucomi
pushf
lock
add
pop
test
insb
js
add
jecxz
inc
hlt
jp
and
roll
or
push
mov
add
pop
jb
fdivl
mov
cmpsl
push
fistpll
aas
test
pop
xchg
or
scas
and
and
or
jge
or
ds
test
lea
jecxz
push
xlat
fisubrs
xor
add
sahf
loope
aas
or
cmp
push
popf
leave
negl
inc
adc
pop
xor
cmpsl
pop
fistl
sbb
pusha
ljmp
andb
xchg
add
roll
lcall
cmp
dec
jne
pop
inc
int
lock
jmp
aad
lahf
lock
jo
jae
je
int3
stc
ds
les
leave
ljmp
fs
fcmovu
add
iret
xchg
out
add
cmp
aam
push
fwait
ss
jae
jno
loopne
js
pop
mov
enter
push
xor
adc
mov
ret
loope
in
adc
cmp
lret
inc
call
mov
mov
sbb
aam
or
adcl
mov
cli
mov
mov
mov
mov
lret
xor
sub
mov
xor
dec
sahf
gs
xor
cmp
sti
ret
fnstenv
scas
das
dec
popf
lock
inc
and
nop
pop
adc
scas
mov
jne
jnp
in
cltd
movsl
fcom
fistps
jg
test
inc
leave
pushl
cmp
jbe
aam
insl
fadds
setbe
bound
mov
mov
and
stc
sbb
mov
faddl
pop
cmpsl
add
dec
cmp
mov
je
fsubl
pop
ss
and
decl
sbbl
sub
insb
call
ret
popl
lds
push
add
or
cltd
jbe
inc
xor
out
sbb
stos
in
sbb
add
fldl
jbe
aad
lock
xor
daa
in
test
leave
sbb
icebp
ja
clc
rolb
lahf
das
lods
adc
fnsave
out
xor
cli
inc
sub
dec
mov
repz
mov
scas
shlb
sub
and
add
mov
push
scas
or
repz
jne
xchg
insb
mov
jg
sbb
std
sub
out
in
add
and
fwait
stos
imul
jecxz
and
pop
and
sub
jle
or
push
ficompl
sbb
dec
fadd
cmpsl
pop
xor
jl
pop
cmp
cmpsl
lock
add
xor
in
mull
adc
and
das
push
hlt
hlt
jo
aad
scas
jno
pop
xor
and
ret
xchg
cmp
sub
jmp
pop
lret
inc
mov
ret
mov
push
sub
push
adc
or
in
jbe
xchg
xchg
xchg
and
stos
fstpl
rcll
mov
jno
in
jg
dec
xor
pushf
inc
dec
inc
xlat
sub
sarl
int
cli
push
and
inc
or
cmp
lahf
xchg
pop
cld
cmpsb
mov
sbb
sub
pushf
add
fisttpl
mov
nop
jb
loop
shlb
das
sbb
xor
scas
das
bound
loopne
pop
test
pop
inc
mov
adc
push
jbe
add
mov
ljmp
cld
pop
cs
mov
mov
lock
adc
mov
arpl
pop
mov
inc
jns
mov
or
in
xchg
push
jno
and
repz
sbb
mov
xchg
mov
mov
push
push
push
clc
pop
push
loop
sbb
mov
dec
hlt
jge
push
adc
mov
ret
popa
jne
fwait
js
rcrl
fmuls
jle
subl
sub
icebp
adc
jl
into
sbb
adc
inc
lock
bound
sub
cmp
or
jl
es
lods
notb
nop
mov
and
inc
sbb
into
add
cwtl
lods
lock
inc
mov
push
mov
jle
adc
sub
inc
jl
add
pop
sub
mov
imul
add
and
out
cmp
sub
xor
roll
ret
aam
into
jle
pushf
std
gs
dec
inc
rcr
bound
hlt
mov
xor
mov
cwtl
pusha
xlat
adc
jle
roll
imul
ljmp
mov
shr
dec
xor
cld
mov
adc
ficompl
outsl
mov
int
pushf
inc
insl
push
in
dec
loop
sub
iret
and
cli
xor
xchg
jl
cmc
enter
sar
insb
daa
push
jae
leave
fdivs
insl
push
jecxz
repnz
and
lds
cmp
fstpt
sub
mov
mov
cs
sbb
jno
fistps
aas
jmp
mov
in
inc
seto
out
jge
in
and
fcmovbe
sub
adc
jno
ss
or
add
out
loop
or
fmull
inc
jp
adc
aad
mov
fisubrl
sbb
insl
lods
fsubs
lea
popf
adc
mov
dec
test
add
pushf
mov
mov
mov
cli
adc
arpl
loopne
inc
pop
rcr
mov
daa
pop
push
mov
sub
push
loopne
xor
les
cmp
cmpsl
lods
std
jbe
clc
dec
aaa
sahf
sub
int3
xchg
shrb
lret
sbb
and
pop
push
push
add
dec
pop
leave
and
fs
xchg
lea
inc
sub
jno
and
in
movsl
fsubrs
cmp
xchg
addr16
push
lds
jne
arpl
inc
pop
pushf
xor
insl
jae
or
mov
xor
xor
jmp
cmp
scas
in
mov
inc
jmp
push
ficoml
out
cmpsb
pop
out
test
mov
shll
sbbb
jns
push
in
pusha
js
push
mov
push
inc
add
sarb
test
mov
cmp
nop
cli
xlat
xor
cmp
and
rorl
xor
mov
pop
sbb
ljmp
inc
sbb
jbe
test
push
and
sbb
lcall
mov
imul
sahf
clc
cltd
sti
and
mov
pusha
jmp
pop
push
std
in
in
mov
js
push
loopne
fwait
std
mov
mov
stc
inc
push
outsl
mov
xchg
dec
mov
test
neg
lods
ficoms
inc
push
sti
out
inc
repz
jbe
push
repz
mov
push
or
inc
adcb
sub
pop
cmp
adc
ss
dec
ss
pop
fs
dec
fildll
and
cmp
lods
mov
and
sub
fld
cmp
inc
lea
test
ljmp
push
movsl
mov
add
xchg
push
xor
xor
dec
cmp
popf
clc
fisubl
fs
push
mov
out
cmpsb
dec
fxam
mov
pop
push
popf
test
test
js
inc
iret
dec
mov
jmp
and
mov
in
int
fdiv
test
nop
stos
pop
scas
sti
loope
jne
xchg
xor
outsb
xlat
clc
loope
arpl
sub
xlat
push
sarl
add
shrl
mov
outsb
or
imul
in
test
push
nop
mov
mov
int
push
les
adc
sub
xchg
dec
fsubrs
push
in
mov
sub
xor
xor
xor
ss
add
xchg
pop
pop
bound
push
aas
mov
lcall
sbb
sbb
imul
scas
je
jmp
das
pop
adc
pop
ret
mov
icebp
cltd
and
gs
pop
ds
cwtl
xor
cmp
xchg
jle
fsubrl
push
mov
jne
dec
add
lcall
jbe
cmp
jbe
fldcw
add
mov
sti
div
jge
inc
cltd
out
lods
mov
and
in
scas
pop
mov
pop
jg
cmpsl
push
push
shll
mov
xor
xor
jl
leave
lret
mov
lcall
test
pop
ds
cli
mov
cltd
sti
jl
shl
mov
push
xor
icebp
inc
fucomi
out
imul
mov
mov
aas
cmpsl
in
clc
push
jp
adc
test
loope
ds
lea
mov
es
add
aam
ds
dec
pop
sahf
stc
lods
inc
gs
test
sub
insl
xor
cmp
inc
dec
fnsetpm(287
sub
xchg
test
mov
mov
iret
pop
dec
mov
sbb
in
adc
rcrl
jmp
push
andl
mov
movl
sub
inc
push
std
cmpsb
scas
push
pop
int
insl
lret
iret
outsl
xchg
mov
jecxz
mov
lahf
xor
push
jmp
aas
sub
push
rcrb
adc
jg
cs
in
iret
mov
pop
ds
push
mov
scas
push
cwtl
enter
mov
rorb
cmp
pop
rorl
pop
jp
ror
inc
and
xchg
xchg
sub
in
int
mov
add
popa
push
ljmp
test
xchg
inc
xchg
xchg
cs
data16
pop
ret
fwait
popa
std
fdivs
data16
fs
pop
fcomps
ljmp
gs
or
mov
lcall
adc
cmp
outsb
jmp
arpl
adc
int
lods
or
sbb
movsl
jmp
or
xor
test
add
mov
jae
mov
push
aaa
dec
adc
clc
or
repz
je
xor
and
ret
fs
lods
sbbb
jb
xorl
nop
outsb
sti
add
lock
jg
insl
and
adc
push
sahf
xor
cmc
repnz
sub
dec
jmp
ss
and
xchg
xor
orb
mov
sti
adc
ja
insb
adc
push
jnp
sti
lock
and
test
fstl
cld
inc
hlt
int
add
rcl
aas
pop
ljmp
push
cs
dec
movsl
cltd
testb
sarl
cmp
shlb
out
mov
push
dec
shl
test
mov
cld
push
or
fmuls
insl
mov
mov
add
scas
mov
int3
es
stc
mov
clc
mov
dec
fcoml
xchg
ds
inc
mov
lret
pop
mov
scas
mov
jle
subl
clc
popf
shr
daa
jo
adc
sub
adc
nop
mov
mov
add
stos
or
outsb
inc
repz
cmp
push
jns
dec
out
mov
mov
pop
mov
jg
out
cs
jo
cmpsl
mov
add
invd
cmp
sarb
mov
mov
repnz
mov
or
mov
test
ret
mul
pop
fisttpl
cltd
mov
fwait
repz
adc
sbbb
sbb
loope
lods
mov
fdivrs
or
jnp
outsl
jnp
aaa
sub
rclb
xor
xor
inc
xchg
rcll
xor
pop
fisubrl
jae
aad
inc
inc
dec
inc
push
ret
mov
mov
inc
mov
fildl
jno
in
dec
pop
mov
pop
add
xchg
aas
sti
mov
fildl
mov
dec
ret
gs
mov
fwait
repz
cmp
xchg
push
repz
pop
cld
xor
or
rcl
push
call
scas
adc
leave
pop
pop
sbb
xchg
cmp
pop
test
repz
add
jnp
cmp
nop
aaa
in
ss
inc
aas
imul
mov
sub
adc
out
xchg
mov
xchg
shll
das
jle
sbb
lock
pop
aaa
fmul
xor
mov
sti
lea
fists
pop
push
or
lea
jge
cmp
sti
lock
inc
push
xor
jg
fstl
mov
mov
bound
pop
dec
mov
filds
fldt
adc
addr16
into
mov
mov
sbb
mov
xor
arpl
ljmp
insl
mov
outsl
rep
pop
pop
ss
clc
fdivrs
std
sahf
outsl
in
mov
pusha
pusha
xchg
sbb
jl
mov
add
inc
jo
or
push
xchg
inc
jmp
loopne
movsl
scas
cld
popa
clc
or
sarb
jge
xlat
jmp
jbe
xor
adc
push
sub
cmp
mov
dec
inc
jae
mov
ljmp
hlt
fs
pop
add
test
shlb
push
xor
out
inc
setae
mov
jmp
cmc
stc
sbb
nop
add
jge
cmpsl
xchg
lods
adc
imul
inc
cmp
addr16
dec
test
xchg
sub
and
aam
dec
iret
push
jnp
in
rorb
outsl
loope
js
xor
icebp
xchg
jmp
in
pop
mov
inc
scas
sbbl
hlt
sahf
fwait
and
add
into
xor
add
imull
jge
sbbl
jp
pop
ds
mov
or
xchg
jne
adc
dec
push
sbb
mov
push
mov
push
icebp
jp
ffreep
push
std
lods
jle
and
loopne
ljmp
pop
and
cmp
in
inc
or
rolb
daa
addr16
fnstenv
lcall
test
sbb
push
mov
push
pop
xchg
push
daa
add
popa
xchg
mov
jo
jp
inc
mov
stc
testl
and
or
mov
test
in
cmp
mov
push
in
stos
jbe
or
mov
cmp
idivb
mov
lcall
gs
ljmp
sub
dec
inc
ss
repz
lret
cmpsb
stos
mov
stc
pop
pop
push
mov
pop
add
test
sub
imul
cmp
loop
dec
imul
push
popf
aas
insl
es
pop
xor
cmp
pusha
cli
lahf
dec
in
mov
jge
xor
rorl
cmpsb
jg
inc
rclb
mov
sbb
pop
and
mov
outsb
popf
fwait
les
push
cmp
xlat
push
repnz
push
ds
sub
mov
add
js
inc
adc
jno
xchg
mov
mov
ljmp
adc
dec
add
and
fdivl
inc
sub
fucomp
outsb
jo
loopne
or
shll
push
lcall
insl
fbstp
jp
push
mov
je
movsb
jge
dec
cmp
sbb
push
mov
jns
iret
roll
fidivrl
mov
test
mov
repnz
hlt
sub
sbb
bound
cmpsb
popa
hlt
testb
aaa
push
xor
mov
fwait
mov
dec
int3
jl
in
aaa
hlt
sub
dec
lea
sub
mov
jae
sub
mov
xchg
jmp
mov
mov
in
incb
clc
ret
jne
mov
push
push
out
gs
sbb
shrb
fsincos
cmpsb
and
icebp
mov
pop
addr16
pop
jae
gs
addr16
jl
std
outsb
pop
mov
or
out
test
adc
jecxz
leave
push
mov
je
adc
es
sbb
out
in
dec
mov
dec
mov
inc
test
flds
lea
push
sbb
stos
int
jne
cld
outsl
mov
inc
leave
sbb
rorl
pop
xor
add
mov
sahf
add
in
fnstcw
and
jmp
icebp
bound
orl
push
scas
sti
add
ljmp
aaa
jle
push
dec
addr16
cwtl
testl
imul
cmc
dec
out
fs
dec
sub
repz
add
push
sbb
mov
pop
lods
inc
and
ret
pusha
cmpsl
es
mov
gs
or
push
loopne
jb
enter
dec
jp
addr16
hlt
aas
popa
into
in
aam
sbb
mov
and
sub
and
jg
out
jnp
fbld
jl
dec
xchg
fimull
xchg
cmp
mov
notl
add
pop
and
dec
in
sahf
test
dec
int3
or
mov
daa
inc
pop
test
xor
scas
nop
dec
pusha
in
add
ret
adc
sete
mov
xchg
jge
sub
imul
sub
call
mov
ret
adc
cmp
call
and
xchg
jg
cltd
lods
cvtps2pd
adc
pop
jecxz
cwtl
mov
jb
hlt
mov
imulb
inc
or
cmp
cwtl
daa
lock
insl
pusha
inc
push
jecxz
mov
fimull
add
sub
sbb
testl
mov
cmp
xchg
xchg
mov
rorl
movsb
sub
inc
fadds
pop
leavew
mov
mov
jnp
push
adc
into
add
ret
add
pop
lret
xchg
rorl
cltd
mov
cmc
cmp
mov
push
bound
outsl
out
and
pop
pop
mov
fsubr
imul
repz
push
je
mov
fdiv
mov
shrl
pop
sub
lcall
scas
scas
dec
je
inc
xlat
mov
mov
xlat
sbb
xchg
mov
fldt
inc
cli
cmc
in
jle
cmc
aaa
dec
jne
dec
sbb
sarl
test
lods
call
add
mov
inc
pop
mov
xchg
aad
popf
loopne
js
out
xchg
cld
icebp
clc
add
cld
add
pop
jne
in
nop
or
aaa
in
adc
add
mov
in
mov
in
push
cmc
sub
stos
lret
xor
mov
mov
and
jo
rcrb
xchg
sbb
lahf
push
negl
mov
mov
mov
filds
add
sub
xchg
sbb
sub
insl
inc
lds
lods
mov
fldcw
test
adc
not
jno
pop
std
fildl
sub
lcall
sbb
cs
xchg
jl
mov
mov
in
aad
xor
sbbl
or
inc
out
notl
ret
fstpl
add
aaa
fcomp
push
jnp
jae
cmp
pop
sar
adc
pop
popf
sbb
std
cltd
mov
imul
sub
and
fcomps
pop
mov
aam
ljmp
aaa
xchg
repnz
xchg
hlt
fwait
jg
scas
and
jb
jnp
into
mov
jmp
in
stos
push
push
xor
xchg
stc
es
dec
sbb
or
dec
add
cmpsb
jmp
or
cmpxchg
pop
push
lret
clc
popf
std
xlat
adcb
divb
jmp
adc
inc
pusha
insb
or
roll
sbb
repz
push
jge
jp
mov
xchg
divb
jno
repnz
fwait
jg
lret
insb
insb
pop
jmp
adcl
je
and
jae
mov
add
cwtl
insb
out
test
xchg
call
enter
pusha
fdivs
inc
test
dec
in
movsb
xchg
mov
data16
loop
sub
cltd
lods
xchg
ss
jne
xor
ja
push
testb
fnstsw
fbstp
sti
insl
xchg
iret
jae
mov
pop
jnp
jmp
stos
or
pop
imul
pop
mov
ljmp
aaa
mov
movsb
das
pop
add
jl
mov
loope
aaa
outsl
push
or
inc
mov
xchg
inc
imul
and
adc
pusha
xchg
fwait
pop
jns
loope,pt
popa
in
lods
loopne
mov
ss
cmc
scas
cmp
xchg
push
xchg
adc
stos
sub
cmp
cli
push
mov
int3
mov
sbb
pop
sbb
js
push
es
stos
jb
lods
sahf
int
jae
xor
scas
pop
pop
xchg
xor
sub
xor
test
fcmovnb
fistpl
test
pop
sbb
negb
mov
sbb
xor
stc
movsb
ljmp
add
add
in
outsb
pop
xchg
and
mov
jo
pop
out
or
aas
ret
pop
pop
xor
js
cmp
jb
mov
loopne
lahf
sub
rcll
je
and
dec
push
mov
lods
add
test
sub
pop
aad
lret
test
inc
cmp
sub
mov
jecxz
xor
in
iret
push
out
sti
pop
aam
popf
iret
enter
ss
pop
xchg
xchg
push
fsubs
mov
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
or
bound
pop
bound
scas
and
stos
xlat
push
jns
les
cmp
inc
clc
and
rcrb
cmp
pusha
pop
push
jecxz
out
push
ja
jno
dec
add
xchg
jb
xchg
aaa
sahf
lock
lret
push
lods
xor
mov
jno
into
mov
fdivs
mov
mov
push
push
dec
ljmp
pop
adc
in
sub
mov
daa
cmp
xchg
ret
imul
or
loope
xchg
and
test
movsl
inc
sbbl
fcom
int
ss
inc
movsb
jg
pop
xchg
mov
icebp
shlb
cwtl
jae
in
mov
es
rolb
pop
data16
hlt
pop
mov
mov
pop
mov
cmpsb
mov
int
lcall
push
mov
nop
pop
movsl
fldt
mov
pop
loope
lock
arpl
jbe
std
in
daa
movsb
inc
xor
imul
dec
pop
and
movsb
fiadds
xchg
lods
pop
ret
or
rcrb
inc
std
mov
jge
add
push
mov
mov
push
rolb
pop
add
lahf
mov
xor
push
fnstcw
aaa
pusha
fists
orl
xor
je
jno
lahf
int
ljmp
insl
iret
cmp
enter
sub
xor
or
fcmovb
cmpsl
iret
std
jbe
and
std
inc
push
jno
out
dec
mov
rol
add
jno
lock
andl
push
pop
nop
test
mov
sbb
jg
dec
out
sbb
xlat
sbb
push
sub
and
dec
movsl
std
add
repz
xchg
lods
les
nop
xor
inc
xchg
pop
inc
and
les
mov
loop
sarb
push
stc
iret
pop
ja
fwait
adc
outsb
pop
lock
push
pop
pop
cwtl
mov
pop
sub
cwtl
adc
out
sti
leave
sub
arpl
push
or
push
sbb
daa
pop
insb
add
adc
cmpsl
add
lods
xor
mov
arpl
jbe
mov
out
mov
or
dec
mov
mov
xchg
mov
dec
xlat
inc
dec
inc
lret
pop
int3
dec
test
cmp
mov
lock
cmpsb
lock
and
js
ja
add
jp
adc
out
or
adc
xchg
js
arpl
out
xchg
cmp
mov
test
mov
out
stos
mov
test
rorl
insl
cmp
pop
inc
mov
push
cmpsb
sub
scas
sub
adc
xorl
and
sbb
lea
je
and
xchg
and
inc
jmp
aas
inc
mov
xor
sub
pusha
hlt
cmp
xchg
inc
sub
cmp
push
xor
mov
mov
add
add
popf
and
repz
or
ret
xor
outsl
aad
stos
inc
les
jnp
and
test
int3
xchg
scas
push
xor
fnstsw
mov
int
pminsw
cld
inc
lods
pop
sbb
sarb
sbb
mov
fisubs
pop
cmc
mov
lea
jl
cwtl
dec
mov
push
and
xchg
xrelease
leave
out
ds
loope
movsb
or
insl
movsl
insl
cmpsl
pop
adc
daa
mov
xchg
pushf
push
jae
sub
lret
jl
add
push
xor
out
aad
pusha
add
das
iret
sub
cmpsl
pop
mov
cld
xchg
add
pop
in
cmp
pop
push
outsl
lock
mov
insl
push
and
jbe
or
add
lret
rol
mov
mov
and
and
cld
rclb
cwtl
add
xor
jmp
or
adc
out
lock
arpl
imul
mov
adc
adc
les
sbb
cmp
sub
addr16
add
push
mov
hlt
dec
fwait
rorb
leave
mov
movsb
pop
jns
fists
add
in
stos
mov
shlb
xor
mov
in
mov
out
ljmp
mov
mov
scas
or
insb
loope
test
jecxz
faddl
inc
mov
popa
outsl
aam
or
js
or
ljmp
es
push
and
xchg
cmpsb
lock
daa
sub
and
imul
loope
mov
shll
lahf
pop
loop
inc
int
orb
subb
inc
or
cmpsb
psadbw
mov
insl
sbb
and
cltd
div
repnz
into
inc
fsubrl
sbb
nop
mov
hlt
rcll
call
pop
mov
popa
push
jno
sbb
pop
cmp
xchg
add
pop
inc
insl
sti
ret
gs
andb
inc
daa
sahf
sbb
iret
out
std
adc
flds
dec
adc
sbb
cmpsl
xchg
es
push
jmp
mov
mul
out
xor
jecxz
call
mov
out
push
xchg
pushf
aam
int3
jmp
xor
andb
pusha
inc
xchg
icebp
dec
test
das
and
ljmp
mov
pop
xchg
sub
scas
ret
shrl
jmp
add
pop
sub
movsl
je
mov
dec
pop
cltd
xor
jbe
insl
push
insb
sarb
pop
sbb
mov
pop
mov
cmp
xchg
jo
xor
pop
es
cld
and
sbb
mov
lock
and
mov
mov
sbb
popa
andb
jnp
lahf
jmp
mov
icebp
sub
cmc
lret
aaa
and
out
mov
sub
stos
sbb
bound
pop
mov
inc
jae
jno
cltd
orb
dec
mov
cmc
bound
cmp
popa
lds
xchg
xor
jo
add
adc
add
mov
negl
subl
inc
sahf
idiv
xchg
insb
rorb
add
sbb
aas
jg
fstpt
nop
jo
add
mov
adc
dec
lret
fbstp
dec
pop
popf
rcll
mov
in
cltd
hlt
xor
popf
pop
pop
xor
jmp
mov
mov
addr16
xchg
jmp
int
ljmp
subb
sub
sbb
stc
outsb
jle
ds
cmc
in
outsl
es
dec
cli
test
call
pop
movsb
jbe
fidivl
inc
inc
aaa
jb
and
lcall
xchg
popa
jle
test
in
mov
mov
jecxz
sbb
imul
fbstp
ljmp
xchg
lods
cld
fcmove
or
mov
ljmp
daa
inc
imul
cmp
imul
insb
mov
cmp
pop
pop
into
add
dec
dec
pop
into
push
jo
hlt
and
repz
mov
fld
xor
mov
mov
xchg
cmp
xchg
cld
mov
cmpl
cmp
jl
mov
cmp
sub
xor
pop
push
or
xor
es
sub
and
and
call
pop
cmpsb
ret
push
sti
popa
dec
dec
icebp
jmp
push
das
mov
jne
dec
sub
push
rcrb
push
and
xchg
and
out
mov
mov
ret
lds
hlt
xchg
add
mov
adc
das
mov
xchg
in
je
inc
test
popa
arpl
lret
pop
add
pop
fsubrl
xchg
fisttpll
cltd
in
in
pushf
ss
push
xchg
stos
adc
sub
or
pop
mov
xchg
sbb
cmp
jae
or
test
ljmp
das
add
push
in
in
xchg
dec
ds
and
fldl
js
loop
jecxz
jg
sub
ja
test
in
push
mov
mov
pop
sahf
icebp
jno
xchg
xchg
mov
gs
stos
out
stos
int
ret
pop
leave
xchg
int3
xor
std
aas
bswap
inc
jnp
cli
orb
lods
scas
loop
cmp
mov
sahf
mov
or
out
jge
insl
aaa
xchg
sub
and
mov
ljmp
int3
lods
mov
xchg
lock
mov
cld
dec
push
or
cmp
lds
adc
sub
rcl
cmp
xorb
loop
loopne
sti
cmpsl
inc
inc
dec
out
xor
push
xor
jno
or
pop
hlt
ljmp
push
sbb
jmp
mov
iret
pushf
xor
sub
nop
stos
in
push
stos
cwtl
xlat
mov
daa
shl
push
inc
jns
adc
cmp
bound
pop
jnp
aam
sbb
shll
sub
and
ja
and
push
pop
pop
idiv
icebp
pop
ret
shrl
sbb
in
call
popa
aad
mov
sbb
xchg
mov
popf
les
add
rcrb
inc
daa
xor
dec
push
or
dec
cmp
adc
xchg
ljmp
mov
les
lea
ja
clc
mov
jle
or
push
aad
jmp
leave
movsb
mov
aad
cmpsl
cmp
scas
jg
cmp
and
inc
ds
imul
mov
adc
es
push
rcrb
scas
xchg
jl
cmp
nop
mov
stc
cltd
add
dec
pop
mov
je
ss
aam
out
mov
data16
mov
inc
dec
pop
and
fidivl
ret
lods
and
out
and
mov
testl
mov
and
push
adc
mov
mov
xchg
and
dec
sub
jo
je
cltd
into
rcrl
push
xchg
loop
clc
fists
push
jmp
adc
movsb
aad
sarl
mov
pop
and
pop
fnstenv
push
sbb
rorl
testl
or
movsb
jecxz
or
sub
push
add
mov
cli
jbe
pand
movsb
push
insb
xchg
ja
pop
addr16
bt
outsl
xchg
xchg
fildl
testb
dec
cwtl
loopne
lock
subl
mov
push
in
ret
jbe
jbe
pop
mov
dec
sbb
jmp
xchg
movsb
pop
addr16
adc
pop
aas
sbb
out
mov
sbb
int
lahf
fadds
push
ss
sbb
sub
data16
cmp
lcall
lock
lods
out
pop
mov
sub
sub
jmp
sbb
fcoml
mov
sbb
cltd
pusha
test
pop
lds
mov
jmp
int
add
push
or
lea
imul
cmpsb
clc
movb
cmpsl
jl
cmp
ja
sbb
in
rclb
jle
dec
ret
inc
decl
outsl
or
sbb
pop
bound
call
cwtl
jecxz
in
nop
cmp
idivb
pop
dec
add
repnz
mov
jnp
jb
jnp
xchg
push
mov
rclb
rorb
out
cld
pop
mov
jl
pop
push
call
mov
insb
jle
push
stc
or
loopne
idivl
sub
and
mov
movsb
xchg
stos
mov
outsb
push
filds
jmp
in
xor
pusha
imul
cwtl
pop
pshufw
inc
ds
add
pop
stos
mov
xchg
aaa
pop
mov
arpl
push
lret
dec
sub
xor
popa
sub
mov
jne
push
adc
dec
cmc
jp
iret
dec
xchg
push
xor
cmp
nop
pop
cmp
adc
lret
ret
mov
cmpsb
imul
rorb
or
insb
jle
mov
mov
pushl
mov
arpl
cmp
jno
nop
push
push
cwtl
mov
sbb
mov
mov
ror
xor
add
xlat
cli
lods
jno
ja
enter
xchg
repnz
fsubrs
push
or
lcall
jg
and
push
jle
sti
fmul
fwait
xlat
andnps
mov
cmp
dec
insb
cltd
sbb
fsubl
cmp
or
dec
mov
mov
lcall
push
sbb
inc
or
and
out
xlat
add
adc
inc
stos
xchg
xlat
xlat
inc
push
xchg
mov
inc
mov
inc
adc
jno
cs
sbbl
push
cmc
adc
mov
out
pushf
loopne
sub
cmp
cmp
mov
or
aad
mov
in
into
lcall
inc
cmp
jo
outsl
push
mov
mov
cltd
jmp
mov
cmpsb
xlat
push
loopne
mov
xchg
dec
or
scas
or
xorb
insb
sbb
lea
mov
and
mov
addr16
in
movsb
in
xchg
scas
xlat
lods
push
stos
mov
inc
call
aas
fadds
push
adc
lcall
and
push
jb
std
scas
cmp
add
xor
pop
xchg
adc
dec
movsl
mov
push
push
pop
push
adcl
std
leave
lock
dec
repz
dec
and
adc
and
cmp
add
punpckldq
int
fmull
dec
jne
pushf
sahf
or
jns
mov
std
rsm
ret
mov
lock
scas
and
cmp
pop
ret
add
out
dec
lock
cmpsb
cli
outsl
jmp
fwait
dec
rcr
insb
rcll
inc
fdivrl
iret
jne
or
xchg
xor
data16
scas
mov
push
mov
or
pusha
mul
filds
hlt
jnp
pop
cld
icebp
xor
icebp
sub
fmull
cmp
insb
mov
xor
push
pop
imul
lock
lods
pushf
or
stos
sub
mov
lods
es
pop
sbb
loop
fistpl
cmp
movsb
leave
xchg
std
shll
movsl
stc
inc
mov
in
xchg
mov
and
xor
testb
xlat
xchg
cmp
add
lea
mov
cmp
testl
dec
int3
push
pop
inc
jbe
lock
cs
cmpsl
pushw
int
pop
push
pminub
into
mov
pop
inc
mov
pop
into
cld
xor
fwait
divl
sbb
sbb
cmp
lea
jns
scas
xchg
inc
aad
xchg
into
dec
mov
push
add
mov
cltd
inc
dec
xchg
testb
xor
jno
push
xchg
scas
mov
paddd
int3
mov
pop
mov
push
cli
mov
inc
adc
jb
je
loope
std
fstl
dec
scas
add
mov
mov
add
push
repnz
nop
cltd
push
clc
push
mov
sbb
bound
mov
mov
pop
into
adc
cs
jmp
mov
xchg
lods
xor
or
jb
mov
mov
mov
jo
push
lods
mov
inc
push
cmp
add
rorb
adc
mov
leave
add
movsl
xchg
movsb
dec
or
outsl
vpunpckhqdq
stos
sub
adc
sub
sub
mov
loopne
xorb
pusha
mov
call
sub
inc
and
adc
xchg
aam
div
rdmsr
dec
lret
mov
imul
sbbb
xor
data16
js
push
stos
add
dec
jecxz
sar
in
mov
popa
push
fsubrs
js
aaa
or
sub
dec
xchg
jle
push
mov
outsb
and
rcl
mov
mov
dec
xchg
loope
notb
xor
mov
mov
mov
sbb
mov
mov
repnz
sbb
mov
sti
adc
cmp
lds
out
cmc
imul
fsts
or
mov
sbb
lods
sub
cld
aam
lea
add
cmp
enter
jle
adc
cli
mov
mov
mov
sbb
lahf
jmp
xchg
out
cmp
js
bound
inc
xor
add
mov
or
and
clc
add
sub
jg
mov
gs
xor
leave
jns
push
divb
push
daa
ret
sub
les
into
bound
js
xor
inc
hlt
jo
mov
into
leave
imull
mov
scas
xchg
insl
divb
xchg
jno
sub
xor
lcall
lds
leave
xchg
xchg
popf
mov
int
cmp
stc
jge
fmuls
out
jns
or
hlt
jno
xchg
pop
mov
repz
arpl
pop
rolb
mov
pop
in
pop
pop
push
gs
sub
jge
mov
jno
subb
pop
rcll
pop
in
ds
popf
popa
in
inc
aad
add
pop
insb
jp
jl
movsb
pop
int3
aas
push
in
mov
cli
mov
arpl
cli
in
adc
inc
fwait
xor
mov
mov
test
cli
sahf
cmp
outsb
cmpsb
imul
mov
mov
les
cmp
inc
push
adc
adc
jmp
mov
outsb
cmpsb
pop
outsb
notl
cmp
push
pop
in
inc
in
ret
movsb
arpl
roll
dec
lret
loopne
in
or
pop
jecxz
dec
shl
movsl
cltd
pop
popa
push
out
xchg
rorl
cld
and
sub
fisubs
outsb
xorl
mov
ja
mov
mov
mov
lahf
adc
pop
pushf
cmp
repnz
ds
mov
dec
push
out
push
xchg
int3
hlt
test
and
ss
lcall
js
mov
xor
icebp
inc
sbb
xchg
xor
ja
repz
sub
sub
push
mov
daa
jl
mov
push
dec
stos
rcll
pop
test
or
adc
loope
mov
push
mov
subb
fstl
mov
movsl
insb
pop
popf
pop
inc
add
dec
enter
mov
xor
mov
inc
int
pop
lea
mov
loop
dec
xor
lods
fs
stos
mov
xchg
adc
mov
dec
mov
popa
lahf
pop
cmp
pop
mov
pop
orb
add
push
xchg
dec
adc
mov
pop
xor
mov
inc
scas
sbb
stos
mov
xchg
jbe
jb
and
jmp
shll
aad
xor
sahf
and
mov
movsl
xor
push
imul
jmp
repz
divb
push
in
xchg
push
mov
add
shrl
cmp
add
pop
push
pop
sbb
aaa
push
jp
push
ror
mov
jl
add
pusha
jl
jmp
scas
sbb
loop
lcall
lahf
sti
mov
std
inc
mov
mov
mov
dec
ja
push
stc
movsl
es
test
xchg
jae
stos
jge
pop
push
das
dec
sub
add
push
scas
jo
pop
scas
pop
cmp
inc
rclb
mov
not
fmul
cli
or
jo
xchg
imul
je
out
mov
sub
add
in
or
pop
and
or
pop
stos
push
scas
xor
aaa
aad
cmp
mov
xchg
addr16
out
stc
nop
mov
add
xchg
outsl
leave
mov
xchg
aas
repz
test
push
pop
cli
jl
ret
lret
dec
cmp
inc
or
push
aad
outsl
fisubs
push
fistpll
test
pop
cli
int
or
push
int
cwtl
cmpsl
cmp
mov
daa
or
sbb
ret
arpl
sub
push
mov
xor
and
mov
sbb
mov
lcall
call
sbb
dec
pop
loope
pusha
aad
dec
cld
les
push
fldl
mov
sbb
and
in
data16
xor
cli
push
jnp
and
jl
sarl
and
frstor
add
xchg
cmpsl
jge
cld
dec
and
scas
pusha
jg
negb
rcl
stos
jp
sbb
or
ja
cwtl
or
imul
push
cltd
and
popfw
cmp
jge
mov
xor
je
push
cmp
icebp
dec
enter
push
pop
and
jle
push
cwtl
mov
cld
aas
iret
xorb
clc
shr
outsl
std
rclb
mov
mull
jae
mov
mov
mul
test
jbe
js
in
and
outsl
into
jnp
and
sub
cmp
insb
sub
and
push
add
sub
sub
cmpsl
in
mov
push
scas
mov
into
mov
nop
repz
cmp
push
xchg
jne
bound
adc
and
xor
outsl
leave
push
push
or
les
lret
push
mov
arpl
mov
mov
dec
cmpsb
das
movsb
arpl
sub
popa
les
fsubs
inc
push
inc
dec
pop
jns
dec
jl
fimuls
mov
adc
jb
and
int3
repnz
push
fdivs
mov
mov
testb
cmp
adc
cld
sbb
mov
stc
movsl
subb
in
sub
nop
and
push
dec
add
inc
aas
or
xlat
lds
test
test
dec
lcall
jo
and
decl
xchg
fsub
lock
or
pop
inc
jge
lods
push
loop
ds
aas
xor
xor
test
jnp
insl
xor
jb
insb
bnd
shrb
lock
in
inc
mov
inc
cli
jnp
mov
cmp
ljmp
in
mov
out
jge
dec
dec
and
and
pop
dec
push
and
or
mov
inc
sbb
xor
mov
clc
push
push
inc
cmp
adc
inc
fisubrl
add
es
into
pop
jmp
mov
fisubrl
or
repnz
imul
stos
mov
cmp
sbb
inc
jns
sti
call
or
mov
dec
dec
inc
sub
fwait
and
sbb
sub
daa
fisubl
sahf
testb
test
jg
test
nop
ds
cld
add
pop
push
sar
xchg
jbe
test
jmp
adc
aas
call
dec
pusha
mov
imul
sbb
pop
pop
jbe
rcll
add
pop
push
lret
mov
iret
lock
add
jle
sub
sbb
stos
dec
xchg
int3
push
pusha
or
jp
lods
mov
jno
add
push
jae
outsb
pop
dec
xchg
imull
sub
mov
loop
js
outsb
xor
scas
mov
test
aaa
sbb
adc
push
push
xchg
xor
add
ret
icebp
push
test
call
jmp
aam
inc
or
in
add
or
jae
dec
push
sbb
data16
sbb
out
cmc
jnp
ss
aaa
add
mov
gs
in
pop
push
and
mov
sub
rolb
stc
jle
je
jno
test
lock
push
cmp
test
insl
sbb
xchg
pop
mov
aas
dec
aaa
dec
into
mov
je
sbb
in
mov
cmp
out
rcr
adc
inc
aas
sub
adc
lods
pop
add
nop
xchg
scas
dec
int3
ljmp
pop
negl
pop
leave
into
sbb
xchg
stos
mov
jne
lahf
stos
sub
repz
pop
fidivrs
adc
xor
dec
jbe
xchg
mov
mov
sti
push
std
pop
sbb
aas
cmp
sub
lret
and
cmp
dec
aad
out
sub
lea
push
jg
xchg
test
and
test
pusha
cs
dec
data16
roll
and
or
mov
sub
lods
out
ret
mov
stos
adc
data16
leave
mov
data16
lret
adc
cmc
leave
xchg
int3
lock
loopne
bound
out
out
or
push
aam
sub
jmp
test
fsub
mov
test
sbb
xchg
ds
inc
icebp
xchg
mov
rcrl
mov
push
lret
shl
mov
sbb
inc
movsl
pop
cmp
rcrl
addr16
xor
cmc
addr16
add
test
ret
jnp
pop
inc
gs
popf
shll
aam
inc
adc
mov
mov
push
out
in
lods
test
or
xchg
and
push
xchg
cmc
test
ds
mov
stos
sbb
pop
mov
xor
addl
jg
jp
cmpsb
push
pop
push
or
mov
ret
hlt
ret
xor
push
sub
cmp
jl
xchg
jl
jno
jo
test
aaa
pop
jecxz
adc
adc
pop
pop
pop
cmp
mov
mov
sti
ljmp
out
add
jbe
pusha
aam
xlat
inc
add
fbstp
sbb
jb
popa
dec
or
adc
data16
in
push
jge
js
jb
mov
popf
xor
mov
sti
sahf
je
je
cltd
xchg
pop
inc
cld
xor
push
or
aam
popa
or
bound
and
or
imul
fsubl
jg
push
cmp
xchg
xor
pop
or
mov
and
and
notb
js
pop
cmp
push
lods
add
loopne
out
jle
xchg
sub
push
bound
sbb
daa
mov
xor
and
or
inc
jns
outsb
sbb
test
adcb
ds
pop
das
mov
loopne
fwait
call
gs
xchg
or
fwait
and
sub
dec
mov
push
jmp
lcall
push
pop
sub
test
test
mov
xor
mul
push
inc
pop
fidivrl
and
outsl
aam
adc
popa
add
mov
pusha
sbb
push
mov
popa
data16
mov
shll
bound
push
loop
sbb
inc
sbb
lret
xlat
pop
orl
dec
mov
je
out
jne
adc
in
sub
dec
sbb
mov
lret
shr
adc
bound
aaa
inc
cmpsb
lea
pop
or
cmc
dec
add
mov
cmp
or
fdivrl
fimuls
leave
outsb
pop
push
ret
insl
fnstenv
push
push
push
inc
xchg
imul
je
mov
sbb
es
inc
pop
mov
xchg
fwait
je
popf
jecxz
pop
push
daa
cmp
gs
inc
stos
fimuls
xchg
adc
repnz
cmpsb
jbe
cmp
inc
push
push
les
push
mov
push
sub
cwtl
jbe
jecxz
arpl
cld
stc
push
push
loope
dec
pop
mov
or
cmp
sbb
inc
jae
fwait
stc
loop
pop
int3
jl
aam
jmp
addb
loopne
rol
lods
shrl
jmp
movsb
cmp
jp
test
adc
mov
sub
call
jecxz
xchg
cld
add
pop
testb
lret
mov
mov
fs
addr16
sarl
in
andb
insb
in
aad
inc
pop
aaa
loopew
divb
jmp
sub
inc
jge
enter
push
dec
push
into
and
pop
jecxz
push
out
popa
sahf
test
jmp
lods
popl
push
sahf
xlat
sbb
loopne
fldenv
pause
cmp
test
js
sbb
sub
aad
fwait
sub
jp
rclb
mov
mov
mov
and
adc
adc
ja
lret
mov
jb
scas
daa
cmpsl
rorb
jecxz,pn
xor
mov
sub
lret
imul
jno
mov
data16
push
test
fcomi
cmp
shr
sub
int
arpl
enter
jmp
mov
cwtl
mov
pusha
mov
sbb
imull
fidivrs
lds
jae
sbb
cmp
or
arpl
mov
sbb
nop
gs
mov
fsub
pop
sub
cmp
fwait
out
push
mov
or
ret
enter
pop
outsb
ficomps
sbb
das
dec
out
hlt
lahf
fs
mov
and
sti
mov
add
out
dec
cltd
jle
subb
orb
and
mov
mov
fistps
aas
adc
data16
mov
mov
or
icebp
movsb
or
lcall
inc
push
test
mov
lret
mov
gs
inc
inc
push
mov
jmp
ret
push
inc
dec
fcoml
dec
mov
icebp
out
mov
jb
jl
in
loop
sub
cli
pop
add
or
push
push
movsb
lret
mov
xor
ret
mov
nop
push
inc
pop
cmp
or
arpl
mov
push
aam
outsb
adc
out
lock
sub
ljmp
mov
repnz
je
inc
add
inc
out
xchg
out
aad
test
mov
cmpsl
xchg
push
daa
adcl
cmpsl
ret
enter
mov
outsb
push
cli
mov
xchg
paddsb
xor
mov
loopne
mov
pop
jbe
or
mov
lret
pop
add
jbe
sub
js
dec
imul
jp
adc
fistl
lret
mov
hlt
mov
test
and
sbb
dec
mov
jo
leave
in
dec
mov
test
in
imul
mov
outsl
sub
mov
jmp
dec
mov
leave
stos
lods
jge
fisubs
or
or
out
loopne
movsb
dec
call
icebp
dec
mov
aaa
cmp
xchg
out
hlt
stos
loop
jge
push
ret
test
movsb
sub
jge
mov
sti
jmp
lcall
push
adc
mov
xchg
or
negl
cwtl
imul
jne
adc
cltd
inc
jge
lea
cwtl
inc
in
xchg
and
mov
cltd
jg
cmp
adc
inc
mov
test
dec
sbb
push
sbb
loop
cmc
push
inc
xchg
jl
sti
sti
lahf
daa
xchg
add
cmp
into
mov
outsb
out
mov
je
lock
xorb
adc
clc
testl
divl
in
fmull
xchg
add
fcmovu
dec
testb
pushw
or
push
loopne
loop
pop
mov
aad
popf
cltd
stc
leave
dec
imul
arpl
addr16
or
inc
mov
dec
pop
sbb
inc
fldl
stos
and
aaa
fstpl
in
pushf
das
mov
je
mov
call
nop
inc
and
pop
scas
lods
cs
sub
jo
adc
fdivrl
push
or
push
add
rcr
cs
js
ja
jl
clc
cli
mov
in
pop
xor
jne
jns
or
add
sbb
popf
sahf
orb
sub
inc
mov
addps
xor
lcall
dec
testb
jg
mov
daa
cmp
sbb
call
jno
lret
popl
in
mov
mov
test
sahf
aad
dec
dec
test
aas
mov
xchg
sbb
sti
and
adc
xor
loope
nop
rcr
adc
cmp
idivl
sub
scas
mov
jecxz
sbb
daa
repnz
sbb
jb
out
or
mov
or
add
push
sbb
and
add
mov
subl
inc
popa
sti
fcmovb
shlb
push
push
jecxz
and
sbb
cld
push
mov
mov
cmc
mov
inc
stos
add
sarl
fstpl
or
and
mov
add
rcrb
ret
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
xchg
sub
xchg
xchg
dec
sub
inc
xchg
xchg
std
or
add
insb
mov
test
ficomps
stc
push
or
pop
mov
mov
rol
mov
je
imul
insb
sub
mov
xchg
sub
push
push
je
imul
push
in
fsubrs
std
adc
mov
lds
arpl
test
jo
ja
sub
lds
cmp
std
dec
jb
mul
and
mov
clc
adc
call
rcl
data16
rorl
sahf
inc
mov
cmp
push
xchg
test
mov
jno
and
push
push
dec
dec
dec
or
adc
outsl
push
mov
das
mov
test
push
pop
aam
lahf
or
and
mov
in
sbb
mov
xor
sbb
fistpl
pop
jg
jge
lret
push
sub
les
adc
sub
jo
mov
and
mov
inc
std
add
mov
push
xor
lcall
dec
push
enter
xchg
mov
ljmp
cli
test
mov
dec
outsl
in
lahf
cmp
ret
xor
sub
ret
cmpsb
dec
clc
addr16
mov
test
dec
lods
or
loopne
loope
xchg
push
data16
and
push
ja
outsb
lock
adc
and
fcompl
xor
push
enter
mov
sarb
mov
cmp
cmc
jne
xchg
pop
jo
adcl
push
aam
repz
add
fidivs
aas
mov
mov
jecxz
mov
xchg
mov
jecxz
and
mov
andb
or
cs
adc
pop
push
sahf
mov
mov
std
mov
imul
adc
popa
ret
inc
sti
je
mov
adc
or
shl
movsl
aas
cmc
mov
push
arpl
negl
push
lcall
nop
xor
cmp
out
ds
cmp
fists
jp
outsb
pop
pop
adcb
mov
jae
mov
rol
incl
fs
mov
andb
pop
dec
mov
mov
out
data16
stos
mov
out
adc
pop
lock
in
stos
adc
rorl
xor
mov
lret
icebp
jae
adc
int
into
fwait
sbb
jmp
add
in
pminub
jmp
mov
lret
xor
aam
movsl
mov
and
dec
movsl
repnz
inc
neg
adc
jns
sbb
cltd
sub
jns
iret
sbbl
out
clc
mov
push
fists
mov
inc
xchg
fistpll
xchg
lods
sar
inc
xchg
aas
fmull
cltd
outsl
pop
push
pop
dec
jo
ljmp
shlb
push
lds
outsb
in
sub
adc
outsl
pop
pop
xchg
dec
mov
push
push
and
fstl
lock
sbb
ljmp
xchg
pop
sarl
lahf
push
dec
aaa
leave
inc
ficomps
push
pop
and
xor
iret
adc
dec
sub
and
or
add
adc
xor
dec
enter
jmp
fyl2xp1
mov
jnp
bound
sbb
ja
xchg
mov
pop
ret
mov
andb
icebp
loope
lods
inc
jl
mov
cmp
mov
ret
mov
inc
insl
and
xlat
xor
push
add
pop
ds
add
push
push
fisttps
jne
dec
and
call
mov
das
adc
or
sbb
add
test
xchg
dec
pop
imul
fdivrs
sbb
and
imulb
outsl
call
popf
xchg
movsb
pop
sub
sarb
scas
mov
insl
stos
jmp
in
sti
pop
inc
test
aas
lods
pcmpgtd
mov
sub
push
ret
fisttps
adc
mov
sarl
xlat
shrb
sbbb
sub
sub
jp
pop
push
push
inc
lods
mov
in
mov
dec
or
js
pop
dec
test
out
sub
push
aas
dec
stos
cwtl
out
xlat
ljmp
xor
out
fisttpl
inc
nop
mulb
jbe
scas
sbb
pop
in
push
and
jge
sti
jno
or
jmp
adc
divl
rorl
out
loop
xor
fsts
adc
mov
mov
shrb
jne
xor
mov
cmp
mov
push
inc
ret
je
ja
mov
stos
lret
jno
fldenv
sbb
sub
popa
mov
push
ret
scas
testl
inc
and
sub
aad
pop
mov
call
cmp
bnd
cmp
xor
std
notl
fs
sbb
push
shll
int
sbb
push
sub
mov
movsl
pop
mov
js
add
aam
and
mov
pop
add
leave
js
sbb
lods
aas
dec
popa
insl
sbb
and
push
or
lds
negl
lret
aad
pop
js
and
push
dec
imul
in
int3
jno
inc
xchg
xchg
in
es
adc
les
mov
mov
sbb
mov
push
adc
and
lahf
dec
sub
pushl
cmp
cmpsb
sub
outsl
insb
xor
mov
rorl
cmp
addr16
fiadds
adc
insl
inc
push
dec
sub
dec
cmp
in
std
ja
arpl
jge
jae
push
arpl
or
cmp
dec
fs
mov
push
icebp
mov
sbb
pop
jg
adc
faddl
bound
push
outsb
sahf
pushf
or
adc
jmp
call
xor
div
imul
out
out
xor
orb
js
dec
xchg
pop
sub
adc
mov
je
js
push
jl
sbb
sbb
xchg
or
orl
cmp
mov
fdivs
xchg
jl
pop
mov
fistps
and
mov
cmp
cmp
pushw
xchg
aam
xor
dec
enter
repz
sbb
lret
leave
xor
pop
sbb
pop
adc
hlt
sub
fcmove
sub
adc
and
fs
adc
sti
mov
pop
into
aaa
rcl
test
aad
vpunpckldq
sbb
test
scas
pop
sub
jmp
test
inc
ds
mov
mov
push
mov
xchg
rcr
push
aad
mov
xchg
mov
jno
inc
enter
enter
mov
jecxz
add
push
add
loope
lret
push
cmpsl
sbb
xchg
xchg
xor
mov
ret
push
enter
push
jbe
xchg
sbb
std
jno
add
cmp
clc
stc
cwtl
cs
loop
sbbl
adc
lcall
subl
stc
mov
jbe
sti
pop
stc
mov
mov
inc
or
xor
imul
je
push
inc
icebp
les
sbb
cmp
push
cmp
or
cmp
pop
dec
cmpsb
jle
lods
push
jge
xor
std
pop
xor
adc
shl
push
nop
sbb
int
loopne
jmp
sbb
sbb
and
cmp
ret
fisttpll
lret
sub
gs
mov
xchg
jge
je
jmp
push
mov
jb
add
jge
or
mov
sub
xchg
int
jl
addr16
repnz
movsl
fildl
mov
mov
fidivs
xor
jo
inc
popf
jecxz
jp
lods
xchg
lods
icebp
ja
fbstp
jae
pop
divb
push
mov
pop
ja,pt
imul
rolb
and
cli
xor
lcall
hlt
repnz
aas
daa
cmp
dec
mov
mov
xor
jecxz
shlb
add
daa
add
lods
sbb
mov
addb
insb
dec
or
shlb
push
ret
jmpw
shlb
jae
cmc
stc
mov
jb
outsl
das
push
popa
lret
les
pop
mov
ds
nop
div
sbb
mov
divl
cli
dec
lret
push
xchg
pop
mov
mull
pop
push
lret
cmc
xchg
inc
add
xchg
pop
sahf
cmp
adc
adc
lock
pop
cltd
mov
jbe
test
mov
push
data16
icebp
test
sub
sub
mov
cmpsb
pop
mov
sub
std
lahf
leave
xchg
or
mov
cmp
out
cmp
xor
lock
ficoms
add
stos
lods
xor
mov
jae
insb
inc
sub
and
mov
rclb
les
cmp
push
adc
imul
dec
cmp
mov
out
mov
sbb
xchg
mov
sub
test
pop
out
push
xchg
add
cwtl
jp
mov
sub
ds
je
pop
sbb
psubd
outsl
aas
pop
repnz
cli
jb
sub
inc
les
iret
fadds
jl
and
dec
mov
lea
in
inc
mov
or
adc
sbb
mov
arpl
or
pop
adc
jge
sbbl
arpl
insb
mov
frstor
mov
push
dec
pop
adc
pop
adc
mov
and
sub
adc
adc
and
shr
dec
or
loopne
jmp
xor
dec
and
and
inc
les
dec
mov
push
push
roll
mov
out
jge
fdivrp
sbb
mov
dec
adc
mov
jecxz
and
fidivrs
mov
and
fdiv
xchg
mov
xchg
inc
add
ret
mov
jno
call
mov
add
es
je
add
dec
in
ljmp
pop
je
call
or
test
das
xchg
cmp
jl
cmpsl
aam
test
mov
and
test
rcl
arpl
stc
sub
ds
ret
gs
jge
inc
je
push
mov
fdivl
lods
fnsave
push
cmp
js
sbb
cmpsl
stc
dec
inc
mov
mov
dec
pushf
ret
xchg
and
xor
cmp
popa
popa
popl
scas
sub
inc
arpl
mov
lock
gs
adc
mov
in
inc
lds
xchg
flds
mov
mov
nop
call
pop
cld
xor
js
jg
pop
jns
add
rcrb
lods
int3
nop
inc
xchg
and
je
push
inc
jmp
in
push
sarw
rcrl
daa
pop
pop
lahf
ljmp
cwtl
xchg
test
xchg
push
in
aaa
jg
loop
stc
cwtl
dec
push
std
test
pop
jbe
enter
adc
lds
mov
xchg
cwtl
push
mov
scas
xor
sbb
jl
sbb
sbb
jl
fcoml
mov
xor
fidivrl
push
mov
xchg
mov
jo
sbb
add
seto
out
fisttpl
iret
ret
inc
or
jns
jle
je
jg
sbb
int
dec
fiaddl
mov
add
test
mov
push
arpl
iret
rep
in
iret
in
or
sub
or
sub
dec
sbb
mov
mov
repz
xor
mov
in
fsubs
pop
push
kmovb
lea
jne
inc
sub
push
iret
jmp
lock
imul
xchg
mov
cs
xchg
inc
jle
adc
xchg
js
and
leave
push
adc
cmp
fcmovnu
cmp
les
ss
mov
push
push
mov
divb
mov
imul
nop
mov
out
arpl
add
xchg
jnp
pushf
jo
nop
sub
lret
mov
mov
out
mov
les
cmpsb
stos
push
cmp
xor
scas
mov
pop
and
fs
faddp
mov
lock
shl
sbb
js
pop
out
out
sbb
xlat
xchg
pop
aam
aaa
xlat
push
and
cmp
cmp
xorb
enter
sbb
clc
dec
ret
or
mov
jecxz
test
add
lds
jae
mov
dec
jle
jl
mov
fisubs
mov
mov
pop
test
push
jne
pop
out
jl
jnp
in
mov
lret
enter
sub
add
jp
sub
popf
mov
scas
into
xor
fwait
xchg
fwait
xor
mov
jno
fildll
mov
mov
cwtl
pop
nop
mov
adc
sbb
mov
or
in
xchg
fimuls
mov
push
adc
popa
stos
or
dec
rolb
cmp
int
clc
mov
sbb
insl
sti
pop
popa
pop
xor
andl
jmp
out
cli
lcall
xchg
sahf
insl
push
and
lea
and
lret
pop
adc
jecxz
repnz
sarb
push
testl
clc
adc
mov
lea
movups
push
cs
adc
inc
sbb
popf
pop
dec
aam
jge
retw
xor
jo
sar
pop
add
pop
fs
addr16
cli
roll
shrl
mov
jnp
dec
decb
add
or
and
sahf
movsl
out
scas
fsubl
imul
or
pop
lds
add
fstpt
jge
cltd
sahf
mov
mov
mov
icebp
imul
sbb
lahf
sbb
push
pop
imull
das
fwait
fs
push
scas
push
ss
mov
inc
mov
xor
adc
movsl
push
int3
pop
push
movsl
sti
inc
jg
iret
ljmp
mov
dec
loop
sub
mov
mov
xor
adc
imul
call
mov
sub
imul
clc
and
pop
testb
in
inc
and
sub
clc
clc
sarl
sbb
mov
cmp
adc
inc
aaa
ss
aam
cmove
inc
gs
mov
cs
loope
jmp
push
jno
jo
xlat
dec
cmp
push
inc
std
mov
clc
inc
cld
je
popa
pusha
mov
je
mov
jae
mov
adc
add
je
push
cltd
sub
nop
int3
rclb
lret
ljmp
adc
sbb
shll
jb
fisttps
loopne
ja
jge
inc
stos
inc
sub
stos
xchg
psraw
mov
add
pop
loope
pusha
xchg
sti
or
aam
xchg
lea
xor
mov
add
mov
and
js
das
xor
nop
stos
lret
enter
mov
sbb
and
pop
xchg
and
jmp
push
adc
rolb
in
pop
jl
sbb
dec
push
inc
jmp
in
inc
ja
pop
dec
inc
sbb
stos
ljmp
dec
jo
mov
xor
adc
ret
mov
shrl
xchg
or
test
pop
dec
leave
jne
adc
jns
pop
add
xchg
cmpsb
fidivrl
xchg
in
fwait
shrb
int3
gs
movsb
sub
in
out
mov
and
mov
sbb
adc
ficomps
ficomps
dec
sub
daa
idivl
xchg
sbb
out
cmp
pop
pop
mov
jge
pop
mov
out
jp
mov
inc
and
loopne
jae
pop
cltd
mov
movsl
repz
xor
imul
mov
mov
jns
or
push
jp
sar
outsb
pop
mov
or
push
push
stc
cmp
xchg
cmpsb
stc
push
dec
scas
add
mov
fisubl
jg
pop
dec
pop
and
loopne
push
xor
jns
push
cmp
jno
jle
into
sti
cmp
lods
mov
in
xorb
push
xchg
xchg
enter
push
je
rorb
or
xor
dec
call
test
int
mov
xchg
xchg
cmpsl
sbb
cwtl
jo
test
lret
inc
lret
stc
sub
dec
or
roll
xchg
push
cltd
icebp
xor
ss
jmp
xchg
jne
lcall
lock
add
mov
push
or
hlt
sbb
xchg
lcall
add
das
rcll
sbb
pop
insl
rorl
fs
enter
sti
lods
push
call
cs
call
mov
and
and
repnz
pop
jg
push
lds
lret
xlat
movsl
sub
sarb
push
wrmsr
pop
mov
push
push
imul
daa
add
or
push
dec
sub
in
push
jg
push
loope
stos
ja
pop
cmp
push
js
sbb
fistl
fwait
mov
insb
adc
rolb
addr16
pop
push
fidivrs
jge
push
scas
inc
loop
xor
aaa
sarl
xchg
mov
insl
dec
xchg
jcxz,pn
cmp
jp
jo
xchg
nop
xchg
fimuls
mov
mov
mov
cmp
mov
dec
cmp
cltd
scas
add
sub
pop
jae
push
push
and
test
in
shll
jmp
outsb
add
mov
std
mov
int3
test
jmp
push
mov
pop
sub
cld
mov
out
or
sub
inc
popa
pop
lret
cli
fildll
stos
aad
mov
in
cli
lea
adc
inc
mov
mov
jge
xchg
dec
push
jno
int3
dec
jmp
inc
loope
rcr
lock
push
mov
or
mov
jne
or
inc
cld
adc
mov
out
lea
mov
scas
out
sub
jmp
gs
fiaddl
push
push
sti
imul
loop
stc
cmpsl
ja
pop
outsl
cmpsl
inc
dec
xchg
jg
rcll
cli
add
mov
add
and
fwait
lods
or
xchg
loopne
dec
ds
insb
or
ret
adcl
xor
xor
test
lock
lock
lret
and
cld
sahf
push
outsb
adc
add
test
mov
adc
xchg
push
iret
adc
lods
loopne
rol
or
mov
decl
je,pn
data16
in
aam
inc
repz
jge
xchg
pusha
mov
std
and
mov
sbb
mov
add
cmp
ds
hlt
call
mov
mov
ficomps
hlt
ljmp
sbb
sbb
in
xor
ret
out
cmpl
inc
inc
push
outsb
jo
fs
js
inc
rclb
fdivs
mov
push
sub
inc
push
stos
mov
imul
aad
add
jbe
stos
jo
js
xor
rcr
adc
dec
outsl
jmp
sbb
xchg
mov
mov
cmp
cli
xor
mov
shll
inc
push
cmp
mov
and
sub
and
pushf
fiaddl
pusha
dec
xchg
div
mov
mov
jb
loope
mov
fisttpl
cmpsl
pop
cmp
and
push
js
mov
movups
lret
pop
inc
mov
lret
lcall
xlat
lods
inc
adc
mov
sahf
shrb
mov
inc
xor
ljmp
mov
sub
lret
and
loope
out
ficomps
je
scas
or
ss
add
cltd
pusha
pop
push
inc
push
rcll
dec
jmp
mov
jne
cmp
inc
and
stos
push
adcb
or
xchg
push
dec
mov
and
or
xor
repnz
push
sub
cmpsl
js,pt
adc
fwait
mov
ja
stc
aad
add
bound
test
shl
mov
rcll
inc
les
cmp
enter
in
frstor
adc
mov
push
dec
scas
leave
ret
mov
shll
xchg
movsl
out
pop
into
and
icebp
sub
lock
rcrl
sub
adc
cld
faddp
sbb
mov
in
jecxz
jg
incl
fwait
loopne
je
shlb
rorl
mov
jb
inc
flds
icebp
and
xchg
xchg
fwait
test
cmpsl
or
jmp
out
ljmp
adcl
adc
jnp
ljmp
icebp
pushl
cmp
movsl
insl
push
es
sbb
dec
ret
fcoms
sub
out
test
dec
cmovo
xchg
insb
cmp
xchg
or
adc
or
movsb
xor
cmp
std
push
inc
xor
cmp
movsb
out
out
dec
mov
add
stc
loop
popa
ss
repnz
aas
cmp
push
cmp
ret
rorb
jmp
ret
jb
xor
push
into
push
and
cmp
addr16
clc
mov
add
call
filds
pusha
jecxz
inc
inc
mov
push
push
inc
xchg
insl
imul
dec
and
ss
cli
mov
jne
repnz
push
cmpsl
test
pop
or
lods
add
push
jae
repnz
mov
jl
sub
iret
scas
sbb
arpl
sbb
jle
std
ja
loope
test
pusha
cs
push
sbb
bound
and
mov
ret
popf
cli
lret
cli
cmp
xchg
inc
ljmp
adc
cltd
lods
movsb
fs
push
outsl
sub
mov
iret
cltd
adc
insb
test
cwtl
or
add
mov
dec
xor
inc
pop
ds
dec
fwait
and
cmp
mov
pushf
pop
ret
inc
mov
mov
dec
pop
mov
mov
inc
cwtl
arpl
inc
hlt
loopne
push
loope
xlat
aam
pop
mov
notb
in
pop
adc
stc
leave
push
mov
xorb
fwait
xchg
push
sub
jbe
add
popa
push
out
in
leave
testl
lods
nop
pop
aas
repnz
pushf
or
sub
pop
mov
divb
inc
mov
int
nop
out
adc
xor
xchg
movsb
push
add
dec
and
cmc
out
mov
call
cmpsb
pop
mov
int3
hlt
xchg
jns
outsl
adc
dec
dec
mov
adc
cmp
cmp
add
cltd
shl
xchg
fiaddl
in
cmp
cmpsl
daa
or
and
imul
pop
xchg
std
movsb
mov
lret
jmp
popw
xorb
xchg
push
arpl
sti
mov
jmp
clc
xlat
fisttpl
inc
sub
mov
scas
call
cmp
insb
sbb
xor
xchg
jmp
out
and
arpl
sub
shl
cmp
and
data16
push
or
inc
ret
push
jno
sahf
pop
and
add
inc
dec
daa
lods
fmul
mov
fldcw
sbb
fdivrl
and
jmp
ficoml
dec
xor
xor
sbb
mov
pop
xchg
sub
xor
popf
cwtl
or
or
cwtl
ljmp
push
rsm
ret
adc
sub
rolb
jbe
sbb
mov
dec
in
movsl
or
add
adc
mov
ja
mov
fwait
outsl
in
mov
ds
gs
xor
mov
imul
adc
outsb
mov
fwait
xlat
std
mov
pop
rep
repz
test
inc
jae
pop
rorl
push
or
outsb
insb
scas
leave
jg
lret
jo
addr16
and
pop
or
jo
xchg
mov
mov
std
add
fs
sti
pushf
test
scas
push
jge
loope
push
push
call
mov
pop
mov
push
outsb
jmp
in
jae
mov
popf
pop
mov
pusha
inc
push
jno
lods
cltd
jge
icebp
add
sub
inc
adc
out
sbb
inc
out
mov
rolb
cmc
in
pushf
lds
dec
jge
jnp
scas
cmp
pop
mov
mov
jne
sub
xchg
aaa
jecxz
push
mov
adc
lret
lock
daa
popf
cmp
data16
xor
test
cmp
fwait
imul
std
test
enter
mov
dec
imul
mov
or
es
xchg
movsl
inc
icebp
pop
pop
aam
outsb
clc
iret
loop
in
add
popf
ja
pushf
xchg
rcll
insb
mov
cwtl
imulb
xchg
ds
repz
xchg
jnp
push
jge
subl
mov
jae
int3
ret
sbb
mov
xor
into
mov
jnp
call
ret
dec
nop
repnz
pop
xchg
lods
xor
pop
pop
fcoml
orb
lret
adc
orl
jnp
xor
cltd
xchg
xor
xchg
add
mov
xor
ljmp
dec
loopne
subb
push
in
dec
push
test
mov
xlat
push
push
ds
faddp
ss
cmpsb
sbb
arpl
sbb
cli
rcrb
enter
cwtl
mov
adcl
adc
int3
cmp
xchg
or
fidivl
and
in
orl
inc
push
cmp
insl
cmp
cli
out
inc
sbb
dec
hlt
movsl
insl
sub
or
fiadds
aam
das
cmpsb
adc
pop
dec
stc
lcall
frstor
cmc
pop
or
cmp
xor
sub
dec
pop
and
adc
repz
push
mov
roll
jmp
xor
popa
mov
ljmp
fbld
push
xchg
adc
jae
or
push
sub
push
ds
loopne
int3
add
mov
jbe
leave
jbe
scas
pop
fistps
int
je
push
dec
orb
inc
shll
or
rol
sub
mov
sbb
pop
popf
ja
and
fwait
mov
jbe
fwait
jl
notl
mov
jb
imul
movsl
push
mov
in
stos
pop
ss
test
movsb
out
pop
sub
in
rcll
sbb
cmp
mov
pop
popa
push
mov
faddl
push
inc
fcomps
enter
jnp
and
sub
mov
and
lods
or
or
mov
pop
cmp
push
fimull
popa
mov
cli
rcrl
insb
iret
repnz
xor
in
cmp
popf
xchg
aad
pushf
xlat
mov
push
imul
mov
insl
xchg
lock
pop
fidivrs
enter
sub
out
mov
std
adc
and
dec
dec
cmp
int3
xchg
dec
sti
mov
or
sbb
rclb
push
jge
aad
lods
out
lret
mov
cvtpi2ps
or
dec
jg
mov
and
or
mov
test
adc
sub
dec
mov
pop
xor
stc
lahf
push
cmpsl
cwtl
stc
and
pop
ja
or
or
popf
insb
xchg
std
jp
rolb
fisttps
mov
icebp
pop
popf
and
jle
out
sub
xchg
sbb
fmull
pop
pop
and
push
cmp
into
or
pop
lea
jo
add
xchg
lods
jge
or
aas
pop
inc
rcrl
add
inc
or
es
sti
add
mov
clc
pusha
lret
sbb
aad
inc
mov
aam
add
sbb
es
ret
into
jle
push
gs
add
xchg
mov
lock
in
sub
inc
inc
test
jo
loope
dec
adc
in
sub
popf
mov
int
lods
pop
xchg
jne
mov
push
inc
mov
cmp
mov
mov
cltd
cmc
push
call
movsb
clc
add
and
scas
dec
sbbl
pop
pusha
cmpsb
mov
out
push
push
pop
daa
adc
mov
jne
adc
jecxz
sbb
fwait
xor
sub
mov
jns
mov
jae
insl
add
pop
adc
flds
xor
sahf
push
in
push
add
push
push
adc
sahf
mov
je
pop
lret
mov
xorl
mov
aaa
icebp
mov
imulb
out
cmp
test
sub
pop
lahf
outsb
pusha
xchg
jns
jg
mov
dec
ret
push
mov
maxps
imul
sub
pusha
shll
in
test
outsl
jb
or
ret
jecxz
test
jecxz
cld
shlb
pop
dec
sub
mov
pop
lcall
sahf
mov
lods
mov
out
cmc
adc
mov
pop
test
pop
nop
sahf
and
pop
sbb
add
aaa
repnz
fcmovnb
add
or
push
ja
out
shll
hlt
bound
sti
xchg
jg
jecxz
push
adc
xlat
cmp
xchg
inc
lahf
jns,pn
pop
pushl
mov
push
adc
insb
and
mov
fs
dec
sub
aad
add
xor
or
dec
test
ds
pop
je
sbb
ss
aam
xor
es
pop
fidivl
in
mov
fwait
or
into
movsb
sbb
push
or
pusha
add
sarl
jl
icebp
jge
ljmp
xor
fnsave
push
xor
mov
xchg
xchg
push
dec
shll
ljmpw
adc
fs
or
adc
shlb
test
ja
pushf
cwtl
stc
pop
stc
bound
adc
xorb
mov
and
push
pushf
or
std
inc
jo
push
scas
lods
dec
addb
sbb
sbb
mov
xacquire
fisttpll
lds
jmp
dec
std
mov
loop
insl
das
mov
add
into
sbb
in
inc
mov
nop
xchg
inc
jg
les
or
rorl
data16
fldt
cmp
ret
icebp
sub
outsb
addr16
popf
iret
cmp
sbb
mov
shrl
xchg
mov
pusha
and
xchg
cld
add
xor
fwait
ret
jl
add
cmp
adc
xor
aam
mov
inc
xchg
dec
or
les
cmpsb
xorb
add
int
outsb
sub
fnstcw
pushf
sahf
dec
decb
inc
sbb
mov
cmp
fdiv
cmp
push
dec
sub
cvtpi2ps
xchg
jb
mov
roll
xchg
sbb
inc
cmpsb
sub
fs
daa
lock
xor
inc
test
jne
rolb
adc
mov
cmp
xor
mov
mov
sbb
mov
sub
sti
int
mov
dec
mov
lds
sbb
sbb
inc
popa
mov
cmc
hlt
stos
pop
pop
scas
sarl
sub
mov
push
xor
dec
or
inc
les
sahf
xlat
sbbl
cmpsl
scas
push
adcb
ljmp
adc
pop
ss
call
sub
dec
push
mov
and
fistpl
adc
inc
test
fcompp
incb
push
insb
and
xchg
int
insb
les
rdpmc
out
enter
cmpsl
xor
inc
sbb
loope
test
lock
xchg
imul
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
rclb
bound
pop
bound
push
cmc
inc
sahf
dec
fsubs
mov
or
or
push
xor
cmp
lds
fisubrs
faddl
and
add
pop
or
cmpsl
shrb
xchg
mov
and
push
lods
jg
mov
and
adc
cld
fucomp
or
xchg
pushf
fistpll
jo
aas
or
pop
push
mov
nop
xor
adc
ja
pop
jne
inc
or
xor
sti
sbb
lcall
loope
push
push
dec
sti
inc
xchg
js
sbb
movsl
arpl
into
or
ljmp
or
cmc
inc
sbb
inc
out
jge
lcall
push
add
js
movsb
cs
test
mov
sub
popa
sti
cltd
sti
insl
jo
aad
out
cld
enter
add
adc
movsb
add
in
push
mov
adc
movsl
dec
pop
cmpsl
inc
cli
adc
cmp
pop
sub
inc
in
mov
das
es
xchg
stos
les
xchg
or
mov
or
cli
out
fucomip
insb
inc
jle
inc
dec
enter
mov
stos
add
xor
lcall
stos
push
loop
xchg
mov
jg
push
mov
hlt
xchg
sub
pop
xor
out
or
cmc
stos
jno
ljmp
add
cs
ljmp
xchg
jns
and
jl
popf
rcr
mov
jl
mov
jb
test
add
stos
pop
hlt
sbb
nop
cld
es
xchg
je
loopne
ret
xchg
mov
mov
cli
lea
mov
test
pop
or
sbb
mov
test
sahf
movsb
incb
xor
cmpsl
movsl
adc
or
xchg
rcrl
pop
jb
dec
nop
js
sbbb
out
dec
imul
in
xchg
fidivl
fsubs
ret
fucomip
mov
cmp
adc
outsl
add
loopne
inc
and
stc
xor
sub
insl
outsb
mov
loopne
aaa
mov
adc
xor
sub
xchg
fldl
ficoml
neg
sub
mov
xchg
fstpt
fbstp
lds
mov
or
dec
lock
push
imul
sti
sbb
std
dec
stc
xor
inc
inc
pop
ja
aad
push
mov
fadds
shlb
push
insl
clc
lea
jl
cs
xlat
lret
xchg
scas
test
jmp
lea
add
sbb
fdivrl
nop
cltd
mov
clc
aam
cmp
jno
inc
add
out
xchg
test
in
jmp
adc
jbe
out
inc
cmp
ret
cmp
xor
xchg
fstpl
push
inc
stos
pop
push
out
inc
pop
jbe
or
stos
test
mov
jnp
adc
test
imul
pop
mov
cmpsl
rcrl
fcmovnu
xchg
push
mov
push
xor
xor
jmp
les
insb
stos
adc
out
lds
test
push
in
pusha
lds
mov
fldt
cmc
loopne
xor
or
addl
cmp
add
addr16
or
bt
nop
outsl
or
pop
sub
cmp
push
pusha
notb
mov
movsb
popa
sbb
test
inc
test
dec
xchg
mov
pop
xor
aad
xchg
int
inc
mov
jmp
cmp
repz
je
int
sub
and
fnstsw
aad
jb
xchg
test
cs
ds
out
adc
ja
call
adc
aad
bound
jo
xor
rclb
imul
lea
mov
xor
data16
paddw
xchg
std
adc
jg
push
jae
stc
inc
lock
xchg
xchg
dec
mov
ja
jae
bound
dec
lret
mov
pop
mov
iret
push
inc
mov
jp
int
es
inc
sub
mov
test
push
aaa
rclb
ret
daa
mull
jp
sub
sub
fsubs
jnp
clc
fs
lret
xchg
adc
rol
mov
or
into
push
scas
add
fisubrl
mov
loopne
or
and
rorb
popl
movsl
scas
fistl
jmp
jg
cltd
dec
sbb
scas
add
lahf
repnz
pop
incl
leave
std
loop
xchg
les
and
jecxz
dec
test
inc
mov
cs
pop
jbe
fisubrl
fsubrs
cmc
int3
dec
push
dec
pop
addb
mov
add
add
mov
lods
test
sbb
fdivp
mov
in
xchg
ljmp
mov
push
add
push
clc
mov
dec
push
lock
adc
outsb
mov
inc
push
int
stc
cmp
and
xchg
xor
push
inc
push
push
fst
aaa
test
mov
aam
fwait
aaa
xchg
mov
mov
mov
inc
mov
leave
push
pop
sub
add
inc
repz
sbb
sti
lea
out
and
fisttps
jo
out
mov
push
in
push
fs
cmp
jp
pop
loop
sarl
jge
jno
sbb
mov
push
nop
jo
push
or
cmp
mov
mov
rorb
aam
mov
dec
push
inc
outsl
rcll
cmc
ljmp
lea
add
outsb
outsb
arpl
ja
pusha
sub
lcall
icebp
fdivl
cmpsl
push
mov
leave
lret
pushl
aad
sahf
mov
sahf
leave
inc
xor
push
add
add
xorb
dec
es
scas
cmpsl
rclb
je
add
mov
aam
fdivp
mov
test
lret
dec
push
cwtl
clc
fwait
sub
add
pop
push
push
sarl
push
xchg
je
jmp
fisttps
imul
shlb
inc
jns
xor
mov
mov
inc
leave
addr16
sti
jbe
push
sub
sbb
sbb
sub
jl
jo
sbb
aad
xchg
arpl
insb
ljmp
rcrb
aam
mov
adc
adc
js
jne
xchg
sub
in
pop
lds
ss
adcl
scas
xchg
nop
pushf
in
mov
out
push
adc
add
enter
mov
aas
and
adc
cmp
or
pop
add
bound
dec
lcall
sti
js
lahf
mov
int
in
insl
sti
jo
ja
imul
adc
in
test
sub
xchg
inc
sbb
mov
cmp
imul
out
bound
add
je
sbb
jne
sub
sarb
movsl
rcll
imul
cmp
bound
pop
or
push
and
cmp
enter
in
xchg
addl
outsl
scas
imul
in
xchg
enter
in
pop
inc
lods
repz
and
loopne
fcomp
subb
sbb
pop
cltd
out
orl
mov
insb
push
and
in
lds
xlat
adc
mov
into
test
cmp
sbb
xchg
outsb
xchg
hlt
std
stc
pop
loop
scas
mov
fisttps
sub
sahf
leave
ds
xchg
dec
js
mov
ss
and
movsl
je
mov
out
cltd
adc
or
hlt
mov
lcall
xor
sbb
jne
cmp
arpl
add
jbe
lea
push
sub
in
inc
or
shll
mov
aam
push
or
fidivl
movsl
nop
sbb
andb
xchg
and
xchg
push
mov
pop
test
mov
stc
mov
shr
jge
xor
xchg
push
sbb
dec
mull
push
fisttps
popf
cld
jl
sbb
filds
fs
and
cmpsl
call
xorl
sbb
pushw
jp
sbb
jne
dec
sti
movsb
cmpsb
sbb
and
sahf
das
xor
fisubl
sub
lds
clc
hlt
pop
cmp
adc
sbb
clc
shlb
in
add
int
lret
sbb
repz
cmp
mov
sub
xor
jns
loope
cmp
add
fwait
loope
xchg
mov
mov
or
adc
insl
bound
push
int
mov
pop
or
xor
mov
popa
push
mov
mov
fistps
xchg
stc
mov
test
pushf
mov
mov
and
fldl
shrb
cmp
jne
jle
movsl
inc
cmp
mov
js
cltd
jecxz
dec
ljmp
inc
mov
stos
jae
mov
cltd
jg
test
xor
arpl
inc
lods
sbb
push
mov
cmpsb
imul
inc
lea
mov
add
out
or
dec
in
adc
mov
js
out
cmp
gs
inc
push
sub
pop
fsubrl
dec
imul
cmp
xchg
fdivrs
and
incb
lcall
cli
movsb
aam
hlt
inc
iret
xlat
push
adc
mov
dec
jmp
lret
mov
mov
sti
in
in
mov
fs
push
test
xchg
hlt
add
push
fwait
rcrb
lret
std
repz
outsl
push
cld
mov
test
sti
xchg
push
push
fwait
pushf
adc
or
pusha
jl
and
pop
xchg
cltd
xchg
insl
xchg
cmp
jecxz
xchg
insb
pop
xlat
push
pop
push
movsl
and
js
aam
popf
ret
pop
and
mul
in
out
dec
jae
fildl
mov
adc
jecxz
mov
mov
adc
out
sbb
jne
mov
xchg
cmp
adc
add
sub
outsl
sahf
add
lods
xchg
jle
rcr
icebp
push
cwtl
mov
xchg
mov
add
sbb
pusha
pop
rcl
pop
mov
mov
fwait
mov
mov
pop
add
add
dec
loopne
cli
dec
enter
pop
not
jg
fldt
insb
data16
leave
clc
sbb
xlat
push
push
push
pop
std
loop
decb
jae
outsb
dec
or
mov
pop
mov
cmp
inc
dec
fwait
lret
repz
xor
lods
daa
dec
jns
push
and
cmp
push
ret
sarb
pop
movsl
das
imul
mov
fwait
jne
bound
lea
mov
cmp
mov
jge
inc
sarb
or
mov
dec
std
ds
outsl
cmc
mov
imul
mov
push
xchg
ret
push
lea
sub
sahf
sarb
mov
in
push
addr16
jg
mov
cmp
mov
mov
iret
jmp
mov
mov
ret
xchg
movsl
mov
repnz
jne
je
pop
int3
mov
leave
adcl
xor
icebp
nop
outsb
jge
add
jmp
sub
dec
clc
in
add
popa
out
out
push
fstpt
and
mov
mov
mov
in
push
jno
js
loop
xchg
adc
mov
movsb
mov
xlat
rol
and
pop
pop
fidivrl
fsubl
mov
xor
lcall
xchg
repnz
jmp
mov
pop
cmpsl
jg
jbe
outsb
mov
mov
fcoms
adc
inc
and
mov
or
add
sub
xor
cld
daa
leave
testl
sub
cwtl
addr16
or
mov
lock
dec
sub
ss
into
xchg
mov
pop
or
pop
cmpsb
das
mov
and
jp
das
notb
push
push
and
js
push
lods
jo
jns
jmp
in
xchg
push
shll
flds
cmp
jb
inc
arpl
mov
pop
push
mov
in
inc
fstpt
in
ret
sbb
mov
fadd
enter
loope
bound
or
jp
mov
lea
pushf
add
rorl
arpl
ret
push
loopne
fstpt
add
add
hlt
pop
mov
inc
ret
in
push
imul
iret
sbb
mov
lods
mov
movsl
or
push
int3
rorb
pop
repz
cmpsl
mov
dec
lea
shr
mov
clc
mov
lret
into
xor
nop
incb
mov
cltd
ficoms
cmpl
sub
dec
aas
or
cmc
call
aam
and
inc
jae
inc
cld
mov
sbb
mov
clc
sub
sbb
mov
shlb
xchg
cs
imul
push
mov
test
cmpsb
scas
bound
ds
jecxz
sbb
xchg
rclb
rcr
jle
icebp
sbb
jmp
popa
or
push
int3
or
mov
nop
push
mov
push
mov
cmp
pushf
mov
mov
cmp
loope
or
push
cmpl
mov
cmpb
pop
inc
xchg
fcoml
pop
and
inc
xor
xorb
mov
nop
pop
scas
into
lret
sub
ret
dec
jle
ret
cmp
push
into
xor
ljmp
jnp
in
dec
out
iret
call
addr16
pop
pop
lods
jnp
jno
out
cwtl
out
loope
xor
mov
shlb
imull
pop
nop
mov
and
fwait
bound
cmp
sub
mov
or
jle
adc
or
push
cmpsl
mov
pop
fimull
jae
and
cmc
inc
fmull
cmp
fisubrs
xchg
data16
cmp
or
sbb
pop
in
mov
hlt
cmp
dec
push
sti
dec
ljmp
mov
mov
outsb
xorb
pop
jl
ljmpw
jns
push
test
mov
xchg
jnp
jnp
pushf
cld
mov
xchg
pop
decl
sarb
pop
or
das
ret
dec
pusha
jg
and
push
pop
dec
cld
sbb
ret
into
mov
in
add
ss
sti
push
mov
ja
mov
pop
fwait
push
pop
push
jge
insl
mov
xor
clc
ljmp
or
cmp
cwtl
jno
mov
sbb
in
test
pop
in
push
js
mov
stos
dec
add
jp
aas
pop
cmpsl
xor
dec
xor
inc
sub
fnstenv
cmc
call
mov
pop
add
jg
xchg
stos
or
xchg
outsl
add
es
jecxz
xchg
mov
mov
mov
mov
push
adc
stos
jl
ds
jecxz
lcall
jns
push
insb
cmp
xlat
mov
sbb
arpl
jmp
pop
xchg
out
in
cwtl
jge
push
stc
add
outsl
inc
fcmovnb
jo
ret
stos
fisttpll
xchg
loop
outsb
out
repnz
ficoms
pushf
sbb
imull
stos
jmp
movsl
fwait
les
cwtl
mov
fisttpll
repz
sub
sahf
mov
pop
shlb
push
in
xchg
add
int
test
fldl2e
fdivrs
xor
jmp
mov
or
and
adc
xor
mov
mov
push
mov
jmp
jp
cmp
out
mov
loopne
mov
add
rolb
es
xchg
adc
call
mov
push
push
xor
je
adc
daa
gs
mov
fwait
in
jge
mov
push
fisubs
aad
mov
das
or
das
sti
mov
mov
sub
or
cmp
xchg
in
xchg
sub
push
js
insl
dec
or
test
fsubrl
in
psubw
repnz
shl
sidtl
cwtl
dec
mov
lods
shr
mov
pop
add
sub
sub
pop
aad
repnz
test
pop
lea
pop
cli
lods
das
fs
int
int3
sub
loopne
adc
icebp
mov
inc
je
and
dec
fs
and
mov
cvttps2pi
add
inc
push
outsl
popf
sahf
mov
bound
xchg
repnz
push
adc
shll
xor
mov
mov
jle
lret
xlat
shlb
xor
jae
xor
ds
mov
shrb
jmp
adc
fnstsw
rolb
aaa
mov
and
imul
add
shrb
push
hlt
add
xor
push
mov
jae
aaa
rolb
push
sahf
sbb
rcrl
test
imul
test
and
and
fstp
movsl
xchg
rcrb
adc
cmp
fsts
lret
lcall
mov
aam
js
jle
imul
sbb
pop
loop
test
lea
test
xor
add
pop
xchg
xor
inc
stos
nop
into
push
notb
cmpsb
rcrl
outsb
lret
or
jg
push
mov
mov
or
loopne
pop
mov
add
cmp
shll
mov
push
lds
add
jge
outsl
pop
cmp
mov
fidivrl
and
adc
cmpb
les
mov
ror
mov
or
test
call
inc
hlt
aaa
sub
out
jmp
pop
push
aaa
pop
pop
scas
sbb
mov
mov
mov
pusha
arpl
idiv
inc
cmpsb
push
or
cmp
cs
sbb
jne
roll
cmpl
out
shr
mov
add
icebp
fadd
cs
imul
mov
enter
xorl
in
cltd
fstl
jns
jle
into
adc
ror
or
pushf
leave
arpl
inc
jp
mov
lea
iret
pop
popf
pop
mov
in
aas
frstor
mov
jge
lods
outsb
dec
pop
iret
sub
test
xchg
sbb
das
sbb
mov
or
add
cmp
and
insb
fwait
mov
test
insl
sbb
dec
add
xlat
rcr
insl
test
sahf
dec
push
enter
decb
nop
sub
or
push
jo
cmp
fdivrs
or
pop
pusha
dec
decb
outsb
js
cld
pop
es
mov
add
and
cltd
jp
and
adc
iret
in
ja
hlt
push
push
lods
adcl
clc
fs
cmp
and
dec
push
jle
sub
jne
inc
xchg
test
mov
scas
ficompl
icebp
push
xor
int3
sub
mov
adc
mov
test
rcr
push
dec
in
das
addb
and
ret
gs
dec
js
push
mov
lahf
roll
dec
or
push
inc
add
mov
and
push
mov
xor
pushf
fs
push
xorl
mov
jno
decl
dec
pop
push
stc
xchg
popa
aam
gs
cmp
lds
sbb
dec
mov
push
pop
inc
cltd
mov
inc
xor
mov
fsubr
sub
mov
mov
pop
xor
cli
out
and
dec
loope
xchg
mov
dec
jle
movsl
fiadds
jns
xor
inc
fs
in
pop
loope
test
iret
stc
xlat
inc
cs
outsl
es
push
adc
jb
inc
dec
mov
jle
mov
into
push
adc
mov
adc
mov
or
xor
sbb
ud1
popa
sbb
loop
les
push
jnp
adc
dec
mov
adc
jle
adc
sub
jmp
inc
xchg
scas
ret
lods
mov
sbb
mov
mov
loopnew
jne
xor
daa
cmp
push
cmp
adc
das
sbb
fs
idivl
pusha
iret
bound
xchg
push
cwtl
add
mov
cli
dec
imul
shlb
mov
push
lods
inc
add
outsl
in
call
inc
jp
jp
rorb
idiv
ljmp
jecxz
lods
mov
add
test
arpl
cmpl
adc
xor
cs
shll
mov
psadbw
in
cmp
xchg
mov
xor
sarb
mov
addr16
dec
add
test
cmp
push
imul
xlat
lret
xor
lret
lock
xor
and
jle
cwtl
repnz
pop
int3
shlb
xor
inc
xchg
inc
std
dec
or
or
les
rcl
mov
mov
aaa
lret
inc
mov
fwait
bound
sarb
and
pop
push
mov
jo
add
cmp
out
aaa
pop
outsb
loopne
sbb
push
jo
imul
pop
cmpsl
add
mov
jmp
iret
das
mov
test
or
push
int
pushf
or
clc
ret
jl
adc
pop
add
dec
ljmp
popf
inc
rol
aas
dec
pop
sub
sbb
scas
xor
das
fst
into
dec
sub
inc
iret
rorb
adc
inc
lock
sub
lea
stos
js
sbb
mov
or
or
cmp
lret
test
dec
mov
pop
push
popl
sti
je
cmpsb
push
cmp
xchg
loope
xor
push
aad
inc
jnp
lcall
lcall
cmc
sbbb
testb
xor
cltd
sub
lret
mov
push
mov
dec
jge
dec
jae
xchg
test
mov
add
call
push
stos
test
aas
fnstsw
jp,pn
push
iret
jecxz
mov
arpl
mov
fnstsw
aaa
mov
aad
dec
cs
lret
imul
xor
adc
jns
jb
mov
shl
xor
push
cmp
dec
push
push
dec
cmp
xchg
pusha
mov
xchg
int3
mov
cld
cmpb
cwtl
sub
int3
mov
xor
mov
out
mov
rolb
stc
cmp
jmp
push
stos
pop
loop
daa
jns
push
xor
xor
icebp
pop
adc
shrb
scas
cmp
lea
pop
shrb
stos
lcall
dec
lods
mov
push
push
fxch
movsl
ret
popf
mov
and
mov
test
rcll
movsb
loop
mov
out
cmpsl
sub
mov
nop
std
inc
scas
mov
jne
push
aad
push
pop
xchg
stc
adc
mov
lret
sbb
mov
push
fwait
sub
mov
lahf
gs
aas
clc
rorl
cmpl
jle
or
and
test
cli
add
mov
sbb
mov
aad
or
pop
mov
mov
repz
push
popa
out
ss
cmp
xchg
dec
stos
leave
mov
xor
push
push
push
push
sub
sub
into
mov
sbb
pop
jmp
dec
rcl
jnp
pop
mov
fstpt
push
cmp
popf
mov
pushf
mov
pop
daa
stos
adc
fdivl
dec
sarl
lea
and
negl
call
ds
and
add
loopne
call
shl
cmc
adc
cmpsb
lock
pop
sub
fcompl
xor
cmc
fs
cmp
enter
jmp
jl,pt
aaa
xchg
cmpsl
daa
lods
cmpsl
aam
dec
pusha
mov
sarb
mov
inc
and
and
aaa
jmp
mov
pushf
pop
jecxz
cwtl
movsl
in
fisttpll
pop
xor
mov
arpl
stos
adc
dec
call
inc
negb
ret
loope
cmpsb
ret
lret
push
pop
test
adc
es
jl
das
ja
add
addl
pop
std
movsl
dec
sbb
adc
xor
cld
bound
mov
mov
adc
mov
out
sub
push
dec
xor
in
sbb
movsl
cld
testb
sub
xor
jne
es
cltd
push
adc
xchg
push
pop
sbb
xchg
pusha
inc
jae
mov
orb
add
orl
test
add
dec
repz
mov
fstpl
popf
adc
inc
push
xor
ljmp
outsl
lret
and
add
lds
pop
testl
mov
jle
inc
pop
inc
add
into
scas
mov
mov
imulb
adc
pop
movsb
adc
mov
xor
pop
fwait
xchg
out
in
andb
xor
dec
scas
or
mov
outsb
jnp
ds
stos
mov
cli
and
push
das
fdivrl
jo
mov
outsb
sub
fnclex
or
fisubrl
cmp
out
or
mov
push
fisubrs
xor
pop
repnz
repnz
pop
push
or
divl
cmp
and
dec
mov
frstor
or
xor
lahf
aaa
mov
hlt
aaa
pop
enter
aad
mov
adc
lret
out
lret
adc
ljmp
lods
mov
cmp
inc
or
push
stos
faddp
push
xor
inc
mov
faddl
jbe
sub
loopne
daa
out
push
sub
add
cmp
jns
push
je
cltd
pop
cmc
xchg
mov
push
cmc
imul
ror
lods
mov
jmp
incb
outsb
mov
mov
adc
jge
pop
in
test
add
jo
xor
or
lret
adc
mov
lods
mov
add
sbb
test
inc
sarl
ja
sub
sbb
mov
ficomps
shlb
inc
es
leave
or
sub
push
mov
hlt
movsb
jb
pop
push
add
movsb
xor
dec
adc
out
sub
ja
repz
push
jp
sahf
iret
fisttps
xchg
jbe
jl
mov
in
popa
dec
mov
lret
in
sbb
pusha
inc
popf
cmp
xor
subl
mov
loope
inc
hlt
xor
nop
fistps
or
pusha
push
loope
movsb
insb
lds
mov
cmp
mov
std
mov
xor
cmpsb
dec
ss
stc
out
ret
mov
push
into
xor
jns
cmp
dec
cmp
outsb
add
jp
xlat
aas
push
jg
xor
test
mov
push
pop
sub
dec
fcompl
cmp
roll
push
inc
xchg
repnz
jbe
pop
cli
xor
into
or
xor
push
mov
xor
xlat
mov
jp
sbb
mov
sub
out
push
aad
or
dec
lock
pop
imul
iret
jecxz
fisubs
jmp
add
push
lahf
pop
mov
call
jmp
test
and
or
add
sub
cmp
mov
xchg
mov
mov
pop
and
std
mov
insb
in
int
dec
xor
pop
sub
sub
xor
mov
dec
mov
fwait
inc
popf
imul
loop
shlw
pop
push
dec
dec
fisubrl
daa
jp
and
push
fldcw
and
dec
shll
aaa
mov
call
fcmovnbe
add
xlat
fmull
or
mov
xor
cmp
push
xor
inc
jl
aas
or
dec
mov
pop
jno
mov
in
pop
sub
lods
sub
shr
testl
mov
filds
decl
xchg
cltd
lret
fsubr
jmp
lcall
pop
xchg
ljmp
arpl
mov
push
jg
notb
les
mov
and
lcall
orb
je
cmp
scas
mov
mov
std
adc
loop
adc
rcrb
scas
jns
jecxz
pop
out
sub
xor
and
pop
pop
loop
sub
sub
lahf
out
or
in
ret
les
mov
mov
adc
pop
xchg
incl
test
inc
sub
mov
mov
sbb
mov
imul
or
shr
pusha
lgs
sub
add
aad
mov
cli
cli
xchg
push
jo
mov
add
cld
add
jecxz
push
lds
add
pop
mov
pop
push
jge
das
pop
repnz
xchg
loope
adc
push
das
jl
aas
lds
loopne
sbb
divb
movsl
pop
or
xor
xchg
sti
stos
cmp
out
xlat
in
mov
and
cmc
and
mov
mov
repz
inc
hlt
lock
popa
mov
xchg
sbbb
in
andl
dec
cld
xor
inc
adc
rorb
inc
shll
or
aas
pop
add
aaa
pusha
and
fucom
cmp
mov
sti
cwtl
xchg
enter
xchg
push
mov
jo
je
lret
dec
push
lock
fildll
pop
sbb
sbb
hlt
stos
lcall
dec
cmpsl
insb
and
xchg
mov
or
inc
loop
js
imull
ljmp
stc
pop
shll
xchg
movsb
sbb
xchg
or
mov
mov
arpl
xchg
fs
popf
lock
lret
cmp
lods
pop
dec
push
sbb
push
leave
loope
sbb
sahf
push
jmp
cmpsl
xor
imul
jo
jno
int3
orl
inc
adc
rol
outsb
mov
hlt
stos
cld
dec
dec
mov
cmp
je
out
cmpsb
xor
loope
rcl
aad
movswl
jo
aam
ret
pop
cmp
jno
cld
xlat
dec
or
sbbb
loope
mov
mov
mov
arpl
pusha
fldcw
pop
lods
shr
lods
out
dec
dec
sbb
test
enter
cmp
movsl
scas
dec
jo
xor
sets
pop
push
adc
fsubrp
mov
daa
xchg
mov
fwait
int3
dec
jecxz
sbb
pop
aaa
loope
push
fnstsw
les
out
out
fisubs
sub
ja
mov
and
loopne
ds
cmc
xchg
cmp
jg
cli
imull
das
jmp
lret
add
arpl
inc
xor
push
divb
call
mov
pop
loop
sub
mov
inc
cmc
insl
rolb
pushf
mov
pop
and
movsb
orb
push
sbb
outsl
popl
xchg
pop
xchg
jg
mov
xchg
sarl
lods
mov
and
jecxz
repz
pop
bound
nop
jmp
aas
push
out
pop
push
ja
cmpsb
popa
loop
xor
push
mov
sbb
xchg
jae
sbb
jo
cs
fildll
mov
xor
ss
mov
adc
mov
in
sbb
cwtl
clc
insb
dec
jge
dec
cmp
sbb
lods
add
pop
leave
pop
jp
movsl
jle
push
or
adc
xor
mov
mov
sub
pop
pushf
push
insb
xchg
push
shlb
push
fisubrl
adc
ja
pop
lea
mov
scas
xor
jno
add
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
adc
icebp
ret
jmp
bound
mov
leave
inc
sub
and
in
hlt
jns
push
and
xchg
sub
mov
sbb
sub
ret
nop
sbb
sbb
iret
shl
cmp
add
push
fxch
aas
mov
mov
pop
push
mov
dec
pop
in
push
fcmovbe
push
sub
mov
mov
push
test
jge
push
arpl
test
dec
jne
ljmp
fiaddl
sbb
and
xchg
movsl
mov
in
dec
xor
sbb
jecxz
sub
lods
mov
mov
jno
xorps
adc
arpl
sbb
or
js
shlb
rcl
out
inc
adc
or
xchg
jmp
scas
ret
lahf
dec
int3
sub
movsb
or
lds
in
dec
adc
leave
lcall
xor
dec
loope
cmpsl
popa
adc
adcl
movsb
imul
push
cmp
imul
nop
jecxz
pop
popa
test
mov
inc
int
movsb
cmp
push
lock
mov
and
lods
jo
mov
iret
xor
inc
das
adcb
lcall
mul
mov
sbb
shll
sbb
idiv
cmp
cli
mov
sbb
push
cmp
pop
out
push
mov
fsts
push
les
loopne
pop
cmpsb
xor
les
insl
push
and
leave
mov
mov
dec
int3
inc
nop
mov
push
int
iret
repz
pop
js
cltd
push
aaa
push
inc
push
in
int3
int3
imul
adcb
inc
mov
mov
gs
mov
push
and
xor
push
cli
jnp
stos
sbb
inc
call
je
jp
mov
xor
dec
xor
or
mov
icebp
enter
insb
xor
lods
cwtl
mov
jbe
pushf
xchg
mov
das
push
fbstp
xor
pop
adc
cli
sahf
loopne
pop
xor
hlt
std
in
shlb
lods
mov
aad
fst
popa
mov
cld
addr16
xchg
xchg
pop
xor
out
mov
push
xchg
in
or
dec
outsl
push
into
out
adc
cmpsb
ds
rcrb
lcall
jo
cmp
sbb
push
loope
xchg
pop
xchg
jg
xchg
adc
cmp
cwtl
std
push
int
and
xor
add
mov
scas
jnp
add
out
loopne
pop
imul
mov
mov
lret
movsb
sub
cs
js
fidivl
test
enter
ret
into
adc
mov
sub
test
ja
jno
sub
popf
inc
mov
fs
mov
das
jnp
out
outsb
xor
icebp
popa
fs
cmc
insb
dec
in
stos
gs
dec
testl
xchg
cld
aas
shrl
jns
shrl
sbb
imul
stos
sub
cmpsl
imull
std
sbb
call
int
ljmp
push
sbb
mov
es
cmp
enter
jbe
inc
adcb
aam
arpl
jl
sbb
xchg
add
pop
cwtl
cmp
mov
xchg
dec
push
scas
adc
xchg
adc
fadd
repnz
inc
setg
push
jae
aas
sbb
shl
fxch
or
jle,pn
mov
xchg
leave
dec
push
dec
mov
pop
mov
lret
mov
test
or
aaa
jbe
jno
lret
cmp
test
mov
stos
sbb
adc
sbb
into
or
divb
repnz
fwait
enter
outsl
ljmp
or
inc
inc
cmp
sbb
int3
arpl
imul
sti
or
stos
rorl
pushf
repz
mov
mov
dec
addr16
orb
imul
lock
ljmp
mov
loop
cmpsb
sbb
push
fbld
int
repnz
add
xchg
pushf
pop
iret
sub
xchg
ficomps
cmp
fdivs
in
push
clc
cltd
lcall
scas
pop
loop
xchg
cs
repnz
add
push
mov
test
dec
mov
xor
lds
jns
ja
fbld
sahf
mov
pop
inc
pushf
xlat
fs
jecxz
cmp
ret
je
inc
pop
xchg
cmp
add
or
dec
and
aas
add
mov
mov
and
sbb
mov
aas
add
out
popf
mov
push
jecxz
xchg
push
push
mov
or
push
gs
mov
mov
dec
sbb
dec
and
cli
ret
add
popf
stc
lret
lret
inc
mov
ds
mov
or
push
or
and
xchg
xchg
aaa
or
add
loopne
cmc
push
push
mov
cmp
adcb
in
in
xlat
gs
or
movsl
add
jnp
adc
dec
in
int
arpl
or
or
pop
mov
outsb
add
mov
ljmp
js
cld
jb
xchg
cmpsb
pop
pop
sbb
mov
sbb
sbb
call
push
cld
dec
cmp
adc
sbb
adc
in
jg
into
and
jns
lcall
or
data16
nop
mov
pop
rorl
mov
sub
dec
add
mov
xchg
jecxz
sbb
and
jns
dec
mov
call
rcr
and
push
cmovnp
mov
mov
out
sbb
test
out
sub
add
add
push
inc
subl
pushf
outsl
mov
inc
push
pop
xor
cmp
xlat
sbb
fnstenv
cs
insl
loope
jbe
shl
pop
int3
adc
xchg
enter
neg
inc
dec
mov
cmp
repz
leave
imul
lcall
gs
je
push
inc
repnz
lock
sbb
mov
flds
lods
cmpsl
pop
mov
pop
lods
aam
and
sarl
lcall
lods
int
jb
loopne
dec
dec
int
fsts
or
outsl
shll
je
push
inc
inc
cmp
add
inc
test
adc
mov
adc
xor
push
mov
dec
arpl
push
stos
fs
mov
or
mov
push
dec
mov
mov
jge
or
out
pop
add
push
dec
imul
cs
ja
insb
je
stos
ljmp
push
sub
pop
fiaddl
enter
loopne
lahf
lea
add
push
and
pushf
test
mov
and
bound
cmpsl
mov
incb
jecxz
imul
imul
dec
cmp
inc
aad
or
pushf
call
movsl
and
ljmp
mov
dec
sub
jnp
jo
pop
lock
and
lods
sbb
pop
iret
or
pop
pop
mov
fnstcw
out
iret
popa
pop
out
imul
into
jecxz
adc
cmp
fcoml
mov
fs
aad
inc
insb
js
js
pushf
or
outsb
outsl
sbb
stos
jp
and
pop
and
shr
fcompl
sub
push
xlat
sarl
sub
sub
xor
loop
sarl
cmc
fsubs
mov
inc
sbb
insl
fwait
cld
add
add
lds
xchg
cmpsb
into
add
fsts
adc
out
sub
ret
xlat
lret
mov
cmp
dec
ljmp
stos
cld
mov
inc
cmp
iret
inc
mov
jg
hlt
sub
cmc
imul
push
loopne
testl
repz
les
and
adc
push
add
and
int3
ficomps
and
xchg
je
dec
shl
lea
add
loopne
add
adc
sbb
cmc
mov
push
sbb
bound
dec
lods
mov
imull
shlb
and
fadds
mov
lock
and
push
push
in
inc
xchg
jp
inc
ret
outsl
icebp
rcrb
cmp
test
outsb
in
int
in
movsb
inc
ljmp
cmp
xor
je
mov
cs
into
shrl
rcrb
inc
nop
jb
cmpl
loopne
push
dec
jnp
aad
sub
and
mov
mov
xchg
shlb
fiadds
addr16
mov
cmp
hlt
pop
mov
add
dec
mov
out
mulb
aam
inc
incb
das
cmp
pop
dec
testl
lcall
rcll
xchg
jb
jno
xchg
push
cmp
lds
sub
sub
lret
das
aad
sbb
dec
stos
loop
mov
outsl
xor
ljmp
bound
loop
xor
shrl
jns
mov
cmp
xor
dec
inc
push
or
out
adc
sbb
rol
cmp
loopne
js
pop
or
shlb
dec
mov
and
dec
xor
sub
int
cmp
cltd
inc
xchg
daa
push
and
fldt
add
insl
mov
loopne
scas
xor
xchg
dec
cmc
inc
jnp
mov
inc
xor
push
insb
or
std
mov
sub
out
in
lods
aad
dec
popa
cmp
add
mov
inc
sbb
xchg
cmp
dec
ret
imul
add
mulps
icebp
pop
push
jecxz
out
into
fisttps
sti
lret
arpl
leave
in
xchg
dec
sbb
jmp
inc
dec
mov
jp
mov
aas
dec
or
arpl
fnstcw
inc
xchg
and
jecxz
jle
jmp
inc
into
push
out
fsubrs
shrl
shll
fnstsw
lock
int
add
pop
loope
jnp
movsl
sbb
jmp
mov
xchg
enter
mov
ror
lahf
test
jae
sahf
push
lcall
sbb
xchg
and
xlat
pop
dec
fwait
imul
push
scas
inc
aad
lahf
mov
add
rcl
sbb
imul
mov
inc
dec
cmp
mov
xchg
out
lods
cltd
insl
cmpsb
or
or
xchg
fcom
test
push
outsb
dec
add
xchg
or
cld
pop
popa
fidivrl
ds
mov
jge
pop
xor
adc
lods
hlt
in
enter
xor
jo
cmp
das
hlt
inc
js
aam
inc
scas
adc
inc
push
push
movsb
cs
pushf
mov
sbb
cmpsb
loopne
pop
xor
and
jb
jnp
shlb
es
test
cld
add
add
shl
fsubs
sub
mov
call
adc
dec
mov
mov
and
jo
test
lds
test
je
stos
cltd
rcrl
in
in
cvtdq2ps
sub
pop
test
push
aas
adc
jp
lea
test
lods
fistpl
lahf
push
mov
and
ss
lahf
xchg
in
jne
add
sub
das
pop
pop
mov
mov
pop
pop
push
inc
push
lods
and
aad
aas
int
movsl
loopne
adc
add
sbb
dec
pop
cmc
das
dec
cmpsl
popf
mov
inc
and
push
ret
roll
push
fidivrl
sbb
cmp
adc
gs
cmp
pop
in
add
inc
fwait
out
add
lods
repz
xchg
repnz
pop
mov
jb
insb
adc
cli
dec
jle
gs
jns
cmc
xchg
xor
lret
stos
xchg
cmc
in
xchg
int3
cs
out
shll
push
xor
pop
inc
pop
cmc
jg
lea
adcb
push
xchg
dec
sbb
mov
add
mov
in
sahf
xchg
das
lods
cmp
mov
lock
fcoml
mov
addb
imul
dec
pop
test
fnsave
jno
pop
push
scas
cli
push
sti
sub
mov
xrelease
rorl
push
cwtl
adc
mov
shlb
inc
push
insl
daa
and
push
push
sbb
mov
push
scas
pop
push
fwait
or
and
fstps
mov
jmp
gs
adc
xlat
ds
mov
fnstcw
adc
inc
mov
cmpl
cwtl
cld
scas
stos
movsb
adc
adc
xor
pushf
std
add
xorl
int3
jge
mov
dec
xchg
sbb
std
ficompl
fs
jge
pop
addb
sub
lea
mov
lods
jnp
std
xchg
ret
mov
xor
iret
icebp
jg
cmp
push
and
adc
sti
sub
fwait
out
inc
lret
push
fidivs
push
in
xchg
jbe
or
sub
nop
jmp
hlt
add
add
jl
xchg
rorl
cs
mov
xchg
push
and
pop
dec
jns
push
xchg
add
and
sbbb
cmpsl
jb
fadd
addr16
jnp
sbb
and
lods
sbb
lods
dec
inc
ljmp
dec
and
dec
mov
sbb
sbb
in
mov
jmp
test
loop
fimuls
es
xor
inc
inc
cmp
cmpsl
popa
mov
push
cmp
xchg
xchg
mov
addr16
xor
shl
pop
mov
nop
or
mov
add
loope
icebp
dec
mov
cmp
lcall
xchg
add
cmp
mov
out
loopne
ja
push
arpl
pop
in
xor
shrl
pop
sub
js
pop
movsb
dec
or
inc
loope
clc
mov
jmp
pusha
xchg
pop
dec
aad
stos
fnstenv
sbb
arpl
int
cltd
daa
ljmp
imull
push
leave
mov
fwait
movsl
ret
xor
push
test
ja
add
xlat
sub
mov
sub
lock
aad
loopne
dec
daa
mov
dec
xor
pop
inc
push
push
add
outsl
adcb
mov
jno
stos
pop
xchg
sub
insl
insl
push
xor
or
pop
pop
aam
jle
jecxz
or
repnz
arpl
cs
sub
hlt
inc
xchg
xchg
inc
testl
push
adc
in
int
add
ds
pop
lea
andb
jbe
cld
inc
xor
repnz
out
idivb
mov
pop
xor
addr16
insb
sub
lret
loopne
push
or
pop
mov
loope
sar
aaa
push
push
jns
shrl
cmp
or
push
mov
pop
rep
out
sub
in
jge
aas
mov
jae
or
mov
mov
cmpsb
dec
cmp
inc
stc
mov
mov
mov
repz
xor
xchg
and
fcompl
mov
addr16
btc
dec
or
inc
clc
xor
arpl
jl
sub
and
icebp
lahf
sub
insl
mov
push
cmp
push
push
shrl
and
pop
fwait
add
sub
fsts
add
nop
ljmp
insl
xor
fwait
or
adc
shll
mov
pop
mov
add
push
test
sbb
dec
inc
push
sbb
leave
das
and
jmp
inc
push
int
jecxz
add
ds
pop
jg,pt
jmp
and
stos
rcll
dec
popf
pop
cli
lods
enter
das
mov
xchg
mov
push
ljmp
inc
add
adc
pop
xlat
sti
dec
sbb
add
jecxz
paddd
mov
leave
push
jecxz
push
sub
cmp
inc
call
lods
stos
lds
test
and
into
ja
add
into
out
jl
sub
mov
stc
aam
insb
dec
movsb
ljmp
test
mov
int
out
ss
dec
mov
mov
les
xor
pop
inc
push
out
ret
icebp
sti
mov
mov
lahf
adc
xchg
repz
lods
bound
cmpb
pushl
imul
cmp
cmc
dec
push
cltd
sbb
mov
sub
sub
scas
add
enter
xor
fimuls
rcrl
insl
mov
inc
cmp
or
adc
and
and
mov
cmp
push
int3
out
sub
data16
and
sub
sub
clc
lods
sbb
jmp
mov
push
dec
and
mov
mov
mov
xchg
pop
jge
mov
js
iret
aas
adc
mov
inc
jge
inc
mov
jae
push
mov
int
mov
mov
or
aaa
pop
cltd
push
rorb
cmp
mov
imul
or
push
or
fcomps
repz
xchg
out
xchg
rcll
nop
dec
mov
sbb
in
or
pop
push
jae
jl
push
es
push
out
insb
sahf
js
or
std
adc
lods
dec
aam
pop
movsl
in
pop
stos
push
mov
repnz
lods
cs
ret
sarl
test
enter
fisttps
lret
cwtl
sbbb
mov
cmc
xor
popa
imul
lcall
or
xchg
pushf
and
push
cmp
sarb
aaa
mov
jb
sub
fildl
and
jecxz
and
xlat
jb
add
subl
and
filds
iret
or
in
or
add
push
mov
cli
mov
cmp
invd
pop
lret
mov
jecxz
and
or
dec
adc
fldl
sahf
sarb
jae
cmp
outsb
in
mov
fidivs
inc
cmp
push
leave
mov
pop
movl
adc
aam
sbbl
and
insb
push
mov
jns
adc
push
incb
fadds
mov
iret
or
fisttpll
std
in
sub
lods
shll
out
cmpb
addb
call
and
aad
and
adc
out
sti
lahf
cmovb
lret
daa
and
xchg
test
add
jbe
adc
leave
xor
jge
jge
cld
cmp
mov
data16
dec
inc
fidivs
mov
jge
xchg
iret
adc
push
dec
frstor
pop
inc
movsl
mov
mov
daa
xchg
xchg
or
mov
and
cmp
mov
addr16
icebp
sahf
gs
add
lods
pop
dec
test
subl
int3
cmp
loope
and
sti
pop
inc
aaa
aaa
movsl
cmp
fnstsw
jecxz
sahf
lret
insl
adc
and
sahf
cld
jle
cli
aad
cmp
jo
fwait
mov
mov
cmpsb
xchg
mov
les
fadds
or
inc
call
and
cmp
into
cmp
mov
popf
push
cmp
imul
cld
adc
or
repz
xchg
fs
fimuls
mov
rolb
pop
sbb
push
call
mov
push
xor
xchg
or
dec
mov
sbb
or
ret
inc
adc
sub
xchg
mov
sbb
cmp
cwtl
and
pop
jecxz
js
test
loope
fisubs
push
scas
int
push
sti
fcmove
test
pop
data16
rcll
fadds
fsubp
xor
inc
sbb
inc
jae
xchg
sub
or
pop
push
push
sub
jne
leave
pop
int3
sub
and
aad
cmpsb
rcrb
inc
negl
lahf
mov
das
xchg
push
cmp
mov
pop
sbb
or
inc
mov
sbb
xlat
xchg
sbb
insb
popf
mov
mov
mov
fdivrs
push
subl
test
out
jae
fldenv
cwtl
cld
nop
fisubrl
loopne
xchg
pop
xor
jae
mov
aas
fbld
fdivrl
cmp
dec
pop
mov
call
dec
sbb
inc
mov
mov
mov
rcll
call
lods
or
loop
pop
xchg
ljmp
pop
add
test
fsts
xor
xor
cli
pop
inc
inc
loop
jne
xchg
imul
cmp
mov
push
or
loope
rorl
cmpsl
pop
jmp
outsl
insl
xchg
xchg
jnp
outsl
xor
lea
jno
and
pop
ret
xchg
push
out
adc
push
and
into
add
and
out
or
xchg
jae
mov
out
push
dec
push
leave
out
add
push
dec
inc
lods
enter
mov
and
inc
jno
inc
push
movd
mov
jbe
mov
fisubrs
xchg
push
add
shll
scas
std
fcomi
xor
test
movsl
sub
cmc
sti
pop
push
shll
inc
dec
xlat
hlt
call
mov
pop
movsl
fmul
xchg
int3
cmpsb
push
in
lds
inc
xor
call
mov
ret
mov
dec
cmp
in
mov
ret
or
xchg
sbb
push
cmpsb
add
mov
xchg
adc
aam
outsl
inc
dec
or
and
cltd
mov
pop
or
les
or
cmp
insb
mov
xlat
cmpb
push
cmp
inc
out
lea
ds
mov
jb
mov
movsl
aas
mov
scas
add
movsl
imul
mov
add
repz
fcoml
fwait
sarb
fbstp
dec
out
sub
push
or
jg
cmp
pop
or
or
fwait
in
out
cltd
jnp
inc
adc
dec
fistl
and
into
xor
xor
xchg
jno
rcll
jecxz
push
fiaddl
mov
fst
jns
cmpsb
jl
mov
dec
push
cmp
add
mov
mov
pop
adc
outsl
sldt
aaa
push
frstor
lods
jae
sub
inc
adc
sarb
add
or
rcl
mov
popa
outsb
out
out
das
xchg
movsb
movsl
stc
add
aam
pop
mov
jmp
or
dec
mov
js
adc
lods
fucom
push
pop
fmull
mov
sbb
test
pop
jecxz
mov
addr16
jmp
adc
cld
pop
and
add
xchg
enter
xor
int
fbstp
xchg
in
stc
jbe
in
cmp
inc
es
pushf
notl
mov
mov
pop
xchg
sub
test
faddl
and
push
aam
xchg
push
dec
pop
fildl
adc
push
decl
pusha
mov
jecxz
andb
into
rorl
gs
xor
rcrb
pop
dec
push
push
adc
mov
scas
add
inc
mov
sub
jle
sbb
ficoml
ret
lret
mov
leave
div
xchg
jne
and
into
hlt
push
out
lock
adc
ror
mov
decl
inc
add
lds
lods
mov
cwtl
lds
enter
cmp
cs
sub
repnz
and
adc
movb
sbbl
stc
lods
mov
repnz
mov
sbb
fdivs
xchg
cltd
pop
add
mov
leave
insb
mov
jnp
popf
cli
fwait
xchg
mov
mov
lea
push
dec
bound
fistl
xchg
sti
sbb
cmc
imul
les
and
mov
xor
fdecstp
mov
lods
jns
insl
imul
push
adc
or
xchg
jns
and
lea
scas
lods
icebp
mov
or
push
mov
fcom
push
divb
mov
sub
mov
inc
xchg
mov
add
mov
gs
frstor
fidivrs
enter
stos
and
rcrb
fisttps
ds
mov
adc
in
stc
pop
int3
mov
in
cmp
rorb
call
push
jp
insb
leave
inc
push
push
popa
mov
popa
xchg
inc
push
sahf
add
in
xchg
mov
test
and
mov
mov
xchg
pusha
repnz
insb
in
or
stos
aad
aaa
aam
in
mov
fidivs
mov
or
decb
adc
adc
sbb
xor
sub
jae
cmp
cmp
popa
xchg
test
inc
cmp
les
js
sub
mov
cli
subb
test
decl
ja
xor
dec
jbe
iret
push
fsubrs
test
mov
movl
std
or
xor
arpl
push
enter
test
rsqrtps
mov
fcomip
je
jbe
xchg
mov
sub
xchg
addl
insb
xlat
add
mov
orb
mov
rcll
out
lahf
jns
ror
repz
rcll
cmp
xchg
pop
mov
int
or
mov
jp
loopne
jb
sbb
jo
ret
ret
rorb
cmp
inc
sbb
fmuls
fisubrs
testl
fdiv
loope
jae
setp
mov
push
mov
sub
cmp
fucomp
xchg
jge
jno
xor
xchg
int
loop
mov
out
jb
lea
push
xor
les
loope
stos
inc
out
inc
ds
popa
and
jbe
jmp
push
cmp
or
push
xor
pusha
add
mov
inc
ficoms
adc
mov
push
add
loop
jp
xlat
lret
inc
imul
test
push
int
cmp
mov
ds
push
add
pusha
jecxz
sbb
mov
clc
call
fsubr
test
jg
adc
pop
push
or
pop
icebp
clc
mov
or
shrl
test
test
dec
pop
adc
lods
dec
inc
ljmp
out
aad
lds
adc
jecxz
int
mov
iret
int3
push
mov
je
pop
adc
dec
lds
stos
xor
xor
lods
movsb
shll
fbld
nop
inc
imul
je
fs
mov
lcall
aam
jmp
leave
mov
daa
mov
aas
rcrb
jnp
or
push
sub
pushf
jp
pxor
inc
test
stc
fs
int3
push
out
xor
popa
rcl
rorl
ret
and
popf
inc
and
xor
sub
and
orb
mov
push
inc
dec
push
std
insb
fnstenv
scas
push
xor
or
jns
mov
inc
mov
sahf
inc
cmp
lahf
out
daa
xchg
std
xorb
pop
repz
dec
jo
fimull
ret
lock
xor
xchg
push
cltd
cltd
cwtl
rorb
sbb
aaa
add
jns
xlat
or
inc
outsl
ljmp
lahf
mov
shll
cld
inc
lods
icebp
and
int
das
in
movsl
andb
adc
int3
enter
outsl
jmp
sub
lahf
in
xor
js
into
and
andl
add
mov
pop
lea
scas
push
push
sbbl
rolb
js
mov
loopne
mov
movsl
adc
inc
sub
jmp
dec
scas
lahf
das
jp
scas
daa
loop
popf
inc
xchg
dec
scas
cmp
loopne
sub
pop
mov
xor
mov
shl
adc
dec
lret
adc
rol
or
xchg
je
and
xchg
mov
unpckhps
cmp
fdivr
int3
mov
out
out
popf
outsb
addr16
frstor
inc
sub
pop
test
movsl
sbb
stc
cmp
lods
aaa
push
pop
lret
dec
jns
fldt
inc
xor
cmp
push
push
dec
ljmp
popf
cltd
outsl
sub
fwait
and
lods
xchg
mov
popf
sub
movsb
mov
adc
xchg
inc
adc
dec
push
into
popa
cli
dec
mov
aas
movsb
xorl
lea
or
add
mov
test
repz
xlat
shll
int
stc
inc
icebp
xor
pop
clc
push
js
mov
jno
rdmsr
lea
and
mov
fs
sbb
loopne
hlt
push
sub
and
ret
sahf
fdivr
sub
cmp
sbb
dec
push
or
cmp
in
movaps
add
xchg
sub
add
insl
addr16
dec
fadds
pop
inc
cmpl
ffreep
push
push
adc
adc
xchg
push
pop
shrb
testb
xlat
out
insb
frstor
xor
sub
roll
daa
mov
add
mov
lret
adc
inc
jns
out
ja
int3
xchg
push
test
js
lahf
mov
sbb
int3
dec
cwtl
hlt
movsl
add
out
test
and
lahf
leave
in
sub
pop
out
mov
pop
pop
mov
jne
xchg
mov
mov
inc
xchg
push
fxch
movl
mov
pop
mov
xchg
mov
cmc
mov
shrb
jae
xchg
sub
lahf
xlat
sbb
mov
je
pop
xchg
loope
mov
pop
loopne
stos
in
icebp
aad
clc
sbb
into
mov
or
hlt
call
or
push
add
adc
push
fcom
push
mov
test
jle
out
adc
dec
jg
popa
scas
dec
adc
push
lds
push
loope
or
test
loope
fnstcw
sbb
jge
dec
xor
jle
push
pushl
xchg
pop
mov
out
std
push
outsb
fisubrl
pop
mov
xchg
jae
stos
mov
cld
push
insl
inc
jge
dec
push
insl
jecxz
adc
outsb
cmp
sahf
sarb
test
das
mov
lret
sbb
dec
adc
or
lret
dec
test
and
inc
loop
xor
out
stos
dec
in
test
stc
lret
popf
sbb
sbb
sub
ret
iret
jecxz
loope
inc
int3
xchg
xchg
test
sbb
mov
fmull
mov
js
jb
loopne
sub
inc
and
movsl
push
and
pop
xor
stc
jmp
int3
scas
sahf
adc
mov
push
jbe
imul
out
movsb
jae
fmuls
sbb
lret
mov
xor
push
mov
dec
lcall
sub
jl
and
loop
pop
dec
mov
arpl
pop
sbb
fstps
es
movsb
xor
fstps
push
adc
das
mov
pop
lcall
mov
shr
shlb
aaa
out
jmp
mov
insl
rcrb
xorb
xor
cld
push
ds
sub
mov
stos
test
stos
xor
or
jmp
sbb
sti
xchg
out
inc
xor
sbb
in
jb
xor
mov
push
scas
xlat
adc
xor
leave
out
hlt
mov
in
cmp
movsb
push
xchg
into
imull
scas
negl
cmp
scas
or
pusha
outsl
sbb
xchg
out
push
and
shrb
push
sub
mov
pop
jl
pushf
sbb
test
lret
cmpsb
imul
xor
stos
pop
xor
jecxz
pop
outsb
xchg
rclb
sbb
mov
dec
lods
sahf
xor
push
jle
bound
cmp
mov
notl
imul
inc
add
xor
mov
notb
add
and
add
mov
xchg
movsl
jecxz
pop
sbb
lds
pop
dec
lea
jmp
bound
dec
pop
call
lret
jns
pop
sbb
ljmp
into
or
sbb
fwait
push
mov
inc
push
inc
xchg
mov
xor
mov
mov
in
add
aaa
loope
xchg
push
and
lahf
shll
mov
cmp
mov
inc
les
lock
or
adc
fbld
ljmp
push
jge
jl
shrl
mov
pop
aas
or
push
push
and
push
adc
les
inc
push
shlb
aas
inc
popl
idivl
adc
sbb
push
stos
push
ficoml
insl
mov
lcall
jns
rorb
subl
pop
stos
jle
pop
aas
adc
push
stos
pop
adc
xchg
call
push
arpl
add
das
add
ja
push
dec
xor
int
mov
xchg
or
insb
pusha
push
lcall
imul
or
dec
outsb
popf
mov
pop
pop
daa
imull
aaa
or
adc
mov
jns
jp
sub
mov
decb
mul
mov
mov
or
fcomps
loop
push
ds
mov
or
or
push
bound
pop
cmpsb
jmp
enter
dec
sbb
divb
aaa
shrl
int
fisubl
sub
icebp
fiadds
jnp
scas
sarb
mov
aaa
mov
dec
xchg
mov
inc
jp
out
enter
inc
push
fsub
lcall
xor
adc
fcomps
std
sub
mulb
mov
jae
fcmove
fistps
daa
pop
loopne
insl
shll
pop
std
popf
divl
push
fdivrp
call
out
xchg
mov
mov
aas
lea
out
and
push
ret
sub
sbb
jp
ret
pop
cmp
gs
movsl
push
daa
aad
int3
loop
inc
jle
sub
insb
jmp
jne
lods
xor
push
repz
lea
pop
lods
mov
out
out
dec
add
mov
leave
push
fst
jae
adcl
repz
clc
jo
les
sbb
cmp
dec
lock
sahf
test
mov
hlt
xor
jmp
pop
out
push
jne
xor
lret
jbe
mov
sub
sbb
out
lcall
cmpsl
pop
mov
sub
test
orb
jl
enter
and
call
lahf
pushl
pop
ret
mov
imul
sub
mov
sub
mov
test
xor
movsb
xor
adc
xchg
cmp
jmp
movsl
rorb
es
push
inc
xor
outsb
push
sbb
jmp
test
inc
add
movsl
jl
pop
addb
fsub
mov
jbe
inc
jmp
sub
push
scas
xchg
inc
mov
repz
arpl
dec
in
dec
inc
repz
mov
fildl
cmpl
sub
mov
popa
mov
ficoms
jge
adc
insl
ret
mov
fadds
mov
and
jl
sbb
xchg
and
xchg
dec
xchg
jo
sahf
loope
mov
cltd
dec
pushf
push
jle
inc
jne
push
cwtl
insb
cmp
pop
sub
pusha
js
cmp
xchg
cli
jge
mulb
andl
out
jo
xor
mov
in
push
icebp
and
fisubrs
cmc
jnp
jge
fnsave
jge
xchg
dec
vsqrtps
dec
xchg
jge
mov
add
ficoml
sbb
inc
js
xor
or
ficompl
fidivrs
mov
iret
mov
fists
sbb
out
sub
enter
hlt
and
insl
adc
mov
mov
or
mov
pusha
das
dec
adc
shll
stos
movsb
dec
push
inc
mov
adc
loope
cmpb
outsb
ljmp
loopne
in
cli
dec
movsb
push
or
mov
pop
dec
addr16
lock
sbb
inc
js
hlt
adc
pop
lret
or
push
pop
fadd
sbb
test
mov
jmp
sub
add
pop
lcall
lahf
mov
mov
scas
dec
scas
inc
cmp
adc
adc
movsl
pop
adc
je
add
cmp
cmc
aaa
sbb
xor
pop
clc
ret
add
push
jae
cmc
lret
add
jbe
mov
cmp
out
pop
test
xchg
icebp
movsb
test
loope
fbstp
leave
cmp
dec
pop
push
or
xchg
lahf
mov
into
jbe
jno
xchg
imul
adc
nop
xor
push
sub
ljmp
lds
leave
jbe
sub
inc
inc
subb
sub
dec
add
in
lret
or
or
sbb
enter
cmpsl
mov
inc
out
fists
insb
mov
hlt
sbb
test
jle
mov
clc
inc
imul
xchg
sar
sbb
bound
jne
sub
outsl
cmp
int
push
jns
stos
dec
inc
push
sbb
sbb
push
or
pop
sarb
add
mov
inc
jp
and
fwait
icebp
pushf
jecxz
and
cwtl
adc
sbb
in
nop
push
orl
aam
mov
lcall
cwtl
dec
mov
fs
xchg
inc
movsb
icebp
in
and
and
aad
in
fsubrl
sub
xchg
mov
leave
push
dec
test
jp
fdivp
dec
fadds
mov
xchg
pushf
jmp
iret
sbb
jle
out
adcl
dec
fisubl
jge
sub
dec
shr
out
mov
adc
xchg
push
hlt
push
lret
pop
hlt
and
les
jnp
mov
sub
jne
jp
aaa
or
sub
rorb
loopne
mov
cmp
pop
repz
cld
inc
xor
test
mov
inc
push
add
and
pop
fdivrl
stos
cwtl
xor
pop
stos
mov
pop
fiaddl
xchg
push
mov
add
sub
push
in
cmp
ljmp
rolb
xlat
inc
mov
push
test
test
pop
fbld
inc
rcr
push
pop
pop
icebp
iret
lahf
adc
xor
jl
sbbl
push
repz
mov
repnz
imul
pop
pop
imul
in
push
sbb
xor
and
fbld
inc
sbb
ret
jbe
sarl
call
xchg
push
push
fisttpl
jp
ljmp
add
xchg
stc
bound
jno
xor
inc
daa
jae
inc
xchg
arpl
lods
pop
dec
arpl
jmp
into
cmp
leave
cmp
fbstp
inc
loop
pop
mov
aad
mov
jae
or
enter
stos
bound
in
cmpl
loop
fs
mov
stos
mov
test
cmp
aaa
pop
add
nop
dec
out
into
xlat
pop
mov
lea
lcall
sbb
cmp
shll
in
inc
push
mov
dec
push
jmp
push
push
cmp
pop
pop
dec
nop
push
icebp
jo
sbb
dec
inc
dec
xchg
mov
movntq
sti
jg
mov
out
push
fwait
sahf
popa
pushf
push
cmp
rorl
hlt
pusha
inc
xchg
add
rolb
leave
int
je
enter
and
fldl
dec
fdivl
add
scas
push
mov
jecxz
pop
loop
add
add
mull
sub
xchg
lcall
loopne
out
xor
sub
jp
flds
sub
lret
jge
xchg
dec
sti
enter
xchg
mov
or
int
pop
cmpb
cbtw
pushf
and
lea
stos
out
jne
jns
xchg
mov
pop
fsubrs
in
sbb
enter
pop
test
add
adc
or
mov
pop
xchg
pop
cltd
daa
xchg
mov
ss
int3
cltd
inc
loope,pn
lock
sbb
imul
mov
and
cmp
push
imul
and
and
ja
xchg
out
push
pusha
mov
pop
push
cltd
mov
sub
push
sub
outsl
negb
mov
lods
loopne
jno
aaa
movsl
aad
jecxz
nop
sti
jmp
add
loop
lock
inc
fcmovbe
aaa
jle
out
cmpsl
push
test
in
lahf
pop
dec
gs
xor
ret
pop
icebp
or
cs
pusha
movsb
test
mov
sbb
inc
push
cmp
push
adc
pop
imul
lods
mov
dec
fcomps
sahf
xchg
clc
xchg
test
fcmovnu
pop
outsb
mov
add
imul
arpl
mov
lods
add
xor
adc
mov
push
pop
cmpsl
jae
adc
mov
pusha
test
or
insb
stc
push
test
mov
jmp
ret
pop
jp
mov
jnp
fwait
push
test
arpl
mov
inc
mov
jno
sbb
cmp
mov
xor
sbb
push
jbe
js
ljmp
test
cs
fidivrs
jno
call
or
pop
fimull
mov
out
pop
push
cld
pop
sub
lea
mov
je
cwtl
mov
or
clc
std
stc
jg
addr16
gs
cltd
mov
inc
jmp
mov
lock
repnz
js
icebp
lods
std
enter
sub
scas
xchg
dec
mov
adc
jle
jb
and
xchg
add
rcl
pop
scas
and
in
rclb
mov
mov
dec
lret
inc
or
neg
aas
into
cmp
test
cwtl
add
xchg
sbb
pop
aam
jno
sar
stos
or
and
inc
dec
fwait
lahf
loop
pop
cmp
mov
sbb
test
jle
xchg
dec
mov
jnp
inc
or
mov
cli
aad
sbb
and
filds
push
loopne
mov
push
outsb
xchg
movsb
in
das
cmpsb
xchg
stos
insl
cwtl
add
lock
pop
push
xor
ss
in
ss
and
push
std
ljmp
pop
sbb
and
jns
mov
pop
in
inc
repnz
fs
or
loop
adc
fdivs
movsb
or
popf
lcall
xor
and
jmp
push
mov
mov
movsb
push
mov
xchg
xchg
jle
add
mov
dec
jnp
and
adc
xlat
sub
rorb
inc
mov
xchg
xor
mov
andl
pop
shll
push
pop
xchg
jbe
pop
or
mov
nop
adc
dec
ss
or
jl
jnp
adc
push
mov
sub
insl
fs
jp
xchg
and
xor
pushf
outsl
outsl
fidivrs
cld
xlat
jae
lock
repz
pop
frstor
or
mov
lcall
cltd
aam
daa
mov
iret
and
aaa
imul
jp
cld
inc
or
jnp
mov
xchg
jns
jecxz
mov
xor
xchg
mov
ds
xchg
pop
and
add
dec
add
arpl
adc
inc
clc
push
ret
adc
cli
hlt
jnp
iret
lret
xor
mov
pop
push
add
sub
fldcw
jle
mov
mov
dec
pop
shrd
mov
pop
dec
int
adc
cmp
in
push
cltd
push
fsubs
dec
cmc
stos
andl
dec
imul
mov
imul
inc
jb
shll
fisttpl
movsl
cmpsb
cltd
stc
flds
ret
pop
push
jle
or
mov
push
shlb
ficompl
out
not
divl
arpl
mov
and
pop
lret
or
shl
pop
jo
cld
dec
enter
xor
icebp
mov
loope
shlb
gs
xor
repnz
fs
jmp
stos
rolb
push
loopne
hlt
sti
sbb
fsubr
mov
repnz
les
mov
xlat
jmp
pop
adc
repz
frstor
cltd
push
lods
mov
rclb
int3
nop
int
ror
xor
xchg
pop
stos
js
add
daa
inc
lret
data16
pop
sbb
jnp
dec
cmpl
dec
sub
mov
test
inc
xor
fbld
loope
cltd
inc
cwtl
imul
inc
into
test
jecxz
sbb
cmp
mov
sub
bound
cmp
inc
aam
lea
bound
add
jnp
test
and
xor
mov
icebp
shll
xchg
jecxz
lcall
psubw
sbb
loop
cwtl
and
ds
add
or
arpl
mov
cmp
cmp
imul
mov
or
gs
dec
adc
icebp
pusha
and
cmp
lahf
leave
xchg
addr16
push
and
jnp
lds
lret
dec
mov
cmpsl
adc
jno
fucom
push
loope
pop
add
sub
nop
sti
lock
push
lock
loope
setbe
arpl
bound
mov
ss
dec
pop
mov
push
ds
jb
lcall
pop
mov
rcrl
push
lock
xor
jl
call
pop
push
iret
mov
sti
in
addr16
incb
and
das
inc
inc
cld
adc
pop
in
aad
adc
loopne
nop
mov
dec
mov
pop
jo
xor
sub
inc
jecxz
cld
jmp
repz
mov
or
pop
sbb
fisubrs
jp
dec
aas
and
push
lods
sbb
das
mov
fs
decb
ljmp
test
mov
inc
cltd
dec
inc
and
cmp
mov
xchg
dec
cmp
repnz
bound
movsl
adc
les
cmp
ljmp
test
adc
fdivrl
lods
ds
jae
shlb
and
lods
shrb
sbb
dec
rorl
enter
xchg
fsubs
add
sbb
jl
xor
in
repz
bound
in
mov
sbb
ljmp
arpl
fistps
xchg
sti
mov
sti
xor
mov
mov
dec
stos
repnz
mov
scas
mov
inc
imul
pop
and
aad
pop
test
data16
mov
daa
sahf
sbb
xchg
and
pop
and
dec
je
popf
mov
pushf
das
psubd
fld1
push
jle
je
sub
addr16
into
and
mov
add
push
rcrl
lods
sahf
movsl
arpl
fwait
mov
cmp
jle
cmpsl
aaa
movl
xor
mov
lret
push
dec
or
mov
mov
and
mov
xlat
pop
psllw
test
andl
and
mov
push
int
insl
repz
lea
imul
pop
pop
stc
mov
sbb
in
popf
sar
cld
mov
in
idiv
test
push
pop
ja
pop
mov
jbe
es
dec
int
push
cmpb
xchg
je
movsb
arpl
pop
pop
adc
mov
mov
sbb
jne
xchg
lret
out
inc
leave
push
xor
in
and
fs
ljmp
mov
ret
fidivs
jnp
sbb
push
sbb
push
or
cmp
push
pop
pusha
rclb
and
sub
fidivs
cld
loopne
shll
and
and
fstps
mov
cmp
inc
stos
movsb
push
xchg
insb
sti
aad
inc
sub
mov
fisubrl
test
movsb
xchg
add
cmp
ret
add
push
hlt
ds
add
sti
loope
jmp
inc
daa
mov
movsl
cmp
xor
lods
mov
mov
lock
int3
fsincos
in
push
shr
js
xchg
addr16
mov
je
cmp
test
fwait
cwtl
jecxz
jnp
in
subb
stos
xlat
sbb
ja
repnz
stos
pop
bound
push
pop
call
insl
call
jl
movsl
cwtl
adcl
fs
and
sub
into
push
icebp
dec
mov
loope
cmpsb
adc
sub
lods
cmc
hlt
fldcw
sbb
and
or
jle
xor
xor
sub
inc
adc
mov
inc
cmp
cmp
scas
xchg
std
and
inc
or
mov
jmp
divb
pusha
fcompl
addr16
jno
push
adc
rcrb
rorl
adc
jmp
mov
or
shrb
js
int3
pop
pop
sbb
in
int
fmul
pop
stos
leave
outsb
mov
mov
aam
pop
dec
andb
pushf
pop
cmp
in
fdivrp
mov
xchg
into
mov
inc
nop
nop
lcall
test
rcrb
pushf
mov
dec
ljmp
xor
daa
addr16
lods
mov
shlb
ror
outsl
xchg
pop
loopne
mov
cmp
pusha
xlat
sbb
cmp
rcll
mov
and
movsl
notb
adcl
negl
cld
adcb
jle
stos
repnz
xchg
or
loop
andl
inc
mov
xchg
daa
scas
insl
push
inc
push
es
inc
fs
movsb
pop
adc
xchg
cltd
cli
outsl
lock
insl
xchg
fiadds
bound
xchg
fs
mov
shrb
cmp
jns
das
lea
loopne
cmpsl
xor
mov
in
push
dec
out
daa
inc
outsl
and
pushf
xor
hlt
pop
lock
aam
xchg
jb
mov
xchg
add
or
je
xchg
lods
in
lret
int3
xor
insl
shlb
lret
mov
sub
mov
gs
xlat
mov
scas
jno
dec
mov
sub
push
jno
inc
sbb
lea
push
test
cmp
js
iret
jb
stc
sbb
cmp
aad
pushl
out
and
aaa
insb
mov
int3
dec
jmp
leave
xor
dec
adc
psrld
stc
mov
jg
mov
mov
xchg
scas
push
fistpl
cld
jle
or
pop
jecxz
hlt
rorl
xlat
out
lods
mov
cld
js
andl
lods
test
jg
adc
outsl
pop
push
mov
sbb
xor
xchg
jbe
pop
js
xlat
dec
mov
adc
rolb
fsubr
ja
jp
scas
push
xchg
ljmp
std
leave
fsubl
dec
hlt
jg
test
or
std
cmc
and
push
leave
mov
push
loopne
mov
inc
dec
clc
es
aad
rorl
lods
dec
repnz
and
scas
insl
add
pop
xor
xchg
loop
cwtl
or
lcall
jae
popl
insl
aam
imul
push
pop
fwait
loope
xchg
jle
jo,pt
xchg
xchg
inc
in
jae
jae
push
dec
push
int3
xor
push
pop
inc
les
jo
bound
sbb
mov
add
les
xchg
lahf
jb
xchg
testb
lea
xchg
outsl
imul
icebp
xor
mov
hlt
jecxz
cmpsl
fstps
cli
jne
stos
mov
aad
stos
inc
mov
dec
jbe
mov
mov
roll
inc
es
dec
addb
dec
ss
icebp
cmp
addr16
mov
nop
sbb
aaa
pop
pop
call
mov
mov
cmp
xor
or
cli
test
jge
jl
sbb
pop
jne
jp
mov
scas
jmp
sbb
mov
loop
mov
add
jl
icebp
fwait
mov
test
cmp
inc
fistpll
push
hlt
sbb
aaa
inc
push
ss
pushf
scas
cmp
ficompl
mov
push
outsl
addb
das
and
mov
lret
dec
dec
mov
or
pop
push
inc
in
out
rol
sbb
bound
cli
shrl
in
jne
jb
mov
pop
sbb
mov
inc
cwtl
adc
into
subb
test
call
push
or
jno
xchg
jnp
inc
and
js
in
outsb
xorb
arpl
pop
cwtl
pop
pop
insl
lcall
and
iret
lret
in
bnd
or
in
pop
inc
js
fsub
and
jo
add
cwtl
or
cld
pop
and
push
push
inc
mov
hlt
int3
cmpl
or
lcall
cmpsb
in
push
sub
mov
cltd
fiaddl
mov
daa
lods
mov
xor
inc
cmp
daa
mov
ds
test
ds
and
cs
maskmovq
outsl
jb
push
lods
scas
out
xor
mov
in
mov
outsb
pop
adc
xchg
adc
pushf
cltd
lret
or
mov
hlt
jle
mov
mov
enter
orb
mov
lods
xchg
test
mov
js
arpl
push
pop
adc
enter
dec
or
data16
mov
or
sub
xchg
add
ja
mov
pusha
rcr
adc
dec
ss
push
add
in
pusha
xor
gs
gs
ret
xor
mov
nop
xchg
mov
mov
pop
cmp
mov
dec
ljmp
cmp
and
test
mov
ss
bound
iret
sahf
jmp
mov
insb
sbb
es
dec
mov
mov
push
inc
sbb
mov
out
and
push
sbb
loope
roll
and
int3
xchg
stc
pusha
out
enter
push
lods
lock
inc
scas
pusha
push
adcb
xchg
adc
gs
into
or
dec
outsb
mov
pop
scas
aad
fbstp
fldenv
inc
lahf
rolb
andl
ret
push
push
jecxz
lahf
cld
xorl
sbb
jns
push
push
shl
ds
sub
outsb
fsts
inc
inc
add
push
sbb
orb
test
pop
fadd
push
imul
xor
dec
enter
and
test
aas
call
sub
and
cmp
inc
iret
jb
jo
pop
repz
and
pop
mov
pop
inc
pop
jl
jb
gs
or
js
dec
add
sbb
sub
ja
cmp
add
fwait
inc
or
sub
das
mov
es
jnp
orl
cmp
mov
mov
outsb
push
loopne
dec
sbb
popf
sub
xor
lods
mov
mov
dec
sub
or
loopne
and
adc
test
jp
inc
orl
imul
add
ret
in
xchg
fistl
test
push
loope
cli
sub
add
mov
movsl
mov
push
dec
js
push
jge
adc
mov
mov
xor
and
mov
into
shl
add
xchg
and
jp
popa
xchg
in
sub
push
cmpsb
mov
loopne
mov
xchg
mov
rorl
jnp
jno
imul
ds
lcall
push
add
bound
adc
or
jmp
xchg
jb
je
mov
mov
mov
push
and
shlb
or
cs
out
dec
in
jle
fdivrs
xchg
out
push
andl
mov
pop
rcll
dec
scas
lea
and
pop
sbb
xchg
fcomp
aad
add
mov
ret
outsb
sti
addb
lret
popa
and
push
test
add
jb
xchg
inc
ret
rclb
pop
out
imul
mov
outsl
stc
dec
call
addr16
cmp
mov
xor
hlt
or
insl
cmp
shrb
inc
icebp
pop
sub
pop
jne
sti
xor
xchg
in
movsl
call
push
ret
jle
test
insb
enter
mov
stos
and
mov
mov
in
or
pop
fildl
push
mov
sub
mov
jmp
int
adc
repnz
test
test
sbb
dec
fbld
jmp
punpckldq
cmp
sub
imul
push
sub
or
js
mov
out
je
push
xlat
mov
test
pop
mov
sub
lahf
push
out
in
test
fstp
pop
enter
outsb
je
lahf
mov
fwait
cmp
pop
int
popf
cmp
lcall
sahf
in
jg
sbb
stos
dec
cmpsb
ret
idivb
test
lret
sbb
inc
jecxz
pushl
jns
aam
or
lea
jp
fwait
imul
pop
into
xchg
enter
outsl
cmp
pop
dec
jbe
sub
sbb
outsl
cmp
clc
or
lea
sarl
js
pop
sti
adc
not
loop
cmp
push
popf
xorl
aas
mov
mov
xlat
cli
and
ss
sub
lahf
xor
ljmp
faddl
sub
xchg
pop
adc
mov
sub
mov
call
xchg
pop
fidivl
xor
sahf
insl
aas
pop
push
aas
mov
mov
sub
dec
sarb
jae
es
fsubrs
out
aam
pop
fcompl
mov
cmc
shrb
faddp
cmp
mov
add
sub
hlt
and
mov
dec
or
icebp
fdivl
add
inc
adc
mov
lea
cmp
dec
ret
ljmp
fiadds
pusha
xchg
inc
inc
sbb
jp
std
pusha
gs
inc
cmpsl
and
cmp
in
jne
aad
mov
cmp
inc
cli
add
js
or
inc
sbb
cmp
mov
stos
xor
sahf
loop
scas
rcl
dec
cs
push
mov
pop
mov
pop
out
pop
cmp
andb
outsb
decb
repnz
popf
jnp
mov
aaa
pusha
cmp
pop
mov
lret
rol
xchg
neg
aad
inc
jg
movswl
hlt
lock
data16
adc
or
mov
mov
cmp
repz
cwtl
inc
pop
sub
ficoml
mov
fmul
mov
jns,pt
in
pop
cmp
int
push
imul
pop
leave
dec
lcall
push
fwait
imul
dec
addb
inc
cs
lcall
rcr
xchg
into
sub
cli
push
cmp
sub
cmp
std
adc
fsubrp
call
fs
ret
mov
stos
push
lret
inc
cli
add
cmp
int3
mov
mov
shl
outsl
mov
push
jns
lock
aaa
aaa
negl
sub
and
js
mov
aas
dec
imul
imull
jecxz
inc
pushf
mov
and
out
pop
and
inc
mov
inc
cmp
in
loop
sub
daa
ret
cld
adc
and
aaa
testl
jl
push
adcb
imulb
jecxz
jo
push
ljmp
mov
jge
sahf
push
mov
mov
jno
inc
in
mov
iret
sub
xchg
xor
test
mov
inc
cli
mov
sbb
mov
mov
and
ljmp
pop
push
inc
pop
pop
xor
scas
pop
pop
jno
outsl
scas
xor
mov
int3
dec
hlt
das
sar
xchg
pop
pop
cld
mov
cmp
fisttpll
ja
lods
out
xchg
sub
lcall
and
cli
push
pause
xor
mov
adc
imul
daa
std
xchg
in
adc
jno
adc
lods
adc
inc
in
pusha
stc
rcl
push
mov
push
jbe
pop
push
push
inc
sub
lret
iret
adc
push
clc
adc
es
jmp
and
incb
push
mov
icebp
iret
pop
push
rep
aaa
popf
sub
popf
mov
push
aam
ljmp
dec
stos
aad
fidivl
orb
mov
xchg
iret
popa
movsl
mov
aad
mov
mov
jecxz
sub
cld
int3
outsl
cmpsb
mul
rol
insl
cmpsb
sysenter
cwtl
push
loope
nop
cmp
push
enter
int3
add
imul
sti
je
inc
sub
fsts
jbe
fadds
pop
xor
fdivr
sub
or
pop
mov
stos
xor
jae
xchg
sub
out
in
dec
jmp
scas
loop
xchg
leave
xchg
cmpsb
lods
fcoms
cmc
pop
idivb
lcall
jg
lea
mov
xchg
fwait
mov
mov
orl
jmp
sbb
imul
popa
nop
adc
pusha
mov
dec
xor
ja
fs
dec
in
push
lds
es
push
ds
xchg
shlb
cwtl
inc
cmpsb
movsb
xchg
lahf
mov
xchg
ficoml
jnp
stos
xlat
sub
test
stos
push
cmpsw
adcb
test
test
jp
or
addr16
scas
outsb
sbb
push
jo
loope
mov
fnstsw
pop
and
inc
scas
inc
in
cmp
imull
mov
popa
out
push
mov
cmp
xor
cmp
or
lcall
fmull
jnp
mov
lret
push
lahf
push
push
mov
ret
fstl
pop
jp
fdivrl
mov
jle
shlb
mov
inc
fs
xchg
push
inc
inc
lock
pop
xchg
xor
test
mov
filds
fnstcw
mov
ja
mov
sub
test
ljmp
dec
xor
sbb
inc
dec
sbb
lcall
or
rcrl
sub
xchg
fcmovbe
movsb
push
inc
inc
xor
mov
fdiv
adc
cwtl
jg
fwait
test
inc
iret
cmp
dec
mov
sahf
clc
data16
repnz
in
jno
xchg
push
inc
push
jns
out
cld
inc
mov
fiaddl
push
inc
mov
rcr
jno
shll
adc
push
sbb
mov
fwait
push
sahf
pop
push
pop
mov
es
in
mov
cmpsb
push
mov
movsl
push
in
mov
add
test
jo
stc
jnp
and
loop
scas
xchg
ljmp
dec
inc
jae
popa
test
add
adc
out
cwtl
jnp
js
clc
es
jbe
push
dec
jl
xchg
add
in
idivb
sar
mov
out
xchg
cmp
inc
fcomps
inc
dec
mov
mov
and
pushf
mov
and
and
test
mov
and
or
mov
out
loopne
daa
inc
ds
dec
or
xchg
inc
mov
rcrb
or
movb
loopne
xchg
inc
arpl
sbb
icebp
repz
daa
fs
mov
das
das
nop
ljmp
ficoml
pop
test
lahf
pop
mov
mov
addr16
lock
dec
sahf
push
mov
fwait
mov
dec
lcall
lcall
cs
adc
push
push
ret
adc
enter
jbe
loope
or
xchg
jns
cmp
xlat
jb
mov
mov
mov
movsl
pop
cwtl
decb
pop
idivl
ss
cmp
ss
stos
cmp
cmp
ret
cmp
sahf
jno
inc
pop
push
inc
pop
cmp
dec
xchg
inc
mov
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
mov
jmp
bound
push
insl
in
out
adc
cs
mov
add
test
push
scas
jnp
cwtl
adc
popa
mov
outsl
stos
jae
mov
ja
or
cmp
test
f2xm1
dec
sbb
orps
mov
and
mov
sub
mov
sti
push
add
xlat
test
push
ja
inc
scas
stos
mov
adc
cmp
testb
xchg
cmpsl
lea
fistl
lds
inc
sahf
sbb
ljmp
cld
fwait
xchg
jp
adc
ja
jb
lods
icebp
das
cmp
fildl
mov
and
xchg
lea
dec
xor
out
xor
imul
rorl
ja
sbb
cmp
test
or
cmp
mov
xchg
mov
fldl
out
test
call
pop
jno
xchg
push
add
nop
or
loopne
ss
mov
pusha
pushf
ffreep
rcll
dec
popf
outsb
insb
xchg
daa
dec
out
cs
mov
test
lods
sarb
mov
out
push
out
cmpsl
shll
add
in
dec
mov
mov
and
pop
popa
mov
push
mov
and
into
cltd
loopne
mov
adc
out
aas
sub
mov
test
mov
pop
cmp
jl
mov
stc
dec
push
push
add
scas
inc
aas
xor
subl
lret
icebp
ret
mov
inc
pop
sub
outsb
lret
sub
mov
mov
lds
jmp
sub
pop
mov
mov
std
hlt
ret
enter
push
std
or
adc
or
add
negb
ja
inc
xor
testb
sub
dec
jmp
or
pop
push
arpl
and
and
xor
jle
es
sbb
sarb
mov
jg
loopne
add
sbb
mov
mov
dec
jl
into
les
pop
or
sub
ret
pop
push
mov
cmp
add
mov
pop
sahf
push
test
lcall
shl
adc
and
adc
pop
xor
xchg
leave
out
add
mov
ljmp
sub
sbb
adc
lret
jg
sub
jle
push
dec
xchg
jb
inc
add
movsl
popf
xor
bound
and
xchg
jo
clc
inc
add
outsl
test
adc
cmpsl
pop
dec
jge
fmul
fucomip
addr16
popf
test
dec
push
aas
and
daa
insl
sbb
popa
popa
lea
cmp
jns
insl
or
pop
outsl
sbb
adc
pushf
jnp
out
out
cmp
sbb
dec
jno
test
sub
repz
clc
mov
xor
jge
xor
xchg
les
outsb
push
mov
sti
mov
jmp
pop
mov
out
aad
out
xchg
in
inc
jae
mov
sahf
or
push
popa
es
dec
pop
mov
call
push
push
add
scas
dec
and
mov
clc
or
repz
adc
push
ss
jbe
idivb
aad
lods
mov
add
aaa
leave
pop
jmp
or
rcrl
adc
xor
adcb
sti
popf
adc
out
mov
mov
cld
cmp
or
insb
decl
loop
gs
mov
xor
xchg
fidivrl
pop
cmp
das
fldenv
sahf
push
mov
sti
cmp
mov
pop
dec
xchg
dec
mov
pop
call
sbb
jnp
lcall
popf
mov
aam
jle
mov
cmp
stos
in
sahf
pop
ljmp
adc
stc
mov
xchg
ja
adcb
xor
out
cmpb
pop
cmp
fisttpl
add
cmp
pushf
jb
jnp
sbb
imul
pop
and
jne
and
xlat
test
test
mov
mov
mov
push
lahf
add
dec
lods
jb
xchg
xchg
insl
pop
mov
pop
ljmp
cmpsb
pop
aad
insb
push
daa
jne
fcoml
dec
and
pop
mov
mov
cmp
scas
xor
pop
shll
outsl
jmp
mov
add
aaa
daa
mov
out
movsb
cmp
lods
popf
dec
cltd
aas
repz
cli
sub
pop
movsb
clc
inc
ret
fwait
lret
aam
lods
and
sub
xchg
inc
cmp
mov
hlt
adcl
sub
xchg
les
outsl
push
mov
outsb
sbb
dec
xchg
nop
jl
xchg
push
in
inc
loope
aam
test
ljmp
outsb
add
rcrl
in
ret
jnp
or
fnstsw
add
out
cmp
pop
scas
jbe
pop
pop
jp
ror
pop
push
loopne
test
in
ss
adc
inc
mov
inc
or
in
ficompl
jbe
jb
lds
addr16
mov
inc
add
sub
xor
aas
cmp
push
mov
fs
mov
mov
fs
je
add
pop
repnz
fistl
xchg
imul
cmp
dec
in
xor
jno
lret
push
dec
xchg
dec
push
xchg
push
lods
inc
sbb
inc
ja
loopne
call
dec
fistl
pop
xchg
xchg
out
je
jb
xchg
std
decb
push
arpl
add
ja
adc
mov
daa
nop
repnz
fwait
adc
push
and
push
and
push
aam
hlt
xchg
sbb
cmp
negl
inc
pop
cld
in
mov
sbb
cmp
push
pop
push
fmuls
popf
out
jge
jecxz
mov
cmp
push
stc
outsl
push
icebp
dec
adc
adc
inc
in
pop
xchg
fs
pop
cmp
xchg
lds
dec
mov
sub
pop
das
in
pop
adc
dec
in
dec
and
aas
adc
inc
test
into
xchg
adc
mov
jae
pop
cli
xchg
sub
fwait
or
lods
mov
lea
cmp
xchg
push
push
rcrl
ljmp
xor
adc
out
aas
outsb
add
xchg
push
cmovnp
or
add
sbb
insl
arpl
sub
outsl
insb
sbb
psubb
repz
or
xchg
and
int3
lods
adc
outsl
dec
jmp
aam
sbb
lods
insl
xchg
out
and
outsb
xchg
rorl
bnd
mov
fldl
cmpb
pop
icebp
nop
add
in
sbb
adc
adc
adc
jmp
cmp
test
xor
lock
sahf
and
rol
push
pusha
das
cmpsb
add
xor
shrl
lret
fcoml
sub
jge
dec
inc
mov
aas
sub
jge
mov
inc
sbb
stc
and
sbbl
jge
cwtl
push
lret
cmpsl
shlb
lahf
pop
idivb
pop
test
jp
nop
inc
dec
pop
or
stc
xor
jecxz
sbb
push
bound
inc
inc
movsl
scas
pop
xchg
xchg
jmp
or
pop
sbb
ljmp
lahf
sub
xor
repz
pop
cmp
lcall
gs
int3
sub
cmp
clc
cmp
imul
push
mov
jne
loopne
pop
cwtl
mov
into
add
iret
dec
ficomps
aad
adcl
jmp
ret
lods
loop
sahf
cmp
loop
mov
je
pop
movsl
xchg
sarb
mov
sub
pop
mov
daa
dec
jnp
dec
push
movsb
inc
adc
gs
jp
push
aad
icebp
lds
lds
xor
mov
fld1
out
jg
ficoms
adc
rcr
cmp
mov
fs
shrb
sbb
xchg
mov
addr16
jp
lret
in
or
sbb
icebp
insb
mov
xchg
negl
xchg
mov
mov
push
jmp
pop
xor
js
pushf
dec
repz
or
clc
sub
fwait
xor
ret
mov
mov
xor
cmpsb
xchg
shll
cli
es
dec
jb
pop
sahf
repnz
out
mov
inc
or
je
mov
outsb
sub
mov
sbb
xor
repnz
inc
push
fstl
or
push
stos
fidivl
pop
stc
gs
stc
fdivl
scas
or
fmul
dec
dec
scas
call
mov
shlb
jecxz
dec
fistpll
sub
inc
cs
mov
push
add
idivl
cmpl
lods
cmpsb
jle
in
fisttpll
sub
push
xchg
shll
and
sysexit
std
loopne
jmp
xchg
out
adc
cmp
add
fidivl
mov
push
or
sbb
pop
mov
pop
add
mov
stc
pushf
push
xchg
mov
xor
lret
and
mov
dec
enter
lret
xchg
mov
out
jns
add
inc
mov
lock
fisttpll
cmp
jns
cmpb
mov
ss
adc
sbb
cmp
push
es
xor
popf
pop
xchg
mov
mov
sbbl
xor
out
mov
inc
je
mov
mov
mov
rcr
clc
inc
pop
dec
pusha
adc
cmp
js
in
mov
es
ficoms
test
jp
xlat
loop
adc
add
int3
hlt
sub
test
daa
stc
adc
mov
or
jb
les
add
out
fwait
jl
outsl
sahf
push
dec
pop
sar
addr16
mov
mov
and
stos
xchg
pushf
pop
insl
ds
xor
hlt
xor
cmpsb
push
push
ret
cmp
mov
lea
in
mov
aas
out
lock
int3
xchg
ror
and
mov
jp
fiaddl
mov
dec
jle
inc
sbb
mull
push
cmp
xchg
scas
push
das
mov
mov
out
push
or
mov
mov
jp
addr16
sbb
insl
insb
xor
xchg
pop
mov
outsb
mov
gs
icebp
jl
xor
push
xchg
xchg
mov
je
in
es
outsl
fdivs
inc
fsubs
imul
push
push
mov
and
iret
dec
addr16
test
xacquire
and
ret
jge
repnz
int3
test
mov
icebp
inc
adc
cld
mov
daa
mov
mov
rcrw
jl
mov
push
mov
adc
fucomp
mov
cld
shll
sarl
in
daa
mov
mov
stos
xchg
in
in
add
fs
hlt
jne
jle
enter
sub
call
lcall
inc
shl
adcl
jp
mov
sub
inc
mov
std
inc
jmp
dec
cmp
jp
test
jmp
cmp
dec
ss
clc
icebp
imul
cltd
cmp
mov
xchg
xlat
sbb
hlt
push
add
jae
fisttpll
cltd
xor
jne
fldt
cmpsl
addb
push
mov
mov
repnz
ret
outsb
scas
sbb
in
movsb
scas
fwait
dec
testb
std
xor
sub
incl
push
ret
mov
add
pop
jb
aaa
fisttpll
pop
jae
into
lods
idiv
xchg
call
jle
mov
fwait
inc
test
cli
jecxz
jle
or
sbb
in
mov
in
cltd
loop
dec
test
mov
in
fwait
dec
cmpsb
insb
or
mov
and
jnp
mov
push
mov
adc
sbb
mov
or
movsb
imul
popa
or
xlat
fidivl
pop
mov
lcall
pop
dec
ret
push
ljmp
pushl
ror
lods
push
or
adc
imul
mov
dec
mov
dec
bound
push
daa
mov
sbb
add
mov
ss
lret
rorl
dec
mov
xchg
ljmp
iret
mov
inc
xchg
mov
sahf
in
cmpb
mov
xchg
mov
and
push
adc
scas
mov
popf
test
rcl
out
push
sbb
xor
pop
push
mov
xor
jbe
call
adc
ja
cmpsb
stos
std
imul
or
mov
into
mov
cmpsl
fsubs
push
call
sbb
in
mov
sahf
jp
jne
mov
aaa
jp
jge
shl
fwait
jle
rorb
in
imul
imul
pop
inc
cmp
fidivrs
xor
ja
push
or
or
pop
xor
outsb
decb
stos
jmp
push
lcall
fwait
dec
jns
sti
push
lods
jo
mov
je
lret
lahf
fisttps
or
repnz
shll
adc
or
xchg
rol
rol
arpl
xorb
xchg
dec
cmc
mov
testb
mov
jg
xor
mov
mov
fninit
sub
fwait
dec
xchg
adc
sbb
dec
sbb
add
cltd
iret
xchg
dec
sbb
sub
mov
sahf
popf
inc
lahf
call
je
pushf
inc
jle
jge
fdivrl
imul
xchg
int3
push
add
cld
cmp
push
setl
hlt
pusha
pop
push
popa
xchg
cmpb
jo
nop
lds
jae
stc
pop
cmc
fsubl
dec
mov
sbb
fsubl
pushf
cltd
xchg
in
dec
repnz
jno
ss
inc
mov
stc
lret
pop
pop
in
das
sub
inc
stos
pop
jbe
out
sbb
icebp
and
push
ja
cmp
or
jo
aam
push
xor
or
xchg
icebp
add
hlt
add
xor
je
pop
fdivr
inc
stos
daa
popa
mov
insl
pop
xchg
inc
mov
les
inc
pushf
and
or
sbb
xor
clc
xchg
mov
mov
orl
jecxz
out
inc
std
inc
call
test
int
cmc
popl
dec
popf
add
pop
xor
cwtl
jo
sub
lea
mov
in
popf
gs
lcall
jb
cld
push
lods
mov
divb
add
fs
cmp
dec
aam
mov
out
loopne
mov
iret
push
push
inc
pusha
divb
sbb
jl
lret
xor
or
adc
loope
es
bound
cli
dec
into
fwait
ds
or
sbb
push
pop
dec
daa
cmp
gs
cwtl
in
movl
inc
orb
out
test
fsubr
jg
sbb
jns
add
jp
mov
mov
leave
ljmp
xchg
insb
fistps
aad
and
xchg
mov
fcomi
pop
jecxz
les
and
push
xchg
jnp
cmp
aas
pop
subl
push
aas
mov
and
or
add
jmp
mov
push
jecxz
test
mov
mov
stc
sub
push
imul
stc
divl
lods
push
idivb
movl
shll
and
out
mov
enter
push
inc
mov
lds
jb
lcall
aad
inc
mov
add
ret
popf
xchg
mov
fstl
or
cmp
mov
push
cmpb
or
hlt
movsl
cli
push
pop
popf
and
xor
xchg
pop
lcall
lret
inc
jnp
fldln2
mov
mov
ja
or
or
movsb
or
add
enter
scas
adc
cmp
cmp
jb
loopne
cld
ja
pop
inc
add
add
js
or
xchg
adc
add
inc
jp
xchg
adc
pop
inc
lret
in
and
shll
test
jne
adc
punpckldq
imul
lods
or
data16
cld
pop
push
adc
arpl
mov
cwtl
and
inc
aas
jno
insb
jbe
push
mov
sbb
ss
xor
out
mov
loope
outsl
sub
out
mov
mov
dec
fcomps
mov
xchg
cmp
aas
in
jecxz
nopl
inc
add
dec
push
push
movsl
push
movsl
fdivrp
je
stc
out
outsl
push
call
sub
mov
gs
pop
sbb
add
test
and
cwtl
xchg
leave
mov
mov
mov
icebp
sbb
push
andps
cmpsb
and
int3
cltd
out
movsb
std
roll
fwait
adc
push
insl
nop
test
js
jbe
mov
out
or
cmpsb
jbe
push
jle
outsl
sub
sarb
add
je
push
push
ret
and
movsl
in
add
shll
push
dec
jp
loope
gs
sbb
xchg
cmp
insb
in
es
jmp
ret
sbb
jl
pop
mov
inc
in
and
jbe
fxch
pop
and
jmp
xor
out
mov
and
pop
xlat
sub
inc
xchg
pop
mov
jmp
adc
push
push
mov
rcr
enter
dec
call
xchg
mov
xchg
jnp
imul
dec
inc
pusha
add
inc
ret
mov
bt
mov
or
add
push
repz
jg
loopne
in
inc
cmp
mov
adc
cmp
cmp
loopne
xorl
cltd
cmpsb
enter
mov
adc
insb
or
xchg
adc
jp
pop
add
in
jg
jb
das
loop
mov
and
out
push
inc
inc
pop
inc
sbb
outsl
xor
add
xlat
xlat
cmc
cmc
aam
std
ficompl
push
and
testl
push
sbb
call
fs
bswap
pop
int3
sub
aas
orl
rcll
cli
mov
inc
sub
cmc
inc
mov
pop
scas
mov
sarb
jb
push
cmp
dec
cs
movsl
aas
fimuls
cmp
pushf
ret
pop
inc
jno
aas
mov
dec
push
push
or
lods
lahf
sti
inc
das
mov
pop
bound
outsl
push
mov
add
cmpb
movsl
loop
into
dec
sbb
pop
mov
sbb
ljmp
mov
loopne
scas
mov
js
addr16
dec
in
xchg
xchg
mov
in
xchg
and
jmp
xchg
xchg
adc
push
xchg
add
leave
adcb
sub
add
push
pop
jle
aas
fdiv
fcom
stos
mov
cmp
xor
mov
cwtl
jo
scas
dec
bound
mov
inc
sub
imul
mov
or
dec
xchg
jmp
mov
dec
or
adc
and
add
cmpsl
jecxz
push
mov
sub
adc
movsl
fcmovnbe
or
iret
imul
in
popf
cmp
xchg
pop
sub
xchg
mov
inc
cmp
leave
cmc
or
mov
out
mov
or
xlat
stos
cmp
inc
push
mov
lea
pop
das
ds
subb
or
jnp
adc
push
hlt
sub
cmp
fnstsw
sbb
push
dec
jmp
rolb
clc
aad
test
cmp
jle
xchg
jns
push
shl
mov
mov
jmp
mov
fists
sub
xchg
testl
cmp
leave
stos
les
add
dec
jmp
sbbl
pminsw
ss
xchg
mov
push
int
mov
fdivrl
push
mov
inc
mov
movsb
sbb
inc
mov
cmp
cmpsb
outsl
lea
outsl
pop
or
cmp
stc
loop
push
shll
xorb
rep
add
jge
bound
in
jnp
add
jmp
xor
push
or
js
loope
fstpt
inc
push
aad
or
mov
cli
mov
dec
sbb
pop
mov
cmp
sbb
push
or
rolb
gs
shrl
sbb
shlb
mov
inc
or
mov
xchg
mov
sahf
sbb
pop
mov
mov
outsl
jne
or
and
pop
sar
dec
pop
es
in
mov
mov
add
decl
adc
pop
push
addr16
mov
jmp
jg
sbb
loope
fwait
mov
in
or
push
or
cmpsl
pop
inc
dec
xchg
xor
add
mov
cmp
mov
cmp
seta
mov
xor
inc
and
push
es
or
mov
sub
push
out
push
daa
inc
push
adc
repnz
cmp
inc
std
cltd
xchg
jl
mov
int
jne
inc
and
ret
aad
pop
scas
and
push
sbb
movsl
mov
and
and
mul
push
inc
loopne
insl
add
call
test
test
sub
outsl
flds
mov
les
aad
movsl
aas
jg
pop
and
push
roll
mov
mov
add
insl
sub
cmp
jnp
sbb
das
sbb
aam
fistl
cmpsl
ss
popf
and
xchg
xchg
enter
sti
decl
stos
addb
sub
stos
xchg
rcrl
sahf
loope
fisubl
and
jge
repz
mov
cli
and
aam
cmp
mov
pop
sub
inc
fimull
push
cmp
call
adc
push
cwtl
incb
aaa
or
push
push
mov
push
fimull
mov
out
out
loope
xchg
mov
jo
loopne
adcb
gs
dec
xor
ds
cmpb
int
xchg
xor
pop
adc
push
pop
cmp
stc
cltd
adc
les
sarb
repnz
sub
adc
xor
cli
pop
jecxz
jne
nop
push
lcall
jnp
xchg
mov
push
mov
jmp
dec
mov
cmp
inc
inc
dec
sub
jae
in
xchg
or
stos
xchg
jnp
cmpsb
xor
icebp
and
je
subl
sub
xlat
mov
test
ljmp
mov
push
sbb
call
or
fcmovb
fcom
fildll
inc
jno
lds
add
dec
add
les
mov
push
hlt
xchg
lcall
pop
imul
fsubrl
mov
into
stos
xchg
push
lret
push
std
std
xorl
xor
fwait
enter
push
scas
imul
das
stos
jp
cmp
testl
lret
mov
inc
jmp
mov
mov
sub
in
inc
call
jo
jae
lods
cmp
movsb
push
jae
std
in
jno
pusha
sbb
iret
mov
test
imul
test
clc
sub
addl
sub
daa
jmp
popa
mov
fsubl
insl
ljmp
pushf
mov
insl
adc
pop
in
mov
adc
jae
pop
mov
and
or
ret
ds
pop
fnstcw
add
xchg
sub
adc
nop
sub
xchg
mov
js
inc
xchg
jp
sub
pop
pop
mov
mov
jbe
jb
dec
iret
or
stos
ror
scas
jecxz
pop
addr16
cmp
popa
enter
fmuls
out
scas
add
cmpsl
mov
or
jmp
je
pushf
scas
lods
pop
lcall
test
out
iret
dec
call
fwait
scas
mov
fisubl
inc
imul
lret
or
add
jo
add
push
aaa
lcall
pop
add
test
sub
lea
roll
dec
scas
cmp
xchg
data16
mov
mov
dec
sbb
fisttpll
pop
or
scas
hlt
lods
xor
movl
insb
scas
xor
mov
cmpsl
mov
mov
fwait
movsb
or
aaa
pusha
add
mov
mov
mov
sbbb
ror
xor
mov
pop
cmp
mov
aad
push
imul
pop
lret
inc
jbe
fiaddl
dec
and
test
enter
sbb
inc
xor
outsl
icebp
in
fdiv
inc
xchg
adc
shlb
xchg
mov
add
cld
inc
mov
movsb
subb
stos
cmp
xor
sbb
imul
mov
mov
jge
mov
jo
mov
mov
or
aaa
fs
mov
faddp
or
roll
fcmovnbe
and
neg
and
test
sbb
pop
pop
xlat
cmp
aad
jmp
mov
int
cmp
inc
push
adc
outsl
dec
lcall
test
push
sub
gs
sub
loopne
or
xchg
pop
inc
mov
std
push
cmp
pop
std
add
arpl
out
cmp
pop
inc
sub
xchg
lods
xchg
repz
jl
push
hlt
jl
xor
cmpsb
jne
movsb
fstpl
push
daa
xchg
pop
fwait
ss
and
or
ficompl
lcall
lret
ret
pop
pop
aaa
lods
out
scas
xor
je
ja
xchg
xor
jo
jo
out
jae
mov
mov
fsubs
lcall
out
push
adc
and
pop
ja
push
or
xchg
mov
popa
call
push
push
roll
sub
push
inc
data16
sbb
mov
movb
push
test
sbb
mov
jo
jns
pop
int3
push
mov
add
pop
lods
aam
mov
call
jmp
push
mov
scas
setle
mov
xchg
pop
ljmp
sbb
orl
lret
dec
push
xorb
mov
cli
cmc
mov
test
jo
dec
hlt
pand
xor
je
gs
cmp
adc
pop
cld
andl
aas
sub
sub
pop
xlat
adc
aas
loope
xchg
dec
js
test
ret
sub
ds
lds
jge
subb
add
pop
es
roll
xchg
pop
push
aaa
dec
cmp
push
bound
repz
xchg
divl
movsb
add
mov
out
enter
fldl
mov
faddl
sub
mov
xchg
xchg
sub
push
xchg
into
sub
mov
and
movsb
dec
outsl
mov
xchg
lcall
push
decl
or
das
jge
aam
iret
cmp
out
popf
mov
mov
mov
es
das
mov
cmc
jg
dec
pushf
mov
dec
jns
push
adc
sbb
mov
cwtl
add
fldln2
and
push
xor
mov
pop
or
mov
and
push
cmovno
aad
test
pop
in
xchg
inc
lcall
jbe
ja
cld
xorb
push
xchg
out
stos
repnz
and
adc
outsl
dec
lods
jp
adc
mov
out
cmp
pusha
cld
mov
ret
mov
ds
daa
lods
and
jmp
mov
push
roll
pop
jmp
mov
loope
lods
adc
gs
adcb
jbe
adc
mov
inc
and
dec
and
and
jb
pop
xchg
push
fdivrl
out
addb
test
sub
lods
pop
lods
jno
enter
mov
add
int3
mov
outsl
xchg
cmp
and
xor
stos
pop
lret
cmp
or
mov
hlt
mov
cmp
or
adc
sub
jns
std
ds
jns
rol
gs
or
lret
repnz
lret
dec
std
mov
xor
push
pop
out
pop
mov
jno
and
lods
lahf
sub
push
push
aas
pop
into
inc
add
mov
and
into
pop
imul
imul
add
lds
hlt
xlat
fcompl
insb
xor
push
push
test
push
pop
ret
es
pop
dec
lods
sarl
in
mov
push
cmp
std
pop
cmp
pop
fs
lods
adc
ljmp
fistps
cmp
or
insb
or
insb
sub
pusha
pop
mov
mov
insl
adc
hlt
loope
movsl
xchg
bswap
jmp
xchg
popl
jne
push
or
jns
jl
pop
outsb
pop
or
sub
push
xlat
pop
in
rcrb
and
int
loopne
js
enter
adc
shl
sbb
daa
fldl
mov
bound
les
cmp
xor
xchg
test
adc
jbe
pusha
std
lret
xor
dec
jle
loope
into
push
mov
mov
iret
fwait
pop
pop
jb
shrl
out
xchg
std
mov
add
inc
mov
daa
mov
or
lds
outsb
dec
cmp
sub
xchg
int
add
repz
daa
sub
scas
cmp
xchg
push
or
mov
xor
mov
xor
mov
sub
ret
data16
push
lds
push
jl
jns
dec
xchg
in
lods
mov
push
rclb
or
cli
nop
fbld
imul
push
add
jle
mov
lock
adc
sbb
mov
or
xor
in
mov
out
push
and
lret
negb
sbb
sbb
notb
out
int3
cmp
mov
inc
clc
and
and
xchg
lds
add
out
sbb
add
andl
sti
aam
andb
int3
sub
repnz
or
jne
ja
cmpsl
dec
in
and
xor
push
mov
add
inc
dec
in
pop
fiaddl
dec
leave
ss
cmc
xor
dec
stc
popf
push
mov
loopne
xchg
loopne
xor
test
xlat
inc
push
lahf
adc
loop
orb
shll
lcall
lea
das
mov
dec
cmp
cmp
adcb
jg
in
mov
dec
shll
ja
idivb
call
or
stos
mov
xchg
add
jge
xchg
lea
data16
in
sti
lds
mov
sbb
dec
jno
cmpsl
xor
daa
push
imul
push
inc
je
loope
xor
hlt
fwait
loop
lods
sub
iret
xchg
cmc
mov
adc
xor
cmp
out
inc
dec
test
xchg
mov
mov
xor
adc
mov
sub
sub
out
mov
andb
mov
imul
mov
andl
leave
loope
mov
pop
and
popa
cli
or
adc
pop
cwtl
call
in
add
lds
loop
rcrl
sub
pop
imul
adc
add
lret
inc
mov
negb
roll
mov
mov
cmp
cmp
push
pop
jns
fisttps
sbb
mov
add
les
or
ja
dec
mov
sub
sub
addl
mov
xchg
cmp
out
mov
lods
and
pop
push
in
scas
xor
cmpsb
fnstsw
and
fwait
into
push
mov
call
outsb
dec
pop
aad
mov
pop
cmc
arpl
dec
adc
out
inc
pusha
pushl
xorl
sbb
mov
mov
test
imul
arpl
pop
repnz
cmc
inc
dec
cmp
xchg
jno
mov
xor
push
mov
sbb
movsb
lahf
fnsave
xchg
jns
or
dec
cmp
and
pop
loop
sbb
sti
inc
xchg
push
roll
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
add
cmpsb
sub
popa
rcrb
push
mov
enter
rcl
sbb
hlt
call
lods
in
rcll
dec
cmc
enter
xchg
loope
add
rclb
pop
adc
fidivrl
mov
mov
mov
adc
xlat
or
sub
xchg
mov
shll
jno
mov
mov
and
jns
adc
repnz
and
add
xor
mov
rcrb
xchg
push
fbstp
icebp
fstpt
sub
out
cmp
arpl
scas
jl
xlat
popa
xor
push
inc
and
cmp
inc
lods
fsubrl
out
mov
sbb
dec
sti
sarb
and
mov
cmc
stos
popf
inc
jno
dec
sub
lds
adc
repnz
push
int3
xor
js
popf
inc
pop
fcoml
xchg
dec
into
call
test
mov
loopne
out
mov
fs
jmp
xor
insl
sti
sub
decb
lret
inc
call
and
xor
add
mov
int
mov
es
es
xor
imul
mov
or
insl
jae
mov
addl
sbb
cmovne
jo
sbb
mov
mov
out
mov
mov
ja
xor
mov
xchg
xchg
jbe
ret
stos
mov
jmp
sbb
hlt
aam
out
mov
scas
xor
test
sub
cmp
or
lret
xchg
mov
test
adc
pushf
pop
and
daa
dec
icebp
jnp
call
cs
aam
push
dec
add
xor
adcl
jecxz
int
adc
sahf
push
jle
shlb
pop
xchg
cmp
jl
or
xchg
lcall
out
notb
adc
rcl
into
jno
cmp
shr
adc
jp
hlt
mov
pop
cmpsl
imul
jg
xor
ret
cmpsl
loope
sub
loop
mov
jne
incl
scas
sub
orl
sbb
lahf
in
add
and
push
mov
pop
jae
mov
or
es
sbb
jge
enter
and
loopne
aas
xchg
adc
loop
aas
addb
into
pop
imul
xchg
aam
jmp
loop
shrb
inc
ret
ds
nop
jb
lcall
mov
out
xchg
shrb
movsl
mov
mov
gs
fnstcw
cld
int
mov
mov
cmp
pusha
mov
sub
inc
dec
or
std
int
xlat
icebp
fsubp
fwait
insl
xchg
lds
xor
pusha
add
ljmp
pop
ja
mov
rcrb
loope
imul
aam
xchg
fisttps
xchg
and
sbb
push
lods
bound
stc
idivb
jns
mov
cmp
mov
xor
or
shlb
out
cmpsb
test
adc
and
sbb
sbb
push
dec
jb
lock
testb
in
inc
inc
repnz
inc
pop
lods
pop
xor
sbb
loope
sbb
mov
rep
les
gs
vmovntps
jne
out
or
pop
add
and
outsl
fldenv
mov
mov
push
sti
xor
cmpsb
mov
mov
and
add
xor
mov
push
mov
fwait
pushf
enter
mov
xchg
pop
jo
add
scas
in
ja
shl
mov
add
dec
pop
push
push
xchg
xchg
ret
sub
jmp
jmp
ret
fsubrp
mov
stos
ret
mov
pop
shrl
cmp
mov
fucom
nop
or
movsb
flds
sbb
jle
cmp
push
out
xchg
mov
xchg
add
je
inc
push
mov
cltd
aam
mov
int
out
movl
lds
jne
lock
pop
ja
enter
pop
xchg
lret
cmp
adc
pop
jno
cmp
aas
pop
mov
cmc
out
pop
ja
outsb
outsl
or
jmp
jne
loopne
push
repnz
leave
loopne,pt
inc
sub
and
test
push
iret
imul
jae
and
sub
xchg
into
adc
jo
xchg
ret
jmp
sub
int3
mov
push
add
sub
cmc
adc
hlt
cs
and
jo
lret
sub
ja
mov
push
out
lret
jbe
add
dec
jmp
cltd
jecxz
popl
mov
loopne
xchg
jp
jae
out
push
mov
jmp
mov
inc
pusha
es
out
push
pop
cmpsl
ret
adc
mov
cltd
xchg
rol
mov
cmp
bound
jecxz
fsts
fdivl
mov
or
push
jo
mov
mov
sbbl
inc
pusha
repnz
sub
push
je
mov
mov
ja
jo
mov
mov
mov
loopne
or
mov
cmp
cmovge
dec
jmp
cwtl
fwait
sti
sbb
in
adc
bound
sahf
js
sbb
ret
popa
sub
aaa
mov
movsb
cld
xor
and
xorb
add
inc
imul
repz
cmc
jl
or
and
mov
cmc
add
stc
leave
in
cmp
dec
mov
jne
jecxz
dec
mov
cltd
shll
test
inc
dec
pop
mov
loop
sbb
insb
pop
ds
popa
dec
adc
icebp
xchg
or
popf
sub
push
or
jecxz
jle
dec
pop
pusha
pop
xor
outsl
sbb
js
mov
pop
and
mov
dec
or
or
ret
imul
pop
mov
add
jb
pop
rorl
sbb
mov
xchg
push
sub
sbb
mov
pop
lods
and
adc
fidivl
jne
jo
sub
push
pop
or
adc
adc
inc
dec
mov
xor
in
stc
adc
xor
and
ficoml
iret
sub
ret
fs
insl
pushf
mov
jge
jae
pusha
idivl
out
and
or
cli
cmc
cld
ds
repz
xchg
xor
push
add
scas
mov
cs
jl
testb
sbb
dec
in
lds
cmc
cmp
int3
push
jl
dec
js
sbb
mov
pop
add
xor
fcomip
and
inc
xchg
rcl
cmp
in
int3
mov
loopne
xchg
jp
mov
sbb
pop
aad
loop
sbb
xchg
in
sarl
push
add
ljmp
pusha
ljmp
aaa
cmp
imul
mov
insl
xchg
fiadds
inc
ja
xchg
jecxz
sub
xchg
idiv
cli
push
clc
add
jecxz
in
int
ljmp
ds
mov
or
jne
jg
xchg
mov
jecxz
mov
dec
sahf
pop
dec
or
dec
push
enter
outsl
scas
icebp
int
jns
repz
push
inc
fisttps
sbb
push
and
fistpl
mov
int
mov
repz
stos
mov
dec
or
bound
shlb
paddw
cmc
mov
mov
sbb
vcomisd
push
add
dec
mov
test
sbbl
sub
push
or
idivl
pop
jle
xchg
ss
mov
or
xchg
clc
push
cltd
lds
xchg
mov
push
dec
sbbb
stc
shlb
and
mov
xlat
mov
pop
mov
scas
push
sbb
pop
into
pushf
decl
mov
fists
push
xor
mov
adc
rclb
adc
fldenv
loop
gs
adc
aad
cmp
bound
add
pop
decl
pop
pop
jbe
sbb
testb
xchg
sarb
dec
lock
xchg
xchg
loopne
les
iret
or
mov
inc
lods
scas
mov
aaa
ds
ds
adc
test
insl
cmp
jo,pn
pop
ds
inc
or
cld
add
fwait
loope
adc
pushf
xor
cmp
adc
inc
js
loope
push
lock
out
insb
and
pushf
sub
xlat
pop
add
push
or
inc
pop
mov
mov
jb
or
sbb
jno
jae
push
inc
sub
push
aas
pop
inc
cmpsb
push
mov
jae
or
dec
adc
cmp
push
enter
dec
jmp
sub
outsl
jle
sbb
mov
lret
pop
pop
or
pop
popl
jns
loopne
iret
movsl
jb
leave
movsb
mov
inc
xchg
aam
mov
or
mov
fistpl
jbe
jo
imul
pop
xchg
inc
push
push
xor
mov
jae
jmp
ss
or
cmp
aam
rcll
aaa
movsb
sub
pop
push
fisttps
ds
push
sub
mov
popf
in
aam
pop
iret
mov
sbb
ljmp
mov
setbe
sbb
adc
jb
and
fwait
mov
or
jl
or
jg
jmp
mov
out
fstl
cwtl
lret
fistps
sub
stos
test
or
icebp
pop
mov
int3
sbb
pop
xchg
test
gs
cmpsl
xchg
scas
popf
scas
jb
dec
ret
mov
lret
dec
inc
divb
movl
ret
sbb
and
inc
mov
mov
orl
cmpsl
and
push
popa
enter
bound
cli
rorb
pop
or
push
mov
rcrb
movsb
mov
int
sbb
in
sub
imul
repz
out
adc
test
mov
mov
push
in
lret
fs
jo
and
inc
cmc
jbe
mov
xchg
xlat
mov
in
adc
fisttps
sub
dec
sub
in
xor
lcall
pop
pop
inc
xor
iret
cwtl
iret
fisubrl
iret
and
lds
xchg
mov
imul
mov
sub
test
imul
xlat
add
popa
movsl
inc
mov
mov
sub
orl
jecxz
add
aaa
setl
push
in
lods
pop
stc
mov
push
lea
jg,pn
cld
arpl
push
inc
movsb
mov
sub
clc
mov
pushf
aas
pop
pop
call
outsb
dec
mov
es
inc
gs
daa
push
pop
cmp
push
in
sub
pop
sbb
je
insl
pop
lea
incb
sbb
ss
or
shrl
fwait
xor
push
daa
mov
jp
cmp
or
jo
pop
mov
gs
mov
in
movsb
inc
push
pop
add
xchg
mov
sub
fs
test
shlb
adc
mov
jge
xchg
scas
mov
add
push
push
dec
mov
lock
enter
sub
cli
sub
popf
cs
into
jb
pop
lret
sbb
int
xchg
xchg
and
pop
out
and
and
inc
xorb
fsubrl
xorl
loope
pop
stos
inc
sbb
out
cwtl
xchg
xlat
sbb
mov
addb
cmp
xchg
test
push
jle
inc
xor
loopne
aas
test
xchg
cmp
psubusb
cmp
leave
jbe
lods
ficoml
pop
add
loopne
outsl
xchg
dec
cmp
dec
add
pop
fnstcw
pop
add
inc
cmpsb
mov
jnp
fistps
mov
dec
rorb
add
adc
jg
or
loope
xchg
mov
ds
test
je
popf
dec
push
addr16
sub
xlat
pop
sbb
mov
into
stos
push
add
or
inc
fnstcw
fdivl
ret
push
cli
inc
xchg
aas
ss
in
fcompl
or
adc
movsb
movb
xor
lods
stos
sbbb
in
cmpsl
pop
push
and
push
shrb
mov
pop
adc
push
addr16
mov
push
inc
arpl
cwtl
xchg
sti
in
inc
dec
adc
fimuls
dec
test
cmp
or
andps
lcall
fstl
insl
insb
and
cwtl
aad
aam
inc
inc
adc
jae
dec
pop
lods
fsub
dec
int
cmp
aam
adc
dec
mov
ficompl
repz
xlat
jo
jle
xchg
icebp
data16
jg
xchg
lods
pop
pop
movsl
cli
jecxz
cs
jge
pop
lds
xchg
push
mov
ret
xchg
pop
fdivrs
adc
icebp
xchg
jecxz
lea
mov
or
xrelease
and
cmc
and
push
test
fidivrl
pop
shrl
and
pusha
insb
ret
out
out
idivb
sarb
movsb
in
es
mov
repz
sbb
gs
mov
div
add
lcall
imul
push
xor
out
loope
into
aam
fnstenv
fisubl
xlat
mov
mov
je
aas
cli
dec
jecxz
and
mov
xlat
lods
adc
push
mov
bound
movswl
loop
add
xor
loop
mov
xchg
pop
or
loop
sub
push
das
das
jle
push
add
pop
stos
mov
jle
imulb
sbb
cwtl
push
jne
or
in
sahf
cld
sub
add
push
pop
pop
leave
mov
pusha
call
pop
cmc
test
jmp
ror
mov
in
rcrb
fstp
outsl
mov
mov
loopne
mov
xchg
jle
sbb
sti
jg
jl
xchg
lods
push
aaa
mov
insb
mov
outsb
sub
pusha
subb
gs
sbb
sbb
clc
jnp
inc
test
sbb
out
insl
mov
add
or
arpl
inc
adc
jbe
sub
jnp
xor
cmc
das
rorl
repz
sub
pusha
in
stos
les
cmp
add
stc
icebp
movb
sbb
adc
lret
scas
ljmp
push
popa
sub
sub
xchg
fbstp
pop
and
cmp
arpl
and
movb
insb
adc
cmp
push
out
aad
mov
xlat
add
data16
aad
push
push
inc
aas
dec
inc
pop
test
aad
sub
mov
mov
mov
sbb
out
leave
ds
pop
xchg
ljmp
cli
mov
mov
mov
sub
movsl
cmp
mov
scas
imul
scas
pop
lods
in
or
rcr
xchg
push
adc
adc
lahf
outsl
or
jbe
cmp
jae
pop
ret
and
sbb
mov
inc
test
ret
inc
mov
jnp
jne
fsubp
pop
jl
int
mov
ss
mov
mov
mov
cmp
jo
fdivp
aam
imul
xchg
mov
pop
mov
sub
push
xor
rcrb
scas
adc
xchg
push
mov
xchg
dec
push
shl
mov
xchg
test
pop
xor
push
addr16
cli
pop
clc
mov
fildl
pop
mov
lds
mov
sti
dec
jge
xorb
cwtl
jbe
add
cmp
or
stos
mov
sarb
sarb
inc
subb
je
aam
andb
fstl
jno
in
sub
jo
push
mov
int
inc
push
cs
mov
bound
andl
pop
std
fiaddl
xchg
out
xchg
jmp
les
sub
or
push
mov
jnp
shrb
push
add
aaa
outsl
xchg
pop
std
and
sti
enter
jg
rcrb
int3
sub
in
fldt
sub
les
data16
pusha
sahf
push
movsb
mov
inc
mov
inc
shr
arpl
or
or
in
push
das
call
mov
pushf
push
shll
push
add
test
dec
adcl
pop
pusha
cmpsl
les
jle
aad
js
out
cmpsl
jns
les
push
mov
imul
enter
cmpsl
cltd
push
int3
jbe
xchg
mov
mov
in
adc
push
int3
jnp
sti
jb
xchg
cmp
sbbb
jbe
dec
pop
lret
mov
jmp
and
add
lods
sbb
je
and
cltd
clc
sbb
pop
cmp
icebp
adc
sub
std
lcall
sbb
out
mov
in
push
add
movsl
in
fdivr
bnd
int3
gs
add
mov
adc
push
shll
je
lahf
mov
pop
xchg
sarb
lahf
or
mov
lds
jno
cmp
push
push
pop
pop
push
lret
mov
ds
loope
je
lds
mov
xchg
mov
lret
fldl
ljmp
mov
xchg
pop
cmp
ljmp
out
out
dec
dec
push
or
lret
dec
mov
mov
add
das
push
idivl
in
mov
nop
add
out
jp
lcall
add
pop
add
inc
pop
enter
pop
popa
ljmp
xor
sbb
mov
pop
ffree
fcomp
enter
xchg
test
aaa
or
inc
jb
repz
cmp
sub
xor
insl
add
hlt
jae
mov
sub
mov
dec
mov
jecxz
lret
aas
jnp
shl
jo
fdiv
pop
cltd
call
pop
sub
scas
jno
lcall
or
in
and
inc
jo
sbbb
xchg
addr16
icebp
rcll
cmpsb
mov
cmp
sahf
or
inc
sub
mov
jecxz
xor
jae
push
push
movsl
rol
sub
add
xchg
sub
xchg
lret
popf
cmp
popa
xor
inc
cmp
add
movb
cmp
inc
dec
pop
add
es
jg
ret
mov
sub
cmc
adc
xchg
inc
ljmp
popa
and
mov
jecxz
mov
shll
ljmp
mov
je
bound
sbb
stos
fwait
daa
fidivl
xchg
pop
fidivrl
icebp
jl
adc
repz
mov
pop
aad
mov
pushf
jg
and
push
cmp
sub
ljmp
lcall
mov
mov
inc
adc
sbb
xchg
lds
cmp
fnsave
or
outsb
jmp
pop
test
inc
jl
loope
pop
mov
in
jae
mov
leave
xchg
ja
mov
sub
adc
sbb
xor
mov
xorl
fwait
lcall
int
push
test
gs
stos
scas
and
sub
sub
dec
xchg
mov
es
cmp
sbb
and
mov
out
pop
gs
inc
jns
popa
jne
sbb
out
cmp
inc
xor
cmp
push
or
lcall
loop
nop
cmp
ret
inc
call
cmpsb
xor
iret
and
mov
xchg
xchg
push
push
jns
enter
into
cwtl
test
and
jae
lods
adc
icebp
push
adc
cmpsb
mov
push
mov
int
jb
xchg
sbb
lods
sub
pop
xchg
sbb
push
adc
into
jl
test
inc
pop
adc
xchg
cmp
sarb
push
and
dec
push
cli
popf
pop
mov
mov
jnp
lds
repnz
mov
mov
mov
xchg
js
fbstp
cmp
add
xchg
cltd
dec
loope
jecxz
popa
push
pop
jl
les
lea
sub
imul
js
movsl
jle
sbb
pop
jecxz
loopne
shld
addr16
pop
dec
adc
mov
inc
pushf
imul
incl
fdiv
testb
cmp
mov
jl
das
aad
lret
neg
jl
mov
push
pop
sub
jae
dec
add
out
popf
jb
pushf
xor
cmc
in
movsb
jo
cld
mov
pop
push
cmp
movsb
ret
ds
insl
add
jno
cmp
push
cmp
mov
dec
or
jo
jne
ds
jno
or
mov
gs
sub
xchg
ret
pusha
fwait
js
scas
nop
inc
inc
movsl
cwtl
sub
and
push
out
sub
insb
jo
ret
mov
cmpsl
pushl
xchg
and
mov
cmp
push
arpl
mov
das
mov
int3
imul
inc
scas
out
outsl
rcrb
mov
mov
dec
hlt
clc
iret
std
mov
test
fadd
mov
orb
dec
mov
out
mov
lods
jo
mov
or
lret
mov
mov
push
or
test
add
fwait
mov
xchg
jp
addl
jb
rclb
pop
xor
ficompl
rcrb
xor
cmp
add
lods
push
sub
and
push
adc
movsl
dec
add
and
xchg
aad
xor
sub
mov
inc
pop
fimull
shl
das
out
push
or
pop
pop
enter
das
fiaddl
jb
xchg
and
mov
mov
mov
sub
icebp
inc
xchg
add
mov
xchg
notb
ret
inc
fnstenv
in
xorl
add
ss
xchg
xchg
jge
push
mov
scas
cmc
xchg
jbe
test
stc
pop
pop
xchg
pop
mov
dec
test
mov
inc
insb
dec
xchg
mov
push
aad
insb
jp
xlat
mov
test
jo
es
pop
jl
adc
xchg
mov
mov
bound
push
pop
ret
jecxz
pop
pop
std
mov
ss
ret
int3
mov
jge
scas
sbb
push
pop
je
xlat
fwait
push
add
mov
cmpsb
mov
sub
nop
mov
insb
lods
mov
cmp
cmp
cwtl
pusha
dec
adc
das
mov
in
sbb
mov
enter
stc
push
adc
std
jge
adc
fldt
jle
popa
jl
clc
dec
ss
in
inc
negl
movsb
js
mov
push
pop
sbb
or
cmp
stos
inc
xor
test
jne
inc
test
mov
cmp
shlb
mov
rol
stos
mov
aam
aas
xlat
mov
test
clc
xchg
outsb
cmp
jne
cmpsl
sarl
lods
xchg
test
xchg
xlat
bound
stos
daa
mov
shlb
adc
push
adc
and
lods
add
lret
inc
and
jne
inc
xchg
mov
orb
imul
push
push
mov
inc
test
pop
jl
into
leave
pusha
push
push
jb
les
mov
cmp
in
cmp
mov
inc
outsb
cmp
sbb
pop
iret
insl
adc
add
fwait
scas
xor
imul
pop
push
js
xor
lahf
pop
leave
pop
out
addl
repz
push
xchg
push
ss
imul
push
lcall
dec
xchg
adc
movl
lock
repz
cli
dec
inc
outsl
pop
popf
arpl
mov
loope
sub
jecxz
in
scas
je
pop
xchg
inc
movsl
and
xchg
pop
or
out
ds
lods
mov
clc
subb
js
mov
test
mov
pop
inc
loop
adc
shl
call
xlat
xchg
pusha
sbb
movsl
loope
inc
pop
or
mov
fwait
cmp
jl
sahf
sbb
leave
xchg
cwtl
in
mov
pop
ds
cmp
scas
push
jns
and
rcll
in
push
ret
mov
mov
outsb
stc
xlat
add
push
outsl
jno
jno
cld
pop
jne
xchg
add
mov
mov
mov
enter
adc
ja
dec
jne
mov
mov
rorb
das
sub
rcrl
nop
push
in
pop
out
xor
cld
jle
add
fidivs
jmp
jns
popa
das
adc
mov
jns
push
sahf
popf
les
daa
shlb
in
sbb
mov
inc
fwait
xchg
lret
jecxz
stos
pop
dec
lods
sub
cmp
das
je
jb
jbe
fwait
rcrl
pop
sahf
imul
and
cmp
repnz
add
mov
adc
xchg
pop
pop
add
aaa
xor
imulb
xchg
out
or
push
sbb
mov
hlt
pop
leave
cmp
inc
pop
movsl
xchg
je
jne
jnp
dec
mov
jge
mov
int3
mov
loop
ja
push
inc
test
addl
xor
test
negl
and
add
inc
insl
mov
sti
out
push
mov
fs
jp
sti
je
jno
outsl
xchg
lods
ljmp
lock
andl
jno
adc
ljmp
jg
shrl
dec
lcall
cmp
mov
shll
mov
jo
sbb
xor
ljmp
xor
popf
cltd
dec
sarl
mov
fistpl
xor
subl
push
mov
jo
mov
lds
aad
mov
push
out
lods
cmc
stos
cmp
and
pop
push
loope
roll
fisubrs
rcrb
xchg
daa
insb
cld
add
hlt
pop
adc
addr16
ror
cmp
push
icebp
jmp
lahf
mov
je
pushf
xorb
or
jbe
push
adc
push
push
sarb
fidivrs
loop
push
pop
popa
insb
push
jle
sbb
shrl
ret
scas
mov
aas
adc
sub
sub
ret
and
cltd
ret
pop
fldenv
mov
or
fstl
inc
lret
test
arpl
outsb
dec
sbb
subb
dec
call
mov
pop
mov
or
popf
sbb
loope
add
call
jecxz
ja
test
dec
subb
popa
mov
pop
popf
pop
scas
rcrl
jns
iret
xor
xchg
in
inc
jne
ja
movsl
add
and
rsqrtps
dec
dec
mov
and
fsubs
jl
aad
and
xchg
out
fisttpl
jbe
in
and
mov
push
push
inc
lods
idivl
jp
jo
xor
sbb
sub
faddl
and
sub
mov
out
sbb
dec
add
outsl
cmc
cmpsl
das
mov
cmc
mulb
xlat
sbb
jb
leave
adc
sbb
adc
sub
cmpsl
and
imul
stc
ljmp
imul
fistl
mov
cmpsl
pop
sub
mov
dec
and
add
mov
stc
loop
out
cmp
adc
test
xchg
aam
cmp
fstpl
push
cmp
cwtl
sub
imul
mov
jnp
in
sub
mov
stos
nop
aam
aas
xchg
imul
cmp
xor
pop
pusha
sbb
or
negb
and
rorl
repz
dec
roll
dec
xor
arpl
iret
iret
inc
pop
test
xlat
test
inc
add
adc
aaa
dec
inc
outsb
fstps
sbb
insb
cmpsl
adc
gs
mulb
imul
dec
test
cmpsb
mov
add
and
pusha
cmpsb
lds
sub
jns
jne
out
mov
or
test
pop
sbb
adcl
dec
outsb
push
addl
std
fsubr
aas
xchg
sbb
xor
adc
stc
mov
and
cmp
aaa
jg
mov
jmp
push
cmpsb
in
xchg
loope
sarb
add
gs
sub
ss
ror
sub
fwait
dec
rolb
call
jb
mov
dec
mov
lock
xlat
std
iret
mov
mov
push
andb
dec
add
loop
inc
movsl
xchg
orb
decb
aas
in
dec
mov
popf
dec
push
adc
mov
or
addr16
addr16
inc
pop
mov
cmp
mov
stos
nop
cmp
adc
add
jge
aad
dec
adc
nop
aad
ss
lods
adc
loopne
shl
sub
jbe
xchg
mov
jge
inc
or
cmc
push
rep
insb
test
mov
xor
and
jnp
sbb
enter
popa
cmpb
jo
outsb
out
mov
jl
decl
dec
or
xlat
fst
das
pop
jle
pop
add
mov
insl
jns
and
test
pop
mov
cmp
scas
jnp
xor
jg
andb
mov
cmp
cld
es
in
loope
or
jle
or
or
sub
sub
push
outsl
mov
iret
mov
or
scas
mov
adcb
ficoml
jmp
imul
push
sti
std
push
cwtl
adc
mov
cmp
jnp
inc
shl
mulb
ds
jo
fldenv
and
in
dec
inc
in
sub
push
add
xchg
test
into
xchg
insl
sbb
push
inc
in
sub
or
and
gs
mov
xor
xor
dec
dec
xchg
sbbl
roll
cmc
cmp
cmp
rcll
mov
inc
mov
xchg
sub
imul
push
fnsave
subl
or
mov
jp
xchg
dec
sbb
stos
ja
dec
cmpl
jo
lods
pop
inc
jmp
js
mov
cmp
cmp
mov
jne
push
cltd
mov
mov
cwtl
xor
jl
adc
sub
mov
push
push
cmpb
and
inc
push
lcall
gs
push
mov
add
mov
dec
sbb
sub
xlat
mov
ja
and
jne
jno
inc
lock
jmp
stc
js
out
icebp
xor
imul
pop
jbe
inc
inc
and
movsb
icebp
xchg
inc
sti
pushf
sub
scas
fbld
jge
mulb
int3
or
jbe
xchg
jnp
inc
stos
xchg
movsl
shl
in
fnstenv
jo
sbb
leave
aas
jns
cmp
sub
lock
pop
adc
insb
enter
mov
fwait
clc
je
scas
push
in
pop
add
test
sbb
mov
enter
xor
imul
notb
aaa
test
jg
jns
fdivrl
outsl
push
and
jl
push
push
push
fcmovb
jp
sarl
push
or
cmc
test
sti
xchg
fwait
incb
fwait
in
fsts
gs
bound
and
adc
or
int3
pop
or
cmpsb
fstps
clc
push
shr
call
or
pop
inc
lahf
push
jne
sbb
xchg
mov
dec
inc
hlt
or
dec
add
sub
arpl
mov
inc
jl
jbe
in
sub
ds
ljmp
push
sub
nop
sahf
push
scas
mov
mov
ds
enter
rcll
inc
add
cmp
xchg
cmp
iret
push
stos
and
jo
cli
aad
lret
nop
cmpl
test
inc
mov
mov
add
ja
fstps
inc
mov
in
sub
and
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
popa
rcrb
gs
pop
jecxz
test
and
sbb
pop
nop
push
inc
push
sbb
loopne
pusha
lret
sub
sbb
xor
fistps
outsb
pop
cli
hlt
aam
jnp
das
aas
icebp
mov
repz
cmpsl
scas
jo
adc
jnp
mov
scas
fs
cmpsl
movsl
outsl
lahf
hlt
int
addr16
dec
cmpl
mov
fistpl
lock
dec
popa
pop
loope
cli
cwtl
push
lret
leave
mov
aaa
push
arpl
lock
push
sahf
arpl
push
sbb
add
out
and
mov
jg
lods
cmpsb
fisubs
pop
sbbb
sub
mov
fnstsw
inc
mov
popa
xor
repz
repz
mov
ret
fists
dec
xchg
mov
xchg
inc
in
cwtl
fsub
push
popa
je
or
mov
mov
enter
loope
mov
shl
jmp
jbe
loopne
mov
das
xor
xor
repz
pop
cmp
push
outsb
and
fsts
jle
rcll
xchg
cmp
adc
test
xlat
lods
pop
and
lahf
jae
aas
sbb
vmovaps
or
sub
or
mov
out
sub
lea
xchg
sbb
mov
jno
jle
inc
nop
jp
xchg
mov
gs
in
outsb
out
and
lret
pop
loope
iret
popa
jmp
mov
push
adc
fadd
ja
dec
xor
test
mov
int
xor
cmc
sbb
xchg
dec
xchg
sbb
mov
inc
fst
jle
leave
lds
sti
rorb
sub
add
jbe
popa
push
lcall
mov
ret
pop
xchg
les
in
out
mov
lcall
cwtl
inc
dec
sub
dec
mov
cwtl
pop
cld
rcll
inc
cltd
add
out
sbb
cmpsb
pop
adc
in
in
push
adcb
add
out
mov
fldcw
sbb
or
xlat
push
pop
shr
xor
or
add
dec
ret
push
inc
iret
repz
dec
imull
adc
lret
ret
addl
jecxz
out
sbbl
popa
les
sahf
insb
je
cmc
push
mov
push
cmp
cmp
xchg
inc
mov
jo
fdivrs
lcall
lea
adc
inc
cmpb
xchg
inc
adc
jecxz
popa
inc
stos
call
cli
and
movsb
stos
popf
int
std
mov
stos
outsb
mov
shll
fistps
mov
jle
adc
out
cltd
cltd
adc
mov
insb
daa
mull
xor
cmp
pop
add
dec
push
mov
mov
popa
movl
je
clc
jb
cs
add
cwtl
fldenv
dec
push
in
nop
adc
cmp
dec
call
pop
scas
dec
mov
into
adc
popf
mov
sbb
in
fimull
sahf
mov
pop
enter
jb
bound
jbe
data16
les
push
shrb
in
xchg
lock
push
xchg
loope
adcb
xchg
xchg
mov
aas
subb
int3
adc
xchg
fiadds
cmp
addr16
push
data16
cltd
pop
jge
or
fdiv
push
mov
pop
mov
cmp
arpl
mov
mov
mov
xor
jecxz
hlt
mov
aad
cltd
cmp
mov
idivl
rcrb
aam
cmpsb
adc
sbb
and
loope
fwait
pop
movl
mov
jl
enter
fstl
sbb
shrb
pop
clc
out
enter
push
cltd
fidivs
aas
cmp
jbe
sub
lods
mov
outsb
outsb
mov
loop
inc
and
mov
out
pop
dec
mov
loop
xchg
dec
pushf
or
lds
add
out
sbb
mov
fbstp
sbb
mov
mov
mov
lret
add
scas
adc
imul
mov
pop
or
xchg
mov
inc
xchg
call
mov
mov
out
or
sti
clc
mov
shl
xchg
adc
fisttpll
mov
sbb
int
add
loop
sbb
test
movsb
lret
inc
daa
sub
push
sbb
push
push
inc
in
popf
sbb
outsl
sbb
jne
cwtl
lods
push
fisttps
jle
enter
clc
ljmp
mov
dec
and
mov
pusha
das
and
jge
adc
repnz
stos
mov
add
or
insb
pop
iret
xchg
sub
jmp
ja
jle
test
jmp
adc
lock
inc
loope
adc
adc
arpl
xchg
add
mov
negl
outsb
mov
xchg
mulb
test
sti
adc
je
outsb
stos
lret
jb
aam
cmp
ss
jno
push
add
inc
ret
jp
add
and
mov
es
mov
jmp
jo
sahf
cltd
rclb
or
rorl
icebp
push
jo
push
es
pop
dec
int3
mov
dec
adc
or
test
push
sbb
or
sti
loope
add
xor
sti
push
push
dec
mov
jmp
clc
arpl
outsl
in
js
stc
mov
xor
out
lret
mov
pushl
and
push
imul
iret
cmp
xchg
mov
pop
test
popa
fwait
jno
mov
adcl
push
int3
ss
leave
sti
repz
rolb
aaa
lock
mov
cmp
fnstenv
stc
mov
mov
aam
and
and
mov
ds
mov
popa
push
mov
and
fwait
xchg
repnz
xor
sbb
dec
fs
add
adc
in
push
mov
mov
std
test
jne
pusha
inc
dec
out
dec
cmpsl
sub
int
push
jne
pop
pop
test
loop
push
xor
push
iret
lahf
or
ja
pop
nop
mov
negb
push
rcrl
cmpsl
pop
mov
add
pusha
icebp
loop
or
push
sar
es
jo
lods
inc
sub
movsb
or
and
ficomps
int3
cmp
pop
jno
or
xchg
add
outsb
xchg
inc
daa
dec
fidivs
push
in
cs
or
stos
pusha
mov
jne
sub
popa
leave
imul
add
xchg
xchg
std
out
das
dec
inc
shll
fnstenv
dec
std
filds
add
cwtl
push
dec
daa
mov
mov
into
or
adc
cld
mov
arpl
addb
push
fcmovnu
sbb
mov
jo
inc
inc
dec
add
adc
jecxz
mov
ljmp
das
addr16
push
outsb
cmp
scas
mov
mov
repz
enter
lods
lock
pushl
sahf
push
and
or
mov
ret
scas
mov
sti
pop
lods
pop
dec
sbb
addr16
mov
fbstp
dec
pop
mov
hlt
pop
out
je
mov
dec
xchg
add
shll
sbbb
add
aas
cs
lods
roll
pop
lods
icebp
pop
push
inc
lods
ss
or
fadd
std
jmp
mov
outsb
andb
cmpb
out
les
xchg
into
sti
or
ficompl
bound
dec
mov
mov
rol
push
out
dec
sub
sbb
sbb
lds
sub
sbb
cs
lods
in
iret
shr
sbbl
pop
rcr
mov
adc
pusha
inc
dec
test
jns
cmp
daa
mov
push
sbb
test
bound
mov
les
inc
mov
mov
popa
cwtl
outsl
data16
dec
add
dec
pusha
insb
xor
mov
push
and
add
fldl
pop
arpl
fbstp
and
das
mov
imul
and
orl
adc
in
sbb
mov
inc
pop
lock
imul
aas
mov
pop
sub
dec
gs
pop
inc
sti
lea
pop
test
lods
movsl
je
pop
mov
iret
cmc
cli
mov
mov
aas
pop
out
insl
xchg
loopne
imull
aaa
mov
pmuludq
icebp
and
pushf
jmp
inc
ja
mov
sbb
es
rcl
fs
into
sbb
icebp
jmp
jp
mov
cmc
icebp
cmpsb
enter
cs
rcl
pop
xchg
cmp
pop
das
fildl
in
ja
imul
pop
lret
sub
adc
gs
mov
enter
scas
jae
fimull
jg
add
movsb
daa
xchg
mov
push
test
xor
popf
or
and
in
sti
mov
loopne
ret
cmpsb
dec
xchg
and
lea
out
repnz
cmp
imull
cwtl
jo
enter
mov
inc
outsb
inc
cmp
adc
dec
xchg
add
stos
into
dec
in
outsl
fisubs
popf
cli
fstpt
mov
lock
dec
pop
fucom
pop
loopne
and
xor
dec
jb
ss
sahf
dec
ja
and
push
notrack
lret
shrl
inc
scas
insb
adc
inc
pop
into
iret
cmpsl
sub
sti
outsl
call
enterw
dec
icebp
cmp
and
mov
push
scas
cs
xchg
jno
mov
loope
mov
xchg
insl
lret
out
add
incl
and
inc
push
in
js
in
rcr
add
jbe
inc
sub
pop
cmp
jae
lcall
scas
and
iret
pop
mov
add
mov
cld
sbb
cmp
pop
sub
or
jl
mov
shlb
fsubs
lret
sbb
push
or
sub
sarb
jmp
mov
subb
dec
and
sbb
push
add
fsubrl
mov
mov
ret
mov
dec
adc
or
xchg
imul
push
xchg
pop
add
mov
jecxz
cmp
pop
in
jmp
int3
out
sbbl
jle
lcall
out
shrb
inc
and
outsb
in
jae
ss
inc
or
cmc
mov
jge
push
ljmp
and
push
pop
xor
adc
stc
or
xchg
mov
push
adc
pmaxsw
aas
iret
sub
pop
sbb
in
xchg
mov
inc
je
or
jg
je
mov
and
movsb
int3
push
outsl
inc
inc
lods
movb
adc
int
jb
lock
test
addb
sbb
jno
and
add
inc
bound
js
sbb
hlt
jns
ret
add
rcrb
push
xchg
lock
or
int3
ljmp
mov
test
int3
sbb
mov
xorb
rcll
pop
lret
lods
addb
or
pushf
jo
mov
push
shlb
mov
mov
jae
je
add
jns
mov
xchg
scas
jge
dec
add
sub
mov
repnz
pop
fwait
mov
pop
cmp
roll
or
loope
inc
leave
lahf
xchg
dec
movb
aam
lock
inc
inc
cwtl
add
and
sub
icebp
ljmp
mov
cs
adc
fst
inc
enter
jb
dec
sub
mov
pop
ja
push
jns
mov
add
sub
xchg
cltd
sbb
ds
fwait
sub
divb
adc
jecxz
fs
sub
push
xchg
adc
cli
sbb
push
dec
fiadds
mov
dec
mov
push
xchg
dec
rclb
push
push
movntps
xchg
std
out
cmp
cmp
sub
loope
mov
inc
adc
xor
popf
and
sbb
sub
repnz
jp
xchg
sti
jl
lock
mov
and
inc
inc
xor
loopne
ljmp
jne
adc
push
fcmovb
enter
jge
ret
mov
pop
sahf
stos
and
sbb
inc
xor
outsb
xchg
jp
inc
mov
into
shlb
xor
inc
sub
mov
lods
push
xchg
test
rcrl
xchg
xor
mov
adc
and
pop
das
pop
fisubrs
cwtl
add
aam
cmp
and
jge
jns
dec
leave
bound
push
das
cmc
dec
push
pop
cwtl
popa
clc
dec
mov
aaa
shrb
xlat
mov
cli
xchg
pop
dec
ret
or
inc
or
outsl
dec
ljmp
sahf
inc
or
jnp
call
push
adc
and
test
or
mov
pop
pop
das
dec
pop
mov
test
jno
ret
sub
mov
shl
add
vcmpps
xor
push
cmpl
pop
mov
aas
sbb
mov
lahf
adcl
or
stc
aad
dec
xor
inc
and
inc
test
lock
lahf
push
add
nop
loope
iret
adc
mov
movsl
cmpb
scas
rolb
movsl
lock
loope
sub
or
or
adc
stos
sub
lea
jge
sahf
jge
ret
gs
dec
mov
cld
mov
mov
pushl
test
pop
xchg
xchg
add
hlt
adc
mov
mov
icebp
push
clc
xor
lods
lea
adc
dec
mov
mov
mov
ljmp
mov
lea
stos
lds
and
cmpsl
inc
fsubrl
imul
or
mov
xchg
or
rcll
push
xor
aad
stos
add
mov
or
jmp
fsubrs
sub
mov
jb
push
popa
mov
test
jmp
sub
add
mov
cld
cwtl
into
mov
jmp
je
test
push
jecxz
fstpl
xchg
cmp
xchg
fs
cmpsl
imul
mov
xchg
mov
clc
jno
rcl
xchg
fs
inc
orb
mov
lods
push
sarb
dec
pop
leave
xchg
out
adc
adc
je
jne
sarl
jnp
pop
inc
aaa
jnp
sub
mov
adc
pushf
stos
sti
add
xor
in
fadds
xchg
jo
add
or
daa
ret
dec
pop
addr16
xchg
pop
mov
insb
push
gs
mov
push
test
sub
and
jmp
sub
jne
outsl
or
inc
lods
cmpsb
pop
imul
shl
stos
jbe
iret
sahf
pop
imul
mov
mov
and
les
aaa
adc
scas
cmp
outsl
inc
adc
sbb
cmp
dec
enter
mov
adc
dec
test
fstl
out
std
into
mov
jle
fwait
or
add
jmp
or
cmpsb
and
repnz
xchg
sbb
inc
mov
add
xchg
xor
cwtl
mov
mov
into
sub
daa
cmp
pop
xchg
test
push
sbb
and
xchg
scas
out
lret
xorl
mov
lods
insb
stos
gs
lds
mov
mov
mov
test
pop
ja
jne
xchg
xorl
or
add
mov
lcall
stos
test
cmp
add
pop
rcrl
call
jge
cli
pop
lods
aam
cmp
lods
clc
and
add
lods
shrl
cmp
out
clc
scas
inc
xorl
test
cli
sbb
cs
frstor
push
lea
mov
push
adc
push
out
mov
pushf
pop
fst
adc
pop
ficoms
mov
loopne
lret
mov
cmp
push
rclb
cs
or
jp
cltd
mov
and
push
mov
jle
outsl
sbb
inc
jge
loop
sub
mov
mov
pop
cmpl
pop
xchg
jnp
divl
stos
adc
lret
push
in
pop
cmp
jbe
push
sbb
in
incb
inc
push
xchg
add
mov
and
scas
add
ret
or
outsl
jg
dec
cmp
test
inc
shlb
inc
data16
jmp
je
es
and
xor
outsb
outsl
xlat
sub
mov
les
ss
mov
in
shlb
gs
dec
mov
addl
out
movsb
hlt
dec
sbb
lret
int
lea
rorb
sbb
aas
push
mov
mov
cld
divb
adc
push
mov
xchg
out
inc
dec
mov
test
popf
insb
filds
imul
stos
psraw
jae
lret
push
data16
pusha
addr16
mov
mov
mov
mov
jp,pt
aad
je
adc
les
sti
sti
lcall
aas
inc
adc
push
pop
push
outsb
mov
gs
ds
repnz
inc
push
push
sbb
dec
sahf
in
xchg
and
xchg
inc
lcall
insl
xchg
push
add
imul
stc
fwait
sbb
shll
test
pop
pop
push
lds
cli
loop
cmp
pop
scas
xor
cs
jae
pushf
sbb
test
xchg
test
aam
test
push
cs
sbb
sahf
int
mov
fcmovu
icebp
or
xchg
mov
fildll
and
sub
pop
insl
and
dec
shlb
push
pop
orl
add
roll
add
push
push
ss
mov
push
inc
lods
mov
into
or
gs
and
data16
jns
xchg
clc
jae
rolb
out
int
add
sbb
mov
xchg
dec
cmp
mov
dec
inc
clc
incl
sub
push
incb
jmp
cmc
into
or
pushf
cmp
dec
outsl
aas
fbld
lahf
mov
popa
lcall
ds
and
sub
pop
xchg
xor
jns
sub
xchg
insl
push
mov
shrl
loopne
xor
xor
jle
mov
clc
aas
scas
pop
mov
xchg
adc
sub
insl
jl
sbb
movsb
cmp
adc
adc
out
fsubrp
sbb
sbb
into
movsb
push
lods
lahf
into
movsb
ja
and
nop
out
cmp
mov
sub
fs
sti
pusha
push
jp
aaa
mov
gs
or
cmpb
scas
cli
pop
mov
cli
pop
sbb
mov
popa
inc
adcb
ret
sub
int
push
lcall
or
ja
xlat
cmp
mov
inc
mov
inc
and
mov
or
jae
inc
ret
mov
ljmp
in
js
cmp
mov
mov
shrl
icebp
pop
mov
and
pop
xchg
stos
aaa
cmp
int
ljmp
dec
in
mov
decb
mov
inc
jo
testl
mov
xor
adc
repz
fs
pop
sub
sbb
sbb
adc
pop
sbb
div
push
je
and
add
mov
loop
sbb
insb
int
loopne
iret
sbb
les
xchg
loop
cmpl
add
adcb
stos
ficoml
or
pop
jecxz
xorb
sbb
mov
dec
adc
push
lret
cs
fwait
xor
and
shlb
dec
jbe
stos
or
push
sub
sub
sbb
loope
out
adc
lods
stc
dec
mov
jl
imul
mov
bound
pop
jecxz
mov
popl
sti
fmul
adc
popf
out
shll
hlt
popf
test
fcmovnb
mov
clc
cmpsb
call
mov
rolb
dec
and
sub
xlat
jge
inc
inc
ss
es
shrb
scas
fcmovb
les
cmp
ret
je
nop
sbbb
lds
mov
lret
cmp
mov
inc
cmp
fcomps
sbb
mov
jno
lods
sub
subl
lods
xchg
xchg
mov
sbb
in
sub
hlt
cmp
ror
adc
mov
aas
cmpsl
add
aam
sub
inc
repz
mov
sub
inc
int
mov
pop
sbb
pop
notl
mov
cmp
or
fistpll
pushf
pop
fstpt
jo
fadd
fmulp
add
or
cltd
xlat
push
in
leave
lahf
xor
or
repnz
faddl
jne
shlb
nop
ja
sbb
mov
test
sub
ja
add
sbb
popf
clc
xlat
sub
xchg
fidivl
bound
loope
mov
ret
bound
pop
and
mov
fsubrl
pusha
imul
aad
jne
data16
push
test
loopne
xchg
jl
push
add
mov
xor
mov
cmp
int
lahf
in
je
xchg
sub
or
in
or
lret
mov
or
cmp
insb
mov
push
fimuls
ret
cli
mov
fwait
mov
outsb
inc
sbb
xor
add
lcall
cwtl
cmp
lret
test
aaa
popf
int
repz
and
outsb
leave
shll
popf
cmp
repnz
mov
cmp
pop
push
adc
lds
xorb
ret
pop
loopne
jmp
outsl
out
pop
adc
mov
xor
adcb
fnstcw
sub
jb
dec
nop
pop
ss
aaa
je
sti
mov
icebp
or
cmc
out
iret
lcall
pop
jns
fs
xor
nop
lea
out
push
fstpt
imul
cs
movsl
jb
sub
mov
mov
in
pop
inc
subb
sub
add
call
out
aam
shll
rcll
jle
fs
and
and
sbb
pop
cmc
add
ficompl
daa
xor
xor
fisttps
cmp
pushf
xor
add
sti
aas
repz
xchg
imul
lret
imul
icebp
sbb
popf
mov
jecxz
xchg
dec
addr16
mov
call
pop
test
push
fs
push
mov
xchg
sub
push
mov
sbb
push
mov
mov
imul
hlt
repz
fnstcw
out
mulb
pop
das
ret
dec
add
jmp
movsb
enter
jmp
nop
mov
mov
stc
stc
sbb
lcall
add
xor
or
fidivs
push
sbb
mov
add
popf
jle
sarb
xchg
in
and
orb
mov
int3
repz
shrb
lods
mov
pop
mov
and
fs
mov
shl
arpl
ds
mov
jg
pop
andb
pusha
jge
mov
cwtl
or
push
sub
jge
adc
pop
clc
push
sarb
popa
scas
add
data16
dec
lcall
popa
and
fstps
cmpsb
xor
pop
movsl
mov
shr
sti
inc
adc
ja
ss
sbb
fnstcw
xor
aad
mov
mov
push
adc
repnz
lock
mov
sub
stos
sub
rclb
repz
push
sub
cmp
push
inc
leave
jns
cld
es
fisttps
mov
mov
ja
in
pop
and
inc
jnp
jnp
add
ja
inc
pop
push
sub
insl
test
movb
sub
testl
addr16
mov
lret
dec
sbb
add
or
and
movsl
cmpsl
jge
pop
jne
add
adc
ret
out
lods
push
ret
int3
leave
dec
or
or
sub
fcoml
lret
jp
xor
xchg
fisubrl
cmp
aaa
add
mov
mov
pop
daa
dec
subb
popa
fbld
jne
push
test
mov
mov
jmp
bound
mov
mov
outsb
lock
push
ret
insl
dec
jle
hlt
mov
xchg
adc
fs
popa
sbb
mov
push
bound
mov
jmp
fcmovbe
jle
clc
jbe
ret
mov
mov
in
mov
out
add
out
cmp
jbe
jl
std
rorl
sub
std
add
mov
push
sbb
mov
scas
in
xor
push
aam
jle
mov
mov
aam
int3
insb
xchg
jno
lock
or
outsb
push
rcrl
ja
iret
adc
and
pop
fsubl
pop
movsb
repz
xchg
adc
xchg
cmp
mov
popf
aaa
or
cmpsl
rol
imul
repz
sbb
unpckhps
adc
pop
xor
aad
xchg
cld
test
psrlq
mov
ljmp
mov
adc
push
push
sarl
mov
sbb
add
pop
aad
jecxz
aas
test
outsb
stos
ret
loop
dec
xor
insl
sbb
ret
and
pop
pusha
leave
aas
sarb
stos
rorb
popf
jns
ficomps
pop
in
inc
test
pusha
xor
cmp
xor
cmpb
mov
mov
inc
mov
sbbl
xor
leave
cwtl
mov
mov
icebp
fwait
cltd
mov
mov
inc
dec
pop
xor
loope
dec
andb
cmp
mov
and
jp
lods
nop
enter
in
dec
xchg
cmp
in
mov
add
cltd
mov
pop
mov
pop
je
cld
dec
or
in
mov
mov
add
rcrb
adc
and
sub
loop
mov
jns
or
pop
fwait
iret
jae
inc
scas
je
imul
dec
sub
push
call
mov
or
pop
inc
pop
fs
cltd
xchg
and
lods
lock
stos
push
jle
cmp
dec
cltd
fistpll
les
in
cmp
mov
mov
xor
stos
mov
ds
or
popf
mov
icebp
shl
jle
mov
cmp
or
pop
or
stos
push
inc
xchg
test
dec
xchg
insb
call
dec
push
rcrb
and
mov
imull
js
movsb
aam
add
out
roll
pop
jns
push
mov
cmp
xor
cmp
mov
sbb
push
xchg
aam
sbb
stos
push
nop
fistl
nop
inc
loope
in
cs
test
nop
pop
data16
pop
insl
mov
inc
pop
push
push
inc
jg
push
xchg
dec
cmpl
jbe
fwait
or
add
lahf
pusha
pop
jae
imul
popl
aad
pop
xor
push
shl
dec
rorb
or
mov
cmp
pmaddwd
rcrl
lods
xlat
sub
mov
mov
xchg
sbb
inc
sbb
mov
lcall
addr16
addr16
insl
loop
pushf
and
mov
arpl
jno
int3
mov
or
sarl
dec
mov
push
fstpt
sbb
mov
or
mov
mov
in
sbb
xor
jo
sub
adc
inc
inc
mov
add
fbld
push
out
leave
cltd
sub
rcrb
mov
sub
popa
cmp
scas
dec
sub
dec
adc
jb
pop
xor
cmpsb
js
xor
dec
mov
or
loop
aam
dec
add
mov
xchg
inc
stos
sahf
mov
in
and
jbe
adc
adc
das
xor
cmp
dec
arpl
fcmove
js
out
jb
dec
and
xchg
adc
cmp
out
mov
push
js
pop
rcrb
jl
xor
repz
rclb
jne
inc
loope
std
jp
mov
and
outsb
jno,pt
and
loop
fdivr
ret
call
test
rclb
adc
push
fistps
jns,pn
cmp
bound
mov
cmpsl
pop
mov
xor
mov
ds
out
or
adc
lcall
scas
and
dec
jnp
les
cwtl
or
aad
out
mov
in
and
out
xor
or
test
mov
imul
in
lods
mov
imul
xchg
dec
popf
int3
mov
xchg
addr16
push
adc
shlb
inc
jbe
lds
insl
ss
mov
sbb
loopne
push
cwtl
out
jg
jne
shl
jge
adc
icebp
movsl
notb
addl
sti
adc
jecxz
and
cli
pop
decl
mov
sbb
test
iret
popa
inc
dec
mov
jecxz
in
test
cmp
inc
xchg
pushf
inc
and
xor
ss
cmp
xchg
lds
jmp
sub
aas
shl
pop
mov
jecxz
pop
adc
mov
jno
shll
subl
jae
test
mov
rorb
mov
add
imul
or
mov
into
iret
push
cltd
jne
into
mov
repnz
or
sub
insl
jecxz
ja
sahf
push
das
push
ja
inc
add
fisubs
sbb
test
rcr
sbb
ljmp
aam
fucomp
sarl
push
aam
mov
hlt
shrb
ljmp
pop
pop
cmp
or
or
xchg
orl
ja
mov
lock
inc
push
popa
push
push
jb
lods
into
sti
mov
jae,pn
dec
mov
aas
call
int3
std
icebp
mov
adc
push
je
leave
lods
mov
xor
add
xchg
dec
inc
and
pop
aam
stos
imul
lds
data16
sbb
push
mov
xor
lods
scas
jne
inc
inc
clc
outsb
pop
inc
sub
push
outsl
push
addb
push
adc
xchg
ljmp
mov
aad
mov
xor
inc
jae
daa
imul
idiv
mov
jmp
jne
adc
or
mov
jmp
mov
sub
push
mov
push
xlat
out
jns
ret
adc
sub
mov
fimuls
movsl
ficompl
mov
popf
pop
mov
leave
fistpll
push
or
mov
mov
imul
xor
movsl
xchg
pop
lret
mov
mov
mov
cmp
dec
test
cs
lret
adc
into
out
push
cmp
mov
fbstp
leave
add
mov
jg
stos
sub
aas
jno
mov
sbb
dec
out
and
jns
pop
mov
lods
lods
jge
pop
test
xchg
scas
fmulp
jge
cmp
pop
inc
scas
in
pop
mov
out
mov
ret
inc
or
scas
xor
fnsave
stc
sbb
fcom
stc
push
inc
es
hlt
enter
push
test
out
pop
dec
mov
pop
mov
cwtl
call
dec
mov
mov
scas
mov
loopne
inc
lret
jo
aas
push
jle
stc
jg
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
jbe
in
cmp
popa
rcrb
inc
mov
fidivrs
dec
idiv
rol
cs
xchg
xor
lds
jns
cmp
sbb
hlt
loop
xorb
adc
adc
psubd
xchg
out
loope
sbb
negb
cmp
out
inc
pop
dec
icebp
push
adc
pop
pop
jno
cmpsb
xchg
iret
push
jno
inc
fcmovbe
shll
fs
call
clc
mov
xlat
mov
cltd
lods
xor
jecxz
dec
pusha
repz
daa
push
loopne
dec
push
sub
xor
in
das
xchg
int3
mov
roll
decl
gs
mov
mov
push
xlat
cwtl
shrl
sbb
mov
into
or
cmpsl
cmp
ja
mov
sbb
cli
add
daa
and
cmp
shll
lahf
nop
ss
lahf
loop
cmp
in
or
loopne
mov
xor
into
in
mov
sti
sbb
pop
mov
inc
xor
pop
jp
sbb
cmp
pusha
stos
pop
movsl
leave
dec
inc
cwtl
out
clc
popf
paddusw
mov
lds
or
xchg
js
push
pop
jp
ljmp
jecxz
popf
xchg
add
mov
lea
mov
or
sub
fwait
addr16
hlt
pop
jne
xor
jns
lahf
aaa
push
cli
pop
jns
insl
outsb
jb
sbb
cmp
fdivrl
jne
ljmp
sbb
movsb
test
or
into
lods
std
test
ret
sbb
sbb
ficomps
adc
stos
test
clc
mov
dec
inc
icebp
xchg
cltd
xorl
jne
test
out
es
test
inc
dec
mov
and
cmp
inc
xor
popa
add
rorl
popa
ss
add
jns
aaa
add
dec
sti
aad
test
pop
imul
mov
mov
and
call
stos
xor
mov
out
push
stos
cmp
push
loopne
imul
outsb
xor
je
lret
xchg
or
xor
out
pop
pop
loopne
mov
mov
scas
pop
aas
jns
fstl
cwtl
jne
jno
inc
add
shll
mov
xchg
mov
in
fstpl
or
pusha
call
xchg
lcall
dec
mov
sbb
xchg
call
mov
outsb
test
insl
sbb
scas
sbb
mov
pop
xlat
jmp
and
or
ss
dec
add
push
and
ss
lcall
iret
idivl
bound
das
push
jns
push
pusha
sbb
jne
call
dec
push
sub
pop
xlat
jnp
push
mov
xchg
push
roll
stos
sub
mov
push
add
cli
gs
repnz
out
add
pop
mov
ja
ficoms
rorb
lcall
mov
lret
test
scas
mov
add
mov
fsubl
mov
lods
cltd
icebp
mov
xchg
xor
ljmp
pop
std
mov
jns
sub
in
fst
ljmp
cmp
and
add
jne
ds
or
push
mov
pop
pop
lret
lods
clc
lods
les
sbb
fidivl
dec
in
pop
fiaddl
jge
pop
loope
gs
jbe
mov
pop
push
mov
sti
mov
es
xchg
jno
ljmp
sbb
fdivrp
mov
adc
push
repnz
insb
test
xchg
dec
subl
test
mov
xchg
rcrb
test
xchg
pop
cli
test
inc
fdivr
add
xor
pop
movsb
nop
fwait
pushf
es
data16
inc
and
popf
aas
daa
mov
mov
adc
or
mov
rcrb
dec
sub
jno
jbe
mov
mov
mov
push
std
cmpsb
push
scas
pushf
mov
cmc
pop
adc
or
es
jnp
push
popa
mov
dec
add
add
out
call
negl
xchg
jg
mov
rcl
xchg
push
loopne
xor
dec
pop
inc
jno
cmp
mov
inc
mov
jge
ret
add
and
les
xchg
mov
lret
std
push
adc
imul
inc
mov
test
cwtl
cld
xchg
xchg
cmp
inc
mov
out
xlat
mov
aad
or
shl
iret
sub
out
mov
adc
imul
xchg
xchg
enter
outsb
fwait
xchg
popa
daa
inc
mov
movb
lahf
or
xchg
mov
sub
cmc
sbb
repnz
sbb
call
cmp
sbb
js
ss
test
pushf
xor
mov
push
leave
ds
cmp
rclb
shll
lds
adc
cwtl
out
stos
jp
mov
add
and
cmc
mov
jg
dec
fsubr
and
inc
in
pop
lret
jo
mov
mov
and
std
pop
mov
loop
fcoml
mov
scas
inc
push
xchg
ret
int
mov
sbb
add
jns
push
imul
xchg
pop
jle
pop
mov
adc
sub
xchg
pop
push
jae
cwtl
pop
lret
mov
or
aad
push
stos
pop
arpl
dec
loope
fs
call
jbe
fnsave
or
int3
fwait
out
aad
imul
popa
out
into
jge
xor
or
and
xor
jae
les
in
lods
in
inc
rcrb
sub
jb
mov
and
es
add
cmpl
in
dec
lock
into
stc
js
mov
ds
dec
movsb
mov
cmp
out
enter
or
fidivrs
pop
xchg
divl
jno
jne
sbb
mov
ret
jnp
movsb
add
imul
and
add
out
push
pop
jle
mov
and
insb
adc
outsl
or
add
push
push
mov
incb
lock
jle
scas
fcompl
and
in
dec
stc
icebp
sbb
lods
cld
push
cli
add
jnp
shll
dec
pop
mov
xchg
cmp
mov
retw
and
iret
and
add
leave
mov
test
pop
ds
into
mov
jecxz
push
and
jmp
sbb
mov
je
movsb
xor
ss
mov
shlb
mov
out
ret
inc
fsubrl
sub
inc
xchg
enter
mov
ficompl
stc
cltd
int3
jnp
cli
stos
jp
insl
dec
out
push
fldt
cmpsb
shrl
das
mov
xor
loopne
fistps
cmp
mov
repnz
out
jge
adc
xchg
ss
mov
roll
push
jo
fucom
pop
int
push
mov
jmp
add
ret
outsb
inc
rcl
or
inc
arpl
in
in
pop
pop
hlt
imul
and
cld
ret
push
xchg
xchg
pushf
mov
or
add
and
test
cmp
mov
cmp
jae
cmp
clc
mov
psllq
inc
call
insl
jne
test
push
in
arpl
push
push
or
stc
das
mov
sti
shr
jmp
outsb
das
es
lods
sarb
or
cmp
pop
out
push
dec
sbb
xor
insl
iret
mov
scas
sub
mov
data16
sbb
cmpsl
jno
fwait
mov
aas
xor
shr
imulb
xchg
pop
movsb
fcompl
loop
or
mov
and
pop
mov
out
imul
rcrl
lahf
pop
xor
in
xor
scas
iret
dec
nop
movntps
mov
popa
push
enter
pop
dec
shlb
mov
insl
jp
mov
inc
sahf
mov
push
or
movl
iret
sub
test
adc
out
xlat
in
sub
pop
xchg
pop
push
xchg
pushf
fisttps
jmp
lods
mov
call
lds
and
inc
enter
push
pusha
or
or
xchg
sbb
mov
xor
lret
lock
nop
lea
divb
lahf
jl
jg
mov
pop
loopne
pop
test
jecxz
or
ds
popf
fcomps
ficoms
inc
insb
js
or
testl
mov
daa
das
and
mov
pusha
test
je
xor
inc
dec
push
lods
push
imul
cmp
push
ret
push
cmpsl
push
popa
out
mov
jnp
or
data16
mov
ret
shll
xor
push
or
mov
lods
push
jp
sbbb
cltd
cmp
jl
pop
fimuls
pop
jmp
mov
fsubrs
aad
jle
hlt
loop
push
add
and
cmp
addl
mov
repnz
inc
pop
cltd
orl
mov
mov
out
sarl
int3
hlt
xlat
repnz
insl
cwtl
outsl
cmp
sbb
cmp
sbb
dec
stos
pop
fidivrs
faddp
jne
nop
mov
fnstenv
dec
fbld
mov
in
inc
cwtl
dec
pop
movsb
xchg
mov
in
dec
inc
bound
xor
dec
cmp
pop
adc
cmp
shl
bswap
push
jo
mov
xchg
test
lock
sub
aam
jmp
lods
pop
int
rcrb
je
add
sub
out
sbb
loopne
es
pop
ret
adc
in
sets
jae
sbb
add
cld
jl
mov
aam
cs
mov
mov
sti
sbb
cmpsb
xchg
fildl
aad
jnp
push
fistl
or
mov
lods
shl
sbbb
jbe
adc
rorb
mov
je
fabs
mov
xor
add
adc
jmp
repz
subb
sbb
inc
inc
ret
cmp
jp
cmp
sub
aad
ja
sahf
lods
xchg
out
hlt
mov
xor
jge
imul
into
call
jmp
mov
cltd
inc
jg
lods
out
lret
negb
pop
push
das
insl
sub
push
test
add
lods
cli
mov
push
jp
addr16
mov
inc
mov
imul
mov
iret
sub
mov
or
xor
ret
into
fcoml
cwtl
pop
lods
stos
jmp
rcrl
lret
and
stc
insb
lods
sub
mov
push
movsb
xchg
xor
notl
testb
lret
push
pop
sub
stos
mov
leave
pop
jmp
jg
add
jle
sub
stc
sbb
imul
data16
pop
adc
lret
cmp
mov
push
lods
in
in
jp
cmc
push
dec
stc
pop
imul
pop
xchg
ja
imulw
inc
cmpsl
mov
xchg
divl
add
xor
pop
daa
mov
jo
and
movsb
int
cmp
jno
push
pop
ds
mov
cmp
mov
mov
movsl
mov
ljmp
movsb
popf
xchg
jle
inc
xor
in
int
imul
icebp
adc
enter
arpl
insb
sbb
ljmp
ret
mov
cmp
push
sub
ljmp
icebp
mov
in
call
sbb
mov
aas
ret
cmpsb
mov
outsl
xchg
mov
cmp
and
pop
mov
inc
jne
icebp
pop
ror
scas
testb
sub
bnd
inc
push
sbb
lret
xor
fnstenv
in
pop
jo
adc
out
mov
push
imul
xchg
xchg
mov
cwtl
and
jae
jmp
mov
mov
addr16
jo
cmp
xchg
imul
outsl
inc
cld
push
aas
xor
or
fldl
ljmp
hlt
dec
in
xor
cmpsl
jmp
inc
fisubrl
stc
xor
dec
insl
nop
mov
loope
sub
call
xchg
aam
adc
das
inc
repz
lods
jmp
xchg
iret
lock
mulb
add
jp
in
pop
les
ficoml
mov
xchg
aad
aaa
loope
fidivrl
imul
jge
mov
mov
addb
ss
jp
leave
ja
rcll
mov
adc
clc
mov
mov
lds
loope
sub
std
pop
rcrb
testl
pop
jmp
mov
jb
dec
mov
inc
cmp
or
sbb
sbb
cmpsl
pushf
in
cmpb
mov
insb
ds
and
sbb
shrb
int
addr16
repz
xor
pop
jno
nop
or
mov
stos
loop
sub
fstl
xchg
jbe
sbb
cli
pop
call
fisubrs
inc
fldcw
jae
test
shlb
lock
mov
cmp
cmp
mov
fiaddl
sub
inc
lret
pusha
fistpll
cld
shlb
bound
pop
ret
sbb
ret
cmpsl
dec
jb
sarb
mov
stos
testb
sub
push
cmp
mov
andl
popa
or
xor
scas
dec
pop
pop
popf
dec
lret
mov
xchg
call
mov
mov
mov
pop
call
das
imul
pop
aaa
aas
jbe
jno
in
pop
xchg
ja
xchg
movsb
into
movsl
jne
mov
lret
popf
dec
lcall
insb
icebp
daa
clc
into
stos
mov
dec
pop
lock
icebp
jbe
adc
in
or
sub
jmp
ja
pop
adc
push
mov
xchg
and
movsl
adc
out
and
hlt
xchg
sub
or
scas
lods
push
sbb
ja
in
lcall
push
push
loope
into
dec
stos
aam
dec
insl
int
mov
mov
lret
in
cwtl
mov
mov
sbbb
push
icebp
mov
and
jl
std
hlt
jne
jge
loopne
xchg
fsubl
inc
jl
aam
mov
nop
cmpsl
inc
jns
or
mov
xor
jl
and
or
dec
cs
cmc
lcall
xchg
aam
and
sub
stc
sbb
cmp
xor
inc
push
out
fwait
push
cwtl
leave
and
aaa
loop
adc
push
xor
dec
sbb
mov
mov
popf
ret
lret
jg
and
push
movsl
ror
repnz
inc
jmp
sbb
lcall
cld
push
cltd
les
and
cltd
xchg
nop
mov
dec
into
cli
jle
sbb
popf
lret
inc
mov
fisttps
ljmp
sbb
rorb
and
repz
jle
add
push
fdivl
push
fwait
daa
push
cs
xchg
outsb
test
rol
sar
lret
dec
and
cltd
adc
xor
xchg
xor
lahf
and
cmp
fsts
xor
adc
jecxz
push
test
lock
int
jb
jne
or
cmp
aad
xchg
push
jb
into
dec
dec
jns
xor
das
push
jo
pop
xor
xchg
sbb
jmp
cmp
pop
dec
inc
xchg
mov
fstpl
or
mov
pusha
mov
popf
clc
or
inc
or
daa
scas
lods
adc
inc
movsl
lock
mov
mov
add
mov
mov
pop
dec
jge
sbb
aad
andb
mov
shll
mov
mov
or
andl
and
inc
test
or
out
aaa
pop
stc
js
in
cmp
xor
sti
cmp
adc
jnp
enter
push
sub
xor
stc
enter
leave
sahf
bound
fnstsw
or
popf
jns
mov
lods
add
enter
shrl
add
jnp
or
sub
or
pop
les
ficompl
clc
sub
push
cltd
inc
enter
or
es
loop
and
pop
hlt
sbb
inc
inc
sbb
inc
mov
jmp
ds
scas
mov
xor
cmc
cmp
out
mov
mov
lea
inc
addb
fs
int3
lea
in
inc
in
fdivs
into
push
std
or
jge
hlt
adc
mov
dec
mov
inc
js
mov
inc
mov
jecxz
xchg
cmpb
clc
mov
xchg
imul
les
int
inc
rcrb
lahf
and
aas
xor
inc
dec
cmp
jp
cs
je
gs
pusha
dec
cmp
xor
aam
cltd
test
movsl
lock
lods
mov
mov
mov
sub
cld
movsb
mov
cmpsl
pop
pop
mov
insb
mov
mov
inc
sbb
insb
andb
pop
push
mov
and
adc
jmp
shl
mov
xor
push
jmp
cmp
arpl
cmpsl
ret
adc
sbb
ficomps
out
movsl
or
mov
hlt
dec
jmp
stc
jo
outsb
push
lret
inc
pop
pushf
fcomps
sub
jns
sub
add
inc
pop
loopne
sbb
sub
xchg
ja
sarl
jmp
out
xor
es
push
or
nop
sbbl
ja
icebp
dec
movsl
outsl
int3
imul
es
push
rcr
jo
mov
add
lods
shll
arpl
xchg
xor
mov
jmp
jge
out
out
cli
leave
cs
fdivp
std
fwait
push
rolb
dec
mov
out
bnd
test
bound
jnp
adc
das
xchg
mov
push
sub
out
sub
sub
inc
dec
or
push
mov
xchg
call
dec
or
pop
jne
mov
in
and
mov
mov
fcoms
iret
test
sarb
nop
int
jnp
sbb
loope
test
pop
cmp
popf
leave
fwait
xchg
call
dec
aam
in
loop
jge
xchg
inc
imul
cltd
push
adc
jle
std
inc
xchg
jp
mov
mov
cmc
loope
mov
mov
xlat
fsubs
mov
loope
pop
cmp
das
add
pop
mov
and
dec
push
xor
push
push
mov
fdivp
xor
subl
in
repz
add
aad
mov
lret
push
loopne
jle
rclb
lods
push
mov
inc
cmp
leave
sbb
mov
loopne
adc
cmpsb
lcall
fbstp
or
sub
jo
ljmp
icebp
add
push
mov
mov
or
sub
add
adc
add
daa
fwait
nop
ljmp
data16
test
lret
push
mov
or
or
test
pop
add
xor
subb
ja
std
jo
xchg
pop
jb
jb
sahf
xchg
jbe
loop
daa
push
gs
pop
sahf
sub
lock
into
dec
mov
xchg
cmpsb
scas
es
out
std
mov
pusha
add
cmc
push
mov
push
gs
sbb
pusha
sar
les
test
leave
adc
push
adc
rclb
xor
movsb
imul
notb
mov
xchg
push
fstpl
lock
xorb
int
test
insb
in
hlt
rclb
xor
testb
jbe
pop
stc
test
rolb
sub
dec
imul
ret
xchg
mov
das
lds
loop
fdivs
mov
movsl
push
mov
xchg
jl
lock
or
dec
rdpmc
insl
lds
repnz
push
decl
ds
test
jbe
inc
mov
lds
sbb
js,pn
aas
in
and
or
xchg
jno
jle
jo
iret
xrelease
por
xchg
fwait
or
dec
mov
dec
and
sarb
jo
fwait
dec
call
xor
loopne
int
out
mov
inc
or
push
inc
dec
mov
loop
mov
lcall
jno
adc
push
or
mov
mov
inc
or
and
xor
mov
aas
test
scas
fiadds
in
inc
out
stc
xlat
adc
jo
xchg
xor
jne
call
movsb
outsb
and
and
les
sahf
jne
sub
pop
out
jo
in
add
and
inc
or
jecxz
push
mov
inc
xor
xchg
loope
and
pusha
fwait
clc
or
add
sbb
dec
mov
cmc
pop
imul
into
ljmp
push
sarl
push
cld
lret
jne
rolb
cmp
divps
cmp
inc
daa
cltd
sub
and
mov
data16
mov
imul
xor
mov
dec
adc
lret
cmp
icebp
jle
inc
adc
rorb
mov
aaa
lods
adc
xchg
push
push
add
jo
mov
mov
jecxz
dec
lods
fs
cwtl
mov
inc
add
pushl
push
pop
fwait
in
dec
je
jge
cmc
mov
adcb
mov
dec
or
es
mov
out
out
xor
test
mov
dec
inc
cmpsl
mov
loopne
pop
mov
mov
inc
sbb
sbb
mov
arpl
testl
pop
pop
sbb
test
icebp
xchg
stos
or
ret
dec
hlt
push
add
push
ja
lods
test
and
xchg
in
mov
clc
std
jo
sub
aas
cmp
stos
outsl
ret
pusha
loopne
movsb
fimuls
jp
sub
xor
mov
movsl
clc
jne
in
add
xchg
jmp
fsubl
pop
out
inc
in
loop
lock
adc
stos
repz
movsb
jmp
dec
jb
push
push
inc
jmp
mov
sahf
jbe
pop
jl
xchg
icebp
mov
sub
in
gs
jg
fisttps
add
icebp
inc
pushf
daa
cmp
in
and
jge
adc
sub
loope
or
mov
pop
arpl
jle
jnp
jbe
call
movsl
loope
and
mov
cmc
pop
imul
mov
sarb
int3
or
push
mov
lret
jge
xor
loope
sub
pop
xchg
pop
mov
pop
lods
les
mov
sahf
inc
mov
and
adc
shll
and
sbb
cmp
hlt
sbb
pop
mov
incl
jge
js
lods
xor
xchg
hlt
inc
xchg
cmp
add
xor
aaa
test
pop
mov
sbb
xor
loop
mov
sub
pop
ja
mov
adc
jge
xor
sbb
into
cmovns
inc
and
scas
mov
daa
divl
fistps
aas
imul
fimuls
pop
test
lahf
lahf
lods
cmpsl
xor
pop
pop
fldcw
adc
cld
in
movsl
sarl
push
push
ja
test
dec
fstpl
push
popf
dec
gs
mov
js
bnd
mov
leave
add
mov
mov
loope
mov
dec
fimuls
int
lret
outsl
push
pop
fs
jae
pop
or
fucomip
cmp
push
mov
push
jno
inc
shlb
cltd
neg
pop
mov
inc
imul
in
aaa
pop
into
adc
aad
lock
fistpll
xchg
inc
rcrb
in
push
mov
dec
mov
dec
add
fisubs
sub
mov
lds
pop
insb
in
repz
data16
add
adc
or
lock
aas
pop
movsb
xchg
mov
insl
dec
flds
dec
out
and
in
ror
adc
mov
mov
jecxz
or
mov
xchg
mov
push
jae
nop
or
fidivrl
insl
std
mov
xor
push
sbb
or
sub
sarb
sub
jns
imulb
adc
xor
sbb
push
sub
push
cwtl
cmp
add
std
cmp
aam
jge
stos
xchg
or
push
clc
gs
push
pushf
jns
mov
pop
mov
push
ret
jp
in
roll
sbb
lret
pop
inc
stos
jb
sbb
cmp
pop
mov
pop
mov
nop
xchg
mov
xchg
jg
jge
mov
icebp
das
ss
insl
test
popa
adc
icebp
mov
fcomps
iret
lea
cmp
repz
in
mov
pushf
out
jmp
dec
test
mov
sarl
dec
jp
add
mov
pop
adc
sbb
add
jmp
push
cmpsl
or
leave
andb
fnstcw
lret
lea
xchg
or
cld
sahf
pusha
nop
dec
fmull
inc
adc
jge,pn
sti
sub
out
stos
mov
xchg
jg
inc
mov
sub
sbb
mov
mov
adc
inc
add
insb
fcoml
pop
add
fildl
cmp
mov
lods
jo
pop
pop
inc
lods
sub
sub
mov
es
xor
jg
icebp
inc
adc
xor
outsb
jmp
movsl
and
mov
mov
mov
jno
in
jge
int
pcmpeqb
pop
ret
insb
cmp
lcall
dec
inc
pop
add
or
push
in
cmp
sbb
cwtl
sub
push
lret
jae
or
js
and
je
fwait
out
dec
std
sahf
fildll
loopne
outsb
pop
lock
shll
testb
mov
repz
add
std
lds
push
scas
push
outsl
push
mov
jne
out
sub
repz
xchg
pop
aad
pushf
cmp
fadds
inc
add
and
xchg
xor
pop
cmp
mov
push
mov
shlb
mov
jmp
xor
das
dec
or
and
xchg
in
or
jno
add
jb
into
aas
lds
not
mov
xor
or
mov
adc
test
pop
cwtl
hlt
push
lods
fldenv
daa
inc
mov
xchg
mov
add
enter
jmp
int3
pop
sub
mov
sub
sub
cld
push
iret
in
mov
shl
das
and
mov
shrb
repnz
jge
aaa
inc
sbb
stc
mov
xor
mov
ljmp
ss
je
dec
cmp
adc
cltd
into
jmp
ja
sbbb
scas
pop
mov
and
mov
fsubrl
sarb
rclb
ror
jne
fdivp
fbld
popf
and
les
lahf
cmp
lret
xchg
jno
fld
addr16
pop
mov
int
jo
out
cmp
nop
ficoms
cmp
call
outsl
adc
pop
mov
adc
int
leavew
ja
outsl
repz
inc
push
mov
lea
leave
out
decb
xor
incl
push
xchg
jae
and
mov
mov
mov
dec
cli
xor
int3
popf
lret
rcrl
fstpl
xchg
pop
ret
xchg
inc
mov
and
add
enter
push
or
sti
leave
lcall
adc
mov
cltd
mov
cmp
push
cmp
scas
inc
and
repz
pop
out
mov
ret
fs
or
lret
sbb
mov
adc
lods
push
lods
mov
movsl
insb
lds
ret
movsb
xchg
loop
sub
out
cmpsl
mov
mov
adc
cs
fisubrl
pusha
cmp
push
scas
inc
jge
bound
popf
sbb
fidivl
dec
push
mov
push
add
rcrb
rol
lods
sbb
fsubl
clc
sti
iret
inc
inc
mov
pusha
sub
add
cmp
mov
cmp
sub
fisubrs
fcmovnbe
push
mov
mov
out
je
push
mov
jl
jb
sub
dec
pop
push
cmp
gs
outsb
rorb
das
xchg
xchg
sbb
mov
and
cmp
ret
mov
adcb
adc
pusha
imul
xchg
popl
int3
xor
push
test
aaa
sub
jmp
outsb
mov
jbe,pt
pop
into
or
inc
jg
sarb
push
jbe
fadds
roll
test
adc
in
push
neg
dec
fcoml
das
movsb
in
mov
xor
int
dec
pop
daa
xchg
adc
mov
sub
mov
mov
xchg
movsl
jnp
pop
sbb
xor
cmp
mov
int3
cmp
xorb
rorl
out
push
lcall
lret
daa
cli
xchg
adc
cmp
dec
mov
pop
jae
mov
rcll
outsb
mov
test
arpl
mov
mov
icebp
or
inc
mov
inc
jae
scas
ja
ret
rorb
movsb
xchg
arpl
adc
ja
push
fists
cld
cmp
leave
pop
sub
mov
bound
js
outsl
lcall
mov
cmc
in
int
lret
cld
dec
and
pop
shll
idivl
fldcw
pop
adc
mov
mov
sti
mov
cmp
xor
add
xchg
lds
mov
or
add
jl
jg
and
dec
sbb
sbb
pop
inc
aaa
mov
into
rorb
pushf
adc
lds
jmp
add
push
outsl
mov
and
int
mov
pop
add
imul
subl
inc
inc
or
clc
fsubp
cld
and
cltd
pop
mov
jbe
aam
lock
rorl
cmpsl
fistpl
or
inc
xor
outsb
in
cmp
ds
punpckhwd
sbb
stos
add
xor
fs
mov
adc
pushf
push
add
ds
jnp
mov
inc
cwtl
adc
into
or
push
mov
cld
and
rclb
fidivl
lods
dec
scas
out
or
cmc
adc
push
mov
loopne
sbbl
mov
jle
xor
out
das
cmp
iret
dec
adc
cmpsl
icebp
dec
add
repz
mov
repz
outsl
push
xor
jle
sub
add
shl
xchg
sbb
xor
and
negl
lea
gs
movsl
dec
xchg
lds
orl
jbe
mov
xor
adc
pop
cld
and
fstps
jmp
cltd
mov
jns
repz
xchg
aam
dec
inc
push
stos
test
pop
lds
mov
sub
mov
test
cmp
push
cwtl
inc
mov
and
xorb
push
jne
jp
pop
cmp
and
lock
or
iret
movsb
push
lods
pop
scas
push
mov
shl
enter
cmpsl
mov
jg
sub
inc
push
mov
jb
int3
fs
ret
clc
stc
ret
test
sub
inc
ret
ja
mov
lret
int3
xchg
sbb
stos
pop
insb
add
iret
sbb
cmpsl
jo
add
or
xor
push
mov
adc
insl
mov
pop
call
rcll
sbb
mov
enter
enter
pop
jnp
sub
unpckhps
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
pop
loop
xchg
cld
popa
bound
bound
jl
jge
mov
int3
pop
add
std
push
hlt
push
cmp
aad
nop
into
sub
or
dec
xor
cli
sbb
ja
jns
loop
inc
js
mov
xor
push
pop
jp
lret
insl
stos
sub
inc
jnp
in
and
fsubl
rcrb
cmp
loope
repz
test
xchg
mov
jbe
pop
addr16
enter
sbb
scas
pop
lret
sub
xor
ret
mov
popf
inc
xor
inc
ds
mov
mov
jno
nop
stos
fwait
test
inc
dec
push
xor
bsf
push
add
cmpb
push
xchg
sbb
inc
and
dec
bound
into
stc
sbb
push
add
pop
adcb
sub
and
js
iret
jecxz
jne
mov
insb
bound
fisttpl
jo
pop
pop
bound
ja
out
lods
movsb
leave
push
pop
negl
adc
jmp
cmc
scas
movsl
jle
jnp
inc
cmpsl
jae
xor
mov
xor
push
popf
popa
data16
mov
mov
push
icebp
jecxz
sbb
js
xchg
mov
xchg
imul
jmp
cmpsb
mov
and
or
je
out
daa
loop
pop
call
sub
mov
mov
repz
xor
mov
mov
jge
or
adc
mov
pop
enter
dec
insl
adc
lods
aaa
sbbb
add
jge
repz
xchg
push
push
not
sub
mov
jo
jp
enter
cmc
std
es
pop
jmp
je
lret
mov
scas
mov
sub
movsl
jns
cmp
cli
xchg
and
push
and
pop
jmp
pushf
jo
or
jl
push
jge
cld
out
pop
adc
add
dec
int
testl
cmp
push
lcall
mov
and
and
sub
sbb
in
push
loop
movsb
jne
int
push
sub
push
movsb
dec
pop
mov
mov
xchg
scas
outsl
movsl
ss
test
jne
enter
mov
inc
ret
push
popa
das
jne
negb
mov
mov
stos
and
fdivs
fldcw
jno
ss
or
stos
jp
jge
imul
pop
and
popa
jl
in
mov
movsb
sub
cmp
xor
jle
cld
sub
nop
lret
out
in
popa
and
xor
push
daa
pop
xchg
dec
lahf
js
mov
into
mov
mov
call
aam
pop
or
sub
push
test
cwtl
test
mov
scas
addr16
mov
cmp
shlb
in
out
sub
mov
mov
sbb
pop
lods
push
xchg
push
jb
xchg
data16
xor
inc
inc
xor
lret
ss
cmp
scas
mov
mov
cwtl
dec
add
cmpsb
pop
lret
add
pop
mov
pop
pop
shl
push
scas
popa
imul
pop
cmp
sbb
into
in
pop
cmpsl
pop
inc
jnp
lock
test
add
loope
movsl
out
xor
push
ja
rol
hlt
add
test
xor
jmp
jmp
cld
lock
mov
push
push
stc
push
jmp
imul
in
sti
into
sbb
movsl
or
fidivl
and
dec
xchg
push
and
div
jl
icebp
rcrl
or
icebp
movsb
mov
xchg
jb
imul
mull
fcoms
cmp
imul
subb
pop
xor
aad
test
mov
repnz
mov
inc
or
mov
or
dec
push
lods
pop
out
pop
pop
imul
push
pop
movsl
sbbb
mov
pop
mov
mov
scas
inc
jg
push
in
inc
out
cmp
and
or
stc
cmp
jle
mov
inc
cmp
mov
jl
xchg
mov
xchg
or
in
sahf
fildl
scas
lds
or
lods
lods
test
push
pop
ss
push
xchg
and
rep
xchg
or
out
das
in
mov
es
into
push
push
pop
pushf
add
jne
outsl
inc
lret
dec
push
dec
imul
stc
popa
pandn
and
aad
add
xchg
lret
push
mov
data16
push
dec
leave
xor
int3
pop
mov
cld
sbb
xchg
mov
js
popa
aaa
dec
stc
mov
fs
cli
mov
test
inc
enter
popa
dec
and
xchg
jno
cmp
insb
jmp
push
stos
jnp
dec
lret
cld
das
pop
jp
fldcw
and
rcrb
mov
sbb
shrb
cmp
or
sbb
cmp
nop
fmuls
js
imul
scas
outsl
jmp
jb
xchg
or
adc
pop
and
imul
dec
mov
pop
imul
aad
imul
push
mov
jge
xlat
xchg
xor
enter
cmc
and
mov
xchg
pushf
mov
je
rcrl
sub
nop
push
fisttpl
out
mov
mov
mov
jecxz
or
dec
movsb
adc
movsb
push
mov
xchg
push
inc
test
pop
je
and
test
icebp
mov
jnp
cwtl
bound
dec
stos
ds
ret
add
lea
jle
mov
lock
nop
xor
outsl
into
dec
out
sbb
cld
jno
xor
repz
sbb
data16
enter
nop
nop
sub
sbb
pop
stos
int3
jns
pop
sbb
dec
decb
pop
ss
cli
lahf
std
dec
out
imul
addr16
jns
sub
rcl
add
sub
andl
jle
sub
mov
pop
test
pop
mov
andl
adc
cmp
dec
adc
cmp
popa
out
jo
push
bnd
std
insl
and
cwtl
fimuls
imul
sbb
inc
cmp
test
jmp
cmp
cmp
test
push
mov
mov
jg
test
data16
xchg
in
inc
pusha
cmp
imul
sub
insb
cmp
pop
mov
dec
add
in
adc
dec
sub
sbb
inc
jo
add
sub
lret
das
push
sahf
loope
add
add
dec
sbb
out
mov
aas
ror
nop
jmp
pushf
pop
mov
stos
stc
push
into
mov
pushf
xadd
xchg
or
pop
sbb
shrl
push
jle
stos
lcall
lods
mov
add
adc
xchg
lea
outsl
cmpsb
call
mov
pop
inc
mov
popf
negl
outsb
mov
fbld
lods
cmc
sub
in
ljmpw
xchg
push
ljmp
sub
xor
fildl
push
addr16
xchg
push
clc
fldt
jns
push
pop
cmp
dec
fstpt
push
cs
mov
or
mov
jmp
sbb
push
push
in
cmp
jmp
mov
pop
mov
xchg
push
je
fwait
adc
outsb
cmp
adc
out
insb
outsl
inc
enter
push
inc
xchg
je
pop
and
mov
mov
mov
and
sbb
and
cmp
call
mov
cmp
dec
jo
pop
sbb
addb
jns
sahf
or
data16
mov
jno
xchg
mov
xor
fsts
adc
repnz
sbb
pop
or
pop
imul
fistps
cltd
pop
lock
inc
xchg
lock
pop
mov
les
cmp
mov
cmp
out
shrb
jle
push
fdivp
add
push
xor
inc
arpl
mov
mov
jg
test
inc
sub
fidivl
ja
inc
outsb
test
sahf
cmp
xor
nop
insb
addr16
movsb
jbe
pusha
push
nop
xchg
dec
and
je
add
pop
imul
or
adc
jno
lret
testb
in
xor
push
mov
xchg
mov
in
cmc
lret
add
test
push
sarb
std
sbb
xchg
movsl
jo
sbb
mov
push
and
pushf
mov
aad
pop
es
imul
popa
or
mov
repz
xor
jo
ret
jge
out
lcall
sub
cwtl
mov
xchg
jns
push
push
cmp
insb
adc
push
mov
xchg
sub
and
xchg
gs
or
mov
mov
ss
push
pop
push
xor
jecxz
mov
lahf
pop
cmp
jle
les
add
sub
test
inc
movsb
stc
sbb
cmpsb
inc
or
sub
add
push
cld
mov
dec
mov
cwtl
dec
inc
mov
cmp
iret
and
adc
pop
add
add
and
sbb
cmc
dec
dec
jnp
or
repz
fwait
xchg
lods
dec
jmp
push
jnp
out
ss
mov
es
pop
mov
ja
dec
scas
bound
cwtl
rcll
sbb
and
jb
add
jmp
jmp
pop
sub
in
pop
dec
mov
mov
jb
aas
popa
fs
dec
pop
sti
and
fimuls
cmp
mov
jns
test
inc
mov
jnp
imul
add
imul
and
inc
cmp
push
sti
orb
or
xlat
insl
xor
les
push
mov
ret
add
mov
shr
inc
inc
movsb
dec
mov
clc
ds
loopne
aas
add
push
pop
lcall
jmp
imul
rcrl
and
neg
adc
mov
or
pop
xchg
push
out
pop
pusha
adc
movsb
jae
cld
insb
lock
lock
mov
add
mov
pushf
dec
hlt
rorb
lret
cwtl
add
lock
jne
fldlg2
js
pushf
lods
ljmp
shlb
sub
scas
loope
pushf
mov
aas
cmp
add
cmpsl
adc
ljmpw
xchg
cmp
mov
and
leave
sub
popa
mov
call
mov
jl
cmp
outsb
loopne
mov
dec
sub
pop
aas
sti
call
xor
xlat
dec
fsubrs
xor
fucomip
fsts
or
or
popa
lds
loope
dec
or
push
lcall
mov
jle
mov
pop
and
push
mov
push
sti
fcmovnb
xor
mov
xchg
mov
fimull
mov
in
aaa
sub
ret
xchg
pusha
cmpsl
or
jne
inc
mov
in
lcall
add
or
jmp
iret
sub
icebp
cmpsb
xchg
push
mov
or
sub
insl
lret
fcoml
sub
adc
rcrl
aas
jne
mov
jnp
lea
mov
rolb
jg
ljmp
adc
xchg
mov
mov
and
data16
icebp
and
arpl
xchg
pusha
cs
jle
push
push
cld
pop
xchg
pop
fstps
dec
fsubp
mov
addr16
xchg
in
dec
outsb
rolb
cmp
into
out
dec
add
popa
clc
sbb
into
pop
sti
inc
sbb
adc
xor
fsubs
mov
dec
push
pop
jmp
inc
add
inc
loopne
lock
jecxz
pushf
jl
lahf
push
aas
ds
and
sub
mov
fsubl
adc
movb
mull
test
xchg
lds
jno
xchg
pop
xor
jo
negb
push
xchg
rolb
cmpsb
push
and
dec
fsubrl
and
roll
inc
xchg
addr16
mov
or
insl
jle
arpl
daa
dec
jnp
nop
insb
mov
xchg
push
inc
ret
jno
call
jno
lea
pop
lahf
sub
and
ja
and
push
jg
push
fimull
mov
sub
cld
push
shrl
jge
nop
add
sub
adc
cmp
out
fucomp
aas
jne
outsl
lret
or
mov
lret
pushf
mov
inc
cmp
pop
dec
ss
add
mov
sbb
jb
andb
dec
dec
aas
stc
sbb
push
paddq
inc
gs
fsubrs
adc
lock
repz
mov
loop
cltd
xchg
sbb
jb
stc
adc
into
jae
pop
aaa
push
outsb
nop
test
or
mov
push
rclb
dec
cmp
xchg
sbb
sub
inc
sti
fistps
aas
inc
push
jno
gs
mov
or
enter
or
fmuls
or
mov
in
xchg
outsb
push
scas
mov
enter
mov
and
lret
scas
pop
cmp
sbb
movsb
sbb
jge
mov
dec
jae
xor
imull
jns
shr
pop
lcall
std
pop
push
and
mov
push
fwait
in
cs
in
outsb
cmp
inc
addr16
ret
test
lock
notl
lods
mov
pop
dec
push
adc
imul
fldt
jb
inc
cmp
pop
mov
negb
push
or
mov
mov
mov
es
into
jp
pusha
sub
mul
ss
adc
jle
lret
sub
mov
inc
popa
repnz
movsl
inc
cmp
sarl
insb
bound
push
lret
lods
popf
push
push
and
sbb
cmc
pop
loopne
and
addr16
jb
pop
out
testb
pop
sbb
xor
add
lcall
je
sti
popa
test
inc
jae
mov
in
bound
aas
leave
out
ret
je
addb
clc
repnz
mov
inc
cmp
ds
imul
out
stos
cltd
cmp
or
or
daa
push
push
notb
sbb
sub
outsb
sbb
aas
lret
das
sahf
and
add
sub
sbb
pop
xchg
adc
sahf
scas
push
dec
jns
andl
outsb
repz
cld
shlb
out
repz
xchg
nop
sbb
call
stos
jge
inc
adc
mov
insb
je
scas
mov
mov
push
jo
outsl
or
sbb
insb
fcompl
dec
movsl
lcall
adc
push
cmp
push
add
push
out
pop
xchg
jecxz
xchg
dec
cmc
gs
sbbb
int
or
push
repz
mov
test
sub
jae
jno
mov
and
insl
jno
loope
adc
jecxz
push
add
add
loope
push
ds
lret
mov
push
out
loopne
inc
in
mov
mov
inc
in
movsb
iret
fadds
shlb
lock
xchg
pusha
adc
xchg
push
mov
scas
mov
push
sub
aas
sahf
lahf
test
xor
or
jns
add
rep
dec
daa
jg
int
pop
in
andl
cltd
or
cmpsl
std
fiaddl
enter
insb
or
mov
fadd
and
lret
fadds
jbe
inc
test
adc
push
and
movsb
arpl
and
sub
xor
dec
jmp
mov
cmp
cmc
dec
out
repnz
pop
jge
scas
mov
sbbb
fdivl
xchg
cmp
pop
imul
xchg
xchg
mov
in
jae
adc
mov
and
fldcw
add
push
lods
add
loopne
lahf
cs
add
mov
mov
xlat
gs
aaa
and
push
cli
xchg
sub
pop
mov
imul
call
pop
xor
xchg
sub
sbb
stos
imul
loop
insb
enter
imul
xchg
xchg
sub
sbb
pop
shl
les
push
ds
xchg
jg
push
mov
insb
ret
ja
jge
fidivrs
sbb
rorl
cmpsl
pushf
mov
inc
add
in
add
imull
rolb
mov
xchg
int
sub
push
nop
xchg
shrb
pop
ja
aam
inc
dec
fs
mov
xchg
pusha
fwait
rcll
sub
push
add
pop
js
les
test
hlt
pushl
out
or
stos
enter
les
fiaddl
push
sbbl
push
sub
jge
pusha
push
fcoml
int3
stos
ja
call
aam
add
into
aam
add
lds
fmull
sub
cmp
sub
and
add
je
xchg
sarl
pop
adc
push
pop
lods
lahf
inc
cmp
sbb
cmp
mov
xor
lods
or
cwtl
icebp
hlt
xchg
dec
shlb
dec
fisubrl
stos
ffreep
mov
sub
icebp
outsl
lret
fdivs
pop
insb
cmc
mov
cmp
sbb
and
mov
ds
enter
loop
dec
jmp
ss
add
decb
mov
xchg
ja
push
mov
dec
jnp
jne
inc
adc
sub
push
shlb
push
inc
enter
jmp
rclb
clc
inc
movsl
sub
outsb
imul
test
mov
cmp
sbb
mov
in
mov
mov
dec
mov
cmp
push
add
pop
divl
das
sbb
jecxz
jmp
cmp
pop
ret
loopne
das
sub
mov
cmp
pop
jp
push
shlb
pop
les
cltd
xor
and
test
daa
into
or
cmpsb
repnz
push
clc
add
popf
sub
repz
ljmp
lcall
mov
inc
adc
dec
inc
fisubl
pop
adc
jmp
jo
push
shl
inc
aam
inc
cmp
mov
mov
push
ja
jl
mov
outsb
jle
jns
lea
aad
xor
sub
mov
xchg
pop
mov
jle
and
cmpsb
outsb
xchg
inc
mov
nop
mov
ss
test
inc
adc
lcall
push
ds
push
or
gs
or
jge
ret
leave
out
jmp
test
imul
add
ficoml
addr16
xlat
out
popa
mov
fwait
hlt
sbb
xor
je
std
daa
cld
movl
xchg
lcall
cmp
jg
outsl
divl
std
push
cli
jecxz
dec
shr
shll
hlt
bound
mov
and
insl
in
fimuls
lret
add
lret
ljmp
lahf
dec
dec
inc
xor
scas
mov
aad
dec
vpunpckhbw
in
pop
call
mov
imul
push
sti
jns
xchg
cmc
lret
imul
add
cmpsl
in
movsb
mov
mov
lahf
clc
sbb
adcl
cld
dec
std
mov
clc
loopne
sub
inc
aad
cmp
jmp
xor
leave
rolb
mov
das
hlt
jp
sbb
shlb
imul
arpl
or
pop
sbb
arpl
ds
aaa
xchg
iret
test
mov
inc
wbinvd
mov
mov
push
cmpsb
aas
ret
inc
mov
inc
sub
sbbl
adc
inc
shrb
ss
pop
xchg
add
cmpsl
jnp
rcll
ljmp
pop
fsubrs
iret
into
cmp
addb
test
rcrb
scas
data16
xchg
mov
mov
outsb
xchg
outsb
pop
js
ffreep
add
jnp
add
jle
xor
mov
loopne
push
push
adc
adc
xor
xor
xchg
pop
cs
xchg
add
xlat
and
xor
imul
rcrl
and
add
mov
mov
sbb
vmwrite
mov
ror
adc
add
push
mov
jecxz
adc
push
loopne
test
jno
std
insl
daa
cmpsl
ljmp
aad
movsl
jge
or
jp
cli
in
inc
out
pusha
jg,pt
into
mov
aaa
jp
push
xor
mov
punpckhbw
loope
mov
jge
adc
xchg
jbe
add
add
xor
xchg
shl
test
mov
mov
sahf
pusha
pop
popf
stos
popf
jo
dec
daa
mov
cmpsb
pop
dec
sub
jmp
movsl
bound
aam
popa
data16
pop
lcall
xlat
movsb
mov
mov
ja
lahf
cmp
cmc
and
cltd
loopne
stos
outsl
xchg
push
ss
jp
cli
dec
cs
pop
mov
sbb
and
pop
bound
popf
push
jl
in
jb
stos
push
push
pop
dec
pusha
and
jae
cmp
add
mov
mov
xor
lock
or
ds
in
loopne
data16
sbbl
fucom
and
or
jbe
add
push
cmp
or
jg
iret
dec
ljmp
les
jp
test
and
push
mov
pop
push
incl
mov
stos
leave
inc
ja
hlt
or
cmpsb
rorb
or
xchg
and
inc
xchg
shll
ficomps
inc
mov
jp
and
out
mulb
cld
data16
or
mov
mov
add
int
testl
jmp
dec
rclb
addr16
cmp
jns
cli
add
mov
imul
jbe
outsb
xchg
mov
mov
shlb
aas
xchg
outsb
sub
mov
mov
insl
fistl
fmuls
jp
in
movsl
outsb
and
out
fs
das
inc
std
sar
sbb
add
cmc
jb
xchg
int
cmp
jmp
mov
jbe
fcoml
dec
or
mov
cmp
pop
pop
mov
imul
sub
adc
mov
repz
icebp
outsb
pop
insl
imull
imul
popf
inc
mov
mov
dec
out
push
inc
fimull
imul
arpl
pop
xlat
pop
mov
iret
je
jle
mov
mov
jmp
inc
fs
pop
or
popa
fisttpl
lret
mov
cwtl
sbb
sbb
jecxz
int3
push
jno
inc
lods
shlb
pop
fstpt
aad
dec
nop
cmp
xchg
lret
and
imul
jmp
xchg
dec
jo
mov
add
adc
cmp
mov
int
jnp
xchg
outsb
enter
jmp
mov
test
xlat
sub
mov
mov
sahf
xchg
dec
scas
outsl
sbb
or
repnz
mov
mov
cmpsl
sub
iret
aas
gs
in
mov
in
shl
sbbl
sbb
sub
lret
lods
fildl
push
jb
outsb
cmpsl
or
push
cs
pusha
js
or
inc
ss
push
jecxz
mov
mov
sub
sub
jmp
dec
xor
dec
dec
mov
stos
sbb
mov
int
inc
cmp
dec
popf
outsb
xor
pop
outsb
mov
hlt
xor
add
jb
mov
jge
inc
xchg
fdivrs
mov
sub
mov
xor
xor
mov
sub
xchg
mov
sbb
sahf
loope
out
mov
addr16
rorl
ljmp
rclb
pop
outsl
pop
ljmp
push
mov
addr16
pop
xchg
xchg
das
dec
mov
js
mov
outsl
mov
inc
pcmpgtb
dec
out
js
hlt
add
je
mov
push
fildll
sbb
cld
cmpsb
jb
ja
cmp
pop
xchg
adc
dec
in
push
stos
cmpsb
faddl
rcrb
cltd
loopne
xchg
je
sub
or
in
push
lods
or
loopne
mov
je
popa
xchg
mov
adc
mov
scas
ja
ss
rol
outsb
pop
pop
aad
dec
jbe
xchg
insl
mov
loop
rcrl
std
push
into
cltd
jge
sbb
cmp
lret
xlat
adc
pop
pusha
fdivr
pop
adc
movsb
in
sub
add
push
sbb
and
lahf
cmp
test
pop
push
push
ret
or
fwait
xchg
sub
aad
adc
xor
xor
popf
mov
into
stc
add
popa
rcll
pop
lret
dec
mov
sbbl
push
adc
sbb
xor
xchg
ret
cs
imul
xchg
sub
outsb
mov
mov
pop
jle
jp
shlb
pop
pop
jne
repnz
jge
stc
pop
mov
mov
iret
jmp
add
inc
or
in
mov
lret
mov
hlt
add
nop
popa
aam
jecxz
xchg
pop
cmp
stos
cmpsl
subl
int3
int3
add
mov
pop
daa
hlt
xchg
mov
decl
jg
das
inc
shll
adc
xchg
inc
dec
std
insb
pop
lret
mov
pop
cmp
push
xchg
shll
add
jle
cmp
sahf
cmpsb
movsl
aaa
addr16
stos
enter
xor
outsl
xor
cmp
mov
mov
fldl
and
sbbl
cmp
mov
das
xor
sub
test
out
inc
out
cmpsb
pop
fistps
movsb
mov
test
or
popa
jae
es
das
out
aas
repz
dec
rclb
add
jmp
into
inc
push
sbb
adc
imul
pop
rcrb
push
mov
js
out
sub
jo
dec
dec
jo
pop
popa
repnz
or
jnp
ja
push
adc
push
add
mov
cmp
stos
lds
jle
out
das
je
int3
jbe
cmpsb
xchg
mov
std
push
add
and
mov
inc
fucomi
rorb
out
js
lret
xor
int
add
pop
mov
cmpsl
inc
jns
and
fs
lcall
aas
jnp
fucomip
mov
add
push
sub
idiv
aam
sub
das
pop
xor
out
pop
pop
je
xor
ljmp
test
mov
lds
mov
cli
jle
push
mov
ja
divl
out
or
pop
shll
jae
mov
add
clc
add
jo
mov
data16
es
adc
incb
mov
scas
xchg
dec
pop
or
add
mov
dec
mov
dec
in
sub
test
xlat
repz
add
in
inc
dec
cmpl
inc
loopne
test
and
rclb
cld
cmp
adc
or
mov
pop
inc
scas
pop
pop
mov
add
je
fs
repnz
aaa
arpl
arpl
repnz
mov
push
or
mov
or
inc
pop
int3
xlat
sbb
call
push
das
rcl
nop
pop
dec
mov
adc
mov
and
cmpsl
addb
xor
shr
jge
rcrb
pop
imulb
out
pop
sub
mov
mov
fstp
jne
xor
adcb
jg
pop
cmp
mov
imul
and
call
in
inc
aaa
xor
jne
mov
xchg
dec
mov
fadds
sbb
lcall
jle
sbb
mov
scas
jo
in
mov
jp
mov
shr
inc
int
push
sub
add
inc
sbb
xchg
fdivr
insl
push
mov
flds
dec
fwait
pop
xor
inc
imul
idiv
xchg
cmp
or
enter
cmp
movsb
xchg
add
or
out
push
aad
adc
mov
in
jae
lret
lahf
mov
out
cmpsl
mov
mov
push
or
js
ss
sti
pop
push
and
xchg
pop
or
lds
jns
ljmp
int3
or
popf
ficoms
sbb
jnp
sbb
shlb
insl
dec
scas
jne
and
test
or
xor
xlat
sub
xchg
test
mov
pop
sub
test
cmpsb
out
add
fmull
xor
push
mov
incb
test
or
imul
or
adc
daa
scas
xor
and
mov
jle
push
fdivrl
iret
jl
jecxz
mov
iret
adc
orl
push
loop
xchg
xchg
sub
rcll
inc
pextrw
push
sbb
scas
aaa
sub
or
int
and
sbb
in
stos
test
pop
jo
push
jmp
xchg
mov
js
mov
imul
test
jo
lock
jae
mov
addr16
inc
lods
pop
icebp
lret
arpl
mov
clc
push
push
dec
jp
adc
imul
xchg
add
jno
mov
lret
roll
sub
in
gs
xchg
call
mov
icebp
jnp
dec
icebp
aam
inc
cld
xor
sub
test
fucom
aaa
out
je
dec
sub
hlt
sahf
sub
ja
or
std
inc
mov
ret
stos
pop
or
jge
jne
cmp
pop
outsb
scas
or
stos
xor
std
fwait
rclb
mov
push
adc
or
and
outsl
push
and
or
add
mov
sbb
cli
sub
nop
or
aas
push
daa
stc
movsb
inc
int
add
mov
cmp
push
test
jge
insb
shll
lock
sub
repz
cli
in
imul
pusha
je
rcrb
jns
push
xchg
add
jno
fistps
adc
in
sbb
dec
imul
inc
aam
clc
xor
repz
imul
sbb
pop
pop
test
imul
cltd
and
gs
xchg
xchg
add
xor
in
repz
push
push
sub
adc
cmpsl
sbb
call
je
mov
or
outsb
jo
std
testb
pop
fs
pop
sub
adc
sub
lods
cmp
sub
pop
ss
aad
and
push
mov
mov
sbb
scas
sti
adc
insb
xor
shlb
or
dec
xchg
mov
mov
dec
mov
sbb
fwait
je
loope
sub
nop
loop
sub
ret
adc
mov
fistpl
push
mov
int3
std
mov
sbb
stos
mov
into
cmp
lret
call
push
jb
enter
mov
dec
jge
sub
pop
pop
int3
sarb
jecxz
push
fisttps
ljmp
lods
loopne
inc
pop
lret
jg
clc
cmpsl
fldt
cmp
iret
jne
inc
jp
lea
mov
inc
cmpb
pop
xchg
addl
test
ret
lret
push
adc
bound
push
jo
xor
adc
sti
arpl
aaa
or
mov
mov
lods
cld
ret
in
inc
enter
addb
push
fs
rcl
cmp
clc
inc
xchg
sub
scas
sub
cmp
and
ljmp
mov
out
cmp
leave
clc
dec
test
out
and
pop
ret
cmp
hlt
clc
mov
loop
test
dec
jp
lea
call
sbb
shl
xor
add
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
inc
add
popa
bound
bound
jno
cmp
loop
bound
int
cmp
shr
js
mov
imul
sub
movsb
lods
xchg
jg
dec
iret
jmp
and
scas
sbb
jo
mov
sti
jne
dec
dec
jg
cld
fldt
and
jo
jae
jmp
out
jbe
lcall
mov
daa
cmc
push
hlt
push
lea
dec
fnsave
data16
dec
add
jge
lret
push
mov
adc
push
jmp
rcr
pop
adc
push
or
cmp
icebp
xchg
movsl
repnz
inc
and
mov
test
loope
out
lods
xchg
into
aam
mov
bound
adc
and
icebp
call
and
add
and
mov
aas
pop
mov
and
hlt
push
add
pop
fmul
add
ja
repnz
xor
xchg
or
and
sub
test
ret
cmp
out
cmp
and
xor
int
lret
ja
cmp
cmpsl
sub
pop
mov
jl
jmp
lea
loop
ja
add
rcrb
ficomps
inc
cmp
xlat
jb
aaa
addr16
cmp
jne
in
mov
mov
push
movsl
cmp
dec
les
mov
andl
movsb
pushl
jns
mov
sbb
cwtl
insl
dec
int
xchg
cmpsb
pop
loope
and
and
cmc
aam
jne
xchg
add
repnz
cli
icebp
inc
jmp
xchg
dec
cs
out
aam
in
in
or
int
dec
cmp
cmp
scas
mov
bound
sbb
sti
or
jg
movsl
mov
jnp
dec
test
fs
sub
or
aaa
shrb
cmp
or
jmp
cmp
repnz
fimull
fisubrl
cld
pop
and
add
es
imul
daa
movsb
fsubl
ds
into
xchg
shlb
mov
pop
jno
shlb
imul
neg
fsubrs
shll
inc
enter
out
fsts
and
adc
movsb
scas
aaa
jge
adc
inc
dec
and
mov
imul
add
jae
or
cmpsb
xchg
xor
cltd
shrl
pushf
and
sub
mulb
push
or
jno
or
lret
inc
mov
stos
sub
mov
mov
js
mov
shr
addr16
push
cli
mov
fwait
or
loop
mov
test
xchg
jg
xchg
lods
cmc
pop
fcomps
outsl
cli
cmp
leave
xchg
and
adc
mov
insb
shrb
mov
mov
imul
fisttpll
add
cmp
pop
aad
inc
mov
dec
imul
cld
test
mov
test
std
outsb
loop
sbb
and
inc
data16
ret
clc
or
jae
out
out
push
jp
dec
sbb
out
lret
mov
outsl
pushw
js
shrb
jo
or
mov
test
cmp
subl
inc
xor
scas
cmpsl
stc
pop
pop
pushf
jmp
add
fbld
iret
je
stos
xor
mov
test
enter
aas
gs
dec
sub
xchg
movsb
aaa
dec
mov
cmp
movsl
jmp
mov
cs
xorl
fisubrs
rcl
fiaddl
seta
in
into
jnp
jno
xchg
push
in
cmpsl
clc
ret
mov
sahf
mov
mov
cmp
std
ss
mov
dec
jmp
pusha
add
mov
sbb
add
lret
adc
inc
lock
pop
cmp
pushf
cmc
dec
lea
lret
cld
jbe
leave
fidivrs
inc
and
pop
mov
ja
cs
je
outsl
mov
jmp
xor
pop
gs
rorl
xor
repnz
es
jns
dec
loopne
insl
lds
dec
or
lahf
es
sti
mov
pop
out
popa
cmpsl
mov
cmp
mov
add
pop
xor
inc
cmp
push
hlt
popa
jbe
push
jnp
add
call
movl
in
dec
mov
inc
imul
imul
xor
push
mov
dec
scas
repz
iret
daa
jbe
sub
pop
sub
or
mov
mov
cs
sbb
push
mov
pop
fs
in
ds
nop
pop
xchg
sub
jnp
adc
inc
pop
out
mov
jnp
jge
jne
cmp
pop
xor
and
fimull
inc
fwait
roll
shr
popa
and
ljmp
dec
xchg
mov
shl
xchg
lahf
xor
stos
out
pop
incb
aam
jb
call
mov
hlt
es
faddl
adc
mov
cmp
mov
sub
fbstp
ds
and
xor
loope
test
jl
flds
push
out
mov
add
push
out
jne
mov
fsubr
nop
std
jae
ljmp
adc
mov
and
das
out
ljmp
clc
fdivrs
mov
jne
adc
cs
xchg
and
andb
lds
sub
add
push
add
dec
and
or
shll
sub
clc
sahf
xchg
enter
clc
iret
ja
dec
stc
xor
out
cli
stos
int3
hlt
aam
dec
xchg
cli
adc
xchg
out
mov
popa
fdivs
add
mov
push
rclb
leave
push
insl
pop
xchg
cmp
enter
aad
nop
cmc
mov
adc
add
mov
int
in
pop
mov
inc
test
loop
mov
add
out
dec
dec
test
cmp
push
adc
out
jmp
jb
clc
sbb
imul
dec
xor
sahf
xchg
sub
jbe
hlt
sbb
clc
mov
inc
and
dec
pop
xor
movsb
jbe
jg
mov
test
ds
sbb
xchg
flds
aad
add
out
adc
add
or
push
cmpl
pop
cmp
mov
adc
mov
in
push
mov
cltd
sahf
hlt
pop
dec
cmpsb
aam
orb
jae
add
adc
xor
adc
pop
sbbb
es
add
dec
cltd
mov
push
cmp
insb
mov
and
inc
lods
pop
xor
or
adc
xor
mov
mov
and
ds
cmp
jns
mov
jmp
sub
pop
test
repnz
adc
out
mov
mov
rcll
xchg
or
inc
xor
push
imul
in
cmp
mov
setno
inc
xor
loope
fsubrl
mov
and
movsb
push
or
aas
pop
mov
mov
dec
push
mov
in
or
adc
fadd
push
xor
adc
mov
xchg
in
or
popf
xchg
push
xorl
add
insb
out
xorl
int
jns
inc
dec
ror
mov
ret
sbb
pop
data16
andb
divb
sub
pop
adc
xchg
in
pop
lcall
stc
mov
ja
pop
mov
sub
cltd
xchg
movsl
push
rorl
mov
xchg
repz
out
lea
sahf
in
outsb
inc
jmp
shl
lret
push
xchg
xchg
jmp
scas
inc
lsl
pop
jno
pop
push
mov
add
dec
scas
fisubrs
jno
lods
jae
iret
sub
aaa
fwait
testb
loope
sbb
jo
imul
pop
es
jmp
loop
pop
sahf
stos
sarb
cmpsl
xor
ret
mov
and
jns
dec
push
sub
loop
cltd
and
pop
xchg
and
cs
std
jle
out
into
dec
push
add
sahf
loop
stos
dec
cmp
mov
cs
pushf
sub
outsb
lcall
enter
and
shlb
cmc
stos
xchg
lea
pop
push
gs
fdivrp
sub
sub
cltd
mov
orb
pop
jb
adc
cmp
loopne
inc
ret
sub
std
mov
sub
jmp
dec
loopne
and
repnz
popf
or
sub
or
pop
xchg
insb
add
push
int3
rclb
ffreep
and
fs
ja
gs
adc
sbb
xor
daa
test
in
scas
stc
aaa
cli
xchg
dec
shll
jge
sbb
add
jp
or
in
je
jl
sahf
pop
fcom
mov
sub
rol
ljmp
cmp
lods
pop
pop
cmpsl
dec
fcoml
pop
mov
xor
mov
mov
cmp
or
xchg
dec
xor
jge
das
mov
dec
clc
push
pop
pop
sub
mov
cli
xchg
jg
cmc
jb
sbb
mov
sahf
ljmp
jbe
pop
movsb
and
mov
cltd
add
adc
mov
xchg
xor
data16
mov
pushf
sub
sarb
adc
and
aam
aam
inc
cld
cmpsb
cmovl
cmpl
mov
xor
xor
sbb
mov
in
fstpl
xchg
loopne
adc
xor
cmpsl
fildll
lds
and
pop
mov
imul
pop
xchg
jmp
jo
mov
scas
cmc
push
jmp
loope
push
movsb
xchg
and
stos
mov
mov
xor
push
push
dec
cs
in
bound
stc
and
enter
mov
cmpsb
mov
nop
push
data16
aam
or
aas
test
clc
cmp
pop
mov
dec
pop
rclb
movsl
bound
pop
clc
daa
aas
xchg
std
popf
out
lea
shrb
lret
int
js
shll
sti
add
std
pop
aad
jg
jge
loopne
mov
into
xchg
add
mov
data16
imul
sub
fs
mov
push
push
or
cwtl
pushf
std
fsub
lea
pusha
inc
or
into
fidivrs
std
push
mov
loop
mov
mov
push
or
cli
subb
or
pop
jae
adcb
mov
push
jbe
push
pop
cmp
iret
pushf
push
and
lods
jnp
clc
scas
inc
loopne
sub
mov
test
xor
imul
mov
in
insl
ret
xor
push
data16
je
out
jno
enter
loopne
dec
inc
loopne
loope
mov
pop
cmc
std
jbe
rol
xchg
daa
inc
mov
xor
inc
jnp
xchg
sub
sbb
cwtl
in
into
pusha
insl
add
jecxz
dec
mov
dec
les
aas
adc
push
sahf
adc
cmp
and
push
adc
xchg
or
arpl
loopne
roll
dec
loope
mov
jecxz
test
setae
ret
std
jns
or
push
int
cmp
cmp
cmp
jle
mov
sbb
adc
int
inc
scas
notl
adc
or
xchg
adc
jae
or
adcl
sbb
out
clc
inc
mov
in
jge
sub
lods
inc
data16
or
pop
ss
mov
call
out
add
dec
mov
mov
xorl
call
adc
add
and
loop
adc
xchg
aaa
or
out
nop
cltd
test
xchg
mov
xor
rorl
stos
push
les
push
lret
loope
jae
out
scas
idivb
sti
push
lret
xchg
ds
add
jp
inc
push
bound
fdivp
cli
mov
adc
cld
push
add
ds
sbb
movsl
sbb
bound
mov
cmp
jae
mov
and
push
sub
mov
movsb
ja
pop
popf
mov
scas
pop
push
cltd
push
loope
jno
call
test
icebp
jo
add
xchg
inc
lret
mov
cmpsb
test
jb
dec
push
shr
and
out
adc
ds
xchg
dec
xorb
xchg
and
aam
enter
mov
fld1
mov
mov
gs
cmp
jl
repnz
cmpsl
loope
inc
scas
outsl
dec
dec
inc
int3
roll
pusha
pop
cmp
inc
push
daa
lcall
ss
inc
jno
add
cwtl
pop
jecxz,pn
jge
sub
sbb
inc
ret
mov
pop
cmp
sub
sti
shrb
lods
fisttpl
mov
je
push
push
test
add
pop
push
mov
xchg
mov
insl
jae
mov
xor
add
clc
push
xlat
test
lea
cmpsb
adc
lea
test
mov
dec
cmp
scas
xor
std
cmpsb
push
mov
lcall
cmpsb
xlat
mov
pushf
popa
xchg
jle
mov
sub
stos
into
fs
cmp
leave
dec
pop
pop
in
xor
mov
test
roll
xor
pop
push
ja
sahf
inc
cmp
aad
jecxz
xor
and
dec
in
cwtl
xchg
std
loop
or
dec
mov
push
jg
pop
push
out
loop
popa
dec
insb
popa
gs
sbb
dec
sbb
lret
mov
shld
clc
add
pop
scas
test
adc
fsubr
pop
ds
mov
inc
inc
dec
int
sub
xor
mov
ss
test
push
mov
add
cmp
push
test
ficompl
add
faddl
stos
int3
shlb
subl
adcl
popa
movsl
jmp
enter
lcall
hlt
test
leave
mov
jne
or
out
pushf
cmpsl
cmp
push
sub
call
xor
push
adc
inc
sbb
push
iret
jp
aas
dec
aaa
xchg
mov
mov
mov
cmp
shlb
in
mov
stos
ror
ret
jp
pop
mov
cmp
mov
cmp
mul
inc
push
or
inc
mov
and
lea
add
pop
jge
jnp
pop
mov
stc
dec
rcrb
pop
fnstsw
jg
in
add
jle
andl
mov
adc
cltd
mov
add
popf
adc
or
mov
daa
les
pop
mull
std
dec
pop
repnz
cmp
jle
jns
or
ja
push
sbb
test
popf
cltd
dec
add
dec
cli
rorb
and
sahf
pop
and
shlb
push
shlb
lret
inc
fs
push
mov
mov
sub
mov
sub
mov
and
and
add
mov
dec
add
shr
mov
fs
pop
fwait
adc
test
xor
stc
mov
pop
jmp
clc
mov
jl
jo
mov
scas
in
jo
cwtl
and
clc
cmp
mov
testb
mov
inc
mov
iret
dec
push
in
jbe
imul
add
push
inc
jno
push
mov
jmp
scas
or
shr
shrl
lods
jb
test
out
outsb
inc
enter
dec
fidivl
adc
lret
dec
gs
xor
lcall
mov
adcb
data16
jle
xchg
es
jnp
js
cmp
jle
addr16
pop
and
stc
pop
jecxz
nop
cmc
out
mov
or
loopne
add
scas
pop
sub
mov
xchg
fwait
jecxz
xor
fistpll
call
ret
xor
sbb
out
addb
fmuls
adc
add
push
call
pusha
mov
scas
ffreep
sub
mov
inc
jmp
push
pop
mov
fldt
dec
pop
pop
addr16
out
loopne
outsb
mov
xor
add
push
stos
lcall
lea
das
fs
roll
jg
xor
in
jnp
lds
call
mov
loop
mov
adc
lods
mov
sub
cmp
mov
xor
adc
lods
mov
inc
es
pop
cmpsb
push
mov
xor
outsl
mov
push
ljmp
jbe
data16
pop
shrb
add
fimuls
push
arpl
mov
imul
sub
clc
add
outsb
test
cmp
fstp
mov
inc
add
cli
xor
inc
fidivrs
inc
sbb
out
sub
and
mov
fmuls
lea
sub
pop
pop
out
daa
push
loopne
add
fisttpll
lcall
xor
add
outsl
nop
add
jecxz
scas
mov
jo
ljmp
add
popa
cld
dec
jb
pop
inc
shrb
xchg
lock
jno
inc
jge
add
test
clc
add
movsl
int3
inc
ret
sub
out
push
dec
loop
or
ret
shrb
cmp
push
rclb
mov
outsl
jge
das
fcoml
gs
out
mov
mov
aam
rcll
push
pop
sub
insb
divl
add
xchg
repnz
mov
sub
sbb
es
dec
pop
es
jo
dec
ja
mov
adc
xor
cmp
fidivrl
ds
mov
aas
mov
jp
pop
in
aas
xor
adc
subb
xchg
lcall
inc
or
das
cmp
add
mov
aaa
mov
inc
cld
sbb
fistpll
mov
in
shrl
std
xchg
pop
std
ror
mov
inc
push
in
andl
outsl
into
ljmp
jmp
lods
pop
pop
push
add
add
and
std
sahf
js
xor
cli
inc
xor
in
push
mov
dec
lret
mov
js
lods
test
mov
pop
into
dec
xor
and
es
popf
inc
shr
cltd
or
sbb
jecxz
out
out
in
inc
sbb
mov
sbb
loope
sahf
mov
xchg
js
call
js
fsubl
negb
dec
lea
test
dec
and
xor
cmp
pusha
sbb
or
inc
es
cwtl
loope
inc
adc
and
into
xchg
xor
jge
mov
add
iret
push
imul
icebp
stc
push
cmpsb
lds
inc
daa
fstpl
mov
sub
cmp
sahf
fisttpll
and
sbb
inc
mov
push
fiadds
stos
fiadds
adc
dec
hlt
jp
push
pop
bound
adc
sbb
ljmp
xor
loop
repz
rorl
daa
xorl
xor
or
ret
push
mov
sbb
cmpsl
sbb
cli
jg
mov
int
sub
mov
add
nop
mov
cmp
cmp
repnz
idivb
loop
js
shll
outsb
gs
int3
out
sub
or
inc
dec
add
mov
adc
push
cld
mov
mov
push
inc
fstl
xorl
cmp
mov
idivb
mov
or
repnz
inc
into
icebp
in
cmp
test
js
pop
add
daa
jbe
sub
sub
xchg
rcr
call
lcall
leave
mov
push
or
data16
es
sti
mov
mov
enter
add
fwait
mov
dec
ret
mov
lods
sub
mov
aas
mov
and
lea
cli
sahf
sbb
dec
movsl
jbe
imul
shrb
les
xchg
test
pop
pop
mov
push
test
in
movsb
bndstx
adc
lret
lea
imul
or
adc
pop
mov
xor
or
add
cmp
adc
mov
mov
int3
adc
sub
push
sub
clc
sbb
mov
addr16
cltd
add
mov
xchg
out
out
push
mov
sub
test
orl
push
fdivs
pop
and
or
mov
nop
dec
mov
scas
lods
adc
out
mov
cmc
sbb
ja
pusha
jb
xchg
mov
inc
rcr
stc
mov
pusha
out
xchg
cld
clc
leave
insl
sbb
mov
push
icebp
dec
mov
fisubrl
and
pop
pop
dec
stc
call
xchg
rcrb
push
jg
mov
push
xor
sti
mov
cmpsb
addr16
xchg
fimuls
jle
push
jb
push
xchg
mov
repnz
cmpsl
sbb
push
pushf
and
out
pushf
pop
testl
sbb
lret
das
add
ja
cmp
or
cltd
pop
xor
and
jg
cmpsb
xor
or
insb
hlt
popf
and
mov
xchg
inc
pop
cltd
dec
int3
mov
lea
cmpsl
adc
push
aaa
adc
shlb
ds
xchg
and
dec
loopne
dec
jmp
xchg
aas
subb
mov
in
std
add
xlat
pop
or
xor
or
add
xchg
pushf
addl
inc
or
repnz
pop
adc
addr16
pop
add
sbb
in
and
push
xor
negl
jbe
test
adc
scas
xlat
xlat
out
inc
push
iret
cld
in
jne
push
jmp
lods
mov
mov
jmp
push
scas
push
je
cmc
and
jb
xor
inc
cmpsl
outsl
mov
sbb
lahf
xchg
mov
addr16
out
pop
pop
mov
mov
jp
test
test
xchg
inc
fsubrl
stos
inc
inc
mov
out
sub
pop
push
data16
inc
shl
stos
sti
xchg
shr
test
inc
inc
mov
adc
lds
stos
rcrb
imul
push
mov
movsb
stos
mov
inc
enter
pushf
jae
dec
mov
psubd
std
test
push
pop
cwtl
insb
mov
push
jge
int
pop
jp
inc
ja
mov
jp
in
sub
dec
rcll
das
xchg
sti
mov
xchg
lea
bound
mov
sub
gs
clc
rclb
and
lock
mov
mov
add
sbb
jmp
sti
adc
je
xor
pusha
dec
rclb
repnz
filds
inc
call
aam
xor
xchg
jb
arpl
out
push
mov
imul
movsl
xchg
pushf
ffreep
repz
xchg
and
ss
pop
push
movsb
out
faddl
mov
mov
or
loopnew
jae
xor
sahf
jbe
push
sub
jae
mov
sahf
gs
lret
push
mov
xor
jns
bound
and
push
add
add
std
repz
arpl
fmul
sub
leave
mul
lds
pop
cmc
mov
xchg
sub
js
addl
mov
dec
nop
mov
or
sub
adcb
and
push
xchg
les
mov
pop
xor
cmpsb
push
pop
pop
gs
in
fstpt
sahf
mov
es
xchg
mov
mov
dec
in
rclb
es
imul
cmp
xchg
lods
push
lds
nop
adc
push
mov
cli
xchg
test
divl
jnp
jae
insb
mov
ret
scas
bnd
xchg
inc
outsb
cmp
lcall
dec
adcb
mov
adc
mov
cmp
inc
and
loop
jno
inc
out
fmul
inc
push
add
push
mov
adc
repz
or
cmp
dec
outsb
cmpsl
leave
mov
int3
or
dec
ds
clc
cmp
xchg
js
aas
sbb
es
sub
xchg
aas
add
iret
outsb
pusha
or
dec
dec
pop
and
or
dec
inc
repz
outsl
nop
xor
push
adc
loopne
mov
push
mov
fadds
das
mov
xlat
push
dec
lods
xor
nop
fstp
pop
enter
pop
sbb
fmuls
xchg
je
test
add
addr16
std
js
cli
sahf
jno
dec
addr16
aaa
ror
xor
cs
pop
cltd
push
push
adc
in
sub
dec
xor
popa
pop
pop
cli
pop
idivb
push
mov
stos
out
push
movsl
arpl
mov
loope
aad
aaa
cltd
icebp
mov
adc
popa
lea
int3
insb
test
lea
notl
mov
inc
pop
mov
sbb
daa
iret
arpl
pop
mov
jbe
or
add
in
xchg
cld
in
mov
xchg
jbe
jle,pn
dec
into
fisttps
ds
xchg
inc
aaa
push
sbb
push
sarl
mov
push
pop
jne
and
sbb
inc
cmp
int3
and
inc
jge
xor
adc
insb
and
or
push
pop
lahf
push
xchg
pop
mov
pop
jl
scas
jp
jno
lret
call
xchg
sahf
adc
repnz
push
in
ss
xchg
fdivr
rorb
xlat
mov
call
pop
stos
mov
lds
mov
lcall
pop
fucomi
mov
mov
sbb
insb
push
xor
clc
mov
sbb
aaa
scas
xchg
icebp
call
add
mov
xchg
out
mov
jl
inc
xchg
inc
dec
pusha
and
push
ds
popf
outsb
cli
fwait
fs
loope
mov
imul
repz
dec
mov
pop
daa
ret
mov
ljmp
stc
and
push
divl
push
jbe
nop
and
mov
aam
das
mov
add
loopne
addr16
sub
xchg
lret
pop
rcl
push
rcr
gs
test
mov
sbb
inc
mov
lahf
pop
inc
cmc
cli
stos
jp
fcomi
xor
jb
js
mov
lods
push
icebp
mov
iret
add
idivl
mov
xchg
les
js
sti
inc
dec
test
push
loop,pt
frstor
inc
subl
jge
hlt
test
push
lods
inc
pop
sbb
and
loope
imul
xchg
es
ss
in
into
fs
cli
or
add
pop
int
orl
imul
and
ljmp
mov
sarl
aaa
or
push
ss
test
mov
inc
sarl
mov
push
jl
xor
push
ds
jnp
shrl
sbb
fs
pop
cli
mov
enter
fsubrs
into
cs
imul
pop
mov
and
out
jo
cmc
popa
jmp
fiaddl
cmc
call
ret
loopne
int
sub
sub
xor
scas
dec
bound
stos
movsl
sbb
cmp
inc
fstpt
or
adcl
out
pop
jns
ljmp
insl
mov
pop
dec
mov
enter
or
mov
into
out
or
dec
jle
xor
rcrb
push
dec
sbb
mov
adc
in
mov
loopne
into
jne
ja
loope
push
mov
mov
outsl
decl
jno
xchg
sets
push
jae
mov
adc
or
in
iret
std
rcl
push
pop
mov
sub
shl
cmc
add
fwait
xor
dec
enter
faddl
ficomps
leave
insb
cmpsl
inc
sub
pop
xor
mov
test
test
sahf
jp
outsl
xor
data16
jbe
icebp
sbb
in
mov
mov
jp
pop
hlt
dec
dec
sub
mov
mov
out
pop
and
push
push
mov
jns
xchg
cmc
push
dec
jns
push
lahf
and
inc
dec
lahf
push
inc
mov
int
add
out
jns
scas
lds
jge
xor
mov
std
push
pop
mov
xlat
push
mov
mov
cmc
sarl
cmp
push
fidivs
es
sbb
cli
in
pop
jns
xchg
sub
cmp
sbb
sbb
mov
pop
sbb
outsb
sbb
aam
clc
and
mov
cmp
jle
xchg
insl
push
adc
push
cmove
push
dec
xor
mov
dec
sbb
and
lret
leave
shl
sbb
sti
push
mov
jo
sti
jp
fisttpl
fsubs
subb
jle
daa
or
mov
pop
mov
jge
jecxz
js
popa
dec
ljmp
inc
sub
stc
repnz
pop
fs
mov
push
or
clc
or
or
fdivl
repnz
repz
mov
and
or
negl
inc
clc
aam
jb
push
arpl
xor
shrl
movsl
xchg
movsb
movsl
add
iret
addr16
jb
dec
lods
cwtl
mov
jle
shlb
jns
pop
into
cmc
aas
int
fcoml
scas
imul
into
cmpsl
mov
sbb
lret
and
shll
inc
into
mov
data16
sbb
mov
loopne
lock
push
aam
xchg
xchg
mov
sahf
test
sub
loope
popf
mov
mov
sub
dec
add
test
movl
cli
mov
or
push
fs
push
pop
cmp
es
dec
cld
ds
mov
fdivrl
lods
xchg
sub
mov
fdivrl
dec
jb
and
mov
cmpsl
dec
cltd
cmp
mov
iret
sti
dec
mov
push
pusha
pop
ret
xchg
or
add
shll
and
roll
loope
loop
ss
push
shrb
adc
xor
xchg
js
dec
inc
jecxz
aad
fs
popf
lahf
xchg
mov
bound
dec
filds
test
mov
repnz
mov
rol
mov
xchg
enter
push
xchg
insl
outsb
rorb
shlb
lods
int3
mov
jae
sti
and
mov
mov
mov
jns
jl
xchg
adcb
fbstp
pop
sar
mov
daa
mov
pop
jbe
shrb
xor
push
movsb
pop
in
cmp
loop
in
xchg
loopne
cmpsl
outsl
cli
mov
mov
mov
popf
jb
inc
mov
clc
or
push
pushf
fisttpl
fs
xor
xor
mov
out
jbe
pop
addr16
subl
pop
inc
lret
jmp
cmp
lds
xlat
cmp
xchg
and
or
mov
jae
sbb
test
dec
sub
mov
sbb
xchg
das
jns
xor
les
sub
gs
aas
push
sub
addl
in
pop
jle
add
imull
std
pop
shll
bnd
xchg
jp
aaa
dec
int3
cmc
pop
jle
adc
jmp
cltd
lods
and
lods
xchg
lahf
popa
push
pop
dec
mov
sbb
cmpsl
insb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
sahf
mov
int
add
add
inc
nop
lcallw
stos
and
imul
ds
sbbb
push
jns
mov
stos
push
inc
frstor
test
inc
mov
inc
push
movsb
cs
jmp
dec
and
out
adc
fstpt
adc
ja
jl
outsl
xchg
fwait
mov
adc
cmp
mov
xchg
faddl
add
add
shrl
adc
cmp
out
pop
xchg
push
fcmove
add
arpl
add
es
out
in
dec
dec
scas
aaa
mov
push
sbb
int
imul
jle
mov
popa
repnz
incb
sub
mov
mov
loop
lret
push
sbb
mov
pop
xchg
sbb
ja
mov
insl
pop
outsl
lods
add
ror
xor
fsts
int3
fnstcw
or
push
push
add
add
add
sub
sub
addb
into
add
arpl
add
dec
xlat
sbb
cmp
adc
dec
cwtl
xor
sub
sbb
or
or
rcrb
std
push
and
add
mov
rclb
adc
pop
sbb
xchg
push
cmp
xlat
cmp
bound
dec
jae
test
jne
jns
stc
js
mov
add
and
aam
aam
ljmp
je
adc
pop
mov
add
add
and
pop
lods
mov
cwtl
jg
das
insb
out
fstpt
sbb
mov
imul
xchg
aam
out
jae
inc
cli
push
mov
cmpsb
cmp
or
loope
je
out
cli
add
xor
and
pop
xor
std
sbb
sbb
sti
cmpb
sti
mov
imul
add
add
mov
sti
cmpsl
mov
dec
mov
add
add
arpl
add
pop
rclb
cs
cmpsl
adc
rorb
mov
fwait
jp
jp
rcrl
test
mov
mov
div
inc
dec
inc
bound
fisubrl
mov
mov
ret
jb
enter
imul
fcmovu
mov
andb
pop
cwtl
sahf
cmp
mov
add
add
out
lods
cmp
stc
stc
jecxz
ljmp
add
xchg
pop
roll
dec
add
inc
insb
sbb
xor
test
pushf
cmp
dec
lcall
orl
loope
xchg
cmp
stos
cmpsb
mov
addr16
adc
test
arpl
mov
ss
add
adc
push
sbb
hlt
dec
adc
fldt
lret
add
add
inc
gs
aaa
push
inc
insb
inc
leave
iret
add
arpl
add
stos
lods
lock
cmp
dec
push
or
mov
push
sub
insb
and
es
sub
jb
add
das
gs
test
xor
pop
xlat
mov
out
dec
cli
in
ss
dec
or
fnsave
cli
xor
in
mov
icebp
gs
xor
xchg
inc
push
add
dec
inc
sub
das
jle
jg
imul
stc
arpl
dec
pop
jecxz
add
add
adc
or
pop
out
mov
jne
inc
xchg
arpl
dec
jae
fwait
jno
mov
pop
jg
push
add
dec
clc
ss
bound
mov
cmp
pop
sbb
into
jo
push
mov
aad
clc
or
lahf
mov
mov
hlt
imul
jmp
add
add
addr16
and
mov
mov
pop
lret
add
arpl
add
mov
fistpl
aam
out
rcrl
mov
int
mov
lods
out
leave
jl
xor
ja
sti
push
out
mov
xchg
sub
jecxz
fcoms
repnz
test
pop
mov
fs
jae
push
outsl
sbb
mov
jae
imul
cld
inc
cmp
test
mov
add
or
ret
lods
sub
mov
ljmp
add
pop
lods
into
add
and
push
pusha
int
repnz
mov
sbb
sar
adc
jnp
shll
inc
pop
push
jo
je
xchg
dec
add
jb
xchg
mov
orl
sbbl
push
data16
mov
das
xchg
jecxz
cmpsl
lds
or
adc
inc
push
pop
enter
push
jns
add
add
add
ret
pop
iret
fst
enter
pop
loopne
push
dec
in
add
add
pop
jle
enter
jb
and
je
dec
loope
scas
jne
int3
js
scas
dec
sbb
mov
fs
jmp
inc
or
jnp
ss
jbe
icebp
out
cmpsb
jmp
out
fucomip
arpl
dec
mov
push
xchg
push
sbb
xor
dec
push
xchg
hlt
cmp
mov
add
add
lock
out
repz
mov
ret
in
daa
int
shrb
add
pop
leave
insl
sahf
clc
jns
test
jmp
in
adc
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
scas
sbb
mov
sbb
add
inc
add
push
inc
add
sbb
add
push
inc
add
sbb
add
mov
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
inc
add
or
xorl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
sahf
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
xchg
sbb
add
sbb
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
loopne
jge
and
add
arpl
add
mov
cmpsb
and
sub
pop
popf
test
push
repz
mov
sarb
sbb
xchg
dec
push
popa
sub
mov
ja
pusha
fimull
xchg
jns
xchg
pop
out
push
or
and
mov
xor
repnz
leave
scas
ljmp
outsl
sbb
ds
nop
dec
ljmp
imul
lea
add
add
sub
cli
jl
xlat
push
jmp
rclb
xlat
add
arpl
add
add
add
out
outsl
cmp
xor
dec
jge
orl
cmpsl
test
insl
jp
pop
fldcw
xorb
jb,pt
repz
cmp
xor
mov
imul
lock
inc
stc
xor
xor
sbb
pop
int
sbb
int
les
add
mov
add
add
mov
jg
ljmp
push
in
xlat
add
arpl
add
out
inc
orb
xor
iret
inc
xor
xor
dec
int3
ret
xchg
xchg
xchg
sub
dec
and
cld
shlb
lret
call
outsl
adc
cmp
pop
test
pop
insb
inc
je
adc
pop
xchg
ljmp
push
daa
fcoml
xchg
sbb
sahf
inc
mov
pop
stos
sub
xor
or
jae
add
add
cmp
cmp
in
fimuls
cmp
sbb
add
arpl
add
orl
stos
cwtl
aas
pop
adcl
mov
pop
adcb
pop
adc
aaa
fnstcw
cmpsl
divb
fisubl
sub
scas
pop
mov
popf
pop
lahf
pop
adc
mov
or
xor
xchg
aas
popa
movsb
inc
aas
jge
arpl
sub
popa
aaa
pop
out
js
not
ja
adc
push
add
add
add
mov
sbb
std
negb
sub
jns
mov
add
add
cmp
mov
jnp
cltd
xor
cmp
xchg
loopne
xor
dec
xor
notl
pop
hlt
movsl
hlt
mov
jnp
movsl
stos
xchg
jle
out
sub
fdivs
cmp
mov
pusha
test
sbbl
adc
subl
xchg
data16
jne
jg
dec
mul
dec
adc
testb
xchg
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
movups
add
arpl
add
xchg
xlat
lock
mov
js
push
or
das
adc
adc
aaa
icebp
mov
clc
jns
lea
pop
daa
mov
in
push
jge
push
jno
movsb
ret
rcrb
push
lods
or
in
mov
sbb
mov
dec
je
jno
or
std
xchg
sahf
sahf
dec
xchg
mov
mov
sub
jae
jl
pop
add
add
add
add
pop
sub
in
je
add
arpl
add
fisubs
loop
push
fdivp
rclb
xchg
mov
adc
test
icebp
lret
adc
cmc
ss
out
mov
lcall
roll
pop
int
mov
mov
jle
imul
fbstp
cmp
push
or
outsb
mov
mov
pop
jns
sub
int3
pop
cmpsl
sahf
add
add
add
mov
aam
xor
and
xlat
flds
add
add
call
adc
movsl
xchg
mov
fcmovnu
mov
in
push
cmp
leave
pop
fnstenv
and
pop
or
es
subl
inc
out
rclb
push
dec
stos
add
decb
adc
xchg
mov
xor
dec
hlt
cmp
lret
mov
test
push
push
gs
sbb
and
adc
add
push
add
mov
out
lret
int
cmp
add
arpl
add
into
stos
xor
push
push
js
aas
mov
jbe
cmp
aas
fsubr
sub
push
addr16
pop
mov
addb
imul
dec
add
es
mov
imul
add
fwait
std
sti
pop
adcl
mov
xchg
xor
push
pop
rcll
push
rclb
mov
or
arpl
jp
xor
add
add
mov
jmp
fimull
mov
fiaddl
add
add
xchg
pushf
loop
pushaw
loop
outsb
lcall
out
insl
or
aad
lods
mov
lret
cwtl
inc
add
dec
je
mov
fistl
push
daa
sahf
cmp
stos
mov
cmp
xor
inc
aam
les
mov
outsl
xchg
jge
and
or
add
lahf
push
xchg
sbb
stos
add
add
add
pop
iret
pop
aad
ss
dec
jmp
and
add
add
or
push
or
add
imul
aad
shlb
std
and
dec
mov
add
push
cmp
mov
mov
adc
aas
insb
add
in
mov
sub
lock
sbb
pop
add
bound
push
mov
fsubr
cmpsb
pop
push
add
add
add
add
cld
add
fimull
arpl
add
arpl
add
lods
sub
out
dec
cmpsb
lcall
add
xchg
ret
sbb
jno
and
lods
out
inc
into
cltd
je
push
outsl
leave
or
dec
lret
xor
sbb
jle
inc
and
std
iret
shl
sub
imul
in
movsb
lods
fcoml
mov
xor
add
add
add
lock
jle
repz
test
add
add
out
push
adc
test
mov
push
js
sub
mov
jl
mov
add
mov
lea
xchg
test
add
pop
call
push
pop
cld
xchg
imul
sub
xor
clc
lret
cld
leave
sub
push
dec
sub
jnp
push
mov
aad
cld
add
add
add
adc
adc
mov
lds
sub
add
arpl
add
or
js
lcall
inc
sahf
mov
push
xchg
dec
mov
scas
mov
rorb
pop
dec
pusha
test
je
dec
dec
inc
arpl
into
iret
in
popa
sub
push
int
and
pop
dec
mov
inc
insb
xlat
cmp
stc
pusha
sbb
scas
out
mov
add
inc
add
add
add
cmp
mov
rorb
add
arpl
add
mov
imul
mov
inc
sahf
or
cs
inc
pop
icebp
mov
mov
sub
sbb
nop
mov
dec
inc
mov
push
xor
out
cmp
sbb
xor
xchg
stc
lahf
imul
and
push
xchg
call
mov
add
add
sqrtps
cmc
das
sbb
xchg
iret
push
mov
and
faddl
add
add
call
pushl
lsl
xchg
sahf
popf
stos
orb
mov
test
test
dec
sub
sub
sub
test
popa
popf
sub
cmpsl
push
lret
test
jecxz
cmp
pop
stos
pushf
les
sbb
mov
adc
sarl
mov
mov
xchg
fmul
sbb
add
add
int
xchg
inc
cmc
sti
fildll
sub
push
pop
push
fldl
add
add
xchg
sbb
pop
and
les
mov
lea
ds
int
xchg
imul
inc
in
daa
in
adcb
test
jp
jns
int
out
in
decb
jmp
pop
jle
into
mov
xchg
fstpt
mov
popa
lods
test
in
scas
adc
inc
add
add
add
fs
testl
jo
mov
add
arpl
add
add
adc
push
in
sar
cwtl
mov
xchg
cmpsl
pop
pop
or
sbb
push
movsb
jb
add
lods
sub
movsb
aam
or
out
fucomip
push
sub
adc
pcmpgtd
inc
or
jbe
stc
cmp
mov
cs
ds
pop
dec
fiaddl
sarl
inc
lcall
push
imul
mov
pop
js
fiadds
add
add
gs
inc
mov
ret
mov
in
mov
daa
mov
pop
cmp
and
ds
lods
xchg
addb
inc
and
clc
outsl
xor
pop
and
add
lea
push
ficomps
push
adc
shll
insb
inc
jo
jnp
sbb
mov
out
jge
xchg
and
mov
add
add
add
add
jne
jg
clc
cs
push
sub
add
arpl
add
mov
ss
mov
in
test
xor
cs
inc
mov
addb
or
repz
jb
xchg
push
push
or
cmp
dec
mov
mov
popf
in
pop
mov
in
es
aam
insl
lock
movl
fwait
adc
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
arpl
add
sbb
ret
insl
and
push
in
hlt
sub
clc
push
out
jne
push
cmpsb
popf
pusha
pop
shlb
lods
std
jb
into
aam
pop
dec
cmpsl
popa
inc
dec
fwait
repnz
jmp
subb
popf
out
cmp
xchg
fstpt
sbbb
push
pop
xor
inc
inc
push
add
cmpb
add
add
add
push
mov
mov
xchg
adc
mov
jnp
rolb
add
add
es
imul
xchg
mov
arpl
and
cli
sub
lds
rclb
cmp
add
pop
push
lods
shlb
push
push
add
cli
sarb
pop
push
fcoms
mov
out
addr16
jecxz
jae
mov
sgdtl
cmp
insb
mov
loopne
add
add
add
fisttps
push
jo
ljmp
add
add
jb
sub
mulb
dec
jnp
push
xor
inc
iret
roll
add
mov
aad
cltd
jg
xor
nop
jg
cmp
add
inc
ror
rcrb
daa
adc
dec
sbb
mov
hlt
fsubrs
jns
inc
push
pop
inc
xchg
cltd
fsubr
aas
in
jg
adc
jle
push
rcr
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
adcl
xchg
mov
xor
aaa
xchg
ffreep
pop
add
xchg
mov
cld
xor
nop
jo
xor
nop
push
out
add
aam
aam
inc
push
dec
xor
jb
insb
xchg
mov
mov
dec
cmc
dec
scas
lods
out
in
scas
jb
lds
jecxz
mov
je
lock
sahf
mov
sbb
add
add
and
cmp
pop
jo
sbb
add
arpl
add
dec
outsl
jns
sbb
push
sbb
sub
sub
imul
jge
cmp
sahf
add
stc
aad
xchg
mov
mov
push
syscall
and
out
pop
jno
push
fdivs
data16
pop
or
popl
xchg
outsb
jl
mov
jmp
or
clc
xchg
add
add
xchg
nop
ffree
popf
aam
jne
pop
jle
add
arpl
add
inc
dec
adc
cmc
in
cmp
mov
and
lds
jo
sub
sub
dec
mov
inc
in
xor
addb
pusha
jbe
xchg
adc
mov
xchg
gs
and
jb
pop
ss
daa
int3
jg
cld
jle
or
push
pop
pop
in
and
or
mov
mov
bound
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
lods
dec
daa
pop
loope
add
arpl
add
mov
mov
int3
add
bound
das
cmp
aad
and
popf
stc
push
mov
popa
and
stos
cmp
ss
fisubs
insb
pop
sub
xchg
es
or
enter
push
out
jno
dec
lods
sub
mov
scas
sub
cmp
push
adcb
add
ror
mov
sub
out
stc
dec
fbld
roll
add
add
test
pop
dec
xlat
cmp
push
and
pop
mov
adc
arpl
cwtl
jno
cmp
mov
fcoms
scas
xchg
and
shlb
ljmp
popa
rcll
adc
jbe
lcall
cmp
ret
cld
jmp
dec
or
daa
pop
mov
pop
out
pop
add
add
in
outsb
and
pop
mov
cmpsl
roll
add
add
cmp
ds
sti
lret
mov
cmpsb
inc
sub
insb
pusha
insb
call
xor
mov
movsl
sub
mov
or
fsqrt
cmpl
mov
pop
icebp
les
add
push
movsb
mov
mov
push
test
mov
or
push
inc
dec
movsl
pushf
jnp
push
mov
or
add
add
mov
and
cmp
aam
add
add
dec
int
movsl
shlb
inc
enter
repz
pop
push
loopne
jo
dec
gs
jae
fisttpll
mov
jecxz
dec
push
xchg
pop
pop
adc
add
and
inc
sub
cmp
or
mov
mov
inc
fisubl
repnz
movsb
add
bound
aad
sbb
jno
jge
add
add
add
stc
call
into
inc
mov
div
leave
push
arpl
add
popa
xchg
jmp
sahf
call
daa
add
pop
mov
push
add
lods
leave
add
int
js
cmp
sahf
cmpsl
cmc
jae
cmp
cmp
fs
jmp
xorl
push
lcall
imul
xor
scas
das
mov
jbe
sbb
add
add
add
sub
sub
pop
aad
mov
aam
add
add
in
sti
push
push
mov
loopne
fstpl
enter
fnstsw
inc
fbstp
pusha
jno
in
xor
xchg
mov
push
and
pop
into
push
stos
lcall
insb
or
test
aas
mov
mov
xchg
xchg
cmp
ror
aam
jmp
je
test
cltd
add
add
add
int3
sbb
out
loopne
lods
jp
adc
add
add
add
mov
push
mov
mov
jae
lds
popf
pusha
or
fdivl
das
int
in
xchg
jle
outsl
pushf
or
lods
test
frstor
loop
stos
xor
jnp
push
xchg
stc
inc
adc
mov
inc
mov
ja
nop
ja
lahf
push
jb
push
cld
in
mov
add
add
push
test
fildll
repz
mov
arpl
add
sbb
cbtw
pushf
les
mov
and
rcrl
ret
mov
cld
fwait
xchg
mov
and
mov
mov
jl
xchg
pop
js
push
mov
and
lcall
add
push
sbb
lea
cmp
out
fisubrs
in
mov
and
popa
lds
add
add
add
lods
fcomi
sarb
add
fxch
stc
aad
add
add
fsubl
mov
call
popf
xor
fistps
xchg
mov
push
push
mov
jno
stos
push
pop
cwtl
mov
xchg
or
repz
les
adc
pop
and
jbe
mov
or
outsb
lds
jmp
pop
mov
add
add
add
divl
dec
cmp
dec
outsw
lds
pop
add
arpl
add
mov
or
push
cmp
adcl
sbb
popa
test
mov
divl
ds
mov
cmp
sub
stc
and
xor
jl
dec
jg
cs
dec
adc
jge
mov
insl
out
push
push
cmpsl
jmp
or
add
add
arpl
jge
mov
daa
inc
jmp
mov
arpl
add
clc
divps
mov
inc
dec
fstps
aad
pop
fnstenv
out
jg
roll
cmpsb
out
sub
ja
dec
shrl
out
mov
icebp
je
mov
fists
roll
icebp
push
pop
push
dec
int
cmpsl
push
pop
cmp
xlat
xor
test
fstpt
add
add
add
ss
xor
and
xchg
add
arpl
add
cmp
cltd
aad
clc
and
lret
fcoms
mov
fcompl
sub
pop
push
subl
insb
mov
sbb
sub
loope
xchg
js
cltd
test
rclb
icebp
sub
mov
push
mov
fcomps
jns
mov
jnp
sarb
pop
or
dec
add
add
add
out
mul
aaa
cmc
xchg
lcall
add
arpl
add
xchg
mov
cmp
cli
xchg
cs
fadds
jl
aaa
ds
xchg
test
dec
das
mov
mov
outsb
xor
ja
pop
and
insb
arpl
jb
dec
inc
ret
inc
jp
pushf
jle
xor
mov
lcall
mov
aam
xchg
addr16
cmp
repnz
pop
jbe
loop
xchg
push
push
add
push
aad
out
fucomip
ss
cmp
and
inc
filds
add
add
fdivrl
dec
ds
push
into
or
das
lret
mov
mull
ljmp
cmpsb
add
out
adc
aad
jnp
add
notl
mov
shrl
xor
aas
mov
loope
outsb
mov
lods
lea
cmpsb
sahf
data16
sub
or
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
movsb
filds
add
add
repz
mov
mov
stc
fstpl
repz
mov
xchg
inc
lret
mov
sub
test
orl
loope
pop
pop
int3
adc
pop
push
outsb
cmp
addb
mov
push
lcall
mov
shlb
insl
jae
es
mov
movsl
mov
hlt
adc
loopne
addl
cmp
paddsb
nop
shrl
pop
dec
pop
loopne
add
add
pop
fs
mov
movsb
iret
imul
mov
push
test
mov
addr16
in
xor
shrl
dec
push
test
inc
addb
jle
mov
xor
stc
pushf
cmp
mov
dec
jmp
dec
xor
xchg
hlt
cli
test
mov
iret
fiadds
add
add
xchg
cmpl
push
loopne
lcall
add
arpl
add
aad
shll
cmp
fstp
inc
fs
push
push
add
mov
shl
xlat
mov
sbb
xchg
out
lea
adc
dec
aaa
add
cwtl
cmp
lods
int3
cmp
aas
jge,pn
jae
call
and
mov
ljmp
adc
push
jle
mov
cmp
test
mov
outsb
sbb
push
add
fincstp
shl
frstor
pop
dec
lahf
or
add
loopne
add
add
jl
scas
inc
jg
call
ficomps
add
orl
push
xchg
xchg
data16
loopne
inc
dec
cmc
fistpll
jl
outsb
fwait
xchg
mov
das
mov
sti
push
cmc
xlat
psubd
mov
sbb
jl
xchg
rcll
pop
mov
dec
inc
mov
scas
rorl
jns
add
add
outsl
mov
jmp
push
fcmovu
in
cli
inc
lea
loope
add
add
jo
push
mov
fisttpll
bound
aaa
push
aad
jp
mov
xchg
jecxz
gs
in
mov
and
jp
out
scas
jp
fwait
iret
mov
jne
or
rcrl
jg
add
or
xchg
mov
pop
fistpll
mov
fcomps
add
add
add
sbb
inc
jecxz
mov
enter
xchg
loope
add
add
push
jle
call
outsb
sub
cli
mov
xor
mov
fwait
mov
fucom
pop
xchg
je
out
ror
jnp
mov
scas
xor
adc
call
mov
arpl
pushf
push
or
stos
das
dec
and
xor
jne
add
add
add
add
mov
icebp
and
je
mul
add
arpl
add
cmp
cmp
fwait
xchg
inc
dec
aaa
cmp
lods
add
pop
push
sti
out
lods
or
pop
scas
nop
in
jne
cmpsb
in
jb
add
mov
lcall
push
outsl
fnstenv
lock
enter
or
xchg
and
out
les
loop
or
into
cld
push
nop
cmp
add
xlat
repz
das
cli
fists
dec
es
or
lods
loop
loop
add
add
lock
insb
adc
sub
cmp
push
hlt
sub
lcall
je
scas
pop
xor
mov
nop
dec
xchg
movsl
push
enter
lret
test
cli
xlat
daa
and
test
push
sbb
iret
inc
cmpsb
pop
xchg
and
shr
sub
and
add
add
adc
push
adc
cwtl
out
inc
test
sarb
add
cmpl
and
rorl
dec
mov
hlt
daa
dec
lahf
fildl
sahf
inc
mov
dec
nop
mov
clc
inc
insl
or
xchg
outsl
sahf
mov
or
ret
cmpsl
lcall
mov
adc
andb
dec
cwtl
add
push
out
xchg
ds
jnp
mov
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
push
cmp
add
add
add
add
add
add
add
add
dec
cmp
add
add
inc
iret
add
pop
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
