push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
fwait
aas
sarl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
in
clc
jp
ret
popa
xchg
nop
shll
jno
xor
or
in
scas
jmp
mov
popa
xchg
xor
mov
cmp
cmp
cmp
push
cmp
cmpsb
cwtl
adc
shrb
cmp
outsb
xchg
faddl
stos
adc
insb
xor
push
mov
dec
adc
in
cs
das
push
adc
lret
test
movsl
rclb
pushf
mov
jl
cmovns
or
push
xchg
adc
xchg
shl
mul
in
mov
lock
dec
les
sbb
insl
les
pop
inc
sbb
sbb
sub
iret
inc
adc
mov
fprem
sub
shll
jp
les
xor
lahf
cs
sub
xchg
pop
xor
lods
movsb
push
adc
jecxz
push
repz
pop
push
jno
outsb
jo
xchg
scas
aas
rcll
imul
xchg
push
jmp
adc
das
jb
popa
int
sbb
daa
nop
mov
pop
mov
insb
popa
repnz
inc
push
adc
stos
xchg
cld
rdtsc
mov
aaa
and
popf
push
insb
xchg
insl
mov
cld
mov
add
loop
pop
insl
mov
in
lret
leave
data16
stc
mov
bound
jle
mov
sub
inc
jl
nop
push
jno
jo
cmp
inc
js
daa
pushf
repz
or
insl
imul
push
ficomps
and
fsub
xchg
ja
in
jae
cmpsl
mov
lret
mov
fsubs
lea
cmp
fidivrl
imul
ret
push
cmpsb
fmuls
das
xchg
das
or
ljmp
and
scas
subb
sub
scas
test
mov
inc
and
push
jnp
mov
cmp
pop
cmp
jle
mov
outsl
dec
cwtl
xlat
or
cmp
pop
aaa
inc
xor
jg
jo
fcomip
mov
dec
outsb
jbe
paddw
sbb
push
test
and
mov
push
xlat
iret
push
shl
pop
adc
dec
mov
daa
cmp
stos
in
les
mov
mov
out
adc
mov
xlat
or
or
mov
inc
pop
add
pop
add
cwtl
push
repnz
fisubrs
lock
out
add
xor
xor
inc
lahf
ret
inc
and
ss
in
mov
lds
ljmp
and
pushf
or
pop
in
es
jg
in
jo
cmpsb
cmp
mov
das
cmp
sbb
push
in
xchg
cld
mov
mov
xchg
imul
loopne
cli
dec
cli
out
aad
mov
jmp
add
sub
cld
push
pop
ret
jmp
mov
xchg
pop
or
fbld
push
in
pop
imul
push
push
call
aam
push
lret
xor
adc
inc
sarb
pop
test
popf
dec
loop
fmulp
mov
sbb
mov
dec
gs
push
mov
hlt
push
pop
loop
sbbb
ret
inc
lret
xchg
jle
repnz
mov
test
mov
adcb
leave
add
decb
sbb
ffree
and
nop
lea
jle
xor
add
pop
mov
jne
scas
pop
jle
xor
out
in
dec
clc
xor
push
dec
stos
dec
cmp
adc
mov
adc
out
cwtl
inc
daa
push
repnz
test
aad
and
in
sbb
pop
test
addr16
cmp
lret
in
dec
cli
inc
add
jle
ja
fbld
adc
loopne
mov
mov
mov
lods
stos
xchg
xlat
pop
jae
je
push
lock
xchg
shll
push
scas
cmp
pop
imul
jno
or
mov
into
movsl
out
inc
addb
fldl
xor
subb
fwait
negb
ret
push
movsb
xchg
push
in
lret
rclb
adcb
push
ret
cmp
or
pop
push
dec
int
pop
mov
jmp
pop
les
shrb
mov
cld
dec
je
cld
std
mov
lahf
add
jmp
or
inc
xchg
mov
xchg
iret
sbb
loope
test
jle
mov
jmp
xchg
mov
fisubl
mov
mov
popa
aam
fdivs
mov
clc
adc
test
inc
mov
mov
push
push
mov
pusha
imul
fldl
push
pusha
ret
lock
repz
pop
ljmp
dec
jl
adc
lret
push
loopne
sub
and
mov
aad
push
cmp
hlt
sbb
test
stos
in
xor
add
lcall
pushf
pop
inc
jo
cmp
jle
cli
out
mov
mov
inc
sub
mov
insb
cmp
iret
push
adc
xchg
fnstcw
ds
pop
sbb
push
dec
int
jb
fdiv
inc
mov
divl
pop
add
pop
popf
dec
jns
and
cs
mov
xchg
aaa
mov
pushf
adc
pop
cmpsb
out
xor
cmpl
add
lods
lahf
jge
repz
scas
dec
mov
jns
into
rep
mov
int3
shll
mov
add
cmp
push
sahf
mov
insl
mov
test
stos
or
mov
xchg
adc
mov
jecxz
imull
mov
sub
lret
inc
or
cmp
fsts
inc
rolb
ss
insl
pop
pop
fcmovnbe
jne
out
cmc
xor
xor
jmp
and
jp
lahf
push
xlat
jnp
or
adc
dec
pop
mov
fidivs
div
push
enter
jns
aad
out
cmc
jae
leave
and
lds
sub
cmp
stc
pop
cli
mov
das
scas
shl
ret
call
fwait
push
aad
pop
rclb
inc
aaa
inc
rcrl
adc
pop
adc
mov
adc
push
inc
push
push
shll
dec
xchg
jb
pop
and
cwtl
cmp
shr
push
sub
outsl
test
mov
inc
adc
in
pusha
cmp
arpl
jne
imul
or
adc
aas
push
test
jg
insb
add
nop
xchg
test
test
jns
rcr
sub
push
test
mulb
xchg
enter
jmp
pop
jge
jge
xor
mov
push
cmp
or
adc
repz
xchg
jmp
push
xor
shll
and
out
xchg
cmp
xor
mov
add
inc
sti
cltd
cmp
dec
in
sti
test
jge
aaa
xor
stos
test
fcoms
sarl
pop
fs
push
dec
or
push
inc
cmp
std
mov
dec
pop
xchg
cmpsb
fwait
pop
inc
notb
mov
sbb
mov
ds
mov
xchg
test
jne
mov
mov
aas
add
pop
mov
lock
dec
imul
mov
mov
cmc
cmc
mov
es
jge
push
xor
out
mov
sbb
dec
lds
jle
add
sub
nop
pslld
les
rolb
push
ret
cli
test
mov
mov
icebp
test
sub
in
ja
xchg
arpl
enter
push
or
adc
add
or
xor
cltd
dec
fstpt
pushf
outsl
mov
test
mov
test
xor
sbb
scas
sub
hlt
cmp
mov
xchg
sahf
cmpsl
pop
add
js
icebp
xchg
pop
aas
jg
push
mov
addl
mov
je
mov
scas
push
in
push
sub
jbe
dec
cmpsl
add
push
andps
jecxz
and
jl
lds
cmp
aas
les
inc
and
push
dec
fwait
sbb
cltd
gs
rcr
fmulp
jg
push
mov
sbb
mov
inc
pop
clc
lahf
mov
sarb
xor
into
mov
pop
stos
sbb
mov
sub
sbb
and
mov
dec
push
ret
lds
lds
fisttpll
negb
test
leave
sub
sub
xchg
das
loop
flds
clc
sub
cs
lahf
addr16
in
fwait
lcall
pusha
icebp
jmp
stc
sar
popf
xorl
outsb
arpl
rclb
and
imul
lods
popa
mov
sub
inc
add
sbb
xor
xchg
test
loope
and
pop
cmp
xorl
or
cmp
ss
sub
in
rcrl
mov
cli
mov
xor
sahf
inc
cmpsl
and
das
popf
lea
adc
jno
dec
xor
in
xchg
adc
imul
mov
call
sbb
cmp
popf
or
sbbb
cli
cmp
andl
cltd
aaa
in
xor
das
test
outsl
pop
insb
lcall
bound
dec
push
mov
push
cld
ds
jg
sbb
mov
pop
fiaddl
loopne
sti
xchg
xor
outsl
inc
mov
push
dec
push
lods
lcall
mov
xorl
xor
add
pop
jns
test
js
popa
and
mov
jp
ljmp
cltd
mov
jae
in
mov
push
fbld
out
dec
push
addr16
pusha
sbb
enter
inc
ss
js
mov
scas
xor
cmp
aam
dec
jp
mov
sbb
xor
mov
call
outsb
je
int3
sbb
mov
add
or
adc
repnz
dec
cmp
or
mov
cmp
int3
in
lods
out
stos
test
xchg
sbb
pop
shrb
aas
rol
mov
mov
addr16
bound
fwait
mov
inc
add
inc
lret
in
ficompl
and
push
clc
jmp
sti
xlat
icebp
sbb
mov
dec
stos
testl
sahf
ljmp
je
jnp
popf
jle
xor
jmp
xor
pop
pushf
adcl
fstl
imul
jno
mov
jle
mov
test
movsl
lods
jl
int3
data16
rcrl
sarl
xchg
xchg
or
std
push
xchg
les
in
pop
ljmpw
inc
pop
add
andb
ret
ret
nop
in
dec
in
xor
xlat
pop
mov
imul
cli
push
in
dec
dec
mov
inc
call
repnz
add
stc
xchg
rclb
jno
xchg
sbb
ret
jmp
or
daa
dec
push
movl
sub
outsb
test
adc
and
jb
insl
xor
lcall
jmp
push
xchg
pushf
cmp
sbb
inc
call
fstps
jns
push
push
sub
nop
jg
in
pop
shr
fmull
pop
gs
cld
aaa
pushf
jns
jne
xor
insb
fdivrp
test
pop
ljmp
insl
pop
les
mov
xor
or
pop
and
inc
xor
mov
adc
push
in
int
push
mov
cmp
and
lods
cmp
add
sub
sarb
push
sub
cmp
inc
enter
cmpsl
jp
loop
xor
imul
insb
jecxz
mov
jl
stc
lahf
or
andl
inc
or
test
sarl
jae
call
dec
sub
filds
pop
mov
push
movsb
xor
sbb
in
and
inc
jmp
lds
out
lret
testb
jbe
int3
outsl
mov
cmp
jae
xchg
sbbb
pop
insl
add
xlat
or
jle
sub
or
pop
inc
sub
pop
inc
outsl
btc
jnp
ror
jle
xchg
rclb
sub
cld
call
mov
insb
mov
aam
push
lods
fmul
nop
pushf
in
jle
cltd
outsl
and
xchg
sete
aam
inc
test
gs
push
adc
test
push
arpl
jb
ret
jnp
movsb
cmpsl
dec
xlat
popa
jge
jp
sub
repnz
sbb
mov
xchg
ficoml
or
fisubrl
ret
iret
pop
scas
ja
pop
out
aaa
icebp
mov
pop
mov
outsl
ds
dec
pop
mov
jg
sbbl
push
adc
mov
int3
cli
lret
fidivl
push
lods
inc
mov
sub
xor
mov
mov
sub
push
inc
mov
lret
adc
mov
dec
xor
out
cltd
enter
fildl
pop
sub
jno
loope
xor
in
adc
pop
movsl
pop
inc
xlat
mov
sub
sbb
mov
js
sbb
mov
adc
and
or
cld
mov
adc
je
sub
or
sti
lret
pushf
rcr
mov
jnp
xchg
test
adc
cli
test
mov
in
cmp
push
out
cs
pop
lock
in
jle
mov
ja
jbe
je
sbb
dec
mov
pop
fidivrs
ss
je
push
cmp
pop
loop
aam
xchg
popl
pop
mov
aaa
mul
pop
inc
sub
cld
sbb
fdivrl
arpl
jbe
lock
xchg
jl
dec
push
gs
call
jo
fstl
sbb
in
dec
sbb
dec
andl
iret
fcmovb
and
jnp
lods
adc
popa
into
sub
mov
push
cmp
cmp
and
cmp
addl
sbb
aaa
rorl
mov
dec
jmp
int3
arpl
sbb
in
outsb
ret
mov
sarl
xor
jl
stos
out
sti
push
xchg
aam
test
out
push
in
jnp
dec
das
pop
int3
movsl
cmp
inc
inc
mov
pop
jnp
pop
xchg
cld
out
cmpsb
lods
test
or
jg
mov
orl
hlt
sub
int3
xor
lds
arpl
sti
out
dec
jg
mov
dec
sub
clc
movb
pop
xorb
push
and
add
pop
add
cmpsb
je
cmc
push
test
icebp
dec
xor
fists
jno
test
test
jp
inc
jno
mov
les
xchg
aad
xchg
and
jp
dec
mov
leave
mov
dec
mov
jb
jmp
pop
leave
pusha
test
cmp
xchg
xchg
nop
push
sarl
popa
popa
outsl
inc
sub
xor
ss
mov
and
mov
lods
cld
clc
dec
clc
and
inc
lds
lcall
push
push
push
pusha
in
mov
mov
scas
cmpsb
mov
cld
cmp
arpl
mov
in
mov
lahf
aam
xor
repnz
icebp
lret
jmp
add
xchg
pop
mov
sub
inc
lcall
mov
jge
ja
data16
stos
ljmp
test
or
dec
adc
movsl
std
cli
lahf
or
xlat
repz
outsl
fstl
push
mov
idivl
into
cmp
push
enter
outsb
cld
out
or
popf
call
adc
stos
pop
mov
cmpsl
fld
sti
into
cmp
sub
mov
pop
aad
mov
int
or
fildll
sbb
cmp
and
and
loop
adc
sub
in
sub
adc
or
mov
in
jno
xchg
iret
push
pop
cmpb
cmp
arpl
cmp
mov
inc
std
sub
sti
mov
push
mov
outsb
mov
sub
int
push
imul
sbb
jnp
xor
cmpl
xlat
imul
xchg
test
scas
ret
loop
dec
pop
and
or
mov
cmp
and
mov
inc
cmpsl
into
shll
mov
out
push
xchg
xchg
cmpsl
sbb
lret
fcoms
add
mov
add
icebp
and
mov
inc
sbb
and
es
mov
adc
and
mov
stos
repnz
mov
test
xchg
fs
neg
cmp
mov
movsl
dec
mulb
je
jo
aad
sub
int3
sbb
notb
xchg
scas
xchg
out
push
push
cs
adcb
pop
setle
sub
push
out
xchg
cmp
xor
pop
or
lahf
mov
xchg
jge
lahf
mov
mov
push
insb
in
xor
xor
fcomp
mov
icebp
mov
out
pop
subl
iret
jmp
repz
push
mov
fwait
int3
cwtl
inc
outsb
loope
in
jmp
push
sbb
xor
add
sub
cmp
dec
aam
xchg
push
std
mov
mov
and
dec
sbb
adc
add
outsb
and
sub
sarl
mov
or
fisubs
sub
aam
es
cwtl
mov
push
cmp
inc
cmpsb
test
ret
jecxz
jnp
jp
mov
fwait
shl
sbb
inc
inc
sbb
repnz
push
leave
and
add
cmpsl
mov
movsb
shlb
inc
int3
jecxz
cmp
add
hlt
jbe
xor
in
inc
push
pop
lahf
and
mov
mov
cmc
insb
sub
sub
test
jmp
or
imull
inc
imul
ret
add
dec
rol
lods
ds
cli
aad
jle
out
test
pop
ret
nop
and
jne
nop
jl
pop
scas
push
pop
push
xchg
or
fisttpl
arpl
je
fdivp
addr16
mov
addb
or
mov
jne
cmpsl
xchg
push
xchg
test
adc
sub
jnp
mov
xchg
cmp
test
imul
data16
dec
cmc
movl
push
icebp
push
xor
mov
mov
push
ja
mov
iret
cmp
mov
and
scas
jg
mov
sarl
cmp
xchg
xchg
push
push
mov
pushf
sub
dec
mov
faddl
mov
ficompl
testb
dec
ud0
loope
js
or
xchg
xor
cld
push
iret
sub
mov
push
jnp
mov
je
test
fwait
adc
notl
jbe
rolb
adc
int3
xchg
and
dec
out
xor
push
mov
push
pop
pop
or
mov
xor
test
negl
pop
lea
cli
sar
or
in
pop
out
pop
xchg
mov
xor
push
mov
mov
xor
test
fs
push
jle
gs
ret
fsubrs
pop
push
dec
divb
fldt
sbb
in
subl
or
rcrl
or
sub
fstpt
nop
fmull
out
hlt
cmpsb
testb
out
rcr
sub
xchg
adc
hlt
pop
outsl
fwait
add
into
mov
imulb
or
jno
xor
stos
push
lahf
adc
sub
or
sub
data16
mov
stos
inc
scas
pop
cmpsb
ret
sbb
adc
leave
push
dec
mov
test
out
std
movsb
adc
fadds
clc
aad
sbb
jbe
fcoml
fadds
lea
add
pushf
imul
mov
les
jo
addl
cld
push
rcll
pop
roll
cmp
jmp
in
mov
inc
and
mov
lret
push
data16
mov
cmc
dec
jae
push
shrl
push
mov
xchg
and
jbe
movsl
jge
repz
cmp
add
mov
dec
in
mov
xchg
xchg
in
out
mov
xchg
sub
push
mov
je
in
or
sbb
int
push
data16
pop
jp
push
jmp
les
cmp
int
xchg
sub
add
into
sbb
cmp
mov
jae
sbb
xor
sub
sahf
xchg
popf
clc
jg
insl
aam
xor
int3
rcrl
xor
dec
mov
push
dec
adc
sbb
insb
cltd
jns
cmc
adc
aad
addr16
mul
push
into
ds
adc
aam
mov
push
or
sbb
xchg
or
lds
mov
sbb
adc
jg
pop
repnz
jmp
mov
sub
sub
lock
fcoml
gs
test
cld
in
pop
int
adc
sbb
fcompl
jmp
and
pop
fldcw
fadd
jle
daa
jae
aaa
mov
aas
sub
sti
int
xor
fmull
pop
jo
jmp
add
outsl
cmp
scas
out
insb
cmp
stos
pop
gs
mov
ljmp
fucomp
sbb
repz
xchg
in
lret
add
sbb
out
sbb
mov
push
js
mov
mov
sahf
mov
pop
aad
jp
pusha
add
aad
outsl
lret
jo
movsl
hlt
mov
push
loope
stos
pushf
int
aad
cmc
cmp
out
mov
mov
push
cmpsb
pop
or
cld
push
push
xchg
je
icebp
lcall
and
icebp
cmp
ret
popa
lds
xor
test
scas
inc
xor
push
scas
xchg
and
and
into
jnp
adc
ret
adc
add
inc
jl
adc
mov
jo
push
cmp
and
cmpsl
rclb
es
aaa
mov
and
push
or
sahf
pusha
iret
pop
sbb
test
xlat
fisttps
pop
xchg
push
iret
mov
cmc
cmp
mov
mov
aas
sahf
insl
gs
push
orl
mul
mulb
jle
add
gs
xchg
cmp
rolb
lds
sarb
sahf
icebp
fwait
mov
das
sub
fs
cmp
int
jle,pt
data16
test
inc
xchg
inc
inc
arpl
lret
mov
jp,pn
add
stos
adc
or
cmp
push
neg
jne
shll
mov
xchg
xchg
aad
add
out
jl
pop
push
cwtl
dec
jbe
ss
outsl
sub
scas
jne
add
aam
aaa
sbb
cmp
mov
test
sbb
mov
add
mov
loopne
gs
mov
popf
pop
jp
pop
adc
aad
sbb
jns
cmp
in
sub
xchg
fidivl
fiaddl
push
adc
dec
rcr
aas
pop
ljmp
aaa
rolb
add
push
pop
pop
mov
test
xor
sub
sbb
push
mov
push
xchg
stos
jbe
and
jp
out
adc
adc
gs
lret
push
pop
lret
cld
lcall
pop
dec
movsl
push
mov
pop
addr16
push
push
inc
mov
push
gs
aam
out
cmp
cltd
cmc
imul
jno
cltd
sar
xchg
mov
sti
or
pop
pop
mov
push
out
pop
ljmp
jns
cmpb
xor
xor
add
cli
lcall
int
aam
xchg
daa
mov
je
loope
fisubs
divb
nop
push
dec
sbb
cmpsb
xchg
ficomps
scas
inc
fs
lock
mov
pop
pop
ficompl
popf
mov
fistpl
clc
mov
mov
jp
in
cmpsb
ffreep
add
jp
test
inc
lods
mov
xor
xchg
jg
out
push
or
jo
fldz
stos
cmp
addr16
fisttpll
ljmp
sbbl
incl
shlb
add
xchg
jb
stos
mov
mov
add
push
cmp
mov
mov
cmp
in
fldt
aas
cmp
pop
into
add
icebp
and
and
int
arpl
stc
mov
cmpb
ds
dec
and
cmpsb
in
dec
sti
push
aaa
sbb
cwtl
lods
lcall
push
adc
enter
cmpsl
mov
sbb
lods
mov
test
jns
mov
fxam
stos
nop
push
fstp
sbb
sbb
xlat
cmp
pop
adc
outsl
aad
xchg
sub
iret
out
scas
pop
xchg
adc
aam
cltd
bound
ds
leave
in
ja
je
mov
adc
inc
cs
test
sar
mov
sar
xor
sbb
cmp
mov
pusha
gs
push
mov
mov
inc
jmp
psadbw
xlat
aad
loop
add
jg
push
or
inc
daa
push
stos
cli
push
pop
push
movsl
dec
mov
rcl
jo
xchg
sti
mov
js
in
leave
test
push
dec
push
popf
jnp
out
push
sub
cli
push
mov
sbb
sub
add
mov
les
push
in
out
xor
adc
sub
shll
pop
mov
aaa
in
jg
jbe
adc
aad
xor
dec
mov
mov
hlt
jbe
adc
jmp
lcall
subl
sbb
sbb
and
xor
jno
mov
in
mov
in
out
mov
xchg
cmp
mov
jae
xlat
pop
jae
gs
xchg
mov
xchg
cmp
or
repnz
into
dec
push
inc
push
sub
or
ror
movsl
andb
sub
mov
out
jmp
int3
mov
pushf
sahf
lret
pand
aas
mov
andl
mov
dec
and
adc
ja
stos
mov
dec
sbb
adc
add
lds
out
jecxz
add
imull
cmpsb
mov
movsb
sbbb
out
hlt
xor
push
mov
mov
jne
adc
shl
xchg
insl
das
clc
aad
orb
test
les
cs
inc
dec
lds
and
mov
jb
inc
in
xchg
inc
cmp
hlt
out
dec
mov
pop
pop
scas
sub
sbb
sbbb
arpl
xor
add
mov
nop
or
xchg
sahf
mov
stos
or
pop
push
fisubrs
ljmp
cmp
sub
jg
leave
mov
lds
cmpsl
std
sub
int3
dec
ljmp
pop
iret
mov
fiaddl
in
aam
clc
fcmovnb
fisttps
mov
xlat
inc
arpl
mov
ret
and
mov
int3
js
jecxz
cmp
mov
push
cwtl
mov
lock
pop
roll
cmovne
imul
lock
push
ret
cmova
in
lret
in
pop
rorb
xchg
pushf
mov
add
inc
in
pop
out
push
lahf
pop
and
jmp
ljmp
mov
int
xor
mov
mov
test
xchg
popa
and
mov
xchg
cmpsl
sbb
xchg
mov
and
shlb
jbe
lods
rorl
dec
call
shlb
popf
icebp
add
mov
fcmovne
inc
sbb
xor
add
pop
mov
sti
in
adc
scas
and
jle
dec
adc
add
push
pop
xor
pop
aaa
inc
inc
stos
lock
call
data16
f2xm1
sbb
lcall
mov
mov
fidivs
mov
dec
or
jae
into
jnp,pt
mov
or
lods
xchg
dec
ja
or
das
leave
push
loope
add
push
and
arpl
sub
dec
testl
shlb
rcrb
dec
aaa
sub
fsubrp
inc
sti
repnz
adc
movsl
push
add
sub
negb
in
jg
xorb
cmpsl
mov
pusha
sub
imul
cs
or
xchg
mov
cmp
popl
mov
dec
push
and
push
scas
xor
and
roll
push
jae
daa
mov
dec
dec
xor
mov
mov
inc
ljmp
ds
push
gs
loopne
popf
pop
outsl
repz
xchg
add
sbbb
pop
test
mov
leave
push
nop
xchg
pop
add
imul
pusha
sub
fimuls
outsl
or
mov
push
xchg
inc
dec
lahf
cmp
data16
mov
jnp
sbb
cmp
or
fstpl
cmp
stc
push
lret
xlat
lea
jle
xor
int
test
xchg
add
jg
fsubr
test
add
adc
out
shll
iret
lret
adc
je
sahf
and
mov
cwtl
lcall
xlat
pop
adcl
repnz
jge
xchg
test
xor
mov
loope
mov
lea
iret
and
push
mov
jno
mov
repnz
andnps
roll
inc
in
mov
sub
push
mov
roll
pop
xor
cmpsb
shll
mov
outsl
mov
sbb
call
and
lock
jbe
icebp
imul
mov
jecxz
pop
repz
dec
in
mov
dec
inc
mov
add
movsl
les
mov
daa
mov
pop
jmp
push
addr16
test
cmp
sub
cmp
dec
das
icebp
mov
jecxz
aam
cld
aaa
loope
out
and
lcall
mov
stos
loopne
cwtl
fiadds
pop
push
orb
rcll
aad
pop
adc
inc
mov
push
shlb
cmp
es
mov
xor
popa
adc
lods
and
mov
mov
dec
push
xchg
mov
pop
mov
movsb
test
stos
sar
inc
fstps
inc
in
pop
popa
xor
sbb
bound
outsl
jne
push
inc
mov
dec
pop
ds
cli
mov
xor
cld
jmp
xchg
jp
std
shlb
jmp
lds
das
dec
pop
add
or
je
pop
xor
mov
pop
insl
std
lds
rcrb
subb
xorl
inc
iret
ds
scas
dec
and
std
ficoms
cmp
out
cmp
xchg
cmp
test
movsl
xchg
sub
mov
ret
repnz
mov
xchg
scas
nop
xor
mov
ret
cmp
dec
test
mov
lods
sahf
cltd
out
cmpsl
ljmp
frstor
icebp
xchg
adc
push
je
testl
fiadds
inc
cltd
adc
jmp
dec
inc
ret
mov
pop
xor
arpl
je
or
mov
dec
inc
ret
dec
subl
cmc
cmp
inc
addr16
insb
jnp
mov
bound
fisttps
sbb
in
lea
inc
jl
cmp
and
push
xchg
test
xchg
mov
fsub
enter
mov
sbb
in
movsb
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
sbb
jl
pop
jl
xchg
and
scas
lods
pushf
push
lds
or
aad
insl
daa
xchg
ja
mov
mov
inc
cs
dec
adc
cwtl
cmp
out
jno
mov
mov
dec
pop
ret
add
out
sub
lods
add
stos
sbb
sbb
mov
popa
pop
repnz
add
jmp
jnp
cmpb
daa
jno
mov
mov
icebp
mul
inc
loopne
mov
fsubrs
enter
mov
sub
mov
mov
in
sarl
xlat
pop
inc
outsl
push
jge
leave
stos
cmpb
les
mov
pop
pop
imul
data16
jge
add
cmpsb
cmp
pop
xor
pop
test
jmp
mov
int
test
add
ret
pushf
test
arpl
enter
fdivrl
aas
test
jmp
lahf
and
mov
cmpsb
inc
mov
cmc
daa
mov
ljmp
mov
xor
dec
addr16
outsl
aas
ret
setp
add
xchg
xor
or
xchg
push
arpl
enter
mov
add
sub
sarb
push
add
dec
push
fidivl
add
arpl
in
mov
lcall
mov
fisubrs
rclb
stos
or
xchg
inc
mov
push
nop
test
ret
dec
bnd
inc
jae
shlb
inc
or
ja
mov
push
loop
notb
lea
cmpsb
inc
fsub
push
mov
sbb
and
out
pop
sbbl
or
fcoml
dec
add
shl
in
or
rcrb
cmpb
sbb
push
jns
int3
adc
out
scas
or
jp
mov
stc
gs
push
xor
or
and
les
sbb
hlt
mov
and
sbb
out
pop
fwait
cmp
mov
outsb
test
and
xchg
pop
inc
js
inc
push
or
xchg
ja
mov
bound
lret
xchg
in
xor
cmp
lahf
dec
lods
jno
outsl
pusha
cmp
and
fsubrl
fsubs
cmp
out
sti
jmp
xchg
cmc
jne
sub
mov
enter
mov
stos
lret
std
adc
or
js
cmp
push
movsl
jbe
mov
jecxz
pop
pop
sar
cmp
xchg
dec
and
stc
adc
andl
loop
jnp
xor
loopne
nop
in
in
xchg
cmp
test
mov
or
or
or
push
icebp
push
lahf
adc
in
sbb
add
fcomip
add
push
sub
loope
inc
cld
adc
shlb
cwtl
scas
adc
and
and
pusha
div
xchg
mov
lea
dec
ljmp
pop
shrl
int
inc
fcoms
xor
pusha
rcrb
icebp
cmp
aaa
add
cmc
out
push
insl
popa
jle
inc
xorl
xchg
cmp
xorl
push
iret
popa
test
xchg
cmp
sbb
hlt
jmp
adc
mov
inc
sub
mov
imul
int3
clc
mov
lea
inc
sbbb
pop
cmpsl
jno
insb
cld
imul
fwait
enter
adc
scas
dec
push
clc
add
fstpt
adc
aam
pop
inc
jp
shlb
sbb
pushf
dec
sbb
push
or
call
sub
xor
inc
xchg
xor
or
xchg
in
test
pusha
sbb
loopne
lods
dec
lret
mov
lahf
xor
or
sbb
pop
ret
mov
test
cmp
orb
jo
movsb
gs
push
ljmp
xchg
aam
dec
and
xor
in
mov
mov
subb
inc
into
cmpl
add
pop
mov
pop
inc
sbb
push
out
and
pop
int3
or
dec
aaa
push
dec
cmp
ret
or
sahf
fucom
mov
stc
stos
fwait
cmc
out
incb
enter
rcl
insl
push
cmpsb
lods
int3
je
imul
mov
push
ja
hlt
shrb
lds
outsl
andl
fsubrs
iret
sbb
in
sub
inc
test
jle
xchg
aam
inc
into
inc
xor
adc
test
aad
in
sub
lret
or
sbbb
adc
icebp
mull
mov
mov
adc
ja
xor
dec
sub
mov
imul
ljmp
cltd
popa
decb
and
push
in
mov
mov
stos
scas
cmc
jb
mov
jge
mov
dec
call
jbe
pop
pop
xor
movsb
dec
enter
jbe
mov
out
adc
inc
add
icebp
int
sbb
loop
cmp
mov
addb
jns
loopne
jmp
sbb
sti
jmp
push
dec
add
lds
jne
inc
call
mov
sti
cld
stos
or
xchg
push
leave
pop
cmc
out
inc
xchg
sub
aam
lret
int3
popa
je
movsb
and
cmp
dec
ss
mov
adc
dec
or
adc
xor
je
jp
and
sti
mov
data16
scas
iret
rep
out
lret
into
movsb
ret
stos
scas
iret
dec
mov
inc
fstps
inc
mov
std
add
jg
xor
pop
lods
xchg
loopne
sbb
ret
nop
mov
vmovaps
mov
inc
roll
dec
mov
pushf
inc
adc
xor
jnp
imul
adc
add
jb
jge
or
inc
lcall
cld
add
xor
inc
das
mov
in
repnz
pop
int3
cmpsb
cmp
nop
add
dec
mov
or
cmp
add
push
adc
sbb
pop
ret
jecxz
xor
adc
push
stc
cli
jne
fildll
das
and
xchg
pusha
js
xchg
sub
out
mov
cltd
fs
xor
jne
dec
in
iret
stc
imul
nop
in
cmp
xor
dec
lds
dec
out
in
insl
fisubs
je
popa
aam
xchg
jecxz
xlat
rdtsc
xlat
pop
ror
mov
iret
pop
test
aaa
mov
cmp
or
out
sarl
lock
sti
xor
stc
lods
xor
faddp
clc
js
popf
pop
add
push
je
outsb
repnz
int3
add
xchg
push
push
insl
scas
dec
push
jae
mov
lds
mov
or
rolb
cmpl
insl
dec
mov
mov
ret
in
daa
jp
inc
sub
sub
ret
arpl
or
out
dec
mov
lods
push
jg
and
and
cmp
or
in
mov
out
pop
mov
mov
mov
sbb
jl
jg
push
hlt
imul
in
sbb
and
mov
mov
loopne
adc
incb
push
in
cwtl
dec
stos
mov
rclb
faddl
out
dec
mov
dec
ret
xchg
dec
std
inc
add
adc
jp
lahf
fsubrp
test
movsb
cltd
mov
jecxz
js
xchg
in
jo
das
mov
movsl
xor
jnp
or
dec
loop
push
xchg
mov
mov
test
push
mov
or
mov
push
lock
stos
adc
push
jmp
lret
ss
fs
add
cltd
rclb
fisubrs
mov
in
fcmovbe
aad
or
inc
sbb
call
test
and
sbb
sub
cmpsb
pop
inc
and
push
mov
faddl
xchg
loopne
xor
pop
js
mov
mov
mov
inc
insb
ror
sti
out
and
dec
test
clc
inc
lods
sub
ljmp
call
test
xorl
pop
test
lret
inc
push
cld
nop
fdivl
inc
inc
sbb
sub
das
push
insb
ficompl
adc
fldt
lahf
sbb
jp
insb
lods
es
mov
pop
and
lcall
mov
mov
jno
adc
insb
out
out
lret
push
repz
ffreep
sbb
dec
mov
ss
mov
and
dec
cmp
mov
insl
iret
adc
popf
mov
push
add
adc
pop
movsl
sbb
jl
int
les
mov
pop
dec
inc
jno
gs
outsb
das
bound
xchg
sti
mov
in
add
add
dec
mov
shll
push
leave
data16
aam
cmpsl
cmp
fcmovnb
inc
pop
mov
out
pop
imul
test
fsts
and
and
add
sbb
clc
fwait
jnp
mov
sahf
push
popf
pop
or
or
imul
mov
jmp
mov
add
int3
mov
dec
pop
push
popa
inc
mov
gs
daa
or
mov
ret
rol
test
je
and
test
int
mulb
repz
xlat
pop
rep
sbb
inc
es
push
mov
adc
xor
je
push
fcomip
loopne
pop
jle
pusha
je
push
adc
out
xchg
mov
xor
incb
pop
addr16
pop
jno
std
jbe
jnp
or
mov
inc
mov
outsb
push
pop
jne
pop
adc
cmp
shrl
call
vfrczsd
push
mov
out
mov
popf
fmuls
test
jmp
subl
or
pop
rolb
cmp
cltd
mov
or
into
aad
loopne
pop
cmp
push
sub
fistpll
neg
ds
push
pop
popa
mov
popf
sbb
mov
xor
add
into
cmp
shl
icebp
lret
aad
cmp
test
cwtl
cmp
leave
mov
outsb
pop
outsb
stos
add
idivl
sub
es
popf
mov
les
dec
test
pop
aas
mov
mov
push
mov
jno
js
dec
xchg
cwtl
add
enter
and
mov
adc
jl
sbb
clc
inc
adc
mov
in
jg
xor
fisttpll
or
mov
add
je
mov
pop
inc
push
xchg
mov
cmp
mov
add
mov
ds
roll
jecxz
jmp
push
lahf
or
mov
mov
outsl
fwait
adcb
push
sbb
imul
xor
into
sahf
fdiv
add
and
iret
rcr
hlt
insb
xchg
loopne
sbb
cmp
and
cltd
add
xchg
sub
jns
test
popa
dec
push
mov
movb
add
lods
jmp
mov
adc
pop
out
daa
aad
mov
dec
bound
inc
push
out
sub
push
sbb
jg
xlat
mov
ljmp
or
popa
xorb
scas
mov
or
cmp
pop
xlat
xchg
mov
fwait
xor
mov
scas
or
xor
push
iret
push
mov
mov
sbb
jl
mov
pop
ret
mov
cmp
inc
push
and
jle
test
cs
dec
or
mov
mov
std
dec
negl
add
mov
loop
in
mov
test
mov
in
andb
xor
roll
sarb
and
xchg
das
jmp
sbb
daa
unpckhps
lea
adc
ret
aas
push
push
jmp
lds
into
insl
rclb
push
cmp
cltd
sahf
mov
ljmp
aad
insl
fsts
lahf
js
por
out
paddd
xchg
sarl
stc
cmp
adc
cmp
sbb
mov
dec
jmp
inc
xor
lcall
rcrb
js
sbbb
stc
mov
sub
testl
out
push
dec
insl
repnz
sahf
subb
or
adc
aad
cltd
daa
test
xchg
xor
pushf
in
mov
out
cmp
lret
xchg
jo
dec
dec
in
cmp
sub
cmp
push
sub
add
sub
cmp
sbb
mov
cmp
int
fs
push
sbb
jae
rorb
decb
jmp
mov
cli
ret
test
ret
jp
add
jns
dec
enter
dec
in
dec
sub
call
js
jecxz
mov
jg
xlat
pop
in
push
ja
cs
mov
rcr
movl
inc
lock
add
adc
imul
fbstp
in
subl
or
or
lea
in
movsb
and
loop
dec
xorl
call
jmp
push
shll
fwait
mov
cltd
in
cld
shrb
pop
aad
dec
jb
mov
int
jo
xor
push
mov
filds
ret
ret
mov
pop
shrb
xlat
mov
repz
add
dec
imul
ss
shll
cmp
mov
cmpsl
andb
imul
cmp
pusha
mov
cli
test
clc
lret
pushf
push
fs
lds
lods
scas
icebp
sarl
ret
inc
dec
mov
aam
pop
sub
sub
in
icebp
arpl
cmp
rol
mov
and
adc
adc
mov
and
je
push
outsl
xchg
fisttps
pusha
cwtl
mov
push
xlat
dec
sbb
hlt
push
fwait
lea
out
push
lds
or
xor
out
pop
sbb
or
pop
mov
jo
push
sub
aam
mov
fnstsw
lret
shlb
mov
jle
jge
jmp
aaa
out
push
inc
fnstsw
arpl
negb
xchg
fmul
xchg
jmp
xchg
aam
mov
in
lcall
add
inc
or
sub
mov
imul
inc
jmp
pop
pusha
sarl
mov
sbb
add
or
jmp
xchg
insl
sub
pop
ljmp
cs
mov
and
push
cmpxchg
push
cmp
fcmovnu
xor
daa
loop
adc
dec
push
or
xchg
aad
mov
in
imulb
push
xor
inc
jg
dec
xor
inc
inc
jecxz
and
pusha
xor
pop
fstl
in
and
bound
arpl
test
and
and
mov
jl
or
fcom
cmp
cmp
xchg
push
or
mov
dec
inc
adc
lahf
ja
xor
cmp
xchg
bound
xchg
sbb
lret
in
stos
mov
cwtl
xlat
orb
mov
dec
lods
outsb
sarl
cld
xchg
add
enter
les
mov
jmp
lds
pop
popf
mov
add
rol
hlt
aaa
stos
stos
push
fstpl
in
fldl
aad
inc
push
add
xor
clc
xchg
fsubl
jb
cmp
push
cld
hlt
dec
pop
sub
mov
or
divl
jmp
mov
cmpl
xchg
cmp
dec
mov
bswap
ffreep
add
dec
rcl
mov
xlat
mov
std
add
fldcw
in
jge
inc
mov
jmp
mov
mov
mov
mov
scas
mov
repz
xor
out
dec
adc
jnp
or
pop
xchg
xchg
mov
scas
or
data16
cmp
sub
cs
adc
jle,pn
inc
jmp
cwtl
loopne
cmp
mov
mov
mov
lahf
shll
pop
jle
ss
nopl
in
inc
pop
repnz
mov
dec
pop
push
or
push
imul
jecxz
ss
sub
ret
das
or
lods
sub
adc
and
sub
rorb
add
or
inc
sub
pop
enter
ret
aam
js
iret
lods
fcoml
into
xlat
inc
js
cwtl
cmp
jns
sbb
sub
ja
push
sbb
cmp
inc
xchg
mov
add
es
inc
inc
clc
imul
int
push
add
dec
mov
popf
ljmp
pop
sbb
flds
popa
lods
lods
push
sbb
sbb
inc
stos
mov
daa
push
sub
add
fsubrs
mov
xor
mul
aad
enter
mov
inc
aam
nop
xchg
inc
stos
je
mov
movsl
sbb
add
jp
nop
xchg
popa
sbb
out
jg
call
stos
fnstcw
push
xchg
outsb
shlb
loopne
cltd
xchg
cmp
int
pop
jb
test
and
leave
popa
pop
fadds
ds
and
mov
test
pusha
add
xor
and
push
add
call
xchg
jmp
not
or
and
daa
ret
outsb
jecxz
or
push
into
inc
shrb
xlat
mov
nop
ficompl
fdivs
loope
filds
xchg
mov
xchg
xchg
jnp
pushf
das
js
lods
cmp
push
mov
int3
in
add
mov
ret
insl
inc
add
test
mov
inc
add
xor
add
mov
out
sti
and
sub
out
into
pop
xchg
inc
aaa
jg
inc
sub
xchg
sub
fxch
xchg
loop
mov
mov
mov
stos
aam
movzwl
xchg
daa
sbb
sbb
int
ljmp
pusha
loop
stos
mov
shl
not
mov
fs
popl
sbb
mov
and
push
xchg
ljmp
mov
loop
sub
sub
mov
push
adc
push
xor
inc
xor
lret
bnd
call
cltd
jl
popf
icebp
inc
daa
mov
dec
aam
adc
test
push
mov
xor
mov
cmp
xor
and
and
stos
adc
dec
pusha
test
lcall
in
mov
pop
pop
mov
pop
subl
test
ljmp
test
adc
push
enter
sarl
sbb
iret
repz
sbb
adc
pop
jnp
shlb
cmp
inc
inc
push
sub
ret
or
cli
aam
pop
mov
cli
push
dec
sar
outsl
add
insl
jns
xlat
pop
je
lcall
jae
popa
loopne
jl
in
push
push
inc
ficompl
mov
xchg
sub
pop
sar
stos
inc
orb
mov
or
leave
jns
and
es
mov
dec
push
gs
sub
cmpsb
pushf
cld
les
and
add
xor
loop
and
popf
sub
or
sbb
ss
adc
out
inc
inc
int
lods
sbb
movsl
mov
aas
dec
loop
dec
insb
dec
ljmp
mov
xchg
push
xor
jo
cs
push
jae
dec
fs
push
stos
sub
nop
inc
in
lods
mov
jp
in
xor
je
jp
push
cmp
aad
adc
and
cmp
add
mov
mov
dec
inc
jo
inc
enter
bound
enter
sbb
xor
dec
cld
out
push
gs
push
ja
dec
cmpsb
xchg
fidivs
mov
aad
xlat
adc
sbb
or
in
jno
ret
mov
repnz
xor
add
mov
add
xchg
in
mov
xlat
pop
and
sahf
fcmovnu
addr16
rolb
dec
lea
fisttpl
aaa
jae
pop
jmp
or
adc
jecxz
sub
in
testl
mov
push
arpl
ss
test
xor
rorb
clc
xchg
mov
rclb
mov
jae
pop
xor
insb
cltd
in
xchg
jecxz
popa
lods
mov
or
jne
mov
cli
movsl
xlat
mov
pushf
push
mov
sub
movsb
push
ss
mov
or
out
mov
pop
pushf
push
jp
repz
test
stos
push
push
outsb
sti
data16
ret
fimull
sub
push
pop
mov
idiv
jl
xlat
in
call
cmp
dec
dec
inc
cs
sub
pop
lods
cli
rclb
cwtl
push
iret
ret
sub
pop
mov
add
addr16
mov
outsl
gs
sub
sti
popa
test
xlat
inc
cmp
rcrl
out
mov
jae
sub
loope
jp
mov
mov
rclb
mov
ret
xlat
loop
dec
inc
stos
notb
add
jecxz
jae
lret
shrb
adc
cmp
scas
es
add
pusha
push
mov
push
hlt
xchg
cmp
fdivrs
lcall
rolb
mov
pop
and
cmp
mul
mov
stos
pop
mov
adc
inc
ret
mov
jnp
out
adc
push
and
fstpt
sub
or
mul
cmc
fcoml
fnstsw
loopne
test
pop
push
cmp
rcll
add
inc
push
into
xor
mov
repz
xchg
rcll
rcl
idiv
or
mul
mov
inc
inc
pop
call
out
inc
testl
push
push
cs
inc
stos
loopne
and
push
aas
adc
cld
mov
dec
cld
cwtl
ret
and
fisubl
and
pusha
adc
lods
fwait
int3
xlat
aam
enter
mov
xchg
cs
sbb
add
sub
popa
lds
pop
fs
push
call
jo
aas
xchg
push
xchg
xlat
push
iret
lret
cwtl
mov
dec
inc
xchg
das
int
stos
lret
dec
add
subb
mov
jl
jno
nop
jp
roll
mov
xchg
decb
test
mov
jbe
lcall
sbb
adc
inc
or
sub
call
aad
adc
cmp
cmpsl
test
scas
dec
aam
pop
out
or
insb
xlat
sbb
sub
or
xlat
shlb
xchg
xor
lret
in
loopne
lock
mov
pop
enter
adc
imul
int
xchg
into
cmp
imul
push
int3
pop
out
fsubrl
pop
or
and
and
mov
jnp
imul
cmp
test
or
mov
test
fs
sbb
mov
jns
pushf
stos
mov
jecxz
fidivl
dec
mov
mov
aam
add
out
test
aad
cmp
enter
push
dec
adc
push
clc
cmc
jge
pop
jb
mov
inc
inc
sbb
fwait
cmp
mov
jns
and
rcrb
test
sub
jae
nop
dec
imul
push
mov
or
xchg
or
cmpsb
push
dec
mov
stc
sbbl
scas
cs
pop
inc
jl
and
dec
sbb
call
pushf
lds
pop
push
xor
jns
mov
das
push
jo
mov
mov
push
xchg
cli
add
jb
mov
ret
mov
iret
stos
pop
dec
enter
lret
fs
xor
dec
jnp
cld
jnp
or
sbb
repnz
movsb
lcall
jnp
outsb
xor
pop
rcll
cmp
xchg
into
aaa
mov
cwtl
jo
xor
inc
mov
arpl
bound
mov
clc
aad
jbe
loope
stc
pop
xor
or
jecxz
call
sbbb
mov
pop
pop
aas
lcall
movaps
xor
jmp
daa
in
xor
js
mov
adc
test
sbb
jmp
push
pop
adc
in
fwait
push
popl
lds
jecxz
dec
imul
outsl
mov
pop
push
mov
sbb
cmpl
mov
or
jl
adc
rorl
add
insb
arpl
insb
movsl
pushf
pop
fisttpl
cld
imul
ficomps
pop
aaa
ret
mov
pop
pop
add
cltd
push
jmp
sub
mov
add
cs
ret
lret
sar
sbb
mov
adc
xor
fmuls
stc
sbb
scas
in
cli
popl
ss
mov
mov
add
rol
xor
push
pop
add
loope
cmpsl
dec
fdivrp
in
xor
push
pop
xchg
cli
dec
movsbl
cld
sub
cltd
or
testl
dec
add
pusha
icebp
adc
out
xchg
xchg
call
hlt
or
cld
scas
nop
jecxz
adc
sub
mov
cmp
mov
in
inc
cmp
inc
ss
sbb
dec
lahf
arpl
jno
xor
test
sub
or
push
xor
jg
loope
mov
jecxz
sub
jle
mov
les
add
ss
or
inc
jnp
popf
mov
nop
xor
xchg
movsb
xchg
pop
inc
popf
push
add
dec
dec
ds
adc
sbb
mov
pop
out
rolb
test
test
cld
xor
nop
imul
mov
ja
mov
dec
cmp
cmp
leave
dec
add
ret
push
add
xor
xor
push
adc
aad
add
hlt
dec
mov
sub
xchg
push
mov
push
push
shlb
mov
or
fsubl
push
js
ds
pop
or
movsb
sbb
out
dec
push
test
scas
cmp
adcl
in
rolb
jmp
push
sets
pop
fisubs
jno
dec
lret
andb
fs
jnp
data16
in
into
rcrb
cli
out
sub
mov
pop
pop
xchg
and
cmp
sub
fdivrl
xor
jp
pop
sub
clc
daa
les
dec
lds
inc
adc
scas
inc
sub
cmc
out
xor
test
pop
or
push
fwait
mov
arpl
shll
out
fstl
adc
jns
push
in
fcoms
dec
sti
cmpsl
in
ds
jl
push
in
shrb
mov
test
dec
outsb
arpl
pushl
ficomps
icebp
test
dec
xchg
sub
mov
fstps
fidivrs
mov
pop
cmp
mov
les
int3
xchg
aaa
xchg
in
mov
daa
sub
clc
std
push
or
orb
push
mov
mov
out
add
lahf
dec
sub
seto
fistps
xchg
xlat
negl
cmp
sbb
mov
fistps
push
test
pushf
or
inc
fldcw
popa
adc
add
leave
pop
test
xor
cwtl
orb
outsb
jge
dec
sbb
dec
cli
push
outsl
push
call
sub
sahf
push
rorl
cltd
inc
and
cmp
jge
jp
cmpsl
or
or
insb
pop
xor
mov
inc
cwtl
pop
es
stc
js
pop
inc
nopl
xor
int
mov
sub
loop
outsl
inc
sbb
xor
imul
hlt
jno
jge
add
and
xchg
add
sub
sub
mov
ficomps
lahf
fstpl
cmp
fdivrs
mov
sub
out
lcall
mov
mov
pop
jecxz
add
call
imul
popf
mov
dec
test
mov
ss
in
mov
scas
xchg
insb
jle
adc
mov
mov
add
sbb
js
dec
push
jg
out
xor
idiv
xor
pushf
pop
jb
mov
add
mov
xor
adc
cmpsl
pop
stos
push
lods
jae
push
pop
inc
icebp
testl
push
pop
mov
ret
push
sub
insb
cmc
repnz
cmp
in
imul
cmpb
jge
int3
inc
frstor
mov
repnz
sbb
pushf
shll
mov
inc
fnstcw
sti
divl
test
out
adc
ja
jecxz
je
mov
aad
subb
push
add
mov
iret
sub
pop
sti
and
rorb
shr
adc
cmp
pop
data16
adc
pop
jns
rclb
loope
xchg
lods
and
inc
aam
int
xor
push
jne
scas
insl
sbb
and
push
int
mov
mov
xchg
bound
jne
dec
pop
or
dec
cmc
add
fs
ljmp
pop
add
dec
in
sbb
aas
push
mov
test
int
stc
lods
push
inc
subb
push
inc
sbb
lds
mov
bnd
testl
inc
lds
jge
call
cmp
pop
sub
cmp
mov
adc
push
rcrl
push
notb
mov
cmp
insb
inc
push
xchg
or
pop
dec
arpl
or
and
pop
or
mov
lods
sbb
into
and
sub
mov
fbstp
adc
lret
and
les
xor
xor
fmuls
jnp
fisubrs
loopne
xor
or
fsubs
inc
or
xchg
xor
sub
je
jmp
mov
jle
xor
arpl
and
jmp
xchg
and
sub
xchg
fidivrs
divb
jl,pt
shlb
inc
je
xchg
cmc
xchg
data16
mov
sbb
and
jmp
rorl
sub
mov
fcmovne
imul
int3
adc
test
cmc
insb
pop
pushf
pusha
mov
xchg
xchg
inc
cmpsl
xchg
js
add
in
dec
sub
jle
dec
cmpsl
mov
shlb
mov
mov
ss
sub
aaa
mov
cmp
jbe
pop
xchg
sahf
test
sti
cmp
testw
mov
std
outsl
inc
scas
das
xor
inc
inc
loopne
sub
popf
jo
jne
mov
lret
xchg
jnp
dec
mov
scas
mov
mov
lds
push
in
repnz
or
shlb
sbb
hlt
xchg
sarl
pop
jl
scas
stos
cli
ja
jmp
mov
lods
lock
dec
les
sub
mov
or
adc
lods
cmp
and
cmp
pop
dec
push
pop
mov
or
negb
lret
xchg
fwait
shl
stos
jmp
push
sbb
je
jg
jle
mov
mov
mov
dec
xor
push
sbb
mov
add
dec
sbb
push
repnz
add
jo
cmpsl
cmpsb
cli
mov
out
fistpl
out
pop
in
push
mov
addb
loope
mov
xlat
mov
adc
jle
sbb
jbe
mov
push
xchg
out
enter
mov
pop
ret
enter
stos
les
cli
incl
xor
jno
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
dec
mov
and
pop
jl
add
dec
cmp
fistpl
jp
jecxz
test
push
fistpll
pop
out
inc
and
or
js
jb
push
test
mov
mov
enter
push
fs
or
pop
mov
pop
push
aam
ficompl
xor
xchg
or
mov
jecxz
mov
pop
inc
pop
or
jle
pop
loop
mov
push
sbb
mov
jmp
xchg
outsl
push
mov
clc
enter
pop
sbb
test
xor
push
and
rorl
pop
push
popa
loope
pop
jmp
mov
gs
cmpsl
cmp
xchg
ja
or
cmc
cld
jle
std
or
cmp
pop
sahf
mov
push
push
imul
and
movsl
cmp
loope
jp
sbb
dec
int
rorl
fwait
dec
cmp
ret
xor
jno
scas
jmp
push
aad
jmp
sbb
vpcmpgtd
jp
lods
stos
fs
dec
sub
ds
mov
or
pop
jmp
push
outsl
cmp
mov
pushf
test
ljmp
jp
mov
outsl
sub
outsb
lods
mov
test
xchg
jo
cmp
xchg
push
push
pop
fld
aam
loopne
outsb
xchg
jnp
insl
loop
xchg
and
jecxz
aaa
in
push
dec
xorl
add
cmp
mov
fwait
pop
ss
test
mov
fiadds
adc
sbb
or
pop
fists
cmc
sbb
xchg
mov
cmpsb
iret
xchg
mov
and
pop
mov
sub
pop
inc
mov
adc
and
iret
jg
sbb
mov
shlb
adc
mov
das
int3
dec
les
daa
dec
xor
ss
cltd
mov
lods
cmpsb
inc
imull
mov
and
push
mov
pop
popf
mov
aas
sbb
gs
aad
add
test
pop
leave
mov
loope
shlb
aad
cmp
xchg
cli
sub
outsl
dec
arpl
repz
jo
lods
push
mov
inc
into
cli
inc
or
and
ds
jno
cmp
mov
cmp
sub
sbb
dec
or
cmp
sbb
mov
cwtl
call
sub
lds
push
jo
push
mov
push
sti
cmp
in
jae
sub
negl
es
cmp
inc
enter
xorl
adc
jmp
decb
and
js
push
out
movsb
jp
and
aaa
sbb
xor
xor
add
lods
and
movsl
mul
pop
popf
icebp
lcall
call
adc
mov
xchg
pop
dec
push
mov
lea
fisubs
cmp
loopne
imul
jnp
scas
and
mov
sbb
mov
popf
sti
cld
out
fs
iret
jne
pop
les
aam
mov
sti
jmp
pop
sbb
je
into
add
add
insb
imul
adc
push
cmp
js
jno,pn
jae
dec
addr16
cmpsb
cmpsb
and
lret
lcall
mov
out
cmp
imul
mov
addr16
aaa
mov
or
mov
insl
push
stos
or
loopne
mov
pop
jg
clc
sub
dec
add
rolb
loope
cli
out
repnz
in
mov
cwtl
sti
data16
vpunpcklqdq
mov
cmpsb
shrl
fs
pop
mov
cmp
aad
adc
sub
dec
add
idivl
popf
sbbl
push
rcrl
pop
outsl
icebp
pop
mov
cmp
mov
fstp
fwait
mov
out
sbb
fidivs
repnz
push
sbb
cmp
jb
mov
mov
mov
inc
je
loopne
test
in
sub
pop
ljmp
inc
icebp
stos
pop
cld
fdivs
dec
icebp
aam
jmp
xchg
fisubs
cmp
adc
lock
push
inc
or
mov
out
mov
iret
xor
and
shlb
nop
mov
popf
sub
pop
add
add
jne
or
int3
into
or
push
outsb
add
movsl
xor
and
lret
xor
test
mov
cmp
push
xor
orl
xlat
push
fs
out
fsubs
or
jne
mov
mov
pop
out
sar
fwait
lahf
xchg
pop
pop
xor
les
dec
test
adc
sti
xor
mov
add
popa
push
mov
int3
stos
xchg
icebp
sti
sub
ss
in
subl
push
push
lock
dec
mov
sti
jmp
mov
mov
jl
clc
stos
pop
adc
and
pop
and
pop
jle
add
fwait
in
jb
xor
add
and
fdivr
test
jb
imul
sbb
adc
daa
or
notl
and
fstps
and
or
push
xchg
sub
psubsw
ret
pusha
sarl
cmp
cmp
xchg
fwait
mov
lock
xchg
imul
push
push
sbb
lea
push
fisttps
icebp
cmp
pop
jp
mov
rcl
and
lea
cmp
pop
enter
pop
push
lea
mov
jbe
movsb
popa
rcrl
jbe
or
leave
call
in
dec
push
test
cmp
xor
jmp
out
lret
fcmovb
movsb
les
call
xchg
sbb
pop
cmp
ret
loopne
aaa
mov
pop
inc
js
pushf
loop
jge
and
inc
inc
shl
adc
shrl
add
leave
ficoml
iret
dec
mov
and
cmp
mov
fimull
pop
adc
lcall
and
pop
loop
aad
cltd
push
iret
es
daa
call
mov
pushf
lcall
inc
mov
ret
mov
jmp
jp
mov
sbb
mov
xlat
negl
mov
xchg
daa
stos
cmpsl
dec
rolb
fiaddl
mov
jge
bound
mov
adc
pop
imul
dec
push
push
sub
data16
testb
mov
inc
mov
jae
roll
vcvtpd2psy
les
test
popa
cmp
es
xchg
lods
mov
mov
pop
pop
pop
btr
lcall
jno
and
and
xorps
jns
mov
test
lods
add
xor
ffreep
and
mov
sbb
bound
add
xor
pop
xlat
loopne
sub
adc
xor
and
xchg
xorb
imul
mov
lret
add
jb
and
xor
mov
dec
xchg
mov
push
comiss
mov
jecxz
mov
test
jne
out
std
out
pop
adc
psubusb
lea
and
cmp
mov
aas
push
sti
xchg
push
sub
lods
adc
out
arpl
sub
shlb
aad
shlb
mov
jo
add
cld
push
arpl
mov
idiv
movsl
fistpl
inc
fsubrl
and
mov
jo
loope
mov
lods
and
push
or
dec
mov
jae
push
std
xchg
xchg
pop
fwait
and
and
push
mov
cmp
repnz
sbb
repz
aas
cmp
cmpsb
sbb
xchg
jge
test
adc
rcr
dec
mov
mov
inc
inc
sahf
cwtl
jnp
pushf
dec
inc
xor
pop
movsl
sub
nop
es
cmpsb
dec
cmp
adc
sub
add
xlat
mov
cmp
pop
addr16
sahf
xor
mov
adc
out
pop
sarl
movsl
mov
mov
in
xor
loop
divb
mov
push
loope
pop
popa
or
call
and
aaa
mov
mov
jle
outsl
and
addr16
push
lea
lods
jae
movsl
testb
pushf
push
out
inc
js
fucomp
xchg
cmc
aad
fs
cs
aas
lock
fscale
pop
leave
or
dec
out
xchg
adc
pop
and
fistpll
dec
cmpsl
test
movsb
fdivs
xchg
sti
inc
pop
xor
push
inc
adc
negl
jnp
addl
sub
das
pop
icebp
jecxz
dec
inc
sbbl
int
lods
std
push
cmp
xchg
clc
outsb
imul
push
orl
adc
pop
pop
shlb
xor
or
xor
xlat
loop
stos
lods
test
addr16
cmc
jo
adc
push
int3
inc
mov
stos
sub
xchg
or
inc
xchg
dec
mov
pusha
in
jle
sbb
insl
mov
xchg
stos
je
add
fsubrp
dec
mov
jge
cmp
notl
nop
xchg
das
clc
add
loopne
mov
adc
push
pusha
in
cmpsl
repnz
ja
sbb
imul
xor
mov
push
and
icebp
push
sbb
cmpsb
inc
aas
ljmp
test
repz
mov
push
inc
or
lcall
cli
lds
arpl
push
jmp
sub
sbb
rcr
jns
mov
ret
jecxz
add
fwait
dec
and
hlt
fnstsw
ret
lods
add
std
std
inc
add
jb
enter
shll
adc
xchg
in
sarl
mov
xchg
out
push
inc
shlb
push
sub
or
pop
aas
sahf
lahf
cmpsb
sahf
or
mov
loope
gs
je
adc
sbb
dec
xchg
cmp
xchg
iret
mov
daa
cmp
dec
outsb
cs
fwait
clc
mov
dec
loop
jg
mov
push
mov
aaa
pushf
frstor
int
sub
sub
out
clc
mov
mov
mov
or
xlat
fs
add
push
mov
sub
add
fcomps
leave
inc
hlt
mov
hlt
imul
adc
pop
popf
rcr
test
rcll
mov
mov
inc
jge
mov
sbb
mov
and
sahf
or
lock
repz
push
xor
xchg
mov
sbb
push
and
jecxz
movsl
fwait
or
insb
or
je
repnz
test
jecxz
adc
mov
shll
sub
andb
addr16
or
cli
mov
jne
popa
jle
mov
stc
lods
add
dec
mov
ficoms
gs
outsl
movsb
mov
dec
pushf
and
cmp
push
inc
mov
mov
and
pop
sbb
fwait
rep
popf
inc
flds
repnz
rorl
xchg
and
lahf
leave
cmpsb
testl
mov
cmp
add
jno
pop
push
dec
ror
pop
jo
pop
ret
in
clc
fcmovu
fdiv
sub
mov
or
sub
dec
fdivs
pop
and
and
and
sbb
dec
or
pop
je
mov
add
add
fistpll
daa
mov
sbb
imul
mov
sub
lret
push
outsl
push
lock
cmp
js
sbb
jbe
in
inc
dec
into
in
rorb
add
sbb
shrl
fdivr
push
push
dec
test
sbb
lahf
xchg
dec
mov
lds
loope
jle
in
adc
call
mov
fbstp
test
push
lock
imulb
mov
jl
cmp
int3
mull
lods
enter
scas
cmp
adc
push
add
push
out
out
dec
push
xor
pop
es
mov
adc
rcrl
pop
sub
test
pusha
test
cmp
or
push
adc
fwait
pop
fucom
fwait
push
nop
jge
bound
add
mov
jns
out
mov
xchg
pushf
shrl
add
cmp
ljmp
ds
jne
mov
mov
ss
pop
rolb
hlt
int
add
stos
sbb
sub
push
sti
xor
or
dec
adcb
outsl
testl
jg
shrl
mov
aaa
pop
rcrb
xor
jmp
leave
imul
and
js
add
or
pusha
add
xor
sub
shlb
cmpsl
into
or
test
pop
test
jne
mov
jne
shr
pusha
or
fisttps
and
mov
mov
repz
sbb
cld
insl
shrb
mov
mov
loope
xlat
call
cwtl
ss
xor
or
jge
sub
es
sbb
outsb
loopne
out
adc
fs
call
cltd
jo
sbb
aas
xor
mov
fxch
mov
in
dec
inc
jae
inc
push
repz
cmc
cltd
outsb
or
call
movsl
lahf
scas
ss
sarl
adc
adc
rcrl
insb
cli
inc
cmpsb
jmp
insl
pop
imul
loop
fs
adc
dec
cs
nop
and
jmp
cltd
int3
cmp
jp
fnstsw
ljmp
adc
cwtl
repz
jecxz
repz
cs
xor
or
jge
and
mov
data16
sahf
outsl
fiaddl
stos
lea
add
push
push
gs
push
xchg
in
dec
cmpsl
pop
inc
sahf
inc
cli
mov
jmp
enter
clc
sub
push
sbb
xchg
sbb
lahf
cmp
push
pop
addr16
mov
xor
cmpsl
frstor
outsl
pop
loopne
pop
subb
stos
or
or
sahf
and
lret
iret
or
ficompl
pop
add
aas
inc
fs
push
pop
adc
shrb
cmpb
gs
stc
mov
lahf
mov
stc
sbb
push
sti
push
rcrl
arpl
pop
testl
pop
jp
movsb
mov
xor
out
lods
inc
inc
int
jp
test
pushf
dec
sahf
call
das
mov
scas
inc
leave
cmp
xor
mov
test
sub
push
jge
sbb
ja
shll
in
cmp
push
addr16
loop
gs
test
sub
xlat
out
and
pop
and
push
in
pop
aaa
imul
js
adc
dec
or
mov
dec
repnz
pop
fiaddl
mov
nop
sbb
pop
cld
jo
cs
stos
pushf
in
je
cmp
rolb
aam
mov
daa
xor
gs
xlat
pop
xchg
dec
daa
pop
adc
lods
or
xchg
pop
shll
sbb
pusha
mov
mov
outsl
push
scas
fisubl
xor
inc
ret
cld
adc
fs
cmp
das
std
or
mov
xor
jmp
sahf
xor
adc
dec
nop
cwtl
mov
pop
cmpb
xor
inc
aaa
push
int3
rcll
jnp
ror
xchg
jecxz
fisubs
orb
ret
imul
xor
sar
test
pop
add
icebp
and
les
mov
sbb
sbb
or
or
insl
enter
out
pusha
sbb
sub
enter
rorb
xlat
lret
mov
xchg
in
gs
mov
lods
mov
adc
mov
mov
push
test
push
dec
js
mov
and
sbb
in
xchg
gs
es
out
outsl
dec
sub
adc
into
pop
and
xchg
fadds
sub
outsb
cs
xor
jb
out
shll
mov
stos
inc
in
push
aam
cmp
mov
pop
fwait
icebp
adc
std
call
xor
xrelease
or
fs
cmovl
and
int3
fmull
rcrl
mov
ljmp
add
in
push
xor
or
add
xor
push
cmp
roll
mov
or
fidivrl
aam
xor
repnz
and
push
pop
shlb
lods
inc
pop
movsb
insb
push
dec
lahf
pop
repz
or
mov
and
popa
inc
loope
or
fildl
jp
lds
ss
add
mov
sub
cmp
mov
out
out
pop
mov
or
or
push
loop,pt
pop
or
mov
pop
lock
cltd
loopne
inc
outsb
into
mov
inc
jns
stos
mov
ret
mov
mov
mov
jecxz
pop
and
insb
imul
outsb
xor
mov
cmpsl
mov
jle
mov
adc
fcoms
xchg
insl
notb
xlat
pop
add
rolb
jne
adc
mov
jno
mov
mov
rolb
cmp
inc
mov
fmul
xor
inc
xor
xchg
jp
dec
sti
je
pop
push
xchg
pop
pop
shll
adc
out
in
in
cld
jb
push
out
jecxz
xchg
lods
daa
inc
fisubs
fdiv
lock
dec
test
and
mov
cwtl
rcrl
xlat
or
imul
push
aaa
push
cmp
ret
or
push
ja
cmc
xchg
add
cmp
test
ret
fsubs
inc
rorl
in
push
inc
leave
dec
leave
mov
pop
cld
loopne
cmp
inc
and
fnstsw
mov
mov
and
adc
pusha
mov
mov
addb
gs
ficoms
movsl
mov
xor
mov
jp
dec
push
fs
incl
mov
cmc
inc
shrb
shl
mov
inc
push
mov
sbb
ret
jns
inc
std
mov
xor
js
sbb
mov
cmc
lahf
fnsave
test
adc
and
ljmp
rcll
popa
mov
pop
cmp
cmpsl
push
fs
sub
std
inc
lock
cmpsb
es
mov
jae
lods
lods
or
mov
rol
icebp
js
push
repz
and
sahf
je
fmull
lods
mov
xchg
sahf
dec
mov
gs
jl
push
xor
or
data16
shll
cwtl
dec
cmp
fwait
xchg
bnd
lock
inc
jb
gs
sub
mov
gs
xchg
jno
dec
or
lea
and
inc
out
mov
push
aam
imulb
mov
and
sti
ds
sti
and
cltd
in
jb
outsb
mov
or
jmp
inc
adc
xrelease
dec
add
test
hlt
fbld
sub
test
insl
paddq
outsl
push
jl
or
xchg
pop
cmpsb
sahf
dec
sub
jmp
in
in
inc
inc
lret
sub
mov
xor
imul
ds
push
jb
cmp
aad
jmp
push
pop
cmpsl
xchg
ret
lods
cmp
xchg
jae
loop
outsb
xor
xchg
cmp
nop
ret
jmp
push
and
xor
dec
sub
push
pushf
push
pusha
into
mov
in
mov
pcmpgtb
clc
dec
mov
mov
add
movsb
frstor
xchg
xchg
bound
ret
cmp
lahf
fidivs
xor
rol
pop
sub
stos
push
push
insl
mov
add
mov
xchg
cs
aam
mov
clc
inc
mov
pop
mov
pop
cs
mov
cmpsl
sbb
jbe
lret
test
or
pusha
lods
jle
arpl
stos
dec
lcall
pop
pop
jg
sti
stc
into
jg
pushl
xlat
in
shr
pop
ss
stc
add
test
xchg
sbb
lock
lahf
push
xchg
rcrl
dec
fsts
sub
ljmp
leave
cmpsl
add
or
repnz
sub
mov
orb
dec
add
mov
dec
jbe
adc
pop
stos
mov
outsl
sbb
push
push
mov
or
xor
mov
cli
popf
pop
xlat
mov
dec
push
shl
xor
cld
xor
mov
dec
fistpl
inc
xchg
mov
sbb
sarl
dec
sbb
movsb
inc
nop
data16
leave
jae
stos
inc
data16
ja
sub
in
mov
mov
push
fistpll
popf
adc
xor
sbb
leave
add
mov
or
scas
lcall
jg
xor
jecxz
add
sti
outsb
ja
mov
fcomi
xchg
orl
in
push
fcoml
and
inc
jmp
push
clc
lock
pop
inc
out
popf
loopne
or
dec
ja
sbb
lcall
jo
adc
stos
jbe
dec
dec
out
outsb
lock
pop
jmp
ss
test
sbb
mov
shrb
sub
notl
adc
inc
cmc
mov
lret
cmp
pop
out
lods
clc
and
les
mov
mov
xchg
daa
int3
iret
test
dec
pop
test
and
mov
out
divl
iret
adc
push
sbb
ss
sti
mov
add
cltd
pop
pop
loopne
ret
subl
pop
and
sub
jge
mov
out
es
icebp
in
fisttpl
movsl
enter
ret
sbb
out
outsb
scas
add
sbb
test
mov
xchg
mov
popf
push
mov
lods
push
xchg
mov
ljmp
test
popa
xor
fbstp
sbb
fld1
push
cld
sbb
lods
cmp
fcompl
or
jmp
pusha
xor
out
dec
icebp
jnp
fistps
int3
andl
push
sub
lea
outsl
inc
repz
and
stc
xor
div
in
push
mov
pushf
je
popl
cmc
adc
xchg
js
lods
xchg
add
lds
push
jae
jae,pn
or
sbb
pop
aas
movsl
jnp
out
imul
mov
jge
dec
aam
out
jle
and
cwtl
test
jnp
dec
loope
loop
mov
dec
scas
push
jmp
jle
jbe
sub
movsb
xor
js
cmpsl
push
ss
add
fildll
std
jo
sbb
leave
fwait
imul
pop
mov
jle
icebp
test
or
lahf
stc
ret
loop
inc
sub
imul
cltd
dec
ds
push
sub
adc
cmp
xor
jne
daa
std
adc
orb
in
sub
pop
mov
popa
das
sti
pop
icebp
sahf
out
dec
sub
cwtl
push
je
cld
pop
add
popa
sub
mov
iret
popf
xor
cmp
cmp
push
jo
jl
inc
lret
fnstenv
or
push
inc
bound
int
lret
jp
lock
sub
push
test
movsl
dec
xchg
add
cmp
mov
shlb
push
sub
repnz
and
cmc
cmp
sahf
into
sub
sbb
int
pop
shlb
mov
lret
and
fiaddl
xor
out
push
sub
repz
in
loope
push
xchg
mov
and
decl
leave
mov
mov
inc
sub
stc
notb
mov
stos
lahf
and
or
addr16
push
jb
mov
test
mov
and
pop
jae
inc
sbb
cld
adc
xchg
mov
aam
sbb
mov
push
adc
sbb
xchg
xor
jne
jns
insl
fmuls
mov
dec
dec
ret
in
movsb
fstpt
outsl
mov
out
sub
cli
jbe
mov
movb
push
cs
out
bound
notb
aam
dec
pop
icebp
cwtl
nop
mov
adc
ds
outsl
push
mov
and
inc
sub
roll
xor
enter
mov
mov
jae
hlt
repz
cmp
xchg
add
sti
gs
cld
rcrl
lcall
aad
jp
loope
sbb
stos
sbb
add
pop
rcrl
jecxz
dec
adc
fdivp
jae
pop
pushf
pop
mov
adc
and
sub
iret
mov
xchg
sub
jbe
fmull
fidivs
lods
int
ret
mov
testb
and
jl
jns
inc
test
mov
dec
ss
jge
cmp
mov
jb
daa
imul
cmp
in
lods
adc
dec
add
sbb
stos
cltd
inc
lret
aas
jge
xor
sbb
add
das
push
sub
push
jp
imul
push
in
sub
push
jae
int3
les
mov
and
shlb
cmp
or
cld
mov
scas
lods
and
pop
shr
dec
lcall
pop
xor
mov
and
jmp
sbb
in
jle
jecxz
shr
push
cmovnp
fwait
pop
loope
int3
das
adc
mov
imul
inc
push
or
xchg
sub
jno
or
add
pop
pop
test
mov
cmp
or
mov
cs
adc
imul
into
dec
lds
sub
sub
aaa
fmul
push
rcrl
aas
fsubl
gs
dec
xor
movb
add
in
xchg
mov
test
push
hlt
xchg
and
or
xchg
adc
es
iret
sub
mov
fs
add
lods
sbb
rclb
add
fcoml
fcoml
rclb
and
lds
jno
sbb
insl
add
jmp
xor
mov
cmp
inc
call
jnp
ja
or
mov
and
cmp
pop
sbb
pop
pop
lock
repz
mov
fisubrl
dec
lea
mov
inc
pusha
mov
mov
sbb
stos
incb
cmc
gs
cmp
sbb
adc
fldcw
and
add
fwait
pop
jne
leave
push
add
push
call
ffree
stos
mov
dec
mov
xor
sub
cmp
push
cmp
sbb
mov
addr16
sbb
add
sahf
mov
ljmp
pop
es
insb
inc
ljmp
mov
mov
push
fstpt
mov
jb
mov
cli
into
mov
push
mov
or
pop
and
sarb
outsb
add
mov
jns
push
pusha
dec
xchg
pushf
mov
dec
and
nop
adc
popa
lcall
pusha
outsl
in
sub
push
sub
pop
jge
xchg
fmulp
roll
stos
mov
pusha
mov
mov
roll
test
inc
mov
jnp
jle
push
xor
lahf
push
lods
imul
push
adc
int3
dec
mov
cmc
or
jne
xchg
call
cmp
inc
aaa
dec
sub
loopne
inc
out
pop
gs
sbb
inc
mov
stos
fiadds
loop
push
sub
cwtl
sbb
add
xlat
das
mov
stos
xchg
mov
push
cmp
pop
inc
das
mov
push
into
xchg
xor
sbb
icebp
insl
adc
fisubs
jp
imul
add
out
aas
and
int3
pop
popa
inc
pop
insb
adc
mov
push
test
sbb
push
xlat
inc
sti
sahf
test
repnz
add
pushf
xor
xchg
add
xchg
outsl
dec
push
sti
inc
fs
mov
arpl
aam
andl
mov
icebp
dec
or
or
mov
sti
dec
lock
and
xchg
xor
das
sbb
mov
sti
xor
and
clc
in
add
pop
ficompl
add
mov
rolb
in
dec
aad
lods
mov
repz
push
leave
cmp
ljmp
add
lock
ja
xor
movsb
adc
imul
lahf
or
js
inc
cmpsl
addr16
mov
xor
fcoms
jnp
and
in
or
test
jns
pop
dec
push
sbb
scas
loop
xchg
push
or
cltd
add
mov
mov
adc
ja
and
dec
or
dec
mov
inc
inc
add
fisubrs
mov
sbb
jp
rcrl
movsb
lcall
sbb
std
push
push
mov
fildl
and
push
xchg
cmpsb
sub
add
or
add
fwait
mov
imul
add
mov
int
add
clc
sub
int
stos
xchg
pop
test
hlt
es
out
push
cmp
sbb
imul
pop
xchg
sub
in
hlt
xcrypt-ofb
cmpsl
in
stos
pop
ja
cmc
jno
in
push
enter
xor
jge
lods
notl
pop
lret
sbb
mov
sbb
cmp
mov
js
adcb
lret
dec
loope
pop
jbe
in
test
aad
and
out
jg
jbe,pn
jno
shrb
inc
xor
fwait
push
or
lds
cltd
xchg
arpl
loop
incl
adc
push
cs
rol
jge
lcall
jecxz
push
pusha
fdiv
rcl
xchg
and
pusha
adc
out
cmp
xchg
cwtl
fdivp
sub
das
stc
nop
sbb
pushl
lahf
mov
cmp
and
test
and
stos
push
xor
hlt
xchg
cmpsl
jnp
adc
imul
xchg
iret
cmpsb
ss
jns
ret
mov
adc
mov
pushf
dec
pop
xlat
and
outsb
cmpsl
or
outsb
cmpsb
ja
inc
mov
ljmp
ja
add
out
in
xchg
mov
mov
sahf
push
inc
pushl
push
mov
mov
cwtl
shrl
cs
jle
jae
push
stc
cli
inc
mov
es
test
outsl
call
mov
dec
lahf
cmp
mov
add
icebp
xchg
mov
push
jp
loop
dec
gs
mov
testb
repz
cmpsl
pop
sub
mov
cld
jp
push
inc
pop
addr16
pushf
clc
xchg
rcr
stc
xor
repz
hlt
out
ret
mov
sub
incb
cmp
mov
jmp
mov
adc
daa
xchg
out
inc
add
pop
jns
sub
pop
or
ds
and
inc
pop
or
pop
sarl
jge
add
lods
sub
aaa
aam
or
sbb
mov
pop
fwait
jle
aas
jns
pop
outsl
movb
xchg
sbb
cmpsb
inc
imul
sbb
adc
pushf
int
xchg
in
arpl
pusha
out
imul
test
sahf
add
dec
mov
mov
push
adc
fldt
pushf
sub
das
popa
test
aas
add
jb
imul
mov
fs
mov
loop
adc
adc
sub
push
addr16
pop
sti
jmp
sub
xchg
or
punpckhwd
mull
clc
repnz
mov
jo
push
sbb
lea
pusha
rol
push
flds
inc
add
mov
xor
or
cli
fdivrs
cmp
add
subl
in
arpl
jge
mov
call
es
ret
rclb
mov
jecxz
out
cmp
mov
int3
sbb
adc
mov
in
sbb
inc
fbstp
sbb
mov
mov
pop
je
insl
cwtd
mov
mov
out
test
fcomp
cli
scas
xor
pop
bound
jmp
add
sbb
push
adc
pop
jge
push
leave
imul
jne
js
shl
xor
add
sub
stos
inc
cs
or
shrl
pop
xchg
icebp
leave
fs
pmulhuw
inc
push
shrb
xor
dec
dec
mov
fbstp
sub
mov
insb
sub
mov
sub
loop
ret
outsb
xor
fwait
xlat
mov
dec
int3
test
adc
or
aad
lcall
pop
cmp
ja
lock
arpl
call
out
inc
pop
xor
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
cmp
daa
push
jl
pop
pop
jl
sub
stc
sbb
mov
in
mov
xor
jl
xchg
or
in
push
int3
pop
inc
in
jle
mov
and
sahf
jp
push
mov
push
enter
sub
imul
cmc
sahf
lea
mov
inc
mov
mov
xchg
rcrb
sbb
mov
rorl
int3
jge
ljmp
add
add
movb
cwtl
clc
movsb
push
cmp
orb
cmp
das
inc
xor
jbe
jecxz
orb
mov
xlat
sub
andb
push
mov
aad
push
test
jg
pop
pop
push
jp
jb
stos
imul
sbb
leave
fucom
xor
data16
mov
jmp
fs
bound
jb
and
cs
out
mov
jno
push
pop
jl
sbb
popa
ss
sub
xchg
arpl
hlt
push
adc
rclb
fiaddl
and
cli
xchg
mov
dec
xchg
jns
rorb
out
cs
dec
mov
aaa
movlps
jg
push
mov
cld
loopne
test
add
sub
clc
push
mov
and
xlat
mov
inc
jo
negl
aaa
in
inc
mov
mov
inc
mov
cli
jo
push
imul
adc
push
ja
shl
aaa
lret
stos
mov
dec
lea
mov
add
xchg
jno
inc
sub
leave
pusha
xchg
into
xor
add
sbb
pop
pop
in
in
sbb
adc
insl
rcrb
cmp
push
sar
mov
stc
in
lcall
mov
insl
ss
sbb
pop
out
jle
fwait
xlat
push
xor
sti
sahf
andb
in
loopne
lock
fs
sbb
push
inc
sahf
xlat
mov
mov
lret
adc
aaa
insl
fadd
jge
pop
mov
xor
stos
mov
lock
pushf
jge
pop
xchg
add
mov
cmp
out
jae
in
sbb
jae
cmp
clc
mov
es
mov
adc
xor
push
mov
or
outsb
imul
lcall
adc
xor
push
test
cwtl
add
push
sub
or
daa
cmpb
xchg
lahf
stos
scas
mov
ja
pop
pop
xor
mov
cmp
jno
mov
addl
cld
push
pop
inc
push
push
andb
xchg
jns
xchg
pop
dec
mov
out
lods
mov
jae
insl
xchg
mov
add
jo
jge
pop
jae
sbbl
out
sub
lret
xchg
lret
int
loop
and
ret
pop
pop
lds
push
cmp
pop
pusha
mov
clc
out
sub
inc
adc
sbb
xchg
sti
add
adc
and
pop
ds
jnp
xor
sub
rcl
mov
mov
and
imul
xchg
mov
scas
out
es
imul
lods
stc
clc
bound
push
fsubrs
sbb
sbb
mov
xchg
or
inc
out
mov
and
adc
enter
aaa
push
xor
pop
js
enter
push
xor
shll
divl
imul
cmc
rcrb
rolb
cltd
sbb
push
mov
or
ret
mov
dec
push
push
lret
jecxz
xchg
test
mov
jae
cli
pushf
mov
or
push
loope
xchg
inc
mov
fdivs
pop
pop
inc
jae
sbb
sbb
repnz
rolb
pop
cld
xor
and
jnp
sbb
not
sub
and
lods
lods
sahf
outsb
xor
pop
cmp
or
scas
clc
mov
jle
dec
lcall
lcall
fstpt
pop
lret
push
in
scas
push
nop
test
fcmovne
cmp
clc
jb
movsl
add
in
lcall
stos
inc
imul
imul
inc
cmp
lds
adc
pop
arpl
cwtl
ds
rolb
imul
idivb
sti
push
fnstsw
insl
nop
cmp
push
sar
test
pushf
sub
xchg
cmp
add
xchg
stc
stos
fsubl
ret
repnz
lods
jle
cmpsl
stc
add
jno
in
jle
faddp
adc
jmp
and
cmpsl
out
out
sbb
cmp
mov
lret
daa
fistpl
test
lds
lods
jno
sbb
fsubp
xchg
outsl
stos
fsubl
out
mov
fisttpll
mov
xor
test
xchg
leave
aam
adc
enter
sbbl
scas
dec
mov
lods
xlat
loope
loope
lock
jns
rorl
adc
add
mov
mov
push
test
int
dec
into
popa
cmpsb
inc
mov
xchg
hlt
js
int
sbbb
xchg
test
or
mov
dec
scas
push
sub
fdivrs
sub
scas
dec
in
jecxz
xor
pop
mov
lds
mov
xchg
cmp
adc
push
data16
lcall
push
in
movsl
push
data16
sbb
cmp
in
popf
mov
adcl
imul
or
dec
test
pop
fists
mov
cld
sbb
ds
or
mov
pop
mov
hlt
imul
dec
repnz
repnz
mov
cmp
outsl
subb
jmp
popa
repz
lock
sbb
lret
stos
es
dec
insl
insl
add
shrb
out
std
jno
lret
mov
mov
lahf
out
pop
fisubl
lcall
sub
jmp
aad
mov
pop
iret
test
dec
inc
dec
mov
fnop
pop
push
scas
loopne
pop
test
mov
sbb
push
insl
loope
cltd
loop
lods
add
and
jnp
or
out
mov
xchg
push
sbb
push
into
mov
out
xor
push
idivl
in
add
out
add
mov
arpl
lcall
push
mov
push
out
cmpsb
hlt
das
lret
movsb
xlat
jno
inc
dec
je
cmpl
fldenv
mov
mov
mov
mov
push
push
outsl
or
mov
mov
sahf
testb
or
inc
aam
sti
pop
xchg
xchg
popf
jmp
fbld
ret
cmpsl
lahf
hlt
xor
mov
lret
sbb
enter
rcll
incb
jmp
dec
sahf
outsb
stc
xchg
es
shll
fwait
daa
xlat
loope
mov
xchg
mov
dec
push
mov
in
popa
cli
push
and
jmp
mov
sarb
add
lahf
cmp
and
out
ds
xlat
test
in
insl
cmp
loopne
inc
jecxz
pop
mov
xorb
shr
or
lds
imul
shrb
push
mov
mov
jno
ljmp
cmp
mov
cmpsb
cwtl
jae
out
mov
sti
fwait
repz
jno
adc
push
sarb
daa
inc
dec
xor
cwtl
out
shl
inc
hlt
or
outsl
push
and
fdivl
xchg
js
scas
mov
ja
pop
fsubl
adc
lea
loope
test
movsl
dec
aaa
sahf
mov
xlat
mov
and
mov
aaa
or
incl
mov
add
xor
hlt
std
mov
xchg
hlt
mov
mov
pop
shlb
mov
push
jns
rolb
dec
push
cmpsb
out
in
jno
in
loop
lcall
adc
dec
mov
sahf
xchg
or
xor
mov
call
mov
pop
pop
mov
les
sbb
lock
lret
sub
cli
je
rcrl
pop
imul
mov
cwtl
fs
fisttpl
bound
jae
mov
jno
int
lea
jb
pusha
fwait
push
jp
fs
push
and
cmp
xchg
fcoms
popa
ret
cmpsl
push
mov
leave
ret
add
mov
inc
in
push
mov
divb
add
xchg
push
xchg
jmp
adc
xchg
daa
iret
sbb
data16
aad
scas
xchg
ljmp
mov
in
popa
push
mov
mov
out
mull
js
inc
lret
and
daa
or
daa
sahf
push
std
mov
adc
adc
xchg
sarb
push
int
or
ds
push
ret
pop
cmp
stc
jg
adc
adc
mov
je
es
ljmp
enter
cmpsl
adc
mov
pop
stos
add
mov
push
fs
mov
sbb
jb
xchg
pop
insl
xchg
in
push
arpl
sbb
push
inc
xchg
icebp
sbb
pop
clc
lock
lcall
insl
sub
cmc
loop
lds
js
mov
inc
js
cmp
int3
fstpl
mov
add
mov
sbb
clc
scas
pop
nop
sub
xchg
jae
aas
shlb
lret
jno
dec
mov
xor
das
and
pop
insb
mov
es
dec
jl
xchg
fisubrs
sbbb
repnz
test
mov
push
mov
mov
inc
inc
fs
mov
inc
pop
hlt
push
in
xor
xchg
cmp
sti
arpl
pop
xchg
xor
push
ljmp
or
xchg
push
fidivrl
inc
inc
repnz
push
into
sub
xor
popa
push
xchg
js
stos
cmp
mov
push
push
cmp
push
mov
cmp
ds
mov
mov
rcrl
jne
jo
int
or
mov
push
das
push
call
jge
not
or
xchg
movsb
xchg
cmc
enter
push
outsl
fisubl
aad
out
cld
fadds
mov
add
iret
ja
out
or
push
sbb
xor
fstl
repz
push
ljmp
in
daa
pop
add
push
jge
add
pop
roll
cmp
scas
enter
mov
loope
notb
movsl
xor
mov
movsb
and
jecxz
loope
or
pop
mov
xor
into
test
jg
or
rcr
jmp
mov
jno
xchg
fiaddl
les
or
daa
or
sub
and
sbb
push
dec
sub
sbb
sbb
cmpsb
mov
dec
jp
mov
out
mov
dec
aaa
loope
arpl
cld
insl
add
fidivrs
dec
push
shl
and
add
ffree
sbb
cs
and
stos
sbb
push
mov
fcomp
pop
in
add
mov
inc
sahf
or
pop
and
rol
inc
sub
movsl
imul
xor
rorb
sbb
fisttpll
mov
cmpsb
pop
sub
stos
dec
push
imul
push
mov
or
pop
jo
stc
movzwl
mov
js
and
orb
mov
adc
and
bound
push
test
xchg
filds
mov
add
add
sahf
push
iret
lahf
xchg
out
xchg
pop
insb
je
out
mov
icebp
sahf
call
jle
dec
add
repz
adc
cwtl
jae
push
push
out
ficoml
xchg
es
xor
dec
cmpsb
xchg
iret
push
adc
sub
xor
sbb
aam
sbb
jp
push
xor
dec
lea
ficomps
jg
xchg
movsb
adc
add
push
flds
jb
enter
cmp
or
pop
dec
cli
jg
dec
add
fcoms
sub
jo
mov
addr16
ss
repnz
lock
daa
arpl
sbb
imul
mov
push
cs
stos
inc
or
sbb
push
lret
cs
lods
repz
nop
mov
push
movsb
lret
inc
aam
div
sbb
mov
ret
add
xchg
mov
std
adc
fdivr
mov
xchg
bound
cld
in
int
xor
mov
movsb
ss
xor
sub
divb
pop
in
mov
in
sti
pop
and
adc
sbb
and
sti
add
je
jp
cmp
fstpl
icebp
add
popa
xorb
call
adc
gs
repnz
mov
sbbb
pop
aas
cmp
movsl
cwtl
in
out
test
jns
push
cwtl
sub
jle
std
ficomps
loop
mov
fstl
adc
mov
imul
or
cwtl
test
jae
pop
outsl
push
cmp
dec
add
cmpsl
jg
xchg
gs
pop
add
out
cli
test
jnp
jmp
stos
mov
movsb
push
cmp
mov
cs
stos
repz
mov
andb
std
loope
xchg
repz
insb
test
daa
or
or
sub
cmc
fadds
movsl
xchg
xchg
test
and
mov
sti
icebp
xor
mov
inc
sbb
fstl
ret
fs
dec
jg
es
jnp
push
and
sbb
jle
movsl
roll
insl
inc
push
pop
sub
push
mov
fwait
sub
dec
cmp
dec
and
pushf
and
mov
mov
aam
subb
mov
xor
pop
mov
sbb
aaa
jno
mov
roll
imul
sbb
push
jo
pusha
dec
mov
inc
dec
or
push
btr
sarl
test
insl
in
and
push
aas
xchg
xor
push
rclb
sub
jb
cmp
xchg
mov
push
jge
xchg
cmp
mov
xchg
jae
bound
faddl
test
push
jmp
idiv
repnz
shll
sbb
daa
cmp
or
iret
pop
inc
iret
call
jnp
mov
jg
sub
lret
add
rclb
mov
mov
push
lcall
int3
lods
imul
fmulp
fs
sbb
lret
sbb
pop
in
fistps
inc
insb
pusha
loop
jns
ret
iret
cltd
lods
ja
and
outsb
sub
es
mov
jo
dec
push
pop
pop
jl
fcmovnu
in
test
mov
aam
dec
repz
mov
inc
inc
adc
lret
mov
ret
fwait
popf
shlb
xchg
in
adc
shl
test
mov
pop
pop
hlt
push
mov
xor
dec
mov
subl
sub
leave
dec
repz
xlat
xorb
inc
xchg
jbe
fwait
imul
inc
push
loop
gs
xchg
ret
inc
cmc
lcall
int3
test
pop
and
mov
push
fs
xlat
in
vunpcklps
in
mov
sub
push
shll
mov
std
inc
js
std
jl
adc
jmp
repz
jmp
add
repz
cmp
sub
fstps
nopl
cmp
xchg
add
pop
push
icebp
push
fwait
sbb
sub
int3
out
leave
sbb
out
mov
std
or
dec
sub
add
dec
sti
dec
sub
pop
sbb
mov
xor
mov
lock
cmpsb
xchg
lea
das
in
bound
cli
jge
add
mov
fsubrs
push
lods
outsb
mov
fiadds
jno
mov
jg
cld
fldt
mov
dec
fsubrs
jle
cmp
or
sbb
jae
sub
test
jae
call
movsl
sub
loop
dec
mov
lcall
cmpsb
das
cli
mov
sbb
push
and
ja
dec
jle
ud1
je
repnz
mov
pop
cmp
push
je
and
xchg
push
adc
xchg
dec
cli
pusha
xor
dec
les
je
clc
enter
in
mov
shl
pop
pop
js
std
aad
dec
push
mov
pop
fistps
xchg
add
jnp
mov
iret
mov
push
xor
sbb
inc
dec
xchg
fsubrl
inc
out
dec
fmulp
loop
xchg
call
test
inc
aas
inc
into
outsb
xchg
stc
testb
inc
mov
rcrb
in
aam
add
aaa
jle
sarb
std
pop
mov
ret
push
rorl
sbb
repnz
imul
pop
imul
popa
push
sub
hlt
push
jns
xor
pop
sub
fs
mov
loopne
or
ss
push
aad
jno
iret
lods
out
addr16
sub
push
cmpsb
mov
cmp
leave
das
test
and
pop
test
and
or
shlb
dec
sbb
mov
fwait
ja
jmp
add
add
jmp
xchg
repz
xor
push
dec
lock
std
fs
sbb
sub
pop
mov
jmp
dec
pop
xor
and
mov
fabs
popa
jns
and
sbb
push
gs
lds
fwait
adcl
dec
int3
dec
sub
sbb
xor
mov
pop
test
cli
testb
xabort
test
rorl
xor
sub
insl
add
sbb
lock
rorl
ja
imul
andb
test
imull
addb
insl
push
pop
pushf
mov
ss
fisttps
out
mov
mov
stc
ds
in
mov
enter
dec
or
xchg
addr16
fs
lods
loop
mov
enter
inc
shl
negb
add
pop
jmp
cmc
or
add
je
in
popf
mov
lahf
dec
adc
out
cmpsl
xor
stos
ljmp
out
hlt
cmp
ret
divl
nop
shl
and
add
loop
xchg
mov
or
jge
adc
xor
and
dec
es
lods
cmp
fisubs
pop
mov
cmp
ljmp
mov
jg
outsl
mov
bound
or
mov
sub
mov
push
xchg
decl
aad
push
jp
jle
mov
out
ror
add
andl
shrl
lods
fmuls
lods
or
sbb
xor
add
stos
jmp
cmpb
xor
fs
jmp
out
scas
nop
int3
imul
cs
leave
imul
pop
mov
mov
addr16
xor
lret
jge
leave
cmp
jno
cwtl
jle
je
push
jl
jae
pop
int3
enter
or
jl
addr16
sub
pop
pop
and
mov
dec
out
int
pop
imul
or
inc
add
repz
lahf
cld
adc
lret
adc
fsts
ret
xchg
lock
js
and
das
out
lcall
adcl
outsl
mov
ja
cmp
xor
add
int
jns
push
shl
repnz
mov
and
dec
push
or
xchg
iret
out
xor
clc
fsubl
sbb
fwait
and
add
ret
sub
xchg
pop
negb
ja
xchg
ret
stos
punpckhdq
dec
mov
test
push
rol
pop
loop
loop
pop
jns
test
ss
lods
add
add
inc
call
pop
xor
cmp
sbb
sub
into
stos
outsb
ret
push
mov
ja
sbb
sbb
fwait
repnz
add
sbb
push
repnz
mov
mov
cmp
sahf
and
mov
sbb
ret
sub
sub
mov
test
fidivl
add
xor
sbbb
sbb
bound
sub
dec
paddd
sbb
add
dec
push
sbb
cmpsb
addr16
xchg
sti
lock
roll
ret
pop
je
les
push
mov
pop
cmp
sbb
pop
jae
jge
xor
mov
adc
clc
aas
push
push
jo
inc
in
and
xorl
add
jle
in
push
xor
xchg
jmp
fidivl
pop
add
out
jmp
outsb
sbb
inc
fbld
and
sub
xor
sbb
lock
sbb
mov
cwtl
dec
cs
jo
repnz
bound
dec
into
test
mov
xor
jns
out
adc
test
insl
jge
push
ret
adc
sbb
int
pop
loopne
sbb
mov
icebp
and
sub
inc
push
popa
das
inc
dec
pop
in
adc
cmc
xchg
ss
xchg
mov
add
es
into
icebp
pop
leave
addb
loope
sbb
call
mov
movsb
inc
pop
mov
int
sete
push
lods
and
jns
fcmovnbe
lret
testl
sub
push
cmp
mov
jmp
and
cltd
inc
sbb
ret
fisubs
dec
std
rcrl
fadds
jl
arpl
fs
addr16
inc
loopne
cs
xor
inc
popa
xchg
cmp
mov
dec
cwtl
cmp
fisubs
int
push
add
fisubl
mov
test
sbb
jmp
pusha
jnp
jb
mull
movsl
adc
test
jp
sub
jne
mov
mov
xor
mov
aas
adc
repz
loop
lock
loop
test
xchg
pop
loop
in
xchg
pop
xor
shl
or
xchg
mov
add
xchg
xor
jg
imulb
dec
push
cwtl
xchg
push
add
pop
popf
xor
jbe
push
or
push
jnp
push
push
pop
xchg
mov
inc
inc
pop
ljmp
mov
pop
ret
push
test
sub
cmp
test
mov
dec
or
sub
pop
and
out
xor
nop
mov
add
in
jg
leave
jne
aad
ss
push
std
mov
lret
add
mov
mov
adc
lret
js
dec
adc
add
push
jne
cli
outsb
lea
jle
jl
xchg
mov
and
mov
xchg
xor
imul
mov
out
loop
stc
xchg
xchg
out
sbbb
and
lret
sbb
mov
mov
fisubrs
pop
pop
sub
fwait
mov
leave
aad
je
ret
fdiv
push
add
insb
dec
mov
mov
ss
filds
movsl
lcall
int
scas
gs
mov
dec
inc
add
mov
test
adc
inc
test
iret
arpl
leave
mov
enter
jle
in
mov
sbb
fwait
gs
mov
cmp
jecxz
fs
sti
xchg
xchg
mov
stos
fs
lds
scas
repz
xchg
hlt
xor
dec
sarl
jl
outsb
lock
sub
out
cmpsl
iret
jae
in
adc
pusha
jl
popf
popa
add
mov
jle
push
push
stos
popl
inc
lods
rcrl
push
data16
xor
outsl
ret
xchg
es
fsubs
pop
loope
push
pop
popf
pop
mov
add
cmp
sbb
aas
ror
push
xor
mov
xor
out
aaa
or
imull
inc
fbld
push
xchg
jecxz
or
inc
push
rorl
xor
mov
xor
xchg
mov
push
sbb
push
popf
call
mov
lea
in
push
sub
xcrypt-cfb
cmpsl
cmpsl
data16
cmp
test
loop
jle
add
loope
push
add
fsubrs
jbe
xchg
cmpsl
call
xchg
mov
inc
sarl
adc
daa
jge
jnp
add
cltd
or
mov
rcll
sub
pop
inc
sub
test
pop
iret
daa
cmp
out
ljmp
shl
pop
jle
jo
aad
sub
sub
dec
lods
call
jmp
inc
and
test
div
mov
pop
fisttps
push
insl
mov
imul
inc
push
xchg
iret
inc
loop
sarb
fldt
flds
sbb
sar
aas
mov
dec
shlb
xchg
leave
imul
enter
xor
push
push
stc
cmp
or
data16
jg
mov
or
mov
pop
push
pop
aad
movb
arpl
mov
sub
mov
rorb
xlat
pushf
mov
mov
inc
lahf
cmpsb
pop
or
mov
xchg
mov
add
xor
mov
xchg
xchg
mov
fmuls
mov
or
dec
stc
ret
pop
sbb
pop
and
ds
push
cmc
push
push
roll
cwtl
mov
pop
dec
jne
lret
mov
scas
pop
aam
imul
push
mov
adc
movsl
imul
adc
lcall
movsl
bound
dec
cld
data16
xor
mov
cmp
cmp
add
fildll
or
cmpsb
ret
out
xchg
mov
negl
pop
xchg
mov
mov
cmp
mov
lcall
in
into
outsl
inc
push
inc
mov
cmpb
mov
mov
dec
add
lea
sbb
fsubl
cmp
inc
fnstcw
xor
push
jl
leave
add
leave
rcll
or
das
aad
hlt
hlt
pop
add
jecxz
push
pop
jge
and
jecxz
xor
push
scas
repz
fstps
arpl
jo
mov
movsb
xor
and
sarl
jo
pushl
and
jbe
insl
fsubrp
pop
andb
jns
outsb
cmc
in
and
addr16
pop
addr16
daa
les
clc
xor
add
and
fdivrl
movsb
mov
addr16
es
sbb
out
lods
daa
in
sub
adc
repz
adc
or
stos
fdiv
push
mul
nop
test
mov
xchg
sub
fadds
flds
sub
and
or
popf
outsl
push
xor
imul
cmp
jbe
idivb
jmp
int3
push
insl
pop
incl
adc
rclb
lret
push
push
add
mov
cmp
ss
stc
mov
jge
fdivrl
or
movsl
rorb
push
push
pop
xchg
pop
sub
mov
icebp
xorb
outsl
or
call
mov
sub
inc
popa
stos
mov
add
test
ljmp
xchg
cli
cmpsb
cmp
sub
mov
xchg
pop
cmp
ret
mov
jl
pop
mov
loopne
js
jno
xor
mov
adc
ret
or
jne
add
mov
mov
mov
outsb
jmp
pusha
ljmp
jge
fidivrl
int3
aam
pop
xor
push
es
mov
into
adc
pop
loop
push
inc
xchg
adc
pop
dec
loop
cwtl
clc
xchg
pop
inc
ljmp
add
arpl
fildl
loope
or
cmp
popf
neg
add
xorl
iret
add
add
push
sub
mov
inc
les
dec
sahf
mov
xor
out
sub
cmp
movmskps
int3
jne
les
cmc
dec
outsb
jne
ss
test
push
imul
pop
mov
and
lret
add
cld
and
jle
cmp
movl
int
push
mov
repz
mov
sahf
adc
mov
shl
das
outsl
push
in
sub
fsubl
and
gs
insb
push
mov
push
and
fcomps
push
ds
dec
aas
test
mov
subb
aam
pop
data16
mov
ret
in
mov
loopne
cmpsl
fstpl
lods
fisttps
add
imul
shrd
adc
mov
cmpsb
pop
testb
xor
fists
test
dec
adc
cmc
gs
mov
mov
inc
jno
aaa
addb
test
repz
fs
sbb
mov
pop
jge
cmpsb
mov
or
push
bound
popa
xchg
jge
ret
mov
jge
inc
jmp
adc
test
sbbl
mov
ret
mov
jnp
aad
out
push
and
stc
push
lock
push
loop
ret
mov
sbb
xchg
rol
psubw
sub
sub
fcmovnb
jp
ljmp
lea
fisubl
and
inc
mov
stos
mov
sub
loop
inc
jp
das
lods
sub
push
pop
push
into
sub
mov
loop
into
xchg
cmp
xor
mov
mov
int
sbb
es
js
out
in
xor
or
cld
jecxz
pop
cmp
mov
arpl
jl
addr16
cmp
dec
jb
adcb
mov
in
das
imul
mov
or
jns
sbb
mov
jl
mov
add
inc
sbb
lret
add
pop
cs
xor
cltd
inc
push
sahf
scas
jbe
add
dec
dec
test
push
scas
nop
ret
cmp
jo
imul
jmp
cs
sti
xchg
stc
mov
jp
adc
cltd
es
xor
xor
inc
testb
aaa
cmp
test
aas
jp
das
outsb
xchg
xchg
push
cld
pop
mov
adc
aas
sbb
jmp
dec
jg
bound
imulb
sti
je
stc
fimull
dec
das
rorb
in
xlat
pop
andb
stos
add
cmp
jecxz
stos
push
xchg
std
xchg
outsb
lret
aaa
fisubs
mov
dec
loopne
cmp
mov
cs
cwtl
add
movsl
dec
fs
xlat
or
sbb
jae
sarb
cmp
fsubrs
lret
push
repnz
ja
cmpsl
std
adc
push
mov
sbb
lahf
adc
xchg
mov
or
cmp
push
add
stos
sub
inc
and
inc
and
sub
adc
adcl
in
push
mov
sti
or
nop
ret
xchg
cmp
cmp
out
jle
jg
jb
fs
pop
mov
lods
sbb
mov
gs
push
xchg
adc
fwait
sbb
sub
jae
cmc
lock
xchg
and
push
jb
repz
inc
loop
loope
divl
mov
test
mov
ss
sbb
xchg
sbb
mov
fs
pop
imul
arpl
scas
out
loope
fsubrs
and
add
or
xchg
bound
add
js
jle
lods
inc
xchg
push
jno
and
add
jp
xchg
xchg
es
xlat
arpl
insl
imul
iret
mov
pop
adc
adc
test
pop
lret
push
fcompl
or
leave
js
cmp
inc
gs
andb
in
sarl
push
adc
outsb
mov
cmp
and
fdivl
inc
and
loope
roll
sub
inc
inc
jl
pop
mov
aas
scas
cltd
xchg
lcall
int
cli
push
mov
xor
mov
mov
inc
repz
in
dec
insl
popl
pop
leave
icebp
jle
pop
xchg
jmp
jnp
dec
ss
push
sub
fidivrl
adc
sbb
int
sti
pop
jbe
cmpsl
pushf
outsl
xchg
mov
mov
cltd
jl
scas
sbb
dec
imul
rcl
mov
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
push
mov
jl
pop
pop
jl
mov
ss
daa
mov
out
or
out
pop
inc
dec
adc
and
scas
pop
lret
sbb
or
jp
repnz
push
fimull
or
mov
ds
rep
push
aad
inc
test
outsb
dec
imull
cmp
mov
loop
je
rcr
das
lret
pop
xor
adc
clc
jno
nop
fistps
cmp
push
lret
lahf
hlt
xlat
dec
loope
add
adc
jo
jp
leave
test
imul
lods
push
pop
mov
jo
adc
dec
push
sbb
mulb
xorl
sub
in
fwait
sub
mov
mov
fisttps
in
negl
cld
orb
sub
es
outsl
adc
enter
mov
lods
or
xorl
call
repz
xchg
jp
inc
lret
pop
popf
stos
repnz
jb
lret
pop
fistpl
fisubrs
jecxz
cmc
push
data16
inc
cld
jno
push
push
and
sbb
xor
pop
add
pushl
push
lock
adc
mov
sub
mov
xor
xor
pop
test
mov
js
and
pop
adc
cwtl
mov
jle
jmp
sar
push
out
je
outsl
imul
push
adc
scas
mov
stc
pop
add
or
add
mov
xchg
leave
nopl
sbb
js
xchg
dec
pop
sub
dec
adc
jbe
cld
sbb
leave
mov
push
jl
jl
xchg
test
sti
mov
sbb
dec
in
cmp
in
je
pushf
outsb
xor
inc
imul
shll
orl
loope
pusha
jp
push
iret
adc
mov
push
divb
aam
push
inc
cmp
cwtl
xchg
sub
sbb
mov
dec
xor
in
xlat
sbb
ds
rcrl
push
aas
aad
out
mov
or
inc
jl
sbb
add
rcll
std
clc
jmp
sub
in
mov
push
mov
and
xlat
push
mov
xchg
push
dec
fistpll
xor
jns
scas
mov
inc
fs
dec
mov
cs
xchg
cmp
xlat
dec
and
cltd
and
leave
les
into
mov
push
mov
cmp
xchg
pop
adc
popa
inc
cmp
pop
sub
fcompl
adc
or
xor
insl
cli
in
cltd
in
cmpb
adc
in
inc
into
popa
stos
cltd
lods
cltd
bound
cwtl
out
sbb
loope
push
shlb
push
mov
pushf
ret
fnstsw
pop
test
adc
xchg
rdmsr
mov
or
shlb
jne
add
lahf
pusha
lods
dec
cmc
pop
aaa
les
fdivrl
jo
das
dec
rolb
pop
js
shrb
test
sub
xor
lods
test
cld
inc
xorb
rcr
rorl
aas
out
xorl
mov
rorl
push
or
test
cmpb
addl
push
mov
daa
inc
pusha
stos
dec
mov
pop
jbe
push
insl
or
adc
xchg
adc
inc
xadd
aas
sub
cltd
push
and
insb
dec
les
sti
cmp
bound
ret
int
decb
mov
dec
add
test
mov
out
xor
fwait
aad
jnp
and
mov
dec
outsl
mov
sub
push
cmp
pop
or
mov
mov
and
dec
loope
dec
int3
inc
and
loopne
movsl
mov
fiaddl
or
mov
into
sub
jb
cli
stos
insl
fs
es
dec
add
xchg
stos
outsw
out
and
outsb
arpl
xchg
and
sbb
inc
cmp
bound
punpcklbw
fistpll
imul
divl
int
jnp
fbstp
cmpsl
xchg
xor
loopne
adc
sahf
hlt
inc
in
sub
and
or
nop
adc
lods
dec
insb
pop
and
sub
sub
test
jmp
xchg
jbe
outsb
lods
dec
jnp
int3
cmpsl
jne
mov
adc
inc
push
out
out
xchg
mov
shrb
cmc
xchg
jnp
push
push
in
mov
insb
fmuls
inc
lahf
cs
inc
pop
sbb
jle
sub
stos
mov
dec
and
xor
jo
inc
dec
cmp
frstor
xor
mov
adc
push
push
in
scas
sti
push
rcll
adc
cmp
loopne
sbb
bound
aaa
mov
ss
insb
dec
jle
enter
ror
aad
aaa
nop
addr16
fwait
in
loopne
jne
ljmp
shr
pop
mov
iret
es
mov
push
mov
jmp
pushl
sub
xchg
cld
mov
dec
cmpsb
mov
mov
neg
popf
arpl
ja
dec
sbb
xor
pop
ret
inc
adc
sub
movl
ds
mov
mov
dec
inc
js
jecxz
test
inc
xchg
subb
outsl
mov
jmp
sub
imulb
and
test
fdivs
xor
adc
int3
mov
sbb
inc
call
jg
dec
hlt
dec
ret
and
ja
aad
push
push
inc
stc
add
loop
and
insl
mov
jbe
xchg
jns
jmp
pop
repz
mov
stos
test
iret
mov
jp
push
outsl
sub
xlat
out
lret
xor
movsb
push
movnti
mov
pushf
roll
in
adc
cmp
gs
and
dec
nop
dec
mov
addr16
jge
mov
add
shrl
xlat
cltd
int
mov
jnp
push
fsts
sbb
jl
sub
lahf
dec
pop
sbb
fisttpl
mov
inc
cmp
test
insb
sbb
mov
std
xchg
lock
pop
popf
mov
jp
adc
iret
dec
data16
mov
lcall
sub
add
leave
popa
lcall
cmc
imul
mov
xorb
push
push
mov
push
shll
jl
je
lahf
mov
cmp
mov
pop
jl
jg
jnp
into
or
dec
cmpl
out
stos
adc
and
jne
xchg
shlb
jecxz
shlb
and
sub
popa
inc
add
xchg
nopl
mov
cmp
sub
pop
adc
sahf
mov
jns
mov
xor
aam
call
push
xor
jnp
or
mov
mov
movsb
or
mov
mov
cmp
cwtl
xor
imul
cmp
rcll
push
cmp
push
mov
into
and
mov
cs
lahf
push
inc
mov
inc
and
jl
lods
fbstp
cmc
push
jle
sub
notb
mov
mov
jnp
pop
and
push
loopne
pop
in
cmp
call
sub
adc
std
jo
xorb
sbb
in
mov
mov
les
cmp
dec
cmpsb
test
adc
cld
xchg
jns
mov
rcr
data16
addr16
push
push
cli
es
into
js
cmp
fildll
xchg
test
adc
xorl
idivl
push
xor
lds
data16
notl
xchg
cwtl
xor
jmp
test
sbb
rclb
jecxz
in
nop
cmp
int3
mov
fistpll
jno
push
jne
je
jp
insl
fwait
enter
out
movsl
sahf
sti
bound
dec
out
mov
push
lret
dec
rolb
sbb
mov
in
stos
or
push
lock
jecxz
cmp
sbb
loop
xchg
repnz
je
mov
adc
mov
push
dec
add
or
call
xchg
mov
xchg
sub
pop
mov
loopne
inc
clc
cmpsb
stos
pop
popa
and
repnz
lcall
mov
push
mov
sarb
add
sub
mov
pop
mov
and
loope
cmp
sub
inc
push
std
aaa
arpl
or
cmpsb
xchg
repnz
fsubl
addr16
dec
and
inc
inc
push
pop
sub
sub
out
cmc
jp
inc
mov
imul
jg
xchg
fwait
push
cmpsb
fs
mov
jmp
cmp
dec
andb
std
mov
inc
popl
cbtw
out
icebp
jbe
mov
test
out
popa
dec
clc
js
roll
adcb
jns
ljmp
pop
aam
cmp
mov
xchg
psubsb
xor
xchg
insb
and
popa
mov
mov
out
push
cmpsl
pop
iret
stos
fidivs
fsubr
dec
test
push
mov
int
movsb
jg
cld
je
pop
lock
es
imul
xor
pop
xor
fistl
and
mov
fsubs
popf
aaa
dec
adc
push
pop
movsl
or
mov
insb
insb
mov
pop
cmp
add
mov
mov
flds
cmpsb
scas
xor
xor
pop
data16
xor
sub
test
push
jne
pop
add
rcll
cmc
jae
out
mov
outsb
lods
mov
add
xor
sub
cwtl
roll
jmp
add
inc
cltd
cwtl
enter
mov
lock
repnz
and
lahf
fisubrl
mov
aas
push
push
jecxz
push
mov
imul
jne
mov
int
stos
sbb
mov
dec
cmpsl
ss
pop
bound
xchg
insb
repz
orl
inc
loop
jle
dec
or
lods
or
dec
movsl
aaa
nop
mov
xchg
adc
xchg
jbe
nop
movsb
and
add
sbb
ss
and
xor
add
inc
sub
lret
push
arpl
and
jbe
or
shrb
push
adcl
jecxz
and
in
das
mov
dec
sub
mov
push
dec
mov
mov
inc
pushf
inc
cltd
cmc
inc
cmp
fstps
mov
out
inc
sub
rol
test
ret
ficoml
and
adcl
add
push
sbb
in
and
int
jbe
inc
sbb
jne
cmc
subl
in
mov
cmp
jns
dec
fwait
push
and
sub
jns
insb
pop
xchg
lcall
xor
sbb
mov
and
inc
loop
icebp
jo
pop
inc
cmpsb
fistpll
fistpl
push
or
mov
jmp
cmpsl
pop
jno
iret
and
retw
and
insb
xchg
addr16
mov
sbb
push
push
adcb
dec
xor
push
xlat
push
xor
add
push
lcall
push
pshufw
push
cmp
push
jnp
mov
adcb
pop
shll
mov
mov
jecxz
adc
cld
mov
out
push
xchg
cmp
cmp
cld
hlt
dec
loop
mov
out
fidivs
fisttpll
mov
insb
ja
mov
adc
adc
out
mov
adc
scas
mov
pop
test
adc
pop
in
mov
jl
push
xor
scas
out
jge
dec
shr
rorb
jp
pop
jl
scas
in
lea
sub
mov
or
or
push
fsubrp
shl
fstl
fs
sbb
and
pusha
jl
push
clc
mov
cmpsb
xchg
fwait
sbb
lret
loopne
pop
das
dec
push
ja
push
repnz
jg
jo
inc
mov
outsb
dec
daa
cmpsb
es
lahf
lcall
sbb
push
adc
or
arpl
pop
dec
cbtw
repnz
mov
xor
arpl
xlat
and
xor
aad
inc
loope
fdivr
or
mov
repnz
inc
stos
ret
lock
mov
scas
into
jp
mov
xchg
es
fidivl
jmp
int3
aas
sbb
or
stos
cwtl
pop
xchg
ds
xchg
pushf
jl
into
dec
dec
notb
xor
lcall
add
inc
nop
xlat
lahf
and
mov
fiadds
xor
jb
sbb
fstpt
scas
xchg
cli
test
xchg
rcrl
push
shll
stos
jae
and
pop
int
mov
jg
imull
shrl
jl
adc
mov
jge
in
fdivrl
inc
and
aam
sahf
and
adc
xor
sub
cmp
jae
daa
inc
pop
rcrb
inc
imul
add
pop
sub
ljmp
arpl
aam
cs
iret
mov
scas
and
cmp
rep
fistl
pop
fadd
cltd
inc
inc
out
lock
movsb
jae
pop
dec
xchg
rcrl
mov
xchg
inc
test
scas
fnstsw
sar
adc
mov
lods
dec
test
fdivr
mov
addr16
rorb
or
dec
orps
lahf
js,pt
ljmp
enter
push
push
leave
or
lods
cmpsl
inc
pushf
popf
dec
xchg
in
andl
jae
sub
jge
xchg
jg
lea
xchg
imul
dec
lods
mov
cltd
dec
pop
xchg
cmp
fisubl
jb
std
das
fwait
jge
inc
xlat
stc
movsb
mov
adc
nop
dec
mov
lret
xchg
das
ljmp
into
int3
or
xor
std
imul
mov
mov
arpl
sbb
cmp
cli
cltd
or
mov
jno
lcall
xor
xor
rcll
idivl
mov
aam
insb
daa
inc
cmpsl
pop
aas
xor
adc
rorl
mov
push
dec
xchg
mov
jae
ficompl
in
add
inc
jge
cmp
out
cmp
inc
lcall
push
push
xor
xor
mov
mov
aaa
push
ja
xchg
sahf
mov
sub
shll
inc
orb
adc
aam
sbb
aas
or
dec
push
andl
and
jno
jbe
xor
imull
jg
int3
ret
movsl
ss
shlb
jle
popa
sub
sbb
fstpt
mov
xchg
fidivl
lds
ja
jp
movsl
shll
cmpb
ds
xchg
xchg
adc
aam
dec
and
dec
popa
icebp
das
adc
loope
nop
xchg
insb
push
pop
sbb
das
cltd
jmp
fcmovne
lods
jb
cmp
ds
cmp
arpl
mov
jecxz
jl
cmp
mov
or
add
les
enter
call
shll
mov
aas
aam
sbbl
iret
popa
add
push
mov
push
adc
cwtl
sub
mov
scas
xchg
pop
jnp
popa
and
xor
filds
jnp
mov
ljmp
insl
gs
inc
xchg
mov
fwait
mov
xchg
mov
fistl
daa
out
scas
push
inc
add
pop
push
cmovno
sahf
ret
stos
das
xor
fwait
cltd
sbb
pop
mov
jb
repnz
loopne
repz
out
out
hlt
adc
jo
jne
xor
jno
out
inc
or
xor
test
push
out
out
inc
sub
mov
jb
pop
fstpl
cwtl
rcrl
std
into
lahf
mov
pop
push
or
xor
xchg
sub
outsl
mov
data16
out
lods
mov
mov
enter
mov
mov
mov
les
mov
pop
fdivrl
pop
xchg
dec
mov
test
jnp
stc
sbb
or
sub
dec
daa
dec
mov
fisubs
ror
icebp
ds
inc
popa
mov
adc
inc
scas
xchg
mov
shrl
or
test
cmc
clc
mov
xchg
and
push
jmp
daa
xchg
pop
mov
jbe
mov
idivl
xor
or
mov
add
dec
mov
inc
adc
pusha
aas
fildll
roll
add
sti
xor
push
mov
cmp
aas
add
mov
mov
rcr
lahf
and
mov
or
pop
mull
jecxz
jnp
lahf
jle
and
fildll
push
ret
cmp
movzbl
cld
lods
stc
sti
adc
cmpsb
jns
aam
add
pop
gs
int
fistpll
jb
daa
pop
hlt
in
dec
dec
fmull
pop
mov
out
add
aad
stos
cmp
in
aad
std
out
clc
add
pop
repnz
lret
cmc
adc
sbb
or
scas
push
pop
es
xchg
push
lods
and
rclb
jp
jle
sbb
mov
adc
or
fstpt
enter
mov
xor
in
int
pop
ja
inc
xchg
andl
and
push
inc
test
sub
jne
mov
mov
jne
inc
repz
xor
push
xor
xchg
mov
mov
test
dec
dec
leave
cmpsl
add
lcall
cmpsl
xchg
fistpll
cmp
sarl
iret
add
aas
iret
shrb
xor
scas
dec
push
adc
data16
sarb
repz
cs
popa
xlat
rclb
popf
scas
imul
sub
mov
clc
push
std
loopne
pop
jmp
in
mov
ds
movsl
sub
in
ds
daa
dec
mov
mov
and
push
fmull
or
mull
loop
xlat
movsl
add
test
mov
inc
ret
test
add
mov
xor
xor
dec
cmc
or
mov
adc
add
xor
and
fcoml
pop
roll
stc
mov
pushf
out
cmp
xor
inc
mov
loope
movnti
inc
xchg
mov
fnstsw
pusha
mov
mov
sub
aam
dec
adc
mov
scas
mov
push
mov
mov
add
pop
jle
shlb
loop
mov
scas
xor
daa
push
pop
int3
gs
jg
jnp
mov
xchg
pop
pop
lret
sbb
mov
jne
add
cmp
mov
sbb
lods
jle
xchg
movsb
inc
fidivl
sbb
mov
pop
inc
aaa
and
ja
push
xor
xchg
jmp
arpl
and
add
lea
mov
mov
adc
repnz
jnp
push
fbstp
pop
mov
and
push
mov
and
sub
cs
sti
xchg
lods
jnp
mov
iret
push
jae
ficoms
adcb
sub
data16
fwait
xchg
lock
mov
fbstp
stos
outsl
sbb
ret
push
sbb
or
aad
inc
cmpsb
outsl
negl
and
cmp
jne
stc
test
adc
cmc
mov
dec
test
stos
pop
pop
xor
out
mov
rcll
inc
mov
inc
sub
dec
cli
movhps
mov
mov
pop
call
cwtl
test
cmp
sbb
push
orb
dec
mov
shll
or
mov
jbe
shll
jmp
sbb
jbe
mov
ds
sub
sahf
and
push
call
add
pop
daa
cmp
orb
lea
shll
push
bound
push
insb
aas
add
push
ret
adc
mov
cmp
out
sbb
and
sar
and
repnz
jae
push
mov
mov
mov
jne
mov
cs
and
mov
mov
pop
pushf
sub
mov
jbe
push
nop
and
and
jb
push
pop
cmc
mov
pop
pushf
add
inc
dec
lret
inc
mov
add
sub
push
in
dec
popf
dec
push
fs
pop
adc
js
hlt
or
or
pop
sub
mov
xchg
ret
clc
in
scas
pusha
mov
push
mov
stos
jmp
jl
push
mov
mov
mov
inc
roll
or
mov
stos
inc
jae
rolb
mov
outsl
mov
pop
inc
stos
cmp
cmp
jns
push
fs
ds
xchg
pop
jle
call
push
or
decl
ljmp
lahf
pop
dec
std
push
cmp
jns
mov
xlat
dec
int3
push
stos
les
in
cs
nop
mov
daa
dec
add
adc
push
repnz
dec
xor
clc
lret
lret
lea
pop
add
fldl
or
push
jmp
outsl
mov
mov
scas
adc
mov
pop
test
cmc
push
pop
aad
pop
insb
frstor
lcall
cmpl
enter
push
repnz
lock
inc
cmpsb
push
mov
loopne
inc
add
and
push
shll
insb
shrl
mov
or
insl
aam
fucomip
mov
cmp
fs
and
enter
mov
mov
or
leave
test
aas
inc
test
xchg
leave
out
shrl
pop
sbb
adc
mov
mov
sbb
dec
pop
pop
mov
popl
test
fcoml
lret
subl
sub
arpl
push
stc
movsb
add
xchg
lods
std
xor
mov
aas
mov
in
movsl
out
stos
insl
fwait
xchg
rcl
enter
push
insl
mov
cmp
lea
dec
fbld
inc
pop
dec
cmpsb
nop
dec
sub
and
mov
xchg
pop
scas
push
dec
dec
dec
dec
je
dec
xor
push
adcl
iret
pop
push
pop
sbb
hlt
cmp
mov
cmpsb
mov
ret
test
jnp
adc
subb
sbb
mov
xchg
mov
enter
aam
sbb
int
mov
pop
mov
cltd
mov
push
idivb
or
insl
push
push
outsl
fwait
jb
dec
imul
dec
sbb
jbe
stos
mov
jmp
mov
sbb
jge
je
adc
in
mov
out
fwait
lret
jmp
mov
mov
bound
call
out
ds
adc
aam
mov
call
ljmp
bound
loop
jnp
test
adc
adc
mov
mov
pop
aad
ljmp
jo
cltd
pop
mov
and
inc
cmp
ret
jno
mov
mov
sub
mov
movsb
sti
push
loope
lods
add
cmp
jmp
ljmp
jmp
mov
imul
jp
rorl
jnp
loop
sub
mov
xor
in
gs
movsb
rorl
scas
mov
js
fs
ds
xlat
inc
std
jns
lds
xchg
leave
xchg
lcall
mov
scas
sub
pop
clc
push
ds
cld
sub
dec
lea
stos
xor
cli
jmp
enter
loopnew
sbb
mov
mov
arpl
outsb
loopne
sub
data16
ror
fldcw
xor
push
andb
pop
scas
lcall
rcll
movsl
mov
cmp
and
mov
dec
mov
mov
enter
cltd
movsb
mov
lds
xchg
inc
ja
and
or
sbb
push
pushf
rcrl
xchg
fdivl
pop
aas
and
sysret
push
ja
adc
xor
sub
pop
out
addr16
xchg
xorb
leave
xchg
hlt
jmp
in
fcmovb
jnp
lods
jbe
pop
pmaxsw
add
movsb
pop
ret
mov
or
push
mov
int3
daa
sub
cwtl
cmpsb
mov
adc
cmp
shrl
out
pop
in
adc
test
push
adc
inc
or
into
stc
or
adc
pusha
adc
jo
cmp
out
movsb
cmp
push
dec
cmc
sbb
lret
test
mov
jecxz
sub
add
sbb
jnp
pop
push
jmp
cmp
jno
pop
test
jne
dec
adc
sahf
neg
test
imul
cmpl
inc
lcall
sbb
push
test
dec
xor
mov
lret
icebp
in
pop
pop
popl
dec
orl
pop
push
jg
fisubl
cmp
sub
dec
dec
fsubrs
cmp
pop
aaa
movsl
or
iret
arpl
mov
fmull
bound
xor
or
in
mov
js
cmp
jmp
xor
lret
aam
lret
insl
insl
clc
or
sub
or
mov
unpcklps
jl
mov
test
leave
push
xchg
inc
sub
test
adc
pop
mov
mov
push
shll
pop
mov
pushf
loopne
icebp
jp
pop
push
cmp
push
and
push
ss
pop
adcl
pop
jecxz
out
add
add
xchg
jns
ret
mov
fisubrs
insl
xchg
testb
fisttpll
paddd
xor
mov
cs
fcomps
cmp
or
lock
inc
rcrb
outsb
jl
outsb
adc
gs
imulb
push
in
sub
pop
xor
repz
dec
inc
insl
fcmovnb
sub
inc
outsl
add
cmc
cmp
jmp
jge
dec
xchg
dec
pushl
int
ret
stos
mov
imul
or
fld
repnz
stos
inc
jns
inc
ljmp
hlt
add
push
xchg
clc
fsubrp
test
cmp
in
repnz
movsl
mov
mov
push
inc
rorl
sub
nop
repz
inc
mov
je
or
adc
dec
add
mov
adc
sahf
dec
sbbb
sbb
add
imul
dec
jne
cwtl
push
jae
xor
pop
gs
sub
jnp
pop
mov
ljmp
ja
aas
adc
push
mov
jb
in
sahf
std
pop
xchg
or
or
xor
jae
xchg
lods
pop
pushf
mov
pop
ret
jecxz
jle
add
pop
data16
loop
cmpsb
roll
scas
nop
pop
sbb
sbb
fsub
mov
lods
imul
jo
mov
pushf
sub
loope
dec
push
lahf
pushf
and
and
loopne
sub
dec
add
add
imulb
cmp
xchg
cli
add
cmp
xlat
aas
jb
cmpsl
push
scas
xchg
mov
cmc
sbb
sbb
jae
lret
in
push
fldt
sub
sahf
mov
inc
sub
and
jecxz
xor
lcall
cli
or
repz
xor
arpl
dec
pop
mov
and
pop
icebp
pushf
mov
les
push
subl
nop
fcomps
pusha
mov
sbb
dec
pop
popa
xchg
sbb
push
xchg
aas
lock
push
and
mov
dec
sbb
pushf
xor
xlat
lods
shrl
fs
xchg
dec
fadds
cmp
call
out
loope
out
add
les
leave
sub
dec
lret
fimuls
dec
imul
leave
cmp
add
iret
aaa
fimuls
mov
jp
or
aas
int
push
jo
pop
xor
and
testb
mov
das
mov
ss
or
out
mov
sbb
sti
dec
test
movsl
inc
xor
cmp
mov
xor
lret
scas
jae
dec
jns
add
pop
ret
sub
mov
xchg
add
mov
cltd
mov
out
loope
imul
divl
into
xor
xor
pop
add
jb
sub
hlt
lret
loop
mov
xor
nop
xor
push
out
jns
mov
cmpl
push
or
pop
call
fidivl
xchg
add
cmpsb
add
and
cmpsb
imul
ret
pop
mov
mov
and
outsb
adc
or
bound
das
and
adc
push
or
outsl
decl
loop
lar
jb
mulb
lods
push
mov
sbb
push
outsl
add
nop
insb
jmp
aas
mov
xor
and
push
sbb
into
sbb
loopne
outsl
lods
call
scas
stos
push
loope
in
clc
xor
flds
xchg
test
add
jp
fs
aas
stc
push
jl
jnp
and
loopne
dec
xchg
jg
pop
and
cmc
std
adcb
mov
add
cmp
pop
xchg
mov
pop
aaa
inc
ret
mov
mov
stos
or
sub
mov
jno
jmp
loop
js
sbb
xor
adc
pop
pop
fldl
xor
mov
cltd
scas
aas
pop
xchg
push
loop
outsl
xor
das
xorl
in
je
xor
daa
cmp
push
arpl
int3
push
lret
mov
jnp
fxch
and
dec
mov
subl
daa
sbb
int3
dec
push
jns
add
loop
pop
add
jmp
jb
ret
rcr
or
in
scas
pop
xlat
mov
pop
pop
pop
cwtl
add
sbb
add
out
fcoms
movsb
or
dec
and
cmpb
std
insb
push
cmp
lock
shll
gs
cmc
fnstsw
push
mov
stos
cmp
aas
add
push
out
and
push
jmp
xchg
cwtl
xor
test
dec
sbb
jecxz
dec
adc
mov
clc
pop
insl
cs
fisubrs
hlt
and
xchg
movsb
push
lea
jecxz
out
and
mov
jl
push
push
int3
pop
outsb
push
sahf
jge
mull
out
inc
push
push
sub
pop
int3
inc
test
sti
dec
xchg
jmp
mov
jecxz
fildll
pop
gs
test
cmpl
pop
or
aas
int3
in
jmp
pop
pushf
xchg
push
push
pushf
sub
xchg
add
test
xchg
inc
cmp
lea
lea
cmp
or
mov
fimuls
xor
jecxz
aad
cli
lea
das
sub
repnz
jo,pn
cltd
jb
mov
sub
mov
rcrb
lea
insb
lods
popa
enter
cmpsl
hlt
adc
xor
add
cmpsl
push
pop
xchg
jecxz
popa
jecxz
inc
bound
outsb
in
jb
test
dec
int
dec
jl
sti
ljmp
subb
jl
push
add
popf
cmp
push
mov
loop
adc
mov
sbb
sub
fildll
adc
les
cmp
mov
mov
cmp
mov
push
int
mov
cmpb
lret
addr16
shl
pop
sbb
push
sbbl
ret
mov
or
adc
sarl
ror
push
mov
mov
push
push
lret
out
and
insl
popa
dec
or
sbb
mov
std
add
cmp
stos
iret
scas
ret
mov
fdivl
js
xor
loope
inc
add
pushf
into
pop
inc
jle
push
rolb
decb
xchg
add
fnsave
aad
call
push
fsubl
pop
xor
addb
mov
jno
mov
nop
push
xchg
add
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
dec
mov
lods
lcall
test
sbb
movsl
add
xchg
stos
xorl
xor
push
sub
mov
shr
add
stc
das
jg
cs
fcoms
je
cmp
pop
add
push
shl
testb
mov
xorl
mov
sbb
inc
lret
test
sbbb
push
sahf
inc
movsl
into
sub
and
pop
jbe
hlt
mov
imul
push
dec
add
fistpl
enter
icebp
push
in
push
call
mov
dec
inc
rcr
adc
dec
pop
inc
mov
inc
int3
adc
insb
mov
fnstsw
or
es
fwait
shl
push
push
into
jle
inc
cli
push
out
sub
xchg
imul
mov
or
push
push
jae
loopne
push
addr16
fsubp
cltd
lock
leave
push
fidivl
xor
js
sub
xchg
sub
popf
pop
jno,pt
imul
xchg
fidivl
inc
jmp
out
push
cld
cmp
xor
mov
mov
lock
pop
adc
lret
inc
scas
enter
cmc
je
adc
lods
sub
arpl
mov
pop
fsub
or
les
in
or
or
in
loopne
rcll
sbb
xchg
mov
pop
lods
iret
xor
mov
testl
dec
xor
mov
mov
xchg
enter
sub
aad
int3
mov
cltd
out
cmpsb
ljmp
sub
adc
adc
sbb
jle
dec
inc
pop
pop
push
mov
sub
sub
pop
and
push
push
mov
xor
loopne
ret
nop
out
out
push
dec
push
je
push
imul
jmp
enter
and
mov
aad
or
or
movsl
cmp
jmp
popf
sahf
jmp
xor
outsb
mov
xlat
mov
stos
xlat
pop
das
xchg
sti
cld
scas
inc
mov
sub
jnp
and
popf
lods
pop
inc
mov
pop
jp
daa
ret
repnz
mov
sub
subl
setl
pop
fcmovnb
mov
nop
mov
xchg
ds
loopne
sahf
int
bound
subl
notl
scas
stos
addr16
inc
popf
push
cmpb
outsb
ss
test
andb
inc
pusha
sti
pop
push
push
aas
cmp
test
push
sub
and
inc
cmp
or
pop
mov
iret
push
pop
es
shll
clc
fstpt
sbb
out
mov
into
pop
pop
fstps
inc
pop
or
neg
mov
sub
add
fsubrl
aas
ret
bound
repz
push
jne
or
pusha
jb
or
out
aam
sahf
lret
cmp
hlt
add
shlb
adc
mov
pop
mov
mov
rolb
dec
cli
in
lret
adc
cmp
and
in
insb
xchg
push
in
xchg
jg
pop
rorl
sbb
hlt
cmp
pop
mov
sbb
roll
sub
mov
add
daa
dec
dec
int
xchg
adc
jg
xchg
and
sub
xchg
pop
sbb
sub
imul
sub
mov
xchg
shrw
jl
lea
sbb
cli
mov
xchg
pop
jg
cmpsb
adc
sarb
icebp
pushf
jno
arpl
adc
dec
into
push
jns
int
add
sbb
cmp
lcall
pop
mov
and
mov
mov
call
popa
mov
mov
and
sahf
xlat
aas
adc
mov
push
add
int
add
add
jp
test
mov
in
loopne
call
cli
push
mov
sahf
ja
mov
mov
das
mov
mov
ljmp
jge
inc
sub
in
xlat
sub
cwtl
xor
mov
les
add
jnp
fwait
jecxz
cltd
bound
cwtl
fdivrl
xor
cmpsb
lods
inc
pop
xor
cli
cmp
stos
xchg
cltd
and
mov
sbb
iret
mov
sub
push
icebp
cmp
ret
push
dec
movsb
mov
stc
mov
mov
xor
add
and
lret
xchg
out
jo
and
adc
mov
add
rcrl
push
xor
xor
mov
aam
sbb
sub
push
cwtl
add
pop
mov
sti
pop
cmpxchg
xchg
ficoml
xrelease
pop
fdivs
push
jg
xchg
fidivs
fists
mov
mov
nop
pop
xchg
cmp
add
dec
outsl
faddp
jae
pop
inc
pop
jp
lahf
cmpsb
sbb
xor
xor
add
rcl
aas
and
push
xor
adc
popa
js
xchg
cmp
and
jo
repnz
inc
negl
cmpsl
out
leave
sbb
dec
imul
mov
sbbb
bound
xchg
cmpsb
in
sub
jge
jno
pop
xchg
ret
ja
iret
push
and
and
jae
cmp
cmp
xchg
xchg
inc
mov
xchg
pop
out
lods
add
jp,pn
jge
mov
sbb
rorb
pop
sbbb
lds
mov
and
lock
mov
xor
add
movsl
push
mov
rclb
adc
mul
xchg
cltd
xor
rorl
adc
mov
cmpsl
jno
mov
dec
dec
call
lcall
lods
cs
inc
or
inc
int
pop
stos
fwait
xor
call
mov
push
sbb
faddl
pop
xchg
in
xlat
rorl
int
mov
test
cmp
or
cld
or
imul
shr
jno
insb
jo
cltd
sub
sbb
pop
fisttpll
or
aas
pop
shll
stos
das
push
cli
mov
out
leave
fstl
mov
aam
lea
int3
push
clc
in
pop
shlb
repz
in
mov
mov
out
gs
mov
idiv
cwtl
xchg
sub
addr16
and
daa
push
rorb
jae
xchg
lahf
sub
or
jg
mov
cwtl
xor
xor
mov
scas
mov
mov
adc
mov
pop
pop
cmp
or
jl
xor
cmp
les
pop
pop
adc
jge
mov
xor
hlt
push
mov
lret
xor
push
scas
xor
inc
mov
in
pop
lods
movsb
pop
pop
bound
scas
fdivrs
dec
in
fsubs
out
shlb
dec
add
ret
jno
push
mov
jecxz
inc
leave
push
cmp
xchg
jecxz
jmp
dec
lds
call
xchg
inc
pop
in
sahf
inc
push
stc
icebp
leave
and
and
stos
cmp
xorb
pop
xor
cs
jmp
enter
xchg
mov
pop
sbb
mov
sub
scas
xlat
inc
add
or
insb
mov
lcall
pop
es
xlat
mov
test
push
jge
sbb
shl
out
jmp
jl
mov
mov
pop
es
idivl
sub
or
sub
fwait
movsl
dec
lahf
lret
ror
ret
int3
or
and
insb
dec
add
jl
inc
mov
cmpb
pop
mov
in
je
push
cld
lock
adc
fs
add
mov
pop
aam
inc
mov
hlt
test
jge
cmp
cmp
scas
fistpll
sahf
mov
xor
hlt
jnp
leave
pop
rcrl
lods
jmp
cmovl
push
out
arpl
xor
cs
add
dec
in
fcmovnbe
dec
std
les
jmp
or
testb
push
xchg
mov
es
pop
jecxz
dec
popa
mov
sti
push
jno
or
xchg
dec
jmp
into
pop
shlb
push
or
mov
in
xchg
jae
jno
dec
popf
add
mov
int3
adc
push
fidivrl
pop
mov
stos
or
aam
cmp
push
in
mov
gs
inc
lret
add
mov
test
sbb
mov
xor
cmp
mov
inc
push
adc
mov
out
pop
jnp
inc
popa
popa
aas
inc
cltd
js
fbstp
stc
aam
pop
xchg
xor
and
mov
mov
pop
inc
mov
and
es
push
and
mov
jmp
push
cmpl
push
shll
neg
std
dec
sbb
sbb
popa
sbb
cmp
pop
xor
dec
add
leave
lds
or
sbb
shll
stc
dec
add
pop
pop
dec
in
mov
stos
push
subb
fisttpll
adc
add
test
enter
out
mov
scas
sbb
rcr
sbb
lock
adc
lods
cmp
rclb
cmpb
push
repz
jo
xchg
call
push
arpl
xor
fsubrl
push
outsl
repz
test
out
js
or
pop
dec
mov
sub
xor
push
das
pop
je
cmp
xor
cmp
out
arpl
sub
roll
scas
aam
dec
fnstcw
mul
mov
lret
pop
mov
pop
inc
mov
mov
dec
loopne
int3
xchg
cmp
ljmp
rcr
and
std
in
jmp
outsl
xlat
dec
mov
sub
arpl
les
inc
cmp
sub
in
sbb
dec
popf
and
mov
loopne
sbb
cmp
lret
sub
add
lahf
insl
jae
fcmovnb
adc
pushf
cmpsb
mov
mov
jle
test
push
cltd
movups
adc
sbb
ss
aam
cmc
ds
decb
mov
mov
int3
sbb
push
or
add
popa
iret
ret
pop
or
cli
incl
iret
and
lods
push
xlat
test
nop
stos
pop
sarl
dec
mov
jne
popf
xchg
mov
mov
cmc
push
xor
pmullw
sahf
sub
nop
shrb
lea
sarb
and
fiadds
xchg
mov
test
mov
andb
sbb
movsl
imul
pop
push
cmp
insb
sbb
add
test
mov
or
mov
dec
loope
lds
xchg
js
es
xor
xor
repz
mov
ret
adc
push
jg
sub
js
lcall
sub
dec
sbb
aas
clc
fisubrs
sbb
add
mov
out
jno
sbb
lods
jae
test
adc
pop
xchg
sbb
jl
xchg
push
stos
add
pusha
add
clc
pushf
je
jl
mov
das
mov
sbb
or
adc
es
ffreep
or
push
add
rolb
cmc
or
push
out
jge
cltd
outsl
push
sbb
xor
in
xlat
rcrb
cmp
jge
fsubrl
xorl
test
xchg
xlat
outsl
mov
jb
inc
pop
arpl
mov
iret
cmp
je
jne
out
rorb
xor
pop
inc
inc
xchg
mov
ret
test
ljmp
das
mov
pop
pop
inc
mov
fstp
xor
popa
push
jb
mov
dec
jno
push
fisttpl
sub
cli
fsubrl
testl
cmpsl
adc
and
mov
xor
mov
imul
enter
flds
sti
sub
mov
jnp
and
or
push
mov
lock
inc
xor
jbe
xchg
adc
adc
andl
jae
mov
bound
pop
push
xchg
iret
cmp
pop
enter
and
add
outsl
stos
sub
incb
dec
adc
insl
xchg
jo
aaa
xchg
and
push
mov
ds
rcrl
mov
movsl
cmpsl
add
sbb
mov
lret
test
dec
clc
push
inc
nop
jne
xor
push
cmp
decb
jl
das
pop
adc
fimuls
jno
push
stc
dec
cmp
push
jae
push
cs
je
test
xchg
in
and
aad
ret
cmpsb
cmp
push
add
inc
xchg
and
pop
xor
cmpsl
jmp
xchg
inc
test
aas
pop
jns
jmp
mov
or
enter
sub
cmpsl
sar
cmp
xchg
and
and
mov
jns
and
push
notl
push
orb
pushf
cli
cld
adc
andl
jl
xor
and
stos
or
fstpt
lock
mov
clc
cmp
mov
push
rcrb
inc
stos
pusha
arpl
lahf
and
dec
gs
in
mov
idiv
add
mov
insb
cmp
pop
mov
data16
les
clc
pop
jbe
leave
cmpsb
push
pop
cltd
pop
cmc
addl
ss
pushf
ret
xor
stos
inc
cmp
cmc
dec
or
fs
sbb
cmp
mov
and
mov
mov
jp
and
push
sbb
xor
sbbl
orl
cmpsl
jl
stc
mull
inc
and
mov
dec
push
lcall
add
jge
dec
dec
or
arpl
pop
push
in
lods
lcall
lret
outsb
or
sbb
in
jle
je
in
jbe
add
roll
cmp
popa
mov
mov
jb
inc
aas
sub
add
cmpsl
adc
sbb
insl
and
cld
and
pop
mov
ja
dec
mov
and
inc
lcall
dec
push
sti
lret
rorl
aas
push
jno
in
fisttps
call
leave
mov
scas
je
adc
sub
pop
loop
push
push
fisttpl
mov
cmp
fbld
mov
xchg
mov
inc
cmp
outsb
out
inc
cmc
js
popf
jg
out
inc
or
sbb
cmp
movsb
adc
cmp
and
cmp
xlat
fwait
cmp
popa
adc
fs
mov
xor
shll
je
cmpsb
jg
leave
movsb
and
sbb
outsl
jbe
test
stos
and
subl
fidivl
outsb
scas
mov
outsb
outsl
inc
cmpsl
jmp
cmc
jo
arpl
bound
mov
pushl
inc
les
push
fiadds
stos
xor
xchg
subl
fsubrs
lods
inc
add
out
hlt
jbe
jbe
pop
jg
xor
cmp
inc
lods
in
mov
imul
insb
popa
jb
lea
std
mov
scas
cmp
leave
repz
xchg
or
popf
mov
test
je
push
iretw
cmp
inc
test
pop
mov
ret
into
xchg
mov
jge
loope
push
pop
cmp
mov
adc
rorl
pop
jmp
and
dec
mov
adc
jae
pop
ret
call
out
mov
or
mov
inc
out
ret
movsl
cmp
enter
imul
mov
shr
cmpsb
inc
inc
push
gs
scas
sbb
pop
or
fmul
inc
call
cwtl
out
push
inc
xchg
mov
js
push
sbb
inc
lahf
sahf
cs
cwtl
or
cmpsl
inc
pop
shll
sub
inc
call
rcr
fcomps
xchg
mov
jmp
mov
out
insb
mov
test
jg
or
dec
mov
fistpl
or
inc
push
push
testl
xor
shll
push
push
pop
mov
shrb
jno
cltd
pop
clc
mov
and
sub
insb
in
mov
les
xor
push
gs
adc
aad
pusha
ret
test
jb
or
xor
cmpsb
cmp
rcrl
int
xchg
fs
ret
mov
cmp
out
mov
in
mov
mov
sub
shr
aas
add
dec
push
jmp
sub
iret
cmp
mov
scas
mov
jnp
es
xor
xchg
rcrb
test
sarl
or
lods
sti
push
adcb
scas
sub
xchg
out
int3
mov
add
sub
pop
jmp
aas
shrd
and
jp
mov
mov
pop
xchg
clc
xor
sbb
clc
das
in
jnp
add
mov
movsb
in
sub
lea
aas
popf
stos
hlt
adc
and
jmp
mov
nop
lds
mov
mov
pop
movsl
loope
xor
xchg
mov
mov
inc
call
mov
fldenv
inc
xor
pop
outsl
xchg
mov
pop
push
jge
pop
mov
mov
stos
cwtl
lret
mov
les
push
sub
xchg
or
std
jp
in
movsb
insb
dec
xchg
adc
or
dec
lea
fpatan
sti
popf
ja
test
xchg
mov
add
loope
mov
or
stos
pop
fwait
pop
cmp
inc
mov
sub
out
xchg
dec
sub
mov
sub
insl
test
sbb
lds
jge
popf
push
pop
add
out
lahf
into
sbb
push
repnz
sub
cltd
pop
mov
xorl
loope
gs
cwtl
pop
lods
add
mov
add
cld
fwait
pop
dec
add
aas
pop
mov
cmp
and
fsubs
inc
dec
dec
imul
std
jecxz
xor
mov
or
mulb
negb
inc
test
popa
jge
repnz
ficoms
xorl
mov
rol
sbb
jmp
rcrl
or
mov
out
push
sub
je
lret
movsl
mov
inc
push
loop
inc
adc
loop
stos
mov
mov
adc
mov
and
pop
pop
das
pop
enter
cmp
push
aam
sub
push
in
pop
dec
pop
xor
mov
movsb
fsubl
jge
jnp
push
movsb
xlat
je
cmpsb
js
mov
pushf
out
mov
xchg
mov
scas
pusha
sub
repnz
hlt
outsl
js
or
xor
rcrl
fwait
and
fistps
icebp
or
xchg
mov
dec
mov
std
es
stos
aam
pop
test
movsb
xchg
push
sub
cld
push
and
sti
call
fdivrs
outsb
xchg
js
mov
pop
out
negl
dec
test
xchg
jg
popf
mov
fisubl
cmp
push
push
xor
sbb
iret
pop
cwtl
out
push
push
ljmp
jnp
xorl
imull
cwtl
out
add
testb
cltd
imul
pop
push
push
or
jbe
add
movsb
addl
push
mov
and
sbbl
or
in
xchg
sbb
std
fsubp
push
pop
cmp
adc
out
push
cltd
inc
insl
dec
xchg
push
pop
xchg
fcoms
pop
jecxz
xchg
lret
mov
into
jl
mov
pop
test
inc
sub
jmp
add
jns
add
mov
xchg
cs
sahf
icebp
aam
mov
xor
xchg
cmc
jae
push
pop
inc
lret
outsb
aas
enter
out
xchg
jl,pn
push
movsb
aas
xchg
scas
movsl
movsb
es
mov
clc
ds
addr16
sbb
test
push
stc
popa
cltd
fimull
mov
jg
adc
mov
add
jb
cli
cmpsl
test
xor
test
push
lret
xchg
mov
dec
int3
aas
cmpsb
push
and
pop
xchg
aad
jns
fimuls
popf
adc
dec
stc
cwtl
dec
std
ljmp
insl
jp
mov
daa
roll
adc
negb
mov
pop
mov
repz
push
pop
inc
mov
aaa
and
jmp
cmp
les
les
cmpsb
mov
mov
mov
fisubrs
divb
out
adc
pusha
push
sub
jecxz
jbe
mov
xor
cwtl
add
mov
sub
push
pop
in
aas
xchg
enter
or
xchg
xor
sbb
fcmove
push
jnp
and
mov
insl
cli
inc
jns
cmpsb
in
cmp
lock
bound
in
lock
mov
rorl
rolb
in
dec
add
popl
inc
ret
push
dec
ss
lret
ret
mov
je
xchg
test
and
mov
sub
jl
bound
outsl
lods
mov
js
shll
int
push
mov
call
outsl
push
std
xor
cmp
mov
mov
insb
insb
jle
icebp
xlat
push
sbb
push
cs
fimuls
scas
inc
imul
je
mov
mov
push
icebp
orl
or
pop
dec
lock
xchg
dec
pop
mov
mov
out
aas
clc
or
pop
xlat
stos
stos
fwait
adc
sub
jg
inc
push
jecxz
mov
mov
xchg
mov
insb
mov
add
stos
rclb
ss
mov
outsb
adc
andl
push
and
js
dec
fwait
movsl
and
push
xchg
dec
sbb
aas
push
loop
cli
lcall
jbe
mov
inc
cmp
out
push
sbb
arpl
fcmovbe
xchg
das
repnz
jb
into
test
movsb
movsb
mov
rcr
jnp
mov
ja
fidivs
mov
pusha
push
jge
lret
xor
outsb
call
andb
dec
fwait
and
scas
dec
mov
scas
sbb
jmp
jmp
cmpsb
out
addb
ficomps
aas
adc
ja
xor
jb
xchg
repnz
push
sub
movsb
das
cltd
pushf
inc
mov
mov
inc
repz
fwait
xor
in
mov
shll
test
sarl
js
mov
mov
xor
jnp
mov
adc
or
sahf
push
fdivrl
sbb
std
inc
push
mov
ljmp
sbb
insl
scas
xor
sbb
mov
cmp
mov
inc
or
nop
push
je
insl
xchg
adc
lock
xchg
in
lahf
adc
mov
sbb
cmpb
ds
stos
fcomps
or
dec
movsb
bound
ja
hlt
gs
insl
mov
jno
mov
aas
pusha
adc
jne
cmp
push
or
mov
sbb
in
stc
icebp
les
inc
flds
test
mov
pop
dec
xor
dec
cmp
pop
push
rcl
cmp
shr
lods
imul
mov
sbb
mov
addl
push
jae
test
pop
inc
nop
andl
adc
loopne
iret
mov
in
lahf
test
mov
dec
insb
or
add
mov
mov
movsl
jbe
push
cwtl
cmp
inc
roll
sbb
jb
bound
fwait
inc
mov
dec
ljmp
jb
hlt
cwtl
std
xor
sbb
pop
loopne
cwtl
sub
cld
or
lahf
lods
mov
int3
in
add
mov
mov
fwait
xor
xchg
push
push
adc
dec
push
xchg
nop
push
mov
sub
mov
sub
sub
jecxz
out
insl
mov
fisubl
lock
mov
xor
and
add
and
cmpsb
jle
mov
pop
cwtl
inc
ficoml
adc
adc
pusha
sub
push
push
movsb
push
mov
cld
mov
sub
leave
bound
aas
mov
cmp
mov
inc
loop
adcb
adc
and
dec
insb
sbb
inc
ja
pop
push
pop
sub
imul
ljmp
sbb
cmpsb
jnp
stos
jne
daa
jae
adc
xor
shlb
popf
in
xchg
fcmovne
push
cmc
loope
or
jo
subl
inc
and
daa
mov
sub
and
outsb
sub
ljmp
fldl
shrb
cltd
loopne
je
cmp
push
jle
sti
bound
adc
xchg
sti
pop
out
xor
rorb
repz
jno
pop
jns
xchg
jecxz
push
jae
out
xor
adcl
inc
cmp
jae
imul
shrl
loope
aad
sbb
pushf
add
enter
repz
call
in
cmp
les
add
sbb
push
adc
pop
icebp
test
sti
mov
mov
out
inc
sbb
mov
mov
cld
sub
xlat
mov
xor
pop
rcll
ds
and
lcall
das
mov
lret
pop
pushf
xchg
dec
or
jp
push
aas
scas
mov
jmp
mov
testl
cwtl
add
out
mov
orl
lock
call
sbb
lods
xor
jno
or
mov
ret
xchg
std
js
dec
filds
jmp
out
sub
fcoms
pop
mov
mov
cli
imul
mov
pushl
xchg
leave
xlat
scas
pop
loop
adc
cld
jg
mov
push
fcomps
push
fistpl
inc
cmc
lds
mov
xchg
mov
int
xchg
out
sbb
cmpl
or
push
les
pop
add
cmc
cmpsl
stc
jg
pmaddwd
adc
cmp
ja
das
dec
push
iret
adc
ja
pusha
mov
cmp
xchg
pop
xlat
stos
xor
mov
in
gs
adc
in
andb
ds
repnz
faddl
xchg
icebp
shll
ljmp
xor
aas
mov
mov
or
mov
shrb
lret
fnsave
mov
or
pop
cltd
mov
into
testb
mov
and
arpl
cmc
push
mov
pop
jno
push
dec
cld
xchg
xor
mov
notl
mov
bnd
stc
mov
adcb
and
test
repnz
pop
in
lods
mov
lea
or
test
cmp
inc
xchg
rcr
mov
movsl
sbb
add
mov
icebp
scas
jge
cmp
push
dec
inc
mov
adc
roll
dec
xchg
sub
in
push
push
in
fmul
pop
mov
stos
pushf
into
inc
fwait
xor
xchg
lret
push
mov
pop
sub
and
xor
mov
aam
shlb
dec
fsubs
push
aad
pop
aaa
cmp
sbb
or
cwtl
push
ret
push
pop
cld
ljmp
xorb
jl
sbb
mov
std
sub
lahf
jp
jp
cwtl
cmp
pop
inc
inc
scas
mov
in
push
cmp
stos
ja
ret
xchg
ds
cmp
cld
sbb
out
scas
das
ss
insl
mov
jnp
mov
data16
dec
dec
fildll
shll
into
xchg
sti
xor
je
jge
iret
dec
aaa
stos
add
jnp
lods
aad
lahf
dec
out
sub
mov
xchg
push
out
and
pop
lds
jmp
fisubs
mov
xchg
scas
xor
clc
test
movsl
lret
fisubrs
lcall
ljmp
sbb
ds
fimuls
mov
scas
sub
in
and
aas
mov
or
cmp
fisubrl
cmpsl
test
lock
outsl
fmull
popf
xor
loop
das
xchg
push
inc
shr
movaps
roll
xlat
lcall
push
dec
xchg
inc
jo
sub
and
push
cmp
cs
fcomi
xchg
mov
push
xor
cmp
pusha
icebp
ficoms
sbb
adc
xchg
movb
jl
jg
aaa
and
dec
or
stc
gs
sbb
cwtl
pop
stc
mov
adc
jo
mov
fbstp
sub
pop
notb
mov
cmp
inc
xor
les
test
cmp
sbb
mov
shlb
rol
push
insb
daa
out
mov
xchg
outsl
dec
rcrl
or
pop
aad
mov
jg
mov
sbb
jb
mov
push
fwait
repnz
adc
arpl
jle
popl
jmp
outsb
or
pop
sahf
data16
lds
jno
jle
adc
xchg
pop
inc
in
cmc
leave
xchg
add
mov
mov
fiadds
cmp
das
shll
aaa
dec
jnp
ret
cmp
lea
mov
jo
addr16
and
sub
or
pop
mov
inc
or
dec
ret
hlt
sub
data16
lods
add
mov
enter
frstor
xor
lcall
cmp
push
dec
out
sub
test
test
ds
mov
push
popw
push
push
ret
je
sub
int
push
lock
and
jnp
xchg
mov
pop
lock
dec
jge
shl
aad
or
test
cmp
pop
ljmp
scas
nop
mov
cmp
aaa
dec
xchg
inc
cmp
repnz
stc
push
xchg
int
das
sbb
incb
loopne
mov
nop
lea
sbb
mov
or
jno
cltd
gs
pop
xor
mov
pop
dec
loopne
movsb
rcll
mov
pop
jno
rol
popf
js
mov
nop
and
les
sbb
scas
mov
mov
mulb
sti
fldt
into
cmp
add
in
sbb
mov
mov
repnz
les
cld
test
out
int3
sti
and
cmp
scas
xchg
push
dec
es
lret
movsb
scas
in
insl
cmp
pop
popa
xor
sub
aas
add
pop
fwait
mov
cmpb
jae
test
pop
inc
orl
jl
xor
inc
insb
xlat
push
jbe
sti
push
mov
jb
or
into
pop
or
insb
cwtl
and
mov
aad
int
rorl
ret
outsl
out
ja
push
mov
loopne
sahf
movsl
push
insb
pop
jae
test
loop
push
cmp
notl
sub
stc
pop
dec
sub
hlt
cmp
push
pop
cld
popa
mov
xchg
stc
nop
movsl
cmp
push
mov
inc
cltd
dec
jb
pop
pusha
out
adc
and
les
mov
fcomps
lret
or
pop
mov
in
lods
or
inc
ljmp
sub
or
jp
cmpsb
sub
or
add
aad
xchg
pop
and
iret
mov
pop
mov
mov
imul
lahf
sbb
lods
jb
int3
inc
sbb
or
ret
mov
sti
insb
sub
andl
mov
call
xchg
popa
pusha
adc
mov
sbb
jmp
inc
jne
sahf
ja
inc
inc
jl
xchg
cmpb
mov
cmpsb
mov
repz
int
push
xchg
dec
sub
xchg
je
enter
stos
or
fcmovnbe
inc
inc
add
dec
enter
jmp
hlt
leave
incl
add
push
mov
je
mov
aam
insl
sbb
icebp
add
fcmovu
sti
imul
mov
push
test
nop
out
loope
movsb
loop
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
in
mov
jl
pop
jl
push
and
movsb
add
adc
mov
sbb
out
ret
xor
aaa
jae
aam
popl
aas
popa
push
movsl
or
or
mull
or
pmullw
pop
cmpsb
pop
es
mov
pop
mov
cld
lods
pop
aam
push
mov
add
pop
add
mov
out
int3
int3
in
mov
sarl
pop
lods
dec
xor
les
nop
cs
fldl
mov
mov
int3
icebp
incl
jecxz
cwtl
mov
je
lock
jae
push
fwait
ljmp
gs
xchg
subb
mov
sbb
subl
repnz
sub
jmp
out
push
popa
sbb
adc
fs
sub
out
or
cmp
mov
xchg
lea
icebp
mov
add
lea
popa
ljmp
int
and
loope
out
les
and
addb
push
pop
rcrb
xor
out
adc
imul
add
dec
mov
mov
ja
cmp
jle,pn
cmpsb
andl
xor
es
mov
sbb
fiaddl
sub
sub
addr16
push
cmp
push
cmpsb
push
sbb
aam
xor
mov
std
xor
adc
jbe
push
enter
out
xchg
in
lds
jo
mov
add
stos
and
rclb
loope
loope
dec
notl
mov
or
pop
test
cltd
lret
mov
jbe
test
out
pop
jp
mov
ret
mov
fsubs
cmpsl
xchg
push
gs
add
mov
add
ds
inc
scas
ss
add
xchg
push
pop
les
adc
push
mov
inc
xor
and
or
ljmp
aam
fstpl
clc
arpl
lea
xor
jg
and
push
mov
push
dec
and
out
push
and
iret
repz
cmpsl
adc
xchg
xchg
dec
mov
scas
inc
aam
or
pop
repz
xchg
push
cmp
fs
das
push
pusha
rol
fiaddl
push
jnp
adc
orb
xchg
rcll
dec
xor
int
cld
popf
push
dec
fistpll
jb
cwtl
call
psrad
mul
or
mov
fcompl
push
cmp
push
jno
popf
sub
and
inc
dec
pop
sub
outsl
insb
pusha
or
cmp
gs
popf
add
fldl
xchg
or
sbb
xchg
add
mov
dec
push
mulb
cmp
lods
mov
pop
jne
mov
jae
loopne
ret
int3
adc
loop
xor
jmp
lcall
adc
ficoms
pop
movsb
in
pusha
push
jns
dec
iret
jl
test
pop
jae
mov
xchg
inc
adcb
test
dec
pop
or
gs
and
cld
or
sbb
repnz
xor
shrb
fs
xor
cmp
jae
inc
xchg
leave
xchg
lahf
aad
jbe
or
sub
cwtl
mov
mov
stos
push
lea
popa
loopne,pn
jnp
push
bound
lods
mov
xor
lods
pop
daa
in
ds
negl
es
das
inc
mov
fidivrl
push
pop
lea
test
icebp
aaa
out
je
xchg
xor
repz
fadd
sbb
aam
sub
mov
or
aas
popl
cmc
frstor
lret
mov
dec
inc
sbb
loope
mov
cmp
mov
out
in
sub
sub
adc
sbb
pop
dec
repz
rol
push
inc
xor
js
sub
sar
jns
inc
mov
data16
mov
outsb
and
adc
subb
adc
jno
xchg
negl
mov
jp
mov
adc
roll
sti
popl
addl
mov
js
pop
imul
inc
enter
bound
pushf
std
test
mov
jge
push
add
sbb
xchg
and
jbe
ficompl
push
adc
xchg
jmp
and
lock
adc
aas
xchg
xchg
insl
scas
and
in
std
mov
sbb
sub
lea
adc
lea
loop
call
inc
into
or
lods
or
into
inc
sub
sbb
sti
loope
and
arpl
adc
pop
adc
xor
push
pusha
jp
xor
fucomp
mov
fsubl
shl
leave
insl
lea
push
mov
loopne
xor
adc
ret
mov
adc
jg
mov
pop
testb
outsl
sbb
xor
mov
sbb
fldt
xchg
or
xchg
xchg
push
or
lock
cwtl
stc
mov
ret
cli
adc
jno
out
scas
cmp
or
pop
pop
cmpsb
pop
or
sub
sbb
insb
lret
mov
outsb
push
push
mov
mov
xchg
shlb
aam
jae
mov
cmpsl
repnz
gs
inc
je
data16
out
mov
fldt
cs
sbb
es
int
jae
lcall
push
mov
rcr
inc
pop
adc
aaa
and
jmp
mov
ss
out
out
cltd
scas
call
out
lcall
outsl
jb
adc
arpl
mov
mov
and
mov
rorl
fmul
ss
jg
or
decl
sbb
popf
dec
add
and
out
push
into
pop
jmp
jle
push
call
xor
add
in
mov
dec
cmp
shrl
iret
mov
stc
push
jnp
jnp
cmpsb
jbe
add
in
push
cwtl
mov
mov
jnp
fstpl
lret
icebp
mov
mov
cmc
popa
fsub
insl
mov
sbb
adc
inc
inc
xor
adc
cmp
daa
cmpsl
adc
sbb
ret
stos
fcoms
push
out
sbb
cmp
lds
xor
mov
lods
inc
xchg
pop
adc
sub
push
pop
fisttpl
cmp
xorb
je
jecxz
fucom
add
xorb
fisubl
adc
dec
in
movsb
lods
stos
fdivs
jge
adc
mov
cltd
xor
iret
or
es
push
inc
pop
mov
int
adc
mov
and
mov
push
into
insl
test
pop
fisttpll
mov
jle
imul
pop
shlb
lahf
sbb
cs
scas
fmul
push
or
out
sub
sub
jbe
push
xor
mov
outsl
repnz
adcl
cmpsb
mov
or
fisttpl
inc
inc
cwtl
push
jg
popa
loope
les
enter
mov
cltd
movsl
jnp
ret
mov
cmp
jg
out
jg
push
int3
int3
cmp
sbb
xor
fldenv
lds
scas
lods
jp
sarb
pop
out
jb
cwtl
gs
test
ja
push
dec
aaa
and
repz
ds
mov
arpl
jge
mov
sbb
repnz
rclb
mov
push
scas
mov
adc
lods
or
repnz
inc
push
add
cmp
adc
cmp
dec
fs
jae
lock
and
mov
dec
addl
inc
pop
les
shr
inc
mov
in
rolb
rcrl
adc
and
aam
xor
add
out
sub
dec
movsl
imul
sub
out
jg
add
mov
pop
and
push
inc
cli
sbb
sarl
pop
aam
sub
fsubl
xor
xchg
adc
mov
not
je
push
je
daa
mov
popf
loope
in
mov
inc
mov
jbe
add
sub
shll
cmp
test
xchg
outsb
xchg
hlt
push
out
imul
out
mov
push
test
ffree
push
and
aaa
or
loope
fmul
inc
fimull
push
cmp
aad
jg
scas
mov
lods
or
fwait
xor
fildll
cld
dec
vsubpd
pop
mov
and
xchg
fstpl
adc
stc
hlt
gs
add
sub
and
push
dec
es
outsb
add
cltd
dec
scas
mov
scas
out
sti
sbb
test
leave
xor
add
xchg
in
or
pmulhw
movsb
mov
test
test
lcall
dec
rcrb
stos
std
ja
loop
or
std
scas
aam
inc
in
fstpl
push
or
dec
clc
in
call
fidivs
adc
push
lods
lret
pop
inc
mov
or
mov
mov
hlt
push
mov
sub
cmp
lock
mov
gs
or
loope
dec
sti
cli
xchg
std
addr16
mov
in
dec
pushf
adc
jo
pop
in
out
mul
jmp
ror
cld
cmc
loope
cwtl
out
arpl
ja
jbe
jmp
jbe
inc
fbld
push
mov
mov
stos
sbb
rorl
push
ror
mov
aam
mov
mov
pop
or
ror
pop
jno
test
add
cmp
in
shll
and
bound
xor
adcb
pop
mov
and
xlat
aad
test
aam
adc
xor
fstpt
push
xor
scas
push
movsl
push
loopne
in
and
ret
cmp
das
inc
adcl
jb
scas
std
pop
in
adc
notb
out
and
js
fsubs
add
pop
ret
scas
call
std
loop
xchg
cs
xchg
push
stc
hlt
divl
ss
jecxz
sub
jns
icebp
stos
insl
cmc
xchg
test
mov
mov
adc
popa
insb
les
ret
aas
mov
pop
repnz
stc
pop
in
fsubs
mov
sub
sarl
jle
sbb
xchg
jnp
cli
clc
or
test
mov
and
pop
or
in
sbb
sar
test
sbb
stc
and
cmp
adc
lods
push
in
fiaddl
ss
adc
jmp
mulb
pop
fdivp
sub
divb
pop
push
push
orb
in
mov
mov
adc
xchg
push
sub
loop
push
imul
stc
fdecstp
mov
or
adc
mov
sti
cwtl
adc
repnz
add
cmp
fdivl
dec
mov
mov
jno
movsl
and
fadds
arpl
aam
lcall
mov
xchg
dec
or
hlt
sti
jae
cltd
loop
sub
mov
adc
stos
xor
imul
jns
push
daa
icebp
stos
adc
addl
lret
daa
repnz
xchg
push
cmc
adc
xchg
orl
cmp
mov
movsb
inc
mov
push
loop
stos
dec
cmp
cmpsw
jmp
fwait
mov
xchg
add
add
inc
lcall
lea
cmpsl
xchg
cmp
cwtl
fstpl
lds
movsl
jno
sub
pop
xchg
inc
adc
pop
pusha
mov
xor
cmp
xchg
xchg
std
jmp
repz
shll
mov
xor
into
ficoms
mov
rcrb
divb
push
sti
in
cmp
shlb
lods
popf
add
add
popa
mov
wbinvd
fbstp
js
pop
fimull
int3
int3
dec
ja,pn
sub
push
xlat
xor
add
bound
pusha
imul
xchg
orl
push
add
xor
cmp
sbb
mov
or
inc
mov
adcb
imul
fwait
ljmp
in
xchg
int
xchg
pop
shll
ret
dec
pop
jo
xor
fs
cmp
push
jmp
int3
dec
mov
inc
in
cli
loope
or
insl
mov
pop
test
add
push
sub
popa
push
fbstp
sbb
mov
pop
mov
cmp
iret
lds
aad
or
dec
add
aam
sbb
push
loopne
aaa
les
out
in
loop
fcomi
movl
shr
mov
dec
and
in
cmp
cmpsl
pop
cmc
push
sahf
sbb
call
orl
jb
pop
cmc
xlat
jns
pop
mov
mov
into
movsb
je
in
cld
sbb
outsl
cwtl
xor
xchg
xchg
mov
pushf
pop
cmp
roll
pop
rorb
decl
sub
sub
testl
pop
dec
push
mov
push
fisttpll
cmpsl
test
pop
add
aas
xchg
int
sub
shrl
rcl
rclb
sub
dec
fisttps
push
dec
adc
add
call
mov
jecxz
jbe
std
pop
cmp
out
inc
ret
in
clc
and
es
add
iret
rolw
xchg
pop
xchg
dec
daa
test
dec
std
and
pop
push
xor
scas
int3
push
push
outsb
mov
dec
aad
or
or
push
jb
mov
aaa
imul
xchg
mov
enter
loopne
stos
inc
mov
pop
ret
or
cmp
lds
mov
xchg
jno
lock
cmpsb
xor
mov
dec
mov
push
xor
out
adc
scas
nop
add
sub
test
dec
dec
add
pop
pushfw
fildll
fldl
xchg
hlt
inc
outsb
stos
clc
ret
jo
loope
pushw
pop
adc
push
mov
call
in
iret
sahf
fiaddl
dec
ret
ds
mov
sbb
or
int3
jnp
pop
cmp
jecxz
adc
popa
insb
cmc
and
adc
sti
and
sub
or
imul
add
sbb
shrl
not
sbb
loope
lods
shlb
pop
mov
jp
inc
cltd
cmpsb
aaa
cmpsb
and
sub
dec
adc
cmp
mov
jns
xlat
mov
pop
mov
pop
mov
push
or
mov
sbb
in
adc
xchg
mov
sbb
mov
xorb
aaa
clc
ss
cmpsl
je
and
out
in
es
es
xlat
mov
sahf
xor
mov
xchg
inc
or
fimull
jmp
fsts
das
jmp
sub
xor
mov
push
xor
pop
lahf
inc
xchg
ja
out
pop
xchg
mov
jno
adc
mov
push
sbb
push
pop
sahf
mov
popa
test
dec
push
mov
sub
inc
mov
jae
aas
outsl
call
insl
or
int3
xorl
lret
xchg
adcl
insb
or
adc
ficoms
cmc
int
sub
fbld
lods
add
add
outsl
idivb
cmp
ss
dec
outsb
enter
mov
jmp
push
sbb
sahf
inc
fmul
ds
fildl
pop
cmp
inc
mov
add
cmp
in
sbb
fs
adc
test
lods
jge
pushf
roll
fcmovnbe
loope
aaa
mov
cli
jb
inc
mov
fstps
jae
into
pop
ja
cltd
dec
dec
push
dec
lods
inc
adc
xor
popf
ja
adc
scas
andb
test
inc
dec
sbb
pop
xchg
lods
mov
imul
jo
in
xchg
or
jns
movsb
jge
xor
lods
enter
mov
dec
and
in
testb
sahf
xchg
mov
mov
push
jmp
mov
arpl
mov
sahf
mov
mov
push
push
into
fisubs
out
leave
sbb
les
jl
mov
jecxz
mov
xchg
bswap
push
lahf
into
out
pop
arpl
out
add
push
in
xlat
loopne
fimull
xchg
and
inc
andps
jnp
dec
sti
cmc
out
jge
sti
add
mov
and
ss
aaa
rclb
push
mov
and
es
adc
xchg
pop
push
jb
lcall
insl
inc
or
in
stos
pop
pop
or
mov
mov
push
or
mov
das
test
cmpsb
mov
mov
lds
faddp
push
mov
daa
adc
bound
call
xchg
lock
stos
and
jmp
sub
imul
xchg
das
in
icebp
ds
xor
cwtl
xor
inc
movups
jmp
nop
inc
push
push
insb
mov
push
inc
push
mov
ljmp
xlat
nop
aam
push
sub
scas
mov
aad
sti
xor
push
test
les
push
push
stos
repnz
cmp
dec
adc
in
inc
sub
jne
ja
rcrl
xchg
mov
and
incb
inc
adc
inc
dec
js
outsb
jae
test
pop
and
test
sbb
ret
pop
pop
add
pop
push
mov
adc
icebp
push
jo
push
mov
icebp
mov
lods
leave
or
iretw
test
es
decb
fs
test
in
loopne
dec
push
arpl
fwait
int3
push
insl
aaa
test
addr16
inc
or
mov
jb
ss
in
dec
mov
adc
xchg
xorb
outsb
rcl
push
add
xor
adc
roll
mov
add
je
and
mov
cmpsl
push
lds
cmp
lahf
push
push
pop
imul
lss
imul
or
xchg
frstor
cmp
repnz
dec
push
mov
xchg
cmp
add
jb
shrl
adc
test
imulb
imull
pop
stos
insb
sbb
xchg
mov
cltd
jo
int3
scas
add
adc
push
aas
mov
out
jp
mov
outsl
stos
xchg
mul
mov
repz
mov
mov
cmpsb
xchg
imul
out
sub
xchg
jg
xchg
insl
mov
js
mov
mov
daa
inc
sub
or
or
add
repz
std
loopne
sub
mov
mov
arpl
in
out
rcrb
call
xlat
xchg
ficomps
lret
cmpsl
lahf
sub
pop
sti
mov
inc
shlb
mov
xor
jle
out
mov
lret
jo
pop
loope
bound
push
dec
or
test
add
dec
es
jmp
push
inc
and
test
mov
xchg
insb
lcall
and
cmp
sub
and
data16
inc
jp
outsb
pop
inc
dec
aam
push
jp
ljmp
xorl
jmp
das
fwait
and
mov
dec
jns
ja
enter
pop
fcompl
test
ret
test
nop
les
shrb
jmp
sbb
lods
dec
fildll
xor
fucom
mov
push
fwait
xchg
push
push
stos
pop
inc
cmp
stos
roll
movsb
xchg
mov
mov
movb
outsl
push
pop
enter
dec
arpl
mov
inc
in
popa
lahf
insb
rcrb
cmp
adc
lahf
sbb
or
push
arpl
xor
cmp
lds
push
cmp
stc
daa
scas
sub
aaa
enter
add
movsl
test
jne
mov
lcall
push
cmp
xor
cmp
lea
cld
mov
les
testb
xor
sarb
mov
gs
in
inc
xchg
xor
push
in
cmp
jno
push
mov
jne
cmpsb
jl
rorb
xchg
mov
insl
imul
inc
call
aam
add
jae
arpl
ficoml
dec
xor
mov
iret
add
xor
cwtl
js
pop
sub
sub
dec
jne
push
xchg
cs
stos
push
add
clc
lock
xchg
cs
push
xchg
lock
les
ds
dec
les
imul
pop
popf
inc
mov
dec
push
ficompl
inc
in
and
stos
enter
pop
adc
fists
test
bound
cmpsl
shrl
ret
popf
stos
mov
push
jo
pop
pop
aaa
loop
imul
xor
jo
lods
mov
sbb
inc
out
pop
and
jnp
push
push
mov
hlt
cmp
add
push
std
inc
and
sahf
jmp
hlt
mov
pop
rcrl
test
jge
out
ret
dec
in
add
push
rcr
fcomp
stc
or
ja
lret
fildl
sbb
scas
mov
inc
ljmp
mov
xchg
insb
outsb
insl
xchg
push
sub
icebp
outsl
mov
loop
sub
add
sbb
shrb
insb
mov
pop
out
and
push
inc
movsl
inc
jb
jmp
jle
daa
stc
push
in
or
clc
out
cwtl
or
repnz
mov
mov
jp
cmpxchg
scas
jo
mov
sub
xchg
cli
mov
dec
inc
ret
mov
iret
mov
test
inc
inc
add
cmp
mov
push
fstps
xchg
movsb
lock
mov
push
ljmp
or
jae
out
int3
mov
inc
push
cmc
cmovl
dec
sbb
mov
loope
test
xchg
lret
inc
cmpsb
cmp
adc
lcall
mov
and
cltd
add
lret
fnclex
and
mov
shl
iret
sub
popf
jae
cmc
xchg
or
ror
push
lea
and
mov
mov
mov
clc
jle
sbb
das
clc
mov
cmp
cmp
pop
add
cmp
loopne
push
cld
shl
xchg
stos
fcompl
addl
filds
idivb
jle
xchg
pop
adc
add
jl
adc
cli
cmc
test
cmp
push
sbb
mov
add
pop
xchg
ja
call
data16
outsl
andl
jbe
push
xor
mov
xchg
cmpsb
loope
jl
xlat
ljmp
arpl
notl
test
mov
test
jo
les
adc
sub
fwait
sbb
fists
aam
sbb
push
aad
jg
fdivl
mov
call
rcll
jbe
push
sub
sbb
mov
enter
nop
aad
pop
push
pop
idivl
clc
dec
jo
jecxz
popa
push
mov
sub
fstl
notb
mov
jmp
icebp
mov
dec
mov
xlat
dec
test
out
sub
lcall
lcall
lods
add
push
imul
mov
dec
in
call
out
xchg
dec
lock
std
cmp
mov
idiv
in
sub
jle
push
push
sbb
out
mov
cmp
repnz
jmp
out
inc
push
adc
dec
fists
dec
movsl
or
outsl
mov
ljmp
xchg
xchg
pop
and
xor
pushf
sahf
mov
mov
or
in
shlb
enter
icebp
out
sahf
jb
pop
sbb
or
pop
mov
jb
or
pop
addl
ljmp
push
cld
insb
xchg
xchg
push
xchg
jmp
cmc
addl
mov
add
movsb
aad
dec
xor
test
sbb
push
loope
out
pop
mov
lods
mov
or
pop
out
mov
mov
into
cmp
nop
cmp
leave
cmp
push
xor
lret
jne
adc
int3
sarb
pop
lds
mov
or
stc
jb
jns
jo
xchg
sub
sbbb
sub
loopne
xlat
das
sbb
enter
push
dec
mov
das
jae
setle
shlb
stos
xor
int3
jno
sub
das
sub
mov
jnp
icebp
divb
or
mov
mov
cmp
xor
cmp
pop
xchg
xor
xchg
xchg
xchg
cmp
add
dec
outsl
cmp
push
daa
xchg
push
pop
and
or
shrb
jp
fldcw
lcall
push
jnp
and
pop
adc
push
jl
in
add
jbe
and
xchg
mov
adc
cs
rcll
xor
out
push
addl
sbb
jns
pop
mov
sub
pop
push
clc
cmp
iret
sbb
test
pop
pop
sti
push
xlat
jp
lods
mov
inc
divl
pop
sbb
sbb
bound
push
fistpl
push
in
vpshufhw
mov
cs
dec
xchg
mov
adc
cmp
mov
je
in
add
push
cmp
pop
xor
cmp
lock
xor
sbb
xor
push
adc
add
mov
stos
lret
clc
jns
cmpsl
or
jno
push
ljmp
xchg
out
add
stc
imulb
popf
or
dec
push
mov
stos
mov
mov
cmpsl
iret
jmp
xchg
shl
rcrl
aad
rolb
sbb
mov
int
jmp
in
roll
movsb
js
cmp
fstl
cs
ljmp
loop
or
ds
ret
xor
scas
je
dec
lret
rorl
or
sub
into
push
fstl
movsl
jecxz
into
fisubrs
test
and
inc
leave
push
jmp
ret
dec
mov
sti
and
mov
fildl
cmp
mov
outsl
iret
fcomps
inc
sub
mulb
adc
mov
adc
cmp
test
cmpsl
xchg
into
xor
add
ret
addl
mov
lret
aaa
push
mov
xor
nop
pop
jb
mov
rcrb
cld
push
fld
iret
pop
addr16
sbb
pop
call
les
xor
es
ficoml
mov
arpl
iret
sub
jo
mov
popa
in
dec
jae
mov
mov
jb
xor
xor
cmp
ljmp
mov
xchg
or
mov
mov
mov
fistps
mov
lock
lea
push
or
outsb
jne
cltd
adc
push
pusha
inc
je
mov
push
lock
nop
lret
inc
repnz
mov
int
jne
leave
cld
iret
jmp
jp
lods
xchg
sarb
adc
imul
jl
add
push
daa
aaa
out
sub
popf
xchg
movsl
or
mov
bound
ret
fstps
out
sbb
dec
adc
gs
aam
mov
aad
mov
int
adc
lods
pop
push
fwait
sbb
out
stos
js
jmp
and
or
mov
movl
push
mov
xchg
mov
cmp
and
repnz
aaa
add
cmp
and
sbb
test
cmp
mov
lods
xlat
rcrl
add
shll
sbb
sub
push
mov
pop
sbb
or
arpl
jno
out
mov
pop
ss
sbb
outsb
or
xchg
push
stos
das
fildl
and
jecxz
shl
in
mov
fcomi
notb
mov
out
icebp
in
sbb
cmp
icebp
jge
aam
movsb
outsb
or
and
lods
push
mov
mov
xor
cmp
ss
lss
cmc
loope
push
mov
fcomip
push
adc
cmp
xchg
mov
insb
pop
mov
and
int
push
cmp
push
roll
pop
hlt
mov
aam
xor
or
adc
sbb
clc
mov
aas
xchg
pop
fimuls
cmp
pop
pusha
lods
cmpsb
rorl
and
dec
jmp
sub
dec
xor
out
push
xchg
das
repnz
jo
xor
fnsave
call
test
loopne
sub
push
clc
jle
es
or
mov
xor
addr16
adc
jns
fcompl
clc
sbb
mov
cmpsl
mov
mov
test
or
orl
mov
cli
ljmp
mov
data16
out
pop
jecxz
jmp
sbb
mov
pop
fdivrl
cmp
mov
pusha
arpl
adc
xor
pop
das
loopne
or
sub
das
fcoms
imulb
pop
test
mov
int3
mov
std
iret
push
push
cmc
cmp
push
push
dec
andb
ret
icebp
scas
bound
es
or
jp
in
xchg
popa
cmpsb
cld
mov
sub
loopne
sti
sub
mov
lock
repnz
nop
inc
jno
inc
xchg
cli
out
pop
mov
mov
mov
fs
hlt
loope
dec
adc
sub
mov
pop
rclb
dec
popf
sti
mov
jb
mov
mov
iret
sbb
sbb
push
lahf
int
popf
adc
and
or
out
and
inc
mov
dec
hlt
adc
sahf
scas
push
call
mov
outsl
push
push
cmpsl
jle
addr16
jp
cmp
lods
add
scas
out
in
scas
orl
data16
and
adc
test
ljmp
mov
leave
iret
or
lods
pop
fbstp
mov
mov
mulb
cmp
pop
or
adc
pop
rcr
in
xchg
jns
aam
daa
scas
inc
mov
cmp
pop
fcmove
je
daa
test
adc
adc
xchg
push
outsl
ret
jmp
rorb
and
scas
mov
sub
jg
cmp
push
add
mov
cli
les
sbb
sub
push
les
clc
add
jmp
pusha
push
pop
orl
idivb
dec
shlb
rolb
adc
in
jns
es
xchg
repz
mov
lods
cmp
ljmp
pop
jnp
call
fldenv
lea
scas
sub
insb
sbb
cltd
xor
xchg
jg
and
push
jl
insl
xor
inc
sub
jmp
sub
mov
arpl
add
outsb
int3
arpl
jno
shlb
adc
out
pop
dec
sbb
push
prefetch
dec
imull
decl
cmp
pop
movl
lods
cmp
rclb
mov
popa
fsubp
addl
mov
pop
push
mov
ja
sub
in
xchg
rolb
fcmovne
jmp
mov
jb
and
iret
loop
lds
gs
fs
ret
sub
xchg
mov
mov
je
stc
cmp
adc
xchg
out
into
xor
in
pusha
pop
or
fimuls
bound
call
push
dec
jo
lods
pushf
mov
flds
inc
push
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
sbb
cli
lods
push
cmpsb
mov
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
