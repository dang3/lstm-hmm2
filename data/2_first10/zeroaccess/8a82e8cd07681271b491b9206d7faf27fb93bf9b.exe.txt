push
mov
sub
mov
mov
jmp
adcb
shrl
aas
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
xchg
fstpt
pop
sbb
cmpsl
or
jno
push
clc
loop
push
mov
adc
push
jns
pop
cmpsl
pop
test
add
inc
lcall
add
shlb
push
dec
mov
fldt
and
in
mov
inc
aad
sub
xchg
shll
and
add
aad
frstor
xchg
aaa
dec
ljmp
mov
sub
jmp
in
lret
roll
pop
daa
cmp
je
ret
jecxz
cli
cmp
inc
and
mov
push
bound
push
jnp
in
in
pop
push
cmp
and
out
or
and
stos
insb
jle
push
pop
dec
sarb
nop
mov
push
jnp
cmp
mov
into
and
icebp
mov
leave
fwait
jmp
rcll
pop
loopne
xchg
jbe
pop
inc
push
loop
mov
or
nop
pop
cmp
sub
jno
jnp
jbe
idiv
arpl
ljmp
aas
outsl
xchg
into
cld
cwtl
inc
jecxz
fs
lea
outsb
mov
or
mov
pop
popa
push
cwtl
out
cli
mov
lahf
or
mov
jo
lods
xchg
mov
stos
jle
mov
cld
jmp
push
xorl
jge
inc
xor
imul
xchg
clc
add
push
mov
daa
fcomip
ror
pushf
add
sub
inc
lcall
testl
pop
stos
mov
jne
xor
ucomiss
stos
adc
cmp
mov
shll
int3
inc
xchg
push
int3
xchg
xlat
cltd
in
mov
shl
icebp
fs
jmp
insl
ja
fdivr
or
xor
dec
lahf
inc
out
pop
jmp
out
repz
insl
xor
les
nop
ljmp
mov
sub
mov
mov
and
cwtl
cmp
mov
aad
test
mov
and
and
mov
movsb
ljmp
inc
dec
push
loopne
sub
aam
add
jp
inc
cmp
xchg
sub
pop
ss
stc
xchg
jmp
int3
addl
aaa
lds
add
lcall
fldcw
xchg
xchg
and
inc
sbb
and
dec
out
scas
in
cmp
or
or
pop
inc
shrb
xchg
ljmp
push
inc
jle
jmp
sub
cmp
test
pop
lock
lret
shl
sbb
jg
mov
fcomi
mov
fldcw
ja
icebp
mov
cmpsl
and
repnz
aas
icebp
pop
mov
andb
test
xchg
sbb
dec
or
cmp
sub
xor
mov
adc
popf
jge
jne
jno
add
and
cld
push
subl
popf
jl
jle
cmp
je
and
out
cmp
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
lds
outsl
jge
jle
add
jmp
sub
jnp
and
mov
movsl
bnd
js
pop
xchg
jbe
lods
jae
push
cs
aad
jae
and
or
xchg
push
and
dec
imul
dec
dec
push
out
or
push
icebp
push
jae
fs
lahf
pop
lahf
xor
sub
pop
mov
cmp
stos
aas
pop
stos
pop
loop
sub
shr
shlb
dec
and
loop
outsb
mov
popa
push
dec
fsubl
movsb
and
repz
or
fcompl
and
movsb
in
pusha
fstpl
pop
out
fdivrs
pop
lret
or
aam
and
xchg
std
into
rcll
xor
jl
sbb
stos
imul
cmp
add
lret
jo
cmpl
sub
and
lods
rorb
not
inc
push
outsl
fcoms
jns
repz
rcll
add
add
pop
testl
jmp
push
adcb
arpl
mov
insl
pop
mov
mov
jp
test
adc
inc
enter
mov
mov
lea
jecxz
sbb
add
or
push
jmp
sub
pusha
les
push
push
fsubs
and
sub
inc
leave
xchg
sub
sarl
xchg
mov
push
lods
movsl
jle
lret
jmp
cltd
and
rol
inc
inc
pop
mov
and
mov
jle
jbe
shlb
clc
mov
mov
cmpsl
add
movl
push
imul
lahf
sub
inc
jnp
add
aas
and
dec
fdivl
mov
notb
lret
or
scas
mov
pop
pop
xor
mov
das
das
jge
pop
cmp
mov
xor
mov
xchg
pusha
xor
push
mov
xchg
pop
mov
xchg
cwtl
xor
stos
or
rcl
repz
push
rcll
addl
inc
hlt
push
jmp
adc
or
jmp
pop
jge
mov
mov
sub
and
clc
test
sbb
jnp
push
pop
fdivrp
enter
jmp
lods
mov
xor
push
mov
sub
dec
cmp
inc
mov
in
xchg
fistpl
nop
inc
xor
repnz
adc
stos
insl
adc
dec
or
jmp
inc
or
in
cmp
popf
mov
and
adc
jge
subb
adc
dec
cmc
mov
lret
out
stos
mov
sbb
test
sbb
cmpsb
arpl
add
gs
stc
cmp
push
sbb
mov
or
xchg
xchg
xchg
mov
pop
test
xchg
cmpb
xchg
fs
push
mov
pop
or
inc
jbe
cmpsl
sbb
lds
mov
push
imul
fnsave
outsb
movsl
leave
clc
and
movb
adc
pop
shl
push
aad
out
test
xchg
test
out
fs
mov
jge
icebp
int
jnp
jo
popa
maskmovq
mov
scas
lds
pop
imul
test
inc
xchg
scas
fnstcw
sbb
lods
push
adc
repnz
sbb
rorl
cmpsl
xor
pop
push
mov
and
leave
movsb
out
les
mov
push
cs
or
jecxz
nop
mov
mov
popf
jo
pop
fs
jle
sub
and
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
test
jle
outsl
jge
jle
cmp
inc
xchg
mov
mov
sbb
notb
sub
xchg
aad
sahf
adc
sub
lods
sub
sti
stos
cmp
inc
in
or
push
cli
out
test
cmp
lds
and
outsl
mov
popa
in
push
mov
es
push
and
lock
mov
jno
leave
clc
test
sub
das
xor
jp
popl
mov
cmp
mov
lds
mov
lcall
test
sti
or
movsb
outsl
in
mov
dec
in
add
cmpsl
push
or
add
dec
movsl
push
mov
out
repnz
lret
jb
popa
mov
pop
jno
cmp
sti
mov
popf
fldenv
mov
mov
mov
and
sub
mov
lock
or
insl
dec
jnp
adc
lock
adc
es
and
push
sahf
and
inc
insl
imul
lahf
adc
leave
cmp
and
sbb
adc
fildl
stos
fwait
sbb
cmp
mov
mov
mov
mov
pop
test
cmpb
fcmovne
sbb
mov
adc
and
out
add
inc
inc
push
pop
mov
ja
popa
mov
xchg
cmp
sbb
push
mov
push
lcall
rcr
jp
outsl
ret
loopne
or
out
adc
outsl
xor
addb
jecxz
jbe
xor
inc
push
push
or
xchg
ret
ss
push
rorl
pop
mov
dec
fistpll
push
ret
lods
inc
sub
ja
adc
sbb
orb
mov
inc
in
xchg
jecxz
pushf
push
jecxz
xor
pop
stos
xchg
daa
jp
dec
xor
adc
jg
add
popf
aaa
pop
mov
xchg
decb
test
es
mov
or
dec
daa
pop
testb
or
rol
leave
ret
insb
arpl
fxch
lea
insb
mov
cmp
bound
adc
sub
mov
cmp
sub
xchg
or
mov
in
lods
adc
lods
push
cmc
rcrb
push
into
bound
inc
cltd
sbb
cmp
lcall
repnz
or
popa
xchg
push
mov
jp
loopne
cmpsb
test
sti
sub
xlat
int
adc
mov
pushf
jne
out
popa
push
adc
iret
pop
scas
mov
jmp
push
push
cmpb
jno
stc
test
cmpsb
cli
inc
lods
daa
dec
mov
mov
movsl
int3
insl
stos
das
test
gs
iret
add
in
xor
into
cmp
cltd
pop
fsubrl
movsb
and
inc
insb
push
or
fucomp
bound
xlat
insb
ret
out
or
mov
adc
mov
xchg
inc
icebp
pop
out
mov
cmp
mov
inc
out
fdivrs
ret
push
aaa
jl
cwtl
arpl
sbb
pop
adc
add
lods
daa
jno
or
pop
inc
xor
fisubl
mov
pusha
lods
dec
inc
cmp
jl
mov
mov
dec
sub
and
mov
loop
sbb
addr16
loopne
orl
fsts
push
push
xchg
mov
pop
les
cltd
sbb
jns
jb
cmc
mov
xchg
pop
lods
inc
mov
cmp
xor
outsb
ss
loopne
out
jl
xor
in
addr16
icebp
cltd
enter
pop
inc
in
rclb
push
xor
add
or
jl
push
pop
aam
pop
in
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
jne
push
dec
add
jle
and
inc
dec
hlt
xor
pop
stc
and
jbe,pt
out
icebp
jp
inc
push
ss
aaa
add
push
fistps
and
adc
dec
jns
lods
jne
cli
add
adc
add
cwtl
or
pop
mov
mov
and
mov
dec
in
icebp
cmp
bsf
mov
lea
outsl
sub
xchg
xchg
pop
es
xchg
in
fmull
enter
lahf
or
xor
and
out
bound
jge
aad
inc
mov
jg
outsb
mov
addb
mov
xchg
xchg
push
adcl
add
imul
fucomip
mov
lcall
jae
and
dec
fnstenv
repnz
adcb
ds
scas
jb
sahf
jl
xor
sub
mov
stos
int3
stos
cmp
or
fbstp
sub
xchg
inc
mov
bound
xchg
lret
cmpsl
add
stc
mov
mov
fidivrl
or
xchg
fiadds
stos
cmp
pop
imul
fsubl
dec
ja
sti
xchg
movsl
jo
dec
fidivl
mov
jae
push
icebp
aam
cmp
mov
xchg
jns
ret
frstor
jp
insb
xor
les
es
add
xor
mov
push
lea
pop
push
pop
rcll
repnz
cmp
cmp
stos
and
ret
scas
add
leave
sub
or
flds
andb
lahf
dec
out
mov
jb
aas
insl
xchg
push
inc
sbb
dec
sarl
fstpt
pop
jno
lahf
adc
outsl
xchg
xor
aam
incb
pop
stc
js
cmp
fcmovnbe
std
add
call
dec
adcb
add
repz
mov
out
nop
xchg
pop
mov
icebp
jge
jb
jo
sbb
mov
out
xchg
sarl
ds
mov
adc
test
cwtl
sbb
cmp
xor
mov
data16
mov
test
stc
inc
mov
movsb
mov
mov
jg
test
pop
aas
adc
shlb
cmp
arpl
inc
inc
jg
cmpsb
inc
shlb
imul
xchg
subl
cmp
lods
imul
push
and
enter
inc
pop
imul
mov
pop
mov
stos
jno
cmp
pop
out
icebp
jbe
add
aaa
bound
rcl
mov
lret
ret
mov
imul
sbb
push
iret
sti
mov
sbbl
aas
loope
popa
roll
pop
aad
shrl
movsl
stos
xor
aaa
pop
xor
adc
cmc
or
xor
fmuls
mov
push
cs
fmuls
je
ljmp
lods
negb
cmp
fdivr
pushf
inc
popa
mov
je
in
jbe
cmpb
hlt
and
jp
pop
lock
adc
add
fldl
fsubrl
lcall
lahf
shl
pop
scas
scas
add
negl
ds
jecxz
or
mov
xrstor
push
int3
out
fisttps
loope
out
insb
repnz
movb
xchg
dec
mov
jns
xlat
gs
xchg
aaa
mov
sbb
xchg
push
fsubrl
cmc
gs
sbb
sti
or
cmp
addr16
mov
psadbw
and
stos
pop
jecxz
sub
outsl
hlt
bound
cld
aad
hlt
sub
xchg
pop
insb
dec
sbb
jae
andb
les
out
hlt
clc
or
push
xchg
out
in
sub
cli
pop
push
gs
test
sbb
jne
xchg
ffree
mov
fcoml
mov
pop
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
or
add
outsl
jge
jle
lods
subb
gs
jge,pt
pop
sub
and
call
aas
scas
divps
addr16
jmp
sub
dec
test
mov
enter
repz
pop
and
movsl
xor
lcall
add
cmp
jns
jl
jmp
test
popf
dec
lcall
int3
shll
aaa
xchg
divl
mov
pop
gs
fsubr
lret
mov
fsubs
mov
cmpl
dec
sub
dec
pop
jmp
push
inc
hlt
in
jmp
add
lcall
jo
stos
xor
mov
in
adc
cmpsb
push
or
or
and
fwait
outsl
fmuls
icebp
sbb
mov
cmp
ja
cltd
cmp
sbbb
pop
lahf
inc
sbb
push
ret
mov
inc
add
cmp
enter
shll
adc
mov
push
inc
adc
in
loop
lods
jecxz
xlat
and
cmpsb
adc
pop
fsubrl
or
cs
das
sti
negl
out
popa
adc
mov
and
dec
js
adc
push
cmp
fldcw
out
test
jns
out
stos
mov
xor
inc
mov
or
jmp
lahf
jnp
push
inc
mov
stc
adc
out
js
xor
movsb
pop
out
cmpsb
xor
lahf
arpl
and
movsl
and
outsb
aad
or
jb
loopne
adc
popf
in
xor
dec
sahf
ljmp
pop
cmpsb
divb
mov
in
movsl
cmp
ja
cmp
out
data16
mov
arpl
cmpsl
or
jno
sub
jnp
arpl
test
inc
sub
add
mov
push
ds
jg
xor
jg
sbb
or
mov
sub
data16
pop
fbld
mov
movsb
addr16
ret
fimull
subl
or
sbb
dec
sub
jecxz
mov
nop
and
in
dec
pop
mov
loop
mov
cwtl
fnsave
xor
mov
cmpsb
mov
imul
mov
in
mov
and
lods
and
xor
outsl
sub
dec
mov
cld
adc
mov
cmp
jbe
jmp
push
in
mov
add
loopne
ret
cmp
stos
push
sub
lods
xchg
outsb
daa
stos
sbb
inc
mov
pop
xchg
adc
push
loop
in
sub
dec
test
test
scas
addr16
gs
sbbb
mov
mov
call
jl
pop
aam
xchg
out
inc
addr16
push
adc
int
mov
or
sub
or
ljmp
push
int3
xchg
insb
push
add
mov
or
jecxz
jecxz
stos
je
jo
or
mov
inc
rclb
ja
sub
bound
stos
jae
pop
enter
xor
ds
ret
sti
aas
imul
shlb
mov
jns
and
pop
divl
lea
stos
inc
mov
fcom
push
and
mov
jecxz
cmpsb
enter
roll
leave
push
jecxz
adc
push
loope
gs
cld
adc
pop
hlt
cmovne
sti
xor
mov
jle
xor
xor
repnz
dec
out
in
pop
inc
loopne
adc
cmp
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
sub
int3
cld
pop
dec
xchg
loopne
pop
out
pop
sbb
nop
pop
pop
fcmovnu
jl
jl
sahf
inc
and
lret
or
mov
ss
adc
adc
jbe
lahf
fs
pop
lret
sub
mov
push
push
cmp
jns
inc
jb
add
cltd
mov
inc
not
dec
sbb
pop
or
mov
inc
inc
ds
in
jmp
sbb
repz
stos
int
pop
dec
into
fxam
push
sub
fcomps
inc
outsl
dec
jne
es
dec
test
outsl
pop
adc
iret
mov
mov
out
mov
rclb
xor
sub
int3
lods
push
cmp
xor
fbstp
cmp
aaa
or
xor
xchg
dec
sahf
lret
add
jo
pop
repz
mov
jmp
push
add
jecxz
xchg
push
fwait
inc
aad
pop
out
sti
sbb
add
dec
mov
jle
imul
inc
ret
mov
leave
pop
fcmovnbe
cmp
adc
xor
cmp
add
jl
sbb
xor
ret
bound
mov
out
and
adc
xorb
inc
lds
fs
aad
xchg
inc
addr16
scas
stos
xchg
xorb
int3
shr
shl
pop
sbb
pop
call
jg
push
cmp
adc
push
adc
dec
xchg
data16
add
xchg
push
xchg
dec
mov
fildl
insb
mov
push
inc
iret
and
push
into
pop
adcl
jp
or
add
cltd
les
iret
sbb
divb
pop
add
in
jecxz
push
shll
lret
xor
adc
mov
push
pop
stc
mov
adc
inc
jmp
popf
lds
dec
cwtl
inc
ret
inc
scas
mov
iret
clc
aam
inc
mov
cld
adc
arpl
mov
out
add
mov
pusha
pushf
dec
mov
jbe
or
add
inc
std
lcall
or
push
xlat
jb
hlt
mov
fldcw
jle
icebp
in
push
daa
sti
sbb
pop
addr16
test
and
cmp
and
add
adc
pop
push
aas
repz
cmp
pop
movsl
mov
adc
inc
inc
and
inc
xchg
cmc
pop
popf
lahf
sbb
jle
xor
push
inc
xchg
mov
fwait
mov
pushf
insb
cs
cmpl
mov
pop
add
push
and
xor
cmp
dec
inc
pop
push
dec
adc
stos
jle
std
repz
sub
jo
idivb
xchg
repnz
and
and
ret
add
shrl
add
cmp
cmp
dec
xchg
push
push
flds
and
pop
adc
mov
push
int3
mov
popa
push
mov
std
pop
scas
fildl
inc
add
pop
and
xchg
jnp
mov
xchg
mov
push
push
mov
sub
add
jbe
and
icebp
mov
mov
push
mov
incb
imul
sbb
mov
loope
mov
mov
jmp
push
xchg
bound
fdivp
dec
xchg
icebp
mov
lea
popa
stos
mov
sub
repz
lock
jno
xchg
xchg
ljmp
mov
push
sub
movl
xchg
les
cld
ret
fistl
push
xchg
fldenv
xchg
and
dec
push
sbb
xlat
and
and
outsl
lock
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
dec
lcall
jge
jle
je
bound
or
or
xor
push
jno
pop
pop
pop
inc
cmp
mov
pop
xchg
popf
add
or
fstps
dec
inc
add
enter
rolb
or
add
dec
movsb
js
push
cmp
jns
sarb
mov
pop
ds
push
jbe
popf
rcrb
mov
add
ljmp
out
add
movsb
and
shrb
add
jne
dec
pusha
pop
push
and
pop
lock
sub
or
sti
inc
jmp
ljmp
push
loopne,pt
push
cmp
mov
icebp
stc
dec
mov
pop
jbe
xor
mov
sub
mov
adc
mov
pop
scas
lock
mov
cmp
aaa
int3
jp
addr16
or
in
out
lock
ss
stc
xchg
insb
xor
or
mov
push
xchg
push
stos
imul
lods
sbb
sub
mov
inc
cwtl
pop
js
arpl
fcompl
mov
push
cltd
mov
cmc
rolb
mov
mov
pop
in
fcoms
outsb
loope
loopne
sarl
repz
ret
sbb
push
call
mov
shlb
imul
adc
inc
cld
adc
rcr
jecxz
ja
dec
fsubrs
lods
out
xchg
stos
je
mov
ss
imul
popf
jno
js
jg
cld
pushf
sub
or
enter
ret
inc
dec
std
inc
fwait
xchg
call
sbb
jns
inc
cmp
in
aaa
jb
and
mov
mov
inc
mov
xchg
repz
lods
test
xlat
out
and
shll
mov
add
xchg
in
sti
icebp
xor
mov
cmp
cmp
lcall
loop
aas
repnz
fbstp
jo
rcll
scas
xor
inc
or
mov
or
mov
pop
mov
push
pop
cld
mov
addl
xchg
lock
loopne
inc
cmp
outsl
adc
popf
push
ja
test
les
ljmp
jmp
rorl
ds
je
repz
dec
mov
repnz
mov
push
imul
jl
xor
jne
jecxz
push
in
sbb
dec
rolb
add
sub
dec
lret
jne
lahf
or
add
in
dec
sub
lock
test
push
cmc
cld
sbb
xchg
bound
sbb
jb
les
fisttpll
sbb
popf
mov
sbb
mov
mov
cmpsb
leave
sub
stos
mov
cmp
lret
shrl
adc
push
and
sbb
insb
jl
or
cmp
insl
mov
je
push
cld
aam
lds
icebp
jno
sbb
ja
mov
mov
test
pop
in
bound
ret
pop
pop
adc
cmc
popa
xlat
lahf
das
loopne
cmpsl
insb
pushf
inc
imul
xor
or
cli
and
popf
adc
push
mov
mov
mov
outsl
das
lcall
inc
mov
lret
mov
mov
sub
sbb
inc
inc
mov
xor
pop
popf
push
mov
cmp
test
inc
test
test
inc
mov
dec
mov
test
mov
push
push
das
int
cmp
jb
cltd
hlt
aad
add
add
mov
jmp
and
dec
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
push
bound
adc
jle
scas
fiadds
lahf
rcr
xor
cmc
shrb
adc
lea
sarb
mov
ss
mov
mov
loope
into
jmp
pushf
push
push
dec
sub
mov
adc
mov
pop
rolb
clc
testl
ja
cmc
test
out
push
mulb
xchg
sbb
push
or
jle
cmc
enter
adc
adc
xor
pop
mov
pop
dec
push
xchg
repz
xchg
mov
mov
js
inc
mov
adc
mov
movsl
insb
insl
sub
andb
cltd
ljmp
pop
mov
sub
repz
in
in
fisttpll
push
in
inc
mov
loope
cmp
jg
cmpb
outsl
mov
shlb
mov
cmc
xchg
leave
in
xchg
inc
push
and
add
xchg
stos
in
adc
out
cmc
gs
xor
and
je
mov
adc
mov
aaa
and
xor
pop
xchg
sahf
mov
jns
jnp
and
sti
mov
into
xor
inc
test
enter
xchg
dec
mov
push
ds
outsb
mov
fnstsw
scas
add
loop
push
scas
lcall
mov
inc
addb
mov
fdivr
ljmp
adc
ret
ss
dec
fimull
fldt
jecxz
pop
clc
nop
cmp
dec
dec
push
pop
stos
xchg
dec
push
popf
int
insl
mov
imul
jl
cmp
inc
push
lret
ljmp
loopne
dec
movsb
mov
pushf
push
bound
adc
pop
push
stos
inc
jmp
loope
or
stos
movsl
mov
aas
mov
cmovns
out
add
and
xchg
insl
dec
dec
leave
push
jl
mov
imul
adc
adc
incl
lahf
push
dec
xlat
push
cli
xor
add
out
ljmp
inc
mov
in
xorl
sbb
not
sbb
popf
mov
lcall
push
adc
js
sbb
add
popf
pop
addr16
incb
rolb
iret
add
pmulhw
mov
pop
jb
or
movsl
jg
cmpsl
jne
in
nop
adc
mov
mov
into
nop
mov
jns
jecxz
iret
adc
jmp
call
leave
sbb
push
js
mov
int3
and
imul
ljmp
test
mul
mov
movsb
xchg
and
adc
mov
hlt
jmp
xor
push
mov
push
inc
std
test
cmp
mov
mov
ret
test
enter
out
into
fimuls
jle
xor
xchg
ja
add
data16
jne
inc
sbb
aaa
adc
jecxz
daa
mov
out
mov
jge
out
aaa
or
icebp
adc
xor
inc
push
jecxz
mov
or
jnp
adc
mov
js
push
mov
inc
xchg
and
int
dec
inc
sbb
aam
shll
mov
sbb
cmpl
xchg
loope
pop
fwait
mov
ss
pushf
fimuls
in
mov
pop
nopl
daa
pushf
xor
repz
adc
pop
lods
xor
addr16
and
mov
mov
dec
push
repnz
cltd
lock
mov
notb
mov
mov
jg
fsubp
adc
xor
in
test
push
stos
cmp
fdivl
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
pop
jno
xchg
jle
outsl
jge
jle
cli
or
lods
lret
push
testl
sbb
int3
pop
mov
pop
mov
inc
enter
jnp
in
clc
addr16
push
daa
aam
inc
call
cmpsl
mov
fwait
subb
xchg
jp
xchg
mull
lea
ja
fcmovnbe
mov
ljmp
jge
pop
js
jnp
movb
pop
mov
mov
sub
shrl
inc
jb
lea
add
mov
xor
pop
mov
lea
mov
xchg
fsubl
pop
das
insb
dec
dec
stos
mov
dec
jge
std
gs
loope
dec
lret
pop
sti
test
test
add
out
xchg
inc
incl
shl
xchg
js
or
jmp
sbb
mov
add
out
xor
inc
push
ja
jbe
into
dec
dec
jmp
or
data16
mov
es
int
ds
cmp
mov
push
push
aam
sbb
scas
and
outsl
shll
add
push
loope
lahf
sbb
and
jne
inc
sbb
sub
pop
in
sbb
int
pop
sbbb
lods
fbstp
lock
enter
inc
js
das
sti
add
loop
cmpsl
add
mov
stos
pop
ljmp
fs
push
adc
rep
cmpb
mov
das
xor
sub
fsts
fwait
or
sahf
ds
push
scas
and
cld
hlt
xchg
jne
mov
push
cli
orl
decl
push
mov
mov
ss
push
lods
popf
pop
jle
dec
sti
cmp
dec
mov
mov
cmpsb
cmp
shr
test
dec
in
jne
mov
fdivs
adc
stc
int3
mov
bound
sub
sbb
sbb
push
mov
das
lahf
mov
xorb
ss
cmp
adc
mov
cmp
sbb
push
or
scas
movsl
in
andb
or
push
fstps
inc
xchg
in
jecxz
xlat
or
loope
ret
adc
and
stos
bound
mov
inc
mov
mov
int3
and
fdivl
mov
push
hlt
fdivrs
sbb
cltd
stc
out
push
or
sbb
push
imul
lret
dec
or
xchg
cmpsb
pusha
dec
mov
pop
cli
sbb
or
std
mov
lods
sub
mov
cmpsl
pop
lret
dec
mov
xor
xor
imul
aad
imul
jo
and
jo
lahf
sbb
dec
sbb
cmp
out
jae
dec
ss
jmp
les
clc
cltd
iret
dec
cmp
lcall
shlb
mov
jg
and
mov
mov
inc
add
loop
inc
loopne
push
mov
mov
xor
mov
aam
jl
and
push
scas
test
inc
push
les
pop
sbb
sti
das
mov
and
sbb
and
xchg
ret
and
fs
div
jno
outsl
addl
push
jge
dec
mov
out
jle
dec
cmpsl
cmp
jne
push
fcmove
inc
test
imul
push
cmp
bound
nop
aam
xchg
mov
out
fisubrs
mov
and
jle
ljmp
push
fs
xchg
pop
into
cli
cmc
sub
and
mov
lock
jle
pop
fdiv
fsubrs
push
xchg
ret
icebp
jns
and
es
pushf
mov
jge
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
xchg
cmp
mov
sbb
jle
push
mov
insl
int3
test
push
fwait
sbb
dec
loop
xor
add
jle
pusha
and
add
imul
and
dec
ljmp
shll
cmp
stos
push
dec
jbe
cmp
add
xor
mov
sbb
add
imul
and
jecxz
hlt
mov
rcrb
fs
scas
add
arpl
nop
fbld
into
pop
std
cmp
xlat
add
pop
bound
std
inc
add
imul
jns
or
test
push
mov
sub
mov
sbb
call
jno,pt
xor
cs
mov
adc
rorl
pushf
sbb
cmp
adc
in
lock
inc
mov
repnz
sub
ss
xchg
mov
xchg
aad
jno
cmp
test
hlt
cmpsl
and
jecxz
pop
idivl
add
mov
popa
mov
push
test
sub
or
mov
aas
sub
ljmp
lods
xchg
enter
int3
dec
mov
push
scas
dec
adc
jl
frstor
cmc
imull
inc
pusha
out
and
mov
inc
pop
mov
int3
nop
mov
mov
call
sbb
out
test
and
and
and
inc
sbb
std
ss
icebp
dec
cmp
pop
sub
std
pushf
push
in
adcb
lcall
jb
aam
jo
inc
jo
jne
in
mov
test
int
pushf
inc
cmp
push
add
push
test
aad
push
jnp
cmp
je
ds
xchg
add
pop
pop
xchg
test
xor
cli
lcall
xchg
xlat
and
or
xchg
into
xor
rcrl
or
lock
xlat
mov
mov
lock
dec
jp
mov
jns
jecxz
mov
cmp
into
loopne
shll
and
addr16
dec
sub
inc
jo
test
inc
das
dec
xchg
ss
mov
subl
or
adc
insb
rorl
mov
cmpsb
jne
fisttpll
iret
jg
movsl
gs
adc
dec
in
xor
xor
pop
inc
or
movsl
jno
xchg
mov
lods
mov
ret
adc
sub
movsb
cwtl
mov
enter
loop
repz
and
ss
dec
clc
push
adc
sbb
push
rolb
mov
and
push
jg
scas
cmp
jl
xchg
cmp
jo
les
inc
int3
mov
out
pop
mov
out
lods
or
rcr
fdivrs
push
xchg
push
jo
mov
pop
pop
push
cmp
inc
inc
loop
leave
test
and
sbb
fstl
add
aaa
mov
shll
int3
mov
aad
lcall
lods
and
mov
sarb
in
dec
mov
mov
xorl
dec
mov
dec
nop
xor
test
pushf
adc
sahf
push
nop
icebp
lcall
lods
cld
add
pop
rclb
repz
add
mov
aam
sub
xchg
cmp
xchg
sahf
push
es
out
loop
ljmp
movsl
loopne
out
outsl
movsb
cwtl
pop
shll
sbb
cltd
cmpl
jo
push
sub
dec
sbb
subl
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
pusha
cltd
test
int
dec
inc
xor
mov
dec
inc
cwtl
insb
or
cmp
stos
push
sbb
push
mov
and
or
inc
in
das
sbb
inc
imul
pop
int
push
sub
mov
mov
jmp
mov
add
add
pop
and
push
jmp
jmp
iret
cmp
inc
clc
lods
jns
push
cmpsl
daa
mov
shll
mov
add
clc
hlt
and
push
pop
mov
sub
dec
dec
sbb
adc
jle
mov
in
mov
mov
xchg
pop
xor
lahf
jbe
subb
test
icebp
lods
imull
iret
mov
jno
jo
jge
jge
mov
mov
xlat
lahf
mov
in
test
jno
rcrb
sti
outsl
ljmp
mov
jae
and
or
mov
cli
push
or
mov
jbe
lods
fwait
cld
lret
fwait
aam
fwait
dec
outsl
stos
imul
xorb
bsf
inc
in
mov
add
push
cmp
cmp
add
outsb
lods
dec
adc
mov
xchg
loope
xor
in
mov
pop
xor
cmpsb
pop
add
int3
xor
nop
xchg
getsec
inc
sub
or
mov
movsb
push
mov
std
pop
xchg
sub
mov
daa
lcall
add
stos
nop
repz
incb
pushf
pushf
add
dec
cmp
push
wrmsr
xor
mov
lret
mov
loopne
inc
lcall
leave
mov
push
mov
fcmovnbe
aam
aam
cmpsl
mov
push
fldcw
jno
out
cwtl
xchg
insl
pusha
inc
jge
mov
loope
ja
into
mov
add
fimuls
pop
sahf
and
loope
jbe
jbe
inc
movsl
xchg
int3
xor
dec
cmp
adc
scas
loopne
outsb
cwtl
rol
sbb
or
inc
adc
bound
ror
ret
inc
insl
out
cmpsl
les
lock
xchg
mov
adcb
mov
or
sti
xchg
dec
leave
pop
cmp
and
mov
xchg
inc
cmp
addr16
fwait
mov
and
mov
movsb
scas
aaa
adc
bnd
les
add
mov
dec
mov
inc
dec
aas
test
sbb
mov
into
inc
cmp
std
sti
xor
cmp
lcall
xchg
jg
mov
xor
or
jns
push
gs
pusha
inc
loope
cmp
mov
inc
jmp
ret
insl
les
cmpb
sbb
sbbb
subps
and
mov
adcl
fcmovnb
bound
dec
or
out
ss
mov
jmp
push
mov
jno
adc
cld
nop
cltd
pop
mov
test
push
cmp
xor
out
faddp
loope
inc
fstpt
addr16
pop
fisttpl
in
cmp
push
adc
add
iret
pop
mov
inc
push
xor
mov
in
jb
cmp
add
sub
sbb
jns
sbb
push
adc
mov
add
inc
pop
aas
movsb
pop
arpl
jbe
push
ds
les
popa
test
out
mov
push
push
jcxz
cmp
mov
dec
rcrl
sti
pop
cmc
or
fcomi
call
jns
ds
mov
scas
jg
sahf
cmpl
lret
frstpm(287
mov
mov
add
and
subb
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
imul
outsl
jge
jle
rcl
gs
std
pop
lods
outsl
stc
or
jno
jo
cld
mov
jb
test
lds
test
in
add
sbbl
cmp
pop
and
enter
mov
xchg
push
push
cmp
ficomps
pop
flds
and
adc
xchg
or
movsb
xchg
out
out
sub
sbb
jmp
frstor
cli
sub
fadds
stc
js
cmp
iret
addr16
cli
movsb
mov
xchg
xchg
aaa
in
iret
dec
mov
addb
mull
push
and
mov
iret
jle
stos
fnstsw
jnp
arpl
xor
pop
lcall
pop
popa
xchg
and
fwait
lods
je
clc
jle
push
call
leave
scas
sbb
out
shrl
pushf
addr16
outsl
lahf
mov
notl
or
dec
cmp
xchg
stos
pop
repz
popf
daa
xchg
mov
inc
in
inc
mov
shlb
jge
es
les
push
aaa
negb
mov
leave
jno
std
xor
ljmp
fldt
cmc
pusha
loop
bound
dec
pop
sbb
pop
das
je
jo
jbe
sbb
dec
stc
mov
imul
pushf
push
repnz
push
add
cmpsl
rcl
hlt
or
aaa
lea
pusha
mov
cwtl
fisttps
stc
sbb
pop
mov
adc
sbb
push
push
fisubl
call
pusha
in
jne
inc
subb
clc
jg
stos
mov
inc
xchg
cmp
mov
imul
or
lret
push
popa
xchg
mov
inc
fisttpl
fldcw
addl
fadds
jns
add
repnz
out
add
cmp
or
lahf
fnstenv
pop
movaps
mov
jecxz
inc
test
cli
dec
aad
ret
mov
mov
add
dec
and
jge
movsb
xchg
push
sub
in
aam
pop
movsl
loope
loop
mov
mov
loope
lret
leave
mov
add
lahf
outsb
dec
lcall
fimull
cld
clc
fiaddl
in
dec
pop
mov
inc
inc
and
inc
cmp
lds
scas
and
pop
in
push
sti
pop
in
mov
xchg
out
lcall
push
mov
add
inc
call
loopne
sbbb
ljmp
sbb
adc
push
sti
ljmp
xor
mov
enter
in
sbb
sahf
jns
loope
pop
movsb
xchg
and
and
xchg
jp
cwtl
push
movsb
and
lods
mov
stos
cwtl
pop
icebp
iret
cmp
mov
pop
sahf
sub
int3
mov
inc
jo
mov
mov
lahf
in
add
mov
out
aad
inc
into
push
pop
xchg
mov
adc
add
xchg
rcrb
inc
aas
aas
xor
add
or
out
iret
dec
ljmp
cmp
ja
mov
sahf
add
adc
push
xchg
lahf
pop
mov
fcmovnu
dec
cmpsl
or
pop
pop
movsb
arpl
push
out
push
pop
jmp
test
aas
pop
movsl
movsb
fbld
pop
lods
push
push
xor
dec
scas
cltd
cmp
add
mov
push
cltd
addr16
mov
sub
loopne
fisttpl
mov
outsl
push
imul
jg
lret
std
in
iret
or
test
jg
add
and
mov
jmp
inc
xchg
and
scas
push
jmp
aad
inc
fcmovbe
inc
idivb
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
pushf
ret
jle
jge
jle
int3
daa
cmp
xchg
mov
jns
adcb
js
add
inc
bound
ret
jge
std
xchg
loope
ja
mov
jge
out
xor
bound
inc
int3
lret
sub
lahf
int
mov
jge
xchg
dec
cmp
loope
rolb
xor
dec
sbb
jecxz
push
in
fwait
push
les
mov
popa
mov
inc
adc
cmpsl
pop
push
lahf
mov
dec
xor
jnp
mov
mov
repz
fadd
or
js
adc
imul
in
call
cld
adc
out
int
arpl
fstps
lock
fwait
stos
xor
lock
scas
aam
mov
in
pop
imul
sub
mov
mov
pop
mov
inc
nop
inc
jbe
jmp
lahf
aaa
repz
jnp
pop
or
jnp
mov
mov
repnz
pop
add
scas
test
adc
sub
cltd
adc
testl
das
push
je
sbb
ljmp
mov
loop
lds
rcl
dec
xchg
add
test
push
icebp
push
push
inc
dec
cld
jg
xor
add
stos
jmp
out
aaa
mov
idivb
add
xchg
icebp
inc
sbb
fsubrs
in
pushf
xchg
in
in
mov
bound
mov
loop
xor
mov
push
mov
and
mov
lods
hlt
mov
test
in
pusha
insl
pop
adc
cmpsl
lea
pop
fwait
aam
rcr
scas
out
dec
xor
test
mov
outsl
loope
add
cs
inc
in
cmpsl
loopne
adc
or
movsb
push
shrb
mov
sub
or
cwtl
add
cmp
in
jbe
subl
mov
lods
arpl
test
in
popa
mov
jle
fs
jb
mulb
jns
push
pop
pop
jp
jno
movsl
std
cmc
cmp
dec
jo
adc
dec
and
aaa
loopne
pushf
aad
xchg
pop
movsb
dec
xor
xchg
mov
sub
mov
push
cld
adc
inc
xchg
adc
ds
sbb
sbb
mov
adc
jmp
dec
add
test
inc
mov
xchg
mov
cmpl
sub
jecxz
testb
xorl
or
adc
xchg
lret
jp
dec
xchg
cltd
in
xor
xor
sarl
push
adc
je
lds
daa
filds
pop
cwtl
aas
push
add
add
push
mov
icebp
xor
cwtd
cmp
jb
sub
fmull
popl
cli
jno
xchg
sbb
clc
add
dec
jge
sbb
xor
test
adc
push
jb
rcrb
addr16
mov
xchg
jbe
pop
jl
out
imul
lods
mov
fmull
or
adc
fists
int
subl
insb
cmc
cli
stos
mov
daa
lret
mov
aas
jo
aam
pop
icebp
add
sbb
pop
dec
dec
push
aas
sub
sbbl
leave
cmc
pop
push
mov
jecxz
jnp
outsl
sbb
push
lock
popf
or
and
rcl
stos
jmp
xor
loope
mov
insl
in
das
neg
mov
sub
mov
sbbb
lea
or
jmp
mov
and
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
pushf
mov
jne
out
and
mov
dec
and
rorl
jp
add
jo
out
icebp
jmp
dec
stos
mov
mov
imul
xchg
ss
fdivr
push
out
push
pop
adc
pushf
jns
jno
subl
lds
jae
clc
cld
and
ss
inc
push
mov
popa
dec
cmp
add
sub
push
insl
rcrb
inc
aas
aam
out
je
test
add
rol
jbe
fistps
fucomip
jmp
and
pop
lods
lods
rol
push
popa
test
cmp
mov
fmulp
adc
cwtl
out
mov
fs
adc
push
aas
add
je
into
and
lock
xchg
xlat
test
pop
jge
add
xor
mov
jle
sahf
jmp
xor
add
inc
jmp
repz
pop
into
dec
das
lret
lret
pop
adc
jmp
aaa
lock
push
je
mov
loop
xor
les
adc
fdivl
popa
lods
mov
movsl
sbb
jb
jle
shrl
mov
mov
repz
dec
lods
mov
pop
sub
push
cmp
and
jo
xor
mov
jbe
push
aam
mov
into
pop
cld
mov
ds
mov
mov
imulb
push
jl
lret
in
sub
add
stc
pop
fnstsw
dec
les
test
or
scas
and
jne
mov
aad
push
mov
pushf
pushf
jl
lcall
sub
push
pop
cli
xchg
popa
push
adc
mov
push
fdivrl
fsubs
loopne
imulb
mov
jae
hlt
inc
bswap
push
sbb
push
shll
jo
inc
in
adc
push
add
xor
ja
mov
xchg
in
add
jp
popf
mov
mov
ja
cmp
mov
pop
jo
push
jo
sbb
fdivr
cmp
cmp
and
mov
mov
sbb
mov
sbb
mov
insl
cmc
inc
movsl
mov
xchg
add
sub
pop
iret
in
xorl
jno
fildll
inc
add
cwtl
mov
hlt
jnp
pop
repz
xor
adc
xor
mov
out
push
xor
pop
arpl
dec
inc
in
imul
pop
imul
pop
pop
inc
xchg
pop
and
cli
into
notl
sbb
pop
mov
and
shll
fwait
mov
xchg
stc
mov
stos
dec
ljmp
add
inc
ljmp
int
xlat
dec
mov
cwtl
pop
jg
push
testl
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
mov
hlt
sub
xor
jle
stos
movsl
sahf
push
jmp
fstps
pop
xchg
add
adc
adc
sbb
add
cmp
in
xchg
and
imul
and
mov
in
mov
out
xchg
ja
xor
mov
or
sbb
mov
and
xor
filds
jae
dec
loopne
cmpsb
or
jecxz
popa
cli
out
sbb
ret
repz
mov
lods
ds
hlt
mov
cmc
fdivs
xor
cmp
push
adc
movsb
pop
ja
mov
std
popa
sub
fmulp
pop
aaa
or
xor
xchg
stos
bound
jmp
movsl
dec
clc
test
cs
js
popa
shll
fst
mov
bound
imul
mov
mov
inc
mov
cmp
iret
inc
push
mov
mov
jae
shll
adc
jne
mov
mov
inc
or
or
enter
pop
aam
ja
icebp
inc
push
inc
pop
leave
jo
push
call
jno
xchg
fmuls
push
xchg
rcrb
and
sarb
sub
popf
mov
dec
stc
xlat
adc
mov
imul
mov
jnp
mov
sbbb
sub
inc
xchg
sbb
mov
cmp
in
out
pop
out
lahf
jle
movsl
adc
mov
popf
ret
mov
fiadds
scas
mov
pop
mov
sbb
test
call
dec
mov
sbb
rep
jno
cmpsl
aas
cltd
mov
sub
lock
in
sub
cmpsb
sub
push
insl
lahf
imul
sti
sbb
pop
push
jb
call
pop
push
adc
iret
cmpsl
stc
aas
lds
jbe
loopne
mov
dec
fstpl
shlb
pop
and
mov
sbb
cli
mov
pop
dec
test
pop
out
repnz
add
inc
popa
jb
fsubl
pop
mov
mov
xchg
mov
dec
jl
xchg
and
mov
fdivl
cmp
or
pop
hlt
xor
jnp
mov
push
cmp
mov
adc
cmpsl
je
insb
cmc
or
xor
and
mov
sbb
addb
add
test
mov
add
add
xchg
scas
addr16
insb
push
mov
or
bound
sbb
xor
mov
xor
mov
xchg
jl
push
pop
decb
je
int
xchg
std
cmp
xor
cmp
testb
jg
gs
in
jecxz
gs
jge
sbbl
push
test
cmp
and
and
popf
mov
sbbb
stos
daa
mov
loopne
inc
icebp
push
inc
insb
dec
sub
mov
mov
shl
sbb
jo
insb
mov
stos
mov
sar
xchg
incl
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
add
ret
push
ja
test
scas
mov
cmpsb
jne
push
mov
std
dec
scas
add
cmc
lea
adc
lret
aam
clc
xchg
mov
ja
inc
shll
lret
cmc
mov
and
aaa
cmp
leave
aad
mov
xchg
outsb
ret
and
xchg
les
popf
or
pop
popa
test
fmull
add
mov
pop
or
jp
push
jne
cltd
imul
fadd
xchg
pop
inc
in
outsb
cmp
sub
aas
repz
ficompl
fists
test
add
pusha
sub
les
lock
inc
push
out
push
mov
dec
and
xchg
fdivr
mov
fistpll
inc
test
pop
sub
test
fs
movsl
pop
inc
or
stc
fcom
sub
sti
xor
and
xor
mov
lock
adc
lret
dec
out
int3
mov
push
clc
fistpll
mov
cs
repz
stc
mov
fwait
aas
xchg
mov
scas
lods
xor
jmp
jae
decb
xor
jl
jmp
inc
xchg
sbb
in
inc
add
mov
push
repz
pop
outsl
out
xor
or
dec
add
inc
into
std
jmp
push
insl
ja
mov
lds
leave
mov
jp
in
sub
decb
mov
xor
insb
pop
mov
jecxz
sbb
lods
xchg
test
daa
lret
inc
mov
std
jnp
dec
aas
and
cmp
rcll
mov
xor
add
and
movsl
cmp
fcompl
sarb
mov
jb
iret
jle
mov
les
dec
add
rclb
cmp
stos
cwtl
pop
les
mov
jb
imul
insl
test
mov
pop
js
jecxz
mov
dec
push
sbb
adc
dec
stos
or
mov
sti
mov
jg
mov
cmp
testl
in
addr16
mov
jno
loop
test
call
std
add
mov
ret
mov
xor
pusha
push
push
iret
stos
test
insb
mov
cmp
xor
sbb
adc
pop
lods
popf
int3
aad
and
popf
inc
stc
pusha
push
xchg
push
sub
int3
jnp
push
rolb
dec
or
sar
dec
sbb
ret
xchg
add
cli
xchg
cltd
dec
and
mov
cli
mov
push
movsl
arpl
lret
jae
inc
ret
aad
cltd
or
adc
shll
loop
call
mov
jo
sbb
mov
adc
ljmp
adc
nop
insl
mov
and
jbe
jecxz
push
adc
mov
mov
push
jnp
sub
jo
daa
insl
mov
jg
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
icebp
data16
push
jle
xor
jle
clc
dec
mov
pop
es
daa
cli
jnp
jo
pop
mov
std
and
or
clc
fs
and
lahf
int3
mov
je
sbb
in
inc
fistpll
std
push
or
test
mov
lea
jl
and
dec
stos
lds
push
arpl
mov
addr16
js
inc
imul
fistl
mov
ja
loop
into
unpckhps
xor
sbb
jg
mov
lock
mov
fwait
shrl
jge
pusha
data16
jge
ss
leave
stc
xor
or
incl
add
jae
xchg
xor
nop
es
cwtl
add
pop
dec
lock
sahf
jmp
divps
in
jns
addr16
pop
aas
shrl
testb
lods
lock
cmp
das
cltd
sbb
mov
gs
inc
jmp
das
lea
loopne
pusha
jae
mov
push
or
loope
sub
popf
mov
dec
out
and
outsb
dec
add
popl
xor
insl
mulb
popa
es
dec
leave
xor
popf
test
inc
inc
rcrl
fisubrl
lds
add
add
icebp
xchg
aad
and
lods
insb
jb
or
mov
and
xor
sbbb
and
outsl
sbb
adc
sub
cmp
ret
sub
addr16
mov
xchg
out
mov
sub
int
lock
jle
sub
inc
sbb
clc
ss
cmc
xchg
fists
inc
int
pushf
cmp
jne
lods
lods
mov
pop
pop
addl
scas
xchg
cmp
or
and
jge
rcrb
inc
dec
jbe
rcll
sbb
mov
xchg
sub
movsb
ret
icebp
dec
cmpsl
dec
aaa
inc
stos
adc
lods
cmp
addr16
push
popf
out
and
loop
xchg
out
fwait
pusha
addl
outsl
bound
mov
jle
dec
fdivrs
pop
inc
int
rcr
adc
sarl
loopne
cli
aas
std
pop
inc
es
and
int3
ljmp
cmc
adc
cmp
xchg
dec
psubusw
rolb
mov
adc
les
loop
adc
and
push
sub
ficoms
gs
test
scas
pushf
mov
mov
mov
das
cltd
or
int3
jl
add
inc
cli
push
imul
into
test
sub
cmc
pop
js
push
rol
fmul
inc
pop
jge
jp
sbb
popa
sbb
je
mov
add
xor
rclb
fstpt
adc
adcb
and
out
jle
sbb
out
adc
mov
lods
inc
or
and
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
pop
pusha
or
jle,pt
xor
jle
outsb
add
mov
xchg
jo
lret
popa
clc
sarl
dec
stos
push
std
into
lret
fadds
movsl
xchg
ja
mov
mov
mov
lods
lret
fmuls
jbe
iret
popa
inc
roll
pop
addl
sbb
adc
das
test
sub
inc
daa
fwait
test
stos
jb
pop
aad
cmpsl
dec
jge
jae
out
pusha
je
xor
adc
and
cli
cmpsb
out
pop
adc
dec
div
rcll
das
sub
jae
fisubl
add
mov
and
push
add
pop
push
mov
into
rep
push
mov
shlb
dec
xor
adc
jno
mov
cltd
inc
movsb
sbb
stos
in
cmp
mov
push
pop
pop
mov
sarb
lds
inc
imul
push
into
repz
subb
js
mov
jno
leave
rcll
cltd
sti
out
push
xchg
jmp
jl
repnz
xor
dec
fadds
mov
add
cmp
icebp
or
sahf
cmp
repnz
push
jg,pt
inc
repnz
xor
sbb
xor
aas
mov
add
bnd
inc
lret
add
pushl
ss
ret
cmc
sub
je
push
lds
sbb
fsubrl
xor
inc
inc
arpl
loope
into
jo
fimull
mov
xor
fstp
xchg
int
xor
es
bound
insl
popf
or
jp
insl
or
sub
rolb
add
ja
fisubrl
divl
sarb
fmul
push
lcall
push
mov
push
xchg
sbb
dec
xorb
clc
ss
push
cmp
movsl
bound
insb
ss
loopne
lcall
pusha
std
insb
decb
jp
movsl
jge
mov
xchg
mov
sti
bound
sahf
cmpsb
clc
mov
mov
sbb
pop
mov
xor
add
in
and
cmp
xlat
aam
test
mov
push
aam
sbb
std
mov
mov
jmp
lods
sub
clc
push
jecxz
inc
ret
ficoml
mov
mov
cmp
inc
inc
jecxz
ljmp
cmp
xchg
fsubrl
clc
fnstsw
push
and
pop
push
hlt
popf
mov
sbb
xchg
cmpsb
mov
sbb
out
fldz
mov
or
ror
frstor
shrl
pop
or
pop
imul
dec
sahf
mov
shlb
add
movsb
jmp
inc
rcrl
test
mov
shrb
movsb
mov
xchg
popa
push
sbb
xchg
test
xchg
mov
xor
and
mov
pop
adc
push
fmuls
mov
inc
jp
mov
inc
sub
call
fwait
adc
pop
pcmpeqw
sub
mov
fstps
je
cld
xchg
hlt
pusha
sbb
ret
xchg
xchg
aaa
dec
dec
or
xchg
xchg
xchg
jg
popa
or
jbe
movsb
push
mov
xchg
ffreep
cmp
mov
jmp
test
jno
ja
shrb
aam
loopne
jle
xor
jle
inc
mov
pop
out
jle
frndint
int3
or
inc
mov
rol
and
ja
jecxz
jp
ja
cli
push
lods
jae
and
jno
jp
add
inc
popa
pop
or
aad
mov
sbb
mov
jle
pop
mov
mov
push
fdivrs
xor
ret
dec
out
sub
out
sub
addl
push
fnsave
mov
gs
std
cld
popf
cld
hlt
push
out
stos
pop
popa
pop
push
pop
lret
xor
mov
leave
rol
dec
subb
adc
inc
int3
shlb
cmp
inc
in
bound
ret
fistl
icebp
lcall
test
xchg
pusha
xor
or
jmp
ss
scas
mov
mov
faddl
xchg
outsl
cmp
and
ret
jle
lcall
sbb
mov
scas
std
es
push
dec
notl
add
mov
add
js
pop
in
xor
loope
neg
pop
stos
sbb
loope
hlt
popf
jge
adc
fistpll
inc
or
pop
add
sbb
jmp
xor
pop
in
fstpl
push
cmp
push
mov
inc
addb
sub
std
sub
sbb
rol
aad
jno
pop
addl
gs
shl
repz
jmp
rclb
xor
loope
rorb
xor
jecxz
std
mov
jo
xchg
std
jp
mov
fstps
sti
js
ret
icebp
add
mov
test
mov
testl
ficomps
cmp
int
cmpsb
jmp
cmp
scas
push
es
pop
or
aad
cmp
mov
or
jle
xchg
mov
popf
addl
mov
iret
into
pop
aad
and
sbb
lret
xchg
and
mov
mov
pop
push
xchg
sub
mov
inc
or
mov
sub
fidivs
dec
fincstp
jl
cmpsl
push
dec
mov
inc
cmp
roll
cltd
lock
inc
pop
add
sub
or
je
push
pop
sar
loopne
jl
cs
and
jns
out
ret
rorl
mov
adc
and
pop
dec
mov
jp
les
inc
sub
jp
push
push
stc
out
test
xor
insb
cmp
xor
cmovbe
jmp
mov
aaa
mov
push
fwait
cli
out
es
sar
push
aad
add
leave
push
fcoms
out
inc
add
aas
aam
pusha
mov
pop
stos
shl
out
xor
mov
inc
and
cld
cmovle
pop
fcomip
mov
and
adc
adc
push
push
aam
repnz
sbb
push
out
jbe
cmp
ds
cmp
popf
icebp
ss
dec
inc
jno
sahf
add
sub
xlat
cmpsb
push
mov
icebp
dec
jns
add
std
mov
frstor
scas
pop
mov
call
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
aaa
mov
mov
xor
jle
dec
adc
sbb
jae
cmpb
es
add
ret
sbb
inc
aam
jno
mov
xor
sub
and
pop
and
jge
clc
xor
or
test
sahf
insb
loopne
jae
mov
mov
pushf
lods
inc
aad
pop
sar
sbb
pop
jmp
ret
call
mov
pop
mov
mov
std
mov
mov
iret
aam
pop
mov
inc
pop
stc
ret
pop
mov
fcoml
xchg
xchg
repnz
push
pop
aaa
sub
ret
stc
push
push
xchg
pop
push
jnp
and
fdivr
push
test
pop
stos
shll
push
ret
xchg
add
cwtl
add
es
negl
jnp
aas
clc
xor
jae
sub
dec
iret
test
inc
adc
mov
xchg
test
lock
iret
loope
mov
push
stos
push
lock
scas
and
xchg
popf
mov
add
pushf
push
stos
mov
inc
addb
jb
push
es
pop
pop
mov
inc
lcall
pop
and
ds
enter
imulb
inc
mov
add
xchg
xchg
in
and
fs
jle
cli
out
sub
sarb
adc
or
dec
jbe
data16
mov
dec
cs
out
push
jg
mov
push
ja
mov
lahf
jne
scas
test
int3
xchg
pop
inc
mov
lds
lea
cmpb
mov
or
lret
and
pop
popf
in
mov
or
mov
cli
mov
shrb
xchg
mov
insl
repz
sbb
push
jp
int
xor
roll
cmp
ret
movsl
insb
aam
into
out
orb
rcll
pop
mov
jecxz
mov
daa
bound
jp
and
cwtl
adc
pop
arpl
stc
pop
dec
sbb
and
xor
sub
imul
inc
jle
inc
pop
orl
mov
dec
xchg
insb
std
push
je
fwait
enter
xor
jbe
cmp
inc
sbb
cmpsb
icebp
adc
add
add
push
movb
ds
fsubs
sbbl
aas
pop
ficoml
leave
cmp
jb
jmp
sub
jns
dec
cwtl
inc
pop
dec
dec
fnstcw
loopne
fcmovbe
xor
mov
inc
ja
pop
sarl
cmpsl
cmp
dec
xchg
fsubrs
dec
and
mov
add
or
lds
jmp
jo
gs
dec
dec
hlt
mov
cmp
mov
mov
sarl
fsubp
sbb
adc
push
test
lds
jae
pop
loop
punpckldq
pop
std
addl
loop
adc
icebp
roll
stc
das
adc
test
out
mov
enter
inc
into
inc
mov
push
pop
inc
out
sti
repz
xchg
push
push
loopne
cwtl
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
push
icebp
data16
jle
fistpll
mov
fdiv
xor
or
cmp
push
scas
into
aaa
frstor
sbb
mull
add
aad
out
jb
icebp
inc
in
sbb
cmpsl
adc
jge
mov
out
xchg
addl
sbb
insb
pop
jns
inc
mov
and
xlat
xor
cmp
and
sbb
dec
repz
xchg
or
dec
insl
int
dec
mov
sbb
faddl
fwait
or
insl
and
in
in
jae
inc
mov
push
lret
cwtl
pop
push
adc
jg
and
inc
outsb
push
jecxz
pop
mov
push
cmp
push
lock
movsl
lcall
or
xor
xchg
mov
mov
pop
fcmovnb
enter
pop
insb
leave
data16
pop
popf
hlt
cwtl
sbb
xor
popa
stos
ret
in
pop
jae
inc
addb
inc
dec
dec
push
sti
xchg
pop
daa
enter
iret
ja
jmp
scas
les
cwtl
lds
leave
jb
xchg
cmp
adc
cmp
lahf
iret
mov
push
add
mov
or
jbe
lcall
pop
or
mov
mov
inc
xor
push
xchg
call
push
or
sti
inc
lret
mov
icebp
adc
sbb
fcompl
cmp
into
loopne
out
test
inc
jecxz
ror
add
inc
movsl
bound
jle
sub
out
gs
dec
and
repz
fadd
out
add
shrb
sub
scas
sahf
shlb
gs
scas
xor
loop
enter
xchg
pop
sub
and
popa
push
dec
sarb
dec
cmpsb
cli
test
das
pop
stos
imul
mov
cmp
dec
je
cli
push
jecxz
mov
cmp
stos
mov
mov
ss
pushf
fs
in
scas
push
shll
mov
ror
jmp
js
dec
shll
icebp
cwtl
dec
add
mov
jb
aam
xchg
pop
gs
lcall
push
das
icebp
mov
adc
shrb
mov
sbb
sti
jp
jae
xchg
dec
or
out
movsb
xchg
je
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
xchg
and
ret
fistpll
aad
setg
dec
jb
mov
test
or
lods
mov
cmc
pop
sub
dec
mov
out
mov
pop
push
hlt
test
mov
imul
hlt
push
push
jmp
imul
push
sbb
jne
clc
dec
in
xor
lds
or
mov
or
movsb
push
mov
push
or
fdiv
rcrl
pop
rorb
add
mov
mov
and
mov
decb
mov
fsubl
mov
fcmovnb
push
fs
dec
stc
lock
adc
fidivs
jl
adc
hlt
aas
adc
scas
cli
loopne
in
fwait
or
pop
rolb
or
lds
ficompl
fists
sub
addr16
xchg
push
dec
popa
lea
xor
cmp
xchg
or
mov
mov
cwtl
test
pop
inc
ret
lea
push
push
les
not
mov
loope
sbb
stos
mov
fldt
push
push
dec
xchg
imul
fisttpl
pusha
cmc
shl
xchg
in
dec
test
pop
jmp
clc
outsl
call
subl
push
xchg
xchg
add
xor
xor
lods
andl
xor
cmpsb
mov
adc
xchg
arpl
jecxz
mov
dec
sub
ss
and
lds
mov
jmp
xchg
hlt
and
icebp
inc
icebp
stc
sub
cwtl
daa
insb
fucomip
movsb
aaa
icebp
or
sbb
lcall
insl
dec
push
sbb
clc
ds
mov
test
adc
push
les
xor
lock
jg
repz
sahf
je
push
movsb
aam
ret
imul
sbb
jae
lods
cltd
daa
clc
es
sbb
inc
pop
sbb
adc
popf
xor
xor
fwait
imulb
nop
or
xor
push
negb
jecxz
lret
xchg
test
adc
cmp
call
push
and
xchg
data16
mov
cmp
pop
pop
mov
mov
negl
ja
xchg
inc
cmp
sbb
sub
inc
mov
cmp
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
xor
push
movsb
sarb
jge
jle
icebp
fnstsw
sub
dec
pop
jns
or
clc
bound
testl
bound
or
hlt
inc
call
xchg
jl
out
fdivrl
and
inc
cmp
sqrtps
fsubl
mov
xor
mov
lret
dec
nop
and
or
stos
fdivl
loope
repnz
jmp
inc
cmp
scas
cmpsb
ret
in
loope
cltd
or
mov
int
insb
mov
lock
push
ss
adc
xchg
lock
add
push
sub
nop
pop
repz
or
mov
mov
loop
data16
aas
xor
rclb
cmpsb
cmpsb
mov
dec
std
sbb
fxch
dec
repnz
lahf
sub
jne
adc
cli
movsb
push
mov
add
or
mov
or
icebp
fisubrl
cmp
cmpsl
hlt
daa
mov
or
cmp
cwtl
pop
push
rcrl
cmp
outsb
loop
aad
adc
sbb
xchg
or
fstps
cwtl
clc
out
clc
setle
push
adc
fists
nop
jb
xchg
add
add
xchg
ffreep
inc
rcr
cltd
mov
sbb
or
mov
pop
das
sahf
das
in
test
dec
add
popa
sbb
mov
dec
sub
mov
fbstp
push
mov
cmpsl
jl
mov
push
fcomps
lea
aaa
insl
add
pop
sbb
adc
loope
lcall
xlat
fs
mov
int3
add
data16
outsl
adc
pop
lahf
call
stc
jmp
bound
xor
iret
fdivrl
inc
xor
and
test
mov
ljmp
jb
cmovge
int
adc
mov
push
cmp
jne
mov
jecxz
sbb
mov
mov
cmpsl
lahf
and
xor
jae
adc
fs
repnz
popa
or
loop
inc
dec
movsb
dec
cmp
hlt
mov
in
rclb
dec
push
xchg
jp
testb
sub
scas
jmp
jle,pn
dec
sbb
mov
jle
repz
pop
das
add
pop
adc
stos
push
push
and
xor
iret
xlat
rcrb
fs
lahf
push
rcll
push
jmp
movsb
xchg
mov
in
ja
xor
push
cs
popa
fs
sti
repz
sbb
push
cmp
push
cmp
fstl
in
fisttps
ret
dec
mov
push
lods
stos
arpl
lret
cltd
and
pop
rclb
sbb
je
outsb
aas
in
aam
outsb
adc
dec
cmc
xor
adc
jecxz
ret
arpl
pop
mov
add
sbb
test
popa
pop
aad
aaa
outsl
and
repnz
stos
hlt
add
and
mov
movsb
stc
adc
lock
ficomps
mul
sub
cmp
lahf
pop
call
pop
cmp
inc
popf
push
andb
dec
cld
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
pushf
addb
and
jle
jge
popa
pushf
jbe
push
dec
test
xchg
in
cwtl
push
xchg
inc
mov
inc
mov
out
xchg
push
sahf
test
jle
mov
inc
dec
cmpb
arpl
and
or
mov
sbb
jno
fsubs
cmpsb
pusha
movsb
sub
ljmp
fs
ret
loopne
outsl
rcrb
sbb
or
jo
inc
cmpsl
or
int
fwait
insl
mov
jmp
pop
in
push
std
sub
mov
lds
pop
jo
cmc
jb
std
jnp
pushf
xchg
pop
cmpsb
jnp
sub
add
out
cmp
xor
das
mov
pop
repz
xor
sbb
adc
inc
push
movsl
or
add
out
xchg
mov
insb
mov
fcompl
sti
pop
pop
fiaddl
pop
jb
pop
jg
ret
gs
jns
cmc
sub
je
jg
pop
push
adc
xor
mov
or
fldl
mov
xchg
mov
lcall
sub
rcrb
dec
arpl
add
dec
nop
sub
sub
and
cmpb
inc
cmp
and
xchg
pop
popa
mov
jge
cs
data16
sbbl
out
shlb
add
loop
push
jecxz
dec
dec
cmp
and
add
xchg
adc
adc
xor
xchg
das
subl
jg
xlat
pop
shlb
mov
filds
jle
xchg
adc
inc
movsl
jbe
dec
dec
or
fdivl
sarl
jle
xchg
pop
dec
shll
or
dec
orl
js
fisttps
pop
cmc
push
mov
fisubl
test
es
fildll
stos
les
popa
andb
bswap
dec
je
jne
xor
das
jp
jo
add
mov
lods
mov
push
xor
jmp
add
sti
lea
cmp
push
adc
mov
pop
mov
xor
xchg
mov
mov
fs
jnp
std
into
push
or
movsl
imul
mul
and
ficomps
xor
mov
out
jecxz
inc
and
loop
pusha
xchg
sub
je
jo
nop
bound
popf
lahf
leave
rorb
mov
mov
mov
xor
inc
sbb
fs
sti
js
lods
movsb
pusha
sub
test
cmp
popf
and
mov
or
in
and
mov
pop
pushf
std
xchg
dec
push
clc
xchg
outsl
jle
outsl
into
es
mov
mov
add
pop
roll
cmp
int3
out
fsub
out
xchg
or
jbe
push
and
xlat
not
test
push
push
cli
notl
sbb
add
test
insb
into
jbe
shrl
idivb
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
out
jns
lret
jle
and
jle
xlat
mov
xor
dec
sbb
add
xchg
cs
loope
je
xor
ja
cmpsl
ret
or
stos
inc
mov
xchg
add
push
nop
repnz
sbb
mov
ret
mov
mov
pusha
jae
aas
sbb
in
fs
pop
pop
ljmp
roll
mov
stos
aas
popa
add
adc
cli
lds
fbstp
xchg
out
sub
mov
xor
xchg
sub
or
and
in
leave
cmpl
rcll
lock
xlat
jl
je
enter
add
fists
pop
shlb
push
aaa
adc
pop
dec
or
dec
setb
mov
mov
ja
xchg
lcall
jp
jo
xor
sub
fbld
fiadds
repz
andl
addr16
adcl
test
arpl
in
jmp
cmpsb
in
or
mov
rcrl
fwait
cmp
andl
adcl
iret
insb
stos
icebp
dec
fsubrs
pop
push
push
jno
pushf
xchg
addr16
sub
inc
shrb
push
dec
cmpsl
roll
repz
xchg
mov
jb
add
hlt
pop
pusha
cmp
push
sub
mov
popa
inc
sbb
inc
clc
or
inc
mov
fwait
push
push
ficoml
int
sbb
mov
adc
jb
int
clc
cmpb
mov
jge
cld
sub
repnz
lcall
push
int
sar
fs
scas
adc
mov
out
mov
repz
cmp
adc
in
aam
popa
imul
add
cmp
jo
js
leave
cltd
cmp
cmp
jns
mov
xor
mov
daa
pop
mov
dec
pop
jb
lret
movsb
sbb
and
stc
testl
loop
pushf
cltd
ror
in
outsb
mov
xchg
add
mov
jmp
mov
lods
rcrl
jp
leave
lock
lods
mov
xor
mov
inc
jbe
xor
lds
jecxz
movsb
inc
notl
mov
ja
jno
xor
insl
add
inc
in
push
lods
sbb
jmp
add
dec
dec
jecxz
push
inc
jo
popf
or
addb
insb
pop
lret
cmpl
ret
cmp
in
push
push
xor
pushw
cli
mov
jmp
out
and
shll
out
or
mov
stc
iret
mov
mov
enter
je
sub
adc
and
sti
cmp
mov
jbe
and
inc
xor
loope
out
inc
lods
add
adc
xor
jae
add
outsl
push
sarl
aam
push
repz
sbb
xor
sub
inc
jne
jmp
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
sbb
jle
in
jle
xchg
sbb
imul
cmp
std
xchg
cmpsl
insb
rcr
dec
cmp
push
cwtl
cmc
inc
add
fwait
test
inc
movsl
xchg
outsb
hlt
jbe
dec
shll
loopne
push
lahf
aad
into
jl
in
adc
inc
mov
push
test
cmp
ret
mov
inc
and
es
out
pop
dec
pop
insl
in
ror
into
mov
arpl
add
cmp
mov
jle
outsl
adc
or
jmp
mov
fistpl
push
mov
lea
testl
xchg
mov
imul
popa
xchg
sbb
mov
ja
mov
repz
mov
movsb
iret
aas
ret
ficoms
add
fsub
jge
sbb
xchg
div
mov
jns
fcomps
jnp
xchg
repz
or
mov
push
push
orl
pop
push
imul
popa
inc
jp
mov
or
sbb
les
jmp
mov
cltd
xchg
sbb
push
cmpsl
pop
lret
cmp
lea
repnz
cmp
fisttps
dec
stos
jbe
jae
add
xchg
mov
xchg
jb
sub
pushf
notb
cmp
insl
mov
or
stos
jb
xor
sub
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
sahf
nop
xlat
jle
in
jle
mov
sbb
pop
xchg
inc
aam
sbb
mov
dec
into
mov
out
mov
shlb
mov
sub
lods
push
mov
pop
pushf
ja
or
clc
push
cmp
lcall
jmp
ljmp
mov
mov
stos
sbb
cmpsb
xchg
lahf
dec
sti
pusha
stc
jne
shll
sub
imul
repz
xor
hlt
daa
dec
mov
cmpsl
mov
rcl
ret
mov
sub
arpl
fwait
push
add
sbb
sub
jg
push
xchg
dec
adc
pop
aad
xchg
and
outsl
lds
mov
and
ja
inc
add
xchg
out
ja
insb
fsubr
dec
insb
xor
or
ffreep
hlt
ret
bound
cmp
repnz
jmp
stos
fwait
mov
jp
imulb
mov
add
push
enterw
inc
xor
out
jno
movsl
mov
loop
test
jns
repnz
xor
xchg
test
mov
xor
mov
pop
fs
add
mov
xor
sub
scas
inc
jge
adc
inc
nop
push
adc
sub
cmp
roll
jo
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
and
stc
cmp
fnsave
adc
pop
cld
add
filds
pop
ds
imul
or
jne
cltd
movsl
cmp
aas
xchg
scas
std
stos
jp
lret
ja
cld
dec
adc
in
jnp
xor
bound
mov
and
icebp
icebp
jl
inc
push
mov
xchg
fsubrl
push
test
mov
jne
cmp
add
mov
mov
inc
inc
mov
cmpsb
sub
mov
in
pop
sub
push
mov
mov
aaa
mov
pop
incb
idivb
int3
pop
data16
pop
cmp
sub
mov
js
mov
insb
jae
arpl
cld
jmp
adc
in
daa
jno
pop
int3
mov
xchg
scas
in
pop
or
add
xchg
shlb
movsb
cltd
ss
jle
les
shl
dec
ret
test
and
cmp
repnz
scas
mov
pusha
add
sbb
aas
shlb
jns
and
push
in
dec
imul
jns
or
xor
call
cltd
mov
add
mov
lods
ds
push
fnstenv
sub
pop
nop
jno
pop
sub
loop
mov
mov
fcomps
adc
call
mov
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
rolb
jle
in
jle
imul
insb
sub
push
pushf
repnz
cmc
sbb
insb
jnp
imul
repz
xchg
inc
or
inc
pop
mov
cmpsl
rcrb
xchg
ss
adc
outsl
and
jbe
mov
out
xchg
inc
jae
aas
rorb
sub
into
and
insb
mov
mov
mov
or
scas
aas
sbb
inc
movsl
fcmove
add
sub
mov
call
je
mov
mov
mov
sub
dec
xor
mov
repz
xlat
add
add
pop
pop
xchg
pusha
mov
fs
cmpsl
ljmp
cmp
insl
dec
jle
add
and
xor
repz
pop
pop
push
push
out
push
sbb
cs
mov
lock
push
inc
fnstenv
mov
dec
rorl
call
cmp
mov
mov
jno
cmc
sbb
cmp
lret
jo
fdivrs
jb
movl
or
inc
andb
pop
pop
daa
fstps
fld
pop
imul
xchg
push
jecxz
lea
sbb
xchg
popw
stos
arpl
xor
sbb
in
or
lret
lret
loop
cmp
stc
decb
fwait
dec
jmp
icebp
test
outsl
mov
xor
add
jmp
adc
test
or
jo
sarl
in
jle
xchg
push
xchg
xchg
mov
ret
daa
movsb
lods
test
sbb
adc
notb
pushf
add
cltd
push
push
out
adc
ret
adc
mov
loope
mov
sbb
jg
xor
lret
or
adc
mov
lret
mov
add
out
push
sarl
jb
xchg
subl
xchg
test
pushf
stos
xchg
call
add
out
jp
shrl
jae
lods
shl
jns
sbb
mov
mov
pop
xor
lret
xor
jle
jns
lahf
jae
aad
push
push
testl
and
mov
sbb
jecxz
mov
les
shrb
dec
in
dec
rcll
pop
fs
mov
bound
inc
inc
mov
or
stc
bound
push
in
xor
mov
pop
fs
test
or
sbb
xchg
xchg
inc
pop
jno
cmp
daa
sar
jp
insl
sub
lods
jo
out
scas
pop
xlat
ss
stos
xchg
fsubrs
sti
cld
out
sbb
dec
inc
fdiv
dec
mov
ljmp
sub
xor
loope
pop
in
add
inc
loope
sahf
movsb
mov
pop
push
and
ret
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
cmp
cmp
jle
in
jle
call
es
mov
jg
nop
pop
idivb
mov
jl
cmp
test
hlt
cwtl
dec
dec
in
stos
push
stos
adc
mov
pop
pop
rcll
les
cmp
pop
jge
in
lret
push
mov
push
in
push
mov
gs
ret
mov
lcall
sbb
push
je
jg
xchg
sub
mov
scas
scas
mov
pop
push
in
jmp
add
adc
out
pop
mov
jp
adc
pusha
jbe
pop
and
xor
loopne
bound
lds
pop
xchg
xchg
pusha
dec
lcall
pop
inc
into
shlb
and
data16
lds
aad
xor
bound
xchg
mov
jbe
add
xchg
jge
daa
sar
pusha
std
neg
nop
mov
mov
pop
mov
dec
and
pop
jl
jae
mov
sub
xchg
push
xchg
das
sub
insl
in
gs
xchg
sar
mov
adc
loop
sbb
ret
mov
fsubrl
cmpsl
aad
bound
and
jbe
cmp
or
data16
js
jle
ret
sub
push
cld
fisttps
or
ja
jns
push
adc
aas
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
cli
mov
jle
in
jle
rclb
sbb
dec
test
leave
stc
outsl
pop
rclb
inc
ret
aam
sub
jae
xchg
mov
pop
dec
adc
sti
adc
iret
sbb
pop
mov
scas
cs
fwait
jb
std
mov
sti
inc
push
fstpl
pusha
push
dec
addl
sbb
pop
aas
ja
add
test
cld
clc
sbb
push
bound
pop
cs
cmp
pusha
xchg
dec
cmp
testb
std
shlb
push
pop
mov
cmpsb
sbb
pop
test
fistl
cmp
stos
or
jl
clc
mov
aas
push
xor
insl
adc
movsb
pusha
pushf
je
cmp
mov
xor
ss
cmc
jl
popa
xor
test
int
sbb
mov
adcl
gs
out
mov
stc
lret
mov
xchg
add
pusha
mov
mov
bound
push
int
sub
mov
mov
cmpsl
push
es
dec
lods
test
cmp
xchg
shl
push
sarl
fisubrl
cli
in
fldenv
fsubrs
cmpsb
adc
les
push
add
jge
dec
ss
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
imull
rcll
jle
jg
jle
xchg
aaa
clc
cmpsb
push
out
out
push
shll
test
out
je
cli
cmp
and
test
ret
or
std
sbb
xchg
sbb
push
jb
or
sbb
push
out
mov
pmaxsw
daa
cmp
dec
movsb
lock
aam
addr16
sbb
mov
pop
pop
inc
mov
jmp
ret
sbb
out
jp
or
cmp
mov
call
mov
int
inc
lret
mov
loopne
or
jns
ss
xchg
ret
outsb
test
add
test
lods
pushf
out
mov
das
inc
mov
rolb
push
mov
mov
arpl
jo
xchg
mov
lcall
mov
ret
adc
div
gs
pop
cli
xchg
sti
dec
loop
imul
cmc
cmpsl
add
into
sub
push
mov
mov
icebp
adc
add
popf
pop
push
fcoml
out
test
movsb
xchg
das
insl
push
out
sar
mov
xchg
lds
mov
sarl
mov
pop
insb
push
cmc
sub
arpl
mov
fxch
mov
adc
xchg
rcr
cltd
mov
arpl
lds
mov
lahf
cmc
mov
js
ja
jge
js
mov
mov
jg
inc
adc
xorb
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
xchg
mov
sbbl
fcompl
inc
stc
lahf
cli
push
xchg
rorl
lret
negl
mov
mov
sbb
rol
and
xor
mov
xor
jl
dec
cmp
repz
rcr
dec
fisttpl
mov
jns
pusha
or
xorl
clc
or
push
andl
add
mov
bound
xlat
imul
push
rclb
and
push
xor
mov
shrb
xchg
iret
stc
jl
dec
lret
xchg
jae
pop
jp
std
xor
xor
jl
sub
in
cmp
xor
ret
cli
cld
xchg
inc
xchg
mov
dec
add
scas
cmc
jle
pop
filds
sbb
and
push
cmp
dec
int3
dec
adc
fxch
lea
xor
gs
cmp
enter
repnz
xor
xor
inc
icebp
clc
add
jp
test
iret
push
test
fwait
xchg
inc
push
pop
add
sub
inc
out
pop
addb
or
lea
into
mov
sub
and
movsb
xchg
jbe
fstl
push
xchg
add
mov
inc
shll
ljmp
push
xorl
adc
or
pop
push
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
dec
cs
pusha
fidivrl
jp
jle
push
dec
mov
out
inc
clc
adc
and
call
out
mov
jnp
pop
or
mov
scas
mov
dec
or
ljmp
mov
mov
lret
mov
xor
sbb
pop
mov
fsubs
dec
rcrb
dec
xchg
std
call
mov
cmp
jae
and
jo
xor
sbb
popf
popa
out
push
and
pop
in
ljmp
xchg
cmc
cmp
and
pop
mov
sarb
push
fdivrs
js
std
pop
sbb
mov
mov
sbb
pop
loopne
pop
dec
push
lds
cwtl
sbb
mov
inc
test
lods
pop
insb
call
pop
adc
into
jp
std
js
test
xor
and
sub
and
add
clc
sub
rcrl
xchg
lahf
sbb
mov
stc
and
std
xchg
mov
fiaddl
and
shlb
enter
mov
xchg
testl
fwait
inc
pop
cmp
js
sahf
test
iret
cmpsb
adc
hlt
adc
bound
xor
cltd
sub
mov
sbb
fadds
lahf
jmp
xchg
push
jnp
sarb
fmull
pop
inc
add
pop
out
cmpsb
pusha
jecxz
sbb
cld
xor
aad
daa
daa
mov
push
int3
and
push
xchg
jne
shll
out
insb
rorb
mov
adc
add
stos
enter
js
mov
pop
sbb
ret
adc
fwait
lcall
out
sub
adcb
xchg
popf
stc
jmp
aas
xchg
mov
loope
jl
icebp
es
lods
pop
add
iret
nop
xor
shll
mov
cmp
pusha
mov
lret
insl
mov
fimull
in
mov
int
xorl
cli
repz
mov
mov
push
sub
nop
inc
jne
xor
pop
insl
push
sbb
ljmp
mov
or
fdiv
and
fdivl
or
sbb
enter
mov
jg
add
inc
shlb
in
fsubl
fs
out
push
dec
sub
test
aas
jns
add
lods
mov
xor
or
fs
in
or
or
je
fwait
xchg
sbb
adc
roll
push
aam
jmp
inc
mov
jg
arpl
mov
cmp
mov
mov
mov
fstp
mov
popf
jb
xor
cld
or
cwtl
and
data16
filds
stc
or
pop
sub
in
sub
loope
jo
sahf
sub
mov
xchg
in
mov
popa
fldcw
addl
arpl
jg
push
into
int
pop
cwtl
adc
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
add
jle
jge
jle
call
hlt
dec
xlat
cwtl
add
jle
rolb
xchg
movl
popa
push
jbe
clc
das
shlb
in
mov
int3
insl
icebp
add
insl
lret
cmp
pop
cmp
jmp
cmpsl
xchg
addl
cmc
dec
adc
aaa
xchg
scas
dec
push
fstps
fwait
scas
lret
scas
sub
xor
andl
add
fstp
stc
lcall
pop
push
sbb
lods
xchg
mov
ret
sbb
cmp
jne
sarl
dec
aas
gs
and
movsb
sub
lods
test
popf
jo
cmp
int3
cmpsl
sahf
fidivl
fdivrs
push
inc
pop
mov
movsb
mov
and
and
scas
test
sbb
cmp
sahf
pusha
les
testb
das
cmp
mov
nop
popa
pusha
jl
pop
inc
pusha
cli
mov
in
bound
aaa
xchg
lcall
inc
or
xor
movsl
mov
enter
scas
in
repz
push
inc
mov
fcmovne
mov
inc
fadds
lds
scas
push
sahf
sarb
or
nop
hlt
sti
fcoms
ljmp
in
sbb
data16
mov
adcb
mov
push
mov
loop
mov
mov
mov
mov
fsts
lret
shr
call
flds
jb
xchg
and
fsubl
sar
lea
push
sub
ror
xchg
lcall
jns
mov
jbe
aas
jle
sub
inc
or
gs
ja
loop
jne
mov
fucomi
mov
das
iret
jg
mov
pop
mov
mov
fnsave
roll
mov
xchg
add
jae
mov
mov
pop
pop
shrb
sbb
je
pop
adc
outsl
xchg
dec
jle
lds
fidivs
ss
addr16
sbb
push
add
push
std
ljmp
pushf
push
push
fcoml
test
pandn
out
sbb
push
dec
mov
roll
fiaddl
jae
aam
cltd
addl
pop
and
iret
jo
sub
mov
cs
insl
add
mov
dec
push
rcr
adc
jo
adc
mov
je
add
pop
ds
mov
icebp
sbb
je
into
add
ds
pushf
push
cmp
sub
jae
repz
mov
mov
inc
lods
pushf
inc
adc
or
test
dec
cltd
dec
pop
loope
dec
popa
int3
fwait
repz
je
xor
mov
ljmp
jne
test
daa
arpl
jno
in
mov
nop
repz
mov
das
pop
pop
js
lock
mov
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fldl
xchg
int
in
jle
jge
jle
sbb
mov
xchg
loop
adc
iret
sub
adc
cmp
jp
mov
jo
cltd
ror
mov
inc
lret
movsl
cmp
aas
mov
or
test
mov
and
mov
imulb
add
cmp
cmpsl
notb
xor
les
pop
shll
jno
faddl
out
push
push
imul
fstpl
adcl
mov
inc
or
push
fistpl
add
adc
je
movsb
rcrb
shlb
push
adc
pop
fildll
jns
jo
fisttps
imul
pusha
icebp
jbe
test
insb
add
movsb
and
insb
inc
xor
sbb
adc
pop
sub
jmp
sub
jecxz
ror
imul
dec
sbb
stc
leave
pusha
xorb
xchg
ss
push
xchg
cld
lods
mov
fildl
push
add
sbbl
cmpsb
sub
sbb
es
push
sbbb
ret
sub
or
stc
inc
sub
and
jle
mov
mov
mov
dec
lret
and
push
xchg
jle
sbb
sbb
xor
inc
aaa
popf
shll
lods
xchg
or
fidivrs
xor
cmpsl
movsl
cli
cmp
inc
adc
xchg
push
or
jle
sub
add
mov
pop
sbb
mov
mov
add
dec
mov
add
xor
test
xor
stos
xchg
stos
insb
data16
jnp
sub
xor
add
cmc
cmp
cmc
pop
aaa
cmpb
test
add
xchg
and
gs
inc
fwait
sarb
ret
pop
div
cs
in
mov
jno
std
loope
negb
or
popa
mov
and
dec
out
repz
sub
xor
push
ret
mov
scas
hlt
mov
mov
rol
movsb
xor
mov
cmpsb
xchg
imul
sub
cmp
jle
fsts
imul
sahf
mov
jp
jp
xchg
xchg
mov
xchg
lea
test
jmp
rorl
loop
loope
add
and
movsl
inc
push
cmp
jmp
pop
adc
out
mov
or
xor
jg
adc
jmp
into
rcrb
arpl
jno
push
cli
loopne
push
bound
jg
mov
sub
mov
mov
sbb
lret
mov
mov
xlat
fwait
sbb
insl
xlat
out
jg
inc
xchg
xchg
in
mov
pop
test
outsb
push
pop
push
xchg
jge
jle
lcall
fldpi
hlt
sub
jne
outsl
call
xor
fwait
pop
fs
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
or
add
jle
jge
jle
mov
mov
mov
iret
js
xchg
aam
cld
in
xchg
jb
stos
jecxz
call
add
jno
pop
mov
adc
enter
inc
mov
mov
dec
negl
push
and
or
daa
cld
xor
aas
cmpsl
lock
pushl
stos
sub
rol
insb
pop
mov
and
and
mov
aad
and
mov
notb
jmp
sarb
pop
sub
xchg
sub
adc
and
les
push
in
or
dec
mov
inc
fnstenv
and
ja
aad
mulps
push
cmpsl
jbe
out
xchg
pop
outsb
fsubrl
loope
push
sti
ja
xchg
mov
add
cld
insl
iret
test
lods
mov
ficoms
mov
int
xor
mov
mov
push
jbe
lods
sahf
xor
hlt
and
fcoml
mov
xlat
popl
mov
dec
inc
in
add
sbb
push
xchg
pop
push
or
aaa
push
pusha
sar
jg
pop
adc
cli
lcall
or
ss
jae
clc
data16
fs
push
and
mov
outsl
xchg
mov
jo
std
popa
xor
in
sbb
inc
or
scas
adc
cs
sbb
idiv
mov
test
mov
mov
xor
adc
lret
cmp
mov
aas
mov
sub
xor
sub
push
or
mov
test
outsl
push
dec
out
sbb
mov
je
fs
adc
dec
je
mov
jle
add
mov
fisttps
mov
jge
mov
cld
ficoml
cmp
xor
xor
clc
stc
xchg
int
subl
int3
test
mov
fimull
xchg
leave
jl
hlt
ret
xor
cmp
mov
insb
sbb
dec
fisubs
mov
or
cmpsl
hlt
push
cmp
gs
or
pop
iret
sub
mov
inc
push
and
call
sub
pop
cli
push
dec
xchg
dec
or
jo
jne
lret
push
stos
mov
arpl
add
std
arpl
frstor
shlb
jb
pop
push
sbb
xor
mov
pushf
das
leave
pop
fdivl
lods
subl
lahf
inc
cltd
push
lret
add
decl
clc
sbb
fiadds
repnz
or
push
shll
or
mov
fwait
cmc
je
subb
daa
mov
sbb
fwait
sub
andb
insb
mov
js
cs
lahf
sahf
xchg
fcmovb
mov
stos
clc
pop
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
fisubrs
jo
jle
jp
jle
aam
mov
mov
xchg
scas
pop
xor
in
jle
cmp
mov
dec
or
out
mov
insl
push
dec
sub
bound
cmp
cld
test
inc
movsb
mov
test
out
cmp
in
dec
xlat
rcr
out
xchg
lods
mov
pop
push
push
or
lret
sbb
or
icebp
pop
inc
inc
jnp
hlt
pop
push
fstpt
nop
inc
or
xchg
jle
sbb
dec
xor
sbb
cli
in
pushf
jp
lock
and
repz
push
ret
xor
subb
push
pop
in
push
in
adc
or
rep
mov
fwait
popf
jns
push
aaa
and
scas
xchg
mov
fidivl
mov
sbb
dec
sarl
pop
insl
sbb
dec
lahf
fdivr
psubd
cltd
pop
movsl
sub
clc
lods
sbb
shlb
pop
in
push
inc
cmpsb
xor
rcrb
xchg
sti
divl
push
or
add
aaa
xor
call
int
pop
mov
or
mov
cld
push
xor
jg
lds
rorb
hlt
pop
lahf
mov
shrd
jl
iret
cmpsl
fs
add
out
adc
xchg
mov
push
mov
push
xchg
sub
mov
icebp
lods
fwait
and
fimuls
push
dec
pop
ss
daa
fdivrs
xchg
inc
mov
clc
into
fldenv
push
sbb
jb
and
loopne
aaa
and
loop
inc
test
mov
je
dec
xchg
mov
xor
push
jnp
ljmp
dec
xor
cld
mov
push
dec
icebp
ja
imul
popf
cltd
stos
movsb
adc
movb
lea
stc
sbbl
mov
gs
in
push
call
dec
test
push
xchg
mov
addb
aad
push
xor
add
push
outsb
insb
xlat
iret
xor
mov
mov
cmp
xor
testb
fwait
sub
test
ja
in
fnstcw
cmp
cwtl
je
xchg
hlt
push
mov
movsb
and
insl
frstor
enter
inc
fcoms
stos
fistps
jge
add
popf
or
pop
popa
iret
mov
cmp
mov
inc
inc
out
push
inc
shll
pop
js
call
mov
mov
sbb
icebp
mov
loop
add
mov
inc
stc
adc
push
sub
or
or
mov
mov
mov
push
fwait
cli
xor
aad
mov
adc
cmp
cmp
sub
int
insb
push
cmpsb
xchg
push
sbb
cmp
inc
jmp
sub
adc
sub
cmc
and
xorb
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
test
xchg
dec
jl
jle
jp
jle
jmp
cmp
fcmovnb
sbb
aad
lret
shrb
fnstsw
mov
fwait
inc
mov
mov
cmp
mov
xchg
sub
test
aaa
mov
cmpsb
test
mov
dec
adc
out
rclb
pop
shl
sbb
sub
gs
xchg
aam
sti
xor
jecxz
push
sub
int3
xor
adc
xchg
pusha
xor
scas
sbb
sbb
scas
cld
mov
mov
xchg
movsbl
mov
pop
int
test
aam
pop
fisubrl
sub
lock
ret
aaa
ja
loope
jae
sarl
jae
inc
push
or
add
jo
fimull
push
sbb
dec
mov
jb
loope
inc
cmp
xor
scas
stc
inc
inc
dec
mov
pop
jle
mov
mov
fcomps
iret
int3
cltd
sbb
shl
iret
jmp
and
scas
mov
lret
push
dec
xorb
stc
xchg
insb
leave
jnp
rclb
mov
cwtl
inc
mov
ret
movsl
push
ret
movb
dec
adcb
lcall
aaa
push
nop
jno
dec
fsubrl
jmp
mov
xor
insl
xor
cltd
jns
or
pop
sub
inc
ffree
mov
jae
rorl
ss
aas
aam
inc
push
jno
dec
xchg
outsl
inc
push
or
hlt
loop
ret
fs
mov
loopne
loopne
sbb
jecxz
xchg
out
and
sub
sub
js
xor
clc
rcr
aas
fisubrl
push
mov
cmp
jmp
mov
xchg
sbb
xor
dec
ds
jle
mov
jno
fwait
es
mov
iret
out
adc
imul
test
sub
mov
sbb
es
leave
test
scas
iret
sbb
imul
daa
stc
lret
iret
inc
scas
xchg
pop
mov
pop
add
and
into
xchg
or
adc
test
push
xchg
jg
push
lret
mov
int3
nop
jbe
ret
aam
jl
repnz
stos
or
add
and
popf
xlat
arpl
jns
jae
insl
scas
sbb
push
adc
push
adc
push
sbb
lods
aaa
dec
cli
lahf
hlt
lods
in
mov
and
xor
test
mov
int
fs
cmp
dec
icebp
addr16
insb
sub
arpl
test
push
cli
and
and
jmp
add
mov
in
subl
loopne
insl
imul
jne
adc
mov
push
out
shrb
push
or
mov
dec
mov
xorl
ljmp
pop
cmp
movsb
dec
ds
jmp
in
notb
sub
imulb
jle
jge
jle
stos
in
lock
or
add
stos
or
add
mov
add
inc
in
xlat
mov
add
xor
hlt
inc
inc
loope
test
sarb
movsl
sbb
aaa
and
xor
daa
outsl
xor
mov
push
fisttpll
add
rorl
pop
mov
adc
adc
mov
aaa
sub
test
sbbb
in
jns
enter
mov
stos
outsb
add
ret
mov
out
les
imul
repnz
inc
push
scas
push
shl
push
cmpsb
arpl
out
leave
jae
int
or
in
aaa
push
mov
sbb
mov
mov
mov
subl
stos
jl
bound
sub
mov
push
mov
ds
int3
je
dec
dec
cld
or
mulb
pop
das
movsl
mov
jle
push
lock
hlt
outsb
jno
test
repz
cmp
loope
scas
test
dec
or
in
mov
xor
fmull
mov
sbb
mov
pop
fsts
push
xor
int
pop
fcmovbe
sbb
adc
or
rorl
shrb
add
testl
ficoms
dec
adc
idiv
mov
test
sbb
test
lock
sub
pop
pop
push
cmp
cwtl
inc
repnz
cli
adc
test
xchg
sub
fwait
repz
jmp
mov
cmp
mov
cmpsl
rcrb
xchg
fcoms
jb
cmp
outsl
xchg
sub
push
orl
lods
mov
sti
xor
shlb
stos
push
test
out
cmp
call
mov
popa
enter
hlt
pop
pop
insb
jl
xchg
pop
mov
test
psubsb
and
rolb
add
lahf
ja
or
jae
xor
imul
push
sub
sub
xor
push
aam
jbe
fistpl
push
jbe
jle
xchg
shrb
insl
fiadds
pop
test
inc
in
sbb
xchg
outsb
and
push
loop
mov
and
pop
jo
jle
ja
lods
cmp
sbb
dec
pusha
fsubrl
mov
in
jo
jns
lds
sbb
xchg
std
dec
cmpsl
pop
mov
xor
cmpsb
xlat
xchg
jge
lret
or
stc
mov
or
inc
add
cmpsl
pop
fldlg2
inc
pop
rclb
fsub
push
jp
sbb
sub
lds
fmuls
xchg
cmp
in
jo
mov
lahf
jne
mov
lock
adc
ds
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
out
add
jle
jp
jle
sti
pop
cmp
sub
push
jp
orl
incl
shrb
fstl
and
cli
and
rolb
testl
cmc
sbb
push
sbb
pop
adc
xlat
pop
icebp
cmpsl
or
or
xchg
jae
push
hlt
mov
cmc
test
popf
push
imul
loope
mov
clc
stos
mov
xchg
mov
stos
xchg
sbb
cmp
fcomi
or
arpl
push
cmpsb
lock
and
adc
gs
inc
icebp
xor
cmp
test
dec
mov
pop
jg,pt
cmpl
sub
daa
and
mov
in
icebp
jp
and
cs
fwait
sahf
xor
pop
mov
stos
jbe
insl
imul
pop
mov
imul
insb
cmp
in
inc
lcall
mov
je
insl
sbb
call
outsl
xor
in
repz
jg
int
mov
inc
aad
dec
stos
fnstsw
adc
psllw
aam
cmp
jnp
outsl
jmp
cmp
xchg
xlat
repnz
hlt
push
iret
jbe
pop
jne
sub
sub
test
pop
stos
popf
pop
mov
inc
jne
fwait
xchg
bound
add
popa
adc
push
mov
icebp
add
ret
mov
out
mov
pop
dec
cli
or
inc
or
dec
sahf
jno
mov
push
lret
subb
sahf
sub
out
cmpsb
or
and
adc
adc
fxch
pop
and
jo
idivl
aas
dec
cld
or
inc
inc
jae
sahf
mov
pop
mov
dec
sbb
lds
mov
sub
cs
arpl
das
xor
jo
in
or
mov
and
aas
inc
xchg
and
adc
ds
xchg
movsl
outsl
sbb
xchg
ret
lock
sub
sbb
mov
mov
dec
push
lea
adc
cmc
mov
mov
sbb
lods
clc
add
aaa
xor
test
data16
adc
pop
cmp
mov
xchg
stos
jb
scas
out
jne
nop
scas
mov
movb
mov
popa
les
mov
movsl
add
or
ret
mov
sti
inc
iret
push
stos
sub
inc
cmp
dec
mov
inc
pop
dec
dec
push
xorl
push
sbb
scas
sahf
or
jns
fildll
pop
ljmp
cmovo
ds
mov
mov
inc
push
int
out
aad
sub
sbb
push
mov
mov
mov
mov
rcll
loopne
pop
cmpsl
xchg
sti
rcll
inc
in
imul
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
addl
jge
jle
cs
outsl
fistl
sub
and
dec
push
pop
lcall
adc
cmp
in
daa
lock
nop
daa
dec
pushf
ss
fs
cmpsb
sbb
addr16
popa
rorb
jb
icebp
ds
loopne
dec
pop
pop
push
jge
jo
and
or
call
insb
cmp
iret
aas
and
sbb
ds
or
sub
out
adc
lahf
mov
outsl
addr16
cli
gs
pusha
dec
cli
sbb
and
inc
mov
aas
push
call
mov
inc
dec
push
jle
jne
mov
jmp
mov
or
xor
inc
lods
dec
pop
xor
in
dec
push
in
xor
xor
mov
or
fmul
mov
push
or
mov
mov
icebp
jnp
cmpsb
push
mov
cwtl
std
popf
mov
mov
ja
sub
sahf
into
shl
xor
fwait
pop
inc
cld
pop
pop
jns
inc
jecxz
sbb
sbb
cltd
fnstsw
jns
lods
aam
scas
mov
fdivrs
xchg
pop
mov
mov
xor
fnstsw
cmpsl
fs
in
mov
dec
cmp
dec
cmpsb
pop
daa
xor
inc
clc
stc
adc
aad
mov
xor
add
mov
xor
aam
push
leave
cmp
fcomi
insb
je
sbb
lods
inc
in
sarb
jle
jmp
xchg
cltd
lahf
and
xchg
xchg
mov
fsubs
cmpsb
in
and
loopew,pt
adc
inc
cmp
jno
andb
nop
xor
mov
jecxz
faddl
inc
movsl
stos
push
repz
in
add
jnp
dec
pushf
or
arpl
sbb
in
mov
data16
push
out
xor
adc
inc
push
mov
mov
enter
and
sub
jns
add
jle
push
mov
les
lret
ja
pop
sub
sbb
or
lock
ret
mov
ret
mov
xchg
inc
mov
sbb
insb
lods
jecxz
iret
pop
test
lods
xchg
rcrb
dec
and
pop
ret
dec
es
or
cmpsl
popa
shl
ret
jl
hlt
sti
es
cld
aaa
adc
xor
pushf
stc
pop
cmp
dec
scas
sbbb
push
das
arpl
jbe
pop
dec
clc
lea
mov
adc
loopne
cmp
mov
paddsw
sub
addb
ror
adc
js
in
or
shl
pop
scas
out
cld
sbb
dec
push
pop
jnp
lret
jg
pop
adc
sbb
add
cmp
sbb
jb
ret
mov
outsl
mov
mov
ds
fwait
stos
xchg
rcl
je
jb
ret
lahf
les
cmpsl
or
stc
out
ret
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
adc
inc
aaa
or
jle
jp
jle
daa
mov
int
and
daa
std
sub
enter
aaa
inc
ret
pop
sub
and
test
popf
sti
into
mov
fdivr
lock
daa
sub
shlb
lock
and
lods
cmp
sub
push
pop
jnp
mov
mov
dec
test
sub
xchg
rcrb
outsl
sahf
push
dec
cmc
dec
in
and
jae
xchg
xchg
movsl
repz
lea
icebp
or
scas
cwtl
rcrl
ss
push
inc
movsl
lds
cmp
loope
aaa
call
adc
xchg
lds
repnz
or
data16
sbb
lahf
jp
jns
dec
iret
and
and
jmp
add
addr16
xchg
data16
push
stos
sub
pop
mov
icebp
aaa
jle
in
push
stos
mov
das
adc
or
mov
test
adc
pop
inc
sbb
loopne
das
mov
sub
cltd
and
jmp
dec
mov
std
dec
push
or
stos
inc
sub
iret
pop
inc
dec
mov
int
ss
mov
scas
insl
push
jo
mov
bound
ds
cmp
arpl
sbb
cli
test
popa
jmp
adc
mov
xchg
xchg
sbb
xorl
cmp
cmp
in
inc
push
jb
adc
cmp
mov
mov
xor
push
mov
iret
xchg
mov
push
pop
or
xor
aad
mov
cld
adc
pop
js
fsubrs
in
lds
stos
ss
dec
lcall
xor
idivb
pop
scas
stos
cmp
push
jg
into
jbe
and
iret
aad
andl
insl
cmc
add
sub
insb
xor
adc
xchg
fmull
and
test
inc
les
push
jns
pop
dec
xor
bound
inc
pop
int
pop
cmp
add
adcl
cwtl
lods
lock
dec
jnp
fdivs
frstor
push
adc
inc
and
dec
sbb
dec
icebp
dec
out
sbb
fildl
sarl
sbb
rorl
sbb
into
popa
sub
sbb
inc
xlat
js
adc
xchg
jecxz
stos
daa
mov
pop
mov
xlat
sahf
sub
imul
sbb
call
push
aad
xor
inc
lock
ret
jl
mov
lea
mov
call
cld
mov
insl
push
arpl
fcom
xchg
sbb
dec
pop
push
addl
test
xor
push
or
push
mov
mov
mov
or
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
adcl
js
mov
popf
dec
and
jl
add
and
cmp
mov
cmp
notb
sub
fcom
aas
call
adc
inc
mov
pop
stos
divb
push
int3
roll
mov
mov
movsl
pop
data16
fdiv
fwait
sbb
dec
xchg
mov
pop
adc
sbb
rolb
shl
mov
jae
xlat
jns
out
sub
add
cwtl
push
jp
mov
test
adc
fsts
mov
daa
or
insl
filds
insl
gs
dec
jmp
dec
xchg
xchg
jecxz
push
loopne
std
in
xchg
pop
sub
lcall
push
iret
jmp
inc
lea
cmc
push
pop
imul
mov
aaa
and
clc
cmp
add
dec
mov
dec
mov
or
and
seto
inc
shrb
jl
xchg
push
pop
fildl
movsb
dec
xor
shlb
adc
xchg
push
out
test
xchg
aas
int3
int3
mov
stos
sub
xorb
pop
jmp
cmpb
sbb
aas
popw
mov
insl
mov
ret
sarl
push
stos
xor
push
insl
loopne
cmpsb
sbb
insb
mov
xchg
mov
pop
xchg
push
jb
lods
add
jo
aam
cmp
adc
fwait
es
filds
xlat
inc
test
adc
pop
push
mov
add
test
or
and
xchg
ljmp
sahf
fistpll
xorl
or
sbb
adc
cmp
daa
adc
lods
fdivrs
xchg
jg
subb
aam
in
push
leave
and
pop
dec
pop
xchg
sti
xorb
pop
sbb
jecxz
daa
mov
sbb
add
push
adc
loop
sbb
lods
xor
push
and
pushf
xchg
xchg
decl
sbb
xchg
test
aas
and
in
sbb
and
adc
and
lahf
xchg
mov
adc
popa
push
dec
xchg
aas
movsb
cwtl
pop
lods
dec
sub
adcl
aaa
fidivrs
je
xchg
js
push
jne
movsb
xor
test
mov
dec
aad
loop
ret
push
sti
orl
lods
xchg
loopne
loop
or
cli
inc
scas
mov
and
sub
pop
ds
push
push
or
sbb
cli
push
int
mov
adc
push
push
in
push
fs
jbe
lahf
loopne
and
adc
aam
out
fists
test
bound
fsubrl
aam
filds
lahf
mov
dec
sbb
mov
arpl
and
fstp
push
lock
cmc
pop
fsubrl
jmp
cmp
out
insb
lock
or
cmpsb
pop
lea
lods
aas
add
dec
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
xor
popf
adc
jle
jp
jle
xchg
inc
pop
and
in
ljmp
cmpsl
lods
xor
jl
je
lock
ja
mov
idivl
mov
sbbb
xchg
mov
cmpsl
adc
insb
scas
mov
ds
shlb
and
pop
mov
in
adc
ja
ficompl
stos
mov
jg
dec
lret
mov
sbb
jb
cmc
in
mov
mov
mov
hlt
dec
ds
mov
xor
mov
cli
sbb
out
and
mov
cmp
push
jecxz
fcmovne
mov
int
cmp
sbb
xchg
add
and
mov
ja
mov
pop
mov
mov
and
inc
cmp
bound
dec
jg
xchg
fmull
xor
xchg
mov
leave
cs
push
fwait
mov
cmp
pop
sub
js
orb
sbb
ja
cltd
dec
add
fisubrs
hlt
xor
push
jne
pop
sbb
mov
sub
dec
adc
mov
xorb
sbb
xchg
out
fcmovnb
outsl
enter
add
push
xor
aam
cmp
orl
test
jae
push
xor
imul
add
and
xor
lcall
mov
test
addr16
je
lret
fildll
movsl
jbe
mov
or
add
mov
push
mov
jae
inc
jae
mov
fstpt
shl
inc
fwait
cli
cmpsb
dec
push
cmpl
pop
mov
jno
jecxz
dec
adc
pusha
outsb
loop
mov
push
out
ud0
dec
decl
xorb
cmpsl
sub
pop
mov
je
ss
and
mov
sub
mov
stos
cmp
call
cmp
inc
stos
sub
jo
pop
or
addr16
repnz
mov
add
or
push
sbb
cmpsb
or
scas
aam
ds
sub
sarl
jb
int3
enter
pop
cmpsl
push
imul
mov
pop
mov
xlat
loop
roll
shrl
xor
mov
clc
ficompl
xor
jl
push
pop
jge
fsubrs
mov
in
xchg
insb
rcll
jb
dec
push
fs
testl
sub
cmpl
aaa
add
std
sti
pop
ja
sbb
cltd
bound
outsl
jge
lahf
stos
lods
fbld
sbb
fwait
and
in
xchg
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
jge
mov
xchg
jp
jle
and
cltd
leave
pop
cwtl
inc
jmp
or
or
lret
adcb
nop
pop
push
xor
imul
lret
and
in
sub
jbe
fadds
adc
mov
add
mov
mov
sbbl
scas
clc
pop
xchg
xchg
jb
jo
mov
out
jmp
sub
cmp
jno
and
cwtl
repz
filds
loopne
mov
data16
aam
ss
sbb
sbb
and
xchg
xchg
add
jbe
hlt
fsubrs
testb
lcall
xor
loope
rolb
jno
rcll
divb
stos
pop
sti
fdivl
xchg
mov
scas
into
fdivrl
pop
push
aam
or
test
arpl
or
inc
xchg
dec
rcll
xor
jb
mov
dec
adc
mov
and
mov
hlt
in
or
xchg
add
dec
in
sahf
dec
adc
add
jp
test
sahf
in
out
sub
mov
push
int
out
cmpsl
mov
lcall
stos
mov
sbb
pop
pusha
add
mov
push
rcrb
repnz
outsb
inc
outsb
xchg
test
fbld
inc
frstor
adc
cli
xlat
lock
jecxz
rcll
mov
sahf
lds
inc
mov
insl
jle
dec
clc
cmc
xor
dec
je
aam
inc
jae
out
cmpb
pop
xlat
decl
out
or
mov
jle
cli
jp
mov
fidivl
fdivl
out
push
ja
cmp
aad
xor
jb
inc
sub
fisubl
adc
inc
lret
lock
push
je
pop
addr16
inc
mov
fwait
pop
insb
fldl
and
sub
pushf
fsubl
sti
add
xor
dec
cmp
lods
sti
mov
mov
mov
mov
push
lcall
dec
repnz
push
dec
sbb
aam
and
adc
mov
pop
cs
push
data16
sub
fxam
cmp
mov
or
mov
push
stos
jg
jp
push
scas
xchg
mov
adc
addl
pushf
cltd
xlat
fcoms
clc
inc
adc
push
add
push
jnp
xchg
and
fistl
or
outsb
cmp
add
cltd
mov
pop
in
xchg
adc
push
cltd
or
push
cwtl
les
pop
sbb
mov
pop
mov
push
push
out
out
inc
add
fs
adc
lret
imul
adc
frstor
mov
add
mov
pop
or
push
push
sub
daa
pop
test
add
mov
pop
inc
fcmovne
jns
les
loopne
dec
inc
popf
xchg
sti
or
sbb
add
out
xor
mov
loop
into
xor
xchg
push
push
sarb
jp
jle
push
dec
enter
xor
mov
jmp
jl
ljmp
inc
push
outsl
insl
push
popa
dec
aaa
test
jle
jne
jecxz
mov
inc
pop
test
sbb
stos
repz
loopne
cli
out
dec
test
dec
int3
ss
int3
loopne
pushf
or
fists
lods
mov
mov
mov
inc
mov
fdivrl
icebp
mov
cmp
jbe
and
pop
pushf
pusha
ja
lea
push
jb
sbb
mov
push
sbb
xor
std
test
in
mov
popf
outsb
push
js
mov
test
pop
inc
sub
and
xchg
insl
repz
lcall
fnstenv
inc
pop
por
xor
add
dec
mov
insl
xchg
lock
mov
pushf
cmpsl
pop
inc
punpckhwd
fcompl
shrl
mov
lret
or
insl
pop
xchg
mov
movsb
push
pop
sub
add
jb
lret
loope
push
mov
push
and
and
xor
fsts
lcall
sub
dec
out
ficompl
fsubl
mov
mov
mov
test
aas
jb
pop
add
pop
xor
push
leave
jg
es
jns
push
mov
lock
imul
xchg
fwait
icebp
push
cltd
jmp
or
fiaddl
sub
cmc
shrb
xor
add
mov
mov
xchg
and
xor
jns
sub
mov
sbb
cmpsl
inc
flds
scas
cmc
lret
nop
in
insb
popa
inc
xchg
in
and
cli
push
jbe
mov
and
cld
add
aad
mov
add
mov
push
loope
sahf
hlt
mov
cmp
pop
xor
iret
scas
push
js
xlat
sahf
movsb
mov
loop
push
in
or
or
in
mov
and
mov
jb
and
xchg
enter
sbb
jecxz
bound
repz
movsb
icebp
inc
jo
mov
jb
out
movsb
or
push
syscall
xchg
add
add
add
roll
and
aaa
popa
stc
gs
test
in
mov
xchg
aam
xchg
cmp
ja
out
and
push
fbstp
adc
jmp
add
jg
push
loopne
popf
sbb
cmp
cltd
in
mov
mov
mov
inc
xor
inc
scas
das
enter
fwait
inc
int
adc
shlb
out
hlt
inc
add
dec
pop
test
xorb
fisttpl
pop
in
push
dec
and
pusha
jo
fldl2e
rorb
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
inc
jns
cmpl
lods
pop
adc
xchg
pushw
xlat
data16
add
jbe
or
jbe
clc
imul
ss
enter
xchg
lahf
xor
push
mov
aad
push
sub
add
gs
and
pusha
or
mov
push
cmp
repz
and
mov
pusha
jne
push
out
push
rclb
mov
call
cld
and
xchg
ja
push
add
xchg
stos
fisttpll
pop
lods
mov
pushf
push
clc
cs
pushf
push
pop
imulb
int3
mov
enter
push
mov
scas
sub
les
jge
push
movsb
ss
stc
add
notb
cmc
in
inc
fs
xchg
loop
push
jg
adc
xchg
jp
xchg
fnstcw
add
leave
lcall
shrl
pop
sub
mov
and
lahf
push
je
add
mov
xchg
gs
and
mov
jp
add
aam
and
inc
inc
fcoml
and
pop
fstpl
call
sub
movsl
rcl
and
dec
cli
cwtl
cmp
fisubl
xor
imul
ret
leave
mov
incl
movsb
xchg
rcrl
jb
and
das
jae
xlat
popf
mov
mov
jno
and
add
out
sub
inc
rorl
out
hlt
cmpb
sub
pcmpgtw
xchg
call
cmpl
xor
repnz
cli
xor
sub
leave
and
mov
inc
dec
in
mov
and
leave
stc
clc
cmp
dec
lretw
stos
or
adc
inc
xchg
mull
or
xchg
jg
fisttps
push
arpl
inc
into
push
in
jge
lock
mov
out
xchg
inc
dec
jne
and
lock
stc
jecxz
aam
cltd
mov
inc
sbb
std
mov
jae
mov
jae
jl
pop
rolb
xor
clc
push
js
imul
in
pop
aam
jecxz
mov
cmp
pop
inc
jno
popa
mov
mov
pop
pop
lahf
aam
dec
sub
sbb
pop
mov
rorl
mov
bnd
imul
fidivs
push
das
into
add
lret
je
mov
sti
jbe
fcomps
cmpsb
out
mov
cmpsb
in
jb
es
push
jbe
xchg
popa
push
stc
or
adc
add
xchg
pop
popf
movsl
fnstenv
push
inc
jg
cld
inc
outsl
roll
adc
jecxz
cmpb
xchg
call
mov
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
shl
jnp
daa
mov
jge
jle
pop
fwait
arpl
cmp
inc
pop
push
aad
scas
jb
bound
or
leave
xchg
dec
inc
insb
lods
stc
mov
dec
fwait
lods
mov
mov
mov
sub
arpl
jmp
xor
ds
or
pop
mov
std
xchg
imul
lods
dec
pop
in
or
imul
stos
or
push
nop
add
popa
add
mov
ret
test
push
mov
or
ret
lods
push
outsb
xchg
add
push
mov
cltd
stos
push
dec
cld
mov
sbb
repnz
xchg
cmc
cmp
cmc
aas
std
inc
cli
cmp
and
aam
jmp
jne
fsubr
sub
add
dec
movsb
xchg
adc
or
cmp
lds
mov
inc
shrl
inc
mov
sbbb
sub
stos
ljmp
std
add
cmp
call
inc
es
ja
mov
clc
pusha
scas
adc
inc
adc
aas
dec
cmp
bswap
mov
add
push
cmp
cmp
lahf
ret
lret
xchg
pop
stc
pushl
push
gs
int3
out
aas
lcall
loop
jnp
loope
push
jle
andb
leave
mov
jmp
daa
jbe
out
sti
inc
push
icebp
add
or
and
mov
xchg
pop
mov
sub
ja
aas
mov
xor
add
pop
popf
mov
fbstp
rcrb
dec
or
push
push
inc
lock
jg
popf
fsubrl
sub
add
mov
clc
pushl
add
pop
mov
test
cmp
outsb
popf
mov
pop
stos
imul
stos
sbb
push
inc
mov
push
add
loope
hlt
cmpsb
xchg
add
inc
insb
push
mov
or
xor
int
push
push
push
cltd
lock
in
shrb
in
sbb
and
roll
ret
sub
rcll
hlt
js
and
aaa
icebp
inc
fs
xchg
pop
push
pop
or
inc
pop
les
movsb
sub
cmp
jecxz
outsb
jmp
and
icebp
jecxz
dec
xchg
fdiv
int3
int
loop
inc
lahf
cwtl
xor
sub
lock
std
decb
sarl
lea
int3
add
sbb
pop
les
push
ljmp
push
and
imul
call
shlb
xchg
les
bnd
clc
pop
pop
dec
jne
push
sub
loop
lahf
sbb
pop
jp
repnz
and
cmp
mov
adc
adc
or
roll
sbb
sahf
cmp
movsb
loopne
sbb
push
lret
cmp
lds
push
mov
loop
push
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
cwtl
lds
imul
popa
mov
adc
cmpsl
loope
push
loope
xlat
mov
subb
push
js
push
inc
mov
jecxz
push
jne
mov
xchg
mov
scas
dec
pop
add
mov
mov
inc
in
xchg
imul
inc
add
and
sub
js
mulb
clc
pop
pop
cld
out
inc
decb
xlat
xchg
push
fimuls
add
test
jl
dec
imul
mov
loope
mov
mov
addr16
mov
or
pop
sbb
ss
jp
loop
xor
out
dec
xor
pop
or
mov
into
inc
sbb
testl
test
out
jg
and
sbb
decl
sti
mov
add
cli
and
lods
pop
test
xchg
add
insb
xor
inc
pop
repnz
mov
movsb
mov
insb
or
sbb
mov
or
jmp
mov
xlat
popa
jne
cli
outsl
cmp
pushf
sub
mov
jl
add
xor
in
push
scas
or
add
pushf
fistl
pop
adc
pop
cmp
cmpsb
mov
sub
hlt
mov
arpl
xchg
fisttpll
popa
roll
jo
pop
in
leave
inc
xchg
jl
popf
push
push
jbe
icebp
or
push
mov
jno
cmpsl
push
pop
pop
jp
xchg
dec
pop
sbb
pushf
xchg
push
roll
cmc
sbb
xor
popf
sahf
dec
fsts
iret
adc
dec
pop
sbb
xor
mov
mov
pop
aaa
imul
inc
repnz
jae
sarb
fnsave
xchg
fsubl
add
push
clc
inc
jno
mov
or
mov
rcrl
gs
pushf
addb
sub
popa
cmpsl
das
je
sub
sbb
push
arpl
lods
rol
ja
and
adc
lds
mov
movsb
add
and
mov
cwtl
jecxz
fstps
pushf
xchg
out
stos
mov
js
insb
outsl
pop
dec
mov
xor
or
shll
xchg
ja
push
call
outsl
ret
rcrb
push
out
push
mov
inc
push
cli
movsl
xor
cwtl
inc
fnstcw
jmp
push
addr16
adc
sbb
fiadds
jae
dec
lahf
push
shl
add
xchg
add
sti
adc
push
ljmp
cmp
lret
loope
sbb
pop
cwtl
mov
sbb
aaa
xor
out
scas
inc
mov
test
leave
fmull
enter
inc
movsb
pop
pop
or
leave
aaa
mov
aaa
push
sub
sub
cltd
ljmp
mov
cld
pop
loope
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
ss
mov
xchg
jle
jge
jle
push
sub
mov
js
insb
scas
mov
fcomps
aas
fidivrl
pop
ss
pop
clc
cmpsb
xchg
pop
in
int
add
bound
dec
addr16
dec
sub
push
mov
out
jl
dec
mov
sahf
sbb
inc
adc
setb
es
hlt
cmp
imul
loop
sahf
aam
xchg
cmpsl
divl
cmc
outsb
cmp
es
xchg
mov
mov
std
pusha
adc
ror
mov
fwait
mov
mov
mov
or
cmp
xchg
cmpb
or
loop
fs
xlat
push
pmaddwd
int
sub
sub
mov
in
outsl
mov
aam
and
addl
orb
jl
enter
jmp
xchg
ret
xchg
inc
mov
push
jo
fldlg2
cmp
sbb
aam
lahf
adc
jmp
jl
xchg
dec
orl
push
adc
jg
sub
mov
scas
fsubrp
in
cmpsl
jne
aad
clc
jo
orb
dec
ss
cli
int
insl
xlat
dec
mov
cmp
in
adc
imul
stc
or
sub
lock
fdivrl
adc
movsb
ret
daa
ret
inc
neg
mov
mov
sbb
lahf
cmp
jl
jg
mov
inc
or
out
out
jg
repz
sahf
push
das
push
scas
and
icebp
mov
hlt
push
scas
loop
negb
xor
add
xchg
add
or
inc
loopne
dec
push
loope
jb
fsubs
insl
jmp
xlat
enter
cli
cmp
dec
xchg
and
cmpl
bound
stos
jae
rorl
subl
daa
dec
xchg
adc
mov
inc
daa
test
outsb
jno
cmp
shlb
shlb
pusha
dec
or
mov
push
lcall
pop
pop
mov
sub
push
dec
loop
mov
repnz
xlat
add
sub
ss
mov
insb
bound
pop
mov
push
jne
aaa
shl
aad
imul
mov
mov
fwait
mov
push
movsl
xor
and
inc
jo
ja
subb
mov
xor
xchg
stos
or
inc
aaa
popf
cmp
mov
adc
sti
sahf
les
add
or
pushf
cmp
cwtl
xchg
mov
pop
pop
and
out
pusha
lods
push
mov
imul
dec
fsub
test
jge
js
xchg
sub
pop
das
xlat
xchg
imul
repnz
repz
adc
or
pop
es
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
xchg
fisubrl
xor
jle
push
jmp
pop
fwait
data16
leave
add
and
inc
xor
mov
sbb
inc
jo
inc
push
out
add
mov
pop
inc
add
mov
test
xor
sbb
scas
and
scas
unpckhps
pxor
mov
sahf
int
xor
cmp
mov
outsb
jp
es
je
xor
pop
cmc
data16
sub
push
ret
mov
lea
adc
sbb
adc
orb
jne
popf
jnp
dec
or
sbb
hlt
ret
dec
ror
or
ss
iret
repnz
imul
cwtl
push
mov
and
xchg
adc
jns
imul
test
les
fisttps
mov
stos
mov
mov
jo
std
lock
test
fstl
cltd
adc
sahf
scas
outsl
dec
xchg
mov
fwait
lods
nop
bound
adc
xchg
pop
daa
push
sbb
ret
hlt
into
dec
jl
stos
jp
and
jl
mov
inc
jl
das
mov
iret
mov
lret
gs
jne
cltd
mov
fadds
jnp
push
inc
in
xor
adc
repz
out
and
mov
test
mov
sub
les
cwtl
lods
push
popa
ret
hlt
xchg
mov
cmc
or
lret
call
xor
and
fsts
dec
pop
jmp
jle
push
adc
lds
sub
inc
lret
insb
inc
loop
cli
add
adc
jno
ja
out
loope
sub
jl
loop
out
mov
inc
or
sub
je
jge
scas
popf
cmp
fwait
jb
sbb
ret
sbb
mov
les
fld
sbb
xchg
pop
iret
ds
shlb
leave
dec
push
add
cltd
push
clc
adc
sub
icebp
inc
popa
je
xchg
jbe
adc
loope
sbb
sbb
repz
jecxz
jne
mov
ret
fsubs
ja
aaa
je
cwtl
aaa
fisubrl
inc
push
and
inc
xor
ja
pop
test
mov
lret
jbe
cmp
adc
pop
sbb
xchg
dec
jp
call
or
inc
pop
or
cmp
bound
sbb
jmp
push
int
pop
add
repnz
mov
mov
xchg
xor
jno
xchg
add
sub
es
sbb
cwtl
aad
adcl
or
jmp
jle
lock
bswap
jne
mov
fcomip
inc
pop
cmpsb
das
jbe
cli
xor
ja
mov
mov
mov
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
movsl
in
std
sub
jle
popa
sbb
mov
mov
or
and
xchg
jb
push
lahf
sub
loope
stos
int3
lret
add
stos
inc
jb
jo
adc
inc
and
jne
jg
or
filds
cmp
imul
or
movsb
pop
nop
lock
and
xor
rclb
mov
sahf
mov
pop
mov
add
std
lds
mov
scas
shr
je
mov
movsl
add
xchg
inc
push
loop
stos
or
in
pushf
out
or
xor
add
inc
mov
jbe
or
cmc
push
pop
xchg
sbb
jp
roll
fistps
and
cmc
xchg
loopne
xor
mov
rol
repz
or
jp
pop
jg
jg
int3
adc
outsl
in
add
jp
mov
dec
push
push
pop
loope
aad
sub
fsubrs
test
stc
xor
sub
dec
cmp
mov
jo
or
daa
sahf
and
pop
out
scas
jmp
mov
push
in
mov
xor
je
ljmp
jp
xchg
movsl
inc
cld
push
mov
cltd
fdecstp
cli
adc
dec
bound
and
sub
loope
lods
lret
or
mov
sbb
lods
pop
mov
xor
ret
xor
and
adc
inc
push
pop
out
xor
xchg
sub
inc
rol
cmp
int3
ret
lods
fbstp
add
aad
or
mov
jae
sbb
cmp
cmp
lods
mov
pop
addb
xlat
push
ret
jecxz
pop
mov
setle
jae
mov
les
nop
xchg
insl
mov
adc
xchg
popa
outsl
stos
adc
ret
fdivl
std
add
sbb
mov
adc
pop
push
and
pop
ret
outsl
ljmp
pop
imul
mov
jecxz
aas
push
in
or
addr16
jo
icebp
jnp
and
negb
les
jns
mov
aam
jp
mov
cli
in
leave
aam
add
xor
repz
sets
scas
jl
inc
sub
add
xor
ret
jnp
xchg
fwait
std
and
outsb
push
adc
push
inc
jmp
lcall
push
sub
aad
and
inc
sti
push
adc
mov
add
push
mov
cmp
lret
popa
mov
out
jns
and
mull
mov
or
cmp
daa
jne
popf
into
push
cwtl
sbb
loope
fwait
mov
neg
push
shlb
mov
push
inc
jae
fs
jmp
pop
movsb
sub
inc
push
scas
loope
lea
loopne
ljmp
aam
rorl
xor
jmp
das
subb
mov
xor
stos
xor
lcall
jle
scas
xchg
aad
lcall
aam
dec
pop
mov
or
addr16
push
mov
cmc
xchg
inc
int3
icebp
xchg
pusha
loopne
mov
push
push
sbb
call
adc
mov
je
xchg
insl
sub
xchg
pop
cmc
fwait
out
repnz
addr16
flds
jmp
sbb
aaa
js
jno
sbb
cmp
add
push
push
stos
or
cli
mov
inc
js
push
pushf
add
xlat
push
nop
and
mov
jmp
ljmp
sbb
je
inc
push
clc
std
xlat
andb
push
fstps
shrb
jns
jl
add
pop
mov
xchg
enter
push
dec
icebp
adc
shll
xlat
subl
push
dec
jle
inc
pop
call
fdivr
xchg
mov
hlt
fsubs
cmp
data16
mov
mov
pop
xchg
sbb
cld
jo
mov
ljmp
andl
cwtl
ret
jmp
test
dec
or
add
fwait
xor
aam
mov
sti
hlt
pop
scas
lret
dec
daa
mov
int
lods
ret
xor
lds
into
and
push
in
pop
pop
xor
out
in
sub
jbe
cmpsb
add
icebp
or
sbb
das
sti
pop
sbb
mov
xor
inc
dec
out
popf
fstpl
ljmp
dec
mov
pop
aad
mov
sub
or
xchg
dec
testb
daa
xor
pop
sahf
dec
and
xchg
out
adc
xchg
mov
in
xchg
out
ds
std
dec
movsl
aad
shr
out
cmpl
je
movsl
mov
sti
notl
dec
mov
push
push
scas
popa
out
mov
rcl
adc
push
lcall
lods
jns
or
jnp
adc
xchg
mov
enter
mov
cmp
gs
lret
rol
leave
pop
inc
mov
jp
rolb
aad
les
jg
jmp
rcl
ja
pop
int3
js
pop
adc
test
jmp
mov
nop
or
xchg
inc
cs
push
loop
movsl
pusha
cs
insb
jae
sarl
jmp
vpmulhw
addl
sbbl
sub
xchg
clc
popf
jae
lock
sbb
stc
pop
jae
cmc
ss
push
popf
imul
addr16
inc
ss
mov
filds
mov
dec
xchg
daa
inc
pop
imul
push
cmpsb
and
in
push
and
fwait
fs
cltd
mov
xchg
lods
jle
xchg
xlat
outsb
rclb
test
into
pop
aas
rep
movsl
jmp
ficoms
mov
ss
pop
mov
mov
jmp
repnz
adc
aad
fcoms
jmp
jle
jge
jle
in
imul
pop
cltd
stos
fwait
mov
pop
dec
cld
ds
rclb
and
inc
or
pop
aad
fistps
je
mov
daa
insl
adc
xchg
mov
loopne
mov
insb
jo
movsb
mov
ret
cmpsb
or
sub
inc
mov
push
sub
pop
dec
ret
vrsqrtps
cwtl
and
cmp
jle
jmp
cmpsl
cmp
jae
ja
iret
xchg
enter
out
pop
out
adc
repnz
repz
inc
iret
in
inc
je
dec
jne
test
loope
mov
out
cmp
lods
sbb
cs
adc
sbb
test
xor
cmp
cmp
mov
popf
lahf
or
loopne
out
popf
mov
add
jecxz
test
mov
stos
adc
loop
out
mov
fcmovnbe
pop
push
cltd
inc
push
mov
mov
pop
cmp
jecxz
addr16
mov
pop
mov
mov
std
jnp
es
add
and
popa
rcr
mov
xchg
jae
jne
mov
mov
jne
clc
imul
push
inc
fcmovne
or
shlb
ret
or
xchg
clc
nop
lret
adc
sbb
movsl
fisubs
dec
push
or
sbb
or
adc
imul
jnp
loop
icebp
push
test
jns
stc
pop
pushf
pusha
cmc
mov
pop
cwtl
idivl
inc
rcll
pop
dec
ljmp
adc
add
xlat
mov
dec
jecxz
aam
aam
add
jge
roll
aas
testb
ljmp
xor
call
movsl
jp
xchg
cmp
sahf
xchg
data16
jmp
loopne
test
adc
inc
xchg
lret
into
call
or
jbe
lret
sub
loop
dec
xchg
push
sahf
cmc
mov
fwait
lds
into
shll
arpl
ficomps
sbb
fisubrl
cli
rcrb
fsubp
es
fwait
jbe
or
cmp
and
inc
fistps
xchg
lret
sbb
sti
aas
add
addr16
mov
mov
xchg
sbb
sbb
and
add
scas
jae
aad
xlat
dec
or
stc
bound
icebp
xchg
push
push
mov
icebp
mov
and
fs
add
mov
push
sahf
inc
lahf
pop
push
adc
in
and
ds
je
fisttps
dec
push
pop
dec
je
cmp
xchg
mov
push
popf
mov
in
mov
iret
cmp
mov
adc
fmuls
subl
adc
adc
and
fnstsw
jnp
es
mov
pop
scas
daa
or
clc
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
btc
mov
jle
jge
jle
jnp
jne
or
daa
out
gs
xlat
xchg
lret
movsb
inc
sarb
stos
sub
insl
pop
adc
scas
pop
nop
call
sub
leave
or
aad
push
aad
and
imul
daa
mov
lahf
sub
xchg
stos
push
mov
pop
jg
dec
imul
jbe
dec
adc
and
sbbl
fisttpl
adc
xor
mov
and
add
std
imulb
mov
test
sti
mov
rcll
fiaddl
dec
push
ss
pop
fdivrl
jle,pt
adc
test
xor
mov
test
adc
adc
ret
out
iret
xor
sbb
push
outsl
test
popa
fdivr
int
cmp
in
sysret
mov
stos
outsl
cmp
test
mov
popa
jge
xchg
mov
xlat
mov
mulb
iret
insb
mov
enter
ds
inc
add
mov
iret
mov
pop
push
hlt
fs
cmpsl
test
cmp
or
sti
adc
lods
xchg
fistl
xchg
inc
jmp
in
das
idiv
insb
mov
pop
sub
nop
ljmp
and
repz
fisubrs
and
jle
xchg
gs
xchg
jo
movsb
vfrczss
inc
js
xchg
xor
clc
pop
cmp
sbb
aas
adc
dec
stos
fbstp
push
lock
mov
add
shlb
mov
sub
inc
loop
pop
rcr
ror
movsl
xchg
jns
test
shr
jle
cmpb
loop
lahf
jb
mov
push
push
add
add
aam
mov
bound
jp
pop
data16
push
inc
scas
pop
xor
repnz
insl
fdivrl
scas
dec
dec
mov
in
aaa
dec
in
cmpsl
arpl
imul
lods
mov
or
cmp
mov
push
in
dec
call
pop
dec
out
add
icebp
push
cmp
call
mov
loopne
cmp
pop
ret
sub
cwtl
jmp
jecxz
adc
iret
and
in
cmpsl
adc
dec
dec
cmp
or
push
xchg
cli
dec
cmp
ds
dec
mov
bound
or
xchg
pop
adc
mov
imulb
shll
pushf
lds
sbb
xchg
cmp
mov
in
mov
push
jnp
mov
xchg
clc
lahf
jno
leave
cli
test
sbb
clc
pop
lret
dec
loop
addb
nop
xlat
or
icebp
xor
pop
pop
ret
aaa
insl
cmp
fstpt
mov
stos
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
jmp
jae
aas
movsb
jle
push
jg
jle
ljmp
insb
pop
xorb
loop
sahf
mov
scas
js
out
mov
and
int3
fnstenv
orb
hlt
in
sbb
mov
jne
fwait
sbb
movsl
insb
lret
imul
pop
in
jg
sbb
mov
es
inc
xor
jge
push
loopne
icebp
sti
ret
sbb
inc
mov
lock
or
adc
pop
test
movsb
cmp
cmpsb
test
sub
sub
cmc
shl
divb
outsl
pushf
fstpt
mov
aad
cmpsb
inc
xchg
mov
jmp
cmp
cmp
popa
sahf
lret
sti
jno
ja
inc
mov
clc
lock
pop
pop
addr16
adc
xor
mov
adc
fisttpll
xor
mov
ret
aas
jno
dec
xor
enter
out
subl
push
xor
or
gs
jmp
ret
pop
jge
and
lcall
or
inc
daa
ds
xchg
je
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
ljmp
jg
jle
push
sbb
jnp
cmp
and
or
pushf
mov
aad
jecxz
or
or
jbe
ljmp
mov
fsub
fdiv
icebp
xor
rorl
int
call
cmpsl
icebp
je
imul
cmp
sbb
aad
loope
clc
and
sbb
and
cmpsb
mov
lahf
loope
xchg
xchg
pop
cltd
repnz
push
add
call
pop
sbb
repz
pop
cltd
outsb
out
jle
xchg
and
outsb
xor
dec
pop
aam
push
out
sub
int3
mov
jecxz
xchg
mov
fprem
sbb
std
es
pop
sbbl
out
pop
cld
sub
inc
negl
in
xor
cmp
mov
mov
div
sub
adc
sub
pop
and
xchg
mov
nop
push
push
xchg
out
nop
loope
pop
arpl
sbb
aaa
leave
rcrb
jmp
xchg
lahf
movsl
rcrb
insb
xchg
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
pop
add
mov
jle
mov
sbb
aad
movsb
sub
lret
add
push
in
sbb
or
pop
dec
cmp
mov
pop
pop
int3
das
and
add
sbb
mov
ret
xor
into
movsb
inc
movb
call
inc
fs
xor
mov
inc
ss
js
sub
mov
mov
icebp
hlt
bound
push
mov
cltd
in
vrcpps
inc
pop
fninit
insb
pminsw
outsb
xor
cmp
addb
xchg
jnp
jp
xchg
jge
movsb
je
stos
jecxz
xor
lret
rorb
out
cmp
fimuls
jbe
mov
adc
mov
jle
cmc
dec
sbb
outsb
sti
jne
gs
dec
aaa
sti
add
xchg
sub
mov
sbb
fdivs
cmp
adc
fnsave
cmp
jmp
fldenv
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
pop
rcl
out
mov
jle
aad
xor
sarl
aad
add
mov
inc
and
cmpsl
add
pop
sti
pop
scas
pop
pop
pop
sbb
dec
add
push
lea
shlb
push
loope
xor
add
cmp
sbb
stc
mov
and
adc
ja
shrb
divl
inc
jmp
inc
sbb
pop
jp
xor
inc
popa
sub
mov
add
jae
out
xchg
jbe
test
outsl
cltd
xchg
jns
mov
add
icebp
lret
dec
inc
add
insb
lock
mov
repz
cld
add
not
cmp
imul
or
dec
lea
or
out
cmc
insl
aaa
xor
adc
and
pop
icebp
sub
je
cmpsb
push
and
push
ss
sub
adc
sti
aaa
jecxz
xorb
dec
adc
enter
icebp
sub
icebp
lret
fs
dec
adc
sbbl
sub
and
testb
xor
mov
dec
fs
inc
cltd
add
outsb
leave
addr16
push
je
aaa
out
add
add
dec
scas
pop
test
dec
repz
inc
hlt
lret
pusha
arpl
jmp
xchg
pop
in
outsb
lds
xchg
out
aad
in
pop
adc
into
or
test
icebp
push
cmp
xlat
decb
pop
sti
pop
push
dec
shrb
in
cmpsb
mov
lds
fstpl
mov
sbb
jb
add
cs
or
rcrb
xchg
leave
subl
mov
data16
adc
in
lods
sbb
sahf
or
std
pop
out
outsb
std
xchg
lret
in
sub
outsl
ror
cmp
fs
mov
out
in
je
aas
mov
cld
xchg
xchg
lds
cmp
jo
adc
aaa
inc
add
in
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
push
outsb
jmp
int3
xor
mov
jne
fcmovb
cmp
cmp
mov
test
rcr
icebp
xchg
scas
push
in
xor
lret
xor
aaa
ja
or
ret
mov
adc
shlb
pop
insl
in
arpl
sbb
xor
testb
test
mov
outsl
add
push
aaa
mov
push
push
movsl
jmp
sbb
adc
jmp
cmp
aam
mov
outsb
outsl
mov
sbb
mov
pop
fcmovb
cli
jne
mov
nop
aad
cmpsl
add
out
pop
stc
mov
dec
mov
mov
ficomps
les
mov
lock
xchg
frstor
cmpsl
lods
pop
jle
aas
sub
adc
lods
jae
repnz
adc
iret
or
insl
pop
push
xchg
les
dec
jo
pushf
shlb
and
dec
dec
outsb
push
mov
mov
pop
imul
inc
loope
das
dec
addr16
loopne
push
call
shlb
xor
add
push
outsl
fistpll
inc
cmp
stos
push
dec
adc
and
insb
push
popf
jp
or
lods
fs
sub
cmp
cmp
outsl
cmp
lds
adc
popa
adc
das
call
sbb
test
cmc
xor
das
or
notb
pop
mov
adc
inc
hlt
fs
jo
int
sbb
jmp
out
add
addr16
call
mov
shl
addl
dec
stos
repz
mov
jno
adc
lock
dec
xchg
mov
jo
cmpsb
shld
dec
xor
mov
aad
sti
flds
in
movsl
outsl
mov
mull
sbb
or
or
sub
mov
mov
push
push
cmpsl
mov
adc
and
ljmp
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
or
test
mov
data16
push
jne
pop
imul
cmp
loop
sbb
clc
mov
mov
inc
push
int3
mov
sub
push
and
push
xor
popa
gs
add
xchg
call
andl
jmp
jno
dec
and
jmp
sub
adc
push
jbe
sbb
jge
mov
mov
fdiv
sbb
pop
mov
inc
mov
int3
inc
or
insl
jne
or
or
inc
xor
jo
or
mov
hlt
mov
xor
inc
cmc
or
cmp
inc
and
pop
push
mov
and
jp
mov
sbb
in
aam
sbb
sub
jl
lret
ja
push
ror
mov
cli
cmp
xchg
aad
iret
jbe
cmp
or
mov
pop
aad
imul
push
xchg
cmp
sub
sbb
lret
pusha
adc
mov
arpl
in
cmp
and
xor
push
add
shl
xor
pop
jno
int3
outsb
stc
push
fimuls
jl
sub
movsb
add
sbb
or
stc
cmpsb
sbb
ss
dec
xchg
inc
pop
pop
xchg
cmp
pop
ficoms
lret
test
pop
dec
jg
jns
push
and
sub
rorb
xchg
inc
addr16
push
mov
movsw
lds
in
mov
adc
nop
cltd
je
mov
mov
pop
popf
or
lea
addr16
insl
pop
lods
testb
dec
mov
in
mov
xor
dec
or
push
xchg
mov
mov
jle
pop
jae
pusha
cmp
mov
test
aaa
outsb
sti
icebp
sub
inc
add
or
dec
adc
sub
jns
ja
inc
dec
jg
jmp
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
push
jg
mov
arpl
sarb
inc
mov
xor
mov
das
daa
or
popf
xor
xor
fs
mov
or
mov
sti
js
xchg
in
sbb
jmp
xor
lret
repz
pusha
in
es
or
cmp
jl
jno
jmp
lods
mov
jo
test
cwtl
daa
lods
fnstenv
in
cwtl
jmp
scas
adc
rol
scas
stc
movsb
dec
mov
movsl
xor
add
xor
cmp
mov
jmp
ret
js
mov
repz
jmp
adcb
inc
jg
jg
and
ret
xchg
fnstcw
movsl
push
sahf
lea
mov
mov
test
aaa
pop
mov
adc
movsl
cltd
push
inc
repnz
xor
jbe
inc
cli
inc
adc
popf
mov
jns
test
cmp
call
adc
shll
gs
mov
cvtpi2ps
mov
sbb
enter
dec
hlt
lock
mov
cwtl
ret
pusha
jb
push
stos
int
mov
sbbb
xor
aas
or
les
shlb
jne
rorl
loopne
jne
xchg
insl
mov
mov
call
xchg
add
xchg
loopne
mov
xchg
test
sbb
fwait
xchg
xor
cltd
lret
jbe
lret
pusha
cmpsl
imul
mov
mov
jle
dec
fucom
xor
sub
cmp
adc
popf
aas
bound
fs
pushf
xor
push
sbb
xchg
fsubl
xchg
sbb
imul
popa
addl
pop
decl
push
lcall
popf
enter
dec
stos
add
push
rcrl
mov
rorb
pop
push
cmp
insb
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
cmp
out
scas
stos
jle
lods
jl
jle
arpl
popa
xchg
mov
js
pushf
outsl
cld
mov
jno
jmp
das
out
adcl
imul
pop
les
aaa
adc
fsub
mov
movsb
or
cmp
mov
std
in
js
into
rcll
or
and
test
adc
sbbl
pop
loopne
pop
sbb
arpl
pop
popf
and
dec
stc
push
add
repnz
xor
xchg
cwtl
das
cmp
shll
into
adc
das
popa
nop
mov
in
sahf
push
inc
sub
rorl
adc
xchg
cmp
ss
xchg
dec
cld
cwtl
sub
and
dec
xor
adc
loopne
xchg
fcomi
shll
xor
lds
test
adc
lret
fs
aam
arpl
int
popa
pop
repnz
stos
movsb
dec
ret
inc
xchg
add
sbb
mov
jle
sbb
dec
jnp
ja
stos
push
loop
and
xlat
mov
and
add
stos
movsl
add
and
dec
test
ss
push
and
inc
rorb
push
mov
ja
xor
and
int
mov
in
repnz
fstl
dec
sub
mov
pop
sub
lods
xlat
stos
mov
jae
movsb
sub
push
outsl
or
mov
out
dec
rol
lock
and
roll
out
ljmp
lahf
add
jge
mov
xorb
adc
nop
or
jmp
mov
cmp
lea
jg
add
dec
inc
je
mov
cld
mov
adc
jp
push
pop
pop
imul
insb
jo
addps
sbb
lods
mov
or
jns
imul
movsl
add
push
sbb
cmp
outsb
icebp
cmc
push
hlt
push
fmul
and
cltd
lods
jo
or
jge
pusha
mov
sub
outsl
ret
enter
mov
xchg
pushf
or
push
sub
scas
or
mov
xorl
lods
inc
sbb
pop
mov
push
enter
xchg
inc
and
mov
cmpsl
mov
mov
in
adc
xchg
cmc
or
mov
pop
jecxz
scas
test
and
dec
stos
and
pop
iret
xchg
mov
jb
xchg
scas
add
mov
pushf
mov
fdivl
scas
iret
insl
rolb
jno
mov
repnz
mov
scas
enter
fsubrs
movsl
test
out
scas
lods
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
dec
pop
mov
jle
jl
jle
imul
dec
push
push
lea
adc
xchg
xchg
dec
lock
xchg
sbb
mov
mov
daa
int3
sti
outsb
or
cld
xor
add
lcall
inc
movhps
test
pop
je
sbb
xor
push
and
ja
std
xor
and
add
sti
sub
lcall
mull
popf
or
lahf
cmp
lds
xor
sub
scas
in
sbbl
lock
and
xor
xchg
adc
into
jns
inc
xchg
out
pop
pop
std
test
xorb
std
popa
inc
in
les
jbe
inc
push
insb
cmpsb
jno
jbe
sub
ljmp
and
int3
mov
sub
push
jmp
dec
int3
adc
mov
int3
into
popf
cmp
iret
jnp
cmp
push
jmp
fs
mov
inc
jg
aas
call
cmpb
xor
loop
pop
xchg
hlt
pop
mov
hlt
dec
sub
mov
in
or
fisttpll
sbb
lds
fwait
cmpb
sbb
out
test
jecxz
loop
iret
icebp
aas
pop
sub
push
push
repnz
inc
push
or
rcrb
fbld
scas
xor
cmp
in
repz
das
pop
test
mov
fwait
or
subb
subb
push
push
jne
inc
mov
cmp
push
ljmp
nop
loope
cmc
lahf
sbb
out
cltd
ficomps
cmp
push
sbb
pop
bound
clc
inc
dec
lahf
xlat
mov
fwait
mov
push
cmpsb
mov
imul
lcall
push
or
jnp,pn
sbb
jo
sti
frstpm(287
jmp
call
pop
int3
scas
and
scas
inc
push
mov
cmpb
push
xchg
insl
cmovbe
imul
jmp
fwait
xor
leave
sub
hlt
jb
xchg
dec
call
mov
adc
shrl
push
dec
cld
or
imul
jecxz
cmp
inc
les
int
sub
push
arpl
lret
leave
leave
adc
in
es
adc
mov
fsubrs
bound
inc
push
movsl
arpl
push
ss
shrb
jmp
sbb
adc
daa
lods
cmp
add
call
jge
push
sbb
cmpsb
sbb
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
sub
subl
jl
jle
xchg
add
repnz
inc
pusha
add
push
mov
and
pop
gs
jge
pop
stos
cmc
dec
jp
add
xor
std
dec
xor
shlb
movsb
inc
or
push
in
ret
adc
lahf
cwtl
les
out
mov
loopne
insl
mov
hlt
test
lret
dec
dec
adc
sbb
xor
hlt
adc
fisubl
mov
push
sub
and
es
lods
jmp
mov
xor
nop
fidivl
adc
aad
xchg
lock
arpl
shll
add
fwait
ret
ljmp
mov
pop
mov
loop
mov
pop
lea
and
enter
imul
lret
jmp
iret
or
adc
cs
ret
int
mov
dec
das
ficoms
daa
inc
in
out
pop
sub
repz
xor
pop
out
xlat
test
cmc
decb
roll
test
fld
dec
jns
jge
sahf
adc
les
and
mov
push
subb
mov
gs
aad
and
mov
out
add
lods
pop
and
cld
xchg
pushf
sub
outsl
dec
xorl
ret
cwtl
sub
aad
or
rorl
sbb
lret
lret
sahf
orb
mov
js
or
sbb
arpl
add
enter
mov
test
shrl
sbb
cmpsb
lods
sar
test
fidivl
jbe
adc
lods
inc
xchg
xchg
sarb
dec
jp
out
mov
mov
pop
pop
inc
in
imul
mov
mov
adc
cmpsb
fdivrs
dec
cmp
fisubl
popf
daa
or
push
fs
fnstcw
int
cli
roll
ja
dec
fistps
jo
add
pop
test
aaa
mov
or
jmp
dec
dec
xor
inc
inc
fstp
out
test
out
dec
test
jl
add
icebp
test
and
repz
mov
mov
outsl
mov
aas
fdivl
mov
js
xchg
pop
push
icebp
jge
cli
mov
movsl
in
dec
jnp
addr16
xchg
xor
fcmovnb
jo
xor
test
repnz
inc
mov
mov
out
xor
xchg
mov
or
jnp
mov
mov
and
inc
or
stos
mov
testl
push
pop
add
add
jmp
lock
arpl
sub
scas
ret
shll
jle
jl
jle
loope
cmpsb
data16
jl
clc
inc
cld
add
pop
lret
cs
clc
shrl
std
jmp
dec
out
adc
lods
and
xchg
xorb
push
ljmp
ljmp
mov
add
sbb
mov
xchg
push
mov
cli
push
cmp
cmp
and
xor
mov
outsl
cltd
push
mov
mov
in
cmc
dec
repz
es
retw
mov
jnp
push
call
and
aam
loop
xchg
cmpsb
hlt
xor
mov
jmp
or
xchg
inc
jb
out
push
sbb
or
cltd
jnp
or
adc
cltd
dec
enter
movl
push
pop
or
testb
ficompl
call
daa
repnz
out
leave
dec
jmp
arpl
lret
ljmp
sub
loopne
mov
jl
xor
call
pop
popa
imul
fdivrs
jns
rcl
aas
dec
or
mov
int
je
adc
adc
inc
jmp
das
mov
aaa
insb
add
jb
fs
out
jmp
mov
xchg
test
je
cmc
rcrb
test
adc
imul
and
cli
add
push
int3
fimuls
mov
mulb
mov
push
imul
fucomp
cmpl
mov
xchg
inc
std
push
add
adc
out
mov
xchg
mov
inc
mov
loopne
in
xchg
pop
mov
js
int
dec
test
jnp
inc
in
cli
push
fucomi
movsl
jmp
in
loope
mov
jno
ljmp
ds
pop
add
push
lods
cmp
xor
pop
push
and
pop
push
test
xor
lods
sbb
std
stos
or
pop
add
mov
mov
jno
xchg
das
add
push
fiaddl
sbb
cmp
fcmovu
adcb
shlb
cmpsb
cld
lock
lret
call
mov
mov
sub
xor
cltd
in
dec
jne
aad
push
in
mov
xor
jl
fs
in
das
add
mov
stc
repz
hlt
add
cltd
dec
sbb
adc
insl
orl
lods
pop
sarl
pop
dec
or
pop
mov
lahf
sbb
xor
shlb
push
test
divb
inc
ret
cmp
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
mov
jle
jl
jle
mov
enter
fildll
push
mov
and
fsubr
ja
cmp
push
xor
sti
adc
ss
adc
lea
adc
ja
call
pushl
repz
ja
or
je
cmpsb
mov
bound
pop
xor
add
xchg
or
and
pop
mov
and
and
pop
jb
add
xor
imul
xor
subb
mov
jbe
addr16
cmp
hlt
xchg
arpl
inc
push
ds
and
sub
dec
inc
idiv
dec
ljmp
push
lods
sbb
xchg
cmc
in
or
fwait
mov
sti
mov
paddb
lahf
add
cli
ss
movsb
cmc
sub
dec
sub
push
jmp
jnp
cltd
aad
sbb
xor
call
mov
cmp
imul
jnp
mov
rclb
pop
mov
ficoml
aam
dec
and
push
ljmp
out
dec
cmpsb
lods
lret
aaa
sarb
jmp
shl
bound
sbbl
orl
stc
lahf
in
xor
adc
cmpsb
hlt
dec
repz
call
xor
xchg
cwtl
popa
js
or
fnstenv
shll
mov
sbb
xor
aas
bound
loop
sbb
jb
mov
mov
fisttpll
clc
leave
mov
sub
push
jl
xlat
and
sub
mov
js
mov
mov
sub
dec
outsb
adc
and
pop
push
repz
std
lahf
outsb
adcl
or
or
sti
hlt
mov
sbb
jb
jns
insb
out
add
divb
xchg
and
pop
mov
ds
stos
pop
loope
jg
aam
xor
sbb
xchg
push
ja
push
adc
mov
arpl
int
push
xchg
es
jl
mov
cmp
gs
push
iret
hlt
cmp
inc
leave
mov
in
cmove
xchg
lea
test
es
jnp
xchg
in
jecxz
xchg
jp
push
push
std
xlat
das
mov
mov
loope
push
hlt
into
xor
xchg
mov
adc
data16
je
or
rcrl
jmp
inc
add
ret
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
jb
cltd
fwait
mov
fcoml
lea
adc
adc
aad
push
in
fucomip
and
pop
dec
stos
test
les
xchg
ljmp
fwait
int
sbb
pop
call
pop
test
mov
ljmp
push
fistps
test
mov
inc
arpl
in
aaa
fwait
loope
enter
ja
fidivrs
cld
sub
test
push
mov
sub
shrl
stos
pop
fnstenv
insl
or
and
sbb
testb
ja
rcr
mov
scas
jg
push
adc
inc
ret
aas
scas
lret
push
push
jmp
jecxz
or
jae
icebp
mov
ds
test
adc
fildll
inc
enter
lahf
lcall
insb
push
aam
and
mov
test
pop
test
lahf
mov
jne
sbb
mov
incl
rep
jne
mov
xbegin
lcall
pop
mov
aam
fistl
sahf
pop
push
sbb
sti
dec
data16
ret
movsl
mov
fwait
sahf
cmp
sub
xchg
test
test
adc
adc
ljmp
pop
adc
pop
jp
shrb
mov
fisubrl
pop
push
adc
jno
roll
xchg
daa
xor
sahf
clc
inc
iret
inc
inc
out
mov
sub
and
jo
mov
orl
xor
shll
cmp
clc
outsb
gs
inc
mov
inc
jle
and
lock
bound
fnstcw
out
sbb
mov
or
psubq
dec
rcll
icebp
iret
mov
js
hlt
cmpsl
cmpsl
xor
sub
mov
adc
ja
dec
and
mov
mov
ds
jns
mov
or
ds
std
push
mov
cwtl
push
enter
pop
adc
pushl
adc
mov
xchg
imul
sub
jno
lcall
rcrl
repz
sub
jo
daa
jle
mov
pusha
popf
mov
movsb
in
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
rcll
pop
xchg
mov
jle
outsl
cmp
std
push
testb
and
add
setns
push
popf
xlat
and
xchg
add
cmp
ficoml
push
mov
test
js
or
pop
dec
fmuls
xchg
inc
loopne
shlb
xor
push
ret
xor
push
push
aaa
sbb
mov
adc
add
jns
loopne
mov
push
mov
cmp
ljmp
clc
into
test
adc
test
mov
insl
in
enter
mov
push
aaa
ffree
dec
adc
jecxz
and
ret
rorb
sahf
and
adc
cmp
scas
pop
andb
mov
fnstcw
dec
dec
loope
inc
xor
mov
shll
push
mov
sahf
mov
addl
xorb
and
adc
xchg
cmp
push
cwtl
or
into
xor
ss
and
or
pop
add
jge
mov
xor
push
jb
out
insb
or
cmpsb
inc
leave
test
sbbb
adc
mov
inc
sbb
fsubp
cmp
cmp
out
int
mov
lahf
into
or
push
or
mov
arpl
insb
and
jmp
and
inc
and
mov
or
inc
and
adc
repnz
es
adc
jle
inc
mov
fsubl
push
cmpsb
jp
cld
fwait
sub
andb
push
ret
push
shlb
lret
fidivrl
outsb
shl
leave
dec
sub
popf
jecxz
movsb
pop
push
xor
cld
push
lea
mov
xchg
push
pop
mov
ja
adc
dec
out
sbb
sbb
sub
repnz
stos
fwait
dec
push
sbb
push
push
push
and
loopne
and
rcrl
shr
xor
in
imul
cltd
das
sub
ret
stos
aam
test
lds
ret
movb
leave
xor
jnp
lods
lods
das
cmpsb
jo
test
out
xchg
xchg
pop
or
mov
js
shr
sti
or
mov
rcll
adc
fdivs
or
fwait
cmp
adc
ja
pop
jp
cld
aad
mov
imul
aam
sbb
dec
xor
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
push
shlb
or
jg
jle
ss
in
fdivl
add
in
push
sbb
cmp
dec
les
dec
pop
or
aas
sub
inc
or
les
sbb
test
inc
dec
dec
cli
xchg
pop
xor
icebp
roll
mov
mov
xorb
or
out
push
jecxz
add
in
push
push
aaa
and
out
loopne
fisubl
dec
out
or
cld
xor
mov
dec
aam
clc
sub
mov
mov
fbstp
jae
dec
cmp
rcrb
and
loope
mov
xchg
cwtl
int
jmp
arpl
lahf
dec
mov
fucom
movsb
xchg
jbe
pop
sub
aam
jp
xchg
mov
or
push
dec
dec
out
sarl
les
je
je
shl
xchg
les
and
mov
pop
pop
xor
in
enter
inc
fldenv
orps
es
dec
and
pop
enter
dec
int3
xor
push
movl
adc
jno
in
test
sbb
in
ret
add
jge
aad
sbb
cmp
xchg
fimuls
in
push
andb
int3
mov
pop
dec
xchg
call
jb
and
ret
push
or
out
mov
sub
inc
mov
sub
sub
neg
stos
xlat
adc
movl
or
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
adc
mov
jle
jg
jle
sbb
punpcklbw
adc
jmp
ret
test
cmp
sbb
dec
bound
rorb
jbe
lds
xchg
fidivrs
shll
scas
cmp
mov
lcall
xchg
mov
fsub
push
lock
sbb
add
mov
ret
lahf
or
push
sbb
or
add
orl
stos
mov
adc
xchg
jne
je
adc
sbb
push
and
mov
outsl
add
pushf
pop
sbb
mov
xchg
pushl
test
shl
sbb
push
or
rcrb
push
add
jl
lahf
mov
sub
in
lock
or
mov
xchg
cli
mov
or
mov
nop
lcall
lcall
shlb
js
pushf
mov
mov
inc
mov
pop
sub
sub
ficomps
sbb
pop
dec
add
mov
jp
lret
xor
dec
cmp
inc
sbbb
add
fiadds
mov
jb
cli
adc
dec
stc
divl
js
lret
jle
and
test
dec
ret
mov
inc
and
aad
stos
popf
xchg
and
push
pop
test
test
add
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
xchg
cld
cmovne
icebp
jg
jle
add
jno
jnp
mov
lahf
out
imul
lods
push
and
pop
lcall
imul
daa
cli
or
sub
lock
popf
loope
dec
inc
or
flds
add
aad
fisttpll
sub
repz
sbb
jb
out
add
sti
das
mov
cmpl
add
inc
add
mov
int
mov
cltd
push
clc
fwait
jmp
sub
push
cmp
push
adc
xchg
enter
cmp
ret
std
add
aam
or
inc
add
stos
mov
sarb
mov
mov
mov
xchg
jb
mov
mov
out
popf
mov
jae
inc
mov
ja
repnz
test
les
add
xchg
iret
push
lods
sbb
inc
and
lods
aam
es
scas
dec
out
and
pusha
mov
orb
adc
sbb
js
pusha
xor
mov
jne
xchg
push
xchg
pop
mov
test
add
stos
sbb
add
inc
jp
lea
xor
fldcw
stos
add
dec
shlb
xchg
gs
int3
adc
mov
std
mov
dec
add
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
test
mov
jle
jg
jle
pop
repz
jg
or
jne
aad
cmp
xchg
in
int3
dec
imul
pop
inc
push
je
mov
jp
sti
stos
push
outsl
sub
out
subb
test
push
ljmp
fwait
mov
sbb
scas
into
rclb
inc
sbb
dec
into
jp
mov
movsl
cmpsl
movsb
inc
leave
mov
loope
je
dec
loop
inc
cs
inc
cmp
xchg
sbb
out
movsl
ljmp
sub
pop
inc
cwtl
cmpsl
cmc
cltd
xor
jle
push
sbb
add
or
adc
rcrb
pusha
mov
xchg
cmpsb
cmp
and
add
test
mov
test
and
out
jnp
rorb
in
fisttpll
shlb
leave
inc
cmc
js
adc
jle
pop
fs
and
mov
sub
mov
lret
outsb
bound
jle
lods
or
dec
jo
test
insb
sub
ds
adc
ret
dec
enter
mov
sub
shll
test
or
push
jmp
aad
and
mov
ds
ds
mov
pop
jl
mov
dec
mov
pop
movsl
popl
xchg
pop
push
rcrl
das
roll
add
inc
add
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
dec
add
jle
jg
jle
mov
jns
adc
mov
stc
cmp
jp
testl
shl
and
mov
lahf
cs
sbb
pushf
imul
sbb
or
loope
ljmp
xlat
movsl
mov
in
in
jge
jecxz
fildl
cmp
int3
je
mov
and
outsl
mov
pushf
xor
jb
mov
and
in
loopne
xchg
mov
dec
addl
pop
inc
in
shlb
lahf
push
lds
imul
mov
adc
jns
popf
movsb
pop
enter
rcrl
outsl
clc
mov
pop
inc
arpl
lock
mull
int
frstor
xor
out
add
repnz
adc
insb
mov
les
lret
push
mov
and
fisubrs
xchg
ja
daa
out
out
pop
movsl
push
push
cmp
jecxz
or
xor
add
test
push
jl
std
cmp
mov
cmpl
mov
loop
outsb
filds
pop
fwait
jge
sbb
iret
push
pop
fisubs
sub
xchg
add
inc
dec
pop
faddl
call
movsl
pop
or
clc
nop
xchg
aas
xor
testl
push
xchg
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
sbb
loopne
addb
icebp
jg
jle
mov
ss
in
cltd
js
cmp
iret
mov
jb
push
dec
lcall
rorl
aas
pop
repz
js
adc
mov
mov
out
push
stos
sarl
mov
fstps
xchg
add
xor
rorb
call
out
fs
xchg
cwtl
mov
jp
es
pmullw
popf
mov
mov
pushf
es
lcall
mov
mov
jl
xchg
jae
dec
xor
pop
xor
jecxz
cmpsl
and
arpl
mov
clc
push
addr16
sbb
ss
inc
shrl
add
stc
je
sbb
pop
lret
cmp
rorb
std
lret
and
fldl
mov
icebp
cmp
cmpsl
pop
int
xor
ja
into
push
inc
or
outsl
cld
push
xlat
pop
add
pop
rcl
cli
sbb
dec
out
add
sarb
lods
cwtl
xchg
sbb
lods
divl
out
dec
mov
xchg
mov
adc
test
dec
daa
push
and
shlw
pop
jb
mov
js
imul
dec
repz
repz
sbb
mov
nop
loopne
sbb
fnstsw
aas
or
pop
stos
xor
xor
jecxz
jne
dec
adc
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
jns
data16
cmp
xchg
pop
jg
push
lods
inc
test
push
jmp
xor
outsl
mov
add
aam
push
adc
inc
fwait
hlt
std
cmp
lcall
inc
pusha
int3
imul
fcmovnbe
mov
push
sub
or
pop
xor
xchg
pushf
pop
lea
subb
cltd
sub
pop
cwtl
cmp
stc
dec
cwtl
pop
xlat
xchg
jno
fwait
xchg
mov
lea
test
cmp
mov
out
add
scas
or
xchg
in
jecxz
push
pop
push
andb
jp
cli
mov
or
dec
sbb
xchg
jbe
js
scas
pop
pop
movsl
inc
mov
stc
ss
fisttpll
mov
pop
mov
sub
cs
int3
xor
push
xchg
mov
jnp
dec
mov
aad
aad
sub
push
jne
cmp
mov
in
in
fwait
mov
cltd
jmp
fisttpll
aam
push
in
push
call
sbb
test
movsl
mov
push
cmp
ljmp
jmp
popf
cs
add
xor
sbb
adcb
pop
adc
arpl
xchg
jmp
fstpl
pop
pop
bound
xchg
pop
inc
loope
pop
int
lods
and
mov
aaa
push
or
xor
shll
inc
xor
jbe
lcall
imul
add
xor
fistpll
cmp
sbb
and
mov
push
andb
inc
ja
xor
mov
sti
fisttpll
rcr
mov
out
repz
jmp
inc
test
sbb
push
aas
xchg
dec
or
dec
xchg
pop
or
scas
xor
loopne
mov
xor
jecxz
aaa
outsl
adc
and
das
mov
and
loope
outsl
cli
shrl
mov
push
inc
jnp
dec
cmp
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
in
cld
inc
and
jl
jle
push
addr16
fiaddl
incb
cld
sbb
loope
push
dec
jb
iret
or
cld
push
push
gs
andps
int3
gs
sbbl
fs
mov
fwait
dec
lcall
xchg
movsl
lds
stos
nop
jl
mov
lret
jle
cmovb
jae
movl
out
cmp
popa
jno
cmp
inc
mov
jo
or
sahf
mov
mov
xlat
push
clc
sub
push
aad
jne
pop
cmc
iret
pop
sahf
lahf
mov
mov
aaa
ret
pushf
pushf
dec
fcomps
js
fmul
out
in
cltd
cmp
xor
push
or
adc
lods
inc
and
cmpl
cli
dec
dec
or
lods
push
cmpsl
ds
mov
jg
inc
test
push
push
ljmp
inc
mov
test
cmpsl
lods
sub
cli
pop
in
mov
and
std
pop
inc
fiaddl
and
addr16
xchg
sub
push
pop
dec
xor
mov
and
movsb
xchg
and
mov
aad
push
int3
filds
scas
iret
ljmp
inc
scas
and
xor
mov
mov
stc
cmp
repz
ljmp
mov
stos
xor
test
loope
adc
xor
cltd
loop
subb
ret
sub
out
fidivrs
ret
subl
add
and
push
jecxz
aaa
test
jle
push
add
inc
cs
pushf
mov
xor
and
xchg
cld
xchg
jo
pop
aaa
clc
shlb
daa
pop
lret
xchg
xchg
push
mov
mov
in
pop
adc
loope
add
sarb
loope
xchg
inc
dec
call
pop
push
sub
aad
sub
and
imul
push
scas
jle
dec
repz
scas
adc
pop
cmp
add
scas
jmp
fwait
addb
ret
cltd
sbb
fnstenv
add
ret
jne
mov
add
jmp
mov
imul
stos
scas
jb
dec
jle
adc
xchg
jae
cmp
xor
stos
in
popf
cmpsb
mov
aam
jge
mov
popf
sub
inc
and
adc
insb
cmp
lcall
cmpsl
and
mov
call
adcl
pop
addr16
sub
mov
dec
mov
decl
rorl
jne
sti
add
push
mov
pop
adc
outsl
mov
jge
mov
fsubp
sbb
dec
jne
std
aas
add
js
pop
inc
fdivrs
xor
mov
testb
popa
jbe
mov
inc
pop
aad
in
dec
mov
pop
stos
fistpll
repz
sub
icebp
lcall
sbb
cmpsb
imul
ja
and
daa
jno
out
fimuls
ja
lahf
and
xchg
cmp
push
mov
dec
lret
dec
in
push
xchg
jl
jno
pop
xchg
sbb
cmp
call
shl
mov
outsl
mov
ja
sahf
insl
fwait
push
inc
inc
xchg
xor
sub
gs
xor
adc
cmpsb
or
mov
dec
push
sbb
aaa
sub
xlat
out
cld
and
in
cli
pop
repz
das
adc
stc
jge
cmp
push
rcrl
in
and
scas
cmpsl
sti
btr
sub
cwtl
and
mov
insb
mov
lret
lods
or
push
mov
lahf
arpl
jne
popa
inc
jnp
mov
push
fwait
lahf
fdivrl
sbb
push
and
fsubrl
or
jne
adc
fwait
jmp
xchg
insb
xchg
shl
movsl
addr16
mov
movq
test
push
stc
mov
mov
jnp
cld
ljmp
pop
pop
push
aaa
sub
inc
repnz
cmp
xor
push
inc
cmp
inc
pop
cli
aam
shl
lods
mov
xlat
push
fwait
add
jne
pop
mov
lods
inc
mov
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
pop
mov
pushf
xlat
add
add
add
inc
push
pop
lods
xlat
cmp
sub
push
sbb
pop
jp
cwtl
adc
fsub
in
dec
divl
rorl
xchg
pop
ja
loop
add
aas
dec
test
inc
cmp
inc
xor
lret
inc
cmpsb
add
jno
or
imul
mov
push
jmp
orl
ss
das
dec
xor
sbb
aad
fs
cmpsb
pop
or
mov
ljmp
in
pushl
jae
mov
gs
fcmovne
or
popl
in
test
pop
repnz
adc
cmp
or
mov
aaa
or
es
fnstsw
xor
iret
jge
cmp
or
stos
inc
sbb
cmp
fnstsw
sbb
mov
fs
ret
adc
or
pop
ficoml
in
jle
lcall
adc
add
add
add
inc
sub
ret
jne
es
adc
and
imul
das
repnz
sahf
jo
add
faddl
inc
xchg
fsubrl
call
scas
roll
xchg
inc
xchg
mov
filds
stos
adc
scas
add
mov
stos
out
cmc
sbb
mov
jnp
stos
mov
xlat
in
xchg
inc
test
mov
and
jne
mov
in
ss
decb
int3
add
xchg
ret
xchg
push
cwtl
push
push
arpl
add
xor
cmp
pop
cmp
xchg
movsb
push
shr
dec
cmc
sub
mov
xlat
cmp
out
das
ljmp
jmp
cmp
ss
xchg
inc
sbb
ja
jo
outsb
pop
pop
cli
inc
dec
jmp
or
mov
pop
idivb
jns
pop
dec
push
movsl
lea
and
inc
push
lock
xchg
nop
in
pop
mov
cmpsl
push
repz
add
add
add
mov
push
inc
stc
jle
flds
add
add
add
pop
xor
aaa
cmp
rcll
xchg
movsb
add
xor
push
inc
shr
jmp
sbb
jle
hlt
mov
xchg
aas
shl
testb
mov
mov
in
mov
dec
mov
push
jmp
and
loop
mov
insl
mov
addl
fbld
and
xchg
addb
in
push
ret
lods
cmp
push
je
nop
push
sahf
flds
pop
dec
rolb
dec
push
mov
push
loop
add
inc
das
jmp
aam
jmp
aaa
inc
sahf
data16
pop
push
shrb
mov
test
ds
sub
inc
sbb
into
dec
push
lahf
lock
sub
jns
or
out
push
pop
insb
push
fstp
jno
mov
popa
shlb
out
fcoms
hlt
in
fnstsw
insl
scas
xchg
sbb
clc
mov
lods
cmp
lea
shll
fs
mov
add
add
subl
roll
aam
cmp
fiaddl
add
add
add
out
jno
mov
cmp
add
sar
cmpsb
repnz
aad
sar
mov
cmp
cmp
fists
mov
jp
inc
imul
mov
fbld
mov
cltd
ds
loopne
clc
shlb
add
mov
fisttpl
pop
into
hlt
pop
mov
test
pushf
pop
je
out
lret
mov
sbb
xor
mov
pop
jne
cmpsl
adc
pop
repnz
seto
lds
dec
fmull
and
aad
lds
sbb
mull
fstps
jb
jbe
sbb
xorl
pusha
mov
jmp
push
imul
push
push
mov
rol
cltd
repz
sub
cmp
jns
sub
imul
ljmp
imul
push
sbb
or
add
pop
jae
or
pop
dec
or
pop
mov
fildl
add
add
add
add
call
or
jg
sub
outsl
arpl
mov
cmp
cmpsb
outsl
pop
mov
test
iret
push
mov
out
xor
sub
icebp
add
lahf
sahf
aas
xchg
mov
or
add
jmp
les
and
jb
sarl
dec
in
mov
sbb
jg
subb
adc
mov
lock
inc
push
xchg
dec
loope
sbb
lea
iret
mov
jge
add
sub
xchg
push
jmp
mov
jb
subl
imul
leave
mov
inc
dec
jae
int3
pop
enter
jecxz
inc
adc
push
jl
fdivrs
lret
push
push
mov
inc
dec
cmp
sbb
xchg
dec
fisttps
out
mov
mov
jg
cmc
insl
cmc
out
lcall
enter
fcomi
shlb
add
add
add
jge
xor
insb
ror
jge
adc
pop
out
sarb
jnp
in
cld
adc
mov
nop
jle
xor
das
push
scas
push
dec
fdivrs
push
mov
sub
test
cmp
and
sbb
rcl
arpl
andnps
js
test
repz
pop
cltd
lds
mov
add
lea
push
sub
dec
leave
cmp
arpl
jae
xor
in
jne
popa
xor
jp
in
ret
mov
sub
mov
fisttpll
jo
aas
or
insb
and
dec
adc
test
xlat
fnstcw
pop
daa
mov
cmc
jo
push
sarl
jmp
loopne
jo
outsb
and
push
sti
fnstsw
inc
scas
mov
repz
jl
jbe
movsb
das
mov
jne
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
add
jge
push
and
xor
fwait
cltd
out
or
xchg
cmp
lods
test
out
rcrl
fs
mov
sahf
or
sbb
and
test
fildll
mov
adc
cmp
clc
cmp
mov
test
shll
cmc
jbe
dec
or
pop
xor
rcr
jae
ret
popf
jg
popa
push
or
xchg
cmp
sub
sbb
aas
dec
jg
inc
mov
sub
std
stc
je
cmpsl
pop
jecxz
or
xor
sbb
outsb
movsl
mov
push
adc
into
iret
call
and
js
sbb
loop
add
pop
pushf
pop
ds
jo
cli
xor
ret
and
lret
xlat
lds
xchg
pop
mov
mov
mov
fsubr
mov
divl
outsl
stos
in
stos
lahf
push
loopne
stos
or
and
scas
sti
jle
pop
push
pop
dec
inc
mov
fiadds
add
add
add
push
pop
insb
dec
mov
xchg
adcl
push
and
std
aaa
popa
mov
xor
adc
daa
sub
and
cmp
push
mov
add
and
fdivl
jle
inc
scas
dec
push
scas
cwtl
fildl
cld
push
das
mov
orb
sbb
rorl
cwtl
in
loopne
pop
shlb
dec
jle
jle
in
mov
dec
jge
cli
cmc
pop
jne
sbb
push
or
fidivrs
and
ret
dec
push
lret
inc
cwtl
pop
sahf
dec
mov
jns
pop
dec
or
je
cmp
call
push
jge
mov
mov
cwtl
add
enter
xlat
inc
xchg
pop
push
andb
xchg
cmpsl
add
stos
leave
ja
pop
and
adc
jmp
xor
or
mov
outsl
mov
add
negl
arpl
filds
add
add
add
inc
ljmp
sub
pusha
dec
push
fimuls
mov
or
mov
push
adcb
inc
add
mov
push
out
and
xor
pop
mov
hlt
ret
testb
js
sbb
add
repnz
xchg
sbb
sbbb
xchg
or
jbe
repz
testb
inc
mov
jmp
jae
in
js
lods
test
add
and
ljmp
mov
add
mov
repnz
call
dec
adc
sbb
inc
inc
or
xor
movsb
mov
mov
jne
int3
imulb
inc
mulb
mov
xor
mov
int3
pushl
xchg
xchg
test
fmul
ret
adc
mov
fnsave
cmc
lds
xlat
into
inc
lcall
sbb
xor
push
jl
jle
insb
out
cs
rcr
packuswb
add
add
add
push
jo
ja
inc
sub
out
mov
in
pusha
fmuls
or
addb
push
add
in
out
fisubrl
enter
shr
test
xchg
fbstp
sbb
add
aad
jne
test
sbb
cmp
push
jp
dec
push
pop
or
out
sub
push
inc
xchg
mov
test
sahf
ljmp
in
mov
rcrb
mov
jae
push
or
mov
fs
imul
test
outsb
addl
ja
inc
ror
out
dec
test
or
and
test
test
fldl
ljmp
and
mov
pop
cmp
push
jge
cmpl
xchg
mov
jge
pop
jg
movsb
aaa
pop
xchg
add
and
ret
jle
add
add
fwait
mov
in
xor
adc
loopew
add
add
add
xor
or
xorb
jae
test
add
mov
insb
cmp
sbb
mov
adc
lcall
inc
push
sbb
dec
dec
add
sbb
dec
inc
icebp
mov
das
test
mov
les
imul
ja
fisubs
repz
xor
add
pslld
int3
mov
jne
pop
shll
icebp
sbb
xchg
sahf
pop
sub
arpl
dec
add
sub
es
mov
enter
sbb
jl
les
push
mov
repz
pop
jae
cmp
fcmovnbe
xor
xlat
fsubs
ret
inc
cld
dec
mov
fdivrl
cmp
cmp
scas
dec
jae
push
adc
and
popf
and
inc
mov
sub
loope
mov
add
add
data16
jne
mov
lcall
add
add
add
xchg
jmp
insb
mov
push
lretw
sbb
push
or
add
subb
add
test
inc
ret
inc
pop
xor
adc
cmp
or
sbb
incl
jnp
jmp
dec
sbb
jp
mov
sub
in
loop
mov
imull
mov
add
das
push
jle
cmp
gs
add
stc
sub
or
insb
push
and
ret
fildll
pushf
lahf
outsb
arpl
mov
cmpsb
push
mov
and
rorl
pop
rcr
mov
punpcklbw
xlat
ret
and
adc
cs
dec
das
dec
loope
ds
ss
cs
iret
lahf
cltd
push
inc
pop
push
pop
ret
jp
mov
and
xor
add
and
mov
adc
icebp
fwait
xchg
fwait
add
sub
insl
outsb
jecxz
mov
add
add
add
jnp
sti
xchg
lahf
mov
fwait
lea
add
add
add
ret
xorl
add
adc
jl
or
sbb
inc
cmc
mov
ljmp
inc
add
mov
jmp
nop
xor
out
mov
movsl
and
fcomip
fwait
into
pop
pop
sbb
mov
ljmp
jne
movsl
loopne
dec
cmp
shl
pop
xchg
test
adc
aaa
andl
std
imul
movsb
xor
flds
jp
mov
or
sbb
inc
pop
cmp
mov
mov
shlb
xor
mov
shrl
pop
sbb
hlt
fsubrs
pop
pop
loope
push
arpl
or
mov
or
ja
outsb
add
test
les
sahf
js
leave
inc
fdivr
dec
and
fisttpl
mull
fidivrl
jmp
loopne
xchg
mov
mov
cmpsb
pop
sub
pop
sarl
mov
xlat
addr16
add
add
add
sarb
sarl
push
aad
inc
lcall
xchg
pop
push
scas
add
outsl
and
sbbl
mov
or
jg
insl
inc
ja
std
outsb
in
xchg
out
popa
cs
bswap
sub
or
shlb
orb
mov
pop
js
aas
add
and
hlt
and
cmpsb
ds
in
pushf
xchg
lcall
mov
mov
or
sub
push
fsts
mov
aad
pusha
repnz
dec
xlat
aam
pop
jnp
and
and
frstpm(287
dec
neg
popa
jle
insb
lock
shll
push
lret
and
iret
and
xchg
inc
ss
add
mov
cmpb
mov
dec
push
pop
lods
mov
test
stc
mov
out
cmpsl
mov
cmpsb
cmp
push
sbb
add
add
insl
lock
std
repz
cmpsb
and
add
add
add
das
mov
iret
fcmovnu
mov
xor
inc
pop
xor
hlt
scas
pop
imul
and
sbb
sub
inc
pop
iret
sbb
mov
leave
and
rcrb
mov
js
and
movsb
and
clc
push
cmp
std
pop
jg
rclb
mov
icebp
mov
inc
push
xchg
cwtl
and
cli
cmp
and
xchg
mov
jl
inc
push
je
aam
adc
test
jmp
rcll
xchg
and
lods
mov
xor
jg
pop
mov
ljmp
stos
adc
or
ffree
das
dec
sbb
pop
and
jns
dec
mov
int3
clc
add
or
ja
adc
lods
scas
push
cwtl
repz
sarb
add
in
filds
test
mov
add
in
sub
cmp
arpl
je
test
addr16
add
add
add
and
out
mov
xchg
pop
xchg
push
or
pop
out
add
and
test
std
aaa
lods
rol
dec
rclb
or
sbb
imul
mov
mov
mov
test
xchg
clc
add
fldenv
scas
enter
cmp
repz
lret
xchg
cmp
ret
stos
cmpsl
pop
adc
cmp
ret
das
out
sub
fistpll
call
pop
jge
cli
xor
sub
sar
pushf
out
sbb
mov
push
negl
outsb
ret
je
adc
movsb
ficoms
pusha
lods
xchg
push
mov
js
push
shrb
stos
out
xor
sub
ss
stos
xchg
jb
jbe
pop
sub
jge
shrb
mov
sbb
cltd
xchg
mov
inc
mov
add
mov
mov
mov
add
add
add
lods
jne
add
test
into
pop
mov
je
call
pop
xchg
push
sti
es
push
and
xchg
inc
jnp
gs
cwtl
adc
aas
add
es
cltd
xchg
movsl
fstl
pop
push
adc
jno
jg
aam
fdivrl
pusha
loope
and
into
shr
and
pop
push
rcl
movb
dec
pop
sub
popf
sub
add
xor
sti
mov
push
and
pushf
decb
bound
push
cld
sbb
cmpsl
mov
je
scas
and
iret
dec
push
sahf
ss
inc
rorl
in
test
xlat
cmp
std
adc
aas
loope
xchg
inc
cmpsb
clc
cmp
cltd
addr16
adc
mov
mov
mov
jbe
sub
lock
or
or
mov
mov
sub
mov
call
cld
sub
mov
jns
jle
inc
sahf
test
add
xchg
in
mov
incl
rcll
call
add
decb
and
jnp
es
cmp
das
add
cli
stc
and
and
daa
adc
subb
jne
cmpsb
xor
cli
inc
insl
jno
dec
xchg
adc
test
int
test
pusha
lea
arpl
ret
sbb
sub
dec
not
mov
shl
lds
repz
or
mov
out
lock
lds
adc
les
jg
imul
outsb
fiaddl
orb
mov
lea
loopne
lret
call
and
jp
inc
es
pop
das
lret
in
pop
add
adc
pop
loop
xor
push
sbb
inc
js
movsb
jmp
in
cmp
or
inc
scas
xchg
xchg
xchg
gs
xor
and
push
sbb
and
data16
pop
out
jecxz
jae
xchg
inc
repnz
inc
cmc
add
inc
add
xor
add
add
sub
in
negl
sub
movsb
xchg
sti
cmp
add
add
add
fadds
dec
gs
in
push
dec
push
ror
std
cmp
pushf
push
cmpsb
cmp
adc
jmp
and
fwait
dec
out
loope
push
mov
sahf
cmpsb
bound
add
pop
out
mov
mov
mov
pusha
mov
outsl
inc
imul
insl
pop
rcrl
std
jp
loop
fcomip
enter
and
push
push
test
adc
push
push
cmc
fistps
int
mov
lods
inc
ljmp
push
mov
adc
movsl
rcrl
mov
jge
sub
aas
pop
xor
push
or
sar
inc
aaa
fsubr
xchg
in
ret
jb
inc
adc
and
ljmp
out
out
cmc
test
stc
cmp
mov
inc
push
je
popf
mov
stos
jb
dec
lods
or
add
mov
stc
dec
push
xor
xor
add
add
add
int
and
push
mov
inc
push
pusha
ds
xor
inc
pop
scas
sub
fwait
xor
imul
push
dec
mov
and
fmul
cwtl
mov
bound
mov
pop
xchg
adc
push
cmpsb
jbe
sub
mov
dec
sbb
aas
mov
xor
or
fnsave
lret
std
xchg
out
cld
add
xor
mov
cmp
into
ljmp
lahf
push
imull
inc
pusha
mov
int3
insl
pop
stos
nop
lahf
xchg
xchg
fwait
repnz
loope
xor
jle
out
cltd
adc
cwtl
aad
xlat
testl
nop
je
pop
dec
daa
hlt
stc
xchg
repz
lods
add
inc
mov
adc
call
mov
shll
enter
mov
adc
cmp
mov
xlat
lods
data16
push
adc
add
cmp
mov
push
push
push
mov
mulb
add
add
add
xor
mov
mov
loopne
ds
jg
mov
push
call
out
mov
scas
popf
inc
push
ret
sub
dec
cmp
roll
push
or
pop
push
xorb
shlb
or
repz
sbb
movsl
inc
test
sbb
gs
push
inc
idivb
out
std
movsb
data16
adc
sahf
or
rorl
pop
mov
insb
call
ds
add
shrb
cmpsl
inc
ljmp
push
test
sbb
bnd
xor
mov
cmpl
mull
stos
mov
fistl
sbb
add
daa
xchg
jmp
icebp
int3
in
jo
sub
xchg
lahf
push
stos
rorb
cwtl
jle
daa
test
mov
pop
outsl
mov
push
xor
lret
repz
aam
mov
daa
imul
add
add
repnz
add
pop
lcall
les
cmp
movsl
addr16
add
add
add
push
imul
mov
xchg
jg
jmp
hlt
ss
mov
dec
ret
enter
call
dec
ret
rol
jo
jne
je
sbb
and
dec
cli
lock
mov
push
mov
inc
fidivs
adc
push
nop
dec
cwtl
and
fwait
dec
lea
lea
sarb
mov
in
mov
mov
mov
test
jns
inc
cmpsb
mov
mov
test
call
mov
jle
mov
cmpsl
jae
push
pop
fidivl
or
fcomip
cmp
push
ja
mov
popf
pop
jl
repz
std
xchg
testb
sbb
xchg
push
fidivrl
xor
andl
aas
aaa
jp
lret
or
lahf
dec
dec
ljmp
mov
add
dec
dec
jb
popa
or
cwtl
lea
outsl
inc
roll
adc
or
add
add
mov
push
decl
pop
loop
sub
in
add
add
add
cmp
jge
pop
divb
mov
movsb
fiadds
or
adc
addr16
mov
fsubl
imul
js
mov
xchg
adc
mov
and
dec
sbb
gs
cli
mov
lds
cltd
push
sub
rol
dec
fs
xchg
dec
cmp
sbb
imul
imul
fwait
rclb
cltd
mov
ss
lea
int3
add
inc
ret
push
mov
js
cmc
or
jmp
lea
inc
cmp
out
and
fdivl
nop
adc
dec
icebp
push
sar
stos
sbb
pop
dec
sbb
out
aas
in
flds
jo
xchg
mov
and
mov
popl
xor
and
cmp
sti
fsubp
inc
push
sub
or
add
add
add
cmp
lcall
das
test
sbb
ret
or
mulb
inc
fdivs
mov
push
lock
mov
mov
jle
push
arpl
xchg
repnz
fwait
mov
lds
mov
sti
pop
ja
jge
shl
jbe
add
mov
jl
inc
aam
arpl
add
outsb
cmp
out
pop
popa
sarb
stc
outsl
jl
arpl
addr16
push
std
stos
sub
leave
sub
cmpsb
fdiv
gs
mov
out
and
cmp
or
pusha
xor
movsl
mov
pushf
pop
add
test
dec
or
imul
lods
jecxz
inc
les
push
sti
pop
es
mov
aam
cmp
add
popf
das
lock
push
aam
in
sub
mov
into
int3
loop
repz
xorl
pop
xor
xor
mov
jo
addr16
sub
mov
adc
add
add
outsb
xor
mov
lcall
out
add
add
add
mov
inc
pop
sbb
mov
subl
mov
jecxz
je
aas
push
repnz
push
adc
repnz
lods
xor
jne
dec
jns
dec
nop
cmp
dec
mov
addb
pop
inc
push
jg
addr16
in
inc
mov
cmp
popa
add
sub
push
jp
adc
mov
fs
mov
sbb
mov
sbb
xor
fidivrl
xor
adc
pop
filds
pop
mov
adc
lahf
int3
dec
dec
cmc
cmp
cli
and
mov
dec
lret
jge
pop
inc
sbb
cmpsl
ljmp
roll
ss
pushf
aas
inc
xor
sub
stos
insl
out
adc
stc
jmp
fnstenv
insb
and
fwait
add
mov
aad
push
xor
movsl
leave
rolb
addr16
mov
mov
stos
cltd
add
add
add
inc
ror
lock
jnp
xor
xchg
fisubrs
icebp
lock
add
add
xchg
fsts
mov
jge
sbb
xlat
data16
and
imul
in
add
xchg
popf
sbb
add
sbb
push
mov
push
pop
cmp
push
sub
int
imul
sbb
xchg
cmp
and
push
inc
push
mov
inc
mov
imul
push
adc
push
lds
js
mov
pop
or
add
mov
faddl
pop
push
inc
fldcw
addr16
scas
jbe
in
cmp
xor
loopne
mov
xor
and
push
cwtl
xchg
shlb
dec
les
add
jg
nop
xor
mov
jl
fwait
aam
and
push
sbb
ljmp
pop
mulb
scas
xchg
dec
fs
xchg
adc
mov
mov
or
add
stos
test
scas
rclb
add
pop
and
repz
fisubs
cs
jns
icebp
add
add
add
sub
jecxz
sub
jge
cmpsl
insb
or
pop
mov
xchg
mov
lret
int3
loop
fimull
fidivl
test
scas
dec
or
ret
in
cmpsb
repz
mov
dec
push
in
loopnew,pn
cli
std
cmpsb
subl
mov
add
in
aas
pop
ss
and
push
xor
leave
je
adc
mov
outsb
lock
test
mov
scas
jmp
js
sbb
mov
inc
pop
cli
cmc
pop
mov
mov
or
out
lods
sbb
push
imul
dec
in
or
add
or
sbb
sbb
inc
into
xchg
adc
cmp
cltd
xor
add
lret
add
mov
mov
outsb
add
sahf
jb
gs
shrl
pop
gs
ljmp
int3
dec
pop
cmpsb
dec
jmp
push
out
sbb
mov
repnz
add
add
xor
add
test
nop
pop
arpl
cli
in
or
xchg
xchg
mov
sub
orl
fcompl
shrl
stc
imul
das
cmpsb
dec
dec
lcall
and
fcoms
push
mov
pop
pop
pop
lret
pushf
fld
aaa
cmp
and
dec
add
jne
lret
stos
mov
pusha
jne
xor
sub
cmp
sbb
jmp
jae
xor
mov
punpckldq
cld
pop
mov
xchg
push
mov
aad
sub
xor
mov
sub
mov
fptan
mov
out
push
push
pop
pop
inc
aad
repz
mov
sarb
cs
add
fstpt
or
lds
mov
jle
mov
roll
cli
test
lret
lea
jne
out
jp
ret
pop
jl
lahf
xchg
sar
rclb
shrl
cmc
scas
sub
mov
repz
add
add
and
cmpsl
addr16
fucomi
inc
icebp
stos
pop
mov
mov
cwtl
test
sahf
lock
push
outsb
lcall
dec
loop
and
loopne
sub
xor
inc
inc
pop
sub
push
addr16
std
sahf
pop
push
inc
or
js
push
xchg
cmp
lock
jge
add
lahf
daa
mulb
mov
sub
and
dec
cltd
push
inc
push
cmp
xchg
cmp
sbb
loopne
jg
mov
jo
mov
xorb
mov
fldenv
dec
in
adcl
inc
jbe
addl
jno
and
pop
mov
adc
jnp
dec
loop
aaa
bound
pop
add
sbb
cmpxchg
cmp
cmpsl
mov
add
jb
das
dec
and
cmp
cld
jg
fdivs
or
sub
ret
add
lret
pusha
rorb
cmpsb
mov
addr16
addr16
add
add
add
jae
orb
js
xchg
outsl
jl
std
int3
inc
jno
jmp
sbb
imul
mov
int3
adc
stc
lods
fmul
and
pop
aas
sub
ja
ret
mov
or
outsl
cmc
cmp
fisttpl
fistps
into
lds
into
sti
mov
sub
adc
cmp
orb
sbbb
inc
mov
push
xor
in
sbb
cmc
fwait
pop
andb
movsb
and
push
mov
inc
mov
mov
mov
ds
jp
xchg
pushf
iret
nop
cmp
dec
std
lret
jp
adc
jg
mov
sub
jns
dec
test
mov
add
push
mov
fstl
cmp
ret
cmc
packsswb
repz
xor
arpl
in
xchg
push
in
sbb
add
add
gs
testl
dec
lcall
add
sbb
ja
mov
pop
xchg
xchg
fisttps
fildll
pop
add
lock
push
in
or
out
inc
pop
in
lea
cld
push
inc
ds
inc
mov
cltd
mov
adcl
test
inc
mov
mov
push
inc
and
imul
dec
iret
adc
inc
test
orl
pop
mov
mov
add
jo
dec
jge
hlt
jl
cmp
xor
add
push
sbb
sub
sbb
stos
lods
inc
nop
icebp
mov
int
int3
sbb
lods
xor
jnp
xchg
mov
mov
lret
mov
mov
sar
outsl
aaa
add
es
xor
data16
add
jmp
dec
mov
lods
add
sub
xchg
mov
test
popf
or
out
push
aaa
imul
and
daa
lahf
mov
pop
das
xor
testb
add
add
add
fidivs
movsb
cmp
lret
das
lret
and
jnp
int3
rclb
jmp
xor
icebp
lret
cmpsb
mov
xchg
mov
xchg
cli
sbb
popf
xor
cli
out
lret
lods
cmp
cmp
dec
sbb
pop
sub
call
mov
sbb
shlb
std
pushf
call
ret
jg
ret
fndisi(8087
shrb
ja
shrl
sub
add
add
out
sbb
popf
pop
dec
lock
xchg
mov
mov
outsl
rclb
jcxz
fwait
cmp
stc
movsb
jns
fisttps
cmp
repnz
push
xchg
sti
dec
movsb
inc
mov
mov
push
shr
and
das
xor
xchg
adc
fcmovbe
les
push
scas
ljmp
nop
lret
imul
mov
fisubl
or
mov
fucomi
xor
out
or
add
add
add
mulb
movsl
mov
jns
xchg
pop
outsb
inc
jo
push
in
cmp
int3
vpmulhuw
std
jp
xor
xchg
push
xchg
in
mov
jno
sub
test
adc
mov
sti
jg
rolb
push
and
cmp
sarb
add
mov
pusha
jecxz
sbb
push
jo
mov
cmp
ret
sbb
jno
rclb
aad
sti
lods
lcall
xor
rolb
outsl
cld
fisubrs
or
sub
add
push
xchg
add
test
call
mov
fsubrs
adc
pop
cwtl
scas
or
ss
pop
push
sbb
mov
cmp
es
xchg
mov
mov
stos
pop
cmp
pop
ficoml
xchg
sbbb
push
mov
rcll
rorb
in
sub
xchg
aad
cmp
dec
push
sahf
movsl
popa
fisubrl
add
push
inc
pop
jns
aas
loopne
sub
clc
add
add
add
pop
andb
and
cld
mov
dec
dec
mov
aaa
jmp
sbb
jnp
push
test
lcall
rclb
adc
dec
test
jge
addr16
push
stc
jle
ss
rcrb
push
arpl
outsl
or
scas
out
in
loop
lret
cmp
jne
ficomps
dec
add
mov
and
jge
push
sub
mov
lcall
rorl
out
jne
mov
xor
cmp
aam
mov
call
mov
clc
push
mov
rcl
int3
fsubl
adcb
push
lea
dec
mov
xchg
mov
dec
loopne
sub
gs
pop
cmpsb
negb
mov
xchg
loopne
or
jnp,pn
dec
fwait
lret
or
inc
je
push
push
mov
add
mov
stos
aaa
loope
sarl
popa
std
addr16
or
adc
test
add
cmpsb
sbb
jnp
mov
xor
ja
stc
add
add
add
sti
hlt
movsl
jae
fwait
out
insb
pusha
gs
jb
dec
dec
lcall
gs
mov
sti
and
xchg
lcall
clc
cmp
jmp
mov
cli
das
ror
imul
rcll
arpl
sarl
cmp
sbb
adc
popf
xlat
or
lret
test
push
adc
pop
mov
mov
push
xchg
xor
ss
rorb
inc
stos
xchg
nop
stos
mov
stos
mov
mov
inc
xchg
imul
lds
fs
jno
test
adc
lret
adc
daa
and
cs
mov
pop
fwait
shlb
dec
adc
inc
insb
decb
jmp
mov
push
les
mov
push
dec
loope
adc
mov
popa
or
inc
iret
xchg
mov
test
mov
imul
gs
and
addr16
add
add
add
push
imul
sti
nop
mov
push
inc
mov
and
and
insl
add
adc
adc
cmp
add
and
fmuls
inc
stc
scas
stos
lods
loop
dec
hlt
pop
out
hlt
movsb
imul
push
cwtl
imul
ds
orl
sub
mov
into
cmpsl
push
call
adc
push
fcom
jge
ja
mov
ret
push
xlat
jno
pop
sarl
push
inc
pop
es
cld
pusha
scas
sub
xchg
sub
test
sbb
cwtl
lcall
mul
addr16
adc
cmp
jnp
xchg
nop
cmc
gs
cmpsl
in
mov
add
ret
inc
adc
enter
jp
inc
xchg
out
popf
lret
out
clc
dec
mov
bound
sbb
fidivs
outsb
cmpl
out
sub
pop
packuswb
xchg
mov
idivl
or
jo
sti
add
add
add
and
fcoms
sub
push
mov
dec
sbb
imul
push
mov
or
sbb
movsl
cmc
mov
sbb
fwait
mov
jp
mov
subl
test
std
sbb
cmp
adc
mov
mov
jecxz
ljmp
pop
movsl
inc
in
repnz
ljmp
mov
add
dec
xchg
repnz
mov
andl
pusha
mov
mov
xor
fcmovnb
add
lds
push
push
push
pop
push
jns
mov
nop
cmp
iret
rcll
inc
lret
push
test
sub
lcall
mov
pusha
adc
shll
ret
mov
pop
jg
ret
pop
push
dec
fsubrs
dec
imul
mov
test
mov
fidivl
cwtl
shlb
add
add
add
test
stos
add
add
and
shrb
cld
sbb
mov
cmpsl
push
loop
pop
mov
je
jbe
hlt
mov
dec
push
faddp
xchg
mov
adc
or
jo
bound
lret
into
adc
xchg
mov
xor
jmp
outsl
dec
out
iret
jo
leave
stos
pusha
adc
in
ljmp
mov
mov
adc
jge
test
mov
pop
dec
mov
orl
mov
mov
xor
in
into
xor
insl
jne
jmp
jo
mov
es
cmp
adc
data16
sbb
xchg
push
mov
popa
jbe
cmp
in
pusha
cli
dec
pusha
fstl
push
xchg
into
dec
and
dec
inc
dec
in
inc
std
adc
ret
mov
rolb
call
add
push
pop
push
jmp
rcr
cmpl
add
add
dec
xor
add
into
jmp
or
lods
orb
shrl
arpl
xor
out
jo
mov
push
push
ljmp
stc
dec
pop
add
push
iret
inc
rorb
bound
roll
clc
mov
test
mov
sub
xor
dec
sbb
insb
arpl
pushf
jg
mov
adc
cmp
das
addr16
rcrl
xchg
cwtl
sbb
shl
lock
lds
pop
out
cmp
xchg
cmp
int3
xor
dec
gs
jecxz
sub
call
stos
ficomps
scas
inc
sbb
ret
shll
mov
mov
stos
aad
dec
add
adcb
insl
mov
mov
scas
popf
jecxz
es
jbe
cmp
aaa
insl
das
aaa
sub
mov
adc
mov
das
mov
pop
and
xchg
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
push
lods
inc
cwtl
incb
add
add
add
add
cmp
popa
sbb
adc
mov
leave
mov
mov
pop
daa
ss
cmp
test
in
inc
cli
mov
jb
xchg
addl
push
pop
jb
sbb
in
sbb
sahf
es
lods
mov
xor
and
xchg
rorl
int
outsl
mov
xchg
xchg
inc
mov
add
gs
fiadds
in
ret
fwait
mov
xchg
xor
iret
jg
rolb
lahf
or
enter
aas
data16
dec
fstpt
push
aaa
push
insl
push
das
rcll
rclb
ficoms
rcrl
push
dec
xor
push
test
notb
inc
fbld
adcb
sub
aas
jo
pop
push
mov
mov
or
sub
shll
fcompl
cmp
mov
scas
xor
mov
add
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
lcall
jb
in
adc
cmpsb
mov
mov
or
ss
cli
int
sub
in
sbb
sahf
imul
adc
and
movsb
inc
je,pt
lods
jo
out
mov
sbb
inc
or
or
fwait
sbb
xchg
testb
call
xchg
pop
enter
xchg
xchg
mov
or
mov
lret
and
mov
cmpsl
fwait
popa
mov
pop
xchg
ja
and
add
ss
or
aam
mov
in
std
mov
push
enter
cmpb
enter
sbb
adc
mov
xchg
call
out
push
xchg
mov
imul
clc
push
iret
inc
lret
adc
mov
lds
or
dec
dec
or
jbe
inc
xchg
dec
mov
in
fisttpll
fs
add
mov
nop
test
aam
int
aaa
das
aam
mov
add
add
add
nop
iret
lea
data16
loope
daa
dec
jge,pt
outsl
mov
testl
xchg
push
cmp
push
lcall
inc
inc
cmp
ds
ss
push
jo
fcomps
jge
scas
les
clc
pop
push
mov
in
icebp
pop
or
pop
roll
adc
ret
or
aaa
push
mov
xchg
push
or
lock
je
xchg
loope
rcll
sub
arpl
arpl
outsl
jl
jp
mov
arpl
leave
xchg
call
jge
cmpsb
js
push
ret
sbb
mov
loop
mov
ja
mov
in
out
inc
pop
sbb
lret
and
adc
pusha
inc
xchg
jl
pop
add
push
loopne
ret
data16
stos
mov
add
adc
test
xchg
js
push
test
xchg
enter
cli
dec
fildl
add
add
arpl
addr16
sub
inc
sbb
lea
add
add
add
xchg
nop
jae
scas
cmp
and
inc
popf
rcr
pop
divl
jp
out
fidivl
loop
sub
dec
push
sub
jl
pop
or
mov
les
cmpsb
popa
imul
add
dec
enter
xchg
sbb
adc
xchg
xlat
das
idivl
xlat
jb
inc
fistps
inc
mov
push
adc
mov
fsubp
dec
js
pusha
clc
cmp
jae
mov
rorb
fdivr
pop
loop
xor
outsl
leave
mov
jmp
sti
outsb
mov
in
xchg
xchg
cwtl
inc
mov
jl
popf
ja
es
leave
movsl
push
js
loop
dec
xor
pop
jg
aaa
aaa
or
add
cmc
sbb
pop
mov
lahf
push
ret
jb
mov
loop
push
sub
and
in
es
gs
lock
or
icebp
je
fnstcw
mov
sbb
scas
sub
mov
out
cmp
cmp
pushl
xchg
xor
sahf
sub
add
add
add
lock
mov
movsb
addl
cltd
test
and
mov
sub
in
jmp
xor
mov
push
divb
push
adc
dec
mov
pop
jne
loopne
pop
push
mov
mov
mov
int
out
mov
call
in
movsb
addr16
xor
inc
popf
dec
cs
rcrl
or
pop
xchg
fstpl
mov
sbb
in
imul
sbb
test
hlt
sbbb
push
pop
jnp
push
jge
addl
mov
sbb
cmp
xchg
adc
cmp
sbb
clc
in
mov
adc
mul
mov
sub
cltd
jle
mov
jb
movl
mov
cmp
sbb
adc
or
jecxz
hlt
test
push
in
dec
test
push
scas
mov
shrb
add
add
add
add
into
test
outsl
sbb
shl
jmp
inc
jae
jecxz
ret
lds
mov
add
xlat
in
rorl
stc
outsl
jecxz
xchg
fwait
stos
jo
pop
sahf
sbb
outsl
push
bound
jl
sahf
scas
shrl
cltd
bound
pop
add
pop
insb
xor
cs
repz
pop
push
add
out
js
sub
xchg
adc
xchg
pop
inc
add
addb
or
fdiv
mulb
loope
jnp
out
rorl
dec
mov
subl
and
in
or
vmwrite
sub
nop
jbe
rol
ret
leave
xor
roll
sbb
sti
or
adc
cwtl
dec
roll
cmp
sbb
inc
sbb
out
mov
adc
pop
jnp
jmp
sbbl
xor
cwtl
negb
pop
push
hlt
fnstcw
orl
add
add
xchg
and
movsl
mov
mov
mov
sbb
add
add
add
mov
shrb
xchg
lock
lret
inc
sbb
xchg
push
xor
fldenv
push
push
cmp
jbe
lods
pop
adc
mov
hlt
rcrl
test
flds
xchg
adc
add
dec
mov
sbb
fnsave
and
cld
mov
mov
inc
repnz
mov
or
repnz
push
inc
in
ja
dec
mov
andl
push
rorb
mov
shlb
jns
xchg
inc
dec
lea
repz
jmp
mov
add
cld
sub
sub
jne
jmp
inc
jo
jge
out
push
das
aaa
add
sbb
inc
fdivrs
push
mov
sub
dec
xchg
aam
aad
inc
add
jecxz
and
sarb
fcoml
xlat
arpl
cld
shll
add
add
add
mov
push
jg
mov
lods
and
in
addr16
add
out
cwtl
sbb
sub
add
lock
int3
pusha
fwait
mov
lea
mov
xchg
scas
mov
jmp
daa
in
pop
lea
jbe
cmova
xor
mov
mov
cmp
mov
or
addr16
in
out
incl
fdivr
imul
add
inc
dec
sbb
push
mov
sub
mov
xor
scas
xchg
iret
xchg
cltd
mov
movsl
clc
call
std
mov
mov
inc
negb
cmpsb
mov
mov
adc
mov
and
stc
push
repnz
mov
in
mov
imul
dec
sahf
insb
out
in
mov
fsubs
add
nop
fisubs
xchg
in
cmp
inc
cmp
mov
jbe
mov
push
and
sbb
xlat
sub
shr
inc
mov
int
sbb
dec
inc
arpl
add
add
mov
mov
lods
imul
push
pop
xor
add
add
add
adc
add
and
xlat
jmp
mov
xchg
or
setae
pop
out
jmp
sbb
enter
sub
pop
fistl
popf
xchg
mov
pop
out
xchg
lds
ds
add
lret
mov
mov
mov
sub
outsb
addb
jecxz
xchg
adc
idiv
dec
lds
xchg
sub
fwait
push
das
sub
mov
and
lods
ret
arpl
jle
add
inc
or
inc
jle
push
scas
jp
sti
lods
mov
mov
movsl
xor
xor
out
dec
sub
pop
mov
pop
inc
sub
lret
data16
es
aad
mov
lods
inc
testb
aas
jb
fisttpll
xor
out
mov
scas
mov
jno
mov
xor
inc
pop
ja
dec
cli
push
mov
insb
dec
or
mov
jo
add
add
mov
cmp
adc
mov
add
add
sarl
jb
mov
roll
inc
inc
adc
aad
xchg
out
xchg
jge
sub
add
pop
enter
out
and
lret
mov
mov
xor
sub
aaa
xor
lcall
cmp
xorl
jl
mov
repz
add
cmp
es
mov
sub
xchg
repnz
in
hlt
ja
jne
adc
push
dec
ljmp
sahf
cmpb
pop
mov
dec
in
test
sahf
sbb
scas
in
clc
and
mov
daa
sub
push
pusha
mov
andb
add
sub
cmp
movsl
xchg
cvtpi2ps
ljmp
cld
cltd
pop
dec
rclb
lods
add
or
xchg
fcompl
or
jl
lea
sub
imul
into
lods
scas
lret
imul
adc
push
jmp
add
hlt
fbld
mov
add
add
add
or
or
in
stos
inc
aaa
mov
test
cmp
mov
jnp
dec
repz
jecxz
lods
pop
add
adc
dec
mov
push
sub
add
stc
add
mov
cmpl
add
sar
sub
mov
and
mov
mov
stc
xchg
adc
aaa
aad
adc
imul
iret
lods
lahf
mov
add
push
stos
inc
inc
repz
test
shl
mov
mov
pop
pop
jns
mov
cli
ret
repnz
xchg
pop
fisubrs
pop
pushf
stos
iret
add
push
enter
and
dec
lcall
fwait
sahf
sub
in
icebp
dec
xchg
out
fstpt
test
loop
scas
xchg
mov
adc
shl
lods
mov
cmp
xor
popf
nop
es
mov
cmp
xchg
in
sbb
mov
into
fwait
add
mov
mov
or
add
add
add
aaa
and
xor
leave
jge
in
dec
or
push
adc
scas
push
add
stos
seto
test
add
sbb
insl
dec
dec
subl
sub
mov
jnp
mov
cmp
faddl
repz
pop
imul
adc
sub
adc
data16
movsl
xchg
scas
adc
movsl
adc
imul
sahf
sub
cmp
adc
jg
mov
test
aas
push
fadd
iret
lods
inc
icebp
dec
inc
ljmp
mov
xchg
xor
mov
repnz
js
xor
retw
test
sbb
shrl
repnz
inc
rcr
ret
sub
add
mov
adc
repnz
push
add
or
outsb
or
call
mov
inc
in
movsb
decl
lret
dec
xor
add
jl
test
out
mov
pop
sarb
in
cmp
xor
add
add
add
mov
cltd
aaa
xlat
bound
and
insl
les
mov
cld
test
jp
fildl
lret
lea
xor
sahf
xchg
inc
jecxz
enter
fists
xchg
arpl
mov
inc
dec
inc
sahf
add
jo
leave
xor
adc
popf
enter
cltd
and
imul
nop
test
dec
cs
adc
adc
out
xor
idivl
cmpsb
stc
pop
jmp
add
ja
stc
jg,pn
xor
add
mov
xor
lds
mov
push
or
int
sbb
test
lcall
jbe
loopne
pop
mov
inc
mov
add
scas
cli
mov
sbb
or
in
repnz
nop
xlat
ret
sub
and
add
aaa
cmovs
out
arpl
pop
pop
lcall
repz
add
sti
inc
out
aas
mov
rclb
or
add
add
add
rcr
dec
mov
fisubs
outsl
mov
in
pop
les
push
out
inc
bound
xchg
push
cmp
pop
mov
pop
test
frstor
jbe
popa
push
les
scas
cwtl
sahf
and
call
sahf
dec
jmp
fwait
jne
in
nop
fucomi
in
gs
cmp
mov
sahf
xchg
lret
add
mov
shlb
pop
and
and
adc
fs
out
or
mov
xchg
loope
ja
xchg
cmp
xchg
cmpsb
cwtl
lds
sbb
xchg
sbb
pop
pop
xor
or
sub
cmpsl
sbb
sbb
lods
and
xlat
ds
les
xor
mov
push
mov
ds
sub
inc
xor
cmp
cmp
push
sbb
test
cltd
jno
shll
push
cmc
xchg
sub
data16
cmp
xchg
insl
sub
cmc
aaa
jg
lret
sbb
add
bnd
dec
leave
and
sti
outsl
test
add
add
add
add
inc
inc
test
mov
sbb
jp
xor
mov
mov
mov
fisubl
mov
inc
into
popa
pop
push
or
add
pushl
insl
sbb
push
pushf
stos
mov
arpl
cmpsl
jmp
rol
and
mov
adc
das
sarl
ljmp
pop
repz
sbb
xchg
movsl
int3
mov
xorb
sub
dec
mov
sub
xorl
shll
data16
add
jle
iret
rcrb
icebp
call
es
mov
mov
or
mov
dec
push
xchg
or
fbstp
sbb
mov
sub
mul
in
sti
or
mov
push
lock
inc
sub
jb
mov
push
div
fdivs
pop
inc
lcall
aaa
aaa
jle
sbb
in
out
ja
filds
jp
out
addr16
add
pusha
or
mov
jge
aam
iret
push
and
mov
movsb
mov
xor
push
or
mov
es
push
adc
sub
nop
push
sub
xchg
stos
into
les
push
mov
or
popf
add
scas
pop
in
pop
fdivr
rcrb
aam
jge
cltd
nop
mov
mov
push
pop
add
push
lahf
add
sahf
add
mov
out
popa
gs
or
dec
mov
pop
pop
lahf
insb
mov
pop
orb
lds
add
xor
imul
fnstcw
xlat
cmp
pop
dec
test
insl
iret
stos
orb
lods
into
and
out
xchg
sbb
jecxz
dec
jnp
fstl
lock
jmp
js
mov
iret
ror
je
push
icebp
inc
jo
sahf
add
stos
loop
inc
iret
out
adc
sti
xchg
add
add
pop
in
inc
push
or
add
add
add
add
adc
call
nop
leave
add
aad
pop
mov
ret
push
jmp
das
stc
outsb
adc
loope
nop
mov
cmp
or
mov
pop
scas
stos
repz
daa
je
pop
push
sti
ljmp
out
cmp
add
dec
icebp
out
jl
test
or
pop
push
test
in
std
fiadds
ja
clc
cmc
out
dec
push
fxch
int3
fstps
call
data16
std
adc
jp
shl
mov
jo
arpl
mov
mov
test
cs
cmpb
sub
or
sub
xchg
sbbl
jp
and
rclb
push
adc
and
inc
or
daa
neg
xchg
push
jbe
sub
and
sbb
add
xchg
add
push
ret
jmp
lods
push
xor
orl
int3
in
inc
xlat
repnz
das
leave
and
add
add
jg
neg
pop
daa
inc
mov
add
add
add
push
and
pop
dec
ljmp
dec
cwtl
fcmovne
cmc
out
and
mov
inc
pop
push
stos
sbb
jmp
lret
and
add
pop
loope
jbe
xor
mov
aam
push
aaa
inc
out
sbb
xchg
dec
push
fstps
in
dec
push
mov
inc
mov
int
pop
jb
sbb
pop
sti
out
test
mov
cmc
xchg
jmp
xor
inc
fcoml
jae
pop
clc
adc
dec
lock
lock
pop
add
sub
add
xlat
cmp
xchg
adc
and
or
pop
stc
push
out
stos
push
fcoms
mov
out
mov
idivb
ja
iret
sbb
arpl
or
sub
js
out
shl
cmc
cld
sbb
mov
testl
sbb
imul
mov
jne
and
push
push
push
rcll
js
mov
inc
cmpsb
cmp
sti
jg
cmp
je
div
inc
mov
add
add
mov
das
jp
cltd
jg
jle
decl
out
or
int3
cmp
mov
cmpsb
divps
popf
ror
jns
xor
bound
js
mov
sbb
adc
pop
iret
inc
add
pop
int
cmp
lahf
mov
pop
mov
xor
stos
sub
push
into
mov
push
dec
popa
jp
sbb
popa
out
inc
dec
movsb
out
test
xchg
or
add
test
xchg
mov
daa
xor
sar
movsb
bound
mov
or
loop
mov
cmp
test
sbb
addr16
imul
jne
bound
in
int3
shl
add
aaa
mov
sub
xchg
cmc
leave
fistpl
and
or
fcomps
mov
xchg
mov
or
cmp
outsl
or
pop
or
inc
pop
scas
aam
jnp
fstp
fcompl
sbbl
adc
add
add
add
cmc
push
xchg
dec
test
test
mov
mov
xchg
push
les
stos
pop
aad
test
push
mov
ds
popa
or
and
mov
cmpsb
enter
fsub
scas
push
xchg
mov
sub
jl
inc
mov
pop
hlt
inc
iret
dec
daa
je
jl
and
sbb
xchg
xchg
repnz
lods
subb
rol
int
sahf
bound
jg
mov
inc
cmp
push
jp
lret
inc
xchg
sub
lds
mov
mov
daa
push
jecxz
push
or
test
das
fs
dec
lods
pop
inc
xor
fs
scas
test
cmpsl
call
or
js
xor
ljmp
loope
imulb
pusha
fstl
adc
mov
cmp
sbbl
mov
lods
cmpsb
je
aam
adc
rcrb
add
outsl
mov
add
cmp
add
add
add
mov
xchg
mov
dec
inc
pushf
ljmp
mov
pop
adcl
inc
and
push
push
and
dec
jp
mov
or
pop
add
jg
dec
cmp
mov
adc
hlt
iret
stos
popf
dec
inc
and
mov
lea
cli
push
pop
jo
es
cli
push
push
cmp
push
inc
ret
sub
push
xchg
call
test
push
xchg
mov
jle
adc
jno
push
xor
pop
pop
enter
jle
mov
xlat
adc
and
jbe
inc
loop
in
sahf
cmp
dec
popf
cltd
test
lar
mov
adc
sub
sarb
inc
negl
xchg
dec
mov
mov
cmp
adc
push
sbb
mov
or
add
mov
xchg
push
popl
int3
inc
push
mov
int3
or
xor
add
add
jmp
fldl
repz
cwtl
adc
add
add
add
ds
ror
inc
push
sub
adc
fstl
mov
or
and
push
xchg
imul
jbe
fstl
test
data16
add
loopne
jbe
out
insl
mov
insl
fadd
cmpsb
jecxz
add
enter
or
and
xor
sub
and
jno
mov
pop
pop
dec
and
mov
push
inc
mov
jle
cmpsb
xor
cwtl
aam
mov
js
mov
adc
jno
lret
inc
inc
mov
xor
cvtdq2ps
mov
mov
cmpsl
xor
lcall
xchg
mov
sbb
fwait
dec
push
mov
and
cmpsb
cmc
dec
repz
int3
xchg
rcll
mov
test
inc
xchg
jae
data16
xor
js
inc
dec
mov
add
das
cmp
and
sahf
out
inc
push
xchg
or
fbstp
add
xor
xchg
lds
rcll
lcall
add
fwait
lock
mov
sbb
addr16
cmp
loopne
jp
pop
stos
popa
push
xor
push
fadds
mov
sbb
push
insl
iret
lcall
gs
fstl
adc
mov
shlb
icebp
xor
leave
xchg
scas
pop
leave
leave
sbb
xor
js
lret
mov
and
orb
fsts
sbb
shll
add
cltd
jle
movsb
fldl
sub
sarb
popf
inc
dec
test
outsl
cmpsl
sti
mov
and
jl
ds
sbb
sub
xchg
xor
lods
push
ficoml
add
les
dec
mov
fcmovnbe
cmp
push
addr16
mulb
mov
sbb
mov
mov
cmp
lea
inc
xchg
push
xor
sti
or
testb
shr
push
andb
xor
roll
ss
insb
inc
cli
imul
sahf
dec
cli
inc
jg
int
xchg
lods
or
push
movsb
addr16
add
in
xlat
bound
pushf
mov
adc
fcmovnbe
dec
fildl
nop
hlt
pop
fincstp
xor
lahf
rcrb
adcb
and
xor
mov
push
pushf
outsl
sbb
orb
daa
cmovg
push
loopne
inc
cmc
adc
repz
or
adc
aaa
push
dec
push
add
and
xchg
push
push
sub
or
pop
jae
scas
in
insl
nop
movsb
rcrl
or
and
fidivs
mov
lahf
mov
xor
mov
sub
in
movsl
xchg
rcrl
mov
push
scas
xchg
je
mov
mov
je
insb
cmp
xchg
cs
daa
call
cld
jb
scas
ss
lret
repz
fs
rcrl
xchg
in
mov
sub
and
mov
fsubrs
sti
orb
or
das
and
outsl
xchg
mov
in
inc
les
add
lock
std
cmp
jle
fistpll
ss
and
daa
addr16
add
add
add
xchg
jmp
cmp
shl
cmc
add
jle
add
fwait
cmc
pop
stos
imul
hlt
divl
push
popf
xor
into
nop
add
outsb
mov
ficoml
scas
test
in
cmpsl
push
mov
lret
rcl
mov
rolb
adc
and
xchg
fdivl
xchg
outsb
pusha
rcl
xchg
push
outsb
hlt
mov
push
add
lahf
icebp
inc
xor
lahf
scas
mov
inc
out
fs
or
shlb
loop
addr16
pop
adc
or
subb
add
sbb
fistps
dec
cli
lahf
cmc
rcr
bound
pop
xor
mov
loopne
rorl
std
adc
xchg
mov
cmp
inc
insb
sbb
daa
lea
pop
fisttpll
out
out
scas
mov
hlt
mov
jo
clc
gs
addr16
loopne
sbb
sub
mov
add
add
iret
xlat
ficompl
inc
mov
sysret
addr16
add
add
add
jecxz
lods
sub
repnz
push
xor
inc
loopne
cltd
mov
mov
aam
aam
sbb
jle
mov
out
dec
das
roll
sub
mov
mov
icebp
cli
xor
xchg
or
push
adc
mov
stc
mov
pop
adc
push
mov
mov
sub
lret
sbb
enterw
out
xor
lods
mov
sbb
jg
push
aad
mov
jns
xchg
dec
mov
int
adc
sbb
ja
addr16
mov
aas
or
arpl
mov
mov
sbb
lds
or
fstl
int3
mov
sub
test
arpl
fneni(8087
ficomps
inc
fwait
xchg
adc
sbb
lods
movb
add
in
loope
adc
sbb
or
jnp
icebp
sar
jg
andb
dec
jmp
dec
scas
iret
outsb
jmp
push
test
mov
add
add
add
adc
adc
mov
repnz
aas
xchg
pop
fidivl
dec
mov
aad
inc
push
cmpsb
push
fcmove
sti
dec
imul
roll
int
aam
rcll
test
xchg
xchg
popf
pop
sub
out
jle
test
imul
rol
jp
push
sahf
dec
mov
fmull
xor
adc
lds
fimuls
pushf
sbb
and
xchg
int
imul
jb
mov
cmc
aam
xor
dec
push
mov
scas
lea
mov
pop
xor
mov
xchg
iret
mov
pop
xor
insl
stos
lods
inc
adc
mov
mov
and
enter
xlat
stos
mov
nop
xchg
push
pushf
call
mov
sub
pop
insl
lret
in
aaa
sbb
cmp
mov
add
add
std
sbb
stc
cld
or
jge
jno
sbb
add
add
add
pop
leave
std
inc
mov
rclb
into
xorl
fsubr
add
push
xor
xlat
movsl
fmuls
adc
ret
xchg
shlb
repnz
jno
stos
adc
scas
sbb
sahf
pop
les
xor
out
jmp
push
xchg
jb
in
or
int
sbbb
push
rclb
push
push
add
inc
add
xor
fwait
dec
out
adc
jl
and
push
xor
out
add
mov
inc
adc
decb
repz
insl
mov
jne
pop
out
pop
lcall
mov
jecxz
sub
outsl
dec
aad
pop
dec
dec
mov
mov
xor
mov
cmp
cmpb
js
sbb
int
dec
pop
mov
jp
sub
loopne
push
stos
mov
push
mov
sub
xchg
aad
add
add
negl
adc
pop
xchg
cmpsb
jp
popa
in
sbb
add
add
add
add
adc
mov
inc
int
idiv
xlat
cmp
and
nop
lods
inc
and
popa
notl
jle
adc
out
iret
jno
movsl
jmp
sub
add
jns
aam
inc
mov
les
xchg
mov
mov
lock
sbb
fs
inc
int3
and
sbb
fyl2x
dec
push
stos
int3
sub
dec
mov
add
das
mov
dec
cmpsb
imul
loopne
sbb
or
ds
xchg
scas
jg
add
add
dec
aaa
popf
in
cmp
add
mov
mov
pop
pusha
je
fadds
cld
mov
fldt
sbb
pop
xor
pop
mov
ds
push
pop
nop
outsb
mov
icebp
cmp
stos
jbe
sbb
stos
and
dec
out
sarl
xor
dec
jl
cmp
push
sub
or
sbb
mov
dec
pushl
cmpsl
sbb
add
add
add
dec
inc
data16
mov
jnp
xor
ret
xor
inc
adc
xorb
out
add
push
dec
push
push
push
and
xor
xchg
mov
test
shll
loop
ret
fimull
pop
shll
aas
fst
xchg
in
sti
ret
add
insb
mov
shrb
clc
inc
mov
sub
mov
sbb
xor
test
sub
lret
cmpl
add
stos
sub
dec
inc
xchg
xchg
mov
insl
cld
pop
fmuls
xor
int
mov
outsb
lcall
jbe
pop
stos
mov
repnz
pop
aam
filds
jp
dec
imul
add
sbb
into
repz
jmp
scas
stos
sbb
lcall
sub
daa
mov
cld
jge
mov
into
mov
pop
shll
dec
add
lds
add
add
inc
ja
pop
aas
dec
push
add
addr16
add
add
add
mov
mov
leave
sbb
loop
lret
pop
dec
aad
xor
daa
pop
gs
mov
xor
adc
pushf
jb
in
mov
out
jno
pop
sbb
mov
mov
mov
cld
test
xor
imul
dec
mov
or
sbb
insl
shl
sti
in
push
out
and
sti
mov
mov
and
lea
jbe
jecxz
jg
aad
mov
in
mov
loope
data16
cmp
mov
and
xchg
xchg
xlat
mov
jb
xchg
into
mov
lock
push
sub
clc
cmp
popa
xlat
rcll
mov
lcall
or
sub
sub
mul
xchg
push
xor
jo
jp
ljmp
push
aas
nop
mov
fdivl
lea
in
add
add
xchg
jae
ja
div
mov
jo
test
add
add
add
add
mov
push
adcl
inc
push
sub
jp
mov
add
lret
shlb
cwtl
mov
jl
jp
mov
hlt
lret
mov
fistpl
test
arpl
hlt
je
mov
mov
stos
in
sbb
std
enter
popf
sub
mov
jne
cmp
or
rcl
dec
sub
and
adc
rolb
test
xor
xchg
mov
mov
jmp
mov
jp
out
sub
inc
mov
std
hlt
jns
xchg
xor
cld
xor
fsts
sub
sub
sbb
xchg
out
enter
xor
mov
adc
or
call
mov
test
hlt
sti
imulb
inc
cmpsl
and
xchg
mov
pop
cmp
incb
push
out
call
push
test
jnp
add
cwtl
sbb
mov
clc
adc
iret
aas
xchg
mov
dec
hlt
leave
add
dec
das
fadds
xor
cli
std
jg
push
pushf
dec
cli
cltd
lds
add
add
lods
rolb
faddp
icebp
jcxz
orl
test
cmp
push
pop
jl
push
scas
push
les
inc
js
sub
arpl
scas
ss
or
inc
push
idiv
sahf
stc
sub
das
jno
xchg
mov
imul
or
cli
mov
jge
mov
jb
mulb
ret
iret
cli
pop
lahf
push
outsl
aam
pop
rorb
xchg
fdivrl
xor
aaa
outsb
xchg
xor
push
into
gs
shrb
lock
dec
push
sahf
pop
inc
in
jecxz
pop
rolb
pop
jg
mov
mov
test
roll
rorl
mov
xchg
sbb
pop
aas
push
mov
shll
mov
pop
push
sbb
fwait
and
int3
inc
mov
jl
cmp
shll
pop
xor
lcall
xchg
loop
mov
push
jle
and
enter
cltd
lock
cmp
add
testl
incl
sbb
dec
xchg
addr16
add
add
add
dec
shll
neg
xchg
cmpsl
mov
xchg
inc
nop
andb
push
mov
ud1
lds
and
sub
mov
popf
sbb
and
test
cmc
imul
ja
push
je
add
inc
mov
mov
xchg
fwait
inc
xor
stc
jo
and
std
mov
fnop
stc
mov
int3
sbb
or
push
loope
push
xchg
inc
pusha
shlb
lcall
sbb
add
test
push
ja
jno
mov
cmp
js
aaa
sbb
add
or
mov
adc
mov
lret
or
outsl
lock
mov
or
stos
mov
fdivr
stos
mov
push
and
cmp
fsin
jnp
mov
cli
mov
imulb
sub
mov
and
clc
inc
cmp
pop
push
es
jg
pop
or
xor
daa
mov
and
add
add
add
jecxz
xchg
cmp
sub
cltd
jns
jne
mov
sub
jo
mov
iret
add
fistps
push
jae
fildl
adc
mov
push
in
fsubr
cmpsb
mov
int
sbbb
cmp
xchg
lods
fldenv
addr16
in
and
test
push
dec
mov
xlat
cmc
xor
cmp
inc
pusha
sbb
stc
push
jmp
test
sbb
negb
fwait
loopne
xchg
and
mov
decb
mov
jb
xchg
lods
mov
js
mov
add
insl
add
clc
sbb
pop
or
aad
daa
icebp
idivl
xor
mov
push
fdivl
and
push
mov
andl
dec
pop
adc
xchg
add
push
add
sub
js
adc
or
xchg
jno
lea
lock
xchg
add
or
dec
push
cmp
and
add
add
add
and
or
xchg
in
sub
push
out
or
jb
sub
imul
filds
lcall
repnz
push
hlt
test
int3
pushl
adc
out
ret
mov
add
lret
insb
call
jecxz
dec
aam
jae
int3
dec
adc
loope
pop
pop
and
test
lret
repnz
xor
cmp
sti
push
movsb
push
cmc
mov
mov
xchg
jns
jno
or
jg
jle
inc
stc
clc
shlb
dec
nop
sarl
aam
in
xor
data16
cmpsl
lret
decl
aad
jae
aaa
rclb
dec
stos
rorb
lret
ds
add
pop
movsl
loop
add
cld
lods
pop
sarl
add
dec
xor
dec
insl
aas
push
and
rorl
sub
push
xchg
into
or
add
stc
lods
xor
mov
es
and
add
add
add
mov
ds
push
add
push
mov
xor
inc
add
xor
mov
leave
xchg
jnp
adc
lret
sbb
mov
jg
jno
cmpsl
gs
outsl
test
loope
dec
jno
push
or
adc
scas
sub
fcmovb
xor
repnz
lods
push
push
pop
cmp
push
dec
pop
add
xor
js
cwtl
mov
dec
mov
orb
sub
call
jl
mov
pop
lret
xchg
sub
inc
mov
inc
bnd
ss
xchg
rcll
mov
std
xchg
lret
in
imul
rcrl
repz
pusha
sbb
dec
stos
push
arpl
xor
lret
sbb
inc
dec
roll
ss
in
jbe
mov
pop
jmp
clc
push
rorb
add
ficoms
stos
sbb
call
mov
and
add
add
add
loope
jge
fdivs
jl
or
mov
fistps
pop
jno
push
adc
sbb
pop
fimull
jne
xorb
fwait
jmp
mov
pop
rcll
scas
pop
sbb
add
enter
test
sub
jnp
pop
xchg
andb
stos
mov
sbb
push
icebp
sub
cmp
out
jo
ja
adc
mov
add
cmc
pop
sarb
mov
scas
test
push
inc
adc
jae
rcr
lock
stos
mov
xchg
jb
int3
fstpl
stos
test
mov
adc
pop
insb
sub
sbb
and
iret
dec
or
jbe
adc
inc
adc
mov
mov
fwait
mov
leave
decb
mov
push
cld
in
jne
stc
loope
xor
loope
fwait
int
mov
out
stos
jge
or
frstor
push
addr16
add
add
add
movb
adc
push
lods
rol
mov
jno
aad
sub
imul
lea
push
enter
stc
mov
jbe
mov
dec
test
adc
bound
out
mov
jl
xchg
lret
sahf
mov
arpl
in
icebp
minps
mov
push
xor
int3
cmp
mov
and
cmp
jno
insl
sbb
xchg
in
movsl
pop
ljmp
lods
push
xor
fdivl
sbb
and
sbb
push
push
xchg
das
push
add
push
pop
mov
pop
push
pop
sarl
out
cmpsl
fisubs
cmp
aad
fbld
mov
pop
pop
ljmp
add
pop
pushf
jge
jg
fmuls
dec
mov
xchg
mov
inc
xchg
dec
insb
movsb
repnz
sar
outsb
jle
je
in
push
aas
fwait
add
loop
stos
xor
add
add
sbb
out
xchg
iret
push
aas
sbb
popf
pop
addr16
add
pop
jmp
jmp
notb
dec
and
je
mov
mov
fmull
mov
sbb
add
jb
xor
sub
data16
push
and
inc
test
test
pushf
ficoml
xor
lret
arpl
sbb
mul
adc
pop
imul
mov
inc
sbb
adc
mov
pop
ret
mov
or
dec
xchg
lea
adc
jae
int3
xchg
rorl
jmp
jp
cwtl
ljmp
mov
sti
imul
idivb
xchg
inc
and
sub
add
mov
dec
xchg
in
adc
daa
xor
inc
lock
mov
pop
or
pop
out
lahf
mov
jne
mov
add
pop
in
andl
ljmp
add
aam
add
cmp
out
loope
jns
mov
dec
add
add
add
xor
lods
daa
push
xchg
es
sbb
mov
mov
shrl
test
mov
adc
pop
into
lds
jmp
rcll
mov
mov
outsb
xchg
enter
nop
packsswb
clc
rolb
fistps
adc
jns
test
fildll
xor
jnp
jl
and
fidivrs
imull
sub
addb
inc
and
shlb
xlat
jmp
adc
sahf
jp
push
mov
add
jg
in
mov
jecxz
xor
test
popf
and
cmp
fmuls
lods
adc
jne
rol
movsl
fnstcw
rcl
lcall
vpmacsdqh
into
dec
fimuls
mov
push
inc
rcl
out
xchg
in
sahf
loope
sub
pop
push
jne
pop
ret
push
arpl
sahf
lods
add
jbe
shrb
adc
test
sbb
sti
push
mov
and
stc
mov
add
add
inc
push
dec
fbstp
test
inc
ret
sbb
test
inc
mov
insb
fsubrs
test
pop
xor
add
or
mov
mov
lcall
in
ret
push
inc
push
and
mov
data16
lcall
mov
rcll
in
fiadds
int3
mov
jnp
out
cmc
mov
insb
leave
cmp
mov
gs
sub
cmpsb
jb
out
mov
xchg
jno,pn
scas
les
mov
movsb
loopne
ljmp
mov
stc
test
jne
aaa
pop
fadds
cmc
aam
mov
lds
mov
mov
sub
jg
adc
fwait
mov
or
push
out
test
stos
aam
out
dec
lods
xchg
roll
pop
out
pop
arpl
sahf
jle
dec
cmpsb
xlat
and
mov
pop
roll
sahf
inc
push
mov
add
add
jg
cld
ret
add
insb
mov
sub
add
add
add
or
xchg
pop
outsl
repnz
and
xor
pop
sbb
jl
sti
cmpsl
jno
fsubrs
inc
or
movsl
mov
lock
ljmp
jl
mov
popa
stos
dec
jbe
add
stc
sub
outsb
ret
loop
add
inc
fldl
or
inc
sbb
adc
adc
subb
mov
subl
jb
xchg
out
cmp
sbb
jnp
xlat
push
dec
es
je
fwait
inc
js
jb
fsubl
cmp
rcrb
or
or
movsb
fstpl
int
mov
cmp
test
outsb
loop
repz
push
int
out
inc
inc
mov
aas
mov
or
pop
fcmovbe
xor
inc
dec
pop
cmp
pop
mov
sbb
adc
jecxz
push
mov
xchg
inc
aad
sub
or
mov
add
add
mov
iret
mov
xchg
test
add
add
add
data16
fsubrl
out
fstps
push
leave
gs
jb
xchg
lcall
inc
test
ret
sub
mov
sarl
test
cmp
pop
and
jno
repz
jle
imull
ja
gs
dec
and
lds
sub
loopne
int
outsl
ret
test
fwait
leave
rclb
je
jmp
cld
orb
mov
inc
mov
test
or
jp
inc
addr16
mov
cmc
push
xor
push
cmp
xchg
xchg
les
and
lcall
sbb
adc
dec
repnz
lock
mov
fldz
adc
in
jae
nop
add
pop
inc
sub
cmp
fistpll
fdivs
jl
or
dec
cmp
cmp
in
jno
mov
sub
add
add
mov
jg
arpl
xchg
icebp
sub
add
add
add
jae
fidivrl
ja
xor
ss
mov
cmpl
arpl
sub
test
cmp
mov
xchg
ljmp
and
add
mov
xchg
loope
shll
lret
aam
push
nop
mov
and
push
push
inc
int3
sub
jo
loope
sbb
stos
inc
mov
int
lods
mov
imul
inc
and
adc
int
cmp
stc
xchg
inc
sbb
pop
sub
into
sub
inc
push
pop
inc
jmp
xchg
xor
mov
into
inc
imul
int
inc
movsb
sar
fidivs
and
cld
shlb
xchg
sbb
insb
xor
jg
xchg
aas
lds
adc
jecxz
lcall
mov
mov
and
xchg
jbe
or
into
jo
fs
js
mov
enter
mov
add
add
xor
clc
cli
clc
sarb
sti
mov
out
sub
add
add
add
push
push
fsqrt
dec
movsl
sbb
add
cld
scas
rcll
cli
sahf
add
scas
adc
mov
add
push
mov
xor
inc
out
test
popf
lret
cmp
or
je
mov
dec
sbbl
xchg
bound
jbe
dec
xor
jnp
idivl
jb
push
lret
mov
cmpsb
movsl
and
mov
pushf
int
jg
lcall
cmp
shlb
je
testl
btr
cli
call
popa
jbe
mov
out
pop
nop
rorl
adc
movsl
adc
and
xchg
xor
aaa
orl
mov
xor
dec
enter
dec
outsl
adc
aam
pushf
rcll
outsl
mov
add
adc
sub
sbb
ror
stc
mov
sbb
mov
aaa
add
dec
push
jbe
and
arpl
cltd
je
in
pop
sbb
test
imul
mov
adc
addr16
add
add
add
inc
loop
add
xor
xchg
std
mov
mov
xchg
fadd
in
sbb
mov
xchg
iret
cld
insl
jb
mov
cmpsl
pop
adc
js
xor
push
push
xor
adc
scas
pop
loope
push
and
push
shll
test
mov
dec
mov
pop
nop
adc
daa
mov
sbb
lock
dec
sbb
add
sbb
jg
inc
push
xor
push
and
into
sub
cli
sbb
daa
push
xchg
push
loope
lods
sub
xor
mov
mov
lret
inc
outsl
cmp
add
popf
imul
push
push
add
repz
pop
dec
jge
lahf
insb
fcoml
push
subb
lds
adc
in
loopne
mov
ljmp
stos
out
add
add
test
jne
mov
cltd
sbb
adc
insl
lcall
add
fs
es
data16
insb
daa
mov
push
iret
mov
add
add
pop
jbe
xchg
or
lea
fs
mov
or
int3
notb
jle
push
lret
lret
pop
sub
adc
adc
sbb
push
push
adc
jl
shlb
and
and
in
les
mov
add
inc
push
cs
push
jns
outsb
push
jmp
movsb
lods
push
arpl
loopne
mov
sbb
aas
dec
rcrb
push
or
pop
scas
xchg
aas
jb
xchg
fsubrp
loop
add
jns
test
cmc
fs
mov
das
dec
rcll
in
add
and
jno
std
mov
cmpsl
out
sbb
iret
js
out
pop
sub
lods
xor
fisubs
call
clc
or
sub
xor
das
test
add
dec
inc
sub
pop
dec
pop
test
sub
clc
repz
xor
fsubs
adc
push
ficomps
sahf
cwtl
daa
clc
mov
fldcw
add
or
add
add
add
pop
rorb
sarl
out
sbb
sbb
xor
push
out
or
and
jb
mov
dec
mulb
or
dec
loope
aad
outsb
push
and
or
cmp
fbld
push
mov
shlb
mov
and
push
push
mov
and
movsb
and
test
scas
shll
and
jge
cli
sbb
xor
mov
and
cli
test
shll
mov
popl
push
cmpsl
sbb
or
aad
popa
das
sbb
cwtl
inc
pop
sbb
les
jmp
iret
adc
sub
and
cmp
fisubs
pop
aam
outsl
imul
push
imul
cmpsb
xlat
dec
push
xchg
test
mov
sub
inc
adcb
je
in
or
pop
xor
xchg
dec
test
gs
cld
inc
das
imull
hlt
push
pop
scas
loop
adc
pop
repz
push
sti
cmpsl
enter
mov
add
add
add
mov
arpl
pop
jnp
cmp
dec
loope
mov
rorl
mov
sbb
sti
sub
mov
xchg
mov
dec
or
or
add
cmp
ja,pt
jo
sbb
xor
pop
jb
inc
xchg
lahf
push
dec
repnz
por
lds
fs
rorb
sbb
mov
fidivs
sbb
xchg
inc
pop
out
mov
out
add
push
hlt
addr16
popa
push
dec
push
xor
dec
mov
push
pop
and
ret
aam
ss
xchg
jge
mov
data16
lods
fldl
lds
mov
enter
jbe
mov
add
mov
add
mov
xor
mov
cmp
ficoml
nop
cmc
fsubr
push
push
fcoml
gs
xchg
sbb
xchg
lcall
stos
mov
pop
push
and
std
mov
dec
push
stos
jmp
add
add
add
jne
xor
pop
lock
into
dec
jle
xchg
rorb
and
jb
xadd
sub
xchg
sbb
pop
nop
scas
inc
fidivl
loope
pusha
push
imul
stc
adc
fwait
adc
clc
sti
adc
cmp
sbb
out
cltd
rolb
cmp
dec
mov
fidivrs
dec
clc
dec
push
or
in
mov
push
nop
sub
push
sbb
stos
test
pop
xlat
dec
cli
mov
or
dec
insl
jnp
dec
xlat
arpl
movsl
push
mov
jg
xor
daa
jecxz
lods
shr
xor
addr16
movsb
mov
sti
adc
inc
in
popa
inc
lea
dec
shlb
add
jecxz
jp
push
xchg
outsb
jae
repz
xchg
into
sub
sub
mov
in
outsl
push
shll
lea
cmp
int
repnz
inc
cmp
les
mov
add
push
pusha
lds
xchg
and
inc
and
lcall
add
add
add
je
add
inc
dec
inc
je
mov
add
xchg
call
push
nop/reserved
ret
add
test
ja
mov
dec
mov
dec
loop
inc
fldl
lods
or
pop
xor
rclb
sub
arpl
or
paddusw
gs
xchg
outsb
mov
ds
pop
sarb
cmpsl
outsb
lret
insl
int3
js
add
inc
push
fs
xchg
ds
imul
hlt
fnstsw
lahf
nop
in
fiaddl
sub
cwtl
sub
and
lahf
adc
js
cmp
shrb
popa
pop
mov
insb
sbb
dec
sbb
and
xor
jl
flds
in
xchg
mov
fisubs
mov
sahf
adc
add
fcompl
mov
adc
push
sbb
sti
sbb
push
fcoms
sti
xchg
and
push
dec
mov
dec
push
push
ljmp
das
stos
incl
fiaddl
ret
ficomps
cmp
lahf
mov
adc
xor
add
add
add
addr16
pusha
mov
outsb
mov
loop
testb
sbb
ds
stos
mov
push
jns
or
icebp
mov
xchg
sub
cmp
sbb
ja
push
inc
mov
cmpsl
lods
bound
das
xor
loop
test
mov
xchg
push
inc
cli
loop
lret
mov
sub
dec
fmull
imul
jmp
mov
movsb
cmpl
rcrb
add
fisubrl
push
fisubrl
call
lods
lcall
push
pop
dec
cmpsl
add
pop
ret
cmp
outsl
test
xor
adc
mov
mov
sub
fnstcw
imul
sbb
mov
push
leave
push
mov
aam
xor
daa
add
cmp
je
cmp
test
push
or
lsl
gs
mov
std
ret
movsb
or
add
add
lods
xor
mov
cmp
dec
mov
add
add
add
hlt
inc
mov
repz
sub
sahf
mov
in
dec
or
out
movsb
mov
test
addr16
push
repz
mov
shlb
add
jle
movsbl
pop
or
aam
mov
cmpsb
int3
cmp
jle
in
or
cmpsl
popf
inc
sbb
cwtl
int
ret
ficompl
iret
ret
xchg
dec
cwtl
leave
sbb
inc
mov
dec
and
hlt
mov
pop
and
fidivrs
adc
repz
cmp
scas
xorl
insl
jmp
div
ret
xchg
lcall
xor
adc
cs
jae
lods
xchg
cld
inc
dec
decl
cmp
or
bound
fistpl
push
out
dec
sbb
jl
xchg
testl
shlb
movsl
mov
jp
push
inc
inc
lock
scas
out
cmp
test
pushf
icebp
fcompl
lret
mov
jne
repnz
add
lock
mov
or
stos
adcb
add
add
test
lock
xchg
push
mov
shll
jmp
jecxz
daa
test
add
xchg
ror
xor
cmc
ds
jae
sub
and
xchg
ret
xchg
mov
lea
xchg
sahf
inc
scas
jl
shl
sbb
ret
fsubs
imul
popa
call
in
imul
lret
add
cmp
mov
mov
lock
mov
pop
push
jae
push
dec
and
cmpsl
or
mov
push
sarl
cltd
test
dec
xchg
cli
mov
stc
xchg
sub
imul
cmp
and
pop
sub
jl
iret
push
pop
in
inc
jns
jg
jo
ror
or
xor
ljmp
fnstsw
leave
scas
frstor
xchg
and
stc
mov
mov
dec
sub
inc
in
mov
or
mov
sub
sti
pop
jge
neg
hlt
add
scas
addr16
add
lods
sub
in
jmp
std
std
cmc
mull
lods
cmp
loop
fisubl
mov
ret
add
cmc
xchg
cltd
insb
cmp
gs
test
mov
fstl
dec
cmp
or
stc
mov
subb
inc
xchg
jl
add
adc
addb
sarb
fwait
push
sti
bound
dec
push
movl
in
shr
out
sbb
test
sub
loopne
and
inc
pushf
xorb
jle
in
lods
push
lret
jne
jecxz
sub
scas
std
js
in
add
out
pop
jp
in
xchg
xor
inc
jp
jae
and
cmpsb
jbe
cmpsb
adc
adc
add
xor
shrl
jecxz
push
lock
adc
sti
push
push
je
popa
lret
pop
test
jmp
out
inc
out
push
or
mov
imul
mov
pusha
cltd
fsub
std
in
popf
in
stc
jmp
daa
dec
mov
add
add
add
in
gs
adc
add
pop
xlat
aas
jno
inc
lcall
insl
push
lock
mov
add
jecxz
lret
mov
sbb
insl
sub
and
cltd
push
push
outsb
fsts
pop
cmpsl
pop
lret
mov
mov
ljmp
push
int3
and
imul
daa
push
dec
xchg
in
imul
pusha
lcall
lods
push
add
jo
and
in
dec
aam
cmp
popa
mov
pop
es
cmp
or
dec
leave
jnp
in
pop
mov
or
cmp
sbb
dec
and
scas
loop
js
push
sti
fildll
sbb
xor
mov
mov
mov
jp
lret
ss
out
scas
outsb
out
enter
icebp
add
fidivl
xor
repz
rcrl
add
inc
nop
in
fstps
add
add
jp
jnp
sti
xchg
jle
jp
lods
sub
add
add
add
bound
inc
jmp
xchg
mov
mov
push
jo
sti
roll
sub
adc
or
push
add
sarb
push
cmc
repz
movsl
push
sbb
jo
sbb
jbe
in
add
gs
idiv
add
push
xor
imul
pop
add
sbb
adc
cmp
mov
fstpl
out
cld
push
out
addr16
ret
pop
mov
aaa
xchg
pop
ss
pop
outsb
or
xchg
dec
sbb
mov
sahf
push
push
mov
je
mov
mov
mov
lock
fs
pop
push
scas
rcll
das
sbb
fsubrs
jge
xor
call
add
mov
rorb
sbb
dec
stos
lods
sbb
adc
pop
mov
pop
rep
les
add
add
push
sti
decb
mov
daa
cmp
add
add
add
call
xor
addr16
lock
mov
aam
mov
adc
imul
push
lea
dec
addl
nop
or
sbb
xlat
jmp
test
test
xchg
xorb
stos
dec
rclb
pop
iret
mov
fdivl
stos
das
in
dec
testb
in
clc
lcall
stc
and
jecxz
lahf
mov
repnz
iret
and
fnstenv
xor
jmp
adc
lcall
das
jg
pop
sub
imul
lods
loop
mov
cs
cmp
mov
mov
imul
xchg
xchg
push
les
popa
ret
cmpsl
lods
aaa
pop
pusha
outsl
pop
mov
rclb
dec
jp
out
mov
inc
data16
pop
push
jb
add
add
cmp
xor
hlt
fimull
add
add
add
movb
sbb
outsb
xor
mov
nop
pop
enter
ds
hlt
or
jno
mov
icebp
cmp
and
adc
push
sbb
aad
lret
jg
mov
ja
xor
jg
scas
adc
xchg
cmp
arpl
neg
jae
and
mov
fists
gs
jo
xchg
data16
std
mov
mov
jp
in
cmp
out
pusha
outsb
sub
jns
xor
mov
dec
pmullw
push
in
and
dec
in
and
adc
jg
and
mov
or
inc
or
push
sbb
pop
or
add
insl
iret
and
lods
repnz
std
cmpsb
loopne
leave
fxtract
sbb
mov
adc
sbb
jl
mov
loop
out
sbb
jne
mov
loop
es
filds
add
add
cmp
jge
stos
lea
shrb
insb
xchg
cmp
add
add
add
push
test
mov
enter
rorb
insb
addr16
adc
pushf
aam
mov
mov
or
pop
mov
imul
sub
std
cmpsl
out
into
test
push
fisttpl
push
cmc
bound
add
mov
aad
mov
mov
and
das
fisubrl
jmp
jb
or
test
mov
insl
mov
das
sub
lock
outsl
pusha
dec
push
mov
or
mov
cs
pop
xchg
xchg
sub
push
out
and
out
xorb
dec
daa
test
cmpsl
mov
cmp
push
sbb
and
lcall
cmp
lahf
arpl
mov
mov
loop
int
and
dec
sub
cmp
jae
xor
or
jns
mov
divb
rclb
nop
lcall
cmp
add
add
add
push
dec
into
mov
popa
sbb
loope
ljmp
xor
mov
std
scas
pop
xchg
arpl
loopne
loop
cmp
je
dec
cld
adc
cmpsl
inc
pop
mov
scas
pop
dec
movb
pop
pop
mov
pushf
clc
pop
aam
cld
imul
sub
jo
out
pop
push
add
pop
ja
push
decb
aad
adcb
negl
lea
add
push
push
repnz
xchg
push
mov
nop
mov
out
out
add
movsl
fildll
mov
in
push
push
jbe
add
fbld
inc
pop
xchg
aam
mov
mov
cmp
sub
das
xchg
andb
aad
adc
ljmp
xor
mov
inc
daa
lahf
jp
js
or
sarl
pop
ljmp
add
jbe
idivl
or
sub
addr16
add
add
add
inc
pop
shr
lock
xchg
into
jmp
iret
ret
mov
mov
les
sub
bound
jbe
inc
pop
cld
or
pop
pop
jle
adc
add
fstpt
outsb
int
cmpl
jmp
loopne
iret
jp
jae
sbbl
lds
sbb
push
xor
xor
xchg
dec
xchg
call
jae
or
cld
shlb
push
cmpsb
ret
jp
jo
subb
imul
stos
insl
cmp
add
pop
pop
cmp
mov
scas
jno
fs
stos
mov
in
cmp
adc
sbb
leave
fsubrp
lds
enter
jns
and
sub
mov
xchg
sbb
insb
bswap
add
inc
aad
mov
push
xor
xchg
stc
sub
dec
cmp
add
add
outsb
sub
stos
fs
jmp
leave
aas
sar
and
cmp
add
inc
cmp
pop
mov
inc
xorl
outsb
inc
int3
movsb
pop
sub
inc
lods
jbe
and
sti
xchg
jns
and
add
sahf
sbb
daa
leave
or
dec
sbb
stos
xchg
inc
insb
inc
sub
test
push
sub
mov
scas
cmpsb
fistpl
test
or
mov
ss
call
sbb
sti
gs
cs
push
sub
cmp
stc
in
dec
mov
mov
jb
xchg
inc
call
nop
popa
xchg
add
mov
fwait
out
push
movsl
inc
mov
mov
add
into
sbb
pop
test
pop
xchg
das
xor
sbb
mov
mov
ror
repz
fisubl
jae
cmp
jmp
mov
ljmp
pop
and
in
xchg
out
xor
fidivl
mov
les
scas
fistpll
outsl
gs
ds
add
add
lods
in
test
nop
xchg
mov
test
movsb
cmp
push
mov
popa
mov
xchg
mov
imul
xor
pop
xor
mov
and
test
push
mov
shlb
mov
das
or
fistpl
dec
and
cmp
push
mov
or
fstpl
fs
aas
mov
imul
jnp
cwtl
imul
jno
dec
movsl
dec
and
jecxz
mov
cmc
jl
or
jne
gs
arpl
flds
mov
jmp
testl
sahf
addb
in
cmpsb
xor
movsb
scas
push
mov
insl
lcall
fwait
sbb
xchg
clc
outsb
add
or
sar
ret
fwait
stos
push
dec
out
mov
cmp
sub
adc
and
repz
mov
mov
scas
ds
repz
or
scas
sbb
jnp
jnp
cmp
movsb
push
sbb
jmp
and
add
add
add
jns
shrb
mov
iret
mov
mov
adc
ret
mov
sub
sbb
arpl
pop
addr16
dec
out
imul
cld
cmc
push
sub
into
sbb
add
cmp
outsb
aaa
cwtl
adc
jg
pop
cmp
mov
adc
or
inc
lods
pushf
pop
pop
scas
cld
push
scas
inc
add
pushf
push
ljmp
and
mov
incl
std
fcomps
xor
add
jbe
in
fildl
ljmp
jns
test
jo
lahf
cmpsb
fstps
pop
inc
dec
pop
and
mov
inc
and
jnp
mov
mov
cmp
add
push
mov
sub
loop
xchg
cmova
gs
loop
sarl
lea
sbb
outsl
mov
jno
lock
jle
sbb
mov
adc
outsl
lret
mov
out
jmp
xor
add
add
add
push
mov
pushf
inc
push
xor
dec
mov
cmp
imul
popa
add
js
dec
cmp
aad
cld
dec
das
or
mov
sahf
loop,pt
lret
sub
fdiv
mov
xchg
push
subb
cwtl
in
aam
scas
jl
dec
pop
mov
imulb
mov
xor
pop
dec
pop
mov
imul
out
mull
loopne
dec
loope
mov
push
call
les
fstpt
sbb
dec
pop
and
lret
jp
jl
filds
iret
or
or
mov
push
lea
fdivr
shrb
sbb
ljmp
jmp
pusha
into
gs
ljmp
movl
sbb
outsl
cmp
adc
or
sub
fsts
jns
ret
xchg
fcmovne
arpl
lods
cmpsl
mov
dec
sbb
and
das
cmp
lods
repz
mov
mov
push
and
inc
add
add
add
inc
aad
jne
mov
add
dec
cs
fnstenv
dec
mov
push
stos
push
jl
sbb
or
add
ss
xchg
cltd
cwtl
leave
loope
push
push
dec
pop
xchg
data16
iret
jbe
es
xchg
mov
jne
popa
sub
repz
outsb
pop
rcrb
fsubrl
mov
cli
lahf
mov
repnz
into
stos
pop
sarb
push
inc
scas
into
jge
fidivs
push
out
ret
sub
shlb
lods
movsl
imul
dec
xchg
out
imul
movsl
in
subl
pusha
mov
add
incl
fisubrl
loopne
xchg
loope
sbb
jp
gs
loopne
imul
or
cltd
xor
fbstp
push
add
fistpll
adc
test
loop
mov
lea
pop
mov
fwait
mov
mov
aas
daa
push
cld
push
std
jmp
dec
push
jg
addr16
add
add
add
dec
das
rcl
add
js
loopne
dec
sbb
imul
push
ljmp
pop
jne
jp
and
jle
lahf
cmp
mov
inc
cs
sub
das
jg
push
daa
call
or
cli
inc
inc
int3
leave
pusha
or
clc
int
imull
and
ss
adc
mov
cmp
or
in
nop
dec
add
shll
xor
push
jb
cmc
hlt
jne
and
out
sahf
dec
lods
in
adc
jecxz
and
sbb
pushf
xor
rol
push
add
xor
pushf
stc
mov
or
shll
enter
mov
push
add
mov
stos
mov
xchg
or
mov
pop
in
jnp
dec
inc
into
pop
mov
jg
stos
jecxz
or
movzwl
add
or
imul
mov
push
mov
mov
pop
jb
cmpsb
popf
mov
sti
jne
xor
add
dec
push
add
sbb
dec
push
out
aad
push
lds
add
add
add
mov
dec
dec
cmpsb
lahf
mov
fstpt
jo
jnp
sbb
mov
stos
xor
fildll
xor
cmp
test
xor
jo
and
mov
aam
mov
pop
ss
sbb
adc
aam
cmp
sahf
inc
mov
int
mov
inc
add
jge
inc
das
sbbl
ret
push
cltd
push
jns
sub
je
or
push
ds
inc
je
das
ret
popf
jle
ffreep
add
or
jg
scas
add
sti
dec
cmpsl
pop
insl
ljmp
mulb
mov
mov
fisttpll
sbb
lret
and
test
push
je
adc
sbb
jns
push
das
sub
outsb
insb
call
dec
jmp
ds
mov
testl
clc
and
adc
add
add
idivl
or
cmp
and
add
add
mov
or
ficompl
or
push
repnz
fdivrl
and
mov
sub
add
les
aaa
roll
lahf
sub
inc
mov
pop
les
dec
push
add
push
jne
enter
jmp
push
xchg
adc
inc
cmp
in
lds
lret
mov
xor
or
fsubl
mov
pop
push
add
stc
out
mov
loope
xchg
nop
aas
aam
shll
inc
sbb
dec
push
out
mov
jnp
dec
push
out
gs
jbe
and
lock
pop
bound
add
sarl
xchg
xor
xor
xor
ja
stc
mov
leave
cmp
ds
lds
sbb
mov
lahf
out
stos
mov
jb
and
pop
sub
sub
jle
pushf
std
push
aam
sahf
mov
ja
jg
xchg
orl
add
add
add
push
adc
dec
mov
mov
inc
push
cltd
jbe
xor
pop
sub
repnz
ret
enter
sbb
lret
inc
in
movsl
lret
xchg
cli
fisubl
pushl
cld
lods
xchg
aam
nop
xchg
scas
xchg
jnp
pushf
iret
insl
cs
imul
mov
dec
or
loope
jmp
and
js
jb
mov
xor
bswap
scas
sbb
jg
icebp
jle
add
mov
jge
add
cmp
daa
and
pop
dec
dec
mov
sub
test
pop
shr
cld
shrb
add
setno
cld
or
push
sbb
and
cmpsb
cmc
in
jnp
lahf
inc
and
movsl
cld
lret
inc
or
pop
push
xchg
xor
hlt
test
sbb
aad
aam
inc
xchg
push
dec
js
imul
and
clc
and
dec
lret
jmp
imul
aaa
je
sbb
cmp
add
add
add
pop
mov
push
push
cmpsb
ss
cmp
jmp
call
mov
jae
pop
jecxz
push
int3
pop
pusha
pop
jno
pop
test
jnp
fidivrs
gs
push
stos
cwtl
rcl
xchg
xchg
or
xchg
inc
pop
cvtdq2ps
and
icebp
pop
xor
test
pop
insb
mov
mov
clc
cmp
gs
cli
je
call
faddp
in
push
insl
fbld
pop
pop
xor
push
mov
cmp
daa
loope
add
push
xchg
xchg
into
pop
loop
std
cmpsl
push
loope
cmp
outsb
inc
adc
int
dec
jo
xchg
push
sub
aam
iret
lret
jge
jne
sub
mov
mov
stos
pop
idivl
mov
mov
cld
jmp
adc
cwtl
stos
leave
or
fistpll
int
enter
test
jae
pushf
jmp
lcall
add
lds
cmc
cwtl
xchg
push
sub
adc
add
add
add
mov
mov
stc
sti
cmp
je
xor
cwtl
xchg
jge
dec
pmulhuw
push
ror
pop
hlt
xor
div
push
add
jecxz
out
fcmovnbe
out
fiadds
jl
frstor
lret
out
fidivrl
fdivr
into
movsb
int
xor
pop
inc
jbe
cmp
movsb
mov
aam
push
ret
mov
sbb
sti
add
dec
lods
jns
push
and
xchg
mov
dec
insb
test
rorl
stos
sbbb
shl
add
push
adc
fisubrl
mov
dec
sarl
inc
mov
movsl
jb
in
stc
push
adcl
test
jns
movsb
cmp
inc
adc
xchg
sti
or
pop
data16
das
add
jne
jmp
mov
mov
cmp
sub
or
add
ret
adc
mov
test
sub
pop
subl
pop
adc
xor
xor
popl
add
add
jns
xor
jg
std
adc
add
add
add
push
js
popa
mov
inc
jo
push
jp
sar
das
or
adc
adc
stos
fwait
aaa
fs
movsl
pop
cltd
cmp
xor
mov
jmp
ret
add
cli
mov
imul
bound
push
and
jg
call
loop
stc
icebp
pop
sbb
mov
fsubrl
cmc
push
mov
cltd
std
adc
out
outsl
lds
jle
repnz
shrb
movsb
sbb
in
sub
popf
push
cmp
clc
cltd
mov
xchg
sbb
jl
aas
inc
imul
sub
dec
mov
lahf
sbb
cmp
ljmp
rcl
jg
std
xor
imul
push
ret
cmpb
int
cmc
mov
pop
pop
lds
lock
lret
cs
xlat
and
jp
and
cs
sti
mov
cmp
mov
cmpsl
ror
mov
cmp
inc
inc
adcl
add
add
ret
jg
decl
rol
xor
add
add
add
mov
test
jl
pop
loopne
pop
mov
sub
sub
cmpsb
pop
outsb
mov
fucomip
mov
je
adc
push
enter
xchg
outsl
jae
add
je
jo
clc
jnp
pop
subl
lahf
das
mov
mov
repnz
add
inc
lock
push
aas
stos
mov
pop
mov
mov
push
push
cmp
jp
in
mov
cmc
std
cmp
sbbb
xchg
lock
les
inc
fisubrl
cmp
mov
les
mov
add
mov
out
int3
pop
push
les
lret
call
adc
sbb
xlat
fsubr
jecxz
out
jno
mov
loope
mov
and
imul
pop
flds
or
loope
inc
loopne
jmp
int
jle
lds
std
adc
mov
out
aad
shll
add
add
add
int3
xor
mov
xchg
insb
mov
gs
into
and
mov
add
aaa
xor
arpl
out
jl
mov
dec
pushf
fdivl
sbb
xor
out
testl
sbb
lock
push
leave
or
cmp
mov
mov
dec
scas
pop
push
mov
in
icebp
cld
aad
mov
lock
cs
cmp
add
sbb
out
jb
and
std
addr16
push
cmp
jne
sbb
add
cld
lcall
outsb
jmp
dec
jle
pop
jge
push
arpl
shrb
jl
dec
fsubl
add
loop
add
and
aaa
adc
icebp
mov
test
inc
jmp
enter
fnstenv
adc
imul
xchg
lods
jmp
ja
mov
fs
push
jmp
cmp
add
add
hlt
gs
dec
adc
push
push
addr16
add
add
add
xchg
push
xchg
xor
cli
pop
addl
out
jge
jae
inc
int3
out
aaa
jecxz
ds
shll
test
test
adc
test
cltd
ds
lock
outsb
les
outsb
mov
xor
push
call
xor
cmp
pop
test
jae
xchg
mov
fwait
movsb
jmp
mov
pop
sti
push
sub
bound
std
aaa
xchg
mov
or
enter
scas
and
jmp
inc
pop
aas
test
cmpsb
pop
rcrl
scas
add
mov
out
lret
stos
int
jbe
les
sbb
sbb
mov
push
sysret
mov
ret
mov
std
loope
adc
sar
inc
mov
push
clc
dec
or
pushf
popa
mov
xchg
adc
and
fnsave
mov
mov
add
add
aas
gs
pop
repnz
dec
add
add
add
loop
lahf
stc
je
fstpl
xlat
in
xchg
push
xor
shrl
fwait
aam
into
or
scas
ljmp
pop
fsubl
insl
xchg
out
inc
inc
test
fldenv
jbe
adc
repnz
sub
popf
jmp
mov
scas
sbb
data16
daa
insl
mov
aas
xchg
adc
dec
cwtl
in
jnp
rolb
sbbl
mov
insb
popf
xlat
mov
mov
push
add
cmp
jmp
bound
push
pop
mov
mov
or
xchg
sahf
mov
leave
and
sub
inc
xchg
idiv
in
and
and
test
push
rcrl
push
dec
mov
xchg
lahf
aas
xor
add
cmp
divb
jo
inc
dec
xor
inc
mov
jp
mov
out
fisttpll
lock
or
add
add
add
xor
js
cld
mov
sub
xchg
mov
fidivs
popf
push
adc
jmp
add
jp
jno
xlat
xchg
inc
mov
insb
bound
sub
fdivl
call
push
ret
lods
add
dec
add
in
add
in
subb
xchg
out
cmp
jmp
xchg
test
xor
dec
cmp
xor
mov
and
xchg
push
fdivl
pop
pop
fnstcw
sub
pop
cmpsb
pop
adc
pop
cmpsl
cltd
movsl
pop
mov
sbb
les
and
xor
mov
repz
sahf
cli
inc
inc
sub
test
ljmp
xor
inc
mov
rorb
lea
scas
or
clc
mov
dec
mov
xchg
xchg
xor
sub
stos
dec
lds
cmp
fisubrl
add
add
mov
ljmp
add
add
add
and
jae
dec
inc
or
cmp
sbb
pop
mov
and
pop
data16
ss
repnz
ss
test
add
mov
nop
pop
mov
std
js
pop
movl
fstpl
inc
push
imul
jp
mov
sub
inc
lds
mov
mov
mov
mov
cmpsl
and
sti
xor
stc
sti
or
jae
lea
add
pop
mov
dec
jl
adc
iret
xchg
out
and
subl
sub
cwtl
out
pop
inc
iret
ljmp
out
ja
ss
js
adc
leave
pop
aas
mov
loop
test
or
push
add
mov
lcall
xor
push
add
out
sbb
jo
into
sub
fidivrs
inc
push
sbb
jmpw
fnstcw
jo
sahf
jb
aam
ljmp
add
notl
mov
sub
jg
adc
jbe
shrb
or
lar
stc
sar
push
push
jnp
out
or
xor
xchg
out
insl
jae
mov
sbb
inc
dec
into
fiaddl
out
push
dec
or
ds
adc
and
push
mov
shlb
dec
add
movsb
xchg
push
aam
mov
arpl
jns
xor
loop
stos
jns
add
jmp
mov
jp
leave
mov
je
pop
xchg
dec
mov
pop
sub
pop
pop
insb
dec
and
ja
xor
cmp
imul
shl
xlat
push
shlw
shr
mov
cmp
mov
push
popf
or
pop
arpl
add
xor
fs
sbb
sbb
xor
scas
filds
sub
dec
out
lret
fwait
push
and
aad
xchg
lds
cmp
imul
out
mov
mov
xchg
arpl
add
add
dec
jp
fstpt
inc
outsl
sbb
aas
mull
outsb
imul
mov
cltd
lahf
lea
dec
in
pusha
test
call
add
mov
cmpsb
adc
ja
test
dec
in
leave
push
xchg
rorl
scas
jb
inc
movsl
imul
mov
filds
cmp
push
clc
adc
add
push
int
jge
scas
je
cld
and
mov
fdivr
and
pop
sub
fdivrs
mov
and
in
mov
pop
movsl
mov
mov
sub
dec
and
inc
pop
push
loopne
cmp
pop
lods
loop
cmc
jp
repz
jg
cmp
cli
rcl
mov
adc
xchg
mov
ror
ds
xor
daa
repz
call
mov
sbb
shll
in
in
or
mov
stos
aad
lods
fcomps
add
js
add
dec
stc
mov
ljmp
addr16
add
add
add
jae
lods
ljmp
insl
jns
dec
pop
addr16
stos
test
popf
mov
rclb
cwtl
push
sbb
fdiv
add
addr16
pop
sbb
aam
xchg
sbb
shll
sbb
inc
int3
scas
movsb
outsl
sahf
rclb
cltd
cmp
xchg
xchg
cmc
push
and
ret
push
flds
aaa
mov
lahf
call
hlt
sbbb
xchg
repz
xchg
cmp
sarl
push
inc
dec
inc
fsubrl
cmp
out
loopne
aaa
pop
jae
pusha
mov
push
mov
in
xor
sbb
sahf
nop
xchg
xor
cltd
or
call
cmp
hlt
popa
sahf
rcrb
add
movsl
or
sbb
pop
jo
mov
lret
sti
out
add
mov
mov
outsb
stos
and
out
mov
mov
imul
push
and
loopne
sub
push
mov
jne
and
xchg
cmp
jle
jg
cld
lcall
lret
add
add
add
cmp
std
ljmp
icebp
xchg
rorb
add
dec
gs
adc
adc
es
push
popa
data16
ja
cmp
jmp
pop
mov
adc
cmp
jge
pusha
rorb
in
mov
movsb
rorb
push
fisttpl
cmpsb
movsb
in
fadds
sbb
dec
lock
push
aas
out
setge
mov
inc
lret
insb
cmc
push
sti
loope
push
mov
decb
dec
cmp
adc
gs
mov
es
add
inc
sbb
hlt
sbb
mov
adc
mov
leave
inc
test
mov
xchg
sbb
iret
ds
jge
pop
jg
rcrb
xor
subb
pop
out
and
in
jle
push
subb
fbld
adc
rcrl
popa
jl
xchg
divl
sub
js
imul
idivb
repz
xchg
add
mov
xchg
mov
pop
cwtl
daa
lds
add
add
jp
inc
dec
test
cld
js
sahf
repz
iret
leave
fcmovnu
xor
cltd
pop
ja
ljmp
mov
jl
adc
pop
pop
cli
loope
sbb
xchg
cmp
pop
in
lea
push
popf
cmp
pop
xor
insl
cmp
mov
push
push
and
sbbb
repnz
dec
in
popa
mov
push
insb
sar
mov
sbb
movsl
sbb
movl
cltd
lea
shll
sbb
and
xchg
popa
out
and
sbb
inc
mov
mov
out
push
mov
cmp
dec
mov
mov
push
mov
ror
call
jg
push
cmp
dec
cwtl
out
adc
push
pop
mov
jl
mov
inc
dec
jecxz
sub
repnz
mov
add
or
mov
and
adc
addr16
add
add
add
rcrl
into
inc
cli
pop
dec
icebp
fistl
jmp
mov
dec
cs
leave
into
cli
inc
int3
scas
push
lret
stos
cmpsl
pop
inc
rcll
push
mov
pop
cmp
jne
inc
sbb
mov
inc
add
jge
sbbb
ja
cld
jo
add
cld
leave
sbb
aas
inc
daa
xchg
notl
mov
mov
mov
test
and
sbb
cltd
push
push
enter
in
xchg
lret
dec
xlat
xor
adc
in
jo
sbb
pop
jbe
pop
cmpb
pushf
jg
insl
pushl
mov
fwait
lock
pop
push
add
mov
xlat
push
xchg
inc
jle
push
push
mov
imul
loop
in
in
neg
shrl
cmp
xchg
push
fnstenv
dec
leave
and
mov
ret
add
fsubrl
mov
out
cmp
ret
or
sbb
push
add
add
add
jg
hlt
std
and
push
outsl
adc
jge
mov
lret
push
out
xchg
add
movsl
add
mov
xchg
btr
mov
lret
lahf
and
dec
cmp
mov
push
insb
rorl
lahf
mov
cld
out
and
cmpsb
in
ljmp
das
mov
push
js
mov
movsl
sbb
aas
lods
mov
and
mov
das
enter
jbe
nop
pop
insl
sub
push
jae
jns
mov
lret
xor
sub
inc
jge
cli
mov
and
add
out
push
add
mov
mov
lea
in
hlt
mov
mov
cs
bnd
jae
add
or
sub
out
inc
test
dec
xor
nop
mov
cli
pop
ljmp
sbb
mov
mov
or
push
shll
out
pop
pop
pushf
push
jp
pop
mulb
add
add
add
int3
outsl
test
iret
push
in
addr16
sbb
leave
andl
mov
xorl
repz
inc
arpl
addl
mov
xor
je
test
gs
sub
xchg
popf
sbb
ja
ss
sti
ja
xchg
lea
inc
jne
scas
cmp
shl
stos
push
or
cmp
lods
push
pop
xchg
xor
nop
mov
stos
pop
xchg
pop
nop
les
dec
inc
lods
sub
repz
mov
jb
in
mov
adc
insb
lea
enter
dec
int3
jae
mov
dec
jl
sbb
and
push
mov
and
out
loope
mov
rclb
es
cmp
ret
aam
insl
cmpsl
shlb
dec
push
mov
loopne
pop
inc
dec
or
movsb
or
test
arpl
push
inc
into
cmpl
add
add
out
lcall
hlt
mov
shll
add
add
add
sub
pop
sti
pusha
stos
sbb
stc
xchg
pop
adc
pop
out
or
sbb
out
cltd
push
inc
ljmp
movsl
rcr
in
int
dec
mov
cs
cmc
push
ficompl
dec
cmpsl
pop
mov
aas
les
les
imul
mov
aam
sub
addr16
push
lcall
test
push
pusha
jae
sahf
loopne
inc
dec
scas
mov
lds
sub
loopne
mov
arpl
bound
das
and
push
push
movsb
cltd
cs
fldenv
insl
cwtl
adc
shll
rcll
scas
xor
test
and
inc
lahf
outsl
mov
enter
mov
fstpl
sub
in
jmp
cmc
das
scas
pop
es
adc
or
dec
mov
fnsave
loop
fwait
inc
adc
out
jae
mov
out
adc
add
bound
imul
ljmp
add
add
inc
inc
pop
pop
add
and
cwtl
cmc
pop
mov
inc
call
or
mov
ss
in
stc
cwtl
mov
sarl
fninit
inc
inc
popa
in
call
clc
inc
cld
add
stos
in
pop
aas
ficomps
scas
push
dec
adc
data16
mov
and
pushf
pop
lods
mov
push
or
pusha
lods
stc
bound
xchg
test
add
xchg
jle
hlt
jge
cmpsl
out
ds
pop
mov
int
push
mov
outsb
call
cmp
fwait
mov
jo
pushf
xchg
rolb
dec
jl
mov
nop
and
cmp
pop
int3
stos
js
ret
and
lret
mov
iret
arpl
adc
insl
imul
test
in
pop
mov
mov
mov
in
push
fisubrs
mov
out
fnsave
xchg
lret
jno
out
rolb
add
add
fwait
cmp
stos
sarb
addr16
add
add
add
mov
xchg
ja
mov
mov
cli
fxch
inc
scas
add
mov
sbb
mov
pop
rcll
cmp
into
fisubrs
push
scas
out
aaa
push
push
push
pusha
mov
mov
test
xchg
test
loopne
adcl
ja
aad
fs
int3
pop
lods
repnz
mov
mov
lret
sub
jnp
mov
mov
xor
mov
call
add
sbb
inc
cmc
jae
inc
mov
test
dec
sbb
adc
int
arpl
mov
cli
testl
scas
addb
jns
dec
mov
scas
jne
inc
sub
cld
in
lods
fcmovnbe
mov
jno
mov
or
aaa
pop
loop
pop
push
adc
mov
imul
clc
roll
inc
lahf
repnz
push
inc
jo
scas
cmp
or
movsb
xor
mov
inc
push
clc
mov
and
hlt
ljmp
add
add
add
jecxz
lahf
das
imul
inc
mov
mov
dec
add
scas
ss
sahf
inc
sub
lock
mov
jbe
shll
movsl
clc
mov
lret
enter
cmpsl
in
aas
gs
inc
jns
mov
dec
shlb
addb
into
adc
jno
sub
aam
push
rcr
push
mull
stos
iret
sub
xor
jmp
inc
pop
pusha
popf
aam
repnz
dec
sub
mov
or
mov
scas
lret
cwtl
jg
inc
mov
lret
fsub
popf
bound
flds
dec
orb
arpl
xchg
mulb
xor
cli
fldcw
std
dec
mov
pop
cmp
mov
xlat
push
cltd
sub
fidivrs
aaa
cmp
pusha
xchg
xlat
outsl
or
sahf
adc
pop
jns
ljmp
adcl
das
jmp
xor
ds
pop
in
ljmp
add
add
shr
mov
dec
sarb
add
add
add
mov
cmpsl
js
dec
insl
xchg
loope
test
dec
inc
stos
outsb
sahf
imul
dec
mov
jns
xchg
sub
and
push
hlt
add
push
pop
or
jp
jo
loope
dec
fistl
dec
push
hlt
cmp
push
in
mov
cwtl
and
lds
outsb
arpl
cltd
jmp
push
mov
add
mov
jbe
cmp
pop
dec
lret
xor
mov
add
bound
fiadds
movsb
stos
inc
mov
div
jmp
jmp
mov
mov
aad
pop
rorb
test
pop
mov
ror
lret
and
mov
les
adc
lcall
filds
loope
mov
fwait
into
bound
add
sbb
outsb
in
cmc
lock
pop
push
push
xor
sub
jmp
test
test
or
fdivs
in
mov
test
add
add
add
adc
setle
xor
ja
or
jge
movsb
inc
call
xchg
cs
mov
push
pop
lcall
pop
icebp
in
outsb
scas
test
loop
jg
cltd
xor
int
js
frstor
pop
cmp
sbbb
fdiv
dec
addl
xor
ja,pn
arpl
ja,pt
bswap
loop
scas
leave
xchg
xchg
mov
in
push
rol
jle
test
rol
fsub
jb
jmp
jae
ja
mul
and
sub
sub
andl
inc
pop
sbb
push
mov
lock
and
dec
xlat
or
inc
push
std
xchg
mov
cmp
cmp
data16
dec
dec
jno
adc
pusha
mov
mov
nop
aam
imul
addr16
and
es
sbb
pop
test
or
std
das
pop
cmp
or
and
pop
jb
cmp
mov
add
mov
pusha
hlt
out
or
addr16
add
add
add
sahf
arpl
push
xchg
sub
xchg
cmpsl
ret
roll
in
mov
into
xchg
lahf
aaa
dec
xchg
sti
sti
loope
das
iret
addr16
pushl
jp
and
cmpsb
call
idivl
inc
xor
addb
xchg
inc
xchg
loope
sbb
sbb
scas
or
sub
xor
nop
dec
jg
clc
mov
add
adc
mov
dec
fdiv
sub
push
or
lods
cmp
sarb
mov
or
mov
ljmp
pushf
lret
mov
jne
pop
and
and
dec
shrb
add
fadds
or
or
sbb
cld
std
mov
arpl
int
int3
adc
and
mov
xor
sahf
or
dec
rolb
cs
inc
and
addb
cmpsl
scas
filds
fsubl
mov
ja
mov
pop
scas
addr16
add
add
add
out
out
scas
insb
cmp
mov
dec
cmp
adc
add
add
fiaddl
dec
cwtl
cmpl
inc
call
jo
outsl
ja
test
sti
movsb
xchg
adc
xchg
mov
mov
sbbb
jmp
and
out
dec
es
nop
push
sbb
jmp
push
shlb
sub
cmp
mov
inc
xchg
xchg
hlt
or
rorb
sbb
lds
push
sub
push
and
iret
fsts
fstpl
push
xchg
add
mov
mov
and
test
mov
outsl
jno
or
les
or
fs
jb
pushf
pop
sahf
mov
insl
ret
repnz
mov
inc
pusha
pop
das
inc
in
push
jb
out
adc
mov
sub
dec
jae
and
inc
sbb
test
sub
pop
jle
arpl
add
add
xor
xlat
out
cld
loope
pop
xchg
add
add
add
loop
adc
push
outsl
ret
fwait
adc
std
push
out
lcall
pusha
cwtl
ror
cwtl
mov
xchg
pop
lret
cld
notb
fisttpl
jno
sbb
sub
fwait
adc
stos
mov
arpl
inc
pop
xchg
test
call
jle
mov
stos
xchg
push
cmpsb
adc
and
loope
jae
push
cmp
dec
dec
push
in
int
or
jns
sub
adc
or
cmc
imul
addb
mov
lock
test
fstps
adc
sbb
addl
imul
dec
jle
divl
mov
popa
test
stc
pop
inc
fwait
or
hlt
add
dec
xor
adc
repnz
out
inc
faddl
stos
pop
pushf
push
icebp
adcb
sub
cmp
pop
clc
mov
jnp
out
mov
rcrb
add
mov
mov
in
push
dec
addr16
add
add
add
mov
adc
test
add
cmp
xchg
jb
scas
add
in
cs
xchg
xor
dec
xor
inc
cmpsl
inc
inc
out
lret
dec
sbb
jle
xchg
addr16
test
subl
push
jne
popa
enter
fildl
adc
mov
in
mov
std
and
xchg
stos
jnp
xor
repnz
mov
sbb
xor
aaa
mov
push
out
mov
stos
inc
negl
and
movsb
lods
mov
lahf
lods
loopne
xor
icebp
and
das
xchg
stos
add
fimull
rorb
das
inc
xchg
xor
lcall
dec
outsl
add
cltd
jbe
pop
xor
xchg
cmp
jno
and
pop
cwtl
and
mov
fcom
inc
push
dec
pushf
xor
xchg
xor
inc
shlb
mov
fidivs
cwtl
push
lret
rcrl
mov
daa
movsl
insb
cmp
imul
out
into
push
push
inc
lahf
mov
addr16
add
add
add
into
dec
fs
sar
cmp
pop
dec
pop
adc
push
inc
sbb
xor
clc
mov
adc
pushl
in
xor
mov
pop
das
mov
mov
aam
sti
and
adc
sbb
push
loopne
xchg
jb
inc
sub
loop
jbe
and
in
adc
lods
les
fcoml
pop
test
lret
mov
test
sahf
ljmp
and
sub
fcomi
lret
mov
sar
insl
jne
xor
je
out
pop
popf
dec
cmc
jp
lahf
pop
pop
dec
mov
jb
mov
aad
scas
dec
inc
push
pop
mov
testb
hlt
push
mov
and
cmp
sti
add
ret
xchg
adc
jne
cmp
push
stos
popf
je
and
cltd
repz
push
sub
int
cmp
add
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
bound
imul
fisubs
cmovnp
xchg
orl
sub
into
pop
pushf
mov
sbb
inc
jge
sbb
movsl
inc
pop
sub
inc
mov
pop
sub
mov
or
xor
xor
mov
mov
push
cmpsl
cmpl
cli
or
push
insl
xor
pop
sub
nop
cmp
sti
sbb
test
jl
ficompl
aas
jnp
xchg
ljmp
mov
mov
cmp
push
sarl
inc
out
movsl
adc
xor
sbb
stc
and
xor
cli
sbb
test
sub
push
filds
add
stos
fwait
cld
ret
xchg
shlb
ja
pop
lods
lahf
pop
pop
insl
insl
cli
loop
lods
inc
push
cmp
loopne
lret
and
push
int3
loopne
mov
pop
cmp
sub
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
push
sar
fdivr
movsb
jge
cmp
popa
cmp
inc
imul
xor
je
mul
add
movsl
push
dec
aas
mov
jl
loop
notl
cmpsl
adc
clc
sub
nop
jbe
cld
in
cmp
pop
mov
fmul
inc
rep
mov
inc
sub
cmc
pop
push
jne
fwait
jp
pop
ret
mov
test
stos
lret
mov
in
push
mov
xor
or
jle
or
mov
andl
mov
adc
sarl
dec
cli
subl
pusha
mov
test
xchg
mov
and
std
sbb
mov
iret
jle
lods
mov
daa
cmpsb
pop
xchg
loopne
cwtl
cmpb
sbb
inc
push
cmpsb
push
inc
add
mov
xor
loop
sub
pop
or
rorl
cltd
mov
lock
xor
lret
lret
sahf
pop
testl
adc
pop
add
add
add
clc
inc
xor
xorl
jbe
xor
aas
mov
inc
xor
pop
dec
mov
aas
hlt
or
mov
aaa
in
scas
aaa
cwtl
movl
subl
cli
test
sbb
sarl
xchg
pop
adc
repz
adc
dec
xchg
fisttps
push
popf
movsb
adc
insl
lds
cli
gs
xor
pop
std
push
jmp
or
sub
sti
test
arpl
sbb
lret
mov
pop
cmp
stos
and
cmpsl
pop
or
xchg
mov
and
xchg
sub
int3
mov
es
ss
cmp
jge
mov
xchg
std
jno
in
arpl
push
mov
sub
push
test
loope
rcrb
ret
stc
push
cmp
pushw
ret
icebp
dec
cmp
add
pop
mov
fstps
or
add
add
add
jne
out
or
mov
iret
popa
mov
mov
push
cmp
push
mov
stos
mov
rcpps
lods
ja
jae
sbb
inc
rolb
jge
call
std
bound
insl
adcb
sub
mov
mov
je,pn
mov
nop
jno
invd
sub
lods
lret
shlb
adc
sbb
bound
inc
mov
jbe
scas
fdivl
cmc
roll
in
jg
jae
adc
inc
movsb
incb
dec
inc
inc
jae
hlt
pop
inc
inc
xchg
insl
adc
push
inc
pop
shrl
cli
pop
sub
cltd
shrb
sbbb
hlt
ret
xchg
subl
lds
jno
jo
add
push
push
pop
dec
rcrb
sub
and
inc
mov
int
imull
in
pop
sub
test
out
jns
repnz
movsb
jle
arpl
fisttps
add
add
add
test
fiaddl
dec
adc
jb
idiv
cmpsb
mov
inc
or
mov
push
movsb
int
xor
inc
xchg
and
out
push
loope
pop
mov
cmp
mov
mov
iret
and
jmp
mov
sbb
sbb
jbe
test
ror
mov
movsb
mov
mov
mov
pop
faddl
pusha
cmpsb
imul
inc
out
aas
repnz
sahf
nop
enter
sub
pop
sbb
imul
pushf
cmp
insb
jmp
sbb
repnz
and
pop
es
cli
cltd
rorl
mov
jle
pop
adc
mov
icebp
mov
push
push
mov
les
pop
loope
das
into
pop
cltd
test
negb
mov
inc
mov
add
pop
stc
fcomps
lods
cmp
mov
inc
test
add
add
jmp
sub
xchg
jae
lahf
addr16
add
add
cs
inc
pop
adc
in
adc
fwait
jle
lock
enter
mov
adc
adc
jb
fsubl
into
dec
inc
bound
daa
popa
fwait
shlb
xlat
adc
mov
test
je
push
push
test
subb
xchg
out
pop
mov
mov
fs
inc
xor
mov
shrb
mov
nop
ret
popa
loop
aaa
addr16
stc
cltd
xor
pop
negl
xchg
xchg
xor
shl
out
mov
popa
pushl
iret
inc
dec
pop
cmp
pusha
mov
pushf
jb
pop
jg
in
mov
jb
lods
aaa
mov
mov
cmp
js
dec
adc
dec
pushf
cmp
addr16
nop
and
cmc
sbb
sahf
into
insl
pop
arpl
pop
loop
ljmp
mov
icebp
mov
cmp
add
add
mov
fnstenv
fcmovnbe
pushf
push
addr16
add
arpl
jmp
and
push
mov
push
rorb
push
or
mov
sti
dec
dec
mov
pop
inc
pop
arpl
mov
jmp
leave
adc
rorl
sub
dec
lahf
pavgw
jbe
sub
je
push
mov
mov
movsl
sbb
sub
push
sarb
or
jmp
pop
inc
cmc
jmp
sbb
iret
outsb
mov
inc
jno
in
dec
stos
jecxz
pop
aas
push
sub
bound
icebp
mov
pop
xchg
shl
mov
sarl
adc
jle
sbb
es
test
ret
inc
sub
insb
xchg
mov
rcrl
popa
loopne
loope
in
loope
sbb
xchg
sub
stos
popf
ja
popf
popa
fnstsw
shlb
sbb
sub
ret
les
icebp
mov
sbb
push
js
add
add
cld
je
jbe
jns
sbb
ret
dec
out
imul
add
adc
enter
ret
dec
repz
into
inc
pop
and
mov
movsb
jnp
and
mov
ja
sub
bswap
mov
pop
aaa
rorb
aam
test
int3
aaa
xchg
xor
add
lret
cmp
jmp
cmp
mov
mov
xlat
or
shrb
ja
adc
cmp
pop
repnz
std
or
sub
jle
jo
xcrypt-cfb
cmpsl
popa
dec
or
push
movsb
frstor
jg
inc
lods
xchg
enter
mov
add
cmp
inc
int3
push
movsl
adcl
or
stos
out
in
aas
jbe
mov
dec
mov
cli
add
push
icebp
mov
mov
icebp
jo
push
ret
shr
stos
dec
fcoms
push
scas
cld
fucomp
in
push
xchg
int
jp
mov
hlt
fmul
push
gs
add
add
cltd
jmp
fildl
or
pop
and
push
add
add
add
out
push
or
add
insl
pop
test
loope
sbb
cmp
xchg
fnsave
outsl
sahf
popa
mov
aas
sbb
call
push
xchg
pop
aaa
inc
outsl
and
xchg
mov
jge
adc
jno
mov
mov
inc
xchg
ss
popf
out
push
ds
or
jbe
push
addl
jge
push
arpl
and
fsubs
movsl
mov
jp
daa
pop
dec
jmp
add
frstor
jmp
test
cmp
inc
jns
shrb
rclb
sbb
xor
loopne
mov
jp
mov
sbb
dec
dec
push
std
inc
adcb
out
cmp
stos
mov
icebp
mov
ss
mov
stc
mov
mov
push
jg
dec
xchg
dec
sub
movsb
xor
add
add
dec
mov
cli
ret
std
call
test
loope
cltd
pushf
into
popa
add
pop
sub
sub
bound
jb
adc
lods
sub
andb
mov
xor
test
pop
inc
jno
lret
sub
lds
cmp
cmp
add
push
lret
or
pop
jb
xchg
bound
imull
push
jb
test
cmp
inc
jo
mov
iret
push
dec
outsb
sub
mov
aas
addl
sbb
and
fcmovu
ljmp
jp
cmp
idivb
bound
lea
push
ret
imul
mov
xchg
adc
cmp
shlb
outsl
cmp
inc
outsl
xchg
cmp
je
addr16
mov
pop
aas
das
adc
mov
idivl
and
cli
fcoms
inc
add
nop
lods
xor
cs
je
js
add
iret
mov
fucomip
push
insb
xor
shrb
add
add
add
pop
ja
insb
mov
shrb
sahf
movsl
test
mov
jp
lds
imul
enter
fsubs
and
movsl
popf
pop
mov
mov
cmpb
shll
lods
push
dec
in
push
and
pop
ret
sub
inc
cmpsb
aas
sbb
fdivrs
addr16
pop
cld
fistpl
push
sarb
test
jne
xchg
mov
inc
hlt
movsl
jae
in
loop
sbb
testb
arpl
sbbb
cmp
outsl
js
test
cltd
xor
dec
jae
mov
xchg
aam
cli
pop
pop
test
adc
dec
add
pop
loope
xchg
sbb
and
pop
pop
sahf
cmp
scas
sbb
sar
xor
xchg
ljmp
jne
cs
pop
jmp
jbe
mov
jecxz
loop
fcoms
test
mov
in
imul
dec
out
iret
jmp
aas
in
push
data16
add
add
add
mov
xchg
icebp
cmp
sbb
jge
dec
dec
out
sbb
test
mov
xchg
fwait
adc
mov
aam
adc
pop
mov
in
mov
icebp
mov
ja
cwtl
adc
add
adc
call
mov
add
stc
mov
pop
lret
std
sub
cmp
inc
sahf
mov
xor
hlt
push
nop
mov
fiadds
lods
and
shlb
fcom
pop
cmp
mov
pop
inc
mov
iret
fcomp
cmpsl
enter
xor
push
test
fstps
push
mov
in
clc
in
movsl
cli
movb
stc
inc
sub
add
cmp
mov
sarb
sbb
sub
sbb
hlt
fwait
lea
shll
insl
inc
jle
loopne
in
adc
nop
sub
pushf
adc
push
or
lods
orl
or
dec
mov
adc
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
repnz
outsb
add
add
add
mov
push
jl
pop
mov
cs
pop
and
test
inc
dec
add
xor
or
mov
sub
outsl
jns
push
dec
jle
mov
pop
jb
adc
sbb
mov
cmc
add
movsl
js
jne
hlt
cmp
mov
cli
cwtl
fdivrp
je
aas
pushf
ljmp
mov
sub
xchg
xor
sahf
dec
add
fldt
loopne
dec
scas
mov
sbb
enter
les
or
adc
arpl
xor
arpl
loopne
adc
mov
sbbb
hlt
xor
mov
into
xchg
mov
stos
movl
jle
fisttps
sub
dec
in
sub
ljmp
aas
pop
xor
jbe
and
adc
cli
ret
pop
jecxz
jae
add
cmp
mov
xor
lods
in
lods
imul
neg
std
sub
dec
scas
or
outsl
add
add
add
push
adc
mov
cwtl
addr16
clc
dec
fisttpl
jne
mov
cmc
jmp
pop
jl
pop
inc
sub
and
aad
nop
or
ds
pop
sbb
mov
inc
stos
cs
xchg
fsts
or
mov
xchg
xor
rclb
mov
jecxz
mov
push
and
das
fdivrl
test
or
mov
lahf
xchg
int
adc
fwait
xchg
dec
and
dec
int3
xchg
xchg
or
insb
push
adc
adc
mov
ret
add
cld
mov
mov
mov
sbb
icebp
cmp
adc
scas
sub
cmpl
cmp
cmpsb
scas
in
xchg
adc
mov
push
or
test
mov
out
cmp
dec
mov
push
popf
es
popa
push
subb
in
push
mov
sub
lcall
add
add
cltd
jbe
and
gs
dec
sahf
mov
sbb
nop
ljmp
dec
push
sbb
fbstp
adc
push
mov
fwait
mov
inc
adc
mov
lahf
jne
jmp
repnz
or
xor
sub
lock
xor
push
shl
sub
mov
sbb
popf
push
push
xchg
repz
pop
pop
sbb
rcrl
ret
push
imul
and
sub
adc
sub
jne
outsl
add
xchg
loop
xor
cmp
sbb
in
scas
cmp
dec
adc
repnz
jecxz
int3
mov
out
not
lea
hlt
iret
dec
test
jno
daa
fldcw
dec
jg
xchg
outsl
sbb
or
dec
sarl
xchg
xlat
inc
orb
jne
lock
rcrb
icebp
fcompl
lcall
out
sbb
cmove
add
add
add
pop
mov
cmp
inc
and
in
push
mov
adc
movsb
add
inc
xor
mov
inc
sbb
jns
es
xlat
jl
cmpsl
aaa
add
push
imull
rcll
mov
fildll
popa
test
inc
aad
repz
lcall
add
push
sub
push
xchg
lock
dec
mov
jp
or
leave
popa
jo
loope
jecxz
ljmp
dec
mov
repz
insb
cmp
jecxz
out
fbstp
add
jbe
fcmovnb
lods
stc
sbb
mov
jmp
mov
out
jae
cmpsb
cmp
fmul
das
xor
sub
and
dec
cmp
xchg
sub
jle
mov
inc
inc
aas
cmp
xlat
push
frstor
data16
movsb
mov
pop
hlt
bound
aam
fistpll
adc
cmp
xchg
das
push
push
xchg
daa
sub
ja
mov
mov
add
add
add
lret
out
pop
movsl
es
cmp
les
adc
sub
arpl
xchg
je
test
dec
xchg
mov
and
xchg
push
xchg
inc
aam
and
jle
pop
ror
nop
pop
inc
les
jno
in
fisubs
jno
sbb
insb
aas
imul
push
push
add
lretw
add
pusha
xorb
xorl
insb
mov
das
xchg
in
roll
cmp
cmpsl
iret
lea
pop
cltd
sub
add
aad
mov
xor
pop
int
adc
ljmp
pop
dec
mov
lock
cli
push
push
movsl
out
push
into
test
xor
test
push
push
cmpsb
cmpsb
movsb
in
mov
mov
cli
pop
sub
add
mov
and
pop
iret
enter
outsb
cmp
cwtl
popa
pop
jno
xor
call
fsubrs
mov
push
lods
scas
jno
mov
sub
add
cmp
jnp
outsl
cmpsb
loopne
dec
mov
addr16
add
add
add
add
imul
mov
cmc
call
lret
jmp
mov
dec
push
pop
inc
push
adc
outsb
dec
jg
repnz
decl
xor
sub
fwait
push
out
jp
fcompl
mov
sbb
ss
push
daa
sbb
rol
movsb
les
lock
cwtl
push
rolb
xor
fwait
dec
lahf
add
mov
fadd
cmp
mov
cmpb
outsb
in
or
mov
dec
les
jle
cli
int
call
rcrl
mov
daa
push
stos
mulb
popa
pop
lea
rclb
push
fcmovu
nop
mov
sub
inc
test
or
scas
scas
outsl
outsb
push
mov
cld
adc
push
push
insl
mov
adc
fs
ficoms
ret
clc
jno
loopne
add
add
cli
xchg
jle
push
je
and
je
add
add
add
or
xor
cwtl
repz
lcall
inc
add
and
data16
ds
cld
push
lahf
push
or
pop
mov
or
mov
call
mov
cld
cmpsl
xchg
sbb
inc
movsl
enter
mov
nop
jnp
jg
sbb
ljmp
add
add
loopne
lods
imul
lea
cmp
call
pop
out
lock
mov
cs
adc
push
or
pop
fs
ja
xchg
sub
xlat
jge
int
jb
int3
or
adc
out
add
xchg
add
jnp
outsl
inc
pop
push
or
mov
mov
aam
lods
aad
std
or
enter
add
rorb
out
xchg
js
pop
add
mov
es
cmc
adc
xor
adc
sub
jg
das
pop
rorl
xor
mov
shrb
mov
xor
inc
aaa
dec
fwait
jnp
aad
sbb
dec
pushf
addr16
add
add
add
pop
divl
xchg
mov
popf
pop
lret
pop
or
mov
dec
cmpl
in
imul
call
xchg
lret
jo
xor
and
and
aas
mov
mov
jp
cli
pop
and
adc
lret
adc
sub
add
mov
or
adc
cltd
outsl
test
jp
aas
int3
out
pop
push
sub
notl
fidivrl
insl
jb
cmp
push
xchg
sbb
fcoms
gs
mov
sub
aad
repnz
mov
dec
jne
test
nop
ljmp
test
add
stos
dec
bound
push
andb
xor
push
mov
xchg
lcall
gs
mov
add
push
dec
fists
sub
xor
xor
inc
mov
es
dec
js
mov
std
mov
sub
jbe
add
add
add
sbb
repz
sbb
nop
xchg
mov
test
out
dec
loopne
shlb
adc
into
xlat
fisttpll
dec
mov
inc
mov
outsl
or
mov
cltd
adc
and
repnz
sbb
or
cmp
repz
lds
aad
add
cmp
inc
xor
pop
add
pop
icebp
mov
inc
repnz
add
shlb
std
andb
enter
mov
mov
add
and
mov
aaa
mov
or
jbe
cmp
dec
les
mov
ss
movsb
hlt
bound
cltd
test
sub
jg
scas
out
xor
push
xchg
cmp
repz
ds
inc
push
add
pop
ret
popf
into
xor
das
pop
add
insl
fucomip
jge
jbe,pn
bound
dec
clc
adcl
xchg
fisttps
mov
xor
add
add
in
mov
cmp
mov
jg
xchg
outsl
mov
and
pop
mov
outsb
pop
nop
inc
push
pop
fwait
or
imul
jp
push
sub
cmp
jecxz
test
loop
sbb
ss
insl
sub
dec
lcall
call
pusha
inc
mov
or
das
daa
aaa
dec
dec
push
loop
mov
xchg
xchg
divb
subl
adc
inc
pop
ret
lret
dec
cli
gs
push
xchg
bound
addl
xchg
dec
push
jb
filds
in
dec
les
mov
ja
sub
push
popf
icebp
inc
in
mov
dec
fs
jbe
fstpt
adc
cs
pusha
push
or
adc
lock
fmul
push
dec
fiaddl
pop
push
add
and
xchg
push
and
mov
popf
push
imul
jl
not
jl
inc
in
mov
mov
out
sub
sbb
js
add
add
add
cmpsl
int3
push
sub
popf
jne
xor
mov
syscall
inc
dec
out
pop
jmp
sub
stos
jo
jecxz
pop
ja
decb
sub
frstor
xor
add
aam
xchg
aam
cmp
mov
sub
faddl
btr
xchg
push
xor
add
pop
jns
pusha
and
mov
jge
sbb
out
popa
mov
cmp
sub
inc
inc
jl
or
xchg
jne
movb
xorl
xchg
fyl2xp1
cmp
cs
lods
xchg
xchg
faddl
fcomp
mov
xor
rcrl
cmc
insl
push
adc
add
mov
mov
jmp
pop
xchg
and
fsts
xchg
stc
cs
ja
mov
add
xorl
pop
push
lock
cld
fs
add
leave
fcmovbe
cmp
addl
add
jns
divl
in
sub
addr16
add
add
add
test
jg
xchg
jbe
gs
mov
ja
iret
aam
cmpsb
sub
pop
mov
jno
cmp
push
push
mov
in
aad
xor
stos
or
fmull
fdivrl
sbb
add
cmp
movsb
pusha
mov
sbb
pop
jmp
push
fldcw
push
add
test
test
in
outsb
jl
mov
sub
sub
or
sarl
inc
rorw
xchg
sub
fwait
dec
push
test
stos
and
addr16
push
shrb
xchg
mov
loop
cli
stos
insb
addr16
and
adc
sbb
sbb
mov
fisubl
jmp
mov
lret
sbb
fisttpl
mov
mov
mov
lods
sbb
jnp
dec
insl
and
ret
jne
push
pop
mov
or
movl
clc
fisubs
mov
mov
adc
add
add
add
or
mov
test
xchg
xchg
cmp
aaa
icebp
repz
in
lret
popa
inc
mov
ds
js
int
xchg
jb
sbb
xchg
xor
lahf
sub
aas
cld
hlt
or
jle
repz
lea
sub
mov
jmp
inc
test
jl
movsl
div
arpl
mov
hlt
mov
jp
add
fmull
add
or
jp
mov
push
and
stc
adc
mov
mov
cmpsb
pusha
lods
lea
out
mov
mov
cmp
pop
ss
in
sbbb
dec
stc
std
jo
fsubs
repnz
insl
sub
fadds
sbb
sbb
push
xchg
outsl
cmp
into
adc
sub
xchg
adc
pop
enter
cmp
test
push
dec
aaa
and
sub
xor
xchg
test
out
daa
jmp
add
add
mov
outsl
jne
ljmp
insb
or
add
add
mov
loope
fs
rorl
int3
jo
jmp
movsl
sbb
mul
and
push
into
add
rol
out
inc
jb
add
and
dec
sub
popa
scas
fwait
cmp
into
push
xlat
cmp
aaa
test
clc
addr16
and
inc
dec
mov
fwait
xor
sub
inc
xor
dec
lcall
je
jo
xchg
jnp
mov
jl
leave
lret
cs
sbb
aaa
pop
flds
mov
xlat
jmp
sbb
movsl
test
mov
inc
jmp
orb
fldt
cli
lahf
sahf
mov
add
sahf
mov
ret
inc
mov
in
inc
mov
inc
shl
inc
inc
xor
dec
lock
in
pop
cmp
arpl
call
int3
push
or
xchg
clc
fcmovb
and
mov
xor
sub
shrb
pop
sti
mov
icebp
mov
orb
ljmp
jl
movsb
scas
packuswb
add
add
imul
jae
mov
pop
push
inc
or
cli
mov
xor
push
and
std
not
adc
insb
loope
add
or
cmpb
lret
test
adc
xor
mov
out
xchg
cmpsb
xchg
pop
cmp
adc
ds
clc
cmp
xor
pop
xchg
xor
or
and
pop
in
xchg
adc
sub
adc
adc
movsl
and
lods
inc
push
jp
dec
shlb
fsubs
outsb
mov
dec
hlt
inc
sub
push
jge
lret
pop
or
out
lret
jb
hlt
and
out
jno
mov
xchg
in
cmpsb
popa
fnsave
scas
sbb
scas
add
or
add
mov
or
subl
enter
call
addb
mov
or
sub
pop
andl
inc
and
mov
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
pop
jle
push
cmpsl
dec
cmp
push
or
dec
pop
std
push
ss
orb
outsl
pop
or
movl
stos
out
clc
int3
lea
mov
cwtl
or
fisttps
push
mov
stc
ds
and
pop
fisttpl
and
jmp
cli
mov
push
dec
mov
adc
mov
jg
inc
lahf
push
fsubrl
loope
cmp
cmp
pop
iret
bound
xchg
iret
movsb
xchg
push
sub
clc
sti
lahf
jb
loopne
jae
out
or
pop
gs
xchg
imulb
movsl
mov
and
dec
sub
mov
sbb
inc
sbb
add
sbb
hlt
in
dec
xor
xchg
inc
mov
dec
sbb
mov
fs
xchg
mov
and
xor
ds
cmp
adc
xchg
outsl
cmp
and
push
xchg
jo
repnz
sbb
add
add
cmpsb
push
sbb
mov
addr16
add
add
add
jg
mov
xchg
add
stos
inc
sub
scas
jmp
lcall
pop
or
mov
jmp
fwait
in
pop
clc
cmp
mov
cmc
sar
aad
movsl
adc
mov
mov
add
xchg
movb
pusha
cmp
int3
lahf
xchg
add
insl
jmp
test
xlat
popf
ret
push
xor
movsl
mov
lret
dec
lods
cmp
mov
pop
pop
jmp
add
xor
jmp
sub
dec
cmp
in
add
jns
pusha
xor
fs
subl
mov
and
fsubrs
sbb
movsl
loope
movsb
ja
push
mov
pop
or
mov
sbbb
les
push
test
in
in
or
mov
testl
insl
mov
sbb
mov
mov
cmp
add
add
xor
cli
mov
and
jg
add
add
add
mov
or
cmp
jo
ret
jns
and
cs
idivl
fimuls
push
ret
cmp
or
loopne
xor
xchg
fld
iret
addr16
xchg
inc
fidivrs
xlat
xorb
and
fs
push
popa
sbb
subl
es
push
scas
sub
sbb
cmp
sbb
and
lock
loop
iret
pusha
out
rol
test
jae
add
lods
je
mov
shlb
pop
add
jnp
into
xorb
xchg
xor
sarl
in
mov
lds
pop
ljmp
sbb
aam
cli
adc
jge
xchg
int
out
xchg
pusha
mov
dec
in
and
lods
stos
or
arpl
pop
inc
loop
xor
in
sbb
cmp
and
sbb
jl
test
push
lret
xor
test
add
add
std
test
lcall
mov
cld
addb
add
add
cmp
xchg
mov
rcl
sub
leave
outsb
push
rorb
dec
mov
xchg
push
inc
mov
nop
fldt
repz
sarb
push
xchg
inc
je
fwait
sub
mov
jb
push
mov
sub
or
stos
ret
push
sub
xchg
lcall
sbb
rcrb
mov
nop
sub
inc
in
test
sahf
test
or
pop
jns
push
sub
out
iret
inc
icebp
bndldx
push
ficompl
iret
mov
sti
stos
and
orl
lods
fdivl
add
hlt
mov
mov
inc
scas
cmp
out
or
mov
mov
sub
scas
xchg
inc
sti
add
clc
les
jne
nop
mov
aas
push
xor
fwait
mov
mov
dec
lods
in
fidivrl
jnp
push
dec
pop
ss
pop
fcompl
add
xchg
xchg
jns
jmp
mov
les
add
add
add
sbb
ret
xabort
adc
pop
mov
inc
inc
loop
pop
aad
int3
gs
add
movsb
sub
es
call
outsb
mov
mov
mov
dec
jge
cs
add
add
add
cs
or
enter
mov
lods
ret
xlat
push
pop
inc
stc
in
mov
or
dec
push
xchg
data16
pusha
stos
push
and
or
cli
and
loop
mov
or
scas
cmpsb
pushf
mov
aaa
fbstp
mov
xchg
fst
fcoml
insb
push
mov
push
xlat
mov
inc
push
add
pushf
hlt
aas
xlat
add
sub
dec
mov
or
rolb
loope
or
out
mov
add
push
sub
pop
les
push
mov
lds
inc
scas
lcall
adc
sbb
xchg
test
add
add
add
mov
mov
sub
sbb
or
out
adc
cmc
xchg
mov
cmovbe
mov
das
rclb
jne
adc
bound
jno
xlat
in
daa
sbb
pop
mov
xchg
stc
leave
in
ficomps
inc
push
mov
add
mov
mov
push
shll
retw
push
lods
pop
rcrb
rolb
sar
push
dec
cmpsl
sbb
loopne
aaa
cltd
mov
cmc
pop
push
pop
and
mov
lea
mov
das
lock
inc
punpckhwd
cs
pop
inc
xchg
sub
mov
add
cmc
sbb
xor
ret
sar
cltd
sarb
adc
loop
aad
mov
mov
aam
aad
mov
inc
mov
stos
adc
pop
mov
push
mov
scas
or
sbb
icebp
mov
push
mov
jl
cs
idiv
jne
iret
sbb
mov
addl
add
add
adc
pop
add
fisttpll
js
sbb
mov
sub
mov
bound
xor
inc
pop
rolb
js
mov
jbe
std
jg
add
push
pop
xchg
xlat
cmp
inc
pop
mov
cmpsl
push
leave
imul
xchg
adc
fcmovbe
jecxz
lret
mov
iret
sti
pop
stos
cmp
flds
adc
cwtl
xor
xchg
repnz
mov
bound
shl
enter
mov
xor
repz
scas
lds
gs
and
aad
cltd
lret
mov
pop
in
scas
rolb
stc
add
out
ja
in
sub
dec
fsubl
xor
daa
dec
mov
clc
xchg
adc
fs
sub
cmp
add
add
rcll
test
push
add
adc
push
std
xchg
pushl
sub
cmp
add
add
add
mov
movsb
loope
gs
scas
mov
rorl
mov
sti
jno
inc
adc
les
aaa
sub
or
and
mov
testb
outsl
pop
popa
sbb
mov
sbb
xchg
xor
adc
cli
das
sahf
jnp
lods
mov
andb
sub
push
cmp
fstl
mov
ds
mov
push
inc
inc
lea
scas
subl
lret
lods
ds
adc
mov
js
mov
mov
iret
into
jns
rcr
sbb
cmp
dec
add
jg
lret
dec
fidivs
jg
divl
ja
sbb
ret
mulb
mov
dec
xchg
add
jno
das
lods
movsl
sahf
push
sub
xchg
xchg
pushf
push
or
es
lock
dec
adc
push
aad
add
add
sti
iret
ss
push
jno
add
test
add
add
add
scas
pop
out
dec
andb
xchg
dec
rorb
mov
sub
pop
daa
dec
xor
xchg
sbb
insb
std
insb
popf
mov
mov
aam
dec
jge
inc
stos
add
or
ss
pop
add
ljmp
push
jecxz
pusha
dec
xor
pop
push
jne
repnz
inc
out
daa
xlat
repz
leave
popf
jle
adc
addl
dec
and
mov
lahf
mov
cwtl
lcall
xor
stc
jl
ss
inc
mov
out
sbb
inc
pop
pop
jmp
jmp
push
cwtl
imul
adc
fstpt
arpl
mov
push
cs
mov
aad
mov
mov
xor
mov
jae
lcall
mov
mov
outsb
idivb
dec
iret
lahf
popf
out
jg
push
sbb
pushf
push
and
mov
dec
stos
cmp
xchg
cmp
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
jle
pop
xchg
add
add
add
cmp
jae
adc
pop
mov
or
cmpsl
in
popf
sub
aam
mov
outsl
jl
xor
loopne
inc
cld
les
push
jnp
shlb
sbbl
ds
cmpl
mov
add
or
fisttps
mov
pop
and
int3
outsl
xlat
dec
xor
xor
out
loopne
mov
mov
sti
push
popf
push
add
andb
pop
dec
mov
fsubrl
aaa
outsb
sbb
les
or
or
add
dec
rclb
push
sub
data16
jecxz,pn
dec
das
addr16
xor
jae
test
cmp
push
jbe
xchg
dec
adc
and
subl
bound
pop
shl
aam
imul
lahf
prefetch
das
ss
xchg
clc
iret
movsl
outsb
insl
and
add
add
mov
mov
xchg
add
add
add
jb
dec
lcall
rcrb
out
inc
xchg
in
arpl
cld
daa
ss
shl
jns
sub
push
mov
xchg
jl
cmp
xchg
sbb
jbe
loopne
or
imul
lcall
fistl
mov
aam
dec
xchg
adc
sbb
and
xor
dec
in
xor
push
cmp
in
loopne
pushf
popf
mov
dec
test
stc
and
sub
push
xchg
dec
jg
pop
sbb
pusha
mov
cmp
cmp
jp
cltd
jge
dec
xchg
mov
xor
scas
pop
out
stos
xor
dec
push
xor
jne
xor
sbb
lds
setbe
pop
popf
pop
fisttpll
mov
rorb
lret
jmp
cltd
xchg
cmp
pop
cs
xchg
mov
adc
xlat
jb
and
out
ljmp
lock
xchg
cmpsb
and
lahf
mov
add
add
add
push
sarl
sbb
es
jl
push
push
stos
jb
cwtl
sub
ja
jle
push
pop
aas
in
mov
lea
je
ja
xor
or
mov
stos
mov
mov
xlat
jl
out
mov
sub
push
mov
mov
repnz
pop
xorb
loop
xchg
loopne
pop
sbb
pushl
pop
lret
xor
add
pusha
sub
adc
cmp
pop
or
inc
jmp
xor
shrb
sub
push
push
add
push
fcoms
aam
or
ret
or
imul
mov
add
shlb
cmp
jae
popf
faddl
out
outsl
mov
push
mov
xor
push
stos
cli
xchg
sub
lods
lret
mov
jo
mov
sarl
push
and
add
add
arpl
jnp
sbb
push
xor
stos
inc
mov
add
add
add
loope
lock
mov
call
pop
out
jecxz
cmp
and
test
imul
mov
add
dec
into
stos
ficoms
rorb
sbb
xchg
cmpsb
je
sbb
push
sub
sub
jae
aas
pop
push
add
add
nop
stos
xor
adc
mov
cmpsl
or
aas
loop
dec
and
jae
int
or
aam
into
stos
cmp
adc
push
je
pop
xchg
orb
fs
pop
outsb
push
lahf
shlb
pop
in
cli
jo
pop
pop
fmuls
inc
lcall
inc
mov
int3
pop
xor
mov
mov
add
fcompl
or
fcmove
leave
loopne
test
pushf
ficomps
xchg
dec
stos
pop
xchg
lock
shl
es
iret
sub
fs
sub
outsl
loopne
andb
xor
into
stc
sbb
mov
sbb
je
add
add
aas
or
mov
rolb
lods
arpl
add
add
add
or
push
leave
add
cmp
sbb
add
setne
rcl
fiadds
sub
dec
push
movsl
cmc
movsb
aas
pop
mov
int3
lock
mov
pop
in
jns
scas
push
gs
test
xor
ret
leave
cmp
out
rcll
popf
bound
mov
xor
mov
dec
lahf
lret
pop
cwtl
pop
repnz
mov
mov
push
clc
inc
xorb
repnz
cmp
mov
mov
pop
jl
scas
shrl
in
inc
icebp
clc
jg
repnz
loop
outsl
scas
mov
cmpsb
loop
shr
int
sahf
xor
data16
pop
inc
jnp
inc
xchg
xchg
sbb
in
pop
xchg
add
pop
testl
iret
ja
mov
in
into
mov
push
sbb
mov
lahf
insl
mov
push
repz
mov
mov
add
add
push
outsb
fisubs
test
adc
mov
mov
add
add
add
xor
push
in
push
clc
mov
imul
les
and
jbe
shll
nop
push
cmpsl
lea
in
fisubrs
add
inc
and
dec
dec
pop
xor
sub
imul
sbb
int
or
lock
cmp
lods
pop
icebp
lcall
cmpsb
xchg
dec
scas
lahf
push
or
outsb
and
add
es
ret
pop
lock
das
pop
and
sub
inc
or
repz
jb
add
xchg
mov
dec
mov
popa
push
sub
mov
rorb
je
mov
mov
cmc
pop
mov
call
mov
leave
sahf
inc
and
mov
pop
adc
fidivrl
mov
jge
sbb
rcrb
mov
mov
dec
ret
sub
inc
lea
push
xchg
insb
jge
int
inc
xor
xor
adc
loope
mov
mov
or
xchg
in
popa
cmp
mov
jns
mov
sbb
add
add
add
pop
jl
call
push
push
js
adc
pop
pop
stos
sub
pop
xor
cmp
sbb
ficompl
sti
xor
insl
mov
mov
sbb
inc
lea
in
xchg
lock
xchg
pop
stc
cwtl
or
test
je
jge
icebp
std
dec
jmp
les
pop
shl
sbb
cli
icebp
and
popf
test
mov
add
sbb
jno
sbb
jns
mov
and
mov
sub
and
int3
loop
in
push
rorl
xchg
push
outsb
mov
addr16
enter
push
pop
arpl
or
imul
or
aas
mov
iret
add
call
push
cmc
pop
push
mov
nop
pop
test
sti
lds
add
add
int
fstp
iret
push
cmpsb
fadd
dec
scas
jp
push
lea
add
add
add
mov
mov
mov
mov
and
pusha
jge
popf
xchg
xchg
sti
in
subb
xchg
mov
movsb
scas
in
fbstp
jmp
sub
and
out
mov
mov
pushf
lahf
pop
je
fs
roll
aas
ret
fisttpl
inc
mov
or
xor
data16
lds
jb
nop
movsl
mov
sub
add
adc
sub
xor
pop
int3
mov
clc
rdmsr
in
outsl
ljmp
inc
hlt
decb
incl
cmc
inc
mov
xor
into
call
fdiv
decl
jo
sbb
adc
aam
imul
hlt
mov
popa
cmp
loop
data16
mov
push
mov
xchg
call
pop
inc
leave
jl
repz
xor
scas
shl
cmp
adc
into
lods
mov
adc
fwait
out
mov
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
dec
and
ss
stc
into
jl
fcompl
aad
sbb
imull
fidivl
into
ljmp
xchg
mov
mov
push
out
clc
stos
or
out
inc
adc
sub
jle
outsb
mov
test
or
inc
pop
jo
or
add
push
mov
and
or
std
jnp
add
popa
lret
lahf
icebp
add
push
mov
and
lock
dec
mov
ljmp
or
scas
jo
outsb
push
jne
add
aam
adc
or
cmp
in
rorb
mov
lock
add
pop
and
jae
shl
cmp
xlat
jnp
ljmp
mov
ds
xchg
dec
movsl
sub
dec
arpl
outsb
mov
lret
mov
outsl
fwait
jo
fs
jae
lods
sub
js
arpl
repz
add
mov
icebp
adc
fbld
add
add
add
scas
mov
nop
cld
jns
cmp
push
inc
lock
fisubrs
add
sub
or
xchg
stc
fnstcw
mov
insb
das
mov
xor
or
lcall
mov
sbb
jmp
repz
out
mull
pop
das
insl
inc
xorl
sub
fsubs
aad
arpl
jmp
sub
shrb
ret
xor
inc
fwait
push
sub
testl
xchg
popa
out
scas
xchg
aad
adc
mov
inc
icebp
sub
jnp
sub
push
rorl
mov
cmpsl
dec
inc
xor
test
loope
ss
fldl
pop
cmp
pusha
std
dec
addr16
mov
inc
int
icebp
lahf
fiadds
xchg
push
push
cmc
insl
es
or
pop
pop
push
push
hlt
repnz
sub
dec
sahf
addr16
icebp
jge
push
xchg
cmp
dec
push
insl
pop
repnz
inc
or
test
fcomps
add
nop
add
add
add
test
pop
or
lret
lods
idivl
sbb
add
imul
xor
xchg
sbb
dec
test
inc
cmpsb
nop
movsl
cmpsb
or
jl
addl
xor
xchg
mov
push
test
and
or
clc
js
sbb
xor
icebp
pop
rcll
out
stc
insl
lcall
jmp
les
test
mov
stos
dec
pop
sbb
fs
pop
insl
push
pop
fldl
jne
pop
mov
cmpsb
fldenv
test
push
fincstp
or
mov
mov
xchg
xor
lds
fsts
cmp
mov
loop
jno
sub
jle
jb
push
popf
test
jne
les
or
sbb
int3
insl
mov
cmp
pop
pop
mov
add
add
add
ljmp
dec
mov
insb
packuswb
add
pop
mov
std
scas
sub
xchg
sbb
jge
into
sub
pop
xchg
imul
adc
sbb
xor
or
dec
mov
pop
mov
jno
xchg
mov
andb
jmp
out
dec
test
jnp
mov
fisttpl
push
xchg
xchg
jecxz
xor
leave
sbb
jae
xlat
test
cmp
adc
je
sub
lahf
loopne
and
scas
scas
fbstp
cmp
xchg
sub
cmpsb
jne
mov
lea
and
test
mov
push
scas
dec
clc
add
and
clc
ja
jnp
mov
orb
xchg
mov
insb
mov
mull
cmp
pop
cmp
jle
xchg
iret
mov
mov
add
mov
out
jg
xchg
mov
fisubrs
mov
jno
jmp
jb
inc
out
mov
imul
ss
inc
inc
mov
hlt
jge
aaa
shlb
cmc
div
testl
mov
add
add
cmp
shlb
xchg
scas
add
jns
pop
mov
adc
and
addb
or
icebp
das
out
mov
cli
es
jg
push
sbb
and
pop
subb
aad
inc
aad
ret
xchg
mov
sub
xor
lds
sbb
pushf
pushf
mov
mov
int
inc
adc
push
repz
adc
xchg
mov
ret
pusha
push
or
aad
xchg
pop
mov
mov
lret
add
push
pop
mov
lea
shr
bound
jle
out
lea
and
dec
mov
stc
pop
mov
sub
hlt
loopne
jae
bound
sub
and
jle
ds
lock
mov
push
sbb
add
add
push
sahf
rcr
pop
adcb
movsb
fwait
inc
or
add
add
add
pop
out
call
dec
jg
int
or
ja
cmp
dec
xor
pop
adc
fdivl
loop
cmpl
pop
ret
mov
addr16
lock
mov
ljmp
or
pop
sahf
test
mov
jbe
mov
sub
and
jle
inc
movsl
fmul
add
adc
push
jl
cmp
das
sub
leave
mov
xlat
cmp
push
xor
inc
daa
add
outsl
xchg
xchg
sub
jns
loopne
call
loop
ja
ds
arpl
lods
in
pop
fidivrs
pop
mov
ja
mov
sbb
xor
into
or
push
sub
push
js
or
adc
ljmp
mov
push
into
and
sbb
cld
xor
in
mov
dec
insb
pop
sti
add
es
jne
shll
cmpsb
jcxz
fimull
addr16
add
add
add
add
push
mov
stc
nopl
cmp
in
push
shrb
cli
mov
jecxz
call
jmp
ja,pn
and
and
push
insl
stos
lret
jl
inc
xor
sub
dec
mov
sahf
repnz
test
cmpsl
pop
lods
mov
daa
jmp
mov
add
pop
mov
mov
adc
sbb
fsubp
repz
sbb
lods
mov
dec
add
popf
pop
daa
jbe
xchg
and
ss
sub
aas
mov
cld
mov
sub
ljmp
push
cmpsb
push
sub
mov
xchg
enter
or
sbb
mull
or
ret
lret
lahf
or
addr16
xor
aam
sub
into
pop
sub
out
clc
pop
shrl
push
dec
push
add
stos
clc
jnp
jg
in
cli
enter
fcompl
add
add
add
lods
pop
sub
mov
push
add
mov
aam
push
addr16
sahf
cld
jnp,pt
jg
cwtl
pop
pusha
fsts
cmc
sbbb
dec
inc
aam
lret
icebp
add
pop
xchg
popf
xor
incl
and
arpl
cmp
adc
cmp
fnsave
lret
cwtl
xchg
jae
sti
adcb
lcall
out
into
in
mov
into
push
pop
xor
dec
jne
jo
jmp
jb
and
iret
icebp
dec
push
shlb
inc
sbb
cmpb
xchg
pop
std
test
sub
lret
jbe
es
stc
in
ret
ds
gs
push
xor
dec
mov
bound
outsl
scas
cmp
mov
cmp
sub
pusha
insl
outsb
push
popa
data16
jp
fnstcw
std
movl
or
xchg
stos
fidivs
xchg
mov
ljmp
cld
gs
mov
addr16
add
add
add
dec
bound
stc
mov
push
jne
js
push
decl
ljmp
repz
sarl
imul
lahf
daa
scas
js
cmpl
int3
movsl
mov
addb
enter
imul
outsl
das
aad
jnp,pn
fistpl
lahf
sbb
cs
sahf
and
iret
mov
out
test
sbb
jl
cmpsb
cmp
int3
out
mov
es
adc
fsubrl
les
sub
movsb
gs
fnstenv
cmp
inc
xchg
test
xchg
adc
jg
mov
cld
push
mov
fisubs
fwait
pop
das
sub
hlt
xor
fs
and
sbb
fwait
stos
sub
arpl
mov
cmp
icebp
add
sbb
inc
mov
cmc
or
addb
jg
or
mov
cmp
or
mov
das
xchg
inc
into
loop
dec
sbb
es
xchg
add
add
add
jl
sar
std
jle
pop
popf
scas
dec
inc
xchg
addr16
add
add
add
enter
movsl
jmp
pop
jns
jne
cmp
fimuls
sub
icebp
inc
and
xchg
idivl
int
aas
loope
push
aam
orb
in
mov
push
cmp
or
sbb
sub
movsb
out
cmpsb
outsb
push
pop
and
shll
xchg
pop
leave
shlb
sub
es
adc
testb
mov
sub
pop
dec
in
adc
aad
mov
pop
xchg
push
sarb
gs
xor
shl
jae
jnp
les
pushf
inc
lods
jb
idivb
clc
sarb
xlat
or
xchg
je
rorl
movl
mov
or
or
das
in
cwtl
out
sub
pop
jge
lea
inc
dec
sbb
cmc
daa
mov
add
xchg
out
and
cltd
or
pop
mov
inc
push
and
add
loop
cmp
cmp
in
sbb
xchg
adc
add
add
add
cmpsl
sbb
test
jecxz
jge
push
xchg
lea
add
adc
arpl
rclb
iret
cmp
outsl
mov
popa
pusha
js
sbb
jno
mov
nop
repz
sti
mov
es
jbe
fs
push
xor
bound
sbb
sub
aam
ss
or
repnz
push
imul
inc
cmp
xor
dec
fcompl
stos
pop
loope
rcll
dec
lahf
sub
push
mov
jae
and
call
std
fsubrl
ja
mov
and
mov
lds
fistpl
and
lods
and
clc
pushf
iret
push
push
movsb
dec
jmp
dec
mov
out
nop
shl
popa
dec
loop
xchg
lcall
int3
adc
dec
jl
xor
mov
cs
scas
sbb
sti
pop
cltd
push
leave
xchg
fwait
and
popa
mov
xorl
addr16
add
add
add
sub
fisubl
js
fbld
mov
sub
jnp
call
sbb
out
out
nop
insl
jmp
jb
dec
xchg
add
ret
mov
add
push
sub
les
push
jg
sbb
or
popf
xorl
mov
in
pop
jo
jecxz
adc
or
or
or
gs
repnz
negb
sub
stos
inc
cwtl
fldenv
xchg
insl
int
inc
popf
pop
into
js
push
mov
sbb
mov
sub
jg
decb
cltd
ds
fldenv
dec
out
fidivl
mov
subb
jl
inc
inc
pushl
mov
xor
mov
mov
rorb
shl
push
adc
scas
xor
add
add
test
addr16
nop
repnz
add
push
and
xlat
aas
dec
sbb
or
addr16
rcl
popf
dec
out
je
push
sbbl
out
sub
in
mov
sbb
ret
pusha
add
push
inc
das
jmp
mov
jno
es
jge
imul
pop
les
sahf
icebp
out
cwtl
jle
mov
sub
sub
fs
pushf
or
roll
test
jno
xor
and
out
sti
fistps
adc
jge
mov
inc
pop
mov
call
jo
mov
mov
aam
in
cmp
js
rcrl
repz
inc
jae
stc
inc
add
popa
inc
mov
lods
shlb
lcall
es
sbb
mov
dec
flds
mov
sbb
bound
cmp
out
xor
or
adc
dec
pop
cli
iret
xchg
stc
ret
mov
xchg
sub
jns
pop
data16
xlat
rcll
add
add
mov
mov
jmp
test
fwait
add
add
add
out
rcl
lods
ja
clc
and
insb
or
inc
je
sahf
into
xchg
sub
or
jne
sbb
fdivrl
mov
mov
push
mov
and
jns
lods
mov
nop
rclb
inc
push
dec
lds
iret
aam
roll
insl
pop
push
sub
add
int
xchg
cmp
leave
lret
sub
pop
aad
cli
lock
lea
jbe
add
dec
cmp
sub
lcall
in
add
pop
add
jg
pop
xor
std
lods
aad
or
inc
sbbb
xor
push
test
xor
add
push
ja
cmp
and
lcall
and
in
mov
xor
xchg
movsl
push
push
sbb
jg
call
repnz
sub
dec
jae
xchg
sbb
lds
popa
mov
bound
add
add
lret
sbbl
popl
xchg
ljmp
add
sbb
pop
add
dec
push
xor
stos
jo
test
dec
xchg
test
mov
sub
sbb
pop
xchg
sbb
in
sub
dec
push
js
xor
movd
adc
inc
and
pop
or
mov
out
push
xchg
stc
jp
pop
xor
jp
out
mov
push
cmovg
push
cmp
mov
cli
repz
xor
ss
or
mov
xor
mov
ja
xor
and
mov
out
sub
mov
rcl
mov
aas
in
mov
pop
or
and
aaa
shl
jl
add
push
clc
ljmp
add
out
mov
enter
dec
pop
lret
in
lcall
ror
adc
aaa
add
stc
mov
cli
mov
dec
adc
iret
data16
lea
mov
nop
mov
mov
imul
movsb
and
mov
popf
add
add
add
xor
jns
hlt
imul
daa
jp
in
cmc
and
add
lahf
xchg
les
addb
or
popa
jbe
or
xor
cmp
rcl
push
imul
jmp
push
add
xor
and
push
stos
or
push
jbe
in
lcall
cld
sub
and
push
mov
ja
sbb
inc
stc
mov
into
mov
pop
shr
adc
addr16
sub
stc
inc
pop
imulb
sahf
jle
das
xchg
sbb
xchg
jle
fldt
mov
icebp
mov
aad
lock
shrb
mov
sub
mov
mov
and
inc
dec
jge
call
bound
add
push
push
cwtl
cmc
scas
pop
mov
push
adc
jno
in
and
int
cmpsl
stc
lock
mov
jge
jg
ljmp
in
lahf
mov
or
addr16
add
add
add
add
jns
data16
sbb
add
sahf
scas
or
or
push
sti
and
or
cmp
add
inc
dec
insb
xchg
sbb
loopne
sub
cli
or
add
add
mov
fldenv
pop
xor
mov
inc
test
jnp
call
ljmp
fisttpll
pusha
enter
dec
pop
add
mov
add
inc
testb
xor
mov
adc
out
sbb
dec
jp
mov
cmp
test
orb
mov
rcl
jno
shrl
in
pop
test
push
adc
sbb
xorb
cmp
dec
imul
fmuls
ja
sahf
arpl
imul
arpl
in
mov
test
das
outsl
pushf
push
stos
push
pop
cltd
sub
out
inc
sub
or
arpl
addr16
add
add
add
jge
shr
js
sub
rclb
out
push
fst
popa
add
jge
adc
leave
jno
cmpsb
jbe
bound
orb
popf
jne
stos
int
es
inc
inc
adc
popa
js
sarl
jne
jle
mov
jne
adc
jp
jno
lods
shll
mov
jl
sbb
in
cwtl
jbe
outsb
jnp
mov
and
in
jge
jg
xor
dec
int
fs
mov
popf
stos
adc
ret
arpl
mov
mov
stos
test
mov
leave
sahf
cmp
outsb
dec
sbb
sub
jmp
jg
xchg
lods
test
fs
clc
into
mov
xor
cs
in
insb
xchg
aam
das
popf
adc
adc
push
push
int3
gs
cmc
sub
stos
data16
pop
cli
lods
xchg
push
xor
fdiv
mov
jg
jno
fnstcw
cmc
pop
push
popf
loop
test
mov
cld
mov
addr16
add
add
rcrb
lods
pop
cld
and
pop
jle,pt
subb
sti
cld
dec
call
inc
in
int
incb
xchg
jmp
clc
cs
cmp
xor
test
push
mov
pop
stos
xchg
cmp
push
and
fsubp
call
clc
imul
dec
dec
dec
arpl
sub
or
adc
lds
fldl
test
addl
mov
stos
or
cwtl
dec
mov
xor
std
popf
js
dec
repnz
push
cwtl
sub
loopne
addb
sub
ret
fwait
aaa
sbb
and
das
pop
push
and
or
loope
mov
test
add
es
xchg
jbe
cld
dec
dec
fsts
out
cmp
imul
mov
or
xlat
jns
sub
sbb
inc
mov
or
lcall
out
test
add
add
add
jbe
or
scas
mov
or
xor
cmc
sub
mov
sub
sbb
call
inc
mov
sub
mov
jne
fimuls
scas
ss
push
cmpl
mov
dec
nop
xchg
stc
jmp
inc
sbb
adc
and
xchg
mov
mov
mov
push
iret
insb
setne
mov
pushf
movsl
mov
sarb
notl
std
addr16
mov
insl
int3
sbb
out
jl
aas
scas
or
push
ljmp
xor
xlat
jns
and
aad
jo
sarb
push
sbb
sbb
outsl
sub
inc
loopne
cwtl
mov
in
imul
aad
test
add
test
aas
mov
pop
lock
rclb
xlat
out
push
or
xor
cmpsl
stos
sbb
mov
call
add
mov
inc
inc
add
mov
add
test
arpl
test
movsl
mov
xchg
push
pop
cmp
push
das
adc
jae
cltd
out
cli
xchg
mov
dec
pop
mov
call
inc
rorb
in
outsb
fwait
cmpsl
and
je
jnp
test
jge
sub
jmp
xchg
adc
cmp
push
adc
aas
movsl
testb
adc
fwait
xor
pop
sbb
xor
pushf
shl
or
mov
clc
int3
sbb
cld
sbb
sbb
inc
out
inc
inc
ja
jo
pop
lcall
mov
jno
out
mov
xchg
fs
dec
pusha
lods
lret
outsb
xchg
xor
les
out
pop
arpl
mov
jo
or
xor
test
cmp
jbe
and
enter
cmc
adc
ss
leave
data16
insb
add
mov
push
ficompl
or
sbb
inc
mov
jge
addr16
add
add
in
jmp
ficomps
sbb
or
xchg
cmp
mov
lea
jbe
fildl
rcrb
push
sbb
ret
push
push
and
xchg
mov
xchg
xlat
movsb
sbb
xchg
lods
fs
sbb
shlb
cmp
xor
add
insl
push
movsb
frstor
jns
dec
mov
lret
pushf
xchg
add
cmp
sbb
inc
or
ljmp
popa
cwtl
sub
loope
shll
in
lods
rorb
add
mov
push
mov
mov
mov
jbe
pop
dec
jmp
ret
lcall
int
inc
test
mov
cmp
xchg
movsl
or
jns
push
jae
adc
jne
gs
sub
add
sub
inc
sub
pop
std
test
into
test
pusha
mov
push
dec
lods
pusha
in
leave
popf
or
movsb
stos
shl
push
inc
fdivl
push
dec
mov
movsb
add
add
add
adc
pop
in
test
mov
mov
sbb
int3
lds
daa
inc
pop
jmp
dec
stos
ljmp
repz
clc
cmc
or
jns
lock
add
fwait
push
push
testl
mov
test
xchg
loope
orb
decl
into
fwait
inc
adc
xchg
das
lcall
dec
cmc
push
cltd
push
movsb
push
incl
nop
dec
movsl
pop
pop
cmpsl
pop
lcall
addr16
cmp
mov
mov
cmp
insl
jno
lret
sbb
sbb
xor
ds
loope
push
add
in
push
fimuls
jne
sti
bound
daa
and
imul
pop
sbb
int3
mov
cmp
add
dec
add
sbbl
cmp
je
rcll
add
add
sbb
mov
sbb
xchg
insl
frstor
add
add
add
ds
push
test
inc
sbb
xchg
inc
rolb
test
push
and
popf
pop
sbb
xchg
jne
stc
inc
out
mov
cmp
inc
repnz
xor
sbb
inc
dec
hlt
add
push
adc
out
or
xchg
call
ja
mov
rcl
xchg
jp
leave
xor
mov
fildl
or
push
xchg
xor
sarb
mov
adc
inc
push
loope
push
mov
mov
xor
mov
call
and
scas
lds
hlt
xchg
jmpw
adc
test
fs
xchg
sub
movsl
arpl
or
cmpsb
push
cmp
xchg
lcall
je
push
cltd
scas
sub
leave
mov
xlat
gs
dec
mov
es
popa
mov
aas
pop
mov
and
push
test
ficoml
xor
imul
pop
test
stos
hlt
jmp
cmp
jbe
pop
mov
out
cmpsb
add
add
add
adc
push
in
dec
cltd
daa
fsubrl
dec
movsl
jo
inc
or
push
and
sub
xor
rcrl
sub
dec
and
pop
sarb
xor
lods
pop
das
cmp
fidivrl
out
sbbl
push
stc
out
icebp
sarb
mov
fs
mov
xchg
int3
mov
les
dec
in
test
fwait
sbb
sti
xchg
cmp
cmp
mov
orl
ss
movsl
imul
out
test
dec
add
or
inc
pop
add
enter
repz
sub
mov
in
xchg
cmp
mov
loop
idiv
push
inc
xchg
cmp
cmp
stos
data16
xchg
in
mov
leave
inc
xchg
or
fadd
sahf
jp
ret
pop
xor
add
add
push
nop
out
xlat
out
jg
in
xor
cmpsl
add
add
add
loop
call
ficomps
lods
loope
call
sar
xchg
xchg
stc
leave
cmc
sbb
sbb
cmc
int
and
jle
mov
dec
mov
movsb
push
mov
dec
xchg
push
out
out
jne
ss
sbb
adc
cmp
or
jne
movsb
mov
les
and
shld
xchg
push
in
ja
dec
sbb
pop
mov
es
adc
ret
and
ret
pop
stc
jno
xchg
push
push
mov
pop
ret
sub
or
add
scas
inc
mov
sbb
cmp
and
and
mov
and
lods
sub
fwait
or
in
xchg
push
data16
push
cmc
lods
add
sub
repz
dec
mov
jp
adc
push
fwait
cmp
lahf
daa
hlt
js
cltd
popf
movsb
mov
xor
fsubl
cltd
push
add
mov
inc
fwait
lds
jo
fldl2e
icebp
fs
addr16
add
add
add
and
aam
iret
sub
cmc
repz
ret
stos
cs
dec
cmp
and
jp
pop
dec
addr16
jne
xchg
mov
aad
mov
xchg
and
cmp
xor
test
jne
lea
adc
out
sub
lcall
sti
cmp
add
lea
out
pop
mov
pop
and
cld
mov
add
push
mov
int3
push
inc
pop
or
cltd
xor
pop
ja
cmp
sub
dec
lock
xchg
leave
mov
loopne
sbb
xchg
pop
mov
out
in
je
inc
sbb
cmp
jge
fildll
jo
gs
and
xchg
pop
int3
imul
shlb
stos
xchg
cmp
lods
test
addb
repz
js
add
add
mov
fadds
addr16
add
jmp
push
sub
xor
push
push
idivb
or
sub
nop
cli
or
mov
call
fldenv
or
mov
cmp
xchg
ds
int
jo
mov
xchg
movsl
mov
inc
push
push
bound
enter
repz
pushf
xor
mov
imulb
push
push
mov
push
rcrb
add
push
sbb
xor
cmpsl
jae
rorb
movsl
outsb
mov
jmp
notb
cmpsb
sub
aaa
xor
movsb
jmp
push
push
mov
pusha
or
mov
sbb
fwait
mov
jmp
xchg
add
jl
fucomip
cmp
and
test
leave
ret
mov
pop
mov
and
jno
fadds
lods
pop
push
mov
mov
pop
sbb
jle
fbstp
jo
sbb
pop
test
cli
sarl
add
add
mov
push
sti
jmp
push
mov
mul
es
add
add
add
add
add
push
push
jb
dec
outsb
xor
stos
sbb
mov
test
ljmp
pop
jbe
inc
xchg
jne
xchg
add
sbb
pop
and
cmp
cltd
fsubrl
jle
clc
lock
cmc
or
or
dec
xchg
mov
jae
ret
fmul
roll
xchg
push
and
mov
pop
sbb
jecxz
jmp
adc
ds
adc
dec
push
xlat
jo
fwait
jecxz
jbe
fdivs
mov
add
lret
mov
dec
lds
and
lret
loope
adc
in
jns
push
push
xchg
adc
adc
rclb
mov
insb
jb
pop
int3
xor
mov
call
in
bound
xchg
mov
rorl
pop
js
inc
imul
mov
push
pop
sahf
shll
cmp
das
or
add
add
jecxz
lock
xchg
add
add
xor
dec
cmp
jo
out
fbstp
fcomps
lock
imul
mov
cmpsb
mov
js
xor
or
push
add
aam
movsl
mov
lods
xchg
xor
cmp
add
jb
mov
aas
mov
pop
aas
jae
lret
xchg
push
xchg
test
pop
dec
pop
inc
cwtl
lahf
js
mov
inc
xor
aaa
les
mov
add
psubusb
mov
mov
xchg
sub
cmp
mov
loop
mov
pop
mov
mov
and
mov
fcomi
adc
jmp
push
adc
mov
add
sbb
push
pop
xchg
jmp
cmp
inc
pop
lock
shll
std
inc
fisubl
out
ja
inc
bound
cli
xchg
fs
stc
add
movsl
xchg
fwait
jg
cmp
push
mov
cld
mov
leave
movsb
aam
or
add
add
push
xlat
or
insl
cmp
sbb
in
jge
dec
out
fwait
std
and
je
sti
mov
scas
ds
add
xchg
arpl
jp
std
lea
pop
xchg
imul
jmp
pop
mov
sub
xlat
jge
add
orl
cmpsb
push
cli
bound
mov
stos
shrb
scas
ja
cltd
bound
aaa
into
stos
stos
int
inc
cmpsl
daa
adc
in
out
lods
mov
mov
mov
dec
leave
mov
cmc
cmpsl
fdivrp
and
ficoml
mov
xchg
jl
jg
addr16
cmc
pop
mov
lods
nop
int3
outsl
divb
icebp
pop
nop
lcall
fistl
jmp
sbb
mov
pop
es
sub
idiv
mov
mov
outsl
in
mov
int3
xor
inc
dec
daa
add
add
adc
dec
add
jno
jle
sub
add
add
out
cmc
mov
in
in
lods
add
add
add
nop
add
fdivrs
xchg
mov
stos
mov
dec
inc
jmp
ss
jg
sbb
pop
in
inc
fbstp
je
jp
add
ret
ds
jnp
es
leave
xlat
test
repnz
push
sub
jl
mov
pop
fisttpll
stos
lods
les
lods
aas
cmpsl
pusha
popa
and
je
sub
add
sbb
push
mov
lock
fcmovnb
lret
xor
sbb
mov
xchg
loop
add
mov
mov
pop
imul
into
dec
cmpsb
mov
sub
gs
inc
mov
sti
das
mov
cmpsb
in
daa
jae
int3
push
adc
pop
and
vmovsldup
rclb
rcrl
or
insb
or
inc
sbb
fdiv
cmp
xor
repnz
jb
mov
cmpsb
adc
movsl
or
shr
dec
cmpsb
xchg
arpl
into
fucomip
std
dec
std
pop
lcall
xchg
pop
push
xor
add
add
add
fadds
call
mov
leave
dec
and
out
sub
dec
sbb
pop
pushf
stos
jl
rcrl
mov
ret
cmp
push
xor
cwtl
ret
xor
loopne
shl
xchg
pop
push
dec
mov
ds
push
push
subl
jns
icebp
mov
not
repnz
sti
pop
and
rolb
ss
adc
push
inc
pop
sub
inc
pop
jnp
data16
repz
cmp
jnp
lret
sub
js
outsl
bound
enter
xor
pop
loopne
push
fwait
data16
jb
and
or
loopne
mov
int
jb
add
sbb
ja
cmpsl
jmp
dec
jmp
cs
stos
in
jae
xchg
std
fistl
pop
dec
dec
hlt
insl
pop
jp
dec
sbb
push
arpl
xchg
loope
icebp
shr
xor
call
push
xor
test
add
add
fidivs
loop
ljmp
daa
push
mov
add
add
add
or
lods
aas
cmpsb
xlat
in
mov
xchg
jb
push
clc
dec
adc
js
mov
jge
ss
inc
outsl
in
fists
mov
mov
pop
xor
mov
mov
jns
sub
fisttpll
lcall
lret
and
popf
cmpsb
pop
cld
add
loop
and
lahf
aaa
mov
or
dec
xchg
repz
lret
jp
rorl
mov
sub
je
sbb
jb
cli
fs
mov
jmp
xor
and
aad
and
ja
mov
xor
test
cmc
icebp
lods
out
mov
inc
lret
test
mov
loopne
fisttps
repnz
out
xor
lods
mov
pop
popf
push
jl
imul
adc
movsl
pusha
insb
jbe
cmp
dec
fs
fsubs
lods
loope
push
fistpll
sub
lcall
push
jecxz
mov
add
sub
out
mov
inc
push
xchg
jg
jmp
std
mov
ljmp
add
add
test
push
pop
jns
arpl
in
sub
adc
loope
icebp
pop
pop
adc
mov
ret
fistpl
ret
rorl
cmp
mov
fs
in
cmp
leave
daa
jp
adc
lods
aaa
and
sahf
cmp
aaa
sub
push
and
dec
test
shlb
ss
lea
push
aas
bound
bound
cmp
cli
cmp
loop
pop
mov
orl
pop
mov
mov
insl
sbb
pushf
mov
adc
adc
inc
mov
subb
inc
jmp
xor
jno
push
int3
xor
movsl
fmuls
xchg
jg
xchg
sti
sbb
cs
es
in
rolb
xchg
out
pop
scas
mov
jl
loop
ret
fildll
dec
xchg
stc
mov
add
xor
inc
mov
cli
fsubs
add
add
add
jmp
sbb
test
scas
inc
mov
cwtl
faddl
iret
mov
es
mov
sub
jns
shrl
xchg
jle
jecxz
inc
mov
xorb
outsb
add
jle
out
rclb
xchg
lds
adc
dec
in
mov
int3
je
cmp
pop
frstor
fsubrl
fsubl
xchg
sbb
rorl
inc
pop
inc
stos
popf
push
xchg
scas
adc
jno
insb
enter
jae
movsl
pop
pop
push
call
sbb
mov
push
in
pop
mov
aam
sub
cmc
bound
fimull
sub
rcrb
ja
mov
cmp
pushf
cmpb
add
xor
xchg
dec
dec
xchg
notl
push
test
xlat
cmpsb
push
mov
movl
add
mov
mov
int
rcrl
add
int
lds
add
add
push
pop
xor
cmp
inc
call
xchg
addr16
add
add
add
pop
pop
mov
out
andb
jns
mov
std
xor
imul
jae
and
mov
dec
xor
sub
dec
or
ficompl
int
dec
mov
data16
push
add
jmp
and
add
jp
bound
jg
dec
roll
and
data16
loopne
fsubrs
pop
movsb
lock
loopne
cltd
sbb
gs
pop
cmp
dec
mov
inc
mov
mov
test
and
jb
call
mov
and
neg
inc
push
outsl
test
popa
mov
clc
insb
clc
shl
jno
cli
xchg
jnp
xchg
and
xchg
sub
or
sbb
xor
inc
out
js
adc
cmp
cmp
sbb
popa
movsb
jecxz
xchg
test
mov
es
les
mov
arpl
daa
jg
mov
add
add
add
mov
sub
fs
pop
pusha
xchg
gs
mov
adc
ret
jno
or
jmp
imul
aas
xchg
dec
xchg
cmp
cltd
enter
inc
jbe
mov
cmp
xchg
jecxz
stos
decl
inc
inc
sbb
pop
dec
daa
enter
jae
test
mov
cli
icebp
in
icebp
fsubrs
mov
aaa
sub
jbe
sbb
pop
addl
cmp
pop
insl
imul
ret
or
sbb
push
pop
shrl
mov
adc
mov
mov
enter
fisubl
imul
push
push
add
or
pop
dec
and
repnz
adcb
inc
or
lret
scas
or
loop
mov
push
cmp
mov
in
and
inc
or
cmp
xchg
orl
or
sub
aas
xor
dec
or
pop
stc
out
push
pop
bound
mov
add
add
shll
sbb
and
mov
inc
add
rolb
and
jb
aaa
mov
sbb
orl
push
add
xchg
adc
jl
xor
ss
mov
lcall
mov
cmp
xor
icebp
movsb
xor
out
hlt
pushf
push
jb
and
mov
adcl
je
mov
xor
add
and
push
aas
mov
xlat
add
inc
cmp
lret
pop
mov
xlat
aad
dec
cmc
push
repnz
aas
cmpl
xchg
push
scas
rcl
mov
loopne
movsl
cmp
aad
xchg
icebp
push
pop
testb
push
xchg
jmp
cmp
and
jae
xor
fwait
rcrl
or
test
mov
stos
push
jno
xor
inc
inc
aam
inc
or
stos
stc
adc
insb
mov
add
push
mov
lcall
push
addr16
add
add
add
dec
repz
sub
adc
push
hlt
in
repz
jb
adc
out
xor
mov
mov
inc
push
inc
testl
movsl
xchg
cli
inc
dec
mov
inc
mov
gs
push
jecxz
decb
push
push
push
xor
dec
cmp
inc
and
mov
ss
iret
mov
frstor
sbb
jmp
pop
cmp
out
cmpsb
xchg
enter
test
jns
and
dec
out
pop
mov
ljmp
fstpl
lods
arpl
repz
lds
fsubrl
adc
loop
imul
adcl
cwtl
sbb
sub
leave
xchg
fs
mov
add
out
int3
jp
inc
xchg
jne
fidivrs
call
push
push
mov
arpl
daa
push
cs
fidivs
stos
xor
xorl
insb
lret
call
add
add
add
popf
repnz
mov
mov
testb
movsb
cmpsl
and
or
inc
in
adc
mov
mov
pop
xor
scas
and
dec
scas
mov
inc
pop
repnz
xchg
inc
jns
or
cs
xlat
mov
outsb
push
ret
xchg
ficomps
cmp
cs
or
mov
pop
lock
and
pushl
xchg
xchg
and
sub
dec
jg
jmp
stc
test
shr
cs
jae
mov
push
mov
mov
add
add
sbb
and
jnp
xchg
data16
dec
mov
movsb
pusha
push
dec
sub
sbb
sbb
pop
jnp
mov
cmp
bound
lods
fdivl
adc
jb
loope
dec
pop
lret
and
dec
pop
pop
sbbl
fstp
rorl
adc
add
add
add
fdivs
add
lahf
pop
mov
jp
lret
xorl
ljmp
or
and
out
cmp
cmp
in
fcomp
and
cwtl
mov
mov
cmpsl
mov
push
popa
cli
sub
inc
add
push
xchg
inc
stc
cmp
dec
xchg
test
push
push
call
sub
jb
stos
lock
lds
rcrl
hlt
mov
ret
lds
xchg
ss
insl
dec
or
cmp
loope
jge
call
ret
out
sbb
or
cmpsl
mov
cmp
push
push
div
std
dec
add
pop
and
pushf
pop
sbb
xor
mov
shrb
mov
test
jae
dec
mov
insb
mov
arpl
les
ljmp
add
add
in
mov
jecxz
out
mov
insl
loope
addr16
add
call
add
stos
push
bnd
in
dec
dec
out
insl
sti
rcl
aas
adc
je
mov
sub
aaa
dec
sarb
addr16
jne
test
xor
leave
mov
loop
icebp
xlat
call
sub
mov
jno
dec
pop
mov
stos
fildl
jnp
jns
mov
shll
imul
or
sbb
add
cmp
aam
cld
jmp
xchg
push
out
cmp
call
ret
inc
mov
ljmp
insb
xchg
faddl
xchg
jmp
inc
adc
sti
lret
cli
jl
pushf
nop
sbb
rcrb
cmp
cld
mov
mov
mov
adcl
pop
add
cmp
stos
jno
jne
sarl
sub
iret
adc
fcoml
cmc
cmp
push
pop
jecxz
lret
lcall
outsb
cld
in
add
add
push
xchg
test
jg
into
lret
orl
add
add
cltd
cwtl
jg
jno
outsb
inc
jne
lret
lods
stos
iret
imulb
cmp
dec
int
push
jmp
fwait
pushf
mov
fmuls
imul
jmp
push
dec
arpl
sbb
and
cmp
in
rorb
outsl
ret
jnp
xchg
or
xchg
mov
js
pop
das
jle
push
movsl
dec
mov
xchg
mov
inc
jg
mov
dec
into
xchg
stos
in
out
xchg
bound
jge
faddl
stc
mov
fxam
leave
xchg
sbb
cmp
sahf
adc
jl
xchg
pop
xorb
adc
lahf
or
arpl
rcrl
iret
je
mul
xchg
dec
xor
push
cs
outsb
popa
icebp
sbb
stos
mov
mov
je
mov
dec
and
mov
and
inc
pop
mov
loop
out
fimuls
mov
mov
test
adc
ficoml
lock
in
lcall
jae
dec
mov
sbb
fbld
add
add
add
xor
lea
pop
add
outsl
cmp
push
sub
insb
rorb
mov
adc
stos
sub
lahf
pop
push
mov
dec
mov
mov
popf
movsb
sub
stos
data16
insl
or
cmp
pop
and
mov
fmul
pop
fistl
push
xchg
jne
mov
pop
dec
push
jp
out
shlb
xchg
popa
mov
cmp
mov
repz
mul
pop
xlat
pusha
adc
add
push
mov
lods
and
and
xchg
loop
and
fs
cmpsl
call
mov
mov
jns
andl
movsb
sbb
push
fsub
xchg
xor
jg
loope
cwtl
call
and
jmp
test
aad
popa
jnp
jg
popf
dec
in
pop
leave
mov
test
stc
xchg
xchg
mov
mov
add
dec
or
jg
dec
arpl
les
add
add
add
jl
jmp
mov
clc
sti
jp
push
xchg
sbb
stc
dec
mov
call
xor
adc
rcrb
jbe
xor
dec
sub
in
out
inc
mov
shlb
mov
adc
ljmp
es
lret
xor
dec
cmc
sahf
add
inc
clc
inc
fcoml
cltd
and
ljmp
inc
enter
mov
in
or
dec
mov
lret
lods
xlat
repnz
call
sbb
mov
insl
and
sbb
jno
xor
cmp
dec
cmp
hlt
xchg
jp
jo
mov
iret
sbb
loope
test
idivl
das
mov
xor
mov
lret
cmp
test
lret
test
call
je
daa
lods
dec
sbb
jl
dec
popa
repz
jecxz
push
jae
lds
add
out
idiv
outsl
mov
sbb
mov
add
add
lods
sub
gs
dec
out
inc
jl
and
lea
js
jno
sbb
jp,pt
fdivrs
pushf
mov
stos
daa
pusha
out
jbe
mov
sbbb
hlt
andnps
aaa
add
rolb
and
sub
xchg
lock
jmp
mov
popa
mov
jmp
addb
loope
jge
scas
xor
cmpsb
cmpsb
jmp
mov
sbb
sub
pop
jl
xor
daa
add
sub
daa
mov
jns
pusha
sbb
jns
into
jmp
aas
push
fsubrp
mov
data16
sbb
jg
xor
jecxz
enter
mov
inc
xchg
lds
pop
inc
jns
or
cmpsb
push
and
gs
cs
push
xor
mov
inc
insl
lods
mov
lods
sbb
testl
push
mov
out
ss
pop
repnz
cmp
out
and
add
inc
fbld
mov
pop
cltd
lahf
push
and
add
add
add
pop
xchg
add
dec
jp
iret
or
pop
repz
push
loope
mov
in
ficomps
xor
fdivrl
cmp
jl
xchg
mov
sbb
lds
jbe
data16
or
cmp
out
push
lahf
or
sbb
std
xchg
lds
in
in
push
popf
dec
dec
lahf
mov
xor
sub
iret
mov
jge
mov
inc
cld
adc
push
jo
mov
out
stos
adc
cmp
inc
cmc
sbb
xor
lods
pop
dec
ret
mov
es
daa
fistpl
mov
sub
imul
and
dec
loop
pop
or
gs
popa
leave
jmp
add
push
adc
mov
dec
in
sbb
rorb
aad
repnz
xchg
or
cs
xchg
das
mov
jl
add
out
push
dec
dec
jg
mov
outsl
xchg
fistpll
scas
movb
add
push
push
call
rorl
ljmp
add
add
jnp
push
or
stc
push
je
jno
or
insb
push
push
fldenv
test
adc
xchg
xor
adc
mov
dec
mov
mov
add
jo
mov
add
iret
push
inc
rorb
aas
inc
add
xlat
add
divb
jl
cmp
loop
add
push
add
xchg
aam
and
lahf
mov
sub
lcall
lahf
bnd
or
stos
divl
sbb
xchg
mov
daa
test
lret
inc
mov
leave
outsb
cmp
mov
into
insb
pop
test
xchg
and
cltd
mov
sbb
or
push
lea
xchg
xor
in
outsl
xchg
ret
jmp
addb
into
movsb
cmc
loop
orl
mov
into
std
sti
leave
sti
iret
jmp
push
addr16
add
mov
int
push
push
or
mov
and
dec
dec
lret
mov
arpl
sar
dec
inc
mov
lods
and
mov
mov
lret
pop
test
or
cltd
lods
mov
sub
popf
xchg
dec
ljmp
loope
movsb
aam
fwait
js
mov
cmp
cmp
and
mov
lret
xchg
divl
mov
dec
addr16
dec
lods
mov
adc
mov
shlb
sbb
daa
dec
mov
int
mov
sti
stos
push
in
sub
push
cld
sbb
mov
sub
mov
arpl
fistps
dec
fsts
mov
and
and
popa
inc
inc
adc
arpl
mov
out
mov
push
cmp
imul
add
mov
xor
and
rolb
add
add
mov
sti
dec
nop
test
cmpsb
mov
adc
repz
push
fsubl
pop
dec
icebp
jle
cmpsl
mov
iret
xchg
adc
xor
lock
gs
add
xchg
les
and
push
sub
sub
scas
pop
adc
pusha
push
jg
jno
dec
outsb
or
iret
dec
roll
cvtps2pi
incb
cmp
mov
inc
or
mov
sbb
push
fisubrs
pop
lcall
stos
idivb
pushf
mov
push
or
jo
aad
or
in
shld
push
int3
sub
cmp
cmp
lcall
rcr
mov
fcmovnu
hlt
adc
add
mov
hlt
xor
pop
in
int3
imul
enter
or
push
adc
xlat
lods
orl
cli
inc
fistps
adc
mov
fwait
mov
or
jg
mov
sahf
loop
lret
clc
lds
add
add
scas
jecxz
jg
jne
mov
lock
js
add
push
or
dec
mov
cltd
mov
clc
mov
sub
lods
or
rol
push
sbb
jg
testl
dec
bound
mov
popf
pop
jecxz
jb
mov
add
loop
loop
pop
mov
in
je
jbe
dec
inc
sub
jp
dec
adc
jbe
xor
rolb
out
xor
pop
cmp
sbb
xchg
xor
pop
enter
mov
mov
lcall
jo
mov
pop
clc
mov
cld
mov
cld
mov
or
in
jno
filds
cwtl
hlt
xor
or
pop
stc
xchg
imul
adc
aam
xor
cmp
fnstsw
cmp
xchg
loopne
mov
push
push
fwait
pushf
jne
out
mov
push
outsb
cmc
xor
push
cld
pushl
cld
sbb
addr16
add
add
mov
cwtl
push
xchg
push
or
cmp
enter
and
cmp
dec
sahf
or
add
add
shlb
jne
cld
push
movsb
jl
mov
mov
stc
sbb
icebp
les
xchg
lods
pusha
int3
xchg
jp
je
sub
jns
lret
lcall
fdivr
and
add
cmpsl
jns
out
orl
outsl
adc
jnp
sbb
cmp
sbb
pusha
repnz
and
sub
scas
xchg
inc
in
lods
stc
bound
push
lret
mov
adc
in
movsb
leave
pusha
jl
inc
inc
cwtl
fwait
lods
mov
in
das
mov
cmp
ret
das
bound
mov
adcl
int
fimull
shll
jmp
test
mov
xchg
outsb
ja
inc
lds
aaa
jmp
scas
xor
arpl
jbe
jge
pop
iret
adc
mov
stc
sub
and
add
add
pushf
shrb
lcall
pop
ret
mov
add
add
mov
in
loope
aad
std
push
and
shll
leave
cmp
gs
push
sub
jb
push
push
imul
sub
jbe
xchg
call
ja
push
movsl
xor
cli
nop
adc
leave
gs
push
aas
push
push
popa
mov
sub
add
ret
and
clc
push
cmpsb
or
sbb
xchg
xor
test
adc
das
push
cwtl
xchg
or
mov
dec
scas
test
mov
shlb
add
int3
cmp
lods
lock
outsl
push
sub
pop
aaa
cmp
inc
and
inc
mov
or
mov
and
adcb
movsl
scas
cmp
stos
mov
fwait
cmp
sub
mov
lret
mov
jnp
movsl
stc
sub
insl
push
pop
add
push
push
xorl
out
sub
scas
mov
aas
scas
fldenv
les
add
add
add
mov
aad
icebp
xor
ljmp
call
pop
mov
fdivrs
int3
cli
sarb
xlat
inc
imull
cmp
fildll
xchg
push
mov
xor
adc
mulb
test
rclb
inc
mov
jns
xchg
cmp
loope
pop
loopne
ret
or
into
dec
xor
fildll
ja
dec
data16
xor
add
stos
mov
les
xchg
lods
jb
adc
stos
and
pop
xchg
xchg
mov
mov
pop
out
rorl
outsl
pop
mov
jge
test
aaa
pushf
jl
rcrl
xchg
lods
sbb
fcmovnbe
jae
sbb
addr16
jne
add
cmp
add
pop
sbb
jbe
fimuls
pop
jnp
cmp
imul
flds
repnz
stos
push
dec
sub
mov
add
jne
jne
jg
loop
mov
lods
lds
add
add
add
cmpsl
in
xor
jg
jbe
adc
pop
xchg
test
pop
cmc
into
pop
pop
push
xchg
xor
stc
mov
fcmovne
loopne
and
push
subb
push
cld
mov
in
scas
fmull
rorw
cmp
inc
dec
aas
pusha
repnz
dec
sbb
cmp
shll
es
and
ret
daa
leave
inc
xor
add
or
aas
jnp
dec
jns
mov
mov
mov
lds
stc
ja
add
mov
or
jmp
or
mov
sti
add
out
fmull
cmpl
in
sbb
into
adcb
repnz
fidivrl
lret
mov
cmp
pop
add
mov
and
nop
mov
out
xor
repz
jge
mov
loope
mov
mov
add
add
dec
pop
mov
cmc
mov
sub
add
add
add
in
dec
xor
mov
loope
adc
iret
mov
nop
addb
pop
out
in
adc
xlat
shrl
add
stc
jle
inc
or
pop
icebp
es
rcl
cmc
popf
call
jb
sbb
push
xlat
push
cmc
jb
fbstp
lcall
icebp
into
sbb
adc
imul
arpl
xchg
mov
push
push
pop
ffreep
fildl
mov
dec
cld
pop
dec
lock
sub
rcrl
inc
pushf
test
loopne
es
sub
inc
lock
pop
into
cmpsb
inc
outsl
mov
addr16
je
dec
sbb
push
push
jae
push
fbld
ss
cmp
scas
jl
sub
shll
imul
mov
ljmpw
inc
fucomip
pop
aas
paddd
out
cmpsb
shlb
pop
dec
dec
test
ror
pop
cmpsb
bound
les
loop
adc
add
add
outsb
jle
lods
testl
movl
add
add
lods
or
sub
jb
inc
sbb
out
jae
jno
fnstsw
mov
or
mov
stos
push
jg
in
and
aad
push
shrb
pop
lods
fwait
jmp
xor
insb
mov
test
mov
pop
cmpsb
sbb
popa
cld
dec
jle
pop
mov
dec
xchg
xor
movsl
fldt
imul
pop
mov
push
popa
rorb
pop
adc
mov
lds
mov
loopne
sbb
xchg
mov
mov
int
fisubl
push
int3
dec
shrl
jbe
sub
stc
notl
mov
pop
sti
negl
cmp
cmp
or
shlb
leave
ja
mov
pusha
int3
mov
push
xchg
scas
addr16
mov
push
cmpsl
mov
imul
or
stc
xor
iret
mov
mov
jmp
sub
and
int3
scas
ret
popf
add
in
add
add
mov
xchg
insb
xor
add
add
add
jmp
pop
add
dec
cmp
test
mov
cmpsb
scas
adc
enter
gs
cmpsb
xor
jae
imul
cwtl
sub
das
iret
test
pop
or
xchg
and
incl
mov
jle
sub
ja
mov
ja
loopne
ret
mov
cwtl
fbstp
add
pop
xchg
jb
shrl
data16
cmpsl
pop
clc
in
cmp
xlat
sbb
int3
loope
add
mov
fimuls
outsl
sub
inc
push
or
xchg
insb
dec
stos
inc
xchg
insb
sbb
inc
inc
push
xchg
mov
dec
mov
push
jns
jmp
test
pop
sbb
lea
sub
stc
outsl
cmp
outsl
stos
les
dec
enter
pop
mov
sub
xchg
out
xchg
pusha
in
jo
jbe
mov
in
push
enter
movsl
cli
les
daa
mov
push
xchg
aaa
std
xor
test
sbb
xlat
in
aad
mov
add
add
add
adc
stc
mov
scas
test
xor
movsl
addr16
cltd
sahf
test
mov
js
dec
cmp
inc
add
cli
lock
jno
fs
adc
lret
in
and
add
lds
jnp
test
push
sub
fwait
cmpsb
add
sbb
pop
mov
mov
pushf
ja
adc
xlat
mov
xchg
jg
jns
jno
iret
movsl
cs
popl
hlt
loope
shrl
inc
push
fs
lret
mov
add
js
mov
call
cmp
and
push
andl
imulb
outsl
or
jne
sbb
adc
cmp
cs
test
jge
add
cmp
shrb
jnp
xchg
test
ret
add
lods
gs
sub
into
cmpsl
in
lock
pop
sub
mov
push
ret
scas
pop
call
push
cmc
test
push
adc
sub
ds
sub
cmp
jg
and
mov
push
add
add
add
dec
rcrl
fwait
dec
outsb
push
xchg
and
test
adc
pop
sbb
adc
xchg
adc
push
xor
scas
imul
jno
lret
or
sahf
lds
mov
lods
mov
dec
test
movsb
push
dec
adc
or
popf
jb
test
and
jbe
dec
iret
pop
cli
inc
mov
fsubp
and
les
enter
enter
pop
sub
pop
push
lcall
arpl
push
std
push
dec
lcall
jo
data16
adc
adc
out
sbb
and
lret
mov
out
xor
popa
stc
jl
lret
mov
dec
push
push
push
add
das
inc
sub
adc
add
movsl
cli
mov
push
lea
or
daa
test
mov
sub
add
add
xor
fistpll
out
repz
fcoms
xchg
push
add
add
add
add
jle
dec
les
jbe
ljmp
xchg
fisubrl
push
mov
xlat
sub
fcomip
scas
inc
mov
shrb
andl
das
inc
jne
add
mov
imull
in
jae
std
mov
test
int3
mov
pop
clc
sahf
adc
dec
rorb
lcall
jecxz
int
repnz
adc
jl
adc
xor
jl
mov
ret
inc
mov
xor
mov
into
inc
sahf
mov
imul
in
daa
mov
out
mov
sbb
pop
mov
xor
push
fidivl
pop
in
cmp
out
decl
xchg
jne
adc
or
nop
out
adc
icebp
outsl
cmp
xor
daa
dec
cmp
mov
sbb
dec
test
sub
sarl
pop
jns
rolb
jno
inc
int
mov
mov
mov
popa
es
adc
add
add
pop
dec
inc
fdivrs
pushl
mov
in
int3
and
jae
lods
mov
xchg
es
xor
adc
inc
aaa
push
bsr
jae
ficoml
and
pop
cmp
or
sbb
mov
loope
int3
mov
or
dec
lock
in
mov
inc
adc
push
mov
clc
or
aad
mov
sbb
cmp
push
insl
sub
sahf
std
rcll
and
push
leave
repz
push
movsl
inc
jmp
jb
into
test
cmc
inc
dec
out
jno
mulb
mov
jns
inc
add
sub
hlt
add
sub
dec
sub
add
jg
loop
cs
pop
lcall
cmc
mov
and
jno
mov
stc
enter
in
sbb
push
inc
push
je
dec
addr16
add
add
add
popf
xchg
add
pop
mov
inc
or
test
imul
sbb
jmp
and
pop
iret
mov
or
pop
fisttpll
inc
mov
cmp
mov
out
mov
lods
decl
das
gs
mov
push
iret
lods
aaa
out
movsl
cmpsl
movsb
lret
outsb
ja
cltd
lret
or
sti
mov
shrl
pop
add
outsl
jle
gs
lods
outsb
data16
cmpsl
dec
clc
and
or
or
rolb
addb
rorl
shrl
fistps
pop
in
sbb
xor
std
sub
int3
sub
imul
mov
add
sub
lods
jl
fwait
adc
push
inc
push
push
lret
in
mov
lea
mov
cmpsl
aas
or
out
js
add
jmp
ret
xchg
jnp
out
stos
hlt
dec
mov
xor
push
sub
add
add
imul
cmc
call
inc
push
popa
pop
sub
mov
add
add
test
xchg
int
push
adc
and
pop
daa
stc
cld
fists
cmpsb
das
ljmp
jbe
and
outsb
add
jmp
sub
mov
sub
test
pop
xchg
mov
arpl
addl
jl
xlat
mov
push
lret
sub
sahf
xor
dec
lods
mov
insb
iret
repnz
mov
fistps
mov
jecxz
cmp
das
cmp
movsb
pusha
adc
or
or
adcb
and
loope
push
push
add
imul
pop
dec
sub
push
js
pop
and
push
cltd
out
movsb
stos
out
dec
vpacksswb
sub
adc
sub
push
or
adc
push
pop
xor
jne
pop
push
lret
pop
js
jl
or
movsl
mov
iret
sub
lods
clc
push
addr16
add
add
add
cwtl
inc
sub
xchg
test
jae
sub
cmp
push
adc
roll
pop
dec
gs
cltd
fisttpl
push
mov
loope
aad
sub
ja
jbe
dec
data16
inc
fwait
gs
xchg
call
jge
loop
loop
jne
or
jle
sub
pop
negb
jmp
imul
xor
pushf
inc
fwait
jo
mov
cmpb
fmul
inc
fisttps
cmpsb
mov
mov
movsl
cmp
pop
cli
ficoms
and
fstpl
push
mov
daa
inc
fwait
in
jl
aam
ficomps
mov
icebp
popa
call
mov
and
test
jmp
xchg
xchg
sbb
or
hlt
dec
shll
jge
jg
repz
int
push
dec
and
fisubs
iret
nop
jg
pusha
mov
lea
inc
cltd
or
dec
orl
flds
daa
hlt
xchg
mov
out
out
out
into
gs
cld
test
enter
rolb
add
add
add
pop
repz
hlt
das
mov
pop
cmp
cmpl
jl
fwait
movsb
mov
adc
xchg
adc
cwtl
ja
out
cmpsl
sbb
jne
adc
pop
aam
arpl
scas
jecxz
mov
cwtl
rclb
inc
jo
aad
add
in
pop
push
repnz
jp
scas
xor
js
dec
scas
pop
jno
popf
jns
cmpxchg
push
in
js
fnstsw
and
push
jmp
jmp
mov
push
enter
push
push
cld
jmp
es
xchg
mov
popa
popf
add
adc
jbe
jecxz
push
in
std
std
pop
or
pop
sub
cmpsl
cmc
andl
in
pop
cmp
popa
ds
cmp
aas
adc
lds
push
imul
in
fisubrs
jae
mov
mov
fwait
ljmp
into
or
add
loopne
and
je
out
mov
xchg
stc
roll
add
add
add
into
mov
push
mov
add
fstl
in
mov
or
cmc
and
mov
sbb
or
arpl
inc
adc
xchg
mov
out
ds
lds
mov
jmp
mov
pop
cmc
enter
out
gs
movsb
loopne
fmuls
push
mov
das
cmp
pop
add
inc
aaa
xor
cmc
pushf
mov
fwait
loop
mov
arpl
icebp
int
xchg
mov
mov
je
out
mov
aas
and
jns
jle
sti
jo
fcomps
push
jmp
pop
bound
push
jg
push
ds
in
into
shl
popa
stos
mov
js
xchg
add
shlb
mov
mov
out
sbb
mov
call
push
sbb
cmp
cmp
sbb
jo
xchg
push
mov
xor
xor
cmp
imul
jp
mov
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
cmpsb
mov
sbb
add
add
add
add
sti
pop
loope
cmp
repz
mov
lods
mov
mov
pop
into
add
dec
pop
fwait
inc
cmp
push
bound
add
popa
sub
ret
mov
and
cmp
lock
aad
mov
adc
push
insl
cltd
or
loope
out
testb
es
pop
cmp
push
inc
add
std
int3
leave
ret
rcl
inc
pop
mov
fcomps
mov
push
mov
stc
sub
lret
sbb
mov
fst
push
jle
call
add
jb
pop
push
or
adc
or
call
lock
or
or
and
test
mov
pop
rcr
inc
sbb
sub
insb
and
pop
lret
lds
in
loop
in
out
jnp
dec
pop
pop
xchg
push
sub
hlt
loop
dec
bound
or
call
out
lahf
ret
or
dec
into
roll
add
add
add
mov
enter
ljmp
mov
dec
lds
push
popa
push
sbb
dec
add
cmc
out
cmp
cmp
adc
pop
test
sub
mov
cmp
lahf
or
out
lods
and
gs
mov
cmp
mov
xlat
loopne
and
xor
pop
jge
insl
cli
sub
filds
loop
lret
and
es
outsl
es
into
dec
clc
jno
mov
shll
mov
fs
sub
cmp
imul
dec
mov
xor
hlt
mov
inc
push
stos
fwait
sbb
xchg
mov
cmp
xor
out
shll
insl
scas
icebp
push
jno,pn
ret
insb
out
gs
or
fadds
test
jae
inc
inc
xchg
daa
cmp
push
push
cmp
adc
mov
mov
mov
pop
xchg
or
push
add
add
add
addr16
cmp
rsm
jp
mov
daa
popa
add
inc
cmp
and
jno
fnsave
xchg
dec
inc
out
jg
fmull
mov
fs
inc
cmp
mov
call
imull
rorl
lods
jno
add
fwait
aam
dec
hlt
aad
push
cmc
nop
push
push
sbb
testl
cmc
rclb
pop
divb
cmp
or
jne
cmp
add
lret
call
lcall
sbb
js
inc
in
into
hlt
fs
and
mov
mov
pop
and
jle
sti
push
sahf
jb
sbb
xor
out
sbb
push
shll
enter
mov
mov
fidivrs
lret
push
mov
lahf
mov
outsb
scas
mov
jno
push
adc
push
inc
fcomps
or
in
pushf
repz
lret
je
inc
pop
inc
cli
xor
add
sbb
sub
dec
jno
adc
addr16
add
add
add
loope
mov
jmp
pop
adc
jecxz
rolb
test
mov
aad
inc
adc
or
jl
cmp
mov
mov
cmc
popa
mov
xchg
je
ss
clc
lahf
mov
stc
lahf
sub
adc
inc
pop
in
out
push
pushf
adcl
ja
pop
in
push
stos
cld
es
xor
push
and
in
push
loopne
addr16
outsl
mov
lods
xor
push
xor
cli
cmpsl
sarb
mov
mov
call
iret
and
mov
inc
out
push
pop
dec
mov
cmpsb
clc
mov
enter
mov
mov
ljmp
aad
add
cmp
stc
push
arpl
loopne
imul
sbb
push
enter
mov
xchg
xchg
sub
push
out
sbb
add
add
ds
jae
addr16
addr16
add
add
add
stc
sbb
test
popa
adc
ret
subl
sbb
dec
adc
mov
xchg
addb
cmp
pop
es
add
mov
arpl
sbb
push
xor
outsb
cmp
xor
xchg
xchg
cmp
sub
repz
cld
mov
xor
push
aas
mov
dec
adc
or
jns
popf
iret
aad
imul
push
inc
addr16
dec
pop
add
push
adcb
test
cmp
inc
jns
cmp
incl
je
in
repz
addr16
push
enter
into
pop
xchg
lods
add
dec
lods
jbe
test
push
les
into
mov
in
popa
fstl
mov
add
push
push
xchg
xorb
cmp
subl
orb
fcmovb
cli
sbb
add
xchg
and
idiv
lahf
insl
mov
mov
add
add
add
mov
adc
or
cmp
fwait
pop
sahf
pop
mov
or
imul
sub
addr16
in
js
mov
or
mov
mov
insb
push
pop
outsl
flds
jne
cvtps2pi
cmpsb
idivb
test
std
ljmp
sub
into
rolb
pop
jge
ss
std
idiv
mov
into
pop
or
pop
or
xlat
sahf
jmp
sbb
dec
pop
repnz
xchg
outsl
lods
pop
push
test
xchg
push
inc
std
add
daa
mov
mov
imul
mov
jecxz
mov
jmp
icebp
adc
fwait
pushf
stos
pop
negb
aad
cmpsl
mov
push
scas
jp
inc
xor
jle
xor
xchg
pop
cld
and
cli
push
testb
sarl
xor
cmp
jg
leave
or
dec
lock
fadds
add
add
add
and
mov
inc
jl
xlat
adc
aaa
repz
rorl
aas
dec
addb
mov
rol
adcl
jo
push
dec
jecxz
cmpsl
add
fisubl
fwait
loopne
inc
xchg
cmovb
insb
cmp
movsb
outsb
dec
xor
sub
sub
push
xchg
fcoml
ljmp
sarl
sub
lret
and
test
imull
js
cmc
xchg
jmp
cli
xchg
mov
mov
pop
pop
inc
popf
fisubl
cmpsl
pop
mov
jno
fs
cwtl
sub
arpl
sbb
lods
and
add
pop
test
ret
jnp
dec
out
jbe
jb
push
dec
mov
test
lds
hlt
xchg
jg
or
mov
sub
mov
mov
sbbl
push
cwtl
jne
mov
xor
je
adc
sbb
scas
adc
mov
test
add
int
out
out
imul
nop
xchg
movsb
fistl
add
add
add
add
push
cltd
inc
pop
add
aaa
push
pop
ret
adc
pop
int
int
cli
jne
fcompl
pop
js
mov
pop
addb
pop
adc
pop
cmp
movsl
hlt
push
push
or
add
loopne
push
aas
das
cltd
test
loop
xor
pop
mov
or
fisubs
jae
cmp
ss
popw
mov
movb
xor
shl
cwtl
in
fcos
lea
sahf
sub
aad
mov
cld
lret
jle
dec
inc
jge
xchg
gs
movsl
jmp
fwait
pop
out
mov
or
sub
fcoml
or
xchg
xchg
jl
jnp
int
lods
push
enter
ja
mov
lock
ds
pop
adcl
jbe
sbb
test
pushl
cmp
inc
adc
mov
lea
ret
popf
int3
cld
jb
add
add
psubusw
push
in
sub
test
add
add
xor
repz
jno
pop
stc
and
xchg
push
cltd
mov
out
clc
int
and
or
dec
outsb
popw
pop
in
hlt
adc
mov
push
sbb
gs
pusha
paddb
mov
xor
lcall
aam
jb
and
and
sbb
hlt
or
jl
in
in
iret
pop
or
lcall
call
fwait
add
mov
cmp
pop
mov
lods
and
fs
xor
jne
mov
and
xchg
sarl
sahf
pop
mov
rolb
adc
and
popa
mov
fisttpl
rcrl
lret
das
das
mov
mov
push
mov
pop
in
xor
cmp
pop
out
repz
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
xchg
fildl
add
add
add
repz
fcompl
loop
in
rcrl
fwait
mov
cmp
cld
imul
rcr
push
or
inc
mov
pop
aam
repnz
add
inc
pop
dec
fbstp
outsl
add
popf
adc
adc
je
insb
enter
mov
out
stos
xchg
shlb
mov
ss
mov
inc
ds
outsb
inc
or
or
pusha
and
aam
repz
movsb
push
test
or
pop
or
stc
aas
dec
mov
psubusw
inc
xchg
add
and
xchg
pop
xchg
push
in
add
movsb
inc
xor
push
jns
dec
mov
or
push
sbb
add
arpl
pop
sbb
xchg
fisubl
shlb
shlb
jle
pop
imul
cmp
or
pop
dec
jle
jg
std
fstpt
mov
leave
faddl
add
add
add
bound
ljmp
int3
test
outsb
mov
pop
mov
dec
iret
aad
insb
data16
lds
stos
xor
push
sub
outsb
andl
or
and
pushf
jle
add
iret
sub
push
or
addr16
mov
push
jmp
pop
in
cmp
add
inc
push
cmp
cmp
movsb
test
js
cmc
js
cmc
daa
dec
out
jge
pushf
dec
or
or
jmp
jecxz
xchg
mov
cmp
inc
outsb
fstpl
js
mov
cmp
push
lcall
jne
sbb
inc
aas
hlt
mov
mov
push
mull
pusha
add
xor
test
cmpsl
enter
test
and
fstl
repnz
add
push
cmc
xor
cmpsl
cmp
ljmp
xchg
push
ret
fldl
add
add
add
add
xor
mov
xor
lods
arpl
rorl
ds
pop
adcl
mov
jmp
insl
pop
ds
lret
push
nop
outsb
sub
push
insb
loope
int
jle
aas
mov
int
cmpl
je
adc
pushf
roll
cmp
sub
fs
jle
mov
fnstenv
mov
dec
out
fldcw
pop
push
loope
push
movsb
test
adc
aam
push
vmread
adc
mov
pop
js
aad
mov
pop
jp
or
push
mov
test
int
das
outsb
or
mov
mov
pusha
xlat
rdmsr
inc
leave
xor
or
and
test
adc
mov
push
stc
int
mov
aaa
cmpsl
push
out
lds
hlt
xchg
mov
popa
shlw
orb
add
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
gs
sub
jp
lea
bound
lret
sub
imul
adc
add
sbb
nop
cmpsl
clc
push
xlat
xchg
push
enter
mov
loope
dec
sub
lahf
push
inc
outsl
mov
sbb
add
popa
jge
mov
sar
lahf
bound
and
xchg
cmpsw
jbe
cld
pop
popf
inc
pop
adc
or
lods
fcompl
push
cmpsl
add
cmp
cmp
push
leave
sbb
sub
ficoms
sbb
ljmp
scas
xchg
iret
sbb
outsb
add
mov
mov
push
stc
cmpsl
out
adc
and
jl
movsl
push
imul
add
ret
lods
aad
jp
push
xor
stc
jp
xor
push
aas
fimuls
daa
aam
fidivrs
mov
jns
je
dec
rol
aam
cmpsl
fimull
faddl
inc
daa
filds
add
add
add
xchg
dec
xchg
into
jo
xchg
loope
idivl
shll
cmpsb
insl
sub
lahf
cld
lcall
pop
mov
mov
stos
push
xchg
xlat
enter
cli
test
notb
or
addr16
mov
jp
mov
pop
add
data16
aaa
xor
loopne
les
repnz
adc
cmp
mov
inc
and
xchg
xor
mov
or
dec
dec
out
in
xchg
or
insb
lret
sub
and
das
add
js
jbe
xor
shr
add
cltd
cmp
jae
jns
jle
insb
shlb
inc
sub
mov
push
cmp
je
sbb
sarl
js
lds
push
mov
cli
jns
rclb
xchg
mov
cmp
pop
mov
daa
mov
int
cmp
mov
add
scas
sub
jg
mov
lcall
fisttps
or
loopnew
add
add
add
in
xadd
dec
push
fcomp
pop
mov
call
jne
cmpsl
rorl
fists
cmp
dec
and
out
repnz
add
shrb
xlat
mov
xchg
aad
lcall
mov
pushf
sub
mov
out
pop
and
jnp
cwtl
sbb
call
fisttps
jno
lcall
adc
es
pusha
imul
xchg
lahf
adc
dec
jmp
nop
cmpsl
adc
shll
lock
lods
fwait
aad
mov
mov
loopne
ljmp
sbb
dec
sub
xor
repnz
sbb
fldcw
jb
mov
push
stc
and
pop
sub
xchg
test
jp
ljmp
add
xchg
fmull
je
addb
fdivrs
iret
jl
mov
cwtl
cmp
adc
add
addb
add
sbb
jns
xchg
xchg
mov
pop
das
leave
loopew
add
add
add
push
push
ja
sbb
or
repnz
mov
inc
int3
out
movl
lods
aaa
loop
adc
std
inc
mov
rorb
scas
push
cmp
mov
int3
inc
ds
cli
movsl
jmp
out
ss
testl
cmc
jmp
cmp
cmpsb
inc
mov
jae
lods
push
stos
pusha
xchg
mov
and
push
inc
mov
adc
int
sbb
xchg
movsl
cmc
mov
es
cli
xor
dec
hlt
dec
fmull
dec
dec
mov
jp
xlat
cli
cmpb
mov
lods
push
adc
jne,pt
pop
lea
stc
and
adcl
cmc
inc
arpl
lret
mov
jns
push
scas
cmc
sbb
negl
xchg
mov
sub
cmc
mov
jecxz
in
dec
mov
jge,pt
or
mov
push
sti
push
inc
mov
sahf
ja
mov
imul
jae
fadd
fsubp
jnp
or
cld
out
lock
or
loop
add
add
add
pop
or
cmpsb
dec
addb
xchg
jnp
movsl
push
inc
sbb
push
push
lds
icebp
pop
lock
adc
rcl
loope
cmp
xor
ret
inc
jge
sub
insl
jmp
arpl
movb
pop
inc
cli
mov
nop
stos
and
out
xlat
dec
insl
pop
jo
jo
jle
cmp
adc
adc
ficomps
fcmovnb
xchg
enter
xor
push
out
outsb
and
inc
mov
loopne
cmp
mov
xor
pop
lock
xchg
cli
dec
xlat
sbb
ja
mov
mov
adc
pop
jns
cmp
pop
mov
sbb
or
xchg
insl
xor
jb,pn
rcrb
rcll
repnz
std
push
xor
pop
xor
and
inc
testb
arpl
cmpsb
aaa
adc
ffree
cmp
jnp
cmp
pushf
sti
in
idivl
xor
add
add
sub
cld
cli
jle
dec
nop
xor
add
add
add
in
out
cs
in
push
test
fnstcw
outsb
mov
scas
or
sahf
dec
adc
mov
fstps
sub
into
mov
sbb
insl
cmp
push
push
daa
movsb
fcomps
ljmp
fildl
aaa
pushl
xor
loope
add
add
jecxz
mov
xor
dec
pop
stos
out
test
mov
lea
dec
insb
pop
mov
cmp
jae
sbb
push
fbstp
mov
js
imull
mov
fcomps
cmpsb
xchg
adc
pop
jae
andb
pop
ss
aaa
call
shrl
mov
mov
jp
cmp
xor
in
pop
xlat
xchg
jl
mov
and
cmp
jg
mov
lods
movsb
mov
jo
repnz
les
out
dec
std
sbb
add
add
ja
sti
aaa
out
ja
ret
addr16
add
add
add
cmpl
add
mov
push
xchg
or
sti
or
push
cmc
stc
div
pop
in
mov
fisttpll
sub
cmc
jno
cli
sahf
jne
rolb
bound
cld
popf
loope
imul
int3
bound
push
lret
loope
lock
and
dec
leave
mov
roll
int
mov
or
adc
inc
or
insb
push
mov
lret
xor
cmp
xchg
jb
lds
fscale
imul
or
jl
mov
daa
mov
hlt
pop
dec
scas
mov
dec
fildll
dec
mov
pushf
sub
mov
data16
pop
fcoml
insl
pop
sub
inc
sbbl
iret
dec
gs
shl
stc
inc
xchg
in
movsb
sub
cmp
jno
icebp
aam
lods
jno
dec
pushf
xorb
dec
push
hlt
mov
bound
add
add
into
arpl
pop
xchg
aaa
pushf
test
in
add
add
add
sbb
mov
or
jge
stos
sub
push
aad
mov
aad
arpl
cmpsl
mov
pushf
add
jecxz
loop
sbb
cmp
pop
xchg
aam
xchg
test
jl,pt
stos
mov
aad
xor
xchg
ja
or
repz
inc
repnz
int3
push
or
dec
scas
dec
xchg
and
adc
imul
lahf
lahf
adc
iret
dec
jbe
mov
fdivrl
dec
sub
push
pusha
cld
jb
out
arpl
aad
lds
mov
cmc
sahf
mov
sub
sahf
jne
or
idivl
sbb
push
shl
xor
cmp
rcr
iret
loopne
pop
fs
sub
setge
dec
mov
iret
push
or
sbb
out
push
movsl
negl
cwtl
sbb
inc
cltd
cmc
adcb
fcos
pop
mov
lahf
addr16
add
add
add
cmc
mov
test
cli
pop
sti
xor
dec
add
and
push
xlat
fwait
xchg
cmp
cli
fadds
icebp
mov
insl
jle
sub
and
jecxz
push
push
mov
jbe
mov
fistl
xorb
cwtl
adc
push
pop
add
push
notb
fwait
xor
and
out
or
mov
jecxz
mov
out
repz
jne
add
jbe
sbb
stos
and
or
clc
push
inc
inc
jnp
pop
loope
test
and
jb
cmpsl
stos
dec
shl
jbe
cmpsl
add
mov
xor
sbb
out
out
fistl
lahf
mov
adc
shr
add
inc
in
testl
and
adc
sbb
pop
cmc
aad
inc
jle
and
xchg
inc
gs
inc
mov
lods
add
and
fildll
pop
test
mov
repz
lock
jg
in
and
pop
xor
add
add
add
fs
in
cmp
out
fcmove
repz
pop
fs
sub
in
pop
pushf
push
cmp
xchg
pop
cmp
fs
nop
aaa
xor
pop
xor
hlt
dec
addl
nop
inc
sarb
cmp
xor
loop
xor
leave
lcall
dec
push
fcomps
pop
lds
push
lods
add
movsb
push
jne
loope
xor
jne
or
out
jo
iret
cmpsl
mov
ljmp
push
push
pop
mov
pop
loopne
cmc
fs
dec
pusha
stos
sahf
push
mov
dec
dec
mov
pop
popa
sbb
and
push
jg
test
mov
pushf
and
inc
sbb
mov
cmp
cli
mov
mov
and
sub
sub
jg
mov
dec
in
fisttpll
imul
aam
sbb
cld
ja
mov
jge
in
out
sti
popa
repz
xor
add
add
pop
xlat
fistpl
stos
out
addr16
add
push
mov
jne
scas
cmpsb
adcb
and
mov
inc
das
cltd
adc
mov
lods
pop
fcmovu
jg
rclb
add
outsl
or
pop
pop
pop
int
xchg
orl
loopne
mov
jge
jle
pop
int
insb
and
or
mov
xor
dec
ja
adc
mov
push
fstl
dec
leave
arpl
sub
nop
sub
dec
test
daa
fcmovne
add
sub
cmp
mov
jns
cmovp
add
rcr
sbb
xchg
nop
mov
rcl
pusha
imul
push
pop
lock
rol
sub
ljmp
jo
add
test
xchg
dec
or
leave
push
stc
or
push
mov
xor
les
out
and
in
rcll
sahf
inc
shll
lret
cmc
mov
xlat
add
stos
and
push
out
add
add
mov
dec
js
stc
mov
dec
int
inc
sarl
shll
add
add
add
jecxz
xchg
arpl
cmc
popa
mov
lahf
inc
insl
movsb
mov
xchg
mov
outsl
roll
inc
xor
pop
sbb
imul
pop
pop
test
fstl
sbb
bound
mov
or
mov
jl
mov
cltd
jbe
pop
stc
push
jp
notb
or
mov
pop
xchg
mov
push
fsubl
movsb
cld
pop
sbb
ljmp
mov
adc
loope
push
mov
jne
xchg
lret
pop
lcall
inc
fcoml
lea
cld
xchg
mov
xor
mov
sahf
insl
push
add
enter
nop
repz
sub
and
jp
cltd
dec
nopl
lods
out
inc
push
lds
lcall
popa
cmp
push
add
push
cmp
push
ds
jl
push
nop
inc
lea
sarl
mov
pop
insb
fildll
fwait
jns
jns
inc
push
add
add
add
add
push
mov
xchg
pop
aad
gs
xor
jb
inc
out
mov
sbb
mov
mov
scas
jnp
out
cwtl
out
jae
lret
mov
leave
dec
or
loope
mov
mov
data16
pop
inc
popf
or
fdivrp
xchg
sub
jne
mov
sbb
mov
mov
and
mov
mov
jae
xor
jecxz
cmpsb
jae
popf
push
xchg
dec
jae
and
rolb
jmp
pop
xor
fcomps
movsl
and
push
push
scas
push
mov
or
push
mov
adc
movsl
outsl
sub
mov
rcrl
or
jbe
scas
cmpsl
les
out
and
ds
inc
xchg
mov
pop
pop
jbe
mov
call
xchg
pusha
aas
xor
pop
inc
push
jb
les
add
add
dec
lods
inc
dec
cltd
sahf
stos
mov
add
add
mov
pxor
jnp
adc
jne
xchg
movsb
pop
pop
addr16
add
add
add
popf
push
or
sub
and
pop
jl
fs
test
sbb
adc
jnp
mov
sub
mov
call
jo
std
lret
fildl
xor
aas
jmp
in
xor
ficomps
mov
sbb
addr16
xor
jge
jns
sub
das
sub
mov
add
lret
mov
lods
test
mov
scas
movsb
sbbl
testl
stos
cmpsb
inc
jl
pop
pop
pop
arpl
sub
and
into
popl
pop
push
arpl
fsubs
sbb
aad
xchg
xchg
ret
and
xor
addr16
popa
jno
xchg
add
sti
insb
hlt
mov
sbb
divl
loop
sub
sbb
les
aad
repz
pop
lds
sub
sub
fs
xor
mov
cltd
and
aas
push
lods
in
ret
jmp
add
add
subb
fistl
das
push
ss
xchg
addr16
add
add
add
jge
mov
jecxz
jle
ffreep
lahf
cwtl
mov
cmpb
into
pusha
repz
clc
jb
fisttpll
inc
dec
negl
xchg
cmpsb
insb
test
cmp
sar
int3
xor
enter
outsl
lds
lret
dec
cmp
stos
stos
inc
add
out
aaa
fwait
mov
push
pop
jg
xorb
sbb
sub
sub
ljmp
jae
aaa
test
mov
and
mov
fucomi
orl
mov
comiss
jmp
dec
pop
jecxz
xchg
outsl
lods
shlb
push
rolb
ljmp
xchg
push
lcall
and
fimull
ss
out
lret
mov
xchg
sbb
je
lret
inc
lahf
out
sbb
add
dec
out
int3
ret
arpl
lret
ds
cmc
in
bound
sahf
mov
add
jb
scas
decb
fisttps
cmp
dec
addr16
add
add
add
jb
mov
mov
outsl
stc
scas
add
inc
popf
pop
in
fcoms
jns
push
mov
mov
mov
sub
sti
inc
loopne
push
lea
insb
mov
mov
fs
mov
mov
xchg
pop
mov
jb
jbe
mov
pop
adc
jge
bound
xor
push
insl
and
es
mov
push
sbb
or
xchg
or
adcb
xor
out
loopne
packuswb
call
adcl
pop
imul
jl
or
sub
xchg
loop
inc
fists
enter
js
lcall
mov
cmp
cmpl
add
dec
dec
jle
movsb
sarb
dec
dec
sub
popf
gs
in
sub
adc
enter
push
and
add
mov
xlat
mov
xchg
sti
jp
xchg
add
add
add
jle
cmc
aam
dec
mov
mov
cmc
arpl
add
iret
roll
pusha
jecxz
hlt
test
iret
loope
sbb
sbb
push
cmp
mov
mov
pop
mov
arpl
and
adc
gs
inc
adc
add
mov
fsubrs
mov
cs
dec
or
ljmp
adc
leave
or
ljmp
xor
outsb
daa
pop
xchg
in
xor
cmp
gs
inc
xor
pop
xlat
aam
decb
jecxz
xchg
cmp
lods
xchg
or
jl
mov
sub
sbb
popa
jge
dec
mov
sbb
loope
add
fmuls
nop
fdivs
or
adc
add
lahf
test
cmpsl
jmp
dec
pop
xchg
movsb
leave
jb
in
or
jno
add
fcmovbe
lcall
pop
hlt
lods
cmp
lods
aas
mov
repz
addr16
add
add
add
cs
mov
hlt
bound
cs
testb
mov
xor
bound
xor
insl
mov
jae
mov
lahf
test
pop
pop
loopne
lods
dec
lahf
xor
scas
aas
flds
push
pop
outsl
jl
mov
cwtl
fbld
scas
loope
lret
dec
jae
mov
fstpl
std
push
sub
push
xchg
xlat
add
push
dec
ljmp
repz
sahf
adc
pop
dec
hlt
mov
call
xchg
stos
fiaddl
push
dec
push
xor
movsl
jmp
jge
js
push
mov
lea
outsb
in
leave
hlt
xor
insl
fcomps
insb
xor
mov
mov
mov
imul
sbb
decl
iret
or
fimuls
mov
mov
mov
xor
icebp
adc
and
cmpsl
loop
fadd
sti
mov
out
mov
add
lock
add
add
jo
outsb
popf
mov
addb
repnz
inc
dec
stos
push
pop
adc
xchg
iret
adc
mov
dec
add
sub
and
dec
pop
push
test
mov
mov
in
mov
mov
push
pop
add
pop
xchg
pusha
sbb
scas
out
fcoml
mov
push
in
arpl
jmp
push
or
inc
mov
int
pop
popf
daa
inc
int3
adc
sub
dec
xchg
xchg
adc
mov
in
les
mov
call
fdivrs
mulb
add
arpl
push
and
out
movsl
lcall
xor
pop
pop
mov
inc
or
fidivs
or
add
add
shrb
push
mov
xchg
mov
jmp
and
or
push
mov
push
lock
adc
popa
xchg
mov
push
cmp
adc
neg
jge
xchg
jns
out
add
icebp
add
add
add
sub
push
push
and
cltd
mov
jno
movsb
ss
mov
fildl
sbb
mov
jo
push
mov
add
xor
bound
mov
sub
pop
mov
ja
icebp
jge
push
test
cli
push
or
fnstenv
bnd
lcall
add
xchg
je
fisubl
inc
lret
ror
decb
shll
loop,pt
icebp
aaa
repnz
test
mov
shrb
xchg
ja
inc
fcmovbe
aam
lahf
mov
bound
rcrb
xor
mov
aaa
add
hlt
mov
notb
mov
xlat
insb
pushf
arpl
pop
loope
fdiv
xchg
in
mov
inc
cmp
je
push
push
cs
loop
bound
scas
jl
push
add
out
cmp
dec
mov
icebp
mov
sbb
xchg
jg
shlb
stos
je
add
add
dec
sub
sub
shlb
add
add
add
jns
out
pop
shrb
push
rcll
ljmp
fnstcw
jge
lea
or
popf
jmp
sbb
ljmp
ud0
mov
cld
dec
jbe
pop
and
or
jns
mov
sbb
or
jle
rclb
pop
push
push
jae
jnp
das
lock
dec
push
in
cmpsl
jle
push
lahf
xor
jecxz
gs
mov
jne
sub
jbe
sbb
std
jmp
pop
int3
xor
sbb
fmul
mov
mov
addr16
stos
dec
out
addb
test
hlt
outsb
and
sub
push
clc
jbe
push
rolb
scas
es
add
popf
mov
movsb
rclb
jmp
jne
push
xlat
jp
leave
sub
sub
orb
in
xchg
cltd
dec
les
jmp
notb
adc
cld
cld
aaa
mov
ret
ja
and
aaa
divl
mov
add
add
add
rol
pop
andb
mov
mov
ss
rcr
pop
pop
fnstcw
lcall
imul
loope
jecxz
cli
sbb
fldl
adc
rcrl
push
ljmp
incl
dec
int3
popa
out
ficoms
jp
pop
sti
xor
ds
inc
sbb
add
inc
mov
dec
inc
scas
fwait
mov
mulb
dec
mov
mov
mov
push
sub
stos
and
imul
ds
pop
sub
inc
cld
mov
xchg
pop
cmovo
repnz
iret
sahf
inc
or
lea
cmp
xchg
add
mov
mov
inc
popf
mov
aas
ljmp
rcl
sbb
cltd
sbb
pop
dec
shl
rcrb
mov
mov
insl
add
inc
js
cmp
jp
mov
ss
adc
fadd
arpl
mov
and
in
xchg
jecxz
jmp
mov
aas
dec
adc
addr16
add
add
add
mov
cmp
mov
notb
sub
sub
insl
andl
daa
mov
mov
imull
rcl
xor
fnsave
xor
shrl
gs
cmp
pop
jno
ret
scas
je
mov
pop
pop
xor
and
out
mov
arpl
dec
call
int
loop
in
adc
ficomps
lret
pop
sbb
xchg
insb
pushf
adc
fsub
xchg
jo
sub
add
push
jl
jnp
popa
adc
sub
ret
xor
push
or
lret
adc
fcmovbe
mov
xor
pop
or
scas
jb
popa
bswap
sbb
and
pop
push
imul
jecxz
cltd
mov
mov
cmp
or
fstps
sub
lds
xchg
jmp
and
add
add
jne
pusha
popf
pop
adcl
add
add
ss
mov
xor
pop
mov
xchg
hlt
repz
nop
mov
shl
lea
mov
cld
rcrl
pop
jno
fnstcw
cmpsb
push
push
or
cli
pop
mov
in
fistl
or
sub
add
add
icebp
pusha
pop
fistl
addb
mov
ljmp
adc
lahf
inc
push
lea
sahf
pop
aas
stc
jno
int3
out
ret
inc
xchg
sub
jnp
cmp
xchg
xor
inc
dec
cmpsl
aaa
jge
push
rclb
pusha
sbb
mov
fcomp
inc
insl
jnp
daa
mov
ja
les
inc
mov
data16
bound
out
dec
sub
xorl
sti
jne
mov
and
cmpb
enter
sbb
lea
orb
pop
mov
jge
into
mov
fcomp
fsub
gs
outsb
jl
mov
rol
in
lods
movsl
mov
or
push
xchg
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
decb
sub
test
lods
inc
repnz
int
sub
dec
sbb
scas
mov
jb
inc
cmp
mov
jge
in
xlat
cmp
add
sbb
inc
push
mov
int
cli
imul
scas
outsb
lock
pop
cld
es
jg
cmp
rclb
mov
sbb
popf
push
lock
and
cmp
cmp
out
pop
call
out
jp
ja
adc
xor
add
mov
int3
divl
addl
andl
in
test
and
dec
es
or
sbb
cmp
sbb
hlt
cmp
xor
mov
imull
mov
or
pop
les
push
add
shr
xor
push
jns
push
adc
push
push
ss
movsb
jns
dec
sbb
loop
es
sarb
add
add
add
xor
jb
jae
pop
jmp
add
add
add
xchg
jnp
out
mov
push
sbb
fsubs
cmp
hlt
mov
jle
shlb
mov
adc
xchg
test
and
pop
int
ret
lea
ss
ficomps
add
jecxz
pop
movsl
rcrb
inc
in
aad
inc
ret
imul
fisubs
std
pop
fwait
dec
sub
inc
xor
es
andb
sbb
add
repz
sahf
lret
cmp
test
icebp
scas
cwtl
mov
xor
xor
mov
inc
fimuls
inc
xchg
in
ss
popf
addb
mov
cmp
pop
nop
ss
insl
arpl
scas
push
inc
cld
push
xchg
pop
jbe
xchg
icebp
pop
push
mov
test
cwtl
mov
repnz
cmp
lock
pop
aas
jecxz
dec
dec
dec
cmp
dec
movsb
push
mov
aas
sti
shrb
or
adc
int
in
idivl
js
mov
jns
shrl
add
add
ret
jns
mov
loop
push
mov
and
pushw
mov
and
add
mov
pop
stc
xlat
repnz
sbb
xor
mov
sahf
add
movsb
adc
sub
sbb
sub
aam
and
push
insl
sub
dec
inc
mov
outsb
cltd
test
daa
sub
inc
out
sub
fadds
mov
adc
mov
push
shl
and
jne
dec
pop
in
push
and
dec
and
repz
iret
jno
rcl
pop
or
out
cmp
pop
outsb
scas
cmc
dec
jnp
aas
aad
adc
xor
shl
jmp
cmc
add
dec
xchg
arpl
repz
les
rol
popa
pminub
pop
fsincos
sub
enter
lret
fsubs
daa
movsb
dec
dec
imul
das
mov
mov
mov
add
pop
es
inc
cli
aas
into
lret
ss
mov
add
add
sbb
xor
xchg
insl
xor
ror
push
or
xchg
pop
sahf
iret
inc
mov
outsb
movsl
enter
xchg
add
and
adc
xchg
xchg
ss
dec
xchg
jmp
cmpsb
pop
pop
popa
jbe
sub
jne
cmpsl
sub
cwtl
and
test
inc
insl
fildl
mov
shl
jne
push
das
xchg
jmp
dec
cmp
xor
mov
cmpl
jne
rcll
fsubr
icebp
pop
lahf
cmpsb
mov
mov
mov
pop
repz
je
cwtl
pop
out
and
jle
sbb
inc
pop
sub
cmp
jge
cltd
push
or
aaa
mov
daa
jle
fidivrs
ss
pop
fwait
sbb
add
pusha
mov
or
pop
shll
mul
sar
push
xchg
in
xor
leave
jge
dec
and
push
and
jg
mov
lcall
test
iret
mov
cli
add
add
add
inc
in
jns
mov
pop
stc
mov
sub
and
pop
test
arpl
pop
xchg
dec
add
sahf
cmpsb
cmp
sbb
pop
pusha
icebp
pop
loop
out
jnp
jle
xchg
pushf
or
lock
mov
movsl
xchg
aad
out
pusha
and
popa
inc
inc
cmp
orl
push
xchg
aam
push
es
pusha
insb
adc
pushf
cmp
jns
roll
out
popa
xchg
fstpt
bndstx
loope
xchg
lea
test
jnp
inc
pop
inc
cmpsl
aaa
sub
lret
test
sbb
mov
outsb
inc
or
xchg
lcall
addb
xchg
lcall
test
mov
mov
outsb
test
adc
cwtl
mov
dec
jns
jo
rcll
jg
inc
pop
test
in
stos
push
jmp
mov
add
add
jae
cltd
dec
mov
jno
mov
scas
aaa
addr16
add
add
add
pop
je
inc
xor
or
or
mov
aam
jp
sub
pop
mov
push
push
sahf
or
cli
mov
mov
jno
loope
or
lret
lods
popa
mov
cwtl
inc
stc
mov
adc
mov
jne
lahf
aas
push
adc
mov
xchg
lock
iret
repnz
sbb
int3
jecxz
pop
mov
jns
movsl
pop
or
sbb
add
push
jne
mov
jmp
cld
cmpsl
pop
sbb
pop
sahf
mov
or
mull
mov
hlt
in
sbb
dec
leave
jge
mov
xchg
sahf
outsb
push
inc
add
jb
std
or
stos
xchg
sub
and
addr16
test
outsb
mov
lds
test
pop
sub
aaa
inc
movsl
dec
cs
mov
and
or
arpl
xor
adc
push
sub
xchg
stc
xor
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
nop
iret
dec
pop
addr16
add
add
add
fisttpl
mov
push
xchg
or
mov
clc
cld
xor
icebp
pop
andl
xchg
scas
jae
ret
jg,pn
in
add
int3
pop
push
push
fdiv
mov
cmpxchg
loope
icebp
ds
adc
lahf
out
pop
lcall
jle
lods
add
xor
push
inc
dec
pop
xor
dec
mov
rcrb
nop
lds
push
cld
cmp
imul
insl
out
jbe
push
mov
add
ljmp
mov
push
jbe
xchg
jne
fnstsw
cmp
call
popf
pop
repnz
std
xchg
sub
icebp
inc
and
push
push
mov
in
xchg
pop
mov
mov
xor
out
inc
fcmovu
incb
ljmp
scas
enter
xchg
imul
mov
adc
add
jno
test
jg
push
pop
push
mov
addr16
add
add
add
lods
push
mov
in
clc
xor
adc
or
push
ret
mov
stos
cmp
arpl
cmpsl
xchg
pop
inc
imul
xchg
repz
daa
rorl
lea
mov
loope
mov
adc
push
add
mov
jle
loop
ss
vdivps
adc
pop
mov
aam
int
jmp
sti
stc
loopne
test
mov
flds
outsl
cld
outsb
xchg
in
mov
dec
rcrl
add
adc
cltd
jo
mov
fwait
inc
js
fists
push
push
lret
fdivs
adc
int3
xchg
clc
shll
cmc
dec
fucomip
aam
fildl
test
movsl
loop
jg
mov
pop
stc
xor
add
lods
xor
sub
enter
aad
pop
movsl
and
fistps
test
mov
adc
fcomps
je
out
addr16
fadds
sub
mov
cmc
xchg
xchg
push
add
sbb
adc
movsb
push
in
cmc
jne
sbb
js
in
test
add
add
and
xchg
outsb
cmpsb
pop
mov
movsb
movsl
or
mov
cs
loope
stos
mov
popa
cld
icebp
rorl
shr
je
movsb
and
into
ficomps
adc
fdivrl
pop
cs
push
xchg
loopne
mov
sub
push
mov
jae
mov
scas
in
or
push
xlat
dec
jo
push
push
call
add
mov
std
cmp
pop
dec
mov
insl
iret
in
inc
cld
pop
je
push
sbb
xchg
push
repz
sub
pop
loop
mov
xchg
iret
mov
ss
rorb
adc
xorb
jg
ret
cmpsb
push
outsb
andl
lahf
sti
inc
mov
dec
ret
test
mov
popa
push
mov
mov
cmpsb
aaa
js
std
hlt
sti
mov
aad
lock
bound
fcoml
push
push
popa
cmp
scas
cmpsb
rcrb
adc
rcrb
repnz
ficompl
xchg
sbb
shlb
aas
out
int3
mov
or
add
add
add
add
mov
shlb
pop
sbb
shlb
and
pop
add
cmpsl
lret
sub
mov
fcoml
orb
fbld
jne
imul
dec
push
push
lods
sub
xchg
adc
add
ret
cs
rol
mov
jg
and
rcrb
test
push
cmp
mov
push
sub
dec
repnz
mov
xchg
das
mov
pusha
push
and
sbb
sar
scas
lret
stos
mov
scas
sbb
sub
add
lds
push
inc
jb
pusha
into
adc
iret
in
pop
mov
xchg
sbb
or
jl
push
inc
notl
fisubrs
jmp
adc
jle
sub
cmp
xchg
sub
rcrb
or
mov
and
iret
push
pop
add
add
add
add
lea
xor
jns
or
jmp
lea
dec
icebp
fsubp
jb
fwait
or
aas
mov
inc
scas
arpl
adc
pop
mov
js
int3
and
pop
stc
sub
icebp
xor
sbb
xlat
loopne
test
mov
mov
jmp
sbb
xor
mov
subb
add
or
dec
pop
imul
xchg
cmpsb
repz
testb
iret
xlat
in
jl
cltd
scas
add
cmc
sbb
cmp
cwtl
jnp
pop
in
fisttps
jbe
cmpsl
or
xchg
xchg
test
push
dec
enter
xchg
jecxz
dec
jl
xlat
add
push
and
mov
shll
outsb
push
add
rcl
rcrb
fwait
gs
mov
mov
and
add
test
xorb
in
int
add
jmp
filds
inc
mov
and
dec
rol
lret
clc
cmc
inc
stos
repz
add
add
add
push
jo
dec
fbld
lods
or
sub
mov
jecxz
pop
loop
in
mov
gs
sbb
xchg
shl
push
add
stc
arpl
add
mov
test
mov
fistl
ss
loop
cmp
in
fwait
cmp
movsb
add
inc
xchg
push
enter
fistpl
test
inc
mov
jbe
jmp
in
mov
imul
inc
pop
adc
ffreep
fsubs
movsb
cs
jg
repz
jns
adc
xchg
inc
je
stc
xchg
mov
fisttps
test
call
stos
data16
push
sbb
jae
push
jmp
fwait
or
push
mov
stc
pop
ljmp
sub
sbbb
add
xchg
and
dec
leave
cs
mov
dec
and
inc
mov
push
add
std
aaa
mov
shll
stos
add
add
add
add
inc
loop
or
loop
es
or
out
xchg
jle
popf
test
jmp
ret
and
jl
or
push
lock
jnp
mov
mov
fisubrs
inc
leave
pop
daa
jno
addb
pop
mov
jmp
and
fildl
pop
inc
sbb
adc
ljmp
imul
shrb
movsb
cmp
rolb
das
insb
cmp
and
mov
sub
cld
test
scas
dec
lret
lods
ja
jl
or
and
sarl
rcrl
mov
inc
adc
ja
call
test
rcl
cmpsb
std
push
fistpll
aam
or
test
insl
inc
fsubs
dec
cwtl
cli
inc
mov
xor
cmpsb
or
sbb
cmp
mov
sub
cmp
xchg
cwtl
inc
std
call
and
push
frstor
jmp
mov
addr16
insl
aam
mov
scas
add
pop
ficomps
push
add
add
cwtl
scas
pushf
rcrb
shll
scas
dec
cld
inc
or
add
rorb
in
cmpsl
mov
bound
addr16
push
das
into
sahf
js
mov
ret
ret
jp
lret
outsl
push
jnp
in
inc
ret
pop
dec
out
aam
ss
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
adc
mov
sbb
lds
add
push
cmp
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
