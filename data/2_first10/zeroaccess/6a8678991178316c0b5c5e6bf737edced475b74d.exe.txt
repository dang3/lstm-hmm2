push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
mov
jp
jp
pop
jp
and
daa
cmp
jno
jne
emms
push
imul
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
adc
scas
adc
sbb
hlt
mov
add
mov
lret
sub
mov
loope
sar
mov
and
out
out
pop
xchg
movsb
outsl
js
sub
jmp
lret
insl
arpl
jo
cmpsl
shlb
mov
ljmp
cld
outsl
mov
cmc
stc
dec
leave
sbb
lock
mov
je
sbb
in
int3
adc
add
mov
aas
dec
jne
xchg
ljmp
mov
mov
movd
rorb
mull
or
das
popf
pop
jge
lds
pusha
mov
mov
pushf
lock
aam
loop
cmp
in
or
add
mov
mov
jecxz
imul
adc
ds
inc
sub
or
pushf
imul
cli
cmc
and
and
dec
cmp
testl
sbb
sub
push
rorb
repz
ljmp
nop/reserved
mov
and
ljmp
aam
lods
add
dec
scas
or
sahf
in
jecxz
sub
jae
jl
pop
test
and
cmp
pop
stos
push
jb
add
pop
xor
cltd
lcall
xchg
movsb
cmpsl
rcrl
push
popa
int3
sbb
push
pop
xchg
fimuls
sbb
xchg
addr16
cli
insb
into
push
fsts
aam
lds
out
inc
in
sahf
pmulhw
jo
sbb
cmpsl
and
out
dec
out
sbb
xlat
xchg
les
int
in
mov
call
mov
es
adc
push
andl
and
hlt
movsb
mov
pop
push
outsb
mov
test
pop
push
gs
sub
sbb
dec
fldcw
push
idivl
fldcw
loop
loopne
jno
btcl
mov
adc
rcrb
jbe
dec
adc
xchg
loope
cmp
in
out
xor
nop
add
mov
lret
mov
nop
mov
add
xor
sbb
filds
pop
aas
mov
loopne
mov
aaa
sbb
inc
dec
jmp
cmpsl
inc
in
pop
and
xchg
mov
add
aam
mov
mov
xchg
adc
or
add
xchg
cld
mov
shlb
mov
dec
mov
nop
orl
icebp
loop
leave
push
dec
dec
cmc
push
pop
loope
xchg
or
scas
jnp
inc
test
sti
xchg
and
fnstenv
or
andl
cmpsl
inc
jl
ret
adcb
ficoms
and
pop
leave
or
jge
sub
xchg
or
out
jmp
rcll
into
outsb
fisttps
and
pusha
or
cld
push
cmp
inc
aaa
insb
stos
mulb
adc
or
cmc
cmpsl
fmul
in
test
push
cwtl
test
cmpb
xchg
pop
mov
std
int
aad
inc
or
pop
orl
dec
add
pop
adc
leave
add
dec
shl
scas
sub
cmpsl
lods
mov
and
cmpsl
xchg
xchg
add
adc
loopne
dec
sbb
jb
nop
fistpll
aaa
pop
push
popf
xor
enter
sub
cmp
call
dec
cli
outsb
push
or
mov
sti
inc
pop
bound
ret
mov
push
jb
lret
pusha
nop
lock
sbb
or
jl
jmp
ja
push
dec
fstpt
hlt
outsb
sub
iret
pop
mov
rcrb
sub
sti
adc
mov
lea
jle
adc
cmc
add
mov
fnstenv
or
cli
dec
and
sub
xchg
ficomps
jecxz
push
test
sbb
pusha
mov
aaa
jg
push
add
push
xchg
mulb
or
jge
cmp
pop
xor
add
out
lcall
mov
mov
adc
add
sti
and
test
out
aaa
add
mov
dec
and
push
mov
mov
cltd
out
dec
pop
xchg
loope
xor
cs
push
sbb
add
mov
cmpsb
imulb
lcall
fmul
sar
xchg
iret
mov
xchg
test
fdivrl
loop
in
jge
sarb
push
mov
jge
in
fists
ds
lock
push
lock
jae
enter
mov
inc
stos
inc
jne
xchg
push
fs
cmpsb
sub
fisubrs
iret
push
push
aam
stos
or
push
pop
push
jae
dec
lahf
das
scas
lock
vunpcklps
sahf
sub
adc
jb
mov
leave
leave
pop
ljmp
and
ja
pop
dec
cmp
or
mov
jecxz
xor
bound
mov
aad
fists
mov
adc
int
rorb
and
push
pop
add
jae
insl
addb
scas
ficoms
jmp
out
lret
int3
jo
lcall
mov
stos
test
xchg
rorb
dec
cmp
jne
out
inc
add
adc
sbb
jbe
mov
sub
push
aas
scas
dec
movb
cmp
sbb
and
add
sub
dec
dec
add
cmc
jge
sbb
out
enter
xchg
jb
dec
push
rol
or
and
in
push
andl
sbb
testl
pop
push
call
sub
xchg
mov
or
inc
aaa
hlt
xchg
aas
loop
or
repnz
es
je
testb
pop
add
push
sub
xchg
adc
and
cwtl
lods
push
pushf
test
jnp
jns
test
ja
test
jmp
hlt
andl
inc
jg
adc
gs
arpl
or
lahf
dec
sahf
sub
push
std
xchg
cmpsb
shl
rclb
lret
adcl
mov
loope
xor
jnp
repnz
push
stos
stos
jmp
add
aad
xor
lahf
ds
cmp
jns
sbb
insl
sbb
mov
mov
jo
xchg
mov
popf
pop
es
dec
jg
lret
push
sbb
loop
insl
inc
mov
push
mov
cwtl
std
mov
fisubs
sbb
sarl
xchg
mov
xor
mov
push
mov
pop
fs
test
jecxz
sbb
or
inc
nopl
out
addr16
push
pop
sbb
movsb
lods
insl
xchg
add
pop
sbb
xchg
aad
mul
pop
mov
jbe
cmc
sbb
lods
ds
sub
in
inc
out
push
ret
fsubs
adc
jge
ucomiss
mov
cmp
insl
loope
mov
fldcw
vdivsd
dec
cmp
fists
popf
jle
xchg
scas
outsb
mov
jne
adc
es
mov
mov
adc
pop
int
pushw
jg
mov
mov
or
mov
divb
mov
sub
mov
cli
and
mov
lahf
cmpb
lods
aad
fidivrs
sbb
enter
inc
sbb
xor
adc
jg
push
out
stc
inc
adc
sbb
call
iret
mov
push
sbb
fwait
cmp
aad
mov
fcmovu
dec
insb
or
and
lods
sub
cwtl
pop
push
stos
rcr
push
xlat
fldcw
mov
insb
mov
mov
sub
loope
jge
mov
inc
push
inc
jecxz
insl
in
int
and
cmp
inc
mov
std
mov
or
stos
xlat
or
iret
and
mov
dec
stos
inc
and
data16
cwtl
mov
clc
xchg
add
jb
adc
arpl
or
scas
or
lock
nop
in
loopne
int3
inc
in
mov
fucomp
ror
ret
inc
jmp
mov
cmp
addb
sbb
push
arpl
lds
xchg
push
mov
pusha
testb
cmp
xor
adc
loopne
mov
mov
add
test
lcall
fsubr
push
mov
cltd
adc
xchg
aam
xchg
es
and
int3
lods
cmpsl
xor
mov
ljmp
fiaddl
pusha
xor
rorb
popl
mov
iret
inc
es
jns
or
inc
add
jecxz
movsb
xor
insl
add
test
std
out
adc
cmc
adc
mov
movsl
sbb
aas
popa
test
jbe
sbb
ja
jns
and
decl
mov
fidivs
cmc
xchg
lea
stos
add
dec
mov
xchg
insl
negl
ror
js
push
pop
mov
xchg
sbb
jno
mov
sbb
adc
adc
xchg
test
lret
fdivl
popfw
adc
xchg
subl
xchg
xor
faddp
fsubrs
loope
adc
push
shrb
xor
xchg
lock
adc
ficomps
sbb
jmp
nop
scas
ret
fsubrs
iret
inc
scas
pop
pop
out
inc
sarl
xor
int3
jmp
push
ja
mov
test
sbb
int3
fwait
pop
and
xchg
cmp
jne
sub
imul
or
add
rcll
add
jmp
mov
dec
in
hlt
cmp
lock
subl
fcoms
test
xchg
jnp
in
adc
xor
push
dec
test
xchg
inc
xor
xlat
mov
pop
cmp
pop
cmpsb
negl
sub
daa
cmp
mov
mov
test
mov
jbe
jmp
shrl
cwtl
mov
cmp
mov
pop
scas
xor
push
aas
sbb
add
dec
jnp
cmp
adc
xchg
pop
cmp
adc
rcll
leave
push
ja
lods
jmp
mov
rcll
mov
dec
movsl
sti
bound
jns
fstpt
gs
gs
pop
mov
jle
xchg
aaa
loop
cs
rcrl
push
mov
ss
mov
out
loopne
sbb
dec
gs
push
lcall
push
daa
sbb
fs
sub
cmpsl
rcr
sbb
mov
push
xor
mov
jmp
aaa
push
add
lea
jge
mov
outsl
xchg
cmc
stc
jl
roll
mov
cmp
and
xor
filds
pop
cli
hlt
pop
or
or
cmc
xchg
jle
sbb
cli
jp
jae
cmp
adc
scas
xchg
pop
je
imul
inc
xchg
ja
inc
inc
sbb
or
pop
dec
xor
lret
and
cli
pop
jp
jmp
imul
mov
repz
push
adc
adc
xor
cmp
push
repnz
xor
push
fstl
std
dec
jnp
jne
push
les
dec
sbb
and
addr16
shll
mov
outsb
or
jo
push
dec
pop
mov
jno
scas
xchg
sbb
mov
inc
sub
xchg
mov
fiaddl
popa
push
jno
testb
xor
xchg
ds
mov
cmpsl
inc
or
mov
loopne
aam
push
push
mov
inc
nop
lods
test
mov
movsb
fwait
xchg
movsb
loope
mov
sbb
sub
inc
lock
out
mov
dec
aaa
sbb
push
pop
out
sub
outsl
mov
jmp
sti
xchg
ljmp
dec
leave
xor
cwtl
and
add
add
pop
rolb
xorl
mov
ljmp
fcmovnu
ret
loop
lock
fsubrl
inc
imul
sub
mov
adc
inc
push
pop
push
and
rcl
jp
in
mov
jb
mov
adc
mov
cmp
push
push
cmp
mov
dec
addr16
sbb
push
sub
insl
mov
pop
fwait
xchg
cld
xchg
aas
sbb
or
sub
mov
insl
sbb
cmc
gs
inc
cmp
inc
fisttpll
mov
pop
daa
popf
mov
or
out
arpl
push
dec
movl
adc
fistpl
mov
orl
push
ret
sub
dec
xchg
test
and
jbe
mov
popf
mov
idivl
mov
adc
adc
inc
ss
mov
testb
fcmovnbe
xor
sbb
xchg
minps
mov
sub
xchg
ljmp
fstps
fdiv
test
mov
sarl
int3
std
lea
punpcklbw
jmp
mov
out
push
add
or
mov
jmp
xchg
pop
inc
or
and
xchg
add
pop
push
xchg
hlt
jp
and
pop
dec
int3
std
loop
push
push
sbb
pop
or
add
je
std
dec
dec
xchg
in
xor
xchg
xchg
push
ljmp
flds
xor
mov
dec
jo
and
add
inc
sub
mov
sbb
ret
jl
push
sarl
push
mov
pop
inc
loopne
or
sub
popf
std
add
pusha
out
xor
sbbb
bnd
jno
sub
mov
lahf
cmp
inc
aam
outsb
pop
push
fiaddl
pushf
xor
xor
inc
mov
insl
push
add
loope
shlb
je
scas
adc
jb
pop
xchg
mov
adc
lods
out
and
push
dec
orl
int
sahf
dec
loop
cli
outsb
shlb
xchg
add
in
inc
movsb
stos
adc
bnd
mov
sahf
xor
sub
arpl
or
jl
dec
xchg
mov
adc
leave
jb
das
pop
mov
push
xor
push
pop
mov
add
pop
stc
movsl
push
movsb
arpl
inc
pusha
jo
gs
xchg
loop
fs
pushf
jnp
popf
push
in
aad
xchg
xchg
test
stc
adc
arpl
jae
xor
rcll
leave
push
xchg
jns
pop
sbb
addr16
int3
adcb
xchg
jmp
sti
setne
jle
hlt
sub
clc
fidivl
xchg
rorl
xor
push
xchg
mov
repz
popf
rcrl
mov
pop
cs
push
or
jnp
dec
aas
xor
fidivl
andb
inc
es
mov
mov
cltd
enter
jno
cli
jns
fs
fildl
les
jo
and
jb
cmp
js,pt
mov
mov
ds
inc
mov
addr16
loopne
fmuls
sbb
loop
sbb
mov
push
scas
out
in
xchg
push
pushf
pop
sbb
or
shrb
dec
xchg
mov
jnp
push
xlat
cltd
xlat
shlb
xchg
mov
or
nop
mov
jge
and
imul
sub
jp
jne
jbe
fildll
popf
or
insl
mov
push
sti
xor
inc
addr16
xor
in
fisttpl
inc
add
or
fldenv
and
pop
or
sbb
pop
push
les
loope
scas
push
js
jnp
inc
mov
jecxz
mov
test
aad
xchg
and
loop
mov
cmp
adc
insb
fidivrl
xchg
jns
cld
add
shlb
daa
cs
shl
cmp
add
test
xor
andb
mov
int3
add
lods
test
push
mov
insl
mov
sbb
pop
imul
push
mov
mov
dec
fcompl
xor
or
jge
or
mov
lea
and
and
imul
cltd
fs
pushf
in
mov
inc
scas
jmp
call
xchg
lods
and
hlt
lret
pop
adc
mov
cmpsl
dec
mov
sbb
scas
dec
and
shrb
lcall
out
xchg
out
wbinvd
adc
leave
push
mov
xchg
scas
std
sub
test
cmpsl
cmp
test
inc
out
lods
sahf
mov
jns,pn
push
mov
lcall
mov
jbe
inc
outsb
lahf
inc
sub
mov
jp
das
xchg
pop
jecxz
jno
popa
sub
add
dec
test
in
rcll
or
lret
sbb
lods
and
push
sahf
imul
adc
pusha
aam
aad
outsb
and
in
push
inc
push
add
dec
and
js
fldenv
add
jg
lods
cmpsl
push
dec
pop
or
mov
ficomps
out
inc
inc
dec
jnp
xorl
ficompl
inc
dec
pop
adc
scas
cli
adc
dec
pop
fisttpl
inc
fbld
xor
mov
cmp
add
icebp
sarl
lea
sbb
or
mov
arpl
punpckhbw
pop
nop
xchg
imul
or
iret
mov
xlat
dec
or
jg
fcmovne
dec
fimuls
push
repz
mov
test
jae
icebp
push
inc
pop
loope
das
std
iret
mov
sahf
fnstsw
adc
jb
mov
jo
adc
xchg
je
xor
xor
bound
mov
or
push
or
sbb
rcrl
nop
addb
popa
dec
stc
jge
js
loop
dec
idivb
push
popf
dec
mov
bound
jnp
js
call
xor
cwtl
jo,pt
cmp
in
mov
cld
xlat
adc
in
test
mov
loope
or
or
mov
cmp
pminsw
jo
sahf
clc
repz
jp
jns
imul
and
cmp
pop
jnp
loopne
jp
xchg
repz
push
add
lock
das
jns
and
inc
mov
mov
mov
shlb
push
insl
stc
dec
ljmp
fldl
daa
mov
rorl
xor
fadd
outsl
push
in
mov
mov
add
orl
data16
sub
or
jle
or
adc
out
lods
imul
lret
mov
xor
dec
movsb
int3
add
xor
sbb
lds
jle
sub
mov
fs
das
jo
sbb
cmp
stc
cs
mov
cli
insl
ret
rorl
inc
mov
push
mov
filds
cmp
outsl
fidivl
lods
jo
inc
sbb
cltd
addr16
lcall
insb
add
rolb
mov
dec
enter
in
mov
sbb
mov
sub
shrl
rorl
cmpl
lret
lret
addr16
or
fdivrp
pop
shl
xlat
dec
loope
loopne
std
lods
push
cmpsl
push
and
in
push
mov
cli
aas
mov
mov
add
lahf
cmp
pop
idivl
cs
sbbl
pop
movsl
add
outsb
addr16
outsb
loope
add
test
adc
fistpl
mov
roll
adc
mov
cmpsl
cmpsl
xor
jbe
push
add
cmp
ret
mov
imul
adc
cs
call
lret
jnp
lods
popa
jns
in
faddl
sub
mov
mov
out
cld
sub
jbe
out
xor
adc
dec
out
xor
and
or
imul
shrb
insl
and
repnz
mov
std
fdivl
jnp
and
insb
xchg
mov
cmp
ds
decl
cmp
sbb
test
outsl
ljmp
scas
mov
push
popa
mov
out
mov
push
sub
push
fcomi
sub
lds
jge
fildl
or
mov
dec
cli
lret
leave
cwtl
push
loopne
mov
call
and
cmp
lret
jnp
sbb
scas
sbb
dec
inc
sub
add
lahf
dec
mov
es
mov
aas
lret
push
ret
cmp
lods
lods
inc
jb
sbb
shlb
ss
mov
sub
mov
push
pop
lret
mov
into
mov
dec
mov
or
pop
mov
jg
repz
pop
xor
inc
andl
cmp
dec
sub
movl
leave
test
test
ret
jge
jle
fs
mov
das
cmp
push
and
into
fildll
movsb
incb
cmp
test
shrb
cmpsl
loop
jne
pop
xchg
push
in
sbb
adc
aam
je
shlb
inc
and
ljmp
bound
mov
lcall
xor
dec
ret
dec
push
or
or
in
push
clc
and
pop
add
ret
pop
fisttpl
or
mov
mov
rclb
mov
cmpsl
xor
gs
scas
xor
sub
mov
pop
sub
mov
xchg
cmp
mov
test
mov
lods
inc
xor
enter
or
mov
call
out
xchg
aam
jp
mov
daa
pop
mov
xchg
jmp
push
and
bound
inc
lret
mov
mov
loopne
inc
mov
xchg
lods
mov
adc
inc
push
jp
std
dec
pop
mov
xchg
lds
sbb
scas
and
jle
dec
sti
nop
rcrl
xchg
mov
xchg
in
dec
stos
mov
fnstsw
neg
jb
and
jo
and
out
scas
test
cmp
mov
sbb
imul
mov
outsb
ja
ljmp
sbb
jns
xchg
fisttps
adc
cltd
mov
mov
imul
pop
int
adc
sub
addr16
dec
and
arpl
or
pop
mov
mov
cltd
push
sub
pusha
daa
and
lods
clc
jnp
push
pop
fldt
push
jno
mov
sbb
ret
in
aaa
mov
popf
or
mov
insb
xlat
dec
mov
sbb
push
hlt
or
test
adc
stos
mov
in
xchg
mov
mov
xchg
test
fidivrs
mov
push
jg
mov
in
roll
std
imul
nop
imul
inc
sbb
add
pop
ficomps
xchg
jbe
out
dec
push
fidivrs
inc
int
mov
push
push
aam
and
clc
xchg
pop
sub
ror
mov
lret
lods
insl
jb
sbb
dec
cwtl
xchg
xor
push
cmc
xchg
test
pop
into
push
inc
mov
lahf
pushf
push
aad
add
xchg
jnp
fnstsw
fnsave
mov
arpl
sar
mov
add
cs
lret
xlat
lret
pop
pop
fisttpll
outsl
add
dec
cmpsb
sbb
jnp
lods
aad
mov
out
mov
dec
xchg
out
in
xchg
lret
xor
inc
gs
js
lea
mov
sbb
push
jae
push
icebp
dec
inc
dec
lret
cmpsb
or
push
sub
push
fstpl
das
jmp
in
lahf
and
lret
adc
mov
fiaddl
fsubl
jns
out
mov
xor
fstpl
fsubrp
push
jbe
fisubrs
mov
push
sub
xor
xchg
cltd
in
mov
mov
sbb
aaa
orl
adcb
push
dec
mov
jbe
aad
push
ja
dec
push
adc
inc
outsb
jbe
jmp
fimuls
sub
lods
int
in
and
daa
jg
test
aaa
mov
sub
jl
jnp
andb
and
mov
popf
test
jle
or
test
test
aaa
pop
or
mov
pushf
xchg
inc
popa
push
sbb
sbb
jg
imul
xor
and
push
inc
in
add
rorl
mov
add
test
sub
sbb
xor
sub
daa
loope
pop
cltd
or
sub
dec
pop
jge
pop
addr16
and
stos
fsub
pop
jne
mov
dec
push
pushf
incl
adc
mov
sub
sbb
sbb
mov
xor
jnp
jl
mov
rclb
pop
mov
mov
xchg
insb
pop
lret
scas
outsl
dec
xchg
pop
aad
aaa
jmp
sub
pop
arpl
mov
popa
popa
jno
fdivrl
xchg
ds
stc
jno
mov
mov
dec
cmp
clc
gs
ret
mov
jp
in
dec
push
inc
sbb
lea
dec
imul
xchg
aad
mov
push
out
mov
xor
pop
or
shl
mov
mov
xlat
and
int3
loopne
pushf
enter
dec
mov
xchg
arpl
aam
mov
xchg
inc
pop
jge
mov
cmp
sub
inc
pop
ds
xchg
test
mov
xchg
sbb
push
pop
xchg
repnz
out
out
mov
jge
xor
sub
call
ljmp
cwtl
and
cltd
gs
xchg
jecxz
mov
int3
push
jle
repnz
movsb
xchg
xor
sbb
ret
mov
dec
movsb
fdivr
inc
mov
roll
inc
jb
push
stos
mov
xchg
int
dec
jecxz
mov
xor
stc
add
aas
mov
push
les
aam
je
pop
jne
mov
cmp
call
fsubrl
cld
xor
sbb
mov
xchg
inc
test
inc
inc
or
sub
mov
dec
push
jl
push
push
scas
pop
fs
mov
sbb
pop
rolb
jb
mov
add
in
sub
jnp
mov
push
cltd
and
cmpsl
fisttpl
scas
jbe
mov
pop
rorb
jae
das
sub
adc
mov
xchg
and
outsb
imul
lret
scas
es
nop
jge
pop
sub
pop
inc
pop
add
jne
cmp
shrb
and
adc
mov
push
sbb
movsl
dec
pop
push
mov
push
je
add
es
addr16
pop
push
xlat
inc
pop
xlat
pusha
mov
shl
stc
mov
sarl
inc
and
xchg
bound
icebp
je
or
xchg
int
jle
imul
filds
dec
and
push
jno
test
jns
rorl
int
clc
inc
inc
pop
add
xchg
iret
xor
iret
nop
add
iret
insl
cmp
sub
jne
pop
sahf
sbb
pop
mov
imul
dec
filds
sub
add
dec
jle
cmp
andl
or
and
and
and
cmp
or
testl
sub
aaa
mov
xor
xchg
cmp
movl
roll
mov
lea
xor
mov
dec
and
adc
cmp
lods
inc
xchg
mov
jnp
out
xchg
pusha
call
call
rorl
mov
xchg
xlat
push
xchg
outsb
mov
test
pusha
test
pop
and
jae
dec
xchg
mov
ljmp
loope
cmpsb
jno
mov
cld
mov
ja
sarb
andb
std
sbb
rolb
into
shl
mov
les
xor
cmp
pop
cmp
and
movsb
int
outsl
sub
ret
arpl
push
rcrb
bound
sbb
mov
inc
out
fcmovu
xor
xlat
cltd
mov
cmp
insl
push
jge
ret
dec
mov
fwait
int
arpl
rorl
sub
lods
ficomps
push
sbb
mov
jge
sahf
and
stos
das
mov
jns
sbb
mov
roll
roll
repnz
fsubrs
sbb
xchg
mov
gs
jle
pop
mov
mov
and
adc
sbb
xor
dec
sub
jne
scas
cmp
xor
sti
pushf
xor
jne
decb
mov
adc
xor
mov
int3
cld
cmp
out
and
test
aam
ficomps
inc
cmp
pop
mov
mov
and
mov
mov
das
xor
js
cmpb
xor
dec
lahf
or
pop
loope
pop
mov
push
inc
imul
call
mov
xchg
add
leave
mov
outsb
xchg
aaa
adc
pusha
loope
int3
sbb
sahf
and
sub
in
jns
sarl
cmpsb
push
test
jle
pushf
or
out
or
mov
inc
inc
shrl
hlt
cld
pusha
sbb
sbb
scas
cmp
test
sbb
test
pushf
call
cmp
adc
sarb
mov
in
icebp
dec
cltd
mov
and
dec
loope
loopne
xchg
xchg
fs
cs
cwtl
std
lods
pop
rcrb
mov
insb
mov
cmp
xchg
imul
lock
jnp
sub
loopne,pn
or
movsb
and
add
stc
or
aam
call
lahf
mov
cwtl
test
jle
fimuls
lods
add
jno
push
incl
xchg
dec
pushf
lret
xor
pop
std
cmpsb
insl
sub
inc
enter
stc
pushfw
xchg
jle
mov
mov
pop
lahf
pop
pushf
pusha
sub
js
sub
xchg
xchg
shrl
in
ljmp
cmp
sub
sub
in
fadd
cld
xor
dec
xor
mov
fimull
push
int
mov
dec
mov
mov
jecxz
leave
mov
xchg
rcrb
sub
fwait
popa
fistpl
sub
xchg
stc
cmp
adcl
aam
mov
daa
jae
cltd
add
xor
out
sti
sub
pop
pop
sbbl
jg
loope
mov
pop
sub
ret
jle
jmp
outsb
out
les
push
aaa
add
mov
mov
int
or
xor
add
xor
psraw
cmp
out
cmc
and
popl
test
insl
xchg
adc
das
jbe
adc
jbe
dec
loopne
fmull
stos
loop
xchg
or
xchg
xchg
ja
ss
pop
push
inc
call
push
sub
pop
add
inc
add
daa
and
sbbl
test
or
mov
inc
pushf
and
mov
push
jns
dec
ret
push
mov
sub
jns
inc
push
movl
aad
idivl
cmp
or
cmp
push
filds
repz
lods
add
shlb
scas
xchg
loopne
ucomiss
xchg
pop
cmp
js
rclb
lods
pop
ljmp
ljmp
jno
mov
adc
xlat
push
adc
pop
pop
test
pop
cmp
add
push
pop
mov
fistl
insl
dec
xor
repz
arpl
mov
mov
hlt
mov
loop
test
and
into
xor
imul
mov
mov
mov
mov
xor
add
jmp
scas
pushf
and
add
test
inc
aaa
mov
das
pop
jp
jne
mov
fisubrs
dec
push
pop
bound
mov
adc
jb
stc
mov
or
add
mov
add
icebp
leave
dec
pop
and
push
push
out
sbb
xchg
sbb
xchg
pop
xor
sbb
stc
cmp
cltd
mov
insb
hlt
push
movsb
cmc
loop
dec
mov
in
negb
cmp
push
mov
and
stos
mov
scas
pop
enter
cmp
adc
cli
mov
jo
xchg
scas
aaa
fbld
sub
fimuls
imul
sub
or
cmp
lret
jb
add
sub
outsb
jle
push
mov
out
outsl
mov
ja
stc
popf
ja
push
push
stos
lock
sub
fisubl
xor
cmp
mov
mov
cmp
cld
scas
out
pop
negl
unpckhps
add
shrl
jo
sbb
jmp
jnp
mov
push
mov
push
xor
push
mov
cmp
stos
lds
pop
addr16
jb
jg
insl
loopne
jmp
rcrl
lahf
jge
or
jmp
jnp
adc
cmp
and
push
incl
jbe
lcall
lock
jno
xchg
fimuls
addr16
push
gs
sub
out
int3
mov
jl
jbe
dec
pop
hlt
dec
pop
inc
add
repz
test
cmc
daa
adc
lock
cmp
mov
push
data16
loopne
pop
mov
test
cmpb
sub
out
sbb
xchg
lea
inc
rcr
test
jae
je
dec
dec
adc
divl
stos
pop
xchg
add
int
imul
sub
add
push
out
add
lock
nop
popf
jnp
push
inc
add
in
xchg
sbb
ljmpw
gs
ret
jno
fisubrl
andb
aam
mov
jge
leave
or
loopne
add
push
adc
adc
repnz
xor
inc
mov
jnp
sahf
xchg
insb
jle
pop
ljmp
sub
and
lret
lcall
shlb
pop
and
aad
xor
repz
lea
sbb
pop
push
push
xchg
dec
hlt
in
pop
and
xorb
sbb
sub
fidivs
ss
sbb
test
lods
xchg
xchg
cmpsb
mov
mov
cmpsl
data16
aam
sbb
arpl
push
sahf
orl
fadds
add
cwtl
fsubrl
sbb
mov
cltd
and
movsl
sbb
iret
fsubrs
lret
mov
fcmovu
movsb
cmc
rcr
pop
inc
nop
jl
or
fistpl
inc
aaa
push
cmp
add
xchg
cmp
int
negb
test
and
fldcw
pusha
aad
dec
sbb
out
xchg
mov
push
call
outsb
fcoml
sub
sti
xchg
retw
leave
ljmp
dec
jb
inc
mov
xchg
jecxz
sub
mov
insl
loope
push
daa
dec
dec
jmp
lahf
pop
and
pop
ret
xchg
fnstsw
push
addl
ss
daa
adc
insb
jp
push
data16
cmp
pop
push
jecxz
inc
pop
push
fidivrs
dec
pop
lods
or
call
into
xor
dec
mov
jo
sbb
jb
andl
sti
jg
inc
cmp
fisttps
inc
mov
add
sbb
gs
mov
inc
fdivrs
cmp
ds
mov
loopne
js
roll
dec
outsl
mov
popf
lret
sub
addr16
jne
fisttps
mov
fsubl
fs
pop
adc
mov
inc
push
enter
aam
push
mov
nop
shll
inc
mov
ljmp
stos
jno
ds
lds
jecxz
shrl
arpl
mull
in
jne
test
aam
hlt
inc
lock
int
fimull
repnz
jge
fdivrs
enter
xchg
bound
fisttpll
dec
adcb
inc
pop
in
jmp
rol
mov
sub
arpl
mov
aam
cltd
mov
jno
xchg
imul
out
xchg
in
mov
outsl
inc
leave
divb
out
ljmp
xor
adc
mov
mov
xlat
sbb
mov
cmpsl
stos
lahf
mov
cmp
adc
push
dec
xor
aas
test
dec
or
loop
or
test
test
add
scas
mov
test
test
imul
shrl
xor
movsb
adc
mov
lods
loop
enter
jg
iret
stc
sti
cli
push
xorb
pop
incb
test
out
int
sbb
fcoml
or
mov
dec
in
fcomp
or
out
pop
sub
test
out
xchg
jl
aaa
fs
out
hlt
dec
aas
repnz
repz
paddusb
or
aam
mov
test
inc
pop
dec
or
push
xchg
sub
inc
scas
fcom
xchg
pop
cmpsb
test
int
ret
mov
pop
and
fwait
scas
xlat
fdivrs
sub
fstps
pop
mov
lock
in
pop
shl
mov
loope
ficoms
push
pop
jecxz
mov
out
push
dec
cmc
loope
jp
add
inc
xabort
inc
mov
dec
aam
fld
jge
pop
inc
popw
adc
and
push
xchg
fildll
inc
pop
push
push
rolb
out
stos
sbb
xchg
nop
mov
shrb
push
pop
testb
adc
jl
lock
and
push
xor
sub
iret
jns
into
sahf
stos
lods
push
xchg
or
fstpt
or
inc
loopne
add
int
stos
icebp
dec
adc
sub
addb
pop
sub
ret
xchg
push
xchg
or
jl
inc
inc
mov
in
sub
loope
jns
loop
push
xchg
dec
or
xchg
scas
and
and
sbb
mov
les
mov
xchg
data16
cmp
pop
xchg
mov
ds
fldcw
xor
lods
pop
cmovbe
outsb
aad
mov
push
in
cmpsl
xchg
mov
cmp
xchg
and
movsl
dec
test
ret
lods
outsl
das
mov
lds
movsb
imul
inc
sbb
insb
aam
call
xchg
addl
cli
or
fstl
shl
idiv
mov
xchg
or
jnp
sub
inc
lret
mov
stos
push
repz
jl
decb
fidivrs
arpl
mov
sbb
out
adc
in
out
xor
cmpsl
mov
inc
dec
dec
addr16
pop
sub
jae
sub
ret
in
rcl
inc
and
pop
pop
pop
adc
mov
sub
fistpl
fimuls
enter
movsb
fistpll
mov
aaa
mov
lcall
dec
or
pop
int
add
mov
or
sub
cmpsb
test
sbb
mov
mov
jmp
or
push
ja
sbb
push
push
imul
xchg
cmp
stc
cmp
lret
cmc
aam
sahf
jg
nop
dec
cltd
mov
in
lret
outsl
or
clc
shll
lods
sub
mov
cld
shr
or
jl
xlat
xchg
pop
pop
cli
xchg
rolb
dec
movsl
jmp
test
outsb
cmp
dec
inc
fildll
add
dec
mov
stc
outsb
pop
popf
leave
popl
adc
jb
sbb
popf
rcrb
pushl
push
loope
push
dec
adc
fistps
repnz
xchg
imul
jne
jecxz
inc
addb
pop
pushf
add
push
aam
popa
add
pop
xorb
or
std
test
js
adc
test
ss
sub
cmp
cld
lcall
rcr
sub
push
fsts
cmp
add
ret
out
in
jle
pop
pop
push
andb
and
jg
dec
out
std
and
aam
std
sarl
mov
pop
push
xlat
add
mov
leave
xchg
pop
mov
jae
in
aaa
ljmp
mov
mov
xor
cmpb
rcl
add
dec
mov
jno
negl
and
fsubrs
adc
jno
loope
lock
arpl
test
ret
xchg
lods
loopne
into
sti
mov
sbbl
repz
jne
mov
test
jmp
pop
mov
insl
dec
stc
gs
mov
inc
jbe
in
mov
sti
mov
push
imul
push
stos
stos
pshufw
xor
filds
loop
repnz
enter
sahf
stos
cltd
jg
ret
lock
sub
cmp
xlat
mov
push
outsb
lahf
jecxz
sub
enter
insb
jle
add
inc
orb
or
mov
bound
cmp
aas
xchg
imul
gs
add
fstps
inc
jle
lods
xor
shlb
lea
fdivs
hlt
xchg
mov
in
mov
pop
cmp
push
lods
mov
mov
xchg
xor
pop
mov
outsb
xchg
xchg
arpl
lcall
inc
fcmovnu
negb
and
cmp
das
push
in
fistpl
mov
cmp
inc
pop
lea
arpl
pop
xchg
jb
inc
push
cltd
loope
std
sub
ds
sti
ret
pop
lcall
add
lods
sbb
test
aad
sar
sub
cmp
xchg
and
xor
add
or
push
nop
jecxz
sub
aaa
testl
cmpsb
repnz
rorb
xchg
push
pop
xchg
lea
mov
in
subl
mov
mov
mov
es
in
sbb
jne
add
das
in
fcoms
inc
fs
popa
adcl
sbb
neg
inc
jnp
cld
mov
movsb
add
adc
rorl
inc
cmp
repz
pushl
push
cmc
test
test
and
sbb
cmp
idivb
aas
xlat
and
mov
imul
cld
adc
shll
lock
fildl
mov
out
shll
or
adcb
jae
cld
mov
lea
movsl
fst
pushf
incb
ds
jne
into
out
mov
mov
leave
xlat
cmpsb
insb
pop
jmp
iret
push
push
sub
push
pop
pop
jl
jb
repnz
lea
in
mov
adc
addb
call
arpl
inc
cld
mov
jnp
jbe
dec
imulb
loope
dec
cli
dec
pop
frstor
out
lea
xor
jge
mov
jle
xorl
push
rcl
add
pop
das
sbb
mov
jbe
test
ds
xor
pop
jmp
pop
add
lea
in
xchg
aad
xchg
sbb
rorl
outsl
inc
popf
fbld
push
push
pop
loop
cmp
and
test
jecxz
push
push
test
lret
or
sbb
notl
loopne
cmpsb
dec
mov
xor
popa
or
loop
sub
je
popf
xor
das
push
clc
jno
sub
stc
adc
or
inc
xor
test
sub
xchg
inc
out
sbb
jne,pt
je
in
mov
gs
and
outsl
lcall
movsl
loop
sub
shl
mov
int3
daa
fs
test
leave
sar
cmp
inc
or
pushf
inc
mov
in
xor
inc
mov
xchg
lods
and
lds
xlat
lock
dec
ret
out
sbb
loop
test
jmp
push
orl
dec
std
add
repnz
insb
cmp
and
ss
inc
pushl
sti
in
je
dec
pop
in
and
fbstp
into
sbbb
xchg
jg
mov
outsl
cmc
pop
mov
push
int
jmp
push
fcmovb
xchg
cmp
xlat
and
mov
xchg
ss
js
std
xchg
mov
lea
pusha
ja
dec
insb
stos
nop
movsl
cmpsb
inc
shrl
push
call
xchg
and
mov
adc
aaa
jae
roll
inc
jecxz
faddl
les
outsb
lret
jg
adc
jecxz
call
out
out
xor
inc
push
rcr
adc
jnp
lods
push
inc
out
into
adc
pop
dec
jl
rol
push
scas
pusha
mov
pop
mov
jb
xchg
sbb
aaa
lea
scas
lea
loope
rolb
dec
xor
rol
mov
jecxz
nop
pop
push
arpl
jne
cmp
imul
inc
ja
je
push
jmp
cmp
dec
jb
add
inc
ss
push
outsl
push
mov
push
xchg
jbe
or
movsl
stc
addb
addr16
insl
das
mov
cwtl
rcrb
out
fsub
cmpsb
in
pusha
inc
add
sbb
mov
pop
lea
cwtl
push
xor
push
sbb
cmp
lds
std
sbb
ss
and
pop
jmp
sub
std
nop
test
arpl
stos
add
or
cli
packssdw
xchg
and
add
pop
adc
pusha
cmpsl
cmp
push
add
shll
pop
dec
shlb
outsb
in
mov
xor
sahf
and
jg
jae
leave
cmp
push
mov
outsb
enter
push
xor
mov
pop
loop
cli
loop
addl
jns
push
dec
mov
lods
cmp
lret
lret
xchg
or
lcall
push
xor
pop
sub
xor
cmp
push
cmp
or
push
test
push
test
in
or
es
inc
je
ret
lods
shl
test
xor
jle
pop
dec
jge
xor
ret
je
data16
enter
jp
iret
xchg
or
sub
xor
dec
fcomi
lahf
imul
adc
shlb
outsl
repz
aam
mov
bound
jbe
cmp
dec
mov
add
cmp
shrl
cmp
jecxz
mov
pop
clts
in
sarl
cltd
imul
mov
dec
xor
dec
pop
pop
or
es
scas
cmp
push
call
into
jmp
sub
dec
aam
mov
enter
or
mov
dec
jbe
mov
push
fadds
call
test
mov
adc
repnz
aaa
mov
add
jnp
dec
dec
xchg
jae
jno
pop
mulb
mov
push
xchg
int3
sbb
iret
cltd
cli
jo
pop
sub
inc
movsb
mov
jne
negl
dec
cmpsl
adc
inc
lock
mov
or
jno
jecxz
rcll
jno
test
gs
cs
pop
sahf
pop
mov
adc
call
out
adc
aam
mov
jmp
mov
shl
sub
in
mov
pushf
in
or
xchg
scas
fsts
jns
mov
add
xchg
fs
jmp
inc
mov
out
je
cmp
inc
mov
adc
and
sti
jbe
int3
inc
jno
pushf
jns
mov
scas
push
and
lret
mov
fisttpl
mov
inc
sbb
dec
lds
mov
or
repnz
repnz
in
xchg
std
pop
adc
push
pop
ja
lods
sub
or
jg
leave
popf
mov
mov
mov
int3
loop
hlt
xor
sub
pop
add
into
clc
sbb
daa
loope
sbb
cli
dec
out
inc
jnp
test
jecxz
loope
xchg
packsswb
add
lock
or
pop
cmp
aas
inc
mov
fsubr
leave
or
ljmp
das
fs
scas
sub
adcb
sub
or
loope
shlb
in
pop
xlat
push
push
fiaddl
adc
xor
icebp
pop
or
or
cltd
mov
lods
ficoml
cmpsb
push
add
pop
lods
adc
popa
jae
jmp
addr16
sbb
sahf
jb
mov
in
insb
scas
add
ljmp
repz
daa
lea
xchg
jp
out
imul
xor
jnp
xor
push
call
ds
dec
inc
repnz
or
pop
imul
test
nop
shlb
xor
push
mov
add
pushf
mov
hlt
sub
shrb
inc
into
es
pop
jmp
mov
cmpsl
mov
mov
xchg
xorb
divb
lret
mov
and
in
inc
sbb
es
gs
repz
jo
cmp
mov
lahf
clc
mov
outsb
les
xchg
loop
stc
cs
dec
scas
push
or
cmp
xchg
imul
sbb
cmp
add
pusha
incb
movl
sbb
rclb
push
sub
lcall
adc
in
adc
jecxz
in
jno
cwtl
cwtl
sub
rcr
or
es
adc
sbb
dec
cwtl
lea
aam
cltd
cmp
addr16
imul
lea
ljmp
mov
sbb
lret
dec
imull
xor
xor
adc
mov
jb
mov
inc
loop
dec
push
cmpb
lds
add
std
add
inc
pop
into
dec
rcl
lock
xor
jno
fs
xor
ret
shrl
stos
mov
loop
pushf
mov
frstor
cmp
lret
loopne
std
fsubr
xor
in
push
pop
xchg
push
lcall
lods
pop
mov
pop
idivl
mov
call
or
in
insl
imul
push
notb
sbbb
cmp
js
sbb
cmc
adc
cwtl
out
sub
xchg
movl
pop
push
lods
daa
xor
loope
movsb
leave
lods
insb
in
outsb
mov
fbld
sbb
fdivr
mov
dec
test
sbb
push
push
add
jne
jnp
outsl
addl
mov
je,pn
lahf
inc
add
xchg
push
imul
sbbb
push
jo
loop
mov
adc
psubq
jecxz
ja
pop
mov
lods
mov
loope
sub
nop
xor
dec
stc
and
out
cmp
aam
adc
in
push
setge
push
test
mov
jno
or
or
mov
shlb
dec
sub
and
imul
add
pop
pop
cld
imulb
push
testb
cs
inc
or
aad
out
adcb
arpl
fldenv
jge
sub
pop
out
or
jp
sahf
jmp
arpl
jmp
aad
dec
or
fcmovu
mov
adc
fcmovbe
pop
call
ffreep
and
mov
add
mov
repnz
lock
rolb
shl
cmpsb
or
sub
adc
pop
data16
jbe
push
add
test
out
mov
cmpsb
call
jl
cmp
jae
mov
sub
mov
roll
fnstenv
jo
stos
leave
lea
xchg
or
push
mov
inc
fistpll
jbe
ja
dec
adc
and
sbb
outsl
push
xchg
jmp
imul
mov
repz
in
aad
mov
inc
sbb
iret
mov
scas
adc
pop
dec
out
movsb
cmp
icebp
jl
imul
js
ja
jno
aaa
andl
push
mov
lcall
icebp
lret
xchg
pop
fimull
sub
mov
jecxz
mov
fwait
pop
cltd
adc
mov
push
aas
push
imul
xchg
mov
scas
and
xor
mov
shll
and
sub
mov
sahf
popa
push
and
or
iret
lret
jge
sbb
mov
in
add
out
sub
into
pop
das
push
push
cmp
shll
in
cmp
daa
cmc
adc
fnstcw
jbe
lcall
std
xchg
or
insl
jae
jo
or
fisttpl
adc
test
mov
jmp
arpl
ret
inc
mulb
je
push
jge
inc
insb
sub
push
push
push
nop
std
pop
int
fisubrs
clc
pusha
pop
dec
push
into
popf
ds
push
bound
lds
out
xlat
cmp
xor
imul
iret
fnstenv
xor
pop
mov
mov
or
pop
add
fmull
daa
adc
sbb
outsb
bound
xchg
dec
cmpsl
jmp
jecxz
sbb
mov
cs
jns
sbb
scas
into
pop
pop
popa
xchg
xor
jno
adc
or
movsb
lahf
jae
jnp
push
adc
or
xchg
in
jnp
inc
out
insb
jge
enter
dec
mov
sub
or
stos
inc
pop
faddl
push
loopne
sahf
sub
xchg
in
jge
jne
jg
leave
shl
inc
ljmp
ds
fnsave
es
push
fnsave
hlt
push
icebp
push
push
cmpsl
jecxz
rcrl
xor
pop
push
test
jb
jecxz
xchg
sar
xchg
push
decl
xchg
cmpsb
and
push
popa
mov
jbe
mov
out
ds
xor
push
repnz
push
stos
iret
and
idivb
outsb
sbb
mov
xchg
rolb
mov
or
jge
setp
adc
xorl
fld
es
loop
roll
add
mov
sub
stos
sub
in
or
xchg
push
mov
fld
popf
mov
or
pop
sbb
add
leave
jge
inc
adc
into
iret
gs
xchg
jae
dec
nop
stos
in
in
mov
add
sub
mov
push
mov
fstl
xor
shr
sbb
push
push
and
aaa
hlt
outsl
push
xchg
fdivs
adc
jae
int
xor
jno
loopne
insl
cltd
sbb
jnp
je
add
fcomi
fmulp
jl
loop
pushf
and
test
jecxz
lods
pop
lods
jecxz
cmp
push
xor
lods
add
mov
lcall
nop
mov
push
sub
pop
xchg
loope
rcll
cmpsl
shrl
ss
pushf
cmp
aad
and
lcall
or
add
clc
pop
mov
sbb
push
push
mov
jl
mov
cmc
jae
push
xorb
xchg
lds
cmp
jmp
jne
in
pop
lea
mov
mov
mov
ret
movsb
fdivs
jno
jae
sbb
mov
fcmove
add
stos
sbb
xchg
aaa
sbb
rcll
stos
scas
js
xchg
push
xorb
out
mov
inc
jno
inc
add
loop
testb
xchg
imul
sub
inc
and
push
jmp
fs
loop
and
jecxz
jg
lods
xchg
jecxz
clc
mov
fstpl
aam
or
imul
xchg
inc
stos
mov
aaa
mov
cld
repz
popa
xchg
negl
sbb
jg
js
sbb
sbb
jle
mov
pop
push
orl
xor
jae
mov
dec
cmp
daa
add
or
sbbl
xchg
mov
outsb
jp
bound
sbb
mov
popa
fdivs
xor
call
repnz
les
jl
cltd
jl
test
pop
cwtl
or
lods
insb
ret
aam
out
int3
addr16
cmc
adc
xor
fsubrp
das
mov
push
test
inc
les
sub
aam
das
push
out
fwait
push
and
xchg
or
xchg
mov
mov
sub
jecxz
lods
inc
or
js
loop
push
push
stc
push
push
rorl
in
clc
pop
dec
jp
out
fstl
gs
js
movsl
sti
jae
dec
idivl
xchg
movaps
cmp
add
inc
adc
mov
repnz
repnz
dec
ret
mov
dec
dec
testb
dec
into
popa
dec
pop
adc
sbb
stos
add
sbb
sbb
test
push
mov
mov
push
and
add
push
xor
cmc
sub
add
mov
js
or
rol
mov
push
jge
sbb
mov
xor
cld
mov
cmp
movsb
or
mov
nop
pushf
xor
xchg
or
or
rcll
mov
cmp
fsqrt
scas
lahf
repnz
mov
daa
fcmove
sub
xchg
or
int
std
push
inc
mov
push
jge
pop
cmc
into
push
call
inc
sbb
mov
mov
dec
cs
fcomp
cmp
adc
adc
push
jbe
and
mov
mov
orl
outsl
mov
lds
aaa
mov
mov
mov
add
xor
xchg
into
inc
das
js
clc
jle
xchg
sbb
pop
lret
test
insl
mov
imulb
mov
out
je
dec
shrl
cmp
test
jne
sbb
mov
mov
jecxz
or
ret
xchg
iret
adc
jo,pn
fimull
movsl
push
insb
add
mov
mov
inc
cmp
pusha
sub
push
pop
mov
sub
fdivl
and
pop
loope
adc
shl
sahf
addb
insl
jle
fcoms
cmc
sub
jne
adc
sub
shrb
in
jae
mov
dec
mov
xchg
mov
pop
and
jg
out
jl
dec
xor
push
out
cltd
sarl
test
dec
fs
adc
jne
ds
or
hlt
pop
lret
inc
adc
cmp
and
adc
dec
gs
idivl
cld
out
pop
ficomps
push
and
inc
xor
leave
fidivs
mov
frstor
ss
in
push
mov
inc
bound
nop
pushf
jo
cmpsl
cli
in
sub
cmp
inc
mov
in
out
cmp
mov
test
xchg
push
xchg
and
push
subl
mov
in
add
andb
xchg
ja
repz
cmp
mov
jecxz
cs
xorb
cmc
push
bound
inc
cmp
add
test
dec
mov
fisubl
jae
push
pushf
iret
stos
or
fwait
push
mov
cmp
loop
xchg
stc
repnz
jb
pushf
insl
xlat
jnp
cmpsb
loope
stos
dec
out
icebp
xlat
xor
aad
and
jbe
adcb
insl
or
fists
push
pop
sub
mov
sahf
pop
lret
mov
cmc
loop
pop
je
aam
popf
jp
fstl
jl
mov
cmpsl
jecxz
push
jecxz
icebp
push
jge
pop
daa
push
jns
stos
push
ljmp
je
pop
nop
dec
adc
pushf
inc
mov
loop
outsl
cwtl
mov
or
test
mov
jmp
mov
inc
nop
popw
xchg
jmp
loope
movsb
ds
pop
fnsave
jp
or
xchg
hlt
outsl
fsub
mov
outsl
push
movsl
xlat
jmp
cs
mov
and
fistl
xor
pop
lea
daa
pop
ret
fs
adc
addr16
push
test
add
testb
into
imul
cmpsl
xchg
add
mov
mov
test
dec
les
in
ds
mov
cltd
and
adc
mov
mov
ret
fimuls
push
cld
cli
aad
popl
dec
aas
sbb
sbb
cmc
inc
jecxz
scas
loope
mov
inc
or
sbb
rorb
or
orl
mov
mov
lcall
lahf
inc
ret
or
bound
fsubs
pusha
js
std
stos
mov
or
mov
mov
fcompl
rep
sahf
or
aam
lahf
out
xchg
xchg
inc
xchg
pusha
push
dec
pop
push
in
push
xchg
lret
mov
jecxz
push
mov
add
xor
adc
hlt
sbb
mov
mov
les
cld
inc
out
addl
int3
mov
cs
cmc
jge
mov
mov
in
inc
repz
adc
shr
orl
sbb
test
dec
jbe
dec
int
push
stos
movsl
shrl
push
das
int3
in
sbb
xor
inc
mov
adc
or
xchg
jne
push
ja
imul
xchg
nop
jecxz
xor
dec
hlt
test
dec
pop
push
lock
cmpsb
sbb
in
fsubrs
sub
sub
ror
jae
add
loopne
jno
push
mov
insb
xor
push
inc
sbb
xor
aam
mov
jge
inc
mov
sub
leave
and
or
sbb
ljmp
pop
mov
in
mov
in
rorl
pop
int3
rolb
shl
xor
and
pushf
jge
lahf
shrb
arpl
popf
jbe
insb
sti
cmp
inc
hlt
and
loopne
hlt
add
clc
or
rol
roll
jecxz
push
int
pop
mov
sahf
jae
cld
aad
pop
cmpsl
std
mov
add
jl
out
push
cmpsl
jb
sub
je
out
xchg
ret
and
sub
sbb
mov
sub
add
cmp
dec
notb
fwait
loop
cmp
mov
mov
data16
test
push
adc
cltd
stc
jns
cmp
iret
mov
pop
je
jae
xor
xor
xchg
imul
aas
mov
mov
fwait
sbb
mov
inc
and
mov
insb
sbb
test
jl
cld
addr16
xor
mov
or
dec
push
test
in
cmp
jo
and
xor
insl
das
adc
pop
js
add
shrb
lock
out
cmpsb
mov
cli
xorl
mov
dec
sbb
fsubrp
imul
icebp
mov
or
cmp
pop
push
pop
cmc
xor
rorl
mov
arpl
and
mov
je
sbb
cmpb
incb
shlb
lock
ret
loope
stos
pusha
movsl
inc
cli
mov
pop
mov
jne
push
aam
cmpsb
and
dec
and
push
jp
mov
adc
insl
xchg
adc
popl
mov
stc
out
pop
dec
imul
mov
push
adc
stos
adc
cmp
test
inc
int
xchg
arpl
hlt
lea
push
scas
adc
adc
sbb
rclb
fisubs
fwait
push
adc
outsl
sub
repz
ss
mov
inc
or
push
xor
push
adc
hlt
repnz
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
adc
xchg
dec
fdivrl
jp
pop
jp
icebp
andl
rol
iret
and
dec
adc
cmpl
lock
pusha
or
sub
push
pop
movsb
pop
jo
dec
outsb
outsb
adc
jo
fdivp
xchg
and
loope
xchg
aad
mov
jae
xor
stc
xlat
fisttpll
nop
aas
cmpsb
push
or
cli
pop
dec
popf
mov
xchg
dec
ljmp
aad
ja
add
xor
and
lcall
stc
mov
fldcw
adc
xchg
adc
sub
shrb
shll
pusha
mov
or
inc
cmp
adc
push
adc
pop
and
mov
pop
sub
enter
psraw
adc
jae
cmp
add
loope
arpl
mov
push
push
in
sbb
pop
mov
sbb
add
add
bound
cmp
mov
inc
pop
enter
inc
jecxz
push
mov
incl
pop
sub
pop
ret
jle
dec
fldt
lock
shl
and
inc
mov
and
mov
sub
push
push
or
inc
dec
idiv
imul
je
mov
mov
call
jno
lret
mov
push
add
xchg
outsb
and
cmpsl
mov
out
xchg
xchg
mov
fildl
rorl
mov
adc
test
stos
rcrl
adc
mov
mov
jmp
ret
push
mov
xchg
jg
andb
push
mov
pop
dec
dec
int
lock
cmp
mov
xor
or
ljmp
or
add
xchg
aam
mov
pop
into
movsb
out
sbb
cltd
in
fs
sub
inc
jg
xchg
cmovo
mov
cltd
fldcw
jnp
popl
jno
fs
fbld
add
repz
and
in
cld
rcrl
shrl
push
shll
ret
pop
mov
dec
stos
dec
in
cmp
rolb
scas
popa
cltd
push
icebp
cmc
jge
mov
mov
sbb
in
popf
dec
adc
mov
outsl
shr
test
std
cwtl
out
shl
repz
dec
mov
or
test
test
fldt
imulb
cld
aas
lods
nop
icebp
mov
pop
or
push
jp
or
xchg
inc
sbb
jns
cli
mov
cltd
call
dec
jecxz
cli
jle
mov
sub
push
jmp
inc
cmp
cs
sti
lea
cmpsl
xor
mov
dec
lock
inc
fldcw
sbb
in
adc
imul
cmpsl
sbb
or
jne
jnp
jnp
xchg
push
xchg
jne
cmp
daa
sbb
mov
mov
fcoml
mov
outsb
inc
aas
aaa
ret
mov
or
or
mov
jbe
jnp
xor
cmpsl
and
repz
mov
adc
xor
pop
lds
sbb
outsb
xchg
scas
adc
je
out
fs
or
movsb
xchg
in
mov
or
adc
add
lock
in
sbb
mov
test
inc
xchg
mov
sub
mov
push
adc
mov
jbe
imul
xorb
sbb
sarl
loopne
faddl
inc
push
mov
sbb
jl
adc
pop
adc
adc
mov
lods
push
push
adc
les
rorl
rclb
fldcw
sbb
addl
cmp
int
daa
ljmp
mov
aam
leave
in
mov
mov
mov
imul
sbb
pop
mov
mov
fs
adc
sti
int3
jbe
outsb
mov
mov
add
sahf
inc
out
xor
mov
repnz
dec
xchg
xor
pop
sbb
fwait
daa
cld
dec
outsb
jns
outsb
pusha
pop
xor
ds
int3
leave
inc
mov
xchg
iret
add
insl
add
cmp
clc
pushf
pusha
pop
loop
jg,pt
loope
lahf
jb
aad
test
mov
cmp
and
and
subl
pop
scas
cltd
mov
stc
cli
xor
inc
dec
in
dec
push
call
jb
pop
cwtl
push
mov
test
insb
fwait
icebp
mov
negl
pop
pusha
inc
and
dec
test
sar
push
test
cmpsl
imul
aas
or
aaa
cmpsl
lret
sub
icebp
call
dec
mov
and
mov
jbe
mov
jb
loope
jmp
aad
xchg
fst
pop
dec
aam
cmp
movsl
pavgw
xchg
in
adc
aad
mov
rclb
xchg
stc
sbb
insb
lahf
and
sahf
inc
mov
sbb
dec
xlat
fcomp
adc
hlt
jecxz
inc
pop
cwtl
or
add
mov
cmp
jb
xchg
mov
add
inc
jge
mov
dec
mov
dec
lods
jo
call
ds
pusha
pop
test
testb
imul
xor
xor
aam
jbe
and
mov
push
clc
iret
or
pop
fstl
sbb
movsl
lret
pop
mov
mov
cwtl
dec
push
cltd
dec
lret
sbb
loope
xor
and
sti
push
or
jno
addr16
out
pop
stos
jecxz
or
or
enter
jnp
push
into
pop
cmc
int3
out
dec
mov
sbb
mov
sarb
cmp
out
mov
cmp
aaa
add
test
jge
aad
inc
cmpsl
add
sbb
insb
or
inc
and
sub
test
adc
in
ljmp
pop
insl
xchg
jbe
mov
jmp
pop
push
neg
mov
adc
xchg
mov
push
lcall
mov
dec
popa
or
sub
mov
cmp
cmp
les
push
jmp
out
mov
clc
pop
mov
inc
mov
jb
mov
add
sbb
cld
fisubs
dec
jb
jne
loope
hlt
iret
push
out
sarb
repnz
add
sbb
xor
adc
xchg
mov
inc
lods
push
or
lods
xchg
and
jecxz
lret
mov
ret
fisttpll
mov
pop
ljmp
movsl
mov
jne
mov
jbe
xchg
rol
xchg
push
add
scas
movsb
push
in
into
or
jne
xchg
pop
xor
jno
rcll
imul
and
sub
or
cmpl
mov
flds
enter
lods
nop
ss
dec
outsb
mov
xor
loope
pop
dec
dec
xor
sub
enter
cmc
outsl
icebp
push
shll
leave
fstps
cmc
jge
cmp
es
sbb
jae
mov
test
movsl
or
xchg
dec
jp
in
popa
or
ja
jno
aas
pop
leave
dec
es
incl
lret
inc
adc
add
dec
aam
xchg
xchg
stos
sub
push
pop
jne
add
jns
test
sti
int3
mov
dec
stos
xchg
xchg
jb
lods
dec
hlt
push
mov
dec
idivl
mov
nop
sub
adc
or
cmc
jno
jp,pn
mov
ret
and
rorl
loop
xor
add
mov
clc
scas
jle
icebp
push
repnz
pop
cmp
jge
ffree
xchg
outsl
cs
mov
add
loopne
push
add
call
popf
xchg
sub
ficoml
cmpsl
xor
xor
ss
dec
xchg
lret
movsl
fisubrl
xchg
jnp
arpl
jne
xchg
or
pop
cmp
inc
lds
inc
lret
psubd
jbe
in
xlat
lea
push
and
mov
rorb
sub
adc
or
jbe
js
cwtl
enter
push
test
mov
push
adc
and
push
aaa
xchg
subb
inc
xchg
push
push
outsb
dec
pop
out
enter
out
stc
outsl
inc
in
xchg
pop
sub
shlb
lock
je
fldt
pop
es
fadd
lea
jle
mov
push
insl
icebp
movsl
xchg
fsubp
and
lea
adc
and
inc
imul
mov
xor
lcall
movsb
inc
decl
jge
lea
fs
call
push
arpl
sets
test
sti
cwtl
mov
dec
xor
stos
cmpsb
mov
fisttpll
jmp
dec
cltd
pusha
sub
jmp
mov
mov
sbb
cmp
leave
xchg
cld
outsl
scas
push
mov
test
mov
jge
jbe
mov
cmp
adcl
mov
xchg
ss
fwait
ret
push
out
sub
add
ja
and
sub
inc
icebp
jmp
mov
rorb
ret
inc
stc
push
nop
add
cmp
or
xchg
rclb
nop
xor
sbb
and
aaa
scas
cmp
jge
std
dec
or
mov
stos
repnz
or
les
lods
pop
sub
das
push
outsb
sahf
ja
bnd
sti
xor
mov
rolb
xor
sbb
lret
mov
fstpt
test
fisubl
jb
shrb
adc
push
adc
test
lds
adc
mov
pop
pop
or
out
jmp
or
jp
jmp
mov
stos
pop
mov
je
int
cmp
in
sbb
inc
inc
sub
mov
and
push
popa
mov
fsub
push
inc
dec
stc
pop
repnz
lock
or
out
cwtl
push
add
jno
insb
cmp
bnd
jle
lahf
addl
lret
stos
pop
mov
test
ret
mov
test
jae
sub
pop
jmp
cmp
inc
adc
sub
push
call
pop
add
push
inc
je
inc
ficompl
imul
sbb
loope
dec
je
dec
xchg
add
fcoml
ljmp
push
mov
icebp
dec
ficoml
arpl
cmpsb
push
movsb
cmp
push
and
and
add
adc
pop
addr16
ret
adc
daa
lock
int
lcall
out
fimuls
inc
inc
jnp
inc
ret
aam
dec
jbe
ret
mov
imulb
lock
add
jecxz
push
mov
das
add
fcmovnu
into
in
outsl
dec
mov
dec
dec
popa
xor
add
sbb
test
popf
cmp
dec
add
out
test
fadd
push
cltd
cmpb
mov
mov
std
dec
cwtl
ljmp
adc
mov
cmpsb
mov
xor
mov
js
in
xchg
jbe
adc
mov
xchg
mov
xor
push
andl
sbb
dec
out
test
outsb
sar
xchg
pop
mov
cmc
jecxz
nop
jmp
mov
fs
shlb
in
add
jbe
lcall
push
lds
xor
stc
cmp
pop
jp
add
sbb
mov
jecxz
jo
test
mov
add
in
addr16
pop
cmp
out
dec
cmp
push
mov
or
data16
les
push
jne
jb
dec
jmp
mov
pushf
fs
jmp
es
mov
arpl
or
fidivrs
or
cli
xor
orb
sbbb
sbb
pop
ds
or
std
aas
test
inc
mov
cli
xchg
jo
movsb
sbb
mov
or
imul
shrb
inc
adc
pushf
jmp
xor
insl
repnz
jnp
or
in
ret
mov
mov
ja
cmc
sub
jnp
jno
dec
and
cmpsl
in
sti
es
xchg
sub
sbb
shl
fcmovb
insb
loope
cmp
mov
clc
lret
andl
das
fcmovb
sub
mov
mov
data16
loopne
cmp
dec
movsb
sahf
jb
test
out
daa
rcrl
jno
test
popa
jns
cmpsl
lcall
pusha
test
or
xchg
lahf
mov
mov
lock
jmp
aam
mov
std
mov
das
cli
into
or
nop
mov
das
das
movsl
sti
adc
es
adc
sbb
div
test
dec
das
rolb
loopne
std
or
sahf
jg
rorb
lds
mov
mov
xchg
dec
ja
add
push
js
insb
fnstsw
scas
jae
add
mov
ljmp
cmpb
lret
xbegin
bound
and
std
in
pushf
add
pushf
adc
aaa
hlt
aaa
add
fucomp
push
or
cmpsb
popf
xchg
sbb
inc
into
leave
inc
addr16
fwait
es
mov
mov
adcl
in
xor
mov
fistl
out
mov
pop
dec
data16
push
and
jle
push
insb
movsl
and
lret
stos
lods
mov
xchg
dec
ds
das
loope
aas
jno
ljmp
sbb
mov
pop
mov
adc
cmp
hlt
loope
adc
rorb
mov
mov
jmp
cmpsl
cmc
jle
scas
mov
pop
aas
push
lea
dec
or
and
push
jg
mov
sbb
cmp
adc
sbb
stc
mov
call
adc
fistpl
cmp
cld
push
pop
mov
fwait
es
mov
push
ret
push
fdivs
mov
out
cmp
out
repz
fsubp
mov
jmp
repz
xchg
mov
imulb
lret
stos
jge
push
cmp
jbe
or
inc
hlt
out
fisttpll
sub
push
jmp
gs
pop
sarl
sub
cli
sti
jge
inc
xchg
mov
decb
add
jg
cmp
mov
push
xor
dec
xchg
dec
inc
push
stc
push
jns
jo
jg
push
popf
aad
add
mov
cmp
add
cwtl
mov
add
out
fdiv
xchg
inc
xor
add
jle
xor
scas
filds
test
in
inc
lods
xor
sub
test
inc
mov
xchg
out
es
pop
int3
mov
fsts
pop
mov
popa
stos
and
mov
inc
fldpi
jne
scas
xchg
sub
shlb
adc
push
popf
cmp
pusha
pop
push
jo
xchg
ret
sbb
movsl
cmc
dec
sub
dec
jnp
or
sahf
divl
pushf
out
xchg
xchg
and
popf
sub
fldt
imul
movb
cmc
add
lret
dec
out
je
test
dec
iret
fwait
iret
sarb
dec
xchg
push
sbb
mov
push
push
loope,pn
mov
push
xor
adc
fstl
dec
sbb
dec
das
push
push
fsubl
in
pop
jno
xor
inc
inc
cli
dec
pop
or
fldpi
inc
dec
fs
mov
shlb
jno
push
sbb
sbb
mov
imul
push
out
sub
fistpl
mov
push
or
neg
test
sahf
testb
dec
enter
aad
ljmp
notl
je
ret
sub
pop
das
jmp
push
shrb
std
xlat
and
mov
sbb
fstps
test
orb
xor
out
in
push
cmp
sbb
jecxz
xorb
jle
jl
lds
xchg
push
xor
push
push
adc
mov
mov
test
pusha
mov
push
orb
dec
add
and
mov
fs
mov
sti
pop
xchg
mov
testl
adc
and
mov
mov
mov
inc
push
les
push
sub
iret
ja
out
sub
adc
cmc
pop
push
test
les
push
inc
lret
mov
jnp
pop
dec
outsb
xchg
subb
test
add
xchg
lods
mov
icebp
mov
cmpsl
push
out
xor
xchg
or
mov
push
mov
pop
xlat
jb
xchg
pop
xor
add
inc
xchg
lret
fmuls
loop
push
jp
cwtl
add
adc
cmp
shlb
cmpsl
icebp
mov
xor
xchg
out
decl
push
int
push
xlat
test
mov
enter
aaa
fwait
mov
mov
dec
pop
inc
insl
ljmp
jg
xchg
or
hlt
lcall
push
dec
ffreep
sarl
out
lcall
adc
cmpsl
or
xchg
xor
dec
imul
inc
in
in
mov
jno
adc
jmp
sahf
test
add
ja
ficompl
mov
sub
div
push
mov
fwait
sub
leave
cmpsb
fwait
xor
dec
pop
adc
popf
or
fwait
xchg
pop
std
jne
adc
daa
mov
loopne
jbe
jbe
stos
jmp
push
pusha
fisubrs
or
rcrl
in
sarb
je
in
push
hlt
xchg
ficoms
mov
call
mov
cmpsl
xchg
mov
cmp
add
int3
leave
in
cmp
scas
push
dec
pop
xchg
mov
insb
and
lcall
sub
cmpsb
mov
fwait
sbb
popf
mov
jnp
jnp
ret
insl
in
js
mov
lods
mov
repz
dec
mov
mov
inc
add
pop
repnz
cs
mov
mov
test
loopne
xchg
dec
cmp
dec
test
adc
cs
dec
add
jcxz
jno
mov
or
xchg
call
test
repz
mov
iret
dec
fisttpl
and
jecxz
cmpsb
pop
fdivrs
clc
adc
cwtl
adc
mov
dec
xchg
dec
mov
addb
inc
aaa
clc
mov
jmp
scas
jbe
dec
shr
js
push
cmp
popf
shrb
ret
pusha
shll
jne
test
jmp
adc
push
inc
pop
inc
movb
xor
insb
clc
fcmovb
popa
xorb
loopne
push
mov
or
xor
sub
outsl
popa
scas
mov
dec
add
inc
rcl
lea
and
jecxz
jp
mov
or
or
sub
fsubl
enter
mov
mov
repz
pop
test
out
add
jmp
mov
inc
cmpsl
pop
mov
xlat
xchg
xchg
xchg
lahf
subl
jnp
jg
jg
push
mov
mov
fstps
repnz
adc
aad
stos
adc
adc
dec
jnp
ds
add
adc
pop
fadd
push
mov
stos
sbb
sahf
adc
movsl
xor
inc
xchg
lret
inc
jp
pop
pop
out
xorb
xchg
hlt
jo
sbb
movsl
xchg
xchg
pop
add
insl
loopne
mov
xlat
sub
mov
aaa
shlb
jge
or
stos
fnsave
xchg
cld
add
sbb
mov
aam
scas
les
fildl
xchg
and
loope
xor
xchg
int
jl
fstpt
mov
adc
iret
mov
cmp
cmp
rolb
aam
xchg
jbe
jae
mov
test
xchg
in
insb
jae
inc
push
testb
movsl
nop
test
push
jge
fistl
pop
enter
pop
fs
and
cmp
push
and
mov
mov
jns
pop
pop
adc
dec
adc
pop
imul
adc
js,pt
addr16
lds
inc
mov
adc
shrb
jnp
scas
xchg
xchg
sbb
sarl
popf
testb
lds
dec
sub
and
push
mov
inc
jnp
hlt
or
and
dec
loop
repz
addr16
jmp
dec
pop
mov
xchg
or
jbe
ret
loopne
mov
in
fldcw
int
fcompl
bound
iret
iret
popf
fsubrs
xchg
jo
push
xlat
push
mov
rcll
insb
and
idivb
jns
sub
test
addr16
js
cmc
cmp
xchg
xor
addl
sub
cli
movsb
mulb
loope
adc
test
add
je
push
mov
lcall
sub
dec
and
xor
push
mov
je
cmp
enter
pop
xchg
xchg
fsubr
push
mov
mov
sbbl
fs
sbb
rolb
divl
fcoml
int
dec
fucomi
mov
add
pop
in
fs
fstps
imul
push
xchg
mov
pop
adc
mov
pop
jl
data16
push
push
out
adc
jae
pop
rcl
adc
push
xchg
loopne
dec
jecxz
jns
jb
xor
std
mov
sub
pop
mov
cmpsl
iret
jecxz
dec
push
xchg
adc
xor
pop
dec
testb
xor
xorl
push
testb
bound
or
mov
add
pop
dec
mov
cli
add
push
dec
mov
xchg
push
xor
jecxz,pn
cmp
jl
out
sub
outsl
fidivs
ja
dec
and
nop
sub
in
pop
insb
inc
mov
outsl
fs
test
lock
add
fidivl
xchg
les
je
push
jbe
enter
nop
push
add
leave
mov
mov
cs
jb
mov
pop
adc
or
add
adcb
push
lahf
push
cmp
imul
iret
sub
xchg
repnz
xchg
pop
int
jle
inc
inc
add
gs
stos
ja
fcmovne
call
pop
std
out
fisubrl
inc
push
sahf
pop
fsubs
inc
mul
dec
stos
mov
int3
hlt
repnz
mov
jno
adc
jge
sar
ja
test
mov
jno
shll
mov
and
popa
xchg
fistps
sbb
je
jnp
xlat
or
mov
sub
mov
cmp
shl
jecxz
call
cmp
icebp
and
hlt
test
rcrl
lcall
fs
sahf
aam
dec
clc
sub
lds
pop
jp
and
out
adc
int
aaa
jge
cs
aas
aad
test
mov
sbb
sub
test
mov
jno
popf
pop
add
in
lret
mov
icebp
daa
nop
lcall
sub
sbb
mov
cmp
mov
sub
aam
cmpsl
movsb
ds
dec
or
mov
jmp
sub
jecxz
mov
mov
xor
mov
inc
mov
sbb
add
nop
xor
sbb
fimull
jb
cltd
sbb
and
and
sbb
xchg
aas
leave
aad
push
ds
ds
lds
cmp
mov
and
xor
inc
xchg
cld
adc
xchg
push
lods
lock
jp
sub
lods
stos
push
iret
jne
test
movsl
mov
std
fidivs
mov
hlt
push
xchg
ret
fidivs
stos
pop
aam
gs
mov
pop
call
aas
shrl
sbb
inc
and
xchg
push
into
jno
push
push
mov
out
xchg
dec
ficoms
sbbl
xor
arpl
popf
lods
lds
mov
add
push
popf
aam
pop
inc
andl
or
loop
xor
es
inc
sbb
popf
and
aas
enter
xor
adcb
jmp
cltd
imul
in
push
inc
sahf
push
mov
cwtl
cmp
daa
cmpsb
jecxz
outsb
mov
mov
pop
cmp
adc
mov
pop
push
rcll
stos
sub
sub
fcompl
imul
push
mov
std
dec
nop
or
dec
insl
xchg
lahf
sub
imul
jne
xor
mov
mov
nop
jmp
fwait
shl
jbe
push
aaa
call
mov
push
dec
inc
pop
mov
add
sub
ret
in
mov
mov
sub
outsb
roll
jg
mov
adc
outsb
sti
popa
xchg
popa
in
sub
es
shlb
fs
xchg
mov
clc
data16
cltd
shrl
jnp
call
push
movsb
jne
inc
mulb
jnp
or
in
mov
inc
dec
popa
push
xor
test
sbb
enter
and
pusha
ja
leave
push
and
xor
out
cld
jge
lea
in
iret
xchg
xchg
outsl
in
cmp
fmull
stc
mov
cs
cmpsb
mov
mov
and
mov
jp
add
int3
scas
fsubl
sub
bound
out
jno
movsl
cmc
es
aam
clc
push
out
sti
push
push
fcompl
shlb
and
pop
xchg
push
lock
or
fstpt
fcompl
in
dec
jg
jmp
fnstcw
fwait
popa
mov
sub
cmc
or
xchg
cmp
lret
mov
xrelease
lcall
popa
pop
or
push
aas
inc
cmp
dec
xorb
fs
inc
stos
mov
mov
mov
jg
popa
inc
rorb
xchg
jns
mov
push
imul
pop
push
mov
jae
mov
pop
ret
fiadds
cs
cmc
lret
add
cmp
pop
xchg
push
jno
movsl
add
cli
mov
jl
mov
xchg
loop
lods
fisttpl
sarl
and
inc
andb
insl
mov
fistpll
pop
push
loope
jnp
outsb
shlb
test
xchg
mov
iret
add
ljmp
cmp
mov
in
enter
sbb
js
les
lea
or
test
jl
dec
pop
cmp
es
in
lods
cmp
sub
xchg
sub
mov
mov
shlb
push
push
pop
inc
mov
sarb
cmpsl
loopne
xchg
aad
repz
xlat
test
scas
mov
mov
lret
cli
inc
test
pop
enter
fs
mov
mov
jecxz
xchg
mov
xchg
sbb
decb
cmp
repnz
iret
test
jbe
add
fstpl
jne
ljmp
push
jge
in
push
shrl
leave
orb
or
push
movsb
sti
or
sbb
xor
mov
stc
dec
lret
jl
or
jno
or
adc
fistl
push
add
push
lahf
jmp
inc
mov
je
sbb
cs
fidivrl
sbb
pop
loop
pop
lret
sbb
mov
ds
pop
cld
mov
xlat
cwtl
mov
rorl
rcr
add
aas
mov
cs
movsb
sti
dec
pop
xchg
fxch
or
rcrb
loopne
xor
nop
lret
adc
rolb
sbb
inc
jb
push
iret
mov
dec
sub
cwtl
pushf
xchg
int
mov
cmpsb
imul
inc
je
inc
in
push
in
lds
pushf
sbb
dec
push
int
subl
pop
sbbb
pop
mov
xchg
mov
popa
mov
jnp
mov
fdivrs
mov
mov
pop
jae
dec
les
popa
sub
test
xor
cmp
sub
sahf
jbe
subl
js
outsb
and
push
pop
mov
mov
call
fstpl
nop
loope
inc
mov
xchg
dec
xor
cmp
cmp
shl
jnp
xchg
inc
stos
ja
add
mov
ucomiss
xor
sub
mov
lea
jp
stos
pop
sub
test
add
jle
out
filds
flds
lds
aam
pop
dec
jmp
enter
lret
mov
and
cs
cmp
jge
fwait
sbb
stos
pop
add
mov
and
popa
cltd
mov
inc
cwtl
sbb
xor
out
dec
jmp
pushf
add
inc
jo
int
dec
es
popa
jg
scas
clc
lcall
dec
mov
in
pop
les
inc
dec
test
jns
int
dec
mov
push
mov
inc
rorb
jno
mull
outsb
test
push
mov
out
jp
and
aad
dec
push
push
sbb
mov
xlat
cmp
mov
test
test
rclb
loopne
cmp
mov
insb
add
shl
or
shlb
mov
or
loop
stc
inc
sub
cli
cmp
xchg
andl
test
addr16
jbe
data16
daa
dec
xor
xchg
or
or
push
decb
sbb
fsubrp
sub
fldenv
jb
filds
mov
bound
dec
mov
xor
test
jmp
call
out
test
jmp
adc
or
icebp
xchg
ss
call
fsubrs
inc
test
jno
sub
dec
popa
test
sub
lock
int
pop
lret
dec
mov
cmpsl
data16
mov
jns
ljmp
mov
insb
sub
xchg
adc
out
sti
lods
push
addl
add
test
inc
cmp
sbb
test
jnp
fwait
mov
clc
mov
call
push
jo
xor
repz
sbb
fimull
out
cmp
imul
add
int
jp
mov
mov
xchg
jmp
inc
push
adc
sub
into
dec
fs
xchg
inc
fs
fwait
mov
jle
cmp
pop
iret
hlt
and
loop
ret
gs
pop
xor
mov
pop
adc
inc
inc
mov
pusha
cmp
cltd
xchg
test
xor
push
dec
or
xor
add
adc
and
jp
sbb
xor
xchg
fs
lret
dec
dec
bound
adc
and
jnp
mov
adc
dec
lods
shll
mov
mov
in
es
pusha
loopne
xor
data16
pop
sarl
sub
fistpl
out
sub
fimull
fwait
push
cwtl
mov
arpl
orl
cld
hlt
divl
mov
fidivl
test
mov
call
in
int3
jl
sub
and
je
cmpsl
pusha
call
jp
xchg
shl
enter
xor
cs
jo
enter
testb
pop
add
or
xlat
mov
mov
adc
cmp
out
test
imul
es
ljmp
ds
xor
sbb
movsb
inc
daa
clc
add
loopne
pop
addr16
sub
in
or
rcrl
push
gs
sti
ljmp
repz
sbb
mov
xlat
sbb
les
push
jmp
sbb
mov
lret
es
add
movsl
mov
and
sbb
mov
and
hlt
xchg
jle
xor
shll
arpl
mov
jne
sub
popf
mov
outsb
addr16
push
rolb
mov
lds
mov
dec
cld
gs
mov
mov
push
xchg
add
adc
sub
mov
or
cmpsl
xor
push
inc
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
mov
xchg
adc
das
pop
jp
push
mov
xor
dec
push
xor
push
lret
mov
out
jae
sbb
mov
xchg
or
enter
add
adc
loope
xor
dec
in
mov
ja
lea
stos
xorb
ds
in
adc
cmc
pop
mov
mov
fwait
add
dec
fdivp
sbb
mov
xor
dec
outsb
jno
pusha
mov
fadd
pop
xchg
xor
scas
insl
xchg
jp
inc
cmc
jmp
pop
mov
in
ret
lret
sbb
xlat
cmp
push
outsb
pushf
jns
das
or
loop
sbb
mov
fbld
cmpsl
iret
rcrb
inc
lret
popa
stos
sub
stos
jne
push
push
or
testl
mov
push
add
mov
sub
iret
js
mov
lret
add
ds
adc
dec
mov
xor
out
lea
pop
push
clc
push
sbb
ret
fdecstp
fwait
dec
sbb
sbbb
lods
leave
loopne
jb
xchg
cli
pop
dec
lahf
mov
fs
sti
js
add
nop
mov
jge
loope
xor
std
repnz
and
cmove
sub
aam
jo
push
rcl
add
gs
mov
dec
fsubrs
cmpsb
and
ss
lods
push
imul
mov
mov
mov
mov
push
mov
jno
pop
jecxz
cmp
jl
mov
inc
inc
movsb
dec
stos
les
mov
or
sub
outsl
rorl
mov
sbb
xor
jp
mov
and
imul
je
pop
call
roll
jp
xor
push
mov
push
pushf
sub
jg
mov
pop
scas
imulb
sbb
cmp
cmp
xor
mov
out
dec
mov
jmp
xchg
and
movsb
fisttpl
push
fsubs
add
addb
aas
and
inc
push
movsl
sbb
and
test
inc
test
pop
fbld
cmpsl
dec
push
jecxz
mov
cmp
shl
insb
add
and
or
movsl
shr
test
xor
cli
xchg
jl
das
loope
mov
insb
notb
pop
arpl
pusha
mov
loop
out
jns
sar
std
and
fwait
pop
xchg
or
call
mov
pop
gs
xor
stos
mov
lods
push
push
push
jl
inc
xchg
test
repnz
mov
enter
pushf
sub
in
repz
or
sahf
inc
mov
sbb
jns
int
fmul
lret
cwtl
xchg
push
mov
out
insl
xlat
cmp
jmp
dec
inc
or
xchg
fwait
daa
shrb
lret
into
shr
cmp
fsubs
or
lret
lcall
dec
rorb
orb
fwait
inc
xor
xor
popa
repz
int3
pop
into
insb
pop
out
jb
cwtl
je
jbe
push
adc
push
or
inc
mov
cmp
fisubs
and
mov
mov
or
rorb
aas
jns
clc
xchg
mov
sub
lods
xor
les
jl
out
int
scas
call
xacquire
mov
push
jb
sahf
loope
out
addr16
flds
pushf
out
xchg
mov
testl
mov
fnstcw
addb
adc
inc
sbb
jo
je
sbb
scas
movsl
add
xchg
mov
pop
sub
adc
scas
mov
cltd
rol
inc
sub
inc
in
mov
popf
mov
pop
xor
js
dec
sub
clc
mov
mov
adc
sbb
sbb
inc
xchg
fisubrs
ficoms
les
lds
mov
and
sub
cmp
add
into
fsts
add
out
mov
dec
xchg
and
jb
sbb
xchg
scas
adc
stc
rcrb
data16
xchg
mov
mov
push
lahf
out
out
jmp
xor
movsl
std
les
pop
jle
cli
cmp
daa
shll
mov
dec
mov
out
or
test
clc
les
jg
and
adc
push
mov
sub
or
out
cmpsb
mov
les
fnstenv
and
dec
mov
push
loop
aam
test
repnz
adc
jnp
outsl
addl
or
out
adc
lods
mov
jns
leave
dec
jl
mov
dec
in
add
add
mov
shll
sub
inc
insl
adc
sub
mov
cwtl
xchg
aaa
push
lret
ret
fsubs
pusha
push
in
outsb
jmp
jo
daa
and
repz
es
mov
imul
lea
sbb
shll
inc
cmpsb
adc
aas
mov
call
testl
xor
push
mov
dec
fldt
cmpsl
lret
jno
push
mov
pop
cwtl
xchg
iret
push
dec
push
shrb
popf
je
je
adc
subb
jb
inc
insl
mov
cmpl
adc
push
subb
jle
dec
std
roll
clc
pop
mov
pop
pop
cmp
dec
lods
and
stos
movsb
lret
cwtl
mov
cmp
adc
ljmp
and
xchg
fnstcw
fwait
pusha
fucomip
inc
mov
or
mov
mov
mov
push
mov
cmc
add
dec
add
and
cmp
pop
lods
mov
bound
cmp
stos
test
mov
aas
sbb
jecxz
xchg
lods
sysret
xchg
cmpsb
in
pop
inc
add
add
mov
jge
jge
mov
int3
and
add
shl
mov
push
inc
gs
sub
mov
das
xlat
jg
sub
jbe
out
test
ss
mov
cli
dec
mov
ss
loop
imul
cmp
add
jmp
add
push
push
lcall
out
lods
push
pop
cli
dec
push
cmp
lock
fcomi
xor
mov
push
out
jge
xchg
iret
mov
sahf
fdivrs
bound
fsubrl
nop
xlat
sub
mov
dec
in
sub
sub
sbb
and
idivb
push
lret
out
fdivl
pop
jnp
sarl
out
sub
iret
xlat
in
scas
jae
popa
ret
mov
mov
insl
xchg
push
cli
in
pop
push
movsl
sbb
xor
and
in
std
rcr
mov
ja
adc
jo
mov
or
mov
hlt
dec
inc
mov
xchg
pop
or
movsl
cmp
adc
pop
test
jbe
nop
mov
xor
ja
pushf
or
lret
mov
cmp
stc
pop
cmp
insb
sarb
adc
sub
jge
clc
cs
out
xor
popa
aaa
jge
adc
setnp
mov
dec
mov
lret
pop
sbb
jo
jns
lds
adc
mov
or
daa
and
fbld
add
aas
ret
push
stos
push
pop
pop
popa
mov
negl
aam
jnp
fwait
loope
push
out
mov
xchg
jg
mov
cmp
stos
pop
sbb
fisubrl
sti
pop
addb
lahf
dec
mov
adc
fldcw
xchg
lods
cmp
and
ja
jns
lds
push
shlb
push
mov
jnp
je
fcmovbe
mov
adc
test
lret
into
mov
or
sti
dec
and
std
jb
sbb
sahf
jge
adc
lea
or
mov
inc
jb
arpl
lds
sahf
pop
mov
mov
cld
jnp
loope
push
jne
xor
cli
gs
and
scas
cmp
iret
pushf
push
ljmp
pop
push
fadds
leave
mov
retw
mov
push
cwtl
les
cwtl
cmp
xchg
push
jmp
inc
loope
pop
jnp
push
movsb
shlb
xchg
in
clc
mov
aam
dec
inc
aad
jmp
mov
or
cmpsb
sahf
jnp
fwait
cwtl
fldenv
lods
mov
push
and
mov
fwait
in
dec
jnp
ret
outsl
sub
das
jl
stos
sahf
pop
insl
fwait
dec
decb
scas
lods
mov
outsl
test
mov
rorb
xchg
rcll
lods
mov
or
inc
hlt
jbe
xor
push
iret
into
ret
xchg
inc
pop
outsl
test
jne
sbb
int
into
imul
andl
xchg
push
sbb
sbb
add
fiadds
insl
notb
xor
xchg
mov
lret
jle
lahf
push
xchg
add
fyl2xp1
jle
mov
data16
mov
test
mov
mov
mov
inc
mov
test
mov
lods
int3
das
and
arpl
in
adc
mov
fsubl
dec
btc
push
outsl
pop
xchg
in
xor
and
das
xor
in
cmpsl
push
dec
dec
lret
cli
popa
lahf
mov
cmp
lods
jecxz
int
dec
push
insl
gs
gs
sub
push
pushf
iret
shll
pop
lcall
add
jp
nop
push
add
int
cld
mov
fwait
movsl
ja
pusha
leave
pushf
loop
adc
inc
test
dec
pushf
cli
pop
lock
and
xchg
int3
lea
adc
dec
mov
dec
xchg
mov
inc
push
sbb
insb
pushl
jl
lret
xchg
or
sbb
repz
push
xchg
jp
adc
cltd
dec
mov
test
scas
lock
push
lds
lcall
fnclex
xor
arpl
lret
rorl
and
inc
cmp
push
shll
pop
rolb
jae
inc
nop
outsb
inc
loop
pop
test
jne
cmp
adc
repz
and
scas
jmp
rorb
int
ret
loope
xchg
mov
shrl
pop
adc
xor
rorl
das
mov
mov
test
scas
scas
adc
inc
aas
data16
dec
jge
fucomi
cli
cwtl
dec
mov
dec
in
xor
jle
sub
hlt
movsl
pop
mov
adc
adc
pusha
xchg
mov
in
out
adc
cmc
xchg
es
popf
lret
cltd
sub
xchg
pushf
xor
add
mov
fistps
push
jo
sti
jne
jb
adc
dec
add
clc
jno
and
ficoms
fsub
jl
jl
loope
add
and
or
push
and
fwait
jg
cmpsb
loope
clc
sub
cwtl
xchg
inc
scas
mov
inc
mov
rcrb
in
movsb
hlt
push
roll
rol
jno
pop
push
call
popa
xlat
push
sbb
xor
mov
or
clc
hlt
out
dec
or
std
mov
popf
pop
push
jp
xor
xor
inc
push
inc
cmp
lds
daa
cld
repnz
add
in
rcr
out
pop
cli
fidivrl
sub
test
sbb
adc
test
dec
ja
dec
adc
mov
push
incb
fcoml
rcl
inc
fwait
mov
enter
pop
out
push
hlt
loopne,pt
cmp
jge
into
cld
cwtl
sbb
paddq
fidivrl
test
or
leave
xchg
push
popf
mov
repnz
lcall
inc
jo
xor
jae
add
xor
cmpsl
xor
ret
data16
pop
mov
pop
jmp
pushl
cld
test
lds
das
neg
imul
sti
loopne
push
aad
sub
sbbl
stos
sub
pop
adc
jne
or
push
cli
in
pop
mov
pop
jecxz
push
adc
xor
push
xchg
xor
jecxz
pop
test
cmp
dec
popa
bound
or
movsb
xor
cld
jbe
push
aas
mov
pop
add
jbe
jne
jle
addr16
cmp
popf
test
stos
jno
stc
cli
push
push
dec
jp
dec
arpl
notl
andl
dec
movsb
mov
mov
mov
fs
repnz
test
push
jmp
sbb
adc
and
in
xor
insl
push
out
inc
call
push
cmp
adc
push
jge
movsl
jbe
mov
jbe
push
fimull
ss
push
hlt
dec
test
add
mov
sahf
repz
pop
jae
push
mov
cld
imul
cmp
repz
add
inc
cmp
insb
mov
push
stos
in
shlb
testb
inc
pusha
jne
jge
movsb
add
in
ss
pushf
mov
test
or
pop
pop
adcb
movsb
or
pcmpgtw
cmp
cmpsl
jg
jecxz
icebp
cmp
pop
insb
mov
andb
sbb
add
push
mov
inc
jecxz
subl
outsb
stos
js
cmp
cmp
pop
jb
sbb
jns
into
mov
rorl
sti
mov
das
into
jp
and
aas
addr16
push
and
shrl
mov
jbe
xchg
fcoms
ljmp
dec
outsl
cmc
add
aad
jo
je
imul
call
and
xchg
mov
push
shrb
stos
shlb
jnp
bound
insb
dec
sbb
decb
popa
nop
inc
xchg
cmpsb
aaa
cmp
clc
mov
hlt
mov
mov
fs
jb
cld
xlat
jle
mov
es
add
jno
fidivl
sbb
test
insb
aad
mov
aas
lret
mov
sbb
sbb
sbb
sbb
xchg
outsl
adc
dec
faddl
cs
push
scas
jns
pop
mov
cmp
lock
rolb
pop
cltd
out
xchg
sbb
call
mov
les
scas
cmp
into
mov
pop
nop
mov
xchg
aas
fwait
enter
mov
sbb
cmpb
jbe
loopne
arpl
inc
filds
and
mov
pushf
adc
ljmp
push
lahf
or
int3
push
das
xor
dec
in
test
notl
loopne
inc
ljmp
pop
xchg
adc
mov
pop
aad
rcrl
les
and
scas
mov
pop
lret
scas
sbb
les
push
cwtl
aad
insb
aas
push
push
pusha
pusha
in
test
insl
xor
sbb
cmc
test
cmovg
inc
fldl
cmpb
pop
inc
jne
data16
inc
dec
dec
push
lods
pop
shll
push
aad
sub
dec
xchg
inc
popa
lea
cmc
aam
iret
jno
fistps
xchg
cld
and
test
mov
and
cmp
icebp
jae
lods
insb
fsubr
adc
data16
pusha
add
push
lock
push
insb
or
stos
hlt
mov
stc
mov
pop
ret
pop
fists
mov
loopne
stos
popf
mov
je
cli
cmp
sub
nop
mov
rorb
inc
adc
dec
ret
sbb
mov
xor
mov
or
push
movsb
push
cmc
scas
sub
push
ret
sbb
fs
cmp
pop
mov
mulb
sbb
mov
insl
addr16
dec
inc
icebp
xchg
dec
mov
xor
and
fstps
mov
sbb
cld
xlat
cld
fwait
cmpsl
cmc
mov
mov
fcoml
ja
mov
enter
daa
in
or
sbb
sub
add
jge
nop
xor
mov
mov
or
jns
fisubrl
cmpsl
pop
add
hlt
xor
push
aad
out
dec
mov
push
loop
js
add
scas
and
dec
sub
pop
adc
pop
xor
mov
repnz
sub
mov
cmpsb
loopne
jge
addr16
pop
mov
xchg
jns
inc
loope
clc
dec
dec
call
push
xchg
in
in
sbb
or
fisttpll
repz
imul
fprem1
ja
ss
sbb
cmp
cmp
cmp
jle
and
pop
gs
mov
dec
outsl
cwtl
inc
cmpsl
or
xchg
out
loopne
neg
pop
and
xchg
jo
cmp
fadds
push
and
mov
inc
mov
fisubl
lds
subl
test
lods
lea
mov
ds
jns
cmpsb
and
outsb
fildl
test
mov
mov
xlat
jnp
cs
cmpl
rcr
pushf
push
mov
fimull
es
jae
fwait
mov
dec
imul
sbb
cmp
xlat
shll
pop
push
xchg
icebp
je
pushf
insb
mov
pushf
cmp
jecxz
fstpl
dec
sti
clc
mov
icebp
jp
popl
mov
ds
and
stos
test
rol
dec
dec
fnstcw
lret
out
jno
sub
leave
sti
xorl
imul
lock
stos
lret
jp
mov
je
stos
cs
int
xchg
xchg
ja
loop
mov
jbe
in
or
data16
mov
pop
or
xor
jecxz
sbb
leave
aas
add
sub
fldl
test
fcom
fistps
mov
and
mov
xchg
test
repz
jae
cmp
adcl
mov
xchg
rcll
sub
or
aas
push
lahf
data16
mov
pop
mov
pusha
loop
rorb
jae
and
mov
divl
and
mov
cmp
outsb
pop
aad
mov
insl
popa
and
pop
push
loope
inc
adc
xor
push
mov
cmp
mov
and
xor
negb
push
in
sbb
push
push
scas
sahf
shl
or
stos
out
sbb
mov
iret
imul
aaa
jns
movsl
ds
idivl
movsl
pushf
sub
and
mov
js
shr
call
loopne
xchg
cmpsl
cli
daa
dec
add
loope
mov
and
cmp
inc
ret
pop
nop
pop
stos
jnp
and
jge
xchg
inc
adc
cmp
jmp
jne
out
xchg
xchg
movsl
jae
sub
shl
mov
xchg
inc
in
add
ja
xor
imul
cmp
fcompp
ja
cmp
leave
leave
sub
inc
data16
leave
dec
stos
jno
cs
popf
jl
insl
rcll
push
sbb
icebp
insb
lcall
test
mov
in
and
mov
dec
sahf
je
paddq
addl
dec
pop
int
cmp
xchg
jo
nop
shll
xchg
cmp
dec
xchg
out
mov
and
mov
mov
mov
inc
in
lds
pop
mov
les
stos
sub
and
xor
or
call
ficoml
stos
insl
fs
adcl
outsl
dec
add
cmpsb
adc
and
inc
cltd
sub
xorl
sbb
mov
out
test
mov
shrb
xor
fwait
imull
aad
or
and
imul
repnz
add
adc
mov
and
mov
cli
negl
push
repz
adcl
bound
cmp
sub
cmp
fnstsw
mov
or
test
or
insl
ficomps
cwtl
outsb
fidivl
jbe
inc
push
cmp
lock
mov
dec
sub
xor
sub
pop
jmp
pushf
andb
add
hlt
mov
aas
notb
adc
mull
xor
mov
movsl
cmp
mov
cwtl
mov
int3
mov
fs
dec
lea
inc
aad
scas
xor
mov
cli
dec
push
jns
scas
and
outsl
pop
arpl
xchg
or
lcall
scas
or
mov
mov
adc
pop
mov
shrb
jp
add
inc
inc
std
sub
lcall
jle
repnz
mov
mov
jecxz
sub
lods
adc
sub
cld
jmp
pop
ror
xor
or
into
and
dec
into
adc
sub
in
push
sub
into
push
sti
mul
mov
or
gs
cmc
mov
stc
push
mov
fildll
sub
adc
pop
nop
aaa
mov
sub
dec
daa
into
cmp
push
push
adc
jmp
mov
cmp
cld
jnp
cmp
mov
fisttpl
test
out
sahf
cmp
pop
call
and
push
mov
xor
jle
pop
je
int
xchg
les
mov
repnz
xor
lcall
lds
mov
ss
push
mull
and
mov
out
add
jnp
lahf
pop
mov
jns
mov
inc
sub
mov
pop
sbb
pop
pop
lock
movq
mov
jb
shrl
pop
sar
hlt
shl
and
cs
mov
leave
xlat
loope
decb
adc
inc
mov
pop
push
je
push
pop
cmp
and
stc
ds
mov
adc
lds
mov
lds
je
dec
ret
outsb
js
in
pop
lods
mov
dec
mov
jae
jmp
mov
rorl
aaa
push
and
mov
cmp
test
jb
xchg
xor
sbbl
ja
insl
dec
out
stc
adc
pop
add
dec
gs
jo
cmp
and
jnp
daa
mov
in
mov
je
dec
movsl
fimull
xchg
int
push
mov
and
in
pop
cmp
cwtl
scas
popf
and
cmp
xor
mov
pop
mov
cs
adc
imul
xchg
xor
mov
movb
push
jmp
mov
dec
bnd
pop
mov
add
pop
push
pop
hlt
mov
jb
ficoms
ds
pop
or
cmp
iret
pushf
loopne
inc
movsl
dec
pop
imul
sbb
cmp
leave
cmp
mov
pop
cmp
in
int3
jmp
loopne
pop
cmp
cmpl
vshufpd
mov
push
or
pusha
ds
xchg
lahf
out
mov
cmp
or
iret
sbb
pop
jmp
sub
wbinvd
enter
push
push
mov
mov
mov
loope
stos
dec
push
faddl
ja
mov
add
mov
out
outsl
mov
nop
jbe
js
addr16
fld
fwait
push
dec
mov
int
push
daa
into
les
push
ja
xor
sub
jmp
jmp
lds
in
sub
out
inc
clc
loope
lds
xchg
and
andb
fadds
xor
push
xlat
and
mov
jecxz
pop
jmp
add
mov
fwait
lret
adc
cmpsb
ja
int3
xchg
insb
sti
rcrl
mov
add
shrl
in
aas
insl
repnz
cwtl
mov
cmp
addr16
les
addr16
mov
jecxz
mov
mov
testl
mov
mov
dec
arpl
jg
add
push
loop
add
push
iret
inc
push
sti
cltd
mov
mov
popa
repz
int
stc
roll
xor
mov
push
shr
rorl
pop
nop
push
clc
mov
and
push
andb
xlat
dec
mov
mov
pop
aaa
xchg
dec
dec
add
dec
sub
mov
repnz
cmpsl
cmp
adc
into
jle
in
in
mov
cmp
test
cltd
inc
test
cmp
dec
popw
inc
loop
inc
add
les
mov
ret
stc
mov
mov
dec
pusha
push
in
mov
lods
jl
sbb
mov
push
jge
pop
cmp
push
pop
in
cmpsl
sbb
mov
lea
dec
xchg
rorb
das
sbb
sub
arpl
out
xchg
mov
cmc
bound
dec
les
ret
sub
push
add
ss
push
jbe
jno
std
repnz
mov
cwtl
imul
out
jns
push
pop
sbb
pop
inc
movsl
xchg
nop
jbe
xchg
or
stc
sbbb
cmc
push
aam
lods
lods
aas
fwait
in
in
or
test
and
mov
mov
lods
insl
scas
call
stc
inc
enter
loope
sub
sbb
adc
stos
repnz
xchg
fidivrs
mov
or
rol
div
mov
mov
mov
jae
pop
rcrb
adc
and
xchg
xor
dec
out
jecxz
push
sub
or
sbb
add
add
xchg
xchg
aaa
dec
xor
jecxz
inc
je
or
push
lods
es
push
jge
or
aam
cmpl
lcall
jmp
movsl
xlat
add
pop
outsl
out
loopne
jge
xor
mov
sarl
cmp
mov
sbb
push
push
stos
lock
iret
into
jno
call
lea
mov
enter
dec
movsl
icebp
cmp
or
xchg
pop
rol
sub
mov
mov
add
and
notl
xchg
out
jmp
and
sub
and
data16
and
push
and
rclb
sbb
inc
cmpsl
adc
cmp
shlb
fnstenv
outsb
shrb
add
out
into
mov
mov
push
jbe
mov
stc
cmp
lods
cmp
and
sahf
pop
stos
pushf
testb
add
and
push
xchg
dec
add
daa
stc
xor
mov
inc
test
adcb
mov
call
adc
nop
jl
push
xor
cmp
add
pop
mov
pop
cmp
in
ss
push
dec
pop
dec
adc
bnd
cltd
aad
test
stos
lock
cmpsb
or
jecxz
das
or
mov
pop
inc
out
test
xor
push
dec
sub
rcrb
popl
in
mov
jns
and
add
enter
into
mov
popw
sub
or
xchg
and
mov
adc
mov
push
aaa
stos
add
pushf
xor
jbe
cltd
mov
add
addl
and
into
sar
in
xchg
sub
in
mov
push
dec
rep
and
jne
scas
fwait
xchg
and
mov
outsl
frstor
loope
movsl
test
mov
sti
shlb
mov
sub
daa
pop
fbstp
out
repz
jbe
xchg
loope
adc
lea
ljmp
lea
sbb
mov
dec
jns
mov
bound
in
mov
pop
stos
cli
cmp
icebp
addr16
jns
jg
mov
jecxz
dec
jae
insb
mov
cld
jge
push
int3
arpl
lret
mov
add
lock
rolb
push
icebp
xor
xlat
jecxz
outsb
aam
fnsave
inc
mov
xchg
imul
cli
xchg
push
arpl
mov
test
dec
rcrb
pop
mov
hlt
std
cmp
outsb
loope
mov
cltd
cmp
jbe
lcall
push
push
pop
xor
push
arpl
jg
cmpsb
comiss
jecxz
mov
jnp
out
add
std
sub
pop
dec
bound
dec
call
mov
shll
push
repz
dec
fwait
sbbb
icebp
inc
lahf
pop
push
push
call
xchg
mov
or
push
dec
shr
stos
inc
repnz
pop
dec
lods
inc
jb
inc
sbb
loope
js
adc
pop
mov
add
sbbl
in
jmp
push
mov
pop
mov
cmc
dec
fidivl
lods
cmpsb
fmul
mov
cld
xchg
adc
adc
hlt
pusha
aaa
and
jle
rcrl
jno
jbe
int
es
data16
shrd
cmp
lds
aad
jb,pn
movsb
mov
mov
add
mov
jl
xor
sahf
in
mov
std
mov
mov
mov
dec
sub
push
xchg
cmp
sti
fs
xchg
stos
xor
jle
cmp
mov
jmp
sbb
cmpsl
mov
adc
leave
sbb
dec
jnp
pop
dec
jl
sub
stos
fcomip
clc
jmp
push
fidivrs
mov
pop
mov
ja
das
sbb
pop
nop
sbb
or
mov
and
adc
push
jb
sub
jle
sbb
dec
xor
insl
out
testb
mov
mov
data16
xchg
sub
je
add
add
mov
inc
adc
mov
xchg
inc
sahf
fidivs
sbb
jb
mov
lea
sahf
fcoms
mov
sub
mov
shlb
xor
push
ss
enter
test
fistpl
jl
test
push
xor
jecxz
sub
fbld
out
shlb
jo
pusha
push
push
or
aad
mov
mov
popa
cltd
repz
inc
sub
in
add
test
mov
imul
test
lret
out
icebp
shrb
sbb
lret
testb
sub
pop
and
xor
xor
pop
sub
inc
aam
sbb
out
pop
int
test
pop
inc
dec
mov
or
sbb
lret
fmuls
andl
push
sbb
ret
push
and
xor
push
mov
test
out
xchg
mov
mov
in
cmp
or
testb
push
cmpb
aas
add
pop
out
sub
xor
pop
sti
dec
rcll
xlat
enter
in
jns
loop
add
mov
in
inc
mov
cmp
lds
dec
sbb
xchg
shrb
insl
xor
mov
pop
clc
xchg
jbe
and
out
andb
stos
test
sbb
int
jne
or
add
inc
out
pop
fs
sub
cmp
xor
lcall
fidivs
idivl
bound
jne
inc
push
pusha
add
push
pop
inc
das
mov
leave
dec
cwtl
mov
mov
ret
adc
lea
or
xchg
pop
jb
in
mov
stos
or
push
jg
push
js
iret
icebp
mov
pop
fisubs
scas
ljmp
mov
out
clc
sub
xlat
adc
sub
push
mov
cmp
mov
mov
or
sbb
cmp
jne
mov
jg
inc
outsl
and
int
fisubrs
ljmp
addb
int3
imul
push
adc
mov
xor
int3
pop
and
mov
sbb
test
fwait
js
xchg
bnd
sub
push
ret
mov
cmpsb
mov
mov
inc
push
xor
xor
into
mov
xor
push
cmp
adc
xchg
push
sub
push
pop
aam
in
sbb
sbb
add
out
and
and
sarb
or
sbb
mov
xchg
lods
xor
xorl
dec
movsl
arpl
in
push
stos
repnz
mov
adc
mov
ljmp
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
test
lret
cmc
jp
adc
jp
leave
sbb
das
cwtl
inc
pop
dec
or
or
sbb
adc
xchg
xor
pop
push
test
ret
mov
sti
add
sbb
jo
jle
pop
pop
mov
jmp
pop
sbb
cmp
pop
add
inc
repz
mov
iret
push
cmpsb
fnsave
loop
setbe
cmp
stc
push
inc
sub
mov
cltd
hlt
andb
cwtl
std
xor
add
rcr
mov
add
insb
cmp
dec
or
repnz
push
je
dec
jno
lods
cmp
cmpsl
es
push
stos
std
mov
mov
add
shrb
mov
or
xchg
sbb
pop
out
add
imul
xor
ret
sbb
hlt
movsl
and
daa
sbb
icebp
scas
aam
in
data16
popf
dec
inc
jmp
push
fmuls
rcll
stc
pop
dec
ret
adc
jb
rorl
test
and
test
jns
xor
jne
cwtl
mov
int3
jns
imul
dec
icebp
mov
stc
lret
sub
lea
lcall
adc
mov
iret
imul
mov
jl
lcall
inc
jle
sbb
rorl
inc
add
xor
faddl
sub
outsb
sbb
cmp
fcoms
data16
jmp
in
and
aad
loop
arpl
arpl
cmp
mov
daa
ss
push
fstpl
sub
scas
bound
mov
push
cmp
rcrl
sub
js
mov
shlb
or
inc
jg
mov
xchg
jmp
repz
sbb
lcall
call
sbb
sbb
sub
add
jo
popf
sbb
fdivr
xchg
test
adc
shll
pop
cwtl
cwtl
xchg
imul
add
mov
sbb
icebp
mov
sbb
xor
push
mov
popa
push
xchg
aaa
subl
mov
arpl
cwtl
xor
xchg
xchg
dec
pop
in
and
nop
inc
push
jp
and
dec
mov
cmpsb
or
cli
push
nop
push
push
mov
xchg
sub
adc
xchg
test
mov
mov
shlb
das
sbbb
mov
dec
adc
orl
in
not
pop
mov
cmp
js
lcall
mov
es
hlt
mov
mov
pop
test
mov
aas
repz
shr
repz
imul
scas
jnp
mov
fwait
mov
popa
xor
lock
loopne
xor
inc
push
xchg
fcomps
div
les
inc
mov
mov
xchg
dec
sub
jae
lods
dec
pop
push
xadd
int
cmc
dec
cmpsl
inc
cmp
cmp
mov
or
sub
mov
outsl
mov
lret
push
sub
adcl
mov
dec
js
sbb
movsl
stos
lcall
sbb
push
add
jge
xchg
jl
push
pop
hlt
dec
mov
xor
dec
add
jb
mov
push
pop
mov
sbb
add
lahf
pop
loopne
cmc
and
scas
scas
cs
ret
lret
fwait
xorl
or
ljmp
adc
lods
rcll
shll
rol
in
imul
push
orl
out
pop
push
push
daa
mov
loopne
sub
cmpb
movsl
out
ficoml
adc
cmp
dec
loop
subb
inc
arpl
push
adc
mov
mov
mov
dec
addr16
je
mov
sahf
aad
jmp
cs
out
dec
bound
jp
inc
xbegin
fnstsw
fisubrl
scas
push
mov
jno
mov
pop
xchg
ffreep
out
jns
in
mov
js
lcall
sbb
xchg
lea
lock
inc
lock
xlat
push
sub
mov
mov
mov
lcall
cwtl
fwait
cs
fcmovu
mov
push
into
adc
mov
mov
pop
arpl
lock
mov
mov
xor
sbb
jns
ret
and
test
in
popa
in
testl
fdivs
dec
sub
jl
inc
xor
xchg
mov
inc
test
bound
sbb
cltd
dec
arpl
xchg
adc
ret
or
ljmp
fsubl
push
xorb
mov
pop
shll
fnsave
fidivrs
or
add
sti
xchg
jnp
daa
pop
xor
stos
stc
nop
nop
add
xchg
jge
mov
sbb
dec
mov
inc
jbe
sbb
jle
mov
push
test
xor
cmpsb
cltd
fstp
mov
adc
sub
adc
cwtl
mov
mov
xchg
data16
in
pop
int
fidivs
call
shl
mov
mov
push
adc
add
adcb
inc
push
insl
dec
rcr
add
lret
test
adc
xlat
xor
pop
and
test
sahf
ret
dec
xchg
sbb
mov
popf
inc
les
outsl
and
loope
xor
cmpsb
adc
arpl
adc
jnp
jns
nop
divl
test
push
mov
mov
inc
into
adc
movsb
mov
cltd
gs
xlat
or
scas
daa
aad
incl
test
ja
mov
pop
xor
into
or
mov
xchg
sub
lods
repz
ret
fsubrs
cmc
jl
mov
pop
movl
data16
mov
push
pop
arpl
fisttps
mov
xchg
jecxz
jmp
sub
ret
std
leave
push
add
je
ret
cmp
xchg
test
push
mov
jp
sbb
cli
loope
jmp
push
pop
or
outsl
push
dec
fildll
lods
mov
sub
wrmsr
stc
int3
les
pop
adc
repz
ret
stc
sub
cmp
jb
jg,pn
repz
mov
mov
mov
bound
cmp
mov
dec
fnsave
shl
ror
aad
adc
or
mov
jnp
dec
icebp
xlat
cmp
pop
push
pop
xchg
shr
push
jle
mov
xor
cmpsb
adc
xor
xchg
push
xchg
mov
xchg
dec
fnsave
jle
hlt
or
dec
fisubl
push
arpl
dec
xor
xlat
imul
mov
shll
loop
jnp
jp
add
mov
xchg
pop
int
inc
jp
call
aaa
fadd
and
inc
adc
cmp
mov
in
sahf
sbbl
adc
lea
push
jge
jb
cwtl
push
les
insb
push
ja
xchg
xor
push
or
leave
insl
lahf
mov
mov
push
mov
lds
out
bound
mov
call
mov
icebp
sub
in
pop
ds
test
arpl
or
mov
and
dec
mov
and
int3
push
mov
xor
rep
inc
lret
fidivrl
pop
cwtl
scas
sbbl
sub
outsl
loopne
cmp
movsb
push
test
and
loopne
mov
mov
cmc
call
jae
mov
nop
jb
orb
test
mov
cwtl
cmp
divl
and
push
sbb
xchg
add
add
or
imul
xor
or
pcmpgtd
push
lea
ret
push
pop
ljmp
xchg
ljmpw
cmp
xchg
jg
mov
xchg
cltd
int3
ss
sbb
cwtl
dec
push
out
pushf
aaa
pusha
mov
pop
adc
lret
cli
inc
fld
enter
dec
stos
pop
xchg
fnstcw
mov
mov
lods
iret
push
lds
es
add
outsb
jge
mov
test
out
rol
dec
je
gs
mov
mov
add
mov
jae
test
int
stos
in
int
pop
xor
mov
bound
pop
dec
repz
xorb
scas
inc
addl
int
cli
das
test
sub
push
xchg
hlt
sbb
xchg
mov
pop
rcrl
xchg
pop
mov
ret
and
cltd
sub
cld
pop
mov
enter
movsl
addr16
mov
xchg
jno
cmp
mov
xor
and
mov
sbb
ret
sub
push
pushf
pushl
leave
mov
lret
mov
jno
jmp
push
inc
xor
icebp
into
shl
inc
xchg
inc
movsb
dec
cwtl
call
xchg
test
mov
mov
xor
out
or
xchg
pop
je
xor
mov
aam
scas
and
fidivrl
es
sub
xlat
lret
add
addb
fldl2t
pop
jb
call
test
lret
xchg
scas
dec
jbe
sub
mov
push
std
jb
dec
sub
ja
test
cld
lock
das
mov
pop
jmp
movb
iret
inc
sbb
imul
mov
jne
xchg
dec
shll
cmpsb
sti
lds
int3
sub
add
nop
stos
loop
insl
in
cmp
mov
out
mov
aas
inc
imul
mov
leave
and
mov
dec
mov
push
dec
inc
aam
xlat
push
movsb
xchg
xchg
inc
jmp
dec
add
add
dec
fdivl
xor
repz
push
das
ljmp
jmp
add
add
gs
push
icebp
mov
sti
pop
scas
out
push
repnz
loop
daa
cld
push
js
mov
loope
inc
popa
loopne
loop
jmp
je
ror
cwtl
mov
lods
adc
xchg
dec
rcrb
xor
sbb
fistl
pushf
jg
stos
aas
xchg
loope
shll
push
dec
in
cmp
sbb
jbe
les
pop
dec
aaa
pop
cld
js
inc
add
mov
test
repnz
mov
pop
scas
adc
push
lods
pop
push
ja
push
pop
mov
clc
push
and
test
rcr
ds
insl
andl
inc
mov
ljmp
mov
es
or
or
addr16
mov
mov
loopne
mov
std
xchg
int3
mov
jne
push
iret
dec
cmpb
mov
jmp
and
sub
es
xchg
adcl
adc
into
int
adc
jo
dec
imul
stc
xor
push
jg
jp
mov
mov
cli
fiadds
in
xor
popf
iret
sub
popf
mov
mov
aas
add
mov
push
push
mov
nop
mov
daa
repnz
xor
adc
sahf
xchg
push
push
popf
or
out
pop
stos
in
mov
dec
cmpsl
sub
pop
shll
push
leave
mov
scas
imul
in
adc
outsb
lods
or
flds
cs
push
aaa
inc
stos
ret
ljmp
mov
cmp
jg
dec
es
adc
cmpsl
out
in
xor
jne
add
dec
into
xor
cmp
popa
xor
iret
mov
or
test
test
xchg
inc
negb
iret
icebp
repz
fists
xor
faddl
out
push
dec
xor
into
add
sub
xor
aad
jge
movsl
xchg
push
in
popa
add
mov
popa
mov
mov
xchg
mov
mov
adc
lods
xchg
push
cmpsb
mov
scas
sahf
insb
insb
out
sbb
stos
js
xchg
sahf
add
xchg
ljmp
add
sbb
mov
mov
cmp
stos
sub
jne
push
dec
ja
loop
cmc
and
sti
xlat
mov
sub
sbb
lds
push
dec
hlt
jno
dec
jno
pop
jno
xlat
xchg
rorl
out
nop
jbe
cli
cld
dec
outsb
loop
insl
push
repz
shll
lcall
cmpsl
jge
jecxz
jg
jg
adc
inc
lret
mov
gs
cwtl
inc
mov
imul
mov
and
imul
xor
sub
jnp
and
xchg
shl
sbb
jo
fldl
into
push
inc
mov
call
cmp
fucomip
sub
adc
sub
mov
popf
mov
jnp
mov
cmp
pop
lods
ss
xchg
lds
ret
sarb
dec
in
adc
bound
bound
xchg
and
sbb
out
lahf
scas
js
push
inc
dec
pop
jbe
out
sbb
add
lods
sbb
pop
pop
std
int
sarl
dec
sub
fidivrl
sbb
push
fmul
aaa
imul
push
or
xor
xchg
push
movsl
sub
out
adc
bound
jecxz
xlat
mov
lods
lock
fisubs
or
sbb
mov
in
cmp
jno
loopne
add
fstps
sbb
loope
and
cmp
xchg
jae
jp
sbb
sahf
arpl
in
movsb
or
push
aas
xchg
and
out
shl
cltd
push
fwait
ss
pop
std
push
call
add
cmp
insl
pop
jmp
push
add
aam
aas
mov
mov
mov
iret
jno
stos
pop
sub
hlt
out
mov
inc
jl,pt
push
int3
mov
mov
enter
mov
inc
mov
xchg
je
push
pusha
jae
mov
adc
addr16
stos
adc
leave
mov
pop
idivb
cmp
inc
sbb
ficoms
xchg
lods
add
mov
sub
jle
and
cmp
hlt
andl
push
push
dec
mov
cltd
loop
in
push
dec
std
xchg
imul
in
and
shrl
sub
rorb
jae
jne
test
lods
xor
andl
test
std
and
testb
shlb
leave
lret
call
pop
push
aad
cmp
mov
and
adc
xor
je
dec
into
mov
mov
in
jnp
sbb
enter
popf
mov
scas
pop
inc
inc
mov
pop
sbb
pop
mov
loope
and
mov
push
pusha
lret
sub
out
xchg
inc
push
jnp
fdivr
xchg
inc
in
inc
fidivrs
pop
stc
aas
mov
mov
cmp
xchg
mov
pop
adc
sbb
insb
cmc
dec
cli
stos
mov
imul
and
push
pushf
pop
mov
jno
pop
mov
dec
push
iret
pop
iret
jo
pop
movswl
push
stos
add
notl
jle
bnd
dec
cs
mov
cs
or
inc
das
sub
or
in
pop
out
pop
push
push
ljmp
mov
ja
mov
cmp
mov
xor
xchg
ljmp
dec
push
mov
push
xor
add
cmp
inc
pop
dec
mov
cltd
fcomps
in
lcall
shlb
cmp
scas
jl
inc
jmp
mov
fs
and
in
scas
call
pop
and
push
or
jp
mov
adc
jge
push
cmp
and
sub
or
movsb
popa
in
push
pop
mov
cmpsb
movd
pop
je
inc
add
nop
insb
mov
cmp
ljmp
adc
repz
scas
test
int3
outsl
cmp
sub
nop
ret
xor
sbb
bound
mov
xor
mov
cmp
push
adc
outsl
pop
mov
ret
and
mov
push
mov
dec
xorl
xchg
push
and
xchg
pop
fistpl
outsb
jmp
jo
sub
cmp
inc
je
sbb
sub
dec
xchg
int
cltd
insb
aas
call
jge
fistl
or
shl
pusha
out
scas
jle
jp
mov
lahf
sbb
fidivrs
mov
insb
pusha
aam
xchg
cld
rcrl
dec
dec
fisubrl
sbb
jp
les
incb
sub
ss
jge
push
or
pop
xchg
int
sbb
sub
and
xchg
leave
jg
or
dec
push
pop
iret
cmpsl
jo
jne
rcrl
add
mov
or
scas
or
jle
fisttpll
out
lock
mov
push
rorb
cmp
mov
adc
ret
mov
rorl
sub
and
push
jge
push
add
jmp
xchg
lea
data16
cli
xchg
rcr
xchg
addr16
scas
sub
or
add
ret
inc
push
xor
or
dec
sbb
inc
add
mov
cs
mov
out
jp
push
mov
mov
sbb
aas
fsubs
jb
addb
rorb
adc
sub
repnz
push
call
lcall
in
mov
call
out
cmc
les
stos
sub
or
dec
popa
mov
ret
ret
popf
int3
inc
mov
sbb
dec
js
arpl
scas
fsubrs
shlb
and
push
ss
jno,pn
and
dec
inc
mov
and
sub
cmp
loope
push
icebp
aaa
mov
adc
iret
jmp
repnz
insl
and
lods
jo
fwait
push
lret
insb
jle
xchg
mov
pop
mov
sahf
xor
xchg
mov
fimull
pop
out
push
inc
jmp
lods
cmp
out
or
gs
stc
push
dec
outsl
pop
loop
lea
cltd
adc
xor
dec
pushf
scas
rcll
pop
xchg
nop
pop
sub
dec
xor
fs
jnp
mov
jns
and
incb
aaa
out
test
lock
ds
xchg
std
cld
dec
outsb
shrl
shl
rol
nop
subl
xchg
xchg
bound
jno
cmpb
xlat
fildl
lods
out
mov
ja
mov
insl
add
jecxz
mov
arpl
pushf
dec
or
lcall
mov
cmp
fs
leave
adc
sub
mov
mov
jge
pop
test
add
daa
mov
leave
loop
dec
pop
push
pushf
pop
mov
das
aam
lret
lock
roll
enter
mov
rclb
add
xchg
lret
lcall
sub
ljmp
scas
cld
jno
and
shl
rcrl
enter
mov
xchg
iret
shl
and
outsb
mov
scas
loop
mov
inc
fs
test
sbb
add
loop
mov
insl
jl
dec
lcall
js
out
fs
out
movsb
and
dec
dec
loopne
xchg
mov
dec
push
pushf
lcall
or
cmpsb
sbb
imul
dec
push
stos
popf
popa
lock
outsb
xor
mov
pop
stos
ljmp
mov
cltd
arpl
jae
dec
and
ja
mov
mov
lahf
push
cli
dec
popa
testl
cltd
movsb
dec
mov
cmpsl
mov
xor
push
jg
pop
and
mov
pusha
das
adc
dec
stos
fdiv
adc
mov
mov
mov
push
mov
sbb
adc
inc
push
sbb
fistl
cs
mov
sahf
das
test
inc
in
mov
gs
adc
mov
insl
mov
mov
push
ret
xchg
mov
ret
push
and
insb
cmpb
and
push
xchg
jmp
mov
sti
xchg
insb
mov
out
pop
in
xchg
pop
int3
subl
dec
mov
addb
fadds
sets
push
pusha
cmp
add
pop
dec
add
xor
cmp
add
stos
mov
stos
aas
pop
pop
in
out
jb
mov
les
aad
and
out
mov
insl
jo
ret
sbb
cld
and
adc
sub
ljmp
les
sbb
mov
mov
mov
push
hlt
jno
mov
cmp
adc
mov
adc
mov
rclb
or
lds
xlat
cmp
add
jecxz
es
orb
mov
or
jno
sbb
sbb
xchg
push
ret
fsubrl
push
add
lret
addl
lahf
ljmp
sbb
ret
pop
push
adc
sbb
push
cmpsb
scas
pop
xor
mov
sbb
clc
mov
cmp
jae
inc
mov
das
xchg
mov
jl
jmp
sbb
loop
ljmp
sub
sub
cs
test
sub
jo
and
adc
mov
add
cs
xor
movsb
movsl
leave
push
pop
stc
hlt
sub
popa
pop
dec
push
adc
xlat
shrb
add
rolb
addr16
out
and
and
clc
iret
adc
mov
shrl
neg
ljmp
pushf
dec
ret
popf
notb
xchg
pusha
adc
into
cmp
or
dec
test
pop
push
or
xor
lret
or
daa
dec
movsl
jmp
iret
xchg
jne
adc
les
sbb
push
cld
sbb
jecxz
adc
dec
mov
mov
xchg
and
fadds
push
xorl
add
dec
imul
pusha
push
scas
sbb
hlt
ja
ds
mov
mov
xor
pop
movsl
bound
sub
mov
xchg
jae
rcl
repz
inc
pusha
mov
jge
je
dec
outsb
pushf
jge
sub
sbb
out
in
jb
xchg
fsts
xor
xchg
add
add
fsubrs
dec
add
jb
pop
fldcw
and
add
lock
mov
scas
pop
inc
sub
mov
xor
pop
sub
cmpsb
pop
push
cmp
xor
xor
pop
push
pop
mov
es
mov
adc
in
fwait
mov
rorl
jnp
mov
loopne
add
add
and
les
cli
mov
cmp
push
out
imul
adc
push
mov
ret
cmp
sbb
loope
xchg
sti
sub
mov
pushf
jg
mov
fcomip
bound
jb
or
jns
mov
cmp
sbb
xchg
xor
jmp
push
stc
mov
add
sti
fwait
push
std
push
and
jle
inc
jge
xchg
sbb
pop
lods
mov
cmp
subb
sbb
dec
sbb
outsl
addr16
dec
xor
rclb
xchg
and
jg
sbb
pop
movsb
pop
lahf
mov
ret
sbb
cmp
lcall
jl
fidivl
jge
ss
test
jp
enter
fisubs
push
xlat
popf
add
push
mov
jne
lcall
and
ja
subl
fsubs
test
add
loop
jne
ret
repnz
pop
imul
fstpl
jb
inc
xchg
push
es
and
mov
push
dec
leave
std
xchg
adc
inc
stos
fsubl
lcall
call
cmp
xchg
les
sbb
inc
jecxz
mov
aad
out
or
mov
xor
push
jmp
xor
sbb
xor
xchg
cmp
jo
sbb
fs
rcrb
fists
loopne
insb
or
shl
sbb
add
mov
popf
add
adc
mov
fmulp
jnp
aas
inc
xlat
xor
dec
xor
cld
loop
addl
or
mov
sahf
cld
mov
lret
cmpsb
push
xchg
bswap
and
loopne
mov
mov
mov
in
sub
jle
xor
repz
or
pop
imul
mov
dec
fs
cmp
push
loop
das
xor
xorl
push
mov
pop
mov
adc
insb
call
sbb
push
mov
jns
push
addr16
push
gs
inc
push
repnz
int3
out
and
xor
inc
xor
addr16
adc
push
adc
mov
in
or
mov
dec
in
sub
iret
insl
mov
ret
repnz
pop
xchg
hlt
push
je
pushf
out
pop
leave
js
pop
push
cmp
xor
mov
leave
adc
and
rorb
imul
test
int3
int3
ja
mov
mov
pop
jns
lcall
pop
pop
bnd
in
fnstenv
pop
insl
or
sub
and
stos
ret
mov
jg
outsl
mov
cmp
pop
fidivrs
push
or
jl
lods
test
scas
pop
adc
mov
mov
stos
imull
xchg
mov
outsb
add
mov
cmpsl
xlat
lods
les
aaa
mov
cs
rorl
ljmp
xor
push
ja
and
xor
jno
jg
pop
adc
rorb
aas
loope
enter
xor
jl
mov
jg
add
mov
ja
fs
mov
test
subl
hlt
pmaxsw
repnz
xchg
fisttps
push
cli
sbb
and
push
repz
xor
inc
popa
jmp
xor
and
arpl
mov
ret
imul
test
addr16
mov
jae
dec
nop
and
sub
pusha
push
sarb
aas
pop
jg
es
inc
xlat
add
inc
stos
icebp
lret
movb
cmp
mov
pop
and
adc
cmp
inc
in
jg
fldl
imul
dec
jg
sub
fistps
sbb
std
clc
mov
mov
push
or
pop
mov
adc
pop
rcll
outsb
ljmp
jae
jo
mov
jl
push
adc
pop
into
es
or
adc
fcomps
jmp
cli
push
int3
out
pop
test
and
add
jle
or
cmp
push
mov
daa
dec
sub
out
addr16
pop
jl
je
pop
mov
sbb
mov
mov
je
sarb
push
aas
pop
insb
mov
fbstp
ret
xor
sub
add
fidivrs
pushf
sbb
mov
cmpsl
and
cltd
mov
into
jp
fimull
rcrl
jnp
pop
cmp
addr16
xchg
add
pop
iret
inc
jne
mov
adc
es
push
pop
mov
mov
xorl
mov
insl
movsb
sbb
cs
int3
int3
push
add
ljmp
jo
pop
stc
lret
push
dec
and
sti
mov
pinsrw
pop
fisubs
mov
dec
or
xor
mov
pop
push
shl
addr16
mov
cmp
mov
adc
shl
and
insb
mov
pop
fistl
das
mov
mov
push
sbb
xchg
popa
jmp
mov
je
in
adc
sub
cmpsb
mov
and
sub
les
test
lret
dec
lods
mov
push
sbb
in
into
fidivl
mov
adc
stos
sub
outsl
in
sti
dec
add
addr16
pop
sbb
mov
nop
data16
adc
cltd
or
sub
lcall
or
or
scas
xchg
or
ja
pushf
xor
add
mov
fists
test
mov
mov
mov
lods
dec
aaa
cltd
out
xchg
into
sahf
shrl
mov
push
pop
jl
subl
pop
jae
gs
pop
jl
push
ret
adc
mov
stos
sbb
mov
xchg
xchg
cmpb
sub
cmp
push
popf
repz
or
or
je
ljmp
pop
call
leave
popl
fimull
ret
repnz
pop
sbb
sbb
hlt
fs
popa
outsb
lds
movsb
enter
pop
das
pop
movsb
icebp
popf
cld
add
test
out
mov
in
enter
mov
cmc
iret
mov
adc
out
sub
inc
push
lods
xchg
and
lcall
inc
push
or
loop
pop
dec
ja
inc
cmp
ret
xor
jp
insb
inc
pop
lods
pop
jle,pt
add
lods
jae
stos
and
xor
jae
lods
hlt
ds
aaa
cwtl
lea
ret
dec
lods
sbb
mov
shll
adc
pop
mov
aaa
test
testl
cmc
mov
loopne
push
test
cmp
lret
sub
mov
xor
pop
jle
jb
scas
in
mov
popf
leave
sti
xchg
cld
stc
rolb
test
lds
mov
adc
in
pop
mov
lock
mov
lea
dec
jns
cmp
clc
daa
push
xchg
aam
dec
mov
mov
outsb
inc
mov
cmp
adc
test
push
arpl
jecxz
sbb
into
and
addr16
aas
mov
sbb
dec
cmpsl
dec
cltd
nop
mov
mov
push
mov
pop
lods
pop
add
adc
lret
jp
push
andb
xchg
mov
ds
call
in
xchg
xor
sbbb
lds
adc
fimuls
adc
fmull
cs
shr
jge
inc
pop
lock
in
repnz
int
jo
popa
daa
xchg
aam
sub
sub
inc
push
sbb
mov
jae
lcall
pop
ds
mov
sub
cmpsl
xchg
js
leave
jne
push
dec
xchg
sbb
fstpl
mov
in
jmp
imul
inc
xchg
and
jge
outsb
icebp
ja
mov
ds
and
inc
lahf
lret
movsl
pop
xor
jecxz
es
lds
xchg
mov
xchg
adc
je
pop
jmp
imul
mov
dec
mov
outsl
mov
outsb
pop
stos
insb
or
mov
push
and
leave
cld
movsb
fwait
sbb
daa
mov
push
inc
push
jmp
lock
jb
lret
shl
mov
fists
add
sti
lret
frstor
ljmp
std
mov
inc
scas
inc
movsl
jo
in
stos
fucomi
cltd
in
inc
popf
and
jle
push
push
iret
sahf
sbb
icebp
jbe
and
xchg
out
push
and
jl
mov
fidivrs
aaa
mov
push
in
aam
test
adc
pop
add
xlat
or
cmpsb
enter
sti
lds
imull
mov
xlat
scas
fwait
sub
stos
pushf
in
je
mov
push
inc
push
jo
cmc
push
lea
popf
xorb
push
add
mov
jne
inc
rorl
scas
adc
pop
jmp
out
fsts
or
sub
sub
pop
or
in
jno
and
dec
pop
gs
jmp
xchg
xchg
pop
dec
add
adc
sar
sub
shr
push
mov
sar
fcomps
ret
das
jo
call
cmp
cmp
pop
or
jg
and
xor
ja
dec
sbb
jae
aam
cs
push
lret
sbb
sub
inc
inc
lea
ja
rcrb
scas
shl
cli
cmc
ret
cltd
scas
mov
out
gs
sbb
fcoms
lret
pop
jle
xchg
mov
mov
addb
pop
xchg
dec
pop
dec
es
and
pop
int3
mov
stos
shl
in
mov
data16
mov
add
mov
out
std
outsb
mov
jns
shll
jne
add
fwait
mov
hlt
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
xor
inc
push
into
lret
adc
jp
sbb
fs
add
mov
mov
negl
mov
testl
sbb
cld
fdivl
gs
xchg
mov
xchg
addb
decl
push
in
cwtl
bound
lret
cli
mov
jp
mov
sbb
addr16
lahf
daa
int
mov
lods
jne
jmp
inc
dec
test
into
xor
repz
aam
jmp
cmp
in
iret
das
adc
bound
xchg
addr16
hlt
fstl
xor
pop
movsb
mov
mov
or
jp
adc
mov
out
call
xor
dec
dec
mov
and
in
fiadds
leave
inc
sti
repnz
int
mov
mov
sahf
xchg
mov
push
shll
aaa
push
jle
mov
lret
cmp
jmp
mov
imul
pop
mov
sub
cmpsl
bnd
lret
cmpsb
xchg
pusha
fiadds
xor
leave
sbb
inc
and
add
test
daa
out
lret
and
mov
mov
ja
movaps
adc
jno
loope
rorl
js
fnsave
jae
jne
push
dec
pop
push
negb
pop
clc
and
cmp
movsb
jb
roll
repz
dec
loope
xchg
mov
push
jns
leave
mov
xchg
mov
mov
cld
stos
lock
roll
jg
adc
dec
addr16
das
lahf
pop
push
xchg
int3
std
rcll
sti
inc
scas
jbe
and
leave
cmpsl
xchg
fwait
cmpl
adc
xchg
je
mov
sub
xlat
push
enter
adc
add
pop
lods
lret
mov
data16
or
jns
std
cltd
ror
adc
push
aad
mov
pop
js
add
adc
shll
rcrl
in
xor
in
xchg
out
pop
mov
fildll
imul
jmp
in
aas
pusha
jae
pop
icebp
shll
pop
push
scas
out
popf
ret
stos
hlt
xor
inc
mov
rcr
dec
in
outsl
fwait
outsl
jns
mov
stos
lods
xlat
xor
push
xor
and
dec
nop
jo
iret
jp
test
outsb
mov
xchg
mov
pop
les
cmp
pop
add
rorl
fimuls
into
jp
int
enter
inc
in
cmp
and
imul
xchg
stos
inc
add
icebp
jmp
shll
push
cmp
mov
xor
dec
subl
mov
jecxz
sub
or
sbb
xor
adc
sbb
adc
mov
push
cmp
and
fsts
je
push
lods
pop
xchg
into
aaa
in
test
loopne
mov
mov
pop
xor
repnz
arpl
inc
jne
xchg
and
push
fucom
mov
sub
rorb
loope
mov
xchg
faddl
xchg
jg
mov
ss
mov
icebp
jge
inc
jg
outsl
inc
cld
pop
push
fcomip
jo
das
xlat
test
mov
adc
sbbl
cmpsb
jl
inc
ljmp
insl
lret
pop
and
adcl
xorb
mov
out
test
fnsave
in
lret
movsb
fisttpl
jnp
mov
xor
scas
notb
and
sub
jmp
cltd
mov
push
jge
cmp
repz
scas
in
leave
sub
cmp
mov
lahf
add
jb
fwait
daa
iret
mov
inc
in
lock
orl
loope
cld
or
cmp
sbb
iret
xor
cltd
mov
cmc
repnz
xchg
cmc
cmp
mov
add
sahf
or
call
dec
xor
push
xor
enter
daa
in
in
test
das
mov
jns
sub
and
push
lret
andb
mov
add
add
add
sub
stos
mov
push
adc
dec
in
loopne
call
mov
sahf
in
jge
mov
inc
mov
aaa
cltd
dec
into
cmp
mov
lret
inc
lds
adcb
or
adc
pop
rolb
xchg
adc
jmp
pop
mul
in
inc
push
in
and
xchg
mov
data16
ret
ret
xchg
dec
aad
sub
sub
push
stos
fmuls
adc
into
mov
insl
std
lahf
mov
in
inc
inc
mov
push
into
stos
adc
ljmp
jecxz
sbb
outsb
lret
xchg
pop
orl
sbb
push
daa
gs
dec
pop
dec
cmc
dec
and
sub
vshufps
pop
dec
mov
push
xchg
jno
in
jb
mov
cmpsl
iret
inc
jb
sysexit
jns
jmp
pop
cltd
fwait
testb
mov
imul
fstps
rol
sub
push
test
insb
roll
sub
jbe
idivb
mov
xchg
mov
xorb
push
jns
and
stos
pop
sti
roll
adc
jno
out
jb
add
shll
test
mov
ss
inc
ficoms
loop
mov
call
lods
imul
enter
sbb
iret
jmp
jo
or
cmp
pop
sub
shr
orl
jecxz
fs
mov
mov
cltd
xchg
dec
xlat
dec
pop
dec
or
and
lret
fldl
int
incl
jbe
push
jae
adc
xor
in
pushf
in
jno
ja
sbb
gs
lret
pusha
scas
adc
out
cmc
adc
cmp
xor
sbb
mov
das
fmuls
push
popf
aas
icebp
adc
stos
subl
adc
push
sbb
sbb
dec
jbe
and
adc
xor
aaa
mov
and
gs
sbb
repz
push
mov
gs
pop
adc
xchg
jne
iret
jmp
jae
fcmovnbe
mov
fcomip
mulb
push
lods
jns
repz
cli
add
pop
cmpsb
nop
mov
int3
mov
add
pop
adc
repz
movsl
push
mov
pop
aad
vmovupd
xchg
and
je
inc
js
mov
rcl
stc
shll
xchg
mov
out
lock
popa
flds
shll
sarl
in
sub
sbb
sti
lret
xchg
mov
leave
xor
inc
mov
int3
rcrl
jge
jmp
inc
fwait
lods
and
sbb
icebp
add
je
clc
hlt
test
roll
mov
mov
jae
cwtl
adc
push
mov
mov
xor
dec
data16
es
adc
and
in
outsl
fisubrl
cmc
inc
cwtl
mov
cmpsl
int3
push
or
cltd
es
out
cmp
mov
lret
jae
mov
dec
jno
xchg
or
dec
sub
vmovaps
lret
add
lods
and
dec
jnp
dec
sub
sub
outsb
adc
xchg
popa
jb
sbb
mov
fs
push
jmp
xchg
pop
adc
jecxz
jp
subb
cli
push
cmp
sub
lock
mov
jmp
ljmp
mov
aaa
or
mov
jo
fildll
fiaddl
jnp
mov
inc
imul
or
push
fidivrl
add
add
mov
xchg
or
xchg
push
inc
jmp
mov
jno
fidivl
mov
or
repnz
jne
imul
fisttps
dec
pop
jo
arpl
xchg
pop
mov
xchg
in
xor
insl
mov
sub
call
aaa
loope
mov
add
adc
mov
imull
and
iret
scas
inc
shrb
or
or
fcoml
add
inc
inc
aaa
push
lds
xchg
inc
inc
xor
dec
filds
lret
jmp
push
push
in
mov
xor
mov
dec
out
pushf
test
jbe
std
xor
mov
xor
mov
mov
jmp
pop
insb
je
sbb
mov
movsb
cmp
out
or
sbbl
scas
int
or
loop
mov
mov
test
jno
in
pop
imul
cmp
push
imul
jno
das
mov
xor
repz
cwtl
loop
jle
sbb
lret
push
sub
pop
jb
mov
cmp
xchg
or
dec
loopne
mov
mov
arpl
jl
outsb
je
fstl
dec
mov
aad
lds
idivb
leave
addr16
icebp
jns
loope
int3
lret
mov
imul
mov
push
inc
inc
xchg
rolb
xchg
xchg
psrlw
jg
lods
add
data16
sbb
fwait
int
lea
push
or
outsb
pushf
inc
ss
shl
inc
ss
jg
or
ss
repnz
enterw
cli
in
lods
dec
mov
jne
loope
sub
cmp
daa
adc
mov
mov
daa
or
push
or
ret
mov
mov
in
call
dec
xchg
inc
into
pop
jne
pusha
jmp
mov
inc
out
inc
imul
call
xchg
loop
pop
push
mov
xlat
enter
xchg
jge
dec
insl
mov
int3
add
or
js
lock
mov
mov
pop
sub
adc
xor
std
imul
jb
js
jns
testl
lea
xchg
push
fisttpl
pop
ljmp
jecxz
aas
add
roll
pushf
or
ret
fwait
int3
ss
and
lret
ret
xchg
daa
xchg
in
push
arpl
push
jns
inc
test
pop
xchg
xchg
ljmp
push
xchg
pop
lret
push
out
mov
add
jb,pt
xor
dec
daa
pop
dec
inc
mov
mov
cmp
mov
lock
aam
xor
mov
push
sbb
stos
xchg
jg
sbb
dec
fisttpl
add
in
test
dec
popf
adc
mov
shlb
and
jp
dec
loope
inc
adc
mov
mov
scas
pushf
adc
ret
fnstenv
mov
xchg
xchg
or
cmovne
add
push
adc
jle
or
js
sub
mov
lea
pushf
and
arpl
fld
lods
je
cmp
lods
cmpsb
and
aas
imul
lret
jle
loopne
stc
les
mov
or
jbe
aam
popa
lcall
cltd
fbld
jecxz
faddl
mov
mov
push
push
lds
adc
pop
sarl
xchg
cld
mov
stc
or
lods
inc
dec
adc
xlat
add
pusha
lahf
repz
shrl
loop
mov
sarb
test
inc
stc
lahf
or
or
jg
mov
push
jnp
and
xchg
out
sub
pop
inc
jge
mov
std
leave
clc
lahf
jbe
add
mov
or
dec
stos
push
jb
insb
mul
sbb
add
or
jmp
fsubs
pop
aad
mov
inc
test
int
and
test
gs
xor
push
fcomps
jmp
add
push
jmp
aam
movsl
call
imul
pop
fnstenv
in
aam
aad
push
jno
jle
sbb
movsl
jo
scas
aas
scas
out
jmp
push
cmp
add
or
inc
and
mov
roll
jns
aad
adc
js
xchg
outsl
jge
repz
xchg
xchg
push
leave
jge
movsb
and
cltd
and
rcrl
outsl
mov
inc
pop
push
inc
fs
cwtl
xor
jge
adc
aaa
pusha
pop
das
xchg
pop
push
xchg
xchg
ja
cwtl
jle
sbb
mov
stc
dec
loope
imulb
ljmp
sti
mov
fdivrl
and
cmc
xchg
addb
repnz
sub
push
xor
sti
or
inc
mov
in
lret
inc
cmp
movsb
cli
jno
enter
push
jno
aam
in
cmp
lret
mov
and
push
daa
daa
push
jge
add
lods
pop
sti
aam
adc
cs
in
ljmp
sub
xchg
xchg
xor
mov
fs
mov
jo
jle
adc
jnp
mov
jecxz
cmp
in
in
inc
lret
add
fidivrs
lock
out
pop
out
inc
pop
pop
sbb
dec
das
jmp
dec
fbstp
lods
push
adc
pop
sbb
out
sbb
lahf
addr16
pop
cmp
xor
mov
push
inc
jecxz
les
xchg
jnp
fdivl
push
pop
ds
dec
push
xchg
repz
into
adc
sahf
jl
jnp
test
stos
cmc
xor
lds
pop
fldcw
push
addb
mov
in
loop
sbbb
mov
adc
lods
mov
cltd
enter
pop
fldt
jne
fsub
mov
mov
inc
out
sbb
sbb
scas
js
lret
lret
insb
pop
ljmp
cmp
push
sbb
jbe
cltd
ret
int
icebp
enter
or
push
clc
or
jle
scas
jmp
mov
dec
imul
jne
xor
mov
mov
test
mov
xor
mov
mov
or
iret
xchg
mov
lds
jb
or
pop
add
cwtl
int3
aam
cmp
dec
mov
cwtl
pop
pop
xor
stos
mov
push
mov
mov
mov
mov
inc
js
in
fistpl
xchg
cmp
pop
imul
ret
loopne
in
stos
inc
leave
xchg
out
mov
fstp
enter
dec
sub
popf
cmp
and
pop
sub
fnstsw
jge
adc
mov
cmpsb
dec
mov
push
aad
rcl
rcrl
pop
mov
inc
leave
jecxz
mov
fst
ret
and
repz
push
adc
cld
sbb
loop
shrl
sub
xchg
imulb
movsb
stos
mov
inc
mov
fbld
dec
push
and
push
and
iret
pop
push
stos
sbb
jnp
fidivs
push
cmpsb
outsl
cmpsb
imul
mov
data16
aad
nop
popf
xor
pop
pop
push
fdivrs
push
or
push
add
lock
push
mov
mov
xor
mov
fsts
lea
inc
sbb
xlat
lds
fadds
jle
shrb
adc
xor
cmc
enter
stc
insl
fdivrl
cld
xor
xchg
mov
push
jg
in
arpl
xchg
adc
sbb
jecxz
clc
lea
or
dec
loope
lock
xchg
jae
addb
data16
bound
insb
cld
aaa
mov
in
pop
repz
je
mov
shl
pop
inc
pusha
inc
decl
and
cmp
cmp
dec
pop
inc
jecxz
das
xchg
outsb
cli
mov
test
insb
mov
ljmp
pushl
std
mov
cmp
and
and
sti
test
sti
outsl
ret
decb
rcl
pushf
xor
pushf
movsl
cwtl
and
sysret
cltd
rolb
xlat
pop
popf
push
adc
leave
je
lret
add
rol
cs
fists
jbe
cmp
les
sub
lods
xchg
pop
xchg
cli
cmc
dec
sar
cmp
or
in
jno
adc
in
sub
js
and
iret
adc
sub
je
js
lods
and
shll
mov
inc
dec
xchg
push
jne
subb
stc
or
dec
in
jl
leave
jnp
js
cs
mov
cld
add
stos
sub
pushf
mov
stos
in
aam
xchg
pusha
ds
inc
das
mov
out
push
repnz
sahf
test
and
sub
cmc
xor
fisubrl
inc
movsl
add
pop
inc
jg
inc
arpl
arpl
lret
fsubrs
stos
push
test
sub
mov
imul
pushf
sub
out
stos
pop
and
pusha
adc
or
pop
push
js
sbb
mov
cmp
push
lea
inc
lahf
mov
or
xor
mov
mov
mov
lret
dec
dec
mov
xchg
push
movsb
clc
icebp
dec
mov
inc
sti
mov
les
enter
pop
jl
push
push
insb
scas
or
inc
enter
nop
jl
cmp
jnp
rcrb
sbb
das
add
adc
mov
filds
jbe
mov
sub
xor
jno
imull
mov
ret
mov
loopne
fwait
dec
or
adc
ret
mov
loopne
call
addr16
dec
pop
ljmp
adc
jae
fcomps
aas
jl
jmp
sbb
push
inc
and
inc
pop
push
stos
adc
adc
or
fildl
popa
je
out
inc
mov
push
lea
push
lret
icebp
adc
loop
aaa
cmp
xchg
ror
int3
sahf
push
mov
rcrb
lret
push
mov
push
xchg
xor
jp
mov
je
sbb
icebp
mov
maskmovq
testl
in
jmp
iret
pop
ss
inc
fidivl
sub
mov
out
jge
adc
mov
mov
add
cmpsl
mov
gs
pop
pushl
imul
xor
popa
in
or
out
js
shlb
xchg
dec
xchg
mov
fdivrs
and
push
push
mov
lret
sahf
mov
add
imul
lock
mov
sbb
mov
cmpsl
add
and
lcall
enter
aas
mov
mov
js
adc
es
jmp
cs
or
mov
lcall
mov
mov
pop
sbbl
mov
int3
mov
mov
sbb
jo
int3
mov
out
pusha
and
cmp
mov
cmp
sbb
xchg
cs
movsl
mov
mov
repz
mov
jb
inc
jo
adc
clc
mov
loope
movb
add
scas
add
shrb
adc
add
inc
fxch
jecxz
arpl
add
pop
inc
cmp
sbb
push
adc
and
lods
jge
sbb
ret
mov
mov
or
cmp
sbb
adc
xchg
movsb
or
call
xor
lods
ss
push
push
es
mov
mov
mov
and
pop
lods
push
pop
lret
mov
pushf
pop
insb
adc
cmp
xor
lea
sub
mov
lods
jno
push
cmc
xor
pop
stc
dec
jg
dec
fildll
add
daa
cmp
loopne
mov
cmp
fisubrs
fwait
adc
hlt
push
fisubrs
shrb
call
insl
inc
test
xchg
insb
jl
mov
push
mov
cmp
sbb
push
gs
inc
sub
flds
xchg
insb
jno
push
in
and
xchg
cld
mov
xor
jne
mov
jg
jp
stos
mov
adc
fidivrs
mov
or
dec
xchg
lds
mov
jle
inc
sub
cld
mov
push
pop
xor
dec
loop
sbb
dec
adc
mov
push
adc
cmp
sub
push
mov
pop
jg
push
scas
sub
into
push
ss
rclb
jecxz
repnz
pxor
jb
lods
in
test
jo
jl
and
dec
inc
outsl
pop
sbb
mov
inc
ret
jne
es
jnp
dec
das
test
filds
dec
pushf
test
jle
lcall
hlt
jb
loopne
aad
dec
idivb
leave
adc
jnp
xchg
adc
inc
xor
mov
ftst
jp
pop
nop
xor
mov
call
pop
lods
sbb
pop
inc
jne
arpl
sahf
testb
sub
and
aam
insl
and
or
lods
sbb
push
xchg
xor
cld
jmp
fnstcw
fistpll
data16
or
dec
das
inc
daa
mov
dec
popa
cmp
clc
or
jg
cld
bound
test
push
dec
sbb
ja
ret
mul
xor
lock
dec
pop
call
pop
pop
ljmp
data16
dec
push
xchg
dec
jno
jnp
jecxz
pop
setnp
push
std
sbb
mov
scas
sbb
jmp
scas
fsubs
test
dec
cmp
adc
xor
test
mov
shrl
rcl
sbb
out
bound
lock
ljmp
jge
mov
push
push
sbb
test
pop
rcrb
xchg
stos
dec
jns
push
cmp
cmp
ret
frstor
lea
mov
sbb
shlb
pusha
push
lret
jle
dec
test
inc
popf
call
or
pop
cmpsb
addr16
aas
adc
dec
push
pop
sbb
les
adc
dec
mov
aas
test
ret
pop
lea
or
jle
pop
gs
rcll
mov
add
jmp
gs
inc
fs
adc
popf
test
jl
jl
adc
adcb
or
movsl
aam
mov
adc
cltd
mov
push
xchg
cli
cs
clc
stc
cmp
sbb
and
pop
add
repz
add
mov
mov
mov
cltd
test
lea
fsubrs
inc
insb
dec
mov
divb
add
jno
sub
jmp
mov
orl
mov
out
pop
inc
lahf
adc
je
aad
pop
test
fsubl
add
dec
push
jo
nop
adc
jb
mov
push
scas
inc
add
popa
enter
stc
inc
and
jae
icebp
insb
pop
jmp
popf
add
jmp
in
mov
cmp
sub
xchg
pop
mov
out
xlat
dec
in
je
mov
sub
leave
pop
dec
xchg
dec
loope
mov
test
outsb
pop
and
adc
push
xchg
mov
cmp
int
out
pop
xchg
loop
mov
mov
xlat
shrb
ja
jle
ja
pop
fbstp
inc
lock
je
dec
test
add
mov
iret
push
shlb
ret
test
test
ja
mov
addr16
in
dec
in
inc
imul
dec
fcomps
xor
repnz
scas
jmp
or
jae
aam
mov
std
cmp
push
mov
inc
jl
pop
or
and
push
jns
sub
mov
scas
daa
mov
cmp
push
dec
lods
arpl
sarl
xchg
inc
add
pop
sbb
or
and
jae
in
sbb
push
and
add
mov
cli
lods
push
inc
jl
fcmovu
daa
testl
sub
subb
jbe
outsb
dec
pop
push
xor
or
test
lret
ret
icebp
rcr
js
pop
mov
push
mov
add
imul
and
xor
inc
pop
dec
push
mov
jne
push
fs
xor
pushf
std
out
adc
fnstcw
daa
arpl
jle
test
or
or
jns
pop
fsubs
into
stos
out
in
lcall
inc
dec
dec
mov
js
jp
xchg
lcall
mov
sub
js
shlb
cmp
dec
inc
nop
add
mov
xorb
jl
addr16
test
loop
sub
xor
ret
loope
jg
push
movsl
aas
inc
movsb
hlt
jmp
lea
push
rolb
push
dec
sub
fs
xchg
int3
cmpsb
in
pop
cmp
push
arpl
iret
pop
pop
lock
xchg
adc
inc
adc
dec
imul
sbb
jmp
adc
and
push
adc
lcall
les
scas
xchg
lret
or
in
sbb
shrb
mov
loope
mov
mov
and
out
jecxz
cmpb
jmp
xor
mov
sub
sahf
iret
ljmp
inc
cmp
push
adc
or
fidivs
inc
insb
mov
popf
jb
in
ret
and
lret
mov
mov
xchg
in
fxch
xchg
in
aam
iret
cmp
and
loope
into
sbb
pop
xchg
sub
inc
cli
data16
shlb
es
in
les
pop
cmp
pop
xchg
call
mov
mov
mov
adc
xor
mov
out
mov
addr16
and
add
faddp
xchg
aam
lcall
mov
adc
dec
aas
cmp
outsl
xchg
mov
lock
cmpsl
in
dec
movsb
pushf
or
jl
xchg
sarl
cwtl
lock
ret
or
or
test
in
sarb
cmp
mov
lret
ja
cmpsb
jge
lds
inc
aaa
dec
inc
je
mov
add
push
sbb
subb
jecxz
pop
sbb
sahf
mov
in
test
movsl
popf
xchg
cmp
pusha
jecxz
sbb
adc
adc
xchg
pop
mov
mov
jg
fstpt
popf
mov
cmp
sub
push
enter
cmpb
or
in
mov
push
rorb
xor
dec
hlt
mov
dec
pop
je
cwtl
inc
arpl
pop
rorb
test
pop
test
mov
push
lds
add
repnz
adc
and
pop
jb
pop
inc
fldcw
pop
adc
ja
loopne
lock
out
stc
dec
pop
das
add
jne
jmp
jge
pop
jae
ret
cmpsb
rcll
xor
add
dec
xor
xorl
push
dec
cmp
push
sar
pop
mov
add
push
dec
adc
jnp
inc
mov
inc
int3
add
fwait
inc
add
int
aam
mov
repz
lods
testb
jns
pop
inc
lcall
jne
lods
les
pusha
lds
mov
push
and
cmpb
jae
pop
lret
pop
ss
dec
sbb
jp
bound
lods
xchg
xchg
mov
xchg
adc
lods
out
js
add
pop
adc
popa
pusha
or
popl
aas
mov
jecxz
outsb
cwtl
jno
and
js
adc
pop
add
scas
aas
mov
popa
ficoml
ret
subl
lcall
xorb
jecxz
mov
aaa
scas
dec
mov
mov
in
jnp
jo
sbb
dec
mov
sbb
cmp
sahf
or
inc
inc
adc
stos
mov
sbb
movsb
imul
xor
mov
ja
into
xchg
jae
inc
bound
sub
mov
jbe
out
and
sahf
xchg
das
int3
scas
sub
jge
sub
addr16
jle
add
in
xor
inc
or
dec
sub
mov
in
jae
mov
fcoml
stos
cli
addr16
push
sub
fs
jge
and
loopne
das
mov
loop
fisubl
std
xchg
jp
es
into
clc
test
xchg
mov
fwait
inc
sahf
dec
in
in
inc
pop
sub
push
pop
cmp
pop
cmp
cmpsb
shrl
cltd
incb
insb
jb
inc
test
jg
mov
push
fsubl
mov
push
sbb
dec
or
cmp
arpl
lock
ret
pop
jg
pop
stos
add
nop
pop
out
inc
movsb
mov
dec
pop
stos
fimull
sub
jecxz
inc
xchg
jp
stos
mov
push
aaa
push
stos
push
sub
lea
dec
test
sub
das
mov
jnp
out
inc
inc
pop
test
pop
pop
sbb
std
ljmp
pushf
inc
pop
shlb
pop
pop
mov
bound
add
in
push
mov
fsubrl
in
pop
push
mov
or
xchg
push
pop
syscall
sbb
scas
int3
sbb
loop
add
dec
sbb
lods
sub
push
sbb
imul
jg
rolb
jo
rcl
cmp
loop
xor
inc
or
add
adc
arpl
fistps
xor
jg
paddb
gs
roll
outsl
push
pushf
icebp
imul
mov
push
jno
cmp
dec
inc
in
pop
fcmove
loopne
cmp
inc
ja
cmp
cmc
pushf
jge
cmp
gs
sbb
xor
fistpll
shrl
loope
js
sub
sbb
or
in
int
cmp
out
jne
or
pop
push
movsb
mov
addb
xor
rcr
jge
out
pop
and
xchg
outsb
xchg
dec
pop
aaa
mov
ljmp
aad
sub
loopne
fmull
fisubs
jge
filds
fmuls
ljmp
mov
out
cmp
push
xor
inc
cmpsb
sbb
idivb
mov
cmpsl
hlt
cmc
pop
in
mov
cmp
push
xchg
add
mov
andb
xorb
in
frstor
sti
xor
test
fidivrl
mov
push
test
and
repnz
cmc
pop
push
and
jle
push
das
rolb
sub
ja
bnd
fistl
out
sub
lret
jns
repnz
and
xchg
fsubl
push
out
addl
ret
sarl
lea
cld
leave
xchg
popa
push
movsl
xor
stos
ret
jae
or
stos
lcall
xor
cmp
push
mov
sub
out
mov
pop
movsl
jp
dec
mov
test
inc
ja
pushf
pop
adc
cli
mov
cmpsl
call
inc
adc
arpl
push
ficoms
roll
sub
stc
fisttpll
ficompl
ret
enter
mov
cmp
popf
dec
mov
jnp
mov
and
and
mov
xor
loopne
pop
das
in
mov
cmpsl
pop
or
sub
pop
jmp
adc
ficoml
jl
add
sub
push
test
iret
cmpl
or
fnstcw
fs
out
cmpsl
lods
mov
mov
shl
mov
mov
jns
addr16
jmp
inc
lret
xor
mov
sahf
stos
cmp
daa
or
jecxz
pop
fisubrs
cmp
mov
jno
dec
out
fsubrs
mov
test
jo
fcom
shr
roll
addb
cmp
gs
sub
das
xor
mov
xchg
add
je
mov
cltd
add
fisttpll
lret
fdivs
repz
clc
sbb
xchg
enter
rolb
iret
scas
cs
fs
loopne
cmp
adc
add
pop
pop
mov
decl
pop
lahf
push
and
jnp
mov
in
pop
out
dec
add
mov
ljmp
loopne
push
jne
add
pop
je
jl
repnz
pop
sbb
push
out
pop
xchg
adc
out
sbb
and
pop
mov
test
jle
xor
and
cltd
cmp
lock
lods
mov
xchg
inc
mov
cli
jnp
imul
mov
movzwl
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
xchg
fisubs
jp
adc
jp
bound
and
je
bound
out
jno
dec
push
mov
mov
jge
dec
movsb
lock
daa
mul
addr16
mov
lods
push
adc
mov
in
jge
repz
inc
add
mov
jno
out
mov
mov
mov
mov
out
xor
cwtl
mov
js
xchg
aaa
mov
jmp
aad
inc
outsb
aaa
xchg
xchg
jbe
cmp
add
pushf
aas
out
outsb
and
movsb
xchg
sahf
jge
out
adc
fbld
cmpsl
popl
divb
in
aad
orl
xchg
pop
add
ja
sub
aaa
jmp
cmpsb
or
int
mov
cmp
dec
aaa
test
or
jl
dec
push
add
inc
bound
and
or
dec
cmp
mov
leave
adc
int3
lds
popa
jge
and
mov
test
sub
push
lods
insb
out
cmp
mov
xor
xor
xor
ljmp
hlt
scas
lds
imul
loope
jns
push
imul
adc
ljmp
scas
sbb
subl
and
cmp
andb
xchg
cmp
cmp
out
lcall
movups
xchg
test
loopne
adc
mov
sti
fildl
orl
scas
dec
and
xlat
pop
int3
mov
lret
aas
dec
test
gs
out
and
aad
sbb
sub
mov
out
in
ret
lods
bound
mov
cmp
push
push
pop
imul
dec
dec
pop
in
inc
or
fwait
mov
mov
xor
repnz
mov
loop,pn
test
imul
or
sbb
push
daa
mov
test
mov
lcall
cmp
icebp
and
dec
mov
push
adc
les
cmp
aas
or
jg
movsl
repnz
sub
int3
sub
lea
mov
das
or
add
push
adc
pop
push
or
ja
xchg
xchg
out
or
xchg
xor
gs
mov
roll
stc
push
cli
out
lahf
mov
aas
outsl
xor
adc
and
cmpsb
and
stos
fsubs
inc
mov
dec
jo
sti
stos
test
push
arpl
push
fsts
adc
pop
mov
arpl
cmp
and
mov
loopne
jmp
push
fiaddl
inc
dec
and
pop
bound
aad
andb
mov
fsubl
andb
jno
sub
jb
jb
int3
andl
inc
stc
into
and
jnp
cmc
xor
cmp
xchg
je
aas
out
daa
sub
jbe
dec
fsubrp
pop
push
enter
cltd
out
in
ficoms
clc
push
jne
popa
int
pop
xor
add
inc
call
xchg
in
aaa
xchg
les
push
dec
mov
xchg
shlb
je
or
sub
mov
inc
cmp
mov
cs
leave
push
loop
shr
adc
sbb
sbb
scas
testb
or
rcr
mov
loopne
cmpl
out
nop
into
pop
mov
sbb
pop
push
pop
sarb
xchg
stos
pusha
push
negb
adc
fsubr
pop
out
into
pop
and
fisttpll
sbb
int
sti
mov
loop
xchg
mov
fwait
sub
pushl
dec
int
nop
sub
cmpsb
pusha
xor
add
lock
push
pushf
popf
ret
xchg
xor
jl
xchg
xor
icebp
and
cmp
jmp
ret
mov
xlat
pop
mov
adc
dec
addr16
test
sub
pop
mov
fcom
and
lcall
cs
xchg
out
mov
xor
insb
dec
ret
imul
xlat
jmp
popf
cli
lahf
popa
fstl
negb
shrl
adc
gs
mov
add
out
andb
loope
lret
inc
and
cmp
movsb
dec
mov
cltd
mov
jecxz
jo
or
or
mov
addr16
popa
mov
loopne
pusha
xchg
call
ret
sub
daa
imul
fnstcw
in
adc
mov
push
insb
outsl
add
pusha
cmp
pop
repnz
aas
fdivrl
in
cmpsb
sub
mov
jo
mov
push
dec
icebp
jnp
adc
push
insb
and
lods
mov
cmp
jp
or
dec
pop
fidivrs
push
sub
mov
jns
pop
idivl
imul
pop
ds
push
cld
cmc
testb
inc
lret
daa
loope
push
sbb
and
push
jmp
pop
iret
xchg
movsb
pop
sarb
mov
push
mov
lret
cmp
sub
fwait
mov
test
loope
test
lods
jle
pop
ret
mov
rolb
cmp
adc
jo
push
mov
lret
mov
andb
enter
ja
mov
cli
inc
push
sub
mov
aad
rcrl
int3
xchg
xchg
jbe
adc
sarl
into
ss
adc
js
jl
loope
mov
add
ja
xor
push
fstl
adc
xor
xchg
ret
movsb
adc
sub
lret
add
ror
arpl
out
push
nop
loop
jbe
test
add
adc
sub
mov
dec
test
int
inc
fdivs
and
pop
mov
insl
icebp
cld
mov
jl
je
rep
adc
test
jbe
jmp
push
lahf
add
xchg
daa
ficompl
lods
int
cmc
xchg
dec
test
popa
fnstenv
addr16
pop
pop
pop
arpl
sti
xor
pusha
bound
lds
shll
cmc
sub
addr16
mov
sbb
add
nop
push
push
mov
shrb
les
sub
mov
int
pop
call
inc
mov
cmpsb
and
adc
lahf
jg
sbb
loopne
out
sbb
daa
outsb
add
dec
mov
jns
push
rcll
add
xchg
mov
pop
movsl
xor
cmp
movsb
mov
mov
or
stc
pop
jo
xor
xchg
pop
lds
sbb
movsl
das
lock
out
mov
mov
sbb
mov
inc
xor
xorb
xor
cmpb
test
sub
mov
es
xor
jmp
call
in
push
fistps
aaa
ja
cmpl
jp
push
pop
xchg
push
arpl
pop
sahf
push
adc
mov
js
push
jle
mov
add
icebp
or
dec
adc
jg
int3
mov
pop
outsb
push
call
sbb
push
xor
in
mov
dec
outsb
mov
in
push
jo
out
aas
push
push
mov
fcomi
sbb
mov
push
data16
push
inc
push
xor
inc
mov
ja
push
fs
or
push
pop
in
dec
test
push
adc
nop
lahf
mov
push
xchg
pop
sub
inc
dec
call
inc
imull
ss
push
jecxz
pushf
or
inc
push
cmp
mov
jp
mov
xchg
sbb
sbb
pop
ljmp
fs
jg
and
dec
out
push
insb
add
jmp
sub
mov
and
push
push
jnp
stc
inc
mov
aad
jg
popf
ficompl
jns
in
mov
sbb
test
mov
inc
mov
fidivrl
sub
test
in
subl
outsl
bndstx
shlb
sub
test
pop
dec
ret
xchg
and
lods
cmp
mov
pushf
jle
jbe
mov
jnp
nop
sub
cmc
jo
mov
mov
fwait
jp
push
mov
pop
adc
je
pusha
sub
int
test
pop
rclb
xchg
cmp
int
cs
repz
sbb
ffree
xchg
fsubrs
jno
sahf
lds
test
repnz
hlt
pop
ret
cmc
lock
iret
or
jo
add
cwtl
mov
and
mov
jl
lcall
xchg
mov
faddp
pop
pushf
sbb
leave
in
sub
out
hlt
daa
jbe
cmc
dec
jge
inc
loopne
xchg
push
test
insb
in
fldt
jae
jmp
xchg
mov
shlb
sbb
mov
pop
sbbl
xor
scas
and
dec
adc
test
jmp
dec
sub
dec
sub
and
inc
pop
sbb
cmp
cli
xchg
push
xchg
mov
or
xchg
rcl
popa
cmpsb
call
icebp
mov
mov
les
push
and
shlb
daa
clc
cmpsb
lock
adc
add
sbb
pop
arpl
or
cltd
cmpsl
out
rcrl
sbb
and
push
in
lods
sbbl
ret
mov
out
cmp
fcom
aas
mov
orb
pop
pushf
mov
cmp
insb
mov
gs
ja
sub
sub
insl
mov
jmp
dec
cmc
pusha
xchg
lret
jge
out
inc
cmpsb
stos
mov
lret
das
adc
ficompl
pop
sub
sub
dec
lret
int
ficompl
pop
push
add
divpd
or
rolb
and
pop
pop
or
cwtl
or
mov
sbb
jge
mov
in
push
pop
pop
pop
dec
sbb
je
mov
inc
mov
into
loop
inc
lcall
push
movsb
and
sub
es
js
push
mov
add
or
or
dec
cmpsb
and
loope
inc
stc
ljmp
fistpll
sbb
dec
xchg
inc
jmp
dec
sbb
jne
cli
sbb
mov
cmpsb
jle
in
shll
std
cld
lret
pop
popa
pop
push
aad
shlb
push
xchg
jne
jp
adc
sub
fnstsw
ljmp
enter
push
imulb
addl
jno
xor
mov
inc
jo
and
push
and
push
pop
lret
popf
or
in
aad
cli
popa
cmpl
sbbb
sub
mov
push
dec
test
inc
ljmp
orb
mov
jnp
xchg
sub
sub
lahf
mov
cltd
int3
sbb
hlt
and
shrl
arpl
jge
loope
lahf
stos
aaa
inc
subb
icebp
js
cmp
cmpsl
push
cmp
mov
mov
xorl
mov
inc
daa
insb
cmpl
inc
mov
or
push
cmpsb
lods
cld
sub
je
push
ja
bound
dec
out
mov
inc
jle
aam
pop
jl
addr16
lock
ds
mov
and
adc
mov
push
and
stos
das
push
pmaddwd
sub
push
ss
jg
fcom
iret
mov
pop
pop
xchg
clc
mov
jl
leave
lcall
cmpsl
sbb
das
sub
jle
pusha
mov
fmul
es
inc
xchg
das
nop
jmp
or
inc
imul
std
jl
xor
les
js
mov
andb
fwait
out
xor
mov
lahf
jno
lahf
jo
inc
adc
cmp
in
and
out
sbb
out
and
test
xchg
push
xchg
inc
mov
fldcw
add
das
stc
pop
pop
and
dec
icebp
out
aam
out
jge
scas
mov
rcrl
aas
cs
scas
xor
jmp
popf
dec
push
call
xor
sti
pop
icebp
mov
bound
sbb
xchg
fidivrl
xor
ja,pt
fdivl
inc
stos
or
sahf
sbb
test
push
pop
lret
lahf
mov
bound
mov
jbe
shlb
cmpsl
push
shlb
aam
push
pop
inc
test
pop
cmpsb
cmp
mov
nop
sbb
in
test
lcall
mov
in
repz
sahf
clc
cld
push
push
mov
and
pushf
stc
ds
add
orl
ds
fisubrl
dec
inc
or
dec
pop
loopne
mov
pushf
pop
in
arpl
pushl
push
inc
mov
pusha
daa
leave
fldl
add
imull
mov
imul
lea
push
inc
ret
idivb
lahf
out
pop
rclb
imul
iret
xchg
jne
fldl
mov
or
cli
dec
and
les
fidivs
push
and
sub
in
push
xchg
sub
mov
stos
rcll
cmc
cmp
cmp
push
dec
rcll
push
sub
les
inc
mov
pop
fdivrp
lret
in
mov
hlt
out
frstor
add
bswap
mov
dec
dec
test
xchg
jb
mov
adc
aam
ss
es
xchg
rcrl
aas
int3
mov
ljmp
out
jnp
sub
sbb
das
sub
add
mov
dec
fcoml
cmp
fsts
outsl
inc
dec
lods
test
dec
dec
xor
daa
sahf
xor
xchg
je
or
dec
cmc
jns
dec
enter
sbb
xor
add
lret
sbb
outsb
clc
pushf
fcmovnb
stos
pop
or
aam
adc
inc
xor
mov
out
push
sbb
xor
out
mov
pop
std
loopne
scas
rcl
jne
or
mov
dec
jg
jne
cmc
sbb
loop
sub
arpl
nop
sti
add
mulb
push
sbb
cmp
jle
xchg
cmp
add
scas
je
out
out
jb
js
cli
cmp
les
out
mov
ljmp
sub
inc
loop
pop
mov
push
sbb
outsb
mov
cmp
addl
and
imul
mov
push
pop
cwtl
jp
les
sub
and
imul
fwait
js
push
data16
movsb
inc
faddp
xchg
cmp
daa
dec
out
cs
cmp
out
xchg
pop
and
js
or
andb
xchg
das
mov
test
iret
dec
sub
or
enter
pop
xchg
sub
mov
lcall
sub
jbe
jp
stos
push
mov
mov
push
popf
sti
imul
daa
repnz
mov
add
xchg
mov
cmp
mov
xor
push
sbb
sbb
jae
cmp
stc
cmp
notb
push
add
popa
cmc
movsb
repz
push
xor
pop
jg
mov
icebp
fwait
mov
push
xchg
or
dec
mov
inc
into
lods
push
int
pop
ja
gs
fs
jp
cmpsb
cltd
dec
xor
xchg
cmp
ret
lret
jecxz
xor
pop
sbb
push
psrlw
jl
lea
sub
sub
test
jp
test
jnp
lret
xchg
ss
das
in
sub
lret
push
adc
shl
push
arpl
flds
dec
in
mov
and
mov
loope
loop
push
in
testl
cli
mov
mov
push
pop
popa
xor
jp
rol
mov
pop
mov
std
testl
push
pop
stos
ficomps
xchg
pusha
data16
movsl
jp
push
insl
js
mov
cltd
addl
jg
add
cmp
cmp
mov
stc
popa
ss
inc
adc
fidivrl
iret
and
jp
xor
jo
mov
int
outsb
add
bound
jne
dec
enter
jle
push
aaa
cs
push
sbb
push
aad
inc
imul
imul
mov
mov
inc
sub
push
les
mov
jae
mov
shl
xchg
cmp
push
mov
jmp
adc
lods
cmpsl
iret
mov
aad
pop
jge
pop
adc
stos
jg
idivb
mov
and
cmp
mov
enter
sbb
test
icebp
xchg
daa
jno
adc
sti
stc
repz
push
out
scas
cmp
pop
in
xor
xor
shr
js
or
leave
push
push
jg
mov
es
push
gs
cmp
and
ret
cmp
and
or
cmp
jmp
adc
lock
xchg
xchg
xchg
mov
cmp
data16
push
pusha
ret
sarb
xchg
enter
icebp
fxch
or
in
into
xchg
jbe
xor
inc
ljmp
sub
out
pop
push
test
or
add
dec
cltd
fsts
xor
mov
xor
or
jg
repz
push
dec
sub
rol
and
fincstp
loope,pt
jno
leave
cld
xor
mov
xlat
ret
nop
stos
pusha
xlat
mov
push
daa
adcb
add
aam
fstl
dec
in
pop
rol
add
jg
xchg
cmpsb
pop
cs
stc
sub
mov
clc
pop
mov
and
or
mov
cmp
cltd
push
ds
fyl2x
aam
jo
clc
xchg
in
xchg
pop
rorb
add
rorb
loopne
shlb
lahf
sub
inc
jmp
xor
lcall
mov
inc
test
testb
cmp
imul
bound
scas
xchg
and
jmp
inc
shlb
mov
fiadds
and
ret
mov
xchg
xchg
rcpps
aad
test
sahf
sub
push
push
fwait
add
mov
xor
mov
inc
cmp
jecxz
mov
daa
adc
jbe
and
int3
or
mov
pop
das
call
lods
insl
mov
cmpsb
mov
scas
imul
xchg
outsb
mov
and
mov
dec
pop
mov
mov
gs
test
popf
mov
push
js
xchg
push
data16
pop
outsl
add
cs
rcl
pop
cmp
arpl
aaa
insb
test
cmp
out
inc
mov
add
addr16
xor
hlt
addr16
add
mov
out
lods
mov
iret
aad
add
insb
jne
inc
pop
and
cs
aas
and
out
stc
xchg
je
pushf
in
je
push
xchg
cmp
xchg
loop
sub
daa
cmp
mov
dec
xor
int3
inc
loopne
add
pop
stc
fldt
pusha
test
lock
lock
xchg
std
mov
jns
or
stc
xlat
jb
sub
pop
rcll
inc
test
popa
fwait
test
push
out
imul
xchg
fdiv
mov
fs
or
jae
js
icebp
cmp
fs
sub
and
add
pop
sub
hlt
push
xchg
sahf
xor
nop
in
add
test
rorb
cs
inc
outsl
imul
xchg
mov
cltd
mov
mov
xor
dec
or
lahf
outsb
xorl
pop
shrl
dec
cltd
ret
je
and
pop
sub
push
bound
sub
cmp
addr16
push
cmp
test
fdivrs
std
xor
imul
fsubr
sub
aaa
pop
fldl
and
aad
dec
scas
aad
xchg
xchg
push
popf
lahf
xchg
btr
call
mov
popa
pop
adc
imul
ljmp
insb
mov
nop
mov
mov
mov
inc
jo
jnp
out
add
out
daa
adc
add
inc
push
xchg
stos
sbb
lcall
lret
sub
shr
stos
inc
dec
into
cmpsl
jecxz
hlt
dec
call
cs
cmpsb
push
add
jne
xchg
push
gs
inc
or
or
int3
inc
sahf
iret
imul
mov
jo,pn
pop
fiadds
repnz
inc
hlt
scas
pop
or
jge
mov
sbb
dec
scas
xor
roll
aam
das
outsb
loope
jle
inc
cmp
inc
mov
jmp
ljmp
subb
mov
push
fdivrs
sbb
arpl
imul
out
stos
and
jae
int3
mov
mov
fs
shl
cmp
cmp
xor
jns
mov
loop
outsb
cli
jecxz
ljmp
sbb
mov
jnp
insl
pop
mov
dec
adc
adc
lret
xor
rcll
push
fidivl
push
inc
sar
sarb
mov
lcall
call
addr16
add
loop
sub
and
shl
ljmp
cmp
sahf
pop
xor
dec
fisttps
push
out
push
push
jne
addb
std
mov
dec
ret
stc
movsl
mov
sbb
out
inc
out
stos
js
push
idivl
xor
mov
hlt
pop
mov
push
mov
jae
mov
sub
loopne
imul
pop
in
xor
div
cmp
fcoms
cmp
sbb
push
jns
out
cmp
push
inc
movsl
addl
push
cmp
push
xchg
sbb
loopne
xor
sahf
cmpsb
bound
rolb
mov
push
sub
insl
jb
pop
lods
movsl
leave
lahf
push
mov
push
mov
jmp
enter
test
xchg
add
int
sbb
fsubl
push
mov
pop
gs
xor
fldcw
shrl
psubusb
popa
ret
mov
ret
mov
pusha
push
pop
shl
add
imul
inc
mov
popl
icebp
and
addr16
xor
pop
mov
push
mov
ret
std
sub
imul
dec
push
push
lret
movsl
pop
int3
push
inc
cmp
adc
sbb
scas
in
cwtl
sub
and
and
mov
xor
lock
xor
lods
and
mov
mov
add
push
xchg
mov
icebp
test
mov
sbb
pop
lcall
push
aam
pushw
imul
cmpsb
repz
mov
dec
bound
jae
leave
aas
arpl
and
jno
scas
mov
xchg
sar
insb
add
push
vandnps
xor
push
lods
mov
push
inc
scas
out
iret
rcll
loop
cmp
cmp
add
xchg
push
mov
sbb
sub
jns
xor
pop
xchg
or
data16
int
pop
daa
loope
sub
testb
push
dec
mov
push
mov
fwait
jb
hlt
xchg
xchg
add
add
pop
call
push
mov
add
pop
ds
dec
sub
fwait
leave
loop
insl
sarb
cwtl
je
mov
iret
sti
inc
cmp
inc
sub
sbb
add
xchg
mov
jnp
mov
and
inc
js
lods
sbb
add
fnsave
push
shrl
loopne
pop
pop
pop
in
fdivl
in
bound
inc
out
or
jle
pop
mov
hlt
add
and
sbb
sbb
cmp
dec
push
jp
add
mov
push
ror
adc
insb
jecxz
test
dec
outsb
push
mov
jp
sub
and
enter
pop
hlt
push
mov
xorl
data16
es
jg
jno
dec
std
cmpsb
out
xorb
jecxz
lret
mov
loop
xchg
inc
xor
stos
sti
leave
mov
cmp
in
xchg
enter
insb
jae
scas
jae
pop
mov
mov
iret
filds
icebp
and
repz
xchg
mov
pop
or
mov
xor
xor
flds
and
pop
xlat
add
push
cmpsl
adc
xchg
mul
and
jae
pushf
mov
add
cwtl
out
fld
or
fildll
lret
inc
lods
add
push
dec
das
scas
das
ds
fmull
adc
data16
jns
fwait
int3
jbe
je
xchg
aam
jno
inc
fimull
xor
fs
xor
pop
das
sar
jae
or
fstps
loope
jb
sub
mov
and
in
jnp
pop
mov
arpl
es
mov
cli
outsl
xchg
inc
add
jp
nop
je
and
or
sub
jge
scas
data16
leave
jl
or
mov
mov
xchg
repnz
iret
xor
jbe
lock
ja
mov
cmc
push
push
test
pop
das
dec
loop
aaa
xchg
psllw
mov
push
imul
repnz
adc
add
pop
imul
fisttps
dec
ja
adc
pushf
lahf
jecxz
sti
cmpb
jbe
dec
test
xchg
test
xor
rcrb
int
imul
mov
adc
dec
cmc
lods
or
nop
jae
pop
cmpsb
jp
mov
cmpsb
pop
adc
rcrl
imulb
inc
push
inc
dec
dec
inc
pop
shlb
mov
cmpsb
mov
je
mov
test
ss
into
sti
int
and
mov
loopne
add
xchg
mov
cs
test
lcall
cmp
cmp
mov
inc
mov
mov
add
push
frstor
xchg
stos
mov
jmp
in
xor
rcll
sbb
fwait
inc
pop
lock
aam
pop
test
and
push
mov
outsl
pusha
xor
dec
mov
ljmp
cmpl
daa
xor
enter
hlt
dec
rolb
pop
xchg
xchg
add
push
lods
test
push
xchg
or
cmpsl
js
jns
or
int
test
insb
jp
sub
ror
or
subb
mov
les
packsswb
fstl
in
enter
aad
mov
add
iret
xor
sub
scas
mov
mov
and
sub
mov
inc
pop
cmp
cmp
call
xor
adc
lods
icebp
and
insb
ds
inc
iret
adc
xor
push
push
imul
push
mov
dec
in
ret
test
aad
cltd
shrl
shrl
cmp
add
xchg
scas
sub
mov
fstps
cmp
and
stos
xchg
clc
pusha
xor
xor
loope
cmpsb
mov
cmp
cmp
sbb
inc
sub
mov
mov
inc
dec
icebp
jmp
test
adc
mov
add
loope
dec
dec
xchg
loope
mov
test
orb
bswap
and
andl
jno
sbb
lret
lods
in
in
aaa
dec
clc
xlat
xchg
inc
push
dec
pop
mov
nop
shll
jle
xor
dec
fstpt
push
popl
ror
mov
mov
loopne
mov
mov
adc
jl
xchg
and
loopne
testb
xor
les
mov
push
xchg
mov
add
js
mov
out
adcl
sti
lret
or
popa
mov
outsb
fmuls
cmovp
mov
addr16
pushl
jae
sbb
xchg
xchg
iret
xor
jo
rcr
cmp
leave
or
in
push
ljmp
push
cmp
out
jnp
cwtl
into
mov
jbe
cmp
ret
mov
lods
aad
insl
adc
fimull
mov
hlt
pushf
lock
sbb
sti
jbe
dec
jb
cmpsl
or
xor
icebp
add
fisubrs
push
cmp
add
lods
in
jmp
bound
in
orl
jae
mov
sbb
mov
xchg
push
arpl
push
sub
nop
lea
dec
in
insl
ja
adc
push
aas
fmuls
sbb
push
test
inc
or
or
pusha
test
imul
mov
sahf
inc
out
jp
mov
cli
xchg
stc
jns
xchg
push
testb
and
roll
add
inc
push
pop
dec
sahf
fstp
movb
xchg
lock
push
mov
bound
mov
pop
cli
push
shl
inc
mov
imul
test
mov
xchg
inc
fdivrs
js
test
mov
movaps
pusha
jne
cld
xchg
cmp
or
ja
sbb
cld
xchg
lcall
xchg
mov
push
sarb
jg
das
and
cmp
pop
icebp
cmp
lahf
cmp
out
ja
cmc
jno
cmp
out
sub
cmp
or
adc
add
stos
mov
sub
rep
lret
push
scas
iret
sahf
cmc
ds
inc
dec
rcll
sbb
out
sbb
xchg
inc
dec
jle
scas
lret
xor
gs
or
fxch
lret
mov
aaa
or
push
ds
jecxz
adcl
mov
pushf
movsl
lcall
das
jnp
mov
or
add
xor
fistps
add
mov
sbb
out
pop
mov
lcall
addr16
mov
add
dec
fstpt
hlt
nop
cmp
push
loopne
jae
mov
in
cmc
jle
sub
inc
xor
push
xor
jno
fmuls
and
call
sbb
pop
push
pop
inc
movswl
adc
lds
mov
mov
movsb
cmpsb
sub
mov
lock
test
push
cmp
jns
es
das
xor
mov
xchg
push
fdivr
mov
dec
and
xchg
fildll
pop
loop
hlt
sub
mov
mov
in
fildll
hlt
test
decl
shlb
add
sti
aas
sbb
cmpsb
mov
mov
ljmp
repnz
hlt
and
jb
icebp
xor
jmp
inc
and
pushf
pop
cmpsl
ljmp
pop
movsb
and
repz
xor
inc
dec
ret
mov
mov
jle
scas
loope
push
adc
xor
lahf
and
bound
mov
mov
sbb
mov
add
pop
test
aaa
lock
and
mov
jmp
mov
or
aas
rcr
mov
sahf
jb
mov
popf
loopne
xchg
add
xchg
push
push
lods
dec
mov
testb
mov
lds
loope
lock
shrl
insw
cmpsb
cmp
inc
sub
xchg
repnz
add
push
sub
jo
loop
cmc
fxam
jo
mov
xor
or
pop
mov
ret
fidivs
jmp
sub
lds
xchg
loope
mov
xor
xchg
sti
arpl
outsl
xorb
xlat
popfw
lahf
daa
into
mov
movsb
cmp
loopne
loopne
xchg
jp
insb
sub
adc
or
adc
xchg
ja
inc
mov
ret
xchg
pop
push
bound
pop
jbe
test
push
cmp
mov
mov
daa
push
mov
cwtl
cmp
enter
xchg
jl
in
mov
scas
pop
mov
push
out
bnd
lock
cld
in
push
int
or
dec
push
jb
inc
fsubr
bound
cmp
or
fimuls
fists
push
or
test
ret
push
add
scas
rorl
or
pushf
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
loope
test
cmpl
pop
jp
push
pop
rcl
das
int
add
sbb
jg
cld
cmp
fs
stc
xchg
in
jecxz
lret
push
and
mov
inc
sub
shlb
popf
cs
fcoml
mov
push
cli
cmp
ljmp
adc
int
and
sbb
imul
subl
xor
jl
cmp
imul
les
ret
nop
and
aaa
fildll
imul
inc
cmpsb
into
inc
sub
cmp
outsb
push
mov
inc
xor
or
jns
cmp
cmp
jecxz
push
sub
cld
and
data16
in
mov
rcll
dec
pop
mov
or
xchg
mov
repnz
dec
data16
and
cmp
negl
adc
or
arpl
sbb
mov
fldcw
adc
mov
insl
popf
jmp
sbb
and
cmp
outsb
rclb
jmp
std
call
jno
ret
pop
xlat
test
pop
cmp
pop
loope
jg
clc
dec
push
pop
dec
movsl
jns
mov
adc
jle
xchg
mov
es
cmp
cmp
and
dec
scas
or
gs
loope
mov
into
dec
mov
cwtl
push
jno
test
mov
add
rcr
cmp
test
push
ret
pop
adc
pcmpeqd
fsubl
mov
jne
inc
mov
cmp
and
cmp
jns
push
arpl
outsl
mov
xchg
mov
push
mov
lods
lret
daa
and
stos
jae
mov
ss
jns
push
test
imul
xchg
fistps
add
sar
lods
scas
in
shlb
out
inc
movsl
jb
push
stc
dec
movsb
mov
jl
popa
cmpsb
dec
popf
les
test
xchg
aaa
sbb
cmp
cmp
and
inc
insb
push
adc
mov
aas
loopne
jmp
pop
loop
pop
test
stos
leave
decb
jecxz
sahf
push
xor
add
mov
push
add
jbe
mov
xchg
push
dec
mov
int
push
sub
ret
sub
scas
daa
movb
jl
addb
xchg
pop
or
jne
and
decb
adc
loope
jmp
lahf
stos
leave
or
and
test
fildl
jno
cmpsb
fstps
xor
pop
jmp
sahf
add
xor
shl
jmp
mov
movsl
jg
lock
jecxz
ja
roll
inc
negb
movsb
repz
inc
mov
arpl
scas
iret
scas
sbb
mov
repnz
and
lea
daa
jo
cmp
fs
push
add
jg
ljmp
fldl
notl
ret
cmp
fldcw
movsb
sub
outsl
stc
aam
mov
andl
push
rorb
add
out
adc
das
enter
fmuls
mov
push
pop
addr16
mov
sbbb
adc
or
cmpsl
loopne
aaa
jle
imul
imul
or
testb
cmp
adc
aad
pushf
pop
adcb
or
cltd
fdivs
xchg
fs
pop
pop
adc
call
mov
and
sbb
inc
push
lahf
and
inc
sub
inc
jl
test
aam
mov
push
cld
roll
pop
sahf
lcall
aaa
fisubrl
decl
jo
movsb
jnp
enter
cli
cmpsb
loopne
pusha
stc
stos
dec
rolb
pop
fsubrs
mov
lret
into
dec
xor
cmpsl
enter
pop
pop
push
cmp
subb
mov
pop
cmpsb
or
lods
psraw
lods
xchg
stc
in
leave
pop
push
lods
push
rorb
dec
or
or
dec
cmc
xchg
jo
xor
push
add
cmp
out
dec
xor
les
faddl
cmp
ljmpw
cmp
sarl
ss
push
or
mov
cmp
cmpsl
pop
fstl
push
daa
int3
xchg
mov
hlt
aad
fwait
leave
mov
jnp
inc
add
sub
data16
and
rorl
test
mov
push
das
cltd
call
ljmp
sbb
pop
out
repz
movsl
add
cmp
pop
and
idivb
cwtl
jmp
xchg
xchg
jle
or
push
into
pop
repz
scas
mov
test
loope
and
inc
jnp
cmp
fadds
icebp
jo
dec
push
loop,pt
and
aam
jmp
sub
ss
test
sbb
lcall
push
mov
mov
call
into
ljmp
pop
clc
les
jmp
call
cld
or
add
int
jp
movsl
push
sub
xchg
sub
subl
popf
enter
shlb
cwtl
in
sarb
sbb
scas
add
or
mov
sub
cwtl
and
and
inc
lods
mov
adc
insl
jl
adc
inc
push
loope
xchg
std
jnp
push
bound
rcl
push
or
and
int
xor
int3
dec
fwait
or
cmpsl
push
jo
sbb
outsb
aam
dec
pop
push
jne
icebp
jbe
enter
aad
lods
push
arpl
out
cmp
cwtl
mov
pushf
js
insl
aam
xor
clc
pop
dec
fstl
fs
ffreep
loope
cmc
popl
frstor
jbe
mov
sti
lret
mov
inc
imul
inc
rcl
and
cltd
mov
leave
mov
sub
mov
stos
pop
xchg
sbb
scas
iret
leave
daa
push
repz
adc
mov
ja
pop
cmp
mov
cmp
call
pxor
cs
dec
add
test
aad
jg
sbb
adc
and
and
and
cmc
jae
movsb
into
push
into
lds
sbb
dec
push
pop
cmpsb
mov
cli
sarl
mov
int3
sbb
sbb
std
pop
mov
push
aad
jge
testb
push
loope
arpl
push
ret
dec
rol
test
jg
dec
jp
cmp
testb
inc
add
stc
push
cmp
jmp
rcrb
cli
pop
pop
mov
push
xor
dec
xchg
and
xchg
or
lea
stos
in
fcmovnb
ja
mov
jecxz
fucom
and
push
jecxz
in
add
je
in
gs
inc
jg
push
mov
jge
sbb
push
outsb
cwtl
add
insb
jb
push
push
and
sub
adc
je
lods
cmpsl
cli
mov
cwtl
sub
adc
jnp
mov
repz
or
inc
xchg
in
sub
ret
int
mov
imul
push
pinsrw
mov
mov
dec
gs
pop
loop
outsb
dec
lahf
add
xchg
adc
jmp
mov
mov
mov
imul
and
mov
xorl
jae
daa
adc
lods
imul
out
hlt
adc
pop
cwtl
in
jae
fmul
jg
enter
cld
clc
les
push
and
xlat
mov
cs
push
sti
scas
or
movsb
push
jg
arpl
js
aam
mov
repz
out
out
imul
sbb
pop
in
jne
mov
or
cmp
xchg
add
pop
mov
and
cltd
mov
rcrl
rol
adc
sub
fdivl
out
jo
push
pop
inc
insl
fucomip
icebp
and
pop
xchg
shr
xor
mov
in
mov
stc
insl
lcall
rolb
mov
in
enter
negl
pop
sbb
stc
mov
xchg
in
jae
aas
lods
and
in
xor
push
mov
test
sbb
xchg
cmpsl
sbb
sahf
sbb
push
sti
jp
outsb
xor
push
inc
pop
loopne
adc
rclb
mov
shll
js
iret
lods
pop
nopl
fimull
and
lds
or
scas
cmpsb
mov
sarl
xlat
rcll
fidivl
push
fcompl
insb
jns
imul
dec
in
out
sub
hlt
cmp
popf
rorl
nop
xorl
xor
push
xor
cmp
pop
jns
lods
pop
mov
xchg
or
stos
jl
roll
jae
xlat
cmp
loope
adc
fwait
xor
daa
dec
fnsave
jns
xor
cmp
inc
aas
outsl
aad
imul
insl
or
xor
scas
push
jmp
mov
pop
ss
mov
dec
clc
sbb
mov
nop
or
adcb
test
mov
pop
imul
std
dec
call
gs
pop
push
ds
mov
or
fincstp
repz
enter
fcmovb
aas
ds
ds
cwtl
xorl
in
mov
std
mov
push
and
adc
push
iret
jg
xchg
xchg
test
ret
sub
in
mov
mulb
cmpsl
pop
xor
or
dec
mov
outsb
and
xchg
sub
loopne
add
add
sbb
xchg
mov
test
rcr
xor
adc
std
and
loope
lret
xlat
dec
xor
ja
mov
ret
jle
mov
push
jmp
push
lods
push
add
leave
mov
sub
outsb
sbb
sub
xchg
add
out
int
sub
icebp
loopne
inc
stc
call
push
sub
xabort
into
cli
sti
cmc
adc
test
mov
pop
sbb
fldl
add
lcall
jmp
test
std
pusha
outsb
je
dec
subl
sbb
mov
imul
lods
clc
xorl
push
or
xchg
jmp
cwtl
clc
repnz
jecxz
add
push
add
jae
das
pop
sbb
push
insl
ja
push
lret
add
in
int3
pop
add
leave
push
jae
cmp
dec
jb
jbe
pop
movsl
pop
addr16
jp
das
cmp
push
out
inc
scas
dec
cli
int3
adc
and
xor
jne
iret
stos
repnz
xchg
mov
in
movsl
test
sub
mov
into
add
xchg
push
jnp
inc
inc
dec
xchg
jg
sbb
cld
loop
pushf
xchg
sub
jge
jmp
insl
ret
in
sub
xor
push
shll
xor
jnp
pushf
jns
inc
ss
mov
sahf
in
push
pop
xchg
sbb
xchg
into
or
push
lods
adc
repz
loopne
std
lahf
enter
idiv
bound
rorb
addr16
rclb
push
ret
adc
and
dec
mov
or
inc
or
mov
sub
pop
sub
test
push
dec
ja
imul
into
dec
das
fcompl
sub
divl
and
addr16
xlat
sti
rolb
jno
in
mov
jb
push
mov
nop
push
cs
inc
mov
mov
daa
sub
xor
mul
cs
push
test
cli
mov
xchg
inc
xor
out
sub
cmp
popf
insb
popa
or
pop
hlt
lods
cmp
out
mov
bound
nop
dec
ret
xchg
shl
hlt
daa
nop
insb
fcmovbe
pop
cmp
lret
out
mov
fs
popa
push
adc
stos
sarl
mov
outsl
jg
out
cmc
inc
dec
dec
xor
outsl
mov
jns
addr16
xlat
test
lock
pmaxub
dec
in
int
push
cli
lds
mov
add
push
adc
mov
add
ja
fsubs
scas
push
or
push
ljmp
and
lock
jg
int3
movsb
cltd
lret
add
into
out
mov
mov
cmpb
out
dec
lock
rol
rolb
push
pop
mov
xor
xchg
dec
xchg
hlt
jb
aaa
lcall
inc
into
lea
xchg
leavew
add
repnz
push
mov
xchg
sbb
jg
stos
xor
pop
jl
mov
shll
dec
lret
pusha
sub
sub
mov
dec
inc
push
or
dec
sahf
fisttpl
xor
lcall
es
xchg
icebp
addr16
test
in
and
jg
dec
xor
mov
fimuls
insb
add
lods
jae
cmpsl
push
lods
xchg
and
add
dec
xor
mov
mov
cld
lds
pop
push
add
test
sub
lea
jle
sub
aaa
stos
cmp
add
hlt
pusha
jne
outsb
add
testb
adcb
lret
repz
mov
and
js
js
and
jge
xchg
mov
sbb
add
subl
and
add
idivb
shl
push
sbb
mov
and
push
cmp
adc
fwait
and
sbb
inc
inc
les
ja
cmp
shlb
xlat
out
dec
sub
aas
sbb
clc
jnp
test
and
cmpsb
push
addl
adc
imulb
adc
and
mov
loope
movsl
lcall
jno
mov
mov
in
xor
cmp
mov
push
jl
add
daa
pop
mov
outsb
aad
push
movsb
jno
outsb
xchg
mov
insl
sbb
les
ss
jne
dec
lahf
adc
dec
shrl
dec
mov
push
hlt
imul
loopne
punpcklbw
lcall
mov
inc
ret
push
xchg
lock
ljmp
add
fiaddl
jg
pop
and
aad
mov
push
dec
sbb
pop
pop
and
mov
dec
lods
dec
ret
push
fmuls
and
ss
push
shrl
and
je
jg
loope
inc
movsl
cmp
jo
adc
push
mov
push
cmp
xchg
push
lods
lahf
enter
mov
jecxz
xchg
int
aas
mov
repz
push
push
and
add
clc
inc
xlat
icebp
push
shll
xor
into
fst
jbe
sbb
mov
lods
xchg
mov
push
clc
sti
rcrb
insb
je
lret
addr16
rorl
dec
xchg
or
cs
jmp
push
in
adc
jmp
cs
add
adc
sbb
icebp
stos
or
call
mov
push
cmc
rclb
push
cmp
scas
adc
iret
sarl
adc
cli
inc
mov
push
daa
xchg
dec
add
cmc
xchg
xor
and
add
pop
inc
sbb
xor
outsl
repz
pop
fidivrl
mov
popa
fstps
scas
sub
cltd
jg
mov
test
lock
add
jnp
std
mov
sub
mov
and
out
or
cmp
sbb
add
bsr
subb
xor
inc
js
dec
enter
xchg
repz
xchg
scas
insl
cmp
insb
push
push
inc
cmp
loop
jns
inc
pop
addr16
pop
adc
mov
or
out
cmpsb
mov
push
into
sbb
sahf
push
mov
imul
push
jns
div
pop
loope
mov
ja
push
bound
testb
test
fists
cmp
idivb
xchg
push
push
xchg
ss
push
xchg
xor
arpl
adc
xor
or
cmp
adc
mov
out
pop
outsl
imul
xor
dec
push
rcr
mov
pop
or
mov
mov
cli
dec
imul
shrl
xor
insb
data16
xchg
insl
js
lods
lock
lret
enter
jmp
sbb
imul
sub
xchg
ss
mull
xor
and
inc
stos
scas
imul
out
mov
mov
xorps
and
jle
sub
xchg
mov
inc
cmp
faddl
mov
jmp
xor
shrl
xchg
ret
mov
sar
test
popf
mov
fs
idiv
loope
inc
movsb
jg
fs
mov
inc
arpl
or
rcrl
xlat
jo
test
lock
push
rcrl
rcll
mov
rorl
pushf
push
fcomps
jo
xchg
jno
dec
mov
mov
arpl
outsl
into
lret
test
push
sbb
rorl
test
add
and
mov
jne
inc
pop
ljmp
dec
in
push
cs
add
dec
xchg
and
sbb
lds
test
les
or
push
scas
and
divl
xchg
das
outsb
mov
add
and
andb
pop
fwait
mull
push
mul
insb
daa
xchg
ja
sbbb
mov
dec
movsb
adc
cmpsl
xlat
cmpl
lods
add
in
pusha
sarl
push
arpl
inc
lret
adc
cwtl
repz
sub
and
jae
or
fmull
add
push
scas
cmpsl
and
dec
cltd
dec
xchg
fsubr
and
loop
and
add
jecxz
pop
sub
adc
xor
fstl
push
and
jp
subl
js
loop
jb
pop
pop
out
mov
icebp
ret
fwait
push
inc
and
pop
sbb
xorl
dec
fsubp
inc
mov
xchg
rclb
aaa
ret
arpl
filds
stos
fsubl
mov
adcl
adc
dec
insb
in
or
lds
and
dec
pop
mov
and
add
sbbb
mov
std
test
in
or
shlb
pop
pushl
inc
js
mov
shll
xchg
inc
cmp
ljmp
movsb
push
cmp
lds
ja
add
fcomps
xor
je
lcall
xor
dec
mov
ret
sub
xor
xor
cwtl
scas
mov
sub
int
cmp
iret
popa
rclb
sub
mov
inc
test
mov
mov
inc
sbb
aas
xchg
adc
inc
ret
fstps
lock
and
fidivrs
test
daa
inc
adc
out
push
mov
fcomp
mov
sub
jmp
stc
jmp
jg
sbb
jecxz
mov
repnz
lret
xor
inc
fwait
mov
or
mov
ret
jb
lods
sarw
in
cs
outsb
inc
xlat
pop
sarl
insl
push
dec
mov
aam
sbb
into
adc
sbb
fisttpll
cwtl
mov
mov
ss
lds
mov
jmp
mov
push
xor
jg
pop
movsl
popa
lahf
jg
movsl
ja
sbb
cmp
mov
sub
mov
mov
mov
out
iret
ljmp
call
imul
cmp
lret
dec
out
mov
lcall
insl
div
jecxz
insb
repz
xlat
js
ds
pusha
mov
popa
insb
gs
daa
cmpsl
cld
ss
int
aaa
jne
shl
bound
push
pop
jecxz
iret
fcoms
jmp
pop
popl
aad
push
aam
shrl
jbe
test
mov
clc
or
sub
push
lahf
add
rol
ret
mov
push
into
cmpsl
sahf
shlb
sub
rcrl
lahf
adc
ds
test
scas
cli
les
cli
xchg
mov
xor
outsl
pop
int
or
pushf
mov
loope
xchg
ret
and
sbb
das
cmpsb
rorb
inc
ret
das
pop
xor
mov
mov
ds
mov
push
mov
adc
cli
inc
into
lods
in
loope
cmpl
jnp
xlat
sub
nop
sbb
lds
cmp
daa
and
push
or
cmp
cld
mul
je
inc
lods
js
jle
fwait
cmpsl
mov
or
aaa
enter
aam
iret
xor
ret
nop
mov
xor
xchg
or
pop
dec
mov
or
pop
inc
mov
mov
adcb
out
jnp
adc
test
les
inc
push
inc
jge,pn
dec
punpcklwd
decl
xor
stc
fcomps
and
cmpsb
push
mov
std
cmpsl
jle
mov
divb
push
mov
jl
lods
fwait
rcrb
inc
fwait
jl
test
mov
dec
or
dec
add
pusha
mov
loope
pop
jle
aad
xchg
dec
out
sahf
test
into
pop
xor
xor
call
add
jmp
or
cvttps2pi
add
sbb
mov
jo
cmp
push
ret
mov
jne
jle
sbb
adc
lret
fnstcw
mov
dec
jnp
adc
fstl
iret
sbb
loope
cmp
test
data16
orl
sbb
inc
xor
out
xchg
jle
xor
sbb
adc
inc
sarb
jnp
push
es
ds
das
jecxz
xor
xchg
icebp
pushf
adc
push
dec
insl
sub
inc
dec
lret
addb
dec
pop
or
and
inc
inc
sbb
lods
call
push
add
fwait
xchg
repz
lcall
clc
outsb
lret
push
xlat
xchg
and
inc
dec
xor
inc
cmpsb
mov
push
in
fcmovbe
dec
inc
flds
or
nop
pop
and
jg
in
xlat
xchg
push
jo
pop
pop
dec
ljmp
mov
pop
xlat
push
out
and
and
rol
push
mov
test
out
into
shll
in
xchg
jecxz
cmp
sub
push
mov
out
fwait
mov
adc
movl
jb
aas
jae
adc
out
dec
pop
mov
mov
cmp
cmp
xor
jge
pop
test
ljmp
jp
sahf
and
push
mov
int
xchg
rcr
xchg
jae
pop
sahf
cmp
mov
lcall
add
in
daa
mov
add
fbstp
jnp
enter
add
xor
popa
cmc
out
xchg
mov
stos
lods
sub
push
mov
xor
cmpsl
dec
gs
inc
push
push
cwtl
insl
pop
jl
lods
cltd
push
push
ss
ficoms
jecxz
loopne
pop
int3
add
insb
fstps
out
lahf
cmpsl
fildll
cmovnp
pop
test
dec
dec
sbb
xor
popa
repnz
fcomi
lahf
or
xchg
imul
popa
push
pop
in
inc
adc
or
arpl
fwait
inc
rorb
push
jmp
push
pop
sbb
cltd
mov
in
mov
les
add
sbb
in
push
xor
add
sub
jns
insl
mov
loope
push
jno
sbb
pop
enter
aad
or
push
push
jl
mov
jbe
cmp
test
pop
xchg
into
aam
das
jns
cmp
ljmp
fs
inc
xchg
sbb
imul
cld
or
cmp
xchg
inc
cmpsl
popf
pop
sbb
xchg
xchg
movsb
xor
notl
mov
shl
xchg
stos
and
in
in
pop
push
adc
in
or
sbb
fucom
jge
les
push
xor
jae
js
mov
and
in
dec
pop
xor
nop
in
xor
divl
xchg
insl
pop
mov
sti
add
cli
mov
xor
pushf
outsb
inc
jb
insl
fwait
pop
xchg
mov
dec
dec
mov
jne
decl
inc
int
in
sbb
out
movsl
mov
sub
out
or
dec
cmp
or
in
mov
leave
and
aaa
cmpsb
adc
in
xchg
mov
adc
sbb
add
int3
jp
mov
loopne,pt
inc
enter
subb
add
xchg
aas
lret
hlt
fnstcw
xor
inc
in
or
sbb
int3
add
loope
es
fwait
or
jbe
add
imul
sbb
push
cmc
pop
adc
xchg
inc
adc
lahf
je
mov
adc
mov
and
adc
imul
cld
xchg
lea
les
push
add
inc
mov
je
ljmp
lock
or
dec
aas
aad
add
pop
out
nop
inc
scas
jno
xchg
xor
popf
sub
cli
add
int
mov
les
adc
es
in
push
dec
imul
sbb
adc
daa
pop
sbb
in
mov
movb
cmpl
testb
aaa
lds
push
mov
mov
imul
add
jle
sub
mov
clc
or
dec
add
push
aas
push
add
jecxz
lret
nop
mov
and
push
pop
fs
lret
ret
inc
adc
std
fdiv
les
push
pop
stc
es
jne
ficomps
movsl
fs
add
das
int3
pop
out
clc
popa
out
sbb
xor
shll
mov
popa
push
aas
mov
mov
fsubrs
arpl
xchg
xchg
mov
add
inc
out
dec
or
push
dec
xor
movsb
fmuls
lcall
insb
adc
sub
push
ljmp
lcall
jp
jo
jno
test
push
xchg
push
insl
xor
jo
push
xchg
in
std
cmp
mov
and
adc
fdivs
push
out
push
orb
repnz
test
insl
pop
in
jecxz
inc
push
cltd
aaa
inc
divb
mov
popf
mov
cmp
les
pushf
test
adc
pop
sub
jb
mov
push
dec
insb
adc
std
or
push
jmp
sbb
jmp
and
outsl
das
add
jae
xchg
loope
frstor
jns
lock
test
xor
fidivs
sahf
hlt
add
mov
imul
mov
loop
out
leave
jecxz
push
pop
adc
in
mov
outsl
stos
sub
sti
dec
stc
mov
adc
loopne
je
stc
jecxz
sbb
dec
cs
out
xchg
or
imul
xchg
push
or
mov
mov
fadd
and
iret
je
into
fcoml
ret
mov
xchg
push
out
out
pop
pop
popf
inc
mov
arpl
xorb
out
sbb
add
lds
cmpsb
popa
add
sub
repz
cmp
jnp
jg
lods
scas
xchg
cli
dec
mov
jne
loope
into
push
push
outsb
ss
jge
into
xchg
jmp
gs
pop
jb
clc
leave
sbb
and
lahf
loop
push
movsb
not
loopne
xorl
rolb
pusha
dec
es
popl
js
int3
jbe
or
test
dec
stos
dec
in
xchg
pop
or
push
or
xchg
xor
push
cmp
out
mov
pushf
push
mov
scas
jmp
loope
pushf
outsl
pop
div
mov
push
push
or
ljmp
cmp
jb
pop
lods
int3
dec
jle
ret
mov
cmp
out
in
dec
add
pop
mov
fchs
push
xchg
stc
shlb
les
movsl
out
jo
js
or
lods
jne
in
bound
push
mov
aas
dec
bound
adc
rcl
push
cmp
pusha
fwait
es
scas
mov
mov
dec
into
and
or
adc
inc
mov
sub
xlat
and
ljmp
or
nop
les
das
insl
mov
or
xchg
pop
mov
pop
cld
pop
or
jl
dec
orb
jge
push
cltd
adc
mov
cmpb
fstpl
mov
jg
lods
enter
das
jmp
addb
or
hlt
scas
mov
dec
jle
insl
rcll
imul
in
fwait
push
xchg
pop
sbb
jnp
int3
jbe
fdivl
test
pop
addr16
xor
lcall
add
and
dec
rcrl
dec
popa
cmpsb
pop
inc
or
mov
in
xor
stc
cmpsl
ror
cmp
and
pop
hlt
xchg
push
jbe
in
idivb
adc
mov
aaa
pop
mov
push
xor
daa
dec
pop
pop
popf
lods
jg
and
mov
int
lret
xchg
xchg
ret
sub
fstps
adc
in
ficoml
sub
push
aam
leave
mov
sbb
and
test
aaa
dec
xlat
xor
dec
clc
nop
sbb
fisubl
or
rcrb
inc
das
sahf
int
out
xlat
popf
pop
adc
ljmp
inc
lds
cmp
jae
shll
or
mov
inc
jnp
mov
in
ja
out
mov
jne
lcall
addb
scas
test
push
xor
pop
and
sbb
enter
adc
xchg
scas
push
xor
xlat
sarl
sub
fsub
and
adc
sub
push
push
mov
push
shll
cmc
xchg
or
movsl
movsl
imul
pop
leave
push
fiaddl
lods
orl
sub
dec
add
cmp
adc
ret
pushf
int
sub
and
mov
xor
xor
sbb
add
outsl
mov
ss
rorb
sti
aaa
xorb
rolb
xchg
mov
mov
data16
sbb
pop
push
icebp
rorb
xor
and
in
inc
fdivrl
mov
gs
jb
scas
dec
xchg
stc
daa
lds
rorb
outsl
push
add
cmp
insl
mov
mov
sub
stos
inc
or
popa
mov
lret
stos
adc
dec
add
mov
jmp
aas
add
push
inc
aad
ljmp
xchg
and
push
cmp
pop
inc
jp
cs
xchg
int
cmpl
js
or
xchg
xchg
xchg
sub
xor
addl
andps
out
pusha
inc
call
sbb
inc
dec
or
and
test
js
test
ja
pop
pop
sub
scas
xor
mov
adc
adc
jnp
rcll
push
mov
and
mov
leave
mov
cmp
xor
pop
and
add
popa
stc
mov
xchg
test
xchg
or
cmpsl
lcall
adc
daa
push
cmc
cmp
roll
mov
inc
adc
ret
enter
mov
push
scas
pop
popf
inc
sahf
cmc
outsb
add
fwait
dec
stc
int
icebp
bound
lods
nop
cmp
cli
mov
add
push
mov
mov
ret
inc
xor
push
dec
orl
and
cmp
popa
dec
mov
fisubs
xchg
pushf
inc
jl
sbb
ror
push
xchg
mov
jmp
pop
stc
into
out
sbb
inc
enter
or
popa
insl
jo
push
in
ret
pop
adc
mov
jl
pushf
mul
lcall
mov
sbb
xor
xchg
insb
pop
nop
dec
aas
cs
daa
jp
cmc
push
packsswb
bound
dec
cmp
sub
pop
hlt
daa
das
test
jne
push
cli
pop
adc
sub
ss
orl
addb
xchg
or
jp
xor
mov
mov
jl
jge
adc
pop
or
jo
mov
sub
pop
mov
sub
add
jecxz
xor
test
xchg
push
fisubl
repz
pop
push
enter
xchg
pushf
push
test
stos
sub
pop
icebp
mov
push
jne
js
xor
mov
dec
inc
aas
icebp
aam
sub
and
add
mov
je
jmp
cwtl
add
or
test
pusha
mov
fldenv
jp
pop
jp
sbb
push
adc
sahf
movsl
push
push
xor
sbb
add
pusha
test
sub
fmuls
adc
into
mov
ds
cmp
jbe
mov
sbb
adc
adc
sbb
push
xlat
movsl
dec
inc
leave
and
dec
xorb
or
xchg
clc
lds
add
mov
inc
mov
fstl
mov
dec
pop
sub
fbstp
inc
sub
jno
lea
adc
and
ljmp
xor
ficoms
push
jmp
mov
mov
je
xchg
mov
mov
and
pusha
lcall
push
mov
clc
cmp
jb
fstpt
lock
push
mov
test
adc
gs
flds
insb
test
rorl
pop
inc
mov
mov
shlb
cwtl
push
pusha
ljmp
insl
mov
cld
add
fiadds
popf
stc
sbb
idivl
outsl
sbb
lahf
add
push
xchg
gs
adc
in
lret
add
push
mov
jg
movsl
into
xorb
outsl
mov
cld
add
pop
mov
dec
dec
jge
and
sbb
mov
out
lcall
popf
pushf
ss
lds
push
dec
cmpsl
jl
jo
scas
ret
jp
fsubr
push
std
repz
jae
stos
cmp
fadd
xchg
das
ficoms
lahf
or
fcomps
incl
aad
dec
mov
pusha
outsb
cli
inc
andb
ret
sub
push
les
xchg
mov
cmp
das
cmp
out
sbb
adc
jecxz
aad
jae
in
xlat
movsl
cs
fildll
inc
in
popf
movsb
adc
or
inc
in
movsb
mov
xchg
addr16
filds
call
mov
cmp
fstpl
lods
lahf
imul
dec
stc
and
addr16
pop
movsb
push
xchg
sub
cmc
inc
fildll
stos
or
stc
dec
aad
fisubrl
inc
in
mov
test
xchg
mov
shlb
xchg
pop
sub
mov
das
in
int
mov
xor
outsb
sbb
and
stos
and
adc
pop
push
or
ret
mov
mov
test
mov
iret
cs
insb
lods
or
fwait
cli
sbb
inc
imul
add
cltd
lds
movsl
sbb
pop
lods
shrl
jle
popa
adc
pop
lds
jbe
in
mov
or
cmpsb
jo
sub
xchg
dec
mov
adc
pusha
jmp
push
popa
adc
jmp
stos
xchg
rcrb
xchg
inc
stos
sbb
cmpb
ret
dec
mov
pop
lahf
xor
mov
bound
cltd
out
inc
sbb
push
mov
aas
int
je
or
or
push
les
cltd
mov
xchg
and
fsubr
xchg
cmc
cmp
jb
and
sbb
je
and
mov
add
or
jp
adc
repnz
push
cld
push
sub
jg
lock
mov
jecxz
xchg
and
inc
and
movsb
cwtl
add
ljmp
xor
ljmp
out
movsl
pop
enter
mov
adc
xor
jbe
jns
nop
xchg
aaa
aaa
or
dec
icebp
adc
and
or
out
cltd
sahf
dec
add
adc
leave
xchg
add
or
shrb
ds
jnp
imul
and
xchg
mov
sbb
inc
int
or
and
add
test
xchg
and
hlt
sbb
adc
add
push
pop
test
std
ror
cmp
enter
mov
icebp
dec
push
mov
mov
dec
cmp
pop
les
ret
je
mov
je
iret
ficoml
fistpll
sbb
orl
lds
pop
mov
fsubrs
push
and
jmp
or
outsb
out
push
hlt
sub
cmp
jg
pop
xor
out
fsubs
cmpsl
test
jp
mov
push
push
les
out
sbb
mov
jmp
cli
iret
jae
cmp
sarb
pop
sbb
adc
inc
mov
and
stos
mov
jb
lea
or
cli
add
hlt
int3
das
pop
clc
btr
jo
bound
inc
add
push
fs
hlt
cs
or
fidivrs
iret
aas
cmpb
adc
sub
or
pop
ljmp
push
mov
dec
femms
sbb
pop
mov
sub
mov
std
dec
test
orl
mov
or
jae
lret
cmpsl
dec
lret
call
sar
push
daa
fisttps
test
adc
xchg
mov
ja
or
sahf
rolb
ljmp
outsb
loop
cmpsl
pop
sub
cmc
push
sbb
iret
xchg
cmp
rorb
pop
cmc
mov
addl
sub
lret
mov
cltd
hlt
push
cmpsb
loop
mov
aad
mov
adc
push
mul
and
ret
pop
mov
enter
jg
fdivs
stos
cwtl
push
test
lods
xchg
add
lcall
or
lods
insb
inc
lds
mov
mov
std
cmp
mov
dec
add
int3
jbe
add
push
popa
pop
out
sahf
mov
and
mov
dec
mov
push
sti
xor
lcall
or
sbb
mov
lock
dec
pop
mov
jno
fs
pop
lea
cmpsb
mov
mov
cmpsl
ret
mov
jb
xor
adc
inc
movsl
pop
les
fs
xchg
orl
daa
mov
jle
inc
mov
and
out
push
or
out
out
and
loopne
jno
repz
ja
xchg
or
or
inc
pop
mov
test
roll
lods
sahf
ret
clc
push
scas
lods
xor
call
fistpll
xchg
out
pop
jmp
movsb
add
xchg
sahf
push
nop
subl
sub
dec
stos
notl
dec
or
jge
and
sbb
insl
push
inc
data16
fs
ss
push
xor
mov
call
dec
push
pop
mov
scas
inc
sub
arpl
addl
sub
sub
push
jb
loope
cmp
aas
mov
sbb
test
or
jecxz
mov
test
push
inc
scas
aas
js
adc
xchg
or
test
stos
push
ficompl
out
add
mov
push
sbbb
cld
into
sub
mov
jb
inc
push
cwtl
or
mov
jae
jmp
add
int
or
push
cmc
arpl
jo
repnz
ret
lea
aam
sbb
cmp
or
sbb
nop
fs
rolb
mov
push
cmp
mov
repnz
rclb
into
iret
xor
iret
cli
pusha
stc
sbb
xchg
popa
mov
xchg
jno
push
adc
adc
and
jb
and
imul
pause
xchg
push
mov
pop
pop
outsb
cltd
cld
ret
pop
leave
inc
mov
scas
pop
dec
xor
pop
mov
data16
fbld
push
add
dec
adc
int
sbb
stc
inc
cmc
xchg
test
jge
jge
pop
cld
cmp
loop
push
jo
ficoml
cld
mov
aad
push
push
xchg
xchg
fadd
add
mov
in
nop
out
jge
les
push
lcall
adc
stc
jbe
xor
aam
xchg
xchg
sahf
xchg
mov
outsb
cli
dec
out
sub
mov
xchg
out
fbld
sub
pop
mov
push
movsb
jno
lods
push
jp
jge
test
adcb
push
or
imul
adc
clc
mov
add
outsl
xchg
push
sar
jns
jbe
sti
lret
arpl
push
adc
iret
clc
out
les
iret
stos
push
bound
lea
movsl
out
push
sbb
cmp
movhps
cli
sub
xchg
pop
push
subb
into
dec
movsb
mov
scas
hlt
test
lods
cmp
sbbb
pop
jge
cmp
fs
inc
dec
mov
je
push
outsb
das
mov
outsl
mov
jno
inc
test
lret
mov
mov
cltd
pop
mov
out
pop
lds
ljmp
pop
mov
mov
push
dec
jnp
jbe
mov
or
xor
or
sbb
shlb
or
cmp
imulb
and
mov
inc
xorb
sub
jns
lahf
add
outsb
push
fdivr
stc
push
push
jno
clc
mov
lds
mov
push
pop
xor
push
push
hlt
xor
nop
pop
out
mov
mov
dec
xchg
jae
aas
mov
fisubs
cwtl
sbbl
pop
adc
or
dec
ss
jne
roll
push
jae
lock
pop
mov
bound
mov
lods
push
sub
dec
inc
lods
test
jl
into
xorl
test
int3
mov
sub
call
sbb
mov
xchg
jne
lods
sub
in
in
popa
out
mov
xchg
or
loope
pop
cwtl
ljmp
pop
sbb
inc
xchg
pop
bound
fisttpll
sbb
jge
push
inc
fwait
inc
and
adc
push
lock
pop
cmp
sahf
mov
sbbb
mov
xor
popa
pop
sarl
and
push
out
mov
adc
xor
xchg
pop
js
cmp
lcall
sub
dec
mov
shrl
mov
jle
je
ljmp
fsubl
push
or
outsl
jmp
std
jge
pop
push
sbb
ficomps
mov
insl
xlat
xchg
pop
or
dec
xor
sbb
cs
in
cwtl
in
sbb
pushf
adc
sub
call
mov
pop
sub
mov
mov
xchg
lds
imul
mov
mov
jae
test
mov
dec
and
inc
mov
sahf
and
and
xor
ja
lahf
es
inc
aam
ret
stos
int3
adc
pop
addr16
lcall
push
fs
xor
rolb
lcall
mov
insl
xchg
repz
out
xchg
xchg
dec
dec
push
in
dec
mov
mov
or
jo
push
into
divb
lahf
imul
aad
in
xor
test
or
mov
push
inc
out
popf
pushf
sbb
pop
inc
pop
pop
stc
mov
xor
or
pop
and
std
mov
movsl
pop
push
push
pop
mov
ja
sahf
xchg
mov
ljmp
push
and
insl
leave
lcall
lcall
ret
xchg
pop
dec
shl
movl
dec
ljmp
jo
mov
pushf
jle
insb
mov
pop
mov
mov
cmpsl
in
repz
mov
push
dec
notl
cli
mov
les
mov
fwait
daa
pusha
inc
mov
dec
daa
sbb
sub
pusha
xor
lds
ret
adc
or
aaa
sub
jnp
daa
shl
mov
xor
jg
pop
les
subl
sub
jns
sarb
sbb
shl
sbb
add
cmpl
aaa
jns
xchg
or
xorl
and
or
jg
int3
jp
add
mov
mov
mov
lahf
sbb
ds
pop
add
xchg
cmpsb
dec
mov
stos
pop
fwait
xchg
scas
xor
dec
test
out
inc
xlat
inc
mov
mov
sbb
nop
xor
xchg
sub
or
out
pop
loopne
shrl
push
cmp
xor
test
sbb
rorb
out
push
jg
push
mov
inc
mov
movsb
mov
movsb
jecxz
cltd
inc
sbb
jge
jo
leave
inc
cmc
hlt
ja
jg
add
jo
and
add
mov
int3
loope
or
mov
adc
arpl
ret
test
outsb
push
shll
inc
inc
imul
cmpsl
xchg
stos
lcall
call
xchg
repz
cmp
xlat
pop
mov
cwtl
negb
xchg
out
push
scas
stos
bound
sub
cmc
imul
clc
inc
shll
push
lock
das
scas
and
pop
std
fdivs
stc
insb
in
aas
mov
add
cmp
es
xchg
cli
pop
loopne
pop
dec
daa
fld
inc
jp
fwait
jle
cmp
js
jecxz
fldl
icebp
jp
ret
cwtl
jno
sub
scas
and
js
mov
mov
cltd
cmovle
bound
mov
or
in
jns
xchg
cmp
or
push
les
push
inc
fdivs
push
mov
xchg
cmc
lcall
les
dec
inc
mov
fwait
inc
inc
cmp
mov
xchg
lea
sahf
cld
rorl
adc
push
xor
out
scas
mov
stos
into
fs
fists
scas
dec
pop
lods
stc
push
mov
jns
xchg
packssdw
and
cltd
cmp
jo
xchg
movsl
mov
jbe
push
lock
mov
adc
int3
lea
or
xchg
jmp
mov
push
repnz
scas
aaa
inc
vcomiss
pusha
das
xchg
xorb
testb
push
and
dec
ret
jmp
xor
dec
arpl
inc
and
inc
jbe
sbb
sti
jns
ficomps
lock
pop
lods
adc
mov
dec
cmp
cmp
push
mov
and
sbb
mov
or
hlt
xor
cmp
lahf
mov
adc
loop
fs
jbe
scas
shrl
mov
shll
pop
hlt
xor
and
outsb
or
stos
cmp
xor
insb
dec
mov
push
out
pusha
sti
inc
out
or
push
add
mov
test
pop
out
lcall
mov
inc
add
add
sbb
dec
pop
adc
pusha
xchg
mov
call
orb
cwtl
iret
inc
arpl
sahf
and
adc
sub
out
mov
dec
xor
sbb
aas
sbbb
mov
cli
popa
add
bound
xchg
fst
std
pop
int3
scas
out
and
xchg
imul
test
daa
mov
adc
cmpsl
mov
sub
and
xchg
push
mov
shll
sub
je
scas
mov
setnp
pop
loop
cld
sub
or
mov
add
dec
mov
cmp
das
push
pop
sbb
bound
sbb
pop
cmp
jmp
push
xchg
fcmovnb
out
cli
into
jp
push
jl
pusha
mov
lods
pop
subl
dec
outsl
jmp
cmpsb
sub
cmp
jmp
xor
dec
xor
cmp
jl
hlt
fcompl
adc
mov
jne
dec
sbb
adc
ds
out
data16
aaa
xchg
or
fildl
dec
cmc
adc
sbb
shll
into
jnp
daa
inc
xchg
adc
fimull
scas
sbb
mov
into
pop
xchg
sar
jae
addb
or
in
inc
sub
jo
ja
mov
jmp
lret
jp
push
loop
lea
pop
outsl
iret
mov
mov
sub
leave
ss
mov
cs
stos
jmp
sbb
push
lock
xor
pop
fwait
repnz
into
sub
jge
mov
xor
std
push
mov
add
sbb
mov
or
or
cmpsl
fisubrs
add
lods
dec
lods
add
adc
pop
iret
rcll
jle
loopne
xchg
shrb
push
repz
jg
pushf
data16
jmp
daa
movsl
aas
orl
adc
pop
movsl
mov
cmp
cs
adc
mov
xor
icebp
mov
popf
add
movsb
add
sbb
sub
inc
cmc
mov
push
mov
lcall
adc
sar
jg
cmp
sub
dec
and
xlat
pop
mov
adc
mov
or
es
xor
stos
cld
ja
call
mov
fdiv
nop
ds
pop
stos
and
mov
scas
stos
inc
mov
insb
sbb
inc
imull
hlt
insl
pusha
addr16
mov
int
flds
ret
xchg
jb
jb
sbb
daa
inc
hlt
cmpsl
hlt
or
cmp
sarb
and
out
or
call
dec
sbb
adc
mov
mov
push
inc
xor
sti
sub
fildll
sub
xchg
leave
ret
in
repz
mov
inc
mov
pop
or
nop
jns
movsb
pop
xorl
pop
cmpsl
cld
push
adc
icebp
and
ret
jmp
ror
lock
mov
scas
loope
hlt
cmpsl
mov
imul
rcrb
dec
das
jmp
out
daa
nop
mov
push
je
cmpsl
call
stc
jle
sarl
and
cmc
and
daa
jl
sahf
fcompl
mov
cli
fnstenv
mov
xchg
or
inc
fsubs
pop
cmp
jns
add
adc
out
rolb
and
je
subl
imul
mov
push
mov
lahf
sbb
fistpl
lret
sub
aam
scas
jl
loope
mov
push
int
cmp
imul
pop
shl
ss
sbb
rorl
inc
pop
mov
mov
mov
jp
in
mov
rcl
int
mov
cmpsb
pop
test
or
cmpb
inc
cmp
roll
mov
jae
push
push
or
jo
loop
ss
sbb
es
adc
cmp
in
aad
inc
data16
pop
inc
out
outsl
dec
clc
cld
adc
jo
xchg
cmp
sarb
and
push
in
mov
out
dec
andb
loope
pop
andl
xorb
mov
mov
mov
add
fsub
xchg
sub
dec
movsb
lods
jge
and
jno
in
or
ss
loope
mov
sarb
lods
dec
pop
xor
push
jg
ftst
mov
das
gs
or
mov
or
ja
popl
ja
ret
stc
adc
mov
push
xchg
das
cmpsl
iret
sub
in
pop
pusha
mov
adc
push
decb
xchg
lods
mov
xchg
inc
stos
cmp
jl
jl
and
jp
cmp
jb
mov
sbb
mov
mov
aad
cs
jno
das
mov
pusha
adc
ret
std
cli
stos
into
xlat
inc
outsb
xorl
roll
and
fdivl
push
mov
clc
hlt
mov
stos
imull
icebp
and
rorb
hlt
mov
dec
add
sbb
mov
icebp
addl
jo
mov
mov
call
and
movsb
xchg
pop
sub
jns
cltd
lret
xchg
std
in
cmc
dec
mov
adc
stos
dec
imul
and
push
xor
pop
out
jle
lret
mov
js
cmp
push
test
mov
add
addr16
add
and
sub
fcomp
out
jl
inc
les
lret
sbb
jle
gs
sub
pop
or
inc
pop
test
push
jl
roll
inc
mov
test
das
test
scas
cmc
mov
faddp
inc
jmp
xor
push
jmp
jae
mov
cmp
xchg
mov
jae
lods
hlt
cmp
int3
push
enter
push
rcl
jp
or
negb
pop
cmp
push
xchg
dec
loope
fcomps
test
pop
mov
dec
xchg
movsl
lds
adc
xchg
pop
pop
lods
cmp
and
sti
jmp
in
ret
dec
dec
lcall
subl
or
ss
push
pop
mov
fs
xchg
and
jns
xchg
xlat
mov
adc
stos
fld
sbb
faddp
mov
push
dec
movsl
cwtl
sti
add
pop
rcll
jge
or
push
cmp
add
dec
mov
xor
or
cwtl
mov
xchg
adc
nop
or
sub
loope
orl
xor
cmp
hlt
ljmp
xor
mov
pop
push
mov
pop
lea
xchg
test
lds
fwait
sub
arpl
pop
mov
push
fbld
aam
sbb
repz
lcall
test
fisubrl
test
mov
andb
test
sti
lret
pushf
cmp
cmp
lods
xor
jo
and
mov
insb
cmp
jne
call
scas
repz
inc
stos
pushf
mov
imul
mov
stc
sbb
inc
jge,pn
push
leave
lret
push
mov
jbe
inc
cmc
rorb
or
add
xchg
mov
push
mov
call
push
inc
iret
mov
enter
sbb
sub
imul
sti
xchg
loop
jmp
add
jmp
or
mov
cmp
cmp
mov
jbe
and
test
shlb
sub
jmp
je
mov
loop
fmuls
cmpsb
call
mov
dec
pop
stc
testl
cmp
orl
adc
push
psllw
mov
or
test
cmc
mov
push
or
mov
cmp
lret
adc
sbb
adc
cmp
fidivrs
js
cmp
stos
lea
mov
xchg
test
fsubs
xchg
shll
cmp
sarb
mov
pusha
aad
add
arpl
xor
add
sub
mov
add
insl
into
shl
inc
insb
mov
test
adc
adc
divb
inc
jns
movsb
add
in
fistpll
movsbl
sbb
jge
mov
into
icebp
cltd
call
int
test
and
dec
xchg
sub
pop
add
mov
test
or
jp
or
mov
insb
inc
inc
add
jo
andl
xlat
sbb
scas
push
mov
and
iret
mov
outsl
int3
loopne
orb
outsl
or
mov
xlat
mov
mov
scas
call
fcomp
or
or
sbb
sbb
in
fidivrs
and
sub
test
es
loope
shrl
addr16
fcmovne
cs
mov
pop
jno
jecxz
pop
dec
jo
xchg
loopne
repz
cwtl
xchg
jo
movsl
loopne
movsl
clc
mov
xchg
mov
fcmovnbe
xor
lahf
jecxz
mov
movsl
adc
xor
inc
stos
repnz
cmpsb
push
not
imul
dec
int3
mov
and
cmpsl
rcrl
mov
mov
fwait
test
sbb
push
ret
test
mov
gs
jmp
test
adc
sbb
out
xchg
ffree
fstpt
jge
pop
mov
push
jbe
pop
add
push
popf
ljmp
sahf
movsb
stos
jge
inc
jno
ret
shl
pop
test
fwait
and
mov
push
push
hlt
sbb
outsb
out
iret
xchg
enter
xchg
lret
test
jecxz
xorb
lds
push
inc
mov
pop
les
inc
lcall
push
mov
ficoml
xchg
add
push
push
testl
mov
cmp
stc
mov
inc
mov
or
pop
icebp
das
int3
jl
outsl
push
mov
inc
cmpsl
xor
cmp
xor
aaa
call
mov
negb
insb
ja
mov
stc
xor
cmp
adc
mov
sbb
cmpsb
subb
es
hlt
pop
pop
ret
mov
packuswb
jne
pop
into
mov
scas
mov
jae
sub
aam
fdivrs
xchg
out
mov
push
dec
imul
pushf
sbb
jne
jnp
mov
mov
fsubrs
out
jb
insl
out
pusha
addr16
mov
inc
mov
jns
bound
jg
pop
das
test
cld
mov
mov
sbb
cmp
inc
loop
lret
and
xchg
rcrb
gs
or
inc
stos
sarb
mov
shll
xlat
fisttpl
mov
shrb
xlat
test
push
outsl
adc
divb
adc
in
hlt
xor
add
push
adc
xor
sub
int
mov
xor
leave
sarb
inc
push
xchg
xchg
stos
loope
pop
xchg
out
rcrb
clc
loope
pop
in
fldl
test
adc
cmp
cmp
inc
pop
sub
sahf
popa
push
movsl
inc
inc
push
in
sub
insb
and
jge
in
xor
into
cmpl
mov
xchg
ficompl
push
pop
rcll
push
leave
loope
leave
test
and
dec
mov
lea
or
mov
mov
ss
dec
and
rcll
sti
stc
pop
arpl
push
dec
inc
fnstcw
decb
pop
int3
and
rorl
in
idivb
jno
repnz
out
fdivl
dec
repnz
in
loopne
sub
sbb
mov
sbb
lods
vmovsldup
sahf
inc
inc
jge
daa
mov
nop
scas
ret
fmull
jbe
cmp
push
ljmp
cmc
dec
sbb
xchg
dec
xchg
or
cwtl
adc
xchg
push
leave
ret
inc
or
arpl
xor
stos
push
mov
xor
loope
pop
cmc
dec
fidivrs
out
mov
fwait
xor
rcll
inc
andb
lahf
mov
add
adc
jnp
fldcw
pop
dec
sub
adc
adc
add
pusha
mov
out
jg
dec
fsts
pop
loopne
aaa
push
sbb
xlat
push
jae
mov
jo
push
iret
subl
cmp
cmpsb
pop
aad
mov
test
mov
outsl
popf
shrb
icebp
ret
addb
sbb
jg
mov
rolb
repz
subl
jge
jno
add
divl
push
pop
ja,pt
imull
in
xor
in
out
popa
sbb
jns
jge
adc
sar
mov
xchg
or
hlt
inc
mov
out
xchg
cltd
out
loope
test
das
test
call
push
sbb
nop
adc
je
xlat
push
scas
mov
ljmp
shlb
push
mov
arpl
repnz
jo
loope
sub
jle
xchg
stos
out
sbb
pop
sbb
add
mov
nop
jns
cli
es
push
push
int3
jmp
cmp
addl
or
mov
in
cmp
call
fdivrs
cmp
jmp
dec
jp
les
cmp
push
insb
in
and
pop
js
daa
repnz
cmpsl
std
rclb
inc
and
jge
orl
mov
jnp
sbb
aas
loop
repnz
rclb
cld
enter
loope
mov
cmp
outsb
or
sub
sbb
fisubrs
nop
adc
outsb
push
xor
inc
lret
push
insb
fsubrs
push
mov
pop
cwtl
pop
inc
xor
xor
mov
insl
pop
mov
sub
cmp
addr16
divb
test
movsl
jl
xchg
dec
lods
in
in
jo
cmp
test
adc
cmp
ss
mov
sahf
xchg
fisubrl
add
insl
lds
add
adc
mov
movsb
cmp
mov
mov
js
popa
push
shr
fsub
test
mov
in
rol
test
addr16
push
pop
pop
and
aam
mov
test
dec
ror
outsl
movsl
in
enter
fwait
nop
repnz
or
shll
xor
iret
addl
cld
mov
or
fstpl
pop
les
les
in
fucom
inc
shlb
outsl
shlb
shll
push
adc
addr16
popf
aaa
insb
inc
in
mov
adcb
sbb
test
imul
or
in
adc
aaa
dec
xchg
mov
hlt
mov
lret
dec
cmp
stos
nop
add
inc
mov
inc
rolb
xorl
xor
sub
sub
das
shl
push
inc
fisttpl
push
je
testb
subl
mov
in
mov
lret
sbb
jp
rcrb
rclb
sub
imulb
inc
imul
aas
sbb
push
xchg
adc
and
sub
mov
inc
sub
sbb
int3
cltd
daa
sub
lock
mov
sbb
into
fisubl
xchg
and
mov
xor
xor
cmpsl
inc
hlt
adcb
shll
lods
adc
pop
jo
arpl
inc
jmp
cmp
sub
popa
mov
int
orl
pop
add
xchg
test
cmp
faddl
popf
xor
and
in
ret
idivl
and
mov
mov
fldt
aaa
inc
push
pop
inc
and
hlt
stc
adc
jg
mov
jmp
loope
jg
not
fistps
test
cmp
lahf
pusha
int
or
and
and
mov
lock
adc
jg
dec
divl
imul
inc
mov
jnp
adc
scas
in
jge
fildl
adc
and
mov
and
xchg
sbb
mov
mov
arpl
dec
xchg
xchg
inc
adc
testb
push
imul
pop
dec
jmp
mov
xchg
frndint
jno
dec
xchg
mov
packuswb
iret
cmp
sub
fisubs
cmpsb
xor
mov
mov
push
mov
mov
pop
stos
and
mov
xor
stc
out
and
pop
call
jp
daa
lahf
into
xchg
imul
dec
std
and
fstsw
scas
das
sub
cmp
test
ret
andb
xchg
stos
sahf
sahf
ss
dec
inc
adc
dec
or
mov
lahf
test
cmc
cmp
js
movsb
inc
sbb
movsl
out
testl
xchg
dec
lea
and
cmp
mov
add
xor
stos
mov
xor
stos
loope
push
call
xor
xor
fwait
mov
ja
pop
xchg
mov
rcrb
mov
jo
pop
mov
loopne
jp
fwait
mov
sub
lods
scas
cmp
xor
dec
aas
cld
or
arpl
fcomp
xchg
stos
mov
jg
ja,pn
and
mov
mov
aaa
dec
lret
sub
xchg
jae
inc
jnp
push
lds
call
xchg
adc
jle
xchg
stos
or
pop
cmp
dec
out
jecxz
and
xor
jne
push
or
add
loopne,pn
push
push
enter
outsl
jae
clc
ret
mov
jns
sub
ret
into
mov
dec
nopl
insb
and
push
icebp
dec
mov
arpl
xchg
ret
ja
ficomps
les
jbe
cmp
xor
pop
inc
cmp
xchg
loope
loop
add
shll
nop
std
mov
xchg
mov
inc
sub
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
mov
dec
mov
mov
hlt
int
pusha
xor
or
mov
adc
in
inc
inc
and
in
push
push
stos
sub
out
popf
and
clc
vmulps
jmp
fistps
cs
push
inc
jg
adc
jae
shll
xlat
fcoms
push
adc
pop
pop
out
in
in
je
sbb
int
sub
push
jge
dec
rclb
int
and
sahf
adc
pop
adc
and
push
stc
pop
push
mov
mov
fnstenv
mov
call
lods
pop
sub
mov
cmp
inc
push
xor
mov
aaa
fsubl
jae
fdivrl
test
sbb
fwait
pop
push
shrb
or
rcl
mov
aad
jecxz
rclb
jae
das
leave
mov
cmpb
adcb
scas
pop
test
es
xchg
iret
push
sub
cwtl
and
xchg
cmp
and
xorb
js
loope
dec
out
ret
add
xor
fdivrs
imul
jnp
adc
jl
or
sub
jmp
dec
sbb
int
jae
mov
or
cld
jne
jns
dec
adc
movsl
mov
lock
idiv
roll
les
cs
cmp
out
or
mov
push
sbb
push
int3
mov
mov
cwtl
int3
jno
pop
mov
dec
scas
cmpsb
push
sbb
mov
je
das
lods
adc
or
cmpsb
push
mov
rolb
imul
cs
jmp
dec
in
aaa
shrl
pop
mov
cmp
cs
mov
bnd
push
fwait
std
arpl
cltd
insb
movsl
sbb
xlat
mov
test
add
ds
adc
mov
sti
xchg
arpl
push
xchg
inc
sbb
dec
sbb
xor
mov
fidivs
mov
xchg
dec
push
movsl
movsb
xchg
dec
mov
lret
dec
mov
inc
lds
leavew
jbe
repnz
fwait
int3
add
test
xchg
jmp
sub
jmp
push
cli
mov
fbld
or
jg
shlb
add
inc
dec
inc
xchg
jmp
ss
mov
push
and
cmp
push
xor
enter
mov
gs
jmp
lahf
adc
roll
mov
add
sarl
mov
mov
or
mov
or
mov
xchg
loop
inc
outsl
ds
fisubl
jnp
push
inc
or
pop
mov
pop
jne
jbe
push
mov
cmp
pop
fisttpll
pop
adc
add
xor
adc
idiv
mov
std
xchg
mov
icebp
dec
inc
xchg
lods
adc
mov
outsl
aas
clc
gs
jno
ljmp
scas
jno
pusha
jg
add
pop
outsb
fcom
inc
subb
pop
mov
ret
push
int3
call
xor
mov
mov
pop
and
xor
aaa
int
out
mov
sub
cmpsb
aad
jb
clc
mov
cld
sahf
ja
cmp
es
bound
or
repz
mov
mov
mov
fsubl
insb
mov
add
xor
sub
adc
mov
jg
bound
xor
int3
shl
js
or
pushf
cltd
mov
cmp
inc
push
gs
adc
mov
data16
daa
push
and
jnp
cmpsl
jl
mov
out
inc
xchg
out
lcall
shr
xor
in
sub
sbb
iret
ret
cmpsb
or
enter
push
mov
pop
jnp,pt
lock
push
outsl
mov
mov
xor
sbb
push
test
loop
or
push
mov
jno
sub
inc
xchg
outsb
push
cwtl
leave
cmpsb
nop
add
in
lcall
jg
jg
mov
xor
jae,pt
fwait
xchg
xchg
clc
rorl
jmp
push
test
repnz
fbstp
dec
rclb
and
push
xchg
js
ret
test
in
inc
jge
loop
shlb
inc
scas
mov
xor
loope
insb
ds
jg
mov
pop
push
outsl
jmp
push
sbb
fimull
pop
xlat
sbb
sti
movsb
popa
mov
add
int
pop
out
push
sahf
dec
add
adc
iret
mov
out
jae
sub
add
mov
cmc
xchg
and
push
inc
lods
and
into
aam
popf
jae
jb
inc
pop
jl
xchg
xchg
or
inc
daa
scas
pop
lods
cld
or
nop
cmpsb
adc
xchg
mov
cmpb
jge
pop
ljmp
daa
flds
icebp
test
xchg
outsl
test
adc
aaa
dec
sub
stos
dec
fstl
adc
push
and
pop
adc
aad
push
sub
aas
sarb
and
mov
fisttpl
sbb
hlt
xor
xor
ss
mov
cmpsl
lret
mov
pushf
cmp
or
call
or
xorb
xchg
aad
sti
rcrl
in
shlb
repz
jae
mov
lcall
pop
andl
pusha
push
cmp
fisttps
cmp
loopne
and
add
rolb
and
outsl
hlt
cmpsl
in
lret
mov
and
lds
cli
xor
jo
imul
outsb
sub
sub
test
sahf
mov
xchg
push
jbe
les
lret
jno
add
mov
sti
sub
mov
and
daa
ss
pop
fstp
mov
or
testb
or
pop
cmpsb
jnp
xchg
mov
loope
lret
sbb
cmp
sbb
mov
stc
cmove
stos
xchg
sbb
pop
das
or
sbb
dec
xor
sbb
daa
ret
pop
sub
out
push
mov
loop
ljmp
dec
cwtl
int3
dec
inc
pop
push
or
inc
cmp
insl
mov
mov
xchg
mov
lock
mov
or
insb
inc
inc
das
adc
js
ljmp
adc
out
lock
inc
cmpxchg
nop
jbe
inc
dec
das
pop
or
mov
sbb
mov
enter
repz
mov
and
decb
adc
jp
mov
push
mov
stos
mov
fnstenv
aaa
loopne
int3
cmp
sub
push
jnp
xchg
hlt
push
or
cmp
pop
iret
orb
jle
push
out
or
sahf
push
lea
adc
in
movsl
pop
lods
pinsrw
and
outsl
xchg
mov
ss
xchg
sub
mov
push
push
dec
mov
dec
lea
pop
hlt
mov
push
cmp
ja
mov
je
xchg
jbe
xchg
push
repz
fcos
dec
mov
cmp
push
mov
pop
hlt
lds
pop
out
ror
cltd
fs
pop
sub
loopne
sbb
cs
mov
adc
adcl
lret
or
pusha
or
and
xchg
loopne
pop
cmp
cmp
push
push
test
xor
aad
dec
les
add
mov
jbe
nop
in
inc
cs
xor
repnz
cmc
jbe
add
incb
fdivrp
pop
mov
cli
dec
shl
rcr
lods
cmpsb
es
cs
cvtps2pd
loop
pop
mov
int
sub
jns
das
call
inc
pop
push
jmp
cmp
add
or
lea
mov
mov
cli
ret
pop
add
add
arpl
mov
jnp
loopne
xchg
dec
std
push
mov
xchg
jmp
loop
sub
pop
xor
mov
les
ss
pop
jo
sub
sub
adc
js
pop
mov
das
pop
adc
mov
mov
lods
scas
leave
mov
bnd
add
ret
ss
mov
sbb
push
cmp
mov
mov
ret
mov
inc
xchg
push
bound
add
cmp
mov
aas
push
mov
push
hlt
fs
flds
les
gs
add
dec
in
adc
out
push
sbb
push
andb
lcall
ljmp
stos
mov
inc
nop
cltd
std
push
rclb
jns
movsb
adc
loope
aaa
ret
jae
sub
out
lods
add
dec
mov
fiaddl
mov
scas
xlat
push
movsb
jb
xor
pop
push
mov
stos
lods
mov
dec
mov
hlt
or
int
adc
ljmp
and
push
gs
jp
jle
pushf
push
add
fstpl
shll
lret
ss
mov
or
xchg
hlt
jg
loope
fs
lahf
aas
jbe
inc
jo
and
pop
gs
out
jne
adc
test
or
aad
sbb
mov
adc
cmc
xor
in
sub
add
filds
pop
pop
inc
jg
ds
xlat
rcll
jmp
xor
es
leave
adc
in
or
lds
stos
jg
in
mov
ret
out
ret
add
imul
and
stc
lds
movsb
lahf
mov
adc
or
imul
push
push
outsb
or
int
inc
push
dec
jl
push
mov
cmp
mov
jbe
mov
inc
in
sbb
jbe
cmp
and
sbb
ss
sbb
jg
add
add
cld
dec
negb
sub
pop
test
mov
jp
fsubs
cmp
xchg
insb
cld
clc
cmp
and
mov
cld
and
jb
dec
add
into
pop
iret
dec
or
dec
aaa
dec
in
sbb
sahf
jmp
push
out
sbb
cmp
andb
jle
lea
cli
das
in
or
mov
push
je
jns
xor
cmpl
sahf
addr16
sbb
push
movl
cmp
test
pop
stc
xchg
test
testl
dec
inc
icebp
nop
rorb
push
fwait
daa
inc
rorb
mov
sbb
outsb
xor
mov
in
jns
dec
enter
jmp
sbb
pop
sub
mov
mov
sub
push
adc
sub
jmp
aas
pop
ret
pop
in
movsl
mov
loop
nop
dec
rcrl
testb
sub
repnz
ret
push
hlt
mov
roll
and
and
aaa
popa
xor
sti
mov
rorl
push
or
pop
pop
addb
outsl
xchg
cmpsl
test
dec
sub
or
dec
data16
mov
stos
dec
pop
imul
sahf
imul
xchg
call
push
adc
xchg
jne
mov
rolb
adc
in
dec
inc
inc
int3
and
sub
add
scas
lret
push
mov
or
ret
jo
add
cmp
and
cld
lahf
and
idivb
cmp
insl
xor
push
shl
pop
xchg
shrl
jb
jne
mov
hlt
icebp
push
pushf
repz
fstpl
aas
jno
push
or
cmp
iret
add
aas
dec
in
aaa
mov
rorl
mov
fsubr
out
ja
aad
sub
jns
dec
outsb
adc
or
fsub
bound
movsb
xorb
popf
insl
in
push
lock
mov
pop
and
push
or
lahf
testb
push
jg
mov
in
push
aad
push
rclb
int3
lahf
mov
lret
jo
outsb
pop
repz
out
rcrl
ljmp
jmp
push
dec
cmpb
ds
std
out
fbld
fs
bound
inc
rcl
xchg
imul
aas
test
movsl
aam
inc
sbb
xchg
loopne
repz
or
fucomp
pop
les
je
sar
int
or
dec
aad
aad
adc
push
xchg
and
mov
dec
push
push
cmpsl
bound
xchg
cmp
mov
push
in
int3
inc
fsubr
cwtl
cmp
data16
jle
popa
outsb
jae
popf
mov
inc
mov
mov
dec
scas
jmp
mov
fst
loopne
pop
push
outsl
jl
xchg
cs
xorl
xlat
inc
pop
clc
sub
and
mov
loopne
dec
jmp
rorb
and
cmp
dec
cmp
sub
push
adc
push
inc
jo
add
jae
xchg
in
in
orl
int3
or
imul
jns
jne
jns
jmp
cmp
in
sti
push
sbb
int
push
pop
mov
add
or
xor
mov
int3
mov
cmp
xchg
imul
imul
or
jae
shlb
or
inc
xor
adc
push
fmulp
hlt
jno
pop
in
fdiv
inc
push
mov
out
push
and
xchg
adc
and
loop
repnz
xor
jae
lods
mov
pop
mov
push
and
push
mov
mov
pop
in
frstor
sbb
ss
mov
cmpsl
popf
test
lret
leave
ficoml
dec
xor
aaa
cmc
push
les
pushf
push
aad
sti
notb
inc
and
mov
inc
leave
jo
out
xchg
cmp
jb
jmp
imulb
jge
cld
or
rclb
sbb
test
sbb
fildl
mov
or
roll
push
mov
jp
movsl
inc
dec
nop
sub
out
imul
lahf
mov
shlb
fistps
loope
pop
aam
sbb
shlb
mov
xor
mov
dec
cmc
dec
sar
je
in
das
mov
pop
add
mov
ds
and
outsb
dec
loop
testb
sti
stos
push
mov
pop
mov
sahf
daa
xor
mov
cwtl
lds
mov
xchg
out
out
mov
out
sti
imul
pop
cmp
in
int
out
pop
hlt
mov
shrb
loope
mov
push
adc
insb
sahf
loop
call
push
push
cwtl
dec
int
push
aam
pop
hlt
jmp
and
inc
xchg
insb
xchg
frstor
add
orl
jl
ficoms
xchg
jae
jne
loope
dec
sub
imul
push
adc
out
jp
dec
add
insb
subl
jns
lea
fidivs
mov
xor
lcall
sbb
and
loope
dec
inc
fldl
push
sub
stos
xor
adc
in
dec
sub
fidivrs
cmpsb
fsubl
add
jecxz
mov
pusha
loopne
hlt
or
icebp
das
pop
or
cli
adc
xchg
mov
jmp
mov
fstps
xlat
in
loop
inc
mov
stos
repz
inc
push
cmp
repz
lea
push
je
xlat
pop
jno
mov
adc
dec
jecxz
inc
mov
or
add
pop
sub
add
mov
int3
pushl
out
push
cmp
fidivs
lret
xorb
loop
int3
imul
xor
iret
push
push
pop
pop
insb
gs
shlb
add
stos
rclb
out
clc
in
popa
xchg
in
pop
xchg
ds
pop
and
xor
xchg
add
mov
andb
xchg
stos
adc
push
jle
mov
inc
addl
lret
aam
movl
cli
mov
data16
aaa
lock
lret
out
add
and
xor
int
inc
popa
mov
lcall
ja
push
adc
stos
fstps
xor
lea
or
popf
pop
in
roll
mov
push
xchg
inc
dec
enter
dec
inc
inc
push
les
cmp
nop
aaa
test
or
or
sarl
mov
aam
ljmp
aas
test
pop
outsb
out
pop
fs
jmp
xchg
testb
push
lahf
rclb
stos
mov
aas
ljmp
imul
sti
iret
ret
inc
jo
idiv
roll
jl
pop
xchg
daa
xor
lahf
push
mov
pop
push
aaa
pop
push
mov
and
or
repnz
imul
jne
test
cmp
pop
sarl
data16
bnd
cmp
stos
adc
sti
popf
ds
dec
repnz
push
sbb
sub
movsl
mov
int3
fdivrs
sub
bswap
in
xor
jmp
fistps
repnz
movsl
ret
jae
mov
push
test
in
jns
and
pop
inc
ja
jecxz
addl
lret
mov
jns
inc
dec
ret
xorl
and
lods
dec
sbb
cwtl
or
xor
in
dec
sti
dec
cmp
loop
pop
shll
pop
inc
divl
xchg
and
ljmp
std
sbb
dec
mov
ja
stos
adc
lahf
dec
sarl
daa
pop
sar
daa
cs
ja
mov
loope
loop
mov
mov
in
aad
js
dec
and
rcll
mov
lock
jl
xor
shrb
xor
xchg
push
push
xchg
ja
mov
shr
cld
push
loope
ja
sub
push
nop
push
inc
cmpsl
mov
mov
jge
clc
movsb
and
clc
test
lods
xchg
pop
mov
mov
or
dec
push
xchg
pop
mov
mov
and
pop
mov
test
jge
iret
fdivl
pop
add
sub
loope
aas
loopne
fnstcw
lahf
movsb
jo
xorl
daa
mov
ljmp
data16
cmp
adc
cld
dec
mov
fsubrs
jne,pt
ret
out
pusha
xor
xchg
pop
mov
pop
adc
mov
jg
fdiv
xor
das
pop
addr16
xchg
mov
adc
mov
jmp
xor
loope
and
ret
outsb
stos
mov
lret
leave
aas
popa
add
jo
fmul
das
rclb
fbld
cmp
sbbb
mov
jb
adc
movsl
push
fs
fmull
icebp
mov
out
pop
push
dec
mov
fwait
bound
xchg
lret
dec
pop
cwtl
loopne
mov
hlt
cli
fiaddl
dec
mov
push
and
adc
dec
cmp
shrb
adc
xlat
std
and
mov
push
in
sbb
pop
or
lret
jg
pop
loopne
mov
sub
das
or
fdivl
jmp
lods
inc
popfw
dec
pop
or
pop
and
inc
mov
adc
mov
pop
xchg
test
cs
inc
stos
sub
imul
sbb
lret
and
inc
mov
cmpb
xor
jle
inc
fldenv
mov
add
mov
mov
dec
adc
sub
or
mov
call
stc
nopl
or
xor
nop
leave
insb
mov
jle
lcall
lret
loopne
jae
sahf
adc
jno
inc
dec
fnstcw
imul
test
repz
push
jecxz
mov
shr
lret
divl
cs
xchg
addr16
aad
pop
jmp
icebp
adc
pushl
pop
adc
xchg
imul
out
arpl
jge
pop
push
inc
mov
inc
clc
aad
mov
sbb
sti
cmp
insl
cmc
mov
in
mov
lods
and
int3
add
push
adc
pushf
ss
pop
daa
repnz
push
cwtl
cltd
cmp
insb
mov
adc
jne
in
push
mov
jge
sarb
mov
cmp
andb
pshufw
xor
push
test
mov
ds
mov
xchg
scas
aas
int
dec
push
sbb
cs
mov
sar
mov
inc
sub
je
inc
cli
and
or
lret
sub
push
shrb
dec
inc
in
shll
pop
mov
xchg
fldenv
stos
xor
cltd
sbb
int
jle
dec
jle
in
or
sahf
cmp
in
or
hlt
lahf
push
pop
xchg
mov
lret
cltd
xchg
repnz
lahf
dec
push
fldt
loop
dec
cmp
je
pusha
fcompl
mov
pop
repnz
mov
ja
cmp
sub
sbb
pop
fdivrs
cmpb
or
lea
pop
sub
data16
xchg
cmp
pop
xchg
movsb
sub
dec
icebp
test
adc
js
xchg
ss
bound
sarb
xchg
add
imul
xchg
test
pushf
cvtps2pi
push
xor
repnz
pop
repnz
insb
addb
shl
cmp
lret
cmp
movsb
pop
gs
mov
xor
stos
dec
icebp
das
pop
jo
xchg
sarb
aas
pop
pop
push
mov
pop
xchg
sbb
in
int
icebp
aad
push
push
and
out
leave
jns
and
jo
int3
or
add
push
cmpsl
add
xorl
mov
dec
lret
or
mov
lock
push
les
lret
push
jp
repz
into
jg
imull
jae
inc
fbstp
mov
pop
scas
push
fildl
shrb
sbb
call
nop
sbb
or
jl
lds
dec
mov
xchg
mov
pushf
inc
xchg
sub
mov
jg
xchg
adc
std
subl
subl
mov
pop
imul
mov
dec
mov
pop
gs
xorl
clc
sti
cmp
mov
test
mov
dec
inc
aam
adc
dec
test
lock
inc
mov
addr16
xchg
pop
mov
je
out
xchg
insl
scas
cmp
in
cltd
or
push
push
dec
sahf
repnz
out
mov
add
cmp
out
gs
dec
mov
stos
imul
adc
ja
jne
cmpsl
mov
and
push
inc
imul
iret
jb
lret
push
xchg
jbe
add
ds
int3
in
arpl
add
cmc
and
je
les
fwait
in
adc
xor
mov
fwait
cmp
mov
adc
cmp
mov
cmpsb
fistl
fsubs
mov
mov
stos
add
jb
dec
pop
fnstcw
cs
dec
insl
jbe
pop
fnstenv
dec
ret
xlat
mov
mov
orb
nop
cmp
inc
xlat
sub
stc
or
outsl
je
cltd
gs
sbb
jo
frstor
jl
jmp
xor
jb
add
insl
dec
cmpsl
ljmp
sub
xlat
out
nop
xchg
das
xchg
pop
out
sub
dec
or
jle
test
cld
insb
dec
sahf
leave
aaa
movsb
aaa
fistps
mov
xchg
in
lahf
sbb
data16
sub
mov
imul
rcll
adc
sbb
outsb
adc
cmpsl
sub
dec
cli
outsl
lods
dec
shrb
mov
sbb
fnstsw
inc
push
mov
test
lret
dec
das
jno
inc
or
test
jg
jg
test
jmp
pop
and
fstps
cltd
leave
jae
ljmp
pop
xor
inc
pop
int3
bound
inc
cli
or
sti
fldcw
sub
mov
add
mov
or
push
fidivrs
jne
push
xchg
push
cmp
jns
inc
test
sub
shl
lods
jb
cmp
push
mov
cmp
adc
ret
pop
sub
dec
add
loop
int3
mov
pop
stos
js
pushf
leave
dec
push
push
cwtl
movl
inc
test
adc
loop
loope
xchg
jecxz
push
jmp
or
loope
mov
sub
and
mov
adc
in
dec
subb
or
repz
inc
sbb
nop
pop
in
sbb
sahf
scas
adc
xor
xorb
repz
xchg
scas
mov
imul
pop
bnd
ret
in
lret
inc
jmp
movsb
cmpsb
aas
inc
jecxz
iret
and
xlat
inc
shl
mov
fisubrl
dec
jg
frstor
sub
xchg
ret
call
inc
popf
pop
into
pusha
lahf
xor
sbb
or
adc
mov
cmpsb
fsubl
ficompl
repz
add
add
mov
aaa
in
push
hlt
jg
mov
or
jno
movb
cmp
dec
movsl
mov
lcall
out
fwait
cmp
enter
fs
and
iret
pop
dec
cltd
dec
shll
dec
add
sub
repnz
inc
or
pop
sub
lock
lods
sbb
sbb
out
mov
xchg
xor
xor
sbbb
sub
ljmp
clc
xchg
sbb
xor
cmc
sbb
idivb
add
mov
jne
mov
push
jg
xchg
jae
sub
mov
in
ja
arpl
rcll
add
test
inc
mov
or
fsubl
jl
loopne
inc
out
push
addb
cmp
sbbb
test
addr16
ret
sbb
inc
jbe
cld
sbb
lret
sbb
icebp
push
xor
in
and
push
lods
int3
popa
pushf
std
fisubrl
ret
and
popa
fsubrp
sbb
negl
fstpt
jge
or
sahf
jmp
lahf
pop
call
filds
out
mov
mov
push
sbb
popf
in
pop
jge
neg
dec
test
je
add
inc
and
jmp
pop
sub
dec
lea
sbb
push
cmp
mov
xchg
add
sbb
repnz
inc
cmp
movsl
mov
rcrl
adc
aas
enter
and
decb
dec
in
sti
cli
inc
xchg
pusha
jg
iret
in
xchg
into
int
cmp
lahf
addr16
out
add
push
push
jns
inc
lds
mov
pop
xchg
adc
test
cmc
sbb
or
mov
out
lock
pushf
fcomps
mov
cs
dec
loope
ss
push
mov
adc
jne
mull
pop
out
push
fwait
rorb
and
lahf
lods
sub
mov
outsb
jmp
stos
xchg
mov
add
lods
sbb
inc
push
int3
mov
xchg
dec
call
es
cli
out
aaa
mov
or
or
jae
mov
dec
out
inc
ds
loope
inc
adc
dec
movsl
inc
je
mov
fiadds
pop
sahf
loopne
sub
push
pop
inc
repnz
rclb
fildll
sbbb
push
cld
inc
jno
dec
inc
sbb
or
mov
sti
xchg
fstpl
roll
in
clc
push
pop
iret
inc
leave
insl
ret
mov
enter
push
jge
es
movaps
xor
pop
mov
popf
sti
sbb
push
out
push
test
loopne
ds
imul
movnti
dec
push
mov
sub
gs
mov
iret
jmp
cmpsb
aad
fbld
popa
test
mov
daa
insb
shll
movsb
push
add
rolb
mov
and
mov
jecxz
mov
pop
dec
jmp
ja
icebp
aas
fldl
dec
sbb
push
fwait
pop
aam
ss
cltd
out
sti
pop
leave
cld
add
fimuls
xor
sub
jp
mov
fld
repz
imul
mov
lret
and
mov
ds
pop
adc
lods
das
mov
adc
push
cwtl
cltd
and
scas
data16
xor
fsts
lds
pusha
test
pop
and
or
outsb
mov
sbb
mov
push
and
jle
stc
sub
ret
out
pusha
push
cwtl
sub
jo
addr16
push
ret
jno
int
jbe
mov
shlb
fidivrl
sub
jne
outsb
adc
or
fidivs
sbbl
enter
fimull
push
cwtl
add
xchg
fstpt
cmp
push
jge
inc
lds
xor
lret
adc
cmp
imul
ret
in
mov
inc
sbb
pop
lds
xor
adc
insl
push
rep
add
sub
stos
insw
pop
pop
mov
sbb
rcll
jl
nop
lods
aad
pop
sbb
out
bswap
test
cmp
jae
xchg
dec
sub
pop
bound
jmp
test
repz
push
fsubrs
jle
lock
push
pop
iret
aam
sbb
adc
cld
imul
scas
out
mov
cmp
fdivs
popa
test
mov
call
cmp
pop
lahf
mov
fs
aam
mov
mov
push
add
jo
in
outsb
mov
and
pop
addl
adc
insb
test
data16
sahf
or
mov
mov
out
in
dec
lods
sbb
movsl
jecxz
pop
shl
add
ljmp
stos
xchg
mov
sbb
stos
mov
push
addr16
nop
mov
add
xor
pop
xchg
scas
or
das
and
fbld
pop
ljmp
stos
xor
addl
clc
imul
in
cmp
stos
jnp
cmp
xchg
push
jle
cmp
sbb
mov
movsb
shlb
jns
fcmovnbe
lret
or
adc
mov
mov
insb
insl
adc
scas
jbe
cmc
xchg
ljmp
mov
pusha
xor
in
out
mov
out
call
cmc
mov
mov
jecxz
ds
lods
stc
inc
bound
jns
cmpsb
xor
ret
std
repz
sub
sub
xor
pop
es
fiadds
es
xchg
xor
dec
inc
js
mov
xchg
adc
adc
mov
test
hlt
sub
sub
xchg
xlat
cmp
dec
scas
sarl
les
cld
mov
adc
jecxz
fs
inc
dec
fwait
inc
div
sub
das
push
jno
out
test
pop
jge
test
fisttpl
dec
bnd
ja
mov
cwtl
sub
lahf
mov
ficomps
jnp
mov
push
popa
cld
or
fs
shll
js
mov
jae
inc
xor
shll
cmpsl
int3
fistps
in
mov
rorl
insl
stc
int3
xor
push
dec
push
push
outsb
push
add
jmp
or
xchg
pop
pop
aam
xchg
jl,pn
cmc
out
push
cmp
pushf
pop
adc
in
cmp
push
sbb
into
or
sahf
cmp
pop
xchg
xor
fnstsw
stos
icebp
test
mov
xor
stc
les
add
stos
imul
inc
notl
push
sub
xorb
cmp
push
xor
sbb
daa
push
pop
dec
loop
aad
out
loopne
cmp
addr16
ja
push
xor
xor
std
jb
xor
dec
or
mov
and
sarb
xor
adc
or
je
inc
decl
in
jnp
mov
mov
push
frstor
test
mov
das
xor
mov
push
leave
jns
loop
ds
xor
jae
lcall
inc
iret
testl
lds
cmp
mov
pop
lods
sbb
es
sbb
push
cmc
sbb
xchg
fstl
xor
aam
add
icebp
cmp
movsb
sub
loopne
and
movsl
sub
ret
lods
mov
pop
or
adc
mov
push
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
dec
sbb
adc
jp
into
je
es
movsl
lods
push
and
ret
dec
cwtl
inc
push
outsl
call
cmp
aas
and
into
ljmp
jb
mov
xchg
and
call
add
repz
adc
mov
push
daa
stc
jl
fsts
into
notl
arpl
xor
jbe
pop
bound
mov
adc
push
cmp
add
lods
mov
shl
mov
fldcw
xchg
insb
adc
mov
push
call
or
or
cltd
push
int
xchg
stos
lret
jge
les
fisubs
adc
push
cmp
fs
clc
inc
dec
lret
lret
dec
in
xor
adc
jne
or
mov
cmp
jmp
push
and
mov
insb
test
das
push
cld
pop
in
or
iret
aam
test
arpl
das
cmc
ficoms
mov
push
in
or
push
or
mov
jmp
mov
or
stc
dec
insb
mov
xor
stos
das
jmp
testl
add
sar
outsl
sub
hlt
xchg
mov
mov
jns
mov
fucom
out
jbe
cmpsb
lret
xor
lock
and
mov
adc
sub
pop
movsb
outsb
out
lea
push
pop
ljmp
adc
loop
inc
xlat
aas
inc
dec
pop
ja
fcoml
add
shl
push
sahf
test
pop
int3
fimuls
dec
jg
iret
jo
pop
and
cmp
xchg
add
scas
or
cmpsb
das
inc
outsb
xor
lcall
out
frstpm(287
cmp
inc
or
pop
mov
nop
sti
inc
lahf
pop
sbb
out
inc
movsb
lahf
mov
out
xor
xchg
push
sub
lahf
sub
mov
lods
push
adc
jl
daa
mov
push
mov
add
aas
xchg
xchg
fdivrl
gs
shlb
gs
and
dec
push
fsts
idivb
aaa
pop
les
jp
rolb
adc
sub
push
cs
lock
jecxz
fdiv
xchg
push
ret
out
cmp
add
icebp
sbb
add
mov
stos
es
dec
leave
and
and
idivl
mov
inc
dec
or
stos
adc
mov
leave
andb
ja
imul
scas
jl
push
lea
dec
jo
cld
mov
jle
add
fs
pop
cs
and
cltd
leave
mov
xchg
push
stos
repz
lahf
push
aad
lahf
pop
stc
addl
push
ret
icebp
or
sbb
fcompl
lds
out
pop
cmp
cwtl
or
or
push
add
xchg
adc
mov
ljmp
cld
xchg
sbb
mov
loop
pop
jle
jbe
sub
sbb
insl
push
in
pop
mov
fs
test
xchg
std
repz
and
add
push
push
leave
mov
sub
cmp
mov
repz
cmpsl
repnz
into
mov
out
loop
or
popa
mov
or
push
push
sub
push
out
push
cld
das
adc
xor
or
int3
notb
pop
inc
pop
pop
pop
sbb
jl
ds
insl
cmp
imul
ss
dec
and
fildll
dec
fcmovu
rclb
sti
rcrl
mov
pushf
insb
adc
cmpb
cmp
ja
or
das
ja
mov
push
dec
ja
mov
dec
imulw
insb
in
jne
mov
jae
stos
in
push
xchg
or
cmp
adc
addl
out
out
stc
sub
pop
push
adc
inc
jo
dec
xor
lcall
mov
jge
sub
push
das
xchg
fmull
icebp
popf
cmpsl
mov
push
or
add
adc
cmp
xchg
mov
int
out
clc
inc
dec
inc
in
lret
cld
dec
push
add
adc
cli
ficomps
jne
jo
and
sar
cmp
jae
lds
mov
add
sbb
jno
stos
xchg
cwtl
sti
xchg
push
sbb
loope
jns
mov
lret
fcoms
loopne
adc
icebp
add
stos
sub
mov
aam
ret
mov
es
lahf
pop
stos
jl
test
leave
mov
jecxz
inc
xor
test
xchg
mov
add
lock
mov
jp
mov
jp
inc
inc
jns
fcomps
andb
push
or
mov
sbb
int3
jmp
xor
push
add
mov
mov
daa
sbb
sbb
cmp
sbb
dec
lods
out
jge
clc
pop
push
adc
hlt
stos
jne
rolb
xchg
pop
jne
or
and
je
adc
push
dec
fistl
xorl
cmc
mov
scas
mov
pop
pusha
cmpsb
in
or
mov
add
mov
loopne
mov
xchg
mov
xchg
mov
mov
jo
and
mov
lods
dec
pop
outsb
fisubrl
jb
adc
lea
mov
cmp
mov
out
call
mov
lea
jbe
and
mov
push
inc
inc
dec
sub
jl
adc
cli
imul
pop
imul
mov
xor
cmp
mov
fdivr
or
xchg
lret
cltd
fs
mov
cmp
iret
insl
cmp
bnd
call
nop
and
mov
fnstcw
cmpsl
or
cmp
mov
xchg
loope
pop
xchg
adc
ja
inc
lcall
fwait
jmp
popa
aad
lahf
call
popl
sub
mov
xor
push
lods
and
xlat
pop
push
fstpl
bound
loop
pushf
rorb
adc
addb
stos
mov
mov
je
mov
jne
outsb
stos
mov
sbb
out
mov
xor
mov
iret
jne
mov
je
sbb
or
bound
mov
jmp
fistps
imulb
jle
fisubs
sub
dec
into
mov
scas
inc
dec
ret
iret
testl
mov
sub
ja
push
xor
cli
cmp
fnsave
or
dec
scas
add
or
mov
cmp
lcall
mov
inc
mov
hlt
lods
push
test
push
xor
psubsw
mov
stos
push
jnp
and
xor
ljmp
sbb
mov
jnp
dec
arpl
stos
fiaddl
enter
or
push
pusha
jge
and
or
push
pop
mov
add
mov
roll
js
and
xor
inc
cmp
movl
jnp
ss
ja
gs
stos
pop
stos
push
push
sub
fwait
xchg
mov
mov
or
pop
testl
push
icebp
jl
fisttps
into
push
adc
lods
push
js
fldenv
in
mov
frstor
inc
leave
jno
in
xor
jg
sarb
adc
cld
mov
xor
cmpsb
test
fcoms
sbb
pusha
movsb
ds
xlat
stos
mov
aaa
fnstsw
push
mov
shrb
xchg
add
scas
and
dec
mov
cmc
outsl
orl
inc
aas
xchg
test
jecxz
aad
add
pop
sbb
cmc
inc
lea
repz
std
mov
in
inc
inc
cli
adc
movsb
sub
pop
pop
add
mov
dec
loop
scas
ficomps
shl
movsb
sub
cmp
sbb
sub
addr16
popa
xchg
pop
test
or
fdivl
sbb
xchg
mov
lret
cltd
jp
pop
mov
mov
in
dec
mov
rorb
sub
imul
jne
movb
scas
mov
insl
aaa
outsb
push
sbb
push
neg
dec
fadd
cmp
fmull
cmc
shrb
inc
dec
push
jbe
hlt
dec
pop
cli
or
jmp
das
nop
lods
cmp
rcll
fst
das
inc
sub
ds
repz
sti
dec
sbb
adc
cmp
mov
in
add
jns
repnz
and
push
aam
mov
mov
dec
mov
pop
add
push
xchg
test
test
aad
movsl
ret
inc
or
stc
in
sarb
inc
mov
inc
xor
adc
ljmp
lds
sub
mov
dec
ljmp
icebp
repz
cltd
lea
mov
xchg
popf
rolb
aas
jle
pop
mov
jne
push
cltd
std
arpl
add
mov
enter
dec
sub
aaa
fsubr
test
and
fisttpl
dec
push
adcb
ja
pop
xorb
jmp
leave
test
test
or
cmpsb
dec
out
mov
and
adc
xor
push
subb
mov
mov
std
test
or
das
mov
insb
sbb
adc
and
aad
je
mov
mov
lds
or
jmp
je
mov
movb
lds
dec
mov
mov
lods
fadds
or
inc
mov
mov
scas
mov
xchg
sbb
xchg
push
pop
push
add
mov
mov
loop
test
scas
add
sbb
fmuls
jl
pop
jno
sub
inc
pusha
jl
cwtl
popa
sbb
mov
cmpsb
xor
fldt
addr16
rcrb
inc
sbb
xor
mov
orl
out
out
jae
inc
push
sbb
mov
xchg
push
outsl
cmp
inc
jmp
jg
lcall
xchg
mov
cmpl
add
outsb
test
adc
movsl
sbb
sbb
jl
mov
rolb
push
scas
mov
sbb
mov
addr16
imull
subl
xchg
jecxz
cld
mov
mov
loop
hlt
mov
clc
adc
fwait
jnp
jmp
push
adc
lds
mov
pop
lret
lds
cld
xor
adc
in
flds
pop
nop
cmp
rolb
xchg
push
pop
in
in
cltd
add
mov
xor
pop
aas
std
data16
push
sbb
pcmpgtd
sarl
push
xchg
arpl
pop
mov
push
inc
adc
pop
fisubl
add
pop
sbb
enter
mul
fmul
ja
sbb
bound
je
loopne
nop
cmp
test
cmp
cmp
ret
arpl
add
inc
or
gs
dec
push
push
pop
out
push
jae
repnz
inc
subb
or
xchg
mov
movl
fwait
xor
js
fs
das
xchg
or
inc
pop
xor
aad
sarb
repz
cli
xchg
jnp
sarl
add
mov
ss
movsl
sbb
jmp
mov
push
gs
aaa
ja
jp
adc
xchg
xor
stc
inc
cmp
negb
add
ljmp
addr16
out
nop
and
stos
cld
pop
jp
mov
sbb
dec
dec
sub
cmc
cltd
insb
cmp
pop
outsb
cwtl
leave
xor
pop
sub
lcall
sub
inc
mov
out
repnz
mov
daa
sbb
into
dec
pop
aaa
insb
stc
inc
jl
dec
jbe
and
jg
xor
arpl
filds
jnp
daa
mov
push
sbbb
dec
sub
cs
push
cmpsl
pop
or
fmul
imul
jmp
sbb
mov
dec
mov
pop
int
push
les
pop
dec
sub
jecxz
cmp
movb
jno
xchg
mov
mov
call
pop
xchg
xchg
aaa
adc
mov
inc
mov
outsl
lods
loopne
and
movsb
pop
add
enter
ret
and
mov
imul
dec
lock
mov
add
jns
mov
rclb
pop
push
stos
push
mov
mov
cmpb
adc
inc
mov
adc
les
shr
arpl
lea
sbb
xchg
lea
pushf
popf
icebp
fwait
lret
fdivr
xchg
loopnew
iret
arpl
mov
ror
outsb
sbbl
loopne
out
les
pop
push
std
dec
lds
sbb
test
add
bound
add
call
mov
mov
cld
cmp
repz
mov
cwtl
jmp
mov
push
gs
or
adc
and
pusha
adc
push
jle
mov
repnz
ja
adc
mov
ret
lahf
push
ficompl
pop
loope
jl
and
cs
xchg
jne
loopne
cwtl
push
int
aam
inc
xchg
std
inc
cmp
fcoml
mov
dec
test
pop
lret
lock
or
add
cmp
jo
cmp
push
inc
mov
mov
decb
inc
xchg
xor
into
pusha
stos
in
dec
mull
or
mov
das
mov
loop
add
mov
pop
imul
jmp
push
repz
jg
xor
jb
adcl
mov
add
loopne
sahf
fs
lcall
cmp
mov
pop
data16
push
movsb
out
xchg
rclb
js
loopne
pusha
lahf
bound
mov
jne
mov
xor
dec
into
bound
aas
loop
in
sub
loopne
dec
aam
cltd
inc
pop
mov
outsl
xor
imul
push
imul
sub
sbb
pop
adc
cltd
pop
xchg
std
cmc
cmpl
xchg
pop
push
mov
xchg
pusha
cmp
adc
roll
scas
pop
aaa
stos
adcb
mov
movsl
add
jbe
mov
xchg
orl
and
inc
mov
lret
dec
notl
loopne
dec
sbb
arpl
in
aam
or
ljmp
mov
pop
xor
and
les
and
repz
shl
add
mov
movsb
mov
or
pop
mov
mov
aad
cmp
and
ljmp
xor
mov
lea
fnstsw
ljmp
popa
rclb
addr16
mov
leave
lods
lahf
xchg
mov
xor
das
sarl
pop
cmp
call
stc
in
shll
pop
stos
sbb
stc
cltd
add
cmp
arpl
mov
adc
adc
sahf
fmuls
stos
jmp
jnp
sbb
mov
je
lds
rorb
ficoml
ret
rcll
popf
dec
pop
xor
cltd
add
lret
stc
jecxz
dec
mov
cmc
sahf
fwait
shl
mov
push
push
loopne
ret
scas
xor
pop
repnz
xchg
mov
data16
cs
push
clc
ffree
gs
rep
mov
js
in
mov
fnstenv
add
mov
cli
andl
jg
jne
adc
pop
dec
addr16
jnp
dec
ljmp
idiv
add
jle
mov
imul
pop
shll
ret
pop
loop
fisttpl
orl
pushl
cwtl
cmp
mov
push
adc
rcrb
sub
or
sbb
out
and
out
pop
sub
test
xchg
cwtl
mov
xchg
imul
xor
adc
dec
in
xchg
shrl
dec
sub
jle
mov
aad
sbb
adc
mov
dec
xor
xor
call
lret
leave
dec
push
jg
xchg
loop
mov
fsubrs
into
clc
sub
fidivs
pop
sahf
pop
ret
sub
js
push
cld
mov
add
pop
push
sbb
rolb
and
and
sub
clc
sbb
cmp
mov
lret
push
les
xchg
test
ja
lods
out
lret
aam
rcll
aad
jmp
sub
inc
sarl
popa
mov
and
adc
sbb
sbb
mov
bound
add
arpl
repnz
mov
stos
test
push
dec
outsl
inc
and
xchg
sbbl
ja
in
and
and
lock
das
std
aas
mov
dec
fistl
hlt
push
pushf
xchg
loope
out
fdivs
lods
pop
repz
test
push
cmp
arpl
mov
xor
ret
cmpsb
jb
cmp
mov
test
pop
mov
and
popf
push
packuswb
ljmp
mov
js
xchg
popa
mov
inc
or
fucomp
add
pushf
jns
into
repz
jg
jno
jp
xor
pop
dec
out
je
pusha
pop
push
sbbb
loopne
sub
inc
dec
dec
xlat
scas
test
popf
pop
test
cmpsl
xor
mov
and
sbb
mov
test
es
dec
fsubl
push
xchg
test
push
inc
idivl
sub
push
push
in
sbb
mov
subl
filds
pusha
enter
push
jp
pop
aad
mov
cmpsl
xchg
push
pop
jmp
cmpsb
rcrl
push
rclb
addl
and
fidivrs
in
mov
cs
in
ljmp
pop
fldlg2
fcmove
fbld
inc
mov
lock
scas
stos
mov
sub
sub
cmc
adc
jae
lcall
lea
fimull
scas
lcall
pop
dec
cmp
pop
imul
pop
push
loopne
adc
leave
dec
mov
pusha
jmp
pop
mov
sti
insl
xor
loope
js
push
inc
jmp
jns
jae
sbb
mov
cld
test
xchg
cs
imul
xor
inc
pop
cld
lods
cmp
movsb
incb
sub
or
add
rcr
xor
cmp
cmpsb
aaa
cltd
jae
xlat
int3
jno
pusha
add
adc
inc
int
sub
test
dec
out
adc
add
xchg
pop
adc
pop
xchg
xor
imulb
xchg
mov
out
mov
ja
inc
gs
cmp
cmp
imul
dec
add
or
sbb
stos
push
mov
cmp
mov
pop
mov
pop
mov
mov
push
sbb
xchg
jle
scas
das
pop
mov
push
out
arpl
dec
clc
pop
sub
jge
and
lahf
pop
test
ss
sub
and
or
push
aaa
xor
jns
das
loop
push
or
adc
flds
dec
cwtl
or
cld
xor
out
fidivrl
add
pop
dec
out
in
pop
mov
bound
movsl
mov
lahf
das
jae
test
cmpsl
fisubrs
stc
lds
pop
mov
and
pop
pop
jae
outsl
mov
iret
fcmovbe
mov
push
dec
add
imul
pusha
pop
cmpsl
xchg
mov
mov
mov
sbb
mov
mov
push
leave
gs
cmpsb
scas
lahf
pusha
ret
jecxz
dec
jle
add
pop
cltd
ja
jne
popl
inc
xchg
cmp
mov
push
iret
mov
jnp
fsubrp
pop
mov
out
mov
dec
sbb
loop
push
mov
lods
push
lcall
xorb
xor
mov
insl
xchg
aam
mov
pop
in
loop
loopne
pop
leave
mov
sahf
stc
gs
or
push
push
xor
adc
aam
jp
movsb
mov
ljmp
mov
mov
inc
cld
push
and
sub
pop
iret
mov
js
adc
arpl
jno
pushf
loopne
pop
pushf
xor
into
test
dec
jl
ret
mov
mov
test
mov
out
xchg
lock
sub
xchg
mov
inc
push
adc
jbe
iret
dec
outsb
mov
jl
add
movsb
push
dec
stos
xchg
mov
sub
aas
adc
lcall
es
jl
mov
mov
pop
mov
fistpll
push
lock
jp
push
adc
movsl
mov
and
pop
scas
ja
jl
xchg
lods
inc
cmpsl
and
ljmp
mov
outsb
xor
shl
and
or
dec
inc
mov
xorl
dec
push
sbb
ror
xchg
inc
jae
stc
arpl
js
loope
mov
mov
add
aaa
xchg
add
into
push
or
xor
pop
call
mov
xlat
aam
repnz
push
pop
pusha
and
lret
adc
sar
xor
mov
push
or
dec
js
pop
das
flds
cmp
xchg
inc
push
mov
loop
cmp
in
aaa
push
push
aad
xor
std
dec
jl
incl
cld
add
sti
jb
leave
in
pop
jmp
pop
jge
in
pushl
mov
push
ljmp
pop
es
pop
push
ljmp
ret
shrl
mov
fwait
sub
and
daa
add
xor
or
stos
sbb
fwait
pop
pop
incb
jecxz
fadds
jl
lret
xor
in
push
daa
add
into
jb
lock
dec
loope
inc
pop
js
aad
push
and
insb
add
xchg
jl
sahf
ret
xor
or
jecxz
pop
icebp
repnz
and
jl
scas
adc
in
and
mov
fwait
xlat
dec
std
inc
fildl
add
into
cmpsb
inc
loopne
fwait
add
jno
pop
dec
orl
cmp
adc
lods
cmpsb
sub
test
adc
pop
pusha
xchg
mov
jno
jnp
inc
and
mov
push
sbb
mov
test
xor
sbb
mov
sub
sbb
stos
out
shl
cwtl
popa
lods
inc
jmp
loope
sbb
outsl
fldenv
repz
pop
xor
inc
out
sarl
mov
stos
sbb
sub
es
xor
xchg
pop
xchg
aas
stos
add
or
adc
popa
cld
mov
aad
fldl2t
addb
adc
xor
std
mov
and
mov
ljmp
fiadds
cmp
jae
fistps
ja
sarl
mov
test
mov
sub
outsl
stos
and
dec
rol
mov
out
aas
ds
cmp
cld
mov
addb
test
popf
dec
fs
xchg
imul
inc
lods
nop
pop
mov
push
sar
pop
sbb
mov
adc
insb
fstpt
addr16
cmp
ret
adc
mov
push
sbb
repnz
addr16
jb
stos
int
or
cmp
hlt
mov
out
movsb
lret
clc
mov
sub
rcll
sbb
sub
mov
jg
mov
ljmp
inc
imulb
push
dec
sahf
shlb
repnz
jbe
lahf
ljmp
addl
mov
jnp
fldenv
mov
jbe
pop
pop
push
in
cmpsb
test
fs
fnstenv
jecxz
out
push
xchg
cltd
mov
fs
push
cmp
cmpsl
push
shll
pusha
aam
js
adc
or
push
mov
dec
mov
lahf
xchg
xor
xor
dec
fs
pop
cmp
out
dec
ret
jecxz
bndldx
or
mov
or
jle
sbb
mov
dec
out
movsl
dec
xor
test
mov
movsl
sti
sub
rcll
ljmp
pop
jmp
sbb
decl
adc
leave
sbb
pop
jns
rcrb
lzcnt
add
je
cmp
push
ret
std
inc
in
xchg
mov
fsubs
lret
adc
inc
cmp
jno
imul
imul
cld
mov
jo
out
fdiv
xor
or
out
in
jns
mov
lock
fcompl
push
adc
call
imulb
xchg
mov
adcb
mov
pop
test
push
mov
cmp
cmp
inc
xor
sbb
xor
cld
lahf
mov
adc
push
inc
jo
hlt
lds
xchg
jb
out
cmp
das
xor
aam
sbb
enter
stos
mov
dec
push
gs
jecxz
scas
lods
push
xor
pusha
fmull
insb
or
mov
jno
mov
inc
xor
push
pop
fadd
xchg
syscall
clc
mov
pop
xor
insb
adc
push
inc
sub
not
add
adc
mov
add
xor
adc
mov
inc
cmp
fldlg2
mov
mov
cli
mov
fsts
andl
xor
push
sti
in
icebp
das
in
push
arpl
les
add
or
cmpsl
int3
sbb
sbb
rolb
pop
les
es
xchg
clc
mov
jp
inc
cmp
sbb
jmp
lcall
mov
ret
leave
mov
mov
or
adc
sahf
xchg
and
or
pushf
cs
push
xor
in
ds
push
and
repz
fnstcw
sub
fnstcw
sub
push
jmp
es
in
inc
adc
pop
scas
mov
and
jge
jmp
adc
bound
pop
inc
fs
xchg
jb
roll
jmp
clc
jns
test
lahf
or
cmp
jge
adc
movsb
cmp
test
ss
cmc
jle
repnz
inc
xchg
fidivrl
xor
dec
fwait
dec
add
subb
int
mov
aad
movd
sarb
mov
nop
jnp
push
jns
cmpsb
cwtl
cmp
pop
test
push
lcall
lock
pop
insl
lods
sub
push
mov
movsl
add
inc
pop
fnstsw
inc
cmp
push
clc
jecxz
clc
cmp
pusha
hlt
out
sbb
sbb
push
jne
nop
cmp
arpl
lods
push
sbb
inc
jnp
lds
out
and
mov
enter
imul
repnz
mov
inc
jecxz
leave
mov
cmp
sbb
sbb
cs
push
pusha
sbb
je
jmp
xcrypt-ctr
cmpsl
lahf
xchg
lahf
mov
and
andb
shl
rcl
dec
xor
insl
cmp
aaa
mov
mov
das
mov
fsub
pop
outsl
and
push
scas
pop
cwtl
xchg
mov
dec
push
adc
insb
leave
and
out
loopne
cld
xor
adc
out
addl
pop
in
sbb
in
sahf
lret
cmp
fs
js
mov
add
pop
repz
mov
push
push
outsl
pushf
fs
icebp
inc
out
outsb
jl
dec
xchg
cmp
mov
cld
js
loop
loope
sbb
pop
std
stc
add
cwtl
or
sub
dec
pushf
and
lds
xlat
scas
cmp
mov
mov
and
js
in
rclb
dec
in
mov
mov
dec
mov
test
movl
sbb
xchg
fistl
sbb
jae
jae
std
sub
sub
lret
and
or
jge
jmp
rep
mov
xchg
addb
mov
aaa
add
push
rorb
pop
mov
push
and
mov
pusha
cwtl
adcl
add
mov
and
inc
jle
daa
jbe
xorb
mov
out
push
push
sarb
lcall
orl
cmpsb
inc
addl
int3
lcall
adc
pop
xchg
xchg
jne
pusha
lahf
outsb
mov
mov
stc
jl
imulb
pop
mov
xchg
mov
mov
jle
outsb
dec
dec
pop
fwait
mov
lahf
mov
sub
xor
xchg
dec
jbe
pop
call
lahf
adc
inc
aam
iret
lock
arpl
out
hlt
mov
int3
aas
addr16
xchg
dec
mov
mov
mov
push
popf
jns
in
dec
or
sub
mov
movsb
dec
movsb
jle
loopne
lret
nop
in
xor
das
dec
mov
sub
data16
ret
and
push
rolb
mov
fldt
dec
cmp
dec
mov
into
push
jbe
sbb
push
xor
cwtl
sub
stc
ret
push
out
sub
push
subl
mov
nop
cli
imul
pushf
out
push
push
inc
test
dec
idiv
data16
rclb
out
mov
mov
fsubrs
mov
fstps
shl
lcall
mov
adc
fadd
pop
mov
pop
imul
push
mov
fistpl
outsb
jbe
pop
loop
mov
cmpsl
aad
mov
push
iret
mov
mov
sti
jp
test
sub
mov
fsubs
mov
push
mov
les
dec
cs
mov
out
in
repz
pop
dec
test
jb
mov
scas
xchg
sbb
cmpsb
fistps
xchg
ds
jnp
pop
aad
mov
add
into
xchg
ljmp
iret
mov
ljmp
out
push
mov
in
inc
je
test
xchg
rcrl
push
mov
mov
jno
std
addr16
add
xor
movsl
or
adc
adc
lahf
sbb
imul
mov
shll
sub
inc
and
sub
lcall
lock
mov
mov
mov
push
nop
xor
mov
pop
xor
cmc
jo
stos
jge
ljmp
jge
test
jae
push
scas
mov
jno
push
hlt
and
or
outsb
int3
sub
enter
pop
arpl
push
je
mov
pushf
fcmove
orb
fwait
lret
lahf
and
mov
xlat
roll
pop
aaa
out
gs
dec
xchg
aaa
pop
mov
repnz
lahf
outsb
bound
add
lret
call
inc
push
sub
sbb
negb
jmp
inc
movsl
jle
push
sarb
les
dec
sub
push
rolb
add
orb
outsb
call
out
je
aaa
rcl
xchg
mov
shlb
dec
dec
dec
test
xchg
xchg
mov
push
jb
dec
sbb
push
pusha
and
dec
sub
scas
shl
subl
or
pop
test
sub
inc
out
daa
es
sti
lods
jmp
rcrl
outsb
mov
mov
test
mov
xchg
js
mov
cmp
add
repz
fsubl
fwait
sbb
loopne
mov
sub
push
mov
jge
dec
in
mov
push
daa
mov
push
lods
repz
jecxz
lods
jae
dec
mov
or
popa
inc
cmp
lods
outsl
shlb
inc
nop
je
xor
shl
adc
pop
ret
cmc
and
xchg
xchg
xor
jg
jns
in
pusha
jns
daa
mov
lret
test
arpl
incb
data16
pusha
call
in
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
dec
jb
pop
std
jns
adc
jp
lods
mov
inc
mov
ficompl
jbe
cmp
sahf
sub
inc
cwtl
ljmp
xchg
sbb
and
scas
xor
and
out
pop
push
jnp
push
fisubrs
xorl
jl
jg
scas
cld
inc
mov
pop
rorb
lcall
decl
jnp
daa
outsl
xor
fcmovne
dec
ja
mov
je
mov
es
or
and
rolb
pop
outsb
and
pop
ficompl
pop
out
xchg
mov
adc
fidivrs
xor
dec
shlb
aas
iret
je
cltd
fdivrs
cmp
stos
or
dec
cmpsb
dec
imul
std
mov
sub
push
stos
scas
mov
fbstp
hlt
int3
jp
mov
mov
lret
xor
movsl
jge
and
jl
pop
or
and
mov
cmp
push
mov
dec
or
ds
mov
jge
add
and
sbbb
outsl
and
daa
mov
xor
fldl
xor
xor
push
adc
or
add
lret
ss
out
sbb
inc
mov
das
dec
mov
jge
movsb
int
inc
or
aas
out
sbb
cmp
out
or
mov
xchg
dec
mulb
jo
sbb
jns
jbe
rcll
lods
in
popa
xor
push
jno
shl
sub
test
inc
mov
popa
das
xlat
push
xchg
into
mov
sbb
inc
mov
adc
push
loopne
les
cs
dec
mov
stos
sub
mov
jb
jnp
sti
pop
insb
cli
testb
dec
xlat
addb
cmp
xor
clc
nop
ret
sbb
divb
push
fldl
test
aad
out
movsl
cwtl
mov
mov
lret
or
xor
push
ja
xor
dec
fdivs
inc
xchg
ljmp
movsl
aaa
or
xchg
shrd
jbe
dec
cs
les
es
enter
mov
push
pop
inc
mov
sarb
jb
icebp
xchg
cli
xor
test
shll
addr16
inc
inc
sbb
call
pushf
int
cmpl
fcom
jg
imul
cmp
mov
push
push
fs
xor
pop
mov
stos
push
aaa
cld
mov
iret
jg
or
mov
and
dec
mov
add
add
loop
rolb
dec
push
mov
fbld
and
das
loop
in
adc
cmc
adc
or
test
or
sbb
inc
jp
adc
sahf
int
cmpsl
dec
push
repnz
fimuls
xchg
cmp
add
imul
mov
push
pop
inc
dec
loope
mov
imul
xchg
popa
pop
dec
insl
aaa
in
add
mov
lods
and
mov
popf
daa
xchg
pop
and
xchg
sbb
ss
inc
std
pop
xlat
mov
scas
jle
sub
mov
pop
ss
xchg
loopne
jae
push
xchg
jbe
into
mov
jge
movsl
stos
sbb
sub
pop
push
test
mov
mov
lods
or
sub
pusha
scas
mov
mov
jb
fisubs
popf
jb
jg
xchg
inc
pop
dec
fidivl
scas
hlt
stos
jns
insl
sub
scas
mov
mov
jp
shrl
arpl
out
out
mov
fsubrs
add
inc
ret
imul
jmp
imul
les
pop
pop
hlt
shll
sbb
and
in
lret
cmp
test
ja
mov
mov
jmp
movsb
lahf
in
int
sbb
mov
jbe
or
push
dec
adc
mov
cmp
dec
dec
inc
mov
xchg
loopne
jp
fwait
add
cmp
outsb
xchg
rcrb
hlt
shlb
cmp
mov
xchg
jo
add
jl
mov
adc
mov
add
addr16
mov
cmp
lds
js,pn
sub
adc
mov
mov
bound
rcrb
sub
push
inc
sbb
lcall
xorb
or
xor
int3
jge
push
lea
push
mov
fwait
xor
adc
sbb
mov
bound
add
gs
jmp
add
inc
sbb
adc
out
mov
ret
xchg
adc
xchg
jmp
stos
dec
dec
scas
cmp
sbb
jb
push
adc
fwait
mov
fnstcw
dec
test
jmp
pop
push
fdivrs
inc
fisubs
imul
mov
xchg
and
sbb
jmp
or
insb
cmp
inc
jbe
mov
push
adc
mov
or
adc
sarl
push
mov
clc
pop
inc
jne
push
push
pop
aad
dec
inc
repnz
rorl
sub
add
lods
nop
xchg
ss
testb
mov
xchg
je
jecxz
sub
out
inc
fidivl
les
jl
stc
or
mov
mov
pop
sahf
push
push
out
xchg
jmp
shrl
icebp
pop
and
mov
push
sbb
std
push
jnp
sub
adc
inc
push
test
hlt
sahf
fisubl
push
dec
and
stos
mov
andb
fsubrl
adc
lret
cld
cmp
nop
xor
cmc
dec
mov
aam
mov
add
xchg
ds
sti
dec
sbb
jecxz
push
push
daa
cmpsl
push
inc
lahf
nop
push
repz
mov
xchg
adc
nop
in
popf
lcall
xchg
inc
cmpsl
clc
push
mov
add
lcall
inc
adc
and
lock
push
adc
ja
cmp
push
jecxz
fdivrs
enter
dec
in
aam
add
fidivs
mov
call
mov
sbb
clc
dec
jmp
sub
push
cli
or
ja
mov
jbe
push
mov
push
adc
mov
roll
lret
sub
mov
xor
inc
hlt
dec
inc
xor
xchg
repz
das
sub
outsb
push
fldt
push
jo
dec
sbb
aas
ss
in
test
sub
cs
sbbb
hlt
jbe
int
aam
mov
in
test
mov
lods
mov
dec
add
incb
adc
push
call
inc
adc
pop
in
das
incb
cwtl
inc
sub
imul
push
rclb
lcall
sub
aam
sti
or
add
in
push
subl
js
je
fstpl
out
add
loop
dec
bound
add
push
xor
or
lods
jae
movsl
push
or
add
loop
push
pop
fwait
jge
and
push
sub
filds
std
sbb
push
rcrl
inc
cli
popf
push
cs
out
push
clc
inc
mov
in
push
fwait
ss
test
sub
orb
pop
notl
stc
cld
stos
dec
fisubrl
in
and
in
xor
cli
push
pop
fildll
popf
jns
inc
dec
js
mov
fdivs
sarb
incl
pop
mov
hlt
cmp
sub
out
push
mov
nop
fisttps
xor
ja
cmp
or
xchg
push
or
mov
push
cld
dec
stc
movsl
jbe
shr
cmp
idiv
inc
movsb
mov
xor
sbb
dec
pop
mov
sub
lods
xor
test
mov
adc
pop
jecxz
call
pop
inc
setnp
xchg
loopne
aas
mov
cltd
mov
ficoml
xchg
push
inc
sub
adc
adc
imul
jne
pop
cmpsl
add
adc
test
pop
lret
adc
andl
and
insb
enter
mov
jo
mov
sub
arpl
fidivs
sarl
xor
mov
out
and
shrb
push
adc
pop
pop
adc
pop
int3
sbb
xchg
pop
xlat
xchg
dec
mov
in
into
push
jmp
xchg
cmc
sbb
or
popa
scas
xor
lds
xchg
or
shrb
in
call
vandnps
ljmp
inc
subl
and
pcmpeqd
adc
call
mov
jo
icebp
addr16
arpl
sub
lods
in
cmpsb
cmpb
mov
lcall
lcall
data16
fsubrl
mov
jnp
mov
dec
or
ss
in
in
nop
fisubrl
xchg
sub
inc
enter
or
add
pop
stos
lods
add
sub
pushf
cmpsl
lret
fistl
jne
jae
leave
in
popa
mov
pop
push
sbb
and
pop
shl
out
mov
pop
and
sahf
jo
addl
mov
and
outsb
and
push
push
xchg
and
push
rcll
inc
pop
lea
push
mov
sbb
pop
and
sbb
inc
scas
pop
gs
pusha
xchg
or
in
and
xchg
scas
fstps
pop
aad
lahf
hlt
pop
dec
cmp
rclb
incb
push
insb
inc
icebp
inc
mov
pop
mov
xor
int
jmp
cli
loop
ret
fwait
out
mov
sahf
mov
jl
bound
mov
mov
iret
aam
mov
js
loop
int3
nop
movsl
inc
pop
lret
xchg
add
lods
out
out
mov
mov
arpl
adc
shrb
jae
xchg
ljmp
aam
mov
mov
insl
inc
mov
bound
enter
and
rolb
pop
and
lock
sbb
and
jmp
je
add
int3
in
mov
ss
test
mov
and
insl
adc
popf
jecxz
push
adc
stos
arpl
ret
stos
xchg
xchg
rol
insl
jle
pop
pop
sub
movsb
js
jmp
cmc
subb
fs
mov
xchg
sti
jno
sub
mov
roll
jno
mov
imul
jo
ljmp
jbe
sub
out
jns
aad
int3
mov
mov
pop
sub
sub
cli
xor
mov
cmp
jns
mov
ret
jl
push
pop
negl
aad
fbstp
pop
rcll
sub
push
ret
cwtl
jb
les
push
bound
cmpsl
sahf
push
sbb
inc
test
push
inc
stos
cmpsl
mov
int3
hlt
fcmovnb
loope
dec
mov
add
stos
sti
popa
pop
lcall
cmp
cmpsb
adc
pop
sub
and
fists
push
inc
test
std
mov
lods
cs
scas
xchg
out
inc
scas
mov
lret
dec
cwtl
pop
pop
mov
les
cmp
imul
lret
dec
ljmp
cld
inc
test
js
dec
ret
ljmp
or
bound
xchg
nop
lahf
pop
and
mov
movsl
scas
test
push
fnstenv
pushf
idiv
enter
pop
inc
mov
movsl
int
push
mov
jb
mov
out
mov
lea
cld
dec
pop
push
pop
arpl
popf
std
into
adc
xchg
test
jge
les
js
lahf
fwait
push
aaa
outsl
jge
inc
js,pn
sar
jo
cli
push
mov
iret
add
mov
ds
std
cmp
outsl
push
repnz
test
pop
push
sub
out
mov
jge
fists
ds
test
mov
lea
aaa
fmull
pop
aad
mov
or
xor
adc
xor
mov
sub
call
pop
mov
movsl
stos
xchg
lcall
and
jae
outsl
pop
shr
dec
cmp
dec
or
mov
push
push
outsb
push
pop
ja
shll
push
movsl
fsubrl
lret
mov
popf
outsb
imul
lods
mov
jae
jl
xchg
mov
pop
ds
aas
fldl
aas
push
imul
jge
lcall
dec
imul
pop
jg
mov
push
sub
pcmpeqb
mov
outsb
xchg
fnsave
mov
push
addl
test
gs
and
lea
jbe
jns
shrb
mov
dec
push
mov
lock
ljmp
inc
add
in
sub
dec
loope
mov
ljmp
testl
ficomps
jnp
in
mov
push
adc
pmulhw
add
nop
jge
mov
sti
outsb
div
pusha
out
lock
stos
test
shrl
popa
sub
pop
sub
or
fcoml
mov
add
pop
jne
push
test
xor
test
mov
pop
lds
mov
mov
push
xchg
enter
add
stc
ret
or
sbb
call
fildl
incl
mov
gs
test
out
imul
decl
sub
movsl
push
xor
mov
push
iret
inc
shlw
test
psllw
imul
out
stos
sahf
xchg
aas
js
pop
dec
cmp
jo
sub
dec
cmp
push
mov
mov
int3
mov
jne
or
mov
repz
mov
test
add
out
mov
int
pop
dec
pop
nop
pop
xchg
call
cltd
jmp
adc
testb
into
frstor
mov
sbb
call
sbb
inc
lock
pop
int3
sub
sahf
sbb
jnp
cmp
mov
mov
ds
mov
repnz
dec
mov
int3
icebp
mov
shlb
mov
sbb
inc
jp
fsts
fnstsw
imul
insb
cmp
mov
sub
xlat
mov
scas
pop
stos
mov
lock
sbb
movsb
jg
add
movaps
int3
pop
cmpl
jmp
into
dec
mov
orb
lea
or
jecxz
cmpsl
fstpl
adc
ss
xchg
popa
sbb
adc
mov
mov
pusha
push
xor
sub
dec
insb
fisttps
test
adc
mov
out
add
outsl
add
ja
push
addr16
jne
mov
test
mov
les
fidivs
les
push
clc
xor
push
xor
shll
in
or
or
xchg
inc
clc
imul
int3
ja
sbb
mov
add
jle
fsubl
pop
fildl
iret
pop
cmpsb
lds
cmp
clc
cmpsl
jbe
out
stos
aad
lds
push
addr16
inc
ja
sar
inc
aas
sbb
cmp
add
divb
stos
lahf
testl
dec
scas
push
idivb
and
loope
fucomip
popf
xchg
daa
xchg
scas
int3
jns
pusha
gs
divl
xchg
les
or
dec
gs
or
shrl
pop
or
dec
mov
call
sbb
push
lea
inc
dec
or
or
mov
popf
cmpl
sbb
ret
rcr
mov
repz
pop
sub
ret
dec
lds
xchg
cwtl
mov
mulb
out
ret
push
or
inc
cmp
es
in
sub
mov
mov
sti
rcll
lret
jo
fsubl
mov
ret
xor
cmp
mov
mov
xchg
in
cmp
rorl
xor
sbb
mov
xchg
stos
mov
out
push
mov
insb
int3
lods
add
mov
pushf
out
mov
mov
aas
and
fucomip
dec
bound
mov
incl
xor
ret
sbb
arpl
mov
cmp
fistps
loopne
mov
cmp
movsb
inc
push
mov
roll
mov
push
add
push
mov
popa
ss
hlt
xchg
sbb
je
add
das
jns
and
rorb
mov
jle
mov
fdivs
push
les
cwtl
mov
test
pop
xchg
jge
push
lret
mov
outsl
sbb
std
push
adc
orb
add
fldl
pop
jl
cmp
or
pop
aaa
dec
ja
stos
leave
inc
daa
insb
out
push
mov
je
or
orb
imul
mov
clc
xor
adc
and
push
adc
xor
mov
xor
repz
ja
or
mov
mov
lahf
inc
in
jp
jno
push
scas
mov
push
mov
mov
leave
je
jecxz
dec
cld
inc
push
sbb
cmp
cmc
sarl
mov
add
dec
fdivl
push
iret
cmp
sbb
test
ss
xchg
sub
inc
pop
call
orb
pop
in
push
pop
mov
rorl
fimuls
clc
cltd
fadds
mov
testb
lods
pop
scas
or
and
fdivp
and
xorl
inc
add
ss
fnstsw
adc
sbb
add
xchg
jno
out
sti
fistps
jno
in
adc
adc
loope
mov
pop
jp
mov
inc
sub
pop
mov
pop
jo
cmp
stos
cmp
dec
stos
into
push
movsb
mov
pop
push
xor
pop
pop
cmp
les
jle
or
shr
sub
mov
xchg
dec
divb
mov
sbb
sbb
dec
mov
pop
mov
dec
sbb
xor
jne
mov
mov
adc
popa
ror
adc
mov
fiaddl
jle
cmpsb
lods
bound
cmp
stos
loop
jb
pusha
int3
mov
pop
loope
cmp
out
and
outsb
xlat
loop
adc
push
dec
cmp
add
rol
cmp
dec
movl
or
ss
lea
or
arpl
nop
or
sbb
in
mov
sbb
mov
xorl
mov
test
xor
subl
sbb
arpl
push
dec
mov
and
jp
imul
push
fistpl
jnp
leave
jno
cmp
js
sbb
mov
mov
push
lods
or
dec
imul
fldl
test
lods
out
shrl
push
iret
jnp
mov
and
inc
outsb
add
sbb
test
jge
mov
mov
push
repnz
and
cld
jle
sbb
rcrl
and
les
test
mov
jecxz
outsb
mov
scas
sub
adc
mov
sarb
push
sub
pop
sub
imul
dec
test
cmp
xchg
or
and
pop
sti
dec
aas
test
gs
data16
mov
lret
aaa
and
ljmp
cmp
imul
or
jmp
insb
mov
je
jns
iret
jmp
jle
cmc
ret
adc
lea
push
out
add
aad
mov
aas
lock
test
xor
stos
ja
jnp
cmp
adc
xchg
mov
mov
fwait
enter
mov
cmp
int3
pop
jl
cmp
mov
cmp
pop
dec
jns
push
pop
add
xor
stos
jle
in
push
loopew
aaa
out
sti
in
cmp
push
mov
and
mov
sbb
cwtl
jmp
rcl
in
arpl
icebp
scas
pop
cmpsl
enter
rclb
jle
fucomp
adc
stos
scas
fs
xlat
or
inc
mov
xchg
adc
ljmp
sbb
fnstenv
xchg
insl
lret
jns
dec
aad
inc
out
inc
inc
data16
xchg
add
in
incb
test
sbb
add
or
lcall
or
movsl
xor
push
dec
add
push
and
fnsave
inc
xor
sbb
mov
hlt
es
into
jl
ljmp
pop
fmuls
xchg
mov
test
out
in
outsl
sub
inc
cmp
imulb
pop
cmpsb
fcomi
bound
rcrb
rorb
imull
fnsave
dec
scas
fists
mov
mov
insb
inc
mov
test
loope
jecxz
add
or
jne
addr16
dec
mov
cmpb
pop
aad
lcall
cmp
fimuls
ljmp
out
call
xchg
gs
inc
dec
dec
fnsave
inc
lods
fsub
xchg
jge
and
clc
lcall
cmp
jp
mov
jge
add
imul
cmp
enter
popf
jno
test
xor
outsb
outsb
mov
cmp
adc
xor
je
sub
ds
or
jns
je
xor
mov
sbb
imul
dec
sbb
pop
mov
icebp
adc
add
stc
mov
shrl
aam
in
jb
das
xorl
xor
sub
andb
scas
mov
pop
ficompl
rorl
sahf
arpl
lds
aaa
push
xchg
sbb
lret
and
or
mov
clc
out
loopne
mov
jmp
xchg
add
int3
or
inc
and
in
lcall
aaa
jle
mov
lds
lods
xchg
mov
notl
subb
ja
or
xchg
or
push
mov
out
orb
and
fstl
pop
dec
in
mov
cmp
cmp
push
cmp
ljmp
mov
xchg
add
cmp
or
into
mov
insb
lods
jge
imul
fdivrl
sub
out
pop
sbb
xchg
adc
mov
ja
mov
fucomp
cmc
pop
not
out
jns
and
out
mov
ja
mov
sub
cmp
pop
cwtl
push
fisttps
loope
add
mov
scas
fstps
mov
imul
cmp
test
xor
cmpsl
mov
std
mov
rcll
xor
xchg
jecxz
mov
jo
lock
repnz
into
rclb
mov
or
pop
int3
add
outsl
or
pop
and
sti
jmp
lcall
idivb
ljmp
in
ljmp
sbb
push
aas
sbb
or
fistpll
imul
inc
frstor
neg
sub
lock
negb
rcll
sbb
or
test
mov
je
jp
jle
les
mov
xor
lret
or
adcl
jbe
xor
das
fs
fxch
push
clc
mov
add
jmp
ds
add
enter
adc
out
and
into
jnp
or
popf
dec
sahf
jae
fdivs
jns
mov
inc
jle
aad
mov
cmp
cmp
lods
aam
xor
jb
call
mov
dec
jb
cmp
scas
std
jnp
mov
sub
jg
mov
out
lock
push
cmc
add
cmc
jno
test
pusha
and
pop
lahf
roll
mov
mov
orb
shll
movsb
enter
jno
adc
pop
lcall
ss
in
iret
xor
cld
fildl
pop
push
mov
pop
jbe
nop
outsb
fmull
jp
push
scas
adc
adc
or
inc
sbb
sbb
add
xlat
fisttpl
imul
xchg
in
imulb
cmpl
fstpl
xchg
aas
mov
mov
pop
rorl
lahf
sti
cmp
loopne
es
or
jmp
add
iret
jecxz
lahf
into
jle
and
cmpsb
mov
pop
leave
push
sbb
pop
gs
sub
cmp
cmpsl
xchg
subb
mov
pop
iret
sahf
icebp
insl
mov
mov
sbb
mov
repnz
cli
call
insl
or
cmpsl
ficoml
lods
pop
dec
mov
ds
imul
jbe
pop
incl
in
daa
cmpsl
push
mov
dec
gs
xlat
test
xor
jmp
into
jo
pop
jge
int
addb
ss
mov
movsl
xor
sahf
fdivrl
xchg
mov
mov
addr16
out
pop
in
lcall
mov
ret
mov
xor
testb
pusha
loop
stc
mov
dec
sti
sbb
push
das
sarl
or
jb
xchg
in
push
jp
ss
sub
dec
sbb
dec
xor
scas
push
adc
call
les
fistps
push
sub
or
jle
dec
je
cld
hlt
ljmp
xchg
es
push
mov
adcb
fsubrp
test
xor
and
jg
scas
es
dec
and
fs
adc
out
xor
mov
cs
out
cld
loope
inc
pop
push
cmp
roll
hlt
movsb
imul
sahf
cmp
mov
mov
jge
fidivs
in
cld
or
mov
movsb
mov
aas
fmull
or
xor
inc
add
or
mov
frstor
cmpsl
ret
mov
inc
aam
mov
xchg
aaa
push
cmp
xor
outsb
fs
pushf
pop
mov
xchg
push
pop
cltd
push
fcom
test
popf
fsubl
or
add
xchg
pop
scas
pop
aas
inc
push
xchg
inc
add
insb
mov
repz
jl
mov
lods
mov
add
jmp
and
jmp
sub
mov
test
cmp
data16
scas
adc
test
add
andl
mov
xor
pop
mov
imul
cmc
inc
imul
fisttpl
mov
rolb
inc
push
test
xchg
jbe
shll
cltd
adcl
addl
loope
mov
jno
cmp
lods
sub
fnstcw
orb
idivb
fisttpl
inc
cmpsl
add
aad
sbbb
mov
mov
cmpsl
leave
cmc
add
mov
sub
add
inc
jle
mov
fucomp
mov
cli
xor
stos
cmp
inc
add
add
and
ljmp
mov
xchg
leave
or
rcll
addr16
sub
cmp
das
push
cmpsb
add
out
xchg
adc
xor
cmp
xchg
ret
lahf
inc
jns
mov
add
mov
ror
or
add
mov
xchg
es
cmp
aaa
cmp
fists
mov
popf
in
xor
test
adc
fstpt
or
cmp
dec
das
mov
sub
xor
jne
cmp
xlat
cmp
xor
gs
adc
test
pop
in
fstpt
jp
mov
icebp
ret
or
lahf
aas
pop
mov
inc
mov
cmp
bound
mov
std
mov
jmp
addr16
mov
cltd
push
add
sbb
cltd
imulb
fistpll
icebp
sub
xorl
lds
cmp
fisubs
cmpsl
cmp
pop
mov
and
or
sub
aaa
ja
sub
push
xchg
call
jp
imul
mov
insl
cmp
leave
sahf
fisubrs
les
pop
mov
popf
mul
cltd
outsb
hlt
dec
ds
andl
shlb
lods
pop
mov
stos
adc
insb
or
in
lods
out
mov
lds
out
scas
movsb
into
sti
pop
mov
iret
pop
aad
orl
pop
sti
cli
xchg
push
das
adc
into
in
or
iret
cmpsl
mov
in
adc
insb
clc
inc
clc
add
fucom
ss
and
gs
inc
mov
and
sarb
mov
addr16
lods
sub
jp
and
push
aad
mov
adc
outsb
push
xlat
inc
xchg
mov
pop
ss
or
ss
int3
or
stos
scas
lcall
cwtl
xchg
scas
inc
sahf
xlat
push
mov
and
sub
xchg
iret
fcmovnbe
test
aaa
sub
adc
jle
movsb
out
xchg
out
push
adc
add
push
cmp
xchg
test
dec
mov
mov
movsl
pop
add
sbbl
int
jns
xchg
adc
dec
mov
iret
jns
sarl
inc
into
loope
ljmp
xchg
std
sub
ss
pop
cwtl
popf
and
mov
jge
pop
es
and
and
pop
dec
sarl
pop
cmp
clc
int
ss
xor
hlt
aas
out
or
xor
inc
and
ljmp
xor
rorl
std
out
shlb
aas
cmp
fwait
adc
into
loope
out
in
and
push
or
movsb
mov
rcrb
paddb
cmp
jmp
fwait
push
jl
aas
cmp
nop/reserved
jmp
nop
insl
mov
gs
dec
div
out
or
inc
movsl
pop
jp
mov
mov
lahf
fisttpl
call
outsb
inc
inc
nop
inc
mov
jnp
mov
cs
adc
cmp
sub
mov
sarb
mov
les
imul
xchg
inc
out
jle
shll
or
insl
imul
negb
aad
xchg
jge
push
sub
pusha
and
sbb
xchg
cmc
in
outsb
test
mov
pop
shrd
rcll
inc
rcll
mov
into
xchg
pushf
ret
jmp
lea
pop
cltd
xchg
jno
sub
popf
mov
sub
cltd
mov
in
arpl
inc
mov
pop
js
xorl
adc
pop
hlt
repnz
jg
loope
out
cwtl
push
xor
cmpsb
arpl
subb
mov
xchg
sbb
add
mov
shrl
test
shlb
pop
data16
ret
fisttpll
sti
and
cli
push
xorb
xchg
dec
out
push
fcomps
push
dec
inc
jb
xchg
sbb
cmp
imul
out
mov
cmp
aad
jg
xchg
cmp
xchg
in
inc
ret
inc
jl
dec
dec
add
mov
mov
insl
jo
fists
in
sti
sub
shrl
cmp
push
in
or
outsl
lds
das
lcall
or
sub
sbb
xchg
in
inc
in
movsb
mov
adc
mov
fs
adc
pop
fiadds
lcall
outsb
out
xchg
hlt
adc
bound
rolb
arpl
jle
out
cli
or
lds
dec
jne
xor
or
mov
imul
or
sub
and
shl
enter
icebp
mov
stos
mov
mov
dec
lcall
mov
dec
or
or
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
addr16
push
pop
jge
sarb
loope
jp
push
mov
push
adcb
or
mov
mov
test
lock
xor
movsl
notl
cmp
push
out
fnstcw
bswap
mov
and
fucom
xchg
sub
jle
xchg
lea
push
addr16
sbb
imul
nop
aaa
xchg
jge
adc
cmp
inc
movsb
outsb
subb
add
nop
xchg
and
xor
push
dec
cmpsb
aas
or
mov
sbbl
lret
popf
sbb
icebp
mov
arpl
imull
scas
sahf
imul
xchg
push
xchg
adc
mov
mov
aad
pop
lcall
int
mov
stc
and
lret
mov
xor
xchg
inc
push
jb
test
mov
aas
push
int
dec
loope
mov
jnp
fwait
outsl
mov
jecxz
pop
sti
xchg
enter
in
out
getsec
je
sbbl
pop
and
xor
mov
nop
ret
cs
outsb
mov
int
fnstcw
add
hlt
pop
or
js
mov
add
push
xchg
or
mov
jmp
xlat
test
cmp
mov
inc
rorl
inc
rcll
sbb
jl
mov
jge
add
add
in
insb
jnp
in
enter
mov
sub
mov
pop
loop,pn
or
test
mov
pop
ja
ret
pop
mov
pop
in
stos
jg
mov
and
cmp
ds
inc
fstpl
leave
and
dec
in
sub
or
cmp
jns
lret
cmp
cmpsl
test
push
cltd
sub
test
add
push
sbb
sbb
jns
adc
fsubp
rol
imul
jbe
pusha
shlb
mov
lods
sub
push
jns
jo
add
add
das
out
ljmp
lods
mov
push
mov
cmp
sbb
ja
add
jb
popa
cmpsb
or
add
addr16
sarb
popf
xchg
push
loop
mov
lcall
sti
mov
cmp
outsl
push
scas
icebp
lret
sub
jp
cmpsb
imul
push
iret
cmpsl
dec
shl
loop
shrb
lds
dec
mov
push
adc
jle
arpl
lahf
mov
pop
out
js
push
add
jmp
jp
in
xchg
daa
pop
movsb
imul
cmp
add
sbb
stos
icebp
pop
xor
scas
xchg
lret
outsl
popf
inc
xor
cmp
cmp
hlt
sub
jecxz
leave
lahf
dec
push
mov
adc
sahf
insl
mov
stos
scas
shll
push
lds
aam
sahf
std
sub
mov
jae
adc
dec
xchg
mov
jns
adc
mov
mov
pop
jbe
dec
outsl
push
dec
jae
sub
cmpsl
ret
jo
mov
fcmovne
lods
mov
sbb
xlat
data16
inc
dec
je
cmp
xchg
mov
dec
ja
icebp
imul
aaa
cli
mov
movsb
push
sub
or
divb
dec
fs
lea
sbb
push
mov
adc
scas
inc
test
movsl
and
iret
dec
cld
pop
push
and
std
imul
jg
cs
fs
gs
sbb
clc
sbb
xchg
rcl
cmp
fwait
and
ret
fistl
push
fistps
mov
mov
ss
mov
pop
cmpsb
mov
dec
test
and
sbbl
cmp
xchg
mov
ret
cmp
movsl
loop
jle
cli
xor
dec
jae
cld
adc
cmp
repz
add
insb
fsubrs
ret
gs
xor
dec
ja
cld
call
sahf
cmpsl
scas
adc
sub
sbbb
jae
jmp
test
pop
adc
and
sub
sub
movsb
je
insb
cwtl
mov
outsb
sbb
fs
sbb
lock
pop
jg
ja
add
rcrb
jg
push
into
out
hlt
inc
in
sub
mov
fdivl
js
das
cmp
in
push
pop
adc
adc
cs
daa
push
loopne
loop
leave
movsl
mov
es
gs
cmp
imul
in
cmp
jbe
jb
sub
outsl
and
adc
inc
xor
ss
iret
ret
mov
cmp
test
pop
ss
sahf
test
inc
adc
sub
adc
addl
fcoml
push
lods
jbe
loope
sub
cmc
ds
cmovne
add
ficompl
in
dec
aaa
dec
movsl
adc
cmp
ret
mov
jbe
xor
cmp
enter
dec
loop
xor
in
lcall
mov
imul
inc
or
push
pop
stc
pop
dec
ljmp
mov
mov
js
pop
pop
into
ljmp
arpl
aas
leave
mov
in
addr16
inc
ret
pop
rcrl
pop
or
jae
add
xor
pop
aad
imul
push
push
xor
shrb
adc
jp
cmp
mov
or
adc
mov
and
mov
xchg
mov
std
daa
out
inc
popf
sub
stos
hlt
not
dec
push
cmp
xchg
shlb
adc
xor
push
loopne
aaa
ret
cmp
aad
pop
aam
mov
dec
loope
push
and
or
shll
push
ja
ljmp
rcrl
cmp
insb
pop
inc
sbb
push
pop
mov
mov
stos
lret
xlat
insl
in
push
push
ss
jl
mov
stos
out
repz
and
ss
das
outsl
mov
mov
mov
jl
inc
push
and
mov
stos
hlt
cmp
lods
addl
test
mov
mov
add
ret
pop
push
adc
push
ja
addr16
test
insb
inc
mov
lea
dec
icebp
aas
test
faddl
fcmovbe
in
mov
cmp
xor
fcmovbe
mov
mov
mov
test
pop
int3
je
test
fwait
outsl
mov
sub
int3
pop
cmc
mov
mov
dec
enter
mov
sahf
dec
sbb
loopne
mov
lea
stc
inc
mov
mov
imul
dec
sti
xor
cmpsl
movsl
jnp
add
fldcw
push
out
cmp
cmpsl
cmp
inc
stos
push
xor
in
push
nop
push
jge
lcall
or
mov
or
inc
clc
dec
lahf
js
pop
repz
push
jle
in
cltd
lods
aam
cmp
mov
mov
int
rolb
jge
sub
aaa
ss
loop
xor
dec
xchg
sub
push
iret
call
mov
inc
dec
adc
fsts
sarb
mov
pop
jg
lahf
or
push
sub
mov
xor
cwtl
cmp
cwtl
cmpsb
mov
stos
jno
fs
push
push
adc
in
jp
pop
icebp
jl
cli
mov
inc
lcall
sub
pop
loope
jecxz
and
mov
aaa
mov
mov
andb
pop
out
cmpsb
add
xor
sahf
leave
push
push
out
dec
cmp
push
jge
push
push
aas
lahf
pop
inc
test
lods
add
and
sti
lods
test
pop
stos
sbb
or
push
dec
mov
push
adc
or
sbbl
sbb
ret
and
dec
sub
jno
jb
std
ds
aaa
fildll
mov
popa
and
mov
stos
imul
testb
js
mov
nop
adc
lret
mov
mov
fiadds
movsb
jmp
inc
xorpd
mov
push
cmp
xor
stos
mov
push
mov
dec
push
dec
mov
or
xor
negl
ljmp
sub
cmpsl
outsl
out
mov
or
leave
mov
mov
inc
push
mov
pop
movsb
dec
mov
cmp
test
das
inc
push
mov
and
rcl
pop
hlt
std
add
add
jg
adc
add
fisttps
popa
movsb
ljmp
into
pop
xchg
fcomps
decl
xchg
jae
mov
cs
test
jmp
test
mov
mov
cmc
adc
jae
das
mov
test
push
fs
roll
cmp
aas
sub
mov
scas
jbe
fwait
cli
aad
or
xor
dec
fsubs
lret
jnp
pop
push
xchg
sbb
mov
xor
lret
popf
push
xchg
and
push
cmp
testl
sbb
cli
in
xor
mov
pop
clc
push
pop
lock
into
outsl
mov
and
cmp
xor
fcomip
hlt
fst
je
movsl
aad
mov
daa
in
sarl
orl
mov
data16
jbe
pop
lret
dec
popf
sub
mov
mov
pop
mov
pop
xor
push
rcr
or
in
cmpsl
mov
adc
mov
push
add
scas
outsb
sahf
mov
std
xchg
cmpsl
cmpsb
idivl
aas
roll
mov
daa
mov
add
stos
mov
lret
addb
xchg
hlt
adc
je
iret
jb
movsl
fwait
andl
mov
jle
pop
jno
mov
push
pop
insl
rep
mov
adc
mov
adc
aam
jo
push
movsl
xchg
add
stc
mov
leave
add
xchg
cmp
call
rorb
movsl
test
ljmp
mov
and
xor
inc
add
rolb
sbb
cmp
lcall
xor
loope
cmp
call
sub
iret
ret
push
loop
jnp
mov
xchg
sub
or
mov
jb
adc
enter
pushf
xor
ss
jge
mov
push
loopne
add
shl
gs
adc
xchg
xor
mov
cmc
in
fistpl
imul
mov
push
xor
mov
dec
dec
and
cld
mov
dec
movb
movsl
push
cli
mov
or
out
rcl
push
adc
cmp
dec
mov
cli
pop
xor
dec
dec
movsb
pop
or
ss
out
lods
mov
insb
mov
rcr
fildll
jp
in
or
mov
jg
idivb
stc
pop
aaa
inc
pop
mov
popf
pushf
gs
xchg
movsl
mov
insb
mov
xchg
cmp
lds
je
stc
push
mov
adc
mov
cltd
push
mov
int
in
rcrl
cmp
fistpll
notb
sbb
sbbl
jne
adc
pop
sarl
lods
dec
sub
addr16
or
fidivrl
pop
out
sarl
nop
ljmp
outsl
inc
scas
add
pop
xchg
das
mov
xchg
pop
int3
insl
sbb
dec
mov
in
jnp
dec
pop
sub
dec
stc
lods
sub
jb
push
fs
outsb
les
ror
mov
fs
dec
xchg
xor
lds
insl
arpl
pop
pop
pop
mov
inc
and
sub
lea
movsl
ss
pop
pop
fsubp
imul
mov
inc
cmp
icebp
cmpb
scas
aaa
scas
daa
xchg
sbb
cmp
mov
mov
add
adc
es
out
cmpl
push
sbb
mov
cltd
xchg
pushl
movsl
or
icebp
scas
filds
xor
dec
xchg
aam
pop
xlat
cmpsb
orb
push
shlb
or
enter
imul
in
shl
scas
inc
mov
and
mov
mov
jbe
icebp
lahf
adcl
roll
push
aas
cld
xchg
jp
mov
mov
adc
cmc
push
leave
mov
sbb
in
pusha
and
int3
sub
rep
sub
jo
jb
add
jecxz
sbb
incl
xchg
lods
adc
out
pop
xchg
mov
inc
pop
jle
andb
mov
adc
or
pop
popa
fcmovne
pop
jae
xor
out
jle
mov
enter
and
lods
mov
push
dec
mov
dec
leave
or
mov
loopne
push
cmp
jge
outsb
push
mov
insb
inc
mov
psrlq
mov
cwtl
adc
jbe
add
jmp
xchg
rcrl
mov
and
sahf
and
shrl
das
repz
sub
fnstsw
sub
push
inc
mov
fisttpl
jbe
popa
push
pmulhw
mov
rcrl
jl
cli
xor
add
pop
xor
lcall
inc
xchg
in
sbb
outsl
xchg
sub
mov
cmpsl
cmp
push
push
loope
out
xchg
dec
imul
push
rcr
sbb
ret
sub
imul
ljmp
loop
and
cmp
decl
insb
nop
xchg
jle
ficompl
fucomp
push
and
push
in
enter
cmp
sub
iret
inc
fs
xor
outsb
adc
mov
div
rcrl
aam
pop
nop
and
jle
mov
xchg
ljmp
popa
imul
mov
mov
jle
xor
cmc
je
sub
lds
mov
pop
scas
sub
lock
std
test
out
mov
ficompl
add
xchg
adc
dec
jmp
push
mov
or
addr16
inc
cmp
cmpsl
dec
out
es
enter
iret
fidivrl
mov
fmuls
mov
sbb
mov
push
jg
fldenv
adc
scas
xchg
pop
mov
test
jnp
add
fbstp
push
cmp
xchg
cltd
and
mov
jge
pop
adcb
xchg
aas
out
mov
and
jnp
jb
je
nop
jle
movsl
out
ffree
fidivl
cltd
cli
push
fcompl
mov
cmpsb
jle
aam
mov
test
hlt
push
lret
pop
cltd
and
sti
lods
cmp
loopne
imul
jmp
adc
js
rcll
xor
inc
push
jnp
sbbl
fwait
scas
push
jmp
hlt
jmp
push
or
add
cmp
aaa
or
mov
shlb
mov
mov
loope
clc
aas
out
cs
cli
adcl
bound
mov
adc
cmp
int
pop
idivb
pop
pop
stos
xor
cli
outsb
roll
aaa
fidivs
shr
or
out
ja
divb
mov
mov
aaa
sbb
std
insl
pop
loopne
sbb
cmp
mov
test
and
pop
test
xlat
sub
inc
pop
shl
push
loope
or
jmp
xor
add
jne
lods
in
push
mov
mov
lahf
lock
mov
movsb
dec
ja
iret
xchg
or
xlat
ret
int3
repnz
scas
mov
cwtl
loope
lock
xchg
mov
inc
add
mov
mov
nop
test
dec
cmp
cli
jns
mov
jo
decl
dec
cmp
cs
in
lods
mov
xor
push
insl
add
push
inc
fcoml
out
jno
sbb
mov
sbb
sti
jnp
in
sub
mov
xchg
xchg
stc
std
sbb
push
ss
stos
stos
or
pop
pop
into
div
loopne
adc
jnp
inc
dec
fstpl
inc
sarl
xchg
negb
jo
vmovd
pop
xchg
cmpsb
cmpsl
addr16
or
lods
or
xor
out
dec
push
sbbb
rorb
mov
fmuls
jecxz
adc
loope
mov
jecxz
std
mov
adc
pop
int
lods
and
jno
xor
push
in
jns
sub
fnsave
movsl
dec
cmc
cli
sbb
mov
lea
shll
stos
cmpsl
ss
mov
dec
jo
sti
icebp
xchg
and
xchg
std
xor
and
in
test
sbb
stos
imul
stos
pop
test
inc
ret
mov
rorb
aad
insb
fs
mov
add
in
aaa
lcall
push
ljmp
movsb
xchg
fcoms
sub
xchg
adc
mov
int3
shrb
je
jl
add
cmc
mov
xchg
andb
push
push
aaa
xor
mov
ficomps
pop
push
inc
lods
stos
lcall
iret
ds
ljmp
aas
test
fwait
cmp
mov
fs
fsubrs
and
mov
test
pop
and
jo
pop
aaa
call
nop
pop
xor
js
mov
push
std
or
xor
lods
cmpb
or
fsubp
dec
jno
adc
jno
jae
push
loope
fcmovb
enter
push
sub
lds
movsl
mov
pop
leave
mov
mov
mov
inc
nop
test
scas
add
stos
rolb
out
push
inc
mov
repz
aas
pop
and
inc
or
sbb
sbb
add
add
movsb
xchg
das
cmp
mov
outsl
test
lods
mov
inc
leave
sub
jg
inc
mov
dec
loope
pop
xor
xor
dec
dec
inc
out
roll
fidivl
jbe
mov
lcall
lret
in
sarl
test
int3
shlb
push
add
pop
lret
stos
jne
cmc
dec
pop
add
jge
imul
in
gs
nop
add
sub
push
or
sahf
push
jns
inc
xor
cld
and
inc
mov
sbb
jo
fidivl
pop
or
data16
insl
jge
aaa
je
cmp
xor
mul
dec
pop
sbb
sbb
mov
adc
aam
cmp
sti
add
ljmp
sbb
mov
push
cmp
add
test
xor
pop
ret
add
dec
cmp
and
mov
ljmp
xchg
in
lods
and
fstps
gs
daa
xor
js
lahf
call
push
lret
xchg
pop
sbb
arpl
outsb
cltd
lea
mov
fcomps
pop
adc
pop
shrl
mov
or
mov
rorl
loop
outsb
std
sub
addr16
add
xchg
in
aaa
movsl
mov
shrl
scas
in
push
andl
mov
lret
pop
xor
adc
mov
sbb
sbb
arpl
daa
imul
cmpsl
cmpsb
test
mov
cli
loop
sub
shll
pushf
mov
mov
jge
and
jle
push
aam
push
jle
mov
outsb
dec
adc
push
push
decb
and
jno
xor
xor
mov
aas
cld
cmp
pop
int
andl
cmp
jl
add
sub
das
sub
lea
pop
mov
rorl
ret
ret
add
lds
in
imul
adc
in
stos
mov
mov
hlt
mov
or
and
nop
xor
add
dec
or
or
or
xor
js
inc
cmpsl
xorl
cmp
sub
mov
out
jno
jne
pop
pop
and
sbb
sbbb
mov
in
xor
mov
out
arpl
stos
pop
lahf
cmpsl
das
xchg
jecxz
sbb
mull
imul
leave
dec
mov
mov
movsl
jae
xchg
lcall
mov
lcall
repz
and
fwait
ljmp
gs
inc
push
sbb
push
xor
inc
pop
adcl
or
pop
ljmp
int
dec
enter
lea
filds
adc
je
fs
insl
cmp
stos
dec
aas
jnp
sbb
sbb
or
mov
out
push
or
lds
in
or
xlat
jnp
sbb
inc
pop
pusha
mov
cmp
cmpb
xor
mov
aad
xchg
jns
jae
fsubs
mov
inc
jle
lods
roll
mov
dec
inc
imul
mov
mov
push
insb
xor
xlat
xchg
adcb
add
sbb
hlt
push
jge
jae
stos
sbb
or
jnp
add
mov
in
xor
cmp
push
leave
cs
lock
cmp
repz
push
jl
push
loope
aas
ja
dec
xlat
ret
adc
fldt
ja
push
or
pusha
sub
inc
dec
add
popf
xchg
cmp
pushw
or
cmpb
mov
and
cmp
mov
push
das
lahf
or
dec
sub
cmp
jg
or
sbb
sbb
jl
gs
push
xchg
icebp
arpl
repz
lds
shl
in
or
dec
jae
mov
mov
sti
fcoml
shr
adc
iret
fs
xor
cmp
xchg
sub
mov
jae
or
in
rcrb
mov
dec
inc
jle
addr16
jbe
test
push
cmc
aam
sti
mov
shlb
lahf
mov
outsl
cli
shr
pushf
or
push
repz
mov
mov
cli
stc
sarl
int3
sti
pand
lods
call
pop
push
inc
cmp
movups
inc
popa
aam
stos
leave
and
mov
in
add
xchg
popf
cwtl
inc
jnp
shl
mov
jmp
sub
push
movl
jno
icebp
clc
push
movsb
jmp
xor
cwtl
daa
push
dec
jno
xchg
pop
fdivrl
mov
loopne
stos
pop
sti
push
add
js
inc
sub
adc
adc
aas
out
loop
inc
in
subl
mov
sbb
xchg
imul
jl
pop
cltd
fsubp
movl
mov
inc
push
cmp
in
cmp
pop
popa
sub
sti
mov
push
lea
push
dec
xchg
mov
nop
unpckhps
popf
les
mov
adc
jle
inc
out
xor
xchg
loop
mov
out
xchg
push
cmp
cmp
adc
iret
xor
xchg
lret
or
gs
mov
pop
inc
xchg
jb
mov
out
js
iret
mov
ss
dec
xor
xchg
push
js
xchg
fwait
xor
mov
mov
shll
mov
mov
popf
rcrb
cmp
add
cltd
push
sbb
adc
aas
inc
and
pop
sbb
mov
xor
xchg
dec
push
repnz
rolb
mov
dec
lods
xor
jg
fidivrl
inc
sub
stos
test
adc
cmp
or
adc
rcrb
inc
loope
sahf
shrd
addr16
or
jne
sbb
adc
jge
scas
inc
push
sbb
pop
in
loop
cmc
movsl
cmp
mov
jmp
fldcw
les
aam
std
adc
or
add
sub
sti
mov
and
mov
rolb
shlb
and
movsb
nop
mov
xchg
jl
jbe
in
sub
mov
cmp
inc
fwait
lock
clc
cmc
lea
sub
push
cmpsb
xor
mov
rclb
jo
inc
mov
pop
xchg
orb
sti
rolb
pop
pop
jne
fs
cmp
cmpsb
pop
push
loop
adc
sarb
cmp
or
xchg
push
mov
lds
dec
lds
sbb
repz
das
sub
test
mov
sub
lahf
jecxz
fst
push
or
xlat
add
mov
xor
test
sub
out
and
xchg
outsl
in
jb
mov
stos
inc
lods
fstp
xchg
jmp
ret
push
dec
addb
shrl
mov
shlb
add
notl
mov
in
pop
enter
insl
ret
addr16
push
jecxz
bound
cmpsl
mov
and
push
sub
ljmp
shll
mov
pop
xchg
dec
lds
push
mov
loope
xor
push
popa
test
sbb
movl
add
adc
adcb
mov
loope
call
inc
jl
out
sub
and
xor
pop
push
and
cltd
and
daa
dec
nop
and
add
sti
repz
lahf
int3
mov
adc
add
mov
loope
push
pop
arpl
add
les
xor
popf
ljmp
jecxz
popa
lahf
imull
mov
aas
cmc
mov
cwtl
sar
push
out
outsb
push
adc
mov
or
xor
push
dec
mov
rcl
fnstenv
stos
iret
mov
dec
loope
addl
jmp
pop
dec
push
das
pop
loope
test
cld
lcall
dec
stos
pop
stos
fwait
dec
pushf
lods
jp
xchg
and
lods
rorl
xchg
imul
pop
pop
push
mov
les
mov
clc
lahf
subb
add
sub
out
rclb
imul
mov
xchg
mov
and
fcoml
shrl
mov
sbb
jns
call
add
repnz
call
out
push
pop
push
jne
xchg
popf
sbb
cwtl
pop
mov
cmpsb
js
shl
mov
xor
ret
aaa
lahf
ss
jl
ret
xchg
mov
push
jo
mov
pushf
dec
jnp
xor
insb
mov
adc
jmp
fdivrs
cltd
mov
pop
popa
into
cmc
subl
cld
adc
fcom
hlt
mov
pop
mov
add
push
ret
mov
add
sub
leave
xlat
push
adc
and
xchg
pop
and
gs
ss
lret
mov
dec
test
lret
in
push
mov
sbb
dec
lods
xor
jo
outsl
je
push
inc
adc
lret
add
adc
rcrb
outsl
pushf
mov
lret
pop
ja
setle
xor
xchg
xorl
imul
pushf
ds
xchg
adc
insb
mov
xor
repnz
lock
cli
nop
int3
sbb
inc
lods
push
lods
cmp
jbe
pop
mov
xchg
fnstsw
leave
in
and
cs
cli
in
add
mov
sbb
pop
mov
adc
cmc
mov
xorb
ret
push
cmp
loopne
adc
add
fs
sbb
sub
in
orl
xchg
dec
adc
loop
mov
lea
xchg
imul
xor
push
inc
or
pop
gs
jno
bound
sbb
popa
xchg
sbb
fldenv
jle
fidivl
jl
mov
mov
inc
push
inc
fs
sbb
mov
sbb
gs
cmp
inc
cmp
inc
cmp
adc
sbb
pop
enter
aaa
adc
cld
inc
divl
sub
out
enter
mov
ss
jne
gs
ss
sbb
and
in
pop
rorb
jnp
jecxz
mov
das
filds
push
cltd
notb
adc
bound
in
ss
icebp
clc
or
movl
int3
nop
add
sbb
inc
shrb
test
into
lods
fidivl
enter
lret
cwtl
push
pop
sub
sarl
inc
in
lahf
out
clc
inc
dec
rolb
mov
inc
ret
cmp
xchg
sahf
scas
jmp
outsb
mov
lods
out
lds
xor
test
xor
pop
and
xor
les
and
pop
adc
fstl
imul
pop
out
mov
cmp
fildl
push
cmp
insl
inc
mov
test
jno
sbb
dec
sarb
jns
scas
stc
pop
in
mov
dec
lahf
int3
lea
push
pop
jae
insb
ss
push
cmp
mov
iret
das
dec
addr16
roll
pusha
ret
cmp
les
and
aas
mov
addr16
jp
add
rcll
int
fisubrl
outsb
rcll
xor
shll
or
sub
sahf
jl
in
cwtl
add
pop
inc
imul
dec
push
xchg
pop
or
sbb
xlat
push
ficomps
jecxz
lret
aaa
xchg
pusha
hlt
and
mov
cmpsb
mov
cltd
cmp
arpl
push
aaa
ret
outsb
sbb
int3
stc
gs
ljmp
imul
pshufw
icebp
sarb
bound
dec
pop
enter
sti
sub
or
mov
jnp
lock
cltd
das
in
fstl
hlt
out
mov
clts
mov
imul
or
lcall
cmpsl
xor
das
mov
int
jno
std
outsb
pop
jae
in
mov
xchg
lea
cmp
scas
sbb
ficoml
xchg
arpl
bound
push
fwait
cld
sub
jl
lea
push
xchg
dec
inc
push
data16
stc
sub
xchg
sahf
pop
xchg
popf
cmp
call
jmp
jne
icebp
mov
push
mov
or
fcom
in
aam
or
lcall
and
stos
mov
sbbb
fistps
jl
dec
push
shrb
xchg
mov
addr16
cmc
outsl
pop
outsl
sub
imul
enter
hlt
gs
pop
adc
pop
xor
push
inc
push
sub
or
pop
cs
repz
scas
movsb
pop
xor
jne
mov
jl
add
sbb
out
sbb
call
jmp
cmpsb
pop
data16
pop
cmp
xchg
sahf
adc
fidivrs
repz
jg
cmp
dec
loopne
xchg
jns
xor
stc
jl
adc
in
dec
in
ja
cmp
and
dec
pusha
popa
js
dec
ljmp
in
test
test
fs
fmuls
cmp
dec
adc
adc
adc
mov
call
or
cmp
mov
dec
and
inc
fildll
scas
push
dec
stos
sbb
xchg
sti
pushw
push
push
int3
in
push
push
xorl
sahf
mov
roll
xchg
shr
add
outsb
call
xchg
sub
mov
mov
xor
cmp
fwait
cmp
mov
imul
inc
scas
aam
aam
xchg
data16
aam
js
mov
cmp
shl
xchg
fldcw
pop
add
xor
popf
lret
pop
mov
mov
sbb
dec
push
dec
or
daa
aam
roll
and
adc
ss
loop
mov
cmp
or
mov
push
xor
xchg
push
jns
rclb
xchg
push
adc
pop
push
pusha
lds
cmpsb
xor
push
outsb
dec
lret
inc
stos
shlb
pop
mov
cmp
icebp
cs
data16
or
jge
movsb
fcmovbe
flds
and
ror
aaa
mov
mov
shlb
imul
les
jl
adc
lods
mov
add
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
jns
sub
jp
mov
jl
adc
jle
lods
mov
inc
pop
inc
fucomi
ss
fsubrl
mov
mov
stc
dec
xchg
jg
fldl
jae
sbb
fwait
cmpsb
jbe
mov
xchg
repnz
xor
aas
fisubrl
movsb
mov
cmp
dec
adc
inc
mov
imul
fbld
jle
sub
fidivrl
sbb
sbb
xor
daa
jb
lcall
pop
inc
pop
popa
aaa
insb
push
outsl
sub
dec
call
jnp
adc
and
or
cmp
psubusb
jbe
add
inc
mov
into
aam
pop
pop
push
js
scas
or
mov
sti
imul
leave
lcall
sbb
pop
inc
lock
es
mov
or
adc
out
sub
shlb
iret
mov
push
js
inc
flds
ss
dec
cltd
pop
push
lret
add
mov
stc
pop
mov
pop
mov
sbb
cmp
test
cmp
int3
lea
outsb
lret
arpl
ljmp
mov
sub
out
mov
jge
and
dec
dec
fwait
aad
xchg
push
out
insb
add
std
add
movsb
cli
cmp
aam
inc
push
fwait
xchg
adc
shl
out
adc
in
add
pop
mov
add
sub
add
outsl
sbb
xor
mov
aad
mov
or
cmp
ljmp
xchg
mov
mov
pop
add
dec
push
xchg
jae
rorl
inc
test
cmp
mov
aad
rcrl
inc
add
lret
xor
and
in
cwtl
xor
test
iret
shlb
add
out
inc
jge
push
movsb
jmp
imul
or
mov
pop
cld
je
xor
mov
cld
dec
jmp
xor
inc
in
lds
cmp
and
inc
call
mov
mov
sbb
sbb
cmp
pop
std
test
mov
lods
jge
xor
pop
jno
xchg
outsb
push
cwtl
push
lods
add
das
cmpsb
ja
imul
or
subps
movsb
cs
stos
pop
jns
lret
ret
lcall
mov
outsb
mov
iret
imul
ss
ret
jle
mov
mov
test
mov
xor
pmaxsw
dec
ljmp
cs
hlt
iret
jno
pop
movsl
mov
stos
ret
mov
add
jmp
sub
stos
sarb
in
mov
push
jnp
jmp
js
addl
out
pop
call
pushf
popl
cmc
sbb
in
mov
int
ds
push
mov
mov
xor
sbb
and
repnz
jge
push
fwait
loope
ja
sahf
rol
jle
imul
xor
repnz
mov
in
cs
push
call
pop
adc
push
push
jl
inc
fdivrs
mov
ljmp
add
dec
lds
dec
cli
leave
sbb
mov
daa
cmp
insb
fldl
mov
mov
sub
xchg
jl
adc
enter
jecxz
pop
jo
adcb
xchg
pop
adc
enter
sbb
jp
lret
and
fld
fisttps
cmpl
or
mov
shll
xchg
clc
xchg
cmp
sbb
cmpsb
and
icebp
xchg
jbe
xlat
xor
lret
mov
xchg
push
mov
movsb
or
dec
data16
xor
ljmp
std
ret
pushf
jne
subb
leave
fstpt
mov
aaa
mov
sbb
mov
xchg
scas
mov
mov
pop
mov
imul
ret
out
inc
mov
inc
jb
outsl
sub
clc
int3
lret
sahf
jnp
aad
sbb
das
mov
into
sar
adc
lea
out
mov
fldcw
xor
outsb
and
add
sub
xchg
call
push
mov
sub
mov
xchg
pop
cmp
cmp
push
stc
mov
bound
push
popa
mov
out
mov
sbb
jecxz
or
cmp
inc
ljmp
shll
iret
pop
sbb
xchg
les
mov
lret
add
sbb
and
dec
ret
ss
sbb
jmp
dec
addr16
ja
arpl
push
fnstcw
fstpl
push
or
mov
sub
and
insl
orl
pop
and
sub
push
mov
incb
arpl
fdivr
js
jns
shrl
mov
or
cmp
std
cmc
sbb
pop
rcll
push
arpl
out
xchg
jnp
cmpsl
loop
shlb
mov
loopne
mov
adc
addl
js
and
loope
je
cli
jno
push
scas
xor
outsl
js
mov
out
jno
jp
pop
test
mov
mov
popf
cwtl
data16
mov
sub
or
jo
push
push
movsl
xor
jo
xchg
pusha
loope
and
daa
das
sbbl
inc
xchg
sti
mov
cltd
sbb
leave
push
cmp
addb
scas
imull
test
es
mov
pushf
sub
xchg
dec
cmp
mov
jl
movsl
xchg
out
mov
lock
sub
fadds
cwtl
lret
and
in
mov
mov
das
addr16
push
ljmp
daa
adc
jecxz
add
insb
lods
adcb
dec
jge
fnsetpm(287
std
leave
sahf
dec
sub
je
andb
cmpsb
cs
push
xchg
daa
stos
jle
sbb
mov
mov
or
roll
jle
sub
loop
xchg
imul
ss
fcomps
sarl
mov
testb
mov
push
ror
mov
jb
mov
pop
pop
lds
xchg
cmp
je
push
out
inc
push
das
cmovb
mov
jno
or
iret
fidivl
out
push
jp
xchg
dec
sbb
outsb
rol
push
and
in
push
test
test
je
and
sbb
inc
fdivr
inc
adc
mov
mov
rcrb
xlat
inc
push
mov
fcmovu
fucomp
add
aas
push
fdivrl
in
mov
cmp
int
sub
and
nop
xchg
jne
int3
mov
xor
jg
test
and
pop
ret
negl
sub
push
roll
mov
cmc
xor
fwait
sbb
sub
and
xchg
push
push
xor
insb
repz
pop
inc
push
xchg
push
lods
test
xchg
pusha
shlb
or
fwait
out
test
int3
insl
push
cs
mov
push
inc
xlat
dec
xchg
imul
test
cltd
andl
in
out
mov
repz
xchg
gs
and
lods
imul
mov
outsb
lods
repnz
lahf
mov
sub
sub
popl
testb
sub
scas
mov
pusha
push
mov
insl
ret
int3
hlt
fucomp
push
repnz
insb
cmc
xchg
dec
fistl
fdiv
jl
divb
cld
lods
sbb
jge
nop
aas
sub
and
and
push
fimuls
jmp
mov
sub
fnstsw
and
out
mov
stos
imul
cmpb
xchg
mov
and
fisttps
fucom
mov
push
xchg
adc
gs
fisttpll
xchg
out
jl
xchg
repz
mov
mov
rcr
or
and
repnz
clc
aaa
std
in
mov
int3
xor
mov
stc
mov
jo
or
inc
sbb
cmpb
xchg
out
movsl
jns
fstpl
mov
sbb
jl
rorl
jns
cmp
cmp
mov
rclb
sbb
aam
ret
stc
cli
insb
push
push
outsl
out
push
sbb
add
jp
cmp
add
mov
jle
fstpt
adc
push
addr16
jnp
cmp
movsb
out
jle
fdiv
mov
stos
and
jg
cmc
dec
xchg
outsl
add
arpl
andl
sub
adc
and
pop
lods
fisubs
stc
stos
push
sbb
test
add
enter
xor
adc
movsb
fimuls
and
inc
lods
aam
test
adc
xor
sub
scas
jl
lcall
test
leave
push
xor
sub
loopne
pop
stc
test
popf
adc
pop
push
js
jb
es
ss
mov
pop
test
les
mov
mov
push
push
xlat
js
mov
pop
loopne
sub
repnz
and
enter
xor
cmp
xchg
or
int
pop
into
adc
ljmp
cmp
mov
cli
mov
jp
cwtl
dec
and
fadd
neg
mov
sub
repz
arpl
iret
shl
push
jmp
sub
out
adc
or
std
mov
xor
dec
adc
mov
cmp
in
gs
fdivrl
mov
and
mov
add
xor
in
mov
int3
and
push
push
imul
in
jecxz
dec
push
cmpl
cli
dec
sahf
lret
fsts
mov
mov
in
mov
sbb
adc
imul
lret
outsb
inc
in
mov
mov
mov
lods
xchg
mov
or
clc
ret
jne
adc
mov
sbb
call
jno
stc
ja
jle
sub
insb
lahf
inc
icebp
std
jnp
jnp
enter
popf
faddl
out
stc
pop
push
in
out
imul
xchg
aam
faddp
mov
xchg
jmp
mov
mov
stos
and
push
adc
stos
jnp
es
imul
ret
out
mov
scas
das
test
dec
test
data16
push
hlt
mov
push
ss
stc
pop
sbb
in
js
adc
cmp
xlat
sahf
xlat
lea
jp
lret
or
jp
pop
andb
in
test
xor
mov
stos
xor
adc
mov
xchg
in
push
cmpsb
mov
stos
adc
inc
or
sbb
inc
lock
test
xchg
dec
das
lock
fwait
mov
aaa
mov
xchg
sub
arpl
cmp
inc
push
ja
inc
mov
scas
fbld
ljmp
mov
jbe
mov
stc
cltd
dec
pop
and
dec
test
outsl
arpl
or
or
fimuls
dec
inc
std
test
push
pop
scas
mov
mov
popf
xchg
jl
jle
fldl
hlt
mov
xor
divl
rcr
aaa
aas
push
stc
mov
in
faddl
lahf
xlat
xorb
sahf
inc
xchg
mov
mul
dec
or
mov
push
lods
mov
int
fcmovne
cmp
loop
out
in
cmp
xor
sub
lret
pushf
inc
rcll
xchg
shll
dec
jmp
push
inc
lret
stc
push
loopne
ret
stos
sbb
fdivrl
cwtl
sbb
incb
add
les
cmp
cmp
out
in
jge
shll
iret
dec
data16
pop
add
lret
ds
fcmovb
adc
leave
in
mov
movsb
je
mov
out
insb
fldlg2
ret
mov
pop
rcrl
insl
ret
jmp
repnz
xchg
aas
push
out
ror
sub
mov
lcall
pop
mov
pop
sbb
scas
jno
and
ja
outsb
and
add
dec
fst
fisubrs
cmpsl
inc
fisubl
add
or
jg
adc
push
or
adc
or
sub
inc
scas
jnp
sub
cmc
jge
cltd
jl
add
dec
fs
jo
xor
adc
mov
scas
decl
fildll
pop
sbb
push
cmp
stos
enter
cmp
push
push
into
cmc
and
scas
sub
mov
sbb
xor
js
push
loopne
lret
jnp
test
xchg
fisubl
sarl
mov
push
mov
aas
fnsave
add
add
xchg
shlb
jmp
cmp
xchg
and
lods
insl
ja
jmp
mov
lea
lahf
rorl
lret
mov
xchg
or
cs
sub
popa
xorb
dec
fnstsw
jl
fnsetpm(287
insl
in
iret
inc
sub
decb
shrb
pusha
add
out
lock
andl
xchg
xor
aaa
mov
cli
aaa
push
jecxz
scas
les
movsb
aas
xor
frstor
leave
loopne
push
add
mov
push
cmp
fstl
mov
sarb
pop
mov
pop
sti
sub
mov
push
into
rorl
or
jns
push
call
in
mov
and
shll
xorl
xor
xorb
inc
dec
jecxz
mov
les
ss
adc
cmp
pop
into
lods
push
mov
push
xchg
mov
fdivr
mov
sbbl
fdivrp
mov
sbb
insl
mov
repz
lahf
jo
subb
shlb
and
lcall
lods
pop
fdivs
jno
repz
or
mov
xor
mov
xchg
sub
and
into
lea
cmp
adc
mov
xchg
pop
das
inc
xchg
or
out
imul
ss
gs
mov
add
outsl
lahf
jecxz
mov
scas
mov
jmp
cmp
jb
xchg
loope
fnsave
movsb
repnz
xlat
dec
fwait
xor
insb
mov
dec
jne
frstor
xchg
inc
into
clc
adc
add
pop
pop
jb
inc
in
and
and
sub
scas
inc
insb
mov
insl
mov
jae
jle
add
inc
jns
pop
notb
dec
jp
in
xor
nop
dec
arpl
mov
mov
xchg
hlt
scas
push
cmpsl
cltd
xor
mov
ss
sbb
lea
push
das
insl
lret
daa
cmp
sub
mov
cmpsb
in
sbb
push
mov
dec
out
popa
pop
loope
aam
fwait
cmp
jle
outsb
push
push
jecxz
out
nop
in
xlat
adc
and
xor
repnz
cmc
fs
xchg
inc
inc
jmp
jle
test
insl
movzwl
lahf
jae
sti
mov
jnp
mov
xchg
xchg
cli
pusha
movsl
stc
fidivl
call
sti
mov
test
cmp
icebp
dec
stos
aam
mov
je
add
pop
add
cwtl
xor
movsl
lret
cmp
js
jb
mov
and
mov
pop
pop
cs
mov
popa
xor
outsb
fildll
icebp
iret
dec
fildl
push
dec
jmp
mov
jmp
enter
xor
scas
jecxz
pop
mov
sub
cwtl
sub
cmpsl
test
fisttpll
jp
xchg
in
mov
jne
adc
pop
inc
sbb
in
and
sti
call
mov
icebp
sahf
into
pop
aas
mov
dec
cmp
das
adc
call
inc
jae
int
clc
aas
jnp
adc
xor
jl
mov
in
push
jbe
fsts
pop
in
inc
mov
andb
sbb
leave
inc
cwtl
int3
cmp
notl
sub
adc
mov
lcall
jp
mov
mov
nop
rol
lods
jno
push
insl
clc
mov
jle
add
out
adc
fstl
lods
ss
dec
adc
test
in
test
std
dec
clc
imul
jne
push
ja
add
and
cmp
cwtl
arpl
cmp
loope
test
loop
ja
popf
les
shlb
mov
mov
mov
mov
call
dec
mov
lcall
stc
mov
dec
movsb
xchg
iret
test
incb
mov
pusha
lds
negl
je
push
inc
xor
lods
jmp
sarb
cltd
cmpsl
into
jo
dec
jmp
xchg
cwtl
mov
mov
aam
jnp
jbe
cli
xchg
sub
mov
data16
mov
cltd
jmp
mov
sub
ret
lret
dec
jb
adc
call
or
sbb
mov
xchg
inc
les
lods
push
pop
shlb
lock
mov
mov
mov
xchg
call
inc
adc
dec
adc
syscall
mov
loope
and
fwait
mov
dec
int3
ficompl
sbb
sub
leave
or
push
adc
aam
lahf
mov
cmp
clc
cmp
enter
subb
inc
ror
push
and
dec
addr16
mov
dec
push
xchg
fistps
mov
cmp
ljmp
add
jne
mov
cmc
jp
cwtl
divps
sub
cltd
in
jbe
push
mov
and
pop
adc
movsb
icebp
cli
dec
sub
inc
cmp
jo
inc
out
repz
sbb
in
in
push
mov
and
adc
mov
adc
dec
mov
pop
movsb
call
dec
add
adc
and
fwait
out
dec
xlat
mov
je
imul
push
stos
mov
fidivrl
inc
push
into
out
mov
xchg
ds
das
xor
scas
sbbl
ss
out
push
sarb
sub
inc
dec
pop
mov
push
popa
insl
sub
xchg
pop
mov
cmc
push
loop
loope
mov
imul
movb
inc
test
xchg
icebp
leave
fmuls
sbb
ljmp
add
sub
aad
push
pop
jno
in
jp
and
inc
pop
ret
enter
fiaddl
and
xor
ud2
cmp
rcrb
lock
xor
mov
pop
inc
movsl
test
insl
push
dec
push
std
inc
cwtl
xchg
add
sbb
xlat
sbb
mov
or
pop
repnz
test
dec
push
aaa
clc
xor
xor
dec
enter
dec
lret
push
pop
sbb
insb
push
jb
dec
pop
push
fmuls
mov
shrb
xchg
data16
enter
popf
mov
fxch
pop
push
aaa
sub
fs
jl
mov
lret
aas
imul
or
xchg
lret
outsl
adc
into
inc
push
mov
jg
or
lock
in
mov
pop
mov
arpl
adc
pushf
pushf
adc
lahf
test
rorl
std
roll
sub
push
loope
mov
mov
or
xor
aas
inc
ss
push
jecxz
mov
cmp
sub
stc
pop
mov
mov
cmp
pushf
inc
dec
pop
lock
aad
push
cld
test
dec
xchg
mov
je
jmp
cmp
popa
cs
sbb
mov
fisubrl
shll
addr16
pop
xchg
xor
iret
jl
lcall
mov
fmuls
cmp
sbb
jne
pop
mov
add
mov
cmp
ss
push
adc
mov
hlt
pop
aam
dec
rclb
ss
cmp
imul
mov
inc
add
push
mov
pushf
leave
xchg
imulb
inc
mov
sub
sahf
dec
jg
jae
sub
js
fcompl
orl
iret
add
inc
or
fwait
xlat
fucom
repz
xorl
aas
iret
les
loope
sub
push
idivl
mov
imul
imul
lods
xchg
int
lods
cmp
xchg
sub
hlt
adc
out
xor
jnp
push
shll
pushf
lock
movsb
lret
xchg
add
sbb
js
faddl
xor
xchg
pop
push
es
cs
jb
popa
decb
loop
nop
loopne
insl
cmpsl
aam
push
iret
ds
inc
or
sahf
cs
loopne
cmpsl
push
das
popf
jns
add
out
xor
lods
cmp
or
iret
adc
divl
imul
sbb
push
inc
push
sbb
lods
je
push
lret
sbb
imul
pusha
mov
push
sub
scas
xor
lret
shll
clc
mov
inc
push
jp
xchg
push
ret
lock
mov
cmp
mov
push
testb
mov
sahf
push
adcl
addr16
sbb
xor
inc
cltd
mov
xlat
jns
insb
pop
adc
jge
mov
lahf
mov
sub
enter
icebp
lret
outsb
inc
mov
fcomi
gs
mov
cmp
lret
lret
cli
cld
and
and
fistl
lcall
jae
out
or
ljmp
pop
in
pop
in
sub
jmp
mov
and
stos
pop
fmul
and
inc
or
or
popf
out
iret
insl
push
into
xor
jmp
or
addr16
lods
cmpl
jnp
pop
idivl
jg
mov
notb
sbbl
mov
dec
insb
lods
clc
femms
dec
inc
into
xor
out
xchg
add
jno
xor
jecxz
test
adc
sbb
sbb
fmull
mov
fsubs
sbb
inc
adc
lea
cmc
pop
push
push
ljmp
push
sub
push
sti
inc
sarl
repz
push
push
mov
fstpt
std
mov
sbbb
nop
ss
push
pop
add
adcb
inc
add
lret
push
dec
fsubrl
fdivp
ficompl
or
xchg
jne
adc
int3
push
movzbl
mov
sub
leave
popa
rol
xchg
out
jecxz
call
addr16
or
inc
in
fwait
add
mov
jno
push
filds
pop
cli
mov
sub
cmpsb
mov
pusha
daa
inc
call
mulb
mov
pop
stc
clc
popf
les
leave
ret
fs
js
das
popa
imul
or
fildll
insb
mov
ss
sub
ja
add
test
into
dec
cmp
xor
mov
ljmp
xchg
mov
inc
int
ja
adc
scas
jno
lea
shll
pop
xchg
or
test
mov
leave
test
pop
sub
popa
test
insb
vmovups
scas
movsl
test
inc
shr
lea
gs
sbb
test
outsl
xchg
or
sbb
gs
aas
or
mov
adc
shlb
add
push
cmpsl
int
jae
mov
and
mov
push
ret
jb
jle
insb
xchg
inc
enter
push
mov
mov
mov
out
fsubr
test
mov
push
movntq
aam
lret
cmc
xchg
mov
mov
push
scas
in
sbb
daa
sbb
adc
movsb
shl
add
dec
jmp
mov
mov
xor
or
cmpsb
mov
mov
bound
add
dec
in
cmpsl
and
aad
dec
clc
imul
sbb
call
aad
mov
mov
lret
lods
sbb
xchg
cltd
in
sarl
and
stc
movsl
out
aas
stc
lahf
add
inc
adc
dec
mov
jmp
mov
int
sub
lahf
sbb
iret
imul
pushf
movsl
fisubrl
test
pop
push
in
push
mov
fcoms
cmp
fs
aas
shlb
lock
sbb
xor
inc
inc
mov
enter
movsb
scas
xchg
dec
mov
sbbl
cmp
incb
push
or
dec
les
sbb
inc
and
gs
adc
pop
lcall
data16
sarl
mov
ds
xor
les
mov
lods
mov
mov
clc
push
inc
mov
call
dec
jecxz
sub
mov
sub
sub
pop
lret
push
jne
test
jg
fmuls
pusha
or
ret
fistpl
adc
lret
push
popf
loop
jle
fcompl
std
pop
dec
push
cmp
sub
push
mov
out
sub
add
jbe
mov
in
pop
adc
ja
outsl
popf
mov
pop
mov
iret
and
stos
lods
in
jae
out
aad
js
sub
enter
mov
or
inc
dec
sbb
cwtl
mov
mov
mov
pushf
dec
jo
orb
push
dec
dec
mov
mov
pop
jl
fidivs
scas
mov
pop
cli
ljmp
xorl
js
dec
adc
mov
mov
jl
iret
cmc
scas
inc
bnd
loope
imul
inc
scas
bound
bound
das
xor
aam
mov
dec
sbb
lods
lcall
pop
lret
mov
bound
cmp
pushf
xchg
pop
mov
xchg
emms
or
dec
adc
repz
add
pop
sub
dec
mov
push
add
sub
xlat
divb
mov
faddl
and
shrb
push
mov
popaw
cmpsl
dec
adc
aas
cmc
mov
jnp
mov
dec
fidivrs
mov
push
cs
ja
dec
push
push
in
leave
pusha
jae
cmp
push
js
sbb
je
jmp
sbb
loopne
pusha
scas
dec
mov
insl
hlt
stos
mov
test
scas
movsb
test
ja
sahf
mov
xchg
mov
sub
daa
aam
sahf
xchg
cmp
fdivl
shlb
or
inc
mov
cli
iret
in
fcompl
mov
stc
inc
pop
mov
in
insb
int
test
scas
adc
fnsave
xchg
andl
lahf
inc
add
cmp
cli
dec
jp
icebp
sbb
lds
pop
movsb
ja
mov
dec
js
push
mov
cmp
jmp
xchg
pop
fistpl
out
subb
in
cmp
mov
mov
pop
leave
or
pushf
stos
xor
imul
push
addr16
cmp
fsub
rclb
add
fistl
imul
rsm
inc
xor
sbb
push
call
xor
fbstp
fbstp
stos
imul
lcall
jae
repnz
lret
fidivrs
jae
cmp
mov
cwtl
loopne
pop
pop
rcrl
xor
xor
mov
stc
bound
push
xchg
adc
jg
cltd
rclb
xchg
test
test
cmp
test
xor
jnp
mov
add
fisttps
mov
and
popf
xchg
iret
lea
cmp
dec
add
or
test
icebp
push
jecxz
mov
aas
push
sbb
lods
sub
je
mov
mov
sub
rcrb
push
dec
mov
pop
repz
shlb
cld
xchg
cmp
jno
pop
jl
jno
out
inc
sbb
pop
mov
ds
imul
pop
scas
or
inc
mov
jmp
fldt
xor
mov
pop
xchg
lahf
or
sbb
fdivrp
push
xorb
loopne
sbb
pop
xlat
lea
xchg
test
jne
cmc
call
pop
ds
shrb
push
outsl
xor
cwtl
lret
rdpmc
cmovge
jnp
add
push
cmpsl
incl
inc
lret
inc
mov
mov
and
sub
aam
loop
push
mov
ret
iret
adcl
fidivrs
cmp
jnp
mov
mov
lcall
sbbb
dec
movsl
test
pushf
dec
insl
mov
in
dec
lock
popf
sahf
shrl
pop
mov
adc
adc
cmpsb
in
cltd
sub
rclb
and
xchg
pop
stc
movsl
ret
and
xchg
cmc
je
add
sub
and
ret
bound
lea
mov
and
rcrl
leave
int
pop
test
dec
push
sbb
push
sbb
pop
test
adc
dec
call
nop
dec
cld
lcall
aad
and
cmpsl
or
aas
gs
cmc
sbb
mov
mov
outsl
xchg
nop
xor
jno
mov
lds
loope
test
sbb
pop
add
test
inc
es
and
fdivr
dec
dec
daa
adc
ss
jae
pop
inc
mov
nop
pushf
add
pop
call
sbb
push
shrl
pop
dec
dec
stos
jp
sbb
roll
pop
addr16
data16
in
loop
dec
in
mov
test
cmp
dec
addr16
push
jns
pusha
jne
sahf
shrb
jno
orl
push
pop
sub
jne
jae
or
cltd
nop
mov
jnp
and
xchg
jb
pop
mov
mov
loope
test
fs
add
add
xchg
lret
add
mov
pop
divps
movsl
nop
inc
ret
inc
pushf
push
mov
push
jl
fbld
mov
inc
add
call
ljmp
addl
inc
popa
int
inc
fwait
popa
add
testl
jge
lods
and
inc
sub
rolb
sub
test
xchg
gs
scas
push
or
test
hlt
inc
arpl
stos
jmp
sub
insb
mov
mov
or
xor
add
js
or
mull
mov
ss
jl
fimuls
sbb
inc
mov
popf
shl
clc
popa
xor
add
sbb
push
enter
je
insl
sbb
lea
movsb
sub
fcoml
lret
and
cli
mov
pop
das
hlt
sahf
sahf
adc
popa
cmp
pop
aas
sbb
cmpsb
add
in
mov
icebp
leave
add
push
in
jbe
test
ret
leave
pop
mov
cmp
ds
outsb
ret
xor
divb
stos
mov
pop
mov
cmp
in
shlb
std
xchg
test
imul
xchg
outsl
loope
andl
xchg
test
mov
nop
xor
leave
aam
fisubrs
aas
jmp
imul
and
dec
gs
jecxz
sti
shrb
bnd
push
in
je
out
loop
jbe
loop
int
insl
outsb
mov
push
loope
adc
lods
mov
clc
mov
nop
xor
ret
leave
add
or
mov
sbb
mov
and
dec
sbb
mull
xchg
iret
shlb
dec
loopne
cmpsl
adc
shl
stos
es
lods
pop
sti
aaa
pop
in
sub
pop
pop
pushf
in
imul
jl
or
mov
adc
pop
out
rorb
int
je
fs
push
jg
mov
pop
mov
adc
flds
outsb
pop
movsb
cmp
push
dec
cltd
and
cli
pop
cli
notb
xor
aad
xchg
mov
ret
addl
and
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
mov
xchg
jp
shlb
add
mov
cltd
jnp
and
test
aas
dec
pop
popa
adc
inc
jp
sub
jg
sbb
jae
dec
add
stos
push
and
fidivs
fucom
test
mov
mov
lahf
pusha
imul
gs
adc
pop
mov
cwtl
mov
es
jg
or
popf
jecxz
mov
out
add
pusha
sbb
out
nop
push
xchg
fwait
push
aad
or
jmp
mov
insl
sbb
push
lret
jo
dec
int
pushf
mov
repz
inc
cmp
in
dec
out
test
xchg
mov
mov
and
mov
pop
incl
adc
mov
pushf
mov
push
mov
xchg
aas
cmp
inc
leave
xor
shrl
jno
out
shlb
mov
js,pn
sub
cwtl
xchg
out
inc
mov
aas
xor
es
cli
pop
arpl
mov
jb
and
dec
cmpsb
dec
imul
lea
cli
push
shlb
dec
jp
sbb
add
imul
outsl
jecxz
lret
stc
mov
fdivrs
js
into
js
pop
mov
mov
mul
ret
outsb
aam
les
push
loope
cmpsb
pop
shl
sub
adc
jne
repnz
cwtl
insl
js
test
lods
xchg
in
stos
pop
hlt
add
fwait
jmp
ja
jns,pt
add
adc
push
mov
outsb
out
push
pop
sub
idivb
int
add
mov
lahf
jb
jb
stos
imul
pop
adcb
sarb
lret
pop
cld
xorb
or
fcomps
cmp
stos
scas
sbb
divb
mov
add
fcmovnb
cmp
imul
mov
ret
adc
rcrb
out
push
fcmovnu
xor
leave
dec
or
stc
inc
adc
out
sbb
xor
lods
xor
fimull
sub
mov
xchg
mov
push
outsb
aam
sbb
fdivrs
xchg
lods
sub
out
je
cwtl
and
pushf
cwtl
push
mov
stos
adc
cld
push
aaa
jg
scas
ja
or
cld
outsl
push
mov
adc
aad
test
or
dec
test
call
push
sbb
fidivrs
rcr
shlw
insl
rcrl
jg
mov
inc
mov
mov
xchg
outsl
lock
pop
pop
xor
adc
sub
pushf
xchg
repnz
mov
jb
jg
xor
loop
inc
xor
filds
add
lods
xchg
in
mov
mov
test
cs
daa
mov
mov
insl
lock
mov
leave
dec
adc
test
push
lcall
xchg
testl
mov
imul
xchg
enter
in
inc
push
sub
pop
mov
jno
sbb
decb
jae
dec
ja
call
outsb
fsub
outsb
lods
jmp
sbb
pop
jno
pop
dec
in
divl
mov
ficompl
push
dec
aaa
mov
or
fistpll
sahf
iret
cli
into
stos
dec
fsubr
push
xor
xor
and
jg
sbb
cmp
xchg
fwait
sahf
mov
sbb
popa
fsub
fistl
push
in
cmp
in
or
sbb
dec
adcl
xchg
mov
inc
loopne
mov
pop
or
xor
mov
jmp
ja
cmp
mulb
out
sbb
test
cmp
in
inc
sub
ja
je
dec
movsb
loope
sbb
push
fldln2
dec
aad
jns
jo
or
leave
sub
loopne
dec
mov
popa
shlb
scas
das
sub
popa
and
mov
inc
or
decl
in
and
cs
gs
mov
movsb
dec
sub
shll
push
mov
in
scas
xchg
sbb
push
jg
clc
shll
mov
fbld
lahf
cmp
push
add
cmp
outsl
sbb
ljmp
pusha
stc
out
fdivs
stos
add
inc
inc
loope
aad
in
aam
mov
call
push
enter
adc
dec
adc
popa
mov
gs
mov
cmp
pop
sub
jno
lods
call
push
mov
push
imul
lret
ret
mov
dec
jmp
mov
or
push
pop
cld
inc
push
into
push
cs
inc
xlat
das
xor
xchg
shl
xchg
stc
or
mov
pop
push
mov
mov
mov
mov
ds
stos
inc
ljmp
dec
jb
and
ljmp
xchg
pop
jl
fadds
pop
adcb
js
pop
out
test
dec
jae
adc
fwait
and
imul
cld
sub
test
mov
add
inc
and
push
pop
or
out
aad
mov
dec
les
mov
das
jnp
mov
ljmp
arpl
pop
icebp
jecxz
xlat
les
mov
xchg
ffree
lods
jno
pusha
xchg
pop
jmp
xor
and
mov
arpl
jge
and
inc
out
roll
sub
rolb
nop
add
fnsave
jle
rclb
fsubr
lahf
xchg
inc
int3
pop
mov
sub
loop
movsl
cmp
xchg
inc
les
movsb
sbb
les
sbb
or
std
cltd
cmp
jl
shlb
inc
lahf
insl
sbb
add
and
loopne
or
mov
push
xchg
leave
popa
daa
insl
out
int
xchg
sub
sub
movsl
dec
xchg
out
mov
int
pusha
test
mov
xor
mov
divl
cmovbe
dec
test
sbb
out
xchg
popa
dec
aaa
inc
mov
xor
jb
test
jle
add
xchg
jge
jmp
cli
clc
imul
call
subb
pushf
jno
fisubl
mov
cmp
shrl
int
push
ficomps
repz
xchg
mov
or
or
jecxz
cmp
mov
adc
push
int
hlt
jns
aas
int3
cmc
adc
xorb
xchg
adc
out
aad
add
lods
and
cs
push
xchg
push
cmp
daa
fnstsw
repz
jge
in
stos
inc
ja
push
mov
mov
sbb
dec
xor
mov
cmpsb
in
sub
mov
jo
sub
adc
cmp
or
xchg
adc
cmp
add
sub
leave
mov
sahf
xchg
stos
daa
mov
push
lods
xor
test
sbb
shrl
cmpsb
push
jp
ljmp
jnp
pusha
push
je
les
in
fcomi
pop
jae
mov
push
outsl
ret
xchg
push
push
xchg
mov
inc
mov
pop
insl
clc
in
inc
fidivrl
ret
mov
or
dec
xor
out
lods
jg
iret
cli
or
test
jns
sub
fbstp
clc
in
xchg
push
mov
mov
fidivs
mov
xor
and
jge
mov
add
movsl
adc
jbe
pop
cmc
xor
orl
repz
ss
jg
sbb
dec
xor
jl
lea
test
cmpsb
or
push
push
in
lret
scas
or
push
rclb
jae
inc
mov
xor
pusha
xchg
inc
sbb
sub
jae
jle
add
mov
mov
in
stc
lods
inc
decl
cli
rcrb
cmp
loope
filds
xor
loopne
clc
jae
movsl
scas
in
loopne
jg
fidivrs
loopne
icebp
scas
out
mov
fwait
adc
sub
jbe
cmp
icebp
rorb
mov
aas
aam
sub
push
pop
adc
xlat
negl
xchg
pop
jno
scas
adc
test
inc
clc
xor
adcl
nop
lret
jbe
jmp
sub
mov
inc
sub
and
cmp
mov
je
jb
les
pop
int3
repz
inc
shl
outsl
ljmp
add
mov
adc
cmp
fstl
jno
mov
jmp
adcb
jmp
pushf
dec
inc
cmp
push
dec
loopne
addr16
adc
sbb
in
ret
mfence
mov
inc
shl
ds
jb
ja
shl
jg
xlat
pop
sbb
dec
add
nop
mov
mull
add
mov
sahf
adc
mov
mov
repnz
repz
mov
push
dec
push
fdivrp
pop
out
lret
xchg
sub
neg
jmp
icebp
addb
aaa
inc
imul
mov
mov
cmpl
sti
and
push
mov
dec
clc
test
add
aas
pop
add
or
jbe
or
push
jnp
jle
or
or
xchg
sbb
fcoml
push
sbb
mov
imul
rorb
and
sub
ret
sbb
pop
inc
sub
hlt
into
pop
sub
and
stos
imul
push
ljmp
ja
imul
aad
outsb
shll
dec
scas
pop
testb
mov
mov
iret
enter
aas
popl
add
mov
pop
jae
mov
scas
je
std
icebp
repz
mov
push
cltd
jge
cmc
inc
jns
jbe
jns
sub
push
sub
pop
add
add
addb
icebp
enter
cmp
inc
jbe
sar
negl
xor
or
add
inc
bound
inc
in
push
xchg
xchg
in
push
movsl
lcall
popf
jne
push
pop
or
iret
enter
stos
stos
ljmp
mov
in
push
lods
pop
sbb
in
dec
xchg
and
push
ss
adc
stc
xchg
push
movsl
pop
jg
lods
dec
orl
add
jmp
scas
mov
lret
pop
inc
sbbb
clc
loopne
outsb
sub
xor
adc
xor
data16
imull
test
or
iret
cltd
mov
cwtl
push
xchg
and
inc
test
push
xor
imulb
fidivl
test
cmp
lods
lds
outsb
and
frstor
aas
inc
inc
dec
inc
inc
add
sub
xchg
pop
outsb
sarb
sub
sub
ja
lds
out
movsl
jl
loop
lret
out
lcall
or
std
rcr
inc
mov
adc
mov
inc
aam
fwait
in
and
sub
sarb
xchg
or
test
and
gs
xchg
jo
pusha
mov
push
repnz
and
movsl
shrb
repnz
leave
in
cltd
lea
orps
std
cs
lea
and
mov
pop
decb
push
int3
or
or
rorb
mov
into
ret
cwtl
or
icebp
mov
lret
into
dec
call
outsl
in
xchg
int3
cmp
stos
insl
and
cmc
lahf
stos
cmp
cmc
dec
stos
jae
insb
jns
dec
pop
add
ret
das
xor
push
add
adc
leave
lds
stos
jg
jecxz
inc
mov
repnz
sub
lahf
xchg
test
jecxz
fcomps
pop
adcb
pusha
cltd
nop
push
xor
incl
and
or
cmc
push
push
imul
pop
movsl
lods
add
lds
dec
add
pop
pushf
test
out
je
sbb
fisubs
dec
es
stos
sbb
jle
lcall
fucomp
xchg
fnstsw
inc
aas
lds
or
pop
cmp
xor
insl
jecxz
ret
cli
or
adc
add
shlb
push
mov
mov
mov
pop
lods
call
push
dec
in
cmp
leave
mov
movsb
aas
rorb
add
mov
jno
movsl
xchg
call
lock
push
jle
sub
lcall
cwtl
xor
push
pop
out
jl
mov
jmp
in
cmp
ljmp
xor
rcll
mov
rcrb
mov
lahf
lret
lcall
fcmovnb
jb
xor
push
dec
jle
mov
into
andl
cs
nop
inc
loopne
scas
insb
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
push
push
inc
push
movsl
mov
push
repz
inc
mov
mov
stos
lret
loopew
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
