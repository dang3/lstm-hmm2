push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
xlat
lds
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
fldcw
xchg
ljmp
mov
fs
hlt
or
in
aam
sbb
js
pop
cli
push
inc
vunpcklpd
cmpsb
mov
jl
ds
dec
into
or
cs
lock
inc
add
sbb
mov
jge
adc
lods
sub
cmp
xorl
arpl
adc
dec
add
xchg
or
out
push
add
mov
mov
inc
fildll
add
sbb
fisubrl
sbb
cld
mov
ss
arpl
int3
loop
pushf
cmp
cmp
pop
clc
xlat
jg
inc
adc
outsb
cmp
push
movsl
fisubrs
imul
jg
mov
imul
rcrb
and
dec
add
jns
iret
je
add
iret
in
popf
outsb
ss
daa
imul
sbb
fstpt
std
fdivrp
std
pop
mov
jno
sub
int3
sarb
shrl
mov
jno
or
xchg
cmp
push
mov
pop
dec
add
and
mov
mov
repz
mov
pushf
xchg
pop
jbe
dec
insb
pop
sub
sbb
fs
jb
xchg
iret
insl
sub
insb
shl
insb
inc
sub
inc
aaa
pop
add
cmpsb
orl
pop
xchg
js
jne
int3
bound
xchg
lods
pop
xor
and
mov
mov
sub
sbb
jl
lds
push
in
xor
std
ficoml
cmpsb
pushf
scas
leave
int3
aaa
ret
mov
cmp
sub
push
jns
sbb
xor
cmp
in
xchg
and
daa
mov
fcmovnb
jo
mov
jne
loope
icebp
mov
sbb
rep
das
aaa
sub
inc
inc
push
pop
rol
je
sub
decl
in
hlt
test
pop
xor
jle
out
test
jp
cli
es
inc
int3
cmpsb
push
or
out
sub
imul
xchg
inc
fs
push
dec
aad
push
add
xchg
cmpsl
adc
and
xchg
and
pop
dec
mov
xchg
mov
adc
shrl
mov
dec
es
mov
addr16
jmp
mov
call
test
dec
scas
cltd
push
sbb
cmp
mov
jecxz
push
ljmp
push
fists
loop
fs
jne
sub
adc
dec
sti
push
dec
mov
cltd
mov
mov
adc
mov
fmuls
dec
push
cmp
dec
jbe
mov
xchg
push
push
sub
icebp
push
enter
pusha
add
enter
imul
cmove
jb
mov
jp
ss
ja
arpl
outsb
inc
xor
shrb
loope
fldenv
cmp
ds
push
sahf
ret
inc
into
es
inc
or
data16
sub
fiaddl
loop
push
pop
inc
cmp
xchg
inc
xchg
push
cltd
mov
cmp
fucomip
addr16
rcr
jg
adc
jnp
ret
xor
sbb
sbb
or
testb
cmpsb
pusha
or
dec
movsl
leave
sub
push
mov
andl
jns
xchg
mov
mov
int3
popf
mov
mov
xor
or
pop
push
lcall
xlat
or
lea
ss
xor
or
add
xchg
push
jne
jge
push
inc
out
cmpsb
rclb
addr16
pop
ret
insl
sub
pop
fnsave
jno
mov
cmp
fsubl
mov
sahf
inc
mov
adc
pushf
ss
jmp
xor
and
ret
jmp
into
xchg
bound
outsl
bound
and
cmp
aam
out
jae
idivl
mov
mov
mov
add
imul
mov
pop
xchg
xor
insl
lods
push
xlat
inc
lret
xchg
out
lcall
fmul
fdivl
jnp
sahf
inc
or
dec
lahf
push
mov
mov
lock
adc
cmp
sbb
pop
ds
fisubs
gs
jns
jmp
jecxz
or
mov
mov
out
lods
int
mov
xchg
pop
pop
clc
test
push
and
add
call
repz
mov
jne
xor
imul
sbb
mov
scas
nop
loope
xchg
sub
or
cmp
je
mov
lods
xchg
aaa
mov
push
mov
cs
mov
or
out
stc
in
stc
dec
bound
cmp
cmp
xor
jle
sbb
icebp
test
ret
xchg
mov
mov
pop
dec
cmpsl
int3
repnz
and
pop
mov
lods
jbe
in
inc
sbb
dec
loop
pop
add
les
xchg
xor
out
in
popf
sahf
jae
pop
inc
sahf
push
insl
bound
movsb
cmpsb
xchg
lret
mov
pop
push
and
in
aaa
mov
ljmp
arpl
push
aas
cmp
adc
and
cmp
outsl
lea
loope
xchg
les
pop
notb
das
push
adc
pop
mov
mov
popa
mov
mov
addr16
sbb
push
inc
addr16
xchg
cmp
lret
cltd
or
xor
xor
push
pop
sbb
sbb
es
mov
mov
cmpsb
dec
cmp
ss
mov
dec
add
add
lods
xlat
test
out
in
test
addr16
push
dec
repz
call
and
aad
fstpl
lods
xor
mov
repz
mov
add
aas
repz
lods
repz
aaa
outsl
dec
lock
vpsllw
out
mov
and
cmpsl
leave
movsb
sbb
adc
std
pop
test
xor
int
cmp
mov
xor
enter
inc
fst
sbb
das
popl
push
enter
add
mov
outsl
insb
pop
sub
xchg
cmc
sub
pop
and
cmp
in
sub
cmpsb
into
push
inc
rcll
outsb
dec
fwait
fwait
jne
subb
push
inc
jl
lds
cltd
fcompl
leave
test
adc
pushf
test
cld
mov
xor
in
jbe
nop
sbb
dec
mov
xor
sahf
iret
not
mov
sbb
frstor
mov
sbb
add
jmp
leave
lret
inc
lahf
push
push
jo
jbe
lods
lret
fistpl
dec
jmp
add
cmp
inc
fnstenv
sahf
aaa
dec
push
push
sub
jmp
cmp
mov
push
sub
cmpsl
adc
cld
xchg
xor
cmc
aas
lock
imul
sub
xchg
das
mov
leave
inc
mov
lea
inc
popa
aas
jbe
sub
test
sbb
in
cs
cmp
shl
mov
sbbl
sarb
sbb
or
pop
sbb
xchg
inc
mov
movsb
pop
bound
repnz
pop
fistpll
lods
mov
adc
jnp
into
lods
faddl
xchg
mov
or
popf
jns
adcl
addr16
hlt
inc
xor
hlt
mov
or
dec
sti
push
in
pop
popf
ds
mov
xchg
arpl
cmpsb
jl
in
repnz
loope
mov
xor
clc
clc
js
and
ljmp
fdivl
jns
scas
sbb
pop
xchg
xor
dec
test
ret
mov
dec
outsb
nop
jl
mov
push
jecxz
dec
stc
hlt
sbb
mov
fisubl
pushf
cltd
jne
jle
sub
cmc
out
aam
ljmp
inc
in
into
cmp
loop
cmpsb
test
aad
add
repnz
lea
sub
std
addr16
ss
sub
cli
xor
dec
cmp
push
pop
mov
jns
stos
leave
sub
mov
pushf
out
ja
xor
dec
jmp
push
int
fimull
xchg
popa
pop
into
push
sbb
pop
stos
add
arpl
pusha
repz
lret
std
jno
push
hlt
mov
mov
mov
imul
push
filds
movsl
es
repnz
rep
inc
sti
mov
loope
and
clc
out
push
dec
out
mov
data16
ds
enter
add
add
ja
mov
js
and
imul
subb
mov
add
cld
add
push
add
ljmp
jbe
insl
repz
inc
je
jl
fwait
xor
in
rcrl
mov
adc
gs
aam
int
xor
adc
cmp
lcall
daa
popa
adc
cli
mov
push
stos
or
clc
popa
movsb
insb
push
repz
push
mov
int
mov
insl
jne
or
push
xor
dec
pushf
stos
repz
dec
or
repnz
in
pop
enter
jne
gs
movl
ds
enter
pop
adcb
inc
or
cmc
fsubp
imul
dec
int3
aas
stos
jle
outsl
dec
enter
and
cmp
fisubrl
stos
scas
jb
in
xor
cmpb
repz
xor
enter
imul
mov
push
add
out
sbb
gs
mov
add
sub
or
xchg
xlat
sbb
dec
movsl
adc
cmp
pushf
mov
pop
shrb
and
filds
push
fs
test
inc
shr
ror
lods
data16
push
jg
jne
jmp
vandpd
push
xor
mov
sbb
mov
lods
stos
cwtl
fldt
int3
add
pop
cmc
sbb
push
popa
mov
adc
in
lock
in
cmp
sbb
sbb
into
jae
jb
pop
mov
mov
dec
mov
or
rolb
mov
xor
nop
lret
std
inc
or
nop
xor
rclb
jge
lcall
jae
es
rol
or
push
out
push
in
xchg
dec
mov
stos
xor
mov
mov
xor
adcl
dec
fcoml
into
inc
out
ret
jb
mov
jp
mov
and
pop
shrl
stos
xlat
xchg
ret
lods
mov
lcall
xorb
addb
cltd
pop
cmc
push
mov
inc
push
pusha
push
lcall
in
cli
ss
popf
xorl
test
lcall
push
push
sahf
pusha
fmull
arpl
dec
jnp
pusha
fildll
std
push
pop
callw
lods
cmpsb
arpl
es
gs
lret
imul
dec
out
cltd
push
icebp
mov
push
daa
sarl
jno
sbb
adc
arpl
mov
int
or
mov
or
xchg
sub
mov
lcall
lds
add
and
and
ds
xor
mov
aad
imul
pop
insb
mov
cmp
pop
push
je
push
movb
sarl
push
sub
fdivrl
push
sub
jbe
mov
clc
jmp
jae
add
xor
aam
leave
stos
lahf
call
push
into
fwait
std
hlt
mov
ljmp
iret
mov
jo
jl
divb
roll
jmp
rep
pop
adc
shlb
jge
jae
test
inc
into
es
jnp
in
cmc
fsubp
in
pop
cltd
add
shlb
pop
xchg
fcomi
add
or
dec
aad
shll
sbb
and
test
in
addb
lret
ror
idiv
cli
xchg
test
and
sbb
fildl
sti
xchg
xorb
repnz
loope
addr16
jp
xor
inc
call
push
xchg
add
mov
fs
sbb
addl
test
push
leave
lret
dec
js
fs
cmc
mov
dec
and
pop
leave
push
outsb
sar
inc
aad
push
test
lods
adc
icebp
sub
inc
xor
mov
mov
xor
bound
shl
iret
mov
pushf
xchg
sub
push
or
jne,pn
rorb
rcrb
andb
ds
outsb
and
mov
cmp
push
pop
and
cmpsl
mov
inc
mov
xorl
sbb
jp,pn
or
xchg
cld
mov
loope
mov
sub
rcll
sbb
xchg
adcl
sarb
lods
inc
outsb
lret
jne
mov
mov
mov
mov
shl
es
stos
mov
sbbb
negl
clc
or
xchg
pop
xor
gs
and
jbe
fimuls
pop
dec
outsl
mov
icebp
adc
data16
mov
out
pusha
fcmovbe
cmp
mov
jle
cmp
push
pop
mov
popf
xchg
adc
repnz
stos
outsl
and
dec
mov
icebp
addr16
sub
aad
arpl
in
push
or
dec
mov
push
push
lock
scas
lods
push
lret
or
loop
pop
pushf
pop
je
stos
mov
xchg
mov
mov
dec
or
dec
fisttpl
or
xchg
leave
xor
xor
push
repnz
sbb
int3
out
aaa
imul
sub
xor
sub
inc
popa
sbb
dec
out
or
mov
dec
loope
test
pop
sub
pop
xlat
popf
xor
test
in
mov
mov
addl
stos
out
pop
lahf
pushf
xchg
outsb
jmp
imul
outsl
mov
pop
xor
lahf
push
in
sub
jp
fdiv
xchg
cmp
ja
repnz
pusha
das
mov
jne
dec
dec
lds
pop
inc
xchg
jmp
mov
adc
xlat
out
or
popa
call
push
sub
pop
mov
mov
jl
mov
fwait
lods
gs
dec
dec
mov
xchg
nop
cmpl
jmp
fs
and
cmp
mov
xchg
mov
stos
jae
imul
add
sub
push
call
xor
sahf
push
and
andb
sub
fcompl
addb
mov
xor
bound
enter
xchg
dec
fxam
ret
mov
xchg
xor
mov
add
cmp
xor
or
or
stc
dec
invd
movsb
jno
in
imul
push
out
push
sbb
add
lcall
ret
xchg
mov
and
cltd
and
sbb
push
dec
mov
jmp
add
rorl
jo
and
and
or
push
cmp
xchg
enter
hlt
sub
sbb
out
cmp
jmp
outsl
int
movsl
pop
ja
pop
into
cmpsl
inc
scas
movsl
out
repz
bound
xlat
aas
push
sub
jp
stc
inc
inc
fimull
leave
sub
pop
pop
jmp
sub
push
or
dec
mov
mov
inc
ljmp
dec
outsl
adc
add
add
fcoml
push
push
xor
aaa
mov
cmc
flds
fistpll
mov
or
sbb
push
sub
push
mov
mov
stos
bound
cmp
leave
sti
sbb
mov
lret
call
fimuls
inc
adc
roll
icebp
testb
popf
les
jb
jb
inc
or
jle
and
mov
pushl
inc
cs
subb
xor
pop
mov
or
sti
fnstcw
lcall
adc
lock
jo
sub
add
mov
mov
sub
cmpsb
icebp
mov
jo
stos
outsl
or
add
call
pop
sub
dec
enter
pop
rol
sub
scas
andb
mov
sarb
push
or
xor
sub
orb
das
add
dec
dec
outsb
bound
xlat
or
stc
shl
cs
add
mov
test
cmp
push
mov
pop
js
push
pusha
dec
or
xchg
jl
cli
insl
mov
adc
sbb
insl
divl
jno
testl
hlt
push
jecxz
shrl
sbb
call
sarb
mov
and
lcall
mov
aas
daa
or
sbb
sub
xchg
rorb
popf
jg
fs
icebp
add
bound
fmul
aad
test
lock
fwait
add
imul
push
mov
sahf
sbb
push
cmpsb
pop
and
adc
mov
lahf
cmpsl
ja
aam
movsb
xor
mov
subb
xor
or
jecxz
lahf
popf
stc
mov
pop
cvtpi2ps
pop
popf
adc
cmpsl
fsts
sbb
xchg
jne
xchg
inc
and
and
xchg
movsb
xchg
sbb
pop
xor
fisttpll
xchg
enter
xor
push
in
les
xor
fsts
pop
mov
lds
ret
mov
cmp
push
mov
dec
lds
inc
mov
hlt
sbb
sub
js
add
mov
loopne
push
ret
inc
xchg
fs
xlat
lods
sahf
xor
lret
aas
out
pop
push
xchg
jnp
mov
pop
add
mov
add
test
inc
sub
dec
jle
ss
retw
out
or
sub
and
jns
mov
test
iret
cmp
add
mov
xchg
jbe
adc
sbb
stc
adc
add
repnz
imul
mov
stos
out
push
pop
sbb
fs
aaa
lds
jg
cmpsl
sub
in
pop
sbb
push
and
sbb
xorb
ret
xor
dec
data16
jmp
in
mov
mov
and
or
inc
adcl
sub
or
jmp
int
repz
test
fwait
or
jl
xor
mov
push
xchg
addr16
or
fs
xor
int
inc
xchg
inc
pop
imul
cmpsb
sub
inc
mulb
int3
mov
addr16
push
or
rcll
jne
push
mov
xor
jb
rclb
imul
sbb
dec
fnstsw
mov
popa
leave
pop
fsubl
ja
jno
jne
jno
pop
stc
push
and
mov
das
push
or
cmp
jp
jbe
lahf
pop
lock
jecxz
lret
mov
in
dec
add
push
arpl
std
xorb
int
filds
mov
test
and
or
sbb
dec
pop
ret
mov
dec
or
xchg
fs
mov
lock
inc
lods
pushl
loop
jle
add
test
or
pop
sub
mov
into
lods
dec
inc
leave
cmc
arpl
ret
mov
loope
lcall
pop
sub
xchg
adc
sbb
cmpsl
test
pop
dec
inc
cltd
mov
cli
in
pop
imul
xor
scas
sbb
lock
sbb
mov
pop
mov
ja
loop
mov
subb
fwait
insb
push
add
mov
inc
xchg
mov
incl
call
dec
mov
xchg
mov
leave
lods
dec
dec
adc
pop
mov
push
ja
pop
inc
jae
adc
mov
shll
xchg
mov
cmp
and
sbb
lds
fucomip
les
mov
inc
dec
dec
gs
push
sub
movsb
dec
push
aas
mov
popf
dec
lret
cmp
mov
out
fadds
lcall
lahf
inc
shl
inc
xchg
mov
stc
inc
fcoms
daa
jnp
stos
daa
xor
cmp
mov
imul
sub
mov
mov
leave
shlb
push
xchg
aas
sub
sbbl
rorl
inc
mov
dec
jno
scas
scas
cmp
imul
sbb
fisubrs
scas
cmp
lahf
jnp
xor
dec
adc
and
cld
mov
push
addr16
lahf
imul
push
scas
fdivr
rorl
add
sub
outsl
sti
ret
pop
xchg
nop
fistpll
sbb
sbb
dec
hlt
inc
dec
neg
mov
out
sub
in
sbb
lods
jge
add
xor
adc
cmp
bound
sahf
daa
aas
inc
dec
inc
xchg
push
xor
cmp
inc
jg
hlt
daa
and
cmc
in
mov
pop
fnsave
sbb
xchg
stos
fsubrl
mov
mov
mov
xchg
xchg
sbb
add
lret
movb
js
popf
shll
mov
aam
out
mov
aas
jns
xchg
mov
es
pop
or
dec
movsl
pop
push
in
in
fwait
inc
adc
in
inc
xchg
enter
inc
lcall
out
loope
mov
ja
jle
adc
cmp
insl
xorl
ss
imull
dec
int3
lock
jnp
iret
push
cld
or
mov
imul
scas
call
addb
jns
sub
rcll
inc
xchg
jae
xchg
jb
mov
jnp
pop
xchg
mov
aas
push
sahf
sub
cltd
jns
mov
inc
mov
arpl
lret
movsl
adc
adc
mov
int3
out
les
xlat
popf
bound
insl
bound
insl
arpl
adc
lods
ret
lods
sbbl
pop
repnz
jbe
std
add
icebp
loop
mov
rorl
es
addr16
push
scas
hlt
inc
xor
les
fwait
shrl
cmp
adc
jne
xor
dec
xchg
adcl
cmovl
push
dec
pop
pop
data16
add
dec
scas
mov
xchg
flds
ljmp
hlt
add
adc
mov
xor
pushf
dec
icebp
ja
fldt
or
ds
or
xchg
xchg
clc
pop
sahf
xchg
push
es
pop
sbb
sbb
stos
fcmove
nop
xchg
mov
into
cli
mov
in
int3
adc
mov
aaa
fsub
into
ret
push
adc
hlt
mov
jecxz
push
push
xchg
loop
cmpb
iret
dec
sub
inc
sub
push
sbbb
dec
add
in
movsl
mov
idiv
lods
mov
push
or
push
fidivs
popf
je
call
push
daa
jge
pushf
jbe
xchg
aad
lret
xchg
in
cmpsl
xor
jae
cld
stos
xor
popa
fisttps
loope
fists
lahf
pop
jnp
fcompl
popf
cmp
cld
je
jg
sub
loop
inc
lret
xchg
fisttpl
cmc
jecxz
aaa
xchg
cmp
leave
stc
inc
mov
push
loop
cmp
loope
in
add
stc
pop
adc
or
mov
in
xchg
inc
jne
dec
sti
mov
cmp
mov
cmp
mov
shl
inc
je
jle
mov
sub
ja
scas
jns
mov
inc
push
mov
add
sub
dec
jl
sbb
stc
sbb
or
loope
sub
jb
cltd
jl
jo
insl
int
sbb
in
loop
sbb
add
call
cmpsl
sahf
sub
jno
sub
cmpsl
mov
pop
pop
mov
in
cmc
jbe
dec
and
jl
fnstcw
or
and
xchg
out
push
push
jb
push
xorb
and
not
dec
mov
cmp
int3
setle
cld
stc
adc
push
push
mov
mov
xchg
sub
aam
test
or
inc
cld
jne
mov
repnz
imul
in
test
pop
filds
sbb
pop
fidivl
xchg
or
bound
cli
mov
cmp
sbb
xor
cwtl
mov
sub
adc
js
fimull
jp
xchg
xchg
out
cs
imul
mov
inc
jo
in
mov
cli
testl
loope
outsb
out
rcr
push
add
dec
les
fildll
loopne
xchg
mov
adc
mov
pusha
dec
xchg
pop
loope
cld
rol
add
and
std
imul
les
or
dec
ficoml
aaa
mov
or
aas
jne
and
mov
rolb
mov
loope
f2xm1
out
cmc
xchg
push
jge
push
pusha
cmp
push
jae
or
sub
or
dec
mov
adc
cmp
mov
stos
jecxz
dec
lods
pop
lds
adc
mov
fstpt
shl
ret
bnd
or
js
scas
sub
out
ror
ljmp
adc
jmp
stc
shll
pop
shll
inc
lods
push
inc
fwait
sub
push
push
pop
imul
ret
sbb
inc
cltd
sbb
iret
mov
xchg
aas
jb
add
stos
xor
sub
sub
les
and
jecxz
pusha
mov
xor
dec
inc
mov
test
imul
popf
iret
and
fimull
ret
xor
mov
push
and
mov
xor
jbe
mov
roll
filds
outsb
pop
sub
test
cmpsb
or
hlt
pop
aam
jge
jl
jne
popf
movsb
mov
push
dec
cmpsb
outsb
mov
repnz
inc
shl
cmp
inc
cmc
dec
outsb
adc
inc
push
js
ret
mov
daa
fdivl
add
inc
enter
mov
arpl
mov
imul
dec
cmpsl
mov
jbe
xor
dec
xor
fcomp
mov
add
adc
dec
in
ds
insb
jne,pt
pop
imul
fcom
push
cmc
push
add
or
aad
clc
icebp
pop
cmp
sub
hlt
push
lods
mov
and
pop
lds
repz
pop
mov
mov
pop
out
sbb
fsubr
mov
add
jae
mov
int
loopne
fdivrl
or
scas
imul
int3
in
fsub
fptan
or
xchg
aaa
mov
push
lods
shll
outsb
movsb
or
jo
shrl
leave
add
loop
fisttps
rcrl
imul
arpl
insl
ret
pop
stos
xor
xchg
scas
pop
xor
lret
ljmp
subl
push
push
les
sar
in
mov
fsubrl
pusha
xchg
lods
insb
jmp
out
lock
xchg
xlat
push
clc
xchg
jne
xchg
fisubl
xor
inc
pop
popl
iret
shll
mov
out
adc
mov
inc
pop
out
add
or
xchg
loop
or
lods
movsb
ljmp
fucomi
and
movsb
cld
pop
gs
scas
divl
xor
out
xchg
popa
loopne
shlw
push
jecxz
sbb
cmpsl
push
inc
dec
jno
sbb
data16
loopne
jbe
xchg
pop
call
pop
mov
xchg
xchg
fisttpll
rcrb
adc
cmp
mov
cmp
push
xchg
and
sahf
lret
adc
add
popa
push
mov
cld
jge
int3
mov
cmpsl
stos
push
inc
adc
std
pushf
rcll
dec
jnp
inc
push
movsb
aam
mov
mov
fwait
mov
lock
pop
adc
fdivrp
adc
mov
xor
out
neg
je
mov
cmp
mov
cmp
xor
sub
push
sarl
xchg
lcall
mov
or
mov
mov
cmc
inc
adc
add
pop
inc
inc
xchg
push
jecxz
push
ret
push
std
fildl
shll
mov
adc
dec
or
sub
mov
sbb
fldenv
inc
xchg
rol
call
dec
lock
aam
mov
ja
inc
aas
xchg
push
dec
xlat
mov
insb
gs
in
cmp
lods
or
stos
aam
jae
and
mov
xchg
cltd
jns
jne
idivl
aaa
data16
mov
jge
stos
jecxz
add
sti
in
sbb
push
and
inc
mov
aaa
enter
test
push
pop
lods
mov
les
loope
aaa
inc
mov
aad
and
loop
inc
icebp
out
testl
mulps
jl
lahf
jbe
dec
and
lods
mov
mov
movsl
outsb
adc
dec
icebp
dec
shld
fcmovne
mov
filds
mov
adc
push
mov
insb
clc
xchg
dec
movsb
jno
test
sbb
icebp
aad
jne
cmc
mov
ds
jmp
or
sub
cltd
mov
test
ds
dec
jno
inc
out
clc
mov
mov
cmp
or
lcall
mov
into
mov
mov
stos
into
aaa
adc
lcall
xor
addr16
xchg
leave
pop
push
mov
xchg
ja
mov
and
cltd
mov
inc
sarb
or
rcll
stc
hlt
vmulsd
dec
cs
pushf
mov
push
xchg
xchg
andb
int3
int
sub
push
jne
pop
sbb
addr16
gs
stc
push
add
nop
jne
sbb
cmp
jg
test
gs
jl
insl
push
les
sbb
xchg
out
loop
test
test
dec
adc
lods
sub
addr16
addr16
dec
mov
cmp
dec
aas
mov
push
push
cmpl
jle
repnz
imul
adc
leave
sub
cmp
mov
cmp
movsb
cld
jns
sbb
aaa
dec
cmp
cmc
cmp
loop
and
cmc
imulb
mov
mov
add
mov
and
lcall
xchg
je
clc
ljmp
mov
aaa
adc
pop
jnp
pop
sub
sti
aam
lods
push
inc
jecxz
pop
sub
adc
push
and
mov
std
adc
or
jnp
repnz
mov
xor
xor
aad
es
xor
add
jne
push
int3
rcl
xorl
cmpl
inc
fxch
testl
mov
push
pop
stos
bnd
hlt
jb
stc
loop
bound
push
movsb
les
cvttps2pi
outsb
cmpsb
or
test
js
leave
movsb
mov
in
ret
push
mov
popl
sbb
jbe
sub
lods
xor
or
mov
cmc
push
sub
dec
mov
cli
push
mov
adc
iret
push
ss
dec
sub
repnz
in
pop
movsl
pusha
lret
out
lret
out
out
xchg
adc
mov
xor
pop
mov
mov
pushf
jge
or
out
lret
jb
movsl
jnp
insb
test
mov
xor
fs
fs
loope
xchg
sub
enter
loopne
sbb
jnp
or
clc
mov
cmp
jecxz
clc
jmp
lret
pushf
dec
cmc
jmp
movsl
rorb
jl
jo
rcrb
cmp
out
mov
arpl
into
out
mov
inc
sbb
sub
inc
mov
push
or
mov
mov
xor
dec
out
jecxz
cmp
sub
sub
sbbl
arpl
cmp
ljmp
push
pop
fs
mov
das
insb
out
lds
adc
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
dec
pop
loopne
jl
dec
pop
jl
xchg
cmp
xchg
mov
test
or
into
shll
cli
lret
loope
lret
je
arpl
aaa
sub
xor
dec
mov
std
jno
lret
mov
stc
adc
je
xor
mov
test
clc
adc
mov
iret
xchg
ror
vxorps
hlt
cmp
in
cmp
shrb
inc
bound
call
inc
lahf
int3
lock
mov
push
clc
sti
ljmp
outsl
push
inc
cmp
int3
jns
popa
pop
ss
cwtl
dec
sbb
mov
scas
fwait
cwtl
filds
enter
pop
movsl
popf
mov
add
mov
push
mov
xor
pop
les
pop
mov
mov
xchg
xchg
sbb
mov
mov
imul
popa
pop
push
icebp
push
imul
repz
inc
in
mull
iret
js
das
and
mov
lret
ret
push
push
insb
lret
jl
sbb
clc
cmp
xor
arpl
sbb
pop
jno
adc
repz
in
hlt
jmp
ljmp
out
push
mov
mov
add
mov
jbe
mov
xor
pushl
mov
fwait
mov
push
aaa
or
out
lea
add
sub
repnz
and
imul
mov
mov
cmp
lahf
scas
in
dec
mov
data16
add
jg
sub
fdivs
jge
inc
rcl
pop
mov
xchg
xchg
pop
mov
mov
popf
inc
pop
fsts
repz
fiadds
push
dec
mov
sub
lods
repz
ret
mov
and
lcall
push
fistl
xchg
xor
hlt
cltd
aaa
mov
and
inc
mov
mov
rorb
inc
sahf
cmpsl
popf
pusha
inc
fildll
js
mov
fdivrp
mov
pop
ja
lea
add
stos
dec
scas
fisubrs
scas
in
lret
cwtl
test
loopne
mov
fnstsw
push
lret
and
pop
addr16
xchg
je
mov
hlt
jnp
mov
dec
mov
sbb
and
add
add
ret
pop
push
stc
jecxz
xor
pop
fdiv
mov
icebp
movsb
call
push
mov
or
xor
mov
inc
or
sahf
xor
xchg
jg
pop
cmp
inc
nop
cld
test
jl
pop
xor
icebp
mov
outsb
in
cmpsl
sub
and
iret
sbb
sarl
add
add
dec
and
shrb
cmpsb
sbb
mov
orb
aas
popf
out
sub
mov
push
mov
mov
stos
shrb
inc
aas
jecxz
mov
fwait
cmp
dec
out
in
mov
jle
and
jmp
mov
pop
pushf
jnp
cltd
lds
jno
int3
push
idiv
sub
mov
pop
adc
sbb
pop
int3
aaa
inc
sti
mov
mov
jo
lock
std
mov
mov
fs
std
shl
pop
xor
ret
inc
jmp
add
mov
lret
pusha
sarb
inc
gs
sbb
in
cmp
xchg
aaa
mov
xlat
lock
loope
mov
add
insb
sub
adc
movsb
inc
repz
pop
dec
jge
clc
or
ja
es
ds
int
lods
dec
out
dec
outsl
mov
mov
ja
inc
aam
jno
pop
jae
adc
mov
ja
lods
je
jb
push
loopne
cmc
int
cwtl
xor
ret
cmp
stc
sub
mov
dec
ret
dec
mov
enter
cwtl
fsubrl
in
movsb
push
jl
mov
lret
and
scas
mov
jb
jmp
push
sahf
leave
mov
insl
insl
test
add
xchg
push
jl
sub
dec
jne
sbb
push
fdivr
pop
jge
dec
into
popa
cmc
jmp
sbb
mov
push
test
mov
xchg
stos
jo
fisubrs
out
jbe
inc
dec
pop
insl
popf
mov
popf
push
fldenv
add
jle
cmpsl
inc
mov
stc
sahf
inc
int
and
out
xchg
cmp
pop
adc
das
mov
pop
out
push
sbb
and
mov
and
mov
push
cmc
cs
out
inc
aad
lods
mov
jmp
pop
xor
sub
stos
pop
shrb
inc
sarl
cld
jns
fmuls
jno
cmp
xor
sub
and
jns
mov
arpl
stos
xor
hlt
jg
and
imul
int3
mov
or
lock
ljmp
and
inc
inc
loopne
pop
stos
pop
add
cmp
inc
fs
push
sbb
hlt
loope
jo
fstp
push
in
push
pop
rcll
js
arpl
daa
or
repz
dec
mov
in
je
and
xchg
xor
pop
idiv
rclb
mov
mov
cltd
fs
jge
inc
push
jmp
mov
mov
cs
imulb
loop
mov
lcall
leave
ds
add
dec
imul
fldenv
std
aam
sti
add
enter
xor
stos
mov
adc
scas
lcall
cwtl
aad
push
hlt
xchg
in
mov
inc
lock
add
pop
adc
aaa
push
push
jmp
stos
pushf
inc
cmp
mov
in
sbb
dec
inc
mov
es
cmp
xchg
sub
pop
inc
clc
jb
add
dec
outsb
ret
popfw
mov
xchg
push
xchg
xchg
mov
or
adcl
imul
mov
cld
test
pusha
push
clc
testl
mov
mov
lods
ficoml
outsb
in
or
rolb
lcall
pusha
fldenv
roll
sub
pop
icebp
dec
lcall
out
hlt
xlat
inc
mov
cmp
flds
adc
push
mov
test
pop
jnp
js
pop
sbb
cmp
subb
mov
stos
movb
cmp
out
mov
cmp
ss
push
scas
loop
cld
aad
std
xor
fs
inc
add
or
mov
outsb
add
cmpsb
xlat
lahf
jb
add
push
cwtl
dec
cmp
pop
cmp
fimull
xor
ds
fimull
sbb
push
cmp
lahf
imul
lods
scas
xor
jnp
lock
scas
mov
adc
imul
lcall
sbb
cwtl
pop
push
cld
lcall
push
push
ds
xchg
fisttpll
out
or
sub
push
jns
xor
pop
mov
cld
cli
jnp
mov
popf
push
jb
jmp
push
xor
dec
cli
ja
xor
cltd
enter
xlat
enter
jmp
mov
mov
stc
movsb
daa
lret
loopne
or
ds
jae
int3
adc
ds
mov
add
xchg
into
ds
dec
dec
dec
dec
jmp
sub
lea
jecxz
in
xor
dec
cld
adcl
data16
jmp
cmp
push
or
dec
inc
in
out
fisubrl
xor
lods
cli
popa
push
inc
sti
movsb
into
sahf
mov
out
jl,pn
inc
sbbl
jmp
add
sbb
mov
daa
cli
mov
roll
test
xor
lret
push
pop
imul
mov
adc
lds
sahf
sbb
movsb
xor
dec
test
mov
popf
pop
xorb
mov
cs
pop
sahf
jge
mov
sub
mov
or
ljmp
pushf
xor
mov
dec
ret
pop
add
or
jns
or
dec
int
pop
or
add
sbb
hlt
outsl
repz
xor
aad
fwait
push
js
mov
push
test
fcompl
mov
cmp
add
mov
jne
fbld
push
mov
int
xor
adc
std
divl
int
clc
jg
inc
jno
out
jecxz
ficoml
push
jmp
xor
inc
scas
adc
jae
int3
scas
repz
repz
push
or
cwtl
dec
push
dec
arpl
xchg
push
repnz
dec
sub
adc
sub
orb
es
jmp
xor
leave
dec
filds
xchg
lock
xchg
xor
mov
sub
sbbb
outsb
adc
sti
mov
inc
incl
jo
scas
mov
ljmp
mov
enter
and
mov
jae
stos
mov
das
ud0
mov
cmp
cmp
out
imul
push
xchg
jbe
pop
iret
jne
or
adc
and
adc
add
fdivrl
aam
or
imul
out
xchg
iret
and
ret
loop
ret
lret
clc
mov
ret
xchg
stos
mov
ret
and
dec
cmpsl
xor
insl
xchg
ret
sahf
cltd
sahf
add
xchg
in
xchg
cli
rorl
repz
and
adc
test
mov
fidivrs
sbb
jae
push
mov
xchg
sub
mov
mov
imul
test
mov
jmp
jmp
insl
pop
nop
sbb
dec
sbb
and
nop
insb
icebp
mov
movsb
xchg
mulb
daa
out
int3
fisubs
or
dec
mov
jg
int3
push
jge
flds
dec
loope
popf
aaa
xchg
mov
push
inc
mov
scas
dec
arpl
mov
add
fwait
jmp
movsl
sbb
add
xchg
cs
out
ljmp
mov
stos
les
sbb
jae
jp
mov
daa
jbe
icebp
aam
mov
test
dec
xchg
std
cmp
mov
and
cmp
divl
adcl
mov
loop
mov
les
lods
lahf
cmp
add
pop
fiadds
pop
lahf
cmp
popa
jnp
push
adc
lret
in
and
dec
adc
gs
pop
lret
xor
pop
out
xchg
xor
test
adc
test
pop
cld
adc
lahf
mov
jnp
push
iret
lret
std
push
fdivrs
shlb
jmp
test
mov
adc
in
aas
adc
inc
stos
paddsb
cmp
and
mov
pop
ficompl
add
push
loopne
fadds
mov
pop
sub
sub
pop
arpl
or
cmp
cwtl
scas
into
mov
xor
call
pop
mov
icebp
pop
cld
push
pop
out
xchg
mov
or
in
pop
repnz
ljmp
stos
jp
in
adc
shl
sbb
out
lods
shlb
iret
adc
sub
mov
int
outsl
sbb
stos
cwtl
mov
movsl
dec
clc
mov
inc
stc
add
mov
push
mov
add
add
test
call
fidivl
loope
outsl
pusha
insb
dec
mov
mov
xchg
pushf
cld
push
popa
stos
int
repz
sbb
mov
in
fsubrl
jno
js
inc
push
sbb
xor
cmp
pop
jnp
jle
xorl
cld
insb
fcmovb
sub
stos
push
jne
sbb
mov
cmp
or
xor
push
jg
or
cmp
mov
ds
cmpsb
xchg
aam
adc
arpl
push
into
pop
jge
inc
pop
dec
fisubrs
push
test
insb
es
outsb
cld
sbb
ror
adc
nop
push
mov
lea
iret
xchg
add
mov
dec
decl
dec
and
push
or
pop
testl
jne
cmp
push
stc
jle
pushl
jg
pushf
mov
dec
add
lods
push
inc
filds
dec
sub
fldenv
mov
ja
mov
lock
inc
enter
popa
mov
imul
jb
dec
bnd
sub
cwtl
pop
fisttps
sub
mov
jmp
adc
mov
ss
in
sub
mov
ret
inc
ret
mov
fists
xor
push
nop
push
insl
int3
rcl
inc
insl
fs
dec
xor
add
clc
hlt
or
or
push
ret
outsl
in
iret
fsubrp
pop
push
cmpsb
cmp
cs
mov
and
pop
repz
and
dec
or
mov
insb
xor
and
cmp
cltd
out
sbb
clc
test
cld
fbld
lds
cmp
mov
mov
jmp
frstor
jnp
outsl
popl
pop
pop
pop
xchg
mov
dec
adc
inc
xlat
and
jecxz
sahf
clc
xlat
push
addb
gs
add
outsb
xorl
movb
outsl
mov
xor
adc
clc
lds
pop
pusha
movsb
and
ret
movsb
mov
xchg
cmpsl
xchg
pop
adc
lods
stos
inc
cmp
push
insb
mov
mov
or
fwait
pop
in
or
aaa
or
pop
push
cmp
out
mov
stos
jb
adc
lret
in
xor
mov
iret
inc
mov
frstor
lahf
enter
and
xchg
outsl
andl
adc
dec
jp
sub
mov
movsb
inc
notb
int3
fistl
and
jg
push
lret
push
xor
mov
xchg
les
push
popa
mov
sub
int3
push
sub
stos
cmc
ja
mov
fs
popa
loope
inc
shll
push
xchg
repnz
pop
xchg
push
stos
lea
xlat
xchg
iret
adc
or
icebp
shl
jo
lret
cs
xchg
inc
inc
lcall
aad
or
add
and
aam
pop
addb
mov
movl
sub
cltd
outsl
ret
inc
xor
iret
jne
pop
and
cmp
ret
fcoms
jecxz
sub
daa
out
push
mov
je
cmp
jns
fimuls
pop
add
pop
mov
movsl
ss
pop
icebp
arpl
add
mov
sbb
and
mov
xor
dec
xchg
movsl
pusha
aaa
lahf
inc
jno
xor
jmp
xor
mov
push
push
sub
cmp
psubsw
test
shr
xor
dec
dec
out
arpl
and
sbb
xor
mov
push
jne
mov
xchg
adc
ret
xchg
cmp
push
dec
push
js
fsts
pop
fstpl
lock
daa
jbe
add
push
call
movsb
xchg
adc
lea
imulb
dec
cmp
xor
sti
rorb
into
test
sub
js
dec
cmp
out
cs
cmpsb
lock
sub
inc
cs
inc
stc
lods
push
rorl
sti
movsl
xor
repnz
push
and
lock
sbb
fistpll
in
into
jmp
pop
cmc
add
pop
mov
jnp
out
add
jb
xchg
in
adc
add
imul
nop
xchg
in
rorl
jne
pop
dec
testb
dec
divb
push
mov
insl
add
add
mov
and
fcoms
sub
jae
and
mov
adc
mov
cmp
pop
imul
ja
mov
xor
pushf
jnp
cltd
outsb
je
fs
dec
fsubs
enter
xchg
jbe
sbbb
mov
inc
push
sbbl
inc
xor
arpl
repz
imul
mov
lds
or
fldcw
es
sub
jo
mov
pop
and
xor
lcall
aaa
cmp
into
cmpsb
dec
jmp
mov
or
loop
cmpsl
push
inc
jno
scas
pop
aad
mov
repnz
scas
sbb
sub
aad
jb,pn
mov
or
add
inc
mov
pop
arpl
loop
iret
lcall
xor
out
mov
cmpsb
icebp
out
push
sbb
mov
dec
jl
and
jp
sub
push
push
lock
addb
or
repnz
js
test
stos
mov
mov
jae
mov
out
jns
jle
and
xchg
mov
mov
pop
sub
pop
shlb
in
xor
fdivrp
and
or
mov
xchg
mov
call
adc
out
cmp
popa
or
add
rcrl
cmp
mov
sbb
jge
out
adc
add
jnp
mov
dec
pop
mov
mov
clc
lahf
mov
mov
js
adc
xor
xor
in
mov
add
cld
pop
enter
sbb
jnp
das
jo
es
mov
jecxz
scas
cmp
insb
add
out
cld
mov
into
jne
ds
xchg
insb
scas
jge
mov
mov
mov
loopne
lods
sub
adcb
lods
mov
push
pusha
xchg
xor
cli
enter
stos
mov
stos
popf
adc
jmp
sbb
incb
jo
mov
fstps
sub
in
pop
jl
imul
cmp
lea
mov
lret
into
inc
call
xchg
dec
hlt
inc
cmp
repz
mov
nop
jno
stc
add
repz
enter
mov
or
andnps
pop
cmc
ret
pop
inc
in
hlt
aad
adc
clc
dec
push
pusha
fmull
push
adc
sub
aas
dec
out
lods
jecxz
and
dec
lahf
repnz
pusha
in
stc
leave
aas
push
cli
aas
dec
not
or
xchg
or
pop
push
arpl
out
and
or
dec
pop
ljmp
add
mov
int3
xor
subb
xor
inc
test
xchg
add
mov
leave
push
or
fwait
inc
jo
pop
pop
xor
rol
addr16
xchg
adc
cmc
enterw
cmp
out
mov
sbb
in
cltd
aad
stc
jae
adc
jp
rcr
mov
mov
pop
xchg
out
dec
and
and
mov
les
mov
imul
or
shrl
jl
fwait
or
repz
mov
sarb
mov
push
fcos
int
xchg
xchg
das
mov
test
add
nop
inc
int
sbb
jmp
jno
mov
mov
aam
test
sub
fistl
pop
lds
lock
add
inc
cmp
fdivrs
mov
stos
fldcw
stc
rorl
enter
stos
daa
push
push
pop
in
mov
stos
pushf
and
aad
jp
mov
aas
enter
jns
daa
test
ret
ss
cmc
jmp
jmp
xchg
arpl
inc
sub
aad
jo
frstor
mov
and
inc
lds
sbb
rclb
fstps
inc
pop
cmpsl
jns
add
and
cmp
adc
adc
mov
shlb
std
push
xor
or
or
xor
fimuls
jecxz
push
fnsave
les
jns
out
std
or
hlt
shll
jmp
cmpb
fisubl
loopne
pop
pop
push
xor
inc
fisttpll
cmpsl
call
cmp
shll
or
pushf
fisttpll
loop
mov
fwait
cmp
push
push
lret
je
ret
xchg
mov
lcall
js
lods
lea
push
add
mov
fwait
in
shr
fnsave
inc
aas
negl
mov
mov
xchg
cltd
dec
inc
or
movb
ret
dec
psrlq
scas
ret
xor
std
mov
mov
test
mov
pop
out
lods
jp
pop
adc
or
rolb
xor
es
cltd
dec
call
pop
xchg
popa
mov
shlb
mov
in
out
pushf
pop
dec
and
mov
loop
les
rcrb
mov
out
jno
xchg
cmpsl
ljmp
loope
mov
xor
xor
jle
ror
gs
mov
and
inc
leave
or
dec
push
xor
mov
scas
mov
int3
rorl
lds
fs
jae
and
sbb
mov
jo
insb
xchg
aas
int3
dec
and
dec
push
es
test
in
inc
push
mov
mov
mov
jae
dec
lcall
sub
aaa
push
xchg
add
sbb
jge
aam
fistl
aam
jp
add
iret
mov
xor
daa
packssdw
mov
mov
repnz
mov
ret
mov
and
xchg
outsb
sub
add
add
xor
shl
sbb
test
xchg
test
out
mov
and
add
stos
testb
mov
in
dec
leave
xchg
and
adc
sub
or
js
bound
call
fistpl
pop
adc
add
cmpl
addr16
jb
mov
sbb
inc
icebp
xor
out
xchg
aas
mov
clc
ljmp
xor
push
mov
lods
ret
adc
pop
adc
xchg
push
out
sub
cmpsb
push
push
adc
fcmovnu
sbb
fwait
ret
repz
push
sub
xchg
in
das
mov
loopne
in
pop
aad
mov
cmp
jge
inc
je
imul
ja
loope
enter
inc
lcall
jne
inc
fwait
dec
jl
sbb
rolb
or
dec
idivb
das
jae
into
cmpsb
shrl
je
mov
shl
sbb
dec
sahf
daa
mov
and
dec
sub
mov
mul
and
adc
jbe
lret
add
subl
into
pop
out
bound
jae
test
dec
sub
adc
shr
xchg
mov
in
pushf
mov
cmpsb
testb
push
xor
ljmp
cmp
push
xor
mov
in
add
aas
push
das
xchg
or
xor
fwait
jae
xor
mov
jge
lds
jg
dec
movsl
inc
sbb
sar
jo
cmpsl
fidivrl
push
jecxz
imull
lea
shlb
push
jb
pop
mov
mov
pop
test
in
add
or
add
cmpsb
pop
aas
ss
pop
or
daa
dec
je
dec
stos
mov
cmp
xor
aam
in
fsubp
add
xlat
adc
jbe
outsb
xlat
pop
in
dec
js
pop
pushf
mov
andb
jle
nop
imul
sbb
or
jmp
mov
hlt
jae
roll
inc
mov
movsb
loopne
mov
in
pmaxub
fldl
outsl
cwtl
jle
and
mov
mov
jle
sbb
ljmp
mov
push
inc
pop
or
inc
mov
leave
in
dec
shrl
push
or
scas
cld
rcll
pop
mov
cli
lret
cmp
stos
mov
jns
jge
push
movsb
xchg
fnstsw
lea
push
stos
jmp
mov
pushf
adc
xor
pushf
or
fbld
mov
lods
scas
ss
aam
cli
jl
jb
and
int
jnp
push
sbb
dec
and
xlat
xchg
xor
mov
rcrl
std
inc
xchg
adc
push
les
pop
loop
mov
add
xchg
mov
outsb
inc
ja
inc
bound
lods
and
ds
sbb
or
mov
xchg
push
clc
mov
shlb
mov
inc
nop
leave
sbb
sub
iret
jg
out
add
mov
adcb
in
dec
dec
push
int
sbbb
sbb
jmp
emms
scas
les
lock
pop
fstl
aas
push
jl
test
pop
and
insl
ror
stos
push
insl
sub
outsb
stos
inc
cmp
or
ds
shrb
jno
push
inc
push
adc
inc
pop
jge
mov
sar
pop
mov
sahf
sub
cltd
inc
movsb
movsl
mov
push
adc
jge
xor
push
mov
cmp
pop
dec
nop
dec
dec
sub
ja
cmp
dec
ljmp
sti
ss
push
and
xchg
lahf
adc
hlt
stos
inc
xchg
sti
jne
dec
pop
ret
rol
sbb
inc
push
dec
dec
imul
push
and
jg
xchg
fisttps
push
daa
pop
push
negl
leave
cmp
outsl
out
lret
test
gs
dec
and
or
mov
pop
sbb
ret
add
repz
jecxz
add
or
mov
les
cmc
cmp
gs
out
sub
cwtl
outsb
sti
inc
mov
sbb
dec
jmp
shrb
lds
sbb
lods
stos
addr16
sarl
pop
xchg
cmc
arpl
inc
jp
popf
loop
repz
inc
not
or
shl
jb
incl
inc
and
sub
jge
adcl
andb
dec
out
fnstenv
sub
js
jmp
mov
dec
lods
sub
mov
push
stc
hlt
xchg
add
mov
mov
insl
add
and
mov
xor
sti
push
ss
add
inc
sarb
inc
orb
mov
das
push
leave
out
popa
iret
shrb
push
incb
push
inc
mov
test
test
jmp
mov
mov
adc
aam
push
pop
ja
movsb
loopne
fdivs
jbe
lret
sub
fisttpll
adc
movsl
jae
push
push
push
mov
icebp
mov
ja
pushf
dec
pop
add
mov
xchg
dec
cmp
mov
fildl
aad
push
xchg
and
pop
push
inc
jge
push
jo
xchg
inc
cwtl
cmp
pop
xchg
xchg
pop
sahf
je
inc
mov
mov
mov
fcomip
jecxz
inc
arpl
cmp
and
adc
ja
dec
mov
ljmp
xchg
sbb
in
into
jbe
adc
lods
andl
jmp
push
push
or
or
mulb
xor
adc
rclb
mov
cmc
test
xchg
repz
or
ja
jne
or
jb
add
fldenv
loop
leave
call
cmp
xchg
outsl
add
out
adc
add
mov
xor
inc
fcmovbe
into
lret
sub
jo
push
nop
push
mov
fsubl
sub
repnz
cmc
mov
fs
mov
out
dec
mov
pop
jl
in
pop
test
dec
pop
inc
cltd
inc
loopne
cmp
int
xor
ror
and
jl
lret
xor
imul
daa
jg
ficomps
aam
aad
jne
push
pop
jbe
xor
mov
cmp
mov
addr16
lret
xor
and
loop
test
inc
adc
fdivrs
inc
neg
dec
cwtl
test
sub
leavew
inc
xchg
ret
mov
and
sar
mov
mov
xchg
adcb
sbb
mov
or
insl
xchg
outsb
mov
cmp
movsl
imul
dec
pop
inc
adc
cltd
or
push
sub
pop
xlat
and
adc
cmp
mov
xchg
mov
lcall
and
std
test
sbb
inc
pop
push
daa
sbb
sub
ss
inc
pusha
cld
in
lds
cwtl
enter
ret
pushf
outsb
add
jge
pop
lret
adcb
push
jmp
loopne
xchg
mov
in
xchg
cmpsb
clc
push
ret
mov
cmp
test
fmull
addr16
stc
mov
mov
popa
dec
mov
rcl
cmp
mov
push
and
add
cmp
andb
jp
sbb
inc
adc
sarb
pop
dec
loop
cld
jbe
cmpsb
xor
dec
hlt
jns
cmp
sub
ljmp
inc
mov
stc
inc
pop
insb
std
in
in
lcall
addb
sub
jecxz
sub
loop
mov
pusha
cmp
cld
push
or
jle
xchg
pop
push
jge
jbe
scas
in
cmpsl
push
cmc
pop
push
out
cmp
mov
mov
icebp
sbb
adc
repnz
scas
hlt
pop
or
sub
push
xor
dec
adc
lods
popa
lds
push
push
ss
lahf
fdivrs
insb
mov
outsl
push
pushf
outsl
add
shrl
jg
add
pop
repnz
inc
jmp
mov
repnz
jns
push
int
jae
fs
pop
xor
pop
dec
push
lahf
scas
pop
or
lcall
pop
es
jge
pusha
out
popf
and
mov
in
xchg
xchg
stc
stc
push
leave
push
imulb
xchg
jno
jne
xor
cmp
sbb
and
xchg
lahf
jb
adc
push
xor
rcll
lcall
pop
lds
fstpt
insl
in
inc
add
stos
cwtl
push
adc
cwtl
mov
mov
sbb
mov
hlt
pop
mov
bound
pop
mov
popa
cmp
repz
inc
xlat
loope
test
jae
lret
xchg
pop
mov
out
rol
jle
mov
push
mov
cmp
sbb
pop
adc
or
jnp
or
fcompl
cmp
adc
jnp
test
xor
xlat
sbb
cmpsl
and
pop
sub
cmp
in
data16
push
pop
inc
dec
addr16
cmp
lahf
cli
test
add
pusha
fdivrs
stc
cmpsl
mov
loop
add
mov
pusha
dec
push
inc
out
jg
test
loope
mov
out
pop
inc
adc
push
pop
hlt
pop
lods
rol
daa
sub
mov
inc
out
adc
adc
pop
call
or
aad
xor
loope
mov
clc
mov
sub
adc
mov
sbb
shll
neg
test
push
and
push
and
cmpsl
rcl
cltd
sbb
pop
pop
shll
out
int3
or
cli
repz
shlb
mov
fadds
mov
test
ljmp
pop
xor
or
inc
mov
lods
or
out
push
ficoms
mov
lea
out
les
sbb
lret
loope
in
ret
sbb
push
aad
ljmp
cmp
jmp
stos
pop
mov
push
or
dec
xchg
pop
pop
dec
in
nop
dec
test
in
adc
ss
lcall
jb
das
repz
jmp
adc
inc
adc
mov
imul
jb
cld
out
push
stos
js
pop
push
dec
scas
jge
setge
out
jl
dec
mov
pop
xchg
and
sbb
pop
bound
shll
fists
jae
mov
aaa
inc
or
int3
call
xchg
sbb
push
mov
cltd
mov
pop
aaa
sbb
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
stos
jle
and
pop
jl
lret
icebp
das
std
mov
popf
outsl
jmp
jno
aas
lea
pusha
cmp
dec
in
xor
aaa
fxch
pop
xchg
mov
push
mov
xlat
pop
clc
lret
cmp
out
sub
rorl
inc
cmp
mov
stc
push
ret
aaa
stos
repz
mov
jns
sbb
jl
adc
insl
push
sahf
mov
inc
cwtl
cwtl
cmp
pop
jb
inc
xor
inc
insb
lock
dec
roll
in
push
mov
test
push
add
stos
stc
cwtl
in
mov
rcrb
mov
in
test
push
fistpl
loop
and
inc
rcrb
inc
test
and
mov
sbb
mov
arpl
retw
dec
je
mov
pop
or
fwait
push
in
addl
stc
pop
testb
into
into
hlt
xchg
xchg
mov
std
xor
inc
and
clc
aad
cs
fnstcw
add
cmc
cmp
scas
pop
mov
inc
mov
in
in
cmp
cmc
scas
xchg
pop
adc
inc
adc
into
adc
xchg
jge
lock
jmp
lahf
loopne
jmp
sbb
pop
cltd
pop
movsl
or
push
cmp
lcall
outsb
rcrb
test
inc
dec
mov
aam
sub
lods
mov
mov
pop
inc
jmp
sub
jmp
mov
sbb
subb
fadd
jae
cmp
cwtl
adc
jl
mov
pop
leave
test
mov
mov
or
outsl
pop
lcall
leave
push
je
rcrl
xchg
es
es
nop
xchg
xchg
xchg
xor
arpl
stc
xchg
dec
pop
and
test
mov
add
jmp
cs
sbb
cmpsl
lret
cmp
gs
jno
iret
shll
stos
mov
sbb
mov
push
jb
mov
fs
sub
sbb
cmp
aas
sti
out
ja
rorb
negl
cwtl
div
pusha
xchg
mov
jae
and
mov
ds
mov
int3
push
cmp
or
sbb
stc
fiaddl
rorb
scas
inc
sub
mov
cmp
xor
stos
mov
in
jl
pop
cmpb
mov
xchg
pop
sar
mov
and
pop
cmc
inc
stos
gs
mov
lahf
sub
adc
adc
cmpsb
rsqrtps
in
sub
decl
adc
adc
sbb
ljmp
out
sub
sbb
xchg
pusha
imul
xchg
pcmpgtb
jge
rcrb
jns
enter
mov
lret
out
lock
loopne
test
in
fnstsw
mov
pop
shl
xchg
into
aad
bound
or
mov
stos
adc
push
push
pop
jae
ret
inc
pop
outsb
arpl
jbe
push
test
jg
lcall
gs
mov
mov
mov
and
lds
pop
adc
stos
jb
stos
cltd
dec
aam
lock
pop
jns
popf
aam
push
stc
xchg
mov
int3
xchg
xchg
add
push
movsb
sarb
movsb
inc
movsb
loopne
jae
mov
lds
movsl
leave
aas
adc
arpl
xchg
push
mov
cltd
xlat
cwtl
lcall
cwtl
or
lods
int
cmp
clc
jbe
lods
js
xor
adc
xor
xchg
xor
xor
jmp
push
lcall
pop
cmp
sbb
out
es
js,pn
mov
xor
xor
loop
sub
lret
mov
xor
ss
loop
or
mov
rcll
dec
cmc
sarl
sbb
xchg
sti
cmp
hlt
in
jl
mov
int
dec
into
sub
in
jecxz
and
enter
mov
shlb
test
rorl
jb
adcl
out
xchg
sbb
test
jae
into
xchg
std
test
cwtl
fldl
scas
mov
std
das
add
lcall
ret
test
call
or
ljmp
cli
sbb
rcl
lcall
inc
pusha
sarl
jle
daa
adc
mov
jo
and
in
push
jg
xchg
cmp
in
pop
loop
or
data16
sub
aam
pop
push
in
rcll
xchg
pslld
jae
xchg
int3
fwait
push
leave
rcrl
insb
inc
addl
adc
data16
sbb
cmp
and
stc
ljmp
into
xor
push
xor
sbbl
cmp
jge
jb
les
push
sub
inc
lahf
push
out
adc
adc
aam
inc
pushf
test
and
jne
xor
adc
sbb
js
and
addr16
arpl
or
in
sti
mov
pop
mov
mov
sbbb
mov
and
push
mov
fdivr
mov
ret
scas
lds
xchg
mov
inc
mov
sbb
pushf
dec
int3
push
sub
repz
mov
aad
popa
lahf
cmp
out
sarl
sahf
sahf
mov
movl
or
cmp
sub
cmc
jnp
rolb
mov
pop
mov
iret
stc
popf
shll
aas
lret
push
xchg
and
mov
cwtl
jns
mov
faddl
lcall
lahf
sub
mov
mov
jne
mov
jp
loopne
push
jp
pop
lock
jns
loop
stos
mov
pusha
mov
push
xlat
sbb
push
sub
inc
jo
pop
addr16
push
cmpsb
pop
mov
aaa
fcomi
xor
push
or
orl
adc
add
inc
sahf
lods
sti
xchg
inc
or
or
jle
mov
notl
outsl
push
stc
hlt
mov
js
dec
lods
push
xchg
push
jno
xchg
dec
cmpsb
pop
stos
fsubs
cltd
fcmovbe
or
fisubrl
fwait
jb
push
dec
xchg
rorl
push
jnp
mov
mov
add
mov
in
or
lods
and
jns
int3
in
arpl
sub
jnp
jmp
sub
or
test
jo
andl
mov
sub
push
and
pop
shrl
call
sbb
pop
mov
xchg
adc
xchg
adcl
jl
leave
sbb
mov
dec
insb
cmp
out
jg
imul
inc
or
add
mov
imul
jns
test
adc
or
mov
fwait
jbe
jb
les
loopne
or
xchg
mov
stc
out
insb
out
gs
outsb
in
int3
insl
push
mov
das
in
insl
ficomps
adc
sbb
dec
cmp
test
push
inc
and
out
xor
sbb
cvttps2pi
sbb
ss
test
addr16
or
in
cmpb
and
push
inc
add
test
push
mov
lods
daa
cmpsb
aaa
mov
jmp
sub
push
imul
test
jns
pop
push
xchg
insl
out
dec
cmp
or
sbb
fldcw
mov
add
lcall
mov
loope
mov
mov
push
movsb
sets
in
scas
es
out
dec
icebp
lcall
repz
sahf
dec
inc
mov
sbbb
arpl
cld
repnz
hlt
clc
sub
in
xchg
pop
fstl
adc
dec
and
and
sub
call
pop
lock
pop
rorb
push
push
xor
pop
movsl
cmp
pop
out
push
adcl
push
pop
insb
xchg
jl
sbb
inc
lahf
push
je
in
in
pop
adc
mov
in
mov
testb
or
sti
in
cli
ret
sub
inc
std
mov
adcb
push
sbb
sub
xchg
leave
ret
cmp
loop
add
sub
xlat
xchg
push
xchg
fisttps
inc
add
dec
rcll
sbb
gs
repnz
jnp
iret
mov
inc
sbb
jecxz
scas
out
lock
mov
mov
imul
mov
addr16
sti
inc
xlat
inc
pop
rcrl
divb
test
aas
arpl
jmp
jno
cs
mov
dec
test
pusha
repz
xor
push
arpl
jne
mov
mov
je
mov
mov
inc
lock
push
mov
fwait
lods
jo
shrb
xchg
jecxz
cmp
repnz
and
loope
ss
cs
dec
roll
xchg
push
sarl
and
jns
sub
mov
push
inc
iret
add
sub
in
adc
jg
call
mov
loop
xchg
push
adcl
shl
mov
es
inc
inc
je
out
dec
icebp
outsl
jecxz
mov
sahf
mov
sub
outsl
pop
testl
sub
mov
mov
jns
enter
out
fiaddl
push
imul
jg
pop
out
repz
sbb
mov
sbb
jle
stos
adc
xchg
daa
in
ret
nop
mov
aad
xchg
inc
pop
mov
and
xchg
xchg
aas
inc
lcall
mov
add
les
jmp
rclb
ret
cmp
scas
jb
enter
test
faddl
pop
jp
das
inc
ds
xchg
pop
lret
adc
jbe
inc
sub
outsb
xor
sbb
xor
dec
bound
xchg
out
add
push
push
xor
loopne
sbbl
jb
mov
inc
xor
push
sub
mov
pop
inc
out
mov
xchg
sar
test
or
dec
lret
hlt
and
call
mov
xchg
sub
mov
pushf
mov
xorl
jne
and
mov
mov
pop
push
int3
jne
dec
mov
push
loopne
and
cmc
rorb
add
fbstp
pop
and
in
xchg
pop
fldcw
lods
mulb
shll
aaa
sbbl
dec
mov
push
sahf
addr16
scas
add
push
aaa
mov
hlt
sbb
jnp
mov
cmp
shrb
outsl
sahf
cmpsl
adc
shll
lock
xchg
push
les
inc
adcl
pop
adc
fadds
cld
jbe
sbb
mov
loope
inc
addr16
push
xchg
and
ficoml
rorl
popa
pop
je
popf
stos
shrl
iret
arpl
gs
andl
sbb
in
test
inc
mov
xor
sub
or
or
inc
pop
imul
pop
in
mov
jge
or
push
xor
xor
dec
inc
push
inc
mov
outsb
sti
test
cmpsb
dec
shlb
repz
bound
stc
push
xor
push
mov
fcoms
xchg
and
jmp
shll
dec
pushf
sub
imull
shlb
or
mov
sbb
pop
push
xor
popa
in
in
inc
cmpsl
insl
cmc
dec
push
add
out
fcompl
inc
cmp
cmp
xchg
dec
and
pop
sub
cmp
movsb
inc
fcomps
push
sbb
xchg
sbb
mov
xchg
mov
cmp
jecxz
dec
subb
mov
and
push
ds
xchg
std
cmp
stos
jno
push
fdivs
sub
add
pop
xor
lret
xchg
mov
outsl
insl
fsubr
stos
js
xchg
adc
push
lahf
aas
xchg
out
rclb
stos
push
cmp
idivb
mov
and
and
data16
roll
push
jae
xchg
in
aam
push
xor
cmp
xchg
out
fnstcw
sbb
adc
or
mov
stos
bound
cmp
xor
stc
lods
adc
inc
ds
inc
repz
popa
les
imul
out
mov
xor
push
dec
push
pop
cmp
mull
or
inc
ljmp
and
jg
sbb
daa
decb
scas
rorl
fdivrs
popf
adc
jg
pop
hlt
mov
sbb
fistpll
mov
jmp
push
aas
or
pop
cltd
call
sub
fldl
and
lahf
dec
lds
jno,pt
mov
pop
jecxz
into
ret
or
mov
movsl
jae
sti
lods
jo
jo
pop
sub
leave
push
and
out
es
mov
test
cmp
sbb
popf
sub
mov
ss
lcall
mov
movsl
imul
shll
stc
rorl
les
test
out
cltd
adcl
sub
jbe
sub
xlat
add
idivl
mov
sti
or
jnp
lods
outsl
pop
cmp
jl
mov
dec
pop
stc
fsubr
mov
jns
sbb
rclb
je
pop
and
jge
ret
movsl
cmc
mov
mov
cmp
push
mov
add
mov
pop
int3
lret
lds
pop
or
mov
sub
push
fwait
ret
jb
mov
fwait
xor
push
mov
push
stos
push
pop
sbb
flds
fdivs
bound
inc
adc
insl
jnp
fdiv
pop
pop
pop
push
lock
movsl
pop
sub
test
add
mov
jmp
add
add
sub
les
cmpsl
push
sahf
inc
es
std
pop
rcrl
add
push
ret
jecxz
inc
data16
test
xor
jbe
and
shrl
movsb
xchg
xchg
mov
xchg
mov
call
lcall
xor
aaa
fidivrl
mov
xor
ficompl
mov
ss
and
jge
mov
pop
or
cmpsb
pop
loope
mov
outsb
scas
lods
mov
into
stc
cmp
mov
int3
pop
imul
in
jbe
out
xchg
sub
lea
lretw
jne
jp
adc
ss
daa
imul
xchg
adcl
insb
jo
mov
das
test
sbb
jmp
movsl
andl
sub
xor
inc
and
movsb
mov
cmp
mov
sbb
xor
cli
add
xchg
mov
int
dec
sbb
adc
or
push
mov
dec
mov
mov
xlat
andb
mov
lahf
mov
xchg
test
inc
ljmp
pop
imul
data16
dec
cmpsl
sbbb
popf
popa
mov
jmp
xchg
test
in
push
aaa
shrb
pushf
jno
adc
inc
pop
sarb
push
sbb
jge
or
aaa
test
sbb
sbb
push
ret
mov
push
es
out
faddp
insl
lea
dec
cmp
data16
stos
test
xchg
imull
ror
fiadds
jae
cltd
jl
jecxz
aad
leave
clc
or
fsubs
cmp
ds
fisubrl
jecxz
jecxz
sbb
push
les
mov
fistl
cmp
pop
insb
in
dec
push
mov
pop
fsubs
pop
lcall
cmp
ja
pop
hlt
adc
fwait
jmp
pop
cld
xchg
cmp
rorb
cmpl
pop
out
dec
std
jp
and
xor
insb
pop
ret
xor
xchg
dec
dec
lahf
and
mov
and
cmp
in
fs
outsb
xchg
and
das
cmp
sub
pop
dec
lods
fimuls
or
jge
icebp
push
mov
int3
lods
dec
outsl
insb
xchg
and
jne
icebp
push
inc
loop
inc
imul
mov
jo
fcmovnbe
and
pop
pop
cmpsl
push
mov
imul
jg
fwait
lods
and
addb
add
mov
cmp
ljmp
pop
inc
shrl
jnp
push
push
and
cmp
repz
loop
xlat
lret
adcb
or
sarl
js
cs
mull
mov
sbb
jnp
test
jns
xor
andl
dec
clc
lcall
shl
cmp
in
and
popf
add
subb
push
int3
lds
repz
push
fistpll
mov
jo
movsb
loop
jns
jno
inc
push
sub
fdivs
gs
pop
push
dec
inc
scas
in
jbe
popf
cmpsl
inc
cli
shrl
fidivs
sub
xchg
flds
loop
sbb
dec
mov
lods
stos
sbb
rcrb
sbb
stos
in
and
xor
mov
sti
cld
and
xor
fucomp
jp
incl
sbb
notb
mov
jle
or
out
jecxz
adc
pop
std
jae
dec
cmpsl
sub
insb
xor
inc
stos
jmp
addb
shlb
or
in
int
out
push
sub
ret
or
add
mov
lret
jo
je
dec
fdivl
dec
lret
cmp
xchg
dec
cmp
sar
outsb
jbe
cmp
mov
stos
cmc
pop
cs
jmp
xor
jnp
push
fisubrs
movsb
ret
jb
or
or
iret
sub
pop
ret
lds
mov
dec
or
xchg
lahf
stos
xchg
sub
icebp
fsubrl
jae
fwait
or
ja
jle
jmp
mov
jb
aaa
insb
test
pop
cmpsb
lock
pop
sub
push
adc
rcll
hlt
or
pop
pop
cltd
repnz
call
mov
mov
aaa
push
idivl
out
jno
push
in
filds
aam
jge
xchg
addr16
pop
mov
sub
push
ja
mov
clc
jmp
xchg
mov
push
push
push
mov
ror
rolb
mov
in
add
std
pop
ret
xchg
addr16
adcl
test
or
xor
add
pushf
bsf
jl
lcall
push
test
jno
mov
mov
mov
pop
dec
dec
cmp
stos
cmpsb
repnz
dec
lahf
daa
sub
idivb
movsb
stc
inc
lea
pop
xor
cmp
mov
sub
jnp
addr16
mov
pop
movl
push
push
lea
xor
in
add
andb
test
sub
addb
xchg
pop
fdivl
in
cli
in
outsl
mov
mov
add
out
testl
xor
ja
xchg
in
sti
add
jbe
sub
dec
adc
jmp
xchg
jo
roll
dec
and
push
mov
jne
sub
mov
jmp
sbb
aam
cmp
cmp
xorl
jno
fcmovb
jle
mov
mov
fs
imul
icebp
inc
addb
jp
decb
or
mov
sub
cmp
and
repnz
dec
pop
rcrb
dec
popa
or
ljmp
call
inc
jnp
fs
lcall
repnz
dec
mov
and
nop
pop
sbb
scas
push
dec
fwait
mov
or
pop
fnsave
add
clc
fsincos
xchg
cld
push
into
in
add
faddp
push
mov
mov
stos
sub
sub
adc
aaa
or
rclb
loopne
aam
jge
or
out
mov
hlt
xchg
jp
mov
negl
mull
shl
inc
xor
sub
push
fs
or
cmp
iret
fdivl
fwait
dec
mov
push
in
or
jne
lret
bound
cmp
mov
popf
lods
sbb
mov
jno
es
testl
push
cmp
or
jg
call
mov
ret
cmp
lcall
sbb
push
repnz
popf
jnp
sar
jle
pop
and
mov
sbb
lret
clc
out
lahf
imul
aas
xor
icebp
daa
mov
inc
or
bound
ficoms
ficoms
lcall
outsb
les
sti
das
pop
jnp
xchg
lea
push
cmp
add
in
mov
cmp
int3
jnp
dec
sahf
aaa
dec
sbb
sub
cs
lret
sub
movsb
mov
imul
cmp
xor
pop
repz
outsl
jg
rdmsr
es
xor
xchg
lcall
push
dec
xchg
out
dec
sbb
pop
jmp
in
push
rcrb
inc
adc
cmpsb
jle
adc
subl
jecxz
mov
pop
mov
adc
test
mov
data16
add
adc
fld
filds
sbb
popf
xor
leave
mov
adc
shrl
pop
cwtl
xlat
rolb
js
mov
adc
out
xor
sti
out
mov
pop
es
addl
xchg
mov
mov
cmp
push
fidivrl
mov
lock
and
push
in
jo
push
cmpl
lret
into
mov
popf
adc
xchg
adc
or
sbb
dec
sub
mov
sub
xor
popl
dec
aas
xchg
inc
into
sti
cmpsl
pop
mov
imul
cltd
or
xor
jmp
ljmp
and
mov
jb
stos
inc
out
out
enter
fwait
sub
cld
xchg
fldcw
inc
mov
js
and
add
or
sbb
jbe
inc
dec
jnp
repnz
loope
test
cmp
mov
orl
xchg
cmpsl
mov
inc
pop
in
jl
fabs
cltd
push
lahf
sti
pop
fdivr
enter
inc
mov
sub
ret
mov
sub
lock
pop
jbe
xor
push
mov
popf
cmp
and
test
pop
jp
aam
mulb
and
fisttpl
lret
xor
dec
mov
and
and
dec
nop
int3
sub
mov
push
push
sahf
loop
outsb
push
out
mov
pop
push
lock
repnz
cmp
jp
cmpsb
ss
mov
and
rolb
fdivr
out
ret
les
mov
add
cmpsl
sbb
mov
fcomp
cmp
push
ss
dec
es
outsb
pop
sbb
jbe
push
pop
jecxz
imul
adc
mov
adc
rcll
repnz
push
jl
call
lahf
repnz
inc
lods
push
inc
insl
xor
mov
pop
test
lods
loop
xlat
movsl
cmc
jle
scas
orl
and
adc
repnz
pop
push
test
lret
push
cmpsb
ret
decl
add
jnp
das
insb
lcall
mov
sbb
dec
cli
lcall
sarb
cmpsb
mov
hlt
mov
push
faddl
dec
fiadds
ljmp
ss
cli
icebp
mov
add
and
add
pop
inc
jp
sbb
daa
xchg
mov
push
ljmp
jo
stc
mov
mov
and
popf
lahf
jle
cwtl
jle
xchg
xchg
fnstenv
lods
int
sbb
adc
ds
cmp
fsubrs
pop
hlt
mov
cli
add
int
xchg
popa
pop
hlt
mov
adc
popf
inc
cmp
fcmovnu
jle
xchg
mov
add
or
xchg
inc
push
dec
je
or
pushf
dec
outsb
sti
sbb
cmp
out
mov
jmp
mov
pop
pop
fidivrl
jb
arpl
or
test
rorb
jge
mov
outsb
repnz
inc
mov
lods
xchg
loop
or
pop
cmp
and
push
into
fucomp
xchg
shll
jle
icebp
test
mov
jno
xchg
scas
pop
xor
pusha
fnsave
jo
push
cmc
repnz
bound
xchg
add
jecxz
movsl
push
lock
stos
and
test
cmp
aad
orl
jo
sbb
shl
loope
loope
push
adc
aaa
pop
mov
dec
mov
ficoml
jge
dec
xor
push
jne
lahf
sti
or
sub
lods
mov
xor
fnstenv
and
sbbb
out
dec
test
mov
repz
jno
cmp
inc
push
pop
dec
rorl
fbstp
mov
aam
rorl
or
inc
xlat
out
jecxz
lahf
cmpsb
pushf
mov
ljmp
and
cwtl
mov
cmp
pop
mov
cmp
push
pop
sahf
fs
and
xchg
out
pop
call
mov
js
add
add
add
mov
andb
sbb
xchg
mov
stc
loope
lret
aad
or
sbb
and
dec
jmp
jp
xlat
or
push
mov
lds
adc
sarl
pop
add
inc
xor
push
sbb
sbb
pop
lahf
sub
arpl
push
lea
loope
xor
push
mov
xlat
iret
call
inc
jp
dec
inc
fidivs
adc
enter
mov
sub
lahf
or
inc
xor
rol
mov
inc
sbb
subb
out
mov
fsubs
dec
popf
ja
cmp
cld
xor
fnstcw
out
dec
sbb
xchg
cmp
push
and
cmp
sub
aas
mov
cmpl
gs
std
repnz
cwtl
fildl
mov
pextrw
pop
int
sbb
push
pusha
xor
cwtl
pop
aas
add
test
test
cli
les
movsb
pop
in
dec
test
movsl
inc
cmp
mov
dec
xlat
fnstcw
out
push
cld
notl
xor
out
add
sub
ljmp
mov
jo
xchg
dec
pusha
push
insl
imull
sbb
push
incb
mov
or
xchg
test
push
mov
loop
aam
ds
xchg
inc
lea
rolb
adc
cmovle
iret
aad
sahf
imul
mov
sub
add
jecxz
mov
mov
xchg
mov
cmp
and
lods
push
push
xchg
nop
out
repz
dec
xchg
sar
mov
iret
pushl
int
xor
dec
fildll
push
inc
aaa
push
pop
cmp
lret
mov
test
lods
cmpsl
or
lock
and
movsb
mov
mov
jns
and
sub
lea
addr16
or
fadds
push
outsl
push
sub
mov
pop
cmp
xchg
cmp
dec
push
sub
scas
stos
or
add
cmp
push
fistpll
mov
mov
mov
inc
imul
cld
pusha
les
test
les
lods
pop
push
insb
xor
lret
aas
popf
cld
cmp
pop
adc
shrl
sub
and
cmp
xchg
movsb
xchg
popa
push
sub
ficompl
sbb
xchg
in
jmp
int
add
mov
add
mov
mov
fsubs
andb
dec
sub
lcall
xchg
les
add
hlt
adc
nop
lds
jecxz
mov
shl
mov
mov
cmc
cltd
adc
xchg
lret
add
sahf
lods
pop
cmp
pusha
out
iret
xchg
popa
xchg
clc
add
and
rol
rorb
stos
pop
mov
mov
lret
sbb
lahf
and
in
jp
mov
cmp
fildll
sahf
lcall
jb
inc
mov
cld
ret
adc
es
stc
out
shll
outsb
cmp
push
xchg
cmp
inc
sbbl
push
push
shl
dec
inc
jmp
scas
repnz
in
lock
out
and
divb
adc
and
cs
push
or
sbb
add
jnp
cwtl
xor
push
popa
dec
popa
popf
adc
lods
cmp
jl
push
aaa
cmpb
inc
test
js
mov
sub
pop
iret
pop
adc
xor
sbb
adc
push
pop
lea
arpl
jge
pusha
xor
jle
cmc
xchg
sub
jae
jno
les
mov
out
pop
dec
lea
add
fwait
adc
jno
das
jbe
scas
push
pusha
push
push
imul
outsb
enter
fcoml
push
frstor
inc
jnp
stos
mov
mov
mov
pop
or
cmp
repz
mov
dec
stos
sbb
mov
das
cli
cmpsb
mov
cwtl
jp
cwtl
and
or
ret
aad
jge
cld
ja
mov
into
mov
negl
sbb
cmpsl
and
mov
mov
push
test
sahf
call
sbb
jmp
scas
repnz
mov
cmpb
out
xor
ret
lea
call
dec
xor
idivb
or
imul
xchg
lds
jno
pop
icebp
mov
push
scas
sahf
andb
das
clc
dec
xor
sbb
mov
cmpsb
adc
cli
loope
adc
lds
jno
jmp
shl
fsub
push
stos
popa
data16
aad
push
sub
xchg
push
mov
jb
mov
cmc
ljmp
leave
aad
sbb
jae
xchg
mov
jbe
inc
push
jo
pop
pop
push
xlat
sub
jno
inc
ficomps
sbb
inc
cmp
les
gs
int
pop
outsl
hlt
enter
pop
cltd
jne
daa
mov
add
out
cmpsb
fmuls
mov
adc
pop
sub
cmpsl
pop
sub
mov
orb
mov
jecxz
fidivrl
nop
sub
clc
xor
inc
cmc
into
jbe
cmpsb
inc
fs
jnp
ret
pop
cmp
jo
lea
cmp
es
lods
dec
jne
test
xchg
sbb
popf
sti
pop
out
cmp
sti
or
lods
jno
jle
cmp
ret
fwait
mov
inc
lock
xor
mov
lahf
adc
xor
push
pop
pop
imul
mov
mov
pusha
mov
movsl
xchg
pop
cld
pop
push
and
push
sbb
mov
shlb
ret
movd
or
and
cmp
cmp
fbstp
push
inc
cwtl
pusha
inc
cs
in
icebp
pop
xor
mov
pop
rcl
and
dec
push
imul
xchg
lock
fistps
or
adc
shrl
imul
movsb
outsb
data16
cltd
fsts
mul
xchg
and
dec
lcall
fcomp
cmp
cmp
sbb
cmpsb
pop
and
mov
dec
ret
enter
fisubrl
in
test
loopne
push
movsl
popa
mulb
pop
dec
xchg
adc
in
pop
dec
inc
mov
or
push
roll
test
and
out
pop
and
pop
inc
add
lret
xchg
sbb
mov
shlb
fadd
fistps
in
sub
loope
cltd
add
push
in
push
xlat
lods
orb
and
xlat
das
in
pop
jge
sbb
bound
adc
sub
cld
ret
xchg
jmp
pop
sbb
push
mov
insl
jnp
cmp
adc
pop
aam
sub
sbb
push
or
icebp
inc
sbb
popf
loope
stos
add
dec
jmp
pop
cmc
cmp
cltd
mov
pushl
sbb
push
and
fadds
out
cmc
in
inc
or
ret
push
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
xor
cltd
in
push
jl
pop
pop
jl
loopne
xchg
mov
es
jno
popf
insl
divl
jno
test
int3
mov
cmp
stos
movsb
xor
ds
sti
cmpsl
daa
leave
push
ret
jecxz
negl
jg
fildll
add
enter
popf
push
ret
repnz
aas
or
fdivs
lret
leave
test
lret
add
shlb
push
push
aaa
jb
mov
or
sbb
cli
xor
insl
in
mov
sub
and
rolb
movsl
cwtl
inc
lods
jo
inc
jle
out
cmp
pop
int3
push
ljmp
in
movl
call
mov
fs
pop
pushf
mull
xchg
loopne
ret
push
lods
ds
sbb
jge
cmp
leave
or
aas
int3
ljmp
inc
dec
mov
mov
dec
loope
fwait
imul
jbe
jbe
insl
cli
lea
mov
loop
adc
adc
or
push
mov
sti
incb
lcall
xor
divb
filds
movsb
aam
adc
sub
sbb
aad
aas
arpl
cltd
pop
xchg
adc
fcompl
punpckhbw
inc
xchg
cwtl
vandpd
pop
cltd
push
fwait
pop
cmp
push
jno
xchg
aas
pushf
inc
sbb
leave
cmpsb
dec
je
jle
mov
out
rclb
test
mov
fcmovb
sbb
imul
pop
dec
push
fbld
scas
mov
addr16
sub
jns
push
jg
scas
jno
sarl
and
popf
jbe
bound
jecxz
jle
pop
sub
les
iret
xchg
imul
sahf
inc
sbb
pop
dec
mov
loopne
sbb
test
loope
dec
aad
or
lods
lcall
pop
ret
push
jno
insb
cmp
cmp
and
and
aad
adc
or
mov
icebp
sub
outsl
adc
xor
mov
xchg
in
pop
add
scas
pop
lahf
xchg
push
outsb
mov
push
push
cwtl
xchg
sti
push
inc
lahf
jmp
jbe
adc
sti
add
std
xor
ret
xor
xor
jge
push
aaa
cmpsl
adc
fmull
or
mov
dec
push
dec
lret
cmp
ljmp
outsb
int
test
sub
bound
sahf
ret
scas
outsb
icebp
lret
and
jns
and
mov
call
fs
jo
cltd
fdivrl
in
mov
xor
jp
xor
aas
dec
scas
pop
push
xor
push
movsb
loope
add
push
pop
and
ljmp
cwtl
or
and
push
js
clc
sub
gs
mov
cmp
push
cmc
int
out
and
sbbl
gs
cmp
adc
add
push
sbb
stos
mov
add
out
or
push
shrl
cmp
jecxz
adc
ret
cmp
pop
jns
sarl
inc
outsb
insl
mov
or
lds
loopne
leave
add
mov
add
lcall
or
sahf
dec
aam
and
rcrl
push
jp
popl
add
mov
jns
and
mov
subb
mov
push
dec
push
fstpt
aas
or
dec
or
or
iret
xlat
pop
or
or
popa
dec
lcall
ficompl
cmpsb
lock
insb
out
sub
pusha
mov
mov
sbb
sahf
iret
mov
pusha
sub
jge
aas
sub
cmc
mov
lea
ljmp
leave
cld
lock
sbb
insl
pop
jle
push
pop
xchg
popf
mov
dec
aas
add
mov
aam
mov
sbb
jb
fcoml
stos
xor
jb
jmp
ret
sub
cmp
mov
in
lretw
xor
arpl
in
int3
and
mov
pop
shll
scas
popa
movsb
add
jb
xchg
dec
into
icebp
insl
les
sub
hlt
push
subl
fdivs
or
imull
jb
loope
adc
dec
push
leave
dec
pop
xor
loope
call
or
sbb
jecxz
lahf
dec
cld
or
adc
ficoml
mov
mov
cwtl
adc
cmp
mov
leave
cli
jo
push
movsb
frstor
or
cmpsb
js
std
pusha
ljmp
mov
insb
sbb
or
neg
sti
push
mov
aam
scas
mov
scas
pop
xor
bound
jno
lahf
arpl
and
add
or
cmpl
leave
sub
push
adc
cmp
sub
iret
jae
jmp
add
and
dec
dec
lahf
jne
call
pop
popf
adc
daa
and
fadds
push
divb
loop
sub
mov
enter
sbb
push
xchg
mov
lock
sbb
enter
ffreep
stc
sub
xor
xchg
das
cmpsl
arpl
imul
inc
popa
pop
pusha
int
mov
jg
cmp
adc
xor
lcall
sbb
dec
sub
pop
adc
aad
out
add
mov
enter
adcb
sub
mov
add
cmpsb
movsb
loopne
lret
js
pop
mov
push
cli
mov
inc
leave
adc
incl
and
subl
fcoml
pop
arpl
xor
jnp
insl
pop
adc
aaa
push
xchg
xor
xchg
and
stos
or
lcall
mov
mov
adc
ss
sub
xchg
das
push
pop
lea
jae
sub
xor
and
or
mull
xchg
call
push
and
push
popf
call
or
cmp
int
test
push
daa
inc
xchg
jge
lret
icebp
cmp
cmp
cmp
xchg
lcall
mov
enter
out
bnd
into
inc
into
ds
push
jle
and
inc
and
mov
movb
mov
or
xchg
mov
push
mov
mov
aas
ss
into
xlat
mov
arpl
pop
rclb
jl
sahf
dec
iret
sbb
inc
pushf
cli
adc
jno
xchg
repz
daa
pusha
and
mov
lahf
jge
or
repz
sahf
lcall
push
sbb
je
cmp
mov
lods
push
call
sbb
push
in
stc
push
push
cmc
cli
jae
lock
movsl
and
in
push
call
jg
or
imul
mov
add
mov
mov
popf
cmovo
out
jmp
mov
stos
test
dec
dec
mov
adc
adc
ja
adc
call
ret
in
pop
mov
adc
addl
cli
add
dec
jecxz
popf
lds
jge
sub
cmpsb
fstl
cli
mov
ljmp
cld
les
arpl
mov
xchg
call
adc
jl
xor
mov
andl
fisttpll
nop
mov
cmp
insl
mov
sbb
mov
or
loope
aad
inc
pop
xchg
inc
sub
enter
iret
fnsave
mov
jmp
rclb
inc
lock
fists
sbb
add
or
push
pushf
shlb
and
cwtl
sbb
adc
rcll
ljmp
inc
inc
lds
adc
lret
inc
sbb
in
mov
mulb
testl
lahf
xor
js
or
jg
pop
ljmp
cmp
xor
jno
adc
push
arpl
sub
or
out
gs
jae
les
jne,pt
jne
push
mov
mov
dec
in
pop
idivl
test
push
aas
arpl
jmp
lds
dec
je
cwtl
xor
xlat
outsb
xor
out
xchg
adc
lcall
push
sbb
jg
out
dec
cmp
mov
inc
dec
stc
mull
jbe
stos
ret
je
cmp
jecxz
mov
pop
sbb
lea
lret
jmp
lods
push
fisttps
lea
jb
test
lret
data16
daa
bound
add
xor
dec
dec
cmp
cli
cmp
std
pushf
sub
cmp
mov
data16
xchg
add
push
popa
or
inc
lods
gs
mov
push
xchg
and
ja
cld
movsl
mov
push
push
mov
mov
mov
jae
mov
popf
bound
or
fstl
or
push
shl
aam
pushf
or
add
ds
rcr
cmc
add
outsl
push
es
jmp
mov
jno
xor
mov
lret
mov
xor
sub
scas
arpl
cmp
sbb
pusha
and
sub
loop
mov
lods
dec
cmc
aam
jl
ja
dec
int3
in
aad
sbb
jg
inc
fstsw
push
push
push
hlt
pop
xchg
call
ja
cmp
imul
mov
dec
and
pusha
mov
cmp
push
sbb
fidivl
add
sar
lods
xor
mov
xorl
adcb
shrb
ret
in
mov
xor
test
mov
ja
stos
ss
dec
and
push
mov
pop
jp
xor
or
repnz
shlb
shrb
aaa
inc
lahf
cmpsb
xor
dec
sbbl
jecxz
testl
fdiv
dec
mov
add
adc
aaa
xchg
inc
popa
mov
fstpl
mull
inc
and
enter
jle
mov
imulb
jae
fdivs
mov
mov
cmp
xchg
pop
jge
bound
cmpsb
inc
ds
cmp
xchg
gs
lods
dec
ror
inc
loope
mov
sarl
cmp
popf
push
call
pop
sbb
jecxz
jl
adc
fsubrs
lcall
xor
xchg
xchg
lea
test
sbb
aad
in
adc
fmull
cmp
sub
inc
icebp
sbb
jne
out
std
cld
out
xlat
shrb
push
add
fcompl
adc
dec
out
cmp
mov
jge
xor
test
jecxz
sbb
add
add
push
cmpsb
push
lret
xor
aad
insb
daa
fs
dec
jmp
clc
cmp
push
dec
stc
mov
dec
adc
das
adc
test
gs
jb
vmovntdq
mov
mov
bound
cmc
inc
je
mov
ds
js
sahf
push
jecxz
add
or
pop
sbb
dec
xor
or
stc
pop
cmp
icebp
test
shl
mov
in
mov
push
dec
enter
or
inc
mov
xor
mov
jne
leave
popf
cld
ljmp
setle
add
lcall
xchg
and
and
scas
daa
cmpsb
into
movsl
adc
test
mov
hlt
jl
daa
cwtl
fdivrp
mov
jge
notl
nop
jmp
orps
xchg
mov
movsl
and
fdivl
dec
pop
in
repz
mov
pop
ret
faddl
pop
dec
add
jae
ss
aad
lods
fdivr
std
popf
stos
in
dec
rep
mov
cmc
mov
jecxz
divps
cltd
std
sbb
pop
inc
and
lock
fld
jnp
ds
pop
mov
xchg
mov
sbb
repz
mov
inc
push
xor
stos
iret
sti
icebp
cmp
pusha
xor
add
scas
add
lock
sti
test
or
out
loop
dec
mov
jno
in
jge
outsb
sarb
fldt
cwtl
sbbl
icebp
or
scas
insl
push
add
adc
jns
arpl
aad
push
dec
mov
clc
loopne
dec
push
jmp
xchg
dec
jo
jge
lods
adc
fadds
data16
cmpsb
aaa
sub
mov
sbb
jge
mov
pop
gs
sub
popa
hlt
lock
jp
aam
mov
jns
pop
lock
imul
enter
sub
xchg
push
pop
dec
push
scas
push
jge
inc
add
in
rorb
bound
ret
icebp
fisubs
inc
mov
and
and
cli
loop
xchg
sub
sbb
xor
pop
sar
or
adc
stos
add
dec
mov
cmpsb
hlt
ret
fld
pop
add
xchg
xchg
mov
and
push
imul
inc
bnd
mov
pushf
xchg
pop
hlt
test
andl
addr16
add
push
xchg
les
jno
cmpsb
jmp
mov
divl
cmp
cmpsl
shlb
ljmp
das
sub
std
popfw
add
and
xchg
mov
sub
scas
push
js
lret
or
daa
lret
and
in
xchg
and
popf
sbb
je
xchg
dec
dec
sbb
cmp
into
bound
out
clc
pop
adc
mov
adc
xor
and
or
mov
push
xor
cli
sbb
into
in
out
dec
out
insb
fs
jle
fwait
out
test
pop
push
orl
mov
push
scas
jne
adc
movsl
mov
aaa
in
cli
cltd
mov
pusha
mov
jo
mov
ss
in
js
mov
aas
xchg
mov
push
mov
lods
mov
fisttpll
sub
out
mov
popa
inc
ds
mov
aaa
in
inc
inc
jmp
fwait
loopne
pop
mov
push
push
sbb
dec
dec
daa
fidivrs
leave
inc
inc
add
add
inc
push
hlt
sub
fmuls
notb
dec
push
in
pop
andl
in
xor
push
cmp
push
mov
adc
aas
pop
fcomps
cmp
test
inc
mov
insl
lods
jns
jl
cmp
push
dec
hlt
jne
insl
ffree
sbb
xor
mov
cmpsb
out
xorl
dec
mov
loopne
mov
dec
enter
lcall
in
xor
cs
sti
xor
mov
int
mov
mov
aam
jnp
and
clc
pop
add
nop
in
repz
dec
divb
shrl
ret
jle
psadbw
jno
push
mov
sbb
jl
repz
clc
mov
jg
mov
sub
loop
daa
lahf
xor
adc
xor
xchg
xchg
mov
dec
pop
mov
imul
adc
xor
lods
cli
sub
pop
es
push
je
es
pop
add
lods
inc
stos
sub
pop
fadds
pusha
jbe
sbb
or
in
and
dec
jl
add
fdivrs
scas
rorl
out
pushf
cli
aas
neg
jge
lock
dec
mov
dec
leave
inc
sub
sub
or
jns
rolb
adc
dec
data16
jge
jl,pn
or
in
push
pop
sbb
nop
gs
call
jns
data16
jmp
push
call
aas
jg
xor
adc
in
ss
pmulhuw
add
mov
mov
sti
xor
mov
and
out
ret
adc
int
dec
dec
sbb
imul
mov
inc
loope
jbe
push
mov
pop
hlt
fwait
adc
or
lcall
pop
or
popa
sub
pop
push
inc
push
cmp
lods
cmp
jg
push
xor
add
cmc
andl
incb
hlt
xorb
fadd
sbb
cmc
adc
push
jne
push
test
into
mov
sbb
rcrl
test
call
pop
pop
sbb
cwtl
enter
jl
rcr
add
icebp
dec
iret
dec
cmpsl
add
dec
mov
inc
stos
lds
xor
loope
jb
psrad
cmp
cmp
push
push
add
fisubl
add
mov
add
loope,pt
xor
js
or
shrb
cwtl
mov
inc
inc
call
add
add
les
stos
jae
jmp
movsl
mov
mov
mov
xchg
jno
xchg
pop
xor
lret
es
inc
adc
popa
push
sti
test
hlt
cs
fisubrl
addr16
movsl
out
shl
fcoml
xchg
subb
loopne
daa
test
inc
inc
mov
addb
ret
out
or
outsb
mov
nopl
xchg
xor
inc
scas
jnp
mov
ljmp
and
enter
inc
iret
cmp
test
mov
pushf
pop
pop
sahf
icebp
fcomps
mov
jl
sub
aas
cli
dec
dec
pop
loopne
jge
lods
xor
in
pop
add
das
repz
mov
push
dec
xlat
pop
dec
or
jnp
and
jno
ja
push
jbe
jbe
jg
cmc
pop
jp
xchg
test
mov
mov
popl
jne
cs
das
iret
cld
add
test
pushf
dec
addr16
and
leave
pop
inc
mov
repnz
out
inc
dec
in
xchg
lahf
fcoml
mov
mov
pop
cmpb
repz
mov
divb
sbb
test
pop
pusha
sub
xchg
test
adc
sub
jbe
pop
jmp
cwtl
popf
call
jg
repz
repz
add
negl
ret
sub
jns
or
clc
lea
in
scas
push
mov
adc
repnz
push
sub
aam
mov
loop
nop
sbb
popa
adc
nop
je
enter
cmp
hlt
in
cs
je
inc
das
jnp
dec
adcl
mov
mov
subl
test
mov
push
jp
push
loop
mov
mov
lea
lock
inc
add
pop
mov
idivb
aam
outsb
test
ds
mov
mov
pop
repz
and
dec
and
jmp
loope
or
data16
fcompl
subl
lods
lret
cmp
cld
pop
jb
cmpsl
mov
dec
mov
sub
or
add
mov
je
fbstp
push
jo
out
enter
lea
push
pop
ret
push
mov
and
and
aaa
jae
sub
mov
mov
fdivr
rcl
mov
push
test
xor
add
in
mov
es
lretw
pop
pusha
inc
cmpsb
and
inc
and
sbb
mov
jle
mov
popa
jle
jle
loop
jb
sarl
pop
xor
dec
mov
sbb
iret
mov
jns
sub
pop
movsl
xchg
stc
xchg
push
mov
movsb
subb
pop
push
mov
std
jle
or
pop
and
orl
mov
sub
rorl
xchg
dec
push
xchg
xchg
mov
ljmp
and
ret
out
fcoms
fs
aas
in
bound
sub
ret
pop
cltd
sbb
in
test
push
inc
out
and
mov
idivb
movsl
or
xchg
rsqrtps
js
jb
push
lret
sbb
fdivrl
adc
lock
pop
xlat
cmc
loop
stos
loopne
in
popa
sti
xchg
cli
into
cld
aam
xchg
mov
xchg
xor
das
add
aam
loope
xor
mov
mov
sub
inc
sub
jg
mov
adc
data16
cwtl
mov
out
test
aaa
pushf
cmp
mov
mov
pop
test
sub
jmp
or
jg
cmp
xchg
add
fnstcw
into
mov
fyl2x
sbb
into
mov
sbb
pop
aam
sbb
mov
pop
xchg
and
mov
enter
cmp
cmp
cmpsb
pop
push
lret
int
pusha
mov
add
mov
sbb
mov
or
push
sahf
sbb
sti
shll
mov
sub
int
cmp
fadd
aad
mov
es
lea
int
loope
jp,pn
mov
rcr
orb
push
outsb
out
add
cmp
imul
push
out
flds
ljmp
outsb
or
xor
dec
sar
fcoml
fs
shll
push
lret
push
push
mov
mov
rcrb
rep
repnz
sub
sub
jge
mov
outsb
sarl
mov
xchg
mov
add
call
or
sahf
repz
notl
sub
and
lret
jbe
ja
jo
std
fidivl
bound
idivb
test
cmc
cltd
in
int3
aad
pop
stos
xlat
mov
std
adc
jg
mov
adc
add
adcl
xchg
data16
rcl
add
mov
aad
jl
out
sbb
cld
push
xchg
jmp
and
add
xchg
add
cwtl
dec
cmc
mov
push
shrl
fwait
jns
rol
scas
outsl
fs
cs
or
pop
and
dec
sub
jecxz
hlt
jge
out
pop
push
pop
add
icebp
adc
testl
aam
adc
mov
gs
aas
incb
shrl
ror
lcall
pop
aas
push
pop
inc
push
data16
xlat
enter
in
mov
daa
dec
xor
loope
mov
scas
pop
xor
repz
sub
fstps
in
xchg
add
in
adc
or
aaa
mov
xor
sbb
push
xor
inc
int
aad
jg
sub
fists
pushf
jo
mov
cmp
ret
test
lret
dec
jns
clc
pop
push
jecxz
hlt
push
xchg
pop
pop
xor
sbb
rcr
stos
ja
and
xor
mov
add
xchg
push
iret
mov
adc
enter
dec
pop
adc
idivb
mov
pop
jge
leave
aas
jl
xor
sbb
mov
mov
fdivrp
sbb
jp
xchg
insb
jle
sahf
inc
mov
out
xchg
jbe
mov
hlt
test
adc
sub
test
and
rep
pcmpeqb
popf
dec
outsb
pop
mov
mov
pop
lret
mov
jge
jmp
dec
cmp
ja
ficomps
pop
hlt
insl
call
pop
mov
out
dec
aas
adc
xchg
jg
sub
pop
test
cmpsl
stc
mov
shrb
jle
lds
dec
ret
push
adc
sbb
out
cwtl
sbb
dec
push
push
xor
clc
mov
ficoms
shlb
lds
shlb
inc
or
inc
jge
mov
push
mov
mov
orb
xchg
mov
sahf
sbb
mov
pop
inc
xor
or
lock
inc
stos
adc
xchg
shlb
mov
jo
rorl
mov
push
inc
xchg
ds
imul
fmull
push
or
daa
jb
fisttpll
in
insl
scas
aas
jns
ja
push
jp
dec
xchg
dec
mov
test
clc
dec
push
loop
imul
aam
stos
fwait
popa
mov
loop
int
cmp
mov
add
adc
mov
out
mov
xchg
jecxz
or
icebp
jmp
test
rcll
push
cmpl
mov
insb
and
popa
cs
imull
into
add
push
mov
popfw
ret
mov
add
pop
clc
cmp
aam
inc
into
ljmp
mov
bound
dec
enter
pop
lcall
gs
push
and
fdivl
popa
icebp
sbb
xchg
adc
sub
mov
incb
mov
cmc
in
stos
scas
mov
lret
call
sti
orl
dec
inc
push
lods
mov
mov
mov
adc
pop
sbb
xchg
adc
sbbl
xor
test
adc
mov
scas
popa
push
dec
ljmp
xor
lret
inc
ljmp
and
and
lcall
test
loop
movsl
dec
cs
jg
mov
ja
lret
lahf
adc
mov
scas
incl
out
inc
mov
inc
sbb
dec
pushf
clc
in
movsl
in
cmp
sub
mov
repnz
add
mov
std
jbe
dec
imul
jl
decl
mov
into
sbb
mov
cmp
mov
ss
and
cmc
pop
cmp
or
mov
cs
mov
call
pop
inc
dec
cmp
mov
jns
mov
in
mov
insb
cmp
dec
cmp
orb
cmpsb
pop
arpl
inc
mov
mov
out
outsb
sti
push
sti
and
scas
mov
push
bound
out
xor
sub
mov
xchg
cmp
pop
dec
mov
and
cmp
pop
fbstp
inc
xor
data16
add
jge
pop
mov
inc
pushf
adc
in
sti
adc
pop
pop
add
sbb
push
mov
xor
sbb
mov
jge
push
push
sbb
rcll
adc
imul
sbb
push
sub
push
jo
cmc
cwtl
mov
ret
add
stc
decb
xor
loopne
adc
out
pop
lods
inc
dec
daa
fcmove
scas
shlb
mov
xchg
inc
lahf
das
xchg
dec
and
mov
pop
divl
sub
dec
je
repnz
loopne
add
cmp
mov
rcl
mov
scas
xor
lret
orb
sub
inc
jae
pop
jp
xchg
into
mov
shl
pop
loope
push
add
sbb
bound
movsl
mov
pop
scas
into
out
mov
shl
sti
xchg
lcall
imul
std
sub
loopne
popa
cmpsl
jns
jl
jb
insl
push
cli
enter
lcall
orb
push
adc
call
out
add
pop
stc
addb
inc
pop
icebp
testb
xchg
je
fldl2e
aam
sbb
and
push
adc
dec
gs
cmp
sbb
mov
adc
mov
adc
clc
inc
popa
sbb
scas
jmp
rcr
inc
enter
ret
adc
fwait
and
cmc
dec
xchg
mov
add
cwtl
and
mov
push
std
es
cs
out
add
clc
sub
xchg
xchg
insb
mov
inc
jle
pop
pop
test
stos
adc
add
ss
adc
test
aad
std
pop
sub
lea
test
mov
mov
inc
gs
jns
xchg
mov
inc
mov
aas
pop
daa
movsl
cmpsl
cli
lcall
jbe
sbb
dec
jl
dec
push
out
test
pop
ret
jae
pop
mov
mov
cmc
call
adc
aad
adc
mov
ret
nop
outsb
dec
jae
mov
jl
xor
push
fcompl
push
out
ss
and
pop
and
out
mov
adc
outsb
mov
mov
pushf
add
inc
pop
mov
lods
daa
push
add
mov
lret
adcb
loope
out
inc
jmp
mov
stos
sub
jae
fidivrl
sbb
jle
adc
test
rclb
mov
stc
xchg
mov
lea
adc
pop
cwtl
cli
pop
xor
loope
lock
xchg
leave
mov
xlat
mov
push
pop
lds
lret
lret
sbb
mov
sub
jg
shlb
leave
mov
repnz
inc
pushf
rorl
sbb
xor
in
xor
adc
cwtl
cmp
lcall
sub
insb
int3
dec
cmp
cs
hlt
sbb
mov
inc
mov
mov
out
js
fidivl
test
xor
lea
jp
sub
xchg
jg
cltd
lret
lret
movsl
pushf
jns
pop
ficoms
push
roll
cmp
imul
insb
xor
xor
add
stos
dec
mov
push
cmpsb
ss
fcoml
adc
pop
aad
mov
pushf
nop
test
cmc
xor
pop
add
add
push
notb
or
mov
add
out
aad
push
jbe
les
xchg
push
lods
scas
inc
jo
lahf
adc
xchg
fcmovbe
lahf
sub
outsl
shll
sub
stos
cmpb
int3
mov
movsb
jecxz
inc
xor
push
xchg
cli
enter
outsb
add
push
jo
pop
mov
sub
nop
loop
cmp
fwait
mov
test
sub
jns
mov
jnp
inc
nop
notb
clc
and
dec
in
popa
mov
mov
jle
sarb
js
sbb
pop
arpl
inc
sti
mov
add
add
mov
fldl
sbb
mov
popf
dec
loope
mov
push
push
fidivs
push
faddl
inc
in
xchg
rclb
fwait
arpl
mov
lods
cmp
jp
paddsb
pop
and
and
aad
out
inc
push
sbb
js
sub
hlt
mov
mov
sbb
xor
ljmp
adc
push
stc
addr16
push
push
xor
lea
jae
add
mov
mov
loopne
cmp
dec
lahf
in
mov
mov
addr16
jg
fwait
int3
lods
jno
dec
fsubr
jo
mov
xor
jbe
ja
xchg
ja
ja
mov
in
aas
jmp
inc
es
pop
mov
xchg
or
xor
and
dec
int
jb
adc
repz
movsl
popa
fcompl
pop
scas
das
lds
test
out
enter
pop
add
inc
jecxz
shll
xchg
stos
xor
cwtl
jo
sahf
xchg
push
sbb
xchg
mov
cmpsl
sbb
orl
aam
jge
and
adc
shll
repnz
xchg
pop
xchg
loopne
outsb
pop
cli
mov
push
jle
xor
dec
xchg
ja
jne
mov
imul
loop
push
movsl
dec
ffreep
cmc
pop
scas
xchg
dec
out
fwait
pop
mov
adc
jecxz
in
testl
scas
daa
es
mov
insb
fs
pop
add
cs
jns
sub
leave
cs
scas
sub
cvtps2pd
cmc
fs
int3
inc
repz
cwtl
or
jl
inc
mov
xor
loop
cmp
mov
cs
jbe
les
jl
sub
cltd
jo
es
cmp
push
push
mov
cmp
and
cli
xor
mov
scas
hlt
vpsubw
and
jcxz
mov
or
bnd
clc
adc
xchg
sub
js
scas
fisubrl
ja
je
loopne
mov
neg
lahf
fwait
adc
xchg
xor
xorl
loope
pop
nop
dec
or
leave
in
and
daa
aam
mov
push
jg
push
cs
outsb
push
into
or
imul
mov
test
lea
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
dec
mov
jl
pop
pop
jl
rorb
push
jle
xor
xchg
mull
imul
pop
ret
stos
mov
inc
mov
mov
fwait
sub
xchg
gs
sbb
testl
sarb
je
clc
xor
fistpll
insl
leave
fstpt
xchg
mov
sub
jne
inc
rcrb
stos
ds
nopl
in
push
dec
xor
and
testl
inc
sub
xlat
inc
pop
push
add
icebp
pushf
aad
es
add
pop
test
or
sbb
mov
xchg
jge
int3
and
sarb
and
adc
sub
pop
xor
xor
das
pop
in
xchg
inc
xchg
and
call
test
icebp
test
jb
loop
cmp
stc
jbe
jb
cmp
dec
ret
mov
xor
les
mov
or
rclb
fisttpll
cmovne
push
sbb
negl
decl
jnp
daa
xor
shlb
fists
lret
insb
scas
xor
push
add
lret
cmp
lods
dec
cwtl
push
andb
push
pop
xlat
std
fists
jo
ret
sbb
aam
dec
sahf
aam
adcw
aad
out
and
push
stc
cmp
enter
push
xchg
inc
dec
pop
push
push
iret
or
ja
add
out
xchg
les
fcoml
out
dec
mov
imul
push
arpl
sbb
jp
rclb
adc
mov
jo
adc
pop
scas
mov
xor
jecxz
cmpsl
jns
das
xor
pop
fnstcw
into
cmpsl
push
test
xchg
syscall
xor
fcompl
test
add
pop
inc
sub
jbe
xor
dec
pop
out
shll
pop
fwait
jne
jnp
dec
subb
mov
mov
iret
jb
inc
std
notrack
test
mov
arpl
mov
xchg
inc
fisubl
sbb
pop
pop
mov
jge
pop
loop
sub
mov
in
push
jge
insb
movsb
enter
xchg
in
and
in
loope
mov
nop
xchg
mov
push
sti
gs
jae
ret
inc
dec
cwtl
stos
pushf
repnz
lock
cltd
outsb
mov
jge
mov
add
xor
nop
sub
hlt
shlb
movsb
sub
xor
add
cmovns
sti
mov
xlat
mov
out
stos
ss
jb
jmp
popa
inc
add
pop
sbb
dec
mov
jmp
enter
mov
xor
les
scas
mov
popf
pop
fnstsw
divb
add
aad
dec
mov
jns
and
loop
lret
xor
dec
scas
xlat
addr16
jae
mov
cmpl
mov
insl
ja
xor
daa
dec
clc
rcl
popa
lret
sub
pop
int3
pop
addl
sub
mov
jo
mov
jns
lods
daa
out
and
mov
xor
ret
xchg
and
dec
jo
int3
push
outsb
lahf
dec
les
sbb
adcl
stos
cmp
call
mov
pop
sub
imul
xor
xor
sbb
mov
jecxz
das
mov
ja
cmc
popl
add
dec
sub
dec
mov
in
add
dec
scas
mov
js
sub
inc
cmpb
pop
movsb
mov
jp
les
rorb
push
repz
add
dec
fstp
jle
sbb
lgs
test
lock
cmp
leave
or
loopne
orb
es
inc
js
fisttps
imul
push
subl
xor
add
nop
insl
and
pop
pop
dec
lret
jbe
ljmp
mov
lods
lods
and
fimull
lods
pop
popf
fsubs
faddl
inc
push
in
lahf
dec
arpl
xor
repz
test
adc
adc
jae
daa
call
push
pop
nop
add
adcb
idivl
mov
inc
loop
jnp
scas
pop
and
fadds
arpl
mov
lea
or
mov
pop
cmp
icebp
cmp
js
jne
add
cmp
mov
or
add
movsl
stos
and
mov
push
add
sti
stos
daa
int
stos
cmp
push
sti
cmp
cmpsl
loop
mov
lahf
roll
stc
jecxz
je
lahf
js
pushf
movsb
dec
xor
pushf
js
mov
outsl
dec
xchg
addl
pop
pop
xchg
outsl
out
xchg
fndisi(8087
push
and
and
xor
imul
mov
xor
lods
nop
mov
push
out
or
in
jl
and
mov
sbb
xchg
imul
jo
add
fucomi
pop
xor
add
xchg
jne
cmp
out
cmpsl
push
push
mov
adc
or
add
xchg
jge
xchg
dec
jecxz
dec
rcrb
popf
add
fildll
rorl
and
shll
sbb
push
xchg
push
mov
neg
mov
aas
jmp
pop
popa
mov
push
in
inc
mov
cmc
nop
ljmp
push
jns
or
sti
lcall
cld
mov
mov
dec
xlat
pop
mov
out
cmc
in
push
push
or
test
mov
mov
addb
pop
and
adc
test
loope
lret
out
mov
and
data16
push
and
sahf
cli
lahf
int
jo
xorl
pop
sbb
imul
jmp
bound
shlb
mov
jp
mov
dec
pushw
imul
mov
mov
out
les
imul
dec
out
jle
mov
inc
mov
lods
jp
jp
stc
mov
test
add
add
jecxz
jg
mov
and
pop
cltd
leave
lds
cli
scas
stos
mov
push
sahf
adc
into
inc
test
mov
dec
sbb
sahf
sub
jns
sbb
out
negl
push
fidivrl
jecxz
inc
adc
data16
and
sbb
fwait
xchg
mov
jae
add
adcb
push
out
pop
out
jge
cmpsl
loop
mov
sbb
mov
cmc
nop
fists
movsb
inc
mov
pop
std
push
xor
mov
popf
jle
icebp
mov
pop
in
mov
frstor
fists
inc
rcr
mov
xchg
mov
pop
scas
loope
jp
xchg
sbb
or
sub
or
push
loop
push
mov
movsb
cmp
lock
xchg
pop
cmp
popa
jae
jnp
movsl
jp
int
sbb
ds
pusha
xor
mov
mov
dec
fldl
aas
mov
dec
push
fsubl
mov
outsb
divb
cmpsl
pop
lret
clc
sub
push
dec
and
or
mov
adc
add
das
push
jg
aaa
dec
xor
cmpsl
add
sub
adc
sahf
js
mov
js
add
mov
daa
mov
dec
loope
xor
push
dec
cli
in
lcall
lret
push
mov
out
sti
cmpsl
jecxz
std
jle
daa
dec
aam
pop
xor
jnp
fcomps
movsb
iret
cltd
out
push
pusha
cmpsb
popaw
mov
shll
and
jmp
std
push
dec
mov
cmpl
xchg
lahf
jbe
mov
leave
test
mov
xchg
popa
popf
bnd
add
or
into
fisubrs
cmpsb
stos
lea
iret
in
pop
add
idivl
clc
in
xor
sahf
push
jmp
sub
cmp
negb
sub
mov
das
divl
or
out
jns
sub
push
fcomps
add
push
and
add
or
and
jb
jp
bound
out
cmp
pop
ja
sub
out
or
cmp
sbb
or
fbld
mov
and
cmc
pop
out
cmp
jp
aas
sub
sbb
adc
pop
movsb
jne
push
fnstenv
in
les
xor
pop
aam
ss
mov
mov
xchg
nop
jl
and
sbb
dec
xchg
fistpll
mov
jg
je
testb
lahf
std
frstor
fcmovb
das
and
pusha
cmp
mov
or
jg
sub
int
inc
cwtl
ret
add
fwait
jge
jb
inc
imul
shl
addr16
test
mov
mov
lahf
int
subb
jge
int
jbe
sbb
orl
jns
mov
out
test
sbb
pop
push
dec
cwtl
cmp
push
call
add
sub
or
jno
dec
push
pop
clc
add
inc
mov
lret
sbb
mov
xor
sbb
dec
push
sarl
mov
fwait
jg
idivl
rcll
mov
cmp
out
mov
cs
int
int3
adc
mov
xchg
jecxz
or
mov
sub
clc
je
jecxz
cmp
data16
xor
aam
movl
mov
clc
mov
sbb
out
std
lock
mulps
inc
mov
xchg
push
fdivl
cmpps
fst
jbe
popf
jb
and
and
daa
cs
sub
fimull
mov
jl
adc
mov
rorb
xlat
aam
mov
cmpsb
dec
sub
push
xor
lcall
leave
cltd
iret
roll
into
repz
pushf
pop
adcl
in
out
pop
repz
add
sub
mov
inc
popf
push
mov
call
fmul
jg
or
cmp
stc
out
and
jmp
push
lea
icebp
inc
add
jle
mov
mov
jle
add
leave
or
fdiv
push
or
mov
lret
pop
notb
cli
int
sbb
lods
jae
or
roll
mov
outsl
fdivs
sahf
and
push
xor
xchg
or
stos
mov
bnd
sbb
pop
adcb
insb
inc
insb
xchg
pop
mov
aam
adc
rolb
and
out
ret
sub
fcmovb
mov
dec
mov
fwait
cmp
fcmovu
mov
les
dec
mov
mov
roll
inc
pop
inc
cmp
jb
shlb
call
add
push
cmpsb
mov
call
push
fstpl
mov
push
aas
jg
xorl
or
push
push
push
mov
push
les
or
push
mov
or
pop
adc
inc
mov
bnd
mov
in
jns
add
ds
repnz
jge
dec
fcmovnu
pop
jbe
and
roll
and
mov
push
xchg
fs
clc
dec
stc
pop
cmp
inc
dec
xchg
add
adc
das
pop
mov
sahf
xchg
js
scas
push
ljmp
in
rcrl
dec
xchg
imul
mov
testb
out
test
inc
std
lcall
adc
mov
sbb
int3
jnp
shrl
pop
cmp
test
inc
inc
push
pop
dec
lret
cmp
shlb
ss
movsl
sub
insl
rolb
inc
adc
lret
pop
mov
mov
mov
mov
lcall
cmpsb
shrd
lret
pusha
cld
cli
aam
inc
push
orl
mov
adc
and
cmc
or
jo
gs
mov
dec
sub
stos
mov
std
into
mov
xor
jb
fmull
xchg
hlt
mov
jecxz
xor
daa
outsb
pop
lods
jmp
ja
mov
fisttps
es
xchg
pop
fistl
fistl
ss
sub
fnstsw
rclb
jb
xchg
push
mov
mov
inc
xchg
sbb
mov
outsb
xchg
hlt
xor
lods
mov
aam
fs
pop
lods
dec
test
test
cmc
adc
cmc
testl
mov
or
mov
fisubrs
jno
pop
repz
jg
sbb
inc
pop
mov
lds
lcall
ljmp
mov
push
inc
mov
enter
pop
scas
inc
inc
insb
or
adc
out
mov
lds
aam
cli
push
cmp
popa
pop
add
pop
cs
sub
cmp
loopne
inc
cmpsl
jl
add
pop
out
test
jmp
pop
mov
mov
mov
ss
inc
inc
dec
dec
rsqrtps
imul
sbb
aaa
int
dec
lret
aas
push
jle
pusha
xchg
inc
lret
push
fwait
js
sub
cmp
test
dec
or
popa
cmp
or
push
pusha
mulb
stc
or
mov
sub
and
sahf
loope
push
xchg
arpl
cmp
fadds
faddl
aas
mov
test
cmp
mov
mov
cltd
fisubs
jp
shrb
inc
sub
mov
push
xchg
in
shll
lcall
insl
mov
jnp
aad
sti
andl
add
rcr
stos
push
xchg
cld
loop
jecxz
xor
rcll
ljmp
or
aaa
xchg
pop
cld
lods
or
inc
add
lods
cli
outsb
jge
aam
inc
sub
fldln2
sbb
imul
xor
fcompl
or
repnz
cmpsl
pop
sbb
test
sbb
mov
mov
lods
loope
aaa
outsb
xor
or
xor
iret
js
pop
sbbl
outsl
pop
jb
pop
jle
xor
pop
out
popa
loope
cltd
sbb
dec
stos
inc
rcrl
sbb
je
xor
sbb
or
jo
call
jle
dec
repz
test
xchg
insl
int3
notl
sti
mov
xor
sbb
sbb
xchg
pop
mov
js
mov
pop
outsl
aad
fcmove
mov
cmpsb
mov
in
adc
fisubrs
mov
movsb
mov
pop
sub
sti
or
out
xor
jp
je
out
mov
jge
pop
jle
ja
int
stos
pop
dec
mov
xor
cli
outsl
mov
mov
mov
mov
stos
xor
mov
xchg
out
pop
inc
lds
sub
pop
lds
adc
inc
std
vphsubbw
test
mov
lock
cs
sbb
roll
out
add
bound
je
loop
aad
andb
and
push
jmp
and
jge
push
lds
xor
and
mov
cmc
add
dec
pop
and
add
mov
mov
adc
ffreep
int3
popf
inc
xchg
js
jnp
loop
negl
dec
shl
sub
jo
mov
je
lds
pop
pop
or
jl
movsl
or
jl
jl
pop
sbb
sbb
sub
mov
or
js
je
rorl
das
or
adc
push
dec
or
lock
lea
fdivp
jno
std
push
xchg
xchg
dec
sub
icebp
mov
cwtl
pop
pop
sbb
xchg
jle
xor
cmp
repnz
xchg
dec
mov
adcl
sub
orl
in
loop
insb
xor
mov
inc
inc
xor
jb
xor
scas
loop
pusha
sub
je
dec
sub
pop
imul
int3
sahf
pushf
or
adc
pop
add
mov
ret
lret
mov
sbb
adc
lea
pop
lds
andb
lret
xor
push
cmc
xor
jbe
loope
or
cmc
xor
dec
imul
mov
stc
dec
inc
iret
movsb
and
sbbl
fucomip
out
mov
or
sbb
andl
jbe
loop
dec
scas
or
xchg
and
add
push
dec
pop
shlb
inc
push
mov
int3
cmp
out
inc
stos
xchg
ret
in
cmp
jbe
push
popf
mov
fstpl
dec
pop
push
enter
mov
lahf
rcll
imul
ret
xchg
xor
mov
mov
lods
mov
in
mov
xchg
lret
jae
stos
mov
xor
sbb
movsl
into
push
jb
test
ljmp
repnz
je
jne
add
dec
cmp
push
pop
sahf
imul
dec
dec
cld
popf
mov
fsubrs
sub
cmc
idivl
adc
mov
xor
push
in
ja
andb
cwtl
mov
add
push
mov
push
in
sbb
test
hlt
pop
add
and
pop
adc
fldl
mov
xor
cmp
in
inc
mov
and
push
adc
sbb
sbb
scas
dec
inc
hlt
xor
ret
mov
out
leave
dec
outsb
inc
cmp
rcrl
adc
popa
add
pop
sbb
push
dec
imul
sub
sti
and
pusha
dec
inc
out
sub
mov
fimull
insl
push
xor
push
sbb
popa
faddl
mov
xor
sbb
or
repz
sbb
faddl
aas
das
xchg
or
sbb
ss
movsb
mov
inc
sub
mov
int3
push
scas
add
push
xor
addl
add
mov
pop
hlt
cmpsb
add
enter
stc
sti
adc
loopw
pop
mov
sbb
push
sub
cwtl
add
incb
jle
xlat
orl
xor
sub
cmpsl
aam
fisubrs
and
cmp
jp
lods
jle
fs
aaa
jmp
mov
jno
xchg
dec
data16
inc
mov
adc
loopne
out
sbb
adc
dec
inc
sbb
jbe
mov
aas
and
and
pusha
push
stos
pop
dec
add
cld
cmp
pop
sahf
mov
sub
lret
or
fistpl
lret
inc
aad
movsl
into
dec
arpl
mov
daa
cmp
or
push
sti
shll
pop
pop
scas
adc
enter
mov
test
mov
push
scas
cmc
jno
xchg
data16
insb
pop
mov
xchg
rcrl
lods
adc
loope
aaa
ret
adc
lods
mov
jle
in
jno
cld
pusha
sbb
outsb
ror
mov
push
cli
dec
xchg
ds
fistps
mov
lds
sub
shr
lcall
aas
loope
outsl
xchg
std
data16
push
mov
mov
rorl
dec
dec
ror
or
mov
cmp
push
insl
das
pusha
jnp
cmp
and
scas
and
jge
mov
adc
or
adc
repz
data16
ljmp
fs
movsl
add
inc
and
jmp
jl
cwtl
jle
xor
add
idivb
std
jnp
pop
sub
lret
test
cmpl
sub
sub
stc
xchg
mov
leave
push
dec
dec
daa
nop
fnstsw
pop
jle
xor
sub
loopne
test
mov
sbb
adc
nop
sub
nop
mov
fcompl
lcall
xchg
sbb
notb
inc
cmp
lcall
dec
pop
push
je
sbb
mov
fs
inc
adc
ficomps
lods
push
int
jno
cmp
pop
mov
push
jnp
jge
pop
jno
jle
inc
cmp
scas
aas
jg
mov
sub
dec
sbb
dec
inc
sbb
dec
outsb
mov
fisubrs
mov
icebp
mov
mov
out
ja
lods
sub
adc
push
push
mov
inc
mov
cli
movsl
mov
jle
inc
mov
hlt
jns
add
test
das
mov
aad
sub
dec
or
mov
imul
sub
adc
cmp
out
mov
add
and
pop
aas
jg
ja
mov
stc
or
jo
cwtl
inc
cmpl
cltd
das
testl
pop
daa
add
cmp
and
repz
dec
xorl
sbb
pop
add
lock
pusha
push
sub
mov
adc
cmc
lock
jmp
xchg
push
and
mov
lock
adc
mov
push
in
sbbl
in
jbe
or
xor
sti
je
das
fwait
mov
push
adc
pop
fwait
mov
pop
dec
imul
mov
clc
mov
ljmp
es
out
cmp
imul
arpl
pop
ror
fisubl
jmp
add
push
repnz
push
push
jl
aad
add
shll
imul
movsb
xchg
dec
or
sbb
mov
insl
push
fcomp
cwtl
insl
adc
in
lea
jbe
gs
mov
dec
les
iret
frstpm(287
insb
sub
loope
out
ret
jb
xchg
enter
pop
jnp
xchg
cmc
daa
imulb
push
repnz
imul
and
je
ljmp
pop
ja
divl
mov
loope
mov
push
std
xor
xlat
cmp
push
xchg
jecxz
mov
call
sahf
add
sti
jmp
arpl
sbb
xor
push
jno
cmp
pop
lock
fwait
jmp
cmc
ror
andl
out
xor
js
sub
add
or
mov
loope
xor
negl
into
mov
mov
dec
cmp
and
mov
iretw
lods
fs
jp
ljmp
negl
push
lahf
sub
insl
adc
imul
jne
xchg
xchg
idivb
sbb
rcrl
rolb
sbb
lahf
sarb
mov
in
dec
push
shrb
sub
cmp
mov
test
pop
sbb
movsb
push
daa
dec
sub
or
stos
addb
mov
sub
lds
cmp
mov
xchg
repz
aas
lret
mov
cmpsb
imul
int
jnp
les
jl
cmp
insl
sub
ss
ss
test
scas
mov
ss
fmuls
es
insl
adc
loop
pop
std
insb
dec
sub
sbb
pop
bound
insl
out
jg
mov
and
icebp
imul
mov
inc
mov
sbb
jno
rcll
insl
dec
hlt
std
pushf
dec
dec
mov
insb
xchg
mov
test
jns
add
fwait
jmp
cmp
sahf
outsl
sahf
and
push
mov
push
loope
insb
and
adc
outsb
fcoms
popf
pop
cltd
jbe
adc
pop
sarb
jl
pop
fdivrs
lods
jnp
aam
pop
cmp
addr16
aam
lds
lods
imull
push
sbb
call
jl
mov
out
jge
mov
inc
xchg
push
xchg
xor
jg
rclb
cmp
mov
mov
mov
fwait
add
jb
dec
inc
inc
outsb
popf
call
lds
add
or
ret
adc
lcall
or
xor
repz
shr
mov
inc
inc
mov
push
test
gs
cmpsb
insl
popa
cmp
mov
mov
outsl
mov
inc
push
insl
cmc
js
cmp
xlat
fldenv
scas
sbb
mov
jmp
mov
pop
jae
ret
sarl
pop
xchg
jnp
xchg
lods
cli
andl
push
stos
and
pop
xchg
jb
mov
imulb
lcall
dec
inc
dec
rclb
add
imul
fisttpl
in
xchg
fidivrl
mov
xor
shrb
adc
insl
sahf
stc
insb
jo
cmp
aad
and
mov
pushf
mov
repnz
inc
mov
push
fistps
pop
shrl
imul
rolb
loopne
pop
dec
jnp
mov
movsl
xor
pop
sbb
gs
xor
xchg
mov
lock
xchg
lods
std
hlt
loope
push
in
outsl
and
js
ljmp
jle
jl
xchg
cmpsl
leave
andb
jb
iret
push
xor
lea
jge
mov
cmp
scas
mov
into
pop
mov
jno
movmskps
imul
cltd
ljmp
push
pop
out
jae
adc
xchg
out
mov
sbb
out
in
in
mov
sub
test
aad
jmp
dec
and
aam
push
fstpl
cmp
adc
cmp
pop
adc
scas
scas
cvtps2pd
repz
jb
xchg
jecxz
dec
fadds
add
dec
aad
push
cltd
icebp
outsb
and
int3
aaa
add
lea
adc
loope
inc
pop
push
dec
inc
int3
cwtl
out
stos
ljmp
outsl
shll
push
enter
sbbb
fidivl
mov
cltd
inc
sub
das
shll
mov
ljmp
cmp
leave
or
sbb
movb
out
sub
lods
rcrb
push
and
test
cmp
arpl
adc
ret
sub
and
or
out
cmpsb
imul
fwait
pop
addb
dec
loope
inc
int3
lret
inc
adc
lcall
loopne
pop
jmp
mov
dec
addr16
xchg
leave
fstpt
popa
and
inc
insb
mov
loopne
jge
pop
movsl
outsb
popf
lds
mov
mov
adc
dec
rol
les
loopne
sub
cmpsl
call
cmp
xchg
sub
xorl
adc
inc
fwait
cmp
movsl
xchg
fistpll
mov
stc
xchg
mov
rcrb
call
movsl
jne
xor
or
xor
mov
scas
mov
lock
pop
xor
and
xor
loop
mov
xchg
mov
or
scas
gs
add
add
enter
xor
add
pop
and
mov
test
jmp
and
shlb
enter
mov
sub
jns
fcoml
and
jns
addr16
popf
fistps
test
sti
pop
ja
ss
cmp
frstor
sarl
call
jae
testl
mov
jmp
shl
push
add
cmc
daa
and
jbe
hlt
mov
fs
sti
cmp
inc
and
mov
stos
mov
xor
ret
clc
loopne
xchg
lret
dec
bound
mov
hlt
ficomps
test
pop
add
push
stos
psrlw
inc
adc
push
shrl
sti
push
fidivrl
add
popf
push
mov
insl
mov
dec
jmp
and
cmc
mov
movsb
sub
mov
gs
pop
jp
dec
enter
scas
out
mov
nop
in
push
cli
in
push
xor
jecxz
in
add
pop
mov
jo
sbb
cmp
ljmp
jbe
mov
pop
arpl
pop
movsb
and
adc
and
loop
inc
inc
aas
adc
lret
ret
fsts
or
mov
jae
jp
sub
sub
jne
cmp
push
iret
lcall
sahf
shl
xchg
in
mov
xchg
mov
addr16
movsb
push
mov
or
sbb
jo
test
xchg
std
sub
lds
pop
jg
nop
fmuls
rol
mov
addr16
push
push
popa
inc
sub
push
adcb
jns
cmp
rcrl
cwtl
dec
add
dec
pop
ret
push
or
test
push
xor
roll
leave
xchg
pop
bound
mov
dec
in
out
mov
cmp
mov
dec
cmp
or
je
and
mov
mov
rcrb
cwtl
mov
or
fwait
dec
push
lods
push
and
add
or
and
jbe
fucomp
and
jp
fdivp
movsb
push
cmpsb
fildll
scas
adc
sub
mov
fwait
mov
rcrb
cmp
push
in
add
stos
inc
cmp
ficomps
jle
out
mov
push
sarl
out
or
or
ret
sahf
push
fs
or
jg
xor
mov
inc
mov
xor
cmp
sbb
out
sub
iret
in
add
out
pop
lods
notl
fsub
arpl
test
sub
lods
fwait
pop
imul
loop
adc
dec
cmp
dec
sub
lahf
xor
mov
int3
mov
daa
mov
int
aaa
jne
or
adc
call
rcr
ror
mov
aam
cmp
xor
sbb
ret
push
sbb
jmp
push
je
push
filds
or
sub
int
push
add
mov
dec
outsb
push
movsl
je,pn
cmp
aas
pop
vmaxsd
lea
mov
ljmp
lods
shr
mov
mov
add
rorl
push
sub
hlt
pop
or
mov
add
nop
ja
arpl
loop
jle
lcall
lea
mov
call
lret
cltd
movsb
out
push
mov
mov
jle
outsb
sbb
adc
xor
nop
iret
push
adc
imul
aaa
push
xor
xchg
xor
push
in
xor
mov
and
adcb
ss
xor
mov
andb
gs
dec
jmp
test
ret
cli
pop
pop
mov
xchg
jge
sbb
sub
aam
sub
mov
cmp
insb
orl
psrlq
push
and
add
ficompl
rorl
out
pop
fisubrs
sbb
sarl
mov
mov
adc
cmp
cld
xchg
pusha
inc
jne
hlt
test
and
call
jae
sub
daa
cli
outsb
or
inc
sbb
popa
clc
loope
mov
xchg
push
pop
jb
mov
pop
push
xchg
mov
mov
int
pop
and
ret
loopne
jbe
fildll
cli
mov
add
cmpsb
ljmp
movsb
mov
cmp
fs
aam
insl
cmp
xchg
mov
cld
into
cmp
xor
pop
idivb
jb
rclb
rorl
push
push
dec
pop
xlat
jl
aad
adc
fistpll
xor
xchg
ss
mov
sahf
pop
jl
push
sahf
xor
lods
call
hlt
dec
mov
shll
push
stos
fcoms
xor
repz
loopne
not
dec
mov
push
adc
mov
fwait
subb
push
push
add
notl
mov
inc
jbe
dec
inc
push
fsubs
add
inc
out
cmp
xchg
inc
movsb
sub
dec
lahf
lret
push
sbbb
add
jmp
sarl
out
or
cltd
js
mov
jl
insl
mov
pop
or
imul
push
pop
ds
gs
ljmp
aaa
insb
ret
ja
mov
test
mov
adcl
sub
or
movsb
cmpb
pop
adc
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
inc
fucomip
push
or
lds
inc
test
mov
in
rol
ficoml
ret
xchg
test
inc
mov
repz
pop
loop
adc
in
sbb
push
fbld
mov
int
and
pop
lcall
pop
cmc
scas
rcr
or
sahf
cmp
stos
push
cmp
lds
mov
hlt
mov
daa
jne
dec
mov
pop
imul
insl
out
dec
or
mov
das
adc
mull
gs
push
je
mov
add
aas
clc
and
sti
ljmp
inc
mov
cmp
sbb
fnsave
jmp
jle
cmp
mov
lds
punpckhwd
push
stos
pop
jmp
imul
pop
clc
dec
fidivl
std
hlt
cmpsl
add
rclb
movsl
pop
fisttpll
movsl
lcall
sbb
xchg
and
or
js
out
cmpsb
push
add
mov
jge
mov
pushl
inc
sbb
loopne
dec
xchg
jmp
imul
test
jge
sub
sbb
xchg
lds
test
fsubr
ja
or
gs
jp
andl
daa
xchg
mov
cmpsb
leave
or
jg
adc
add
cld
andl
sub
dec
xchg
sbb
mov
std
sub
ja
sbb
xchg
cmp
pop
xor
inc
mov
into
cs
adc
jo
rcrl
lret
push
imul
test
mov
push
sbbl
lahf
mov
callw
jae
xor
stos
loope
cmp
inc
dec
enter
mov
out
and
repz
neg
pop
mov
ljmp
shll
sar
aaa
jp
into
or
lods
or
test
call
test
dec
outsl
fwait
pop
cmc
popa
in
stos
mov
mov
push
insl
adc
sub
enter
jbe
insb
push
mov
xor
ds
cwtl
mov
xchg
push
push
roll
repnz
xor
mov
cltd
fs
into
movsl
lcall
ss
push
mov
xchg
test
cli
jnp
movl
cmp
xor
xchg
jge
cmp
xchg
jle
xor
dec
push
das
push
imul
sbb
pop
scas
test
adc
fildll
mov
cmp
rcrb
mov
push
mov
dec
xor
mov
and
rcl
cmp
ror
cmp
popa
xor
iret
mov
je
jmp
add
out
loope
lahf
dec
sbb
mov
dec
jmp
jb
dec
daa
nop
sbb
testb
dec
das
cs
adc
push
sti
andps
adcb
sbb
adc
aad
adc
outsl
aaa
ja
mov
dec
movsl
repz
in
rolb
fs
in
jbe
arpl
sbb
cwtl
pop
and
and
sub
mov
cmp
adc
jl
jmp
push
in
sub
cmp
mov
imul
out
in
mov
ss
mov
iret
int3
mov
imul
pop
aam
insw
cmp
inc
add
mov
sbb
lcall
sub
mov
xor
push
test
mov
movsb
and
push
jno
ljmp
jl
or
fbstp
xchg
les
in
inc
sti
mov
sti
cs
popf
mov
pusha
pop
push
cmc
call
sub
cmp
loop
lret
mov
jnp
dec
xchg
dec
mov
lret
repz
ljmp
xlat
aad
dec
adc
jns
jo
roll
insl
fscale
xor
inc
push
add
inc
lcall
sbbl
dec
jns
jno
add
sbb
add
iret
xor
jnp
push
jae
repnz
call
mov
dec
lock
mov
ret
imul
movsl
cmp
je
lcall
jl
mov
jns
and
cmp
lret
rclb
loope
mov
aam
ficomps
xlat
popl
nop
jge
pop
out
cmpsb
xor
ss
std
mov
mov
and
pop
mov
or
hlt
dec
and
gs
xor
jle
fisttps
in
mov
xchg
and
mov
adc
sub
sbb
cld
pop
jp
inc
arpl
lock
adcb
xchg
mov
mov
jno
into
pop
jl
or
jp
out
adc
loope
cmp
pusha
test
into
ret
sbb
bound
repnz
push
add
fidivrs
add
stos
mov
cmp
into
loope
rcrl
add
popf
std
pop
subl
lea
xchg
sub
sbbl
aaa
iret
ret
jmp
jge
mov
adc
iret
jg
out
pop
xchg
xor
jmp
push
adc
or
xor
scas
out
jge
inc
sbb
mov
movsb
and
ficoml
fiadds
mov
and
sbb
push
test
dec
std
push
pop
jno
mov
daa
std
sub
leave
push
sbb
sahf
nop
xlat
jnp
shrb
or
pop
inc
into
stos
mov
jno
out
adc
aam
add
mov
lcall
mov
iret
push
shrl
pop
cwtl
xchg
jb
inc
ja
cmp
cmpsb
push
cmpsb
dec
xor
movsl
ja
xchg
mov
ret
push
cltd
arpl
push
or
jge
jp
ficompl
push
fadds
in
shlb
push
cmpl
in
sbb
sub
xor
mov
mov
sbb
insl
js
or
xor
mov
adc
into
jae
inc
xchg
test
je
ret
xchg
mov
mov
jp
jnp
aaa
dec
jno
pop
dec
mov
fisubs
mov
stc
aam
adc
jo
push
das
sbb
ret
cmpsb
cmp
mov
aaa
cmp
jno
jne,pt
add
xor
jo
ret
ret
mov
es
ret
test
aaa
clc
or
pushf
scas
cltd
out
sbb
stos
stc
cs
xchg
adc
lcall
jb
xchg
dec
addr16
hlt
pop
xchg
dec
fidivl
and
cmpsb
std
lods
and
test
loope
mov
dec
mov
std
and
stos
inc
xchg
icebp
fmuls
iret
imul
or
loop
jne
lea
inc
shll
dec
call
cltd
mov
insb
out
fucomip
add
adc
and
jecxz
push
sti
fwait
stos
jmp
sbb
xchg
push
dec
xor
ja
pminub
lock
add
out
testb
mov
sbb
cmpsl
adc
icebp
out
fucomp
arpl
pop
push
aam
ret
sbb
loop
sti
loopne
out
adc
ret
mov
daa
xor
jmp
dec
xchg
ds
cmp
dec
cli
in
pop
lcall
mov
fs
jp
popa
rcl
adcl
in
xchg
test
cmp
jmp
adc
addr16
loop
test
dec
and
lock
cmc
jno
jb
out
cmpsl
addr16
inc
mov
push
cmp
pop
dec
jmp
mov
addr16
jno
mov
cmp
dec
stos
loopne
iret
mov
sub
or
std
mov
mov
xor
lods
movsl
call
ljmp
or
pop
insl
jl
jg
push
cmc
test
xor
sbb
pusha
jmp
mov
mov
hlt
pop
or
sti
jae
jg
push
push
ljmp
mov
sbb
mov
mov
pushf
adc
sbb
push
adc
pop
jns
mov
in
movsl
or
lret
shrl
mov
cmc
sub
out
nop
out
adc
pusha
pop
fs
inc
jmp
pop
sub
xchg
out
pop
jnp
fucomi
dec
jl
rol
test
leave
pusha
mov
add
sbb
jge
in
fcmovnb
cmp
sbb
pop
cmpl
lret
jb
fisttpll
mov
mov
dec
cmp
xchg
or
pop
ficomps
fisubl
add
test
inc
cwtl
fs
js
dec
out
inc
aaa
fistps
aaa
mov
push
outsb
jecxz
xorb
mov
mov
dec
out
gs
fwait
mov
xlat
rcll
jecxz
mov
test
dec
add
adc
out
maskmovq
imull
loop
sbb
sub
outsb
int
inc
mov
cwtl
jl
mov
jecxz
add
xchg
cli
inc
outsl
mov
stc
dec
clc
enter
imul
pop
sub
lret
dec
stos
movsl
jle
jae
xlat
jg
clc
mov
cmp
cmp
lahf
cmp
nop
adc
les
xchg
rorb
inc
outsl
aad
jp
fdivs
fcompl
cmp
mov
das
popf
lcall
lods
adc
aam
xchg
adc
inc
xchg
clc
ljmp
leave
sbbb
loope
shlb
movsl
in
adc
jbe
aad
pop
or
js
adc
add
popa
sub
xchg
imul
inc
and
inc
xchg
jl
fiadds
inc
lock
mov
icebp
xorl
add
sarb
adc
ret
add
adc
mov
lea
jb
sub
int
int3
jmp
push
cli
aas
adc
mov
roll
lret
cmp
mov
lods
fldenv
xor
mov
push
imul
xlat
xchg
lods
and
lds
jne
or
cmpl
mov
test
mov
adc
pop
and
scas
push
bound
in
push
push
mov
pop
das
addr16
mov
jecxz
or
enter
in
test
lea
arpl
f2xm1
and
dec
dec
outsl
xchg
fisttpll
movsl
hlt
pop
push
xchg
cmp
mov
int3
cmp
sub
bound
jle
jge
or
loop
inc
dec
inc
sbb
sub
pop
icebp
ljmp
push
fisttpll
jmp
jne,pn
cmp
adc
xor
jbe
arpl
rcrl
sub
repz
iret
xchg
sti
inc
fs
mov
nop
mov
inc
push
sarl
cmp
aad
mov
push
fidivl
jne
or
mov
dec
push
fs
mov
ret
mov
dec
jmp
hlt
cld
jb
dec
add
fucomi
and
xchg
add
dec
imul
in
scas
and
push
rolb
and
jg
mov
movsl
and
incb
enter
push
popf
cmpsl
jmp
push
into
sub
fldcw
scas
pop
inc
nop
xor
mov
mov
cld
movsb
xchg
mov
cmp
mov
mov
cld
inc
pushf
mov
divl
jo
sub
fildl
xchg
dec
out
ds
inc
add
mov
rolb
mov
fcomi
xlat
or
int
mov
add
push
mov
or
daa
jg
adc
data16
pop
push
and
imul
dec
lahf
mov
faddl
jo
mov
mov
or
add
jno
outsl
or
add
mov
inc
dec
fsts
pop
and
push
add
lods
push
push
push
push
jp
mov
cmpsl
int3
sti
jnp
mov
jmp
sub
or
nop
push
mov
cltd
mov
mov
in
test
adc
outsb
adc
jnp
popf
mov
in
adc
add
and
enter
cmp
aad
sbb
testl
mov
push
mov
mov
fisttpl
pop
and
lock
lret
sub
mov
je
mov
test
jno
popf
dec
mov
cltd
out
fcoms
int3
sbb
mov
mov
in
imul
cltd
inc
mov
ret
inc
out
lods
cs
sub
xchg
sti
ljmp
push
cmp
aam
fidivrl
sbb
stc
int
jbe
data16
int3
inc
xor
xor
pop
dec
pop
in
rorl
stos
sub
test
ret
mulb
std
cmp
pop
mov
hlt
push
sub
loop
cmc
les
sarl
pop
xor
std
cmpsl
mov
into
shl
fdivrp
adc
jg
jns
xchg
push
int3
repnz
xor
mov
loop
js
adc
repz
ja
dec
test
lcall
xor
and
mov
lret
scas
gs
icebp
and
adc
aad
ljmp
pop
daa
bound
loop
add
mov
sbb
xor
enter
iret
inc
mov
jae
rorl
add
shl
rol
adc
movsb
jbe
loope
push
clc
mov
dec
es
or
and
sarl
sub
cltd
and
mov
int3
inc
test
jecxz
cmp
in
jae
push
cmp
pop
inc
data16
or
mov
ret
or
sbb
iret
sub
lret
lcall
movsb
out
add
jbe
mov
testb
dec
leave
test
addr16
xor
lret
jno
loopne
jbe
and
xchg
mov
cmp
js
pop
jecxz
shlb
ja
cli
sahf
pop
pop
outsl
add
or
lock
jecxz
ret
fstl
jne
popf
add
cmp
jnp
and
xchg
stos
jo
inc
and
fs
dec
sbb
lods
mov
sbb
fs
pop
xchg
or
or
insb
push
addb
mov
xchg
add
test
mov
jg
rclb
icebp
sarl
xor
fcoml
fbstp
pop
xchg
xor
xlat
in
test
adc
xchg
jg
out
leave
pop
jbe
cmpb
pop
or
sub
push
cwtl
jecxz
std
aam
pop
sbb
insb
cmpsb
mov
xlat
repnz
sbb
fildl
repz
andb
in
push
add
rep
or
daa
mov
out
lret
mov
cli
dec
ret
je
add
scas
jae
push
es
rol
and
lods
sub
sahf
test
out
sbb
and
mov
in
imul
mov
fisubrs
into
mov
lahf
clc
mov
mov
scas
jo
aad
loop
cmpsl
loope
or
lea
and
mov
mov
daa
dec
idivb
xor
sbb
popf
aas
jno
inc
mov
faddl
jnp
dec
fdivl
inc
repnz
push
mov
rcll
jae
repnz
inc
icebp
adc
inc
mov
mov
int3
jb
aam
mov
mov
lea
pop
loopne
addb
and
sti
mov
push
jo
mov
xorl
add
mov
pop
sti
lock
lods
repnz
add
mov
sti
sbb
cmp
ret
inc
cmpsb
and
xchg
inc
outsl
or
push
mov
push
or
mov
ja
call
in
pop
xchg
xor
and
pop
jo
push
jbe
or
mov
icebp
lea
add
mov
or
dec
push
mov
jle
push
out
add
ficompl
mov
inc
sub
or
adc
mov
rcll
loopne
dec
mov
mov
cmp
lret
cmc
push
mov
dec
jecxz
cmp
repnz
jno
orl
cmp
cmc
mov
gs
xchg
je
sbb
test
fisubrl
imul
repz
imul
sbb
loopne
or
and
inc
or
pop
mov
xchg
xor
outsb
iret
gs
insb
sbb
mov
dec
cli
icebp
xor
sbb
call
decb
ret
cmp
cmp
dec
or
inc
push
lahf
mov
lahf
std
out
or
neg
pop
pop
inc
mov
inc
xchg
or
dec
outsb
shrb
sbb
lahf
mov
icebp
mov
dec
std
push
cmpsl
sbb
push
push
cwtl
sarb
mov
sub
in
iret
lds
outsl
pop
jne
xor
jmp
adc
out
popf
movsl
aaa
sahf
sti
adc
ljmp
movl
inc
mov
mov
mov
sub
cmp
xchg
add
dec
inc
inc
mov
push
enter
lods
insl
imul
jbe
and
xor
leave
stc
lds
roll
shrb
call
in
inc
inc
or
test
loopne
push
inc
inc
stc
xchg
mov
xchg
ss
fwait
int
repz
ret
iret
cltd
jmp
sbb
jge
das
cwtl
xor
adc
mov
or
add
movsb
mov
jnp
pop
shll
xor
hlt
sbb
or
aad
dec
mov
in
mov
adc
fs
ds
or
sbb
adc
stos
jmp
sbb
add
xor
xchg
stos
xchg
mov
jp
fisubrl
into
addr16
pop
ret
ss
sub
mov
popa
jp
lds
hlt
aam
sub
xor
out
add
mov
mov
sbb
int3
fcmovb
test
adc
inc
push
imul
pop
aas
jne
ret
sbb
push
cmp
push
pop
out
or
xchg
fs
pop
adc
xchg
and
dec
and
pushf
jecxz
cltd
and
hlt
xor
mov
cwtl
sub
lret
sbb
repnz
pop
inc
and
mov
or
cltd
dec
xchg
aaa
and
or
and
fsub
dec
imul
fsts
sub
mov
aaa
jns
or
and
xchg
and
xor
dec
or
mov
mov
andl
xchg
scas
test
sbb
lcall
loopne
rorl
sti
test
out
das
mull
outsb
add
mov
add
mov
pop
adc
dec
fs
in
test
mov
mov
push
ds
into
inc
mov
mov
push
lods
mov
inc
fiaddl
and
pop
lret
add
ror
adc
jne
or
or
xchg
fwait
mov
or
xchg
adc
subb
loopne
lds
out
rorl
aad
adc
pop
fwait
mov
jle
test
divb
xchg
cmp
int3
push
mov
push
stos
jno
xorl
shr
movl
arpl
lods
dec
call
mov
nop
outsl
cmp
sbb
les
adc
sbb
and
fimull
lahf
and
fdiv
mov
xchg
and
and
cs
and
adc
mov
pop
stos
push
jno
add
or
add
idivb
lcall
push
movsl
sub
and
and
stos
xchg
xlat
hlt
cli
push
les
mov
sbb
sbb
aaa
push
je
fisubl
roll
pop
jecxz
pop
mov
jno
cmp
add
nop
cmp
pusha
dec
or
popf
jne
push
es
pop
test
xor
aas
pop
xor
xchg
mov
add
das
pusha
fisttpll
xlat
add
mov
adc
mov
xchg
add
andb
jg
hlt
mov
insb
imul
out
push
jns
ja
outsl
test
jns
mov
sub
or
xchg
and
sbbl
jmp
mov
xor
pushf
or
out
loop
xor
mov
lods
inc
xchg
xchg
fnsave
cmp
dec
fs
dec
cltd
and
enter
paddq
test
xor
cli
movsb
pushf
add
cltd
pop
mov
js
push
stc
daa
inc
xor
push
inc
sbb
fsubrs
pop
cwtl
loop
call
ja
push
out
outsb
clc
jmp
mov
aaa
adc
jp
fidivs
ljmp
insl
ret
inc
push
jno
imul
fxch
lcall
cmp
repnz
push
dec
add
sbb
sbb
sarl
pop
jg
xor
sbb
sbbb
popa
int
sahf
lds
ret
push
inc
pop
jl
inc
jl
mov
les
jecxz
andb
rclb
cmp
or
stos
sahf
xlat
dec
lock
push
shrb
dec
pop
push
clc
nop
fmulp
push
mov
pop
sbb
pop
inc
inc
lds
add
and
cmp
jmp
fnstcw
mov
jg
insb
inc
xchg
push
bound
add
ds
and
inc
inc
push
ds
sub
mov
test
ret
xor
sti
loopne
rcr
test
jns
adc
mov
dec
fwait
jns
xor
push
js
fnsave
or
aam
or
sti
or
sar
mov
push
movsl
imul
outsl
into
and
repnz
push
ret
or
jmp
add
mov
mov
mov
mov
xchg
xor
mov
jmp
icebp
cmp
bound
pop
push
mov
xor
js
inc
inc
stos
add
arpl
adc
sbb
pop
test
stos
pop
into
movl
jge
repnz
cmp
dec
rclb
jnp
mov
mov
in
and
test
outsb
fldlg2
sbb
jmp
fimuls
das
or
lock
out
xchg
add
jmp
push
dec
clc
loope
cmp
loope
and
jb
jo
cmp
pusha
xor
dec
sbb
enter
xchg
fsubl
adc
sbb
mov
jp
mov
jb
cltd
inc
push
sub
adc
push
mov
out
mov
test
cli
imul
sbb
test
lret
sbb
pushf
lds
dec
lahf
add
mov
jo
stos
fs
aam
push
int3
lock
lods
xchg
xchg
inc
aaa
pop
les
xchg
add
mov
mov
jb
jb
pop
inc
xchg
fsubp
xorl
xchg
mov
xor
int
dec
mov
adc
pop
mov
cld
mov
adc
iret
les
jnp
push
cmp
push
scas
push
lret
stos
add
test
loope
outsl
and
adc
loop
cmp
incb
daa
iret
push
mov
xlat
or
stc
orl
lds
out
jle,pn
cmp
cli
cs
test
outsl
dec
icebp
jnp
inc
fistpl
mov
ljmp
pop
psubusb
xchg
stos
and
push
inc
jnp
out
xor
dec
fs
fs
scas
int3
mov
cs
jnp
mov
es
test
ds
decl
aas
or
movb
stos
fdivr
enter
xchg
test
mov
das
inc
hlt
mov
movsb
mov
cltd
fistpl
add
out
popa
lahf
jmp
stos
test
fcmovb
imul
xchg
mov
aad
jle
push
imul
cmp
jmp
pop
mov
scas
adc
mov
mov
push
add
bound
mov
or
hlt
cmp
imul
ljmp
out
push
shlb
sub
sub
outsb
sub
insl
cmc
repnz
xchg
outsb
sub
cmp
scas
stos
mov
mov
push
cmpsl
aad
cmc
pop
mov
inc
sbb
push
jmp
xor
jecxz
jp
cmp
sbb
xchg
loope
rorl
inc
cmp
outsl
or
jae
shll
mov
jmp
mov
outsb
adc
dec
daa
pop
and
jle
xor
jmp
adc
inc
mov
int
or
stos
rorb
fnsave
and
ret
jns
jnp
ret
sbb
mov
pop
cmpsl
mov
pop
cld
arpl
xchg
push
subl
adc
out
mov
fs
pop
pop
icebp
ja
nop
fadds
xchg
sub
push
adcb
sub
loop
adc
rcrb
es
push
enter
in
adc
lea
push
and
imul
test
shrl
jae
mov
aaa
test
inc
or
xchg
dec
mov
nop
daa
pop
shll
jle
or
fldenv
out
dec
insb
dec
into
iret
ja
adc
movsl
add
cmovno
in
aaa
out
fldenv
sahf
outsl
add
test
or
adc
push
in
scas
xchg
fists
addr16
int
hlt
pop
mov
movsl
and
lret
repnz
outsl
pop
sbb
clc
push
xor
mov
mov
int
out
fildl
in
jnp
or
into
xchg
cld
call
setg
lret
insl
push
mov
cmp
cmpsl
filds
jne
test
in
xchg
stos
std
loop
dec
popf
ret
ss
jbe
mov
pop
fldl2e
loopne
dec
lret
jnp
pushf
jno
pop
add
xor
pop
push
test
xor
nop
int3
cs
add
pushf
inc
sarb
mov
or
arpl
xchg
push
out
adc
lcall
mov
enter
xor
mov
aad
nop
adc
mov
xchg
gs
and
push
xchg
cmp
xchg
pop
cmp
aad
shl
jecxz
push
aaa
mov
lahf
sub
rcrb
push
test
fstpt
sbb
pop
ret
and
ret
pop
cli
mov
mov
dec
cltd
sub
test
mov
std
mov
add
mov
pop
and
dec
mov
jecxz
ret
gs
cld
push
sbb
cld
push
shlb
cs
mov
stc
pop
cli
pop
jbe
dec
out
adc
hlt
adc
sub
cli
pop
call
push
pop
enter
jmp
push
mov
push
adc
add
sbb
mov
pop
push
fsts
out
clc
repz
xchg
or
mov
movsb
aas
jl
mov
xor
sub
and
jno
dec
test
sbb
ret
xor
aam
bound
iret
hlt
add
jecxz
out
icebp
and
xchg
pop
push
push
xchg
insl
shl
jp
cs
repnz
test
cmp
loop
insb
fs
test
fmulp
ja
mov
popf
xor
cmp
jg
mov
jb
and
add
add
std
lds
jnp
les
fcom
cwtl
popf
xor
xchg
jne
in
xor
inc
jnp
push
testl
aas
stos
faddl
xor
gs
dec
mov
gs
int
cmp
fs
mov
popa
je
in
sub
mov
imul
mov
and
out
pop
mov
scas
sbb
arpl
fdivrl
xor
fwait
sub
fwait
dec
dec
repnz
outsl
pop
ja
jp
xorl
and
cmp
xor
add
sub
lret
sbb
in
inc
lret
sub
sbb
sbb
xor
or
outsb
mov
cmpb
ret
dec
add
fiadds
or
sbb
imul
xchg
daa
inc
inc
leave
aaa
inc
pop
cmpsb
movsl
les
fsubrl
push
push
jae
sbb
pop
xchg
jmp
sub
ja
js
add
adc
out
test
pop
inc
les
dec
mov
push
leave
insl
addb
pop
xor
add
rolb
pop
cmp
mov
roll
push
lods
out
push
cmp
enter
cmp
lret
xor
xorl
mov
jno
pop
fdivr
movsl
inc
lcall
mov
mov
inc
cld
and
insb
push
in
pushf
xor
pop
aad
jge
pop
cmp
mov
cmpb
push
lret
roll
stc
cltd
and
push
lods
ss
shll
xor
fdiv
xchg
mov
shr
incl
mov
or
push
and
int
push
push
cmp
les
scas
add
pop
jmp
daa
loopne
dec
ja
add
xlat
data16
mov
dec
cmpsl
sahf
enter
sub
test
jo
imul
stos
jg
stc
xchg
add
stos
fs
sub
push
xchg
jns
aas
xchg
jg
push
inc
in
outsb
lret
out
add
jp
mov
push
jns
push
inc
cmpsb
mov
lea
inc
ss
cld
push
or
pop
leave
add
or
xor
jge
dec
sub
and
xchg
out
and
js
subl
sahf
cmc
iret
push
repz
stos
lea
jae
aas
hlt
adcl
pop
cli
inc
xorl
jb
fadd
xchg
mov
inc
inc
pop
fwait
popl
lcall
mov
enter
fstpt
xchg
pop
inc
repz
fadds
stc
mov
cltd
int
dec
sbb
scas
and
jns
pop
sub
enter
xlat
ret
fnstcw
sarb
pop
cmpl
xor
stos
xchg
jb
jb
imul
mov
xlat
scas
or
xchg
pop
mov
xchg
inc
push
mov
inc
fstps
push
inc
xchg
out
lods
mov
scas
cltd
adc
push
pop
ficoms
inc
faddl
xchg
xchg
orb
repz
adc
cmc
lds
fiaddl
outsb
inc
and
push
pop
sub
jno
xchg
mov
fldl
push
mov
andb
sbb
enter
fstpt
out
mov
jb
repz
xchg
jne
clc
cli
push
sahf
scas
insl
mov
and
fiaddl
mov
arpl
pushf
repnz
je
dec
mov
mov
movsb
or
mov
ja
fwait
xor
push
xor
pop
push
ret
mov
aam
add
clc
jl
jecxz
cmpsl
cmp
pop
stos
mov
inc
jmp
adc
lret
or
insl
es
pop
sub
mov
xchg
lods
int3
xchg
adc
shrb
fildl
shl
insl
repnz
push
xchg
popf
idivb
arpl
inc
scas
out
cmp
fld
xchg
repnz
sbbl
test
sub
and
lret
and
mov
pop
mov
insl
dec
cmpsl
add
loop
outsl
push
mov
outsb
jmp
inc
cmpsb
gs
into
ret
xchg
stc
xor
sub
adc
add
xchg
out
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
fidivrl
jl
pop
pop
jl
stos
xor
cmp
stos
clc
jne
cwtl
lret
testb
fs
push
fldl
scas
jmp
fiadds
inc
add
pop
sti
fistps
mov
lods
mov
insb
push
pushf
mov
test
out
stc
pop
lcall
cmpsw
jne
and
testl
std
fldenv
jno
in
imul
loop
mov
sub
pop
enter
add
xor
cmp
sbb
xor
ficoml
notb
jb
loopne
mov
rorb
in
cmp
cmpb
inc
int3
ss
inc
push
jns
jnp
loop
mov
stos
dec
push
mov
cwtl
mov
pushl
and
addl
scas
sahf
xchg
dec
fisubl
arpl
in
rolb
int
shl
idiv
leave
mov
or
aad
imul
xor
iret
cmp
test
aaa
cmp
fisubl
sbb
push
fwait
rcll
inc
pop
ret
scas
lcall
push
test
mov
stos
leave
mov
jge
push
ljmp
pop
je
stos
and
xchg
dec
lret
rolb
rorb
mov
inc
adc
das
jge
sete
popf
inc
fidivrl
push
or
and
jge
add
fidivrl
mov
ja
pusha
jne
das
pop
addr16
dec
xchg
fnsave
test
mov
xor
femms
in
mov
and
dec
ret
push
xor
out
push
mov
xor
repnz
dec
adc
jns
aaa
fstp
push
int
ja
jns
mov
lea
and
adc
cltd
test
pushf
dec
add
shr
inc
pop
push
fcoml
mov
or
sbb
jle
lods
sbb
ret
and
cmp
cltd
xchg
test
sub
mov
enter
pop
fsubrl
jbe
imul
cmp
loop
jae
and
dec
pusha
mov
popa
shl
jnp
mov
cs
andl
sbb
scas
jle
rcll
mov
out
adc
fwait
cmp
das
mov
stos
mov
push
out
mov
adc
xchg
inc
ljmp
test
aam
rol
pop
cs
mov
xchg
shl
push
cmpsl
shlb
mov
ljmp
cmp
mov
in
and
xchg
lds
sti
fidivrs
jle
ds
cmp
add
or
jl
nop
dec
stc
and
andl
push
gs
pop
pcmpeqd
ds
add
cwtl
push
xor
jl
out
add
add
adc
scas
rorl
or
inc
fcomps
insb
sbb
subl
sbb
push
jne
mov
mov
or
add
enter
push
or
push
cltd
imul
xor
aaa
lahf
inc
pause
aas
xchg
mov
cmp
mov
lea
xchg
and
neg
fstps
lods
rorl
cmp
out
inc
jp
and
lcall
lods
ret
mov
mov
mov
out
mov
lfs
push
fdivrs
lods
dec
pop
ror
and
pop
movsb
cmp
rcll
ficoml
pop
sub
int
push
outsl
adc
les
cld
iret
ret
xchg
add
add
cmp
jno
ds
push
mov
test
test
rcll
xchg
ss
adc
ret
mov
push
mov
adc
add
repz
test
iret
int
jae
decb
mov
inc
outsl
push
dec
popw
mov
subl
mov
add
int3
orb
inc
sbb
jle
mov
pop
xor
lcall
sub
lahf
lds
mov
cmpsb
push
or
fs
cmpsb
jl
inc
rcll
cmpsb
fidivs
lods
repnz
xchg
and
inc
add
push
fcoml
jb
sbbl
pop
pop
fidivrs
out
mov
mov
mov
incb
ret
cmp
pusha
out
xor
stc
sub
fadd
scas
push
sbb
xor
pop
pushf
mov
mov
pop
pop
dec
int3
inc
test
test
lret
pop
ficoms
xchg
inc
adc
inc
xlat
in
scas
xchg
sub
std
pusha
stos
jnp
aaa
and
inc
icebp
repnz
mov
mov
mov
ret
icebp
sbb
dec
sbb
je
ljmp
int3
sbb
roll
icebp
dec
popf
pop
adc
sar
pop
stos
test
nop
fldcw
inc
lahf
xchg
shlb
lea
nop
sahf
inc
lods
mov
fisttpl
rclb
adc
ds
add
rcrb
jge
arpl
test
pop
dec
ret
push
movsl
in
iret
ret
loopne
push
lahf
dec
mov
test
shrl
mov
shll
cmp
and
jp
sbb
daa
jnp
adc
mov
pop
sbb
mov
mov
dec
sahf
insl
repz
add
xorl
xchg
mov
inc
test
test
nop
cs
jge
aaa
jbe
js
dec
push
sbb
in
mov
cmc
sahf
call
mov
and
adc
xor
int3
mov
aam
popf
pop
xchg
inc
lret
cli
mov
jg
sub
insb
data16
andb
mov
lret
jecxz
xor
and
push
int3
xor
fs
or
std
xchg
mov
inc
ffreep
test
mov
cmpb
mov
sub
xor
mov
insb
std
xor
outsl
xchg
outsb
xorl
scas
inc
pop
inc
dec
xchg
xchg
dec
and
mov
shl
lods
dec
mov
sub
addr16
movsb
mov
stc
lods
sub
jp
lea
into
pushl
sti
mov
addr16
dec
in
aaa
xlat
gs
cmp
push
push
ljmp
xlat
mov
mov
pop
xor
xchg
les
arpl
mov
nop
lret
mov
scas
xor
pop
add
sbb
ficomps
sub
pandn
or
je
jbe
into
add
push
add
fldcw
fiadds
rcr
sbb
mov
add
push
cmp
stc
mov
rcrl
out
in
out
jb
pop
cmp
lds
push
outsl
inc
and
js
adc
test
mov
pop
addr16
jge
xchg
adc
adc
push
ss
xchg
fidivrs
jne
mov
test
dec
mov
roll
dec
shll
subl
dec
adc
inc
xor
adc
mov
in
divl
dec
mov
and
xor
jo
push
mov
fisttpl
outsb
pushf
cwtl
xchg
into
push
sub
jae
ja
inc
sahf
movl
adc
xlat
xor
mov
popf
jecxz
cld
dec
pop
jae
iret
or
insl
xor
mov
popa
das
aaa
mov
sbb
daa
xor
out
js
loope
jns
adc
lea
xor
jne
clc
stc
in
mov
mov
stos
sub
sub
nop
mov
or
pop
hlt
js
out
andl
mov
adc
jmp
imul
cmp
sub
jns
gs
push
jmp
add
leave
imul
pop
ret
sbb
adcl
pusha
dec
add
int
jge
sahf
in
int
shlb
mov
and
sub
cmp
push
lds
mov
add
sbb
mov
mov
je
jo
mov
mov
sbb
shll
sub
int3
in
add
sbb
imul
addl
js
rorb
mov
adc
pop
mov
adc
or
dec
btc
clc
jnp
mov
sub
adc
loope
mov
sbbb
and
xor
popf
cltd
ds
or
in
dec
push
subb
shrl
icebp
aad
arpl
xchg
push
pop
dec
lods
fisubrs
dec
xor
shlb
testl
and
xchg
xchg
inc
add
add
mov
movsl
pop
test
lods
repnz
and
jmp
lea
mov
cltd
dec
push
nop
xchg
xlat
andnps
fistps
xchg
sahf
fisttps
ret
cmpsb
sub
jns
jl
popa
or
mov
mov
daa
xchg
lds
sarl
icebp
aad
inc
pop
cmp
cwtl
mov
cmpl
fucom
jo
insl
mov
pop
scas
xchg
push
dec
xor
lret
mov
add
loope
fcoms
lret
ljmp
std
out
ret
lret
addl
rorb
cwtl
addr16
sub
lret
mov
fistl
cmpsl
lret
dec
mov
fwait
sub
mov
xchg
mov
lea
fsubl
xor
arpl
in
inc
jne
mov
movsb
xor
imul
xlat
mov
int
push
xor
dec
mov
int3
sbb
pop
into
push
xchg
repnz
jae
movl
and
cmpsb
jb
push
sbb
sub
addl
xchg
or
inc
inc
daa
fildll
lahf
sbbb
jp
mov
sub
scas
iret
out
and
mov
jmp
negl
dec
iret
mov
loope
fildl
mov
cwtl
pop
daa
ficoml
movsb
sub
mov
inc
std
enter
sub
rcrb
rcrl
and
mov
or
test
inc
cmp
sbb
pop
or
mov
xor
filds
dec
repz
adc
add
and
adc
cmpsl
lea
loopne
fmuls
cmpb
mov
int3
push
sahf
dec
and
xor
rep
and
mov
or
lcall
stc
rorl
add
loopne
push
ja
mov
fucom
out
outsb
sub
mov
jno
sub
pusha
fs
inc
out
je
ret
pop
aad
stos
mov
mov
or
into
cmp
ret
pop
loop
lcall
lock
push
mov
xor
xor
lcall
mov
push
movsb
mov
daa
push
enter
sbb
inc
hlt
cltd
sbb
inc
xchg
js
insb
dec
pop
push
decl
or
pop
push
dec
pop
dec
fucomp
push
adc
xchg
outsb
pop
xchg
pop
dec
iret
xor
xchg
out
add
mov
int3
inc
mov
in
jns
dec
pop
inc
daa
xchg
mov
xor
in
es
fstpl
pop
dec
dec
adc
mov
sbb
addr16
ror
ret
pop
cmpsl
fadds
push
aaa
int3
cmp
push
ret
and
pop
sti
jmp
mov
push
jbe
insl
pop
lcall
fnsave
lcall
loopne
cwtl
in
cmc
cmp
cs
inc
rcrb
jne
push
add
fs
adc
dec
pop
inc
sub
cmp
cmpsl
jns
push
jecxz
into
pop
push
lods
jp
mov
leave
or
dec
xchg
jge
fidivrl
mov
insb
test
jg
xchg
xor
mov
mov
test
pop
sbb
test
shll
repz
mov
inc
push
leave
add
mov
cmp
loopne
clc
repnz
push
lods
xor
arpl
int3
xorl
decb
ja
dec
mov
test
pop
adc
pop
jle
in
cmp
jno
sbb
push
adc
xlat
decb
loopne
dec
pusha
sub
jecxz
dec
sbb
repz
push
into
push
ret
rclb
jns
mov
ss
mov
out
in
push
dec
jecxz
and
call
xor
subb
ss
inc
in
xor
xor
pop
jg
xlat
out
in
repz
pop
mov
enter
in
movsl
out
cmc
jle
push
jns
rolb
shl
pop
stos
out
out
jl
xchg
outsl
pusha
movsb
sub
pop
sbbb
notb
add
adc
xor
lods
push
adc
mov
jmp
leave
loopne
aad
shlb
nop
cwtl
out
jle
mov
fwait
in
rcll
xor
rcrl
cld
sbb
stos
ljmp
push
pop
ljmp
lods
push
pop
aas
xor
xor
jmp
and
notb
add
xchg
jbe
sbb
xor
inc
and
out
ljmp
adc
adc
sub
xorl
or
pushf
jb
push
push
sub
lock
lret
push
push
loop
stos
push
das
gs
and
cmp
mov
bound
jo
push
pop
jecxz
sbb
jge
sbb
mov
cmc
das
pop
inc
cmpl
xchg
cmp
mov
ljmp
pusha
pop
push
cmp
jle
add
pop
int3
lret
sbb
shrl
pop
or
and
pop
inc
adc
cmp
add
ror
adcl
push
pop
sbb
arpl
iret
adc
adc
dec
mov
lods
inc
lods
jo
imul
mov
and
push
dec
adc
and
pop
mov
xchg
lods
adc
push
add
inc
lods
add
cli
jb
mov
fildl
int
add
mov
cmp
dec
in
insl
insl
and
les
bound
ficoml
popl
aam
bound
cmp
shrb
and
cmc
pop
pop
pop
pop
mov
or
rcll
fldl
pop
jmp
fildll
lock
mov
cli
jg
outsl
jecxz
sbb
mov
fldt
ficomps
cmp
dec
loop
dec
xchg
in
cmp
cmp
push
and
or
adc
stos
adc
sti
pusha
push
adc
lret
icebp
lods
es
mov
es
lds
sub
add
repz
dec
jne
les
cmp
dec
iret
jbe
push
loopne
mov
jnp
push
outsb
call
xor
mov
sbb
dec
lock
push
leave
rcl
aas
pop
sub
push
mov
mov
cmp
cmpsb
mov
sub
or
sbb
push
dec
and
push
push
or
push
orl
inc
lea
mov
pop
out
add
or
lds
and
in
sub
std
mov
imul
ffreep
push
xor
sti
xchg
shlb
pop
lret
mov
pusha
mov
dec
loopne
inc
adc
push
mov
fs
mov
fistps
ret
outsb
mov
xor
imul
scas
bound
leave
fwait
mov
fldenv
sbb
and
adc
aas
aam
xchg
pop
test
iret
sbb
xchg
and
mov
fwait
stos
in
push
daa
and
popa
shll
lds
cli
dec
loope
outsb
jl
sarl
or
pop
out
cs
mov
lret
adcl
fcoms
rorb
adc
jg
jo
cld
dec
adc
add
pop
inc
mov
fwait
add
and
adc
pop
daa
dec
lock
mov
jae,pn
std
sbb
lods
jmp
mov
sbb
scas
xlat
leave
jp
pop
push
jle
flds
enter
xor
pusha
popa
cmpsl
out
push
bound
lret
sub
lcall
mov
jbe
loopne
in
and
dec
dec
mov
jp
xor
ret
jno
cltd
xstore-rng
cmpsl
add
mov
mov
push
out
xor
push
das
test
adc
xor
sbb
lahf
cmp
mov
or
rorl
sbbb
gs
jns
rorl
pop
add
and
inc
jb
imul
addr16
fistpll
das
push
subb
in
sahf
mov
pop
sbb
xchg
rol
and
dec
testb
ds
pop
pop
push
jnp
jmp
mov
mov
enter
xor
pop
sbb
mov
xchg
inc
cmp
sub
add
cmp
mov
mov
jl
gs
push
stos
fildll
and
and
push
inc
test
lods
sub
add
mov
cltd
mov
mov
pushl
mov
je
add
pushf
lcall
enter
xlat
and
xchg
bound
inc
dec
rcr
shlb
fdivr
icebp
mov
rcl
and
movsb
xor
pusha
cwtl
setl
out
sub
inc
ljmp
adc
sub
adc
push
pop
xor
loope
push
xor
xor
adc
stos
punpcklbw
daa
loope
movsl
mov
scas
dec
xor
mov
gs
inc
out
xchg
pop
es
xchg
lret
push
loop
mov
pop
jno
inc
xchg
stc
shrl
jle
sub
fcomip
mov
lods
mov
add
and
js
int3
cwtl
sbbl
in
sub
pop
mov
add
stc
int3
jno
xor
mov
inc
jne
stc
das
sub
stos
jge,pn
inc
stos
cwtl
pop
dec
sbb
push
mov
cmpsl
outsb
les
orps
rcrb
js
pop
mov
mov
xchg
fsubr
pop
push
pop
pop
les
shl
rcrb
int
mov
popf
xchg
sbb
andl
fsubrs
push
into
dec
and
shr
test
fcmovnu
mov
in
mov
dec
add
dec
sub
mov
mov
mov
imul
cmp
push
stos
stc
fnsave
jo
scas
inc
sbb
mov
and
orb
sti
sub
dec
ljmp
xchg
orl
adc
xchg
push
ljmp
dec
out
push
insl
sbb
hlt
repz
mov
mov
mov
inc
cmp
into
cwtl
dec
push
ss
mov
mov
bound
arpl
loope
mov
jns
test
and
or
jge
dec
fsubrp
and
add
sub
jns
xchg
mov
sub
dec
pop
sti
test
dec
pop
loope
stos
incl
pusha
pop
pop
adc
inc
addr16
sub
setl
mov
xchg
push
call
jl
out
or
outsb
pop
cmp
sub
test
push
mov
push
xor
push
dec
insl
adc
sub
or
insl
repz
jae
sub
out
cmp
movsl
fadds
pop
ja
jl
jge
bswap
mov
ljmp
pop
rcll
in
dec
movsl
test
mull
cmpsl
les
in
into
mov
daa
jle
call
pop
mov
cld
loope
cmp
gs
in
pop
sbb
add
nop
mov
mov
xor
imul
pop
mov
fwait
fs
inc
mov
push
fld
stc
add
test
mov
outsl
fisttps
in
scas
add
call
pop
mov
adc
in
test
mov
sbb
xchg
push
lahf
xchg
inc
shrb
dec
je
out
cmp
in
hlt
jno
popl
xchg
loopne
lret
jmp
jmp
jbe
call
jmp
add
data16
mov
outsb
xchg
push
sbb
xchg
xchg
lretw
test
jmp
scas
dec
imul
bound
xchg
jl
and
push
loope
inc
pop
popa
xor
xchg
add
sbb
scas
xor
int
in
push
sub
sbb
popa
scas
xor
cli
add
adc
inc
pop
inc
jge
jp
xchg
std
sahf
mov
fidivrl
loope
mov
mov
lahf
loope
xor
sbb
pause
pop
cmp
add
mov
andl
adc
out
jno
arpl
icebp
test
push
cmp
adc
mov
cmp
js,pn
mov
repz
mov
orl
lcall
or
arpl
cmpsl
ret
lds
pop
sbb
cwtl
bound
cmp
sbb
sub
sbb
inc
jae
mov
mov
scas
in
sub
jae
and
inc
cs
cmpsl
out
out
std
outsl
daa
push
aam
mov
xchg
in
popf
jmp
jp
fmul
or
push
mov
pusha
push
sbb
es
cld
push
das
push
xor
idivl
fnstenv
cld
bound
mov
iret
mov
in
xor
iret
and
dec
sub
sub
mov
xchg
mov
ficoms
xlat
sbb
and
mov
int
cs
jbe
js
jo
testb
in
and
cmp
inc
les
pop
fbstp
in
adc
out
cmc
xchg
or
fbstp
pusha
sub
insb
out
clc
mov
ret
cmpsl
loop
subb
cmpsb
inc
sbb
or
sbb
outsb
fldenv
insb
je
lret
sub
cld
cmp
sub
jns
cwtl
and
sub
test
cmp
imul
or
addr16
adc
addb
outsb
push
pop
decb
cs
icebp
push
adc
repz
pushf
jne
mov
int3
test
in
add
pop
daa
cwtl
ficomps
les
fucomip
pushl
popf
shl
dec
popa
mov
pop
aaa
cmp
cmp
fwait
sar
xor
lods
nop
sub
sbb
hlt
out
popf
push
loopne
popa
jo
dec
xchg
mov
popf
insl
pop
cmp
xchg
das
cmp
xchg
mov
outsb
popf
jmp
inc
daa
add
loop
scas
pop
mov
test
cmp
mov
fstp
mov
cmp
adc
pop
push
mov
lods
pop
es
pop
jo
lcall
push
pop
fcmove
inc
jp
dec
mov
dec
vsubpd
call
inc
scas
xchg
mov
test
jl
add
and
adcl
or
adc
dec
xchg
or
out
movsb
jp
cmp
pop
test
aam
jb
inc
bound
or
push
notl
clc
mov
mov
pop
loop
xor
add
jnp
ds
gs
xchg
rclb
xchg
dec
mov
and
jne
push
pop
push
lock
repz
mov
add
mov
leave
aad
pop
push
mov
push
dec
stos
push
shll
and
dec
scas
add
sub
call
sub
out
incl
fdivrs
out
adc
addb
loopne
add
lret
adc
sub
xchg
sub
ljmp
cmpsl
pop
lods
addr16
repz
inc
scas
inc
test
mov
jg
movsl
pushf
add
mov
cmp
ret
mov
inc
scas
sbb
rol
aas
mov
lret
repz
cmc
daa
lcall
cwtl
iret
mov
push
stc
ss
sub
xchg
out
notb
scas
sub
subb
sbbl
repnz
push
lds
cs
sub
jbe
inc
jl
xchg
into
imul
repnz
jmp
das
pop
push
jns
out
mov
js
movsb
imulb
ds
arpl
loop
and
xor
fs
shrb
push
addr16
push
or
cmp
xor
jns
sbb
or
test
ds
mov
or
loope
into
test
mov
mov
cli
stos
and
pop
inc
lods
scas
or
adc
or
addl
cli
mov
test
and
imul
or
push
sub
iret
jecxz
mov
add
loope
lds
mov
in
test
sub
sub
xor
into
iret
push
inc
cmp
sbb
rsm
xor
sbb
push
lret
add
push
rol
jne
in
cld
mov
inc
mov
cld
and
int
clc
pop
cld
nop
push
xchg
clc
loop
jle
mov
pushf
pop
fisubl
cmp
jge
out
pushf
cmp
inc
add
pop
jmp
and
or
mov
ret
and
jne
push
andb
xchg
xor
push
push
fmuls
xchg
stos
stc
push
adc
xor
mov
add
lds
mov
sbb
xor
push
or
mov
dec
xchg
cmp
nop
lods
aaa
mov
or
out
test
jns
das
das
scas
je
mov
fs
stc
cmpsb
push
loope
jae
movsb
ds
ret
jp
out
jecxz
jne
or
and
jbe
cmpsb
and
sbb
pop
jb
cmp
sub
adc
in
push
push
inc
and
pcmpgtd
inc
or
add
lcall
cltd
jmp
xor
push
jge
or
pop
test
cld
shll
dec
or
icebp
xchg
test
mov
add
aas
addr16
jl
enter
push
rclb
and
inc
mov
pop
shlb
xchg
add
imul
mov
popw
ret
clc
push
adc
lea
mov
push
push
jnp
mov
sbb
mov
push
and
out
js
dec
imul
clc
sbb
or
jns
je
insl
adc
inc
mov
sub
mov
or
dec
xchg
mov
int3
js
or
sub
jmp
imul
push
scas
jmp
xchg
mov
insb
mov
jle
das
xor
test
int3
sub
imul
sbb
pusha
pop
rorl
or
push
inc
scas
xchg
pop
test
daa
rcrb
sbb
push
jbe
les
movnti
add
stos
adc
mov
cmp
popf
xchg
in
mov
cmpsl
adc
or
add
scas
shrl
lock
insl
cmp
or
mov
jae
mov
cmp
pop
sbb
pop
lea
xor
push
mov
jae
les
xchg
sub
je
lods
test
cs
lcall
test
stos
sbb
loopne
mulb
das
mov
ds
sub
sub
dec
cmp
lahf
pushf
jecxz
adcb
je
call
div
in
sub
dec
shll
inc
int
mov
and
xor
std
or
mov
fwait
subb
cmc
or
imul
ret
aad
into
mov
mov
filds
push
mov
ret
aas
enter
mov
gs
push
les
aam
jns
addr16
rcrl
mov
ljmpw
xor
das
sub
mov
mov
push
add
cltd
adcb
aas
push
rcrb
pushf
inc
gs
lods
jns
cmp
pop
and
mov
dec
mov
xchg
push
or
aas
out
fldenv
sahf
inc
add
hlt
shl
xor
add
test
mov
cli
and
les
sub
mov
pop
mov
cmpsb
daa
push
sahf
je
lret
rcll
scas
and
loope
testb
nop
push
loop
xor
ljmp
xchg
jb
stos
out
call
pushf
push
lcall
jno
in
push
lret
pop
lea
aas
mov
sub
cmpsl
mov
jb
lahf
mov
xor
xchg
cmp
rcl
adc
inc
push
ja
and
sub
test
xor
xchg
add
cwtl
sbb
frstor
inc
fwait
scas
mov
or
xchg
add
inc
in
inc
jnp
insl
dec
jne
test
and
lcall
sub
jae
adc
mov
jae
subl
gs
inc
mov
cmpb
lret
test
or
cmp
push
cmp
sub
mov
xorb
push
mov
imull
cmp
push
xchg
jo
ja
je
xchg
rcl
fcomip
mov
rorb
add
cmp
mov
jecxz
sbb
cmp
movsb
fildll
xchg
mov
je
lds
ret
mov
ds
sbb
int
inc
cmp
or
fwait
lds
in
cmp
or
lea
in
push
mov
in
ds
pop
adc
lea
xchg
jnp
popa
cmp
xor
fs
mov
add
loopne
mov
jg
push
sub
adc
popf
xchg
mov
and
xlat
addr16
popa
xor
in
daa
mov
insl
xor
dec
cmpsl
out
insb
fsubrs
es
arpl
inc
jecxz
sahf
rclb
or
xor
in
xor
mov
mov
mov
fiadds
inc
daa
hlt
jbe
or
daa
repnz
xchg
cmp
mov
loope
mov
cvttps2pi
adc
insb
push
or
testb
pop
sbb
and
xchg
popa
sbb
hlt
pop
mulb
inc
scas
mov
or
mov
xchg
popa
loopne
or
mov
and
jb
sub
add
aad
ficoms
fsubr
or
cli
dec
ror
push
cmp
push
jg
and
jge
orl
loopne
add
pop
ret
add
sbb
push
push
in
mov
jo
es
sarl
ficoml
out
push
push
push
fldt
fs
and
aad
imul
jmp
cltd
lods
and
shr
and
dec
jge
mov
stc
shl
in
add
mov
inc
inc
call
dec
jbe
es
xlat
mov
xchg
divl
repnz
xchg
ss
mov
test
and
sub
push
xor
xchg
mov
movsb
cltd
test
push
xor
dec
cmp
sub
lahf
mov
mov
mov
lret
loop
cwtd
imul
dec
cltd
leave
es
fsubrs
jae
pop
sbb
pop
lret
aas
mov
sub
pop
cld
test
push
push
lret
cwtl
and
jno
rcll
dec
and
stc
rcll
faddp
test
orb
and
lods
jns
stos
add
push
cmp
push
jl
dec
push
push
fnstenv
mov
mov
arpl
movsl
repz
bound
and
js
xchg
push
dec
sbb
stos
xchg
mov
sub
imul
lds
add
mov
xchg
pop
push
xchg
push
js
adc
fidivrl
mov
test
loope
mov
ja
test
xor
inc
mov
loope
fstps
xlat
call
daa
sub
cmc
lods
stc
cmp
imul
fsts
mov
loopne
dec
push
in
sbbb
jb
into
cmp
out
ja
aad
sub
sbb
jl
xchg
inc
es
inc
rcr
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
dec
or
or
push
dec
scas
int
call
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
