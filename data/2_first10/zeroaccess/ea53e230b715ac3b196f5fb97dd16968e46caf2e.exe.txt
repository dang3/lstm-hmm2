push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
pop
daa
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
icebp
mov
push
and
push
dec
xor
js
in
push
fidivl
int
cmp
in
inc
sub
xor
in
mov
cmp
cltd
movsl
les
stos
imull
imul
ljmp
cmp
mov
call
das
xchg
incb
jle
outsb
js
sub
mov
add
or
pop
mov
mov
cmp
lret
aad
mov
inc
sub
stc
popf
inc
insl
push
mov
sbbl
jae
call
mov
pop
xor
aam
fcom
dec
dec
inc
pop
aas
jp
and
shlb
xor
ja
sub
sub
jo
imull
jnp
aad
repz
push
shlb
add
pushf
nop
jge
mov
aad
lret
sub
jbe
test
and
and
cld
aad
mov
pop
test
inc
jb
adc
sub
mov
pop
add
mov
lock
adc
js
sub
in
ja
cli
fcom
dec
xor
out
push
shrl
movsl
aas
das
pushf
mov
in
sti
imul
dec
idivl
jo
mov
out
xchg
jns
dec
adc
in
xchg
dec
or
imul
lods
mov
pop
fs
mov
leave
mov
ss
cmc
sahf
jo
cmpsb
test
loopne
in
sub
iret
popa
cmp
jbe
aas
pop
aam
lock
fiaddl
repz
fistpl
xchg
dec
inc
into
pop
inc
jmp
movsl
push
jmp
xchg
fdivrp
add
push
shr
ja
jle
inc
je
lfs
in
jae
fists
rol
jns
mov
xor
pop
fmuls
sbb
fimuls
pop
in
add
cld
gs
mulb
adcl
mov
jb
xlat
sub
icebp
add
push
and
dec
adc
fidivl
lock
mov
sarl
jo
jne
cmp
stc
lret
jg
test
inc
in
iret
roll
mov
mov
dec
shll
xor
fisttpll
icebp
mov
mov
jnp
dec
int
hlt
in
fs
rcrb
pop
push
and
mov
cmc
popa
dec
in
loopne
dec
fdivl
pop
mov
or
out
xchg
into
xor
cmp
cld
ja
cltd
clc
addr16
lods
mov
pop
lahf
push
mov
movsl
xchg
push
notl
stos
xor
xchg
sarl
popf
xlat
das
aaa
int3
pop
add
pop
mov
adc
mov
fdiv
fisubrl
xchg
lods
addb
hlt
xor
sub
std
imul
ret
in
psubsw
loopne
pop
adc
mov
outsl
push
movsb
ret
int3
imul
push
std
or
cmp
lret
stos
shrb
mov
jno
xor
cltd
and
lock
xchg
jle
cmp
je
jmp
cli
or
fdivl
mov
fstps
or
dec
cmpl
stc
push
mov
sub
mov
mov
adcb
enter
ljmp
test
inc
lret
addb
loop
jg
push
push
sarb
inc
ss
icebp
fimuls
int
adc
lds
dec
xchg
pop
in
add
and
push
adc
testl
repz
jae
jo
pop
jnp
repz
adc
mov
aad
loopne
mov
mov
and
fcmovbe
jmp
push
lds
inc
frstor
push
outsb
or
jp
xchg
jge
orb
inc
loop
ret
mov
dec
dec
sti
aad
pop
adc
lahf
movsb
pop
and
int
das
loope
inc
out
push
cmp
dec
movb
cwtl
xor
out
mov
pop
jge
jp
xchg
mov
mov
mov
fwait
test
sbb
bound
pop
xor
lds
ljmp
push
dec
in
test
ret
mov
fcmovnu
inc
fstps
dec
jge
pop
sbb
flds
loop
fstpt
push
in
shll
dec
rorl
test
cwtl
add
xchg
jp
push
inc
adc
push
cwtl
mov
ds
add
int
aad
fcoml
in
fdivrl
fld
cmc
shll
xlat
push
and
loope
jecxz
test
arpl
mov
jno
in
pop
pop
aad
push
sbb
sti
inc
cmc
or
ja
mov
ja
loop
test
addl
dec
mov
and
in
ret
mov
fstpl
dec
add
sbb
dec
sub
inc
fstp
mov
fs
fistpl
cmc
in
ret
mov
or
fsubrl
jns
mov
es
jbe
cmp
js
sub
pop
stos
mov
mov
inc
popf
fcompl
jae
iret
or
cmp
sub
pusha
arpl
push
sar
aad
jecxz
pop
scas
inc
rcrl
into
jmp
fs
and
repnz
jb
pop
inc
jae
mov
or
aam
jbe
jnp
or
dec
push
data16
stos
mov
call
movsl
xor
pop
in
test
sbb
xchg
subl
roll
xor
pusha
pop
stc
mov
popfw
dec
jno
mov
fisttpll
cltd
dec
mov
xchg
insb
ror
aas
sbb
xor
out
test
xchg
pop
dec
lods
lds
in
dec
in
jg
int
xchg
mov
sbb
mov
xchg
outsb
repnz
imull
xchg
fs
fnstenv
icebp
call
cmp
pop
pusha
into
cli
mov
cmp
dec
jmp
lods
rcll
aam
pop
lahf
sti
jo
xchg
jge
mov
out
mov
dec
xor
mov
movsb
ds
out
mov
test
stos
xchg
mov
sub
imul
add
shrb
mov
lcall
push
popa
insb
sub
add
mov
xor
add
cli
mov
bound
imulb
movsl
and
inc
sti
cltd
jno
jbe
cmp
pop
cmp
cltd
lahf
cmp
sub
xchg
shl
cmp
gs
mov
pop
call
mov
xchg
rcr
repnz
push
cmp
pop
pop
jno
in
mov
fsubrs
mov
das
in
mov
dec
stos
repnz
arpl
jge
in
jle
outsb
hlt
test
inc
xchg
aas
xchg
sbb
or
xchg
push
scas
jmp
dec
in
jne
jecxz
mov
pop
pop
cmp
test
sub
xchg
into
push
jmp
mov
sbb
mov
mov
xchg
cmp
cmp
and
pushf
aad
mov
sub
fnstsw
mov
and
mov
mov
push
pop
mov
jbe
in
mov
dec
fadds
popa
lds
lods
aam
mov
sarl
dec
fwait
popf
and
and
cmp
xchg
xor
outsb
aad
inc
adc
sahf
test
adc
pop
ds
cmp
pop
pop
leave
scas
lahf
enter
mov
push
push
or
dec
ret
jl
pusha
push
adc
les
mov
jmp
xchg
cmp
xor
shr
shlb
jecxz
mov
or
lcall
dec
and
neg
push
call
dec
inc
ret
mov
stos
je
adc
pop
jno
cmp
sub
adc
out
jge
dec
nop
icebp
add
pop
ret
adc
aad
fildl
lds
mov
mov
ds
dec
icebp
adc
das
xchg
inc
inc
mov
lret
lahf
xchg
push
movsb
insl
int
stos
pop
dec
mov
cltd
rcrb
add
popa
data16
sbb
int3
fwait
dec
sti
cmp
sbb
push
lods
fcmovnu
shrl
and
leave
and
sub
add
je
push
outsb
sti
int
bound
rcl
adc
xchg
pop
mov
mov
add
popf
sub
pop
inc
xchg
mov
in
dec
lcall
movsl
das
rorb
jmp
add
sbb
and
fistpl
in
sub
xlat
mov
pop
ljmp
jge
mov
cwtl
dec
insb
dec
mov
cmp
shll
lret
pop
movsl
and
mov
in
stos
int
mov
daa
and
sub
enter
or
or
xor
push
daa
jl
add
xchg
iret
cwtl
pop
insb
pusha
bnd
ljmp
sub
pop
call
mov
add
popa
jae
clc
or
rcll
je
mov
stos
sub
or
xchg
in
in
cmp
loopne
in
mov
jae
mov
xor
dec
pop
or
or
dec
mov
sub
cmp
popa
pop
into
jae
xor
fcompl
aad
pop
and
and
out
push
stos
push
leave
or
add
fyl2xp1
arpl
push
adc
call
adc
pop
jmp
cli
neg
mov
cmp
adc
fisubrl
cmpsb
pushf
int3
sub
stos
mov
fcompl
les
add
fs
push
cli
adc
jle
mov
loop
mov
addr16
adc
or
adc
out
mov
jge
in
xchg
dec
mov
movsb
out
fldl
sbb
mull
mov
push
mov
repnz
repz
pop
dec
aam
push
mov
cmc
or
xor
xor
jg
ljmp
icebp
cmp
les
icebp
and
in
jp
popa
lret
or
jecxz
or
inc
repnz
add
outsb
xor
adc
or
stos
xor
popf
sbb
xchg
sbb
push
add
in
in
sub
js
test
div
sbb
mov
push
aaa
lret
pop
sub
scas
outsb
adc
mov
loop
ret
mov
jmp
sarb
enter
mov
pop
int3
cmp
lods
adc
imul
add
add
lret
jmp
aas
cmp
or
inc
scas
jnp
pop
xchg
ret
je
addb
push
push
test
jbe
les
xorb
cmpsl
aam
leave
out
xchg
out
mov
cmpsl
in
mov
xchg
sti
push
sahf
sub
pop
add
mov
je
add
inc
imul
mov
jge
fwait
jg
sbb
pop
sub
aad
test
adc
xchg
adc
sbb
insb
or
push
ss
vfmsub213sd
loop
pop
stos
mov
sbb
mov
out
out
lods
cmp
outsb
cld
jno
and
jmp
imul
adcb
xchg
cmp
pop
pop
sbb
mov
xor
in
mov
and
xchg
dec
jmp
inc
inc
icebp
pusha
add
out
es
cwtl
sbb
outsl
xor
lods
add
cmpsb
push
or
xchg
out
divb
rol
sbb
pop
in
rorl
xor
cs
ljmp
xor
aas
leave
mov
js
lcall
out
sub
dec
ret
inc
mov
push
xchg
xchg
add
add
push
int3
adc
mov
push
mov
or
out
mov
xlat
and
loopne,pt
mov
mov
mov
mov
movsl
mov
movb
pushf
pop
aas
in
loop
iret
dec
rcrb
sbb
dec
jns
cmc
jg
ljmp
push
out
pop
fsubrl
pop
popf
test
lock
pop
mov
inc
cli
int3
sub
xor
xchg
xchg
or
je
inc
leave
repnz
aad
in
push
ds
pop
popa
pusha
adcb
jno
out
mov
push
enter
mov
inc
dec
aas
cwtl
adc
adc
jbe
movsb
and
mov
cmp
jge
mov
lahf
repz
jg
inc
sub
mov
xchg
mov
dec
push
jo
push
sbbb
xchg
xor
sbb
in
and
xchg
add
rdpmc
pop
imul
aas
xchg
movb
movsb
sbb
fistps
inc
mov
xlat
popf
repz
les
push
loopne
dec
movsb
out
repz
jmp
aaa
pop
mov
loopne
nop
and
adc
std
pause
dec
xchg
mov
sub
es
xchg
push
mov
xchg
xchg
movsb
xchg
shlb
lahf
fnstsw
jmp
repz
mov
pushf
mov
aad
loopne
jmp
pop
fcmovnbe
out
test
arpl
subl
jge
add
jl
cmpsb
cli
pop
mov
fistl
push
push
sub
hlt
pop
aad
cli
sahf
inc
mov
loope
sbbb
aad
lock
int3
pop
int3
push
lret
pop
and
mov
fs
test
stos
jb
xchg
fcomps
scas
cltd
pushf
addb
loopne
mov
cmp
mov
dec
cli
push
movsb
test
xlat
mov
pop
or
rorl
fidivl
adc
ds
sub
sub
lea
movsb
arpl
push
push
fdivs
add
and
repnz
pop
lods
imulb
xor
jmp
cld
stos
cmp
dec
dec
sti
adc
cmp
mov
rcrl
or
inc
rclb
dec
add
repz
rorl
sub
lds
mov
ret
xchg
jmp
cmp
xor
test
xchg
and
dec
cli
mov
push
loop
mov
decl
repz
sub
popf
mov
aam
sub
xchg
sbb
cmpsb
cmp
adc
inc
fwait
sub
mov
mov
popa
adc
lods
mov
movsl
fisubrl
jg
cmp
jecxz
je
or
mov
and
shlb
and
sbb
fwait
bnd
lcall
push
xor
clc
loope
and
sub
pop
jnp
fdivl
xor
mov
popa
ret
cs
adc
dec
clc
inc
int
pop
xchg
mov
sub
int
push
insb
in
xchg
movsl
xchg
test
sub
mov
mov
out
sahf
pushl
inc
mov
popa
inc
xchg
mov
fidivrl
scas
dec
jge
xor
sbb
xorl
imul
sarb
into
out
pop
int
add
mov
xchg
sbb
cmpsb
orl
lret
pop
mov
das
movsl
or
add
jo
push
out
ja,pt
jmp
sti
cmp
insb
aas
out
mov
mov
adc
inc
cltd
sub
loopne
dec
mov
repz
repnz
adc
dec
sbb
out
and
cmp
lret
jge
pop
dec
dec
xchg
push
aam
push
mov
mov
in
sahf
jle
sub
xor
outsl
adc
sub
mov
pop
test
fisttps
xor
cmp
or
int3
addl
cmpsl
add
lret
out
dec
fwait
mov
dec
movsb
or
and
cs
pop
jecxz
push
fwait
add
cmp
iret
mov
and
in
adc
stos
popa
mov
xor
pop
and
dec
popa
in
std
xchg
cld
jns
nop
arpl
sarb
jns
mulb
push
pusha
lret
inc
cmp
lcall
adc
movsl
nop
mov
nop
xchg
adc
out
int
fimull
test
cmpsl
cmpsb
ljmp
les
dec
addr16
leave
insl
xlat
imul
test
mov
clc
test
out
mov
shll
aad
xchg
lret
pop
je
sub
sbb
sahf
gs
jle
movl
shl
sbb
xor
movsb
lcall
dec
into
adc
sti
mov
sbb
addl
mov
loopne
adc
pushf
fiadds
dec
in
fmulp
shrl
dec
cmp
inc
adc
lods
jecxz
jmp
xchg
fstpt
push
lret
jmp
shl
dec
lea
scas
or
out
es
fildl
repz
and
pop
mov
push
mov
mov
outsb
and
add
or
test
xor
sub
ss
popa
adc
out
das
fsubp
mov
fsubrp
and
testb
testb
call
in
push
or
imul
pusha
lds
stc
push
or
dec
jmp
add
fs
js
add
pushf
fimull
mov
lahf
cwtl
mov
mov
int
xchg
cltd
loope
mov
scas
adc
imull
lahf
dec
aaa
inc
es
push
push
fwait
jae
das
cltd
outsl
filds
xor
fiadds
add
les
mov
lds
pop
lcall
and
adc
sub
push
or
jmp
xchg
pop
fwait
fs
repnz
add
inc
insl
fidivl
add
stc
cmp
push
nop
xchg
adc
movsl
mov
shl
or
cmp
push
sbb
cli
lret
in
xchg
icebp
repnz
imul
adc
dec
arpl
push
imul
addr16
xor
sub
shl
adc
inc
fmul
test
nop
push
rolb
jae
pushf
mov
jo
mov
push
outsb
je
jp
and
pusha
in
shlb
xor
dec
push
mov
mov
test
and
push
outsl
insb
nop
push
repnz
mov
gs
icebp
push
mov
shl
jp
ljmp
test
or
out
test
inc
push
dec
add
loope
imul
jo
mov
lods
cltd
pop
mov
daa
mov
sahf
int
ret
enter
or
insb
imulb
sti
jno
rcrb
fadds
xchg
mov
adc
inc
scas
scas
out
add
cli
xor
fmull
clc
jae
cli
inc
call
xor
xchg
aad
push
pop
aaa
push
mov
xchg
lcall
fsubs
arpl
or
jb
cwtl
sub
movsb
or
inc
inc
mov
xchg
insb
cmp
mov
sti
mov
jg
shll
aas
pop
shrb
xor
das
xor
pop
cwtl
dec
lods
leave
cmovbe
subb
or
or
test
addl
imul
pusha
jo
pop
dec
or
add
mov
in
ja
div
mov
es
sbb
cli
add
test
pushf
and
loope
mov
fwait
push
clc
jmp
es
cmp
add
or
lea
xorb
adc
mov
fidivrl
sti
mov
outsb
sub
mov
dec
jmp
cmp
daa
sahf
movsb
ja
sub
push
or
mov
mov
jno
insl
daa
mov
jne
pop
repz
repnz
adc
dec
xchg
int
pop
sbb
adc
mov
mov
ja
add
add
in
push
add
inc
fistl
push
push
xchg
xchg
in
insb
in
mov
adc
mov
adc
mov
out
test
rcll
je
aaa
fcomps
into
mov
dec
pop
dec
push
push
test
ret
and
xor
loopne
or
push
xchg
mov
xor
divb
gs
pop
imul
cld
xor
sti
dec
cmp
or
lods
add
sbb
and
cs
push
je
das
mov
addr16
not
mov
ret
and
mov
lods
in
xchg
jecxz
pop
xchg
cmpb
add
jge
xchg
cld
ljmp
adcb
and
add
inc
imulb
cmpl
mov
cwtl
pop
daa
mov
or
push
bound
or
icebp
cltd
aam
js
ret
or
lahf
inc
mov
xor
ja
jae
xor
inc
push
repz
push
scas
xchg
aaa
fdivrs
movsb
fstpt
xchg
push
add
xchg
ljmp
ret
or
sbb
jle
aaa
icebp
mov
mov
adc
outsl
jp
mov
js
adc
cld
mov
pop
mov
xchg
xchg
in
jb
or
loopne
stos
outsb
movsb
fs
inc
dec
loopne
clc
xlat
pop
lock
std
pop
ret
pop
adc
lret
xor
and
andl
and
mov
orl
or
hlt
bound
and
push
or
pop
movsl
sbb
ljmp
scas
adc
mov
pop
dec
jge
popf
fldl
add
mov
sti
sbb
outsl
cmp
mov
add
aam
adc
push
in
jp
clc
xchg
jg
push
test
add
std
das
xchg
xor
in
rcrl
fadd
fwait
das
xorb
adc
stos
outsl
mov
push
sbbb
pop
imul
sahf
cmp
push
aas
in
mov
or
gs
ret
cmp
idiv
sarl
mov
rcll
adc
jns
mov
jp
inc
jno
clc
lods
mov
add
cmp
mov
hlt
push
into
dec
dec
insl
adc
out
jmp
mov
jp
push
out
jle
test
sbbl
mov
push
pop
enter
pop
aaa
stos
or
out
fisttps
push
sub
imul
out
pusha
inc
in
adc
out
pop
pop
jnp
xor
movsl
adc
mov
mov
or
rclb
adc
lea
aas
or
mov
inc
je
pop
nop
rolb
dec
sub
sbb
xchg
cmp
pop
js
sub
js
push
add
in
mov
into
mov
imul
xchg
adc
out
jne
mov
aad
mov
aaa
lret
add
in
adc
nop
sbb
xor
xor
clc
repz
mov
ret
dec
lahf
adc
pop
or
sub
push
lods
test
sarl
in
in
push
js
frstor
and
pop
lret
push
mov
rorl
loope
or
fisttpl
jmp
push
adc
push
push
pusha
ja
imul
gs
sbb
ret
fcmovnb
pop
xor
fcomp
enter
mov
das
movsl
bound
or
lret
xor
mov
mov
inc
push
hlt
push
adc
dec
push
fiadds
xchg
int
dec
call
hlt
call
movsl
or
int3
mov
fbstp
or
loope
aad
iret
icebp
or
and
dec
lods
pop
cmpsb
push
ret
mov
mov
inc
es
lahf
jo
ret
iret
aaa
ret
mov
scas
shl
daa
daa
inc
sti
rorl
mov
inc
or
or
leave
insb
adc
outsb
xor
data16
aaa
cmp
pop
jae
fcoms
popf
fisubrl
mov
scas
test
dec
iret
push
js
mov
orb
mov
cmpsb
and
lods
movsb
out
int3
mov
mov
sahf
mov
pop
pop
add
insb
xchg
mov
mov
mov
std
insb
inc
push
lret
xchg
jb
arpl
fs
sbb
andl
loope
fisubs
cmpsb
int3
mov
jbe
fwait
add
in
aaa
push
ljmp
jne
dec
test
pop
push
pop
mov
leave
ret
gs
pop
mull
scas
idivl
nop
cmc
nop
push
je
rorl
ss
push
jmp
and
xor
rol
dec
pop
and
xor
mov
push
aad
pop
clc
add
xchg
outsb
fidivrl
cmpsb
jl
inc
mov
inc
aad
repnz
xchg
jno
lods
and
or
sahf
lcall
mov
push
xchg
cmp
adc
sahf
cmp
sbbl
inc
and
pop
jg
xor
sbb
shr
mov
add
test
fists
and
xchg
inc
xchg
lock
aad
fisttps
adc
out
sarl
addr16
ret
xchg
pop
and
xchg
jg
sahf
stc
adc
pop
test
mov
xorb
sbb
adc
orl
lods
icebp
fadd
ss
dec
ret
ja
jbe
fstps
cmp
notl
in
adc
mov
ljmp
pop
cs
push
test
push
jg
cmp
je
inc
fsubl
push
dec
mov
fistl
pop
in
loope
mov
mov
in
sub
out
or
mov
stos
js
add
mov
rcrb
insb
mov
lcall
aas
pop
mov
clc
add
sub
pop
push
es
push
test
test
ss
and
jbe
aaa
sub
out
push
or
sub
in
mov
add
call
push
xchg
fldcw
push
cs
out
jb
iret
xor
in
mov
js
adc
shrb
aaa
add
push
and
stos
sub
cmc
scas
mov
jle
mov
or
jb
push
push
cmp
mov
cli
mov
mov
daa
or
aas
xor
jmp
pop
pop
hlt
push
push
jp
cmp
push
sbb
mov
incb
jge
jmp
jo
dec
repz
iret
jg
push
and
shrl
jae
cmp
mov
xor
cs
fcomi
stos
lret
mov
mov
xchg
sbbl
pop
lcall
call
cwtl
pop
lahf
dec
sub
stos
out
add
xchg
mov
mov
dec
pop
add
push
lods
cltd
mov
or
sbb
dec
cmpl
imul
addb
mov
sbbl
push
aaa
push
add
add
add
and
mov
mov
push
cltd
stc
push
bound
xchg
pop
lds
jns
addr16
mov
fwait
dec
cli
pop
mov
test
lret
sub
fstl
push
inc
ss
sti
outsl
imul
outsl
jmp
jo
insl
sbb
pusha
cwtl
pop
jnp
loope
cli
mov
ret
xchg
lods
push
push
xchg
add
push
dec
push
into
loop
adc
jge
fbld
sub
stos
aaa
adc
aam
cli
or
sub
sub
adc
pop
push
clts
popf
addr16
js
das
icebp
sub
int3
sbb
dec
gs
jle
hlt
dec
jo
fs
dec
jnp
sbb
mov
sbbb
in
test
int
rcl
dec
adc
scas
shr
je
push
mov
mov
push
jp
jne
imul
mov
fsubp
jmp
decl
call
mov
mov
pusha
inc
pop
cmp
mov
cld
fdivrl
fisubl
ljmp
arpl
jo
test
adc
andb
push
gs
and
jae
cli
lret
sbb
jb
add
adcl
pop
imul
imul
das
xor
aaa
push
xchg
std
push
test
mov
jne
or
cltd
daa
lret
out
add
fcoms
nop
cld
loopne
or
mov
and
pop
sub
adc
scas
pop
sbb
mov
jp
mov
test
les
ret
addb
push
cmpsb
icebp
inc
mov
packsswb
ficomps
adc
dec
and
in
jae
push
pop
mov
mov
adc
popf
mov
sub
mov
pop
outsl
leave
pop
inc
inc
sub
ds
icebp
in
stc
adc
fldt
sbb
pusha
xor
pop
cmpsb
push
dec
into
ficoml
inc
hlt
lock
xchg
xchg
fsubl
stc
jg
daa
mov
fstl
loop
cmp
push
lds
adc
pop
sbb
cmp
push
mov
lods
pop
ret
inc
inc
repz
push
jp
jge
daa
ja
nop
cmp
inc
pop
cmp
dec
cmpsl
dec
xor
fnstcw
int
sbb
arpl
mov
ss
lcall
mov
pop
mov
je
mov
test
adc
ja
xor
es
js
insb
pushf
pop
push
sbb
shl
scas
mov
aam
call
out
sbb
cmpsb
add
cli
inc
addr16
and
dec
fcmovu
pushf
insl
push
cltd
sahf
cwtl
push
shl
inc
ljmp
adc
push
fcoms
push
adc
add
and
xor
adc
cmp
in
das
out
xlat
push
push
loope
sub
or
stos
adc
push
repz
fprem1
ret
xchg
outsl
xor
push
lea
and
mov
mov
push
jecxz
pop
add
aas
dec
add
loop
icebp
sbb
dec
pop
cmp
pop
fsubs
sub
in
cmp
sar
jg
dec
inc
in
cli
arpl
sub
jno
mov
ret
add
sub
inc
cmpsl
ficoms
jg
loopne
popa
shrb
xchg
inc
pop
clc
xchg
inc
cmpsb
mov
and
jae
jecxz
repnz
cmp
adc
rorb
sar
mov
loope
inc
push
cmp
xchg
popf
dec
mov
test
cld
pushf
pusha
push
jb
aaa
data16
movsl
inc
adc
sbb
aam
cmp
pop
jg
int3
push
movsl
lcall
imul
test
xchg
pusha
pop
xchg
adc
sub
ficompl
cs
cltd
test
std
mov
sbb
mov
jl
push
jp
cwtl
xorl
repz
mov
out
addr16
nop
mov
lods
pop
fwait
aad
xor
or
xor
fisubrs
cmp
into
jb
cmc
add
mov
addr16
pushf
pop
aaa
int3
jp
es
cmp
xor
lods
mov
fwait
ret
sub
rcll
mov
cwtl
cmovle
movsb
movsl
mov
lret
insb
das
repnz
xlat
and
jg
add
ljmp
div
inc
jne
jb
xchg
dec
and
dec
mov
orl
mov
add
std
int3
and
shrl
mov
sahf
push
jnp
xor
js
xchg
cmp
pop
push
mov
lds
loop
lock
xor
lea
jp
ljmp
test
jb
fstp
mov
ljmp
fldt
inc
mov
push
nop
xchg
repz
fs
bound
xchg
xor
mov
pop
dec
xor
ret
jle
push
xor
shll
rolb
lods
cmp
push
jmp
out
ds
push
test
sbb
lea
jne
orb
adc
loope
jge
jbe
pushf
popa
xchg
cmpsb
dec
fnclex
fisttpll
aaa
out
fs
jo
jo
subl
inc
add
jmp
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fstpl
pop
addl
cmpsl
iret
add
cmp
daa
fisttpll
test
cmp
stos
lods
sub
cmpsl
xchg
mov
dec
xor
jp
add
pop
or
cs
lret
pop
into
loopne
pop
mov
imull
add
inc
sbb
inc
test
scas
or
mov
adc
cltd
mov
xchg
add
dec
scas
test
pop
mov
rorl
insb
jne
jo
jecxz
ds
cmpb
sub
xchg
es
or
imul
lret
test
aad
aas
fdiv
xlat
inc
push
sub
scas
lret
sarl
pop
lcall
loope
push
in
insb
in
cmpsb
and
bound
cmp
dec
aad
iret
das
push
clc
pusha
or
imul
ret
arpl
test
and
scas
cmp
addr16
insl
jg
or
adc
add
hlt
scas
fsubrl
lahf
addl
sbb
jg
and
dec
lcall
inc
adc
pop
push
push
push
add
push
sub
lahf
dec
add
pop
mov
dec
jmp
xlat
push
ret
sti
repnz
pop
outsl
testl
pop
mov
sub
aaa
iret
cmp
les
sub
mov
addr16
imul
push
jne
mov
inc
mov
add
call
icebp
xchg
out
xor
mov
dec
in
inc
in
mov
xchg
push
push
pop
pop
or
add
repnz
arpl
inc
lock
jecxz
mov
cmp
inc
popa
jne
mov
push
loope
cmpsb
push
jle
jb
jo
dec
ljmp
loope
xchg
in
xor
sti
sbb
push
adc
and
repnz
mov
aad
shll
add
scas
and
pushf
push
loope
push
lahf
add
xor
shll
mov
outsl
mov
out
sbb
les
pop
add
mov
clc
xor
xchg
call
add
repz
insl
mov
pop
mov
dec
lea
imul
inc
stc
xlat
outsl
push
and
jno
adcb
cmp
test
mov
pop
outsl
lods
rorb
test
xchg
or
adcl
inc
gs
out
cltd
mull
test
cmc
cld
lahf
fadd
and
clc
stos
dec
mov
xchg
or
adc
test
mov
lahf
rcll
jns
pop
data16
mov
dec
addr16
out
aas
mov
test
lcall
pop
sbb
inc
je
push
adc
xor
push
imul
mov
xchg
jnp
jmp
enter
test
sarl
ds
cld
sub
lret
cmp
pop
das
cmp
jne
jecxz
les
pop
pop
jl
fiadds
outsb
xor
popa
lahf
jne
inc
jbe
in
xor
sub
cltd
in
jo
xorb
jl,pn
cmp
xchg
xchg
cmpl
cmp
adcl
mov
push
cs
insl
ss
into
clc
lods
xor
xor
mov
add
aas
das
sub
lahf
orb
in
movsb
sti
aad
jb
dec
cmpsb
rep
icebp
sub
fmulp
cmp
jle
or
and
int
pop
adc
shrl
jmp
lds
incb
sub
sub
push
sbb
hlt
mov
push
pushf
sub
xchg
test
jnp
fucomip
outsb
out
pop
sub
inc
cmpsl
mov
xchg
jg
mov
mov
push
pop
fildl
leave
inc
rcrl
xor
icebp
gs
ret
pop
fsubr
xor
test
pop
cmp
jl
adc
into
cltd
push
pushf
adc
int3
mov
addr16
jl
sub
push
inc
push
mov
push
lods
inc
pop
ljmp
or
xchg
fs
lret
jl
push
and
lods
push
repnz
int3
ret
repz
xchg
cli
mov
dec
cwtl
adc
dec
and
xor
sbb
cmp
scas
jge
add
orb
xchg
sub
jl
inc
mov
add
mov
and
stc
fcompl
cmp
inc
shr
jbe
sub
inc
dec
adc
cmp
dec
xor
or
mov
hlt
adc
xlat
fmull
out
jge
jb
rclb
in
push
aam
sub
scas
xchg
repz
inc
cld
pop
jmp
mov
xchg
mov
daa
shll
divb
test
dec
and
add
daa
mov
ja
or
mov
mov
xchg
in
fbstp
pushf
lock
push
inc
mov
inc
es
add
xchg
xor
ss
adc
dec
mov
fdivrs
adc
mov
and
cmp
mov
mov
push
clc
fidivs
or
stos
test
xchg
or
outsb
shll
inc
cltd
sarl
push
mov
and
and
xor
incl
sti
insb
ja
shl
cmp
shl
inc
jnp
push
xchg
push
sub
inc
sbb
dec
mov
or
cmovb
fiaddl
pop
xchg
inc
ja
inc
and
or
lret
in
out
inc
push
jge
cmc
pop
stc
jae
fildl
orl
adc
int3
jno
dec
xchg
rorb
test
and
stos
adc
fs
es
jb
sarl
out
pop
repnz
or
mov
imul
arpl
shlb
or
sbb
je
addb
test
call
mov
out
frstor
lret
mov
jno
nop
gs
and
sbb
test
insl
hlt
mov
add
push
jbe
xchg
push
add
insb
pop
add
push
dec
lahf
mov
fnstsw
sub
xor
daa
cmp
stc
and
imul
or
xchg
xchg
pop
xchg
and
cmpsb
int
jmp
fisttpl
and
inc
test
lahf
sbbl
ror
jl
xchg
ret
dec
mov
mov
xchg
add
sub
or
sub
xchg
mov
mov
xchg
arpl
enter
jbe
or
add
test
xor
pusha
jo
in
jl
stos
divl
lock
mov
jnp
ret
loope
pop
fsub
movsl
push
push
popf
or
shlb
dec
xor
fwait
sbb
cmpl
pop
inc
cmovge
push
dec
roll
jecxz
sub
inc
ret
jb
ja
push
das
fisubs
sbb
cli
aaa
lods
push
popf
inc
dec
mov
sub
adc
sbb
push
loop
or
jmp
outsl
sti
movsl
fcompl
push
decl
xchg
movl
jne
jno
lret
repnz
gs
pusha
out
or
sub
jl
pop
and
out
mov
mov
jnp
mov
or
pop
adc
divb
aad
cmp
jbe
lcall
add
cltd
cmp
mov
mov
cmp
leave
xchg
xchg
inc
mov
inc
divb
lock
pop
icebp
sbb
jecxz
mov
pop
loope
adc
movsb
loopne
fnstenv
outsl
gs
in
mov
ljmp
arpl
fwait
dec
pop
in
pop
insb
imul
sbb
sti
cmp
ss
push
hlt
cmp
insl
int
and
jecxz
imul
cltd
add
imul
bound
mov
insl
sarl
mov
jmp
insb
cmp
je
push
jl
push
test
inc
fmull
cmp
sub
out
stos
jle
les
fs
dec
pop
pushf
inc
sarl
pushf
lods
rcrb
mov
sub
gs
imul
xor
or
xchg
jle
pop
dec
movsl
and
xchg
arpl
mov
popf
push
les
cmp
cltd
stos
cmp
adc
pop
xor
add
js
push
pop
rol
stos
pop
inc
xor
push
xchg
pop
xchg
cmp
and
into
ljmp
aaa
out
pop
jmp
int
jg
idivb
mov
mov
xchg
pusha
daa
in
or
das
into
daa
xor
aad
push
mov
addr16
cmp
jbe
mov
daa
sbb
add
inc
xor
pop
cwtl
loopne
lcall
sub
arpl
gs
xlat
or
dec
pop
cmp
jg
pop
arpl
xchg
imul
jmp
xlat
xor
in
test
pop
es
jae
negl
fdivl
xchg
or
outsl
stos
ret
int
dec
add
or
pop
das
and
in
mov
mov
xchg
sbb
enter
out
xor
in
fdivs
popa
in
aam
cltd
xor
adc
mov
loop
cmc
into
dec
push
push
sbb
cmp
push
sbb
insb
add
xchg
and
sti
test
adc
push
stc
imul
mov
pop
mov
jg
mov
jbe
lea
out
cmp
dec
int
mov
imul
outsb
dec
mov
hlt
dec
rcl
xor
adc
adc
mov
and
inc
loopne
and
pop
xor
pop
pop
ss
ret
and
popa
or
lods
adc
sbb
xor
xchg
movb
movsb
adc
adc
in
dec
icebp
pop
mov
subl
fiaddl
push
mov
inc
inc
adc
shlb
aas
cmp
ret
fisubs
out
sub
mov
stos
add
lds
orb
dec
push
sbb
in
sbb
outsb
dec
sbb
pop
int
loopne
icebp
sbb
pop
pusha
mov
sarb
popa
idiv
or
and
test
push
out
negl
fldt
out
and
stos
lods
aaa
dec
jo
mov
adc
cli
por
sahf
inc
mov
add
inc
push
mov
add
sub
mov
push
adc
popl
xchg
sub
push
mov
jae
loope
pop
inc
mov
pop
lods
lahf
jg
scas
cmpb
or
mov
cmp
imul
clc
lahf
lock
test
imul
dec
fwait
sbb
cmpsl
pop
test
mov
sub
enter
sub
mov
push
xabort
or
insb
test
inc
and
add
call
mov
mov
jo
push
lea
ds
inc
nop
xor
xor
lock
add
shrb
fsin
fistl
in
nop
stc
cmp
inc
mov
mov
sbb
or
dec
lret
jno
shlb
xor
mov
adc
into
dec
lods
cltd
mov
xor
pusha
add
xor
aad
ud2
daa
cs
aad
leave
out
adcb
mov
mov
mov
lods
push
lods
mov
insl
leave
push
call
push
adc
cli
jo
lods
jae
push
nop
xchg
add
scas
sarl
sbb
faddp
dec
cmpb
ret
add
mov
imul
add
sub
mov
cld
call
pop
ss
dec
popa
adc
pop
mov
jae
int3
scas
and
lcall
mov
ljmp
lea
adc
rcr
dec
lret
push
and
sbb
loop
pusha
jae
mov
fsubl
or
mov
xor
ror
inc
adc
into
sub
cmp
shll
xchg
fwait
push
mov
mov
mov
mov
arpl
dec
mov
inc
mov
lods
shlb
rorb
and
ljmp
popf
pop
inc
leave
adc
cmpl
idivl
sarb
mov
js
negl
test
push
cmc
dec
dec
xlat
lods
adc
daa
jl
enter
xchg
lahf
je
sub
mov
pop
shlb
inc
es
adc
std
rolb
pushl
jl
xor
jo
cmpsl
ds
fistpl
jg
inc
ret
popf
sbb
push
out
and
pop
int
cmp
mov
je
pop
andb
sub
xorl
mov
jne
xor
add
mov
and
or
imul
shll
addr16
mov
sbbb
sub
mov
add
cmp
scas
xor
test
int
imul
scas
imul
and
popa
jbe
add
out
push
ret
aaa
mov
fcompl
shlb
adc
xchg
int
xchg
pusha
int
cmpsl
pusha
sbb
out
add
pop
xchg
pop
jle
shll
fisttpl
push
mov
xor
push
scas
sbb
mov
or
sbb
out
rorl
jns
dec
mov
add
shrl
iret
subl
inc
cmp
xlat
mov
dec
push
inc
inc
cmp
rcrb
inc
xor
cmp
ljmp
adc
test
add
mov
in
mov
sbb
out
add
adc
pop
push
jb
adc
push
in
ret
pop
fcompl
xor
sub
pop
mov
mov
test
cmp
pop
sub
cmc
sub
xchg
in
out
fidivs
daa
mov
mov
inc
faddl
jnp
pop
pop
in
jb
mov
dec
mov
lds
dec
ja
cs
push
pushf
pushf
sub
lcall
cmp
xchg
pop
int
das
repz
add
in
jg
jae
mov
cmpsl
repz
out
out
mov
je
frstor
or
das
sub
movsl
pop
shl
setnp
cs
pop
dec
jmp
pushf
jno
stos
lods
scas
push
or
lods
jo
or
adc
dec
sub
sbb
ret
scas
adc
mov
dec
or
push
jo
fstpl
frstor
pfcmpgt
add
pushl
cld
or
push
cmp
inc
lods
fwait
xchg
add
xor
add
shll
les
call
das
cmpsl
out
pop
push
sbb
dec
jg
sub
or
mov
pop
push
pop
pop
pop
test
je
ss
and
adcl
mov
adc
loopne
sbb
je
mov
inc
and
das
ret
lock
mov
mov
mov
push
aas
inc
xchg
in
aam
js
aaa
jmp
movsb
stc
adcl
shlb
lods
pop
test
mov
mov
mov
test
inc
mov
call
ror
xchg
lea
out
push
mov
adc
jp
nop
sbb
push
pop
imul
scas
sbb
sub
mov
ret
loope
and
push
imul
out
aad
ja
inc
inc
aas
mov
das
lock
sbb
push
inc
int
adc
jle
test
mov
mov
jecxz
mov
bound
cmp
outsl
fnstenv
sub
push
pop
xor
lods
in
pop
test
ret
mov
lret
ficompl
scas
imul
cmp
repnz
push
adc
fcomip
push
pushf
or
jg
sbb
mov
cmpsb
hlt
adc
addl
inc
fisttpll
sub
or
cmpb
jb
sbbb
jl
ss
push
ror
test
and
test
and
or
or
out
in
and
clc
test
xor
dec
jmp
mov
cwtl
fsub
adcb
rcl
cmc
add
orl
jnp
int3
xor
dec
and
mov
popa
fidivrl
ret
xor
jg
cltd
add
lahf
and
and
and
or
repnz
pushf
hlt
andb
mov
das
pop
dec
vpmaxub
sbb
and
dec
add
mov
iret
xchg
cmp
jmp
lret
idiv
jmp
mov
inc
or
aaa
jb
addr16
jmp
jecxz
mov
jl
cmpb
jae
mov
push
jne
je
adc
sbb
test
das
push
mov
jb
insl
adc
imul
nop
push
and
cmp
test
mov
add
add
xor
inc
xor
ljmp
in
daa
jb
add
dec
pusha
sub
fsubrs
mov
mov
mov
fmuls
and
xlat
pushf
adc
xchg
cmp
inc
xlat
adc
mov
stos
and
or
call
xor
jl
outsb
pop
fs
mov
jno
mov
mov
adc
bound
or
inc
sti
xor
xlat
ja
ret
inc
mov
pop
sarb
mov
cmc
mov
mov
lahf
insb
sub
outsb
out
fnsave
jns
es
or
inc
vpsraw
mov
lds
push
cmpb
popa
rcl
lahf
nop
fwait
cmp
ss
adc
xor
ljmp
popw
pop
cmp
pop
xchg
mov
addr16
xchg
sub
testl
mov
lcall
jge
xchg
push
adc
sbb
call
stos
inc
or
mov
and
outsb
or
xor
out
inc
xchg
add
test
xlat
mov
out
lds
loopne
dec
mov
cld
mov
rclb
cltd
loopne
xchg
shlb
mov
xor
inc
xor
sbb
dec
lahf
ja
dec
pop
push
sub
push
addr16
xchg
inc
clc
arpl
sub
bound
sbb
insb
popa
and
mul
pop
add
sti
cmp
test
xor
test
filds
cmp
jbe
test
je
jmp
shlb
mov
add
test
test
mov
int
inc
mov
cltd
das
movsb
sub
lods
sbbl
adc
fldl
sub
jo
cmp
mov
sbb
push
hlt
xor
inc
lcall
and
sub
pop
push
jmp
sub
adc
xor
mov
xor
xor
inc
loope
les
jno
xchg
pop
push
mov
adc
dec
pop
mov
mov
jae
popa
jmp
icebp
push
sub
das
clc
mov
lcall
repz
popa
jb
movsb
dec
imull
mov
xor
jge
or
xchg
out
aaa
and
and
jmp
add
in
cld
lods
fiadds
pop
in
loopne
inc
sbb
rcrb
sbb
push
and
xchg
dec
add
dec
dec
movsl
inc
or
push
test
jbe
cmp
mov
stos
xchg
jne
mov
and
in
jno
or
mov
add
and
leave
sub
lahf
xchg
pop
int3
push
sbb
lock
movsl
ret
lret
sbb
and
cli
mov
cmp
movb
test
xor
push
sub
aaa
add
out
sub
push
mov
iret
dec
add
sbb
mov
cmc
mov
mov
cltd
sbb
push
dec
or
or
jmp
xor
clc
movsl
or
lods
adcl
mov
enter
loop
mov
jl
pop
cs
xchg
jnp
rorl
jecxz
mov
jo
shll
bound
xchg
outsl
dec
pop
adc
mov
out
in
imul
pop
add
jle
lret
pop
lods
out
push
hlt
scas
cmp
rcll
jne
sub
clc
inc
cli
adc
mov
lret
mov
enter
xor
jmp
jle
repz
ds
stos
mov
cmp
lahf
dec
pusha
pop
jmp
mov
cli
hlt
movsl
stos
movsl
jo
ss
xor
sbb
je
inc
sbb
add
lea
push
ror
mov
jecxz
out
loopne
lret
cmp
jp
stc
mov
idivl
lahf
pushf
lret
adc
mov
cwtl
and
mov
shrl
mov
lds
add
jecxz
mov
ret
push
daa
add
add
or
sub
mov
pop
scas
adc
jo,pt
shl
push
mov
in
fs
jg
sti
inc
dec
call
icebp
shll
enter
sub
loopne
repnz
mov
inc
or
push
stos
lea
inc
jbe
cwtl
pop
push
rorb
jle
jns
rclb
jae
xchg
inc
inc
iret
mov
or
js
fmull
lods
sbb
dec
dec
mov
pop
xlat
lcall
add
jne
cmpsb
scas
sub
int3
mov
sahf
jp
or
lods
jmp
pshufw
or
mov
push
movsl
popa
and
fistpll
andl
push
les
int3
or
shrb
fsubrl
or
jmp
movsb
dec
xchg
jle
lret
mov
das
test
xchg
xchg
cld
pushf
push
out
testl
filds
dec
xchg
orb
or
icebp
mov
pusha
sub
adc
mov
shll
fcompl
lods
icebp
mov
adc
sarb
es
sarl
xchg
cli
sbb
aam
pop
dec
int
sbb
inc
int3
jg
in
pop
inc
std
xchg
jb
xchg
push
inc
push
lea
pop
enter
pushf
pop
imul
mov
adcb
lahf
shr
pop
xor
add
xlat
inc
mov
adcl
popa
mov
sub
loopne
jno
sub
xor
aam
fisubl
xor
add
or
push
lret
cmp
mov
repz
imul
nop
and
push
test
mov
mov
sbb
or
adc
mov
adc
push
inc
adc
scas
mov
mov
sbb
fadds
sbb
das
cwtl
and
nop
in
jl
or
outsl
test
sub
xchg
dec
xor
cwtl
push
mov
outsb
or
addl
or
xchg
cmp
nop
push
adc
movsb
fwait
loop
dec
mov
xchg
test
in
pop
mov
pop
insl
repz
aad
and
pop
or
xchg
out
xchg
fidivs
cwtl
ret
pop
sbb
xlat
into
in
pop
fsts
rol
xchg
push
shr
inc
sti
mov
mov
pop
or
jo
lds
sub
mov
jbe
adc
and
fadd
mov
xor
andl
push
adc
in
mov
pop
or
add
das
dec
daa
push
js
dec
mov
mov
icebp
xchg
aad
inc
movsl
rolb
mov
test
stos
adc
dec
mov
mov
or
xor
mov
fisubrs
je
fwait
sbb
repz
imul
jo
jle
xchg
add
in
loopne
sbb
lock
imul
fucomip
push
sbb
ljmp
lock
popf
cmp
or
and
repnz
pop
mov
xchg
adc
push
shl
test
xchg
inc
sub
stos
fstp
out
dec
je
mov
sbb
pop
movsb
push
xlat
push
lds
mov
js
pop
js
jl
pop
repnz
outsb
and
loope
jb
dec
pop
das
fs
or
mov
jns
rcr
sub
lds
sub
and
xlat
outsb
mov
pop
pop
ret
dec
das
jne
jg
out
shrl
movsl
xchg
fnsave
jmp
sahf
testb
jecxz
jae
aam
shlb
enter
fucom
xlat
cwtl
push
iret
aas
mov
and
stc
stos
xchg
push
rcrb
jmp
jge
out
std
ss
sarb
xchg
add
xor
cmpsb
sarb
push
mov
lret
inc
mov
test
jmp
jmp
xchg
dec
test
adc
aaa
popf
or
dec
or
add
fiaddl
push
mov
jae
push
iret
mov
xchg
jmp
xor
sbb
jmp
xchg
movsl
adc
xchg
jb
test
push
imul
jne
pop
lods
movsb
lahf
sbb
push
rcrl
loope
mov
xor
cmp
mov
xor
outsb
push
lock
cwtl
sub
and
pop
addl
add
in
adc
ja
sub
adc
xchg
push
jns
xchg
std
adc
dec
mov
jno
mov
xchg
sahf
shlb
clc
mov
out
cmpb
mov
loop
mov
cmovae
loopne
mov
ret
dec
push
push
push
cmp
cmc
imul
mull
dec
jle
mov
jo
sub
xchg
rorl
xlat
pop
inc
push
add
ljmp
es
mov
mov
push
cmc
js
push
lock
adc
sbb
aam
add
repnz
xchg
adc
add
cli
push
data16
inc
cmp
dec
xchg
call
shrl
out
sub
jle
es
xorb
inc
xor
xchg
jge
into
inc
test
sbb
inc
cmc
add
jne
movsl
movsl
sti
jae
mov
pop
xor
mov
lds
insb
sub
inc
fildl
aad
popa
addr16
data16
sarl
sub
adc
sahf
lcall
mov
gs
sarb
das
imul
pop
mov
inc
or
push
push
inc
adc
inc
lds
xchg
in
mov
adc
test
bound
ljmp
lock
test
test
or
mov
jecxz
mov
shll
mov
and
mov
ret
xchg
jno
cmp
mov
dec
xor
mov
xchg
inc
cmpsb
and
sti
into
in
rcrl
push
fdivl
aam
rcrl
arpl
mov
push
lods
into
cmpsl
xchg
loop
push
lret
sub
mov
jns
in
arpl
xor
dec
mov
mov
lds
adc
roll
leave
std
lock
fidivl
aam
mov
jl
dec
xor
add
into
std
call
push
dec
jecxz
in
mov
add
insl
out
sub
int3
mov
nop
rclb
xchg
add
stc
xor
and
sbb
mov
dec
push
in
das
imul
movsl
ds
push
xor
das
loop
int3
jnp
mov
lret
out
data16
stos
in
push
in
mov
ja
lret
stos
fstl
cld
xchg
bound
dec
sub
test
pop
pop
mov
dec
andl
or
lods
rolb
in
cs
movsl
mov
adc
outsb
pop
mov
push
xor
out
sti
cltd
lods
cmpsl
xchg
dec
loop
sub
repnz
cmp
push
rcrl
mov
adc
aam
jge
mov
fcmovbe
mov
lret
aas
js
js
xchg
xor
cwtl
rclb
into
int
dec
lcall
cltd
loopne
aaa
sbb
pop
xor
and
or
inc
idiv
sub
pop
das
mov
imul
mov
insb
mov
test
xor
and
iret
mov
lds
icebp
xchg
jl
or
sahf
mov
sub
jge
push
rorb
fxch
push
xchg
xlat
repnz
mov
sub
lds
and
dec
sti
lock
cmpl
lds
iret
outsb
cwtl
cmp
xchg
mov
mov
out
sbb
cli
ja
adc
sub
push
repz
mov
jo
sbb
xchg
jecxz
push
pop
fwait
lret
dec
mov
mov
lcall
xor
and
in
jp
outsl
or
pop
or
test
nop
jmp
pop
popf
jl
inc
mov
pop
loopne
fimull
mov
dec
js
jge
cmc
or
outsb
fistpll
and
xchg
pop
mov
xchg
mov
fldcw
in
cli
inc
scas
sbbb
jmp
dec
inc
mov
add
mov
sub
and
push
sub
mov
jp
dec
rclb
push
fsubrl
icebp
cmpb
push
and
hlt
ja
dec
sbb
int3
sbb
sub
mov
cmc
sub
push
cmpsb
nop
mov
imul
adc
sbb
xchg
jp
sub
sub
aas
ja
orl
push
cmp
inc
shrb
ret
bound
push
pop
mov
jl
hlt
movsl
xorb
mov
or
jo
xor
rcrb
cmpb
push
add
cmp
and
and
sub
dec
std
add
adc
sbb
mov
ja
xchg
mov
cmp
cmc
shll
shrb
cmp
inc
ja
xchg
lods
lods
sbbb
xor
sbb
cld
xchg
jns
xor
jge
and
push
out
mov
mov
pop
ljmp
pop
and
clc
ds
nop
daa
outsl
mov
lret
jmp
add
fs
dec
adc
pcmpeqd
mov
test
lret
sbb
pop
xchg
clc
pop
push
pop
ret
cmpsb
and
sbbb
jmp
arpl
push
dec
sub
pop
in
adc
call
and
cs
jnp
push
dec
jmp
popf
mov
in
jnp
fs
push
sub
push
mov
sub
push
inc
out
insl
xchg
ret
jmp
push
insl
jb
andl
scas
mov
jge
push
xchg
rol
mov
xchg
ret
sbb
call
mov
test
xor
ljmp
dec
pop
in
push
mov
orb
push
iret
cmp
xchg
stos
and
fnstsw
lret
mov
and
movsl
sub
or
addl
xlat
testb
push
lret
and
pop
loop
fadds
mov
mov
cmc
sbb
dec
cmpsb
test
push
lock
loopne
pop
jno
jl
xor
xchg
push
jbe
mov
ret
les
std
cmc
mov
je
pop
push
ret
cli
push
sbb
in
mov
adc
mov
mov
push
xchg
push
mov
bound
sub
imul
sbb
push
dec
loope
or
inc
outsl
adc
mov
and
fcoml
adc
andl
out
cmp
movsl
jl
into
fsubs
test
sub
cmp
lea
pop
and
dec
push
pop
inc
sbb
loope
lods
pusha
cli
rcr
out
sbb
jae
mov
adc
mov
notb
pusha
cmp
call
ds
mov
rorb
lock
insb
push
stc
test
add
or
cmp
adc
cltd
pop
pop
mov
jae
iret
jne
sub
xor
adc
mov
push
js
cmp
and
fsubs
push
loopne
sarb
jo
jo
aaa
xor
jmp
stos
jnp
sub
jnp
stc
and
push
nop
xor
shl
shll
shl
mov
cmp
in
jmp
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
fcmove
inc
lcall
addl
outsl
jbe
mov
bound
sbb
jae
loopne
push
call
xchg
push
mov
jp
mov
push
xchg
aas
imulb
dec
inc
lahf
or
std
inc
ds
xor
fstp
or
mov
pusha
dec
fildll
inc
mov
pop
cli
sub
iret
addl
jge
push
adc
lods
jg
jle
sti
repnz
out
jns
pusha
pop
jmp
sbb
push
nop
call
loopne
cmp
jnp
ljmp
pop
div
mov
sub
xchg
loop
mov
and
mov
xchg
push
int3
inc
divb
imul
adc
xor
cmp
adc
push
sbb
and
xchg
test
xchg
pop
inc
dec
sbb
cmp
jo
shrb
test
lahf
mov
jecxz
or
cmp
cwtl
scas
pop
jbe
push
notl
push
scas
jnp
fnstenv
notb
shl
stos
nop
adc
arpl
xchg
das
std
idivl
arpl
and
add
lock
cltd
pop
xorb
cltd
push
push
imul
cmpsb
mov
lods
sub
adc
ja
dec
mov
icebp
repz
dec
daa
push
inc
clc
sub
psadbw
int3
stos
fldcw
jle
pop
mov
fstpt
pop
jmp
jnp
dec
jmp
pop
xor
jae
add
sub
aaa
hlt
sbb
or
xchg
cmp
sub
mov
adc
dec
out
push
cmc
and
into
push
adc
movl
dec
ljmp
addr16
imul
aad
ficoml
in
arpl
fildll
ret
mov
inc
and
mov
pop
test
enter
cmc
hlt
jne
imul
scas
or
jno
outsl
add
mov
popf
cmp
push
int
dec
pop
mov
mov
sub
or
popf
lds
xchg
and
xchg
inc
lret
push
mov
pop
fdivp
inc
sbb
mov
or
movsb
into
jp
loope
out
cmp
fsubp
imul
mov
out
mov
int
push
insl
xchg
push
xchg
jne
in
add
pop
lcall
hlt
sar
jnp
aas
into
inc
jne
test
mov
inc
ds
mov
mov
ret
mov
cltd
dec
les
cmp
sub
aas
dec
or
add
ret
lcall
cmp
in
push
jb
adc
adc
pop
inc
in
jge
movsb
inc
pop
inc
faddl
mov
dec
int3
push
aad
mov
add
ja
pop
mov
lcall
cmp
jmp
movsl
xor
jmp
pop
mov
xchg
rcrb
decl
add
lcall
aam
out
push
out
pop
fdivrl
decb
aad
dec
lods
jecxz
and
xchg
dec
loop
cli
hlt
add
test
loopne
jmp
cmpl
push
mov
aad
popa
adc
mov
xchg
mov
outsb
outsb
xor
lcall
xor
test
int3
cmp
jge
push
pop
out
das
popa
cltd
mov
icebp
mov
pop
pop
arpl
jecxz
out
cmp
pop
cld
adc
jae
in
inc
add
mov
arpl
and
movb
sub
scas
mov
dec
xchg
int
mov
mov
fldt
pop
sbb
or
cmp
cmp
jle
sub
sbb
mov
cwtl
fildl
popf
and
or
test
inc
mov
cmp
fistl
and
rorl
imul
ret
mov
cs
or
xor
push
add
lahf
push
jg
sbb
and
mov
and
sahf
push
out
push
jmp
js
xchg
xchg
sbb
loope
add
loopne
shlb
loopne
inc
stc
xor
dec
inc
rep
sub
sbb
loopne
mov
pop
incb
rolb
pop
imul
xor
scas
jg
sbb
dec
lock
xchg
and
lds
sub
cmp
dec
pop
mov
movsl
inc
mov
pop
rcrl
jg
dec
inc
cmpsb
mov
or
lahf
pop
pop
xchg
adc
lahf
out
xchg
pop
insl
xor
mov
jnp
cmc
jne
xor
rcrb
out
je
jecxz
push
idivb
cmpps
sub
sub
cli
adc
lods
cmp
lds
dec
leave
mov
inc
nop
lds
mov
cmp
loop
test
add
add
fistps
pop
rorl
xchg
in
fildl
aam
movsb
push
push
in
mov
leave
out
sbb
lret
jle
pushf
shl
out
cmp
in
push
push
sbb
repnz
pop
mov
repnz
dec
outsl
pop
mov
enter
jge
les
sbb
jb
mov
cmp
fidivrl
xor
mov
push
push
xchg
mov
aad
lock
jae
inc
mov
push
mov
cmpsb
sbb
data16
icebp
mov
pop
xlat
inc
data16
inc
mov
icebp
jle
je
or
fs
mov
push
shrb
in
xor
push
push
aad
scas
cmpsl
jmp
into
sub
ret
mov
jmp
xchg
lahf
xor
pushf
add
pop
mov
lds
sbb
mov
cs
cld
mov
cli
or
sbb
in
jbe
mov
pusha
jno
or
fidivrl
andl
insb
inc
cmp
test
jnp
ljmp
sub
pushf
sbb
or
outsb
jno
inc
mov
cmp
cmc
sub
inc
and
mov
sbb
scas
xor
push
pop
xlat
ret
dec
push
dec
mov
lea
cmpsb
pop
push
int3
sub
jo
sub
insb
movsl
inc
push
bound
jb
jne
or
sub
mov
ret
mov
or
jbe
push
out
loop
and
jp
lea
push
push
cwtl
jecxz
or
mov
sbb
nop
adc
xor
pop
lods
mov
loop
xor
sub
iret
pusha
jecxz
cmpsb
dec
push
inc
xor
hlt
sti
or
insb
push
sarl
daa
js
ss
sbb
divl
fistl
adcl
or
in
outsb
addr16
outsb
mov
cmpsb
ds
cltd
dec
cmpsb
repz
cmp
fs
jle
adc
rcll
cmc
xor
cs
inc
call
pop
push
jecxz
cmpl
js
xor
cmp
cmp
push
xor
add
popl
fwait
mov
jg
dec
mov
mov
dec
jle
jg
lea
in
mov
ljmp
out
gs
fnsave
xchg
xchg
xor
push
mov
loope
push
push
cli
clc
push
movsl
mov
test
cs
fsubp
push
repz
adc
fadd
daa
and
lret
loopne
fst
movsb
sbb
jns
mov
lcall
aaa
icebp
sahf
fwait
int
jno
insb
xchg
mov
fadd
ret
jns
xchg
add
mov
inc
lea
sbb
roll
mov
sbb
out
add
inc
out
loope
xchg
lods
leave
call
idivl
cmp
push
cs
mov
mov
xchg
loop
orb
int
int3
out
xchg
sub
xchg
mov
out
in
mov
lcall
ljmp
fisubrl
or
das
or
and
ja
pushf
fnsave
jns
xchg
loopne
std
outsb
jmp
js
fnstenv
int3
addr16
ds
movsb
pop
in
in
xchg
fstp
jmp
xchg
aad
or
sbb
out
cmp
inc
das
std
call
jbe
xor
add
iret
jl
js
pop
pusha
mov
push
xchg
push
sbb
add
xlat
fs
xor
sbb
fmul
dec
mov
jns
pop
out
xchg
add
pop
push
in
nop
insb
inc
xor
lods
xor
xchg
hlt
cmpsb
sbb
ret
test
pop
inc
sbb
mov
mov
fldenv
inc
push
cltd
sbb
push
mov
filds
push
in
rol
pop
mov
mov
imul
mov
into
fst
jg
lea
xchg
enter
inc
aas
loope
loopne
mov
iret
jg
xor
mov
mov
or
mov
loopne
call
push
in
cmp
adc
int
dec
pusha
dec
inc
or
pushf
jo
dec
out
int
repz
jge
mov
in
push
push
lds
or
ret
shlb
call
pop
into
dec
xchg
xchg
xor
cmp
stos
pop
and
es
nop
movsl
sbb
and
movsl
lcall
imul
or
dec
outsb
push
jle
sarl
dec
popf
jle
adc
fbld
jae
cmc
movsl
aas
xchg
lcall
ja
dec
loopne
dec
fdivs
leave
jl
cmp
ljmp
push
icebp
clc
fistl
pop
mov
inc
icebp
fstpt
sub
mov
cwtl
imul
jle
into
popf
popf
jecxz
sub
rolb
unpcklps
aaa
movsl
dec
push
jecxz
movsl
dec
fmull
movsl
outsl
inc
jmp
pop
icebp
notl
jle
loope
xchg
arpl
mov
mov
sbb
cmp
rclb
call
xor
xchg
inc
aas
xor
bound
inc
sub
sbb
lea
popa
sbb
call
push
mov
jge
out
dec
fadds
in
data16
push
cmp
jbe
mov
or
xchg
xor
cmp
push
push
leave
add
je
int
mov
lods
call
adc
lahf
and
or
shl
cmpsb
adcl
mov
insb
shl
icebp
and
cltd
pusha
pop
inc
loop
adc
aas
xlat
xchg
dec
clc
ficoms
pop
add
cmp
cmp
daa
jae
stos
pushf
jle
decb
xchg
and
pop
nop
rcl
shrl
les
add
cmp
jmp
sub
xor
outsb
fld
lea
push
cmp
ret
mov
push
lods
idivb
pop
push
fdivr
or
cmp
add
jmp
jge
in
jae
mov
mov
xchg
adc
fidivrl
push
cmc
lcall
mov
aam
leave
or
pop
pop
dec
push
movsb
loop
sub
pop
cltd
adc
test
push
fdivs
push
mov
test
cmp
push
inc
sub
and
mov
ja
mov
sub
andl
mov
stc
mov
in
lds
and
sbb
jp
pop
push
out
push
loope
out
pop
xchg
mov
popa
mov
idivb
int
fdivrl
jp
push
mov
sub
mov
pushf
int
jbe
jmp
aas
imul
inc
jo
fwait
jae
rorb
inc
push
jb
stc
mov
jp
int3
ret
dec
in
mov
adc
push
ja
inc
test
loopne
cmp
jno
enter
hlt
and
jg
out
cmp
and
hlt
push
xor
fs
lds
or
rorb
daa
mov
dec
push
mov
iret
pop
daa
cmp
and
jp
nop
adc
add
inc
and
jns
aam
pop
and
test
ss
lock
mov
xlat
imul
gs
inc
and
mov
stos
cmp
loope
fisubrs
pop
adc
xorb
in
out
idivl
imul
or
inc
scas
lock
pop
push
add
xchg
dec
adc
repz
or
adc
in
push
test
lret
dec
jg
adc
fs
mov
pop
fs
adc
xor
jge
fisubrs
in
add
jp
sti
mov
or
je
mov
mov
pop
shrl
mov
pop
imul
les
mov
or
xchg
add
test
sub
xchg
daa
mov
cmpsb
sbb
imul
out
fwait
xchg
mov
loopne
ficompl
mov
icebp
mov
loop
mov
jg
out
rclb
daa
fwait
sub
dec
repnz
movzwl
sub
xchg
pop
mov
jecxz
cvtps2pd
sub
xchg
ror
in
mov
mov
push
sarl
inc
clc
enter
hlt
cmp
xchg
mov
rolb
and
faddl
mov
cmp
pop
lods
jecxz
jns
xor
pusha
jnp
hlt
loope
cmpsb
jle
sbb
and
sbb
or
mov
push
cmpsb
or
in
adcb
sub
in
mov
aas
and
out
shrl
pop
and
push
sbbb
sbb
mov
inc
mov
pop
jmp
hlt
cmc
push
pop
in
sahf
fnsave
push
je
stc
pop
jecxz
pop
push
xchg
inc
bound
pushf
loop
and
or
push
jge,pt
fistl
imul
add
add
aam
inc
aas
cmp
std
subb
add
xchg
rcrl
mov
adc
inc
or
xor
dec
or
cld
es
xchg
jl
loope
lods
push
sarl
xchg
icebp
test
or
insl
icebp
pop
mov
lret
cmp
add
test
and
mov
aas
lahf
lods
sbb
jcxz
ljmp
push
sub
ret
xorl
xchg
les
push
shlb
pop
out
or
fbld
daa
das
movsl
mov
imul
pop
dec
out
repnz
sahf
popl
into
add
pusha
jmp
gs
dec
mov
ljmp
pop
inc
iret
jo
pop
or
bound
inc
in
fcoml
jnp
cltd
rcll
aaa
das
sbb
test
mov
bound
lea
mov
std
pushf
jl
cmp
xchg
lods
fwait
push
outsb
jmp
cmpb
dec
fildl
xor
adc
jnp
rorl
pop
ficomps
sub
push
sbb
mov
movsb
test
pop
gs
test
jns
cmp
sti
ds
aam
cmp
or
orb
sub
cmp
pop
xor
fwait
insl
insl
dec
mov
sbb
ljmp
jne
add
lock
test
adc
scas
lret
cmpsl
sti
popf
sub
fwait
jg
pop
or
sub
cmpsb
in
out
sbb
dec
xor
pusha
pop
movsb
orb
mov
lods
mov
mov
add
xlat
and
pop
lret
outsb
and
cmp
mov
cli
mov
sbb
or
push
stos
nop
idiv
cmp
and
pop
sbb
pop
and
fimuls
cli
xor
lcall
shlb
or
stos
xor
fistl
movsl
fwait
dec
pop
std
scas
cmc
mov
and
sbb
jo
loope
sub
mov
add
jne
repz
jbe
lods
mov
xchg
or
sub
mov
div
and
add
pop
scas
sti
dec
in
arpl
in
dec
pop
sbb
pop
in
push
push
push
xchg
iret
lret
sbb
test
jecxz
loopne
pop
fwait
pop
int
push
stos
fcoms
sbb
add
mov
xchg
dec
jne
and
popa
jp
jno
mov
cmpsb
outsb
repnz
xchg
bound
dec
leave
mov
dec
sti
std
pop
push
je
das
iret
dec
test
mov
out
adc
pop
push
pop
pushf
xchg
cmp
scas
divl
into
daa
test
xchg
cmp
sub
cmpsb
pop
inc
mov
dec
idiv
negb
sarb
insl
adc
sbb
sbb
mov
add
cltd
out
in
leave
ret
dec
pop
lods
fwait
sub
mov
jle
sub
shrb
xchg
cwtl
loope
mov
mov
aad
insb
movsb
push
lret
jo
fwait
stos
mul
adc
cs
lahf
gs
xchg
inc
out
xchg
xchg
adc
nop
pusha
mov
je
jo
lods
sbb
jl
enter
cmp
mov
xor
out
insl
out
or
jg
mov
ja
jns
mov
mov
inc
movsl
gs
pop
sub
pop
stc
xor
cld
pop
test
push
add
or
xchg
adc
cmp
jne
xchg
movsb
cmp
call
cmp
mov
mov
sub
mov
mov
int3
inc
push
fdiv
xor
popf
bnd
cli
sub
testl
paddusw
adc
std
lods
jg
sub
xchg
jbe
push
fmuls
les
cmc
daa
lcall
mov
in
sub
sahf
xchg
int3
aam
test
out
or
out
adc
cmpl
cwtl
pop
stos
pop
sub
inc
sub
mov
or
addps
mov
xlat
sarl
sahf
cs
loopne
rolb
loope
xor
aam
out
inc
inc
push
js
jp
and
dec
call
popa
xchg
in
xorl
leave
js
adc
std
mov
dec
stos
aad
mov
or
lcall
fwait
shlb
mov
arpl
or
push
push
jecxz
dec
je
stc
xchg
inc
mov
pop
bswap
xor
enter
sbb
pop
dec
mov
dec
add
repnz
mov
push
push
xor
mov
xchg
lret
xchg
jge
and
imul
imul
stc
in
lret
dec
lahf
pop
fldenv
pop
xchg
aas
in
adc
in
lods
lahf
pop
xchg
adc
movsl
sub
loopne
aas
xor
sbb
into
xchg
inc
jbe
inc
push
sbb
in
sub
fists
push
jle
pop
xor
outsb
push
pusha
dec
or
jb
sub
jecxz
sub
mov
sbb
mov
cwtl
popl
adc
sub
mov
dec
subl
popf
das
xchg
loope
mov
aas
jbe
pop
add
mov
push
int3
jno
cmp
aad
jl
orl
add
out
mov
and
test
push
pop
into
and
mov
clc
dec
and
mov
pop
sbb
push
and
push
or
in
dec
shrl
pop
test
imul
cld
mov
push
cwtl
cmp
lret
pop
and
mov
add
inc
push
adc
lahf
shr
outsl
cs
add
push
jno
xchg
inc
jg
addr16
in
ds
cmpsl
adc
mov
outsl
out
xor
and
adc
mov
lods
cmp
scas
inc
sub
test
push
hlt
jae
hlt
jmp
icebp
mov
scas
sub
cmpsb
sub
sbbl
dec
mov
sbb
int
push
jns
mov
aaa
add
andb
sarb
cmp
push
jnp
scas
pop
lea
sub
sbb
test
jbe
xchg
fsts
in
mov
xchg
adc
cmpsl
push
add
xor
adc
xor
test
and
and
js
dec
fwait
loop
cmpsb
call
push
pop
mov
mov
jo
inc
ljmp
cltd
in
cmpsl
fistl
mov
push
ja
lods
test
push
mov
test
jne
xchg
dec
mov
push
gs
mov
adc
jmp
sarb
rolb
aad
fwait
int3
jmp
inc
mov
fwait
push
or
mov
pop
mov
stos
pusha
test
xchg
push
in
xor
movsb
push
gs
daa
mov
push
mov
ja
sub
stc
xchg
dec
and
dec
xchg
cmp
icebp
bound
mov
push
subl
jg
jb
cmpsb
je
inc
adc
adc
inc
aas
fwait
add
icebp
shll
xor
mov
int3
jg
cmp
lods
push
push
push
jae
sbb
je
mov
fcomps
push
adc
inc
push
sbb
aas
in
into
lcall
movsb
xor
xor
out
push
jle
pop
std
subb
outsb
sbb
pusha
mov
push
nop
pop
stos
es
mov
xor
fisttpll
sbb
and
jne
testl
push
ja
push
jnp
jl
adc
adc
ds
stc
stos
in
js
push
add
xchg
sub
enter
xchg
aaa
and
sbb
jmp
scas
or
ja
ret
sub
ljmp
cmp
pop
lods
insb
bound
push
fists
add
lods
add
dec
adc
mov
ret
scas
popf
fs
pop
adc
nop
insl
jge
mov
pop
lods
push
gs
ljmp
sub
mov
jle
xchg
mov
xor
lods
out
cs
inc
jns
mov
leave
testl
repz
push
mov
jno
loop
xlat
xor
lds
lret
cmpsl
adc
mov
scas
adc
mov
jge
sbb
sarl
iret
inc
mov
loopne
cmp
push
data16
cmc
dec
sub
fmulp
push
sub
sub
mov
data16
pushf
fildll
inc
inc
iret
push
test
test
cltd
gs
hlt
out
repnz
sub
nop
iret
cmpsb
test
mov
hlt
stos
cs
lock
cmp
in
push
or
out
dec
repnz
loope
jne
imul
pop
int3
hlt
adc
ret
repz
inc
arpl
jmp
mov
add
lds
sbb
ret
xor
jp
sahf
xchg
out
add
and
ja
test
pop
push
xor
outsl
mov
push
outsl
imul
cmp
aas
iret
jnp
imulb
loop
and
dec
sub
cltd
sub
cwtl
test
adc
aam
and
add
cld
mov
nop
xor
jl
shrl
test
cwtl
or
out
xor
pop
fsubl
sbb
xchg
pop
mulb
test
popa
in
ja
icebp
sub
mov
shlb
add
data16
imul
sbb
ret
lea
lea
cs
cmp
mov
pop
push
inc
fimull
cmp
int
sbb
popf
jge
mov
cmpsl
pusha
mov
ja
or
adc
jbe
and
adc
or
adc
pop
jo
jne
xchg
adc
mov
das
imul
stos
pop
loope
and
pop
mov
jg
sti
cltd
push
lret
xor
test
stos
enter
js
jecxz
cld
data16
pop
out
sub
imul
orb
std
scas
dec
rclb
shrl
mov
pop
push
ja
int3
in
fsubrl
xchg
sahf
in
add
cli
jbe
cmpsb
cltd
rclb
mov
and
lds
dec
test
mov
xor
ljmp
imul
dec
jne
mov
mov
insb
inc
sbb
fcoml
ret
icebp
mov
sub
adc
aad
mov
xchg
add
mov
mov
xchg
dec
insb
shlb
add
popf
cmp
xorl
lcall
dec
test
jmp
and
cwtl
enter
xor
push
add
mov
jl,pn
push
test
int3
js
lret
push
xchg
cmc
popf
movsb
sbb
push
and
push
lret
sub
arpl
push
in
scas
ja
mov
jnp
cld
mov
sbb
stc
pop
test
sbb
in
or
pusha
pop
notb
and
fmull
add
fidivl
pop
pop
cs
stc
fwait
mov
push
inc
shlb
xchg
sub
pop
mov
cmpsl
out
jle
icebp
lds
cmp
sub
inc
fists
mov
add
sahf
scas
xor
das
sub
mov
sub
pop
mov
and
pop
fdivrs
push
jo
enter
leave
out
nop
xchg
fiadds
loop
jns
shrl
sbb
ret
xchg
sbb
xor
adc
add
sbb
mov
call
mov
inc
aam
popl
repnz
adc
leave
pop
push
adc
arpl
or
mov
lahf
xchg
lds
sbb
jmp
inc
cmpsb
mov
mov
add
iret
decb
mov
xchg
inc
cltd
jno
movsb
push
iret
jmp
xor
inc
jne
push
xorb
pop
repz
ret
jmp
neg
or
or
mov
popf
adc
mov
sbb
pushf
xor
stos
fcompl
jae
sub
fisubrs
dec
out
outsl
int
icebp
or
adc
scas
push
ret
movsl
sub
jge
inc
pushf
and
and
rcll
fldz
xchg
mov
dec
mov
sti
lcall
in
sbb
divb
push
test
fwait
movsl
xchg
and
push
testl
in
xor
loope
pop
dec
xchg
bound
mov
sbb
ja
dec
jl
cltd
fmulp
sub
jo
mov
push
cmc
mov
into
xor
aad
jb
and
mov
dec
dec
dec
movsb
insl
and
xor
in
adc
pop
int3
mov
or
sbb
dec
fs
fdiv
sti
add
popf
xor
xchg
loope
test
cmp
negb
mov
sbb
test
int
sahf
and
in
iret
out
and
into
std
pop
aaa
sub
sbb
lret
sbb
or
xchg
in
jmp
dec
mov
jg
mov
pop
inc
roll
adc
repnz
sub
sti
or
or
lods
sub
or
adc
mov
ret
or
cmp
add
mov
les
movsb
out
in
sbb
xlat
sbb
dec
sbb
push
mov
or
int3
mov
nop
mov
fisttps
in
push
std
mov
repnz
or
adc
mov
and
fsubrp
fimuls
das
inc
out
cmp
aas
es
or
jns
jecxz
push
roll
dec
bound
cvtps2pd
dec
jnp
lods
repz
popa
aas
fwait
test
and
lods
or
mov
or
jns
xor
mov
sbb
mov
sub
adc
xor
fistl
jl
pop
adc
pushf
mov
insl
dec
ret
or
pop
push
jle,pt
push
mov
mov
xor
testb
push
sbb
push
rclb
add
lock
fldenv
imul
dec
xchg
fs
adc
shll
and
push
sbb
or
inc
cmc
test
xchg
dec
xchg
test
js
notl
outsb
cmc
push
sub
pop
cmp
nop
add
sbb
loop
pop
ror
insb
rcr
xor
mov
xor
scas
imul
subl
es
mov
lret
fnsave
mov
mov
and
sub
insl
ljmp
sahf
xchg
pusha
fcmove
js
loop
xchg
jne
sbb
lahf
inc
mov
mov
add
cltd
mov
inc
imul
or
or
shlb
add
fldenv
or
xor
inc
adc
sub
das
in
mov
adc
cwtl
bound
aad
pop
dec
add
lods
or
js
std
dec
sub
xlat
mov
and
inc
test
add
add
mov
mov
insl
std
inc
gs
rolb
inc
push
lock
inc
or
cmp
push
scas
push
and
pop
mov
fdivrl
data16
cmp
test
sub
jae
xor
xchg
dec
and
lret
daa
cmp
push
aad
pop
je
fidivl
iret
and
lahf
cmp
sbb
data16
div
insl
dec
cmp
addb
inc
sub
out
dec
in
mov
loop
xchg
jno
and
stos
pop
and
popf
es
xchg
notb
outsb
jbe
adcl
lahf
and
shrb
iret
sub
ja
leave
mov
sub
ljmp
imull
jo
out
mov
push
sbb
sbbb
data16
mov
lcall
xchg
sbb
push
jae
fwait
scas
cmc
imul
rcrb
adc
cwtl
mov
jns
sub
out
lock
cmp
dec
and
mov
xchg
icebp
stc
adc
xchg
out
push
cmp
les
mov
xchg
stos
adc
scas
xlat
jbe
jbe
cmc
push
cli
mov
xchg
es
jg
daa
test
push
in
xor
shlb
and
pusha
lret
or
mov
fcomps
cmp
cwtl
and
inc
xchg
aam
sti
incb
in
inc
push
stos
fstps
adc
sbb
sub
in
lea
lods
jo
psadbw
add
xor
sbbb
das
jne
sti
dec
lock
jns
loop
add
mov
xor
mov
je
xchg
fcoml
std
mov
sub
sub
or
inc
ljmp
imul
lods
pop
mov
mov
fists
sbb
xor
js
rorl
data16
lcall
js
popa
xor
cmp
mov
jns
push
push
lods
sub
int
int3
loop
push
mov
aaa
je
sub
cmp
mov
mov
test
test
ret
add
test
add
inc
cmc
jl
push
fisubs
mov
mov
imul
pop
xchg
ss
mov
adc
mov
inc
xor
add
jecxz
jae
xchg
push
lods
inc
imul
xor
jno
push
jge
inc
test
adc
call
mov
mov
push
lods
dec
js
xor
fldenv
testl
and
test
add
inc
popf
xchg
xchg
push
xchg
int3
mov
rolb
insl
sbb
test
and
in
les
fistpl
outsb
loope
arpl
add
popf
imul
mov
in
lret
loopne
dec
iret
xor
bound
lods
enter
lahf
inc
cmp
adcl
dec
hlt
cmpsl
xorb
scas
mov
push
adc
mov
xchg
aam
mov
fs
sub
arpl
jge
mov
dec
mov
and
dec
jne
jnp
dec
pop
push
xchg
pop
pop
mov
dec
or
stc
mov
or
outsb
fwait
lods
mov
fmull
mov
mov
js
fisttps
xor
mov
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
popa
sub
addl
push
popa
fisttpl
je
push
adc
xchg
pop
pop
imul
sbb
inc
pop
sub
int3
imul
ficompl
mov
jmp
das
scas
xor
inc
fadd
and
adc
rorb
int
test
pop
ret
mov
cmp
test
lahf
jbe
aad
jg
in
pop
mulb
fdivr
imul
fadd
lahf
add
fmuls
cs
ja
sub
jo
cs
add
fistl
sbb
lcall
or
mov
cli
sub
pop
jg
push
mov
jns
pop
push
cmp
add
loope
jo
stos
push
mov
not
add
or
push
cmp
push
insb
inc
mov
add
mov
jo
stos
add
cmp
mov
and
push
cmp
sub
inc
push
ja
fwait
mov
pop
jnp
int3
stc
lcall
inc
stos
repz
scas
imul
fmull
push
in
inc
shll
inc
dec
cmp
fldenv
sbb
popa
dec
aas
rorl
pop
xor
pop
inc
scas
inc
in
and
fisubrs
mov
arpl
fcompl
pop
sbb
push
push
cmp
fisubrl
jl
enter
inc
dec
fadd
mov
adc
hlt
pop
cmc
pop
shrb
f2xm1
mov
pusha
xor
int
test
mov
inc
xchg
xor
xchg
sbb
out
cltd
sub
add
mov
mov
aad
popa
add
dec
jbe
add
mov
rclb
sbb
lcall
fdivr
push
sbb
mov
dec
lds
rorl
out
ret
hlt
adc
ret
ret
scas
push
shll
mov
push
inc
mov
xor
xchg
jl
sbb
in
sub
stos
lods
xchg
mov
jnp
inc
icebp
addr16
jg
sbb
inc
push
xchg
aam
xor
cld
push
cld
arpl
aam
jmp
add
sub
push
mov
in
jb
jle
jbe
push
test
loope
dec
sbb
jb
subl
ret
mov
add
imull
adc
xchg
push
sti
dec
in
xchg
std
andl
mov
les
mov
push
pop
mov
loopne
cmpsl
into
jb
js
pop
jb
pop
pop
pop
mov
sbb
fstl
mov
jae
inc
push
sub
sub
jecxz
xchg
xor
js
outsl
stos
fdivrl
dec
jnp
sbb
push
cmc
jl
divl
xlat
dec
inc
sbbl
mov
dec
push
sub
stos
aam
popa
outsl
mov
loope
lea
es
int
inc
add
inc
mov
gs
enter
shll
into
mov
sub
lods
and
cmpsl
dec
adc
pop
jmp
lahf
xor
xchg
dec
cmp
pop
pop
test
pop
test
mov
inc
repz
mov
es
ds
and
pop
lods
mov
mov
mov
cmp
mov
add
loop
enter
sarl
cld
out
and
idivl
mov
push
orl
rclb
aam
add
xchg
daa
cmpl
daa
cmp
sbb
int3
popa
pop
push
out
mov
xchg
or
dec
popa
out
int3
jns
xchg
movsb
xchg
xorb
inc
or
test
dec
push
inc
cmp
negb
cli
adc
and
mov
xchg
int
sbb
cmp
mov
cmc
jmp
rcll
rcll
xor
mov
out
pushf
and
add
add
and
les
es
and
lock
ficomps
sub
cld
cld
mov
fwait
aaa
mov
div
les
aaa
dec
ja
sarb
push
push
ret
fs
mov
cwtl
xchg
mov
xchg
enter
mov
aas
movsl
xchg
mov
std
call
mov
push
lock
jo
adc
xchg
dec
dec
dec
popa
sti
jp
ljmp
iret
or
add
or
push
cmp
cmp
jae
das
out
dec
subb
sub
sbb
mov
inc
js
mov
pop
pop
mov
and
or
cmc
mov
adc
push
cmc
and
nop
cmp
repnz
jecxz
inc
jg
shl
mov
pop
gs
fisttpl
add
add
jo
xlat
clc
dec
stc
ret
lret
nop
or
clc
add
sbb
imul
jnp
adc
inc
pop
jns
fcompl
xchg
push
mov
roll
out
loope
mov
push
hlt
or
daa
cmpl
cwtl
push
pop
decb
lods
daa
fdiv
and
je
dec
sub
repnz
xor
rcrb
jmp
dec
xor
movsl
stc
mov
pop
adc
pop
adc
imul
pop
push
add
mov
fbld
mov
cli
mov
das
ret
sbb
lock
mov
adc
pop
mov
in
repnz
mov
dec
push
ret
ret
xor
jae
ds
push
lret
bound
and
cs
jns
mov
and
test
cld
into
lret
mov
leave
es
or
lcall
shll
jg
movsl
jmp
jecxz
mov
lret
repnz
cmpb
movsl
pop
xchg
push
movsb
mov
push
mov
outsb
add
mov
pop
in
mov
lea
xor
icebp
das
repz
in
jae
sbb
ret
sahf
aam
jae
sbb
xlat
fwait
rorb
mov
dec
pop
jmp
sbb
clc
mov
jle
jnp
add
lret
jmp
or
pushf
cwtl
repz
stos
mov
lock
fucomip
into
leave
mov
mov
imul
pop
nop
ljmp
mov
adc
cmp
xchg
shl
xchg
push
sbb
or
jmp
stos
xor
ljmp
inc
sbb
lcall
jae
xchg
int
repz
aam
pop
js
cmp
ja
lcall
and
out
xorb
xor
push
cwtl
xor
jne
mov
aaa
lock
or
inc
jmp
dec
push
pop
and
pop
sbbb
fdivrs
pop
mov
cmc
and
push
mul
out
jl
and
sbb
mov
loope
das
xlat
sub
call
imul
loope
dec
push
xchg
int3
mov
adc
xchg
pop
test
scas
sub
loop
lds
jb
and
scas
or
loop
ja
xchg
jb
in
add
pushf
fisubs
stos
add
pop
inc
sti
mov
in
das
and
sti
or
loope
push
push
push
mov
push
push
xchg
adc
rcr
mov
test
cmpsb
mov
lret
xchg
xchg
or
mov
mov
and
hlt
repnz
jae
xchg
in
lea
lret
into
pop
pop
jp
mov
scas
mov
stos
xor
ret
push
jb
adc
cmc
les
out
sub
add
fadds
pop
push
out
mov
xchg
xchg
cmp
adc
ja
test
push
jmp
cld
cmpsl
sbb
insl
call
and
fdivs
cmpsl
mov
dec
and
aaa
or
mov
lcall
sub
rcrl
fcoms
mov
dec
fistpl
aam
syscall
outsb
mov
jb
mov
stc
shrl
push
cmp
inc
or
testl
mov
std
scas
ret
inc
and
dec
inc
popa
das
xchg
cmp
cmp
pop
jo
loopne
imul
xor
shll
ficompl
inc
pop
adcl
in
mov
mov
sbb
pop
sbb
inc
sub
lods
inc
in
ficomps
inc
sub
aam
mov
mull
es
sti
xchg
in
mov
nop
sbb
adc
pushl
jne
jo
xchg
inc
dec
nop
pop
sahf
mov
movb
icebp
push
pop
loopne
lods
enter
xor
cli
lcall
jne
jle
roll
cmpsb
mov
ljmp
mov
out
mov
shl
xor
dec
and
or
cmpsl
sub
jecxz
mov
inc
push
pop
pop
dec
cmp
bound
dec
punpckldq
add
sti
inc
loopw,pt
stc
scas
xchg
and
push
sub
push
mov
jae
sub
es
imul
jp
jnp
or
test
jae
add
testb
addr16
jae
test
pop
and
push
inc
sub
or
jno
mov
adcb
push
mov
fstl
add
push
jecxz
cmp
in
push
jbe
jmp
pop
or
aad
jp
pop
notb
cmpsl
mov
fsubs
imull
test
xchg
jae
adc
jmp
add
pop
push
cli
test
lods
mov
dec
popa
jbe
mov
sbb
ds
lods
sub
pop
mov
cwtl
dec
mov
out
int3
nop
add
add
jp
pop
ret
adc
pop
xor
loope
xor
inc
lea
imul
sti
and
aaa
mov
mov
push
pop
jbe
and
out
xchg
xor
adc
pushl
adc
addr16
sarl
jbe
stos
inc
sbb
andb
cvtdq2ps
pop
das
push
int
sqrtps
mov
aam
ret
mov
mov
cmp
xlat
das
into
test
mov
test
mov
mov
fsubr
xchg
mov
fildll
cwtl
pcmpeqb
popa
in
add
sub
dec
cmp
mov
stc
mov
xchg
orb
jae
shl
push
dec
out
aaa
pop
inc
inc
cwtl
imul
xor
insb
in
scas
jo
arpl
mov
sbb
icebp
test
mov
fsubrl
jge
in
adc
mov
cld
mov
add
popa
ljmp
xor
fidivrl
mov
push
dec
je
mov
xor
pop
mov
sub
and
test
loopne
inc
ret
jmp
xchg
dec
lcall
roll
xchg
repnz
xor
xor
inc
dec
inc
rol
xchg
jg
sbb
orb
and
mul
aaa
cmp
pop
push
les
cltd
mov
dec
aad
insb
adc
lahf
cmpsb
cmpsl
dec
mov
movsb
inc
iret
shlb
es
mov
rclb
lods
std
movsb
out
ficompl
cmp
das
sub
jmp
scas
dec
out
mov
push
jecxz
inc
stos
call
leave
xorb
out
dec
out
cmc
mov
push
adc
rol
pop
and
jg
xor
push
cwtl
or
mov
out
loope
icebp
scas
orb
stos
ret
cmpsb
iret
icebp
loopne
pop
cmpl
test
imul
push
mov
imul
pushf
adc
lea
aad
xor
movsl
jg
mov
push
rorb
xchg
test
stos
pop
mov
fmul
sti
cmp
js
scas
imul
lcall
pusha
pop
jle
or
mov
add
mov
jb
cs
mov
inc
xor
cmc
out
addr16
stos
xchg
sub
adc
push
jbe
mov
das
sbb
jo
xchg
mov
pop
add
pop
inc
inc
pushf
movsb
jge
cmpsb
out
rcrl
lcall
sub
roll
xor
push
lahf
es
ja
dec
dec
xchg
add
adc
loope
and
fstps
xchg
push
pop
cld
mov
push
mov
cld
bound
jne
out
outsl
sub
imul
and
sbb
and
push
sub
test
cmp
sbb
xchg
insl
mov
xorl
movsb
sbb
mov
leave
jb
adc
repz
pop
push
icebp
outsb
cmp
pop
enter
out
ljmp
mov
mov
out
fwait
jge
lds
inc
sahf
lgs
lret
mov
xor
jl
setnp
shll
mov
pop
pop
movsb
fcmovbe
mov
movsl
ja
push
je
jmp
test
xor
je
mov
int3
cmc
imul
mov
stc
fldenv
mov
cmc
orl
pop
hlt
ja
lock
js
das
movsb
sbb
int
loope
mov
jp
sbb
fnsave
outsb
repz
pop
and
test
push
and
int
jp
push
lods
sub
mov
pushf
cmp
mov
mov
addr16
push
je
fstpt
out
test
aam
loop
and
dec
pop
repz
ficoms
inc
lahf
pop
cmp
sbb
cwtl
jns
pop
mov
and
adc
push
add
hlt
pop
xor
mov
inc
add
out
dec
pop
dec
out
push
es
xchg
add
out
dec
insl
lds
add
xchg
into
push
or
cmc
jecxz
incb
addl
inc
pop
loope
xchg
daa
xor
movsb
out
dec
pop
dec
mov
sub
and
popl
sub
into
fdivs
popf
cli
pushl
addr16
add
scas
xor
sbb
lret
push
cmp
mov
inc
mov
fdivrs
and
lahf
adc
stos
daa
gs
in
addr16
mov
mov
gs
pop
and
push
mov
fwait
push
push
mov
cwtl
push
mov
std
cmp
cmp
pop
fsubl
adc
daa
in
loop
sti
les
inc
das
gs
in
mov
jb
mov
mov
aam
dec
push
sti
cs
fdivs
adc
sbb
jle
pop
scas
stos
inc
movsb
dec
xchg
fs
jae
push
mov
push
jnp
mov
and
fstpl
in
fisttps
dec
ret
shrb
fwait
ss
shl
daa
pop
jno
test
cmpl
pop
stos
lea
mov
dec
dec
je
push
ja
pop
lods
and
mov
ljmp
xchg
xchg
or
rcll
add
outsb
bound
lea
inc
negb
inc
pop
jl
mov
loope
sbb
nop
orps
jg
cli
adc
pop
push
idivl
mov
lods
mov
arpl
insb
inc
xchg
mov
inc
outsb
dec
ljmp
jmp
rorl
push
cltd
mov
mov
lret
subl
jns
lret
test
sub
mov
movb
pushf
cmp
jo
xchg
fcoms
inc
mov
sbb
inc
outsb
adcb
cltd
out
mov
xchg
aad
sub
push
in
push
inc
mov
dec
daa
adc
inc
stc
test
xor
push
les
adcb
imul
stc
stos
sub
mov
pop
loope
cmp
fnstcw
xor
idivb
stc
cmpsb
xchg
in
push
dec
inc
push
inc
jmp
mov
mov
mov
mulb
or
out
enter
mov
push
rcrb
jne
push
ds
lea
jne
pop
jp
add
xchg
jns
jmp
test
push
mov
scas
adc
rcr
inc
mov
popf
lods
push
or
lds
jo
sub
adc
push
or
out
mov
sahf
fcomps
ja
out
int
lds
test
mov
push
fstpt
lret
xchg
in
xchg
out
cmp
mov
repnz
in
inc
into
jb
adc
inc
push
add
mov
and
test
ret
pop
sbb
adc
xchg
call
add
call
adc
xchg
andl
push
fmuls
pop
mov
or
jecxz
es
mov
cmp
jmp
stos
pop
aas
fcompl
sbb
push
xchg
cmp
in
adc
push
sbb
ret
inc
cli
outsb
mov
clc
aam
test
and
ret
adc
lret
icebp
cmpsb
mov
xchg
mov
push
xchg
movsl
inc
and
pushf
mov
mov
je
rcr
pop
int3
dec
ret
lcall
int
xchg
mov
inc
push
push
cmp
sbb
popf
jb
add
rolb
lret
mov
in
adc
insb
cmpsb
fwait
repnz
or
mov
ss
leave
fwait
mov
cmp
ror
or
js
fnstenv
xor
pop
mov
mov
mov
jge
das
pop
lret
fiadds
jne
fidivrs
inc
mov
shrb
dec
and
mov
cmpl
pop
inc
mov
pop
adc
sahf
jg
fimull
stos
xlat
push
push
mov
xchg
int
sub
xor
std
std
cmp
in
in
arpl
ficoml
hlt
aad
pop
bnd
lret
cmp
fimuls
jnp
jb
sbbb
addr16
add
xchg
incb
mov
pop
ret
das
or
jne
cmp
xchg
pop
out
cmp
andb
mov
adc
jne
xchg
notl
add
out
dec
lods
dec
pop
es
xchg
gs
mov
dec
insl
out
bound
stc
pop
popf
lock
cmp
daa
push
jle
and
jl
inc
dec
shlb
push
or
xchg
js
movsb
mov
push
cli
arpl
aam
mov
fstl
and
jge
xor
pop
inc
outsb
and
cld
adc
adc
inc
gs
stc
and
decb
adc
daa
fistpll
and
or
jno
mov
sbbl
ja
jecxz
xchg
cwtl
mov
cmp
and
in
repnz
ret
shll
pop
out
add
adc
stos
xor
cltd
mov
and
mov
hlt
rclb
test
mov
pusha
push
loopne
fwait
xor
push
sar
fldcw
subl
cmp
push
aas
inc
icebp
cld
mov
adc
lods
inc
popa
enter
jmp
jo
xchg
out
jg
int3
shr
test
cmp
jae
lds
add
fstl
aad
les
adc
inc
loop
outsl
push
in
cs
sbb
mov
into
pushl
mov
push
jo
std
adc
cltd
shl
cmp
in
inc
aaa
and
add
xchg
leave
sarb
sub
adc
in
xlat
pop
add
xor
ss
test
mov
jmp
addr16
pop
pushf
je
push
xchg
lea
arpl
xor
sub
fisubs
or
loop
push
and
lds
jbe
jg
ret
xchg
ret
das
mov
cmp
jbe
in
movsl
sbb
bound
xchg
icebp
sbb
add
icebp
xor
mov
mov
jo
jmp
fildl
mov
mov
daa
or
inc
push
jb
push
add
push
sub
and
jmp
sbb
mov
subb
dec
jnp
lcall
in
mov
push
orl
push
push
loope
popf
dec
icebp
aad
push
mov
lods
jg
outsl
fnstcw
ja
in
clc
repz
mov
jae
loop
movsb
in
mov
push
dec
mov
mov
nop
std
mov
add
mov
je
outsl
push
cmp
and
scas
push
pop
xchg
imul
push
les
lret
in
mov
movsb
dec
mov
in
sub
push
dec
fdivrs
or
sahf
sbb
jl
lcall
mov
shl
pusha
pop
jle
lahf
fistl
adc
jl
mov
fistpll
xor
fdecstp
ss
push
mov
jecxz
adc
xorl
pop
adc
pop
iret
dec
scas
push
push
mov
push
mov
mov
push
orl
pop
or
daa
dec
jne
adc
mov
movl
scas
sti
in
mov
pop
outsb
insb
scas
pop
outsl
cmpsl
popa
cltd
loopne
divb
shll
divl
imul
fcmovnu
shr
sbb
adc
mov
notb
in
or
xor
adc
or
iret
nop
mov
je
jno
dec
mov
clc
les
jo
stos
int
das
adc
mov
inc
push
addr16
jne
clc
lahf
jg
mov
jb
hlt
stos
inc
leave
add
icebp
and
cmp
mov
xchg
pop
testb
js
cld
and
inc
mov
lods
lcall
jnp
xor
dec
cmc
jmp
pop
mov
cltd
ret
roll
xor
cmp
adc
sub
adc
js
jb
or
lret
mov
adc
test
or
xor
jp
xchg
repz
pop
ret
fsubs
test
xchg
add
loop
stos
in
mov
fiadds
out
jp
mov
sbb
rclb
adc
xchg
outsl
sub
or
scas
scas
addb
dec
test
dec
inc
mov
adc
mov
repnz
mov
sub
jno
in
imul
mov
xchg
cmpsb
in
inc
mov
mov
push
sbb
mov
mov
fs
jns
sub
outsb
adc
sahf
cmp
jns
adc
and
fs
inc
je
sahf
fwait
cwtl
mov
jge
lret
repnz
fcomp
mov
mov
std
or
add
loopne
pop
and
cmc
movsl
jg
shlb
cmpsl
xor
or
or
push
cltd
movsl
stos
dec
sub
sbb
mov
jge
cmc
inc
sti
cwtl
lahf
rclb
inc
data16
jnp
loop
insb
xchg
fwait
and
dec
repnz
jbe
add
and
or
outsl
dec
je
repz
imul
push
sahf
jl
cmpsl
sbb
xacquire
fisttpll
xchg
push
add
push
and
push
mov
popf
pop
add
rcrl
cmp
pop
push
int
shlb
push
jo
mov
test
sub
jno
push
hlt
adc
lea
mov
sbb
mov
lods
lods
out
push
js
fs
int
cltd
fisubrs
ret
test
push
jmp
xchg
push
adc
sub
xchg
push
xor
mov
fstps
movsl
jle
shrl
cmc
sbb
outsb
stos
sub
into
add
out
mov
cwtl
sub
jne
lods
pop
outsl
rcrb
mov
std
dec
mov
into
add
sahf
pushf
pop
cmp
mov
pop
dec
mov
stos
push
cmp
sbb
sub
stos
mov
lods
dec
loopne
push
jle
insl
ret
mov
lea
nop
lds
inc
cmc
sub
out
dec
cmp
jno
xor
sbb
or
je
xor
ret
popf
lcall
fcomps
push
out
mov
dec
stos
adc
je
jb
dec
test
shl
xchg
roll
sti
push
jecxz
adc
lahf
adc
jp
repz
cltd
fs
clc
mov
adc
xchg
gs
cwtl
hlt
adc
add
iret
js
addr16
cwtl
cld
mov
push
rcrb
xchg
test
ljmp
jle
xchg
or
scas
lock
scas
cmp
push
popl
push
imul
cmp
ss
mov
aam
add
sahf
xor
lods
daa
out
rcrl
adc
sub
inc
out
sbbl
mov
stos
shrb
sbb
add
lock
mov
pop
mov
dec
sbb
push
stc
int3
sbb
mov
pop
shr
test
adc
leave
push
inc
add
ss
fistl
cmp
out
cmpsb
xchg
inc
jae
sbb
sbb
test
into
xchg
fisttpl
jl
mov
sti
lret
and
mov
mov
add
mov
xlat
xor
sbb
test
push
rorl
sahf
insb
mov
outsl
movsb
or
insl
out
out
idivb
and
inc
bound
sub
cmp
movsb
mov
sub
sar
test
push
mov
pushf
aas
xchg
outsb
sbb
arpl
into
ss
loop
out
lret
jle
mov
inc
outsl
mov
xchg
mov
imul
fisttps
divl
jnp
daa
mov
pop
ss
mov
loope
in
mov
sahf
mov
rcr
inc
push
lods
push
lock
or
mov
mov
mov
insl
repnz
leave
shlb
add
ljmp
or
inc
test
movsb
dec
jne
popf
pushf
xor
adc
leave
and
xchg
xchg
arpl
je
xor
cli
stc
jp
xchg
fwait
pop
cmp
fimull
adc
fwait
popa
shlb
xchg
xchg
adc
mov
test
cs
xorb
xchg
scas
xchg
nop
mov
jne
mov
loopne
push
cmp
call
repz
add
sub
out
fcomi
dec
fnstsw
pop
shlb
in
fdivl
and
mov
push
popf
sub
cmp
inc
jg
rcrb
push
dec
jno
fcomps
lock
xorb
ss
clc
pop
ja
jmp
loopne
popf
pop
out
ret
push
pop
pusha
mov
mov
mov
sub
js
ljmp
lea
fwait
icebp
inc
push
daa
mov
test
inc
inc
inc
leave
cmc
arpl
cmpsb
popf
loope
cmp
mov
out
int3
imul
ret
call
out
xchg
out
iret
aam
test
xchg
in
leave
inc
cwtl
stc
mov
and
into
in
addr16
bound
test
mov
jns
push
and
cltd
and
pop
in
dec
mov
roll
add
movsl
call
jg
sbbl
and
inc
notl
xor
into
cs
mov
cld
insb
adc
jp
arpl
mov
mov
shll
xchg
iret
mov
punpcklbw
push
aam
jg
dec
mov
xchg
xor
clc
pop
mov
xchg
stos
imul
lock
sbb
mov
adc
dec
mov
adcb
pop
cmpsl
jae
mov
push
pop
jmp
dec
fcoms
fcoml
jmp
add
sbb
std
std
inc
and
cmp
nop
xor
add
mov
cmp
ret
sti
xchg
cli
mov
xchg
popa
add
cmp
cmpsl
sub
cmp
cmpsl
pop
jle
pop
test
ret
mov
jo
je
ja
adc
xor
icebp
inc
sbb
stc
pop
cs
mov
pop
xor
jle
or
add
xchg
jo
fwait
and
and
push
jmp
shll
jne
repz
leave
lret
aaa
or
push
xor
pop
dec
call
cmc
lret
iret
mov
jno
inc
mov
sub
das
ds
ficoml
mov
or
sub
or
push
xchg
inc
call
or
pushf
xor
and
mov
rcr
lods
repnz
adc
sbb
and
lret
mov
push
adc
xor
hlt
pop
xor
and
mov
out
insb
es
mov
rclb
scas
enter
dec
and
dec
out
ja
mov
shl
sarb
pusha
shll
jns
xor
fisttpl
ljmp
cmp
jp
push
xor
jmp
movsb
inc
aad
clc
sbb
cmpsl
push
and
pusha
add
and
in
jecxz
int
mov
aad
inc
popf
aas
and
fdivrl
addr16
or
add
in
and
jb
repnz
sti
add
sbbb
enter
sub
xchg
pop
or
pop
mov
dec
and
push
mov
pushf
mov
mov
adc
sbb
imul
sub
repnz
mov
mov
rcr
enter
push
std
add
inc
jb
pop
push
mov
xor
mov
mov
jg
jns
hlt
mov
fwait
mov
lret
dec
add
sub
in
lds
dec
int3
adc
sub
gs
push
mov
fidivrs
and
add
ret
loope
repz
andb
adc
xor
jecxz
les
xor
inc
push
ffree
or
rcrl
pop
neg
inc
divb
mov
mov
xchg
out
pop
pop
sbb
adc
push
repnz
mov
out
pusha
pop
pop
sbb
mov
stos
dec
jp
xor
push
jbe
incb
xchg
in
add
cmp
sub
mov
push
mov
sbb
mov
and
cmc
pusha
fwait
adc
push
cli
pop
sbb
inc
movsb
cltd
jo
adcb
hlt
scas
push
xchg
das
mov
mov
movq
inc
rol
jo
or
add
mov
fcomip
inc
hlt
scas
or
mov
inc
adc
testb
cmp
in
xlat
lret
out
es
xchg
mov
sub
push
dec
xchg
in
jp
std
xchg
push
dec
insl
mov
dec
mov
pop
testl
scas
cmpsb
cmp
sti
flds
loopne
outsl
cmpsl
mov
cmpsb
les
xchg
add
jl
dec
pop
int
or
mov
sbb
sbb
push
jg
mov
adc
loope
pop
leave
dec
xchg
sub
and
insl
fwait
cmp
xor
test
sbb
cmp
movsl
and
in
cld
lcall
cwtl
dec
insl
into
pop
pop
mov
fsubp
pop
add
lret
inc
lods
cs
pop
popf
imul
push
mov
mov
mov
lods
les
xlat
imul
push
mov
cli
and
repz
jg
mov
mov
jae
loope
arpl
dec
cli
jnp
cmp
mov
out
pop
out
or
cmpsb
fmuls
xchg
rorb
cmc
xlat
xchg
xchg
ljmp
push
push
out
outsb
xchg
mov
sbb
stos
cmpsl
cli
jb
mov
inc
out
add
dec
mov
jg
inc
push
out
cmp
push
outsl
xchg
mov
sub
mov
mov
push
lods
jge
cmpsl
int
pop
add
sar
inc
fnstcw
fidivrl
js
sub
jnp
push
and
xlat
test
mov
js
push
leave
jno
jno,pt
mov
push
push
repnz
fs
fs
mov
ret
leave
mov
mov
movsl
xchg
xchg
call
clc
sbb
push
push
or
push
or
ss
fnsave
repz
xor
mov
rorb
cli
pop
mov
fists
push
inc
jle
xchg
inc
dec
mov
aaa
aaa
mov
cmpsl
pop
lret
negl
xchg
ljmp
fsts
insl
cltd
sub
dec
xor
jnp
xchg
lea
xchg
ds
or
fstps
lret
daa
rolb
xchg
push
pop
movsl
std
pop
cmp
xor
dec
ds
ret
into
or
dec
pusha
sar
int
inc
imul
in
leave
mov
or
repnz
sbb
inc
into
lods
into
jg
repnz
mov
mov
or
mov
loop
mov
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
fdivs
pushf
or
xor
shl
leave
test
cmp
inc
jge
push
icebp
int3
pop
clc
jecxz
lahf
aam
xchg
ss
loop
xchg
dec
enter
adc
mov
push
lcall
xchg
sahf
out
push
mov
xchg
sbb
xor
mov
test
test
movsl
mov
mov
mov
in
pop
jno
or
xor
outsb
js
imul
sub
cmpsl
mov
lods
lret
mov
add
scas
lds
lahf
mov
je
ss
jns
outsl
sti
lret
es
outsl
adc
dec
lahf
out
int
sub
and
cmc
mov
repz
fwait
addl
mov
add
cmovb
jmp
inc
dec
pop
lahf
into
sbb
pop
leave
mov
add
jge,pt
mov
sub
cld
sbb
add
out
and
insb
inc
cld
mov
test
loop
sbb
hlt
and
movb
push
xor
cmp
sarl
es
bound
pop
jp
jbe
mov
pop
push
scas
cld
loop
daa
repz
jnp
inc
add
push
cmp
mov
insl
jae
adc
aam
adc
cs
sbb
xor
adc
es
xchg
into
jecxz
jl
xlat
jbe
dec
enter
mov
cmp
mov
mov
mov
inc
sub
aas
sbb
es
xchg
sbb
mov
bound
xor
add
test
or
hlt
cmp
stc
sub
xchg
stc
pop
sbb
xor
mov
rcrl
dec
add
cwtl
lods
jecxz
cs
or
aam
pop
lock
arpl
ss
stos
sarb
inc
test
xor
clc
shrb
lods
lcall
cmp
adc
loope
and
inc
mov
insb
lret
pop
sarb
aaa
xlat
fidivrs
push
inc
mov
add
and
insb
mov
jae
xchg
jle
in
cmpsb
jecxz
dec
xor
pop
ja
stos
inc
mov
into
ss
inc
mov
cmp
ds
push
or
add
pop
mov
pop
scas
lret
pop
in
stos
in
andb
xor
addr16
xchg
pop
aas
lret
xchg
dec
out
add
lds
adc
shr
lret
mov
cmp
dec
xchg
int3
test
sbb
fmuls
int3
jp
and
push
repnz
aas
repz
popa
flds
xor
push
cmp
lret
sbb
jnp
dec
dec
adc
jg
sbb
cmp
xor
shlb
lock
scas
sub
xor
xchg
in
lahf
push
xchg
andl
jg
jnp
jno
dec
das
add
mov
push
inc
mov
imul
aam
push
push
push
dec
shrb
lahf
mov
js
mov
mov
pop
lock
repz
stos
shrb
jne
xor
jg
xchg
mov
mov
lcall
into
shr
push
or
repz
dec
test
or
add
ret
sbb
push
out
hlt
movsb
cmp
jmp
bound
mov
ja
in
test
fidivrl
pop
fcmove
pop
xchg
mov
mov
mov
imul
cmc
jno
cmp
inc
mov
movsl
xor
shl
mov
add
push
leave
out
dec
mov
sbb
jae
pop
test
lcall
xlat
or
fnstcw
subb
push
roll
mov
movsl
adc
cltd
stos
fsubrs
stc
mov
mov
xor
inc
insb
arpl
add
push
or
daa
aaa
add
clc
add
repnz
loope
sub
and
jne
or
and
push
lea
fldt
insl
pop
mov
sub
sub
xchg
push
pop
scas
xchg
push
jmp
ss
dec
inc
aam
xchg
pop
enter
test
inc
mov
jle
fcoms
fisubl
mov
notl
das
inc
ss
js
add
std
jae
dec
mov
addb
sti
cs
or
jb
insb
mov
push
xorb
cmpb
ret
xchg
pop
outsl
add
mov
lret
pop
jecxz
cli
adc
cmp
lret
cmpsl
js
mov
ljmp
test
scas
pop
leave
mov
pop
add
jp
mov
pop
adc
fisttpl
mov
ficoms
jbe
xor
pusha
mov
fisttpl
mov
push
inc
mov
adc
cmpl
add
pop
stc
pop
push
jp
fwait
mov
pop
mov
mov
inc
shlb
out
lds
es
inc
jecxz
cli
data16
xchg
dec
and
das
sbb
mov
sbb
movsl
xor
or
pop
subl
sub
imul
sar
cmpsl
mov
popf
ret
rcrb
pusha
mov
ret
adc
insb
stc
xchg
xchg
cs
shl
jl
fadd
pop
jge
mov
cmp
xlat
or
daa
or
jmp
cltd
jns
mov
mov
out
xchg
jb
loopne
dec
out
cld
sbb
mov
pop
fnstsw
push
sbb
ret
bound
mov
xchg
adc
test
push
jns
nop
lea
cmp
bound
and
or
sub
and
adcb
shll
push
xchg
mov
xor
mov
popa
iret
movb
push
lds
ror
adc
push
popf
xchg
pop
xchg
mov
adc
and
sub
inc
int
cltd
cmp
sub
adc
aas
xor
add
push
or
dec
cmp
pushf
add
out
fwait
pop
lds
xor
mov
lods
scas
mov
push
shrb
loop
xor
int3
jecxz,pt
push
xchg
xlat
cli
jg
mov
cli
sbb
xchg
repz
inc
testl
cmp
jecxz
sahf
push
mov
jp
cmpsb
jae
and
jle
mov
push
jb
mov
icebp
mov
xor
cmp
xor
add
sbb
cmp
bound
jl
jle
test
fs
mov
js
push
and
icebp
sbb
pusha
push
push
fistpl
out
push
out
addr16
push
jmp
iret
add
sbb
fstpl
jae
sub
add
popf
lock
arpl
xchg
push
mov
lcall
movd
dec
mov
icebp
mov
mov
mov
movaps
iret
data16
test
out
pop
fs
sarl
mov
aad
push
mov
mov
xchg
or
add
xchg
subl
insl
outsl
mov
ja
mov
pop
sbb
jge
ss
pop
shrl
test
call
arpl
mov
jmp
mov
mov
loope
aas
pop
dec
push
push
ss
xchg
push
and
dec
xchg
jle
mov
push
or
cmp
imul
inc
mov
cmp
or
add
xor
enter
mov
add
mov
imul
or
mov
loop
cmp
sbb
cld
das
pop
rcrl
mov
cmpsl
push
frstor
in
pop
push
and
lret
add
jmp
cmp
inc
cmp
sub
cmp
aad
sub
mov
lds
xchg
dec
sub
mov
scas
xorl
sar
sahf
pop
imul
adc
cld
test
rol
rorl
lcall
pop
or
arpl
js
push
outsl
jmp
fistl
lds
xorb
xor
fnstcw
loop
sub
pop
fdivr
add
loop
mov
js
dec
push
jae
mov
mov
incl
rcrb
aaa
into
xor
jbe
addr16
mov
pop
jmp
into
fidivrl
add
pusha
and
inc
les
bound
xor
ja
push
pusha
jbe
dec
arpl
fisttpll
insl
pop
add
orps
ffree
cmp
in
push
ja
rclb
sbb
ss
xchg
sbb
jmp
aam
cltd
jmp
cmpsl
fs
int
dec
sahf
pop
xchg
test
cli
mov
dec
and
in
push
push
mov
add
test
jno
dec
jge
add
adc
testl
pop
and
lds
cli
fcompl
mov
arpl
or
test
xor
jp
out
pop
jmp
jnp
mov
shrb
jne
sahf
xchg
and
rolb
call
ss
inc
out
mov
dec
mov
mul
mov
outsb
xor
cmpb
cmp
sub
test
fldln2
test
out
mov
xor
adcb
mov
popf
pop
push
test
shlb
sub
data16
push
mov
fistpll
ja
int
inc
dec
into
cli
inc
test
inc
xor
cmp
rorb
mov
and
push
mov
and
jl
xlat
test
jmp
sti
mov
lret
push
ret
mov
iret
movsb
lret
cmp
je
lds
pop
xor
clc
outsl
insb
mov
sbb
mov
std
cltd
pop
sahf
inc
mov
jae
pop
xor
shl
inc
cld
adc
sbb
nop
icebp
and
rcll
mov
out
into
les
sbb
dec
loopne
mov
ds
sar
ss
lahf
je
and
and
mov
out
sti
sub
ficompl
push
in
cmp
mov
out
gs
push
daa
bound
pop
jecxz
add
inc
or
test
mov
mov
xor
and
pop
mov
xor
in
fstps
scas
sbb
and
mov
pop
aad
inc
push
mov
pusha
xchg
fstpl
out
rorl
dec
popa
or
inc
mov
mov
add
mov
repnz
pop
xlat
add
jg
movsl
push
movsb
jp
inc
pop
test
js
shl
jae
in
jns
call
decb
outsl
imul
add
popa
mov
xchg
xchg
push
fs
test
cld
xchg
dec
loopne
push
fcoms
sarl
fcmovbe
mov
or
lret
pop
cmpl
sub
xchg
lahf
aad
ja
icebp
adc
cmp
mov
jp
js
sbb
sub
mov
push
int3
out
inc
push
push
mov
clc
stos
mov
js
data16
loopne
xchg
pusha
dec
add
call
pop
ds
out
add
push
out
popf
inc
mov
adc
lds
fidivs
aad
pop
rolb
lret
std
jp
jmp
aaa
cwtl
mov
mov
push
int3
arpl
out
xorl
sub
jg
inc
or
or
and
aam
mov
stc
clc
mov
add
mov
addr16
icebp
adc
dec
or
pop
ds
add
push
ficoml
inc
testl
fisttps
adcb
xor
cmp
mov
dec
movsb
push
pop
lret
lock
lcall
xchg
adc
inc
xchg
cmpsl
adc
mov
rcll
dec
push
neg
rclb
ficoms
int3
push
pushf
outsl
sub
mov
or
pop
inc
add
and
testl
mov
inc
cmp
daa
std
inc
inc
and
popf
dec
sbb
stc
adc
mov
pop
mov
dec
repnz
and
or
push
mov
stos
pop
dec
js
add
popa
call
adc
loop
cld
pop
and
cld
xorl
dec
cmpb
cmp
jbe
adc
imul
sbb
mull
pop
and
in
jge
sahf
fdivs
inc
push
mov
inc
shll
sahf
fists
push
popa
int
inc
mov
mov
mov
xor
sbb
add
mov
js
iret
pop
lcall
roll
and
adc
xor
ret
and
je
sahf
iret
adc
int3
sub
sbb
out
jp
or
adc
in
mov
mov
ret
and
inc
ja
inc
es
push
fsubrs
inc
add
dec
push
faddl
mov
or
stc
add
movsb
rol
incb
ja
pusha
loope
pop
test
test
mov
mov
insl
adc
test
sbbl
jg
xchg
fsubrl
jecxz
jl
sahf
jbe
lods
push
inc
sbb
fidivs
ja
push
adc
push
addb
jbe
ljmp
pushf
xor
jg
and
inc
sub
lods
and
neg
sbb
jge
mov
cmp
call
xchg
or
rcll
cmp
lds
stos
rolb
mov
xorb
outsb
cmp
aas
loope
and
adc
inc
dec
data16
mov
pop
fadds
rcl
and
repnz
out
pop
mov
int3
push
inc
xor
sbb
sbb
xor
mov
testl
push
into
xor
aad
popa
pusha
adc
ja
inc
insl
mov
lods
in
lret
mov
xchg
sub
lret
pop
cmpl
adc
mov
scas
das
popa
popa
xchg
xchg
or
call
xchg
lods
test
aas
and
ret
mov
and
mov
mov
xlat
test
xchg
push
adc
cmp
aad
int
pop
mov
cwtl
add
cmp
arpl
push
stos
mov
adc
fists
in
sbb
sub
inc
pop
mov
sub
iret
jbe
mov
dec
or
addr16
sahf
loope
or
push
dec
mov
fcomi
int
sahf
mov
arpl
test
cli
iret
pop
lcall
pop
and
jo
insb
shrl
push
jb
jecxz
mov
push
xor
test
inc
pushf
inc
std
mov
cmp
movsb
jb
aam
sahf
adc
lcall
arpl
mov
filds
aam
sbbl
add
imul
rorb
lret
rcl
mov
sbb
lahf
cmp
mov
insl
das
loopne
pop
mov
jg
push
das
dec
mov
cli
dec
sbb
push
xor
jp
bound
cltd
scas
js
add
sahf
outsl
clc
and
cmp
rcr
jg
fldz
fistpll
jns
mov
notl
push
and
dec
mov
cmc
xor
addr16
lods
lea
ss
mov
mov
mov
insb
jmp
call
cld
stos
sbb
xchg
xor
add
inc
loope
dec
or
scas
test
insb
ret
pop
aad
movsl
dec
jecxz
imul
push
mov
shlb
lea
dec
mov
mov
pop
and
les
fists
cli
sbb
pop
mov
push
std
inc
fcmovb
add
jnp
lcall
jne
jo
adc
mov
call
ljmp
lock
arpl
sti
nop
cltd
mov
mov
mov
js
and
jecxz
push
jmp
lea
inc
mov
pushf
fdivr
or
subl
loopne
aaa
into
xchg
iret
loopne
lods
stos
repnz
add
mov
and
mov
mov
lcall
or
lcall
addr16
pop
push
rep
pop
push
jnp
andl
mov
cmp
stos
aad
mov
adc
inc
sbb
mov
enter
loop
dec
inc
popl
dec
cmp
jg
push
adc
sahf
bound
loop
pop
jge
fisttpl
cmpsb
and
and
mov
lret
iret
xchg
repz
lock
mov
cmp
sub
mov
test
sub
cmp
loop
or
jle
ds
dec
inc
ficompl
jns,pt
pop
cmc
rorl
insl
xchg
inc
pop
xor
stos
aas
ja
out
in
pop
cmp
xchg
push
js
rcrb
mov
add
and
cld
aam
popa
xchg
loopne
xchg
call
int3
and
aaa
outsl
iret
and
cmp
in
push
pop
dec
ret
aad
and
xor
jb
pop
out
shl
shll
mov
push
mov
dec
push
adc
stos
das
jmp
out
je
jne
sbb
into
mov
imul
les
cli
jmp
push
xor
enter
scas
push
int3
popf
jno
ret
and
sahf
sbb
xor
or
sbb
icebp
inc
out
mov
and
test
cld
sahf
clc
jnp
ja
js
xor
subb
bound
dec
cli
xchg
sbbl
push
mov
inc
nop
push
sub
in
stc
sbb
jl
jle
jg
jnp
sbb
push
aad
fwait
xor
dec
sbb
sub
add
out
lock
adc
data16
mov
lahf
sahf
or
addr16
insb
sub
scas
push
call
dec
mov
lahf
nop
inc
repz
ja
jne
loopne
mov
lea
cli
xor
sub
xor
dec
mov
sub
test
aas
testb
jl
adc
repnz
jns
stos
sub
notb
xlat
data16
scas
jae
test
xchg
nop
sbb
mov
test
sbb
or
in
repnz
out
and
and
xchg
lds
pop
insl
cmp
pop
jae
lods
cmp
jns
hlt
ljmp
outsb
xlat
mov
xor
ja
or
mov
push
jbe
push
push
add
mov
cmp
sub
mov
add
jge
cld
dec
inc
add
push
inc
in
sub
out
loop
into
xchg
xchg
pop
push
sahf
in
jge
and
or
dec
and
aad
add
ljmp
dec
das
add
lahf
pushf
adc
sub
mov
mov
mov
jno
idivb
or
stos
fs
sbb
ret
jns
or
push
lods
lahf
dec
cli
xchg
xlat
mov
test
jns
out
das
jg
stos
or
jecxz
add
into
adc
cmp
jns
mov
mov
insl
cld
mov
sar
loope
mov
cltd
push
jb
adc
icebp
cli
ja
in
push
add
outsb
int
into
cmpsb
daa
xchg
xor
jbe
sub
enter
mov
mov
push
hlt
sbbl
push
inc
rorl
adc
mov
lret
add
test
push
and
xchg
xchg
inc
dec
inc
dec
or
cmp
sub
outsl
rolb
mov
in
movsl
ficoms
hlt
lea
das
scas
cmpsl
push
mov
js
fs
ja
ljmp
into
andb
sub
jg
mov
push
int
jp
or
sbb
stc
je
das
outsb
sub
mov
ljmp
out
arpl
sti
xchg
mov
xchg
xlat
sub
or
jp
popf
addr16
ret
aad
mov
flds
test
fimull
aas
test
inc
imul
push
ja
push
adcb
mov
cmc
mov
xchg
mov
fadds
in
push
push
icebp
out
sbb
psubq
repz
adc
fisubrl
jmp
jb
mov
mov
sub
xchg
popa
and
jmp
pop
scas
push
add
adc
leave
rcrb
and
inc
dec
cmp
mul
int3
les
adc
std
scas
dec
or
push
cmpsl
stos
popa
sbb
or
inc
pop
iret
lret
cltd
mov
inc
mov
lahf
pop
xlat
sbb
aas
jmp
inc
fisubrs
add
cmp
enter
cwtl
push
dec
pusha
mov
push
in
xchg
mov
es
ret
inc
test
cmpsl
jae
sbb
cmp
lahf
mov
mov
outsb
sti
aas
or
call
adc
push
andl
dec
sbb
and
mov
jmp
adc
xchg
cld
mov
mov
push
bound
cmp
sub
push
push
call
push
push
xchg
mov
loop
mov
ret
sbb
pushf
fistpl
in
pushf
cmp
stos
shrb
ret
out
sub
mov
das
fsubl
or
pop
sbbl
daa
jl
sysenter
inc
rorl
nop
push
dec
inc
mov
sub
sar
xchg
sub
inc
xchg
testb
pop
jno
mov
hlt
jno
insb
add
push
or
sbb
cmp
sub
xchg
xor
loope
jno
sbb
pop
andl
mov
xor
jmp
adc
mov
scas
mov
addr16
push
jno
xchg
or
ljmp
sbb
mov
inc
mov
inc
test
sub
cmp
add
repz
sub
push
mov
stos
pop
loope
xchg
insl
into
sbb
popa
sbb
lods
mov
in
sbb
sub
lock
and
arpl
addr16
pop
adc
pop
fadds
and
mov
notb
insb
xor
cmpsb
stos
jmp
jae
mov
aad
jecxz
iret
test
xlat
test
push
mov
xchg
add
inc
cmp
dec
xchg
orb
cmpsl
lods
lahf
sbb
xchg
add
lahf
imul
js
jmp
dec
lock
andl
in
inc
mov
mov
loope
xor
inc
or
les
xchg
das
dec
push
or
adc
fiaddl
cmpsl
sbb
jo
push
mov
jle
add
stos
gs
mov
lods
pop
mov
push
push
xchg
xor
out
fdivl
push
xor
fnstsw
sub
js
mov
out
and
jae
push
mov
icebp
xchg
lock
int3
and
inc
push
xor
cld
ja
lods
mov
sbb
mov
jb
inc
out
jb
dec
push
daa
mov
pop
fmuls
xchg
xor
mov
push
mov
inc
and
or
notl
mov
add
imul
push
stos
mov
pop
mov
lahf
les
stos
movhps
loope
mov
loopne
cwtl
and
sti
xor
test
push
push
ljmp
lcall
and
aad
je
pop
push
xchg
xlat
rcr
nop
fistpl
sub
mov
subl
hlt
fcoml
dec
dec
stos
adc
rcll
aam
sub
into
outsl
les
fisttpll
lds
fsts
pop
std
mov
add
or
lea
pushf
in
jne
fwait
out
test
in
mov
fsts
shr
repz
movsl
inc
iret
jg
ss
sub
outsl
mov
dec
inc
fldl
and
mov
jnp
mov
roll
sbb
mov
dec
test
shl
loopne
dec
pop
adc
add
cwtl
xchg
dec
and
mov
mov
pop
fiadds
sbb
negl
sbb
insl
adc
icebp
jmp
pop
pop
push
pusha
and
repz
dec
adc
repz
push
mov
dec
movsb
mov
adc
xor
add
cmp
xchg
jnp
lcall
or
mov
inc
daa
push
and
xchg
inc
xchg
xor
int3
xor
push
dec
mov
push
popf
adc
pop
add
push
lahf
and
lahf
mov
push
xchg
insl
hlt
fcmovnu
xchg
outsb
jo
shrl
call
cmc
movsl
pop
cmpsb
xor
cmc
hlt
andb
sbb
popa
lahf
cmpsb
xchg
mov
mov
and
adcl
testl
out
lret
clc
pushf
or
mov
loopne
ss
inc
int3
ja
fmulp
dec
sbb
inc
and
insl
mov
arpl
or
jg
stos
mov
into
loope
xor
scas
stos
push
arpl
movb
adc
mov
mov
js
pop
jp
rcrl
jl
pop
jns
lcall
jmp
mov
repnz
adc
cld
pop
adc
dec
push
testb
mov
jmp
dec
inc
xchg
mov
pop
inc
pop
movsl
cmp
dec
int
fimull
cmp
lods
cmp
jb
mov
jae
stos
bound
push
in
and
cmpsl
mov
movsl
add
in
inc
inc
jns
cmc
xor
xchg
sub
pop
mov
xchg
pop
out
jo
stos
xlat
nop
or
int3
mov
dec
fs
sbb
add
and
fnstcw
xor
dec
lret
lods
push
aaa
fildl
mov
stos
fsts
adc
insb
add
sub
add
fsubrs
xchg
cmp
inc
adc
mov
xor
pop
pop
push
sub
mov
inc
push
add
imul
or
sbb
in
or
and
push
mov
lcall
lcall
es
stc
jmp
sarl
cmp
jb
sub
pop
xor
inc
xor
scas
cmp
int3
mov
lret
xlat
cmp
xor
arpl
daa
mov
pop
rclb
add
rcrb
push
scas
fsubrl
xor
lret
inc
fstps
add
push
enter
or
cmp
enter
rcrl
xchg
pop
stos
mov
clc
sbb
cmpb
xchg
rorl
fs
xor
inc
mov
and
lea
or
fmuls
rclb
test
rcl
jns
scas
shll
xchg
dec
fcom
aas
cs
sti
inc
fdivrl
xchg
adc
push
mov
adc
hlt
or
and
les
or
movsb
popf
insl
jne
mov
sti
int3
push
sbbb
push
push
ja
test
ror
pop
cmp
mov
fldenv
and
mov
dec
lret
xor
and
sbb
loope
lret
rorb
sarb
dec
fdivrs
into
insb
or
daa
scas
dec
test
leave
adc
cmp
and
pop
and
lret
notb
es
sub
pusha
fs
test
aam
adc
pop
and
icebp
xor
faddl
sub
movsl
ss
movsb
push
adc
and
shl
data16
jmp
xchg
and
js
cmpsl
push
stos
mov
testb
push
addb
xor
xor
out
lret
fistpl
test
dec
mov
out
mov
adc
sbb
repnz
mov
lret
dec
pop
sub
jo
xchg
xchg
insb
insl
push
adc
pop
sub
adc
in
testb
jmp
adc
pushf
test
dec
inc
shrb
mov
cmpsb
push
cmp
push
mov
imul
andb
arpl
lea
arpl
pop
imul
mov
out
call
and
adc
jne
icebp
and
jmp
cmpb
div
xchg
scas
arpl
pop
mov
mov
inc
push
push
shll
orb
jmp
cmp
rolb
mov
jle
push
cmp
in
lea
int3
jmp
push
ds
mov
lret
xchg
mov
pop
ret
fucom
or
mov
and
mov
cmp
sbb
mov
lret
mov
sub
addr16
push
repnz
ret
push
ret
dec
xchg
in
cwtl
jg
mov
loop
xchg
cmp
mov
popf
lods
subb
rcrb
arpl
adc
push
scas
or
dec
leave
mov
cmc
loopne
cmp
stc
fadds
roll
pop
stc
jl
testl
mov
push
and
sub
in
jl
out
lret
mov
rorb
mov
cmpsl
cld
adc
mov
pop
mov
test
push
cmpb
fdivs
lret
jo
adc
pop
cmp
jne
push
xor
sub
jb
std
lock
push
addr16
rcrb
add
cmpsb
cltd
ja
scas
addb
lds
pop
lcall
adc
inc
mov
inc
les
and
sbb
cmp
xor
pop
xchg
xchg
in
ja
stos
and
andl
ss
scas
add
cmp
mov
daa
fidivl
subb
in
movl
xchg
out
in
sbb
std
test
push
dec
sbb
repz
test
mov
in
mov
leave
cmp
push
je
int
test
fistps
cltd
lret
into
lods
sbb
or
ljmp
cwtl
push
sub
lcall
inc
andl
xchg
xchg
rorb
mov
jg
adc
das
mov
add
inc
jns
jmp
test
lods
jo
jmp
jae
in
mov
mov
pop
jecxz
into
inc
hlt
sub
fs
mov
insb
mov
cmpb
xor
test
xor
fsts
shll
cld
sahf
push
fwait
add
rcrb
mov
pop
aam
mov
mov
adc
pop
sub
mov
fsts
aad
cmp
out
gs
fmull
push
cmp
xor
mov
test
dec
lds
dec
in
xorb
mov
bound
inc
or
push
bound
call
xchg
cltd
fisubs
fwait
sub
xor
bnd
dec
das
les
shlb
sub
clc
bound
out
and
out
fcmovnbe
cmp
inc
pop
push
popf
nop
mov
push
adc
lods
stos
iret
mov
jl
jae
decl
sub
int
repnz
adc
mov
lea
pusha
cltd
mov
mov
lcall
jo
ds
sbb
mov
mov
repnz
dec
and
jb
rorl
push
addb
xor
adc
fcmovne
movsl
mov
test
cmpsb
sub
pop
in
lcall
cld
fbstp
xor
sub
mov
jno
pushf
loope
out
mov
dec
imulb
xchg
inc
push
dec
sbb
mov
push
sbb
inc
add
mov
xchg
test
mov
lcall
push
mov
cmp
jb
cmp
outsb
mov
mov
ror
imul
stc
add
aas
add
inc
cmp
push
ret
jg
fs
arpl
add
sub
add
xchg
xchg
cmpsl
cmp
cmpsl
and
pop
out
pop
gs
push
ljmp
pusha
or
pop
sbb
shll
xchg
lods
lret
out
sub
loope
cmp
insb
cltd
or
pop
sar
xchg
cmc
jmp
jge
lcall
mov
sub
adc
iret
loopne
mov
and
pop
sbb
mov
dec
stc
fs
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
add
addl
arpl
sti
push
jb
cmp
jge
inc
leave
pop
adc
xor
jp
movsl
mov
out
cmp
inc
push
nop
mov
adc
loopne
decb
and
int3
test
add
pop
and
adc
into
mov
pushf
mov
lcall
add
dec
dec
jmp
dec
and
dec
push
outsl
pushf
push
lods
sub
icebp
xor
ficompl
jmp
sahf
sub
pop
out
in
mov
shll
adc
outsl
xchg
adc
iret
test
cmp
mov
mov
clc
adc
adc
cmp
jecxz
sub
stc
xchg
aaa
aad
mov
jne
mov
gs
loop
adc
cltd
loope
cmp
cwtl
mov
out
or
lret
push
int
sahf
pop
sub
in
int3
xlat
cmp
loope
xlat
arpl
adc
cltd
push
xorb
mov
sbb
dec
testb
cltd
cld
sub
mov
mov
dec
and
mov
cmc
push
jmp
jg
dec
hlt
mov
stos
imul
pop
or
addr16
loop
jp
ds
cmp
adc
add
sub
jno
inc
pusha
dec
xchg
hlt
daa
stos
mull
or
nop
cwtl
mov
js
shlb
push
and
mov
aaa
jecxz
aas
adc
mov
popa
mov
gs
mov
pusha
lods
mov
sti
hlt
fsubl
jmp
lcall
dec
jle
shll
aaa
adc
ret
stos
insb
test
int
div
inc
in
test
mov
fcom
pop
adc
call
mov
sbb
decb
mov
mov
dec
cltd
inc
adc
mov
xchg
adcb
in
imul
test
mov
test
push
call
loop
add
pop
push
xor
jecxz
addr16
scas
aad
es
test
xor
mov
fs
addr16
dec
mov
mov
mov
mov
lahf
sbb
sub
pop
cli
and
or
xchg
bound
sbb
and
arpl
pop
aaa
mov
ret
lock
repz
fidivrs
sbb
mov
cwtl
clc
or
loop
fdivrs
fwait
pusha
xchg
mov
bnd
in
popf
lds
inc
repz
push
push
push
sub
push
insb
xor
ret
repnz
addr16
cltd
je
dec
int
and
sub
cmp
xor
je
popf
inc
sub
pop
in
xlat
out
ds
cli
or
js
cmp
pop
push
sahf
repnz
inc
and
xor
xchg
mov
test
mov
inc
xchg
ljmp
sbb
pushw
fadd
xchg
dec
and
jns
jbe
and
sbb
jno
xchg
xchg
inc
pop
dec
das
mov
sbb
fwait
and
push
loopne
xchg
inc
fsubl
das
in
adc
pop
arpl
xchg
cwtl
into
call
rorb
inc
and
das
or
xchg
dec
push
sub
in
stos
fwait
loope
fwait
add
push
mov
cmp
insb
jo
int
sub
lods
pop
addr16
pop
lahf
movzwl
int
dec
mov
out
rclb
scas
cwtl
adc
xchg
jp
js
add
jecxz
int3
scas
mov
lret
xor
inc
ljmp
call
mov
lods
jb
mov
loope
and
add
push
js
shll
cmovb
out
sti
push
test
xchg
ja
stos
shl
in
loope
test
push
mov
cmpb
daa
and
mov
ja
mov
in
mov
jge
jmp
push
add
in
hlt
pop
xor
inc
in
jl
or
or
push
fsub
pop
and
dec
call
addr16
xchg
lds
sub
gs
iret
lds
mov
or
cmpsl
mov
push
fldenv
adc
xorl
jno
cmpsb
cmc
into
subb
push
push
test
sbb
sbb
sub
lret
pop
hlt
push
out
cld
pop
lds
sub
ret
cltd
lcall
in
pop
dec
pushf
push
dec
pop
loop
repnz
cwtl
lock
or
jge
enter
bound
dec
or
rorb
xchg
subl
cli
stos
call
filds
cs
cltd
shrl
loop
cltd
cmp
fcoml
xchg
ss
sub
pop
pusha
rcr
stc
aas
inc
add
mov
mov
aaa
cmp
arpl
fcmove
popf
out
aas
lods
add
inc
shr
pop
and
cmp
xor
dec
aam
aas
lcall
aaa
mov
test
repnz
and
mov
jl
or
add
hlt
mov
fmul
out
push
sub
pushf
cmp
cld
push
shll
pushf
push
cs
dec
jl
mov
lcall
lea
push
icebp
outsl
xor
fisttpl
pop
pusha
sbb
mov
outsl
jecxz
out
cltd
mov
test
inc
push
inc
sbb
je
arpl
iret
scas
inc
mov
or
idivb
loop
jbe
les
les
pusha
lahf
into
cmp
add
jle
push
dec
xor
cs
inc
test
shlb
das
adc
insl
mov
pusha
mov
jne
mov
adc
inc
push
pop
jmp
push
dec
xchg
sbb
pusha
in
jle
dec
adc
mov
roll
xchg
mov
inc
fwait
jne
mov
mov
pop
jno
repnz
xchg
imul
out
lret
popa
lea
xlat
dec
jmp
in
pushf
mov
mov
cs
pusha
cmp
arpl
xchg
mov
fs
push
cmc
push
dec
fildll
jbe
push
cwtl
cmp
enter
mov
push
add
pop
jnp
xor
jne
inc
cld
lock
jl
jg
mov
ret
cmp
sub
int
cmp
jbe
sbb
push
rol
pop
stos
pop
dec
pop
pushf
adc
adc
popa
dec
idivl
jl
insl
ljmp
sahf
jp
mov
ret
inc
or
sbb
mov
jne
test
stos
nop
enter
not
xchg
in
push
adc
movsl
pop
push
lahf
imul
sbb
ljmp
or
cmp
jecxz
cs
das
mov
cmp
mov
shll
xchg
jo
testb
jge
fsubl
push
dec
jge
stos
jbe
addr16
xchg
fisttpll
xor
dec
outsb
aam
sub
and
decl
xlat
stc
movsl
pop
pop
add
mov
pop
mov
cli
sbb
xor
rolb
imul
scas
add
fs
test
xlat
push
push
and
std
add
into
cli
or
or
add
test
and
sti
fcoml
fcomp
pushf
pushf
and
gs
jne
and
mov
pop
cmp
xor
pop
mov
rolb
lock
or
push
inc
jle
mov
out
inc
dec
es
adc
mov
mov
cltd
jno
lahf
mov
popf
add
cmc
jp
add
xor
adc
xchg
std
cmp
jp
pop
add
pop
outsb
les
pop
push
mov
push
xchg
inc
mov
sbb
cli
aaa
xchg
jae
fcmove
and
and
mov
add
dec
xchg
sbb
jnp
pushf
clc
shll
roll
sbb
inc
enter
jns
jno
mov
das
push
sbb
fstpl
mov
jge
sub
pusha
or
add
xor
lods
in
shl
mov
bound
pop
fwait
jo
loope
pop
iret
pop
xor
in
pop
daa
mov
xchg
sbb
lret
loopne
inc
xchg
sub
inc
sub
mov
inc
arpl
adc
clc
into
scas
and
in
lcall
push
les
mov
xor
dec
mov
add
mov
sub
cwtl
xor
mov
mov
jmp
add
add
mov
and
in
pop
aas
xchg
sbb
add
lcall
inc
add
cs
sub
and
lret
outsb
push
dec
ljmp
cld
sub
rcl
nop
shrl
shll
enter
pushf
mov
aas
push
mov
aas
sub
mov
inc
pop
add
loop
and
popa
sbb
xchg
cmp
test
repz
sbb
inc
cwtl
mov
xchg
popf
xchg
sub
add
mov
rcll
xchg
xchg
xchg
popa
hlt
cmp
cwtl
in
addr16
dec
adc
in
mov
lds
roll
lret
cmp
or
out
jmp
or
clc
inc
mov
adc
xchg
fwait
jg
ret
pop
mov
loopne
add
or
test
and
dec
mov
enter
cmp
in
and
mov
adc
inc
pop
mov
mov
push
inc
cltd
imul
add
pop
xchg
adcb
pop
fiadds
imul
insl
fadd
inc
adc
xchg
fincstp
add
pop
sub
popa
push
fidivrs
nop
imul
dec
jmp
subps
mov
fs
or
cmp
lret
pop
repz
pop
xchg
les
or
mov
popf
jno
pop
daa
iret
pop
cwtl
in
mov
loope
pop
cmp
adc
test
jge
inc
iret
and
xchg
add
xchg
mov
arpl
xchg
pop
aas
push
insl
shl
mov
sub
jns
jno
dec
arpl
sbb
jle
popa
jne
or
dec
call
sbb
sbb
xchg
test
cmp
in
xor
pushf
cli
ja
call
xchg
or
xor
mov
adc
xchg
xchg
push
lods
sub
scas
aam
sahf
sbb
inc
xlat
int3
insb
nop
aam
int
int
cli
jl
jb
add
pop
mov
cwtl
sti
movsl
xchg
pop
jbe
out
cmpsb
jnp
mov
mov
jno
mov
test
sub
aas
lahf
bound
fcomp
sbb
loope
es
inc
incb
xor
ja
or
mov
sar
decl
into
rclb
cmp
dec
add
fwait
mov
lock
js
mov
stos
cli
aas
jge
call
xor
xor
repz
or
into
aaa
push
mov
push
xchg
in
inc
stos
dec
jne
xchg
pop
movsb
or
mov
sub
testl
int
dec
jg
cld
dec
xchg
mov
mov
in
push
ds
imul
pop
insb
hlt
dec
pop
nop
cltd
fistpll
xchg
xchg
jns
scas
sub
pop
jecxz
gs
hlt
stc
lods
into
fdivs
sti
dec
and
out
or
sub
xchg
test
imul
aaa
hlt
lret
fisubs
pop
orb
inc
sub
jp
insb
pop
mov
out
sbb
addl
cmp
xchg
lret
pop
lahf
xor
xchg
mov
les
in
xchg
shl
or
in
iret
shlb
mov
sub
push
lret
push
jge
sbb
push
inc
sub
ret
cli
gs
and
clc
pop
dec
test
outsb
sbb
jno
lods
int3
leave
into
pusha
sarb
pop
xchg
mov
mov
je
and
insb
cmp
rclb
mov
inc
adc
add
jge
or
sbb
imul
cmp
test
movsl
call
jb
jo
jbe
loop
push
mov
loopne
in
cs
xchg
testb
negl
lret
push
jp
add
push
cmpsb
loope
push
nop
mov
push
add
not
lret
aaa
imul
xchg
mov
jecxz
or
punpckhbw
jno
dec
xchg
jle
mov
cmp
push
out
cli
sbb
mov
mov
push
gs
sbb
out
jne
sbb
pop
aaa
dec
mov
push
cmpsl
enter
and
or
fisubl
rolb
test
mov
push
ret
paddsb
mov
roll
add
ljmp
or
daa
movsb
cmpl
and
jb
shlb
leave
inc
pop
bound
rol
or
and
xchg
sub
lock
addr16
inc
and
jo
mov
data16
sub
add
xor
sub
test
leave
push
xor
test
push
mov
lods
xchg
insl
ljmp
mov
pop
mov
or
inc
out
fdivs
pop
or
sub
lret
jp
or
inc
movsb
and
pop
mov
mov
mov
ja
pop
pushf
cmp
mov
adc
jecxz
in
aas
loop
mov
mov
cmp
rcrb
jg
xchg
test
rolb
ret
outsl
insl
push
arpl
push
loopne
mov
xor
lcall
hlt
out
in
xor
fdivrs
stos
mov
es
adc
inc
xchg
mov
add
jge
addr16
jg
dec
in
movsl
mov
cltd
push
or
gs
movsl
dec
repnz
push
nop
pop
lahf
ja
outsl
xchg
nop
inc
jp
xor
test
mov
into
iret
ljmp
dec
mov
pop
mov
pop
rol
in
jns
adc
push
push
cmp
clc
sbb
cltd
adc
mulb
insl
add
or
mov
adc
stc
nop
pop
loope
sarl
inc
cmp
pop
pop
loopne
adc
jge
push
cmp
and
leave
rcrb
push
mov
pop
bound
and
lods
push
dec
xor
inc
dec
adc
jne
inc
sub
mov
movsb
popa
xchg
outsl
pop
jecxz
mov
jecxz
cmp
ror
imul
out
xor
outsl
xchg
ret
cmp
jnp
pop
jne
bound
mov
shl
popf
out
dec
lods
pop
mov
xchg
pop
pop
mov
and
mov
jne
lcall
cmpsb
lret
push
loop
test
loopne
cmpps
cmpsl
cmc
inc
gs
or
aam
dec
fwait
dec
jle
pusha
inc
xchg
cmp
pushf
sub
sub
adcb
aad
sbb
lods
mov
std
pop
in
or
sarl
mov
sbb
subl
jb
pop
in
mov
add
shrl
loop
mov
movsb
cld
fldl
cmp
pop
jp
or
test
mov
hlt
pop
xchg
cmp
dec
mov
lahf
out
pop
cmpsb
add
lea
push
loopne
sbb
stos
popa
shrb
sbb
mov
sbb
cmp
repz
jne
cmc
or
xchg
or
test
mov
js
ljmp
xor
iret
int
and
ret
jp
xor
dec
out
jecxz
movsb
fwait
jo
cmpb
xlat
scas
es
xchg
pop
push
mov
movb
or
jmp
mov
push
imul
int3
sahf
lods
push
or
insb
cli
mov
adc
sbb
xchg
cli
push
stos
sbb
aaa
cwtl
pushf
mov
xchg
roll
in
rorl
inc
stc
mov
ds
sbb
inc
fnsave
stos
mov
int3
popa
insl
cmova
jmp
stos
jno
shl
repnz
out
jns
and
les
xlat
fwait
cmp
push
imul
xor
push
cmc
lahf
xchg
pop
cmpsl
stc
push
imul
xorb
jne
xchg
js
ljmp
imul
or
adc
popl
pop
stos
xchg
stos
xchg
jo
mov
jnp
dec
lret
lcall
pop
push
lods
mov
xchg
sbb
std
and
dec
inc
or
in
iret
xor
xor
mov
addr16
rcl
lcall
mov
inc
fs
enter
mov
add
fnstenv
add
xor
add
jae
movups
arpl
mov
repnz
outsb
int3
out
dec
aas
dec
dec
inc
push
pushf
loop
xor
push
in
mov
ret
mov
xor
xlat
mov
pop
out
loope
add
inc
push
jmp
idivb
jae
sbb
shl
inc
imul
mov
ljmp
ret
ja
jae
sbb
out
gs
lods
sarl
scas
cmovbe
filds
pop
and
pop
std
dec
ss
add
ja
cmp
mov
in
add
mov
stos
outsl
movsb
in
aas
loope
imul
rorb
dec
mov
call
mov
fdivs
dec
cmp
out
push
imul
push
cmp
cmp
aaa
test
mov
sub
xor
mov
mov
fstpl
aaa
popa
cmpsl
dec
mov
cmp
insl
and
mov
pop
or
mov
or
adc
dec
outsl
js
or
cmc
icebp
fisttpll
jne
sbb
pop
lret
xchg
ja
in
cmp
push
lods
fchs
test
lds
dec
shr
mov
inc
push
adc
into
fwait
out
arpl
sahf
wbinvd
jle
dec
or
sahf
xchg
aas
sahf
insb
pop
add
jecxz
xchg
pushf
mov
sub
shll
roll
sbb
loope
cmp
xor
dec
nop
sub
shrb
int3
lea
scas
rol
sub
xchg
scas
or
jo
popa
sahf
frstor
add
xchg
imul
adc
jbe
icebp
shrb
sbb
stos
aas
movsb
xchg
testl
inc
int
and
sarb
cmp
push
in
js
mov
mov
call
sbb
push
cmp
sub
add
lcall
in
jecxz
lahf
clc
cmp
cli
sbb
rorb
clc
pop
jle
fdivs
clc
pop
sbb
data16
shlb
jecxz
jno
mov
mov
inc
das
andb
add
fsubl
aaa
and
mov
inc
imul
pop
sub
cld
cs
jne
sub
test
jae
and
inc
push
push
or
pop
mov
lcall
xchg
sarb
inc
adc
fs
fs
dec
mov
movsl
cli
outsb
lahf
sbb
es
fdivrs
je
je
xor
bound
or
test
sub
dec
aas
push
cmc
fnstsw
shrl
mov
adc
adc
xor
mov
xchg
inc
data16
pop
lea
frstor
repnz
inc
idivl
test
ret
jae
insl
mov
outsb
add
gs
testl
cwtl
and
push
call
push
mov
pop
sub
lahf
lods
xchg
movsb
lods
xchg
jbe
in
orb
mov
adc
push
jmp
rcl
ds
fisubrl
idiv
and
pusha
shrl
test
dec
test
loop
loope
into
mov
push
leave
divb
add
lods
sbb
stc
mov
add
imul
xor
movl
xchg
int
xor
mov
jge
inc
icebp
cmp
loop
in
or
mov
pop
out
enter
pop
cmc
push
push
push
aam
cmp
aam
cs
stos
les
sbb
psrlq
or
pop
and
dec
stos
cmp
aas
dec
jp
out
call
fstpl
nop
sub
mov
inc
adc
and
mov
mov
lods
or
insl
cmp
dec
xchg
sbb
mov
mov
mov
xor
jae
subb
cli
sbb
je
in
jmp
pushf
adc
in
dec
mov
xchg
and
dec
fs
shll
in
lock
ror
rolb
cmp
xchg
lret
xor
stc
xchg
lahf
push
or
insb
sysexit
adc
adc
call
dec
test
cmc
nop
dec
jmp
mov
mov
mov
ret
iret
out
or
stos
xor
jns
lds
nop
mov
ljmp
cmp
mov
lock
lods
push
jno
aas
pop
mov
aas
divl
pop
ljmp
fwait
shrl
int
out
out
mov
lahf
xlat
mov
jge
movsl
jno
push
out
int3
mov
mov
shlb
out
mov
push
sarb
std
outsb
inc
insb
test
int3
mov
mov
or
xchg
xchg
cmpsb
stc
push
ret
sub
popf
or
and
mov
sbb
loope
sub
std
sbb
sti
mov
jp
add
mov
aaa
clc
sbb
out
add
dec
push
iret
shlb
pop
mov
add
jno
in
and
outsl
sbb
imul
icebp
push
mov
mov
mov
loop
cltd
and
inc
test
mov
push
mov
xchg
or
jecxz
shld
or
lahf
imull
fmuls
inc
insb
push
jb
js
mov
sub
jmp
jnp
mov
push
aad
push
xlat
das
xorl
add
mov
mov
sbbl
hlt
cmpsl
mov
jge
mov
xchg
jecxz
push
fcmovb
cmp
mov
sti
sub
jno
xchg
fidivs
sbb
int
out
push
test
jge
lods
push
pusha
dec
fistl
and
sbb
popa
cwtl
jl
ds
lcall
jle
call
js
pushf
in
sahf
dec
xchg
jge
out
inc
ljmp
mov
insb
arpl
rcr
outsb
push
out
mov
into
stc
lahf
mov
mov
jnp
ret
push
adc
pushf
icebp
fwait
lret
and
lds
ret
loop
add
xor
jo
imul
lods
shll
jge
sub
ds
lcall
out
in
sbb
pop
mov
cmc
jae
loope
andl
pop
xchg
out
xorl
mov
and
mov
bswap
mov
xor
out
dec
push
test
fistpl
and
leave
loopne
xor
xchg
sti
push
cmp
inc
mov
sbb
loopne
xlat
sbb
mov
push
or
mov
pop
xchg
daa
call
es
out
dec
ror
jnp
popa
sub
je
push
mov
jbe
mov
loope
iret
cli
loope
pop
sbbb
add
scas
ja
int3
mov
inc
mov
cmpsb
mov
inc
and
and
sbb
push
daa
push
test
lahf
mov
cmpb
pop
imul
std
sbb
mov
mov
lds
in
add
std
pop
add
adc
fs
cmc
mov
adc
mov
out
daa
rol
pop
sbb
repz
pop
aaa
pusha
mov
jo
loopne
jo
out
push
mov
shrl
xor
das
ss
scas
daa
jp
cmpsb
fsubs
inc
sti
cltd
cmc
xchg
int3
out
out
adc
ret
ret
sahf
push
insb
in
sahf
add
mov
adc
mov
sub
push
ret
adc
jecxz
sub
cmpsb
rcrl
js
lahf
hlt
out
pop
pop
aas
inc
mov
or
jle
cmp
rcr
mov
xchg
mov
call
cli
lcall
es
inc
add
loopne
or
or
lods
call
cli
xor
aas
jg
adc
leave
cld
dec
jo
or
jecxz
rorl
or
mov
repnz
jp
mov
fstpl
call
imul
mov
push
xchg
out
lret
mov
rol
xchg
fistps
pop
popa
cld
xor
push
jae
xor
mov
ja
adc
lret
stos
shll
in
xchg
and
dec
andl
push
push
cmpl
fbstp
and
add
cmpsl
mov
ret
movsl
push
pop
aas
addr16
xor
movsb
xor
jnp
dec
inc
pop
lret
xchg
inc
adc
xchg
add
lds
push
in
mov
xorl
sbb
mov
jbe
pop
and
mov
jl
scas
popa
jl
imul
sahf
add
or
popf
mov
pop
sbb
jmp
loopne
lods
cmpsb
gs
pop
notl
mov
push
inc
and
inc
shr
inc
addr16
mov
push
stos
xlat
cmp
pusha
push
mov
fld
testl
scas
sti
xor
sub
mov
andl
push
roll
incb
lods
add
in
xchg
sub
add
std
test
mov
das
cmp
lds
mov
push
push
test
push
ret
scas
adc
and
cmp
xlat
fldenv
jns
mov
lcall
xchg
lahf
sbb
in
push
and
pop
movsb
dec
lea
das
js
cmp
push
mov
mov
jle
cld
ficoms
loop
es
or
cwtl
scas
cmp
out
inc
cltd
daa
push
sub
jns
cltd
push
jnp
loop
gs
lock
popa
mov
cmp
jmp
adc
pusha
out
cmp
cmp
enter
xchg
mov
or
cmpsb
pop
fiaddl
xor
sti
aas
lods
pop
pop
mov
mov
sub
arpl
lods
call
push
mov
hlt
pop
loop
fcomps
lock
sbbb
jnp
in
test
out
lret
out
or
sub
cmc
pop
enter
mov
sub
xchg
dec
add
lcall
incl
lcall
push
orl
mov
mov
movsb
pop
inc
loopne
ss
cmc
lods
sub
clc
outsb
or
shr
loope
vmwrite
aad
mov
xlat
inc
iret
jne
inc
scas
std
inc
add
jge
pusha
je
pusha
mov
fsts
fidivrl
adc
fbstp
add
push
dec
and
stos
mov
adc
mov
adc
pop
mov
lock
inc
xor
inc
sbb
sbb
sar
xchg
mov
int3
pusha
test
add
add
ja
sub
sti
leave
popf
ret
fnsave
adc
fildll
xor
ret
mov
fdivl
sti
or
mov
mov
imul
pop
enter
repnz
or
cmp
dec
sti
pop
loop
mov
xor
sub
test
lcall
and
and
sbb
shlb
ja
fadds
scas
sub
cmpsl
sbb
xchg
sbb
pop
loop
or
xchg
jo
jnp
push
aas
sub
shlb
repnz
jp
lods
fbstp
sbb
inc
xchg
xchg
push
push
and
jo
lods
jbe
cmp
lods
dec
sbb
sub
mov
out
jo
push
jge
adc
rol
dec
push
aam
fisubrs
mov
shl
xor
les
jne
dec
sbb
sbb
js
sbb
lock
pop
dec
repnz
jg
shlb
pop
nop
fistps
push
out
push
dec
enter
jo
jnp
imul
dec
sbb
jbe
inc
mov
add
mov
push
cmc
and
popa
cwtl
cltd
cmpsl
test
mov
adc
shlb
adc
cmp
shll
or
fstps
outsb
sub
and
pushf
outsl
pop
add
pop
jo
sbb
negl
pop
sbb
stc
fwait
push
sub
pop
xchg
xlat
sarb
and
mov
ds
mov
pop
pop
cli
ljmp
out
xchg
dec
stc
jecxz
notl
je
sub
test
outsb
aam
sbb
add
inc
imul
add
mov
jns
mov
in
or
cmp
sub
scas
repz
sub
dec
pop
push
push
mov
fadds
imul
adc
cltd
lock
dec
mov
mov
pushf
fsubl
jg
pusha
jno
cmpsl
int
test
aam
pop
dec
fists
shlb
call
xor
and
in
mov
push
xlat
mov
daa
scas
xchg
aad
jle
pusha
add
pop
xlat
xor
cmpsl
push
dec
sahf
shl
cmp
xor
sub
and
pushf
out
ret
les
cmpsb
inc
xchg
test
repz
mov
das
mov
dec
cmp
or
sbb
mov
pop
cwtl
in
push
dec
mov
mov
mov
dec
test
push
ljmp
mov
movsl
xchg
jns
push
mov
mov
ret
mov
mov
push
pop
dec
inc
add
push
rep
mov
jecxz
out
jns
jge
fimull
or
leave
jecxz
movsb
push
scas
inc
ss
test
and
sub
out
sbb
ss
test
addr16
add
test
testb
mov
sub
xchg
fiaddl
adc
mov
ljmp
lahf
push
push
jae
xor
sub
cmpb
pop
adc
loopne
cmp
lods
flds
das
or
or
aad
mov
cli
sbbb
inc
xor
mov
and
xchg
aaa
sub
mov
cmpb
fadd
cmp
scas
inc
ja
pop
sub
roll
mov
pushf
out
adc
and
sub
sarb
incb
rcll
jno
cld
and
dec
jecxz
push
mov
sub
ret
out
ficoml
imul
cli
push
sub
fnsave
push
loop
jo
jg
push
add
push
sbb
jmp
xor
mov
or
inc
scas
adc
adc
sbb
lret
das
pop
sti
push
jecxz
jle
inc
cli
xchg
in
jnp
sti
push
jmp
jb
cwtl
cld
repz
mov
mov
sbb
sbb
and
mov
sbb
repz
sub
ret
decb
xor
jmp
pop
mov
cs
adc
ret
fisubl
fisttpl
xchg
mov
movsl
mov
fidivrl
xchg
repz
mov
insl
jo
mov
insb
loop
je
xchg
and
mov
mov
mov
fidivrl
ret
cmp
ret
gs
out
outsl
mov
mov
nopl
push
add
jle
push
sbb
in
test
roll
andb
imul
and
nop
xor
sub
push
pop
pushf
inc
dec
popa
mov
add
sbb
mov
jg
pop
shll
outsl
push
adc
stos
aas
sahf
sbb
jmp
je
mov
jo
mov
push
or
roll
ljmp
sub
ficoml
mov
push
rolb
pop
push
and
mov
ds
imul
int3
repnz
and
das
xchg
sub
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
dec
add
addl
and
cwtl
xor
cmp
int3
lods
adc
loopne
jo
cmpsb
rolb
dec
dec
js
adc
pop
xchg
dec
mov
jo
cmp
sub
xchg
mov
icebp
sub
add
test
jne
mov
and
cmp
mov
outsl
in
pop
notl
xchg
bound
lcall
push
pushaw
xor
fcoml
notb
mov
pop
mov
mov
cmc
push
push
jae
cmpsl
hlt
les
inc
ljmp
div
and
je
mov
pushf
mov
lods
shr
leave
sub
xlat
lds
inc
cmp
or
xchg
out
mov
in
test
cwtl
xor
das
fsubl
cmovnp
push
hlt
addr16
jne
mov
ret
adc
dec
adc
movsl
out
xor
cmc
adc
outsl
testl
test
cs
ficomps
rcll
cmp
call
and
xchg
cld
add
or
cmc
dec
cwtl
ret
and
mul
mov
cmp
loop
int
pop
loop
or
daa
pop
das
xor
insl
dec
add
adc
ljmp
cwtl
cmpsb
aam
cmp
jne
add
inc
bound
xchg
jo
rorb
pop
ret
mov
insb
jge
js
pop
jp
jno
add
test
mov
mov
jno
sbb
dec
stc
adc
pop
fs
sbb
sbb
andb
mov
pop
add
loop
mov
enter
adc
adc
dec
xchg
sub
xor
ds
shll
push
adc
fwait
icebp
mov
xor
dec
mov
add
mov
pop
sub
pop
push
cmp
iret
addr16
in
xchg
jmp
js
inc
cmp
sub
jecxz
sub
cli
push
ror
xor
and
and
adc
mull
xchg
mov
test
bound
sub
in
outsb
dec
mov
std
pop
in
in
adc
in
bound
mov
inc
xor
dec
scas
test
and
imul
or
or
sbb
mov
fsubrs
mov
dec
adc
into
jae
mov
mov
imul
xchg
pop
or
mov
loop,pn
out
ret
or
push
sbbl
or
rol
sbb
and
cmp
sub
mov
insb
xchg
test
xlat
or
outsb
xlat
lods
call
adc
dec
sub
test
dec
cwtl
pop
jb
push
mov
push
mov
or
push
cmpsb
cwtl
xchg
pop
movsb
out
bswap
cmp
cmp
enter
stc
movsl
mov
out
pop
das
icebp
rorl
sub
fiadds
xchg
add
jbe
movsl
sti
adc
out
cmpsl
test
push
mov
mov
repz
nop
test
dec
cltd
push
lret
repnz
or
inc
mov
loop
lods
ljmp
dec
mov
je
insl
mov
xchg
pop
sbb
dec
mov
in
inc
adc
fisubrs
fcmovnu
out
dec
into
adc
rcr
or
pop
scas
or
lds
add
cmp
nop
dec
pop
mov
or
pop
loopne
stos
neg
and
ret
jl
cwtl
push
test
aas
or
aam
out
dec
insl
nop
paddq
xchg
pop
push
inc
push
mov
push
lock
jmp
dec
not
movsl
loopne
jne
scas
inc
mov
fistpll
aad
inc
push
cs
dec
cs
pop
xchg
sbb
iret
mov
pushf
test
dec
insl
cmpl
loop
xchg
shll
cltd
mov
and
fwait
jp
dec
and
dec
cmp
xor
dec
sub
mov
push
ja
sub
xor
lods
cmp
daa
xchg
fcoml
xchg
inc
mov
adc
add
fimuls
in
cltd
lcall
mov
sub
adc
adc
add
out
push
mov
xchg
sahf
cmp
push
bound
adc
aas
dec
pop
push
jle
mov
add
sbb
in
inc
aam
pop
sub
bndldx
cli
rcll
jle
pop
and
cmp
sub
push
pop
in
inc
jmp
loope
mov
aad
js
xchg
inc
cli
xchg
xchg
addb
pop
das
cmpb
shlb
lret
dec
dec
xchg
inc
fs
bound
iret
jae
hlt
lahf
ja
pop
les
and
insl
dec
stc
mov
jnp
push
popa
dec
pop
popa
lock
insb
insl
cld
inc
push
rclb
xrelease
sbb
sub
and
rorb
inc
addr16
clc
adcb
enter
add
sarl
mov
loop
push
jno
leavew
mov
inc
and
pusha
fcom
mov
pop
insl
mov
mov
mov
and
cmp
outsl
jg
aas
lret
push
jns
idivl
inc
xchg
mov
push
ds
clc
xlat
jecxz
dec
xchg
mov
sahf
lock
mov
xchg
xchg
pop
mov
xchg
leave
je
popl
mov
sub
inc
jno
in
push
ret
inc
push
dec
mov
fcoms
arpl
or
push
fdivl
flds
fcoml
mov
jno
xchg
insb
in
mov
imul
sub
cmp
fistpl
dec
mov
cmp
lea
in
xchg
clc
mov
and
mov
out
jp
dec
pop
pop
daa
repnz
cmp
dec
inc
jmp
mov
jae
jmp
ss
inc
ja
aad
xchg
dec
mov
jb
sbb
out
jp
jmp
mov
aad
mov
scas
rolb
ljmp
cmpsl
daa
stc
or
jbe
mov
push
add
or
popf
sbb
add
iret
push
fsubrp
mov
mov
sbb
fcomps
xor
cmpsl
adc
loop
mov
stc
add
std
xor
loopne
stos
pop
ja
add
call
dec
jae
jmp
dec
push
gs
adc
pop
push
stc
leave
mov
sbb
pop
cli
and
xor
loop
xor
daa
loope
lods
push
mov
xchg
pop
dec
push
insb
stos
lock
push
and
lods
fsub
add
inc
pop
xchg
xchg
sbb
in
test
into
inc
push
push
add
icebp
popa
mov
push
aas
sahf
popa
adc
xchg
insb
jp
rcll
ss
xor
jb
sbb
adc
push
push
fisubrs
or
sbb
pop
sbb
inc
or
loop
xor
lock
testl
xor
repnz
in
in
das
int3
ds
pop
dec
fwait
js
pop
cld
test
xchg
les
inc
mov
in
jle
nop
sbb
mov
cwtl
bound
out
imul
xor
movsb
push
cwtl
cmpsb
popf
xchg
dec
cmp
pop
inc
add
test
push
xchg
jle
decl
cltd
xchg
sbb
hlt
insb
jns
jns
or
mov
jno
repnz
add
inc
adc
stos
inc
daa
stc
xchg
in
xchg
mov
pop
ja
test
xchg
loopne
adc
mov
push
xor
xlat
in
imul
imul
je
fimuls
hlt
jnp
pop
mov
xor
lock
int3
popa
inc
inc
xor
insl
clc
jle
imull
or
dec
inc
in
mov
jmp
fidivrl
sbb
arpl
push
pushl
push
imul
lea
jle
adc
push
pusha
cmp
mov
enter
ds
sbb
into
push
iret
incb
sub
imul
adc
mov
cltd
add
fbld
cli
push
or
xor
test
in
mov
dec
mov
sbb
cmpsb
stc
xchg
jle
push
mov
stos
inc
std
jmp
dec
subb
movsl
sbb
lods
or
mov
pop
jge
mov
ss
xchg
cs
arpl
cmp
mov
xchg
mov
add
icebp
arpl
jge
ljmp
or
out
mov
cmp
fdivr
nop
ret
cmpsl
mov
movsb
sub
es
jb
mov
out
jne
add
jnp
out
xchg
std
outsl
sub
add
jns
cmc
mov
or
or
fildl
dec
inc
push
arpl
jle
push
mov
pushf
jo
pop
call
sbb
inc
xchg
leave
icebp
shrl
cmc
add
sbb
addl
clc
xorl
subl
cmpsl
add
mov
jns
and
insl
xor
inc
jmp
sbb
scas
f2xm1
repz
sub
dec
int3
mov
jnp
push
pop
in
xor
xor
mov
inc
dec
pop
cmp
out
push
inc
mov
mov
insl
sub
add
ds
out
in
pop
jne
mov
sub
ja
cmp
clc
jae
jns
cmp
outsb
adcl
add
ret
leave
and
les
std
dec
ds
inc
cli
inc
inc
jl
shll
jnp
sbb
dec
sbb
sub
jno
mov
push
push
dec
dec
xchg
dec
mov
clc
ljmp
inc
shl
and
shl
cmp
pop
ds
sub
adc
out
push
cmc
sub
pop
mov
lcall
adc
cmp
scas
test
sbb
pop
xor
loop
sbb
inc
pop
pop
js
mov
jo
xchg
xor
push
push
mov
in
and
mov
sbb
adc
arpl
add
js
test
icebp
movsb
call
xchg
insb
sbb
rcr
mov
test
mov
xor
lock
jmp
mov
dec
gs
outsb
mov
xchg
dec
xchg
cmpl
push
dec
andb
sub
cmp
jecxz
push
adc
lret
cmp
and
cmp
xor
out
pop
in
and
push
add
gs
dec
push
std
mov
and
clc
cmp
push
jbe
jl
adc
test
pop
lcall
stos
andl
cwtl
dec
clc
add
push
add
inc
pop
or
arpl
xorb
push
loopne
into
pusha
fildl
das
js
fiadds
xor
jecxz
flds
cmc
outsb
sbb
mov
addr16
loopne
mov
xor
stos
int3
std
pop
test
int
xchg
sub
jnp
ret
loop
negb
xor
out
into
imul
or
xor
cli
dec
sub
lret
flds
in
cmpsb
dec
mov
test
adc
add
adc
sub
mov
push
nop
popf
pop
sbb
dec
fneni(8087
mov
outsb
int3
insb
insb
rorb
repnz
rorl
call
lcall
xchg
repnz
pop
inc
dec
ljmp
xor
xor
push
dec
int3
mov
or
xor
insb
push
jne
int3
sahf
stos
mov
cmpsl
mov
mov
jae
push
push
cmp
jp
xchg
mov
cltd
mov
pop
xlat
dec
nop
std
test
xchg
pop
inc
push
fildl
pop
rcrb
cli
inc
jl
and
inc
push
iret
and
inc
inc
sub
cld
push
mov
jbe
adc
push
in
push
jb
ja
sarb
gs
dec
xor
aas
out
mov
filds
test
fsubrl
jle
ret
lea
shl
and
xlat
pop
or
mov
dec
cmp
add
or
inc
rol
jl
popf
out
mov
shrb
cwtl
lds
ds
add
xor
gs
sar
adc
aas
add
xchg
out
sahf
cmp
ljmp
mov
ja
mov
aaa
mov
lcall
cmc
xchg
fistpl
jp
adc
addr16
and
sbb
ret
cmp
outsb
sbb
addr16
mov
pop
sub
sub
aad
xchg
or
cs
pop
mov
dec
aam
push
and
push
fmull
cmp
and
cmp
test
inc
ffreep
push
push
mov
sbb
mov
sbb
dec
push
dec
and
aam
xchg
adc
cs
pop
loopne
jge
and
scas
push
insl
adc
inc
mov
xchg
in
repz
rorl
std
mov
xor
jp
das
loopne
sub
out
xchg
jo
xchg
lods
es
ja
mov
pusha
mov
addr16
mov
cmpsb
cmp
sub
sbb
xchg
xchg
cld
cmpl
pusha
nop
push
divb
xor
das
jb
push
ret
jns
push
iret
push
adc
push
es
mov
int
cmp
add
leave
flds
punpckhdq
dec
add
pop
xchg
mov
lret
popf
int
mov
test
dec
inc
shlb
or
sub
dec
arpl
mov
push
xchg
adcb
push
push
pusha
clc
xlat
mov
in
mov
aas
xor
notl
stc
push
push
mov
aad
outsl
mov
sub
bound
outsl
cmp
arpl
imul
adc
adc
pop
enter
imul
sub
or
fwait
bound
push
cmp
pushf
in
mov
in
jbe
cmp
mov
push
fstl
shl
sub
movsb
lods
lock
in
dec
jne
push
and
sarb
loopne
lret
sub
cmp
mov
arpl
lods
bound
test
xor
xor
call
lods
mov
push
fadd
cmpsl
mov
cwtl
or
dec
std
adc
aas
cmpl
ds
jno
ds
xor
xlat
xor
cmp
mov
dec
or
sub
out
push
pop
xor
inc
jmp
out
jno
mov
loop
dec
dec
sub
jg
mov
mov
cltd
les
ja
mov
xlat
std
pop
fucomp
or
add
stos
cmpsl
ret
imul
cs
sbbb
test
lods
rcrb
arpl
clc
jecxz
push
arpl
cli
test
movsb
cmp
pop
mov
pop
test
mov
hlt
inc
stc
movsb
add
adc
push
and
sub
mov
fldl
mov
pop
xor
daa
or
stc
push
jmp
cmpsb
outsb
nop
sub
imul
sbb
add
in
mov
shll
fcmovnu
cmp
sub
fs
mov
push
dec
push
clc
mov
xorl
or
xchg
and
cmc
cmpsl
mov
jle
sbb
xor
pop
mov
mov
mov
popa
pop
notl
nop
in
push
lods
adc
xchg
mov
gs
dec
gs
pop
loope
xor
add
mov
push
mov
and
in
cmpsl
xchg
xchg
into
add
mov
mov
pop
xor
add
cltd
xchg
sarb
test
push
out
sahf
jp
sbb
pop
push
mov
es
out
out
lcall
pop
filds
int
sub
loope
xchg
sbb
inc
jg
rcrb
jg
mov
adc
cwtl
pop
lret
sahf
cmp
or
aaa
fidivrl
dec
lds
sbb
jge
or
rcll
pop
cli
cli
adc
sahf
push
mov
dec
rorl
sbbb
jbe
inc
add
mov
mov
inc
add
inc
mov
push
test
adc
pop
inc
nop
sub
outsb
adc
mov
inc
jecxz
arpl
data16
lcall
in
ds
push
cwtl
jmp
sub
rcrl
mov
add
xor
aaa
stos
bnd
add
pop
lahf
enterw
lret
pusha
jno
lds
adc
xor
test
pop
gs
add
add
inc
rorb
ret
daa
xor
lods
or
cmp
pop
jnp
dec
or
in
ja
pop
mov
and
enter
xor
and
aas
and
jns
add
adc
cmp
sbb
popf
outsl
lock
sbb
cmp
xor
fsts
daa
lret
in
add
mov
dec
sahf
mov
xor
in
f2xm1
push
insl
adc
or
dec
insl
out
orb
sub
mov
sub
pop
jmp
mov
add
repz
lea
in
cmc
push
xchg
in
xchg
cmp
es
aad
testl
icebp
ret
xor
inc
ja
xor
mov
inc
sbb
inc
gs
test
xor
movsb
cmc
sub
dec
sahf
jge
in
aad
push
pop
adc
std
addr16
aas
mov
mov
mov
dec
lds
jl
cmp
js
push
addr16
inc
cwtl
ret
cmp
adc
xchg
sub
dec
push
xchg
aam
pop
loopne
jl
inc
push
cltd
adc
fwait
ljmp
mov
out
mov
negl
or
insl
pop
mov
mov
add
or
ds
inc
ljmp
push
sahf
sub
mov
inc
push
xchg
pushf
testl
xchg
adc
jmp
int
mov
dec
xchg
pop
pushf
xchg
mov
sbb
pop
in
loopne
call
int3
hlt
jp
or
out
pushf
push
lock
in
cmp
lods
and
das
pop
dec
mov
arpl
out
add
shrb
or
pop
mov
or
insb
cmpsb
add
pop
rcrl
movsl
or
xor
sar
inc
imul
loopne
push
jo
push
push
out
jp
jae
fs
in
sahf
add
rcll
iret
imull
sahf
stc
add
xor
pushf
icebp
in
in
data16
or
xchg
lds
gs
stc
mov
bound
cmp
adc
pop
cld
or
adc
push
in
shll
xlat
mov
and
sub
insl
jl
push
and
jb
pop
sbb
mov
sub
xchg
cmc
lret
lcall
pushf
jae
out
mov
addr16
pop
jmp
cmpb
xlat
faddl
jae
stos
clc
push
mov
fs
push
fldcw
and
xchg
xchg
sarl
aad
sbb
cmp
jb
xchg
mov
jno
imul
mov
cld
sarl
stc
fldl
xor
add
lcall
push
jo
aaa
stc
cmpsl
or
mov
popa
mov
mov
mov
xor
mov
jbe
jo
shrl
outsb
push
push
sub
dec
pushf
mov
pop
jmp
jmp
pop
fwait
pop
xchg
add
stos
jne
xor
jmp
inc
sbb
popa
cld
addr16
mov
or
push
mov
dec
addr16
lods
or
scas
test
test
sbb
adc
sbb
push
inc
mov
cmpsb
out
sti
addl
sbb
rorl
xor
ss
fstps
movsb
outsl
daa
inc
pop
mov
adc
rorb
xor
mov
movsb
loop
push
imul
sub
pushf
lods
outsl
pushf
ja
or
pop
dec
pop
sub
subb
enter
mov
sub
into
push
add
fstpl
ss
test
insb
or
sub
jmp
lds
xchg
mov
cmpsl
pop
sbb
inc
nop
mov
sarb
mov
ds
int3
xchg
mov
fadds
popa
sar
jge
std
push
dec
das
scas
push
fildll
mov
xor
scas
push
idivb
cld
mov
adcl
adc
insl
aam
mov
push
loopne
push
xor
mov
sbb
and
xor
dec
testl
jg
xlat
mov
in
lods
imul
mov
mov
inc
mov
fwait
in
xor
loop
push
cwtl
lds
pop
jg
pushf
data16
add
sti
cmp
lods
clc
sbb
sbb
andl
mov
mov
mov
and
dec
or
rcrb
sbb
jmp
pop
jo
add
jo
and
xor
or
sbb
adc
test
repz
pop
outsb
mov
add
or
push
cmp
pop
imul
sti
xor
ljmp
jbe
outsb
das
lods
stos
imul
test
test
cmp
mov
scas
dec
xchg
xchg
cmp
or
mov
inc
sarb
cltd
add
lods
push
or
cmp
inc
dec
inc
ss
out
gs
test
lcall
mov
ret
push
jmp
sub
mov
mov
xor
mov
out
fmulp
xchg
dec
mov
xor
pop
xor
pusha
dec
pushf
inc
lods
lock
push
sub
les
loope
inc
or
fwait
inc
sub
adc
add
mov
movsb
cltd
jl
mov
add
ja
inc
push
mov
enter
sub
jmp
test
out
jp
ret
inc
jg
je
stos
loop
jp
mov
and
xor
or
addr16
daa
adc
mov
cmc
or
lds
sub
push
adc
neg
loopne
push
push
lods
mov
cmp
xor
sbb
mov
pop
lcall
in
push
add
and
nop
dec
adc
and
jo
scas
xchg
je
mov
test
mov
mov
mov
in
fidivs
mov
shr
rsm
outsl
scas
jmp
aam
fwait
bound
shll
rclb
ret
sbb
mov
mov
cli
lret
insb
pop
test
mov
shl
repnz
mov
in
in
mov
cmpsl
push
cmpb
mov
test
jl
adc
stos
push
insl
stos
mov
xchg
inc
out
push
lods
aam
sbb
and
test
insl
ucomiss
cmpsl
ds
idiv
inc
cld
addr16
push
fdivrl
cltd
lods
test
mov
xor
cmp
arpl
ret
scas
pop
xlat
neg
mov
pop
dec
imul
xorl
cmc
loop
mov
loopne
movl
rol
and
mov
jmp
aam
jb
pushf
fsubl
add
cmp
xor
mov
rorl
outsl
setle
imul
ffreep
push
pop
mov
addr16
jl
mov
outsb
cmp
cmp
mov
popl
and
mov
and
hlt
fmull
mov
xor
add
push
pop
aad
mov
push
shr
ds
and
add
xor
mov
cltd
or
sbb
cmc
jbe
cmp
repz
sub
mov
ja
cmp
sub
in
push
inc
aas
fs
sub
lea
lods
inc
imul
roll
les
icebp
lods
cltd
pop
push
lock
outsb
inc
push
mov
and
inc
or
clc
jecxz
jbe
mov
pusha
dec
cmpsb
pop
mov
mov
lcall
push
jo
popf
out
jae
pop
xchg
cmp
xor
inc
jno
pop
and
xchg
gs
jae
mov
xchg
sbb
das
jb
dec
int
lret
imul
push
fwait
call
pushf
cmp
mov
inc
dec
lret
xor
imul
addl
outsl
popa
sub
jno
popa
jb
mov
push
xorl
addr16
call
cld
and
mov
dec
aaa
out
dec
ret
dec
jmp
sarb
in
or
ret
les
jo
pop
mov
sub
jp
mov
lahf
or
insl
movsb
cltd
or
in
lret
movsb
mov
xrelease
insl
pop
leave
push
dec
lock
dec
rorl
jl
fs
push
popa
pop
aas
repz
fisttps
movsb
jae
negl
xor
daa
mov
lret
pop
jnp
in
icebp
push
xor
jne
scas
insb
push
insb
xchg
xchg
aad
xchg
cmpsb
xchg
mov
sbb
in
xchg
pushf
xor
inc
test
stc
daa
cmp
mov
das
cld
je
push
test
sahf
xchg
sbb
xor
jg
cmp
jmp
iret
jp
lods
xchg
repnz
roll
xchg
pusha
imul
mov
jecxz
pop
jae
out
movsb
pop
cmpsl
notl
mov
mov
repnz
les
and
das
mov
andl
mov
lcall
and
pop
in
aas
stos
cltd
int3
loop
mov
cli
mov
imul
push
inc
pop
mov
out
inc
sbb
fisubs
mov
inc
push
roll
inc
fucompp
pop
fsubrl
mov
arpl
jg
sbb
dec
loope
jno
addb
adc
xchg
mov
and
jle
in
mov
out
mov
inc
push
fidivs
imul
inc
dec
dec
movsb
mov
cmp
mov
lock
repz
test
jno
mov
push
add
and
shlb
test
out
popf
iret
shrb
arpl
xor
adc
in
inc
add
and
push
movsl
cli
mov
push
and
cs
lret
sub
jne
sarl
adc
loope
aaa
add
jecxz
outsl
pop
lods
add
push
je
loope
pop
aam
je
test
ja
leave
inc
mov
sti
pop
add
imul
repnz
or
sarl
sbb
add
dec
sbb
out
imul
xchg
dec
sbb
outsl
ljmp
pop
imul
push
mov
and
pop
jo
flds
movsl
sub
mov
mov
loop
jb
mov
xchg
lods
test
jg
mov
xchg
popf
in
test
scas
add
gs
add
pop
pusha
test
mov
imul
push
rolb
mov
sbb
xchg
popa
xor
sti
pop
nop
loope
fdivrp
add
or
imul
jp
rorl
fcomp
clc
nop
or
ja
cmp
mov
mov
call
and
pop
das
pop
imul
push
mov
in
mov
cmp
mul
ljmp
fwait
adc
mov
push
adc
iret
rclb
cmp
test
mov
ror
nop
push
call
inc
xchg
xchg
mov
xlat
cmp
jne
shrl
jo
dec
in
add
mov
inc
ja
push
out
xchg
add
lea
inc
push
enter
or
push
push
pushf
sub
in
lcall
and
fidivl
ljmp
pop
addr16
and
mov
les
mov
cmp
xor
into
sbb
mov
lods
cmpsl
out
xlat
mov
stos
xchg
add
inc
int
adc
mov
js
push
mov
and
outsl
pop
les
int3
push
xchg
fdivl
cmp
lea
imul
fidivrl
lcall
push
insb
xchg
push
fmul
cmp
push
lret
aam
push
xchg
stc
jno
cmp
out
push
xchg
add
mov
xchg
pop
mov
call
test
call
mov
cmp
hlt
dec
repz
jns
jl
push
testb
xor
jne
xchg
sbb
adc
cs
jne
or
xor
add
cmp
xchg
dec
mov
fists
jecxz
add
setno
je
sbb
cmp
sub
sbb
aaa
and
add
xchg
stos
mov
out
mov
adc
mov
imul
lahf
lret
lahf
out
pop
mov
arpl
movzbl
pusha
push
movsb
jg
pop
push
push
pushl
dec
lret
rorl
add
ja
sbb
push
cmp
jnp
mov
shl
ja
jge
insl
popa
mov
xlat
pusha
cld
aaa
push
mov
adc
jae
test
xor
mov
push
test
sub
adc
lea
sub
fimull
adc
popa
call
mov
gs
pop
outsb
xor
cltd
shll
out
sub
push
dec
in
lret
fisttpl
inc
leave
pop
jno
sbb
cs
pop
lcall
dec
bound
stos
popf
sub
shlb
or
push
cmp
xchg
inc
sub
outsb
loope
dec
pop
push
mov
cmc
cmp
movsl
movsb
sti
mov
enter
subl
test
cmp
sbb
jns
mov
or
int
test
mov
mov
xor
cmpl
push
jae
inc
sbb
mov
adcl
xchg
mov
sbb
shrl
cmp
mov
add
adc
pop
lea
mov
push
les
and
xchg
iret
push
push
pop
and
negl
xchg
or
xchg
or
aaa
xor
mov
movsl
jb
push
iret
mov
popa
push
cmp
xor
mov
call
addb
scas
pop
jg
lods
adc
or
inc
push
dec
jnp
mov
call
add
dec
add
outsb
leave
adc
inc
or
into
jl
push
mov
pop
pop
repnz
or
sahf
sbb
jo
sbb
mov
jp
and
imul
rcrb
mov
inc
popf
jb
test
sti
stc
movsb
lea
dec
or
xchg
mov
shll
push
test
enter
lock
loop
les
xor
cmp
pop
stos
pop
xchg
and
jno
rorb
daa
xlat
scas
fldt
jge
cltd
push
push
icebp
jnp
rcll
xchg
loop
dec
shrl
inc
loope
lock
inc
xchg
aaa
fisttps
and
sub
data16
sbb
cwtl
jb
push
loopne
addr16
and
and
fstl
mov
aam
aas
push
and
out
call
pop
pop
fidivl
mov
ret
push
push
push
out
or
in
and
shl
aam
call
dec
pop
mov
rcrw
xor
sti
sbbb
adc
shlb
popf
cmpsb
pop
pop
inc
sub
dec
jg
xor
sub
xchg
xchg
inc
jne
shl
shl
or
jp
or
adc
push
loope
repnz
xor
jge
push
adc
rcrb
inc
add
ret
jb
dec
aaa
fisubrs
test
divl
push
pushf
xchg
inc
dec
divl
mov
add
jb
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
push
xor
addl
inc
xchg
mov
jge
lret
popf
popa
cwtl
or
inc
aas
push
mov
push
cld
xor
sti
fwait
add
sbb
mov
pop
add
push
jbe
sbb
push
cmp
fsubrl
jge
cld
mov
test
mov
xor
repnz
cmp
push
adc
mov
mov
shrl
sub
dec
pusha
and
cli
bound
notl
cmp
repnz
mov
mov
icebp
rorl
lods
mov
jb
in
aam
xchg
jo
cmp
mov
lods
in
jb
sub
hlt
adc
xor
mov
dec
test
xchg
movsb
lock
lods
ljmp
rorl
cwtl
clc
and
out
in
jmp
scas
call
insl
into
jnp
dec
push
pop
jb
xchg
out
jmp
test
inc
add
or
int
popf
lret
add
mov
pop
movsb
adc
mov
mov
cmovs
dec
mov
or
icebp
shll
stos
cwtl
adc
push
xor
adc
mov
mov
mov
out
mov
sub
push
lods
aad
cmp
jo
cs
sub
outsb
xchg
mov
arpl
mov
data16
inc
sarb
pop
jmp
ret
faddl
mov
gs
icebp
push
leave
bound
adcb
jb
lret
shlb
aad
out
adc
loop
lret
in
xlat
xchg
mov
add
jge
mov
fs
cltd
inc
xchg
pop
cmp
jnp
add
dec
mov
mov
sub
out
sbb
cmpsb
push
push
and
imul
mov
pop
imul
cmpl
pop
cmc
push
cs
mov
and
inc
sub
push
insb
jae
clc
jb
push
xchg
mov
mov
mov
adc
dec
and
mov
jmp
mov
fstl
ds
enter
cmpsb
ljmp
dec
loopne
lods
sub
call
les
jl
aas
test
inc
test
cmpsb
sbbl
in
ret
adc
cwtl
imul
loop
pop
pop
adc
inc
pop
jae
lret
lds
fists
mov
imul
or
aaa
rol
aaa
push
push
jo
sub
mov
and
lar
test
sbb
push
sub
popf
stos
imul
repz
pop
push
lahf
xor
cmp
cld
cmp
cmp
movsb
call
xor
cmp
adc
or
in
inc
aad
push
add
mov
inc
pop
in
arpl
cmp
jmp
jbe
nop
in
pop
xchg
lret
mull
jne
cld
fidivrs
mov
mov
das
dec
in
mov
js
push
data16
cmpsb
ret
iret
inc
push
mov
adc
push
cld
rcrl
loope
pop
or
or
jbe
cmc
pop
adc
test
dec
xchg
nop
cltd
sub
imul
cli
jg
mov
pusha
and
mov
test
xor
mov
pop
add
clc
inc
sub
mov
nop
lods
fs
add
sub
mov
sbb
mov
loope
cmp
add
icebp
xlat
mov
add
mov
sbb
mov
aas
nop
push
adc
rcrl
pop
bound
pop
inc
mov
xchg
cmp
pop
pinsrw
pop
fstpt
lret
inc
rcl
dec
pop
adc
cld
cmp
out
mov
std
aad
js
rol
aas
fadd
rcr
popf
ret
out
aaa
or
inc
jp
and
inc
lods
jp
ljmp
pop
bound
icebp
fisubl
imul
mov
mov
aad
jbe
sub
std
pop
les
xchg
mov
sbb
movl
xchg
jle
rcrb
add
push
cmpsb
mov
out
push
inc
add
push
jnp
scas
push
call
shlb
out
jno
pop
xlat
jge
sub
mov
cltd
mov
pop
pushf
cltd
xchg
sub
pop
sub
cmpsb
jne
xchg
leave
dec
and
sbb
sub
pop
inc
clc
pusha
ja
pop
cmp
cmp
xchg
jp
cld
cmpb
jp
xchg
jge
mov
mov
cmp
lds
pop
pop
stos
and
movb
sub
js
jno
add
adc
sbb
js
into
push
xchg
into
test
jmp
and
dec
ds
adc
or
rol
or
out
aad
mov
mov
or
clc
jne
adc
mov
into
xchg
xchg
cmc
stc
test
and
push
ret
xchg
sbb
add
xor
int
fidivl
loopne
sbb
jo
sbb
push
mov
mov
and
sub
cmpsb
notb
jnp
aam
jb
pop
ljmp
push
loope
jb
mov
in
or
sbb
cmp
roll
mov
cmp
cmp
bound
add
push
decb
inc
jns
out
imull
inc
or
xor
cltd
mov
dec
js
sti
jno
in
dec
push
pop
and
pminsw
cmp
out
into
mov
push
dec
xchg
rorl
cli
inc
cli
loop
rclb
jnp
mov
out
mov
fmuls
das
cmpsb
inc
outsl
jg
pop
fisubrl
mov
test
pop
call
divb
fisubs
mov
pop
sub
or
xchg
fisubs
xchg
nop
lahf
push
je
push
scas
ffreep
mov
inc
jl
cmp
emms
inc
stos
cmp
cwtl
mov
shrb
mov
sbbb
fprem1
cmpsl
and
test
and
inc
and
push
pushf
mov
mov
xor
data16
imulb
add
nop
movsb
sbb
in
nop
mov
out
pusha
data16
repnz
xchg
stos
lds
xor
sub
pushl
sbb
mov
orb
sahf
fiaddl
sub
test
push
ret
out
dec
bsr
loopne
pop
clc
stos
mov
imul
loopne
shr
mov
fnsave
push
and
jnp
xor
pop
outsb
adc
fwait
decl
cmpsl
jae
xor
or
call
mov
pop
mov
rol
in
push
lcall
or
pop
sbb
xchg
cmc
adc
sahf
or
imul
rclb
rclb
popa
out
xor
mov
sbb
aad
jecxz
inc
sbb
lock
pushf
scas
mov
arpl
cmp
dec
and
inc
cmp
cld
cmp
scas
lret
mov
fnstcw
and
imul
mov
mov
xor
inc
call
jl
test
pusha
jnp
fstl
and
or
cmp
and
stc
dec
enter
test
scas
jns
mov
push
inc
xor
repz
nop
sbb
mov
loop
inc
xor
sti
mov
hlt
jb
inc
dec
fsubl
push
out
cmova
xor
xchg
sbb
push
and
adc
pop
adc
hlt
jmp
add
mov
mov
pop
or
arpl
sub
ficoml
aam
mov
sbb
mov
daa
rcll
xlat
push
xor
and
add
or
sbb
cmp
imul
mov
sbb
incb
insl
mov
jmp
enter
or
mov
or
mov
sbb
ret
outsb
jns
or
dec
xor
sbb
nop
lock
xchg
adc
mov
jne
shll
addr16
dec
sub
out
dec
nop
pop
xchg
push
jbe
lahf
push
loope
xchg
xchg
and
das
pop
xchg
jb
adc
cli
jae
pushf
mov
icebp
dec
inc
push
push
pop
jl
test
cmp
sarb
xchg
orb
lds
jo
jbe
mov
sbb
sub
shrb
add
ss
push
push
es
add
lods
pop
jmp
mov
std
xchg
add
pop
jmp
xor
mov
or
push
aad
or
jl
mov
sarl
push
js
insl
add
sub
jmp
sti
add
and
jl
not
mov
xor
xchg
cwtl
push
cmp
outsb
cmp
int3
pop
xor
inc
aad
jne
lea
movsl
xor
push
in
popa
insb
data16
lcall
shll
je
leave
mov
in
pop
in
jmp
bound
test
push
cli
je
and
push
dec
movsb
mov
mov
out
sub
out
adc
sub
dec
out
and
dec
je
or
mov
mov
pop
fsub
push
jge
test
lods
cwtl
mov
push
xor
mov
jmp
sbb
push
xchg
les
xor
leave
dec
sarl
aas
push
mov
xchg
std
cli
arpl
mov
mov
int
cltd
daa
mov
in
mov
ret
es
loopne
loopne
icebp
sub
test
in
pop
sub
out
push
fdivr
nop
xchg
pusha
mov
or
mov
push
or
cmpl
lea
inc
orl
xchg
jne
xlat
inc
and
fmul
pop
pop
mov
scas
and
mov
adc
or
hlt
shll
lret
mov
jnp
lods
adc
cs
pop
adcb
mov
pushf
or
inc
xchg
jae
call
push
jge
sbb
cwtl
shlb
lret
mov
je
inc
loope
inc
insb
lds
pop
movsl
lcall
loop
sti
cmpsl
mov
xchg
pop
fisttpll
stos
daa
jle
xor
test
xor
mov
mov
push
in
mov
xor
inc
push
pop
pop
fadd
inc
gs
mov
shl
ds
enter
jmp
mov
jbe
cmp
cmpsl
sub
inc
cmp
dec
ss
ss
data16
mov
ror
dec
scas
aam
adc
push
int
lods
pop
xor
test
aam
or
push
sti
lcall
hlt
push
or
faddl
sub
pop
jle
cli
mov
cs
mov
ds
cmp
push
jle
inc
aad
movsb
push
shrb
push
aaa
jb
out
push
dec
inc
and
lcall
lahf
out
cltd
xchg
or
sub
adc
cmpsl
pop
jl
inc
pop
mov
mov
aaa
mov
dec
mov
dec
pop
xchg
clc
fs
xor
xchg
inc
jae
out
and
xor
push
jno
pop
pop
mov
shlb
mov
movsb
pusha
fucomip
fistl
cmp
and
popf
mov
aam
cmp
jmp
icebp
sarb
push
in
push
fs
out
mov
adc
xchg
jge
imull
loope
and
add
mov
mov
inc
je
cmp
popa
cmpsb
jno
add
jnp
sbb
orb
mov
xlat
jb
aad
or
or
adc
in
les
cwtl
mov
cltd
repz
cmp
call
push
lret
inc
jnp
dec
jp
pop
jle
mov
out
stc
sub
ds
aaa
out
push
pop
jbe
sub
mov
or
push
les
mov
insl
pop
jo
test
sahf
shl
cmpb
push
test
loopne
xor
rcll
lret
notl
rcll
jo
xor
out
and
int3
xor
xor
cli
push
outsl
jmp
pop
loop
lods
adc
jae
sbb
outsb
mov
cs
push
and
fwait
mov
sbb
jge
clc
fs
test
dec
stc
inc
and
daa
lods
sbb
pushf
loop
xchg
jae
cmp
xor
cmc
push
cmp
xor
or
dec
or
or
sub
in
lahf
and
pop
ja
dec
xchg
jbe
cmpsl
push
and
incb
dec
lds
test
dec
inc
sub
jbe
sti
scas
pusha
adcl
lds
stos
mov
sub
or
push
outsl
and
lahf
push
das
xchg
and
sbb
nop
push
dec
jg
ret
test
int
aam
jmp
or
pop
int3
jl
imul
cmp
cmp
mov
shrb
or
xor
cmp
call
aas
nop
imul
or
push
push
lcall
cli
ljmp
fdivl
inc
repnz
in
xor
insl
mov
dec
mov
pop
mov
jns
pop
ret
or
jo
daa
add
cwtl
sti
stc
push
jle
movsb
jle
rol
and
rorl
insl
add
pop
mov
testb
xchg
mov
jle
lret
or
fdivl
push
xchg
mov
or
rcrl
xchg
iret
xchg
cmp
push
mov
push
cmpsl
dec
in
dec
add
xchg
js
ja
cmp
ret
inc
lea
fstp
dec
pop
sbb
pop
ror
hlt
pushf
sub
bound
mov
push
lock
push
add
xchg
ss
xchg
arpl
mov
test
add
movsl
scas
jno
mov
loop
push
fists
add
adc
mov
fdiv
imul
pmaxub
mov
sub
mov
leave
aaa
mov
pop
xchg
or
sti
and
adc
pop
movsl
xor
add
mov
xor
xchg
adc
jmp
lret
adc
cmp
and
add
xor
xchg
adc
stos
mov
lds
push
jns
mov
popf
ret
sub
sub
jnp
mov
hlt
shlb
and
jb
test
xchg
cmp
rcrb
loopne
xor
and
push
jne
xchg
mov
mov
aad
bound
popa
push
jbe
or
cwtl
lea
dec
cmpsb
sbb
fistl
icebp
sbb
jmp
js
int3
ror
pop
xchg
cmp
jno
push
jmp
out
outsl
adc
mov
xorl
sbb
outsl
mov
mov
cs
sub
lea
jp
clc
ss
sbb
mov
inc
aaa
push
push
adc
imul
out
mov
fbld
imul
clc
dec
in
dec
aam
sub
jnp
push
fs
mov
in
pop
call
jne
lret
sahf
jb
sar
les
popa
mov
das
out
inc
and
xchg
pushf
sbb
push
sbb
jmp
mov
xchg
xchg
lods
or
add
inc
cmp
cmp
add
sbb
inc
cmpsb
mov
and
mov
loope
jno
xchg
or
int
sbb
movsb
fwait
inc
sbb
and
movsb
rclb
mov
push
jne
sbb
loopne
mov
add
adc
fnsave
test
pop
fadd
aam
mov
mov
mov
aas
xchg
lcall
jg
adc
sar
add
mov
outsl
dec
push
add
sub
dec
test
sti
pop
test
rcr
clc
sub
mov
add
outsl
xor
mov
jmp
stos
into
adc
addr16
repz
xor
lret
and
fisttpll
add
mov
enter
pop
mov
loope
push
arpl
sub
aaa
fnstenv
cmp
jbe
mov
ficoml
aad
xlat
stos
cmc
ljmp
push
xchg
dec
in
adc
idiv
movsl
xlat
andl
inc
lea
lods
repnz
fmull
sbb
in
mov
pushf
hlt
fucom
mov
cmp
aaa
inc
pop
into
jecxz
adc
sbb
stc
adc
mov
es
sbb
push
xchg
dec
cli
adc
test
ficoml
imul
inc
sbb
cld
shrb
pop
mov
or
sbb
cmp
pop
rcl
test
jb
and
inc
sub
xchg
gs
aas
xchg
xor
mov
sbb
lods
or
cmp
push
out
rolb
xchg
adc
dec
xlat
imul
adc
jbe
icebp
pushf
popf
fstpt
rolb
xor
js
push
loopne
xchg
cmp
addb
xor
sub
adc
addl
inc
lcall
pop
andb
fistpl
addl
pop
rclb
cmp
fildll
pop
xchg
push
mov
call
sarl
push
push
int
push
sti
insl
cmp
mov
and
mov
rorl
shrb
lret
lcall
pop
shrl
fstl
cmp
xchg
pop
inc
sbb
push
and
add
test
inc
push
arpl
dec
inc
adc
decl
jae
testl
scas
mov
cmp
popf
xchg
repz
insl
mov
into
bound
repz
and
cwtl
sahf
and
sbb
push
out
push
mov
dec
pop
jge
ret
xchg
mov
add
push
xchg
leave
cmp
repz
mov
dec
lcall
mov
push
out
pop
lret
cmpb
lods
mov
sub
outsl
xchg
or
pop
sbb
and
xchg
mov
xchg
jmp
jne
int3
movl
std
push
cmp
jbe
idivb
adc
fxch
mov
jg
adc
shlb
or
inc
adc
jecxz
or
fwait
pop
pop
in
add
popa
fsubl
repz
fnstcw
push
add
daa
cmc
ljmp
mov
pop
fisubl
in
mov
sub
xor
faddl
push
pop
or
js
add
cmp
push
jns
xor
sub
adcb
addr16
sar
and
xchg
jge
xchg
repnz
in
push
lds
sbb
or
or
in
dec
inc
pop
fnstsw
pop
lods
mov
fldenv
mov
sbb
inc
mov
and
fs
inc
ds
subl
das
pop
mov
cmp
loopne
xchg
inc
aaa
shrb
push
imul
std
pop
or
adc
cmp
pop
fwait
jns
push
mov
cmp
test
scas
out
jmp
stos
enter
aas
jnp
jno
adc
cmpsl
movsl
push
stos
popa
in
cli
or
mov
add
icebp
popa
dec
add
sub
int3
mov
inc
mov
stc
pop
movsl
cmp
lret
sbb
inc
cld
in
es
sbb
sub
outsl
sbb
and
nop
arpl
daa
cld
fsubrs
mov
push
push
xchg
ficomps
inc
outsl
dec
roll
andl
cltd
lock
mov
dec
xchg
loope
push
dec
lea
lea
repz
lods
inc
or
and
imul
mov
test
or
sub
push
sarb
xchg
xor
push
jge
jbe
adc
add
mov
int3
arpl
push
ror
adc
pop
add
cmp
push
and
mov
dec
pushf
push
cmp
jae
mov
add
ficompl
dec
cli
ja
lds
push
mov
mov
jle
aaa
std
lret
add
sub
dec
jnp
or
cmp
int
leave
sbb
xor
cmp
xor
rcl
mov
mov
movsl
cltd
ja
sub
mov
cld
fldenv
cmp
cmp
loopne
push
mov
push
insl
int3
movb
mov
or
fdivs
arpl
in
mov
cld
stos
dec
les
pushf
cmp
jbe
cmpsb
mov
pop
sbb
xchg
loop
jl
int3
adc
repnz
add
daa
pop
jns
and
mov
push
nop
hlt
call
inc
sub
repz
andl
adc
in
lock
es
andl
inc
jl
sub
add
push
in
or
out
or
in
dec
filds
and
push
out
ljmp
dec
cmp
xchg
pop
xchg
mov
mov
in
cmp
pusha
cmpsb
adc
mov
add
jb
push
push
sub
icebp
outsl
jge
push
cmp
pop
mov
repz
into
cs
stos
es
es
test
insl
ljmp
addr16
popa
es
ljmp
xchg
imulb
xchg
stos
sarb
aad
mov
clc
push
jo
pop
icebp
enter
jo
xchg
mov
into
xchg
or
pop
insb
add
push
mov
push
mov
pop
test
ljmp
or
hlt
pop
jae
push
rcr
mov
sbb
jmp
jnp
dec
adc
sahf
adc
xlat
mov
push
movsl
inc
sbb
sub
pushf
frstor
inc
roll
cwtl
push
lods
outsl
mov
fldln2
dec
jo
push
sbb
stos
dec
fidivs
lea
pop
ja
sbb
fcmove
xor
imul
mov
or
addr16
test
adcl
inc
rol
sbb
mov
aam
cmc
in
mov
sti
jns
insl
fwait
adc
dec
aaa
push
aad
jo
movsb
bndldx
cmc
stc
mov
jg
push
inc
sahf
lahf
mov
fwait
loopne
fists
mov
jg
pop
mov
fists
mov
int
mov
jb
outsb
insb
sub
mov
cld
sahf
lods
xchg
cmp
leave
jb
pushf
mov
jnp
ret
pop
pop
jae
mov
lret
and
jl
movsb
sbb
push
pop
mov
or
adc
fisubs
pop
lcall
sub
xlat
push
cwtl
rclb
into
sbb
enter
mov
mulb
movsb
mov
divb
loop
in
hlt
data16
and
and
jns
out
cld
jns
stos
or
xchg
adc
les
inc
or
test
mov
cmp
jecxz
fadds
int3
ret
fcomi
nop
arpl
pop
lock
mov
outsl
jae
mov
push
push
push
das
popa
imul
cli
add
int
imul
mov
outsb
mov
jmp
adc
int
mov
imul
and
mov
jmp
dec
sub
scas
add
pop
mov
pop
fwait
ds
mov
cmp
adc
cwtl
loop
pop
roll
mov
movsl
xor
mov
clc
or
jns
movsl
push
dec
fldl
insl
mov
add
lcall
out
and
ja
lahf
jb
inc
das
lea
dec
stos
js
fdivrl
cwtl
in
rcll
test
jmp
fcom
lods
xchg
push
mov
add
clc
icebp
icebp
pop
enter
pop
inc
cmp
add
lock
adcl
lock
mov
sbb
cmp
adc
mov
dec
cld
sub
adc
stc
add
sbb
insl
stos
or
imul
pusha
sbb
fdivs
add
jns
fcoml
mov
push
out
sub
adc
adc
mov
dec
xor
mov
les
mov
scas
inc
rcll
sbb
mov
adc
push
push
cld
inc
loopne
mov
xchg
iret
push
cmp
call
pop
leave
or
sub
cmp
push
js
adc
movsb
popa
mov
jno
cmp
fcompl
dec
jae
lds
or
scas
jbe
sub
or
dec
push
cmp
sbb
xor
clc
sub
call
push
incb
xchg
fcoml
data16
in
mov
popf
push
fmul
mov
xchg
out
das
out
pop
rorb
not
pop
dec
xchg
xor
stos
add
sub
push
mov
pop
nop/reserved
cltd
mov
js
add
add
leave
cwtl
std
dec
pop
or
enter
lds
arpl
fisttpl
jle
les
cmc
sub
xchg
lahf
ljmp
pusha
xlat
mov
dec
pop
xchg
test
inc
cmpsl
lcall
xor
sbb
dec
pop
fisubl
js
sub
and
push
js
pop
aad
outsl
xchg
dec
mov
ret
dec
adcl
fnsave
js
shl
lds
movsb
cmpsb
mov
fdivrl
cmp
test
movsl
sahf
mov
xchg
aam
loope
repz
daa
pop
adc
fiadds
imul
add
pop
test
sahf
adc
mov
adc
pop
int
push
ret
cmp
popa
adc
xchg
lock
xchg
test
cltd
lret
xchg
cmpsb
sbb
mov
stos
fldt
xor
sub
les
cmpsb
gs
js
inc
cmp
in
inc
test
out
andl
aas
hlt
jp
xchg
fwait
push
pop
inc
mov
or
dec
jnp
int3
mov
leave
inc
lahf
jle
sahf
aaa
xchg
inc
or
sub
negl
enter
repnz
fistpll
cmc
mov
dec
inc
push
test
mulb
inc
jmp
cmp
pop
xchg
cmp
lea
cmp
sahf
push
dec
aam
add
pop
test
hlt
sar
std
push
and
movsl
jns
stos
adc
cmpb
push
push
jl
jge
mov
xchg
mov
aad
iret
sbb
push
sub
aad
pop
loope
jbe
mov
loop
inc
int3
xlat
cltd
mov
ret
fistl
nop
add
ss
sar
jmp
fwait
lods
cli
mov
rclb
xor
xchg
inc
daa
add
addl
dec
push
test
aad
cmc
call
fwait
mov
mov
pop
mov
in
movsl
jnp
mov
or
inc
int3
lret
pop
test
lea
lahf
popa
ror
out
lock
into
inc
cmc
ljmp
mov
ud0
int3
add
jne
shr
jl
pop
cmp
or
std
fwait
out
lcall
fistps
test
sbb
inc
cmpsb
push
cmp
sbb
mov
add
pop
push
insl
fwait
repnz
clc
jae
repnz
pop
mov
dec
add
es
pop
iret
mov
jae
fisubl
cmp
mov
mov
pop
sti
dec
sbb
push
fdivl
jle
push
and
mov
xchg
cltd
add
hlt
fs
hlt
stos
jae
adc
pop
xchg
movsl
jo
and
inc
popf
jg
aad
in
mov
ljmp
adc
cmc
add
pop
or
insb
inc
cwtl
test
nop
xchg
push
cld
aad
das
dec
mov
fsts
js
mov
sbb
pop
insl
jecxz
shl
lcall
sbb
jnp
mov
cwtl
cmp
push
cli
notl
les
test
jae
pop
data16
add
sbb
pusha
push
mov
adc
imul
sahf
mov
sub
push
mov
sti
inc
pandn
into
dec
mov
test
mov
pop
sub
xchg
push
or
xor
jle
call
add
fadds
out
jle
jnp
or
incl
xor
stos
mov
cld
jmp
addr16
imul
movsb
mov
icebp
lret
fsubl
push
jne
sbb
pop
jae
mov
insl
insl
and
flds
ficoml
mov
mov
add
dec
movsb
fisttpl
or
jne
scas
js
mov
fiadds
jns
rorb
loopne
incl
divl
pop
jl
mov
mov
push
mov
mov
lock
repnz
xor
inc
push
jnp
leave
push
xor
cltd
inc
fiadds
pop
sub
gs
ljmp
or
jecxz
or
lret
stos
out
dec
in
pusha
sbb
or
sub
leave
xchg
mov
leave
cmp
push
and
loop
lock
dec
in
add
fs
cmp
cmp
xchg
loope
imul
push
stos
cmc
test
jg
mov
fnstenv
dec
push
inc
mov
adc
push
or
and
loope
jl
es
push
pop
out
sub
shl
std
sbb
shll
fcoms
sti
mov
adc
inc
movsb
das
sub
jge
stc
xlat
fsubrl
dec
adc
icebp
mov
xchg
lcall
and
jle
sar
mov
lcall
mov
inc
dec
lods
fwait
mov
push
dec
sub
jns
push
out
xor
sbb
daa
out
decl
pop
or
cmc
cmp
inc
pop
sub
insb
jmp
mov
xchg
addr16
jne
jle
adc
xchg
push
sub
mov
inc
pushf
stos
inc
jae
aad
sbb
xchg
outsl
popf
call
ds
sti
mov
jb
sbb
jge
mov
mov
fcompl
scas
lcall
push
jmp
nop
jae
pop
lcall
mov
outsl
and
xchg
push
cwtl
ret
jmp
es
and
add
scas
ss
jb
jg
lahf
stos
or
stos
cmp
mov
fimull
test
xchg
jb
xchg
cmp
inc
jo
imul
add
daa
jl
in
pop
sbb
dec
push
jnp
jbe
adc
cmp
cwtl
jle
push
lahf
cmpsb
mov
inc
insb
dec
push
imul
mov
adc
fbstp
push
insl
cmpsb
shlb
push
inc
adc
addr16
dec
jmp
ds
jo
repnz
jno
jb
mov
stos
mov
in
or
aam
sbb
inc
pop
mov
enter
loope
xor
and
jle
jno
fldl2e
outsb
mov
js
imul
jns
xor
in
clc
cs
inc
in
xchg
insl
fnsave
fcmovb
mov
fwait
or
divb
jl
pop
and
fldenv
fadds
aad
insl
js
lods
inc
mov
xor
dec
mov
repnz
sub
add
leave
int
add
jae
in
mov
adc
mov
jne
pop
jnp
mov
jle
jne
vcvtsd2si
in
fadds
pop
jl
gs
rep
and
lods
mov
test
sbb
cvtps2pi
cmpsb
cmp
lds
ficoms
je
fbld
dec
lods
jbe
cmp
cmp
adc
movsl
jmp
cltd
cmp
xor
or
sbb
mov
loopne
dec
aas
cmp
imul
sbb
mov
xor
jno
mov
nop
mov
sub
aaa
imul
jne
les
jb
dec
xchg
ret
cmp
pop
imul
test
mov
xchg
mov
cmp
push
test
movsl
mov
mov
sbb
cld
imul
add
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
lret
pop
popf
jmp
adcl
addl
xchg
and
xor
xorb
xchg
push
add
call
fildl
dec
nop
inc
test
xchg
jmp
mov
mov
sbb
lcall
and
in
lea
fisubrs
lock
mov
sete
mov
outsb
test
add
inc
jo
mov
pop
or
dec
sti
lods
or
push
cmp
lret
mov
inc
pop
ret
inc
or
and
push
in
ficoml
xor
sbbb
in
jb
in
call
and
shrl
dec
sbb
xchg
fistl
push
mov
sub
sub
lds
scas
loopne
add
test
cmp
inc
sub
push
in
movl
sub
xor
pop
sub
xchg
rorb
shr
dec
sbb
jl
xor
mov
iret
ficoml
mov
xchg
cs
cli
aad
mov
je
inc
sarl
pop
adc
xchg
mov
pusha
fstpl
add
or
mov
fidivl
pusha
movsl
leave
mov
sub
data16
jp
mov
add
lock
pop
shlb
sbb
fwait
pop
sti
add
xchg
ja
adc
cmp
loope
sub
xchg
add
sub
dec
mov
cmpsb
outsb
xchg
es
int
rcrb
pop
imul
push
pop
pop
mov
sub
lahf
mov
dec
arpl
out
or
sbb
fcmove
clc
mov
popf
insl
inc
add
data16
clc
mov
mov
inc
nop
fisttps
insb
jecxz
jge
and
loopne
dec
mov
iret
shl
jnp
iret
cmp
cmp
push
or
call
outsb
xor
lods
add
mov
dec
loopne
or
scas
ss
cld
sbb
inc
leave
fisubrl
mov
ret
lock
cmp
push
scas
fs
stos
add
lods
mov
std
or
sbb
or
mov
loopne
push
cmpsb
sbb
fucomip
sti
subb
jbe
inc
xor
dec
dec
mov
xorb
cmpsl
adc
jg
add
pop
repnz
mov
add
mov
mov
add
mov
cmp
jle
xor
stos
test
cwtl
ss
scas
cmp
in
data16
mov
lret
xchg
sbb
insl
insb
mov
xor
ret
arpl
add
add
outsl
sti
mov
imul
xchg
inc
addr16
popf
es
xor
or
fldenv
dec
xlat
inc
jae
lret
fstpt
jbe
inc
inc
test
enter
ja
sbb
iret
mov
mov
jb
std
rcll
jmp
inc
fldenv
dec
cmp
bound
dec
pop
fs
incl
addl
and
push
add
pop
and
out
lock
cmp
nop
push
add
mov
xchg
outsb
inc
fs
dec
ljmp
mov
add
push
stos
cld
push
mov
adc
adc
lret
sbb
orb
cltd
movsl
and
insl
cmp
xchg
icebp
jae
lods
pusha
lret
cltd
jb
cltd
sub
fwait
mov
xchg
pop
repnz
pop
cmp
jp
rorb
or
dec
mov
xchg
pop
imul
sbb
add
inc
incb
push
cmp
xor
sbb
mov
fnstcw
xchg
add
les
cmpsl
cmp
loop
clc
iret
mov
inc
jo
les
pop
leave
xchg
inc
push
out
inc
inc
xchg
or
lds
mov
test
mov
leave
mov
xor
inc
or
or
lods
xchg
or
pushf
xor
pop
sbb
dec
lds
push
icebp
mov
lret
sub
sbb
mov
and
andb
fldl
mov
inc
xlat
push
xor
mov
cmp
fnsave
enter
stos
in
sbb
shlb
mov
loop
vmwrite
xchg
lret
pop
loopne
sub
inc
aas
lea
and
cwtl
mov
out
stc
imul
cmp
inc
repnz
cld
push
lock
jne,pn
fs
add
movsb
lahf
sub
cmp
outsb
pusha
in
inc
pop
mov
lock
cmp
das
sbb
arpl
ss
call
fwait
xor
jge
popf
sahf
lea
ret
and
xchg
jecxz
stc
pop
cmc
lret
mov
sti
jo
xchg
push
dec
sbb
mov
and
inc
adc
pop
pop
cld
hlt
popa
fsubs
and
ret
stos
dec
int3
pop
lods
sahf
ret
cli
inc
aaa
sub
stos
incb
dec
add
into
or
pusha
mov
xchg
out
push
inc
mov
repz
push
xchg
cltd
cmpsb
shlb
pop
test
mov
cs
adc
cltd
or
jg
data16
dec
subl
je
jmp
nop
mov
ds
mov
cmp
add
sbb
andb
pop
dec
cwtl
or
jb
inc
cltd
cmpsb
dec
sbb
mov
int
lock
add
pop
adc
push
mov
dec
jbe
xor
pop
push
bound
popf
in
adc
and
dec
jne
arpl
ficompl
ret
jnp
and
xor
lods
lock
loopne
sti
cmc
xor
mov
xlat
push
movb
mov
mov
js
jge
in
xchg
or
jns
fbstp
stc
rcr
pop
mov
or
cld
jecxz
xor
aam
jnp
cmc
and
inc
adc
shl
pcmpgtb
aaa
test
mov
inc
fsts
xor
xor
subb
rcrb
push
jge
jg
or
dec
mov
lea
xchg
or
dec
push
add
ljmp
bound
mov
mov
call
stc
sub
aas
test
jnp
sub
mov
push
pop
int
mov
aam
push
cld
icebp
ljmp
fs
cmp
cmp
adc
rcrl
pop
push
iret
out
outsl
or
scas
ljmp
cmpsb
int3
lahf
icebp
mov
icebp
adc
jecxz
add
sqrtps
pop
pop
ret
xchg
dec
sub
jg
add
cltd
adc
xchg
jae
aad
loope
mov
test
jmp
aaa
mov
cli
cmp
test
pop
divb
mov
std
sar
jl
xchg
cs
popf
push
ja
cmp
test
call
gs
nop
insl
and
arpl
stc
hlt
push
loop
or
cmpb
jp
flds
fists
lods
adc
das
std
mov
pop
cmc
out
lret
cmpsl
imul
xchg
cs
repnz
fstps
push
sbb
adc
xor
xlat
cli
pop
mov
inc
roll
andb
mov
mov
ja
ljmp
cmp
sbb
rclb
std
shlb
pop
jmp
or
ficompl
aaa
leave
or
cli
inc
into
inc
jo
bound
and
sub
out
lds
mov
push
in
xchg
or
push
sbb
or
fdivrs
or
add
fcomi
cmpsl
mov
scas
xchg
aam
orl
jg
lds
rorb
hlt
pushf
cli
fldl
enter
lret
pop
nop
incl
sti
cmp
sub
push
inc
cli
pop
movsl
mov
lret
jmp
pusha
stos
push
mov
jo
add
push
and
adcl
push
fisttpl
push
aam
sub
ds
lret
mov
push
add
jbe
leave
testb
and
fsts
add
push
cmc
outsl
fnstsw
orb
xchg
mov
sti
pop
add
mov
lahf
cmp
cld
sbb
pop
sbb
jb
jmp
fsubrl
jnp
test
aaa
mov
in
es
popf
sbb
adc
fwait
mov
not
fdivr
dec
push
inc
add
pushf
ret
jno
nop
lret
lods
mov
in
lea
int3
sbb
xchg
sub
push
in
cmp
mov
mov
pop
cmp
aaa
lods
mov
or
dec
stos
xor
push
mov
mov
mov
test
jge
adc
bound
cld
jge
push
push
mov
xchg
push
cmp
outsl
sub
lea
divb
je
out
mov
mov
and
ret
cmp
inc
xchg
push
push
dec
stos
fsts
mov
popf
pop
imul
push
orb
xchg
andb
pop
cmp
lock
inc
mov
and
pop
push
cmpsl
in
fcomi
jecxz
lea
es
sbb
push
sub
popf
mov
inc
ret
cltd
xchg
popf
jp
aaa
mov
repz
add
out
pusha
dec
gs
dec
mov
push
dec
sbb
roll
jecxz
xchg
pushf
dec
fstp
adc
xchg
ret
out
aas
xor
movsb
sbb
gs
and
es
dec
fistpll
addl
gs
cmp
dec
roll
ss
rorb
stos
dec
shl
cmp
sub
aad
push
out
js
xor
push
cmpsb
int3
or
push
sbb
jmp
flds
xchg
add
fwait
sub
mov
cmp
aad
adc
fsts
push
mov
hlt
inc
mov
cs
jb
outsl
mov
sub
imul
mov
mov
mov
call
jae
lea
mov
jl
fwait
test
mov
test
bound
mov
mov
jne
mov
rolb
nop
xor
cmp
add
or
push
pusha
cmp
cmc
adc
pop
mov
and
and
repz
mov
ja
in
in
ja
mov
push
pop
shr
jnp
push
jne
inc
xor
stos
push
or
push
inc
pop
sub
and
inc
jp
ficoms
out
ja
int3
andb
lret
dec
ss
mov
sub
out
xchg
cmp
stc
xchg
aaa
mov
out
add
xor
push
subl
sti
rol
jae
cmp
and
popf
lock
dec
xchg
and
xor
mov
lret
dec
add
cmpsl
fcmovnb
hlt
ss
in
in
pusha
or
ficoml
fidivrs
cmpb
push
cmp
pop
mov
mov
in
pop
ljmp
adc
int
addr16
hlt
lea
orl
jae
pop
jmp
dec
icebp
inc
and
pusha
add
jg
sbb
sub
xchg
addl
outsl
out
rcrb
cmp
push
xor
cwtl
cmp
les
inc
jb
cmpsl
jge
add
pop
push
pop
push
mov
mov
mov
aas
in
cmp
lcall
adc
ss
add
out
in
cmp
divl
jecxz
mov
cltd
outsb
jmp
iret
sbb
dec
push
int3
xchg
jp
outsb
xorb
xor
adc
xchg
xchg
adc
nop
aas
fimull
aaa
mov
sahf
xchg
cwtl
aaa
sti
out
shlb
pop
mov
mov
int3
std
add
repnz
xchg
add
push
mov
xor
loopne
dec
xchg
pop
sub
aam
dec
out
pop
addr16
cli
jmp
rcll
mov
rcrb
dec
push
mov
pushf
push
push
sbb
jp
mov
inc
lahf
jae
lods
je
jbe
faddp
pop
lock
push
or
push
mov
add
mov
jge
and
fimuls
ljmp
rcrb
mov
mov
xchg
aam
fiadds
test
ds
out
fnstsw
xor
xchg
and
lret
aas
jmp
hlt
insl
ljmp
and
arpl
das
addr16
mov
nop
into
push
cltd
xchg
stos
dec
inc
mov
and
rclb
shr
jns
mov
xchg
xor
inc
testb
testl
pop
in
xor
jns
push
mov
dec
add
std
js
jp
mov
and
movsb
ds
xor
lret
jne
pop
lcall
mov
mov
or
mov
cmp
outsl
inc
test
js
mov
cmp
les
lds
loope
jg
xchg
xlat
lahf
fldenv
inc
xchg
fwait
hlt
pop
fsubs
movsl
clc
int3
jg
sahf
gs
mov
or
lcall
fisubl
aad
test
and
cmpl
test
iret
xor
arpl
push
jb
jns
xchg
addr16
jle
push
adcl
mov
sub
fs
mov
pop
pop
dec
pop
dec
inc
std
xchg
or
jg
mov
xchg
cmp
pop
test
sbb
shll
imul
or
xchg
pop
sbb
repz
sbb
sub
push
fdivr
enter
pop
sbb
ret
push
flds
idivb
jl
dec
sub
insl
xor
dec
fucomi
lods
scas
divb
mov
loop
sub
cmp
inc
gs
xor
test
mov
jo
fsubrs
stos
and
shrb
pop
or
addr16
cltd
adc
clc
mov
pop
cld
inc
push
jmp
mov
mov
repz
cld
mov
mov
ds
outsl
add
insl
dec
cmovns
mov
daa
mov
mov
dec
add
mov
jb
in
stos
xchg
push
mov
mov
iret
mov
mov
jnp
fs
and
and
cmpl
push
stos
mov
pop
rcll
ljmp
sbbb
rol
mov
adc
lret
movsb
xor
shl
jne
mov
loop
stc
out
mov
iret
clc
sbb
mov
sbb
push
cmp
cld
out
imul
arpl
jg
sub
xlat
sbb
lret
cmpsb
aas
xlat
mov
mov
sub
orb
insb
xchg
xor
inc
dec
sub
dec
aas
mov
xchg
jns
sahf
jns
daa
call
cld
pop
leave
mov
insl
lods
push
xchg
cmc
cltd
lds
xor
pop
insl
mov
cs
push
outsb
cmp
pop
mov
rolb
inc
fstl
jne
adc
mov
vminpd
cld
test
xor
call
notl
xor
in
mov
mov
push
cli
cmp
fst
adc
mov
jbe
xor
xchg
inc
imul
xor
pop
dec
pop
jno
shr
xchg
fimull
nop
push
mov
popa
jno
mov
mov
imul
loope
dec
imul
stos
jbe
pop
aas
aad
jl
push
jnp
add
or
fidivl
rorb
loopne
arpl
daa
inc
inc
add
pop
mov
inc
push
and
les
add
and
jbe
cmpl
mov
fdecstp
scas
add
mov
jmp
adc
dec
jecxz
or
or
or
xor
push
cwtl
fildll
mov
sti
jnp
addb
mov
pusha
and
inc
cltd
and
mov
sbb
cmpsl
inc
cmp
int
clc
sub
int3
mov
mov
imul
mov
sarl
pop
xor
push
sub
ja
mov
gs
dec
pushf
mov
dec
leave
scas
sti
and
xor
addr16
push
and
mov
les
call
lods
aad
scas
cmc
push
push
xor
adc
stc
rcrb
sbb
mov
sahf
inc
jmp
mov
push
pop
cmp
rcr
lcall
or
sbb
rcrl
dec
add
push
gs
pushfw
dec
lretw
jbe
jl
pushaw
fisttpll
sub
out
xchg
push
sbb
int
mov
lock
inc
and
addl
pop
decb
lock
adcb
or
sbb
sarb
jecxz
adcl
loop
mov
inc
outsl
testl
fmul
mov
stc
sbb
sahf
cld
dec
push
mov
dec
popa
outsb
addr16
lcall
jnp
out
mov
shll
icebp
insb
les
cmp
test
jno
fidivrl
int3
xor
jb
mov
outsb
dec
xor
stos
mov
test
shl
xchg
or
int
stos
icebp
into
addr16
outsl
pusha
popa
test
pop
dec
pop
mov
inc
mov
in
les
and
sub
test
push
cmp
lret
inc
lret
scas
xlat
jae
inc
mov
int3
stc
mov
pusha
in
rcrl
dec
orl
dec
xor
jp
xor
or
ja
out
pop
ss
bound
and
push
xor
mov
and
ds
call
add
lahf
cmpsl
hlt
xchg
pop
mov
jns
xor
int
jnp
mov
or
fstps
bound
mov
add
mov
movsl
test
scas
stos
cmpl
stos
lret
incl
bound
sub
add
int3
das
call
stc
cmc
movsl
sub
aaa
pop
pop
and
cli
mov
sub
rcl
or
insb
mov
push
lods
push
scas
loope
or
jmp
push
lea
pop
jbe
mov
sub
cmp
addr16
and
cmc
lea
xor
pop
cmp
dec
int
rorb
ja
push
inc
push
fistps
mov
push
sbb
rcrl
daa
push
sbb
out
cltd
ja
push
inc
push
sub
sbb
loopne
sbbb
push
adc
jle
fists
and
mov
cs
xchg
roll
jae
ljmp
fidivl
push
inc
fmulp
and
iret
out
ret
mov
pop
loop
lahf
loope
and
mov
xor
adc
pop
sti
xchg
xchg
or
mov
imul
dec
xlat
popf
flds
or
insl
pusha
pop
nop
cmp
xor
int3
popf
mov
lret
mov
fistpll
add
sub
push
in
cld
stc
dec
mov
cvtps2pi
or
or
addr16
dec
lods
cli
pop
das
scas
shll
and
xchg
push
or
pop
dec
or
or
cltd
lds
xchg
and
cmpsb
shr
add
or
pop
jo
mov
cmp
in
mov
push
and
cwtl
push
push
xchg
push
nop
pusha
stos
aas
cld
lahf
or
jecxz
pop
cltd
jle
pop
xchg
jae
xchg
movsb
frstor
lods
leave
xchg
and
je
pop
xlat
lods
mov
sub
xchg
xor
cmp
xor
adc
outsl
mov
xor
cmp
and
iret
jge
inc
stc
pusha
insb
jno
mov
mov
mov
inc
gs
push
test
stc
pop
mov
outsl
xlat
stos
adc
filds
xor
int3
dec
dec
cmp
push
jecxz
cmpsb
sub
push
or
dec
mov
lods
sbb
ret
cld
les
out
sbb
adc
adc
xor
jbe
sub
rol
adc
daa
push
cmpb
jmp
push
push
push
cwtl
lods
jp
cmp
xor
shlb
pop
dec
jbe
dec
das
mov
inc
dec
add
mov
xchg
add
pop
call
push
xor
jo
popf
jp
fdivp
mov
pop
negb
jmp
lods
pop
and
out
xor
notl
dec
mov
sub
mov
xchg
fcomps
orl
or
xchg
xchg
aas
adc
aad
sub
mov
int3
clc
sub
adc
call
scas
cmp
mov
push
xor
arpl
cld
mov
lcall
mov
inc
push
xor
adc
push
dec
mov
cmp
lret
jno
cld
push
test
jno
jno
cmc
push
mov
cmpsl
imul
adc
xchg
mov
mov
enter
mov
iret
adc
std
lock
xchg
ret
daa
es
pop
test
mov
mov
pop
loop
or
mov
shl
cltd
add
mov
enter
stos
mov
mov
adc
insb
outsw
lcall
sub
adc
imulb
sahf
daa
loop
insl
adc
cmp
jg
xor
sub
jl
and
ljmp
inc
cmp
aas
dec
jo
arpl
in
adc
mov
dec
jmp
mov
sub
xor
mov
iret
dec
shlb
stos
hlt
sbb
rolb
fidivrs
aam
sub
mov
add
movsb
es
dec
add
xor
pop
mov
mov
dec
or
lock
enter
adc
mov
push
mov
xor
pop
sub
shl
bound
mov
stos
mov
push
inc
rcrl
mov
jmp
repz
xorb
lock
daa
pop
mov
add
adc
mov
test
movsl
je
cld
mov
cmp
jno
int3
fimull
push
roll
mov
aas
aas
inc
inc
stos
adc
mov
inc
sub
push
loopw
ret
add
mov
in
test
xor
push
lret
fldt
mov
outsl
jno
push
inc
pop
scas
nop
adc
adc
bound
cmpsb
sub
or
adc
shrl
or
xor
fptan
ret
test
cmp
gs
test
or
lods
repz
and
aas
mov
adc
ret
push
cmovl
push
and
pop
push
dec
cmp
movsl
dec
xchg
rolb
fiadds
aas
push
stos
test
addr16
mov
xchg
int3
fsubrs
cmp
inc
push
aas
scas
inc
push
testl
jae
addb
jno
std
or
leave
add
jbe,pt
cmpsl
repnz
clc
adc
mov
mov
mov
and
sub
xchg
cmpsb
loopne
sbb
cs
int3
insl
jmp
sahf
xchg
or
pop
xchg
stos
add
daa
mov
push
je
popl
mov
ret
sbb
add
xchg
bound
bsr
lret
mov
sbb
jle
inc
lret
adc
jne
scas
int3
ljmp
jecxz
adc
test
xor
sarb
test
lret
or
icebp
aaa
out
jmp
inc
loop
mov
jmp
cmp
mov
mov
push
arpl
and
inc
xchg
pop
das
jp
jecxz
mov
xor
xor
in
jns
jb
push
ficompl
outsb
cmp
test
xorl
sub
fsubrp
xor
adc
mov
jl
jg
lcall
pop
add
daa
mov
pop
lods
xchg
and
pop
cmc
mov
out
pop
adc
mov
hlt
mov
add
popa
int3
or
mov
mov
loope
push
fnstenv
push
sub
sbb
and
cwtl
pop
pop
divb
bound
mov
scas
iret
shrb
int
sahf
pop
jae
xlat
mov
jge
movsb
add
adcb
pop
insl
insb
jl
iret
xchg
pop
testl
mov
in
cmpsb
jg
and
mov
inc
pusha
cltd
sub
addl
lret
clc
arpl
cld
outsb
lea
loop
in
xchg
mov
push
pop
mov
lds
inc
mov
cmpsl
mov
mov
adc
mov
sbb
es
mov
pop
jae
or
addr16
jmp
aam
leave
xchg
sub
enter
sbb
mov
mov
push
jmp
pop
fs
fcmovu
popa
mov
popf
pop
push
icebp
lods
inc
popf
mov
inc
lods
mov
sbb
sarb
pop
push
dec
inc
fsubl
aaa
fiaddl
push
clc
jg
mov
fisubs
inc
lods
sbb
cmp
lret
daa
mov
in
loopne
inc
push
idivl
idiv
leave
sbb
and
mov
fists
mov
movsb
in
dec
das
pop
imul
scas
ljmp
movsl
mov
xchg
xor
pop
sarb
mov
cwtl
xchg
popf
repz
and
pop
sbb
xchg
pop
lods
insb
aaa
imul
arpl
mov
xchg
out
ror
sahf
shrl
inc
cmpsl
in
sbb
jge
std
mov
lds
test
add
popf
xor
icebp
add
jge
or
cmpl
pop
sub
and
cmp
cld
out
cmpsl
pop
ficoml
movsl
and
adc
sub
call
aad
scas
rolb
ficoml
mov
pop
popa
mov
std
mov
loop
xlat
xor
enter
cwtl
push
ljmp
xchg
mov
push
into
jne
fbstp
push
outsl
pop
adc
sub
hlt
lret
addr16
mov
inc
bound
popa
mov
mov
ss
jo
movsb
xor
sub
jg
test
xor
sub
mov
pop
das
jne
out
mov
mov
stc
sbb
add
dec
fs
ss
cwtl
or
cmpsb
test
fistpl
sbb
sbb
push
push
out
test
in
add
std
out
in
xor
aaa
add
call
fcomp
out
xorl
ds
icebp
jg
dec
ss
xchg
iret
dec
int3
cmp
jg
flds
xchg
cld
push
mov
loopne
and
pop
shrl
add
lods
sbb
aam
mov
sbb
ljmp
adc
movlps
lea
jae
fsubl
shlb
iret
sbb
shrd
dec
xor
adcl
or
mov
lahf
inc
add
lock
cmp
aas
sbb
test
lock
outsl
jo
and
mov
jbe
jo
jle
shll
push
scas
insl
inc
shll
push
push
sti
andl
pop
loop
cltd
insb
xor
or
out
or
sbb
push
rclb
in
or
jbe
mov
push
xlat
lods
cmp
or
mov
sub
fsubrs
es
imul
cmp
in
adc
aas
xchg
mov
and
push
inc
enter
inc
nop
jmp
outsb
ret
sub
rcll
mov
sub
mov
sahf
lret
out
ds
lret
push
inc
inc
mov
dec
or
and
cmp
fdivrp
lahf
dec
ret
xadd
arpl
sbb
sahf
divl
lahf
push
sbb
and
cmc
shlb
fsubl
cld
mov
cld
icebp
lcall
sbb
cs
mov
mov
test
faddl
cmp
dec
cmp
ret
aas
jne
or
out
js
lds
arpl
shrb
push
hlt
stos
rcrb
cmp
int3
mov
inc
mov
ficomps
push
hlt
mov
mov
sub
movsl
fs
mov
ja
jge
push
push
pop
rcrb
mov
leave
adcl
and
scas
pop
ret
inc
js
js
call
pop
pop
jp
call
movsb
jecxz
lea
dec
fdecstp
pop
adc
cmc
mov
cs
frstor
sarl
push
adc
push
add
mov
stc
fildl
sbb
push
push
rol
out
shrl
dec
mov
arpl
popa
dec
aaa
add
jae
es
fcomps
xor
inc
stc
fistps
dec
fs
rcrb
xchg
arpl
mov
jns
or
fcoml
mov
sub
cmp
pushf
or
xor
add
clc
and
cmp
sbb
andl
into
fstps
jmp
aas
push
mov
int
add
inc
ds
or
push
and
clc
xchg
in
xchg
fwait
sti
jne
shll
sbb
xchg
clc
inc
or
sahf
mov
outsb
fdivs
add
jl
popa
ds
mov
sub
imul
xor
fsubs
push
out
dec
leave
dec
mov
push
das
cmpb
jne
leave
sbb
xchg
inc
mov
xchg
lret
xchg
add
push
lcall
add
lods
in
arpl
sbb
movsl
or
ljmp
pop
cli
stc
cs
adc
or
mov
or
setg
add
mov
fs
sub
fcoms
pushf
cmpsl
mov
sbb
ja
test
clc
pop
movsb
call
loope
xor
fcmovu
xor
pop
popf
mov
fisttps
jae
adc
jnp
hlt
pop
out
jno
fcompl
xchg
dec
loop
mov
stc
icebp
lret
mov
push
jnp
leave
mov
arpl
test
adc
or
mov
dec
xchg
bound
loopne
adc
jns
sbb
fcmove
xlat
sub
jo
dec
jge
and
pushf
and
ret
or
mov
jge
lcall
push
mov
gs
fdivrs
sbb
out
mov
data16
testb
cmp
aas
add
mov
xchg
push
mov
adc
ljmp
jp
jl
dec
inc
fisubrl
in
pop
inc
imull
mov
jae
push
adc
imul
jns
imul
pop
and
subb
cld
adc
fcoms
aas
jne
cmp
mov
inc
cli
mov
add
jg
ret
shl
mov
pop
push
mov
mov
xchg
add
fldl
test
imul
pop
sbb
rolb
sub
jecxz
push
push
lret
dec
mov
shrl
mov
add
inc
repz
mov
cli
mov
xchg
and
dec
jno
fcmovbe
push
pop
out
leave
push
icebp
jae
cltd
int
pop
cmpsl
or
out
jnp
mov
ljmp
imul
xchg
sub
or
rcr
aaa
mov
or
jne
push
or
inc
sub
or
int3
fisttpll
test
dec
lock
xor
mov
mov
out
pop
je
jl
test
sub
test
scas
mov
lahf
aas
push
cmp
lahf
push
sub
in
cmp
out
idiv
or
mov
pusha
mov
sub
shlb
and
out
mov
loopne
fidivrl
repz
adc
faddl
sbb
jl
addr16
add
mov
shll
mov
pop
add
inc
cmp
fmul
xlat
pop
dec
call
mov
fs
jne
gs
into
adc
push
test
pop
push
pop
add
test
pusha
xor
fs
lea
imul
mov
hlt
sbb
or
mov
scas
xor
sub
sub
jmp
adc
test
mov
add
xchg
inc
addb
add
sub
push
stc
push
pop
imul
cltd
ret
push
sub
push
mov
repz
fstps
sub
insl
pop
mov
xchg
inc
and
test
rolb
jg
mov
call
pop
or
inc
testl
aaa
or
push
push
jle
test
aad
inc
add
inc
pop
and
lret
and
out
and
jo
pop
aas
dec
xor
jmp
and
dec
mov
mov
fldenv
mov
sbb
addb
in
pop
jbe
outsb
lods
jle
sbb
outsb
push
xchg
mov
mov
pop
cld
lock
sub
divl
adcl
and
cmp
cmc
fldenv
push
dec
sti
inc
test
filds
add
sbb
into
jp
call
mov
add
movsb
mov
call
mov
sbb
jmp
mov
push
push
shll
mov
push
pop
movsb
rorb
stos
xor
inc
inc
das
jno
cwtl
idiv
fildll
nop
lahf
lods
ret
loopne
xlat
pop
or
cmp
or
jb
mov
xor
fistps
push
ljmp
push
jmp
mov
std
pushf
xchg
sbb
jo
nop
outsb
inc
sub
fcoml
mov
xchg
sub
jns
inc
push
inc
push
inc
movsb
lahf
xor
sbb
fwait
mov
jne
shr
cmpsb
imul
popf
in
mov
sbb
in
lods
mov
jne
push
pop
cli
or
movsl
lret
push
xor
out
add
xchg
enter
aas
adc
cltd
js
cs
jnp
in
pop
sahf
or
or
jp
xchg
sti
inc
dec
int
or
stc
ds
fcompl
sub
pop
xchg
mov
mov
lahf
pop
pop
popa
mov
xor
fs
xchg
dec
sub
sbb
push
fsub
jo
sub
xor
push
push
adcl
or
lahf
loope
mov
cmp
stos
mov
xchg
fwait
sahf
inc
mov
call
fcmovne
push
push
mov
sbb
cmp
in
scas
stos
push
insb
adc
test
and
mov
std
push
lds
jg
lret
sub
mov
test
or
push
inc
mov
test
and
nop
jo
ss
cmp
and
cmpl
mov
into
js
out
xlat
icebp
jle
aaa
insl
mov
cmp
pop
xor
jg
inc
test
sub
xchg
cmp
mov
pop
movsb
int
sbb
pop
inc
xchg
pop
shll
test
ret
push
ds
xor
and
movsl
push
and
shlb
ljmp
loopne
test
jne
out
daa
mov
lods
stc
jmp
add
pop
add
inc
dec
in
adc
mov
imul
out
mov
shlb
enter
rcrl
lods
sar
pop
xorb
shlb
adc
test
mov
sbb
push
clc
lret
xchg
inc
fwait
js
enter
ljmp
cmpsl
shl
cmp
out
cmpsb
xor
mov
sub
mov
imul
mov
fld
addr16
mov
mov
push
pop
xchg
icebp
sbb
std
sub
inc
cli
aam
xchg
dec
mov
and
or
dec
aas
ss
push
and
out
pop
dec
mov
mov
cld
pop
stc
or
jp
cmp
iret
call
pop
iret
or
in
filds
shl
outsl
jb
jne
fcmovu
sub
mov
add
xor
dec
stc
aam
pop
mov
jg
and
inc
clc
std
mov
adcl
push
rolb
xor
js
xchg
push
jnp
movsl
test
push
shlb
push
jne
fisubrs
imul
lds
cmp
cld
cmpsl
or
aad
mov
xor
push
mov
sbb
cmp
mov
gs
insl
dec
sarb
int
mov
movsl
mov
cmp
leave
add
jecxz
mov
sub
sti
jge
aam
or
dec
scas
inc
and
sub
jae
or
jg
sar
or
sub
pop
clc
pop
pop
movl
jns
pop
in
testb
push
jb
aad
cmpsl
xchg
inc
push
fsubs
xchg
fidivs
sub
and
in
pusha
call
cmp
inc
cwtl
stos
jmp
mov
xor
cmp
dec
ss
movsb
in
je
shll
and
or
loope
jmp
dec
dec
xchg
lahf
idiv
dec
mov
push
popf
lds
out
inc
loop
rorb
jecxz
outsl
xchg
sti
in
clc
jb
das
pop
aas
into
scas
sub
es
das
faddl
add
arpl
in
fwait
add
shlb
inc
mov
loopne
inc
push
or
inc
cmp
cli
xor
adc
jns
repz
push
pop
pmaddwd
out
or
inc
data16
int3
rolb
jo
test
clc
pusha
addl
lret
stos
and
add
jne
push
xchg
adc
cld
jnp
mov
xorb
fcoml
loop
gs
jno
out
lock
fistps
setno
dec
inc
jp
mov
xlat
out
loop
dec
das
inc
les
mov
jmp
inc
jbe
sub
xchg
jbe
std
dec
stos
clc
jp
xchg
data16
pop
outsl
xchg
mov
in
jecxz
fldcw
imul
ret
xor
stc
test
add
pop
test
aam
inc
mov
fld
out
mov
pop
into
pop
dec
inc
pusha
lods
mov
sbb
lea
decl
les
mov
cmp
xor
jns
jge
imul
enter
arpl
out
cmp
fstpt
lret
inc
test
push
icebp
lcall
out
sti
mov
insb
fst
cmp
divl
out
xor
adc
das
cmp
lret
scas
mov
mov
mov
insl
inc
adc
jge
xchg
and
push
dec
pop
or
rcll
inc
push
dec
lret
add
shl
fs
pop
ret
push
pop
xchg
mov
repnz
push
out
jno
mov
xchg
jge
push
les
sub
and
arpl
rorl
jecxz
add
or
imul
out
or
mov
ret
inc
cmc
xchg
mov
adcl
rcll
insb
int
ds
xchg
mov
dec
pop
fdivs
js
pop
insl
add
push
xlat
fisttps
test
dec
cmc
cld
and
sbb
nop
pop
or
and
and
aaa
add
test
call
fildll
and
mov
jge
decb
xbegin
jle
sbb
sbb
repz
fdivr
scas
push
repnz
repz
pusha
insl
pop
xor
xlat
mov
in
cmp
nop
repz
icebp
jecxz
jp
pop
mov
cmovne
ret
movsl
in
jns
clc
sti
jmp
sahf
lods
or
das
pop
cmpsl
je
cmpsl
inc
jae
aas
movsb
jns
dec
push
lea
dec
push
jecxz
inc
outsb
ljmp
ret
mov
jmp
add
pop
or
mov
outsb
inc
cmp
xlat
fidivl
push
dec
dec
jo
sub
repz
stos
andb
jmp
pop
pop
daa
adc
dec
or
ret
inc
inc
insb
cmp
adc
hlt
xor
pop
add
test
imul
inc
lcall
mov
fwait
sub
mov
mov
mov
xlat
xor
xchg
pusha
in
ja
out
xchg
gs
out
pushl
adc
shlb
add
sbb
in
jb
ret
fidivrl
cwtl
adc
lahf
and
pushf
ftst
fistps
cmp
mov
push
add
xorl
mov
test
stc
xor
call
cmp
insl
into
repz
mov
sahf
loope
enter
lods
out
mov
cmc
adc
fidivl
pop
add
sub
cmpb
sbb
jno
push
daa
lret
sti
fnsave
cltd
lock
xchg
int3
shll
lahf
pop
jge
xchg
mov
ljmp
int
or
cmpsl
inc
pop
pop
xor
jle
ficoml
sub
add
aas
mov
pushf
cmpsb
xor
inc
call
sub
dec
push
sub
cwtl
sbb
arpl
lcall
add
xchg
and
je
or
mov
inc
jb
and
aam
bnd
mov
mov
mov
add
push
push
or
xor
icebp
mov
mov
pop
ja
aam
leave
sub
adc
adc
inc
mov
sahf
popf
mov
fistl
xchg
and
std
or
and
mov
sub
pop
mov
das
bound
jp
push
in
call
insb
dec
jns
add
mov
sub
in
xchg
push
add
outsb
jl
iret
jp
repnz
adc
in
pop
cmpsl
adc
gs
in
fwait
sub
shlb
sub
lret
outsb
cmp
add
std
mov
mov
sub
push
add
je
js
jmp
filds
mov
xchg
out
jae
jp
pop
inc
or
push
xor
in
icebp
xchg
inc
aaa
fisttpll
mov
lcall
mov
push
sahf
push
es
repnz
xchg
movsl
into
inc
dec
neg
js
imul
fnstsw
mov
jg
mov
addr16
lcall
pop
sub
mov
movb
lret
jmp
push
test
mov
aas
pop
jg
and
cmp
daa
imul
and
xor
dec
jnp
inc
sbb
mov
ds
imull
jae
jb
sahf
call
jno
lds
movsb
das
xor
jne
sahf
mov
lcall
mov
cltd
sub
aad
popa
or
sub
dec
ja
jb
jno
push
outsl
test
test
lods
push
leave
add
fisubrs
xchg
pop
mov
rcl
cmp
adc
pusha
or
cmp
jo
mov
xchg
push
sbb
mov
push
out
xchg
sbb
rclb
push
mov
gs
and
mov
xor
lahf
gs
cmpsl
cli
push
popa
mov
jae
sahf
mov
xor
inc
les
sahf
lret
loop
jmp
adc
je
sub
dec
shrb
mov
out
xchg
inc
add
lret
sub
inc
mov
mov
and
and
movsb
out
icebp
lock
nop
enter
imul
outsl
cmpsb
xchg
xlat
adc
ret
clc
jmp
jecxz
sub
push
pop
add
subb
xchg
iret
inc
sbb
mov
mov
pop
out
jns
fldt
sbb
mov
imul
stos
mov
cmp
mov
scas
popf
push
jecxz
xlat
mov
mov
cmc
jo
xor
adc
jne
das
jmp
in
gs
mov
push
pop
xlat
dec
jg
es
jl
in
inc
lcall
mov
jae
xchg
or
or
mov
insb
pop
lea
cli
and
adc
cltd
or
lds
popa
xchg
testl
nop
mov
mov
js
jmp
sub
inc
mov
pop
jge
adc
mov
roll
imulb
sub
shlb
ljmp
lret
notl
icebp
xchg
sub
rcr
lcall
shlb
stos
hlt
push
fcompl
jns
sarl
stc
and
lret
test
flds
lods
inc
adc
jo
ja
push
je
mov
dec
subl
cmpsb
xlat
push
lcall
dec
mov
loope
test
mov
sahf
lds
insb
push
nop
mov
xchg
add
pop
add
jp
mov
inc
mov
popa
scas
bound
pop
pop
push
sti
lcall
jp
cli
cmc
pusha
pop
les
fildl
pop
mov
sub
cmp
sbb
nop
pushf
stos
pop
mov
cwtl
imul
aad
push
pop
cmpsb
dec
sub
jo
and
fidivrl
popa
jae
ljmp
jne
loope
cli
mov
icebp
dec
jl
clc
lea
cmpsl
rolb
jecxz
xchg
and
push
ficompl
out
xchg
adc
pop
in
or
xlat
int3
imul
adc
popa
jge
insl
mov
sbb
test
add
hlt
inc
mov
adc
adc
jge
ror
jo
sub
iret
shrb
jg
jnp
inc
sbb
xor
dec
sahf
repz
xor
mov
out
mov
clc
and
inc
or
cs
mov
adc
in
aam
lock
pop
int3
dec
inc
sub
mov
and
xor
and
jmp
dec
jmp
pusha
insl
loopne
mov
popa
sub
jge
push
mov
add
dec
mov
push
aam
push
cmpb
lods
mov
addr16
ds
xor
or
jge
lret
out
inc
sub
jmp
mov
popa
cli
cmp
test
data16
mov
sahf
loopne
idivl
cmp
out
loopne
pushf
xchg
fcomps
xor
jg
mov
inc
mov
subb
jmp
push
sbb
xlat
mov
xchg
nop
dec
jle
lds
add
movsb
insl
sbb
push
sbb
adcb
push
pop
xchg
mov
adc
sub
mov
sub
or
imull
jne
xchg
outsl
adc
bound
sbbl
mov
into
push
push
jb
lea
outsb
lods
mov
or
inc
ja
mov
scas
cwtl
inc
les
mov
fsubrs
test
fs
rorb
jmp
ret
fdivs
repnz
xchg
jmp
mov
fnstenv
fs
imul
xlat
sbb
and
aam
js
loope
mov
lock
sbb
lret
imul
mov
pop
lret
test
xor
les
sti
cmp
cltd
mov
rcr
jp
daa
pop
lea
mov
icebp
add
push
dec
push
ds
bound
sub
imul
pop
lock
xor
iret
pushl
mov
jnp
icebp
mov
mov
add
pusha
xchg
leave
cmp
loopne
mov
repnz
push
lods
xchg
cs
and
add
out
push
inc
in
fidivrs
cmpxchg8b
push
and
push
jae
fstpt
dec
push
inc
mov
sub
xor
mov
sbbb
cmpsb
adc
das
ss
push
sbb
mov
inc
cmp
ljmp
mov
pushf
testb
outsl
mov
push
mov
or
mov
push
orl
arpl
nop
ds
sub
jns
xor
sbb
sbb
push
lods
xor
mov
pop
mov
movsb
fistpll
xchg
pop
push
adc
and
inc
jle
movsl
push
sbb
dec
flds
mov
mov
pop
inc
cmpsl
lahf
push
xor
aam
xor
sub
mov
cmp
push
push
std
mov
or
dec
shl
stos
xchg
xchg
aaa
hlt
hlt
jno
mov
sarb
daa
or
lcall
clc
cmpsb
inc
hlt
xor
iret
in
and
pop
cld
dec
pop
repz
aam
scas
andl
adc
das
fidivrs
xor
aaa
sub
sub
stc
mov
and
aad
dec
adc
test
clc
mov
pop
jge
scas
daa
rcr
cli
inc
cmp
sub
push
fucomip
test
cmp
pop
sub
adc
out
and
and
mov
mov
pop
cmpsl
xchg
sahf
test
dec
int
or
outsl
cmc
mov
jns
shll
pushf
adc
repz
add
mov
add
and
pop
xchg
sahf
data16
bndstx
test
es
mov
and
movsl
lcall
xchg
and
in
imul
and
sbb
cld
cmpsl
cmp
stos
push
test
jl
ja
inc
or
inc
mov
and
ss
ss
xchg
adc
dec
outsl
in
jg
mov
cmpsl
xor
xor
out
sub
push
cs
adc
xor
and
mov
pop
popa
stos
fidivrs
es
lret
movsb
jecxz
shrb
jbe
testl
xchg
pusha
outsb
and
cltd
int3
in
lret
ljmp
loopne
clc
shr
aaa
adc
xor
call
pusha
sbb
and
dec
jecxz
cltd
or
sbb
lods
ret
neg
add
push
stos
lret
outsb
fcoml
negl
dec
inc
nop
test
adcl
addr16
xchg
jo
fsubrs
dec
sbb
in
pop
sbb
and
xor
popa
mov
inc
mov
sbb
and
cmp
ja
bound
dec
lahf
orb
sarl
mov
jg
lea
dec
leave
jge
ds
leave
dec
daa
adc
stos
lods
pushl
pop
fisttps
xchg
lock
add
jbe
pop
loope
insb
lods
jmp
shll
dec
ret
sbb
sub
adc
stos
in
xchg
test
or
mov
jle
or
inc
add
cld
adc
enter
fcoms
lods
cld
xlat
outsl
add
mov
mov
or
jmp
frstor
push
lods
sub
mov
mov
add
jle
jle
cmpsl
js
andb
push
push
ljmp
setle
or
lock
mov
imul
cmp
mov
sbb
cmp
mov
and
add
xor
rcrl
shrb
in
das
dec
jbe
adc
dec
shll
xor
dec
pop
inc
call
out
mov
jb
mov
lods
scas
sbb
lods
mov
lret
jne
pop
leave
mov
movsl
mov
ss
inc
xchg
fwait
rclb
jns
xor
fsub
fs
pop
add
dec
or
filds
shrb
jl
stc
jl
push
arpl
lea
lea
pop
outsb
xchg
repz
dec
mov
out
inc
add
loop
mov
hlt
bnd
xor
or
aad
cmp
mov
out
lods
xor
sbb
push
shlb
outsb
xor
ss
loop
jge
pop
idivl
les
pop
push
nop
and
pushl
call
repnz
adcl
pop
into
jno
in
inc
sbb
sub
jne
mov
mov
orb
sbb
ret
flds
fwait
stc
dec
mov
push
mov
scas
push
es
mov
mov
data16
out
or
mov
push
in
fucom
adc
lahf
dec
dec
data16
mov
gs
sbb
outsl
aaa
in
inc
repnz
loopne
mov
add
icebp
mov
repnz
fcomip
dec
mov
mov
cmpsb
enter
sbbl
push
insb
dec
in
mov
out
xor
jl
iret
cs
lcall
pop
adc
mov
pop
fsubl
or
xchg
jmp
nop
sub
enter
mov
out
sar
sub
scas
mov
xchg
addr16
sub
shl
inc
movsb
xchg
push
jmp
mov
jns
imul
xor
stos
cmp
addr16
lcall
cmp
fimuls
pop
push
xchg
aam
insl
cmp
jmp
pop
mov
push
sti
ss
mov
mov
adc
aad
xchg
loopne
cwtl
ret
ja
out
jnp
xor
aaa
mov
popa
sub
ja
jns
sar
pusha
jge
fldcw
push
decb
mov
pop
jp
xrelease
sbbl
hlt
xchg
cwtl
ucomiss
inc
imul
xor
adc
addb
nop
arpl
leave
mov
jnp
shr
and
cmp
xor
push
pusha
cli
pop
add
mov
stos
jp
mulb
das
shrl
push
jmp
xor
test
jno
cmc
jmp
jns
test
push
int3
mov
jb
pcmpeqd
sbb
out
mov
aas
in
out
cmpb
scas
je
inc
push
xchg
movsl
movsb
aam
jns
lods
mov
xchg
xchg
mov
jns
pop
lahf
aas
and
jmp
pop
insb
repz
xchg
or
outsl
pop
jb
leave
mov
les
je
popf
iret
xor
cmp
loopne
sbb
insl
sub
lock
add
std
subl
movsl
outsl
sbb
jmp
nop
stos
mov
andb
sarl
cmp
push
mov
dec
xor
out
lret
aas
fs
cmp
fldenv
inc
mov
push
ljmp
mov
pop
outsl
or
inc
loopne
push
sti
jge
test
xor
adc
fisubs
xor
stos
or
pop
cwtl
insb
loopne
popf
push
or
inc
fs
scas
in
arpl
loopne
push
lcall
mov
clc
dec
jae
inc
daa
cwtl
or
popa
shrb
movaps
in
mov
jecxz
dec
ss
jns
in
add
lods
sub
mov
leave
xchg
inc
or
out
cli
or
repz
dec
rol
mov
int3
xchg
sbb
jb
and
fldenv
sub
sbb
popa
mov
adc
jnp
or
out
test
mov
fcom
callw
shrb
adc
add
ror
cmp
testb
jle
mov
mov
lods
and
jg
sub
jne
pop
pop
jmp
xchg
and
mov
mulb
rcrb
int3
or
cwtl
loop
xor
negl
xor
xor
add
les
inc
jmp
mov
sbb
arpl
scas
inc
cmpsb
iret
push
sbb
xchg
mov
mov
jne
in
ljmp
iret
ljmp
pushf
int
fcoml
testl
xor
add
aaa
cwtl
xchg
mov
xor
aas
out
mov
out
in
sub
movsl
andl
adc
xor
movsb
loop
cld
fcomps
dec
xchg
dec
inc
mov
adc
loopne
mov
pop
push
adc
inc
pop
loope
cmp
cmp
add
ret
es
jo
adc
pop
fs
out
jb
shrl
pop
leave
cmpsl
push
mov
test
js
movsl
adc
mov
cltd
mov
xchg
cmpb
hlt
dec
stc
inc
inc
xor
xor
pop
sub
mov
mov
subl
loopne
sbb
repz
jae
jge
pop
xor
pop
mov
jo
add
mov
aam
sbb
jecxz
lods
sbb
cli
or
iret
cwtl
bound
mov
push
loopne
pop
sub
pop
pop
or
jp
lods
cmp
dec
lret
or
ljmp
rcrb
pop
cltd
jno
mov
iret
icebp
mull
shl
mov
dec
and
sub
mov
sub
pop
repz
popa
in
adc
jmp
fs
test
stc
lret
dec
xchg
jb
mov
ss
dec
cmp
fistpll
mov
es
push
dec
mov
cmp
arpl
inc
out
sbb
xor
insl
inc
clc
dec
cmp
pop
fidivs
xor
dec
push
imul
cmp
inc
enter
dec
mov
push
xor
outsb
pop
popf
fnsave
mov
pop
inc
push
sbb
pop
dec
sti
data16
outsb
lahf
jl
outsl
stos
mov
pop
inc
mov
pop
fisubrl
int
inc
xchg
mov
inc
push
fsts
xor
jecxz
out
and
icebp
inc
adc
adc
pushf
pop
loopne
mov
adc
sbb
stos
shrl
je
xlat
sbb
nop
js
and
aad
lock
pusha
cltd
jle
xchg
sbb
pusha
inc
and
xor
mov
jne
dec
dec
movsb
adc
daa
stos
into
fldcw
mov
push
notl
inc
jge
cmpsb
mov
xor
cmp
add
adc
mov
aaa
add
cmpsl
xlat
push
clc
sub
mov
xchg
mov
pop
adc
mov
inc
dec
jbe
xchg
mov
lock
push
data16
push
push
mov
sub
scas
sub
dec
add
enter
fmull
or
rolb
mov
mov
mov
out
loope
jne
sub
fisubrs
stos
xchg
push
insb
in
iret
cmp
addl
sahf
test
fists
insl
rcrl
test
scas
xchg
movhps
in
sbbb
icebp
loope
psrlw
inc
cmp
das
sarl
aaa
dec
xchg
or
dec
out
ljmp
jp
pushf
test
sub
je
stc
jp
mov
pavgb
cli
roll
ds
xchg
sarl
pop
xchg
pop
mov
dec
push
ficomps
pop
mov
push
jb
push
adc
imul
jne
int
ret
xor
adc
mov
adc
ret
cmp
lods
push
fcomps
sbb
mov
pushf
sbb
ret
sub
mov
mov
dec
lret
jo
imulb
mov
adc
aas
fmull
ja
mov
pusha
fpatan
jle
mov
ss
and
dec
xchg
or
lret
orb
loop
hlt
mov
stos
add
jns
cmp
cltd
insl
push
jbe
out
pop
rclb
add
lods
cmp
inc
and
in
daa
mov
mov
adcl
and
pop
test
data16
sub
xchg
arpl
inc
pop
leave
push
inc
aam
into
iret
cs
stos
push
les
dec
or
xor
sbb
pop
inc
jb
in
push
in
dec
out
cmp
fistpll
mov
pop
add
inc
push
jmp
or
in
jl
sub
lcall
movsl
ljmp
or
out
andb
push
adc
jl
pop
call
stc
cmp
push
ret
rep
mov
shll
lahf
out
xor
push
inc
scas
jnp
cmpsl
jmp
imul
nop
das
das
scas
jge
sbb
sbb
or
xchg
cmp
repnz
stos
pop
pop
and
sbb
stos
xchg
add
jo
push
fs
mov
movsb
imul
or
push
popa
push
test
ljmp
lods
rol
fstpt
stc
stc
aad
lcall
lret
or
pushf
xchg
arpl
and
pop
decl
push
insb
out
jns
sub
cwtl
jne
addb
mov
xor
xchg
jg
jmp
notb
xchg
call
stos
cltd
mov
popa
lods
fwait
loop
inc
dec
push
dec
sahf
add
sti
mov
pusha
xchg
loope
mov
push
insl
fimuls
std
adc
ret
xor
dec
icebp
jl
sbb
push
xlat
adc
xor
push
cmpsb
or
add
ret
cltd
rcrb
mov
or
sbb
pop
push
test
sarb
cmpsb
jo
sub
cwtl
lock
and
push
cmpl
int3
loope
push
mov
data16
rolb
stos
enter
sarb
out
out
dec
test
fmulp
addr16
jmp
cli
lret
in
jle
hlt
jno
ja
and
das
and
jg
mov
push
outsl
test
testb
leave
outsl
mov
xor
or
lds
mov
fnstcw
fisttpl
dec
rclb
mov
cmc
mov
cli
int
lcall
std
jle
in
sbb
mov
jne
and
mov
mov
jbe
push
dec
dec
cwtl
dec
push
sbb
loope
test
cmpsl
shlb
inc
dec
out
mulb
shr
out
jp
fwait
loop
and
cmc
xor
push
xchg
dec
sub
and
fistps
mov
dec
mov
mov
pop
sbb
push
loope
mov
scas
cmp
cli
out
cmp
xchg
pop
das
push
push
lods
out
leave
js
lods
out
fsts
and
enter
adc
cwtl
mov
in
scas
adc
jp
mov
out
and
out
or
popf
sbb
mov
pop
sub
shlb
dec
sbb
inc
shlb
fsts
and
dec
fdivrl
xor
test
test
pusha
jne
and
outsb
jns
push
imul
xchg
ss
push
cld
pop
in
in
push
stos
into
mov
add
nop
popa
mov
sbb
xor
jg
xor
lods
nop
incl
sub
aad
cmp
gs
mov
repnz
adc
test
aam
ret
push
mov
pop
jnp
xor
orl
orb
cmpsb
push
xlat
sbb
and
pop
and
pop
jae
mov
clc
test
sub
push
repz
lret
shll
jne
mov
sbb
imul
fs
xchg
ret
dec
jmp
add
int3
mov
or
ret
pop
jbe
sbb
and
cmpsl
popf
adcl
dec
mov
fimull
mov
gs
iret
push
or
dec
test
or
insb
sub
jo
pusha
sbb
daa
rcrl
push
push
insb
jb
ret
or
and
xor
aam
mov
ret
lods
addr16
inc
inc
jae
xchg
add
aas
fisttpll
das
mov
dec
mov
hlt
test
in
mov
aad
cwtl
rorb
repz
rcrl
xchg
xchg
fsts
ja
aaa
inc
nop
in
inc
aas
push
rcll
stos
jno
dec
mov
aas
xor
loopne
cmpsb
jne
fldcw
lds
jg
imul
sbb
iret
sub
test
jns
cmp
sub
xor
xor
jnp
add
lods
pop
pop
movsl
fcom
gs
in
pop
or
insl
and
pop
adc
popf
push
inc
push
cmp
sbb
pop
ljmp
xchg
jb
xor
xchg
mov
xchg
jne
outsb
fadd
repnz
pop
sbb
popl
pop
repz
bound
sahf
in
dec
in
lods
mov
mov
jb
sbb
insl
sahf
mov
push
push
enter
inc
fnstcw
jl
and
xor
insb
inc
shlb
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
cmc
shrl
pop
pop
addl
movsl
fwait
adc
inc
sbb
and
bound
dec
gs
add
mov
or
or
imulb
dec
mov
cmp
jnp
sub
push
cmc
dec
pop
sahf
repz
xor
lahf
cmp
adc
jne
mov
cmp
addl
xchg
sbb
adcl
push
and
cli
sbb
push
stc
pop
jecxz
xchg
jl
mov
or
and
inc
fsubs
mov
cmp
jo
call
les
and
jns
mov
add
stos
jmp
enter
push
iret
xchg
int3
push
or
mov
je
mov
adc
jl
and
pushf
sbb
imul
xchg
ds
pop
cmpsl
dec
xor
scas
idiv
mov
fcomps
add
lahf
pop
mov
lods
pop
sbb
mov
pop
xor
sbb
add
inc
mov
daa
mov
mov
jp
test
mov
lds
mov
jmp
addr16
mull
hlt
stos
mov
inc
jmp
jns
adc
pop
cmp
into
leave
call
add
cmp
test
sahf
sti
into
fisttps
into
cmp
xor
insb
out
adc
mov
cld
sub
dec
fs
mov
std
pop
out
cmc
fists
add
insb
jmp
xor
lcall
inc
push
cli
dec
dec
int3
inc
sbb
mov
pop
pop
int
repz
call
push
stc
enter
pop
cltd
and
cli
imul
movsl
fs
mov
pop
rcr
push
pusha
sub
pop
pop
iret
insb
insb
or
mov
aam
jb
inc
cmp
imul
leave
enter
and
mov
cmp
xchg
je
int
add
sar
mov
sub
inc
lcall
xor
cmpsl
stos
mov
lods
xor
es
leave
and
popa
cmpsb
out
mov
mov
mov
adc
xchg
mov
shlb
mov
sub
sarb
mov
jb
lea
mov
jae
scas
xchg
push
xor
or
in
mov
inc
mov
push
xor
mov
or
mov
push
mov
in
movsb
in
push
jmp
push
fsubl
shrb
ret
jbe
fs
mov
mov
xor
mov
mov
leave
mov
mov
fwait
scas
xor
scas
push
dec
pop
data16
jp
andb
in
and
add
mov
xor
or
loopne
loopne
mov
daa
dec
ja
add
imul
test
push
mov
inc
adc
jg
cmp
ja
sbb
rcl
ret
mov
in
outsl
push
aam
sbb
fldenv
je
xchg
cmp
sub
cld
call
js
stos
aaa
clc
xchg
xchg
sarb
flds
inc
mov
pusha
std
jns
loopne
pop
test
xchg
repz
xchg
mov
push
ljmp
enter
jnp
rorl
rol
cmp
cltd
xor
lret
xchg
fidivs
imul
lods
popf
imull
adc
lds
xor
push
loop
sahf
dec
cmpsb
insb
movsl
push
sub
out
inc
mov
mov
into
fnstsw
test
jge
pop
push
shl
xor
sub
scas
inc
clc
jno
in
dec
mov
aas
jl
imul
jmp
dec
cmp
xor
lock
jge
incl
fidivl
out
xor
lock
sbb
mov
jns
mov
pop
lret
movsl
aad
cmp
mov
fs
les
jmp
test
dec
xchg
xchg
ds
sbb
fstpl
xchg
loop
inc
jmp
dec
imul
jg
adc
pop
jae
lods
std
mov
jmp
push
fmulp
shrl
mov
sbb
int3
jns
jo
arpl
inc
dec
cltd
cmp
rep
cmp
mov
lods
test
sbb
dec
in
pop
push
in
pop
outsb
adc
jge
add
je
push
jg
inc
sti
dec
popa
mov
aas
movsb
aaa
or
fnstsw
jnp
fsubrl
ret
fldcw
outsl
rolb
mov
icebp
test
test
xchg
inc
mov
aam
pop
bound
adc
orb
insb
dec
mov
cmp
or
dec
punpckhwd
dec
mov
push
dec
jno
fistpl
add
jb
ja
and
out
xchg
push
jecxz
sub
arpl
lds
sub
or
clc
dec
mov
iret
adc
cmp
push
or
pop
imul
lods
icebp
fildl
filds
jge
fs
push
test
adc
jne
sbb
mov
adc
mov
sub
sbb
push
or
sbb
ds
cmp
out
push
push
cmpsb
jno
jmp
pop
cmp
arpl
lret
jle
cmp
or
andl
push
les
iret
jns
push
gs
dec
mov
es
cmp
dec
sub
icebp
shlb
test
fdivs
les
sub
mov
mov
sub
aaa
nop
xor
pusha
cmp
mov
arpl
in
pop
stc
popf
mov
cmp
in
loopne
mov
icebp
or
mov
inc
ret
outsb
std
mov
push
inc
outsb
pushf
int3
mov
cltd
jmp
fs
adc
nop
and
inc
jne
lret
push
mov
mov
lea
xor
pop
out
movlps
movsl
dec
into
mov
jg
fcoml
jno
add
xor
fbld
sbb
sti
pusha
stc
test
lahf
dec
pop
xor
xor
or
cmp
data16
jle
fstl
fs
out
sbb
popl
xchg
fists
cmp
or
fidivrs
sbb
cltd
fucom
mov
andl
inc
fcmovu
mov
hlt
ret
imul
adc
jne
movsl
mov
fisubl
jbe
inc
adc
mov
ja
mov
bound
inc
mov
out
push
sti
xor
imull
mov
out
lock
pushf
loop
jp
jnp
sbb
dec
cld
fildll
pop
pop
cmp
clc
push
in
adc
sbb
jae
out
sbb
pop
out
pop
adc
in
sbb
mov
cmp
rorl
std
xor
push
mov
or
mov
in
add
pushf
pop
inc
popa
xorb
inc
int3
sub
js
add
cmpsb
rcll
xor
sub
pop
mov
jge
adc
xchg
jbe
mov
sub
xor
outsb
adc
gs
js
in
call
addr16
pop
push
scas
sbb
inc
mov
sub
es
fldcw
lahf
mov
pop
insl
outsb
pop
rclb
xor
cmpsb
call
or
rclb
bound
fcompl
je
orl
out
jle
pop
push
cwtl
sub
movsl
sub
dec
push
mov
xchg
adc
popf
movb
inc
dec
xchg
sbb
ficomps
xor
std
xchg
fisubrl
and
icebp
mov
adc
ss
pushf
pop
test
cmpsb
repnz
mov
es
pop
jo
out
in
jle
or
in
movl
movsb
rolb
movsb
add
mov
cmp
lret
aam
hlt
ja
xchg
int
or
pop
fs
test
push
cmp
outsb
scas
mov
cld
sub
mov
and
push
insl
rclb
shld
stc
aaa
aad
stos
fistps
push
xchg
inc
adc
inc
or
mov
mov
push
inc
lds
addr16
jnp
loope
jne
dec
bound
adc
add
and
xchg
or
mov
push
movsb
mov
add
push
xor
mov
xor
and
ret
add
ss
rcll
sahf
xchg
ret
mov
arpl
add
cmp
shrl
aas
jp
lcall
pop
cmp
jg
or
push
push
jp
inc
repnz
mov
mov
and
pop
sbb
loopne
shll
call
stc
mov
aam
rorb
popl
fwait
adcl
xchg
es
pop
lret
movl
push
jmp
in
mov
sbb
mov
or
ficomps
sub
data16
nop
ss
jo
jp
mov
ret
orb
rorb
or
xor
shl
jecxz
jp
ja
xchg
jl
loop
dec
es
mov
pusha
add
mov
mov
jo
mov
push
sub
aas
inc
stc
int
sahf
stos
xchg
xor
ret
cmp
notl
aas
es
std
stc
fistpll
xor
aad
cmc
sub
dec
xor
test
icebp
ja
push
xchg
mov
jg
adc
and
pop
cmp
ljmp
xchg
sbb
hlt
leave
fsubl
lds
add
dec
cli
inc
or
inc
mov
mov
xchg
inc
cltd
or
mov
sub
push
lods
aaa
ret
or
mov
mov
xchg
and
ficoms
and
lods
pop
fs
pop
cmp
gs
pop
jae
cmp
push
or
or
lea
into
xchg
ja
push
or
mov
shrl
lret
push
stos
jne
inc
shr
mov
loope
push
sub
sbb
or
outsl
dec
test
jb
jmp
jb
push
iret
add
mov
add
jp
add
aas
sahf
push
repz
or
scas
mov
stos
push
mov
decb
and
mov
cmp
xlat
loop
jge
ret
hlt
cltd
movsl
mov
data16
aaa
mov
or
mov
shll
test
scas
int
push
xchg
mov
mov
test
inc
rorl
lret
sbb
dec
outsl
inc
mov
clc
cmp
in
lock
adcb
in
jno
out
sbb
call
adc
aaa
jmp
aad
pusha
dec
ljmp
sbb
sub
sbb
sbb
pop
mov
ret
mov
outsb
and
push
test
xchg
fs
pop
push
dec
pop
dec
shrb
fisttpl
insb
dec
pusha
mov
outsb
push
div
mov
jmp
dec
repz
mov
mov
insl
cmc
cmpsb
jbe
dec
es
pop
loope,pn
cltd
pop
shlb
out
adc
and
xor
dec
and
pop
les
add
shlb
loopne
jp
jno
fs
pop
inc
xlat
mov
mov
jge
sbb
jle
lds
adc
mov
cwtl
dec
or
stos
jmp
sarl
mov
gs
flds
hlt
push
and
clc
es
sahf
sbb
out
cmpsb
xchg
inc
inc
pop
popf
incb
mov
cltd
das
cwtl
jno
xchg
ljmp
pop
xor
push
std
mov
mov
cmp
loop
int3
inc
sub
mov
scas
mul
mov
leave
xchg
xchg
lods
and
fisttps
pusha
jl
nop
ficompl
push
mov
sbb
inc
into
hlt
rcrb
lahf
scas
xor
mov
stos
adc
sub
jne
cmp
cmp
pop
in
sbb
jl
xlat
jecxz
incl
in
stc
rcrl
mov
mov
add
sarl
gs
xchg
pop
push
fsubl
int
push
dec
xchg
sbb
mov
and
loop
dec
and
xchg
pop
lret
lcall
test
pop
loop
in
adc
mov
cltd
leave
decl
clc
lods
and
in
enter
fsubs
sbb
outsb
jae
pop
fs
fisubrl
mov
mov
ret
test
in
into
enter
fiaddl
inc
pop
popf
frstor
lahf
ret
pop
shll
xchg
test
scas
incb
sar
fld
stos
lcall
ja
in
ja
rcrb
sbb
cs
lds
imul
loopne
cli
in
cmpsb
sub
jp
call
ret
dec
jecxz
dec
dec
dec
sbb
pop
cmc
mov
inc
jne
leave
push
push
and
sbb
test
cld
xlat
stos
dec
pop
pop
pop
pushw
push
jg
mov
sbb
out
mov
mov
out
inc
enter
and
pop
xor
xor
sti
pop
mov
jl
cld
test
xchg
lcall
jp
ss
mov
cmp
push
shlb
dec
shll
and
neg
les
aam
daa
ljmp
ljmp
and
fisubrl
jne
ds
mov
push
adc
mov
inc
and
js
mov
cmp
gs
and
test
add
sub
jp
mov
fnstsw
mov
test
fs
mov
jo
nop
mov
dec
out
shrl
jne
xor
sarb
out
loopne
add
iret
sbb
mov
cmp
fcoms
outsb
lock
sbb
dec
shrb
rcrl
mov
fwait
cmp
jmp
in
sbb
pop
sub
repnz
add
jo
cmpl
mov
sbb
lcall
fs
and
sbb
loope
dec
pop
repnz
dec
sti
jge
sub
sbbb
mov
out
pop
fldl
mov
jmp
ds
divb
nop
jns
sub
roll
jno
in
adc
pop
push
push
sahf
dec
std
mov
imul
pop
sub
sub
add
outsl
add
sbb
fadd
fisttpl
out
push
add
xor
jb
xchg
test
pop
mov
addb
mov
or
push
or
push
ja
or
sbb
jb
sbb
stos
outsl
mov
push
mov
orb
mov
sti
or
adc
push
mov
rcrb
adc
or
dec
inc
dec
cli
sub
andb
sub
pop
dec
subb
push
repnz
push
cs
mov
dec
rclb
iret
call
pop
cmp
xchg
call
push
loope
lock
cmp
fwait
subl
es
add
mov
add
adc
int3
xchg
mov
cwtl
inc
orl
pop
xchg
je
xchg
enter
pushf
repnz
lret
sbb
frstor
daa
or
and
negl
or
mov
mov
fimuls
jne
mov
sbb
dec
dec
or
jmp
out
inc
inc
jp
push
xor
mov
cmc
and
jl
ficompl
cs
nop
pusha
add
push
push
mov
fsubl
and
xor
movsl
mov
iret
gs
mov
cmpsl
pop
lret
xchg
jge
mov
adc
pusha
xor
xchg
adc
push
outsl
popl
jns
negb
test
jae
js
rclb
adc
cmp
leave
cmc
mov
dec
dec
inc
sbb
sub
gs
aam
and
mov
xor
pop
mov
std
movsl
andb
roll
jno
clc
pop
cmp
xchg
mov
lahf
inc
xor
lock
jbe
xchg
fists
inc
jge
mov
ja,pt
outsb
and
xchg
mov
mov
mov
jno
adc
fldl
jns
xchg
xor
mov
mov
orw
pop
mov
sub
pop
shrl
ficoms
mov
adc
fucom
aad
pop
outsl
sahf
push
roll
sub
aad
fisubs
fst
mov
movsl
cmc
cmpsl
mov
fwait
loope
sarl
pop
xchg
jmp
popa
arpl
out
pop
arpl
int3
loopne
pop
inc
clc
pop
imul
mov
mov
jg
jae
and
dec
add
xchg
jne
shll
scas
packuswb
jp
fimuls
push
xchg
into
mov
or
xchg
movl
outsb
ss
pop
push
movsb
xor
mov
loope
cltd
xor
call
sub
insl
sbb
mov
and
in
leave
xchg
jecxz
xor
pop
cmpsl
adc
cmp
add
mov
ret
loopne
xchg
rol
sub
and
lea
fldcw
mov
ret
mov
lahf
pop
xor
pushf
gs
xor
fsubrs
lret
cmp
je
add
or
mov
xchg
lahf
inc
imul
push
out
int
add
mov
or
inc
mov
push
dec
or
mov
pop
sub
leave
and
ret
inc
out
cmpsl
roll
ds
or
ss
dec
jno
sub
push
lcall
lcall
daa
mov
mov
fildll
mov
adc
add
imul
cmpsl
add
mov
mov
jae
ja
sbb
aam
mov
in
jae
jnp
daa
ds
lods
mov
jne
fisubrl
and
mov
das
xor
push
js
out
test
out
lret
std
test
or
pop
stc
fnstcw
cld
imul
cmc
inc
fnstcw
ret
loopne
xchg
mov
sahf
inc
mov
mov
jae
nop
dec
std
cmpsb
jno
pop
fsin
inc
xchg
ljmp
pop
or
ret
push
je
sar
cmp
pushf
pop
outsb
icebp
xchg
lret
cmpsb
ljmp
loop
and
daa
dec
popa
stc
inc
aas
jge
lret
and
or
pop
lock
addr16
add
into
push
xor
inc
scas
jg
mulb
xchg
pop
jae
pushf
pop
enter
ret
aam
inc
sbb
sbb
xchg
pop
xchg
shlb
in
sub
ds
cmp
hlt
xor
xorb
pop
fwait
pop
dec
daa
sbb
mov
fstps
mov
test
mov
push
fisubrl
imul
popf
daa
subl
lock
mov
dec
imul
push
or
push
cmp
jl
xchg
add
icebp
imul
je
ficoml
cmc
push
cwtl
jg
in
push
lds
jbe
scas
inc
push
xchg
inc
xchg
push
inc
jge
xchg
jle
xchg
enter
push
fidivrl
and
scas
cli
ficoml
mov
push
sbb
mov
cld
or
cld
fcompl
mov
mov
mov
js
out
leave
sub
adc
pop
jo
sbb
jo
movsb
jmp
in
test
mov
and
aam
repnz
dec
outsl
ljmp
adc
aaa
xchg
fsubp
lret
int3
sarl
inc
test
mov
and
mov
jae
xchg
xor
mov
and
jecxz
shlb
aad
inc
sub
int3
push
mov
or
dec
imul
jle
loope
je
mulb
adc
mov
mov
ds
pop
stos
mov
mov
xor
loope
mov
test
into
push
push
das
or
loope
inc
adc
iret
popa
fildl
mov
xchg
mov
adcb
sbb
insb
push
popf
and
xchg
scas
jmp
cmp
push
sbb
inc
shrl
cmp
xchg
nop
xor
jbe
nop
jmp
jl
inc
fcmove
add
cmpl
into
or
cmp
cld
arpl
push
popa
test
pop
clc
out
int
sub
rorb
inc
icebp
or
fsub
pop
and
cld
fadds
nop
jecxz
xor
scas
bound
lcall
pop
or
mov
xor
testl
push
cmp
pop
ja
xlat
mov
adc
fisubl
mov
nop
jmp
mov
cltd
mull
cmc
psubsb
imul
arpl
out
cltd
push
xor
or
push
sbb
xchg
jnp
leave
je
mov
inc
les
cmc
jmp
shlb
xchg
scas
rcrb
adcb
loop
lret
cltd
je
pop
outsb
xchg
cmp
stc
xchg
push
in
add
and
outsb
int3
push
push
ds
mov
lds
stos
sbb
fldl
rol
cmp
mov
add
sub
dec
js
adc
gs
cli
fdivp
iret
out
ds
inc
cmp
mov
push
in
mov
repnz
jl
pop
shl
and
inc
cld
gs
xchg
dec
adc
inc
jnp
cs
push
xor
out
push
pop
xchg
push
mov
out
cmc
pusha
fsubp
pop
inc
repz
popf
mov
jmp
mov
daa
fwait
push
movsb
adc
push
add
fwait
xchg
inc
cmp
lret
frstor
not
lods
popa
repz
arpl
mov
int
sbb
mov
ja
repz
enter
rcrl
and
fcom
decb
push
xor
insl
jnp
cmc
inc
repnz
and
shrl
dec
dec
aas
mov
pop
dec
in
in
leave
dec
fwait
in
or
outsl
mov
cmc
mov
pop
test
mov
mov
adc
stc
jo
sbb
xor
xchg
dec
add
add
xor
pop
dec
fidivl
in
out
pop
add
pop
jae
cltd
cmp
pop
mov
js
cmp
inc
jg
or
push
retw
xchg
jns
cli
inc
jo
dec
cmp
fisttps
sbb
push
test
push
roll
rsm
cmp
or
sti
outsl
or
je
stos
mov
cmpsl
pop
cmp
test
in
out
pop
inc
loop
mov
test
mov
bound
mov
mov
popf
aad
out
mov
cli
ljmp
pop
dec
insb
jb
jecxz
es
and
or
cmp
xor
int
jae
js
xor
inc
cmp
pop
add
mov
lcall
pop
push
push
mov
cmp
xor
out
add
insl
pop
xor
push
clc
mov
ret
insl
fists
mov
and
roll
insl
inc
cmc
push
jno
mov
sahf
inc
aaa
xorb
rolb
call
pop
std
in
mov
mov
add
pop
jge
mov
mov
push
cmc
add
xchg
ja
in
jle
or
data16
sub
mov
or
call
jno
add
idivl
fs
cmp
sbb
decl
xchg
or
shll
loope
fsubr
popf
jb
nop
cmp
mov
jns
sahf
cmp
sbb
pop
push
lret
jae
and
rolb
repz
and
das
out
xor
dec
mov
dec
or
neg
and
imul
popf
push
inc
cmp
mov
mov
movsb
aad
rcll
push
mov
data16
out
fbstp
push
xchg
xchg
lcall
dec
sub
fwait
mov
and
dec
push
test
das
sti
call
xchg
das
aaa
sub
inc
jns
popa
mov
cmp
push
mov
inc
jno
add
orl
adc
sbb
add
mov
inc
mov
add
les
dec
insb
and
in
inc
push
pop
mov
rcl
loop
imul
pop
mov
push
rorl
mov
jle
orl
cmc
test
push
xchg
ret
add
dec
push
jge
and
rorl
dec
addb
aas
loope
mov
xor
xlat
int3
testl
je
imul
pop
jnp
es
sub
push
call
ss
cmpsl
mov
pop
lea
mov
xchg
cmp
xchg
push
xor
pushf
imul
cmp
mov
jmp
or
dec
adc
nop
imul
and
nop
loop
xor
push
out
jne
loopne
in
adc
roll
jl
adc
mov
mov
loope
inc
cmp
in
dec
jg
insb
popa
mov
pop
incl
imul
jecxz
adc
stos
or
add
std
stos
jb
sub
adc
loop
and
sbb
xchg
xor
cli
sbb
sub
icebp
dec
and
out
outsl
cmp
mov
test
leave
outsl
movsl
mov
sbb
and
fdivrs
inc
lahf
js
push
scas
cmp
adc
insl
mov
cmp
enter
cmp
dec
loopne
pop
cmpsl
xchg
lock
xchg
cld
lret
sbb
ret
repnz
xor
jmp
mov
fistpll
mov
rol
data16
into
test
pop
jp
push
lock
in
test
push
mov
cmp
lahf
test
fldenv
popa
call
insb
jns
and
xorl
or
mov
call
rol
scas
xchg
pop
rolb
sbb
int
push
adc
jne
daa
insl
xchg
in
adc
sahf
in
mov
mov
push
cwtl
sbb
lods
cmp
fcomps
mov
sub
inc
fs
movsl
mov
jne
sbb
loope
cmp
aaa
mov
out
push
out
xchg
aam
lret
sub
in
sbb
idivl
or
cs
xor
aad
shll
pop
sub
push
push
mov
and
clc
rolb
mov
sub
dec
popa
negl
and
add
push
push
nop
jb
jge
mov
test
inc
mov
xchg
jmp
outsl
test
js
xchg
jl
mov
gs
xlat
shll
sbb
aas
loop
imul
movsl
cmp
inc
lea
cld
xchg
inc
pop
mov
push
sti
fiadds
and
insb
psllq
outsl
mov
jecxz
enter
cli
subb
cli
sub
jns
cld
stc
mov
jb
inc
jns
or
int3
insl
inc
inc
ror
push
inc
and
jecxz
iret
into
push
cs
xchg
xchg
mov
xchg
shrb
lret
jae
js
sti
jno
pop
das
jo
call
ja
adc
cmp
movsb
xchg
pop
adc
and
or
out
fdivl
fs
arpl
insl
icebp
mov
add
mov
mov
sub
cs
pop
mov
sti
add
cmpsl
adc
push
mov
mov
push
bound
xchg
movsb
xchg
add
sbb
xadd
jne
sub
fsubrl
insl
push
jbe
and
push
xchg
mov
xorb
lock
mov
jns
popa
xor
add
xor
js
push
cmpsb
sub
inc
or
pop
pop
and
popf
dec
js
mov
or
fadds
lret
aas
sahf
xchg
ss
stos
lahf
mov
ret
xchg
addb
jbe
sub
or
push
jmp
pop
jae
int
sub
fs
add
addr16
push
jmp
stos
mov
or
jae
pop
fs
jp
inc
shl
jmp
je
jbe
je
cmp
mov
xchg
imul
lret
jg
hlt
andb
pusha
into
dec
adc
cld
mov
sahf
pop
push
lods
aam
mov
lods
inc
xchg
adc
inc
jp
jae
rol
subb
das
mov
stc
mov
shrb
pusha
push
mov
or
mov
adc
sbb
lds
sub
cld
mov
orl
sbb
cmpsl
lods
lret
xchg
mov
aaa
sbb
imul
and
push
cmpsb
out
inc
jge
cmp
je
sbb
jge
fcoml
and
or
ret
add
sbb
test
mov
jecxz
push
inc
je
subl
sub
flds
push
dec
ja
sub
loop
fldcw
popf
das
iret
inc
and
in
pop
fisubl
loopne
rorl
mov
lds
jge
loope
es
push
inc
in
jmp
lahf
and
pusha
push
js
mov
roll
fidivs
idiv
cmp
cli
xchg
mov
add
mov
movsb
shll
lock
aam
push
push
and
mov
test
mov
push
pop
cmp
popf
add
aas
cmp
repnz
lods
sub
aas
push
mov
call
and
fcmovu
and
dec
push
imul
ret
stos
out
push
adc
repnz
je
pop
and
mov
stos
test
daa
adc
lds
mov
inc
sti
pusha
and
pop
adc
or
test
jge
enter
pop
cltd
mov
lret
insb
cmp
stos
dec
xchg
dec
cmp
por
repz
test
mov
pushf
int3
cli
loope
popf
aad
cmp
loopne
dec
fcmovb
pop
xor
push
mov
or
xchg
cmpsb
sbb
sub
adc
adcl
bound
lahf
insb
ret
or
mov
hlt
sbb
loop
adc
enter
addb
sbb
orb
xor
mov
imull
repnz
sbb
mov
inc
xchg
loopnew
xchg
sarl
in
arpl
dec
fstl
les
inc
cmpsb
push
mov
std
daa
shlb
dec
sbb
jo
lret
xor
loope
mov
jns
xlat
sbb
xor
es
ss
imul
fs
leave
movsb
ja
int3
adc
scas
and
jnp
jg
ffree
out
das
jecxz
movsb
outsl
pop
ret
movsb
xchg
test
and
div
lahf
adc
ret
xchg
xchg
xchg
and
and
push
test
jecxz
lds
ffree
repz
mov
adc
cmp
sub
pop
adc
cli
and
sbb
rorl
inc
fcompl
addl
ljmp
cmp
sbb
loop
xchg
movsl
pop
ljmp
sub
dec
cmc
cmp
in
cltd
outsl
dec
fs
mov
vpxor
pop
pop
popf
adcb
lods
jmp
dec
inc
movsl
sub
and
add
mov
or
add
sbb
push
and
dec
mov
mov
vunpcklps
xchg
cmp
loope
sub
scas
mov
test
jmp
dec
mov
push
and
add
mov
fwait
xchg
gs
pushf
mov
aas
gs
xor
xor
cli
pop
jmp
xchg
cwtl
js
and
imul
fwait
ds
test
into
push
xor
cld
fwait
pop
out
mov
xchg
outsb
aas
jnp
stc
mov
stos
shrb
xor
cli
dec
dec
aad
pop
pop
int3
movsb
ja
add
xchg
cmpsl
xor
clc
sbb
js
pop
popf
lcall
loop
sbb
mov
pusha
lret
inc
sarb
add
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
xchg
and
pop
addl
repz
loope
mov
mov
sbb
stos
mov
cmpsb
jmp
data16
cs
mov
rcrl
inc
fisttpl
int
and
cmpsb
pop
pop
push
out
jbe
jbe
pop
lods
and
lahf
xor
fwait
xchg
test
lcall
xchg
and
add
les
mov
add
fmull
mov
and
push
adcl
clc
sbb
sbb
lds
aas
mov
dec
cmpsl
push
xchg
mov
pop
jmp
inc
sub
pop
andl
ljmp
mov
sub
push
lock
shrb
jno
test
and
imul
cmp
aad
int3
test
loopne
jns
cmovp
rorl
outsl
pop
call
shl
rorl
sub
cli
iret
and
lret
sarb
in
fadds
or
arpl
addb
xorb
shl
pop
mov
mov
xchg
and
adc
inc
and
jg
cmp
inc
fs
pop
adc
mov
mov
jne
pusha
mov
pop
enter
pop
xrelease
xor
inc
push
push
push
and
stc
or
dec
and
outsl
push
pop
jl
mov
data16
add
and
fs
aam
jns
xchg
imul
stc
xor
or
cmp
dec
movl
inc
pop
es
enter
cmp
or
call
mov
adc
test
test
mov
fidivrl
and
ret
gs
push
mov
loope
mov
shlb
movsl
sub
out
jno
mov
add
ss
outsb
mov
aad
rcr
leave
inc
mov
cmp
repnz
jge
gs
ljmp
mov
out
mov
sahf
addr16
aas
jl
repnz
mov
pop
jb
jp
mov
mov
xor
stc
daa
pusha
adc
dec
cmp
neg
call
mov
test
sbb
imul
sub
pop
mov
inc
lock
call
enter
mov
fst
sarb
jne
nop
push
out
xchg
adc
mov
jecxz
mov
ljmp
into
sahf
xchg
jl
fisubrs
mov
or
mov
jg
rolb
jecxz
test
lahf
mov
dec
gs
xchg
insl
xor
out
xchg
lock
sub
js
imulb
dec
mov
sahf
inc
je
mov
mov
jecxz
jmp
ret
mov
add
pop
pop
fwait
mov
or
fcoms
cmp
jnp
jecxz
insb
inc
jmp
xor
sub
xchg
loopne
iret
pusha
ret
outsl
aam
mov
bound
fistl
fdivrs
inc
repz
lds
mov
push
pop
in
or
sub
pop
sbb
outsb
or
cmovg
jbe
cmpsb
lret
sub
je
movsb
adc
movsl
daa
jno
sbb
ret
mov
aaa
shl
call
cmp
lock
pushf
add
mov
dec
xor
inc
mov
jb
mov
iret
xor
adc
jns
jo
mov
imul
jns
scas
push
fdivr
mov
pop
daa
sbb
xchg
clc
imul
add
xor
loop
das
inc
sub
cmp
daa
arpl
lret
adc
jne
jno
xchg
sub
pop
xor
jnp
repnz
sahf
cmp
cmc
outsb
cmp
sbb
lods
sbb
jl
imul
addr16
ja
daa
mov
fistpll
push
or
cvttps2pi
ret
xor
xchg
mov
jg
pop
scas
sbb
dec
popf
xchg
push
or
sub
or
in
jne
sub
jo
add
xlat
xlat
movsb
orl
sahf
test
cmpl
xchg
test
xor
mov
pop
arpl
cltd
loope
scas
jecxz
jmp
or
sbb
push
cmpsl
and
mov
stos
arpl
adc
add
add
in
iret
and
aad
add
mov
in
and
dec
mov
xchg
sub
jae
in
adc
pop
mov
mov
sbb
insl
jo
dec
inc
aam
and
repz
adc
movsb
inc
or
sub
push
iret
xor
inc
sub
lods
es
pop
sbb
adc
mov
popf
cmp
dec
nop
pop
out
cmp
push
jmp
inc
in
mov
mov
rdpmc
jno
jns
cmpsl
in
test
add
sti
jb
rorl
xor
cmp
jbe
lods
or
test
sti
jmp
sahf
adc
mov
sbb
test
mov
add
xchg
inc
mov
sub
or
leave
push
sbb
mov
sub
xchg
push
scas
clc
popf
sub
sub
inc
adc
popf
lea
pop
pushf
shlb
jp
mov
lods
std
pop
lock
ficoms
mov
add
test
mov
push
xchg
mov
dec
lahf
jmp
cmp
clc
repz
rorl
xor
ret
push
test
dec
dec
decb
xor
cltd
jmp
jecxz
xchg
push
scas
test
pop
xchg
pop
loope
add
xchg
sub
mov
mov
fnstcw
iret
arpl
stos
fdivl
push
jno
fmul
push
jle
fcoms
cmp
xchg
fs
jl
aaa
lods
test
das
xlat
add
mov
ljmp
push
and
std
icebp
aas
push
sub
shlb
push
cmp
push
xor
cmp
add
jne
fsts
js
lods
gs
push
cld
pop
or
sub
ficoml
push
arpl
fadds
and
aam
cli
sub
cli
out
out
cltd
cmp
das
cmc
pop
and
add
pop
je
and
ss
sub
cmp
movsb
xchg
arpl
push
xchg
xchg
dec
shlb
out
call
push
pop
clc
cmp
imul
xchg
xor
jae
movsb
lea
sbb
repnz
rcl
adc
and
and
cmpsb
pop
les
das
adc
mov
cmpsl
mov
sbb
aaa
ja
mov
mov
dec
jmp
xchg
xor
mov
jnp
loope
dec
sbbl
xlat
ret
lods
dec
jge
fadd
imul
stos
jp
mov
mov
inc
data16
sbb
les
out
jge
and
inc
inc
mov
dec
mov
pop
insb
fdivs
aad
div
iret
sbb
inc
push
mov
adcb
in
add
sub
inc
xchg
adc
push
mov
enter
test
pop
pop
mov
sub
js
clc
in
aad
or
loop
inc
xchg
xchg
sbb
xor
and
gs
cmp
sub
rcrb
dec
jmp
mov
inc
push
lods
or
xlat
arpl
mov
ret
push
ficompl
dec
leave
lret
lods
xor
and
test
pop
xor
in
pop
or
ret
mov
adc
aam
cwtl
fnstenv
mov
mov
and
sbb
cld
lcall
std
daa
rorl
dec
pop
cmp
adc
popa
fnstenv
mov
stc
dec
ret
pop
lock
jno
stc
sbb
inc
inc
xchg
arpl
lret
movsb
popf
dec
sbbl
xlat
outsl
sbb
sbb
mov
pop
out
or
in
daa
pop
or
out
ret
pop
movsb
lea
pop
lods
cmp
xor
lcall
out
mov
lcall
orl
mov
pushl
fdivr
fidivl
mov
enter
in
xchg
mov
aad
cli
lea
pop
arpl
mov
cld
jl
insl
inc
ljmp
repz
fldl
mov
testb
bound
stos
mov
sbb
dec
pop
lods
sub
js
int3
aas
jb
imull
pop
push
adc
insl
pop
cwtl
rcr
push
pop
mov
jg
cmc
movsb
inc
rcll
cmp
mov
and
jmp
push
mov
cmp
mov
push
xchg
jne
push
or
dec
xor
mov
enter
cmp
les
or
mov
fstps
loop
repnz
xchg
inc
add
in
ret
push
push
jae
fisubrl
fwait
adc
test
mov
xor
adc
in
cmc
cmpsb
mov
fistpll
dec
push
ss
inc
cmp
add
and
push
cmpsb
xchg
das
inc
rcll
xlat
jbe
test
ret
and
xor
cmp
cli
leave
pusha
adc
xor
pop
aad
dec
mov
mov
stos
adc
push
inc
xor
sub
aam
adc
jmp
mov
outsb
jg
jbe
and
aas
cmp
mov
lock
inc
dec
test
mov
icebp
or
sub
int
outsl
xor
mov
pop
fs
fdivrs
sub
dec
xor
out
add
mov
push
xchg
adc
imulb
adc
ret
insb
sub
in
xchg
sub
fdivrp
stc
les
adc
testb
xor
enter
into
or
mov
pop
inc
mov
push
xchg
ljmp
inc
jne
push
add
outsl
xor
push
jo
pop
repnz
insl
jbe
sbb
mov
sbb
inc
adcl
mov
add
mov
rorb
repnz
insb
cmpsb
jmp
push
mov
lock
ret
lock
pop
rclb
add
inc
cmpl
sub
out
pop
jae
addr16
out
cmp
pop
es
ret
mov
push
jo
add
or
sbb
bound
pop
xchg
jno
push
les
or
sbb
ja
enter
daa
inc
xchg
aaa
popa
outsb
and
dec
mov
int3
scas
and
adc
xchg
cwtl
push
push
and
daa
enter
mov
repz
or
sbb
or
mov
idivl
mov
popa
inc
sub
sub
xchg
pop
aad
xchg
pusha
xor
pop
jnp
add
xchg
leave
icebp
inc
lcall
outsb
inc
repz
test
cwtl
jge
push
xchg
inc
test
dec
in
fimull
push
jae
add
lds
outsl
pop
xchg
es
aam
fbstp
cmc
add
std
mov
outsb
lret
sub
cmpsb
in
popf
stos
hlt
sub
fs
push
mov
mov
clc
dec
dec
xor
aas
rolb
xchg
pop
cltd
add
fdiv
dec
mov
jg
push
into
xor
jb
xchg
adc
jg
enter
jno
in
pop
pusha
popf
push
leave
jl
mov
stos
sub
xor
inc
cwtl
fisubs
or
jne
jb
push
rol
sub
dec
and
cmp
pop
fsubrl
mov
movsl
repz
imul
cmc
clc
aam
test
cld
pop
xor
insl
cmp
fistpll
mov
jg
subl
or
add
movsb
test
jb
cmp
jl
jns
popa
fnstcw
mov
pop
jbe
es
cmp
stos
icebp
sub
sahf
cmpsb
mov
xchg
popa
push
ucomiss
out
push
cmp
jb
les
sbb
push
jge
pop
je
push
mov
xorb
mov
lret
mov
mov
in
cmp
jge
js
mov
mov
mov
mov
adc
mov
mov
mov
hlt
mov
add
or
mov
mov
mov
cmp
in
inc
mov
subb
js
enter
xchg
push
jne
outsb
scas
xorb
cmp
ficoml
mov
fprem1
popa
insb
cs
adc
pop
outsl
iret
shl
mov
cwtl
pop
adc
mov
andb
in
adc
test
mov
push
mov
negl
or
icebp
pop
push
jns
lock
and
sbb
sahf
test
mov
iret
cs
bound
das
add
xchg
inc
int
aas
jle
add
pop
adc
sub
neg
insb
pusha
pusha
dec
jne
mov
bound
int3
xlat
fwait
dec
add
in
adc
xchg
loope
and
adc
or
jne
sub
lock
repnz
push
mov
popf
pop
les
xor
xchg
mov
sbb
inc
insb
push
into
sahf
jge
pop
lret
lea
icebp
xorb
lods
cwtl
hlt
loopne
adc
test
nop
roll
std
ss
lahf
fisubrl
add
loopne
sarl
adc
mov
jecxz
mov
gs
lock
mov
lock
jl
xchg
je
testl
push
nop
push
lahf
test
sbb
stos
and
fcompl
adc
sti
inc
pop
ds
jae
inc
ljmp
or
clc
dec
and
mov
pop
cs
test
sbb
jb
iret
adc
enter
cltd
xchg
jnp
push
pop
cmp
dec
mov
pop
mov
cmp
test
into
js
aaa
fldenv
mov
mov
lea
cmp
dec
mov
movsl
mov
xchg
popf
lock
jo
repz
push
mov
jae
cmc
push
inc
or
bound
inc
xchg
cwtl
inc
sub
xlat
pop
arpl
clc
pusha
dec
inc
xchg
pop
pop
cli
in
lcall
fsubrs
dec
xor
hlt
pop
jp
pop
or
xor
hlt
aam
mov
xor
adc
rcr
mov
dec
mov
or
in
ds
imul
or
movsl
mov
inc
cltd
xor
ret
dec
jecxz,pn
mov
xor
loop
addb
push
jmp
rolb
push
daa
mov
push
jp
mov
fs
pop
inc
pop
leave
mov
jo
mov
cmp
jae
and
jp
jp
lods
ljmp
lds
sbb
adc
imul
adcb
data16
dec
in
cltd
out
stos
xchg
lret
cs
das
xor
jne
dec
aam
fisttpl
call
add
outsb
mov
jle
jnp
repnz
out
adc
loope
subb
sbb
mov
jno
and
cmp
ror
out
sbb
push
jl
aas
addb
ds
mov
xor
pop
adc
pop
orb
mov
add
add
jmp
fxch
in
xchg
dec
fstps
inc
jg
dec
jg
xchg
xor
jg
dec
jecxz
mov
cmpsl
sti
jnp
outsl
add
adc
pop
ds
rol
push
pushf
ret
and
xor
cmpsb
mov
adc
cmpsb
jb
mov
cld
sbb
outsb
test
push
fldcw
adc
mov
mov
out
cs
gs
jo
stos
call
xchg
xchg
pop
fdivrp
adc
aaa
xchg
mov
test
mov
sub
insl
movsb
xchg
cs
aam
sub
mov
sub
rcrb
pop
xchg
jne
mov
inc
mov
es
fsubrl
or
xchg
dec
pop
push
aam
jns
je
js
fistpl
les
adc
add
push
add
out
inc
push
outsl
sbb
pop
out
adc
xchg
cs
push
sbb
cmp
addb
adc
fldt
inc
es
shlb
rolb
sub
mov
jecxz
jmp
sub
inc
pusha
imul
js
cmp
cmp
mov
fwait
pop
daa
loopne
imul
mov
jne
sub
lcall
hlt
repnz
and
or
in
in
cmc
mov
xor
xchg
dec
andb
mov
imul
arpl
jmp
xlat
iret
pop
loope
mov
pop
mov
mov
pop
rcrl
mov
aam
data16
aam
jbe
sbb
ljmp
dec
push
cmc
dec
cmp
cmp
mov
mov
push
pop
sub
adc
xor
rorl
mov
xchg
add
cmpsl
cmp
sub
jecxz
mov
push
xor
mov
and
cli
dec
push
mov
sbb
jl,pt
adc
ret
gs
in
aam
cmp
test
and
mov
arpl
pusha
insl
jo
stos
leave
rcll
sbb
leave
je,pn
aas
xor
repz
and
test
mov
pop
nop
mov
inc
jle
fwait
imul
shll
dec
lods
adc
call
mov
jp
adc
sbb
adc
stc
icebp
bound
mov
sub
mov
insb
inc
lret
jb
les
popa
pop
add
jae
outsb
scas
fs
add
movsb
push
fistps
pop
or
jle
lods
cli
fs
cmpsl
xchg
adc
xchg
push
lods
popa
pop
lea
scas
outsb
sbb
cltd
fs
mov
xchg
inc
and
decb
push
dec
sahf
jle
push
push
or
mov
test
fldcw
and
jo
pushf
add
fisttps
inc
mov
stos
scas
xchg
stos
nop
aaa
mov
popa
and
mov
mov
pop
loopne
jb
std
mov
fcom
in
sti
inc
mov
pop
das
adc
mov
test
outsl
adc
mov
std
outsl
push
daa
int3
inc
mov
push
jge
inc
in
cmpsb
test
clc
and
adc
mov
mov
sub
inc
es
jae
mov
mov
cmp
xchg
mov
in
cli
mov
loope
std
push
mov
sar
dec
std
dec
in
lret
test
dec
lods
repz
icebp
ret
shrl
cmp
push
int
mov
fldcw
mov
stos
jns
lods
mov
cmp
inc
mov
leave
lods
jle
js
mov
jae
js
imul
cmpl
push
cmpsl
das
test
lcall
pop
xor
addb
dec
jae
mov
dec
popa
jecxz
ja
data16
or
adc
addr16
sub
cli
aad
decl
dec
inc
pop
pushf
clc
sbb
inc
mov
lods
arpl
jnp
stc
frstor
sub
es
jbe
pop
mov
pop
push
ljmp
push
pop
mov
inc
mov
push
not
jbe
hlt
sub
jge
add
jmp
sbb
call
insb
jae
and
sub
jl
adc
bnd
adc
in
mov
rolb
ss
sbb
cmpsb
aad
and
aas
adcb
fcomps
mov
xlat
mov
lcall
inc
push
nop
push
sbb
loop
lods
mov
popa
xchg
daa
push
stc
mov
aas
rcrl
mov
outsb
inc
jmp
adc
sub
mov
add
mov
mov
pop
test
leave
cmc
pop
fnsave
mov
xlat
pop
movsb
add
jae
jb
mov
jle
aam
roll
jecxz
xchg
ljmp
insb
clc
insb
sti
mov
cltd
into
dec
lahf
cmp
subb
xchg
rcrl
pop
lldt
mov
arpl
push
aas
and
mov
sub
add
mov
dec
in
inc
adc
jge
dec
pushf
mov
sti
pop
orl
fildl
adc
imul
stos
inc
popa
and
mov
into
mov
jno
mov
xchg
mov
or
mov
and
lcall
jp
outsl
add
fwait
add
push
out
scas
loope
mov
aad
sbb
jb
or
dec
movsl
xor
cmp
mov
adc
mov
add
mov
out
adc
mov
leave
sahf
jmp
nop
jge
sub
mov
xchg
dec
loop
push
add
insl
mov
nop
inc
mov
mov
aaa
add
cli
pushf
push
lret
fldcw
cmp
in
pop
jmp
xchg
mov
cltd
lcall
xlat
lea
cmp
in
insb
push
xor
lahf
loope
or
jmp
xor
addr16
mov
cmp
and
stos
test
jecxz
pop
arpl
sub
int
xchg
pop
sbbb
outsb
test
pop
pushf
push
inc
iret
inc
cltd
sub
jg
divl
push
daa
aaa
hlt
sbb
test
dec
repnz
pop
pop
mov
cs
adc
xlat
loop
cltd
push
int
mov
cli
mov
dec
sub
pop
xabort
jbe
and
mov
add
jl
or
cli
fs
or
stos
sub
insl
nop
inc
cmp
repz
dec
out
add
jecxz
xchg
cmp
or
push
adc
clc
int3
stc
sub
push
cmp
or
movsb
cli
push
adc
and
push
cmc
clc
and
sub
lds
ret
ficoml
lea
xor
adc
sub
rorb
ss
lret
nop
cmpsl
adc
aas
or
push
or
cmp
push
mov
repz
test
push
and
sbb
mov
cmp
ljmp
testb
sbb
sysexit
push
pop
rcl
jnp
adc
iret
xor
pop
cmp
mov
mov
pop
cmp
sbb
shlb
sub
scas
add
jp
adc
xorb
mov
test
xchg
adc
fs
mov
mov
and
push
testb
adc
xlat
iret
mov
pop
cmc
jae
daa
and
arpl
inc
imul
daa
mov
pushf
mov
insl
adcl
movsl
mov
pop
jl
xchg
aaa
loopne
push
aas
sub
sub
xchg
out
shll
mov
fisubl
test
mov
jo
cltd
mov
and
push
adc
je
jge
pop
xchg
nop
xchg
daa
stos
or
sbb
movsb
mov
push
fwait
pop
dec
cld
mov
leave
jl
push
xchg
addr16
jg
jb
add
push
xor
jae
lds
lds
iret
or
add
js
call
aas
push
stos
mov
sti
pop
push
repz
pop
inc
cltd
push
fcmovnbe
ljmp
dec
dec
rcrl
cmpsb
fcomip
xchg
pusha
xorb
sub
add
jno
arpl
jae
int
pop
xchg
mov
test
and
push
push
mull
push
jo
lock
sub
adc
sbb
es
push
inc
xchg
shlb
fsubl
xchg
jge
xor
and
in
cmpsb
shrb
imul
jnp
iret
sbb
pop
out
push
imul
cltd
and
ljmp
mov
nopl
add
and
cmp
shrb
pop
push
xchg
pop
sbb
mov
fdivrs
and
xchg
adc
jbe
cmp
push
xchg
or
or
sahf
cltd
add
push
pusha
mov
add
mov
stos
and
out
xchg
jecxz
mov
or
mov
mov
adc
add
or
and
cmp
sub
arpl
sub
pushf
add
mov
pop
leave
add
out
and
cmp
jle
xorb
xchg
inc
out
leave
mov
adc
repnz
adc
xlat
addr16
push
lret
sub
adc
pop
mov
popa
push
dec
lahf
pushl
fidivrs
aad
inc
aam
adc
pop
pop
xchg
mov
pop
fwait
and
mov
jne
mov
fidivl
lret
push
ficompl
xchg
push
xchg
push
inc
insl
fnstsw
movsl
jno
fs
sbb
pop
test
repnz
daa
clc
test
xchg
sub
pop
xor
es
hlt
pop
repz
dec
cld
dec
pop
aaa
inc
ljmp
test
loope
sub
lea
xor
adc
jmp
sti
inc
jmp
scas
mov
ds
ficomps
lret
mov
aam
mov
rolb
dec
sbb
xor
hlt
insb
dec
mov
or
arpl
cmp
jge
movsb
leave
rep
mov
jg
sub
outsl
pusha
and
out
push
add
xor
xor
inc
push
mov
pop
fdivr
ljmp
xor
mov
cli
adcl
mov
xor
hlt
add
lds
sub
push
sub
or
out
clc
fcmove
sarb
cmp
lret
push
lcall
movsl
fucomp
sarb
pop
std
mov
mov
icebp
pusha
dec
jp
adc
mov
dec
adc
fwait
adc
rorl
outsl
mov
adcb
cmp
sti
xchg
jo
dec
dec
test
and
outsb
jae
push
stos
inc
bound
pop
add
mov
push
sti
and
add
and
sbbb
jb
scas
popa
add
lret
les
popa
sub
in
push
xchg
orb
pop
icebp
into
mov
dec
xchg
jecxz
mov
test
xchg
jbe
jo
dec
data16
cmp
push
dec
inc
sub
lea
xor
fnstsw
xchg
popa
mov
cmp
pop
push
aad
cs
data16
xchg
push
mov
push
xchg
gs
push
inc
sarb
call
addb
ret
sbb
loop
cmpl
call
lcall
push
bound
add
inc
mov
pushf
out
jnp
xor
sub
or
scas
cmc
mov
fbstp
dec
inc
popa
xorl
mov
fistps
xor
mov
push
mov
stos
and
jno
xor
push
inc
jae
cmc
lods
or
cmpsb
std
loop
and
dec
lea
add
cmp
fmull
test
mov
pushf
in
popa
test
je
xor
mov
pusha
mov
or
int
pop
dec
fmuls
cwtl
and
dec
cmp
xor
and
pop
xchg
sahf
push
pop
imul
repz
cs
xlat
inc
mov
add
cmpl
cmpl
imul
mov
call
ret
push
add
pop
nop
sbb
andb
cmp
pop
adc
adc
mov
cmp
jns
or
push
jo
pop
aam
sub
lahf
stos
insb
lock
js
xor
cmp
loope
leave
sbb
sbb
push
bound
mov
push
mov
int
into
mov
rorb
push
adc
pop
cmp
es
inc
dec
imull
mov
mov
adc
in
mov
jmp
mov
jmp
orb
mov
lret
pop
push
add
rcl
pop
sti
int3
les
xchg
pop
mov
ja
fst
aas
addl
and
fwait
push
repnz
jns
scas
fmuls
leave
inc
loopne
fdivrp
xor
faddl
sbb
jne
in
into
aas
ja
sub
xchg
jae
mov
mov
loope
insb
jns
pop
adc
xor
pop
cmp
cmpsb
ds
in
stc
mov
aam
daa
jo
and
int3
subl
xchg
sub
in
adc
xor
mov
ss
and
sbb
int3
roll
mov
popf
testb
jns
out
adc
pop
mov
adc
push
lcall
jecxz
jb
xor
pop
cs
les
repnz
inc
mov
mov
clc
test
js
das
test
ret
xor
jge
repz
jnp
xor
pop
mov
jno
push
add
lcall
add
pop
jle
mov
dec
and
mov
dec
mov
lock
pop
dec
mov
xchg
dec
fs
push
mov
add
xchg
mov
xlat
loop
dec
lcall
pusha
data16
push
lods
mov
shr
out
lret
and
lods
xchg
adcb
aam
inc
in
sub
clc
je
jmp
jbe
in
out
in
in
es
mov
data16
int
lds
cs
push
inc
mov
push
mov
mov
pop
idivb
and
ret
push
sub
mov
movl
arpl
scas
mov
mov
repnz
mov
push
push
pop
adc
roll
popf
adc
sar
inc
cmp
mov
xor
shlb
sub
bound
rorb
cmp
and
adc
pop
inc
sbb
or
out
mov
nop
bound
pop
xor
sub
sbb
rorb
xchg
cmp
jns
sub
in
mov
movsb
jg
xchg
add
mov
sbb
scas
add
push
mov
enter
jg
andb
mov
mov
dec
jae
loop
jns
adc
cmp
mov
pop
sbb
mov
jmp
imul
in
ds
sar
stos
xor
cmp
test
enter
and
pop
test
cmpsb
orl
dec
pop
dec
jns
test
add
bound
call
rorb
mov
sti
sarl
mov
jmp
ret
lods
subb
xchg
push
xor
xor
mov
out
imul
loopne
xchg
pop
sub
push
mov
xor
out
add
pushf
mov
adc
inc
cmpsl
jmp
dec
xchg
pop
stos
jecxz
adc
std
addr16
adc
shl
jle
fwait
add
call
mov
dec
fwait
push
xor
int3
daa
jle
ret
push
aas
xchg
nop
or
nop
or
or
das
dec
add
push
mov
xor
ja
xlat
fwait
ret
xchg
sbb
jl
jg
inc
jecxz
pushf
and
add
cltd
adc
leave
mov
sti
jno
xchg
push
sub
imul
add
stc
lds
mov
mov
pushl
adc
mov
mov
lock
push
and
pop
xchg
sub
movb
aas
test
in
mov
mov
xchg
daa
pop
pop
mov
out
jecxz
push
int3
imul
sarl
add
and
push
aaa
ret
cld
jbe
pop
fnstenv
push
mov
sub
test
aam
pop
in
xlat
aas
xlat
pop
xor
xchg
fsubrl
lods
jnp
sub
lods
call
xor
dec
cltd
mov
or
insb
cld
icebp
repnz
xchg
pop
sub
xlat
pop
test
inc
inc
add
out
mov
or
dec
sti
cld
or
fdivs
int
and
popf
adc
stc
push
sub
xchg
stos
cld
and
lcall
jne
lods
jmp
push
mov
gs
cmp
pusha
fistpll
popf
and
cld
leave
xchg
pop
orb
inc
or
cmp
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
into
mov
fstps
test
cltd
int
fists
clc
inc
test
out
inc
dec
aas
test
sti
mov
sub
push
fstp
mov
push
push
pop
test
fnstenv
aad
jmp
pop
pop
inc
ss
sub
xor
bnd
pop
dec
divl
test
jp
inc
jg
sbb
inc
pusha
or
and
ja
jmp
jmp
je
mov
nop
add
mov
loop
pop
popf
out
inc
hlt
es
xchg
adc
add
enter
dec
mov
push
xchg
inc
xchg
fisubs
jae
stos
sub
lret
test
test
and
or
or
scas
jne
pushf
aas
push
repnz
repz
in
jne
aad
cli
enter
dec
pop
daa
dec
imul
ds
cmp
jo
repz
mov
sbb
test
cmp
push
cwtl
mov
lods
mov
rolb
push
push
jl
cld
jp
pop
jge
inc
leave
jle
cmp
call
jno
stc
inc
inc
jns
sar
out
cmp
imul
dec
orl
lcall
and
add
pop
ljmp
pop
scas
das
out
adc
lods
mov
mov
in
fcomi
mov
inc
cmp
lock
testl
mov
ljmp
in
mov
or
ret
mov
lea
inc
loop
fwait
or
popa
les
sbb
jne
pop
fidivrl
mov
mov
mov
ror
out
dec
stos
das
aad
or
pop
sub
dec
inc
jl
adc
jle
push
in
insl
insb
jmp
jno
out
ret
pop
mov
adc
dec
push
fmuls
and
lahf
sub
jne
jmp
das
ss
push
add
and
in
ljmp
dec
add
movsb
pop
outsl
shlb
add
sbb
sbb
mov
int
lahf
clc
adc
xchg
movsb
inc
xor
push
outsb
mov
sub
shlb
lret
daa
cmp
jbe
movsb
movsl
pop
jbe
repnz
cs
cltd
pop
iret
lods
adc
mov
xor
mov
or
sbb
aaa
push
iret
dec
jbe
clc
test
scas
adc
mov
fs
mov
ret
scas
arpl
subl
stos
test
push
xor
std
pop
push
rorb
mov
xor
sbb
sbb
lret
out
xor
sub
cmpsb
sbb
lret
pop
aad
add
add
lods
mov
cmpsb
add
push
popl
lret
mov
je
lahf
add
das
cmpsb
jbe
arpl
adc
lock
jno
iret
into
pop
iret
dec
pop
shlb
xor
or
inc
push
or
mov
loop
ss
fdivl
dec
push
sub
sub
xor
stos
jnp
data16
cmp
mov
pop
ret
aaa
pusha
into
pop
in
jb
pop
jnp
mov
or
mov
sti
test
outsl
test
mov
mov
mov
ret
dec
rorb
fisubs
dec
jp
fs
in
fisttps
or
dec
push
iret
push
cmc
push
push
cwtl
cmp
int
jne
dec
jbe
cmp
jge
mov
sti
xchg
mov
fwait
mov
enter
xchg
icebp
loop
out
xor
dec
cmpsl
sbb
test
lcallw
and
icebp
dec
cmc
mov
sub
insl
shlb
cmp
jo
in
js
imul
shrb
sbb
fs
push
xchg
push
xchg
mov
xchg
movsl
dec
and
in
sbb
jns
jl
shlb
cmc
out
std
add
xor
filds
or
imul
int
insl
push
jle
pushf
fidivs
push
outsb
sbb
push
aas
push
and
push
iret
popf
cli
or
bound
jl
arpl
xchg
xor
scas
mov
adc
leave
nop
loopne
movl
sbb
aad
iret
ret
sub
sub
fsub
mov
mov
nop/reserved
in
aam
lods
jae
cwtl
popa
and
shlb
imul
bound
or
sbb
in
adc
pop
push
and
ret
out
shl
fcoms
call
loopne
in
push
inc
outsb
xchg
insl
xor
lods
sub
sbb
inc
pop
xor
mov
insl
pop
and
insl
stos
mov
jne
and
xchg
push
leave
scas
ja
push
andb
push
rol
rolb
icebp
out
pop
and
add
pop
xchg
bound
pop
imulb
iret
popf
adc
dec
call
xchg
push
dec
pushf
in
jmp
jnp
es
in
aaa
arpl
sub
rolb
lahf
mov
cmp
les
into
push
scas
adc
pop
in
xchg
xchg
mov
push
dec
or
pop
pop
into
xchg
fcoml
icebp
ret
pop
int
das
dec
adc
inc
cltd
jle
out
xor
ljmp
pop
std
testb
cmc
cmc
pop
jmp
cmc
inc
and
enter
scas
scas
loopne
xlat
mov
lcall
dec
outsl
test
mov
inc
ret
test
call
add
lret
and
rcll
aas
jecxz
dec
or
das
orl
out
mov
jb
mov
push
jae
aad
push
aas
and
add
gs
and
pop
xlat
movsl
pop
xchg
xchg
inc
popf
push
sub
shll
mov
xchg
add
movsl
jb
sbb
mov
push
bound
jbe
lods
call
and
out
push
std
movb
sbb
mov
xor
mov
retw
mov
mov
adc
call
js
iret
insb
popa
mov
out
cmp
add
lock
jo
sbb
insl
add
shr
loope
sbb
dec
xorb
lods
push
push
icebp
insl
cmp
mov
clc
mov
jl
add
std
jge
out
mov
sub
and
xor
and
aad
pop
cltd
aas
lret
daa
test
ja
mov
push
repnz
mov
and
push
mov
adc
push
jne
inc
and
xchg
adc
pushf
mov
add
dec
or
jnp
lock
push
cltd
or
push
mov
xor
jl
test
inc
out
insl
outsb
hlt
clc
sub
addb
mov
out
mov
add
cmc
xchg
add
adc
ljmp
les
sti
push
and
xor
xlat
sbb
sbb
xor
imul
fs
dec
xor
lret
dec
xchg
ja
and
or
jp
xchg
int
ret
and
test
cs
leave
sub
jne
or
subl
xlat
mov
ds
mov
out
sbb
adc
xor
inc
fidivs
subb
push
je
xchg
pop
daa
adc
out
jo
mov
jg
jp
out
int3
movsl
leave
dec
jae
sbb
test
jg
sbb
xchg
pop
and
addr16
xchg
movsl
jle
mov
jmp
sbb
jg
adc
push
in
cs
adc
sbb
xorb
insl
lods
shlb
push
mov
cmpl
jb
aam
cmpl
jg
rolb
lds
inc
mov
nop
cmp
rorl
push
arpl
aaa
jge
cvtps2pd
addr16
out
cs
xchg
adc
sbb
push
mov
lods
xor
popf
inc
mov
jmp
in
pushf
push
cmc
arpl
push
jns
and
dec
std
jne
out
addr16
fwait
pop
add
push
sbb
sub
add
cs
mov
ret
mov
sbb
cmp
cmc
mulb
cmp
inc
mov
imul
inc
add
lods
rcll
sbb
cmp
inc
sbb
sbb
mull
pop
mov
stos
lret
call
in
ficompl
jl
sbb
aas
icebp
jmp
adc
mov
popf
adc
fisttps
xor
dec
jnp
and
adc
test
int
ljmp
and
add
enter
mov
nop
or
pop
cmp
or
mov
push
mov
sbb
popf
aaa
lea
push
orb
adc
into
mov
outsl
je
ss
jbe
jnp
mov
inc
mov
dec
ficoml
stos
add
mov
sbb
gs
push
fbstp
and
jge
repz
inc
outsl
and
mov
rorb
in
mov
and
stos
outsl
in
addb
enter
xchg
pop
outsl
ds
movsl
mov
mov
lods
daa
mov
jae
jae
int3
and
push
outsb
sar
and
test
xchg
subb
push
bound
xchg
sub
dec
sub
subb
add
xor
jmp
sahf
mov
fisubl
pop
mov
push
aad
sti
inc
stos
push
inc
iret
jecxz
mov
clc
mov
cld
push
movsl
std
mov
jb
or
pop
data16
inc
jg
popf
cmc
dec
jb
jb
mov
in
cmp
imul
sub
aas
or
push
das
jno
push
or
xor
push
arpl
repz
jo
adc
nop
mov
pop
push
movsl
mov
dec
add
add
stc
xor
sti
jmp
push
out
cmp
std
movsb
jae
adc
and
ret
mov
jns
xor
xor
and
push
and
add
sbb
mov
mov
rorb
xor
push
lods
mov
jbe
lods
sahf
pop
and
imul
xchg
vcvtps2dq
out
nop
sti
in
dec
std
in
aas
jno
inc
mov
sub
jnp
pop
or
push
test
insb
pop
sub
jno
add
ret
decb
mov
mov
pop
ret
mov
xchg
and
lcall
pop
pop
xchg
mov
xlat
sub
mov
push
test
in
aad
mov
sub
cmp
test
or
sub
jns
sbb
popa
outsl
ss
popl
jl
sbb
in
loopne
mov
subb
inc
nop
inc
jns
out
mov
mov
xor
fidivrs
scas
mov
jne
push
adc
xchg
inc
or
jmp
ftst
shrl
call
jmp
mov
xlat
repz
out
mov
jo
inc
mov
push
mov
mov
xchg
fistps
mov
cli
loope
daa
fdivr
xchg
fwait
sub
and
sbb
pop
in
aaa
and
cs
inc
jp
out
cmp
js
push
pop
das
popa
je
push
mov
jg
cli
int3
and
mov
in
gs
scas
dec
xchg
in
fwait
cmp
pop
push
test
sbb
ja
xor
and
sbb
xor
std
addr16
and
mov
jbe
fadd
pop
stc
pop
mov
jp
or
dec
arpl
sbb
das
mov
pop
sub
in
fxch
repnz
mov
cmp
add
mov
mov
inc
xor
adc
mov
inc
dec
inc
stos
lock
sub
lea
adcb
btr
xor
movsl
popf
imul
mov
push
sub
add
mov
fcoms
xor
test
cmp
les
sub
in
lds
ret
int3
pop
inc
mov
ss
sub
jnp
and
adc
lcall
xchg
mov
cmpsb
lods
xor
add
out
mov
jg
pop
outsb
and
in
xchg
rorl
hlt
xchg
or
pop
sahf
sub
dec
std
dec
insb
add
mov
cltd
cmp
cmpsb
jb
lea
mov
lods
stc
daa
adc
rcrb
sub
add
dec
cld
mov
insl
ds
or
test
loop
pop
inc
ljmp
sbb
adc
cmpl
jle
mov
cmc
lret
shl
cmp
mov
or
xor
mov
lds
mov
in
je
mov
lahf
mov
jno
xor
xchg
lds
jns
imul
ds
out
out
or
aas
sti
inc
leave
idivl
repz
push
pop
xor
xlat
sbbb
inc
call
stos
cmc
frstor
cmp
nop
push
mov
mov
jecxz
les
mov
add
mov
xor
cmp
cltd
jmp
hlt
xchg
call
aam
adc
aaa
daa
add
pop
insb
arpl
and
xlat
dec
xor
sahf
into
jg,pn
loopne
ljmp
sti
lods
adc
int
xor
mov
sahf
rcll
cmp
les
cltd
popa
lods
enter
out
sahf
cwtl
arpl
add
cmpsl
and
jne
je
rcl
adc
push
push
mov
dec
adc
jnp
or
add
out
in
movsl
pop
jbe
call
stos
adcb
jb
mov
icebp
leave
sub
ret
xor
jns
in
xchg
aam
mov
fisubrl
insb
or
test
in
sbb
pop
xor
out
outsb
sub
xor
dec
adc
pop
repnz
shll
xlat
sbb
imul
mul
mov
push
mov
adc
vpsllq
mov
adc
push
aam
cmp
fs
scas
scas
dec
int
sbb
in
xor
lret
and
repnz
iret
icebp
mov
push
test
mov
mov
push
in
pop
or
scas
cld
adc
ret
pusha
pop
aad
jns
sahf
mov
outsb
cmp
imul
rorl
pop
sub
adc
mov
movsl
xchg
xchg
mov
pop
cli
xchg
fiaddl
stc
push
iret
addr16
scas
fistpll
dec
outsl
das
std
movsb
mov
mov
xor
mov
sti
inc
xor
jno
push
in
mov
pop
mov
vcomisd
xchg
test
add
jae
pop
mov
cli
add
xchg
push
rorb
pop
mov
mov
mov
inc
pop
fadds
cwtl
mov
add
je
mov
into
in
and
clc
dec
insb
lahf
xor
rcrl
or
iret
js
jl
mov
xchg
and
out
adc
adc
aaa
fdivrs
mov
ljmp
pop
xor
mov
jge
xor
mov
xchg
jp
ja
push
pop
maxps
aad
cmp
fmuls
mov
shr
mov
fadds
push
sub
dec
xchg
jae
pusha
or
aad
pop
ret
mov
cmp
dec
mov
adc
sbb
inc
inc
jge
test
sti
cmp
inc
ss
adc
scas
in
ss
sub
out
mov
jnp
dec
or
loopne
cli
push
lds
imul
push
and
cmpsl
scas
dec
adc
pop
push
call
cmp
mov
pop
and
push
aam
out
pop
pop
out
push
popa
mov
les
mov
loop
cltd
mov
xchg
scas
sbb
lcall
test
push
dec
mov
repz
filds
mov
dec
imul
lcall
lock
pop
jo
pop
arpl
mov
cltd
lds
test
lods
adc
aam
dec
pop
mov
or
leave
jb
jo
lods
insb
pop
decb
add
jbe
cmp
es
xor
addr16
or
inc
mov
aaa
mov
clc
in
dec
sbb
inc
xor
jne
inc
cld
push
pop
ss
push
xchg
adc
jnp
mul
pop
sti
and
fcompl
testb
mov
lretw
jno,pn
push
mov
xchg
mov
int3
jle
mov
aam
ljmp
lcall
sbb
cmpsb
ret
mov
shll
fnstcw
dec
andl
mov
jmp
and
out
xor
push
movsl
fidivrs
mov
stos
outsl
xor
sbb
out
xchg
in
out
aam
or
or
jge
test
push
mov
lcall
pusha
add
aaa
stos
and
pop
lods
mov
push
fstp
aam
outsb
inc
es
jne
test
mov
mov
pusha
xor
cmpb
je
inc
aas
enter
add
fidivs
shrl
and
clc
mov
frstor
fsts
cltd
inc
test
xorb
dec
jnp
xor
dec
pop
sti
popa
daa
outsb
dec
outsb
mov
xchg
dec
jge
cmp
dec
jno
popa
pop
or
push
sti
xchg
cmp
adc
loop
push
add
lahf
or
loop
cs
aas
sbb
ljmp
xor
inc
xchg
int
cld
pop
je
inc
addb
shl
nop
arpl
and
sbb
mov
aas
lahf
dec
xchg
out
out
test
jb
push
dec
xor
and
test
psubq
dec
sbb
fwait
push
lret
fnstsw
mov
push
xchg
std
sub
xlat
add
mov
call
pop
inc
stos
mov
xor
adc
mov
adc
and
sub
std
fwait
push
ds
and
dec
jns
repz
pusha
pop
je
out
sub
pop
lock
fsts
mov
stos
std
clc
xor
divb
dec
rcrb
lret
stos
clc
mov
lock
cmp
mov
mov
push
data16
lods
sarb
lcall
cmp
or
int
or
push
rolb
out
push
movsl
in
pop
sbb
int3
shlb
cmp
sbb
mov
fiadds
xchg
mov
sti
jne
dec
leave
insb
sub
daa
lret
mov
pop
inc
out
test
or
mov
shr
ret
cmp
inc
inc
hlt
decl
xchg
sbb
mov
pop
int
cmp
aad
sbb
sub
int3
popf
push
or
adc
sub
pop
rcrb
mov
pop
sub
inc
arpl
ffree
xchg
popa
ss
loope
mov
mov
and
jle
sbbb
or
or
rcl
mov
xchg
sbb
mov
imulb
dec
movsl
or
ljmp
fwait
mov
jp
cmp
lcall
in
lcall
dec
jg
mov
pop
loop
mov
mov
mov
std
dec
icebp
int
pop
add
jno
sahf
sbb
sbb
jbe
pop
in
hlt
xlat
cmp
cli
sub
mov
sbb
enter
jecxz
bound
test
pusha
mov
jp
cmp
mov
mov
sarl
fwait
sbb
inc
fidivrs
shrl
inc
das
pushf
mov
push
jecxz
sti
xchg
dec
or
rcrl
cs
fcos
mov
aad
sub
jnp
and
mov
nop
sub
jno
xor
movsb
dec
stc
pusha
adc
shrl
movsb
aad
loopne
or
mov
adc
add
or
xor
pusha
mov
push
pop
stos
orb
lret
cld
mov
addr16
push
cmp
ljmp
lret
test
push
adc
push
ljmp
mov
lret
inc
jno
push
pop
cmpsl
js
repz
sub
cmp
push
int
adc
push
loopne
xor
cmp
iret
jg
aas
mov
inc
mov
les
and
sbb
sub
pop
inc
sti
xchg
fiadds
sbb
push
iret
cmp
push
inc
ss
enter
popa
insb
push
subb
out
xchg
mov
cwtl
rcr
mov
mov
ss
sub
or
outsl
or
repnz
lods
insl
dec
pop
or
xchg
testb
pushf
pop
into
pop
lds
lods
sub
movsl
ficoms
and
int
dec
lods
sub
and
pop
inc
lret
pop
pop
adc
dec
insb
and
aas
and
cmp
xchg
out
fimull
jb
adc
in
mov
stc
push
cmp
call
xor
mov
lds
sbb
sti
inc
leave
cmc
inc
faddl
dec
shll
lret
movsb
sub
sub
inc
in
rclb
add
push
loop
jge
movsb
stos
mov
outsb
xor
fcoms
jl
push
out
add
add
in
xchg
xor
jecxz
or
xor
cmp
jae
pop
push
or
jmp
popa
addb
cld
pop
xchg
cmp
insl
inc
push
outsb
dec
iret
hlt
cmpsl
xor
insl
aaa
xchg
out
or
pop
sub
mov
sbb
sbb
cmp
adc
mov
add
mov
inc
pop
jle
inc
lods
aad
mov
ja
icebp
pop
push
insl
jp
movsb
cmp
mov
imul
mov
cmc
notl
rcr
push
mov
inc
dec
sbb
mov
xor
pop
dec
add
and
lods
rol
adc
cwtl
and
sub
cltd
repz
fsubs
les
or
in
test
or
push
mov
add
cmp
ud0
push
adc
push
jbe
mov
adc
daa
das
push
jno
fisubrl
xchg
adc
imul
hlt
and
mov
out
xor
test
aad
inc
push
aam
sub
andb
out
jmp
cmp
mov
fstpl
out
pop
ret
mov
js
flds
shr
ds
pop
sahf
jl,pt
ret
out
mov
test
sub
test
mov
shll
movsl
gs
jo
out
jb
aam
insb
push
push
and
or
mov
or
inc
mov
fstl
inc
jmp
mov
xor
ds
or
lcall
xchg
aam
lods
jle
and
jb
popa
mov
pop
inc
mov
sub
and
sbb
xor
out
sbb
test
movsl
lahf
jne
mull
adc
stc
pop
xor
sahf
andb
psrlq
jecxz
punpckhbw
pop
push
ljmp
movsb
or
mov
and
xor
lret
rcrl
shll
cs
jle
stos
cwtl
sub
dec
fdivl
jo
cld
in
decl
or
pop
mov
not
add
cwtl
add
sahf
sbb
pop
in
xlat
add
pop
jnp
sahf
repz
scas
pop
push
or
jp
mov
pop
nop
or
push
push
push
mov
fnsave
cwtl
jecxz
pushf
fsts
in
insl
sbb
lock
jbe
fwait
aas
cwtl
loopne
xchg
xchg
pop
ret
dec
sbb
mov
test
scas
xchg
inc
mov
dec
addr16
mov
lods
ss
in
repz
pop
inc
xor
adc
lcall
sub
or
sub
inc
data16
mov
insb
daa
pop
adc
xor
cmp
sbb
add
push
add
jg
gs
jge
jmp
stc
cmp
in
dec
xor
inc
cmp
jo
xchg
sub
push
jp
aam
lret
mov
push
mov
xchg
dec
rcrl
pushf
pop
inc
mov
mov
ss
mov
inc
mov
shrb
sbb
ljmp
mov
mov
repz
inc
jmp
aas
mov
stos
adc
int
xor
in
rclb
cmc
xchg
dec
int3
mov
ss
stos
push
cmp
and
outsb
jle
insb
aas
les
bound
enter
cwtl
mov
out
sub
test
push
pushf
pop
aad
imul
adc
mov
jno
out
lea
xchg
push
iret
adc
mov
imul
adc
mov
std
std
cltd
pop
bound
andb
mov
inc
mov
push
test
cmp
fsubr
stos
sub
out
or
lock
adc
sbb
insl
daa
loopne
push
xchg
mov
out
add
adc
jo
sub
mov
test
sbb
push
aas
lock
jmp
push
mov
pop
jg
popa
xor
dec
dec
sar
aad
lret
aad
ljmp
nop
cwtl
jge
js
push
or
cmpsb
jl
dec
ljmp
les
xchg
test
xor
mov
and
or
push
insl
dec
dec
pop
cmp
sub
loop
sbb
fwait
mov
cmp
xor
das
mov
lret
adc
popfw
push
mov
cmp
dec
pop
adc
in
pop
xchg
lahf
rclb
aam
fwait
shl
add
jg
xchg
inc
mov
push
cmpsl
out
dec
shlb
cmp
inc
aad
cltd
jb
push
xchg
push
data16
add
jmp
test
mov
mov
lock
xchg
and
cmp
pop
pop
push
mov
xor
test
sbb
mov
lods
add
jns
and
xchg
out
pop
and
push
xlat
jle
adc
aam
and
iret
shlb
jg
scas
add
or
shrl
pop
adc
cmovns
mov
call
test
mov
pop
cmp
psrlq
jb
push
clc
les
add
cltd
lods
idivl
xor
cwtl
xchg
mov
sub
test
filds
sub
mov
push
add
jae
xor
cmp
dec
mov
sahf
pop
test
lds
dec
stos
sbb
adc
dec
cld
sub
xchg
mov
in
mov
lcall
sbb
push
add
jmp
adc
cmpsl
xchg
int
push
or
nop
mov
sub
push
lods
add
outsb
fisttpl
rcrl
mov
addr16
xchg
jno
xor
mov
adc
in
std
imul
dec
fidivs
jmp
loopne
insb
icebp
xchg
adc
adc
scas
aad
fbld
add
test
ret
or
test
dec
lds
xorl
mov
pop
outsb
push
in
repz
xor
adc
adc
push
inc
icebp
sbb
pop
mov
pop
loopne
jp
lods
mov
cltd
cs
cmp
aaa
popa
fnstcw
xchg
jge
test
popf
or
cli
insb
in
shrl
mov
rorl
push
push
or
fucomp
push
jg
jb
into
das
push
test
jl
addb
push
icebp
sub
mov
dec
ljmp
popf
aas
dec
stos
xchg
adcl
jl
lock
scas
arpl
fs
pusha
jo
fldl
cmc
dec
ljmp
rol
push
rcll
sbb
jg
sub
nop
mov
cmp
mov
mov
fnstcw
jmp
out
icebp
clc
ss
mov
xchg
mov
and
add
dec
loopne
and
mov
icebp
sbb
daa
fistpll
pop
push
inc
cwtl
dec
add
jne
insb
xor
add
pop
fcmovne
add
cwtl
cmp
cmp
pop
mov
sti
adc
adc
popf
rclb
icebp
dec
inc
xchg
idiv
xor
stos
mov
fsubl
xor
outsl
lods
dec
dec
iret
jae
sbb
pop
xchg
cmc
ret
mov
mov
add
aad
push
into
out
mov
push
das
sub
scas
cmpsb
jne
jecxz
inc
xlat
or
fwait
cld
sub
sbb
test
gs
repz
int
or
xor
repnz
jmp
das
sbb
mov
mov
xlat
mov
pop
pop
cld
xchg
sbb
fsubp
gs
in
nop
outsb
push
cmp
jo
fcmovu
mov
lock
lcall
outsb
cwtl
adc
push
popf
cltd
and
gs
pop
lock
mov
add
inc
je
adcb
hlt
test
movsb
inc
xor
inc
cmp
cmp
dec
add
pop
inc
leave
jns
mov
inc
jmp
lods
cmp
or
enter
sbb
ja
aaa
pop
lret
push
cltd
rcl
dec
jmp
and
test
test
fdivrs
add
lret
jecxz
cmp
dec
std
mov
pop
pop
call
add
das
ret
sub
mov
xchg
dec
xchg
pop
cli
dec
test
aad
xor
aad
cwtl
push
shr
stc
adc
mov
test
stc
jae
ss
ds
stos
jo
cmp
ret
add
sub
adc
push
ret
bound
mov
int
cmp
popf
sbb
ljmp
call
loope
jl,pt
inc
arpl
icebp
fcoml
sbb
sysexit
ret
nop
scas
mov
lahf
add
fwait
std
xor
rorb
lock
mov
js
scas
sub
push
or
dec
shll
and
out
sbb
movsb
dec
repnz
pop
mov
pop
push
pop
loop
pop
and
aaa
idivl
movsb
jmp
arpl
cmp
sbb
jp
fildl
push
push
pop
leave
mov
add
pop
ljmp
pop
pop
cltd
lahf
cmp
adc
or
jmp
and
cmpsl
clc
imul
enter
sub
cli
sarl
or
mov
cld
push
fisttpll
sub
push
cmp
out
in
dec
adc
in
fidivs
sbb
mov
push
out
hlt
fcomps
pop
lods
imul
cmp
out
out
insb
push
ss
fstpl
lds
out
notb
and
jo
inc
xor
sti
xchg
mov
lret
fidivs
pop
hlt
lcall
fisttps
pop
xchg
ljmp
outsb
sbb
mov
inc
into
insb
mov
in
rorl
arpl
sbb
and
mov
pusha
into
daa
pop
cmp
inc
hlt
negl
jp
cmc
jne
leave
jae
or
push
aas
sbb
mov
jns
cmpsl
mov
aam
das
jne
ret
clc
add
loope
mov
add
inc
aam
movsl
cmpsl
dec
sbb
adc
cmp
es
ret
inc
stos
in
xchg
aam
pop
out
cs
iret
loop
push
icebp
jmp
jmp
or
test
mov
xchg
sbb
xor
adc
daa
mov
pop
mov
repnz
sahf
sahf
jo
mov
cmp
mov
jmp
loope
dec
mov
shll
nop
adc
mov
jg
lcall
insl
or
cli
enter
xor
aas
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
out
push
sub
addb
aad
scas
mov
dec
mov
mov
and
mov
adc
push
dec
outsl
aam
add
movsl
jne
jae
cmpsl
aaa
fsubs
and
pop
das
jne
and
div
add
dec
rorb
outsl
imulb
dec
pushf
xchg
cmpsb
pop
dec
sar
fidivrl
aam
mov
insl
jmp
pusha
cmp
aam
and
dec
xor
and
fdivs
int3
fs
shl
lcall
cmp
addr16
sbb
ss
push
inc
fs
enter
xchg
push
movsb
or
push
js
sbb
testl
inc
inc
mov
iret
push
jne
pop
mov
xchg
xor
add
pop
push
dec
adc
mov
jae
fnsave
popa
stmxcsr
inc
adc
or
cmp
jge
aad
cmp
dec
hlt
cltd
or
insl
aad
shll
inc
xor
xor
int
pop
call
scas
bound
leave
into
cmp
inc
int3
ss
sbb
sarb
mov
pop
shr
fs
pop
mov
aam
push
jbe
adc
jl
push
jae
or
out
popa
sbb
idivl
sbb
mov
push
push
stos
mov
aad
cmp
in
xchg
jb
inc
je
pop
or
fwait
pop
mov
imul
adc
and
lret
push
in
nop
xchg
insl
orl
sub
jae
add
daa
pop
mov
aad
push
mov
adc
lea
aaa
mov
cmpsb
sahf
add
pop
mov
or
sub
ret
pushf
mov
aam
and
popf
lea
arpl
out
jl
mov
rcr
mov
imul
int
daa
push
gs
inc
xchg
dec
imul
dec
dec
stc
add
cmp
test
mov
and
push
pop
mov
loop
or
fdivs
xchg
and
cmp
cmp
or
xchg
ficoms
outsb
imul
popl
sbb
mov
jae
outsb
sub
mov
inc
mov
jle
pop
es
xor
div
mov
push
stos
scas
out
add
aas
push
testb
mov
cmp
out
lcall
shll
std
xchg
cmp
pop
push
ja
jae
movsl
enter
mov
mov
jmp
loope
push
sbb
ljmp
pop
lds
pop
mov
jns
icebp
push
notl
xchg
mov
mov
jne
clc
xor
hlt
xor
jns
push
ss
sbb
sub
fs
in
push
and
add
test
mov
sbb
push
pop
pop
adc
cmpsl
out
js
xchg
movsb
enter
mov
imul
out
pop
das
mov
jmp
adc
or
mov
dec
or
inc
adc
lret
loope
std
cmp
popf
or
cmp
loope
jl
xchg
adc
mov
inc
cmp
xorb
mov
jmp
ss
gs
cmpb
xchg
out
cmpsl
xor
dec
mov
daa
arpl
cmp
pop
xchg
add
or
loop
dec
inc
inc
inc
lcall
inc
aad
and
mov
enter
xor
ficoml
dec
mov
xor
push
mov
sub
gs
pop
mov
jae
xor
jae
jecxz
cmpsb
enter
jg
das
sub
push
add
mov
inc
fcom
clc
fisttps
or
add
or
out
test
mov
stos
rclb
and
int3
aaa
ljmp
adc
adc
daa
xchg
movsl
iret
push
shrb
icebp
imulb
int
into
push
cmp
push
popf
stos
lea
std
adc
adc
cmp
jg
push
fsubr
pop
fwait
or
jns
rcrb
or
insl
pop
pop
fisubl
leave
adc
cmp
lea
imul
test
fnstcw
dec
push
aas
jmp
xor
cmp
pop
cmp
shrl
jne
sbb
outsl
xchg
fwait
push
loope
clc
and
mov
arpl
cmp
std
aad
loop
mov
cmpsb
mov
xchg
dec
icebp
movsl
mov
in
jno
push
arpl
inc
dec
or
add
or
jecxz
pusha
push
jle
adc
repz
push
pop
sub
repnz
movsl
xchg
cmp
or
int
mov
in
dec
pop
shll
push
fcmovb
xchg
adc
fldl2t
jecxz
in
or
mov
xchg
pop
mov
mov
arpl
jmp
shlb
jnp
adc
mov
jnp
jl
sub
dec
js
ret
pop
pop
sbb
xchg
mov
push
lret
jnp
or
aaa
stos
xchg
ds
pop
imul
incl
enter
repnz
mov
outsb
arpl
dec
mov
in
or
out
push
mov
fsubr
xchg
adc
cltd
dec
addr16
sub
loop
aas
fcmovne
sbb
in
fmuls
ds
mov
paddw
shll
es
mov
push
scas
mov
and
popa
push
jl
or
iret
jb
je
xor
lcall
popf
sbb
sbbl
int3
inc
adc
test
clc
leave
and
mov
and
icebp
cmp
xor
pop
insb
lds
call
pop
shll
hlt
shl
cmp
cmp
push
sub
xor
addb
dec
ret
inc
push
ja
insl
xchg
orl
dec
mov
fwait
test
in
es
outsb
das
adc
lsl
jg
mov
cmc
aad
cltd
mov
ficoml
mov
fisttpl
iret
mov
pop
addb
es
sbb
cmc
jge
cmp
repz
push
mov
push
dec
mov
mov
sub
cmp
repnz
popa
jle
jge
push
rsqrtps
aad
lods
sti
mov
mov
xchg
dec
sbb
push
adc
sub
outsb
xor
dec
jg
push
inc
paddb
fistpl
mov
add
jge,pn
jnp
std
fbld
xchg
test
push
sub
mov
adc
adcl
sbb
repnz
test
sbb
push
lods
pop
sbb
mov
pop
mov
adc
or
mov
add
rorl
or
cmp
dec
pushf
pop
stc
cld
jmp
in
sub
repz
divl
shll
or
xor
imul
cmc
push
cmp
fildll
loopne
sub
pop
lods
inc
sbb
push
mov
std
hlt
adc
add
ffree
incb
imul
inc
xor
enter
sub
push
rcl
jnp
dec
fs
outsl
andl
sbb
ds
mov
iret
mov
mov
aaa
test
cli
movsb
add
pop
pop
sub
xchg
int3
and
sub
lahf
cmc
aam
cmpsl
call
pop
mov
nop
xchg
pop
out
xchg
mov
xchg
in
xchg
jbe
dec
sub
push
je
es
int
mov
fistpl
adc
adc
pop
or
inc
shrl
xchg
pop
lahf
inc
cmp
test
and
add
aaa
cmpsl
test
pop
lea
inc
mov
inc
xor
push
push
and
arpl
cmpb
add
lahf
outsl
mov
lcall
xor
enter
out
lods
mov
cltd
push
push
sub
aas
inc
sbb
out
adc
and
repnz
push
mov
nop
loope
jmp
dec
popa
inc
mov
movsb
dec
xchg
imul
or
push
fisubl
mov
sbb
jb
rcrl
jne
sub
mov
outsl
and
mov
enter
movsb
leave
mov
and
inc
int3
adc
cld
mov
rcrb
or
lahf
mov
push
pop
call
mov
mov
cmpsl
mov
out
xlat
mov
cmc
pop
inc
imul
and
xchg
in
sub
sub
push
sub
outsl
pop
cmpsl
daa
ja
scas
rclb
les
das
popa
repz
mov
imul
out
add
push
mov
test
ja
in
add
movsl
mov
rclb
jge
cmpsl
inc
insb
in
into
or
adc
cltd
jbe
and
xchg
add
and
in
jbe
in
adc
mov
pushl
ficoml
out
pop
cmp
or
test
dec
iret
push
dec
sbb
fwait
jbe
ret
lret
rclb
ja
push
mov
xchg
shlb
insl
frstor
push
xor
mov
gs
pop
ja
xor
repz
ja
movsb
fstpt
jecxz
int
xchg
lcall
jae
push
fdivrl
mov
call
ja
xchg
cmovge
jp
test
int3
pop
movl
ss
xor
or
in
sti
sub
jp
push
sbb
mov
ret
lret
ja
mov
push
push
mov
jmp
pop
mov
lea
icebp
scas
pop
std
ljmp
out
popf
aaa
bound
xor
notb
or
xor
mov
mov
test
or
in
pop
dec
jmp
sahf
mov
push
insl
js
int3
inc
sbb
and
push
ljmpw
cli
stos
je
daa
repnz
enter
sbb
addl
xlat
pop
ss
pop
sub
cmp
pop
pop
xchg
xchg
cmp
xchg
inc
ret
xchg
out
cmc
aaa
sbb
repz
mov
out
pop
jbe
sub
cmp
lock
imul
mov
lret
stc
and
insl
pop
push
mov
mov
sub
ret
pop
icebp
lcall
out
push
xchg
sbb
mov
cmp
mov
shlb
stos
or
dec
data16
mov
mov
cwtl
test
xor
mov
sbb
adc
lcall
mov
scas
xchg
jecxz
mov
leave
adc
push
leave
rorb
xchg
movsl
sub
jb
sub
mov
sti
xchg
sbb
jo
test
repnz
repz
hlt
orl
jbe
fistl
dec
rclb
dec
push
xchg
mov
push
xchg
lock
popf
insb
pusha
sahf
sbb
mov
xchg
cmpsb
or
xchg
loop
ficoml
mov
loopne
insb
popf
mov
leave
ss
or
jecxz
orl
jnp
sahf
mov
mov
inc
fcomi
push
cwtl
xor
js
fsincos
lcall
push
jle
dec
inc
jg
mov
imul
hlt
sub
ja
dec
lcall
ror
and
jno
in
in
sbb
xchg
mov
into
adc
orl
xchg
or
js
daa
dec
test
imul
fiadds
lret
add
in
in
lock
push
jp
mov
push
lahf
test
mov
negb
cli
repnz
test
loope
in
mov
pop
inc
inc
or
xor
ds
mov
ja,pt
sub
adc
mov
and
insb
and
pop
adc
lcall
jb
cmpsb
sbbb
jp
movsb
data16
cmp
sub
mov
jno
aaa
outsb
xor
xchg
mov
je
daa
sub
or
cmp
and
in
notl
mov
mov
dec
jmp
and
or
repz
sbb
mov
pop
pop
or
ja
mov
cwtl
sbb
stos
incb
fidivl
lea
jb
repnz
jg
pushf
cld
mov
cmpsl
mov
jnp
or
xor
sbb
decl
mov
std
push
mov
lock
movsb
testb
push
clc
mov
cmp
inc
sub
mov
ret
test
inc
cmp
xchg
sub
cmp
subb
mov
inc
cmp
sbb
test
xchg
push
sub
adc
inc
rorb
mov
pop
sbb
adc
scas
sub
stos
adc
sbb
or
xchg
out
enter
cmpsb
jge
fidivrl
jecxz
inc
or
sbb
adc
addb
inc
xchg
icebp
jns
incb
nop
sbb
jmp
mov
test
mov
loop
les
pop
iret
jns
insb
std
bound
xchg
into
rep
sub
adcb
pusha
and
movsb
pop
imul
pop
lea
mov
in
mov
mov
xchg
out
push
sbb
mov
lret
fadds
in
xchg
cmp
lahf
fwait
sbb
add
mov
mov
and
out
js
xchg
aad
cmp
int
adc
jo
and
arpl
push
cmc
addb
xor
adc
pop
jge
add
or
fs
in
and
das
adc
popa
push
test
shrl
div
scas
push
aas
sub
pop
aad
out
jnp
clc
scas
rol
pop
cltd
cli
ljmp
pop
repz
push
lret
push
sub
pop
add
mov
add
je
xor
shl
mov
pop
sub
mov
inc
jnp
mov
mov
mov
lret
imul
in
adc
sbb
adc
jo
out
pop
cmp
mov
repnz
lcall
sub
stos
push
xor
fucomp
push
mov
adc
iret
pop
call
and
ss
in
clc
pop
inc
aas
jle
mov
pop
ret
mov
inc
add
scas
push
scas
outsb
jb
add
aam
push
cmc
jg
sbb
lahf
push
test
jae
add
pushl
loope
leave
mul
pop
adc
icebp
dec
repnz
cmpsb
movsb
sub
mov
and
or
inc
sbb
mov
inc
lcall
mov
clc
push
movsb
addr16
mov
outsb
sub
push
sub
jnp
cwtl
aad
push
add
sbb
adc
fisubrl
push
clc
je
pop
fsubrp
mov
inc
xchg
int3
mov
int
jl
jl
and
cmp
xorb
push
dec
sub
and
sub
mov
fwait
insb
mov
aaa
add
mov
pop
cmp
pushf
imul
jl
pop
or
subb
movsb
xlat
xor
push
jbe
pop
mov
in
add
sub
scas
inc
lock
iret
xor
jmp
inc
jge
popl
add
cmpsb
mov
insb
mov
cmp
lods
popf
stc
sbb
repnz
mov
js
paddsw
mov
test
xchg
xchg
imul
roll
mov
mov
fsqrt
mov
jp
adc
jbe
mov
scas
mov
mov
rcl
push
lock
adc
mov
jo
dec
adc
testb
testl
sahf
cltd
fbld
push
enter
ljmp
adc
aam
rorb
hlt
add
movsb
add
fidivrs
xor
das
xlat
pop
lret
or
dec
cli
xchg
andl
test
loope
adc
mov
insb
sbb
lea
jmp
int
fwait
ljmp
push
jns
pop
mov
adc
test
add
lahf
ds
fcoml
xchg
fstl
mov
daa
nop
insl
push
fld
adc
sbb
push
ret
xchg
mov
xor
iret
pushf
jmp
in
pop
int3
sahf
pop
mov
xorl
dec
leave
cmpsl
das
mov
bound
mov
gs
sbb
aaa
adc
push
xchg
test
sbb
inc
enter
dec
mov
pop
mov
adc
mov
lods
add
loopne
pop
xchg
add
jbe
and
clc
fdivs
lret
and
sub
shrl
xor
popf
sbb
inc
sbb
mov
add
push
stos
ds
xchg
inc
inc
adc
lods
lea
insb
lock
adc
in
lds
pop
pusha
jle
sti
jmp
test
xor
lea
aaa
lock
or
mov
fisubrl
or
add
int
lds
adc
movsl
add
pop
and
cmc
sar
pushf
dec
enter
mov
xor
call
sahf
test
sahf
mov
lcall
sub
xlat
fprem
jg
jns
cmpsb
adc
mov
cmp
je
call
bound
jo
std
mov
pop
jp
push
clc
add
divps
inc
xchg
jne
ljmp
or
cmp
femms
sahf
loopne
shl
mov
xchg
inc
jne
xor
lahf
out
insl
jnp
jmp
popf
out
and
mov
in
mov
in
test
xor
xchg
dec
nop
stc
mov
inc
scas
ljmp
aam
mov
je
jle
popf
inc
call
xor
xchg
movsb
enter
sbbl
outsl
jg
gs
cmp
and
imul
dec
xchg
movsb
mov
mov
addl
lret
out
or
jbe
inc
mov
add
repnz
jecxz
mov
xor
sbbb
mov
mov
outsb
xchg
xor
pop
xlat
decl
push
fisubrs
insb
dec
adc
xor
xchg
test
jmp
je
out
dec
dec
cmp
push
pop
push
ret
xchg
pop
jp
in
pusha
mov
lret
xchg
mov
mov
mov
sarl
fdivl
inc
xor
jle
popf
scas
pop
jmp
jl
stos
mov
sbbb
adc
jp
xchg
iret
jmp
cmp
sub
add
ror
cld
in
sbb
cltd
pop
mov
cmc
adc
jo
jno
sti
xchg
gs
adc
int3
dec
and
mov
fwait
push
add
fildll
enter
mov
push
js
daa
jnp
jno
sti
ds
add
push
mov
and
mov
jmp
jns
jmp
out
mov
cmp
push
or
push
es
or
xchg
fucompp
jno
repnz
call
sub
cmp
adc
je
or
fstps
pushf
adc
mov
ret
sub
fdivs
push
in
sti
pop
sarl
dec
adc
push
ljmp
stc
nop
or
lcall
lock
inc
mov
mov
outsb
push
in
sbb
fstpl
in
xchg
mov
adc
andb
mov
sahf
mov
cld
outsl
inc
sahf
sti
or
cmpsl
lods
insb
repnz
fs
addl
cmp
xchg
pop
mov
sti
shrb
nop
mov
jno
push
sbb
loop
pop
xor
scas
xchg
jl
rorb
cmp
repnz
hlt
scas
bt
daa
add
stc
out
or
add
sbb
out
daa
jns
add
xor
fwait
xor
sub
push
mov
xor
cmp
add
notb
sub
frstor
inc
sub
and
cltd
fld
jmp
imul
or
fcmovnu
rol
add
dec
sbb
cmpsb
out
outsb
lods
jno
mov
sbb
cld
cwtl
js
ja
leave
cltd
test
add
sahf
jbe
push
mov
lock
fiadds
mov
aam
jecxz
xor
jb
arpl
jp
inc
sub
cmp
loop
inc
mov
outsl
xchg
cs
mov
lahf
jmp
scas
pop
mov
jmp
dec
cwtl
outsl
ret
ds
jp
mov
cmpsl
leave
mov
pop
pop
jo
xchg
in
movl
lret
movsb
sub
sbb
imul
in
add
ficoml
cli
push
das
scas
cmc
loopne
cmp
jmp
inc
mov
xorl
xchg
mov
sub
xchg
fstp
aad
outsl
cld
int3
lret
roll
sbbb
imul
pushf
adc
push
mov
idivl
std
icebp
pop
mov
test
lret
pop
mov
repz
inc
mov
cmp
xor
sbb
sub
out
inc
sub
add
xchg
dec
nop
int3
or
sbb
cwtl
or
mov
cwtl
outsl
out
repz
xchg
pusha
pop
bound
pop
and
ret
lods
mov
pop
addl
pusha
rcrb
add
pop
lds
ficomps
dec
or
inc
test
cmc
cmpsb
lods
mov
sahf
mov
xchg
mov
push
jno
jns
in
adc
repnz
adc
adc
test
enter
mov
leave
dec
and
les
adc
loop
jecxz
test
negl
andl
lods
int3
outsl
fs
sub
xor
jno
mov
push
pop
pop
andl
nop
pop
into
imul
xchg
lahf
jp
xchg
adc
mov
mov
jb
xchg
xor
mov
or
xor
inc
mov
ret
sub
jne
stc
or
jne
push
mov
je
ja
and
daa
lahf
jg
pop
lods
das
es
iret
dec
ficoms
cmc
out
popa
push
push
rclb
xor
sub
cmp
nop
adc
icebp
sahf
push
mov
push
cmp
mov
xchg
push
out
imul
aam
stos
lods
in
aam
xor
cs
mov
push
mov
pop
js
outsb
mov
lods
roll
mov
bound
jo
es
adc
inc
aaa
adc
scas
mov
push
pop
cltd
dec
mov
adc
lea
stos
gs
out
fimuls
sub
cmp
ja
cltd
stc
in
dec
pop
shll
dec
push
cld
cmp
cmp
lret
push
cmp
shlb
cltd
test
data16
jae
mov
faddl
mov
pop
dec
nop
pop
and
xor
or
jne
mov
ret
mov
cmp
dec
ja
jle
inc
or
mov
fnsave
mov
sub
aad
mov
or
mov
cs
rorb
testb
jns
lds
stc
push
cmp
rcrb
sub
pop
inc
mov
push
mulb
fdivrl
dec
loop
cmp
push
jbe
sti
sbb
pushw
dec
lret
insl
mov
or
lahf
mov
popa
jb
jmp
and
ja
cli
data16
xchg
test
mov
push
stos
and
movsb
pop
cltd
add
stos
sub
mov
insb
out
ret
mov
fnstenv
mov
jns
cmpsb
dec
jno
adc
rclb
sub
pop
test
sti
inc
test
or
and
es
cs
repnz
adc
push
and
mov
outsl
out
xchg
lret
mov
add
fwait
sub
insl
aaa
or
push
ljmp
repz
jge
xchg
cmp
mov
cmp
mov
jmp
outsl
push
hlt
shlb
xor
dec
inc
xchg
lds
inc
or
or
das
pop
pop
lea
jge
inc
jo
loop
mov
and
call
and
jl
adc
sarb
adc
xchg
sbb
in
push
or
mov
mov
jbe
test
sti
outsb
sbb
inc
and
cmpsl
ret
mov
xor
enter
xchg
sbb
popa
or
mov
in
cmp
aas
adc
mov
jle
subb
fwait
or
push
cmc
rcr
xor
adc
sub
inc
pop
jecxz
cmp
sbb
pop
fisttpll
xor
data16
ja
movsl
shll
xchg
ds
das
xchg
cmc
and
fdivr
fcmovb
add
arpl
stc
mov
inc
das
cmp
mov
mov
inc
or
daa
push
adc
cmp
xlat
je
or
dec
cmp
inc
fs
enter
mov
xor
push
push
negl
mov
out
mov
jl
mov
test
sahf
xor
fistl
lahf
fdivs
inc
push
push
pop
and
int
fwait
orl
push
pop
in
and
lods
aas
or
in
push
jle
fimuls
sub
cwtl
add
sarb
scas
adc
aam
leave
jmp
outsl
xchg
xchg
mov
pop
gs
aaa
xchg
pop
test
in
ljmp
or
or
mov
cld
mov
dec
outsb
pop
pop
pusha
fbstp
push
dec
jmp
push
xchg
jg
xchg
add
in
stc
lods
dec
push
adc
aam
faddl
pop
je
dec
shll
clc
mov
sarl
push
cmpsl
imul
cmpsb
add
leave
xor
jge
or
jg
sub
mov
adc
idivl
and
sub
imull
rclb
push
sbb
xchg
jg
push
cmpsb
inc
and
rclb
clc
mov
gs
mov
int
ja
shll
push
add
push
fcomps
or
add
insb
pop
pop
gs
std
cltd
dec
or
ret
jae
aam
outsl
outsb
ret
ret
icebp
adc
cltd
xlat
xor
stos
sbb
xchg
insb
pop
adc
inc
lock
mov
int
add
ds
xchg
push
or
mov
cli
sbb
jle
sub
aam
adc
aas
sarl
mov
es
push
cmp
sbb
cmpsb
stos
adc
add
daa
mov
out
or
in
fldenv
sbb
mov
popf
imul
int
sub
fsubr
aaa
sub
clc
rcrb
mov
xchg
into
add
sbb
fsts
in
test
push
sub
mov
stos
daa
dec
dec
repz
lret
xor
aaa
dec
cmp
cltd
stc
out
cmp
push
fdivs
outsl
cs
stos
add
sbb
or
cmpsb
mov
adc
cmpsl
ja
xchg
cmp
jnp
push
dec
lods
dec
ffreep
into
sti
add
pop
and
je
addl
dec
mov
sbb
mov
inc
dec
add
int
cs
mov
cli
push
jg
fisttps
lock
mov
push
mov
pop
pop
daa
mov
outsl
mov
push
pop
cld
pop
jns
mov
and
imulb
mov
flds
and
aas
stos
lea
xchg
popa
sub
mov
pop
mov
and
xchg
or
dec
lahf
imul
ss
cwtl
adcl
test
fucomp
imul
sbb
cmp
sub
xchg
cmpsl
inc
inc
pop
mov
shrb
inc
push
jge
jae
cmc
inc
jnp
pop
or
call
mov
cmp
pushf
lods
dec
test
sbb
or
mov
sbb
adc
out
rep
out
xchg
mov
push
cmp
push
in
out
pushf
xchg
mov
popa
pop
cmp
rol
mov
call
sub
fs
inc
call
cmc
adc
hlt
mov
pop
sti
mov
lods
cmpsl
jo
jecxz
scas
into
je
jnp
push
out
gs
cmpsl
push
enter
push
jg
and
mov
movsb
insb
jns
jg
jg
pusha
testb
push
psubsb
jae
inc
in
lea
mov
jne
mov
addr16
pop
lcall
or
jnp
adc
add
addr16
and
mov
testl
pop
je
ljmp
pop
les
insl
pop
fmul
xor
dec
stos
sub
dec
outsb
dec
xchg
sahf
push
fsts
icebp
int3
jecxz
scas
lods
mov
inc
lret
data16
sbb
lahf
ret
sbb
cli
pop
or
repnz
lds
stos
cld
insb
leave
jns
shrl
push
jp
shll
xchg
call
rorb
dec
fisubrl
cmp
xchg
js
add
aam
cmp
xchg
addr16
mov
imul
push
xchg
fadd
gs
stc
cltd
dec
pop
in
adcl
repnz
cltd
in
test
jns
mov
ja
movsl
push
out
mov
sbb
and
and
mov
xchg
xorl
gs
xchg
ljmp
sarl
cltd
cld
aas
sahf
xor
mov
dec
or
inc
hlt
sub
pop
mov
xchg
push
aam
popl
addr16
cmp
adc
das
add
mov
imul
push
cli
xor
xchg
push
lcall
ret
mov
sbb
jge
mov
rol
push
icebp
aas
sbbl
insb
inc
inc
test
xchg
aaa
push
inc
xchg
add
loope
push
fildll
pop
lea
and
cmp
mov
popl
out
pop
mov
popa
sbb
pusha
imul
ja
push
cli
and
call
push
dec
test
pop
pushl
call
shlb
cwtl
fwait
daa
inc
push
roll
xor
aas
mov
data16
rcrl
js
jmp
jmp
mov
cmp
mov
ja
negl
xchg
cwtl
test
add
das
cmovo
rorb
fcmovne
aam
lret
mov
stos
mov
in
and
inc
pop
add
mov
cmp
xor
loopne
dec
in
addl
pushf
and
jbe
std
lods
mov
jecxz
mov
dec
sarl
int
sbb
lea
mov
push
mov
push
lock
test
loope
dec
test
fnstsw
into
mov
push
or
dec
pop
jecxz
sub
inc
jecxz
lcall
jl
cmpsb
and
ret
sub
pop
or
ja
loopne
jnp
or
loopne
cld
mov
mov
jp
inc
js
mov
inc
or
enter
push
mov
adcw
add
cmp
jmp
shlb
xor
and
adc
mov
dec
pushf
add
jne
test
push
hlt
inc
xor
sbb
xlat
mov
cmp
and
imul
shll
insl
mov
cs
jno
jle
imul
fildll
data16
cmpsl
fstpl
pop
gs
into
daa
xchg
aaa
cld
sbb
xor
cmc
dec
ret
lock
andl
push
mov
or
sarb
test
iret
xlat
cmp
sti
xchg
xlat
mov
xor
push
lock
xchg
fcmovne
push
test
aam
in
rcr
rolb
aas
cmp
out
cmp
psubusw
and
fnstcw
dec
dec
xchg
lods
xor
cmp
adc
es
jne
cld
sub
push
mov
icebp
mov
nop
jns
jno
icebp
popa
jmp
arpl
inc
and
cmp
addb
dec
and
aas
inc
lods
pop
mov
mov
into
push
arpl
add
dec
ss
push
std
imul
cmp
fwait
mov
ljmp
mov
pop
ret
mov
pushf
clc
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
fisubs
add
test
xchg
daa
mov
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
