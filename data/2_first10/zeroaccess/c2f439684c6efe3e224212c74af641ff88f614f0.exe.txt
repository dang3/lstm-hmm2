push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
inc
add
push
mov
add
xchg
jmp
mov
pop
xchg
imul
push
dec
ret
sub
imul
test
cmp
repnz
mov
and
mov
inc
and
add
pop
fwait
aaa
js
mov
cmp
lcall
mov
imul
pop
out
pusha
push
push
jne
stos
testl
jle
and
repz
lods
pop
xor
mov
outsb
repz
mov
mov
pusha
das
xor
scas
clc
cli
ja
push
jns
adc
push
ficoms
mov
loope
aaa
lods
and
bound
dec
out
inc
shlb
cld
cmp
test
xor
movsl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
jmp
jg
jle
jg
jle
mov
scas
fucom
shll
jl
ljmp
pop
inc
jmp
addr16
push
lcall
sub
movsb
pop
test
daa
pop
pop
mov
jnp
jl
negb
or
dec
jmp
mov
iret
mov
jbe
ss
movsl
sub
pop
cmpsb
shll
in
insb
add
or
cmp
pushf
and
cmpsb
sbb
cld
cld
lds
sti
pop
jge
mov
and
jecxz
inc
mov
icebp
cltd
jmp
adc
xor
or
xor
enter
mov
rcll
xchg
icebp
or
int3
add
pop
mov
lods
cmpb
in
ds
dec
mov
dec
push
jp
pop
mov
popa
xchg
out
mov
sub
insb
inc
orl
add
inc
lock
jmp
jae
negb
jb
inc
sarb
nop
popf
and
pushl
out
lea
popa
push
repnz
jmp
repz
sbb
fdivp
lds
scas
lahf
jae
repnz
inc
pop
jns
stc
std
ja
inc
adc
xchg
out
hlt
mov
mov
fcmovnbe
mov
sub
jnp
lahf
std
ljmp
les
fimuls
dec
clc
out
fistpl
ljmp
inc
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
addr16
jge
jle
jg
jle
jmp
lcall
inc
push
and
xor
mov
sti
popa
int
out
pop
adcb
icebp
psubw
mov
addb
jmp
dec
hlt
jb
scas
or
add
and
xchg
rolb
pop
xchg
int
push
ret
test
adcb
mov
in
fnstenv
loope
jecxz
cmp
in
pushf
or
or
mov
adc
sbb
negb
cmc
leave
lods
mov
movsl
cmpsl
pop
sub
les
add
pusha
mov
popa
or
inc
arpl
dec
lods
cmp
int3
fdivs
sbb
cmp
mov
mov
dec
daa
adc
sub
gs
je
mov
mov
push
add
call
mov
mov
clc
repz
clc
inc
pop
mov
xor
sbb
sbb
push
cmc
xor
xor
pop
jl
outsl
movsb
or
scas
outsb
lret
or
add
inc
incb
aam
mov
adc
pusha
xchg
xchg
dec
push
xchg
lock
sbb
mov
lahf
mov
dec
or
add
adc
adc
daa
inc
xor
push
nop
insl
and
test
add
xor
push
shrl
mov
into
inc
inc
push
and
aaa
mov
dec
adc
iret
bswap
adc
push
inc
pop
subb
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
mov
cmpb
cli
jg
jle
outsb
xchg
push
fwait
xor
data16
jmp
sub
rol
mov
cmp
mov
jo
jecxz
test
lcall
mov
inc
out
jbe
xchg
repz
mov
lea
or
jo
adc
jg
cwtl
dec
jmp
clc
jo
mov
daa
stos
inc
pop
dec
and
inc
enter
aas
add
pop
cmp
xor
mov
int3
andb
ret
test
xor
cmpsl
rclb
and
jg
and
rolb
addl
mov
xchg
int3
mov
push
scas
jecxz
push
in
pusha
and
xchg
bound
pop
imul
pop
rolb
or
ds
xor
mov
je
or
mov
loop
mov
mov
popf
mov
aaa
sti
js
rcrl
out
mov
repz
sbb
fsubrs
mov
lret
adc
aas
fsubs
daa
xor
xchg
xor
decb
sub
ds
outsb
pop
xchg
movsl
mov
jge
test
sub
xor
push
fidivrs
xchg
add
lds
out
jb
rcrl
subl
and
xor
inc
in
or
mov
jmp
xchg
mov
push
jo
adc
dec
das
jl
mov
js
jle
jg
jle
sub
sbb
bound
xor
lods
sub
and
sbb
decb
xchg
mov
dec
mov
std
cmc
insb
cmp
lahf
xlat
add
mov
cld
js
and
or
pusha
cmc
inc
lds
push
idivb
inc
push
jo
cmp
xchg
sbb
fmuls
xor
mov
popf
xchg
or
mov
std
and
subb
imul
ret
or
cmp
loop
dec
fdivr
bound
xchg
ret
sub
xchg
jp
dec
inc
sbb
sbb
inc
sbb
mov
xchg
mov
dec
fadds
jl
add
mov
cltd
dec
add
sub
pop
call
out
pop
ljmp
iret
inc
pop
dec
mov
sub
jo
in
ficoml
fcmovnbe
push
jmp
adc
pop
out
jle
movsl
out
xor
out
cmp
in
adc
mov
push
scas
jge
mov
add
lods
cmp
mov
push
mov
or
loopne
js
xor
pop
gs
ds
adc
xchg
lcall
popl
sbb
sbb
mov
into
push
dec
cmp
cmp
loop
icebp
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
and
fisubl
mov
jle
jg
jle
ss
nop
out
add
std
adc
push
in
xchg
add
mov
lds
sbb
xchg
lods
cwtl
xor
mov
sbb
inc
cli
clc
scas
pop
jmp
repnz
out
xor
xchg
es
test
or
jbe
pop
repnz
pop
aam
inc
xor
dec
cmc
adc
mov
ss
dec
stos
or
fcomps
loope
rep
sub
cli
movsl
into
jne
dec
std
mov
sbb
cli
daa
mov
cmp
ja
popa
dec
mov
ret
lock
outsl
pop
out
ds
out
mov
pop
fstps
xor
push
bound
xlat
mov
xchg
pop
or
imul
mov
mov
call
push
dec
std
add
add
push
call
pushf
jns
inc
jle
adc
jo
lret
clc
scas
jno
xor
mov
xchg
inc
cmp
incl
cld
ret
xor
les
xor
pushf
hlt
xor
stos
ljmp
sbb
bound
cmpsl
push
add
xchg
iret
pop
pop
adc
movsl
pop
insl
in
push
cld
stc
ja
loop
popa
movsl
fcompl
xor
pop
out
or
xor
shlb
jl
ret
daa
pushf
and
out
stc
mov
adcb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
fs
pop
jle
cli
jg
jle
adc
cmp
mov
sahf
add
mov
mov
movb
mov
dec
cld
dec
outsb
scas
mov
les
xor
popl
add
sbb
cmp
nop
xor
lahf
lret
icebp
lea
mov
in
mov
mov
mov
test
push
pop
repnz
dec
xchg
cltd
jmp
into
ret
addr16
bound
repnz
bound
stc
daa
dec
scas
ret
mov
mov
mov
mov
jg
pop
xor
lds
xor
lret
jmp
or
add
adc
jp
cwtl
decb
addb
push
scas
push
add
mov
mov
push
mov
adc
push
cs
jp
paddb
adc
jge
mov
cli
push
or
fldenv
or
and
es
outsl
push
and
cli
repnz
ret
movsb
adc
adc
sub
push
pushf
or
shl
test
adc
lret
adc
add
push
popf
mov
aam
jae
inc
push
sub
pop
xchg
adc
adc
enter
pusha
rcl
call
mov
ja
fs
xchg
bound
data16
pop
xchg
jge
inc
cmp
mov
adc
or
test
pushf
daa
imul
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
hlt
jp
mov
cmpb
adcb
fdivs
lds
aaa
lret
rclb
mov
lret
lods
mov
shr
jnp
xor
jns
ljmp
mov
lods
xlat
imulb
lret
in
enter
loopne
js
aam
loop
test
into
mov
and
xchg
loopne
rorl
mov
inc
cmpsl
xor
cmpsb
ljmp
mov
je
repz
iret
cmp
mov
pop
mov
in
loop
out
leave
inc
cmpsl
sub
dec
dec
pop
call
stos
xor
popa
ljmp
inc
mov
stos
into
out
push
les
int
hlt
and
jmp
adc
xor
lods
test
mov
cli
mov
mov
outsl
jg
or
cmp
push
pushf
jnp
out
jmp
loop
xchg
or
std
in
adc
das
xchg
ja
test
imull
nop
jo
fs
and
fwait
lahf
or
ss
mov
jg
bound
enter
mov
cmp
mov
sbb
mov
dec
test
push
mov
aas
nop
clc
pop
sub
loopne
in
outsb
mov
xor
adc
aaa
jae
aad
repnz
sub
jb
test
jp
dec
push
pop
add
es
mov
add
jmp
cmc
dec
and
jno
push
mov
nop
push
loop
push
add
cli
jg
jle
sbb
ret
sub
sbb
jae
test
mov
dec
adc
push
outsb
loopne
cmc
das
xorl
adc
scas
stos
pop
pop
cmp
or
xchg
mov
testl
into
out
lds
in
mov
jecxz
push
sub
jecxz
mov
test
jle
add
cli
ds
push
retw
jmp
cmp
jl
xor
or
sahf
int3
mov
mov
push
pop
xor
xlat
mov
mov
sbb
adc
hlt
mov
aam
lahf
sub
dec
ljmp
jmp
cmp
xchg
xchg
xchg
cmp
ss
imul
pop
lods
push
repnz
movsb
dec
lret
add
scas
jmp
enter
inc
sub
pop
push
addr16
push
push
push
into
les
xchg
dec
ljmp
mov
xor
sti
lcall
inc
in
mov
fnsave
jp
jbe
scas
push
ljmp
mov
and
fldcw
jb
testl
mov
cmp
sub
mov
push
sbb
rcr
movsl
in
and
insb
push
leave
pusha
inc
ret
xchg
popa
out
add
dec
cmp
fbld
mov
bsr
hlt
ret
loope
xchg
mov
lahf
bound
sbb
stc
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
lret
push
lret
add
cli
jg
jle
push
cmpsb
daa
sbb
movsb
dec
jecxz
dec
xor
xor
mov
sti
std
push
pop
or
adc
ret
call
jge
or
sub
jmp
pop
insb
int
aam
pop
pop
jbe
hlt
popf
jno
xor
icebp
xchg
add
ret
pop
in
push
push
pop
pop
inc
or
add
xor
fists
cmp
and
rcrl
call
mov
call
jle
cmpl
cltd
insl
push
pop
xchg
push
fisubs
ret
adc
loope
hlt
das
bound
lcall
mov
call
adc
jb
call
and
mov
xchg
rorb
cwtl
inc
or
into
cmc
rcrb
cmp
fstps
mov
sti
push
adc
aad
mov
dec
sbb
mov
add
lea
and
sub
xchg
push
mov
aam
popa
push
cmc
add
cltd
add
jnp
roll
or
dec
cltd
fs
mov
lea
mov
addl
inc
add
sub
ret
inc
xchg
in
lcall
jp
jnp
inc
je
dec
xor
mov
jno
mov
jg
sarl
inc
xchg
adc
lock
icebp
fists
xchg
pop
add
sub
push
sbb
loop
sub
cmpsb
outsb
in
test
or
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
add
mov
add
cli
jg
jle
jnp
not
cmp
movsl
nop
jge
es
lock
fcmovu
loopne
mov
xor
mov
push
lods
int
jbe
xchg
inc
rclb
sti
xchg
in
test
push
test
push
cmc
xlat
stos
add
int3
xchg
add
mov
fcmovb
add
pop
push
add
inc
ljmp
mov
and
push
sbb
jle
xchg
frstpm(287
pop
sahf
push
aaa
cmc
clc
popa
and
cltd
cmp
inc
pop
cmc
jne
out
mov
xchg
cmc
in
and
mov
and
sub
sub
cli
dec
xchg
push
xchg
outsb
into
push
push
push
js
test
idivb
adc
stos
cmp
aas
shrl
adc
les
popf
xchg
jae
pop
stos
testb
jecxz
inc
and
adc
add
mov
inc
test
pop
jle
jmp
mov
sbb
or
adc
push
push
iret
stc
xor
test
ljmp
dec
js
fcomip
mov
xorb
sbb
shl
xor
mov
cmpsl
push
push
cmp
dec
cmp
movsl
xor
jg
dec
sub
mov
stos
lea
inc
rclb
inc
outsl
add
mov
lock
nop
out
into
or
lcall
jmp
cltd
inc
push
rorb
and
sub
and
xor
addr16
loope
jp
jne
xchg
je
pop
icebp
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
sub
push
jle
cli
jg
jle
xor
xchg
cmpsl
test
or
dec
add
jge
mov
add
xor
call
push
dec
movsb
mov
into
aad
aam
fxch
ret
aam
dec
insl
out
xor
xchg
push
pop
cltd
jb
ret
add
adc
fsubrp
aaa
push
insl
add
pushf
cwtl
js
push
add
aas
sbb
push
push
hlt
add
mov
imul
mov
and
in
arpl
lcall
adc
xchg
mov
push
cwtl
lcall
sbbl
push
call
cld
xchg
or
stos
jns
loop
mov
xchg
inc
mov
repnz
scas
xor
imul
nop
or
scas
xchg
lock
out
outsl
mov
mov
ror
mov
enter
push
and
jno
ja
adc
push
add
jno
mov
mov
xchg
lret
xchg
add
fwait
clc
je
or
xlat
scas
jle
mov
sbb
popf
dec
push
mov
xchg
jne
ret
outsb
jl
stos
adc
dec
cmp
adc
push
pop
std
data16
sbb
stos
lcall
sub
in
in
xchg
and
sbbl
ds
mov
push
sbb
add
sub
adc
dec
stc
and
jmp
inc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
cmp
lods
sub
or
jle
jg
jle
stos
pushl
pop
and
sub
jne
jmp
andl
add
and
sti
sbb
mov
jne
dec
push
repz
xchg
and
push
out
call
and
cld
loop
inc
xchg
push
push
jge
jmp
cmp
cs
cltd
icebp
sbb
lea
mov
mov
push
loop
lock
mov
addr16
sbb
dec
mov
adc
inc
jnp
fildl
jbe
not
ja
sub
rorb
add
push
ret
sbb
inc
mov
jge
xchg
xchg
pop
and
pop
shl
jbe
in
fimuls
mov
cmp
cmp
jo
cmc
push
xor
push
jne
fs
jle
mov
arpl
nop
leave
jne
or
imul
cmp
ja
pop
cs
push
int3
mov
popa
fnstsw
push
je
xchg
bound
test
inc
pop
mov
cli
inc
jg
int
push
inc
std
pop
and
pusha
jp
mov
sti
in
loopne
sub
outsl
add
mov
mov
jg
popa
jecxz
or
jmp
pushf
in
pop
insl
pushf
cmc
movb
push
clc
pop
dec
icebp
add
ret
aaa
mov
and
or
inc
clc
add
into
movsb
lods
push
enter
sbb
cmc
push
adc
es
int
lods
ljmp
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
xchg
inc
and
cli
jg
jle
fwait
dec
inc
pop
add
push
dec
jle
inc
out
and
jo
mov
jo
sbb
xchg
test
jmp
mov
push
sbb
mov
xor
shrl
cmpb
dec
enter
pop
push
lcall
xor
lret
push
arpl
fistps
push
mov
sbb
stc
sub
lret
push
dec
cmc
into
insl
cmpsl
sbb
and
out
in
insb
jno
pop
mul
adc
xor
jnp
mov
test
lods
test
mov
add
dec
or
ficoml
in
adc
movsl
add
push
mov
push
adc
and
ljmp
jno
repz
call
pushf
mov
or
mov
inc
pop
push
or
jnp
pop
sbb
fisubrs
popf
mov
fisubrl
mov
data16
pop
cmp
add
sub
addl
xor
ja
rep
ss
push
jmp
std
ret
xor
lahf
jmp
mov
pop
mov
je
mov
int3
jp
movsl
mov
fsubl
loop,pn
pop
and
loop
cmp
sbbl
add
je
lret
daa
cmp
push
mov
inc
ret
xor
sbb
scas
aas
push
pop
sti
sbb
or
pushf
pusha
fs
pop
or
inc
xchg
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
subl
jle
cli
jg
jle
cli
lods
lret
das
sbb
xchg
or
adc
sahf
mov
mov
imul
outsb
pop
cmp
push
cmp
loopne
sub
dec
subb
iret
loopne
sbb
sub
xchg
mov
test
into
mov
lods
fcompl
rclb
push
addr16
mov
cmp
pop
or
test
test
cwtl
adcl
xchg
sbb
pop
mov
insb
pop
mov
sub
and
dec
and
repz
es
xchg
rorb
repz
fdivrl
adc
push
adc
mov
mov
in
inc
add
faddp
jae
push
adc
dec
outsb
push
or
push
adc
mov
mov
lret
loop
mov
stos
inc
or
sub
dec
insb
hlt
dec
xor
sub
fists
push
ljmp
mov
dec
jne
add
and
cltd
outsb
popa
imulb
push
daa
jle
jo
xchg
cmc
out
aaa
repz
arpl
fadd
in
lret
jns
mov
xor
push
mov
and
dec
stos
ret
cmp
pop
cs
outsl
jb
mov
pop
sub
add
es
out
xor
cmpl
sub
inc
xlat
jnp
jl
imul
int3
lea
test
stc
push
notl
cmc
insb
xor
popf
sbb
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
in
mov
jle
cli
jg
jle
mov
or
mov
xor
inc
addr16
push
and
mov
mov
mov
rcrl
jl
jge
icebp
scas
push
add
cmpsl
sbb
push
lret
sub
fisttps
adc
sub
loopne
add
pop
jae
daa
adc
mov
cmpsb
jmp
fmull
or
jno
fsub
xchg
nop
sub
fiaddl
rep
mov
jb
sbb
xchg
fiadds
sub
xchg
cmp
dec
jmp
mov
inc
fdivs
xor
adc
cli
out
xchg
mov
mov
addr16
in
jp
imul
or
fdivrl
leave
mov
out
cmp
mov
bt
push
cmc
jg
leave
and
or
mov
pcmpgtb
add
ret
addr16
mov
ret
imul
xchg
mov
cli
jbe
mov
dec
outsl
mov
xchg
rcrb
or
jb
nop
movsb
fimull
ret
dec
push
std
mov
and
cltd
ffree
repz
xlat
fdiv
jno
loopne
hlt
loop
and
dec
mov
ljmp
or
jle
insb
test
jne
shl
push
xchg
shll
or
ljmp
push
cmp
jns
int
and
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
mov
jle
cli
jg
jle
imul
aas
fadds
inc
mul
outsl
xor
cli
push
out
sub
mov
dec
nop
jo
repnz
setns
xor
mov
inc
inc
mov
pop
lret
mov
jnp
mov
inc
stos
xchg
sbb
subl
xchg
pop
cmc
jp
cmp
mov
aad
stc
rolb
shrb
imul
dec
mov
enter
push
xor
in
pop
xor
add
mov
bnd
push
inc
jns
push
out
adc
xor
push
jae
bound
mov
jl
cmpsl
push
fsubr
lods
cltd
mov
push
popa
sub
out
les
xchg
cli
movsl
cld
call
jbe
adc
mov
je
jno
insb
mov
dec
push
mov
lret
mov
pop
daa
lret
jne
add
xchg
add
testb
jne
and
mov
or
adc
cmpb
notl
hlt
push
rcll
mov
mov
mov
sub
call
xchg
inc
adc
pop
sbb
js
inc
jmp
nop
sub
mov
mov
pop
push
clc
rol
mov
and
jne
mov
sbb
aam
iret
or
dec
fsubr
inc
loop
and
mov
xchg
test
jnp
scas
out
sbb
push
xlat
in
iret
cli
xchg
gs
pop
push
cmp
mov
mov
add
pop
jmp
add
mov
adcb
mov
jg
jle
aad
sahf
insl
add
arpl
jge
and
mov
xchg
pop
push
add
rolb
xor
rcll
lret
ja
lods
cmpsb
movsb
cmpsl
xchg
adc
lret
xchg
pop
add
mov
rcrb
rcrb
lcall
mov
data16
stos
into
js
test
push
push
iret
cmp
sbb
mov
cmp
mov
decb
sub
into
rclb
fdiv
test
mov
xchg
push
sbb
mov
xchg
fidivrl
int
je
inc
pop
jg
aam
aas
or
adc
jl
fdivp
data16
outsl
mov
and
lea
mov
ljmp
dec
fadds
push
lods
pop
xchg
lds
int3
lret
pop
pusha
movsl
mov
daa
fcoms
xor
dec
cmpsb
in
cmp
add
xchg
jle
ret
dec
aas
fwait
div
movlps
std
lea
or
pmaxsw
out
mov
lahf
cvttps2pi
das
test
lods
nop
inc
pop
dec
fadds
negb
imul
loop
outsb
xchg
scas
iret
mov
outsl
cmp
inc
cmc
pop
sbb
imul
push
jg
imul
jno
jno
xor
mov
scas
dec
sub
jbe
push
add
pop
loopne
inc
out
jl
adc
push
nop
dec
jb
inc
mov
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
xor
pop
jl
jle
push
pop
xchg
das
push
outsb
stos
fistl
sbb
xor
aas
filds
loop
sti
mov
pushf
dec
lret
testb
inc
mov
xor
lds
xchg
xchg
movsl
shlb
or
cmpsl
pop
or
xchg
mov
cmpb
aaa
fisttps
mov
xchg
clc
jecxz
mov
sbbl
sub
sub
or
mov
in
outsb
dec
jbe
adc
cmp
test
scas
in
lds
cmp
jecxz
cs
or
sbb
xchg
jp
xchg
fildl
sub
das
aaa
cld
or
out
pushf
add
jecxz
push
shll
cmp
rorl
sarl
add
xor
lret
loopne
rolb
cli
and
stos
ja
sbb
mov
sbb
and
push
xor
mov
pushf
shlb
and
mov
sbb
test
gs
jge
push
mov
sub
loope
xor
mov
decl
arpl
adc
push
mov
mov
and
imul
repnz
or
add
xor
sub
iret
popf
cmp
arpl
ficoms
add
inc
or
jns
push
mov
xchg
adc
imul
ficoml
mov
jbe
aad
pop
out
in
adc
xchg
ja
cmp
inc
enter
es
jmp
jb
mov
sbb
cmp
xchg
pop
dec
pop
dec
cmp
push
mov
inc
jb
mov
fisubrs
movsl
test
shll
cmp
dec
xor
xor
xchg
adc
dec
pop
jae
out
mov
mov
add
sti
mov
ss
xchg
jne
jl
mov
cli
into
mov
adc
es
cmpsl
out
mov
in
movsb
add
mov
push
xor
xchg
xchg
ja
and
orl
notl
rclb
push
pop
pop
jg
cmpsl
js
pop
add
stos
inc
pop
lret
ret
xchg
and
lock
bound
push
pop
add
mov
ljmp
adc
inc
pushf
mov
in
and
imul
push
or
test
fs
push
mov
lret
push
or
into
lret
or
push
mov
xchg
sub
ja
scas
cmc
inc
sbbb
jns
and
cltd
mov
dec
pop
sub
mov
add
cmp
testl
in
mov
loopne
fidivrs
push
icebp
sub
push
lret
lock
inc
les
test
inc
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
mov
jle
pop
jl
jle
addr16
jbe,pn
fildll
movsl
mov
dec
xchg
sbb
pop
out
popf
and
mov
mov
mov
scas
ss
gs
dec
cmp
jecxz
sahf
add
test
push
fsubrl
into
push
cmp
xor
adc
cmc
mov
scas
xor
jp
in
in
test
loopne
fiadds
fmul
icebp
fwait
adc
fistps
mov
push
sub
ret
in
pop
lods
add
rcrl
mov
xchg
mov
js
mov
mov
push
jecxz
push
into
test
jo
test
sub
test
xchg
xchg
insb
or
cmp
xor
mov
jo
xchg
cmc
imul
mov
push
pop
gs
int
orl
int3
mov
pusha
add
push
bound
testl
hlt
subl
xor
or
push
popa
dec
cmp
push
das
inc
cmc
dec
imul
ret
lahf
mov
clc
mov
sti
bound
sbbl
pop
fucomi
sub
add
cmpsb
cltd
pop
adc
pop
xor
enter
add
add
pop
fwait
xor
daa
pop
inc
cmovne
mov
push
pusha
out
enter
arpl
sub
adc
lret
ret
je
data16
shlb
mov
dec
sahf
pop
jp
repnz
out
cli
sbb
inc
aaa
in
add
push
insb
das
cmp
inc
lcall
int
cmp
stos
sbbb
mov
xor
sub
push
arpl
fbld
sahf
cwtl
inc
xor
rdmsr
stos
sub
xchg
shll
cmpb
arpl
je
fmull
mov
and
pop
clc
ds
push
ds
and
xchg
cwtl
adc
ret
mov
arpl
test
rcr
pop
push
out
rcl
or
insl
xchg
adc
mov
push
out
loope
movsl
pop
mov
ds
push
fs
jb
xchg
cltd
xor
lahf
icebp
jne
xor
mov
adc
test
jne,pn
lods
add
adc
aam
xchg
aas
mov
jg
mov
lock
mov
frstor
jmp
pop
addr16
jnp
jns
xchg
cmp
insl
mov
lea
and
fstpt
jge
jae
int3
sbb
mov
sub
cld
jmp
es
mov
cmc
rcrb
ret
mov
jae
sub
shrb
mov
fildll
cli
jle
push
mov
add
in
push
dec
scas
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
push
push
sbb
pop
jle
pop
jl
jle
leave
inc
out
mov
roll
push
or
int3
cs
add
or
ljmp
pusha
nop
shll
jmp
std
popf
sahf
add
mov
repz
mov
lock
aam
cltd
js
fsubr
add
adc
mov
pop
inc
mov
mov
ljmp
int
sub
ds
jmp
mov
faddl
sub
data16
inc
hlt
mov
sub
xor
jge
jb
cld
and
pop
ds
pop
sahf
divl
pop
shll
fwait
aaa
in
push
dec
loopne
adc
add
cli
inc
mov
aaa
arpl
adc
adc
xor
call
push
xor
lds
je
aad
sbb
mov
cltd
fwait
dec
sbb
mov
ja
mov
repnz
cmpsl
add
insb
jne
es
pop
or
ja
mov
pop
mov
in
in
testl
rorb
js
inc
mov
mov
int3
test
lcall
mov
clc
xchg
int3
mov
test
push
cld
popa
pop
lea
mov
inc
push
shr
out
cmc
mov
pop
jns
and
stos
out
enter
lds
sub
cmpl
jb
repz
push
aam
sahf
fwait
mov
xlat
sub
fbstp
fwait
push
rcrb
push
ljmp
shrl
negl
rorl
stos
shll
ja
jb
mov
inc
outsl
les
and
testl
cmpsl
ljmp
test
push
mov
popa
jle
es
cmp
and
pop
mov
in
inc
sahf
notb
adc
outsb
fwait
sub
mov
cli
mov
test
icebp
sbb
push
sub
inc
cmp
sbb
ror
lcall
insl
cmp
sbbb
jb
das
jne
out
loope
pop
jb
shll
mov
mov
gs
sub
push
xchg
aas
rcll
prefetch
mov
xor
aad
shlb
adc
outsl
adc
mov
int3
xor
cli
jl
int3
rcr
inc
mov
xlat
sub
fwait
cmp
pop
or
or
cmp
cltd
jge
cwtl
pop
mov
add
jg
and
in
push
idiv
leave
jae
jmp
jmp
nop
outsl
add
inc
or
mov
shrl
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
je
and
pop
jl
jle
adc
dec
xchg
movsl
mov
mov
dec
xor
ret
repz
js
imul
sbbl
xchg
js
or
or
mov
rolb
jl
and
pop
mov
ficoml
mov
lret
mov
movsl
ja
in
in
add
aam
aas
pop
cwtl
xchg
mov
mov
shlb
mov
jle
push
movsl
jmp
lahf
jl
repnz
shl
call
scas
add
jl
out
jp
dec
push
jmp
xor
cmpl
and
cltd
aad
adc
jmp
xor
cmp
adc
and
xchg
jno
testl
jno
cltd
test
jecxz
stos
pusha
and
adc
cmp
rolb
sub
add
loop
sub
pop
mov
in
div
pusha
sarb
lds
xchg
enter
pop
lods
adc
into
cli
mov
pop
sub
add
push
sbb
cltd
sarb
jno
xor
cmp
cmpsb
xchg
outsl
xchg
les
push
inc
jl
fsubs
lock
fiadds
mov
xchg
stos
outsb
in
rcrl
stc
mov
mov
lods
ret
loope
xorb
jb
pushf
loopne
mov
scas
sbb
in
imul
mov
or
lods
adc
sti
and
int
imul
mov
imul
sahf
into
test
test
icebp
je
xor
bound
jns
lods
lahf
and
pop
fcoml
mov
pusha
adc
xchg
and
pop
dec
mov
movsl
cmpsb
sub
enter
sbb
bound
test
imull
mov
add
inc
sub
cmp
xchg
sub
popa
sub
aad
stc
sbb
push
mov
mov
pop
flds
adc
jbe
dec
lcall
lcall
mov
inc
xor
sbb
sub
movsb
test
out
sahf
pop
or
jl
fsubl
or
dec
push
inc
push
mov
mov
rorb
icebp
xor
in
pop
pop
jmp
in
push
mov
xchg
outsl
test
je
dec
xchg
lahf
xchg
cld
mov
imul
repnz
data16
ss
jp
mov
jb
hlt
sub
add
in
in
mov
ljmp
dec
sub
outsl
xchg
clc
pop
inc
mov
iret
push
xchg
popf
or
clc
jmp
add
dec
popa
jno
jne
xor
jle
mov
pop
sbb
pop
jl
jle
mov
sbbw
pop
fldenv
push
mov
cmp
adc
mov
pop
flds
or
jl
sbb
lret
cli
jne
insb
push
cmpsb
fcoml
bound
inc
mov
sti
dec
popa
aad
push
pop
std
mov
sub
in
in
mov
outsl
addl
sti
or
popf
xchg
push
inc
xlat
or
pop
scas
sbb
movsl
icebp
adc
push
popf
stos
jns
imul
fwait
idivl
jns
rcll
mov
sbb
cmp
xchg
je
mov
es
ljmp
mov
bound
dec
andps
shrb
aaa
aaa
stos
sbb
dec
out
loope
rcrb
je
pop
fsubl
mov
inc
cs
int
mov
out
mov
xchg
ljmp
xchg
jmp
xchg
stos
push
mov
test
cld
sbb
outsb
cmpb
add
and
mov
ret
mov
je
xchg
jmp
aas
test
mov
lcall
sbb
cmp
in
sbb
es
jge
dec
pushf
xchg
lahf
xchg
ds
ret
cmp
add
dec
pop
push
test
dec
pop
xchg
mov
push
imul
loope
mov
add
testb
data16
cwtl
les
mov
fcmovnbe
cmp
mov
dec
mov
and
test
cmc
pop
iret
aam
rclb
xor
cli
popf
dec
jecxz
add
and
push
out
pop
stc
mov
pop
fldcw
mov
push
into
test
sub
stc
cmc
push
shrd
xor
adc
xchg
xchg
cmp
lret
cmp
mov
test
fld
sbb
and
and
push
nop
lds
cmp
call
push
int
push
jmp
pop
mov
bound
sub
test
fistps
lods
andl
adc
mov
dec
sbb
xchg
lret
arpl
xchg
dec
mov
lods
jb
lock
and
or
add
stos
ror
stos
aam
loope
pushf
repnz
xchg
aas
aaa
sub
stos
and
adc
cmpsb
jne
jmp
mov
jns
sahf
jo
pop
ja
ss
insl
cmp
xchg
jl
pop
inc
int3
mov
xchg
sbb
lret
pushf
mov
or
sarl
xlat
stos
cmp
pop
js
rol
int3
clc
push
pop
xor
mov
arpl
lret
out
mov
pop
jecxz
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
lahf
insb
jb
mov
jl
jle
cmp
ror
rdmsr
pusha
insb
cmp
test
arpl
clc
xor
mov
jg
adc
adc
jp
dec
or
xchg
shlb
movsb
cld
icebp
inc
iret
cmp
push
es
cmpsl
add
movsl
leave
mov
test
subl
and
xor
jns
nopl
inc
icebp
jo
pop
lahf
sbb
push
xlat
in
add
loope
cmp
sbb
scas
adc
lahf
imul
insl
cmp
mov
test
xchg
ljmp
leave
into
fstl
out
cmp
push
rorb
sub
call
fisubs
add
mov
aas
in
sar
in
into
stos
mov
repz
jne
adc
out
inc
movsb
movl
out
sarl
rcrl
jne
cmp
sub
mov
pusha
js
test
ds
xor
shrl
pop
leave
pop
push
sbb
sub
push
xchg
aas
sahf
pop
mov
lock
fcmovbe
xor
lock
das
jo
pop
cmp
inc
in
sub
enter
in
andb
lea
cmp
pop
jg
orl
jmp
and
iret
lock
or
into
mov
jl
lock
orl
and
mov
dec
out
add
jl
cwtl
xor
xor
dec
inc
sbb
mov
shll
inc
push
pop
inc
pop
icebp
mov
dec
iret
add
pop
sbb
out
cmpsl
inc
rep
test
cld
mov
subl
es
popa
jo
arpl
hlt
push
outsl
js
or
bound
cmp
xor
push
sub
dec
mov
clc
shll
mov
fsubs
in
xchg
push
int3
dec
push
ss
call
mov
dec
lret
addr16
push
rcll
fucomp
fisttps
fdivl
jo
cs
dec
mov
and
xchg
shl
mov
pop
outsl
pushf
mov
sar
rcrl
push
std
iret
jg
dec
adc
xor
inc
stos
xchg
and
mov
xlat
push
push
fistpll
push
sub
mov
cld
xor
mov
cld
pop
dec
pop
adc
push
xor
cmp
out
dec
cmc
jb
daa
jecxz
or
call
cmpsb
mov
int
jmp
lods
out
repnz
push
dec
test
test
push
cmpsb
jle
fcomp
out
inc
icebp
ficompl
adc
mov
dec
add
shl
xor
mov
arpl
dec
mov
push
lret
fs
lods
or
cli
xor
hlt
movsb
iret
push
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
xchg
pop
shll
jl
jle
and
add
jns
mov
xchg
inc
pop
jmp
mov
lods
int
mov
fdivl
cmp
pop
loopne
shll
jle
xchg
fs
scas
ret
cmp
fldl
mov
jb
mov
xchg
fnstsw
adc
sbb
xchg
xchg
sub
out
pop
pop
shrl
lock
mov
sub
mov
sub
js
faddp
sub
ss
push
jae
adc
jns
adc
stc
lret
mov
cmpsb
sbb
xchg
repnz
arpl
daa
ds
mov
or
mov
test
es
in
mov
getsec
jo
stc
push
lods
pop
cltd
or
or
mov
add
xchg
insb
sub
pop
sub
jle
loope
mov
mov
pop
mov
mov
dec
test
adc
sbb
sbbb
movb
add
jnp
das
mov
sub
decb
das
xchg
adc
mov
imul
subb
das
mov
xor
push
aam
cld
mov
pushf
push
pop
outsl
mov
iret
sub
inc
stos
mov
mov
pmaddwd
mov
mov
in
pop
repz
into
lret
mov
jne
cmp
jbe
rep
xchg
xchg
insb
mov
inc
stc
shll
mov
jne
mov
in
mov
rolb
out
push
or
into
rolb
xlat
and
cltd
stos
out
es
scas
enter
or
mov
adc
xchg
dec
jg
mov
or
mov
std
inc
xor
mov
mov
inc
sbb
loop
jnp
int
cmp
enter
clc
dec
add
lock
data16
rclb
xchg
out
std
arpl
leave
push
pop
mov
push
mov
xchg
mov
mov
inc
les
xor
test
xchg
push
ja
add
fisttpl
rcrb
push
mov
jns
adc
pop
fwait
scas
mov
and
inc
adc
test
push
mov
outsl
mov
movsb
pop
outsb
out
pop
jle
aaa
cmc
adc
sbb
xor
leave
xchg
sub
aaa
lea
mov
loopne
inc
int
fwait
adc
outsb
jmp
out
push
cmpsl
bound
jge
das
push
scas
sub
negb
sub
push
pop
ds
mov
or
test
std
sub
ja
mov
jl
sub
mov
inc
sbb
xor
mov
mov
into
cld
je
fildll
pop
inc
or
addr16
out
test
repnz
xor
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
inc
nop
or
jle
or
and
mov
scas
inc
sahf
or
sbb
inc
bound
xchg
push
pop
cmpsb
jg
pop
cmc
mov
mov
cwtl
fsubs
add
dec
lods
or
imul
aas
push
es
xchg
dec
scas
push
push
int
ljmp
cmpsl
movsb
lcall
inc
fbld
cmc
pop
mov
add
add
repz
jns
cwtl
fisttpl
jb
fs
into
or
nop
loop
fmul
dec
fdivrs
lds
xlat
pop
xor
adc
divb
lods
stos
cmpsl
out
and
add
daa
pop
enter
inc
data16
fadds
pushf
enter
adc
inc
loope
xor
xchg
insl
adc
rorb
dec
cmpsl
xor
inc
cmp
jno
int3
mov
jp
cmpsl
stc
xor
jge
sbb
sub
cmc
jns
sub
imul
push
popf
add
push
negl
mov
or
popf
imul
out
lds
cmp
cmpsl
xor
xor
xchg
test
shll
and
cmc
es
push
add
mov
in
mov
pop
xor
lret
fisubl
and
add
or
stos
ss
inc
jnp
clc
push
adcl
rcrl
push
js
add
pop
pushl
scas
fadds
inc
and
mulb
fwait
aas
rolb
inc
cmp
adc
sbb
dec
xor
test
into
shrl
outsb
frstor
mov
fcompl
push
pop
mov
scas
out
inc
imul
loope
dec
push
mov
cli
sub
movl
dec
xor
rcl
sub
cmp
push
xor
xor
arpl
pop
mov
push
and
fnstsw
sti
mov
cmp
inc
sub
jo
and
out
in
imul
dec
add
mov
into
jp
and
clc
ret
cmp
fnstsw
mov
fstpl
out
cmp
loop
lcall
xor
int
hlt
fmul
mov
aas
cmpsl
dec
jge
je
pop
cmp
lods
pop
rcll
xchg
lds
das
cmpl
out
mov
or
fwait
inc
and
aad
mov
push
adc
pop
call
test
mov
roll
xor
push
in
mov
xor
push
outsl
jno
inc
xor
and
xor
shll
shrl
aam
sti
aad
sbb
xchg
loope
shll
or
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
jle
pop
jl
jle
or
sbb
test
mov
enter
arpl
cmpsb
mov
scas
cmpsl
leave
jg
cmp
mov
adc
and
shll
sti
fadds
dec
ja
scas
cmc
insl
dec
mov
or
or
in
into
mov
adc
lret
lret
and
mov
mov
jg
sub
or
lock
dec
push
add
test
mov
cmc
mov
or
add
data16
insl
rcrb
loop
es
test
mov
xchg
jle
rclb
pop
dec
lahf
repz
pop
test
adc
add
pop
or
or
cmp
mov
in
fdivrp
mov
lret
scas
push
mov
arpl
jecxz
mov
inc
push
data16
jno
push
inc
or
outsb
xchg
inc
jl
jne
flds
or
jnp
lods
dec
cmpl
cwtl
jmp
pop
mov
js
sub
inc
repz
jne
pop
sahf
inc
fs
mov
mov
pop
in
jg
jb
xchg
xchg
or
and
neg
sti
adc
push
clc
xchg
add
ret
addr16
jno
mov
sub
jge
in
xchg
dec
int
sbb
sub
leave
mov
jns
in
out
aaa
in
jbe
jae
mov
shrl
inc
aaa
lret
lock
addr16
in
jecxz
mov
dec
sub
daa
mov
and
stos
fists
and
sub
xchg
push
ds
outsb
jl
cmp
push
sti
out
and
push
mov
lret
cmpsb
inc
mov
inc
sbb
clc
aas
push
mov
sub
push
add
push
sub
aaa
pop
mov
test
cmc
inc
fdivs
push
shlb
in
xchg
cmp
push
xor
test
shrb
lods
int3
pop
push
cmc
sbb
lds
mov
mov
notl
notb
lret
mov
clc
movsb
pop
inc
outsb
shl
dec
jl
add
in
daa
xor
sti
or
fmuls
adc
loopne
ss
mov
mov
sbb
movsl
fcoml
inc
jno
and
pusha
cmp
stc
jmp
mov
shl
mov
insb
add
in
xchg
xor
jmp
gs
jb
xor
push
idivb
arpl
rorl
andb
adc
lcall
mull
ss
mov
aas
test
adc
int3
push
push
gs
stos
xchg
cmp
sbb
adc
xchg
jmp
loope
push
lods
inc
cmp
stos
lret
mov
push
repz
push
idiv
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
xchg
or
sub
pop
jl
jle
push
shl
push
and
adc
inc
xchg
mov
enter
mov
xchg
repnz
push
or
nop
cmp
faddp
cmp
stos
mov
pop
cld
jbe
add
out
sub
data16
in
xchg
jae
icebp
sub
hlt
xor
inc
call
fcmovnbe
repz
push
in
mov
cmc
and
mov
push
stos
and
mov
movsl
les
bound
add
jns
out
jl
push
in
cmpsb
push
pop
adc
xchg
and
addl
loop
cmp
mov
xor
test
jg
cmpsl
inc
stc
sbb
aad
mov
jnp
push
push
xor
addr16
xchg
lret
push
jecxz
insb
aas
scas
into
hlt
rclb
cmc
mov
ss
inc
repz
xlat
xchg
cmp
mov
ret
mov
xchg
pop
mov
xor
cmp
xor
js
test
push
in
ja
mov
add
adc
push
add
push
jl
movb
add
cmp
sar
xchg
xor
pop
lock
sbb
js
bound
xor
insl
dec
sbb
hlt
push
nop
lods
mov
mov
mov
je
and
iret
out
xlat
popf
inc
mov
cmp
sbb
mov
icebp
inc
or
cmp
push
hlt
xchg
repnz
test
mov
imul
loopne
in
aaa
sbb
in
mov
ja
xor
out
scas
out
stc
jp
fbstp
stc
iret
mov
ficomps
lcall
fdivrl
mov
pop
decb
pop
or
inc
mov
imulb
shll
push
mov
push
xor
cmp
xor
sbbb
lock
push
lahf
ljmp
stos
mov
fmul
ret
dec
icebp
insb
test
movsl
aad
add
aad
popa
mov
fisubs
sub
mov
push
iret
cld
sahf
pop
sbb
push
popa
mov
adc
pusha
sar
push
pop
jno
call
push
cltd
into
imul
sub
cmpsl
xor
clc
dec
iret
das
mov
push
stos
push
pop
movsb
rclb
pop
mov
sub
lods
jmp
negb
shl
push
push
push
mov
lret
mov
fnstcw
push
sbb
cmpsl
stc
cmp
int3
cmp
loopne
jb
pop
add
and
out
xchg
inc
jge
xchg
sti
enter
cmpsl
shrl
test
xor
mov
xlat
xchg
jmp
push
inc
pop
int
cmpsb
dec
cmpsb
xor
inc
nop
cmpsb
sub
pop
pop
lea
mov
ljmp
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
aam
dec
cmp
jle
sub
jle
loopne
push
and
jbe
ss
adc
xchg
pop
aas
sti
cs
adc
pop
shll
jecxz
push
add
cwtl
ret
jbe
push
push
jp
pusha
fisttps
mov
mov
cmp
push
lds
fxch
repnz
xor
jmp
roll
imull
push
xchg
sbb
adc
hlt
dec
cld
pop
or
stc
mov
mov
add
aaa
es
inc
rorl
scas
cmpsb
int3
mov
data16
aaa
cmp
gs
and
sub
arpl
xor
mov
dec
pop
rcll
and
inc
mov
jo
dec
loope
xchg
lahf
pop
mull
xor
adc
cmpsl
sbb
push
frstor
fwait
push
cmpsb
mov
pop
cs
addb
and
std
bound
mov
or
pop
lods
mov
mov
pusha
mov
push
cs
and
std
test
jge
mov
cmp
push
pop
dec
or
jle
sar
icebp
ljmp
in
scas
das
pop
mull
jl
push
pop
shll
leave
ds
mov
into
test
mov
mov
push
testl
pop
stc
mov
les
sub
inc
pop
testl
inc
into
rorb
cmc
mov
inc
cmp
dec
data16
rclb
daa
push
ljmp
dec
sub
sti
andb
push
aad
xchg
inc
scas
mov
add
sub
int
xchg
cmp
sub
push
fdivs
popa
jo
push
inc
inc
outsl
mov
and
les
sbb
dec
inc
rcrb
adc
sbb
inc
dec
int3
push
push
push
outsl
mov
jg
popa
or
sbb
jmp
jp
or
jno
repnz
mov
add
cs
test
mov
mov
mov
pusha
xchg
mov
push
sub
sub
dec
mov
xor
shlb
cs
jg
cld
dec
mov
pop
xor
mov
add
clc
in
mov
lock
cmp
stc
sbb
push
hlt
mov
dec
jmp
mov
xchg
clc
pushf
enter
cmp
add
test
test
fsubs
mov
imul
sub
xorb
dec
mov
loop
hlt
call
xor
or
nop
outsb
ja
and
cli
sbb
xor
xor
push
mov
and
cmp
add
sub
test
adcl
loopne
addr16
movsb
fmuls
mov
cmp
das
pop
insb
sbb
cwtl
fisttps
mov
adcl
sub
sbb
push
or
jo
fnstsw
or
jae
sub
sbb
and
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
js
repz
xor
sarb
xchg
mov
pop
or
mov
pop
dec
mov
addr16
add
xlat
fistpl
mov
sbb
daa
add
imul
or
add
into
das
and
sub
pop
sub
lret
xlat
and
xchg
outsl
jl
leave
out
pop
roll
dec
mov
sub
orl
cmp
pop
push
fnstsw
clc
scas
cmp
leave
push
fdivrl
je
in
mov
push
lcall
lods
inc
sbb
push
mov
mov
aam
or
clc
push
icebp
and
dec
mov
out
jp
jmp
jne
lock
mov
jp
gs
jb
mov
add
xor
push
sti
push
lock
shlb
jp
jo
xchg
mov
adc
add
cltd
and
insl
or
test
inc
inc
rclb
js
in
sub
jbe
xlat
out
add
pushf
jnp
leave
frstor
das
test
sub
lret
xchg
push
std
and
push
movsb
into
insb
sbb
paddb
sub
sub
mov
xor
mov
repnz
adc
mov
fs
loopne
xchg
in
jae
inc
push
shll
daa
xor
add
repz
mov
push
mov
jp
loop
repz
fistpll
leave
xor
push
call
and
and
jecxz
insb
mov
sbb
or
out
xchg
shrb
mov
insb
add
ret
xor
js
outsb
sbb
outsl
or
push
cmc
push
ja
movb
mov
inc
rol
outsb
fcoml
pop
pop
pop
mov
sub
fbld
dec
adc
nop
pop
out
mov
sub
or
jmp
xchg
mov
mov
pop
jl
std
inc
rcrb
push
pop
push
fidivs
outsb
out
ficomps
or
pushf
push
sbb
mov
hlt
decl
in
dec
fldt
daa
mov
and
push
addl
inc
dec
fbld
xchg
inc
or
mov
xchg
sar
nop
or
popa
sbb
mov
in
andl
xchg
or
dec
push
sub
sbb
cmc
push
out
stos
lods
pop
cmp
xchg
jl
movsb
cld
test
in
mov
and
les
push
imul
cmp
cmp
mov
mov
mov
pop
or
inc
push
push
ja
cmpsb
shrb
push
mov
mov
dec
dec
mov
push
xor
popa
nop
jo
push
filds
movsl
lret
int3
les
in
pop
out
xor
mov
cmp
dec
fs
pop
cmp
ja
pusha
sbb
cltd
mov
inc
push
adc
inc
xchg
xor
neg
jmp
jne
sub
test
test
mov
lret
cmp
jge
jle
nop
cwtl
dec
shrl
clc
sub
cld
lock
loopne
dec
xchg
mov
scas
mov
cltd
adc
jmp
out
push
es
dec
andb
je
inc
inc
push
sbb
enter
jb
fwait
roll
movsb
ja
inc
jae
lods
popa
inc
sbb
ror
into
bound
fwait
and
cld
mov
stos
in
push
faddl
shl
inc
stc
cmp
jae
xchg
xor
movsb
xor
mov
js
jbe
xlat
cs
jge
pop
sub
out
pop
pop
mov
scas
dec
jb
inc
inc
data16
ficoml
push
lods
pop
loopne
scas
shl
jo
mov
add
cwtl
or
xor
es
pop
push
cmp
icebp
aaa
sub
mov
jne
mov
xchg
ljmp
inc
push
mov
xchg
mov
ret
shlb
mov
inc
dec
cmp
mov
or
mov
mov
mov
jmp
insl
push
stos
dec
xchg
mov
adc
ret
lods
sbbb
cltd
imul
roll
sub
push
mov
add
or
outsl
jnp
and
mov
pop
mov
push
dec
gs
scas
stos
gs
inc
inc
inc
subb
pop
dec
sbb
scas
lods
and
cmp
or
xchg
pushf
xchg
fsub
fsubr
xlat
stc
add
mov
and
cmp
sub
add
xchg
mov
push
pop
pusha
add
push
lret
imul
and
rcll
mov
repnz
test
mov
push
mov
and
andl
addl
push
mov
jno
xchg
and
repnz
inc
dec
mov
dec
das
scas
jns
repz
sahf
mov
cmc
int3
push
lahf
sub
push
jnp
xchg
iret
pop
jmp
jle
inc
cmp
out
mov
mov
fdivrl
mov
push
sbb
enter
or
mov
pop
pop
cmp
lret
push
adc
insl
aam
loop
sbb
inc
pop
dec
fstps
cwtl
jle
sub
jno
sbb
cmp
add
insl
jo
test
sub
out
mov
mov
in
mov
cvttps2pi
mov
adc
iret
sahf
lea
shll
or
and
pop
lret
divb
pop
push
jp
xchg
sbbb
mov
or
not
inc
inc
pop
fmull
pop
sub
imul
repz
mov
psubusw
imul
ret
mov
mov
aam
shlb
and
popa
dec
xchg
nop
les
cmp
adc
push
push
add
xchg
stos
jg
xor
mov
adc
xor
cmp
pop
dec
je
outsl
xchg
clc
mov
inc
push
ja
jl
dec
repnz
test
xor
push
repz
jns
xchg
or
popa
into
push
in
ret
ret
out
mov
inc
sbb
cs
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
arpl
jle
jge
jle
or
dec
loopne
lcall
or
or
test
mov
dec
xor
hlt
sub
es
and
cld
std
jl
cs
xchg
out
sahf
out
mov
pop
popl
ja
pop
or
gs
jno
call
aad
jecxz
or
fsub
push
push
jle
or
insl
fwait
addr16
jno
test
fisttpl
mov
sbb
cli
dec
daa
mov
xchg
rcl
mov
dec
adc
pushfw
int3
outsl
add
cltd
or
andb
sub
xchg
cwtl
cmp
test
sbb
outsb
push
lods
xor
add
or
mov
pop
mov
test
xchg
arpl
mov
adc
mov
das
xchg
jnp
loop
loop
dec
lea
test
arpl
sub
scas
dec
fisubrl
hlt
loop
mov
cli
xchg
dec
clc
aaa
icebp
push
sub
or
rorl
adc
xorb
jmp
mov
jnp
add
xchg
inc
lds
cmpsb
xchg
aad
adc
js
mov
std
fsubl
pop
mov
lret
adc
mov
ja
xor
cmp
daa
fwait
shl
sbb
sub
add
jg
or
js
mov
fnstsw
lret
lcall
push
mov
int
rorl
je
js
mov
rcr
xchg
neg
jmp
aaa
mov
in
int3
mov
or
dec
mov
mov
jl
fucomi
mov
sbb
xor
lcall
jne
out
cli
push
mov
jmp
and
outsl
inc
mov
test
cmc
xor
int3
test
leave
sbb
xchg
dec
cmp
add
push
pop
and
cmpsl
mov
iret
inc
mov
movsb
orl
jmp
pop
cmpsl
movsb
in
pop
enter
sbb
mov
add
add
or
jno
jns
or
jmp
dec
fisttpll
sbbb
sbb
loopne
pop
aam
dec
pop
loopne
std
in
add
add
clc
pusha
scas
mov
cmp
out
and
xchg
ret
add
add
lock
nop
ror
lret
test
inc
xchg
sub
cmp
call
outsb
jno
add
sub
dec
sbb
sti
test
adc
mov
es
xor
nop
insb
aas
jns
ss
pop
or
clc
cli
add
push
adcl
pop
sbb
icebp
enter
mov
xchg
cmc
xchg
out
in
ljmp
or
sub
push
mov
rol
jg
lahf
sub
cmp
mov
cwtl
mov
mov
or
pop
cmpsl
mov
xchg
mov
scas
xlat
mov
mov
movsl
adc
dec
out
stos
test
out
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
pop
add
jle
mov
or
daa
shl
cvtps2pi
pop
les
sahf
rolb
push
lds
jl
mov
repz
lds
fisubrl
stos
pop
js
xchg
addr16
mov
loope
andb
sub
mov
cmp
lods
mov
cmp
and
pop
push
pop
bound
ficomps
jbe
jne
inc
xchg
jg
mov
and
inc
mov
insl
cmp
inc
xchg
fwait
jg
inc
or
push
fisubl
mov
orb
pop
mov
inc
pushf
inc
test
frstpm(287
pop
in
xchg
enter
sub
xchg
and
mov
sbb
dec
mov
mov
ret
pop
fsubrs
push
ret
sbb
and
loope
pop
icebp
call
aas
scas
mov
lret
das
in
or
popa
insb
push
xchg
sub
mov
fcmovu
add
repz
cli
jae
jbe
sti
dec
jnp
shl
ret
push
idivb
dec
sarl
mov
lds
add
mov
jmp
filds
sti
jp
negb
lds
cltd
dec
adc
ljmp
xchg
dec
xchg
int
loope
adc
xchg
xor
jmp
out
out
cmc
dec
cmp
push
jne
jo
repz
test
or
cmp
dec
into
or
or
nop
daa
shlb
shr
inc
popf
mov
push
je
jg
push
and
mov
adcb
iret
inc
repnz
sarl
sahf
hlt
outsl
mov
cwtl
into
lret
mov
jns
mov
jmp
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
push
lahf
sbb
jle
mov
jnp
sarb
dec
ds
add
xchg
push
mov
sahf
cmp
pop
pop
loope
out
xor
jge
jmp
sbb
insb
xor
mov
je
mov
xrelease
aaa
jns
sub
out
ret
dec
jle
pop
imul
ja
pop
stos
jle
mov
lcall
fsubr
or
xor
test
xacquire
jb
icebp
mov
adc
sbb
in
aaa
sahf
adc
lcall
addb
mov
inc
adc
scas
mov
add
xchg
xchg
xchg
push
aaa
mov
sti
movsl
jo
inc
jecxz
lret
jmp
hlt
aad
in
xlat
sub
enter
fldl
mov
testb
and
popf
push
cmp
dec
sbb
in
or
jmp
test
adc
or
mov
pop
je
mov
scas
jp
xchg
or
movsb
mov
mov
sbb
ds
mov
adc
lcall
push
out
sbb
mov
popf
adc
ds
mov
inc
lock
fstpl
movsb
adc
mov
std
adc
sub
mov
addr16
xor
pop
cmpsl
adc
aam
cli
daa
and
clc
adc
sbb
and
outsl
shrl
push
mov
mov
push
or
pop
add
sub
inc
add
jno
lds
cs
mov
fs
aam
xorb
lcall
addr16
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
imul
cmp
cli
inc
lea
fcoml
xor
je
cwtl
popf
les
sub
popf
mov
aam
test
les
in
inc
out
stos
push
out
test
push
mov
scas
inc
mov
clc
in
xchg
cmp
popa
imul
fcmovnb
sub
jp
scas
cmpsb
and
fildll
or
dec
pusha
push
push
inc
stos
fcomps
repz
mov
inc
testb
ss
daa
mov
mov
shrl
sub
xor
repz
cmp
data16
int3
mulb
cmpsl
inc
pop
mov
jmp
inc
cmp
pushf
jmp
fs
push
dec
push
lods
jbe
arpl
adc
inc
mov
jb
scas
test
mov
mov
repz
mov
push
lcall
sub
push
icebp
hlt
gs
cwtl
xchg
or
into
cli
sub
aaa
leave
frstpm(287
ss
aas
scas
sbb
repz
cmpb
jg
daa
cmp
loop
adcb
hlt
rcll
int3
and
jb
negl
stos
cli
cmpsb
pop
push
movsl
jge
cmp
insb
adc
dec
inc
xchg
push
scas
movsl
popf
and
pop
pop
sub
dec
popf
hlt
add
fidivrl
mov
sub
jnp
outsb
push
ds
or
mov
sbb
adc
jno
jns
adc
xor
sbb
fstps
fmull
loope
repnz
popa
xor
lods
jl
or
popf
push
and
test
fistpl
jne
sub
adc
push
jmp
mov
pushl
call
test
jmp
and
in
popa
push
lret
xchg
sbb
in
int3
les
mov
sub
das
pop
cld
mov
cmpb
cmp
inc
mov
insl
shl
push
cld
hlt
sti
jo
mov
pop
dec
movb
and
xchg
mov
in
aam
mov
sti
adc
adc
inc
adc
xchg
icebp
dec
push
xor
dec
ret
test
mov
lret
adc
lcall
out
lods
vminps
or
and
lret
adc
xor
out
cmp
repz
loopnew
into
fidivrs
lret
pop
xor
frstor
add
lcall
scas
in
arpl
mov
loop
loop
jne
cwtl
inc
cmp
pusha
out
xchg
je
mov
xor
outsl
outsb
mov
jle
outsb
mov
ret
hlt
xchg
sbb
scas
dec
enter
fwait
push
cmp
daa
negl
mov
js
jbe
andb
lret
jns
push
jo
mov
mov
mulb
stc
adc
lret
fnstcw
ret
stos
lcall
inc
movsb
sbb
out
outsl
cmp
fcompl
xor
dec
test
or
mov
inc
cmp
fistpll
fcmovbe
fldenv
movsl
mov
addl
loopne
pop
mov
cmp
xchg
sub
stos
out
or
and
dec
out
or
mov
xchg
aam
stos
adc
icebp
push
icebp
mov
popa
cs
jb
icebp
test
xor
mov
jns
jmp
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
repz
add
mov
jge
adc
mov
idivb
pop
jle
sub
add
hlt
add
and
xlat
adc
imul
sti
cmp
mov
xchg
sbb
mov
je
icebp
jp
gs
mov
dec
dec
push
adc
xchg
repnz
mov
push
shll
ljmp
in
es
dec
inc
mov
rorl
dec
ljmp
push
sub
pop
push
adc
dec
xchg
fiaddl
xchg
mov
sub
mov
xchg
test
pop
sbb
in
push
pop
pop
xor
jp
fdivs
jge
shlb
mov
fs
lea
imul
incb
fisubrs
lods
mov
pusha
imul
ret
xor
notb
cmp
inc
adc
xor
test
or
lds
add
xchg
mov
jb
sbb
ret
push
fldt
and
andl
xor
sbb
arpl
repz
sbb
fwait
sahf
clc
aad
es
hlt
shrl
push
mov
inc
imul
insl
cmpsb
cmp
push
xor
pop
add
pop
sub
lret
aad
xchg
call
cltd
inc
mov
shl
test
xor
notb
mov
cmc
fisttpl
aas
lods
xor
and
addr16
dec
es
adc
cld
icebp
iret
cmp
mov
icebp
push
pop
xor
out
test
insb
xchg
push
fldt
nop
mov
cmpsl
addr16
xor
jae
push
movsl
pop
sbb
cmp
dec
xchg
adc
mov
mov
adc
mov
lods
nop
sbb
push
cmpsb
mov
je
xchg
out
add
lcall
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
mov
sarb
jl
jle
sbb
ljmp
or
int
mov
shl
mov
rolb
imul
idivl
test
or
adc
sti
xlat
push
lea
iret
loopne
out
xor
mov
mov
mov
xor
imul
dec
fwait
cmp
jecxz
or
pop
dec
cld
xor
adc
mov
fwait
push
mov
in
mov
inc
stos
fisttps
xchg
popa
xor
jne
mov
cmp
add
lret
xor
push
incb
add
dec
loope
xchg
mov
fdivl
adc
ljmp
dec
jg
out
or
ljmp
xchg
cli
ja
jge
xor
stos
xor
dec
mov
xchg
test
mov
adc
sbb
cmp
fsubrs
lea
dec
mov
jbe
jnp
dec
jge
lea
movsb
insl
inc
jno
adc
cmp
shll
add
cld
push
or
push
pusha
outsl
xchg
notb
aam
cmp
faddp
jbe
lea
jnp
pop
fwait
and
popa
fnstcw
push
arpl
lods
mov
jp
adc
add
roll
mov
add
je
in
mov
fsubrs
pop
out
int3
adc
loopne
cvtps2pd
insb
adc
jmp
stc
adc
or
repnz
push
fidivrl
nop
test
adc
xor
test
popa
into
sub
jne
push
icebp
iret
fsubr
jne
addr16
mov
gs
jbe
lock
mov
sub
adc
inc
imul
sbb
jl
arpl
or
xlat
sub
mov
orl
ljmp
jecxz
addr16
pop
mov
xchg
cmp
fisubrl
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
lahf
js
and
jle
add
scas
adcl
ficoms
mov
bound
jne
in
in
mov
and
add
std
sbb
sbb
sub
and
sub
test
push
stc
adc
mov
push
out
pop
popf
stos
sbb
push
push
fcoml
bound
ret
or
data16
mov
cmp
sbb
test
lds
dec
in
pop
lods
or
in
test
jmp
dec
rcrl
popf
aad
add
leave
fdiv
mov
in
pop
dec
dec
adc
mov
xorb
and
inc
or
jmp
js
ret
in
popa
imul
pushf
insb
mov
xchg
test
bound
cli
mov
int3
inc
xor
mov
lods
pop
lret
shlb
jl
dec
jecxz
jnp
sub
jge
lret
out
ret
bound
imul
jp
jecxz
jl
dec
jmp
xor
mov
test
movsb
adc
dec
sbb
or
xchg
mov
cmpsl
lods
mov
cmc
test
rcll
popa
testl
mov
dec
outsl
in
test
ret
lds
aas
lret
add
or
sbb
fbld
out
scas
test
lea
inc
loopne
mov
icebp
sub
mov
rcrb
lds
xor
xchg
repnz
mov
addr16
repz
sti
jae
fcmovu
test
and
pusha
loop
into
leave
fadds
mov
mov
roll
stc
cmc
int
and
arpl
out
gs
jnp
gs
jg
in
aaa
pop
outsb
and
xchg
add
mov
inc
pop
cltd
sbb
add
nop
ja
fcmovne
pop
out
add
lock
cli
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
in
shr
sub
jle
add
mov
ret
loop
xchg
adc
push
popf
test
mov
mov
xor
outsb
xor
fs
shl
loopne
testb
loop
test
pop
pop
pop
xchg
iret
std
or
mov
out
push
jmp
push
inc
mov
fbld
fs
push
repz
jo
push
xchg
xchg
punpcklwd
jmp
sarl
in
in
dec
lret
test
stos
dec
xor
loope
inc
sub
pop
push
xchg
mov
jnp
pop
hlt
add
push
bound
stos
cmp
pop
inc
adc
cmpl
mov
pop
addr16
arpl
adc
sbb
lock
push
add
add
jns
pusha
subl
sbb
sub
mov
pushf
cli
scas
xor
fists
mov
scas
and
adc
fs
aad
jnp
push
in
outsb
in
outsb
xor
sub
cmpsb
in
out
imul
scas
cmp
sub
inc
mov
pop
pop
push
jae
fstp
or
addr16
sbb
movsb
dec
jp,pt
dec
scas
pop
ds
sub
das
in
movsl
outsb
mov
negl
les
and
cmp
lea
lcall
cmc
iret
mov
enter
sbb
out
xor
cmp
push
and
pop
loop
pop
test
or
push
ret
sbb
lret
mov
mov
std
jp
pop
mov
sti
xchg
jne
push
cmp
mov
xor
fisubrs
adc
movb
imul
mov
mov
and
nop
insl
mov
dec
pusha
fdivl
and
add
stos
outsl
jb
loop
push
jmp
notb
loope
xchg
mov
jbe
adc
add
xor
jge
shl
lcall
mov
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
fs
and
jle
cmp
jns
mov
lcall
lds
lods
adc
xchg
fcoms
adc
mov
add
xor
js
push
dec
mov
push
fidivl
in
das
ret
lcall
out
adc
outsb
mov
lret
or
lods
rorl
mov
repz
add
xor
adc
nop
push
leave
ljmp
mov
cmp
xor
scas
repz
jne
dec
xchg
adc
push
fiadds
jae
mov
shl
adc
pop
adc
jbe
outsb
dec
jns
dec
push
lret
push
mov
add
ret
scas
or
jecxz
fbstp
inc
adc
and
negl
adc
xchg
or
pop
sub
vpsravd
sahf
and
arpl
enter
cltd
stos
lods
inc
add
jno
pop
pop
rclb
addr16
subl
pop
sbb
insb
out
ficompl
jb
call
add
ficompl
xor
sbb
shlb
inc
scas
cwtl
fwait
test
js
xor
je
pushf
xchg
out
pop
cmp
xchg
outsb
xchg
and
xchg
sub
cmpsl
push
cld
cmp
fidivl
out
shlb
jge
sub
xchg
jb
lock
dec
fisubl
push
xchg
add
fs
cmp
pop
push
jne
add
stos
scas
pop
push
outsb
fcoml
adc
out
insl
shlb
and
push
or
or
push
or
xor
inc
inc
xor
mov
test
xor
into
inc
loope
les
aaa
lcall
mov
out
jb
sbb
pop
jle
in
mov
aad
inc
adc
hlt
repz
inc
sets
lret
into
xor
xor
mov
cmp
and
adcl
sbb
dec
mov
lsl
fsubr
add
adc
pop
jnp
inc
ret
or
cmp
sbb
mov
cs
lret
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
xchg
in
jle
and
jle
add
addr16
xchg
lcall
movl
and
adc
or
xchg
cmpsl
fwait
xchg
rclb
ljmp
int
push
jecxz
jmp
push
cmc
pop
loope
mov
xor
xchg
mov
test
test
fwait
xchg
mov
mov
addr16
cld
sbb
pop
jecxz
bound
mov
addb
pop
pop
adc
jmp
xchg
test
add
inc
or
xor
in
xchg
mov
mov
repnz
shll
xchg
or
jmp
scas
fnstsw
pop
sbb
dec
pop
fistps
aad
mov
mov
lret
addr16
mov
negl
hlt
mov
xchg
call
pop
shlb
xchg
in
or
inc
mov
push
mov
jb
in
mov
ret
mov
outsb
fcmove
cmp
sbb
pushl
push
out
inc
sub
push
push
lahf
mov
xchg
pop
stc
push
cld
test
pop
jo
daa
mov
xchg
inc
out
lds
ficomps
jo
mov
addr16
or
jmp
xor
lret
add
in
sbb
lock
xchg
dec
test
mov
jnp
gs
pop
lock
xor
mov
gs
and
push
adc
adc
ret
sbb
dec
shll
and
or
outsl
add
sbb
mov
ljmp
mov
push
mov
andl
mov
lret
pop
inc
inc
add
pushf
xor
imul
ss
lea
lret
hlt
cltd
inc
mov
sbb
pop
pop
jae
cmp
cmp
out
mov
std
mov
sahf
ds
mov
dec
push
sub
in
das
push
pavgb
ljmp
call
mov
adc
sti
ss
add
out
aaa
inc
add
cmp
jmp
pop
push
jg
xor
add
ljmp
jle
add
mov
push
into
add
sbb
stos
lea
and
rolb
xchg
pop
jnp
xlat
jae
adc
jg
fimull
data16
pop
ret
dec
ss
mov
or
decb
sbb
int
sub
test
jns
sbb
fstl
push
hlt
std
xor
or
mov
cmp
mov
pop
jne
scas
daa
cltd
or
mov
js
movsl
sti
sbbb
jb
sbb
pusha
jp
adc
fwait
scas
jecxz
cwtl
fidivrs
sub
inc
lods
repz
orb
xchg
push
adc
push
pop
inc
repz
xor
add
out
xchg
add
adc
pop
adc
test
pop
xchg
jne
pusha
or
jp
inc
cwtl
movsl
add
cmpsl
ss
and
fstpt
jecxz
lret
sub
test
ret
shll
loopne
push
mov
pop
testb
push
pop
or
pop
inc
aam
fwait
testl
or
cld
outsb
insb
scas
shll
enter
cmp
in
cmpsl
scas
mov
jl
jb
jne
dec
aas
cli
pop
ljmp
xchg
add
lods
cmp
int
sbb
pop
dec
negl
push
push
in
gs
mov
and
les
pop
loop
ficoms
ror
add
lea
or
filds
lock
mov
adc
mov
jb
and
fs
loope
repz
in
faddl
adc
mov
add
mov
imul
pop
ret
and
jo
pop
push
pop
rolb
sub
pop
xchg
mov
add
add
cmpsl
cld
dec
push
mov
shlb
ret
and
push
or
or
decb
jo
sub
adc
inc
xorb
cmp
je
xchg
dec
les
aaa
inc
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
aas
mov
jle
and
jle
sub
xor
mov
leave
mov
fsubrl
dec
mov
repz
data16
or
stos
dec
xor
jb
imul
mov
xchg
stc
adc
stos
pop
imul
and
push
popa
and
push
sbb
cmpsb
sbb
int
out
mov
jp
jns
push
dec
dec
jp
jbe
mov
adc
push
xchg
pop
cli
ds
shlb
xchg
cmp
dec
and
outsl
xor
mov
cmpsb
xchg
inc
pop
jmp
adc
out
pop
xchg
loopne
std
cltd
popa
sbb
add
mov
mov
jnp
push
push
add
fwait
cwtl
out
push
cmp
das
jmp
push
add
inc
cld
cmc
rclb
cmp
insl
leave
mov
push
jns
mov
or
pop
inc
mov
or
fsts
mov
aad
mov
orb
in
push
sbb
scas
xchg
lahf
icebp
mov
bswap
lret
aad
test
jae
add
cmp
and
lret
js
sub
or
or
cmpsb
aas
mov
andl
dec
inc
add
ret
in
fistpll
cld
aas
test
imul
cmp
jo
dec
mov
fcoms
loopne
cld
push
and
push
adc
ss
lcall
xchg
jnp
mov
xchg
insl
pop
cmp
add
inc
jbe
sub
jae
fs
fdiv
adc
into
sub
cmp
push
les
sti
movsl
inc
aad
dec
test
rcll
push
sahf
pop
jl
pop
lods
add
fwait
scas
sbb
add
out
add
xlat
out
inc
nop
clc
add
dec
add
jge
or
mov
add
add
jmp
mov
hlt
mov
cmp
shld
out
add
sbb
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
mov
sarb
and
jle
mov
cmc
mov
push
mov
inc
and
arpl
xchg
adc
out
mov
sbb
pushf
rcl
xchg
hlt
js
jecxz
mov
mov
mov
add
xchg
in
pop
jge
or
pop
xor
lret
ljmp
xor
or
add
outsl
xor
pop
xchg
aad
mov
sti
push
pusha
mov
inc
jbe
frstor
das
test
in
les
cmp
gs
sub
iret
jae
or
test
into
in
dec
inc
adc
fistl
lcall
mov
test
cmpsl
ficoms
adc
ret
cmpsb
mov
inc
stos
into
sub
cmp
lods
mov
insl
jle
push
dec
cmp
std
fwait
xchg
sbb
dec
inc
call
aaa
vunpckhps
and
fwait
addr16
stc
cli
xchg
das
adc
xlat
jb
dec
inc
jno
ret
aam
push
movsb
cld
incl
dec
outsb
outsl
enter
ret
pop
scas
outsl
push
add
gs
out
loope
int3
dec
dec
mov
sar
cmpsb
dec
test
shrb
sub
add
sahf
stos
fstl
test
cmc
icebp
jl
dec
jne
aam
and
xchg
das
test
xor
mov
and
cmp
shrb
inc
xor
mov
xlat
xchg
pop
sbb
cwtl
repz
cs
dec
jmp
jae
sbb
insb
repnz
ja
mov
repz
add
mov
pop
xchg
inc
and
dec
dec
incb
pop
in
test
fsubl
pop
mov
push
push
add
sub
jle
mov
mov
sbb
xchg
sbb
adc
dec
ss
fstps
push
fs
pusha
dec
xchg
scas
les
imul
inc
mov
lcall
pushf
xlat
sbb
mov
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
dec
inc
shrb
ret
lods
lret
lcall
sbb
sbb
scas
xchg
xor
cli
std
out
cld
call
xor
cmp
clc
out
sub
jp
sbbl
or
sbb
pop
pop
lret
jl
or
add
mov
test
movsl
outsl
adcb
inc
dec
push
dec
cmpsl
mov
jne
inc
stos
popf
das
sahf
pusha
lahf
mov
cmpsl
mov
jo
sub
pop
leave
aaa
or
enter
cmp
aas
scas
outsb
push
pop
std
push
cmp
cmpl
sub
dec
cmpsb
icebp
and
js
inc
sub
dec
cmp
pop
push
push
sub
xchg
xor
sub
test
dec
pop
imul
jle
adc
or
cmp
imul
adc
add
mov
wbinvd
adc
scas
ret
cmp
mov
lret
shrl
sbb
adc
inc
andb
ret
divb
push
aas
jno
shr
dec
pop
add
pop
dec
fisubl
inc
adcl
mov
es
push
movsl
rorb
cli
outsb
shl
sbb
iret
sub
fisttpll
in
fadds
addr16
inc
xchg
fmuls
mov
inc
cltd
push
fwait
mov
ret
mov
cli
jno
mov
mov
push
adc
jns
xchg
xor
addr16
insb
outsb
push
mov
jae
out
clc
push
inc
mov
lods
push
dec
cld
imul
icebp
mov
add
sbb
add
mov
dec
mov
pop
cmpsl
or
in
movsb
aaa
sti
dec
cwtl
xchg
or
push
divl
aaa
adc
push
xchg
cmc
out
and
mov
call
mov
xlat
pop
pop
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
js
fidivl
fistpll
and
jle
addr16
cmpsl
ret
or
insl
shll
shr
or
add
in
mov
push
cmpsl
in
jnp
ja
jns
roll
rcrl
fsubs
xor
ds
mov
loope
push
fsts
jge
lea
xor
arpl
and
imul
mov
sbb
out
xor
jns
clc
das
ret
xor
dec
rorb
lcall
nop
pop
aaa
into
iret
scas
push
lods
stos
lahf
loopne
test
cmc
test
push
dec
adc
and
fisttps
stc
jae
cli
add
rclb
loope
push
fsubp
orb
add
cwtl
rol
add
jo
cld
cld
cmpb
mov
adc
mov
loop
add
aaa
cmp
icebp
xor
ret
jno,pt
or
testb
subl
fsub
push
adc
dec
out
cli
pop
jle
inc
push
scas
scas
sub
ret
ret
cmp
xchg
and
lea
add
dec
xor
inc
mov
shlb
dec
or
mov
icebp
mov
inc
pop
dec
pmullw
sbbl
mov
fdivrl
mov
lret
cld
fsubp
cmp
dec
cmp
inc
inc
insl
pusha
imul
mov
xchg
jae
dec
rolb
test
enter
aad
push
sub
and
test
push
test
mov
jmpw
cmpsl
push
mov
div
or
insb
cmp
jo
call
imul
xchg
cmpl
push
popa
out
addr16
stc
sub
outsl
dec
in
stos
push
sahf
outsb
mov
jo
pop
fisubs
lea
mov
fistps
aam
sub
lods
fs
rcrl
subb
rcrl
addr16
mov
and
and
cmp
arpl
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
mov
fnstsw
and
jle
clc
or
add
lret
mov
aaa
lret
push
xor
mov
insb
das
sti
and
cltd
dec
daa
dec
sub
dec
je
dec
pusha
ss
xor
fcoml
inc
mov
data16
pop
out
inc
cld
xchg
lret
fistps
enter
dec
arpl
lea
and
jno
loopne
pop
jp
mov
add
loopne
sub
stos
std
je
fisubl
ret
jno
in
incb
or
inc
test
cli
add
cmp
in
xor
dec
mov
push
rcl
or
std
sahf
fwait
dec
xlat
icebp
or
bound
gs
stos
je
add
repz
rcr
nop
xorl
inc
mov
ljmp
mov
into
jns
es
sti
nop
sub
lahf
out
loop
push
lock
test
pop
xor
or
popf
xor
xchg
xlat
dec
test
or
aas
imul
mov
jp
pusha
aaa
test
rorl
and
pop
pop
xor
enter
push
xchg
or
cld
imul
in
outsb
mov
sahf
adc
mov
out
mov
dec
mov
xchg
lret
jge
inc
add
aas
pop
add
out
mov
lret
ja
jl
xchg
jg
jge
shr
scas
jl
add
sub
pop
dec
adc
repnz
fidivs
shrl
push
pop
loope
xchg
nop
out
add
xlat
frstor
sub
movb
aaa
hlt
insl
add
cmp
cmp
sub
or
or
ficomps
cmpsl
jmp
faddl
cmp
aam
or
jecxz
sub
gs
ds
js
and
mov
jge
jl
push
sbb
sub
jecxz
jl
lods
daa
sbb
push
xor
or
dec
jo
loopne
aas
outsb
inc
jg
pusha
cmc
ret
clc
rorl
mov
dec
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
sbb
stos
pop
pop
mov
jo
int
insl
out
push
inc
sbb
jecxz
mov
cmpsl
xor
cmp
push
andl
mov
subl
shrl
mov
and
les
pop
divl
insb
mov
and
inc
loop
ds
pop
fnstenv
lods
int3
jo
lods
addb
xor
fwait
mov
fldt
adc
scas
in
loopne
lods
fcoml
or
mov
insl
mov
fs
adc
cmpsb
addr16
test
inc
inc
dec
pop
dec
fldcw
std
jge
fistpll
stos
adc
mov
xor
xor
lahf
mov
insb
bound
dec
or
xor
mov
fdivs
sub
dec
pop
sahf
pushf
insb
add
ror
dec
sbbl
sub
push
inc
lret
sbb
push
ret
sub
xchg
divl
sub
pop
data16
or
ret
dec
bound
outsb
fldcw
pop
ret
adc
lea
test
jmp
int3
gs
jne
xor
subb
hlt
sbb
xchg
in
jae
insl
je
pop
mov
pop
imul
imul
sbb
mov
loopne
dec
xor
ret
icebp
inc
dec
rcr
scas
je
pop
jl
enter
sbb
push
test
sbb
hlt
jo
data16
mov
push
les
xchg
popf
xchg
and
insl
push
adc
addr16
and
test
out
and
loopne
adc
cmp
lahf
pop
or
add
mov
stos
dec
pushf
dec
clc
inc
loope
cmp
ret
or
lods
inc
jecxz
mov
sti
push
loopne
dec
addr16
push
mov
sbb
cmp
gs
cmp
ljmp
jbe
int3
or
or
jmp
dec
mov
sbb
inc
hlt
xor
daa
jmp
adcl
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
fs
sub
jle
mov
jae
lds
fildll
sbb
dec
add
push
adc
xchg
enter
or
cmp
xchg
or
insl
int3
insl
cwtl
adc
fsubrl
cmp
aas
pop
push
enter
std
rorb
mov
shrb
das
inc
std
add
mov
dec
aas
cwtl
and
xchg
cltd
mov
shrl
lods
cmp
sbb
inc
pop
fisttpl
dec
test
or
imul
ja
pop
in
negl
lea
mov
add
fst
mulb
pop
push
dec
test
hlt
xor
jae
in
push
push
ret
mov
mov
rol
inc
cmp
xor
cld
jns
ljmp
sub
cmp
push
pop
shl
lret
cmp
mov
jle
dec
pop
daa
xchg
or
mov
or
inc
ss
and
inc
loopne
jne
out
sbb
inc
cld
std
jg
mov
loop
mov
daa
mov
std
ret
and
mov
sub
imul
xor
in
cmp
inc
cld
mov
adc
aad
push
notb
dec
cmp
push
test
ret
jo,pt
sti
cmp
mov
jge
cmpsb
cmp
mov
pop
inc
cs
lcall
sub
xor
lods
adc
js
inc
add
jno
inc
adc
or
sbb
ja
and
and
imul
cmpsb
and
dec
mov
inc
fs
mov
inc
divl
lret
xor
pop
jge
js
cmp
pop
sbb
xchg
xchg
xor
mov
xchg
mov
stc
cmp
out
dec
mov
repnz
aam
lret
das
jb
mov
add
mov
xchg
cmp
jb
xchg
rcrb
popf
push
dec
ffreep
add
mov
pop
loop
mov
pop
or
and
int
push
jg
pop
add
imul
lahf
aaa
inc
add
inc
add
pop
add
add
cmpsl
lods
shrb
mov
fisttpll
add
jle
cmp
and
gs
or
lea
rorb
ja
stos
mov
xchg
jle
test
cmp
pop
inc
xchg
aam
aas
mov
inc
mov
pop
or
lds
insl
into
lods
push
sbb
int3
rcr
popf
mov
jge
gs
cmpsb
dec
mov
push
or
mov
in
repz
xchg
stc
cltd
popl
je
pop
jge
mov
jmp
scas
loopne
pop
data16
and
adc
cmc
into
les
mov
mov
dec
jns
imul
stc
dec
shlb
ljmp
sbb
clc
stc
and
sti
fs
outsb
sub
push
or
subb
sbb
js
dec
out
xchg
movl
jmp
push
lret
sbb
aas
pop
sub
outsl
sub
divl
add
adc
scas
adc
insb
dec
jp
xchg
cwtl
lods
mov
pop
inc
int
clc
insl
xchg
hlt
pop
or
adc
mov
cmpsl
push
lea
mov
decb
stc
adc
ljmp
mov
pop
scas
mov
test
sbb
xchg
mov
clc
sbb
out
pusha
push
push
les
mov
push
sub
pop
push
sub
in
and
xchg
jo
pop
int3
xor
aad
xor
dec
and
mov
loope
ss
test
or
test
out
das
cmp
xlat
and
stc
cmp
shrb
stos
add
test
mov
or
push
xor
jo
jle
cltd
scas
jl
neg
xlat
mov
mov
dec
call
push
cmp
js
in
inc
add
jae
mov
inc
cwtl
sbb
repnz
negl
out
rclb
ljmp
pop
push
pop
hlt
xchg
and
mov
jl
in
cmpsl
rol
pop
mov
aam
repnz
xor
jne
pop
mov
sub
cld
lock
pop
scas
mov
adc
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
loopne
aaa
pop
cmp
jle
cmp
mov
adc
movsb
push
jecxz
pop
sub
ljmp
popl
sbb
stos
or
adc
lds
dec
push
aad
xor
cmp
es
rcll
mov
push
or
mov
jp
stc
call
cld
aas
sub
xor
or
sbb
jnp
scas
in
rorb
call
repnz
jmp
jg
clc
xchg
xlat
das
pop
loop
or
lods
jbe
inc
andb
push
rol
int3
mov
mov
push
inc
sub
or
dec
push
test
push
push
ret
sub
pop
mov
jbe
in
dec
dec
jbe
adc
mov
test
or
cmpsl
shrb
push
and
fs
imul
jnp
fisubl
xchg
push
out
and
aad
testb
test
push
pop
push
das
xor
js
jmp
lods
mov
add
mulb
jno
jle
push
icebp
adc
sub
xor
je
jg
lret
sub
mov
jns
inc
addl
jge
xor
add
cmc
jo
fisttps
sbb
adc
mov
jl
loope
loope
pop
adc
push
and
js
into
mov
sub
pushf
lret
add
fnstenv
pop
dec
or
out
imul
sub
je
stos
mov
mov
mov
out
stc
xchg
mov
enter
pop
pop
add
push
xor
or
daa
rorb
inc
mov
lret
ret
inc
ja
pop
iret
cmp
ljmp
adc
mov
and
and
push
lcall
sti
cwtl
and
push
adc
push
adc
mov
add
xchg
jge
aaa
movsl
sub
out
in
push
or
out
pop
imul
je
adc
mov
bound
add
or
aaa
cltd
scas
lods
and
xor
mov
mov
call
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
sbb
jle
cmp
fwait
add
pop
scas
pop
cld
dec
add
jae
inc
cmpps
dec
pop
or
fs
nop
iret
sarb
mov
mov
insb
cmpsl
lods
lret
dec
pop
ror
sbb
js
loope
jbe
mov
jne
aad
or
lahf
clc
sbbl
sbb
pushf
ds
sbb
and
mov
in
or
daa
mov
mov
jno
mov
xlat
enter
imul
je
push
movsl
dec
lcall
inc
scas
xor
cltd
or
inc
int
pop
fimull
call
fdivrs
mov
and
adc
xchg
sub
adc
xchg
or
xchg
shr
sarl
dec
sbb
repz
lret
cmpsl
sub
fstl
mov
mov
imul
dec
out
sub
push
cltd
addl
insb
inc
jmp
dec
mov
dec
movb
add
shl
daa
das
incb
insl
jecxz
inc
rolb
subb
or
divb
push
lahf
push
mov
sub
bound
rorb
mov
ja
or
xor
push
daa
push
aam
shlb
push
cmp
mov
gs
pop
inc
push
mov
and
push
stos
sbbb
or
and
clc
outsb
dec
push
fs
clc
fiaddl
mov
imul
fbld
adc
jae
add
scas
fucomp
xor
es
dec
sbb
pop
xchg
sub
mov
push
add
outsb
outsb
mov
mov
leave
pushf
push
imul
imul
out
sbb
mov
jl
scas
dec
xor
mov
xor
outsb
fwait
add
push
mov
inc
push
adc
popf
mov
daa
adc
aam
sbb
jo
cmpsb
int3
nop
lahf
pushl
lds
nop
xchg
jbe
lods
lock
cmp
sub
sbb
outsb
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
and
jle
cmp
fstl
scas
sub
push
stos
loope
pop
vcomiss
stc
pop
ljmp
out
mov
cmpsl
insl
sbb
in
push
pop
mov
orl
imul
push
bound
push
sarb
or
xor
outsl
les
subl
xor
rclb
push
mov
add
jnp
mov
xor
sbb
inc
mov
cmp
xchg
iret
jmp
mov
dec
arpl
mov
xor
sbb
pusha
sub
dec
cwtl
cmpsl
shrl
mov
lahf
pop
jno
jo
mov
data16
mov
in
cmovns
sahf
fdivl
mov
loop
clc
pop
adc
jb
mov
sub
popf
rcl
fucom
xchg
dec
loopne
mov
mov
jmp
sbb
movl
stos
test
iret
add
aam
and
imul
stos
push
mov
pop
insb
arpl
dec
push
and
repz
stos
and
popf
es
cmp
adc
push
lods
mov
push
sbb
push
push
add
mov
lock
lds
jmp
lods
mov
data16
aaa
ror
test
xor
movsb
or
and
inc
xor
or
or
orl
add
push
jne
movsl
imul
stc
sbb
mov
mov
and
stos
cltd
sub
ja
aad
leave
test
push
xchg
insl
inc
rorb
repz
xchg
adc
hlt
adc
ret
testb
outsl
in
cmp
aas
adc
mov
bound
outsl
dec
jl
inc
push
lock
mov
dec
in
lods
enter
ror
insb
lahf
fidivs
lret
pop
ljmp
add
lock
push
dec
ljmp
lods
inc
vpcmpgtw
push
es
sbb
aas
xchg
out
lods
push
push
xchg
jnp
sbb
loope
pop
push
xchg
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
movsb
adcl
jle
cmp
insb
rol
inc
and
pop
mov
dec
insl
inc
dec
imul
lret
mov
in
cmovno
addb
or
dec
lea
inc
in
dec
mov
or
shll
sub
mov
sub
call
fldl
aaa
push
pop
push
or
notl
xchg
xchg
mov
or
jle
fstpt
js
jae
add
repz
jmp
adc
out
mov
and
inc
mov
out
dec
stos
dec
dec
lods
inc
popa
out
mov
inc
insb
mov
sbb
push
mov
testb
xor
shrb
cs
xor
insl
stos
jmp
lret
sbb
dec
jns
jae
xchg
cmpsb
inc
in
xlat
mov
jg
in
adc
test
int3
je
adc
aam
push
les
sbb
jl
in
mov
xor
mov
lock
sub
jp
jae
das
push
test
icebp
shl
pushl
pop
add
sbb
or
aaa
inc
mov
xlat
mov
dec
push
jl
dec
ljmp
lea
es
das
sub
adc
popf
jo
popf
adc
mov
dec
cs
ret
ret
movl
push
sub
xchg
mov
lcall
aam
adc
das
add
iret
adc
push
subl
int3
push
mov
std
lock
ret
stos
sahf
into
arpl
adc
lret
in
aas
adc
pop
pop
jg
jmp
dec
and
repnz
xchg
dec
ljmp
adc
xchg
jno
cld
shl
lock
sarb
rol
mov
sub
mov
sub
or
add
mov
aas
out
mov
lcall
jecxz
insl
add
popf
or
jmp
loope
cmp
fwait
stos
mov
aaa
ds
jge
scas
or
loop
sbb
add
cmp
addr16
inc
mov
mov
addr16
cltd
and
and
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
hlt
ljmp
cmp
push
shlb
jae
mov
inc
faddl
cld
call
inc
push
pop
fwait
out
jmp
jp
shll
mov
scas
and
sub
mov
pop
pop
xchg
cmp
ljmp
cmpsb
pop
iret
push
std
cmp
inc
mov
ret
ss
xchg
jge
adc
loope
xor
add
out
repz
jg
pushf
movsb
lret
clc
fs
test
adc
in
out
sub
dec
jae
jb
mov
jns
xor
mov
xor
push
addr16
out
jae
call
jecxz
pop
daa
jl
xchg
loope
iret
sarb
test
and
repnz
ret
push
inc
bound
das
fstps
pop
mov
sub
shl
insl
repnz
adc
imul
cmp
cltd
mulb
or
mov
sbb
sbb
inc
sbb
jnp
movsl
test
and
scas
sub
xor
loopne
jp
imul
pushf
into
inc
scas
push
inc
cmp
cmovb
fsubr
imul
jp
int3
cmc
test
addr16
add
repnz
into
loope
jecxz
cltd
and
cwtl
cmc
inc
icebp
lcall
cli
pop
xchg
mov
fs
ds
mov
loopne
fisubrs
lds
mov
push
jle
ds
mov
xchg
cmp
mov
mov
cltd
cmp
mov
jg
lahf
sbb
ja
pop
mov
add
bound
mov
repz
ja
ficoms
jle
jmp
mov
mov
fadds
xor
cwtl
rorl
adc
xor
in
out
shr
add
cmp
cld
aam
filds
mov
inc
mov
scas
sti
mov
insl
xor
jo
adc
jne
mov
lods
xor
lcall
mov
sub
push
pushf
xor
xor
into
sti
lea
hlt
cmpsb
arpl
push
scas
in
jmp
inc
lods
ret
loop
repz
and
sub
jge
std
xchg
xchg
jmp
inc
shlb
test
add
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
push
sub
adc
enter
add
cmovs
outsl
mov
mov
add
xor
repnz
jmp
mov
mov
xor
enter
sub
call
insl
push
shlb
or
test
cmp
lret
xor
xor
xchg
test
sbb
lretw
or
cmp
xchg
cli
mov
push
pushf
enter
int3
and
popf
adc
ja
sub
add
mulb
imul
push
jp
jns
jecxz
sahf
or
xchg
dec
test
push
mov
in
insb
mov
xchg
fcoml
sbbb
into
mov
mov
ret
cmp
push
xor
stos
jne
pop
adcb
mov
dec
mov
mov
push
push
sub
sbb
jnp
lret
hlt
cld
and
pcmpeqw
addl
mov
fucomp
imul
pop
dec
mov
push
or
jns
in
adc
fcoms
sub
jae
sti
icebp
jae
xchg
scas
imull
lret
in
inc
mov
cmp
rorl
test
mov
and
test
repnz
js
xchg
xor
mov
movsb
push
lahf
aad
sub
xorb
sti
push
outsb
je
ljmp
outsl
push
jge
sahf
adc
icebp
pop
cmp
mull
das
adc
mov
rcll
cltd
gs
cmpl
sub
sub
mov
cli
push
cs
mov
jmp
jg
sbb
pop
push
aas
sbb
nop
or
lret
jo
mov
xor
sub
mov
add
loopne
fisubs
pushl
repnz
movsb
aam
fsubs
sub
arpl
pop
sbb
sub
sbb
lds
and
sahf
mov
jo,pn
ret
pop
pusha
add
jecxz
mov
pop
pop
fldl
pop
push
daa
adc
inc
jbe
cmp
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
cli
stos
add
idivl
cmp
jno
out
aad
and
mov
push
and
fistpll
dec
xor
add
gs
mov
cmp
dec
loop
inc
fs
test
clc
stc
push
xchg
dec
cli
ret
xchg
js
xor
mov
jne
test
hlt
dec
stos
lock
inc
add
inc
lret
ret
jae
sub
and
rcrl
out
mov
jno
xor
pop
push
test
xchg
sbb
mov
inc
dec
cmpsl
fistpl
mov
and
add
jl
xor
ret
push
jbe
pop
and
adc
mov
dec
ficoms
cmc
and
and
out
sbb
mov
mov
clc
lret
cli
pop
idiv
dec
mov
clc
xchg
les
xor
call
and
jmp
in
push
or
into
mov
mov
sbb
mov
sub
inc
fs
movsl
sbb
jle
pop
rcll
push
jno
pop
test
movsl
jnp
movsl
lds
idivb
pushf
inc
pop
adc
push
inc
cmp
in
pop
adc
mov
cmp
push
popf
xlat
push
jae
pop
and
pop
cltd
jbe
out
leave
push
mov
int3
push
adc
call
or
push
and
or
enter
mov
mulb
jns
xchg
mov
mov
mov
fcmove
shlb
flds
test
fstpl
jns
xchg
xor
pop
fwait
icebp
xor
shlb
jnp
dec
insl
dec
and
fldl
jge
incb
shll
sbb
pop
popa
js
test
dec
pop
jae
jae
push
js
shl
xchg
lods
sub
int
sub
ljmp
sub
getsec
pop
scas
les
xchg
lds
ret
mov
dec
insl
outsb
jmp
and
pop
int3
insb
adc
movsb
push
sahf
xchg
and
jmp
dec
sub
sbb
cmp
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
jno
mov
bnd
cmp
xor
dec
ja
jne
sub
hlt
push
mov
loopne
lods
lahf
mov
movsb
sbb
setne
decl
fstpl
xor
xor
add
scas
bound
sahf
sbb
insb
xchg
pop
cmp
das
outsl
lods
filds
ds
mov
ja
leave
dec
sub
inc
cmp
roll
add
jne
jbe
xor
mov
adc
out
pop
fldt
imul
sub
push
test
mov
lret
daa
nop
and
xor
mov
cmpl
add
nop
jae
xchg
sbb
jbe
add
sub
xchg
stos
cmp
push
lret
sahf
in
clc
cld
sub
in
arpl
stos
mov
nop
inc
addr16
jmp
xchg
xchg
inc
cs
fsts
imul
push
cmpsl
test
push
ret
sahf
pushf
cld
stos
rcll
idivb
movsl
stos
pushf
mov
lods
filds
sbb
leave
xor
and
aam
push
push
loope
and
jecxz
dec
call
je
mov
add
lods
stos
cmp
adc
cli
jnp
mov
mov
push
in
ja
jmp
addr16
les
stos
push
xor
mov
mov
adc
hlt
sbb
call
pop
fistpl
mov
mov
xor
sahf
adc
xchg
mov
cli
dec
mov
aam
add
jmp
lods
test
lret
imul
aad
loopw
mov
cmpsl
xor
push
and
dec
gs
xor
lock
rcr
arpl
cmp
add
test
daa
std
push
js
insb
lcall
mov
dec
mov
aas
mov
lret
dec
cmp
sub
cmpsl
lcall
iret
lea
addr16
sub
es
sbb
mov
mov
test
addb
push
iret
sbb
sub
adc
iret
stos
int3
dec
aaa
ret
inc
arpl
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
cmc
mov
jle
cmp
dec
into
shll
popa
push
fstpt
sub
pop
sbb
andb
cli
stos
or
rcl
in
pop
and
mov
out
in
cmp
imul
cli
les
addr16
mov
mov
inc
loopne
mov
dec
loop
lds
lea
cmp
out
movsl
rcl
push
push
mov
mov
push
call
les
mov
sub
ja
push
push
popa
mov
sub
outsl
popa
imul
fimuls
sarl
sti
inc
jb
enterw
popf
sbb
xor
mov
dec
popa
xchg
dec
push
push
sbb
mov
pop
mov
shrl
mov
lods
lods
sbb
lret
mov
xchg
and
adc
inc
pushf
jns
pop
dec
ja
pop
pop
or
repz
xchg
into
lds
stc
or
fadds
incl
lock
push
xor
dec
sub
xorl
mov
ds
add
xorl
mov
cmc
sbb
jle
add
in
rclb
and
scas
jg
xchg
sahf
cmpb
test
inc
roll
mov
pop
or
mov
lcall
or
dec
mov
into
xchg
ret
add
mov
scas
jmp
lods
lods
pop
mov
mov
lcall
lahf
roll
adc
inc
mov
movzwl
sahf
dec
push
lods
cmc
jmp
add
data16
push
or
mov
ror
push
enter
icebp
dec
sahf
cmp
mov
inc
sbb
fistl
xchg
sbb
push
mov
rorl
mov
inc
fisttpl
sbb
fldenv
inc
lahf
aas
sti
or
xlat
popf
divb
mov
cmp
add
adc
mov
daa
fidivl
fs
sti
dec
fsubrs
mov
jb
ret
or
jl
pop
out
jge
or
loope
fwait
lret
mov
daa
xchg
mov
rolb
lock
xlat
cmp
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
mov
jle
cmp
mov
mov
pop
imul
xchg
sbb
xor
jmp
push
jns
or
addb
and
js
stos
cli
pop
cmp
mov
or
jg
xchg
xchg
xchg
sub
adc
in
xchg
jb
mov
lcall
leave
std
inc
xchg
and
gs
mov
scas
cmp
movsl
addl
mov
iret
in
mov
and
daa
pop
or
jg
outsb
adc
lds
popf
in
sub
movsb
jae
add
add
in
pop
or
xchg
push
xchg
cld
jle
adc
sub
ds
jecxz
xor
mov
out
inc
or
cltd
xor
sbb
push
jno
mov
loopne
mov
jne
mov
gs
mov
movsb
fistpll
mov
adc
jae
daa
stos
mov
fdivrp
adc
iret
add
std
xchg
or
int3
movsb
jmp
sar
sub
pop
es
jo
push
adc
pop
cltd
xchg
mov
or
sbb
push
ficoms
sarb
jge
sub
pop
pop
addb
sbb
daa
cltd
jne
mov
jae
jbe
ds
add
push
imul
and
and
inc
pop
clc
arpl
dec
daa
push
je
testb
frstor
lock
mov
mov
in
or
add
xchg
daa
inc
push
dec
in
daa
dec
mov
fcmovnb
sbb
xchg
xchg
orb
sbb
inc
add
push
mov
jb
xor
adc
dec
push
aaa
ds
cmp
test
dec
ds
push
popa
repz
jecxz
mov
into
pop
nop
rolb
ret
es
movlps
outsb
or
mov
pop
dec
dec
lret
insb
testb
clc
inc
jb
cwtl
int3
out
iret
shlb
in
mov
xor
out
jge
sbb
test
cld
testb
sbb
lods
or
mov
imul
bound
lds
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
mov
jl
jle
cmp
add
inc
push
dec
int3
xor
push
fcmovne
or
add
aas
out
adc
arpl
pushf
lret
repz
add
cmp
xchg
sbbb
jmp
int
push
mov
shll
loopne
les
cltd
hlt
inc
dec
incl
in
arpl
sub
sbb
mov
pop
xor
add
xchg
enter
bound
pusha
xchg
lock
or
lcall
mov
jae
mov
ljmp
push
jne
ss
and
int3
adc
lds
cmp
ret
sub
sub
inc
push
scas
je
inc
pop
push
fcom
cmp
aam
or
mov
mov
iret
inc
dec
and
inc
icebp
bnd
dec
dec
xchg
lock
jae
adc
jmp
jmp
idivb
xor
mov
adc
xchg
and
neg
fnsave
sbb
push
pop
mov
dec
sbb
es
jb
insl
hlt
add
subb
jmp
lahf
in
cld
push
out
stos
shlb
es
mov
out
sub
fbstp
loope
pusha
idivl
dec
inc
lods
push
pop
mov
pop
in
sbb
sbb
into
jno
jb
jmp
sub
mov
stos
cmpsb
sbb
pop
mov
and
fmul
inc
sub
add
cwtl
mov
aaa
push
or
xchg
stos
lods
jp
leave
ss
lock
mov
dec
dec
mov
xor
cmpsb
inc
jbe
mov
or
loope
ficompl
inc
adc
mov
aad
pop
shrb
add
imul
or
movsl
js
cmc
jmp
sub
jg
arpl
push
lods
stos
jb
out
nop
int
jns
mov
in
push
add
test
imul
ret
ret
xchg
push
iret
cmp
das
adc
in
mov
push
ror
add
jge
inc
cmp
movsb
dec
loope
mov
push
inc
cmp
movsb
xchg
stc
sbb
xchg
xchg
fsubs
aas
cmp
add
in
cmp
int3
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
pop
pop
fldlg2
sti
jle
cmp
cmp
pop
ret
scas
jg
out
stos
int
inc
mov
pop
loope
push
leave
jg
fstl
std
mov
mov
aas
sarb
dec
mov
cltd
jnp
testb
mov
lahf
mov
push
lea
mov
sbbl
xchg
sbb
mov
mov
out
dec
add
xchg
jb
rcll
stos
pop
push
mov
outsl
and
sub
sbb
and
jb
dec
test
sbb
mov
xor
inc
sbb
xchg
mov
loop
lods
insl
aad
and
stos
movsl
cltd
or
cmc
push
xchg
out
ja
push
enter
rclb
xor
sbb
xor
and
sub
push
xchg
mov
jle
xor
jge
or
sbb
insl
push
or
cmpsl
loop
pushf
jno
lret
sbb
pop
lret
int
pop
xor
jge
sbb
js
hlt
xchg
fidivrs
mov
jg
fldt
or
out
loop
mov
fmuls
pop
adc
mov
dec
fiadds
pusha
pop
and
mov
fsin
pop
cmc
orb
mov
push
int3
lcall
popa
js
mov
pinsrw
fwait
push
lahf
jo
jecxz
or
cltd
and
aad
div
pusha
xchg
sarl
and
cli
push
jno
mov
fildl
mov
addb
lret
jno,pn
push
sub
test
and
push
mov
dec
into
stc
imul
cmpsl
js
dec
shll
xchg
dec
enter
nop
lock
jmp
stc
aaa
inc
aad
pushf
jle
jge
jno
fwait
int3
aaa
test
in
mov
dec
out
bound
jg
add
xchg
mov
lds
xor
ja
adc
sti
cmp
cli
lock
scas
loope
adc
mov
sbb
pop
imul
mov
es
inc
inc
in
int3
pop
stos
pushf
sahf
pop
movl
jae
pop
jle
cs
dec
sbb
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
aaa
cmp
jle
jl
jle
je
scas
add
cltd
rcr
mov
inc
or
jbe
mov
ljmp
in
sub
push
xchg
aas
loopne
je
jbe
xchg
aad
add
and
push
sbb
adc
mov
movsb
push
fcomps
repnz
arpl
push
je
xlat
jb
movb
int3
subl
jle
inc
jle
test
jnp
cmp
cmp
and
jnp
sbb
popf
cmp
mov
inc
pop
mov
lds
je
dec
inc
jp
stos
aad
fisubl
lods
test
adc
xor
aad
adc
add
aas
inc
pop
fwait
push
jne
sbb
into
inc
pushl
cmp
or
and
jecxz
mov
xchg
or
add
sbb
xchg
xchg
test
out
rclb
les
mov
es
jg
dec
push
aam
psubsb
jl
xchg
sar
stc
js
xchg
pop
lock
cltd
repz
stos
pop
sub
in
stos
pop
pushf
shll
ds
mov
push
xor
adc
push
push
lahf
leave
or
jmp
xchg
and
enter
push
sbb
rclb
das
jns
andl
lock
ds
pop
ljmp
sbb
mov
jo
adc
push
sub
fs
fdivs
xlat
pop
repnz
popa
stos
add
jg
fsts
add
jnp
je
popa
stos
mov
outsb
movsb
roll
jb
xor
pop
push
fmuls
mov
ljmp
mov
xchg
je
xchg
int3
sub
loop
insb
inc
adc
in
test
dec
lret
std
adc
es
div
pusha
lock
stos
mov
fs
das
sahf
sar
sbb
mov
rcrb
xchg
lea
movsb
mov
pop
and
cmc
pop
sti
aas
stos
or
sub
fisubl
jp
jg
aam
cmp
in
cmc
sti
test
xor
adc
ret
adc
mov
js
dec
cmp
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
daa
mov
jle
jl
jle
and
in
dec
fisubrl
push
and
push
rorl
mov
sbb
xchg
jmp
or
icebp
jmp
ret
jmp
sbb
ljmp
es
sahf
sbb
shlb
stc
enter
test
xor
mov
inc
push
push
jo
adc
imul
push
insb
sub
push
mov
add
xchg
xor
in
cmp
cmpsl
mov
mov
mov
outsb
add
loop
insl
xor
hlt
fdivp
ret
fiaddl
mov
pop
mov
je
pop
daa
mov
inc
int
enter
dec
inc
adc
adc
push
in
lahf
icebp
mov
and
and
or
dec
leave
cld
cmpsb
subb
jb
pop
mov
fs
mov
add
dec
pushf
inc
xor
jle
add
ffree
mov
add
test
sub
adc
jl
jo
jnp
adc
aad
sahf
clc
das
or
dec
test
xchg
in
lret
lds
dec
shll
addb
jg
cltd
lahf
dec
mov
xor
adc
sbb
sub
in
xor
repz
mov
fwait
xchg
lcall
or
mov
cmp
jns
pushl
mov
inc
sub
lods
push
pop
xchg
scas
ljmp
and
je
mov
movsl
sub
fiadds
xor
mul
add
or
jns
stc
data16
loopne
ljmp
incl
cmp
cmp
mov
sti
ss
leave
out
add
dec
icebp
xchg
les
hlt
mov
dec
mov
push
mov
les
inc
pusha
stc
jg
push
cld
dec
push
cmc
mov
xor
jo
aam
sub
movsl
out
shl
arpl
sti
shll
lcall
andb
imull
sub
xchg
sbb
and
lret
fstpt
adc
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rol
pop
push
in
adc
jle
cmp
xchg
adcl
adc
cmpsb
movsb
ja
adc
scas
addl
jae
adc
rcl
xchg
mov
jmp
push
movl
jp
movl
cmp
fiadds
inc
mov
pop
lock
and
fimull
ror
mov
pop
inc
xor
ja
cmp
dec
out
push
lds
push
addl
add
ja
cs
inc
int3
push
int
mov
hlt
dec
lcall
dec
je
mov
pop
cmp
addr16
cltd
pop
mov
mov
cmp
jle
mov
cmp
and
lods
jb,pt
loope
fildll
cs
div
jns
pushf
lahf
das
outsl
cld
mov
lds
mov
rcrb
xchg
lds
or
pop
pop
test
push
dec
or
gs
fidivrl
mul
movsb
mov
lods
imul
mov
inc
mov
ja
dec
mov
int
and
popf
sarb
push
and
lea
dec
inc
out
les
shl
inc
push
rol
adc
sub
cmp
jne
jmp
lock
inc
push
jle
mov
ds
jge
xor
xchg
inc
icebp
popa
mov
mov
ds
or
sub
ficomps
lahf
popf
xor
cmp
jno
int3
std
sub
mov
int3
xorl
xchg
cmp
loop
pop
aam
ss
aaa
lcall
push
or
lock
cmp
bound
repz
popf
cld
in
mov
inc
push
and
aaa
xchg
in
push
pop
aad
imul
sbb
pop
sub
xor
cmp
xor
outsl
xor
repz
xor
dec
stos
bound
gs
jl
fisubrs
imul
js
stos
cmp
add
mov
repz
popf
xor
rcll
lds
lods
out
jo
pop
ds
lock
dec
or
fidivl
lock
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
push
outsb
fiadds
jle
in
lcall
outsl
jecxz
jbe
xchg
ret
mov
popa
aaa
cmc
mov
hlt
lcall
das
arpl
js
push
into
sarl
jle
xor
mov
xor
sbb
repnz
movhps
dec
test
pop
shrb
or
cmpsb
and
hlt
mov
pop
stos
mov
lahf
ja
sbb
xchg
and
pop
fidivrs
cli
insb
addl
rorb
das
and
adcl
jns
testb
adc
jecxz
mov
jg
lcall
mov
hlt
or
outsl
cmpsb
orl
std
xchg
pop
mov
imul
test
lret
push
adc
jno
cmovl
xchg
push
in
pop
stc
and
push
subl
jl
insl
popa
rcr
push
loop
inc
cmpl
popf
cltd
cmp
fnstcw
mov
data16
sbbb
adc
mov
cmc
jmp
xor
mov
sbb
dec
out
fidivrs
les
mov
adc
mov
xchg
mov
dec
cmpsl
cmpsl
pop
cmp
lcall
rolb
pop
sarl
cmp
add
je
popf
sbb
and
push
jbe
lea
xchg
mov
add
jmp
stc
fmul
insl
xor
aad
inc
stos
xchg
notb
loop
inc
jmp
movsl
scas
repz
adc
rcrb
in
sbb
fs
mov
lret
sub
leave
mov
push
cmp
dec
pop
dec
ljmp
shlb
js
negb
insb
or
fmul
push
pop
in
fisttpl
pushf
es
inc
xlat
push
or
pop
and
xor
push
push
jp
lcall
sbb
jb
adc
rcll
mov
sub
testl
mov
jge
pop
icebp
lea
and
xor
rorb
inc
add
rcll
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
mov
cmp
nop
out
and
xor
xchg
jbe
int3
jg
xchg
out
loop
mov
jne
sbb
push
push
push
push
add
fcomip
jle
xchg
into
test
dec
add
push
or
shlb
lock
movsb
shld
fdivrl
mov
bound
rolb
cmp
inc
lds
xchg
popf
movsl
lcall
and
dec
pop
adc
cmp
cltd
sbb
adc
push
ljmp
xchg
cmp
xlat
jle
data16
jge
insb
jae
dec
add
jb
push
cmp
or
cmpl
cmpsb
enter
data16
or
test
sbb
pop
jp
ja
mov
aaa
iret
and
xchg
lods
icebp
rcll
sbb
adc
mov
jo
test
cmpl
sub
ret
mov
and
mov
mov
jae
fimull
mov
add
inc
or
enter
sbb
fisttpll
jns
scas
cmp
outsl
cld
sub
lret
adc
jg
adc
in
push
imul
cli
gs
cwtl
push
mov
dec
dec
adc
outsl
pop
jb
int
fimuls
ret
gs
dec
and
loope
in
lcall
inc
leave
mov
test
xorb
push
mov
xchg
into
add
fsubp
jb
stos
ljmp
aas
lds
out
loope
or
ja
jge
push
insl
jl
dec
ret
dec
jecxz
cld
inc
shll
sub
inc
sbb
pop
push
mov
clc
outsb
and
xor
popf
call
pop
ret
and
stos
mov
cmpsb
mov
and
jl
mov
pusha
loope
push
xor
pop
out
push
mov
loopne
shll
sub
sub
aad
sub
pop
cmp
xchg
ss
inc
fisubs
pop
push
and
push
gs
dec
adc
jl
and
sarl
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
test
jle
cmp
xchg
mov
mov
sbb
rep
in
jno
test
jns
addr16
mov
dec
xor
sti
jo
lret
fisubrs
repz
inc
inc
fbld
cmp
and
in
aaa
movsb
mov
orl
ljmp
sbb
ret
clc
aam
push
sbb
test
push
xor
pop
pushf
bound
xor
mov
popf
push
lods
cli
mov
pop
rcrl
or
in
jae
pop
mov
ja
fadd
daa
pushf
mov
insl
push
lods
divl
mov
inc
filds
sahf
push
jl
shll
testb
lahf
sub
adc
and
jg
leave
fcompl
leave
mov
inc
shl
test
into
movlps
xchg
mov
das
push
pop
insb
cmpsl
imul
stos
cmp
aas
or
jb
movsl
mov
adc
xchg
pop
movsl
adc
outsb
imul
cmpsb
xor
push
mov
mov
dec
cld
add
xor
nop
xor
jle
jno
shlb
fs
xchg
lods
clc
sbb
add
xchg
into
scas
jne
out
jns
nop
iret
jb
cmp
sbb
clc
movsb
gs
mov
mov
les
es
pop
pop
pop
insl
divl
call
xchg
xchg
stos
mov
push
or
cld
aad
call
sbb
rcrl
mov
out
jecxz
rorl
cmp
or
lock
out
test
push
adc
and
cmpsb
repz
dec
jp
sub
mov
roll
adc
mov
call
fwait
scas
mov
sbb
or
adcb
push
mov
sbb
mov
insb
test
cmpsl
sub
incb
xchg
jnp
inc
outsl
mov
cli
fst
mov
pushl
dec
je
xchg
mov
xor
or
mov
inc
pop
dec
dec
and
dec
dec
xchg
scas
lret
xchg
movsl
xchg
mov
int
inc
or
adc
and
sub
xchg
jmp
push
std
dec
sahf
push
push
add
js,pn
aam
mov
cmp
xchg
test
mov
jle
sbb
inc
inc
loop
addr16
in
xlat
cwtl
sbb
insl
cmp
shlb
jmp
mov
push
insb
sub
xchg
imul
jns
jnp
mov
sub
push
lea
fldenv
movsl
scas
int
or
lret
loopne
fmull
inc
orb
add
pop
scas
lods
rorb
and
push
push
add
std
imul
jecxz
testb
pop
ret
xchg
outsl
call
jb
xchg
fnstenv
mov
or
ret
insl
into
add
loope
lahf
xchg
inc
bound
andb
mov
sbb
push
stc
add
or
vmulps
sarl
loope
daa
mov
xchg
sbb
fistpl
rcl
test
subl
cmp
inc
mov
xor
or
std
lods
mov
push
es
jns
stos
jg
pusha
adc
es
fsubrs
xchg
push
es
adc
adc
movsl
dec
xor
push
icebp
and
enter
ds
in
jle
pop
inc
push
push
cmp
mov
or
ja
loope
add
xchg
push
insl
out
jbe
dec
std
jbe
repnz
inc
cmp
lds
xor
fdivs
call
jo
and
jle
mov
mov
and
jbe
ret
in
xor
add
xorb
aam
aas
jge
jnp
and
mov
jl
add
and
sbb
pop
pop
dec
push
clc
mov
mov
add
dec
repnz
cmp
mov
sbb
push
pushl
jge
pop
lea
adc
mov
sbb
imul
add
pop
push
call
ja
ror
mov
aam
pop
jo
addr16
xchg
dec
lahf
add
jg
cmpsl
enter
gs
or
add
xchg
dec
mov
push
adc
aam
loope
lcall
inc
repz
lcall
adc
lret
cli
movsb
sub
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
popa
fcompl
testb
jle
mov
outsl
adc
inc
add
out
fs
dec
sbb
sub
jae
js
mov
jmp
bnd
inc
hlt
cmp
push
dec
aaa
pop
popa
mov
lea
mov
movsb
pusha
aas
dec
jl
mov
pop
add
cmp
notl
push
xchg
mov
cmp
jbe
cmp
dec
sub
sub
fst
stos
pop
lret
mov
xchg
clc
add
cmpsb
cli
call
xlat
adc
fisttpl
imul
sbb
rcll
pop
sub
lret
and
adc
jge
lods
cltd
push
cmp
xchg
jbe
xor
mov
into
movsl
in
push
std
rorl
out
mov
jo
adc
test
xchg
test
add
xchg
pop
sub
test
lea
or
adc
fiadds
mov
dec
mov
jl
inc
mov
unpckhps
push
fs
inc
and
add
push
mov
int
arpl
imul
pusha
sbb
popa
fnstenv
cli
push
jg
pop
push
scas
xor
cmpsb
jb
push
rcrl
and
pop
inc
popf
mov
inc
loopne
dec
out
pop
xor
scas
xor
add
ret
ja
push
frstor
cmpsb
lcall
fstps
xchg
push
mov
int3
icebp
xchg
jle
enter
add
enter
das
ja
push
loop
dec
hlt
fistpll
pop
orb
lret
iret
dec
push
cmp
pop
cmp
aas
mov
xorb
inc
or
fstpt
sub
dec
ss
test
cmp
cmp
pop
stc
bound
gs
or
lods
pop
adc
subl
mov
cld
adc
pop
lods
lea
xchg
ljmp
mov
jno
pusha
mov
leave
data16
add
jecxz
mov
jg
clc
and
fs
dec
jae
rcr
sub
fnstsw
aad
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
and
xchg
jle
cmp
arpl
fcmovu
stc
xchg
xchg
stos
mov
xor
test
xor
mov
iret
fadd
or
mov
cmp
aam
push
pushf
xor
adc
icebp
test
mov
jle
aam
jg
int3
jo
dec
lcall
mov
dec
imul
cmc
jge
and
push
xchg
lcall
sub
ljmp
inc
push
repz
jns
push
inc
loopne
and
je
cmp
xchg
mov
or
cmpsb
callw
cs
mov
add
and
sub
jb
sub
fdivrl
or
xor
push
fwait
adc
ja
repnz
lods
mov
mov
das
stos
pop
outsb
lcall
xor
mov
popf
stos
jo
dec
imul
inc
in
xor
rorl
int
movsb
inc
out
xor
lods
ret
stc
xor
ljmp
jle
cmpsb
or
pusha
adc
xchg
xor
inc
loop
mov
xchg
mov
jo
cwtl
gs
out
mov
pop
adc
push
or
repz
ljmp
mov
xor
sbb
lock
clc
mov
cli
lds
lcall
adc
or
sahf
xorb
adc
and
pop
cltd
lea
js
popf
mov
jmp
adc
and
lcall
adc
cmp
mov
rcrl
lea
mov
or
cmc
pop
mov
push
and
mov
jmp
and
dec
icebp
lret
pop
stos
push
pop
loopne
push
pop
mov
jnp
xchg
mov
mov
mov
loop
incl
movsb
sbbb
inc
or
loope
pop
movsl
jg
push
in
testb
push
xchg
mov
mov
jno
jo
icebp
cmp
aaa
mov
cmp
addr16
test
out
dec
cmp
call
emms
stc
dec
pushf
inc
sbb
fildl
adc
push
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
jmp
mov
jl,pt
jle
cmp
pop
rcrb
pop
arpl
lret
mov
mov
into
mov
sbb
mov
sbb
call
lcall
inc
mov
idivl
mov
sbb
add
rolb
cltd
enter
mov
xchg
pop
bound
sbb
loop
scas
jge
pop
or
inc
jl
mov
sbb
add
jge
lcall
cmpsl
or
je
dec
popa
icebp
xchg
inc
popf
addb
arpl
mov
mov
xlat
lret
jmp
jecxz
inc
outsb
sbb
mov
add
movsb
cs
mov
push
icebp
inc
andb
shl
mov
rcrl
out
add
fcompl
cmpsl
ja
xor
adc
ret
outsl
xchg
xor
xchg
outsb
adc
pop
sbb
cmp
mov
pop
addr16
add
mov
xor
xchg
fmul
xor
jge
mov
jp
inc
in
push
nop
mov
jge
clc
nop
ret
testl
dec
imul
sarb
pusha
and
jo
outsb
and
push
push
mov
hlt
lods
xor
cmp
xor
sub
push
and
add
andb
mov
jle
mov
dec
mov
jo
jne
jno
sbbl
xchg
jae
hlt
push
push
push
iret
xor
push
aad
iret
push
adc
jecxz
stc
adc
or
outsb
scas
out
cmp
jg
imul
mov
cli
pop
push
adc
pop
frstor
add
sbb
pcmpeqd
and
popf
arpl
pop
stos
xor
or
dec
mov
and
cmp
pop
and
mov
pop
adc
rcr
push
mov
cli
test
cmp
aaa
mov
mov
scas
adc
cwtl
and
imulb
ja
sub
lea
mov
in
mov
fs
mov
fld
test
clc
jmp
mov
mov
xor
add
jmp
orl
imul
fwait
adc
jle
jl
jle
xchg
iret
pushf
mov
fstpl
popf
rcll
bound
pop
hlt
mov
cmc
mov
jp
push
adc
fs
popf
push
dec
inc
subb
and
stos
ret
jne
xchg
lock
fdivrp
and
stos
out
test
aam
ss
int
mov
cmp
xchg
xchg
int
cmp
push
mov
sub
fyl2xp1
sbb
js
pushf
inc
aam
movsb
inc
mov
loope
fdivr
cmp
cmp
sbb
pop
add
jb
aas
mov
inc
jge
pop
rolb
pop
out
cmp
lret
jecxz
cmc
push
xchg
and
xchg
int
es
ja
fs
add
adcl
mov
sahf
mov
test
xor
les
jle
xchg
stc
shrb
fimuls
orb
jnp
arpl
mov
loop
sti
into
popa
and
xorb
scas
cmp
lock
ja
stos
das
test
in
sub
movsl
xchg
jmp
lods
sub
das
in
in
lods
cwtl
xchg
leave
into
cmpsl
repnz
mov
cmp
fadd
iret
add
mov
sub
loop
xor
and
cmp
cli
adc
aaa
xor
mov
pop
daa
js
jae
push
pop
and
push
clc
push
fs
mov
adc
scas
push
sarb
les
sub
lret
jb
pop
cmp
pop
lods
mov
or
sahf
frstor
outsl
xchg
xchg
mov
inc
roll
cmp
mov
jnp
dec
ds
xlat
ss
mov
dec
and
sti
cld
mov
rorb
sbb
sbb
fcoms
pop
mov
xchg
push
shrb
ret
ds
daa
mov
mov
iret
das
cs
lds
mov
movsb
xchg
push
cmp
fwait
popf
rdmsr
and
xchg
fwait
cmp
loop
aaa
push
popf
jmp
cmpsb
xchg
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
mov
shl
lock
cli
into
mov
out
mov
add
add
mov
pop
jnp
jne
popa
out
pop
ror
add
jle
loope
cld
push
sub
in
jle
mov
pushf
fucomi
push
push
sbbb
cwtl
mov
stos
lcall
inc
lock
push
push
push
and
pop
cwtl
inc
and
call
sbb
xor
mov
xor
out
xor
jae
inc
or
stc
jp
or
test
sbb
pop
imul
xchg
lods
cmpsb
cld
cwtl
das
sbb
inc
adc
push
sti
mov
push
mov
or
and
pop
pop
out
add
movsb
iret
mov
xchg
repz
aaa
fsub
cmpsb
cmc
xchg
sub
dec
sub
mov
mov
mov
in
jnp
popf
shr
xchg
push
mulb
sbb
out
mov
out
sarl
roll
data16
stos
fucomi
mov
mov
sbb
pop
push
shll
xorb
sbbl
test
scas
adc
sub
int3
adc
hlt
or
lahf
add
dec
mov
or
push
dec
paddw
mov
add
xor
cmc
cmpsl
cld
ljmp
push
out
or
fnstenv
and
dec
cmp
inc
jle
mov
insb
mov
subl
or
stc
scas
ficomps
pop
cld
or
loopne
ljmp
mov
icebp
inc
sub
addr16
inc
dec
fs
jb
cmp
out
cmp
lcall
jl
out
push
dec
imul
xor
mov
aam
imul
call
xchg
jno
add
movsl
pop
jl
pop
cs
jge
dec
add
mov
push
ret
dec
ret
adc
lcall
hlt
jl
cmpsb
or
call
xchg
mov
pop
pop
repnz
jae
cmpsl
dec
and
xor
lsl
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
divl
pushf
jle
adc
jle
cmp
int
ret
mov
push
push
xchg
add
xchg
adc
sbb
and
pop
pop
inc
stc
lea
std
out
leave
mov
lods
test
cmpl
push
cwtl
xchg
push
inc
lahf
shlb
lods
iret
adc
mov
out
cmc
pop
int
repz
bound
cmp
call
mov
xor
push
mov
inc
popa
imull
insb
add
call
sub
movsl
mov
mov
mov
cmpsl
add
cmp
mov
mov
xor
lods
adc
jb
sbb
push
inc
xchg
decl
inc
mov
inc
jp
aam
add
pop
data16
xchg
adc
sti
xor
sarb
or
mov
mov
jecxz
xor
add
xchg
jnp
rolb
sbb
test
push
sub
mov
cmp
mov
mov
fmuls
or
insb
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
or
jle
adc
jle
adc
adc
pop
pop
sbb
scas
add
pop
xor
pop
pop
mov
divl
shll
out
test
jg
push
xchg
inc
es
incl
push
cmp
lret
les
mov
pop
imul
loopne
jge
icebp
imul
lcall
or
mov
ja
sbb
pop
mov
ret
or
sahf
dec
pop
and
jp
cmpsb
stos
push
cmpsb
cld
sbb
insl
and
fs
sub
mov
movsl
push
dec
ljmp
jmp
jne
pop
out
test
or
insb
jb
dec
dec
pop
cmc
jecxz
idivb
cltd
cmp
jae
out
pop
dec
or
mov
fbld
out
xor
fsubrp
jno
sub
sbbl
aaa
cs
lret
inc
or
sub
mov
cmpsl
lahf
sbb
add
cmp
loop
sub
les
ja
push
in
jb
pop
pop
sti
lret
movb
xchg
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
or
lcall
xor
out
mov
leave
lcall
stc
les
xor
mov
mov
sub
pushf
dec
and
push
and
lahf
test
mov
stc
pusha
mov
ficomps
test
jg
subl
das
push
movb
add
sbb
cwtl
xor
dec
int3
dec
xor
addb
rcrb
stos
push
xor
cltd
jo
cmp
shll
and
push
lcall
ljmp
sbb
xlat
dec
push
movl
aaa
out
ja
pop
mov
push
lods
and
stos
lahf
arpl
popa
push
jl
push
jmp
into
lods
lock
inc
sub
repnz
or
pop
pop
sbb
and
mov
cmpsl
sub
mov
sub
ror
xlat
divb
je
jl
rorl
or
shr
push
add
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
inc
leave
or
push
cwtl
jle
adc
jle
hlt
pop
scas
leave
dec
lods
adc
dec
jl
dec
cmp
repz
mov
pop
dec
xchg
pop
push
pop
jbe
fwait
xchg
sbb
out
inc
inc
jne
int3
cli
outsl
inc
subl
setbe
dec
jmp
and
stos
mov
lods
push
xchg
stos
pop
scas
test
fsubl
push
mov
adc
push
pop
mov
and
inc
scas
inc
sbb
push
shrl
icebp
and
je
aaa
icebp
jecxz
xorl
leave
cs
mov
mov
dec
cmpb
xlat
or
cmp
stos
lret
push
shl
push
add
in
pop
stos
jnp
cmpb
sti
shll
mov
mov
xchg
enter
scas
nop
adc
ljmp
std
cwtl
dec
ficomps
adc
mov
mov
outsl
movsb
lahf
and
jl
lret
push
jne
sub
iret
lods
push
outsb
sti
fisubrs
xchg
mov
stos
pop
outsl
mov
daa
mov
jp
aaa
sti
xchg
loopne
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
add
jle
adc
jle
xor
les
cld
cmp
call
xor
push
scas
fisubl
fsubs
fsubrs
add
aad
push
mov
lahf
push
xchg
push
leave
push
aam
test
jns
jns
xor
data16
and
subl
je
stos
jmp
cli
aam
sbb
push
push
cli
mov
ret
out
sub
jno
jl
xchg
fs
sub
add
fcomps
jne
add
xchg
sub
cli
pop
js
xorl
test
stos
jb
cld
jo
popa
sub
xchg
adc
mov
sti
aaa
loop
scas
add
mov
lahf
loopne
cmp
fistps
ret
and
ss
filds
testb
jmp
out
add
insl
sub
movsb
int3
int3
stos
in
mov
loopne
mov
aaa
dec
movsb
xchg
sbb
ss
in
and
out
and
ss
pop
daa
push
mov
mov
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
out
fbstp
mov
xor
out
or
jo
mov
arpl
jp
jns
and
xor
ss
mov
jb
movsl
sbb
stc
push
sub
rcrb
out
dec
shl
adc
sub
fldl
mov
sbb
pushl
xchg
jno
je
shl
rclb
test
in
jp
and
ljmp
fisubrl
inc
rorl
mov
dec
movsb
mov
or
mov
inc
inc
idivb
push
xlat
or
inc
popf
ds
mov
orl
xor
incl
mov
in
mov
cmp
cmp
out
dec
push
jp
push
push
in
cmpsl
popa
aam
ds
xchg
faddl
lahf
jmp
xchg
and
mov
jbe
xchg
adcl
mov
mov
jmp
sub
mov
push
pop
sub
cs
xor
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
inc
xchg
ja
cmpsl
jle
adc
jle
xor
loopne
cmpsl
call
adc
inc
and
xchg
in
pop
rorl
pop
push
rol
push
je
notl
mov
sub
cmp
sub
mov
pop
arpl
int3
dec
out
addr16
and
rcl
sahf
dec
aas
mov
test
fidivl
push
movsl
inc
fwait
mov
dec
inc
mov
std
inc
popa
sub
dec
stos
in
in
stos
js
sub
cmp
aam
les
adc
cli
cmp
mov
jg
and
movsl
scas
xchg
add
aad
push
xor
push
leave
lcall
mov
adc
jb
cmp
dec
or
inc
lcall
loop
out
sarl
js
cs
push
add
and
inc
cmp
sbbl
pop
in
int
add
pushf
add
jb
mov
pop
je
xchg
shll
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
adc
jg
jle
sub
outsl
cmc
mov
scas
dec
pop
arpl
stc
lcall
mov
test
mov
mov
clc
leave
movsl
push
push
test
pusha
enter
pop
sbb
lahf
jnp
dec
push
addr16
ljmp
cmp
sbb
std
int
sub
pop
xor
and
xor
iret
lods
mov
cmpsb
nop
adc
ds
frstor
in
adc
mov
cmp
mov
xchg
pushf
push
std
mov
sub
mov
pop
mull
adcb
push
mov
jbe
cltd
lret
inc
adc
ds
xchg
or
lret
les
lret
adc
and
and
mov
in
out
enter
xchg
lea
int
imul
cmc
out
jae
insl
xchg
dec
scas
adc
and
fadds
aaa
movsl
pop
enter
outsl
push
fadd
mov
push
negl
lods
jae
scas
adc
pop
test
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
mov
jle
push
jg
jle
mov
and
movsb
sbb
aam
ljmp
int3
dec
test
jo
or
mul
mov
rcl
mov
sub
ljmp
fisttpl
mov
fstl
vpmacsdql
daa
mov
clc
insb
test
mov
mov
or
aam
stos
jne
sbb
sbb
popa
scas
inc
pop
shrb
mov
pop
into
pop
and
hlt
fstps
test
add
push
xchg
stos
lret
js
and
aaa
mov
cwtl
ja
mov
fcmovbe
int
push
pop
test
mov
inc
stc
and
push
xchg
mov
lahf
push
add
hlt
xor
pushf
std
jnp
call
xor
xchg
stos
sbbb
imul
jno
stos
stos
incb
jo
loope
pusha
mov
fs
mov
sti
test
dec
cwtl
out
scas
fsub
xor
lds
xorl
xchg
out
into
ffree
mov
jecxz
pop
int
or
outsl
shll
stos
sar
mov
int
adc
mov
xlat
scas
jae
ljmp
or
mov
xlat
push
es
aaa
push
jecxz
and
push
sbb
xchg
nop
xor
lret
mov
loop
das
test
push
cmp
into
sub
dec
jg
dec
pop
mov
mov
mov
call
jmp
jbe
fadds
mov
or
mov
pop
adc
jae
rorb
pop
pop
stos
test
cmp
arpl
dec
push
and
std
icebp
cmc
xchg
xor
std
push
ret
push
aaa
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
das
hlt
out
adc
add
jns
stc
xor
pop
aad
pop
ljmp
sub
pop
fists
aas
test
nop
jmp
dec
jge
mov
cmp
jae
jle
mov
cmp
sub
ja
jb
shl
cmpb
push
cmp
mov
mov
mov
jns
add
insb
lcall
leave
int
mov
xorl
cmp
jne
or
pop
mov
pop
loope
jecxz
repz
jg
or
mov
jmp
add
lahf
sub
shr
outsb
fstpt
pop
jnp
mov
flds
stos
cmp
leave
shll
sbb
insl
ficomps
aaa
outsl
cmpsl
rolb
pop
lret
mov
and
stos
push
mov
popf
fstl
ret
push
jne
adc
jnp
push
pop
pop
movsl
dec
sbb
xor
mov
rorb
inc
insl
dec
fwait
ja
cmp
jne,pn
sub
mov
mov
fidivs
push
sub
sbb
mov
xor
add
and
sbb
push
add
imul
push
inc
push
lret
in
fdivl
idivl
lock
call
add
sub
cld
gs
or
pop
outsb
and
andb
popl
mov
jmp
push
adc
jae
cmp
sbbb
stos
sbb
mov
test
cmc
mov
cmp
idivl
roll
addb
jl
fstpt
push
in
inc
pop
aam
xor
jge
dec
mov
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
arpl
jl
jle
pop
jns
repz
xchg
xor
push
cmc
inc
dec
lcall
stos
mov
xchg
addr16
dec
push
cmpsb
mov
push
dec
shrb
dec
sub
push
adc
dec
pop
jno
mov
dec
inc
fstp
and
and
add
aam
cmp
aad
add
dec
shl
mov
push
rcl
push
and
pop
mov
iret
sub
das
loopne
stc
xor
pop
rorb
pop
insb
sbb
or
out
iret
and
push
inc
mov
or
xchg
cs
sub
cmp
mov
dec
repz
adc
test
mov
cltd
adc
fdivrs
pop
pop
jl
inc
mov
jae
jne
imul
dec
popa
icebp
add
in
jnp
or
shll
push
std
movl
xor
add
into
push
test
mov
xchg
dec
ja
dec
ss
pop
rol
push
pop
fwait
mov
clc
fistl
xor
leave
cmc
xchg
jg
sti
or
fistl
and
inc
ljmp
cld
roll
bound
adc
sbbl
dec
movsl
dec
dec
aaa
shrb
cmp
jle
iret
mov
adc
les
push
mov
dec
fcmove
push
pop
iret
inc
ficoms
or
cld
inc
and
shrb
mov
ret
cli
cli
cmp
cwtl
jo
insb
dec
add
pop
add
cmpsl
inc
xor
cmp
movl
mov
in
test
dec
loop
shr
push
adc
mov
inc
xorb
mov
mov
pushf
inc
xchg
scas
cmp
cld
mov
aam
daa
int3
mov
ss
push
push
mov
es
cmp
fidivl
ljmp
iret
fisubl
call
and
jnp
jnp
mov
fistpl
test
pop
aad
cltd
pop
insb
jmp
push
push
pop
nop
divl
cmc
pop
or
pop
aas
int3
enter
or
pop
push
cmp
stos
push
enter
dec
packuswb
daa
fimull
pop
inc
mov
testb
shlb
imull
dec
je
iret
jnp
call
or
cmp
outsl
and
clc
adc
inc
pop
cltd
lret
dec
xchg
ja
subb
jecxz
scas
mov
xchg
sbbb
and
inc
xchg
pop
pushl
sbb
mov
pop
sub
test
cmc
lea
inc
pop
mov
dec
ss
dec
push
push
adc
cmp
scas
cmp
xchg
stos
mov
dec
pop
negl
lods
add
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
cmc
aam
jle
jl
jle
cld
cmpsb
ljmp
sar
inc
out
xchg
adc
rorl
aaa
ljmp
aam
out
dec
out
sbb
jg
push
idiv
jl
fwait
jae
push
aas
fisubs
popa
adc
lock
xchg
lock
shlb
fildl
rcrl
inc
jns
xor
stos
pop
std
jnp
sbbl
mov
leave
dec
lcall
cmpsb
adc
setp
dec
sbb
pop
push
mov
mov
int
xchg
or
ja
dec
popf
sbb
je
add
xlat
aas
pushf
rorl
inc
aam
xor
fcomi
mov
push
push
idivb
imul
xor
lock
inc
daa
cmp
or
mov
cmp
fmuls
in
hlt
xor
shrb
stos
sub
ret
adc
xchg
lret
sbb
clc
dec
jo
movsb
nop
test
push
or
into
aaa
enter
pop
pop
call
fisttpl
or
dec
mov
push
mov
test
dec
xchg
aaa
xor
push
insl
daa
lea
jbe
dec
stos
sbb
insl
leave
sbb
cld
xorb
mov
sub
cmp
xchg
mov
xchg
shr
fsubp
xchg
add
adc
xchg
dec
push
jle
push
mov
in
cmp
or
jnp
pushf
cwtl
inc
xchg
ljmp
aad
push
inc
repnz
and
fwait
lcall
xchg
push
mov
iret
jo
insl
add
push
jne
dec
repnz
outsb
pop
mov
push
out
dec
inc
lret
or
push
cmp
ss
mov
pop
add
rcrb
xor
pop
sbb
push
out
mov
fmuls
std
adc
jno
int
into
mov
add
je
dec
xor
dec
shlb
in
sbbb
ljmp
out
xchg
sarl
rorl
mov
dec
fsubs
sbb
pop
ja
and
addr16
jecxz
dec
sbb
cmp
lds
xchg
pop
lods
mov
call
cmpsl
aas
cmp
addr16
test
mov
inc
mull
orl
lds
aaa
adcl
xchg
jge
idivl
stos
lret
out
sub
xchg
pop
roll
stos
leave
imul
aaa
mov
push
outsl
fldenv
mov
xchg
lods
mov
push
xchg
repnz
loop
ljmp
pop
add
push
cmp
popl
inc
xlat
mov
mov
decl
mov
or
and
sti
dec
xchg
adc
cmp
psrlq
mov
sbbl
test
pop
pop
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
dec
shrb
jle
sarb
inc
pop
ficomps
push
data16
push
mov
negb
negb
lods
pop
lea
aas
fidivl
into
sahf
push
push
rolb
shrl
adc
ret
mov
xor
and
repz
jae
lods
pop
inc
js
mov
pop
arpl
sub
xor
fwait
aad
jl
mov
or
lods
xorl
push
aas
pop
mov
cmpsl
leave
jnp
loop
pop
mov
cmc
imul
dec
xor
test
pusha
inc
fidivrl
ljmp
dec
int
fcoms
jns
sbb
jns
lods
std
xchg
ds
ret
cmpsb
add
push
jb
adc
adc
pop
fsubp
mov
xchg
inc
into
call
movsl
add
mov
pushf
dec
fldt
test
pushf
scas
pop
dec
fidivs
cli
les
nop
add
jmp
imull
imul
push
in
out
pop
bound
jno
rorb
testl
test
popf
enter
push
std
iret
mov
sbb
inc
or
mov
rorl
movsb
leave
and
jp
sub
cmp
pushf
mov
mov
fisubs
jne
andb
leave
lods
std
in
imul
aas
cltd
xchg
cmp
xorl
fsts
adc
lea
js
cmp
mov
adcl
nop
or
cli
jb
sub
sbb
lods
push
sahf
pop
add
test
jge
inc
jno
cwtl
lods
adc
cmp
jne
bound
xor
sbb
fadds
adc
sbb
call
push
mov
jnp
or
lods
hlt
add
jecxz
sub
dec
cmpsl
int
inc
mov
test
enter
mov
push
pop
sbb
into
or
xchg
and
or
rcrl
dec
sbb
mov
jo
cwtl
movsl
cmp
and
push
mov
sbb
push
fwait
sub
lcall
inc
aaa
pop
jp
lods
cmp
les
mov
adcl
ss
cmp
push
fistps
sar
xor
cwtl
mov
pop
dec
out
and
add
mov
out
jl
sbb
test
pop
push
ret
loopne
or
inc
hlt
mov
adc
lods
jne
pop
mov
js
lea
adc
gs
xor
and
test
xor
mov
nop
les
pushl
inc
add
sti
or
adc
xor
aas
fstl
mov
lret
pop
popf
xor
sub
inc
or
mov
or
popa
inc
ljmp
sbb
mov
dec
xchg
mov
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
and
shlb
jle
add
les
cmp
cmp
sbb
add
jmp
mov
dec
inc
in
dec
cmp
in
fisubs
adc
mov
lock
popf
sub
pop
mov
jbe
ds
imul
add
cmp
xor
iret
and
out
xchg
dec
add
inc
inc
xor
sub
push
imull
dec
enter
rcrb
pop
rcll
xor
sbb
ret
push
sbb
mov
xchg
pop
test
fistpl
cwtl
inc
jne
popa
jbe
shr
mov
jb
add
and
jp
sub
addr16
lock
xlat
and
not
and
pop
movsb
mov
xor
push
loopne
stc
shll
sarb
insl
shlb
inc
cld
mov
pop
dec
inc
inc
jnp
pusha
add
xor
mov
les
sbb
cld
dec
test
adc
lret
nop
adc
ret
cli
loope
test
xor
loope
sbb
cmpsb
in
inc
sub
lret
inc
ret
mov
into
mov
addl
mov
push
out
pop
mov
push
leave
jg
dec
and
movsb
sbb
xor
push
xchg
pop
pop
cmpsb
cld
data16
push
repz
dec
push
pop
mov
pop
inc
scas
es
ss
or
cwtl
mov
and
mov
shlb
inc
pop
jl
sub
sbb
jle
mov
dec
rcr
aad
and
dec
inc
push
popa
mov
sbb
test
cltd
mov
jnp
mov
jmp
xchg
bound
in
inc
popa
std
pop
mov
mov
cmc
push
mov
push
lds
push
jnp
jg
shll
lods
fucom
in
inc
push
mov
xchg
mov
fisttps
test
adcb
jo
and
mov
hlt
negb
mov
dec
xchg
je
cmp
xor
test
fiadds
push
add
out
sbb
lds
inc
and
sub
dec
loop
arpl
int3
pop
fidivrl
das
pop
loopne
lea
jl
mov
adc
xor
jmp
repnz
imul
add
outsb
mov
mov
in
in
push
jno
inc
dec
sub
cltd
mov
stc
mov
dec
repz
sbb
add
lock
adc
inc
icebp
push
cmpsb
ja,pn
add
xor
stos
inc
mov
push
rclb
sarb
jecxz
stos
push
dec
add
sbb
sahf
pop
xor
push
lds
sub
in
inc
dec
push
push
lds
push
movsb
dec
fistl
sbb
ret
jno
mov
mov
pop
adc
dec
mov
fcoml
sub
xor
mov
jmp
or
pop
jno
xchg
add
pop
push
jl
jle
das
fstps
jg
sub
sbb
mov
testl
jecxz
jno
sbb
and
ss
loopne
mov
fld
or
cwtl
sbb
fistpll
ret
jnp
mov
inc
loopne
push
mov
lds
add
data16
loop
sbb
jne
daa
or
ficomps
mov
jp
inc
mov
flds
stc
adc
les
push
push
call
popa
aad
out
icebp
stos
aad
jne
dec
ja
out
dec
test
mov
push
pop
fisubl
cmp
nop
js
fisttpll
dec
adcl
fcmovnb
pop
adc
inc
lock
out
push
daa
push
cmp
pop
xchg
fstpl
inc
sbb
call
sbb
push
mov
hlt
pop
mov
sti
and
lret
sub
mov
sub
fcmove
xor
clc
adc
cmpsb
add
cmpsb
shlb
lret
jno
pop
lods
dec
and
ficomps
stos
fidivs
or
xchg
call
push
cmc
mov
ljmp
rclb
push
addr16
jns
sub
lods
jl
sub
inc
movsb
stos
adc
mov
mov
jne
aad
shrl
loop
lods
cmpsl
into
jno
cmp
dec
repz
lahf
push
das
push
stos
fldl
ja
sahf
fmull
in
sbb
outsl
and
dec
xor
loopne
je
add
xchg
mov
xor
push
mov
sub
call
loopne
pop
push
pop
xchg
xchg
daa
ljmp
aad
inc
fwait
pop
cli
add
pop
or
xor
xlat
lods
aaa
orb
enter
ss
gs
sbb
jle
test
jo
cmp
mov
cmc
pop
js
sub
and
mov
enter
push
dec
scas
and
sub
cli
dec
jb
stos
fisubrs
test
fmull
outsl
cmp
call
dec
aam
jno
negl
vpsrlq
cmp
ds
pop
add
inc
out
sub
popa
sahf
scas
sub
iret
and
pusha
jno
mov
push
movsb
jg
aaa
lock
leave
nop
pop
fldt
push
insb
lret
js
push
xor
mov
jne
mov
daa
lret
push
movsl
jns
leave
out
ljmp
pusha
insb
jb
pop
xchg
push
movsl
fsts
xchg
xchg
test
lock
mov
fadds
add
xchg
test
fcomi
xchg
cmp
or
mov
push
movsl
jo
xchg
stos
mov
in
mov
xor
or
call
adc
cltd
je
clc
push
cmc
movb
jae
jmp
push
lret
iret
push
aas
mov
jp
leave
or
mov
inc
push
and
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
imul
jle
cs
xor
daa
addl
outsl
test
notl
sbb
push
inc
xchg
pusha
cmp
cwtl
insb
mov
in
sbb
push
push
or
scas
das
pusha
hlt
aas
je
jmp
enter
adc
adc
and
mov
js
inc
inc
xchg
inc
or
mov
mov
insl
in
dec
push
inc
mov
jp
jge
es
mov
inc
in
adc
je
mov
lock
movsb
in
dec
lret
sbb
stos
cmpsl
jmp
cwtl
cmovge
and
mov
push
ds
lret
pop
inc
movsl
dec
fcmovnb
popf
sub
adc
jnp
icebp
leave
xor
cmpsb
js
mov
mov
es
add
mov
add
cltd
ss
fucomip
ljmp
mov
sbb
mov
test
push
test
data16
dec
add
cmp
jbe
mov
or
jp
jp
dec
xor
sub
inc
push
sub
test
divb
jne
pop
orl
and
bound
fwait
iret
or
popf
dec
into
jnp
sub
repz
lods
sub
out
xor
or
shrb
inc
and
jl
ficompl
lret
mov
testb
inc
dec
out
mov
push
in
mov
adc
push
add
push
pop
and
push
ret
add
cmc
jmp
jns
mov
lahf
fistpll
popa
sub
inc
int3
jp
cltd
mov
inc
rorb
aad
gs
lcall
xchg
push
push
sbb
and
bound
scas
dec
movsb
push
push
fs
mov
sub
int3
lods
imul
jae
js
pop
mov
pusha
cmpsl
xor
mov
xorl
sbb
jne
in
add
outsl
cmp
sbb
shlb
js
sti
shl
repnz
dec
mov
or
jmp
mov
aas
add
filds
xchg
mov
xor
push
imul
add
push
fwait
cli
pushf
jns
and
ss
fcomp
jbe
loope
cmp
push
jns
fdivrs
lds
mov
pop
in
mov
mov
loope
sbb
cltd
jno
adc
push
push
cmp
aas
or
scas
pop
jp
adc
cmp
pop
fisubs
inc
or
lret
pop
push
outsb
into
les
dec
nop
inc
sub
xchg
dec
jge
jge
mov
mov
cwtl
mov
hlt
lods
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
push
dec
pop
repz
mov
mov
cmc
xchg
dec
data16
addl
lcall
clc
xchg
push
push
cwtl
pop
xchg
jle
cmp
xor
pop
shrl
out
mov
mov
adc
cmp
push
xchg
inc
ret
stc
adcb
fcmovu
adc
ss
andl
add
or
jle
rol
rcrb
repnz
push
mov
outsb
sbb
aaa
clc
cmpsb
dec
adc
jnp
aas
dec
and
xlat
in
push
cmc
out
test
mov
sub
int3
or
aaa
in
pusha
out
jns
gs
xchg
sub
cmpb
xorl
mov
in
mov
push
ret
pop
cmp
sub
xchg
push
fsqrt
ficoml
push
rorl
sub
ret
stos
lret
xor
aad
loop
cli
mov
push
stos
jno
cmp
push
sub
push
divl
test
or
and
jno
daa
xor
test
in
fcmovb
cmp
inc
inc
inc
push
mov
jns
dec
inc
pushl
stc
mov
inc
ja
xchg
xor
jb
xchg
bound
stc
cmp
and
gs
pop
inc
loopne
clc
jp
xlat
cmp
inc
mov
mov
scas
cmp
dec
xchg
ljmp
xchg
dec
ljmp
push
jne
jge
mov
pop
stos
test
jb
shl
mov
mov
xchg
xchg
mov
mov
nop
popa
out
sub
mov
jge
add
jbe
jp
repnz
scas
andl
xchg
ss
ret
fcom
shrb
jmp
cmp
out
aam
push
sarb
xchg
cmp
int
xor
call
push
mov
mov
movb
push
xchg
and
jl
sub
xchg
pop
insb
pop
pop
mov
jl
lock
dec
xor
subb
mov
push
fists
or
les
bswap
rcrl
mov
mov
push
scas
into
adc
push
rol
adc
rcll
mov
rcl
in
nop
mov
jo
jo
js
add
add
popf
add
out
out
shlb
sbb
pop
call
pop
mov
sahf
repnz
aaa
mov
mov
leave
add
add
xor
push
xchg
pop
sbb
pop
mov
jl
jle
mov
ss
sub
push
mov
xor
sbb
sbb
adc
hlt
arpl
enter
jnp
mov
mov
and
mov
test
inc
lret
cwtl
cli
pop
das
dec
test
pop
pop
daa
clc
notl
mov
adc
dec
cmc
cltd
sub
out
movl
js
andl
cmp
fcomip
aas
and
pop
popf
pop
cld
xchg
jns
shlb
push
push
jge
fwait
mov
js
es
sub
sub
jp
stos
add
icebp
pop
push
pop
inc
aad
ret
fsts
ds
sub
insb
fisubrl
pop
pop
data16
stos
loopne
test
add
adc
mov
repz
rcrb
sub
mov
jno
mov
xchg
or
push
test
aaa
das
andl
out
mov
pop
mov
or
jmp
and
dec
lret
dec
sbb
mov
xor
adc
leave
inc
cmp
mov
mov
cltd
sub
xchg
loop
insb
out
or
add
jecxz
dec
xor
and
sub
lock
sbb
mov
adc
push
push
repz
notl
mov
cmp
hlt
xchg
shrb
rclb
cmp
xor
rcll
pop
insl
mov
xor
xchg
hlt
out
bound
ljmp
ja
mov
and
xchg
push
loop
jle
and
stos
loope
dec
mov
popf
loopne
add
adc
dec
push
jo
pop
andl
or
repnz
push
dec
xchg
xchg
int3
ret
dec
xchg
add
xchg
fsts
and
pop
jo
fimull
test
mov
pop
std
and
aam
pop
sub
ja
fucomip
lahf
aaa
and
add
test
sub
jns
push
adc
jo
pop
int3
adc
scas
sbb
fistl
mov
mov
dec
push
std
add
loop
out
inc
leave
mov
loop
cmp
sub
sarb
mov
test
incb
scas
mov
add
sahf
aas
inc
cmpsb
and
mov
outsl
arpl
xor
out
lods
sbb
push
pop
xchg
sub
pusha
mov
std
popf
mov
cmc
repz
mov
add
in
cmp
icebp
sbb
cmpsl
jle
lods
fsubrp
xchg
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
mov
mov
jle
pop
and
popa
loop
mov
cmpsl
sbb
aas
sub
adc
sbb
out
lcall
lock
inc
and
pop
imull
mov
ds
daa
push
xchg
mov
sub
cmp
mov
movsl
sub
test
dec
jge
lret
in
iret
pop
imul
aam
xor
jp
das
cmp
outsl
loopne
lock
jg
and
lock
test
xchg
sbb
sbb
xchg
stc
test
xchg
cmp
iret
jb
mov
and
adc
test
int
cmp
fucomip
and
sarl
in
pop
shrl
dec
rcrl
fwait
insb
in
mov
in
popf
jp
and
mov
mov
push
icebp
sub
xchg
xchg
inc
mov
decl
repnz
mov
push
push
leave
je
or
in
mov
xor
shrl
frstor
mov
and
das
ja
xchg
xor
or
pop
addr16
dec
sub
arpl
icebp
add
in
and
aad
aam
sbb
lock
pop
leave
iret
gs
mov
adc
scas
adc
xchg
jl
les
in
mov
pop
mov
lret
arpl
sbb
mov
or
mov
shrl
sub
add
sbbl
xor
adc
cmp
inc
jecxz
filds
movsb
push
push
xor
cmp
cmc
cwtl
pop
xchg
push
xor
fisubs
data16
adc
jnp
popf
sub
sbb
les
lret
push
xor
pop
cmp
mov
push
hlt
push
inc
push
sbb
es
fistpl
cwtl
clc
enter
dec
into
in
sbb
sbb
mov
sbb
or
mov
stc
in
fs
inc
outsl
xor
jecxz
popf
gs
mov
in
xchg
imul
cld
mov
fstp
pop
mov
repz
lods
les
mov
inc
stos
xor
test
jne
movsl
xchg
cli
xchg
and
hlt
outsb
dec
inc
imul
dec
dec
cmp
stos
mov
test
lea
mov
ss
out
mov
mov
inc
lods
fistpl
mov
shlb
mov
lods
sbb
push
enter
clc
sbb
pop
outsb
or
cltd
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
das
repz
jle
jl
jle
or
push
fucom
mov
fiaddl
xor
push
scas
push
testb
mov
xlat
in
pop
cmp
mov
add
adc
and
jbe
out
xor
arpl
adc
clc
xlat
xor
inc
daa
idivb
or
insb
jne
cwtl
mov
daa
xor
inc
icebp
popa
sbb
cmp
fadds
movsl
enter
popf
xor
testb
dec
scas
add
adc
fstpt
mov
inc
jnp
adc
mov
fsts
and
insb
jns
leave
jae
xchg
outsb
and
out
sbb
out
push
sbb
testb
outsl
pop
jp
sbb
outsl
cmp
ds
or
push
xor
and
js
iret
inc
adc
push
and
jmp
or
xchg
mov
xchg
cltd
mov
mov
pop
cmp
sub
adc
xchg
ret
sub
pop
enter
xchg
adc
xchg
jno
xchg
int
cmpsb
xor
xchg
push
pop
xchg
sbb
xchg
cmpl
pop
fiadds
xorb
sbb
pop
mov
scas
mov
cmp
inc
loope
scas
push
mov
inc
repz
scas
imul
fucomip
cmp
iret
cmp
or
cmp
aad
adc
iret
clc
cmp
out
lods
pop
ja
shrl
push
sub
movsl
mov
push
int3
insl
loopne
cmpsb
mov
xchg
movsb
fimull
push
jo
cmp
pop
and
fidivrs
xor
adc
call
inc
xor
mov
aam
mov
call
cmc
jle
outsb
xchg
shr
insb
xchg
stos
imul
out
outsb
jle
ja
adc
cmp
pop
pop
lea
ficompl
test
jg
jl
cmp
lea
stos
xchg
cli
cmp
ds
cli
or
push
mov
jle
mov
mov
xlat
add
mov
jb
enter
idivb
mov
out
dec
xchg
clc
sti
stc
cmpsb
icebp
into
jl
call
and
pushf
movsb
or
call
es
push
pop
sub
mov
dec
hlt
mov
lea
push
fnsave
icebp
into
inc
xchg
prefetch
std
stos
cmp
adc
loop
outsl
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
dec
and
scas
jl
jle
or
xor
nopl
iret
int3
xchg
push
jo
xchg
add
shlb
shll
rorb
int3
fcmove
sbb
test
pop
sti
stos
inc
call
movsl
popf
out
ficomps
mov
insb
lcall
jae
ret
dec
mov
pop
xchg
adc
mov
push
loop
sbb
fildll
mov
jb
rcll
shll
mov
loop
jle
mov
rolb
jo
cs
xor
mov
jo
xlat
jne
fwait
mov
jg
outsb
movsl
movsl
clc
push
push
pop
es
arpl
push
call
out
inc
divb
idivb
jg
xor
paddq
add
std
jne
mov
mov
push
dec
fwait
aas
clc
adc
xchg
mov
sub
cltd
push
mov
sbb
test
fldcw
or
fsubs
outsl
inc
and
and
push
jae
push
cmpsb
ljmp
add
pop
jae
fistl
inc
lea
sub
jns,pt
dec
jg
lcall
mov
jo
mov
pop
pop
pop
sbb
mov
enter
in
mov
repz
clc
adc
jnp
out
push
xor
lahf
cmp
pop
sub
sti
je
test
fwait
add
jno
aad
or
sbb
cmp
fisttpl
in
andl
inc
int3
call
and
in
ss
mov
cs
xor
scas
mov
jno
or
cmp
and
in
push
xchg
pop
pop
test
dec
mov
daa
out
sub
pushf
xchg
or
and
lcall
dec
movsl
cli
mov
jg
pop
pop
cmc
stos
clc
jle
dec
mov
add
daa
aas
xchg
loopne
jg
das
sti
pop
inc
subb
mov
es
or
dec
mov
cmc
in
hlt
outsl
dec
aas
sbb
pop
jns
lods
or
mov
fbld
fsubl
xor
xor
rcrl
push
sbb
enter
jp
insb
sbb
arpl
sub
sub
inc
int
int
ds
xchg
lds
std
inc
sbb
daa
push
mov
xchg
pop
out
test
xchg
imul
dec
push
enter
std
into
xor
mov
jp
pop
mov
pop
sarl
pop
lds
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
mov
outsb
xor
jg
jle
ja
stos
jno
jl
dec
mov
dec
out
sub
mov
aaa
or
arpl
mov
testb
xchg
shrl
xor
mov
fidivrs
mov
outsl
adc
dec
inc
pop
or
inc
pop
scas
es
sbb
adc
dec
loope
cmp
addr16
jbe
xlat
jp
pop
and
repz
xor
mov
lahf
push
lahf
mov
stos
mov
xchg
xor
lret
and
rorl
adc
fwait
push
add
int3
lret
lret
cltd
shll
loop
mov
push
cwtl
std
into
pop
inc
push
out
iret
movsl
mov
sub
aad
xchg
lods
sub
dec
mov
mov
cmpsb
push
stos
into
scas
orl
inc
out
mov
inc
jnp
cmpb
add
nop
sbb
sbb
es
mov
sub
hlt
cmp
int
imulb
and
shl
mov
cmpsl
cmp
xor
cwtl
cmp
sbb
fsubl
mov
mov
xchg
sbb
sub
xchg
pop
stos
icebp
loope
xchg
jle
pop
jno
mov
mov
fs
stc
xor
arpl
test
jne
sahf
rclb
mov
inc
mov
and
jns
push
mov
pop
pop
stos
daa
jl
or
add
mov
jge
je
xchg
sub
lds
hlt
pushf
pop
aam
iret
push
daa
sbb
leave
das
mov
xchg
dec
pop
dec
sbb
in
mov
jae
mov
je
movsb
mov
stos
pop
push
arpl
mov
inc
add
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
repnz
sub
jle
movsb
jg
jle
imul
cltd
movsb
enter
xchg
es
dec
pop
movsl
lahf
xor
lods
jae
sbb
mov
mov
pop
pop
push
mov
jge
jb
cmp
or
mov
pop
pushaw
inc
xor
inc
or
adc
jae
xchg
subb
ljmp
ret
jne
pop
daa
movsl
shl
jno
add
or
incl
adc
or
xchg
sbb
sub
jns
pop
inc
test
mov
inc
in
repz
xchg
out
cmp
rcll
insl
rol
mov
jns
je
jbe
vcvtdq2ps
mov
imul
pop
mov
fwait
xor
fistl
repnz
xor
aas
pop
stos
lcall
mov
mov
push
dec
ret
pusha
cmp
lcall
out
pop
shr
sub
stos
stos
popf
sub
adc
sbb
leave
popf
mov
mov
lahf
rorl
pushl
mov
push
dec
jae
call
xchg
fwait
sub
and
jp
pop
push
icebp
mov
push
icebp
inc
jecxz
movsl
adc
add
rorb
out
sub
sub
push
clc
daa
scas
addb
cmp
popf
popa
loop
fbstp
mov
add
inc
sub
ljmp
stc
sarb
mov
lods
cmp
mov
loopne
jno
std
lcall
nop
and
sub
pop
outsb
cwtl
cmp
les
sub
scas
je
mov
xor
repz
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
shrb
add
add
pop
cmp
loopne
push
add
xchg
mov
repnz
jge
fdivrl
fsts
or
mov
jle
xlat
mov
mov
popa
cmpsb
cmp
std
test
cltd
cmpb
push
sbb
test
jo
or
cmp
call
jne
sub
dec
enter
jle
mov
leave
push
dec
in
xor
or
adc
xchg
movsl
jmp
ljmp
add
xchg
cmpsb
enter
stos
lea
sbb
and
and
xor
xchg
xchg
scas
xchg
aaa
sub
xor
and
ret
dec
xor
cmc
daa
ds
lcall
stc
fnstcw
pop
cmp
jmp
xchg
pavgb
mov
sbb
sbb
xlat
sbb
inc
pushl
in
push
add
mov
pop
adc
cwtl
adc
roll
adc
ljmp
sub
add
pop
ficoml
in
jle
lcall
daa
loopne
add
add
add
mov
insb
in
cmp
int
mov
sarb
sub
cmp
fistps
jno
jb
in
sub
dec
pop
jno
call
dec
enter
lcall
dec
fldcw
out
es
stos
into
xchg
jge
adc
xchg
mulb
jmp
cld
sbb
cwtl
mov
sbb
cmp
stos
leave
push
lahf
push
cwtl
in
xor
add
xor
or
lods
in
or
aad
mov
xlat
test
data16
inc
lea
inc
es
pop
adc
hlt
inc
shlb
cmp
cld
call
in
es
jge
xor
shll
pop
sbb
mov
dec
dec
jp
jno
mov
xor
or
lcall
data16
out
fiadds
add
cs
fchs
xor
imulb
mov
insl
or
cmpsb
mov
add
add
mov
push
adc
mov
add
add
pop
mov
cmp
pop
cmp
pushf
jp
push
mov
add
ss
mov
xor
dec
ss
pop
orl
inc
imul
push
fwait
cmp
xchg
xlat
lods
outsb
andl
shll
lock
mov
push
push
pop
cmp
push
scas
jo
cmpsb
adc
in
aam
loop
adc
lds
push
push
cmp
or
adc
out
std
cmp
push
mov
out
xchg
add
inc
sub
in
in
sarb
mov
cmpsb
push
mov
pop
test
cmp
mov
stos
aam
xchg
scas
jns
ror
or
enter
icebp
mov
movsb
int
or
fistl
test
add
and
xchg
stc
aaa
mov
sbb
push
dec
inc
pop
mov
rcrb
test
jmp
mov
inc
movl
lret
inc
cwtl
add
mov
roll
push
dec
test
call
add
add
hlt
xchg
or
xor
cmp
inc
sahf
or
cs
nop
add
pop
test
or
lret
roll
or
xchg
push
call
es
lcall
cmp
clc
or
shr
dec
xchg
fisttpll
mov
push
das
repnz
mov
test
xchg
or
dec
lds
pop
arpl
push
das
fsubl
scas
rorb
in
jb
lods
stos
xchg
lcall
lods
int3
fstps
pop
push
pop
test
sbb
pop
in
push
cld
or
jno
loopne
mov
mov
inc
or
mov
rorb
ss
cltd
pop
xchg
sti
scas
xchg
icebp
sbb
lret
shl
stc
not
movsl
js
sub
flds
popa
sti
das
mov
cltd
cmp
lret
shlb
aas
adc
mov
insl
int3
cli
cwtl
cmp
inc
iret
lcall
add
pop
jae
or
pop
dec
or
push
and
in
aad
add
add
xor
bound
mov
jg
jnp
lret
cltd
or
inc
mov
idiv
xor
mov
push
fsubl
mov
addr16
testl
and
ja
das
fsts
dec
popf
into
fisttpl
in
lods
xchg
pop
push
pusha
pop
cltd
mov
adc
mov
je
addr16
out
mov
pop
or
lret
data16
dec
stos
dec
jns
cmp
push
inc
repnz
data16
jne
shl
out
sub
xchg
aas
in
frstor
push
pop
mov
out
add
inc
outsl
mov
sbb
gs
or
js
jle
pushf
pop
mov
roll
xchg
test
es
inc
test
push
push
scas
data16
mov
mov
addr16
out
xor
mov
lds
lret
xchg
dec
inc
lret
sbb
adc
shll
jge
jne
jb
sahf
cwtl
mov
jg
cmc
insl
cmc
out
lcall
enter
aad
sub
add
add
ret
inc
add
aam
jo
sbb
ret
sbb
push
loop
rcl
sub
jnp
sahf
push
cli
adc
aas
push
not
mov
mov
cwtl
xchg
cli
lret
shrl
jl
lret
outsb
xchg
pop
pop
or
and
loope
lret
xchg
popa
sahf
mov
mov
cli
jl
inc
adc
cltd
push
sub
aaa
int
sbb
repnz
adc
mov
call
push
sti
pop
lahf
iret
xchg
cmp
daa
inc
fwait
clc
fucomip
adcl
sbb
mov
jg
daa
aaa
cmp
cltd
jge
rol
inc
dec
leave
dec
mov
inc
mov
dec
inc
roll
adc
aad
das
outsl
int3
outsl
xchg
inc
out
pop
pop
lcall
ret
fsubl
push
mov
stos
repnz
loop
imul
add
jmp
loopne
sub
xchg
je
push
fxch
leave
scas
pop
lds
adc
mov
jl
add
add
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
cmc
aas
hlt
inc
jae
add
or
and
xchg
dec
mov
mov
cmp
arpl
inc
jne
lret
cmp
pop
mov
js
shr
popa
fadds
movsl
sub
cld
jmp
int
jp
shlb
lds
iret
loopne
xchg
daa
insb
xchg
xor
push
aas
out
dec
not
mov
sbb
lret
testb
mov
jb
pop
push
inc
xor
shrb
insl
push
add
imul
jns
fwait
cltd
inc
cmp
xchg
lcall
icebp
adc
adc
lret
aam
push
dec
repz
xor
add
push
rcll
nop
ret
xor
xor
and
ds
movsl
jae
mov
rcl
fbstp
and
adc
xchg
xchg
pop
push
jp
stos
inc
shll
push
lods
jl
jnp
pushf
xor
or
and
scas
sti
jle
pop
push
pop
ss
add
add
add
add
addr16
int3
sbb
or
shl
dec
arpl
add
inc
xchg
jle
xor
add
fstpl
xor
addb
or
out
push
cmp
dec
ljmp
mov
jmp
add
push
push
jmp
and
and
inc
add
andb
std
hlt
sahf
pushl
dec
xor
add
pop
jae
lahf
fcomip
push
xchg
push
inc
cmp
test
add
mov
jnp
xchg
mull
inc
and
pop
nop
xchg
cmpsb
shrl
mov
scas
or
mov
fcomp
andl
or
cmpsl
mov
iret
sarb
xor
or
fiaddl
shlb
gs
add
nop
add
es
pop
test
sbb
adc
or
push
cmp
test
ljmp
sbb
dec
je
mov
dec
flds
lahf
fnstcw
ss
lahf
stc
bound
add
cld
flds
add
add
cmpsl
in
add
cwtl
repz
sbb
aas
mov
aaa
hlt
pop
push
push
js
pushf
and
repz
jns
xchg
push
movlps
enter
adc
pop
xor
xchg
xor
push
add
rclb
or
jae
iret
rorb
xchg
jo
and
movsl
mov
sub
test
call
xchg
fnstenv
sub
daa
push
jle
test
cmp
insl
cmpsl
lds
adc
roll
sub
xchg
nop
lds
jecxz
outsl
inc
push
jnp
idivb
nop
ret
jp
push
mov
cmp
pusha
sti
xor
imul
sbb
mov
push
jb
push
fs
mov
sahf
bound
cmpsb
dec
xor
push
mov
aam
add
jno
int
test
pop
jo
pop
fwait
mov
sbb
ljmp
test
inc
xor
fiaddl
add
add
push
jl
jle
insb
out
cs
sub
das
add
add
add
add
movsb
pop
test
push
cmp
or
cmp
mov
xor
mov
pop
lahf
mov
in
xor
fwait
and
lods
and
and
xchg
sbb
iret
dec
xchg
enter
mov
push
sub
mov
stos
inc
cld
aaa
stos
dec
nop
or
cmp
dec
dec
mov
push
push
mov
pop
inc
cld
mov
and
add
and
sbb
mov
cmp
fld
or
ret
cmp
repnz
sbb
dec
repnz
addr16
cmp
xor
push
sub
jbe
scas
xchg
sbb
fsubrp
mov
adc
rcrb
add
aas
out
cmp
scas
and
push
sub
xchg
lahf
cmpsb
js
hlt
push
out
mov
cmc
stos
dec
cmc
lock
adc
push
adc
fisubrl
adc
mov
adc
in
xor
adc
add
add
add
add
mov
mov
add
stos
scas
inc
out
icebp
sub
push
add
dec
ja
data16
dec
out
add
cwtl
out
add
out
je
xor
call
pop
sub
sbb
jnp
arpl
mov
inc
jg
lea
inc
data16
cmp
shl
out
sbb
inc
iret
push
sahf
mov
test
xchg
popa
pop
inc
jnp
and
nop
xchg
sub
sbb
aaa
mov
and
mov
scas
jbe
dec
cli
push
push
faddl
lret
shl
push
pop
mov
aad
and
popa
rcll
sahf
push
sbb
cmp
dec
xor
xchg
int
out
loopne
push
ret
aad
sbb
pop
movsb
scas
adc
mov
mov
adc
in
or
or
xor
mov
mov
rclb
mov
push
idiv
jae
mov
adc
add
aaa
data16
jne
mov
lcall
add
add
add
gs
fnsave
es
stos
and
and
mov
pop
jl
dec
push
fnsave
test
rcll
les
inc
leave
mov
sar
xor
sahf
lea
icebp
push
and
out
push
or
or
mov
jno
scas
loopne
cld
cmpsl
or
sub
paddsw
in
xchg
mov
fldl
testb
mov
cmpsb
cmp
or
shll
xorl
sahf
lahf
sbb
xchg
jle
pop
mov
mov
adcb
iret
adcb
lahf
std
into
pop
inc
leave
lret
cmpsb
xor
or
cld
mov
mov
outsb
jno
scas
shll
dec
lea
mov
xor
inc
aad
test
int3
mov
rcll
movsl
in
gs
leave
popa
and
ja
xor
mov
pop
xor
pop
fldl
add
add
add
jnp
sti
xchg
lahf
mov
pop
xchg
or
add
add
add
push
scas
aam
lods
stos
sub
adc
adc
dec
pop
sti
lods
xchg
or
iret
lds
jecxz
loopne
flds
scas
pop
decl
mov
out
adc
rorb
and
hlt
sbbb
adc
jne
xorl
jnp
inc
in
inc
inc
pmaddwd
mov
fcmovne
loopne
mov
sbb
cmp
jg
pop
and
movsb
movsl
adc
in
aas
mov
inc
pop
mov
mov
dec
outsl
jp
cmpb
sub
dec
mov
imul
xchg
lret
and
sbbl
insb
push
fadds
call
push
pop
adc
fstpt
and
adc
sub
xor
lock
sub
mov
ljmp
aam
cmp
add
pop
fnstcw
mov
fucom
sub
pop
sarl
mov
loope
filds
add
add
fidivs
mov
mov
push
imul
or
push
popf
xor
mov
psrlw
jo
cmp
xchg
pop
push
adc
mov
je
jb
push
push
jg
mov
dec
dec
push
mov
jge
sub
and
or
adc
fimull
outsl
pop
stos
mov
push
arpl
add
lods
push
mov
imul
jle
mov
clc
jmp
cs
movsl
hlt
cwtl
test
lahf
sbb
je
cltd
fcmovbe
xor
inc
mov
jb
rclb
cs
add
and
cmp
adc
test
jg
fisubrl
dec
insb
sub
sbb
sub
jo
pop
dec
outsb
xor
ss
inc
loopne
jo
arpl
add
cli
or
data16
inc
lea
test
and
mov
xor
fcmovbe
push
push
insl
lock
std
repz
outsb
mov
add
add
testb
and
lret
xchg
pop
popa
mov
push
movsb
ds
mov
mov
arpl
cmp
enterw
and
inc
mov
mov
in
xor
ds
aas
push
mov
sbb
mov
imul
inc
xor
cli
jns
sub
dec
lods
xchg
leave
xor
scas
test
popa
push
mov
movsb
pushf
pop
or
sub
jae
pop
mov
and
pop
sub
shrl
sti
xor
shr
adc
and
jge
and
sbb
aas
jecxz
leave
sub
cmp
or
sub
cs
test
orl
sbbb
xchg
js
out
scas
sub
dec
inc
cmp
lcall
hlt
ljmpw
jmp
int3
cmp
add
xor
jmp
pop
and
data16
mov
add
add
lock
cmp
arpl
je
sti
test
add
add
push
mov
jl
xor
outsl
ss
push
rclb
fscale
mov
sysexit
sub
jecxz
pop
pop
jne
sbb
in
int3
mov
xchg
movsl
rcrl
insb
dec
outsb
adc
inc
je
push
je
insb
pop
movsl
je
adc
cmp
xchg
jecxz
mov
cmp
int3
dec
jno
into
dec
dec
loop
mov
pop
icebp
popf
sub
push
add
push
lock
xor
popf
imul
shlb
loop
push
test
inc
in
dec
ss
or
daa
scas
xlat
lods
xchg
jge
mull
add
mov
cmc
loope
stc
mov
cmp
jne
cmpsb
mov
in
mov
fcoml
outsl
inc
testb
add
ss
sbb
cs
xchg
outsb
icebp
or
lock
and
pop
jno
cmp
in
out
lahf
sub
dec
fwait
sbb
dec
in
jmp
insl
add
divb
jno
add
add
mov
mov
mov
push
adc
add
add
add
aad
enter
mov
jno
push
aad
enter
test
loope
ret
jb
xlat
mov
cmpsl
cwtl
fs
sub
fdivp
in
xchg
pop
int
or
fldenv
xor
jbe
popf
or
loope
cltd
fwait
inc
out
push
cmpb
jb
icebp
mov
mov
aad
jl
pop
cli
arpl
cmpsb
and
mov
add
add
mov
mov
gs
ljmp
movsb
jp
out
popa
or
imul
lods
aam
cmp
pusha
add
xor
aad
loope
push
xchg
sub
xor
inc
test
sbb
jbe
mov
pop
sbb
fidivrs
mov
xor
cmp
adc
mov
loopne
repnz
add
sbb
stc
mov
xor
lods
sahf
nop
mov
jno
outsb
mov
mov
dec
push
cmpsb
xchg
mov
and
add
xchg
in
mov
incl
shll
jecxz
add
add
xchg
or
loope
fdivrl
daa
dec
cmp
outsl
dec
sti
xchg
test
cmpsb
mul
das
push
jg
sub
icebp
pop
je
mov
movsb
pop
loope
adc
jbe
or
mov
mov
mov
inc
andl
lea
pop
insb
xor
gs
dec
push
rclb
cmp
test
mov
in
popf
push
sub
fs
mov
jle
mov
sub
outsl
push
notb
and
cs
mov
aam
mov
fsubrs
cmpsl
cmp
aas
sub
pop
mov
mov
fdivrl
cwtl
mov
mov
sub
jl
push
dec
sbb
stos
jae
jmp
and
push
scas
mov
clc
jecxz
jns
daa
int
ljmp
pusha
les
pushl
dec
shlb
push
inc
pop
mov
loope
pushl
mov
jo
sub
xchg
inc
mov
in
negl
sub
movsb
push
xor
add
add
out
aaa
mov
xor
stos
orl
test
push
in
inc
out
or
cmc
sub
aaa
cli
es
clc
ror
jle
sahf
dec
dec
in
sbb
scas
cmp
push
aad
jmp
and
sub
imull
or
pop
fwait
sub
lahf
pop
inc
xchg
into
call
cwtl
je
scas
call
inc
lea
pop
jb
neg
xchg
sahf
mov
xor
xor
sbb
sub
mov
jmp
inc
enter
lods
mov
jno
scas
dec
add
mov
sbb
in
rorl
inc
stc
shl
xchg
or
les
push
push
push
xchg
pop
and
out
scas
add
mov
push
xor
dec
sub
mov
movsl
in
xchg
pop
lret
cmp
dec
das
scas
push
fidivrl
mov
mov
jno
in
jl
lcall
mov
mov
sub
iret
mov
push
loope
and
aam
add
xor
fistpll
stc
dec
push
fmul
lea
int
in
add
add
in
or
lods
clc
ja
xchg
inc
add
fwait
imul
test
adc
stc
dec
icebp
rol
icebp
shrb
mov
xor
jecxz
sbb
insl
hlt
fwait
mov
into
xchg
xchg
or
lahf
outsb
pop
in
mov
xchg
jo
pusha
jo
sbb
loop
mov
pop
adc
lahf
rcrl
flds
insb
xor
fstpl
aam
xlat
mov
xchg
stos
fs
xor
out
push
sbb
sub
movsb
or
dec
lcall
imul
test
hlt
test
lods
sbb
or
movsl
fnstcw
jne
js
xchg
dec
stos
or
cmp
or
mov
stos
movsl
xor
sbbl
ljmp
adc
ss
int
jg
into
jae
enter
jle
sarb
repz
add
cmp
mov
push
push
push
mov
cmp
add
add
cmp
adc
push
push
or
or
rclb
jmp
push
sbb
add
cmp
call
dec
adc
cmp
cli
xchg
jge
fiadds
sub
xchg
fnsave
mov
jnp
and
inc
cmp
push
stos
mov
sti
add
xor
popaw
adc
es
adc
pop
adc
adc
sbb
mov
jle
and
imul
dec
rclb
sbb
inc
pop
scas
aam
sub
push
mov
adc
cmp
dec
aaa
xor
sahf
es
jbe
push
xor
and
and
or
adc
enter
pop
rclb
outsb
shr
pushf
push
rcll
loope
mov
dec
loopne
mov
mov
sub
and
repnz
or
or
icebp
mov
out
repnz
add
pop
lcall
les
lahf
idivb
out
add
add
xchg
enter
cmp
or
mov
mov
adc
inc
push
or
dec
xchg
and
cmpsl
sbb
in
out
pop
sarl
add
lods
cmp
mov
mov
jp
inc
push
aas
orl
jnp
mov
push
xchg
pop
lret
aas
dec
fs
popa
aaa
jmp
dec
hlt
in
loop
xor
sub
sbb
pushl
enter
movsb
add
adc
mov
es
add
sub
mov
mov
sbb
push
push
inc
dec
enter
add
jle
in
pop
add
mov
fs
in
jbe
neg
out
mov
gs
je
mov
jmp
inc
dec
xor
xchg
jl
cmp
imul
divl
mov
out
into
cltd
add
stos
mov
adc
pop
mov
push
decl
mov
call
add
les
pop
mov
sbb
cld
repnz
in
lods
and
pop
adc
lds
dec
xor
or
into
cmp
push
pop
dec
pop
pushl
or
push
iret
cmpsl
mov
shr
in
or
data16
movsl
loopne
push
mov
jp
xor
ja
mov
std
jae
jge
sbb
mov
rcll
jle
stos
mov
cvtps2pi
push
jae
cmpsb
dec
dec
push
jns
pop
and
cmpsb
inc
fmuls
inc
shll
mov
jmp
leave
iret
mov
jo
jno
faddl
stc
pop
xorb
mov
mov
pop
outsl
outsl
xchg
bound
fucomi
adc
nop
xor
inc
in
jg
mov
inc
addr16
dec
adc
cmc
fwait
sub
test
rcrl
shl
add
and
mov
movb
adcb
and
cmpsb
sub
add
jmp
in
push
sub
out
jmp
add
mov
push
sarb
out
xor
and
fistpll
xor
xor
xchg
cld
jnp
stc
inc
cmp
mov
js
and
jmp
aam
lret
leave
sub
mov
fwait
incl
pop
push
mov
mov
add
ret
bound
add
xchg
sbb
out
lods
sub
hlt
insl
sbb
aas
xchg
add
inc
inc
mov
js
psrad
cli
lret
mov
test
aad
mov
add
adc
outsl
mov
xor
daa
rcrl
daa
andb
xor
dec
movsl
aam
push
test
jl
roll
add
lret
nop
cld
mov
pop
enter
cmp
iret
sub
ds
call
inc
std
xchg
cmp
and
mov
cmpsl
cwtl
sti
cmp
cld
aaa
push
aas
and
and
mov
lcall
ljmp
pop
out
sub
jne
mov
sub
inc
push
into
mov
int
and
in
dec
inc
pop
xchg
pop
jge
inc
mov
sbb
ds
pop
leave
lods
std
scas
add
dec
out
mov
inc
mov
xchg
dec
xchg
popa
in
shll
pushl
divl
sarl
in
mov
enter
test
add
loope
pop
dec
pop
cmp
lds
push
mov
jl
int
jmp
data16
cwtl
scas
pop
add
stos
je
dec
and
fsubrl
js
cmp
repnz
add
ljmp
mov
push
adc
sar
sbb
js
roll
mov
jg
mov
mov
inc
incl
gs
jge
int3
or
pop
mov
pushf
inc
and
sbb
loop
iret
push
ret
fistpl
lret
or
dec
aad
dec
adc
xchg
mov
xor
addl
add
add
inc
ror
lock
jnp
xor
xchg
cmp
movsl
js
jmp
add
add
repnz
outsl
stc
dec
xchg
dec
mov
popf
out
leave
ret
add
in
push
mov
push
andl
insb
or
jb
lods
pop
in
int3
add
mov
movntq
out
pop
mov
push
aam
ss
imul
dec
adc
xor
std
es
dec
or
lds
push
sahf
dec
mov
push
sub
lods
and
lcall
push
mov
jp
test
xchg
sub
loop
test
and
test
cwtl
mov
fildll
movsl
movsl
data16
inc
ds
jae
fcoms
jne
loop
ljmp
push
nop
icebp
sbb
xlat
fst
orb
cmpb
push
addl
lds
pop
cmp
cld
mov
sbb
xor
inc
fstpl
sub
fstpt
and
repz
fisubs
inc
in
add
add
add
loopne
movsb
xchg
scas
pop
faddl
stos
inc
fucom
lret
mov
repnz
sbb
inc
sbb
xchg
and
rol
xor
clc
xchg
in
ja
xor
jnp
inc
jl
xor
testl
push
aas
xchg
sbb
jb
out
and
sbb
jg
outsl
aas
xchg
pop
and
mov
mov
sahf
daa
imul
cmp
shll
fwait
or
imul
imul
fisttps
aas
sub
and
gs
das
cmp
scas
aad
shrl
sbb
xchg
iret
mov
cmpsb
xor
shl
xchg
ss
jmp
xchg
or
shll
in
mov
cmp
jne
mov
xor
adc
push
sbb
ljmp
int3
or
mov
dec
push
pop
pop
mov
add
out
sbb
sbb
mov
dec
in
add
add
add
jb
rcrl
mov
sbb
arpl
mov
addr16
xlat
mov
sub
inc
pop
adc
pop
clc
push
mov
mov
lahf
lods
lahf
push
mov
xchg
jp
sub
fs
in
cmpsb
inc
jp
mov
cmp
lret
lds
mov
cmp
shll
sahf
insb
mov
stc
push
jo
aad
stos
nop
jecxz
push
pop
jge
jns
xchg
lods
ljmp
aam
jno
lds
inc
xchg
in
push
pop
xor
adc
cmc
loopne
sbb
out
in
cltd
test
xchg
mov
loop
out
test
fldt
enter
sbb
xchg
ds
loope
xchg
xor
inc
pop
inc
xor
insb
pop
cltd
fcomp
jno
ljmp
add
cmpsl
lret
mov
iret
mov
push
rcl
jo
inc
outsl
xor
leave
pop
mov
add
add
scas
push
repz
cmc
scas
sub
mov
dec
out
add
add
add
cli
addr16
repnz
fucomi
lahf
orb
push
and
xor
shlb
xchg
ret
rcrl
pmaxsw
push
mov
pop
addr16
out
daa
lock
sbb
fcmovne
pop
rolb
into
jae
stos
xlat
mov
mov
sbb
mov
xchg
in
pop
ljmp
data16
add
sub
jecxz
repz
mov
cmp
sbb
loopne
push
mov
sub
mov
or
jbe
fisttps
ret
leave
cmp
imul
imul
int3
xchg
pusha
mov
adc
orb
jecxz
xor
mov
add
xor
mov
push
ret
jg
and
enter
inc
jae
push
rclb
gs
dec
std
push
xchg
xchg
add
lods
mov
ret
inc
cmp
insl
rcll
inc
decl
pop
arpl
mov
jno,pn
lret
pusha
rorb
cmpsb
mov
lret
out
add
add
add
fwait
inc
push
jb
push
cltd
ror
imul
mov
shrb
dec
jnp
mov
mov
xlat
push
jae
nop
rol
clc
xchg
mov
shlb
sbb
jb
das
sbb
hlt
jo
dec
int3
lret
cwtl
xor
into
sbb
movsl
push
cli
push
fsubs
jo
jp
aad
fldt
mov
cltd
js
dec
leave
mov
adc
xchg
adc
or
xor
mull
das
push
popf
mov
test
cli
mov
fwait
jno
cld
mov
addb
and
fadds
inc
sbb
cli
sub
nop
pop
test
push
popf
ljmp
or
jmp
cmp
sub
fadd
xor
pop
mov
outsl
scas
cmp
lock
dec
add
stc
or
jns
add
test
call
jo
push
sub
cwtl
inc
into
jg
popa
lahf
add
rcr
sub
das
xchg
jecxz
push
testl
push
add
add
add
jp
or
lret
ja
cmp
les
cli
jb
xchg
cmp
sbb
outsl
push
lods
push
stos
dec
shl
sub
jnp
dec
pusha
test
mov
into
mov
out
lcall
xchg
and
in
or
lret
cmp
cli
jp
cwtl
ficoms
jmp
fcomps
das
sar
inc
mov
adc
int
pusha
xchg
daa
jae
and
imul
out
cmpb
aad
daa
pop
mov
xor
lock
ja
jmp
inc
pop
adc
leave
clc
sbb
cmc
mov
push
out
cmp
jmp
divl
call
lods
into
pop
mov
shll
inc
rorb
cld
push
xchg
jb
bnd
cwtl
out
outsl
jecxz
bound
negl
fldt
pop
mov
jecxz
jnp
rcll
adc
lock
add
and
daa
lahf
mov
pop
das
addb
add
add
outsl
xchg
insl
add
out
sub
movsb
pop
push
cmc
xchg
pop
popa
lods
jp
xor
lds
mov
or
and
stc
movnti
stos
lods
push
sub
jb
cmpsb
jae
sub
inc
dec
adc
enter
enter
aaa
xchg
lcall
add
sbb
enter
pop
add
out
pusha
xchg
mov
mov
jnp
fildl
rol
add
inc
jp
out
test
fs
ret
mov
fldt
jmp
fmul
cwtl
std
add
xlat
mov
std
jae
movsl
mov
pop
xchg
fwait
dec
mov
in
mov
inc
into
pop
jns
sub
mov
lea
mov
add
clc
jno,pt
push
and
jge
jb
and
jmp
inc
scas
and
inc
dec
or
aas
mov
lock
jnp
add
add
fucomi
xor
in
pop
repnz
add
add
mov
mov
push
std
and
lods
mov
xor
sub
fdivrl
sbb
mov
pop
adc
je
cmp
push
jle
lods
or
push
cmp
xchg
jnp
pop
fwait
imul
aam
xor
push
jecxz
notl
les
mov
repnz
add
and
push
std
repz
movsb
cmp
push
xchg
pop
rorl
imul
cmp
das
add
sti
sbb
scas
mov
adc
jg
jl
xchg
outsl
pop
jno
pop
in
stos
mov
stc
dec
out
and
mov
xchg
jb
jecxz
fnstsw
pop
mov
sbb
decb
mov
dec
sti
cmp
xchg
mov
mov
xor
lret
repnz
mov
rcl
cli
daa
push
loope
cli
jg
inc
inc
jnp
mov
mov
pusha
jge
cmpsb
lods
pop
xchg
mov
mov
xchg
dec
ret
pop
scas
xchg
mov
jbe
push
inc
pop
jns
aas
loopne
sub
xchg
repz
add
add
sahf
pop
jmp
shll
std
or
xchg
and
push
mov
lcall
fwait
mov
jbe
add
mov
insl
sub
hlt
xchg
popa
mov
add
push
cmp
jle
inc
jge
and
icebp
fdivl
push
aam
push
lahf
in
push
xlat
pop
dec
fwait
inc
sti
sub
and
xchg
push
lea
stc
pusha
or
scas
inc
outsl
call
and
fildll
popf
jl
subl
jmp
lds
push
xchg
cs
xlat
sub
jae
dec
mov
pop
je
jle
push
inc
orl
rorb
fldt
lea
dec
test
mov
mov
fisubrl
ret
push
mov
dec
mov
and
lods
mov
sbb
and
test
popf
lods
ljmp
pop
dec
xlat
jae
repnz
and
and
xor
cmpsb
sbb
jnp
mov
call
hlt
add
add
add
cmp
sbb
fisubs
test
jge
mov
cmp
sahf
xor
dec
jecxz
aad
mov
popf
sbb
ret
push
add
sub
rcrl
cmp
call
rorl
mov
pushf
sub
test
xchg
mov
push
pushf
push
pop
xlat
mov
dec
sbb
dec
loope
mov
repnz
inc
sub
rcrb
std
mov
mov
adc
aad
cld
mov
faddp
sbb
push
nop
xor
and
pop
push
push
fnsave
inc
lret
sbb
pop
inc
mov
jle
or
andb
xor
popf
push
imul
adc
movsl
fldcw
or
xchg
xlat
outsl
cmpsb
mulb
loopne
out
pop
xchg
jge
rorl
iret
hlt
les
insb
mov
lret
sbb
add
add
xlat
pop
xlat
jg
mov
mov
cmc
add
add
add
cmp
sbb
xor
stc
fwait
out
sbb
leave
outsl
shlb
lds
ss
movb
lret
mov
jmp
jae
lock
add
fdivs
call
mov
cltd
push
jno
xlat
sahf
mov
inc
sub
push
sti
pop
mov
push
mov
out
jecxz
mov
or
mov
cmp
sbb
xor
jns
lahf
lods
inc
add
sbb
pop
mov
dec
inc
jns
dec
jg
sub
mov
xchg
and
add
add
repnz
sbb
pop
and
xchg
or
lahf
dec
andb
jl
add
or
test
sahf
test
xchg
scas
sbb
lret
hlt
into
lds
inc
xor
cmp
push
aad
sbb
mov
jns
je
xchg
aas
and
iret
shrb
divb
dec
fildl
int
mov
add
xchg
mov
idivl
sbb
dec
mov
add
add
lahf
inc
pop
cltd
dec
mov
pusha
xchg
stc
jbe
sahf
cwtl
inc
mov
into
call
js
mov
sbb
mov
push
test
adc
pop
mov
jp
mov
lds
lret
fwait
mov
push
cmp
dec
lods
test
dec
or
jg
movhlps
in
lock
adc
push
fisttpl
inc
enter
cmpsl
jmp
sahf
sub
leave
sbb
inc
repz
fs
out
fnstenv
push
ja
arpl
loope
sahf
mov
mov
sti
stos
subl
and
fdivrs
arpl
scas
ja
or
mov
fnstenv
pop
out
lods
sbb
jb
cmp
sub
adc
cs
pop
cmp
sub
int3
pop
shlb
mov
jmp
inc
add
adc
and
jnp
push
adc
test
mov
mov
divb
add
add
add
mov
test
xor
sub
push
sti
push
in
xchg
xchg
aas
clc
es
cld
dec
add
add
jbe
add
or
mov
cs
inc
cmp
pusha
adc
lds
pop
adc
fadd
add
gs
rclb
cmp
xchg
ds
call
sub
add
inc
sub
dec
push
inc
sbb
call
mov
imul
lock
aaa
das
jmp
and
insb
test
enter
ret
jmp
push
cmpsw
sub
les
adc
dec
push
pop
pushf
jne
pop
fdiv
adc
adc
pop
into
fcompp
and
xchg
fstps
repz
sub
pushf
mov
sub
std
sbb
jmp
adc
sub
test
mov
xchg
mov
lret
add
lods
adc
mov
jmp
imul
lahf
repnz
jb
nop
or
add
add
mov
daa
push
orl
repz
cmp
pop
clc
or
sbb
movsb
jle
fmull
js
lods
sub
pop
push
cmp
sbb
fcoml
fdivs
mov
cmp
cwtl
mov
jnp
stos
incb
loop
or
xor
pop
push
xchg
aam
jo
mov
test
jmp
ds
push
jl
and
xchg
pushf
imul
outsl
call
adc
mov
daa
nop
xchg
call
lock
je
adc
scas
data16
movb
cltd
add
ljmp
jae
in
adc
add
aas
pop
xlat
add
test
mov
in
js
cmc
sbb
jmp
test
inc
xchg
inc
fstps
xchg
es
and
loope
pop
cmp
ret
push
lcall
push
jae
dec
jbe
cmp
cli
jne
sbb
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
inc
mov
add
add
add
into
xchg
out
emms
sbb
push
adc
or
jne
cmp
aam
push
in
les
push
pop
lret
add
xchg
inc
out
out
jp
dec
pop
in
ja
add
lcall
out
cmpsb
inc
mov
daa
ljmp
add
filds
pop
and
push
pop
fadd
dec
sahf
sub
lret
xchg
outsb
pop
cmpsb
js
jns
call
sub
aam
cli
sub
imul
int3
arpl
scas
sbb
jp
sbb
fwait
push
andb
mov
or
sub
frstor
push
loopne
xchg
xlat
adc
and
in
sub
test
mov
pop
clc
xor
or
cmp
push
sub
sub
int3
sub
hlt
aad
sub
mov
push
pop
mov
mov
cmc
in
addr16
pop
mov
mov
mov
inc
mov
imul
iret
in
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
outsb
inc
push
pop
cmpsl
xor
outsb
inc
mov
mov
loop
adc
add
xor
dec
ret
popa
pop
sub
outsb
or
or
push
jl
lahf
mov
or
mov
xchg
push
cmp
push
dec
aas
scas
fucomip
mov
daa
popf
lods
out
jbe
into
xor
in
jmp
mov
inc
scas
negb
adc
loopne
in
dec
xchg
sbb
mov
repnz
bound
pusha
adc
outsl
ja
in
sbb
xor
lcall
jecxz
outsb
aas
or
sub
cmp
jmp
aad
mov
psrad
je
xchg
mov
or
lcall
and
lods
stos
je
cmp
fwait
pop
jg
cmc
enter
stos
rol
xor
mov
dec
jbe
and
xor
subb
into
add
cmp
xor
mov
lcall
fadd
inc
mov
nop
test
aam
int
aaa
das
aam
mov
cmp
add
add
jl
xor
sbb
call
mov
outsb
test
inc
gs
imul
jno
fs
and
call
or
inc
mov
sub
in
out
mov
scas
sbb
xchg
sbb
sbb
and
pop
jb
lea
sub
daa
movsl
mov
push
cmp
mov
mov
rcrb
or
inc
sub
mov
mov
sti
iret
hlt
into
not
pushl
stos
xchg
test
xchg
mov
roll
inc
nop
jle
icebp
lret
dec
fstpt
filds
adc
call
aam
in
add
and
ljmp
lods
mov
push
cld
jb
lods
or
mov
mov
je
xor
push
je
mov
push
xor
push
cmp
fsubl
mov
bnd
xlat
lods
out
xor
pop
arpl
addr16
sub
movsl
test
add
add
add
xor
pushf
out
popa
and
mov
dec
mov
jp
xlat
ja
mov
cmpsl
imul
arpl
xchg
xchg
push
xchg
pushf
push
movsb
mov
pop
outsb
cld
and
jg
loope
jae
inc
adc
sub
xchg
scas
mov
scas
je
lcall
sbb
mov
in
push
in
jns
hlt
mov
fs
xor
xlat
push
test
je
test
aam
xchg
and
mov
xchg
cmp
adc
inc
pop
lret
mov
clc
lahf
div
xor
jmp
pop
dec
ja
sbb
sub
mov
push
das
jno
shrb
je
shll
sbb
loope
mov
outsb
push
outsb
cmp
push
xchg
xchg
outsb
ljmp
add
and
push
push
aas
nop
push
cli
dec
loope
push
cmp
inc
push
sbb
leave
outsl
into
push
mov
dec
and
pop
sahf
jne
adc
hlt
out
cmp
cmp
pushl
xchg
xor
fldl
mov
mov
add
add
add
cmc
aam
lods
sub
out
pop
xchg
nop
cmc
cmp
push
sbbl
sub
cmp
cmpsl
sbbb
stos
cmpb
movsl
mov
enter
sbb
add
mov
enter
dec
and
rol
ret
dec
in
pop
call
mov
fistpll
test
in
mov
pop
pop
xchg
dec
ret
adc
xor
outsl
push
pop
push
jbe
popf
aaa
fiaddl
test
jb
cmp
mov
call
mov
pop
test
cmp
mov
adc
orb
xchg
sub
dec
clc
xor
je
or
outsl
test
js
dec
sub
fucomip
mov
sti
subb
pop
push
inc
leave
aaa
in
rcll
divl
sub
add
add
repz
add
gs
mov
inc
sub
ret
daa
pop
adc
xlat
xor
xor
fsts
sbbl
jae
add
add
push
scas
mov
push
xor
add
add
sbb
xchg
push
scas
fwait
into
mov
sbb
loope
mov
ja
hlt
push
ret
or
inc
xchg
mov
shrb
mov
push
bound
loope
sbb
sti
adc
les
pop
sarl
add
popa
push
or
dec
clc
outsl
and
icebp
adc
leave
mov
cmp
mov
jmp
out
lret
out
xor
loope
frstor
push
pop
adcb
add
dec
sub
scas
lahf
shrl
lahf
mov
pop
and
cmp
repz
mov
ret
bound
lret
mov
cmp
insb
testb
jl
ret
mov
cmp
jge
mov
sbb
xor
cmpl
xor
push
test
ret
divl
ds
data16
movsb
adc
adc
and
jg
inc
xor
fwait
aaa
xchg
and
movsl
mov
mov
mov
fdivrs
nop
incl
add
add
cmp
add
test
loopne
xor
ficoml
loop
pop
in
mov
xor
push
xchg
cmp
cld
enter
stos
mov
cwtl
inc
lds
cwtl
pop
mov
mov
push
sbb
jno
or
stos
mov
pop
jns
shll
add
and
push
mov
test
loopne
imul
xchg
jp
je
dec
shlb
gs
or
fnsave
adc
mov
fisubl
mov
or
push
pop
xchg
loopne
in
in
scas
pop
ja
push
and
lea
ss
add
lret
out
inc
jmp
and
inc
repnz
jno
sub
mov
push
dec
push
jne
add
mov
pusha
lods
mov
ja
or
cmp
lock
fwait
push
sahf
inc
xchg
jbe
es
jnp
call
cmc
xor
mov
loop
mov
jo
nop
xchg
jmp
fdivl
mov
shlb
xor
add
add
add
les
mov
or
or
das
testl
mov
jge
mov
push
inc
in
ja
xor
scas
rorb
jle
mov
dec
jmp
leave
adc
insb
clc
pop
or
mov
xor
fnstcw
int3
sub
add
mov
repz
fimuls
scas
or
fmuls
hlt
adc
cmp
push
sbb
bound
mov
push
pop
outsb
cmp
loop
cld
add
inc
addr16
imul
mov
pop
pop
jnp
mov
cltd
std
mov
xlat
xor
cmp
jecxz
pop
xor
cmp
mov
stos
mov
in
repz
cmpl
inc
xchg
mov
jno
pop
outsl
inc
push
arpl
ds
and
or
xchg
xchg
fisttpl
jmp
lahf
xchg
adcl
mov
out
or
xor
nop
pop
cmp
and
add
add
mov
mov
lods
imul
jg
mov
add
add
add
mov
scas
cli
movsl
xchg
jle
mov
in
faddl
or
rcll
push
add
inc
or
std
lret
adc
stc
fnstenv
sti
xor
test
adc
popa
inc
clc
movsl
inc
mov
jnp
pop
add
clc
cwtl
test
mov
cltd
in
jnp
mov
repnz
and
mov
push
insb
push
xor
testl
fwait
js
or
mov
adc
sub
and
xchg
outsb
imul
pop
leave
fwait
test
pop
pop
and
or
cld
jb
pop
dec
mov
clc
iret
push
dec
pop
xchg
mov
int
enter
xchg
xchg
arpl
out
test
cmp
popa
popa
pop
sbb
add
mov
sar
add
and
sub
popa
sbb
loope
cld
or
daa
jbe
in
sbb
cmc
xchg
sub
scas
or
cmp
xchg
add
add
add
jo
mov
jmp
cmp
inc
pop
push
nop
and
in
cmpsb
enter
movsb
xchg
sbb
xor
pop
int3
movsl
shlb
mov
xor
popa
push
or
cmpsb
mov
test
popf
fistps
jns
push
jp
ficomps
or
xchg
dec
inc
sahf
testl
iret
cmp
fcoml
jo
pushf
imul
lret
xchg
test
cmp
addr16
in
loop
mov
adc
mov
push
sahf
pop
fldl
fwait
out
fnstsw
or
jbe
dec
add
sub
adc
inc
js
and
aam
push
movsl
xchg
outsb
fldt
cmc
push
loopne
repnz
movsl
pushl
sahf
lea
mov
dec
mov
stc
jns
repz
sbb
test
dec
mov
or
jmp
add
xchg
enter
push
fbld
aas
stos
call
add
add
sub
mov
xor
pushf
bnd
cmp
call
pop
clc
imul
and
loopne
push
push
and
jge
pusha
or
xchg
pop
aas
es
sub
pusha
mov
sbb
push
adc
jle
fdivrl
push
int3
adc
adc
pop
jno
lret
mov
jnp
popf
mov
or
mov
or
lea
push
dec
jno
rorb
mov
out
rclb
lahf
clc
xlat
lods
int
mov
cmp
mov
dec
inc
mov
popa
pop
loop
rclb
hlt
xor
xlat
ss
mov
ds
inc
mov
push
push
hlt
or
adc
sbb
sbb
sub
stos
xor
and
fiaddl
sub
in
jbe
and
dec
push
pop
insl
push
lock
rcrb
cmovle
int
or
xor
mov
into
fwait
add
mov
inc
movsb
add
add
add
cmc
out
outsb
ds
and
popa
iret
sarb
es
iret
jge
jne
sti
test
pusha
mov
std
sahf
dec
push
mov
jb
pop
dec
out
jnp
xchg
cmpb
add
inc
arpl
dec
mov
cmp
mov
inc
test
and
fists
fisttps
rorb
movsb
jbe
lea
lcall
aaa
loope
mov
cli
pop
repz
inc
dec
mov
pop
orl
and
lret
arpl
mov
dec
dec
adc
idiv
fwait
stos
sbb
push
leave
adcl
frstor
sbb
xor
mov
inc
jmp
pop
pop
mov
pop
lods
lods
mov
es
xchg
dec
inc
or
mov
mov
mov
cld
into
fstpt
inc
pop
or
dec
cmp
cmpsb
mov
jl
test
out
mov
pop
sarb
in
dec
and
add
add
sub
popa
xor
push
cs
cmp
pop
lods
mov
adc
cmp
sti
sbb
xlat
mov
daa
movsl
xchg
cmpsl
loope
sbb
sbb
pop
mov
aam
out
mov
jle
sbb
movsb
jle
hlt
jl
xor
cmp
cltd
sub
cltd
mov
out
xor
sub
or
lock
pop
daa
sub
sub
shll
int
stos
jg
fdivrs
inc
or
mov
inc
xor
mov
adc
push
cmpsl
decb
out
rorb
jecxz
or
push
push
nop
test
out
sub
bswap
in
popa
pop
push
sub
inc
hlt
and
repnz
and
fmuls
cwtl
cmpsb
ret
lock
sbb
mov
adc
mov
mov
mov
pop
inc
test
jl
cmp
ret
stc
and
mov
sti
inc
out
aas
mov
shrb
into
cwtl
sahf
lods
push
add
add
add
mov
add
sahf
in
push
xor
stos
dec
sub
adc
xor
es
clc
add
cmp
fadd
sub
mov
sub
hlt
inc
inc
mov
lret
jecxz
hlt
inc
rcrl
test
ljmp
pop
test
cmp
jle
sbb
push
and
xor
or
sbbb
shlb
cmp
test
sti
sbb
sbb
jp
lds
mov
pop
sub
mov
test
push
sbb
test
movsb
jno
idivb
pop
push
enter
pop
iret
addb
shlb
sbb
shll
push
push
push
fwait
mov
or
or
pop
xor
pop
test
cwtl
lret
jo
and
cmp
out
adc
imul
mov
cmp
lret
sbb
or
test
adc
adc
add
xchg
add
bnd
dec
leave
and
out
adc
pop
add
add
add
push
out
dec
lods
xor
es
ja
data16
pop
bound
or
int
xchg
lret
pop
bswap
fdiv
jno
in
aas
pop
pop
add
call
shll
inc
aam
addr16
push
and
aad
lcall
mov
or
cmp
cmp
je
icebp
jnp
add
mov
mov
xor
sbb
aad
adc
mov
pushf
jge
out
xor
dec
jns
test
inc
sarl
and
pop
pop
lret
jnp
loope
fstpt
icebp
lret
and
inc
mov
enter
in
xor
test
push
sub
and
pop
popa
stc
push
mov
sub
sbb
or
jne
cmp
js
daa
dec
push
dec
add
fmul
add
add
in
out
ja
filds
sti
ljmp
add
add
mov
sub
lods
pop
mov
sbb
push
in
jmp
add
cwtl
in
stos
push
inc
shlb
cmc
arpl
mov
sbb
movsb
mov
adc
ret
push
stos
push
inc
in
cltd
imul
jg
push
pop
icebp
push
add
adc
sub
sbb
lret
xchg
popa
loopne
lea
adc
das
in
mov
and
repz
test
sbb
ror
pop
xchg
das
jne,pn
inc
sbb
mov
xchg
inc
adc
push
jge
stos
frstor
fdivs
push
leave
rcrl
jb
cmpsb
mov
imul
or
xchg
negb
test
adc
mov
adc
sbb
pop
jmp
sbb
and
shlb
jbe
push
stos
inc
andb
push
dec
int
mov
lret
fimuls
xchg
mov
xor
xor
shll
out
sub
add
add
pop
in
inc
push
or
and
push
mov
add
add
scas
aam
es
xor
pop
jg
lods
mov
fcmovbe
xor
or
stos
adc
xchg
jmp
scas
adc
aaa
cmp
rorl
ficoml
and
rol
mov
pop
loopne
bound
sbb
lock
test
lea
lret
jns
mov
subl
rcll
sbb
push
fstl
xchg
pop
mov
dec
jns
add
jmp
inc
repnz
add
testl
scas
or
sub
divl
mov
ss
adc
jecxz
mov
test
mov
pop
adc
lods
sbb
sbb
xor
xchg
mov
push
sbb
outsb
cmp
aam
ss
pop
mov
push
into
mov
lcall
inc
sti
jmp
out
push
and
fimuls
mov
inc
jb
sarl
add
jg
neg
pop
daa
inc
das
mov
cmp
add
add
xchg
aam
cmp
xlat
mov
test
add
hlt
pop
fnstcw
out
pushf
pop
and
xchg
jl
lea
jne
fsubrp
aad
enter
mov
and
cltd
inc
dec
hlt
pop
gs
lds
cmpsb
sarb
mov
mov
cmp
fisubrl
outsb
dec
push
dec
dec
movsb
cmpsb
xlat
aam
pop
sar
ja
jno
push
xor
js
jne
sbb
ljmp
cmp
insl
lea
add
sbb
dec
mov
fs
test
adcb
xchg
dec
xor
test
jmp
daa
nop
das
std
jg
push
pusha
loope
mov
or
test
xlat
sub
sub
xchg
mov
or
cmp
test
push
push
mov
std
mov
std
fmuls
lahf
stos
cmp
cmp
dec
jne
pusha
mov
add
cmp
sti
jg
cmp
je
out
jmp
cmpsb
rorb
add
add
cmpsb
decl
loope
cmp
ljmp
aad
mov
dec
out
jb
xor
sti
gs
aas
js
cmp
in
aas
inc
xor
or
jp
xchg
aaa
popa
int
rcll
out
fdivrl
sub
loope
pushf
repz
mov
dec
add
stos
and
repz
lods
mov
aaa
int
fisubl
lea
inc
xchg
mov
dec
std
or
pushf
mov
aad
mov
out
inc
fstps
loope
js
adc
mov
idivl
icebp
stos
mov
js
mov
cmp
ljmp
cmpsl
fsubr
mov
inc
dec
stos
ja
pop
outsl
out
adc
outsb
xchg
or
and
icebp
scas
adc
popa
shl
mov
add
test
notb
into
pushf
adc
rcr
mov
fcompl
mov
icebp
pop
js
jnp
aad
std
insl
loop
push
add
add
jnp
fstp
fcompl
dec
loopne
popa
les
add
add
push
aas
lret
jbe
dec
stc
inc
les
jp
outsl
or
inc
xchg
icebp
adc
cmpl
push
push
sbb
ret
push
jb
adcb
jp
jecxz
je
lea
movsl
in
outsl
cmp
dec
dec
repz
aam
mov
sbb
rcll
jg
pop
ds
xchg
repz
mov
push
jnp
loopne
sar
dec
addr16
addr16
inc
in
ror
dec
mov
leave
fs
jecxz
cmp
rcll
in
popa
inc
push
ljmp
mov
jp
dec
sti
out
and
adcb
bound
hlt
inc
cmp
pop
add
or
sub
out
sub
xor
pop
dec
lods
jae
cmc
mov
dec
ja
fldcw
mov
clc
sbb
jg
xor
add
or
adc
iret
subl
popf
sub
pop
fnsave
mov
jno
std
outsl
mov
add
mov
das
enter
add
add
adc
test
jmp
out
cltd
or
daa
push
jns
and
loope
fdivrs
sub
push
popf
push
sub
pop
xchg
mov
xchg
jae
xchg
xor
mov
xchg
fisubrs
inc
and
mov
or
fists
ljmp
in
sbbl
fimuls
cwtl
push
mov
inc
hlt
cmpsl
fucomi
lahf
dec
mov
sub
jb
mov
lds
adc
addb
pop
shrb
das
ret
push
push
or
aad
xor
pop
pusha
enter
test
inc
iret
addl
cmp
cmp
js
repz
pop
mov
insb
mov
outsb
push
cmpsb
add
popa
fldl
inc
shrb
pop
sub
xchg
test
xchg
call
iret
push
cwtl
sub
in
inc
inc
les
add
jne
sti
push
dec
sub
divb
add
xchg
mov
add
add
jmp
fstl
je
int3
push
add
add
add
jge
lcall
jp
sub
fstpt
into
outsl
pop
jp
dec
pop
jmp
outsb
mov
cli
and
sbb
push
gs
out
inc
addr16
mov
adc
cmpsl
mov
repnz
xchg
mov
xorl
mov
sbbl
cmpsl
adc
sbb
stos
or
jb
gs
inc
testl
jbe
fnsave
outsl
enter
cmc
mov
dec
shrb
inc
out
pop
xchg
pop
dec
pop
mov
scas
push
mov
test
pop
dec
negb
fwait
lret
test
je
jne
mov
sbb
popf
or
add
lock
inc
mov
fs
pop
xchg
mov
dec
xor
dec
mov
mov
outsl
leave
lret
out
lock
inc
fsub
sbbb
cmp
jmp
mov
dec
int
pop
sahf
add
inc
andl
add
xor
xchg
lds
rcll
out
sgdtl
add
add
fld
cmp
notb
mov
outsb
or
out
aaa
out
jp
mov
or
les
mov
scas
scas
sahf
in
lods
mov
hlt
lret
and
xor
in
ss
lret
or
xorl
repz
in
cld
xchg
call
ret
lock
imul
add
add
mov
ret
insl
in
pop
lret
ljmp
and
sbb
pop
mov
or
push
fldenv
data16
loop
lahf
adc
cmpl
sti
stos
push
sub
scas
jns
hlt
sub
out
cmp
cs
cmp
mov
cmp
pusha
mov
inc
jle
mov
mov
cli
icebp
rclb
leave
idivb
enter
popf
mov
rcl
sub
add
inc
je
fadd
mov
arpl
dec
iret
inc
lret
add
add
cli
inc
jg
int
xchg
lods
or
shr
aam
add
add
add
nop
or
pop
test
clc
xchg
mov
nop
in
imul
test
mov
loop
pop
push
mov
mov
dec
add
or
mov
or
ljmp
cmp
pop
and
andb
jae
sub
aaa
das
jns
sbb
push
data16
daa
and
js
push
lock
pextrw
mov
popa
push
jne
enter
adc
pop
andl
js
das
xlat
daa
push
and
dec
inc
and
in
push
movsb
xchg
inc
mov
jae
sarl
data16
or
push
shr
cltd
js,pn
add
shll
mov
loopne
jl
outsb
daa
outsl
pop
adcl
sbb
cmp
cmpsl
push
add
cmpps
inc
pop
cmp
rolb
sbb
mov
das
pop
lahf
enter
lds
jmp
add
lock
std
cmp
jle
fistpll
fisubrl
add
add
add
inc
mov
aad
sti
leave
jo
sub
push
xor
orl
and
xchg
lea
pop
int3
mov
mov
xchg
pop
je
popa
dec
aad
dec
mov
je
enter
jns
xchg
cmc
test
mov
leave
mov
and
pop
cmp
imul
lea
push
mov
xor
sbb
mov
or
jg
cld
lods
xchg
ret
mov
ret
sbb
insb
cmpl
dec
popf
mov
ds
repnz
ds
popa
les
loope
sub
inc
jp
add
clc
into
fbld
aaa
dec
ret
addb
cmp
pop
xchg
jno
or
xor
lds
xor
cmp
pusha
aaa
xor
ds
enter
xchg
pop
sbb
xchg
push
jne
pop
shrb
ds
pop
push
popf
xlat
inc
in
push
in
pushf
add
sbb
ds
add
iret
xlat
ficompl
inc
test
ret
test
adc
add
add
fildll
xchg
fs
pop
fwait
xor
int3
pop
xchg
mov
add
push
mov
dec
xchg
jg
add
sti
mov
add
pop
dec
cmp
mov
pop
pop
lds
sub
fistl
popf
dec
or
cltd
cmp
rcrl
mov
and
pop
pop
cltd
jp
sbbb
out
jl
cs
out
loopne
adc
add
ljmp
in
data16
or
push
fidivrl
clc
sbb
js
lret
xor
mov
push
push
mov
sbb
inc
pop
fnstsw
emms
sub
gs
inc
push
add
mov
lahf
iret
push
lock
inc
mov
lds
sub
lahf
shrb
mov
rcr
test
mov
cmpsl
sub
es
data16
pop
jo
punpckhbw
les
mov
dec
jmp
dec
scas
iret
outsb
jmp
push
test
js
loopne
add
add
add
ret
decb
mov
mov
inc
cmpb
daa
subl
dec
lret
inc
push
sub
rol
push
in
imul
movsl
loop
arpl
or
jg
xor
sub
or
test
push
xchg
dec
mov
scas
jne
shll
xor
nop
push
mov
xchg
jle
push
inc
cmp
xor
push
fidivrs
jns
or
sbb
fmulp
lock
sbb
aam
and
dec
mov
dec
out
adc
xchg
loope
cltd
cwtl
stos
sbb
push
mov
push
aaa
faddp
sbb
pop
adc
xor
pusha
and
mov
add
ds
and
loope
scas
dec
mov
xor
mov
jge
bound
push
jl
lds
rcrl
scas
hlt
and
test
insb
inc
jge
mov
push
add
pop
loop
nop
and
lock
sbb
std
sbb
stc
cld
or
cmpb
add
add
cmc
pop
lcall
sub
dec
es
jl
mov
cli
add
fwait
pop
and
jp
mov
jb
push
leave
xchg
outsl
jne
lods
add
mov
mov
xlat
xchg
add
test
jmp
ret
sbb
flds
sbb
push
fbld
sbb
sbb
add
clc
lds
push
popa
push
sahf
inc
jg
dec
sub
lahf
rclb
rorb
ret
stos
add
inc
mov
cmp
add
or
orb
imul
dec
sub
jp
or
out
add
clc
test
sbb
add
cld
pusha
inc
push
dec
add
cmp
out
popf
movsl
aad
mov
cmp
inc
dec
lret
call
data16
inc
xor
mov
cmp
sub
or
add
pop
xchg
inc
xchg
in
mov
add
add
pop
test
scas
repz
cld
adc
repz
call
add
add
cmp
popa
push
and
cmp
aam
popa
push
add
pop
aas
lret
dec
mov
pop
lea
movsl
inc
cmp
sub
sub
dec
and
pop
stc
jns
add
test
sub
sub
pusha
testl
mov
cltd
imull
jbe
fwait
imul
xchg
arpl
and
icebp
dec
xchg
jg
subb
imul
mov
rep
andl
ljmp
mov
dec
inc
cmp
add
out
faddp
out
jo
dec
mov
cwtl
call
and
pop
stos
mov
test
and
mov
icebp
push
sub
sub
push
dec
adc
mov
add
std
sub
imul
or
stos
inc
adcb
mov
mov
or
test
lods
mov
dec
pushl
xchg
repnz
add
add
aad
mov
mov
add
jl
leave
mov
cmp
xchg
xchg
arpl
cmc
fldl
mov
mov
clc
pop
sbb
aam
fcmove
sbb
mov
and
cmp
push
lret
push
mov
dec
les
movsb
int
push
or
cmp
xchg
call
xor
and
jmp
jns
frstor
clc
outsl
arpl
scas
mov
aam
jp
sub
mov
or
mov
jecxz
mov
push
out
push
scas
lds
js
sbb
es
cmc
test
fwait
push
aam
dec
pop
cs
mov
mov
jmp
fldt
scas
icebp
mov
sub
cmp
ret
and
or
push
add
fdivr
scas
lea
push
outsl
inc
inc
push
jle
in
mov
outsl
xchg
outsl
test
pop
xchg
cwtl
dec
jecxz
fcomps
pop
sub
inc
ja
pop
aas
dec
push
cli
das
lock
add
add
add
mov
push
sbb
stc
jl
int3
fdivl
and
adc
insl
insl
jmp
movsl
and
xchg
sub
inc
cmp
iret
push
pop
lahf
out
xchg
mov
cltd
jbe
and
das
jle
stos
jmp
mov
dec
in
mov
scas
push
jo
mov
lcall
cmp
out
pop
pop
xor
cli
shl
mov
push
or
xchg
jmp
aam
mov
outsl
stos
loopne
daa
pop
js
outsb
jo
popa
mov
push
xchg
int3
dec
int3
pop
fsubp
xchg
out
cli
and
mov
and
sbb
xor
cmpl
movsb
pop
ds
fnstcw
dec
jmp
fidivl
xchg
insl
jl
mov
out
xor
inc
adc
jns
inc
push
andl
add
or
adcl
jle
mov
imul
add
add
xchg
jae
ja
div
mov
arpl
lods
hlt
sbb
add
add
add
mov
ljmp
and
daa
stc
mov
dec
mov
scas
sub
cmp
mov
dec
inc
es
sbb
cmpsl
nop
mov
mov
mov
rorb
push
ror
and
sti
fucomp
push
bound
test
lret
jle
mov
sete
data16
loope
push
aam
lret
mov
add
mov
sub
fisttpl
scas
lcall
cmc
aaa
mov
sahf
out
add
dec
sbb
ja
and
xor
jle
push
pushf
sbb
mov
out
push
test
lea
lea
jmp
push
lods
jge
in
popa
inc
sub
stos
ret
lret
and
ds
or
js
cmp
xchg
mov
popf
cwtl
mov
aaa
xor
outsl
lods
mov
xorl
insl
inc
or
mov
mov
insl
fistpll
or
add
cli
std
jg
push
pushf
dec
fwait
or
add
add
xor
test
inc
stos
fisubrs
cmpsb
ficoml
xchg
loop
arpl
and
xor
pop
cmpl
in
sti
xlat
fmuls
mov
push
jecxz
jecxz
js
inc
xchg
out
out
mov
decb
xor
addb
mov
mov
sbb
mov
sub
adc
mov
popf
pop
cmp
inc
push
sbb
cmp
leave
fadds
jo
sub
or
xchg
or
repz
jno
into
das
cs
dec
mov
cmp
fsubrl
xchg
xchg
and
add
lret
ret
insb
hlt
jle
rcrb
testb
pop
mov
push
push
loop
push
jge
xchg
jno
shrl
negl
push
mov
mov
imul
les
xor
sub
add
fistpll
das
sub
rcr
mov
das
testl
incl
sbb
add
mov
sbb
add
add
pmuludq
xchg
inc
and
sub
mov
stc
adc
mov
fs
xor
mov
out
out
mov
dec
pop
xor
cvttps2pi
adc
sbb
or
add
fmuls
popa
mov
push
cmp
xor
push
push
mov
sub
cld
daa
or
pop
pop
jge
nop
xchg
pop
shll
std
sbb
negl
insl
test
in
inc
cmp
and
inc
lahf
inc
fmul
jae
stos
mov
jmp
dec
cld
xchg
je
leave
xchg
adc
fmul
notb
mov
insb
xorb
cmp
fstpt
subl
pop
outsl
in
int3
sub
adcl
clc
stos
push
push
loop
pushfw
or
icebp
lods
or
mov
cmp
sbb
mov
jae
xchg
out
xchg
jecxz
xchg
adc
mov
push
sbb
sbb
add
es
jg
pop
or
xor
xchg
add
add
add
push
push
mov
jmp
cld
std
jp
cli
mov
scas
mov
mov
or
add
or
sub
push
daa
mov
orl
add
int3
int
pop
push
popf
movsl
or
mov
push
sahf
push
jge
int3
mov
into
and
sub
ficoml
adc
mov
mov
inc
ja
adcb
push
loopne
lods
mov
iret
mov
shl
enter
shll
stos
lea
sahf
inc
cli
mov
aas
cwtl
stc
ficoms
fists
adc
adc
js
mov
test
repz
fisubs
xorb
test
lods
push
inc
test
mov
addb
push
push
add
cmp
outsl
add
and
pop
arpl
in
mov
lret
adc
repnz
cmp
sbb
add
add
or
dec
push
cmp
sbb
add
sub
xor
xchg
push
pop
push
aad
cmp
jns
jne
inc
dec
stc
jno
and
dec
xor
shr
jns
sbb
aam
push
repnz
ja
iret
test
sarl
jge
cmpsb
sbb
xchg
jb
les
ljmp
scas
addr16
shr
lods
fdivrs
pop
jmp
dec
pop
jecxz
mov
sarl
sbb
and
lret
daa
ret
jge
hlt
je
call
cmp
scas
mov
mov
out
push
dec
nop
mov
das
in
sbb
fsub
hlt
push
mov
push
cmpsb
call
sub
es
icebp
mov
andl
add
xor
insl
pop
mov
pop
push
jnp
leave
out
sub
aas
in
addr16
es
imul
pop
pop
lcall
sub
aad
mov
cwtl
rorl
add
add
stc
lods
xor
mov
mov
push
add
add
add
outsb
mov
add
scas
js
mov
xor
jmp
out
xchg
clc
arpl
pop
mov
mov
sbb
sub
and
dec
or
mov
jg
sub
ss
cwtl
ret
cmp
push
mov
imulb
insb
jmp
mov
aaa
mov
xchg
insb
push
sub
or
cmp
iret
cmc
jle
or
cltd
mov
adcb
pop
xchg
jne
adc
loop
push
mov
sub
lahf
pusha
push
loop
arpl
mul
addr16
and
xorb
xchg
ss
fstpt
add
or
lahf
in
jnp
shll
add
data16
cmp
cld
ret
cmc
or
mov
add
adc
ficompl
jno
mov
es
mov
jno
sbb
add
ficoms
stos
sbb
call
mov
or
add
add
add
out
mov
or
sarw
or
in
jle
adc
aas
enter
jns
sbb
lahf
out
lods
mov
xchg
aas
adc
in
fidivl
sbb
rcr
in
xchg
pop
add
pop
mov
sbb
sub
adc
add
pop
mov
jae
jb
cmpsb
sub
stos
push
imul
out
bound
fcompl
cmp
mov
pop
jp
dec
rclb
out
loopne
fwait
and
ret
ds
stc
cmp
mov
dec
outsl
dec
jne
xchg
cmp
pop
xor
jb
xchg
std
jl
negl
xor
sbb
leave
imul
inc
loop
xor
sbb
mov
push
xor
loopne
pop
pop
inc
add
out
cltd
sub
jg
in
jae
xor
nop
jmp
daa
dec
jl
mov
repnz
rcll
jg
ljmp
inc
xor
add
add
in
out
stos
jge
or
and
add
add
sub
cli
push
dec
outsb
push
arpl
sub
shll
add
lock
loop
repz
xchg
mov
addr16
lahf
xchg
es
loop
add
mov
jno
adc
xlat
dec
inc
test
mov
cmp
xor
pop
mov
ds
sub
or
pushf
int
push
inc
nop
lret
xchg
fwait
aad
sbb
dec
jecxz
inc
popa
loope
sbb
or
sahf
jb
in
mov
outsl
icebp
outsb
add
cs
ss
adc
xchg
and
jae
sbb
mov
sub
sbbl
sub
ss
pop
das
mov
movsb
or
cltd
shrb
imul
mov
xchg
cli
nop
fnsave
subl
inc
jle
mov
add
dec
or
out
xchg
iret
push
aas
sbb
iret
lahf
adc
add
add
add
and
aad
ss
push
fbld
incb
xchg
mov
cwtl
popf
into
ret
je
test
xlat
add
clc
and
and
jp
imul
cli
xlat
imul
push
cmpsb
adc
mov
add
fimuls
mov
test
insl
test
fiaddl
nop
cmp
fwait
and
pop
xchg
lret
push
pop
test
dec
fidivrs
je
hlt
push
sub
fsubrs
jae
pushf
jmp
out
inc
mov
add
fwait
push
or
mov
fs
arpl
pushf
mov
leave
mov
scas
imul
cmp
insb
aam
jb
inc
pop
adc
rolb
push
out
decb
imul
and
in
or
mov
std
or
mov
aad
mov
leave
add
inc
es
dec
mov
test
xchg
out
loope
adc
mov
aam
add
cmp
out
loope
jns
cmp
mov
add
add
xchg
das
push
xchg
dec
loop
fists
lock
das
sub
movsl
and
ja
cmpsb
stc
fstl
out
dec
into
hlt
shrb
ds
lea
jno
test
or
pop
jg
stc
in
jge
or
cwtl
xchg
imulb
popa
cmp
ds
push
in
jo
jnp
dec
fsubl
movsb
inc
fsubr
loop
mov
stos
repz
push
scas
aaa
jo
call
stos
mov
rorb
add
lock
in
add
aaa
cltd
loopne
mov
repz
mov
neg
dec
sbb
inc
push
push
ficoml
cmpb
les
scas
adc
jg
mov
sub
adc
dec
inc
dec
jno
stc
fdivrl
aam
push
xor
pop
fwait
adc
pop
jb
jle
sbb
xchg
jae
mov
out
mov
hlt
mov
xchg
std
popa
or
pop
scas
fnstcw
sbb
mov
pop
test
sbb
sti
push
mov
sub
and
add
add
add
cmp
test
out
mov
aam
sbb
mov
pusha
fbstp
add
sbb
inc
add
xor
cmp
mov
idiv
repnz
push
scas
stos
sub
jecxz
jmp
outsb
adc
in
pop
outsb
in
pop
push
movsb
rcrb
sbb
push
je
pusha
jmp
jnp
test
arpl
or
arpl
xor
jmp
jae
inc
jnp
mov
push
aaa
pop
mov
push
int
lods
pop
ss
or
jmp
mov
das
imul
cmp
lock
pop
mov
out
add
subb
pop
xchg
sarl
das
mov
insl
and
stc
fwait
mov
fxch
in
add
dec
repz
and
xor
sti
fs
inc
into
gs
pop
jl
mov
jmp
mov
dec
idivl
cld
ret
add
ljmp
add
add
jl
rcrl
cltd
adc
test
data16
data16
lret
iret
iret
add
pop
dec
repnz
push
push
shrl
scas
pop
mov
push
add
mov
jbe
stc
push
sub
push
into
in
mov
les
neg
lea
fwait
mov
jge
sbb
push
adc
int3
pop
enter
aaa
nop
and
sub
jl
xchg
jle
lret
and
pop
ljmp
icebp
call
jbe
ss
add
inc
dec
xor
xchg
rcr
stc
mov
inc
pop
in
je
push
pushf
js
xchg
or
mov
iret
ds
lds
sti
repz
mov
rcr
push
mov
push
imul
mov
into
sbb
pop
sbb
mov
sub
sti
or
and
or
outsb
enter
cmp
cld
xor
mov
jmp
add
ret
mov
iret
mov
dec
mov
push
and
add
add
add
lret
enter
pushf
inc
jno
mov
jae
jmp
mov
loopne
call
xor
mov
lock
stc
mov
cltd
mov
push
ss
xor
xchg
xchg
test
leave
xchg
mov
scas
pop
xor
push
inc
adc
or
gs
mov
aaa
push
pop
stos
push
js
faddl
adc
xor
sub
xchg
cmp
lret
in
xor
addr16
mov
sub
cli
ja
enter
lds
sbb
cltd
cltd
dec
fcoml
adc
dec
out
add
inc
push
sbb
inc
test
sub
inc
adc
or
sub
cmpsb
cmp
insl
jb
not
arpl
xchg
stc
inc
arpl
mov
cmp
xchg
pop
leave
aam
inc
xchg
popa
dec
jne
ret
jo
subl
xchg
push
sub
fwait
pop
push
sub
push
push
rcrl
mov
movsl
xor
js
add
add
mov
jg
arpl
lock
sub
add
add
add
xchg
lods
out
adc
test
fcoml
jae
push
sbb
dec
inc
jbe
fs
pusha
xor
popf
cmp
xor
or
jmp
pop
int3
jb
cld
add
scas
icebp
mov
decl
je
cli
sub
test
bound
imul
mov
pop
and
shlb
cmpsl
aas
std
lret
xchg
mov
cld
mov
push
xchg
xchg
sbb
push
mov
daa
or
sub
dec
lea
xor
stc
sub
mov
dec
and
cld
push
movsb
mov
aas
pop
sbb
leave
and
frstor
lds
xor
dec
push
aaa
pop
pop
push
mov
je
jle
add
adc
addr16
pusha
repnz
stos
std
xchg
mov
xor
sub
inc
dec
shrl
xor
scas
adc
stos
push
xchg
lds
shlb
cli
clc
cli
clc
sarb
sti
mov
dec
and
add
add
add
mov
ret
popf
mov
mov
iret
outsb
cld
lret
in
movsb
mov
sub
popa
mov
mov
pop
mov
jle
ljmp
jmp
adc
cmp
inc
ficompl
dec
sahf
jno
enter
jb
sub
mov
pushf
lcall
mov
inc
lods
dec
add
mov
les
sub
jb
lea
mov
dec
add
psrlq
in
push
sub
cmp
sub
mov
or
leave
pushf
ljmp
push
xor
jae
push
mov
subb
das
and
inc
and
add
out
jbe
cwtd
mov
mov
and
and
rorl
sub
push
jle
daa
insl
aas
lods
fiaddl
cmp
add
out
pop
andb
xchg
pop
add
test
inc
in
mov
scas
push
jb
mov
add
add
jnp
out
mov
pop
inc
xor
add
add
add
jmp
mov
pop
les
jb
or
hlt
mov
outsl
mov
sbb
adc
xor
lods
decl
and
cmp
in
pushf
fildll
cld
cmpsl
mov
pushf
add
inc
pop
decb
mull
scas
dec
sbb
ficomps
add
dec
aas
xchg
push
clc
xchg
insl
outsb
and
add
sub
subl
cmc
into
jae
imul
add
shll
push
cld
fnsave
or
inc
pop
jle
arpl
push
mov
or
jns
or
push
aam
mov
aad
jnp
lahf
xor
cwtl
and
cmp
movsb
mov
push
cmpb
xchg
das
sub
in
movsb
pop
xlat
cmp
pushf
repz
xchg
jae
jl
and
push
dec
xchg
fs
es
data16
insb
daa
mov
xor
push
dec
xor
add
add
add
fnstenv
cld
fldcw
dec
push
popf
add
push
push
fwait
lret
xor
sub
push
push
fadds
pop
jo
or
movsb
icebp
inc
push
int
xchg
fldt
sahf
add
cmc
movsl
and
jge
in
je
pop
and
or
lcall
les
je
dec
imul
jne
sahf
mov
pop
sub
in
push
out
cmp
xchg
test
push
insl
lods
popa
xchg
popf
mov
mov
sbb
scas
pop
ret
fnstsw
add
mov
lods
fdivrl
push
shlb
stos
push
ffreep
lock
lods
sub
sti
fimull
out
sub
pushfw
insb
xchg
es
icebp
jecxz
inc
sub
scas
andl
mov
or
xchg
cmpsl
popf
xchg
imul
test
into
push
lods
dec
lret
flds
mov
clc
mov
fldcw
add
mov
add
add
mov
cmp
pusha
popf
es
scas
inc
out
mov
fs
cmpsl
xor
xchg
jnp
lea
pop
mov
cmp
mov
lahf
cmp
lcall
cmp
dec
pop
je
clc
push
xchg
add
sbb
mov
push
vpmullw
xchg
fwait
jmp
fnstsw
clc
in
inc
fsubs
pop
dec
les
mov
pop
popa
icebp
clc
insb
push
jo
mov
ja
jg
or
aad
mov
sti
sbb
testl
sbb
ficoms
adc
dec
imul
fwait
pusha
cmp
sbb
mov
add
fstpt
out
pop
in
sbb
fwait
jg
clc
cmp
filds
sbb
cmp
or
sub
inc
cli
jnp
fwait
mov
sub
gs
mov
pop
outsl
sub
push
xor
add
add
and
push
sti
cmpsl
enter
jnp
stos
cmp
add
add
add
scas
xor
sub
add
movsb
lods
adcb
dec
xchg
adc
in
push
flds
notb
mov
add
fnsave
enter
xor
les
cmp
les
jecxz
out
ret
cs
pop
cs
inc
pop
and
mov
mov
fstps
mov
pop
xchg
adc
mov
repnz
aad
sbb
push
loop
push
jmp
adc
mov
xor
push
inc
xor
cmpsb
mov
cmp
mov
arpl
or
xor
popa
cmpsl
sbb
cmc
es
int
rcl
imul
ffree
jb
pushf
stos
imul
jl
sbb
cmp
subl
xchg
adc
in
cmpl
cmpsl
push
push
pop
fcomps
add
imulb
stos
cmpsl
out
insl
inc
and
mov
loopne
rorb
movsl
and
mov
jae
and
push
and
std
mov
dec
push
jne
adc
add
add
bndldx
es
jbe
addr16
dec
ss
push
inc
xor
pushf
call
mov
dec
pop
ror
cmp
jl
cmpsb
cwtl
es
xchg
out
sub
int3
js
mov
cld
cmpsb
sub
call
stos
scas
jl
fistps
sub
sbb
inc
add
jmp
lahf
adc
and
and
jl
sub
jo
mov
xor
pusha
sub
int
and
lds
fidivs
test
push
push
je
std
push
inc
xor
and
add
pop
data16
vmovq
dec
or
loopne
pop
fcoml
xchg
jns
push
sbb
lods
xchg
xor
bound
mov
or
popf
pusha
rorl
lock
pop
adc
or
nop
ss
pop
dec
mov
fcoml
lods
pop
lds
xchg
and
inc
and
lcall
add
add
add
jo
fdivr
mov
hlt
dec
and
adc
hlt
pop
cmp
push
adc
push
xor
add
out
or
repnz
ret
lock
add
cltd
jnp
xor
insb
push
mov
push
testl
mov
xor
and
div
mov
filds
mov
fwait
repz
faddl
sub
aas
in
add
int3
clc
ds
lods
add
pop
data16
pop
add
add
cmp
and
fldenv
mov
mov
ds
insl
outsl
and
pop
ret
frstor
test
add
cltd
jl
clc
add
lcall
stos
jno
push
popa
ret
pop
movsl
pop
cmp
sbbb
mov
imul
adc
imul
push
inc
outsl
jb
mov
negl
push
lret
call
fiaddl
ret
ficomps
cmp
lahf
mov
push
dec
add
add
add
loopne
jnp
mov
imul
add
jecxz
or
pusha
scas
mov
mov
xor
mov
ljmp
enter
adc
jmp
adc
dec
dec
jb
std
sbb
dec
jno
stos
mov
xlat
sub
and
aam
pop
dec
add
jb
mov
pop
dec
idivb
aas
out
enter
test
js
popf
subl
cmp
sti
or
jmp
pushf
mov
xchg
cmp
repnz
shll
jmp
movd
cmp
push
add
jecxz
xchg
mov
and
and
adc
lret
jl
cmp
mov
xor
call
mov
xor
fs
fcmove
inc
nop
mov
push
pop
daa
or
arpl
clc
jb
out
aaa
scas
jge
out
mov
test
ret
inc
and
pop
rcr
inc
push
popf
or
jp
jp
addb
add
arpl
ja
sub
add
sub
add
add
stos
and
cli
sbb
les
icebp
bound
cmpsl
xchg
jg
mov
jno
pop
push
cmp
sahf
sub
xor
lret
pop
xchg
add
jnp
xchg
jmp
jge
fdivrl
leave
xchg
xor
pop
rclb
gs
push
fisubl
pop
and
mov
jae
mov
enter
rorl
mov
jecxz
repz
cmc
lds
dec
cmpsl
mov
jl
in
sti
mov
out
les
ficoms
fcoml
sti
jbe
mov
xor
jae
mov
scas
repnz
hlt
dec
jb
jb
fwait
and
xchg
mov
jae
dec
and
jp
aaa
cmp
cmc
arpl
adc
push
adc
jns
aas
add
add
mov
add
aam
iret
call
xor
dec
pushf
or
mov
jg
sbb
sbb
loop
mov
lea
orb
jae
into
inc
push
cmp
lock
mov
or
sahf
push
mov
add
add
xor
data16
or
sbb
fucomi
jg
pop
fisubrs
xor
mov
sub
ljmp
out
add
test
test
adc
pop
daa
fwait
lods
mov
fadd
ret
das
hlt
mov
int3
pushf
lea
mov
ret
cmc
mov
inc
sbb
pushf
aaa
dec
cmp
xchg
sbb
xchg
adc
lahf
sub
shlb
mov
sbb
push
fistl
xor
sub
in
inc
fsubrl
adc
push
mov
inc
jo
scas
xchg
adc
repz
adc
dec
loop
push
cmpsb
and
pop
pop
push
insl
aam
daa
jle
scas
cltd
bound
call
push
das
inc
mov
sub
push
call
nop
in
out
mull
push
jmp
scas
xor
das
das
xor
mov
dec
push
pop
sbb
fimull
mov
sbb
xchg
scas
dec
das
out
ret
sarb
pusha
pop
loop
dec
int
sub
sti
pop
jge
neg
hlt
add
fists
add
add
test
jb
leave
mov
cltd
jbe
and
push
pop
imul
in
push
jl
fistpl
bnd
lret
dec
das
xor
pop
or
jp
jno
jge
dec
sbb
mov
push
pop
mov
sbb
cmpsb
and
mov
loop
dec
or
jno
and
jb
lods
fwait
push
movsb
inc
push
das
cs
xchg
mov
std
adc
das
and
sti
cmp
and
adc
adc
dec
mov
jg
ja
sbb
adc
mov
cli
test
ljmp
repz
adc
fnsave
daa
adc
pop
dec
shrl
cmp
sub
sub
pop
adc
mov
into
dec
xchg
repz
mov
in
nop
inc
ret
push
fucomi
adc
inc
push
out
jbe
js
sub
push
out
arpl
push
sub
testb
push
call
or
add
add
fsub
std
in
popf
in
stc
jmp
dec
imul
xor
add
add
adc
hlt
jne
cld
jp
lods
in
cwtl
ficomps
nop
into
mov
and
std
lods
xchg
arpl
test
hlt
or
cmp
loop
mov
mov
or
add
repz
mov
sahf
push
jns
pusha
hlt
test
negb
sbb
push
xorb
sbb
rorl
bound
addr16
jb
xor
sbb
jns
pushf
mov
loop
mov
jle
xor
bnd
stos
int
shr
lret
test
out
hlt
or
dec
repnz
subl
inc
pop
lahf
sub
xor
mov
push
jae
pop
pop
pop
outsl
pop
inc
scas
cli
inc
fsubrs
pop
mov
movsb
push
outsl
cs
push
jmp
dec
ss
ja
or
ljmp
push
and
gs
mov
sbb
repnz
push
dec
arpl
xor
stos
lods
sub
sti
stos
pop
jp
jnp
sti
xchg
jle
jp
lods
sub
xor
add
add
adc
mov
adc
mov
js
mov
mov
dec
sub
out
cs
fadds
test
or
jecxz
adcl
pusha
inc
jbe
rclb
out
push
rorl
rcll
pop
mov
scas
mov
ja
jmp
imul
fninit
mov
pop
loop
inc
fwait
xchg
mov
mov
sub
popf
popa
repz
jecxz
in
lock
inc
lea
mov
bound
mov
inc
inc
pop
push
shrb
and
mov
push
lret
lahf
push
cwtl
imul
jmp
jo
jp
or
jmp
mov
push
push
push
and
push
stc
inc
outsb
push
jmp
and
popa
scas
or
shl
inc
out
xor
mov
dec
pop
fwait
xor
lock
cwtl
shr
sahf
cmpsl
mov
fstpt
and
mov
push
sti
decb
mov
adc
add
add
xchg
sub
cld
lods
out
call
inc
push
xchg
mov
movsl
jns
and
push
xchg
addr16
push
or
icebp
stos
and
mov
pop
xor
sbb
sub
and
mov
push
inc
mov
pop
push
xchg
daa
jecxz
adc
pop
and
pop
ds
pop
jmp
add
inc
movsb
fwait
ja
fstps
xlat
and
mov
mov
repnz
and
stos
cmpsb
sbb
lahf
int3
pop
cmpsb
js
bound
push
mov
fwait
lea
out
inc
test
dec
adcb
unpcklps
jb
aaa
jge
sub
int
mov
aaa
ret
fdivrp
push
add
aad
dec
lock
sbb
xchg
cmp
xchg
adc
or
inc
dec
mov
or
lret
inc
xchg
pop
jae
in
popa
cs
addr16
and
ror
enter
jg
rolb
adcl
push
ret
cmp
xor
hlt
nop
adc
add
add
add
pop
lcall
int3
shl
dec
sbb
push
push
jae
iret
jne
sbbb
rcrb
imull
popl
hlt
or
mov
xor
dec
je
mov
hlt
scas
repnz
push
pop
adc
add
lds
adc
repz
jnp
cmp
sbb
mov
in
sbb
clc
jno
inc
dec
jg
xchg
or
ljmp
imul
popl
mov
cmp
in
jnp
scas
lea
js
cmpsb
testl
fcmovne
dec
call
cmp
sbb
outsb
jge
shlb
mov
sbb
mov
cmp
pop
iret
add
ret
mulb
or
insl
mov
jb
push
or
scas
push
xchg
ja
movsb
scas
mov
fmuls
mov
pop
sub
js
or
pop
fwait
mov
push
incb
ljmp
jbe
cmp
push
add
add
push
jne
mov
push
pop
and
rorb
loop
xchg
bound
or
cmp
add
push
push
stos
mov
notb
push
xchg
mov
push
gs
add
inc
jnp
jo
pop
or
jb
xchg
movsl
adc
lret
add
push
push
mov
sbb
movsl
repnz
sbb
dec
sbb
enterw
jae
scas
sti
pop
mov
xchg
push
mov
inc
lods
and
jmp
xchg
inc
push
int3
in
mov
inc
xchg
andl
popa
xlat
mov
mov
pop
cltd
jae
sub
mov
sub
mov
cmc
ret
mov
add
lds
inc
outsb
pusha
xchg
jmp
enter
inc
pop
jnp
or
jae
mov
cltd
das
push
divb
rclb
nop
lcall
aaa
add
add
add
jae
scas
pop
add
jge
xchg
mov
jle
test
stos
ds
loop
shrl
fsts
cmpsb
cmp
sub
push
in
mov
jecxz
and
sarl
insl
cmpsl
aaa
mov
nop
leave
iret
adc
ret
data16
popf
xor
lahf
imul
test
pusha
push
mov
xor
mov
movb
jge
out
jmp
mov
repz
fwait
sbb
pop
jno
cmp
or
push
pushf
addr16
lods
mov
cmp
pop
ss
xor
push
lods
fldl
sub
jecxz
sub
pop
pop
test
jecxz
mov
movsb
push
insb
jne
movsl
mov
and
std
insb
adc
rcrb
inc
mov
dec
cmp
or
push
gs
xchg
divb
ja
repz
xchg
add
fidivl
ljmp
dec
pop
inc
push
sbb
add
jbe
idivl
or
insl
cwtl
test
add
add
in
cmp
jle
cli
add
mov
mov
xchg
bound
js
jo
jp
iret
mov
cmp
or
cltd
add
mov
cmp
pop
roll
loopne
negb
jbe
sub
movsb
xchg
jb
xchg
jnp
xchg
add
lock
pop
dec
mov
lds
cld
std
shll
imul
jno
pop
movsb
add
loopne
add
mov
mov
mov
outsl
insl
inc
movhps
inc
test
xchg
leave
push
test
rcll
insb
push
xorl
fbld
mov
and
cwtl
lds
fwait
sarl
sub
or
rorb
pop
bound
mov
adc
inc
xor
xchg
loop
insl
cmp
mov
stos
push
stos
imul
add
add
outsb
sub
stos
fs
jmp
leave
aas
movsb
jle
mov
add
add
imul
mov
or
cltd
popf
rolb
loope
clc
add
aas
xchg
xchg
outsl
jbe
std
dec
test
shrl
jmp
mov
or
cmp
in
mov
mov
mov
in
dec
pop
mov
stos
mov
cs
sub
or
pop
movsl
outsl
lods
sbb
call
and
mov
sti
push
sub
xchg
mov
jae
lods
adc
xchg
push
stos
outsl
adc
mov
shr
xchg
dec
add
repnz
addl
scas
imul
shr
and
sub
and
xor
xchg
push
arpl
fwait
aam
mov
addb
in
adc
inc
shlb
out
clc
mov
insb
bound
int3
faddl
pop
arpl
pop
add
mov
pop
popa
call
frstor
xor
xchg
mov
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
cmp
add
add
pop
je
push
rcrb
clc
push
ds
push
std
pop
scas
sbb
cmc
js
lods
in
stos
mov
adc
test
inc
adc
push
std
subl
outsl
fwait
es
jg
inc
pop
sbb
adc
fwait
adc
sbb
fldt
mov
mov
icebp
adc
pusha
mov
fldt
ret
aam
adc
stc
in
adc
scas
ljmp
enter
pop
inc
adc
es
in
mov
rcl
or
jae
mov
scas
and
jbe
jmp
nop
pushf
fcompl
jno
and
icebp
ret
xchg
mov
mov
mov
lods
push
push
notb
mov
inc
test
clc
xchg
mov
pop
jg
pop
and
out
int
cwtl
jno
fwait
push
sub
insb
mov
enter
jp
push
rcrl
fistpll
push
test
lds
in
mov
test
sbb
jnp
jnp
cmp
movsb
push
sbb
or
add
add
loop
inc
adc
aas
arpl
mov
inc
fs
jg
sub
sahf
or
nop
cmpsl
cmp
lret
sub
inc
jle
jg
icebp
adc
add
push
push
rcrb
cmp
and
sahf
mov
cs
sarb
cmp
shll
and
add
cmp
daa
push
xor
cmp
subb
push
mov
lods
pop
loop
xor
dec
inc
aam
inc
pop
nop
and
or
aaa
jo
pop
gs
call
subb
mov
jmp
and
xor
outsl
stc
sarb
les
mov
movsl
lods
adc
jae
xchg
ret
fwait
and
test
faddl
or
je
mov
aam
xchg
mov
pop
es
clc
jg
std
pop
jae
fs
test
pop
mov
mov
sbb
add
adc
jmp
pushf
mov
add
add
test
scas
xchg
pop
xor
out
add
or
das
jae
xlat
decl
out
sbb
push
push
fcoms
mov
je
mov
out
jne
divb
fwait
idivb
popf
in
jp
fstps
jg
int3
jmp
dec
push
jo
cmpl
xchg
lea
aad
lods
leave
and
xchg
les
into
sti
and
cld
ret
fidivs
jo
bound
sub
scas
mov
or
inc
mov
pusha
and
pop
je
iret
inc
cmp
sub
pop
fcmovb
mov
dec
add
push
dec
push
add
adc
inc
incl
loopne
pop
mov
jg
fmul
add
mov
jns
jl
push
rcl
adc
pusha
jns
add
adc
add
inc
sub
dec
and
daa
in
sub
int
fcmovb
lea
push
test
dec
and
das
cmp
lods
repz
mov
in
push
leave
test
add
cmpsb
mov
or
sahf
fistl
and
imul
cld
stc
call
mov
les
or
mov
jmp
test
outsb
into
mov
pop
xchg
or
cmpsl
cmpsl
mov
dec
mov
jb
dec
pop
cs
xchg
fisubl
movlhps
or
in
repnz
mov
mov
mov
jl
or
cltd
out
data16
dec
push
xchg
jl
pusha
sti
adc
mov
sub
sarl
push
mov
cmp
ds
pushl
lahf
data16
inc
adc
sub
shl
addr16
dec
xor
lods
test
cmp
cmpxchg
inc
pop
push
pop
pop
xor
stc
ret
dec
xchg
cmpsb
pop
xchg
sub
in
stos
stos
movsl
xchg
mov
push
rcll
adc
leave
mov
out
pop
push
mov
mov
lds
dec
dec
hlt
outsl
mul
dec
jo
aas
daa
push
cld
push
std
jmp
dec
push
out
mov
add
add
add
repnz
stos
xchg
xor
inc
push
dec
loopne
nop
inc
sub
xor
mov
sub
push
scas
adc
repnz
xlat
jae
mov
rclb
push
iret
add
push
adcl
rorl
lcall
movsb
stos
sub
int
jnp
aad
fistps
in
call
stos
push
rorl
and
xchg
push
imul
fdivrp
or
pop
mov
sbb
repz
cmp
mov
outsb
mov
jb
movsb
push
imul
aas
out
or
mov
cs
and
inc
lods
push
mov
push
mov
movsl
dec
repnz
mov
lock
outsl
gs
jle
mov
popf
xchg
mov
clc
sub
adc
sarl
pop
jae
jle
jp
sub
push
cmp
inc
ficompl
addr16
xchg
add
add
add
sbb
dec
push
out
aad
push
xchg
aas
add
add
add
jmp
lds
pop
clc
dec
data16
aam
sbb
push
gs
test
sti
sub
adc
icebp
scas
cmp
xchg
or
imul
in
stc
jbe
pop
subl
xorb
lret
dec
push
arpl
sub
roll
stos
jp
in
dec
cld
imul
stos
dec
int3
sbb
in
inc
hlt
adc
push
call
mov
sbb
cltd
das
ss
imul
mov
movl
and
jg
xchg
jle
addr16
or
leave
lds
pop
push
nop
or
testl
push
mov
fcomps
mov
imul
fucomi
sub
fwait
or
rcrl
mov
cmc
inc
push
lahf
adc
std
mov
xchg
and
or
xchg
push
mov
aad
inc
ds
mov
mov
jne
test
imul
add
stos
add
push
mov
or
jp
aad
inc
add
add
add
loope
dec
cmc
addr16
pop
cmpsb
pop
das
xchg
xor
fisubl
decl
mov
xchg
out
sub
cmp
mov
mov
mov
mov
lock
jae
jge
daa
out
movsl
dec
mov
std
xchg
insl
ja
cmp
sbb
aas
mov
repz
and
arpl
lods
ds
lret
stos
test
cmc
dec
fisttpll
mov
push
dec
inc
jns
sbb
fadds
mov
stos
cld
cmp
aam
jmp
lock
cmp
mov
in
out
fwait
mov
dec
ljmp
mov
ja
nop
mov
jno
mov
cmpsl
ljmp
jno
xor
add
into
mov
repnz
loop
into
testl
push
test
lods
loope
push
mov
aad
daa
adc
inc
add
scas
xor
test
repnz
int3
xchg
add
add
jg
xchg
orl
iret
xchg
inc
add
add
add
aam
jb
movsb
aaa
pusha
xchg
mov
cmp
movsw
jmp
fwait
cmp
mov
xchg
icebp
stos
add
popf
cmc
ss
xlat
dec
mov
jb
inc
xchg
out
out
loop
and
dec
lret
es
lcall
icebp
jo
fdivs
cmp
std
icebp
in
mov
jle
in
test
add
mov
pop
lock
mov
lret
movsl
andl
jnp
leave
in
mov
mov
xchg
fnstcw
jecxz
je
hlt
sahf
pop
movsl
push
xchg
scas
test
clc
jge
js
into
and
fisubrl
jl
jbe
repnz
xor
mov
mov
fnstenv
aas
add
jmp
mov
arpl
bound
mov
jle
stos
or
pop
inc
dec
sub
popf
bound
sbb
shl
or
xchg
repnz
jne
cmp
add
push
dec
lret
jmp
imul
aaa
je
xor
add
add
test
lea
mov
xor
xchg
shrl
dec
incl
scas
jae
xor
push
ficomps
push
xchg
mov
lret
pop
mov
xchg
aaa
push
fcomps
xor
iret
adc
mov
dec
ljmp
jle
leave
and
mov
sub
loopne
xor
push
cmp
mov
add
xchg
push
inc
out
xchg
pop
mov
lods
adc
fldenv
lahf
xchg
rcr
out
add
cmp
scas
fimuls
scas
push
fsub
adc
xor
lods
test
xor
popa
dec
cltd
arpl
mov
dec
mov
fcomi
adc
dec
xor
popa
xor
hlt
xor
dec
dec
cs
enter
xor
pop
push
mov
or
ljmp
hlt
pop
and
fsubl
mov
push
add
das
and
in
clc
int3
jmp
lds
cmc
cwtl
xchg
push
sub
pop
jp
pushf
inc
add
add
add
sub
insb
adc
or
mov
adc
idivl
and
pop
out
push
jo
leave
scas
cltd
pop
sbb
or
cmc
fs
mov
fisubs
or
movsl
cmp
pushf
gs
inc
imul
mov
test
push
std
pop
fwait
sub
cmpsb
test
dec
xchg
out
add
sbb
pop
ss
nop
int3
lock
xchg
mov
lods
add
mov
mov
loop
mov
dec
int3
rclb
mov
ljmp
and
sub
stc
imulb
jge
xchg
jae
dec
add
cmp
out
xlat
sarl
cmc
icebp
xchg
mov
mov
subl
push
cli
sub
xor
xor
out
ljmp
outsl
xchg
xor
and
cltd
add
out
in
popf
cmpsl
xchg
call
call
sub
jns
xor
jg
sub
inc
mov
add
add
enter
jp
icebp
jg
mov
pop
jno
pop
mov
loope
mov
lcall
dec
mov
out
outsl
sub
cltd
or
stos
lret
popa
sub
scas
or
push
mov
push
mov
push
pop
out
dec
ret
cmp
jno
mov
insb
pop
pop
xchg
xor
icebp
cmpsb
stc
ljmp
lds
outsb
add
and
into
outsb
xchg
jp
fdivrs
xchg
test
data16
hlt
dec
cs
push
lock
add
mov
mov
pop
xor
push
adc
xchg
sbb
stos
out
add
js
cli
xchg
fisubrs
stc
push
ret
out
ss
and
mov
cltd
dec
inc
xor
xor
add
dec
xorb
pop
xor
mov
enter
mov
xlat
stc
outsb
xor
lds
mov
push
and
js
ret
jg
decl
rol
aam
mov
add
add
push
sub
push
mov
sbb
ss
cwtl
dec
mov
ficoms
jp
mov
or
sub
or
and
mov
nop
lea
add
mov
jne
cmpsl
push
mov
mov
push
divb
icebp
jp
mov
pop
adc
inc
fstps
push
test
push
fcoms
adc
ja
or
iret
mov
fsub
xchg
ja
mov
ja
bswap
or
js
cmp
pop
popa
pop
sub
push
pusha
shlb
adc
push
cltd
in
xchg
out
adc
shll
std
and
ds
popa
or
fstpt
inc
cmp
add
mov
sarb
fnsave
and
fs
arpl
addr16
loopne
lods
or
and
daa
jg
scas
jne
dec
adc
sub
out
add
add
das
mov
out
aad
popf
xor
test
add
add
add
jecxz
insb
jecxz
adc
mov
fcoms
jae
ror
ljmp
push
jbe
pop
cmp
aaa
lahf
push
push
enter
push
daa
daa
adc
cmpb
sbb
push
dec
shrb
popa
inc
in
mov
inc
jne
adcl
push
pop
xchg
and
pop
jns
and
iret
push
jbe
or
test
pop
lcall
pop
lahf
mov
insl
pushf
insb
and
fdivrl
or
into
dec
stos
sbb
repz
out
into
call
cmc
mov
fsubrl
leave
rcr
pop
jge
hlt
mov
adc
and
stos
sbb
fwait
pop
mov
xchg
mulb
mov
and
mov
stos
mov
rclb
cmp
cmp
mov
testb
scas
iret
jp
and
lcall
mov
in
cltd
cmpl
jno
add
add
hlt
gs
dec
adc
jae
lods
inc
add
add
add
testb
xor
and
jge
dec
imul
xorl
inc
jno
inc
and
mov
ljmp
hlt
xchg
je
push
push
sub
sub
clc
ret
jge
cwtl
inc
jb
stc
and
loope
sbb
cmp
pop
or
into
aad
push
mov
adcb
pop
cmp
mov
xor
popa
and
inc
sub
or
adc
stos
arpl
sbb
sbb
int3
pop
add
ficoml
xchg
xlat
clc
and
loope
fwait
push
int3
jb
push
adc
adc
xor
loop
mov
in
subb
xchg
mov
push
mov
inc
mov
outsl
repz
test
jge
or
sub
mov
sbbb
into
jecxz
ffreep
mov
adcl
jmp
iret
sbbb
add
add
aas
gs
pop
repnz
dec
add
add
add
and
repnz
jmp
pop
cmp
adc
jg
dec
or
rorl
scas
jle
dec
xchg
add
cmp
mov
xlat
out
jb
jne
and
test
iret
mov
dec
dec
loopne
loopne
lret
sbb
adc
mov
ret
repnz
cmp
stos
jnp
mov
adc
xor
in
add
cld
push
inc
js
pusha
mov
mov
jnp
dec
rcll
movsb
pop
mov
mov
lods
push
sub
pop
cmpl
cld
mov
jae
mov
stos
stc
xor
lret
lock
popf
add
jb
jb
sarb
xlat
imul
testl
out
sbb
sbb
xchg
add
jb
test
in
out
mul
mov
imull
fdivs
xor
mov
adc
add
mov
std
popf
dec
and
mov
add
out
fisttpll
lock
add
add
add
adc
repnz
mov
icebp
outsb
sub
and
dec
mov
lret
xor
jge
and
stos
mov
mov
mov
dec
fwait
xor
aaa
imul
int
sbb
ds
ja
aad
pslld
lock
inc
cld
xor
cmp
inc
ret
movsb
mov
into
sub
outsl
mov
sub
sub
sub
adc
inc
outsb
xchg
jb
daa
outsb
lea
hlt
loopne
andl
adc
mov
or
mov
mov
add
jmp
notl
fcmovne
and
mov
xchg
and
mov
and
mov
scas
or
call
std
cli
das
dec
adc
pop
incb
orl
sub
stos
outsb
jae
jae
sti
mov
sub
pusha
xchg
mov
add
add
mov
ljmp
add
add
add
cmp
int
jecxz
mov
adc
mov
pushf
push
push
xchg
iret
lcall
rsm
arpl
scas
inc
insb
sbb
jecxz
shlb
push
jl
jge
ds
pop
adc
mov
dec
push
in
ror
fsubrl
push
sbb
dec
mov
xor
lcall
and
dec
lret
xor
leave
fistl
dec
das
mov
jmp
sbb
cwtl
int3
sub
inc
cmp
add
ret
decl
clc
dec
xchg
cmc
push
incb
int3
fdivp
xor
push
mov
stos
fisttps
jle
test
divl
in
cwtl
ret
imul
xchg
inc
aam
inc
fdivl
movsl
jae
aaa
pop
adc
daa
int
lahf
sti
pop
mov
dec
sub
xor
lea
dec
dec
cli
mov
cmp
cmp
clc
imul
jae
pushl
rorl
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
cmc
fldl
add
add
mov
shlb
or
xorl
push
mov
inc
inc
pop
dec
cmp
push
inc
mov
jne
pop
xchg
ljmp
dec
fmul
lcall
test
add
daa
sbb
rclb
and
adc
jge
ret
mov
notl
in
pushf
enter
clc
adc
rolb
cs
xor
push
cmc
out
js
mov
popa
xchg
popa
mov
loope
lahf
sahf
into
mov
sub
or
scas
dec
sbb
jbe
or
dec
test
popf
add
pop
lret
test
mov
mov
addr16
das
test
cwtl
xchg
scas
xor
test
and
xchg
adc
mov
dec
lret
sub
push
enter
pop
les
js
dec
adc
ja
dec
dec
lods
jp
mov
pop
rolb
mov
mov
cmp
imul
out
mov
mov
fisttpl
add
add
and
ds
test
test
mov
adc
jb
js
or
or
loope
mov
push
and
inc
rcl
push
sub
push
outsl
jb
pop
mov
xchg
cmpsl
inc
and
inc
sub
or
dec
push
std
dec
push
adc
mov
dec
sub
movsb
in
cltd
dec
cwtl
xlat
push
cmp
into
arpl
mov
loopne
inc
add
xchg
enter
lods
push
xor
pop
hlt
loopne
mov
adc
fimuls
add
sti
sub
ss
jl
ljmp
adc
cmp
jns
inc
fwait
testb
dec
pop
shll
rcll
insb
test
mov
in
or
les
mov
dec
int3
outsb
dec
xor
push
push
movsb
pop
pop
iret
or
mov
or
scas
lock
xchg
xor
es
push
mov
xchg
out
fldl
insb
push
add
add
dec
stc
mov
ljmp
les
add
add
cmp
outsb
push
cmp
in
dec
ret
pcmpeqb
mov
data16
out
push
add
mov
das
ficoml
in
int3
nop
loopne
lahf
sbbl
mov
inc
inc
insl
std
fimull
inc
popf
lea
data16
inc
shrb
xchg
push
cs
mov
shl
dec
xchg
dec
out
push
arpl
daa
dec
or
pop
or
stos
or
dec
mov
icebp
movsl
mov
pop
fstpt
aas
xorl
aam
mov
shl
cmp
nop
imul
hlt
push
dec
das
or
push
loope
jae
mov
sub
mov
pop
mov
cmp
cmp
dec
jae
jecxz
cmp
lahf
jge
jo
inc
pop
push
jp
xor
jmp
imul
rolb
fwait
mov
xchg
testb
jo
lcall
jae
lret
mov
add
add
jg
cld
lcall
dec
dec
add
add
add
pop
mov
xchg
xchg
pop
push
pop
sub
jbe
cli
jecxz
sbb
out
icebp
jne
mov
push
xor
fs
rclb
mov
jle
jl
or
or
push
iret
idiv
lahf
fsubrs
ret
call
addr16
aad
shlb
test
add
or
push
xchg
shr
adc
addb
adc
es
push
testb
in
xchg
pop
or
dec
mov
in
mov
loop
ret
movsl
sbb
cmpsb
and
push
pop
lcall
mov
push
jb
icebp
mov
xchg
sbb
dec
out
sbb
loope
xchg
sub
insb
out
mov
push
inc
jl
cmp
sbb
mov
jbe
shrl
pop
inc
sub
pop
push
pop
sbb
add
xor
test
mov
sub
jg
sbb
in
out
mov
cmp
pop
dec
dec
mov
xchg
mov
pop
and
sbb
dec
add
add
add
dec
or
add
add
inc
sbb
cwtl
push
sub
test
fists
mov
push
mov
scas
push
inc
loopne
dec
fmul
cmpsb
les
lret
jl
sub
lods
leave
call
cmc
fwait
add
mov
inc
sbb
stc
mov
jno
add
scas
xor
jp
lahf
push
add
inc
add
sahf
std
xchg
dec
jecxz
xor
mov
jnp
sti
fnstsw
jg
rol
arpl
mov
pop
outsb
dec
push
stc
inc
bound
mov
dec
lahf
lock
jnp
jle
mov
in
mov
pushf
sub
rolb
jo
jl
negb
rorb
int3
rcl
icebp
or
dec
or
lods
lret
ds
imul
notl
into
push
pop
xchg
dec
data16
adc
dec
mov
add
inc
mov
push
push
jmp
push
mov
dec
rclb
add
add
fwait
dec
sti
mov
jge
popa
cs
or
lret
test
xchg
pushf
js
arpl
bswap
inc
mov
les
add
dec
mov
push
cmpsb
push
sbb
mov
add
lds
mov
xor
or
outsb
cmp
lret
movsb
shl
cltd
or
popa
xchg
sbbl
gs
aam
neg
push
adc
mov
les
mov
or
fwait
inc
xchg
and
cwtl
adc
into
cmp
mov
jg
cwtl
dec
scas
mov
leave
inc
aam
test
in
loope
jnp
hlt
rcll
mov
mov
sbb
xchg
test
int
add
imul
cmp
sub
push
ret
pop
outsl
sbb
mov
push
inc
adc
sbb
negb
aaa
movsl
loopne
push
pop
or
mov
insb
cmpsb
mov
in
mov
out
add
add
fsubrl
mov
out
cmp
ret
or
cmp
add
add
add
and
mov
sub
mov
cmpsl
repnz
or
repz
jne
aas
inc
sbb
fwait
iret
popf
sbb
mov
adc
sbb
push
loope
out
adcb
jb
push
lds
loop
push
int3
or
cld
pusha
inc
imulb
imul
int3
mov
lods
inc
sbb
xchg
pop
pop
dec
ds
int
or
and
cmp
inc
or
stc
sbb
xlat
sbb
mov
icebp
mov
push
xchg
fdivrl
xchg
outsb
mulb
ret
lret
or
jp
push
lods
xor
and
bound
inc
aas
jmp
lods
fsubrs
and
int
subb
push
cmp
fsubrp
and
in
in
sarb
pushf
jmp
xor
xor
jl
mov
inc
mov
add
sub
lret
stos
repnz
inc
jno
and
or
push
shll
out
pop
pop
pushf
push
in
js
pop
fcoms
add
add
outsb
push
cmp
xchg
in
les
xchg
sub
add
mov
push
add
js
movsb
outsl
fcmovnbe
leave
push
insb
in
repz
jo
mov
push
stos
sbb
ret
cmpsb
xchg
adc
mov
xchg
xchg
or
xchg
imul
mov
ret
xchg
jne
sahf
mov
sarl
mov
sub
adcb
mov
or
push
ds
into
adcl
or
hlt
pop
add
nop
inc
ret
pop
cmpsl
imul
ljmp
int
mov
xchg
mov
adc
xchg
add
dec
leave
jns
scas
pushf
fidivrl
inc
fimull
add
cmp
xorl
or
pop
and
jne
out
xchg
mov
movsb
inc
xchg
mov
mov
sbb
fstpt
jne
or
push
insb
gs
mov
add
add
out
lcall
hlt
mov
xor
add
add
add
lds
in
mov
lea
push
lock
sbb
mov
and
cmp
cmp
mov
pushl
mov
stc
out
ds
arpl
mov
xor
imul
arpl
testb
cmp
addl
sarl
out
mov
pop
out
shl
js
ret
add
lods
jmp
bound
fs
mov
cwtl
dec
cmp
in
les
mov
cmp
sub
and
fdivs
dec
je
sub
cmp
mov
dec
incl
or
sbb
adc
dec
sahf
push
popa
ss
iret
data16
pop
repz
jecxz
lds
popf
push
scas
jmp
sub
jp
in
shlb
cmp
mov
xor
or
cmp
mov
fs
shlb
daa
je
jno
test
add
add
jbe
idiv
imul
or
add
add
add
jbe
mov
mov
mov
sbb
in
lahf
aad
inc
mov
loope
jecxz
jg
lock
mov
inc
icebp
lods
xchg
adc
push
and
imul
clc
out
pushf
sbb
push
add
cmpsl
pusha
cmp
std
imul
xor
outsb
ret
cmp
repz
push
mov
sarb
rcr
movsl
repnz
adc
fcomp
dec
lods
adc
shrb
incl
insl
in
lcall
dec
pop
testl
sbb
test
mov
mov
cld
xlat
call
stos
lahf
lcall
or
call
mov
mov
outsl
push
add
imul
xor
xchg
iret
lret
mov
mov
inc
mov
pop
jg
rcll
js
mov
xor
and
cmpsb
adc
cld
cli
gs
jae
fwait
cmp
stos
sarb
in
add
add
add
sub
push
mov
ljmp
repz
enter
sub
add
and
jbe
inc
in
int
inc
fildll
cmpsb
daa
out
jle
aam
pop
xor
loop
or
push
or
sub
lds
loope
jmp
jae
push
dec
mov
in
xchg
or
or
pop
std
ret
divl
or
mov
stos
jmp
imul
leave
mov
imul
mov
jne
pop
sbb
pop
test
add
mov
mov
aam
pop
add
gs
aaa
es
jne
sbb
dec
loop
popa
and
dec
xchg
or
inc
movsl
sbb
fisubrl
leave
aam
std
sbb
mov
pop
pusha
mov
inc
ss
add
sbb
lea
fwait
add
stos
adc
test
add
mov
lret
push
out
int3
adc
inc
push
clc
mov
and
hlt
std
dec
cltd
sub
add
add
int3
testb
fwait
dec
popf
pusha
sbb
iret
out
push
inc
ficomps
sti
inc
mov
dec
movsb
scas
out
sbb
jns
mov
outsl
sbb
add
mov
jb
sub
rclb
add
mov
xlat
pushf
sarl
out
push
xorl
mov
jo
and
xchg
subb
imull
inc
mov
mov
cld
cs
sub
inc
sub
pop
push
fstl
idivb
or
cmp
pop
xor
aam
lret
fisttps
fwait
sbb
mov
add
or
fisttps
pop
gs
cmp
int
loop
dec
into
mov
loopne
movsb
loop
mov
dec
lods
mov
das
scas
std
test
lods
and
add
sbb
loop
adcl
dec
out
or
xchg
ja
scas
xchg
push
adc
out
mov
rorb
gs
push
add
add
add
jno
push
cltd
lods
mov
pop
in
ret
inc
xchg
xor
add
pop
mov
sub
and
pop
loop
push
cltd
es
sti
dec
cmp
and
insl
sarb
popf
push
sub
ret
push
cmpsl
out
xchg
mov
faddl
test
popa
and
les
inc
adc
sub
movsl
stc
ds
sub
dec
test
pop
into
bound
mov
mov
mov
mov
ret
ds
or
pop
pop
pop
loopne
rcll
outsl
lret
fnstcw
mov
fwait
cltd
xchg
cwtl
cmpsl
in
cmp
neg
hlt
movsb
add
mov
mov
lret
aam
and
inc
xor
push
sbb
or
jae
int3
ljmp
in
outsb
fwait
paddsw
mov
leave
loope
int
adc
sub
cli
xchg
mov
lods
xor
add
push
insb
jo
mov
aas
fnstenv
imulb
xor
add
lret
dec
loope
ja
xchg
mov
test
or
fdivs
iret
add
gs
add
add
add
mov
negl
mov
rolb
mov
cmp
xchg
mov
negb
inc
add
insb
pop
jno
jo
out
sbb
mov
sbb
iret
insl
lcall
test
mov
sbb
test
dec
mov
rcll
test
cwtl
or
je
xchg
in
rclb
xchg
insl
dec
or
cmp
stc
rcr
das
pop
sbb
inc
incb
sbb
inc
sub
dec
push
mov
or
pop
jecxz
jae
dec
inc
pop
test
xchg
sti
imul
das
sub
adc
test
outsb
mov
test
xor
xchg
or
cmpsb
jge
or
xlat
shll
in
into
dec
call
or
cmp
hlt
mov
mov
mov
fadds
dec
cmp
hlt
ja
fldcw
negl
lock
xchg
shlb
mov
add
add
mov
pusha
xchg
repnz
test
pop
add
add
add
sbb
fildl
ljmp
xchg
mov
js
jns
sub
ss
sub
or
cltd
andb
aas
xor
xchg
repz
xchg
out
and
fs
sarb
test
pop
pop
cmp
iret
rcll
lock
aam
pop
cmp
pop
test
and
sbbb
dec
ljmp
pop
into
mov
test
shll
lret
nop
rcr
cmpsb
clc
adc
adc
jp
scas
pop
xor
push
xor
add
push
push
or
or
xor
inc
out
pop
push
stos
lret
push
adc
and
shll
es
ss
xor
imul
daa
cmpl
and
xchg
ret
sub
aad
jg
test
cmpsl
jne
jb
mov
xchg
out
imul
adc
fsubl
mov
ja
mov
lods
ljmp
add
add
pop
in
cmpsl
stos
mov
cli
sub
pop
xchg
ret
jo
call
shlb
lock
mov
xchg
hlt
mov
int
push
test
cmp
adc
and
or
aam
inc
out
pop
cmp
scas
pop
xchg
sarl
or
out
stos
ss
adc
mov
pop
std
xor
cmp
enter
daa
cmp
sbb
cs
xchg
sbb
sarb
shlb
xchg
xchg
jmp
dec
insb
stos
mov
sub
or
add
cmpb
sbb
jg
out
and
jne
fs
lret
shll
addb
test
jl
inc
mov
jmp
dec
outsb
sarl
jge
shlb
pusha
mov
cmpsb
dec
out
inc
mov
push
sub
add
out
mov
sub
jp
lahf
pop
fld
sbb
add
xor
xlat
out
cld
fldt
stos
cld
pop
add
add
add
xor
add
aad
mov
inc
es
das
xorb
mov
hlt
dec
mov
shlb
es
mov
inc
cmp
push
test
fs
mov
stos
cli
fwait
jg
add
pcmpgtw
pop
stos
out
cld
pop
push
repnz
sbb
fistpl
push
jl
loopne
inc
xchg
xor
arpl
cmp
push
cmp
and
inc
or
push
hlt
cmpsb
test
inc
add
mov
cwtl
rcl
mov
mov
mov
mov
insl
xchg
lods
sub
shll
push
movsb
cwtl
mov
aad
xlat
dec
outsb
push
sbb
js
bound
dec
push
push
fdivr
fistpll
sub
fisttpl
bound
mov
rcrb
jp
dec
repnz
pop
mov
push
scas
or
or
cmp
cmpsb
mov
shrb
and
dec
sub
bound
ds
or
push
xchg
mov
mov
mov
in
insb
clc
mov
pop
add
add
add
testb
jge
pop
jae
aad
fnsave
mov
push
das
xor
jbe
dec
sbb
repz
addr16
loop
push
mov
das
std
ror
lret
dec
jmp
pop
mov
mov
insb
xor
out
sbb
pusha
sbb
and
sub
ss
push
or
or
cmp
jns
cld
jl
loope
out
xchg
fsubp
scas
xor
sub
mov
call
inc
mov
lds
sbb
and
ret
mov
xor
and
shl
pop
cli
lcall
push
shll
cwtl
rcr
cltd
pop
icebp
fs
les
or
inc
jp
xor
lcall
addb
lret
push
mov
mov
fcompl
rorl
inc
push
mov
testl
add
out
into
push
push
inc
lahf
mov
add
add
add
add
and
negl
in
xchg
sbb
xchg
cmc
add
jnp
in
cwtl
loop
js
shl
es
inc
arpl
pusha
pop
xchg
scas
orl
cmpsb
in
adc
adc
adc
lret
enter
jp
movsb
lahf
mov
xchg
arpl
jmp
and
pop
inc
adc
test
push
mov
gs
jbe
jp
gs
ret
test
jl
ror
fmul
imul
scas
or
iret
cwtl
dec
push
pop
push
aad
sub
test
inc
push
sub
mov
test
int3
add
aad
test
adc
fs
iret
dec
rorb
aas
add
enter
pop
mov
test
sub
in
cld
push
mov
xchg
loopne
movsl
cmp
inc
ds
xor
cmp
sbb
shll
sbb
ret
pop
sbb
in
mov
aam
xor
cmc
and
mov
jg
or
or
add
add
jnp
push
inc
aam
lret
push
jge
int
jl
pusha
sbb
int
xchg
sbb
inc
sbb
lcall
xlat
push
enter
pushf
sti
lock
pop
ds
lea
into
push
mov
cmp
incl
cmpb
and
inc
jns
push
cmp
mov
insb
lock
push
pop
mov
sti
push
dec
add
jne
scas
inc
dec
add
mov
or
sbb
idivl
jg
xchg
xor
jb
adc
xchg
pop
lahf
mov
test
scas
in
inc
push
and
mov
iret
xor
jns
jae
movsb
addr16
jmp
adc
xchg
pop
cmp
add
add
lahf
mov
or
ror
lods
sbb
jbe
and
and
push
loop
mov
add
insb
add
cld
outsl
imul
xor
imulb
pop
add
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
push
mov
add
add
ficompl
daa
cld
aas
outsb
es
adc
call
sub
sub
mov
addl
aaa
shr
pop
xchg
clc
shrl
pop
in
xor
jl
and
add
call
int
dec
jmp
inc
stos
jae
outsl
stos
sbb
leave
add
popa
sahf
push
mov
cs
jl
mov
ret
pop
jbe
lcall
jle
clc
add
mov
mov
xchg
mulb
mov
fcmovnu
jmp
mov
es
sbb
jnp
rorb
jno
shlb
adc
out
sub
jmp
test
push
xchg
out
and
call
inc
or
lea
sbb
sbb
clc
cld
sti
sub
pushf
cmpsl
mov
insb
and
add
sarl
mov
push
and
jne
aas
jecxz
or
add
idiv
jg
sub
dec
adc
popa
add
add
add
mov
lds
or
pop
jl
aam
daa
sbb
cmpsb
xchg
imulb
sbb
aas
pop
lahf
jecxz
mov
in
push
sub
jge
fmulp
push
outsb
call
sub
sub
inc
iret
or
push
shr
push
in
int
leave
and
add
dec
in
add
sbbl
sbb
mov
push
xchg
icebp
lds
lock
xor
dec
flds
pop
inc
push
add
hlt
stos
pop
aas
popf
jo
push
repnz
movsl
mov
xchg
loope
lods
pop
repz
sub
pushf
enter
enter
std
cmc
cwtl
lret
aam
jmp
push
mov
push
mov
pop
adc
mov
dec
fcoml
test
filds
dec
nop
pop
inc
fdivrl
dec
loop
pop
ja
adc
push
adc
mov
pusha
add
into
imulb
mov
insb
imul
add
inc
pop
mov
fstps
xor
add
add
loope
shrl
jecxz
mov
popa
sbb
in
bound
mov
imul
insb
push
xor
push
out
cmc
mov
out
push
inc
sub
push
js
out
loope
xchg
std
pop
flds
push
fnsave
xor
aad
mov
ret
adc
push
mov
clc
sbb
jnp
or
xor
int
ret
adc
xor
xor
xchg
sub
rcrb
test
lds
or
scas
fisubrs
ja
dec
push
jmp
les
xchg
repz
cmp
mov
cmp
ja
xchg
lods
adc
mov
js
dec
ret
xchg
xchg
lods
xor
leave
adc
cld
gs
push
and
add
sahf
dec
jns
repnz
ja
xor
ror
dec
lock
pop
or
aas
xchg
cmp
sub
movsb
imul
add
add
repnz
movsb
jle
arpl
mov
sbb
add
add
dec
mov
push
add
add
jmp
jo
mov
push
sbb
aam
push
push
cmp
ljmp
add
lock
inc
xchg
enter
mov
jne
jle
mov
stc
repnz
out
push
and
inc
xchg
mov
push
or
pop
fidivl
inc
lock
inc
inc
dec
test
mov
sti
and
jno
lret
adc
imul
shlb
cwtl
or
mov
jl
mov
daa
jecxz
jo
and
fldcw
fld
out
pop
ret
inc
dec
adc
mov
mov
xchg
mov
mov
mov
out
sub
mov
cwtl
pop
gs
inc
fs
lock
cmp
lret
jmp
test
adcb
adc
xchg
cmpsb
push
inc
dec
xorb
push
add
add
jmp
sub
xchg
cmp
add
add
iret
jbe
sbb
push
cmp
push
xchg
hlt
ret
and
nop
cmpl
cld
stos
xor
movsb
lods
mov
adc
xchg
cli
pop
xchg
dec
cwtl
adc
into
movb
les
jne
add
std
imul
cs
enter
pop
in
jle
data16
dec
gs
sub
sbb
adc
or
push
sbbl
push
and
mov
jno
xchg
mov
fsts
dec
adc
add
mov
cwtl
std
cld
xorl
cmpsb
pop
and
mov
and
pushf
mov
dec
ss
jbe
push
or
inc
cwtl
push
inc
pop
cmp
xlat
pop
or
shl
dec
jnp
jl
ss
jae
loopne
inc
sbb
cmp
adc
and
and
lock
arpl
jg
lahf
hlt
mov
addr16
pusha
pop
dec
mov
shll
fnstenv
call
add
add
add
cmpsl
call
add
subb
out
inc
pop
mov
mov
pop
fldenv
mov
jae
fwait
mov
or
mov
sub
xor
add
es
push
hlt
mov
dec
mov
ss
or
xchg
pushf
mov
pop
aas
fwait
call
daa
mov
and
push
sar
stc
mov
fbstp
lods
mov
je
ret
stos
pop
data16
mov
iret
cltd
sbb
xchg
xor
push
rcll
dec
fwait
inc
psubsb
xchg
inc
mov
cmc
mov
xlat
xchg
repz
test
xchg
data16
and
and
out
sub
int
js
mov
cmp
jnp
pop
jg
jp
or
pop
daa
mov
ljmp
cmp
repz
inc
inc
pop
inc
lods
fnstcw
out
mull
mov
add
add
cld
je
jbe
jns
sbb
out
cli
imul
add
add
dec
add
jl
xlat
stc
xor
test
repz
pop
test
cmp
loopne
imul
push
ret
push
clc
lds
adc
call
mov
sub
sbb
pop
cmp
sub
push
loop
or
leave
mov
imul
popf
inc
push
add
aad
out
call
pop
sub
bound
and
lea
icebp
xchg
cmp
push
jae
xchg
mov
fwait
daa
in
lahf
imul
or
loope
mov
and
cmp
fildl
jb
pop
lods
xchg
sub
loopne
push
and
mov
add
push
ja
pop
std
mov
ficompl
push
test
add
push
mov
push
pop
jbe
arpl
inc
lahf
or
add
push
cltd
jmp
fildl
or
dec
ds
add
add
add
clc
das
xchg
and
mov
sarl
cltd
and
nop
lods
icebp
icebp
rcrb
in
cmp
sbb
inc
int3
or
dec
adc
mov
out
mov
pop
popa
scas
jle
into
mov
or
imul
lahf
out
push
xlat
aam
push
addl
je
jg
xchg
scas
pop
cmp
popa
lea
mov
lea
push
or
sub
lock
push
xor
xor
cwtl
add
call
andl
jbe
xor
xchg
fs
cltd
push
xchg
test
pop
push
into
dec
testb
cmpsb
out
dec
fcom
test
mov
pop
sub
in
jg
inc
mov
mov
and
mov
inc
out
add
cmc
repz
push
shlb
lahf
inc
popf
mov
rcr
lods
loopne
testb
mov
insb
jge
adc
mov
and
test
nop
lret
shrl
xor
test
je
bound
mov
mov
push
jg
dec
xchg
dec
test
ljmp
add
adc
xchg
fldenv
cmpsb
mov
adc
and
in
popf
or
jnp
push
cmpl
pop
inc
push
cltd
test
nop
add
sub
inc
xchg
xchg
xor
cmp
lret
test
cmp
call
push
mov
xchg
xor
pop
inc
fiadds
jge
cltd
push
jne
adc
mov
pop
pop
arpl
js
push
imulb
nop
das
ds
pop
jl
sbb
inc
outsb
inc
ret
sbb
push
sub
adc
and
arpl
insb
cmp
mov
aad
lds
jle
push
sbb
add
xchg
repz
mov
sub
scas
mov
cmp
or
adc
inc
dec
orb
popa
jg
cltd
dec
sbb
adc
mov
sbb
pushf
cmp
fcomi
xor
test
jbe
mov
inc
imull
add
iret
mov
fucomip
push
insb
xor
sub
pusha
xor
add
add
pop
inc
nop
fwait
mov
out
lock
arpl
mov
push
cmpsb
mov
dec
test
lahf
out
sbbl
enter
std
cmp
inc
xchg
jno
fisubs
std
outsb
or
adc
xchg
push
pushf
push
push
inc
cld
dec
push
loop
jne
push
icebp
mov
cmp
mov
stos
rolb
jno
clc
jo
dec
ret
cmp
aas
rorl
jmp
mov
jbe
fistpl
insl
jbe
mov
scas
cld
lds
dec
push
sbb
mov
or
loop
cmpsb
bound
popa
icebp
mov
mov
ret
sbb
xchg
jo
xchg
mov
xor
stc
repz
lods
inc
jne
shrl
inc
sub
pushf
jo
push
leave
in
or
dec
jecxz
fwait
popa
divl
push
faddl
std
xchg
lcall
fisttpll
xchg
fsts
xor
jbe
and
add
add
add
dec
out
iret
jmp
aas
in
push
mov
in
push
add
add
imul
insl
lods
and
cmp
test
and
inc
jne
sub
sub
in
and
adc
das
std
xchg
xor
xor
test
xchg
xor
dec
out
cmp
or
jae
scas
push
pop
mov
out
test
aas
imul
jmp
jns
and
pushf
ret
jecxz
cwtl
mov
push
out
inc
aas
cmpsl
pop
mov
vpcmpgtw
pop
mov
and
les
std
mov
cli
js
or
add
scas
pop
mov
es
pop
and
inc
mov
movsl
or
je
je
push
movsb
call
cmp
std
xchg
je
daa
gs
dec
push
pusha
sahf
mov
mov
movsl
rcrb
xor
mov
cltd
gs
add
push
xchg
cmpsb
xchg
int3
push
mov
add
out
jmp
fisubl
xor
pop
push
pop
stos
imul
imul
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
imul
add
add
ret
or
mov
xor
dec
pop
mov
sbb
or
daa
loope
jo
cld
xorl
inc
sbb
inc
inc
push
pop
and
pusha
imul
xchg
cmp
pushf
jge
and
rorb
add
int
jns
and
dec
cmp
arpl
data16
adc
imul
or
mov
add
fstp
xchg
lea
add
push
dec
shrl
push
nop
cmp
or
pop
jo
ret
sbb
inc
mov
jl
or
mov
inc
loop
add
subb
inc
xchg
pop
xor
lret
dec
xor
dec
or
pop
gs
push
ficomps
xor
jg
pop
movsl
int3
loopne
push
cs
push
loope
nop
es
and
rorb
mov
push
pop
sbb
fadds
dec
adc
add
out
xchg
add
add
in
lods
imul
neg
std
sub
dec
cmp
add
add
add
mov
mov
call
lcall
jmp
inc
test
and
lret
lret
repz
add
mov
clc
push
push
popa
sub
mov
icebp
xchg
sub
cltd
iret
dec
ret
or
ret
cmpsb
and
mov
push
loop
lcall
shrb
pop
ret
jp
imul
shrl
cld
pop
push
fiaddl
loop
daa
push
xlat
addr16
cltd
jmp
cmpsb
push
cmc
pusha
loop
addr16
cmp
sub
jmp
mov
sbbl
std
pop
je
sarl
and
lahf
pop
outsb
ret
add
out
stos
shrl
js
enter
push
fistl
aad
test
inc
jns
dec
jne
rcrb
es
scas
les
aam
mov
daa
in
push
push
subb
in
push
mov
mov
shrl
inc
insl
add
add
add
sub
mov
stc
daa
leave
inc
sbb
stos
mov
sbb
jp
push
adc
sbb
sbb
xor
out
and
lock
jl
pop
xor
js
test
and
jmp
int3
add
imul
inc
mov
into
call
fcomps
fdiv
es
sbb
xchg
or
sub
adc
push
sub
lret
cmp
loopne
xor
pop
repz
movsb
xor
fwait
dec
loopne
cs
iret
loope
xchg
inc
test
push
fwait
and
mov
inc
shl
mov
lret
aam
xor
daa
sbbl
adc
scas
and
ret
int
mov
cmp
jl
stos
sbb
cmpb
notb
mov
cmp
jne
bound
sub
jmp
adc
insb
repnz
stc
ljmp
cmp
and
pop
adc
scas
mov
fildl
and
add
add
ja
out
sbb
inc
xchg
inc
outsb
add
add
add
ss
loop
pushf
adc
add
movsl
data16
stos
cwtl
xlat
lret
ljmp
cmp
out
out
aaa
push
iret
pop
test
pop
pop
dec
aam
mov
mov
and
and
pop
aaa
cmpsl
jnp
call
frstor
adc
aas
adc
scas
mov
outsl
or
xchg
sbb
bound
cs
popf
mov
push
test
cmp
inc
scas
outsb
and
lahf
mov
scas
or
scas
and
xorb
daa
movsl
cs
outsb
sub
pop
push
adc
dec
movsl
xor
iret
sti
xchg
mov
inc
pop
inc
pop
jae
cmp
sarl
adc
push
insl
inc
sbb
hlt
or
lahf
jle
movsl
xor
test
rolb
xor
hlt
fisubrs
gs
insl
adc
push
lods
clc
cld
pop
inc
mov
inc
and
mov
mov
mov
sub
push
cmp
daa
sub
ja
mov
movsb
mov
dec
outsl
add
add
add
mov
sbb
scas
mov
jecxz
mov
out
test
dec
and
cmp
mov
imulb
sbb
clc
roll
sub
pop
mov
leave
xchg
add
push
call
popa
pop
push
insb
adc
and
mov
xchg
repnz
xchg
outsl
in
mov
repnz
cmc
mov
cvtdq2ps
std
mov
fldcw
dec
or
push
mov
sub
ret
push
push
pop
in
sbbl
xor
outsb
push
dec
xchg
xchg
sub
pop
aas
dec
xor
add
fisttpl
shlb
out
movsl
push
loop
mov
ss
dec
std
ljmp
js
mov
scas
aam
pop
data16
mov
sub
call
sub
sub
out
jne
sub
jle
subb
lahf
stos
sahf
mov
int
mov
jnp
outsl
cmpsb
loopne
fstps
dec
jo
add
add
lahf
aad
test
outsb
shrb
adc
sar
dec
and
or
leave
std
sbb
cli
mov
mov
stos
loope
xchg
push
mov
popa
psubb
jb
lcall
inc
gs
enter
repz
pop
lods
std
sbb
dec
je
dec
in
stos
mov
dec
sub
ficompl
push
mov
pop
push
cli
ljmp
pop
push
shlb
mov
mov
pop
pop
mov
adc
and
cs
outsl
xchg
dec
addr16
add
lahf
loop
pop
cmp
iret
clc
ror
lret
rcrl
inc
pusha
mov
push
fst
enter
mov
lock
and
xor
dec
inc
mov
pop
and
cwtl
or
push
rorl
int3
mov
push
cltd
add
imul
push
mov
shlb
sbb
add
jge
xor
xchg
enter
loop
es
cmpl
jb
xchg
push
mov
cli
xchg
jle
push
je
inc
aas
mov
add
add
in
lods
fsubs
inc
mov
mov
sub
pushf
lret
lea
cmp
inc
dec
xchg
or
ds
stos
ret
dec
popa
mov
mov
mov
add
test
push
dec
fs
sti
jmp
fdivrs
je
mov
dec
push
jnp
imul
test
jmp
test
sub
aam
rcll
cmp
pusha
xchg
sub
cltd
jae
lods
mov
pop
dec
sbb
xchg
pushf
aad
popf
pop
jb
das
call
sti
je
dec
leave
cs
je
or
dec
punpckldq
rcrl
pop
dec
adc
stos
pop
push
pop
dec
cmc
mov
adc
out
out
jg
lock
in
adc
dec
add
sub
inc
adc
aas
pop
jno
jge
inc
add
jmp
inc
aaa
dec
fwait
jnp
aad
sbb
cltd
stos
push
jb
add
add
or
sbb
shrb
dec
pop
xchg
rol
cmp
cmpsb
mov
mov
cmp
adc
inc
mov
loopne
or
outsb
jl
shlb
hlt
ret
mov
inc
lock
mov
inc
sbb
add
ja
and
cmpsl
mov
push
cmp
pop
mov
push
fdivrp
dec
ds
xchg
gs
arpl
and
lock
and
ja
push
xor
mov
ds
rcrl
and
lds
jge
je
inc
push
lods
pop
mov
js
dec
ficoml
movsl
lret
pushf
dec
inc
lock
xor
clc
scas
gs
aad
cltd
adc
repnz
mov
and
add
adc
cmpsl
cld
movsb
push
xor
aas
lcall
daa
add
jno
push
xchg
dec
or
js
mov
add
je
pop
hlt
mov
dec
dec
jmp
imul
dec
mov
pop
xchg
dec
mov
std
mov
sub
push
or
add
add
jmp
dec
sub
and
dec
out
mov
lret
mov
inc
out
insl
push
mov
ret
fidivrl
cmc
aad
push
aam
or
sub
xchg
cltd
jecxz
mov
mov
je
lret
jns
es
or
dec
leave
adcl
push
and
icebp
inc
shrb
dec
andb
sti
rep
movsl
imul
hlt
or
data16
pop
jecxz
fdivl
xchg
out
mov
pop
scas
lcall
les
cmpb
in
cwtd
xlat
or
icebp
movsb
add
cmp
mov
dec
push
mov
mov
ja
rcll
xor
and
movsl
in
in
mov
xchg
sub
push
sub
and
out
dec
enter
hlt
fwait
pop
xchg
mov
movsl
enter
mov
jp
mov
pop
popa
or
stos
pop
pop
push
repz
add
add
fstl
lret
ss
add
add
je
adc
into
sbb
faddl
sbb
lods
adc
int
adc
fucom
cmpsl
lods
pop
es
jecxz
pop
jnp
clc
iret
push
inc
push
sub
add
pop
call
out
add
dec
cli
pop
inc
aaa
jmp
mov
popa
ficompl
adc
gs
pop
movsl
ss
xchg
mov
mov
adc
dec
movsb
mov
and
pop
out
test
outsb
lret
cmp
mov
push
notb
mov
push
loopne
xchg
jl
lret
jge
popa
test
pop
xor
vcvtsi2sdl
jecxz
arpl
add
sbb
inc
mov
scas
dec
leave
jnp
call
cmpsb
jl
fisubrs
shll
pop
pop
adc
ljmp
shlb
lret
pop
add
enter
aad
out
mov
enter
xor
cltd
test
rorb
cltd
xchg
roll
add
add
bound
sub
sbb
jne
add
add
dec
jp
and
shll
jle
push
mov
sbb
sahf
into
test
pop
jae
notl
in
push
mov
in
add
sbb
ret
xchg
push
dec
inc
adc
inc
imul
jecxz
adc
sub
roll
mov
data16
dec
adc
jbe
and
mov
mov
pop
mov
mov
insl
call
dec
pop
test
aam
mov
push
pop
shrb
lret
ljmp
fld
xor
pop
add
xor
pop
mov
ja
mov
inc
hlt
pop
movsb
mov
inc
in
mov
sub
sub
imul
dec
mov
and
cmp
inc
sbb
loope
mov
movsb
or
xchg
js
adc
arpl
xlat
add
mov
rdpmc
jae
int
and
xchg
mov
xor
lahf
xchg
fstps
add
add
divl
in
sub
fs
add
add
lods
pop
popf
fcmovne
jge
sub
call
mov
inc
mulb
ljmp
in
faddl
movsb
sub
mov
lret
lods
movsl
dec
out
subb
mov
fildll
push
xor
add
aas
pop
xchg
mov
mov
fwait
daa
push
lds
cli
jmp
fsubl
adc
adc
mov
push
insl
mov
mov
movsl
stos
dec
dec
jmp
mov
cld
aam
push
or
dec
test
inc
test
lds
jmp
pusha
pop
or
ficompl
mov
sti
and
or
inc
and
add
sub
js
push
ds
mov
test
daa
push
sub
das
sub
scas
sarb
jecxz
and
xor
cmc
jg
pop
cwtl
cltd
mov
jnp
and
je
or
arpl
imul
add
add
fisubs
mov
mov
loop
push
add
add
neg
dec
push
iret
cmovge
call
mov
jecxz
gs
jns
cltd
popa
mov
mov
pop
scas
add
test
arpl
mov
movsl
stos
jl
fcom
lock
xchg
inc
add
cld
lret
mov
decb
popa
hlt
frstor
fimuls
cmp
ret
aad
and
insl
sub
pop
pop
sub
cld
cmp
loopne
mov
mov
mov
ja
xor
ja
cmp
cmc
int3
les
mov
mov
in
jo
and
arpl
xor
jae
or
rolb
push
cwtl
insl
pop
jb
shll
loop
pop
and
mov
and
into
out
mov
jecxz
mov
dec
out
movsl
push
out
repnz
xchg
cmpl
add
add
mov
outsl
jne
ljmp
or
add
add
popa
mov
test
jo,pt
addl
jo
or
push
xor
cli
cmp
fisubl
dec
inc
dec
jge
fdivrs
xor
in
adc
or
mov
lahf
int3
mov
push
mov
xlat
enter
ss
int
add
mov
cld
sbb
lcall
roll
aas
test
scas
leave
std
mov
adc
sbb
into
cmpsl
and
cmpb
lods
jp
mov
les
pop
jle
mov
push
inc
sar
push
push
mov
mov
mov
les
push
inc
rorl
or
into
xor
and
repz
sahf
jns
popf
pop
jnp
xchg
fldt
dec
nop
movsb
nop
sub
stc
and
sub
sub
dec
pusha
cmovae
xor
mov
ds
repz
out
pop
insl
jecxz
push
pop
cmp
add
add
testl
cltd
jo
add
add
add
xor
xchg
cmp
ljmp
arpl
nop
aaa
jge
imul
cli
mov
sub
pusha
enter
jge
in
fimuls
movsl
flds
xchg
and
sbb
or
movsl
sbb
xchg
cmp
push
push
cmp
mov
addl
add
push
aaa
mov
mov
pop
outsl
mov
rclb
fwait
add
sbb
jle
outsb
add
ds
iret
test
imulb
dec
ds
cmpsb
bound
fbld
fidivrs
ljmp
xlat
repnz
dec
cmp
adc
sub
movsb
es
dec
out
loope
in
jmp
jp
rorb
sti
lahf
or
scas
clc
sbb
mov
xchg
bound
pop
mov
lods
lock
mov
test
push
cmp
inc
ror
int
push
jbe
dec
pop
es
dec
adc
or
xchg
pop
fdivrl
pop
insl
addl
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
mov
xor
js
loop
movsl
mov
jb
dec
jo
fdivr
cmp
ret
mov
inc
out
shrl
and
ret
mov
pushf
mov
jg
jl
or
push
add
int
test
sbb
repnz
adc
mov
insl
xchg
enter
and
push
sbb
sub
push
dec
fisubs
push
pop
test
xor
xchg
jo
push
mov
or
push
or
imul
sbb
jmp
xchg
pop
xchg
dec
sub
push
xchg
std
adc
and
imul
cmpsl
mov
inc
lods
xchg
dec
out
add
dec
jns
inc
sahf
push
lods
push
test
insl
add
or
and
mov
cltd
repnz
mov
fadd
int3
arpl
lret
mov
cs
mov
pushf
stos
out
out
cmp
add
mov
cmpsb
push
sbb
push
dec
js
add
add
add
pop
ja
lret
and
xor
mov
call
add
push
inc
push
adc
clc
mov
add
cltd
mov
pusha
je
mov
jmp
inc
sbb
test
fimuls
or
call
jae
jp
adc
sbb
mov
add
sbb
aam
lds
lcall
cmp
add
lds
xchg
dec
pop
loopne
cmpsl
shlb
popa
je
and
aaa
popa
jmp
jo
dec
ret
ret
int
mov
imull
pop
ds
adc
or
lods
push
repnz
sub
or
push
gs
dec
and
js
aaa
mov
jb
jl
add
lret
in
rcl
mov
popa
pop
mov
cmp
jp
sbb
je
test
xor
imul
je
xlat
add
jp
pop
jecxz
cmp
mov
mov
arpl
add
add
cmp
cli
mov
cwtl
out
mov
jl
add
add
xor
test
lods
pop
jmp
outsl
push
xchg
sti
jge
inc
out
leave
sbb
fdivl
dec
cltd
lret
jecxz
lret
pusha
scas
clc
add
out
xchg
arpl
insb
cltd
faddl
rorb
mov
bound
sbb
in
pop
pusha
dec
or
loope
lahf
push
lret
sti
je
push
scas
add
mov
inc
adc
mov
xchg
fwait
jae
dec
iret
es
sbb
gs
push
sar
lods
pop
cmp
dec
repz
in
dec
jle
data16
jne
test
ret
scas
hlt
cmpsl
jmp
les
or
imul
push
pop
cmp
imul
mov
lock
xchg
mov
adc
fsubp
imul
inc
std
jae
cld
icebp
negb
pusha
push
int
clc
xlat
cwtl
mov
xchg
mov
and
cmp
dec
add
std
test
lcall
push
cld
pop
cmpb
add
add
push
ss
nop
es
in
cmp
gs
in
lea
sbb
dec
push
sub
jl
or
call
lods
cmp
pushl
inc
adc
jp
push
jae
gs
nop
sarb
jnp
test
and
test
aas
idivb
lret
fmul
mov
mov
in
mov
cltd
fwait
leave
sub
lcall
add
sbb
jge
lock
insl
inc
loopne
inc
mov
dec
dec
aad
cld
insb
push
push
mov
lds
sarl
in
mov
xor
dec
xor
nop
jns
leave
lds
stc
xor
sbb
test
pop
sbb
arpl
imul
xor
inc
jp
push
call
arpl
xchg
mov
or
mov
jo
aam
sahf
lods
sub
adc
add
add
xchg
xchg
jns
jmp
mov
mov
add
and
addr16
and
dec
ds
push
lods
scas
or
int3
cmpsl
jmp
ljmp
call
jae
jecxz
pop
sub
stc
pop
cmp
push
sbb
push
rcrb
iret
ds
push
mov
sbb
pop
call
vpsubw
cld
pop
xchg
stos
fdivrs
mov
sub
mov
and
dec
fimuls
addr16
push
jns
and
fs
add
mov
jl
bound
sbb
in
frstor
push
cmp
xchg
aad
fcmovnu
mov
sub
lcall
xchg
sub
mov
mov
add
inc
std
mov
mov
and
add
pop
xchg
stc
cmpsl
js
pusha
outsb
movsl
rcrb
scas
je
or
shrl
xor
roll
cli
cs
sti
sarb
mull
sub
bound
scas
lcall
adc
sbb
addb
add
add
push
daa
jae
cltd
fsubrl
push
jno
cmpsl
cmp
rolb
add
in
nop
orb
hlt
gs
cmp
loopne
fnstsw
mov
sbb
ljmp
ss
inc
push
cmpsl
or
sub
add
scas
out
leave
shlb
jmp
xchg
loopne
cmpsb
push
cmc
lea
in
subb
jbe
sar
mov
cmpsl
push
and
cmpsl
mov
pop
sbb
dec
scas
insb
adc
mov
pop
testl
add
jmp
cltd
ljmp
out
aam
addr16
xchg
pop
test
lock
push
out
or
and
jo
test
lahf
push
cmp
sub
popf
and
testl
mov
pusha
mov
pop
in
fmull
test
or
mov
inc
test
xchg
ret
xor
add
add
mov
idiv
jne
iret
jnp
call
add
add
mov
sbb
outsb
mov
dec
fiadds
inc
fnstcw
adc
xchg
lret
icebp
and
pushf
xor
int3
movsl
jno
mov
loope
fildl
in
lods
inc
arpl
lock
pop
push
inc
xlat
scas
and
dec
stos
call
ret
pushf
jp
mov
rorl
cmp
or
mov
test
sub
repnz
mov
sbb
ret
addb
pusha
insl
sarb
bound
jae
insb
cld
mov
sub
pop
adc
mov
xor
jnp,pt
xchg
loopne
pop
cs
xchg
xor
xchg
data16
fs
inc
aaa
gs
push
cmp
cmc
sahf
mov
pop
dec
xor
in
test
mov
mov
enter
jno
mov
enter
sub
mov
fadds
xchg
pushl
sub
jecxz
xchg
nop
addl
add
ja
dec
push
sub
xor
xor
sbb
mov
sbb
int3
iret
push
ss
stos
pop
int3
push
pushf
jbe
pop
aaa
sar
cs
insl
or
or
adc
std
and
pop
mov
xchg
lds
push
int3
jmp
mov
push
movsb
aas
push
testl
mov
out
xorl
cmpsb
adc
add
adc
push
popf
mov
dec
neg
pop
adc
je
inc
mov
push
shll
int
insb
mov
jp
fsts
pop
bound
ljmp
enter
repz
pop
sarb
loopne
aaa
inc
out
mov
xor
mov
clc
in
js
pop
int
xor
sub
or
clc
lea
fmul
popa
cli
sub
std
imull
push
sbb
in
sahf
mov
subb
iret
push
popa
or
loope
and
sub
mov
add
mov
jge
std
sti
iret
ss
push
jno
mov
add
add
add
adc
or
or
pop
adc
mov
movsb
jnp
lods
popf
fwait
push
and
pop
repnz
fisttps
sbb
sbb
lods
sub
cmpsb
pop
xchg
sub
fprem
data16
in
ret
jmp
es
mov
sbb
inc
mov
shll
test
jp
mov
mov
imul
inc
cmp
enter
sarb
frstor
push
idivb
mov
inc
push
into
mov
or
mov
push
data16
ljmp
cwtl
cmpsb
lret
push
rcrl
arpl
testl
gs
push
int
ret
ljmp
int3
push
movsl
adc
lods
aaa
out
enter
pop
mov
and
mov
xchg
inc
inc
scas
repnz
push
and
jmp
fimuls
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
mov
add
add
add
roll
or
js
xchg
je
mov
lods
and
xor
outsl
hlt
dec
addr16
iret
in
add
push
mov
arpl
rcll
lret
icebp
and
inc
insb
or
sbb
mov
insl
stc
fsubr
cmpsl
leave
cmp
int3
test
mov
rcrl
ds
add
lods
ret
add
movsb
shl
aam
mov
push
pop
jo
sub
dec
cmpl
xor
rcrl
xor
mov
js
or
loop
pop
roll
js
mov
arpl
cli
xchg
pop
leave
sbb
jge
jge
sub
fdivl
jo
frstor
and
fistpll
pop
lret
stc
cmp
int
stos
mov
adc
imul
rorl
cmpsb
loopne
frstor
mov
mov
mov
mov
divb
pushf
test
add
add
fbstp
xor
cmpl
pop
sbb
jp
rcrl
pop
shlb
frstor
in
jecxz
add
cmp
fsub
jbe
scas
arpl
and
pop
jle
rclb
or
add
leave
outsl
or
aad
std
inc
daa
adc
sub
data16
mov
mov
sub
mov
movl
inc
not
jae
push
mov
sbb
dec
pop
insl
cmc
mov
arpl
and
mov
jmp
mov
dec
cmpl
pop
mov
push
insb
mov
push
or
fldt
nop
dec
mov
lret
ret
rclb
xchg
and
sub
fisubrl
pop
cmp
notl
sbb
cmpsb
pop
xor
shll
push
xchg
iret
inc
imul
jl
inc
out
and
out
mov
cmp
add
pop
test
ljmp
lock
xchg
mov
out
mov
add
add
cmpb
mov
sbb
pop
lahf
jl
dec
stc
pop
nop
fwait
les
mov
dec
jbe
jne
je
cmp
std
adc
insl
xor
pop
adc
cmp
shl
fcmovne
cmpsl
addr16
sub
cltd
adc
testb
dec
iret
sub
cs
iret
xchg
jg
lods
sbb
jle
js
sbb
out
add
enter
push
ljmp
and
mov
pop
pop
cmpsl
or
cmp
fidivrl
xor
inc
mov
lcall
push
mov
xor
push
clc
push
dec
xlat
notl
test
mov
add
and
pop
ljmp
mov
ret
into
in
fmull
out
xlat
xor
pop
push
inc
add
mov
push
imul
add
imul
push
jnp
sbb
push
xor
das
mov
xchg
add
add
scas
push
into
fmulp
ljmp
pushf
pop
sub
xchg
inc
ss
mov
jge
adc
mov
jge
xchg
sar
cmp
movsb
push
sahf
cmp
xchg
stos
inc
mulb
lods
rcll
push
sub
mov
scas
in
push
lret
clc
and
inc
jmp
push
ror
cld
mov
btc
or
jmp
out
fdivp
arpl
test
cmpsl
int
sub
sbb
lret
ret
mov
mov
shrb
repz
pop
shlb
jmp
sbb
movsb
dec
jg
adc
jo
push
xchg
pop
sti
cmpsl
cmp
pop
subl
negb
mov
push
cmp
shlb
popa
inc
jo
fwait
in
ja
push
pop
xchg
sahf
mov
imull
or
xor
daa
cwtl
rcll
into
addb
xchg
int3
rep
push
dec
xor
inc
mov
cwtl
movsb
adc
cwtl
push
aas
or
mov
cmpsb
and
test
add
add
add
sbb
xchg
dec
and
sub
add
call
inc
add
cs
sbb
cs
testl
and
dec
call
or
inc
add
push
pop
insb
ja
ret
pop
sub
push
rcll
call
cmp
mov
loop
outsb
xchg
mov
repz
cwtl
mov
mov
xor
jle
dec
inc
xor
cltd
jg
xchg
dec
inc
push
stos
int
fisubs
in
scas
les
rsqrtps
and
add
mov
cmp
rol
dec
mov
jnp
adc
xchg
les
into
dec
pop
mov
adc
mov
rcrb
shrb
addl
pop
repz
fnsave
les
sbb
and
outsl
std
and
dec
inc
push
mov
add
add
push
outsb
fisubs
test
pop
mull
mov
add
add
xor
sbb
ret
jne
fs
mov
loope
daa
loopne
inc
pop
push
fsqrt
sub
mov
xor
xchg
andl
xchg
cmp
lret
dec
jnp
jne
mov
rclb
in
pop
ja
test
ret
inc
shr
lret
push
push
test
or
les
inc
jge
xchg
das
aam
mov
enter
mov
rcr
sub
mov
and
into
mov
mov
xor
jns
and
fstpt
roll
cmp
push
icebp
mov
push
push
sbb
sbb
push
shlb
xchg
xor
pop
sbb
fisttpll
push
les
xor
dec
and
cs
push
adc
dec
mov
and
xlat
push
mov
xor
loop
mov
mov
push
mov
pop
outsb
outsl
loopne
jno
cmpsb
fwait
cmp
mov
jns
ss
sub
add
add
mov
ds
add
xor
add
mov
adc
loop
lahf
inc
jns
mov
xchg
inc
sbb
xchg
dec
loop
test
clc
xchg
or
push
outsb
loope
adc
into
out
jno
stos
pop
cmp
sbb
jp
add
daa
or
xchg
lods
add
or
in
dec
cmp
test
fisttps
inc
xchg
pop
xchg
and
mov
xchg
mov
fisttpl
xor
pop
cmp
dec
in
negl
sub
cmpb
filds
sub
mov
dec
fs
sub
push
push
mov
jmp
in
sub
pop
inc
xor
pop
sub
mov
inc
insb
mov
nop
push
or
shrl
ret
orl
shl
out
push
xor
shrl
jge
fsubrs
enter
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
stc
adc
mov
add
add
add
cld
repz
xchg
or
movsl
jno
xor
dec
mov
inc
ret
notl
imul
jne
jne
fisubs
jmp
fistpll
fsubl
mov
shlb
xlat
and
add
jl
mov
rcl
adc
mov
xor
xorl
lock
test
sub
lods
stc
addr16
or
mov
xor
push
aas
in
add
mov
pop
add
adc
inc
and
xchg
les
pop
mov
xor
js
mov
lret
cwtl
and
or
dec
lds
and
push
and
push
mov
pop
inc
rorb
popf
pop
jmp
insb
xlat
fst
push
mov
dec
fistpll
ja
jae
fisttps
xchg
or
or
jae
sub
movsb
xor
xchg
jbe
insl
and
mov
mov
stos
int3
in
lods
push
dec
int3
addb
add
add
adc
std
out
ljmp
mov
add
add
inc
imul
mov
lret
cmc
les
push
sbb
fbld
in
fistps
or
sbb
mov
fcomps
repnz
sbb
mov
arpl
sub
popf
xor
pop
clc
rcll
push
push
mov
fidivl
jl
stos
fnstenv
insb
popf
adcl
mov
mov
mov
push
dec
scas
lds
sub
jo
and
in
and
sbb
mov
cs
stos
nop
xchg
test
jb
scas
dec
push
adc
xlat
test
adc
dec
cmp
pop
adc
push
add
popf
jnp
lds
dec
aad
mov
push
jg
push
out
push
addr16
sub
dec
add
cmpb
idiv
and
xor
movsb
mov
arpl
mov
mov
sub
lods
les
jnp
mov
icebp
sbb
shl
mov
add
add
lcall
test
popa
out
jne
cmp
add
dec
fwait
insl
les
push
int
sub
cmp
lret
mov
add
inc
jb
push
mov
fs
lods
ds
pop
pop
or
aas
sahf
cmp
dec
fs
and
out
inc
adc
sahf
jge
loopne
or
dec
loope
sub
rorl
mov
mov
cmpsb
mov
dec
in
stc
out
add
cs
mov
cltd
sbb
cmp
or
jo
pop
xor
mov
jno
add
lret
xor
movsb
lcall
mov
xor
scas
xor
inc
fstl
in
inc
popl
xchg
inc
mov
lock
mov
int3
mov
out
xchg
adc
mov
pop
cmp
addr16
jg
mov
sub
pop
xor
jl
inc
or
test
fcomps
add
adc
add
add
mov
xchg
xor
mov
push
and
lock
icebp
fisttpl
imul
and
mov
ret
push
scas
sub
sub
and
scas
inc
popf
push
pop
pushf
shll
adc
enter
dec
paddsw
sub
imul
or
xorb
push
push
mov
orl
adc
call
cmp
inc
lret
inc
jo
add
pop
ficomps
sahf
mull
test
scas
dec
cld
pusha
je
lods
and
stc
dec
dec
insb
pop
je
outsb
or
dec
ret
andb
hlt
in
jb
pop
jle
adc
out
sbb
push
push
ljmp
aam
subb
lods
xor
mov
push
ror
cmp
sbbl
enter
addr16
cmpb
stos
sbbb
xlat
xchg
dec
stos
xchg
arpl
push
ljmp
dec
mov
inc
sbb
mov
add
add
aas
jg
jo
xor
push
leave
cmp
pusha
dec
mov
jns
xchg
roll
sbb
cmpsl
mov
in
mov
cmpsb
mov
or
add
xchg
leave
jecxz
sarl
mov
adc
rcrl
mov
cli
mov
xchg
sub
icebp
jl
call
jecxz
and
mov
mov
sbb
or
xchg
adc
rclb
push
rorb
pop
xchg
lock
and
xchg
das
inc
inc
mov
inc
inc
popf
push
mov
mov
arpl
sub
add
lds
pop
rorl
movsl
push
push
cmpsl
dec
add
sahf
inc
fisttpl
loopne
cmpsw
in
jecxz
je
inc
aaa
xor
scas
gs
test
sbb
icebp
mov
inc
pop
mov
xor
das
seto
add
add
aaa
shlb
cmc
div
testl
daa
enter
add
add
sbb
and
dec
and
aam
outsl
or
sub
cmp
int
iret
cld
push
pop
xchg
imul
cmp
xchg
rolb
mov
dec
jnp
test
push
push
sbb
dec
push
dec
mov
push
int3
cmpsb
sbb
imul
xor
clc
mov
and
push
cwtl
or
scas
ljmp
test
pop
push
mov
pop
push
cmp
inc
mull
stos
cmp
mov
es
sub
push
xchg
xlat
sbb
cwtl
add
bound
xchg
dec
inc
dec
pop
pushf
ljmp
push
cmp
lock
cld
repz
mov
jo,pn
repnz
unpcklps
pop
insb
ja
mov
add
pop
or
jmp
sub
int
js
cli
inc
loope
int
pop
pop
addb
stc
add
jns
rcrb
roll
mov
and
loopne
sub
repnz
mov
sbb
add
add
push
sahf
rcr
pop
adcb
ret
push
int3
nop
add
add
add
out
xlat
and
adc
repnz
cmpb
cmp
leave
nop
push
lcall
lcall
sbb
pusha
fsubrs
ficompl
sbb
xchg
sub
test
loopne
test
inc
mov
push
adc
jcxz,pt
xlat
adc
lea
add
les
push
mov
lods
adc
xlat
dec
inc
movsb
ret
and
sti
xlat
pop
cmpl
and
push
int3
or
cltd
fildl
add
aad
and
lods
out
sahf
sbb
ljmp
divl
push
fisubl
sbb
dec
pop
inc
sub
sbbl
fwait
adc
xlat
repnz
fldl
dec
sub
and
sahf
add
cs
js
adc
or
jnp
mov
add
arpl
cmpsb
jcxz
fimull
rclb
add
ror
sub
lret
or
pop
sbb
sbb
cmp
adc
xor
cmp
dec
sbb
xchg
sub
sarl
inc
and
sub
loopne
xchg
gs
inc
mov
jne
jb
jbe
shrb
ja
cld
mov
add
inc
adc
adc
cmp
xor
clc
call
mov
sbb
rcrb
das
inc
decl
lahf
mov
test
fldt
and
lret
shl
push
popa
cmc
fisubs
test
sub
xor
movsl
push
out
push
sbb
cld
mov
daa
imul
sub
lret
stc
sub
loop
dec
adc
ja
cmp
and
ret
sbb
out
fwait
xchg
daa
fcoms
insl
cmp
inc
fidivl
add
add
clc
jnp
jg
in
cli
enter
leave
sub
aam
add
add
add
mov
out
jecxz
gs
dec
xchg
out
int3
rcl
test
dec
repz
cwtl
add
inc
std
scas
out
dec
lahf
addb
pop
inc
insl
pop
jle
fstl
push
adc
aam
jo
jecxz
push
gs
pop
and
xor
flds
cmp
mov
jg
jle
pop
fistps
rolb
jno
xchg
xlat
sahf
int3
scas
pop
fldenv
cmp
xchg
cmp
js,pn
movsb
xor
lock
jnp
lret
jno
insb
adc
test
inc
iret
test
xlat
dec
xchg
leave
xchg
xchg
push
in
lds
push
inc
pop
jmp
in
ret
xor
pop
shlb
xor
scas
xchg
add
sbbb
adc
in
push
sub
js
lods
xor
add
adc
psubusb
stos
mov
fwait
mov
in
insb
lods
das
ja
popa
pushf
shll
sbb
jbe
outsl
in
xchg
mov
ljmp
add
ljmp
cld
gs
mov
fcoms
add
push
bound
pop
cmc
xor
loop
xor
and
test
or
inc
test
pusha
add
add
lods
fcmovnbe
gs
rorb
decl
pushf
stc
cwtl
ds
mov
mov
sahf
cli
push
or
jle
cmpsb
adc
jbe
adc
and
leave
pop
and
test
nop
scas
stos
mov
or
add
or
popf
pop
jp
sub
je
and
sub
push
pop
movapd
in
pop
mov
dec
inc
scas
insb
ja
scas
push
add
mov
mov
scas
loope
push
cld
and
and
mov
dec
mov
inc
int
sub
lret
movsb
jae
cmc
mov
inc
or
pop
cmpsl
mov
adcl
mov
pop
mov
leave
roll
faddl
jl
sar
std
jle
pop
popf
scas
mov
add
add
add
xor
inc
sbbb
jo
je
icebp
sbb
dec
movsl
mov
inc
cwtl
adc
and
aad
xchg
fimull
fsubl
pop
stos
ret
pop
test
push
hlt
aaa
enter
lds
cmp
xor
clc
rolb
mov
and
mov
add
das
mov
inc
pop
jmp
movsb
pop
in
cmpsl
fidivl
jnp
xchg
popw
addr16
lods
sbb
jle
test
jne
pop
outsl
cmpsb
inc
ret
int3
mov
loopne
test
and
outsl
mov
or
lock
movsb
loope
dec
or
js
mov
hlt
sub
es
std
mov
cmp
pop
add
jo
cmp
out
push
mov
cmp
test
cltd
out
and
adc
inc
xchg
mov
push
insl
xor
pushf
jns
pop
pop
aas
sbb
ljmp
gs
pop
push
fnstsw
pusha
shlb
cmp
jge
cmpl
je
add
add
cwtl
or
stos
xchg
cmp
in
or
imul
add
add
add
pop
fcompl
fnsave
movsb
test
movsl
outsl
pop
pop
xchg
xchg
shll
mov
test
jne
jl
mov
bound
int
xlat
scas
cwtl
inc
adc
pop
in
out
aad
int3
sub
xchg
sbbb
adc
mov
adc
jle
dec
pushf
iret
xlat
jbe
and
nop
jmp
cmpsb
cmp
repz
call
jmp
or
jns
popa
mov
xor
mov
push
outsb
fists
fistps
pop
fnstsw
jg
sub
xor
movsb
and
fists
add
mov
inc
scas
push
pop
test
pop
jge
inc
jns
jge
mov
sub
jp
test
shrb
sbbb
mov
mov
popa
jl
loopne
lea
push
scas
cmp
push
add
push
xchg
sub
sahf
hlt
mull
cmp
call
add
outsl
sti
mov
mov
and
xchg
add
add
add
mov
pop
ficoms
repnz
push
jno
adc
xlat
or
mov
inc
rolb
or
pop
dec
cmc
sbb
daa
fwait
nop
mov
or
rolb
push
clc
mov
mov
mov
mov
pop
in
dec
les
cmp
lods
and
inc
mov
cld
sbb
mov
ficoml
dec
pop
and
cmp
cs
int
sub
outsb
push
aad
notb
inc
inc
add
mov
inc
jae
hlt
mov
cmp
add
insl
outsb
or
ds
clc
pop
jge
leave
push
das
dec
xchg
jecxz
mov
xlat
add
stos
jo
test
cwtl
ja
sbb
lret
iret
or
pop
hlt
adc
subb
lea
loope
push
fiaddl
sbb
das
sbb
pop
push
test
pop
arpl
addr16
add
iret
or
add
add
dec
std
out
xlat
aas
dec
sbb
or
call
add
add
cmp
addr16
xchg
cmp
sahf
ja
fs
popa
ror
dec
mov
pushf
aam
sbb
test
dec
jp
jb
ss
int
mov
xor
mov
test
pop
cmc
sbb
pop
cltd
mov
sbb
popa
push
pop
icebp
repnz
and
rcrb
mov
xchg
dec
call
daa
pop
negl
cmp
sbb
inc
loop
lods
movsl
mov
movsl
mov
pop
cmp
inc
aas
mov
jno
mov
call
shlb
repnz
jnp
cmp
mov
adc
lcall
lcall
push
push
iret
jp
pop
pop
into
ja
test
sti
xor
cmpsl
sub
jp
xchg
mov
arpl
adc
stos
xor
cmp
push
cmp
lcall
lret
and
mov
pop
xor
dec
dec
push
jl
jecxz
in
xchg
lock
testl
sbb
add
mov
mov
jmp
test
push
dec
sub
cwtl
add
add
add
pusha
cmp
push
adc
mov
fwait
jmp
repnz
adc
sbb
dec
sub
mov
lock
lock
mov
lret
push
jp
iret
jbe
sbb
repnz
jo
xor
adc
inc
js
sub
cld
pop
or
push
adc
nop
jne
cmc
mov
xchg
sbb
or
adc
dec
mov
loopne
and
fsubr
pop
or
and
sbb
ret
xor
jl
sub
xchg
dec
pusha
bound
and
jg
mov
dec
std
ljmp
xchg
scas
lods
fiaddl
sub
sbb
mov
jne
push
pop
sbb
mov
out
inc
xchg
sbb
xor
ss
or
xlat
jb
jne
inc
lcall
and
sahf
std
or
pop
inc
adc
roll
add
add
lret
sbbl
popl
sbb
cltd
add
add
add
and
and
shl
xchg
sahf
ds
fs
adc
daa
push
pop
sti
or
cmc
push
mov
cmpb
test
push
ljmp
xor
xorl
mov
ja
outsb
and
in
stos
mov
jno
fwait
adc
in
pop
out
ja
inc
je
jae
cmpsl
push
int3
enter
loope
sbbb
daa
idivb
cmpb
imul
pop
popf
into
hlt
out
jae
std
imul
and
and
and
dec
sbb
lea
inc
dec
lods
das
adc
addl
lahf
cmp
mov
repz
mov
rorb
movsl
int
pop
out
sub
pop
xor
jns
dec
sbb
mov
and
xchg
into
ret
cmp
cmp
and
outsb
mov
push
roll
and
sti
or
lcall
dec
test
add
mov
imul
movsb
and
ret
jp
movsb
hlt
lcall
int3
aaa
imul
push
pop
adcb
mov
cwtl
fs
in
pop
xor
mov
sub
dec
sarb
sub
scas
sbb
inc
out
and
mov
fiaddl
inc
push
or
int
push
movsb
clc
jmp
enter
or
add
in
inc
mull
sbbl
and
ret
lds
addr16
and
popa
mov
push
into
inc
idivb
inc
xchg
je
xor
mov
mov
outsl
and
fidivrs
lea
dec
sbb
xchg
mov
fs
jp
push
cmp
add
insb
icebp
dec
pop
enter
dec
jo,pt
ret
push
rorl
leave
es
sbb
aas
popa
sbb
inc
mov
mov
outsl
pusha
or
cmp
pop
aam
sbb
setle
je
inc
scas
push
loopne
add
add
mov
sub
lahf
mov
sbb
clc
fwait
add
add
add
and
pop
adc
rcrl
push
in
cmp
jmp
push
cmovle
loope
pop
cmp
invd
sbb
mov
sub
js
out
enter
pop
mov
out
push
out
cmc
xor
mov
movsl
int3
pop
adc
cmp
andl
rcr
jl
jns
and
jae
dec
xchg
and
sbb
pushf
jne
daa
push
cwtl
jo
xchg
pop
cmp
push
xchg
fbstp
mov
popa
jg
cs
aas
pop
sub
test
daa
pop
insl
pop
pop
dec
sub
mov
dec
lahf
lcall
js
out
insb
or
pop
adc
adc
cmpsb
insb
imul
call
inc
pop
outsb
icebp
aaa
jo
jo
popa
dec
jae
sub
test
pop
mov
mov
sub
lahf
nop
ficomps
ret
jl
pusha
das
xor
sub
arpl
movb
add
cltd
sub
out
inc
sub
or
repz
dec
cld
pushf
add
add
add
lret
aad
pop
and
xchg
jb
in
mov
inc
jae
mov
add
push
cs
sbb
push
jmp
inc
mov
or
sub
inc
mov
test
imul
cmp
jp
inc
inc
test
ds
icebp
pop
jbe
arpl
or
mov
xor
sbb
push
push
psubw
pop
push
in
pushl
repz
sbb
in
rep
test
lods
xchg
je
push
add
cmpsl
aad
add
mov
mov
lret
loopne
sbb
adcb
ds
cltd
call
cmp
xchg
adc
mov
inc
dec
xor
stc
mov
inc
gs
pop
enter
sbb
push
and
pop
rcr
sbb
cwtl
cmpsl
jne
or
xchg
pop
cmpsb
xchg
cmp
mov
mov
mov
add
loop
test
mov
cld
mov
add
add
push
pushf
mov
enter
mov
push
push
lcall
out
gs
and
int3
movsl
popa
sbb
jbe
mov
sub
push
ret
lock
xchg
test
negb
mov
call
or
xchg
adcl
xchg
dec
cmpsb
stos
xor
jecxz
xchg
mov
push
mov
jne
or
jle
insb
jns
jecxz
jnp
sahf
fldcw
inc
jl
data16
sbb
push
ret
int
dec
push
pop
or
xchg
push
std
ret
and
xchg
pop
or
mov
imul
bnd
mov
mov
add
mov
lds
ds
or
ret
jbe
pop
lds
add
in
pop
pop
mov
sbb
mov
mov
fisubs
inc
push
mov
mov
push
or
ds
fs
sbb
pop
or
lcall
insl
jp
add
add
add
add
push
sub
stos
and
jns
ds
dec
add
pxor
xchg
repz
push
mov
and
inc
jecxz
fimuls
popa
addr16
push
xor
add
pop
sbb
fcoml
shrl
rcrb
dec
fisttpl
push
rcrl
push
dec
adcl
cmp
inc
popa
jecxz
fidivs
dec
andb
jo
int
pop
dec
inc
cwtl
jnp
xor
jo
test
arpl
roll
sbb
inc
fistps
lock
mov
cmp
push
mov
dec
or
add
sbb
imul
outsb
dec
push
push
fwait
xchg
cwtl
aas
cmp
or
int3
mov
aaa
jl
scas
cmp
pop
mov
fldenv
outsb
xor
inc
xchg
shrl
mov
in
les
push
jae
incl
aam
push
addr16
aam
ss
movsb
mov
mov
inc
inc
add
mov
add
push
movsb
lahf
aam
call
stos
cmp
inc
gs
push
out
push
hlt
and
mov
lods
xchg
add
cli
loope
lock
jle
ja
xor
rclb
data16
sti
dec
ss
jmp
cmp
stos
stos
aad
xor
cwtl
jle
and
lods
in
lods
mov
inc
mov
mov
test
pop
add
adc
idivb
xor
mov
dec
sub
lock
sbb
gs
clc
dec
insb
xor
les
adc
push
dec
inc
mov
imul
outsl
mov
jp
mov
pop
mov
pop
xor
fwait
fwait
lods
xchg
sbb
push
inc
scas
adc
xor
adc
adc
mov
fs
jae
scas
or
and
jo
test
push
sub
pop
mov
popa
dec
push
xor
pop
andl
or
sbb
inc
mov
into
cld
or
add
add
add
sbb
ss
push
in
mov
and
cltd
inc
sub
push
or
add
or
aam
ljmp
std
lds
loope
out
xchg
sbb
popa
nop
xlat
mov
pop
mov
pop
fsub
inc
mov
push
lods
shlb
push
and
or
dec
adc
cmc
hlt
cmp
dec
dec
mov
mov
sbb
mov
push
adcl
fcmovne
call
jecxz
mov
cli
dec
mov
clc
lret
and
mov
scas
lcall
sbb
push
pop
jns
xchg
xchg
cld
dec
in
and
or
dec
pop
mov
sub
and
int
sbb
sbb
aaa
jl
mov
push
sub
mov
and
or
std
push
xchg
popl
jnp
cmp
call
test
and
pop
xchg
loop
xchg
in
fucomp
mov
movsl
popa
mov
push
inc
fdivl
push
dec
mov
adc
add
shrl
pop
repnz
out
mov
xchg
cmpsb
outsl
and
pop
cmp
leave
dec
sti
loop
cmp
out
cmp
out
inc
fchs
or
jle
loope
xchg
xor
sub
outsb
nop
add
push
into
call
out
inc
fisttps
lcall
outsl
std
orb
mov
mov
and
jb
xor
dec
pop
cli
ret
push
mov
lds
adc
pop
rcr
ljmp
adc
and
inc
loop
sub
stc
inc
and
mov
pop
mov
xor
xlat
and
rolb
out
lcall
daa
adc
mov
jecxz
sub
lock
test
mov
out
mov
enter
mov
mov
cld
lods
xor
add
mov
ja
jno
cld
out
cmp
packssdw
ds
mov
jl
jbe
aaa
mov
add
add
sbb
mov
sbb
pop
call
add
add
mov
subb
jnp
push
sbb
ret
fdivrs
aas
pop
xor
incb
cmc
jg
inc
mov
scas
les
sub
mov
or
ja
scas
int
xchg
push
test
adcb
dec
jne
out
xor
scas
mov
push
inc
ret
sbb
xlat
pop
addr16
mov
out
sub
jl
repnz
addr16
jmp
nop
mov
imul
addr16
es
adc
lea
int3
or
test
imul
aam
jmp
sub
jo
fucomip
jno
mov
aas
div
nop
or
push
cmp
adc
push
and
cltd
mov
cld
dec
jae
outsb
ja
pop
cmp
ret
cmp
jbe
fsubl
cmpsl
iret
lret
stos
imul
xor
pop
test
stos
hlt
jmp
cmp
jbe
cwtl
jg
sbbl
add
add
add
dec
notb
jg
mov
dec
out
jmp
ret
xchg
cmp
iret
lret
dec
add
repnz
jle
roll
mov
xchg
adc
rorb
insb
push
aam
cmp
push
testb
add
inc
pop
mov
mov
add
mov
dec
ldmxcsr
pop
pop
bound
xor
or
mov
mov
mov
rcll
jo
js
lret
addb
mov
mov
jbe
jns
mov
scas
fiaddl
call
cmp
jbe
adc
fidivrs
addr16
and
imul
jb
insb
testl
cli
add
sub
jg
insl
xlat
inc
pop
jmp
add
mov
fsubrs
push
jecxz
imul
xchg
xor
dec
mov
jae
in
dec
lods
sbb
cmp
mov
add
out
xlat
out
jg
in
xor
flds
dec
jno
sbb
add
add
add
adc
mov
pop
add
arpl
popf
ret
and
jge
mov
xor
push
mov
inc
movsl
push
ror
repnz
mov
push
popf
sub
xchg
scas
test
dec
pop
mov
mov
push
push
mov
jnp
add
iret
aad
push
xchg
mov
cmp
stc
dec
cmpsb
fstpt
jnp
ret
icebp
sub
push
out
popf
jae
jnp
icebp
pop
pop
in
iret
inc
adc
adc
or
fsub
jl
in
repz
out
sbb
mov
xor
les
ss
cltd
xchg
stos
sbb
jno
pop
mov
pop
subb
fmull
dec
leave
sbb
and
clc
pop
scas
or
jae
sub
idivl
mov
sub
mov
push
push
adc
inc
and
in
push
into
divb
push
sub
pop
push
loope
insb
sbb
dec
sbb
push
scas
sbb
pop
fbstp
fldl2e
adc
addr16
and
add
cmpsb
dec
inc
dec
enter
xchg
adc
mov
cwtl
sub
adc
icebp
and
repz
repz
or
push
cmp
cmp
sbb
or
lahf
cli
adc
dec
outsl
add
push
dec
cmp
xor
jle
mov
jne
fstl
xor
outsl
decb
jecxz
addb
out
lret
xor
cltd
pop
xchg
jp,pn
imul
insb
xor
adc
pop
push
mov
mov
sub
sti
cld
xchg
imul
mov
fsubl
movsb
enter
mov
xchg
and
mov
sbb
pop
cltd
add
dec
mov
lea
sub
dec
sbb
mov
sub
out
icebp
sti
dec
mov
and
mov
mov
dec
dec
xor
cmc
mov
loope
cmp
sbb
jl
mov
mov
add
mov
fadds
and
add
add
add
dec
sub
pop
mov
push
pusha
pop
sub
pcmpeqb
cltd
cmc
mov
scas
xor
das
pop
adc
inc
xchg
pushf
sbb
xor
xor
cmp
mov
out
mov
test
sub
push
pop
insb
mov
mov
xorb
and
sub
hlt
xlat
fadd
jle
xor
movsl
or
push
cli
addr16
mov
ss
hlt
push
pop
lcall
jae
sbb
icebp
mov
cltd
idivl
mov
dec
hlt
dec
loop
ror
dec
mov
or
pop
xlat
sub
inc
test
addr16
inc
out
sub
pop
jbe
adc
sub
adc
std
push
fstpl
aas
mov
fwait
nop
movups
stos
jl
or
push
das
push
dec
jo
scas
mov
das
push
inc
cmpsb
gs
int
jns
inc
jnp
lcall
push
lret
jnp
sti
jmp
push
mov
imulb
xchg
add
add
out
insb
mov
jp
insb
inc
enter
add
aaa
sub
shrl
mov
rorb
cmp
test
cmp
jne
movsb
data16
xor
je
inc
jmp
inc
popf
sub
mov
lds
jl
cmp
push
mov
sbbl
out
mov
fs
mov
pop
jp
fs
adc
mov
cmp
push
xchg
loope
xor
mov
pop
scas
or
cltd
pop
ss
xlat
adc
inc
xchg
add
imul
xchg
and
cmp
jbe
sbb
jge
fdiv
and
sub
dec
inc
fistpl
push
xchg
test
loopne
add
scas
divl
movb
loopne
jle
mov
enter
jo
jns
add
xchg
mov
jne
mov
iret
fadds
sbbb
push
ljmp
loopne
mov
jecxz
lock
dec
mov
add
add
add
xchg
dec
insl
jmp
popf
push
sub
insb
aam
daa
jecxz
jmp
cmc
dec
insb
push
mov
dec
dec
cmp
mov
pop
fs
decl
xchg
add
or
call
mov
test
mov
or
xlat
movsb
std
xor
into
inc
pop
or
and
jecxz
pop
sub
std
pop
sbb
stos
sub
lahf
xchg
pop
mov
sahf
cs
dec
repnz
lds
xlat
jns
mov
and
pop
and
arpl
xchg
sub
jo
ret
mov
mov
fcmovnbe
mov
pop
shrb
call
xchg
imul
clc
imul
and
mov
sub
lock
subl
insl
js
call
scas
xchg
mov
jne
mov
push
jb
xor
std
ret
sub
mov
cmp
mov
adc
mov
cld
mov
leave
pop
mov
xchg
xor
add
scas
sbb
fiaddl
cli
sbb
stos
xchg
and
jnp
pusha
mov
outsb
fsubl
xchg
insl
fcompl
leave
enter
dec
cmp
fwait
mov
ss
and
push
sbb
fwait
lret
xchg
pop
push
lods
mov
movsb
rcll
shll
fwait
dec
shl
add
xor
pop
ror
and
cwtl
call
aam
shlb
xchg
xchg
insb
lret
bnd
xchg
push
or
inc
test
jp
outsb
in
cmp
sbb
icebp
mov
cmp
movsb
sbb
scas
gs
push
and
fisttpl
lock
add
push
mov
mov
movsb
push
xor
lret
push
xor
push
gs
or
mov
jl
sub
jle
test
sub
pop
mov
add
fwait
std
push
dec
rolb
aad
lahf
cmp
stc
dec
scas
cmp
inc
imul
add
mov
push
push
mov
dec
das
pop
out
cmc
mov
xchg
ja
repz
add
add
add
mov
dec
int
xor
arpl
fstl
loope
ffree
mov
fsubrs
sbb
inc
mov
adc
adc
out
ret
xor
xchg
push
cmp
ret
jns
cmpsb
call
inc
fnsave
into
mov
inc
in
loope
test
push
jmp
lods
imul
imul
mov
je
mov
clc
cmc
pusha
xchg
imul
lcall
stos
add
push
sti
sti
popa
mov
or
adc
or
lods
ret
roll
mov
addr16
aaa
xor
mov
fcmovbe
mov
pop
add
push
cld
cmp
mov
mov
outsl
pop
inc
adc
in
pop
sbb
test
lds
call
les
mov
sar
fucomip
std
dec
std
pop
lcall
xchg
pop
push
jo
cmp
add
add
mov
int3
xchg
ficoms
inc
daa
scas
sub
mov
pop
aas
enter
add
sbb
xchg
add
lcall
out
in
sysret
mov
lods
in
sub
test
shll
out
test
inc
dec
test
js
icebp
insb
mov
fldcw
inc
jmp
mov
jg
scas
and
call
cld
jo
or
push
mov
cmc
mov
lock
pop
or
scas
lods
out
dec
iret
sbb
jns
pop
and
push
fnsave
sub
jo
mov
movsb
xchg
into
adc
les
and
jns
cld
mov
aaa
cmp
sbb
pushf
sub
cld
cmp
mov
ljmp
or
into
mov
popa
mov
sub
or
fidivs
loop
ljmp
or
lods
add
add
add
loope
mov
insb
mov
aas
sbb
jbe
jo
inc
fst
pop
mov
sbb
jne
cwtl
cmpsb
xchg
je
jp
mov
mov
mov
adc
clc
mov
mov
std
mov
inc
fstps
push
mov
jo
stos
je
xchg
dec
mov
lods
enter
and
pushf
rolb
mov
sbb
fwait
out
cld
sub
cmp
loop
sbb
sbb
jmp
insb
mov
test
stos
call
adc
or
aad
inc
jp
je
test
out
ds
xlat
xchg
xor
xchg
push
sbb
add
aaa
jmp
sub
pop
mov
fidivs
nop
push
nop
pushf
arpl
lds
divb
cld
inc
and
ffree
dec
push
in
push
in
jecxz
mov
aam
push
pop
pushf
sbbl
push
xchg
jg
jmp
std
mov
bound
add
add
bswap
jl
test
hlt
lahf
add
shrl
mov
cmpsb
dec
pop
imul
push
cwtl
fdivrp
add
fs
icebp
ljmp
into
xchg
mov
xor
cmp
out
mov
cmc
rclb
mov
cmp
jne
mov
loop
loope
xor
stos
cmp
repz
imul
or
mov
mov
mov
int
push
mov
fsubrl
pop
or
or
lcallw
fwait
hlt
cmp
push
jbe
add
loopne
push
clc
and
jns
shrb
push
cmpsl
enter
ret
ss
push
loop
aam
sub
fstpl
mov
xchg
push
mov
int
outsl
in
mov
add
bound
addr16
xchg
sub
add
add
xor
inc
mov
rolb
add
add
pop
negl
lret
test
movsb
xchg
push
xchg
aaa
ror
adcb
xlat
sub
mov
fstpt
call
mov
push
jp
test
incb
pop
dec
es
pop
imul
leave
aam
pop
in
xchg
cwtl
daa
mov
mov
add
cmp
roll
mov
icebp
pusha
jl
push
xor
int
sbb
pop
aad
pop
stos
fadds
xor
ljmp
in
fistpl
mov
adc
dec
sub
xlat
je
dec
setae
lock
je
cli
adc
xchg
dec
xor
pop
mov
dec
cmp
in
xchg
fmuls
outsb
jmp
push
jae
ficoml
jno
pusha
lea
add
roll
pushf
outsb
negb
mov
lock
sub
mov
fiaddl
jge
mov
inc
sbb
out
and
aas
adc
decb
shlb
aad
and
xchg
push
pop
xor
cmp
inc
call
pop
dec
mov
add
add
das
or
vmovq
mov
imul
cmp
mov
adc
dec
ss
shll
int3
in
iret
jle
out
jl
sub
adcb
jns
mov
test
add
pop
hlt
imul
lea
imul
out
lahf
lcall
loop
push
xchg
cli
jge
pop
rclb
sbb
xchg
stos
fildl
mov
sub
lret
sbb
mov
out
jo
das
les
xor
xor
and
cmp
iret
bnd
xor
mov
add
fsubr
and
xchg
aas
lods
add
out
sub
add
mov
lods
outsl
or
and
insl
mov
mov
pushf
mov
sbb
cmp
pop
cltd
and
adc
xchg
mov
pop
dec
mov
movsb
es
les
mov
arpl
mov
add
add
add
push
aad
push
and
addl
or
add
add
cmp
jg
or
ds
sub
push
xchg
jae
daa
push
or
stos
xchg
xor
xor
or
ds
mov
and
arpl
lret
sub
stc
sub
sbb
or
mov
mov
loopne
dec
jb
and
adcl
xchg
outsb
sub
jl
pop
push
xchg
add
mov
xor
push
mov
mov
cs
lahf
inc
adc
lock
aad
fbld
popa
call
outsb
enterw
or
lahf
dec
js
inc
inc
stos
push
and
faddl
cld
insl
leave
mov
aam
jo
test
and
mov
lds
jge
jecxz
cmpsb
dec
addr16
jge
dec
mov
dec
or
pop
stc
out
push
pop
bound
dec
push
mov
add
add
jno
mov
fdivrl
repz
dec
enter
xlat
rclb
test
push
stc
cltd
imulb
and
dec
cmp
xchg
xchg
jle
mov
daa
xor
mov
aad
and
xchg
push
xchg
rclb
mov
mov
aad
test
sub
adc
negb
ja
xor
hlt
cmp
out
ffreep
push
jbe
stos
push
jne
mov
xchg
call
cltd
push
aad
and
xor
cmp
int3
mov
cmpsb
int3
fimull
dec
jnp
xor
sbb
jb
std
jmp
cld
xchg
aaa
mov
add
or
pop
dec
out
aad
test
push
jbe
dec
std
sarl
xor
and
dec
pop
jne
into
pop
xor
jno
pcmpgtd
mov
ss
out
shl
loope
xchg
cwtl
lcall
mov
mov
add
add
push
mov
lcall
push
push
mov
add
add
pop
addr16
dec
inc
sbb
or
cltd
push
rcl
dec
sbb
sbb
mov
push
inc
mov
xchg
sub
test
cwtl
xchg
mov
dec
sub
push
sahf
jbe
mov
and
xchg
inc
mov
aas
xor
adc
shr
push
in
adc
sub
fimull
push
ljmp
das
jb
pop
mov
mov
mov
aaa
enter
lret
lret
enter
push
and
loop
test
mov
ljmp
sub
xor
outsb
loope
push
fdivrl
adc
jns
mov
mov
add
stos
xchg
sbb
mov
repz
fdivl
data16
cmp
jnp
pusha
std
repnz
adc
cmp
fcompl
sbb
push
aas
repnz
xlat
test
sub
and
cmp
xor
sbb
push
clc
xor
lret
add
xorl
insb
lret
mov
pop
mov
add
add
and
outsl
in
cmp
imull
inc
fsub
xchg
loopne
cmp
or
jl
sbb
xor
repz
mov
movsb
repnz
add
inc
adc
mov
lret
adc
cmpsl
xlat
rolb
addl
stc
in
sti
lcall
push
add
rorb
es
mov
insb
xor
clc
mov
xor
addb
daa
jnp
mov
sarb
std
nop
das
add
adcl
add
mov
sti
cli
cmp
sbb
mov
roll
fistpll
pop
rclb
mov
or
xchg
mov
repz
jmp
mov
scas
or
fnstcw
repz
dec
shll
adc
push
test
rcr
sbb
shlb
in
pop
hlt
daa
adc
mov
pop
mov
outsb
adc
sarl
dec
pop
pop
sbbl
fstp
rorl
mov
pop
mov
add
add
xorl
dec
aam
sbb
sbb
mov
daa
test
pop
loopne
push
outsb
cwtl
repz
xor
xchg
out
shl
jbe
xlat
sub
adc
stc
rclb
mov
push
mov
mov
inc
test
out
scas
sub
dec
add
inc
cmp
sub
adc
rolb
jnp
dec
and
popl
popa
mov
add
mov
shll
in
pop
inc
xchg
push
adc
inc
mov
inc
or
enter
push
out
mov
mov
sahf
ret
mov
mov
add
add
je
pop
inc
dec
sub
or
pop
in
mov
filds
aam
idivl
pop
insb
mov
lcall
mov
inc
xchg
xor
ja
xchg
mov
out
sub
sub
icebp
lcall
aas
pop
adcb
test
add
add
in
mov
jecxz
out
mov
mov
add
add
add
jnp
mov
movsl
test
pop
iret
push
in
sbbl
mov
rol
sub
cmp
and
xchg
xchg
aas
icebp
mov
xor
leave
pop
sbb
lods
arpl
loopne
or
andb
clc
adc
fwait
enter
mov
jne
and
xchg
jb
cmp
xchg
xchg
mov
data16
mov
aam
aaa
aad
adc
aas
loope
popa
rcr
enter
add
pop
mov
gs
das
adc
jbe
push
in
or
cmp
stos
hlt
mov
icebp
mov
fstpt
jl
jge
cmpb
mov
das
hlt
ret
fcmovnbe
push
loope
xchg
ja
mov
jg
sbb
xor
mov
inc
cwtl
insb
push
mov
pop
cmpb
mull
rcrb
or
xchg
pop
lret
cmp
imul
push
sti
int3
jbe
push
xchg
test
jg
into
lret
orl
add
add
js
pop
je
sti
dec
pop
push
sub
bswap
cltd
add
ljmp
sub
stos
lret
rcrl
loopne
xor
dec
out
dec
mov
cmp
sub
lret
xchg
adc
xchg
and
xor
jle
jae
sbb
cs
cmp
mov
mov
inc
pop
mov
push
sbb
add
sti
int3
mov
std
push
ss
or
test
aad
sub
repnz
dec
ljmp
adc
leave
outsl
repz
mov
bound
inc
add
in
pop
mov
mov
test
lods
pop
sbb
xor
cmp
jecxz
dec
dec
jno
add
sub
in
pop
ficompl
dec
insl
xor
pop
lods
adc
mov
pushf
pop
es
enter
ret
xor
enter
lcall
adc
mov
mov
adc
inc
lock
in
lcall
jae
dec
mov
mov
push
add
add
push
mov
dec
pusha
fwait
pop
jmp
pop
jns
xor
fs
sub
sbb
add
testb
jb
into
sahf
fwait
cmp
pop
test
stos
sub
sahf
jmp
jo
dec
jo
movl
or
xchg
and
rcrl
adc
mov
xchg
cmp
daa
jl
sub
push
inc
test
and
cmp
xor
mov
cmp
scas
stos
jp
dec
lret
dec
sti
lret
sarb
xchg
push
mov
cmp
lods
arpl
scas
test
cs
pop
and
daa
jnp
push
cmc
add
xor
adc
add
jns
leave
lock
idivl
dec
ss
dec
xor
fyl2x
inc
ss
scas
test
outsb
cs
into
icebp
adc
mov
jb
sti
pop
xchg
andb
adc
push
daa
cmp
or
push
sahf
jg
add
and
add
sub
jg,pt
dec
arpl
cld
insb
mov
add
inc
sub
pop
stc
jecxz
out
shrb
mov
dec
test
jbe
or
pop
or
ds
pop
aaa
outsb
jl
add
out
loopne
jbe
or
icebp
adc
push
mov
decb
int
xchg
xlat
jmp
aam
pop
jb
sbb
cmp
jnp
insl
mov
jnp
mov
test
mov
and
jbe
xor
lds
add
bound
andb
ja
negl
xchg
roll
stos
dec
repz
movsb
or
push
daa
paddq
inc
push
mov
sbb
inc
es
mov
sarb
pop
lds
and
mov
mov
adc
ret
push
std
cmpsb
pop
enter
fldl
lods
jl
pushf
sarl
mov
lret
sbb
jbe
aam
and
out
dec
movsl
dec
lea
fldcw
insl
sbb
outsl
mov
jae
lahf
xchg
jo
add
add
add
add
out
and
stos
dec
xor
out
jb
or
ficompl
or
jp
xor
fs
call
or
or
mov
addb
lea
adc
lret
in
xor
lock
dec
idivl
shr
call
adc
jle
in
mov
push
bnd
adc
inc
jecxz
lea
push
leave
ds
push
cmp
cmp
adc
jecxz
add
adc
sarb
scas
fnstcw
mov
or
leave
push
inc
mov
add
or
and
cmp
push
inc
shlb
cmp
push
shrb
xor
sub
shrb
inc
pop
inc
mov
mov
add
add
neg
add
sub
dec
pop
mov
dec
xor
push
lds
jnp
dec
and
xor
mov
pop
push
int3
and
je
add
add
add
jl
adc
fistps
xchg
mov
push
cmpsb
dec
mov
fcoms
adc
jo
roll
pop
and
ficoml
faddl
xchg
cmp
pop
int3
movsl
jns
lret
mov
ss
push
lods
and
test
push
sbb
rep
add
pusha
pop
int3
xchg
cmp
insb
in
mov
insb
cmp
mov
cld
sbb
xchg
jno
movsb
loop
mov
mov
dec
fwait
repnz
ret
inc
push
adc
inc
fdivr
fistl
sbb
inc
inc
jle
cmc
mov
icebp
nop
push
push
sti
xor
jb
jbe
dec
movsb
iret
cmpsl
inc
sti
shlb
pop
ja
mov
lahf
pop
cli
mov
lods
icebp
movsb
rorb
mov
push
pop
mov
pushf
mov
and
cmovp
clc
and
push
jp
sub
cmc
adc
mov
or
and
lret
aad
mov
inc
inc
pop
out
mov
jmp
gs
push
int3
aaa
push
push
call
mov
mov
add
pushf
in
inc
out
iret
jp
add
sbb
in
lods
and
stos
adc
push
jnp
sarl
and
nop
mov
fwait
inc
mov
bound
lea
outsl
sub
inc
or
add
lods
xchg
mov
in
inc
push
mov
adc
xor
push
xchg
mov
push
popa
mov
or
loopne
jmp
scas
inc
mov
mov
leave
xchg
lock
mov
mov
cmp
cs
testl
push
cmp
push
cmc
inc
fcmovnu
mov
inc
shl
sbb
and
loop
imulb
out
mov
mov
into
push
jmp
int3
loop
mov
mov
push
push
pop
jmp
mov
and
aas
add
pop
mov
out
out
xchg
xchg
jmp
add
std
sti
leave
sti
iret
jmp
movsl
lret
ret
add
add
add
shl
mov
mov
add
mov
icebp
pop
sbb
out
mov
sbb
mov
xor
jle
cmp
dec
mov
sub
jmp
jl
mov
fs
cltd
jno
fstps
push
call
neg
pop
sbb
sub
jbe
mov
and
movlhps
idivb
fcoms
dec
sbb
mov
jne
jle
add
push
out
or
xchg
cld
mov
xchg
mov
outsl
repz
pop
jp
out
incb
iret
push
lcall
addps
icebp
aad
dec
or
sub
lret
bound
xor
pop
or
fldl
aad
jle
dec
sar
lods
lret
inc
push
int
cld
test
fistps
inc
jo
mov
mov
xor
pop
mov
mov
mov
xor
dec
push
cmpb
add
popf
out
sub
xchg
or
mov
andl
andl
loop
jge
aam
sub
adc
test
mov
sub
jb
pusha
push
inc
push
add
sbb
imul
movsl
adc
pop
dec
fbld
push
stos
add
enter
or
add
inc
std
xor
ljmp
jl
jp
pop
dec
push
ljmp
scas
xor
iret
call
test
es
lahf
pop
fcmovnu
mov
insl
addl
push
add
lods
pop
cltd
sub
mov
arpl
jmp
adc
dec
mov
repnz
inc
mov
sarb
lods
fdivr
test
lds
incl
outsb
cmp
in
repz
cmp
mov
mov
jle
jmp
xchg
dec
jl
jg
into
ret
inc
fwait
mov
or
jg
mov
sahf
loop
adc
lcall
add
mov
and
loop
adcl
push
add
adc
add
movsb
or
and
mul
xchg
arpl
test
inc
aad
outsl
jb
pop
cli
lcall
lods
cmc
mov
inc
push
rcl
xlat
sub
push
push
mov
loop
mov
mov
fwait
les
cli
mov
jo
push
into
jno
cmc
sub
mov
fisttpl
popa
mov
test
dec
dec
sbb
mov
inc
push
std
or
stc
scas
adc
stos
mov
add
fs
push
sub
and
shrl
clc
sbb
xchg
xchg
rorl
out
hlt
std
push
hlt
cmp
jecxz
cmc
ret
mulb
add
out
push
in
cli
and
and
sbb
dec
or
inc
jne
xor
inc
jae
inc
pop
in
divb
test
add
iret
lcall
lds
mov
rcrb
hlt
xor
fmulp
adc
add
add
inc
enter
pushl
cld
sbb
mov
add
add
add
inc
xor
outsl
fs
xor
sub
xor
push
adc
scas
dec
imul
ss
adc
mov
std
movsl
sbbl
xor
pusha
out
aam
sub
adc
arpl
fcoms
ret
pop
pop
bnd
les
dec
pop
aaa
push
pop
cltd
adc
xorl
jb
dec
cmp
dec
jp
adcb
jne
mov
lcall
fisubrs
mov
push
mov
and
inc
push
mov
or
mov
mov
fwait
mov
add
dec
cmp
lods
jecxz
jns
add
jnp
ja
sub
dec
cmpl
dec
imul
or
dec
fwait
imul
icebp
add
fildll
repz
push
xor
adc
imul
sti
pop
mov
movsb
xlat
pushf
shrb
lcall
sub
mov
add
add
lods
adc
scas
push
or
dec
xchg
ffreep
sub
jne
out
ja
negb
and
sbb
or
lds
imul
out
jae
xchg
lea
xchg
fnstenv
aad
pushf
pop
ret
mov
fstpl
lods
lock
outsb
rcrl
push
sbb
das
adc
mov
shlb
xor
adc
xchg
sub
enter
adc
push
lds
loop
jo
push
gs
jmp
iret
xor
ss
xor
insb
xchg
pop
inc
mov
loop
daa
fstpl
and
and
jb
in
dec
fistps
fstpt
push
and
and
data16
shlb
xchg
stos
fdivs
pop
rcrb
mov
sbb
push
adc
lds
jbe
pop
jns
sti
ror
incb
add
add
test
mov
aas
scas
fldenv
ret
add
add
int3
pop
outsb
lds
or
mov
mov
dec
push
and
call
sti
lea
xor
mov
out
sarl
hlt
call
frstor
fdivr
cwtl
xchg
pop
fwait
sbb
int
xor
push
add
xor
inc
mov
mov
and
mov
cmp
repz
or
daa
cmp
popf
in
add
cs
mov
ret
dec
pop
je
lcall
push
sub
fdivrs
test
cmpsl
mov
xchg
sbb
sub
add
sub
subb
jecxz
aam
jl
arpl
sub
and
movl
cmc
dec
dec
xchg
cmp
sub
sub
xor
mov
pusha
and
into
cs
sbb
les
add
add
jne
jne
jg
loop
mov
xchg
xchg
ret
add
add
add
movsb
push
mov
lea
cmp
or
aam
aam
dec
jp
and
sub
jecxz
cmp
stos
pop
dec
ja
and
popl
scas
out
loopne
push
pop
in
fs
pushf
daa
adc
sub
nop
dec
cmp
cli
jmp
lcall
out
inc
and
scas
int3
sbb
shll
cmp
stos
xchg
scas
orl
jno
inc
js
lock
dec
and
xor
lods
out
mov
or
sti
mov
aaa
adc
lea
jg
int3
jnp
mov
xor
sbb
mov
add
mov
icebp
jns
mov
jnp
lods
xor
mov
or
xchg
sub
xchg
push
push
xor
pop
cmc
xor
and
rcrl
fnsave
inc
mov
mov
jge
popf
cmp
dec
jl
sub
mov
pop
sbb
gs
jmp
stos
loope
inc
sbb
mov
cmc
mov
mov
add
add
push
jecxz
gs
out
fildll
mov
fs
mov
push
xchg
call
enter
jg
je
mov
xor
loop
push
push
sbb
mov
push
xchg
mov
rcl
mov
xchg
cli
rol
mov
aam
mov
jnp
or
std
adc
leave
icebp
inc
inc
pop
stc
mov
daa
ja
sbb
int3
mov
loope
jl
xor
insb
mov
xchg
sbb
fwait
jge
mov
bound
jnp
or
lret
clc
test
pop
loop
mov
xchg
loop
lods
sub
lcall
fsubrs
jo
push
inc
dec
mov
xchg
arpl
and
lods
xor
adc
pop
mov
lahf
add
add
jecxz
pop
movsl
imul
cmpsl
pop
inc
xchg
bnd
jae
faddl
add
and
outsb
jle
lods
testl
lds
add
add
into
cmp
cs
bound
jmp
outsb
cmc
pop
sbb
xchg
leave
inc
push
fisttps
dec
mull
mov
push
mov
lahf
xor
leave
ja
mov
popa
xor
push
jne
lret
xlat
pushf
je
adc
data16
xor
jb
lcall
xor
neg
mov
sub
or
xchg
cmp
xor
je
out
lock
adc
imul
rolb
mov
daa
fmulp
jbe
out
nop
repnz
fbstp
adc
in
push
enter
inc
and
cmp
outsb
fdivrl
mov
insb
sbb
sub
test
or
out
stos
sahf
lret
push
and
jne
fdivl
mov
cmp
loope
inc
es
insl
lret
mov
xor
test
out
iret
mov
mov
add
jle
mov
add
add
fucompp
sbb
and
jp
cli
inc
lods
shll
sbb
push
dec
pusha
sarl
adc
or
aas
scas
mov
out
clc
sub
in
addr16
int3
add
or
xchg
pop
icebp
addr16
mov
xor
mov
xchg
fisttpll
mov
jnp
cmp
and
incl
cmp
push
mov
lods
out
sub
shll
icebp
pop
jbe
mov
fwait
add
sbb
push
cli
not
cmpsb
dec
xlat
add
out
das
or
or
fs
les
jg
fists
imul
out
out
push
int3
fcmovnbe
lahf
dec
sti
mov
out
jbe
inc
arpl
and
add
sub
ds
and
push
pop
in
loop
movsb
sbb
mov
or
jo
out
push
mov
push
pop
xchg
arpl
or
fiadds
jge
sar
fnstsw
scas
arpl
fdivl
stc
test
sbb
xlat
in
aad
ficomps
cmp
add
inc
push
insl
xchg
pop
iret
je
jne
cmpsl
sbb
pop
rolb
mov
xor
push
rcl
rorl
xchg
idivl
pop
sub
mov
jns
gs
adc
pop
idivl
out
in
daa
inc
in
push
lret
xchg
cmpsb
aaa
inc
loop
lret
roll
jbe
in
sub
cwtl
mov
add
add
xchg
adc
xchg
je
mov
clc
lock
cmp
pop
imul
adc
gs
decb
int3
jg
ret
sbb
fcmovbe
aas
sub
or
mov
cmp
loop
ja
or
jl
test
sbb
inc
xor
cmpsb
lret
test
cmp
adc
pusha
dec
mov
rol
jae
push
popa
dec
jb
xchg
and
sbb
rclb
push
nop
and
adc
or
push
push
sti
das
jl
fsubs
ds
sub
cmp
jg
and
mov
rcrl
test
add
add
add
test
jne
rcrb
xchg
dec
lds
or
cmp
sub
aam
jle
fcmovnu
fists
or
sbb
sub
lods
shrl
movsb
dec
out
lock
dec
into
sarl
push
mov
pop
fisubs
mov
je
push
loopne
mov
pop
fldl
jmp
pop
aas
mov
out
jmp
xor
aam
je
data16
dec
pop
imul
repnz
sub
mov
sub
sahf
mov
jo
data16
or
and
add
inc
test
jg
add
xchg
mov
lea
out
pop
push
push
mov
xchg
stc
or
sarb
gs
sti
fisttps
sub
cmp
adc
out
cld
out
inc
inc
imul
push
mov
pop
loopne
push
dec
fmulp
jmp
ds
repz
fcoms
aam
jecxz
lods
leave
add
add
add
sti
sub
fsubrs
fistps
cmp
add
xor
or
add
or
push
xchg
dec
push
out
loop
cmp
je
test
dec
jl
mov
xor
std
gs
push
inc
or
psrad
and
sub
enter
jle
fucomp
sub
punpckhbw
sbb
scas
ds
popf
popf
pop
jg
popa
cmp
jge
push
sbb
in
insb
or
mov
mov
notb
lds
jmp
jae
inc
in
xchg
repnz
sub
fisubl
sbb
lods
call
pop
js
xchg
add
jno
sub
hlt
or
testb
adc
and
mov
add
icebp
int3
jb
xor
out
cs
add
mov
notl
daa
fdivrl
adc
xor
lods
setnp
pop
or
xchg
pop
aaa
insl
lret
mov
ja
lcall
add
mov
mov
mov
pusha
inc
jle
mov
add
add
add
movsl
inc
lahf
roll
es
mov
mov
movsb
push
and
sahf
lock
rorl
dec
cmp
add
lcall
mov
pusha
mov
dec
fdivrs
nop
movsb
inc
addr16
push
or
out
push
inc
in
pop
repnz
js
call
adc
cmp
xchg
dec
add
js
lods
adc
movsl
pop
adc
in
push
pop
out
es
add
mov
jb
push
sti
aas
push
sbb
jbe
clc
fsubs
dec
add
mov
jo
dec
loope
hlt
frstor
mov
hlt
lods
sarl
mov
andl
clc
sub
lretw
mov
fdivrs
lret
mov
mov
sbb
test
aad
dec
sub
mov
cmpl
outsl
sub
pop
inc
adc
pop
sub
addl
add
add
enter
in
sbb
push
inc
dec
jno
mov
lret
add
add
add
jmp
or
inc
fcoms
test
adc
rolb
xor
xor
xlat
pop
aad
in
sub
cld
js
ja
add
movsl
ret
fsubrp
xor
mov
mov
mov
adc
es
cmp
lea
lds
shr
sahf
sub
push
loope
adc
imul
subl
dec
or
push
xor
jmp
push
fidivl
jb
sbbb
jmp
mov
push
pushf
xchg
jmp
xchg
push
test
cmp
xchg
outsb
inc
xchg
push
mov
sbb
fmuls
adc
mov
inc
adc
jnp
cli
insl
inc
mov
push
gs
add
je
arpl
fucomp
jnp
fs
les
dec
xlat
popf
mov
xchg
fisubl
dec
push
pop
pop
shll
leave
cmp
dec
sarl
jne
imul
cmc
call
inc
push
popa
rcrb
add
add
mov
sbb
rol
into
pusha
cmp
gs
dec
cmp
push
bound
xchg
fisubs
clc
nop
lods
fldt
pop
sub
in
arpl
adc
mov
cmp
push
cmp
mov
pop
dec
andl
pop
sbb
jns
mov
lret
and
andb
add
testl
loop
into
jge
lods
pushf
sub
mov
dec
lret
jge
inc
cmp
jbe
and
push
lods
sub
dec
icebp
mov
lock
adc
test
pcmpgtd
and
add
and
sbb
mov
adc
subb
jmp
cmp
dec
xor
mov
imul
in
sarb
adc
sbb
ds
insb
push
ret
lret
add
negb
inc
mov
call
add
ja
iret
sub
push
sbb
int
add
add
mov
fwait
in
pop
jmp
add
icebp
add
rclb
mov
fmull
inc
stc
and
xchg
xor
int
iret
shlb
jmp
push
leave
sub
or
adc
lods
dec
in
sbb
testl
or
test
pop
call
scas
cmp
es
lahf
cmpsb
add
ret
inc
xchg
or
dec
imul
mov
loopne
pusha
popa
mov
add
hlt
push
pop
mov
stc
jbe
stc
jmp
sub
lods
xchg
lods
cli
sub
or
scas
and
mov
xor
ja
in
js
repnz
stos
cwtl
in
idivb
mov
jecxz
adc
insl
cmp
jbe
stos
aaa
sub
cmp
jo
cmpl
jo
or
sbb
pop
es
cmp
mov
cmc
sbb
add
add
add
out
into
gs
cld
test
add
into
add
add
add
insb
aaa
adc
adc
out
test
inc
mov
xchg
fwait
pop
xor
movsl
lahf
sub
faddl
mov
insb
out
adc
push
iret
enter
in
loopne
cli
or
test
sub
imul
in
or
cltd
sub
pop
xchg
mov
push
mov
cmp
xor
ljmp
loop
loop
rorb
fmuls
xchg
sub
lea
aaa
in
xor
jmp
sbb
roll
mov
daa
add
hlt
out
cwtl
dec
loop
fucomip
ficompl
mov
mov
iret
xchg
dec
jmp
mov
pop
push
add
stos
fcomps
mov
pop
and
lock
jnp
lods
ret
and
add
jge
inc
cltd
pop
inc
decb
or
cmp
sbb
dec
mov
jle
sahf
jno
fisttps
sbb
add
add
xchg
and
je
out
mov
xchg
add
add
add
in
mov
fldcw
mov
addl
jo
in
inc
sub
cs
repnz
and
adc
pop
loop
cmpsl
cs
xor
sahf
jb
mov
outsb
mov
or
sbb
jle
push
push
in
mov
fisubrl
adc
xor
adc
xlat
call
repz
jne
mov
mov
int3
jne
retw
push
fcmovnbe
cltd
in
pop
mov
adc
iret
mov
out
andl
test
adc
icebp
jl
jb
or
out
mov
jecxz
xchg
mov
repnz
imul
dec
push
movsb
or
aam
and
push
les
popa
jl
cltd
cmpsb
mov
push
lds
xlat
jl
and
fistl
fs
popa
leave
push
imul
bound
mov
jns
jl
mov
dec
in
pop
je
mov
add
add
dec
daa
dec
das
outsb
imul
push
xchg
mov
out
enter
add
add
insl
scas
cmc
jl
mov
aam
ret
sub
push
jb
stos
pop
ficoms
mov
repz
push
outsb
push
or
rol
jecxz
test
loopne
idivb
jb
sbb
and
inc
cmc
out
push
mov
mov
out
and
fsubr
xchg
xor
jne
mov
lock
cmc
add
test
push
gs
cmp
mov
cmp
xor
inc
lret
xor
push
mov
out
out
addr16
lahf
mov
mov
inc
bound
shl
mov
add
mov
adc
cmpsb
leave
adc
xor
das
or
out
mov
and
out
dec
jns
fimuls
aaa
dec
mov
sbb
scas
pop
addr16
and
jo
divl
add
popf
mov
lahf
ret
or
mov
add
add
fstpt
sbb
ljmp
sub
pop
mov
xor
fbld
push
ja
push
data16
imul
loope
push
mov
or
sbb
mov
or
cmp
dec
mov
sub
inc
cli
jns
sarl
aaa
in
ja
insl
shlb
daa
xchg
in
loopne
cmpsl
movsl
ret
out
sbbl
ja
xor
in
inc
sub
pushw
fdivp
jnp
pop
iret
jg
pop
mov
jmp
ficompl
js
lods
push
arpl
lret
push
add
xchg
and
mov
aaa
dec
jle
push
lret
adc
xor
imul
mov
and
mov
xchg
dec
mov
inc
push
pushf
outsl
in
test
or
out
cli
out
mov
in
pop
xor
cwtl
add
aaa
mov
dec
push
das
add
aad
jmp
cltd
pop
sahf
mov
mov
mov
pop
xchg
or
cmpsb
pusha
rcl
add
add
add
and
sahf
aaa
in
jmp
mov
push
fdivr
mov
test
fisubs
icebp
or
and
bound
jecxz
shlb
mov
xchg
scas
filds
pop
push
sbb
dec
mov
in
loope
sub
pop
je
jo
jmp
cmpl
stc
and
inc
adc
popf
adc
in
call
ret
arpl
mov
mov
in
push
xchg
mov
add
imull
xor
push
insb
out
in
cwtl
and
or
call
mov
sbbb
shl
in
xor
stos
les
mov
jne
inc
aaa
sbb
cmp
in
mov
lea
fcmovnu
jmp
out
jmp
les
xchg
push
cs
or
mov
jmp
sub
xor
and
add
add
add
sbb
sub
dec
lods
fwait
pop
push
aam
add
add
add
pop
push
inc
sub
mov
cmpl
fdivr
xchg
xor
dec
mov
dec
cwtl
aam
ds
xor
insl
add
cmp
xor
mov
cli
adc
dec
mov
jg
sub
ljmp
lods
jb
push
mov
xor
xor
mov
mov
mov
jmp
fwait
sbb
xchg
cmp
and
push
mov
in
andb
mov
add
or
stos
repnz
cmpsl
cmp
xor
pusha
aas
xchg
mov
aam
adc
pop
imul
and
cmp
mov
mov
hlt
fs
int
popf
inc
mov
imull
aad
cmp
ret
push
mov
fwait
xor
jno
push
movsl
lods
es
cmpsl
mov
daa
cmp
addr16
and
shrb
jp
cli
mov
mov
cmp
mov
xchg
cmp
push
sbb
jp
mov
pushf
adc
ds
jae
out
repnz
fcom
add
add
add
movsl
inc
mov
xchg
test
xchg
adc
lea
mov
hlt
bound
xchg
ljmp
ljmp
gs
sarl
add
cmp
jns
int3
inc
jl
sub
inc
jne
inc
loope
int3
cmc
push
sub
pop
and
into
sub
mov
mov
cmp
and
mov
ljmp
mov
les
inc
dec
scas
xor
int
push
out
push
dec
lods
enter
sti
aas
std
mov
mov
lret
pop
clc
ljmp
out
xchg
jno
or
mov
daa
mov
xchg
mov
leave
xor
call
stc
cmpsl
sub
or
mov
fists
xchg
cmp
push
xorl
lcall
sub
or
adc
repnz
jg
xor
mov
mov
inc
out
add
add
lcall
jnp
pop
dec
popf
add
add
add
sbb
pop
sbb
sub
in
mov
ret
and
out
dec
sbb
les
jne
frstor
daa
rorb
sahf
scas
imul
repz
mov
es
mov
les
stos
adc
add
in
pop
jae
inc
out
adc
aam
test
cmp
jo
mov
push
cmp
jne
cmpsb
push
pop
leave
lret
orl
sti
sbb
iret
xchg
jbe
not
stc
lret
and
cs
movsl
je
scas
andl
popa
jo
adc
push
cmpsl
outsb
sbb
dec
sbb
mov
xchg
sbb
xlat
jbe
jne
loop
test
and
fisubs
lcall
mov
arpl
jle
test
cwtl
pop
or
std
les
fdivp
or
push
xor
add
fcmove
mov
movsb
rorb
and
rcrl
in
out
xchg
add
cmp
jg
leave
or
jle
sbb
add
add
add
push
ret
adc
jp
pop
sub
pop
adcb
xchg
dec
pop
ret
ret
sbb
aad
cmp
ss
mov
in
cmp
inc
call
stc
xchg
fwait
inc
dec
adc
icebp
pop
sbb
push
out
pop
jns
xorl
mov
repz
dec
sbb
inc
or
adc
cmp
int
xchg
mov
out
jecxz
cmp
loope
add
mov
ret
mov
fnsave
int
push
add
sub
aaa
pop
push
std
sub
push
sub
jns
loopne
push
jecxz
mov
dec
add
cmp
mov
xchg
repz
jns
add
in
fimuls
jg
fs
bound
dec
jo
out
mov
inc
dec
ret
lea
in
je
xlat
xchg
outsb
aaa
mov
roll
insl
cwtl
mov
mov
out
xor
sbb
cmp
jns
pop
sbb
imul
xchg
movsb
or
xlat
add
add
add
movsb
fistps
lcall
popa
dec
pop
call
pop
int
jae
fwait
xchg
insb
and
push
fidivl
jecxz
lahf
jmp
fs
in
pop
mov
sbb
inc
aam
mov
push
mov
or
mov
cmp
out
sbb
aaa
xchg
push
pop
in
repz
adc
ds
push
cmp
daa
lea
imul
mov
push
add
cltd
popa
aaa
push
js
mov
adc
nop
test
mov
cmpsb
pop
sbb
xorl
insl
int
rcrl
insb
addl
lds
jne
inc
xchg
inc
add
sahf
jmp
dec
repnz
movsb
ss
add
vprotb
repz
xor
xchg
f2xm1
call
stos
lock
add
call
sbb
out
fldcw
push
in
sub
push
call
add
add
movsb
mov
cmpsb
inc
cmc
adc
or
pop
add
hlt
xchg
lret
adc
mov
adc
aaa
ds
in
testl
ret
out
out
bound
dec
shlb
flds
clc
insl
nop
mov
lcall
xor
lds
out
sub
rol
shlb
xchg
jmp
add
out
insl
xchg
out
hlt
fisttpll
lods
cli
mov
pop
lret
in
pop
xchg
xorb
sti
pop
inc
int3
add
xchg
imul
mov
pop
jb
sub
xchg
stc
fucomi
add
push
pop
movsb
shll
fidivs
and
movl
cltd
dec
je
pop
ret
subl
cld
cmp
mov
ret
inc
mov
popf
lds
aaa
adc
test
push
sub
xor
je
in
mov
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
cmpl
add
add
lods
inc
iret
mov
adc
iret
sbb
mov
in
mov
mov
adc
jmp
mov
dec
add
mov
adc
outsl
js
xor
outsl
pop
roll
cwtl
jl
sub
rcrb
pop
dec
es
cmp
add
stc
gs
inc
lcall
add
lock
stos
adc
stos
imul
cmp
call
sub
mov
mov
xor
and
jl
ror
loopne
or
outsb
aam
rcll
lss
fldenv
clc
xor
push
js
hlt
mov
xchg
enter
gs
rorl
test
loop
in
dec
push
mov
sub
inc
in
adc
adc
bound
lahf
push
cmp
adc
cli
add
mov
xor
mov
fcompl
repnz
inc
xchg
mov
add
add
jle
jg
std
fstpt
jns
iret
lock
add
add
inc
jge
mov
push
jns
sub
sbb
lahf
or
inc
cmp
ds
push
je
popa
sub
cwtl
sbb
xchg
or
pop
lods
int
pop
call
xchg
repz
dec
in
push
mov
jae
outsb
fcmovbe
pop
mov
fmull
outsl
dec
jae
mov
sub
jnp
or
xlat
testb
test
pop
xor
adc
adc
fimull
stc
mov
sbb
pop
inc
dec
mov
cmp
das
imul
sub
mov
mov
cmp
pop
rcr
clc
aas
add
sub
mov
fwait
jl
cmpsl
cmpsl
add
pop
mov
sub
ret
mov
lahf
pop
dec
pop
and
mov
xor
and
sti
inc
out
mov
stos
cmp
movl
add
add
mov
sti
idiv
lods
pop
sbb
shrb
add
add
cmc
cmp
mov
ret
mov
cmp
xchg
lahf
loopne
cmp
lret
data16
pop
xchg
movsl
inc
or
or
jns
test
cs
jl
push
ss
inc
mov
sub
inc
xchg
idivl
xchg
push
xchg
add
call
leave
mov
in
or
and
jns
jne
iret
xchg
gs
fdivl
jo
xorl
push
adc
dec
fnstsw
sbb
lock
mov
cltd
loop
daa
sbb
fimull
cmpsl
xchg
cmp
in
jno
push
pop
lret
mov
loope
add
btr
or
enter
xchg
pushf
inc
mov
jg
fwait
sbbb
mov
fwait
lahf
add
test
mov
cli
dec
sub
cltd
dec
stos
push
loope
mov
jp
stc
inc
xchg
pop
adcb
stos
lret
stos
add
add
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
mov
xchg
mov
icebp
mov
or
fistps
iret
ljmp
outsb
mov
mov
jl
repnz
aad
clc
pop
mov
daa
sub
push
scas
ret
lahf
xchg
jns
mov
nop
fsubrs
mov
jb
xchg
cld
and
mov
and
push
lret
pop
or
int
flds
jae
imul
repz
pop
inc
arpl
pop
xor
fbld
imull
sub
jne
idivl
lock
sti
or
imul
mov
fistpll
cmpsb
ss
stos
jns
push
sbb
mov
mov
or
dec
inc
loope
std
xchg
add
or
and
jge
mov
inc
add
inc
xchg
sub
xchg
mov
adc
adc
loop
cmpsl
fimull
faddl
mov
fldl
add
add
push
dec
pushf
shll
mov
rcrl
pop
aam
push
add
adc
push
in
adc
mov
jecxz
dec
or
sbb
mov
test
ret
mov
mov
dec
xor
xchg
gs
popa
insl
sbb
xchg
movsb
test
fstps
out
dec
add
mov
dec
cli
push
clc
repnz
xor
cld
sahf
push
cmp
xchg
mov
stos
imul
mov
in
push
mov
adc
and
ljmp
aas
push
imul
dec
pop
inc
dec
iret
cmp
sbb
movsl
pop
insl
mov
pushf
mov
lock
dec
mov
cltd
adc
sbb
xor
call
and
movsl
je
incb
add
cmpl
adc
jae
cli
dec
cli
mov
dec
movsl
add
ror
stos
test
sti
push
push
nop
xor
pop
adc
int3
pop
ljmp
dec
push
jg
mov
lcall
fisttps
or
add
add
add
add
loop
pop
adc
xor
add
int
add
es
fidivrs
xchg
outsb
mov
mov
xchg
and
mov
cmp
pop
adc
popf
mov
fwait
adc
orl
es
xchg
addr16
aaa
mov
cmpsl
loope
pop
je
push
or
out
hlt
add
mov
aad
push
ss
dec
or
idivb
imul
cmpsl
movsb
mov
sbb
mov
jp
pushf
stos
shll
sahf
cli
sub
loop
pop
xchg
sub
xor
out
xor
inc
mov
jo
lahf
nop
sub
add
xchg
test
pop
jne
enter
mov
cmpsl
inc
push
inc
arpl
push
xor
inc
mov
pushf
aad
adc
mov
cmp
gs
jns
cmp
jae
nop
sbb
inc
jns
mov
mov
add
mov
lahf
sbb
pop
or
add
mov
jns
xchg
xchg
mov
repnz
rolb
add
add
add
push
pop
bound
xchg
flds
out
dec
sbb
mov
test
lcall
push
adc
add
cmp
dec
ror
xchg
adc
ffree
in
sub
mov
sub
roll
jnp
lcall
push
jbe
push
or
mov
mov
sub
pushf
sbb
divl
mov
lods
jge
in
jp
xor
inc
xchg
ds
xchg
xchg
loope
inc
mov
clc
stos
push
sub
sub
insl
rcrl
and
xchg
pop
jg
and
mov
cmc
mov
fs
roll
sarb
add
cmp
jo
or
or
fstl
cltd
addl
sbb
jmp
sbb
adc
jl
fisttps
dec
mov
out
and
inc
mov
inc
lcall
outsb
dec
not
je
xor
jns
pminsw
add
add
fadd
fsubp
jnp
or
cld
les
loope
add
add
addr16
aad
iret
cmp
fdivrs
jb
push
ljmp
add
imul
and
hlt
mov
fimuls
stc
xor
lods
push
out
dec
push
mov
lods
pop
ljmp
and
in
xchg
xor
movsl
subl
mov
outsb
pop
icebp
enter
sub
xchg
rcrl
sub
dec
out
dec
sub
fnstcw
cmp
out
mov
data16
clc
aaa
pop
mov
pop
pop
adc
mov
mov
dec
mov
push
sbb
pushl
in
xor
cmp
das
push
ds
test
xor
leave
rcll
aam
push
sbb
and
lds
fcoml
test
jnp
cmc
mov
out
xchg
cwtl
aaa
mov
fldcw
jo
push
mov
push
roll
add
add
sub
cld
cli
jle
dec
nop
xor
rorl
or
add
add
add
inc
leave
cmp
and
jne
jecxz
in
xor
push
sub
mov
pop
mov
pop
in
cli
add
into
push
inc
out
adcl
cmpsb
mov
cmc
jle
sbbb
test
cmp
cmp
or
repz
mov
pop
push
or
int3
xchg
sbb
add
flds
nop
add
dec
test
aam
out
mov
and
inc
imul
mov
stc
fcmovnbe
lea
insb
out
pop
es
jecxz
js
outsb
push
sub
cmp
mov
mov
push
pop
cltd
aas
pop
push
sub
lcall
cmp
ror
push
xchg
lret
xchg
stos
xchg
jb
push
jno
jl
or
jecxz
jns
cmpl
fdivrs
and
int
jno
jno
and
xchg
mov
inc
mov
pop
lods
xchg
adc
lea
pop
jbe
ja
sti
aaa
out
ja
pop
add
adc
add
add
add
jge
int3
sbb
outsb
je
cwtl
or
and
hlt
adc
test
xor
lret
roll
inc
stc
iret
or
jo
inc
mov
push
mov
jae
mov
aam
and
lods
ds
pushf
mov
pop
xor
cwtl
cmc
sub
cmpsb
cltd
pushf
mov
mov
imul
mov
loope
insl
or
sub
cmp
push
dec
adcb
cld
pop
mov
xchg
adc
or
pusha
sbb
or
dec
das
int
jo
dec
add
push
jno
add
sbb
cmp
scas
sub
push
ja
sbb
pushf
pop
pop
cltd
data16
fsubs
add
pop
es
loope
movsb
inc
cwtl
popf
cmp
sti
bnd
pop
int3
mov
iret
jbe
mov
and
sbb
push
mov
es
and
sbb
add
into
arpl
pop
xchg
aaa
pushf
push
push
push
jb
in
add
add
push
xor
stos
cmc
aad
mov
call
mov
ja
mov
popa
push
cmp
add
adc
pop
push
lcall
cmp
push
stc
xor
jmp
fcmovu
ds
iret
jo
ds
dec
pop
out
jge
aad
inc
xchg
into
cli
jae
shrb
mov
out
shl
jno
mov
xor
add
ret
dec
mov
test
shrd
xchg
mov
and
aaa
and
jp
inc
and
dec
push
push
pop
or
xchg
sbbl
sbb
adc
jl
add
ja
dec
ficoms
test
xor
inc
int3
xor
or
sub
pop
cmpsl
cmpsb
cld
cs
test
adc
repz
jge
pop
push
shll
cmp
inc
jo
das
shrb
cmp
and
cmp
pop
and
outsl
cmp
and
fdiv
cltd
cmc
adcb
fcos
pop
mov
xor
in
add
add
lods
pushl
mov
fiadds
mov
push
push
ret
dec
hlt
mov
dec
in
test
in
popa
mov
xlat
outsl
push
test
in
ja
movsl
je
dec
xor
mov
nop
or
jnp
cmp
or
ljmp
aaa
imul
or
jb
pop
mov
ds
out
test
sub
xor
mov
fidivs
xor
nop
xchg
cmpsl
xchg
jle
jb
ss
inc
inc
outsl
testb
shlb
xchg
fnstenv
dec
dec
and
pushf
inc
add
outsb
out
xchg
mov
inc
jae
in
insb
mov
or
int3
mov
sub
dec
jg
sbb
push
scas
subb
shlb
pop
cli
dec
push
fnstsw
jp
jae
loopne
pop
jecxz
ret
pop
xor
xor
push
lret
and
scas
into
repz
lock
jg
in
and
lods
cwtl
test
add
add
and
jb
mov
push
inc
inc
andb
xchg
ficoms
int3
cmpsl
inc
aad
ret
test
push
inc
fidivl
lock
mov
dec
lods
mov
js
les
and
or
push
cwtl
in
push
mov
js
test
sbb
nop
hlt
into
or
xchg
dec
mov
insb
dec
mov
das
ja
ret
das
int3
and
mov
divl
xor
shrb
mov
lea
pop
sti
mov
xchg
push
add
jmp
in
ljmp
mov
or
sub
push
or
roll
cmpb
inc
inc
lds
dec
and
push
jo
inc
addr16
ss
inc
in
rcrl
push
lret
aaa
ja
addr16
daa
jmp
or
fisubs
pop
out
cmp
fists
rolb
push
mov
dec
lret
sbb
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
shll
and
add
add
add
or
push
add
das
fcoms
xor
imul
and
gs
test
into
cs
out
fstl
adc
xor
std
add
push
jne
mov
add
xchg
out
jp
aam
fldl
sub
clc
pop
mov
inc
lcall
repz
mov
or
cld
inc
stos
sub
negb
icebp
fs
adc
shlb
sub
cmc
xor
cld
test
je
adc
xchg
ja
mov
ret
sbb
into
jno
mov
ss
movb
movsb
test
cmp
cltd
mov
add
push
sbb
lods
ftst
jl
jb
sub
sahf
andb
loop
pop
repnz
pop
lahf
popa
dec
xchg
outsl
pop
roll
popf
jge
and
arpl
jno
pop
or
adc
repnz
and
ljmp
stc
mov
dec
js
stc
mov
dec
int
mov
call
add
arpl
int
cmpb
in
add
xor
push
inc
or
out
fs
jmp
fistpl
pop
int
xor
stos
jmp
call
xchg
xchg
sbb
aad
scas
xor
dec
mov
lea
jne
data16
lods
dec
testl
add
jmp
aam
pop
mov
hlt
hlt
sbb
lcall
fldl
push
lret
int
jno
pop
in
mov
cmp
push
mov
cmp
adc
sbbb
lcall
mov
push
je
xchg
fwait
repnz
enter
add
jne
pop
pop
mov
stos
adc
icebp
adc
mov
push
pushf
ficoml
roll
jecxz
push
divb
push
mov
imul
xchg
je
xor
pop
mov
mov
pop
insb
fildll
fwait
jns
jns
dec
out
sub
add
add
add
cwtl
inc
std
bound
movsb
add
and
push
mov
in
outsl
jecxz
push
mov
add
test
nop
inc
test
aaa
nop
int
shrb
arpl
adc
xchg
movsl
xchg
sbb
sbb
pop
stc
sti
ficoml
loopne
dec
aad
mov
mov
or
dec
and
jno
xlat
jl
sub
test
movsb
xchg
ds
idivb
in
push
popa
in
outsl
repz
jb
test
jmp
gs
ret
adc
clc
pop
jns
test
and
xchg
ljmp
push
xor
xchg
mov
dec
sub
mov
ss
xor
xchg
or
push
dec
jg
push
in
pusha
pop
adc
lahf
jge
fs
adc
jbe
inc
data16
pop
lret
imul
push
ror
sti
lock
outsl
test
aas
cmp
xchg
dec
pop
lods
stc
push
push
testb
xchg
addr16
sbb
cmp
jnp
adc
jne
loope
cmp
add
add
aam
push
cmp
mov
stos
imul
hlt
sti
mov
or
call
and
aad
lods
and
sbb
and
lock
sub
pop
sbb
out
xchg
inc
test
xchg
vpcomuw
add
lea
mov
and
dec
jno
or
incb
popf
stos
pop
mov
dec
test
repnz
xor
or
jbe
ret
stos
pop
ljmp
cltd
into
fisubs
cmpl
cmp
xor
sbb
sbb
insl
mov
inc
jne
sbb
fistpl
mov
imul
xchg
repz
int3
pusha
inc
xchg
pop
sahf
addr16
sbb
ret
hlt
and
fldt
sbb
les
pushf
jo
stos
mov
sbb
es
sbb
jge
mov
mov
or
mov
pop
mov
add
add
subb
fistl
das
add
leave
xor
add
add
add
std
clc
jg
pop
cmp
mov
rclb
dec
insb
pop
leave
xor
scas
ss
mov
mov
push
add
or
int
call
fsub
cmc
push
test
mov
inc
ja
lock
pop
add
andb
movsl
dec
sub
push
jecxz
test
xchg
sub
add
cmpsl
cmp
lcall
jmp
pop
inc
test
xor
pop
lret
jmp
push
int
cltd
push
inc
adc
loopne
jl
mov
ds
adc
xor
xor
loop
outsl
pusha
cmc
cmp
push
dec
inc
movsb
mov
pushf
outsl
in
fidivl
into
popa
insl
enter
out
bound
lahf
mov
jno
dec
rcrb
fwait
dec
jbe
fdiv
movsb
xor
lret
jge
sbb
mov
inc
sub
popa
ret
inc
or
ret
mov
iret
sbb
mov
add
add
jb
scas
decb
fisttps
pop
iret
cmp
add
add
add
push
nop
in
gs
or
inc
shll
pushf
fwait
out
into
int3
xor
addr16
in
aaa
test
xor
pop
xchg
push
fidivl
es
dec
pop
mov
aaa
inc
mov
cmpl
and
sbb
addr16
clc
push
lea
int
pop
push
pop
cmp
inc
cs
xchg
cmp
push
icebp
lret
test
cmpsb
add
mov
push
jmp
scas
test
pop
jp
int
lods
push
daa
jmp
adc
dec
mov
popa
sbb
neg
dec
in
in
lea
inc
iret
push
movb
addr16
dec
mov
cs
or
xchg
dec
mov
mov
das
cmp
into
mov
inc
cmpsb
pop
fsubrs
lock
mov
mov
jnp
cmp
sbb
xchg
adc
or
dec
cld
pop
push
sub
mov
jle
xchg
sbb
bound
sahf
inc
jp
add
add
xlat
mov
xchg
imul
add
adc
inc
out
loop
jbe
mov
loopne
scas
mov
fimull
insl
adc
sub
in
iret
sarb
sbb
mov
or
lcall
jne
xchg
sarb
pop
or
inc
add
dec
push
cmpsb
jl
insl
mov
gs
jne
jo
test
outsl
cld
sub
aaa
dec
in
lret
xor
push
hlt
outsl
push
xchg
bswap
xchg
cld
insb
js
inc
les
mov
icebp
sub
cwtl
mov
mov
mov
repz
xor
outsb
cmpsb
fbstp
lret
xor
imulb
cmc
ljmp
cld
sub
xorl
and
mov
stos
data16
mov
push
mov
push
mov
lock
sub
add
dec
adc
cmp
lods
cmp
lods
aas
mov
dec
addr16
cmp
add
add
add
std
ljmp
inc
cld
mov
cmp
repz
lea
sbb
loop
xor
loopne
scas
jp
inc
dec
movsl
add
fldt
fmull
es
jbe
data16
and
pop
mov
mov
sahf
xchg
xchg
test
lds
outsl
cs
sub
jle
jo
xor
add
mov
pop
pop
sbb
mov
lods
outsl
jle
std
mov
sbb
sub
lret
gs
loopne
fisubrl
xchg
dec
add
sbb
mull
xor
jecxz
adc
mov
daa
lock
cmp
sub
int3
inc
lock
pop
jns
fistps
popf
sbb
lret
cli
mov
movsl
pop
ret
sub
xchg
fyl2x
xchg
dec
sub
push
xor
pop
adc
arpl
push
inc
sub
push
jg
and
sub
pop
loop
fadd
sti
mov
push
adc
xor
out
add
add
add
cmpsl
push
dec
push
in
ljmp
rcll
inc
stos
and
inc
scas
clc
scas
lea
arpl
test
roll
dec
add
sub
mov
push
add
push
xor
movl
xor
iret
pop
shlb
dec
jae
mov
push
fsub
or
adc
lret
inc
test
sub
add
jge
lods
inc
inc
outsb
in
mov
xor
loop
sub
inc
hlt
push
mov
inc
lcall
fbstp
lods
xor
xor
xchg
mov
jae
int
cs
dec
jne
loop
jge
in
cli
xchg
nop
ss
xor
fwait
inc
mov
out
shrb
jle
mov
push
push
push
fisubl
repnz
xor
mov
add
xchg
dec
addr16
lahf
mov
int
push
cs
fiadds
adcl
enter
add
into
adc
neg
jge
xchg
jns
lock
fisttps
add
add
insb
push
and
lods
push
call
imul
ret
icebp
mov
decb
push
xchg
out
sbb
clc
or
pusha
add
pop
xlat
lods
ret
icebp
mov
daa
push
outsb
orl
in
lods
ret
in
xor
outsb
fmul
dec
mov
fdiv
mov
dec
push
pop
loopne
scas
mov
inc
mov
outsl
inc
je
pop
mov
adc
adc
push
inc
and
cmp
mov
mov
push
into
cmp
clc
xchg
fs
aam
xor
ror
xchg
mov
jg
scas
movl
out
sarb
xchg
add
jecxz
mov
dec
jne
das
mov
dec
push
pop
push
movsl
sub
adc
sarb
dec
in
cmp
xchg
push
mov
cmp
push
sub
call
or
arpl
nop
pop
pop
cmp
outsl
jg
jg
sub
fimull
xchg
sbb
add
add
add
stc
mov
int
cmpsb
mov
mov
daa
ret
es
inc
push
and
and
and
jns
inc
dec
mov
cld
rorl
stos
lcall
pusha
lods
ds
into
mov
testb
cmp
ss
sbb
mov
aas
fdivl
dec
mov
sub
mov
push
mov
inc
sub
in
mov
inc
ret
out
rcl
adc
mov
lods
xchg
dec
mov
inc
xchg
in
jecxz
outsb
xchg
in
stos
and
inc
daa
cmpsb
pop
dec
sbb
mov
cltd
or
jns
cmp
leave
xchg
sub
dec
or
int3
jns
lods
inc
fadds
enter
cmpsl
add
inc
dec
add
or
cmpsl
mov
imul
mov
out
cmp
fmul
divb
ret
mov
lcall
aaa
les
mov
add
jl
add
ret
ja
and
aaa
divl
cmp
dec
repnz
add
add
push
aas
in
les
test
dec
lods
xchg
imul
sbb
fwait
pop
push
push
dec
mov
ljmp
cmpsl
sub
and
rolb
fdivr
andb
or
sbb
out
stos
pop
mov
adc
aaa
mov
insl
sbb
lock
inc
pop
test
sbb
vmovhps
and
fidivrl
cmp
jle
mov
xorl
ss
andl
leave
insl
cmp
cmp
pop
sbb
push
sub
imul
cmc
or
movsl
popf
jl
xor
pop
ss
pop
jge
mov
fisubs
sub
sub
jae
repnz
and
std
les
int3
inc
xchg
pop
pushf
faddp
pop
push
dec
out
mov
pop
lds
xchg
jl
aad
popa
cmp
add
les
add
add
mov
cmc
mov
insl
out
sbb
add
add
add
adc
add
push
sti
movb
pop
scas
mov
xlat
imul
jecxz
jecxz
bound
insb
mov
and
adc
mov
ja
push
sahf
adc
or
inc
into
jl
test
fcmovu
mov
adc
cmpl
je
les
dec
xchg
imul
mov
cmp
das
push
xor
mov
sub
adc
jno
fdivrl
push
subl
clc
lret
mov
addr16
nop
sti
lahf
shrl
mov
imul
and
jo
in
int
stc
ja
leave
fdivl
pop
add
ljmp
pushf
fs
xchg
call
sub
xor
mov
test
daa
outsl
and
addb
scas
insl
xchg
jmp
jle
jne
pusha
popf
pop
sbbl
add
push
lds
adc
icebp
mov
iret
pop
outsb
sbb
loopne
test
inc
rorl
fisttps
mov
adc
adc
popaw
push
pop
mov
lds
push
dec
cmp
pop
pop
icebp
sti
cmp
popa
or
pop
sub
push
pop
in
and
xchg
int
add
daa
push
jp
jg
jns
leave
push
xchg
cli
sti
arpl
jnp
idiv
xor
div
jbe
jae
data16
xchg
jne
outsb
jnp
push
pop
mov
shl
cld
mov
movsb
testl
fisubl
das
outsl
js
in
js
stos
mov
mov
in
jne
repz
movsb
xchg
outsb
outsl
test
loopne
push
das
inc
xor
repnz
cld
out
in
sbbl
pop
fldenv
push
jp
cmc
jmp
cltd
dec
cmp
andl
sub
scas
fdivr
fnstcw
jecxz
test
pop
cmc
add
add
add
pop
push
pop
mov
scas
dec
notb
add
pop
test
or
cmpsl
dec
cwtl
or
subl
loop
icebp
test
xor
and
fs
not
outsl
bound
mov
push
lahf
sbb
addr16
mov
adc
faddp
xor
jae
push
and
dec
or
adc
sbbb
jle
sub
movsl
aaa
cwtl
jl
jecxz
or
adc
popf
mov
test
mov
jnp,pn
pushf
pop
mov
lcall
pop
jle
int3
lcall
out
push
or
shrl
dec
jno
cmp
pop
sti
cmp
divb
xchg
adc
jns
insl
dec
cmp
inc
add
inc
in
inc
pop
fcmovb
scas
cmp
pop
inc
xchg
lds
out
add
sub
mov
mov
sti
sbb
icebp
cmp
add
add
add
xor
jb
jae
out
mov
pop
testb
add
add
cmp
mov
jl
push
stc
and
mov
push
pop
and
sbb
jle
cmp
fcomps
jne
sub
das
pop
mov
or
sbb
loopne
in
jbe
jo
dec
rcl
mov
xchg
and
jns
lods
nop
das
mov
loopne
inc
mov
inc
cmp
in
jb
pop
push
cmp
sub
jne
sub
pop
data16
add
aaa
mov
idivl
inc
adcb
adc
xchg
mov
cs
pop
pop
lcall
pop
push
pop
mov
xor
out
in
les
pop
pop
jle
mov
test
andb
std
cli
lock
les
and
test
dec
and
mov
inc
sub
mov
xchg
movsl
outsl
xchg
cmp
stos
add
xor
or
add
and
lods
sbb
outsb
orl
mov
mov
add
add
ds
in
idivl
js
mov
pop
scas
daa
daa
pusha
testl
add
adc
inc
repz
and
pop
or
xor
rorb
sub
mov
lret
push
sub
loop
test
inc
call
push
shlb
scas
or
in
xchg
mov
mov
iret
push
ljmp
mov
and
cmp
xchg
lret
jo
gs
xchg
iret
aaa
idivb
subb
push
push
adcl
out
sbb
sahf
sbb
icebp
sti
mov
push
cmp
aaa
and
push
popa
add
jecxz
cmp
adc
das
orl
dec
clc
push
mov
xchg
jbe
icebp
mov
aas
subl
push
pop
nop
mov
push
add
push
sti
add
inc
jg,pt
xchg
pop
cwtl
push
inc
xchg
test
inc
xor
lret
xor
sti
pop
lret
jae
loopne
sbb
push
fwait
idivb
es
cmp
add
pop
es
inc
cli
aas
into
lret
dec
push
adcl
add
add
add
xchg
and
add
fisttpll
cmpl
adc
das
out
in
rol
sub
xor
insl
mov
je
mov
js
dec
ja
push
fldl
aam
cmpb
mov
fadds
inc
sub
sbb
arpl
mov
out
xchg
and
dec
push
sbb
lret
and
arpl
inc
dec
clc
mov
ds
and
jmp
inc
lds
and
call
lcall
fs
js
cld
cli
push
add
ds
subl
cwtl
cwtl
mov
sbb
out
mov
push
jmp
fcoml
das
decl
jns
les
xchg
mov
push
negb
xchg
test
xchg
leave
ret
lds
jge
adc
cmp
aaa
jg
in
push
or
ds
jl
push
mov
lcall
pusha
push
add
add
lahf
jbe
mov
cld
test
js
fnstsw
shl
dec
pop
mov
cmp
jb
mov
mov
jmp
pop
mov
pushf
pop
leave
mov
push
mov
sbb
xchg
sub
lcall
dec
into
iret
push
pop
push
lods
into
pop
cmp
xchg
ret
adcl
out
lods
outsl
pop
sub
lcall
sahf
sahf
mov
add
popf
stos
xchg
push
sbb
jl
mov
inc
shrl
mov
sub
xchg
push
xlat
es
aad
inc
pushf
mov
push
mov
mov
or
mov
insl
aas
mov
stc
xchg
lock
jmp
pop
cmpsb
aas
and
cmp
ja
out
lret
push
cld
sti
or
outsb
test
push
lods
daa
pop
into
in
sbb
xor
mov
sbbl
cmp
pop
pop
fsubl
popa
sub
add
add
jae
cltd
dec
mov
jno
shlb
insb
cli
add
add
add
movsl
enter
push
rclb
call
or
add
jle
icebp
test
cltd
mov
add
mov
jp
adc
or
int3
pop
mov
inc
fists
subl
jb
movl
pop
int3
fisubl
arpl
out
mov
push
cmc
pusha
mov
mov
int
jl
out
arpl
js
add
nop
jbe
mov
xor
fs
movsl
lods
adc
dec
xor
pushf
push
push
mov
daa
adc
sub
popf
clc
inc
iret
inc
movsb
xchg
lret
pop
sbb
add
stos
mov
into
arpl
out
adc
adc
adc
pop
jns
pop
in
fiadds
mov
mov
orl
xchg
xchg
addl
dec
mov
aad
cmpsb
aam
ret
bound
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
xchg
es
mov
add
add
push
das
mov
imulb
jmp
push
or
xchg
arpl
cmp
jb
push
dec
adc
shll
das
jbe
hlt
or
stos
xchg
faddp
shrl
jnp
je
js
sub
pusha
xor
rcrl
push
in
lcall
ret
or
xlat
dec
fcmovbe
sbb
call
dec
xchg
dec
enter
rolb
pop
cmpsl
lock
out
stos
xor
xor
lods
dec
mov
cli
push
lret
xchg
js
ljmp
outsb
push
adc
and
add
xchg
xlat
inc
xchg
mov
and
ja
xor
push
lds
aam
fimuls
sbb
lock
sub
das
icebp
cmovnp
out
inc
jns
pop
and
mov
cmp
out
jg
aaa
adc
cmp
add
out
push
jle
daa
repnz
jae
jno
test
jg
push
pop
push
mov
je
add
add
add
ss
movsl
sbb
rcrl
sbb
and
loop
imul
roll
xlat
loopne
int3
and
iret
mov
mov
sbb
and
adc
sub
fmuls
stos
mulb
sub
addl
and
test
mov
push
lock
xchg
test
fs
aas
fistpl
pusha
movsl
sar
lock
push
push
addl
outsl
pop
lcall
mov
rol
push
ljmp
or
jno
loop
test
mov
xor
pop
ljmp
popa
sti
adc
sub
jb
pop
orl
jle
lock
jmp
push
xor
cltd
pop
mov
movsb
fmul
push
aam
and
push
inc
cld
mov
bound
jmp
and
ja
and
mov
add
movsb
push
in
cmc
jne
sbb
js
dec
enter
add
add
add
aaa
pop
dec
int
mov
movsl
sbb
cmp
mov
push
cwtl
cmp
je
mov
aam
mov
cmpsb
and
jl
sbb
lcall
out
out
ret
lret
icebp
and
mov
out
leave
rorb
jno
xchg
mov
rolb
mov
sub
push
loope
jo
aad
int3
jle
add
subb
add
shlb
push
popa
les
adc
out
xor
mov
ljmp
gs
leave
push
add
in
xchg
cmp
add
push
mov
push
ss
test
ret
inc
push
mov
subb
pop
sar
add
inc
xor
cmp
push
sbb
in
movsl
mov
mov
inc
mov
push
jmp
xor
aaa
cltd
sbb
mov
inc
cmc
test
mov
add
add
out
shlb
aas
out
int3
mov
jle
cld
loop
incb
add
add
add
ja
je
stos
aad
add
or
mov
or
jo
cmp
mov
stos
aad
popa
and
push
sub
sub
lea
fdivl
xchg
pop
inc
xchg
mov
fisubrl
add
sub
lret
test
cmpsl
lock
pusha
inc
jg
pop
mov
lods
cli
mov
rcrl
std
pop
mull
jne
jp
ds
mov
inc
xchg
add
lods
sbb
aad
sub
test
lret
cmp
cmp
nop
cmp
xchg
pop
ret
adc
mov
cmpl
sbb
inc
inc
mov
int3
pusha
sub
or
cli
or
push
outsl
mov
aad
jp
repz
cmp
fimuls
mov
icebp
imul
push
in
insb
lock
sbb
sbb
cmpxchg
stc
and
bound
les
roll
sahf
aad
add
add
mov
lcall
mov
cmp
add
add
mov
stc
insb
sbb
ljmp
xchg
fs
sbb
xor
add
js
lret
inc
lahf
pushf
loop
fnsave
repz
addl
mov
mov
loope
scas
jl
sub
cmpsb
loop
sub
gs
mov
leave
pop
arpl
fldcw
pop
xchg
pop
add
mov
fadds
push
je
pop
cmp
xchg
push
adc
xchg
lahf
les
and
lods
mov
cmc
jne
sbb
push
stos
or
in
cmp
popf
sti
xlat
cltd
sbb
jnp
mov
sbb
mov
jecxz
cmpsb
adc
mov
mov
inc
imul
jle
sub
test
les
add
loope
adc
jae
inc
jle
push
mov
sbb
in
xchg
inc
scas
mov
test
add
ret
bnd
cmc
inc
stos
repz
fsubl
movsb
test
add
add
add
rcrl
mul
sub
dec
cmp
nop
mov
std
push
pop
dec
push
rcrb
add
pxor
inc
imul
dec
pop
xchg
push
dec
fnstenv
in
xchg
pop
nop
lret
pop
fisttps
popa
mov
in
into
loopne
pop
cwtl
imulb
aad
pop
lahf
xchg
push
push
push
pop
push
loop
pop
sbb
mov
arpl
cld
scas
jge
lods
xchg
sbb
dec
xor
sahf
movsl
out
mov
outsl
stos
push
nop
in
xor
stc
xor
mov
xchg
in
push
mov
dec
sub
sbb
mov
pop
shll
lods
in
sbb
push
dec
ss
lahf
enter
ds
jns
sarl
sahf
scas
mov
pusha
jb
push
xchg
fsubrs
stos
push
jle
push
or
lret
call
add
xchg
fidivl
hlt
mov
lods
fcomps
outsl
sub
data16
sub
fcomip
mov
add
add
std
aaa
mov
shll
testb
add
loope
sti
mov
lcall
and
loop
movsl
sahf
enter
icebp
imul
mov
cmp
dec
add
scas
cmp
rorl
xchg
idivl
imulb
xchg
inc
jb
lods
aaa
into
xchg
in
filds
repz
xor
fiaddl
pop
sub
mov
inc
mov
arpl
sub
sub
adc
shr
sbb
sahf
or
imull
lret
adc
je
mov
and
inc
into
repnz
fcmovu
je
jmp
mov
inc
push
jecxz
mov
mov
fs
fsts
mov
mov
add
out
pop
ror
mov
and
repz
lahf
test
mov
sbb
push
mov
call
adc
rolb
and
or
xchg
shrb
or
and
insl
aam
mov
scas
add
cmpsb
rcrb
add
add
dec
mov
aas
mov
mov
cmc
fcoms
fs
out
popa
andb
lods
cwtl
mov
push
decb
xchg
sahf
pop
adc
rcrb
mov
push
pop
and
jg
outsl
lret
mov
clc
cmp
lods
pop
adcl
repnz
or
dec
mov
test
dec
in
stos
repz
push
sldt
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
push
mov
inc
xchg
jno
sbb
add
add
jns
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
